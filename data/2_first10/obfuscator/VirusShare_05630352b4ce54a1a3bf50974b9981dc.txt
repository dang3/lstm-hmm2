inc
xor
cmp
xor
xchg
xor
push
int3
xor
or
and
inc
aas
popf
ja
out
dec
das
adcl
pop
mov
inc
jmp
push
push
sbb
out
arpl
jmp
je
iret
es
test
pop
or
loop
dec
xchg
adc
sub
clc
pop
adc
and
leave
or
mov
pop
adc
int
xchg
loop
cmpsb
dec
test
jmp
test
in
sub
insl
pop
movsb
sahf
inc
sbb
cmpsb
xor
sub
addr16
adc
sub
out
dec
fdivr
and
shr
jecxz
push
lahf
dec
dec
and
add
ja
cld
push
inc
adc
jg
push
add
lods
adc
stos
xchg
insb
insb
aam
jne
sti
loopne
idivl
mov
data16
or
cld
add
jg
add
dec
insl
popa
addr16
imul
popa
je
add
add
mov
stos
jmp
add
push
imul
outsl
insl
inc
inc
add
adc
add
push
clc
jmp
stc
jmp
add
dec
jae
push
popa
imul
je
jo
gs
bound
arpl
add
push
push
inc
inc
gs
popa
jae
inc
jb
outsl
jb
movl
pusha
push
lea
jns
pusha
pushl
popl
pushf
push
pushf
pushl
ret
add
inc
gs
imul
imul
jns
add
mov
mov
add
sbb
inc
pop
sbb
mov
rclb
mov
aad
xchg
add
lea
mov
inc
lcall
fmuls
adc
push
ja
pop
dec
mov
addr16
pop
fisubrs
pushf
lock
lret
pop
test
sbb
xchg
add
enter
loope
push
pushf
cmp
pop
addr16
loopne
push
xor
adc
outsl
inc
and
divb
fsubl
xchg
xor
data16
push
xlat
leave
push
out
lea
les
repz
mov
add
push
je
imul
fld
bound
push
fstl
cmp
cltd
inc
sbb
lahf
mov
add
or
in
insb
loop
jge
mov
dec
pop
adc
cltd
push
test
movl
cmp
bswap
shrd
mov
sub
clc
cmp
je
call
mov
call
add
dec
insl
popa
addr16
imul
insb
popa
arpl
jmp
sbb
cmc
lea
sub
clc
push
sub
btr
push
cmp
rcl
xor
lea
jmp
clc
add
pushf
call
add
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
sahf
and
inc
mov
inc
setg
rcl
mov
ror
xor
jmp
pusha
pushf
mov
cmp
cmp
bt
push
add
clc
jmp
pushl
setge
not
lods
jmp
sbb
sbb
clc
mov
movb
not
not
bt
add
neg
mov
dec
pop
lea
add
not
mov
call
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
lcall
cld
popl
bswap
call
pop
push
movsbw
movsbw
push
lea
pusha
movl
pusha
pushf
mov
mov
pushf
pushl
ret
cmpb
jno
push
pushl
pusha
lea
jne
and
cmc
mov
clc
pushf
test
clc
add
cmc
test
jmp
add
push
imul
jne
jb
add
mov
and
dec
and
pop
lea
push
call
add
push
outsb
push
gs
js
gs
imul
gs
push
lea
call
pusha
pusha
pushf
pushl
adc
jmp
add
push
gs
imul
bound
gs
add
sub
bsr
mov
push
call
mov
call
jmp
add
inc
gs
imul
imul
add
push
arpl
outsb
push
outsl
inc
insb
imul
mov
andl
pushf
lea
lea
jno
pushf
lea
call
jmp
add
inc
gs
gs
je
jo
imul
add
insl
jo
jb
push
je
imul
and
call
pushf
jmp
add
inc
imul
dec
gs
popa
addr16
add
fs
jae
or
call
add
inc
jb
ja
arpl
add
test
pop
and
inc
bt
mov
cmc
call
cmc
push
pusha
cmp
test
push
push
call
add
push
jb
outsb
jae
popa
je
dec
gs
popa
add
add
je
jne
jae
jb
push
cmp
pusha
pushf
lea
jae
rcl
mov
neg
rcl
mov
jmp
mov
lea
not
not
sub
pushf
movsbw
setg
lea
mov
xchg
lea
setno
mov
lea
not
setnp
call
pushf
lea
je
push
clc
cmp
jmp
pushf
stos
mov
lea
jmp
aam
not
mov
xor
btr
aaa
stc
mov
mov
bswap
test
aas
cmp
bswap
mov
call
adc
jmp
add
push
popa
je
insb
je
add
push
jb
arpl
outsl
jo
jo
outsb
jne
pop
mov
push
pusha
movb
lea
jb
and
cmp
setg
bswap
mov
call
add
push
imul
outsl
insl
push
outsl
imul
enter
movb
jmp
add
add
pop
add
icebp
pop
add
sbb
add
ds
sbb
add
add
sbb
add
sbb
add
icebp
pop
add
sbb
add
add
xor
add
icebp
pop
add
add
and
add
add
add
sub
xor
int3
sbb
add
lea
add
sbb
add
add
xor
add
icebp
pop
add
push
xor
add
push
xor
add
mov
add
pop
xor
add
pop
xor
add
adc
add
add
sub
stos
lods
pop
add
pop
xor
add
pop
xor
add
pop
xor
add
xor
add
add
add
add
add
icebp
pop
add
add
push
push
movw
push
lea
jmp
add
push
gs
outsl
jbe
dec
outsb
jne
movzbw
movzbl
mov
pushl
pusha
call
add
add
add
dec
insl
popa
addr16
imul
add
add
jb
insb
insb
push
imul
fs
ja
not
xchg
pushf
mov
bswap
jmp
add
inc
jb
popa
je
push
push
add
scas
add
add
insb
and
lea
je
cmc
add
test
cmc
cmp
jmp
add
inc
gs
jb
jbe
je
push
jb
imul
imul
and
or
sub
and
jne
cmp
lea
mov
clc
pushf
test
add
call
add
push
gs
dec
push
xor
add
inc
push
ja
jb
add
mov
pusha
shl
add
mov
setb
lea
movzbl
lea
jmp
push
pop
push
jns
dec
jae
fldl
mov
clc
and
adc
xchg
stos
xchg
pop
inc
mov
push
or
xchg
jmp
repnz
mov
dec
lods
movb
push
mov
clc
lcall
and
rclb
cli
lret
jle
mov
rcll
in
pop
adc
fbstp
dec
mov
xchg
jb
and
inc
or
push
cld
xor
pop
les
add
mov
mov
pushl
popl
bt
test
cmp
pushf
pusha
call
add
dec
jae
arpl
jo
jns
pushf
push
lea
je
pushf
movb
bt
add
call
lea
pushf
cmc
xchg
pop
dec
mov
jmp
cmp
push
pusha
pushf
pushf
sbb
bt
mov
mov
jmp
pushf
mov
bswap
pop
pusha
pushf
pushl
mov
pushl
ret
pusha
movb
adc
clc
call
push
pusha
pusha
xchg
call
pushf
pushf
dec
push
pushf
pushf
lea
jne
shr
mov
call
add
add
dec
push
or
bsf
bswap
mov
shr
btr
sub
not
clc
aad
inc
push
aad
cmp
aaa
push
jmp
add
jae
outsb
add
add
gs
outsb
imul
imul
gs
imul
popa
arpl
outsb
je
add
push
gs
jne
jb
push
popa
insb
jne
inc
add
test
and
pushf
bt
cmp
add
pusha
movb
lea
jmp
add
inc
gs
gs
imul
lea
je
ror
test
bswap
mov
add
rcl
add
test
adc
mov
test
bt
test
call
add
dec
insl
popa
addr16
imul
add
add
arpl
je
call
add
dec
jae
arpl
insb
gs
je
jb
out
mov
push
push
pusha
mov
mov
js
push
cmc
xor
sub
mov
jecxz
lock
mov
test
xor
jp
out
jnp
ret
scas
mov
aaa
aam
fidivrl
in
sub
ss
fists
xchg
inc
push
mov
xor
add
into
mov
or
in
aas
inc
sbb
iret
or
neg
stc
sub
and
xchg
xor
inc
mov
jno
push
lea
mov
insb
daa
hlt
subb
inc
inc
mov
pop
push
fisubs
push
out
pop
pop
cmp
popa
das
jne
into
dec
jnp
ret
or
mov
lret
sub
mov
imul
mov
stos
fdivrl
rcrl
sti
addr16
incl
sbb
sbb
imul
sarb
inc
mov
cmpb
sbb
imul
dec
pop
sub
and
xor
lds
jl
fnsave
xchg
xor
fcompl
in
mov
fstpl
and
insl
xchg
jo
int
adc
faddl
cmp
inc
repnz
lods
jle
cltd
adc
inc
mov
pop
fsubl
and
cli
arpl
pop
fs
addr16
jno
inc
mov
vphaddubw
call
mov
push
es
mov
cmpsb
push
push
cs
mov
or
fnstenv
or
cmp
mov
lea
call
stc
stc
mov
pushf
clc
stc
clc
cmp
pushf
mov
pusha
lea
jb
stc
mov
sete
sub
cmp
shrd
mov
cmp
push
shr
call
add
add
mov
push
add
je
aaa
xchg
cltd
add
add
add
add
popa
addr16
imul
imul
mov
shl
lea
call
pop
ret
sub
bt
stc
call
lea
jb
shld
movzbl
ror
shr
bswap
btr
stc
imul
neg
ror
lea
xor
push
push
bts
shl
mov
xchg
mov
movzbw
mov
cmp
stc
clc
cmp
pushf
pushf
pushl
lea
jb
call
xor
cmp
cmp
clc
test
mov
mov
push
pushf
push
lea
je
movsbw
jmp
call
jbe
jb
imul
add
and
mov
cmc
pushf
test
repnz
pushf
pushl
jmp
add
inc
jb
popa
je
inc
outsb
push
inc
imul
movl
pusha
lea
jmp
add
inc
jb
gs
gs
jne
arpl
or
pushf
mov
and
mov
add
mov
ss
xor
cmc
pop
jle
adc
data16
push
fwait
xor
push
test
sbb
popf
inc
mov
xchg
pop
dec
ss
sub
leave
test
jnp
adc
scas
mov
sarb
div
add
xlat
lret
mov
sbb
js
sbb
sub
lret
mov
xor
inc
push
or
add
jle
ljmp
pushf
test
mov
inc
cmp
test
adc
imull
loopne
clc
into
adcw
or
lret
jno
call
pop
subl
and
std
aam
ja
hlt
cmp
inc
int3
out
popa
shll
movsb
fstps
lds
stos
nop
movsl
xor
adc
or
or
bound
jmp
movb
dec
out
call
pop
or
ss
out
pushf
fdiv
and
fsts
fiaddl
sub
cmp
cmp
std
adc
daa
pop
push
mov
repz
test
fildl
xchg
xor
sbb
pushf
shll
cmp
das
or
subb
mov
cmp
lds
push
loope
int3
push
lods
aas
scas
insl
in
push
out
leave
fmuls
mov
lret
mov
sub
not
push
mov
push
pushf
lea
je
jmp
jmp
pushf
xor
push
test
pusha
call
cmc
test
pusha
mov
xor
mov
mov
clc
movw
test
mov
not
mov
movb
lea
je
pushf
lahf
mov
jmp
test
push
dec
push
neg
rcr
daa
aam
push
jns
rcr
daa
cmc
push
bts
rcl
clc
movsbw
mov
call
clc
cmp
pusha
lea
ja
stc
call
add
inc
gs
imul
jae
jmp
pusha
jmp
jmp
pushf
pushf
jmp
sub
pushl
stc
bt
pushl
popl
cmc
bt
cmp
jmp
add
inc
jb
ja
gs
inc
add
bswap
mov
movzbl
mov
not
bswap
sets
push
lea
push
push
lea
call
setl
setne
mov
jmp
not
movzbw
mov
mov
pusha
call
add
dec
outsl
arpl
inc
jb
add
lret
dec
mov
jmp
add
inc
gs
outsb
push
inc
imul
pushl
call
xchg
mov
or
fsubr
out
xor
dec
outsb
stos
mov
es
dec
dec
xchg
jp
xchg
andl
cmp
inc
jae
dec
add
and
adcb
cld
insb
push
mov
jmp
les
mov
jae
mov
lret
jmp
dec
shll
ljmp
daa
mov
shl
lret
sbb
insb
in
ret
mov
and
das
out
mov
das
loopne
sti
mov
sub
add
inc
gs
gs
jo
popa
je
inc
add
add
outsl
jae
inc
outsb
push
inc
imul
inc
jb
insl
gs
jb
arpl
add
insb
jae
jb
outsb
inc
add
scas
clc
pop
pushl
pushf
movb
mov
movl
pushf
lea
jmp
add
inc
gs
jne
jae
jb
outsl
jae
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
inc
add
aam
lcall
add
not
bswap
mov
pop
pushf
pushf
pushf
lea
call
add
inc
push
inc
imul
gs
imul
stos
mov
movb
mov
pushl
lea
je
pusha
lea
jmp
add
insb
jae
jb
jo
inc
add
test
mov
lea
movb
lea
bswap
mov
pushf
lea
pusha
movl
call
add
push
gs
insb
imul
inc
popa
je
add
add
je
gs
arpl
popa
jo
add
inc
cld
pusha
pushf
pushl
pushf
mov
lea
mov
pop
lahf
movl
mov
lea
movb
push
pushf
jmp
imulb
popa
fmuls
mov
mov
out
adc
stc
shl
insl
or
xor
faddl
jae
and
stc
pop
lret
mov
fdivrl
mov
lcall
jb
mov
daa
xchg
out
int
stos
movsl
sub
add
jp
jns
dec
imulb
pop
push
mov
mov
add
push
gs
arpl
pop
cwtl
lea
push
movzbw
lea
jmp
lea
jb
jno
bt
xor
stc
test
test
jmp
add
jb
arpl
add
inc
jb
popa
je
inc
dec
inc
imul
ret
inc
cmp
add
andb
and
pusha
lea
jb
mov
bsf
aam
mov
btr
shl
jmp
cmp
sub
pop
pushf
movsbw
lea
pushf
call
lea
jae
pushf
cmc
sub
setl
not
lea
pusha
lea
jge
call
bts
sbb
add
bswap
shld
inc
xadd
pop
cmc
sbb
pushf
mov
call
add
push
jb
outsb
jae
popa
je
dec
inc
dec
push
jns
inc
arpl
insb
add
fs
call
pusha
pusha
lea
jb
rcl
rcl
aas
cwtl
movzbl
cmc
pushf
jmp
bt
cmpb
pusha
mov
lea
jne
inc
sbb
xor
add
mov
push
cmc
add
jmp
add
inc
jb
ja
outsb
jne
popa
jb
add
push
jb
addr16
inc
inc
jb
insl
inc
dec
push
dec
inc
add
rclb
loopne
inc
and
test
cmc
mov
cmp
call
cmc
movb
mov
mov
clc
cmp
stc
cmp
pusha
jmp
add
dec
jae
push
pushl
pushf
mov
pushf
movw
pushl
lea
jmp
add
dec
outsb
je
jb
arpl
imul
lea
movb
movw
pushl
lea
call
pusha
call
movl
jns
push
push
movb
pusha
push
lea
jmp
cmpsb
call
sbb
xchg
popa
lahf
pop
push
outsb
imul
xchg
sbb
test
mov
cmp
mov
push
add
mov
lret
or
xchg
cmp
daa
inc
and
imul
push
inc
pusha
add
xor
icebp
rclb
test
adc
jb
push
xchg
inc
mov
jecxz
fcoms
dec
shrb
mov
lea
call
jmp
add
dec
gs
popa
addr16
gs
call
add
inc
gs
outsl
arpl
push
imul
imul
imul
inc
outsl
jb
popa
je
add
add
insb
insb
dec
gs
dec
outsl
outsl
imul
add
inc
gs
bound
arpl
add
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
push
add
orl
pop
add
lret
cmp
mov
jmp
add
push
gs
imul
outsb
add
add
je
arpl
gs
imul
add
insb
insb
push
arpl
sbb
call
add
push
popa
imul
add
inc
loopne
neg
pusha
mov
dec
shl
shl
pushf
mov
movzbw
push
mov
mov
mov
sub
pushf
mov
movsbw
pop
mov
add
and
bsr
sub
sar
shrd
pushl
dec
and
not
mov
cmc
stc
shl
cmp
clc
pushf
add
call
stos
fstp
out
int3
mov
mov
shrl
ljmp
roll
das
scas
sub
insb
sbb
aas
lcall
pushf
inc
xchg
jg
sarb
push
inc
add
pop
aas
loop
xor
add
mov
nop
jns
dec
mov
aas
or
addr16
mov
loop
sub
stc
ror
push
btr
mov
or
sub
pusha
pop
cwtl
pop
lea
call
add
dec
jne
inc
imul
mull
into
mov
or
btc
sub
and
pop
mov
cmp
cmc
sub
call
add
inc
outsb
popa
bound
arpl
insb
insb
inc
popa
jb
inc
jb
inc
push
sbb
addl
push
dec
insb
dec
subl
cltd
icebp
out
mov
dec
popa
jno
daa
xlat
sbb
jle
test
pop
mov
mov
je
cmp
push
or
jmp
pop
inc
mov
inc
shr
adc
sub
std
and
mov
pop
iret
ja
lret
sbb
mov
cltd
jb
incl
in
fstpl
xor
test
pop
dec
fwait
fwait
sbb
in
cltd
arpl
scas
push
mov
inc
mov
sbbl
js
mov
leave
push
repnz
lock
sub
xchg
dec
mov
inc
adcb
and
pop
into
xchg
adc
push
xor
jae
sub
or
pushf
inc
scas
sub
inc
in
call
push
mov
mov
jle
jo
hlt
push
xchg
xor
cmpsl
cltd
mov
into
int
dec
sahf
scas
testl
or
in
dec
adc
inc
loopne
movsl
add
daa
xlat
xchg
jp
shrb
imul
xor
int
lods
bound
jp
lret
mov
jo
mov
sbb
ljmp
imul
addr16
js
add
push
insb
popa
jns
outsb
push
inc
imul
je
jae
jb
gs
jne
je
inc
dec
inc
add
inc
and
mov
lea
ja
jmp
movsbw
lea
pusha
movsbw
mov
lea
not
lea
pop
jmp
add
mov
bts
adc
lea
mov
shr
cmp
mov
shl
pusha
mov
cmc
cmp
rcl
sub
movsbw
dec
rcr
shrd
mov
sar
dec
mov
aad
sub
adc
bt
and
not
mov
call
add
push
gs
arpl
insb
insb
push
outsl
jae
add
inc
jb
popa
je
dec
outsb
jne
push
movl
pushl
popl
push
pushl
ret
call
pushf
pushf
lea
jae
shrd
shr
push
shrd
mov
rol
and
mov
sub
and
sbb
or
mov
call
add
inc
gs
imul
outsb
addr16
add
add
je
imul
add
add
je
jne
jb
outsb
je
outsl
jae
je
outsl
outsb
inc
js
add
push
gs
popa
jo
jne
gs
fs
dec
sub
add
push
gs
insl
gs
push
add
add
jbe
insb
imul
je
mov
inc
call
lea
jg
pushf
mov
push
pusha
pusha
push
lods
jmp
movzwl
test
not
mov
test
test
add
jmp
jmp
add
inc
gs
gs
dec
outsb
jne
mov
movb
call
mov
ja
dec
lahf
lods
and
pop
push
xor
and
or
mov
lock
mov
clc
popa
cmp
inc
pop
pop
hlt
push
lret
push
int3
stos
sub
push
or
mov
mov
pop
pop
ficompl
call
or
ds
pop
rorb
repnz
mov
or
and
sub
aas
push
scas
std
fbld
cmp
jno
mov
stc
inc
mov
sti
mov
mov
ss
cs
fs
mov
push
in
jp
pop
mov
mov
mov
and
jne
lea
neg
pusha
mov
pusha
push
not
btc
sub
sbb
lea
call
add
inc
gs
gs
inc
inc
add
add
popa
bound
outsb
jne
je
insl
add
out
stc
adc
fisttpll
and
pushf
call
pushf
call
add
inc
gs
imul
lea
jne
pushf
movw
pushf
pushl
mov
pushl
pushl
pusha
pushf
mov
call
add
inc
outsl
inc
gs
insb
popa
jae
dec
bound
arpl
bsf
mov
pushf
sub
add
movzbw
mov
cmc
and
add
jmp
add
dec
insl
popa
addr16
imul
outsl
jbe
add
add
je
outsl
jns
arpl
add
push
sbb
fs
je
cmc
sub
cmp
cmp
cmp
pushf
mov
pusha
lea
ja
push
pushl
imul
call
add
dec
outsl
arpl
gs
jne
arpl
add
inc
gs
imul
arpl
movzbl
not
movb
lea
movsbl
pushf
movzbl
mov
lea
lea
jmp
fs
cs
cli
mov
adc
lahf
inc
adc
data16
push
pop
orb
pop
xchg
icebp
mov
jns
dec
sbb
mov
hlt
orb
inc
add
and
lods
addr16
jo
adcl
sub
mov
test
add
std
pop
push
sub
test
shll
cmpsl
xchg
repnz
mov
cmp
fwait
dec
loop
ret
or
lock
imul
cmc
jb
aaa
and
jp
jge
push
or
adc
mov
push
popa
jno
into
sbb
lahf
mov
mov
not
lahf
lea
pusha
movb
pusha
movl
pushf
call
jmp
add
push
gs
imul
jae
add
push
gs
jb
jae
dec
jb
inc
js
add
inc
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
add
arpl
outsl
arpl
je
add
inc
imul
outsl
ja
js
add
sbb
pushf
call
add
inc
jb
popa
je
dec
popa
insb
data16
outsb
gs
popa
insb
gs
add
fstpt
and
add
push
popa
imul
insb
gs
bound
arpl
les
sub
call
test
call
add
inc
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
jmp
add
inc
gs
imul
outsl
outsb
dec
outsb
outsw
push
imul
xor
sbb
pusha
movb
push
push
lea
mov
lea
jmp
leave
fcomip
roll
leave
mov
outsb
xchg
pushf
fmulp
mov
push
and
inc
mov
mov
and
dec
stos
mov
int3
insb
jl
pop
inc
mov
sbb
xlat
inc
mov
ret
sub
dec
mov
xchg
fisttpll
inc
pop
xor
jns
cmp
mov
cmp
test
shl
pushf
test
add
push
jmp
pop
cs
dec
sbbl
ja
lea
popa
ficoms
pop
add
mov
mov
and
into
pop
xchg
push
in
jecxz
mov
mov
int3
inc
or
sub
aam
loop
xchg
sub
ret
rcl
mov
jno
pop
pop
ret
mov
test
arpl
mov
xchg
out
loope
jge
mov
inc
inc
jae
add
icebp
mov
dec
jecxz
icebp
push
sbb
inc
xchg
inc
fbstp
lods
out
push
out
aaa
xchg
jb
mov
sarl
sbbl
dec
sub
cmp
movb
lea
jb
bsr
add
btr
mov
lea
sar
btr
mov
bt
clc
clc
pusha
shr
mov
call
add
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
push
xchg
sub
repnz
xor
insl
lods
mov
std
dec
orb
sarl
jbe
mov
cmp
push
push
cmp
scas
rcll
popa
inc
std
mov
mov
sub
call
add
inc
outsl
push
popa
jae
dec
gs
inc
jb
add
bt
test
cmc
cmp
pushf
movb
pushf
pushl
lea
jmp
add
push
gs
imul
outsl
jb
add
rcl
mov
movb
stc
mov
stc
or
jmp
add
dec
outsl
popa
fs
je
imul
push
gs
jb
popa
je
dec
gs
js
add
clc
cmp
call
pushf
pusha
push
lea
jb
test
cmpb
pushf
push
push
movb
lea
jne
xor
jmp
pusha
pushf
pushf
mov
pushf
lea
jmp
add
inc
gs
imul
add
dec
outsb
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
add
push
gs
imul
outsl
outsl
imul
add
add
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
arpl
arpl
xor
fs
insb
add
sbbl
decl
test
dec
push
mov
pushf
add
call
setl
bt
add
rcl
mov
ror
sbb
call
pushf
mov
pusha
lea
jmp
add
inc
gs
je
arpl
bound
arpl
push
cs
or
lods
sbb
repnz
int3
sarl
ds
ss
test
or
mov
and
or
orl
mov
jo
mov
push
lret
sarl
jbe
jp
enter
loopne
adcl
daa
mov
sbb
push
shll
ja
dec
mov
push
sti
inc
mov
lcall
add
lret
divb
mov
dec
loop
ret
add
in
push
outsb
stos
divb
mov
cmc
bound
inc
jge
pop
or
pop
lds
shlb
push
popa
jno
into
or
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
sbb
testl
lret
leave
fdivrp
sbb
mov
add
lcall
ret
add
daa
leave
xchg
xor
cmpb
or
xlat
adc
pop
xchg
inc
jmp
and
sub
mov
or
ljmp
pop
clc
aam
push
push
aaa
jge
dec
xchg
sbb
rcl
inc
cltd
adc
scas
movsl
push
iret
mov
imul
push
shrb
mov
pop
jne
ds
mov
cld
testl
outsl
insl
ja
fsub
xor
mov
lret
cmp
outsb
lret
test
sub
xchg
add
pop
nop
add
mov
jnp
jnp
fucomp
insb
mov
mov
jl
sub
adc
or
fdivrs
or
scas
movsb
xchg
mov
push
push
push
push
dec
es
add
andb
push
mov
dec
or
pusha
push
xchg
and
andb
jg
dec
scas
movsb
fsubrl
fadds
or
lds
dec
mov
gs
or
sti
jp
cmp
jecxz
hlt
or
xchg
jmp
jle
inc
mov
pop
mov
or
iret
mov
add
inc
movsl
inc
fcoms
and
call
push
fimull
cmp
mov
int3
icebp
out
jecxz
pop
pop
push
cmp
mov
cmc
mov
mul
aas
inc
int
sub
pop
into
xchg
arpl
jno
inc
stos
insb
sub
rcr
or
scas
test
jg
ficompl
pop
mov
push
inc
roll
scas
jg
ljmp
pop
sbb
xchg
or
ficompl
sub
or
xlat
or
rcrl
dec
rorl
jle
inc
add
sbb
jle
in
dec
test
mov
mov
push
pushf
movw
pushl
pushl
ret
call
lea
jb
bt
cmp
push
mov
pushl
pushf
pushl
lea
jb
bsf
dec
shrd
jmp
test
test
cmc
sub
pushf
mov
jmp
add
push
gs
arpl
imul
dec
dec
or
je
add
movl
and
jmp
clc
bt
push
add
movb
pusha
lea
jmp
add
adc
pop
add
mov
xor
or
pop
add
add
inc
pop
add
cltd
pop
add
repz
add
adc
add
adc
add
push
pop
add
pop
add
xor
add
dec
pop
add
pop
add
repz
aas
cmp
inc
cmpsl
pop
add
xchg
pop
add
pop
add
pop
add
sub
subb
sub
xor
mov
xor
add
icebp
pop
add
sub
fistps
pop
add
adc
add
cmp
mov
pop
add
add
add
xor
add
mov
add
add
add
test
add
cmp
clc
movsl
pop
add
add
add
sub
add
pop
add
add
add
mov
pop
add
cmpsl
pop
add
add
add
test
add
cmp
popa
and
jae
xor
add
add
add
add
add
pop
add
repz
add
mov
add
adc
add
dec
pop
add
pop
add
pop
add
add
hlt
xor
or
add
lahf
pop
add
pop
add
or
add
pop
add
sub
sbb
pop
add
pop
add
sysexit
add
cmp
mov
pop
add
fistps
mov
xor
xchg
pop
add
inc
pop
add
ficoms
inc
push
pop
add
pop
pop
add
xor
add
pop
add
sti
xor
sti
repz
add
xor
add
inc
pop
add
pop
add
xor
add
pop
add
fwait
pop
add
cmp
pop
stc
xor
inc
cmpsl
pop
add
xchg
pop
add
or
add
pop
add
adc
add
aas
pop
add
sbb
pop
add
das
pop
add
push
pop
add
xchg
pop
add
xor
xor
loopne
xor
add
adc
add
pop
add
cmc
pop
add
pop
add
sub
mov
pop
add
mov
pop
add
mov
xor
fwait
icebp
pop
add
add
and
pop
add
add
xor
mov
pop
add
add
add
xor
add
add
add
out
pop
add
cmp
xor
xor
add
mov
repz
pop
add
stc
xor
add
add
pop
add
adc
add
adc
add
repz
add
pop
xor
add
xchg
ds
xor
fistpl
ds
lods
pop
add
inc
pop
add
add
dec
pop
add
pop
add
pop
add
pop
xor
add
hlt
xor
cli
cltd
add
pop
add
pop
add
adc
add
add
or
add
pop
add
add
add
adc
add
mov
add
xor
add
mov
dec
fwait
pop
add
leave
pop
add
mov
pop
add
push
xor
add
inc
pop
add
add
pop
add
ds
add
xchg
pop
add
push
add
xor
je
xor
add
add
xor
jmp
pop
add
scas
pop
add
mov
xor
add
add
add
divb
and
dec
pop
add
lahf
pop
add
fwait
pop
add
add
cmc
xor
and
xor
add
xor
add
dec
pop
add
mov
jae
pop
add
pop
add
xor
add
add
add
cmp
lret
cmp
inc
xchg
add
pop
add
xor
add
add
pop
add
dec
pop
add
xor
pop
add
pop
add
cmp
in
xor
arpl
add
xor
add
clc
xor
add
xor
or
pop
add
clc
xor
pop
repz
add
cmp
stc
dec
pop
add
or
add
and
add
movsl
pop
add
pop
add
pop
add
scas
pop
add
push
pop
add
xor
mov
cmp
add
pop
xor
add
push
pop
add
xor
add
cltd
add
enter
sbb
pop
add
dec
pop
add
pop
add
pop
add
repnz
add
push
xor
add
fstpl
inc
and
cmpsb
sub
add
sbb
pop
add
rcrb
sysexit
add
xor
jle
xor
add
repz
add
and
add
cmc
pop
add
dec
pop
add
xor
add
movsb
pop
add
fistpl
mov
and
add
pop
add
pop
add
dec
pop
add
rcrb
mov
lahf
inc
pop
add
cmp
jmp
lods
pop
add
pop
pop
add
lcall
or
pop
add
pop
add
pop
add
pop
add
cmc
xor
repnz
add
add
dec
pop
add
cmpsl
pop
add
mov
mov
pop
add
xor
add
mov
add
pushf
pop
add
es
cwtl
or
add
inc
pop
add
rcrl
inc
pop
add
xchg
pop
add
or
add
lahf
pop
add
add
add
cmp
cltd
cmc
xor
or
ds
fistps
out
pop
add
xor
hlt
mov
pop
add
push
xor
add
or
pop
add
inc
pop
add
xor
add
or
add
xchg
add
fistps
mov
pop
add
mov
add
scas
pop
add
add
add
or
add
mov
add
pop
add
cmp
clc
xor
add
das
pop
add
add
add
add
add
cmp
cmpsb
lea
add
out
pop
add
xor
dec
xchg
add
pop
add
pop
add
add
add
pop
add
cld
xor
loope
xor
add
xor
jl
pop
add
adc
add
mov
add
fstpl
jae
pop
add
cmp
add
add
fisttps
pop
add
add
add
mov
or
pop
add
enter
and
pop
cld
xor
push
cmpsl
pop
add
mov
pop
add
xor
push
mov
pop
xor
mov
and
add
repnz
jbe
pop
add
mov
add
cmp
stos
adc
add
pop
add
icebp
xor
btc
add
add
mov
pop
add
dec
pop
add
add
add
fistps
sub
pop
add
pop
add
add
add
dec
pop
add
icebp
xor
out
pop
add
cltd
add
pop
add
dec
pop
add
pop
add
cld
xor
pop
sti
xor
insl
add
pop
add
adc
add
dec
pop
add
pop
add
pop
add
lea
ss
add
add
add
scas
pop
add
add
add
add
dec
pop
add
add
lods
pop
add
add
add
call
pop
cltd
xchg
and
ja
cli
pop
cmc
loopne
cmpsb
mov
leave
pop
mov
jo
xor
mov
enter
movsl
lds
test
jnp
pop
inc
xor
loope
cmp
leave
pusha
sbb
sub
add
inc
gs
jns
je
insl
dec
gs
imul
insb
gs
jb
ja
add
dec
insb
gs
gs
outsb
jne
gs
jb
jo
outsl
jb
cmp
pusha
push
sbb
movb
lea
push
pushl
pushf
lea
jmp
jmp
push
mov
shr
imul
cmp
jae
mov
mov
sub
shr
add
call
clc
pop
ret
pushf
pusha
add
pushf
cmpl
call
mov
movsbl
jmp
add
inc
gs
jne
dec
outsb
jne
insl
jae
insl
xor
cs
insb
add
jmp
pusha
pushf
mov
pusha
lea
jmp
pushl
popl
pushf
push
push
pushf
pushl
ret
mov
pusha
mov
pushf
lea
jmp
pushf
pushf
lea
call
call
pushf
lea
jb
stc
cmp
pusha
jmp
push
jmp
lret
jg
out
add
or
fs
loopne
cmp
test
addr16
sub
dec
xchg
push
aas
cltd
push
cmp
mov
cmp
sbb
mov
cs
sbb
jns
insb
jl
or
pop
xchg
rol
in
pmaddwd
loope
dec
and
fwait
es
push
lea
mov
sbb
outsb
pushf
xchg
inc
cs
lea
add
iret
push
iret
dec
adc
xchg
jns
mov
cwtl
dec
cmpsl
sub
clc
loope
js
test
inc
pop
into
adc
pop
leave
cmp
inc
lret
sub
arpl
sub
shlb
jb
cld
fs
dec
out
xchg
insb
sub
dec
pop
clc
loope
out
fs
mov
por
add
dec
xchg
jl
lea
and
dec
jl
mov
jo
and
loope
mov
jne
push
into
cmc
xchg
and
gs
sub
jmp
lea
call
pusha
pushf
lea
jb
test
bsr
movzbw
cmc
mov
clc
test
pusha
pushf
shl
stc
stc
test
add
push
push
lea
pushf
pushl
lea
call
jmp
jmp
add
inc
insb
outsl
bound
inc
gs
gs
inc
je
insl
add
push
push
and
clc
add
sub
cmc
pusha
test
add
pushf
lea
jle
dec
jmp
pushf
call
call
movw
lea
mov
jmp
add
push
jb
je
inc
imul
rcl
imul
insl
mov
cmp
mov
lds
mov
fcmovu
mov
fnstcw
xchg
ret
push
cld
imul
jmp
push
shlb
pop
mov
rolb
loopne
cmpsl
jmp
xchg
sbb
cmp
add
push
xor
lahf
lods
pop
enter
aad
pop
rcl
in
push
int3
ret
pop
mov
out
pop
inc
lods
loopne
aam
cli
pop
xor
outsb
mov
jno
imul
inc
adc
addr16
xor
fwait
add
xchg
push
inc
cmpsl
int3
sbb
mov
mov
xchg
dec
mov
cltd
cmpsb
push
jne
pop
inc
sub
and
sub
ret
cwtl
dec
push
dec
sub
movsl
xor
sub
xchg
pop
mov
lahf
or
sarb
mov
ljmp
pop
inc
or
fisttps
rclb
mov
push
lds
popa
das
pop
out
mov
push
pop
and
jae
or
push
lock
loope
in
stc
les
ja
fsubs
js
sbb
cli
cli
inc
aas
fiadds
xchg
pop
nop
or
sub
lcall
or
loope
add
fs
inc
out
cmp
push
int3
adcb
pop
aas
out
stos
cmp
sub
lods
icebp
push
loope
outsb
jae
lahf
js
mov
mov
gs
out
out
sub
sti
xor
jnp
rolb
inc
mov
adc
cmpsl
dec
push
sbb
pop
aaa
imul
lcall
sti
jecxz
mov
bound
mov
sub
aam
pop
daa
push
into
pop
mov
scas
mov
lret
imul
lea
or
xor
movsb
aas
mov
inc
lret
mov
js
and
and
add
fcoml
sbb
imul
inc
in
fnstsw
loop
gs
nop
imul
and
or
call
int3
push
ss
addr16
push
and
lret
mov
lret
shlb
les
adc
mov
cmp
adc
xlat
jns
out
lea
cmp
push
imul
fcomps
inc
sub
pop
sub
xchg
out
fldl2t
jg
dec
or
cmpsl
or
jnp
cmp
sbb
sub
push
popa
enter
push
mov
lods
push
call
sti
shl
pusha
mov
pop
inc
xchg
sti
outsl
push
rcll
out
cmp
mov
push
and
sub
xor
inc
xchg
mov
lret
in
in
imul
loop
sbb
cmp
mov
test
frstor
jnp
mov
xchg
pop
jmp
mov
dec
pop
mov
aad
mov
jb
bound
cmpsl
ret
fwait
lahf
xchg
jne
xchg
xchg
mov
pushf
sbb
mov
outsb
cli
sub
sarb
test
mov
in
sti
aad
fs
cmp
js
push
push
mov
in
xchg
inc
xor
sbb
jle
es
and
aaa
and
push
ja
mov
dec
mov
fs
je
pop
inc
cltd
pop
cli
inc
aam
bound
jge
or
repnz
mov
push
jp
aaa
faddl
xor
pop
mov
sub
pusha
pop
out
lods
movsb
loop
add
les
sub
jae
fwait
ljmp
test
xchg
dec
and
clc
fwait
mov
movb
pop
sub
lret
sbb
scas
xorb
loopne
js
jl
jns
pop
adc
cli
or
sub
sub
push
hlt
add
leave
adc
inc
push
cmc
ja
pop
enter
ss
insb
stc
sbb
add
mov
xchg
icebp
mov
daa
jmp
mov
jmp
cld
xchg
movsl
out
pushf
mov
rcrb
jle
push
adc
sub
push
sbb
xchg
pusha
sbb
sbb
and
imul
or
add
scas
dec
fs
push
sar
pusha
sti
add
dec
or
out
mov
les
sub
pop
push
xchg
mov
pop
jb
inc
mov
dec
lock
shr
and
cmp
mov
das
negl
adc
lret
pop
addr16
inc
mov
xchg
jo
adc
and
mov
xchg
or
inc
mov
or
xchg
dec
pushf
add
sbb
xor
push
xchg
std
jno
lea
popa
enter
ja
arpl
add
pop
and
outsl
or
bound
ds
sub
ret
xchg
xchg
mov
push
test
outsl
jne
cli
xlat
adc
shrb
cmp
jg
adc
xlat
hlt
sbb
pop
ljmp
jnp
sbb
stos
add
mov
sub
stos
adc
std
or
fldenv
jns
lock
sub
lcall
mov
push
outsl
aad
push
fiaddl
out
and
inc
or
adc
sti
arpl
jle
mov
xchg
lret
insl
call
icebp
push
insb
out
xor
pop
mov
add
jg
nop
aas
jmp
mov
rcrl
lahf
idivl
cmpsb
xchg
jne
sub
xchg
idivl
jnp
adc
hlt
mov
mov
addl
lcall
sub
ret
inc
std
int3
dec
ror
push
mov
imul
xchg
icebp
movsl
cmp
mov
jo
test
pop
push
daa
in
inc
jg
clc
addr16
jge
mov
dec
push
sbb
sub
pop
pop
adc
sahf
mov
pop
mov
and
leave
xchg
sahf
cmp
sub
add
mov
fiadds
and
adc
imul
cmp
push
or
dec
in
std
dec
mov
hlt
sbb
lock
pop
loop
pusha
les
repnz
pop
insl
pusha
add
fnstenv
push
pop
xchg
test
enter
push
faddp
aas
pop
mov
scas
mov
fwait
inc
sub
jne
js
mov
dec
pop
cmp
push
aam
shrb
xchg
sti
mov
shll
mov
adc
dec
inc
in
aas
add
adc
mov
xchg
dec
test
mov
cmp
fiadds
hlt
or
push
xor
mov
cmp
dec
sub
fwait
adcl
lret
insb
and
outsb
dec
lods
pop
jnp
jle
cltd
pop
fwait
mov
mov
test
sub
fwait
pop
pop
jbe
xchg
ljmp
int3
push
cmpsl
imul
repz
mov
loopne
sub
cmp
sub
cmp
mov
lock
sbb
adc
mov
pop
mov
cmp
bnd
xchg
mov
dec
scas
push
fucomip
clc
mov
shl
mov
das
js
aam
movsl
dec
movlps
test
in
sub
js
xchg
push
jle
dec
daa
xchg
mov
push
test
mov
adc
pop
enter
xor
push
out
mov
cmp
sub
add
and
mov
sub
push
inc
mov
jge
icebp
cmp
movsb
ror
push
insl
jae
pop
inc
call
ret
push
and
rcr
mov
sub
fists
mov
mov
stc
and
inc
mov
pop
out
lcall
xor
aaa
roll
jle
stos
cli
pop
nop
pop
stc
insl
das
mov
test
lret
lea
jge
push
mov
and
popa
xchg
inc
mov
pop
shr
sbb
out
jmp
jmp
xchg
inc
xchg
mov
adc
lods
mov
mov
outsb
mov
cmp
mov
cmpsb
jbe
stos
and
xchg
add
in
jb
pop
stc
sbb
sub
and
inc
jae
popf
cs
into
call
or
iret
pop
cwtl
out
out
data16
mov
xchg
sub
or
push
adc
je
ftst
push
and
popa
inc
cmpsl
lods
add
lods
fsub
fimull
daa
popf
mov
mov
pop
dec
adc
and
movsl
push
iret
adc
push
jge
test
mov
int
popa
imul
sarl
jge
loopne
xchg
ja
dec
les
loopne
ror
outsl
xchg
dec
out
jp
daa
push
push
leave
ret
xor
andl
jp
fcomp
sarl
cmp
mov
inc
jns
cmp
mov
ret
in
jg
and
fwait
sub
movsb
into
ret
xor
push
dec
bound
lcall
bound
sarl
push
test
bound
popl
xorl
xor
mov
hlt
mov
aam
inc
and
call
pop
aad
adc
push
pop
lret
dec
xchg
inc
or
or
sub
fmuls
mov
dec
inc
jno
mov
add
sti
add
ljmp
jp
xlat
popf
loop
fcoms
xorl
mov
mov
jp
test
inc
xor
push
push
fldl2e
adc
lds
mov
scas
lods
mov
jns
push
scas
pop
push
or
int
xor
mov
jae
or
fwait
jo
stos
rcrb
mov
jo
push
mov
iret
das
lcall
dec
ret
jge
jno
adc
xor
popa
pop
out
inc
cwtl
int3
imul
stos
pop
jle
jae
call
xor
sub
cmpsb
aaa
xchg
pop
clc
push
jmp
popf
push
inc
sub
fldenv
pusha
mov
add
incl
mov
mov
lret
or
andl
mov
inc
or
sub
fidivs
lfs
mov
xchg
and
or
in
pop
jnp
sub
iret
push
in
jne
cmp
lods
iret
push
ret
lds
pop
out
mov
pop
adc
push
lock
cli
repz
test
jge
cmp
cmp
adc
syscall
xchg
lds
and
cmpsl
sbb
pop
lret
lcall
cmpsl
cmpsb
xchg
or
jno
ja
ds
test
sahf
les
pop
pop
and
dec
sbb
pop
push
jbe
add
xor
pinsrw
jp
addr16
push
movsl
popa
rclb
arpl
adc
nop
mov
lahf
test
or
stc
scas
fsubs
inc
push
lock
test
jmp
repnz
add
pop
inc
pop
out
xchg
stos
xlat
lds
nop
mov
or
sti
pushf
xor
mov
or
or
insl
sub
imul
mov
movsl
dec
push
inc
push
or
adc
xchg
sub
sub
lahf
and
adcl
mov
pop
and
cmp
jo
je
and
and
ja
fwait
fwait
aam
pop
addl
test
sarb
ja
loop
adc
stc
sub
sti
xchg
and
mov
sti
push
mov
in
xor
sahf
shll
sub
gs
lods
jmp
dec
lods
sbb
iret
out
sbb
and
aam
scas
and
adc
sti
push
daa
xchg
in
add
rcr
test
adc
xor
pop
sbb
aaa
pusha
sub
push
stc
add
insb
stos
pushf
cmp
lahf
push
mov
push
fsubrs
push
pop
std
mov
adc
dec
into
xlat
sbb
aam
mov
loopne
les
jl
movsb
or
shll
push
js
fdivrp
pop
and
in
sub
cmpsb
je
pop
ja
sahf
popf
movsb
imul
mov
push
test
lcall
out
stos
push
sub
test
daa
add
mov
pop
pop
pop
js
dec
push
pop
das
mov
in
lods
add
mov
mov
dec
cli
mov
enter
mov
mov
shl
fldt
mov
pushf
into
jb
subl
lcall
pop
mov
inc
pop
sbb
inc
das
dec
dec
lahf
xor
pop
cmp
pusha
test
aam
cs
and
xlat
fmuls
jo
xchg
sub
or
and
in
adc
int3
mov
ficoml
inc
fsubrl
jmp
cmc
das
and
shlb
repnz
jne
jecxz
push
sub
clc
mov
inc
ja
pushf
lods
sti
nop
inc
sub
popa
mov
bound
and
hlt
push
outsb
movsl
mov
cmp
repz
adc
mov
dec
push
mov
mov
adc
xchg
or
sub
push
ret
in
inc
hlt
pop
sbb
sub
xchg
shrl
mov
and
stos
xchg
and
daa
sbbl
and
lea
jbe
jecxz
or
test
ficompl
movsl
arpl
xlat
sti
pop
loope
dec
aas
test
add
pop
loopne
or
lcall
into
icebp
xor
pop
push
jmp
ja
push
arpl
xor
in
test
pop
adc
stc
cmp
outsb
sub
mov
dec
sbb
and
or
imul
pushf
inc
mov
aam
rcll
scas
pop
cmp
or
sbbb
fwait
and
or
shrb
sbb
aad
es
push
out
mov
inc
daa
cmp
icebp
xchg
lahf
leave
je
cli
stc
addl
hlt
cmp
cli
jge
icebp
xchg
pusha
jl
lock
jbe
ja
scas
push
push
in
movsb
lock
mov
pop
sbb
pop
fisttpll
subl
mov
jle
mov
cmp
test
movsb
dec
inc
mov
and
mov
jns
lret
arpl
inc
in
xor
pop
leave
mov
xchg
cmp
mov
add
addb
iret
sub
or
pop
insl
test
cli
orl
pop
xor
out
mov
mov
enter
int3
xor
es
mov
push
mov
mov
adc
push
dec
stos
add
xchg
pop
stos
mov
shlb
std
repz
xor
nop
push
inc
sbb
enter
jns
cmpsl
scas
adcb
jnp
mov
cmp
sbb
mov
mov
sub
mov
jecxz
push
xchg
push
je
or
mov
sbb
fistpl
ljmp
and
jb
into
xor
cld
aas
nop
insb
out
in
mov
mov
test
cmpsl
sbb
call
out
push
mov
and
and
push
jl
jg
aam
bswap
and
jmp
sti
sbb
testl
lahf
jnp
repnz
pop
push
mov
dec
xor
out
outsl
add
insl
popf
repz
ret
mov
mov
mov
scas
addr16
jno
xchg
cmp
sub
sbb
mov
adc
arpl
push
imul
xor
shlb
cli
or
addb
xor
dec
fidivrl
xor
add
in
cmp
packuswb
cmp
inc
js
stos
stos
xor
dec
dec
pop
rcll
adc
pushf
insl
or
jae
sub
xchg
cmp
xor
and
adc
jne
cmp
loopne
orl
pop
into
add
cs
pop
and
or
cwtl
cmc
jmp
adc
pushf
and
add
or
scas
or
sbbl
loope
mov
push
mov
insl
add
jns
pop
ret
mov
push
ret
pop
ds
in
ja
xchg
nop
adc
push
and
inc
jno
pop
popf
mull
add
mov
jg
test
adc
add
popa
mov
push
pusha
imul
pushf
xor
imul
xchg
push
lahf
sub
gs
pushf
xorl
adc
xor
inc
idivb
lock
addr16
mov
data16
notl
sub
enter
mov
jbe
jl
cmpsl
std
mov
scas
inc
in
mov
push
or
outsl
stos
cmp
or
ja
dec
mov
mov
adc
shl
jg
pushf
arpl
push
xlat
cmp
add
lds
ss
je
sub
aad
jo
sbb
stc
pusha
jp
cmp
mov
pop
cmp
test
movsl
nop
pop
push
jg
sub
add
cli
mov
and
pushw
aad
mov
xchg
movsl
ret
ja
push
fwait
xchg
incb
repnz
and
sub
adc
icebp
push
imul
mov
push
cmp
and
xchg
rcl
sbb
inc
sub
xor
inc
out
insl
push
into
mov
push
neg
jmp
or
xrelease
pop
leave
cmc
or
fwait
test
out
xor
adc
jp
pop
rorb
sub
jmp
addr16
xlat
fbld
in
pop
std
mov
dec
adc
sub
gs
out
notb
aaa
lret
lea
adc
jmp
fiaddl
scas
frstor
decl
clc
cli
shl
fldcw
pop
dec
jno
xchg
add
scas
jl
mov
test
addr16
xor
gs
rcl
mov
push
hlt
mov
xor
mov
insb
inc
mov
add
lock
push
sbb
in
push
les
stos
mov
in
xor
in
in
dec
int3
nop
cli
insb
fimuls
les
push
or
pop
adc
arpl
sub
popf
push
lods
add
mov
jne
mov
movsb
out
pop
xchg
movsl
aaa
insl
sub
sub
popa
ret
push
jecxz
jns
cmp
imul
or
xor
push
and
inc
xchg
xchg
imul
movsb
in
lea
sub
adc
aad
or
jp
rolb
sub
aad
call
mov
dec
test
mov
mov
cmpsl
aam
insb
shrb
jg
movsb
mov
into
add
and
cltd
or
aaa
scas
addr16
push
mov
and
lock
push
arpl
adc
or
out
fxch
xor
jmp
inc
pop
loopne
fisttps
jb
jg
and
and
cwtl
andl
sbb
add
mov
mov
or
xchg
sub
fs
jnp
or
mov
pushf
dec
adc
jo
adc
mov
test
xor
inc
add
cmp
outsb
dec
push
pop
shrb
add
pop
addr16
pop
push
push
and
lahf
mov
xor
pop
push
das
sub
mov
xor
lods
dec
xor
adc
cmp
adcb
jno
nop
add
mov
ss
sub
in
push
out
movsb
jecxz
out
add
call
sbb
repz
push
mov
dec
imul
push
mov
push
scas
loope
xor
aaa
sub
mov
int
in
out
cwtl
sub
das
sub
xor
in
push
testb
mov
mov
push
and
pop
push
fimull
mov
stc
xorb
js
ljmp
mov
pop
jns
dec
mov
bound
fldl
pop
adc
leave
sub
stos
pop
lea
mov
iret
xchg
dec
imul
push
or
in
pop
repz
lret
int3
xchg
leave
sahf
lcall
js
cmp
clc
test
loop
orl
mov
repnz
push
dec
insb
mov
std
pop
shlb
adc
mov
inc
ljmp
cmpb
mov
add
repz
cltd
shll
xor
loopne
mov
jne
and
mov
xor
sbb
out
xlat
push
lret
xor
push
pop
dec
add
sub
mov
into
xchg
xchg
push
xchg
push
insb
jg
pop
es
dec
icebp
movsb
xchg
mov
and
ret
dec
mov
enter
add
mov
sahf
divb
pop
cld
cmp
sbb
push
pop
dec
sub
lahf
mov
mov
xor
xchg
and
lcall
mov
push
das
lret
sahf
scas
mov
lods
lea
enter
icebp
mov
adc
sub
push
mov
dec
and
sub
push
cmp
test
mov
jp
sub
out
mov
pop
aad
subl
xchg
jb
lret
mov
xchg
mov
dec
mov
push
adc
adc
mov
sbb
nop
ja
aaa
in
push
das
gs
gs
jg
jecxz
cmp
jb
mov
icebp
sbb
dec
jle
sbb
and
dec
or
cmp
push
push
push
les
mov
and
scas
ret
pusha
out
sbb
imul
pop
sbb
leave
ja
sarl
adc
xchg
out
add
inc
xor
test
mov
mov
das
xchg
push
adc
push
popa
sbb
inc
in
and
aas
bound
mov
out
ret
gs
cmp
out
sub
fcoml
ret
lock
mov
dec
int3
cmp
pop
jne
sarl
dec
lret
cltd
nop
dec
mov
into
bnd
xchg
in
in
out
adc
lods
adc
mov
cli
fiaddl
daa
jb
jns
mov
pop
fadds
scas
fadds
cmc
mov
xor
sub
sbb
or
daa
xchg
cs
data16
or
mov
ss
jne
es
cmp
movups
cwtl
dec
pop
push
pop
es
outsl
cltd
data16
stc
ljmp
jl
xchg
jmp
jp
sahf
push
adc
mull
cmp
movsl
sbb
pop
mov
jge
cld
add
adc
jbe
leave
cmpsl
imul
sbb
and
pop
stos
push
mov
push
fcmovnu
fdivs
test
xchg
aaa
xchg
shrl
daa
mov
imul
push
sbb
jae
test
inc
inc
push
mov
cmp
daa
mov
mov
mov
mov
push
xor
jno
adc
xchg
jo
push
inc
insl
pop
add
pop
in
das
mov
fisttpl
jmp
pop
fstpt
clc
repnz
push
pop
pop
ficompl
lcall
xchg
mov
push
imul
insb
sldt
sbb
cmpsl
iret
pop
test
pop
cmpsb
stc
cmpsl
sahf
fs
das
imul
sub
and
jns
fbld
add
cmp
pop
push
sub
fimuls
sbb
lds
call
cmp
ficoms
and
xor
jge
and
jo
push
mov
mull
shl
loopne
icebp
mov
subps
sbb
and
or
faddl
mov
sbb
xlat
adc
cmc
pop
jb
fcomps
aad
aam
jmp
lods
scas
es
cld
stc
mov
hlt
mov
les
dec
ds
cmpsl
adc
push
jns
adc
data16
mov
and
pop
xor
push
jl
decl
jb
cmp
jae
cli
call
pop
fadds
xchg
mov
cmpsb
adc
jns
out
ret
mov
out
pop
xor
mov
shrl
rcll
cmc
adc
pop
cld
pop
jae
imul
das
xor
mov
cmp
sub
mov
or
cmp
jp
sbb
sub
aam
aaa
fdivrl
xchg
jns
mov
ja
inc
and
add
jmp
cli
or
sub
mov
ja
hlt
ja
mov
inc
lds
imul
into
ret
push
loope
push
mov
sbb
pop
mov
mov
int
gs
cmp
call
cmpsb
jnp
repnz
mov
and
add
loop
arpl
and
enter
sub
xchg
adc
xlat
cwtl
cmc
jne
fstl
adc
cld
psubusb
mov
sahf
rcrl
and
dec
andb
fs
jmp
or
add
fisubl
addr16
fisubrl
or
scas
mov
cmp
xchg
adc
sub
imul
mov
stc
mov
or
negb
sbb
insl
aaa
mov
push
dec
jp
and
or
cld
add
xchg
movsl
or
jp
test
xorb
cmp
clc
push
icebp
xor
callw
ss
xchg
arpl
testl
dec
push
popl
out
mov
pop
sbb
sahf
fwait
adc
sahf
orb
inc
xor
in
cli
xchg
or
test
sbb
xchg
mov
xchg
and
movsb
lret
mov
and
push
lods
and
cmp
sub
and
nop
jmp
push
and
cli
lea
stos
movsl
jns
pop
sbb
add
sbb
add
adc
sbb
hlt
lret
add
int3
and
iret
adc
leave
ljmp
ret
push
lret
lea
jmp
xor
dec
jns
mov
outsl
outsl
jo
in
dec
and
xchg
dec
inc
inc
das
or
jecxz
mov
in
mov
mov
movsb
lods
xor
ficoml
pop
jns
test
mov
scas
test
in
mov
std
mov
dec
dec
mov
movsb
sub
fadds
ret
mov
pusha
xchg
xchg
inc
jo
sbb
outsb
pop
jecxz
xchg
jbe
fwait
addr16
xor
adc
cld
popa
mov
cld
subl
mov
sbb
and
fildl
jnp
mov
add
ljmp
push
fdivr
fcomps
loop
lret
fistps
mov
pop
xchg
es
scas
sti
xor
faddp
jb
sbb
mov
pop
pop
sub
sub
out
sbb
stc
outsb
cmp
ret
fsubrs
pop
sub
sbb
jg
mov
jbe
mov
xchg
cmp
lret
mov
sti
sti
sbb
mov
notb
stc
sub
lahf
stc
dec
adcl
xor
pushf
ret
cmp
mov
jecxz
clc
xchg
incb
dec
cmpb
cltd
hlt
insb
es
fcoms
jmp
push
loope
in
bound
ljmp
jl
hlt
pop
out
divb
movsb
sbb
xchg
jge
inc
push
sub
into
mov
lahf
push
mov
stos
inc
insl
dec
jne
call
jle
adc
ja
sub
cld
pop
fs
test
loopne
fcompl
clc
fnstcw
and
shl
push
xor
adc
int
arpl
popa
xchg
xorb
ljmp
push
mov
daa
ljmp
and
in
adc
mov
add
gs
xchg
mov
adc
dec
push
push
or
push
sbb
scas
xchg
subl
repz
out
jge
enter
movsl
adc
mov
inc
jnp
outsl
in
adc
insl
or
sbb
loop
cmp
adc
cld
and
dec
adc
cmp
mov
cmp
cmp
push
dec
adc
jb
add
loopne
xor
shll
xor
movsb
mov
xor
mov
scas
jb
sub
jno
aad
sub
ja
jo
mov
divb
mov
popf
iret
sahf
mov
je
loope
les
in
sbb
add
mov
ficoms
push
push
popf
ret
or
jecxz
bound
xor
xchg
or
adc
sbb
sbbl
out
xchg
insb
cmp
xlat
lcall
mov
outsb
pop
push
xor
dec
dec
int3
stos
mov
pop
inc
jmp
xchg
arpl
iret
mov
inc
scas
shlb
and
mov
mov
push
or
stos
mov
mov
sbb
call
insb
retw
loope
test
ja
and
push
adc
or
xor
scas
mov
mov
push
jmp
fstpt
mov
add
or
cmpsb
test
add
mov
adc
sub
cmp
lods
gs
mov
xor
mov
fdivrp
mov
stos
aad
bound
inc
sub
xor
mov
addr16
inc
test
jbe
fcmove
aaa
jbe
and
or
in
stc
or
dec
sub
mov
pop
xchg
cmp
mov
mov
mov
int3
inc
xor
imul
iret
loope
mov
incl
sbb
jecxz
jg
mov
xchg
out
popa
std
xor
rcrb
dec
aaa
jmp
popa
leave
cs
push
insb
xor
dec
adc
cmp
adc
mov
mov
shll
inc
sub
mov
jmp
cmp
fsubr
xchg
push
xor
xor
stc
popa
fldcw
outsl
and
push
mov
popf
add
push
adc
pop
jl
jle
loop
and
jne
loop
push
in
add
xor
push
mov
das
or
jno
sub
mov
popf
push
cmp
sbb
das
fldenv
jae
dec
mov
adcb
lock
xchg
add
xlat
adc
pushf
mov
mov
mov
out
adc
testb
lock
xchg
dec
cmpsl
mov
cmp
mov
xchg
popa
push
push
daa
scas
jecxz
movsb
dec
cmp
inc
addr16
push
pop
push
sub
mov
out
shlb
outsl
and
mov
mov
test
jp
orb
lret
movsl
cmc
test
jg
lods
xor
dec
xlat
cmpsb
loop
sub
mov
pop
sbb
and
movl
and
push
jmp
xor
fwait
adc
push
jno
pop
stos
jbe
pop
jo
push
insb
je
jecxz
inc
lods
and
add
dec
xor
mov
out
adc
dec
lods
aam
push
fcomip
push
push
pop
out
mov
push
in
test
mov
popf
inc
ss
push
mov
push
cmp
push
sub
mov
insb
jecxz
and
into
mov
int3
push
popa
dec
les
imul
orl
or
leave
mov
dec
and
sarb
pop
and
cmp
or
dec
xchg
xor
in
inc
ljmp
cmp
outsb
adc
pushf
popf
mov
jno
push
mov
sbb
call
inc
dec
mov
sbb
cs
push
push
sbb
das
cmpw
movsl
notl
cmp
pop
mov
ror
loop
dec
data16
pop
mov
bnd
sbb
mov
and
adc
ja
or
xor
inc
jmp
test
in
pop
pop
and
inc
sbb
xchg
inc
add
inc
andl
and
lea
add
pop
sbbb
mov
or
xlat
jl
fs
xor
jnp
pop
cmpsl
testb
mov
jg
jle
push
add
cmp
xchg
inc
rolb
jno
sbb
push
or
loopne
aas
sub
jae
xor
call
icebp
or
aas
pop
add
xchg
and
ja
jl
add
xchg
into
lds
popa
call
cltd
cmpl
ret
sub
push
xor
daa
gs
cs
lret
inc
into
js
lret
mov
mov
fdivl
in
sbb
or
inc
lods
sarb
jle
xchg
add
rolb
add
push
push
rcll
mov
dec
aad
mov
js
add
cltd
stos
pop
mov
outsl
pop
fstl
sbb
cwtl
iret
orb
mov
lods
leave
divl
cmp
repnz
out
jg
ja
popl
xchg
fistps
mov
enter
cltd
push
pusha
cmp
and
loopne
fisttpll
enter
out
es
out
femms
jns
dec
arpl
cwtl
xchg
and
adc
mov
js
mov
clc
lock
loope
std
pop
test
movsb
gs
je
adc
aaa
sub
lods
sub
popf
cmp
fsubrp
mov
adc
fwait
mov
jmp
lcall
lods
mov
push
jmp
call
in
test
sub
fadds
dec
jnp
sub
cli
xor
iret
repz
aam
add
pop
adc
mov
add
lods
inc
dec
int3
les
mov
mov
out
xchg
mov
rcrl
lods
popf
fists
mov
out
mov
pop
aad
mov
fcomps
ljmp
decb
rcrb
pop
inc
xchg
outsl
push
shrl
push
orl
cmp
mov
out
jo
adc
lds
push
mov
in
mov
add
or
push
fwait
jae
pop
pop
cmp
mov
cmp
hlt
push
add
cmpsl
dec
ret
xor
out
push
mov
push
pop
in
mov
mov
jbe
add
pop
inc
js
jns
lcall
push
ljmp
ret
int
inc
cltd
mov
fistl
test
mov
popf
cmp
pushf
jno
ja
xchg
in
push
lock
lods
mov
pop
test
jecxz
fldt
add
push
add
pop
jno
inc
push
scas
lret
imul
fwait
and
xchg
mov
divb
dec
fiaddl
jmp
mov
mov
pop
xchg
loopne
xor
jo
inc
or
add
mov
add
js
or
xlat
clc
popf
loopne
mov
scas
or
icebp
lea
fcomps
cld
inc
xor
push
sub
out
shll
or
lods
mov
js
icebp
into
push
out
nop
std
mov
push
arpl
mov
sbb
flds
fucomip
pop
jae
lea
ljmp
jo
lcall
insl
mov
scas
js
push
rolb
cs
push
mov
mov
imul
mov
xor
dec
out
dec
cmpxchg
jge
loop
pop
mov
in
and
sub
int
ss
push
dec
scas
adc
push
es
cmp
xchg
test
shll
pusha
gs
mov
aas
shrb
dec
test
stos
rcr
fs
push
mov
shl
or
xchg
pop
jp
add
dec
push
mov
or
dec
cmp
push
add
adc
dec
and
xor
scas
mov
stc
jno
cli
mov
in
and
or
push
insl
pop
bound
mov
mov
lret
jb
into
int
and
into
lret
loope
leave
popaw
xchg
sub
test
dec
mov
push
pop
out
clc
dec
fsubrp
imul
sbb
mov
jp
push
mov
jo
add
js
push
adc
mov
add
clc
inc
cmp
fdivl
add
dec
lcall
lods
gs
pop
sbb
out
pop
add
repnz
sub
push
fcmovu
cmp
and
pop
xchg
aas
fmull
dec
daa
lret
jle
or
addb
dec
clc
adc
repnz
xor
stos
mov
adc
xchg
and
int
and
mov
ljmp
push
aas
mov
mov
mov
sbb
mov
sbb
jecxz
xor
push
mov
pop
sub
add
aaa
out
mov
sub
in
ja
jno
mov
dec
clc
test
aam
out
ret
idivl
mov
fisttps
sarb
xchg
enter
lret
sarb
pop
out
mull
arpl
push
dec
adc
mov
out
lods
lcall
xor
test
scas
pop
stos
add
sub
and
rcll
fs
sbb
dec
mov
jbe
cmp
test
jmp
inc
dec
sti
mov
inc
inc
nop
outsb
jbe
shlb
sub
xchg
inc
cwtl
negl
loop
test
xor
dec
push
push
lds
pushw
and
add
mov
arpl
lock
sub
ss
imul
jg
dec
frstor
test
adcb
or
aad
xor
lret
jecxz
push
inc
sub
sbb
jbe
xor
sbbb
dec
inc
cltd
push
lock
hlt
loopne
scas
jp
decb
xor
add
xchg
inc
jmp
sbb
dec
mov
das
dec
inc
ljmp
dec
or
in
inc
dec
cmpsl
add
inc
popa
pop
sbb
fs
lcall
xchg
or
and
cld
mov
notb
ficomps
cmp
sub
mov
pusha
loop
or
dec
in
xchg
xlat
rorb
shr
in
mov
dec
inc
pop
push
lods
mov
aad
ret
cmp
add
pop
test
ljmp
dec
adc
push
xor
mov
pop
bound
stos
sarl
jmp
lds
xor
dec
adc
xor
adc
fwait
dec
jo
mov
or
inc
sbb
inc
loopne,pn
xchg
pushl
sub
xchg
jbe
notb
jecxz
loop
jle
push
xor
fldenv
adc
mov
mov
sub
data16
roll
push
xlat
clc
mov
add
fdivrl
int3
and
scas
push
daa
es
es
lock
out
call
std
mov
mov
or
add
inc
sbb
das
les
push
mov
adc
mov
imul
xchg
imulb
clc
jmp
fisttps
lock
or
mov
add
jg
jo
lock
mov
xchg
jno
xor
fmull
adc
in
add
lcall
or
mov
pop
fimull
mov
sub
dec
mov
mov
fidivs
sbb
xchg
or
xor
add
jecxz
enter
lods
lods
sub
xor
ss
add
sub
sub
in
hlt
data16
movsl
insl
mov
scas
aam
xor
pop
arpl
pop
mov
add
aas
shll
dec
jno
xlat
popa
dec
sbb
dec
jmp
insb
inc
dec
loope
insl
shrl
insb
xor
in
mov
dec
in
mov
xchg
bound
xchg
loope
xchg
mov
inc
push
pop
jl
jne,pn
dec
std
ss
adc
jl
xchg
cwtl
push
ja
scas
mov
in
inc
int
pop
cmc
imul
mov
int3
les
sbb
sbb
cli
es
jbe
nop
fdivrp
mov
rcrb
add
inc
push
add
cmp
adc
fdiv
push
notl
popa
xor
xchg
int3
mov
cmp
fsts
xchg
mov
xchg
pop
das
in
sti
add
adc
cld
scas
adc
sbb
xor
jnp
rcr
inc
and
cld
gs
adc
cmp
push
fs
movsl
ficoms
int
lret
out
ret
xchg
or
dec
loopne
push
add
or
sbb
mov
lods
mov
or
aaa
fs
aam
outsb
lret
pop
into
sbb
mov
in
jae
shll
add
mov
xor
std
aaa
mov
mov
xor
in
cmpsb
push
xchg
pop
shrb
in
scas
xchg
lret
xchg
push
in
popf
sub
pop
mov
mov
cld
into
js
stos
aaa
pop
lods
adc
das
loop
subb
dec
xor
xchg
test
iret
xchg
shr
testb
adc
aas
in
cmp
jb
mov
stos
rol
lods
sbb
faddp
pusha
push
sbb
mov
or
lret
movsb
jo
cmp
dec
lahf
sub
in
jno
movsl
test
xor
insb
stos
mov
stos
lods
mov
in
mov
test
pop
fsubr
adcl
subb
inc
lods
pop
or
cmp
lods
mov
cmp
sbbb
cli
or
lahf
add
leave
ss
in
or
pop
mov
adc
sti
jnp
pusha
pop
or
mov
dec
mov
loopne
cltd
addr16
sti
shll
dec
hlt
mov
pop
mov
loope
pop
inc
mov
dec
sbb
pop
stc
stos
ds
xor
and
and
fadds
adcb
sahf
sti
out
inc
adc
xchg
cld
test
imulb
push
mov
lds
imul
mov
imul
pop
inc
dec
inc
sahf
movsl
sahf
cmp
andl
xchg
lods
movsl
add
add
xchg
aas
out
or
xchg
pop
pop
stos
sbb
mov
fstps
scas
xchg
jo
pop
push
aad
dec
in
xchg
sbb
into
mov
sub
lret
outsb
xor
xchg
int
inc
scas
in
loop
out
xchg
cwtl
sbb
mov
popf
sbb
push
xchg
pop
xchg
jns
arpl
pop
cmp
xchg
cmp
inc
cmp
shr
jo
repz
pusha
inc
adc
xor
adc
mov
movsb
and
inc
cmc
pop
out
jno
mov
mov
imul
or
incb
mov
xchg
mov
scas
cmp
sub
jno
push
cmp
out
repnz
xor
cmp
aaa
andl
mov
rorl
adc
int3
icebp
mov
mov
outsl
fiaddl
pop
aad
loope
xor
or
shrb
pop
jge
nop
mulb
pop
inc
add
fwait
push
daa
xor
or
movsb
jg
mov
test
sahf
cld
fistl
test
daa
mov
jge
jb
xor
adc
in
fbld
int3
inc
ficoml
js
add
rolb
pop
push
xchg
leave
or
mov
xor
lods
and
das
jg
and
mov
aad
push
cmc
pop
push
sbb
push
andb
iret
xor
in
sub
sbb
dec
jbe
je
int3
sarl
movsb
and
adc
test
shrb
push
xchg
pop
je
roll
pop
or
adc
iret
bswap
out
lods
push
cmp
gs
and
gs
out
and
lahf
scas
loop
shlb
loop
in
pop
push
stos
mov
cmp
ret
int3
divl
mov
call
sbb
xchg
cli
or
push
jg
lcall
scas
jg
adc
sbb
inc
lds
push
andl
inc
ficoms
or
cmp
data16
cs
out
outsb
and
fstpt
mov
rcrl
jns
aam
mov
stos
mov
adc
and
lock
ret
and
xlat
stos
outsb
cs
or
lods
lret
xlat
pop
add
lea
pop
stc
aas
pop
inc
loopne
pop
jp
pop
add
jne
fsubrp
or
stos
jmp
push
mov
add
push
rol
xchg
jge
scas
push
mov
leave
ret
sbb
push
mov
sbb
xchg
sub
fs
ljmp
inc
fbstp
inc
shrl
jp
dec
sbb
push
add
lahf
inc
movsb
cld
adc
mov
outsb
cs
test
mov
adc
scas
dec
mov
pop
popa
cld
xchg
scas
scas
and
shlb
dec
dec
in
mov
mov
ret
out
xchg
sub
arpl
cmp
sbb
cli
das
lahf
cmpsb
outsb
mov
addr16
insl
int3
cs
lock
pop
aas
add
js
or
xchg
dec
add
test
movsl
xchg
frndint
pop
xchg
jp
scas
call
mov
jg
adc
jmp
mov
mov
or
push
iret
add
cmc
enter
jmp
cmp
subb
jo
add
popf
xchg
dec
jmp
mov
cmp
cmp
add
subl
rorl
ja
int
jne
imul
daa
jno
inc
out
inc
repz
jmp
and
lock
sub
subb
fcoml
inc
xchg
add
cs
subl
adc
iret
push
adc
or
out
sub
movsb
sub
mov
shl
push
cmpsb
pop
mov
subb
adc
out
xchg
fs
iret
loopne
pop
movsb
clc
cmpsl
inc
jle
dec
cmp
das
jb
push
iret
add
in
adc
push
adcb
les
jb
inc
xor
cmpsb
sarb
pop
test
outsl
loope
mov
lock
mov
vpshaq
arpl
xchg
cmpsl
xchg
cli
popf
sbb
cmp
dec
xor
imul
jo
stos
adc
aas
fs
iret
push
sbb
pop
rclb
out
add
nop
or
clc
pop
jg
nop
divb
push
xor
inc
int3
mov
push
xor
sbb
dec
fidivrs
insl
adc
sarb
cli
add
or
pop
divb
pop
xchg
aas
rorb
dec
pop
fcomps
int3
xchg
sbb
sbbb
inc
sub
fimull
or
sub
jbe
lcall
ficoml
jmp
xor
cmpsb
mov
pop
xchg
push
sbb
arpl
ret
xchg
imul
xlat
pop
ror
and
jg
dec
or
pop
imul
fcmovnu
add
stc
xor
xor
imul
mov
and
pop
mov
inc
pop
dec
pop
and
jmp
scas
sbb
ljmp
add
data16
xchg
mov
xlat
pop
leave
les
xor
xor
ret
lret
outsb
ljmp
or
int3
mov
push
add
mov
jg
pushf
mov
push
scas
push
scas
mov
or
out
cmp
mov
push
cld
rcrb
sbb
mov
xor
in
fwait
mov
call
pop
and
xor
pusha
cmp
mov
jg
repnz
pushf
sub
add
pop
push
popa
sbb
xchg
enter
sbb
mov
push
jle
or
xchg
mov
call
cmpsl
bound
ret
out
lret
movsb
dec
mov
and
push
mov
jle
or
sub
mov
mov
cli
cmpsl
sub
push
cmovno
add
in
pop
push
jnp
adc
xor
scas
sbb
movsb
and
pushf
adc
pop
test
jbe
jmp
int
lds
adc
outsl
into
mov
or
mov
and
dec
xor
cmpsl
lea
in
mov
adc
test
fwait
gs
fcmovbe
es
mov
ror
jl
sbb
jecxz
adc
add
jnp
arpl
lods
insl
dec
xchg
rolb
adc
inc
pop
std
xor
movsb
and
aad
ss
push
mov
imull
sbb
mov
and
or
xchg
pop
cmpsl
daa
std
and
imul
or
scas
lods
mov
ss
adc
and
cmp
mov
lods
imul
mov
pop
and
cmp
popa
dec
gs
adc
es
sbb
and
insb
test
sub
fcmovbe
dec
ret
pop
hlt
test
jb
in
pop
scas
rep
push
or
jecxz
out
pop
add
jmp
in
pop
sbb
jne
mov
nop
sub
mov
sub
cmpsb
cltd
cmc
push
fildl
adc
xchg
mov
aad
push
insb
repnz
mov
insl
mov
cs
pop
fs
sbb
clc
movb
test
ja
out
icebp
imull
das
xor
mov
nop
dec
jecxz
sub
cmp
test
and
inc
les
xchg
xchg
gs
mov
loope
loopne
arpl
hlt
dec
jecxz
mov
clc
cmpsl
adc
cmp
out
pusha
outsl
mov
inc
in
push
sub
and
pop
insb
or
fwait
mov
xor
addr16
in
rorl
pop
pop
xor
movsb
mov
loop
dec
xor
repnz
jle
push
test
in
je
outsb
pop
pop
mov
cwtl
aaa
mov
inc
fisttpll
fcoms
xchg
sbb
xor
shrb
mov
sub
shll
xor
scas
stc
ds
data16
lods
insl
xchg
fnsave
push
xlat
mov
push
dec
dec
mov
into
push
inc
add
sub
jo
nop
pop
xor
ret
xchg
out
jo
clc
jmp
dec
insl
repz
dec
test
or
fs
cmpsb
nopl
add
arpl
popf
xchg
shlb
lods
lcall
out
stc
pop
int3
fdivr
ds
es
fldcw
push
mov
push
jo
add
insb
or
mov
sbb
jmp
cli
adc
insl
sarb
je
add
dec
test
or
mov
sbb
ja
jae
push
fdivs
sub
out
inc
xchg
shrl
and
dec
ljmp
mov
add
mov
mov
aas
pop
shll
in
add
and
popf
mov
jnp
scas
lret
xchg
popa
mov
jae
mov
insl
adc
fimuls
adc
jne
es
mov
push
or
bswap
and
test
ret
out
sarb
xchg
inc
or
test
cmpsb
jno
xchg
in
in
mov
dec
repnz
sar
in
stos
lcall
imul
scas
jne
cwtl
bound
mov
xchg
and
jns
in
iret
in
and
xchg
cmpsb
jle
mov
xchg
pop
bound
ret
cltd
fs
mov
sub
icebp
repnz
popa
arpl
inc
sub
jb
push
insb
adc
pop
jb
ss
aas
cmp
sbb
pop
xor
in
pop
imul
sahf
sbb
insl
xchg
pop
pop
mov
out
or
mov
testb
mov
es
fnsave
cmp
dec
gs
xchg
xchg
insl
or
inc
mov
lret
push
push
inc
insl
mov
iret
lock
xorb
push
fsubrp
inc
push
pop
jae
movsb
cli
jns
fsub
push
cmp
adcl
adc
test
cmp
add
aad
pop
dec
jo
sarl
cmp
mov
movsb
xchg
pop
cmp
and
push
jne
lcall
push
mov
cmc
xchg
or
mov
xchg
jecxz
out
dec
add
into
xor
sarb
jle
insl
jb
cld
shll
icebp
arpl
loope
aad
mov
daa
inc
pop
aaa
mov
mov
jle
cmc
call
test
outsl
dec
popf
fucom
inc
and
sub
ret
jp
iret
iret
xchg
mov
inc
mov
mov
jnp
in
daa
dec
mov
into
pop
ror
sub
test
mov
sahf
sbb
add
mov
leave
sbb
shl
iret
or
pop
adc
xor
jb
outsb
adc
jae
push
mov
cmp
adc
mov
ljmp
pcmpgtb
movsb
test
fwait
pop
jl
pop
stos
mov
pop
sub
jp
mov
stos
decl
lea
push
cs
inc
outsl
je
and
test
push
xchg
inc
xchg
mov
mov
jb
fsubrl
ret
xchg
xor
add
adcb
lods
repz
loopne
mov
pop
xchg
cmp
scas
xchg
mov
adcl
call
cmp
std
cld
sarb
imul
out
xlat
add
nop
dec
pop
mov
insl
out
sub
outsb
sub
push
sbbb
mov
cmpsl
loopne
dec
cwtl
and
addr16
mov
out
dec
xchg
popf
cmp
adc
rclb
mov
or
push
fdivrl
mov
jmp
enter
pop
bound
mov
std
pop
inc
out
fidivl
inc
sub
jp
cmpsl
push
sub
in
lds
xchg
shlb
arpl
or
sar
pop
adc
xchg
pop
addr16
xor
mov
clc
fs
adc
mov
dec
adc
mov
xchg
sbb
aaa
fldt
xchg
out
adc
in
add
mov
incl
insl
mov
shll
inc
sbb
in
data16
sub
das
and
pusha
xor
cmpsb
xchg
pop
aaa
repz
mov
xchg
lock
push
jae
xchg
sub
inc
and
jg
xchg
test
xor
and
inc
cmpsl
dec
scas
daa
pop
mov
pop
shll
call
test
sbb
xchg
out
dec
add
inc
mov
and
sbb
lods
in
insl
repnz
mov
test
stos
jl
sbb
das
imulb
dec
xor
popa
out
int
jo
imul
pusha
pop
inc
es
xchg
inc
adc
push
outsl
mov
inc
in
jmp
ss
jb
mov
test
enter
jbe
xor
out
dec
mov
mov
vpshufd
in
test
push
sti
lods
or
dec
je
outsl
mov
test
fidivs
aad
mov
cmp
stos
mov
sbb
mov
mov
repnz
aam
ret
ss
ret
int
addb
cmpsb
jmp
sbb
inc
aaa
out
sub
loop
es
lock
push
aaa
clc
push
loope
ret
test
mov
inc
or
or
adc
icebp
cmp
mov
lds
mov
int3
ret
push
in
pop
mov
imul
xchg
jb
pushf
cwtl
imul
lret
insl
stos
test
cmp
adc
mov
xchg
pop
xor
dec
adc
sbb
sub
enter
mov
lods
mov
push
data16
mov
lods
test
cli
mov
cmp
orb
orl
in
mov
adc
mov
pop
sub
cmp
mov
int
xor
add
ffree
lock
aad
jge
xchg
insb
push
lcall
sbbb
fdivrp
stc
sbb
cmp
call
jae
stc
pop
inc
xchg
test
fsubl
push
sahf
stos
jmp
xchg
dec
lods
rcrb
dec
push
mov
push
loopne
mov
loopne
jo
jae
xor
je
pop
imull
cmpsl
repz
jmp
bound
arpl
sub
push
movsb
mov
rclb
fs
mov
mov
repz
outsl
xor
lret
or
aam
and
jnp
inc
cmp
arpl
push
pop
stc
call
or
aad
movsl
sub
add
jp
adc
xor
push
orl
aaa
mov
mov
adc
fistpll
jbe
pop
outsl
clc
add
loopne
pop
in
shll
sbb
xchg
outsl
xchg
movsb
mov
imul
test
push
dec
add
push
dec
in
shll
inc
dec
push
mov
dec
mov
leave
xchg
test
fadds
mov
cmp
dec
xchg
ja
push
mov
cmp
repz
sub
jge
or
or
in
cwtl
rol
xchg
and
push
push
call
test
mov
mov
outsl
ja
insl
cmpsb
sbb
rcr
je
call
fldl
xchg
insb
lret
mov
inc
xor
lret
sti
sbb
shll
push
cli
sbb
push
out
xchg
and
mov
or
jecxz
movsb
cltd
ret
incb
jmp
out
loope
cmp
pop
lds
or
mov
cmpl
push
or
or
push
fs
rcrb
inc
or
jecxz
push
idivb
fidivrs
jg
mov
repnz
in
pop
repz
gs
imul
fiaddl
or
or
mov
sbb
or
push
movsl
xchg
inc
jnp
pusha
jne,pt
rcr
repz
cmpsl
das
cmp
adc
loop
lock
inc
sub
cmpb
bound
fs
loopne
fsts
popa
repnz
push
cld
dec
or
test
mov
test
sbb
or
dec
shrb
out
mov
out
xchg
stos
rcr
pop
adc
mov
jne
call
out
rcr
rclb
stos
jmp
dec
push
rorl
cmp
filds
subl
cmpsl
dec
cli
enter
lea
test
stc
lds
fcomps
push
xor
push
sub
mov
add
ficomps
dec
addr16
test
inc
jb
mov
add
add
xchg
test
test
mov
and
mov
xchg
icebp
lock
loope
jnp
and
pop
int
aaa
movsb
in
inc
jbe
dec
push
push
aad
mov
adc
inc
inc
jns
pop
add
add
pop
push
jb
dec
aaa
scas
dec
lcall
fs
cld
hlt
int3
out
pop
mov
xchg
pop
aaa
cmc
mov
jbe
mov
sbb
out
mov
shrl
adc
daa
xor
xor
pusha
mov
xlat
movsl
scas
js
fidivs
inc
fildll
scas
shll
mov
cltd
xor
sub
inc
jecxz
lret
test
jmp
cmp
leave
xor
insb
insl
inc
sbb
orb
mov
es
pop
cmp
fld
pop
mov
inc
jp
cmp
dec
xchg
pop
daa
jmp
out
iret
bound
hlt
push
mov
xchg
cmp
mov
clc
scas
xlat
xchg
fwait
rclb
ja
loop
inc
sbb
push
es
lock
outsl
fidivrl
adc
dec
test
bound
and
sbb
push
rorb
add
repz
iret
xor
out
pop
add
fwait
bnd
ret
jmp
mov
dec
fmul
test
adc
dec
sbb
mov
arpl
jp
mov
fsubrl
in
jge
jp
pop
cmp
enter
imul
sar
mov
sbb
cmpsb
fcom
pop
fwait
pop
jl
in
inc
and
xlat
data16
adc
xchg
mov
cmp
sahf
inc
jmp
push
mov
test
mov
into
loope
sbb
xor
scas
insl
inc
aas
jo
sub
dec
je
xchg
sub
or
xor
rcrl
fcmovnbe
inc
fnsave
cs
xor
push
or
adc
cld
lods
fadds
cli
mov
pop
call
pop
jl
xchg
and
and
fmuls
xor
adc
leave
in
mov
add
xor
xchg
xor
xchg
ljmp
inc
cmpsl
dec
scas
out
push
pop
dec
dec
xchg
cmp
imul
xchg
add
fstpl
into
popf
xchg
cwtl
inc
fimull
dec
fcmovnb
pop
int
mov
repnz
adc
mov
hlt
cmp
fbstp
ss
rcrl
mov
cmp
mov
fldenv
scas
out
lcall
pop
dec
cmpsl
adc
jp
dec
testb
push
inc
cmp
sbb
adc
andb
les
repnz
mov
adc
push
push
jg
xchg
insl
sub
xlat
test
lods
rcrl
scas
inc
test
lret
fisubrl
push
mov
sti
mov
mov
ss
je
lods
push
outsl
and
popa
push
xchg
mov
shl
loopne
adc
fnstcw
les
cmp
andb
outsb
aad
scas
and
cld
mov
clc
out
adc
jne
aas
cmp
mov
hlt
xchg
repnz
push
repnz
idiv
adc
roll
loope
addr16
jecxz
cmp
stos
and
xor
rorl
dec
loopne
pop
pop
imulb
daa
rcll
add
mov
andb
jmp
xchg
jo
sbb
push
mov
into
bound
shll
test
lea
cmp
sbb
fldl
adc
xchg
mov
aas
loope
or
or
push
lcall
orb
adc
movsb
outsb
fs
jo
movsl
and
sbb
daa
sti
inc
out
ss
pop
lds
mov
xor
repnz
pushf
mov
jae
shl
out
pop
test
mov
jns
pop
push
cmp
adc
in
pushf
sbb
leave
mov
test
or
cmp
int3
mov
call
je
xchg
rcll
fnsave
push
imul
ds
cmp
rolb
outsl
fcoms
shll
mov
adc
xchg
dec
in
cmp
or
sbbb
in
arpl
scas
hlt
scas
cmp
or
ficomps
insb
lcall
mov
sub
ljmp
mov
xchg
xor
push
dec
add
dec
jl
or
shlb
aam
or
sbb
leave
pop
aaa
aaa
xor
out
push
lahf
cmp
in
jae
sbb
ror
sub
insb
adcl
lcall
je
cmpsb
xor
rolb
xchg
dec
pop
push
mov
pop
out
repz
push
rorl
jns
xlat
and
cmp
and
inc
cmp
xor
rclb
pop
out
dec
movb
lret
das
fsts
xlat
jge
movsl
cli
repnz
push
loopne
mov
lcall
mov
push
shrl
inc
mov
push
lret
insb
lcall
dec
rorb
fcomps
fldenv
fwait
xchg
add
sbb
gs
insb
mov
mov
sbb
push
pop
mov
push
sbb
daa
popf
test
xchg
sbb
call
mov
push
outsl
sbb
push
mov
mov
pop
jno
in
movsl
ficomps
out
test
adc
mov
andl
xor
jmp
loopne
adc
sub
ljmp
psadbw
jp
mov
lea
arpl
subb
or
in
inc
call
adc
push
inc
xchg
loop
pop
or
test
into
or
or
cmp
cmp
xor
xchg
jle
cmpsb
pop
pop
push
sti
jmp
rorb
mov
mov
das
mov
inc
mov
clc
lret
or
sbbb
jmp
mov
xchg
mov
mov
sbb
in
jmp
mov
sub
lret
mov
sbb
inc
rcr
stc
mov
loop
adc
js
cmp
mov
js
xor
jle
ret
sub
fidivrs
add
sbb
sbb
daa
sti
jbe
cli
jp
cmp
and
stos
mov
mov
sub
outsb
push
cli
cs
sti
xchg
test
je
jmp
in
fisubrs
jg
pop
mov
mov
mov
aas
pop
popa
mov
clc
xchg
iret
mov
sub
dec
jno
je
faddp
inc
jmp
mov
inc
cmp
cltd
inc
push
mov
mov
leave
fwait
test
sar
pusha
lock
insb
idivb
push
imul
push
and
popa
orb
mov
ss
into
mov
xchg
xchg
jge
mov
fiaddl
call
jne
fwait
mov
sbb
adc
icebp
adc
outsl
test
pop
jge
sub
in
mov
pop
int3
bound
popa
jge
pop
mov
mov
ss
jl
ficoml
les
push
jge
pop
mov
cmp
and
xchg
or
jb
adc
orl
daa
daa
das
or
mov
mov
xchg
shr
push
xchg
mov
sbb
pop
nop
outsb
sub
sbb
sbb
sub
enter
adc
xchg
imul
cltd
pushf
les
jl
out
inc
mov
test
enter
nop
lahf
in
shrl
push
and
scas
ljmp
cmp
in
int3
aad
sub
mov
sub
ficoms
out
cmpsl
aas
jmp
stc
fdivrl
mov
lea
push
frstor
rcr
cmp
dec
cmp
andb
or
xlat
cmc
fs
ds
dec
jmp
sahf
jnp
ss
xchg
push
inc
adc
cli
js
inc
lods
adc
adc
iret
pop
ret
xchg
mov
lcall
or
sub
notl
and
je
push
mov
sub
scas
ds
insb
sub
aas
gs
sbb
jg
icebp
jg
inc
mov
sbb
mov
add
movsl
inc
std
test
aaa
lahf
adc
mov
mov
dec
jg
pop
icebp
ja
dec
inc
andb
int3
inc
repz
inc
les
sbb
aas
cltd
int
cli
sub
pop
je
push
cmpl
inc
lcall
fbld
add
jmp
sbb
icebp
push
test
inc
mov
dec
mov
cvtps2pd
and
test
and
lcall
mov
lods
test
inc
push
scas
pusha
xchg
or
in
fwait
dec
sub
hlt
scas
mov
mov
psubusb
lea
or
mov
scas
movsl
imulb
mov
add
adc
int3
sbb
or
pusha
adc
and
mov
push
dec
fiaddl
mov
stos
popa
das
cmp
hlt
xor
sti
outsb
xor
sub
mov
and
push
loope
ljmp
nop
sub
sub
stos
mulw
or
push
cmp
xor
or
jle
fdivrl
and
xchg
insb
xchg
mov
stc
outsb
loopne
and
mov
lret
mov
mov
addr16
mov
hlt
enter
jb
lods
sub
loop
mov
mov
sub
iret
je
or
jg
mov
sbb
xor
adc
push
rcr
rclb
das
sahf
cmp
jge
push
and
je
rclb
mov
sbb
lods
sub
aam
push
addb
or
arpl
fwait
jns
fadd
loop
xchg
and
out
pushf
scas
in
jecxz
repnz
xor
mov
mov
cmp
jecxz
adc
or
arpl
in
mov
jb
in
inc
adc
sti
subb
mov
ds
pop
and
fucomip
mov
js
mov
mov
and
push
dec
cmp
arpl
daa
pop
mov
test
sub
mov
mov
push
or
imul
ret
sbb
jmp
sbb
outsb
jg
push
mov
stos
add
dec
mov
stc
es
cmp
inc
repz
sbb
nop
mov
lds
jmp
ret
xor
shrl
in
bound
inc
add
add
and
aad
hlt
arpl
xchg
or
mov
mov
js
pop
fs
imul
nop
stc
imul
push
repz
inc
cmp
cmpsb
movsl
or
cmp
push
das
xchg
sub
mov
push
fidivs
int
dec
movsl
push
mov
lret
clc
test
mov
pop
adc
pop
lret
std
jecxz
call
fcoml
push
and
cmp
call
outsb
xchg
inc
aaa
mov
pop
fsubrl
cmp
inc
out
cs
xor
jl
out
mov
clc
cmpsb
test
ret
movsl
mov
sub
sub
rcrl
cs
sbb
pop
js
jnp
inc
mov
pop
pop
push
movsl
pop
mov
imul
ja
scas
lods
xchg
icebp
mov
ja
aam
fwait
cmpsl
jmp
and
into
das
in
stos
or
inc
jo
fisttps
and
dec
outsb
sub
outsb
in
icebp
jge
adc
jle
leave
inc
sbb
push
test
dec
sbb
leave
push
gs
jno
ret
adcl
out
push
pcmpeqb
and
leave
pop
out
ds
fsts
imul
ljmp
pop
lock
sub
lea
je
mov
sbb
loop
aaa
je
or
movsb
jmp
ficomps
jecxz
inc
and
push
ret
sbb
into
jp
fnsave
inc
jnp
rorl
ja
add
lock
add
into
rorb
mov
andl
inc
mov
add
lea
shlb
insb
mov
jo
mov
out
neg
cmpsb
mov
stc
pop
jl
xor
cs
ud1
lods
std
jg
scas
add
in
xor
hlt
aam
push
rorl
dec
fildll
cld
jecxz
out
cmp
inc
sub
inc
in
mov
mov
adc
mov
icebp
xchg
shr
cltd
loopne
in
loop
pop
gs
jne
sbb
sbb
xchg
push
xor
push
pop
cltd
push
movsl
pop
aam
and
stos
mov
gs
inc
outsb
sahf
sub
int
bound
into
pushf
adc
pusha
dec
xlat
repz
push
mov
mov
jle
or
push
inc
dec
aaa
out
int3
jmp
dec
call
dec
out
cmp
aam
xor
push
jno
sti
xor
imul
cmp
sarb
stos
xchg
or
jg
push
mov
cmc
sti
fs
arpl
adc
int
imulb
aas
sub
les
or
ret
cmpsb
or
rcr
dec
jne
and
add
mov
mov
cmpsb
add
cli
jge
rol
or
adc
fidivs
push
into
sub
movsb
push
cmp
xchg
pop
jne
stos
lret
jmp
sar
xor
mov
push
jg
stos
addl
aam
mov
fadds
fimull
lahf
cwtl
lods
cmpsl
test
mov
cmpl
cld
pop
push
or
cmp
add
and
inc
aam
and
lods
inc
test
cmp
add
xchg
enter
mov
xchg
inc
cmovs
sbb
std
movsl
loope
gs
jl
pop
push
std
dec
dec
fisttps
jno
mov
leave
js
jnp
loope
outsb
xchg
push
fcmovnu
mov
data16
leave
movsl
jmp
pop
mov
jns
xchg
jecxz
mov
je
movsl
push
cmc
bnd
fwait
xor
fdivrs
imul
stos
lahf
pop
push
cltd
dec
push
ds
xchg
lret
mov
fnstsw
insl
std
push
iret
dec
or
pop
orl
sbb
int3
dec
movsl
add
cmpsb
sub
push
cmpsb
mov
sub
rorb
aad
out
mov
sub
xchg
pop
js
out
sub
adc
xor
push
and
add
lahf
jle
je
pop
dec
cmpsl
out
pop
mov
and
pop
and
mov
jbe
cmpsb
repnz
mov
pop
pushl
sbb
pop
mov
daa
xchg
pusha
mov
pop
jle
push
fadds
mov
and
out
sahf
std
int
pop
dec
adc
lcall
ficoml
aas
jg
dec
mov
dec
dec
data16
push
sbb
call
cmpsb
out
inc
xor
jbe
push
bound
xlat
inc
xor
ror
test
push
jl
dec
or
mov
jg,pt
es
xchg
jl
cmc
in
inc
jo
cmc
adc
push
pop
push
and
add
cmpsl
mov
nop
imul
sub
add
inc
sbbl
or
sbb
popf
xchg
mov
adc
lods
or
dec
cmp
mov
sbb
or
jnp
xor
lds
cmp
add
adc
or
icebp
cmpsb
cmp
dec
popa
loope
xor
imul
sahf
call
daa
jg
lret
lods
mov
js
cmp
pop
test
dec
mov
and
mov
clc
and
jg
das
pop
and
sub
mov
push
push
jp
add
lahf
mov
insb
xor
mov
sub
lods
test
mov
xlat
jl
sarb
pop
out
cmpsl
inc
into
mov
inc
nop
ficoml
insb
or
mov
shll
mov
mov
stos
mov
and
mov
mov
cmc
dec
aad
fucompp
pop
xchg
outsb
fs
shlb
push
psubusb
xchg
xchg
popa
call
cmpsl
aaa
hlt
dec
jae
fs
jecxz
mov
jb
cwtl
sub
addr16
mov
xchg
out
sbb
fiadds
jle
ds
add
cmp
lret
outsb
mov
loop
pop
nop
push
outsl
inc
and
out
pusha
sbb
or
and
out
dec
pop
scas
sub
cwtl
mov
push
cmp
pushl
mov
jae
leave
dec
cmp
lret
xchg
xchg
mov
add
cmp
cvtps2pd
int
mov
out
mov
inc
leave
pop
jae
ljmp
aad
pop
xor
push
xor
pop
lods
cmp
mov
stos
jns
xchg
rcrl
push
ljmp
mov
xor
mov
add
clc
in
mov
outsb
ret
inc
stos
adc
cmp
and
insb
jno
popf
lret
clc
adc
xor
in
pop
sub
lods
dec
mov
lock
sub
addr16
mov
stos
out
jp
adc
je
xchg
inc
dec
sahf
cmp
sub
rorb
dec
mov
lods
jg
fdivl
mov
in
addr16
in
jecxz
outsl
dec
dec
and
adc
int
int
shlb
mov
cmpsb
mov
mov
sahf
jmp
inc
clc
and
lock
jb
pop
subb
insl
mov
cmp
outsb
jl
sub
and
and
cmp
jp
sub
mov
push
mov
adcl
and
movsb
xor
jecxz
add
push
sarb
popa
mov
jne
shlb
aas
push
sahf
es
push
mov
cwtl
and
ds
lods
pop
lahf
pop
cld
mov
mov
or
ss
push
ret
out
mov
and
xchg
xchg
enter
scas
xor
into
mov
nop
fucomi
push
inc
rorl
sti
dec
push
ror
mov
and
daa
add
lock
mov
dec
hlt
cmpsl
or
data16
movsb
rolb
addl
mov
inc
cmp
test
mov
lock
lock
xor
mov
testl
sbb
push
in
mov
test
ret
sbb
jmp
lret
ss
push
orl
mov
iret
mov
movsb
lods
adc
insl
pushl
push
pop
jg
sbb
out
jo
cmp
test
into
add
scas
xchg
xchg
loopne
out
inc
or
pop
and
std
push
sub
stos
mov
sbb
pop
mov
mov
lcall
mov
xchg
outsl
mov
loope
jle
add
jb
pop
in
push
arpl
scas
orl
and
das
into
rol
movsl
inc
stos
cmp
xchg
jb
cmp
pop
pop
call
push
pop
cmp
shrb
fldenv
push
lcall
mov
data16
cmp
jns
dec
mov
adc
mov
int3
add
push
movb
iret
mov
enter
dec
pop
leave
fwait
mov
jbe
or
fnstenv
or
adc
jae
in
roll
fs
mov
push
add
jb
adc
and
xor
ljmp
mov
mov
push
xor
mov
sbb
mov
add
lahf
mov
xchg
loopne
push
lods
jl
jb
adc
outsb
data16
lcall
push
sbb
sub
sub
test
ret
inc
push
sbb
push
mov
mov
imul
cld
es
push
test
inc
jns
adc
shrb
push
xchg
inc
push
fsubrs
scas
mov
into
xchg
mov
movsb
xor
mov
out
pop
jle
and
xchg
pushf
add
fisttpl
jne
cld
mov
dec
jb
repz
push
xor
adc
mov
pushf
fwait
leave
movsb
mov
xor
insb
pushf
pop
sub
lods
inc
ljmp
adc
fadd
jge
jno
push
cmp
push
stc
pop
repnz
int
mov
enter
sti
and
inc
pop
ljmp
es
mov
cmp
in
cli
sbb
lods
mov
sub
pushf
ret
pop
mov
arpl
bound
clc
xchg
push
push
addr16
mov
push
or
jns
sub
adc
mov
js
jmp
jle
cmpsl
mov
push
jg
xor
sarl
jns
data16
mov
out
xor
adc
push
jno
jecxz
jb
std
mov
pop
into
insl
and
mov
push
push
push
xchg
jae
cli
data16
leave
ss
mov
push
xchg
xchg
insb
xor
pop
rorb
push
es
dec
mov
adcb
inc
fdivs
cltd
adc
jmp
push
shrl
or
mov
sbb
orb
fildll
jmp
mov
dec
insb
test
add
test
das
popf
aam
sub
adc
push
cmp
jp
or
pop
popa
incl
test
push
std
nopl
sahf
jp
jle
iret
cld
sahf
pop
push
xchg
sub
imul
out
fistpl
jae
outsb
mov
in
imul
sbb
inc
mov
inc
dec
popa
insl
rcl
lahf
add
push
mov
inc
pop
cmp
out
push
lret
sub
fidivs
cmp
lods
mov
arpl
test
push
and
mov
inc
pop
inc
popa
fbld
pop
popf
imul
pushf
mov
jbe
scas
mov
movsl
push
push
aas
xchg
addr16
pop
mull
add
inc
out
mov
xor
add
sub
stos
popf
inc
jb
or
xchg
mov
stos
pop
sbb
mov
push
jns
jno
leave
ljmp
sahf
inc
or
jle
mov
sbb
jo
jecxz
jns
ficompl
gs
xor
adc
sbb
sbb
enter
fwait
iret
sbbl
int
movsb
stos
lret
and
jns
pop
mov
cli
repz
fsts
add
sbb
ret
mov
pop
ror
iret
fiadds
sarl
cmpsb
sub
iret
xor
mov
or
repz
mov
lock
pop
pop
push
dec
jecxz
popa
mov
cli
popf
imul
adc
inc
loope
enter
xchg
popa
aas
iret
sbb
jmp
and
std
pop
cwtl
pop
cmp
imul
push
test
sbb
push
hlt
fsubrp
mov
std
leave
cmpsl
repz
sub
aas
jmp
mov
cmp
outsl
mov
les
mov
mov
xor
je
xlat
je
ljmp
lcall
jmp
jg
mov
sub
push
mov
scas
fdivrp
outsb
jno
jns
mov
sub
adc
sbb
cli
push
dec
aam
iret
push
cmc
adc
dec
and
pop
popa
inc
and
pop
sbb
or
mov
inc
ret
lock
mov
mov
sbb
lea
push
ror
jne
sahf
jecxz
xor
mov
cmp
shrw
and
repz
jne
inc
push
cli
cwtl
xchg
xchg
rol
inc
insl
sbbb
lods
je
insb
std
aaa
fwait
movsl
mov
adc
pop
jle
mov
or
push
rorl
dec
add
int3
xor
aam
mov
and
mov
push
cmp
and
cli
push
in
cmp
jne
int3
ds
jnp
out
xchg
dec
jo
into
push
lahf
jl
mov
mov
adc
dec
lret
xor
dec
sti
lods
cmp
fstpl
leave
or
xchg
jbe
push
jmp
mov
cmp
popa
pop
cmc
int
into
mov
push
push
push
sub
movsb
out
test
rcll
iret
sub
fcomi
and
loopne
ds
std
in
ja
fs
push
dec
xlat
dec
adc
jmp
inc
fisttps
or
and
scas
out
aam
pop
xchg
adc
popf
insb
aad
cs
add
cmc
int
cwtl
mov
xor
pop
xchg
sub
lods
fwait
sub
mov
rcr
loop
mov
sbb
and
jo
scas
les
orl
leave
push
sub
inc
xchg
pop
dec
fsubrl
cmp
xchg
addr16
inc
jge
fcomp
xchg
clc
in
cmpsb
inc
enter
jns
mov
mov
push
add
mov
sub
scas
leave
push
jne
pop
push
data16
cmpsb
sti
imul
movsl
push
dec
and
repz
sub
sub
loop
lcall
and
lcall
mov
aad
sub
shrw
push
push
lret
push
cld
stc
data16
mov
jge
and
jmp
dec
mov
stos
jae
insl
push
cld
das
push
lea
and
jp
xor
fistpl
imul
sbb
jg
cmp
adc
cs
mov
push
bound
mov
out
test
adc
fsubp
inc
getsec
cmc
es
subl
and
jge
or
fildll
sarl
inc
sub
and
xlat
out
ret
in
sub
sub
ret
std
sub
push
sub
sbb
or
jg
aas
cmc
xlat
xchg
xchg
and
ret
fistps
cmp
xchg
xchg
sbb
inc
ficomps
lds
repz
dec
out
sub
ret
in
lds
ret
cmpsl
pop
lock
and
xchg
cwtl
sti
sti
dec
adcb
outsb
stc
ljmp
sub
push
mov
popa
adc
xchg
hlt
test
push
adc
adc
fs
mov
dec
and
mov
cmp
jmp
sbb
push
xor
popf
movsl
jl
push
cwtl
movsl
mov
test
mov
loopne
mov
xchg
push
xorl
pop
or
adc
push
bound
push
mov
xchg
repz
ficoms
mov
mov
imul
cmp
stc
xchg
sahf
inc
adcb
data16
cmp
bound
dec
cmp
filds
std
sbb
cmp
and
dec
jae
pop
cmp
imulb
and
outsl
enter
loopne
gs
adc
and
inc
dec
add
setno
inc
std
and
push
scas
shrl
and
lock
push
xor
xchg
pop
xchg
adc
dec
fiaddl
repz
mov
sbb
pop
test
and
cmc
enter
dec
xchg
and
jp
imul
hlt
into
and
hlt
stos
movsb
clc
fwait
xchg
in
jmp
mov
xchg
popl
xorb
inc
sete
push
or
push
lods
lret
jle
cmpsb
sar
ljmp
fisttps
and
mov
aas
dec
or
fldl2e
jecxz,pt
push
and
fimuls
aad
dec
adc
dec
xlat
mov
mov
fdivs
pop
or
xchg
pop
mov
daa
or
and
lock
in
call
sbb
mov
fdivs
in
in
push
ret
stos
inc
xlat
xchg
mov
ficomps
push
dec
mov
femms
ret
jae
inc
lea
jnp
out
imull
sbb
cli
sarb
and
popl
lret
pop
movsb
loopne
scas
mov
addr16
aas
xor
or
lds
or
sub
and
and
jno
cmpsl
in
add
mov
or
vsubss
test
mov
push
and
mov
jmp
pop
jbe
pop
xchg
adc
dec
adc
add
adcl
das
sbb
jge
gs
loopne
inc
adc
mov
xchg
arpl
sub
imul
or
fildll
and
pop
mov
jmp
sbb
stos
sbb
and
vmovss
test
jle
imul
cmp
jmp
and
xchg
sub
andl
cmc
cltd
cmp
pusha
mov
and
fimull
adc
jo
lret
push
test
pop
lret
imul
add
test
add
add
cmpsl
cmpsl
cltd
pop
pop
rcl
test
imul
push
shlb
add
xchg
rcrl
xchg
jmp
mov
in
mov
or
mov
dec
push
dec
inc
lahf
dec
js
in
shll
sbb
push
push
push
mov
int3
popf
rcrl
out
xor
adc
in
lock
sub
xlat
jb
arpl
std
popf
iret
mov
xchg
call
in
xchg
xor
xchg
xchg
in
outsb
inc
inc
or
xor
test
and
inc
clc
rcr
dec
loop
stos
pop
fsubrl
mov
mov
xor
fs
mov
test
sbb
pushf
out
fcompl
jl
jnp
not
mov
and
cs
jb
inc
loope
xchg
inc
insb
icebp
jno
jle
repz
sub
add
pop
jb
out
in
inc
nop
fidivs
inc
loop
roll
addr16
fistpl
gs
cmp
sbb
scas
cltd
mov
mov
das
xor
aas
inc
je
adc
insl
push
push
push
repz
jbe
xchg
jmp
insl
mov
cld
pop
imul
inc
jo
jecxz
dec
mov
outsl
test
push
dec
sbb
outsl
pop
iret
jmp
les
rorl
add
aaa
stos
shr
arpl
adc
icebp
add
or
dec
imul
mov
aaa
and
mov
int
or
adc
push
mov
loop
mov
mov
mov
dec
test
lods
jg
int
sbb
cli
cli
cmp
mov
mov
call
imul
jmp
in
repz
ss
jp
fcoms
xchg
lahf
imul
push
jo
lcall
lods
mov
pmovmskb
xchg
inc
movntps
add
repz
stos
hlt
ds
xor
xor
cmp
lock
push
lcall
les
pop
out
nop
add
pop
cmpsb
add
sbb
lea
sbb
push
jmp
jae
cmc
mov
hlt
cmp
dec
push
jge
lods
pop
cmpsb
decb
cmp
or
jg
jb
nop
divl
sub
mov
push
cmp
mov
rcll
pop
lods
xchg
lods
idivl
imul
out
mov
pop
int
pop
dec
mov
pop
jne
enter
pop
test
cltd
ds
or
jg
add
jbe
icebp
xor
mov
cmp
lods
mov
repz
adc
mov
jb
pop
cli
out
es
mov
inc
faddl
fmuls
xchg
jge
mov
mov
imul
mov
ds
sbb
push
jnp
adc
sub
filds
clc
rclb
cli
lret
dec
jae
pushf
sti
popa
add
mov
lret
rorb
and
push
adc
fiaddl
inc
fistpll
ja
sbb
add
lahf
adc
push
pop
aas
jnp
cmp
dec
mov
add
imul
adc
outsb
and
jnp
lods
or
cltd
testb
pusha
jo
jp
loopne
push
cmp
or
fwait
cmp
js
test
pop
ret
sub
sti
inc
mov
movsl
lds
nop
inc
inc
lret
test
xchg
cmpsl
stc
in
pop
fnstsw
add
enter
dec
push
adc
enter
xchg
sahf
mov
cli
dec
mov
enter
pop
xchg
out
mov
sbb
loope
and
stos
lods
jl
outsl
fs
pop
push
mov
out
mov
cltd
mov
pop
adc
loope
push
fprem
mov
xchg
mov
sbb
push
add
pop
inc
test
or
xorb
scas
xor
icebp
xor
lock
inc
mov
add
je
pop
std
aas
popf
or
mov
mov
dec
lahf
jp
pusha
sbb
push
and
xchg
or
add
iret
shlb
adc
pop
loope
xchg
dec
mov
sub
ret
jmp
imul
popf
pop
dec
inc
lods
push
fists
jbe
int
shlb
cmp
pop
mov
notl
movsb
jmp
repnz
repnz
dec
jl
mov
push
test
arpl
popa
push
mov
loop
sub
int3
add
shrb
pop
adc
inc
inc
inc
fwait
dec
sub
pop
mov
filds
sahf
mov
ret
ja
jae
aad
xor
ret
movsb
cmp
sahf
mov
jl
dec
push
in
cmp
push
fimuls
inc
jecxz
xchg
stos
stos
inc
dec
jg
cltd
lret
xchg
xchg
adcb
sarb
pop
enter
mov
cld
scas
ror
inc
icebp
mov
lods
popf
and
push
mov
inc
vmaxpd
cmp
out
jne
in
mov
sub
addr16
js
cmp
cmp
ss
mov
push
xor
mov
ficoms
xchg
movsl
nop
gs
movsb
arpl
aaa
insb
in
outsb
out
shlb
loopne
out
out
jae
push
pop
fimuls
lods
cmpsb
and
in
fsubrs
xchg
adc
xchg
adcb
test
xchg
or
sbbl
push
mov
cmpsb
call
jb
inc
add
add
mov
flds
sbb
mul
mov
inc
sbb
rcll
or
fnstcw
pop
inc
mov
gs
inc
sti
lahf
daa
push
inc
adc
xchg
in
cli
ja
xchg
je
or
jmp
cmp
gs
xor
daa
cmp
iret
inc
in
mov
xchg
pop
mov
adc
mov
mov
jle
shl
iret
push
fs
adc
popa
shr
shlb
stos
jae
cmp
aam
lods
fnstenv
cmpsl
in
xor
lds
sub
mov
sub
mov
scas
mov
arpl
loopne
lcall
sub
adc
push
call
les
pop
sti
sub
lahf
or
mov
xchg
mov
iret
adc
pop
sbb
dec
cmp
pop
mull
adc
fwait
pop
mov
xor
mov
jnp
scas
pop
lds
pop
xchg
and
aam
arpl
lret
cmp
stc
insb
jl
arpl
sti
inc
sbb
lahf
sub
or
jge
mov
mov
or
out
and
mov
call
pop
lcall
jp
jbe
outsb
jno
push
sub
test
mov
ret
scas
mov
dec
mov
jl
fnstsw
rorb
in
inc
sbb
cmp
adc
push
ds
add
sti
inc
cmp
arpl
mov
inc
popf
ret
xchg
fimuls
fimull
sbb
andb
lds
pusha
mov
insl
and
gs
pop
in
xchg
je
fwait
push
rorb
xor
mov
out
xchg
and
icebp
mov
mov
arpl
xor
andl
es
insl
clc
in
enter
lds
int3
mov
pop
ret
ds
jmp
pop
fcoml
mov
sti
int
popf
imul
add
xor
mov
push
jno
leavew
sbb
jp
iret
fs
outsl
push
sti
adc
mov
lds
pop
jns
fmull
cld
jbe
mov
xchg
cmp
lahf
cmp
out
mov
outsl
xchg
jl
pop
inc
or
pushf
clc
sbb
mov
mov
das
inc
xchg
push
es
ret
and
mov
push
mov
mov
xchg
pop
inc
ja
jbe
test
push
ss
lret
mov
ud1
ret
cmp
mov
jg
aam
jl
jg
xadd
inc
stos
repz
push
into
subl
arpl
cmpsb
arpl
call
mov
gs
pop
push
mov
enter
dec
into
lods
and
mov
add
xor
sub
fwait
mov
int
sti
pop
aad
mov
pop
add
cmp
cmp
xlat
insb
hlt
push
pop
ret
lret
popa
xchg
xchg
lock
dec
mov
and
mov
sub
push
gs
repz
fldenv
push
and
daa
add
xor
mov
and
arpl
scas
inc
rclb
push
and
and
fs
pop
push
sub
push
and
enter
fstpt
js
add
int3
clc
sub
pop
std
stos
jne
dec
inc
les
sub
shrb
leave
mov
lcall
dec
xchg
arpl
sbb
pop
out
test
or
shrb
add
arpl
push
out
js
cs
jae
in
sbb
mov
jge
stos
pop
icebp
cwtl
jne
sahf
aas
xchg
mov
nop
push
push
jecxz
imul
or
sbb
sub
dec
daa
nop
bound
rclb
mov
hlt
adc
push
push
mov
add
repz
add
orl
adc
pop
mov
not
dec
sarb
test
mov
sbb
dec
cmc
or
mov
xchg
push
cmp
and
mov
inc
into
into
stos
jl,pt
inc
lds
andb
int
movsl
insb
cwtl
loop
push
fisttps
movsb
sti
mov
adc
mov
xchg
lods
loopne
xlat
dec
das
inc
push
aad
xor
xchg
fcoms
cmp
insl
and
mov
sahf
loopne
xlat
lds
mov
dec
adc
fsubs
dec
lds
jp
add
movb
or
or
fwait
mov
fisubl
shlb
cli
in
jns
aas
nop
in
pop
lods
stc
out
cli
mov
leave
out
popf
in
xor
stc
mov
dec
or
pop
push
pop
fdivl
scas
repnz
sub
sbb
in
movsb
in
jmp
add
mov
xlat
out
gs
jle
aaa
mov
dec
dec
test
and
clc
popa
stos
rcl
loope
lcall
inc
sub
or
stc
pop
insb
je
dec
sbb
dec
ffreep
sub
imul
add
or
xchg
shlb
and
xor
push
dec
lds
addr16
dec
mov
mov
fs
addr16
aam
jbe
pop
sub
sbb
jne
mov
dec
mov
add
pop
and
add
mov
jns
aad
xor
inc
push
mov
pop
enter
jbe
lds
push
test
or
xchg
ficoms
int3
clc
rcrl
push
in
add
jg
les
jo
and
xor
mov
push
inc
out
jl
imul
sub
mov
inc
mov
cltd
rolb
adcl
inc
fldl
in
aas
ret
pusha
call
popf
push
outsl
or
les
mov
dec
jmp
sahf
sbb
fcoms
test
mov
mov
ret
enter
lods
movsb
inc
ret
and
mov
xchg
adc
sub
pop
outsl
dec
jge
insl
inc
sahf
mov
lods
lret
inc
sbb
rol
loop
and
in
sub
shlb
mov
or
mov
insb
test
cmp
imul
hlt
jmp
xchg
rorl
mov
loopne
dec
mov
dec
shll
xchg
pop
push
scas
dec
mov
shrb
rorl
cmp
push
insb
loopne
lret
sbb
std
fistpll
fwait
cld
sub
outsl
lcall
cmpb
fidivs
stc
imul
aaa
inc
loope
xor
push
in
bound
xor
pop
insl
mov
addr16
lock
out
jb
sub
movsb
or
jnp
movsb
lods
or
mov
clc
jge
mov
out
xchg
out
xor
xchg
insb
cmp
enter
int
sbb
sbb
pushf
inc
aam
clc
or
enter
push
mov
dec
push
bound
sub
stc
xor
into
pop
adc
mov
pop
inc
jge
outsb
push
inc
add
xchg
jae
mov
lret
pop
mov
call
test
jecxz
pop
dec
daa
sbb
add
cmp
inc
mov
and
adc
dec
test
cmp
sti
rclb
fs
ret
pop
shrl
jne
mov
sub
xorl
rcr
inc
fldl
cmpsl
sahf
xchg
sbb
pop
and
popa
in
out
jg
xchg
sbb
ret
push
mov
xorb
xchg
push
mov
loope
sbb
movsb
pop
jl
bound
cmp
fistpll
push
popa
loope
xchg
xor
mov
loop
repz
cmp
xor
mov
pop
xor
mov
jno
or
loope,pn
or
aas
and
mov
loop
mov
aaa
sbb
pop
andb
xchg
out
push
jb
xchg
dec
jne
xchg
push
ret
or
xor
sbb
test
out
dec
popf
sub
ja
call
xor
hlt
inc
hlt
push
shll
and
insl
scas
mov
scas
ret
out
sti
dec
fs
test
inc
xor
gs
arpl
sub
aad
sbb
pop
stc
in
or
pushf
ret
fcomip
jp
imul
push
push
sub
addl
mov
cli
imull
sbbl
out
push
lea
cmp
or
je
add
fidivrl
push
dec
adc
pop
pop
xor
add
icebp
inc
inc
push
lahf
and
jmp
mov
in
loopne
jbe
mov
xchg
fs
inc
mov
lcall
ffree
sub
xchg
adc
movups
cli
call
sbb
cmp
pop
daa
iret
jae
stos
mov
std
cs
inc
and
cwtl
cmp
sti
clc
sub
jno
or
sub
xchg
repz
das
and
shrb
data16
mov
xchg
stc
enter
mov
insl
pop
mov
jae
shll
int
xor
and
mov
jge
and
adc
and
out
mov
clc
pop
add
iret
sub
sbb
mov
cmp
adc
cwtl
mov
ljmp
iret
xchg
ja
xor
call
inc
xor
movsl
cmpsl
mov
or
pushf
adcl
and
and
js
mull
push
xchg
cmpl
outsb
ret
stc
adc
xor
mov
mov
out
fcmovb
mov
jne
inc
dec
pop
icebp
js
fnstcw
das
fwait
mov
push
mov
xor
xchg
push
push
add
gs
leave
stos
fs
ljmp
ret
je
or
lret
mov
push
lds
xchg
ficoms
add
sbb
ds
jle
mov
sbb
jp
inc
stc
fsubrs
mov
pop
mov
push
mov
call
loope
daa
les
fcmovu
push
arpl
ja
adc
xor
test
loope
push
cmp
or
add
cmc
shlb
mov
push
cltd
arpl
adc
mov
clc
pop
roll
lret
sub
enter
fnstenv
ret
in
sbb
std
fwait
popf
mov
iret
jmp
cmp
testl
stos
cmp
mov
stos
jle
mov
adc
mov
arpl
xchg
aas
pop
or
sub
xchg
leave
xor
jle
or
sub
roll
mov
loopne
sahf
js
sbb
xchg
push
and
or
popf
or
dec
into
fwait
cwtl
fucomip
dec
cmpsl
and
dec
sbb
lods
mov
pop
xor
sub
add
bound
mov
pop
pop
xchg
in
test
inc
mov
or
mov
add
repz
dec
mov
in
mov
push
push
insl
idivb
xor
sahf
lahf
cmp
cli
sbb
add
fdiv
mov
iret
and
js
and
addl
or
scas
add
bound
push
cmpsb
and
test
push
loop
mov
hlt
test
pop
xor
or
xlat
jns
push
inc
mov
sbb
cwtl
cwtl
lods
fimull
test
jle
jne
stos
pushf
jbe
dec
in
shl
or
push
nop
sbb
cs
rol
loop
xor
dec
js
scas
cmp
jne
mov
push
loop
adc
jb
sub
inc
jmp
push
ret
pop
mov
cmc
pop
aaa
shlb
jb
cmp
ret
popf
cmp
inc
scas
cwtl
out
add
stos
in
cmpsb
lahf
aam
pop
lods
stc
ret
or
jbe
add
jo
cmp
ljmp
loop
mov
mov
adc
pushf
inc
test
cmpb
or
jmp
sbb
sub
push
sub
pop
push
inc
dec
and
scas
out
int3
faddl
jmp
xor
and
call
repnz
cld
fs
pop
mov
xchg
push
sbb
test
mov
lods
cwtl
lea
lods
push
jl
les
jp
inc
aaa
lods
push
mov
add
loopne
cmc
cltd
cmp
mov
ljmp
loop
inc
xchg
mov
jmp
pop
mov
pop
out
or
or
into
jmp
cmp
cmp
push
and
push
push
sub
les
divl
xchg
imul
neg
mov
jge
sub
adc
addr16
enter
and
outsl
mov
pop
mov
pushf
dec
mov
sahf
mov
aam
lahf
cmp
andb
rolb
ss
fldl
mov
scas
mov
dec
int
adc
enter
jae
aam
push
push
push
add
in
inc
in
out
call
jns
or
sub
jbe
jns
sub
fwait
imul
and
pop
insb
cmp
adc
std
inc
lods
add
js
cwtl
in
and
push
lock
xorb
or
shlb
and
mov
jbe
aad
cli
mov
clc
and
notb
aad
ja,pn
shl
mov
pop
mov
fs
rolb
xor
push
repnz
mov
sbb
sub
repnz
pusha
jne
cmp
sahf
aas
and
repnz
int3
test
lds
xchg
mov
out
aam
addr16
add
dec
frstor
fnstcw
aas
es
out
sbb
mov
mov
jns
inc
xlat
mov
aaa
pusha
int3
push
cltd
shll
pop
and
xchg
add
jb
ja
mov
mov
in
dec
and
testl
push
clc
addr16
or
push
nop
test
sbb
ficomps
lods
sti
mov
push
sbb
or
and
xchg
pop
fdivrp
std
dec
loop
inc
ja
inc
sbb
nop
outsb
in
mov
xchg
mov
add
or
gs
pop
fildll
cmp
aam
fisubl
and
out
setp
add
xor
xor
data16
ret
test
out
cmpsl
rcll
sub
int3
fcompl
jb
push
dec
sbb
or
pop
xor
aam
pop
mov
lahf
mov
add
shrl
aaa
fiadds
test
cli
pop
rcll
cmp
push
pop
js
das
insb
idivb
pop
push
cmpsl
jne
repnz
mov
lea
es
jmp
adc
aas
mov
stos
and
out
shl
cltd
cmc
adc
in
jg
and
adc
ret
aad
mov
mov
xor
xchg
add
sub
mov
dec
add
push
adc
mov
ret
imul
xlat
mov
dec
xchg
add
sub
xchg
cmp
pop
pop
ljmp
outsl
mov
mov
xor
dec
push
push
out
andl
xchg
mov
cmc
scas
jo
add
xchg
jg
add
mov
mov
clc
stc
addb
xlat
sub
add
jno
pop
mov
daa
push
mov
jne
mov
dec
fistl
std
jmp
jmp
jmp
or
add
push
inc
xor
lcall
or
repnz
xchg
push
ror
inc
stc
fstpt
cltd
xchg
adc
out
rolb
push
clc
adc
inc
aaa
pop
push
comiss
out
sub
cwtl
push
push
dec
mov
aam
inc
dec
ljmp
rcll
pop
in
sbb
call
lret
xchg
test
sarl
mov
push
aam
mov
cld
add
aam
mov
in
insb
sub
cmp
cmp
js
notl
xor
mov
out
test
in
inc
mov
dec
jae
leave
data16
fldl
in
out
mov
in
mov
cmc
and
xor
sbb
stos
xchg
hlt
lret
insl
push
add
pop
dec
ljmp
outsl
sahf
fs
sarl
mov
cmpsl
aas
push
dec
or
mov
icebp
jmp
std
push
fisubs
sbb
push
in
int3
push
adc
inc
daa
std
mov
sbb
jl
jmp
ja
jnp
ret
call
mov
clc
call
outsl
mov
dec
fsubr
fidivrs
mov
and
stos
add
insl
fisubl
xchg
or
in
adc
xchg
mov
js
pop
inc
in
int
bound
ja
adc
js
adc
hlt
test
lret
jb
ljmp
add
jge
fwait
mov
movsl
jo
int3
test
dec
mov
mov
mov
mov
mov
cmp
sub
sahf
out
int3
pop
sahf
std
xchg
xchg
loop
sub
ficoms
cmp
cmc
jae
xchg
in
sub
addr16
bswap
add
and
outsl
ds
ds
aas
rcrb
mov
lods
popa
arpl
xchg
into
push
lcall
pop
inc
inc
push
out
popa
frndint
push
push
addr16
iret
jl
mov
push
xor
lahf
into
mov
mov
rclb
loope
cmpsl
sub
xchg
pop
add
sub
rorl
adc
xor
adc
test
mov
mov
roll
jg
lods
cld
sbb
inc
sub
aaa
xor
bound
dec
mov
pop
imul
cmp
sbb
rcll
int
scas
dec
inc
pop
or
out
and
ljmp
sub
sbb
mov
lahf
mov
data16
lock
sbb
pop
popf
mov
imul
pop
push
add
cltd
push
sahf
jno
pushf
adc
adc
fwait
clc
ficoms
or
in
shr
cmp
pop
and
repz
mov
cmp
sub
shrl
fsubs
xor
in
jmp
shr
jne
sub
xchg
stos
mov
sbb
je
xchg
sub
aad
loop
ret
loopne
andb
lods
mulb
icebp
fdivs
inc
xlat
sub
lahf
stos
dec
daa
scas
fldl
daa
out
jmp
popa
sbb
mov
fwait
and
fcoml
aaa
mov
push
fdivs
cltd
sub
adc
mov
inc
popa
lods
inc
push
fists
mov
dec
out
jmp
mov
push
ss
xchg
pop
popf
add
xchg
insb
sbb
jbe
add
out
jecxz
push
xchg
addl
out
add
cs
mov
dec
movsb
adc
fidivl
enter
bswap
js
sub
inc
stos
mov
xor
jnp
xchg
push
sbb
cmpsl
adc
cwtl
pop
add
repz
push
bnd
jae
push
cmpb
insl
cmc
dec
ret
add
lret
xor
js
cld
jnp
popa
test
adc
adc
in
les
and
sbb
push
inc
or
mov
nop
call
jl
push
iret
sub
mov
pushf
push
lret
and
pop
test
repz
adc
push
add
lock
lds
outsl
push
inc
mov
shlb
shrb
lret
inc
push
sti
movsl
pop
add
iret
xchg
out
dec
jl
arpl
arpl
cltd
sahf
lds
mov
je
mov
cmc
iret
push
pop
pop
fsubl
pop
xchg
dec
ja
popa
nop
jecxz
imul
popf
xchg
push
iret
add
xchg
insb
lds
and
call
dec
leave
cmp
sub
idiv
mov
xchg
fcmovb
sub
call
imul
mov
adc
sbb
sbb
subb
pusha
jnp
out
xchg
xor
std
mov
fstpl
inc
ss
adc
add
dec
enter
xchg
add
or
dec
mov
aad
scas
or
lods
xor
repz
jbe
adc
add
shll
ds
and
sbb
enter
and
movsb
sahf
add
iret
dec
dec
pop
into
inc
mov
mov
cltd
loope
pop
gs
push
jo
xchg
out
cmp
iret
pop
or
gs
xchg
jo
das
xchg
insl
push
dec
jo
mov
out
push
cmc
mov
jae
jo
lock
cltd
xor
or
jb
jmp
out
jmp
and
sarb
test
pop
sbb
aad
mov
cwtl
cmp
dec
sbb
leave
bound
mov
scas
jb
adc
xchg
xchg
push
xchg
insl
add
addr16
dec
adc
mov
inc
je
test
add
sbb
mov
jnp
pop
cmp
sti
inc
lahf
lcall
js
mov
or
andl
jge
out
push
lret
lcall
int
and
mov
push
or
cld
sti
xchg
fsubl
arpl
adc
add
jbe
je
test
test
jp
loop
jno
faddl
jmp
stc
call
stos
cld
mov
cmpsl
fidivl
ss
add
xor
fstpl
inc
add
pop
popf
cmpsb
add
jge
or
pop
ljmp
movsb
lods
inc
xlat
outsl
mov
mov
and
fs
xchg
sbb
mov
dec
sub
lea
leave
lcall
and
pop
pusha
pop
mov
xchg
test
jp
outsb
sbb
push
pop
in
sub
jnp
nop
cmp
mov
mov
adc
or
fiadds
mov
xchg
repnz
pop
and
add
mov
pop
inc
lret
jb
sub
push
insb
sub
cmpsl
ret
movsb
addr16
cmp
and
mov
inc
jecxz
mov
or
mov
add
std
inc
adc
std
fstpl
jb
sub
push
jge
dec
mov
add
mov
mov
scas
cmp
sub
cmp
aaa
xchg
sub
cmp
jg
jne
jmp
or
ret
out
aas
cwtl
cmp
incb
dec
je
adc
lea
mov
lods
stc
aam
push
xor
int3
bound
push
int3
js
cmp
adc
mov
dec
orl
mov
sbb
xor
cs
ljmp
fldcw
rorb
sbb
iret
jmp
int3
xchg
js
cs
fs
jmp
lret
test
mov
negb
fwait
mov
iret
pop
or
cltd
btsl
mov
mov
pop
orb
fbstp
mov
xchg
sbb
mov
cmp
sbb
mov
xchg
out
sbb
pop
xchg
roll
mov
cli
jbe
lret
pushf
sbb
push
xchg
arpl
push
lret
cmp
int
mov
loopne
addr16
lahf
fnstenv
int
mov
and
pop
into
imul
mov
sub
inc
or
mov
popa
fwait
psrad
jmp
lds
bound
movsl
adc
jno
fbstp
ja
sbb
sub
and
or
insb
xchg
or
loope
xor
or
dec
sbb
jne
xor
mov
in
xchg
movsl
push
and
addb
push
fidivl
and
or
push
xor
and
outsl
mov
je
dec
and
sbb
jp
mov
push
push
loop
xor
cmpsl
popa
or
mov
adc
mov
ja
rorb
into
es
push
push
pop
lods
aam
ds
xchg
fsubs
push
shr
mov
shll
mov
ret
sahf
ret
icebp
mov
fldcw
mov
mov
sbb
iret
mov
mov
xor
sbb
sub
jmp
mov
mov
cmpsb
inc
pop
lcall
push
aaa
adc
add
ret
mov
sar
repnz
scas
mov
jae
pop
aas
loop
xchg
inc
imul
jo
jmp
inc
shr
cmp
mov
push
out
data16
jecxz
pop
sbb
jo
mov
lea
push
mov
out
xlat
mov
lcall
mov
mov
or
mov
in
insl
sub
cwtl
mov
outsl
pop
inc
cli
ret
fisttps
pop
and
lea
aaa
or
push
int3
nop
mov
cmp
scas
stc
pop
fs
lds
jns
mov
in
mov
inc
popa
fwait
sti
inc
je
jecxz
stos
mov
insb
test
popa
dec
movsb
stos
jmp
cli
push
fmuls
mov
ja
push
xorl
into
push
or
sub
pusha
xchg
or
pop
mov
jmp
jle
enter
test
testl
je
sbb
mov
aad
dec
out
cmp
inc
out
add
jo
cwtl
push
pop
dec
push
pop
dec
push
sbb
jae
cmc
add
pop
mov
insl
cmp
inc
cli
sub
mov
and
leave
jns
jbe
rcrl
inc
ret
lods
dec
add
pop
cmp
jb
pusha
dec
pop
fdiv
ret
mov
inc
and
dec
stos
scas
gs
mov
sbb
clc
ja
dec
iret
pop
mov
add
push
sti
push
mov
xchg
pop
sahf
xlat
push
add
dec
insb
pop
popa
push
insl
cld
mov
cltd
pop
pop
or
pop
mov
dec
in
ds
cmpsb
gs
or
shlb
inc
sub
cmc
test
inc
mov
mov
push
adc
sbb
mov
xor
jmp
xchg
and
cmpsb
test
test
rolb
xor
icebp
cmp
push
ss
cmp
or
xchg
call
or
aaa
shr
pop
fsubrs
mov
jl
cmc
inc
mov
cmp
fdivl
jae
ljmp
sub
inc
mov
lock
pop
cmp
mov
clc
push
inc
cltd
cmp
xchg
and
mov
inc
cmp
dec
mov
jl
std
insl
and
negb
je
fldt
pushf
cld
call
mov
pop
cltd
push
out
bound
ret
inc
jnp
outsl
pop
fcomi
int
shl
add
cmp
xchg
or
lcall
loope
mov
mov
mov
mov
jb
popf
xchg
lcall
xor
add
pop
inc
int3
mov
mov
dec
jmp
mov
jo
cmp
push
lea
lcall
xchg
fidivrs
xorl
jbe
jge
mov
call
lret
mov
into
aaa
push
stos
pop
call
push
mov
sub
cmp
ret
outsb
frstor
out
pop
adc
push
mov
iret
sub
push
std
movl
mov
decl
xchg
mov
jns
jp
fdivp
daa
mov
pop
shlb
jl
data16
mov
mov
out
bound
std
mov
orps
pop
in
je
mov
push
adcl
and
push
pop
ret
rcrb
pop
sarb
jne
mov
add
leave
xchg
pop
sahf
pushf
or
sub
or
loop
int
rclb
inc
mov
idivl
jecxz
movsl
dec
fstl
adcb
cmp
sub
jp
mov
or
mov
mov
jne
sub
leave
mov
push
in
outsl
xlat
xchg
cmp
int
jb
nop
packuswb
inc
adc
fsubrl
inc
xorb
mov
mov
jecxz
lods
and
leave
mov
mov
hlt
loopne
dec
sub
aaa
fsubl
lret
and
jne
loop
adc
xchg
sbb
dec
lods
or
cmp
arpl
push
lods
sbb
sbb
leave
imul
sti
inc
aad
je
xchg
movsb
jbe
int
outsb
sub
daa
cltd
enter
das
fs
std
inc
imul
lds
es
imul
enter
test
je
xchg
push
lods
mov
sub
mov
jmp
out
or
mov
xor
push
inc
mull
adc
fisubrs
mov
imul
sbb
lahf
dec
stos
cmp
pop
imul
insl
push
or
pop
addb
daa
fimull
lods
dec
push
daa
fisubrs
mov
loopne
xor
dec
adc
aad
sub
lock
push
fstps
add
mov
mov
xor
ret
or
xchg
insl
into
fildll
loope
cmp
inc
enter
pusha
xchg
push
fidivrs
ret
divb
enter
sbb
or
bound
and
mov
mov
pusha
add
mov
mov
std
xor
or
sbb
in
shlb
mov
out
push
add
add
mov
fldl
movsb
sub
stos
pop
and
pushf
mov
jne
xchg
push
jae
sub
xor
outsl
jle
out
lret
push
sub
push
jne
nop
pop
push
push
or
int
jecxz
inc
cmp
cwtl
cmc
call
fisubrs
test
push
scas
loop
fsubrl
stos
shll
ret
cli
push
rcll
cli
hlt
ret
lods
aam
push
push
push
dec
jno
mov
leave
cmp
mov
leave
int
inc
jle
leave
imull
test
dec
aam
test
mov
js
fldt
aaa
pusha
push
fildll
out
loope
ds
out
lret
dec
add
mov
pop
test
xchg
loope
andl
leave
movsl
aam
mov
dec
mov
rcrb
in
mov
push
xchg
sahf
ret
mov
scas
inc
or
adc
xorl
sub
rorb
shrl
mov
sub
inc
jge
jmp
nop
fdivr
adc
push
push
aad
xor
lea
dec
push
rol
test
xchg
ss
icebp
inc
movsb
imulb
and
popf
adc
cmc
mov
imul
adc
faddl
loopne
mov
push
iret
addb
mov
add
rcll
cli
dec
in
imul
add
insl
nop
push
cmpsb
cmpsl
lods
lcall
addr16
cmp
nop
sub
sbb
lods
xchg
cltd
or
rorb
xor
add
cwtl
sti
pushf
std
sbb
pop
mov
movsl
das
test
into
xlat
in
popf
lods
out
adc
loopne
sarl
push
add
jno
push
shlb
popf
xchg
ds
add
xchg
cltd
pop
dec
jge
ret
inc
mov
addr16
fiaddl
sbb
inc
inc
stc
idivl
cmpsl
rcll
pop
inc
loope
pop
ss
xchg
and
ja
test
sbb
add
outsl
mov
daa
lret
cmpsl
jg
out
inc
push
cmpsb
mov
ficompl
int
cmp
sarb
popl
mov
xor
sti
cmp
inc
shlb
push
mov
adc
sbb
fcompl
pop
fldenv
push
inc
mov
fidivrs
and
mov
push
aaa
xchg
pop
and
xchg
ss
out
nop
loopne
inc
push
push
pop
xor
aas
imul
imul
pop
fsubs
cmp
mov
sub
gs
cmp
mov
mov
insb
out
pop
int3
movsb
sub
imul
xor
into
and
decb
cmpsb
sbb
mov
xchg
test
popa
in
inc
jne
cld
inc
repnz
pop
cmp
loop
fcmovne
subb
aaa
jl
mov
push
jbe
cmovl
jmp
aaa
dec
lock
cmp
cwtl
out
sub
xlat
out
int3
xor
gs
mov
pop
xor
insb
js
ret
mov
ret
mov
xorb
sub
mov
insl
cmc
mov
pop
aaa
push
in
cs
push
les
test
and
addr16
lock
inc
push
xor
mov
in
arpl
cmpsl
or
inc
mov
arpl
mov
nop
inc
dec
sbb
test
inc
aas
mov
test
or
test
lahf
push
dec
cwtl
pop
mov
dec
or
and
mov
clc
addl
sub
mov
cmpsl
icebp
outsl
pop
fsubrs
push
ds
dec
int
movsb
stc
inc
or
mov
inc
inc
popa
ljmp
push
sbb
nop
leave
repz
or
loope
inc
lock
nop
or
fisubrs
out
inc
aam
and
movsl
jno
adc
jmp
sbb
fldl
fnsave
orl
sti
aas
xor
push
add
mov
and
mov
fidivs
aas
pop
jb
xchg
arpl
iret
mov
mov
sbb
lcall
lea
inc
lret
mov
adc
in
ror
das
sti
and
sub
fwait
mov
adc
mov
xor
hlt
mov
jle
out
jl
pop
test
jbe
jns
mov
cmc
outsb
lods
jmp
pop
dec
lcall
inc
inc
aam
sub
ret
push
roll
std
je
sbb
out
or
or
mov
lea
insl
loopne
xchg
outsl
je
pushf
int3
call
mov
loopne
out
fnstsw
sbb
outsl
std
sbb
nop
loop
dec
jnp
cs
xchg
lahf
or
push
dec
pop
in
stos
or
pop
mov
mov
cmp
mov
sub
inc
imull
les
mov
pop
push
adc
jge
jl
mov
lcall
cmpsl
in
add
mov
test
and
mov
ds
fldenv
test
movl
mov
jne
push
cmp
iret
xchg
mov
test
sahf
mov
mov
mov
into
nop
xchg
rorl
test
pop
push
and
out
lods
lea
push
cwtl
xor
and
sahf
push
fisubrs
fidivrl
loope
adc
cmp
in
sub
pop
push
dec
xchg
fisubl
pop
icebp
sbb
adc
cmp
sbb
xchg
sbb
sti
pop
mov
test
aas
mov
fbld
cli
rclb
xchg
add
fcom
mov
pushw
cmp
adc
jo
aaa
mov
out
add
rolb
icebp
dec
adc
jo
mov
xlat
fdivrl
adc
and
add
cmpsl
sbb
in
push
cmpsb
orb
jl
cmp
mov
enter
dec
or
add
xchg
dec
cmp
icebp
shl
pop
cltd
sti
mov
loope
rcrb
xchg
lds
cmp
pusha
add
fbstp
sub
stos
mov
or
and
cmp
dec
mov
pop
jo
adc
test
sub
clc
pop
or
into
je
js
ss
pop
jecxz
mov
or
jle
sahf
pop
xchg
std
push
mov
popf
fists
scas
stos
inc
jecxz
sbb
loopne
inc
sbb
jecxz
stos
pop
jmp
xor
insb
jb
jb
sub
adc
pop
push
adc
lret
xchg
mov
xor
ja
fiadds
cmp
mov
lods
test
add
arpl
push
sbb
sbb
inc
cwtl
in
jp
or
sub
test
arpl
test
lret
dec
cmpsl
xchg
gs
cmpl
pop
rcrb
cld
xchg
xchg
filds
shll
bound
or
and
or
mov
jp
push
jl
push
dec
imul
dec
xor
add
jg
sub
scas
aam
sbb
fbld
imul
dec
mov
inc
out
xchg
cmp
add
add
jne
lret
jbe
aas
les
dec
cmp
sbb
fs
divb
xor
lahf
mov
loope
or
xchg
push
outsl
fimuls
repz
jb
int3
or
xchg
jle
and
int3
jno
leave
add
adc
jg
jge
fnstcw
cmpsl
adc
sub
adc
add
push
pop
loopne
ret
xor
pop
push
and
or
push
lea
sarl
fimull
sbb
mov
add
insb
jo
mov
addl
ljmp
add
aam
cs
push
push
movsb
push
sub
xlat
mov
adc
outsl
mov
dec
daa
mov
and
and
mov
push
mov
call
in
sub
test
and
testl
ret
dec
test
int
jp
and
movb
imul
xor
inc
mov
ret
or
dec
sub
adc
out
sub
insb
push
jo
mov
shll
pop
rorb
mov
jno
adc
mov
out
lahf
add
xchg
xor
loopne
lcall
and
lds
pop
and
inc
cmpsl
inc
sbb
orb
jo
aad
sub
sub
sbb
scas
mov
clc
pop
aas
add
add
mov
xchg
jge
dec
hlt
xchg
dec
pop
or
cmpsb
scas
dec
xchg
cld
adc
adc
mov
dec
test
sbb
adcb
cmc
out
outsl
sub
cmp
imul
mov
scas
add
repz
repz
arpl
in
mov
adc
mov
cld
pop
and
xchg
shrb
and
lret
cmp
ret
aaa
test
pop
gs
mov
addr16
push
adc
sbbb
insb
jo
or
xchg
out
add
pop
jae
push
and
cmp
mov
or
decl
cltd
movsl
or
or
dec
adcl
mov
mov
popf
ror
add
or
and
push
ret
aaa
call
mov
into
cmc
call
bts
mov
mov
out
hlt
clc
ljmp
lahf
aaa
xchg
sarl
inc
xchg
je,pt
push
push
test
sub
iret
fcoml
push
loope
daa
pop
lods
push
xor
or
test
cld
adc
fwait
pop
cmp
roll
and
imul
fcoml
outsb
push
xchg
push
mov
mov
adc
push
sbb
in
andb
cmp
adc
mov
test
mov
and
push
add
psubw
or
push
cmc
jne
in
aaa
or
insl
cmp
enter
lea
dec
daa
xchg
sub
popf
push
mov
aaa
pop
mov
push
inc
and
mov
fadds
loop
subl
out
adc
adc
dec
jge
xchg
mov
test
dec
shr
cmp
or
mov
jbe
movsl
mov
fadds
sbb
stos
cmp
sar
pop
ret
imul
jle
in
in
rorl
aaa
clc
jbe
into
jb
in
push
add
in
add
je
lret
sub
cmpsb
and
and
dec
jl
push
iret
movsb
push
mov
into
ds
xor
mov
scas
sub
cli
push
push
and
dec
mov
sbb
xchg
mov
mov
adc
dec
popf
inc
ret
mov
lcall
pop
mov
pop
jbe
arpl
inc
xchg
stos
or
xchg
dec
aaa
fwait
inc
hlt
mov
pop
xchg
mov
fidivrl
and
loopne
jecxz
jmp
mov
out
pop
adc
and
bound
fld1
mov
mov
aas
inc
in
incl
test
cmp
adc
test
loope
or
fcom
outsb
sbb
jge
addr16
mov
mov
or
mov
push
pop
xchg
aam
jmp
dec
insb
mov
inc
adc
add
fmull
pop
xor
add
in
cltd
push
push
xor
pop
mov
shlb
cld
and
stos
dec
adc
dec
movsb
pop
ret
lret
or
outsl
inc
push
pop
std
std
sub
jnp
or
popa
adc
enter
cli
add
ljmp
rcll
adc
int3
into
sub
test
out
imul
testb
jl
into
dec
mov
cmp
daa
js
mov
push
imul
adc
sbbl
iret
sbb
cmp
mov
std
mov
dec
out
in
and
sub
scas
push
leave
jns
in
pop
orl
loopne
and
sti
mov
push
dec
pop
pusha
dec
lahf
add
lds
into
mov
push
icebp
and
lahf
aam
dec
lcall
dec
pop
xor
ljmp
cltd
dec
jne
test
xchg
jb
xchg
jg
mov
sub
cmp
inc
pusha
into
jnp
iret
icebp
sbb
sbb
jg
div
jg
cmp
xor
cmp
fmuls
or
daa
mov
in
inc
mov
adc
rolb
stc
imul
int
add
jp
rcrl
stc
inc
cli
ret
jne
sahf
xor
stos
xor
or
xor
fnstenv
mov
into
mov
sti
ja
cmp
mov
sub
push
jmp
mov
mov
repz
addl
fcoms
mov
xor
sarl
sbb
ljmp
je
and
add
mov
shlb
push
push
jne
add
inc
xor
mov
mov
fisttps
scas
push
push
xor
jno
and
or
xchg
pop
scas
imul
pop
je
idivl
inc
arpl
inc
xchg
stc
outsb
jnp
test
inc
jne
xchg
in
sbb
dec
jnp
out
jae
lods
icebp
repnz
fisttps
daa
mov
jne
xchg
int3
or
dec
xor
sub
xchg
sub
enter
test
xchg
shl
test
clc
test
xchg
dec
xchg
dec
xchg
ret
mov
pop
loop
mov
xorps
sbb
lret
pushf
mov
outsb
dec
loope
jb
mov
and
rcl
lret
mov
fcompl
and
loop
mov
and
push
or
clc
sarl
or
loope
mov
fistl
loopne
lea
test
add
iret
sbb
ret
cltd
jp
push
pushf
out
lcall
imul
jle
nop
xor
stc
fldt
stos
push
movsb
stc
add
in
sub
and
pop
and
mov
outsl
fucom
stos
cmp
or
jbe
xor
in
shrl
mov
popf
mov
sub
dec
inc
sti
add
test
pop
mov
ja
mov
das
sub
pop
imul
inc
cmp
pop
pop
jno
or
loope
pop
int3
lret
in
add
xchg
repz
xchg
mov
pop
les
stos
mov
out
js
mov
stc
ret
cmpl
lcall
loope
mov
jbe
jae
pop
add
mov
jmp
xor
test
push
adc
xchg
xchg
lret
sub
cs
jmp
xchg
mov
mov
ret
pop
loop
loopne
pop
frstor
mov
cmp
push
xor
fdiv
daa
or
shl
fbstp
mov
xchg
pop
lods
pusha
xchg
xchg
sub
mov
mov
sbb
and
out
mov
clc
jg
cmp
rcrb
pop
pop
cmp
jle
jbe
imul
enter
pushf
int
stos
mov
cmp
into
mov
rclb
lea
enter
rcrb
std
scas
sbb
sub
movl
mov
push
and
aaa
jbe
inc
mov
int
push
mov
out
dec
daa
inc
incl
push
outsb
fcmovnb
cmp
push
dec
pop
das
push
mov
arpl
mov
xchg
enter
fs
aaa
sub
icebp
cs
mov
popa
jp
jno
inc
arpl
lahf
outsb
sbb
in
push
dec
jl
jbe
fisttpl
clc
scas
add
fiaddl
out
cmc
dec
sbb
in
pop
cmp
jo
or
mov
xlat
stc
mov
in
push
xor
shrl
stc
stc
mov
mov
xchg
hlt
out
and
mov
mov
repnz
pop
and
adcl
in
push
dec
jb
mov
inc
xchg
inc
mov
nop
pushf
ret
push
enter
sbb
stc
scas
mov
mov
dec
jno
push
ljmp
mov
xchg
ss
mov
jnp
lea
iret
jg
jg
int3
jo
int
aad
push
push
xlat
je
mov
outsb
daa
scas
fldt
xchg
call
icebp
sub
sbb
addl
jle
sahf
je
mov
mov
mov
jg
pop
sub
les
adc
pop
sub
subb
imul
xchg
or
call
mov
mov
movsb
pop
push
jg
ror
lret
pop
int3
jmp
add
loop
outsl
adc
das
sbb
pop
das
inc
cmc
pop
xchg
aad
fsubrs
jmp
inc
dec
and
push
fs
push
cwtl
cltd
sub
xchg
fsub
mov
fsubp
jp
sub
pushf
jno
pushf
pop
mov
jle
or
flds
gs
add
mov
pop
pop
psllq
mov
out
sbb
notb
xor
jno
inc
push
and
test
popf
pop
push
sbb
pop
enter
test
sbb
inc
inc
pop
rorl
mov
insl
adc
mov
imul
testb
sub
cld
dec
mov
sarb
pop
js
push
sub
adc
and
dec
pop
push
push
and
xchg
xor
push
jbe
enter
adc
daa
fisubrs
inc
popf
mov
mov
adcb
sub
push
pop
sbb
push
ficoms
dec
fwait
inc
sbbl
pop
insl
ljmp
pop
sti
inc
dec
mov
sbb
push
fwait
in
ljmp
and
in
add
lret
jle
pop
sbb
popf
mov
inc
mov
cmp
inc
in
sub
pop
imul
and
ret
dec
inc
loope
adc
in
sub
test
out
cmp
mov
fsubrs
stc
in
inc
test
addr16
sbb
adc
mov
push
out
stos
std
jns
lds
aad
fcompl
pusha
xchg
jbe
inc
or
push
xor
data16
scas
in
testl
adc
rolb
fwait
jle
popf
nop
in
fwait
dec
xchg
xchg
mov
sub
cmp
rorl
popa
push
pop
test
pop
inc
push
jnp
xchg
or
aam
arpl
add
xor
scas
add
fdivp
bound
loope
inc
loopne
push
xchg
mov
cld
lret
xor
pop
out
ss
pushf
pop
mov
and
xchg
push
stc
cs
icebp
aas
xchg
cmp
stc
leave
lcall
clc
mov
js
mov
xor
xchg
adc
xor
and
pop
add
cvtdq2ps
xor
aam
mov
scas
or
enter
xor
out
cld
push
mov
inc
mov
jnp
jo
add
repnz
xchg
dec
push
test
addb
push
xchg
xchg
push
sbb
add
cmp
mov
fwait
int3
mov
les
popf
lods
loop
into
add
pop
pop
cltd
sbb
in
add
xor
xchg
mov
leave
xor
jecxz
les
movsb
lahf
aaa
ficompl
ret
in
push
ret
in
int3
inc
jecxz
add
fucompp
mov
test
int
lods
fwait
cmc
das
sbb
xchg
in
ficomps
out
sbb
loopne
mov
lcall
sub
inc
call
shrl
inc
roll
out
mov
pop
fldt
aam
jae
out
xor
sbb
adc
push
mov
xchg
inc
imul
das
addb
imul
mov
out
jne
add
inc
cmp
enter
push
or
divb
into
push
mov
cs
orl
sbb
inc
out
je
mov
cmpsb
pop
inc
into
xor
sbb
enter
dec
sahf
mov
fndisi(8087
das
add
js
fldt
or
imul
test
and
mov
dec
negl
sbb
inc
lods
aam
cmp
mov
or
push
push
lock
xor
pop
or
sbb
negl
dec
sub
inc
ljmp
or
xchg
mov
mov
gs
push
pusha
fucomi
fwait
push
fld1
addr16
ljmp
aad
lock
cmpsb
cli
sub
inc
movsw
push
adc
pop
mov
cmp
mov
sbb
fisttpll
scas
and
and
mov
test
mov
jge
dec
rcrl
out
adc
jmp
faddl
movl
les
push
push
push
mov
xor
mov
or
pusha
adc
repnz
add
xchg
loopne
test
das
pop
fdivrs
in
xor
mov
sbb
in
cmp
cmc
cmp
out
aaa
fidivs
loope
xchg
inc
in
add
daa
in
shlb
imull
push
or
xor
and
inc
mov
dec
xor
mov
mov
out
ljmp
cwtl
xor
js,pn
jns
and
insl
mov
loopne
xor
ljmp
inc
jmp
pop
adc
scas
ja
pushf
int3
xor
sbb
fidivrl
or
hlt
mov
push
xor
bound
in
jmp
bound
sbb
sti
dec
push
jecxz
popf
dec
dec
xchg
fdiv
xor
jmp
inc
orb
inc
jp
xchg
or
or
lcall
inc
sbb
mov
out
sub
adc
cmc
mov
mov
and
addr16
or
mov
mov
lds
in
sub
hlt
dec
inc
dec
scas
push
dec
int
mov
mov
inc
shll
inc
sbb
pop
pop
mov
aas
xchg
sbb
jecxz
cmp
or
fisttps
hlt
movsl
js
and
mov
test
fwait
repz
ds
test
or
sub
lods
hlt
pop
sub
inc
js
aaa
cli
stc
mov
fcoml
es
fsts
inc
push
ffreep
fstpl
call
out
add
aaa
data16
inc
rorb
imul
adc
xor
pushf
js
lcall
push
xorb
lods
sbb
jns
lcall
inc
daa
inc
addr16
lds
add
inc
pop
dec
cmp
std
js
mov
repnz
push
or
repz
inc
ja
fadds
cmp
enter
push
and
jo
xorb
jae
push
dec
shlb
dec
pop
dec
repnz
pop
test
and
icebp
push
scas
and
into
or
addr16
into
and
in
add
adc
pop
dec
lods
arpl
xor
arpl
insl
jl
repz
xchg
mov
inc
add
mov
mov
movups
mov
loope
sub
fpatan
xchg
in
jmp
add
daa
jg
ljmp
pushf
cmpsl
cld
push
push
scas
fdivrp
pop
cmp
rcll
or
rcr
insb
mov
je
stos
xor
stos
jmp
xchg
mov
mov
pop
cmp
ja
jnp
in
adc
ljmp
das
hlt
or
bound
push
into
cli
ret
adc
cwtl
pop
xor
stos
sbb
fisubrs
mov
pushf
adc
mov
fldenv
mov
aad
lea
jmp
out
mull
loope
fwait
xchg
ss
mov
pop
xlat
out
jmp
sbb
jae
or
pop
xchg
rorl
jns
faddl
adc
add
dec
sarl
mov
shll
mov
push
push
repnz
sbb
cmp
mov
fiadds
or
cld
add
sahf
pop
jmp
enter
jmp
jo
sbb
mov
imul
xchg
aam
mov
xor
jae
cmc
jp
dec
out
sti
mov
sub
inc
inc
test
lret
fmul
inc
rol
test
loope
mov
mov
xor
adc
mov
sbb
insb
or
loop
jns
jbe
pop
lea
int
adc
and
and
ds
jp
add
mov
jmp
repnz
out
mov
pusha
pop
cmp
popf
hlt
outsb
mov
or
ja
fcompl
std
sti
jg
push
mov
jg
ss
mov
addr16
xchg
jbe
and
jbe
sbb
aad
and
loop
lods
cmpsl
sub
add
lcall
mov
and
repnz
jns
pop
ror
pop
stos
jge
sbb
cmpsb
decb
test
push
push
daa
jno,pn
jb
xor
loopne
sbb
push
out
dec
mov
pop
sbb
hlt
test
push
push
push
cmp
lock
xor
pop
loopne
adc
mov
pop
test
dec
test
add
jb
adc
insl
ret
mov
fwait
or
in
addr16
mov
lock
sub
and
xor
paddusb
pushf
andb
dec
ret
add
orl
xchg
inc
mov
sub
pop
aas
mov
clc
and
rorb
leave
addr16
stc
xchg
rol
mov
dec
mov
jns
rol
in
sbb
dec
or
sbb
cs
dec
stc
add
xor
into
push
dec
adc
out
into
gs
mov
mov
xchg
mov
or
xchg
lock
adc
push
pushf
fsubs
sub
mov
xchg
es
inc
ret
sub
xchg
dec
jge
sbbl
in
cmc
test
adc
rorb
mov
adc
jmp
add
insb
out
dec
bound
out
xor
je
fldcw
pop
pop
or
pop
mov
scas
fmulp
fadd
call
push
dec
andb
or
sub
inc
add
push
dec
and
pop
in
jo
cmpsb
seto
jmp
aad
push
mov
xor
fstps
jno
jns
pop
pop
shlb
dec
xor
lcall
bound
cli
aam
push
push
pop
test
dec
dec
push
daa
loop
jle
insb
xor
loop
bound
repz
loop
pusha
pop
sbb
lret
sti
cmpsb
add
jge
lahf
in
pop
mov
push
push
popa
test
mov
and
mov
scas
test
decl
xor
cmpb
pushf
jno
sub
jo
xor
xchg
mov
ds
cmp
push
in
sti
mov
pop
popf
add
push
mov
lods
pop
xor
sbb
aad
test
push
repnz
les
in
pop
pop
orl
pop
mov
cs
pop
outsb
js
out
cmp
bound
mov
inc
or
fbld
push
out
cmp
add
bound
lods
out
pop
inc
clc
xchg
lods
pushf
in
xor
cmp
or
push
pushf
call
in
imul
jae
xchg
push
es
mov
xor
jns
adc
mov
loop
lods
push
xchg
fs
or
cmpsl
xor
cwtl
arpl
popa
jmp
cld
adc
pop
sub
fadds
add
popf
imul
test
int3
jns
or
mov
or
sarl
dec
popa
cmp
add
std
dec
test
outsl
xor
inc
cmp
out
dec
aad
dec
push
pop
cs
push
les
adc
push
mov
mov
mov
push
ss
daa
sub
push
dec
data16
pusha
push
sti
mov
mov
cli
add
dec
mov
mov
rclb
jmp
cltd
fwait
mov
inc
add
jns
jp
mov
cmc
jnp
bound
movb
mov
hlt
inc
cli
sub
push
xchg
and
nop
inc
dec
loopne
call
imul
push
test
lea
add
sahf
push
xor
pop
daa
push
and
inc
sbb
in
movl
cmp
clc
dec
scas
pop
nop
test
pop
gs
cmp
inc
push
out
lea
mov
sarb
cwtl
sbb
lret
daa
jne
jno
lcall
fsub
outsb
shl
inc
sti
add
scas
mull
xor
or
fisubl
test
sub
mov
fldl
and
xor
add
add
dec
sahf
jg
in
mov
shrb
pop
imul
add
add
cmp
cmp
lret
scas
push
stc
inc
sbb
cmpsl
mov
ret
pop
adc
int
xorb
pusha
jne
imul
sub
in
fwait
orl
in
jle
fs
adc
orb
in
lds
mov
call
or
cltd
add
std
inc
and
orl
jo
adc
js
in
jle
das
jmp
sahf
lods
test
fucomi
imul
push
mov
dec
mov
xchg
pop
sub
mov
mov
addr16
mov
cmp
push
int
cmp
adc
dec
cld
or
jo
les
push
push
sub
jmp
mov
sbb
leave
jns
or
lret
fwait
fucomip
mov
andl
add
inc
fimull
repnz
pop
int3
add
les
add
add
xchg
adc
add
xchg
fdivr
enter
fsts
stos
mov
mov
decl
fs
ret
xor
divb
or
mov
xchg
icebp
jmp
and
push
repnz
das
add
rolb
cmpsb
cmp
lret
scas
xchg
jnp
in
jp
lret
ret
push
gs
lar
push
xchg
in
adc
stos
icebp
inc
js
dec
sub
fnstcw
divb
int3
xlat
sti
mov
dec
pop
or
fs
shlb
fwait
int
loope
jl
cld
cld
lock
mov
push
aas
scas
pop
xchg
cld
jle
sbb
dec
inc
xor
adc
rol
xor
and
sahf
fcoms
test
out
filds
push
rcrl
paddsw
cmp
sub
inc
and
daa
in
pop
xor
xor
jnp
pop
sar
pop
stos
cmp
sti
fs
iret
sub
dec
push
mov
les
adcb
mov
xlat
fdivl
rcr
mov
jo
decl
pop
sbb
sub
shr
cmp
jae
adc
mov
push
int
hlt
je
xchg
dec
mov
xlat
arpl
mov
mov
ja
xchg
std
sbb
or
push
adc
jno
ljmp
jo
inc
adc
jge
into
fisubl
push
and
or
pop
jp
sbb
mov
add
sub
xor
int
and
aaa
push
sub
cmc
sub
bound
jb
je
sbb
or
inc
pop
xor
add
inc
inc
iret
push
and
popa
dec
inc
sub
addr16
mov
mov
popa
xor
jne
lcall
jnp
lock
fmul
ret
fstl
lock
add
adc
jnp
jl
movsb
imul
sarl
xor
ja
and
rclb
dec
scas
loop
sbb
mov
int
adc
sbb
aam
mov
and
test
sbb
negl
mov
mov
adc
inc
cmp
push
jmp
mov
fnstenv
dec
mov
out
pop
cltd
sarb
mov
cwtl
daa
jae
rcrl
call
sbb
jb
in
out
icebp
es
jge
xor
or
js
imul
iret
inc
sub
fidivrl
outsl
xorl
jno
and
cmpsb
out
mov
or
push
stos
and
arpl
push
adc
call
cld
rcrl
cmpl
icebp
or
test
mov
mov
stos
xor
repz
adc
push
cmp
push
xchg
out
push
push
mov
shlb
dec
sbb
aad
dec
adc
in
stos
repnz
mov
cli
and
jnp
iret
dec
cmp
push
es
push
mov
lahf
repz
cmpsl
test
inc
mov
mov
sub
inc
cmpsb
push
jo
shlb
outsl
xchg
fs
cmp
outsl
adc
sbbl
addb
icebp
loop
sbb
aam
mov
mov
pushf
out
iret
push
addr16
and
cmpl
dec
imulb
jl
inc
add
sbb
lahf
movsb
popa
push
and
bound
mov
and
daa
aam
push
movsb
cmpsl
cld
out
shrl
mov
jae
cmp
bound
cmp
sbb
mov
mov
push
add
xchg
test
dec
rolb
cmp
in
dec
out
or
sub
ss
bound
mov
in
add
jmp
pop
or
loop
clc
divl
jp
jae
sub
out
adc
pusha
mov
mov
pop
xchg
leave
add
jb
inc
sub
sub
roll
in
push
sbb
cwtl
dec
nop
cmp
mov
ljmp
outsb
or
cwtl
pop
movsb
add
dec
mov
mov
xchg
into
in
sbb
aaa
mov
stc
mov
adc
int3
mov
lret
in
pop
je
mov
mov
mov
shrb
loopne
and
mov
jge
scas
insb
mov
mov
push
inc
in
xchg
jp
int3
add
cld
push
fisttpl
add
lods
lds
outsl
sub
adc
xchg
dec
sarl
int
in
stc
movsb
mov
dec
je
or
mov
cmp
stc
cmp
xor
sub
mov
pop
out
mov
mov
outsb
and
lods
js
sub
mov
jl
arpl
adc
and
push
pushf
pop
push
inc
dec
popf
cmp
mov
je
aaa
ret
mov
sbb
push
dec
dec
adc
cmp
mov
jb
jne
jecxz
sub
out
jge
cmpsl
mov
pop
arpl
into
sub
inc
loope
mov
sbb
dec
aas
jp
pop
divb
mov
adc
icebp
mov
mov
or
roll
fmull
negl
mov
sbb
mov
movb
jp
jl
enter
pop
cwtl
ret
adc
and
mov
and
push
sahf
inc
xorl
xchg
dec
adc
fwait
inc
js
mov
jmp
sbb
mov
jbe
mov
pop
popa
aaa
push
enter
pop
jne
xor
mov
jmp
sbb
out
pop
jle
push
add
repnz
sahf
inc
scas
paddusb
fidivl
mov
imul
loop
add
xor
jmp
lods
fs
les
ret
or
dec
dec
daa
leave
int
push
and
out
mov
imul
and
mov
push
push
mov
fisubrs
sub
push
neg
clc
mov
cmpsb
add
mov
in
xor
sub
pop
push
pop
in
cmp
ret
mov
sub
xchg
mov
cmp
fildl
out
adc
cmp
jg
enter
cmc
jnp
sbb
adc
adc
push
rorl
mov
xor
xor
call
into
sbb
je
inc
nop
mov
push
popf
out
ja
out
mov
sbb
dec
jge
mov
adc
out
out
add
sbb
outsl
inc
jle
lea
cltd
cltd
andb
cmp
xchg
insb
adc
push
xchg
and
ja
mov
test
addl
icebp
imul
jno
jo
xchg
mov
out
cmp
inc
sti
adc
aam
jg
ret
movsb
inc
pop
jg
sahf
shll
pop
repnz
mov
repnz
mov
outsl
push
call
cli
mov
adc
fildl
mov
mov
sbb
mov
mov
test
jo
sbb
mov
and
mov
jb
jae
ljmp
mov
sbb
fwait
push
xchg
test
mov
into
jno
test
enter
mov
pop
jmp
dec
mov
mov
inc
test
pop
fiaddl
jo
lea
pop
mov
dec
shrl
mov
sub
pop
in
and
jge
jb
pop
dec
outsl
out
out
jecxz
push
push
into
cli
decl
pushf
jb
and
and
mov
shrb
enter
fwait
repz
push
xchg
cmp
loope
inc
xchg
add
jae
andl
sbbb
rorb
lahf
sub
xor
inc
xlat
lods
aaa
int3
stos
xlat
sub
fwait
sbb
mov
idiv
xor
adc
push
mov
mov
jb
repz
leave
movsb
mov
repnz
mov
es
insl
pushf
das
sbb
out
cmp
dec
dec
nop
out
stos
cmp
mov
pop
jmp
push
scas
cmp
push
sbb
ja
les
in
data16
lahf
mov
jecxz
lcall
cmp
in
cs
repnz
aas
or
adc
sahf
dec
pop
and
add
fcoms
pop
shl
mov
adc
jp
outsb
pop
outsb
jae
pushf
add
je
lahf
xorb
fwait
subl
lock
pop
pop
dec
mov
roll
iret
int
loope
cli
sbb
js
pop
or
sub
jbe
dec
cmc
aas
cwtl
test
push
ljmp
outsl
sub
sub
mov
popf
add
inc
mov
inc
mov
pop
dec
loopne
adc
dec
jle
stc
xlat
xor
data16
lea
push
sbb
shrb
lea
int
ret
cmp
mov
cs
jle
cmp
adc
pop
notb
adc
aam
push
loop
lods
xchg
and
and
bnd
aaa
push
sbb
push
setbe
adc
sbb
mov
or
inc
dec
xchg
push
or
cmp
pop
popa
mov
and
cmp
jns
shl
sti
pop
mov
mov
sub
loope
outsb
cmp
fwait
test
outsl
push
sbbb
xchg
out
xorb
cmp
in
push
inc
stos
cmp
pop
jno
mov
jnp
ret
arpl
out
sub
arpl
cmp
sbb
push
mov
mov
adc
inc
outsl
cmp
daa
clc
dec
fildll
ret
mov
lods
mov
imul
pop
or
inc
sbb
push
sub
and
ljmp
scas
int3
out
cmc
fs
adc
sahf
mov
mov
mull
xor
icebp
mov
test
lods
or
inc
mov
xchg
fwait
and
ret
jg
push
and
insl
xor
lock
daa
outsl
pop
lds
add
dec
mov
or
pop
jno
gs
sarb
add
insb
mov
lret
lret
mov
sub
loopne
jo
mov
jo
mov
cmpsb
test
lret
or
in
movsl
push
das
mov
jecxz
xchg
inc
mov
into
insl
ds
mov
insl
popf
xor
add
out
xchg
mov
and
shrb
cmc
jbe
sub
jae
xchg
pop
xchg
in
and
mov
and
cmpsl
icebp
add
jge
and
adc
or
mov
push
ljmp
loop
push
sbb
outsb
push
push
outsl
xor
xor
loope,pt
mov
sar
mov
mov
or
aaa
or
ret
call
btc
flds
flds
xor
sbb
mov
mov
insb
jl
lcall
xor
sub
dec
cmpsb
repz
push
pop
lret
push
ljmp
icebp
pop
loop
sub
in
mov
lahf
jb
add
jne
mov
insl
lcall
aam
mov
gs
into
inc
sub
cmpsl
mov
dec
sub
jnp
cmp
sub
xor
in
inc
and
repz
std
pop
addr16
push
add
pop
push
xchg
mov
out
pop
sbb
dec
cld
loopne
ss
addb
shrl
xor
jo
adc
pop
xor
shlb
cwtl
cmpsl
mov
pop
xlat
sub
push
dec
popa
inc
daa
repz
inc
scas
aad
repz
shl
pop
sbb
push
push
jne
sbb
jne
inc
jae
addb
mov
out
outsb
mull
aam
mov
leave
ror
pop
mov
loopne
movsb
cwtl
sahf
lea
nop
mov
insl
mov
or
mov
cwtl
pop
scas
sti
insl
neg
xlat
jbe
adc
fdivrl
push
bound
lds
in
xchg
xchg
enter
mov
xchg
call
mov
mov
inc
cmp
push
pop
cmpsl
mov
push
adc
cmp
mov
sti
out
lods
ret
push
call
push
rorb
push
and
and
jbe
dec
adc
enter
das
adc
repz
jno
jns
push
lods
insl
cmc
inc
repz
test
pusha
nopl
dec
jne
sub
jbe
or
mov
stc
sbb
mov
shl
into
adc
inc
push
out
imull
roll
push
in
push
orb
sbb
pop
lahf
dec
lock
lahf
adc
push
test
lea
jo
xchg
inc
pop
jno
pushf
shr
cmp
or
lret
xchg
cmp
sub
pusha
xchg
dec
lock
lea
xchg
jnp
dec
add
in
adc
xor
fldl
test
lret
jecxz
insl
xchg
mov
loop
arpl
push
cmp
or
pop
pop
xchg
daa
es
daa
inc
xchg
mov
std
mov
pusha
or
jge
inc
jl
pop
scas
popf
das
pop
jno
sbb
arpl
cmc
mov
data16
xor
mov
stos
idivb
cs
mov
cmp
aaa
mov
out
mov
loopne
leave
fstp
ss
sub
mov
imul
sub
xlat
cltd
dec
bound
lcall
js
hlt
iret
mov
jmp
add
clc
pop
xor
add
cmpsl
jo
mov
das
push
push
cli
jmp
cmp
dec
gs
ret
inc
int3
cmp
push
loop
test
sbb
fmull
repnz
pop
mov
dec
movaps
mov
in
xchg
jns
lods
das
rorb
pop
cmc
andl
mov
lods
movzwl
shll
inc
cmc
sahf
and
inc
fwait
jne
or
dec
cltd
enter
cli
xor
repz
lret
and
js
clc
jns
mov
int
xor
mov
jno
pop
push
jl
repz
and
mov
sub
sub
lcallw
arpl
cmp
cld
mov
jae
jmp
scas
sbb
fsubl
mov
stos
movsl
sbb
cmpsl
lcall
imul
and
sbbb
dec
pop
xchg
shll
insl
aam
jne
scas
lret
enter
arpl
mov
push
add
lea
mov
xchg
lahf
sub
enter
fistl
sbb
in
int3
orl
lods
push
lcall
push
movsb
cltd
lahf
push
jns
lds
outsb
xor
push
mov
ret
xor
add
add
jne
aam
mov
add
xor
aad
sub
sti
adc
pop
int
sub
test
outsl
lret
test
xchg
or
mov
jle
and
inc
loopne
push
rcrb
jl
negl
lods
mov
mov
dec
jae
out
xor
js
jae
fstpl
mov
lea
rorl
push
and
sahf
xchg
repnz
mov
lds
gs
inc
mov
insl
jnp
sbb
xor
fldenv
jg
dec
adc
inc
or
cmp
into
lods
cmp
jl
std
inc
popa
add
add
enter
fiadds
sahf
rorb
dec
cmc
or
and
sbb
push
adcl
int
aaa
sub
scas
in
cmp
das
cmp
inc
fmuls
xor
das
aad
mov
subb
dec
sbb
ss
mov
adc
or
nop
or
or
stc
xor
mov
nop
fcmovb
mov
cmp
xchg
xor
adc
pop
mov
insb
aaa
sub
jae
mov
test
add
mov
inc
ret
xlat
xchg
jne
pusha
sbb
mov
lret
dec
scas
iret
in
add
xchg
sub
jbe
mov
cmpl
int3
cmpsb
ja
or
mov
xchg
mov
and
inc
fnstcw
pop
out
mov
out
daa
push
inc
mov
mov
loopne
aas
sub
jne
mov
xor
mov
push
cld
jno
cli
pop
rcr
xor
mov
out
idivl
mov
cmc
pop
jge
push
adc
out
mov
and
ficompl
int
insl
inc
shl
js
add
adc
mov
cmovae
jbe
inc
enter
mov
pop
sahf
les
insl
lock
jb
fistl
mov
mov
and
daa
insl
xor
testl
inc
stc
pop
sahf
into
lahf
in
jne
scas
cmp
xchg
shrl
adc
icebp
cwtl
or
fs
bound
lret
loop
outsb
in
pusha
mov
sbb
jne
adc
mov
adc
adc
sub
sbb
or
jle
iret
sbb
daa
adc
loop
cld
in
in
sub
jbe
fnstenv
dec
sbb
or
adcb
icebp
mov
sar
aaa
repz
and
push
push
ret
and
popf
xchg
cmpsl
jmp
xchg
jno
sbb
loope
jmp
adc
into
scas
adc
inc
loopne
inc
dec
mov
dec
pop
pop
call
ja
mov
movsl
inc
dec
or
outsl
pop
cmp
je
mov
xchg
sub
idivl
pop
mov
icebp
xchg
jbe
push
sbb
xor
inc
rol
xor
pushf
loop
mov
pop
xor
mov
xor
out
rol
movsb
mov
das
fwait
mov
jl
jecxz
movups
or
push
add
dec
or
ret
sti
lds
lods
outsb
frstor
push
jl
xor
adc
push
cmc
jb
and
sub
sub
inc
aaa
mov
aas
es
push
divb
xchg
inc
popf
sbb
fsts
sub
push
or
mov
adcb
pop
dec
mov
jg
imul
or
xchg
pop
mov
push
call
fsubrp
and
lods
arpl
and
xor
gs
xor
xchg
hlt
rcll
popa
int
ret
mov
cmc
push
dec
icebp
mov
cmp
cmp
cli
ljmp
das
mov
outsb
int
pop
add
xor
inc
and
sub
ret
xor
int3
fwait
mov
stos
les
loop
test
jge
adc
inc
lock
pop
inc
jle
repz
imulb
jo
mov
jge
xor
mov
mov
decb
imulb
int3
shll
pop
xchg
push
shll
adc
cmp
test
add
jp
test
stc
rclb
jae
jne
push
jecxz
ud0
dec
mov
das
xor
mov
mov
lea
mov
jg
sbb
fistps
jge
sub
or
and
and
in
nop
aam
xor
neg
fdivrl
xor
adc
xor
stos
out
repnz
aam
out
jecxz
loope
pop
and
std
pop
mov
xchg
xchg
aaa
bound
dec
divb
adc
sbb
mov
or
xor
aaa
pusha
pop
xchg
in
ss
cmp
in
out
push
push
jecxz
sahf
push
sub
lret
imull
stos
inc
stc
jecxz
adcl
add
lret
js
or
int
fwait
andb
lret
adc
dec
cmp
movsl
movsl
push
xchg
xchg
push
add
fstl
ret
sub
test
mov
add
push
mov
dec
xor
jne
mov
imul
xchg
add
call
fldenv
mov
mov
lahf
xchg
mov
lock
icebp
pop
mov
cmpsl
xchg
adc
mov
push
sahf
cmp
add
mov
aaa
shl
xor
imul
mov
ds
mov
leave
negl
inc
stos
imul
or
sti
mov
mov
mov
lret
insl
inc
es
xchg
push
mov
inc
rcrb
inc
imul
or
mov
icebp
pushf
xchg
cs
dec
mov
fistl
cmp
ds
dec
mov
jge
jnp
mov
push
jl
outsb
sbb
mov
mov
push
scas
mov
arpl
out
jge
mov
sbb
push
out
jmp
rcrb
test
cmp
dec
inc
and
cmpsb
jge
inc
push
pop
popa
es
add
repz
movsl
cmp
dec
or
testl
data16
and
outsb
call
pop
mov
adc
adc
jp
push
xor
mov
jns
out
mov
mov
push
inc
scas
jmp
dec
mov
add
loopne
pop
mov
fdivr
clc
dec
lods
je
je
or
sub
fscale
ud2
arpl
adc
out
shl
in
jle
pop
jne
ss
jnp
sbb
in
jb
aam
jo
pop
nop
scas
sbb
sarl
xor
dec
daa
xchg
pop
arpl
dec
sub
insb
mov
mov
jg
pop
in
jp
xor
cwtl
mov
and
test
test
mov
dec
mov
inc
rcrl
xchg
jo
jno
int
pop
mov
cmp
cmpsb
add
mov
in
fwait
cmp
in
and
dec
sahf
push
sbb
enter
cmp
sti
lds
in
pop
dec
cmp
adc
cltd
xchg
cmp
and
push
aaa
loope
out
stos
dec
mov
pop
nop
add
int
lahf
jo
xor
in
mov
lock
dec
in
bound
cltd
xor
inc
mov
sbb
into
mov
adc
hlt
shrl
test
sahf
iret
out
imul
jo
mov
and
jmp
call
inc
jo
test
mov
jg
out
jnp
lea
adc
loop
sbb
xchg
adcl
sbb
push
add
inc
sub
push
inc
mov
mov
add
je
push
aas
out
frstor
shll
inc
and
mov
xchg
adc
in
add
jmp
mov
scas
xor
adc
push
xchg
test
divl
ja
sub
outsb
mov
cld
dec
sarl
mov
lods
fwait
jbe
inc
xchg
mov
fdivrs
pop
or
inc
test
xorb
pop
lahf
inc
pop
ret
or
mov
cli
mov
dec
push
das
fldcw
add
std
push
hlt
inc
jg
mov
sub
adc
jbe
push
push
xlat
and
sbb
test
add
lret
pop
jle
add
pop
fs
aad
cltd
out
inc
xchg
inc
pop
xor
add
pop
mov
imull
imul
xchg
mov
adc
sub
adc
imul
stc
inc
xlat
lret
sbb
imul
nop
pop
cmp
das
std
andl
sbb
lods
sub
xchg
or
call
fisttpll
nop
sub
sub
repz
mov
repz
xor
pop
and
sbb
add
push
cli
pop
lods
mov
mov
push
arpl
lods
ja
mov
pushf
and
cmpsb
dec
cs
js
call
push
inc
out
xchg
les
xchg
mov
pop
test
and
lock
push
xor
push
inc
lret
das
or
pop
aad
lock
mov
push
addl
outsl
out
lds
or
add
lock
loop
repz
notb
neg
jns
push
loop
xchg
xchg
jl
push
in
or
jb
mov
or
out
int3
adc
jl
repz
rorb
and
out
test
inc
sub
push
js
pop
rclb
scas
sahf
cmp
js
insl
push
dec
sbb
rcr
sbbl
scas
pop
pop
lds
adc
xor
mov
xchg
clc
jle
pop
pop
shlb
lahf
jg
arpl
in
popa
dec
inc
ja
flds
in
out
lahf
or
xorb
shll
jbe
fildll
cmpsb
addr16
imul
xor
inc
xchg
mov
mov
mov
inc
xchg
in
jecxz
out
jno
sub
push
jle
push
adc
sbb
ljmp
mov
ficoml
push
pop
mov
add
cmpsb
shlb
jb
daa
sbb
xchg
push
outsb
push
icebp
mov
dec
orl
mov
mov
sbb
nop
push
nop
imul
aad
sbb
ja
insl
imul
xorb
das
fsubr
fstcw
sub
mov
cmpsl
loope
stos
gs
lcall
xchg
xchg
cmc
shll
jl
mov
test
lea
sahf
xor
push
stos
ret
push
pop
mov
cmp
int3
mov
jp
pop
repz
test
loope
icebp
sub
call
mov
ret
inc
test
xchg
notl
push
mov
jp
loopne
pop
pusha
xchg
lcall
clc
aam
lahf
and
pop
nop
jne
or
cltd
jle
lret
xor
fcoml
movsb
cmp
hlt
fldl
shlb
jns
sbb
mov
mov
dec
lahf
lret
adc
dec
or
xor
dec
cld
add
test
dec
xchg
cmp
pop
testb
cwtl
movsl
icebp
mov
or
ss
cmp
push
jg
mov
adc
mov
pop
xor
add
push
sbb
cmp
pushf
jge
addr16
mov
mov
dec
lret
mov
lock
add
push
in
in
cmpsb
mov
stos
mov
mov
cltd
fs
and
dec
jo
fcomip
and
hlt
loopne
mov
mov
test
gs
cmp
or
xor
repnz
push
incl
sbb
adc
leave
in
dec
imul
lods
add
outsl
loopne
cmpsb
sbb
or
inc
mov
insb
stc
sub
fisttpll
and
fstpt
cmc
lods
orl
fsub
aam
xor
mov
sti
and
dec
or
add
add
jecxz
add
sub
xor
jns
imul
fldt
jnp
and
loopne
js
pop
pop
sahf
out
ret
dec
push
mov
outsl
mov
inc
dec
xor
out
stc
xor
inc
test
in
cmp
and
add
repnz
inc
jb
scas
inc
pop
movsl
mov
imul
gs
fstps
dec
cmp
inc
sahf
imul
mov
inc
cmp
dec
add
iret
jg
jg
mov
dec
ret
in
repnz
and
xchg
mov
les
mov
in
pop
fwait
xor
mov
adc
jecxz
loop
mov
pop
or
dec
sahf
add
adc
insb
fisubrl
cmp
inc
jle
or
imul
outsl
loop
pop
jnp
cmpsb
add
add
xchg
cmp
cmp
inc
pop
sub
fdivr
sahf
cli
xchg
sub
add
scas
jnp
push
mov
orb
pop
pop
inc
jg
in
and
mov
mov
mov
mov
outsb
mov
cwtl
mov
cmp
lds
push
scas
cmpsb
lock
loop
leave
aaa
mov
bound
sub
sarl
dec
shlb
inc
stos
je
cmp
sub
jne
addl
lret
push
add
sub
push
clc
dec
pushf
loopne
daa
xor
mov
xorl
mov
in
jg
pop
push
dec
adc
fisubs
pop
pop
lock
cmp
cs
shlb
dec
sub
sbb
fstpt
adc
mov
icebp
insb
das
aaa
aad
xor
or
divb
iret
push
inc
shl
fnstcw
sarl
test
dec
inc
mov
lret
push
cmp
and
cwtl
cltd
orb
mov
pop
xchg
pop
mov
pusha
cmpsb
mov
inc
jl
or
add
adc
push
rol
rorb
pusha
sarb
jns
jno
sbb
mov
dec
mov
sbb
andl
cmpsb
adc
xchg
xchg
mov
xor
jg
add
fs
xor
hlt
xchg
stc
xlat
push
popf
xchg
aas
aam
jle
shlb
inc
or
add
inc
dec
xor
sub
out
sti
pop
call
mov
xchg
cltd
mov
cli
inc
hlt
adc
imul
sub
ret
mov
xor
dec
sbb
push
sbb
xchg
es
stos
inc
stos
dec
arpl
xchg
pusha
sub
jb
mov
out
inc
dec
inc
rorl
pop
imul
jge
stos
imul
cmp
dec
adc
std
dec
mov
push
jg
inc
push
cmp
dec
test
lods
test
cmp
stos
and
inc
push
adc
icebp
jp
mov
mov
adc
dec
test
dec
sbb
loopne
and
pushf
mov
mov
pop
int3
and
jno
cld
into
imul
push
lret
imull
jl
dec
inc
cmpsb
pusha
dec
int
sbb
insb
mov
in
sub
pop
mov
jp
ret
cmp
outsb
scas
lds
lods
dec
bsf
mov
push
push
pushf
lret
cmpsb
movsb
testb
dec
sbb
pop
sub
adc
xor
dec
cmpsb
int
or
add
addr16
jle
lock
xor
inc
popf
outsl
mov
out
loope
test
das
roll
push
push
mov
int
and
stos
or
dec
icebp
pop
dec
lret
jnp
xor
inc
fucomp
push
xor
add
mov
fistpl
adc
fistl
pop
add
cli
sti
xor
icebp
mov
inc
mov
push
out
xlat
pop
pmulhuw
shrl
mov
dec
push
dec
cmpsb
lds
add
or
call
dec
jmp
int
mov
shrl
inc
aam
mov
ja
mov
mov
inc
loope
and
adcl
cmp
es
jg
jne
dec
pop
jnp
mov
add
jle
dec
mov
or
lock
bound
test
stc
test
bound
dec
repz
mov
adcb
daa
icebp
sbbb
cmovbe
test
mov
lahf
or
ljmp
jp
ds
out
inc
or
scas
pop
rorl
lods
cmp
cmp
jb
mov
scas
cmp
jmp
clc
movsl
testl
sub
icebp
dec
jl
arpl
imul
aaa
ja
aaa
jg
out
sbb
mov
mov
roll
sub
sub
push
pop
aad
or
sub
xor
sbbb
pop
mov
jns
jb
or
mov
jns
cmp
sbb
lcall
mov
add
fbstp
in
inc
ds
sarb
cmp
xchg
or
stos
mov
rorb
popf
mov
fwait
test
cmp
cmp
dec
jnp
mov
xor
xchg
and
push
add
rcrb
adc
dec
add
mov
js
jp
imul
nop
test
js
xor
lahf
sbb
in
rolb
or
xor
mov
in
cmp
mov
mov
jge
push
or
pop
cmp
js
add
push
rcll
mov
ljmp
cmp
mov
dec
imul
into
pop
mov
scas
mov
push
jg
cmc
hlt
js
mov
popa
push
xchg
addl
neg
addr16
jp
push
sbb
in
jbe
mov
sub
mov
pop
imul
sbb
das
stc
int
shlb
mov
inc
hlt
test
inc
sbb
int3
sbb
xor
mov
mov
pop
cmpsl
mov
pusha
or
mov
sub
ljmp
sub
pop
adc
mov
in
inc
jl
ljmp
push
jno
adc
icebp
mov
push
insb
mov
mov
mov
into
or
push
popf
add
mov
addr16
pop
lcall
cmp
in
xchg
sub
in
sbb
mov
es
shlb
cmp
xor
pusha
jmp
dec
inc
in
inc
data16
fisttps
cli
shll
sub
adc
mov
pop
sub
or
lods
push
and
fldenv
sbb
addb
scas
mov
lds
push
cmc
cmpsb
pop
mov
bound
sbb
adc
dec
imul
sub
rcrl
push
iret
inc
sub
cmpsl
sti
cld
loop
pusha
or
insb
cmp
rorb
outsb
jp
in
adc
cmpsb
sbb
lock
inc
loop
ljmp
mov
jno
push
sahf
ret
dec
push
int3
pop
cltd
hlt
mov
wrmsr
out
loopne
clc
mov
push
xchg
addr16
scas
xchg
add
in
push
mov
movsb
notb
flds
les
cwtl
cmp
icebp
and
jmp
and
lods
mov
and
sbb
iret
jecxz
scas
into
push
idiv
add
push
subl
jbe
sbb
fisubl
push
mov
jo
jge
daa
arpl
or
or
add
mov
pop
cltd
mov
popw
sbb
shld
jp
fs
or
orl
jno
pop
pusha
jg
sbb
lret
xchg
add
fwait
repz
jnp
pusha
adc
aaa
jae
sbb
das
mov
insl
or
in
pop
inc
hlt
aaa
push
pop
inc
add
popf
rclb
mov
or
jl
ror
adc
push
popa
or
or
cltd
xor
popa
scas
or
lds
ret
out
xor
push
xor
or
add
es
out
jae
push
test
cmpsb
sub
es
hlt
push
gs
xlat
aam
hlt
jbe
jo
roll
and
lahf
ljmp
jno
add
mov
jnp
andl
loop
jns
push
cmp
aad
jb
repnz
in
in
std
aas
inc
ret
test
popf
inc
or
outsl
mov
lcall
xchg
push
mov
fistl
shlb
imul
fisubrl
in
arpl
out
sbb
shr
lret
rcll
loopne
inc
outsb
mov
ja
mov
cld
jb
mov
xchg
imul
push
scas
popa
dec
repnz
mov
sbb
mov
popf
inc
aas
mov
das
fdivrl
popf
icebp
fcmovne
nop
push
stos
inc
jnp
mov
lock
lock
mov
mov
sarl
aas
xchg
pop
test
mov
mov
mov
dec
mov
jne
jmp
cmpl
jl
pop
cwtl
xchg
pop
fwait
into
mov
cmp
adc
in
stos
xor
in
mov
sbb
mov
cwtl
iret
mov
sub
clts
mov
add
cmp
pusha
dec
pop
lock
rcrl
xchg
mov
cmpsb
push
cmp
call
mov
cmpsb
inc
fcoml
lahf
hlt
stos
xor
jg
xchg
xchg
loope
pop
es
pop
mov
jno
js
push
or
add
hlt
push
je
fs
shlb
cmp
xchg
push
movb
popf
addr16
sti
sbb
iret
lods
in
xor
ljmp
imul
ss
lods
call
out
ret
outsb
ficoml
push
or
and
cmc
sub
push
mov
pusha
pop
decb
movb
mov
sbb
leave
dec
push
ret
insb
jnp
fdivrl
cwtl
and
cmp
fbstp
test
mov
add
test
or
push
cmp
pusha
faddp
out
aad
out
shlb
cmp
sbb
ss
test
mov
ss
xchg
mov
push
add
inc
jle
das
jg
cmpb
in
leave
inc
mov
push
scas
inc
mov
xor
cmp
sti
nop
scas
sbb
loopne
cltd
mov
jmp
push
int3
jge
adc
sbb
adc
repz
aad
cli
push
lret
mov
lods
pop
inc
sub
cmp
shll
inc
push
cmc
push
js
jbe
roll
data16
fmulp
mov
je
out
out
push
loop
sbb
imul
mov
sub
fbld
repz
dec
push
sub
mov
outsb
in
add
stos
sti
or
inc
repnz
mov
fisttpll
sbb
mov
sti
mulb
imul
jmp
sbb
xchg
xchg
cmp
mov
mov
push
repz
les
cmp
ljmp
js
and
adc
jle
xchg
into
shlb
ss
fdivs
adc
pusha
dec
pop
mov
cmc
ror
cmp
jnp
sub
mov
repnz
icebp
aad
mov
add
dec
or
sub
and
push
fsubr
rorb
xchg
mov
mov
mov
pop
jle
enter
pusha
scas
jbe
das
and
jb
and
jns
xchg
sbb
cmpsb
add
pop
or
dec
sbb
ret
mov
ficoml
or
scas
mov
pop
sti
adc
test
leave
je
fucom
sti
andl
test
xlat
xchg
jmp
jns
jg
dec
jo
ficoms
lea
cmc
mov
mov
in
inc
scas
mov
mov
or
ret
jle
xor
ds
and
cmp
flds
aaa
push
and
dec
pushl
sbb
jne
call
repz
dec
call
dec
jbe
mov
fs
push
mov
ja
sarl
jbe
push
jno
sbb
cmp
push
orl
inc
insb
or
addps
cmp
repz
jmp
addr16
xchg
jle
in
add
add
stc
daa
add
xchg
ret
out
cwtl
xchg
lds
push
cmp
js
push
pop
aas
push
mov
stc
js
mov
jmp
xor
push
push
sti
sub
rcll
or
xor
and
cmpsl
pop
out
movsl
push
loope
andl
jno
inc
sbb
movsb
ret
jg
imul
popf
lret
sub
xor
lea
bound
cmp
add
ja
pushf
mov
adc
adc
push
inc
sarb
nop
shlb
ret
jmp
and
mov
or
lea
dec
or
icebp
xchg
push
fmull
jge
xor
mov
addr16
lods
inc
xchg
leave
push
and
mov
and
jne
std
arpl
adc
inc
cli
cwtl
push
scas
sbb
cmc
cltd
jb
lret
pop
jg
adcl
inc
xlat
cmp
and
js
int
test
lea
fisubrs
mov
lcall
push
bnd
sbb
sarl
pop
std
mov
bound
mov
sbb
arpl
mov
jl
or
jne
lods
into
lahf
xchg
xchg
xchg
push
pop
mov
mov
outsl
sbb
lret
inc
add
push
repnz
andl
lahf
jl
imul
adc
dec
into
out
std
mov
xchg
jge
icebp
movsl
sub
lcall
aad
lret
cld
or
jge
xor
mov
sbb
jg
das
mov
imulb
lea
push
bound
inc
scas
mov
dec
or
dec
sub
adc
fsubl
in
jns
mov
mov
xor
jo
mov
insl
adc
dec
sub
in
or
ret
imul
dec
popl
sbb
cmpsb
sbb
adc
xchg
push
adc
push
in
inc
add
lret
hlt
pop
pop
dec
xor
aam
test
sbb
lcall
push
in
sub
jno
inc
mov
daa
inc
lcall
xchg
add
aad
insl
push
mov
popf
je
arpl
std
stos
rcrl
push
and
flds
mov
cmp
mov
sub
xor
jo
das
call
mov
push
sub
shll
cli
insl
clc
addr16
mov
dec
xchg
inc
aaa
ljmp
popa
fnstsw
cmp
pop
add
loopne
mov
jmp
ds
shll
pop
adc
loope
cli
out
cmp
in
movsl
and
xor
outsb
push
pushf
push
mov
stc
jne
or
xchg
adc
xchg
cmc
sbb
xchg
cmp
adc
nop
into
shrl
lods
xchg
addb
jg
adc
rol
les
jo
xchg
mov
inc
mov
aam
adc
daa
mov
pop
add
adc
jbe
inc
sbb
ss
test
adc
cli
out
imul
movb
cmpl
rclb
inc
mov
push
pop
pushf
sub
iret
leave
fistl
add
subb
or
inc
fisubs
mov
clc
int
cs
add
js
in
cmp
push
mov
in
in
jp
test
out
fidivs
testb
push
insb
xor
push
xchg
lahf
cltd
mov
add
scas
mov
cmp
push
pushf
sbb
mov
and
lcall
inc
dec
xor
into
and
mull
rorb
mov
filds
ja
das
gs
inc
shll
adc
or
icebp
jns
mov
mov
int
inc
mov
mov
outsb
enter
fwait
dec
popa
adcb
mov
sub
loop
lcall
int
cmc
stc
xlat
leave
lock
pop
mov
xor
xchg
jnp
jbe
and
fdiv
and
jnp
outsb
dec
in
and
fidivs
div
sbb
mov
pop
mov
cmpsb
xchg
aad
fs
push
test
inc
ljmp
mov
cmc
stos
jne
pop
ss
dec
sti
into
cld
inc
cld
test
shl
ds
sahf
push
imul
jg
mov
xor
scas
in
fwait
mov
pusha
cmp
sub
mov
xchg
jne
mov
cmp
pop
inc
data16
in
mov
leave
negl
insl
imul
inc
in
jae
mov
cmpxchg
adc
lahf
add
mov
test
mov
test
movsb
xor
lahf
call
femms
lock
mov
fistl
cmp
sub
xchg
sbb
cli
jecxz
and
dec
cmc
cmc
sahf
xchg
aas
fs
shl
push
cmp
push
add
add
jno
inc
lcall
adc
sbb
cmpsb
inc
lods
inc
in
stos
sahf
clc
cli
jg
add
or
xor
mov
mov
ret
jns
ds
ret
outsb
jo
adc
bswap
cmpl
inc
or
aam
lea
aad
push
mov
repz
cmpsb
popf
pop
test
sti
aaa
sbb
and
dec
push
insb
decl
jne
xlat
icebp
mov
pop
fxch
fistps
sub
add
aaa
ss
dec
sbb
inc
cld
mov
sahf
pop
out
test
out
incb
in
xor
or
jns
pop
repz
pusha
faddl
mov
push
add
xor
push
adc
sahf
mov
mov
and
xchg
fdivp
add
inc
daa
or
dec
sub
jl
jp
pop
pop
pop
push
test
jb
sbb
mov
mov
inc
iret
pop
adc
jecxz
loop
out
out
ljmp
cmp
test
out
rol
pop
dec
int
pop
out
lret
daa
pushf
sub
mov
adc
incl
sahf
mov
das
test
and
aaa
loopne
jnp
in
xchg
je
lds
lcall
test
stos
sbb
mov
xchg
pop
and
xlat
jge
xchg
sub
movsb
adc
jg
jge
mov
call
mov
cmp
rclb
or
cmc
scas
inc
es
lods
orl
mov
and
xor
adc
popf
inc
cld
insl
sar
adc
mov
mov
int
mov
movsl
out
mov
testb
push
stc
inc
lds
xchg
pop
mov
sahf
mov
leave
and
inc
cltd
add
jle
daa
push
frstor
mov
or
fstpt
mov
je
inc
jnp
imul
xlat
inc
cmp
push
mov
fimuls
cmpsl
xlat
inc
push
jns
imul
xor
sub
jl
popf
cwtl
sub
pop
ss
jl
mulb
mov
adc
lret
rolb
sub
scas
sub
loop
js
fsts
lds
add
loopne
sbb
jo
jbe
xor
xchg
sbb
inc
sub
lahf
in
pop
sbb
js
fstl
test
sbb
inc
or
jmp
push
in
sbb
rolb
nop
popa
flds
inc
fmuls
sub
sub
scas
or
rolb
xor
test
and
push
pop
fstpt
lret
pop
gs
repnz
call
in
repnz
inc
inc
js
cld
jnp
fwait
sbb
dec
sbb
bound
mov
fistps
xchg
das
lds
mov
inc
loopne
xor
mov
outsb
out
aad
add
aam
out
pop
mov
js
sbbl
andb
jp
in
jp
arpl
lahf
lds
sbb
movsl
or
pop
in
xor
jecxz
aas
adc
in
dec
aam
stc
dec
add
sub
icebp
push
sub
out
daa
mov
insb
fwait
shll
mov
mov
dec
mov
xorps
sub
push
mov
and
mov
xor
mov
lret
sbb
pop
xlat
repnz
inc
scas
mov
xchg
xor
jbe
sbb
inc
sbb
sahf
pop
cwtl
mov
sub
jno
mov
rol
push
add
rcl
add
push
sarl
jp
mov
cmpsb
sub
dec
stos
xor
push
aas
loopne
mov
sbb
int
sbb
lcall
xchg
push
add
in
push
push
ret
dec
push
loop
bound
mov
pop
fmul
addb
xchg
pushf
dec
or
and
mov
daa
xchg
stc
daa
push
inc
cmp
inc
lods
aaa
push
push
data16
out
adc
pop
loop
and
xor
aad
push
add
mov
dec
push
cld
rcl
adc
inc
or
adc
rcrl
push
and
xor
aaa
xchg
jo
in
xchg
and
cwtl
fistps
mov
xchg
push
nop
mov
xchg
sbb
fistpll
cmp
pop
pop
push
xchg
adc
ja
dec
sbb
repnz
adc
imull
in
pushw
xor
cltd
imul
je
xchg
stc
jnp
ja
mov
bound
xchg
and
add
out
cmp
sub
mov
and
cmpsb
mov
bound
jnp
sub
adc
push
popa
fistpll
and
fisubl
pop
jns
ror
lock
testl
enter
dec
mov
mov
ljmp
jg
cmp
xor
rcll
adc
jge
ds
lret
mov
inc
iret
dec
stos
test
dec
lcall
xor
ret
fwait
mov
mov
shrb
dec
pop
shl
adc
inc
xchg
dec
add
lret
call
pop
lret
sarl
mov
mov
rcrb
pusha
or
out
mov
nop
sbb
les
pop
sbb
sub
pop
and
dec
out
stos
dec
cmp
call
xchg
popa
repz
stos
stos
ja
xorl
pop
mov
lea
cltd
push
lock
movsl
sub
pop
arpl
pop
add
pop
push
cmp
xlat
leave
xchg
lea
jge
and
and
mov
in
jge
stos
pusha
into
movsb
movsb
fsubs
adc
rcrb
rolb
mov
stc
adc
pop
cmp
js
mov
das
inc
add
stc
fisttpll
pop
clc
jo
ret
and
repnz
push
xchg
aad
imul
xchg
inc
outsb
lcall
adc
cmpsb
and
int
push
cmp
mov
sbb
loopne
push
cmp
scas
data16
xlat
movups
rolb
mov
rcl
xchg
gs
add
rcrl
pop
inc
mov
in
jo
dec
pop
push
insl
out
sub
xorb
js
xchg
lock
and
cmp
jecxz
inc
cmc
pop
pop
test
xor
mov
push
pop
and
test
cltd
lcall
call
divl
inc
and
arpl
mov
mov
xchg
xchg
out
push
rcl
jno
shll
mov
sub
iret
mov
pop
dec
int
xlat
insl
mov
inc
add
aad
push
mov
sbb
xchg
inc
addr16
aas
jnp
daa
cmp
aam
xchg
in
xadd
cwtl
lods
and
loop
fidivrl
and
xchg
fsubrl
xor
mov
cmpsl
imul
out
popa
jbe
imul
jno
or
out
xor
test
lea
pop
and
imul
test
jnp
scas
or
push
aas
xor
or
jecxz
aad
psrlq
outsl
insl
out
dec
and
mov
xor
adc
mov
xlat
xorl
add
lock
jb
test
xchg
push
inc
popa
ret
rorl
arpl
out
hlt
and
sbb
rolb
mulb
jp
xor
filds
and
pop
movsb
or
int
jne
lcall
mov
mov
jmp
push
push
in
lret
dec
insb
aad
inc
xor
lahf
ljmp
xchg
js
jo
add
push
push
aas
pushf
subl
mov
adc
into
mov
or
and
aad
inc
cmc
mov
in
cmp
mov
pop
out
dec
jae
cmc
fs
and
addl
mov
mov
push
iret
jge
inc
jns
in
in
frstor
das
mov
addb
ss
ret
xchg
xlat
pop
sbb
rorb
mov
popa
mov
test
dec
lds
dec
les
mov
xorl
cli
addr16
insl
test
pop
push
aas
mov
dec
jbe
xchg
cwtl
mov
jo
jbe
das
jbe
in
push
inc
dec
test
mov
xchg
or
mov
mov
jecxz
imul
jl
push
xchg
sub
add
mov
xor
or
cmpsl
pop
test
inc
es
push
fildl
test
and
aad
mov
inc
fyl2xp1
inc
mov
add
in
add
xor
cmc
adc
add
jg
sbb
mov
sbb
xor
inc
scas
push
hlt
stc
sahf
insl
jnp
add
outsl
sahf
imul
ret
sbb
repz
lods
inc
mov
scas
mov
mov
rcr
inc
or
ja
sbb
pusha
outsb
aam
push
js
xchg
rcrb
movsl
sbb
dec
daa
adc
push
notb
mov
les
mov
pop
and
mov
icebp
rcrb
sub
push
lret
repz
loope
jmp
adc
cmp
scas
aad
fscale
mov
into
stc
sbbb
jae
loop
lock
jp
sbb
or
cld
out
call
dec
xchg
fcmovnu
pop
xchg
mov
std
mov
outsb
sbb
cmc
lds
stc
xor
dec
inc
adc
addr16
mov
xorb
outsl
add
adc
xchg
pop
cmp
icebp
rorb
ljmp
mov
sahf
bound
sub
je
out
push
sti
int3
out
je
fcomp
dec
in
fdivl
add
or
sbb
sbb
xor
sub
jle
outsb
xchg
pop
mov
pop
jl
popa
xor
lds
notb
push
fmul
sub
sbb
sub
sarl
out
or
mov
leave
mov
popa
push
push
or
ss
add
mov
sub
jg
lahf
jae
push
dec
lock
jecxz
and
xchg
mov
fldenv
testl
fsubrs
jge
dec
std
out
jl
or
mov
pop
push
push
adc
dec
repz
mov
movsb
test
xchg
das
or
and
ljmp
out
or
loopne
dec
push
pop
fdiv
pop
ret
stos
repnz
in
sub
ja
and
mov
or
cmp
jp
jl
jp
sub
das
push
pop
push
jne
int3
repz
or
sbb
jmp
aas
fs
icebp
lds
aaa
inc
inc
loope
add
stos
jb
cltd
xor
out
push
loopne
xchg
int3
ljmp
stos
cmp
cmc
les
xor
mov
idivl
xor
shl
or
das
rcl
out
repz
rorl
adc
sub
mov
dec
inc
test
jmp
xchg
fistpll
jl
inc
jns
jno
mov
int
scas
lods
imulb
cmpb
std
sub
ret
dec
js
nop
mov
aad
dec
jg
ret
dec
pop
aaa
rcl
mov
mov
aam
sarl
adc
push
icebp
xchg
add
dec
lea
je
pusha
sub
ljmp
mov
jne
cmpsb
fs
xchg
push
pusha
dec
stos
faddl
jns
and
cwtl
jl
sti
faddl
imul
insl
dec
fs
leave
imul
test
rorb
xor
in
xor
lds
sti
jle
lret
outsl
js
lock
insb
and
xchg
jmp
sarb
jbe
push
add
je
push
cwtl
hlt
popa
test
xchg
lods
sub
aad
mov
xlat
xchg
xor
mov
aad
ljmp
or
enter
xchg
add
fwait
pop
or
jle
jo
xchg
add
mov
push
insb
ss
dec
pushf
jbe
mov
cltd
fildl
aam
scas
out
in
add
rol
jle
jnp
jle
insb
das
imul
lret
loope
in
adc
rcl
dec
mov
xor
or
sbb
dec
ficoml
and
loop
pop
outsb
insl
outsb
jb
cmp
push
cwtl
repnz
dec
divl
sub
sti
js
push
cwtl
jmp
fs
and
movsb
shl
loope
in
mov
js
stos
cmp
push
cs
fisubrl
addps
daa
lock
or
mov
scas
pusha
push
sahf
movsb
mov
lock
dec
mov
mov
push
sbb
bound
push
sub
xor
out
les
shrb
ja
adc
inc
adc
repz
dec
hlt
adc
aad
fwait
jo
xor
in
test
sub
sbb
jl
or
ss
jo,pt
pop
popf
shl
cmp
stc
cwtl
xor
mov
lods
aaa
rcll
mov
rcll
push
push
fiadds
je
adc
into
sbb
and
dec
jecxz
pop
sbb
mov
pop
inc
jl
aas
or
fwait
idiv
paddsb
inc
fidivs
ret
lds
pop
jnp
loop
add
inc
aas
shlb
mov
pop
pop
movl
es
xchg
jl
dec
addr16
add
testl
imul
inc
dec
fstpt
int3
mov
jg
push
and
xor
push
or
outsb
fidivs
aas
dec
leave
pusha
jno
and
out
fisttpll
addb
sbb
lea
adc
jg
add
push
push
adc
popf
xchg
jmp
in
inc
ret
out
popa
stos
fcoms
or
mov
lahf
addb
mov
push
mov
nop
mov
out
loop
movsb
fstl
movsb
fwait
dec
jg
mov
sub
cmp
aaa
mov
add
xor
fnstcw
xchg
jl
cmp
rcll
push
les
and
repnz
push
in
cmp
sbb
imul
call
cmp
pop
adc
mov
mov
fadds
cwtl
stos
icebp
adc
out
mov
repnz
or
xor
int3
xor
es
fcoml
lret
push
fwait
inc
bnd
xor
aad
ja
mov
clc
sbb
pop
daa
cmpb
ret
test
clc
frstor
or
jmp
and
pop
imul
arpl
sahf
in
insb
push
and
sub
div
cmpsb
mov
daa
and
sub
push
lcall
roll
xchg
mov
add
adc
pop
push
out
jl
cmc
mov
mov
loope
lcall
xchg
push
jl
add
mov
outsl
inc
leave
fiaddl
mov
lods
jl
adc
lods
push
jle
jb
ljmp
cltd
or
stc
adc
jp
loop
xor
sahf
dec
scas
lret
xchg
sub
inc
in
loopne
pop
stc
push
cltd
cmc
mov
popf
sti
lods
jg
add
push
int3
ret
out
push
ret
and
or
xchg
fisttpll
jmp
sbb
cs
faddp
mov
xchg
hlt
fbstp
push
push
fwait
pop
mul
mov
adc
jecxz
sbb
mov
in
and
or
movsb
ret
popa
pop
sub
xor
out
dec
mov
ljmp
inc
push
add
push
mov
jne
or
cmp
xchg
jle
lcall
jecxz
in
jge
lods
rcrb
inc
inc
mov
and
pop
or
adc
pop
sub
push
inc
push
mov
inc
cmc
and
pop
xor
adc
mov
xor
cli
in
fcmovbe
jns
adc
pop
adc
xchg
xor
call
nop
shrl
mov
divl
out
cmpsb
xchg
int
mov
jmp
daa
iret
cmp
pop
aas
inc
mov
clc
xchg
push
cs
in
pusha
ret
jno
mov
es
rcl
mov
out
mov
out
shl
call
mov
jb
xor
cmpsb
jle
inc
sbb
dec
ds
je
dec
in
ret
jmp
jl
xor
bound
jge
mov
push
push
sbb
rorl
pop
repz
and
clc
std
mov
dec
imul
mov
repz
push
clc
push
cmp
mov
lea
pop
int3
inc
movsl
test
inc
pushf
adc
imul
sub
aam
push
shl
xchg
shl
ja
out
call
mov
inc
xchg
aad
mov
push
ret
xor
adc
fldl
inc
push
xor
mov
mov
movsb
push
vcmpsd
push
fsin
ljmp
sub
leave
or
int3
ret
mov
out
mov
fdivrs
mov
jbe
mov
sub
cs
mov
jb
push
lret
lea
jl
subl
pop
adc
pop
call
add
push
lret
cmp
repnz
push
xor
adc
stos
lret
test
adc
pop
push
push
xchg
mov
sub
dec
pop
sti
mov
pop
cmp
cmc
fs
sbb
mov
repnz
push
jmp
add
pop
sub
push
add
push
xchg
loopne
out
cld
sti
jmp
or
mov
jle
jmp
push
fimuls
fldl
add
sbb
inc
movb
in
stos
in
xchg
jg
fsubrs
cmp
or
rolb
add
jge
js
icebp
into
push
and
sbb
mov
out
mov
shlb
push
sbb
mov
mov
les
ds
fs
mov
cmp
cli
repz
xor
pop
lret
inc
or
out
mov
mov
mov
repz
lret
sbb
cld
decl
xor
xor
in
inc
mov
pop
xchg
mov
jmp
add
pop
dec
pop
dec
mov
mov
lcall
adc
and
inc
imul
sub
cmp
leave
sbb
fldt
bound
dec
sbb
test
mov
imul
out
lds
jp
dec
pushl
out
push
loop
outsl
sbb
out
pop
push
sahf
repz
test
fimull
arpl
fmuls
xor
sahf
js
adc
inc
mov
cltd
into
sahf
clc
rolb
add
imul
xchg
cs
jbe
or
inc
xor
pop
pop
inc
lock
fstpt
inc
fcomps
ljmp
cmp
sbb
jb
push
xchg
dec
add
pop
adc
sub
add
push
clc
lds
push
sbb
loop
loop
add
js
add
pop
or
aaa
lcall
and
push
andb
jp
adc
xchg
popf
imul
inc
mov
xchg
jl
sbb
adc
and
pop
shll
pop
pop
mov
mov
adc
rolb
outsl
jmp
mov
inc
jl
sarb
sbb
ja
ss
ret
push
cwtl
lds
add
push
adc
notb
pop
mov
out
mov
addl
jne
mov
sbb
test
or
mov
push
aam
cmc
jb
push
mov
mov
or
lret
std
sbb
or
dec
mov
nop
ret
idiv
pop
test
ss
movsb
pop
mov
dec
cmpsl
push
adc
cli
fs
dec
outsb
push
fldt
xor
mov
mov
ja
jmp
testl
test
pop
mov
and
inc
rorb
sub
xlat
cmc
xchg
add
jne
loope
sbb
aaa
js
xorl
out
jl
mov
or
sub
in
mov
pop
iret
loop
lods
notb
adc
jnp
pop
dec
daa
outsl
insb
sub
test
pop
sahf
sbb
je
testb
sbb
and
mov
adc
add
or
daa
adc
inc
mov
add
jge
mov
jmp
cmp
jno
movsl
sti
test
and
jne
push
shll
lcall
push
sti
ret
add
jo
lods
outsb
mov
or
in
jge
mov
mov
xor
pop
jns
push
mov
xor
cmp
imul
mov
pop
shlb
test
adc
jns
fbld
mov
movsb
cmp
inc
push
test
outsl
jbe
dec
stos
test
cmpsb
repz
es
cli
inc
ljmp
int3
sub
inc
popf
jns
add
xor
pushf
rolb
and
nop
adc
jmp
test
scas
adc
scas
inc
mov
sub
inc
and
pusha
sub
mov
cmp
dec
out
lods
loop
ja
fsubrl
aaa
ljmp
mov
lahf
jmpw
out
push
dec
xor
pushf
jg
jl
adc
cltd
imul
and
sub
mov
adc
pushf
add
push
ret
xchg
outsb
int
push
xor
push
icebp
mov
icebp
add
mov
data16
adc
adcb
stc
adcl
sbbl
cmp
sub
sbb
jnp
jno
aam
xchg
xor
adc
mov
push
jp
sbb
test
fcmovu
add
or
jbe
or
sbb
enter
nop
stos
dec
jle
xchg
push
cli
adc
fcmovnu
test
in
lods
cwtl
pop
mov
push
rcrl
jp
sahf
clc
aaa
pop
xorb
stc
in
enter
mov
fdivrl
dec
or
mov
xor
outsl
das
xchg
ja
into
mul
sti
mov
call
add
cmpsl
pop
push
clc
into
push
add
ret
sar
inc
cld
mov
out
and
xchg
out
int3
enter
cmpsb
push
scas
outsl
stc
jmp
insb
push
xchg
das
jae
js
ja
or
dec
cwtl
push
lea
cmpsl
pop
sbb
sub
inc
dec
pop
push
fcmovb
sub
adc
pop
xor
rcrb
mov
in
or
jl
xor
int
cmpsb
and
sub
xchg
mov
leave
mov
insl
and
add
adc
cmp
sub
fldenv
xchg
bnd
cmc
adcb
outsl
in
movsl
cwtl
in
loop
nop
dec
or
sar
enter
scas
lds
loope
ja
adc
cmpsb
imul
lret
das
xchg
fldcw
or
or
lock
in
jge
daa
shlb
jmp
aad
sub
dec
cmp
rolw
mov
jb
ljmp
ss
out
adc
lods
in
sti
arpl
xor
dec
adc
shrl
mov
pop
btr
jp
mov
sub
paddb
movsl
and
xchg
sub
xchg
inc
jae
inc
dec
xchg
cwtl
insb
or
les
lock
adcb
lahf
test
out
shl
lret
outsl
cmc
hlt
dec
mov
add
cli
adc
cmp
les
add
sub
js
je
shlb
cmp
outsl
and
lods
test
lea
outsb
pop
jle
ret
lock
sub
shll
jecxz
and
rol
dec
jae
inc
in
mov
out
mov
xor
mov
mov
inc
mov
lds
mov
fwait
outsl
loope
jbe
ds
orb
out
pop
iret
mov
idivl
mov
cs
loop
push
imul
out
call
out
push
ret
movsl
ror
test
stos
mov
dec
and
sub
int
nop
arpl
mov
or
lods
fs
sti
cmp
xchg
cmp
and
cmp
fsubrs
fsubl
test
std
mov
test
shr
jbe
fs
ja
test
xor
mov
cmpl
adc
in
push
mov
xchg
xchg
sub
cmp
cld
mov
sbb
dec
lcall
mov
push
mov
iret
pusha
clc
mov
inc
cmp
pop
pop
imul
xor
pop
add
cmpsl
aaa
or
das
cmp
clc
push
lahf
and
jge
dec
xchg
pushf
sbb
sbb
mov
jbe
loop
inc
clc
sub
and
pop
jg
pop
add
add
scas
idivb
pushf
std
popf
and
jns
push
arpl
popf
mov
ljmp
lahf
stc
sub
mov
fldcw
sbb
je
sbb
xor
shl
gs
ds
cltd
xchg
sbb
negb
mov
sar
sbb
mov
cmpsl
pop
rcr
push
je
and
loopne
movsb
scas
fisttpll
shll
test
cwtl
dec
push
out
jo
and
sub
fistpll
push
adc
push
les
adc
ror
cld
dec
push
xor
cmpsl
test
sbb
movsl
imul
inc
lock
addr16
sbb
sub
addb
in
stos
mov
push
arpl
aaa
gs
pop
push
lea
popf
inc
loop
mov
mov
int
cmp
add
test
jb
push
subb
dec
std
inc
xchg
icebp
cmp
loopne
adcl
cltd
movsl
mov
push
push
cmp
shrb
dec
sub
jg
jg
mov
xchg
popf
push
xchg
jle
mov
test
cmpsl
and
outsl
sub
icebp
setb
xchg
in
and
sub
pop
imul
roll
fbld
push
lcall
push
cwtl
out
jb
cltd
dec
xor
lea
or
sub
mov
sub
jge
repnz
mov
cmp
sbb
xor
repnz
fnsave
push
inc
xor
neg
paddusw
cmp
rcl
sti
or
xchg
mov
sbb
popl
cmpl
fildl
mov
icebp
or
int
scas
xchg
data16
in
std
ror
out
movsb
mov
mov
jmp
insb
lahf
xor
cmp
mov
add
das
in
lcall
and
fsubrs
fists
notb
icebp
push
sub
jecxz
push
xor
lret
loope
mov
sbb
movb
mov
std
inc
xchg
add
and
cmp
mov
xchg
imul
cmp
push
dec
fwait
pop
jbe
pop
shll
movsl
ficoms
push
std
jno
xor
loop
jo
mov
cmp
dec
inc
nop
dec
pop
repz
clc
rolb
aad
das
adc
ret
xchg
pop
ja
fsts
xchg
imul
sbb
loop
mov
in
inc
add
scas
sbb
popf
fstpl
cmp
cmpsl
stc
xchg
popa
nop
adc
movsb
xor
cwtl
sti
jnp
jge
jbe
std
inc
fsubl
fbld
xchg
cmp
fsts
jo
aaa
add
push
add
push
ret
sarl
call
ficoms
fisubrs
scas
out
popf
test
std
sbb
ficoms
cmp
cwtl
pop
xor
rclb
loopne
lea
es
mov
pop
jae
pushf
mov
ja
cmc
loop
imul
mov
jecxz
cs
cmp
fiadds
xor
iret
xor
mov
mov
loopne
bound
into
bound
pop
pop
jae
je
sub
and
sub
mov
sub
xchg
push
pop
jmp
push
pop
repz
cld
mov
push
xchg
dec
stos
out
sbb
cmp
or
das
testl
in
pop
mov
into
ret
xorb
dec
cwtl
sbb
pop
mov
push
xchg
incl
sub
leave
fdivp
and
xor
push
cmp
mov
jg
test
out
test
scas
and
nop
xor
lret
popw
ds
outsl
cmp
orl
jnp
sub
aaa
cmpsb
sbb
outsl
ss
popf
sub
push
jne
and
xchg
out
cmp
dec
sbb
xor
xor
sti
and
or
andl
dec
xorb
stos
daa
sub
cmpsb
cltd
jne
lock
pop
repnz
push
or
sub
lahf
repnz
loope
or
loop
int3
roll
adc
popf
lods
cwtl
inc
pop
dec
notl
rcl
mov
or
sbb
call
gs
and
cld
or
inc
pusha
pop
add
dec
mov
xor
push
mov
scas
test
in
sbb
mov
outsl
ljmp
lock
test
push
xor
sbb
stos
popf
clc
addr16
inc
jae
mov
push
mov
inc
push
ja
xchg
loope
leave
pop
and
xchg
inc
int
fisttps
lcall
iret
subl
mov
out
lock
into
inc
out
jbe
xchg
push
jae
cmp
xchg
dec
fistl
mov
sbb
adc
subl
xor
pop
inc
mov
mov
inc
mov
std
fdivrl
or
es
push
cmpsb
mov
pop
out
cmp
mov
mov
pop
adc
das
inc
imul
pop
fs
and
push
bound
out
cmpsl
bound
mov
in
insb
xor
mov
shll
sub
int3
pop
std
arpl
adc
mov
pop
jae
je
rolb
pop
aas
fisttpl
fldcw
leave
push
pop
mov
jge
mov
nop
inc
adc
pop
push
push
fstpt
pop
addr16
sahf
mov
fwait
xor
mov
imul
mov
fisubrs
inc
jge
inc
mov
push
add
loopne
xor
dec
or
insl
loope
ljmp
xor
jnp
cmc
imul
rorb
in
xchg
out
inc
das
add
sub
pusha
int3
in
sub
mov
sub
sbb
sub
jg
lahf
jne
call
adc
mov
and
stos
push
in
fisttpll
andb
lcall
hlt
sbb
jae
aaa
aad
stc
sub
jae
push
sub
sub
sbb
lods
out
loope
out
inc
test
inc
xor
pop
xchg
sahf
imul
mov
add
add
js
fsts
rclb
fists
mov
pop
push
imul
out
shl
scas
xchg
xchg
leavew
inc
repnz
push
ss
clc
cmp
inc
shll
or
shlb
cmc
loopne
mov
dec
xchg
enter
sbb
xchg
sub
sub
cs
xchg
cmp
or
movsl
add
xchg
inc
jp
jp
mov
xchg
xlat
inc
mov
inc
xchg
sub
push
push
insl
stc
jecxz
mov
or
sbb
jmp
les
sbb
scas
js
out
adc
and
daa
shlb
dec
and
insb
stc
test
fiaddl
add
aam
mov
in
push
xchg
jl
test
loopne
mov
xchg
push
dec
dec
xchg
ret
mov
movsl
jbe
xor
push
inc
sbb
xchg
jg
sub
pop
das
mov
pop
adc
hlt
stos
leave
xlat
ret
inc
int3
imul
divb
or
fsts
lcall
and
stos
and
inc
leave
out
shrb
jecxz
mov
arpl
pop
cli
mov
cmc
mov
xchg
dec
jbe
or
xchg
jno
scas
aad
cld
and
jge
xchg
xor
out
mov
lcall
fstps
mov
xlat
cmp
rcll
xchg
loop
fucomip
sarb
sbb
in
or
sbb
sbb
lahf
mov
push
test
sbb
sub
cld
jo
add
or
push
xor
dec
add
dec
aas
or
les
sbb
js
push
xor
lock
cli
push
jne
dec
sbb
subl
ret
sbb
arpl
inc
mov
cmp
jle
jb
mov
rol
sub
sub
inc
lock
outsb
jno
cltd
stos
mov
pop
gs
inc
aas
aaa
pusha
rcrb
push
in
jo
or
lods
mov
test
mov
fs
je
sub
lds
out
shl
xor
andb
pop
pop
adc
mov
cmp
pop
inc
mov
aam
or
xchg
jp
dec
cwtl
lea
xchg
insl
mov
pop
rolb
pusha
icebp
lock
mov
mov
push
lods
scas
lret
cmp
adc
incb
and
xor
push
sub
jns
cmp
pop
loope
div
sbb
jno
sbb
cmp
xchg
hlt
mov
shrb
inc
and
cmpsl
xor
je
rorl
pushf
push
fadds
mov
mov
popf
int3
push
lods
jecxz
push
push
cmp
icebp
sarl
sbb
jle
xchg
outsb
adc
nop
inc
pop
aas
lcall
fiaddl
sub
pop
test
arpl
aaa
addr16
push
inc
jne
sbb
je
mov
mov
add
stos
xor
mov
cmpsl
cmc
ljmp
addr16
sahf
sbb
adc
mov
mov
add
inc
cmp
mov
xor
popa
pop
mov
outsl
stos
push
dec
mov
lcall
jg
dec
fwait
cmpsb
or
gs
fildll
jno
mov
cmp
xor
mov
lods
jg
sarl
fisttpll
in
aaa
les
inc
ret
shrl
sbb
mov
mov
mov
out
aaa
pop
rcrb
rcll
jns
fs
fsubrl
push
cwtl
pop
ja
add
mov
mov
mov
pop
repz
jns
mov
pop
sbb
sahf
inc
xor
sbb
mov
inc
push
test
sub
mov
loopne
ds
prefetcht0
sbb
nop
pop
stos
push
cmp
sar
adc
stc
push
add
inc
subb
lahf
arpl
pop
sub
dec
mov
addl
add
nop
ret
test
adc
adc
inc
xchg
dec
mov
test
jge
and
rolb
into
lock
sti
out
not
imul
decb
shll
or
ja
push
cld
push
xor
pop
jbe
and
test
mov
es
iret
inc
and
cwtl
das
inc
and
mov
bnd
mov
imul
mov
cmpsb
push
or
sub
and
dec
add
sub
lods
outsb
std
mov
lret
ret
out
adc
movb
outsb
push
jae
or
js
xchg
dec
mov
mov
lahf
mov
jle
mov
repz
test
jg
sub
sbb
push
pop
shl
jno
add
or
and
push
xor
in
cmpsb
jle
mov
loopne
int
pop
pusha
push
scas
adc
sbb
inc
xchg
sbb
fcompl
push
push
test
mov
fimull
push
adc
mov
sub
rolb
outsl
lahf
cmp
in
cmp
les
divb
xchg
out
push
mov
and
loop
and
mov
xchg
aas
shrb
daa
repz
jmp
mov
in
into
in
popa
mov
pushf
fidivrl
mov
jg
push
call
inc
lret
into
nop
scas
cmpsl
in
pusha
arpl
stos
jmp
and
nop
mov
imul
push
rcl
cmp
aas
push
mov
lds
mov
mov
add
jecxz
mov
xchg
mov
adc
hlt
sub
inc
idivl
mov
hlt
lock
and
or
cld
and
inc
lret
mov
push
mov
mov
mov
push
ffree
das
adc
pop
ret
mov
rol
sbb
rcr
adc
or
xchg
fdivs
mov
add
repz
pop
push
xor
sbb
sub
pop
fmulp
cli
loopne
sbb
xchg
push
dec
push
and
pop
mov
das
adc
jmp
loopne
push
dec
cmp
fcomps
xchg
cmpsb
cmp
je
push
push
stc
cmovle
or
ret
pop
push
sahf
std
dec
cmp
andb
cld
sub
lds
fidivs
insl
aas
dec
sub
xchg
lret
lods
cltd
stos
loopne
or
nop
sub
rcll
push
imul
das
jg
mov
lcall
arpl
jno
mov
mov
dec
sub
jmp
js
out
xlat
addr16
sbb
loope
ja
mov
push
mov
cwtl
das
insb
xchg
test
out
in
xchg
das
xchg
fldl
xchg
mov
cmp
cmp
xorb
cmp
shll
lret
mov
dec
inc
int3
dec
clc
cmc
aaa
pop
sub
rorl
icebp
adc
hlt
out
cmc
mov
mov
push
lds
push
add
cmp
imul
dec
lds
sarb
pop
jo
and
test
lret
rcl
movsb
pop
ret
mov
or
add
mov
push
imul
dec
imul
xchg
lahf
pop
std
loop
sti
add
push
aaa
pop
lds
cmp
sbb
or
loopne
les
imul
imul
cld
rol
push
pop
cli
inc
mov
inc
and
int3
xchg
inc
lods
and
xorl
xlat
dec
sub
add
sub
and
mov
addr16
lahf
xchg
bound
sti
xor
mov
sahf
rol
scas
int3
pop
gs
mov
data16
dec
jae
dec
jnp
shrl
aaa
nop
repnz
cmpsb
jecxz
sahf
jns
fcoml
dec
test
mov
pop
add
scas
cmc
std
jbe
pop
sahf
jno
or
pop
inc
push
bnd
dec
mov
popf
imul
mov
pop
or
lahf
push
add
shlb
mov
and
sbb
xor
gs
lcall
pop
push
cmp
aad
lds
orl
shl
xor
cmp
or
pusha
insl
pusha
pop
adc
daa
cmp
jge
or
adc
mov
dec
add
sub
xchg
add
jp
gs
fsubl
pop
xchg
je
mov
out
dec
shrl
pop
outsb
es
imul
das
mov
inc
mov
std
fisttpl
push
add
inc
mov
add
outsb
sub
or
addr16
sub
enter
mov
rcl
ss
cwtl
sbb
sbb
repnz
xchg
popa
std
orb
mov
or
cmp
clc
jns
imul
push
lret
outsb
jp
nop
jmp
popf
pusha
out
dec
popf
mov
fcmovne
xchg
jne
push
ja
hlt
xchg
inc
sub
es
push
mov
outsb
loope
xchg
cltd
aam
sbb
lea
repnz
insl
imul
inc
out
push
lea
sti
mov
xchg
mov
mov
sub
sub
mov
pop
lea
push
inc
sbb
shlb
xor
cmc
cwtl
rcrb
inc
push
cmp
cmp
push
cmp
std
and
dec
in
add
mov
mov
or
fistl
lahf
add
addl
fwait
ret
push
out
lcall
int
enter
inc
loopne,pt
test
incb
xchg
nop
aas
jecxz
dec
mov
addr16
and
jns
pop
adcl
in
or
dec
mov
or
mov
push
out
cltd
test
mov
lret
xor
dec
and
adc
xchg
push
or
jns
add
je
cli
jns
clc
sbb
pop
int3
je
rcrb
jo
aam
cwtl
into
dec
xchg
or
enter
repnz
dec
dec
cmp
sbb
enter
test
rcrl
pop
in
in
fwait
mov
push
mov
into
push
fs
adc
repz
cmp
xchg
jns
cmpsl
inc
bound
stc
in
jmp
scas
adc
sub
push
xchg
mov
mov
je
or
icebp
cs
int3
enter
test
movsl
mov
into
clc
scas
cmp
mov
jle
and
cwtl
in
cltd
insl
and
xor
ss
hlt
addr16
sub
std
jecxz
rcrl
pop
into
cmp
mov
adc
bound
inc
je
aaa
mov
cmp
cmp
sbb
cwtl
jmp
ret
xchg
cs
stos
mov
push
or
xchg
mov
xchg
inc
dec
out
loop
jle
dec
xchg
xchg
dec
sbb
outsl
jbe
pop
addr16
xchg
sbb
add
adc
push
cmp
pusha
call
sbb
xor
inc
xor
cmp
add
cli
mov
inc
cmp
add
xchg
sbb
outsb
test
in
pushf
aaa
mov
test
aaa
mov
scas
mov
xor
mov
xchg
push
mov
ret
lret
adcb
xor
ljmp
inc
adc
or
dec
pop
nop
ds
jl
int
push
push
scas
fisttpl
jle
les
adc
inc
xchg
fldl
xchg
lea
cmp
jmp
fbld
push
mov
and
pushf
lds
test
adc
psllw
adc
ret
call
addb
sahf
adc
cmp
xchg
xlat
adc
divb
mov
push
jns
mov
nop
sahf
cld
pop
ss
clc
mov
into
dec
shrb
pop
mov
jo
insl
xchg
gs
imul
setg
and
test
adc
jmp
jno
outsl
das
icebp
mov
xor
shll
mov
push
mov
push
cmpsl
js
ficoml
pop
mov
scas
out
inc
and
push
pushf
out
sub
out
push
sbb
hlt
shlb
sbb
xor
ja
dec
lahf
and
test
push
jae
iret
outsl
push
inc
filds
dec
mov
pushf
das
mov
push
sarl
in
add
xchg
mov
ljmp
shll
lret
int3
movsl
hlt
cli
int3
push
das
shll
xor
inc
cmp
pop
xchg
cmp
jne
jecxz
aas
es
dec
shr
iret
out
pop
sbbl
sbb
push
out
repz
imul
cwtl
adc
xlat
dec
push
cs
push
sub
mov
aad
inc
cmp
outsb
adc
push
icebp
mov
xchg
insb
or
mov
sbb
nop
bound
inc
add
adcl
mov
pusha
or
lods
cmp
sahf
subb
fisttpl
test
jne
jae
mov
jo
aas
clc
mov
test
mov
scas
xchg
mov
movl
cmp
loop
cs
pop
dec
es
add
cmp
pop
dec
decl
les
mov
sub
add
sub
or
pop
fwait
dec
adcb
and
adc
xchg
dec
scas
ret
adc
or
ds
imul
lods
stos
inc
mov
fs
jg
add
push
pop
popa
les
bound
inc
add
movsl
stos
icebp
inc
cmp
xchg
stos
inc
xor
mov
jae
fstpl
lret
subl
xchg
lods
fistps
jmp
jecxz
pop
fistps
dec
lcall
xchg
cmp
int
lock
in
out
mov
mul
jecxz
xchg
addr16
sbb
xorl
xchg
mov
in
popf
adcl
fmull
mov
sti
inc
add
jmp
sar
pop
dec
clc
inc
mov
shrl
repz
sub
push
jbe
fucomi
stos
es
push
mov
addr16
and
out
sub
test
inc
sbb
push
mov
lds
sub
test
xchg
sub
xor
jno
fs
mov
lock
inc
jecxz
jno
sbb
shrb
ror
cltd
adc
adc
bndstx
push
notb
xor
mov
mov
int
cmpsb
push
fs
jbe
gs
incl
or
dec
push
and
adc
pop
shrl
add
adc
lret
adc
rol
dec
sbb
sarl
xorb
ret
lods
popf
pop
jo
je
mov
ss
jno
mov
mov
popf
ljmp
dec
xchg
xchg
adc
pop
and
mov
fs
adc
xchg
mov
mov
inc
push
pop
xchg
cmpsb
mov
dec
outsb
inc
sub
into
popf
sub
pusha
xor
mov
mov
and
push
movsb
ja
cmp
xor
int3
int
pusha
jle
out
pop
add
ror
repnz
pushf
push
mov
aad
in
daa
hlt
push
cmpsl
ret
nop
adc
jmp
inc
and
cs
les
cli
or
repz
testl
cmpl
mov
ds
aaa
imul
push
add
out
sub
shrl
imul
cli
in
jno
stc
in
jecxz
fbld
and
shll
add
pushaw
pop
cmp
xchg
das
mov
shll
pop
and
mov
and
and
pop
add
add
push
xchg
and
jmp
and
mov
pop
mov
mov
jecxz
or
mov
pushf
ja
mov
repz
stos
negl
cwtl
imul
pop
adc
mov
lods
les
stos
push
inc
adc
add
lcall
or
mov
xor
xorb
sub
sahf
xchg
xor
ror
movsl
bound
movsb
sub
aaa
jae
fs
aad
mov
fstl
in
mov
mov
cmp
jns
xchg
shlb
ljmp
dec
hlt
lods
jge
cmpsl
jo
ja
int
sbb
push
adc
add
in
fs
arpl
push
push
bound
xchg
repz
mov
dec
aaa
subl
jg
pushf
xor
testl
mov
jns
aaa
dec
subb
jle
jl
leave
lods
enter
and
mov
xor
xor
filds
fwait
lret
inc
or
leavew
test
add
push
repz
sti
sti
std
dec
out
jmp
stos
aas
xchg
sti
mov
divb
dec
outsb
push
mov
mov
cmpsl
test
or
mov
out
jecxz
inc
lock
xchg
insb
lods
fdivr
iret
mov
dec
arpl
push
sbb
add
cmp
mov
mov
inc
or
xchg
or
ret
fidivl
insl
xor
pop
incl
int3
adc
sahf
test
xor
inc
ljmp
movsl
gs
xor
mov
inc
pop
std
in
sub
movsb
adc
cltd
xor
lret
or
roll
mov
push
mov
pop
loop
add
lods
lcall
test
sub
dec
out
pop
pop
nop
dec
ror
jne
sub
ficompl
adc
mov
sbb
scas
mov
ret
cmp
push
in
int3
sub
aas
mov
sub
rolb
js
push
add
imul
dec
dec
lcall
xor
or
test
jae
and
out
jae
movsl
mov
mov
add
or
inc
xchg
loopne
jmp
mov
jne
hlt
xchg
jecxz
test
cmp
jnp
sub
ds
imul
mov
or
lcall
xchg
cld
cmp
fistpll
push
mov
mov
jmp
inc
push
sbb
movsb
and
sub
jmp
fdivr
xor
jo
les
inc
fstpl
test
push
inc
sti
imul
adc
inc
imul
push
aad
mov
pop
pop
xlat
incb
push
notl
or
mov
jo
out
ret
int3
pop
stos
push
dec
mov
jno
sahf
sbbl
dec
ss
xchg
lods
in
sbb
not
xor
cmpsl
das
pop
mov
insb
jne
pop
nop
int
mov
push
inc
pop
popa
aam
mov
adc
cmp
and
aaa
shlb
xchg
mov
dec
pop
mov
sub
sub
mov
pop
cmp
popa
mov
leave
xorb
cmp
std
pusha
data16
xor
rclb
mov
and
pop
les
sahf
pop
stos
adc
sbb
and
out
clc
divb
mov
std
out
sub
pop
pusha
mov
pop
mov
xor
push
enter
push
out
push
mov
and
movsb
dec
stos
pop
lock
stos
je,pt
daa
pop
xor
push
gs
rcrl
dec
and
mov
pop
imul
mov
sub
dec
fsts
repnz
pop
xchg
mov
add
jecxz
shrb
xor
adc
subb
arpl
dec
jge
xchg
iret
dec
dec
push
xchg
jo
dec
setp
test
mov
aas
inc
or
mov
push
je
add
cld
xchg
xor
ljmp
and
xor
std
sub
sub
movsb
xor
cmp
call
and
inc
and
lds
idiv
cs
or
movsl
sub
xor
sbb
js
mov
test
push
jbe
call
inc
adc
jl
dec
roll
iret
sahf
jae
test
jb
loop
in
or
dec
insl
in
outsl
mov
lret
out
xchg
mov
xorl
cld
gs
jne
xchg
xchg
push
lds
push
dec
test
jmp
and
add
stos
sbb
xchg
mov
ljmp
stc
lea
sahf
jno
aad
sub
and
bound
shlb
fcoml
decb
inc
pop
imul
cmp
or
mov
cmc
scas
jmp
mov
cltd
push
adcb
push
or
cltd
test
insl
ret
test
rorb
jns
pop
xor
adc
inc
mov
pop
das
bound
sub
repz
dec
rolb
pop
lds
push
pop
push
je
jecxz
fisubrl
out
das
adc
xchg
mov
push
mov
xchg
lahf
dec
outsw
jbe
movl
ret
pop
les
dec
jecxz
inc
addb
cmp
xlat
cmp
adc
repz
jne
pop
jle
and
jno
cmp
mov
xor
int3
jp
fwait
sbb
and
clc
int3
cmp
jns
int3
lcall
pop
enter
add
xor
enter
pusha
shl
jno
repnz
adcb
rcrb
fwait
dec
filds
pop
push
wrmsr
push
sbb
adc
cmp
sbbb
mov
mov
or
xor
shlb
jge
xchg
scas
shll
inc
mov
imull
inc
incb
push
fistpl
cmp
cmpsl
inc
jno
ds
pop
imul
xor
stos
out
adc
or
std
fisubl
in
adc
aam
daa
and
sub
mov
fldl
xor
sbb
xchg
sbb
enter
fcmove
sbb
add
jecxz
jge
mov
xor
xorl
or
imul
stos
mov
push
add
mov
mov
cld
sbb
and
ljmp
int3
inc
mov
jns
test
jbe
pop
mov
sbb
popf
stos
and
es
leave
cmp
inc
pop
mov
push
dec
mov
pop
add
pop
sub
int3
pop
lds
mov
shll
dec
xchg
dec
push
push
fldcw
dec
add
lods
mov
sub
jnp
in
shll
out
mov
pop
js
adc
mov
in
imul
mov
xlat
clc
or
fcompl
pop
out
sbb
and
adc
nop
shl
cmp
and
nop
push
jge
mov
pop
scas
mov
mov
lods
bound
testb
dec
and
cld
cmpl
jecxz
cltd
cmp
divb
test
push
nop
test
cmp
xchg
jge
jmp
ljmp
sbb
ficompl
aaa
jmp
cmp
aas
mov
mov
xchg
inc
jmp
movb
xorb
iret
push
mov
das
stc
incb
adc
lods
cmp
adc
add
out
enter
adc
and
push
imul
aaa
or
jge
mov
inc
pop
cltd
sub
push
pop
call
int
add
mov
adc
lcall
mov
nop
xor
xchg
mov
push
jno
and
gs
shl
test
sub
mov
outsl
adc
sub
lods
int
jo
inc
push
mov
pop
push
lds
sub
sub
dec
push
sbb
aad
pop
xor
pop
cmp
cld
xorb
adc
xor
xor
jge
add
pop
push
xchg
fwait
jns
sub
lods
test
xor
scas
fstpl
cwtl
dec
insl
sub
cmp
fisubl
dec
mov
sbb
mov
cmp
test
adc
push
jae
pop
mov
and
cs
bound
xchg
push
out
icebp
sti
and
sub
repnz
dec
ret
xchg
iret
xchg
fs
std
pushf
xchg
lret
into
add
sub
lods
push
fwait
mov
xchg
lret
loop
cmpb
push
outsb
stos
rcrb
lahf
mov
inc
mov
subb
out
jge
cmp
xor
ficoms
cld
imul
in
and
sbb
fimuls
mov
sbb
test
aaa
lock
into
pushf
jb
sbb
imul
out
xlat
push
dec
nop
sub
aam
sarb
xor
popa
adc
rorb
pop
aaa
out
adc
loop
ja
sbb
iret
cmpsl
addr16
sbb
cmp
sbb
cmpsl
cmpsl
rolb
xchg
jp
push
inc
jp
xchg
callw
rclb
jb
stc
mov
leave
daa
push
inc
mov
mov
xlat
xor
xlat
in
push
imul
xor
inc
dec
lret
sbb
cmp
xchg
mov
mov
fisubs
add
ja
jnp
adc
cmpsb
jp
xchg
dec
mov
adc
rorl
in
mov
xor
cwtl
jbe
xchg
pusha
notl
and
out
fnstenv
cld
inc
sub
les
add
fs
sahf
jbe
push
repnz
mov
or
xchg
decb
sbb
movsb
adc
cli
lret
int3
lahf
in
or
int3
js
xchg
mov
jns
nop
es
enter
sub
pushf
jb
in
sbb
inc
aas
dec
in
cmp
ds
sbb
enter
loopne
fldt
push
aas
sbb
fwait
test
ret
scas
in
dec
lcall
mov
jne
out
xchg
repz
jecxz
push
cwtl
jmp
loopne
lods
insl
das
adc
aad
lcall
bound
popf
lcall
fwait
cwtl
push
mov
lock
lds
inc
mov
std
sub
cli
inc
adc
aam
mov
pop
jb
dec
sub
jne
gs
ret
repz
inc
pop
cwtl
or
jnp
mov
jg,pn
sbb
adc
jb
das
sub
test
pusha
mov
push
imul
push
and
lcall
jb
pusha
add
sahf
pushf
iret
cmp
pushf
test
scas
mov
out
std
dec
mov
shrb
add
add
scas
mov
xor
dec
sarl
cmc
cmp
add
inc
push
jmp
fs
push
mov
mov
daa
push
dec
fldenv
pusha
jmp
pusha
cltd
roll
shlb
pop
bound
or
fs
push
leave
icebp
adc
negb
add
xchg
or
pop
stos
cltd
orb
lods
push
or
jp
out
cmp
aaa
ljmp
xor
ret
not
and
sbb
ds
xchg
popf
mov
pop
xchg
xchg
jecxz
mov
mov
inc
ffree
stos
lea
mov
jmp
lods
inc
stc
and
rcrb
jne
int
xor
xchg
jg
stos
daa
mov
rcrb
fidivrl
cmpsl
push
mov
shlb
rcl
fisubs
mov
sub
popa
sbb
into
pop
cmp
or
ja
cltd
mov
jbe
mov
push
or
dec
sub
mov
int3
pop
in
xchg
add
xorl
lea
aam
mov
arpl
cwtl
andb
dec
push
pop
out
mov
data16
adc
scas
sti
pop
shll
loope
ret
or
aas
loopne
push
imul
testl
std
inc
push
add
iret
and
popf
adc
aad
cmp
push
jae
push
xor
sub
ljmp
popf
roll
addr16
mov
jne
jge
pop
test
mov
jno
jnp
inc
cmpsb
sete
repz
jbe
sbb
mov
lret
dec
jne
in
mov
or
pop
lods
out
cmp
dec
sbb
xchg
test
in
lea
pop
lret
call
push
xchg
fcmovnb
add
test
sbb
loopne
out
jae
xor
xchg
cltd
in
loope
xchg
jmp
inc
push
sbb
shll
mov
popa
arpl
mov
imul
fildll
pop
and
or
and
insl
push
push
sub
pop
bound
dec
fucomp
mov
test
iret
in
rol
mov
jg
mov
dec
cmpsb
or
cltd
std
shll
mov
mull
cmp
fmulp
mov
inc
dec
gs
je
push
mov
scas
gs
movsb
mov
sbb
pop
pop
xchg
test
ret
repnz
mov
xchg
push
adc
push
sub
or
ljmp
fwait
and
cmp
dec
cmp
icebp
fldt
in
imul
rclb
pop
sbb
movsb
mov
mov
ljmp
push
sbbb
mov
xor
or
and
aaa
jb
lret
inc
repnz
or
out
rcrl
dec
push
mov
xchg
or
popa
mov
incl
push
sub
mov
or
je
popf
xchg
cmp
int
xchg
xorb
outsb
pop
cmc
pop
sub
insb
test
in
add
xchg
mov
sti
jecxz
cmpsb
sbb
adc
xor
sub
add
or
movb
cmp
pop
fadd
lcall
pop
lea
fwait
into
cmpsl
jb
xor
jno
in
in
jne
sub
mov
pop
push
add
in
data16
xor
sub
movsb
adc
insb
mov
xor
or
sub
testb
adc
adc
pop
popf
int
movsb
jne
loop
mov
xchg
push
mov
jl
sub
data16
mov
add
push
mov
push
aam
lret
mov
call
fdivrp
mov
popa
xorb
movsb
pop
nop
insl
imul
lret
repnz
dec
sbb
ret
ds
popa
lcall
scas
mov
cmpb
int
imul
xor
int
push
push
push
outsl
je
cwtl
pop
inc
popf
outsb
mov
and
outsl
dec
push
add
repz
call
xor
add
out
mov
pop
scas
adc
pop
inc
stos
mov
scas
mov
pushf
cmpsb
inc
jecxz
aam
movsb
das
mov
out
nop
sbb
pop
pop
or
pop
scas
lret
mov
cmpsl
in
lds
loopne
inc
cmp
xchg
mov
stos
and
mov
in
hlt
mov
mov
inc
jmp
daa
hlt
adc
jmp
cmpsl
push
gs
sub
adc
es
push
mov
xor
arpl
mov
dec
xchg
push
add
cmp
push
mov
or
jl
pop
out
loopne
mov
xlat
sti
cmp
cmpsl
mov
fdivrs
into
aam
mov
cmp
xor
gs
inc
dec
out
mov
addr16
imul
push
sbb
mov
jmp
jge
repz
int3
andl
inc
cli
cmc
mov
les
or
xor
imul
lret
stos
notl
out
les
and
push
push
pop
ja
or
push
je
or
and
add
inc
rcl
mov
xchg
push
adc
loop
int
in
xchg
dec
dec
cmp
xor
or
fwait
outsb
fwait
lock
rclb
nop
outsl
fs
adc
push
fildl
sbb
lods
call
out
les
fs
pop
movsb
add
sub
fcomip
and
mov
sbb
inc
stos
dec
ret
push
jb
sbb
xchg
adc
rcl
pop
mov
jne
daa
add
gs
mov
scas
mov
pop
sahf
lret
pop
mov
and
xor
inc
arpl
lds
jmp
xor
xchg
jb
rorl
repz
incl
imul
sbb
cmp
jl
cmc
mov
outsl
sub
mov
xor
test
imul
and
add
pushf
push
insb
jne
hlt
aaa
insb
inc
push
lcall
aaa
xor
mov
xlat
out
dec
mov
or
in
fcoms
xchg
pop
ret
xchg
xor
mov
mov
scas
or
xor
sbb
mov
icebp
xchg
and
sub
push
cmp
or
cmp
mov
insb
es
adc
ret
mov
pop
mov
push
sub
ret
addr16
cmpsb
xor
psadbw
and
dec
mov
aas
je
jecxz
inc
bound
stc
mov
xlat
aaa
insl
cmp
in
mov
mov
pop
ds
mov
sar
out
inc
orl
cmpsl
or
xchg
fildll
das
outsl
push
in
out
mov
inc
sbb
les
mov
imul
sub
pushf
ds
ljmp
push
leavew
cltd
scas
push
repz
mov
rcrl
mov
mov
cmp
jg
pop
sarb
lods
dec
js
lods
fwait
adc
imul
rcrb
cmpsl
sbb
push
mov
popf
jl
imul
js
pop
pushf
xor
push
ret
fs
inc
add
je
xchg
fistps
movsb
out
inc
inc
or
push
repz
xchg
sub
idivl
in
popa
mov
imul
push
fmulp
mulb
loope
andl
mov
cmpsl
mov
xchg
sub
jg
or
dec
fbld
aam
das
jnp
outsb
ret
outsl
adc
cmp
nop
mov
mov
dec
std
ror
cmc
outsl
mov
jle
mov
data16
cmp
dec
mov
jnp
or
inc
lea
push
cmp
iret
mov
cld
hlt
push
xchg
cmp
adc
mov
push
je
mov
cmp
inc
xor
gs
xchg
in
xlat
test
ljmp
jl
outsb
test
pop
mov
sub
jecxz
pop
adc
mov
sub
cmp
inc
jae
cmpsl
repnz
jo
push
mov
adc
aas
test
sbb
dec
stc
adc
adc
mov
out
cltd
in
movsl
push
push
test
fmul
cs
cmp
aaa
scas
cmp
mov
repnz
cmpsb
insb
orb
push
imul
ja
js
jmp
call
mov
das
js
push
in
mov
lea
cld
xlat
adc
jg
imul
mov
scas
push
lds
sahf
cld
pop
xchg
and
xchg
jnp
or
xchg
push
adc
xor
xor
jbe
adc
mov
out
fisubs
or
mov
add
outsb
pop
out
mov
sti
push
adc
movsb
lret
inc
pop
movb
ljmp
pusha
je,pt
cmp
icebp
test
shrb
jp
xlat
imul
and
push
je
jbe
add
loop
imul
pop
mov
lods
mov
cmp
or
test
fsub
add
xor
ja
out
pusha
jl
fidivs
in
shl
into
aam
mov
notb
dec
imul
lcall
sbb
hlt
pop
xorl
inc
nop
sub
xchg
inc
cmp
and
cwtl
mov
dec
lods
dec
mov
cli
dec
popa
pusha
cmc
mov
add
xchg
xchg
xchg
std
add
xchg
test
out
std
sti
push
sub
ret
std
xchg
push
push
or
into
xchg
adc
pop
stos
jo
xor
test
mov
test
cmp
cmp
roll
mov
inc
pop
lret
xchg
jmp
jns
mov
sub
jno
out
xchg
out
fildll
or
add
xor
je
mov
js
movb
ja
xorl
sbb
bound
mov
pop
and
add
cmp
push
mov
inc
je
or
or
or
aam
sub
sbbb
cmc
xor
push
cs
adc
pop
xchg
push
xor
inc
pop
aas
pop
das
sub
pop
dec
outsl
push
fidivs
daa
mov
das
inc
imul
nop
add
mov
sbb
mov
lock
js
mov
push
sbb
dec
xor
mov
enterw
mov
sbb
decl
mov
sub
iret
ljmp
cmp
sub
pop
and
jne,pt
push
pop
shll
cmp
inc
repz
pop
jle
iret
jmp
add
div
cmc
test
xor
jle
loope
adc
mov
xchg
dec
add
cmp
addr16
lret
xor
inc
cmpsb
pop
stos
sbb
cmpsb
int
add
fs
jb
inc
jne
test
enter
mov
jbe
pop
add
pop
sahf
push
add
pop
int3
outsb
in
dec
fcom
out
bound
mov
sahf
or
outsl
jmp
fcomp
fdivrs
shll
dec
xchg
pop
jbe
pop
mov
fwait
cltd
jbe
mov
pop
pop
aas
jecxz
stc
repz
pop
jg
push
clc
inc
out
nop
popa
mov
sarb
aam
jecxz
sbb
jne
pop
ds
and
addr16
mov
in
cmp
add
jg
xchg
pop
rolb
insb
cmp
add
jae
scas
xlat
mov
jbe
sti
and
seta
lods
mov
js
mov
sbbb
cmp
stos
das
aas
mov
popa
insl
dec
push
shl
xor
aas
xchg
xor
cmpl
loop
hlt
inc
fsubs
cwtl
iret
lcall
mov
mov
jmp
in
mov
mov
lea
inc
sbb
or
ljmp
cli
and
pop
inc
cltd
gs
push
mov
sub
or
clc
adc
xchg
mov
out
das
adc
or
inc
xchg
pusha
gs
out
scas
jecxz
sub
into
lret
push
inc
mov
push
cmp
sar
or
scas
inc
shll
lcall
jae
mov
mov
jle
mov
lret
or
add
js
dec
scas
mov
xlat
bound
dec
adc
sub
test
lea
push
mov
out
mov
and
ret
insb
sahf
adc
and
and
add
dec
shll
stos
push
xor
sbb
mov
aas
cmp
ret
movsl
stos
pusha
mov
push
xor
pop
iret
or
das
outsl
je
jns
lods
cld
pop
pop
test
adc
xor
js
lea
fstpt
imul
out
mov
cmp
or
add
adc
cmp
jl
inc
sbb
and
les
es
sub
pop
incl
pop
rorl
gs
jmp
popf
adc
mov
pop
xor
cmp
sahf
mov
ret
jge
insl
xchg
xlat
std
js
icebp
les
jp
sbb
inc
popa
xchg
test
push
stc
pop
mov
subb
adc
jl
jno
mov
lret
xchg
add
movd
push
cmp
int3
jns
cmpsl
mov
jl
nop
out
imul
push
decl
xor
lds
dec
xchg
pop
inc
push
mov
inc
xchg
int3
leave
pop
jns
xor
mov
xchg
jl
jns
imul
inc
std
jmp
sti
jnp
inc
jge
jno
cltd
mov
pop
inc
inc
and
and
test
adc
cwtl
stos
inc
dec
out
mov
mov
stos
sti
cmp
lods
bound
lock
xchg
mov
and
push
and
cwtl
fistpl
adc
sub
repz
cmp
push
jbe
out
inc
repnz
jge
lock
iret
xor
in
xchg
xchg
sahf
sbb
mov
js
add
and
in
mov
push
cli
in
jle
sahf
clc
jecxz
popa
dec
xor
and
adc
sub
popf
or
pop
dec
xchg
enter
pop
sbb
push
sbb
jl
jo
sub
imul
cmp
and
inc
shll
fwait
pop
pop
and
xor
out
jnp
dec
mov
stos
lods
or
pop
mov
inc
out
cmp
icebp
ret
int
movsl
int3
dec
lea
mov
loopne
and
in
and
lock
lret
and
imul
jo
rcrb
ljmp
or
mov
lds
and
nop
xchg
sahf
sbb
test
add
mov
jbe
in
es
fnstenv
add
ror
test
inc
push
jnp
push
aas
sub
add
lock
pop
sub
popf
repnz
sarb
and
cmpsl
mov
sbb
dec
xor
outsl
mov
cmpsl
sbb
add
std
jecxz
in
sub
push
filds
mov
je
dec
loope
clc
xor
jg
daa
dec
testl
mov
jge
in
scas
inc
sbb
bnd
cmp
fldcw
dec
xchg
sahf
inc
jp
jo
cli
jle
pushf
pop
inc
adc
fimull
les
mov
test
mov
clc
nop
mov
fwait
std
sub
jnp
out
inc
fldcw
ljmp
ljmp
repnz
orl
add
or
mov
mov
sub
fsubrs
xchg
cmp
and
push
daa
mov
fld1
fisubl
das
fcom
xchg
pop
xor
adc
out
aam
adc
cwtl
and
shll
pushf
cli
dec
in
in
xlat
iret
ret
add
inc
push
xchg
mov
nop
sbb
cmpsb
aad
cmpsl
imul
jmp
mov
lock
fidivs
xchg
call
pop
rorb
mov
lcall
lahf
sbb
jle
push
cli
popa
jle
inc
xor
lret
adc
push
inc
xchg
rorl
scas
mov
sub
sbb
mov
rorb
mov
inc
xlat
cmp
mov
hlt
sbb
aas
aam
lds
push
push
xor
aad
dec
inc
mov
sahf
mov
inc
mov
in
push
clc
mov
xchg
f2xm1
dec
testl
jmp
rol
sub
dec
xlat
fmull
test
fistpl
xchg
sbb
insl
fdivl
dec
cmc
add
jp
jle
cmpsb
xor
or
mov
add
pop
in
and
sub
jl
aas
dec
pushf
out
lahf
jg
push
xor
mov
in
pusha
dec
mov
sbb
dec
imul
loop
push
lret
enter
pop
push
sbb
jb
lcall
xchg
xor
inc
shr
mov
repz
addr16
mov
imul
lds
pop
push
paddb
js
xorb
push
xor
jp
xchg
sub
scas
or
popa
xchg
mov
dec
lods
cmp
jg
sub
fidivl
imul
mov
cmp
mov
imul
mov
idivl
iret
push
repnz
pop
pop
sbb
mov
push
outsl
mov
call
push
arpl
mov
jle,pt
cmpsb
rorl
std
mov
sti
mov
sbb
xchg
mov
arpl
int
jo
ja
rorl
xor
or
xlat
into
int3
aaa
shrb
subl
jge
gs
mov
sbb
das
xchg
dec
cmp
pop
xchg
adc
insl
sub
jmp
enter
or
mov
out
mov
cmp
cli
clc
mov
aaa
xor
mov
jmp
or
or
in
cmp
adc
in
ret
enter
push
inc
cmp
dec
adc
clc
pop
sub
cltd
loop
pop
cmp
or
out
lahf
add
mov
mov
lods
xor
mov
or
aad
lahf
into
cmpsb
mov
subb
mov
mov
hlt
inc
xchg
or
negb
lds
inc
js
movsb
pop
jb
adc
xchg
das
movsb
xchg
gs
repz
es
adc
in
mov
xchg
xchg
xor
loopne
push
and
add
int3
imul
pop
dec
ja
lret
ljmp
sahf
out
hlt
je
out
and
sbb
sbb
mov
jo
xchg
pop
shlw
pop
xchg
or
dec
loope
push
and
adc
ds
popf
data16
fnstsw
xchg
jp
sti
mov
gs
testb
inc
lds
mov
rcrb
jno
and
jbe
adc
xlat
cmp
adc
lock
inc
es
cld
cmc
and
inc
cmp
jb
fisubs
inc
cmp
pop
ret
dec
testl
xchg
lods
cmp
push
idivl
in
mov
call
out
xchg
pop
inc
sub
outsl
outsl
sub
movsl
aam
fwait
lahf
pop
xchg
outsl
in
adc
sub
lea
ret
fs
arpl
lahf
jb
cmp
pop
and
adcl
div
fucom
int
inc
pop
outsl
push
pop
add
pusha
mov
ffree
movsl
adc
xchg
dec
inc
mov
jmp
into
imul
imul
mov
pop
mulb
mov
call
imul
bound
je
or
fildl
lret
cs
cmp
out
repz
shlb
mov
mov
dec
dec
mov
dec
scas
mov
sub
push
xchg
ret
mov
loop
imul
and
inc
fldenv
sahf
lock
dec
das
scas
das
in
push
xchg
lds
mov
sub
and
jnp
pop
sub
jno
nop
pop
add
movsl
sbb
mov
loop
jo
push
mov
pop
adc
mov
lahf
pop
dec
jl
in
mov
ss
into
popa
pop
adc
roll
cltd
push
sbb
mov
and
push
inc
aaa
jb
dec
decl
mov
daa
scas
and
adc
je
push
dec
xchg
lea
sbb
popa
sub
mov
mov
sahf
ds
xlat
dec
into
fcomps
imul
out
mov
xlat
lods
pop
fisttpll
loopne
push
sbb
into
dec
outsb
dec
add
mov
out
fisubrl
add
jmp
sub
jno
fsubrs
adc
popf
dec
push
rcll
ja
outsb
sbb
push
jmp
jns
dec
stos
es
cmpsl
xlat
mov
xchg
xchg
ss
push
adc
mov
les
fldl
add
adc
sub
jbe
loopne
mov
dec
in
jne
sbb
push
movsl
pop
inc
xchg
scas
imul
dec
jno
add
insl
sbb
stos
and
mov
dec
outsl
scas
push
push
jle
pop
sbb
out
ss
or
lds
mov
xchg
sub
mov
addr16
push
mov
or
xlat
inc
cmovl
fldcw
aaa
jl
xor
mov
leave
sub
jbe
dec
arpl
pop
dec
jae
xlat
mov
mov
lret
addl
sbb
mov
ss
sbb
add
mov
xchg
cmp
jae
add
push
int3
jno
neg
or
xor
adc
fwait
cmpb
dec
jmp
jg
lea
jmp
push
mull
jb
inc
xor
popf
pop
xchg
and
bound
mov
test
sub
sahf
push
std
bound
cli
sbb
xchg
mov
test
lock
xchg
mov
cmpl
test
loop
into
ffree
fstpt
popf
ja
push
fdivrl
incl
mov
jmp
repz
fs
pop
push
lods
fwait
xchg
jns
das
and
jmp
mov
add
pop
std
cmpsb
aas
test
or
ljmp
sahf
cld
jmp
xor
ror
shrl
xor
mov
rclb
sahf
xor
imul
jae
in
aaa
sub
lcall
or
pop
push
outsl
stos
lret
inc
xchg
dec
inc
in
ficoms
outsl
jp
add
test
call
fisttpl
adc
xchg
sbb
fsubrs
mov
or
and
jl
repnz
movsb
mov
sbb
cmp
sbb
fs
xchg
shlb
sbb
lret
mov
imul
xor
mov
and
movsl
xchg
mov
rorl
decl
ror
sbbl
dec
out
push
adc
dec
sbb
nop
xchg
mov
mov
jns
fdivl
test
pop
inc
push
sub
inc
mov
lret
popa
loop
mov
jp
lret
jno
mov
add
mov
int3
cmpsl
in
and
and
add
test
test
into
sub
mov
cmp
jnp
clc
scas
data16
or
fnstenv
mov
stc
jl
sub
inc
mov
cltd
enter
out
cltd
rclb
test
inc
pop
sbb
xchg
xchg
in
sbb
loope
loope
inc
cli
pushf
inc
adc
lods
jb
and
xchg
movsb
pusha
in
sbb
dec
xchg
xlat
or
mov
jmp
sub
lock
and
add
sbb
stos
jo
jo
push
sub
js
lds
add
sub
pop
fmuls
xchg
xchg
push
push
pop
sbb
lea
std
sahf
pop
sbb
clc
xchg
sub
in
inc
rorb
hlt
add
jecxz
mov
stos
push
dec
sahf
int3
loope
out
bnd
lods
setb
scas
ja
xchg
mov
sub
pop
sbb
adc
push
test
sub
push
cmp
gs
cld
fdivrl
rcll
sbb
int3
adc
std
mov
push
shr
ret
jp
add
pop
xchg
mov
inc
mov
test
cmp
or
push
test
adc
rorb
out
rcll
enter
dec
cmp
in
and
inc
stc
push
out
sub
fstl
gs
dec
loopne
inc
int
inc
nop
mov
movhps
adc
int3
xor
clc
mov
push
push
jb
aam
add
xlat
mov
inc
ret
fbstp
adc
lock
xchg
mov
in
cmpsl
pop
or
shlb
and
mov
inc
sahf
cltd
repz
js
ja
xchg
jae
mov
xchg
mov
xchg
mov
xorb
mov
xchg
ret
inc
jecxz
inc
xor
xor
pop
loopne
sbb
popa
gs
cmp
sub
fcoms
fcompl
xor
xchg
or
xor
and
mov
jb
mov
jmp
jle
dec
push
mov
loop
addl
gs
cmp
and
inc
sub
pop
ret
jp
movb
mov
popa
jg
add
xchg
test
imul
call
inc
push
cmpsl
mov
jns
cmp
fidivrs
xchg
pop
xor
insl
adc
pop
pop
and
popa
or
mov
mov
stc
data16
fidivs
fiaddl
imul
pop
bound
cmp
aam
pop
dec
out
push
add
pop
sahf
fsts
cltd
or
aaa
movsl
pop
adc
repnz
cli
orb
outsl
sbb
cmpsl
in
pop
pop
das
add
xlat
ficomps
sahf
jns
scas
lcall
mov
fdiv
jns
fdivs
jae
lods
dec
xchg
push
hlt
cwtl
lods
pop
jae
pop
fcmovne
aam
cld
jle
mov
or
out
adc
lods
mov
push
rorl
sarl
lea
insl
adc
inc
sbb
xor
inc
nop
aam
pop
cmp
cs
ja
loop
fldcw
in
jo
cli
xchg
mov
aad
lods
out
add
std
adc
notl
std
sub
dec
aaa
lret
cli
ljmp
dec
and
gs
add
movl
xlat
cmp
jbe
xor
lods
xchg
push
pushl
xchg
stos
and
push
cli
mov
jl
ss
bswap
rcll
ljmp
dec
jecxz
int3
jno
movsl
mov
imul
xchg
mul
adc
adc
pop
push
test
out
pop
mov
push
xchg
push
jns
sbb
out
lods
adc
dec
sub
int3
mov
adc
mov
adc
pop
ret
rol
mov
out
mov
addr16
pop
fnstcw
dec
cmpb
sbb
stos
pop
mov
ds
test
pop
pop
cld
popf
push
mov
inc
push
rorb
test
fsub
test
stos
mov
add
cmc
pop
sbb
lods
movsb
dec
repnz
int
fwait
bnd
lds
out
adc
cmc
imul
push
xchg
dec
movsb
and
stc
mov
push
pop
loop
cld
jnp
lock
clc
cli
lock
xlat
xchg
cmpsb
enter
mov
in
arpl
dec
mov
jnp
add
sub
mov
adc
neg
dec
insl
and
and
push
fs
push
inc
ret
xor
pavgb
and
pop
or
sbb
clc
dec
xor
dec
lds
mov
add
repz
push
cmp
cwtl
es
mov
lcall
cmc
push
or
repnz
push
jecxz
out
adc
sbb
fnsave
push
sahf
xchg
mov
jns
cmp
mov
sub
push
add
adc
mov
cwtl
ret
test
sub
cltd
lds
pop
push
dec
leave
into
xchg
lcall
lods
aam
ss
or
or
sbb
fmulp
negb
mov
lret
mov
cli
and
dec
mov
push
mov
xor
xchg
pop
or
out
and
insl
pop
push
xchg
int3
mov
dec
xor
fwait
test
sub
vminsd
sbb
in
jle
or
repz
enter
sub
lret
cmpsl
in
cltd
jno
xchg
loopne
cli
mov
addr16
xor
ds
pxor
cs
notb
imul
or
push
popa
xor
shlb
add
cld
lea
push
roll
out
cmp
xor
call
mov
aaa
in
adc
sub
clc
sarb
arpl
cld
in
and
mov
into
popa
pop
sahf
jns
dec
addr16
popf
outsl
clc
xchg
out
cmc
sbb
fildll
scas
fcoml
int
cmp
xor
mov
push
cmp
xchg
xor
jnp
or
cmp
mov
insb
jbe
mov
iret
xchg
mov
cmp
imul
push
bound
aam
or
or
xchg
mov
cmpsl
mov
jl
jg
popf
pop
jmp
add
scas
mov
aam
cmpsb
out
adc
sub
cmp
jb
stos
xor
stc
mov
sbbb
mov
adcl
shl
xor
movsl
cmp
out
movsb
cmpsl
mov
je
or
adc
jb
sub
mov
dec
push
shll
aaa
dec
xor
iret
ss
je
in
popf
stos
and
jecxz
repnz
cltd
xchg
mov
pop
jns
or
ror
mov
popf
cli
adc
cs
xchg
daa
ljmp
or
movsb
stos
mov
adc
jnp
push
dec
adc
xor
push
sub
jb
sbb
xchg
mov
or
rcrb
decl
lock
fwait
int
stos
sub
punpckhwd
mov
fs
xor
incb
pop
jne
pop
lods
hlt
subl
add
dec
lret
pop
sti
repnz
xor
push
mov
and
pop
fists
and
bound
inc
xlat
fs
xor
dec
rcl
sarl
lds
lcall
pushf
mov
pop
dec
test
jmp
mov
adc
out
cwtl
or
fnstsw
mov
sub
movb
daa
push
sbb
orl
repnz
pop
push
mov
adc
out
mov
or
cmpsb
pop
pushl
add
push
add
xchg
mov
push
std
movsb
xchg
pop
aaa
cltd
inc
pop
or
and
jp
adc
jl
sahf
lret
repnz
push
jo
pop
pop
in
fcom
sbb
sarb
jl
insb
shrl
xchg
inc
mov
xchg
mov
mov
inc
mov
cmpsl
jge
shr
movsb
jns
sbb
shrl
mov
cmp
cmp
data16
or
cli
jl
out
int
int3
or
mov
les
xchg
xor
fmull
fnstsw
mov
sarb
push
pop
xor
je
and
sbb
mov
lahf
loope
popf
sbb
in
jecxz
leave
ret
stos
stos
jnp
dec
or
stc
add
sub
aas
add
pop
jae
aad
xchg
or
xchg
sub
movl
pop
test
mov
lahf
std
mov
int3
mov
and
dec
cld
icebp
ficomps
int
dec
push
loope
insl
mov
jns
sub
outsl
outsl
je
dec
cmpsl
sub
mov
add
cmp
add
mov
push
test
in
adcb
cmp
dec
cmp
push
test
outsb
out
loope
sub
jge
inc
pop
mov
outsb
dec
mov
push
lahf
mov
xchg
ja
mov
pop
ss
mov
sbb
shl
int
mov
out
aam
pop
aas
xchg
icebp
mov
xchg
aam
dec
jmp
mov
cwtl
xlat
jae
dec
arpl
sbb
out
mov
sti
dec
into
or
and
pop
dec
hlt
sub
rcrb
into
push
sub
mov
out
xchg
int3
aam
inc
fidivs
les
lock
int
sub
xor
call
fcmovu
dec
mov
adc
mov
sbb
shll
jge
mov
test
insl
mov
test
sub
pop
add
out
dec
cli
gs
hlt
mov
adc
arpl
or
pushf
dec
lds
xor
fwait
mov
cmc
mov
dec
gs
xchg
nop
rorb
incb
cmc
xor
xorb
inc
sbb
push
push
mov
cmp
cld
cmp
gs
test
lret
ja
test
repz
dec
add
divl
scas
ja
inc
int
enter
jns
out
adc
jp
and
in
cmpsb
and
xchg
add
sub
xor
jg
and
insl
mov
loopne
cmp
clc
sub
call
mov
shl
mov
out
mov
mov
pop
cmpsb
pop
out
dec
add
sarl
xor
jne
adc
cmpsl
faddl
adc
xlat
mov
pop
cmp
sbb
pop
std
inc
sar
jecxz
mov
fcmovb
mov
lock
f2xm1
xchg
data16
jg
pop
adc
cwtl
shrb
adc
push
jg
sub
aas
inc
mov
out
rolb
or
jecxz
xlat
cmp
pop
inc
jnp
lcall
bound
in
lods
adc
in
cmp
roll
lods
fstpt
daa
xor
pop
out
inc
dec
outsl
imul
hlt
mov
cs
popf
test
and
xor
mov
icebp
loop
aam
jb
jae
adc
jns
icebp
sub
or
jg
xor
pop
pop
or
jae
and
pushf
mov
add
movsb
shlb
ret
in
pop
cltd
pop
jb
gs
lea
xor
cmp
adcl
sbb
dec
cmc
sub
inc
push
in
rcrl
inc
sbbl
fcompl
jbe
xchg
in
insl
mov
and
pop
mov
int3
outsb
sbb
out
xchg
inc
add
daa
les
jge
xchg
inc
mov
push
lea
mov
xor
pop
addr16
and
sub
jge
cmp
in
fbstp
mov
outsb
cltd
adc
ja
shrl
jnp
pusha
and
es
popf
shrl
inc
test
xchg
pop
mov
std
push
enter
out
loopne
inc
and
push
test
sub
pop
xchg
cld
mov
arpl
add
inc
adc
aas
xchg
test
lret
and
movsl
xchg
inc
push
xchg
pop
mov
dec
mov
pop
dec
add
loop
xor
push
mov
sbb
xor
fldl
sbb
mov
popa
cmpsl
mov
les
fstl
lods
rcr
sbb
lret
enter
mov
aas
mov
sbb
inc
push
popf
shrl
gs
push
rol
jno
jecxz
mov
pop
pop
or
mov
mov
fsts
enter
out
imul
dec
push
xchg
shrb
xchg
es
dec
sbb
out
popa
andl
pop
outsb
mov
dec
sar
sub
push
xchg
sbb
dec
in
mov
subl
mov
pop
push
mov
in
push
lds
mov
loopne
jns
pop
xchg
pop
inc
adc
jge
adc
leave
nop
pop
jo
lds
sbb
and
xchg
mov
and
push
cltd
aad
or
push
out
in
cwtl
hlt
vmread
push
inc
dec
jge
xchg
out
lds
push
and
test
fisubl
mov
lahf
test
lea
imul
gs
imul
mov
ljmp
jbe
lds
pop
cmp
shll
mov
and
fwait
jo
lcall
mov
lret
mov
test
sub
mov
std
stos
or
add
adc
jbe
aad
cli
cmp
and
popf
das
mov
cmp
cs
cmpsb
dec
in
add
xchg
mov
jns
stc
in
push
test
fstpt
or
mov
sub
imul
scas
jp
loopne
cli
push
jae
mov
fisubrl
mov
mov
xor
pop
lcall
stos
push
roll
jmp
sbb
sub
jne
mov
call
pop
test
ror
xorl
pop
mov
cmp
adc
xchg
sbb
gs
lahf
out
jg
push
push
xor
mov
mov
lret
or
mov
sahf
sbb
push
push
xorb
popf
subb
mov
mov
xchg
mov
mov
icebp
push
hlt
dec
add
icebp
popa
or
out
mov
xor
mov
movsb
inc
and
dec
add
arpl
adc
addr16
jecxz
or
inc
js
fbld
sbb
sub
mov
push
insb
cmpl
mov
cmc
pushf
push
out
pushf
jns
cltd
pushf
jbe
dec
imull
gs
int3
pop
data16
lret
es
sub
shll
sub
in
testb
lahf
test
pop
imulb
lret
repnz
sub
lcall
out
mov
rol
or
pop
loop
repnz
in
or
movsl
test
mov
or
mov
adc
pop
cmp
adc
cmp
lahf
adc
pop
jle
in
div
rcrl
push
inc
sahf
pusha
fdivrp
mov
jmp
inc
or
insl
scas
inc
fwait
fwait
enter
addr16
arpl
add
shll
rorb
or
pop
sbb
xchg
mov
flds
adc
jns
dec
push
jge
mov
jne
lret
pop
testl
push
outsb
dec
cmp
mov
sub
cmp
xchg
cmp
ficomps
or
pop
inc
jne
adc
inc
shrl
jnp
inc
loope
sti
add
push
sbb
lock
pop
pop
sub
and
fnstenv
jge
out
das
mov
push
dec
test
idiv
popa
imul
cmpsl
push
adc
sub
ret
jb
mov
scas
push
adc
dec
rorl
push
dec
sub
test
call
lods
bound
dec
fildl
mov
cmp
jo
pop
or
mov
movsl
mov
std
test
ja
or
mov
jmp
nop
scas
icebp
or
mov
inc
or
les
cmp
xor
and
bound
nop
mov
ss
in
push
xchg
lahf
cmc
sar
jmp
mov
and
call
and
mov
aaa
lahf
lds
dec
sbb
jne
hlt
aad
and
inc
inc
dec
ficoms
mov
std
mov
add
sbb
xchg
mov
sar
out
push
jmp
out
dec
sub
and
pushf
jl
push
inc
iret
stos
cmc
cwtl
loope
sub
add
cmp
push
mov
xchg
inc
or
je
jg
push
and
adc
xchg
and
xor
pop
or
mov
mov
jns
jl
loopne
out
rcl
jnp
fiaddl
aaa
outsb
int3
or
ficompl
dec
fisubl
shl
adc
push
out
pop
cmp
adc
fdivl
movsb
pop
test
loope
loopne
add
xor
test
inc
cmp
gs
mov
jg
dec
enter
fidivrs
fwait
add
sbb
xor
jmp
ficoms
or
mov
sar
mov
jp
pop
mov
jns
push
push
andb
cmp
imul
push
sbb
aas
or
and
fstpt
push
xchg
and
sbb
or
cmp
mov
enter
sar
cmpsb
sbb
jge
add
repnz
hlt
mov
inc
cmp
lahf
add
fcmovb
add
loop
int3
roll
mov
push
pushf
sbb
into
and
sub
repz
test
fwait
int
push
or
push
or
in
jmp
int
mov
mov
clc
push
dec
jb
and
cmp
mov
adc
sti
push
sahf
and
pop
and
mov
lret
testl
xchg
mov
cwtl
add
ret
xor
mov
je
mov
bnd
or
xlat
cmp
ja
jecxz
pop
xchg
push
pop
scas
adcb
push
mov
test
inc
bound
in
xchg
add
mov
dec
push
lock
rcrl
push
loop
adc
ret
repz
hlt
adc
sub
clc
sub
fisubrl
and
mov
and
pop
mov
stos
outsb
fmuls
sarb
adc
jae
cmp
sub
rolb
ljmp
pop
or
inc
sbb
mov
pop
lahf
mov
imul
shr
paddq
pop
loop
mov
stos
mov
cmp
mov
jge
jno
mov
mov
or
std
cmp
imul
shrb
xchg
mov
fdivrl
repnz
movb
mov
jl
insl
dec
jo
push
xchg
cmp
mov
mov
jnp
inc
movsb
jl
and
inc
imul
sub
daa
ljmp
or
ffree
sbb
xor
jnp
sub
fadds
lods
adc
stos
rcll
lahf
ret
ret
xchg
jecxz
fists
rcrb
test
outsl
fisubrl
mov
frstor
dec
dec
lock
jmp
aas
add
enter
push
test
popf
or
inc
out
or
mov
mov
in
inc
add
in
and
sbb
inc
insb
les
in
lods
inc
push
add
cmp
add
xchg
cmp
inc
gs
xchg
aaa
je
jne
fadds
push
fsts
lods
cmp
sub
pop
lods
out
dec
or
pop
jle
fdivl
sbb
push
movsb
inc
pop
mov
lods
shrl
dec
insb
jne
fstl
lcall
out
insb
add
or
cmpsb
ret
mov
fdivrs
aas
cmp
pushw
dec
add
subb
rcll
stos
xchg
call
je
push
lcall
push
or
dec
lcall
adc
leave
and
stos
jmp
or
mov
movsb
ljmp
dec
push
lret
mov
adc
mov
loope
sub
cltd
jo
pop
stos
pop
xchg
nop
xor
dec
mov
in
jle
mov
insl
aad
lods
fildll
mov
jmp
cmpl
lock
leave
dec
lret
xor
mov
daa
repz
cld
push
inc
sbb
pop
fsubrl
sar
pop
out
inc
mov
scas
xor
adc
lds
mov
inc
enter
mov
bound
into
xchg
stos
push
pushf
fninit
jo
outsl
aas
adc
sahf
xchg
rcrl
sbb
push
in
es
mov
movsb
or
xchg
daa
in
loope
cs
call
inc
add
push
dec
hlt
xor
xchg
adc
cmpsb
insb
dec
cli
mov
lcall
mov
out
cmpsb
sub
loope
xchg
pop
xchg
ja
les
icebp
and
push
jnp
cmp
stos
xchg
push
mov
sub
mov
negl
jmp
in
jge
mov
push
fs
insb
cld
pop
lret
stos
sub
adc
bound
and
jmp
stc
fcompl
in
adc
test
cltd
push
push
jle
outsb
pop
pusha
movsl
cmp
jecxz
iret
mov
mov
aad
pushf
or
adc
mov
cmp
punpckldq
sub
jmp
or
xchg
outsl
out
nop
outsb
mov
js
imul
out
movsb
in
jmp
lods
fsubr
popf
pop
nop
movsl
jmp
push
xor
stc
jg
and
movsb
sti
and
pop
jbe
push
push
insb
mov
xor
imul
xor
call
and
movsb
imul
and
scas
dec
xchg
out
sbb
out
jmp
stc
or
xchg
sbb
ja
movsl
inc
adc
stos
loope
mov
dec
jns
movsl
and
push
leave
inc
xor
add
mov
std
push
mov
leave
in
sahf
inc
jg
jb
cmp
call
mov
cmp
loope
push
imul
in
xchg
jns
xchg
jecxz
pop
outsl
sbb
lds
call
repz
mov
lret
mov
shll
jne
and
push
add
insb
hlt
push
mov
cli
push
imul
add
sbb
mov
dec
iret
mov
xor
add
or
mov
mov
ret
mov
sbb
fidivrs
das
mov
iret
jne
mov
fists
aas
sbb
adc
std
pop
sahf
popf
mov
push
pusha
test
repnz
sbb
and
mov
loop
inc
pop
test
jae
ljmp
lock
and
jle
divl
mov
pop
sub
leave
mov
int
pop
push
enter
add
je
les
or
xor
sub
leave
push
sbb
push
adc
insl
xchg
sub
aaa
pop
rcr
aad
and
fmuls
push
xor
gs
push
lock
pop
mov
cltd
sub
push
ljmp
idivl
mov
call
and
shll
mov
adc
sti
in
les
cld
aam
sub
jmp
in
imul
loope
inc
ljmp
push
into
add
incb
sub
adc
push
mov
mov
xor
sub
mov
je
lcall
pop
pop
gs
inc
mov
jmp
sbb
dec
mov
fwait
test
sub
adc
arpl
pop
push
or
shl
push
sub
mov
add
dec
cmp
jno
xchg
pop
mov
scas
fdivs
pop
xchg
popf
and
sbb
mov
xchg
dec
out
mov
and
push
out
ds
icebp
repz
xchg
cwtl
int3
ror
push
xorb
lock
in
xchg
sub
outsb
scas
ficompl
incb
out
mov
mov
jmp
stc
mov
xchg
adc
int3
movhps
out
and
and
inc
mov
sbb
mov
lods
roll
sarb
imul
pushf
cwtl
jg
loopne
shll
sbb
movsl
fidivl
push
jnp
jmp
push
out
lcall
add
popa
mov
add
pop
fsts
cmovb
out
mov
scas
jecxz
loop
inc
jae
lods
lock
sbb
push
cmp
inc
cmpb
mov
fstps
les
mov
sub
jg
cmp
adc
xchg
push
cmp
cmpsb
pop
push
popl
adc
mov
movsb
fwait
out
or
push
insl
mov
mov
cs
scas
outsb
lahf
lcall
mov
adc
iret
dec
or
sarb
cmp
push
jno
dec
inc
pop
push
inc
js
inc
repnz
fisubrl
sbb
in
dec
sbb
nop
xchg
jge
mov
sbb
pop
and
mov
or
xchg
faddp
fisttpll
call
rolb
xor
adc
adc
inc
dec
das
scas
or
stos
sti
js
xlat
or
mov
and
lods
dec
mov
iret
notb
sbb
test
xchg
fidivrl
dec
pop
insb
mov
cmc
int3
arpl
scas
mov
sub
xchg
ret
arpl
mov
sub
ret
dec
lahf
sti
cli
xchg
mov
sbb
fnstsw
int3
imul
out
cmp
rcrl
rorl
xchg
sub
pop
int
mov
xor
xor
mov
cli
test
push
xor
subl
mov
sahf
enter
push
loope
inc
ss
in
sub
jmp
aaa
sbbl
and
dec
sub
in
cli
xchg
out
ljmp
imul
scas
and
xchg
lds
jl
dec
xchg
jne
andb
pop
pop
sti
mov
cmp
xorl
push
gs
sbb
lods
mov
lods
jno
addr16
daa
scas
mov
aad
stos
mov
pop
sub
test
cmpsb
fisttpll
xchg
fs
outsl
lahf
fisttpll
or
xchg
xor
dec
mov
inc
cmp
test
sub
daa
leave
xor
bound
mov
sbb
push
out
arpl
pop
pop
mov
call
testb
in
fldt
jl
outsl
mov
mov
insl
loope
movsb
xchg
push
cmp
and
and
dec
js
pop
sub
mov
mov
stos
cmp
sbbl
lods
clc
arpl
lret
lods
popa
das
rorl
imul
push
jb
inc
sub
pushf
dec
cltd
inc
fld
mov
stos
xchg
and
scas
cld
loopne
and
sub
clc
movsl
pop
pop
stos
sub
jmp
iret
movsl
xor
jg
cmpsl
and
adc
pop
add
and
inc
icebp
mov
aaa
push
and
imulb
sbb
inc
dec
dec
dec
mov
std
test
mov
xor
jmp
int
sahf
movsb
add
pop
int3
iretw
sub
jecxz
sub
mov
jmp
cmpsl
andl
jecxz
push
mov
sub
js
or
stc
cltd
adc
iret
hlt
loope
adcl
push
mov
jnp
sahf
je
cmp
push
cmc
jl
inc
out
gs
mov
adc
pop
jns
and
xchg
loopne
call
jle
sbb
repnz
push
add
les
dec
xor
jle
adc
jb
xor
bound
out
sbbb
inc
lahf
addr16
cmp
xchg
addr16
mov
pop
add
sub
pop
int
stos
mov
incl
or
push
fisubrl
cli
xchg
stos
aam
xchg
lret
sub
push
sub
push
or
lea
and
stc
andl
mov
adc
sbb
or
sbb
dec
xor
push
pop
jae
mov
jmp
pop
or
std
cld
push
hlt
insb
arpl
cmc
stc
xchg
xchg
mov
adc
loopne
test
mov
and
mov
dec
fistps
pop
xor
sahf
jl
mov
sub
push
mov
cmp
in
repz
int3
idivb
arpl
xchg
push
pop
ja
jg
incl
sub
push
mov
and
mov
add
stos
fdivrs
in
cmpsl
add
int
push
in
xchg
repnz
cmp
icebp
out
cmp
jo
lods
add
pusha
data16
jmp
mov
cmp
jno
pop
js
outsl
les
hlt
in
sbb
or
dec
div
mov
int3
cmp
jp
dec
iret
jae
cmp
jmp
rcll
dec
loope
in
xor
data16
cli
mov
insb
mov
shll
andb
lret
jbe
cmp
add
das
or
popa
sbb
mov
dec
xchg
je
je
adc
repnz
xor
add
stos
rclb
dec
and
and
xchg
mov
loope
sbb
and
mov
or
pop
cmpsl
aam
enter
dec
lahf
lods
je,pn
iret
ret
add
jo
enter
pop
xlat
sub
or
rol
rorb
lds
iret
lcall
ret
mov
cmpsb
movsl
or
in
outsb
and
stc
rcrb
fisubrs
insl
movl
jle
ret
push
mov
add
gs
dec
or
dec
imul
les
test
dec
pop
jle
lods
in
data16
sbb
inc
xor
das
in
mov
movsl
jge
scas
mov
addr16
mov
popf
outsl
ljmp
decb
lea
ret
and
pusha
outsl
stc
mov
ja
and
jno
outsl
pop
push
mov
push
sub
jo
stos
ljmp
aad
in
mov
or
scas
pop
out
pop
adc
jno
test
lret
popf
orl
sub
sahf
inc
pop
andl
cli
push
mov
popa
sub
sub
inc
or
fs
sbb
and
cmpsb
in
mov
sahf
dec
fwait
scas
push
inc
pushf
xchg
lcall
jmp
xchg
add
lods
xchg
fcomi
andnps
in
fldenv
scas
sar
push
mov
mov
cmpsl
mov
das
push
dec
and
stos
sbb
nop
inc
cmp
pop
push
and
pop
xchg
mov
xor
pop
adc
pop
popf
stos
cmpsl
out
add
xchg
pop
sbb
add
shrb
jg
test
imul
movsb
push
incb
in
cmpsb
sub
cltd
imul
inc
inc
inc
popf
jns
fcoml
out
popa
in
cltd
movsb
shrl
pop
adc
int
mov
jmp
sub
lahf
inc
jb
ss
in
xlat
adc
fistpll
popf
mov
sti
mov
jns
pop
push
aam
shlb
iret
adc
jne
pop
mov
pushf
icebp
out
bnd
negl
popf
push
jecxz
sbb
lret
dec
sbb
lds
xchg
fistpl
mov
enter
incl
push
lahf
and
or
lods
mov
or
add
push
shll
fimuls
xchg
popa
push
loop
pop
dec
pop
jns
add
jle
cmp
fidivl
or
loop
push
dec
movsl
and
cmp
pop
add
add
xchg
xchg
cs
in
aad
mov
jb
mov
jl
inc
add
ret
push
jo
mov
int3
pop
ret
cmc
in
adc
outsb
push
mov
mov
sbbl
idivl
shrl
cmc
pop
sbbb
rcl
cmpsl
push
lcall
out
xor
jmp
adc
mov
add
das
push
dec
inc
push
xor
add
fwait
mov
rcll
cmp
iret
aas
sbb
fdivrs
mov
inc
jg
stc
push
outsb
movsl
cmpsl
mov
xor
jg
stos
daa
or
push
or
mulps
xchg
arpl
jp
in
rclb
fistps
nop
rclb
jmp
lock
stos
pushf
pop
pushf
jno
xor
adc
fdivrl
ljmpw
pop
jmp
dec
pop
out
rclb
sub
xchg
xchg
dec
ljmp
jnp
lret
ret
scas
out
andl
cmp
leave
lahf
nop
ret
mov
jle
or
mov
jp
stos
aaa
mov
inc
xor
fidivrs
inc
mov
cmp
xchg
dec
or
mov
jnp
adc
pop
push
nop
les
aam
loope
and
mov
iret
lock
in
mov
scas
fnsave
negb
mov
pushl
mov
fisubs
loope
into
push
add
mov
testl
xorb
cmc
xor
sub
xrelease
iret
sbb
ja
cmpl
inc
int
mov
stos
sbb
inc
sbb
lock
test
je
and
sub
roll
in
cmc
shll
inc
pushf
push
shll
mov
push
out
ret
fdivrp
into
ret
lods
pop
jmp
loop
out
nop
cmc
adc
fadd
pop
mov
insb
daa
sbb
loop
inc
sbb
dec
dec
push
mov
pusha
sub
xchg
test
aam
jbe
addl
inc
jle
pop
mov
mov
dec
fcmovnb
jb
movsl
pop
pop
push
jns
adc
leave
shrl
and
push
mov
sbb
push
cli
arpl
rcl
int3
cmp
mov
mov
lods
fcomps
scas
add
scas
test
test
daa
push
js
std
fisubrs
bound
inc
shr
nop
inc
and
in
faddl
loope
adc
jmp
rcrb
mov
in
adc
mov
icebp
xchg
int
mov
adc
dec
pop
dec
or
mov
push
mov
and
inc
dec
rclb
mov
daa
jge
push
mov
or
pusha
int
pop
dec
scas
sbb
pop
mov
mov
lods
aam
outsb
mov
or
lcall
inc
cmpsl
enter
in
add
inc
fbld
push
sub
cmp
xchg
mov
ljmp
jnp
xor
and
mov
push
mov
data16
loopne
cmpl
mov
push
ret
xor
repz
cmp
aad
outsl
shll
add
adc
sahf
inc
pop
imul
cmpsb
xor
jno
mov
jecxz
into
clc
add
add
jl
cli
add
pop
pushf
pusha
andb
lock
js
xchg
and
shll
out
jge
dec
into
cmp
mov
inc
push
ja
cli
js
lds
mov
rcll
cmp
fdivrl
push
xchg
addl
xor
or
xchg
jb
jb
iret
xor
lods
inc
movsl
xchg
adc
jp
or
shlb
pop
mov
or
rsm
push
inc
aas
mov
push
scas
adc
pop
sub
pop
mov
movsb
mov
dec
jno
test
xchg
add
sub
mov
mov
pop
pop
rclb
or
jns
jmp
inc
push
pop
pop
dec
js
test
cmp
js
repnz
ljmp
adc
jb
sbb
leave
add
in
xchg
mov
mov
adcb
dec
add
stos
mov
mov
insb
cltd
xchg
inc
lret
aam
movsl
out
jns
jbe
inc
sbb
scas
mov
cmp
add
mov
and
xchg
icebp
adc
mov
lods
stos
dec
sub
mov
mov
rcrb
pop
dec
jbe
adc
iret
adc
cs
inc
pushf
add
into
xor
fidivs
or
pop
and
dec
jp
shld
mov
adcb
push
add
push
mov
inc
jle
das
imul
scas
push
cmc
mov
mov
lahf
sbb
lods
xor
push
dec
fbstp
arpl
push
mov
pop
mov
call
jb
bound
mov
loopne
mov
push
imul
data16
cli
je
add
inc
in
lock
fistl
or
push
inc
mov
mov
add
leave
or
lea
call
lcall
aas
lea
idiv
cmp
lods
add
pop
adc
push
leave
mov
push
adc
xchg
loop
nop
fists
das
xor
adc
stos
mov
jp
inc
and
and
mov
push
test
inc
sbb
cmp
cmp
dec
sub
test
and
inc
mov
clc
and
out
push
in
add
leave
mov
and
add
push
push
jns
test
cmp
xchg
mov
clc
mov
adc
fldenv
push
nop
test
pop
testb
xchg
mov
push
rcrb
cmc
pop
inc
add
dec
inc
dec
cs
in
test
and
xor
mov
leave
xor
sti
mov
and
xchg
mov
pushf
pop
out
xchg
push
insl
hlt
mov
xchg
jge
xor
dec
out
loopne
xor
pop
sub
int3
push
popa
jl
jnp
pushf
movsl
mov
pop
cwtl
sub
adc
clc
fadd
fldcw
inc
pop
insl
iret
adc
xchg
popf
dec
jne
inc
dec
mov
mov
lods
adc
rcll
pushf
scas
mov
js
dec
leave
pop
in
sbb
cmp
sub
push
adc
mov
test
mov
cltd
outsb
xor
jp
dec
leave
inc
into
push
es
mov
inc
mov
add
and
dec
imulb
or
adc
dec
mov
inc
xor
sahf
loopne
arpl
insb
fistps
jnp
push
jne
adc
loope
inc
sbb
sub
aam
jae
std
insl
pop
loope
xchg
fwait
xchg
shrb
dec
mov
lds
mov
push
int3
and
push
daa
std
dec
inc
subb
cmpsb
dec
inc
or
shl
cmc
lcall
imul
inc
fistl
cmp
and
adc
sti
sub
loop
bound
cs
jne
gs
dec
outsb
testb
inc
lock
and
insl
sbb
or
sti
and
mov
ds
and
in
xchg
dec
cltd
lock
hlt
std
into
or
jmp
and
add
popa
ljmp
and
imulb
jne
clc
and
loop
mov
inc
mov
int3
test
adc
or
pop
out
in
mov
loopne
cmp
dec
xor
add
bound
add
jo
scas
or
jb
popl
inc
mov
pop
adc
mov
lcall
loop
out
loope
jmp
pop
push
mov
push
push
mov
jno
pushf
call
fsubrs
fsts
adc
mov
test
lcall
enter
xor
jecxz
ds
sub
jo
adc
mov
das
xchg
push
push
mov
out
hlt
adc
and
ficomps
mov
xor
subb
mov
fisubs
or
daa
push
or
lahf
stos
or
xchg
sahf
pusha
paddusb
mov
mov
ljmp
addr16
imul
xchg
shll
fsubl
cmpsl
adc
dec
push
out
repnz
jp
cmp
bound
lahf
cmc
cmc
mov
cmp
repnz
stos
arpl
lret
jne
imul
test
pusha
nop
fstl
inc
dec
subb
inc
push
jb
xchg
mov
popf
mov
scas
ret
mov
movsb
lahf
xchg
or
divb
addl
sar
repnz
dec
out
adc
jnp
mul
ret
sbb
hlt
push
insl
call
dec
mov
lods
inc
inc
xchg
mov
dec
adc
dec
imull
sti
test
jmp
mov
sbb
push
bound
mov
lock
xor
push
mov
lea
push
daa
das
sub
push
pop
gs
cmp
xchg
loopne
aas
cmp
inc
into
push
and
mov
bound
fistpll
aam
cltd
out
decl
loopne
pop
cmp
shrl
cmpsb
mov
ljmp
or
enter
ljmp
xchg
sbb
fstl
cmp
push
add
push
sbb
pop
or
sbb
cmc
xor
fmul
fimuls
pop
mov
adc
cli
xlat
test
popf
dec
or
or
inc
jmp
repz
adc
lods
jbe
xor
pop
push
cmp
bound
jmp
lcall
js
std
and
loopne
xor
ljmp
in
adc
mov
rolb
push
cmpsb
pusha
pop
imul
loop
outsl
sub
stc
movups
inc
bound
btl
ja
cmp
mov
sub
mov
cmp
shlb
mov
cmp
or
or
ror
cmp
sbb
cmp
mov
popa
cmp
js
xchg
testb
add
xchg
fst
inc
mov
call
sbb
movsb
rcll
mov
xor
and
sbb
iret
xchg
cltd
fwait
call
push
xor
fsubrs
cs
xor
sbb
inc
fs
xchg
jge
scas
jae
lods
or
lcall
fadd
inc
popf
mov
cmpsl
insl
xchg
push
push
ds
inc
rcl
aaa
ds
sub
enter
fistps
jno
jmp
xor
dec
mov
aaa
adc
or
sbb
cli
inc
out
mov
sbb
fldcw
push
add
test
adc
jne
popa
add
fwait
or
jnp
sub
les
pop
adc
cmpsl
std
and
dec
mov
sub
test
arpl
imul
in
inc
jno
mov
movsl
lcall
in
dec
push
icebp
adc
shll
test
jb
movsl
test
mov
loopne
cwtl
js
loopne
clc
lods
jnp
inc
mov
mov
rep
daa
mov
mov
sub
jae
jne
dec
sets
mov
movsb
ds
sub
jae
and
addr16
mov
idivl
push
test
enter
pop
dec
fucom
dec
adc
shl
lds
lahf
imul
lret
and
movsl
or
hlt
decb
dec
pop
jp
xor
in
inc
pushf
fimull
fwait
in
out
pop
pop
mov
enter
test
lcall
out
pop
xchg
inc
push
jo
ds
test
nop
pop
imul
dec
imul
int3
add
or
iret
cmpsb
clc
cwtl
pop
sbb
dec
pop
lds
into
ficoml
lahf
imul
xor
xchg
cmp
mov
push
push
sbb
push
mov
fwait
cli
mov
data16
pushl
push
mov
popf
pusha
dec
insl
out
into
xchg
inc
repz
das
xor
shlb
push
out
pop
cli
std
jo
cmp
and
cmp
push
and
sbb
inc
jecxz
cmp
jge
mov
xor
sbb
outsb
cld
cli
inc
loop
jp
lret
mov
in
lds
mov
and
push
mov
lcall
mov
xor
push
lods
pusha
or
test
repz
jno
xchg
cs
hlt
sbb
in
ljmp
pop
lea
push
lds
sbb
stc
lods
sub
add
xor
fldenv
je
fs
movsl
icebp
nop
call
cmpsl
mov
scas
push
ds
add
xor
gs
add
mov
cli
in
cld
subb
call
add
shll
sub
jns
sub
in
fwait
or
cmpsl
adc
out
dec
xor
pusha
jae
jbe
or
fldenv
pop
inc
lret
jmp
mov
mov
push
xchg
int
jbe
ret
add
sub
out
ret
nop
jmp
outsb
sub
ja
add
and
mov
xchg
iret
outsb
stc
adcb
push
lahf
repz
inc
pop
shll
fwait
xchg
and
lds
aaa
pop
clc
sbb
jbe
or
sbb
xor
inc
dec
test
pop
mov
mov
loopne
mov
jo
add
mov
add
scas
xchg
out
and
inc
dec
stos
mov
xchg
xchg
cmpsl
and
aas
sub
data16
jns
and
sbb
and
fsubrl
loopne
ja
mov
inc
and
push
orl
dec
xor
cmpb
mov
mov
or
xchg
or
adc
lock
daa
jle
pop
popl
jns
adc
aas
cld
xlat
imull
jno
adc
in
cwtl
xchg
jno
mov
and
inc
out
ret
xor
xchg
push
loope
inc
push
sub
mov
mov
push
cmpsb
mov
pop
mov
rorb
cli
or
sbbb
jo
inc
ds
xchg
loope
cltd
add
mov
xchg
test
ja
popa
test
ret
add
pop
sub
sub
in
dec
pop
fbld
stos
push
mov
and
scas
pushf
mov
das
fistps
cmpsl
or
lods
aam
lods
mov
adc
ljmp
jne
lock
or
xor
cmp
and
add
addr16
fwait
mov
std
into
mov
ds
fwait
imul
inc
cltd
and
lret
xor
or
jp
or
andl
sub
lods
mov
hlt
xor
inc
lds
jg
popf
cld
xchg
pop
push
add
movsl
xor
addr16
add
lods
daa
sbb
mov
or
add
imul
stos
rcrb
pusha
clc
and
dec
jns
fnstsw
xchg
fiaddl
dec
xchg
loopne
push
repz
bound
lods
insl
dec
sub
xlat
jnp
call
out
cmp
add
xchg
icebp
call
in
fnsave
jg
jae
shlb
nop
mov
loop
xchg
in
xlat
dec
mov
and
inc
and
mov
adc
dec
rcll
cwtl
test
push
push
mov
addr16
arpl
je
sbb
fildl
xchg
xchg
mov
repnz
inc
sbb
dec
je
mov
push
iret
lods
mov
sub
ljmp
sub
xchg
jg
adc
pop
jg
and
push
in
int
lcall
or
lahf
cmpsb
dec
xlat
int3
xchg
in
inc
jg
mov
xor
test
scas
mov
cmp
stos
test
in
pushf
and
test
dec
mov
pop
fidivrl
int
pop
pushf
ret
add
sbb
fdivrp
scas
fisttps
jl
pop
mov
push
jb
xor
aad
sub
pop
xchg
mov
aas
and
push
pop
insl
lock
pop
shr
cmpsb
mov
enter
mov
cmpsl
fxch
in
add
dec
lcall
push
push
repnz
lds
fiaddl
loope
popa
and
aas
push
icebp
insb
dec
jp
ss
mov
stos
push
insl
and
xor
ja
movsb
or
pop
pop
aas
mov
fxch
cmc
imul
ret
lods
xchg
je
loop
cltd
loop
mov
push
and
out
pop
dec
aas
mov
mov
ljmp
push
pushw
inc
sbb
push
dec
fisubl
in
stos
xor
in
or
pop
in
fwait
divl
lret
xchg
sbb
mov
fstps
dec
jp
xorl
mov
cmp
mov
dec
ret
ret
dec
push
cs
imul
mov
mov
jp
jnp
jnp
scas
imul
pop
sbb
sub
pop
scas
andl
push
xor
notl
ss
jae
inc
inc
iret
mov
inc
cmpsl
in
adc
xchg
jo
sarb
xchg
add
sub
push
dec
mov
mov
pop
ss
cmpb
xchg
xlat
das
xchg
enter
xchg
inc
jo
dec
xchg
xor
push
mov
gs
hlt
popf
jmp
add
jbe
cmpb
sbbl
pop
push
cld
push
jo
test
or
out
insb
sub
add
jl
cmc
or
fsubr
jl
scas
les
fnstcw
mov
inc
pop
pop
bound
cmpsl
adc
aad
jg
insl
gs
jecxz
lret
dec
or
push
out
clc
cmp
adc
rorb
jge
pop
shll
sub
jbe
in
xorl
adc
add
sub
repz
jnp
or
popa
jp
add
fisubrl
cltd
or
add
iret
adc
mov
cmp
mov
jnp
push
test
mov
aas
sbb
inc
pop
stc
int3
mov
cmc
mov
jae
aad
lcall
pop
jmp
hlt
pop
fsts
inc
push
pop
dec
push
repnz
pop
data16
loopne
leave
outsl
push
cmp
sub
xchg
sbb
inc
ss
push
out
dec
and
pop
js
adc
inc
fucomi
ret
roll
sub
mov
leave
test
and
mov
rcrl
lahf
jge
cmp
mov
out
or
jno
push
xchg
xchg
jge
jne
mov
outsl
mov
jl
mov
jns
lods
sbb
shrb
imul
icebp
popa
dec
std
xchg
pop
out
sub
adc
js
jbe
shlb
xor
outsb
in
fs
lock
cmp
and
add
or
cs
and
loopne
rcr
add
add
daa
push
mov
mov
cmc
mov
fistpll
movsl
adc
movaps
and
push
stos
jnp
pop
jae
cld
imul
das
in
sbb
push
pop
or
xchg
or
add
xchg
cltd
fwait
mov
adc
adc
outsb
mov
bound
gs
pop
mov
and
lret
fs
adc
lret
fwait
pop
or
mov
aaa
jg
dec
jg
daa
pushf
xor
push
test
pushf
fs
xlat
jb
mov
lcall
movsl
cmp
push
jle
mov
xchg
mov
xor
add
add
lret
and
in
push
mov
fucomip
int
pop
pop
dec
scas
mov
pop
call
mov
das
jnp
and
jb
mov
cmp
adc
fildl
js
cmp
repz
cmp
paddusw
add
mull
add
ret
xor
sbb
jae
sbb
lock
cltd
xchg
push
mov
inc
ljmp
rorb
adc
lcall
sub
cwtl
fisttps
jne
xchg
and
xor
xchg
adc
pop
push
adc
xchg
jbe
call
xchg
adc
cmp
das
jne
mov
mov
xchg
stos
cmp
dec
call
in
mov
push
int
out
xchg
aad
jae
cltd
sar
sub
mov
mov
mov
push
stc
dec
xchg
mov
fnsave
inc
mov
sub
cmp
lret
je
xor
lods
stos
push
dec
jecxz
push
scas
or
insl
sub
jmp
ret
jns
inc
movsl
punpckhdq
scas
mov
adc
mov
fcoml
xor
stos
mov
cs
and
out
mov
test
ljmp
sbb
mov
fimull
outsl
clc
adc
pop
dec
inc
and
out
test
jmp
addr16
mov
test
mov
inc
xchg
pop
call
es
pushf
sti
add
addr16
fldt
stc
pop
add
mov
fdivrs
xchg
xor
mov
xorl
loop
cmp
xchg
lret
dec
mov
inc
mov
cltd
xchg
or
xchg
sub
repz
pop
push
pop
daa
add
imull
xchg
in
and
adc
and
js
aam
cltd
cmpsb
lcall
inc
push
stc
push
test
inc
out
ror
lcall
int3
fstpl
pop
dec
sbb
dec
js
and
dec
xchg
cmpsb
cmpsl
push
mov
or
jp
xchg
cld
xchg
mov
jecxz
cmp
push
fwait
jecxz
mov
leave
inc
sbb
cmp
repz
cmp
ret
cmp
cmpl
repnz
cmpsl
xchg
imul
sbb
xor
mov
aam
shl
aas
push
push
out
add
mov
sub
xchg
ret
test
or
sbb
mov
mov
mov
cli
push
inc
ljmp
movsb
push
loope
mov
and
aaa
or
insb
negl
pop
aam
or
jae
fsubl
push
adc
pop
inc
push
jne
xchg
pop
fldt
loopne
xchg
pop
insl
push
cmc
das
data16
and
xor
mov
int
sbb
rorb
lret
subl
mov
mov
push
sarb
int
pop
mov
dec
cwtl
jbe
dec
mov
sahf
shl
jp
rolb
ljmp
lea
shlb
hlt
jp
sub
adc
pop
hlt
lahf
bound
push
cltd
loop
clc
add
imull
enter
jbe
divl
out
mov
adc
fdivs
aaa
aam
and
arpl
pop
xchg
lea
add
push
ds
cmp
inc
scas
decb
mov
adc
mov
mov
push
arpl
les
fiadds
inc
mov
mov
or
mov
adc
stos
sbb
arpl
lahf
jmp
xor
xor
sbb
push
and
push
pop
mov
nop
data16
ror
mov
lret
aad
inc
out
push
pop
mov
adc
iret
insl
mov
xchg
cs
pop
sahf
fwait
cmp
into
outsb
cmc
xor
sbb
sub
dec
pop
jno
je
mov
mov
or
mov
xor
test
std
push
mov
scas
pop
and
sbb
xor
rcl
mov
movsb
ds
nop
dec
shll
push
mov
mov
xor
sbb
gs
dec
enter
push
and
push
mov
enter
popf
inc
cwtl
shll
ret
data16
pushf
adc
mov
les
enter
dec
or
loop
and
lods
jbe
or
lret
jge
sub
cs
or
je
imul
in
ret
mov
test
inc
xchg
call
jae
adc
lahf
outsb
ss
mov
mov
sub
mov
into
sbb
lcall
das
shrb
xchg
cmpsl
mov
lock
jbe
dec
xor
xor
fnstenv
sbb
into
jle
inc
mov
mov
inc
arpl
shll
or
jns
clc
and
sub
dec
addb
inc
inc
sub
pushf
cmp
pop
stos
push
dec
jmp
iret
movsl
sub
lret
insl
push
fsub
testb
add
sub
pop
mov
sahf
push
xchg
pop
adc
dec
pop
rcll
xor
addl
xor
test
cmpsl
popf
pop
sbbl
xchg
notb
add
push
sbb
pop
jne
and
jp
mov
pushf
stos
adc
jo
push
mov
lods
inc
mov
inc
lock
cmpl
fcmovnbe
jp
xchg
cld
icebp
lea
xchg
jge
mov
inc
adc
repz
push
scas
imul
cmp
jg
xor
int3
ds
sub
push
jecxz
pop
dec
sbb
mov
xor
ljmp
cmp
mov
gs
int3
lods
jecxz
cld
outsl
cmp
pop
mov
call
fwait
jnp
cmpsb
test
pusha
inc
fs
push
adc
jno
xor
xchg
icebp
stc
fistps
mov
fcmovnu
mov
push
pop
imul
mov
push
or
xchg
cmpl
mov
sbb
xor
ljmp
js
ret
movd
mov
mov
sub
cmp
xlat
mov
jnp
mov
jb
or
jecxz
rclb
jecxz
andb
adc
push
loope
outsb
mov
lods
outsb
outsl
mov
jae
call
dec
mov
aam
incb
clc
sbb
sub
je
loop
xchg
fsubrl
outsb
sbb
cmp
sub
jp
add
mov
dec
aad
add
sbbl
orb
jns
add
lret
or
inc
das
jmp
dec
pop
xchg
sub
ret
ficoml
dec
std
std
inc
imul
aaa
lret
xchg
sbb
add
movsb
fadds
jl
add
push
mov
fcomip
movsl
inc
int
cmpsl
add
mov
imul
repz
and
popf
loopne
pop
pop
dec
sbb
cmp
inc
movsb
cmovp
and
stos
in
xchg
sbb
jbe
cld
push
pushf
jne
pop
scas
out
sub
and
inc
addr16
mov
cmp
xor
xchg
jno
mov
gs
daa
adc
adc
into
jge
int3
sub
fdiv
ret
push
dec
cld
test
inc
pop
daa
cmpb
dec
jmp
ret
pop
lock
lret
jb
jmp
pop
cmp
jle
mov
push
ss
imul
mov
add
mov
test
cmp
fwait
cmc
clc
xchg
and
outsl
inc
inc
push
mov
push
inc
mov
mov
jnp
and
dec
aaa
imul
int
inc
mov
jecxz
push
repz
je
sub
mov
cmp
cli
aad
dec
inc
jmp
and
popa
js
sub
ja
cmpsb
pop
fnstsw
fwait
repnz
test
cmpb
invd
out
cs
shrl
pushf
fstps
xchg
sbb
xor
adc
faddl
add
ret
test
jns
pop
outsl
repnz
sub
jno
pop
sub
mov
lods
sti
scas
lahf
fldcw
push
push
scas
mov
mov
test
ficoms
adc
mov
shll
adc
sub
ss
shrb
movsb
pop
in
push
xor
jmp
push
jp
test
in
pop
adc
lods
xor
stos
popl
fsts
jbe
call
aaa
aam
scas
adc
fcomps
or
popf
out
pop
lahf
xchg
fcmovb
dec
daa
jle
cs
loope
mov
fisttpll
fnstenv
inc
push
js
mov
repnz
and
jne
je
movsb
dec
neg
push
cmp
pop
mov
add
or
push
and
cwtl
fsin
or
outsl
loop
sti
or
cmpsl
les
mov
rep
out
sbb
and
pop
jg
and
scas
std
loop
in
adc
ds
inc
mov
or
jnp
das
cmpsl
dec
xchg
push
adc
inc
pushf
leave
pop
neg
add
push
jno
cmpsb
push
cmp
rorb
xor
out
jno
or
xchg
popf
cmpsb
pop
mov
sub
orb
les
out
cmc
int
fdivrs
dec
js
pop
push
fmuls
arpl
inc
push
das
shr
popf
mov
jmp
mov
int
xchg
in
movsl
fidivl
out
sbb
es
testl
cmp
sbb
dec
imul
lods
fdiv
out
pop
and
lcall
loope
mov
inc
daa
outsl
sub
mov
outsb
mov
cmpsl
fisttpl
push
sub
inc
fisttpl
or
leave
test
mov
lcall
stos
inc
sub
jge
int3
test
gs
mov
sti
jp
jle
fsts
cmp
enter
push
daa
pop
subb
cmp
fcoms
and
dec
xlat
shll
jmp
mov
int
cltd
xchg
mov
fwait
rcr
cli
sbb
js
fwait
cmp
sub
fstl
xchg
iret
push
pop
into
xchg
and
sbb
or
mov
mov
xor
das
out
mul
out
sbb
test
or
xchg
xchg
out
repz
lahf
sub
inc
xor
pop
mov
mov
sbb
xchg
or
mov
outsb
call
xchg
push
push
jne
jl
mov
mov
pop
in
out
add
sti
dec
sub
dec
pop
pop
push
addr16
cmpsl
or
lahf
and
add
ret
sbb
andl
test
add
insb
dec
xlat
insl
or
int
insb
icebp
mov
cmp
inc
outsb
pop
scas
pop
or
and
dec
mov
scas
mov
lahf
loope,pn
in
loop
sub
jg,pt
mov
xchg
mov
sbb
xchg
popa
sub
mov
adc
adc
mov
push
loopne
mov
repnz
push
das
mov
or
test
aas
data16
ds
gs
adcb
aas
mov
pop
dec
inc
inc
xorl
pop
nop
mov
in
outsb
sbb
xchg
sbb
je,pt
je
das
addr16
jge
or
pop
jecxz
xchg
pushf
ss
sub
aaa
sbb
inc
push
aad
xchg
push
sub
pop
dec
and
imul
jo
fistps
push
out
popf
ss
inc
push
pop
jae
and
inc
je
or
stos
mov
sub
and
mov
out
loope
jp
dec
lret
mov
stos
xchg
daa
iret
adc
or
mov
push
adc
cmp
jge
test
xchg
jbe
out
fldenv
fisubl
dec
mov
data16
push
test
mov
or
aam
sarb
les
add
ret
stos
hlt
xor
enter
gs
push
jle
mov
cld
add
xchg
stc
cmc
inc
popf
je
mov
daa
jno
insl
fwait
pusha
and
mov
mov
mov
mov
fadds
in
repz
cld
jmp
cmpsl
lahf
xor
fcomps
loope
imul
stc
jmp
ret
jg
or
addr16
filds
and
jge
cmpsl
cmp
sarl
mov
mov
sbb
adc
jl
xor
dec
mov
pop
mov
sub
or
call
jne
xor
sbb
js
xchg
fcomps
decl
out
and
insl
inc
and
movsb
or
jnp
pop
xchg
mov
out
mov
shl
lods
mov
adc
add
mov
cmp
in
aaa
aaa
or
pop
psubusb
insl
add
icebp
cmp
adc
push
fwait
mov
and
cmc
jmp
test
in
mov
jne
cmp
add
imulb
cmp
cmc
dec
inc
aad
ss
imul
loop
test
pop
cmc
ud1
xchg
push
sbb
inc
add
fs
dec
jmp
sbb
sub
pop
out
mov
cwtl
fdiv
pop
fcmovnb
in
add
xchg
jle
sub
mov
into
xor
out
inc
adc
mov
clc
dec
sti
jne
jae
jecxz
leave
jb
bound
sbb
jb
inc
add
lock
mov
mov
dec
scas
mov
push
push
imul
call
cmp
cld
repz
insb
test
mov
fidivl
jp
and
lcall
imul
sbb
in
mov
mov
adc
fwait
cmp
mov
dec
fucomi
mov
fwait
adc
xchg
sub
mov
push
mov
pop
mov
mov
pop
stc
sub
int3
movsb
call
imul
sbb
push
jmp
mov
loopne
mov
test
add
test
adc
rcrb
out
ss
fdivrs
push
repnz
dec
mov
dec
sub
push
addb
xchg
sub
push
adc
jl
adc
cmp
cmp
mov
mov
fs
inc
lock
mov
jnp
cmpsb
cmpb
scas
mov
lcall
xchg
xchg
push
cld
ss
jl
pop
jle
lcall
dec
dec
pop
xlat
cs
dec
mov
or
rcr
popa
push
xor
fists
push
out
pop
imul
jle
in
inc
or
pop
cwtl
das
mov
mov
push
iret
ret
push
call
lahf
in
xor
or
jne
icebp
sbb
pop
btsl
das
ds
pop
xchg
sahf
mov
sbb
nop
fistps
sbb
scas
loopne
push
mov
push
inc
mov
in
je
ds
inc
push
inc
push
sub
fistps
jo
xlat
insl
arpl
lds
pop
mov
movl
pop
aaa
dec
fsubrl
ret
sub
fcoms
or
xlat
cs
jg
lcall
icebp
mov
sbb
xlat
jno
jg
sbb
lock
pop
cmpsl
xchg
js
fs
sub
jge
pop
movsl
mov
bound
mov
jg
lcall
je
into
add
cmp
xchg
push
mov
dec
lock
insl
and
sbb
testb
or
mov
ss
pop
test
scas
orps
imul
cmp
insb
in
xor
loop
pop
ret
add
adc
out
sbb
bnd
add
pop
loop
xor
hlt
lcall
imul
fisubrl
mov
mov
and
mov
mov
in
sbb
push
mov
arpl
cmp
or
xor
cmpsb
ret
and
movsb
sbb
dec
ret
icebp
lods
shrl
mov
push
and
hlt
out
jo
sub
sub
xor
int
test
push
es
shl
loopne
int
mov
xor
mov
lds
mov
sbb
or
stos
aaa
push
daa
hlt
mov
pop
xchg
repz
jecxz
mov
jbe
insb
fidivrs
adc
bound
sbb
inc
inc
inc
push
mov
out
outsw
imul
inc
push
mov
push
pop
inc
sub
pop
ret
push
pop
imul
jnp
adcl
sbb
shrl
and
mov
out
fwait
sbb
vpmacssdd
or
psraw
mov
pop
lret
mov
insl
mov
mov
cmp
movsb
dec
jne
mov
mov
subb
fsubrs
repz
xor
repnz
sub
std
mov
mov
jg
and
pop
mov
and
stc
repz
or
dec
movsl
mov
jl
pop
rcl
lock
xor
cmp
dec
mov
xor
jmp
push
xchg
mov
and
insb
scas
jecxz
loop
std
push
fistl
mov
insl
mov
push
iret
mov
daa
pushf
popa
xchg
inc
daa
mov
aas
test
push
cmc
add
arpl
scas
rcr
popa
call
sbb
loopne
xor
cmpsb
sbb
cmp
scas
sti
or
mov
cmc
pop
les
dec
notl
cmp
mov
inc
lret
adc
hlt
sub
pop
push
add
jl
pop
jg
mov
add
dec
or
gs
rclb
add
push
push
mov
das
repz
cltd
xchg
fcompl
inc
pop
cmpsb
push
test
add
ret
aas
iret
hlt
repz
mul
mov
pop
pop
ffreep
stos
or
ret
fidivrl
int3
add
jnp
or
subb
or
or
test
loope
sbb
cmp
mov
inc
or
ja
jg
mov
mov
jb
leave
mov
mov
add
adc
add
sahf
inc
inc
imul
popf
sub
es
loopne
nop
and
in
xor
frstor
sbb
into
test
imul
cmc
pop
and
mov
mov
popa
fs
mov
dec
jnp
inc
mov
daa
sub
jle
or
pop
adc
movsb
lahf
xchg
sarl
test
jle
xchg
jo
jmp
test
notl
lahf
dec
xchg
mov
in
mov
jb
in
and
pop
adc
jmp
dec
es
pextrw
insl
xchg
push
sahf
mov
inc
sbb
mov
sub
xchg
cmp
push
pop
jae
push
push
sti
popf
dec
in
rcrl
jp
sti
aas
xlat
push
inc
in
ror
stos
shll
add
sub
mov
sub
inc
lds
fnstenv
sub
cli
insb
rcrb
imul
mov
mov
jle
ror
dec
cmp
gs
xor
cltd
in
pusha
fwait
xchg
push
cs
daa
in
in
cli
add
mov
jnp
jl
xchg
xor
push
sbb
fwait
insl
scas
es
dec
and
adc
pop
dec
jbe
je
push
repnz
xor
jle
xchg
push
push
sbb
loope
add
js
xor
mov
lock
sbb
xchg
shrl
push
add
pusha
adc
mov
sti
std
ja
dec
ret
aam
mov
pop
mov
inc
int
stos
cmc
roll
add
mov
out
arpl
push
xlat
sub
lods
dec
jb
dec
cmp
sbb
out
jge
mov
dec
push
fiadds
pop
test
hlt
shlb
dec
dec
pop
inc
call
push
mov
push
xlat
popa
fcompl
pushf
in
adc
les
les
or
inc
jns
cmp
or
orb
pop
fcom
cwtl
iret
ja
inc
stc
in
mov
es
rorb
jnp
outsb
jb
sub
or
mov
push
pop
in
insb
adc
cmc
push
cmpl
xchg
inc
cmp
mov
ret
push
or
mov
xlat
xor
cmp
shr
insb
jl
inc
cwtl
xchg
mov
xor
inc
out
cltd
sub
dec
in
fidivrs
icebp
les
mov
push
sbbl
testl
mov
fwait
cs
lock
sti
push
rcll
inc
inc
mov
push
iret
sbb
enter
mov
lea
push
jmp
ds
dec
hlt
adc
cmp
inc
pop
add
inc
popa
mov
mov
shlb
data16
xchg
adc
pushf
cmpsb
fsubrs
sbb
jmp
aam
loop
mov
push
mov
lcall
popf
or
mov
pop
inc
sbb
scas
and
pop
push
ja
cld
in
mov
clc
stos
loope
fs
mov
mov
stos
ret
lahf
out
cmp
in
lret
fbld
subb
sub
lret
mov
and
ret
dec
mov
lea
fmuls
dec
int3
jno
sahf
jbe
movsb
ds
adc
xor
cmc
lret
pop
movsl
and
push
jns
mov
lcall
and
in
lods
in
cmp
int
addl
sub
cmpsl
in
dec
repz
xchg
pop
ret
scas
cmp
aam
jno
jmp
xchg
mov
or
sbb
mov
jge
cs
cltd
xchg
inc
jl
push
mov
dec
daa
in
sbb
rclb
cmpsl
sahf
adc
sub
mov
rcrl
jne
clc
add
rcl
je
stos
lods
sbb
mov
push
cltd
push
fistps
movsb
outsl
sub
add
jle
int
clc
outsb
out
push
lock
xchg
out
xchg
jecxz,pn
and
pop
mov
popl
pop
ss
rcll
sub
pop
xor
sti
fwait
sbb
lds
xlat
adc
add
push
xchg
arpl
loop
hlt
mov
mov
lods
and
dec
call
cmc
cmp
or
and
out
mov
enter
cltd
xchg
pushf
ret
clc
or
or
inc
pop
add
pop
mov
iret
mov
mov
les
push
jmp
fisubs
ds
pop
ds
iret
jg
imul
dec
out
popf
jecxz
inc
fsubl
pop
imul
xchg
andb
jbe
cmp
and
add
add
call
mov
sbb
push
shrl
push
mov
js
cwtl
jns
push
mov
pop
sub
in
insb
popf
sub
jbe
xor
sbb
xlat
dec
and
push
fcoms
icebp
xchg
in
imul
mov
pusha
gs
flds
mov
fwait
bound
stos
pop
or
push
sub
mov
leave
push
fcomip
pop
adc
int
outsb
cmp
fisttpl
sbb
test
call
pop
xchg
adcb
jecxz
lahf
xchg
int3
xor
mov
push
cmp
cmc
mov
sub
mov
ja
dec
fildl
lret
jns
repnz
xorl
mov
lret
sub
cmp
hlt
push
cmpsl
and
inc
pusha
jo
pop
push
xorb
jae
sbb
aas
xor
jge
mov
std
stos
and
and
cltd
cmp
lahf
pop
addr16
jmp
dec
xor
mov
mov
and
ja
movsb
in
test
cmp
dec
sbb
inc
imul
es
mov
cmp
add
loop
mov
inc
cmp
or
add
addr16
movsl
sbb
movsb
jbe
fstl
outsl
cli
push
push
sarb
jp
xchg
or
iret
or
push
mull
dec
jns
push
pop
outsl
adc
inc
push
hlt
icebp
cmp
add
test
lock
es
std
movsb
dec
sub
mov
shlb
ret
pop
or
lahf
into
or
fdivs
pop
xchg
push
hlt
push
sbb
push
push
push
inc
repz
mov
subl
pop
aad
call
xor
jecxz
push
jmp
sbb
mov
push
xchg
xchg
xchg
shll
cwtl
int3
adc
jmp
mov
stos
pop
dec
mov
mov
jns
mov
jb
enter
mov
sbb
sbb
and
push
std
das
into
jo
jae
jmp
fwait
rcrl
xor
ret
push
mov
out
test
shlb
leave
xor
lret
add
cmp
mov
push
fbstp
aad
mov
cmp
dec
add
idivl
xor
int3
mov
lds
inc
addb
adc
mov
neg
sbbl
xor
cmp
std
adc
pop
dec
out
sbb
leave
pop
xor
jo
jb
pusha
or
add
aam
pusha
dec
fcompl
out
or
outsb
outsb
cmp
xchg
cmpsb
std
repnz
push
rcll
inc
shll
add
es
or
repz
sub
cmp
out
mov
mov
xchg
jge
pop
inc
mov
imul
inc
cwtl
xlat
dec
mov
push
stos
test
pop
mov
sysret
adc
es
nop
pop
pop
xor
jg
xchg
pop
dec
movsb
sub
push
inc
outsl
repnz
xchg
adc
repnz
mov
sub
je
out
xor
jnp
dec
xchg
lcall
mov
inc
fdiv
jge
jge
outsb
test
push
je
mov
mov
je
fisubl
call
insb
push
rorl
pop
insl
fwait
bound
add
pop
sar
adc
mov
mov
mov
push
xchg
mov
xor
mov
add
movl
outsb
pop
push
mov
sbb
cmc
ds
rcl
in
out
out
xchg
aas
add
scas
xor
enter
dec
xchg
xor
push
pop
popf
sub
xchg
aad
nop
daa
outsb
loopw
and
push
mov
leave
fstpt
fcomps
ret
dec
pusha
inc
insl
adc
pop
leave
and
sbb
or
cmp
in
sbb
stc
sar
repnz
lcall
inc
pop
inc
or
test
xor
xor
rcll
jmp
xor
or
add
int3
cmp
enter
fmul
daa
xchg
lods
adc
push
lret
jecxz
adc
movsb
xor
cli
or
fcmovnu
cmp
fmull
adc
popa
add
incb
test
inc
ds
jno
xor
arpl
lahf
das
shll
ret
or
imul
nop
das
les
loopne
pop
and
push
pop
fwait
das
stc
out
and
popa
ljmp
push
ret
loopne
rol
sbb
sub
aas
adc
addl
pop
xor
in
mov
popl
in
or
mov
adc
fwait
dec
icebp
std
or
hlt
mov
adc
mov
push
inc
mov
jle
cmp
sahf
jmp
in
or
pop
mov
inc
fiaddl
push
shr
xor
cmpsb
xor
add
mov
ljmp
idivl
rcrb
jae
push
cmp
adc
sub
pop
data16
fstl
insb
mov
cmp
xchg
ja
js
int3
push
jnp
jns
in
test
daa
push
js
jle
jne
inc
insb
aaa
nop
cmpsl
sub
xor
pop
mov
cwtl
je
lods
mov
lds
sub
sbb
popf
pusha
ret
enter
and
ja
addl
js
jecxz
cs
stos
adc
test
xchg
mov
lahf
test
sbb
sahf
xor
push
scas
imul
push
fwait
adc
mov
das
mov
xchg
cs
push
aas
sub
jle
addr16
mov
mov
aas
mov
negl
ljmp
xchg
int
jb
mov
std
push
xchg
pushf
sub
and
xchg
jbe
cltd
xchg
lock
es
jmp
mov
das
sub
fcomi
xchg
ret
out
out
stc
ss
mov
sbb
dec
push
movsb
fsubp
dec
push
cmp
xchg
movsl
ret
sbb
jp
stc
fdivl
inc
xor
sub
das
mov
xchg
jp
jb
ret
and
popa
inc
mov
inc
adc
sub
push
outsb
inc
jle
jge
cmpl
cmpsb
pop
push
mov
imul
xchg
stc
sti
mov
push
push
sarl
mov
jle
dec
fdivr
fimuls
ret
cmp
pop
mov
repz
movsb
lahf
jnp
lret
xor
mov
push
or
pushf
inc
xchg
fwait
mov
push
divb
lods
fbld
fsubrp
or
in
popa
dec
xchg
and
sbb
mov
jmp
push
shll
lcall
repz
adc
fistpll
in
stos
jne
pop
mov
and
pop
dec
pop
je
xor
flds
push
xor
mov
mov
sti
or
mov
jb
adc
or
les
aad
call
fiaddl
aaa
jb
dec
jb
mov
fimull
test
dec
xchg
or
add
mov
push
and
les
andb
inc
push
fisttpll
sbb
jle
lds
mov
xor
pop
mov
mov
aam
pusha
push
mov
xor
cmp
out
aas
xor
and
xlat
imul
xchg
pop
dec
sahf
mov
jb
or
push
jmp
pop
insb
inc
or
add
mov
sbb
lods
adc
jg
jmp
mov
jg
cmp
test
add
jle
mov
and
repz
dec
push
repz
mov
cmp
or
adc
add
lcall
push
push
in
push
fsub
insl
jle
daa
xchg
cld
dec
or
add
xor
rcrl
in
jo
pop
sbb
sti
fldt
jns
add
scas
jns
loop
mov
or
mov
sbb
or
lea
lods
mov
xchg
leave
lret
aas
pop
sbb
dec
sub
ficoms
fstps
mov
or
movsl
xor
mov
fcmovb
sub
sbb
xchg
movsl
data16
dec
jle
lret
idivl
adc
rcr
dec
fbstp
add
je
movb
push
es
jl
lods
or
inc
mov
and
test
sbb
stc
aaa
adc
adc
sub
test
or
sbb
clc
lock
push
shrb
jnp
stos
push
sahf
into
idivb
or
push
xchg
addr16
aad
xchg
movsb
pop
push
test
adcl
arpl
arpl
dec
mov
inc
imul
mov
push
xor
cmp
rorb
int3
mov
mov
push
test
cwtl
adc
rolb
pushf
scas
jge
clc
jne
outsb
sbb
jnp
jg
out
vmread
push
push
push
xchg
decl
jns
and
jp
mov
xchg
dec
adc
mov
andl
in
push
pop
xchg
pop
and
aaa
pushf
dec
mov
push
test
lods
fists
jge
data16
clc
mov
ljmp
test
pushf
fstps
or
jl
mov
inc
adc
lds
je
sbb
mov
sbb
insl
pop
cmp
mov
subb
into
nop
mov
aad
jmp
mov
cmc
dec
hlt
push
icebp
test
mov
mov
xchg
jne
xchg
fimuls
adc
cmc
js
pop
addr16
inc
repnz
xor
sarb
mov
mov
or
xor
mov
or
mov
mov
mov
in
sub
push
jmp
inc
adc
cmp
iret
dec
ret
adc
in
mov
loopne
push
arpl
loope
add
cwtl
cmp
fwait
mov
pop
lods
lahf
int
push
jmp
jbe
push
fmuls
adc
aad
push
push
fistpl
inc
leave
rol
xchg
xorb
sbb
sbb
scas
insl
jl
sub
dec
add
in
dec
fdivp
cmp
testb
std
inc
data16
xchg
cmpl
cmpsl
xlat
outsb
fwait
mov
and
adcl
imul
jmp
sets
aaa
pop
dec
jge
clc
jbe
cmp
cmp
sbb
sbb
mov
dec
xchg
test
out
in
adc
cmp
test
mov
sub
inc
shll
arpl
sub
mov
cmpsb
jae
loopne
outsb
sahf
pop
sub
cs
pop
aam
or
pop
mov
lods
fidivl
das
loopne
cmp
inc
xor
add
dec
ds
push
adc
xor
mov
mov
test
ds
in
out
dec
mov
dec
pusha
cwtl
js
xor
call
movsb
loopne
hlt
scas
pusha
test
shrb
cltd
sarb
ret
sbb
sahf
popf
add
repnz
add
subl
movsl
jle
or
cld
out
cmp
mov
dec
fsubrl
out
mov
movsl
rcr
test
repnz
mov
aad
scas
mov
int
inc
jmp
pushl
pop
and
cmc
inc
lock
mov
and
inc
xor
adc
add
cmc
ss
xor
adc
pop
cmc
push
in
pop
mov
xchg
mov
inc
js
in
push
push
clc
call
insb
hlt
fnstenv
pop
adc
pop
imul
dec
mov
hlt
mov
and
call
mov
data16
movsl
dec
ret
lcall
inc
pop
fwait
in
fisubl
scas
sub
das
cwtl
mov
sbb
mov
gs
mov
in
fidivrs
adc
sub
popa
pop
jp
or
loop
iret
cmp
inc
outsb
sub
movsb
fsts
mov
and
dec
mov
mov
mov
jbe
pop
pop
xchg
lret
xchg
loope
rcl
sbbb
cmpsb
lds
push
imull
add
xchg
add
adc
cld
xchg
aaa
rcrl
mov
fstl
push
sar
inc
sub
data16
cmc
outsw
insl
int
add
push
sarb
in
bound
cmp
pop
sbb
adc
test
jne
fsubr
stos
stc
pop
ror
mov
and
mov
sub
push
out
xor
xchg
mov
lods
push
leave
decl
add
or
push
roll
jb
xchg
jge
lahf
mov
jo
add
test
mov
enter
ss
dec
icebp
enter
dec
lds
xor
pop
sbb
or
stos
test
clc
push
movsl
adc
inc
sub
sub
xchg
fnsetpm(287
push
lret
push
decl
push
rclb
mov
pop
or
in
cmp
lret
push
push
mov
mov
xor
js
inc
inc
in
mul
xor
cmpb
es
pop
subl
adc
out
mov
add
add
mov
shl
loope
cmp
out
jae
std
dec
inc
xor
pusha
inc
fptan
jmp
ret
iret
imul
cmp
add
and
test
fcmove
repnz
mov
scas
push
fildl
es
cltd
sub
adc
loop
es
jmp
and
insb
mov
mov
dec
and
xor
fs
imul
lret
push
popf
mov
push
pop
sub
cmc
mov
mov
das
outsb
pop
push
cmp
bound
in
push
pop
lds
cmpsl
cmp
dec
sbb
push
fbld
and
sub
add
sbb
movsb
inc
stos
scas
lret
fidivs
lcall
cmp
dec
mov
jno
adc
out
and
fwait
push
mov
adc
outsl
in
cmp
pop
mov
xchg
and
jmp
xor
rcll
fistpl
ja
sti
dec
in
addr16
insb
fildl
sub
adc
mov
inc
out
aaa
fwait
sbb
insb
pop
loop
rcl
lcall
mov
and
stos
in
std
imul
mov
jge
pop
xor
call
sub
in
jp
div
arpl
stc
cmp
jae
mov
movb
arpl
ror
scas
push
rol
ss
shll
pusha
add
divb
scas
pop
jae
push
rcr
add
add
and
push
cmp
or
ficompl
shl
add
lock
dec
mov
jbe
in
jl
mov
in
in
dec
enter
mov
not
jo
adc
lods
and
jp
inc
jge
stos
push
out
mov
ja
add
iret
sub
xlat
ret
mov
push
push
push
inc
jo
xor
jmp
aas
dec
and
clc
lea
inc
fimull
xor
pop
sub
aam
xor
xchg
ret
out
mov
xor
pop
mov
mov
icebp
sub
fs
repz
dec
sbb
insl
out
xchg
std
fadd
gs
sarb
cltd
imul
sti
mov
mov
outsb
inc
xchg
xchg
movsb
mov
stos
push
ficomps
out
push
and
leave
daa
enter
and
loop
aaa
push
sub
cli
jnp
lret
mov
cmp
pop
mov
and
loope
dec
mov
loopne
jge
push
cmpsb
sbb
test
push
mov
jbe
lds
xor
idivb
mov
xor
or
mov
imul
inc
mov
jle
stos
adc
adcb
jp
push
ret
jo
jb
or
enter
jnp
add
cmp
pop
mov
std
inc
insb
mov
adc
and
imul
cmp
gs
sub
or
shlb
jmp
mov
dec
push
test
xor
lahf
in
jg,pt
xor
jb
mov
lock
rolb
out
xor
push
sahf
aam
xorps
mov
mov
xchg
mov
movb
mov
adc
mov
xlat
mov
jns
or
les
femms
jg
jle
lea
movsl
lds
and
dec
shll
call
cwtl
add
dec
xor
fstps
rcll
adc
or
loope
ss
lock
and
mov
dec
fwait
lcall
inc
mov
pop
lahf
inc
jg
inc
out
aaa
mov
adc
inc
push
add
fxch
loope
inc
and
lock
xchg
movsb
sub
fdivs
dec
aad
dec
push
bound
mov
gs
xor
stc
and
cmp
xchg
mov
scas
xchg
data16
mov
jle
add
mov
push
jb
js
jecxz
xor
add
adc
pop
es
lds
xchg
jae
stc
lret
xor
scas
vpslld
mov
pop
add
sub
fistpll
and
jp
xor
add
popl
cmp
or
fs
mov
js
push
daa
cwtl
fcoms
in
pop
ror
cmpsl
xchg
inc
push
mov
fadd
fldt
addr16
fsubrl
aas
sub
mov
cmpsl
cld
popf
sbbl
lret
or
mov
cltd
mov
outsl
lret
pop
shlb
imull
outsb
and
push
adc
push
fadds
cltd
mov
loop
aas
lcall
pop
sti
andl
test
xor
add
sbb
push
push
dec
sub
lods
pop
cmp
push
mov
adc
das
movsb
fsubrl
pop
inc
dec
repnz
cmc
cmp
cmp
call
jb
pushf
mov
inc
fdivp
leave
or
loopne
lret
scas
test
xchg
pop
cmp
ret
fsubp
xchg
test
xchg
sbb
mov
cltd
xlat
das
push
adc
cmp
mov
cmpsb
mov
cmp
mov
popa
clc
jecxz
cltd
xor
push
cmp
or
mov
sub
push
sub
scas
fstp
add
xor
ljmp
int3
cmpsb
aas
sub
into
pop
lahf
add
xchg
jbe
scas
sbbl
xor
add
lea
data16
stc
jmp
subb
shll
mov
mov
xchg
shrl
or
insb
testl
adc
sub
cmp
outsb
mov
xor
add
call
hlt
imul
pop
jbe
sbb
jae
dec
sub
addr16
rcrb
add
mov
cli
xchg
pop
arpl
inc
jns
mov
les
sub
mov
loope
in
cli
adc
xor
aas
mov
push
in
rclb
jnp
cltd
xchg
or
outsb
fdivrl
sub
push
jmp
in
sub
sbb
iret
push
lods
inc
mov
fisttpll
mov
pop
sub
les
mov
lock
pusha
sub
push
mov
push
insb
push
stc
clc
outsb
dec
mov
fstps
push
xchg
bound
into
movsb
cmc
mov
ja
fcoms
cmp
push
lock
sbb
in
imul
es
inc
lds
mov
add
dec
popf
andb
jo
icebp
cmp
sub
xorb
mov
and
push
ficoml
mov
stos
sarl
pusha
adc
mov
cmpsl
push
aaa
mov
fdivs
dec
xchg
movsb
fiadds
into
mov
andb
test
xchg
add
mov
jb
or
cmp
cltd
xchg
xlat
int3
add
scas
mov
dec
xchg
sub
movsb
movsl
aaa
sbb
cmpb
xchg
int3
pop
xor
incb
pop
sub
xchg
ljmp
add
dec
lock
mov
add
add
mov
pop
mov
add
les
dec
stc
mov
cmp
xchg
sub
ss
adc
push
sbb
out
jg
mov
outsl
xchg
imul
pop
or
sub
mov
cmp
popf
in
sbb
jg
cmp
jno
jl
scas
xorb
and
add
xchg
sbb
mov
popf
cwtl
mov
and
sub
push
pushf
fadd
jle
mov
cmp
cmpsb
xor
andl
mov
loop
in
lcall
sub
mov
lret
rol
jle
in
sbb
jmp
mov
sbb
ljmp
push
xchg
incl
jmp
mov
mov
arpl
out
push
or
repz
sbb
lods
scas
and
xchg
imulb
pusha
jecxz
mov
xchg
loope
or
jno
pop
test
sbb
mov
mov
push
jp
addr16
xchg
scas
not
imul
jge,pt
xchg
or
gs
test
cmp
adc
sbb
shll
popf
adc
adc
xor
test
fidivl
xchg
insb
push
sub
out
in
inc
fbstp
dec
hlt
xorl
ficomps
xchg
nop
js
inc
inc
sub
bound
mov
pop
adc
ds
movsl
rcl
sub
and
iret
push
xchg
cmpsb
xor
xor
mov
imul
imul
or
push
insl
jg
into
push
mov
pop
adc
ret
fstpt
adc
je
aad
xor
mov
out
push
gs
pop
stos
into
or
int
push
add
subps
lret
call
inc
and
push
lret
xor
inc
icebp
rcll
cltd
sub
sub
mov
xchg
ret
pop
ret
mulb
jmp
add
sbb
outsb
std
addr16
add
iret
test
fisttpl
sub
adc
add
sub
pushf
xcrypt-cfb
cmpsl
and
cmp
std
in
xchg
xor
pop
xor
xchg
scas
js
loop
mov
cmp
iret
mov
dec
xchg
jae
push
add
pop
arpl
shr
rol
sti
sahf
mov
or
mov
xor
pop
and
rolb
mov
jbe
or
and
mov
aaa
add
test
push
jne
test
jecxz
adc
out
andb
sub
mov
inc
test
jl
dec
or
stc
xchg
sbb
push
js
or
xchg
adc
popa
mov
cmp
cmc
es
dec
mov
mov
mov
xchg
adc
aaa
lock
movsb
mov
dec
daa
iret
dec
repz
xlat
jns
xor
pop
mov
leave
and
push
cmp
mov
mov
xor
sbb
loop
jmp
adc
loopne
mov
mov
pushf
bound
xor
lcall
inc
jl
loope
cmp
mov
xor
loop
ljmp
dec
stc
dec
and
ret
adc
add
sahf
jns
dec
ret
cmp
pop
jb
sbb
testb
movsl
test
stos
bound
cs
inc
push
push
jmp
repnz
test
inc
icebp
mov
jnp
iret
xchg
cld
adc
push
xor
push
push
adc
shll
std
out
imul
lahf
jo
mov
cmp
push
pop
repnz
repnz
clc
cmp
mov
cwtl
addb
pop
adc
pop
and
call
daa
xchg
bts
rorb
call
mov
lock
cmp
jbe
mov
in
pop
outsl
sub
or
jno
cmp
inc
inc
xchg
jbe
mov
insb
fadds
push
lahf
out
test
pop
sub
in
stc
test
fimull
jmp
outsb
xor
std
mov
test
loop
arpl
mov
stc
pop
cmp
xor
dec
ljmp
enter
sbbl
jmp
sbb
mov
testb
mov
pop
push
or
xor
xchg
rorl
add
sbb
jae
xor
pop
jg
sub
repz
loop
mov
cwtl
icebp
adc
popf
ret
dec
addr16
add
fmull
push
lret
xor
out
es
xchg
sbb
inc
les
jg
jo
push
mov
or
pushf
add
aad
js
cmp
inc
aas
push
fisubrs
jno
xchg
adc
adc
cmp
jne
inc
aad
out
daa
or
adc
mov
dec
mov
or
rclb
xor
in
call
jbe
mov
ljmp
lret
loope
lock
push
sub
dec
push
xchg
jecxz
or
cmp
outsb
nop
dec
mov
arpl
xor
sub
cmp
push
adc
sub
mov
adc
dec
add
jbe
and
addr16
mov
mov
fs
inc
inc
pop
pop
das
sub
sub
loope
lret
pusha
cmpsb
aam
fcom
push
or
pop
xchg
pop
jb
sbb
inc
push
aaa
ficomps
mov
loopne
hlt
inc
bound
sub
repz
mov
and
stc
adc
rclb
out
lds
rorl
mov
and
mov
sarl
add
xchg
fiadds
dec
xor
cmp
dec
cld
cmp
dec
and
mov
out
test
shll
repz
cli
adc
ss
into
pop
loope
fstl
lock
push
inc
mov
cmp
aaa
cmc
push
sbb
js
fldl2t
mov
es
roll
repz
push
adc
xchg
arpl
jp
lods
out
in
shrl
imul
inc
sahf
cwtl
mov
cmp
sbb
sub
arpl
orl
sbb
sarb
imul
int3
push
and
outsl
test
je
mov
push
int
pop
xchg
imul
in
lret
popa
pop
rclb
push
and
sub
dec
adc
and
frstor
lea
movsl
fucomip
into
xchg
cmc
cmp
xchg
mov
lods
lret
call
push
xor
dec
outsl
ret
dec
xchg
sarl
stc
ljmp
xchg
add
jp
lods
pop
pusha
xor
lcall
xchg
jmp
and
sbb
aam
and
hlt
fidivl
or
inc
sbb
mov
shrb
ds
mov
adc
xchg
rorl
push
lods
lcall
sbb
js
popa
aaa
fisttpl
ljmp
in
rol
aaa
adcl
adc
lret
jecxz
jne
mov
mov
stc
cs
pop
cltd
out
push
lahf
lea
repz
and
sbb
movsl
sub
lahf
mov
je
mov
test
aad
mov
xor
arpl
arpl
cmp
jg
and
and
lret
cld
mov
xchg
or
cs
adc
mov
push
mov
fstpl
rol
daa
ss
cmc
and
pop
lds
loope
pop
xchg
std
xor
and
jnp
int3
arpl
mov
sbbl
fists
pop
fwait
insl
aad
or
lret
fsub
jns
adc
or
int3
push
xor
xor
les
arpl
and
fstps
in
insb
xor
or
das
mov
cmp
fmuls
dec
cmp
ret
scas
cmp
cli
add
fwait
xchg
lahf
push
lcall
scas
fucomp
cmc
out
sbb
hlt
adc
hlt
dec
aaa
and
xor
or
int3
repnz
shll
hlt
movsl
dec
fsubrl
cmp
lods
out
xchg
cli
dec
jle
sbb
jne
out
lret
mov
stc
lcall
jbe
outsl
mul
mov
inc
dec
ljmp
jecxz
jle
ds
pop
test
sub
pop
repnz
cmp
fnstcw
push
mov
xchg
icebp
and
push
pusha
xorb
mov
jns
push
pop
loop
popf
add
cmp
mov
xchg
inc
xor
pop
jne
fwait
jne
hlt
cmpsw
jle
pop
mov
mov
and
cmpsb
arpl
fidivs
loop
cmpsb
faddp
inc
inc
xchg
mov
sub
pop
xchg
cmp
adc
mov
cmc
jg
pop
or
loope
jno
dec
jo
xor
insb
stc
imul
inc
call
adc
in
icebp
adc
fwait
mov
shll
popf
cwtl
lcall
out
adc
gs
cmp
jns
and
jb
jo
dec
out
mov
lock
and
ret
dec
mov
pop
jnp
test
sbb
ret
xchg
aas
mov
cltd
sub
notl
adc
add
jp
inc
lock
test
scas
mov
sub
mov
loopne
mov
xor
inc
imul
jl
sbb
mov
xor
stos
cmp
mov
int
push
ja
push
in
out
inc
and
inc
pop
or
aas
ror
adc
imul
scas
dec
das
insl
jg
bound
fs
sbb
cmpl
and
ds
mov
xchg
sbb
clc
aaa
in
add
icebp
in
into
mov
jle
das
lahf
fdivs
jle
rclb
outsl
adc
out
push
test
push
neg
mov
xchg
xchg
push
pop
nop
adcl
repnz
push
dec
mov
ficomps
andl
das
dec
dec
adc
cld
shr
mov
cwtl
and
push
sub
sbb
mov
fs
incl
fcomps
jge
push
je
xorb
mov
inc
lcall
pushf
add
pmaddwd
cld
mov
pop
xchg
movsb
push
pop
dec
sti
pop
imul
aaa
out
out
movsl
ljmp
andb
pop
sub
push
outsl
jae
leave
add
out
mull
leave
outsl
mov
xchg
imul
mov
add
jb
rclb
add
sbbb
insb
outsl
push
jne
lods
sbb
into
in
inc
mov
mov
mov
enter
inc
mov
or
pop
test
or
pop
pop
or
xchg
and
shrl
xor
sbb
sub
jp
xchg
pop
in
sbb
leave
outsb
icebp
and
adc
push
cmp
hlt
nop
add
jns
pop
mov
aad
outsb
adcb
into
mov
xor
jl
lds
sub
out
cwtl
jge
pop
test
or
es
popa
fiadds
loop
and
sti
in
push
dec
add
xchg
pop
fcmovb
push
les
add
pop
repnz
shll
in
cwtl
dec
xor
mov
lods
dec
xor
imul
ljmp
adc
stos
movsb
cmp
or
les
xchg
shll
and
lahf
outsb
cwtl
push
mov
pop
out
sub
and
cmp
cmpsl
xchg
insw
or
jge
in
mov
dec
shr
lcall
cwtl
mov
arpl
xor
add
test
dec
ljmp
mov
sub
mov
cli
and
push
dec
xchg
mov
loope
xchg
daa
or
inc
rolb
xor
jg
xchg
nop
fcoml
cmpsl
mov
hlt
sbb
mov
push
and
or
dec
mov
movsb
std
ret
cmc
jmp
mov
xchg
out
mov
leave
jnp
pop
push
or
fsubl
test
movsl
push
jg
repz
xlat
loop
jno
popf
mov
mov
dec
xor
inc
icebp
call
sbb
dec
aas
imul
jae
xchg
jne
repz
pop
add
dec
adc
inc
jmp
pop
mov
ret
lock
cmp
out
adc
inc
mov
cmpsl
aam
mov
aad
out
pop
rcr
lahf
inc
lret
xchg
xchg
mov
adc
adc
mov
sbb
cltd
fldt
in
sbb
ljmp
xchg
jecxz
stos
dec
ds
mov
sub
sbb
pop
in
lea
push
pop
mov
pop
ret
xor
mov
push
mov
sub
jp
iret
mov
test
jg
aad
push
mov
fucomp
lods
cltd
dec
xchg
or
sahf
xchg
pop
js
ja
das
xchg
cmp
inc
outsl
xor
mov
adc
push
leave
sub
pop
cmp
aam
adc
test
icebp
adc
dec
mov
adc
and
xchg
mov
ja
xor
add
mov
sbb
push
cmp
clc
xchg
mov
les
adc
sbb
sbb
cmp
cltd
movsl
mov
jae
hlt
nop
lods
xchg
dec
lods
pop
subl
xchg
ss
insl
and
mov
xchg
mov
pop
xchg
psubb
pop
arpl
xchg
cmp
xlat
jge
and
pop
je
push
sbb
jno
push
fistpll
mov
xchg
int3
ret
inc
pop
pop
xchg
cs
add
popa
cld
ret
test
ret
inc
mov
add
sub
dec
scas
xchg
sti
jmp
mov
imul
mov
cmp
cwtl
lods
mov
loop
push
arpl
jae
push
lock
and
pop
roll
leave
push
in
dec
mov
subb
mov
scas
xchg
movsb
cmpsb
and
daa
mov
cmp
in
rcr
push
orl
adc
jbe
xchg
loope
push
pop
testl
jl
xchg
add
add
and
adc
mov
cmp
adc
pushf
aad
ja
stc
je
ds
pop
add
mov
sbb
add
adc
call
xchg
push
and
mov
fs
sbb
jl
mov
aaa
lret
xchg
outsl
jp
pop
loope
mov
in
dec
outsb
and
lahf
mov
lcall
les
push
xchg
mov
pop
ss
fcoms
mov
inc
lahf
adc
out
cmpb
xchg
mov
inc
dec
pop
scas
lds
std
jnp
pop
enter
dec
adc
ret
aaa
dec
jbe
mov
pop
xchg
cwtl
enter
push
mov
out
pop
orb
sub
inc
cmpsb
insb
movsb
mov
or
add
pop
cmc
lret
dec
and
sarl
push
lock
outsl
std
andl
xlat
fisubs
ja
data16
mov
push
dec
shrl
loop
aaa
scas
pushf
sub
sbb
fmuls
cmpsl
xlat
and
push
sub
dec
mov
mov
lcall
push
jp
clc
mov
aad
call
push
jno
sahf
dec
mov
xchg
cwtl
add
rcr
xor
dec
add
jle
or
mov
pop
jbe
and
lods
pop
ds
xchg
and
mov
dec
lods
pop
mov
adc
dec
dec
das
mov
xchg
pop
mov
rcl
xchg
mov
test
inc
push
sarl
jno
hlt
insb
dec
test
mov
iret
lret
aam
cli
mov
or
mov
or
addr16
inc
pop
cld
shll
xchg
out
dec
xor
ds
in
cli
xor
aaa
lret
add
mov
call
mov
mov
xor
inc
fisubrl
cmpsb
cmc
inc
addl
mov
mov
imul
pop
mov
jle
xchg
movsb
fcmovnb
sub
cmp
dec
inc
jno
push
mov
subb
arpl
lea
out
jnp
jmp
fildll
stos
adc
mov
xchg
mov
fidivl
lods
pop
xchg
mov
cmc
lods
push
cli
inc
xor
jg
movl
xchg
dec
dec
mov
scas
dec
push
pop
mov
xchg
jl
xor
test
sarl
sbb
xchg
cmp
cmc
jb
push
mov
out
imul
xchg
bound
cmp
sub
test
test
adc
adc
cs
in
sub
cmp
pop
mov
sbb
adc
mov
daa
cli
xchg
sbb
xchg
test
lds
push
ss
sub
adc
pop
adc
inc
push
xor
inc
out
sti
cmp
sbb
jl
xchg
pop
iret
es
pop
lods
popf
add
push
pop
lret
push
cmp
pop
mov
add
jmp
mov
push
bound
pop
cli
mov
or
pop
xor
adc
sahf
lret
jne
adc
inc
nop
lahf
sbb
or
and
stos
sbbb
dec
sub
jne
shr
outsb
icebp
into
pop
lock
addl
stos
ljmp
inc
push
jmp
inc
mov
push
lds
mov
xlat
repz
fs
cmp
sub
mov
inc
mov
cmp
mov
ss
jae
clc
iret
sbb
ret
push
cmpsl
cmpsb
pop
adc
and
cmp
rcll
sub
xlat
gs
inc
sti
adcb
add
jge
lcall
mov
mov
nop
sbb
mov
mov
cmp
loope
aaa
pop
scas
test
add
cwtl
sub
rcll
push
and
cmpsb
sub
movsl
pop
roll
lcall
hlt
xor
xor
pop
cli
dec
mov
cmp
int3
ror
leave
cwtl
sbb
adcb
mov
pop
mov
xor
mov
cmp
adc
pop
mov
rolb
or
sbb
inc
mov
pop
sbb
pop
pop
mov
imul
mov
addr16
mov
js
into
enter
mov
or
popa
push
or
out
add
enter
jmp
inc
arpl
adc
int3
mov
or
mov
imul
pop
xchg
dec
fsubl
add
arpl
push
iret
insb
sub
add
daa
cmp
add
stos
sub
fwait
dec
push
fs
outsl
mov
cmp
mov
mov
inc
mov
fiaddl
inc
xchg
jns
inc
sbb
pop
fisubs
out
fwait
cmp
and
hlt
lret
fsubs
pop
fadds
fdivl
das
cmp
xor
mov
icebp
dec
inc
mov
int
mov
mov
rdtsc
add
retw
pop
mov
lret
je
in
dec
add
push
fwait
pushf
mov
xchg
mov
jbe
xchg
insl
popf
mov
jne
loopne
mov
fcoms
notl
cld
fs
mov
mov
jmp
inc
xchg
xorb
icebp
or
in
mov
lods
cs
adc
push
pop
aad
sahf
test
xor
or
mov
mov
in
es
sub
sub
iret
jmp
mov
insb
and
ret
pushf
push
imul
fisubl
testl
test
mov
and
ficoms
sub
mov
cmpsl
pop
fwait
cwtl
sbb
jo
xchg
push
dec
cmpsl
enter
fs
inc
test
push
cmp
pop
add
add
lods
nop
adc
idivl
adc
scas
pop
arpl
sbb
js
call
xlat
jle
scas
add
popa
dec
cmpsb
mov
mov
loop
sub
aas
or
pop
cli
sbb
je
aad
cmp
icebp
in
pusha
or
sbb
jle
adc
or
lods
sar
cli
jg
ret
iret
lods
in
dec
insb
loope
xchg
xchg
sub
outsl
dec
or
arpl
add
idivb
xchg
out
mov
dec
or
inc
jo
add
pop
pop
imul
mov
fildl
sbb
incb
mov
in
xor
jp
sbb
sub
outsl
xchg
sbbb
fldl
push
push
mov
xchg
pop
or
mov
xchg
icebp
jns
sbb
jmp
inc
in
scas
cmpsl
aam
insl
and
cmp
or
pop
hlt
jp
arpl
fwait
mov
xor
push
aad
push
pop
adc
push
jns
lahf
jmp
and
inc
push
jb
xchg
out
cmpsl
enter
jp
in
xchg
je
and
fisubl
cmp
popa
scas
sbb
loope
xor
and
cmc
push
stos
jbe
cmc
inc
push
sahf
sub
jge
add
jb
jecxz
xchg
push
pop
and
hlt
jns
fidivl
pop
mov
into
jns
push
jle
pop
xor
rclb
movsl
iret
in
mov
es
cmpsb
lret
mov
aaa
xchg
add
cmpw
adc
data16
sub
js
lahf
cmpsb
xchg
cli
js
cmp
out
icebp
outsl
fwait
xlat
jo
pop
sub
call
mov
jbe
and
sub
inc
je
push
outsl
and
repz
adc
pop
add
sub
lahf
jns
mov
call
cmc
push
popa
popf
mov
lock
lds
cltd
iret
adc
pop
dec
jl
lahf
push
sarb
outsl
leave
mov
mov
dec
pop
pusha
add
jae
lock
lahf
out
add
insb
xchg
and
fmull
xchg
mov
aaa
push
jge
xchg
mov
fmuls
jno
and
insb
cmc
xchg
sub
dec
aam
inc
pushf
ror
mov
lcall
mov
clc
mov
inc
and
data16
adc
adc
fsubl
ljmp
aam
leave
pop
ss
fmulp
vandps
adc
inc
pop
xor
loop
in
arpl
and
sbb
xor
mov
mov
cmpsl
ljmp
lods
xor
push
mov
shll
push
icebp
test
sarl
and
inc
mov
jmp
aaa
scas
jecxz
add
cmp
jl
movsl
lds
imul
mov
leave
dec
pop
dec
mov
cmp
cld
popf
roll
in
sar
or
or
push
mov
aaa
cmp
in
mov
lea
orl
sbb
es
push
xchg
xor
cmp
leave
pop
test
jb
movsb
fldenv
cld
jg
ret
push
test
jns
push
push
imul
sbb
mov
ja
push
push
pop
stos
pop
aas
pop
adc
scas
fbld
aam
mov
inc
lods
pop
jp
mov
dec
push
xchg
lcall
xchg
mov
daa
mov
push
clc
jle
mov
stos
cmp
mov
out
and
arpl
es
sub
fnstsw
xchg
dec
xor
mov
pop
or
jno
xchg
pop
je
dec
sbb
push
mov
shufps
daa
lahf
aad
cmp
iret
lods
stos
mov
or
enter
mov
es
add
add
outsl
jbe
inc
pusha
jo
adc
int3
fcoms
adcb
xchg
mov
xor
xor
leave
ss
mov
aaa
push
cmp
jg
clc
jae
xor
push
and
or
jae
mov
jne
or
iret
or
and
stc
lret
jne
ret
inc
sub
xor
jae
inc
shll
pop
sub
into
mov
push
mov
popa
xchg
scas
cli
int3
and
add
out
clc
aas
or
and
fwait
push
scas
bound
in
and
or
test
mov
sbb
std
sbb
mov
ret
or
xor
loopne
dec
jne
sub
adc
aaa
lahf
sub
adc
lds
xchg
xchg
lcall
movsb
sarl
cltd
out
cmp
xchg
aam
mov
mov
andl
stos
aaa
test
mov
mov
daa
testl
jns
fstpl
sarl
insl
sub
stos
aad
sbb
hlt
jp
out
sbb
cmp
add
dec
fnsetpm(287
add
call
mov
fsubl
cmp
cmp
aas
popa
xchg
cmp
pop
test
leave
pushf
jne
in
lret
and
subl
and
mov
outsl
aaa
cwtl
mov
and
lcall
fisubs
push
or
xchg
push
xchg
ljmp
adc
lods
lcall
andl
jae
add
les
push
pop
cli
in
cs
test
jb
xor
xor
aam
xor
mov
mov
dec
stos
inc
lds
push
adc
mov
rorl
adc
mov
stos
sbb
dec
in
adc
xor
cmpsl
xor
mov
loop
sub
fstpt
lock
add
sub
sbb
jge
les
imul
or
movsl
movsb
push
pop
or
sub
mov
aas
or
jnp
mov
dec
dec
mov
mov
mov
cmp
mov
mov
bts
mov
in
dec
int3
fdivl
jb
sbb
and
lret
addb
jns
add
es
into
popa
push
dec
and
push
push
mov
ret
dec
scas
pop
and
mov
shr
ficompl
cmp
das
push
ljmp
xor
push
mov
ds
xchg
sub
cli
or
jecxz
cmpsb
adc
jmp
jmp
xorl
mov
pop
addr16
daa
pop
je
mov
pusha
loope
inc
stc
arpl
adc
int3
push
call
inc
pop
push
out
cltd
and
push
fwait
movl
pop
hlt
out
sahf
cwtl
push
pop
jp
pop
push
xchg
cmp
fs
insb
andl
pop
cmp
in
xor
outsb
sbbl
jecxz
xchg
xchg
sbb
jmp
adc
ficomps
std
pop
sub
cmp
push
fwait
nop
popl
sarb
mov
or
mov
mov
ret
jl
je
mov
vpunpcklwd
test
shlb
add
inc
mov
mov
mov
es
and
mov
fs
mov
add
in
ret
sub
lret
mov
lea
pop
loope
cli
fldenv
call
aaa
into
nop
sub
cli
mov
pop
imul
add
push
pop
loop
inc
sub
mov
loope
and
xchg
mov
call
dec
mov
in
adc
or
loopne
sbb
cmpsb
fwait
sub
jmp
in
ror
push
adc
cmp
sbb
les
inc
pop
adc
les
xorb
add
fisubrs
sbb
inc
loop
jmp
mov
sub
sahf
aas
xchg
xchg
pop
mov
sti
cmp
test
out
mov
loop
in
dec
pop
leave
test
addr16
loope
mov
push
ds
jbe
hlt
xlat
outsl
pusha
xor
sub
out
xlat
adc
sbb
roll
sub
rorl
or
add
and
aad
movsl
stc
arpl
push
fnstcw
add
addr16
mov
adc
sub
mov
sub
lcall
cmpl
dec
sbb
push
jg
das
daa
fisubrs
test
xor
sub
push
ljmp
add
mov
cmc
xchg
fnstenv
and
adc
test
cmp
mov
outsl
rcl
push
les
cli
mov
outsl
incl
imul
lahf
fcmovnu
cmp
mov
mov
pop
sbb
insb
lea
test
aam
imul
add
adc
jbe
cwtl
ja
sbb
outsl
add
dec
into
repz
out
dec
aas
mov
rclb
adc
xor
push
mov
jmp
shll
fwait
pop
mov
lret
into
push
in
or
mov
mov
xchg
shrb
pop
cmp
lahf
sub
cli
outsb
test
adc
dec
sbb
or
aam
mov
or
pop
fists
mov
fs
fisttpl
lods
mov
xchg
or
inc
or
push
push
push
mov
lret
lea
lds
loopne
aas
int
sub
inc
sub
cmp
ja
xchg
cmp
mov
loopne
nop
dec
fnsave
inc
push
mov
push
jne
sub
clc
adc
adc
dec
test
push
sbb
out
push
idiv
pop
xchg
cmp
divl
mov
or
jmp
scas
js
pop
xchg
sbb
lcall
add
nop
mov
lret
pop
fmull
je
mov
pop
fsubrs
add
inc
dec
sbb
mov
adcb
out
inc
daa
les
sbb
mov
mov
push
mov
stos
outsb
sub
lret
sahf
popa
int3
faddl
add
inc
push
push
fistpl
cmc
cli
stc
scas
xchg
push
test
pushf
sub
push
jae
int
sub
in
mov
mov
int3
push
xchg
sar
icebp
int
stc
fwait
xchg
out
fistpll
das
jl
dec
fnstsw
les
or
and
aad
out
cltd
sub
push
scas
lods
flds
push
jge
dec
or
cs
xchg
movsl
pop
js
dec
divl
repnz
xchg
cmc
inc
cmp
insl
push
dec
pop
xor
cs
xchg
sbb
ret
mov
mov
fwait
dec
out
mov
sbb
bound
fmuls
cmpsl
aas
inc
pop
mov
outsb
fiaddl
fmuls
mov
sub
mov
adc
jns
push
addr16
dec
and
add
shrl
cmc
or
push
pop
mov
cmp
jnp
rol
enter
imul
imul
inc
repz
pop
jl
mov
inc
testb
aad
push
push
pushf
push
pop
vmwrite
lods
jae
enter
push
jp
and
jo
divb
prefetchwt1
or
sbbb
mov
je
mov
cli
mov
xchg
sti
jne
or
adc
xor
mov
les
jo
push
sub
fwait
cwtl
xor
dec
stos
mov
jo
sub
add
nop
xchg
cltd
push
nop
inc
jle
flds
sbb
mov
movsb
push
add
pop
mov
xchg
leave
mov
jmp
sub
insl
adc
test
add
push
mov
cmpb
lods
lcall
hlt
repz
test
pop
insb
push
mov
lcall
adcl
or
jbe
insb
js
add
arpl
outsb
sbb
sbbl
dec
iret
arpl
inc
scas
jmp
mov
dec
stc
es
xchg
add
or
jae
jecxz
pop
xchg
mov
testb
and
shrl
or
adc
jg
jne
test
out
aam
data16
xchg
sbb
movsl
dec
and
es
mov
lcall
sub
loopne
inc
push
nop
adc
push
ds
adc
sbb
cmp
les
sahf
dec
lods
pushf
jle
fnsave
add
pusha
or
xor
and
pop
and
xor
out
add
mov
cmpsl
mov
std
jno
arpl
lret
add
add
mov
std
dec
sbb
lret
rcrl
fdivs
or
add
mov
sbb
gs
mov
push
inc
or
cmp
iret
jge
add
mov
aad
ja
inc
icebp
dec
inc
mov
ficoml
adcl
and
movsb
es
mov
cmpsl
jno
xchg
leave
add
cmp
addb
xchg
dec
in
loope
insb
pop
ds
push
push
xchg
ja
jl
mov
ss
dec
lods
jp
add
sub
adc
mov
sub
pop
push
xor
sub
cmp
lock
mov
push
mov
mov
dec
ror
stos
ret
adc
fucomp
es
rcrl
mov
add
outsb
pop
sub
pop
fsub
rolb
daa
pop
fsubrl
and
punpckhbw
pop
ss
pushf
push
imul
mov
lea
mov
pop
insb
sarb
pop
cmpsl
cld
inc
jns
and
sahf
inc
and
imul
pop
or
cmp
pop
imul
ror
mov
ljmp
ffreep
stos
mov
sbb
add
adc
imul
pushf
nop
mov
cmpl
pop
sbb
pop
cltd
add
push
inc
dec
inc
mov
jne
pop
aad
fs
push
mov
inc
lret
mov
rclb
mov
pop
xchg
fbstp
mov
and
in
inc
sbb
pop
jae
into
scas
data16
mov
setb
test
xchg
inc
imul
lods
push
fwait
daa
jecxz
das
sbb
ja
mov
jle
fldl
call
xchg
mov
xor
and
ret
test
mov
std
stos
ja
das
mov
out
mov
jno
jbe
dec
cmc
out
xor
adc
push
in
sub
rorb
cltd
or
mov
sbb
mov
mov
loop
repz
mov
fmull
repz
cmpsl
or
inc
or
push
mov
sbb
jecxz
mov
jne
jmp
jbe
inc
inc
hlt
mov
insl
push
or
push
ret
pusha
push
xchg
inc
mov
push
or
mov
dec
cmp
aam
xchg
jbe
jmp
jg
gs
cwtl
lds
adc
pop
jl
call
mov
pop
out
pop
xor
push
adc
test
jbe
divl
xchg
mov
icebp
movsl
scas
mov
cmp
pop
cmp
jns
cmc
adc
push
and
shlb
es
cmp
fstl
inc
repnz
jb
loop
pop
popf
je
jle
inc
fdivrs
xchg
das
push
int
cltd
in
jmp
jno
jg
iret
xor
cmpsb
push
decb
imul
test
add
or
mov
sbb
ljmp
fsubs
pop
inc
sbb
add
adc
xchg
out
mov
inc
int
xor
dec
add
jle
mov
loopne
fsubl
movsl
pop
int
dec
orb
or
lea
das
or
mov
mov
scas
imul
orl
or
test
jae
sbb
inc
sub
sbb
data16
adc
sub
imul
xchg
sub
mov
rcrb
push
dec
leave
sub
daa
pop
sbb
xchg
movsl
es
int
js
aas
or
es
aad
ds
xorb
stos
dec
cld
push
push
stos
popf
in
jo
mov
add
cs
xor
adc
icebp
lock
push
loopne
cmp
pop
adc
and
jno
ret
shlb
mov
pop
jae
jne
cmp
add
stc
negb
xchg
fisubrl
jnp
inc
stos
mov
int
je
xchg
stos
adc
gs
bound
mov
mov
daa
aaa
ficomps
dec
jle
push
xchg
dec
mov
repz
mov
jnp
movsb
bound
jle
fsub
mov
addr16
mov
add
or
sbb
sub
xchg
iret
push
add
cwtl
push
fnstenv
rcl
andl
xor
in
stos
push
loop
sti
rcl
sub
dec
fwait
fs
mov
ds
bound
test
xchg
mov
fmull
shl
mov
arpl
mov
ja
pop
cmp
fldenvs
out
xor
sbb
les
test
hlt
mov
shll
aas
add
insl
int
aaa
mov
out
dec
mov
xchg
sub
adc
in
dec
cwtl
xchg
cmpsb
aas
ret
sti
or
and
xor
decl
mov
push
xor
xchg
data16
movsb
lods
sub
sar
jo
lods
nop
test
movb
fs
jne
push
mov
pop
pcmpeqd
pusha
pop
into
jnp
push
push
sub
jecxz
cld
inc
aas
jecxz
test
fsubrp
shl
sbb
sub
pusha
arpl
outsb
dec
lcall
xchg
dec
cs
xor
sti
push
loop
adcl
pop
stc
gs
sbb
xchg
rclb
cs
ret
negl
sbb
push
xor
xor
lock
or
loope
bound
adc
mov
mov
test
mov
jae
jnp
add
jecxz
int
orl
addr16
call
push
into
xlat
cli
arpl
mov
dec
mov
adc
into
adc
in
mov
insb
add
xchg
xchg
je
popf
movsl
mov
add
jp
mov
dec
dec
mov
sub
sub
lret
aad
inc
dec
insb
es
or
mov
and
jmp
or
pop
mov
inc
adc
push
es
sub
jge
aam
xor
addr16
sahf
andl
mov
sbb
mov
xor
lret
cmpsb
clc
cmp
adc
push
movsl
lods
dec
jae
inc
mov
mov
xchg
in
xchg
sahf
hlt
lret
test
or
int3
pop
xor
and
dec
adc
scas
test
lods
mov
lret
sbb
ret
add
mov
inc
shr
jne
clc
lods
in
out
or
stos
loopne
xor
cmpsl
fdivr
inc
cmpsl
push
pop
jns
wbinvd
push
mov
push
jbe
dec
inc
fidivl
xor
xor
aas
push
icebp
ds
clc
xchg
add
and
push
push
pop
mov
jnp
fsin
test
mov
movsl
inc
sbb
push
addr16
sbb
add
das
sbb
or
adc
jg
es
sti
andb
push
ds
pop
ficompl
mov
and
jb
fisubrl
ficomps
xor
dec
add
fcoml
or
dec
hlt
sbb
shl
cmp
dec
lret
cmc
daa
mov
xor
es
and
push
inc
add
cmpsl
data16
push
insl
lcall
xchg
sbb
inc
fwait
aaa
push
sti
imul
sbb
cmp
mov
jecxz
dec
mov
sarb
in
jp
jo
test
bound
enter
inc
cmp
xchg
xor
sbb
and
pop
ja
jle
jno
daa
mov
out
dec
enter
cmp
push
push
hlt
leave
clc
cmp
cli
fimull
ljmp
daa
ljmp
jmp
out
mov
stos
movsl
ficoml
movb
cmp
dec
jmp
pop
std
push
sub
sti
add
and
inc
inc
loopne
cwtl
or
sbb
dec
push
out
lock
push
adc
sahf
ja
repnz
in
xchg
pop
dec
popa
dec
test
xchg
fdiv
mov
sbb
fnstcw
push
frstor
dec
dec
out
fstpl
push
pusha
push
cmpb
xchg
icebp
btc
test
cld
jns
lahf
sub
push
incb
leave
push
and
or
inc
scas
leave
add
repnz
sbb
add
loope
rorb
jge
jo
dec
xchg
jne
cmc
rcrl
out
mov
jae
inc
sbb
idivl
cltd
add
into
in
insb
sbbb
inc
and
xlat
faddl
aas
imul
jle
mov
int
jl
ljmp
roll
push
out
inc
mov
movsb
inc
cli
jl
clc
outsl
lods
lods
mov
add
mov
dec
call
push
sbb
sbb
jmp
lahf
cmp
adc
and
mov
imul
dec
outsb
jp
jle
daa
jb
cmpsl
test
shrl
stos
loop
ja
ja
cwtl
and
cmp
sti
jbe
xchg
and
and
iret
ret
xor
adc
cmpsb
xor
mov
mov
loope
cmp
out
shlb
pop
les
loope
add
or
sub
fistl
cmp
mov
pop
in
adc
and
jl
fisubrl
lahf
mov
sbb
std
fistpl
push
addb
lods
loop
push
mov
ja
test
xor
mov
rcll
lahf
xor
ljmp
fisttps
ss
pop
clc
mov
push
add
push
in
push
pushf
mov
mov
test
or
loop
ror
add
ljmp
je
frstor
pop
jg
pop
insb
jbe
sbb
xchg
insb
mov
mov
imul
push
enter
jbe
inc
sbb
and
jo
xor
pop
and
test
add
rdtsc
leave
cmp
jo
xor
jae
cmp
and
jo
dec
aad
mov
push
mov
inc
andl
mov
mov
fidivrl
jmp
nop
cmp
stos
shlb
jp
and
jp
and
mov
sbb
mov
test
cltd
test
push
sub
dec
mov
negl
mov
fcoml
fiadds
mov
cmp
data16
push
insb
jbe
mov
sub
dec
pop
sbb
addl
jl
cwtl
jnp
pushf
dec
std
inc
push
mov
lds
sub
sbb
stc
ret
adc
adc
mov
into
insb
or
mov
insl
sahf
fs
mov
outsb
sub
fwait
stos
push
movsl
jae
xor
mov
mov
pop
das
push
xchg
loopne
jo
mov
cwtl
xor
jmp
fnsave
push
mov
popa
mov
jg
mov
outsl
mov
jg
call
repnz
jns
fnstcw
sub
jno
sbb
fisttps
out
cltd
cmp
inc
stos
fwait
ja
or
popa
daa
movsl
xor
inc
sub
sar
jecxz
xchg
jb
outsb
out
outsl
mov
mov
arpl
lock
loop
or
dec
and
xchg
xchg
or
mov
fisubs
sar
lret
mov
insb
push
xchg
pop
xor
sub
push
and
xor
fidivl
pop
lds
jmp
add
dec
lahf
fucom
push
jl
aas
push
gs
das
xor
fsubrs
sbbb
test
pop
rcrb
fwait
imul
pusha
dec
push
das
cld
pop
lods
test
inc
or
out
mov
jno
sub
mov
rorb
in
push
jo
pop
into
pop
cs
scas
mov
add
add
sbb
sub
mov
mov
dec
test
xchg
or
fldt
pop
cmc
dec
xor
test
lods
inc
push
cmp
xchg
xchg
or
xchg
aas
test
fstps
cmp
and
dec
out
mov
or
xor
sbb
cltd
jge
xlat
mov
xor
pop
dec
rcl
icebp
ret
in
sub
push
mov
lea
pop
add
dec
mov
mov
mov
mov
adc
push
xchg
pop
mov
jle
jle
imul
cwtl
mov
pushf
pop
push
jo
dec
fistps
pop
pop
loope
loop
inc
mov
mov
sub
repnz
fidivl
dec
aam
cmp
pop
and
push
adc
into
movsb
add
sbb
jae
pop
adcl
mov
push
push
xchg
sub
or
mov
cmp
pop
and
push
sub
stc
lds
push
loopne
out
mov
and
dec
sub
and
jl
aaa
cmp
xor
mov
adc
push
xchg
add
cmpsb
inc
lahf
dec
jno
cmp
push
push
jo
dec
repz
push
dec
cld
pop
pop
rolb
adc
repnz
test
sub
je
lea
sub
imulb
mov
adc
mov
mov
push
adc
sar
adc
cmp
ja
rcr
in
repz
pop
hlt
inc
aad
xchg
repz
cmp
je
xor
out
aad
and
stos
sbb
data16
or
andb
cld
push
into
arpl
push
push
scas
iret
aam
add
mov
insb
adc
xchg
or
xchg
jns
nop
test
mov
loop
popf
push
jle
xchg
into
mov
nop
testb
xor
daa
stos
imul
jecxz
sahf
mov
and
cmp
adc
addr16
es
lcall
idivl
cmp
jg
inc
mov
enter
adc
push
dec
push
jne
movsb
sbb
addps
jns
xchg
loope
sub
xor
jnp
imul
hlt
add
iret
sti
in
jp
sti
mov
mov
push
adc
popa
cmpsb
add
fmull
or
and
inc
loop
fiaddl
inc
xor
adc
pop
lods
mov
pushf
int
mov
push
js
add
mov
dec
add
inc
shlb
cs
js
pop
cmp
je
hlt
sahf
fidivrl
sbb
adc
call
dec
mov
mov
out
or
inc
inc
js
xchg
xor
jmp
sarl
push
js
ss
mov
adcl
cmp
xchg
add
push
xchg
jg
testl
stos
add
notb
mov
fcmovnu
inc
mov
pushf
into
jmp
mov
lds
xchg
xor
aad
in
cmp
fcomip
inc
xor
adc
inc
and
iret
push
mov
mov
inc
cmp
or
add
fstl
sti
aas
daa
xor
xchg
mov
int
mov
jo
dec
sbb
jae
xchg
adc
mov
ljmp
jb
xlat
lcall
mov
std
ret
fnstsw
sub
stos
pop
out
lahf
divb
push
and
mov
or
mov
aam
in
insb
mov
rcrb
dec
or
cmp
ss
ljmp
cwtl
cli
repnz
sbb
lcall
sbb
dec
sahf
repnz
sbb
mov
ja
dec
mov
leave
out
in
push
stos
mov
cmp
xor
add
pushf
jb
repnz
sbb
cmp
fadd
in
iret
pushf
sub
push
data16
imul
lods
sbb
scas
xor
scas
fisttpl
mov
or
imul
into
xchg
es
insl
sbb
mov
push
inc
cmc
adc
sahf
lods
xchg
out
out
test
lea
pop
add
mov
push
fimuls
decb
push
fldt
clc
stc
roll
pop
inc
xlat
sti
dec
mov
shll
adcb
pop
xchg
test
mov
inc
adc
cmp
inc
cs
movsb
sub
pusha
imul
aad
add
ret
cmpsl
stc
shlb
lods
push
mov
add
sub
out
mov
repnz
pop
neg
and
fdivs
popf
push
sbb
adc
arpl
ffree
jg
jne
popf
pop
in
iret
inc
mov
pop
pushf
js
xor
adc
mov
push
and
aaa
sbb
test
adc
shrb
dec
or
push
cwtl
pop
pop
gs
mov
outsl
dec
cli
mov
orl
call
xor
les
push
mov
jae
cs
mov
jb
dec
and
out
loop
jmp
mov
jns
cmp
test
arpl
pop
dec
arpl
sahf
mov
pop
stos
stos
mov
xchg
negl
fs
and
insl
ret
loopne
in
lcall
and
xchg
xchg
cmp
dec
out
in
mov
xor
jle
mov
iret
mov
or
stos
in
or
jmp
cld
scas
lret
lods
inc
sbb
inc
mov
loope
cmc
xchg
mov
scas
outsb
es
test
add
pop
push
adc
out
jns
and
incl
iret
in
test
jbe
lock
jne
xchg
push
imul
in
push
and
aam
jmp
inc
lret
inc
cli
inc
mov
adc
sbb
push
iret
addb
cltd
push
jo
adc
dec
out
xchg
in
lahf
adc
leave
mov
pop
lret
cmp
dec
imulb
push
pop
loope
sahf
pop
sub
xchg
xor
or
inc
push
in
jno
sub
ds
repz
inc
std
enter
dec
push
mov
inc
mov
scas
mov
dec
fnstenv
mul
int
mov
mov
push
clc
test
ss
ret
ljmp
jbe
sbb
jb
lea
push
leave
inc
jnp
or
mov
jno
enter
inc
bound
mov
jg
cmpsb
ficomps
push
mov
mov
mov
inc
add
jecxz
nop
test
clc
test
inc
cmp
mov
insl
fadds
jge
mov
pand
lret
gs
inc
stos
mov
stos
data16
pushf
pop
jle
int
push
arpl
inc
mov
pop
jecxz
inc
sub
jnp
test
push
mov
add
jae
pop
sub
std
or
imulb
mov
cmp
in
xchg
popf
push
loop
rcll
push
push
aas
imul
inc
adc
jmp
loope
mov
sub
into
mov
xor
adc
push
xor
vmovlpd
push
in
add
loop
jmp
imul
or
xchg
push
or
andb
push
sbb
daa
outsb
add
mov
mov
popa
mov
pusha
mov
push
sub
jne
in
xor
es
mov
pusha
mov
mov
addr16
popf
push
jmp
mov
out
sub
mov
add
arpl
xor
int
mov
aam
imul
ds
fdivl
add
dec
push
or
cli
mov
cwtl
adc
dec
and
sub
aaa
push
inc
shll
adc
inc
icebp
mov
cli
inc
sti
test
sahf
and
jmp
sbb
in
adc
and
ss
outsb
popa
es
in
scas
push
or
jnp
sbb
das
xchg
jb
sbb
ret
fcoml
test
sub
and
enter
ficomps
std
adc
jo
push
push
cwtl
mov
push
cmp
cwtl
popf
push
inc
insl
repnz
ffreep
filds
xor
ret
xchg
mov
test
mov
mov
inc
adcb
retw
xchg
jae
scas
std
mov
outsl
testl
xor
mov
xchg
inc
mov
sbb
loop
xchg
in
mov
mov
pop
sahf
outsl
nop
adc
test
push
inc
ds
cmpb
dec
cwtl
xor
lods
adcb
pop
out
jmp
push
outsb
loopne
xlat
sbb
ds
sub
and
dec
test
std
inc
xor
inc
bound
jns
cmpsb
cltd
ja
popa
rcl
test
iret
cmp
xor
mov
cmpsb
jge
and
hlt
fs
inc
addr16
jno
jp
not
mov
lds
les
xchg
aam
sbbb
stos
data16
loop
add
cmp
cld
xchg
cmp
movsb
or
out
inc
mov
xchg
push
push
and
cmp
push
pop
test
mov
jnp
incl
mov
test
lds
fnstcw
daa
pushf
mov
mov
sbb
mov
add
mov
inc
ss
addr16
nop
fldcw
dec
out
lcall
mov
daa
or
add
pushf
sbb
inc
arpl
xor
lret
imulb
push
fisubl
lea
sti
hlt
das
mov
clc
ss
cmpsl
or
lahf
das
int3
sbb
sub
ret
pop
pop
cli
cmp
test
pop
arpl
dec
pop
imul
lahf
out
inc
movsb
jae
pop
sub
xor
adc
xchg
sbb
pop
xor
insl
out
adc
mov
and
pop
xor
test
mov
das
aaa
std
iret
mov
jne
fiaddl
jne
imul
jns
or
jg
pop
insb
jnp
inc
cmp
scas
cmpsb
push
cmp
loopne
in
xchg
bound
cmp
les
dec
movsl
mov
pop
ljmp
mov
lahf
xchg
pop
mov
sub
jl
test
les
test
add
jns
std
jmp
xchg
cmc
cwtl
pop
push
or
in
jmp
pop
insl
dec
inc
push
jl
lods
xchg
cwtl
adc
adc
fsubr
xchg
xchg
cli
push
aaa
je
inc
mov
nop
lea
or
jno
mov
es
mov
ret
vmovntdq
incb
adc
int3
adc
lahf
or
cmp
push
negb
add
inc
sbb
adc
cs
sbb
cld
iret
clc
test
outsl
xor
push
lods
unpcklps
mov
or
lcall
adc
jae
pop
bound
cmpsl
push
mov
or
daa
outsb
iret
in
pushf
ret
std
xchg
faddl
xor
stos
mov
push
fstps
jp
pusha
rolb
pop
jle
inc
cmp
xchg
std
cmpsb
and
imul
iret
jne
mov
mov
ficompl
cmp
scas
lods
dec
jl
sahf
xor
mov
ret
and
test
dec
outsb
cmp
jnp
mov
pop
sub
mov
gs
pop
pop
jo
rol
fisubs
mov
push
jp
sub
pushaw
aaa
test
aas
hlt
or
adc
call
jo
mov
jnp
xchg
je
adc
arpl
push
lods
inc
xlat
jne
cmp
cmp
push
in
lahf
jmp
outsl
out
mov
lods
pushf
aaa
push
push
mov
dec
pop
aaa
cmp
xor
adc
jg
sahf
mov
dec
pop
test
dec
and
out
xlat
inc
out
imul
xchg
out
sub
add
cmpsb
and
cs
scas
int
es
lods
inc
insb
xchg
aaa
sub
pop
outsl
inc
push
sub
mov
push
out
ret
push
pop
push
xlat
and
mov
inc
push
push
xchg
lds
loopne
out
or
add
fisttpl
and
cltd
inc
int
cmp
out
sti
subl
and
fxch
mov
stc
mov
push
dec
push
int
insb
loope
pop
xlat
jge
add
inc
sub
loope
cld
shll
cmp
jp
les
lahf
push
fildll
adc
and
aaa
dec
in
scas
fldt
movsl
idivb
or
add
daa
and
icebp
rcl
mov
pop
inc
inc
lahf
and
aaa
push
sbb
lods
insl
or
nop
cmc
mov
or
call
or
xor
sbb
cmp
xor
fsubr
push
xchg
jp
cmp
pushf
add
push
jp
sub
sub
incb
push
popf
arpl
push
cmpsb
xor
sub
pop
push
inc
xor
xchg
push
sbb
leave
ss
mov
lret
icebp
mov
sub
cmpsl
enter
loopw
adc
in
shlb
lods
fists
add
mov
xchg
pushf
test
dec
aad
ss
mov
push
add
sbb
imul
pusha
cli
fnsave
mov
outsb
das
pop
sbb
test
push
push
push
hlt
repz
mov
mov
nop
push
es
lods
imul
ss
test
adc
xchg
cltd
cmc
insl
fs
movsl
sti
inc
out
clc
enter
sub
jb
test
lret
or
leave
cmp
cmp
cmp
push
test
adc
mov
fstpt
lret
aaa
fidivrl
pusha
xchg
cmp
ret
sbb
mov
stos
cltd
popf
mov
mov
rclb
xchg
jo
xor
aam
in
push
shll
ds
adc
mov
mov
add
sbbb
mov
shlb
pop
clc
inc
incb
cmpsl
pop
fs
lcall
inc
cmpsl
xor
shlb
rcrb
fistl
adc
or
outsb
iret
cmpsl
cmpsl
pop
push
cmp
mov
loope
fwait
push
lahf
out
xchg
xchg
pop
rorl
out
test
xchg
movsb
inc
push
into
outsb
sahf
mov
lods
mov
mov
jnp
xor
pop
mov
addr16
and
jge
into
sub
and
lea
scas
jno
mov
outsb
adc
lds
inc
gs
pop
lods
mov
sub
inc
je
push
lcall
in
bound
movsb
pop
and
lahf
paddd
or
test
pop
xchg
push
xchg
jmp
lret
push
xor
js
iret
out
nop
mov
pop
sbb
push
enter
cmp
fstpl
adc
cltd
test
mov
cltd
sbbb
push
push
mov
or
rol
pusha
sahf
test
mov
arpl
pop
ror
dec
mov
inc
hlt
jo
mov
and
xchg
lods
cld
add
push
sub
xor
xlat
lret
sub
mov
inc
hlt
adc
xchg
sub
or
pusha
sub
jp
aas
or
aam
mov
iret
incb
jno
xor
in
fadd
loopne
je
mov
pop
lret
inc
shl
das
aas
mov
cld
sbb
mov
aaa
popf
gs
mov
repz
sbb
cmpsl
add
mov
in
xchg
pop
pushf
dec
mov
adc
punpcklwd
pop
sub
pop
jmp
incl
scas
inc
adc
jg
or
ficoml
cs
or
xchg
lods
fiadds
movsl
cmpsb
jae
jne
sub
sbb
es
mov
mov
fists
lods
ret
in
xlat
jno
in
ficoms
out
push
leave
inc
in
das
cmp
sar
or
cmpb
aam
xor
mov
dec
js
es
mov
dec
add
filds
arpl
cmpsb
dec
pop
xor
add
inc
or
popf
cmpsb
add
leave
movsl
push
fldt
mov
cmc
and
adc
in
dec
or
pop
fsubp
xchg
sub
xchg
add
je
out
pop
bound
sahf
add
push
scas
mov
or
shrl
inc
add
sbb
push
or
lcall
out
cltd
fwait
mov
add
dec
lock
lret
movsb
or
in
das
mov
pop
movsl
sbb
pop
xchg
cmpsl
nop
insb
dec
imul
adc
outsl
pop
sbb
jb,pn
cmp
or
pushf
cmp
repz
andb
lret
jb
loopne
cmp
je
insl
fdiv
xor
ja
das
aad
mov
mov
dec
imul
jae
lcall
pop
repnz
inc
cmp
lods
mov
dec
idivl
xchg
test
pop
outsl
daa
xchg
cmpsl
xor
les
and
inc
in
in
aas
in
stos
push
cs
inc
jbe,pt
std
sarb
shl
push
and
pop
lcall
jmp
int3
in
ja
pop
sbb
sub
cmpsl
notl
mov
push
shr
loopne
in
hlt
or
xchg
imul
and
push
icebp
popa
test
aam
adc
mov
jg
ljmp
shll
data16
mov
push
pop
aaa
fwait
rorb
sbb
loope
nop
jmp
sti
imul
popf
test
insb
mov
adc
or
cld
repz
into
in
add
bound
pop
cmpb
sbb
ret
stc
mov
bound
test
adc
leave
pop
xchg
mov
fdivr
arpl
fwait
je
ljmp
imul
repnz
movsb
dec
xor
fists
into
or
mov
xchg
decl
mov
ficoms
pusha
sbb
inc
imul
inc
inc
dec
push
rorl
push
pop
dec
or
pop
ds
aam
repz
aas
std
xchg
xor
xchg
xchg
or
xchg
xchg
sub
cs
loope
data16
rcrl
or
mov
fcmovb
fldcw
shr
jmp
lods
sub
incb
or
mov
dec
shr
mov
cmpsb
mov
push
fstl
mov
xor
out
dec
inc
outsl
jns
jns
sub
dec
mov
popf
adc
lcall
cmp
decb
jmp
int
add
std
shl
sahf
and
xchg
dec
pushf
mov
mov
pop
insb
adc
lahf
dec
mov
out
dec
arpl
sti
sahf
jbe
call
rcll
dec
mov
nop
and
pop
pop
cmp
add
inc
jns
mov
inc
leave
out
dec
mov
sti
jae
stc
and
xchg
inc
divb
das
sub
out
fildll
add
adc
imul
cmpsl
push
pop
or
repnz
jne
in
shl
daa
ljmp
es
in
jo
mov
cwtl
lods
enter
lret
pop
xor
imulb
inc
or
mov
and
add
add
loope
shr
xor
push
rcll
lret
sub
js
lret
in
movsb
loop
push
xchg
movsb
nop
push
sub
mov
add
sarb
gs
iret
mov
dec
cs
gs
sub
add
pop
dec
mov
lds
shrl
pop
cmc
in
dec
cmc
mov
push
repnz
rcrb
xor
dec
dec
jmp
ja
add
fdivrl
pop
pop
mov
mov
push
cmovno
je
enter
jle
mov
cmp
inc
push
loope
in
fcomi
dec
in
in
push
ljmp
iretw
mov
sub
rcrb
aad
mov
dec
add
or
ljmp
mov
and
push
pop
push
ds
inc
push
insl
icebp
xchg
arpl
fisttps
cs
pop
dec
xor
add
insb
mov
lcall
pop
dec
mov
pop
addr16
aam
cs
sbb
and
fistpll
xor
push
dec
pop
daa
mov
xchg
scas
ret
adc
xchg
cs
js
push
jbe
jmp
mov
arpl
std
xor
imul
mov
xchg
xor
inc
int3
out
sbb
addr16
fiadds
movsl
pop
inc
roll
pop
negb
sbb
push
cmc
mov
and
repz
xlat
xor
mov
mov
cmp
jecxz
add
xor
pop
jns
xor
cld
pop
dec
jbe
mov
je
fisubs
incl
inc
shll
test
mov
mov
in
repz
pop
test
push
fstps
mov
mov
pop
mov
xchg
stos
fcmovne
fiadds
pop
jnp
jl
les
call
lcall
push
lcall
shll
pop
int
pop
jmp
or
jge
lret
rcr
sti
cmpsl
inc
mov
jb
dec
lret
sub
jns
popa
jnp
cmp
stos
and
mov
ds
gs
mov
jecxz
add
mov
pop
enter
mov
imul
in
xlat
add
movsl
push
clc
or
xchg
inc
pop
das
out
sahf
aam
mov
inc
pop
sbb
or
jmp
repz
cmp
int3
mov
mov
sub
sbb
inc
mov
in
cli
and
sub
cli
pop
stc
push
outsb
jl
sbb
lods
sbb
mov
pop
mov
push
dec
ds
test
and
test
js
pop
arpl
mov
lahf
addr16
bound
mov
lret
xor
and
ret
imul
xor
sub
test
leave
pushf
cmp
dec
insb
lock
ret
loop
fld
push
aas
sbb
filds
sbb
add
inc
mov
inc
cltd
mov
cmpb
das
call
imul
addr16
cmc
mov
jle
enter
stc
ficomps
pop
cmp
xor
cmpsb
test
xchg
sbb
pop
pushf
ficoml
faddl
repnz
rcrl
pop
sbbl
xchg
scas
loop
scas
inc
mov
sbb
sqrtps
popf
icebp
push
xor
mov
ret
shlb
scas
rcrb
mov
pop
and
push
adc
data16
stos
inc
dec
dec
jno
test
jle
test
scas
movsb
fs
push
rcrb
enter
call
sub
jbe
mov
shrb
nop
nop
sbb
jbe
xchg
aas
lods
popa
in
jmp
mov
cmp
js
ss
xchg
sti
aaa
xor
rcl
jno
xchg
and
sub
pop
push
cld
adc
icebp
fdiv
insl
pop
ret
bound
push
sbb
data16
mov
call
aaa
pop
lea
les
inc
cwtl
lods
lcallw
into
xor
xor
insl
jo
push
in
rcl
sub
clc
and
inc
pop
movsb
cmp
ljmp
cmpsb
push
imul
mov
and
dec
out
dec
jnp
shlb
mov
lcall
jmp
and
jle
jns
adc
sbb
jne
adc
ret
adc
scas
loop
das
xlat
cmp
dec
test
push
and
xchg
mov
negl
das
mov
test
xchg
and
out
test
sub
or
mov
and
enter
dec
jmp
inc
mov
mov
into
mov
add
test
and
sbb
push
and
sub
sti
mov
push
adc
out
push
cmp
jb
les
inc
xlat
rclb
push
xchg
dec
inc
cmp
jb
sarl
dec
mov
mov
test
insb
jne
int3
nop
mov
cmpb
xor
push
cli
cmpsb
orl
les
cmpsl
outsb
push
mov
shll
mov
repnz
test
dec
dec
fmuls
and
loope
loopne
roll
js
ds
stos
pusha
cmp
push
mov
ljmpw
repz
rorb
or
imul
mov
and
or
mov
xor
ds
test
jmp
mov
fidivl
xor
mov
mov
aas
mov
jge
pop
and
imul
lcall
lea
aam
or
sti
mov
subb
stos
mov
mov
in
add
scas
lds
add
dec
and
sbb
into
ds
mov
mov
imul
adc
int3
into
or
cmp
testl
adc
pop
stos
repz
out
push
jp
adc
adc
hlt
sbb
inc
cmp
ficompl
arpl
mov
and
sti
pop
inc
sub
outsl
inc
pop
enter
stos
or
gs
push
adc
add
bound
cmpsl
das
test
xor
dec
rcrl
repnz
popf
in
cltd
and
das
pop
insl
popf
loope
ret
mov
xor
jno
fisttpll
xlat
mov
or
rcr
push
mov
pop
xor
mov
testb
int
jecxz
inc
sub
pop
mov
mov
adc
pop
sete
or
ljmp
int3
int3
sub
inc
lock
pusha
mov
pop
dec
push
pop
adc
pop
cmpsb
int
xor
lds
jb
mov
mov
mov
cmpb
push
stc
pop
and
cmp
and
andl
jg,pn
js
outsl
cmc
out
mov
pop
lea
xor
sub
mov
push
stc
imul
sub
xor
repnz
aas
sahf
mov
sbb
or
ret
sbb
rcl
gs
cmc
pop
push
push
sbb
push
add
pop
sub
or
loope
xchg
add
das
fnstcw
in
insl
inc
cmp
and
addr16
in
decb
jnp
sbbl
stos
out
xchg
out
cli
jb
aas
pop
je
leave
fcmovnu
push
test
dec
repz
nop
das
mov
nop
sub
jae
rorl
je
lea
jnp
inc
or
movsb
push
fmull
cmp
rcrb
and
out
fisubrs
mov
das
outsl
push
mov
mov
add
sahf
push
and
imulb
sbb
in
sbb
imull
cli
insl
sbb
push
push
and
mov
repnz
xor
addb
fildll
and
jns
xchg
cmp
sub
bound
sbb
mov
xchg
cmp
and
cmp
les
enter
int
xor
imul
jae
pop
sbb
movsl
mov
xchg
sbb
mov
or
ds
inc
pop
insl
add
fxch
jp
mov
pop
popf
jb
mov
xor
xor
pusha
sbb
sbb
jmp
adc
xor
mov
pop
or
mov
addl
test
ficomps
and
inc
mov
xor
fimuls
lods
xlat
iret
ds
in
and
or
cmc
cli
jb
xchg
dec
jecxz
push
fisubl
mov
mov
out
xchg
inc
daa
gs
and
ret
pop
arpl
pop
mov
loope
add
push
add
xchg
cli
sub
mov
add
mov
push
cmp
adc
sbb
repnz
dec
xor
or
xchg
mov
mov
ds
out
lock
ja
pop
xor
fs
ret
fldenv
insb
fwait
inc
fisubl
push
lods
cli
shll
pushl
adc
loop
sub
pop
imul
aas
xor
out
pop
xchg
jecxz
ljmp
bound
and
sahf
out
sbb
add
sti
sbb
sub
rcl
xchg
jl
xor
jecxz
mov
cmpb
aam
xchg
sbb
mov
mov
rol
sti
xchg
imul
decb
push
sbb
push
push
and
cmpsl
outsl
xchg
out
idiv
mov
xor
cmpsb
fwait
xlat
test
in
or
in
fadd
shlb
repnz
add
aad
jmp
xor
jb
std
out
in
cli
rol
dec
mov
repnz
mov
vpmacsdql
xchg
sti
pop
jb
mov
jmp
xchg
lock
xor
lret
fs
enter
loope
ljmp
stos
popa
je
cmc
scas
lea
or
lods
ss
cs
sub
or
js
fwait
cmpsl
adc
add
dec
cmp
mov
dec
in
outsb
or
js
pop
xchg
shrl
mov
nop
inc
mov
dec
push
push
scas
mov
dec
jb
mov
andl
sub
in
lea
xchg
add
ret
xchg
into
dec
xchg
cmpsl
shll
jge
mov
mov
arpl
add
lods
scas
std
les
sarb
adcb
jp
iret
adc
adc
jno
mov
cwtl
adc
mov
jp
cmpsl
mov
or
inc
or
adc
ds
xchg
or
mov
pop
je
xchg
pop
cmpsl
xchg
pop
and
shlb
mov
inc
shl
pop
scas
jnp
mov
mov
out
je
lret
imul
pusha
int3
push
cmpsl
faddl
or
fildll
mov
movsl
adc
push
daa
aam
sbb
fstps
push
loop
xchg
push
mov
lahf
popf
jne
xchg
fidivrl
and
mov
repnz
fldenv
test
popf
and
aas
pop
rcll
adc
dec
pusha
jl
lret
jnp
adcl
sub
jnp
inc
cmpsl
xchg
outsl
out
ret
jns
pop
pop
adc
mov
negl
and
or
lds
addl
mov
dec
xchg
jae
and
mov
mov
inc
popa
cmp
inc
jecxz
adc
adc
mov
xor
pusha
jno
shrl
out
stc
insb
cld
std
mov
sub
sbb
jbe
insb
dec
cli
pushf
repz
lods
dec
mull
or
inc
mov
push
aaa
pop
xor
out
inc
inc
jbe
pop
pop
iret
ret
sbb
shlb
adc
in
jl
cmp
cmp
dec
loopne
mov
inc
sub
or
insb
mov
push
fwait
push
mov
pop
das
cli
push
scas
test
and
cmp
jb
push
insl
test
aad
imul
pop
mov
addr16
jno
pushf
dec
push
inc
inc
sahf
jno
xlat
xor
ficoms
aaa
cmp
clc
mull
adc
pop
clc
ljmp
mov
pop
and
push
jge
leave
xor
add
testb
enter
and
ret
aad
push
rcrb
les
movsl
mov
les
cltd
push
push
jecxz
outsb
sub
cmpsl
dec
movsl
cs
xchg
mov
inc
out
popa
enter
cmp
mull
xor
sar
pop
out
push
push
adc
icebp
sub
out
out
dec
jp
in
jns
cmpsb
das
jnp
mov
xorb
pushf
pop
fisubrl
nop
pop
out
divl
rcr
in
popa
jns
xlat
test
xchg
arpl
xor
call
xor
es
adc
push
sahf
pop
pop
sub
add
adc
xlat
push
test
or
sbb
loope
out
sbbl
mov
negl
cmp
adc
clc
movsb
mov
mov
test
jg
cmc
add
pop
lds
lods
addr16
add
adc
scas
jns
faddp
mov
cmc
mov
dec
lret
je
out
adc
xchg
cmp
retw
xchg
cmpsl
mov
gs
push
imul
clc
in
sbb
popa
jl
imul
hlt
int
js
cmp
mov
push
or
mov
int
je
dec
lock
cmp
jbe
fsubp
cmpsl
xor
mov
dec
cmc
ds
popf
xor
xor
repz
rcll
das
out
stos
cwtl
inc
scas
stos
push
in
insl
fisttpll
cmc
stc
pop
fidivrl
sub
das
cmpsl
es
xchg
and
xor
xorb
xchg
jns
or
dec
jbe
pop
push
sbb
jg
repz
sbb
pop
xchg
rorl
sbb
inc
inc
jp
leave
loope
add
xchg
jl
jno
add
fsubp
stos
xchg
addr16
in
and
mov
ss
or
lods
movl
jge
clc
xor
xchg
push
pushf
xor
mov
and
pop
stc
int3
push
ljmp
addr16
lret
add
cs
cwtl
xor
popa
pop
sub
inc
test
stc
sbb
or
or
arpl
adc
nop
sbb
sbb
sbb
mov
pop
aad
mov
cmp
pop
outsb
cs
faddp
cmp
popf
out
cs
inc
lahf
pop
popf
ret
lahf
xchg
inc
xor
jle
aaa
xor
in
pop
test
lods
inc
mov
mov
andl
cltd
cmp
dec
fistl
shll
mov
jne
mov
jno
mov
ja
dec
or
mov
cmp
adc
mov
in
xchg
cmp
xorl
pop
sub
movsl
push
and
xchg
pushf
push
or
repnz
imul
mov
into
xchg
adc
mov
inc
test
jb
pop
shrb
mov
fcmovnb
push
ds
ret
pushf
xchg
mov
lds
popf
adc
pop
fldlg2
push
push
mov
jne
pushf
leave
orl
adc
jne
push
rcr
pop
cmp
dec
or
sub
lds
pop
lret
sbb
pop
mov
push
imul
add
dec
add
stc
jno
fwait
push
das
dec
jle
xchg
fisttpll
lods
mov
adc
ja
xchg
pop
mov
enter
inc
cltd
jno
jnp
mov
shll
sub
pop
hlt
pop
xchg
andb
adc
stc
sbb
hlt
popa
stos
sahf
pop
nop
mov
adc
or
mov
mov
add
mov
lcall
rcll
repnz
mov
mov
add
pop
push
pop
stos
dec
mov
xlat
mov
shrl
sahf
mov
das
mov
mov
addr16
xchg
and
mov
repnz
in
test
push
cmp
movsl
movsl
and
ds
mov
xchg
adc
mov
jae
xor
jae
rcll
sbb
pop
jo
or
add
imul
rclb
inc
pop
in
mov
cmpsl
push
cld
sbb
or
mov
add
xchg
lods
in
mov
mov
xchg
popa
jecxz
xchg
out
add
rclb
and
adc
call
cmpsb
call
inc
mov
sub
insl
jmp
mov
cwtl
cmp
and
xor
mov
sti
mov
jg
inc
adc
mov
rcl
ss
inc
cmc
mov
add
mov
shl
push
jge,pt
xchg
and
adc
cs
cmp
fildl
xchg
sbb
stc
dec
add
lods
pop
stc
hlt
cmpsb
mov
jecxz
adc
mov
xchg
je
add
in
jmp
pop
pusha
and
inc
add
ret
orl
mov
adc
sbb
jge
scas
imul
xor
or
icebp
fidivrl
sbb
jne
push
loop
fcomps
shl
push
mov
insl
pushf
fdivl
mov
aaa
outsl
stos
dec
cltd
mov
fmuls
adc
pop
insl
imul
pop
push
add
xchg
nop
dec
inc
fstl
inc
iret
jecxz
shlb
and
adcb
popf
and
cmpsl
mov
mov
pop
test
jmp
repz
and
add
fadd
cld
cld
mov
dec
ret
adc
sti
lods
mov
insl
jl
cmp
lods
fyl2xp1
pop
jne
xlat
into
stos
jno
mov
jecxz
dec
mov
mov
push
xor
sub
cmp
sub
popf
sar
add
movsb
movsl
pushf
mov
sub
push
hlt
es
mov
sarl
stos
add
lods
cmp
xchg
js
ds
mov
xchg
ds
mov
in
xor
and
jge
push
scas
or
in
out
rcll
jecxz
push
scas
jge
adc
rorl
and
dec
cmp
ljmp
outsb
add
cltd
repnz
repz
pop
dec
cltd
push
stos
cld
jnp
or
cld
fsubs
and
adc
stc
xor
xchg
sub
scas
pop
cmp
pop
loope
mov
pop
adc
std
mov
jnp
popl
outsb
and
mov
imul
mov
or
mov
xrstors
adc
mov
push
cli
adcb
ficoms
je
xchg
mov
rclb
test
adc
add
mov
imul
dec
ret
mov
add
ja
cmp
int3
adc
pop
jle
outsl
cmpsl
outsl
cmpsb
adc
and
pop
ljmp
fwait
mov
iret
ljmp
les
loop
add
cltd
jge
and
or
push
xchg
bound
jmp
repnz
fsubl
in
push
rcl
mov
xor
into
sbb
fidivl
cmp
pop
loopne
sub
inc
sahf
arpl
cld
cmpsl
xor
jg
aad
mov
rorl
jno
fildl
xchg
divb
in
cld
add
jae
imul
loope
pop
pop
push
dec
leave
mov
jb
jns
pop
rcll
and
repnz
sub
sub
dec
mov
mov
fistps
mov
sub
jo
call
cmpsb
sbbl
and
pusha
xor
and
add
sarl
stc
add
add
xchg
xor
movsl
jns
cmpsb
push
movsl
dec
jmp
jle
xchg
xchg
jmp
fwait
pop
mov
pop
cmp
add
sbb
les
cmp
icebp
std
jp
pop
push
and
inc
mov
cltd
arpl
dec
stos
fstpt
cwtl
inc
or
inc
xor
and
jmp
add
mov
jne
jae
rcrl
shrb
jg
add
mov
popf
stos
lcall
mov
nop
rcll
mov
dec
mov
xchg
dec
dec
and
mov
das
push
daa
sub
or
addr16
jp
nop
ret
lea
inc
jecxz
scas
nop
test
sbb
mov
lds
mov
xchg
lods
imul
movsl
jae
stos
ja
movsl
stc
cmc
mull
lock
lea
mov
rorl
xor
xchg
push
mov
les
lods
cmpsl
jmp
out
cld
test
loop
add
sub
mov
sar
cmpsl
add
aaa
push
cmp
sub
sbb
jmp
ja
mov
aad
int
inc
fidivrl
xor
pop
insb
hlt
mov
jb
pop
test
or
ja
pop
mov
and
jbe
aaa
jo
fndisi(8087
mov
popf
push
lret
mov
mov
lods
jb
ja
adc
pop
rcrl
fstl
xchg
mov
and
movsb
cld
mov
or
jl
btc
mov
mov
cltd
mov
out
orl
ficoms
outsl
arpl
xchg
lcall
mov
into
push
leave
fsubrl
sub
je
insl
ficompl
out
imulb
or
dec
mov
xor
call
dec
mov
push
push
ds
mov
mov
adc
adc
jg
xor
and
mov
ret
push
add
lea
lock
sbb
or
out
insb
test
test
mov
ja
jp
pop
jecxz
jecxz
ljmp
dec
insb
mov
stos
inc
orl
stos
jecxz
jle
inc
cs
aas
or
in
out
fwait
fwait
mov
lret
lret
lcall
push
pop
push
sbb
outsb
inc
jns
lds
push
lock
leave
add
cltd
ds
push
inc
mov
fists
orl
in
xchg
divb
out
popa
outsl
push
mov
pop
push
mov
push
or
repz
sbb
xchg
insl
xchg
push
inc
cmp
cmp
push
pop
cmpsl
sub
dec
push
mov
pop
xorl
mov
inc
adc
mov
and
pusha
popl
push
sahf
callw
cmp
loop
addb
cmpsl
pop
adc
nop
push
adc
bound
stos
neg
adc
rcl
repnz
loop
dec
into
xor
ja
imul
loopne
in
ret
aas
xor
ds
adc
les
clc
stc
add
decb
sbbb
popf
pop
movsl
mov
sbb
adc
jbe
xchg
outsl
in
and
mov
or
push
pushf
dec
sub
imulb
sbb
add
ffreep
mov
test
dec
mov
cmp
daa
xchg
mov
gs
ret
fs
jge
or
mov
orl
das
mov
dec
mov
mov
cwtl
inc
mov
push
push
cmp
enter
add
inc
add
mov
and
filds
mov
fwait
and
inc
adcl
push
out
stos
mov
inc
cmpsb
sbb
clc
movsl
ja
ja
cbtw
stos
xor
xchg
hlt
sbb
insb
dec
sarl
mov
mov
rcrl
mov
mov
push
gs
jp
bound
repnz
sbb
sbb
and
ss
outsb
push
movsb
cmp
jae
adc
xchg
add
gs
dec
aaa
ljmp
pushf
cwtl
int
loope
or
sahf
or
cwtl
fnstenv
out
fstpl
cmp
mov
lock
repz
sub
arpl
add
roll
sbb
outsb
lea
xchg
xchg
fdivrl
sbb
cmovl
insb
loop
jae
mov
push
and
lret
sbb
pop
aam
out
test
testl
adc
in
mov
pop
mov
test
lcall
pop
add
test
push
and
fcomps
xchg
adc
ja
xchg
push
jecxz
lea
or
add
push
sbbb
inc
stc
outsl
loopne
pop
dec
xchg
jnp
xchg
stos
fs
jmp
sbbl
popa
cmc
xor
out
xchg
enter
shlb
bound
dec
in
jbe
loop
sub
in
and
push
aam
push
dec
hlt
addr16
lahf
out
repz
jmp
or
nop
push
stc
aas
or
inc
into
xchg
pop
fwait
lret
fidivl
xchg
clc
xchg
push
push
mov
inc
mov
jp
jecxz
jne
jp
lock
mov
sbb
mov
movsb
cmpsb
pop
lock
xor
loop
leave
inc
call
pop
push
addr16
or
popf
add
out
insl
pop
push
cltd
pop
mov
sub
jmp
mov
rcrb
add
inc
movsl
je
cmpsb
mov
cmp
test
mov
mov
std
fdivrs
and
xchg
test
ljmp
ret
xchg
mov
in
push
mov
fyl2xp1
push
into
inc
cmp
out
lds
test
inc
orb
jns
jmp
cs
mov
sbb
lock
test
mov
jbe
dec
ljmp
add
push
shrb
xor
cmp
push
insl
xchg
inc
mov
arpl
and
jbe
adc
ror
cmp
ret
mov
sub
jle
pop
and
lcall
adc
sub
stc
add
call
push
xor
xchg
out
lgs
cli
repnz
or
daa
cmp
leave
into
test
ja
pushl
and
out
xchg
adc
push
mov
das
pop
or
inc
pop
mov
lss
fst
pop
loope
mov
repnz
sub
loope
rcl
mov
or
mov
ds
add
in
push
jp
jg
jns
pushf
adc
in
lods
es
push
inc
dec
imul
mov
jne
dec
add
adc
enter
out
dec
xchg
or
cmp
int
and
jns
add
dec
or
jns
mov
jo
fstpt
mov
cmp
push
jb
push
addr16
insl
dec
pop
insl
aad
mov
push
mov
jge
jmp
or
mov
lret
cmp
call
sub
xchg
es
stos
enter
and
sub
jg
mov
or
int
rorl
xor
loop
or
mov
sbb
xchg
adc
jno
pop
inc
pushf
or
ret
sub
js
loop
stos
leave
out
push
stos
and
in
push
in
push
fidivl
stos
out
pop
fsub
push
pop
sub
call
addr16
adc
add
jmp
dec
jle
cmp
cli
inc
inc
sub
lret
pusha
in
imul
fidivrl
jns
ljmp
repnz
jo
pop
and
push
or
adc
fimull
in
dec
jnp
leave
adcb
inc
sarl
loopne
jae
loop
out
push
pop
sahf
sarl
ss
mov
into
sbb
lret
repnz
dec
xor
sub
pop
out
jne
dec
aam
repnz
aaa
mov
in
mov
pop
pop
or
fsubp
ficomps
outsb
ds
out
movsb
inc
pop
fldenv
in
lds
aas
cmp
pop
adc
dec
sbb
mov
push
adc
xchg
push
pop
arpl
aas
sub
shlb
xor
pop
push
in
xchg
fnstcw
lfs
add
cmpsl
jge
push
out
inc
in
outsl
outsl
hlt
fisubrl
cmpsl
and
addr16
pop
fcmovnb
lea
jns
xor
pop
pop
lahf
dec
cli
push
push
or
repz
jle
mov
lods
pop
addl
xchg
rorl
mov
push
jp
addb
clc
cmpsb
mov
imul
cmpb
push
xchg
lods
jb
pop
jnp
rorl
push
mov
mov
cli
or
push
mov
pop
outsl
aad
sbb
inc
aas
stos
mov
sbb
mov
xchg
adc
ja
push
int
nop
iret
add
std
cmpsb
test
mov
mov
cmp
xchg
inc
out
sub
sub
xlat
cmp
cmpsl
xor
iret
test
add
dec
sar
adc
inc
rolb
ja
mov
jno
jg
jae
pop
mov
orb
jns
xchg
fadds
dec
mov
loopne
pop
les
push
jns
push
adc
fdiv
jg
in
sub
jl
adc
jae
in
adc
jge
ss
ret
int
pop
sub
sub
pop
ret
pop
in
ja
popf
lret
mov
sbb
xchg
sti
in
insl
adc
push
out
stc
inc
xor
test
xor
popa
call
movsb
cwtl
mov
mov
sbb
push
jns
sbb
mov
sbb
sbb
mov
ret
dec
das
ror
imul
lahf
jl
jne
test
aad
ds
ds
imul
fdivrl
ja
jge
lods
push
and
xchg
push
rcll
xchg
adc
push
in
mov
stos
jl
mov
ret
gs
or
jp
sub
movsl
mov
hlt
std
ljmp
addr16
imul
leave
dec
movsb
out
popf
sti
enter
in
add
adc
jle
fwait
rcll
mov
fimuls
arpl
subl
inc
bound
aaa
inc
cmpsb
loop
popf
lcall
inc
push
mov
mov
das
sbb
jae
clc
push
jno
lret
mov
das
movsb
out
add
clc
dec
jle
mov
fldcw
inc
in
loopne
loopne
dec
xchg
cs
and
sub
sbb
adc
hlt
sbb
insb
mov
xor
orb
dec
stos
bnd
pop
lock
add
movsb
xor
sub
mov
mov
mov
pushf
cltd
xchg
push
push
mov
out
sub
cmc
mov
mov
cli
pop
or
cmp
push
in
call
jmp
shlb
inc
lds
xchg
loope
in
int3
les
mov
cs
mulb
push
push
repz
push
xor
xor
inc
lcall
pop
lcall
cltd
jmp
xchg
cmp
movsb
addr16
sbb
aam
push
push
lret
insb
lret
ret
or
add
adc
mov
cld
jns
xchg
sahf
cmp
jae
int
pop
repz
dec
repz
in
xor
lea
push
push
jle
bound
jge
scas
mov
mov
mov
idiv
jno
or
filds
fstps
negb
cmpsl
fmull
xor
inc
call
jae
xchg
in
test
outsb
lcall
ja
cli
movsl
in
xchg
sub
jl
movsb
adc
cltd
shlb
push
loop
xor
lret
sbb
pop
aad
xchg
aaa
inc
mov
not
sub
inc
movsb
cmp
jns
inc
loopne
clc
mov
adc
jge
xchg
xchg
push
inc
in
popf
and
das
jmp
fwait
or
out
cltd
dec
pop
mov
push
repz
push
stos
jmp
jg
xor
pop
mov
or
jnp
xchg
sbb
inc
loop
jb
jo
dec
int
xor
sbb
in
push
xchg
jno
jecxz
dec
dec
sti
shlb
fists
out
cmc
lfs
mov
jp
in
mov
dec
popf
std
xlat
cmp
scas
nop
cld
pushl
mov
sub
int3
jae
insl
lock
sub
mov
cld
cwtl
xor
fstpl
pop
adc
dec
adc
jno
xlat
add
mov
and
lds
jp
cwtl
clc
jae
sbb
popf
xchg
insl
and
cmp
cli
mov
or
call
fildll
xor
mov
and
push
cmp
imul
jp
sub
push
cmpsl
outsb
inc
je
and
push
xchg
cli
cmc
pop
and
push
sbb
sub
xchg
mov
test
xchg
in
dec
push
aaa
mov
ret
sbb
cmc
fcmovnbe
dec
mov
repz
adc
adc
pop
mov
mov
pop
push
xchg
push
ffree
push
sbb
and
sub
jno
mov
xor
lret
test
fbstp
adc
pop
sbb
xor
jne
mov
cli
pop
jo
fbstp
out
lock
cmpsb
mov
out
lock
push
lea
popa
mov
mov
lods
mov
inc
ljmp
cmp
mov
jl
pop
pop
sub
inc
leave
cmpsl
lock
ret
lods
leave
popf
mov
cmp
pop
ret
add
inc
xchg
cli
shll
xchg
ret
stos
xor
mov
mov
and
jle
pop
fadd
pop
mov
rclb
imul
cld
lods
lret
jne
imul
jmp
rol
pop
push
cmpb
mov
sahf
loop
adc
mov
subl
js
jmp
lret
fsts
icebp
in
add
push
outsl
dec
lods
mov
add
fisttpl
andb
sbb
fisttps
mov
mov
jg
jae
and
cmp
gs
aas
sub
cmp
mov
roll
pop
cld
inc
mov
sarl
aas
sbb
test
andl
mov
jne
movsl
loop
aad
cmp
cmc
mov
sahf
daa
push
popa
or
dec
inc
mov
fsubl
xlat
in
sbb
push
jg
mov
jae
mov
adc
cld
daa
negb
xorb
icebp
sbb
pop
fcoms
sbb
je
scas
pop
or
sub
push
pusha
mov
mov
roll
daa
xlat
aaa
das
fdivl
fdiv
in
sub
or
sub
icebp
mov
sub
data16
jnp
xchg
shrl
notl
sbb
shlb
div
sahf
xor
mov
and
and
xchg
or
movsb
fstl
stc
pushf
pop
push
push
mov
filds
mov
loopne
fidivs
mov
or
inc
adc
pop
push
dec
dec
aam
pop
push
xor
push
add
flds
andl
sub
enter
leave
in
fisttpll
xchg
enter
jle
pusha
add
xor
dec
scas
aaa
int
mov
je
test
sbb
stc
ret
and
sahf
stc
push
jmp
xor
xor
adc
sub
bound
lock
jne
cli
mov
insb
rcrl
push
xchg
out
add
fdivrs
mov
out
fldcw
hlt
add
sub
fs
clc
adc
jp
data16
lods
adc
sbb
insb
shll
js
adc
cwtl
push
fbstp
xor
push
fxrstor
test
xchg
bound
xorl
mov
sbb
pop
push
cmpsb
aam
mov
lods
pop
inc
cld
out
loopne
aad
daa
shl
inc
sbb
xor
pop
or
xchg
filds
cs
sub
nop
and
out
dec
cli
fbld
sbb
notb
mov
gs
push
test
scas
imul
push
or
popa
scas
lock
jp
pop
dec
or
pop
stos
test
mov
fwait
jnp
jne
daa
test
fisttpll
xor
mov
loop
fistpl
stos
mov
mov
cmp
xchg
pop
test
test
stos
lea
lock
ja
xchg
add
sub
ljmp
call
inc
mov
mov
jmp
mov
and
mov
jmp
mov
mov
sub
cmpsl
das
jmp
push
rclb
scas
jge
repz
jno
sbb
adc
jno
iret
sbbb
stc
jns
xor
and
lea
and
sarb
push
pop
stos
leave
nop
cltd
ss
movsb
daa
out
push
stos
iret
mov
push
xchg
push
lret
jmp
cs
cmp
pop
fadd
mov
ror
xchg
pop
push
psrlw
push
es
sub
mov
test
in
out
ss
sub
popa
mov
xchg
out
pusha
mov
inc
sbb
mov
std
cmp
int
in
dec
fstpt
adc
ja
mov
fcmovbe
push
or
pop
mov
sub
cmpsl
mov
dec
pop
ret
test
int3
jl
pop
jecxz
out
mov
xchg
inc
insl
gs
cs
pusha
or
fdivs
pop
pop
inc
call
dec
mov
mov
mov
addl
jo
inc
rcrb
dec
rclb
inc
xchg
test
inc
mov
mov
pop
jl
jle
gs
xchg
mov
rclb
xor
push
fcompp
mov
jbe
jnp
dec
sub
dec
sub
out
test
pop
and
sarb
aam
roll
pushf
xor
or
xor
out
and
daa
sbb
pop
xchg
push
jne
mov
ret
push
inc
stc
xor
jle
arpl
push
ss
xchg
pop
pop
test
push
loope
popf
adc
push
les
mov
inc
mov
ds
adc
addr16
aad
adc
lods
mov
adc
mov
mov
xchg
xchg
data16
test
cld
push
pushf
jns
pop
xor
test
pop
push
testb
cmp
icebp
imul
nop
test
cmp
and
or
sbb
inc
inc
push
push
add
ljmp
lret
ss
pop
into
and
ljmp
mov
popf
lahf
cmp
jge
mov
jl
ficoms
or
xchg
jnp
nop
jl
jl
mov
pop
popa
divl
ror
in
inc
je
jle
or
imul
in
push
sbb
loope
add
dec
pop
jb
and
mov
mov
pop
pop
sar
or
mov
cmp
mov
xor
push
mov
insl
popf
cwtl
cld
add
ss
ffreep
sarb
sbb
arpl
scas
scas
lea
sub
pushf
and
pop
cmp
sub
pop
gs
sub
push
pop
mov
aam
pop
mov
xor
imul
inc
mov
popf
imul
mov
jmp
lea
flds
mov
stc
and
push
test
lods
fs
in
shrl
iret
pop
aas
jb
ret
pop
jg
push
aad
jle
push
daa
out
pop
out
ljmp
jb
mov
bound
scas
jle
repz
mov
xchg
sbb
xor
add
mov
inc
repnz
in
je
lods
sbb
xchg
sarl
add
and
push
adc
pusha
pop
inc
dec
xor
outsb
movsl
sbb
je
adc
mov
push
push
movsl
xor
jae
xor
mov
leave
sub
popf
jmp
out
popa
sbb
jo
js
push
or
shrl
pop
das
inc
jo
pushf
jnp
cmp
repnz
cs
dec
and
pop
sub
pusha
adc
cmpsb
enter
mov
dec
fildl
and
mov
or
mov
dec
pop
jmp
mov
inc
xor
test
gs
xor
lcall
shrb
dec
lret
std
cwtl
push
xchg
add
dec
push
cmc
ss
shlb
cwtl
sbb
cmova
in
scas
xor
xor
inc
subl
mov
xor
mov
pop
lcall
sub
adc
cmovbe
test
ja
adc
lods
int
mov
pop
pop
call
mov
ja
std
mov
xchg
mov
sub
add
mov
call
mov
iret
jmp
mov
push
rorb
push
push
cmpsl
adc
sbb
sahf
mov
jb
sub
mov
repz
enter
jl
sarl
mov
nop
xor
xchg
push
adc
fsubrs
push
cli
add
test
movl
rcll
xchg
cmp
dec
lret
idivl
ja
ds
arpl
sbb
lock
leave
sbb
sub
push
lcall
jne
lret
inc
es
rol
mov
and
mov
test
inc
sbb
rcll
sub
stos
pop
lret
push
test
push
mov
lret
push
and
std
jle
aad
lcall
mov
nop
addr16
lcall
sahf
in
xsha256
cmpsb
push
sbb
mov
call
shll
mov
jne
aad
lret
xor
mov
jge
testl
jne
in
or
negb
jno
xor
cli
push
out
out
sbb
pushf
fisttpl
mov
sub
sub
mov
shll
xor
push
xlat
pushf
shlb
mov
or
xchg
adc
movsl
sbb
dec
or
mov
repz
xchg
push
test
bound
pop
daa
mov
pop
mov
or
das
cli
mov
sub
dec
les
loope
pop
aas
mov
xchg
jno
xlat
das
mov
jle
cld
mov
pushf
add
adc
pop
outsl
mov
and
and
nop
cmp
cli
and
sbb
xchg
add
filds
dec
xchg
mov
nop
adc
and
je
dec
jns
jns
iret
add
inc
mov
jae
dec
and
or
repz
add
jo
push
dec
pop
mov
push
mov
sub
adc
jmp
mov
sub
mov
lret
xor
pop
and
outsb
andb
mov
popf
fs
pusha
cmp
idivl
dec
mov
scas
ja
sub
lock
popa
mov
dec
mov
sub
dec
ja
clc
jge
imul
xor
rcl
dec
aam
negb
sti
add
clc
fsubrs
stos
int
adc
scas
xor
cmp
pushf
xchg
rorl
jbe
cmc
loop
pushf
scas
pop
clc
pop
mov
cmc
movsl
in
aam
mov
mov
sahf
or
ss
rcll
scas
aaa
bound
jl
lods
shrb
xchg
in
adc
in
mov
cli
jne
jbe
decb
adc
hlt
mov
jb
das
xchg
sbb
js
adc
sbb
test
mov
sarb
js
test
into
jp
insl
into
adc
data16
aad
mov
sbb
das
nop
js
sub
aad
jb
mov
insl
sbb
push
dec
pop
push
nop
hlt
mov
rcrb
pushf
cli
clc
add
insl
in
pop
lahf
xchg
sti
shll
xchg
notb
pop
lahf
sbb
mov
out
out
jo
int3
xchg
addr16
or
scas
xchg
push
sub
lock
xlat
rolb
lods
pop
xlat
sti
adc
ljmp
mov
jg
and
add
xchg
dec
add
adc
stc
jge
cmp
inc
loopne
inc
sbb
adc
mulb
sti
sarl
pop
push
leave
test
mov
imul
cmp
xor
push
dec
out
jae
mov
add
ds
mov
movsl
call
xchg
call
lds
or
lods
jge
loope
and
inc
cwtl
add
sub
mov
sub
test
jo
add
mov
mov
rcll
push
fidivrl
inc
nop
and
jl
dec
push
jno
inc
jo
addr16
iret
mov
mov
pop
aad
pop
push
or
insl
xchg
cmp
arpl
xchg
push
add
aaa
mov
dec
mov
adc
dec
lds
outsb
adc
jg
les
fwait
push
sar
adc
call
and
sbb
push
sub
ljmp
dec
xchg
and
ss
insl
sti
in
jbe
out
dec
jl
ret
loope
push
fcmovnu
adc
fidivrs
inc
push
call
dec
loope
xchg
pop
int3
movsb
inc
test
fcompl
push
mov
pop
popa
ficomps
mov
stos
lods
gs
pusha
daa
roll
mov
inc
imul
in
in
push
xchg
jmp
jbe
rclb
inc
in
sbb
push
lock
pop
xchg
sbb
push
lea
out
jp
or
sub
ds
roll
iret
or
dec
and
in
sbb
aas
cmpsl
adc
rorl
mov
pusha
addb
mov
shll
add
mov
mov
mov
pop
sarb
rcll
jge
push
scas
daa
cmp
jg
dec
xchg
aas
sbb
daa
mov
push
call
pop
mov
cmpsl
outsb
outsl
insb
mov
out
sub
mov
mov
adc
xor
movsl
enter
jnp
and
daa
cmpsb
out
or
int
test
sub
cld
ficoml
pop
pusha
jp
dec
lods
jno
push
and
mov
out
in
inc
mov
ds
movsb
in
pop
testl
int3
jl
mov
test
daa
out
xor
dec
cli
lret
mov
push
mov
pop
push
ja
push
add
push
xchg
mov
cltd
mull
jp
lods
mov
insl
mov
icebp
lret
jge
sbb
xorb
jns
scas
adc
divb
adc
mov
xchg
shlb
jb
adc
jl
adc
sbb
push
int
subb
sbb
xchg
lcall
les
jb
icebp
into
sub
inc
xchg
shlb
add
std
sub
mov
shlb
sbb
push
push
xor
mov
data16
push
jp
pop
ret
jo
js
fiadds
mov
cmpb
and
push
lods
mov
rclb
adc
aad
sub
pop
mov
bound
pop
sub
in
int3
mov
cmp
or
add
cmp
xchg
loopne
mov
insl
out
ss
outsb
push
and
inc
xlat
inc
push
testl
fadds
mov
cmp
loop
cmp
dec
adc
fmuls
mov
fs
loope
dec
sahf
fwait
lds
scas
cmc
sbb
mov
popf
filds
call
lret
aam
nop
mov
popf
ljmp
ds
pop
fs
adc
repz
fwait
jae
sarb
mov
sbb
lock
ja
ret
mov
les
mov
jns
imul
push
aam
pop
testb
sbb
or
cmp
xor
pop
test
mov
cmp
add
fldl
or
push
jno
rcpps
das
stos
pop
nop
or
pushf
out
in
stos
out
outsl
stos
fwait
dec
int
or
gs
aam
sbb
ja
inc
ja
and
js
outsb
inc
test
xlat
imul
jae
pop
aad
daa
jns
popa
lahf
lds
pop
daa
mov
or
xlat
movsb
xchg
xchg
idiv
test
xchg
jne
sbbl
sti
test
int
js
xchg
pop
adc
xor
addr16
cli
mov
dec
xor
sbb
jnp
dec
idivb
pop
popf
add
pop
mov
test
lret
repz
fisubrl
testb
dec
sub
bound
insb
cmpsl
aaa
aaa
jnp
lea
push
xor
and
insb
leave
fistpll
fmuls
mov
out
int
sti
push
out
je
imul
push
sbb
aam
mov
jae
mov
pop
cmp
or
hlt
into
imul
xorb
dec
mov
es
or
or
jnp
push
shlb
mov
mov
cmpsl
out
iret
fisttpl
xor
cmp
dec
movsb
in
push
sti
and
out
push
cmp
mov
adc
std
or
fs
add
bound
pop
or
or
repnz
dec
add
inc
dec
pop
mov
xor
test
mov
cmp
out
lcall
jecxz
rcll
mov
fneni(8087
add
cmp
call
mov
add
divb
jne
sub
in
inc
loope
je
addr16
dec
ret
push
lock
lret
add
popf
mov
push
flds
mov
xor
test
lds
mov
adc
and
inc
int
cmpsl
mov
inc
inc
and
popa
roll
frstpm(287
pop
lcall
sbb
mov
adc
shll
out
mov
inc
scas
sbb
add
popa
sub
and
cmp
xlat
dec
enter
pop
xlat
por
xchg
cltd
ss
jg
or
dec
mov
push
insl
jge
js
jle
push
add
mov
sarl
in
cmp
mov
fisubrl
jo
lcall
or
or
adc
loope
imul
int
imul
sahf
dec
fs
add
shll
mov
dec
outsl
roll
popa
mov
jmp
mov
dec
sub
mov
cmp
push
push
mov
out
add
jae
fdiv
fwait
aam
jg
int
arpl
mov
cmp
lahf
icebp
lea
lahf
jle
pop
imul
shrl
adc
iret
repnz
mov
out
sbb
call
divb
enter
jecxz
fwait
lahf
dec
mov
pop
adc
pop
jnp
ret
adc
jle
lock
dec
and
inc
clc
add
int
or
movsb
dec
sbb
aas
mov
lods
lret
pushf
clc
movsb
pop
sbb
imul
inc
orb
dec
add
fyl2x
and
fs
add
ja
mov
addr16
int3
jnp
stos
and
mov
push
fstpl
cld
inc
or
push
fmulp
loop
sbb
pop
in
pop
pop
dec
sub
adc
add
insl
arpl
mov
fidivl
and
xor
out
fbld
adc
popf
lret
icebp
icebp
and
push
or
lock
ljmp
xor
cmpsb
scas
and
mov
scas
lcall
lea
lret
movsb
in
fldt
pop
into
or
pop
dec
icebp
aaa
ds
pop
push
mov
popf
stos
out
cmp
cs
cltd
in
sub
test
cmp
rcll
sbb
arpl
lahf
test
movsl
lret
stos
sbb
cld
es
cmp
pop
and
fdiv
dec
pop
add
jne
add
push
inc
clc
shll
pop
test
subb
add
mov
jb
fbstp
sub
idivl
push
lret
push
outsb
fldl
fwait
rcrl
sti
pop
jno
icebp
dec
cmp
test
xor
add
push
setp
add
xor
nop
sub
imul
cmp
aas
xor
cltd
out
popl
push
jbe
sbb
pusha
xchg
xchg
js
loope
rorb
mov
sub
addb
pushf
mov
ljmp
stos
jmp
int3
jl
gs
jno
aaa
outsb
in
sbb
mov
mov
mov
and
aam
fidivrs
jl
sar
mov
mov
shrl
or
sbb
out
mov
movsbl
and
push
int3
cwtl
repz
jo
pop
cltd
jmp
inc
cmp
jbe
fs
jo
and
push
cld
mov
cs
and
pop
adc
sbb
dec
xchg
or
lahf
ret
sbb
ret
cmpsb
dec
inc
jbe
add
dec
sub
dec
outsb
cmpsl
in
outsl
sbbb
adc
pop
and
lret
insb
jle
mov
sbb
add
and
jmp
push
out
leave
test
push
test
mov
js
mov
nop
divl
fwait
jp
adc
pop
xor
jns
sarb
add
sub
icebp
pop
test
fs
negb
lahf
pop
repz
dec
fisubl
sbb
fadds
lods
out
fistps
xor
push
outsb
test
loope
insb
cltd
push
dec
mov
es
sbb
popf
mov
add
inc
xchg
sbbb
mov
int3
fwait
imul
ret
dec
inc
jle
adc
dec
sbb
xchg
push
clc
sbb
or
push
scas
or
cmp
jmp
outsl
movsl
mov
xor
test
outsl
mov
test
mov
ficompl
inc
dec
lods
ja
mov
out
push
in
mov
mov
mov
loopne
mov
outsb
je
fsubl
je
mov
popa
loopne
pushf
fs
or
xchg
in
popa
lods
test
pop
sub
sbb
sti
inc
jle
loopne
sub
xchg
fwait
push
aad
cmp
cmc
ljmp
xor
mov
mov
mov
mov
dec
inc
daa
out
cmp
data16
daa
pop
sbb
outsl
ljmp
dec
mov
mov
sbb
loop
jne
mov
rol
xchg
addr16
jns
xchg
fabs
movsb
push
mov
ror
or
ss
bnd
ret
int
cmpsl
rcl
lods
cmp
inc
cmpsb
sub
push
aad
sbb
fisttpl
ss
out
sbb
test
adc
movsl
cmpl
push
sbb
addl
add
jmp
ret
pop
pop
xchg
rcrl
mov
aas
jnp
sbb
xor
mov
adc
outsb
ja
push
adcb
push
jp
adc
dec
test
subl
mov
xchg
xchg
pop
pop
in
sbb
cs
lock
mov
add
shll
adc
cwtl
and
dec
jno
xlat
pop
sub
aad
xlat
stos
fdivrs
push
jne
mov
dec
dec
sti
cli
add
xlat
mov
xor
pushf
fidivl
xchg
sub
pop
popa
and
sbb
cmp
xor
loope
add
in
int3
mov
sub
aaa
popa
movsl
lret
sub
in
cmpsb
jae
push
pushf
outsb
jb
mov
lret
xchg
arpl
xor
hlt
mov
sub
add
ja
icebp
movsb
cmpsb
mov
pop
pop
sbb
fs
aad
push
hlt
xchg
inc
ds
sub
inc
fmull
mov
xlat
jae
lock
cli
cmpb
mov
xor
cmpsl
xor
leave
sub
jae
or
shrl
inc
lahf
xorl
pop
jg
sbbb
nop
lods
bound
lcall
int3
fcomps
cmpl
add
negl
jle
jge
dec
mov
adc
mov
xor
add
xor
mov
fidivl
mov
mov
insl
push
sar
outsl
mov
jecxz
sub
pop
in
mov
test
out
xchg
fstpl
sbb
push
fs
sbb
mov
cmp
cli
xor
push
loopne
and
cld
pusha
xchg
push
addb
testl
fnstenv
mov
divl
inc
cmpsl
test
in
lret
mov
ljmp
cmp
pushf
loop
js
jne
sar
xor
xchg
add
fldt
jmp
sahf
mov
pushf
pop
and
sub
and
xchg
call
jmp
ret
push
insb
inc
dec
repz
inc
in
rcl
xor
jo
enter
mov
out
push
mov
insl
flds
push
or
hlt
dec
cmp
addr16
add
inc
pop
mov
jp
cmp
stos
mov
pop
shr
iret
push
add
js
shlb
les
js
out
std
call
ret
dec
mov
pop
sbb
fsubl
pusha
int
dec
pusha
xchg
daa
pop
push
or
add
gs
jmp
ret
add
adc
sub
jbe
int3
lds
sub
xchg
jb
pop
sub
jo
insl
bound
loopne
mov
xchg
sarb
jecxz
inc
lret
add
sahf
mov
xor
incl
faddl
push
xchg
shlb
idiv
pop
add
movsl
jne
mov
and
subl
jg
lods
dec
or
fiaddl
aas
fwait
xor
adc
and
mov
mov
adc
pop
xchg
je
add
stc
cmpl
and
mov
mov
std
pop
dec
in
mov
push
addl
adc
call
and
pop
add
jp
ljmp
sbbl
mov
pop
sub
out
jp
jbe
dec
stc
iret
inc
dec
mov
fcmovnbe
pop
and
insl
stos
shll
sbbl
stc
mov
pop
and
cld
cmp
jmp
out
sbb
push
inc
inc
pop
jb
sub
push
loopne
and
mov
fsubl
ljmp
jae
mov
sub
pop
cmc
jmp
fadds
mov
pop
fcmove
pop
push
mov
and
mov
and
mov
insl
stc
xchg
arpl
cmpsl
pop
insb
or
int3
stos
and
loopne
add
je
test
push
ret
ja
faddl
ret
ljmp
lock
or
adcl
bound
fidivrl
or
sub
js
imul
mov
adc
fs
xchg
cli
push
mov
sbb
or
nop
lahf
sub
arpl
jl
jmp
mov
mov
bound
movsl
mov
mov
ret
dec
dec
cmp
fdivl
fwait
outsb
clc
inc
lds
loope
sub
xlat
out
ret
repz
mov
mov
dec
mov
insb
and
sahf
cmp
aad
jns
mov
xchg
and
jg
imul
out
test
jb
clc
bound
push
ds
fwait
std
or
iret
mov
jno
sti
push
ret
std
div
jl
sub
inc
cmc
fadds
mov
enter
xchg
pop
xchg
inc
pushf
test
aad
push
jnp
leave
xor
outsl
dec
add
sbb
push
or
daa
add
push
mov
sub
outsl
cmpsl
or
out
int
leave
adc
test
inc
and
mov
ja
loopne
jle
dec
inc
dec
jp
dec
sti
cmpsb
sbb
adc
inc
clc
add
repz
mov
sub
xor
rorl
pop
jecxz
pop
enter
cli
rdpmc
push
nop
push
dec
adc
jbe
das
call
add
sub
fcomps
add
loop
fsubl
mov
shr
jle
pop
add
mov
push
imul
test
stc
or
adc
dec
loopne
fsubrl
cmpl
push
sbb
sbb
sbb
pop
imul
das
jg
cmpsb
in
mov
pop
pop
sahf
int3
aaa
jp
fs
ret
cmp
mov
divb
outsb
shlb
out
mov
jne
cmp
mov
cmp
iret
dec
sbb
insb
les
lods
lods
adc
ljmp
and
jge
xchg
mov
adc
cmpsl
in
arpl
movsb
insl
xor
lret
dec
fwait
sbb
xor
cmp
xor
push
cmpsb
icebp
and
stc
icebp
mov
cmc
in
push
fcoml
push
pop
mov
cmpsl
cmp
jg
add
out
xchg
ret
das
int
ret
xlat
fistpl
in
jb
add
xor
sub
push
addr16
pusha
js
into
adc
inc
mov
mov
enter
mov
dec
lahf
nop
arpl
test
cld
inc
xor
test
test
rolb
xchg
stos
adc
xor
scas
ret
inc
jmp
cmp
jne
push
xchg
movsb
mov
add
mov
lcall
scas
loop
cmp
add
aam
cmp
ss
stos
ret
add
and
ss
push
les
sub
loopne
add
adcl
mov
mov
bound
mov
mov
xor
lods
xor
fcompl
dec
dec
int3
jl
sub
ljmp
xchg
rol
stos
adc
and
pushf
or
cltd
jbe
shlb
bound
push
and
fisttpl
andl
mov
das
dec
hlt
aad
mov
sub
sbb
sbb
out
in
stos
iret
mov
xchg
mov
add
cmp
xchg
xor
mov
dec
push
or
push
jmp
and
rolb
popa
cli
lahf
xchg
dec
gs
mov
inc
xchg
test
out
inc
sub
lock
enter
dec
xchg
xor
out
les
pop
xchg
xchg
xchg
lret
rorl
dec
aaa
inc
sub
push
and
sbb
gs
xor
mov
or
add
negb
dec
add
push
es
pop
aas
mov
add
in
inc
lods
sub
icebp
inc
jb
clc
mov
nop
mov
stos
sub
test
sub
fsubr
jns
inc
jl
xchg
loop
dec
adc
push
fadds
js
dec
test
iret
dec
pop
jle
cmp
roll
repz
mov
sbbl
xchg
jns
inc
into
and
mov
lahf
mov
cltd
sbb
cli
mov
lcall
sub
mov
pop
insl
push
xor
lock
inc
adc
aam
jl
adc
cmpsl
lds
xor
dec
push
xchg
pop
jle
testl
add
in
add
fdivrl
outsl
rol
lds
sti
sbb
push
ret
xchg
adc
sub
dec
in
cmpsb
lods
fwait
mov
sub
mov
inc
clc
gs
fsubrl
cwtl
mov
jmp
ja
in
xor
shrb
xchg
mov
jns
dec
aaa
ss
xchg
xchg
lahf
xchg
xor
adc
xlat
xchg
scas
and
shl
rcrl
mov
jl
iret
ret
or
cwtl
xor
jbe
aas
outsb
movsb
add
roll
push
je
call
lea
iret
inc
iret
aaa
jg
jno
sub
dec
movsb
aaa
aam
test
js
jae
jp
jmp
in
loopne
sub
sbb
fwait
in
lea
xlat
dec
jge
xor
and
cld
cwtl
lcall
mov
fidivl
fs
add
jo
cwtl
outsb
stos
cmp
idivl
xchg
mov
pusha
cwtl
inc
xlat
hlt
pop
xchg
cwtl
orl
mov
lods
xchg
add
sub
mov
outsb
sbb
inc
push
fmull
add
inc
mov
pushf
imul
dec
scas
sbb
xchg
jge
push
push
cmp
jp
adc
js
xchg
mov
lret
cld
sub
push
shlb
adc
inc
lcall
in
mov
enter
je
add
inc
dec
mov
push
and
jbe
ss
fwait
push
dec
int
sarb
mov
fcoml
insl
jo
mov
incl
push
push
adc
and
jl
insl
faddp
fmulp
js
les
scas
jbe
and
mov
and
stos
xchg
addl
dec
mov
adc
outsl
leave
ss
iret
add
xchg
add
or
jmp
stos
jge
mov
pop
push
push
inc
mov
ja
cmp
xlat
mov
into
jg,pt
sub
mov
lcall
out
mov
shll
sub
mov
iret
cmpsl
rep
sbbb
push
fiaddl
dec
lock
lcall
cmp
stos
pop
push
adc
dec
fwait
andb
stos
and
sti
test
stos
pop
pusha
subl
fidivl
fnstsw
test
pop
lret
jecxz
nop
cwtl
out
push
ret
xor
adc
inc
and
ret
fldt
pushf
jbe
xor
mov
cli
iret
ljmp
jo
add
shlb
aas
lahf
or
in
jnp
add
push
js
xchg
dec
sbb
jb
sbb
add
ret
lods
fnstcw
rcrb
mov
xor
pop
dec
push
mov
fisubrs
jae
cs
inc
enter
add
xor
jecxz
mov
loope
aaa
clc
mov
xor
lret
aas
mov
test
jg
aad
pusha
push
add
mov
jle
aas
cmp
sbbb
jmp
dec
sbb
sar
pop
or
rcll
mov
inc
xchg
negb
mov
xchg
xor
jbe
popa
mov
leave
out
jp
adc
push
mov
jbe
stos
lahf
mov
mov
sbb
push
adc
sbb
pushf
std
fcoml
pop
xchg
sub
lock
scas
fidivs
push
out
pop
outsb
ret
sbb
or
xchg
int3
xor
shl
pop
lods
sub
lret
sub
mov
push
js
sbb
sub
aaa
xchg
out
fidivrl
and
pop
insb
xor
lret
lds
icebp
xor
cld
mov
arpl
push
loope
lcall
or
sub
das
sbb
std
pop
pusha
loope
push
shll
or
sahf
push
fwait
sbb
pop
test
push
in
mov
mov
sub
push
iret
and
pop
push
or
sbb
std
imul
mov
adc
inc
push
or
lret
rorl
aad
push
cld
xchg
xchg
push
mov
inc
sub
out
sub
out
push
idiv
sbb
or
xor
jg
outsb
xchg
jmp
mov
int3
xchg
pushf
cmp
xchg
movsb
aam
push
popl
mov
dec
insb
xchg
movsl
sub
cld
inc
add
int3
dec
imul
stos
cmp
inc
xor
xchg
enter
xor
lahf
sahf
push
imul
mov
jb
inc
addr16
add
push
ret
fdivs
and
insl
push
xor
ja
pop
cmp
test
in
cli
cmpsl
jo
stos
int
pop
jns
mov
inc
into
aas
movsb
jne
mov
data16
push
rorb
pop
imul
ret
imul
ret
fildl
sub
test
adc
jo
cltd
pop
call
orl
cmp
loop
insl
pusha
cwtl
roll
leave
lahf
repnz
and
movsb
jbe
inc
clc
cmpsl
inc
das
cmp
repnz
pop
add
pop
cmp
popf
xchg
shlb
push
add
testl
adcb
aas
subb
in
int3
das
xchg
lcall
sbb
pop
xor
mov
xchg
cwtl
xor
test
mov
cwtl
add
or
xchg
fimull
mov
dec
xor
not
adc
jbe
jno
xchg
dec
sti
and
jmp
cmp
ja
pop
sub
fidivrs
repz
push
clc
mov
or
or
push
cltd
lret
lods
add
xchg
mov
fistl
push
sahf
loopne
sbb
cmp
pop
lods
xchg
mov
fstp
cmpsb
loop
aam
or
sbb
fidivl
fs
and
shll
aaa
stos
cmp
xor
lock
xor
xor
xchg
stos
pop
mull
push
inc
jb
stos
cmp
popf
ret
mov
pop
cld
jl
ja
pop
loop
stc
and
cwtl
cli
stos
mov
sub
sbb
mov
jp
ljmp
add
cmpl
xchg
inc
and
insl
mov
sub
jge
sbb
add
rcl
popf
mov
xor
clc
mov
rcll
fiadds
sub
ss
clc
xchg
pop
lret
mov
fmuls
pushl
mov
or
sub
mov
lock
xchg
inc
mov
mov
addr16
push
movsl
inc
adc
cmc
xchg
inc
pop
aaa
pop
and
fwait
mov
sbb
adc
stos
jmp
xchg
dec
jns
loop
mov
punpckhbw
pushf
test
sbbl
jno
test
mov
scas
push
and
inc
imul
inc
sti
adc
push
xchg
adc
test
and
mov
pop
outsl
lcall
adc
jo
mov
ret
dec
dec
addr16
mov
fists
inc
aas
fnstenv
add
or
sub
test
lcall
addr16
rorb
enter
inc
imul
fildl
xchg
incb
outsb
std
fs
movsb
push
xor
in
loop
mov
lret
inc
xor
dec
push
popf
xchg
dec
lret
into
leave
sti
mov
pop
and
push
jmp
adc
test
aam
jno
jns
lret
add
push
inc
mov
cltd
jge
xchg
and
jne
aaa
ss
stos
lcall
dec
in
xor
push
xor
leave
mov
jmp
in
insw
movl
daa
bound
cmp
jb
jp
sub
push
inc
push
adc
push
daa
jge
xchg
inc
xor
and
lcall
in
and
fistps
sbb
jno
inc
push
pop
or
push
in
ja
incl
mov
decb
jne
add
fnstsw
add
sbb
out
ljmp
sub
shll
xchg
jmp
scas
arpl
lahf
or
pop
cs
fisttpll
mov
adc
mov
sarb
sbb
adc
sub
jne
loop
in
mov
jle
pop
xchg
jns
fucomp
jbe
push
xor
outsl
lret
push
loop
pop
setl
jb
rcrl
sub
rorl
pop
push
stc
add
dec
or
dec
bound
fcom
mov
sbb
xchg
mov
xchg
push
jl
sbb
hlt
sub
faddl
sub
mov
dec
mov
nop
insb
mov
mov
dec
pop
arpl
and
inc
inc
stos
pop
hlt
sub
ror
das
fwait
mov
es
cmpb
pushf
ret
jecxz
ret
repnz
in
lret
pop
sbb
push
test
jge
stos
scas
cmp
xchg
in
mov
cmpsb
sub
and
fwait
aas
or
push
sub
cmp
inc
rcr
scas
mov
mov
mov
lds
lods
ss
lret
mov
pop
gs
push
xchg
clc
popa
mov
xor
arpl
adc
add
lock
and
in
cmp
inc
xor
aad
mov
rorl
mov
lret
repz
add
xchg
inc
inc
in
pushf
repnz
xchg
fisubs
aam
pusha
jecxz
xchg
je
jmp
mov
movsb
ss
jns
aaa
enter
push
push
outsb
out
fisubs
rcll
cli
loop
xchg
out
call
inc
out
jbe
dec
xor
xchg
jnp
inc
outsb
push
pop
jge
and
out
and
adc
jns
xchg
inc
aaa
cmp
and
mov
lea
test
lods
mov
pop
inc
out
insl
dec
xchg
ds
add
xchg
insl
ds
test
fnstcw
inc
test
arpl
out
jbe
aas
push
scas
aaa
test
mov
stos
push
fwait
xor
incl
test
jecxz
imul
cmp
jae
hlt
mov
lods
push
cwtl
pushf
mov
inc
add
pop
cli
shll
mov
mov
lcall
repnz
std
pop
loope
cwtl
repz
cmp
jb
dec
cltd
insl
adc
ds
fwait
lea
mov
mov
inc
ja
or
push
mov
xchg
inc
ljmp
inc
inc
or
cmpsb
jnp
imul
lret
and
mov
lret
mov
cmp
gs
sub
incb
mov
cwtl
adc
stos
shll
adc
push
push
test
and
insb
jne
sbbl
movsl
cli
lods
aaa
push
jb
and
inc
fucomip
gs
push
and
and
notb
mov
adc
pop
mov
pusha
pop
pop
inc
adc
rorl
dec
sub
mov
mov
mov
cld
xor
jmp
call
arpl
fimuls
call
jnp
lret
mov
xchg
pop
aas
push
jl
pop
rorb
mov
sbb
in
push
cwtl
and
cmp
insb
in
jmp
sahf
and
inc
sbb
jmp
ds
adc
mov
popl
xor
push
loope
popa
and
push
sbb
jecxz
lcall
shrb
mull
push
inc
cmp
mov
add
pop
mov
popa
pop
xor
add
std
loopne
cs
xor
jae
jns
and
ret
mov
sti
mov
ret
sbb
push
aad
leave
cmpsb
sub
xor
sbb
xor
lock
pop
nop
mov
xchg
cmp
dec
es
call
insl
out
fwait
cmp
inc
jl
lea
arpl
in
xchg
xor
nop
into
movsl
pushf
scas
sub
adc
andb
fs
jg
xacquire
jne
mov
je
repz
cmpsb
push
jb
rorb
pop
insl
mov
jecxz
lods
test
jmp
pop
pop
mov
mov
mov
xcrypt-cbc
cmpsl
adc
mov
test
xchg
lahf
adc
mov
inc
repz
mov
push
test
ss
or
mov
sarl
sbb
arpl
pop
mov
cli
lods
mov
push
xchg
xchg
xor
in
sub
fisubl
adc
test
and
inc
or
outsb
les
sub
dec
and
ret
cmc
lcall
or
pop
shlb
dec
outsb
outsb
imul
lahf
lret
sbbl
jp
icebp
mov
sbb
shrl
lret
dec
xor
jno
repz
add
mov
and
das
jnp
sub
imul
xorl
mov
jl
or
or
jne
leave
ss
mov
inc
js
add
pusha
xor
jns
icebp
pop
push
inc
mov
cmp
cmc
aam
xor
sti
dec
xchg
jo
lods
mov
mov
mov
dec
in
adc
pop
stos
arpl
or
pop
or
push
les
clc
mov
pop
ljmp
sbb
pop
xchg
mov
lcall
stos
mov
push
jno
dec
jmp
pop
mov
sti
mov
xor
ss
push
in
ret
jg
jp
mov
cmpsb
adcl
les
sbb
cs
adc
and
mov
out
lahf
jmp
add
out
dec
aaa
cmpsl
sbb
stos
fwait
addr16
push
insb
dec
mov
lock
repz
jo
ss
aas
push
aaa
jge
sub
and
pop
rorb
pop
sbb
push
and
clc
mov
mov
add
adc
loop
loopne
mov
mov
lcall
sub
push
mov
inc
cltd
test
imul
mov
adc
or
push
cs
int
es
rcr
jle
add
pop
cmpsl
sarl
or
mov
ss
push
xchg
adc
jmp
mov
pop
xor
or
pop
pop
mov
sub
or
insl
push
outsb
stc
fwait
push
sub
or
lea
cmpsl
pop
insb
mov
mov
bsr
cs
dec
imul
pop
xor
jae
popf
mov
jmp
pop
aaa
popf
xor
xchg
in
mov
leave
and
in
and
daa
icebp
cmc
inc
jno
mov
stos
jp
decb
inc
in
and
inc
lea
pop
and
or
pop
clc
inc
xchg
add
test
jb
mov
xor
adc
or
cmp
aaa
push
adc
mov
cmp
stos
sub
sub
out
imul
pop
jp
out
stos
pusha
ret
adc
add
inc
sarb
jl
inc
pop
cs
lods
inc
xlat
cltd
aam
jb
add
add
hlt
xchg
or
ljmp
leave
xor
rcrb
sub
pop
gs
aas
adc
or
xor
sbb
scas
adc
out
aam
cwtl
popf
push
xchg
mov
push
out
jns
jmp
pop
movsb
test
mov
repnz
rolb
gs
test
cltd
xchg
fidivrs
orl
pop
iret
mov
cmp
popa
push
nop
cmp
fisubrs
adc
jecxz
js
jo
xlat
loopne
outsb
insb
popa
push
push
xor
inc
negl
test
dec
jg
sub
cs
testl
dec
rolb
inc
lods
aaa
repnz
int
or
addr16
mov
enter
std
sub
mov
into
and
push
xchg
dec
mov
movl
jge
push
xor
loop
cmp
jmp
sbb
in
inc
or
rolb
cwtl
sbb
push
rolb
add
dec
jbe
xor
adc
lahf
xchg
pop
add
or
stos
std
dec
hlt
jo
out
mov
cmpl
xor
add
adc
push
cmp
out
lds
push
or
roll
add
negl
cmp
repnz
out
pop
add
sahf
popf
aaa
mov
addr16
inc
adc
sub
push
sbb
testl
mov
xchg
fisubrs
lea
lret
dec
fs
jecxz
imul
inc
cmp
cld
clc
push
aas
sbb
mov
scas
xchg
xlat
loop
movsl
pop
push
out
mov
xlat
inc
xor
xor
sbb
mov
cmc
push
jo
adc
adc
sbbb
cld
js
repz
and
xor
outsb
xchg
jmp
xchg
mov
mov
add
cld
jae
cmc
dec
pop
mov
aas
push
xor
insb
mov
nop
inc
in
sub
mov
rcll
jns
xchg
idivb
or
cmp
mov
test
push
cmp
mov
mov
mov
dec
adc
jae
jb
imul
mov
into
push
pop
mov
call
jge
push
mov
push
movsb
add
cmc
jbe
xor
add
in
adcb
sbb
call
loopne
add
iret
jmp
aaa
hlt
mov
push
lcall
mov
cmc
mov
inc
shll
inc
movsb
inc
cmpsb
orl
loopne
push
pusha
inc
cmp
cs
cmc
push
in
std
cmpsb
les
sub
push
addr16
jae
cmc
jne
pop
shrb
lods
sti
pop
xchg
popf
jo
test
pop
cltd
aam
mov
pusha
push
test
pop
xor
stc
fildl
push
sbb
sarb
jo
jp
cmpsb
sub
arpl
fmuls
lods
insb
jg
outsb
in
add
inc
inc
nop
je
addr16
add
andl
sub
adc
mov
arpl
repnz
sub
hlt
shll
sub
cmp
shlb
jnp
or
loop
into
adcb
ljmp
push
jp
addl
insb
push
bound
mov
jmp
out
out
xchg
xchg
shrb
mov
pop
inc
test
shl
cmpsl
inc
mov
call
es
pop
push
sbb
add
adc
push
in
dec
clc
mov
out
aaa
push
pop
ds
addr16
sbb
pop
in
jbe
in
add
and
ret
lods
nop
iret
cmp
outsl
sti
jnp
push
test
jbe
xchg
jecxz
and
negb
push
jns
cmp
cmp
jge
adc
mov
addl
cmp
dec
movsl
mov
and
pop
pop
xlat
jmp
movsb
std
push
adcb
pop
sub
sahf
adc
icebp
dec
xor
leave
or
ja
jg
ja
push
popa
push
loope
addb
cs
mov
addb
repz
shr
inc
sbb
push
add
cmp
das
popf
mov
mov
es
jg
mov
arpl
ja
push
dec
mov
std
push
sub
dec
add
sub
dec
xchg
xchg
pop
mov
in
decb
popa
xchg
pusha
and
mov
add
mull
dec
inc
fldcw
out
arpl
add
jg
mov
aam
mov
xchg
xor
mov
or
sbb
pop
les
addr16
addr16
push
jae
adc
lcall
lret
dec
sbb
call
orl
xlat
mov
xchg
or
mov
add
pusha
rorb
shll
adc
mov
mov
decb
fld
and
in
or
iret
push
fs
outsl
push
out
jae
jg
imul
mov
sbb
mov
jne
xchg
adc
xchg
and
mov
rorb
sahf
xor
shlb
lock
loopne
in
pop
cli
cld
add
sub
outsl
lcall
leave
int
add
ss
add
mov
add
mov
xchg
adc
inc
and
shrl
in
mov
aaa
dec
push
push
les
cmp
mov
or
inc
push
jb
flds
stc
clc
push
xchg
out
mov
int
repz
into
testl
inc
xor
jg
leave
or
lret
push
jbe
dec
stos
jmp
sbb
add
jb
insb
pop
jecxz
mov
mov
test
imul
bound
push
xchg
out
pop
lahf
dec
negl
sahf
adcb
dec
cmpsb
ljmp
xchg
xlat
adc
into
mov
int3
add
mov
jae
data16
mov
fldcw
inc
cmp
sbb
or
pop
mov
pop
outsl
xor
jno
out
fadds
mov
addr16
mov
in
dec
stos
jo
inc
mov
lahf
adcl
xlat
add
jmp
sbbl
leave
std
repnz
fs
inc
int3
repnz
aaa
shr
push
mov
and
push
pop
fcmove
fiaddl
adc
pop
xchg
pop
adc
jle
jecxz
xchg
loope
pushf
sub
outsb
repz
jp
mov
movsl
fistpll
and
incl
cmp
pop
inc
and
pop
or
pop
cmpsb
or
fisubs
repnz
mov
ja
call
sbb
dec
xchg
and
jno
mov
mov
mov
push
clc
fidivs
sub
sbbl
movsl
imul
cmp
and
cmpsb
and
adc
add
jmp
mov
sahf
pop
xor
in
arpl
jmp
push
loop
and
push
pop
ja
rorl
insl
popa
lock
pop
call
mov
inc
push
push
add
ljmp
ret
or
pushf
mov
lcall
xor
or
add
jp
ja
push
sbb
rorl
cmpsl
push
dec
lret
stos
xor
divl
movsb
inc
pop
xor
cmp
das
jecxz
in
xor
mov
mov
mov
mov
cld
popf
js
and
scas
mov
repz
xchg
movsb
ljmp
mov
adc
sbbb
lret
fstp
push
jae
pop
dec
xor
jne
inc
test
cmc
fimull
mov
fcmovne
in
mov
xor
pop
cmpsb
fdivp
popf
pusha
clc
xchg
pop
adc
dec
and
popf
nop
inc
mov
mov
sub
leave
loopne
cmpsb
jg
bnd
cmp
mov
or
scas
xchg
xor
inc
out
pusha
popa
mov
ret
mov
pop
dec
jb
pop
jne
cmp
loope
fcmovnbe
sub
int3
repz
xor
add
cmp
xor
cmpsb
pcmpgtb
fwait
add
movsl
js
lods
or
adc
add
push
pop
jp
mov
sbb
gs
jg
ljmp
xchg
loop
add
scas
testl
jbe
stos
xor
mov
pop
sub
cmp
adc
pop
pop
dec
test
sub
and
xchg
das
jmp
pop
add
jb
sbb
mov
ss
loop
or
jnp
fadd
sbb
testb
jae
adc
jns
scas
aam
pusha
es
cmp
pop
out
pop
push
or
inc
hlt
mov
adc
test
and
iret
rclb
add
and
push
or
adc
pop
in
outsl
std
aad
inc
int3
fsubrl
jle
and
or
mov
dec
jo
xchg
push
xchg
inc
dec
icebp
and
je
cmp
cmp
test
inc
xchg
inc
pop
jns
push
cmp
cwtl
add
xor
lock
mov
and
clc
ds
dec
addr16
lock
cmp
test
sub
lds
cmc
push
dec
xlat
cmpsb
loopne
lock
xchg
subb
dec
dec
push
push
decb
mov
pop
out
sub
or
pop
pop
xchg
into
test
mov
and
out
cs
xor
stos
ds
or
mov
mov
add
popf
iret
aad
xchg
xor
and
mov
and
inc
icebp
xor
arpl
cmpsl
cmp
fbstp
ret
sbb
out
push
push
cld
xchg
scas
dec
call
setb
loopne
shlb
mov
loop
or
out
shlb
fdivl
loopne
adc
adc
push
mov
or
setl
cmp
sub
sbb
pop
cwtl
cmc
xlat
inc
pop
mov
jmp
les
xlat
cmp
icebp
sbb
dec
data16
into
pop
inc
sbb
cmc
cld
add
inc
sbb
dec
rolb
mov
lea
cmp
or
sti
cmpsb
sbb
btc
fcoms
jg
clc
in
in
adc
test
testb
sub
in
inc
xchg
mov
dec
adc
jnp
les
popa
insb
sti
outsl
push
outsb
cwtl
cmp
xchg
nop
push
push
push
xor
imul
mov
sub
push
mov
xor
pop
stos
adc
insb
jno
scas
pop
loopne
add
sub
inc
pop
or
bound
out
andnps
outsb
pop
aad
cltd
fistps
mov
cmp
aam
fwait
insl
push
movsb
ss
sbb
dec
cmp
cmp
shll
lds
sbb
push
push
xchg
and
pop
arpl
push
pop
cmp
popa
pop
iret
lds
cmc
je
xor
out
and
inc
hlt
decl
mov
mov
push
mov
sbb
pand
jne
push
loop
jmp
jl
inc
fsubl
mov
adc
jecxz
fisttps
sbb
pop
add
mov
xor
pop
jb
sub
push
jg
sti
pop
adc
faddl
imul
loopne
fcomps
int3
int3
add
and
jns
push
xor
mov
lret
mov
cltd
xchg
pop
je
adc
les
fsts
adc
pop
pop
out
mov
jmp
sub
mov
add
lea
loop
les
mov
nop
mov
aas
lret
ljmp
mov
movsb
sub
icebp
pop
jo
mov
and
mov
hlt
aam
test
adc
insl
ja
cmc
jge
sub
mov
push
push
ljmp
ljmp
lods
and
mov
out
das
mov
pop
iret
fsubr
xchg
sti
push
sub
push
mov
jne
inc
mov
dec
sub
xchg
mov
jle
jae
test
int3
lret
xor
dec
dec
stos
inc
dec
outsl
or
ret
mov
or
scas
lea
fisubrs
rclb
shrb
jl
cmc
xchg
inc
loop
icebp
pop
adc
fsts
xor
cmp
roll
jne
or
clc
xchg
sbb
shl
cmc
cli
out
mov
pop
notl
cltd
jb
fwait
xor
pop
xchg
loope
loopne
mov
xor
fsubrs
dec
xor
dec
add
scas
inc
adc
adc
mov
jbe
xor
mov
jnp
mov
aad
xchg
cmp
les
mov
jge
adc
mov
fistl
cmpsl
sar
push
loopne
or
sbb
shlb
sbb
mov
test
aam
callw
mov
enter
mov
xchg
imull
hlt
addl
mov
pop
int
cmp
fdivr
cmp
and
sti
aas
ror
addr16
push
jmp
inc
jp
loop
test
pushf
add
jae
arpl
movsl
imul
push
add
mov
jbe
mov
push
test
mov
loope
sub
pop
fs
mov
mov
jmp
je
mov
jl
cmpsl
pop
jp
dec
cmp
sahf
inc
int
imul
outsb
pop
and
mov
sub
xchg
sbb
ds
into
negb
mov
jge
ds
test
imul
jo
or
pop
call
jecxz
xor
xor
mov
cltd
leave
xor
sarb
dec
dec
movsb
dec
inc
cmp
cmp
ret
fisubl
sbb
loop
push
push
lahf
movsl
leave
les
lea
and
inc
negl
addr16
outsb
aas
out
xor
daa
adc
sbb
push
rol
imul
pop
jbe
sub
adcb
adc
cmpsl
push
mov
or
cltd
cmp
cmp
cld
in
aas
push
adc
lods
repnz
adc
sub
adc
stc
add
daa
es
push
out
push
mov
mov
movsl
add
mov
bound
sbb
mov
push
adc
xor
int
or
repnz
pop
lds
sbb
sbb
or
in
mov
movntq
out
add
in
iret
lret
cmpsl
imul
sub
andb
sub
sub
fimuls
push
movsb
inc
adc
pusha
iret
pop
fsts
aad
and
jmp
cs
divl
outsb
cmpsl
jb
fbstp
xsaveopt
mov
or
leave
and
icebp
push
dec
test
fld
pop
test
xchg
cld
fists
lret
or
popf
ds
fs
mov
scas
scas
mov
xor
filds
push
lahf
lea
mov
repnz
repz
lock
cwtl
xor
in
shlb
ss
adc
mov
xchg
mov
outsl
das
mov
out
mov
push
ss
sub
leave
into
and
aam
ret
pusha
cs
jb
mov
jno
inc
adc
pushaw
fidivs
jb
add
push
mov
fstps
pop
ja
jnp
insl
jp
mov
sub
mov
lea
icebp
in
push
out
pop
and
xor
fnstsw
and
clc
pusha
sub
jmp
pusha
addr16
mov
mov
xchg
imul
mov
je
cmp
mov
aad
out
inc
mov
stc
mov
popa
lret
lea
inc
cmpb
nop
cmp
inc
ja
in
xor
in
or
adc
and
and
mov
int3
ja
xchg
pushf
data16
into
addr16
jne
arpl
fldl
cmc
pop
xor
subb
insb
stos
mov
decb
pop
xchg
pop
inc
or
jp
nop
test
cmpsl
ja
in
shlb
push
jmp
in
sarb
inc
jp
into
ljmp
cmpsl
insb
push
dec
jae
or
adc
sbb
shrb
pop
xor
pop
sbb
out
jecxz
cli
sbb
push
adc
lods
jne
pop
jns
mov
or
ficoml
pop
mov
mov
sti
ds
add
adc
mov
sbb
mov
shl
or
pusha
mov
das
scas
stc
push
mov
iret
dec
lret
push
pop
mov
sbb
sub
mov
out
pop
jo
fmuls
cmp
repz
or
sbbl
mov
add
mov
sub
cmp
and
fcmove
lds
add
push
ss
cwtl
cmp
sub
nop
add
arpl
add
je
into
pop
push
movsl
push
int3
and
sub
mov
dec
insl
add
cs
mov
movsl
bound
jae
and
cmpl
scas
imul
sbb
je
sahf
mov
sub
jbe
dec
outsb
gs
or
xchg
sub
add
popf
cld
dec
out
loopne
sub
add
mov
or
fisubl
cmp
add
add
xor
leave
xor
cs
data16
ret
test
sub
lock
iret
sbb
scas
adc
jmp
push
xchg
xchg
sbbb
insb
pusha
add
pop
sub
dec
je
or
data16
and
addr16
sbb
insl
sbb
dec
cmp
js
in
mov
jg
pop
push
inc
xor
test
std
cli
sbb
fadds
sub
pop
stos
mov
aaa
out
jo
pop
dec
pop
cmp
ds
popl
pop
xor
mov
sbb
xor
xchg
rcr
jg
dec
add
or
lods
pop
sub
adc
sub
pop
sarl
shll
pop
jle,pt
push
push
js
sbb
pop
fcom
lea
and
fcompl
stos
ficompl
cmp
insb
aas
je,pn
cmp
sbb
xor
jnp
mov
enter
std
push
mov
fidivs
sti
ss
jle
testb
jnp
pop
jp
mov
inc
popf
xlat
mov
leave
pop
scas
sti
sub
jno,pt
nop
dec
mov
sbb
out
push
out
pop
aam
nop
das
jnp
pop
inc
or
mov
cmpb
out
lea
push
bnd
in
jmp
lock
jae
inc
add
lods
mov
out
cmp
sti
add
cmpl
xchg
pop
dec
mov
sti
test
and
pop
dec
or
mov
int
and
push
dec
out
push
ja
in
hlt
jle
leave
mov
or
fisttpll
out
cmp
dec
lods
inc
scas
mov
leave
test
jp
xor
mov
repz
lahf
adc
pop
rorb
adc
mov
sub
popa
int3
add
push
jns
mov
or
jle
out
pop
xchg
jg
jle
outsb
addr16
xor
das
cmp
xchg
mov
push
jae
das
inc
loopne
jnp
adc
cmp
lcall
in
pop
aaa
imul
das
fld
std
clc
repnz
push
mov
subl
iret
jmp
movsl
cmp
pop
xchg
mov
dec
leave
popf
push
push
push
imul
xchg
mov
add
inc
testb
rcll
cmpsb
and
test
adc
shl
shlb
popf
jecxz
inc
mov
push
scas
out
pop
add
and
mov
cmpsb
push
lcall
mov
mov
rorb
mov
cmp
sahf
pop
push
int
inc
pop
mov
cmp
ds
mov
mov
dec
pop
fisubl
lea
lods
outsb
inc
and
std
xor
dec
rcrl
into
int3
jge
icebp
dec
jmp
test
mov
jne
mov
cmp
lahf
sbb
push
out
push
mov
inc
or
xchg
push
lds
mov
mov
repz
push
pop
mov
shrl
arpl
lods
push
xchg
mov
sub
mov
aaa
sbb
jecxz
out
mov
lds
int3
jo
and
add
xchg
mov
lahf
lret
shrl
push
outsb
cli
add
shl
sbb
testl
push
movsl
addr16
dec
das
add
das
pop
lea
mov
lret
aas
in
mov
fwait
bound
adc
fcoml
mov
test
and
dec
leave
adc
sbb
inc
gs
or
push
sbb
mov
ficoms
mov
xchg
cmpsb
lret
xchg
rcl
pusha
sub
outsb
mov
das
add
gs
movsl
ja
or
mov
jb
stos
mov
in
xor
push
popf
test
push
or
mov
pop
mov
mov
bound
and
cmpsl
mov
mov
lock
push
daa
mov
mov
xchg
xchg
repnz
rol
mov
jnp
xchg
lock
xlat
nop
xlat
adc
xor
std
adc
adc
lods
adc
adc
pop
repz
aaa
inc
nop
jo
dec
loop
sbb
mov
adc
sbb
add
outsb
fldt
push
bound
dec
dec
jne
ret
pop
int3
cmp
dec
stos
nop
xchg
xor
sbb
jb
sub
pop
inc
sbb
aam
incb
outsb
popf
in
in
dec
push
inc
xor
push
jmp
cli
and
jb
dec
mov
das
movsb
arpl
mov
loope
ljmp
dec
mov
stos
mov
nop
cs
dec
pop
xchg
ja
dec
test
add
repnz
leave
sbb
push
lcall
in
push
push
xor
mov
push
notb
test
sub
cld
dec
cmp
data16
push
enter
sbb
xchg
xchg
push
fsubs
mov
ret
dec
cmpl
loop
loopne
sbb
xor
test
xor
idivb
and
cmpb
popf
in
cmp
shll
jb
rol
pop
mov
leavew
xor
les
cmp
jo
clc
clc
push
adcb
inc
loope
icebp
jle
insb
fstps
jns
fcoml
sub
inc
xchg
mov
mov
shlb
jmp
scas
std
lret
repnz
mov
bound
dec
add
xchg
test
je
subl
pop
pop
movsb
mov
fldl
outsb
sub
lea
repnz
mov
das
fstps
or
nop
dec
insl
dec
add
repz
lret
bound
mov
mov
aas
test
pop
pop
pop
inc
cmc
jmp
and
hlt
pop
or
and
inc
xchg
in
pop
and
xchg
dec
and
mov
jns
adc
lret
jge
clc
mov
push
daa
sar
and
out
cmpl
jb
pop
mov
lods
loopne
mov
cld
cmpsl
lcall
sbb
sbb
addb
adc
inc
jae
loopne
out
mov
cwtl
in
push
cmp
mov
dec
mov
shrb
adc
aas
mov
pop
inc
aaa
add
jne
xor
mov
fwait
mov
fistps
idivb
adc
call
test
movsl
mov
pusha
es
or
outsl
pop
inc
jg
xchg
fdivl
fdivs
mov
inc
aad
and
or
lahf
adc
fmul
push
popf
xchg
pop
jl
or
jle
sti
pop
cmp
xchg
cmc
lret
dec
mov
ljmp
inc
lahf
or
adc
jmp
xchg
loopne
or
cmp
add
dec
pop
repz
sub
mov
mov
mull
imul
xchg
adc
shrl
insl
out
dec
xor
jno
fsubs
ror
inc
sti
sub
je
push
mov
ljmp
adcb
or
mov
stos
arpl
hlt
mov
sub
adc
insl
cwtl
sub
dec
std
xchg
jns
dec
cmpsl
lret
and
test
daa
pop
inc
imul
das
inc
ficompl
sbb
popf
dec
fistps
pop
shrb
jl
das
sbb
inc
sub
outsl
mov
xor
push
jl
bound
cmc
imul
and
aas
insl
fidivs
inc
sbbb
fs
xor
cmp
out
or
and
test
out
pop
xlat
sbb
fdiv
inc
je
pop
xor
add
jecxz
addr16
mov
lret
mov
lret
mov
sbb
pop
mov
test
jno
xlat
adc
out
cli
inc
scas
lods
push
mov
sbb
mov
xor
fidivs
sub
xchg
inc
inc
inc
fmuls
dec
shrb
xchg
stos
mov
in
sbb
rcrb
add
fcomps
jle
movsl
xor
inc
pop
mov
into
pop
sub
imul
fcomps
lods
cld
inc
cmpsb
mov
sbb
mov
nop
jne
xchg
add
stos
lahf
mov
stos
adc
jns
jns
xchg
dec
out
daa
and
mov
nop
add
xchg
scas
loop
jge
mov
jmp
cmp
pop
adc
pop
mov
jb
test
pop
jae
dec
cmpsl
loopne
pop
push
mov
das
imul
jns
add
in
je
push
cmpsb
jp
loope
sub
loop
sbb
aad
push
sub
xor
repnz
out
mov
mov
test
andl
repz
push
mov
xchg
scas
sbb
jl
cmpsl
in
sub
fsubl
xor
add
aas
out
mov
mov
cwtl
arpl
gs
cmpsb
shlb
mov
mov
mov
adc
or
dec
sbb
lock
adc
add
enter
and
inc
adc
cmc
mov
imul
jle
inc
shrb
inc
hlt
xlat
mov
push
inc
imul
mov
int3
mov
mov
lea
daa
mov
stos
gs
xor
fisubl
shrb
cmp
push
jle
add
or
psadbw
cmp
icebp
xor
push
jb
push
push
pop
mov
sub
and
sahf
lcall
in
arpl
test
repz
orb
sub
add
inc
add
mov
fisubrl
fwait
and
insb
cmpsl
test
inc
push
data16
jge
js
test
push
mov
fyl2xp1
mov
faddl
rcr
push
pusha
in
fwait
pop
xor
imul
loope
mov
pop
sbb
outsl
fsub
mov
xor
mov
jmp
stc
dec
int
sbb
mov
cmp
rcrb
loopne
push
mov
popf
outsl
push
sub
cmpsb
mov
test
fwait
test
mov
mulb
and
adc
in
lods
rclb
inc
and
call
notb
xchg
sub
in
and
js
xor
es
lock
mov
push
loop
arpl
sub
outsb
push
js
adc
popf
outsl
jae
fsubr
out
jecxz
adc
and
stos
int3
sti
jne
push
lock
and
ss
adc
sti
aas
imul
mov
xlat
mull
movsl
aas
or
cltd
sub
enter
cld
xor
or
pop
push
push
aas
sar
ret
push
aas
mov
mov
lods
lea
imul
outsb
out
imul
call
pop
inc
adc
verr
lock
and
or
jbe
popa
jns
mov
push
adc
mul
call
adc
inc
enter
lret
cmp
sub
mov
mov
cmp
mov
addr16
int
loopne
mov
lods
fisubs
xor
cli
inc
in
push
rolb
and
sbb
sbb
mov
inc
fsubrl
jecxz
sbb
add
int3
mov
pop
movsb
int3
or
sbb
fsubrp
mov
ja
mov
push
jl
xchg
pop
clc
js
stos
call
or
pop
sub
adc
negb
rcll
cmpsb
push
outsb
xchg
leave
sub
xchg
pop
push
in
ss
pop
mov
mov
dec
movsb
mov
add
lahf
or
sub
test
push
xor
mov
lcall
imul
nop
mov
and
sbb
jb
pusha
pushf
sbb
mov
add
xchg
pop
sub
pop
lds
pusha
xchg
stc
push
mov
mov
or
imul
xor
outsl
mov
xchg
cwtl
adc
cld
aaa
mov
lahf
inc
and
push
adc
fdiv
call
sahf
cmp
rcl
nop
insl
jnp
jp
scas
adc
dec
dec
inc
xchg
lcall
pop
jmp
mov
pop
mov
jne
fists
pinsrw
dec
xchg
sbb
test
push
aam
ret
push
shl
cs
adc
shrb
mov
mov
mov
sbb
or
jl
add
popf
je
mov
jmp
std
push
pop
dec
nop
push
cmp
aad
stos
cli
mov
push
daa
jge
dec
daa
out
subb
add
lret
xchg
out
inc
add
ljmp
mov
int
mulb
mov
lret
or
les
sub
dec
repnz
popf
das
test
inc
xchg
or
mov
hlt
out
loop
jge
js
or
mov
inc
sti
mov
xlat
test
push
xchg
cwtl
jns
lret
repz
mov
sbb
and
or
dec
jbe
mov
daa
lcall
inc
negb
mov
fwait
mov
pop
es
movsl
test
shl
mov
cltd
in
stc
sti
ds
fs
into
imul
cmpb
in
lea
aad
sbb
inc
mov
ljmp
cld
movsl
jo
movsb
out
push
repz
pop
inc
mov
xchg
push
out
push
adc
adc
mov
mov
dec
stos
mov
cmp
dec
sbb
loopne
rorb
leave
in
std
jns
sub
cs
leave
jle
mov
pop
sub
push
rol
imull
insl
dec
dec
cld
lea
rolb
insl
repnz
dec
pop
and
xchg
lods
fsubrs
push
xor
mov
in
pop
imul
insb
sub
out
mov
jne
pop
xchg
xchg
sub
pop
pop
push
cmp
pop
xchg
xor
jecxz
fucom
xchg
mov
and
dec
sti
fiadds
jb
in
push
lock
inc
xchg
cmpsb
data16
sub
scas
pop
lea
jle
lret
adc
mov
push
or
in
pop
fstpt
or
movsl
and
in
out
repz
cwtl
jge
jl
jp
pop
repz
stos
sbb
scas
xchg
push
cmp
leave
dec
nop
lods
adc
cld
and
enter
in
or
add
inc
dec
mov
jns
out
mov
int3
jecxz
dec
decl
cmpsb
popf
ljmp
pop
xor
arpl
les
sbb
pop
cmp
ds
mov
daa
out
pop
sbbb
and
es
push
sub
adc
clc
and
movsb
rcr
in
test
cltd
loope
pop
in
mov
cmpsb
dec
test
mov
add
jmp
lds
xor
or
pop
adc
in
fdivr
xlat
and
xlat
mov
xchg
loope
mov
aas
lods
std
pushf
mov
test
lcall
xor
mov
mov
repz
cmc
sub
icebp
cmp
jg
ret
ret
pop
mov
in
mov
cld
pushf
add
lds
pop
mov
mov
mov
sbbl
es
loope
dec
jl
ret
cmp
jns
mov
sub
loop
xchg
push
cli
inc
daa
fstpl
into
les
sub
test
into
pop
and
dec
mov
pushf
ja
mov
cmp
mov
imul
sar
mov
and
cltd
push
fst
jb
clc
xchg
mov
pop
in
ds
jne
bound
push
bound
jp
sub
shl
sbb
add
push
sahf
and
or
mov
sbb
aas
xor
push
stos
inc
test
and
loop
dec
lods
or
mov
imul
sub
lea
add
sti
insl
les
sbb
hlt
xor
pop
sub
stc
push
aad
push
dec
shl
mov
cli
arpl
mov
cmp
mov
das
or
dec
inc
rorl
xchg
dec
mov
push
jne
sub
js
arpl
adc
xchg
adc
in
pop
lods
mov
lods
pop
imulb
insb
push
cmp
aas
out
aam
xorb
pusha
jle
adc
in
pminsw
dec
mov
lret
mov
sub
inc
and
jns
testb
bound
mov
test
adc
rcr
mov
rol
test
fwait
jl
int
rcrb
jge
lock
lds
hlt
lcall
dec
loop
push
aas
iret
push
fs
out
imul
aaa
sbb
sub
cmc
mov
aaa
stos
push
out
out
inc
jbe
pop
sbb
lods
jle
shl
es
jbe
shrb
cmp
push
xor
jmp
aad
insb
jmp
jo
nop
push
int
popf
pusha
lret
adc
inc
out
rorb
push
inc
xorb
mov
dec
es
mov
fimuls
or
mov
out
and
lods
pop
das
iret
pop
cli
xor
pop
sub
mov
clc
loop
rcrl
scas
outsb
pop
out
lods
or
test
jmp
into
mov
pop
adc
inc
nop
repz
jmp
xchg
icebp
icebp
clc
mov
je
add
mov
fldenv
es
xor
jo
mov
adc
fs
cmp
sahf
pop
cltd
inc
nop
push
in
bound
mov
lea
push
mov
pop
pop
xchg
in
xchg
nop
pop
inc
xchg
pop
xchg
push
aam
lcall
les
xor
mov
cmpsb
jno
lcall
out
ljmp
repz
out
ss
stos
lea
or
xor
lcall
rclb
fsubrs
mov
popf
push
jecxz
test
and
iret
dec
pop
fdivl
popa
icebp
test
and
adc
clc
jbe
mov
or
cmp
shll
and
addr16
or
sbb
lret
dec
mov
outsl
ja
repnz
pop
jge
aaa
mov
sub
mov
dec
cmp
mov
scas
sbb
imull
or
dec
aas
jl
xor
sub
pop
add
sub
push
rolb
mov
cmp
ljmp
jae
mov
xor
leave
stc
mov
xlat
in
sbb
lods
repnz
sub
mov
in
mov
pop
stos
mov
popa
movsb
add
clc
out
push
iret
int3
mov
mov
and
adc
ljmp
sbb
sbb
adc
push
pop
xlat
adc
aas
lea
mov
rol
es
push
iret
ja
sub
fisttps
dec
mov
add
push
pop
jmp
jge
mov
xchg
cmpsl
jnp
stos
les
dec
add
fwait
adc
jle
in
in
imulb
clc
push
xchg
jecxz
addr16
push
sbb
repnz
test
cltd
cmp
aad
loopne
rol
fimuls
xor
mov
push
arpl
jge
xor
arpl
mov
add
mov
push
int
sbb
adc
push
insl
mov
jmp
or
into
test
xchg
or
inc
loop
aad
iret
push
movsl
mov
adc
ljmp
imul
mov
mov
mov
jbe
in
repnz
lcall
in
in
outsl
pop
dec
xor
xor
vorpd
in
inc
push
cwtl
pop
push
pop
add
lods
push
ds
pop
inc
xor
pop
test
cmp
add
arpl
and
jae
inc
in
ret
push
xchg
pop
fdivs
inc
mov
pop
mov
add
nop
xor
cli
ficoml
lds
das
adc
sub
push
and
cmp
call
rorb
not
rcll
fildl
ss
cmp
das
rcr
stos
mov
rcrb
jnp
aas
cmpsb
jecxz
mov
fwait
xchg
mov
out
mov
hlt
sbb
int
mov
xchg
jnp
inc
adc
push
pop
inc
jl
mov
sti
jge
in
mov
pusha
dec
in
mov
ds
arpl
test
xchg
fcmovnb
into
or
test
mov
cmp
pusha
out
push
mov
sbb
sbb
popa
imul
cltd
jae
sbb
loop
push
ljmp
dec
mov
mov
jg
add
lods
idivl
or
int3
fidivs
push
das
aam
mov
pop
and
inc
fildll
test
lock
xor
pop
loope
fstpt
insb
pop
lea
scas
outsb
push
mov
call
and
mov
daa
xchg
fisttpll
adc
lods
sbb
out
jle
rcrb
cwtl
hlt
leave
mov
loop
pop
das
sbb
cld
in
fucomi
xchg
xchg
inc
mov
sbb
sub
in
jl
ds
ret
je
xlat
dec
or
cs
movsl
scas
movsb
pop
push
or
mov
into
fmull
leave
adc
and
sub
pop
cmp
loopne
sbb
sbb
pop
call
mov
test
pop
dec
nop
or
xor
fstpl
sbb
loop
outsb
jge
cmc
xchg
nop
pushf
mov
add
or
cli
and
pop
dec
cmp
adc
stc
in
add
pop
inc
cmp
add
jg
inc
sarb
sbb
push
scas
and
mov
push
dec
mov
dec
mov
mov
and
push
flds
push
cmp
xchg
outsl
scas
cmp
jp
in
mov
inc
mov
das
out
subl
inc
cmc
leave
icebp
pusha
mov
es
mov
inc
insl
sub
jns
dec
dec
ja
repnz
jae
or
insb
mov
push
das
popa
fcompp
insb
lcall
xchg
mov
add
sbb
xor
pusha
xchg
dec
mov
xor
test
out
daa
or
xor
dec
bound
cmp
cmp
dec
sub
xchg
pop
adc
lods
push
push
gs
jmp
and
mov
test
loop
and
push
cld
add
pusha
and
cmp
dec
inc
lcall
lret
push
xor
and
inc
int
inc
xor
xchg
jbe
daa
xchg
shll
movsb
xchg
das
sti
ret
incl
pop
jo
bound
mov
sbb
mov
popf
inc
jnp
mov
les
fnstsw
fsubr
dec
in
xor
or
pop
sahf
int3
cmp
mov
cli
icebp
jmp
aaa
xchg
push
movsl
cmc
or
cli
dec
xchg
fsubrp
fldt
jno
out
fisubl
pop
mov
cld
out
jl
les
stc
xor
in
jne
sbbl
add
js
scas
lods
xor
daa
movsl
cmp
and
inc
shll
and
mov
inc
aas
mov
cld
lods
dec
cmp
mov
rolb
mov
into
cmp
pop
mov
dec
lock
sti
ljmp
ss
mov
mov
lock
lods
mov
jg
cmp
jle
ficomps
sub
xor
jp
sub
sbb
aaa
mov
dec
sbb
sbb
leave
es
dec
push
push
jnp
push
jno
lock
in
cltd
push
xchg
in
adc
mov
ret
in
movsb
vandnpd
jl
cmp
test
xchg
dec
stos
sub
out
add
cmpsl
adc
out
leave
cld
mov
lcall
daa
aaa
repz
inc
xor
movsb
les
jecxz
jbe
mov
loopne
aas
cmp
ja
push
insl
pop
xor
or
aas
test
jns
fsubrl
pop
adc
gs
add
shl
mov
lods
sti
cmp
fiaddl
and
setle
fcoms
repnz
mov
sbb
adc
fstpt
icebp
push
dec
mov
push
out
or
mov
pop
popf
mov
cltd
pop
dec
add
ljmp
xchg
jbe
jo
arpl
mov
and
mov
xchg
out
xchg
fmul
push
andb
xchg
aam
dec
adcl
inc
lret
rol
call
xchg
int
adc
fs
mov
in
and
arpl
jo
cmc
adc
loop
cltd
xchg
xchg
stos
imul
arpl
call
inc
pop
sbbb
adc
leave
or
mov
sahf
xlat
fs
imulb
push
outsl
lret
or
arpl
xlat
hlt
sub
push
sarl
jle
mov
push
push
mov
les
dec
inc
sbb
loope
mov
insb
pop
add
adc
inc
test
mov
out
lock
sub
and
loope
xchg
cs
out
inc
jb
std
push
sbb
add
and
sub
popl
cli
pop
pop
rcl
xchg
add
bound
and
or
push
jns
movsl
mov
pushf
imul
dec
mov
hlt
sub
hlt
loope
cmp
xlat
mov
pop
gs
lcall
adc
roll
jno
xchg
lret
cmc
sub
adc
dec
pop
idivb
movsb
add
sbb
insb
cs
dec
leave
ficompl
popf
fs
das
leave
mov
xchg
jb
push
popl
push
popf
pop
mov
rcrb
mov
data16
inc
mov
cmpsb
out
lods
pop
cmp
xlat
addr16
mov
dec
dec
xchg
fsub
into
sti
dec
out
movsl
ret
sub
mov
mov
sub
xor
mov
pop
pop
cmp
repz
mov
mov
das
das
and
pushf
lock
adc
enter
jnp
cli
mov
push
lahf
gs
insl
pop
outsb
sbb
fimull
lret
out
mov
out
pop
repz
repz
fistpll
out
lret
mov
xchg
ss
and
popf
ret
mov
ret
es
jmp
call
insl
pop
and
jno
testl
iret
insl
loop
sub
je
push
sub
sbb
outsl
loopne
shrl
aad
mov
shl
mov
dec
out
fnsave
test
sti
in
jb
jge
pop
and
mov
push
mov
popa
lahf
push
and
loop
jb
dec
std
xor
push
andl
cld
test
insl
pop
in
lret
je
ficoms
ss
enter
xchg
clc
stos
inc
adcl
mov
sbb
inc
cmp
mov
mov
add
add
mov
jmp
sub
add
jl
push
loopne
sub
loop
cmp
jg
test
std
scas
dec
xor
dec
int3
or
mov
push
sbb
fistps
sbb
xor
clc
pop
cltd
adc
adc
leave
xor
out
sti
ds
div
sbb
xchg
xorb
dec
popl
and
add
inc
lcall
jne
cwtl
repnz
rclb
test
and
nop
add
jne
fimull
cmp
loop
xchg
jo
scas
mov
shlb
ljmp
mov
data16
push
dec
in
adc
adc
imul
pop
cmc
loope
add
cmp
fiaddl
hlt
pop
jb
push
sbb
xchg
stc
insl
add
data16
mov
int3
hlt
sti
dec
fstps
cmc
inc
dec
fiadds
lcall
mov
das
pop
xchg
in
bound
pop
orl
inc
scas
sub
shlb
mov
jns
cmpb
loop
ret
adc
adc
push
daa
stos
mov
mov
loopne
icebp
lahf
test
cmp
enter
test
negl
outsl
or
or
xchg
andb
mov
mov
or
pop
jae
das
jns
dec
out
xor
out
add
adc
or
in
or
insb
inc
jge
cmpsb
cwtl
sub
xchg
mov
or
mov
mov
mov
mov
or
and
negl
mov
fs
jge
cmp
push
cmp
stos
outsl
adc
in
adc
lahf
mov
test
aam
xchg
or
mov
aaa
jae
test
les
fnstcw
scas
jmp
xor
imul
xor
jne
jo
test
mov
mov
stc
shrb
ja
fsts
les
rorb
inc
mov
insl
ds
orb
sbb
popf
daa
jne
pop
pushf
xor
hlt
shrl
xchg
xchg
jecxz
out
sbb
inc
push
loopne
cmp
jecxz
push
adc
sub
adc
movsb
addr16
mov
push
mov
add
jl
sub
xor
and
dec
mov
xchg
fbstp
sub
mov
repz
sbb
ficomps
popa
inc
mov
and
adc
adc
mov
or
ds
fimull
add
sbb
divl
data16
lea
xlat
xchg
sahf
inc
div
in
outsl
dec
pop
fmull
je
xchg
or
lock
push
test
fidivs
xchg
cmpsb
mov
sar
mov
insl
shl
mov
fs
mov
xor
daa
lods
sti
cmp
mov
push
jle
fs
out
sbb
jl
lahf
in
adc
lret
jo
jae
cmp
inc
mov
fstl
bound
mov
adc
icebp
jle
adcl
jp
cmc
ljmp
daa
mov
ret
loopne
dec
js
fsubrl
sbb
dec
je
movsb
outsl
arpl
dec
inc
jmp
in
jno
lock
jb
push
mov
loop
mov
popf
add
sbb
jmp
in
xor
pop
lods
mov
ret
int
testb
movsb
movsb
xorl
fwait
cwtl
push
push
loop
inc
lods
in
cmc
adc
dec
cmp
pop
outsb
das
arpl
int
pop
andl
cmc
shlb
fidivrl
jae
cli
lcall
test
xor
iret
bound
aad
imul
sbb
insb
sub
popa
xor
iret
and
imul
idivl
sbb
test
imul
xor
sub
arpl
pop
aad
and
rcrb
xor
jmp
into
nop
scas
xor
push
test
lea
ljmp
sbbb
xor
gs
cmp
imul
mov
icebp
bound
lret
int3
add
gs
iret
ret
mov
or
shrb
add
movsl
adc
jecxz
dec
add
adc
push
dec
fwait
icebp
scas
fdivs
mov
addb
ss
js
add
jl
inc
jb
add
test
imul
push
mov
jb
dec
repz
xor
out
fstps
jnp
inc
pop
cs
aam
pop
xchg
cwtl
outsl
lods
cmp
repz
pop
in
mov
jae
ljmp
cmp
inc
icebp
sub
adc
push
dec
xlat
ljmp
je
and
aad
leave
or
mov
inc
xlat
test
inc
cs
shlb
push
mov
nop
imul
int
push
inc
daa
out
lods
cmp
sbb
loope
mov
dec
imul
andl
jecxz
rolb
xchg
leave
out
scas
adc
mov
out
jge
andl
mov
or
das
cwtl
jp
and
fyl2xp1
mov
loop
jae
ljmp
pop
xchg
xlat
pop
mov
insb
lds
test
inc
adc
hlt
fwait
xchg
mov
clc
scas
popa
push
js
scas
xor
dec
cmc
add
cmp
mov
and
cld
fadds
out
mov
scas
fcompl
jp
fimuls
add
lcall
pusha
push
insl
sbb
jle
pop
test
jmp
cbtw
xor
imul
dec
cmp
dec
repnz
mull
mov
add
mov
loopne
xor
mov
aas
loope
dec
sbbl
pop
jae
adc
fs
lcall
in
xor
add
adc
pop
sbb
hlt
lods
jno
mov
push
push
rorb
mov
jns
sbb
xchg
shll
or
or
sahf
ret
aas
cmp
add
in
sti
pop
push
pop
mov
xor
or
dec
jo
cmpsl
cmp
inc
decb
sbb
gs
clc
pop
ret
cmp
xor
jbe
add
ret
adc
lret
sti
adc
sbb
cmpsl
xlat
stc
dec
enter
in
inc
pushf
and
je
pop
pop
mov
ds
adc
pop
scas
pusha
setne
sarl
leave
rcrl
lods
pushf
out
jnp
fs
cmp
xchg
jae
mov
dec
jbe
mov
push
pop
repnz
inc
hlt
xor
fnstcw
inc
xor
xchg
xor
js
mov
sbb
sbb
sti
mov
fldl
dec
or
jo
cmpsb
pop
cmp
lods
ljmp
jg
hlt
int
mov
fsubrp
mov
mov
xchg
xchg
push
inc
xchg
gs
mov
roll
in
xchg
jb
pushf
jle
push
in
mov
shrl
push
das
stos
pusha
cmp
inc
nop
ficomps
pusha
adc
cwtl
movsb
jl
pushf
jp
jmp
xchg
adc
pushf
bound
push
mov
push
rorb
mov
sub
and
push
dec
jnp
in
orl
cmp
jmp
loopne
and
dec
repz
lds
scas
pop
sub
or
adc
sbb
add
sahf
jle
pop
xor
std
and
ja
popf
inc
jae
adc
jno
sub
xor
dec
shlb
bound
jge
inc
loope
dec
and
clc
pop
loope
gs
and
js
and
mov
lahf
jmp
or
call
test
repnz
rolb
jl
decb
push
xor
repz
lock
jne
je
mov
mov
jl
out
sub
ret
test
xor
in
and
out
pop
int
std
andl
mov
push
mov
adc
xor
loope
ret
sub
fsubl
mov
adc
adc
mov
push
or
fwait
andb
in
icebp
sbb
sbbl
pushf
mov
test
sbb
sbb
lahf
js
adc
cmpsl
test
push
ljmp
hlt
stc
sbb
inc
push
cmp
adc
fildll
push
or
pop
and
push
mov
cmp
mov
lea
shll
pop
ds
movsb
mov
sub
dec
adc
std
jl
mov
and
jbe
gs
inc
outsl
sbb
push
inc
sbb
jae
movsl
sub
std
call
mov
adc
mov
dec
outsl
sub
mov
jmp
mov
adc
push
push
xchg
test
int3
inc
nop
pop
xchg
popf
or
lea
call
fistps
scas
jmp
pop
int3
out
andb
xchg
int3
pop
sahf
sbb
mov
leave
dec
test
mov
pop
cmp
fucomip
leave
imul
cmpsl
test
jp
xlat
pop
in
pusha
mov
mov
scas
cmpsb
js
add
popf
dec
dec
aaa
mov
lcall
ljmp
push
mov
cwtl
mov
out
mov
sbb
mov
sub
mov
out
stc
inc
mov
call
fldcw
mov
sbb
xor
dec
jg
imul
mov
leave
pop
sub
mulb
aas
lds
insl
xchg
aaa
xor
cwtl
sub
dec
adc
out
mov
push
pop
pop
sbb
jp
mov
pop
and
mov
xlat
nop
out
pop
testl
std
sub
push
pop
mov
adc
ss
aam
xchg
xor
loop
xchg
out
lods
leave
sub
movb
adc
fdecstp
or
or
dec
or
jmp
or
push
or
nop
ja
shrb
lahf
shl
mov
fs
out
cltd
xor
scas
pop
jns
iret
cs
cld
pop
ja
cmpsl
jne
add
mov
insl
mull
lahf
mov
movsl
movsb
jecxz
shll
imul
aas
cmp
mov
lods
insl
jg
lock
cmp
and
imul
hlt
aas
dec
jnp
nop
sbb
ss
std
sti
out
adc
mov
inc
xor
dec
xchg
sarb
pop
mov
int
add
inc
idivb
ds
push
sub
mov
pop
lcall
xorb
xchg
ss
ss
aam
fwait
pop
sarl
rorl
lods
scas
repz
mov
mov
inc
xchg
icebp
push
jne
icebp
ljmp
fisubrs
dec
inc
orb
arpl
sub
movsb
adc
xchg
sbb
pop
lahf
dec
xchg
ja
mov
and
adc
das
mov
fdivs
jns
mov
or
push
sbb
jae
dec
jbe
es
cmp
xor
push
or
lahf
dec
dec
movsb
js
cld
inc
fdivl
sahf
jbe
pop
arpl
xchg
ret
shll
push
add
fs
push
insb
gs
mov
pop
repz
xchg
and
and
add
push
dec
mov
dec
pop
and
daa
xchg
imull
mov
sbb
in
ret
sbb
mov
mov
fdivs
push
or
mov
jo
lds
adc
push
scas
jp
cwtl
xchg
push
jl
cmp
ja
add
jo
daa
jle
aaa
ds
push
sub
je
xor
popa
xchg
sbbb
nop
and
mov
mov
pusha
pop
pop
sbb
int3
or
out
addl
add
lock
pop
or
mov
jg
adc
pop
pop
mov
iret
mov
mov
int
inc
fcoml
movsb
dec
das
lods
cmc
callw
push
dec
push
push
fisubl
or
or
sub
shll
pushf
in
mulb
mov
int3
loope
xchg
lcall
or
mov
shlb
pop
and
jb
cmp
cmp
jb
inc
gs
out
jne
mov
rcr
jns
imul
sub
xor
repnz
mov
adc
outsb
cs
fdivs
push
mov
pop
sbb
pop
mov
jecxz
in
mov
insb
sbb
repz
les
in
stos
xchg
js
lea
jo
je
cmp
mov
and
outsl
fwait
jb
mov
sub
add
scas
adc
outsb
stos
outsb
test
lret
mov
subl
lret
rcll
in
mov
mov
cmp
aaa
dec
sbb
mov
shlb
lahf
repz
mov
sbb
repnz
dec
push
dec
call
push
mov
mov
ss
inc
leave
out
inc
inc
jo
adc
int3
int
in
out
xor
js
jle
imul
dec
addr16
cmc
sar
enter
xchg
pushf
xchg
push
xchg
enter
imul
arpl
in
xchg
add
cmp
sbb
cmc
clc
add
dec
icebp
jecxz
repz
fcomps
push
adc
pop
out
sub
mov
into
mov
in
mov
mov
push
nop
adc
cli
lock
pushf
imul
pop
pop
lock
das
push
xchg
aad
pop
loop
pop
test
xor
inc
sub
jo
out
fstps
cli
fnstenv
stos
ja
es
dec
mov
adc
repnz
sti
dec
fcoml
enter
inc
cli
add
cmp
jb
push
lret
jl
mov
ret
call
xchg
psubusw
adc
imul
in
bound
ja
push
insb
mov
mov
hlt
jge
aas
mov
fisttpl
jmp
mov
in
pop
outsb
and
mov
add
xchg
push
push
fnstcw
nop
subb
mov
mov
xchg
mov
push
or
lret
ss
testb
scas
fcom
lret
pop
sub
sti
push
enter
and
cmpsl
adc
testb
daa
lods
mov
pand
push
stc
cmc
jle
loopne
cmp
pop
add
ja
inc
mov
frstor
cmp
insl
mov
gs
call
dec
aaa
shll
xchg
neg
push
add
aad
notb
mov
mov
into
sbb
ret
aad
jne
sub
or
jge
mov
and
sbb
pop
aaa
push
lock
xchg
hlt
outsb
ss
xchg
and
and
cmp
sbb
fs
lret
or
cmpb
pop
push
inc
shr
inc
push
push
xor
loope
adc
inc
mov
mov
ds
inc
idivl
mov
adc
xchg
popf
mov
sbb
cld
pop
fidivl
and
mov
inc
cmp
and
hlt
stc
sbb
movsb
xor
adcl
jmp
sbb
jge
fsub
mov
js
pop
sbb
sti
jp
mov
or
xchg
mov
cli
xor
cltd
lods
mov
push
xor
imulb
in
mov
or
jecxz
jecxz
xchg
decb
scas
aaa
mov
jno
imul
pop
fmul
cwtl
fsts
inc
loop
sarl
cmp
dec
fbld
mov
jo
addr16
stos
out
call
ja
test
pop
pop
xchg
mov
xor
xchg
jp
jecxz
test
sbb
add
jmp
lds
cmp
jae
mov
sub
mov
mov
dec
aas
cmp
aad
cmp
sbb
nop
lods
push
roll
cmc
ja
add
cmc
jo
and
jl
fisubrs
mov
data16
mov
mov
mov
aad
mov
fs
adc
insl
mov
mov
inc
lea
adc
mov
iret
les
je
dec
dec
xor
xor
es
in
shll
inc
cli
dec
loope
adc
arpl
in
push
rcr
dec
ds
xchg
mov
imul
dec
mov
aaa
je
test
sbb
mov
and
fidivrl
mov
std
push
scas
mov
repz
add
mov
xchg
ljmp
adc
and
in
dec
inc
loopne
fldcw
sub
inc
inc
nop
push
dec
add
cli
cs
jae
into
sbb
add
mov
mov
dec
shl
mov
sbb
insb
cld
push
jno
lcall
mov
es
xchg
lret
mov
pop
enter
mov
lret
and
imul
sub
pop
cmpsl
xor
fadd
lock
push
adc
jnp
ds
add
add
sbbb
xor
jbe
jne
sbb
imul
rcpps
es
cmpsb
mov
xlat
mov
mov
in
and
xor
clc
loope
sarb
push
mov
and
mov
ficomps
jns
stos
nop
fidivl
pop
sub
push
aam
jne
mov
fisttps
or
popa
hlt
icebp
or
out
mov
xor
dec
cmp
mov
stos
xor
lcall
rorb
push
cld
lods
fisubs
fwait
mov
push
add
sub
int3
sub
jge
mov
adc
inc
in
faddl
sbb
lea
out
lods
jp
push
adc
int
pop
lahf
inc
cli
pop
test
subl
fdivs
jbe
adc
jg
mov
xor
add
adc
jle
cmp
mov
inc
mov
jnp
popf
cwtl
dec
jmp
aaa
sahf
call
sbb
dec
mov
xchg
movsl
ret
jb
fmul
dec
sahf
mov
mov
scas
enter
xchg
rorl
mov
sbb
std
mov
test
fucomip
test
sti
mov
lret
and
jp
cmp
dec
scas
movsb
and
push
sub
testl
and
mov
xchg
jge
sti
stos
in
and
add
lods
sbb
sub
mov
jno
rorb
movsb
inc
clc
cld
std
call
mov
xor
mov
negl
xchg
mov
ret
lret
ljmp
adc
add
scas
jb
or
push
xlat
adc
insb
lds
cltd
sub
mov
jae
sbb
xchg
mov
in
pop
enter
xorl
xchg
push
popa
cltd
inc
cmc
hlt
mov
lock
jno
flds
xchg
sbb
adc
and
add
jp
jae
inc
dec
jne
rorl
mov
mov
addr16
sbb
cmc
cmp
cmpsb
dec
cmp
and
mov
stos
mov
pop
inc
mov
insl
ja
xchg
xchg
inc
push
xlat
std
pop
fstl
cmp
inc
cmp
cs
movsl
es
and
push
or
test
aad
loopne
mov
stos
inc
inc
push
mov
movsl
call
jno
adc
and
push
fstl
in
cmp
mov
ss
popa
in
or
loopne
call
ljmp
movsb
lods
cmpsl
mov
fstps
cli
jp
jle
push
and
fnsave
ljmp
sbb
imul
pop
icebp
push
adc
add
add
cmpsb
mov
orb
in
jge
arpl
inc
mov
push
xchg
xor
and
repz
loope
aaa
jno
jb
rcl
xor
rep
xchg
outsl
ficompl
aam
mov
add
inc
pushf
xchg
mov
pop
test
gs
cs
loope
call
push
mov
jecxz
js
or
xchg
and
cmpsl
int3
pop
xchg
arpl
add
scas
repz
sub
jnp
pop
dec
fadds
and
add
mov
call
and
push
adc
pop
cmp
mov
mov
out
dec
jae
mov
xchg
sub
outsl
jns
jp
rorl
inc
stos
mov
cmpsb
rorl
lods
pop
mov
outsb
rorl
or
jns
mov
jmp
mov
cwtl
aam
fmuls
jmp
test
jne
push
pop
cli
or
imul
sub
fwait
icebp
add
push
lar
fistps
sub
or
xchg
iret
xor
lods
int3
mov
les
add
out
xor
stc
jns
scas
iret
loopne
outsl
jge
clc
and
sbb
and
ror
push
fstpt
mov
or
inc
pop
into
add
andl
arpl
test
pop
aas
sub
mov
ja
fdivrl
fs
aad
dec
xor
mov
lret
inc
xchg
out
scas
dec
push
data16
sahf
fmulp
aam
mov
xchg
sbb
push
jns
std
shll
das
movsl
sub
lods
stc
mov
outsl
jecxz
mov
and
xchg
stc
xchg
jns
movsl
inc
push
mov
lahf
inc
fcmove
jae
jbe
lea
movb
push
cmp
fwait
cmp
ficoml
imul
mov
jp
ss
push
mov
fwait
or
push
cmp
in
enter
cmp
icebp
mov
push
and
dec
data16
jno
pop
xchg
pop
sbb
xor
test
pop
adc
or
dec
popa
pop
popa
push
xchg
xorb
flds
jp
imul
leave
jns
inc
mov
adc
lds
aas
jns
and
jle
lret
adc
inc
or
jl
push
mov
adc
jge
sbb
test
sbb
ds
push
les
xchg
cwtl
ds
add
std
push
test
xorb
lds
adc
adc
jle
popf
push
icebp
pop
xlat
mov
mov
cld
jne
push
jmp
jge
and
orb
add
push
aaa
pop
imul
jne
dec
mov
jle
pop
data16
sbb
loopne
out
cmp
lods
push
xor
fnstsw
xor
inc
mov
pop
hlt
aam
inc
lods
popf
movsl
insl
in
xchg
mov
xchg
jns
dec
hlt
test
lcall
shr
aam
js
daa
insb
push
fists
jge
mov
mov
call
and
adc
jb
add
lret
or
movsb
push
dec
mov
incl
and
mov
aad
push
push
imul
push
mov
andb
or
jmp
scas
lds
icebp
pop
ljmp
dec
mov
movsl
jmp
push
cmp
test
scas
or
pop
shrl
push
sub
test
and
adc
lods
xor
lds
nop
ss
imul
push
loope
out
pop
jnp
std
int3
inc
mov
dec
xchg
in
cmpsl
orb
mov
sub
add
dec
test
xchg
mov
push
sbb
and
jno
add
push
shrb
lock
mov
pop
subb
push
nop
mov
add
xchg
cmp
rolb
pop
jb
ret
cmp
or
pop
lds
popf
adcl
dec
pop
jecxz
sahf
lret
sub
jae
lds
outsl
aas
mov
fdivr
cmp
aas
out
and
add
jg
jmp
adc
shll
into
jp
jne
or
fldcw
mov
mov
addl
xchg
sub
xchg
push
cmp
insl
push
adc
arpl
mov
sti
filds
movsl
cwtl
mov
sbb
push
ljmp
xor
lea
push
jo
push
sarb
enter
sbb
sbb
ficompl
lahf
repnz
mov
mov
ret
cmpsb
mov
xor
imul
andps
jbe
aad
rclb
cwtl
pop
jno
rol
mov
adc
and
or
mov
cmc
inc
cmp
stc
mov
lcall
lahf
jae
ja
js
fs
push
pop
and
xchg
scas
xlat
test
out
xchg
into
rcll
aaa
xchg
out
pop
fiaddl
bound
xchg
mov
int
mov
fwait
sbb
push
mov
shrb
ret
mov
cld
sbbl
cld
sub
imul
in
popf
sub
and
push
outsb
sbb
jmp
xor
jmp
xchg
jnp
xchg
sub
push
call
xchg
xchg
xorl
or
test
lds
popf
repz
sbb
push
inc
mov
das
inc
rolb
shrl
mov
pushf
sub
imul
xchg
jg
mov
jae
pop
std
test
cmpsb
lcall
and
xor
cld
dec
mov
aam
add
pop
jb
out
dec
jp
shrl
scas
sbb
cmpl
xor
pop
mov
sub
iret
adc
pop
inc
cld
shll
pushf
into
mov
mov
dec
movaps
pushf
inc
mov
cmp
loop
in
frstor
cli
cmp
xor
aad
pop
jbe
popa
cwtl
shll
leave
cmp
rcl
mov
in
xor
xchg
cmpsl
dec
int3
in
scas
mov
cmp
xchg
repz
test
mov
push
subl
shlb
repnz
mov
outsw
ljmp
cmc
adc
and
xor
jns
mov
in
scas
jp
scas
pusha
push
xchg
popa
pop
and
ds
push
sbb
jbe
mov
jb
stos
sbb
mov
cmp
iret
jecxz
inc
add
inc
call
and
add
cmp
in
fnstsw
dec
mov
xor
inc
test
loop
mov
add
cmp
in
ss
arpl
or
lods
sbb
xor
xchg
dec
test
sub
mov
lods
popa
test
pop
fs
out
pop
inc
stos
mov
push
das
decb
adc
jmp
cltd
mov
xchg
sub
aam
mov
mov
cmp
ljmp
mov
aam
decb
das
out
scas
sub
jo
andl
insb
xchg
rorl
push
jmp
cmp
pop
and
movsl
shlb
mov
test
test
fdivs
lods
call
sbb
dec
in
or
outsb
mov
push
xchg
and
fmuls
cmp
addl
jge
jg
pop
mov
sub
push
pop
cmp
lock
aad
enter
leave
sbb
ja
xor
dec
fisttpl
push
push
nop
or
imul
out
lret
jbe
dec
repnz
cmp
movsl
jnp
sbb
lock
xchg
jno
xchg
mov
das
cmp
jmp
mov
lds
push
or
scas
fwait
jmp
idiv
sti
mov
xchg
repnz
hlt
ljmp
loope
push
es
aad
xchg
push
divb
loopne
cwtl
jle
mov
in
and
adc
ds
xchg
into
idiv
and
mov
mov
movsl
mov
cmp
inc
jle
subl
mov
loope
and
mov
icebp
jne
outsb
pop
in
js
lret
xor
in
add
mov
test
jecxz
test
jp
add
mov
mov
enter
pop
and
jg
xchg
adc
jo
rcll
sbb
insb
mov
out
mov
xchg
mov
mov
fsubrl
or
xchg
lods
insl
xchg
in
push
mov
nop
mov
sbb
xlat
dec
xchg
in
cmp
mov
out
push
stc
aam
ret
add
xor
cmpsl
cmpsb
jno
fldt
loopne
mov
pushf
cmp
add
cltd
je
loop
loop
out
push
sbb
hlt
rorb
es
add
sahf
clc
rcrb
xchg
pop
decb
adc
mov
cmpl
cwtl
mov
push
push
ljmp
cmp
clc
jnp
addr16
mov
jne
movsb
or
sti
add
outsl
add
or
jp
fisubl
mov
addr16
jae
sbb
sbb
ds
push
xchg
jnp
push
inc
dec
insb
adc
ds
sti
xorl
adc
jnp
xor
sub
lock
push
push
xlat
adc
call
loope
add
mov
xor
ljmp
dec
les
and
ljmp
filds
xor
xchg
mov
inc
mov
inc
mov
xchg
rcr
pop
imul
push
cmp
mov
fsub
movsl
push
cmp
jge
mov
insl
aas
out
sbb
pushf
hlt
jne
rolb
out
stc
insb
insl
sub
movsl
fistpll
js
fiadds
xchg
ds
or
iret
cs
outsb
ret
lret
lcall
fcompl
outsb
lock
aad
cmp
dec
adc
jmp
mov
and
and
cmp
mov
push
aad
xor
cmc
inc
leave
lret
or
enter
mov
sub
fildll
lea
pop
pop
fs
imul
outsl
xor
cs
adc
push
push
push
dec
jge
mov
jmp
pop
fcompl
mov
insl
fcmovne
sub
mov
xchg
jl
pop
hlt
dec
lahf
dec
imulb
xchg
lock
jmp
mov
xorb
fbstp
pop
ret
push
jo
add
mov
inc
pop
test
and
in
push
cmp
psubsw
call
xor
aam
test
les
lcall
sbb
and
cmpsl
daa
or
call
insl
xchg
cld
pop
cli
or
mov
jb,pt
push
cli
gs
pop
icebp
sub
shlb
inc
mov
add
cmc
jmp
notb
pop
dec
in
es
mov
push
adc
mov
lret
cmp
inc
cmc
iret
aam
notl
mov
adc
fcmovb
ret
pop
mov
mov
cmp
movsb
mov
push
ret
inc
lds
shrb
cmp
jl
add
adc
push
or
xchg
shrb
lahf
inc
xchg
mov
cmpsb
and
mov
xchg
and
cmp
inc
mov
addr16
mov
and
fcomi
xor
es
add
ds
fsubp
outsb
sbb
jns
enter
cs
in
xchg
mov
ret
fldl
pop
mov
shll
pop
dec
jg
push
sub
out
pop
mov
pop
popa
out
fwait
std
dec
cmp
cmp
mov
aad
stos
imul
xor
outsb
test
sbb
push
mov
or
pop
movsl
insl
add
mov
imul
fs
push
push
or
outsb
scas
lahf
mov
mov
xchg
mov
outsb
bound
sub
sub
out
fistl
inc
and
aad
pop
test
push
xor
inc
jle
mov
xor
pop
in
mov
push
loope
test
nop
push
or
xchg
or
mov
incl
xchg
sub
js
aam
xchg
rclb
fs
cwtl
jnp
scas
xchg
sub
lret
mov
cmp
cmp
rcrl
mov
popf
jne
fdivrs
xchg
inc
and
jp
push
push
fcomps
mov
sarl
iret
push
lahf
test
adc
es
mov
stos
sbbl
and
pop
xchg
imul
cmp
in
loopne
inc
icebp
adc
inc
loop,pt
xchg
arpl
or
xchg
std
mov
jecxz
fsts
and
out
inc
pusha
push
lods
int
ret
in
inc
fiaddl
mov
xchg
andb
add
or
pop
push
mov
ret
adc
push
inc
and
push
xchg
ficoml
xadd
xchg
pop
sbb
fwait
mov
add
aaa
pop
mov
fcoms
div
mov
rep
aam
jl
daa
lea
sub
test
mov
movsl
add
ret
loope
lahf
test
icebp
mov
ret
int3
inc
fsubrl
sub
jp
enter
cmc
femms
push
add
mov
lcall
insl
cmp
jnp
int
sub
and
xor
jmp
cmp
adc
cmp
mov
cmpl
unpcklps
sbb
pop
cmpsb
push
and
addl
js
inc
xor
movsb
and
data16
mov
cmpb
xor
outsl
cmc
flds
aam
push
fsubrs
cmp
xchg
sbb
xor
stos
inc
aaa
mov
push
stc
ret
adc
je
push
scas
ds
scas
notb
sbb
mov
roll
jg
orl
dec
dec
pushf
cwtl
mov
std
loopne
or
lds
mov
add
add
xchg
call
pusha
mov
sbb
fisttps
pop
out
mov
jecxz
sub
in
jne
sti
insl
in
insb
xor
bound
inc
stos
out
popf
wrmsr
and
mov
dec
loopne
stos
cmp
push
mov
jae,pt
jl
test
jnp
sti
xchg
outsb
movsl
push
aam
rcr
mov
mov
movzbl
clc
mov
test
push
scas
roll
aad
out
mov
sbb
sbb
inc
mov
inc
enter
in
int3
repnz
mov
mov
cmpsb
pop
push
lcall
jns
sbb
jl
inc
adc
mov
mul
jg
mov
dec
lea
sub
mov
xor
or
lret
lock
cmp
jbe
rclb
mov
inc
pop
mov
insl
mov
cmpsl
mov
js
sub
pop
out
sti
dec
es
mov
popa
pop
bound
push
rcll
out
sbb
cmp
pop
ljmp
sbb
pop
int3
test
cmp
xchg
mov
rolb
scas
out
dec
out
xchg
call
adc
test
not
mov
pop
dec
verw
negl
xchg
inc
xor
into
push
imul
cmp
out
stos
pop
push
xchg
sub
push
sbb
repz
rorl
sub
repnz
sub
sub
pop
cld
fs
movsl
push
aam
inc
push
imul
shll
ficoml
shl
loop
daa
xchg
cmc
pop
jl
jle
in
adc
scas
fnstcw
das
mov
sbb
and
push
cmp
ss
cmp
pop
mov
sahf
mov
aas
pop
mov
popa
mov
aam
dec
sub
add
xor
pop
jbe
bound
mov
xor
out
cmp
mov
and
mov
cmc
cmc
std
pop
fadd
add
jg
pop
sbb
dec
icebp
mov
testl
test
mov
and
dec
dec
cmp
mov
aad
imul
jecxz
cwtl
cltd
push
repnz
push
mov
xchg
movsl
rolb
sbb
mov
push
dec
in
pop
pop
xchg
xchg
mov
scas
mov
shll
mov
cmpsb
push
cmc
test
jnp
insl
pop
dec
and
fldcw
sbb
mov
add
jo
mov
sbb
daa
dec
ljmp
cmp
shrl
and
not
xchg
mov
mov
inc
pop
inc
dec
mov
jmp
sbb
adc
lcall
dec
push
lods
fnstcw
test
popa
jg
stc
stos
and
inc
outsb
cmp
pop
iret
inc
xacquire
aad
fwait
jbe
out
push
outsl
mov
int
sarl
sti
jbe
push
pushf
cli
ret
and
repz
call
xor
fisubrs
sbb
and
lahf
and
and
and
pushl
sarl
sub
dec
jg
ret
orl
pop
pop
dec
iret
mov
repz
mov
js
xchg
shlb
pop
lea
or
jle
rcrb
pop
lods
pop
and
dec
push
stos
push
jno
aaa
pop
xor
dec
daa
jmp
sub
and
stos
mov
cmp
scas
push
rorl
or
add
and
mov
mov
jo
adc
inc
add
sub
jno
adc
inc
sarb
sarl
xchg
push
sbb
push
cs
dec
mov
sbb
mov
adc
mov
add
pop
mov
cld
adc
dec
add
mov
pop
dec
in
lahf
xorb
mov
add
mov
insl
xchg
mov
loopne
jno
stc
sub
xor
mov
inc
sub
or
in
insb
push
out
movsb
outsb
push
mov
cld
dec
or
and
out
faddl
add
lea
cmpsb
fs
cld
lcall
or
subb
push
mov
adc
xor
in
call
xor
lcall
mov
jmp
insb
lret
adc
xlat
insb
mov
dec
jmp
mov
and
ja
mov
repz
push
mov
subl
stos
jmp
loopne
cli
sbb
int
dec
inc
and
inc
mov
aam
pusha
out
mov
sub
xchg
les
xchg
dec
leave
mov
out
add
andl
dec
adc
xchg
clc
or
pop
arpl
adc
js
inc
out
jne
adc
adc
les
mov
mov
mov
lods
je
rorb
or
scas
cmp
jecxz
xor
insl
xor
das
idivl
xor
sub
sarb
cltd
jne
jns
cwtl
jno
scas
mov
loopne
xor
addr16
sahf
dec
xchg
int
dec
mov
jo
cmp
add
dec
mov
pop
jne
mul
in
into
pop
adc
js
add
mov
jp
movsw
mov
xchg
gs
inc
cltd
or
inc
leave
or
pop
pop
cmp
cmp
push
fisubrl
jecxz
inc
call
call
fmull
xlat
js
jnp
sbb
outsb
daa
out
cmpsl
test
lcall
push
negb
leave
adc
movsb
testl
mov
mov
dec
add
inc
js
push
das
rep
fisubrl
sbb
gs
movsl
push
fiaddl
sbb
lock
lock
les
push
sti
pusha
push
or
sbb
push
pop
rorl
sbb
cmp
fwait
jns
inc
mov
mov
scas
test
sub
lea
leave
ret
mov
ret
movsb
aad
adc
cwtl
aas
fnsave
mov
fsubs
loope
mov
popa
xor
xor
mov
jge
cmp
mov
and
cli
pop
daa
leave
mov
sub
xchg
cmp
push
push
leave
test
xchg
arpl
je
sub
rolb
xchg
push
cwtl
mov
add
sbb
sbb
add
stc
rolb
ret
aad
ret
sbb
push
sbb
cli
and
jno
adc
scas
mov
xor
push
sbb
mov
or
ret
aam
dec
gs
hlt
and
xchg
in
std
add
dec
cltd
hlt
sbb
mov
and
pop
pop
dec
scas
jbe
les
push
mov
stos
int3
mov
or
notl
pop
shll
cmp
xorl
cs
aaa
lret
dec
shl
loop
std
int
dec
dec
fcomps
lods
pop
mov
enter
mov
mov
or
cmp
enter
addr16
adcl
outsb
cmp
dec
fldt
add
cli
lahf
pop
mov
and
jmp
sbb
mov
insb
fdivrs
call
loop,pt
mov
faddl
jne
jne
and
and
ja
lret
lcall
xchg
adc
mov
movsl
dec
int3
inc
sub
and
mov
bound
negl
mov
call
push
cld
pop
fmulp
mov
and
mov
jp
push
fists
cld
push
jo
or
mov
popf
add
sub
jbe
cmc
dec
push
xorb
outsb
shl
mov
int3
aas
jo
add
idivl
mov
daa
scas
pop
movsb
test
cli
fwait
nop
shll
xchg
arpl
or
icebp
push
push
lds
insl
icebp
mov
loope
xchg
dec
stos
jnp
loopne
pop
push
rolb
sub
sbb
xor
fldt
std
adc
push
imul
out
jl
xchg
or
fisubl
add
out
idiv
js
cmp
lcall
cltd
push
imul
lea
inc
sub
push
sub
aam
push
out
aad
sti
mov
jbe
sub
fcoml
pop
loope
lock
mov
xor
xchg
mov
cmp
adcl
fisubrs
cli
push
fimuls
inc
and
punpcklwd
pop
mov
mov
cmp
mov
addr16
xor
sbb
imul
push
andb
loop
mov
in
jne
orl
stos
outsl
call
push
fsubs
popl
enter
jnp
into
scas
pop
xchg
out
icebp
mov
pop
pop
and
test
dec
imul
movsl
sbb
out
and
dec
sub
aam
bsr
arpl
cld
inc
hlt
mov
bound
xor
and
cmp
test
pop
xlat
pop
stos
xor
pop
pop
mov
inc
jae
push
insb
js
cld
mul
add
and
ficompl
daa
scas
mov
sbb
sbb
mov
and
pop
mov
movsb
inc
stos
data16
sbb
xchg
loop
mov
jo
sbb
inc
cmp
pop
loopne
and
mov
add
mov
flds
int
mov
test
fisttpl
popf
or
cmp
and
loop
and
iret
imul
int
call
movl
out
add
out
xor
repnz
xchg
jecxz
push
xchg
inc
sbb
inc
mov
cmp
mov
pushf
xchg
xorl
cwtl
imul
in
fdivrl
mov
int3
pop
pop
movb
push
ds
mov
dec
lret
adc
sbb
fadds
push
adc
test
cmp
lock
int
aam
cwtl
paddq
ljmp
sub
aaa
cmp
repz
or
and
aam
xchg
lods
jge
sub
ljmp
fs
iret
xchg
sub
jno
flds
stos
pop
dec
addr16
or
insb
repnz
xor
das
pop
cld
add
dec
pop
inc
inc
sahf
test
dec
adcl
call
pop
push
sub
jp
mov
or
fimull
xchg
mov
ss
push
add
loopne
adcb
pop
sub
push
popa
int
bound
or
mov
mov
loopne
mov
jno
xor
and
gs
adc
adc
mov
imul
pop
pop
sub
nop
scas
push
sub
popa
test
mov
mov
mov
outsl
cmpsl
cmp
pop
mov
mov
push
and
xchg
movsb
sarb
add
add
je
cs
mov
adc
jne
mov
cmp
jp
andb
or
xchg
repnz
jae
movsb
inc
in
lock
sbb
push
lret
jg
inc
lret
leave
addr16
xchg
test
ds
mov
push
loop
shr
call
or
dec
and
adc
fimull
jle
mov
jae
or
arpl
jb
movsl
mov
cmpsl
cmp
mov
pop
cmc
jne
inc
data16
mov
cmpsl
add
std
lods
fwait
addr16
mov
je
xchg
jno
mov
cltd
popa
xchg
lret
inc
outsl
ret
shl
mov
or
insl
loop
or
out
stos
das
ljmp
imul
test
movsl
outsl
dec
lea
mov
adc
pop
jp
int
andl
push
in
iret
loopne
shrl
mov
into
jmp
inc
add
push
je
sub
cmp
js
stc
adc
xor
mov
jmp
test
dec
and
inc
sbb
pop
fs
addr16
fs
into
xor
mov
out
into
lret
mov
mov
roll
jnp
add
jnp
in
scas
inc
push
pop
in
call
ljmp
push
push
in
xchg
rcrb
rcll
inc
sub
imul
ljmp
movsl
cmp
push
sub
cld
fisttpl
lahf
or
and
cmc
aam
jle
dec
out
cmp
ss
insb
les
xchg
repnz
inc
mov
insb
or
mov
lret
adc
mov
and
xchg
push
adc
daa
push
pushf
in
ficoml
orb
and
fisubs
jns
mov
out
jle
pop
inc
js
into
arpl
add
sub
push
mov
cltd
dec
gs
stos
rclb
sbb
cwtl
cmp
cmp
push
test
dec
mov
pop
or
mov
or
xchg
xor
and
pop
fwait
in
ret
psubusw
mov
lods
cmpb
sub
pop
scas
adc
mov
out
add
push
cld
or
push
fdivrs
bound
insb
pop
int
lea
arpl
gs
jns
xchg
in
inc
lahf
stos
test
fs
cmp
and
dec
cmp
xchg
jmp
and
mov
xchg
inc
gs
nop
fstps
or
lret
inc
xchg
dec
jmp
fnstsw
pusha
mov
or
mov
loop
and
xchg
stos
push
addr16
or
addl
pop
xor
mov
and
pop
jg
xor
sbb
daa
test
pop
test
or
iret
add
shrl
mov
stos
add
or
sbb
aaa
in
xor
sub
addl
push
push
push
jecxz
ret
or
cwtl
inc
cltd
or
pop
lret
testl
jmp
push
leave
fbstp
ret
mov
or
jmp
mov
dec
or
out
dec
out
inc
cmp
daa
sbb
and
add
ja
aaa
add
add
mov
or
call
pop
jg
out
lea
mov
out
xor
xlat
adc
dec
or
jb
mov
or
sar
outsl
or
push
sub
xchg
mov
sbb
and
ss
outsb
inc
adc
arpl
or
lock
xor
jb
gs
dec
xchg
or
imul
mov
add
movsl
daa
mov
and
sbb
insl
jg
or
outsb
leave
mov
test
inc
mov
das
jo
xor
cmpsb
jle
and
mov
pop
jb
jecxz
xor
arpl
lret
lahf
lods
add
xchg
in
idivl
out
aad
lock
mov
fsubrl
lods
push
sub
lret
sar
add
dec
or
out
mov
movsb
je
lret
jb
cmp
xor
jmp
sub
or
adc
or
pop
stos
cmpsl
sub
dec
inc
pusha
add
push
add
mov
sahf
lds
mov
in
adc
adc
dec
push
xchg
pop
mov
push
push
in
dec
and
je
and
dec
xor
add
cmp
lcall
dec
cmp
mov
xchg
push
inc
and
cmpsl
pop
ret
mov
je
sarb
xor
movsb
es
push
xor
jno
dec
nop
mov
cmpsl
popf
aas
inc
pop
out
inc
aaa
cwtl
push
inc
jne
push
mov
shrl
in
aas
insl
pop
and
adc
fs
adc
cltd
mov
in
fstl
aaa
aam
and
lcall
ja
cltd
xlat
pusha
or
insl
stos
xchg
aas
cmpsb
ret
add
pop
mov
xchg
xor
mull
fsts
stos
hlt
in
jecxz
into
movsb
pop
or
xor
enter
pusha
test
in
mov
push
mov
fdivrs
push
popa
outsl
daa
inc
leave
lds
mov
test
or
fs
inc
push
jecxz
mov
iret
add
push
jl
mov
ret
jb
pop
out
xor
mov
outsl
xor
adc
mov
pop
in
cmp
adc
sub
sub
cvtpi2ps
inc
mov
inc
xor
aas
dec
mov
shll
out
xor
inc
enter
mov
or
nop
bnd
rcl
pop
stc
aas
ja
imul
fiadds
loop
test
add
jae
cmp
popa
sub
cltd
mov
add
pop
mov
jb
xchg
test
cmp
push
rorl
stos
clc
imul
push
xor
or
sbb
mov
dec
stos
xor
ss
loopne
cmp
mov
addb
mov
scas
dec
out
int
pop
add
adc
ds
imul
orl
andb
sbb
pop
loopne
ljmp
add
popl
xchg
mov
pop
in
loop
xchg
mov
std
pop
aam
sbb
cmc
mov
adc
pop
mov
jg
pop
inc
add
out
push
sbb
sub
cmc
jp
dec
loope
cmpsb
pop
clc
or
or
and
jp
popf
add
sub
mov
ret
and
mov
rolb
xchg
mov
into
add
add
stc
mov
cmp
xchg
pop
sub
cltd
sbb
cmc
rcrl
dec
and
mov
push
jb
cli
imul
lret
sub
test
mov
cmp
cmp
fnstsw
dec
imul
or
lock
xchg
cli
int3
xor
gs
jns
in
insb
sub
mov
or
cmc
push
test
cmp
push
push
pop
or
hlt
jnp
stc
sub
cmc
out
xor
movsl
push
adc
mov
mov
out
sbb
sbb
xchg
pop
xchg
and
fiadds
mov
push
shrl
jp
push
fisttpl
jns
adc
cmp
js
mov
cmp
inc
scas
sbbl
inc
push
inc
repz
and
jle
xlat
fnstsw
or
scas
out
add
mov
fmull
mov
mov
mov
bound
and
sti
cmpsl
lahf
mov
sbb
inc
arpl
xchg
lret
inc
arpl
sahf
bound
ds
push
lcall
push
jnp
cmc
adc
icebp
arpl
in
imul
or
incb
gs
xorb
ja
pop
add
xlat
jnp
shrl
sbb
xor
sbb
cmp
mov
pop
dec
out
nop
cmp
movsl
ret
orb
notb
dec
push
jno
push
jbe
xchg
lds
cmpsl
scas
dec
iret
clc
push
jle
adc
pop
clc
out
jb
pushf
adc
mov
stos
mov
mov
inc
push
in
sub
cmpsl
out
popf
dec
inc
or
sub
test
pop
adc
push
sbb
mov
mov
pop
add
aad
jl
test
iret
and
inc
jb,pn
push
dec
test
sbb
int
push
movsb
push
mov
adc
jp,pt
imul
sub
fisubl
lcall
mov
shlb
out
shl
addr16
sub
adc
mov
cmp
jb
scas
lcall
mov
clc
pushf
subl
repnz
mov
push
jae
mov
test
adc
adc
pusha
test
into
push
adc
add
inc
dec
sbb
fwait
mov
xor
pop
sbb
mov
inc
decb
push
rorl
and
inc
lret
lahf
sbb
imul
dec
jb
shr
dec
inc
in
fnstenv
dec
fs
xchg
cmp
fxch
jae
mov
ds
cltd
sbb
and
add
jecxz
mov
or
cli
sbb
dec
sub
daa
dec
stc
sahf
int3
cmp
inc
push
lock
or
ljmp
dec
sbb
cltd
jne
push
out
outsl
popf
and
jg
ds
xchg
xlat
pushf
cmc
lods
repz
inc
jmp
and
dec
mov
hlt
in
stos
lock
aam
fadds
dec
les
fcmovne
imul
pop
xor
adc
jl
cmpsb
hlt
and
lret
outsb
push
scas
repnz
test
das
addb
or
aad
shlb
es
leave
mov
lcall
dec
dec
pop
js
or
mov
jae
jg
jecxz
movsb
insb
cmp
mov
fnstsw
scas
inc
cmpsl
adc
dec
cmp
xchg
cmp
subl
nop
cmp
xchg
push
xchg
mov
aas
cs
jnp
outsl
pop
sbb
pop
inc
lea
fcompl
jbe
push
movsl
popa
fwait
dec
or
mov
push
imul
aam
jp
mov
sbb
jb
rolb
push
cmp
xor
dec
xchg
sbb
mov
and
sbb
lea
push
xor
enter
js
push
ret
decb
rcrl
arpl
dec
rcr
iret
pop
sarb
mov
dec
fsts
jb
cmovge
stos
dec
subl
cmp
mov
mov
xchg
movsl
gs
sarb
cld
dec
xor
in
lock
jns
in
out
mov
jno
ret
mov
xchg
in
jns
push
mov
test
push
fcoml
aam
imul
mov
xchg
popf
sbb
jle
adc
inc
daa
fidivrs
push
push
mov
jmp
and
or
and
dec
mov
insb
in
cmpsb
cmp
jae
mov
sti
lcall
sbb
outsb
inc
push
test
pop
pop
pop
gs
ss
cmp
std
outsl
movsl
add
mov
or
mov
xor
and
cli
mov
mov
stos
int3
ds
and
pop
loopne
lcall
lds
cwtl
mov
cmp
insl
jmp
push
jg
and
fcomps
jo
test
and
pop
ja
adc
outsb
aad
or
sub
mov
push
cwtl
xchg
pop
adcl
out
movsl
xchg
cwtl
dec
mov
lret
mov
stos
mov
ret
xchg
sbb
inc
pop
ljmp
lahf
push
negl
sbb
pop
push
jbe
inc
dec
fisubrl
adc
aaa
dec
mov
mov
cmpsb
sub
ret
cmp
repnz
sub
inc
stos
ret
lock
fwait
cmp
lock
popa
outsb
mov
divl
pop
push
lock
fimuls
mov
add
jle
fadd
dec
arpl
and
cmpsb
in
mov
scas
adc
jnp
sbb
outsb
sbb
iret
jle
sub
push
pop
mov
icebp
lods
sbb
pusha
in
jne
mov
test
sbb
xor
jae
sbb
cmp
loop
or
std
leave
push
or
movsb
lea
xor
mov
repnz
nop
aas
mov
jg
sub
bound
loopne
popa
int
jmp
fs
add
aaa
int
test
mov
sbb
push
out
aad
js
js
aam
out
jnp
pusha
inc
stos
dec
iret
fidivrl
js
ljmp
and
cmp
addl
sub
sti
adc
cmpsb
movsl
xchg
add
and
popf
dec
xchg
dec
gs
or
push
inc
std
leave
pop
leave
scas
mov
cmp
roll
bswap
out
jo
lods
cwtl
xchg
jbe
mov
aas
dec
sub
xor
dec
repnz
aaa
and
hlt
es
lret
dec
sbb
xchg
jnp
and
bound
and
push
bound
icebp
adcl
cmp
cmpb
out
js
dec
sbb
test
mov
adc
push
jne
ror
shlb
subb
int
mov
push
mov
les
push
cmp
aam
fmull
in
xchg
sub
fiadds
loope
mov
jge
xchg
ret
fists
pop
xchg
dec
and
adc
or
pop
daa
hlt
pop
fwait
jnp
inc
movsb
les
adc
cmpsb
add
push
inc
xor
mov
and
pop
adc
sub
call
sub
insb
jmp
pusha
inc
push
push
fsubl
add
loope
insl
lahf
and
dec
jge
sbb
mov
ss
push
pop
pop
int3
push
push
ret
fs
and
mov
into
push
mov
or
sub
inc
out
call
xadd
fists
xchg
dec
and
push
insb
push
scas
mov
xchg
rol
fucomp
nop
inc
pop
inc
pop
sub
pop
popa
mov
in
sbb
inc
stos
push
push
inc
pop
fsubr
aaa
cli
inc
pop
lds
lret
pushf
ja
bnd
insb
dec
sub
rcrb
sub
ds
movsl
sahf
inc
jns
rcrl
xchg
arpl
jne
lds
popa
mov
fld
jmp
int
push
jne
push
cmp
fstps
aaa
rclb
adc
enter
lahf
scas
cmp
adc
sub
mov
outsb
add
add
lcall
frstor
sbb
push
or
es
outsl
enter
fsts
pop
jge
jbe
inc
fucomip
cmpsl
test
enter
add
push
gs
into
cwtl
loope
and
adc
sbb
jo
lods
stos
sub
dec
fnstsw
popf
cs
sub
xor
or
mov
mov
aam
scas
cli
int3
push
scas
mov
and
or
cmc
imul
or
push
sbb
lods
push
mov
xor
jmp
in
lahf
lock
jb
cmp
data16
inc
and
push
je
sti
incb
and
arpl
mov
gs
xor
pop
add
sbb
cli
jmp
clc
lahf
or
cli
enter
sbb
dec
mov
mov
scas
and
mov
fwait
mov
dec
mov
lea
in
add
sub
icebp
jno
push
dec
enter
sbb
enter
outsb
aam
inc
cmpsb
daa
sbb
add
pop
mov
ljmp
xlat
pop
das
push
mov
dec
xchg
mull
stos
mov
and
popa
inc
out
add
dec
ret
mov
outsb
xchg
xchg
add
rol
or
adc
ds
out
daa
cwtl
push
push
mov
or
lock
rcl
xchg
mov
dec
mov
loope
repz
pop
mov
shrl
jnp
aam
mov
pop
mov
ss
ret
cmp
mov
dec
out
mov
sub
aas
sub
fstps
sbb
mulb
and
jg
in
and
fwait
cmp
cmpsb
lods
test
xchg
jnp
enter
xlat
sub
push
push
xchg
repz
jge
stos
fwait
mov
and
lds
add
inc
roll
outsb
mov
pop
dec
fucomp
adcb
insb
dec
sbb
dec
out
pop
rolb
mov
in
and
cmp
pop
or
and
cmpsl
inc
in
fmull
sub
lcall
adc
sub
jge
fmull
inc
bound
xor
movsl
mov
jns
pop
xchg
dec
es
dec
daa
nop
push
pop
cmp
jecxz
jae
xchg
add
pop
sub
or
jbe
jmp
mov
fwait
iret
mov
sub
jecxz
fmul
call
fwait
mov
cwtl
xchg
adc
add
shrb
sub
icebp
dec
xchg
and
pop
mov
push
pop
fcoms
or
xchg
lds
pusha
out
in
cld
cld
inc
xorl
mov
sub
pop
adc
popf
xor
add
outsl
stc
int
xchg
cmp
popf
inc
add
sbb
into
pop
fstl
sbb
xchg
lret
imul
jl
je
mov
pushf
mov
xor
push
mov
jae
mov
mov
cmpsl
jl
xorl
lea
adc
dec
inc
scas
test
add
mov
icebp
lds
ljmp
dec
rolb
xchg
add
dec
mov
pandn
mov
mov
mov
push
and
mov
repz
mov
push
mov
repnz
push
jmp
mov
mov
pop
addr16
jmp
cmp
mov
insb
and
cmp
pop
test
sub
repz
xchg
dec
adc
pop
cmp
jg
rcrb
sbb
movsl
and
xchg
iret
sub
fiaddl
push
inc
jl
mov
sbb
pop
movsb
sahf
mov
loope
dec
orl
mov
in
mov
jg
hlt
out
cmp
pop
mov
mov
jl
mov
inc
pop
pop
mov
jns
mov
jns
rorb
inc
sub
loop
mov
sub
popa
test
clc
lret
pop
sbb
out
pop
mul
cld
cmp
outsl
mov
dec
xchg
in
push
repnz
clc
movsb
das
shr
les
xchg
movl
sub
aaa
mov
in
sbb
rorb
arpl
mov
xor
adc
pop
jne
addr16
scas
lret
ret
std
loopne
lahf
insb
pop
xor
pop
icebp
das
dec
cmp
jo
fdivrs
pop
sub
enter
repz
xchg
imul
addb
adcb
dec
movsb
dec
fs
fnstsw
mov
aaa
fldl2e
sbb
aaa
jmp
test
sbb
out
add
repnz
fidivl
xlat
insb
loopne
cmp
mov
mov
cmp
pop
ss
mov
xchg
mov
icebp
scas
mov
mov
insl
data16
sbb
pushf
jne
hlt
dec
push
push
lret
cs
cmc
gs
pop
dec
xchg
cmpsb
enter
mov
sbb
mov
or
jg
pop
inc
mov
inc
dec
sbb
cmp
adc
xor
jge
or
jno
test
sbb
outsl
adc
js
repnz
sub
jl
jbe
jns
or
pop
stos
pop
rcr
outsl
push
je
je
mov
in
cs
into
dec
push
into
sub
pop
mov
ficomps
and
sarl
in
lahf
movsl
pop
jnp
loope
dec
adcb
dec
add
jl
xchg
sti
fwait
inc
ds
mov
xor
dec
jae
jbe
cmp
mov
mov
mov
outsl
pop
inc
jne
inc
and
and
and
jnp
call
inc
push
loopne
inc
aaa
lahf
push
xor
bnd
ret
push
scas
pop
push
push
mov
test
push
jg
rclb
mov
ljmp
inc
ljmp
imulb
std
cmp
mov
inc
mov
or
push
in
je
popa
andl
mov
mov
mov
cmp
inc
loop
fidivrs
mov
loop
in
xchg
adc
sbb
stos
xchg
push
aaa
orb
or
dec
jne
subl
fildll
cmc
cmpsb
sti
cs
sub
lea
ja
insb
cmc
inc
inc
push
push
inc
inc
cmp
fucom
subb
jle
notb
lret
sbb
cmc
push
mov
jmp
sbb
mov
push
add
stos
sbb
stos
pop
dec
mov
movsb
lods
dec
stos
daa
aaa
xlat
lds
clc
dec
lea
inc
or
dec
cli
jmp
push
mov
std
pop
loop
add
ss
mov
mov
dec
rcrb
inc
sarb
add
in
aas
daa
mov
clc
pop
sub
sbb
sub
mov
mov
push
or
nop
pop
sub
cmpsl
aad
lcall
shll
mov
out
dec
stos
and
pop
xchg
or
push
adc
test
lcall
inc
xchg
sub
push
scas
ljmp
push
mov
outsb
sti
adc
cwtl
and
fmull
and
lods
sub
push
jae
dec
icebp
mov
xor
mov
mov
mov
mov
mov
das
add
add
insl
insb
jmp
mov
pop
lods
push
xor
xchg
jno
push
das
jnp
inc
cmp
cwtl
call
std
pop
in
popf
int
nop
adc
outsb
or
cmp
adc
mov
popa
dec
adc
and
pop
or
shl
test
pop
mov
xor
subb
lea
mov
push
mov
sub
inc
push
loop
sub
push
inc
test
test
or
aaa
ds
aaa
cmp
cmpsb
repz
roll
push
rdpmc
or
rcrl
push
daa
in
rorb
mov
pop
xor
sbb
jbe
loop
sub
cmp
inc
bound
jmp
and
mov
fdiv
into
lods
std
jl
mov
lock
mov
gs
jnp
leave
push
push
dec
xchg
pop
insb
pop
xor
push
jmp
imul
add
lea
and
nop
xorb
mov
jecxz
bound
lods
dec
push
rolb
arpl
scas
mov
cwtl
pop
mov
inc
adc
rcll
mov
clc
jno
or
je
aas
rcrb
mov
in
test
sub
mov
push
sbb
orb
ljmp
ret
mov
xchg
lcall
adc
aam
sti
pop
or
movsl
lret
je
jl
xor
lods
das
dec
dec
inc
iret
xor
fs
jo
or
ret
push
insl
ss
cld
lea
repz
inc
dec
scas
dec
pop
add
xchg
adc
inc
xchg
adc
fisubs
loop
sub
js
enter
orl
fmulp
xchg
mov
lods
shll
outsl
pop
pusha
jb
push
subb
push
mov
dec
imul
jnp
les
stos
pusha
pop
sub
jns
sti
popf
or
mov
pop
adc
pop
xchg
pop
in
mov
mov
lods
fdivs
test
push
and
lea
mov
push
sub
mov
dec
js
outsl
out
ljmp
fcmove
lea
add
dec
popa
aam
cli
inc
mov
fwait
push
xchg
lods
mov
dec
cmp
call
lret
fmuls
mov
cmpl
repz
out
iret
pop
stos
inc
jo
mov
movsb
dec
or
lahf
xchg
dec
out
std
addr16
mov
addl
xchg
jmp
mov
push
dec
or
and
push
mov
cmpsl
xor
xor
xchg
outsb
jno
loop
inc
enter
bound
dec
or
repnz
sahf
xor
xor
fisubs
xor
adc
aad
cmc
mov
sub
loope
mov
outsb
sbb
jge
sbb
inc
faddl
fimuls
cld
test
lret
popf
mov
adc
push
sub
int3
cmp
cli
or
cmp
mov
aaa
int3
xchg
arpl
bnd
mov
into
lret
xchg
call
or
pop
movsl
dec
add
xchg
jg
ficoml
movsl
cmp
stos
or
mov
mov
sub
push
sahf
xor
std
sub
fistps
fwait
xor
cmpsb
scas
out
dec
push
ret
push
pop
bound
pop
aaa
dec
subl
iret
pushf
xchg
dec
shl
test
sbb
xor
cli
cmp
pop
and
out
jp
and
mov
popf
scas
jno
fwait
setns
lret
test
adc
sub
inc
cmp
fildll
or
fbld
fwait
movsb
dec
cmp
cmp
push
imul
cmp
pop
es
aaa
mov
pop
pop
jmp
or
and
imul
testb
stc
or
jp
push
inc
jmp
das
fcmovne
inc
mov
cmp
push
and
or
push
arpl
movsb
shl
add
push
sub
data16
sbb
daa
and
cmp
bswap
mov
dec
loope
push
mov
lret
inc
jp
sub
pusha
iret
adc
ret
add
sahf
es
pop
cmp
cmc
icebp
jno
insl
jne
sbb
aad
cld
flds
sub
in
leave
xorb
inc
pop
dec
add
push
inc
adc
maskmovq
testl
scas
mov
out
jbe
and
std
xor
push
sbbl
fwait
int
cli
and
adc
imul
popf
or
pop
xor
jecxz
adc
xchg
movsb
add
arpl
sub
insb
out
mov
jne
insl
mov
or
testb
xchg
lock
xor
pop
lahf
sbb
clc
pop
pop
add
mov
fimuls
add
add
movb
mov
push
mov
loope
adc
outsl
adc
lret
idivb
xor
cmp
lcall
je
rclb
test
push
imul
ds
dec
jl
and
stc
push
adc
jnp
ffreep
pop
test
pop
addr16
sbb
mov
sub
cmp
lret
test
mov
das
cmp
xlat
dec
aaa
jae
movsb
loope
xor
jbe
push
inc
sbb
iret
mov
pusha
mov
xchg
inc
sbb
mov
xchg
mov
sbb
push
movb
rolb
stc
out
xor
cmp
mov
jae
data16
test
and
aam
dec
arpl
xor
sub
or
pushf
fistl
jge
daa
jne
add
cmp
mov
stc
jmp
xchg
and
jle
scas
stc
push
lret
sbb
adc
xchg
stos
xchg
xchg
out
adc
lea
sbb
divl
push
xchg
jmp
bound
andb
fmul
jnp
or
jns
enter
int
in
cltd
addl
cmp
xchg
jno
outsl
mov
stc
test
adc
pop
push
sbb
and
fmull
mov
fisubrl
sar
ja
clc
fisubrs
loop
jae
adc
push
jge
xor
adc
mov
bound
and
pop
mov
loopne
xchg
andl
push
je
adc
dec
jnp
sbb
mov
jae
pop
iret
adc
pushf
ret
sbb
push
jbe
fistl
fistpll
inc
jge
test
xor
mov
cmp
push
mov
sub
or
repnz
pop
icebp
sub
decb
inc
ljmp
xchg
mov
cs
jae
fcomps
pop
or
rcrb
js
nop
fninit
jl
sub
movsl
fsubl
or
push
push
jmp
pop
loopne
xchg
lret
popf
inc
addr16
int
xlat
sbb
sbb
lahf
add
flds
or
jae
mulb
xchg
and
cmp
inc
mov
popf
push
and
ljmp
xchg
or
fucomi
adc
gs
stos
pop
xor
aas
pop
aaa
hlt
push
push
push
mov
mov
movsb
and
sub
xchg
cmp
data16
in
ret
push
adc
push
adc
jge
cs
pushf
cwtl
fs
sub
lods
pusha
add
jp
adc
hlt
in
je
push
mov
imul
push
xchg
gs
sbb
addr16
lcall
addb
cmp
xchg
nop
sarl
jne
lret
hlt
push
scas
arpl
lods
sbbb
jne
push
lock
popa
inc
dec
sahf
insb
sbb
adcl
clc
sbb
nop
dec
pop
cmpsl
jge
mov
push
pop
enter
imul
cmc
jge
inc
or
sbb
loopne
cmpsl
jnp
jnp
inc
arpl
mov
pop
or
loope
outsb
arpl
adc
sbb
rcll
sbb
les
dec
insl
cmp
shll
enter
fistpll
shll
push
iret
sbb
out
inc
mov
xor
outsb
sbb
push
notb
xchg
jecxz
fnsave
shl
leave
mov
mov
sub
std
clc
adc
adc
mov
xor
scas
xchg
aas
dec
and
mov
mov
dec
jecxz
insl
int
dec
in
jmp
ss
mov
mov
sbb
jge
es
clc
ds
xor
les
pushl
push
add
stc
addr16
fs
les
sbb
adc
jne
enter
ror
jne,pn
fisttpll
dec
jp
mov
and
test
xchg
testb
pop
pop
repz
ss
xchg
lods
loop
inc
jecxz
mov
lea
sahf
xor
push
dec
xchg
mov
and
pop
sbb
xor
cmp
hlt
pop
push
cld
mov
pop
cwtl
jge
int
movsl
jne
sbb
out
popa
cmp
subl
gs
rcl
scas
add
clc
mov
cmp
mov
ja
cltd
ss
rorb
jnp
bnd
dec
adc
incl
sbb
or
fwait
and
jle
iret
daa
xchg
jecxz
sub
inc
jle
sahf
push
or
pop
jle
dec
xor
mov
arpl
std
std
cmp
jg
or
add
addr16
insl
cmp
xchg
out
roll
arpl
dec
std
xor
jne
ljmp
mov
repnz
gs
add
add
cmc
mov
inc
es
ret
flds
loop
sub
loop
lret
mov
lahf
pop
xor
scas
shl
test
or
in
push
or
loope
lahf
pop
add
ds
inc
mov
sbb
mov
sub
cli
mov
outsl
adc
fstps
push
dec
inc
test
mov
ror
loopne
int
in
pop
jle
pop
inc
jl
lock
aam
dec
bound
repnz
xor
or
pusha
cmp
pop
popa
cmpsb
xor
icebp
pop
cli
inc
push
lods
scas
int3
imul
xor
outsl
lds
mov
ret
rcrl
pushf
cmp
pop
shl
inc
inc
fldpi
push
stos
icebp
lahf
push
sub
stc
push
nop
out
loop
lds
jmp
aam
sub
pusha
fisttpll
add
pop
dec
lock
mov
scas
mov
jne
jne
shrb
imul
cld
cmpsl
insl
mov
pop
ja
mov
dec
push
lret
inc
mov
shlb
jle
arpl
loope
js
movups
cld
das
jp
cmovnp
jp
punpcklwd
cmp
mov
xchg
cli
jp
fdivs
leave
sub
xor
mov
xor
dec
in
int
iret
ljmp
pop
dec
in
pop
scas
sub
mov
rcrb
jp
rclb
fs
inc
xchg
and
das
shrl
xchg
insl
and
sbb
scas
ror
mov
outsb
add
outsl
imul
pop
xchg
jl
cmpsl
dec
repz
mov
mov
insl
andl
aas
stos
mov
out
aas
insl
sub
cmpsl
js
loope
cmpsb
test
mov
push
sahf
data16
ss
xchg
cmp
inc
jmp
ds
popa
cltd
jne
mov
jl
aad
xor
data16
pop
and
add
jg
ja
xchg
lods
fldenv
movsb
inc
jb
sahf
jno
push
and
int
dec
bound
xchg
ss
divb
jnp
jmp
insb
ds
cmp
push
rorb
shrb
xor
push
push
jmp
push
les
sub
xor
jg
adc
sahf
jp
xor
push
mov
sarb
push
push
imul
lcall
and
test
inc
test
lret
inc
inc
mov
xor
ja
sub
inc
add
dec
out
fidivrl
xor
mov
cmp
sahf
out
pop
ljmp
lock
xchg
lret
sbb
sub
or
and
jnp
rolb
cmp
dec
in
jnp
jno
sti
lahf
fstp
xor
and
pop
mov
or
pop
mov
xchg
xor
push
xchg
sub
add
mov
pop
pop
stc
cmp
jno
movsb
adc
xor
sahf
pop
ror
push
sub
lock
sbb
xchg
incb
in
cli
add
or
mov
insl
mov
ss
xlat
sbb
pusha
les
das
popf
aam
push
mov
inc
xchg
icebp
jne
xor
add
mov
pop
xchg
mov
call
mov
mov
imulb
adc
xchg
and
fwait
mov
dec
add
fstpl
in
pusha
mov
outsl
and
cmpsb
xor
xchg
jo
xchg
mov
or
scas
dec
ret
inc
lcall
sub
fucomi
pop
bswap
sub
sub
mov
dec
push
jp
lods
stos
testb
inc
and
xor
div
adc
loopne
mov
adc
pop
daa
inc
icebp
sti
pop
push
xchg
and
and
jb
push
stos
ret
dec
les
sti
mull
xlat
dec
in
sub
add
fcomip
cld
frstor
sub
or
push
fidivs
xlat
pop
jmp
jge
out
cmp
push
jge
cmp
cmp
jge
inc
inc
push
dec
dec
xlat
ja
add
pop
ds
iret
jg
ss
outsl
test
loope
push
pop
lods
xor
in
xlat
mov
int3
insb
add
addr16
cmp
cmp
fs
sub
xor
mov
mov
pop
and
aam
fstp
mov
imul
fs
push
dec
fldl2e
ret
sub
xor
add
addr16
cmp
xchg
test
cmpsb
or
mov
sbb
in
pop
or
stc
insb
repnz
mov
imul
sahf
pop
scas
and
jl
mov
mov
mov
jbe
add
ss
or
pop
ror
sarb
jecxz
mov
xchg
or
add
mov
movsl
push
jo
xchg
psubq
imul
add
lret
aam
inc
and
stc
ss
xchg
mov
sbb
adc
out
sub
sbb
loope
in
in
cltd
ror
mov
mov
divb
das
xchg
data16
xchg
pop
mov
in
pop
jo
idiv
movsb
out
jl
sub
hlt
mov
repz
pop
mov
push
xor
sbb
pop
negb
pusha
dec
xchg
sti
js
inc
js
add
sahf
sbb
rcll
test
repnz
aam
and
mov
cmpsl
pop
push
pop
fidivrs
jmp
inc
pop
sbb
imul
arpl
lds
push
cli
add
and
xor
cli
xchg
dec
imul
sbb
xchg
jmp
into
pop
loop
test
adcl
insl
cmp
outsb
push
or
lds
add
or
jb
or
xchg
and
jbe
imul
popa
mov
add
xchg
mov
iret
in
mov
stos
jns
enter
mov
cmp
sub
and
orb
inc
movsb
xchg
mov
scas
push
outsl
or
out
jg
lcall
unpckhps
pop
aad
cmovg
call
fnstcw
jb
jmp
or
mov
inc
pop
add
loopne
dec
stos
inc
inc
clc
push
lds
inc
sub
xchg
inc
ret
mov
cltd
adc
loop
adc
add
add
les
cmp
jnp
lret
aas
and
fwait
lahf
inc
std
xchg
adc
sbb
push
cmc
add
cmp
icebp
dec
push
loope
in
sbb
dec
push
pop
in
cmp
add
adcb
out
jno
sbb
jle
dec
out
xchg
fwait
jns
lret
pop
ror
nop
push
jge
int3
pop
inc
jp
gs
int3
mov
loopne
sbb
test
xchg
popa
xchg
add
ja
sub
in
out
call
sub
stos
enter
lods
sub
in
jnp
push
mov
mov
aaa
loop
iret
mov
jne
mov
hlt
movsl
into
iret
and
mov
test
add
xor
lret
mov
or
outsb
pop
push
xchg
fstps
inc
dec
jb
dec
adc
test
push
out
jb
rorb
lcall
or
add
scas
out
cltd
adc
cltd
cltd
addb
insb
cmp
aas
jge
or
and
mov
and
sbb
or
scas
lea
negb
sahf
sub
jns
daa
lock
adc
xor
les
cli
cmpsb
mov
into
in
jnp
icebp
rolb
arpl
cmp
stos
cmpsb
pushf
std
inc
les
xlat
mov
lahf
adc
sahf
mov
pushf
mov
addr16
push
mov
jg
pop
xchg
mov
jne
dec
punpcklbw
sbb
aad
mov
dec
fildl
movl
add
adc
xchg
push
stc
mov
mov
mov
push
fwait
iret
sub
imul
cltd
sti
lcall
ja
push
lahf
xchg
out
cltd
int3
gs
rol
leave
int
pop
popa
test
dec
jbe
in
xchg
negb
ds
cmp
adc
jne
xchg
push
sbb
adc
and
xorl
das
leave
ret
fs
adc
rcrl
ret
add
pop
insl
inc
loop
lods
adc
pusha
movsl
push
je
mov
adc
push
jp
aad
jp
gs
shrl
rcrl
hlt
dec
jbe
ljmp
or
sub
jnp
adc
adcl
cmp
pop
adcl
loope
push
imull
jns
in
fiadds
fwait
je
inc
sub
sub
adcb
pop
loop
pushl
sbb
sbb
fistpll
int
aam
popf
pop
daa
or
ret
je
lret
sti
xor
ljmp
cmpsb
sbb
xchg
cmp
cwtl
sbb
test
xor
or
xchg
mov
or
add
fadds
ss
sub
sub
movsl
ljmp
or
dec
scas
cmp
pop
cmc
call
adc
mov
mov
outsb
mov
pop
fwait
push
dec
mulb
and
lock
popa
dec
pop
adcl
jo
arpl
fisttpll
xchg
hlt
and
push
sbb
jle
das
jnp
mov
xchg
push
dec
xchg
clc
xchg
out
stc
pop
xor
xchg
insb
and
push
xchg
xor
stos
test
or
push
mov
in
loop
and
mov
movsb
scas
mov
dec
mov
cmc
mov
sub
inc
mov
mov
insl
xchg
and
ret
ss
xchg
fistps
mov
icebp
cs
or
std
dec
pop
mov
es
fistl
cmpsb
hlt
outsb
and
dec
sub
pop
mov
idivb
cmp
shlb
fmuls
jp
idivl
lods
push
fidivs
imul
call
xchg
loop
cmp
test
sub
inc
loopne
inc
mov
and
daa
int3
frstor
pop
mov
or
out
jo
mov
jbe
jmp
in
ss
xor
out
sbb
adc
fwait
adc
adc
adc
jns
idivb
adc
sub
inc
gs
inc
ss
pop
xor
in
sbbb
pop
or
dec
std
xchg
jmp
and
pop
ds
jge
bound
pop
cmp
sti
jb
leave
pop
cltd
fbstp
or
test
mov
mov
jmp
ret
dec
inc
and
sbb
jno
jae
adc
cltd
nop
push
push
lds
cmpsb
push
sahf
ficomps
adc
pop
pop
add
lret
ljmp
popa
sbb
sub
subb
in
imul
jbe
rorb
shr
mov
hlt
cmp
mov
jb
fbstp
popf
mov
push
jae
inc
aaa
movsl
fcmovnu
and
bswap
std
inc
add
lods
int
lret
std
xor
xor
scas
fsts
cwtl
or
cld
or
pop
sub
push
ret
popf
out
sub
jns
sbbl
imul
add
push
cmpsb
cmp
xchg
jo
in
lock
pop
mov
test
fsubrl
scas
dec
cmpsb
aam
mov
inc
or
and
pop
scas
mov
hlt
enter
mov
adc
hlt
enter
pop
jecxz
shlb
sbb
jge
stc
cmpb
ljmp
nop
jge
out
int
int
inc
cld
and
cmp
stos
or
repnz
fisubrs
mov
rol
inc
lcall
xchg
push
xchg
cli
int3
scas
ss
gs
cmp
jo
loop
cmpsb
aam
mov
sbb
lods
cmc
and
pushf
and
stos
push
fnsave
add
jae
adc
xchg
inc
jmp
frstor
xlat
clc
dec
movsb
mov
push
mov
popl
pop
sub
sub
add
and
pop
fdivrs
mov
inc
xchg
fisubrl
stos
scas
pop
xlat
stos
addr16
data16
in
lahf
push
test
mov
pop
leave
cmp
or
cmp
decb
fwait
mov
cmpl
and
in
sbb
fs
sub
dec
mov
mov
mov
inc
pop
clc
test
pop
sbb
jo
mov
mov
pop
cmp
sub
dec
cmpsb
add
jmp
nop
das
or
imulb
test
mov
nop
adc
clc
shl
sub
mov
test
push
popf
scas
nop
fidivrs
inc
or
stos
ljmp
enter
out
cwtl
int
int3
sbb
test
sub
add
inc
sbb
cmp
mov
push
sbb
outsb
inc
ret
aaa
shrb
sti
movsl
mov
sub
imul
jle
jle
cmp
lds
mov
mov
jno
or
hlt
jns
loope
int
in
fs
mov
arpl
pop
sub
cmpsb
mov
mov
xchg
push
xor
sub
jae
into
nop
mov
xchg
xchg
imul
xor
jge
movsb
and
pop
outsl
mov
or
imul
gs
push
dec
rolb
sub
push
sbb
cwtl
roll
jo
je
xor
add
das
sbb
or
cmp
sti
sbb
pop
xor
arpl
dec
outsb
mov
into
sbb
aam
push
xor
xor
xor
seto
mov
data16
sbb
leave
xor
pop
mov
dec
imul
xor
cmove
jecxz
stos
movsl
fldenv
fcoml
aam
push
stos
push
pop
cmp
mov
data16
xor
cmpsb
or
aaa
les
jmp
cmp
dec
xchg
add
shll
xor
loopne
or
cmp
fwait
clc
dec
mov
sahf
fxch
pop
into
loopne
sahf
popf
ds
add
pop
adc
pop
sarb
fucomp
nop
xchg
push
pop
mov
push
push
rorb
adc
jae
lods
cmpsl
sub
sub
loop
or
int3
adc
aaa
out
jae
inc
inc
data16
ret
mov
xchg
and
jmp
aaa
pusha
ljmp
mov
in
mov
xor
rcr
or
inc
in
stos
inc
out
jmp
in
mov
in
test
xabort
push
and
insl
test
int3
cld
fsubr
fdivr
add
inc
loopne
cmp
cmp
cmp
sbb
subb
pop
sbb
mov
pop
shrl
jmp
insl
loop
leave
in
push
mov
mov
nop
lock
frstpm(287
fcomi
xor
lahf
mov
xchg
lcall
rcll
push
jecxz
int
fsubr
xor
test
add
jae
dec
imul
push
cwtl
ret
xor
sub
dec
or
cmp
jns
ja
or
jg
aad
mov
or
xor
das
sub
lret
pop
mov
jecxz
lods
or
pushf
ss
or
repnz
pusha
das
or
xchg
add
jns
cwtl
pusha
psrlq
inc
cmpsb
mov
pop
mov
lods
pop
fsts
stc
ret
fadds
jmp
movsb
mov
mov
fdivl
pop
push
frstor
sub
cmpb
shlb
and
mov
pop
lcall
add
add
test
sbb
sti
popa
dec
pop
aas
fistpl
fsts
sahf
dec
xchg
aas
les
push
out
fcomps
mov
xchg
fadd
mov
xor
je
adc
xor
sti
push
cli
lret
out
xchg
shll
inc
pop
xchg
mov
idivl
movsl
jg
mov
rolb
call
xor
jle
mov
mov
test
mov
sub
ret
in
dec
or
jge
dec
jnp
sti
push
jg
mov
das
inc
xor
jl
dec
adcl
outsb
lock
sub
push
lret
cltd
jbe
xor
and
mov
xchg
leave
pop
aad
cld
pop
lods
cltd
mov
repnz
bound
dec
enter
movsl
je
mov
popa
lds
loop
jl
lea
leave
push
inc
fst
inc
hlt
push
push
and
adc
outsb
jl
fwait
movsb
lds
push
subl
int3
jns
gs
add
add
out
jmp
mov
adc
push
mov
popf
pusha
pop
sahf
push
fdivr
aaa
pop
pop
leave
js
inc
xchg
mov
dec
cs
jo
cmc
and
scas
fs
push
decb
push
add
xchg
das
sub
data16
adc
mov
inc
into
xchg
test
adc
inc
pop
pop
cmp
jns
cs
fdivrp
or
orb
mov
mov
push
push
mov
xorl
inc
ljmp
inc
mov
repnz
into
push
cwtl
sbbb
sbb
inc
dec
out
loopne
jae
aad
cmpsb
iret
imul
push
fmull
add
adc
popf
mov
fdivrl
ja
decl
and
outsb
ret
rolb
push
out
pop
sbb
xchg
movsb
rorl
sbb
mov
int3
pop
mov
test
dec
ror
jne
outsl
add
xchg
nop
jl
std
push
lcall
roll
fisubrl
add
aaa
push
jnp
loop
and
pop
mov
xchg
mov
add
loope
addb
or
fildll
jp
mull
emms
fadd
xchg
fisttps
fidivrl
js
imul
sarl
nop
pop
clc
lea
mov
cld
hlt
shll
mov
pop
cmp
adc
enter
and
shlb
inc
pop
and
jecxz
fbld
pop
cs
jmp
stos
jl
lahf
cltd
mov
sub
mov
xlat
jp
sbbb
lds
pop
xor
fdivs
hlt
or
ret
push
jb
lret
mov
outsl
sub
mov
loopne
inc
xor
and
inc
jne
loop
sub
pusha
mov
push
outsb
pop
bound
scas
repz
rcll
loopne
lea
jg
xchg
dec
dec
test
fidivrl
js
jb
jno
mov
adc
cmp
mov
pushf
mov
adc
aad
xchg
sbb
movsb
dec
imul
in
aaa
cmpsl
mov
ljmp
mov
mov
es
cmp
sub
lds
inc
sahf
dec
pop
imul
insl
jmp
int3
add
popa
rorb
add
lea
sub
mov
cld
cmp
out
jae
xchg
stc
xor
push
push
shll
std
sbb
shlb
inc
orb
jns
iret
xor
in
sbb
mov
nop
mov
xchg
pop
or
aam
adc
mov
mov
dec
mov
sub
repnz
mov
mov
popa
test
rcll
xchg
mov
mov
popf
and
xor
adc
sub
and
fdiv
cmp
dec
mov
addb
nop
movsl
fdivrs
cld
int3
sub
cld
stos
jns
insb
mov
push
ficompl
punpcklbw
jbe
insb
mov
test
adc
insl
into
inc
mov
pop
inc
ret
and
insb
xchg
out
test
dec
cmp
in
das
and
push
or
loop
lods
mov
mov
pop
mov
je
ljmp
mov
pusha
inc
loop
nop
rcl
mov
les
mov
and
mov
jl
repz
out
push
pop
das
mov
popf
sarl
add
push
aam
xchg
cmp
or
addl
mov
push
movsb
stos
sub
inc
pop
jmp
shll
push
popa
mov
gs
sub
inc
roll
push
sbb
sub
jecxz
xlat
push
or
ja
into
in
sub
clc
je
leave
movl
out
insb
mov
push
adc
push
faddl
test
fs
roll
scas
jecxz
movsb
into
mov
addr16
adc
push
fisubrl
sbb
pop
fwait
mov
fwait
ror
push
mov
lret
test
out
sbb
mov
daa
aad
mov
ljmp
pop
iret
xchg
out
mov
dec
mov
rcll
cmp
in
cmpsl
popa
in
xchg
pushf
je
insl
fstpl
xor
ljmp
sti
mov
xchg
js
aad
and
jb
sbb
mov
call
clc
mov
fisttps
mov
leave
cmpl
jb
jg
scas
icebp
jb
pop
cld
xchg
es
pusha
lret
adc
clc
mov
movsl
and
cmpsb
call
fs
xchg
and
out
les
popa
nop
divb
mov
xchg
cmp
sub
and
jb
loope
pop
gs
pushf
out
push
and
pop
insl
adc
or
xor
push
and
daa
and
cmp
movsb
ret
lea
cmpsb
inc
mov
hlt
pop
xchg
jp
stos
and
and
sbbb
popl
dec
test
push
cmpsl
lds
leave
jp
mov
lds
cmpl
repz
sahf
sub
push
aam
cwtl
in
xor
jmp
in
push
scas
sarl
jle
pushf
aad
adc
cmp
xchg
or
jl
test
pop
pushf
orl
std
dec
repnz
jg
popf
xchg
mov
imull
in
call
mov
cld
js
mov
call
mov
in
push
stc
jge
and
mov
shr
mov
inc
scas
pop
jge
daa
loop
andb
cmc
adc
clc
sbb
out
cmp
pop
lret
push
in
push
fsubl
loopne
pop
jae
sub
sbbl
popa
sub
xchg
mov
adc
test
mov
jae
inc
pop
mov
inc
insb
repnz
pusha
fdivrl
sbb
sbb
or
iret
jecxz
es
das
push
into
decl
dec
adc
pop
sbb
xchg
icebp
imul
test
inc
xlat
ds
fmulp
mov
cld
xchg
inc
int
xor
inc
mov
shl
xor
imul
aas
xchg
or
int
xor
push
inc
cmp
aas
fwait
push
sub
mov
mov
add
arpl
mov
mov
push
sbb
mov
inc
lods
movsl
jae
add
or
dec
mov
ljmp
xchg
and
xchg
aad
jge
aas
xor
cmpsl
cmp
mov
cmp
into
push
gs
pop
adc
push
cmpsl
dec
lds
fnstenv
push
sbb
mov
repnz
andb
sub
cltd
push
arpl
popa
sub
mov
dec
jnp
adc
mov
jne
sub
sbb
aad
xchg
sahf
jmp
dec
cli
add
fmul
rclb
in
dec
fdivl
mov
adc
sbb
jp
jecxz
out
arpl
mov
mov
popf
sub
and
sahf
xlat
mov
pop
stos
lret
fnstenv
pushl
rol
pop
fistps
cli
and
mov
in
mov
fidivrs
in
imul
movsl
and
hlt
jge
mov
xchg
dec
mov
aad
es
das
or
dec
add
sbb
mov
sub
jge
inc
icebp
mov
push
ret
inc
xchg
icebp
stc
dec
jb
xchg
jne
cmp
adc
daa
loop
xor
test
or
adcb
pop
push
inc
addb
test
jo
mov
enter
lret
ss
insb
push
mov
test
jmp
stos
cmpb
xchg
shll
ficoms
inc
mov
mov
xor
xchg
repnz
out
adc
mov
loopne
adc
xor
stos
fidivl
add
ljmp
sahf
cmp
lret
xorb
lret
add
cltd
mov
pop
sub
mov
popf
loop
dec
jo
sti
rcrl
or
inc
push
push
lret
and
push
iret
lds
ret
mov
ds
imul
mov
xchg
insb
ret
fiadds
test
mov
loope
lahf
out
into
call
nop
mov
xchg
and
inc
pmaddwd
das
std
rcrl
jne
bound
loopne
cwtl
xor
ret
pusha
in
mov
out
test
fcmovu
jp
addr16
push
or
sbb
inc
imul
popf
mov
mov
adc
aas
ret
lods
mov
ds
out
mov
sbb
jg
scas
lods
mov
sub
adc
add
lods
pushf
lahf
rolb
xchg
cmp
pop
cltd
test
repnz
mov
mov
pop
mov
sub
fldt
imul
and
mov
xchg
adc
fadds
jge
aam
xchg
or
add
xor
jmp
fs
add
sahf
mov
jle
test
fisubrs
ret
lret
inc
push
shll
mov
movsl
inc
xchg
pop
cmp
push
cld
or
push
daa
xorl
xchg
repnz
and
stos
int
push
and
jne
lock
bound
push
repnz
xchg
jle
mov
in
call
cmovb
mov
mov
adc
push
inc
xor
dec
jo
push
pop
jmp
xchg
repz
xchg
xor
iret
cmpsb
jge
inc
lret
jne
fsts
out
loope
sarl
addr16
jnp
das
cmpsb
xchg
push
bound
or
push
jmp
sbb
push
add
bound
lcall
and
mov
mov
inc
je
pop
repz
stos
les
add
out
dec
adc
jbe
jmp
dec
sbb
sub
mov
aad
xor
call
addr16
loopne
mov
adc
adc
xchg
sarl
mov
jle
cmpsl
clc
sti
push
sbb
out
xor
add
in
sbb
dec
loopne
into
sahf
fwait
stc
sub
push
mov
nop
push
popa
pop
movsl
addr16
test
adc
fmulp
xchg
jge
xlat
sub
js
cltd
cli
mov
push
mov
testb
jno
leave
aad
or
rcrb
test
loope
movsl
cmp
xchg
fistl
jb
jno
sbb
mov
and
adc
sbb
popf
mov
into
xchg
jns
fadd
movsb
clc
xor
aaa
pop
mov
mov
mov
sti
je
push
out
in
rcll
cmp
mov
inc
jecxz
adc
sbb
sub
xor
pop
mov
and
scas
and
sbb
pop
cmc
push
sbb
fdivrl
jmp
repz
mov
add
jecxz
scas
sbb
out
sbb
sbb
in
mov
sahf
pop
nop
xchg
fs
jl
test
mov
xchg
inc
or
push
icebp
mov
mov
inc
repnz
jbe
addl
xor
scas
js
fisubrs
inc
ret
fnstenv
and
test
das
xlat
roll
pop
xchg
out
sub
mov
adc
mov
lods
mov
bound
dec
movsb
bound
xchg
ja
bound
lret
cltd
jecxz
sub
sbb
inc
adc
mov
cmp
imul
fistl
sub
dec
and
mov
xchg
mov
dec
stos
jno
cs
rclb
mov
pop
fs
inc
cli
jle
loope
into
and
roll
les
xchg
xor
sbb
out
xorl
adc
and
sbb
ret
mov
dec
cwtl
daa
inc
mov
jge
adc
pop
dec
xchg
gs
mov
lods
fwait
out
rcl
mov
jae
pop
push
stc
outsb
push
stc
cld
jecxz
inc
movsl
andb
push
fst
pop
jmp
in
xchg
les
cld
xchg
cmp
fidivrl
js
mov
insl
inc
and
dec
dec
jnp
push
or
pop
cmpsb
out
or
jo
lds
lock
sarl
xor
jg
jp
jecxz
push
insl
loope
adc
adc
jo
pop
push
shrb
xchg
dec
mov
push
and
jbe
dec
push
jg
loop
popa
xorb
lea
stos
adc
jmp
or
aas
jbe
lahf
xchg
lret
sbb
sub
jae
jae
pushf
and
mov
xchg
mov
aaa
sbb
fs
nop
cmp
push
jne
ret
or
mov
pop
mov
xchg
lret
test
scas
jo
mov
pop
xchg
inc
mov
xor
test
xchg
es
enter
pusha
test
or
or
xchg
pop
pop
xchg
aad
add
push
sbb
popa
inc
in
push
mov
ljmp
pop
pop
jg
neg
aam
add
mov
adc
lods
mov
push
mov
add
popa
mov
clc
xchg
lcall
sbb
push
pop
mov
push
aam
xchg
xchg
out
out
addr16
cmc
repnz
jo
pop
cs
push
xorl
loop
cmp
sub
rcr
lock
mov
mov
ds
add
mov
xlat
jo
push
lret
ret
dec
adc
jg
mov
dec
rclb
jg
sub
fidivrs
mov
adcb
adc
inc
je
test
lcall
mov
bound
sub
pop
dec
xlat
and
into
and
jl
push
push
into
fstps
push
ds
lret
inc
fldenv
mov
sub
pop
or
insb
pop
xchg
add
sub
ja
cmc
add
mov
xchg
dec
insl
xchg
add
rorb
adc
icebp
sub
cwtl
xlat
sbb
pop
out
aas
pop
inc
adc
sub
pop
add
adc
fdivr
add
pop
lods
pop
inc
movsb
ror
sub
adc
call
insl
mov
sub
in
fisttpll
mov
jno
xor
das
mov
inc
adc
sbb
out
inc
out
dec
dec
lds
mov
fwait
add
aas
outsb
lcall
xor
pop
inc
add
add
add
rolb
jle
fwait
fidivrs
push
pop
pop
xchg
xchg
push
dec
pop
clc
ret
mov
scas
ror
sbb
inc
cmp
sbb
imul
es
cltd
lds
xchg
xor
out
sbb
call
loopne
out
pop
or
adc
mov
dec
and
jo
sub
fcomip
adc
daa
or
pop
sbb
xchg
cmc
out
fldcw
call
insl
sti
movsl
sbb
jno
sbb
jo
and
sub
cmc
aam
push
fsubs
push
bound
dec
aaa
int3
icebp
sbb
inc
and
cs
nop
dec
test
push
dec
ficomps
int3
js
push
push
xchg
rcrb
push
mov
scas
push
push
mov
mov
call
mov
fadd
fcmovnu
jns
imul
lods
dec
inc
push
pop
cmp
or
jl
pop
and
loopne
cmp
fdivr
je
shrl
mov
sbb
popa
std
lret
inc
add
xor
add
inc
push
push
pop
jbe
cmpsb
jl
dec
lods
xchg
movsb
cld
mov
adc
push
mov
mov
nop
jg
repz
inc
xchg
and
pop
divl
sbb
cmpsl
cmp
sahf
mov
je
je
mov
imul
out
push
jle
pusha
mov
into
adc
test
sub
shlb
xchg
mov
mov
loop
icebp
fmull
push
jno
sub
aas
sti
shll
xor
xor
mov
cmp
cmpsl
push
imul
jge
jbe
jge
ljmp
jg
movsl
mov
mov
fldl
sub
fnstsw
loope
int
out
and
pop
mov
xchg
xchg
js
repz
inc
inc
insl
outsl
and
sbb
cmpsb
mov
mov
fstl
xor
mov
repz
jns
add
mov
mov
bound
jmp
dec
dec
movsb
sbb
push
mov
and
rcrl
andl
flds
pusha
push
push
xor
mov
and
lret
pop
testb
fisttpl
sub
loope
lods
outsl
cld
aam
out
scas
int
push
clc
test
or
xchg
jne
sbb
push
lods
test
pop
stc
xor
lret
push
adc
xchg
add
cmp
lods
lods
sbb
lsl
insl
popa
pop
pop
ret
lea
mov
adc
loope
pop
lock
test
xchg
shlb
inc
jbe
inc
mov
inc
jecxz
jo
daa
xor
lds
lds
in
dec
pusha
inc
sub
mov
out
pop
sbb
pop
jno
mov
bound
fwait
sub
mov
and
mov
popa
sbb
inc
mov
rolb
outsb
cmpsl
daa
mov
push
lods
shl
jmp
arpl
push
inc
push
je
mov
xor
lahf
icebp
ds
adc
pop
and
bound
out
mov
mov
repnz
popa
mov
push
sub
daa
lock
out
mov
stc
mov
jl
in
cmp
pushf
inc
xchg
leave
adc
scas
inc
xlat
scas
xor
fisubl
mov
xchg
hlt
cmp
pop
sar
and
push
adc
mov
stc
push
sub
pop
push
jecxz
mov
mov
int3
ja
in
inc
inc
popf
scas
aas
movsl
pop
gs
cs
and
dec
xchg
jp
roll
adc
mov
sbb
fstps
scas
xchg
sbbb
bsr
jbe
xchg
push
rcrb
add
aaa
sub
xor
arpl
rcrb
mov
sti
dec
cmp
sbb
cmp
push
jmp
repz
push
enter
push
imul
sti
add
decl
in
cs
mov
add
mov
add
inc
dec
sbb
cmp
push
sbb
clc
bound
jecxz
mov
dec
dec
repz
jns
lcall
mov
and
mov
jecxz
mov
cwtl
iret
insb
ds
stos
jnp
pop
or
pop
cmp
cs
xchg
jbe
hlt
ret
add
loopne
xor
mov
outsl
sbb
mov
sahf
mov
xchg
cltd
sbb
cmp
add
xchg
add
jno
sbb
pop
inc
test
cmp
jg
les
mov
pop
jge
sbb
int3
or
pop
cmp
imul
and
xchg
aad
pop
movaps
dec
ds
enter
shll
pop
cwtl
sub
adc
xchg
orb
sub
stos
xor
insb
ficoms
pop
decb
or
ljmp
jae
mov
in
sbb
frstor
or
mov
ret
cli
data16
cmp
adc
sub
cmp
and
scas
cli
jae
test
hlt
xchg
imul
stos
sub
fmuls
jp
xor
test
leave
pop
mov
loopne
repz
mov
xor
xchg
jmp
lret
int
in
stos
lahf
lods
xor
sbbb
mov
adc
shrb
loopne
nop
subl
xorb
xor
stc
aad
test
leave
or
fwait
xor
adc
repnz
gs
aaa
cmc
mov
ret
cmp
in
gs
sub
js
sbb
jbe
mov
in
push
into
arpl
pop
add
xor
movsb
adc
pop
aas
ret
repz
nop
int
xchg
and
gs
in
dec
pushf
sub
and
xchg
jne
push
loop
shlb
inc
rep
and
xor
lea
push
out
movsl
adc
repz
push
loop
cmp
test
dec
push
or
inc
or
test
inc
jbe
xchg
aad
jno
push
idiv
jecxz
fisubl
and
mov
ss
and
pop
test
fldenv
in
jecxz
iret
jp
repnz
movsl
ljmp
xchg
inc
jo
jno
xor
outsl
repz
jno
inc
push
adcb
xchg
lds
lahf
repnz
hlt
int3
inc
jge
lcall
jge
ds
call
popa
mov
notl
or
push
or
arpl
add
mov
and
mov
insl
out
negb
aad
cmp
mov
jo
aad
mov
ss
mov
mov
xchg
jno
fsubs
ljmp
into
lret
lcall
and
push
adc
aaa
clc
xor
popf
push
xchg
cmp
sub
inc
call
aam
test
lods
aad
dec
loopne
js
call
jb
mov
lcall
mov
fists
sbb
add
sbb
xchg
test
repz
dec
cmc
fstl
inc
fstl
or
jae
pusha
rorl
inc
ss
jge
adc
cmp
ss
adc
sbb
cmpsl
xor
mov
fs
mov
or
jmp
push
jge
jns
inc
push
jg
inc
fwait
roll
fcmovbe
xor
cmp
mov
mov
sarl
aas
mov
jmp
adc
mov
lret
int
inc
call
push
enter
add
or
cmpsl
repz
shll
jmpw
cltd
les
jb
jmp
push
fwait
add
push
jo
inc
les
mov
mov
outsl
je
mov
xchg
push
test
mov
dec
les
adc
sub
cmp
mov
out
jnp
inc
daa
in
jne
pop
cmp
sbb
fnstenv
sbb
repnz
mov
neg
jbe,pt
and
sub
xlat
movsl
push
insl
mov
xor
mov
sbb
ljmp
es
xchg
mov
xchg
inc
push
rorl
sub
fsts
cmp
ret
imul
xchg
test
sbb
add
mov
pushf
pop
sbb
sbb
test
push
cmp
inc
xor
lods
shlb
insb
leave
adc
popf
outsb
es
dec
or
jmp
mov
lods
subl
dec
outsl
clc
jns
ds
xor
pushf
loope
cmpsl
mov
aaa
pop
cld
mov
mov
sub
ret
mov
clc
jne
adc
enter
pushf
pop
cmp
adc
loope
in
outsb
xchg
and
cmc
sub
andb
pop
imull
mov
dec
imull
xchg
pop
mov
das
sahf
xchg
test
movsl
dec
inc
sbb
pop
in
mov
cmc
loope
imul
cli
lret
aas
leave
insb
push
das
xchg
mov
ret
dec
shr
jns
xor
ja
mov
daa
mov
jnp
mov
lret
mov
loop
loope
fstps
mov
movsb
lret
mov
fdiv
add
xor
pop
out
xor
pop
mov
sahf
aad
aad
mov
jmp
es
push
cmpsb
les
in
jno
adc
movsb
ja
xlat
mov
xor
jge
int3
movsl
or
sbb
push
inc
push
push
scas
mov
push
xchg
std
pop
imulb
loop
pop
or
sub
inc
das
icebp
lds
jle
out
out
repnz
cmp
popa
dec
push
cmp
hlt
repnz
out
add
dec
lock
mov
xchg
dec
daa
cwtl
push
push
push
hlt
das
xor
leave
push
cmp
inc
lret
out
dec
dec
mov
subl
ffreep
xor
mov
mov
pop
aam
add
cmp
xor
adc
mov
or
and
cmp
iret
outsb
insb
int3
sub
dec
jmp
lds
add
roll
aas
fcomps
mov
fstpt
push
jnp
mov
push
inc
mov
xor
pop
decb
daa
or
sbb
mov
fstps
or
add
movsl
int3
cmp
mov
push
out
dec
push
insb
push
jbe
pop
xchg
je
fcmovne
push
add
popf
inc
clc
push
pop
repnz
inc
bound
lcall
sbb
test
mov
shll
lcall
outsb
sub
jmp
push
mov
mov
inc
repnz
mov
bound
rolb
mov
dec
jmp
mov
ret
stos
and
adc
cltd
mov
or
sahf
mov
mov
push
pop
lahf
out
or
xchg
dec
arpl
sbb
sbb
outsl
int3
movsb
imul
pop
mov
add
nop
cmp
fs
push
and
int
adc
xor
lds
fs
inc
mov
out
ljmp
mov
mov
mov
dec
je
xlat
and
sub
xchg
subl
fbld
mov
dec
and
rorl
sbb
inc
ret
jge
add
sahf
loope
jns
je
test
xchg
inc
jmp
xor
adc
jae
dec
cmpsb
xor
mov
int3
mov
shl
lret
cmp
bound
call
or
xor
in
mov
lds
mov
sbb
sub
and
mov
mov
stos
shll
mov
mov
xor
sub
leave
inc
repz
jg
lods
jle
stos
mov
popa
pop
add
nop
out
mov
mov
xor
mov
pop
iret
imul
nop
mov
or
push
shlb
xchg
mov
pop
das
jle
push
push
cmp
sub
xor
add
lds
dec
out
fsubs
adc
dec
arpl
lods
mov
jmp
lock
mov
stos
lahf
test
dec
mov
sbb
cmp
dec
push
js
mov
sbb
add
cmpsl
add
sub
push
mov
add
js
mov
mov
stos
shr
xor
mov
aam
sub
insb
inc
dec
push
mov
jnp
cwtl
dec
lods
or
mov
inc
iret
inc
dec
lahf
sbb
xchg
jecxz
lock
mov
cmp
inc
leave
sti
call
xchg
jno
fs
jmp
pop
or
mov
mov
and
or
and
push
sti
push
shrl
cld
jns
add
jp
sub
mov
xchg
xor
jmp
and
mov
dec
test
rcl
or
in
pop
loope
outsl
pop
cmpsb
and
or
js
adc
movsb
add
shrb
ljmp
cmc
ret
push
lret
xchg
int
lcall
sahf
add
in
xor
loopne
pop
movsb
pop
cltd
xor
mov
movsl
sub
stos
test
es
and
cmp
loopne
jge
mov
push
ljmp
rolb
leave
xchg
or
xor
cwtl
xchg
sahf
pop
pop
pop
aad
dec
pop
push
clc
fimull
fidivs
outsb
ja
ds
enter
mov
repz
sbb
inc
jns
xchg
iret
sbb
sub
cmpsb
dec
add
inc
and
jecxz
fdivr
cmp
xchg
insl
out
ss
mov
adc
jno
lea
xchg
roll
js
lds
jno
xchg
loopne
shrl
inc
lcall
das
mov
imul
dec
jnp
push
jno
lcall
jne
add
pop
mov
pop
jo
xchg
fwait
lret
lods
push
push
stc
dec
addl
call
pop
ds
mov
mov
lahf
jbe
cmpsl
mov
xor
mov
add
jecxz
or
adc
pop
aas
cmp
cld
cld
and
pop
testb
or
clc
xor
adc
mov
stos
xchg
mov
sub
cmpsl
xchg
cmpsl
int3
outsb
xor
jge
adc
mov
fcmovne
adcb
lret
test
pop
inc
lret
mov
mov
cli
jecxz
cmp
sbb
mov
xchg
pop
call
push
or
inc
adc
and
add
cmp
pushf
insb
mov
mov
xchg
mov
subl
lods
dec
out
add
rcl
or
daa
sub
int3
or
incb
mov
lock
mov
das
cmc
push
mov
cmp
es
xchg
push
add
mov
scas
and
sub
push
data16
fiaddl
les
sub
mov
fstpt
mov
add
sahf
sar
lods
es
lret
shlb
ret
cs
call
mov
sub
xchg
imul
jne
sar
and
nop
lahf
in
jo
imul
xchg
push
pop
imul
sbb
es
jge
movsl
dec
mov
stos
stos
negb
pusha
pop
dec
inc
in
sbb
sahf
es
rcrb
push
les
pop
fcmove
outsl
pop
inc
sbb
xchg
subb
cmp
jmp
mov
in
inc
arpl
cmpsb
add
mov
dec
in
in
xchg
or
shrl
addr16
inc
mov
jl
and
lcall
ficoms
mov
aas
lahf
xchg
aas
push
movsb
pop
out
daa
jge
push
dec
repz
xchg
es
and
xor
cmp
lcall
dec
mov
mov
arpl
fcoml
mov
push
pop
popf
mov
loopne
call
xchg
cmc
sub
inc
rolb
iret
adc
push
or
stos
ror
mov
pop
inc
xchg
insb
mov
rcl
jb
mov
sub
test
imul
adc
push
mov
and
inc
mov
push
sbb
jecxz
jge
xchg
arpl
xchg
iret
cmp
shll
inc
mov
adc
pop
outsl
push
mov
xchg
xor
xchg
mov
cld
cmp
clc
mov
dec
sbb
leave
outsb
mov
pop
dec
leave
inc
adc
pop
repnz
or
push
sti
lret
dec
aad
pmaxub
movsl
inc
daa
shlb
lods
fisubrs
enter
mov
dec
adc
pushf
fcoms
std
insb
iret
out
xchg
sbb
push
and
test
shlb
mov
fisttps
scas
jmp
cmp
aam
ficoml
jmp
xor
inc
setg
daa
inc
mov
mov
inc
cmpsl
mov
fbstp
push
clc
push
aad
fdivrp
sub
inc
int3
ficomps
push
aam
adc
jno
jno
dec
fs
jmp
xchg
mov
add
cld
fisttpll
mov
sbb
pop
loope
pop
stc
daa
jl
cmp
mov
js
add
mov
mov
in
fistps
or
daa
outsb
sub
shl
popa
inc
lret
xchg
add
aaa
popf
push
addb
inc
test
jbe
lret
mov
mov
cmp
xchg
and
and
add
lahf
push
pop
shll
arpl
fwait
or
push
mov
movsb
jo
push
jns
daa
mov
mov
out
cmp
in
and
sbb
add
xor
repz
je
stos
shl
repz
mov
mov
jle
repnz
ds
add
outsl
inc
push
leave
mov
leave
addl
xor
gs
fldenv
sub
fdivrl
sahf
xchg
movb
sahf
lods
push
stos
xor
sub
arpl
mov
lock
cli
push
xchg
lahf
das
lds
xchg
push
lahf
mov
add
lea
mov
out
sbb
xchg
stc
push
stos
mov
mov
imul
push
cmpsb
je
push
add
scas
test
xchg
lret
add
xor
xchg
push
popa
or
pusha
pop
sub
inc
mulb
or
adc
in
pop
loope
mov
rorb
test
notl
sbb
rep
pop
imul
and
sub
jns
xchg
push
pop
pop
mov
or
movsb
repnz
cs
push
and
jge
fcoms
jl
shl
pusha
adc
aaa
and
stos
pusha
sub
adc
fcoms
out
cld
and
xor
xchg
xchg
inc
dec
xchg
and
movsb
jno
aad
stc
pusha
cmp
stos
pop
jle
outsl
dec
push
pusha
test
mov
dec
scas
add
testl
push
cwtl
rcll
dec
divb
dec
negb
pusha
out
add
cli
mov
inc
adc
dec
mov
ret
aad
add
fnop
rcrb
push
stos
jno
dec
mov
xor
mov
cmpsl
dec
pop
das
lock
jp
cmp
xor
sub
sub
imul
inc
outsl
rclb
sbb
inc
in
dec
pushf
lret
nop
addr16
and
pop
pop
xchg
scas
fbld
stos
xchg
rcr
sub
cmp
es
repz
pop
mov
ret
pop
cmp
ret
xchg
or
lret
xor
inc
sbb
jno
out
push
sarl
movsb
mov
lret
sub
lahf
std
jle,pn
aam
xchg
mov
sbb
pop
enter
xor
pop
xor
popf
pop
push
mov
add
dec
dec
adc
mov
sbb
or
insb
xchg
fwait
sub
test
loopne
pop
cmp
push
inc
xchg
push
out
dec
sbb
mov
or
jae
mov
sbbl
jp
xchg
xchg
xor
dec
into
lock
jl
insb
mov
adc
pop
add
sbb
imul
push
and
inc
ja
insl
and
mov
sub
jo
adc
lea
mov
test
push
push
mov
sub
out
dec
mov
cmc
in
add
repnz
std
dec
mov
dec
mov
sbb
dec
mov
push
popa
into
cld
adc
js,pn
test
and
fs
repz
mov
inc
mov
lret
sbb
or
inc
jecxz
icebp
fmuls
inc
lret
pop
xlat
cmc
cmp
ret
sarl
dec
lcall
xchg
push
ret
enter
adcb
insb
adc
sbb
xchg
sub
sahf
fsubrl
mov
ljmp
mov
test
inc
jbe
insb
jl
pushf
movb
jmp
or
xchg
and
xor
scas
cmp
dec
inc
test
insb
mov
cld
cwtl
xchg
push
enter
add
sbb
lret
jp
test
in
jb
xor
pop
push
jns
mov
xor
mov
jo
or
loop
mov
icebp
es
mov
pop
out
push
int3
arpl
iret
ficoml
scas
xor
dec
lahf
repz
pop
aaa
lock
std
ss
pop
dec
cwtl
fsubl
fidivrs
jbe
int
lds
divb
arpl
jge
in
jg
loop
cvtps2pd
dec
adc
cmp
push
mov
mov
adc
mul
subl
dec
sub
mov
push
inc
icebp
adc
int
push
sbb
inc
popa
cld
cld
xchg
insl
iret
mov
and
jge
test
mov
and
inc
add
or
add
in
mov
sbb
notb
push
pop
clc
popf
cmp
cld
in
addl
adc
ljmp
out
cmp
dec
hlt
xor
shll
push
pop
fwait
aas
pop
icebp
into
pop
add
dec
aaa
pop
adc
sbb
ds
push
sbb
rorl
faddl
into
push
cmpsb
iret
jmp
adc
pusha
jle
jo
mov
aas
inc
mov
and
sbb
mov
lret
sarl
pop
cs
popa
xor
cmc
leave
bound
mov
xchg
lds
dec
jnp
flds
out
movsb
dec
insl
push
or
xchg
dec
inc
js
cmp
sub
test
cld
or
dec
push
mov
clts
aam
mov
sbb
pop
xchg
mull
or
mov
mov
cmpsb
sbb
ljmp
aas
mov
cs
mov
imul
sub
push
dec
test
jecxz
rcrl
jns
jp
mov
xlat
or
stc
cld
xabort
test
divl
adc
mov
sbb
jg
cmp
cmp
dec
jecxz
jae
cs
push
in
xchg
aaa
pop
fadd
incb
iret
lret
adc
push
mov
rcrl
nop
int3
movsl
outsb
cld
loop
out
push
cli
push
imul
and
fiaddl
int
xacquire
xchg
push
mov
in
mov
andl
clc
mov
mov
popf
pushf
sub
sbb
fcos
ljmp
push
and
rcrl
fs
lods
pushf
es
addl
sbbb
scas
mov
ds
cmp
loopne
ja
shlb
repnz
in
mov
fst
icebp
push
mov
cs
sub
mov
clc
mov
dec
outsl
and
out
in
ficoms
shlb
mov
outsl
fisubs
cmpsb
mov
clc
dec
popf
lea
jmpw
mov
stos
pop
test
sub
sbb
xchg
push
dec
and
push
inc
push
xchg
jge
jo
sub
test
and
cmc
pop
mov
aaa
and
popf
xor
jbe
imul
dec
in
add
mov
stos
mov
sub
loope
mov
mov
incl
mov
inc
fs
shlb
push
movsl
jl
sub
jns
inc
sahf
test
mov
push
push
movsl
mov
xchg
std
dec
push
adc
xchg
movsl
push
pop
pop
adc
sbb
xor
testb
orl
test
add
xor
popa
loop
adc
push
pop
scas
stos
add
cmp
lahf
jb
inc
pop
inc
lock
lods
jg
sub
daa
arpl
mov
test
xor
xlat
jmp
das
mov
fcoml
sbb
sbb
adc
dec
add
add
push
fdivrs
sahf
cld
jg
xlat
in
ja
fcoml
dec
dec
lea
xor
clc
push
push
lock
pop
fimuls
push
lcall
jg
mov
or
fdiv
fwait
pop
cld
movsb
ret
out
cltd
cltd
mov
scas
jle
mov
inc
push
mov
mov
pushf
mov
insl
clc
sub
xlat
sti
mov
xchg
lahf
push
andb
adc
idivl
mov
cmc
popa
or
dec
aam
mov
imulb
in
inc
xor
xor
sub
jg
jle
andl
test
jge
rcrl
jo
jmp
sbb
pop
cli
push
pop
cvtpi2ps
jg
or
jb
xor
adc
cs
rorl
cmc
js
or
daa
dec
adc
cmp
addb
ja
xchg
popf
sub
inc
loop
cmc
cmp
aad
sub
fsubrp
pop
xor
pop
mov
jmp
jne
jg
nop
xor
sub
shrb
cmp
stos
popf
pop
movsb
inc
das
test
dec
mov
lods
sub
dec
mov
cs
repnz
ret
jb
idiv
xor
les
pop
adc
mov
push
repnz
adc
add
and
call
in
fidivl
adc
jp
insl
lcall
jecxz
daa
push
adc
jle
xchg
adc
push
popa
movsb
sbb
std
gs
test
mov
or
push
iret
pop
stos
out
loope
mov
pushf
adc
movsb
scas
dec
mov
inc
dec
push
xchg
sti
pop
inc
jbe
sbb
sbb
in
and
jne
push
xchg
mov
cmp
lahf
cmp
xor
popl
cmp
insb
fidivs
cmp
ljmp
mov
pop
mov
lret
add
mov
inc
repnz
je
pop
cmp
xchg
mov
sbb
fwait
outsl
and
add
in
inc
iret
push
in
ljmp
mov
sub
nop
lahf
adc
movsl
and
mov
ret
ret
ljmp
inc
fiadds
sahf
mov
and
sub
xchg
mov
lock
cmp
adc
aam
fstpt
rcll
add
sub
in
jo
xor
sub
mov
add
xchg
leave
cli
loopne
ss
loop
aaa
out
lret
xorb
lds
xor
adc
hlt
inc
rclb
loopne
ret
outsl
mov
test
xor
arpl
adc
xchg
lea
mov
jp
repnz
in
xchg
popa
scas
inc
es
mov
pop
push
xchg
adc
or
jb
aad
add
inc
jmp
xor
xor
adc
ret
inc
dec
inc
imul
lea
test
sbb
repz
dec
out
sbb
sub
jecxz
jl
mull
mov
mov
dec
andl
cli
jb,pt
xchg
push
mov
in
stos
xchg
jl
test
in
inc
mov
loope
sub
fsubs
mov
xor
std
and
dec
mov
or
push
arpl
jp
xor
mov
mov
icebp
ret
pop
fwait
loop
sbb
cmpsb
mov
int
sbb
rorb
pop
sub
xchg
in
xchg
sbb
fsub
sarl
test
dec
int3
idiv
or
cmp
pop
fidivrl
lret
cld
rcr
mov
out
enter
push
loop
mov
je
int3
pusha
rcr
mov
lods
ds
fucom
ret
xor
repnz
fstpt
sbb
mov
cmp
cmc
mov
aas
add
and
dec
and
mov
push
lcall
sub
jae
movsl
push
jno
add
cld
mov
ljmp
and
mov
jge
popa
xor
test
inc
sbb
aas
xor
loopne
jae
cmc
xchg
orb
stc
adc
push
out
mov
mov
push
ljmp
loop
popa
adc
dec
add
cs
jne
imul
jno
pop
push
and
int
push
adc
dec
add
scas
add
push
mov
fnstenv
mov
outsl
jns
test
mov
ds
jne
pop
sub
jo
mul
outsb
es
dec
lahf
mov
dec
out
add
fwait
sbbb
cli
dec
xchg
mov
xor
aas
adc
rorl
test
sub
jmp
pop
fsts
xor
lea
dec
mov
shrl
imul
pop
add
and
popa
mov
add
repnz
cltd
arpl
int
cli
push
jb
mov
cmp
imul
leave
hlt
nop
and
hlt
test
push
aam
push
dec
pushf
jecxz
pop
repnz
fisttps
rorb
mov
stos
inc
and
movsl
scas
sub
xor
pop
pop
mov
lahf
dec
ret
xlat
xchg
or
pop
sbb
jg
add
ret
das
stos
daa
sti
jle
daa
xchg
jg
bswap
les
sbb
or
pop
mov
mov
adc
mov
jmp
sbb
mov
sbb
jle
cltd
cmpl
push
jl
inc
mov
imul
or
or
sbb
push
push
add
imul
rcl
xchg
push
jmp
ja
xor
push
inc
dec
sbb
jns
mov
dec
loopne
aas
add
mov
mov
notb
and
or
xchg
add
jmp
sub
sub
add
negb
adc
gs
subb
loope
jbe
mov
add
out
inc
popa
sti
pusha
push
cld
jbe
pop
push
movsb
ficoms
mov
adc
leave
push
shll
mov
jae
ficoml
mov
dec
in
cli
lahf
or
mov
lcall
ljmp
xor
insl
movsl
xor
sbb
lcall
in
jg
mov
jns
push
sbbb
cmp
test
rcr
adc
mov
mov
ret
lret
bound
enter
or
aaa
push
pop
mov
sub
or
push
sub
lock
incb
icebp
in
xor
int
cmpsl
mov
ret
inc
leave
xchg
sti
imul
mov
test
xor
sbb
mov
cwtl
aad
cmp
inc
push
add
dec
roll
xchg
xor
xlat
adc
and
sbb
dec
out
cmp
test
rcrb
or
jne
rcl
xchg
das
fst
cmp
loope
shl
mov
mov
adc
cmp
lret
or
fdivrl
push
push
in
dec
jb
push
sbb
sbb
jg
imul
flds
stc
push
add
sbb
in
cwtl
enter
sar
push
fsubrl
sbb
and
iret
fldt
xor
sti
inc
gs
push
add
shll
push
xlat
pop
std
add
outsl
shr
push
add
mov
out
or
adc
jecxz
fcomps
mov
push
adc
cs
outsb
and
and
ds
sbb
push
mov
inc
jmp
mov
xor
lods
pop
orb
jae
mov
pop
pop
data16
push
into
outsl
scas
xchg
pop
aaa
jbe
aad
adc
fst
fistl
mov
sarl
imul
sub
jno
xchg
lahf
icebp
mov
push
sbb
mov
bound
inc
xchg
push
dec
lret
dec
pop
test
inc
jne
imul
jae
and
and
pusha
lret
xchg
into
lea
ror
or
cmp
mov
pop
inc
add
outsl
imul
jmp
sbb
loope
std
shl
imul
or
or
loop
in
subb
mov
push
arpl
nop
add
enter
in
jnp
test
xlat
sahf
test
faddl
ds
stc
mov
ja
mov
subl
add
mov
cmp
jbe
scas
xor
jmp
pop
test
repz
and
mov
jne
scas
imul
test
addr16
adc
int3
or
add
nop
pop
aad
cmp
sub
jno
adc
jl
sub
fistl
jo
fisubs
loop
lock
cmpsl
imul
xchg
inc
lods
push
add
iret
sub
mulb
in
sub
mov
jne
std
shrl
xchg
in
jne
rcr
xorl
adc
leave
mov
jns
push
lods
rcrl
test
hlt
mov
adc
ljmp
push
test
push
sti
jb
jo
fimull
push
sbb
xor
jl
outsb
mov
jbe
scas
shlb
cwtl
loop
push
add
pop
es
mov
sbb
ja
xor
iret
gs
push
sti
push
jnp
in
iret
sti
sahf
and
in
lds
dec
loopne
pop
xor
mov
xor
mov
add
mov
xchg
int
scas
insb
outsb
jl
cmc
push
test
xor
out
add
lock
fwait
sbb
jb
ja
pop
lods
mov
ret
cmp
jl
outsl
incl
aad
push
sub
iret
push
daa
fs
das
push
inc
xlat
xor
jne
inc
loopne
adcl
or
loopne
ret
rorl
lds
push
adc
inc
cmp
cmc
fsubrl
out
pop
adc
add
les
inc
dec
push
pop
push
jno
jns
ljmp
into
mov
fdivs
fdivp
xor
ljmp
inc
or
cmp
rol
sbb
lret
lea
inc
cmp
pop
popa
popf
xor
jge
and
push
scas
adc
pop
push
sub
je
push
cmp
jmp
jle
add
xlat
xchg
jg
or
fidivs
ljmp
int
das
mov
push
jne
cmp
cmp
push
lods
test
shl
pop
icebp
xchg
xchg
lods
adc
or
jecxz
push
mov
lods
mov
pop
xor
stos
aas
fistps
inc
mov
cmpsl
xchg
xchg
lahf
bound
clc
rcl
mov
int3
fnstsw
je
xchg
int3
repz
faddp
cmpsl
cli
push
jae
jae
and
adc
inc
ss
dec
mov
lret
mov
rcr
mov
sahf
cmp
pop
loop
mov
sahf
shll
rorb
push
xchg
mov
pusha
mov
dec
outsl
inc
cmpsl
xchg
adc
push
lret
sub
dec
cld
xor
rorl
sbb
mov
push
outsb
stos
push
scas
mov
cvtpi2ps
adc
cmp
lahf
cld
iret
fwait
adc
or
or
xchg
cmp
imul
xchg
stos
jb
pop
ds
pop
xor
in
cmp
sub
es
sbb
pop
adc
and
push
cmp
sbb
cli
mov
lcall
dec
loope
mov
or
sti
inc
xor
inc
movsl
xchg
or
jbe
inc
mov
ds
sub
sub
les
fucomip
popa
xor
out
or
inc
xor
sub
and
mov
mov
xor
push
cwtl
pop
pop
xchg
test
mov
ret
ljmp
scas
or
test
and
loop
and
addl
pop
xor
pop
add
aad
push
and
xor
pop
xor
testb
enter
mov
dec
subb
sbb
mov
loopne
inc
out
sbb
pop
pop
fucomi
fisttpl
adc
out
push
fisubrs
or
imul
pop
mov
imul
mov
sahf
dec
repnz
dec
mov
jb
jle
dec
lahf
dec
out
xchg
lods
and
rclb
mov
das
xchg
adc
lret
daa
stos
push
cmpsl
pop
cmp
push
mov
fnstsw
add
adc
xchg
add
rorb
xchg
push
out
aam
inc
jg
pop
addr16
aad
xchg
into
repz
pop
out
lea
or
jns
jb
push
popf
lahf
push
push
pop
mov
cmp
das
fsqrt
stos
stos
mov
arpl
jmp
pop
sbb
xor
xor
pop
mov
xchg
int3
mov
stos
mov
stc
mov
scas
or
rorb
mov
scas
add
das
rol
cs
jns
mov
inc
lahf
mov
mov
idivb
outsl
pusha
sub
out
mov
pop
subb
sub
je
dec
sub
mov
enter
cmp
add
test
xchg
out
shrb
jnp
imul
int3
inc
icebp
insb
sbb
enter
xor
ss
aad
xchg
jae
adc
lods
jle
jge
push
pop
into
rcrl
repz
xchg
push
lods
push
mov
or
loopne
lcall
push
lahf
addr16
jne
movsl
inc
push
jne
mov
test
jg
or
xchg
or
xlat
lcall
push
dec
mov
jae
cmp
sub
xor
imul
jecxz
movsb
xrelease
test
out
add
mov
inc
out
mov
pop
mov
mov
rorb
adc
inc
xchg
mov
or
rorl
or
xchg
mov
sub
inc
pop
shlb
dec
sbb
lea
cltd
out
pop
mov
enter
or
icebp
out
lret
jle
jg
es
cmc
jno
and
fstl
clc
ss
lret
sub
jbe
push
inc
cmp
pushf
jle
lcall
pop
fwait
push
popf
adc
inc
jae
dec
and
and
push
and
ss
iret
or
or
mov
mov
pop
test
mov
push
sbb
stos
cld
mov
insl
add
jno
shr
mov
fiaddl
add
jle
push
mov
lods
adc
repz
pop
call
pop
lret
cmp
ds
decb
out
and
out
or
jns
scas
cmpsl
cwtl
test
pop
add
sbb
add
fnstcw
jne
in
jae
inc
movsb
mov
cltd
fiadds
push
pop
cli
cmc
xchg
mov
rclb
mov
fimuls
lret
jno
or
sbb
cs
dec
mov
pop
push
push
int3
xor
sub
out
lock
orb
sbb
icebp
jnp
xor
cmpsb
cmpsb
sub
cmp
mov
mov
push
dec
xor
sub
push
lret
xchg
cmpb
icebp
jnp
xorl
movsl
mov
sub
ret
push
jp
out
into
jp,pn
std
dec
xchg
aam
dec
cmp
cli
push
sbb
sub
or
out
lock
cmp
mov
sbb
inc
test
mul
ljmp
pop
lahf
scas
insb
test
or
pushf
sub
sub
xchg
dec
pusha
enter
push
clc
pop
mov
lret
fwait
stc
push
cli
fcmovu
repnz
movsl
jp
cmp
jp
pushf
into
and
cmc
cmp
mov
inc
inc
jecxz
inc
roll
or
lahf
pushf
xor
jnp
sub
mov
adcl
rol
bound
fcomi
imul
lahf
fwait
xor
pop
sbb
xchg
inc
push
mov
aaa
sub
mov
jg
mov
dec
add
add
into
pop
sbb
and
dec
xor
dec
lds
in
pop
xor
ret
stos
fwait
pusha
fldt
gs
add
xor
jae
push
mov
lret
pop
rorb
lea
movsl
jno
int3
mov
les
jmp
add
add
pop
in
dec
mov
addl
sarl
add
jbe
pop
loope
sbb
mov
sub
pusha
and
or
sbb
cwtl
adc
inc
and
and
test
mov
push
dec
outsb
imulb
add
add
stc
inc
clc
add
mov
pop
negl
mov
inc
xor
adc
xor
push
add
inc
shlb
dec
fs
test
hlt
xor
ja
add
fisubl
adc
mov
cmpsb
int3
cmpsl
xlat
test
test
jnp
sbb
sbb
cmp
sahf
add
jg
pop
fmul
fnstsw
loopne
push
mov
lods
or
sub
mov
cltd
leave
fcoms
mov
adc
addr16
ja
movsb
test
dec
xchg
xchg
int
sub
mov
in
fnstcw
jecxz
lret
fisubrl
sub
sbb
gs
mov
inc
fwait
les
insb
push
inc
incb
and
std
sbb
lahf
shr
jg
mov
jg
pop
lock
jecxz
add
or
push
pop
cs
les
lret
fbstp
repnz
sub
repnz
and
jmp
inc
xor
adc
int3
jb
inc
stos
cmpsl
imul
push
hlt
cmp
mov
aaa
lcall
sub
jae
mov
aad
cmp
stc
ror
sub
push
ret
add
lods
cmp
pop
pop
cli
or
test
aad
scas
sbb
xchg
inc
insl
mov
add
lock
addr16
pop
sub
ljmp
push
repz
sbb
cmpsl
mov
test
jb
bound
lahf
mov
lret
lods
pop
mov
stos
fsts
mov
mov
ret
jge
jg
fs
movsl
test
lods
push
xchg
or
mov
daa
lret
sbb
mov
push
arpl
and
and
lds
fwait
pop
add
cmp
or
stos
dec
test
and
and
sbb
loope
cld
popf
stc
mov
sbb
sbb
test
mov
int
jbe
cld
pop
lock
into
inc
into
mov
stos
jle
sbb
out
or
and
rcrl
cmp
and
sub
inc
lret
push
jmp
mov
outsb
pop
adc
andb
test
dec
mov
sbb
mov
pusha
sti
jmp
dec
loop
mov
insb
adc
enter
push
push
cld
jecxz
cmpsl
mov
xchg
adc
rcl
adc
lea
adc
ds
mov
lock
pop
hlt
cmp
pop
sub
dec
push
scas
leave
or
mov
dec
fdivrs
sbb
shlb
sbb
jle
iret
pop
push
mov
test
fdivrs
jb
arpl
or
jg
fistpll
inc
mov
insl
in
hlt
xchg
xchg
enter
enter
add
dec
mov
adc
testl
cmc
into
inc
xchg
xlat
or
mov
mov
add
push
inc
test
dec
sarl
clc
pop
dec
cmp
pop
addr16
jno
inc
xchg
cmpsb
jmp
dec
jp
mov
popa
cmpsl
pop
call
and
mov
push
cmpsl
mull
xchg
outsb
dec
lret
add
or
sub
dec
mov
mov
aad
xchg
and
push
fldcw
dec
dec
cmp
loope
in
xor
ds
mov
or
inc
int3
mov
out
push
mov
incl
lods
xchg
pusha
mov
lods
adc
cmp
mov
mov
mov
jb
and
adc
ljmp
movsl
jg
inc
and
mov
out
shr
int3
pop
jp
push
icebp
into
pop
pop
test
dec
sbb
lret
dec
push
test
andb
cmpsl
push
push
mov
inc
fsubs
fsubl
sub
dec
pop
rol
jbe
test
jle
pop
or
mov
xor
pop
push
or
mov
hlt
scas
pop
shll
mov
adc
das
pushf
mov
or
jl
testb
pop
divl
and
push
and
test
inc
out
inc
cltd
inc
inc
xchg
dec
out
sar
or
jmp
enter
xchg
and
and
adc
aas
dec
inc
jg
addr16
mov
inc
push
popf
xor
inc
mov
or
xchg
jp
insb
and
adc
bnd
push
int
push
mov
inc
or
mov
daa
push
mov
inc
or
hlt
or
inc
arpl
adc
mov
stos
adcl
jg
xor
das
popf
dec
push
incb
rcll
es
orb
andl
aam
jb
addb
pop
xor
lcall
rorl
in
dec
push
mov
sbb
sbb
std
arpl
or
iret
out
imul
and
push
and
jb
xchg
lods
adc
jae
xchg
cwtl
sub
mov
das
mov
cmpsb
out
out
enter
leave
lret
sbb
ds
loop
inc
test
dec
lahf
cmp
and
mov
pop
push
sub
subl
cmp
mov
mov
loopne
subb
enter
jg
test
sub
test
lret
xchg
jns
fcomps
cmp
andl
imul
dec
cmp
into
and
popa
sti
popf
test
mov
mov
xchg
icebp
lds
mov
aad
mov
pop
mov
icebp
mov
addr16
sub
or
rclb
cwtl
xchg
shll
cmp
push
test
std
ss
jo
xor
out
inc
dec
adc
mov
xlat
cmc
sbb
leave
cmp
push
add
mov
repz
stc
ret
addr16
jae
add
in
les
divl
add
xor
adc
mov
mov
cmp
outsl
fisttpll
sbb
jg
or
sahf
dec
je
fs
add
ret
jg
push
cwtl
xlat
mov
and
adc
call
mov
movb
push
fdivr
ss
and
mov
and
cmp
inc
push
nop
mov
mov
in
cmpsb
pop
adc
mov
daa
pop
ss
and
cltd
mov
pop
push
dec
in
pop
cs
sti
and
pushl
jo
flds
or
sbb
xchg
mov
nop
cmpsb
test
xchg
fadd
sbb
fsubrl
gs
or
popf
inc
dec
mov
xchg
cs
fwait
sti
pop
pop
popa
lock
clc
in
insl
out
pop
dec
out
shlb
lock
jo
out
jb
jo
mov
aad
into
aaa
mov
addr16
jge
in
push
out
mov
sub
inc
call
xor
in
daa
jnp
dec
test
inc
sti
sub
test
sub
dec
cmp
out
stos
movsl
ds
fnstenv
test
sbb
inc
divb
or
xor
inc
out
daa
adc
cmpsl
es
adc
cli
lock
test
inc
imul
test
ficompl
mov
fdivr
pop
test
push
repnz
push
addl
adc
xor
mov
ja
pushf
mov
lods
cmpsl
pop
imul
inc
cmpsl
fstpt
cwtl
gs
insb
pop
mov
jge
push
cli
xchg
enter
mov
push
out
add
adc
shrb
sbb
mov
and
clc
sbbl
lcall
push
jg
xchg
jge
loope
ljmp
pop
ret
addr16
dec
outsl
inc
mov
adc
fiaddl
pop
cmpsl
or
pop
push
sub
xchg
lret
mov
rcrl
mov
sbb
divb
cwtl
or
sbb
xchg
and
roll
ja
fldl
xchg
loope
mov
add
mov
sbb
enter
insb
and
mov
push
popl
inc
inc
int3
cmp
fdivr
ret
mov
or
add
fnstsw
cltd
pop
lahf
adc
aas
or
stc
mov
shlb
sbb
mov
inc
jne
sub
shlb
add
lods
mov
adc
mov
mov
pushf
subl
sbb
sbb
bound
leave
mov
movsb
insb
dec
stos
inc
fwait
sahf
fstl
ljmp
sbb
iret
ret
arpl
mov
mov
add
fstl
dec
ret
repnz
push
push
lods
ja
js
adc
pushl
sbb
dec
das
xchg
out
leave
flds
push
pop
fstpt
js
mov
add
cmc
inc
xor
pop
fwait
jge
xchg
jnp
push
xor
pop
lahf
mov
pop
jl
inc
mov
mov
jns
int
insl
xchg
loope
sub
into
cmpsl
mov
mov
jno
push
lahf
int
pop
popf
shrb
testl
add
adc
jae
cmp
and
scas
dec
cltd
cmp
push
add
cwtl
jmp
adc
aad
fsubr
xor
addr16
pop
lcall
sbb
sub
aaa
jmp
adc
enter
jbe
out
xchg
test
sbb
cmpsl
and
cmp
inc
and
adc
aaa
mov
add
pop
mov
daa
cwtl
and
pop
mov
inc
in
jnp
cmp
int
adcb
push
fwait
jmp
push
movsb
mov
jp
lods
cwtl
lcall
xor
mov
js
inc
mov
test
sub
and
mov
sahf
add
mov
add
leave
pusha
scas
stc
add
into
dec
add
or
mov
imul
mov
shr
lret
xchg
sub
les
lods
test
sub
push
addr16
adc
addr16
dec
dec
jmp
or
fadds
push
lock
and
nop
lods
pop
rolb
mov
fwait
jecxz
sub
jg
and
pushf
flds
xchg
add
sbb
das
inc
fwait
dec
dec
inc
lods
shlb
insl
std
mov
shll
jo
scas
pushl
xchg
mov
andl
add
in
or
movsb
jg
inc
push
aam
mov
and
movsl
imul
xchg
std
pop
cmpsl
sub
mov
cltd
imul
pop
cwtl
adc
aaa
adc
xor
scas
sbb
xchg
fnstsw
es
cld
insl
mov
mov
ret
sub
pop
sub
cli
or
adc
mov
dec
dec
cmp
xchg
pop
sub
mov
lds
push
push
movl
cmp
das
mov
jb
bound
dec
subb
pop
fmulp
inc
mov
xchg
push
cmp
sbb
push
mov
or
iret
test
sub
xor
loope
adc
and
pop
or
sar
test
or
pop
add
xor
movsb
int
push
sbb
cmp
fwait
push
adc
sahf
ljmp
push
insl
sub
or
pop
sbb
mov
icebp
jp
mov
nop
test
cmc
jecxz
into
mov
xlat
test
popf
xchg
mov
adc
aam
mov
xchg
jl
sbb
and
push
adc
mov
mov
imul
lahf
sbb
in
jle
icebp
inc
pop
xor
lret
int3
jno
mov
mov
popa
fs
negb
bound
sti
aas
inc
cmp
pop
out
movsl
in
cld
push
cmp
clc
mov
push
repnz
mov
cs
and
pop
cmpsl
dec
push
jo
adc
mov
dec
add
movsl
mov
pop
adc
lahf
mov
into
test
sbb
cmp
pop
mov
fisttps
imul
sti
out
jnp
xchg
nop
inc
jl
xor
lods
into
jp
jecxz
rclb
gs
fs
stos
imul
out
jne
addl
ds
lock
loopne
rcrl
aam
sbb
das
nop
repz
pop
lds
fcompl
ret
scas
aaa
add
mov
shlb
jo
mov
mov
std
js
adc
sub
scas
inc
rorl
or
or
cmpsl
or
cmp
and
lea
das
inc
shlb
cwtl
dec
cmp
popf
lods
add
sarb
sbb
pop
or
stos
nop
xchg
cmp
lds
add
and
jle
inc
out
or
insb
dec
gs
lock
sbb
nop
rorl
xchg
outsl
divb
inc
addb
push
mov
mov
mov
mov
mov
push
pop
adc
mov
stos
jg
pop
fwait
jge
mov
xchg
and
mov
jmp
cmp
loope
mov
sub
in
daa
imulb
out
mov
imul
sbb
idivb
stos
daa
xor
imul
xor
das
mov
push
inc
adc
cmp
lret
sub
aam
sbb
pop
jb
int3
imul
ds
cmpsb
jg
in
shl
stos
jno
loop
loope
dec
or
repnz
inc
fidivrs
mov
popf
xor
dec
jae
test
outsb
push
dec
jns
and
cmpb
inc
xor
sbbb
ds
lods
sub
fistl
mov
shll
cld
adc
add
jmp
fs
or
xchg
mov
mov
fisttps
hlt
cld
jmp
lods
pusha
shll
mov
adc
sbb
fsubrs
xchg
test
sub
outsl
and
shl
pushf
xchg
int
add
and
mov
lret
dec
xor
enter
in
sti
mov
pop
pop
mov
pop
cmpsb
jb
inc
shlb
sbb
mov
push
repnz
ret
movsl
adc
push
stos
adc
and
jle
pop
negb
repz
xchg
add
repz
int
add
mov
cld
dec
sbb
in
stos
push
xchg
dec
fiaddl
out
or
sub
pop
jge
or
inc
jmp
mov
pop
pop
add
dec
bound
jb
iret
add
rolb
call
lea
stos
in
es
mov
xor
das
xor
ja
xor
mov
test
add
cltd
ret
movsb
or
mov
dec
cmp
test
xchg
mov
cltd
xor
in
mov
lahf
ror
stos
cmp
xchg
enter
mov
imul
mov
xchg
jae
dec
cmc
lret
sbb
cmp
fsub
sbb
fs
loopne
jbe
popf
sbb
inc
xchg
dec
mov
jl
xchg
ret
pop
lea
ret
inc
mov
adc
orb
xor
or
pop
gs
test
or
in
loop
insl
js
and
or
scas
mov
push
in
and
imul
pop
xchg
stos
mov
mov
add
in
pop
inc
pop
xor
repnz
adc
js
call
cs
out
sbb
mov
dec
cld
outsb
mov
enter
push
add
push
lret
ljmp
leave
dec
pop
push
leave
mov
xor
sbb
repz
mov
imul
mov
sub
cvtpi2ps
in
sbb
xlat
out
fstpt
dec
add
mov
xchg
cmc
pop
lds
cmp
outsl
aas
xchg
mov
adc
cmpl
sub
and
jne
fmuls
pop
mov
push
test
mov
mov
sbb
js
add
jne
fldt
jnp
rcl
push
sub
xor
jecxz
enter
mov
lods
push
and
jle
in
cmp
stos
xchg
jge
into
data16
mov
lock
and
mov
movsb
imul
adc
repz
fdivrl
inc
pop
sub
mov
push
aas
dec
add
clc
aad
pop
mov
iret
cmp
int3
dec
or
adc
idiv
fcmovne
sub
mov
fisubrl
pop
push
sbb
inc
ja
mov
lock
int3
xchg
xchg
daa
jb
adc
sbb
sub
jno
js
sub
out
je
push
test
sbb
fld
jns
adc
cmp
std
enter
push
mov
daa
sarb
xchg
enter
imul
pop
pop
popa
sbb
idivl
in
or
sbb
mov
rcl
mov
std
call
sti
mov
jle
scas
repz
fadd
inc
cmpsl
testb
adc
jecxz
xor
sarb
add
push
mov
fwait
mov
inc
sbb
aas
mov
dec
or
adc
je
inc
adc
sbb
xchg
mov
fisttpl
xchg
stos
sub
mov
test
insb
ljmp
mov
push
sub
mov
xchg
sbb
jle,pn
scas
sahf
outsl
dec
xorl
jb
repz
imul
outsb
leave
sahf
loopne
xor
gs
jge
xchg
lret
and
mov
jl
lods
inc
stc
add
loop
fbld
loope
xchg
popa
iret
pushf
ficoms
ljmp
je
les
testb
pop
push
jne
in
pushf
jnp
lods
scas
cwtl
jmp
push
sti
jne
xchg
or
mov
pusha
call
or
inc
dec
pop
lds
mov
lret
pop
xor
dec
pop
mov
mov
pop
fsts
sbb
mov
mov
xor
ret
daa
call
test
fsubrs
mov
fcoms
cld
daa
pusha
aam
mov
fildl
icebp
mov
lcall
mov
orl
daa
add
clc
add
pop
or
dec
sahf
mov
std
aad
mov
pop
imul
mov
adc
addr16
jmp
fs
mov
iret
jmp
enter
sarb
imul
dec
and
adcl
mov
push
rcll
push
push
sub
movsb
sbb
push
mov
xchg
dec
daa
cmp
ror
xor
xchg
adc
push
aam
xor
pop
inc
js
scas
or
mov
imul
lock
cmpsb
lds
mov
arpl
das
pop
ret
imul
mov
cmp
mov
leave
mov
pop
cmp
push
mov
pop
inc
mov
and
mulb
cmpsl
sbb
sbb
xchg
xchg
iret
jle
pop
and
push
dec
in
push
dec
stos
lahf
pop
into
or
jns
cwtl
mov
or
cmp
sub
mov
cltd
mov
mov
push
test
and
repnz
fisubs
rorb
and
mov
fmuls
pusha
mov
lahf
jge
jp
sub
pop
or
ljmp
sbb
or
clc
pop
sub
arpl
icebp
mov
or
les
jb
gs
push
mov
jmp
inc
dec
dec
sarl
pop
pop
sahf
mov
adc
loope
push
adc
mov
popf
testl
ds
sbb
mov
sub
dec
into
xor
inc
mulb
pop
das
outsl
fcoml
mov
jbe
dec
push
test
xchg
xor
sbb
inc
and
sub
sbb
ljmp
rcl
sub
fistpl
sub
orb
test
in
sub
mov
mov
imul
orl
data16
jo
ss
sbb
repnz
rorb
push
adc
xor
out
lods
xor
push
dec
sub
aad
mov
xor
lea
lods
xlat
adc
or
test
xor
ljmp
call
or
test
gs
sub
xchg
sahf
dec
jns
or
cmp
add
inc
adc
bound
shll
cmpsb
daa
or
add
stos
push
sbb
int3
les
scas
sub
cmp
shr
jno
pop
and
and
jno
push
call
arpl
mov
sbb
dec
dec
rcrb
iret
lcall
popa
stc
pop
aaa
loopne
stos
xchg
das
test
arpl
je
and
cmp
fdiv
popf
imul
cltd
inc
mov
and
cmc
or
mov
popf
cmp
inc
test
inc
push
call
sbbl
cmc
xorl
clc
lds
mov
jecxz
or
scas
lcall
cmpsb
mov
or
testb
inc
lret
mov
int
rorb
test
sub
jl
mov
mov
cld
sub
sbb
je
dec
aas
cmpsl
cs
mov
xsha1
cmpsb
or
out
scas
in
mov
loop
xchg
loopne
push
push
fiadds
add
icebp
or
pop
fistl
add
add
jge
adcl
cmpsl
xchg
cmp
pop
icebp
mov
and
out
xor
bound
std
inc
or
loop
lret
fstl
pop
shlb
add
and
mov
cmp
cli
dec
dec
lahf
xchg
les
pop
xor
jp
ficoml
jmp
xchg
sbb
enter
nop
sub
dec
or
push
test
mov
push
andl
into
adc
ret
dec
je
es
pop
ja
cs
mov
bound
fwait
pop
mov
fadd
scas
pop
xlat
mov
adc
sub
mov
data16
xchg
std
out
dec
mov
xchg
call
les
sbb
sbb
aaa
int
jns
fst
lcall
ret
push
ds
enter
lods
cwtl
cmc
mov
arpl
xchg
jg
out
rorb
loope
push
xor
xchg
mov
repnz
sbb
inc
sub
leave
mov
bound
stc
inc
mov
sbb
cmpsl
stc
dec
in
mov
lret
jmp
inc
add
push
mov
rcr
test
add
ret
fwait
sbb
decb
cmpsl
ret
in
ja
lahf
fnstsw
clc
cmp
dec
in
pop
out
ret
sbb
repnz
es
jnp
jl
push
push
aad
fdivs
sub
int
push
cltd
add
ljmp
add
es
es
xchg
sub
pop
scas
fadds
les
aas
xor
or
mov
pop
emms
insb
jnp
std
shl
mov
jne
repz
leave
adc
jecxz
sbb
xor
fwait
or
popf
and
sub
arpl
inc
pop
cmp
push
pop
cmp
mov
and
shll
adc
push
call
push
imul
or
and
inc
mov
int
stos
xchg
lds
lock
sub
incb
mov
push
bnd
xchg
xchg
mov
scas
daa
fcmovnbe
cltd
icebp
adc
dec
push
pushf
cli
pop
xchg
fstpl
rcrl
xchg
xor
jg
jge
jno
push
mov
pop
xor
bound
pop
fsubl
jmp
nop
iret
fs
sub
inc
in
bswap
or
and
sbb
iret
cmp
or
xchg
and
add
iret
int3
stc
jno
nop
adc
imul
orl
mov
in
test
gs
icebp
cltd
out
xchg
mov
mov
push
sub
lahf
dec
ror
fisubrl
sbb
mov
and
mov
and
lcall
lret
fucomip
mov
lret
and
inc
fldcw
lcall
cmp
sbb
cmp
xchg
mov
jle
inc
push
cmpb
and
fwait
xor
xchg
idivb
shr
popf
push
sbbb
fnsave
dec
push
mov
arpl
dec
and
ficompl
or
cmpsb
pop
cli
push
aaa
shll
or
dec
je
mov
mov
xor
cltd
cmpsb
pushf
push
mov
mov
inc
pop
inc
xchg
fisubl
adc
lahf
ret
push
cmp
icebp
les
and
shlb
fcmovnbe
cltd
jp
int3
in
xchg
ret
xchg
jae
pop
insl
inc
dec
mov
or
mov
std
ljmp
fcoms
adc
mov
insl
lock
mov
sub
add
push
mov
push
inc
pop
and
pop
cmp
int3
out
lds
loop
test
je
lods
loopne
push
and
in
inc
sbb
sub
adc
pop
repnz
add
cmp
xchg
jmp
out
sahf
movsl
das
xor
shrb
or
stos
insb
mov
add
cmp
xchg
int
in
jecxz
fwait
lret
sti
les
sub
mov
mov
add
subb
addr16
pop
add
xchg
lods
push
sub
pop
ret
or
push
mov
lret
dec
adc
mov
inc
mov
sti
xor
stos
jae
fists
add
cmc
mov
inc
popa
and
mov
xchg
dec
push
xor
out
mov
shll
adc
add
sub
xchg
mov
xor
pusha
aad
cmpsb
popa
jge
cmp
ja
xchg
les
mov
mov
sbb
aas
jae
int
gs
jnp
int
outsb
inc
movsl
jb
repnz
pop
add
xchg
inc
jmp
sub
push
or
das
jp
sar
xchg
xor
push
scas
rorl
jge
je
lods
or
fstpt
sbb
fildl
arpl
xor
jle
iret
push
jns
setge
dec
cmp
icebp
push
repz
adc
pusha
jo
imul
popa
push
lds
and
out
les
inc
xor
in
das
bound
xor
cmpl
leave
scas
sti
sbb
aad
sarb
out
fldenv
mov
xor
fucom
icebp
xchg
loop
rcrb
cmp
or
mov
movsb
lods
arpl
test
adc
add
sub
mov
std
cmpsb
pusha
sbb
add
in
test
pop
divb
cmp
aad
pop
jbe
icebp
fwait
div
xchg
int
es
div
sti
or
mov
push
xchg
dec
adc
mov
hlt
loopne
jnp
cmp
mov
inc
dec
stos
icebp
cmpsl
jbe
lahf
mov
push
insl
rcrl
insl
mov
jo
mov
mov
mov
addr16
shll
idivb
aas
loope
ret
xchg
push
dec
and
cmp
stos
stos
jp
jno
sub
and
fwait
sub
pop
xor
shl
outsb
pop
pop
outsb
cli
xchg
icebp
mov
mov
dec
stos
pusha
lea
imul
xlat
xchg
inc
lcall
loopne
dec
xchg
and
sub
popa
fs
ret
fstpt
mov
in
shll
dec
gs
jno
sahf
fsts
lahf
xchg
mov
in
pushf
xor
xor
leave
mov
rorl
in
mov
adc
mov
test
dec
test
push
xchg
pop
add
xchg
jae
nop
and
orl
inc
xchg
rcrl
pop
lahf
sub
xchg
jmp
into
sbb
mov
jno
sbb
das
aad
mov
mov
testb
rcrl
imul
cmpsl
adc
mov
or
lods
push
ret
adc
dec
in
mov
dec
icebp
popf
popa
cmp
ret
mov
imul
dec
leave
fnstcw
scas
gs
rorb
rorb
cmp
mov
jno
sbb
adc
adc
mov
das
mov
dec
pop
add
cmpsl
mov
test
jg
add
mov
sbb
jl,pt
cmpsl
mov
data16
dec
cmp
push
jae
ret
insl
icebp
in
add
sbb
pushf
push
and
lcall
push
sub
or
test
test
mov
iret
mov
cli
fs
loope
xor
jp
xor
mov
jo
jmp
xlat
mov
stc
int
movsb
mov
cmp
or
mov
sarb
xchg
movsb
outsl
pushf
mov
inc
mov
cltd
ljmp
jecxz
mulb
add
ss
and
add
jge
push
push
and
cmpsb
add
fbstp
popa
cmp
jae
adc
outsb
and
xchg
push
inc
xchg
cmp
jne
xchg
fld
push
clc
and
jb
and
es
mov
cld
add
cs
adc
cmp
pop
mov
inc
gs
aam
jmp
inc
movsb
jg
fidivl
sar
test
stc
aaa
add
mov
and
nop
xor
xchg
andb
pop
out
xchg
pop
mov
jle
loopne
int3
jp
xchg
xor
clc
imul
push
push
fstpl
dec
outsl
cs
xor
jge
test
je
dec
outsl
inc
pop
jns
cmp
xchg
mov
pushf
pop
cli
pusha
sub
mov
sarl
shll
sbb
cwtl
hlt
mov
jbe
jns
ja
xlat
mov
das
lods
mov
jb
push
cld
test
test
pushf
cs
cs
or
lea
dec
add
stos
incl
enter
lds
or
iret
lods
aam
mov
mov
jl
insb
dec
js
into
mov
sub
and
lret
jns
adc
xorb
jl
and
testb
cltd
mov
jle
imulb
pop
pop
or
movsl
fwait
popa
jbe
iret
pop
jmp
es
fwait
aad
jne
loope
mov
mov
sbb
lods
icebp
jg
scas
icebp
add
cld
clc
insl
push
inc
out
fidivs
jl
gs
in
repz
inc
sub
test
incl
shr
xchg
imull
lock
into
mov
sbb
cmp
inc
pusha
imul
enter
inc
xchg
push
arpl
mov
mov
jl
loopne
xchg
jle
call
jp
mov
pop
and
push
push
mov
imul
nop
inc
sub
push
je
dec
inc
andb
stos
outsb
mov
stc
mov
mov
add
movhps
add
sub
mov
xorl
jno
fnstcw
mov
test
cmp
subl
lret
push
fadd
mov
ss
pop
lods
iret
xchg
adc
mov
lock
inc
test
cltd
xchg
xchg
mov
test
cmp
xor
pop
ret
xor
mov
fs
jmp
cld
or
movsl
adc
cmpsb
mov
dec
repz
mov
cmp
and
push
jl
sbb
loopne
insb
and
fwait
aam
xorl
pop
aam
cltd
in
out
popa
adc
in
mov
inc
mov
iret
cltd
je
pop
testl
push
hlt
loope
test
ret
clc
mov
cmpsl
cmp
daa
xchg
sbb
pop
out
cmp
dec
and
adcl
divw
loope
cmp
add
stos
inc
cmpsl
es
aam
pop
jno
icebp
jae
scas
in
das
loop
xchg
jmp
fisubl
jno
adcl
mov
and
stc
cltd
jbe
fdivs
addr16
ljmp
fbstp
mov
jbe
mov
dec
jnp
xchg
mov
jmp
scas
mov
addr16
xor
mov
pop
adc
mov
jecxz
mov
std
not
cwtl
xor
mov
xor
push
pop
and
jns
xchg
leave
sbb
xor
mov
test
inc
cmpsb
cld
pop
inc
push
imull
push
rcrl
pusha
or
ja
in
bnd
sbb
out
push
pop
jmp
outsb
push
xchg
lds
in
xchg
pushf
xor
xchg
pop
test
cmp
dec
jge
adc
mov
xchg
test
push
sti
es
mov
adc
pop
loop
sub
aam
or
mov
aaa
movl
fs
loop
ljmp
test
lds
in
bound
xor
aaa
push
scas
sub
repnz
or
scas
cmc
leave
mov
icebp
aaa
aam
push
inc
pop
xchg
mov
imul
cmp
sbb
repz
lcall
push
inc
and
cmp
scas
push
test
adc
sar
int3
and
scas
js
pop
push
inc
popa
lods
les
incb
fstpl
push
jno
dec
enter
pop
cmpsb
loopne
xor
popf
clc
lods
pusha
es
mov
mov
mov
test
icebp
mov
subl
sub
mov
test
add
das
push
add
add
mov
xchg
daa
imul
lea
mov
push
outsb
popf
scas
pop
scas
jmp
dec
cmp
add
ja
in
mov
adc
xor
jns
sub
push
mov
mov
addb
mov
pushf
inc
test
push
nopl
pop
sub
arpl
leave
add
mov
adc
dec
bound
mov
cwtl
jae
pop
mov
sti
inc
jbe
sti
adc
pop
adc
sti
sbb
movsb
lds
or
jmp
lods
mov
pop
sbb
mov
je
int
dec
inc
mov
cmp
adc
mov
sbbl
dec
call
mov
in
mov
subl
add
outsl
mov
lods
testb
pop
add
sahf
pop
cmc
test
dec
adc
js
stos
lea
aad
mov
cld
insl
pop
out
je
and
mov
dec
leave
leave
push
sbb
pop
std
mov
sub
mov
jl
xor
scas
arpl
movsb
dec
sub
mov
mov
repz
mov
bound
mov
mov
leave
sub
add
pop
loopne
movsb
mov
add
and
cmp
arpl
arpl
cmc
test
sub
repnz
nop
or
loopne
push
dec
sbb
jbe
mov
xchg
xchg
push
cmpsb
stos
sahf
imul
cli
jb
sbb
jnp
sbb
push
andl
cld
cmp
pop
push
arpl
jno
push
repz
and
repnz
test
punpckldq
inc
mov
pop
jnp
pop
lock
bound
pop
aaa
or
repz
pop
add
sbb
mov
fimuls
add
cld
pop
sahf
pop
repnz
add
aas
imul
push
mov
arpl
mov
push
out
stos
jg
int3
fildl
fbstp
mov
inc
sub
and
call
lods
and
add
icebp
leave
xchg
inc
pop
cld
push
imul
ret
in
ss
sbb
lcall
fnstsw
mov
xor
sbb
mov
popf
insb
inc
pop
in
lock
shrb
out
inc
insb
ret
sbbl
fiadds
test
ret
test
mov
mov
nop
cwtl
into
jnp
scas
enter
sbb
sbb
xchg
sahf
sbb
pop
test
add
ja
jle
or
cmpsl
ret
cld
mov
lcall
xor
mov
dec
xchg
mov
mov
es
pop
xchg
cmc
mov
push
sbb
ficoml
insl
pop
mov
push
out
push
pop
push
je
iret
adc
out
shll
adc
add
or
mov
xor
jno
rcll
mov
cwtl
adc
loope
xor
add
cmp
loope
loope
bts
adc
hlt
out
mov
cld
movsb
mov
xchg
pop
add
fucomip
out
in
push
mov
out
enter
cmp
push
pop
pop
fcompl
push
popf
daa
mul
int3
xchg
cmpsb
ret
jecxz
mov
out
mov
xchg
mov
in
nop
push
push
mov
cmpb
sbb
lret
and
inc
loop
push
std
push
push
mov
sub
mov
bound
add
shlb
in
lods
mov
btr
xchg
dec
popa
xchg
out
dec
or
lret
dec
pop
lret
sbb
loop
ret
lods
repz
lret
orl
gs
aaa
out
sub
sub
idivb
adc
dec
pop
adc
test
shll
lret
jmp
inc
mov
orb
ret
mov
adc
stos
test
adc
imul
int
sbb
bound
fucom
das
sbb
stos
int3
cli
mov
xchg
cmp
pop
cwtl
mov
and
or
adc
cmp
das
mov
notb
bound
test
lds
pop
and
mov
push
sub
pop
add
push
test
data16
loop
int3
lock
mov
aam
sub
xchg
jno
inc
mov
arpl
frstor
lret
stos
add
pop
movsl
cmp
ss
sbb
jo
xchg
cmpb
out
aas
mov
dec
lsl
pop
mov
or
jl
and
stc
les
dec
cmc
jb
mov
pusha
dec
xlat
xchg
or
or
xchg
aam
jae
nop
dec
sub
add
pop
js
dec
icebp
in
les
pop
adc
stc
fwait
ret
out
pop
jle
cmp
pop
loopne
jbe
xlat
lock
cmpsb
in
push
xchg
in
into
insl
add
cmpb
leave
inc
out
cltd
xor
fidivs
and
jecxz
int
dec
imul
pusha
stos
cmpsb
je
hlt
lea
loop
cmp
test
mov
mov
add
inc
shlb
or
and
pop
add
imul
lds
cmp
xchg
jbe
daa
out
push
shrb
jns
push
inc
cmp
imul
icebp
outsb
mov
bound
xchg
sub
mov
popl
sbb
jo
out
shld
push
add
out
fsubs
or
cmpsb
icebp
movsb
adc
addr16
popa
inc
mov
scas
test
xor
xor
jp
int3
cmp
lcall
addb
jge
jne,pt
scas
push
mov
ret
push
jecxz
hlt
pushf
xor
sub
int
adc
jbe
aaa
dec
jl
sbb
and
movsl
xchg
dec
mulb
jb
adc
lret
fcom
or
mov
cmpb
icebp
lret
loopne
stc
jl
sahf
xchg
add
popf
jns
pusha
ret
aaa
imul
jbe
mov
pop
jle
add
add
in
dec
fmuls
stc
in
jnp
xchg
mov
xchg
push
xor
int3
xor
sbb
out
cmp
cmpsb
adc
je
push
sahf
ret
or
xchg
mov
xchg
mov
lea
sub
loop
clc
shll
insb
xchg
push
imul
lds
dec
std
sub
aad
and
sahf
test
xchg
movsb
std
xor
movsb
xor
xchg
stos
cmpb
iret
push
out
sti
pop
sbb
enter
push
imul
mov
aas
call
aas
or
scas
addr16
cmp
scas
aam
mov
jle
stc
insb
cltd
jne
pop
rorl
mov
mov
out
sbb
push
in
cs
lret
sub
xor
rcrb
mov
mov
add
aas
push
test
jmp
push
xchg
movsl
cmpsl
ljmp
cld
xchg
and
cld
mov
popf
xor
xor
shl
inc
imul
pop
popa
neg
push
andb
jecxz
inc
aas
xor
inc
aaa
or
and
test
es
and
jmp
xorb
dec
jbe
js
mov
sahf
movsb
sub
and
icebp
loop
fs
mov
lock
sub
dec
adc
ret
fidivl
mov
or
cmp
int
clc
xchg
lret
jnp
pop
xor
pop
dec
mov
cmpsb
pop
sbb
ljmp
push
xchg
in
rorl
dec
ss
sbb
mov
sbb
mov
icebp
icebp
xchg
repz
lret
pop
or
repnz
shlb
mov
sbbb
xchg
pop
xchg
jg
int
push
push
mov
add
pushf
out
xchg
adc
int
cmp
cmpsb
gs
pushf
mov
mov
xchg
outsl
ret
inc
or
inc
cli
adc
jbe
das
xor
das
popa
stos
cwtl
rolb
mov
out
data16
jle
xor
push
xchg
fdivs
jne
les
xor
pop
imul
test
mov
fsubl
scas
sahf
sbb
xor
cmp
cli
scas
xchg
sbb
xchg
mov
or
jl
xor
xchg
mov
mov
mov
jnp,pt
lock
lea
loope
ss
jecxz
cmp
mulb
sbb
int3
push
loope
mov
movsl
jmp
fmuls
into
test
out
jno
stos
jl
mov
mov
mov
xor
pop
push
ss
sbb
adc
inc
es
ret
cmp
lret
xchg
dec
and
sub
movsl
mov
hlt
cwtl
test
or
mov
and
xchg
mov
push
jo
sbb
mov
pop
adcl
mov
fsubl
int3
inc
out
jns
xchg
pop
inc
aaa
cltd
pushl
jecxz
add
mov
jbe
mov
punpcklbw
push
das
testb
inc
repnz
pop
test
pop
add
pushf
pop
cld
mov
jns
cmpsb
jb
aad
or
pop
lret
add
push
push
pop
push
mov
out
cwtl
xchg
mov
mov
jne
out
lods
mov
daa
push
mov
aad
dec
cmp
aaa
pop
ljmp
incb
mov
or
jbe
jno
jecxz
leave
sti
push
call
shlb
aad
push
mov
arpl
sbbl
int3
jl
mov
xor
sub
fcmovnbe
aas
and
popa
lahf
ss
mov
xor
cmp
in
neg
dec
in
jp
pop
cmp
inc
dec
cmp
xchg
fsubl
mov
sub
out
loope
sub
fidivs
es
mov
stos
cmovp
xchg
les
jo
sar
mov
cmp
sahf
enter
mov
mov
xchg
sbbl
add
cld
jecxz
iret
and
sbb
pusha
out
adc
dec
jno
fidivrs
fstl
adc
int3
stos
add
push
orb
fdivs
push
mov
add
add
sbb
adc
mov
jg
aad
aas
in
incl
in
adc
mov
pop
inc
sbbl
stos
xchg
add
lret
int
cmp
xchg
pop
jle
push
shr
imul
push
xor
inc
fistpl
leave
imul
inc
idiv
push
or
pop
inc
clc
sub
jg
push
and
sti
out
sub
push
jnp
repz
jecxz
add
sbb
out
mov
push
or
fstp
xchg
inc
nop
push
fidivrl
outsl
in
dec
inc
les
adc
ljmp
ret
or
gs
aam
jnp
jg
aad
pusha
mov
in
test
add
jmp
aam
rol
adc
and
jns
adc
pop
outsb
cmp
cmpxchg
js
out
add
in
in
dec
lret
or
cmc
inc
mov
aaa
jge
sbb
sti
inc
pop
addr16
and
xchg
jno
inc
inc
mov
mov
enter
pop
adc
or
xor
jb
test
ss
test
in
push
sbb
and
inc
ljmp
mov
xchg
dec
jno
xchg
push
mov
dec
pop
sbb
iret
cmp
xchg
sub
rorb
out
and
loope
mov
scas
aad
ret
sub
and
sti
pusha
mov
xor
divb
inc
mov
and
or
fptan
call
or
jg
shll
and
push
push
scas
dec
out
cmp
arpl
mov
lea
lods
sti
inc
fidivrl
dec
xchg
test
fistps
es
scas
push
pop
sbb
adc
adc
fucomip
mov
nop
sub
cs
dec
into
or
jp,pn
mov
mov
in
pushf
or
lret
push
mov
out
and
ja
and
cmp
xor
push
inc
jnp
pop
stos
rol
jns
xor
in
xchg
cmpsb
xor
pop
or
sub
pushf
inc
scas
push
fiadds
jg
pop
pop
dec
daa
aas
gs
jg
gs
popa
xor
divb
ret
icebp
insb
inc
sub
pushf
lret
imul
stos
nop
or
outsb
adc
hlt
cld
roll
pushf
iret
in
xor
xor
mov
sub
repnz
mov
mov
clc
and
pop
int
ja
inc
push
cmp
adc
pusha
jae
jnp
push
int
sub
lret
pop
and
push
adc
add
mov
and
outsl
sbb
movsb
mov
sbb
pop
add
lods
sbb
rcr
jle
mov
push
cmovge
mov
outsb
adc
pop
jecxz
daa
xor
std
or
enter
jl
pop
lcall
jo
aaa
xor
pop
movsb
mov
sarl
and
add
lret
jg
ds
jl
jb
jns
and
mov
mov
xor
pusha
rorb
add
vmwrite
andl
pushf
pushf
mov
sarl
aaa
insb
lock
mov
call
mov
or
xchg
repz
fdivrs
or
mov
mov
lcall
lods
stos
inc
mov
je
mov
or
shlb
mov
stc
jmp
push
cmp
insl
push
push
xor
popa
push
lock
mov
sub
out
push
xor
mov
push
out
stos
loope
addb
xor
dec
cmp
xchg
inc
ret
jne
imul
and
xchg
out
mov
mov
in
cwtl
repnz
enter
jo
fcoml
cltd
mov
pop
inc
sub
add
mov
xchg
lds
stos
sub
pop
sbbl
repz
dec
fisttpl
bound
movsb
fldln2
sub
xor
imul
dec
flds
repz
fs
mov
cmpl
popa
fsubrp
or
aam
loop
xor
inc
adc
add
adc
ds
sbb
xchg
scas
dec
fwait
cmp
jb
bound
aaa
pushf
and
xchg
test
xchg
out
or
in
xor
aas
or
or
shlb
jmp
pop
popf
or
push
and
push
es
dec
lods
subb
repnz
mov
leave
mov
mov
in
adc
and
scas
adc
fnstenv
sub
mov
xor
lds
gs
lods
and
jnp
pop
xchg
dec
enter
hlt
sub
jle
lock
das
mov
push
loop
xor
jge
jle
icebp
pop
in
cmp
mov
adc
dec
ljmp
jp
jmp
mov
ja
xchg
and
xchg
pop
mov
jle
mov
imul
and
sbb
enter
clc
mov
cmp
call
cmpsb
jecxz
nop
sub
add
out
lahf
adcb
mov
bound
and
push
add
inc
and
mov
xor
jge
pop
clc
lock
shll
vpmaxsw
mov
aam
orl
mov
push
fwait
mov
mov
and
sahf
or
pop
or
mov
sbb
ja
fists
in
call
pop
mov
jmp
sahf
adc
push
or
jbe
sub
mov
aam
dec
into
lret
or
sub
arpl
and
xor
and
dec
popf
sub
inc
xchg
xor
push
jns
cmpb
out
push
push
adc
int3
cmp
mov
ss
jmp
imul
xchg
lret
lock
std
fisubl
jne
aam
xor
outsl
adc
pop
in
cmp
inc
mov
add
gs
xchg
push
jl
int3
mov
loop
jae
jne
jge
mov
js
xchg
mov
or
mov
call
mov
xor
outsb
pop
pop
mov
cmp
adc
and
fldenv
inc
popa
lret
jne
sub
xor
jl
dec
dec
fucomi
add
mov
enter
outsl
enter
aaa
cltd
sub
iret
mov
mov
fstpt
movb
leave
mov
dec
aad
jmp
mov
jne
leave
inc
pop
dec
test
addb
adc
clc
lret
jmp
je
mulb
enter
fs
sbb
and
roll
sub
or
into
xchg
jmp
pusha
fstps
xor
cltd
cld
push
nop
or
jmp
or
sub
js
addr16
or
push
mov
jns
mov
notb
push
sbb
cli
call
xchg
and
xor
je
xor
sbb
fstpl
cmp
jmp
xchg
lock
inc
and
jns
push
outsl
mov
lahf
repnz
jl
inc
push
push
jae
mov
jo
jp
lods
fs
cltd
or
outsl
sbb
cmp
fstp
lods
cltd
stos
pop
xor
cmp
in
add
sbb
push
mov
cmp
loopne
aas
or
cltd
mov
or
rorb
movsb
and
lods
cld
daa
jno
jae
imul
mov
inc
mov
jmp
sub
in
sti
ja
mov
es
and
jecxz
inc
cld
pop
or
ljmp
stos
sbb
adc
jg
shlb
incb
push
dec
ja
push
aas
pop
fidivs
loop
xchg
daa
dec
lahf
mov
and
jg
mov
ret
fsubl
aad
mov
xchg
mov
jne
stos
sub
mov
in
mov
add
jno
and
inc
in
xor
aas
jge
cltd
mov
xchg
cmp
adc
sub
pop
or
adc
mov
imul
in
or
jle
icebp
sti
pop
insb
xlat
sti
lahf
shl
mov
add
xor
in
jge
dec
ficompl
cwtl
dec
pusha
adc
sub
pushw
cmc
jne
clc
push
pop
or
xchg
adc
dec
sbbb
mov
movsl
cltd
mov
and
jp
mov
push
inc
sbb
mov
movsb
or
adc
aad
push
jp
in
push
aad
mov
cld
icebp
mov
pusha
push
and
and
das
insb
cld
test
cli
adc
out
fsubs
lcall
shl
xchg
pop
jnp
mov
mov
mov
mov
loop
lret
or
push
mov
or
outsl
jmp
inc
mov
xchg
bound
sbb
roll
test
mov
jp
out
pushf
xor
sub
inc
lods
jp
and
xchg
cmpsl
dec
add
sarl
in
mov
das
inc
and
lret
movsl
in
adc
pop
nop
cmpsb
push
push
dec
lds
mov
mov
sbb
imull
arpl
cmp
adc
lcall
mov
and
adc
and
cmpsl
push
repz
imul
mov
and
and
xchg
mov
repz
push
and
into
orb
call
clc
xlat
je
mov
inc
xor
mov
daa
mov
aam
cmp
ljmp
cmpsb
jae
into
ja
stos
aam
mov
ss
shlb
clc
mov
outsb
xchg
inc
cmp
dec
adc
imul
ss
adc
inc
ljmp
push
test
pop
adc
shrl
and
jmp
cmp
ds
and
add
and
inc
mov
pop
push
mov
fbstp
scas
mov
xchg
add
lahf
pop
jle
cld
xchg
pop
repnz
mov
outsb
add
cmp
mov
insb
xchg
cs
mov
xor
fldl
pop
fistl
test
rolb
jbe
cmp
cmp
sub
repnz
dec
fdivrl
loopne
pop
cltd
jge
fiadds
js
into
dec
insl
pusha
daa
sbb
rol
inc
divl
cli
movsl
call
jp
sarb
mov
push
cmp
pop
dec
push
push
jp,pt
and
stc
inc
hlt
hlt
jnp
and
push
mov
shlb
push
fucom
aaa
pop
and
add
bnd
popf
test
jno
inc
aam
mov
mov
jmp
fs
in
shll
call
aaa
mov
jne
push
fcmovu
test
outsl
or
fdivrs
cmp
mov
stc
mov
aam
cltd
sbb
jns
aas
mov
or
ss
ficompl
inc
adc
xchg
xor
mov
mov
jnp
lock
add
in
adc
xor
cmpsb
fsub
inc
ljmp
dec
aad
jl
cwtl
ret
test
jmp
push
xor
jle
icebp
jl
mov
cmp
sbb
mov
shrb
pop
pushl
dec
shrl
dec
clc
popa
imul
bound
ljmp
out
jne
sub
jns
inc
push
dec
aad
jecxz
dec
test
jo
jb
xchg
aas
jg
lods
add
js
loopne
aas
insb
fdivrl
repz
ja
loopne
fnstcw
mov
incb
out
sarl
int
jb
sti
push
lahf
test
movsb
cmc
xlat
inc
or
ret
fistpll
scas
push
fsubr
jo
scas
lret
lret
xor
jne
dec
xor
mov
mov
or
mov
mov
inc
or
mov
jp
cmc
rcrb
inc
pop
jae
daa
shrl
adc
into
std
dec
mov
sub
dec
fadds
mov
jns
fstp
xchg
ret
pusha
call
mov
lea
mov
cmp
test
sub
ja
push
and
mov
fisubl
cli
sbb
ret
mov
adc
es
mov
or
repz
mov
cld
scas
jge
lret
jnp
std
dec
jmp
sbb
decb
push
pop
mov
das
inc
pop
dec
movsb
lret
imul
pop
stc
std
out
cmpsb
imul
icebp
ljmp
and
sub
mov
enterw
fmull
cwtl
jl
pushf
cld
jmp
jg
adc
out
ds
push
fnstcw
sbb
xchg
inc
mov
sub
icebp
hlt
test
dec
pushf
cli
test
lds
imul
pop
pop
mov
js
test
xchg
stos
in
ss
mov
arpl
push
cmp
sbb
or
sub
ffreep
test
sbb
xchg
stc
push
mov
adc
ret
xor
push
xchg
js
mov
fs
sub
add
outsb
call
insl
mov
repz
mov
clc
int
das
out
push
fwait
pushw
mov
fcoms
or
push
mov
pushf
cvtpi2ps
jns
xchg
sub
inc
and
stos
aam
cwtl
xchg
mov
xchg
aas
or
scas
jne
stos
jge
pop
push
aaa
enter
pop
daa
mov
add
inc
or
pop
xor
iret
mov
cmp
jl
add
nop
insl
in
xchg
out
scas
dec
mov
and
movsb
lock
fldt
clc
sbb
add
repz
iret
and
enter
sbb
std
inc
incl
stos
decb
sahf
mov
subl
mov
mov
sbb
push
mov
imul
inc
xor
sub
out
repnz
dec
icebp
test
imul
mov
add
imul
or
mov
shlb
sti
enter
sahf
mov
xchg
aam
imul
rcrb
mov
inc
mov
add
mov
loope
mov
and
movsb
sub
mov
inc
sarb
push
dec
jecxz
movsb
mov
insb
aas
push
fucomi
pop
push
cld
fsubp
imul
sub
pop
ffreep
aas
repnz
push
jb
or
daa
cld
lret
stos
add
or
lret
add
int3
imul
jl
and
ja
and
jne
bnd
fs
mov
xor
int3
dec
in
cs
pop
mov
repz
inc
fidivrl
add
xchg
mov
das
cmp
cli
sbb
iret
and
into
and
sbb
popf
int3
push
dec
mov
xor
out
jnp
xchg
lods
cmp
dec
aad
int3
mov
jmp
xchg
adc
mov
out
mov
je
push
xchg
cmc
adc
lock
cltd
jg
or
sub
stos
movsbl
movsb
push
and
mov
add
loop
xchg
lret
mov
das
sub
inc
sub
in
dec
push
arpl
dec
outsb
ret
xlat
push
nop
xchg
jb
ljmp
rcl
pop
xchg
inc
add
xlat
xchg
mov
test
inc
lock
mov
push
push
ss
lock
stos
sub
leave
inc
add
stos
mov
roll
cmc
xchg
mov
popf
shlb
cltd
pop
push
add
xor
xlat
nop
pop
or
mov
cmp
mov
das
add
mov
mov
dec
sbb
inc
repnz
out
adc
insb
cmp
xchg
or
xchg
sub
int
ret
mov
add
fsubrp
xor
loop
xlat
adc
lea
outsb
dec
xchg
cmp
xchg
cltd
sbb
arpl
push
dec
add
push
fldenv
lods
fistps
add
xchg
int3
push
push
mov
sbb
mov
push
lea
push
pop
cmp
fstps
in
arpl
aam
test
adc
xor
push
popf
in
xchg
jecxz
sti
dec
std
xchg
pop
xor
mov
fcmovbe
inc
sbb
outsl
sbb
out
pop
lahf
cmp
pop
rolb
jge
pop
inc
das
lcall
jae
in
int
out
cmp
ds
mov
sbb
imul
or
inc
dec
jmp
sbb
sti
aam
mov
push
jbe
mov
xor
pop
dec
stos
cli
mov
pusha
cmp
sbb
push
pop
or
dec
addr16
push
lds
sahf
jmp
inc
pop
insl
in
out
sub
pushf
rol
loop
fcoms
outsb
and
test
add
nop
push
fisttpl
stc
int3
testl
dec
or
shll
adc
fnstcw
add
movsl
in
clc
xor
fstpl
pop
fnstenv
sub
cld
loope
dec
inc
sub
ret
or
xchg
idivb
pop
hlt
jecxz
jnp
ss
mov
js
jecxz
or
stc
cmp
jecxz
inc
jno
in
mov
pop
fsubrl
lods
std
mov
and
push
push
xchg
xlat
popa
push
movb
test
mov
imul
xchg
das
lds
sbb
mov
popl
outsl
aam
bound
int
fisttpl
mov
sbb
cld
cld
lods
movsl
rorb
mov
pop
fistl
xchg
stos
mov
pop
dec
dec
jno
inc
inc
pop
roll
dec
cmp
nop
ja
loop
dec
inc
int3
daa
dec
mov
arpl
sub
aad
and
pusha
jl
lods
repz
fisubrs
mov
fcoml
xchg
icebp
sub
stos
xor
ret
inc
ret
out
jl
sub
aaa
push
dec
sub
mov
sub
sbb
fucomp
pop
fnstcw
mov
adc
je
pop
mov
xchg
and
aad
movsb
inc
test
pop
inc
test
inc
mov
pusha
cmp
fstps
add
mov
sbb
push
inc
mov
call
lcall
fimuls
adc
clc
push
push
dec
ret
fistpll
loope
cli
fistpll
js
movsl
push
popa
loopne
push
xor
mov
xor
loope
cmp
popf
add
xor
ds
lcall
ds
stos
pop
adc
adc
test
or
sub
mov
in
jmp
pusha
enter
stc
add
out
repnz
xlat
add
jg
inc
add
int3
repz
orl
iret
mov
push
test
test
aaa
hlt
mov
push
ror
sub
test
rclb
jno
sbb
sahf
cmc
push
daa
pusha
pop
pop
jne
push
sub
add
sbb
xchg
cmpsb
loopne
jmp
sub
or
xor
adc
inc
push
js
out
adc
fldt
fisubl
ja
repnz
adc
dec
and
clc
gs
dec
aaa
sub
jne
movsb
repz
mov
call
clc
fwait
pop
loopne
out
lods
test
add
rclb
jnp
addl
add
sub
pop
cltd
mov
adc
shlb
dec
push
sub
sbb
push
and
roll
cltd
sti
outsl
mov
loop
jne
aad
aam
sbb
xlat
jle
call
or
jbe
pop
inc
test
mov
data16
fisubrl
test
hlt
int3
aaa
mov
adc
jne
lock
in
data16
pop
sbb
mov
cmp
mov
insb
mov
out
mov
adc
pop
out
sub
xor
mov
jbe
mov
int
push
mov
imul
sub
imul
and
fdivs
lock
mov
pushl
decl
jecxz
or
or
xor
ficompl
pop
xchg
xchg
fnstenv
fstpl
cmpsb
xor
sbb
or
divl
hlt
cmpsb
das
dec
mov
mov
mov
cmp
sub
mov
es
cmp
or
popa
sub
dec
scas
lea
shll
sub
es
inc
mov
inc
dec
and
in
mov
int
insl
bound
loope
push
xor
stos
stc
insl
movsl
xchg
cmpsb
imul
push
and
or
jmp
mov
cs
rcrb
pop
adcb
mov
test
outsb
lret
or
inc
jb
ficomps
fmuls
pusha
and
test
lea
andl
sbb
cmp
insl
inc
out
add
mov
dec
imul
out
pushf
repnz
filds
jns
fcmovnbe
sbb
das
or
sar
mov
daa
sbbl
mov
ret
inc
jl
cmp
in
add
mov
pop
daa
push
shr
shl
mov
cs
adc
pop
rclb
sub
xor
mov
dec
dec
cmc
cltd
jne,pt
fadd
dec
movsl
xor
cmpsl
mov
arpl
mov
mov
stc
insb
icebp
mov
or
loope
jp
shrd
addr16
testl
std
jl
sbb
xchg
jne,pn
jo
pop
pop
cmpsl
aaa
nop
and
aaa
dec
xchg
xchg
xchg
mov
add
lea
jp
pop
mov
call
xchg
leave
icebp
aam
add
sbbb
xchg
mov
data16
or
adc
aam
dec
icebp
imul
or
inc
and
ds
push
mov
mov
and
test
push
out
stos
aas
fwait
loope
ret
mov
dec
cmp
aaa
or
push
gs
mov
aam
mov
mov
cmpsl
xorb
int
out
jbe
lock
hlt
push
or
cld
pop
lds
sahf
test
inc
and
mov
mov
mov
inc
jne
xor
adc
leave
push
cmpsl
mov
lods
out
stc
imul
test
xlat
loop
fwait
gs
push
adc
loope
or
jae
add
cmp
ss
xchg
subl
mov
lcall
push
adc
add
imul
in
gs
mov
push
mov
aas
jbe
push
faddl
hlt
cltd
iret
mov
addr16
dec
and
jl
sbb
cmpsb
je
xchg
ret
movsl
and
cmp
jge
push
jb
nop
mov
xchg
pop
dec
and
pop
mov
rclb
sti
cmp
push
fwait
rcrl
fldcw
cmpsl
xchg
mov
hlt
cmc
push
bnd
hlt
imul
cmp
movsl
push
nop
insl
push
lods
in
xchg
shrb
hlt
cmp
and
out
mov
pushf
pusha
dec
cmp
dec
imul
ljmp
movsb
sub
add
dec
mov
test
pop
cld
mov
pop
mov
hlt
sbb
push
loop
cwtl
inc
mov
lods
and
xor
dec
sbb
lea
jb
push
icebp
cli
movsl
jbe
and
ljmp
les
xchg
xor
and
jg
sbb
in
rcrl
loopne
js
add
push
pop
jmp
and
sub
cmc
insl
loope
jecxz
leave
insl
popa
daa
ds
push
out
jecxz
mov
cltd
fldl
inc
dec
xchg
stc
addl
jmp
fwait
leave
test
push
negb
loop
xchg
ss
xor
push
sub
jbe
insl
insb
cmc
mov
mov
daa
fstpl
shll
mov
call
sarl
in
add
fisttpl
cmp
pop
mov
adc
jle
in
ljmp
cmp
mov
pop
dec
cmp
in
xchg
out
test
repz
arpl
scas
leave
call
sub
shrb
mov
pop
mov
adc
or
leave
fidivrs
pop
jge
popl
xchg
fbstp
call
xor
bound
xor
inc
mov
mov
mov
xchg
jo
shl
dec
xchg
push
jg
xor
out
addl
pop
adc
je
fs
sub
sti
xor
clc
shrb
inc
aad
xchg
popa
ret
iret
pop
fnsave
in
sbb
cmpsb
and
push
inc
jo
pop
xchg
negl
jbe
dec
test
mov
cltd
cmpb
mov
rorl
loope
push
pusha
pop
orb
add
push
xchg
movsb
lahf
pop
add
cmovl
call
in
stc
cmpsl
mov
aas
pop
mov
or
xchg
add
jp
cmpl
inc
mov
std
push
add
jl
jno
pop
cmpb
sub
xchg
sub
cwtl
ljmp
test
jae
add
mov
das
mov
xor
arpl
jne
push
nop
mov
pop
sti
jnp
cmp
mov
and
push
push
stos
jp
and
arpl
daa
loopnew
pop
rcrb
push
mov
test
cli
adc
ficomps
push
lea
adc
mov
cli
cmp
dec
rol
adc
xchg
in
inc
jl
rolb
fiadds
inc
sti
mov
stos
and
xchg
dec
pop
add
call
rcrl
outsb
adc
add
dec
sub
ja
xchg
sarl
dec
mov
scas
lret
mov
movsl
mov
xchg
jge
dec
test
lret
mov
int
lret
add
adc
stos
xchg
pop
rcrb
cmp
xchg
push
adc
inc
xlat
fiadds
jl
push
push
pop
int3
inc
dec
ret
pusha
loop
push
ds
imul
jne
pop
out
xchg
dec
pop
in
pop
hlt
xor
sub
adc
mov
jl
push
leave
adc
loop
push
mov
jns
sub
mov
js
mov
shlb
test
inc
dec
xchg
leave
cs
jp
adc
lock
or
jmp
insb
sbb
mov
test
mov
mul
sbb
mov
imul
in
test
xlat
cs
loopne
add
mov
lahf
stos
cmp
adc
not
inc
mov
pop
flds
inc
xchg
repnz
or
fildl
xchg
mov
xor
aad
adc
cmp
cmpsl
pop
jbe
xchg
and
and
fwait
fstpt
add
inc
mov
dec
push
das
add
shlb
in
sahf
push
jbe
in
pop
out
repz
repnz
mov
jle
mov
out
sbb
cmpsb
mov
in
mov
sub
pop
add
ret
dec
inc
adc
jg
jp
dec
cmp
faddl
sub
inc
imul
mov
push
imul
paddd
sbb
movsb
push
rcll
std
jg
fidivrl
cli
jbe
xor
add
mov
shl
and
sarl
xchg
int
cmp
jecxz
movsl
mov
shll
adc
cmp
loope
fcoml
adc
push
xchg
mov
or
outsl
bound
sub
xor
inc
lea
fs
mov
stos
mov
cmp
cmp
dec
xchg
or
movsl
stos
xlat
loope
add
cmp
add
fstps
mov
adc
js
pushf
fildl
js
loopne
cmpsb
jnp
stc
dec
push
sub
push
jmp
or
cmp
sbb
sub
lods
in
adc
pop
test
sub
cmpb
adc
add
push
fsubrs
stos
pop
rclb
insb
push
fmull
imul
std
shrb
pop
mov
scas
xchg
mov
dec
jecxz
xor
push
sbb
adc
mov
sbb
inc
mov
imul
jp
mov
sahf
in
into
lcall
mov
xchg
and
mov
inc
cs
dec
or
icebp
jnp
mov
inc
out
xchg
lea
loopne
jnp
mov
pop
cmp
dec
dec
push
add
jle
jmp
imul
sahf
inc
push
xor
mov
cmp
icebp
xor
xchg
aam
pop
mov
sub
in
push
xchg
negl
jmp
adc
mulb
and
mov
cltd
das
cmp
sbbb
imul
jp
xor
clc
out
sub
or
or
jae
addb
movsl
push
repnz
mov
clc
fwait
push
adc
mov
sub
icebp
sbb
jo
mov
dec
cmp
das
sub
or
pop
fwait
jp
mov
into
rcll
ja
xor
rcr
ficomps
aaa
ret
xchg
aas
ljmp
sbb
aam
mov
mov
add
jns
insb
dec
sbb
sarl
bound
lret
push
add
insl
int3
mov
into
or
mov
xchg
in
fs
dec
cwtd
xor
lret
sete
gs
rcr
add
mov
mov
sub
or
clc
push
push
cltd
loop
or
adc
ret
call
insl
cld
repz
sti
mov
mov
jge
sbb
mov
jo
inc
in
xchg
insb
fs
or
jmp
in
mov
es
out
pop
stos
push
cs
lds
xor
adc
jo
fidivs
sub
xor
inc
adc
pop
sbb
dec
push
repnz
mov
scas
jmp
push
scas
neg
data16
pop
or
cld
sbb
mov
push
dec
sbb
push
mov
cld
push
push
jmp
popl
test
call
push
test
mov
jg
loop
adc
mov
mov
sbb
rolb
js
insb
repz
scas
pop
sbb
sahf
leave
cmc
pop
push
ret
mov
shrb
inc
sub
mov
or
gs
jge
ret
sbb
xchg
sub
jg
push
cmp
mov
test
loop
ret
iret
push
fildl
xchg
ret
ret
pop
or
pop
outsl
out
bound
testb
ds
fmul
jne
call
xchg
lods
sub
mov
int
xchg
adc
or
ret
lret
jg
mov
jns
or
jns
adc
mov
adc
jp
insb
stos
xchg
sbb
cmpb
hlt
xchg
nop
fs
pushf
test
test
xchg
push
arpl
mov
dec
lret
ja
add
push
gs
pop
imul
cmp
dec
mov
cmpsl
loope
pop
dec
or
out
sub
call
stc
or
add
scas
aam
popf
mov
pop
dec
gs
inc
adc
ljmp
dec
orl
cwtl
adc
mov
or
and
je
add
xchg
les
mov
xor
ret
mov
stos
dec
test
mov
or
dec
sti
mov
jecxz
push
mov
xlat
xchg
mov
cmpb
and
mov
dec
xrelease
orb
js
ljmp
pop
test
out
std
jno
mov
testl
and
rcll
insb
arpl
popl
pop
std
je
sub
inc
adc
jo
stos
push
sbb
dec
ret
adc
lea
and
imul
push
mov
lea
mov
stos
cmp
jb
push
sub
cmp
outsl
jle
faddl
mov
js
test
lock
enter
dec
in
push
push
dec
outsl
or
push
jns
sbb
loope
xchg
sti
fnsave
repz
dec
xchg
or
push
aaa
nop
pop
sbb
add
xor
jmp
mov
xchg
movsl
loope
fs
js
cmpl
mov
jg
sbb
or
pop
daa
sti
lds
and
mov
mov
cmp
mov
or
out
mov
pop
aaa
push
xchg
xlat
adc
shlb
sbbb
adc
inc
ja
jle
adc
sub
xor
add
rorl
je
lds
divb
addb
and
ret
div
pop
test
or
data16
idivl
jae
and
dec
pop
dec
rcll
pop
imul
push
xchg
pusha
jl
inc
push
dec
imul
jne
leave
iret
pcmpgtb
addr16
jecxz
arpl
out
lahf
cmp
mov
dec
pop
roll
in
test
scas
jae
pusha
mov
adc
rclb
add
and
mov
pop
test
cwtl
out
lods
pop
js
addr16
push
dec
mov
mov
sti
add
jmp
test
jp
push
push
mov
pop
gs
jns
fnsave
cltd
mov
imulb
addr16
cli
dec
fcomps
xchg
gs
sub
add
mov
cwtl
xor
lock
mov
out
je
xchg
gs
leave
lea
hlt
insl
sbb
rdpmc
fs
xor
jbe
mov
pop
inc
push
jbe
jecxz
push
adcl
sarl
popa
or
shll
lret
test
push
out
mov
mov
rclb
and
push
sbb
and
and
mov
daa
inc
pusha
and
aaa
pop
ror
mov
xor
popa
loope
sbb
jno
ret
ret
fildl
xchg
add
fs
push
push
push
loopne,pn
jbe
adc
clc
inc
fstpt
mov
add
neg
add
ljmp
xorb
mov
aad
sub
cs
mov
insb
mov
dec
lcall
push
lock
xchg
sbb
xlat
popf
rcrl
add
pop
inc
mov
push
cmp
and
adc
iret
fsubrp
std
nop
mov
sbb
inc
fists
into
pop
sub
mov
push
jno
data16
xchg
push
loop
lods
add
aaa
adc
in
mov
int3
test
les
pop
push
fdiv
imul
lahf
loopne
repnz
nop
icebp
dec
lret
dec
or
xor
push
stos
out
insl
inc
lock
lcall
push
outsb
mov
leave
mov
xchg
xor
int3
je
push
jge
in
nop
xor
sbb
pop
inc
shr
mov
insl
pop
out
mov
xor
cmp
cmpsb
imul
cli
jb
adc
ljmp
aaa
mov
and
aaa
jns
xchg
adc
das
add
adc
stos
aas
imul
xlat
js
sub
test
mov
cltd
addl
xchg
mov
adc
xchg
fnstsw
mov
pop
mov
mov
pop
insl
into
arpl
sub
push
adc
cli
mov
xor
push
popa
mov
adc
sbb
fwait
mul
orl
popa
inc
push
repz
sbb
fildl
test
jmp
mov
leave
mov
mov
hlt
cs
outsb
out
add
cmp
insl
cwtl
lcall
mov
jb
sbb
xor
cwtl
push
cld
mov
adc
loopne
mov
push
jp
push
out
ret
mov
jno
push
pop
mov
in
sub
dec
mov
push
arpl
cltd
daa
mov
test
jg
inc
or
inc
jp
sbbb
adc
lcall
cmp
out
icebp
pop
fidivl
repnz
push
jmp
pop
aaa
sbb
cmpsl
dec
fld
add
enter
out
into
mov
mov
nop
ss
sbb
and
xchg
lcall
lahf
pop
shlb
dec
pop
jge
push
add
mov
or
mov
rcrb
popf
adc
pop
or
ss
cmp
and
into
add
clc
mov
insb
sub
push
inc
xchg
aam
std
adc
cmp
or
sub
lcall
xlat
cmp
xchg
daa
movsl
push
dec
sbb
adc
pop
jnp
adc
lret
sub
imul
xor
lods
clc
cmpsl
popa
mov
aad
push
and
ret
lahf
jg
dec
xchg
cmpl
jns
mov
es
cmp
je
push
pop
xor
idivb
push
cmp
mov
inc
pop
mov
jp
addr16
jmp
sub
xchg
dec
sub
inc
lcall
sub
push
rcr
push
mov
leave
arpl
in
mov
fcoms
pop
cmp
push
insb
mov
test
fwait
jnp
xchg
xchg
dec
or
pop
call
inc
shrl
jae
in
mov
mov
dec
enter
dec
lods
addr16
lret
xor
lcall
pop
push
out
pop
pusha
fnstcw
sub
cmp
cmc
loopne
mov
int3
in
sub
fs
add
fldt
or
in
adc
insb
divl
push
popa
adc
out
cli
stc
cwtl
mov
cmp
cmp
fidivl
xor
pop
popf
add
mov
xchg
jle
scas
fsub
ret
inc
je
dec
imul
or
mov
test
hlt
imul
dec
dec
mov
in
or
shrl
movsb
jp
jecxz
cmp
ud1
stc
hlt
pop
int
mov
xor
test
and
inc
in
push
jb,pn
std
test
xchg
cmp
jmp
out
leave
xchg
xor
mov
cmp
and
mov
dec
and
adc
mov
sub
test
lcall
dec
and
pop
adc
inc
dec
or
xchg
sbb
leave
out
mov
sbb
fcoms
sub
xor
outsb
lret
xchg
loop
inc
lcall
out
adc
stos
loopne
inc
pushf
loopne
outsb
push
mov
mov
xchg
fistps
dec
arpl
pop
lods
jmp
mov
jbe
xlat
nop
dec
fimuls
test
fidivrl
pop
test
sub
and
sub
mov
int
jb
pop
aaa
pop
outsb
add
outsb
push
ret
dec
mov
inc
pop
ret
addl
lcall
xchg
xchg
xlat
and
repnz
push
adc
cmpsb
mov
or
sbb
add
pop
in
xchg
adc
and
dec
xlat
cmp
xchg
lret
xchg
mov
aad
push
sbbb
sub
jg
lods
sub
lcall
or
sbb
sub
lods
inc
sbb
rcrl
out
insb
jne
repz
and
jns
pop
or
and
sub
xchg
lods
sub
adc
adc
sub
sub
mov
scas
jo
inc
and
into
sbb
ret
xor
test
rclb
in
add
jae
rep
out
leave
imul
mov
and
push
mov
mov
mov
test
xor
sub
cmp
xor
aad
xor
xor
insl
sub
xchg
add
mov
js
and
mov
das
int3
and
push
push
xchg
mov
pop
adc
int3
jns
scas
and
cmp
addr16
roll
dec
adc
fstps
loope
mov
icebp
inc
push
xorl
cmp
ss
mov
mov
mov
ljmp
or
aam
mov
xor
movsl
add
xchg
push
and
and
ljmp
jnp
add
inc
cmp
sub
pop
cmp
test
mov
mov
sub
mov
iret
rcl
int
mov
loope
test
out
int3
test
mov
lcall
jmp
cmpsl
test
cmpsl
divl
out
pop
stos
xlat
rcrb
xchg
lret
fwait
xor
pop
sbb
test
outsl
pushf
mov
adcl
or
push
jecxz
rcll
ret
inc
mov
mov
out
mov
lret
ret
pop
dec
cmpsl
sub
xchg
jnp
adcl
icebp
sub
jmp
out
loop
nop
or
lahf
inc
push
sub
into
cmp
pushf
int3
movsl
xor
push
data16
xchg
sub
mov
mov
xchg
cmp
icebp
pop
ss
imul
movsb
xor
scas
xorb
lock
cld
and
jecxz
es
lods
mov
rclb
sub
mov
adc
iret
jge
sbb
mov
in
jle
rorb
push
push
cwtl
fistpl
mov
lods
xor
dec
cmp
test
sbb
loopne
pop
inc
test
sbb
pushf
fsts
sbb
xor
test
mov
sbb
iret
lods
ficomps
shrl
sub
out
jp
lahf
push
cmp
pop
xchg
lods
or
enter
jns
sub
and
out
mov
ss
add
in
ja
jmp
jbe
pop
imul
add
xor
adc
adc
cltd
dec
int
mov
or
xchg
dec
idivl
das
pop
pop
cmpb
enter
frstor
shl
xor
les
xor
loop
sbbb
in
imul
loopne
nop
cmp
mov
lods
or
add
into
or
jb
rol
pop
into
hlt
das
scas
mov
lcall
sti
mov
out
push
sub
idiv
xor
js
cmp
mov
scas
loopne
cli
or
je
incl
mov
sbb
pop
fisubrl
mov
push
stos
orb
push
cli
or
in
push
push
cmp
pusha
adc
imul
insl
add
dec
ss
cltd
js
mov
mov
xchg
and
xchg
fisttps
ljmp
es
out
xor
adcb
movsl
xorl
lret
inc
or
pop
jecxz
xchg
xchg
add
neg
sbb
popf
jp
add
or
jbe
sub
stos
adc
xor
mov
cmp
sub
mov
sbb
lds
sarb
push
pop
jg
mov
cwtl
std
mov
jo
xchg
in
icebp
shrl
mov
cwtl
push
dec
lcall
je
pop
inc
leave
outsl
mov
ljmp
xor
xor
xchg
insl
mov
jnp
shll
movsl
jbe
movsb
fldcw
push
test
jge
sbb
stc
rol
push
add
bound
push
jae
xorb
xor
mov
sbb
cmp
rcl
lret
lcall
cmp
push
add
jbe
inc
push
imul
sub
jmp
adc
lea
push
nop
sub
mov
jp
enter
addl
pop
xchg
fstps
out
movsl
jmp
popa
or
inc
push
fiaddl
stos
movl
mov
into
push
push
mov
jg
rcrl
mov
out
cmpsl
inc
mov
test
or
cld
call
xchg
arpl
in
call
or
inc
aaa
dec
and
jmp
sub
adc
adc
push
into
movsl
adc
xchg
sub
popa
out
les
mov
sbb
mov
cmp
add
aas
stos
enter
cwtl
jno
addr16
push
jg
outsb
cli
addl
xor
dec
inc
jle
and
lea
icebp
mov
inc
addb
jmp
sub
add
pop
js
enter
out
lods
call
or
clc
adc
inc
inc
jl
ficompl
sub
dec
and
pop
dec
ret
loope
je
mov
enter
clc
in
jo
mov
iret
in
cld
mov
aam
out
pop
aas
mov
jmp
dec
or
inc
push
and
sbb
cmpsl
lea
fucomip
push
inc
fsubrs
insl
and
adc
mov
mov
or
std
mov
dec
loop
or
lock
test
aaa
lret
push
inc
pop
lahf
enter
sub
inc
mov
pusha
jge
push
xchg
add
scas
fcmovb
mov
in
subb
or
push
loope
pop
nop
and
jnp
jp
fwait
push
mov
test
mov
mov
push
mov
pop
or
or
rorl
xchg
repnz
daa
mov
dec
adc
mov
bound
or
cltd
pop
js
mov
ss
inc
nop
fsqrt
out
fs
lret
jae
sbb
jl
mov
fwait
lods
inc
negb
int3
cmp
dec
std
rclb
pop
xor
push
sbb
and
pop
mov
jo
mov
dec
lret
out
inc
dec
or
mov
dec
shlb
cmp
and
push
incb
push
out
repz
decl
mov
arpl
fiaddl
cmpsl
out
outsl
fidivrl
loopne
movsl
dec
das
testb
sub
ds
hlt
sub
push
mov
jns
xor
cmp
lods
clc
xchg
push
call
cmp
dec
jge
adc
sahf
mul
sbb
test
ss
sub
jo
xor
xchg
fwait
movsl
ficompl
mov
cmp
mov
scas
adc
xchg
lret
sub
inc
jl
and
jo
cmp
add
scas
subl
or
test
dec
fcomps
into
jo
sbb
mov
popa
mov
xchg
lret
aaa
ja
repz
roll
or
pop
sub
sbb
and
mov
aaa
lcall
aam
or
std
stos
and
lcall
inc
cmp
mov
loope
popf
lods
pop
mov
cmp
mov
arpl
pop
sti
mov
das
call
cmp
adc
and
loope
jbe
loop
rclb
sub
sub
fsubrs
cmp
jnp
stos
imull
xchg
or
mov
aas
xor
fs
out
lods
inc
ljmp
add
lods
data16
mov
sub
mov
xchg
in
hlt
in
insl
iret
leave
cmp
fsubrp
clc
mov
xchg
dec
and
lret
push
shll
and
shl
hlt
std
jne
out
sub
and
inc
sub
dec
mov
mov
addr16
test
pop
lods
ret
or
daa
icebp
ficoms
or
mov
je
mov
push
out
jno
outsb
mov
call
jl
insb
jl
sbb
insl
jnp
ja
sub
push
push
adc
loop
shlb
lret
push
push
adc
sub
stc
add
cs
add
xlat
add
sbb
repz
pop
sbb
faddl
cmpsb
or
pop
mov
or
pusha
sub
or
push
lcall
mov
inc
pop
ret
or
mov
sub
xor
stos
push
ret
ror
xor
rcll
iret
test
imul
xlat
mov
stc
dec
fmull
daa
jnp
in
jp
adc
jp
jno
xchg
jle
xchg
testl
xor
jecxz
pop
pop
loop
bound
xchg
xchg
aad
lods
push
imul
pushf
pop
mov
lods
xor
lea
sbb
and
pop
add
mov
adc
mov
lds
fstps
push
cmp
xor
mov
cmpsl
mov
add
dec
or
mov
orl
outsl
subb
mov
or
mov
call
cmc
cmp
mov
dec
jp
jne
mov
jle
scas
lret
dec
dec
aam
mov
xchg
sti
xchg
pop
push
jns
cmp
or
pop
xchg
sarl
icebp
sub
push
pop
mov
not
loope
stc
jle
push
sub
pusha
push
mov
das
in
mov
mov
int3
insl
sti
and
mov
add
xchg
ror
push
mov
mov
pop
push
popfw
push
inc
in
data16
jo
mov
or
cmpsl
pop
arpl
imul
mov
outsl
std
xor
xchg
or
int3
mov
roll
inc
gs
jb
inc
push
nop
mov
mov
mov
mov
xchg
push
fisttps
les
ja
fs
mov
xor
pop
insl
fidivs
stc
inc
mov
cmp
outsl
cmc
lds
add
faddl
aaa
cli
mov
lahf
sub
ja
pop
pop
cmpsl
add
pop
mov
jp
les
movsb
lret
lahf
idiv
hlt
sbb
cmp
arpl
push
lcall
jno
pop
addl
xchg
test
test
inc
mov
push
cmp
sub
ljmp
dec
test
imul
jge
mov
xor
lret
push
ds
out
cmc
fnstenv
out
xchg
cli
mov
fdivl
or
std
into
and
mov
or
in
aad
inc
dec
or
andl
lahf
mov
mov
fists
pop
cmp
movsl
fsubp
pushf
push
inc
or
jl
dec
daa
dec
cld
aad
ljmp
std
dec
mov
out
mov
xchg
mov
outsl
xor
imul
bound
lahf
scas
mov
push
int
push
daa
mov
sbb
scas
jle
adc
cltd
dec
push
sub
sbb
jns
movsl
pop
stos
and
xor
sbb
sub
mov
es
jo
sahf
sbb
stos
sbb
mov
inc
sbb
adc
je
outsl
mov
lds
pop
push
faddl
and
cmp
push
mov
and
jnp
fchs
cs
test
push
or
popa
lds
outsb
fs
es
std
lahf
or
dec
aas
push
fsubrl
jae
adc
sti
insl
clc
je
dec
jae
movsl
movsl
loope
repnz
sbb
scas
sbb
out
sub
mul
test
fs
mov
mov
xchg
gs
ja
push
in
inc
mov
inc
xchg
dec
popf
inc
jle
sub
sub
inc
jae
cld
fs
mov
pop
out
jbe
and
shll
imul
cmc
xor
mov
in
ja
inc
and
dec
sub
cmp
add
push
mov
add
sbb
scas
dec
lahf
mov
add
dec
std
mov
xor
in
and
scas
xchg
popa
int3
sub
add
ror
mov
dec
lret
inc
or
lea
sub
jmp
and
add
mov
and
ret
bnd
push
jge
cmpsl
and
cmp
scas
pop
jg
mov
insb
or
dec
pop
inc
loope
lea
add
jb
hlt
push
or
adc
stc
push
xchg
rcl
dec
mov
mov
popf
mov
iret
push
xchg
push
mov
in
pop
nop
aas
jg
cltd
inc
mov
filds
mov
pop
arpl
push
aaa
int3
xlat
jg
call
scas
dec
stc
bound
cltd
in
dec
repnz
lret
jecxz
jp
sub
insb
pop
push
sbb
roll
lods
lcall
out
jecxz
adc
repz
out
movsl
sub
push
popa
inc
inc
ds
inc
loopne
jge
dec
and
sbb
pushf
jo
add
sahf
xor
jecxz
push
in
int
call
cltd
cmpb
mov
inc
xor
add
pop
imul
jecxz
ds
or
bound
jecxz
scas
inc
jp
add
push
scas
mov
out
into
scas
xchg
push
outsb
mov
stc
cmp
shll
movsl
es
ret
xlat
jnp
ljmp
int
sub
ds
mov
pop
mov
insb
mov
mov
mov
sbb
push
mov
xlat
and
mov
in
jns
adc
fwait
inc
test
sbb
dec
jo
hlt
sub
rorl
cltd
jl
mov
cmp
popf
cmp
movsb
push
push
mov
mov
lret
inc
int
sbb
mov
imul
addr16
aaa
outsl
mov
cmp
pop
xor
cwtl
sub
cmpsl
mov
and
pushf
pop
iret
mov
hlt
into
jno
sbb
jmp
add
pop
stos
stos
into
fldenv
jp
adc
enter
cs
pop
pop
jmp
push
pop
sbb
and
lods
out
loop
pusha
bnd
fldl
imul
sti
sbb
jb
loop
repnz
mov
jle
add
pop
push
sar
mov
or
sti
sub
jmp
add
jmp
jp
dec
gs
shlb
and
cmp
inc
out
in
std
pmulhw
push
mov
out
sub
and
pop
ds
and
adc
aad
iret
pop
shlb
ficoml
sbb
cmpsb
mov
adc
dec
adc
cs
cs
inc
xor
dec
push
cld
xchg
popa
xchg
shll
inc
sbb
leave
or
rclb
fdiv
mov
int
shlb
inc
mov
cmp
and
mov
mov
or
mov
pop
sti
popa
sbb
clc
or
test
fildll
pop
test
and
sub
sub
test
pop
xor
add
sub
mov
dec
and
enter
testb
or
xchg
clc
pushf
xor
or
imul
push
and
out
adc
movsb
out
xor
stc
push
incb
sahf
std
ljmp
dec
lahf
xor
jno
insb
call
push
popl
inc
sahf
out
and
or
lock
rcrb
cmc
dec
movsl
add
fwait
sbbl
sbb
clc
into
mov
push
cmp
clc
lods
fs
cmp
jno
fsubs
addr16
push
hlt
bound
add
xchg
sub
leave
dec
test
sbb
arpl
test
adc
jae
xorb
nop
lcall
cmpl
dec
jae
adcl
pop
in
sub
sub
mov
xchg
sti
call
push
mov
sahf
fdivrl
stos
stos
add
adc
adc
and
inc
pushf
clc
pop
bound
sub
xchg
das
adc
mov
jnp
mov
xor
repnz
ret
inc
sbb
aad
sbb
aam
push
pop
xchg
dec
sub
lods
lea
rolb
pop
inc
add
xor
jb
je
aam
adc
mov
mov
aad
test
pop
and
cmp
push
push
ret
addr16
adc
mov
push
push
in
popa
mov
sub
inc
addr16
sub
aas
sub
jge
in
inc
dec
cmp
int
jnp
and
outsb
dec
sbb
pop
std
ss
into
subb
imul
push
mov
out
inc
ljmp
and
clc
sti
das
dec
mov
pop
fcmovb
jecxz
pop
iret
dec
or
or
mov
cmp
decb
fldcw
outsb
mov
fistps
sbb
idivb
mov
adc
hlt
rcl
mov
push
push
inc
push
hlt
mov
cld
orl
jae
aas
pop
fwait
cld
sub
pop
push
add
xchg
lea
std
lea
lcall
cmp
mov
sbb
and
inc
mov
jg
and
test
or
xchg
or
insl
mov
data16
pop
stos
sub
pusha
sti
bound
inc
xor
sbb
test
push
sarl
and
hlt
imul
rcrl
push
pop
out
xor
jo
ja
inc
push
push
cs
je
push
pop
icebp
push
add
jne
pop
out
push
or
pcmpeqb
mov
cmpsl
enter
pop
or
mov
push
add
inc
mov
pushw
sbb
shlb
pop
movsb
cmp
mov
add
add
ja
fimuls
dec
jne
dec
cs
xchg
xor
cmp
aad
sub
push
repz
sti
inc
xor
loope
mov
popf
pop
movsb
xor
mov
arpl
mov
test
dec
or
pusha
mov
fsubl
sub
sub
sub
fstl
cld
or
jbe
lods
fidivs
mov
xor
jmp
push
shll
mov
dec
jne
jne
push
add
jecxz
mull
ret
cmp
icebp
jns
pop
dec
aad
imul
inc
jg
adc
aaa
adc
icebp
xchg
frstor
jne
or
aaa
dec
xchg
mov
movd
js
int3
enter
pop
push
xchg
test
push
lock
test
in
outsl
add
or
aad
push
pop
push
inc
imul
scas
cs
sub
lahf
cmpsl
jns
pop
ficoml
nop
push
mov
les
pop
push
js
jp
cwtl
pop
xor
in
loopne
gs
xchg
loop
les
adc
loopne
fwait
aam
js
push
cmp
incb
test
outsb
sub
outsl
mov
sub
cs
dec
mov
pop
and
add
pop
jmp
mov
mov
lret
sbb
push
lock
insl
and
sub
frstor
addr16
jp
cmp
test
push
dec
pop
popa
pop
sbb
imul
in
xchg
stos
out
fucomi
ss
scas
notl
cmp
aas
dec
push
jnp
leave
int3
jl
iret
jecxz
loope
leave
in
loopne
pushf
test
lods
jns
mov
stos
adc
fimull
push
jo
mov
inc
mov
adc
sbb
lods
jb
push
mov
and
dec
push
jo
xchg
cmc
xchg
lods
rorb
cltd
add
xchg
mov
jl
xor
add
dec
bound
orl
or
cmc
lret
fcoml
das
into
sbb
loope
ss
leave
push
movsl
je
call
iret
sub
and
adc
xorb
loope
push
xchg
es
test
repz
push
push
jge
or
and
lret
aaa
push
fst
adc
inc
jg
je
aad
sarl
imul
enter
add
call
mov
xlat
sbb
add
push
inc
sub
mov
ss
cmpsl
sarl
sbb
es
mov
push
jmp
cmpsl
sti
or
cmp
mov
in
neg
ja
inc
in
push
cltd
cmp
xchg
leave
sub
movsb
sahf
jnp
and
jl
mov
loope
data16
mov
mov
addr16
cmp
shl
jo
xor
jae
push
xor
xor
inc
ja
sub
and
in
mov
jmp
sub
jecxz
sbb
xchg
adc
repz
sub
adc
fldt
or
sub
sarb
sarl
cmp
scas
jne
sbbb
sbbl
addl
dec
movsl
nop
push
iret
das
add
jmp
lea
mov
mov
jge
in
subb
mov
lahf
shlb
add
sub
test
fldl
jmp
jns
je
adc
or
jge
jns
mov
in
cmp
mov
lahf
ja
mov
xor
dec
inc
dec
dec
mov
xor
or
enter
cmp
lods
adc
xchg
ss
jae
lcall
adc
stos
mov
aaa
xchg
push
repnz
fistps
ja
mov
call
add
sub
xor
cli
lods
fstpt
dec
fisubrl
les
xchg
enter
jle
cmc
wbinvd
mov
inc
lahf
push
fwait
dec
mov
cwtl
mov
fldcw
push
in
cwtl
sub
fcmovnb
stos
lods
bound
icebp
out
lret
aam
loop
add
jbe
jl
jb
fnstcw
divb
sub
xor
insl
xchg
xchg
push
mov
lock
and
call
pushf
imul
addr16
leave
dec
dec
outsl
mov
daa
scas
sbb
jp
ret
cmpsb
jecxz
adc
lock
sbb
xchg
jg
xchg
push
or
lret
aam
jnp,pn
sti
fisttpl
ret
lods
fdivl
jmp
addb
imul
mov
sahf
into
ficoml
call
xchg
aaa
mov
out
inc
mov
xchg
push
dec
test
jo
stos
push
push
cmp
mov
push
adc
loopne
mov
or
daa
out
push
bound
mov
mov
call
lret
jnp
incl
add
notb
stos
add
aad
iret
icebp
xor
or
insl
pop
jae
les
movsb
cmp
xor
cmp
arpl
fisubs
xchg
test
dec
fisubrl
adc
sbb
movsl
dec
inc
or
inc
mov
cmpsb
loop
add
cmp
loope
leave
in
movsl
mov
push
push
lret
sbb
push
cltd
nop
mov
dec
mov
and
jbe
jmp
notl
cmp
jp
mov
pusha
movsb
dec
dec
jge
xor
lret
outsb
mov
add
scas
clc
popf
leave
insb
imul
shll
js
stos
sbb
inc
pop
stc
lods
pop
mov
nop
cmc
mov
mov
sub
repz
arpl
mov
push
pop
pop
in
minps
add
decl
push
outsb
leave
lods
push
and
inc
dec
cmp
int
lahf
in
mov
cltd
xchg
loopne
stos
dec
popa
lret
stc
cld
notb
lret
or
mov
mov
in
jl
push
push
dec
or
lret
mov
sbb
data16
cmc
cli
sub
xchg
fbld
pop
cmp
pop
xlat
push
cmpb
xor
and
lock
mov
mov
movsb
mov
andb
adc
jb
jne
lods
pop
mov
pop
pop
inc
inc
adc
dec
mov
sbb
push
push
outsb
scas
dec
sbb
or
push
or
stc
cmp
or
and
mov
inc
pop
push
aaa
push
inc
aaa
dec
xor
ror
sub
jg
adc
pushf
jae
outsl
pop
outsb
movsl
std
testl
loop
sbb
aaa
lea
movsl
rcrb
mov
xor
movsl
xchg
dec
mov
lahf
out
out
addr16
dec
into
rclb
loope
js
xor
lods
jb
and
or
mov
lds
sbb
subb
xchg
pusha
enter
leave
mov
icebp
fimull
fdivrl
sub
pop
xchg
pop
out
aaa
add
sahf
add
rclb
mov
and
rcll
push
cmp
dec
jl
pop
loop
add
xchg
mov
xor
rolb
sub
out
fsts
adc
es
cmpb
arpl
inc
fcmove
push
sarl
and
push
mov
cmpsb
dec
fcoml
dec
dec
int
pop
shl
hlt
jae
sub
jl
mov
fistps
mov
pop
ljmp
jne
mov
sbb
shl
dec
push
notb
repnz
addr16
daa
sub
jo
xchg
mov
push
sbb
stc
lcall
daa
adc
pop
xlat
icebp
mov
out
test
and
mov
gs
nop
jnp
or
dec
sbb
out
push
and
or
push
xchg
ja
and
inc
add
call
mov
in
pop
jae
outsl
mov
inc
jge
shlb
inc
mov
cmp
neg
pop
insb
lret
pushf
mov
xchg
jmp
pushf
scas
mov
add
sar
enter
lahf
stc
ja
das
jae
mov
iret
add
cld
int3
or
xor
call
lods
enter
xor
fdivr
lods
mov
ror
lahf
in
jmp
arpl
dec
push
sbb
fnsave
std
shld
or
into
bndldx
in
xor
push
sbb
dec
cmp
xchg
int3
mov
in
pop
adc
cli
lods
mov
lcall
inc
sub
pop
gs
or
xor
mov
mov
jmp
or
ljmp
imul
or
sbb
aaa
pushf
clc
lahf
stos
mov
jle
shr
xchg
stos
cld
xor
iret
ljmp
and
movsb
add
subl
popf
mov
icebp
sub
fidivl
or
sti
jnp
cmp
lahf
pop
xorl
mov
cltd
pusha
and
pop
and
lahf
std
clc
dec
ss
mov
aad
push
les
data16
ret
shll
sub
data16
enter
sub
fisubrs
notb
add
push
sub
jecxz
xor
xchg
inc
sbb
push
decl
sbbl
imul
jmp
jmp
sbbb
pcmpgtb
movsb
xchg
scas
sub
shr
pop
xchg
cmp
enter
or
cmpsl
icebp
mov
and
adcb
mov
cmpsb
fcmovnbe
ret
popa
jno
int3
pop
std
stc
jmp
popl
pop
adc
xor
in
daa
pop
sahf
fisubl
cmpsl
insl
lea
lock
nop
pop
mov
jmp
jns
cmp
repnz
adc
jbe
movsb
hlt
rcrl
das
into
add
out
cmp
mov
shll
xor
rorl
dec
pop
sbb
out
pop
jg
lock
mov
mov
pusha
ds
cs
loopne
shrb
xor
movsl
arpl
imulb
push
inc
sbb
mov
or
sbb
clc
enter
lret
xchg
mov
bound
jno
int
and
insl
rep
out
pop
ss
cmp
push
not
lea
and
or
sbbl
adc
lahf
or
xor
sbb
xor
int
jo
add
sbb
jp
ljmp
lret
std
fimull
mov
xchg
pop
jb
pop
xor
xchg
sbb
inc
pop
jg
mov
xchg
adc
adc
cmp
pop
and
ficoms
inc
cmp
pop
loope
cmp
inc
shl
push
jge
lret
pop
xlat
or
inc
add
mov
loop
push
push
jae
shrb
stc
cli
or
daa
sbb
xor
lret
dec
in
push
adc
loopne
out
mov
xor
jl
jecxz
ljmp
jnp
out
add
shrl
clc
add
dec
and
sbb
mov
mov
pop
cli
test
sarb
xchg
xchg
push
mov
lcall
and
mov
cld
jl
out
push
push
leave
out
cmp
mov
repz
mov
push
jne
mov
add
cli
lret
sbb
les
enter
jne
sbb
mov
stos
ds
dec
xor
rcrl
clc
fldenv
aam
ss
bound
insl
aad
int3
and
pop
scas
fs
push
mov
mov
pop
pop
xchg
cmp
fs
ret
mov
xorl
sqrtps
xchg
movsb
jp
js
dec
div
movsb
ja
inc
mov
nop
aaa
mov
push
jmp
loopne
dec
testl
jb
pop
mov
push
sahf
push
mov
fcmove
rcr
fstpl
aad
push
xchg
dec
mov
dec
loopne
orb
je
cmp
or
call
mov
test
mov
in
xchg
dec
push
cmp
testl
pop
movsl
mov
mov
mov
roll
jb
rorb
cmp
mov
jae
push
mov
and
js
jns
adc
jno
rcll
push
inc
pop
adc
in
outsb
or
pop
jge
je
push
mov
out
pushf
imul
pop
cmp
adc
imul
mov
dec
cmp
lods
adc
pop
fisttps
ljmp
orb
xor
enter
test
adc
push
mov
test
nop
cld
fbstp
dec
sbb
aaa
mov
xor
sub
cmpsl
jns,pn
je
add
cs
pop
scas
dec
test
in
ja
xor
imul
push
mov
popf
mov
mov
xor
in
shlb
push
stos
xchg
mov
shr
jecxz
stos
shufps
add
shlb
aas
sbb
pusha
and
xor
hlt
stc
xlat
xchg
or
inc
sahf
insl
cmc
cmp
fsubrs
sbb
leave
xor
stos
and
mov
add
add
jno
iret
xlat
call
xor
loopne
enter
adc
mov
sarb
mov
mov
jne
sub
popa
xor
rcl
ret
xchg
imul
loop
das
aas
xor
js
push
add
fldt
inc
test
das
call
pop
add
inc
inc
dec
adc
dec
mov
cmp
iret
xor
fcmovnu
dec
rcrb
in
ljmp
push
sub
sti
mov
mov
and
movb
add
jbe
mov
inc
fidivrl
aas
jle
pop
fdivrl
and
adc
mov
mov
xchg
shrb
ss
adc
pop
pop
stos
add
cltd
pop
int
inc
rcll
sbb
jmp
lods
cmp
imul
scas
sub
bound
or
sti
iret
xchg
mov
mov
testb
inc
mov
imul
test
mov
fsubl
push
adc
outsb
dec
and
movsb
scas
addr16
xor
call
pushl
in
sub
int3
adc
push
xchg
xor
add
dec
push
or
divl
mov
and
aaa
xchg
in
enter
pop
and
call
lret
mov
aam
int
lret
int3
aam
sbb
test
cltd
lahf
or
cld
mov
add
fs
movsb
xchg
pop
cmp
xchg
shll
out
in
fstps
adc
dec
lock
shl
ret
decl
cmp
ds
jecxz
dec
mov
cli
or
jae
adc
dec
inc
add
or
dec
icebp
jg
jecxz
pop
aas
cmp
clc
dec
out
scas
mov
out
lds
adc
sbb
sub
stos
xor
mov
adc
test
shl
sub
lret
dec
dec
push
in
and
iret
mov
jo
fistpll
iret
sbb
popa
push
ret
std
sahf
iret
arpl
mov
xchg
dec
dec
rcll
xlat
cmc
pop
cmp
xchg
or
loopne
cmpsb
inc
das
add
jbe
sub
sub
cmpb
outsl
jl
stc
add
mov
cmp
testb
push
or
pop
ficoml
shl
jg
jno
jl
imul
cmc
pop
popa
repz
jle
mov
adc
jo
push
lods
scas
jmp
hlt
cmp
inc
dec
cltd
aas
jle
adc
daa
xchg
shl
stc
mov
bound
dec
mov
mov
add
stc
loopne
add
sbb
xchg
sub
mov
pop
mov
lret
loop
push
js
js
hlt
fiaddl
stos
shll
push
faddl
or
call
mov
mov
sarl
lea
and
xchg
mov
test
aaa
or
fisttpl
loop,pt
mov
das
aad
movl
pop
xor
sub
mov
int3
mov
mov
xchg
cmc
jle
adc
andl
cwtl
dec
cltd
mov
imul
push
and
dec
jbe
sub
cmp
cld
loopne
call
mov
negl
jp
mov
lods
lret
mov
mov
mov
fcoms
push
rolb
add
adc
add
push
pop
xor
daa
repz
out
icebp
add
adcl
add
daa
loop
push
xchg
jo
push
ret
xlat
arpl
cld
push
movsl
sub
movsl
push
or
bound
mov
lret
out
or
sub
sbb
lret
addr16
pop
xchg
lcall
push
jae
dec
jo
adcb
cmc
addl
leave
jmp
jmp
ficoml
push
jmp
sub
ficoms
mov
inc
sti
data16
ds
jbe
pop
inc
ds
stos
data16
cmp
aaa
test
sbb
jae
out
push
lods
cmpsl
rolw
mov
ja
addr16
mov
dec
push
mov
lods
cmpsb
sar
movsb
sbb
ret
in
adc
push
scas
adc
or
and
fwait
push
mov
xchg
es
out
lahf
mov
jo
lea
jae
xchg
popa
clc
dec
mov
lcall
stc
push
xchg
xor
mov
pop
lods
push
lds
pop
xor
jge
xchg
xlat
sbb
or
cmp
dec
mov
jp
pop
in
jno
pop
dec
sbb
mov
sub
jmp
inc
imul
dec
pop
daa
mov
push
out
sub
aaa
mov
pop
xor
fcoml
jb
sbb
mov
call
sub
xchg
fmull
repz
mov
sti
and
lcall
lds
mov
push
mov
push
xchg
mov
pop
inc
je
iret
jae
jnp
sub
lock
in
and
mov
loopne
sbb
daa
add
pusha
mull
pop
sbb
out
sbb
pop
cmpb
inc
out
in
addb
add
andb
in
cmp
push
test
push
shll
icebp
negl
mov
jecxz
stos
cltd
loop
insb
xchg
jl
pusha
or
mov
cmp
mov
inc
push
scas
or
cmpsl
dec
cld
or
iret
add
je
lcall
rcrl
jnp
std
lahf
cmp
test
fnstsw
bound
mov
mov
mov
aam
mov
fimuls
xchg
sub
fsubp
sti
lods
xchg
cli
in
or
jb
arpl
in
fsubrs
adc
mov
sbb
enter
mov
or
loope
ljmp
pop
loopne
out
jg
inc
jbe
scas
xor
lahf
adc
jmp
mov
mov
popf
and
push
scas
xlat
adc
clc
arpl
xchg
mov
add
popf
add
subb
xchg
test
and
jle
lds
dec
mov
imul
gs
scas
arpl
push
xor
add
out
mov
mov
mov
dec
cmpsl
iret
push
mov
stos
dec
sbb
mov
mov
jecxz
dec
mov
sub
stos
hlt
movsb
xor
dec
mov
sar
mov
mov
and
imull
jle
mov
pop
in
lret
shlb
and
mov
sub
pop
adcl
sbb
sub
cmp
daa
je
stos
fcomi
cmp
cmp
add
ds
push
test
pop
dec
mov
jl
push
inc
adc
pushf
fsts
jo
sbbb
sub
mov
int3
icebp
test
mov
dec
or
ja
xor
jl
or
cmp
cltd
in
fstps
lock
pop
popa
loopne
sarl
jo,pt
sbb
ljmp
js
xchg
cmp
sbb
mov
lret
push
aam
sub
mov
add
loopw
shll
data16
inc
xchg
out
lea
cwtl
or
sbb
stc
push
sbb
enter
mov
int
cmc
mov
cmp
mov
jp
clc
stos
cmpsb
push
xchg
add
push
and
xchg
lods
sub
xchg
pop
xor
in
sub
dec
jecxz
js
xchg
mov
and
int
sub
xchg
jle
pop
push
outsb
push
cmp
cs
sub
arpl
dec
cmp
push
shrb
inc
and
cs
stos
insb
mov
fwait
mov
std
jns
push
sti
cmp
mov
repz
enter
das
or
or
mov
dec
mov
push
aad
ds
lds
fiaddl
mov
pop
dec
xor
push
push
out
imul
jg
cwtl
in
push
leave
adc
pop
aaa
lcall
mov
ror
push
in
xchg
jnp
imul
sar
lcall
lods
or
pop
in
ds
pop
js
rcll
add
dec
push
or
ljmp
xor
std
insw
std
dec
ret
or
arpl
sbb
pop
push
js
jl
repz
std
adc
cmp
cmpsb
jo
pop
jmp
flds
dec
mov
xchg
insl
stos
dec
dec
cltd
cltd
dec
icebp
jnp
call
mov
cmp
inc
mov
xor
bound
movsb
add
mov
das
cmp
cli
push
xor
js
jge
addb
iret
add
inc
enter
in
arpl
shlb
mov
lods
xor
cmp
lahf
mov
test
xchg
mov
in
mov
sbb
dec
xchg
jl
mov
adc
inc
lret
test
sbb
adc
dec
cmp
ljmp
mov
sbb
push
mov
pop
call
jl
jne
popa
aad
loopne
sub
gs
rcrl
test
mov
mov
inc
mov
fisttpl
in
loop
pop
xchg
and
mov
dec
add
jp
sub
imul
or
jg
sbb
js
and
std
fists
cmpsl
repz
mov
dec
inc
mov
mov
in
mov
inc
pop
mov
lcall
int3
inc
out
pop
mov
fmuls
push
inc
mov
push
and
push
scas
bound
jnp
jg
jo
cmc
or
push
add
adc
dec
sbb
fnstsw
xchg
shll
sti
sbb
aam
inc
pop
mov
testb
jo
sbb
insb
aaa
jecxz
outsl
arpl
sbb
fs
dec
pop
mov
jg
pop
ja
push
dec
outsb
and
inc
xor
out
sbb
pop
lcall
push
xor
sarb
sbb
and
iret
mov
inc
sbb
loope
iret
mov
lods
sub
sbb
inc
adc
add
dec
jne
jecxz
scas
fdivrs
std
in
mov
cmp
stc
xlat
mov
cmpsl
push
dec
fcoml
xor
mov
mov
cs
mov
xor
and
int3
cmp
jb
xlat
fists
dec
xorb
sub
xchg
sti
pop
lods
mov
xor
jmp
jmp
shll
mov
cmp
das
hlt
inc
jnp
mov
xorb
inc
loopne
or
mov
data16
mov
stc
loopne
shr
ret
cmp
cli
std
push
iret
inc
lods
inc
movsl
jno
jp
push
push
sarb
mov
jle
jmp
and
popa
jno
inc
dec
jae
sub
xchg
test
hlt
in
push
push
dec
dec
or
js
inc
test
mov
xchg
lock
ljmp
mov
sub
cmc
push
je
pop
jo
cmp
mov
test
pop
dec
mov
sbb
call
fwait
imul
popf
mov
out
jae
xor
mov
dec
xor
icebp
hlt
imul
lea
xchg
bound
divb
pop
daa
arpl
mov
into
insl
cld
out
push
aad
cmc
nop
pop
mov
cld
inc
xchg
sbb
jns
lret
jl
inc
insb
rorl
cmp
mov
sub
aas
fisttpll
rcrb
roll
icebp
push
xchg
ret
in
out
popa
loopne
mov
cwtl
int3
insl
dec
cmc
aaa
mov
call
pop
lcall
lea
jns
movsb
mov
lods
adc
dec
pop
mov
dec
add
mov
or
mov
pop
and
dec
pop
jo
xchg
cwtl
dec
add
out
call
mov
mov
xchg
inc
mov
stos
rcll
ljmp
pushf
fildl
outsb
sub
stos
and
aaa
jl
mov
sbb
repnz
pusha
mov
pushf
mov
adc
jb
or
dec
jne
add
inc
pop
push
icebp
fildl
mov
mov
xchg
inc
std
int3
mov
and
scas
clc
adc
xchg
mov
add
daa
mov
aas
ror
lret
in
sub
jmp
loop
pop
sbb
cmp
adc
outsb
add
lods
aaa
push
xor
and
mov
dec
fnsave
mov
lcall
out
add
pop
pop
or
lods
movsl
stc
inc
decl
js
in
cmpsb
mov
pop
stos
leave
sahf
mov
mov
xchg
push
in
mov
mov
and
mov
pusha
sti
xchg
add
push
repnz
sub
xchg
inc
fldlg2
stos
out
outsl
mov
mov
mov
push
enter
cwtl
lret
push
dec
lcall
jle
mov
pop
mov
das
outsb
xchg
mov
adc
lret
iret
jg
add
pop
dec
cmp
push
popf
and
sub
aam
test
in
sbb
shll
pushf
and
inc
scas
mov
push
inc
dec
mov
cmp
mov
push
jp
and
test
sbb
pop
in
mov
push
or
in
inc
add
mov
rcrb
cmc
or
test
push
arpl
dec
loope
sahf
sbb
jg
jge
xor
mov
cli
in
push
xchg
push
jae
pop
in
movsb
and
pusha
lock
cmp
cmp
lods
xchg
sub
ljmp
and
repnz
jnp
lcall
inc
lods
das
xor
aad
adc
pop
mov
sarb
add
inc
mov
callw
loop
mov
sub
inc
imul
jecxz
fdivl
rolb
inc
stos
rcl
jbe
inc
add
and
repnz
leave
cmp
mov
stos
dec
inc
fs
jo
cmp
test
add
or
sti
fidivs
lret
loop
shll
lock
adc
dec
cmp
imul
popa
push
mov
hlt
rcll
out
jbe
dec
movsl
lea
stc
pop
je
inc
fistpl
into
aam
xchg
sub
mov
mov
pushf
addr16
popf
adc
fildll
outsb
mov
and
scas
in
pop
sbbb
jl
jb
mov
adc
mov
aas
out
addr16
into
or
add
repz
movsb
pcmpeqd
xor
jecxz
imul
adc
xchg
jne
jbe
mov
mov
pop
mov
push
mov
fwait
pusha
popa
aas
sub
subl
add
sub
icebp
aad
call
dec
add
and
mov
leave
mov
xchg
adc
lock
xor
pop
roll
mov
cmpsb
sahf
jne
cli
mov
cwtl
or
in
dec
adc
inc
into
sub
hlt
cwtl
lock
pop
sub
pop
jecxz
arpl
movaps
rclb
in
sbb
pop
sti
mov
mov
add
lea
or
loop
out
test
in
rcl
insb
pop
hlt
push
xor
loop
xchg
add
xchg
out
fmul
cmpsb
cmp
in
out
pop
push
xchg
mov
cmp
cmp
scas
imul
call
rolb
rcll
and
jl
sbb
cwtl
adc
lods
cmpb
repnz
ror
cld
cmp
subl
jp
sbb
pop
push
sbb
add
in
mov
cmp
iret
add
inc
sub
cmp
push
in
idiv
lret
inc
sar
test
sahf
pop
sahf
cli
push
dec
rol
insb
movsl
add
mov
jnp
cmp
popf
push
clc
xchg
int
sbb
push
dec
cmp
insb
call
add
sub
in
sahf
push
or
pop
sar
xor
outsb
icebp
ljmp
fisubs
pop
mov
andb
push
cmpsl
pop
out
or
pop
jne
mov
fcomps
xor
add
frstor
adc
lock
jp
iret
mov
push
inc
sarl
inc
pop
popf
cmp
aas
xor
in
inc
and
cs
push
mov
and
or
nop
lret
out
lahf
arpl
in
stos
mov
pop
sbb
loop
data16
mov
pop
nop
imul
sbb
sti
loope
pop
pushf
bound
push
cs
xlat
sbbb
adc
loop
test
sbb
out
ret
inc
or
jg
call
fisubl
in
das
and
les
or
testb
outsl
cltd
add
and
in
pop
pop
or
fnstsw
int
jmp
movsb
nop
xchg
jae
push
sahf
lret
jns
aad
pop
shll
fnsave
pop
imul
test
test
pop
inc
and
or
xor
bound
arpl
sahf
rolb
xchg
cmp
mov
outsb
roll
jnp
jl
cli
loope
leave
and
mov
test
jae
sbbb
rcrb
push
das
push
add
mulb
std
dec
xchg
xor
add
push
or
add
push
shlb
bound
and
cmpsl
icebp
rorb
rolb
cmp
fndisi(8087
jns
scas
into
and
cmpsb
mov
pop
loopne
sarl
jne
cli
mov
std
es
lods
lods
lds
js
jns
push
repz
jl
pop
push
les
xlat
pop
xchg
jecxz
movsl
cltd
or
push
inc
xchg
dec
std
jae
rcrb
aaa
jae
mov
lock
xchg
jg
lahf
jns
pop
sbb
insb
xchg
fs
in
test
inc
out
xchg
adc
aad
and
out
and
cmp
cli
dec
test
ja
jecxz
xlat
ret
jle
sub
pop
dec
or
loop
push
pusha
aad
mov
jp
dec
add
xchg
sub
clc
cmc
xorl
jae
xlat
into
jnp
ss
mov
sbb
cmpsl
loope
cmpsb
push
xchg
jg
mov
lcall
mov
xor
call
insb
es
jb
push
sbb
ja
pop
pop
xchg
fdivr
fstl
inc
jle
mov
xlat
scas
out
rorb
jb
scas
dec
aad
xchg
das
daa
push
js
testl
adcl
enter
add
stos
and
dec
or
out
fsub
cwtl
mov
mov
pop
adc
arpl
or
xchg
add
icebp
sbb
cltd
sub
pop
imul
test
rolb
movsb
mov
jp
fcompl
jbe
iret
or
inc
dec
jnp
push
push
test
imul
cld
xchg
jge
ljmp
and
push
leave
jg
ror
mov
fimuls
xchg
xchg
insl
idiv
mov
sub
std
jo
icebp
clc
fwait
mov
lods
pop
pop
pop
mov
mov
cmpsb
mov
imul
jns
cwtl
inc
sub
fistl
inc
mov
add
jge
cmp
push
inc
cmc
dec
mov
cli
jae
aas
loopne
jp
imul
fstpt
adc
lret
das
fisttps
jae
sbb
jns
pop
fs
mov
sbb
push
xor
push
push
cmp
add
scas
outsb
jge
or
ljmp
sub
jbe
divb
cmp
notl
in
mov
outsb
and
andl
xor
cs
adc
stc
es
cmp
aam
sbb
xor
xchg
and
cmp
mov
out
add
out
pop
shrb
mov
in
mov
js
push
inc
adc
enter
xlat
inc
addl
or
jne
or
ds
js
test
test
lcall
xor
js
mov
popa
xor
mov
fists
push
test
adc
sbb
leave
cmp
cmp
xchg
fwait
xlat
aas
lret
or
xchg
sbb
push
inc
cmp
sub
cmp
inc
call
mov
rcl
lods
inc
mov
lods
aam
or
push
mov
or
insb
loop
aad
lea
cmp
jnp
jns
das
fsubrl
sbb
sub
fwait
cmp
mov
cmpsl
jle
or
inc
sub
lods
movsl
stos
lahf
js
push
push
pmulhw
iret
negb
mov
rorl
inc
cld
scas
cli
xor
fidivl
mov
lock
scas
icebp
sbb
sbb
jno
lods
cmc
sbb
push
test
in
dec
loopne
out
xor
or
aas
test
push
pop
cmp
mov
push
aas
cld
notl
push
cld
ljmp
leave
pop
das
push
cmp
popf
sbb
push
outsb
mov
adc
lret
xchg
stc
arpl
fcompl
ljmp
jp
inc
sub
lret
outsl
orb
push
push
dec
stos
pusha
jo
add
test
arpl
in
data16
sub
je
lods
sub
lods
adc
lret
adc
test
cmp
push
pusha
xchg
stc
adc
pop
or
xor
lock
aam
push
mov
or
int
rep
jae
mov
inc
outsl
or
adc
lods
test
es
outsl
and
fsubrs
jbe
mov
ss
or
adc
imul
mov
mov
dec
lret
fidivl
xchg
cld
mov
lcall
push
add
mov
mov
xchg
mov
mov
and
sbbb
cmc
iret
daa
insl
xchg
sbb
in
repz
test
add
inc
xorb
cltd
jo
subw
cmp
aad
out
daa
das
mov
mov
push
imul
hlt
fldcw
popf
dec
jp
aas
out
les
mov
inc
sbb
sahf
push
pop
or
shlb
cwtl
sub
jge
lcall
dec
jbe
sarl
and
cld
pushf
ja
int3
in
in
test
dec
push
bound
and
lret
int3
fsubs
fcoms
cltd
sub
loope
lret
fnstsw
pop
testl
push
push
jnp
call
xor
in
cwtl
mov
ftst
push
movsb
mov
popf
inc
aaa
dec
inc
enter
enter
rcr
dec
sbb
push
xchg
in
outsb
mov
cmpsl
insb
mov
rclb
adc
pop
sbb
lock
jecxz
lret
fistps
cmp
shll
sub
jmp
cld
lods
xor
jbe
cmc
ja
mov
dec
stc
dec
or
pop
and
jg
sub
sbb
dec
sub
and
mov
div
jo
sbb
fisubs
cmp
adc
aam
dec
pushf
cmp
sub
xchg
adc
jge
sti
shlb
cmc
jmp
lret
mov
mov
ret
adc
int3
add
out
out
scas
xchg
sti
xchg
loopne
pushf
inc
test
add
pop
pop
std
aaa
and
adc
xchg
sbb
adc
inc
push
sbb
bound
mov
cmp
xlat
pop
in
and
sbb
pop
les
sub
hlt
sbb
sbb
mov
outsl
pop
fistps
sub
mov
mov
movaps
shll
inc
pop
push
rcrb
nop
adc
jecxz
inc
dec
mov
jge
and
cmp
lods
divl
mov
push
ja
popf
xchg
mov
jno
xchg
aaa
pusha
and
add
dec
xchg
mov
push
xor
adc
loop
ret
daa
add
xchg
xchg
mov
xchg
stos
cmp
or
aam
fistps
add
mov
out
mov
cmp
xchg
push
mov
and
mov
and
mov
jnp
bound
sub
dec
out
and
clc
divb
arpl
push
sbb
push
adc
sbb
loopne
mov
mov
cmp
rdpmc
push
imul
cmp
mov
jns
and
test
arpl
clc
jmp
jmp
scas
mov
adc
inc
test
pusha
out
icebp
xor
inc
test
lods
jo
or
xchg
aaa
sbb
xor
dec
add
stos
nop
je
push
aaa
adc
xchg
loopne
jmp
mov
xchg
orb
pop
call
cwtl
pop
add
int3
movsb
pop
sbb
sub
adc
aad
sub
outsb
mov
cmp
into
pusha
sub
sub
in
mov
sub
push
xor
pop
inc
std
or
cmp
loopne
sbb
stos
inc
sbb
xchg
mov
inc
dec
jg
inc
sbb
stos
imul
outsl
ret
push
call
es
lret
mov
add
push
loopne
and
flds
sub
adc
aam
cmpsl
in
lock
mov
dec
jo
imul
fcmovbe
jno
or
mov
push
add
cmp
pusha
je
fimuls
dec
insb
cmp
rcrl
and
test
push
jo
repz
mov
cmpsl
ret
sub
mov
mov
in
add
enter
mov
shrl
sbb
dec
jle
out
movsl
jmp
insl
mov
xor
xlat
nop
jo
inc
pop
call
popa
cltd
push
cltd
std
fimuls
jae
or
adc
rcl
adc
mov
or
les
jge
push
sub
inc
aas
aam
inc
jo
aam
fcomps
pop
jecxz
aas
xor
rolb
sbb
iret
push
push
pop
or
sub
aaa
mov
pop
dec
loope
outsb
adc
push
out
pop
ljmp
lods
imul
cmp
inc
xchg
outsl
out
sbb
leave
ljmp
adc
push
les
pop
insb
out
movsb
mov
stos
dec
lods
popf
icebp
popa
fidivl
lret
clc
sbb
lret
bound
sub
insl
or
shl
lret
scas
jae
shll
jle
sbb
fs
mov
xor
jge
xchg
into
xchg
decb
inc
pop
sahf
lods
sub
inc
cmp
xor
pop
mov
imul
enter
mov
sub
pop
push
fimull
cli
xchg
test
dec
and
sub
mov
cltd
fdivr
popa
stc
movb
je
mov
xchg
sub
jns
decl
test
lret
repnz
out
adc
cmpsl
test
sahf
cwtl
sub
cmp
dec
icebp
ds
mov
inc
mov
pop
ja
repz
or
rolb
pop
sub
sbb
lret
jb
dec
push
insb
inc
insb
inc
sub
xchg
inc
loope
mov
mov
cmpsl
inc
jmp
pop
sub
out
ljmp
in
idiv
xchg
fninit
fstpl
or
push
les
out
lret
ds
or
jmp
mov
shlb
xor
cli
pop
mov
xor
mov
cld
movsb
or
les
lea
mov
xchg
test
dec
xchg
or
loop
nop
mov
lea
insb
push
popa
inc
push
xchg
sbb
addl
xor
push
mov
xchg
and
sbb
and
leave
jge
out
shlb
imul
xchg
fisubs
jl
insb
or
or
and
into
ret
aas
adc
push
push
and
mov
push
lds
cltd
inc
lcall
sbb
push
ja
ljmp
push
lahf
jg
fldcw
inc
popf
xchg
movsb
pop
inc
jp
test
jmp
sahf
dec
mov
mov
jb
aad
and
test
push
or
sub
cmp
and
adc
mov
dec
push
movsl
inc
pop
mov
and
cmp
and
jmp
or
adc
test
add
adc
jb
add
je
ret
xor
aam
dec
dec
iret
flds
ret
fstpt
push
fcomip
lcall
mov
loope
scas
xlat
add
sbb
test
repz
pop
imul
inc
sbb
xchg
lret
jbe
pop
and
bound
icebp
in
in
sbb
pop
inc
dec
sarb
test
push
jbe
and
xchg
pop
insl
pop
and
mov
pusha
lock
fnsave
fcomps
cmp
dec
test
das
adc
xor
sbb
shlb
repz
jp
cmc
add
int
sbb
adc
mov
push
cwtl
push
pop
jp
cmp
mov
xlat
outsb
dec
loop
test
and
outsl
adc
aam
push
adc
push
out
or
cmpl
mov
xchg
or
adc
jb
lock
or
aaa
call
ret
mov
lock
aaa
sub
aam
or
test
jg
add
sti
pop
aam
jo
push
mov
fnstenv
xchg
add
push
cvttps2pi
mov
inc
sti
imul
sub
mov
cmp
dec
lock
xchg
decl
lock
xchg
add
fnstenv
out
xchg
xchg
and
dec
sbb
add
xor
stos
lcall
or
enter
das
lret
mov
aad
inc
ret
sahf
add
and
mov
cmp
int
sub
jmp
leave
pop
outsl
sbb
insl
push
jb
rcrb
or
movsl
push
mov
lods
push
push
bound
mov
mov
lods
sbb
jle
movsl
fildl
dec
insl
repz
add
push
mov
pop
mov
dec
ss
fwait
inc
adc
xor
cmpsl
movsb
mov
stos
bnd
jne
dec
and
addr16
aam
xchg
pushf
sub
jbe
mov
in
popa
fisttps
sti
dec
insl
scas
dec
outsl
jmp
sub
je
and
std
and
dec
insb
inc
xor
xchg
ss
pop
jg
fdivrl
and
mov
adc
in
scas
sbb
rcrl
add
push
mov
adc
loopne
cmp
jno
inc
dec
inc
or
cld
pop
xor
pop
pop
stos
shlb
fxch
or
into
or
mov
inc
scas
in
movsb
shll
fwait
rcrb
test
xchg
cmp
mov
adc
hlt
outsb
cltd
imul
sbb
mov
aaa
les
cmpsb
fld
movsb
inc
hlt
jb
rep
rorl
fidivrl
xchg
dec
xchg
jl
outsb
sub
jg
sub
push
cmp
pop
xchg
enter
or
inc
push
aaa
pop
ja
and
in
jg
push
in
fiadds
pop
inc
ret
cmp
or
popa
and
or
adc
jnp
and
xadd
repz
cmpsb
dec
in
xchg
mull
jbe
fdivl
dec
fldenv
outsb
ret
mov
fwait
mov
loopne,pt
ret
stos
cmc
mov
test
adc
xchg
lea
out
push
sti
scas
sub
pop
sahf
leave
cld
flds
mov
loope
lret
rcrb
outsl
sbb
lds
fwait
jp
aas
jnp
jge
xlat
xchg
or
xchg
sub
inc
sub
mov
aas
call
mov
xor
lods
push
inc
negb
xchg
jl
data16
leave
xor
mov
popf
and
xor
mov
mov
cmpsb
arpl
mov
sub
cmpsb
lods
pop
int
adc
stos
mov
imulb
xchg
sub
push
out
mov
scas
in
mov
jnp
arpl
inc
scas
cmp
pop
lret
xchg
mov
out
shlb
add
std
bound
jp
inc
inc
or
andl
push
xchg
popa
push
xchg
xchg
lock
out
dec
add
test
sbb
jo
pop
rorl
hlt
mov
xchg
lods
sub
mov
cltd
fistpll
aad
push
pop
push
cmp
adc
shl
rorb
mov
sub
pop
adc
daa
mov
dec
jp
inc
popl
cmc
xchg
push
es
dec
test
fadds
and
push
std
lahf
lock
sbb
xchg
aas
test
lock
fsubrs
mov
mov
jns
fimuls
mov
dec
dec
xchg
shrl
mov
jne
loop
inc
sarb
popa
adc
pmulhw
and
fidivs
daa
mov
and
xchg
mov
neg
cmp
lea
ficomps
addb
push
or
stos
push
stc
out
bound
xchg
dec
push
scas
movsl
dec
or
inc
popa
mov
cmp
imul
jbe
adc
sti
mov
std
les
sub
lea
es
push
xor
fwait
add
dec
or
call
mov
adc
ret
dec
inc
fdivl
rcll
mov
leave
fstp
pop
push
es
in
jno
mov
jg
fst
sahf
cs
mov
pop
aaa
cmpsb
popa
ds
pop
pushf
pop
inc
test
mov
dec
in
push
push
inc
das
jp
enter
lods
in
out
adc
xor
cltd
jo
iret
mov
pop
mov
ja
jmp
or
push
fildll
fmuls
mov
cmpsb
adc
je
dec
sub
out
and
dec
mov
adc
js
cmp
ret
xchg
xchg
idiv
ja
scas
jne
imull
and
adc
mov
sub
pop
inc
roll
dec
push
jecxz
inc
dec
loope
mov
jnp
out
or
cltd
in
adc
xchg
mov
inc
loope
cs
mov
and
push
scas
inc
hlt
sbb
add
mov
mov
add
jo
mov
add
test
pop
clc
loope
sbb
dec
inc
shll
jnp
lds
inc
jnp
shr
movsb
pusha
or
std
cmp
in
mov
aam
nop
and
mov
shl
ja
in
pop
imul
ficoml
xor
je
sub
xor
or
push
out
cwtl
test
cs
lods
popf
notb
cmp
cmp
sar
inc
test
pop
mov
add
cmc
enter
mov
es
test
push
leave
jge
cli
mov
ss
sub
dec
enter
cmp
in
xchg
push
xor
fdivl
fisubs
insb
mov
add
sbb
inc
dec
cmpsl
mov
xchg
lea
movsb
sti
xchg
or
test
or
not
xlat
pop
sub
inc
mov
jne
sbb
mov
shlb
jle
and
pusha
add
andb
sti
jnp
icebp
dec
stos
fsubr
lea
sti
std
fcmovbe
subb
enter
frstor
push
inc
inc
fisubl
repz
inc
xor
aam
ljmp
xchg
hlt
xchg
mov
popa
je
xchg
loope
scas
jl
loope
aad
sub
fsubrl
pop
iret
scas
sub
ret
pop
mov
cmc
xchg
jl
fisubrs
fcoml
in
movsb
js
out
adc
cmp
js
test
mov
call
mov
adc
dec
pop
cmp
dec
in
shl
xchg
mov
pop
lods
js
call
inc
js
jl
aaa
je
xchg
inc
sarb
lods
mov
hlt
push
arpl
jge
dec
add
inc
adc
mov
ret
xchg
pop
arpl
ja
jg
adc
sbb
cmpsb
addr16
cmp
daa
sbb
mov
inc
rcr
sbb
rcrl
add
mov
das
popa
fldt
decl
jbe
rcrl
test
dec
push
jg
out
scas
xchg
inc
cltd
fidivrl
xchg
add
and
in
fisttpl
mov
dec
pop
pop
inc
mov
or
negb
adc
mov
sbb
lcall
sahf
test
xchg
addl
xor
mov
in
push
out
mov
loop
push
push
sahf
shrb
push
outsl
sub
das
movsl
outsb
push
clc
negb
comiss
and
cli
adc
fbstp
out
push
in
sub
int
jmp
shrb
mov
mov
pop
movsl
insl
cmpsb
outsb
jge
xchg
add
pushf
or
icebp
iret
pop
in
and
pushl
jl
push
cli
shll
data16
fisttpll
cli
repnz
dec
xor
lcall
dec
xchg
or
sbb
push
add
je
push
and
cltd
xchg
push
jmp
iret
cmpsl
div
xlat
syscall
sbb
scas
insl
insl
cmc
push
and
push
dec
insl
mov
rclb
in
jns
fnsave
cmpsl
xchg
mov
lods
push
es
inc
addb
or
gs
adc
or
push
adc
jg
xchg
fwait
mov
call
push
fisubrs
push
pop
cmp
js
test
mov
imul
lcall
cwtl
cld
cli
test
mov
mov
or
xor
push
cmp
frstor
data16
insb
jno
loopne
cltd
mov
lahf
pop
mov
ficoml
stos
addl
push
ss
add
aaa
mov
xchg
outsl
out
sbb
sbb
mov
fmul
dec
out
mov
cmpsb
sub
packssdw
out
mov
mov
jne
push
dec
outsb
fisttps
adc
lods
xchg
repnz
add
jb,pn
out
ret
cmp
mov
add
call
adc
std
mov
add
cs
add
cmp
mov
or
call
outsb
rorl
decl
clc
scas
jecxz
nop
add
lods
inc
fsts
xor
sub
clc
fdivs
stc
movsb
iret
cli
in
jle
lret
lcall
mov
jnp
subb
mov
dec
mov
daa
andb
lret
xor
pop
jns
pop
es
cli
div
jecxz
pop
fcmovnb
lods
movsl
jmp
add
clc
in
mov
cmp
movb
out
sbb
daa
inc
adc
jmp
adc
inc
jmp
sub
dec
cwtl
add
les
mov
fwait
shll
inc
insl
xchg
fstps
mov
push
dec
hlt
bound
xor
add
mov
test
iret
into
sbb
ja
ss
jb
mov
dec
pop
out
int3
out
les
into
loop
in
insl
stos
imul
loope
sbb
stos
jnp
xchg
clc
or
out
ds
inc
jb
daa
ret
rorb
push
inc
add
jnp
ljmp
pop
and
aad
sub
fstpt
jecxz
sub
dec
jo
ja
pusha
fsub
push
cs
orl
scas
sbb
xchg
fsubrl
mov
jp
lock
sahf
data16
jp
fs
cltd
adc
inc
ja
dec
jae
jne
inc
push
gs
sbb
push
mov
ljmp
ja
inc
sub
sbb
sbb
mov
push
sbb
cmp
pushf
arpl
out
sti
cs
push
jbe
inc
xchg
decl
das
pop
push
pop
out
push
cmp
and
fisubs
cmp
dec
push
mov
xchg
jne
loopne
movb
test
std
pop
in
xchg
inc
inc
les
inc
mov
leave
lock
jge
mov
aad
jo
ret
ds
xchg
sub
and
cld
dec
jecxz
jp
stc
xlat
lret
adc
jne
mov
xor
loopne
jg
and
adc
rcl
fbld
adc
xchg
leave
mov
pop
fisubl
notl
test
dec
jnp
adc
aas
xor
pusha
mov
cmpsl
mov
add
lock
popf
orb
test
popa
mov
adc
pop
sbb
jo
movl
xchg
inc
add
out
pushf
dec
pop
pop
stos
cmp
cmpsl
lret
cmpsb
loopne
mov
mov
cld
lods
les
popa
mov
cmp
mov
imul
je
xchg
in
sub
push
or
fmuls
es
mov
jae
jmp
pop
mov
sti
xchg
jge
mov
push
leave
loopne
jne
test
nop
sahf
mov
ret
cmp
fmulp
mov
mov
lds
test
fistpll
mov
push
enter
icebp
mov
negl
stos
std
mov
cmpsb
shll
jne
jbe
jns
sub
jnp
sub
fidivrl
fiaddl
push
je
or
fs
add
pop
adc
xchg
movsl
insl
inc
and
rclb
cmp
cwtl
mov
or
jbe
ds
mov
and
jge
fwait
shlb
inc
xchg
sub
cmp
sbb
jl
sub
fstpl
into
icebp
test
mov
call
sti
sub
mov
sahf
mov
xchg
aaa
popa
mov
cld
scas
jp
push
ficompl
das
dec
cs
int3
push
fnstcw
cmp
jmp
add
in
jnp
repz
stos
xchg
mov
jnp
adc
push
mov
mov
add
shl
mov
jg
pop
add
mov
jnp
and
sub
or
jp
clc
and
jp
jle
dec
add
bound
mov
xor
jae
push
push
fidivrl
fmull
jb
sub
stos
int
loop
and
jmp
sbb
cmp
xchg
data16
les
jno
fimuls
lds
cmp
inc
jle
int
aam
add
xchg
dec
push
push
jp
fldt
cmp
mov
scas
imul
dec
mov
leave
ljmp
fildll
mov
xchg
pop
aad
jnp
pop
or
jmp
mov
test
xchg
popa
int3
aam
sub
sti
cld
arpl
shll
dec
mov
gs
mov
jne
mov
mov
sbb
sbb
cmpsb
fsubrl
mov
lcall
dec
mov
push
clc
push
pop
sub
clc
insb
mov
push
cs
adcl
lods
sti
popa
and
xchg
mov
scas
test
cld
sbb
dec
faddl
and
cmp
in
sbbb
push
pop
fsubrl
inc
and
cmp
mov
lcall
pop
in
sub
pop
or
popa
sbb
mov
and
outsl
sbb
in
sar
cmp
mov
dec
add
push
adc
xchg
or
adcl
dec
pushl
add
mov
sti
fldt
lock
fcmovne
and
sbbb
jmp
cmpsl
add
js
xor
cltd
in
inc
and
ljmp
jno
cli
cmp
je
rcll
mov
xor
sbb
jl
xchg
int3
sub
in
scas
test
and
repz
dec
pop
movsl
enter
cmp
push
sbb
push
cmp
push
xchg
cmp
test
sbb
test
test
test
stos
or
sbb
ljmp
xchg
sub
and
test
xor
mov
fidivl
ljmp
dec
pop
int3
xlat
xchg
jl
mov
or
mov
pop
shll
std
imul
mov
ret
xchg
scas
sbb
sbb
cli
cld
push
pop
push
inc
rol
push
cld
pop
mov
aad
sarl
adc
leave
repz
or
jle
push
and
pushl
mov
cld
xchg
popf
pop
nop
mov
and
mov
push
or
int3
fmul
ficomps
lret
dec
sbb
loop
cmp
dec
adc
mov
rorl
inc
dec
iret
mov
pop
std
loopew
jle
xchg
xchg
jne
addr16
or
or
xor
dec
ja
jge
mov
jne
je
cs
and
dec
push
paddd
mov
lahf
repz
inc
inc
push
ret
sub
jmp
adc
aad
and
mov
or
outsl
push
mov
xor
mov
imul
inc
add
loop
mov
push
addr16
imul
pop
mov
test
rcrb
shll
inc
jmp
sarb
push
fildll
filds
je
inc
das
pop
xchg
jl
lods
movsb
into
sbb
orb
stc
mov
sub
pop
cli
insl
aad
leave
jge
loop
cli
js
mov
ret
ss
leave
rclb
js
dec
repz
push
sar
xchg
jg
ljmp
lea
scas
into
ja
mov
xor
mov
sbb
add
in
dec
lar
insl
cvtps2pi
orb
ret
outsl
rcll
cld
lods
lock
sahf
cmp
rorl
stos
mov
or
outsl
push
cwtl
xchg
dec
dec
xchg
jns
jnp
push
inc
andl
test
push
clc
popa
jnp
mov
add
pop
add
repz
ror
adc
xchg
rorb
mov
cs
inc
movsl
dec
and
pop
aaa
jmp
dec
stc
jg
xor
mov
ljmp
add
and
adc
mov
sub
icebp
adc
ret
loope
mov
mov
in
xorb
sahf
leave
jg
mov
dec
pop
shlb
fistpl
insl
add
ljmp
inc
mov
icebp
addr16
mov
mov
adc
fisttpl
hlt
cmp
orb
int
rorl
mov
or
lcall
dec
hlt
xor
mov
stc
xchg
notb
ret
adc
sbb
xor
cld
add
jno
dec
add
fsubl
out
addb
jb
sbbb
jle
push
xor
stos
sub
enter
add
mov
cs
movsl
dec
push
push
adc
push
sub
jge
fs
or
ljmp
inc
sahf
add
cltd
jmp
push
xor
cwtl
xor
subb
aaa
in
int
cmp
call
mov
mov
mov
outsl
add
clc
pop
dec
add
testl
pop
adc
dec
into
sahf
add
lret
inc
es
pop
fwait
cwtl
sbb
ss
in
pop
sub
xchg
adc
mov
pop
sub
scas
or
jg
mov
mov
inc
insb
mov
pusha
mov
xchg
xor
dec
les
push
rolb
inc
mov
xchg
arpl
imul
arpl
xor
scas
dec
jns
mov
pop
sbb
mov
in
into
pop
mov
jp
cmp
les
or
dec
cmp
gs
in
lds
mov
jmp
xlat
inc
xchg
out
and
sub
and
popa
push
mov
add
call
xchg
sbb
cmp
add
push
stos
out
sbb
lret
dec
bound
mov
scas
or
inc
in
add
rolb
push
shll
out
sub
and
inc
lods
adc
stos
sub
fcoms
and
xchg
mov
movsb
jmp
lret
loop
adc
jns
out
lret
add
ja
popa
mov
fbstp
mov
sar
pop
lock
ret
mov
inc
mov
fcos
mov
test
sar
cmp
popf
pop
into
cld
xor
out
lahf
ja
mov
sbb
gs
push
pop
mov
test
bound
xchg
cmp
rolb
js
fists
clc
arpl
aam
pop
pop
shlb
andl
js
insl
lahf
jg
in
add
add
mov
stos
mov
xor
jns
mov
icebp
sub
dec
sub
rcrl
inc
bound
or
aam
mov
nop
jmp
inc
in
scas
ret
sbb
lcall
xor
xor
mov
jae
adc
in
mov
add
jecxz
call
mov
cmp
mov
jbe
fsubr
roll
andb
dec
sbb
leave
xor
dec
rcll
dec
push
daa
push
add
in
jbe
push
or
loopne
icebp
stos
xchg
imul
inc
and
out
dec
cmpb
mov
out
pop
adc
pop
sub
mov
aam
mov
outsb
cld
fcompl
ja
and
mov
loop
in
dec
add
add
mov
shlb
adc
mov
dec
inc
dec
pop
mov
jg
fadd
rclb
xchg
jo
and
ja
stos
ss
in
mov
mov
add
cmp
mov
pop
xchg
cld
mov
jge
mov
cmp
pop
es
sub
fdivs
dec
xchg
and
inc
jo
adc
adc
int
or
mov
sub
inc
pusha
loope
sub
inc
cmpsl
popa
test
jp
push
aaa
or
fcoml
loope
lods
and
dec
xor
out
xchg
dec
xlat
adc
enter
leave
addb
sub
outsl
xchg
imul
pusha
loopne
cwtl
enter
xor
mov
fistps
mov
xchg
push
lret
xor
xor
mov
cmc
pop
stos
xor
jl
mov
mov
xchg
lods
popa
fdivrs
inc
rol
ret
and
or
cmp
cmpsb
cltd
pusha
sbb
and
xchg
icebp
insl
jmp
popa
sub
adc
pop
and
jns
sub
js
aam
femms
out
mov
sbb
and
cmpl
jnp
cmp
inc
adc
xor
jmp
cmp
inc
jne
xchg
cmpsb
sub
test
mov
aam
pop
mov
repnz
jno
rsqrtps
notl
and
sub
adc
mov
xchg
sub
test
xor
mov
dec
sub
fcmovnb
gs
nop
loopne
leave
ret
and
xor
add
adc
test
xchg
out
sbb
ja
cli
rorl
je
jp
push
xorl
pop
fsubl
push
mov
mov
or
jno
mov
loop
insb
lock
ds
mov
fldcw
loop
mov
test
enter
ds
cmpsb
inc
jns
sbb
cmpsb
mov
mov
nop
pop
jno
jno
xchg
push
repnz
add
adc
int3
push
fs
mov
pop
inc
sub
dec
xchg
add
arpl
mov
out
xchg
mov
out
push
inc
out
push
cmp
cltd
mov
nop
lahf
jmp
cli
cmp
sbb
popa
mov
lret
mov
cmpb
xor
iret
push
mov
lods
scas
or
push
push
lds
cmp
cmp
cmp
cmp
jg
je
fldenv
inc
dec
mov
shl
xor
stos
bound
mov
dec
cmp
aam
ror
sub
rcrl
imul
inc
loopne
sub
popa
lods
mov
sbb
ret
mov
int3
adc
enter
pop
jle
out
pop
pop
pushf
pop
pop
pop
push
mov
mov
mov
mov
cmpb
rcrb
lahf
add
xor
cmc
xor
lods
jb
daa
and
pop
int
iret
push
movsl
stc
loop
outsb
aaa
jg
and
mov
or
pop
push
xchg
test
sahf
inc
test
push
mov
loopne
adc
xor
andl
ret
lret
fmull
pop
mov
adc
push
loop
inc
addr16
popa
repnz
fcompl
jle
out
mov
adc
out
and
ss
bound
sub
movsl
push
test
dec
insb
scas
xchg
iret
mov
movl
push
out
paddsb
inc
mov
loop
icebp
rorl
and
cmp
mov
mov
pop
jmp
add
leave
dec
sbb
mov
add
adc
rorb
cmp
fbld
into
int3
fwait
jle
adc
sub
xor
jp
es
iret
rcll
in
loopne
pop
xchg
mov
cmp
sbb
arpl
int3
outsb
sbb
pop
test
sub
das
cs
sbb
xlat
mov
test
mov
cmc
and
testb
adc
out
mov
imul
iret
repnz
cltd
push
int3
insl
cmp
pop
ss
dec
jns
mov
jge
xchg
xchg
lods
fcomip
jae
cmp
dec
ds
dec
push
or
jl
cmpsb
or
and
mov
loope
cmpsl
cmpsb
add
sbb
dec
mov
mov
cmc
sti
je
ljmp
mov
out
or
or
cmp
ja
pop
xchg
scas
aam
mov
xchg
cmc
mov
jg
addb
loope
or
stos
jnp
inc
cltd
push
lea
mov
cmpb
push
jb
mov
mov
push
xlat
adc
jne
in
repz
mov
jg
repnz
mov
out
fcoml
xchg
stos
lcall
out
les
jmp
mov
jmp
and
inc
movsb
in
ds
pop
daa
test
icebp
mov
push
cmp
xchg
es
mov
aam
xchg
add
out
mov
adcb
fs
add
jle
or
jns
push
in
jecxz
cmp
mov
and
add
cmpsl
adc
push
fiaddl
out
rclb
cmp
sub
or
nop
mov
dec
mov
in
xchg
stos
mov
clc
inc
push
subl
cli
and
mov
out
test
pause
or
add
popf
lods
mov
jb
cmp
sub
stos
cld
mov
jo
into
scas
aad
and
cmc
js
inc
int
pop
popa
lock
subb
cld
dec
loop
loop
mov
pop
add
pop
mov
push
pop
mov
push
lahf
ud1
jl
push
sub
sbb
sub
adc
jo
test
sub
sti
rorl
clc
jl
pop
or
dec
mov
dec
cmpsl
shrb
xchg
testb
jge
jno
sbb
int
gs
cmp
aam
mov
popa
mov
nop
and
xor
cwtl
sarb
dec
inc
add
mov
add
pop
mov
les
push
pop
xor
sub
push
jne
xor
cmp
pop
rclb
js
pop
pop
out
mov
xor
mov
jb
sbb
pop
dec
mov
stos
xchg
adc
mov
call
and
mov
dec
mov
stos
mov
cmp
fidivs
dec
jmp
loop
dec
mov
cli
mov
mov
mov
std
dec
nop
jnp
lcall
pop
cmpsl
mov
adc
fistpl
and
mov
lret
mov
jl
loope
cmc
jp
test
pop
fstpt
pop
mov
ret
adc
mov
lcall
cltd
adc
or
clc
inc
cld
icebp
gs
push
test
xor
inc
ds
iret
xlat
and
push
iret
into
push
adc
loope
arpl
test
outsb
push
mov
jb
in
xor
dec
in
mov
cmp
dec
sbb
jnp
negl
lea
int
ja
aaa
adc
lods
xchg
popa
fsubs
bound
scas
andb
adc
jp
add
loope
stos
addr16
xchg
or
dec
fldenv
lds
insb
orb
jge
push
es
mov
lds
sub
std
out
lock
popa
cmp
or
and
bound
sbb
adcl
sub
mov
jae
mov
mov
and
fistpll
aaa
popf
pop
stc
and
push
cli
xor
push
in
jnp
loop
pop
mov
mov
es
out
mov
push
sar
sub
int
jg
or
adc
cmp
je
arpl
ror
xchg
xchg
jge
jge
fwait
lahf
stc
loopne
mov
xlat
push
pushf
aam
iret
inc
sbb
pushf
cli
fisttpl
push
inc
sbb
in
das
lods
loope
bound
test
movsl
movsl
fmul
jmp
xor
and
push
xor
mov
mov
dec
mov
dec
mov
or
dec
inc
pop
dec
jb
cmp
push
shll
sbb
adc
add
fsts
xor
imul
xchg
std
nop
mov
rclb
and
clc
dec
or
lahf
push
adc
fs
cmpsl
cld
shl
rolb
mov
dec
gs
or
mov
or
les
mov
push
fldenv
aam
add
lret
add
rclb
js
insl
imul
aaa
pop
testl
imul
leave
jmp
inc
xchg
cld
sbb
test
js
adc
xlat
jle
xchg
out
pusha
lods
rcr
push
fnstsw
ret
mov
out
mov
add
cwtl
xor
cmpsl
loope
fidivrl
pushl
jg
adc
cmp
nop
jl
mov
dec
pop
xchg
out
popf
scas
xchg
and
xchg
test
inc
or
mov
leave
sbb
loope
ror
inc
fucomi
or
mov
xlat
out
add
cmpsb
imul
sub
pop
push
pop
xor
dec
inc
sbb
mov
add
jl
push
call
and
clc
mov
inc
data16
xlat
push
mov
or
pushf
loope
add
mov
mov
xor
adc
sbb
dec
loopne
inc
mov
inc
lds
movsl
mov
and
mov
out
lds
xor
jg
and
jmp
pushf
movsb
imul
adc
movsl
add
add
lock
mov
repnz
lret
mov
add
cmpsb
popf
adc
push
inc
lods
adc
addr16
xchg
pusha
push
xchg
mov
clc
push
push
mov
in
cmp
sub
sbb
out
xor
lea
sub
addr16
stc
insl
in
dec
out
sahf
clc
jne
clc
fbstp
adc
jle
test
sub
and
fistps
sub
fstpl
jge
sbb
cltd
inc
mov
popf
pop
cmp
push
fnsave
add
sub
sbb
imul
sahf
jp
out
sbb
sbb
xor
and
mov
xlat
cmp
pop
jo
dec
movsb
imul
jl
js
imul
jl
pop
shl
fists
mov
shl
push
pop
and
mov
mov
dec
rorb
outsb
pop
pop
jne
test
jb
mov
cmp
xchg
mov
pop
outsl
rolb
dec
mov
int3
and
int3
dec
dec
xlat
sub
cmp
xchg
dec
push
mov
xchg
test
jbe
call
fmuls
iret
jl
xchg
adc
cli
jne
fldcw
or
test
es
arpl
popa
adc
sub
cmpsb
pop
jl
scas
jl
mov
pop
jo
and
addl
xchg
subb
daa
jno
ret
and
cmpsb
xchg
scas
push
and
xor
adc
jecxz
mov
ret
dec
mov
pop
lods
call
pop
dec
adc
jbe
pop
xor
scas
daa
mull
rcll
xor
add
popf
fs
fisttps
mov
cmpsb
loop
ds
aas
mov
das
sub
xor
gs
mov
aaa
pushf
add
imul
xor
cmp
pop
add
mov
xor
sub
aas
push
movsb
mov
or
cmp
adc
dec
push
out
loopne
add
dec
mov
stc
out
scas
imul
jmp
push
inc
add
dec
roll
stos
imul
outsl
mov
movsb
cs
faddp
enter
shll
decb
iret
sbb
arpl
push
pop
inc
cs
insb
mov
xchg
ds
popa
ljmp
jne
jo
ror
icebp
sub
push
repnz
sbb
sti
cs
mov
pop
or
pop
test
loop
dec
dec
xchg
mov
dec
adc
aad
lock
adc
repz
adc
sbb
push
inc
sub
ret
cmp
pop
push
or
sbb
movsl
pop
rolb
mov
je
mov
lock
xor
push
es
pop
test
data16
sbb
pop
mov
xchg
xor
pop
sahf
lock
addr16
stos
jbe
and
fadd
adc
sbbb
les
cmp
mov
mov
lcall
adc
pop
xor
cmpsb
mov
out
cmpsb
cmp
and
shll
sub
jne
cmc
lea
lahf
xchg
fs
sub
or
or
arpl
pop
ljmp
xor
push
adc
mov
jp
mov
int3
jge
movsl
or
dec
inc
mov
xchg
fwait
sahf
dec
aad
hlt
mov
sti
pop
mov
push
dec
insb
lods
idiv
xchg
jno
call
ss
mov
icebp
notl
aas
and
mov
lods
mov
sarb
xor
sub
jge
loop
xchg
cmp
pop
mov
cmp
xchg
pop
mov
call
dec
mov
mov
es
arpl
adc
scas
push
adc
mov
jo
in
and
and
outsb
push
mov
lock
test
pop
push
imul
or
adc
push
add
mov
lock
cwtl
jo
outsl
mov
push
pop
mov
sarl
pop
out
mov
int
pop
and
sbbl
mov
push
xchg
mov
adc
and
lahf
bound
xchg
cmc
ljmp
popf
das
mull
and
xchg
in
outsb
pop
mov
out
rolb
sub
sbb
sti
sbbl
adc
cmp
shrl
test
mov
and
lea
stc
mov
movsl
and
ret
and
pop
inc
lods
jmp
movsb
cmp
fstpt
sbb
mov
xlat
rcl
fcmovnu
sbb
add
xor
cmp
lret
jg
insl
movsb
movsb
adc
lds
pop
dec
rcl
xor
xchg
jmp
sbbl
sbb
jmp
mov
stos
cmp
add
and
jb
mov
fsts
call
ds
and
lret
std
mov
jmp
movsl
rorb
sbb
in
out
or
jo
aam
push
daa
ficomps
push
mov
mov
mov
mov
sbb
push
ret
push
aad
ds
mov
and
inc
xor
pushf
sbb
or
mov
in
fisttpl
cs
add
xchg
lock
gs
scas
arpl
or
data16
fstpl
out
in
pusha
and
xor
lret
sbb
push
mov
adc
pop
ja
loopne
push
inc
push
ds
call
dec
sarl
fdivs
xchg
sbb
vpcmpeqw
mov
sub
cmp
push
jno
xor
jp
pop
fadd
jp
addr16
push
push
movsl
into
mov
out
adc
xor
in
stos
out
mov
hlt
mov
cs
outsb
jmp
cmp
shl
ljmp
inc
inc
shlb
sbb
test
xchg
push
jnp
pop
jns
dec
mov
jge
decl
pop
jge
mov
pop
lret
jl
adc
nop
xor
imulb
gs
daa
sub
xchg
dec
out
cmc
sbb
popa
test
push
jle
fsubr
scas
pop
dec
sub
js
ret
push
and
aaa
cmpsb
nop
push
push
lods
sbb
cld
or
sub
adc
mov
cld
lcall
icebp
xor
xor
leave
cmp
lahf
add
inc
pop
sub
mov
ds
mov
jmp
mov
loop
sub
jle
sub
lea
aam
add
xchg
sbb
push
mov
pop
and
mov
shrl
xor
mov
sbb
mov
cmp
push
dec
pushf
jecxz
mov
movsl
add
sbb
pop
adcb
mul
mov
movsb
inc
jo
in
pop
jle
xchg
sub
into
loopne
mov
clc
mov
push
sarb
inc
in
sub
mov
jl
cmpsb
out
enter
dec
fcmove
push
int
adc
jg
inc
das
mov
addr16
mov
jbe
mov
mov
shll
jmp
add
dec
cwtl
adc
xchg
adc
clc
sbb
pop
and
pushf
repz
stc
push
dec
cwtl
sub
mov
in
inc
cwtl
arpl
jb
push
lods
arpl
int
shlb
cmpsl
outsb
sub
sbb
aad
jp
sahf
xchg
scas
in
shlb
mov
loop
jne
mov
sbb
dec
pop
pop
jno
addr16
cmp
data16
test
adc
mov
shrl
sarl
loop
sub
pop
sbb
jnp
fwait
ljmp
sti
sub
insl
sub
or
popf
jge
inc
adc
leave
repz
mov
pop
int3
xchg
jo
xchg
jno
roll
push
jle
mov
xor
sub
aas
add
es
push
jns
jne
lret
mov
push
stos
mov
inc
mulb
adc
push
xor
jne
int3
and
pusha
push
xor
bound
iret
mov
xlat
les
leave
call
popf
repnz
pop
dec
mov
or
addr16
in
inc
in
ljmp
mov
jb
mov
cmp
xor
lods
xchg
cmc
lea
mov
mov
into
pop
pop
fcoms
sbb
mov
jl
mov
cwtl
out
test
cmp
cmp
nop
fmul
jg
imul
imul
dec
out
push
std
pop
pop
mov
fisttps
dec
push
jg
repz
aad
orl
pmulhw
scas
dec
call
adc
pop
test
fcmovnb
jne
stos
in
out
pop
movlps
lea
data16
clc
cmp
xor
cltd
cmp
mov
pop
into
jo
jecxz,pn
jno,pt
jmp
jb
loope
incb
into
clc
aaa
data16
in
push
mov
out
lret
pop
cld
or
jne
lods
mov
rolb
dec
ljmp
in
in
and
orb
xchg
arpl
popa
mov
movsl
repnz
sub
call
push
out
sub
cmp
jl
aam
ljmp
mov
sub
cld
jns
jne
inc
int3
dec
mov
mov
sbb
arpl
jle
into
inc
mov
arpl
pop
daa
pop
mov
out
faddl
std
jmp
adcl
mov
test
xor
popf
pushf
pop
inc
xchg
fiaddl
adc
adc
popa
inc
scas
push
outsb
imul
popa
int
std
inc
xchg
push
adc
in
fwait
movsl
sbb
cmp
inc
lds
cmp
inc
or
pushf
repz
testb
arpl
leave
sahf
dec
sti
stos
and
gs
jns
imul
adc
xor
push
mov
das
push
pop
mov
lea
jle
dec
daa
imul
testb
xor
arpl
subl
sbb
stc
pop
fnsaves
push
or
lret
in
xchg
ljmp
aam
mov
adc
lret
adc
push
outsl
xchg
data16
incl
adc
clc
add
or
or
mov
inc
and
test
aam
dec
clc
gs
adc
fisttpl
push
scas
ljmp
cmp
scas
jge
out
inc
xor
adc
mov
and
add
push
xchg
ficompl
adc
cltd
mov
mov
jg
sti
or
pop
out
sub
add
add
cmp
loopne
imulb
addb
imull
fcomip
push
sbb
xlat
cmp
insb
dec
lods
cmp
cmc
addr16
outsb
mov
cmpsl
mov
movsb
into
fisttps
daa
and
mov
cmovne
in
cmp
add
mov
cli
xor
xchg
loopne
sbb
roll
mov
sar
pop
mov
mov
dec
jbe
les
or
test
xor
lods
and
lods
jge
aad
lret
pop
iret
cs
sbb
and
cwtl
iret
sbb
out
xor
jp
mov
adc
mov
sbb
cmpsb
jmp
mov
sub
ret
xchg
or
mov
xchg
and
sub
push
mov
int3
leave
test
test
nop
xchg
scas
xchg
aam
pop
std
sub
movsb
mov
stos
lret
js
aas
jmp
rolb
push
xor
dec
ret
xor
mov
cs
jnp
das
dec
xorb
dec
fldenv
ret
cld
orb
xor
repz
pop
jne
mov
mov
enter
pushf
jns
les
int
sub
xor
sub
jb
or
push
fwait
dec
sbb
icebp
das
mov
xchg
mov
mov
push
jg
ficoml
sbb
mov
adc
sub
imulb
push
aad
push
push
adc
test
push
das
fs
js
rclb
jae
pop
mov
sbb
jae
and
lods
cwtl
jno
sub
add
ret
and
fdivp
loope
add
mov
out
push
test
xchg
rcrb
jns
movsl
aad
bound
aam
aas
nop
sbb
lret
xchg
or
sub
incb
mov
aad
repnz
xchg
pop
cmpl
jp
pusha
adc
xchg
test
xchg
mov
sub
mov
lcall
mov
mov
cmp
lock
dec
jns
push
insb
loopne
jo
pop
push
lahf
roll
dec
out
add
cmpxchg
cli
cmp
test
dec
mov
xor
and
loop
inc
xchg
mov
addr16
imul
jne
sbb
pop
adc
mov
jae
hlt
mov
fsubrl
mov
xchg
mov
sub
shll
dec
jnp
cmpsl
mov
jb
cltd
mov
aas
sbb
in
sarl
pop
hlt
andl
aad
jbe
mov
subl
lcall
add
lret
push
in
test
out
bound
xchg
mov
sbb
inc
insl
mov
mov
or
adc
shl
cmp
in
push
fsubl
inc
push
dec
addr16
jmp
xchg
push
out
popf
sub
dec
jl
cmp
outsl
mov
ret
outsl
sbbb
mov
imul
nop
div
dec
push
mov
out
movsl
inc
sub
add
lock
pop
ror
outsl
pushf
out
jbe
mov
pusha
mov
fidivl
bound
push
scas
subl
push
xor
pop
sbbl
das
push
xchg
cmp
lret
sysret
rcrb
jg
mov
xor
sahf
jb
cmp
aas
jg
sbb
sbb
andb
loop
cmp
mov
inc
cmc
cmpsl
xchg
pusha
icebp
popa
sarl
cmpb
repz
cs
mov
push
popf
cmp
sbb
xchg
mov
add
pusha
addb
jae
dec
imul
inc
xchg
xchg
push
mov
test
mov
in
ret
loope
mov
loope
imul
mov
cmc
mov
jg
add
jne
daa
sti
std
sub
sbb
xchg
inc
xor
mov
pop
sahf
inc
jecxz
inc
push
sub
jle
negl
xchg
test
cld
fs
lds
rorl
std
pushfw
pop
xlat
test
sbb
repz
jl
dec
cmp
xor
mov
test
and
cmpb
push
xor
dec
add
push
push
lea
jns
ss
pop
rcrl
test
stc
inc
sti
bound
sbb
mov
ja
imul
pop
sbb
xchg
mov
outsb
rcrl
pop
mov
push
in
xchg
push
jae
mov
jg
push
outsl
cmp
mov
xchg
jns
jmp
ds
sbb
jb
movsl
cmp
cmpsl
dec
outsb
push
mov
repz
jno
stc
mov
mov
ret
pop
push
pop
rcrb
mov
int
xor
arpl
pop
xchg
mov
sub
dec
jae
cmpsb
stc
cwtl
mull
mov
imul
mov
add
xor
sahf
pop
add
mov
testl
cmp
push
sbb
adc
mov
pop
out
xchg
mov
flds
mov
cmp
mov
push
cld
mov
xchg
mov
scas
cmpsb
sub
fdiv
push
add
fldz
fcomps
lahf
fsubp
cmpsl
add
add
mov
push
adcb
cs
or
movsl
cmp
cmp
repz
lret
in
nop
in
push
cmc
das
rorb
fdivs
add
jnp
xor
cmc
push
pop
or
sbb
orl
jg
fisubs
test
push
lret
cmp
fldt
in
xor
or
jl
ret
out
loopne
hlt
jbe
mov
xchg
das
jle
dec
es
sbb
int
sub
mov
sbb
ret
push
xchg
dec
xor
jmp
mov
jmp
lea
scas
mov
test
shrl
scas
jbe
shll
push
movsb
cltd
and
inc
into
ja
movsl
cmpb
fadds
push
jp
xchg
test
icebp
movsb
mov
call
adc
addr16
jb
test
cmp
sbb
mov
mov
push
test
mov
inc
sub
mov
popa
lahf
rorb
jecxz
test
fmull
ljmp
sub
notl
mov
sbb
cmc
cmpl
or
aaa
mov
repz
pop
mul
aam
push
pop
dec
push
dec
cli
sbb
mov
or
or
jo
fwait
ljmp
cs
and
xchg
scas
pop
mov
lea
adc
push
jo
jge
jne
cmp
mov
ljmp
xchg
ficomps
aad
into
push
mov
out
or
adc
cmp
inc
jo
lahf
ret
xor
and
xor
fcomip
jns
cmp
xchg
dec
lahf
jg
pop
mov
xor
arpl
loopne
repnz
addl
sbb
mov
cmpl
inc
pop
xlat
push
xor
push
out
cmp
mov
and
push
pop
movsb
add
int
aas
inc
add
rol
aam
hlt
daa
js
xchg
aad
into
adc
lea
ret
dec
fwait
sub
lods
test
mov
vunpckhps
dec
mov
out
insb
out
mov
cmp
jle
paddb
pop
inc
outsb
shlb
cmpsl
pop
inc
hlt
loop
daa
out
mov
aaa
xchg
rorb
inc
cmpsl
lock
mov
xor
xchg
pop
inc
pusha
add
fbstp
lea
fwait
out
mov
out
dec
pop
lcall
inc
push
or
ja
push
movsl
test
in
sub
jns
cwtl
cltd
push
js
dec
cmpsl
xor
and
cmp
decb
push
sti
add
sbb
and
and
adc
lds
mov
or
outsb
icebp
adc
dec
sbb
sbb
idivl
push
roll
add
push
aaa
sahf
jno
js
fdivrs
xor
jmp
pop
stc
cmpsl
push
xor
movsl
cmp
xchg
add
vandps
repnz
sub
push
incb
aaa
push
cmp
or
mov
and
adc
sub
push
xor
rorl
inc
or
add
sahf
les
jge
out
scas
jp
and
mov
sub
sub
daa
mov
and
cmp
push
xchg
sbb
xor
clc
dec
jb
lods
cmp
mov
adc
cwtl
cmpsb
arpl
mov
sbb
cmp
mov
fs
pop
cmp
jns
mov
push
sti
push
fcomps
xlat
push
daa
ljmp
fiadds
test
loop
mov
push
fldl
ret
repz
dec
sbb
cwtl
enter
imulb
push
addr16
lods
out
mov
sub
mov
repnz
push
subl
fcompl
add
push
fwait
sub
loope
test
jmp
sub
idivb
ss
mov
int3
cmpsb
dec
mov
cmp
test
xchg
jecxz
rclb
sub
dec
sarl
ret
mov
loopne
mov
or
sti
adc
pop
ret
imul
enter
ss
push
cmp
dec
and
adcb
retw
enter
insl
mov
cmp
or
sub
push
sti
mov
xchg
in
inc
push
xor
cmp
nop
adc
js
icebp
pop
stos
sbb
jl
adc
jae
push
adc
adc
addr16
mov
pop
dec
test
xor
xchg
fdivr
pop
ficoml
push
add
jecxz
test
scas
jl
out
repnz
adc
xchg
mov
icebp
mov
dec
sub
xchg
fcmovnbe
pushf
sbb
jmp
mov
icebp
mov
xchg
jmp
xor
mov
adc
fnstenv
andb
je
pop
xor
negl
adc
push
jl
icebp
cmpsb
xchg
inc
pop
es
push
push
xchg
and
cmpsl
jecxz
mov
cmpsl
mov
test
out
mov
jge
jmp
and
push
repz
mull
sub
fdivl
jmp
pop
lea
test
movsl
cmc
clc
push
clc
out
push
sbb
jp
in
xor
pop
scas
sub
sbb
stos
imul
pop
ljmp
scas
adc
cltd
test
mov
or
pop
scas
xchg
adc
mov
les
and
out
sbb
ljmp
das
inc
enter
pushf
cmpsl
cmc
in
test
shl
sahf
add
jl
js
xchg
add
mov
cmp
adc
mov
sub
hlt
cwtl
pop
mov
mov
popf
repz
mov
xor
cmp
movsb
adc
add
push
sar
pop
adc
cmp
popf
jno
inc
sarb
push
pop
les
mov
enter
inc
mov
push
sarl
sbb
pop
cmpsl
push
xlat
aas
popa
xchg
insb
pop
leave
outsl
push
xchg
inc
hlt
mov
cmp
outsl
jle
push
jecxz
nop
and
scas
ljmp
loopne
sarl
push
push
mov
fldt
ja
pop
mov
cmp
add
cmp
jns
push
and
xor
loope
sbb
xor
and
xor
sub
imul
ja
gs
into
add
dec
js
xor
push
push
dec
adc
cwtl
jo
testl
ret
daa
orl
or
mov
ss
fucomp
ljmp
mov
xor
mov
push
addr16
lahf
mov
mov
dec
arpl
lea
cmp
push
pusha
in
into
bound
es
and
lds
hlt
or
data16
pop
sbb
jnp
shl
loope
repz
inc
xor
push
out
int
jmp
das
enter
and
sbb
mov
in
xor
scas
pop
jne
repz
mov
dec
les
mov
mov
ljmp
xchg
xchg
sbb
and
mov
fwait
xchg
es
in
adc
insl
jg
std
add
loopne
mov
and
mov
sbb
mov
jmp
sbb
pushl
or
fs
addr16
cltd
insl
cmp
mov
add
roll
movsl
inc
imul
fcompl
call
push
sbb
adc
data16
popf
pusha
mov
cli
cld
ss
xchg
xchg
jecxz
stc
cmp
mov
sar
ret
arpl
inc
push
or
push
mov
sub
jle
ret
push
dec
aas
pop
cmp
loopne
pop
in
adc
xorl
cld
ret
pop
push
je
iret
call
or
insb
sti
push
jp
cmp
loope
cs
jge
adc
pop
stos
and
mov
inc
sbb
xchg
fsts
jb
push
fs
jo
sbb
sub
sub
xchg
and
push
jl
xorb
leave
mov
imul
fs
xchg
mov
les
leave
hlt
xor
cmp
in
mov
sub
sti
sub
lret
pop
dec
cmpsb
outsl
fs
jno
sbb
mov
fidivrl
in
into
dec
sar
xchg
js
mov
leave
in
lret
sbb
jnp
test
adc
mov
lret
sub
dec
aaa
out
mov
outsb
mov
jle
jbe
or
in
repz
lds
and
nop
mov
pop
daa
mov
lcall
in
fidivrl
popf
in
sub
sub
out
cmp
xchg
adc
mov
imul
in
scas
jle
sub
dec
xor
jb
push
fbstp
es
sbb
sbbb
lods
js
test
mov
jne
mov
subb
outsb
test
sbb
sbb
adc
mov
or
push
push
xor
lds
test
test
les
mov
adc
dec
xlat
ds
imul
and
cltd
pop
stos
push
andb
orl
mov
out
sbb
addr16
and
ret
push
clc
testb
movsl
pop
dec
les
push
add
bound
inc
insl
sti
xchg
leave
es
inc
adc
dec
push
push
into
out
mov
repnz
mov
mov
mov
jb
cmc
dec
cltd
push
out
gs
fwait
xor
fcompl
xor
sbb
push
pop
lods
and
fimuls
je
into
daa
hlt
sarl
aad
pusha
xor
shll
adc
adc
js
lret
sub
lahf
inc
hlt
ljmp
xchg
sub
icebp
dec
mov
mov
ja
faddl
js
mov
sahf
ss
add
xorl
pop
ds
jecxz
add
aam
addl
push
sahf
pushf
mov
pop
stos
sbb
repz
push
sub
scas
xchg
cmp
fcomps
insb
mov
sbb
mov
add
sub
xchg
in
jecxz
cmp
jge
jo
aad
fdivs
cmp
mov
das
inc
dec
daa
enter
aad
out
mov
push
push
mov
popa
sub
loope
adc
sub
xchg
mov
lcall
out
sbb
stc
popa
dec
xchg
jno
dec
out
ljmp
in
out
add
dec
xor
sub
pushf
inc
push
or
adc
inc
mov
push
data16
cld
dec
in
rcrl
std
ja
push
pop
xor
inc
and
arpl
and
adc
sbb
or
testb
jp
xor
sub
sbb
adc
push
pop
mov
data16
cmp
pop
nop
jl
jge
es
icebp
cs
sub
xorl
dec
dec
shrb
inc
mov
add
bound
shlb
jno
adc
add
mov
imul
movl
push
pop
adc
leave
mov
icebp
adc
cmc
or
and
adc
mov
lcall
fsubrs
xchg
dec
orb
sub
arpl
ljmp
fwait
push
pop
push
aam
jg
shll
ds
lock
je
push
test
neg
ss
mov
movsl
fcoms
dec
mov
add
push
in
and
ret
xchg
negb
inc
jmp
jns
gs
sbb
xor
xor
dec
dec
iret
std
xor
test
stos
pusha
leave
inc
xor
int3
sti
mov
test
test
in
pop
outsb
mov
lahf
or
push
cmp
cld
xchg
int
xchg
cs
inc
inc
dec
insb
add
pop
jo
push
andl
jl
xchg
loopne
adc
push
inc
int
mov
cltd
mov
scas
insl
mov
add
ror
cli
out
fwait
cmp
mov
xlat
or
loope
inc
mov
ljmp
std
pop
mov
mov
jnp
xor
sbb
ljmp
xor
repnz
adc
dec
nop
adc
or
jae
popf
call
xor
mov
pushf
mov
outsl
xchg
ss
inc
mov
jmp
cmp
aaa
pop
sub
lret
cmp
sbb
insl
jnp
cmp
arpl
negb
or
cmp
in
aam
dec
mov
pusha
push
dec
mov
out
daa
data16
jecxz
stos
in
and
addr16
outsb
mov
scas
popa
xchg
jb
inc
test
lods
dec
sub
xor
test
rcrl
clc
adc
leave
push
sub
decb
aas
push
xchg
gs
add
pop
cwtl
divl
sti
xlat
sbb
push
xor
xchg
push
mov
pushf
sub
mov
add
daa
add
aam
and
mov
std
sub
jbe
ds
les
inc
test
sub
pop
je
dec
mov
cmc
mov
aam
xchg
in
out
sub
pushl
jg
cmp
mov
aaa
jnp
js
aaa
enter
js
adc
test
jl
loopne
mov
jnp
push
mov
push
pop
dec
jg
xchg
pusha
jo
mov
push
mov
xchg
repnz
jbe
pop
testl
frstor
sbb
repz
mov
int
dec
sub
popa
jmp
enter
pop
push
push
mov
xchg
fnsave
pop
adc
pop
leave
pop
into
out
lea
sbb
adc
jmp
cli
orl
sub
sarb
aaa
jae
loopne
in
jg
sub
outsb
push
mov
shll
stos
push
lods
mov
dec
stos
add
fbld
adc
add
or
inc
in
jb
fisttpll
cmp
pop
xor
stos
xor
cmc
popa
into
inc
mov
js
and
jne
movsb
movsl
or
je
xor
lret
test
aam
aaa
push
fucom
inc
inc
inc
add
roll
call
mov
scas
push
push
adc
in
add
add
mov
fldl
sarl
xchg
pop
jp
clc
push
gs
mov
xchg
xor
addr16
mov
sbb
in
mov
dec
inc
lcall
xor
or
jl
xor
lock
xor
repz
mov
mov
cmpsb
in
test
andl
add
testb
inc
aam
mov
push
or
repz
xchg
inc
xor
mov
adc
pop
fs
lret
lcall
push
pop
inc
mov
mov
xchg
shr
cmp
leave
or
cld
push
imul
sbb
add
cli
inc
sbb
rcrl
push
cwtl
push
test
fldl
inc
push
pop
push
cmp
sbb
pop
arpl
clc
add
mov
popa
pop
mov
and
test
stos
mov
add
lcall
jnp
rcrl
adc
in
setns
aad
adc
sti
fcom
xchg
lahf
and
xor
sbb
shlb
mov
imul
inc
jb
mov
aas
stos
notb
push
fldl
rorl
pusha
sub
enter
pop
push
xchg
jmp
lret
mov
cmc
xchg
xor
enter
or
dec
sub
jg
push
pop
mov
leave
arpl
rol
icebp
test
xlat
ljmp
sub
outsb
mov
pop
daa
stc
inc
rclb
jecxz
and
ljmp
imul
daa
add
das
mull
rcrb
and
cltd
cmp
out
ficomps
xor
jecxz
lock
jge
xchg
out
lret
mov
lcall
cld
lahf
cmpb
or
in
sbb
in
lea
mov
movsb
sbb
push
jb
jbe
push
mov
jne
pop
lret
mov
out
addl
aad
insl
pusha
sub
jbe
inc
add
mov
pop
cmc
lds
movsb
push
cwtl
in
stos
movsb
jne
aad
aaa
loop
add
std
jl
scas
addb
pop
out
xor
push
push
push
push
cmp
and
call
sbb
cmp
or
add
cmp
sbb
inc
mov
pop
iret
xchg
aad
stos
lret
inc
adc
dec
add
pop
pop
mov
test
push
lret
push
imul
aad
jo
and
jbe
sub
and
popf
xor
neg
pop
cmp
lahf
xchg
and
shll
mov
add
dec
jno
mov
imul
inc
xchg
insl
into
inc
adc
lods
outsl
and
dec
push
jne
cli
dec
ficoms
cltd
cmp
es
cmp
adc
pop
or
loop
xchg
aas
add
pop
pushl
sbb
stos
mov
mov
inc
inc
cltd
push
push
mov
push
pop
fcomp
xchg
add
jo
and
and
lds
insb
cmp
out
pop
pop
pop
orl
outsb
and
aas
mov
mov
jmp
jbe
fsts
aad
or
sub
add
mov
mov
cli
mov
xchg
push
ret
add
ja
and
scas
jno
cmpsb
iret
xchg
divps
cmp
scas
add
mov
jge
out
fxam
hlt
cmpsb
add
mov
push
xchg
push
cli
inc
cmp
inc
subl
cmp
mov
xchg
cmp
cli
pop
xchg
mov
cmp
mov
leave
pop
mov
mov
sbb
cmp
jp
sub
jge
out
pusha
mov
dec
fs
xchg
push
ficoms
lock
adc
cmp
insb
cltd
sbb
rcll
ss
mov
add
outsl
push
xchg
lods
push
cmp
add
jbe
sahf
or
push
pop
jbe
out
sbb
orl
sub
icebp
xchg
pop
push
xor
lods
xlat
jns
test
xor
mov
jno
das
push
lea
and
ret
adc
jmp
xchg
fists
scas
push
sub
or
pop
mov
pop
in
push
xchg
mov
in
outsb
xrelease
mov
push
fcompl
sub
pop
jne
push
stos
daa
loopne
inc
pop
mov
fldl
mov
pusha
dec
mov
daa
cld
adc
in
leave
stos
test
bound
lret
mov
mov
or
push
test
and
add
inc
mov
or
aam
xchg
adc
daa
or
push
cmpsb
jne
int
cmp
lahf
pop
aam
arpl
inc
shl
test
inc
mov
lods
mov
mov
in
imul
add
xor
lods
adc
int
fldt
jno
cmpsl
movsb
scas
pusha
es
popa
hlt
scas
mov
std
hlt
outsl
lcall
mov
pusha
out
jns
fsubr
jae
inc
push
jmp
cmp
lods
lea
jae
iret
cmc
adc
pop
out
cmp
push
pusha
and
jle
jb
stos
xor
cld
out
sub
dec
insl
faddl
lods
aad
ljmp
leave
xchg
jbe
or
sarb
xor
into
inc
xchg
gs
pop
mov
in
and
xorl
or
xchg
adc
mov
push
push
add
enter
xchg
ljmp
xor
out
cmpsb
out
icebp
xchg
jl
push
ljmp
jmp
aas
orl
mov
xchg
pop
ss
nop
or
sbb
stos
inc
subb
addr16
adc
popa
dec
lea
jp
fwait
pop
sub
xchg
and
mov
scas
dec
insl
inc
mov
paddd
sbb
xchg
sub
dec
mov
lcall
stc
mov
pop
fiaddl
dec
inc
or
xchg
xor
int
sub
xchg
add
cs
mov
add
mul
popa
aaa
xchg
shll
insb
fisttps
or
add
push
add
pop
push
sub
pop
lods
add
and
lock
movsb
xchg
xor
dec
in
jne
int3
aas
ds
sub
jb
adc
sti
icebp
fdivrl
xchg
fstps
stc
mov
inc
push
lret
jb
scas
repz
mov
mov
fwait
jmp
test
push
inc
cmc
pop
repnz
jecxz
fadd
push
mov
in
mov
push
xchg
sarl
leave
mov
or
ds
movsb
cmp
or
leave
pusha
sbb
subl
mov
clc
scas
out
mov
xchg
aad
and
dec
dec
lods
xchg
into
jmp
loopne
sub
pop
les
ljmp
mov
cs
adc
cmc
push
sbb
in
adcb
xor
sahf
pop
push
popf
lods
sbb
loope
mov
jecxz
loop
fistps
jl
lods
push
adc
pop
stos
in
push
mov
adcb
inc
adc
add
out
or
sub
and
ficompl
cmp
cmp
fimuls
jae
dec
test
jp
xchg
or
movsb
xor
insb
in
dec
sub
fcoms
sbb
std
jbe
hlt
fwait
xlat
xor
rcrl
and
jb
movsl
push
sbb
lahf
mov
mov
popf
out
adc
bound
pop
push
ljmp
add
loope
cmp
sub
mov
popf
daa
addr16
mov
pop
out
jns
adc
sub
loopne
mov
or
addb
mov
stos
fwait
push
sub
lahf
pop
adc
pop
dec
je
fs
stos
jo
jno
push
faddl
ret
shll
xor
adc
add
rcrl
push
ficoms
addb
dec
stc
popa
mov
adc
mov
rclb
xor
inc
mov
sbb
subl
xchg
mov
jp
movsl
or
lret
std
sarb
add
push
cmp
xchg
mov
pop
sub
arpl
push
push
fsubrl
arpl
xor
xor
lcall
push
jg
sti
daa
cli
gs
xchg
stos
xor
jl
repz
inc
jp
jo
cmp
or
fs
loopne
pop
scas
mov
test
adc
into
pusha
mov
data16
push
lahf
dec
cld
or
scas
sbb
out
movsl
add
mov
insb
push
stos
mov
decb
push
inc
mov
sub
out
cmp
cltd
mov
inc
andb
adc
clc
pop
fistl
imul
stos
mov
sbb
pushf
popf
fists
mov
mov
fidivs
xorb
and
jo,pt
ret
xchg
adc
ret
scas
leave
test
pop
inc
test
cmpsl
xlat
pop
mul
jg
stos
bound
push
iret
ljmp
test
rcll
aas
dec
mov
pop
sbb
add
xor
insb
sub
sub
cs
add
inc
test
sub
push
and
xor
jb
ficoml
mov
ficomps
jmp
sbb
push
jns
loope
inc
mov
adc
and
fisubrl
insb
mov
mov
sub
push
xchg
jae
pop
test
fnstenv
add
mov
cwtl
mov
sti
pop
pop
pop
pop
inc
mov
xchg
imul
adc
xchg
pop
idivb
add
add
dec
dec
adc
and
arpl
mov
cmp
psubsb
scas
pop
mov
fnstsw
movd
bound
ljmp
pop
push
mov
test
pop
mov
add
mov
addr16
mov
jnp
push
dec
xor
lds
stc
cmpsb
mov
xor
adc
xchg
hlt
push
sbb
cmpsb
es
mov
push
sar
xlat
mov
clc
ret
in
and
push
call
aaa
and
faddl
in
and
mov
fisubl
mov
or
repz
dec
insb
dec
fwait
into
or
scas
aas
adc
ljmp
xchg
and
sbb
mov
cld
popf
insl
imul
pop
pop
sbb
xchg
in
scas
test
mov
or
repz
mov
clc
test
cmc
je
pop
fnstcw
pop
int3
inc
mov
jbe
test
push
xchg
xor
icebp
popf
les
dec
add
addb
push
je
xor
and
lods
loopne
btc
movsb
push
into
dec
push
add
lock
cmp
dec
loopne
dec
cld
or
test
ret
push
xor
cmp
adc
lcall
fwait
xchg
fmull
movl
push
jbe
mov
jecxz
push
and
hlt
pop
adc
cmp
mov
jns
test
mov
xchg
incl
adc
adc
dec
insb
push
mov
xchg
hlt
and
scas
xchg
test
movsb
lahf
jl
lock
fsubl
in
outsb
shl
rcr
sbb
xor
adc
push
movsb
add
fldcw
and
dec
cmpsb
dec
loopne
sarl
sbbl
in
fwait
or
xor
repz
rcl
and
fildl
aaa
cmp
jno
lahf
stc
fisttpl
aad
jg
in
mov
xchg
jo
or
in
bound
scas
and
push
xor
leave
out
shll
int
jo
pop
mov
inc
sar
cli
cmp
sbb
mov
sbb
sub
ja
sub
push
sarb
jb
idivb
popa
shl
pushf
mov
xchg
xchg
sub
and
inc
sarb
mov
ljmp
sbb
mov
int3
mov
outsb
mov
dec
lahf
pop
pusha
xor
cmp
pop
lods
pushf
dec
js
in
out
pop
jne
push
cwtl
jge
arpl
add
and
pop
or
imul
xor
pushf
push
mov
les
movsb
es
mov
sbb
dec
push
loope
jmp
or
mov
in
pop
imul
and
sub
repz
mov
mov
cmp
inc
pop
rcrl
inc
ss
cmp
scas
fldcw
inc
mov
push
push
repz
mov
pop
xchg
inc
in
fsubrs
jae
ja
cmp
cltd
loop
fdivrl
insl
mov
xor
jb
out
mov
jmp
push
xor
mov
rorb
test
enter
mov
mov
cs
push
mov
xor
fidivs
and
jb
pop
insl
or
dec
mov
lods
sub
inc
sub
into
dec
loopne
mov
push
push
shll
push
loopne
bound
mov
mov
je
fnsave
mov
mov
and
cmp
xchg
insb
gs
and
sub
nop
shrl
and
leave
lods
lahf
adc
dec
pop
inc
jmp
cmp
loop
cltd
pop
and
icebp
pop
int3
stc
aaa
add
dec
cld
sub
shl
dec
dec
lock
pop
stc
xchg
pop
ljmp
filds
mov
push
cli
pop
sbb
ret
or
fisttps
mov
adc
enter
mov
xchg
outsb
xchg
mov
mov
out
aaa
adcl
xor
pop
out
jbe
pop
pop
cmpsb
add
add
gs
bnd
mov
add
xchg
pop
sub
adc
sub
int3
mov
push
dec
rcr
cmpsl
push
pop
dec
nop
push
idivb
bound
pop
mov
cmp
xor
xchg
scas
cmp
push
stc
dec
mov
cmp
adc
in
push
sbb
and
mov
or
sub
std
dec
push
add
lods
ds
jne
sub
shrb
sub
cmp
aas
ret
add
ds
xlat
add
xchg
dec
or
outsl
sarl
sarl
push
in
add
cmpsl
orl
aad
in
xchg
pop
cmp
lcall
shr
xchg
stos
das
in
adc
xchg
and
pop
mov
pop
push
jg
xor
stc
lret
std
bound
push
mulb
xchg
adc
jns
mov
imul
imull
fadd
pop
inc
and
add
lods
js
std
and
dec
mov
scas
jmp
aam
adcb
pusha
sahf
and
push
fisttpl
push
dec
xchg
sarl
icebp
imul
jnp
mov
sbb
jbe
xor
nop
pop
add
add
add
cli
popa
dec
rclb
gs
sub
ret
cmp
mov
out
sub
mov
mov
dec
loope
cmpsl
shll
mov
push
push
repnz
push
xorl
inc
jle
sbb
dec
js
daa
xchg
jle
inc
dec
pop
inc
xor
lods
es
leave
fcomps
xchg
pop
or
dec
popa
push
xchg
cmp
inc
je
test
fadds
ja
sub
xlat
mov
adc
adc
and
lcall
dec
and
mov
mov
adc
sahf
pop
pop
imul
lock
lret
loope
in
xchg
adc
xor
out
and
movsb
call
lods
lock
pusha
add
loopne
mov
sti
fs
add
push
mov
pop
mov
insl
dec
cmp
insb
fstps
fucomip
mov
sbb
cld
aaa
push
mov
outsb
sbb
xchg
pop
lret
outsb
cmp
xor
fs
stc
jbe
xchg
jp
inc
push
sbb
xor
adc
pushf
mov
mov
mov
data16
add
cmp
xchg
popa
outsl
push
out
aaa
dec
or
jg
mov
pop
or
mov
ss
jo
sbb
lret
cmp
fnstsw
lcall
jg
sub
dec
outsb
add
je
test
scas
sub
pushf
leave
lods
ja
adc
push
fcomip
pop
cmc
jle
xor
mov
enter
xchg
in
mov
sbb
popa
mov
bound
dec
jbe
outsb
repz
xchg
lods
jge
test
popf
pusha
jmp
jmp
ficoms
dec
out
push
mov
pop
shl
or
adc
pop
jns
call
out
and
popa
push
lock
push
movsl
ja
enter
pop
dec
xor
mov
ja
sbb
adc
sbb
cmc
push
mov
xor
stc
fsubrs
jbe
cwtl
andl
and
xor
xchg
xor
lock
adc
inc
jno
pop
push
aad
adc
pop
aaa
pop
jne
test
ret
push
sahf
xchg
aaa
jae
sarl
sbb
scas
enter
adcl
mov
pop
out
leave
test
and
dec
jg
addr16
lods
push
jbe
xchg
and
jecxz
es
jnp
sbb
sub
sbb
out
aad
out
movsl
and
dec
push
mov
cmp
jne
sbb
test
and
push
inc
sub
cmp
xor
xor
test
stos
fidivl
iret
movsl
adc
adc
sbb
stc
xor
adc
popf
fsubrs
test
push
dec
cmp
and
or
les
mov
pop
cltd
or
ret
or
loope
jmp
or
push
mov
gs
fs
out
jecxz
fs
or
mov
insl
jbe
xor
and
inc
mov
mov
pop
add
jno
bound
cmc
pop
popa
andl
mov
sahf
push
clc
bnd
cs
insl
ss
push
fnsetpm(287
stos
das
xchg
inc
rcr
pop
test
mov
cs
repnz
push
ss
jp
mov
sarb
dec
je
sbb
arpl
pop
cmp
ffree
mov
mov
dec
pop
idivl
stos
ds
fisttpll
adc
div
mov
jns
out
pop
mov
or
rcll
jb
fcoms
sub
lds
jbe
in
scas
test
sti
mov
repnz
ret
dec
sub
popa
out
cmp
dec
mov
js
pop
mov
inc
push
sub
std
mov
imul
mov
ret
fstpt
in
sar
bound
int
dec
pop
mov
mov
stos
add
push
in
ljmp
mov
out
xorb
adc
out
pop
and
and
and
mov
ret
cmpsl
nop
push
inc
ucomiss
push
ja
ds
mov
jo
icebp
sbb
adc
push
xchg
lcall
cmpsb
std
sbb
jl
loop
mov
decl
and
cltd
inc
inc
pop
push
sti
add
loope
stc
xchg
les
jmp
xchg
das
xor
xor
mov
pop
inc
stos
stos
mov
inc
mov
in
push
and
arpl
ret
cmp
lret
jecxz
jp
stc
insb
mov
xorl
fnstsw
arpl
sub
mov
add
adc
xchg
mov
cmpsl
call
out
negb
in
add
cld
mov
push
push
xchg
push
cmp
data16
mov
dec
ljmp
and
cmp
testw
xor
rorb
push
es
and
cmpsl
je
cwtl
pop
inc
ret
shll
ljmp
xchg
test
bound
inc
lahf
data16
inc
roll
mov
sarl
xor
fwait
js
adc
sbb
pop
inc
xlat
loope
out
outsb
push
inc
inc
je
in
fistpl
imul
sbb
and
sbb
lock
xchg
rcr
jne
addl
cmp
and
push
mov
and
arpl
add
or
add
in
decl
in
lds
lahf
lret
xchg
mov
repz
jns
add
out
mov
stc
mov
or
mov
push
mov
clc
neg
nop
dec
jecxz
push
testl
xchg
cli
and
and
ljmp
out
pop
int
fwait
jecxz
or
adc
dec
pop
in
cs
mov
jns
jge
sahf
cmp
dec
adc
ret
jp
outsl
insb
stos
sti
push
shl
mov
inc
movsl
shll
and
jbe,pt
pop
insl
loopne
pop
data16
xor
pop
mov
jne
lock
popf
dec
inc
sbb
inc
stos
lcall
jp
aaa
icebp
cld
popl
cwtl
ss
mov
and
outsl
jbe
add
sub
mov
aam
jae
cmp
mov
xor
lahf
dec
pop
test
or
stc
inc
test
testb
push
xchg
mov
test
enter
mov
fisubrs
adc
mov
jno
mov
cmpsl
mov
mov
push
xchg
mov
cmp
shll
cld
loopne
push
aad
adc
inc
cmpsb
inc
jp
inc
lea
adc
cmp
negb
das
pop
pop
aas
aam
mov
rcl
fwait
inc
jbe
add
aaa
data16
dec
aam
inc
mov
cmpsl
icebp
mov
pop
test
push
mov
testl
xor
or
mov
fwait
movsl
mov
rcrl
popl
movsl
dec
orb
ror
add
std
rclb
jge
out
testl
pusha
addr16
pop
cld
outsb
pop
and
sbbb
xor
test
and
les
inc
jl
add
lea
jle
xchg
push
pushf
test
fbstp
loopne
aam
stc
outsb
sbb
inc
sbb
or
cmpsb
or
mov
mov
or
insl
lea
hlt
mov
mov
js,pn
add
add
sbb
pushf
mov
adc
push
popa
adc
cmp
insl
movsl
pop
subb
lds
ffreep
mov
mov
jnp
push
sti
sbb
mov
ret
xchg
lcall
ds
push
scas
lret
gs
out
xchg
dec
ljmp
push
adc
adc
inc
or
mov
xor
repnz
cmp
icebp
insb
push
inc
inc
and
xlat
lcall
cs
cmp
mov
xor
ja
pop
gs
mov
inc
lcall
mov
mov
dec
or
cmpsb
out
push
insl
xchg
sub
add
xor
cmp
mov
cmpsl
mov
adc
inc
jne
sbb
pop
jb
xor
and
sub
call
xchg
bound
add
inc
bound
mov
and
sbb
pop
mov
inc
ss
and
push
call
test
lret
clc
xor
inc
add
pop
loop
mov
out
mov
lods
mov
sti
fsubs
jne
mov
pop
jmp
sub
push
sahf
adc
cld
es
mov
pop
pop
loopne
daa
adc
push
dec
jmp
adc
xor
add
test
ljmp
jne
scas
ds
pusha
inc
sub
mov
mov
ljmp
xchg
lret
test
int
stos
fists
or
pop
aas
pop
jmp
jae
xchg
lcall
lds
in
stos
int3
decl
cmp
inc
icebp
loopne
push
fbstp
movsl
lret
loopne
mov
push
mov
push
or
add
jecxz
jb
xor
lcall
mov
mov
popf
add
fs
pusha
xor
imul
popa
fs
cltd
jnp
pop
pop
sbb
shl
sti
sbb
stos
push
add
jae
pop
add
test
add
push
out
cmp
std
mov
repz
or
popf
sbb
hlt
xor
mov
push
mov
and
cmp
cmp
fsts
mov
ss
xchg
or
xor
xor
cmp
cmp
xchg
mov
mov
movsb
test
xchg
jne
fcompl
or
or
push
mov
outsb
out
xor
lahf
mov
loop
dec
lahf
inc
daa
mov
scas
jae
push
push
sub
or
sub
popf
sti
mov
push
jl
mov
or
aas
xchg
lret
dec
or
insl
jnp
add
sbb
jbe
sub
mov
inc
mov
push
cmc
jae
repnz
dec
push
hlt
or
or
jmp
xor
pop
cmp
js
xor
repz
lea
ret
mov
sbb
inc
jge
mov
cmp
nop
out
imul
dec
jae
sbb
inc
test
daa
pop
push
sti
or
add
add
push
fcoml
ret
or
arpl
xchg
cmpsb
sub
aas
xor
ljmp
and
xlat
sub
mov
inc
pop
dec
add
sbb
cmpsl
js
xorl
lods
call
or
push
mov
xchg
adc
insb
iret
jo
mov
movsl
jae
mov
fmuls
xor
lea
js
lds
jge
push
inc
xor
push
pushf
test
outsl
or
mov
mov
call
cwtl
subb
jle
data16
mov
out
stos
fs
fists
adc
outsb
xchg
mov
rcrl
pop
cmc
nop
outsl
mov
sbb
adc
loopne
mov
imul
inc
mov
int3
sbb
iret
jge
loopnew
cli
insl
pop
lea
xor
aas
aad
test
sbb
cmp
add
test
inc
lds
sbbl
fdivrs
cltd
andl
in
inc
xor
aas
out
mov
or
jnp
push
out
test
sbb
cmc
pop
stc
mov
dec
sti
dec
xchg
cli
pop
push
and
rorb
daa
out
cmp
and
fwait
xor
inc
jecxz
push
sarl
cmp
jae
les
imul
push
stc
pop
rorb
mov
jmp
or
jo
sub
mov
sbbl
insl
xchg
repnz
mov
mov
cmpsl
dec
repnz
movsl
je
les
push
jl
in
inc
inc
insl
fdivs
xor
cmp
fstps
js
add
sbb
enter
xchg
stos
mov
sti
inc
or
mov
jg
clc
cld
ljmp
nop
adc
jl
lods
lods
sbb
push
jmp
cmp
mov
rclb
rorl
int
fs
popf
faddl
lcall
mov
testl
pop
leave
ret
mov
mov
sbb
jbe
dec
pop
test
jnp
adc
aad
call
por
pop
fnstenv
mov
pop
xor
sub
dec
data16
jge
add
loope
fwait
mov
xchg
lret
jae
mov
addb
jbe
push
jle
je
ror
cmpb
mov
daa
mov
push
inc
pop
iret
jg
lret
cltd
mov
dec
js
movsl
loopne
in
adc
sbb
and
inc
int3
jg
xor
or
lahf
lret
xchg
les
inc
adc
xor
icebp
xchg
cmp
clc
dec
mov
loop
cmp
fs
lods
test
idivb
xadd
push
test
rcl
lret
push
cltd
test
sbb
mov
push
aaa
sbb
call
xchg
sbb
call
pushf
lret
and
insb
int
test
xchg
out
sbb
mov
fadds
fistl
mov
jecxz
lds
inc
arpl
and
xchg
ljmp
jg
pop
dec
adc
pop
nop
mov
pop
icebp
out
test
or
out
aas
mov
aaa
out
imul
cmc
adc
jo
enter
mov
loop
pop
xchg
push
out
xor
pop
out
rcrl
add
insb
in
mov
xchg
jo
das
loope
mov
or
xchg
inc
in
inc
jecxz
pop
iret
add
ret
and
inc
and
push
in
cmp
call
hlt
inc
inc
lret
mov
pusha
cmc
popl
mov
push
fnstcw
push
lret
mov
dec
cmpsl
aam
into
jno
test
imul
std
int3
ret
and
adc
mov
mov
add
mov
xor
dec
cltd
adc
add
cwtl
sahf
or
ss
icebp
leave
shl
mov
inc
lret
xor
iret
mov
pusha
dec
push
inc
pop
dec
mov
jbe
inc
in
add
sub
dec
lods
enter
arpl
xchg
sbb
jp
in
stos
xorl
adc
imul
outsl
add
jne
dec
sbb
aaa
cmc
xchg
inc
test
mov
shrl
aad
sub
lahf
out
push
jno
jecxz
or
jmp
sub
add
ljmp
es
out
aaa
pop
cmc
push
divb
lea
jns
dec
lret
mov
fdivs
lock
mov
pop
clc
std
jle
mov
mov
mov
push
mov
add
add
mov
mov
insb
loopne
jae
add
cmpsl
jb
mov
bound
inc
mov
sub
xor
pop
popf
xchg
dec
push
inc
cmp
or
cwtl
lea
outsb
stc
adc
pop
movl
or
into
pop
ss
mov
xor
mov
jle
jae
sti
inc
lods
mov
and
idiv
or
adc
and
mov
aam
push
or
aam
outsb
test
rolb
xor
push
lcall
inc
repnz
mov
inc
push
dec
hlt
call
jg
mov
shl
pop
sbb
pushf
jecxz
icebp
push
daa
xor
iret
xchg
xchg
aas
adc
out
dec
and
das
nop
or
xor
dec
in
mov
testl
push
paddusb
and
inc
or
or
cmp
pushf
cmp
in
jns
mov
popf
pop
xor
pusha
fdivl
jnp,pt
push
ficoms
mov
mov
xor
addb
das
lea
mov
fisttps
cmp
push
outsb
out
es
into
jo
jae
sub
jne
adc
fmull
pop
xor
repz
out
push
adcl
mov
lock
sub
or
stos
mov
imul
push
lcall
scas
xor
xor
mov
push
int
xchg
adc
imul
mov
dec
js
pop
popf
and
mov
cli
arpl
inc
repz
xor
daa
mov
jge
dec
sbb
and
out
in
mov
pusha
mov
and
aad
jns
insb
aam
sbb
xor
sub
shll
out
sbb
test
adc
mov
xorl
mov
mov
into
lahf
lahf
add
cmp
stos
jge
ss
cmp
dec
pusha
inc
loop
fidivrl
mov
ja
and
sub
push
cmp
pop
stos
push
mov
sarl
sbb
xchg
popa
mov
sahf
mov
mov
cmp
xchg
mov
adcb
fwait
pop
mov
addb
xchg
imul
jmp
mov
std
adc
in
jb
dec
sbb
fwait
mov
jecxz
push
fsubrl
push
jns
mov
fsubrl
adc
call
jne
inc
mov
pushf
xchg
insl
lcall
fistpl
xor
pop
dec
test
js
pop
cmpsl
dec
rcrb
sub
cmc
sub
jle
and
sbb
rcrb
xor
mov
adc
fldt
rolb
and
imul
lock
bound
inc
gs
cmpsb
sarb
push
sbb
and
daa
push
inc
jbe
lahf
or
into
mov
mov
inc
cmc
push
cmp
in
or
inc
fbld
mov
push
mov
inc
shlb
or
xchg
rcr
adc
cs
ret
daa
jns
mov
and
and
jp
fisubl
outsl
push
je
sub
fwait
dec
cmp
push
orb
fimuls
mov
cmp
pop
and
pop
pop
cmp
inc
stc
jnp
xorl
daa
add
or
lret
sahf
or
jno
push
push
in
arpl
mov
cmp
dec
js
popa
add
in
sub
popa
ds
rcrb
sahf
pop
push
xlat
das
cmpsb
sbb
jle
push
mov
pop
xor
psubsb
dec
addr16
imull
aaa
push
mov
push
scas
and
sbb
iret
jne
gs
push
or
dec
pop
push
insl
and
pusha
stos
stc
fisttpll
orl
cltd
insb
jae
insl
int
lret
nop
sbb
mov
dec
and
hlt
out
adc
pcmpgtb
dec
data16
rcrb
aaa
inc
inc
jns
xchg
mulb
data16
outsl
int3
hlt
and
repnz
aam
sbb
lret
pop
rcll
hlt
jnp
pop
ss
fnstenv
jne
negl
or
les
jns
jecxz
push
lret
or
cmp
mov
and
lcall
pop
test
hlt
mov
cmp
test
xchg
dec
cmc
cmp
cmpsl
call
leave
pcmpgtd
xchg
or
mov
imul
push
xor
repz
stos
inc
les
insb
in
and
sbb
add
in
ljmp
xchg
inc
das
in
and
ret
push
sub
in
sar
jnp
sbb
int3
test
mov
arpl
stos
mov
cmp
adc
jo
int3
js
sahf
int3
aas
cmp
pusha
fdivs
fldenv
fmul
and
cmp
xor
adc
ds
xor
in
jmp
mov
fcomps
sti
ds
cmpsl
jmp
movsb
int
mov
unpcklps
push
repnz
sti
loopne
out
xor
jo
sti
leave
cmpsl
xchg
push
out
jmp
out
add
sbb
ret
and
cmp
cmpsl
loopne
add
or
lds
inc
out
loope
aaa
movsb
pop
mov
lret
mov
into
push
test
sub
push
jle
sahf
lods
cmp
cmp
pusha
and
add
inc
inc
sbb
xchg
mov
push
mov
divb
push
mov
insb
imul
out
mov
repz
roll
lea
mov
test
cmpsl
test
movsb
and
sahf
sbb
jae
repz
push
sbb
push
fdivp
std
outsb
mov
fucom
mov
imul
jecxz
xchg
ret
cltd
or
inc
sub
add
dec
ss
mov
pop
add
cmp
cwtl
or
jge
fidivrl
jmp
test
cmp
push
mov
xchg
adc
sbb
mov
inc
mov
outsb
call
adc
cmpl
lods
mov
shrb
sbb
adc
cltd
mov
cwtl
fwait
sub
ds
mov
movsb
sbb
or
push
pop
pushf
rcrl
leave
mov
jg
xor
lock
add
push
leave
push
rcrb
sbb
pop
jo
lcall
test
dec
fs
je
inc
call
inc
inc
test
mov
sub
popf
mov
arpl
push
fcmovnu
popf
add
jns
mov
sub
mov
dec
adc
lods
movsb
mov
jo
inc
mov
int
inc
cmp
cmp
jo
cmovae
sbb
xchg
mov
js
mov
aas
push
out
mov
xchg
lds
mov
imul
daa
fsubrl
test
pop
push
push
cld
lds
push
sub
inc
mov
nop
orl
sbb
and
or
cmp
add
mov
jmp
push
test
cmc
pushf
push
jmp
leave
daa
pop
dec
mov
or
sub
xchg
adc
mov
sub
adc
repz
add
int
int
pop
adc
je
mov
or
push
or
push
orb
repnz
in
jae
jmp
mov
jno
inc
xor
lea
xor
addl
add
cmp
loope
jb
es
loopne
in
out
loopne
lods
cmpsl
and
ja
mov
hlt
cmp
push
jge
or
leave
dec
and
lea
mov
and
jmp
fcmove
out
mov
mov
outsb
sar
pop
xchg
pop
mov
and
fdivrs
dec
daa
pop
lods
sbb
movsb
push
repnz
repz
or
in
adcl
je
add
dec
shl
into
xor
notl
pop
lea
fwait
sbb
dec
call
mov
mov
mov
inc
leave
xchg
data16
ja
andl
jnp
fwait
push
scas
icebp
call
ret
xor
mov
adc
mov
and
cmp
and
pop
js
repz
bound
mov
sub
fdiv
ret
xchg
mov
pop
ljmp
push
inc
or
mov
cmc
mov
jb
add
loopne
test
lods
add
roll
ficoms
daa
addl
xor
hlt
xchg
or
jb
add
sub
bound
jnp
and
call
scas
fcomip
xlat
adc
push
mov
test
jmp
pop
repnz
test
addl
call
lock
push
subb
jne
mov
stos
add
aas
xchg
cmpsl
mov
pop
jae
xor
sub
push
add
pop
loop
pop
leave
gs
adc
mov
cltd
mov
pop
into
stos
xchg
mov
add
jns
dec
cli
pop
jbe
icebp
shlb
xor
dec
mov
ficoms
xor
add
cs
mov
push
shrb
dec
xor
clc
inc
cs
loopne
fists
and
pop
jb
mov
pop
inc
inc
rcrb
repz
jno
jnp
out
ficomps
pop
mov
shlb
xchg
push
icebp
sbb
sarb
lds
shlb
fcom
shrd
icebp
gs
cmp
push
inc
cmpsl
lcall
jno
cmp
bound
fwait
sub
inc
pop
loop
fadds
jl
loope
jns
cmp
loopne,pn
xor
cmp
ret
pop
icebp
dec
popf
jnp
enter
not
jne
scas
aam
into
inc
xchg
mov
and
mulb
les
fs
add
jmp
insb
mov
imul
sti
mov
push
mov
cs
into
jne
jmp
loope
mov
leave
xchg
adc
ja
jbe
sbb
fldz
push
stos
xor
addr16
mov
or
imul
das
mov
add
cld
or
push
clc
sbb
add
fcoml
add
not
mov
ret
mov
or
movsb
pusha
fs
pushf
cmpsb
push
cmp
arpl
jb
sbb
lock
repnz
mov
popf
xor
jp
imul
dec
add
das
cmp
pop
cltd
in
loop
push
mov
dec
insl
jle
in
dec
nopl
cs
add
dec
and
adc
lret
xchg
cmp
and
sub
mov
mov
cmpsb
gs
lret
add
loopne
add
push
mov
dec
into
jecxz
cmpsl
push
mov
jns
stos
xchg
sbb
push
imul
mov
push
outsb
xchg
stc
divb
lds
mov
stos
dec
arpl
dec
pop
out
lcall
sub
pop
dec
sub
lret
add
out
and
fwait
push
stos
pop
sar
fsubs
out
pcmpgtb
gs
js
ja
data16
mov
xchg
test
jne
pop
pop
popf
sub
test
pop
lods
inc
push
movsb
fs
sub
push
push
jmp
cmp
fabs
testl
sbb
inc
aam
cmp
add
ret
cltd
jg
rcll
mov
lret
insl
test
je
push
enter
add
jecxz
xchg
in
jge
push
mov
push
stc
dec
pop
in
cmp
mov
jmp
js
push
inc
jo
cmpsl
dec
push
lods
lea
add
adc
cmovg
bound
sbb
inc
pop
mov
xchg
in
out
lock
test
fldenv
jns
adc
in
repnz
in
dec
jae
cmc
in
push
in
mov
lret
shrl
loopne
jnp
mov
dec
adc
fidivrs
xchg
push
pop
push
fstl
mov
je
cli
mov
sub
lods
cltd
insb
sarb
jnp
lret
leave
mov
sub
mov
sub
lods
je
idiv
adc
lea
dec
push
xor
sub
repnz
mov
popf
rclb
mov
movsb
pop
pushf
stc
mov
in
rorb
pop
pusha
in
adc
adc
shrl
vpshuflw
arpl
adc
pop
push
mov
mov
cli
loop
jo
sbb
data16
hlt
dec
push
pop
xorb
data16
xor
sahf
mov
adc
pop
lret
push
mov
call
xchg
leave
sbb
cmp
mov
lods
repnz
inc
adc
loope
ss
les
stos
inc
rcrb
cld
cs
or
sti
jg
jp
sub
les
dec
sub
jnp
jns
cmp
aas
push
adc
add
mov
stos
lahf
jbe,pt
jns
adc
mov
mov
lahf
add
in
jb
pop
xor
push
movsb
and
push
loop
or
in
icebp
aaa
xchg
push
xor
in
xlat
aaa
xor
sti
out
int
repnz
sbb
cmpsb
jno
les
cltd
push
test
mov
pop
adc
popf
inc
data16
push
iret
fs
mov
enter
mov
cmp
rcl
mov
in
repz
shll
arpl
xor
sub
mov
xor
sub
outsb
bswap
shlb
jnp
pusha
mov
in
cmp
orl
or
mov
outsl
test
pop
add
cmpsb
imul
mov
pand
fwait
add
cld
aas
sbb
inc
and
mov
add
sub
cmp
mov
pop
jnp
and
lods
mov
xchg
daa
movsl
clc
mov
div
rorb
stos
and
cli
cld
popf
or
aas
xchg
xor
rcl
or
mov
sub
cmpsb
rcrl
test
mov
mov
push
push
movsb
insb
iret
sub
fwait
or
jb
push
xchg
andb
cltd
mov
mov
jmp
sti
pop
subb
fiaddl
dec
shlb
sub
add
dec
jne
mov
out
sub
xchg
pop
ss
movsl
xchg
lods
and
stos
fcompl
and
fiaddl
data16
mov
test
inc
dec
shlb
mov
aam
or
cmc
rcrl
add
mov
sub
inc
lods
test
stos
je
xor
cmp
scas
out
fs
push
adc
pop
popa
add
mov
or
xchg
clc
das
daa
sub
jbe
es
and
add
dec
mov
aaa
stos
or
add
movsb
mov
aas
mov
es
inc
xchg
stc
ja
pusha
icebp
and
lahf
xor
push
pusha
push
mov
sub
xchg
xor
aas
inc
scas
mov
or
jmp
jnp
aas
sub
pop
inc
mov
fwait
aam
mov
push
fmul
cmpsb
or
nop
orb
cmp
stos
cmc
jbe
sub
popf
mov
sub
jae
jg
push
adc
arpl
testl
jle
sarl
mov
out
sub
movsl
in
or
mov
cmp
cltd
mov
push
add
push
and
popf
jo
mov
loope
add
mov
in
test
clc
pop
mov
cmp
je
cs
pop
ds
jmp
ret
ss
mov
cltd
jb
nop
in
mov
xor
inc
js
popf
iret
cmp
insl
clc
fisttps
inc
pop
aad
in
mov
iret
icebp
cmp
sar
xchg
xchg
adc
rclb
mov
add
pop
fimull
fisttps
je
int
movsb
out
shlb
dec
pop
in
sub
push
movsb
xchg
sub
or
cli
lret
pusha
cmpsb
outsb
popa
inc
scas
push
sub
je
jbe
icebp
in
mov
xchg
out
negb
push
mov
sbb
pop
or
fistpl
int
cmp
sub
test
cmpsl
imul
sbb
mov
mov
fcmovnb
notl
pushw
sahf
cli
add
cwtl
jnp
inc
pop
out
fcomps
cmc
adc
cld
mov
test
nop
imul
out
jb
lcall
scas
shll
cltd
mov
dec
mov
sub
add
cs
sub
jle
and
pop
or
add
push
lahf
subb
addr16
sub
jno
cmp
ss
push
fsin
sti
sarb
jno
cmpsl
loope
dec
push
xchg
add
pusha
lods
mov
outsb
fsubs
imul
testl
sbb
xchg
imul
sbb
xchg
ror
mov
or
dec
jbe
mov
mov
pop
jmp
xchg
scas
push
shlb
leave
and
pop
and
pop
mov
inc
call
daa
sbb
and
adc
mov
test
repnz
adc
test
sahf
lret
cmc
pop
addr16
cltd
push
inc
mov
imul
sbb
mov
and
test
or
push
ds
test
mov
jge
cld
inc
cmp
xchg
dec
sub
mov
pop
adc
rcll
xchg
ljmp
push
xchg
js
or
and
push
mov
adc
lret
mov
push
jo
adc
lret
ret
sahf
adc
push
xchg
sti
das
jp
push
data16
daa
lret
sbb
push
movsl
fdivs
push
xor
lret
insb
cmpsb
lds
cs
gs
mov
dec
das
push
adc
mov
dec
sbb
push
mov
xchg
cmpsb
push
aad
sbb
xchg
cmp
out
setb
push
ret
xchg
repz
push
push
pop
clc
xchg
jne
and
pop
outsb
dec
setae
add
and
mov
subl
dec
mov
dec
bound
push
lds
imul
nop
stos
jg
pushf
xor
into
ja
inc
iret
xor
jle
sbbl
flds
xchg
cmp
loop
pop
aad
pop
call
sbb
int
jp
jne
xlat
sar
mov
jb
das
cli
push
in
lret
pop
lahf
dec
ret
jbe
rclb
jl
and
dec
orl
pop
dec
xorb
xor
jg
lret
add
dec
das
popl
jae
push
inc
scas
xchg
jecxz
mov
movsb
cmp
mov
and
gs
mov
sbb
addb
jmp
sbb
outsl
pop
in
out
dec
push
mov
or
push
push
jo
test
sahf
add
stos
inc
cmp
mov
jg
imul
lret
sbb
mov
dec
dec
cmp
sub
and
test
cmp
fdivrs
mov
cmp
xor
out
aam
int
pop
js
mov
xchg
je
jle
clc
jbe
jo
dec
fcomps
leave
jl
sub
sbb
scas
loope
lods
jl
cwtl
rolb
adc
fadds
xchg
leave
cs
push
add
jb
sbb
out
int
cmpsl
insl
outsl
mov
jnp
outsl
mov
add
add
sbbl
in
xchg
cld
pop
mov
xor
jp
lds
imul
cwtl
addr16
pop
jmp
pop
pop
dec
mov
sahf
lret
add
jecxz
pop
push
sbb
sub
cld
jp
ficoml
cli
xchg
adc
push
adc
in
negl
fsubrs
testb
arpl
shrl
out
and
sub
mov
aam
enter
jo
pop
rcll
xchg
aam
adc
insl
insb
fsubl
mov
pop
jnp
and
mov
mov
mov
jb
scas
or
xlat
std
add
or
lds
cmpsb
sbb
les
inc
lds
fsts
dec
pop
xchg
push
xor
mov
jle
push
ret
andb
inc
xor
mov
sbbb
mov
ficompl
in
sub
mov
push
or
lods
jo
push
fsubrl
int3
add
inc
push
sbb
cmp
or
pop
pop
mov
pop
pop
add
inc
fnsave
rorl
ds
sbb
pop
in
mov
fildll
xor
jo
mov
les
ljmp
cmp
loopne
ss
mov
outsb
jno
andps
ljmp
adc
jnp
adc
push
pop
dec
mov
pop
jne
dec
sub
push
add
fsubrs
and
xchg
xchg
adc
push
shrb
inc
lcall
cltd
rol
or
jno
add
push
ss
xchg
jmp
inc
pushf
xor
test
or
or
mov
std
jae
outsb
and
decl
nop
mov
pop
sub
cmpsl
rclb
xor
js
adc
mov
mov
mov
mov
enter
jnp
xchg
jge
test
mov
es
into
dec
mov
in
or
sarb
pop
mov
test
adc
repz
cmp
cmpsb
imul
fxam
add
sub
lock
push
icebp
arpl
pop
imul
iret
add
ljmp
aas
mov
xchg
jae
mov
in
jl
push
movsb
movsb
sub
xchg
mov
jl
push
inc
mov
aad
hlt
idivl
fsubrl
adc
repz
repz
push
ret
jno
dec
sarl
out
adc
movsl
das
adc
and
pop
int3
xchg
mov
jo
push
dec
add
xchg
enter
lds
cmp
mov
pop
icebp
push
xor
icebp
fildll
out
inc
sbb
jb
hlt
and
xchg
mov
add
out
mov
pop
sti
inc
mov
std
xchg
and
push
outsl
int3
rclb
arpl
push
shrl
ficomps
idivb
mov
in
js
dec
mov
insl
hlt
popf
test
shr
pop
or
leave
xchg
icebp
sub
jle
repz
inc
jmp
fidivrs
js
pop
pop
inc
jb
pop
or
cmpsb
faddl
insb
int3
popa
xor
and
pop
in
jg
aas
xor
subb
sbb
std
into
lcall
and
mov
fimull
shrb
jmpw
or
and
stc
das
mov
cs
cmc
push
pop
and
cmp
in
out
mov
lcall
bound
imul
out
int3
push
inc
flds
push
xor
cltd
mov
mov
cmp
pop
jns
loop
fbld
xor
push
mov
hlt
fdivrl
push
inc
mov
sub
in
cli
or
cmp
xlat
movsb
lea
push
push
dec
shll
jae
adc
push
and
fs
lret
lods
jae
mov
sub
push
data16
pop
jmp
imul
adc
loopne
aaa
or
jl
mov
pop
out
push
ss
loopne
dec
inc
mov
dec
je
pop
test
mov
inc
aam
icebp
jl
pop
cli
or
lock
cmpsl
and
or
xor
popa
fstpt
jno
lock
xlat
daa
sbbl
mov
out
mov
xchg
mov
scas
pusha
push
stc
mov
xchg
sbb
xor
and
clts
movl
dec
in
imul
pusha
arpl
cmpsb
scas
loopne
xor
xor
mov
stos
pop
jl
femms
pop
insb
pushf
orl
cs
aam
leave
xor
push
pop
ret
lods
jle
rcrb
or
inc
mov
jne
out
cld
lea
cs
imul
stos
and
in
add
imul
cltd
sub
cs
ja
jge
xchg
lods
adc
adc
sub
pusha
or
jg
xchg
je
stc
sub
fwait
cltd
push
dec
sbb
sub
test
xchg
loope
cltd
cli
mov
adc
or
fsts
and
or
jne
xchg
xor
cli
jmp
mov
sub
mov
jne
adc
sub
and
aas
sub
lea
popa
loop
adc
dec
push
cmpsb
adc
push
jns
rorb
out
inc
sbb
push
dec
lea
mov
ret
mov
xchg
push
pusha
out
aad
rcrl
rorb
stc
stos
lods
lods
test
mov
stos
mov
ret
je
repz
idiv
inc
xchg
add
xor
jno
xor
inc
mov
fidivs
repnz
stos
and
test
mov
push
mov
shrl
or
ljmp
xor
xchg
and
je
xor
frstor
add
shl
push
movsb
mov
xor
pop
cmpsb
subl
jae
jnp
lcall
mov
pop
sub
lock
scas
in
imul
js
cmc
test
in
aam
mov
mov
repz
push
loop
shll
mov
push
pushf
push
ficompl
adc
pusha
aaa
dec
and
xchg
insl
clc
xchg
repnz
mov
mov
pop
sbb
pop
dec
loope
cmp
and
add
push
mov
xchg
inc
loope
iret
loope
xor
test
adc
or
sub
in
and
xchg
cli
popl
xchg
and
adc
mov
dec
sti
dec
adc
test
xchg
xchg
lods
or
nop
xchg
aam
int
push
int3
in
adc
int3
pop
daa
shl
push
ss
dec
out
xor
mov
add
xorl
add
mov
aaa
scas
scas
aaa
pop
imul
add
sti
or
or
cmp
pop
lcall
punpckhbw
dec
mov
pushf
pop
int
adc
std
push
aas
out
inc
or
inc
adc
sub
sub
jnp
add
les
fistl
inc
push
ss
testl
jo
mov
cmpsl
lock
mov
cs
xchg
xor
pop
xchg
jo
jp
sbb
jnp
flds
icebp
mov
jl
sahf
les
mov
fcomip
pushf
notl
xor
sbb
jge
mov
subl
data16
data16
add
xchg
sub
leave
adc
xor
test
ds
subl
lock
repz
sbb
loop
mov
jge
scas
ja
inc
add
mov
data16
pop
mov
rcll
and
rcl
in
pop
add
jmp
lret
iret
loop
pop
dec
and
js
jnp
sub
icebp
jo
shlb
mov
lds
movsl
jecxz
inc
mov
mov
hlt
xor
jp
and
in
out
insb
inc
das
fistpl
jmp
leave
xchg
sub
out
xchg
aam
or
push
mov
xor
sti
daa
push
adc
aas
outsb
dec
xchg
sub
add
mov
mov
mov
mov
inc
adc
adc
pop
in
scas
push
mov
dec
xor
or
jno
or
arpl
out
inc
inc
pcmpgtd
dec
out
test
mov
pop
pop
fsts
gs
add
push
pop
in
imul
outsb
jp
cmc
mov
inc
loopne
leave
cwtl
das
inc
decb
add
pop
push
adc
push
mov
pop
rcl
mov
pop
into
dec
push
mov
testb
rorb
mov
fmull
jnp
sub
mov
add
neg
lcall
and
mov
scas
xchg
or
xor
shr
mov
inc
adc
xlat
jno
lds
notl
fcomp
mov
jmp
gs
add
xchg
test
js
sbb
add
cs
sub
sub
in
and
pop
mov
xor
mov
js
jbe
mov
jns
mov
outsb
daa
dec
sahf
jns
sub
das
inc
lea
adc
ds
push
loop
cmpsb
mov
add
scas
dec
loope
ljmp
mov
mov
rcrl
lods
inc
in
pop
stc
inc
xchg
cmp
add
pop
dec
and
jmp
stos
mov
leave
mov
clc
test
pop
mov
cmp
push
fdivrl
aam
pusha
mov
jecxz
das
arpl
cmp
mov
dec
push
lods
xlat
fimull
or
push
into
mul
mov
push
xchg
test
push
inc
in
jae
dec
push
jecxz
ja
jae
inc
cmp
mov
pusha
push
add
iret
test
mov
or
mov
daa
test
add
mov
jge
bound
imul
dec
mov
mov
xlat
push
mov
lret
lret
mov
sub
add
mov
mov
es
dec
sahf
mov
xchg
test
hlt
mov
add
aas
fwait
or
push
add
adc
loope
sbb
jge
pop
lea
insl
fs
cmpsl
bound
sahf
repz
popf
xlat
leave
dec
jne
mov
inc
stos
ja
add
adc
dec
push
adc
pop
xor
enter
or
test
inc
jle
or
ret
and
inc
iret
shl
lret
imul
sub
scas
ds
call
pop
pop
pop
add
add
out
sub
xchg
ss
lahf
sub
leave
cltd
sbb
ficoms
adc
mov
xchg
shlb
jl
jl
das
dec
rclb
scas
dec
sbb
arpl
mov
pop
push
or
push
pop
cmp
xchg
dec
out
in
push
and
addb
jmp
push
and
adc
jp
mov
mov
xor
in
mov
dec
xor
xor
mov
jae
movsl
pop
mov
jmp
dec
incb
daa
stc
xchg
sub
pusha
mov
ds
jge
inc
mov
or
sub
fisttpl
and
and
mov
mov
cmpb
and
and
gs
jb
enter
pop
mov
xchg
push
cmp
clc
mov
mov
loope
test
fs
add
xlat
mov
test
dec
cmc
cltd
cmp
push
fldt
push
xor
lock
adc
sbb
and
fs
insl
dec
jmp
outsb
or
mov
sub
xor
xchg
aam
add
sbb
addr16
jmp
add
xorb
andl
cltd
inc
mov
mov
out
adc
test
aad
jbe
pop
inc
xchg
scas
into
dec
adc
outsb
push
dec
scas
dec
mov
mov
pop
lahf
repz
mov
scas
dec
jg
xor
lds
lahf
lcall
dec
pop
mov
push
inc
stos
ds
or
and
fsubr
in
mov
jne
pusha
add
dec
in
mov
je
ja
pushf
aaa
pop
push
adc
cli
int
mov
dec
scas
repnz
jecxz
into
mov
and
jne
xchg
jae
inc
cltd
or
or
pminsw
adc
fiadds
out
cmp
mov
sbb
das
add
jo
jb
jae
dec
sahf
jle
cmp
cmp
je
test
jecxz
nop
mov
dec
fdivl
sub
xchg
add
mov
je
jp
insl
es
dec
fidivl
add
cli
imul
clc
and
add
mov
and
in
test
push
mul
ja
jmp
mov
stos
out
cmc
push
outsb
dec
or
or
fisttps
sbb
test
mov
btc
push
iret
cmpsb
outsb
subl
fcomps
pop
inc
into
inc
mov
aad
in
and
mov
push
movsb
push
into
or
loope
sbb
push
frstor
cwtl
adc
rcrb
pop
dec
in
jbe
js
inc
xchg
notl
je
mov
inc
inc
test
mov
ficoml
pop
loopne
or
movsb
ja
pop
jle
jo
jp
and
push
jo
inc
dec
fbld
xchg
loopne
inc
xchg
loopne
insb
into
jge
xorb
stc
mov
into
call
add
stc
xchg
sbb
ret
in
mov
or
aas
add
push
mov
les
in
pop
xlat
pop
push
pop
adc
ljmp
sbb
movsl
lcall
cltd
repnz
ljmp
stos
sbb
inc
jne
push
adc
pusha
clc
lea
cmp
mov
mov
hlt
mov
push
jbe
dec
mov
push
cmp
sub
xchg
ss
in
aad
cmp
int
out
test
movsb
jno
incl
xchg
pop
insl
cmp
out
sub
aas
or
mov
inc
or
test
lcall
pop
xchg
pop
ja
gs
jns
or
es
lahf
insl
fs
loop
out
mov
adc
sub
or
inc
imul
sub
cld
sti
xchg
pop
jo
stc
data16
or
inc
mov
or
mov
push
mov
test
mov
pop
xor
sbb
icebp
inc
rclb
mov
stc
dec
mov
mov
mov
fistl
jp
lods
cs
sbb
out
push
insb
dec
test
mov
or
push
das
rclb
gs
mov
mov
adc
lcall
aad
data16
arpl
ss
aas
dec
movsl
inc
pop
int3
pop
test
jp
fwait
mov
std
mov
sub
mov
cmp
jg
lds
test
lea
mov
lods
push
sbbb
and
adc
lea
pop
push
std
ret
mov
xchg
or
mov
jnp
cmp
outsb
cltd
xor
clc
nop
jle
leave
cmp
and
jae
das
aam
mov
shlb
sbb
jecxz
data16
inc
and
mov
xchg
xor
sub
mov
and
xor
jge
out
pop
not
std
mov
mov
push
ficoml
sti
faddl
push
vmovups
and
jmp
movsl
inc
sub
cs
in
pushf
jb
mov
stos
mul
lock
sbbb
dec
push
orb
movsl
or
inc
enter
jge
adc
aam
inc
adc
cwtl
scas
jo
rorb
lret
pop
mov
repnz
fsubrs
ret
adc
and
cltd
cmc
ja
and
cmp
out
rcrb
or
cld
lea
jnp
mov
inc
sti
and
lods
lahf
or
inc
dec
xor
mov
cmp
mov
xor
push
cwtl
je
push
sbb
xchg
shrl
mov
adc
mov
je
add
dec
out
pushf
and
test
xor
aam
dec
dec
mov
dec
jecxz
jecxz
adcb
mov
lea
push
imulb
mov
xchg
sahf
xchg
cli
test
fistpll
cwtl
jmp
and
push
jno
sub
pushl
xor
stc
dec
data16
mov
xchg
addr16
xlat
adc
idivb
xchg
pop
daa
jge
jle
daa
cmc
je
mov
xor
inc
repz
cld
dec
mov
mov
xchg
xchg
mov
mov
fwait
pop
mov
jecxz
testb
in
cwtl
pushf
sub
push
test
sbb
mov
mov
shrl
les
pop
loopne
mov
js
xchg
pop
inc
push
std
pop
out
test
je
scas
mov
ja
ljmp
adc
cmp
add
xlat
adcb
jb
mov
or
movsb
test
sbb
into
sub
pop
push
aas
push
cmp
sbb
int
inc
arpl
xor
sbb
inc
mov
adc
fdivrl
int
pop
sub
jns
push
fs
jb
inc
and
leave
test
xchg
jge
and
push
sub
add
nop
dec
lcall
aam
inc
mov
mov
jb
sti
pop
cmp
nop
fimuls
out
dec
sti
int
sbb
sbb
or
int
lods
mov
push
mov
mov
ret
shll
xor
mov
ror
xor
adc
sub
add
je
sarb
mov
mov
clc
dec
push
lahf
pop
rcrl
pop
xorb
dec
push
inc
cmpsb
sub
mov
insl
dec
sti
push
add
icebp
repz
push
jae
lahf
push
pop
dec
cmp
lcall
mov
sbb
lret
cmpsl
jnp
add
lods
mov
outsb
imul
dec
xchg
lea
rorb
imul
xchg
sbb
pop
in
sub
jecxz
ljmp
xchg
sbb
add
dec
dec
or
dec
push
xor
xchg
push
idivb
loop
mov
mov
adc
jno
adc
nop
push
in
ja
cmp
int3
dec
sbbb
mov
fnstenv
mov
or
sub
sbbb
jb
test
or
fistpll
insb
add
lcall
gs
xor
inc
jnp
pop
mov
leave
andb
les
rcll
dec
repnz
inc
adc
cmp
inc
stc
js
mov
pop
dec
add
push
cmp
dec
sub
fidivrl
jo
pop
and
fs
or
cmp
jecxz
les
ja
pop
jbe
lcall
leave
xchg
inc
jb
push
std
imul
or
bound
cmp
mov
add
sbb
incl
sub
sub
mov
adc
or
dec
movsb
mov
sub
outsl
mov
sbb
push
cmp
cmp
cmp
jne
jnp
cmpsb
shlb
xor
mov
jno
dec
cmpl
cltd
out
ss
xchg
into
loop
jle
mov
insl
repnz
xchg
xlat
push
mov
mov
sub
imul
adc
xchg
mov
sbb
jno
lea
aam
add
or
pop
scas
pop
jg
push
pop
xchg
int
lds
cmp
mov
imul
and
xchg
jo
inc
popa
and
push
mov
mov
movsl
lds
cmp
mov
pushf
jmp
xor
push
nop
int3
xchg
mov
pop
lahf
adc
adc
add
loope
dec
jp
test
mov
sub
fcomps
movsb
inc
lock
or
dec
pop
dec
pop
pop
jbe
sub
jge
inc
mov
adc
test
mov
dec
hlt
or
jg
sahf
mul
push
iret
push
in
sub
cs
dec
push
scas
jno
sahf
xor
ds
mov
pop
fdivs
int3
mov
aad
loopne
into
clc
cmp
das
xor
stos
dec
jo
xchg
push
insl
sbbb
sub
pusha
call
loop
inc
mov
adc
std
mov
jg
xchg
ret
in
adc
cmpsb
in
cmp
push
out
mov
outsb
cwtl
mov
or
out
pop
fcomi
aaa
hlt
pop
adcl
pop
xchg
xor
ja
nop
int
bound
sbb
aaa
loopne
jb
sahf
sub
mov
pop
or
sub
aad
mov
fsubrs
push
scas
cmp
jne
daa
clc
mov
imul
pop
xor
imul
data16
push
fmulp
sub
mov
and
fwait
or
mov
jns
loope
pop
and
decb
cmp
call
or
fstps
pop
test
ljmp
jge
out
dec
lods
popa
dec
inc
and
aaa
mov
into
sub
pop
lahf
fwait
inc
cld
mov
std
or
xchg
popf
push
jo
cmp
test
cwtl
loope
insl
or
lret
mov
roll
dec
sub
push
jge
jg
lds
inc
or
fnstsw
mov
cmp
adc
into
and
aas
mov
add
test
in
fstpt
jl
lahf
mov
loope
cmp
sub
sub
mov
inc
cmc
rol
or
xchg
mov
gs
das
aad
fs
push
jp
outsb
sbb
push
mov
xchg
jne
jmp
or
and
mov
xor
scas
jbe
mov
adc
dec
sub
dec
popf
das
dec
mov
push
inc
xchg
pop
push
dec
xchg
test
inc
xchg
out
sbb
sbb
add
lret
out
scas
outsl
jnp
shrl
rcrl
stos
mov
cld
lds
ss
ret
xor
out
push
fisttpll
pop
dec
xor
test
jmp
or
push
out
out
add
mov
add
xchg
movsb
and
into
xchg
add
fildl
stc
xchg
dec
or
imul
popa
sub
cld
mov
or
xor
ljmp
adc
dec
cmp
or
in
loope
xchg
pop
mov
test
hlt
mov
into
add
mov
push
shll
incb
xor
rorl
dec
arpl
in
xchg
and
aaa
sbb
mov
xor
xchg
rcll
fs
popf
mov
inc
xor
mov
test
cs
insl
push
sarl
idivb
mov
cmp
mov
fbld
cmp
aaa
rcrl
or
out
and
sbb
push
mov
outsb
js
cmpsb
pushf
cmp
adc
jp
cmp
adc
clc
shlb
adc
je
ret
movsb
popa
int
pop
rorb
les
mov
xor
das
add
cltd
sbb
mov
shrb
jge
xorl
mov
scas
mov
sarl
test
stos
fidivl
lret
push
mov
cmp
and
xchg
push
cwtl
movsl
popa
and
dec
clc
pushw
jg
adc
pop
sahf
ret
xchg
pop
push
outsb
pop
inc
hlt
push
shrb
mov
sub
and
aam
icebp
pop
push
int
out
dec
sub
pop
je
pop
jno
cli
and
sbb
addb
lcall
fidivs
cli
cmp
test
sbb
add
int3
mov
jge
sbb
imul
cmc
fs
pop
sahf
xchg
push
bnd
shrl
push
dec
push
or
mov
jle
jb
xchg
and
mov
aad
add
incl
cs
xchg
mov
fwait
mov
dec
push
jmp
sbb
xchg
mov
jge
inc
pushl
mov
sub
mov
xchg
mov
push
inc
dec
sub
sub
push
arpl
inc
adc
rorb
jmp
xchg
or
clc
ljmp
lcall
out
addr16
add
in
add
add
leave
sbb
imul
sbb
or
jmp
mov
and
and
push
lods
and
push
arpl
mov
sti
push
shrb
adc
gs
jl
sti
outsl
fucomi
dec
mov
aam
push
comiss
xlat
loopne
jns
es
sbb
outsb
mov
ljmp
pop
pop
mov
jbe
les
add
aad
add
cmc
icebp
pop
dec
es
scas
fs
out
pop
xchg
push
dec
ss
call
jle
inc
dec
imul
test
cmpb
sbb
je
pop
fldenv
das
pop
lock
sbbl
divps
sbb
std
or
pop
iret
out
ret
cmc
push
adc
sti
jno
in
out
or
rclb
pop
repz
in
jb
scas
pop
fsubrs
sbb
mov
lea
or
lret
jmp
fstps
cld
mov
int3
adc
mov
movsl
pop
loopne
movsl
sub
xchg
bound
xchg
out
sub
mov
xor
insb
test
lahf
mov
xchg
je
out
mov
std
or
cmovne
dec
push
xor
enter
mov
out
and
mov
pop
out
mov
cltd
fwait
es
loop
movsb
mov
mov
or
ret
sub
or
mov
mov
adc
mov
rcl
out
es
rcll
mov
mov
push
mov
nop
dec
pop
sbb
xor
cwtl
sbb
xchg
push
mov
pop
adc
adc
mov
push
sub
mov
push
sub
orl
cmpl
pushf
hlt
jge
xor
inc
and
imul
xchg
lahf
iret
sbb
nop
lcall
ljmp
push
idivl
jge
cmp
dec
cmpsl
imulb
cwtl
inc
arpl
mov
enter
jmp
push
xor
and
ret
ret
add
imul
test
mov
mov
cs
fptan
cltd
mov
scas
fstl
jg
insl
xor
mov
cmp
inc
dec
imul
into
shrl
mov
xor
inc
pop
xlat
jge
add
sbb
clc
leave
bound
push
test
dec
pop
lcall
sbb
jns
aas
cmp
lods
adcb
sbb
push
mov
mov
sbb
repz
inc
daa
xlat
cmp
jbe
and
repz
mov
insb
or
xchg
negl
fsubl
add
inc
divl
stos
xor
or
inc
aaa
imul
mov
push
sbb
aam
negl
movsl
repz
decl
inc
sti
negl
les
fnstenv
cmp
push
push
xor
mov
adc
enter
dec
or
shl
add
imul
cmp
jge
adc
imul
bnd
clc
inc
cmpsb
dec
inc
xor
mov
fadd
imul
sti
adc
outsl
cmpsl
or
divl
cld
sub
sbb
js
pop
in
adc
repz
test
insl
std
pop
inc
jnp
mov
mov
outsl
mov
xchg
cltd
pop
imul
xchg
mov
cmc
insl
jl
aaa
outsl
andb
pop
notb
inc
scas
sub
les
mov
push
loop
cmc
faddp
out
mov
dec
lret
mov
jle
adc
jle
lcall
push
repnz
mov
adc
push
pop
push
mov
or
shl
add
arpl
inc
pop
es
cld
push
jns
fcom
cmp
xor
lods
mov
loope
mov
jle
or
sub
orb
jp
mov
push
into
dec
sbb
cmpsb
lods
jbe
adc
aad
and
sbb
xor
jge
sub
pop
js
lret
mov
cmp
inc
fsubr
cmc
pop
stos
mov
adc
sbb
jnp
adc
inc
and
stc
jb
sbb
push
mov
or
xchg
xchg
jb
and
mov
inc
add
hlt
inc
jmp
xorb
aas
fwait
ret
jmp
xorb
jg
lcall
sub
ss
ja
and
mov
sbb
cwtl
dec
lock
sbb
fsubrs
inc
and
dec
sarb
imul
divb
aad
adc
out
out
mov
mov
jp
pop
shr
cmpl
lea
out
push
adc
and
dec
pop
xchg
push
enter
sub
movsl
sub
int3
or
inc
dec
lods
mov
or
gs
mov
imul
jg
fistpl
sbb
mov
pop
cmpsb
xor
cs
dec
fwait
sub
pop
mov
adc
sti
clc
dec
pushf
rcll
and
test
test
loopne
cmpsl
or
scas
loope
push
mov
fwait
jbe
fisttps
xchg
fstps
mov
das
lds
cmp
scas
pop
pop
aas
in
rcll
pop
adc
jno
fcomp
xor
cwtl
xchg
hlt
and
xchg
scas
es
adc
cmp
fcompl
xor
cmp
insl
mov
add
mov
dec
xor
mov
cmp
sbb
add
aam
jo
loop
clc
xor
dec
pop
mov
aad
jmp
test
mov
jae
mov
mov
ds
arpl
xor
bswap
std
xchg
inc
add
mov
pop
fcoms
cmp
popa
push
cmp
pop
xchg
push
inc
ret
mov
inc
jae
imul
rol
push
faddl
std
out
arpl
es
dec
sahf
cmp
jle
out
cmpsb
xchg
int
mov
es
cwtl
icebp
jno
sub
mov
mov
or
call
sub
std
cmpsb
mov
test
pop
imul
cmpsb
daa
mov
bound
popa
mov
inc
jge
adc
push
push
insl
mov
out
fsubrp
mov
sbb
cmpsl
mov
push
cwtl
gs
inc
test
xchg
and
jecxz
cmp
dec
fcomip
stc
lods
rorb
pop
fcompl
add
jle
flds
scas
pop
xchg
dec
cltd
xor
xchg
out
fidivs
sub
int
out
mov
jg
mov
cmp
imul
or
out
jecxz
and
call
push
xorl
ret
fld
mov
pop
aas
enter
jge
push
loop
pop
outsb
insb
inc
or
or
scas
popf
jge
mov
push
mov
and
lock
ficomps
out
int3
fnstcw
insl
push
pop
in
sbb
rol
stos
ljmp
cld
les
xor
rcll
fwait
or
mov
dec
cmp
dec
jmp
pop
lock
mov
inc
sbb
mov
rcrb
sbb
je
or
pusha
lea
inc
or
cwtl
lods
mov
mov
add
push
pop
imul
push
nop
xor
mov
dec
pop
cld
and
aaa
cmp
dec
stos
mov
cmpsb
adc
and
cli
movsl
aas
outsb
mov
mov
lret
data16
or
mov
into
pop
mov
aad
sub
leave
xlat
ret
or
xchg
lret
jge
pop
call
divb
and
mov
mov
ficomps
push
hlt
mov
mov
push
xor
movsb
ror
and
pop
lret
lods
pushf
or
xor
in
enter
test
jb
push
xchg
lock
and
sub
pop
pop
psrlq
cmp
mov
mov
push
push
orb
jne
sub
add
xor
call
jg
outsl
lcall
movsb
cmp
xchg
and
dec
mov
push
add
xchg
into
out
push
test
dec
fiadds
int
pop
mov
mov
push
ror
xchg
clc
mov
in
stos
pushf
ret
jp
cmp
jae
mov
fidivrs
jne
dec
or
dec
insb
mov
push
jl,pn
push
roll
shll
push
scas
inc
adc
jns
in
adc
ficoms
enter
lods
inc
jb
add
subb
lret
decb
jp
data16
push
mov
pop
ret
scas
lret
xchg
lret
shlb
jne
into
dec
jl
mov
cli
test
mov
jge
jmp
push
or
xchg
inc
divl
cwtl
js
ljmp
push
dec
adc
pop
add
xchg
and
fs
sub
mov
jo
jg
mov
inc
cmpsb
test
shll
arpl
and
cmpsb
jge
bound
int
aas
xchg
sub
aam
cld
xor
cld
test
lret
fcomip
adc
in
aaa
adc
xor
sub
ds
mov
popa
mov
xchg
cwtl
movsl
mov
mov
ret
inc
xchg
dec
xchg
jns
jmp
lods
cltd
xchg
inc
outsl
xchg
dec
inc
pusha
cmpsl
cmp
push
pop
dec
fcoml
cmpsl
fsubrl
ss
loopne
sub
subl
cmpsb
dec
cmp
xchg
dec
nop
aaa
loopne
inc
fs
fiadds
adc
mov
test
xor
stos
push
xchg
imull
sti
inc
insb
push
popa
das
push
add
ret
imul
repnz
stos
insb
mov
add
gs
sbb
dec
sbb
jbe
or
in
in
xchg
loope
jnp
xchg
xor
testb
xchg
into
pop
cmpsl
add
jae
ja
sub
lret
sarl
sub
iret
jl
adc
mov
xor
adc
adc
lret
cmp
lret
adc
push
or
inc
or
and
imul
out
sbb
adc
xlat
incl
leave
divl
test
mov
push
lock
pop
mov
cmc
ret
bnd
and
out
movsl
jg
sbb
outsl
adc
cmpsl
and
sbb
xor
and
and
insb
mov
scas
mov
outsl
mov
cmp
shrl
andb
orl
mov
mov
push
in
add
testl
mov
fadd
rcrl
xchg
adc
in
inc
out
pop
loope
pusha
push
jbe
stc
gs
pop
push
aaa
inc
fidivl
js
insl
xchg
aaa
pop
dec
mov
mov
xorl
mov
mov
inc
lahf
xchg
jns
popf
inc
push
sub
test
dec
call
mov
testl
mov
mov
lods
inc
mov
movsl
rcrb
inc
or
dec
mov
fstpt
mov
cmp
mov
sbb
fnstcw
rolb
dec
jle
and
and
lea
pushf
or
daa
inc
xchg
or
push
iret
loope
es
dec
mov
lods
aam
jle
xchg
push
call
fcoml
mov
mov
mov
lea
mov
mov
mov
jg
pop
fcmovu
insb
sub
sti
dec
mov
aas
imul
adc
jge
inc
jg
lock
test
pop
push
mov
out
xlat
mov
push
mov
mov
ss
xchg
shrl
xchg
mov
insb
jb
cwtl
je
gs
out
stc
or
imul
lcall
jno
fwait
xor
lahf
rorb
pop
inc
ja
arpl
pop
popf
or
inc
or
rclb
xchg
sub
shrb
pop
adc
fsubl
mov
mov
mov
sti
jge
push
xchg
mull
xchg
adc
cmp
incl
repz
sub
xchg
pop
push
outsl
jmp
inc
loope
arpl
out
repz
loopne
pop
stos
add
push
call
shrl
sbb
pop
jg
cmpsb
jmp
gs
fld
in
inc
cmc
dec
shr
popf
mov
mov
pop
or
imul
not
mov
mov
call
addr16
or
mov
jb
imull
pop
test
lret
pushf
sbb
add
int3
xor
inc
jmp
loopne
int
jmp
push
inc
out
sbb
stos
adc
ret
xchg
dec
inc
jb
das
daa
and
out
pusha
mov
xor
jmp
inc
inc
inc
xchg
nop
hlt
jge
lea
xchg
dec
jl
in
mov
jb
adc
arpl
imul
in
shl
movl
into
mov
fnsave
or
mov
ss
fsubrs
cwtl
xchg
lods
inc
movsb
push
in
mov
push
pop
rcrl
pop
test
mov
cmc
adc
push
cwtl
push
jmp
jg
dec
imul
jmp
mov
mov
cltd
push
leave
jge
pop
jmp
adc
inc
test
xchg
add
add
inc
rcr
into
sub
mov
or
xor
lods
dec
pop
ja
sub
push
xchg
jle
hlt
sbb
ss
dec
lahf
sbb
xor
jno
ja
sub
dec
lahf
pop
dec
js
push
xchg
lret
inc
pop
push
mov
clc
fildl
js
in
push
lds
mov
ljmp
sahf
nop
icebp
mov
scas
push
decl
idivl
lret
sub
lea
xchg
add
cld
xchg
sti
cli
ret
adc
sub
test
jmp
clc
push
out
jb
ds
push
mov
jg
push
ficoml
fidivs
jge
xchg
sbb
test
mov
jmp
mov
xor
shl
inc
les
in
dec
scas
xor
aad
lods
and
cmp
xchg
push
pop
lds
popf
sbbl
mov
lret
push
jp
jmp
popf
rorb
mov
mov
mov
jno
test
test
ds
outsl
popa
insl
sbb
jae
sub
adc
sub
sub
sbb
push
out
fidivs
jmp
pop
ret
ljmp
ss
mov
stos
push
das
mov
jmp
xchg
pop
xchg
data16
inc
sti
es
mov
loope
cs
add
xchg
popf
test
jp
les
aaa
aaa
aad
sbb
jmp
and
cmp
lods
test
test
fldenv
icebp
std
xchg
mov
lea
push
orb
repnz
xor
pop
js,pn
push
ret
xor
cs
mov
jo
dec
xchg
cld
mov
xchg
popa
xchg
mov
aaa
mov
inc
cli
aam
mov
sbb
fs
arpl
imul
nop
mov
sti
push
jle
arpl
dec
push
imul
lret
roll
xor
mov
es
sbb
stos
push
add
movsl
add
dec
fbstp
jne
push
jp
push
movsb
and
popa
inc
ret
nop
inc
cmp
mov
xchg
xchg
mov
or
dec
pop
cs
stos
dec
test
sbb
pop
jmp
ljmp
lcall
mov
fisttps
jp
jecxz
mov
scas
or
dec
lcall
scas
mov
mov
dec
xchg
xlat
pop
cwtl
or
test
std
fsubl
imul
in
cs
aad
jae
mov
or
mov
mov
rorl
in
popa
mov
out
imul
push
mov
sarl
inc
mov
mov
lds
dec
cwtl
xor
xor
and
fs
and
notb
loop
rcrl
fdivrs
imul
fdivrl
jns
movsl
push
fdivrs
dec
pop
mov
or
or
shr
push
or
push
xor
adc
cmp
adc
or
outsb
mov
cmc
out
jnp
pop
rcr
lods
dec
add
es
sbb
popl
sbbl
push
lret
add
sarb
movsl
idivb
incl
lea
aam
pop
les
xchg
clc
mov
clc
clc
jno
imul
fwait
icebp
add
inc
adc
cwtl
and
cld
cmpsl
les
divl
push
sbb
mov
in
lds
push
fimuls
lahf
cli
aad
leave
div
push
ss
add
dec
orl
aam
stos
in
int3
ljmp
mov
das
xor
imul
popl
cmc
pop
cs
int
call
scas
test
aaa
add
sbbl
loopne
mov
sbb
nop
fstpl
and
xor
push
push
lods
push
sbb
mov
pop
push
xchg
fwait
in
adc
das
mov
push
std
cmp
inc
xchg
xchg
xorl
push
push
jns
andb
push
insl
mov
and
out
xchg
sub
mov
enter
loopne
push
lods
mov
add
shlb
sub
push
stos
jg
xchg
stc
jae
mov
shrl
mov
pop
loopne
int3
adc
cli
xchg
sbb
add
cmp
fcoms
or
xor
ja
add
out
xchg
cmp
xchg
cmpsb
sbb
sbbb
push
int
or
pop
cmp
push
arpl
pop
jl
jg
jo
leave
int3
mov
daa
shrb
orb
or
add
jge
pop
pop
in
jg
roll
push
jmp
jbe,pn
mov
dec
sub
and
movsb
and
xchg
mov
cmp
jmp
pushf
negl
cmpsb
pop
sub
xchg
test
xor
loopne
movsb
imul
in
xchg
push
lods
mov
pop
into
cmp
stos
test
sub
add
sbb
mov
mov
jge
pop
sbb
sub
lock
ret
leave
cmp
cld
notl
fldcw
jmp
lods
aam
add
mov
pusha
std
ret
andl
lods
sub
mov
call
mov
inc
add
cmp
je
in
les
pusha
pushf
cmp
cmpl
xchg
in
es
enter
or
cmc
ret
push
mov
adc
ss
decl
dec
mov
mov
jb
and
cmp
mov
jmp
js
jp
nop
std
ljmp
inc
xchg
out
mov
loope
xchg
xchg
or
rorb
xchg
xor
icebp
sbb
jmp
test
clc
add
rcr
dec
je
mov
mov
mov
shll
pushf
and
pop
loope
negb
loop
fiaddl
pop
mov
push
add
mov
mov
mov
adcb
mov
jle
arpl
pop
cs
push
icebp
dec
push
mov
loope
stos
mov
insb
stos
cmp
iret
lea
inc
into
mov
in
sub
lods
dec
mov
mov
test
ret
sub
adc
movsb
loopne
pusha
int
jo
dec
or
mov
stos
aam
add
lods
xor
adc
mov
in
cmp
push
mov
push
jle
repnz
imull
aam
mov
in
cmpsl
cwtl
int3
enter
sub
cli
dec
sub
push
aaa
dec
jo
lcall
mov
call
add
std
lcall
mov
push
dec
daa
outsl
mov
jns
jmp
cltd
xlat
in
cmp
dec
cmpsl
push
int3
lcall
push
pop
dec
mov
dec
xchg
xor
add
fcoms
cmp
cmp
pop
sub
mov
jno
jo
aad
mov
xorl
outsb
scas
mov
call
leave
adc
xor
call
outsl
lods
push
fcomi
fisubl
cltd
add
js
xchg
inc
dec
popf
dec
xchg
mov
sti
movsb
out
pop
mov
add
or
fldt
add
cli
jl
fildll
cmc
and
js
cs
ret
inc
addr16
lret
sub
inc
jbe
stos
call
jb
adc
xchg
popf
pop
into
push
sbb
xchg
mov
lock
xchg
popf
push
sbb
sbb
es
enter
ja
test
pop
jbe
sbb
mov
mov
xor
lret
jno
push
xor
sbb
sub
pushf
dec
sub
cmpsl
bound
push
shl
clc
cmc
push
neg
push
jne
int
jge
inc
or
mov
xor
xor
mov
mov
lret
out
lods
mov
xchg
inc
adc
in
movsl
into
mov
adc
ret
xchg
adc
pop
xor
test
scas
gs
fnstcw
loope
jmp
sub
fidivs
push
mov
js
popa
add
sahf
and
jmp
shll
sub
icebp
inc
cwtl
inc
push
sub
out
in
push
push
cmp
xor
cs
push
add
cltd
and
adc
pusha
pusha
mov
lcall
dec
mov
ds
icebp
sbb
xchg
or
std
mov
imull
fcomp
inc
mov
xchg
xchg
mov
popa
jne
into
ja
push
stc
movsl
scas
stos
adc
lahf
int
sub
loop
fldl
add
mov
xor
adc
and
fnstcw
movsb
test
mov
mov
pop
int3
or
lahf
dec
out
mov
mov
pop
pop
lcall
movb
data16
or
pop
sbb
sub
push
jae
call
cmpl
out
cmpsb
mov
cmp
addr16
test
into
rcrb
outsb
lock
jnp
out
cmp
aam
fdivl
mov
adc
popa
mov
fwait
shll
lea
mov
aaa
cmp
fisubrs
xchg
adc
jno
xor
push
fildl
pushf
movsl
sbb
xchg
imulb
daa
imul
movsl
out
mov
mov
or
cld
stc
push
add
jbe
and
pop
je
ffreep
push
mov
inc
xor
stc
push
lcall
inc
fstps
je
out
adc
pop
sub
insl
pop
pop
sbb
cwtl
test
adc
repz
jle
push
pop
stc
data16
pusha
stc
insl
inc
jo
shrb
dec
mov
and
push
cwtl
popa
fwait
sub
test
fsubs
inc
xchg
enter
pop
xor
lea
arpl
and
fists
int3
ds
or
jns
or
push
inc
clc
scas
loopne
cmp
mov
pop
sub
cs
sbb
in
lds
cmc
and
bound
movsl
push
sbb
push
mov
cmp
adc
mov
inc
dec
push
mov
push
push
outsl
cmp
icebp
in
mov
ss
cmpsb
mov
fcompl
xchg
int
push
lahf
pop
ljmp
add
xchg
fistpll
or
dec
mov
inc
in
push
repz
add
int
dec
xchg
adc
dec
fldcw
inc
jne
cmp
ret
icebp
jae
int
add
mov
xlat
addr16
mov
popf
adc
cwtl
mov
arpl
repz
aam
orb
or
jno
lds
cmp
imul
fwait
insb
adc
shlb
add
xchg
ret
mov
mov
cmp
test
insb
sbb
push
pushf
insb
and
cwtl
popf
mov
jae
rclb
jge
mov
mov
fisttpll
pusha
jge
outsb
imul
shrb
aaa
jmp
jnp
xchg
pop
mov
dec
scas
xchg
loope
lret
lret
and
jno
int3
pop
or
mov
in
dec
scas
jmp
inc
in
jecxz
icebp
ret
xlat
bound
cli
dec
or
jge
xchg
sbb
sbb
adc
stc
into
mov
loope
fst
adc
lea
popa
push
pusha
mov
icebp
mov
int
and
cs
mov
bound
mov
arpl
push
into
int
ja
adc
mull
fisttps
mov
daa
or
ja
xor
mov
mov
bound
mov
xchg
mov
fdivrs
sbb
ret
add
xchg
aad
jp
jns
mov
and
cmc
and
or
xchg
lea
push
sbb
aaa
mov
cmp
fidivrs
sahf
testl
nop
sbb
fnsetpm(287
nop
or
loope
bound
movsb
jbe,pt
icebp
sbb
cld
pop
imul
fdivr
std
daa
shrb
cltd
jns
iret
repnz
fsubrl
mov
mov
push
cli
sbb
cmpl
dec
ret
jbe
jle
mov
mov
mov
adc
das
jge
pop
or
ficoml
rol
pop
jbe
popf
arpl
jae
xchg
popa
rcl
inc
dec
out
sub
xorb
shlb
ss
cmpsb
or
ret
call
mov
sbb
mov
hlt
push
pop
add
mov
pusha
inc
pop
push
mov
dec
or
into
cmpb
mov
sbb
lret
push
in
dec
xor
inc
test
rcrl
fldt
push
es
into
imul
add
lods
repz
jmp
jl
push
popf
aad
iret
outsl
ja
cmpsb
push
fbld
out
xchg
lcall
lret
xchg
sysenter
cmp
xchg
xchg
sub
movsl
adc
pop
int3
inc
jae
pop
stos
xchg
sbb
mov
enter
stos
jle
scas
pop
repnz
jno
push
mov
dec
mov
testl
fmull
jge
sarl
mov
sub
dec
inc
inc
sub
pushf
mov
dec
test
push
in
cli
outsl
mov
xchg
sbb
inc
insl
mov
dec
mov
jb
mov
jge
ljmp
push
clc
push
loope
jo
xchg
ret
cld
jb
xchg
idivb
test
push
mov
xchg
mov
mov
xchg
lcall
adc
add
sbb
out
mov
enter
sub
pop
scas
std
xchg
adc
mov
out
jns
mov
sbb
adc
xor
popa
xchg
shrl
ret
testl
sbb
adc
push
mov
out
sub
or
fsubl
inc
pushf
push
out
fcomps
pop
loope
xor
insl
adc
pop
ja
leave
nop
leave
imul
pop
movsb
inc
dec
movsb
sbb
mov
stos
pusha
insb
aad
popf
mov
inc
mov
mov
bound
sarl
out
inc
or
mov
push
popf
or
ret
int
test
pop
cs
lcall
mov
stos
sahf
mov
movsl
mov
scas
in
jb
add
inc
and
orl
fldcw
mov
clc
dec
enter
dec
ljmp
xchg
in
stos
out
push
repz
add
jmp
and
and
pusha
out
mov
repz
frstor
jge
pop
aad
inc
enter
insb
mov
jge
cmp
lcall
adc
xchg
push
clc
int
or
ret
pushl
adc
fsin
push
inc
es
ficomps
sbb
call
inc
jns
jl
mov
sbb
repz
jp
repz
or
sti
je
inc
mov
pop
stc
push
fisttps
xor
lret
mov
inc
ds
dec
aas
jp
mov
xchg
loope
jmp
push
rcrl
push
ficoml
lock
xchg
push
adc
add
cmp
mov
fwait
out
popa
into
pop
xorb
push
push
scas
addb
nop
es
pop
mov
mov
and
mov
push
jmp
mov
jmp
jnp
popf
icebp
nop
mov
pop
mov
insl
outsl
jp
mov
pop
pop
dec
cmp
imul
add
daa
jl
test
pop
leave
movsl
daa
or
cmp
shr
lods
add
shll
jnp
sbb
sbb
loopne
mov
dec
cmp
mov
in
mov
sahf
adc
mov
iret
adcl
cmpsb
mov
pusha
in
into
mov
test
cmc
mov
sub
xchg
cli
xor
mov
mov
mov
jnp
sti
ss
loope
push
jo
adcl
pop
push
xor
addr16
out
pop
and
add
dec
subl
repz
iret
sbb
xchg
shl
mov
jne
shlb
add
cmpsb
sub
popa
lret
mov
xchg
add
test
sub
jge
and
adc
repz
mov
jecxz
jg
in
sub
call
subb
sbb
xor
pop
lret
jg
inc
fs
push
dec
cmp
jns
cmp
sti
add
cmpsb
and
inc
and
test
stos
fucomip
mov
aam
sub
mov
in
fildll
lock
sysenter
bound
jecxz
test
inc
pop
das
divb
push
shufps
push
stos
por
add
push
push
xchg
sub
incb
mov
pop
repnz
ljmp
or
push
xor
xchg
sahf
and
mov
leave
rolb
lods
mov
xchg
arpl
pop
push
outsl
or
adc
stos
adc
xor
mulb
or
xchg
lea
das
mov
sub
in
push
inc
ss
nop
jg
inc
lock
mov
in
mov
pop
ss
adc
pushf
cwtl
sub
xchg
jmp
sti
xrelease
pop
push
popf
iret
xchg
pop
jne
sbb
ljmp
mov
jmp
je
add
or
xor
jns
les
and
xor
test
scas
imul
mov
shl
mov
mov
pop
addr16
sbb
out
push
daa
sub
or
cwtl
mov
mov
fdivs
std
jo
mov
ljmp
loope
or
pushf
cmp
add
outsl
cmpsl
inc
cltd
cmp
bound
test
mov
fsub
mov
ja
mov
mov
xchg
xchg
mov
sub
sbb
cwtl
adc
mov
pop
adc
sar
sbb
test
xchg
icebp
mov
cmp
fiadds
inc
jmp
xor
jp
dec
outsb
das
sbb
out
or
xor
test
mov
mov
mov
jnp
pop
and
push
lret
jbe
testl
sbb
inc
cwtl
pop
daa
dec
loope
addr16
pop
cwtl
in
pop
sub
inc
loopne
or
stc
aam
inc
push
shrb
jns
rcr
stos
out
insl
push
sbb
xchg
cmp
outsl
adc
mov
dec
roll
nop
dec
fistl
xchg
sub
popf
das
leave
lret
sahf
xchg
repnz
dec
dec
pop
xor
sbb
pop
jle
mov
loop
cs
nop
push
mov
pop
xchg
in
lods
aam
dec
xchg
xchg
cwtl
cmp
das
inc
lods
add
pop
ljmp
ret
pop
fnsave
xor
pop
mov
fisubs
inc
lret
add
mov
sub
mov
mov
and
stos
pop
cs
stc
inc
dec
jmp
pop
out
cmp
dec
je
pusha
jnp
cmp
mov
pop
mov
test
shl
ljmp
push
lods
loope
outsl
arpl
jecxz
js
in
push
les
mov
sbb
jl
xchg
jo
push
into
das
cmp
inc
insl
jp
insb
ret
aad
jbe
xor
mov
bound
daa
enter
icebp
test
test
subl
xchg
ret
fstpl
pusha
mov
mov
je
dec
ds
pop
popf
fmuls
hlt
jo
iret
bound
xor
sbb
pop
mov
leave
in
addr16
aad
js
lcall
fdivl
insb
imul
pop
stc
daa
dec
push
mov
jecxz
lds
inc
push
aam
pop
pop
inc
and
ret
sbb
push
in
jne
movsl
pop
push
mov
adc
in
sti
loopne
pop
inc
mov
or
adc
mov
sbb
xchg
inc
adc
into
clc
mov
out
int3
outsb
mov
xchg
or
pmaxub
popf
pushf
mov
jmp
pop
fistpll
loop
adc
cld
mov
dec
iret
mov
cmp
push
mov
lods
popl
sarl
in
mov
add
inc
imul
add
fwait
sti
mov
lret
adc
jecxz
pusha
add
mov
into
aam
notl
fs
add
dec
pop
push
sub
mov
pop
inc
xlat
inc
sub
enter
paddsw
pop
aas
xor
sub
nop
pop
std
lahf
jo
js
mov
decl
dec
pop
cmpsl
and
push
out
lods
imul
push
adc
ror
push
mov
mov
repnz
jle
jae
sarb
adc
lret
in
movsb
mov
adc
rorb
rcrb
je
jne
and
mov
int
repz
mov
dec
pop
xor
lock
mov
adc
aam
cmp
ja
outsl
mov
mov
sub
xor
addl
mov
ja
scas
wbinvd
sbb
cmp
and
cld
or
inc
rclb
lret
push
push
pop
mov
jecxz
adc
cmpsb
inc
xor
ss
push
dec
pminub
test
xor
cmc
xor
fcompl
jge
nopl
and
inc
sbb
sub
popa
adcl
sbb
xor
cltd
testl
push
pop
inc
cmovne
lret
and
filds
or
inc
ja,pn
mov
and
stos
mov
jge
mov
movsb
sti
daa
mov
xor
add
into
test
imul
cli
shlb
pop
sbb
push
mov
data16
aam
sbb
out
jg
sbb
and
cmpsl
cmp
inc
popa
ljmp
sub
ret
and
cmc
push
into
add
test
cmp
jp
or
xchg
fidivrs
push
dec
push
cmpsb
jmp
insb
push
xor
dec
adc
insb
and
pop
lods
push
mov
xor
dec
aad
cmp
sbb
mov
mov
int
cmp
mov
shll
jmp
push
iret
out
jo
and
adc
lock
mov
xor
jns
sbb
xor
cmp
sbb
sub
jmp
push
add
xchg
add
mov
aam
pop
push
and
mov
enter
adc
testb
mov
mov
xchg
in
loopne
xor
ss
adc
pop
pop
add
fidivs
mov
push
testb
les
adc
mov
repz
fldenv
rcrb
outsb
dec
mov
mov
in
mov
adc
inc
add
inc
pop
clc
inc
inc
jae
sub
xor
cmp
xchg
push
push
addr16
out
sti
xchg
fcomps
pop
addr16
mov
outsl
sub
lcall
dec
aas
pop
enter
daa
cltd
sbb
dec
ret
mov
inc
pusha
shlb
std
add
jne
jo
sbb
push
dec
cmp
repnz
mov
addr16
push
xor
push
in
mov
ljmp
xorb
pop
sbb
xchg
leave
pop
mov
dec
dec
or
insb
cmc
shufps
jmp
adc
insb
insl
sub
dec
fdivs
dec
insl
lods
cmp
test
sbb
scas
jbe
jl
fcomi
mov
and
or
and
jb
in
add
rolb
fs
out
loopew
repnz
mov
hlt
aaa
pop
mov
xchg
mov
cmpsl
cmp
pop
add
stos
lcall
cmpsl
push
out
test
iret
adc
and
shlb
imulb
adc
mov
shrl
ficompl
or
lock
jge
fmul
sti
pop
jge
insl
loop
sub
dec
push
adc
es
jae
cmpsb
into
lret
jmp
add
ss
inc
pop
je
mov
out
rorl
scas
xchg
or
mov
in
inc
xlat
pop
stos
orl
dec
cmpl
sbb
leave
jb
mov
or
dec
pop
push
test
add
stc
jbe
fdiv
jmp
pop
hlt
xchg
testl
mov
jno
lods
inc
aam
cs
xchg
add
fbld
imul
inc
inc
pop
push
inc
mov
add
cmp
or
jp
and
push
mov
mov
jecxz
xchg
pop
out
sub
ret
inc
push
dec
xorl
ja
sub
lods
dec
lret
clc
push
or
js
outsb
cld
xor
arpl
lret
std
scas
cmp
and
hlt
mov
add
xor
dec
ret
int3
mov
adc
xor
xchg
aad
push
jg
jne
pop
outsb
aam
lea
or
jns
inc
jbe
mov
pop
stos
loope
stos
inc
icebp
jp
or
jbe
in
imul
pop
sahf
int
stos
mov
mov
outsb
cmpsb
data16
adc
repz
stos
loope
popa
sarl
cli
decb
inc
shlb
fimull
ljmp
jmp
fiadds
loope
dec
mov
inc
stos
mov
lea
xchg
mov
push
mov
xlat
or
sbb
pop
insb
cmp
cmp
test
movsl
jmp
sub
mov
mov
sbb
sbb
sti
femms
jns
jmp
mov
int3
scas
cmp
or
cmp
mov
je
mov
scas
mov
and
mov
scas
sbb
lea
rcrb
insb
dec
sti
lret
jns
xchg
imul
adc
les
int
jmp
imul
mov
lds
and
pop
jl
mov
mov
sbb
cmp
leave
iret
pusha
lods
cmp
roll
dec
sub
int3
loop
adc
inc
test
add
mov
xchg
push
or
inc
iret
mov
rcll
inc
inc
std
push
mov
inc
mov
sbb
sub
jle
xor
mov
xchg
int
subl
int
push
mov
jbe
int3
sbb
sti
jmp
fnstsw
sub
mov
or
insl
fisubl
scas
sahf
movsl
insl
or
lret
mov
mov
lahf
xor
mov
negb
mov
ret
in
cmp
scas
push
xchg
add
sub
add
add
push
or
fwait
lods
sbb
dec
movsb
iret
xor
shl
mov
xor
scas
push
push
pop
nop
dec
int3
inc
repz
mov
inc
out
loopne
rorl
xor
imul
cltd
arpl
push
roll
mov
iret
imul
repnz
push
loope
aam
mov
repnz
jbe
push
imul
pop
lods
scas
mov
cs
jmp
sbb
out
push
cmc
mov
cmp
sbb
sbb
xlat
and
imulb
in
or
movsl
push
loop
adc
fdivs
xchg
sub
inc
push
adc
xchg
mov
pop
fld
in
and
insl
out
test
roll
bound
lahf
lds
jp
loopew
sbb
enter
pop
xor
daa
mov
sbb
and
dec
aas
test
push
loop
jge
mov
out
sar
mov
mov
or
and
mov
frstor
push
mov
xor
and
mov
pop
rorb
pushf
scas
imull
test
insl
sti
inc
or
jp
add
mov
pop
sbb
sub
xor
add
rolb
inc
jle
addl
dec
je
and
jmp
inc
nop
jne
jns
out
jae
fsts
test
jmp
je
xor
push
dec
fwait
sbb
mov
mov
sub
push
les
sbb
mov
enter
adc
pusha
xchg
push
out
aad
aaa
mov
mov
add
out
ds
loop
add
lods
test
push
insl
xor
popa
jecxz
ret
ds
or
fwait
stos
stos
push
pushf
outsl
dec
adc
jecxz
push
jp
mov
sub
int3
int3
scas
std
cmpsl
or
insl
fiaddl
cmp
dec
adc
mov
pop
aad
daa
int3
inc
ret
negl
in
iret
pop
ss
or
daa
jmp
mov
stc
mov
adc
test
stos
clc
test
jne
shlb
mov
mov
push
fwait
clc
sbb
lds
xorb
scas
int
fsubs
xchg
jle
pop
outsl
ljmp
les
mov
and
data16
or
cmp
sti
add
xchg
pop
loop
or
mov
inc
push
insb
pop
dec
pop
pop
in
xchg
dec
testl
push
cwtl
addr16
dec
adc
pop
lea
fcoms
dec
cmp
sarl
fbstp
xor
ds
pop
je
lcall
ficoml
lds
or
fstps
les
xchg
stc
mov
lods
sbb
bound
or
pop
and
lret
repz
movsb
xchg
cmc
nop
mov
jo
push
mov
pusha
add
add
or
sbb
sub
and
or
adc
mov
xor
pop
jge
jae
fdivr
xchg
in
insb
mov
mov
cltd
outsl
mov
mov
lret
mov
mov
or
in
jecxz
lds
xor
mov
xor
les
or
shlb
or
adc
and
mov
lret
push
mov
mov
xorb
or
lahf
or
mov
cld
cmc
mov
push
notb
adc
push
sahf
inc
xchg
or
xor
mov
movsb
sarl
add
test
jae
mov
dec
jl
jae
lret
adc
nop
sahf
push
mov
movsb
pop
pop
mov
xchg
roll
faddp
inc
shrb
mov
lcall
mov
or
inc
paddq
pop
pop
mov
sti
sarb
ja
adc
adc
sub
inc
cmp
sub
mov
fwait
mov
jp
sti
sub
xchg
mov
pop
testl
sahf
or
je
push
test
push
insb
jbe
lods
adc
sti
or
cmp
lock
push
test
test
mov
mov
sahf
jbe
mov
cltd
hlt
and
test
subb
fwait
or
push
sbb
lock
imul
sar
ss
push
fdivl
mov
lret
pop
sbb
aam
mov
xor
imul
mov
mov
sbb
inc
mov
sbb
mov
nop
les
add
mov
lahf
cltd
mov
into
push
shll
push
outsb
data16
mov
jns
or
dec
call
adc
pop
sti
shr
aam
mov
mov
and
iret
loope
es
jmp
inc
and
iret
icebp
pusha
daa
push
pop
popa
mov
xchg
jl
mov
mov
fsubl
clc
mov
or
mov
fidivrs
jb
push
mov
call
dec
pop
add
ds
pop
add
pop
jnp
xchg
lods
pop
mov
mov
sti
adc
int
pop
roll
cld
out
adcb
jecxz
cltd
sbb
imul
out
enter
pop
mov
xlat
lods
jp
sbb
aas
pusha
dec
aad
dec
cmp
fsubs
pop
add
pusha
push
fcoml
out
jnp
cmp
iret
inc
data16
adc
add
mov
jge
mov
adc
jecxz
mov
or
outsl
jns
pop
scas
loope,pt
gs
xchg
dec
push
push
xor
es
pop
addl
jmp
repnz
cmp
js
mov
stos
push
dec
mov
sbbl
out
lret
into
mov
mul
stos
fucom
inc
push
and
outsb
dec
add
int3
les
rcll
cmpsl
fistl
lret
test
sbb
out
mov
pop
mov
scas
aaa
inc
ret
aas
mov
in
inc
test
stos
pop
sbb
je
out
out
dec
mov
mov
xchg
in
int
xchg
outsb
xchg
ja
lret
dec
aam
enter
mov
notl
shrb
orb
sbb
mov
xchg
ficoms
cmp
loop
xchg
and
push
das
loope
out
lds
out
mov
in
or
pusha
sar
call
icebp
cld
js
xor
movsb
sbb
data16
repz
test
adc
adc
cld
jno
mov
pushl
mov
jns
fidivs
call
idivb
shrl
xlat
pop
and
fisubrl
shl
int3
sub
cmpsl
rorl
movsl
or
dec
jp
xor
dec
cld
daa
mov
lcall
pop
xchg
and
mov
cmp
pop
fistps
push
mov
test
test
sbb
cltd
xchg
inc
sub
mov
mov
fcoms
cmpsb
inc
cmp
xchg
cmp
xchg
inc
pop
cmp
add
mov
das
ret
mov
dec
mov
xchg
pop
push
or
adc
stc
int3
xchg
stc
outsl
jp
lock
push
outsb
jg
rorl
push
sahf
pop
data16
std
jl
fisubrs
lods
mov
jo
mov
rclb
ljmp
inc
test
fisttpll
jp
xchg
cmp
push
roll
mov
decb
test
xor
mov
mov
repnz
js
jmp
in
inc
mov
fstl
cmp
andb
push
adc
icebp
dec
add
sbbl
sbb
sub
ror
jno
sbb
ja
xchg
or
pop
sbb
pop
imul
pop
pavgb
and
jle
dec
insl
stos
jo
jo
repnz
mov
daa
in
rclb
jge
add
inc
ret
iret
pushf
test
xchg
mov
mov
inc
cld
pop
clc
inc
loope
insl
fs
insb
jle
pop
outsb
ret
fisubrs
jns
lahf
lock
mov
orl
imul
aad
jge
mov
add
out
scas
lahf
and
inc
scas
mov
inc
pop
push
jno
cmpsl
cmc
mov
hlt
sub
sbb
addr16
jecxz
or
movsl
or
mov
shll
rorb
fs
sbb
idivl
add
mov
enter
sbb
pop
xchg
jb
lock
out
pop
inc
pop
cltd
jo
mov
insl
test
push
in
mov
es
jo
mov
in
pop
loope
sbb
mov
ss
push
xchg
push
mov
mov
cmp
cmp
cmpsl
mov
movsl
push
inc
lods
nop
mov
jge
mov
out
loopne
inc
and
adcl
push
in
repnz
ret
aam
or
mov
fstpt
sub
or
int3
sub
jp
lahf
out
xadd
mov
and
inc
je
movsb
dec
mov
push
push
ljmp
aaa
popf
cmp
sub
xchg
sub
andl
call
xchg
dec
jns
or
rcll
fistl
dec
ljmp
or
gs
xchg
mov
js
cltd
shlb
roll
mov
cmc
idivb
xchg
pusha
push
sub
jnp
jbe
jge
es
pop
pop
int3
fildl
cwtl
std
movsl
jnp
and
push
jl,pt
sahf
push
rcll
xchg
fnstenv
jno
stos
jge
imul
sub
neg
inc
loope
adc
jecxz
div
imul
dec
or
dec
leave
mov
inc
add
push
or
or
xchg
loop
add
out
jnp
or
shll
ret
iret
push
jns
push
pop
popa
ja
cltd
enter
ret
lcall
xchg
mov
lret
rcrl
cmp
mov
jo
lret
fidivs
sub
and
in
cmp
scas
inc
loop
push
or
insb
xor
cmp
mov
xchg
sbbb
mov
imul
push
adc
lea
lea
rcl
inc
in
rcll
inc
mov
int3
xchg
sbb
or
aam
lock
xchg
or
cmp
pop
and
dec
dec
sbb
aam
std
push
push
in
add
jae
inc
jmp
cmc
sub
cmp
jbe
insl
clc
jge
sarl
arpl
push
push
adcb
clc
outsb
cmpb
or
xorb
jns
sub
and
addb
jmp
jns
ret
jecxz
divl
dec
jo
repz
xchg
hlt
je
bound
lret
mov
jns
xor
jmp
xor
shrl
hlt
jecxz
add
mov
adc
sub
gs
outsb
fcmovnb
imul
in
repz
inc
pop
dec
xchg
orb
std
push
or
out
adcb
mov
dec
mov
jns
aam
aas
ljmp
cmpsb
pop
test
inc
out
icebp
add
and
pop
data16
les
push
and
xchg
lock
leave
pop
imul
xchg
adc
sti
imul
mov
sbb
dec
popa
or
xchg
xchg
or
cmc
cmpsl
stc
mov
mov
push
out
shl
mov
jno
fisubs
icebp
subl
push
rep
mov
dec
mov
repnz
int3
mov
add
lcall
fcmovnu
sub
jb
jne
cltd
push
pandn
jl
pushf
xor
or
sbb
or
mov
inc
dec
xor
out
cs
or
mov
adc
xchg
jno
jge
or
pop
sahf
jmp
iret
sbb
mov
xchg
push
dec
repnz
cwtl
insl
adc
cmp
mov
xchg
aas
adc
aas
or
push
aaa
das
push
jnp
xor
pop
adc
fldcw
insb
jecxz
rcrl
xor
jl
outsl
inc
mov
insl
lret
in
cmp
bound
sub
xchg
cwtl
ret
div
sbb
mov
push
inc
mov
rcrb
xchg
lret
pop
mov
or
cmc
pop
pop
jns
mov
nop
jne
push
jb
push
int
push
arpl
mov
or
pop
xor
mov
lahf
test
or
movsl
std
jl
test
add
insb
icebp
sub
mov
push
or
cld
dec
lret
cmc
cs
nop
dec
push
cmpsb
mov
push
jns
mov
and
mov
or
enter
mov
cmp
inc
mov
je
push
jle
fnstenv
cmpsb
and
add
aas
adc
push
cmp
orb
nop
loopne
cmp
pop
mov
popf
inc
or
mov
rcll
cmc
fisttpll
mov
mov
jge
pop
and
nop
arpl
lret
popf
stc
pop
and
xchg
shr
sahf
out
xlat
mov
insl
lret
cmp
push
jp
pushf
xor
hlt
mov
push
mov
add
loope
sub
es
dec
dec
aaa
xor
aaa
mov
mov
add
mov
xchg
jo
int
jbe
dec
or
js
pop
fucom
shrl
mov
inc
add
sub
push
ja
cmc
inc
sbb
daa
add
mov
addb
lcall
mov
mov
pop
adc
sahf
pop
sbb
mov
imul
mov
icebp
cmp
jp
lcall
mov
sbb
stos
fidivl
xchg
in
jge
enter
dec
dec
xchg
in
das
sti
add
fistps
in
add
sub
aad
jmp
pop
gs
mov
lds
sbb
gs
test
divl
arpl
leave
push
mov
inc
fsubl
jne
dec
repnz
inc
jno
dec
cmp
lea
sbb
mov
ja
push
sbb
sub
insl
pop
cmpb
jmp
mov
in
std
mov
pop
scas
sub
and
mov
jbe
fmulp
ss
bound
cmp
or
mov
in
hlt
mov
cmpsl
rcl
mov
pop
pop
jno
mov
push
jecxz
cmp
add
and
pushl
mov
fisttpl
sbb
pushf
adc
mov
rclb
out
cmp
adc
and
jecxz
in
dec
push
stc
ret
mov
xor
push
add
adc
xchg
sbb
je
in
ret
data16
inc
jl
jnp
push
and
jp
pop
stc
test
add
ficompl
xor
ret
cmp
jmp
cmp
pop
in
sbbb
mov
iret
ja
pop
or
icebp
mov
fcompl
aas
loope
inc
mov
adc
call
ret
call
shll
jl
mov
fdivrp
adc
adc
xchg
pushf
xchg
jbe
xchg
lods
sub
test
cmp
and
xor
sub
xchg
and
mov
inc
dec
fs
repz
mov
call
sbb
hlt
sbb
mov
or
fwait
xor
mov
mov
and
cmpsb
jecxz
aad
mov
xchg
std
lea
adc
dec
push
mov
lock
and
sahf
inc
cmp
fidivrs
in
and
sbb
add
and
and
imul
repnz
pop
aas
mov
inc
or
lret
adcl
fistl
dec
sbb
test
loope
fsubs
xor
push
stos
jns
xchg
push
hlt
xchg
push
movsl
shlb
or
mov
fidivrl
dec
out
xchg
ret
in
cltd
jp
imul
cmpsb
in
sti
sub
rcr
int
xchg
dec
inc
int3
mov
mov
scas
sysret
push
cli
cmp
ret
jo
add
cmp
cmpsl
or
loop
mov
and
cmp
jbe
xor
adc
addr16
cmpsl
xchg
cmpsl
push
xchg
mov
mov
nop
sarb
lods
out
jg
iret
mov
int
jl
std
xor
xor
sbb
movsb
dec
add
and
jo
cwtl
push
lds
test
pop
lret
sbb
inc
outsb
stos
pop
mov
pop
cmp
int
mov
lcall
xchg
push
iret
cmp
sub
movsb
mov
sahf
xchg
lock
push
mov
add
and
xchg
hlt
mov
popa
inc
xchg
shlb
dec
jle
int
ret
and
and
pop
repnz
cmp
in
or
add
outsl
icebp
push
aad
mov
fnstsw
cmpsl
ret
xlat
xor
adc
in
imul
data16
fsubp
cld
testb
ljmp
and
test
jo
push
jns
jnp
xchg
shl
in
xor
xchg
and
into
lahf
aas
jns
daa
sahf
adc
js
mov
loope
negb
and
rclb
test
popa
and
loop
into
and
movsb
xor
inc
aad
das
pop
cmp
xchg
or
xchg
pop
ljmp
jno
and
mov
outsl
xor
inc
scas
mov
repnz
jge
arpl
push
mov
mov
mov
cmc
outsb
in
or
pop
test
sbbb
rcll
jmp
shr
mov
stc
add
mov
inc
xchg
dec
test
pop
xor
loopne
fimuls
push
jecxz
sahf
sbb
mov
insl
adc
pop
mov
out
xor
push
jns
insb
mov
jg
cmp
xor
jp
call
cmpl
push
xlat
rolb
pop
aad
push
jnp
into
int
add
inc
xor
cmp
shrl
loop
sahf
pop
inc
xchg
js
es
aam
xchg
mov
ret
lds
test
hlt
inc
mov
and
clc
cld
in
scas
and
scas
jnp
sub
xchg
inc
xor
adc
jl
sbb
xchg
xchg
cld
add
cmc
pop
mov
es
adc
pop
xor
adc
cmc
xlat
push
mov
aam
rcl
das
fs
sub
lods
hlt
cltd
addr16
ja
das
lods
lret
pop
inc
cmp
fcmove
cmc
and
jae
insl
jo
xchg
fcmovne
ja
fwait
in
in
adcl
into
nop
fisttpl
cmp
in
xchg
dec
rorb
icebp
add
add
mov
cmp
and
mov
stc
call
aam
cmpb
jbe
stos
ficoml
leave
push
aaa
insl
call
jae
in
or
popf
in
jecxz
add
push
inc
push
push
lea
mov
gs
enter
stc
imul
outsb
mov
movsb
push
pop
lret
jl
jmp
test
jbe
pop
negb
ss
xchg
or
xor
adc
mov
cmovle
push
and
cmp
in
push
add
stc
push
cli
pop
mov
dec
adc
and
cmp
dec
sub
mov
mov
push
dec
mov
sub
addr16
push
std
or
jecxz
jno
jmp
adc
sbb
sub
and
pusha
inc
sbb
fcmovnbe
or
mov
cmp
scas
and
jg
adc
nop
or
mov
je
repz
inc
mov
cli
pop
push
pop
cmpl
pop
dec
mov
push
mov
inc
jge
dec
xor
clc
sub
pop
ja
hlt
push
clc
frstor
hlt
fdiv
pop
jp
push
out
jle
arpl
push
repnz
nop
pop
and
pop
jmp
sahf
int3
pop
jl
mov
sub
testb
jbe
inc
pop
push
xor
arpl
mov
mov
jns
leave
fwait
inc
jmp
fwait
aaa
sbb
fistpll
push
sar
jbe
in
inc
pop
scas
pop
int
repnz
jne
scas
mov
sub
outsl
repnz
xor
cmp
scas
mov
fwait
and
int
jb
push
mov
mov
sbbl
push
mov
mov
repnz
mov
jl
jmp
pop
jns
hlt
pop
inc
stos
push
in
mov
add
inc
stos
out
mov
xchg
hlt
orl
pusha
dec
mov
or
in
and
sbb
shrb
jb
or
loop
js
cwtl
js
xchg
jb
mov
js
or
filds
mov
je
fidivrs
ja
leave
std
mov
inc
inc
stos
push
in
insb
daa
test
test
mov
sar
mov
xorl
call
sbb
and
pop
rcl
fnstcw
or
cmc
xchg
mov
pop
xor
scas
jbe
nop
and
sub
cmp
and
testb
mov
int3
sub
lods
pop
or
inc
sub
das
lahf
aas
bound
rcl
pusha
mov
and
rorl
dec
stos
dec
xchg
push
outsl
frstor
xor
popa
xchg
shl
ds
xor
shll
inc
mov
dec
int3
lods
mov
jl
or
outsl
out
test
mov
sti
shll
jle
jns
jl
lret
cmp
mov
insb
or
in
fwait
je
imul
cmp
lret
xchg
sub
aaa
subl
push
mov
cmc
jne
fbstp
mov
shr
jg
jne
and
jne
xchg
lcall
push
fadd
xor
add
mov
mov
or
pop
jae
call
leave
dec
pop
fimull
lds
das
call
jno
cmp
fmuls
jmp
jb
push
push
test
dec
and
push
pop
push
leave
xchg
fisttps
and
fnstsw
pop
and
rorb
jl
je
add
add
mov
cmp
dec
or
xchg
mov
test
movsb
test
jge
notb
icebp
js
and
nop
xor
lods
enter
xor
mov
adc
cmpsl
ljmp
cmp
fbld
scas
push
lret
pop
gs
ja
stos
pop
xlat
fs
push
sbb
push
sbb
ss
lds
stos
adc
cmc
rclb
pop
fiadds
mov
mov
xor
dec
in
movsl
jno
std
jle
shr
jns
mov
cmp
out
cli
popf
popf
fwait
cltd
cmpsl
push
dec
shll
mov
push
flds
lcall
xchg
push
nop
loopne
pop
in
adc
out
mov
mov
aas
popf
cmp
rcll
testl
inc
push
inc
cmp
icebp
and
inc
xchg
in
add
mov
loop
add
sbb
cmc
sub
adc
pop
popf
mov
test
inc
push
popa
in
imull
popa
test
dec
jb
mov
or
arpl
lret
cld
add
mov
clc
xchg
daa
icebp
ja
pusha
mov
jl
sub
xchg
enter
inc
mov
fwait
repnz
xchg
es
sarb
shll
cmpsl
or
test
scas
jb
sar
test
add
orl
lret
mov
test
cmp
cmp
sahf
fs
push
sub
add
call
pop
sbb
xor
xor
lods
push
sub
push
jg
jno
inc
xor
or
pushw
pusha
pushf
and
cli
pusha
dec
fidivs
xchg
dec
xchg
mov
test
mov
mov
out
shlb
dec
jg
stc
je
mov
std
movsl
cs
bound
adc
xchg
cltd
or
lret
cmp
movb
lds
xchg
repz
mov
or
cmp
je
inc
adcb
sti
mov
sbb
aaa
push
mov
push
push
jmp
test
mov
xchg
xor
fwait
pop
dec
divl
test
adc
xchg
adc
add
out
enter
aad
gs
sub
test
push
idivb
and
jl
push
lea
nop
movsl
in
mov
rcrl
jge
dec
xchg
xchg
sub
clc
insb
or
jg
ss
add
jp
pop
hlt
push
sub
dec
imul
es
jmp
xchg
sub
push
fsubr
sbb
mov
pop
pop
mov
mov
sti
loopne
bndstx
shl
mov
pop
insb
popf
xor
rcl
lds
movsb
mov
dec
push
stos
mov
loop
dec
stos
sub
inc
filds
push
xor
adc
cmp
ret
hlt
into
dec
adc
into
int
lcall
nop
ret
loope
arpl
mov
sub
or
les
adc
repz
lahf
lea
mov
mov
pushf
jb
repz
fimull
mov
sbb
pop
pop
sbb
fsubl
aad
mov
inc
test
lret
xor
out
xor
ret
pop
pop
inc
or
ret
test
jl
andl
in
sarb
idiv
add
pop
cmp
sahf
jnp
pop
stc
pop
mov
nop
fwait
cwtl
popf
xorb
cld
pop
xchg
sahf
popf
push
jo
add
mov
push
adc
cmpsb
or
fcoml
mov
xor
aas
fldl
cli
inc
lods
mov
lcall
ljmp
jle
loop
insb
loop
mov
lods
movsl
add
xlat
cmpsb
pop
xchg
mov
jns
lret
inc
jg
rclb
mov
add
mov
jnp
adc
inc
ret
sarb
subb
je
xchg
scas
xchg
xchg
sahf
push
enter
push
mov
fwait
mov
in
xchg
pop
xchg
dec
mov
jmp
push
push
outsl
pop
push
test
sub
test
mov
ja
mov
pop
mov
sbb
cmc
leave
punpckldq
stc
sub
je
out
sub
sub
pop
pop
jle
lods
shl
mov
push
in
das
pop
xor
lret
jno
xchg
loop
or
fidivrs
or
inc
and
sub
stos
jne
jmp
push
push
pop
mov
add
push
scas
sbb
dec
pop
fxch
sbb
jbe
in
sti
fists
outsb
pop
ret
xor
mov
in
mov
sbb
cmp
fnsave
es
daa
ffreep
clc
sub
jnp
pop
loop
movsb
out
lea
mov
sbb
movsb
pop
dec
pop
mov
lcall
imul
push
xchg
mov
jge
int3
inc
xchg
sub
push
and
in
and
mov
jo
adc
imul
push
jp
cmpsl
sub
hlt
xor
inc
rcrl
xchg
addb
xor
jno
popf
and
dec
jecxz
mov
or
push
add
cmpsb
pop
insl
adc
dec
jge
jne
inc
gs
and
repz
les
call
bound
ret
movsl
inc
xor
je
jmp
sti
pushf
repnz
pop
and
pop
dec
into
add
stc
inc
roll
test
xor
xorb
jae
cs
inc
lret
push
and
xor
push
test
mov
bound
sub
out
pop
outsl
mov
loop
or
shrb
jne
insb
sar
in
mov
repz
jge
jle
ja
fidivl
lea
sub
xchg
jne
mov
jne
cld
or
ja
clc
pop
repz
jno
sbb
icebp
ret
mov
jno
mov
xor
outsb
stos
out
aam
cld
cwtl
mov
gs
jo,pn
mov
lds
imul
sub
icebp
inc
add
into
inc
jecxz
fldl
fcmovb
jns
mov
jecxz
lock
dec
ja
or
dec
rorb
insb
fwait
cmp
or
sbb
ljmp
lock
inc
adc
insl
repnz
jle
cmp
mov
imull
das
int
pushf
mov
test
hlt
in
jle
inc
enter
lock
jae
ret
fldl
subl
jb
mov
je
sub
mov
aas
pop
mov
lods
add
and
adcl
add
pop
cltd
fsubr
outsl
mov
in
cwtl
jns
jmp
jg
adc
jb
js
fldcw
mov
sub
push
ret
scas
inc
clc
in
push
xchg
repz
cmc
push
inc
push
jnp
mov
imul
ljmp
cltd
addb
xor
pop
mov
or
ficomps
enter
aad
or
pop
mov
xchg
es
sbb
sar
fistl
enter
inc
inc
out
dec
sub
jae
add
leave
loopne
xor
int3
adc
add
cld
pop
mov
mov
inc
cltd
pop
pusha
xchg
scas
sub
fwait
loope
lods
push
add
in
pusha
movsb
add
inc
cmpsl
add
imulb
add
enter
and
sbb
addr16
xchg
and
lret
out
push
add
adc
sbb
mov
pop
cmp
xchg
lods
mov
rcl
mov
scas
stos
iret
lods
aam
jmp
pop
cmp
add
sub
arpl
sbb
sti
jl
mov
xor
stos
or
mov
lret
push
addr16
bound
mov
adc
outsl
daa
iret
shll
cli
inc
iret
adc
lret
xchg
bound
inc
jae
push
je
xlat
cltd
test
dec
inc
mov
sbb
cmp
or
repz
sub
mov
add
call
xor
rol
leave
lret
maskmovq
notl
test
dec
je
dec
int
sti
repz
icebp
and
addr16
inc
mov
in
mov
sub
mov
mov
icebp
pop
rcll
cmpsb
and
orl
sub
xor
shll
aas
leave
sarl
xlat
pop
push
lea
shlb
xchg
and
test
rolb
dec
pop
int3
aaa
mov
jne,pt
xlat
jne
bound
leave
imul
neg
bound
scas
bound
scas
jbe
mov
inc
ljmp
mov
xchg
inc
adc
push
test
adc
cli
dec
mov
pop
lock
scas
jl
test
push
stos
xor
push
and
dec
ret
mov
cs
icebp
push
ja
sub
inc
xchg
icebp
fists
or
jae
jno
push
loop
orb
mov
mov
daa
mov
decl
cmp
lret
push
adc
sahf
cwtl
orl
push
xchg
pop
adc
jbe
xchg
aas
inc
out
scas
or
sbb
xchg
push
outsl
lods
dec
test
jge
or
xchg
outsl
or
jge
mov
cltd
and
mov
and
fdivrs
inc
inc
orl
mov
lret
clc
int
mov
int3
jne
xor
out
adc
imul
sub
mov
jb
mov
aam
sbb
and
xor
push
dec
rcll
cmc
mov
mov
jns
sbb
lods
sar
mov
testb
mov
dec
outsb
into
cmp
adc
push
push
push
jnp
sub
fildll
hlt
push
fadds
inc
inc
ss
roll
mov
pop
je
xchg
pop
or
scas
adc
mov
sar
aad
cmp
lahf
rcll
orl
pop
into
inc
push
mov
adc
test
imul
in
cli
xchg
inc
dec
int3
jge
out
jmp
dec
adc
loop
rorl
stos
out
adc
add
fiadds
fadd
fidivs
xchg
mov
ud2
and
cld
adc
xorb
cmp
push
insb
rol
insb
push
fnstenv
dec
sub
es
lods
mov
xor
clc
movsl
hlt
jle
aaa
xchg
jge
loopne
mov
shll
push
cwtl
arpl
int
jae
add
adc
ret
ds
aas
test
jno
or
xor
adcl
popf
jg
aad
lods
lods
xor
add
sub
and
pop
xor
scas
cwtl
push
push
jbe
dec
in
pop
inc
shrb
imul
push
jecxz
test
jo
stos
adc
imul
add
xchg
mov
insb
imul
out
xor
push
mov
fsubrs
lahf
push
mov
orl
scas
jg
cmc
rcrl
mov
cs
sbb
pop
into
hlt
push
in
aam
push
cmpsb
icebp
and
and
adc
jp
mov
mov
into
rcl
rorl
testb
xchg
mov
push
adc
jmp
das
xor
cmpsl
adc
pop
adc
in
adc
les
mov
sbb
mov
mov
mov
pop
xchg
push
inc
in
fwait
pop
into
dec
dec
insb
adc
les
pusha
push
popa
cs
mov
std
adc
lods
es
and
dec
xlat
icebp
lods
cmp
fistpl
xchg
or
aam
insl
fistps
add
cld
pop
out
enter
sub
mov
inc
pop
ficoml
xchg
gs
fmull
push
stos
cs
test
pop
xchg
popa
xchg
jmp
mov
jp
jmp
rolb
outsl
sub
sbb
cmpb
sub
das
adc
cmp
in
repnz
xchg
adc
loopne
clc
jb
xor
mov
and
pop
push
push
fs
test
jl
enter
inc
gs
mov
arpl
sub
inc
push
push
cmpps
leave
and
dec
popa
jae
dec
adc
lret
bound
hlt
ljmp
add
data16
pop
insl
dec
mov
mov
stc
test
daa
xchg
and
inc
addb
pop
mov
int
in
adc
cmp
fstpt
or
pop
jbe
repnz
inc
je
jle
and
adc
push
mov
or
xor
dec
pusha
mov
jb
fsubrs
nop
fcoml
outsl
sbb
ret
xchg
clc
aas
sahf
subl
sbb
mov
adc
ret
push
push
inc
mov
or
in
inc
rorl
je
enter
mov
and
mov
mov
sbb
fidivs
cltd
cmp
mov
mov
sub
dec
jmp
sub
inc
mov
sbb
adc
mov
pop
xor
int3
icebp
aas
dec
or
clc
cld
or
xchg
daa
adc
testb
mov
cmpsb
scas
dec
ret
dec
lcall
sub
xchg
test
jns
adc
push
rcrl
dec
bound
out
xchg
dec
pusha
jae
fcompl
std
lcall
pushf
sbb
push
sbb
cmp
std
pop
mul
push
jo
incb
cmpsl
or
jle
cmc
and
aaa
in
adc
mov
push
addr16
jae
lret
adc
cwtl
pop
xor
mov
ret
out
inc
lret
mov
imul
mov
aam
pop
fwait
cmpsb
pop
xchg
loope
insl
add
test
leave
fs
adc
mov
pop
dec
inc
scas
sbb
xchg
pop
adc
dec
pushf
scas
mov
aas
ss
stc
xchg
mov
mov
sbbb
pop
mov
or
aad
ds
lret
jle
outsb
negb
pop
mov
pusha
das
mov
dec
xchg
push
sbb
dec
or
add
push
shlb
or
cmp
or
adc
mov
dec
jo
xchg
inc
add
inc
imul
adc
dec
test
rclb
sbb
push
data16
mov
add
push
adc
testb
inc
femms
add
arpl
std
aas
lock
int3
add
popa
pop
lods
cmp
popf
les
cmpsl
addr16
or
loope
dec
sub
repnz
hlt
xchg
xchg
jmp
ficoms
jecxz
pushf
les
adc
arpl
stos
dec
test
xchg
cmp
mov
les
repnz
jb
cmp
cmp
fistpl
xchg
shlb
add
add
xor
fs
mov
push
mov
int3
rep
out
xor
or
lods
sub
stc
mov
push
cmc
xor
sub
inc
jle
pusha
das
push
jmp
cmpb
ret
jno
icebp
les
push
in
rolb
and
in
addb
ret
imul
std
push
cmpsl
outsl
cli
test
aaa
push
inc
sub
pop
addb
ja
movsl
mov
aad
fdiv
scas
jo
dec
out
inc
add
es
orb
cmp
pop
or
xor
sub
lahf
pop
mov
or
fistps
xchg
stos
cld
shrl
jns
inc
outsb
fsts
pop
movsl
pop
add
add
dec
sbb
mov
gs
push
fsubrl
es
push
mov
or
inc
scas
scas
call
cmc
jecxz
les
dec
fsubrs
scas
mov
push
xor
add
sub
sbb
aam
popf
and
jo
xchg
fsubl
je
or
lcall
jl
scas
imul
inc
pop
sub
out
pop
pop
or
push
inc
scas
or
shlb
arpl
mov
pop
add
xchg
test
popf
test
sub
adc
push
int
jecxz
dec
inc
cmc
adc
push
xor
setle
stc
cmc
adc
subl
stos
cld
and
insl
push
inc
dec
jg
xchg
scas
gs
or
movsl
dec
inc
jge
dec
or
inc
xor
mov
ror
add
stos
into
jnp
out
loope
dec
pushf
movsb
data16
pop
xchg
adc
sarl
xchg
mov
sti
mov
adc
xor
inc
jne
mov
mov
loopne
ret
jg
sbb
outsl
xlat
ss
dec
add
fidivs
fdivrl
or
jg
mov
dec
int3
ss
les
clc
jmp
jno
push
sbb
inc
xor
andl
adc
jns
xchg
je
push
inc
and
ret
in
loope
cmpsl
pop
mov
insb
ss
iret
in
sbb
lret
mov
js,pt
movsb
push
jno
xor
imul
subl
enter
xlat
pop
push
push
dec
es
aam
lods
pop
test
scas
inc
sahf
jmp
insb
in
jg
cwtl
mov
roll
lods
loopne
jmp
mov
mov
data16
xchg
jp
dec
inc
mov
sar
xor
lea
outsl
jle
jb
filds
mov
test
pushl
jp
aad
mov
sub
mov
inc
mov
lds
sub
push
jbe
dec
insl
mov
xchg
fldt
lods
dec
xchg
xchg
or
pop
inc
mov
mov
inc
mov
popf
clc
scas
insb
jmp
sahf
out
jnp
add
cmpsb
scas
lahf
data16
and
mov
cmp
test
sbb
aam
xor
ret
stc
call
inc
xchg
adc
pop
sti
push
loopne
xchg
jmp
adc
add
jo
stos
stos
mov
xorl
mov
or
lcall
sbb
sub
test
fbstp
fbstp
add
lods
rol
cltd
mov
insl
push
sbb
mov
lahf
add
in
pop
xchg
xchg
push
push
into
push
fwait
or
push
or
push
cli
popa
xorl
mov
dec
sub
jmp
enter
xor
popf
ds
outsl
lods
les
xchg
pop
adcl
lcall
lods
and
xor
lock
adc
push
mov
push
mov
lds
decb
push
mov
pop
dec
pop
or
push
mov
std
stos
push
loope
cmp
mov
sub
dec
xchg
insb
inc
pop
adc
jno
int3
and
sbb
pushf
pop
shll
aad
adc
out
pop
enter
add
sahf
mov
out
mov
subb
test
in
clc
xchg
mov
idiv
int3
lock
add
fisubs
test
pop
loopne
xchg
mov
sbb
in
pop
xchg
sub
inc
mov
in
pop
sbb
or
mov
jmp
ret
enter
bound
cmp
jmp
and
test
fists
push
in
mov
pop
or
push
sahf
lds
nop
push
mov
mov
loopne
xchg
and
xchg
bnd
pop
fadds
inc
in
xchg
out
inc
inc
adc
add
insb
jne
inc
dec
push
jecxz
cmp
mov
dec
popf
cmp
pop
cmp
lret
sbb
mov
lret
push
pop
stos
fstl
pop
hlt
push
mov
xor
mov
sbb
push
push
es
pop
movb
imul
mov
pop
push
je
mov
pop
cmp
cmpsb
fcompl
dec
and
imul
cmp
inc
arpl
add
out
scas
add
clc
addl
pop
jmp
cltd
mov
or
gs
ret
fucomip
fimull
push
fists
scas
stos
xchg
outsb
inc
imul
aad
imul
call
dec
adc
cmc
and
lea
outsl
ds
orl
sti
loope
cltd
inc
xor
mov
ljmp
insl
or
in
mov
push
pop
xchg
mov
and
das
inc
dec
or
gs
or
xor
imul
xor
mov
adc
out
mov
shll
das
fbstp
sbbl
xchg
mov
sub
test
pop
add
cli
add
mov
and
pop
sub
inc
hlt
ret
sbb
syscall
repnz
xchg
ficomps
lods
fchs
pop
push
stos
popa
mov
mov
loopne
test
xor
mov
sub
add
repz
movsl
adc
and
pop
dec
jmp
repz
stos
repz
cli
out
add
sub
das
jb
add
push
pop
loop
lock
dec
mov
mov
cmp
push
cmpsb
inc
fldcw
loop
sbb
mov
outsb
cld
pop
movsb
daa
xor
push
push
inc
call
inc
sti
jae
sub
ljmp
fidivs
mov
fwait
stc
loop
add
bnd
cmp
loop
push
lea
mov
sahf
js
sbb
mov
daa
push
outsb
push
imul
lret
jnp
test
push
insb
adc
add
inc
sbb
mulb
inc
mov
scas
xchg
inc
scas
dec
arpl
fildl
jge
les
xor
imulb
cwtl
jb
adc
cmc
add
inc
divl
jge
in
xlat
cmp
add
push
adc
cwtl
inc
in
sbb
pop
fiadds
add
xor
jb
xchg
mov
add
lock
aad
cmp
inc
aaa
mov
lods
dec
lcall
pushf
js
cmp
cwtl
addr16
fwait
arpl
xchg
sbb
fmull
mov
ja
inc
sub
lret
iret
mov
ljmp
inc
mov
jecxz
mov
cmp
dec
shlb
mov
mov
mov
daa
jmp
pop
inc
jmp
cmpsb
push
insl
mov
call
stos
push
stos
cs
mov
loop
xchg
imul
and
outsb
push
iret
add
push
inc
decb
push
sbb
lret
mov
push
pop
xlat
roll
pop
out
ret
xchg
cs
dec
fidivs
pusha
push
jge
and
scas
out
xor
adc
push
fldl
jbe
and
or
sahf
gs
push
out
test
mov
std
imul
mov
test
xor
jecxz
outsb
fwait
adc
push
sub
jmp
mov
out
scas
test
and
xor
movl
or
xchg
in
leave
movsb
sbb
sub
sahf
cmp
push
jnp
arpl
movsl
or
imul
adc
jae
dec
fcomps
mov
sti
or
lahf
mov
xchg
mov
mov
addb
adc
daa
xor
lock
jbe
xor
mov
arpl
rcrl
xor
xor
adc
outsl
jecxz
pushf
decb
imul
imul
inc
dec
mov
sub
inc
or
insb
sbb
cli
cmp
es
imul
adc
pop
outsl
dec
fninit
loope
jno
maxps
sarb
or
bound
mov
inc
aad
test
jnp
sub
lcall
test
test
popf
dec
sbb
mov
inc
arpl
rcrl
mov
inc
jl
push
xor
shll
adc
daa
cmp
imul
jmp
notl
sub
inc
fisubl
jo
xchg
cmp
mov
jp
or
insl
sbb
dec
cmp
or
loop
push
jo
cltd
lcall
pusha
test
sub
push
movsb
aam
sub
hlt
mov
insl
mov
xor
rclb
fisttpl
jns
mov
dec
out
fmul
mov
and
mov
push
divl
mov
add
cld
mov
sub
xlat
shrl
or
adc
sub
icebp
pushf
dec
xor
and
mov
xchg
jnp
pop
cmp
int
sbb
sbb
int
push
pop
xor
jnp
pop
test
insl
jg
lcall
xchg
pop
and
xchg
mov
fldcw
shlb
push
sbb
dec
mov
inc
fisubl
xchg
std
cltd
sub
xchg
sub
push
sbb
fs
neg
mov
mov
dec
mov
test
mov
cs
sub
dec
sti
mov
ret
mov
xchg
aas
call
pop
sbbl
sbb
jns
mov
and
loopne
dec
mov
mov
push
xorl
adc
and
push
xor
or
lcall
dec
dec
mov
mov
xchg
add
cltd
js
aam
lods
test
aas
push
cs
dec
mov
pop
mov
call
sbb
jecxz
jb
mov
lcall
and
cltd
iret
mov
shll
xchg
push
out
lea
lods
gs
pop
jbe
js
scas
adc
scas
push
jmp
ss
fildll
sbb
dec
push
daa
aaa
mov
sbb
add
inc
incb
ja
sbb
xor
shrl
cmpl
inc
sub
aaa
jg
fsubs
add
jle
mov
sbb
mov
xchg
outsl
das
mov
pusha
cmpsl
jno
stc
xlat
and
loopne
cs
aad
pop
jb
lcall
xlat
scas
bound
pop
jecxz
mov
std
jns
sub
mov
push
insl
push
insb
loope
mov
fidivrs
jo
ja
in
pop
out
jle
pop
lret
ret
cld
sbb
mov
jl
cmpsl
test
cmpsb
adc
popf
mov
popf
fs
aam
sti
inc
fnstcw
jo
inc
sbb
or
xchg
adcb
cmp
mov
dec
inc
xlat
je
sbb
stos
mov
out
push
lcall
fcomps
mov
ret
push
addr16
push
push
outsb
hlt
pop
mov
lcall
sbb
cmp
adc
mov
cwtl
movb
push
add
imul
xor
sub
adcb
pop
gs
rcll
shrl
pop
mov
insb
push
repz
stos
jnp
cmp
adc
xchg
xor
fldcw
sbb
push
dec
mov
iret
push
xor
stos
xchg
xchg
add
pushw
xchg
sahf
push
push
mov
dec
xchg
test
push
imul
int
ss
mov
and
stos
gs
mov
aad
movsl
inc
movsb
ja
pop
sbb
jbe
jb
mov
adc
shr
addl
sub
mov
iret
jno
and
or
aam
cltd
mov
xlat
push
mov
ja
cmp
lcall
lret
std
jp
mov
xchg
shll
dec
push
mov
mov
les
or
sbb
mov
mov
mov
sub
mov
mov
push
cmp
fldl
jmp
and
fcmove
movsl
movsb
cmp
mov
insb
dec
push
pop
inc
xchg
mov
std
xchg
mov
or
jnp
inc
adc
push
xchg
out
inc
jae
in
push
mov
xor
cmpsb
in
scas
and
imul
lds
and
test
popa
popa
sub
in
adc
sub
mov
das
cmpsb
sbb
push
adc
xor
push
or
lcall
push
test
adc
shlb
js
lret
push
loop
or
jg
enter
pop
inc
shlb
pop
fwait
leave
jle
fistl
add
xor
rcrl
clc
mov
stos
std
int
sub
movsl
push
test
imul
out
pusha
shlb
stos
sbb
aaa
jo
test
mov
movsb
xchg
mov
jae
shrl
cltd
out
xor
lds
movsb
xchg
cmp
sarb
pusha
cmp
hlt
dec
ret
push
pop
orl
in
xor
in
push
jmp
mov
orl
fiaddl
pop
sti
adc
xchg
push
cmp
cmp
cmp
shrb
dec
push
and
add
sti
mov
je
push
lds
mov
outsl
arpl
call
push
mov
mov
push
xor
mov
cli
mov
push
dec
in
inc
xchg
je
stos
inc
ret
ret
xor
dec
dec
iret
mov
mov
mov
push
dec
notb
jg
push
mov
push
push
movsb
inc
pushf
cmp
scas
mov
fisubrs
cmpsl
jle,pn
push
notb
or
jns
sbb
jnp
divb
cmp
mov
or
pop
xor
jae
push
stos
push
mov
test
jb
fs
sbb
cmovge
xor
mov
dec
rclb
inc
les
adcb
in
cmp
jp
push
xor
and
movsl
lret
cmpb
dec
in
out
je
enter
xchg
xlat
dec
sub
jmp
pop
das
sub
dec
dec
adc
mov
mov
jne
add
and
and
in
push
cmp
rcl
sbb
xchg
sub
clc
sub
and
lock
xchg
adc
test
test
pop
outsb
lods
dec
cmp
fmul
data16
jl
push
inc
sbbl
aas
jnp
js
icebp
ljmp
sub
test
lds
in
stos
push
daa
lret
lcall
push
bnd
add
lret
stc
mov
test
rcll
jl
jl
nop
mov
arpl
pcmpgtw
sbbl
lahf
dec
out
cmpsb
out
loope
push
arpl
repz
add
push
and
xchg
xor
loope
pop
xchg
dec
xchg
mov
popa
jne
mov
jns
fidivl
adc
jl
push
mov
push
and
xor
repnz
in
daa
fnsave
sub
in
sbb
ret
sbb
arpl
fwait
push
cltd
jne
sbb
xchg
imul
gs
in
add
jo
and
and
gs
aas
pop
mov
add
inc
dec
out
sub
sbb
xchg
sbb
push
and
jmp
mov
jp
pushf
mov
test
int
add
in
sti
je
jo
repz
test
adc
and
add
mov
in
aad
pop
out
push
xchg
adc
cmp
mov
cmpsb
dec
testb
or
xchg
clc
rcr
xchg
mov
insl
inc
sbb
adc
jo
jg
mov
mov
repnz
sub
add
outsb
xchg
lret
hlt
lods
jl
adc
insl
xor
cmpl
jp
test
ret
pop
int3
loop
hlt
cmp
out
mov
jmp
sbb
mov
mov
sub
outsb
leave
push
cli
xchg
popa
mov
xchg
pop
rclb
xchg
jo
sbb
dec
out
iret
and
push
lcall
int
dec
pusha
cmp
push
lahf
roll
push
sbb
sub
inc
inc
fidivl
and
push
mov
test
roll
shr
jbe
rorb
adc
mov
loop
or
jae
cli
push
inc
mov
jae
lret
ja
insl
les
mov
out
sub
or
loope
arpl
cmp
shlb
sub
aas
mov
jp
insl
mov
loopne
pop
mov
out
test
fwait
in
and
mov
xor
lret
fsub
mov
jnp
inc
gs
mov
add
enter
insl
stos
push
jl
mov
bound
jo
mov
push
icebp
sahf
int3
lahf
jg
and
mov
push
pop
xor
mov
enter
mov
adc
pusha
push
mov
out
or
dec
dec
xor
adc
dec
gs
pop
rcll
jo
fcompl
cmpsb
es
pop
out
das
lcall
mov
lret
xor
xchg
insb
xor
andb
or
xor
or
mov
xlat
int
negl
push
sbb
movsl
flds
sub
into
ljmp
sub
push
and
loope
lret
push
insb
jae
sub
hlt
xor
out
sub
cwtl
sti
push
cli
sbb
cmpsl
and
stc
xchg
and
mov
test
cmp
in
add
xchg
lds
les
cmc
dec
cmp
jbe
jne
mov
loopne
or
cmp
test
and
imul
xor
jo
and
std
fwait
mov
mov
mov
int
cmpb
or
iret
lcall
and
ficoml
adc
cmc
adc
mov
jmp
mov
inc
push
mov
in
lock
sub
bound
push
and
jmp
ja
aam
ljmp
scas
inc
and
mov
iret
cmp
adc
push
sub
shrl
stos
dec
jne
push
cmp
dec
jmp
loop
ja
subb
adc
mov
sbb
jl
push
mov
clc
push
lods
insl
shlb
jecxz
in
or
add
cmp
and
pop
out
imull
lds
std
repnz
adc
push
pop
in
fwait
xchg
aad
flds
in
xchg
adc
adc
hlt
repz
jg
push
sbb
adc
insb
ss
stos
xchg
pusha
mov
rorl
fucomip
adc
inc
testb
lock
cmp
sarb
loopne
and
or
sub
mov
out
add
imul
add
add
dec
and
pop
and
enter
sbb
rcrb
cmp
xchg
inc
fnstcw
inc
cmpsb
adc
sub
sbb
xor
dec
fmuls
or
mulb
adc
jg
ljmp
lods
sbb
mov
or
and
movsl
std
push
add
ljmp
add
sahf
orl
xchg
sub
add
aam
les
aas
xorl
test
aad
std
mov
pop
call
mov
push
imul
shrb
push
sub
cmp
repz
sub
inc
cmpxchg
jg
stos
jecxz
out
imul
or
push
bound
out
jge
mov
clc
lods
insl
sub
or
xchg
push
imul
test
cmpsl
std
pop
jno
inc
sbb
add
subb
dec
jge
or
daa
stc
jnp
mov
rorl
adc
pop
mov
aam
add
rclb
cmc
leave
lock
fstp
sbb
int3
push
enter
call
inc
xchg
rcl
aas
arpl
push
pop
push
stos
aam
cli
cwtl
xchg
faddl
addr16
in
shr
and
pop
in
inc
or
sbb
cmpsl
push
mov
cli
xor
dec
ror
sub
push
js
mov
loope
cmpsl
pop
fnsave
nop
popa
jnp
fisubl
pop
adc
loop
leave
rorl
out
jo
push
aad
repz
aas
iret
scas
or
cmp
push
cmp
icebp
lods
movsb
cmp
or
lock
and
mov
test
and
sbb
cmpsl
test
inc
add
cld
inc
pop
rorl
xchg
push
adc
pop
push
cmp
shl
pop
dec
stos
out
inc
mov
mov
add
sub
cli
push
inc
cmpsl
mov
inc
shll
mov
test
xchg
push
cli
mov
insl
std
gs
in
mov
add
shlb
sub
sbb
xchg
pop
pop
dec
loopne
dec
movsl
cltd
mov
jbe
add
push
out
popa
dec
aam
xchg
xchg
inc
mov
dec
popf
cmpl
cmp
dec
xor
out
cmpsl
pop
lcall
or
bound
popf
test
cld
push
aad
mov
std
pusha
addr16
pop
pushf
cmp
cmpsl
jnp
lods
popf
or
push
pop
aas
lret
jbe
dec
data16
push
insl
lret
pusha
jb
sub
ds
jp
fbstp
in
cmp
lea
inc
aad
lcall
jbe
dec
push
push
pop
in
fs
movsb
push
test
leave
cmp
xchg
pop
orl
xor
mov
adc
hlt
cmp
das
fsubs
and
push
pop
mul
pop
mov
bound
stos
iret
imul
and
mov
inc
imul
pusha
sarl
imul
or
xchg
mov
out
mov
outsl
idivl
test
mov
sahf
inc
rcll
sbb
out
int3
pop
fwait
aam
and
jnp
inc
stos
pushf
mov
and
leave
leave
dec
stc
fildl
fsubrs
mov
cmpsb
mov
mov
out
sar
push
lret
fdivrl
out
pop
dec
fcmovbe
mov
or
mov
push
or
cmp
and
out
rol
gs
mov
inc
lock
stos
push
fwait
test
push
stc
push
or
popa
jmp
repz
dec
loop
and
addr16
or
nop
adc
pop
adc
mov
rcll
adc
add
lahf
aad
shll
pop
xor
nop
out
lret
inc
es
int3
push
xor
mov
and
inc
imul
sbb
shl
sarb
adc
add
adc
jbe
cmc
pop
jne
mov
fimull
pop
cmc
fidivrl
add
mov
push
scas
lcall
xchg
and
mov
inc
sbb
jmp
or
sub
add
or
push
push
lahf
mov
sarl
push
test
and
cmp
pop
loop
out
adc
cs
push
jmp
mov
and
pop
shl
cwtl
xchg
xor
hlt
xchg
dec
cmp
roll
shl
nop
push
inc
aam
cmp
xchg
xchg
xchg
inc
push
pop
and
sub
mov
out
dec
lods
cmp
inc
dec
push
mov
jg
mov
nop
fiadds
and
data16
sahf
xor
loopne
in
ja
jbe
stos
ss
mov
arpl
inc
push
xchg
std
ljmp
add
or
xchg
dec
mov
jmp
mov
aaa
movsl
stc
and
scas
ffree
add
or
xchg
call
mov
cwtl
cwtl
dec
fstl
int3
mov
rorl
xchg
adc
mul
mov
push
fwait
je
lock
xchg
mov
rclb
dec
repz
nop
push
jae
push
pop
inc
fildl
and
insl
or
sub
in
pop
jg
popf
add
jl
jo
push
mov
sub
mov
and
mov
or
mov
pop
cmp
fs
popf
and
fcomp
popf
jno
mov
arpl
sbb
add
fsubrs
jo
cmpsl
xchg
sarl
repz
aaa
nop
mov
pop
pop
or
lea
shlb
stos
and
test
aam
push
sti
dec
les
js
push
sarb
test
and
repz
ss
pop
lods
inc
cmpsb
jb
add
cmp
mov
call
xlat
imul
test
xlat
jb
btr
jae
pop
addl
or
pop
mov
or
dec
cmp
addr16
adc
or
inc
fsubl
xchg
pop
xchg
enter
sbb
xor
ret
push
ffree
dec
addb
loop
cmpsb
dec
mov
sub
cld
cmpl
jp
dec
fwait
push
push
jg
cmp
cs
movsl
push
xchg
push
push
rol
decb
push
add
mov
cmp
or
pop
pop
popa
ja
sbb
pop
lods
sub
je
adc
out
repz
stos
mov
mov
jp
xchg
push
sti
js
inc
mov
std
mov
test
cmc
mov
pushf
fcoml
addr16
pop
call
inc
pop
les
mov
push
scas
enter
inc
mov
pusha
outsb
arpl
jg
sbb
divb
jg
enter
or
push
aad
sbb
push
adc
inc
gs
addr16
iret
movsl
dec
sub
lret
mov
dec
in
xor
loop
push
subps
or
push
xchg
fisubrs
push
cmc
jmp
or
cli
in
icebp
xchg
ds
mov
push
mov
nop
mov
gs
test
pop
pop
mov
or
fnstenv
aad
bound
or
clc
mov
lds
out
or
jno
jmp
jns
outsl
das
pop
jne
pop
pop
dec
mov
cwtl
xchg
dec
mov
mov
mov
fs
rcll
hlt
icebp
repz
daa
xchg
in
fcmovbe
mov
add
loope
push
icebp
cmp
movsb
ljmp
or
scas
pop
aad
fst
idiv
inc
insl
mov
loop
std
stos
adc
and
loopne
pop
xchg
sub
push
jno
jmp
cmp
in
cmpsl
andl
leave
add
and
mov
jo
in
xchg
add
aaa
arpl
lds
mov
lods
xorl
arpl
fbld
leave
fwait
clc
call
push
push
idivb
leave
ljmp
pop
stos
cltd
in
sbb
cmp
lahf
push
push
test
adc
inc
mov
mov
push
mov
aas
stos
lcall
push
sbb
pushf
push
out
mov
pusha
mov
mov
test
jg
mov
adc
sub
pop
popa
mov
jns
push
mov
cmp
rcll
xor
fnstenv
cltd
jecxz
rcr
push
call
bound
push
mov
test
jp
jp
sub
add
and
push
add
inc
jno
add
shll
cmp
stos
mov
stos
xchg
cmp
jl
fs
insl
test
nop
add
sub
aad
push
and
stos
dec
iret
enter
push
imul
mov
dec
mov
inc
and
push
add
push
pop
sar
mov
loop
sti
xchg
int
mov
outsl
add
lret
lock
test
into
popf
lods
int
punpcklwd
push
inc
cltd
rorb
cmp
scas
icebp
pop
test
or
or
sub
sbb
lds
aaa
test
loopne
popa
pop
sub
xchg
std
adc
iret
std
adc
jmp
ja
icebp
orl
cs
icebp
ss
ljmp
in
and
push
stos
mov
and
dec
dec
adc
pop
adc
push
lock
jmp
int3
in
sub
inc
pusha
loope
std
cmp
cli
das
idivb
inc
mov
inc
popa
fsubl
lods
add
mov
insl
jo
mov
out
xchg
in
bound
aaa
mov
rorl
mov
pop
int3
and
cmp
add
push
out
les
xchg
xchg
arpl
bound
cmp
mov
cmp
stos
lock
cmp
xchg
outsl
in
insl
or
add
xchg
fnstsw
imul
mov
pop
sarb
lds
mov
outsb
push
rcll
repz
sbb
and
adc
mov
xchg
outsb
pop
ljmp
test
xor
cld
push
cmpsb
cmp
les
jne
inc
hlt
push
data16
mov
xor
xorb
dec
lret
fisubrs
xchg
dec
mov
test
or
jp
in
cmp
movsb
lods
push
aas
xchg
mov
cmp
push
cmp
add
or
addr16
and
hlt
xor
dec
mov
mov
add
mov
shr
mov
pop
pop
sti
testl
test
sub
sbb
jb
mov
std
jo
out
lods
ss
push
inc
adc
rcrb
sti
jecxz
out
sub
jecxz
and
sahf
negb
fidivrl
fmul
push
pop
sub
arpl
mov
in
stc
lret
ss
cwtl
fdivl
add
orl
xlat
push
jmp
mov
and
mov
mov
jmp
mov
daa
cmp
mov
outsb
mov
in
xchg
push
int
xor
mov
ret
adc
pop
icebp
mov
fadd
aam
cltd
sub
cwtl
jb
sub
inc
mov
out
xlat
out
mov
jno
adc
and
imul
cmp
mov
dec
out
out
add
add
adc
dec
les
xchg
xchg
xor
fwait
das
imul
fimull
fucomip
jns
or
in
fstl
jge
jno
roll
fwait
mov
add
cmp
sbb
and
mov
lcall
scas
or
and
xchg
fdivl
mov
fdivr
mov
icebp
popf
jle
and
mov
add
lock
push
decb
sbbl
daa
mov
cmp
add
hlt
xchg
sbb
mov
lret
push
push
mov
fnstenv
and
in
dec
add
stos
or
xor
leave
push
orb
jl
xlat
imul
std
jmp
dec
xor
jnp
and
mov
and
cmp
add
xchg
mov
lcall
pusha
cmp
inc
xor
popa
les
aas
push
stos
add
nop
aad
imull
lds
jl
mov
pop
lahf
cmpsl
fisttpll
cmp
sbbb
inc
movsb
fstpl
cltd
enter
mov
add
dec
dec
and
jae
jmp
shrl
pop
lcall
ret
cs
daa
out
add
pop
sbb
out
xchg
adc
rorl
adc
cmpsb
and
divb
or
inc
pop
aaa
push
imul
into
jle
nop
push
mov
sub
xchg
sbb
fsubrs
inc
fwait
cltd
cmp
add
xchg
xchg
jmp
add
adc
add
push
sbb
mov
lahf
adc
test
mov
mov
cli
jge
xchg
subl
adc
fsubr
daa
and
out
shlb
dec
adc
insb
test
shr
sbb
out
fdivrl
and
mov
sub
mov
shr
xor
xor
test
push
cmpsl
mov
or
mov
xchg
cmpb
jno
mov
lods
pop
loope
test
mov
jb
xor
mov
add
pop
int3
push
fisubrs
insb
mov
xchg
out
xor
shl
fnsave
mov
repz
test
push
xchg
fistps
into
clc
arpl
add
addb
push
pushf
adc
add
test
fcomip
add
xchg
mul
dec
pop
pop
xchg
dec
fisubl
sbb
and
stos
arpl
or
mov
mov
ficoms
cld
out
adcl
fnstsw
jecxz
jge
loopne
fstpt
ss
popa
lret
stos
lods
in
or
or
lcall
push
push
sub
mov
push
add
mov
xor
orl
call
or
leave
xchg
insb
jno
xchg
jnp
or
pop
mov
or
aas
sub
inc
mov
daa
cltd
mov
or
jl
sub
rolb
daa
inc
out
adc
pop
dec
mov
mov
sub
jno
pop
movsb
and
enter
dec
daa
sbb
mov
test
std
das
jae
add
mov
mov
adc
fwait
add
sbb
loop
popa
iret
push
fldenv
aad
dec
jmp
xchg
push
stos
dec
fidivrl
cmpsb
icebp
jge
rcrb
inc
rorl
in
xor
dec
in
inc
mov
jns
loop
adc
sti
jno
orb
dec
push
inc
movsl
test
dec
mov
cmpsl
and
mov
loop
iret
mov
fdivrs
js
hlt
pop
pushf
cld
push
stc
add
push
lret
dec
js
addr16
in
ljmp
mov
push
lea
push
icebp
push
xchg
stos
or
xchg
scas
std
inc
jmp
xor
inc
inc
dec
xchg
xchg
jle
push
sub
add
or
cmp
and
test
cmpsl
cmp
pop
sbb
cmp
bound
and
or
lods
adc
xchg
mov
sbb
sbb
and
mov
mov
es
aam
inc
cmp
ja
jae
sub
cmp
stc
sti
in
sub
jmp
scas
fwait
mov
insl
cwtl
jle
add
dec
sahf
mov
sub
add
arpl
xor
jg
imul
and
push
dec
mov
popf
push
jno
dec
adc
aad
jg
mov
imul
shll
mov
add
xor
loopne
add
adc
int
pop
jno
int
jle
add
lret
xchg
stos
mov
hlt
fs
lock
fisttpll
aas
or
lret
test
mov
cltd
ja
jae
dec
leave
out
xor
xchg
insl
ja
dec
scas
fisubs
sub
into
rcl
mov
sbb
ret
popa
xchg
sub
clc
pop
or
stos
jle
jge
xchg
lret
sub
pop
rcr
push
jno
jae
cltd
adc
popf
sub
bound
mov
adc
lret
mov
cwtl
pop
and
or
filds
les
test
sub
cmpsl
dec
jo
in
into
xchg
push
add
cmc
dec
ror
sahf
out
push
mov
jno
enter
jae
cltd
dec
add
adc
mov
dec
push
ret
lea
je
dec
in
lods
xor
imulb
pop
popa
dec
xor
cmp
mov
fldl
clc
xor
lods
push
and
shll
push
and
cwtl
mov
pop
hlt
add
jnp
inc
fadd
aas
mov
insb
mov
test
mov
sbb
outsb
mov
rolb
cwtl
xchg
dec
rcll
sti
loope
inc
insb
arpl
movb
int3
xor
sbb
test
pop
icebp
test
adc
or
sub
mov
push
inc
cltd
mov
mov
dec
pusha
gs
outsl
stos
sahf
aaa
insl
push
sub
scas
cmp
pop
jne
or
loope
cmp
frstor
lcall
andb
add
push
mov
sub
xor
int
xor
cmpsl
and
dec
fscale
xor
aas
stos
repnz
fs
mov
sbb
inc
xchg
xor
jb
add
in
aam
inc
jmp
out
jp
scas
je
dec
mov
xorb
mov
out
dec
sub
je
mov
inc
fadds
popa
loope
into
dec
xchg
mov
out
cmpb
xor
daa
jnp
stc
into
cld
stc
add
xor
mov
sar
cmp
dec
dec
aas
add
ljmp
imul
outsl
xchg
push
out
shll
mov
pushf
mov
stc
mov
adc
adcl
mov
mov
xchg
sbb
out
scas
adc
adc
add
dec
addr16
cmp
mov
xor
icebp
xchg
cmp
cmpl
jne
and
nop
xchg
push
les
loopne
sub
movsb
dec
call
lret
leave
mov
adc
and
and
enter
stos
imul
sbbl
shll
movsb
jne
test
sub
or
dec
dec
cmc
jns
xchg
ss
dec
sbb
sbb
movsb
aad
fdivs
xor
ljmp
push
xor
stc
insb
lock
fists
aaa
sbb
adc
inc
in
test
shll
outsl
dec
xchg
repnz
push
or
adc
outsl
out
add
xor
call
pop
cmp
or
mov
sub
movsb
fwait
mov
sbb
add
test
sar
pop
xor
fstps
cli
push
xchg
cld
clc
popf
inc
insl
adc
mov
ja
and
cmp
outsb
movsb
push
cmp
push
out
in
scas
xchg
repz
mov
ret
ss
dec
and
sub
cmp
arpl
enter
push
mov
ljmp
cs
jp
out
aaa
pop
cs
pop
add
mov
push
repz
repz
push
and
orb
jns
std
addr16
adc
jnp
push
mov
push
or
mov
je
int
out
mov
dec
das
sbbl
adc
movsb
pop
add
fimuls
pop
aad
rcll
cmp
and
xchg
cmpsl
neg
adc
adc
test
push
mov
in
sti
leave
mov
lods
add
aad
mov
cli
cs
mov
jl
mov
xchg
outsb
scas
int3
mov
cwtl
mov
and
inc
dec
shrb
jns
xor
ljmp
jge
sub
adc
lock
es
cmc
inc
lods
dec
jo
or
add
xchg
jo
sbb
cli
inc
push
sti
pushf
enter
xchg
jp
aaa
add
fcomps
pop
cmp
test
adc
js
aas
xor
sbbl
das
data16
mov
test
ds
add
push
mov
sar
cmpsb
pop
call
pop
pop
mov
or
gs
cmp
cld
mov
dec
jbe
or
pop
int3
dec
int3
fnsave
roll
ja
fcomps
bound
inc
jmp
add
xchg
ret
dec
icebp
pop
fstpl
cld
loop
mov
jb
add
push
mov
scas
cmpsl
mov
dec
mov
or
mov
inc
or
push
lret
mov
jecxz
xor
dec
insb
pop
lcall
fstps
mov
bound
stos
repnz
pop
cmpsl
outsl
cmp
mov
sub
clc
jg
xor
fisubrs
mov
loope
mov
sub
cltd
fnstsw
adc
lcall
fs
mov
in
fs
mov
fldt
es
mov
sbb
lods
pop
jecxz
std
fucomip
sti
inc
inc
jge
in
xchg
outsl
enter
mov
icebp
xor
inc
cmpsl
sbb
js
mov
jg
mov
inc
jmp
push
cld
cwtl
in
insb
xchg
ja
outsl
adc
loopne
xlat
inc
inc
and
jae
mov
jbe
popf
cmpsl
xchg
xchg
scas
rorl
add
bound
sti
inc
or
push
lahf
mov
pop
push
rcrb
lods
inc
rcll
jb
test
cmp
das
lcall
loop
adc
je
xor
mov
les
inc
jmp
lret
shrl
jl
test
sub
fwait
dec
std
or
movsl
xor
push
movsl
pop
xlat
push
jne
jmp
std
movsb
pop
add
cltd
hlt
jo
dec
ret
xor
test
sbb
test
outsb
dec
sahf
mov
or
movsb
xchg
ljmp
and
enter
push
add
jnp
cli
pusha
push
xchg
mov
test
dec
xor
test
std
push
loope
cmp
jb
inc
test
rorl
xchg
xchg
sbb
lret
jne
add
jp
fwait
enter
out
rorb
cmc
faddl
dec
inc
mov
pop
gs
into
cs
push
or
sub
add
inc
gs
pop
stc
ds
rcrb
shll
lea
movb
xchg
movsl
stos
mov
fdivrs
sub
or
dec
enter
test
das
sub
pop
loope
mov
xor
fsubl
mov
les
rcl
nop
bound
lds
xorb
and
sub
fmull
and
shlb
popf
and
mov
mov
divb
data16
aas
add
sub
sub
or
jno
sub
adc
repnz
stc
push
movb
adc
mov
mov
imul
xchg
sub
gs
dec
and
loopne
loopne
in
jae
xchg
add
fsubrs
jp
push
out
xchg
jbe
jle
fsubrs
inc
movsl
sub
jbe
pop
inc
mov
mov
or
inc
fsubl
ss
jae
stc
push
stos
inc
into
fimuls
add
fsubr
scas
out
xchg
rolb
shrb
out
out
movups
mov
decb
mov
je
adc
mov
rcl
mov
stc
das
mov
add
ret
inc
dec
sbb
daa
jbe
roll
add
notl
lret
adc
cmp
aad
xor
pop
aad
fcmove
je
mov
mov
loopne
xchg
pusha
add
rorb
je
add
adc
jne
scas
fidivrs
add
shll
add
aad
or
insb
inc
push
push
scas
mov
sbb
mov
cmp
cmp
cli
and
add
pop
mov
ss
shlb
cltd
inc
enter
lret
sub
sub
xorb
and
xor
cmpsb
sti
sarl
imul
and
pop
das
lcall
int
add
cmp
aad
lods
iret
xchg
out
dec
ss
inc
jg
adc
daa
inc
xchg
xchg
mov
add
jo
sbb
or
stc
cmp
fldcw
mov
jmp
mov
sub
pop
fs
add
jo
mov
xor
mov
imulb
jns
test
cmp
inc
cmc
xor
das
push
and
popa
inc
push
xor
and
add
mov
rcl
mov
and
push
mov
in
mov
shr
xchg
mov
popf
mov
loopne
lret
sti
adc
push
sub
jp
cld
inc
jo
mov
ret
xchg
mov
hlt
pusha
add
inc
decb
ljmp
mov
je
imul
out
insb
int3
mov
bound
stos
nop
popa
xlat
call
mov
shr
push
int3
pop
or
sahf
lret
ss
mov
mul
in
cmp
add
in
add
push
jge
sub
add
cmpsb
dec
mov
sbb
mov
lret
jno
pop
push
xchg
in
xor
aad
mov
sub
pop
adc
fcompl
pop
in
sbb
fwait
enter
aaa
mov
ds
pop
stc
adc
xchg
call
dec
sti
int3
and
bound
cwtl
jbe
aaa
pop
imul
mov
and
iret
ret
sub
sub
test
add
std
cmp
in
call
hlt
cmp
icebp
add
lret
rcrl
je
mov
mov
add
push
cld
fdivr
lods
push
mov
fstpl
pushf
xchg
stos
lea
mov
enter
mov
sarl
lret
repnz
loope
adc
inc
pop
subl
leave
push
add
xchg
pop
mov
test
mov
xchg
movsl
pop
imul
test
xchg
push
xor
adc
out
ds
insb
cmp
and
or
ja
test
lahf
fldl
jg
les
xchg
mov
xor
into
pop
cmp
cmc
dec
test
repz
fsub
rcll
ljmp
ss
mov
cli
pop
mov
jg
pop
push
xchg
push
ret
mov
xchg
inc
cmp
inc
push
inc
or
lods
cwtl
push
in
mov
mov
dec
das
dec
push
dec
in
jecxz
cmpsb
mov
cmp
sbb
int
rcrl
notb
fbld
cmp
sub
imul
jl
push
test
adc
adc
lret
jns
pop
pop
push
imul
roll
jmp
bound
std
addb
sti
cmpsb
or
or
testl
daa
lock
xor
and
pushf
dec
dec
dec
mov
mov
mov
fsubrl
and
jecxz
and
sbb
test
inc
ss
fcomps
cltd
xchg
jecxz
pushf
mov
mov
mov
lea
add
sub
cmp
cmp
jno
les
or
fcoml
sbb
outsl
mov
pop
adc
cmp
jmp
sub
push
push
stos
jns
add
test
movsb
fucomp
cmp
mov
lea
push
adc
loopne
ja
out
dec
jne
pusha
or
add
fs
cmpsb
imul
xlat
fidivs
loope
xchg
add
jmp
movsb
mov
psubw
push
inc
jle
add
xor
pop
cmp
mov
pop
xor
aas
enter
movsb
cmp
push
imul
aaa
push
aad
xor
movsl
pop
inc
push
jle
les
and
cmp
jge
je
ret
lods
shll
push
sbb
stos
or
sbb
mov
push
cmp
add
lea
xorl
fstps
sbb
repz
mov
mov
inc
add
fldt
repnz
or
jnp
pusha
xor
stos
lods
mov
bnd
sbb
dec
stos
clc
adcb
dec
int
lcall
sbb
cmp
jg
pop
call
mov
add
jle
mov
movsb
pop
cmpsb
xchg
notl
adcb
rorl
add
iret
out
ret
sbb
pop
into
xor
cmpsb
pushf
fwait
sti
cmp
aad
push
push
idivb
cli
xchg
ja
fisttps
stc
fdecstp
insl
pushf
scas
jns
cmc
hlt
scas
clc
adc
fadds
mov
mov
mov
and
aas
sbb
xlat
cmovg
cmp
xchg
out
add
test
xorps
cmc
jae
pop
sbb
das
push
lret
cmp
jo
mov
ret
xchg
jge
or
mov
xlat
dec
push
mov
and
pop
outsl
mov
cltd
enterw
loope
dec
xor
lods
lods
sub
or
pop
loop
xlat
mov
pop
mov
sbb
aas
repnz
or
dec
mov
daa
sub
inc
and
xchg
xchg
pop
cmpsl
adc
fcompl
aaa
and
cs
leave
cmp
jmp
and
test
inc
adc
lds
call
xchg
xchg
mov
add
test
lret
pop
movsl
mov
std
fbld
jne
cmpsl
lea
add
cltd
scas
stc
out
jmp
adcl
outsl
movaps
dec
mov
sbb
mov
lock
pop
cmp
or
push
in
add
pushf
shll
stc
sub
adcb
nop
pop
jno
loope
pop
lahf
andb
enter
xor
add
push
dec
xor
repz
inc
out
sub
mov
dec
out
pushf
sub
push
popf
inc
dec
cwtl
jb
dec
fstl
cmp
stc
jno
ss
scas
push
xchg
aas
jle
and
adc
adc
add
lock
out
pusha
rcrb
mov
std
dec
xchg
lret
inc
cmpl
addr16
xor
fldcw
mov
jp
popf
xorl
jne
roll
inc
fcmove
scas
or
bound
loopne
sbb
cmp
xlat
sbb
daa
daa
hlt
cwtl
push
xchg
push
in
pop
sbb
pop
cmp
mov
cmp
cwtl
cwtl
sahf
ret
xchg
out
sbb
lods
ficoml
mov
cmpsb
mov
xchg
pop
sbb
pop
mov
addr16
jp
adc
cmp
rolb
jg
stos
insl
mov
sbb
push
rorb
or
push
shll
inc
jge
lea
adc
in
cmp
push
push
int
leave
aas
cld
pusha
or
jecxz
push
insb
cmp
fwait
cmp
xor
dec
push
and
loope
sub
jno
sahf
lds
dec
mov
xchg
xor
inc
xor
adc
add
in
add
test
mov
mov
sbb
mov
sub
xchg
sub
es
sbb
adc
popa
jno
add
xor
push
pushf
imul
adc
pop
rolb
or
lods
mov
loopne
cwtl
rcll
and
pop
mov
and
test
mov
outsl
pop
ja
out
xchg
sbb
inc
jmp
add
adc
fdivl
shll
jns
mov
jecxz
lcall
fcoms
jle
push
fnstcw
mov
inc
adc
pop
pop
jg
pop
cltd
nop
cmp
popa
inc
cmp
ljmp
lret
or
xchg
and
mov
arpl
js
dec
popf
js
stc
xchg
pop
out
jmp
loopne
add
lods
mov
xor
ljmp
adc
push
into
pop
mov
add
insl
imul
fisttpl
int
out
mov
push
subl
in
xchg
fstl
xlat
or
jnp
xlat
or
cmp
sub
jb
dec
sub
dec
popf
push
cltd
out
movsb
xchg
push
aaa
push
or
push
mov
jne
into
push
mov
dec
into
dec
xchg
mov
add
mov
adc
std
xor
xchg
scas
into
mov
mov
out
mov
fsubrs
nop
stc
xchg
cld
jmp
xchg
ror
addr16
pop
jae
pop
jge
mov
pop
fisubrl
mov
lret
mov
je
inc
mov
scas
push
aad
inc
nop
out
sub
cli
sub
dec
cmpsl
jp
xchg
das
push
repnz
ds
sub
lea
out
push
inc
testl
stos
pop
push
jmp
mov
stc
into
fs
adc
pop
sbb
arpl
fcmovb
mov
push
cmpsb
xor
js
pop
add
or
mov
enter
loopne
scas
scas
dec
lods
xchg
arpl
inc
rcrl
jne
xor
xchg
and
xchg
loope
adc
sbbb
and
pop
fnstcw
push
sbb
jge
inc
aas
sub
push
shl
repz
fmull
clc
rcrb
push
sbb
mov
movsl
imul
sbb
inc
inc
and
jo
pop
hlt
int3
adc
push
mov
fmull
push
or
xchg
pop
jns
jmp
cmp
insl
in
xchg
dec
mov
dec
test
sti
push
inc
xchg
fincstp
enter
sbb
fisubrl
push
jmp
adc
sbb
lods
ss
movsl
and
insb
call
imul
push
test
cld
xchg
push
rcrl
pop
dec
sbb
call
into
out
test
mov
and
cli
sub
xchg
and
into
dec
sarb
xchg
dec
insl
xchg
sahf
popa
pusha
icebp
inc
jmp
imul
jp
fistpl
or
insb
xor
mov
sbb
negl
pop
and
mov
mov
imul
fsubrp
inc
inc
cwtl
sub
lods
push
push
mov
icebp
nop
jbe
lret
and
adc
adcl
fs
and
cwtl
jecxz
mov
or
call
push
ret
xchg
push
or
mov
or
jle
js
pop
mov
pop
lods
inc
out
in
mov
jl
push
xor
mov
leave
mov
push
arpl
cmpsb
sahf
sti
cmp
inc
sub
dec
stos
xchg
stc
pop
dec
jb
je
push
add
push
ds
test
enter
cmpsb
jmp
or
cmp
mov
or
and
test
mov
idivb
es
cltd
cmpsb
loop
dec
mov
js
adc
mov
add
pop
fsubrl
in
inc
es
jge
pop
and
add
dec
xlat
fldl
mov
orb
divl
dec
out
fidivl
push
loope
hlt
test
jg
push
iret
shrl
ss
imul
call
insb
cmp
stc
mov
cmp
fsts
pop
sbb
pop
pop
inc
inc
aad
icebp
adc
xchg
pop
or
fs
inc
add
stos
jl
cmp
dec
pavgw
ror
out
mov
jns
inc
call
push
lock
fprem
mov
movsb
or
jp
faddl
lret
or
jp
xor
jo
or
adc
sbb
lods
push
loop
lds
sbb
or
dec
xor
dec
dec
push
push
ret
mov
push
mov
fcoms
shll
icebp
ljmp
out
insl
pop
dec
adc
das
cmp
add
jmp
cmp
outsl
sbb
jp
mov
pop
mov
inc
mov
pop
mov
aaa
or
data16
fwait
shr
in
fidivrl
js
fildl
dec
gs
mov
loop
cmc
jp
fadds
fst
push
mov
xchg
mov
decb
dec
test
inc
out
mov
add
inc
inc
xor
push
mov
imulb
rorl
xchg
lret
and
sub
or
pop
sub
push
sub
test
clc
adc
jae
push
sub
jo
adc
test
lock
xor
imul
and
inc
mov
dec
imul
push
loop
adcb
add
hlt
nop
aam
inc
adc
test
nop
in
and
adc
ss
xchg
imul
jb
mov
les
mov
pushf
mov
mov
rcrb
jb
pushf
idivb
mov
inc
lret
decl
incb
movsl
sub
data16
test
cltd
das
or
dec
ret
adc
or
and
pop
mul
mov
push
pop
test
int
aaa
push
inc
movsb
shl
sub
lahf
mov
sub
fadds
flds
push
push
and
ja
aam
jp
sub
test
es
add
mov
fildll
push
hlt
mov
in
out
in
dec
in
or
addr16
jo
mov
lea
das
jo
popf
je
mov
imul
inc
nop
sub
lods
cmp
js
and
and
cld
das
out
hlt
cmp
imul
icebp
adc
mov
out
in
add
mov
mov
insb
sahf
dec
jb
sub
cmc
fndisi(8087
pusha
xchg
out
sbb
inc
inc
std
pop
mov
ja
jb
sahf
notl
and
add
inc
xchg
pop
shrb
scas
lea
mov
pop
cld
push
push
ja
pop
lds
loope
or
pop
sbb
test
fwait
mov
jb
subb
nop
dec
pop
divb
repz
adc
in
jbe
fnsave
rol
scas
shll
push
cwtl
dec
xor
sbb
xor
jns
mov
bound
inc
mov
or
jecxz
sbb
xlat
push
cvtps2pi
adc
mov
dec
lock
dec
les
sbb
mov
int3
xor
mov
xchg
sub
mov
sbb
adc
fwait
sub
test
lods
mov
mov
xchg
shl
ds
cli
lcall
call
out
jbe
loope
inc
ss
jnp
mov
xor
or
jp
sbb
jg
outsl
dec
pusha
dec
shlb
popf
xor
or
push
push
jmp
pusha
pop
dec
in
push
or
rolb
insl
inc
inc
sbbb
in
and
scas
jnp
std
mov
mov
and
pop
stos
dec
fs
mov
push
arpl
mov
push
or
dec
jg
add
or
xchg
add
mov
add
int
mov
sbb
ret
lods
pop
push
or
mov
cli
jae
dec
adc
sti
rcr
sub
pop
cmp
pop
add
loope
jmp
inc
fwait
cmc
lock
push
push
imul
into
scas
icebp
adc
ss
shll
sbb
rcll
bound
push
stc
icebp
mov
push
aas
loop,pn
stc
fisubs
dec
sbb
lcall
push
add
xchg
out
mov
add
and
mov
in
adc
inc
push
mov
lret
xor
test
arpl
dec
shll
popf
xchg
test
cs
jecxz
dec
scas
sbb
pusha
fs
pop
cmc
sub
xlat
cmpb
sbb
notl
sbb
cwtl
rcrl
sbb
jl
inc
decb
cld
jp
inc
loopne
xor
add
xlat
push
mov
unpckhps
lea
xor
sub
mov
add
xor
mov
xchg
gs
pop
mov
adc
test
adc
xor
outsl
lcall
jb
adc
iret
push
push
xchg
lret
test
fisttpl
or
or
fwait
xchg
pop
dec
cld
inc
std
in
mov
sti
pushf
insb
jne
cmc
mov
dec
pop
sahf
mov
mov
insb
cmp
xor
add
jge
cmp
jb
inc
icebp
dec
popa
sahf
mov
aam
xchg
sub
pop
stos
jno
jns
mov
adc
mov
mov
cmp
xchg
insb
fistl
adc
lods
sbb
je
mov
mov
xor
add
sub
cmp
mov
leave
or
mov
test
repz
xchg
ja
xchg
xor
daa
lea
cmp
pop
lret
dec
jmp
in
aam
in
leave
gs
andl
sub
jnp
inc
rolb
repnz
dec
gs
and
imul
jae
popa
scas
or
push
test
pop
insb
mov
cmp
imulb
jecxz
inc
leave
sarl
and
andb
fstpl
mov
mov
decl
or
pop
in
sub
jecxz
rorb
out
outsb
cmp
leave
in
fisubrl
lret
dec
ljmp
ja
test
add
out
loope
stos
push
pop
aad
mov
dec
lock
inc
push
pop
jnp
push
mov
cld
fistpl
imul
mov
out
pop
test
lret
shlb
mov
out
xchg
popa
inc
scas
push
pusha
jcxz
daa
in
xchg
lcall
mov
sahf
daa
mov
adc
movhps
pusha
and
loopne
shll
out
iret
les
shl
add
or
push
mov
push
sub
int
iret
cld
cli
jge
cmpsl
jg
stos
std
xor
in
jns
mov
mov
mov
xchg
pop
cmp
inc
push
pusha
cld
repz
insb
sti
add
xchg
xchg
js
aad
jge
sub
add
call
mov
call
pusha
sub
jns
leave
lret
or
dec
inc
les
rcll
xor
pop
and
std
and
xor
enter
sub
push
in
or
lods
or
test
fwait
out
mov
movb
loopne
mov
inc
stos
div
adc
lock
and
imul
ja
imul
sbb
and
stos
mov
or
sbb
push
fists
sub
push
lods
sub
movsb
push
or
roll
dec
jo
sbb
int
inc
dec
les
pop
and
shrd
add
lahf
xorl
fsts
mov
mov
dec
push
out
ficoms
add
sub
sub
scas
rolb
mov
and
enter
sbb
movsb
lret
mov
inc
imul
mov
sub
fwait
imul
mov
mov
pushf
into
fs
mov
in
inc
xlat
pushf
lock
sahf
xchg
data16
in
cmpsb
aam
cmp
sub
lock
faddl
xor
jecxz
daa
inc
rolb
pop
and
push
sbb
arpl
jle
shl
push
idivl
xor
pop
lahf
mov
pop
cld
xor
jle
scas
push
mov
imul
cli
sbb
add
and
repz
in
notb
leave
pop
mov
push
cwtl
out
pusha
xor
imul
insb
popa
jo
pop
paddusb
ror
mov
pusha
into
dec
ljmp
xchg
fstps
cmc
xor
xchg
jbe
pushf
xchg
fs
imul
push
pop
lea
add
dec
jbe
pop
inc
sub
addb
xor
adc
test
lea
pop
jae
arpl
inc
jge
into
movsb
fwait
add
mov
fisubl
dec
or
es
das
data16
mov
stos
ja
or
repz
lods
add
mov
subb
mov
gs
cwtl
insb
mov
xchg
ja
pop
adc
xor
pushl
test
adc
in
insb
push
mov
dec
push
push
add
outsl
lret
lret
pop
pop
cld
or
fimull
aad
adc
sub
mov
or
popa
or
lahf
out
es
jge
insb
inc
xor
rolb
in
pop
gs
sub
les
jo
imul
mulb
loop
mov
addb
mov
xor
popf
popw
lcall
js
xchg
dec
push
mov
sub
sub
cmp
xor
add
gs
pushf
xchg
pop
int
scas
jg
iret
fwait
cmp
push
in
insl
ljmp
lcall
xchg
dec
dec
pop
jmp
mov
stos
or
arpl
xchg
pushf
shl
pop
in
pop
sbb
xchg
mov
xchg
in
add
mov
jae
or
dec
test
adc
xor
test
repz
mov
fcmovb
in
cwtl
aam
in
fdecstp
shl
movsb
icebp
in
js
xor
xor
mov
adc
xlat
into
push
dec
dec
mov
pop
outsb
inc
push
xor
cltd
cmp
pop
mov
shl
push
fbld
stos
or
sti
aas
and
aaa
je
mov
cmpsb
mov
leave
xchg
ret
fdiv
insl
repz
ret
and
arpl
and
loop
push
fwait
inc
adc
or
enter
xchg
mov
pop
cmp
cmp
adc
mov
mov
lahf
int
cmpsl
scas
push
in
outsb
in
int3
test
push
sbb
sbb
pop
jno
orb
and
mov
jno
mov
xchg
mov
jnp
push
aad
bound
repz
add
leave
mov
dec
add
out
inc
or
cmp
xchg
xlat
or
adc
icebp
sbb
push
out
cmpl
das
dec
xchg
pop
push
and
inc
mull
gs
xor
cmp
push
and
or
repz
fcoms
jmp
test
pop
shrl
pop
sub
insb
ret
daa
dec
cmc
pop
xchg
dec
dec
shl
js
mov
fwait
scas
inc
jb
jge
fidivrs
dec
popl
hlt
hlt
dec
sbb
push
cld
cltd
aad
adc
mov
imul
call
mov
popa
adc
pop
mov
mulb
adc
insb
aad
insb
loope
scas
dec
mov
dec
lret
mov
jle
jnp
jge,pt
or
xor
push
mov
mov
pop
aam
pop
mov
dec
xor
outsl
popl
out
out
mov
mov
in
pusha
arpl
mov
movsb
testb
int3
sbb
mov
ss
in
xchg
fwait
xor
cld
lret
mov
or
mov
lahf
ss
je
cmpl
repz
push
hlt
mov
inc
mov
in
fs
push
and
push
sbb
ds
jns
and
lahf
xchg
sub
gs
testl
aam
or
lcall
cmpsl
mov
outsb
mov
fisttps
or
ljmp
and
sub
sahf
adc
fisubl
insl
ret
sbb
ret
insb
add
push
je
subb
out
xchg
adc
xor
mov
push
fimuls
mov
add
pop
daa
imul
push
cmp
mov
test
aas
add
adc
xchg
aam
pop
imul
pusha
addr16
cmp
fldt
out
pop
stc
xchg
xchg
test
xchg
pop
pop
out
fwait
lea
int
cmp
lcall
addr16
add
sbb
imul
add
shll
sub
jo
pop
test
sub
insl
inc
jmp
jecxz
xchg
adc
aaa
sbb
pop
pop
pop
inc
cmp
sbb
insl
jp
mov
or
adc
pop
sub
jge
rorb
mov
cmp
adc
sbb
cmp
and
push
rcll
push
mov
and
les
inc
inc
mov
dec
dec
shlb
lret
fdivs
data16
nop
test
push
mov
mov
ljmp
outsl
mov
loopne
roll
loope
ret
or
cli
sbb
daa
inc
jecxz
insb
in
jno
pop
lock
sub
xchg
shl
lock
in
adc
sarl
out
mov
mov
jbe
in
stc
jbe
add
inc
jo
test
outsl
sub
cmp
iret
test
xchg
dec
cmp
xchg
mov
and
mov
fisubrs
jno
jl
fiaddl
lret
test
aaa
adc
fmull
add
and
aaa
les
add
ficomps
inc
jno
aas
iret
mov
fdivrs
dec
cmp
push
mov
jle
push
in
pop
pop
jb
cmp
jmp
mov
pushf
ret
out
cmpsl
push
mov
jns
popf
stos
mov
inc
or
gs
jge
shll
mov
or
mov
pop
push
arpl
mov
fidivrl
repz
mov
aaa
jns
cmpsb
pushl
sbb
cmp
das
loopne
loopne
sbb
and
mov
inc
inc
jbe
shr
mov
addb
add
sbb
jno
xor
std
xor
sub
hlt
insb
das
mov
push
sub
jle
xor
pop
pop
subb
icebp
fwait
and
xchg
stc
pusha
int3
jl
add
inc
ds
xlat
and
mov
out
test
add
sbb
xor
int
xchg
addr16
repz
jmp
or
pop
lret
aaa
iret
sub
scas
pop
adc
xlat
ds
jecxz
jmp
mov
pop
or
mov
xchg
mov
mov
xchg
dec
mov
je
aad
mov
add
leave
aas
or
test
sub
dec
das
jle
repz
mov
or
pop
jmp
imulb
cmp
jnp
xchg
dec
mov
inc
out
cmpb
mov
addr16
fs
leave
inc
cmc
call
mov
or
jns
dec
fcmovnb
mov
lret
imul
xor
push
insl
iret
mov
mov
push
pop
xor
in
xor
mov
sahf
or
test
xchg
lds
in
stos
sbb
sbb
cmpsb
popf
xchg
outsb
push
rcll
cmp
imul
pusha
iret
pop
dec
ljmp
xlat
jae
jns
and
push
movsb
hlt
in
mov
sarl
cld
loopne
jns
stos
mov
jmp
lret
xchg
shrb
sbb
leave
adc
pop
and
sbb
std
mov
sub
in
aas
pushf
in
lcall
lret
mov
aam
xor
scas
mov
rcrb
mov
imul
sbb
cmc
or
push
jg
out
cmp
adc
xor
int
jg
mov
pop
jmp
ja
ss
into
mov
pop
shll
cmp
xorb
sbb
mov
xor
repz
int
mov
push
out
push
pushf
int3
or
outsl
mov
and
aad
jno
ja
das
cmp
lret
mov
xchg
mov
push
in
pop
adc
ja
mov
pop
mov
notl
in
out
adc
push
push
pcmpgtb
mov
cmp
addr16
mov
dec
fstps
mov
jg
sub
sub
lds
nop
sbb
fcmove
idivl
shl
lock
mov
dec
inc
enter
adc
aaa
sbb
push
push
or
inc
jg
push
cmp
loopne
mov
dec
fs
sti
and
or
lock
xor
pusha
and
mov
scas
cmp
and
sti
cld
xor
or
ss
jbe
dec
popa
jmp
pop
mov
add
daa
inc
sbb
and
mov
mov
mov
jp
push
mov
and
ficoml
or
pop
jge
push
and
dec
fdivrl
cltd
or
mov
mulb
sarb
imul
mov
dec
lahf
sbb
aas
js
pop
pusha
out
aaa
data16
xlat
fcomi
ss
lret
dec
and
out
jmp
xchg
or
cli
mov
mov
mov
push
xor
fstl
mov
rcl
jmp
mov
mov
xor
and
push
rcrb
mov
push
add
int3
xlat
add
pop
inc
jmp
add
fcoms
inc
movsb
arpl
xchg
jns
fiaddl
out
je
jns
jns
addl
xor
cmp
lock
xor
andl
jns
fstps
xchg
or
ret
jmp
pop
loope
xor
pop
je
scas
adc
add
sti
xorl
pusha
outsl
sbb
jb
mov
shrl
and
out
iret
pop
shl
dec
push
inc
cmpsb
insb
mov
xor
sbb
pushf
jp
xchg
js
push
sti
ret
jno
add
sbb
pop
insb
cmp
cmp
cmp
pop
cmp
adc
add
sub
dec
movsl
insl
das
out
out
movsl
out
xlat
mov
fcmovnbe
sub
fmull
sub
jne
nop
sub
jg
adc
mov
add
aaa
or
add
push
sub
pop
enter
jecxz
xchg
or
adc
dec
je
popf
dec
fistpl
jmp
mov
add
mov
les
shlb
jo
pop
and
mov
ficompl
push
not
and
sub
leave
call
loope
lock
lahf
push
lret
movl
mov
or
lods
xor
pop
inc
out
cmp
xor
xrelease
iret
mov
sbb
addb
add
push
int3
aaa
inc
fldl
fldcw
loop
mov
inc
xchg
inc
leave
fs
push
inc
subl
xor
lcall
xchg
aas
movsb
stos
and
les
stc
loop
outsl
inc
popl
push
add
mov
ror
adc
ds
rol
pop
or
cs
lods
lock
dec
dec
std
outsl
pop
out
cmpsb
fidivl
mov
mov
mov
cmp
mov
pop
sub
in
sbb
imul
pusha
movsl
into
into
shrl
mov
jge
adc
in
pop
cs
mov
addr16
mov
pop
stc
int3
sbb
sahf
mov
cmpsb
sti
jb
pop
adc
inc
cmp
into
jle
lcall
push
xlat
inc
cmp
dec
sbb
shll
mov
cltd
add
push
cli
pop
lods
xchg
fcompl
mov
inc
ficomps
test
and
xchg
inc
add
cmp
out
sbb
ljmp
sub
gs
sti
sub
imul
movl
inc
xchg
mov
outsl
ds
mov
xor
sbb
jmp
mov
sti
jmp
inc
add
repz
int3
ss
cmp
cmp
push
adc
test
add
fwait
es
add
xor
sbb
mov
mov
out
mov
das
outsl
jecxz
push
stos
pop
inc
in
add
test
sarb
aaa
xorl
xchg
jae
cld
imul
adc
inc
push
push
adc
pop
test
cmp
fstps
lret
cmpsl
sbb
push
cmpsl
sbb
pop
jp
or
ljmp
sbb
push
mov
shlb
sahf
imul
sub
cmp
repnz
in
repnz
inc
movsl
lods
push
dec
iret
mov
jo
or
shrb
jl
mov
and
dec
mov
cmpsb
out
and
jns
mov
insb
sbb
cwtl
xchg
push
loop
test
add
jge
movsb
ljmp
dec
fstl
pusha
fistl
movsl
out
sub
jmp
gs
arpl
cmpsl
cmpsl
iret
mov
mov
insl
out
inc
dec
xor
enter
sbb
clc
sub
or
mov
leave
filds
push
jb,pt
in
aad
lret
les
divb
in
and
push
out
scas
mov
and
jo
xor
jo
loope
stos
ja
popf
adc
sbb
int3
outsl
std
lcall
adc
out
cmpsb
cmpl
addr16
mov
sti
add
cs
jmp
pop
mov
mov
dec
shlb
adc
mov
in
clc
das
xchg
cmpsb
inc
xor
pop
mov
mov
fcmove
inc
repnz
xchg
jb
insl
mov
mov
sbb
and
cmp
xchg
adc
dec
mov
dec
testl
mov
or
enter
je
mov
mov
jl
push
neg
jae
fmuls
sbb
xor
xor
ja
dec
fwait
xlat
push
sbb
mov
xor
or
push
sub
jo
inc
jne
mov
cs
xor
cmpsb
add
test
jp
scas
ret
jg
add
rolb
clc
rcll
cltd
sub
test
sub
cwtl
out
push
and
mov
lcall
pushf
shll
and
ret
pop
inc
fsubrl
sbb
inc
pop
push
mov
push
xor
mov
mov
cmp
mov
mov
lahf
lea
pop
test
rclb
or
lea
in
test
sub
dec
ljmp
xor
in
inc
push
dec
push
aam
sbbb
rcll
jle
mov
xchg
fisubs
test
mov
out
jecxz
inc
add
popa
fwait
aas
mov
cmpsl
pop
pop
je
rclb
in
testl
pop
jmp
outsb
sub
sti
subb
mov
cmp
jnp
adc
pop
fists
lahf
inc
xchg
lcall
cmp
pop
xchg
ss
dec
test
into
pop
fimull
pop
daa
ss
or
stc
movsb
out
fadds
pop
rolb
js
loop
inc
dec
sub
mov
xchg
push
and
inc
mov
das
dec
sahf
and
roll
mov
out
mov
sbb
imul
test
iret
adc
fwait
shr
arpl
pop
push
xchg
enter
fidivl
lret
ret
mov
out
pushf
push
cli
movsl
daa
lret
mov
arpl
sub
add
sub
test
je
push
mov
cmp
and
jb
jns
and
in
mov
dec
iret
inc
xchg
sbb
icebp
adcb
xor
mov
aas
jb
cmp
and
lods
fwait
orl
inc
or
or
test
jb
scas
cmp
or
add
or
mov
data16
data16
dec
popf
sbb
mov
dec
cld
mov
adcl
cmp
cmp
xor
into
sbb
out
pop
nop
pop
shl
jae
out
dec
jbe
push
xchg
pusha
hlt
test
test
jae
jge
push
fneni(8087
cmp
dec
in
add
push
push
fsub
push
mov
aad
mov
incb
popf
sbb
lcall
pop
cmp
mov
mov
mov
and
test
out
add
das
xor
jl
xchg
xor
add
jmp
mov
rolb
out
dec
sbb
lret
dec
rolb
mov
fsubl
jp
into
loope
pusha
pop
sbb
xor
jl
int3
mov
sub
movsl
mov
int3
inc
testl
dec
mov
xorl
dec
rcrl
aam
pop
push
xor
mov
pop
jnp
subl
pop
mov
mov
rclb
inc
ficoml
stc
sub
ja
jle
out
pop
andb
pop
lahf
xchg
jns
mov
aaa
fnstcw
and
incb
pop
and
push
movsb
into
stos
test
inc
inc
mov
xor
das
jmp
loop
out
dec
lret
pusha
shrl
jecxz
mov
movsl
cmpsl
push
xor
dec
repz
fdivs
and
enter
sbb
in
out
jge
cs
xlat
xor
dec
mov
mov
fwait
xchg
xchg
cmc
mov
mov
xor
rorl
outsl
lret
dec
sbb
ret
cmp
inc
out
stos
jp
out
adc
dec
mov
mov
daa
xchg
cli
in
lods
insl
sub
push
adc
mov
cmc
sub
jp
pop
sbb
mov
mov
or
sbb
jb
popa
fdivl
mov
sbbl
out
mov
dec
inc
test
ret
cmc
inc
stos
arpl
dec
sub
mov
lods
decb
jnp
push
pushf
inc
jnp
clc
mov
mov
adc
test
push
les
dec
mov
movl
and
jecxz
pop
and
shrl
loop
adcb
jge
jnp
adc
inc
dec
pop
int
sub
fst
lahf
andb
clc
imul
cli
cmpsl
lret
clc
aaa
or
pop
cmp
scas
not
xchg
jge
inc
cmp
out
enter
push
mov
icebp
or
push
lahf
adc
dec
add
xchg
mov
popa
sub
sub
out
sbb
mov
mov
dec
mov
adc
jl
jae
mov
sub
loopne
jp
fcmovnu
mov
sub
pop
movsb
insl
or
mov
inc
pusha
fistpl
fcoms
into
imul
mov
push
or
mov
cmp
pop
movsb
pop
lret
jns
inc
in
fwait
sbb
pop
sbb
test
popf
in
je
icebp
push
jecxz
or
push
popa
jp
fldcw
and
rcll
pop
mov
int
outsb
orb
ficoms
cmp
fistl
fwait
jo
filds
rolb
or
sbb
xchg
mov
and
or
mov
mov
lea
ljmp
mov
das
cmp
movsl
pop
rcll
fidivl
push
jmp
out
adcb
push
rolb
int3
sbb
sub
imul
out
mov
lret
mov
mov
jp
add
js
jne
repnz
jne
mov
cmpl
mov
popa
mov
add
popf
je
pop
mov
aaa
div
push
pop
imul
loop
mov
stos
cmp
or
jns
shlb
fwait
in
es
mov
sub
lret
sti
sbb
aam
and
sbb
enter
mov
xor
sbb
jno
cmp
mov
add
jae
je,pt
rclb
lock
push
fsubl
das
rcrb
sbb
leave
repnz
adc
add
cmp
ret
pop
xchg
inc
rcll
cmpl
repz
jnp
cmp
and
jo
je
in
or
test
lea
cltd
mov
cmpl
out
mov
aaa
and
adc
jbe
mov
fnstcw
cld
stos
test
mov
mov
fisubrs
enter
outsb
sbb
sub
popf
or
and
mov
das
cmpb
push
pop
cmp
jo
xchg
repnz
repz
add
test
mov
dec
mov
movsb
pop
loopne
out
push
xor
add
add
bound
push
addr16
cs
adcl
and
das
lea
mov
xor
mov
jne
push
test
inc
mov
dec
mov
bound
adc
mov
and
or
or
hlt
stos
lea
mov
xor
pusha
rep
aas
adc
mov
stos
pop
push
stos
fadds
dec
pop
daa
adc
addb
push
cmc
aad
hlt
mov
pop
or
js
dec
shll
and
xchg
sub
sti
jnp
dec
and
xchg
mov
inc
push
loop
cld
cmc
mov
loop
pop
imul
jae
pop
xlat
repz
ret
mov
jge
ret
push
imul
adc
js
dec
in
cs
and
pop
outsl
dec
inc
pop
repz
lahf
movsb
sub
jp
adc
adc
sub
jno
mov
scas
in
jecxz
dec
mov
xor
arpl
sub
mov
repz
inc
in
xchg
sbb
push
xchg
dec
xchg
stos
inc
mov
inc
push
nop
imul
push
inc
faddl
pop
mov
in
and
test
or
or
xchg
and
xor
sahf
and
jg
pop
daa
push
inc
push
pop
repnz
mov
pop
pushf
ljmp
pushf
in
ret
in
fidivrl
movsb
jb
outsb
lock
jb
clc
xchg
or
and
mov
lock
cli
je
test
dec
in
or
xchg
pusha
mov
mov
in
xchg
fstps
sub
pop
jo
push
cmp
jnp
bound
inc
push
sbb
shr
imul
adc
shrd
and
es
lds
mov
push
push
pop
push
out
ds
xor
lahf
cltd
shlb
xchg
push
bound
push
stos
jae
inc
pushf
pop
pushf
pop
ljmp
cs
int3
daa
dec
sti
subb
shlb
ljmp
out
out
mov
stos
push
js
roll
xor
movl
inc
dec
stos
lret
mov
lods
mov
lods
and
mov
mov
xchg
sahf
in
mov
orl
sahf
into
cmp
or
leave
bound
and
fstl
lods
dec
jmp
les
push
or
mov
jp
xchg
push
and
mov
sub
mov
out
out
jp
xor
sub
xchg
adc
add
xor
inc
jo
inc
xchg
stc
xor
or
fsts
ficompl
leave
pop
inc
imul
jecxz
and
test
sub
pop
inc
inc
mov
gs
lahf
xchg
xchg
insl
lea
or
xchg
stos
mov
sbb
mov
dec
mov
mov
lea
push
sub
add
and
lods
jle
test
cmp
into
aaa
pop
push
mov
mov
cli
scas
mov
sbb
cmp
pop
pop
ret
pop
inc
jecxz
lret
out
mov
scas
dec
icebp
xor
pop
add
inc
xchg
push
xor
jecxz
dec
das
pop
add
mov
iret
and
cmpsb
pusha
popf
dec
pop
popf
arpl
xchg
jo
inc
mov
cmp
or
lock
dec
cli
je
adc
enter
add
lcall
or
repz
lds
in
out
sub
aaa
pushl
adc
fwait
aad
mov
ficoms
add
sub
cs
repnz
dec
dec
stc
jb
call
ljmp
add
lret
mov
mov
lds
in
sub
and
or
mov
movl
xchg
dec
adc
dec
inc
std
mov
lcall
add
clc
test
daa
ret
test
jle
test
push
or
sbb
clc
iret
sbbl
add
mov
nopl
cmp
dec
stc
pop
push
cltd
xor
pop
scas
les
inc
mov
and
cli
inc
jmp
cmpsb
inc
and
addr16
in
jl
pop
gs
adc
jp
leave
aas
fildl
in
clc
adc
pop
adc
lahf
push
scas
dec
bound
xchg
sub
mov
cmp
or
jae
mov
jle
in
mov
fwait
push
push
pop
jbe
mov
mov
mov
and
jne
shl
mov
stos
dec
adc
movsl
test
loope
pop
dec
mov
mov
jp
das
pushf
dec
lock
rcll
daa
or
sbb
pop
dec
fsubl
lods
xchg
loopne
std
sbb
int
call
stc
dec
pop
push
notl
pop
je
cmpsl
push
xchg
stos
data16
repnz
outsb
mov
inc
adc
mov
js
js
jl
movd
add
repnz
mov
movsl
add
mov
cmpsl
repz
shr
and
scas
jns
div
mov
repnz
ljmp
xchg
jbe
pop
js
sbb
add
adcb
clc
add
pop
ds
call
push
push
pop
sub
call
or
movsl
dec
call
dec
mov
inc
sub
add
int3
idiv
sub
out
stos
loop
dec
mov
mov
or
das
ss
jg
mov
mov
mov
sbb
fwait
push
xchg
in
or
cmp
sbb
pop
lret
push
test
imul
das
jne
pop
dec
gs
jo
mov
adc
inc
sbb
gs
dec
add
movsb
ss
xchg
inc
cmp
out
xor
int
in
sahf
dec
sahf
xchg
jnp
test
inc
sbb
fbld
sbb
mov
mov
mov
pop
xor
rcr
sbb
pop
lret
push
mov
jo
jge
inc
adc
pop
xor
cmp
clc
sbb
adc
pop
add
inc
xchg
push
pop
mov
pop
lret
sub
or
mov
jns
cli
sbb
pop
sbb
xchg
test
cwtl
and
stos
gs
icebp
sub
roll
iret
jbe
shrb
lods
repnz
cs
test
mov
mov
pop
sbb
shrl
xor
pop
mov
lea
sbb
aaa
lea
mov
stos
inc
cmc
insl
xor
pop
dec
pop
je
pop
add
xchg
je
xchg
cmp
in
jp
mov
clc
and
lcall
mov
test
loope
out
imul
fidivrs
sbb
sub
sub
rorl
jmp
cmp
jbe
xchg
xor
outsb
and
pop
or
push
pop
in
repnz
fwait
rsqrtps
add
xor
add
cli
loope
xlat
lea
jl
int3
shll
jbe
in
fcom
mov
sub
sub
mov
loope
mov
push
out
pop
roll
stos
cmp
int3
daa
push
adcb
movsl
push
fdivrs
sbb
mov
outsb
push
xor
or
cmpsb
clc
inc
xchg
jbe
fisttpl
js
sub
inc
jp
xor
pop
fcomps
repz
push
mov
jl
sarl
jae
cmp
add
inc
and
lret
call
sbbl
daa
rcll
push
ss
sti
mov
test
ret
cmp
fstps
sub
insl
dec
addr16
push
mov
out
je
inc
inc
cmp
fs
insl
cmpb
xor
sub
iret
repnz
out
jle
jecxz
mov
pop
loopne
adc
test
dec
lods
pop
aam
aad
and
adc
cmpsb
xor
jmp
cmp
clc
fdivrl
insb
dec
fistps
push
gs
or
popf
ja
or
ret
jne
fidivrs
loopne
out
stos
sbb
mov
or
enter
bound
stos
jecxz
rsqrtps
xchg
jno
aaa
push
cmpsb
inc
inc
mov
and
aaa
into
leave
mov
pusha
pop
pop
or
mov
mov
fucomi
leave
repnz
dec
xor
ret
xchg
jae
pop
fisubs
stos
pop
and
xor
pop
lcallw
outsl
fwait
sub
aad
into
adc
push
pop
testb
test
repnz
aam
aam
sarl
jae
mov
insl
repz
push
inc
aas
xchg
sub
ljmp
rorl
jb
sub
sub
dec
rolb
aad
or
mov
pop
lds
int3
dec
ffreep
dec
in
mov
pop
xor
jg
les
les
dec
shll
lods
mov
outsb
mov
dec
jl
mov
add
hlt
insb
cmpsl
cltd
sahf
adc
arpl
mov
out
dec
loopne
enter
add
or
orl
pop
lods
mov
sti
cmp
add
adc
mov
and
lods
mov
xor
cmp
xor
rcr
enter
out
jne
lock
adc
int
mov
sub
push
push
adc
nop
fxch
dec
leave
int3
or
push
add
in
mov
loopne
push
mov
mov
xor
loopne
pushf
push
mov
je
mov
popa
stos
fsubrs
je
mov
jns
xor
mov
add
lods
lcall
inc
dec
push
xor
mov
rcll
idivb
repz
sbb
cmp
pushf
jno
dec
xchg
mov
inc
movsb
outsb
sbb
xor
dec
adc
push
mov
push
arpl
mov
push
ljmp
nop
push
clc
push
mov
iret
xchg
jo
std
push
push
dec
push
cwtl
rcr
lahf
jl
dec
xchg
mov
je
sub
jno
stos
idiv
sbb
and
leave
aas
push
pop
xor
cmp
jge
add
lds
cltd
xor
add
adc
jno
in
cmpb
push
inc
sbbb
dec
mov
mov
xchg
push
scas
fsts
sub
add
insb
js
inc
inc
or
jb
jno
mov
call
pop
xor
mov
cmp
pop
mov
out
mov
xor
inc
lea
ljmp
stos
jg
stos
movhps
data16
mov
jbe
jae
pop
gs
testb
in
or
pop
lock
xchg
lret
jno
add
bound
inc
mov
popa
xorb
daa
or
call
adc
je
mov
jl
rorl
arpl
decb
test
xor
fsubrl
in
mov
outsl
push
ljmp
fwait
jmp
xlat
dec
testl
popa
push
jle
jle
jmp
xor
jnp
cltd
push
mov
inc
std
ds
cmp
push
fmul
pop
sarb
mov
cmp
jno
int
ret
loopne
ret
jne
sub
test
mov
loopne
imul
inc
pop
mov
add
arpl
pop
test
mov
sub
dec
mov
push
repz
mov
sbb
mov
push
or
sub
nop
lods
enter
jb
ds
dec
rorb
mov
and
movsb
adc
cmp
xchg
push
push
in
pop
and
stc
adc
cld
push
lock
jb
xor
xor
fsubrs
push
gs
das
repz
mov
xchg
jns
and
jmp
das
dec
movsl
dec
fyl2x
std
mov
daa
jbe
in
jno
fstps
and
rolb
sub
and
test
jl
test
andl
leave
mov
inc
mov
lds
xor
or
test
movsb
cmp
dec
sbb
in
cmp
mov
xor
insb
movsl
and
test
jle
ljmp
sub
or
sbb
add
and
cltd
sbb
lods
fwait
cmp
in
or
dec
pop
or
popf
mov
adc
sti
cwtl
push
or
jl
push
scas
inc
sbb
cmp
add
push
loop
das
pop
outsl
mov
xchg
iret
out
das
ret
sbb
std
sub
and
scas
inc
hlt
or
xlat
jbe
insl
jge
das
fwait
mov
mov
push
loop
pusha
pop
dec
xchg
shr
aam
sub
loopne
add
or
sbb
sbb
into
sub
mov
ljmp
ret
aam
outsb
inc
jnp
ret
addb
mov
setle
repnz
push
subl
inc
adcl
cmc
out
repz
test
cmp
mov
lds
xchg
sbb
xor
insl
fwait
or
pop
ljmp
mov
rclb
aam
loope
addr16
xchg
subl
mov
add
add
adc
mov
fucomi
and
movl
pop
into
cmpsb
test
outsl
jg
stos
bound
fisubs
test
shll
hlt
mov
dec
stos
pop
mov
push
xchg
aas
repz
sahf
or
mov
testb
and
and
stos
add
or
mov
cs
outsl
sbbl
stos
das
push
lods
cmc
and
xchg
aad
add
xchg
ja
dec
mov
lods
iret
dec
aad
ret
mov
sub
jmp
stos
mov
outsl
dec
fsubrs
ss
dec
repnz
inc
test
out
push
shl
sub
out
pop
enter
xchg
popa
lret
pop
jl
push
mov
mov
js
mov
je
adc
add
mov
jbe
stos
xchg
mov
mov
fwait
mov
dec
pushf
mov
aad
call
fcmove
cmp
shlb
mov
dec
cmp
test
xchg
dec
inc
mov
test
adc
jmp
add
xchg
mov
pop
cwtl
cmp
into
cmp
test
xorb
sub
xchg
pushf
or
out
push
in
sbb
dec
xchg
scas
pusha
call
push
push
cli
inc
or
and
xchg
leave
xor
inc
adc
not
jl
inc
int3
roll
xor
xor
mov
in
push
push
add
xor
sbbb
xor
lahf
fwait
fwait
out
andl
dec
jecxz
pop
jo
fsubs
jo
stos
adc
mov
mov
into
mov
dec
std
mov
jns
outsl
or
popa
mov
aam
jg
out
pop
ret
xor
sub
dec
xor
bound
sub
loope
pop
jno
insb
out
mov
movsb
and
in
test
popf
out
push
jl
clc
call
or
clc
sbb
inc
fnstcw
fcmovnbe
adc
icebp
pop
or
sti
pop
addb
lret
adc
mov
dec
adc
and
jp
imulb
movsb
rolb
lret
mov
sbb
je
call
sub
aaa
mulb
mov
idiv
pop
cmp
mov
add
movsb
insl
cli
iret
xor
fnstcw
stos
push
sub
fstpl
jecxz
repz
fnsave
inc
and
xchg
mov
pushf
outsb
in
xchg
and
and
or
popf
mov
mov
sub
pop
sbb
fldt
mov
jg
sbb
ret
mov
push
cmp
mov
inc
enter
cmpsl
mov
xchg
and
test
frstor
sub
xor
jae
xor
ljmp
mov
cld
jge
cs
cmpl
mov
in
mov
pop
add
iret
and
cs
ss
xchg
inc
mov
adc
insb
iret
sbb
fdivrs
inc
xchg
mov
rol
shrb
mov
inc
imul
add
into
cld
int
std
lret
mov
cli
insl
pop
dec
pop
sbb
mov
push
push
jl
imul
and
mov
and
fucompp
in
push
scas
inc
enter
mov
std
pop
mov
push
mov
mov
in
dec
add
in
sbb
push
xchg
and
imul
xchg
xchg
sti
mov
fwait
push
fs
aaa
jmp
push
cld
call
imul
aas
sub
mov
mov
push
sbb
fwait
and
and
not
sbb
int3
movsl
inc
xchg
mov
dec
shr
pop
data16
xchg
loope
mov
cmp
scas
orb
in
les
push
mov
faddl
in
cmpb
popf
lea
mov
icebp
xchg
xchg
ljmp
movb
hlt
push
sbbl
cmpsl
sub
and
out
scas
mov
and
mov
je
mov
jl
cltd
lret
sbb
pop
pop
mov
sub
inc
pop
sbb
outsb
pop
push
jmp
mov
insl
jo
cmpsl
popf
mov
loopne
bound
jmp
push
leave
xchg
mov
cmp
icebp
mov
or
in
enter
data16
mov
mov
repz
dec
add
je
daa
pop
sar
push
inc
or
add
xchg
lcall
fcom
arpl
add
repz
or
addr16
or
ja,pt
into
sbb
pop
jo
xchg
into
movsb
adc
repz
jae
push
sub
cmpsb
testb
mov
jo
imul
out
add
sahf
sub
jl
jge
divb
sbb
js
nop
aas
jno
fists
out
test
dec
adc
add
mov
shrl
add
lahf
ljmp
cmpsb
pop
sub
fldenv
stc
xchg
lahf
cmpsl
mov
dec
int
cmp
mov
insb
enterw
pop
pop
stos
outsl
hlt
std
fiadds
lret
or
add
scas
sub
xchg
out
sbb
push
les
stos
add
cli
loop
loope
sub
xchg
fcomps
loope
mov
jg
push
leave
pop
dec
jo
decl
mov
or
mov
fisttps
mov
jnp
mov
adc
in
push
inc
mov
mov
loope
sbb
inc
leave
popa
mov
jle
mov
shll
sbb
mov
mov
push
nop
xchg
pop
sbb
icebp
sbb
shlb
sub
push
js
mov
out
mov
adc
div
ja
xor
or
stos
or
fwait
js
jno
push
adc
or
adc
xor
idiv
add
sbb
sar
or
mov
mov
movsb
and
or
cmp
out
aam
ja
and
jno
adc
inc
push
xlat
lahf
xlat
or
test
jns
pop
dec
add
sti
cmp
aaa
and
movsb
mov
repz
or
cs
xor
push
adc
es
aam
lcall
sub
inc
add
fiadds
je
push
mov
popf
jmp
xor
dec
pop
mov
push
fidivs
cmp
dec
push
push
xorl
insb
xchg
sub
sub
pop
and
add
mov
je
div
in
fwait
in
jno
cmpsb
mov
repz
dec
add
ficoml
out
mov
movb
xsavec
ficompl
shll
mov
jg
inc
xchg
scas
sbbb
inc
ret
xchg
or
or
sbb
xchg
rorb
mov
inc
jmp
ds
mov
fdivrl
scas
or
arpl
xchg
cmpsl
loopne
jle
cmpsl
jmp
cmp
ret
mov
mov
test
mov
dec
idivb
mov
into
jge
cvttps2pi
dec
lret
ss
sbb
sahf
push
add
jle
pop
rolb
jge
adc
outsb
lcall
loope
mov
stc
scas
mov
sarb
rclb
jbe
outsb
and
add
cltd
push
pop
inc
mov
sub
lods
inc
sub
aas
mov
gs
aam
mov
lds
add
cld
mov
pop
jo
in
mov
scas
and
jno
sahf
sti
clc
jno
inc
sub
mov
adc
or
lods
pop
add
push
jge
std
leave
jmp
mov
mov
xor
mov
shrb
daa
xor
pop
jbe
sub
enter
out
mov
sbb
sbb
sarl
roll
inc
std
and
adc
push
mov
mov
push
test
or
and
enter
mov
push
adc
out
push
or
pop
sub
inc
xchg
in
scas
jbe
or
std
icebp
sbb
or
sbb
mov
fdivr
lea
rorb
jns
lds
fisttpl
mov
sti
andl
test
rcrl
xlat
sub
cld
sbb
inc
ljmp
xchg
rorl
pop
xchg
sbb
xchg
add
lds
lock
pop
rorl
mull
arpl
dec
dec
test
cmp
pop
xchg
push
mov
bound
xchg
mov
cmp
shrb
js
mov
xor
push
fsubs
mov
arpl
dec
push
add
mov
xor
gs
data16
lret
mov
and
ja
sbb
push
cmp
pop
rol
inc
mov
out
clc
mov
cmpsl
rclb
jecxz
stos
out
gs
push
pop
movsl
mov
cmp
jns
mov
xchg
pop
mov
mov
loopne
mov
fs
shrl
push
pop
scas
shrb
fsubr
cmc
lods
and
sbb
aad
adc
pop
stos
clc
cmp
dec
testb
push
jle
xor
repnz
push
lret
sbb
cmp
ret
jae
mov
cmp
xor
fldt
das
mov
mov
ficoms
rcll
dec
lcall
mov
out
push
int
dec
std
pop
ficomps
xchg
js
test
mov
sub
jge
jle
dec
adc
dec
sbb
pop
xchg
push
xchg
das
add
nop
popf
test
adc
stc
outsl
cltd
mov
and
push
data16
mov
ss
pop
jns
cmc
xor
testb
pop
adc
in
sub
mov
adc
jp
mov
insb
out
push
dec
daa
test
divl
in
aas
adc
cmp
sub
dec
sub
push
inc
stos
adc
mov
addr16
test
xor
insb
loope
fwait
mov
mov
pop
pop
jl
fisubl
out
stc
loop
loop
cmp
sbb
sub
jnp
pop
shlb
adc
sub
int3
aaa
cvttps2pi
lods
adc
xchg
andl
cmpsb
jg
movsl
mov
jb
sbb
jp
jecxz
jecxz
xchg
inc
lahf
addl
enter
sub
lods
cmpsb
push
mov
cmp
addr16
into
shlb
jmp
dec
mov
icebp
inc
pop
sbb
sub
inc
cmp
jle
and
stos
into
call
rcrb
mov
fiadds
inc
lds
lcall
inc
mov
inc
je
cmp
sub
test
mov
pushf
jnp
push
int
cs
push
sub
mov
pop
ss
jae
subl
inc
mov
leave
scas
ja
sbb
cwtl
sub
mov
lret
push
xchg
mov
dec
lcall
push
xor
shll
in
cltd
mov
cs
mov
lods
xchg
testl
and
cmp
xchg
push
rcll
push
cmp
cmp
mov
and
stos
jae
gs
jg
mov
and
mov
xor
or
sbb
mov
pop
sbb
test
cmc
fs
adc
pop
mov
push
insb
shr
std
daa
push
cld
int
xchg
push
jg
jb
ret
inc
inc
dec
test
subb
dec
or
out
push
pushl
mov
pop
push
insl
cmp
cmp
adc
jecxz
push
sahf
inc
mov
push
inc
push
jge
sbb
jg
enter
popa
jae
inc
pushf
movsl
je
sbb
mov
out
and
cmp
sub
push
add
divb
shlb
sbb
pop
iret
loopne
vsubss
xor
add
addr16
leavew
jle
push
mov
cwtl
add
fildll
mov
add
sub
icebp
fs
xor
popa
rcl
add
imul
ror
test
xchg
lock
push
jmp
jmp
sub
sub
int3
pop
jne
dec
pop
lahf
pop
cmp
testb
sub
mov
loope
out
repnz
inc
inc
cs
imul
repz
adc
js
stos
arpl
sar
bnd
es
dec
xchg
push
pop
push
inc
xor
xor
adc
xchg
xchg
fwait
fs
mov
arpl
adc
mov
adc
push
mov
insl
adc
pop
in
push
notl
testl
bound
xchg
sar
or
lea
xchg
push
fs
push
lods
mov
cs
inc
and
or
mov
test
punpcklbw
pop
jb
xor
mov
pop
out
pushf
inc
scas
fsubrl
scas
sub
cmp
jecxz
pop
daa
aad
fwait
mov
jl
jge
cmc
add
mov
pushf
inc
sub
ja
in
sub
xchg
adc
sbb
jae
adcl
add
cmpsb
jle
mov
cld
dec
adc
jecxz
pop
jns
repnz
sbb
in
sub
cmpsl
xchg
add
push
adc
mov
xor
xor
jg
inc
pop
outsb
scas
xchg
add
or
inc
pop
add
iret
mov
jle
fstpl
loope
mov
arpl
lcall
in
test
dec
lock
xchg
insl
push
jae
scas
outsb
imul
xor
inc
aam
jns
push
ret
lret
adc
or
addr16
dec
and
cwtl
mov
ljmp
ret
in
inc
adc
mov
lods
push
jne
sub
in
and
daa
sbb
jl
jp
nop
aad
mov
fcmovnb
sub
nop
xchg
sub
and
cmp
fs
das
lea
mov
cmp
push
test
cs
inc
mov
lahf
mov
jle
mov
out
faddl
mov
cmp
jmp
rcr
fisttpll
lea
or
sub
jle
jmp
ds
pop
or
xor
pop
imul
inc
xchg
jg
xchg
add
and
xchg
push
adc
sbb
out
push
out
add
stc
or
sbb
stc
dec
imulb
cmp
inc
stos
aam
mov
in
rolb
sbb
inc
popf
sti
push
mov
aad
outsb
ss
sub
mov
sub
cmp
icebp
adc
sbb
popl
fidivrl
jecxz
and
incl
fildl
aaa
xor
push
loope
pop
mov
and
dec
aad
push
cwtl
pop
push
popf
outsl
inc
int3
sbb
xor
xchg
dec
daa
xchg
and
add
pop
dec
mov
or
in
aam
add
fdivs
les
popa
test
xor
call
jns
xor
mov
lcall
sbb
sub
dec
mov
push
cld
fs
rcll
aam
xchg
xor
mov
lahf
test
mov
adcl
adc
add
out
inc
stos
lods
lret
mov
xor
in
dec
push
sahf
xor
add
movsl
cmp
aad
push
in
mov
sub
jl
insl
add
pushf
xlat
adc
out
xlat
push
push
sub
loop
jl
repnz
out
pusha
push
jns
in
pop
daa
mov
hlt
xorb
adc
cmpsb
dec
dec
and
pop
inc
ficompl
fmulp
movsl
or
aam
sbb
mov
in
ss
sub
or
push
aas
xor
cmp
rcll
ja
das
fxam
out
icebp
xchg
aam
shll
dec
jb
pop
lods
pop
clc
sahf
mov
push
adc
fwait
push
dec
xor
lahf
cli
inc
push
jno
bnd
sbb
jmp
jmp
das
push
jnp
aaa
and
hlt
jb
lea
fildl
sbb
pop
fldenv
add
adc
mulb
cmp
pop
lcall
pusha
xchg
jne
xlat
dec
xchg
dec
or
test
ret
cmc
mov
mov
shl
insl
or
add
or
or
push
ljmp
sbb
inc
lods
mov
repnz
push
or
pop
inc
mov
ds
cwtl
sub
push
pop
and
les
mov
paddusw
arpl
inc
mov
rcll
sbb
int3
in
movsb
mov
sahf
pop
lds
ficoms
shr
test
mov
sub
lods
shlb
out
and
pop
mov
imul
cmpsl
repz
test
test
and
xor
push
add
dec
enter
aas
inc
pop
stos
mov
test
adc
mov
ds
adc
adcb
addr16
adc
fwait
and
sbb
test
cmpsl
xchg
mov
push
jg
pop
sahf
das
pop
jecxz
shll
sub
inc
push
test
cmp
es
xor
lods
cmc
fdivrp
insb
and
cmp
pop
push
int3
mov
and
or
scas
push
sbb
sbb
call
jl
push
cmpsl
scas
pop
dec
mov
sbb
pop
nop
fwait
sub
jne
js
xchg
scas
add
ljmp
daa
faddl
imul
mov
xor
dec
aad
out
iret
pop
pushf
sbbb
cmp
xor
mov
je
cli
popf
jbe
xor
fs
xor
jbe
bound
iret
out
rcr
mov
cwtl
xor
add
movsl
arpl
pop
jns
push
stos
pop
push
dec
mov
or
cmpsb
loop
into
inc
rolb
sahf
pop
not
push
out
pop
lahf
test
xor
das
xchg
fistpll
lods
int3
and
lret
je
rcrb
pop
sub
mov
dec
hlt
sbb
loop
call
and
push
ds
and
outsb
push
pop
in
fisubs
js
movsl
dec
xchg
jnp
jb
popf
call
pop
mov
fucomip
pop
repnz
setge
movsl
jl
mov
mov
cmc
add
pop
jge
repz
aas
push
or
clc
xorl
ds
lret
mov
rcrl
iret
sub
pop
loop
mov
pop
daa
push
inc
sub
or
pop
mov
xor
and
adc
sub
pop
sub
repz
test
lea
mov
push
aad
add
cmpsb
movl
loopne
imul
pusha
dec
fadds
test
ljmp
out
adc
add
xchg
pop
mov
into
inc
cld
xchg
aas
shll
in
std
jb
stc
xchg
and
mov
stos
mov
xor
dec
repnz
divb
xchg
pop
and
insb
cltd
pop
lahf
sub
inc
lds
ret
lret
sbbl
ret
sub
mov
lret
inc
insb
rclb
fs
ja
jp
adc
movsb
iret
lock
sbb
xor
maskmovq
idivl
loop
jb
xor
push
imul
mov
pop
movsl
in
cwtl
push
mov
inc
imulb
test
xor
ret
push
lea
fsubrl
sbb
into
mov
push
iret
mov
or
aas
scas
mov
scas
push
es
mov
dec
xorb
pop
adc
mov
push
mov
subl
adc
pushf
test
cmc
and
mov
mov
xchg
jno
in
subb
dec
push
movsb
xchg
scas
divl
mov
scas
repz
test
gs
jne
and
cli
fldcw
cmpsl
cwtl
pop
in
sarl
dec
xorb
ficoms
jbe
fsubrl
pop
hlt
mov
cmpsl
add
int3
mov
xchg
pushf
stos
sarl
mov
call
jbe
jge
or
imul
adc
shr
outsb
mov
int3
mov
shr
mov
ljmp
cltd
das
pop
cmp
jp
adc
subb
popf
inc
and
loopne
cmpsl
bound
dec
fmuls
aam
dec
movsb
iret
add
incb
pop
sbb
mov
shl
outsb
test
popa
pop
test
or
sbb
mov
scas
lods
test
jne
repz
xor
nop
mov
jg
sahf
adc
cmp
outsb
aaa
pusha
push
dec
testl
icebp
rcrb
jge
xchg
sub
dec
sub
test
bound
testb
add
jne
subb
push
sub
ficompl
xor
dec
xchg
or
add
mov
fbstp
mov
stos
movsl
mov
scas
jmp
push
popa
outsb
add
ficoml
pop
mov
add
shrb
mov
xor
xor
jecxz
lock
idiv
mov
sub
testl
test
outsb
add
pusha
lcall
sbb
sub
ret
xor
pop
lds
pop
pop
jmp
mov
enter
ret
push
dec
lret
rdmsr
pushf
push
xor
jb
loop
add
xchg
jle
lock
rolb
fs
nop
pop
loope
or
lods
cmp
nop
lahf
inc
loop
and
cmp
cld
pop
cmp
lret
shl
sub
je
fnstsw
adc
loop
sbb
loopne
stos
xchg
lahf
mov
int
shrl
shl
xor
scas
mov
jp
jmp
cwtl
movsl
push
push
nop
fwait
xchg
in
aaa
xor
jl
xchg
jp
push
adc
add
ret
push
ja
mov
or
fnstcw
add
mov
xchg
rcrl
mov
mov
cwtl
and
xlat
xor
ja
adc
xor
cwtl
rclb
ss
mov
push
fcmovnu
and
outsl
daa
adc
mov
outsb
ffree
test
pop
mov
adc
aam
test
push
jo
popf
mov
cmp
push
inc
xchg
xchg
fisubs
leave
rcrb
sub
js
sub
jle
sbb
out
jmp
outsb
mov
mov
scas
popf
add
test
dec
sbb
test
insl
insb
test
ud2
pop
push
das
jle
sub
jge
jle
sbb
cli
xchg
in
stc
cmc
and
insl
jb
xchg
movsb
mov
call
cli
ret
stc
push
mov
mov
cwtl
sub
sub
filds
cli
iret
test
fcoml
xlat
leave
hlt
aad
in
lea
lret
jmp
xchg
xchg
sbb
clc
int
shlb
mov
insl
int3
fwait
icebp
adc
push
push
je
out
lahf
daa
or
cwtl
sar
cs
xor
jb
jbe
jb
xchg
push
push
fisttpll
add
add
ljmp
cmp
jle
jne
ds
imul
mov
lea
cmpsb
in
mov
loope
test
jp
jnp
lahf
push
mov
cmp
pushf
pop
inc
insb
inc
mov
inc
pushf
int3
add
cmp
scas
inc
adc
push
test
stos
xlat
mov
test
adc
and
es
pop
loope
leave
div
xchg
icebp
mov
into
je
mov
out
fldenv
adc
cmpsb
sbb
mov
sub
ja
and
decl
pop
loop
popf
rclb
lea
pop
outsl
jo
jle
aad
xchg
pop
xchg
sbb
push
into
and
push
or
push
clc
adc
stc
test
into
stos
divl
and
cs
loopne
jo
aaa
sbb
aad
pushf
xchg
into
out
or
jne
insl
push
dec
mov
enter
push
pop
loopne
inc
sbb
lock
adc
jg
xlat
push
inc
scas
jle
out
fdivl
loopne
movsb
mov
adc
adc
nop
mov
jb
lock
pop
adc
xlat
cmp
or
test
adc
aad
sbb
or
pop
pusha
hlt
popf
outsl
loop
sbb
sbb
jl
mov
inc
test
or
jne
jne
inc
adc
adcl
xor
mov
cmp
push
in
popf
mov
mov
xchg
pop
rol
mov
js
fisubrl
sbb
fidivrs
fcompl
xor
adc
incb
jmp
add
loop
mov
rdmsr
pop
cmp
pop
or
lods
cmpsl
es
mov
fnstcw
icebp
pusha
xor
push
and
mov
das
push
outsl
sbb
fisttps
lret
xor
sbb
fucomp
movsb
je
into
xchg
add
push
push
mov
sub
jle
icebp
xor
stos
insl
shlb
rcr
inc
dec
cmp
fcomps
shlb
jae
daa
int3
aas
cmp
lea
or
fnstsw
mov
repnz
lea
xor
dec
pop
test
lret
mov
in
cmpsl
push
xor
add
stos
mov
aas
inc
test
lcall
push
es
jle
jo
aad
jg
mov
mov
push
test
push
sub
stos
xlat
aam
int
jge
jno
leave
enter
scas
xor
mov
mov
in
push
push
xor
pusha
aad
cltd
cmp
jecxz
mov
dec
ljmp
bound
jle
ror
and
inc
jl
jmp
add
iret
inc
shll
inc
push
or
adc
cmp
or
cmp
xchg
sahf
pop
push
dec
and
xchg
ljmp
insb
pop
inc
mov
add
js
test
push
int
sub
mov
dec
and
inc
add
out
rcrl
inc
std
loopne
pop
cltd
movsb
mov
sub
dec
sbb
fldenv
std
pop
repz
loopne
dec
das
jecxz
mov
jne
sbb
arpl
sbb
test
test
sbb
adc
popf
inc
call
or
sbb
out
or
xchg
js
aad
xchg
cmp
mov
les
in
dec
lock
mov
and
pop
in
aad
inc
imulb
and
insb
mov
sbb
scas
iret
jecxz
lock
test
inc
je
shl
nop
or
sbb
and
repnz
mov
sbb
pop
adc
fistpll
test
pop
xor
fidivs
xchg
push
mov
sbb
mov
je
dec
pop
push
add
mov
push
int
or
sbb
fwait
jbe
xchg
in
jecxz
out
xchg
sub
xor
jbe
addb
ret
daa
mov
out
pusha
sti
dec
push
push
mov
cli
pop
jo
cld
add
mov
loope
xchg
mov
test
dec
imul
push
dec
mov
or
fstl
xchg
sub
push
pop
fwait
das
fwait
mov
adc
mov
dec
in
out
pushw
xor
loop
jno
ret
loope
repz
icebp
nop
scas
mov
inc
imul
mov
and
inc
std
add
flds
sbb
movsb
out
sbb
sub
jp
xor
cmpsb
push
gs
fnstsw
pop
xor
movsb
push
pop
or
jge
mov
adc
mov
in
enter
xor
cmc
adc
inc
push
dec
daa
out
mov
or
or
ljmp
mov
or
cmp
sahf
arpl
push
push
outsb
xchg
aam
xor
pop
out
or
inc
or
or
gs
cmpsl
das
inc
add
sbb
cmp
inc
mov
push
and
mov
jp
cwtl
rorl
aaa
pop
mov
imul
out
push
or
loop
adc
adc
sub
cmp
mov
aaa
jg
cwtl
or
push
int
sahf
mov
lea
fcmovu
xor
or
dec
push
ja
push
sbb
push
xor
sbb
inc
stos
out
outsl
ja
xchg
imul
inc
fbld
jne
icebp
aam
shl
div
dec
mov
sbb
sti
xchg
mulb
lret
and
xor
frstor
xchg
jg
aam
adcl
mov
sar
rolb
shll
jnp
jne
imul
inc
outsb
mov
mov
add
imul
call
mov
push
je
notb
xlat
fisubrs
cmpsb
cli
dec
out
mov
lock
nop
and
pop
and
les
or
or
xchg
leave
mov
mov
xorb
sbb
and
push
sahf
addl
sbb
inc
mov
cwtl
sub
mov
clc
mov
mov
pusha
data16
out
xor
xchg
add
jge
mov
dec
aas
pop
add
jmp
adc
mov
mov
and
mov
hlt
inc
mov
pop
jmp
arpl
cltd
push
test
fcomps
inc
jae
jbe
pop
mov
lock
test
or
std
add
jle
mov
icebp
test
dec
dec
pop
lods
rorl
jl
push
push
lock
call
in
lds
ja
es
fisubl
icebp
je
push
lret
mov
cmp
sub
cs
aaa
jae
rorl
sbb
fmulp
pop
jo
stos
cli
sbbb
aaa
gs
stc
or
push
repnz
push
xchg
dec
pop
mov
mov
sbb
jo
std
push
push
jl
nop
fistps
rorb
mov
pusha
mov
jne
xchg
sbb
ficompl
fidivrl
je
in
in
dec
cs
movsb
xor
ds
iret
dec
pusha
or
cld
sub
or
aas
aam
mov
mov
repnz
sbb
je
jbe
in
sti
imull
cmp
inc
pop
testl
mov
into
mov
add
scas
add
cld
inc
cmpsb
xchg
jnp
inc
sub
mov
and
jp
push
cmp
fstpl
dec
inc
jae
test
xchg
cmp
cmp
jb
push
lds
sbb
adcl
jecxz
jne
sub
mov
lret
out
movb
jl
xor
es
imul
mov
aad
cmp
sti
int
outsl
adc
push
movsl
jne
ror
adc
mov
test
mov
dec
movl
adc
mov
rclb
mov
xchg
push
ss
icebp
outsl
outsb
movsb
stos
cmp
xchg
add
test
cmpsl
popf
cmp
jbe
mov
es
or
jae
or
pushf
inc
cs
repnz
mov
xchg
mov
out
ds
mov
mov
ja
loop
jecxz
mov
leave
mov
arpl
pop
xor
cmp
xchg
jp
jae
into
das
imul
data16
adc
jmp
hlt
xchg
dec
adc
mov
cmp
or
inc
inc
mov
sub
jae
aas
notb
addr16
add
pop
es
leave
test
addl
popf
pop
shlb
pop
cmpsb
mov
xchg
xchg
sbb
cmp
mov
push
and
call
rol
inc
and
or
test
add
es
int
out
xlat
pop
inc
fildll
and
je
jge
int3
rclb
pop
lock
mov
jno
movsb
cmpps
lret
rorb
cli
inc
icebp
mov
iret
dec
mov
cmpsb
push
shrl
mov
aam
imul
jmp
xchg
sub
pop
mov
xor
xchg
add
ret
dec
adcl
out
clc
push
outsl
mov
xchg
mov
pop
jl
cs
mov
mov
in
and
mov
cld
cmpsl
and
pop
pushf
les
dec
pop
dec
jns
xchg
lds
aaa
mov
iret
arpl
xchg
aad
ret
int3
dec
pop
cmp
mov
adc
fucomp
aad
dec
fcoml
mov
sbb
xchg
je
push
sub
cmp
sahf
enter
xchg
pop
popf
mov
dec
int3
data16
xor
sysexit
mov
in
out
xlat
cli
sbb
add
loope
fcmove
repnz
jae
cmp
xor
cmp
add
jmp
rclb
xchg
cmpl
imul
push
repnz
rclb
std
loope
ljmp
imul
mov
popf
mov
mov
fisubs
es
cmp
fildl
repz
into
stos
mov
mov
shrl
jge
mov
mov
push
cmp
mov
data16
in
decl
loop
cmp
xlat
mov
int
dec
mov
cmp
mov
mov
sub
sub
fimuls
adc
andb
sbb
psubd
cmp
pop
xlat
test
scas
pop
outsb
jl
pop
inc
out
pop
jge
in
fdivp
and
repz
pusha
outsl
loopne
daa
cwtl
dec
dec
mov
add
mov
repz
and
addr16
pop
cmp
mov
sub
cmpsl
push
fs
and
jns
pop
icebp
inc
mov
push
xchg
fsubrl
in
call
pop
push
cwtl
mov
or
test
inc
cli
xchg
js
mov
pop
mov
mov
es
mov
sbb
std
mul
out
loop
and
adc
cmp
and
js
cmp
add
push
loop
xorb
in
popa
pop
pop
lret
push
lea
dec
and
mov
pop
cmc
mov
push
mov
sti
jmp
or
fstpl
jae
push
enter
push
std
mov
lods
mov
shll
or
cltd
sbb
or
dec
in
add
push
lret
pop
bnd
bound
push
lods
sbb
stc
bound
add
mov
mov
xchg
xor
jne
jb
xchg
cmpsb
fisubl
jns
cmp
fwait
adc
inc
pop
stc
xchg
test
adc
dec
or
mov
inc
mov
inc
sub
adc
mov
inc
js
lods
xchg
std
mov
test
fistpl
nop
in
push
sbb
cmp
shll
pop
adc
nop
pusha
mov
or
stos
repnz
adc
into
sti
hlt
js
notl
stos
icebp
loop
pushf
bound
xchg
inc
push
rclb
insb
xor
fdivrl
xchg
and
jl
mov
inc
inc
sub
cmpsb
lock
sub
pusha
notl
ljmp
fsub
add
push
dec
ljmp
ja
mov
mov
loope
ljmp
xor
xor
mov
jge
scas
adc
push
push
adc
repz
or
cmp
lret
or
mov
sbb
outsb
pop
arpl
pop
cmp
out
popf
jne
xchg
cli
or
aad
push
fwait
pusha
cmp
hlt
xchg
test
out
lret
cmpsb
cmp
push
add
sub
jmp
fnstsw
or
adc
fdivr
mov
jge
pushf
cli
sbb
xchg
mov
std
lods
push
stc
ret
lea
inc
mov
pop
and
aaa
ss
cmp
repz
lods
divl
mov
cmp
mov
lldt
xor
aaa
sub
mov
and
and
jo
cmpsl
and
es
loop
cmp
loope
imul
mov
xchg
enter
repz
andl
into
nop
pop
add
mov
inc
cmpl
int3
shlb
xor
xchg
pop
repnz
mov
jmp
push
sub
loop
ret
leave
adc
das
notb
pop
add
pop
das
cmp
popa
test
aad
cli
aad
mov
cwtl
push
push
or
arpl
pop
loopne
dec
js
jne
out
fs
aad
rclb
aam
outsb
mov
in
jbe
cmp
or
sub
cltd
test
mov
sub
xchg
add
cmp
out
inc
ljmp
jns,pn
add
or
and
mov
insb
jne
cmp
les
or
movsl
jae
outsl
loop
push
mov
arpl
mov
fsubrl
sbb
mov
dec
dec
pop
sub
addl
out
jae
je
addb
cli
sbb
jnp
fildl
out
movsb
lret
in
inc
bound
int3
sbb
insl
movsb
jno
dec
stc
mov
les
int
stc
mov
cmpb
dec
adc
jnp
ret
push
lret
dec
pop
andb
daa
sti
push
pop
je
in
cmpsl
cmp
js
pop
pop
mov
xchg
add
ret
in
pop
adc
pushf
repz
add
cli
fimull
adc
jbe
push
or
hlt
imul
xor
pop
addb
lret
adc
mov
ljmp
call
repnz
test
inc
sbb
pusha
insl
fisubrs
jmp
iret
nop
testl
xchg
or
cmp
fwait
js
jbe
inc
add
mov
out
rcll
mov
inc
mov
inc
mov
xor
or
lahf
or
icebp
and
test
or
scas
mov
add
in
adc
mov
nop
addr16
aad
jno
cmp
push
inc
inc
idiv
add
jp
cmp
cmp
into
ljmp
jne
mov
ljmp
out
out
aas
ja
shll
mov
inc
mov
cmp
xchg
loopne
mov
lea
add
pop
sub
add
ds
pop
loop
stos
push
push
xchg
sub
test
add
or
pop
mov
clc
fadds
jnp
push
pop
scas
lret
adc
in
fdivl
adc
jbe
sbb
lahf
scas
push
pop
dec
daa
sub
sbb
mov
mov
loop
lcall
xchg
pushf
inc
push
js
stos
arpl
dec
test
xor
cli
mov
enter
cli
inc
mov
xchg
mov
inc
pop
push
add
or
int
sbb
stc
mov
test
test
add
inc
sub
jbe
insl
imul
adc
insb
lock
jle
add
out
jbe
lret
popf
and
adc
test
push
cmp
or
adc
aas
divb
lahf
pop
dec
push
jmp
or
orl
mov
fwait
loopne
mov
jge
clc
call
pop
ret
push
pop
loopne
daa
clc
xchg
push
cmp
push
pop
mov
in
pop
sub
fiaddl
mov
push
nop
gs
cld
sbb
ret
sub
dec
mov
add
and
inc
lds
mov
mov
fisubrl
push
hlt
jae
inc
xlat
jl
jge
xchg
jecxz
out
mov
sub
jle
movsl
out
pop
das
std
xor
fiaddl
shl
fbld
dec
dec
xor
cmp
and
icebp
out
rcrl
ljmp
bound
je
sbb
fildll
mov
and
pop
enter
cs
dec
cmc
je
jecxz
ret
aaa
pop
inc
in
dec
aad
lea
jg
push
test
pop
loope
scas
jp
jns
sub
sub
sub
mov
mov
xor
xor
dec
jle
jp
pop
add
gs
push
sub
add
hlt
aaa
dec
jae
and
mov
arpl
arpl
fisubs
aaa
es
mov
adc
mov
push
inc
mov
inc
and
and
or
mov
pop
mov
and
fbstp
sbb
pop
cld
jns
dec
les
lcall
sbb
cmc
push
pop
add
push
xor
mov
or
iret
or
outsl
xchg
mov
ss
mulb
inc
inc
jo
add
inc
xor
fwait
xor
shlb
mov
push
mov
jp
loope
cmp
sub
sbb
pop
jp
sub
adc
stos
fimuls
sbb
lods
inc
sarb
outsl
add
or
pop
fld
fwait
adc
push
adc
jae
in
je
jne
and
inc
xchg
int3
in
dec
or
dec
mov
xchg
mov
sbb
test
data16
outsl
inc
add
fwait
test
or
cmp
adc
daa
int
js
cmc
shll
inc
js
pop
jg
or
mov
sbb
pop
mov
ret
arpl
add
orb
popa
test
fcomp
adc
mov
mov
je
lcall
cli
arpl
dec
fdivs
mov
enter
imul
aam
outsb
lock
sbb
sub
popa
inc
lods
or
enter
out
ljmp
push
inc
mov
and
loop
out
cmp
repz
loope
mov
cmc
in
inc
movsb
push
ret
loopne
xchg
mov
das
push
scas
push
sbb
daa
repnz
mov
pop
loop
in
lret
test
aas
ret
test
add
cld
mov
mov
or
inc
xchg
jl
inc
shll
mov
stos
insb
push
in
es
stc
add
pop
in
inc
cmp
pop
mov
mov
dec
daa
mov
lds
dec
mov
stos
movsb
js
gs
pop
adc
mov
sbb
add
js
cmp
movsb
imul
mov
test
inc
pop
fdivrs
out
xchg
pop
std
adcb
sbb
push
in
dec
add
pop
ss
adc
gs
adc
add
lahf
or
sbb
or
push
xor
mov
or
jb
push
push
adc
andb
rol
out
cltd
mov
in
daa
mov
das
xchg
xor
inc
lret
fcmovne
and
out
clc
sbb
lock
mov
loope
scas
test
bound
cmp
inc
dec
dec
int
adc
and
cmpsb
aaa
add
mov
xor
add
clc
sar
loopne
and
sti
scas
clc
sbb
push
cwtl
adc
mov
jb
aaa
inc
xor
cmp
out
sub
repnz
outsb
test
inc
cmpsb
and
shr
jge
imul
leave
add
insb
mov
mov
repnz
repnz
ficompl
shrb
mov
cmp
mov
fisubrl
xlat
sub
in
xor
lds
fucom
pop
pop
cmp
je
mov
mov
in
push
daa
cli
mov
pavgb
ret
inc
sbb
cld
cwtl
stos
mov
or
nop
shlb
rcl
jge
jo
loopne
pusha
loope
shrb
shll
mov
mov
pusha
je
or
fldt
xchg
or
pop
sahf
adc
add
mov
mov
mov
jp
mov
cld
leave
pop
test
dec
mov
addr16
js
xchg
mov
call
mov
add
or
scas
ret
in
rclb
inc
or
test
lret
ret
sti
shl
lea
call
xchg
sbb
or
or
pop
test
mov
imul
and
pop
addb
push
sbb
ds
push
jg
loopne
xchg
push
sub
repz
or
pop
popa
push
ljmp
lock
push
fstl
mov
fsts
int
sub
mov
test
ds
mov
in
outsl
sbb
stc
mov
push
ljmp
push
xor
push
cmpb
call
jae
push
xchg
mov
mov
dec
lods
and
loopne
setbe
adc
iret
sub
int3
rep
adc
js
sub
xchg
cmp
push
pop
add
inc
pop
je
and
jecxz
call
cmp
inc
sub
rorl
test
sub
push
mov
mov
loop
inc
scas
inc
xor
outsb
nop
in
xor
jo
push
mov
test
mov
xchg
lret
mov
sahf
pop
mov
push
jg
xchg
pop
mov
sub
xchg
psrad
dec
and
adc
jae
dec
aas
cmp
decl
call
mov
insl
mov
jns
xlat
hlt
pushf
arpl
data16
imul
or
dec
ljmp
cmp
jno
pusha
mov
sbb
loopne
aam
add
push
jecxz
xchg
aas
push
aas
push
out
fsubr
daa
xchg
xchg
aam
sub
jge
jbe
push
call
mov
jns
aad
sti
sahf
loopne
lods
outsl
mov
fcomp
sub
mov
in
addr16
sbb
adc
cltd
or
icebp
lock
dec
add
negl
cmp
pop
or
repnz
out
xor
sub
dec
cmc
mov
mov
or
stos
jecxz
test
mov
fs
daa
testb
and
pop
dec
inc
ret
lret
in
outsb
fnsave
test
lock
push
insl
mulb
push
into
push
add
clc
hlt
ret
shll
fstp
testb
sar
xadd
in
or
adc
dec
dec
mov
mov
bswap
pop
sub
dec
jne
das
push
mov
in
or
dec
inc
xchg
xchg
imul
mov
iret
jbe
xchg
movsl
add
sub
icebp
xlat
mov
dec
cld
fidivl
lods
ss
popa
popa
sub
ds
xchg
or
dec
mulb
jo
cmp
nop
xor
aad
add
roll
mov
mov
daa
jmp
mov
mov
mov
cld
clc
ss
inc
lock
les
sbb
dec
outsl
or
sbbl
lock
enter
out
dec
loopne
out
enter
mov
pop
in
jecxz
insl
pop
loop
mov
inc
adc
ret
sbb
push
test
fistps
aad
bound
popa
inc
aad
xchg
fsubp
aad
js
adc
jp
out
ds
xchg
push
call
add
aam
cmp
arpl
fiaddl
call
cmp
test
jmp
dec
mov
scas
push
loopne
out
jbe
pusha
xor
inc
mov
dec
mov
jp
jp
sahf
nop
adc
inc
inc
lods
and
mov
jns
enter
mov
or
lods
and
testl
xlat
mov
fs
xor
cltd
mov
jae
lods
or
inc
push
dec
push
push
sbb
mov
shll
icebp
negl
push
mov
dec
and
addl
mulb
fdivl
es
fmuls
nop
push
adc
xor
addr16
push
push
mov
jge
ret
sarl
sbb
add
ret
lds
mov
adc
dec
in
repnz
insl
fimull
mov
pushl
xchg
subb
add
jne
add
icebp
push
rolb
scas
iret
and
mov
mov
xor
iret
sbb
mov
pop
mov
cmp
xchg
out
loopne
je
jo
lcall
sahf
adc
push
shrb
push
push
aam
lock
mov
aaa
mov
mov
push
in
scas
les
xchg
sbb
jno
pop
xlat
paddusb
adc
jbe
xchg
pop
mov
lds
push
xchg
jns
jp
or
fwait
ret
std
data16
incl
xchg
imul
sub
mov
aam
or
dec
jmp
mov
adc
push
jecxz
loopne
je
xor
xor
loop
neg
bound
adc
repz
cli
and
xor
pop
cld
mov
lret
cmp
idivl
imul
lret
arpl
ret
lcall
mov
arpl
and
int3
sub
jne
pop
xchg
arpl
mov
push
push
je
shrb
pop
add
cmp
int3
out
idivb
add
stos
into
dec
mov
mov
xor
scas
dec
cmpsb
mov
out
daa
mov
xchg
add
ret
mov
mov
xor
push
or
gs
xchg
inc
rol
ret
mov
jmp
scas
mov
orl
ja
xorl
scas
xchg
test
stos
xor
xor
pusha
inc
das
je
add
fwait
or
enter
js
xor
iret
iret
fcmovb
sub
sti
outsb
stc
test
dec
or
inc
mov
adc
aaa
push
add
mov
jecxz
push
jne
or
or
cld
cmp
pop
pushf
out
and
out
scas
xor
and
pop
cmp
bnd
add
jmp
dec
loop
pop
adc
fidivrs
rorl
and
jne
cwtl
pop
push
jae
cmp
es
sti
std
movsl
mov
out
call
sbb
and
xor
jg
mov
mov
das
mov
dec
cld
or
rorb
lcall
add
repz
jmp
imul
outsb
or
test
jp
push
in
xchg
sub
inc
or
popf
dec
aaa
xchg
mov
leave
adc
lods
dec
fimuls
out
dec
loope
pop
loopne
inc
test
jg
xorb
pop
xchg
lret
stos
and
push
insb
sahf
sub
icebp
push
jo
lods
lahf
mov
add
sarb
out
mov
dec
shll
or
add
fimuls
pop
int3
xchg
popl
stos
fmuls
sarb
mov
xor
rcrl
xor
push
loopne
jnp
push
pusha
pop
andl
mov
mov
hlt
icebp
sarl
cmp
or
bound
mov
movsb
sbb
sbb
pop
cltd
mov
jp
sub
lods
xor
jns
repnz
loopne
and
lahf
cmp
loop
push
and
push
adc
ror
push
arpl
inc
fucomi
jo
cmp
in
loope
mov
outsb
lea
ljmp
out
dec
jl
mov
add
pop
xchg
daa
add
mov
je
iret
add
shrl
sub
cmp
inc
mov
shrl
or
mov
scas
xchg
arpl
sub
mov
mov
and
mov
incb
pop
dec
test
jg
lcall
out
call
cli
push
sti
xchg
enter
and
je
fwait
ret
cmp
dec
mov
xor
call
and
jg
add
xchg
jno
pop
mov
mov
mov
mov
adc
movsl
fcom
shrl
enter
lret
cmp
jae
mov
gs
jae
popa
nop
mov
loop
test
push
push
xchg
push
dec
aaa
fs
call
pop
sti
movsb
les
test
out
xchg
or
cwtl
jns
out
scas
mov
pusha
adc
push
test
stos
add
mov
mov
inc
icebp
mov
sbb
sti
mov
mov
data16
mov
fildl
mov
add
cld
sbb
push
jp
enter
pushf
inc
push
das
inc
fbstp
and
cs
int3
loope
repz
pop
repz
dec
cmp
std
inc
test
adc
mov
ret
fwait
je
mov
dec
fidivrs
adc
push
test
imul
inc
push
push
cltd
sbb
sub
arpl
jbe
and
iret
lahf
mov
ljmp
daa
int
flds
fldl
into
mov
dec
mov
pusha
outsb
idivb
mov
and
and
or
mov
out
sbb
movsl
inc
out
xchg
sbb
iret
movsb
movsl
or
mov
loopne
push
inc
dec
adc
test
sbb
jl
data16
in
icebp
popl
cltd
inc
cmpsb
adc
shll
mov
mov
jbe
cmp
ret
cmpb
xchg
sub
or
fdivl
and
movsl
push
pop
mov
sub
ljmp
xor
outsl
inc
and
xchg
movsb
mov
test
jmp
jp
rolb
jge
sub
or
pop
imul
push
pop
daa
jae
xor
aam
jecxz
push
and
jb
jae
data16
dec
mov
das
clc
pop
pop
or
xchg
dec
test
jecxz
xchg
xchg
cmp
dec
xchg
jns
jb
sbb
je
pop
data16
in
push
jg
jl
das
and
sub
mov
xchg
shl
mov
jo
sbb
jbe
push
test
dec
cmp
xor
xchg
jmp
cld
repz
iret
dec
xchg
push
mov
mov
scas
ljmp
scas
test
les
fdivrp
into
pop
out
push
aas
scas
pusha
mov
test
insb
pop
imul
in
xchg
and
push
and
xchg
imul
adc
adc
dec
sub
daa
jle
or
mov
ljmp
aad
fimull
fmull
mov
add
xchg
clc
push
pop
jns
fwait
xor
cmc
cmp
xor
adc
test
mov
mov
pop
push
and
xor
add
aaa
pop
inc
cltd
sbb
sub
lret
lods
jb
or
movsl
xor
and
or
daa
inc
arpl
cltd
lock
pop
nop
and
jecxz
cmp
lret
test
cmp
cwtl
xor
cld
movl
cltd
xor
xchg
bound
sbb
push
jbe
inc
ja
and
push
jecxz
fs
pop
out
inc
mov
mov
xor
jg
sahf
xchg
loop
out
pusha
sahf
pop
cld
ret
inc
icebp
xlat
popf
lock
adc
test
imul
adc
mov
fcmovb
dec
and
push
fbstp
in
data16
adc
cmpsl
inc
outsb
pop
aas
jae
lcall
lcall
fisubrl
xchg
nop
leave
mov
cwtl
in
fstpt
test
addb
inc
loope
pop
jmp
dec
fcomp
fsubrs
cltd
sub
aas
pop
xor
pop
femms
mov
push
xlat
out
cltd
scas
scas
lods
xor
in
sub
pop
pushf
xor
mov
pop
push
into
mov
inc
loope
inc
jge
inc
mov
ds
push
push
sarb
fdivrs
mov
sbb
out
dec
pop
pop
mov
push
in
and
jle
and
pop
push
stc
push
inc
dec
sar
rolb
repz
push
popa
mov
bound
xchg
ds
lahf
inc
mov
pop
mov
push
clc
loop
repz
out
fildl
add
fwait
or
push
mov
rorb
pop
xor
add
lods
jp
aam
mov
out
adc
cs
arpl
cmp
jne
testl
loope
adc
xchg
fs
mov
pop
inc
adc
bound
xchg
ja
stos
cmp
sbb
mov
jle
adc
mov
in
jg
ja
jecxz,pt
aam
jle
ss
pop
mov
cmc
mov
push
mov
jnp
sub
test
add
data16
jns
fcom
mov
int3
incb
mov
int3
gs
ret
adc
sub
xchg
push
lods
int
cmp
popf
leave
or
loope
emms
sub
daa
add
xchg
xchg
push
mov
cmpsb
mov
fistl
jns
or
mov
sti
and
popf
mov
shrl
scas
mov
mov
into
cmp
into
inc
out
iret
sub
mov
xor
jecxz
imul
decb
not
arpl
xchg
faddl
or
orb
inc
cltd
sbb
fsubs
pop
les
sbb
dec
mov
ficoml
aaa
and
adc
cli
cmp
ljmp
pop
fcmovne
loop
insl
pop
cmc
pop
xchg
and
clc
dec
dec
cmp
mov
sti
mov
orb
xchg
repz
push
mov
pop
out
insb
sarb
or
and
add
inc
stc
js
ss
cmp
xchg
inc
js
mov
or
daa
enter
and
jg
mov
jne
imul
repz
ret
pop
data16
test
dec
push
mov
xlat
jecxz
and
or
data16
cwtl
aad
mov
jmp
out
in
xor
sub
sub
test
and
daa
adc
mov
aas
sbb
jnp
sub
adc
jnp
inc
iret
or
cmp
inc
cmpsl
into
add
sub
test
add
cmpsb
dec
cltd
adc
mov
shll
xor
cwtl
lcall
addl
adc
pop
xchg
fstpl
ja
les
or
cmp
fnsave
push
sub
out
clc
inc
test
dec
inc
sahf
add
imul
fsubp
subl
push
jle
sbb
scas
out
xchg
and
xlat
mov
lods
cld
pop
out
jecxz
and
xor
shl
mov
pop
cli
sbb
mov
mov
int3
inc
or
or
or
idiv
jne
aam
jg
aam
lret
cltd
add
mov
push
test
insb
mov
lods
in
into
mov
sbbb
cld
adc
shrl
dec
repnz
lods
jns
mov
push
scas
lret
jb
sbb
mov
sbb
mov
adc
fs
inc
mov
push
inc
sbb
insb
adc
xchg
into
movsl
pop
mov
push
sbb
mov
mov
lea
lahf
out
cmc
ficoml
and
adcb
and
xchg
pop
imul
jle
sub
jnp
pop
jmp
jno
push
inc
test
mov
bound
cmp
jno
ret
xor
mov
mov
pop
pop
jo
cld
loopne
jo
xchg
xor
xlat
or
mov
int3
ret
icebp
cmp
mov
add
or
movsl
push
adc
bnd
aam
sbb
dec
pusha
jns
rol
xor
sbb
enter
and
aas
daa
inc
xor
cmp
sub
loop
push
adc
notb
mov
sbb
insb
fs
stc
fs
adc
movsl
cmp
push
mov
int3
xor
xchg
fbstp
adc
lods
outsl
or
sub
incb
bound
sub
sub
dec
mov
testb
push
jae
push
push
ds
dec
pop
sbb
xor
pusha
and
dec
mov
or
jno
ror
xorb
pop
cwtl
bound
leave
daa
cmpsb
ss
sbb
in
imul
iret
hlt
rclb
dec
sbb
jl
jmp
iret
sbb
or
or
cmp
into
fmuls
loop
pop
inc
sar
out
or
pop
add
ds
mov
mov
clc
bound
and
cld
or
jo,pt
das
adc
lcall
les
xchg
pop
fsubr
or
inc
and
inc
ss
subl
repnz
mov
into
jmp
ficoms
paddq
sti
fbstp
leave
jae
inc
loopne
cmp
loop
movsl
movsb
or
cwtl
jnp
sub
lret
push
lods
lods
loopne
js
es
jne
sti
into
insl
out
fstpt
xor
sub
pop
add
popf
add
shrb
push
xchg
shll
out
arpl
lcall
jne
push
mov
push
dec
lret
es
cmp
loopne
cs
mov
push
stos
and
xor
lret
jo
popa
mov
sahf
iret
gs
arpl
push
push
mov
adc
mov
dec
out
pusha
mov
mov
xor
stc
sub
subb
cmpsb
icebp
jbe
push
xor
pop
jnp
inc
dec
sub
shrb
sub
jmp
pop
andb
out
fcompl
into
std
ljmp
pop
test
out
std
pop
pushf
subl
push
in
mov
mov
sub
es
mov
jl
sbb
or
jbe
mov
das
xchg
popa
push
mov
rcl
mov
lret
xor
dec
mov
fs
repnz
sub
ret
dec
jl
adc
mov
mov
push
mov
xchg
pop
add
lods
inc
adc
js
or
xlat
imul
or
mov
mov
out
cwtl
jnp
cmp
push
lods
ljmp
out
repz
push
lea
cmp
xchg
arpl
mov
dec
jae,pt
pop
dec
in
bound
xchg
in
lcall
movsb
adc
xchg
cs
pop
out
shlb
mov
dec
inc
scas
repnz
lods
in
push
mov
gs
jle
leave
mov
idiv
test
andl
jg
inc
cmpsb
push
sub
mov
cli
ficoms
out
inc
dec
std
mov
push
push
mov
jns
xchg
divl
negl
clc
sti
jecxz
repz
orb
or
hlt
push
jns
lock
jg
inc
adc
pusha
aaa
dec
cmpb
jp
fdiv
and
enter
mov
add
or
mov
scas
mov
adc
pop
leave
dec
xor
jge
cmpsb
pop
adc
adc
mov
insb
cmpsl
shl
fmull
out
push
add
jp
pushf
popf
mov
sbb
push
subb
or
pop
add
dec
ljmp
and
bnd
mov
stc
xor
pop
sbb
out
jg
mov
or
dec
cld
iret
fs
or
cmpsl
aas
arpl
adc
in
inc
lret
and
xor
insl
mov
jbe
xchg
daa
repz
dec
mov
imul
shll
pop
xchg
fisubrl
dec
faddl
xor
mov
jno
adc
fadds
or
fprem1
pop
xchg
sbb
pop
inc
pushl
add
mov
lcall
xchg
das
xchg
enter
repz
adc
xor
cmp
inc
fsubs
push
lods
mov
and
jecxz
arpl
lods
imulb
mov
xor
call
xchg
test
adcb
dec
jg
dec
dec
sbb
hlt
add
es
push
cmp
pop
and
aad
cmp
jg
or
loopne
push
andl
dec
pop
cmp
or
mov
repz
inc
add
push
xor
sub
mov
inc
stos
push
mov
lea
and
aas
cs
mov
out
push
test
xchg
cs
imul
clc
popf
mov
and
fdivl
sbbb
inc
and
pop
ds
cs
into
scas
adc
lods
pavgw
popl
test
push
mov
cmp
xlat
lods
jp
lcall
mov
and
sub
fdivp
or
adc
addl
test
jae
lret
xchg
cld
dec
and
cmp
adc
push
lretw
sub
out
lcall
mov
jl
jp
pop
rolb
fisubrl
jne
jno
mov
ds
lods
xor
movaps
faddp
stc
xlat
andl
outsl
pop
xor
jae
sbb
mov
adc
addr16
lea
sahf
lcall
scas
xchg
std
inc
aam
sti
jno
cmp
fistps
add
loop
decl
inc
sbb
sub
addr16
inc
lahf
leave
int
mov
in
and
mov
aaa
mov
mov
arpl
jne
dec
push
rcrl
test
test
pop
inc
insl
and
rcrl
cmpsl
out
cmp
in
sub
jne
sbb
jbe
mov
mov
repz
jns
jecxz,pn
jecxz
xchg
lds
add
inc
adc
mov
jmp
loopne
fcomip
rcrb
adc
or
dec
jecxz
ljmp
bswap
xchg
jae
into
outsl
xchg
cmpsb
jg
clc
ss
cwtl
mov
adc
push
fiadds
sub
outsb
outsb
daa
sub
inc
int3
mov
addr16
pop
mov
mov
xchg
dec
inc
shr
out
push
pop
es
daa
add
icebp
mov
mov
lahf
and
pop
bound
bound
das
add
loope
mov
stos
mov
dec
aaa
and
popf
xchg
cwtl
das
push
cmp
add
mov
sub
mov
mov
jl
add
arpl
movsl
mov
fisttpl
das
shrl
push
inc
push
mov
iret
lods
xor
sar
push
popa
scas
inc
pop
fistl
add
mov
mov
cli
out
dec
or
inc
fwait
mov
ret
das
mov
xchg
ret
mov
sbb
adc
out
outsl
stos
mov
out
test
mov
enter
mov
lahf
lea
push
sti
push
add
jge
sbb
test
xchg
subl
push
pop
stos
mov
addr16
divl
inc
out
rorb
ljmp
roll
sti
shl
fwait
and
xor
jne
push
push
and
sarl
mov
lahf
pop
and
jg
into
cmp
xchg
int
xchg
addr16
out
dec
xchg
or
jg
pop
mov
xchg
or
ss
mov
cmp
mov
fstpt
xchg
testl
in
pop
sub
cmp
aad
sub
sbb
and
div
add
or
andl
aam
sti
mov
andl
ret
pop
std
call
inc
mov
xchg
xchg
mov
lcall
out
jg
cmp
xor
jo
movsb
pop
push
xor
lret
cmp
stc
outsb
js
jnp
lcall
in
pushl
jl
stos
push
sti
push
dec
sub
xchg
call
push
hlt
imul
xlat
sti
adc
addr16
out
adc
push
mov
jp
inc
fimuls
mov
mov
sub
jnp
adc
pop
and
inc
sub
out
cwtl
aad
add
roll
sbb
add
movsl
shrd
inc
adc
or
cmp
cs
test
add
popf
sbb
popa
out
xor
sti
cltd
jp
rolb
aaa
popf
sbb
sub
fidivrl
enter
out
out
lods
data16
stos
push
shrl
cld
scas
fists
clc
pushf
add
outsb
or
add
out
arpl
mov
mov
xchg
adc
cmpsb
repnz
mov
inc
je
jne
addr16
xor
imul
xor
lcall
mov
in
lds
pop
xchg
cmpsb
cmp
in
add
adc
pusha
shll
pop
bound
sub
int
fists
mov
fxtract
jecxz
dec
dec
inc
lahf
add
push
mov
pop
pop
xchg
daa
bswap
outsl
or
fbld
ja
inc
fsubr
divl
imul
lds
xor
pop
and
loopne
xchg
stos
xchg
stos
mov
lea
mov
sbb
dec
mov
mov
std
adc
sub
aad
jecxz
push
push
imulb
cmp
stos
sub
mov
decl
push
ja
lds
pop
inc
mov
lcall
jle
mov
cli
inc
and
jne
dec
popa
lods
les
jne
into
add
nop
mov
mov
lds
lock
pop
cltd
cmp
fwait
or
fsubl
dec
xor
shlb
adc
sbb
mov
mov
mov
sub
dec
xchg
sbb
push
ss
mov
jae
test
call
push
loop
lahf
cmp
or
and
mov
hlt
mov
lcall
lret
push
int3
mov
or
mov
cmp
ffreep
jb
sti
cwtl
cli
push
dec
cmp
or
cwtl
fcmovbe
jmp
loop
jmp
arpl
fcomp
jmp
insb
or
pop
cmp
shrb
je
imul
dec
sti
dec
mov
adc
sub
xchg
jne
cmpps
aas
inc
add
aaa
out
push
cs
daa
jmp
ljmp
loope
jp
ror
mov
loopne
inc
sub
pusha
arpl
push
int3
pop
mov
sbb
stc
xor
jno
cmp
hlt
andl
dec
jnp
cmpsb
dec
inc
jg
mov
xchg
pop
cmp
mov
pushl
in
int
and
aad
xor
dec
aad
cmp
in
repz
add
jo
adc
add
add
stos
int
fdivs
sub
sbb
rclb
sub
into
and
popl
ret
imul
imul
ljmp
gs
pop
lret
add
push
lret
push
xchg
xor
adc
into
ret
scas
cli
fdivrs
int
movsb
lea
es
sahf
mov
jp
push
xor
fcomps
fnstsw
cmp
test
bound
and
and
mov
mov
outsb
jb
fbstp
les
les
xor
cwtl
out
in
mov
cmpsl
sarl
inc
xlat
push
sub
movsb
add
std
push
add
mov
in
xchg
push
sbb
mov
lret
mov
cmp
and
mov
mov
or
in
repz
out
jp
lahf
hlt
mov
sar
repz
cmp
xor
loopne
xlat
out
leave
and
xor
imul
sbb
and
dec
clc
cmp
repz
insl
cmp
xor
push
adc
fwait
xchg
loope
mov
sub
insl
aam
or
xor
xchg
ret
subb
lods
fldcw
xor
mov
lcall
cmpsb
mov
add
xor
aam
js
dec
aaa
dec
rorl
jle
sbb
imul
dec
mulb
stos
pop
pop
js
ds
cli
and
mov
ret
andb
cmp
mov
inc
std
in
mov
lods
cmp
pop
dec
roll
lret
sub
and
xor
pop
xor
aam
nop
jge
pop
add
push
imulb
aad
outsl
pusha
clc
mov
les
movsb
stos
fsubl
leave
test
pop
shrb
mov
mov
cltd
aas
mov
clc
sub
incb
ret
inc
push
mov
iret
inc
les
and
addb
pop
inc
and
std
cmc
mov
divl
sub
in
cmp
ret
fisttpll
jge
repz
out
xor
stos
leave
vmread
pop
stos
cmp
push
std
aad
sbb
pop
aaa
aaa
xchg
arpl
inc
nop
imul
lcall
ficompl
mov
test
lcall
push
fdivr
jmp
andb
cmp
aaa
mov
add
mov
dec
cld
outsb
cli
cmpsl
sbb
xor
test
xor
inc
repz
comiss
sub
pop
sub
aam
aas
scas
test
movsb
out
loopne
lret
jo
mov
sti
or
sub
sbb
xor
mov
push
sub
lds
mov
sub
rcrl
cmp
push
xchg
out
cmpsb
xchg
ret
adc
jge
pop
insb
xlat
popf
jecxz
ljmp
push
clc
idiv
pop
dec
incl
inc
call
push
cmp
out
pop
mov
push
into
inc
dec
xchg
dec
lcall
and
aas
lock
mov
or
and
or
pop
jb
lods
repnz
jae
push
mov
push
add
test
cltd
lock
cmp
bndstx
and
add
pushf
jge
adc
xor
adc
dec
jbe
mov
out
mov
adc
rclb
and
adc
imul
mov
shrl
mov
testb
ja
cmp
fcompl
add
jg
ds
dec
cmpsb
stos
shl
mov
filds
lods
jae
or
imul
int
out
neg
push
pop
push
mov
out
cmp
add
jb
lods
mov
ficoms
fs
gs
loope
insb
lods
push
bound
xchg
loope
jmp
inc
dec
enter
cs
and
jnp
lock
aaa
fcmovb
inc
stos
out
mov
jns
rolb
std
jg
icebp
xor
insb
dec
and
sub
or
rorl
xor
pop
push
push
es
push
pop
push
hlt
cmp
stos
sub
test
push
mov
loop
inc
adc
sbb
mov
sbb
out
rcr
and
lock
filds
jnp
push
push
push
cmp
push
adc
sti
cwtl
je
push
shll
test
incb
lods
pushf
xor
pop
xchg
fs
sub
cmpsb
call
or
popf
push
cmp
arpl
cltd
push
gs
clc
cs
xor
and
fcoms
ds
mov
fcmovbe
movsb
adc
loope
ljmp
xor
adc
jns
jge
jne
stc
lock
and
test
je
jns
dec
push
imul
jle
lret
jle
mov
jae
sti
adc
sbb
popa
cwtl
jl
in
push
jmp
call
mov
and
data16
and
cmpsl
xchg
inc
and
dec
cld
jnp
lcall
pusha
in
pop
fwait
pop
call
mov
mov
ds
cmp
mov
addr16
cwtl
lret
fadd
outsb
out
cmp
or
pusha
outsl
xchg
mov
or
jp
mov
lret
insb
test
cltd
cltd
filds
sub
fwait
clc
test
clc
cli
movb
adc
test
dec
dec
sub
pop
shll
lock
popf
data16
mov
or
jo
test
rolb
mov
adc
or
push
hlt
popf
inc
inc
xor
push
cmpb
sbb
loop
adc
outsl
inc
js
test
lods
xchg
sub
lods
sbb
lcall
jecxz
pop
xlat
loopne
scas
push
loope
add
lods
cmc
shrb
movsb
xchg
jae
inc
xor
add
loope
cmp
stc
int
fwait
lcall
push
mov
les
call
xchg
pop
shl
mov
mov
xchg
dec
scas
daa
ret
sub
cli
or
into
fnstenv
jnp
mov
aam
inc
pop
sub
shl
xlat
dec
mov
clc
test
daa
mul
cmp
adc
mov
adc
pushf
fs
divb
push
dec
add
pop
and
dec
or
sbb
mov
into
push
repnz
daa
dec
icebp
adc
xchg
adc
mov
sbb
imul
sti
sbb
or
loope
mov
test
jno
in
lret
aas
push
mov
or
dec
xchg
adc
outsl
outsb
cltd
filds
jle
mov
test
hlt
out
in
sbb
lcall
dec
aad
jl
std
stc
jg
fisttpll
scas
leave
stos
cmp
jne
mov
inc
jg
mov
ficoms
test
lcall
mov
addb
mov
inc
addr16
adc
adcl
jge
jg
add
and
test
adc
adc
and
in
pop
jge
lret
pop
inc
jno
aas
in
sbb
stos
testl
xor
fisubrs
cmpsb
jae
push
hlt
or
sub
mov
movsb
jg
push
aas
push
cs
jne
inc
test
lds
cmp
ljmp
pop
frstor
lods
push
adcb
cmp
mov
xor
xchg
mov
and
pop
add
cmp
jmp
adc
adc
dec
push
xor
int
inc
lret
sbbb
ret
jecxz
in
push
inc
negl
mov
fdivrl
lret
push
pushf
je
in
adc
mov
push
mov
enter
xchg
fmull
aas
sub
or
cwtl
pop
and
add
xchg
ljmp
cwtl
loopne
iret
lods
jbe
in
push
enter
imul
sub
inc
inc
nop
add
or
mov
rcll
push
inc
add
dec
cmpsl
lds
stc
aam
fldcw
test
xorb
mov
sahf
filds
shlb
into
xor
lcall
mov
hlt
cmp
mov
jbe
and
push
mov
scas
out
xchg
fiadds
mov
inc
loopne
dec
fimull
inc
jge
ja
sub
mov
repnz
in
jb
pop
ret
loopne
dec
dec
mov
outsl
lock
pusha
adc
mov
push
bound
loope
inc
cwtl
and
or
popf
jecxz
sbb
mov
pop
or
loope
sub
ljmp
cld
add
sub
std
sub
sub
or
pop
ss
lret
je
xlat
cmp
aas
repnz
and
or
scas
mov
lods
jle
cmc
lds
and
ret
aaa
out
lods
inc
ss
mov
loope
sbb
popf
jmp
ja
mov
das
ret
out
mov
and
iretw
or
jno
lods
push
popf
xchg
repz
out
testl
pushf
dec
cmc
add
mov
iret
shl
adc
sub
sub
jg
push
addr16
hlt
shl
cld
inc
mov
sub
jns
dec
pop
fmull
add
scas
adc
lods
dec
sub
shll
mov
adc
xchg
stos
and
out
fistps
add
or
push
and
and
lods
test
lods
testl
testl
ret
jmp
push
jne
pop
sub
pop
xchg
mov
jb
repz
jl
dec
movsl
push
filds
mov
cwtl
ret
sbb
in
lds
fidivs
xchg
das
or
rclb
sbb
add
shlb
ja
jnp
xchg
or
xchg
aam
sahf
inc
mov
es
in
add
pop
cmp
mov
jle
inc
arpl
cmp
sub
pusha
cmc
lret
push
jnp
jns
iret
int3
xchg
daa
aad
cmpsl
lret
sub
xchg
sub
add
in
sbb
cmp
push
ret
stos
clc
dec
enter
ss
cmp
push
scas
test
jle
testb
jg
mov
mov
dec
adc
xchg
push
lahf
mov
jmp
jnp
je
pushf
xor
mov
cmc
pop
jne
fwait
mov
sbb
mov
cmp
jp
je
xor
fstpl
in
xchg
nop
fimull
jno
lret
add
add
mov
cli
js
jns
pop
and
fiadds
into
shlb
xor
pop
int
xchg
add
push
pop
clc
out
and
scas
cmc
test
push
frstor
sub
or
push
lds
inc
sbb
jb
dec
lcall
into
sbb
jge
dec
insl
inc
or
mov
cmp
arpl
ljmp
loope
es
inc
adc
sub
mov
pop
xchg
inc
loope
push
iret
sbb
dec
dec
xchg
bound
mov
movsb
call
iret
jl
add
es
lods
inc
add
and
jmp
cmp
fxch
mov
xor
sbb
adc
cmc
push
mov
sub
repz
jl
xor
mov
loope
sbb
mov
es
repnz
jb
xor
inc
mov
cmp
lds
mov
inc
lcall
pusha
xchg
stos
popf
mov
mov
and
scas
enter
outsb
mov
push
lock
cltd
mov
pop
cmp
aad
mov
jno
mov
psrlq
cmp
pop
mov
pop
shrb
cltd
cli
add
inc
aad
gs
mov
in
jbe
and
cmpsl
es
pop
xor
cmc
cltd
push
xchg
repz
inc
test
in
inc
std
sbb
fistpll
xchg
sub
push
shrl
lods
mov
lods
push
adc
sti
dec
test
pop
cli
outsl
jnp
mov
inc
sbb
mov
cbtw
sarl
cmpsb
out
xchg
pop
mov
add
xchg
xchg
cmp
xor
push
mov
aad
mov
sarl
xchg
arpl
jnp
push
divl
lods
jae
add
cmp
sahf
inc
repz
mov
cmp
inc
in
push
sub
mov
cmpsl
lods
mov
jnp
sar
mov
cwtl
les
jb
cmp
xor
cmp
inc
xchg
leave
mov
xor
or
clc
push
inc
lods
shl
int3
pop
pushl
push
adc
and
mov
jno
mov
xchg
push
sub
scas
mov
stc
nop
xor
outsl
popf
outsl
pop
jns
int3
je
cli
mov
rcll
into
arpl
lock
mov
lods
pop
decb
imul
xchg
xor
push
nop
cli
jns
mov
inc
adc
and
mov
stos
mov
add
xchg
lds
push
ljmp
fwait
out
sbb
adc
lock
jmp
cmc
ret
out
cmp
lret
jbe
ret
jns
rcll
xchg
dec
ss
mov
mov
sbb
xor
sahf
mov
xchg
insb
mov
rcrl
jbe
ret
aam
add
insl
sahf
test
je
pop
inc
ds
cmp
xchg
xor
jecxz
out
js
xor
mov
mov
dec
or
push
inc
sub
xchg
sti
sbb
adc
dec
repz
push
add
ja
imul
cmp
or
scas
xor
cmpsl
out
pushf
cmpsb
mov
or
inc
jg
jo
imul
pop
mov
out
mov
int
add
fnstcw
dec
out
out
data16
outsl
rcrb
or
push
out
xchg
jo
seta
adc
mov
pop
sub
mov
add
jb
jl
or
adc
inc
enter
idivl
ja
adc
pop
pop
fimull
inc
mov
ljmp
imul
inc
aad
add
jp
mov
and
hlt
sbb
adc
iret
lret
xor
lret
test
pop
data16
and
pop
test
cmc
push
into
jmp
sub
repnz
pop
xor
dec
mov
leave
jecxz
sbb
das
jmp
popf
fnstsw
stos
pop
ret
inc
test
xchg
jae
lret
inc
sub
test
daa
dec
scas
outsl
inc
test
jp
ss
fs
dec
sbbl
dec
test
adc
loop
clc
into
aas
fmull
aam
adc
xchg
pop
mov
mov
jmp
sbb
roll
cmp
ret
sub
xchg
cmp
loope
sub
push
push
les
mov
and
jecxz
fiaddl
push
push
pusha
negb
jmp
add
mov
push
mov
jmp
or
sub
pop
mov
xchg
sub
jnp
fnstcw
movsl
imul
lods
ficomps
dec
int3
outsb
sti
inc
lcall
ss
push
add
adc
mov
nop
add
scas
divb
cwtl
pop
and
test
adc
xor
movhlps
adc
test
dec
adc
jnp
mov
clc
and
lods
rorb
pop
jmp
cwtl
sahf
shrl
lcall
sub
cmpsl
out
push
lods
xchg
mov
mov
ret
sbb
push
xchg
arpl
nop
fnstcw
add
or
arpl
icebp
xlat
and
int
test
add
lahf
xchg
dec
add
test
mov
fwait
imul
lret
xor
pop
sub
ljmp
aaa
jmp
notl
out
test
lock
ficoml
jge
nop
pop
dec
jmp
les
mov
push
jbe
xchg
shr
or
mov
shll
daa
movsb
mov
mov
jb
mov
add
cmp
imul
mov
aas
push
push
or
pop
fmuls
and
or
loopne
out
sbb
xchg
orb
mov
pop
mov
stc
xchg
div
sub
hlt
and
add
in
jp
cmp
loop
inc
xlat
push
test
xor
cmp
dec
call
mov
sub
pusha
push
xor
sub
call
push
push
orb
jg
fmul
push
push
mov
add
sbb
pop
in
and
or
and
cltd
lods
dec
pop
and
cwtl
xor
sbb
imul
push
cmpsb
inc
adc
adc
repnz
sub
push
fiadds
lret
lock
decb
jp
push
scas
jl
pop
test
jl
shr
popf
push
push
push
in
jne
mov
shr
fldl
inc
mov
sub
add
pop
imul
jmp
xchg
roll
mov
add
sarl
mov
mov
cmp
maskmovq
mov
rcl
ret
cmc
jne
inc
push
stos
or
mov
scas
mov
mov
test
loop
pop
mov
test
rcrb
cs
fcmovnb
add
loopne
ret
mov
push
xchg
jne
mov
mov
js
pop
ss
sbb
or
iret
pop
inc
scas
jae
subb
pop
lea
and
js
testb
or
out
dec
jbe
mov
pop
lahf
add
jle
into
repz
push
mov
jne,pt
mov
fcomps
lcall
fsubr
ficompl
in
fdivp
repz
lea
jne
cmp
xor
bound
fisttps
lods
sub
mov
pushf
popf
add
pop
sahf
mov
mov
cmpsb
dec
mov
popa
ret
shl
pop
iret
lods
inc
clc
cwtl
or
ret
or
dec
lret
fdivs
xor
lods
xchg
mov
and
add
push
shlw
mov
jae
ss
int
inc
div
sub
adc
inc
ficoml
xor
mov
mov
cmpsl
loopne
and
cmpsl
push
push
pop
pop
test
and
xchg
cmp
lcall
jge
insb
in
push
push
addr16
sbb
cmp
insb
movsb
lret
es
movsb
jge
test
std
sbb
mov
repz
popf
aam
sbb
or
mov
in
xchg
and
push
or
add
mov
sbb
jb
stc
adc
out
insl
sahf
dec
mov
cmp
enter
addr16
pop
push
jmp
mov
mov
add
out
lahf
test
adc
lahf
fisubl
repz
divb
sbb
xchg
xlat
inc
cmpsb
pop
mov
jb
inc
pop
xchg
xor
je
cs
mov
cmp
push
mov
xchg
daa
dec
popa
sub
push
cld
mov
jmp
aad
pop
jne
out
popa
cwtl
popf
inc
cmpsl
ror
fcomps
loope
into
jecxz
mov
data16
lret
sbb
ret
jne
add
mov
or
and
mov
out
or
insl
pop
imul
lcall
int
into
add
loopne
rol
jnp
inc
and
push
fnstcw
push
dec
push
mov
cli
fisttps
pop
sub
adc
adc
shl
in
jbe
add
sub
sbb
call
jl
mov
mov
adc
xchg
add
out
pushf
xor
push
add
add
stos
or
xor
dec
mov
and
scas
mov
fld
vpmacssdqh
jno
insl
inc
add
insl
pop
jg
mov
mov
dec
dec
out
fmul
rcll
or
pop
data16
adc
pop
std
lods
clc
fisubl
gs
fisubrl
inc
cmpsb
xor
loopne
mov
stc
or
out
pop
sbb
lcall
mov
adc
mov
arpl
pop
addr16
cwtl
add
fistl
add
cmp
movsl
or
mov
dec
add
mov
jae
mov
ret
movsl
mov
mov
cmp
popf
sub
sbb
mov
xchg
xor
mov
sahf
das
pop
popa
call
stos
pop
subl
push
cmpsb
xor
mov
inc
add
cmp
pop
lods
push
mov
push
lcall
mov
mov
stos
cwtl
int3
xchg
push
and
adc
xchg
push
cmp
inc
addr16
into
cmpsb
iret
sbb
mov
or
push
add
inc
inc
cmp
jns
in
pop
repnz
add
add
push
out
lods
pop
mov
push
mov
add
jae
sbb
neg
push
xchg
mov
add
jae
xorb
dec
insl
test
mov
xchg
faddl
inc
jl
movsl
jge
stc
ljmp
pop
push
inc
out
sub
loopne
outsl
out
lods
xchg
fisubrl
jecxz
jno
in
mov
jg
or
jecxz
or
xchg
adc
lods
pop
popf
inc
xchg
push
push
pop
lea
loop
cs
adc
icebp
mov
add
movsl
push
in
arpl
mov
sub
xchg
vmaxsd
sbb
pop
cwtl
push
inc
mov
out
sub
dec
or
mov
rcr
sbb
jbe
incl
mov
push
popa
xor
cld
loopne
push
or
cmp
fucomip
imul
jg
push
cli
or
dec
inc
adc
cmp
out
popl
jno
dec
xchg
fadds
mov
mov
scas
dec
add
insl
inc
out
jmp
int3
push
xor
inc
push
push
xchg
test
stc
repnz
int
in
mov
xchg
lret
pop
xchg
cmp
aad
xchg
jle
movsl
cmpsl
test
mov
and
fiaddl
enter
out
inc
lcall
mov
rol
xor
fadd
inc
or
and
aaa
sub
sbb
sub
movsb
dec
pop
in
fsubs
scas
cs
lock
fdivrl
add
push
faddp
pop
add
adc
mov
adc
inc
clc
dec
shll
push
rorl
xchg
sub
repnz
adc
andl
push
cltd
cli
lea
add
loope
xlat
cmp
pop
popf
add
ja
sub
rcl
stc
or
ret
in
daa
lock
loop
xchg
mov
cwtl
lock
push
pop
jno
mov
mov
inc
in
push
ret
push
lock
scas
push
xchg
es
adc
xor
nop
jle
jb
xchg
das
jo
mov
inc
adc
cwtl
pop
mov
pop
push
je
pop
push
push
push
test
push
or
mov
ret
cmove
mov
inc
popa
aam
mov
ret
push
enter
fdiv
je
sbb
popa
or
xchg
pop
nop
push
mov
sti
or
mov
jg
lods
mov
pop
fsubl
int3
idivl
or
mov
pop
hlt
mov
in
mov
xchg
repz
js
in
sbb
jle
pop
shrb
data16
aad
dec
das
pop
cmp
or
enter
lods
xor
mov
sbb
cs
cltd
jg
mov
ss
inc
inc
xchg
mov
fsubrp
cmpsb
add
xchg
enter
popa
scas
iret
adc
addr16
shr
ljmp
inc
test
mov
clc
in
pop
sbb
cld
mov
mov
sbb
fsubl
leave
movsb
pop
je
push
push
popf
jnp
dec
xchg
xchg
fldcw
or
adc
adc
sbbl
test
icebp
lret
dec
ja
imul
in
jne
mov
rolb
dec
sbb
mov
mov
adcl
ja
rcr
insb
daa
jae
cmp
lret
popa
jnp
cmp
enter
mov
push
into
sbb
nop
fbld
gs
push
out
adc
stos
sbb
inc
or
sbb
int
filds
and
inc
fdivs
pop
pop
adc
pop
pop
and
dec
sahf
mov
jo
mov
adc
push
push
outsl
pop
jg
movsl
not
push
ret
mov
lods
adc
sarl
xchg
js
cmp
stc
ljmp
mov
arpl
les
jo
rcrb
dec
out
pop
clc
mov
mov
shl
sbb
movsl
imul
lea
mov
jp
dec
clc
call
and
mov
or
fsubp
mov
lret
movsb
mov
pusha
fcoml
mov
jle
sub
inc
jno
sbb
lret
test
loope
mov
andb
inc
sbb
pop
mov
test
inc
cltd
jg
pop
sbb
cmp
mov
mov
inc
dec
dec
jecxz
sbb
loopne
and
mov
addr16
repnz
icebp
sub
push
sub
insl
jo
jbe
push
mov
outsl
cmp
arpl
sbb
rcrb
int
or
xchg
flds
mov
pop
andl
out
dec
cwtl
pop
or
fnstsw
sbb
mov
xor
scas
pushf
jecxz
ret
mov
adc
std
or
subl
gs
mov
pop
popf
fdivrs
out
fidivrs
pop
cmp
fcmovu
cmp
nop
jne
shrl
or
push
inc
push
jle
push
dec
add
fiaddl
int
sub
fistpll
popa
pop
fs
js
mov
dec
cmp
mov
push
dec
icebp
mov
jne
movsl
scas
xor
cmp
ret
inc
scas
fisttps
aaa
xchg
pop
popa
dec
fdivr
and
jmp
out
call
pusha
adc
test
cmp
roll
mov
mov
mov
and
test
movsl
adc
gs
adc
mov
fmul
pop
inc
loopne
ljmp
cmpsb
pop
fmull
mov
xchg
dec
sub
lea
setbe
push
ljmp
bound
daa
jne
mov
and
rorl
push
add
movsb
add
loopne
xor
push
mov
cmp
std
add
xlat
icebp
jl
vmwrite
stos
cmp
mov
lea
xchg
or
mov
cmp
dec
stos
sub
pop
jecxz
xchg
bound
adc
repz
or
jae
test
dec
pop
dec
adc
out
sarl
mov
shr
sbb
jno
push
loopne
cmp
aaa
add
xchg
mov
out
adc
dec
lock
mov
cmpsb
or
cmc
faddl
mov
jg
dec
cs
jns
pushf
lock
xor
cmp
gs
jl
jp
movsb
and
fisubl
pushf
movsl
xchg
dec
mov
inc
ljmp
dec
mov
inc
imul
shlb
pop
cli
cmc
mov
jne
push
pop
xchg
sub
rcrb
pusha
stc
pop
outsl
and
fmul
idivb
inc
pop
and
push
pusha
xchg
popa
add
jmp
cmp
and
fwait
xor
adc
nop
enter
imul
jnp
push
outsl
jo
fmuls
cltd
and
push
xlat
shlb
test
fcomps
lods
out
inc
xchg
sub
leave
mov
push
mov
xchg
jmp
add
sbb
mov
loopne
xor
xor
inc
cmp
inc
dec
push
xor
lret
push
test
or
mov
dec
movb
testl
loopne
mov
ret
push
dec
nop
mov
push
dec
mov
fs
inc
lods
inc
sarb
dec
push
pusha
jns
xchg
ss
xchg
jne
mov
xor
mov
cmc
adc
fcmovnb
cmovns
xor
pop
xor
inc
dec
pushf
xor
push
inc
fdivrp
pop
xor
and
adc
add
jle
mov
test
popa
loopne
push
mov
inc
into
jl
mov
lea
jge
push
outsl
rcrb
push
out
and
in
xchg
inc
push
icebp
repz
push
fildll
aas
cmpsb
pop
ja
rol
jbe
sub
out
add
ds
mov
jbe
mov
insb
cmpsb
decb
ss
popa
das
idivl
sub
cld
pop
adc
cmp
cwtl
decb
inc
outsl
dec
xchg
push
adc
mov
jg
shr
fidivl
inc
xor
mov
xchg
sbb
rcrl
push
dec
push
add
pusha
daa
out
cs
lret
popa
mov
lcall
dec
push
xchg
cwtl
and
fs
stos
das
push
inc
shl
mov
call
aad
sub
shlb
ljmp
fnstsw
int
es
stos
pop
or
popf
inc
lahf
mov
adc
gs
or
rcrb
repz
push
int3
lea
adc
out
or
lahf
mov
out
mov
jb
cld
stc
mov
packuswb
or
sub
les
push
and
and
adc
sbb
add
add
xchg
xor
es
fiaddl
jno
lods
mov
sub
test
mov
mov
pop
cmp
daa
in
adc
popa
fdivs
and
inc
xchg
imul
cmpsl
mov
pop
mov
inc
daa
lds
push
sahf
pop
pop
sub
mov
jmp
adc
out
or
mov
pop
lcall
es
dec
or
and
or
decl
xchg
fwait
add
je
push
push
test
sbb
fcompl
xor
mov
ljmp
add
movsl
dec
ss
rcll
mov
std
into
jnp
adc
arpl
popf
dec
jl
andl
jbe
popf
adc
adc
repz
call
adc
push
out
cwtl
test
cwtl
xchg
loop
mov
or
and
and
ds
mov
mov
sub
loop
clc
daa
cmp
sub
js
push
pop
stc
hlt
add
xchg
xor
dec
xor
dec
add
ret
lods
nop
rorl
addr16
lcall
lret
mov
ja
les
mov
jl
xchg
jge
incb
in
or
cmp
out
ret
call
out
mov
pop
mov
ss
mov
fnstcw
xchg
movsb
dec
inc
outsl
push
psrad
mov
mov
adc
test
scas
xchg
pop
movsb
cltd
adc
mov
push
lods
jo
mov
icebp
and
popa
ds
out
enter
and
inc
jne
cwtl
pop
repz
xor
shlb
push
divb
mov
push
sub
mov
rcl
xchg
dec
sub
rcrb
in
and
add
xchg
and
sbb
fdivrs
pop
leave
push
xor
and
imul
jns
pop
les
cmp
es
hlt
out
sbb
pop
push
pop
fldenv
push
xor
sbb
scas
mov
fdivp
ret
lods
fwait
mov
jl
aaa
es
nop
mov
add
stos
scas
mov
movsl
adc
repz
aas
ss
inc
lcall
xchg
sub
aam
lods
mov
sbb
data16
push
pushf
dec
repnz
xor
test
pop
div
sbb
rcll
add
xor
push
add
xchg
adc
xorb
adc
aas
mov
xor
nop
popf
adc
push
dec
and
pop
mov
int
push
mov
mov
push
sarl
daa
ss
arpl
rcll
outsb
mov
cmp
push
jecxz
fnstsw
xchg
pop
fucom
add
stos
cs
ja
push
fnstsw
dec
cmp
ret
xor
sbb
or
cmp
mov
jno
push
xor
mov
je
daa
ret
into
push
hlt
mov
jne
inc
xor
or
mov
jb
dec
adc
inc
rolb
test
jns
add
mov
jge
xlat
fistpll
stos
pop
push
xchg
dec
orb
add
pop
clc
negl
pop
cli
scas
loop
aam
test
call
push
cmpsl
mov
cli
das
cmp
or
push
daa
mov
out
pop
dec
mov
int3
add
je
leave
sbb
add
sbb
scas
push
mov
xor
and
pop
mov
pusha
sbb
data16
ss
adc
cmpsb
and
dec
repnz
sahf
cmp
cmp
test
cmpsl
cmpsl
ljmp
mov
inc
js
inc
stos
inc
sti
pop
cs
mov
mov
cmp
repz
fstps
and
jo
xor
arpl
test
mov
pusha
loop
push
sub
jno
mov
jnp
push
ret
loop
xchg
mov
call
mov
push
pop
push
mov
or
fisttpll
and
mov
shlb
mov
pop
xor
xchg
scas
sbb
fcomip
shlb
fs
sbb
in
or
insl
inc
dec
lret
jge
xchg
sub
add
cmc
in
push
cmp
adc
mov
call
cmc
jge
loopne
xor
rorl
adcb
stos
idivb
jbe
adc
pop
dec
lret
push
insl
popl
jp
or
movb
popa
int3
mov
aaa
out
xchg
addr16
cmpl
call
lahf
lods
gs
mov
mov
mov
ljmp
aaa
pop
xor
jl
dec
xor
jno
mov
push
mov
imul
sub
scas
lahf
test
insb
ds
outsl
sub
test
popa
xor
mov
mov
dec
mov
repz
sub
lcall
imul
mov
sbb
xor
scas
mov
mov
xchg
mov
iret
nop
clc
inc
adc
arpl
cs
sub
sub
jecxz
movb
movsl
insl
jle
rcll
test
add
xor
andb
mov
cmpsb
inc
loope
scas
daa
and
jns
inc
push
nop
sub
and
mov
repz
pop
and
arpl
jns
pop
push
loopne
outsl
movb
popa
sbb
sbb
int3
mov
mov
pop
scas
leave
jmp
js
dec
pusha
ret
cld
and
js
ljmp
inc
xchg
aas
adc
push
dec
mov
mov
mov
mov
cs
sub
cli
sbb
lock
in
jne
sub
push
loop
das
in
jne
push
dec
into
cmp
iret
jae
xor
xor
xorb
stc
movsb
in
out
int3
lahf
fsubrl
mov
or
ljmp
mov
or
sbb
in
ds
xor
pop
outsl
popf
inc
fidivs
adc
ja
xchg
adc
clc
sbb
cmp
sarl
insb
or
xchg
jmp
popa
pop
sahf
inc
das
les
gs
mov
cmp
cmp
scas
dec
stc
add
adc
mov
repz
add
lea
xor
notb
push
cli
pop
add
popf
xchg
xchg
mov
in
mov
sbb
lods
cmp
add
ret
jae
sahf
dec
jp
call
clc
loop
push
mov
sub
dec
ljmp
xor
inc
sti
jbe
adc
out
lods
imul
pop
pop
dec
pop
fcomi
das
dec
out
ss
push
xlat
sbb
cmp
adc
push
cmc
ret
add
mov
xor
mov
loopne
cwtl
fmul
jp
pop
push
inc
inc
dec
packuswb
rorl
jle
aaa
xchg
iret
dec
inc
mov
jmp
je
fwait
shll
out
loopne
xor
bound
aad
cmpsb
movsl
test
inc
lret
inc
push
mov
enter
adc
out
test
mov
repz
mov
jg
or
das
jg
arpl
movsl
mov
aad
das
call
mov
push
adc
fstpt
lods
xorb
pop
sub
fdivl
mov
adc
pop
adc
rcr
dec
cmpsl
popf
mov
mov
cltd
or
and
pop
aad
imul
scas
mov
add
and
xor
mov
int3
stos
jle
xor
iret
nop
bound
cmpsl
iret
daa
pop
leave
push
sti
ret
lods
aad
rolb
inc
jo
pop
xor
push
xchg
adcb
xchg
and
lds
jne
movsl
aas
test
cmpsb
jle
fwait
mov
adc
sub
cltd
push
sub
clc
inc
gs
in
dec
and
out
es
and
mov
dec
xchg
test
imull
loop
cmp
jns
lods
les
fcompl
dec
dec
mov
jle
sarb
stc
mov
jmp
sbb
test
nop
imul
sub
sub
shlb
sub
push
mov
lret
jl
mov
leave
rorb
add
and
xor
or
xchg
mov
jp
mull
push
mov
repz
and
dec
shlb
frstor
and
mov
jno
mov
mov
jmp
in
push
scas
loop
dec
movsl
ficoms
mov
lods
mov
adc
cmc
add
inc
xchg
adc
mov
int3
outsl
jle
xchg
pop
repnz
xor
dec
orb
in
mov
aad
inc
andb
sbb
ds
lods
push
movsl
cmp
pusha
mov
push
mov
jg
out
inc
cmp
sbb
gs
addr16
std
push
nop
movsb
adc
movsb
arpl
leave
cwtl
adc
mov
addr16
xchg
mov
rep
cmp
and
out
xchg
sahf
lret
ds
mov
lcall
or
ja
fistl
jne
je
inc
add
pusha
adc
in
in
daa
sub
inc
bound
mov
clc
mov
or
fdivl
jecxz
dec
fsubs
xor
sbb
mov
add
sbb
xchg
ss
jb
or
das
test
hlt
jge
mov
pop
pushf
sbb
xchg
push
cwtl
push
adc
faddl
inc
test
xchg
push
adc
ret
or
sub
not
std
ds
cmp
fdivrs
repz
add
jmp
aam
sub
and
lock
and
jnp
popw
enter
lret
ja
mov
mov
fwait
mov
shl
lahf
std
fwait
stos
mov
inc
adc
lahf
jle
pop
shl
test
adc
xchg
jge
adc
popf
pushf
sbb
in
test
mov
mov
int
sbb
xacquire
jns
mov
xor
movsl
mov
insl
clc
pop
daa
std
jmp
sub
push
mov
lahf
test
test
scas
scas
mov
mov
cs
jg
sub
call
scas
aas
push
dec
xchg
dec
orl
jae
daa
addr16
push
xchg
and
lds
ss
pop
cmp
rcrb
mov
repnz
iret
xchg
and
pop
add
adc
bound
or
jle
cli
fmull
test
add
mov
cmc
popa
repnz
addr16
sub
jp
mov
and
mov
fnstenv
icebp
test
movsb
fmuls
stos
mov
push
into
mov
inc
xor
xchg
xchg
lret
adc
inc
cli
mov
or
inc
add
mov
clc
fwait
inc
push
inc
pop
sbb
loopne
and
xchg
dec
daa
and
or
mov
xchg
ror
scas
xchg
or
inc
test
frstor
add
xlat
fs
jmp
insl
cmpsl
cmp
bnd
loop
bound
insl
sub
inc
dec
push
sub
sarb
mov
xchg
push
mov
jnp
adc
cmp
push
or
ja
pop
testl
jno
mov
outsl
mov
mov
aaa
adc
mov
fmuls
add
std
dec
stos
adc
lods
les
std
lods
adc
cwtl
ss
sub
jecxz
das
mov
mov
mov
adc
xchg
mov
dec
cmp
lahf
sbb
mov
ja
pop
outsl
hlt
decl
xor
stc
movb
in
ficompl
push
push
movsb
inc
test
jecxz
jbe
cltd
imul
mov
mov
xchg
neg
fs
test
imul
insb
aam
push
jb
lods
mov
sbb
pop
mov
ja
sub
jmp
lods
mov
lock
js
ljmp
aas
fisttps
leave
fisttps
or
ljmp
cwtl
pop
aas
std
mov
repz
adc
pop
jge
inc
add
jecxz
ljmp
mov
push
pushf
xchg
add
fstl
ret
and
inc
cmpsl
in
push
xchg
repnz
and
inc
push
mov
dec
lcall
rclb
mov
cltd
in
lahf
push
lret
jnp
sub
xchg
dec
mov
iret
pop
pop
je
cs
mov
mov
fs
mov
mov
xchg
xchg
insb
movsl
push
sub
mov
shlb
push
js
sub
dec
je
pop
ja
sub
inc
cmpsb
sbb
pusha
xchg
call
mov
pop
adc
xchg
push
ss
int
std
iret
lret
push
or
jo
xlat
fwait
adc
adc
mov
loop
fstpt
and
jo
stc
dec
lea
data16
shr
nop
mov
dec
fwait
ret
repnz
dec
push
and
dec
aam
sbb
insb
cltd
add
dec
cltd
fwait
out
sarl
into
icebp
stos
push
pop
cltd
ret
aad
vmovhpd
in
repz
mov
ret
mov
ret
sbb
jbe
xchg
cltd
mov
ljmp
mov
xchg
repz
xchg
dec
in
int
movsb
ret
add
mov
mov
mov
insb
fstps
ja
adc
fmul
test
mov
sbb
call
sub
inc
jg
imul
mov
ja
mov
jnp
ret
adc
pop
insl
xchg
sbb
mov
xchg
or
test
jo
pushf
adc
imul
fcmovnb
sahf
ret
addr16
sti
fdivrl
vunpcklpd
mov
or
mov
push
pop
neg
icebp
rorl
loopne
inc
ja
sahf
inc
aad
loope
pop
shlb
shrb
jb
pusha
fnstsw
dec
cli
xchg
xor
mov
mov
icebp
outsl
ja
mov
stos
xchg
dec
pushf
inc
fildl
mov
ret
loop
sub
inc
cmpl
mov
and
jl
or
jle
std
int3
or
shl
xlat
or
jno
fidivl
movsl
scas
and
sarb
fdivs
aaa
pop
dec
scas
bound
sahf
jl
xorl
fcom
inc
inc
adc
mov
movsb
cld
call
push
outsb
xor
mov
mov
sub
in
mov
add
in
test
mov
test
bound
iret
pop
rcll
dec
loopne
push
es
test
push
push
iret
mov
push
outsb
push
ret
icebp
pop
rcll
mov
sub
loopne
sahf
mov
mov
or
adc
sub
xchg
inc
icebp
leave
es
cwtl
and
pop
test
jp
or
xchg
jae
add
inc
xchg
lcall
add
pop
push
xor
add
enter
cmp
in
shrb
jb
lret
test
gs
mov
inc
inc
mov
lock
push
sbb
xor
hlt
out
cmp
popa
pop
jg
adc
in
dec
cmc
pushf
push
jae
jmp
jno
jl
inc
inc
or
fwait
stos
fadds
mov
adc
ja
pop
dec
ss
mov
scas
mov
aad
cmpsl
dec
bound
cmpsb
fimull
test
xor
jbe
add
lods
sbb
in
cmp
mov
emms
lods
mov
pop
dec
xchg
rcll
js
cmc
jl
fucom
movsl
mov
mov
pop
cmp
out
sbbl
fxch
mov
dec
pop
xor
sbbl
int
adc
fsubs
insl
mov
xor
pop
jp
mov
addr16
cs
mov
cmpsl
mov
sub
into
pop
das
and
sbb
cmp
jmp
lret
lret
xor
sbb
or
or
test
xchg
sbb
mov
and
jb
aam
sti
add
hlt
xor
lret
imul
pop
aas
dec
cmp
lret
pop
sahf
jbe
shlb
push
pushf
push
jl
mov
nop
stos
dec
shl
pop
jle
pop
jecxz
mov
das
nop
cld
and
lret
jo
into
stos
jb
imul
aas
lcall
pop
negl
loope
out
pushl
xchg
lods
sbb
jnp
shlb
scas
mov
inc
notb
cmc
and
mov
sbb
jl
dec
mov
pushf
sub
mov
jmp
cmp
adc
push
mov
out
mov
dec
arpl
xchg
pop
loop
in
jnp
movsl
das
mov
in
push
sbb
out
int
xor
adc
jecxz
imul
add
and
aaa
mov
jmp
xor
push
dec
gs
loope
push
fnstcw
sub
in
enter
pop
jbe
pop
dec
shrl
imul
mov
dec
data16
imul
cmp
and
pop
mov
dec
mov
sahf
sar
lds
push
dec
cmpl
sbb
les
xchg
les
mov
fucomip
fs
cmpsb
outsl
mov
es
loopne
pop
jecxz
add
sub
pop
dec
push
pop
hlt
inc
mov
xchg
pop
stc
ret
push
xor
mov
lods
hlt
push
dec
pusha
lea
ficompl
ja
in
push
xchg
rcl
xchg
iret
push
out
sbb
sbb
pop
pushf
add
push
repnz
jge
xlat
xor
push
loop
icebp
or
jne
in
mov
dec
addr16
and
xchg
lea
or
dec
mov
mov
fwait
mov
lds
inc
lcall
mov
test
cmp
mov
stos
mov
push
lods
jmp
pop
ror
mov
inc
pushf
jl
pop
mov
imul
adc
mov
sbb
popf
fidivs
jg
dec
fdivs
filds
imul
push
das
ret
sbb
and
icebp
and
cwtl
sbb
orl
jno
sbb
stc
sarl
pop
jae
xchg
sbb
push
ficoml
jmp
add
mov
push
pop
call
mov
adc
inc
push
xlat
negl
jecxz
pop
and
cmpsb
sbb
and
sahf
lahf
jl
xor
xor
adc
or
cmp
push
int3
ret
cmp
mov
or
fdivrl
je
cmp
or
rcrb
out
push
ljmp
and
or
enter
scas
add
insb
fdivrl
jmp
mov
add
add
ret
push
jecxz
cld
jle
imul
push
sub
sub
out
sub
mov
and
cs
sti
add
add
das
add
mov
imull
dec
arpl
fdivrl
push
sbb
push
add
js
in
inc
sub
cmp
jl
subl
movsl
stc
xchg
xchg
clc
mov
or
mov
negb
lock
in
pop
mov
cmp
in
cmc
jae
dec
mov
ret
rorl
jmp
fiaddl
int3
daa
push
push
inc
pushf
je
mov
addl
and
cmp
icebp
xchg
movsb
psubd
call
pop
mov
xchg
dec
push
cmp
push
out
jo
andl
adc
movsl
inc
aaa
sbb
cld
iret
loope
push
xor
inc
adc
mov
test
inc
leave
xchg
lahf
sbb
aad
push
mov
push
clc
stos
iret
jle
add
or
imul
mov
ds
jno
int3
or
call
sahf
xchg
adc
mov
xor
add
push
call
sbb
aad
shlb
loopne
mov
pop
jnp
and
inc
lods
pop
out
cltd
pop
hlt
incb
sub
daa
xchg
aam
or
dec
mov
mov
or
test
sbb
cmpsb
xchg
aam
push
cwtl
xchg
jmp
jecxz
insb
push
jecxz
stos
call
mov
dec
lret
ror
and
cmpsb
sahf
or
test
loop
cmp
xchg
cmp
adc
inc
mov
pop
dec
mov
leave
fcomp
cmp
xchg
sbb
or
cmp
jnp
in
faddl
mov
shlb
xchg
clc
sbb
testl
or
push
pop
xor
lahf
cmp
push
shrb
dec
js
test
xor
hlt
bound
push
inc
sti
dec
int
data16
dec
adc
push
pop
xchg
pop
sbbb
dec
dec
fdivs
mov
xchg
mov
fs
mov
aas
pop
dec
test
push
inc
push
sub
xor
je,pt
push
dec
clc
lret
cmc
lds
adc
into
stos
test
sti
pop
inc
das
repnz
xor
pop
loopne
sub
andl
jno
mov
lods
jl
test
jo
icebp
mov
insb
ss
cmp
shll
data16
popa
jbe
fnstcw
test
inc
push
mov
dec
xchg
out
mov
pop
out
je
nopl
loope
pusha
jg
sub
scas
cwtl
cmp
imul
or
aaa
xchg
push
andl
ljmp
scas
mov
push
test
movsb
loope
mov
insb
inc
push
movsl
cmp
in
xchg
cmpsb
lods
je
je
xchg
fsubrs
daa
out
xchg
loopne
outsl
rcl
cmp
inc
and
dec
fs
leave
test
jno
inc
jmp
cmp
test
mov
or
addr16
es
ficomps
or
scas
test
fs
arpl
cmc
adc
fsubs
test
aaa
cltd
pushf
sub
int3
lods
fdivrl
repz
fnstcw
into
lret
nop
dec
lods
add
inc
sbb
mov
dec
push
loop
xor
mov
int
mov
jmp
push
stos
lret
dec
push
xchg
cs
mov
rcr
arpl
int3
dec
pushf
fbld
push
inc
or
ljmp
nop
push
mov
adcb
arpl
ret
lret
insb
into
leave
or
push
movl
mov
adc
in
pop
pop
mov
dec
in
stos
stos
dec
xor
outsb
movsb
sbb
sbb
push
rorl
dec
rcll
or
pop
pop
push
jmp
push
inc
fisubl
xor
sarl
ss
aas
dec
outsl
nop
sub
daa
sbb
popa
mov
cwtl
hlt
xor
or
push
fistl
or
test
push
or
push
mov
xchg
std
nop
mov
out
jno
jle
mov
mov
inc
or
push
xchg
cs
mov
and
xchg
mov
into
into
nop
fistpll
fidivl
ret
jne
jnp
les
xchg
out
jbe
mov
pop
je
xor
not
lret
out
mov
ret
stos
jle
jecxz
mov
popa
push
dec
pushf
testl
in
aaa
ss
fnstsw
pop
das
mov
jns
loop
and
sbbl
psubq
cmp
ds
xchg
fisubrl
push
test
ds
daa
inc
mov
insb
insb
mov
mov
dec
mov
jae
xchg
rclb
push
jae
jbe
mov
xor
and
loope
das
aad
mov
filds
aaa
loop
jecxz
cmp
adc
shrw
insb
mov
std
adc
xchg
xchg
sub
sub
lods
jns
jge
adc
jle
sub
mov
sti
les
cmp
mov
push
sti
xor
fs
mov
aas
lods
push
jle
fldenv
mov
sbb
jae
sub
dec
out
mov
loop
mov
cwtl
push
aaa
jg
cmpsl
mov
lock
shrb
out
cmp
loope
mov
pop
lods
fs
shl
sarl
sbb
add
mov
mov
mov
push
pushf
dec
xor
add
push
lret
lret
into
xchg
push
mov
movsb
ljmp
mov
and
es
sub
cmp
xlat
imul
xchg
push
push
mov
mov
sub
mov
mov
mov
mov
pop
scas
aam
dec
call
and
fldcw
cmp
leave
mov
stc
movsl
out
push
push
repz
clc
lret
movb
xchg
mov
hlt
inc
out
and
jg
into
nop
hlt
jbe
mov
movsb
mov
cmp
adc
jmp
mov
xor
sbbb
or
je
push
pop
pop
shll
insl
into
mov
cmpsl
xchg
and
arpl
pop
loope
iret
daa
mov
sub
in
mov
into
lret
fldenv
mov
leave
lods
mov
and
mov
int3
fldl
mov
push
pop
push
cltd
mov
xor
adc
push
mov
add
jp
pop
adc
cwtl
test
stc
mov
rorb
push
das
scas
arpl
aaa
fs
stos
mov
inc
sub
fstp
xchg
fistps
lock
cmpsl
mov
xor
scas
rcrb
xchg
pushf
js
divl
jns
cmpsb
xchg
sub
xchg
pop
loop
lret
or
dec
repnz
or
aaa
or
fidivrs
inc
pop
sub
aaa
xor
jno
fsubrs
inc
ja
enter
xchg
jl
fucomp
in
in
cmp
aaa
and
ret
mov
xorl
adc
cmp
lea
and
mov
pop
adc
lret
filds
call
push
incl
jecxz
pop
fnsave
mov
push
imul
dec
jns
pushf
jns
dec
dec
inc
sub
and
jl
fnstcw
cmp
dec
into
or
adc
inc
rcr
fwait
mov
test
pop
xor
jae
bound
inc
aam
cmp
data16
jbe
mov
rorl
or
adc
out
and
pop
lods
pop
stos
cmp
loope
inc
inc
jns
loopne
outsl
scas
incl
add
jmp
dec
xchg
push
and
cmp
push
dec
mov
push
dec
push
jmp
inc
sahf
cmc
mov
aas
imul
or
cmp
addb
sbb
scas
hlt
arpl
push
mov
inc
dec
scas
icebp
pop
jnp
lods
jb
leave
mov
imul
hlt
movsl
and
mov
mov
rcrl
mov
fs
ret
lret
aaa
jo
xchg
pushl
adc
incl
or
arpl
sub
mov
dec
add
aas
lahf
pop
movsl
stc
or
std
fdivr
inc
fsts
inc
add
pushf
dec
fbld
loopne
mov
pop
mov
jle
inc
xchg
or
pop
mov
mov
popf
adc
sbb
push
out
insb
sbb
fdivr
cmpsl
fstpt
cmc
stos
xor
inc
aam
xchg
jne
mov
inc
xchg
leave
add
jae
xchg
outsb
sub
call
mov
inc
adc
inc
fbstp
ret
icebp
pop
jl,pn
aad
negb
lock
dec
jge
std
and
test
add
xchg
pop
out
outsl
jns
repnz
enter
mov
add
int3
popa
adc
mov
cs
cmpsl
in
bound
xor
mov
jne
pop
popf
xor
aaa
dec
xrelease
out
sahf
mov
pop
stc
push
push
sar
imul
mov
and
insl
mov
sbb
push
cli
movsb
imul
sbb
nop
neg
movsl
adc
or
mov
inc
lcall
cmp
arpl
lds
push
aad
stos
inc
mov
addb
std
inc
push
subb
je
xor
cmp
out
rorl
xor
enter
sub
rcll
sarb
jbe
sub
pop
jmp
fldcw
xor
xchg
cmpsl
movsl
inc
loop
push
daa
push
in
ja
mov
sub
fimull
adc
cld
jne
mov
cld
pop
inc
lahf
test
je
cwtl
jb
cwtl
jmp
xchg
enter
xchg
and
sub
negl
add
lcall
xchg
repnz
mov
pop
cmpsl
xor
inc
mov
mov
xchg
outsb
pop
push
xor
cmc
adc
cmp
in
xor
jge
idivl
shrl
pop
out
out
pop
mov
std
movsb
jnp
sbbb
popf
mov
popa
nop
jo
test
jbe
sti
mov
cmc
mov
jnp
fdivl
in
cltd
out
mov
xchg
dec
aam
pusha
pop
fbstp
pxor
mov
jbe
outsb
inc
insb
ret
dec
push
lret
xor
dec
outsb
adc
pop
push
cmpl
fwait
out
pop
pop
test
push
xor
mov
push
jle
mov
push
mov
or
movsl
jnp
cld
jecxz
aaa
xor
in
pop
jg
inc
jno
push
sbb
in
fstps
push
out
es
cmpsb
outsl
mov
imul
sbb
lret
jl
jle
push
push
dec
lret
xor
es
scas
or
sbb
mov
mov
icebp
ljmp
inc
mov
cmpsb
jle
sbb
inc
pop
mov
push
lds
out
lret
adc
jmp
movsb
mov
xchg
cmpsl
in
jl
in
ficomps
imul
push
stos
dec
loop
or
adc
fs
dec
lods
sarl
sbb
iret
mov
or
or
pop
popa
arpl
ret
sahf
notb
popa
push
mov
or
jmp
fstl
pop
mov
inc
clc
jmp
ljmp
out
jae
xor
ret
std
lds
pusha
sub
dec
adc
sub
jl
fnstsw
mov
movsl
inc
sub
add
in
xor
xor
fistps
sub
insb
sti
aad
int3
movsb
iret
fdivl
jb
xchg
inc
add
sub
lcall
xorb
mov
hlt
inc
sahf
push
jl
add
push
add
aam
xlat
and
pop
cmp
jp
lret
sub
test
xchg
xchg
push
stos
insb
adc
and
mov
push
pushf
ds
ret
sub
insb
jno
pop
xchg
mov
in
xchg
mov
fmull
scas
xchg
cmc
movsb
movsl
mov
cmp
sub
cmp
fucomp
imul
mov
adc
cmp
xor
jae
cmpsb
pop
jge
inc
popf
push
push
add
ret
inc
sbb
sbb
push
outsl
add
ret
xor
dec
jo
clc
clc
or
bound
loopne
add
pop
mov
xchg
lea
frstor
jbe
lock
icebp
mov
imul
sbb
xchg
das
or
lea
hlt
insl
stos
movb
dec
sub
cmp
push
leave
push
lods
popa
xchg
adc
sbbl
cmp
std
fnstsw
push
and
bound
sbb
sbb
jle
pushf
jmp
into
mov
sub
sub
repz
mov
jae
popa
pop
imul
xchg
jmp
cmpsl
imul
dec
jg
lcall
clc
insl
jne
call
mov
std
imul
ror
mov
jge
and
cmp
or
jbe
dec
xor
push
cli
insl
ljmp
push
imul
mov
cmp
or
popf
push
sahf
inc
cmp
fbstp
notl
inc
pop
cli
push
mov
mov
add
adc
mov
sti
cmpsb
mov
dec
call
pop
add
lock
adc
xchg
sub
cmp
cld
lcall
mov
sub
and
mov
add
cmp
mov
add
xchg
jmp
sarb
ljmp
pop
into
dec
xchg
aad
dec
lret
dec
or
fwait
jg
jp
lcall
xchg
sub
dec
xchg
mov
inc
mov
out
addb
mov
and
insb
sbb
pop
dec
sarl
and
add
mov
push
sub
sub
jnp
or
out
push
sub
cmpsl
sbb
push
push
xchg
cmp
sbb
out
inc
mov
xchg
pop
movb
stos
mov
mov
cmp
lea
stos
insl
xorb
push
mov
dec
pop
add
andb
mov
roll
jb
cwtl
inc
push
rcr
xchg
add
aad
into
push
jb
or
lock
xchg
or
arpl
call
jmp
fs
inc
fldl
lret
xor
jnp
dec
add
movsb
mov
jb
mov
dec
pushf
aad
push
popf
inc
add
cmpsl
xor
dec
dec
pop
in
sub
mov
inc
sub
ret
jp
jo
or
clc
scas
mov
add
mov
pop
mov
inc
or
mov
adc
xor
std
xlat
insb
xchg
mov
in
pop
in
insl
movsb
test
es
std
cmp
push
sti
jno
repz
push
push
mov
inc
test
loopne
movsb
mov
jb
repz
cmc
and
sbb
inc
sar
mov
out
jge
les
cmpsl
daa
mov
and
mov
popa
sub
gs
inc
add
fs
xbegin
jns
or
loope
pop
xchg
insl
xchg
cmpsl
aam
outsl
adc
iret
jge
aaa
cmp
and
aaa
cmp
xor
pop
les
lock
mov
mov
mov
out
xor
in
jl
imul
daa
xchg
inc
add
scas
add
push
cmp
push
inc
mov
pushf
repnz
mov
sbb
lea
dec
lods
add
imul
loopne
aaa
or
inc
shlb
std
and
add
pop
xlat
adcl
jg
loop
rcrb
cmc
repz
xchg
pop
pop
call
daa
mov
dec
ja
or
jmp
jge
or
or
fwait
cmp
jecxz
ret
nop
orl
push
and
testb
js
psrld
pop
fnstenv
mov
hlt
pop
std
fs
adc
add
insl
outsb
lea
imul
mov
pushf
xchg
js
icebp
jl
mov
out
sbb
out
cmc
pushf
sub
xlat
addr16
rolb
dec
es
fmuls
mov
js
outsb
add
in
pop
std
jp
sbb
sbb
pop
in
lret
pushf
or
loope
push
cltd
or
inc
lea
and
loopne
jo
add
call
ds
data16
and
aaa
mov
sub
shl
cld
stos
sub
rcrl
pushf
cmp
jg
movsl
push
sahf
std
daa
sub
adc
mov
dec
sbb
std
pop
xchg
xchg
aam
imul
in
lret
sub
out
mov
outsl
pop
pushf
push
flds
das
mov
or
pop
sbb
test
push
sbb
inc
test
or
clc
jb
pop
mov
test
inc
dec
sbbl
loope
out
push
clc
mov
and
fs
imul
jns,pt
call
pop
fdiv
mov
pop
arpl
xor
mov
fiaddl
cmpsl
dec
jl
rsm
mov
lock
data16
dec
pop
jle
xchg
jo
mov
mov
xor
mov
inc
xchg
int
jnp
adc
pushf
push
push
scas
mov
push
test
xlat
inc
ja
xchg
cmpsl
into
push
pop
shlb
cmp
outsl
and
adc
sbb
insb
mov
nop
jb
outsb
sub
fwait
repnz
push
sbb
add
adc
hlt
lcall
push
jns
adc
aam
cld
sbb
lret
mov
xor
stos
add
pop
and
test
sahf
aaa
mov
sub
mov
cs
sub
jo
repnz
mov
mov
add
fcmovnbe
arpl
dec
int3
sub
sub
xchg
loope
pop
sub
iret
out
inc
inc
pop
bound
mov
mov
cmc
mov
push
shl
sbb
lret
jp
xlat
xor
cmp
dec
cltd
inc
push
jp
or
add
mov
scas
xchg
add
mov
popf
mov
daa
arpl
sti
dec
js
sbb
fdivs
imul
or
lods
or
jge
pop
out
and
sbbb
clc
jg
dec
aaa
std
jmp
xchg
sti
jp
push
mov
daa
mov
daa
cmp
pop
mov
cld
and
inc
fcmovb
rcrl
clc
mov
xor
mov
stos
dec
fucom
or
add
fisttpll
dec
mov
aad
in
mov
into
dec
mov
fisttpll
add
dec
sub
scas
add
push
dec
pop
jne
inc
adc
adc
jno
insl
adc
mov
mov
mov
sti
ficoml
hlt
es
or
bound
dec
int
out
cmp
movsl
aad
pop
sahf
popa
pop
imul
cmpsb
test
or
and
adc
fildl
lret
jecxz
add
dec
jmp
dec
fmull
push
mov
adc
ss
int
push
out
pop
popl
aaa
mov
jb
xchg
roll
scas
lock
mov
pushf
lcall
pop
push
lss
adc
mov
dec
es
rcl
dec
dec
mov
cltd
push
push
xchg
xchg
mov
sar
fiadds
inc
jae
in
xlat
ret
mov
mov
jmp
mov
fistpl
mov
jnp
xor
dec
scas
into
mov
nop
cmp
js
sarb
out
xchg
loopne
sti
mov
lock
inc
cmp
movsb
lret
mov
movsl
sub
pop
jge
inc
scas
jmp
mov
addr16
fsubr
ljmp
mov
adc
xchg
dec
inc
mov
test
mov
in
sbbl
fistpll
mov
aaa
add
nop
sub
or
sub
pop
loop
jle
xchg
dec
cmp
xor
leave
adc
jno
lcall
in
movsb
or
add
out
rcrb
xchg
fucom
imul
add
adc
loop
jnp
inc
pop
cld
cmpl
scas
hlt
sub
jp
pushf
cli
mov
mov
ss
mov
push
std
jg
or
or
mov
fwait
mov
dec
pop
fdivr
iret
fldcw
movsb
jg
out
aad
aad
mov
jp
sub
pushf
cmpsb
shlb
les
mov
dec
xlat
ds
inc
test
out
cmp
jae
fimuls
dec
lret
push
and
xlat
cmpsb
sub
insb
cmp
and
mov
outsl
leave
add
mov
call
popa
push
mov
sub
jl
in
ljmp
or
xlat
das
mov
pop
and
xor
xchg
test
loope
push
push
sub
fmull
test
jne
mov
fsubs
lock
mov
test
or
mov
inc
xchg
mov
fsubl
jns
adc
in
pusha
dec
sub
sub
fstpt
jo
inc
in
adc
stc
lea
divl
mov
xchg
and
icebp
add
scas
adc
int3
cmp
xor
aaa
fs
pop
cmp
dec
cmp
je
mov
jbe
faddp
mov
hlt
push
mov
pop
add
test
aas
mov
popf
addb
xlat
in
jb
sub
pop
inc
popa
aaa
mov
stos
stos
inc
sub
xor
mov
loop
mov
sbb
lea
and
fisttps
out
loop
imul
cmp
js
sub
inc
or
sub
pop
jge
and
inc
mov
aam
xor
mov
add
call
pop
jl
adc
insb
popa
andl
push
push
jmp
sub
ljmp
fldt
mov
ds
outsb
mov
add
sub
inc
std
repz
testl
cmpsb
pop
jle
testb
inc
xchg
pop
and
outsl
inc
mov
mov
cmc
shr
and
int
shl
push
cmpsl
pusha
cmp
cmp
imulb
jo
or
hlt
mov
and
adc
aaa
in
xchg
mov
and
jmp
or
outsb
fstpl
scas
xchg
loope
cmp
mov
out
pop
mov
push
xchg
aad
adc
pop
sub
adc
mov
popf
arpl
fcomps
xchg
sbb
addl
test
in
mov
jnp
ds
mov
or
and
hlt
stos
mov
ret
mov
inc
mov
rorl
sub
outsb
xchg
in
es
mov
fcmove
andl
add
enter
add
cmp
popf
cs
pop
lea
lods
arpl
jne
outsl
jmp
fldt
push
cs
fcmovnbe
and
popa
es
je
cmp
cmpsl
sub
lds
aas
lret
or
lock
lret
fcmovb
cmp
psrlq
into
xchg
neg
mov
xor
cmpsl
pop
pushl
dec
iret
cmp
sti
pushf
mov
das
push
ret
sbb
push
mov
push
nop
dec
mov
lock
xchg
jg
lcall
sti
mov
xchg
int3
pop
js
fs
or
popl
mov
dec
ficoms
xchg
or
xchg
fcoml
cmpsl
lahf
ds
sbb
jge
cmp
aam
sti
push
insb
mov
adc
je
push
push
pop
fistl
pop
lret
xchg
push
cmpsb
mov
jmp
leave
fidivrs
nop
add
aas
inc
dec
lahf
and
insl
xchg
or
jge
mov
repnz
movups
jns
movsb
mov
sbb
pop
sub
gs
adc
mov
jmp
mov
mov
sbb
mov
jb
or
mov
mov
mov
je
fcoml
repz
and
out
jnp
xchg
lock
sbb
dec
mov
stc
cmp
inc
insb
fstpt
jp
xchg
adc
enter
mov
jnp
jbe
loopne
mov
daa
out
add
scas
sub
sbb
dec
hlt
or
pop
sahf
mov
mov
mov
arpl
test
cltd
inc
je
and
push
sub
addr16
in
pop
mov
xlat
push
pop
jmp
xor
js
lock
nop
call
xchg
es
dec
xchg
movsb
cmpsb
and
push
pop
sarl
inc
sbb
sbb
mov
orl
das
inc
push
cmp
cs
add
ss
cmp
sub
cmp
fildll
test
sti
add
cmpl
shrb
iret
sbb
cmc
bound
lret
cmc
xor
dec
shlb
stc
mov
test
pop
cmpsl
sbb
out
pop
jl
iret
jo
adc
mov
inc
add
cmpsb
cmp
aaa
call
xor
jnp
push
cmp
lret
or
inc
outsb
and
std
jl
pop
push
push
int
inc
inc
adc
push
dec
dec
repnz
orl
pop
sub
mulb
sub
push
mov
pusha
scas
xchg
pop
or
xchg
scas
insl
sti
xchg
loop
je
adc
mov
cmp
fdivs
add
loope
xchg
lods
dec
testl
add
aas
push
rcrb
add
rorb
mov
xorw
dec
push
dec
push
es
mov
fdivr
repz
in
jae
cmpsb
ret
xorl
xlat
popf
jbe
enter
ds
jl
dec
inc
sbb
into
pop
xlat
or
cmpsb
mov
cltd
inc
cmp
flds
push
sarl
jg
jle
and
jb
adc
mov
jg
add
addr16
shlb
cmp
sub
sub
jnp
xor
sub
call
sub
mov
push
xchg
pop
adc
stos
xchg
adcl
sarl
int3
push
cmp
ds
insl
mov
cmp
mov
fcmovnu
jge
test
gs
imul
stos
mov
xlat
fisttpl
arpl
fimuls
push
lock
mov
mov
mov
inc
scas
mov
lock
jle
std
aam
inc
and
inc
xchg
pop
mov
mov
push
jbe
push
dec
push
add
mov
test
mov
mov
ret
push
mov
xor
cmp
push
lds
add
dec
inc
ljmp
sbb
aas
fadd
mov
jbe
sysret
xchg
cmpsl
and
mov
cmpsb
and
jecxz
aad
ret
xchg
fldl2t
imul
pop
sbb
arpl
sub
and
sbbb
movsb
jae
jg
repz
cmpl
jge
int
mov
push
idivb
adc
jo
outsl
out
jle
xchg
mov
push
jns
inc
in
sub
inc
adc
jle
ret
mov
jl
fcmovnu
out
cwtl
inc
mov
adc
mov
in
jb
xchg
pop
ss
push
cmp
out
push
movsb
mov
xchg
push
cmpsb
cwtl
sbb
leave
repnz
xchg
push
sbb
mov
insl
mov
add
ja
popf
cmp
lods
cmp
mov
cs
jg
popa
gs
sub
xor
adc
mov
js
sbb
cmp
jo
add
fimull
filds
push
xchg
add
lcall
lcall
imul
bound
adc
dec
ss
mov
add
lret
out
push
fnstenv
jge
fwait
mov
pop
cmpsl
scas
addb
lcall
dec
pop
outsl
xchg
decl
test
and
pop
adc
xchg
out
out
xor
insl
mov
loop
mov
pop
and
dec
and
sub
or
fnstsw
movsl
addl
sub
cmp
pushf
out
lods
mov
decb
jne
fs
push
push
in
hlt
cmpsl
in
fdivrl
xor
mov
je
cld
shll
clc
loope
pop
popa
in
out
push
rolb
stos
int
popf
push
adc
ret
jb
cld
cmovg
or
shll
scas
xor
rcrl
jo
call
int
cmp
and
insl
ret
mov
mov
mov
int
jp
pop
mov
aas
sbb
mov
ljmp
jg
xor
pushf
push
and
adc
xor
in
cmp
mov
add
or
and
mov
push
jmp
ret
xor
daa
sub
movsb
imul
movsb
xor
setg
ja
xor
ja
shlb
mov
int3
inc
push
fistps
ss
aam
rolb
testb
jmp
push
ror
aam
rcl
cmp
mov
add
push
jle
push
repz
cmp
clc
mov
fisttpl
rorl
adc
push
xor
pushf
xor
gs
jns
xchg
jne
loopne
notl
push
sbb
jae
xchg
jbe
xlat
mov
xchg
fwait
in
fnstcw
ret
sub
les
or
sub
cmp
push
sub
ds
sub
mov
sarl
push
xchg
dec
test
pop
sbb
adcb
mov
push
aam
sub
shrb
xchg
in
push
cs
lea
xor
push
insl
jnp
push
cmp
push
aam
mov
sbb
sbb
xchg
repz
push
pop
iret
pop
push
sub
lret
cmp
icebp
xor
mov
andb
xchg
inc
mov
popa
add
jmp
mov
iret
mov
cmpsb
push
aaa
push
adc
iret
dec
mov
or
div
push
scas
dec
mov
lahf
fistpll
mov
cmp
push
and
loope
mov
test
subb
popa
xchg
push
mov
and
lods
loope
repz
mov
stos
sub
jg
lds
add
dec
jae
xor
stos
mov
pop
stc
orl
fucompp
sbb
pop
jnp
dec
jb
sbb
rol
inc
add
ret
inc
daa
sbb
push
mov
jnp
ja
lods
mov
gs
popf
pop
testl
int3
dec
sbb
jecxz
xchg
dec
xor
pusha
mov
or
scas
jnp
test
inc
jns
push
mov
mov
adc
push
adc
or
sub
cmp
mov
addr16
in
pushf
pop
inc
gs
data16
fnstenv
mov
mov
or
mov
insl
xchg
inc
test
scas
mov
sahf
fistl
fs
testl
hlt
inc
sub
pop
out
ja
inc
out
rcrl
mov
loopne
sbb
mov
fst
shlb
cmp
inc
sbb
sbb
cmp
inc
jmp
xchg
dec
lods
in
mov
xchg
iret
xchg
scas
lahf
and
mov
movsb
push
out
out
outsl
xor
fisttpl
cmp
push
jg
add
cmovae
mov
pop
mov
cmp
push
and
xadd
repz
out
cmp
adc
add
dec
pop
sbb
xor
ret
cmp
push
outsb
addr16
push
std
or
aam
shll
cmp
mov
imul
mov
mov
xorb
js
cs
fadd
lahf
in
xor
test
push
daa
or
or
jmp
mov
sbb
push
clc
dec
in
fidivrl
pop
mov
cld
add
pop
cmp
inc
jo
fdivrl
int
lahf
imul
call
dec
cmp
mov
popa
mov
add
lahf
mov
gs
pop
and
dec
lret
adc
jle
subb
lcall
pop
rclb
and
mov
mov
scas
out
lret
push
inc
push
jecxz
push
rorl
lds
hlt
add
sub
sub
repz
pop
pop
jl
stc
sbb
dec
jg
in
idivb
ret
in
jmp
or
inc
enter
sub
inc
adc
shrb
ret
outsl
loopne
xor
lock
into
int3
loope
mov
mov
push
nop
je
imul
movsl
enter
jmp
nop
mov
leave
pop
comiss
and
adc
xchg
repnz
sbb
dec
push
cmp
int
push
popa
or
mov
out
jmp
js
rcr
or
adc
pop
adc
inc
pushf
sbb
pop
dec
mov
xor
mov
ret
mov
lods
mov
push
inc
sti
sub
mov
mov
aaa
loope
sub
cmpb
jbe
push
sub
sub
das
jns
push
in
adc
out
dec
adc
lods
repnz
pop
jnp
or
test
push
push
ror
sti
xor
stos
ret
cmc
or
mov
stos
jecxz
addr16
pop
aas
mov
xchg
sti
cmp
mov
sub
pop
dec
jo
fwait
jecxz
xchg
inc
hlt
out
fbld
cli
ret
aam
cwtl
imul
mov
fwait
aaa
adc
jo
pop
cld
pop
dec
mov
mov
das
xor
outsl
dec
mov
sub
and
iret
imulb
arpl
xor
dec
adc
loope
lods
bound
ret
jns
divl
jl
mov
pop
xor
xor
cmp
lds
arpl
cmpsb
and
mov
sub
push
xchg
and
pop
xchg
adc
mov
out
insb
cmp
pop
xchg
je
jp
cld
in
ret
pop
adcb
jne
outsb
jae
xchg
aas
and
mov
pop
cli
jl
cmc
filds
out
add
jo
jle
rorb
shrb
call
test
mov
or
adc
xor
aam
or
movsl
ja
push
flds
push
sar
popa
loop
dec
ss
mov
adc
adc
cmpsl
dec
xor
cltd
mov
test
adc
cmp
out
inc
cmc
iret
ljmp
dec
cld
in
dec
int
inc
mov
sbb
xor
nop
mov
push
jmp
int
xor
xchg
scas
mov
sbb
add
push
out
lret
lcall
jns
mov
in
mov
jno
sub
or
sub
cli
jmp
xor
cmp
lret
movsl
and
adc
or
repz
xchg
push
daa
mov
mov
mov
ss
cmp
fstps
inc
mov
add
pop
jecxz
fisubrs
jbe
decb
popl
addr16
adc
or
push
xor
inc
push
xchg
jo
gs
aas
xchg
or
in
push
push
dec
push
jp
dec
int3
mov
nop
add
or
hlt
sub
pop
xchg
xchg
dec
jge
or
mov
js
mov
xchg
add
lret
lds
cmp
sti
dec
xchg
inc
xchg
sbb
movsl
jp
cli
cwtl
mov
or
mov
aam
sub
sti
pop
pushf
nop
inc
sub
shll
push
xor
jnp
ss
inc
ss
das
out
dec
lock
loope
cmp
push
add
stos
lods
int3
mov
stc
lock
xchg
push
es
add
imul
mov
cmp
inc
and
ja
xchg
mov
xchg
jg
xchg
dec
fimull
xchg
insb
inc
add
sbb
call
stc
mov
xchg
xchg
bound
clc
fidivl
and
imul
test
je
pop
xor
mov
push
mov
popa
cmpsl
adc
loop
mov
xor
inc
insl
mov
daa
xchg
xchg
fstps
stc
jne
push
and
and
out
jbe
mov
packssdw
sub
jle,pn
fcompl
outsb
mov
push
adc
jmp
xchg
scas
call
cmpsb
sub
je
sahf
outsb
dec
leave
pop
andps
sub
push
cmp
sbb
jne
lret
addr16
mov
or
shll
std
cmp
clc
mov
lret
cmovg
jns
rcrb
xor
mov
xchg
cwtl
push
adc
inc
popa
cmpsb
push
inc
popa
jno
je
sbb
add
lods
push
cmpsb
sahf
add
xchg
mov
das
ret
mov
inc
xchg
shlb
add
dec
jns
ret
mov
push
sbb
imul
leave
or
mov
jno
mov
repz
addr16
rolb
test
add
sbb
js
movsb
aas
and
stos
cmp
jecxz
fisttps
int
mov
repz
mov
or
cltd
out
push
pop
sahf
jo
into
test
rol
xchg
push
adc
rcr
jns
in
jnp
out
ljmp
outsl
arpl
adc
xchg
into
stos
mov
in
insb
jecxz
jbe
and
fsubr
lret
and
and
and
lret
add
lret
sahf
mov
mov
pop
stos
movsb
xor
outsl
cltd
xchg
cld
imul
sbb
fisubl
pusha
cmp
in
sub
push
sbb
fstps
sbb
out
push
pop
jae
inc
pop
or
sbb
cli
sahf
popa
adcb
jb
cmp
movswl
pusha
sbb
and
insl
xchg
imul
rol
cmp
inc
xchg
shrl
bound
cld
insl
jle
mov
jmp
clc
aad
adc
mov
loope
scas
push
pop
mov
jl
cmpb
dec
xor
jo
mov
mov
int3
frstor
stos
mov
ret
mov
fisttpl
inc
insb
and
dec
xor
arpl
add
add
sub
pop
sbb
ror
shrb
popa
test
push
mov
cli
add
mov
stc
sub
sarl
in
stos
sbb
mov
adc
popa
inc
cmp
bound
iret
call
dec
mov
das
loop
xor
push
sbb
inc
mov
jp
mov
insb
mov
and
popf
xor
and
xchg
or
out
sbb
leave
xchg
cld
jle
cld
shll
adc
or
mov
jmp
sub
dec
pop
nop
shrl
mov
test
dec
sub
pop
xchg
gs
fisttps
cmpsl
cs
jno
loopne
fnstenv
scas
scas
dec
push
cltd
mov
fs
movsl
jb
cmp
and
dec
xchg
sub
adc
add
mov
mov
popf
inc
pop
incl
lods
jecxz
repz
imul
out
gs
bound
add
int3
mov
cmp
mov
orb
popa
jmp
test
xor
cmpsb
pushf
inc
mov
decb
pop
sbb
mov
imul
mov
cmpsb
cmp
enter
push
mov
inc
cmpsb
pop
inc
cld
scas
jbe
dec
xchg
jmp
and
xlat
aaa
jnp
jmp
inc
inc
dec
xor
mov
jl
xchg
lea
lock
pop
cmp
pop
test
enter
lret
dec
fisubrl
adc
sub
lahf
outsb
jg
inc
ret
mov
or
xchg
push
out
stc
dec
inc
popf
movsl
jb
jo
jg
rcll
outsb
xor
out
cmp
pop
mov
lret
hlt
ja
mov
adc
adc
out
loopne
in
dec
pop
mov
bound
push
jae
and
mov
mov
es
inc
pop
xchg
fwait
adc
addr16
push
in
sarb
insb
jae
lds
lret
cmp
or
mulb
sbb
daa
inc
push
or
pop
int3
jnp
in
pop
mov
mov
into
dec
sbb
xchg
cmp
adc
mov
mov
mov
cld
fisubs
add
cmp
cmp
jmp
adc
or
dec
scas
sub
stos
sahf
clc
sub
sub
inc
cmpsb
cmp
daa
test
sub
jmp
jmp
push
add
push
jl
aam
enter
inc
xor
mov
sub
sbb
lods
xchg
int3
or
add
pop
and
scas
daa
aaa
pcmpeqb
mov
into
stos
in
inc
mov
std
dec
shl
lock
clc
sub
sub
xchg
xlat
xor
outsl
ss
ss
jecxz
inc
fimuls
mov
mov
xor
aaa
dec
lds
cltd
xor
mov
or
rorl
pop
inc
push
sbb
pop
xchg
stc
loopne
jmp
mov
jmp
adc
mov
test
repz
xor
cmp
cmp
inc
test
andl
xor
stos
push
int
test
lret
loope
cmp
or
pop
in
insl
mov
push
xchg
fs
repz
sbb
and
mov
adcb
loope
daa
mov
xor
mov
dec
int
and
xchg
jbe
sbb
cmpsl
xor
mov
jge
xlat
mov
call
js
std
adc
popf
dec
test
in
rolb
adc
ret
fcoml
and
fsubr
nop
je
dec
incl
jne
loope
dec
imul
movsl
dec
push
inc
inc
or
fisubl
and
adc
pop
sub
jne
gs
bound
ds
test
xor
add
aad
push
es
fwait
push
mov
or
stc
repz
arpl
sub
xchg
cmpsb
sub
xchg
jecxz
dec
dec
and
sbb
mov
test
mov
pop
push
pop
sub
adc
cmp
mov
gs
es
nop
jo
or
mov
lret
push
cld
mov
adc
pop
in
cmpsb
jbe
jp
jg
cmpsl
cmp
mov
cmp
fwait
and
pop
daa
mov
mov
fwait
or
push
jmp
cli
hlt
int
ds
push
pop
mov
sbb
stc
stos
test
dec
xor
stc
mov
std
cltd
aaa
push
loope
mov
test
movsl
stos
adc
fidivrs
repz
pop
xchg
ss
loop
cwtl
add
loopne
jle
xlat
add
push
lahf
scas
jne
in
adc
sbb
ds
out
pushf
push
addr16
jecxz
sbb
xchg
mov
pop
mov
in
gs
mov
loope
movsb
push
and
push
fcoms
fisubs
cwtl
xor
mov
dec
rcrl
bound
fisubrl
sbb
or
stos
mov
jl
rorl
fucomip
mov
outsl
jne
xorb
sub
rorb
stos
dec
mov
lret
mov
xchg
mov
int3
mov
push
les
test
loop
jns
jmp
xchg
insl
jo
or
sahf
mov
or
std
sbb
out
fwait
xchg
addb
push
push
mov
pusha
cmp
out
pop
addr16
jns
jp
stc
sub
jbe
nop
mov
push
push
sbb
mov
sub
sbb
adc
xlat
sbb
and
les
int3
inc
mov
test
adc
xchg
push
hlt
outsl
push
push
dec
and
adcl
jae
out
sub
scas
inc
loopne
fidivs
cld
test
popf
clc
stos
out
pop
imul
xchg
test
pushf
inc
repz
ret
sbb
ljmp
subb
lods
stc
leave
jnp
adc
lds
cmp
fsubrl
and
stc
add
dec
jo
pop
out
hlt
rolb
pop
sub
pop
aaa
inc
push
cltd
mov
in
push
loop
add
adc
ret
aam
cmp
fdivs
cmp
repz
pop
movsb
mulb
mov
sbb
pop
push
pop
or
outsl
repnz
push
dec
ljmp
push
pusha
bound
fisubs
cmpb
push
or
in
fcompl
movsb
mov
mov
rclb
jo,pn
xchg
test
mov
in
ret
push
pop
enter
pop
loop
loope
jge
mov
cmc
cmpsl
mov
jb
jns
mov
jno
fimull
test
dec
xor
inc
and
popa
and
mov
ljmp
bound
and
pop
or
push
andl
sub
mov
sub
sub
and
ret
lock
mov
fiaddl
clc
in
xor
sahf
into
or
imull
rorb
adc
out
inc
jl
verr
outsl
push
insl
popf
xor
popf
test
push
sbb
sub
and
cmp
sbb
es
cltd
das
jo
mov
or
mul
mov
pop
gs
fnstenv
rcl
repz
inc
cmpsl
and
movsl
sti
ds
dec
bound
sub
les
xor
arpl
fwait
test
push
push
mov
in
fmull
jne
pop
testb
cmc
ret
sti
movsl
pop
xchg
mov
cmc
pop
ljmp
sub
ffree
mov
out
xchg
and
jecxz
push
lock
lea
sbb
cmp
rcrb
add
sbb
repnz
lcall
push
sub
sbbl
mov
enter
sbb
adc
aas
push
ror
repnz
into
xchg
loopne
xor
mov
and
aaa
daa
psrlw
popf
pop
mov
sub
sub
jmp
sbb
sbb
jo
or
mov
mov
sub
jp
mov
dec
jl
out
pushf
hlt
lret
or
decl
mov
xchg
cld
data16
repz
dec
sbb
jae
test
iret
pushf
iret
pop
sbb
aam
xchg
jb
xchg
stos
lods
data16
xor
out
ret
out
push
add
jl
mov
adc
and
adc
mov
out
ret
xchg
imul
and
shlb
add
test
leave
cli
rcll
dec
lcall
jns
mov
stos
inc
jnp
xchg
mov
cs
mov
dec
add
xlat
in
lcall
adc
cltd
stos
subl
rorl
jp
idivl
test
bound
push
xchg
je
dec
cmpsl
testb
in
hlt
fmuls
inc
inc
jmp
mov
inc
xchg
outsb
or
outsb
js
psrad
push
icebp
stos
xchg
call
inc
jg
mov
stc
xchg
fwait
das
fdivrs
std
mov
clc
dec
and
in
stos
or
movsl
xchg
xchg
in
test
mov
int3
mov
rorl
inc
mov
movsb
mov
iret
ja
pop
adc
push
lock
rorl
sub
sub
imul
mov
aam
xor
sti
aas
fsts
std
mov
gs
test
push
pop
in
and
pop
cmpsl
fdivr
das
enter
push
push
jo
mov
xchg
out
inc
inc
dec
addr16
mov
repnz
hlt
ljmp
adc
pushf
xchg
lcall
ljmp
cltd
add
xchg
or
ja
jo
loopne
pop
fsubl
aaa
push
sbb
fiadds
dec
or
inc
lds
jg
pop
push
lahf
mov
out
mov
scas
mov
jecxz
out
dec
mov
mov
adc
and
test
and
leave
dec
negb
add
sbb
mov
fcmovbe
push
sbb
negl
mov
jl
psllw
fs
xchg
xchg
call
and
xor
aaa
sub
sub
lret
movsb
in
push
mov
jne
mov
repnz
clc
and
into
mov
jg
pop
mov
push
fwait
mov
enter
or
lahf
ret
subl
sbb
lret
adc
or
mov
push
lcall
popf
icebp
mov
mov
or
leave
push
test
das
cmp
fdivs
lret
sar
mov
aam
dec
pop
inc
aad
and
pushf
mov
sbb
xor
push
fs
and
inc
ss
xchg
push
movsl
xlat
mov
mov
lret
cmc
jne
jge
xchg
aad
mov
insl
xor
or
out
cmp
add
insb
inc
xchg
sti
jnp
loopne
movsb
in
mov
or
cltd
cld
lret
bound
sbb
sbb
inc
jae
xchg
xor
insl
fstpt
mov
sub
stos
lods
into
adc
inc
add
rcll
lds
inc
fbstp
xchg
or
mov
sub
out
ss
jnp
mov
fcomps
mov
add
in
out
stos
cmp
stos
dec
popa
andb
dec
loopne
in
lret
cmp
clc
add
xor
loopne
call
jns,pn
add
inc
popf
jae
sub
stos
mov
cmp
aad
inc
jo
dec
sbb
sti
or
xorb
xchg
mov
sahf
pop
add
lret
sub
sub
lret
push
jge
pop
fbld
sbb
sub
icebp
dec
jno
out
aaa
roll
ljmp
lcall
daa
imul
push
push
repnz
adc
or
les
inc
sub
daa
cld
rcr
lcall
pop
cmp
fsub
mov
pusha
shl
adc
sub
or
jne
xchg
push
pop
mov
push
ja
xchg
je
js
inc
xlat
ror
jno
cmp
loop
ficompl
xchg
xchg
aad
mov
daa
notl
fdivrl
inc
lahf
xchg
and
add
jne
aad
and
pop
add
out
aas
pop
mov
stos
mov
scas
lcall
push
xor
mov
dec
inc
ja
into
pop
int3
add
roll
stos
inc
sub
mov
sub
int3
pop
repz
lea
test
cmp
mull
jns
xor
dec
push
outsb
xchg
adc
repnz
pop
sti
cmpsb
repz
js
popf
into
lods
jle
fwait
out
int
cld
imul
mov
xor
adc
sti
push
pop
cltd
xor
test
xor
dec
leave
divl
jae
fst
lret
add
testb
ja
lea
aas
int
inc
jns
test
cmp
cld
sbb
or
outsl
sbb
es
addl
fldcw
sbb
adc
pop
pop
dec
inc
loopne
push
xrelease
enter
call
sub
inc
cmp
push
movsb
not
cld
lods
xor
jl
pop
ds
mov
inc
dec
cmp
cmc
pop
xchg
sub
movsb
lret
pop
enter
or
cmc
dec
mov
cmp
push
jp
cmp
and
sbb
insl
jmp
and
jl
sbb
cs
outsl
cwtl
rclb
adc
xchg
adc
hlt
movsb
scas
mov
sub
jbe
sbb
pop
cmpsb
inc
clc
sbb
rorb
mov
push
xor
jecxz
imul
mov
lock
pop
lahf
gs
jnp
pop
out
push
popf
push
popa
and
push
lds
push
dec
and
xchg
aaa
fadd
and
mov
inc
adc
iret
lea
or
je
pop
inc
push
std
cmp
lock
lds
dec
push
mov
mov
or
inc
cmp
pop
in
inc
inc
cmp
aas
xcrypt-cfb
cmp
imul
cmpsb
sub
addr16
lea
pushf
jge
cwtl
clc
add
cmp
jb
ret
test
inc
ljmp
mov
push
std
dec
js
std
inc
cmp
in
mov
mov
pop
inc
jo
push
mov
pop
aas
popa
inc
mov
xchg
fisubrl
cmp
xorb
inc
outsl
jle
lods
inc
mov
push
cmp
lods
xlat
shlb
jbe
or
mov
cs
xor
orl
scas
pusha
xor
loope
jg
in
insb
sub
pop
aam
sub
mov
or
jmp
shlb
push
mov
dec
inc
fucom
sub
lret
push
sbb
xchg
push
lods
fistps
or
jmp
dec
ja
inc
movsl
xor
adc
sbb
faddl
or
jmp
mov
jno
dec
sti
test
adc
sub
jae
adcb
lret
ds
mov
or
fwait
push
pop
ss
xor
rolb
xor
push
xchg
icebp
sbb
loope
adc
push
jp
mov
imul
notl
pop
xchg
cwtl
cmpsl
ss
pusha
pop
aam
dec
xor
dec
cmp
mov
xchg
addr16
out
cmp
mov
sub
add
call
int3
mov
dec
sbb
in
push
inc
scas
leave
mov
in
mov
and
mov
jge
out
pop
xchg
mov
sbb
sub
jno
cmp
cmc
fsts
and
sahf
mov
lahf
inc
pop
cld
inc
mov
dec
add
in
xchg
push
andb
nop
add
sub
stos
mov
mov
pushf
sti
mov
push
pop
mov
roll
or
inc
pop
dec
jbe
popa
cmpb
or
or
mov
mov
adc
fisubrl
rorb
lock
jp
mov
out
mov
jle
push
cmpsl
aam
gs
andl
xchg
adc
loopne
pop
out
mov
cld
inc
pop
mov
mov
xchg
leave
dec
jle
adc
scas
or
insl
jmp
out
mov
iret
dec
insl
ret
jge
dec
adc
aad
mov
loopne
lods
lcall
into
cmc
xor
mov
lahf
inc
aas
or
lods
add
dec
popa
mov
cmp
outsb
sub
inc
in
adcb
fcmovnbe
leave
into
test
das
scas
dec
xlat
js
mov
xchg
int
pop
push
cmp
dec
std
add
mov
lods
and
out
in
outsb
mov
adc
mov
xchg
lcall
mov
dec
scas
push
mov
mov
push
lcall
push
sub
mov
loopne
faddp
iret
xor
stos
sub
push
mov
jns
xor
shrl
pop
xchg
cmp
into
add
dec
icebp
adc
sti
cld
pusha
in
lock
fcompl
adc
inc
push
outsl
jge
pop
xchg
sbb
dec
mov
mov
cmpsl
xchg
pop
in
movsb
lahf
pop
loop
ret
and
and
movsl
pop
fwait
jle
repnz
lea
mov
divb
iret
xchg
dec
aam
jp
jae
popa
jnp
cmp
adc
mov
push
hlt
jno
loopne
xor
cmp
test
mov
push
ja
fwait
ds
out
push
xor
xchg
lea
js
pushf
loopne
jae
fcmovb
push
loopne
fidivl
mov
jmp
stos
jg
mov
add
ja
push
push
jo
mov
sub
ja
int
es
daa
mov
sbb
in
loop
popf
out
inc
mov
dec
jae
or
mov
jns
stc
pop
dec
jecxz
push
inc
sub
fsubrp
jp
xchg
std
int
pusha
fwait
nop
fcomp
or
dec
outsl
lcall
push
std
lock
cmp
adc
dec
mov
mov
ja
jno
hlt
das
add
sti
or
mov
xchg
sbb
imul
flds
xchg
jecxz
ret
faddl
pop
adc
jbe
incl
cmpsb
mov
xorl
pusha
mov
pop
pop
add
mulb
in
inc
xlat
mov
add
lds
mov
in
push
sub
repz
xorl
seta
inc
fwait
cld
and
sub
fcomip
sbb
inc
jmp
push
fwait
aas
pop
movsb
jbe
sbbb
sbb
fiadds
add
iret
jle
aad
testb
lds
xchg
mov
pop
shrl
or
or
adc
arpl
cmp
mov
inc
test
enter
push
mov
in
cltd
pop
inc
pusha
sar
lea
in
jmp
scas
hlt
inc
daa
push
mov
mov
pop
mov
fistpl
inc
lock
lock
jae
cmc
adc
push
push
cmp
enter
out
inc
fidivrs
mov
daa
xor
movsb
rep
or
cmp
and
and
pop
adc
push
enter
lret
loope
insl
mov
lret
ds
loop
cmp
cmp
mov
jbe
out
push
sub
gs
jae
dec
cmp
dec
and
fsubr
fs
scas
mov
ret
stos
dec
pop
fdivr
rcll
xchg
mov
int3
or
jo
mov
out
rclb
lea
pop
out
jge
xchg
dec
xchg
scas
leave
lods
fcompl
call
adc
pop
daa
cmp
stos
inc
lds
sub
mov
xor
lods
jo
iret
sbb
sbb
sub
sub
mov
test
out
adc
cmp
push
and
push
ss
test
shl
push
jne
xor
cltd
lret
pop
adc
jb
lods
sbb
pushf
add
daa
mov
scas
outsl
and
rolb
push
jge
mov
cli
jle
fsubl
hlt
fildll
xchg
cli
inc
fisttpl
jge
mov
aad
mov
aam
rorl
lock
mov
and
std
jne
out
or
into
int
and
fmulp
pop
ja
sub
xchg
cmp
into
jb
dec
aam
ds
test
xor
imul
test
stos
fldl
notb
inc
and
or
data16
or
in
inc
xchg
push
sbb
mov
shl
inc
out
jmp
jge
mov
iret
inc
divl
notl
loopne
mov
cmpsl
shlb
jge
mov
aam
jbe
mov
or
add
sub
lcall
xchg
jp
lret
lahf
scas
ljmp
fmuls
cmc
pop
in
sub
mov
sub
ficoml
xchg
jle
push
push
and
jbe
add
push
sbb
lea
xor
test
and
jb
mov
addl
sub
xchg
adc
stos
jo
mov
add
mov
inc
popf
and
adc
and
in
or
imul
cmpsb
hlt
adc
orb
xlat
pop
and
sbb
pop
sahf
cltd
inc
sbb
int3
add
inc
sub
imul
mov
filds
ret
fwait
cltd
sti
xorb
push
ds
lahf
inc
sub
xchg
sbb
jp
movsb
sub
popa
out
fnsetpm(287
pop
mov
hlt
outsb
dec
repnz
xchg
dec
mov
jecxz
imul
scas
push
and
pop
sbb
outsl
xlat
sbb
out
sti
bound
sub
fidivl
sarl
jg
test
pop
xchg
gs
inc
cmpl
cmp
pop
push
xor
imul
lcall
jge
mov
and
fadd
mov
mov
pop
in
fcmovne
jae
lods
push
mov
es
int
push
jle
mov
mov
fidivrs
mov
scas
pop
mov
fcomp
pop
jae
jge
jp
arpl
popf
int
and
dec
dec
cld
push
enter
scas
ret
pop
dec
notb
stc
hlt
movsb
dec
jmp
mov
je
mov
push
adc
adc
mov
cmp
std
mov
addr16
data16
adc
cmp
pop
cltd
into
repz
data16
mov
popa
xor
test
dec
push
inc
int
or
lods
int
mov
mov
pop
aad
mov
add
jnp
subl
mov
out
fistpll
mov
mov
adc
cmp
jg
test
xchg
fst
push
mov
adc
ljmp
clc
cmpsb
ss
es
lcall
pop
jns
cmpsl
pop
pop
add
cli
outsl
dec
pop
das
cmc
inc
jne
fcmovne
nop
xchg
pop
lret
jb
mov
jo
inc
ja
mov
adc
mov
out
leave
imul
je
pop
sbb
dec
lods
lea
fnstenv
sub
adc
rep
jb
or
inc
push
cmpb
xchg
and
popf
adc
pop
cmp
insb
push
and
outsl
clc
dec
xchg
cmpxchg
cwtl
fdivrs
or
adc
insb
sub
cmp
xchg
dec
sbb
mov
test
mov
outsb
inc
inc
pop
pop
sub
dec
sub
adc
addr16
pop
out
decb
ret
push
popf
bound
outsb
pop
or
dec
sub
and
push
lret
or
xor
dec
ja
inc
pop
mov
push
cmc
bnd
fildl
adc
in
jge
hlt
jbe
cli
and
cmp
rcl
or
int
add
dec
and
mov
mov
icebp
jo
sbb
xchg
rcrl
ds
ds
imul
mov
jmp
lcall
push
dec
mov
jecxz
jb
aad
test
xchg
shlb
xchg
inc
jp
push
mov
inc
call
jl
cli
fwait
jb
cmp
out
pop
stos
stos
cmpsl
fwait
test
fs
int
test
cmp
in
cs
aas
sbb
xchg
call
mov
xchg
pop
hlt
jecxz
mov
xor
cmp
pusha
ret
jmp
test
inc
mov
pop
inc
mov
jbe
sbb
aad
lret
ljmp
test
icebp
lods
adc
mov
dec
ljmp
xorb
mov
sbb
mov
stos
in
or
mov
mov
je
pushf
sbb
dec
insb
push
in
into
add
sahf
pop
outsl
jg
push
movsl
xor
jp
jnp
mov
jae
test
cmp
pop
or
fistl
imul
movl
xchg
dec
lock
movsb
adc
ficomps
icebp
dec
jmp
ljmp
jb
fists
inc
sarl
cmc
and
pop
adc
mov
test
add
sub
sbb
stc
loope
repnz
jmp
push
popf
jae
or
mov
and
xchg
xor
sub
out
cld
repz
nop
xchg
cmp
out
sahf
cltd
dec
shlb
xchg
iret
in
xor
mov
std
lret
and
push
cmpsb
ljmp
dec
mov
movsl
mov
pop
push
imul
movsl
aam
xor
add
fcoms
in
adc
gs
sbb
push
decl
cmpsb
dec
sbb
lret
sbb
sti
adc
xor
outsb
sbb
sbb
lods
jae
mov
cmp
pop
iret
lds
pop
push
ja
add
push
push
sub
testb
imul
jge
jg
dec
cmp
mov
mov
or
clc
and
aad
fimull
outsl
gs
push
cmp
pop
xor
mov
frstor
nop
divl
inc
dec
mov
in
in
xchg
push
mov
mov
push
sti
fs
xchg
adcb
pop
popf
inc
xchg
xchg
out
push
pop
adc
mov
xchg
unpckhps
push
add
cmp
pusha
clc
es
mov
cltd
mov
adc
add
nop
lock
xor
fnstcw
pop
push
popa
lods
icebp
mov
ret
ret
sub
mov
pusha
dec
sub
adc
or
push
mov
fcoml
adc
pop
leave
xchg
jns
mov
out
jl
sar
push
bound
test
icebp
cmpsb
jbe
cwtl
call
fsubs
mov
fmuls
imul
mov
lahf
mov
mov
sub
mov
push
cwtl
scas
mov
pop
xor
rolb
jle
jle
loopne
loopne
jecxz
es
sbb
clc
inc
cmp
jo
pop
push
jmp
or
sbb
cld
jnp
insl
popl
push
lret
test
jmp
dec
sbb
xchg
outsl
sbb
push
xchg
movsb
xchg
cmp
stc
ja
ret
std
cmp
lds
fidivl
scas
int
mov
popf
leave
push
or
in
icebp
cmp
aad
mov
pop
inc
mov
adc
mov
dec
sub
fnsave
mov
jb
mov
cmpsb
and
movsb
push
inc
loopne
out
sub
bound
in
jg
js
pop
jl
mov
xor
cs
pushf
mov
in
and
ja
sbb
outsl
lods
clc
dec
popf
and
out
xchg
push
sbb
jno
sbb
mov
shrb
inc
test
inc
add
sub
in
dec
inc
mov
cmp
push
fs
loopne
or
add
jbe
out
insb
or
adc
jmp
xchg
xadd
loop
icebp
xchg
jns
jbe
scas
jns
push
cwtl
or
cmpsb
lret
lret
mov
insb
inc
sub
mov
and
cltd
addr16
cmp
leave
inc
arpl
mov
sub
inc
daa
loope
push
rcrb
sub
insb
pop
rorb
cmp
ljmp
dec
pop
out
leave
andl
cwtl
test
adc
add
lret
xchg
pop
add
or
stos
mov
lret
aam
xor
stos
mov
or
das
cmpsl
lods
rcrl
test
shlb
shll
stos
push
dec
mov
mov
rclb
add
out
das
jmp
add
and
sbb
mov
lods
dec
or
xchg
push
ja
jnp
imul
repnz
cmpl
movsb
adcl
pop
push
outsl
imul
cltd
rcll
or
xchg
ficompl
lret
jecxz
pushf
jne
xor
repnz
dec
bnd
out
or
mov
in
cmp
lock
mov
sarb
pop
popa
dec
lret
push
adc
mov
cmp
int3
jae
cltd
xchg
in
test
and
pushf
mov
inc
cmpsb
adc
cmp
push
inc
mov
jne
ficompl
mov
inc
xor
subb
pop
inc
sub
loope
push
orb
je
inc
jnp
xor
ljmp
cltd
insl
sbb
dec
jl
cs
lret
repnz
rolb
aad
sub
dec
sbb
adc
mov
lds
adc
fnsave
aas
sti
lods
dec
scas
jo
push
pop
push
pop
jne
loope
leave
xor
into
dec
push
pop
sarb
je
ror
pusha
push
mov
ret
fsts
mov
arpl
xchg
es
out
adc
arpl
addr16
into
lahf
xchg
ss
jmp
iret
cmp
iret
jp
adc
mov
jnp
fwait
arpl
pop
inc
mov
lcall
and
lret
push
mov
jb
mov
sahf
loopne
push
inc
sbb
imul
adc
inc
xchg
aam
and
and
loopne
std
or
jbe
mov
push
icebp
pop
aad
xchg
pop
out
cld
out
sti
cli
sub
xchg
dec
dec
dec
hlt
test
cld
mov
movsb
in
add
cltd
mov
fwait
jb
pop
mov
jno
scas
fcomps
es
rolb
inc
fildl
inc
cmpl
movsb
add
test
repnz
mov
pop
imulb
gs
mov
sub
sbb
dec
xor
xlat
jo
mov
xor
imul
out
insb
mov
xchg
sub
jno
ja
mov
loope
inc
flds
fnsave
lods
mov
int3
and
sub
mov
and
dec
lods
mov
sbb
and
sbb
xor
movsb
ret
rolb
out
sub
jne
dec
loop
test
jnp
lock
adc
jle
inc
lods
cmp
pusha
xor
mov
cmpsl
mov
subl
test
popa
popa
imul
dec
add
daa
not
or
push
or
pop
mov
in
jl
xor
int3
xchg
push
jmp
or
mov
test
jecxz
jp
mov
in
jp
mov
jecxz
mov
cmp
lock
loope
out
dec
ds
insl
je
lahf
ds
fistpll
cmp
or
mov
and
cmc
fdivrs
int
jno
cld
stos
repnz
mov
fcomps
adc
dec
out
mov
incl
scas
outsb
sbb
out
dec
mov
das
and
mov
cmp
xor
sbb
shll
lret
pushf
ficomps
xlat
clc
lahf
xor
int
in
jle
or
ja
xor
mov
xlat
ret
les
ds
arpl
push
outsb
sbb
jne
stos
jmp
stos
xor
xchg
les
ja
push
jmp
ret
icebp
mov
ds
and
jg
out
ss
es
jb
popa
xchg
fdivl
add
cmpsb
push
jmp
cltd
inc
xor
hlt
mov
sbb
inc
imul
adc
lret
and
and
fwait
cld
lods
or
push
in
sub
mov
test
and
iret
cmpsl
jbe
push
sbb
sub
xchg
int
push
push
lret
jmp
loop
cmp
dec
xor
xor
push
inc
pop
lea
push
xchg
adcl
xchg
std
in
jae
lock
add
xchg
jae
cmp
mov
and
jnp
xchg
inc
fists
jns
test
lock
lods
pop
fdivrl
pop
lret
pop
stos
out
inc
sub
jo
mov
adc
adc
icebp
xchg
repnz
scas
aam
inc
cmp
pop
add
lret
pop
sbb
push
addpd
popf
sarl
rcll
pop
insl
fisubrl
les
and
inc
je
sub
call
sub
jge
xchg
pop
and
adc
repz
push
xor
scas
mov
jg
insl
fnsave
mov
mov
out
sub
jns
add
and
shrl
mov
push
addr16
cmc
mov
xor
add
sbb
pop
in
xor
inc
jl
mov
jle
fildl
cwtl
rorl
arpl
into
xchg
xchg
push
inc
fistl
or
cmpsl
lock
dec
mov
push
push
lock
jl
push
jg
test
repz
mov
jecxz
fwait
das
or
mov
sub
hlt
into
test
adc
dec
jp
imul
sbb
adc
popa
addr16
mov
jmp
jbe
fwait
lahf
jno
add
inc
mov
xchg
rcll
lcall
xchg
dec
sti
scas
mov
jecxz
pop
push
cmp
mov
or
or
in
fcmovne
push
fs
clc
insb
pop
push
pop
cmp
ret
xchg
movsb
and
je
mov
mov
mov
icebp
arpl
loopne
pushf
lahf
mov
mov
push
mov
and
pop
inc
push
cmpsb
add
jns
cmp
insb
xlat
js
aas
lea
mov
adc
jl
in
movl
adc
stc
popf
nop
bound
rcl
push
es
sti
fwait
and
and
sbb
stc
cmpsl
add
mov
sbb
inc
jecxz
cmove
ret
arpl
or
stos
cmc
in
cmp
int3
mov
out
cli
lret
scas
dec
pop
cmpsb
cmp
jle
sub
leave
scas
push
rcrl
addb
subl
repnz
aas
gs
add
sahf
jo
loopne
pop
shlb
inc
testb
xchg
adc
outsb
movsb
xchg
mov
sub
jmpw
pop
and
fisttps
lods
or
xor
out
rorl
fadd
mov
xor
or
mov
arpl
mov
lret
clc
dec
jp,pt
sub
push
std
icebp
pop
sbb
dec
lcall
in
daa
xor
mov
xor
adc
cltd
push
nop
pop
ret
adc
mov
mov
push
js
icebp
inc
jb
adc
mov
dec
sub
subb
push
daa
lods
dec
imul
je
xor
cmp
test
cltd
in
fwait
iret
xchg
mov
outsl
mov
in
scas
and
pop
iret
call
pop
ss
xchg
and
jp
jmp
out
inc
pop
sbb
fisubl
ss
ja
cmc
push
daa
mov
and
inc
rorb
loop
xorl
xchg
pushf
pop
popl
cmp
ja
push
xor
lods
xchg
xrelease
cmc
cmp
mulb
mov
mov
inc
pop
jge
dec
aad
pop
xchg
xchg
fsubrl
xchg
xorb
fnstsw
sbb
sub
sub
mov
pop
mov
nop
cmp
dec
push
jae
mov
aas
loope
pop
push
dec
lahf
in
les
scas
xchg
sub
loopne
jns
add
add
negl
xchg
imul
mov
jo
xor
xor
mov
add
xchg
jnp
or
in
mov
mov
lock
cmp
xchg
sbb
pop
sub
outsb
xchg
fimuls
mov
pop
cltd
mov
push
pusha
jmp
vpcmpeqw
fldt
jl
cmpsb
jp
rorb
pushl
and
xor
adc
dec
inc
lock
xchg
sub
pop
xlat
xor
ret
frstor
push
xchg
xor
mov
enter
insl
loop
ljmp
clc
mov
outsb
jae
aam
addr16
std
notb
dec
xchg
cli
xorl
je
push
adc
pop
ss
enter
scas
xor
mov
ret
testb
enter
je
jb
rol
and
mov
dec
pop
mov
push
push
jmp
out
xor
loopne
in
add
mov
mov
rcl
mov
sub
xchg
add
divl
hlt
jmp
xor
push
outsl
or
and
fs
js
mov
andl
mov
and
ja
and
xchg
jecxz
and
cmp
notb
and
lcall
ljmp
sub
cmp
or
cwtl
dec
pop
cmp
repnz
mov
rolb
fcom
lret
adc
gs
inc
and
sti
and
sbb
sbb
push
sbb
mov
sbb
cmpsb
jmp
subl
flds
and
bound
xchg
jns
lret
jo
xchg
xchg
sbb
les
js
mov
mov
pop
sbb
scas
mov
ret
xchg
dec
adc
arpl
jno
cwtl
push
xor
mov
addr16
mov
xor
test
lcall
aam
int
cmc
inc
sub
jp
sbb
cli
mov
sbb
xchg
out
and
xchg
fnstcw
fistpl
pop
adc
pop
in
pop
pushf
add
add
gs
fsubp
xchg
negl
jg
jae
push
shl
loop
cs
inc
push
inc
xchg
sub
ss
push
pop
push
sbb
mov
sub
pop
xchg
sti
mov
adc
xchg
push
mov
pop
cmp
adc
in
sbb
xor
add
repnz
lods
dec
ja
pop
sub
test
aaa
xchg
je
addr16
jg
das
mov
push
out
pop
les
mov
lret
inc
xchg
or
icebp
fisttps
cmp
ja
xchg
mov
inc
in
es
push
adc
inc
adc
xchg
hlt
xor
mov
mov
dec
cmp
mov
jmp
jg
out
imul
call
push
mov
xchg
or
pop
mov
add
cwtl
in
rolb
mov
sbb
nop
roll
push
mov
mov
adc
cmp
sahf
addl
mov
jge
daa
aaa
std
div
enter
push
pop
addr16
adc
aam
dec
out
mov
out
jb
repz
jo
cmc
cmpsl
stc
push
jne
lcall
push
bound
cmpsb
ret
or
leave
insl
cld
mov
and
imul
sti
outsl
mov
xchg
mov
imul
cmp
and
cmpl
fiadds
pop
cld
jg
popa
leave
sub
nop
cltd
imul
fildl
lcall
movsl
in
and
inc
inc
clc
pop
loope
ss
mov
pop
clc
pop
mov
and
mov
jmp
repz
cmp
mov
jns
push
jb
fstl
cmc
das
ja
clc
inc
add
dec
sub
sub
xlat
jne
mov
add
rcrb
loopne
ja
fimuls
mov
push
mov
mov
fst
jmp
movsb
ljmp
mov
lret
inc
adc
lods
adc
cs
imul
pop
enter
and
fidivl
daa
and
sbbl
add
mov
add
jnp,pt
mov
mov
fisubrl
and
clc
adc
mov
pop
and
jg
xchg
mov
inc
loop
fstpt
stos
xchg
cltd
jmp
fincstp
scas
movsb
jb
cmp
mov
pop
out
roll
jle
cwtl
mov
cli
or
sbb
sbb
data16
inc
adc
outsl
cmc
test
test
out
pop
push
push
aas
xchg
addr16
cmc
inc
push
dec
ja
test
imul
dec
xor
aaa
cmpl
outsb
jl
cmc
fwait
imul
sbb
inc
and
adc
mov
sarl
sub
mov
loope
pop
out
sti
cwtl
fs
stos
push
scas
mov
mov
jo
push
stos
pop
jmp
jb
roll
xchg
jecxz
add
add
test
mov
push
sbb
lods
arpl
or
add
cmp
ljmp
inc
je
into
inc
push
inc
add
call
and
push
jae
mov
aas
scas
lods
daa
pop
test
jge
arpl
cmp
ret
mov
popf
fsubrl
mov
adc
mov
repz
in
paddsw
xchg
movsb
mov
adc
aaa
xchg
insl
ds
jl
scas
sub
arpl
mov
dec
jb
pop
aaa
jle
push
adc
add
push
mov
pop
cmpsl
mov
mov
mov
inc
sub
adc
cli
push
test
inc
or
mov
inc
cmc
aas
xchg
int3
cmpsl
lahf
js
pop
lcall
insb
xcrypt-ctr
cmpsl
pushf
xchg
xchg
xchg
insb
or
stc
or
cwtl
or
je
and
cmpsb
mov
sub
mov
iret
xchg
clc
out
sahf
test
jecxz
cld
pop
xchg
sub
cld
lock
test
xchg
addr16
in
adc
mov
testb
dec
jl
jo
ss
nop
inc
stc
xchg
jle
sti
sbbb
in
sahf
fwait
inc
roll
sub
push
in
pop
rcrb
fld
cmp
pop
mov
popa
decb
mov
adc
out
inc
outsb
xchg
sbb
xor
movsl
xchg
js
cmc
inc
cwtl
inc
xor
neg
sahf
cmp
std
sti
pusha
mov
or
nop
pop
inc
cmpb
mov
sub
movsl
fcoml
add
fiaddl
mov
test
rcll
xor
idivl
push
out
outsb
lods
xchg
sbb
cmc
push
hlt
adc
mov
and
xor
sub
imul
xchg
insb
xchg
push
arpl
ss
xlat
cmp
adcl
loop
dec
jbe
push
js
cmpl
push
mov
mov
std
inc
cmpsl
lret
and
daa
adc
test
cmp
rorl
shlb
out
xor
pop
pop
cmpsl
mov
push
mov
inc
add
mov
stos
cwtl
dec
dec
ds
sub
xor
mov
xchg
adc
test
inc
inc
pop
adc
lods
dec
nop
int
xor
add
cmp
jno
shrb
mov
pop
xchg
adc
sbb
mov
out
dec
repnz
push
arpl
xchg
jg
addr16
jg
push
xor
bnd
push
jmp
adc
sbb
sarb
lods
mov
in
fistpl
cmp
adc
insl
mov
and
lods
pop
push
xor
mov
or
and
xor
mov
and
jae
pop
mov
xchg
insl
mov
test
pop
scas
test
jecxz
jb
xor
dec
and
in
jecxz
sarl
sti
roll
fnstsw
popa
add
mov
push
cld
inc
pop
jle
xchg
inc
into
push
loop
push
xorb
movsl
pavgw
cmp
dec
aas
movsb
xchg
push
out
cmpsl
inc
mov
inc
sub
loope
mov
mov
push
xchg
adc
pop
popa
loope
mov
mov
dec
xchg
loopne
sub
jae
out
lods
lret
sub
loope
cmp
je
in
ret
repz
or
jo
inc
test
icebp
mov
divb
adc
inc
push
mov
ret
in
dec
mov
call
push
rolb
in
xchg
in
dec
sbb
imul
mov
xchg
repz
arpl
ret
lcall
out
out
dec
mov
mov
aas
aaa
fiadds
fldcw
sbb
std
dec
daa
mov
mov
iret
cmpsl
mov
pushf
rcr
clc
lret
sub
sbb
adc
sbb
jo
pop
inc
negl
pop
xor
aas
jo
jp
push
lret
popf
mov
inc
repz
fwait
cmp
lahf
inc
icebp
or
xor
insl
inc
aas
lret
or
out
pop
stos
dec
jb
sub
and
inc
or
dec
ss
pop
popf
mov
lea
push
out
movsl
mov
sti
cmp
ret
mov
cmp
xchg
cmpl
movsb
and
std
xlat
mov
call
mov
andb
leave
and
xor
mov
adc
mov
ret
add
jo
mov
push
or
fwait
scas
lahf
scas
cmp
test
js
sub
dec
or
mov
jbe
inc
sahf
loop
or
mov
dec
pop
out
adc
xlat
sti
das
jbe
push
popf
pop
aad
mov
aad
lahf
cli
xlat
pop
sub
stc
mov
ja
xchg
push
in
jno
pusha
push
xor
sbb
jbe
sub
cltd
mov
fwait
push
add
mov
add
in
iret
push
mov
data16
mov
loopne
test
jnp
xlat
scas
ret
in
lds
aad
pop
mov
aas
movsb
sahf
xchg
lods
ljmp
push
aam
aad
loope
sub
stc
sbb
push
and
hlt
pop
xor
xlat
xlat
cmp
adc
mov
mov
jle
inc
add
bound
popf
xor
sbb
xchg
mov
aam
and
inc
pop
ss
xchg
mov
lret
loope
push
xor
shlb
out
incb
pop
adc
fsub
xchg
jne
es
cmp
outsl
imul
sub
mov
pop
mov
cmp
mov
or
lods
cmp
xor
dec
lahf
ror
int
jmp
or
sub
push
call
out
jge
push
mov
sub
dec
add
sbb
sarb
sahf
test
addr16
cmp
insb
push
das
push
sbb
jne
push
dec
loop
incb
imulb
sbb
fcoml
pop
push
sub
or
les
inc
push
jge
ret
out
pop
addr16
or
lahf
cmpsl
jle
roll
imul
cmp
xchg
std
arpl
jmp
mov
pop
mov
mov
imul
jecxz
subb
rcl
mov
ret
xlat
cmp
sarl
in
iret
add
shrb
pop
mov
mov
jg
and
enter
cmpsl
frstor
imul
dec
push
mov
cmp
inc
dec
stos
pop
stos
push
pop
inc
rcr
and
test
or
mov
std
cmp
xor
adc
cmp
adc
pop
les
sub
mov
ds
daa
pop
dec
shlb
sbb
adc
fwait
rorb
fwait
std
jns
inc
adc
xor
das
push
dec
outsl
push
loop
movsl
pop
or
sub
enter
icebp
sti
jno
adc
jp
xchg
jmp
insb
jmp
in
and
rcpps
ds
inc
jmp
movsb
mov
push
scas
xor
cmpb
movsl
test
cli
cmp
and
and
aas
pop
fdivs
lock
jae
sbb
push
aam
lods
mov
mov
pop
loop
push
dec
stc
xchg
out
mov
cmp
bound
jle
push
jns
lock
add
hlt
loope
xchg
sbb
cmc
sub
sbb
shrb
inc
addl
sarb
mov
call
sub
arpl
cwtl
sti
adc
repz
clc
sub
xchg
fistpll
push
mov
popa
jl
and
in
inc
add
push
pop
out
pop
xchg
sahf
test
loop
lahf
into
imulb
popa
mov
ds
dec
icebp
mov
xor
push
dec
cmp
dec
adc
jne
mov
ja
jbe
ljmp
iret
mov
push
inc
adc
dec
xor
andl
sbb
arpl
cld
cmpsb
pop
lahf
or
ret
add
pop
inc
push
std
xor
mov
pcmpeqd
fbstp
ds
mov
paddd
repnz
cmp
jge
rcr
int
stc
popf
jmp
cmp
popf
aad
lcall
sbb
mov
cwtl
jb
xchg
andb
push
inc
add
add
stos
insb
popa
movsb
int
out
pop
mov
dec
pop
jnp
notl
mov
jnp
inc
int3
add
push
mov
cmpsb
roll
lea
nop
sahf
mov
ret
shl
mov
lock
lods
push
mov
iret
aad
aad
out
imul
xor
push
jle
aad
jmp
repz
cmp
mov
dec
loopne
jb
push
cs
in
mov
lods
lcall
xchg
je
dec
addr16
pop
pop
sarl
fwait
dec
rcr
insl
aam
shlb
mov
pop
and
pop
ret
or
pop
xor
mov
push
push
mov
pop
push
sbb
pop
pop
sti
push
aaa
lcall
cmovge
mov
loopne
inc
es
dec
mov
fcompl
sti
add
jb
mov
mov
sbb
xchg
fsubl
imul
jg
nop
pop
in
push
mov
lahf
mov
sbbl
add
inc
or
fwait
icebp
xchg
and
test
add
lret
xor
dec
push
lock
sbb
in
jmp
push
jb
cmpsl
in
aam
test
call
into
fistl
xor
fwait
add
inc
mov
sub
dec
xchg
mov
test
xchg
mov
aam
lea
mov
adc
int
mov
ljmp
aam
sub
into
xchg
xorb
xor
scas
ljmp
lcall
outsb
dec
repz
mov
ss
cs
dec
and
hlt
jbe
xchg
in
pushf
pusha
xchg
lcall
aad
xchg
cmp
inc
fistpll
push
jns
jge
bound
out
sub
cmp
pop
test
sarl
andl
pushf
es
pop
mov
sar
cmp
jg
dec
adc
das
cmc
insb
fistpll
sub
xor
shrl
add
mov
cli
dec
shll
xlat
stos
and
or
jl
push
pop
or
push
popf
ljmp
loopne
imul
push
lods
xor
mov
insb
lods
push
xcrypt-ctr
cmpsl
pushf
xor
notl
test
inc
in
sti
int3
jns
jg
mov
fists
faddl
in
addr16
imul
dec
ss
cmp
insb
imul
lods
sbb
pop
incb
ret
pop
or
or
sbb
rcl
xor
sbb
outsb
roll
sub
push
inc
mov
loop
jmp
mov
xchg
jmp
xchg
inc
cmpl
movsl
pop
push
ret
ja
xor
dec
sub
or
mov
jg
cmp
mov
in
notl
mov
inc
js
loopne
lret
cmpsl
ds
xchg
scas
and
jmp
xor
pop
pop
and
sbbb
and
sub
xchg
fsubs
jae
and
rcrb
test
push
faddl
sbb
jns
imul
insl
das
cmp
pop
inc
xchg
dec
mov
gs
sarb
pushf
mov
bound
ss
mov
sub
lret
hlt
jle
xchg
rorl
ret
mov
mov
rorb
idivl
addb
adc
dec
xor
jge
sub
push
mov
es
adc
jl
lcall
adc
cmp
dec
jnp
mov
mov
push
mov
jns
loope
push
and
popa
jle
mov
lods
testl
and
xchg
jge
cltd
dec
in
lcall
xchg
xchg
test
cmp
stos
dec
fmuls
cld
and
imul
sbb
ret
icebp
fstpt
mov
pop
jns
rclb
mov
dec
or
mov
mov
int3
push
shll
or
test
mov
fildll
push
shll
lods
ret
rol
inc
add
loopne
add
pop
pop
sub
xor
clc
test
adc
jb
gs
incl
mov
xor
mov
pop
cmpsb
dec
mov
popf
push
add
data16
iret
cwtl
push
pop
lea
cmpl
sbb
aas
mov
inc
jl
neg
fsubs
mov
rorb
nop
data16
inc
movsl
cmp
pushf
cmp
jecxz
mov
and
leave
fst
dec
iret
dec
mov
popf
add
iret
gs
mov
sub
nop
lret
fwait
lds
mov
sub
xchg
pop
push
pop
jnp
mov
std
decb
fs
stos
adc
xchg
imul
sbbb
add
fcompl
loopne
stos
cli
jmp
cmp
xchg
mov
cmpsb
int
inc
les
mov
sub
ja
test
aaa
jecxz
cmp
jmp
rorb
mov
inc
imull
leave
bound
xchg
loop
sarb
adc
dec
jne
push
xor
in
inc
xchg
push
sbb
and
cmc
and
xchg
popa
hlt
xor
cli
jne
cmpsl
movsl
adc
stos
xor
lcall
outsl
add
sbb
into
ficompl
mov
xor
es
and
shl
movb
cmpsb
xor
and
je
rol
loopne
cmp
push
cld
aaa
push
leave
xchg
xchg
testl
sar
adc
daa
in
fmul
and
pop
loop
sub
cmpsb
in
add
icebp
inc
outsb
and
scas
mov
ja
push
bound
mov
sti
xor
cmpsl
mov
push
mov
or
xchg
push
sar
inc
xchg
add
insl
xlat
fsubs
test
mov
jg
dec
xchg
and
movlps
bound
pop
stc
adc
jb
push
decl
lret
or
sub
insb
inc
mov
mov
sahf
cmp
jns
dec
inc
in
push
jne
test
inc
sbb
test
nop
insl
mov
insl
sub
mov
aam
les
mov
mov
jle
sbb
into
push
fistpll
xor
out
fucomip
clc
outsl
test
out
mov
fs
push
add
xor
std
jb
xor
mov
inc
mov
add
out
inc
jg
cli
pop
cli
leave
mov
add
push
dec
jle
cwtl
mov
lock
inc
jmp
dec
dec
sub
dec
jle
cmp
mov
jmp
insb
and
lods
and
push
shrl
ljmp
jno
push
rorl
cmpsl
sahf
ret
test
and
bound
jecxz
decl
adc
sbb
mov
xor
int
pop
lret
mov
imul
in
mov
or
mov
cmp
mov
adc
cmp
mov
dec
sbb
and
pop
fiadds
lock
je
push
sub
or
or
inc
lods
mull
aam
mov
fidivl
lods
imul
jno
xor
lahf
push
fs
pop
mov
fisttps
shll
mov
pop
push
enter
cmp
in
outsb
insb
inc
cmc
xchg
jb
incb
push
jmp
sub
dec
dec
lcall
outsl
test
sahf
mov
call
dec
insl
ficoms
adc
bound
lds
das
loopne
addl
xchg
insl
cmpl
lret
and
pop
dec
popa
and
repnz
pop
test
add
js
dec
push
mov
mov
loop
adc
mov
mov
lea
in
test
loop
lock
scas
ja
xorb
lods
or
dec
shr
fs
repz
out
jo
mov
or
and
mov
sti
scas
add
adc
xor
xor
adc
mov
fbld
inc
cli
xchg
fdivrs
insl
jnp
cmpsb
scas
xlat
mov
ljmp
cmp
stos
mov
dec
test
test
fcmovnbe
xor
add
inc
mov
loop
inc
lret
xor
mov
aad
out
dec
adcb
pop
shlb
push
aad
popa
pusha
xlat
mov
imul
fld
jns
inc
cmp
xor
mov
nop
int3
lods
scas
adc
cs
stos
mov
sti
xchg
lcall
cmpsl
sbbl
adc
push
adc
inc
sub
in
cwtl
sbb
pusha
sub
xor
xchg
subb
stos
inc
into
mov
xchg
das
hlt
pushf
sbb
repnz
mov
adc
cli
bound
adc
jns
outsb
and
xchg
pusha
inc
xor
outsb
movsb
test
ds
xchg
std
setbe
rcr
lret
or
xor
loopne
ja
pop
mov
cs
sub
ljmp
push
mov
mov
sub
dec
scas
int3
push
nop
xor
push
insb
sub
out
rorb
mov
sbb
aas
fisubrs
hlt
shlb
nop
cmc
aam
call
mov
xor
mov
lods
pop
aaa
mov
aas
adc
mov
dec
add
jb
jbe
pop
leave
imull
sbb
mov
in
out
jne
data16
movsl
jg
aaa
out
xor
cmc
pop
pusha
sub
pop
add
out
xor
test
or
mov
gs
pop
sarl
xchg
arpl
cs
ret
outsl
jle
push
adc
lods
pop
inc
fisubl
pop
pop
jmp
pop
pushf
aas
xchg
sbb
icebp
inc
pushf
add
xchg
push
lahf
aam
and
pushf
jno
xchg
std
and
fistps
jb
push
cmp
adc
cld
cmc
mov
mov
push
sbb
push
mov
mov
push
mov
dec
cmp
mov
in
cs
cmp
mov
aam
sbb
pop
sbb
or
rorl
rclb
mov
aas
insl
sub
lea
lds
xchg
mov
std
iret
cmp
adc
sarl
insb
ljmp
sub
into
push
adc
pop
lods
mov
outsl
jl
icebp
xchg
ja
lods
jne
cld
mov
or
imul
pop
cwtl
out
push
pop
fxch
popa
pop
mov
lock
xor
xorl
jmp
es
sub
stc
xchg
nop
jle
cmp
mov
ljmp
nop
pusha
testl
out
in
dec
fcmovbe
aam
fisubrl
jnp
insl
dec
lock
pop
lods
and
xlat
cmc
scas
loope
into
sub
adc
add
movb
jne
mov
cld
ss
cs
xchg
inc
xor
sbb
mov
cmp
dec
mov
inc
out
jbe
lahf
mov
int3
nop
xlat
filds
xchg
sahf
jl
ja
pop
inc
jecxz
out
and
ljmp
test
shlb
mov
xchg
cmp
outsb
int3
pop
popa
xchg
sbb
lods
das
pop
jmp
addb
std
jbe
test
mov
ret
and
pop
clc
jns
sub
ficoml
shrl
dec
fildl
loope
sub
add
xchg
sbb
xor
mov
sti
ret
xchg
out
lret
sahf
jl
add
fstl
ja
ret
cmp
lcall
add
out
mov
inc
push
dec
or
cld
fwait
inc
sahf
imul
hlt
lea
push
lret
aaa
push
mov
loop
ljmp
es
pushf
xor
or
pop
add
std
std
or
icebp
pmulhw
pop
sbb
xchg
scas
and
jns
mov
jecxz
pop
cwtl
cmp
or
ficoml
outsl
pavgw
mov
sub
int3
imul
inc
je
shrb
pop
sub
jp
shr
dec
mov
addr16
xchg
dec
pop
adc
xor
int
daa
inc
inc
sub
sub
cmp
std
or
lock
and
out
xor
pop
call
jae
mov
sbb
int
cld
fstl
insb
xchg
jno
lock
adc
outsb
adc
xchg
jmp
or
out
mov
rcrl
mov
mov
pop
jbe
aam
and
or
loop
loope
cmp
iret
aaa
or
ret
popa
lret
sub
mov
push
loopne
pop
inc
out
enter
adcb
mov
mov
dec
lcall
sbb
sbb
arpl
fdivrs
mov
addr16
jnp
shlb
test
pop
imul
adc
stc
cltd
inc
cmp
mov
aam
fmuls
mov
cld
lea
mov
cmpsl
jb
cmp
mov
cmc
in
popa
jmp
out
adc
pop
in
jg
adc
mov
jl
dec
mov
fimuls
dec
mov
imul
mov
inc
cld
jle,pt
enter
dec
push
add
jmp
cmpsl
leave
push
fidivrs
pusha
jno
pop
xor
add
adc
push
pop
iret
mov
and
loopne
stos
jno
stos
popa
mov
ja
adc
or
bound
adc
dec
lea
idiv
sub
jmp
popf
mov
xchg
sti
imul
loopne
mov
mov
pop
xor
out
fdivrl
cmpsb
add
jne
jns
add
call
mov
lret
mov
cmp
stc
rorb
lcall
inc
fs
mov
mov
xchg
cmpsl
imul
pop
mov
pusha
sub
leave
aam
cmp
cmc
adc
outsl
mov
pop
sbb
jne
xor
mov
dec
insl
cmp
jle
ds
or
ja
inc
aas
jp
xor
and
imulb
mov
dec
cmpsb
mov
outsb
in
out
and
movsb
cmc
ja
icebp
hlt
fsts
pushf
inc
arpl
in
stc
push
lods
sub
lcall
mov
nop
push
in
shufps
lock
pop
dec
adc
add
lcall
jmp
add
or
negb
repnz
jle
pop
loope
test
mov
bound
xor
pop
fisttps
sub
fsubp
mov
lret
in
daa
or
jge
mov
int
push
cltd
add
inc
adc
call
clc
jecxz
inc
in
movsb
outsl
mov
out
ret
sbb
loop
pop
sbb
xlat
fnstcw
addr16
push
cmpsb
nop
jb
loop
jbe
aad
xor
hlt
and
scas
cmpsb
repnz
mov
loope
mov
and
xchg
add
lea
xor
loope
enter
inc
pop
ljmp
and
sbb
mov
sub
stos
xor
dec
lds
ja
ljmp
push
sbb
fnstcw
mov
mov
push
and
push
not
pusha
clc
mov
jo
pop
sub
cmp
outsb
push
sub
movsb
mov
imul
inc
pop
hlt
mov
or
sbb
lret
sub
les
das
xchg
sti
shrb
insb
outsl
movsl
and
and
cmpsl
sbb
repz
stos
repz
or
xchg
call
inc
sub
jnp
rorl
adc
bound
mov
push
loopne
jp
outsb
stc
or
outsl
ret
cmpsl
movsb
sub
dec
dec
andb
inc
sbb
xchg
mov
sar
testb
aam
inc
jmp
jmp
mov
cmp
and
and
fwait
dec
push
jg,pt
int3
mov
ljmp
or
aad
or
jge
adc
jae
aam
push
jb
dec
or
sub
xor
mov
les
sub
sarl
jge
arpl
sub
pop
or
mov
fcom
jge
push
jle
cmp
push
dec
out
test
out
bnd
jae
popf
ror
cmp
mov
sahf
mov
xchg
daa
mov
fwait
inc
mov
xlat
mov
pop
test
xor
mov
add
xchg
and
cli
adcb
popa
inc
fcmovbe
jb
pop
adc
lcall
daa
cmp
jbe
out
mov
sbbb
mov
insb
out
push
pushf
xor
xchg
sbb
cmp
add
and
mov
lahf
je
adc
ja
outsb
mov
idivl
sub
outsb
lcall
les
jg
add
cmp
fnstenv
sbb
adc
jle
jmp
dec
xlat
inc
cmp
mov
or
insb
fisubrs
adc
xor
fldcw
fcmovnu
test
push
push
leave
push
jmp
jb
cltd
rolb
popf
or
pop
dec
dec
les
or
rolb
pop
sbb
pop
stc
lret
das
sbb
aaa
or
jno
movsb
mov
xchg
pop
in
xchg
push
repz
adc
add
les
fs
int
xchg
dec
mov
jmp
and
or
and
adcl
mov
sahf
daa
imul
mov
push
inc
push
xchg
add
sub
addr16
jne
scas
popf
pop
sbb
pop
fwait
les
cmpsl
in
dec
popa
fdivr
enter
sbb
lret
sbb
mov
in
add
ret
cwtl
mov
jecxz
and
adc
mov
addl
mov
adc
movsl
test
rorb
mov
inc
es
add
and
inc
sbb
fisubrs
cs
pop
test
bound
cmp
sbb
mov
cmp
mov
mov
jo
std
iret
rorb
lock
add
ds
rorb
test
dec
add
jno
push
out
mov
adc
lcall
ror
pusha
pop
lahf
addr16
pop
mov
adc
add
lret
jae
xor
inc
and
sbb
push
pusha
fisubl
stos
scas
addr16
and
in
dec
mov
inc
test
sub
pushl
insl
xor
popf
mov
call
aad
scas
repz
neg
fisubs
loope
test
jg
sahf
movsb
lret
sub
mov
or
std
mov
xchg
in
jmp
inc
sbb
out
repz
adc
jg
imul
lds
cltd
xchg
and
or
cmp
cwtl
lods
mov
lock
inc
sub
hlt
push
or
sub
mov
sub
imul
pop
inc
fdivrl
adc
outsl
cmp
cmpsb
lock
scas
cmp
push
aam
push
mov
jl
push
pop
mov
je
xchg
mov
ret
xchg
out
inc
popa
aaa
jmp
xor
xor
popf
addr16
mov
in
jmp
mul
shl
cli
dec
imul
icebp
push
aaa
adc
mov
inc
push
add
shll
add
shll
mov
or
lds
inc
jbe
popl
mov
inc
cmp
xchg
in
pop
repnz
sub
jg
shr
out
push
inc
push
loopne
and
pop
ja
mov
pushf
and
scas
lea
aad
fldt
dec
scas
fcoms
push
or
cmc
mov
lret
xchg
inc
jae
pop
dec
dec
sarl
and
mov
movb
add
movsl
add
pop
or
mov
pop
inc
aaa
push
negb
mov
sahf
add
xchg
jbe
scas
movsb
loop
inc
pop
mov
fs
aam
sbb
cmc
mov
xchg
mov
push
add
insl
pushf
test
cwtl
int3
lcall
inc
lahf
mov
adc
iret
js
sub
test
dec
jae
pop
mov
and
mov
or
push
insl
xor
mov
mov
lret
sbb
push
ds
cld
adc
loop
mov
enter
xchg
fisubs
lahf
in
sub
lret
xchg
adcl
loopne
jno
jge
loop
dec
cmp
pop
pop
loope
and
xchg
hlt
int3
std
rol
or
mov
mov
stos
mov
sub
test
scas
fsubrl
and
pusha
or
stc
aad
inc
jnp
dec
xchg
mov
enter
shl
cmc
ficoml
mov
sbb
xchg
add
je
dec
xchg
call
cmp
int
xchg
push
jo
int
mov
add
into
das
mov
lea
cli
and
jl
sti
dec
push
push
jbe
push
mov
jo
mov
or
movsl
addb
jl
lods
insb
scas
pop
cwtl
xor
lds
gs
sbb
add
mov
gs
and
cltd
inc
xor
inc
divb
jb
pop
ss
loopne
shll
mov
and
ds
add
lcall
pop
imulb
scas
jns
pop
push
lret
sub
xlat
fsubl
imulb
call
mov
xchg
mov
aas
jle
jge
push
sbb
repz
ret
imul
das
jae
and
lods
push
sub
sbb
inc
dec
or
addr16
dec
aas
daa
js
mov
push
inc
les
push
dec
xchg
stos
fsts
pop
pop
pop
xchg
xchg
ret
sbb
movsl
and
roll
jmp
xchg
bound
adc
repnz
jmp
sahf
clc
sbb
mov
outsl
rol
out
lahf
add
test
mov
jmp
push
sbbl
jno
and
pop
fisttpll
inc
sbb
pop
adc
pop
aas
jne
rcrb
fidivrl
icebp
and
jge
push
js
jae
push
divl
imul
xchg
rcrb
fsubrl
shl
push
pushl
push
adc
jb
dec
movsb
mov
sbb
lahf
mov
aad
insl
jns
jle
sub
lea
push
iret
push
enter
test
or
popl
repz
data16
push
popf
es
xchg
jge
test
xor
xchg
aaa
mov
mov
push
ret
pop
lds
cmc
mov
cmovl
out
xchg
adc
or
xlat
lock
in
cmp
js
sbb
into
std
in
push
std
es
push
aaa
mov
mov
jecxz
cmp
nop
jno
dec
daa
dec
push
cmp
fs
cmpsb
lret
sahf
and
jp
shll
cmpsl
mov
repnz
add
push
orl
mov
cld
push
dec
pop
fsubrs
sub
or
inc
xor
cmp
pop
xor
fcoml
xchg
dec
xchg
jae
xchg
and
adc
inc
pop
mov
movzbl
js
mov
pop
cli
adc
or
sbb
cmp
lea
in
xlat
es
cli
cmp
push
xchg
pop
orps
nop
adc
pop
mov
xorb
fisubl
sbb
mov
loopne
push
addr16
mov
adc
hlt
xchg
mov
aam
xor
dec
pop
mov
sub
or
push
push
push
loopne
adc
call
cmpsb
xchg
je
movsl
gs
stos
nop
mov
sbb
out
fs
pcmpgtd
iret
add
popa
mov
dec
cmp
mov
jle
push
pop
push
inc
mov
pop
insl
pop
pusha
jb
adc
or
or
stos
dec
cmp
push
xor
xorb
shrb
mov
cli
out
nop
pop
pop
jge
inc
bound
ficoms
outsl
mov
push
inc
mov
aaa
pop
xchg
mov
jle
push
inc
ja
call
jg
fildll
sbb
ds
popa
push
flds
out
dec
xor
pop
xchg
add
or
adc
out
jne
outsl
or
adc
sbb
sbb
test
push
push
and
mov
notl
lret
ficoml
fs
inc
das
push
xor
sbbl
or
ret
jno
push
repnz
mov
loop
cld
cli
push
xchg
jae
adc
stos
xchg
fistps
and
test
mov
xchg
jmp
scas
jle
add
push
inc
cmp
clc
stos
cltd
scas
mov
or
jne
xor
inc
sbb
cmc
gs
insb
movsb
out
add
push
pop
fdivrl
xchg
dec
mov
xor
fs
jg
loopne
xor
and
dec
imul
stos
cmpl
aad
nop
movsl
dec
adc
mov
inc
pop
xchg
push
or
in
dec
adc
les
divl
push
xor
jns
push
in
pop
insl
jle
push
jp
lods
ficoml
mov
mov
in
xchg
fwait
xchg
shlb
addl
enter
xchg
bound
icebp
mov
add
sbb
jmp
fbld
or
les
stc
add
xchg
inc
sub
pop
fstp
rcll
mov
mov
in
scas
scas
pop
sub
pop
leave
inc
imul
sbb
or
jmp
cmp
and
in
call
int3
test
push
int
push
mov
inc
xor
push
sub
jo
rcll
pop
fcom
pop
je
push
fldl2t
clc
in
push
sti
loopne
cmpl
dec
pop
or
dec
mov
test
daa
cmp
sbb
push
popa
mov
pop
in
and
repnz
mov
pop
dec
and
pop
jg
js
lret
sbb
pushf
or
aad
lds
lret
dec
mov
mov
pop
xor
imul
xlat
rol
mov
jle
lahf
mov
or
outsb
mov
clc
stc
fdivl
aaa
push
cmp
push
jecxz
cltd
xlat
aaa
pop
jecxz
cmp
call
sti
movsl
aas
xor
js
outsb
cmp
mul
add
aad
push
add
xchg
insb
das
pusha
and
mov
adcb
ljmp
ja
fsubrs
pop
ds
mov
jnp
sbb
repnz
in
and
jge
mov
cmp
push
adc
xor
movsl
out
push
xchg
and
into
sub
cmc
mov
sbb
bound
gs
jb
xchg
inc
cmp
sub
sbb
fnstsw
jmp
call
or
shrl
repz
sub
das
mov
out
and
sarl
push
ds
movsb
jb
cmc
cmpsl
movsl
mov
inc
jmp
jb
sub
mov
xlat
das
stos
ret
subl
mov
add
mov
push
xchg
lret
mov
pop
jno
xchg
sahf
dec
repz
sub
test
mov
out
sub
pushf
gs
mov
fadd
cmc
mov
fbstp
stos
jno
imul
pop
jne
mov
jmp
mov
sbb
insb
jno
mov
fcmovb
xor
filds
adc
sahf
mov
mov
out
push
add
jecxz
adc
sbb
or
les
push
rolb
inc
or
inc
mov
imul
test
repnz
outsl
inc
pop
sbb
loop
out
je
or
jo
out
mov
xor
aas
pop
fldl
push
xchg
addb
outsl
int
xchg
dec
iret
jnp
leave
enter
addr16
adc
cltd
movsl
add
or
bnd
inc
aas
and
rol
int
inc
out
rcll
add
aad
push
lock
stc
jno
icebp
inc
or
jle
jb
pusha
lock
scas
mov
addl
andb
sbb
jmp
xchg
int
int3
stos
aad
inc
dec
fsubl
xchg
inc
fstl
imul
lods
adc
and
cmpsl
push
stos
imul
adc
xor
mov
out
pushf
adc
pop
cmp
jo
fstpt
fldl
jns
icebp
std
lret
adc
leave
push
push
pop
iret
xor
mov
mov
int3
or
push
mov
dec
inc
add
push
icebp
insl
lods
add
mov
das
sub
xchg
mov
push
and
notb
push
in
in
ds
shlb
in
xor
shlb
pop
and
repnz
adc
jmp
pushf
loopne,pn
xchg
xchg
pop
or
dec
int
sub
stc
xor
scas
jns
ja
sahf
xor
das
sahf
in
mov
call
pop
jne
and
adc
and
lahf
ret
int
test
sub
jge
int3
int
dec
orl
mov
xchg
or
test
mov
inc
jg
das
je
cmp
jbe
outsl
pop
inc
sub
fucomp
fbstp
add
int3
cmp
cltd
call
cmc
push
xchg
sbb
mov
add
leave
arpl
jo
lea
xchg
cmpb
cmp
push
xor
arpl
pusha
sbb
rcl
and
and
in
into
scas
mov
xor
push
aaa
inc
add
sahf
dec
mov
xchg
js
imul
rorb
xchg
inc
cmp
mov
mov
mov
lds
out
fwait
lock
push
xchg
leave
loop
in
xor
aad
enter
or
negl
push
xlat
mov
mov
outsb
shlb
sbb
cmp
mov
js
mov
xor
sub
outsb
jae
mov
faddl
mov
xchg
pop
mov
fisttpll
test
in
loopne
pop
aad
dec
and
enter
xchg
inc
outsl
popf
sbb
stos
sub
cltd
xor
fisubrl
inc
fsubl
dec
fstpl
xchg
data16
movsl
daa
mov
aaa
pop
xchg
or
test
inc
inc
cmpb
push
test
mov
mov
lds
fwait
leave
adc
cwtl
fsubl
sbb
repnz
mov
dec
pop
or
sub
ss
xchg
ret
repnz
mov
ss
stc
jl
pop
shrb
cwtl
inc
push
iret
stos
pop
out
xchg
cmp
jg
call
xchg
gs
or
fildl
lds
ss
rorl
sub
or
xchg
filds
push
mov
cmpsb
in
push
and
xorl
dec
adc
mov
pop
inc
cmpsl
mov
movsb
mov
sub
xorb
fs
lods
sti
push
mov
dec
stos
xor
leave
mov
lods
loopne
push
insl
push
mov
push
fisttps
push
cmp
test
and
adc
in
inc
popf
inc
ljmp
sar
push
cmp
cmp
mov
dec
out
loope
pusha
xchg
mov
or
fistps
loope
sub
and
rcrb
fidivs
xor
push
in
mov
out
xor
pop
clc
test
mov
jp
sub
sarb
jae
data16
data16
aam
pop
mov
test
inc
out
jmp
xor
jp
inc
mov
insl
test
sub
pop
ss
aas
leave
or
je
push
jae
or
xchg
cli
stc
icebp
in
cld
push
pop
mov
add
bound
dec
xchg
outsb
lret
jb
mov
mov
popf
adc
mov
hlt
insl
rcl
scas
das
lcall
aaa
jno
xchg
les
xlat
leave
insb
and
mov
mov
icebp
push
cmp
out
adc
push
jns
and
lahf
or
pop
mov
enter
shlb
int3
bound
fadds
mov
test
push
in
out
into
cwtl
lret
adc
insb
inc
sbb
sub
lea
data16
js
test
std
pop
mov
cmpsb
addr16
mov
mov
pop
jge
aad
jo
nop
xlat
pop
aad
stos
add
std
push
or
cmp
xor
add
fmull
cmpsb
mov
das
adc
bound
mov
mov
dec
mov
mov
adc
mov
rcrb
xor
xor
test
loope
fmul
jne,pn
je
imul
loopne
xor
push
mov
mov
imul
lahf
test
xor
mov
inc
cmp
push
sbb
lods
js
adc
dec
mov
pop
mov
and
pop
test
cmp
mov
es
iret
outsb
shlb
mov
xchg
mov
fdivrl
xchg
mov
ja
mov
or
rorb
out
xchg
roll
ret
mov
jo
pop
adc
add
or
decb
xlat
rorl
iret
jb
data16
jp
dec
mov
outsb
mov
push
push
mov
xchg
xlat
push
or
add
and
lret
dec
sbb
icebp
int3
add
scas
add
add
xchg
insl
lret
sbb
pop
imul
dec
sub
inc
xchg
push
popl
cli
mov
lret
fistpl
mov
mov
je
lcall
inc
insl
call
in
fisttpll
cmp
mov
mov
mov
sbb
cmp
push
enter
xchg
dec
enter
xchg
push
sbb
sub
cmpsb
insl
sub
nop
in
inc
jne,pn
ss
fldenv
pop
sub
dec
ror
dec
xchg
pushf
jl
mov
and
imul
xlat
mov
pop
lods
mov
push
sbb
push
movsl
jl
dec
push
dec
mov
pop
mov
push
pop
fwait
bound
xor
sbb
lock
pop
or
pop
mov
fimuls
mov
pop
or
mov
cmp
lahf
imul
fldcw
dec
jae
jbe
jo
ret
pop
pop
pop
daa
test
push
jle
imul
stos
pushf
dec
bound
mov
das
test
xor
lret
pop
fwait
xorl
mov
cli
idivl
aas
xor
loope
push
add
cmp
je
cmp
jecxz
push
shrl
in
fisttps
lock
sub
jmp
and
test
cmp
mov
aaa
add
xor
popf
mov
or
sub
movsb
loop
inc
lahf
jno
add
cltd
sub
aam
mov
sub
pop
xchg
aam
add
jae
loope
pushf
sub
idivl
outsl
pop
mov
xor
pop
lcall
iret
or
and
mov
test
mov
mov
mov
jns
or
mov
jns
mov
pop
inc
lret
fmul
into
ret
aas
mov
lds
and
dec
das
mov
inc
sbb
shlb
lcall
mov
or
sub
aad
ret
xor
pop
mov
outsb
lods
push
push
pushf
add
ret
push
inc
pop
sbb
xchg
in
jle
xchg
pop
shr
adc
aam
int
xchg
mov
mul
xchg
iret
mov
xor
lods
mov
jge
shll
pop
pop
inc
or
push
and
cmpsb
push
or
loopne
cmpsl
hlt
es
aam
pop
sub
pop
sub
lcall
insb
int
sub
stos
lcall
fldenv
pop
and
ror
hlt
pop
mov
cli
or
iret
jne
lcall
push
in
mov
xor
adcl
pop
bnd
popa
data16
cld
and
std
and
mov
inc
jmp
sub
movsl
pop
popa
xlat
push
cmove
bound
mov
ja
jmp
pop
jle
inc
mov
test
xchg
mov
jecxz
jbe
inc
fucomi
inc
mov
adc
sbb
enter
pop
and
pop
jno
cwtl
pop
ret
sbb
mov
stos
push
shlb
dec
pop
cmp
fdivrs
test
dec
fmuls
out
mov
test
pop
test
cmpsb
fs
jg
sbb
cmc
cld
mov
lea
jecxz
and
adc
push
mov
mov
div
sti
jmp
js
negl
loopne
test
mov
call
add
mov
xchg
and
sbb
pop
mov
icebp
faddl
lret
jl
fcmovbe
sub
mov
cmc
jbe
mov
cmp
mov
ljmp
cmp
int3
sub
leave
inc
mov
and
out
and
insb
mov
aaa
jle
mov
cmc
into
or
cmpb
pusha
pop
cmpsl
pusha
cmc
jns
inc
les
sub
xchg
mov
fisubrl
in
add
mov
sbb
push
push
sbb
xor
cltd
mov
jecxz
ss
adc
in
pop
call
mov
dec
push
int
popf
and
xchg
mov
mov
and
nop
movsl
mov
daa
or
inc
and
fimull
roll
jmp
push
rcrb
movsl
fs
addr16
shlb
sti
fcmovne
pop
or
lcall
mov
jmp
les
sbb
add
imul
xor
lret
iret
mov
add
out
repnz
in
add
pop
mov
pop
dec
repnz
mov
dec
and
add
sbb
shll
push
shl
es
xchg
xlat
mov
dec
and
mov
movsl
jp
ret
sbb
data16
lds
pop
or
outsl
jge
add
or
icebp
sbb
mov
xchg
mov
loop
popa
dec
jns
lret
cmp
in
dec
mov
dec
adc
cltd
pushf
sub
rcr
pop
test
int
mov
mov
aaa
gs
outsb
test
fwait
test
dec
shrl
and
mov
sarl
fisubs
data16
mov
test
das
pop
mov
jge
ljmp
inc
ds
mov
lds
rolb
jno
and
lret
add
jecxz,pt
adc
popa
aad
cs
enter
std
sub
xchg
jecxz
cmp
pusha
push
inc
jae
pop
mov
sub
mov
loopne
movsb
pusha
or
or
inc
in
lahf
leave
xchg
popa
cmpsb
out
cmc
test
fcomi
mov
enter
fs
test
pop
mov
pop
adc
or
popa
inc
sub
push
sub
bound
push
incb
xchg
jbe
sbb
iret
test
xor
xor
cli
xchg
in
xchg
adc
or
inc
cmp
fldcw
push
inc
mov
dec
cmp
loope
xchg
aas
pop
sub
xor
lahf
push
outsl
jbe
mov
mov
adc
aad
xor
inc
notl
xchg
mov
nop
mov
test
insb
xchg
jo
lcall
aam
popa
fimuls
add
xchg
xlat
push
nop
xor
xchg
int3
or
cmpsl
ret
push
jae
pop
add
fwait
mov
push
popf
and
xor
sub
or
cmpl
scas
imul
mov
push
mov
pop
xor
adc
push
stos
sub
xchg
mov
insb
js
lea
movsb
daa
jb
sbb
cmpsb
lahf
cli
addr16
pop
stos
fisubs
pop
aas
mov
mov
ja
jo
rcll
xor
dec
cltd
rcrb
inc
lds
xchg
repnz
inc
into
fdivl
add
pop
sti
push
or
pop
lods
call
pop
pop
jb
out
mov
sbb
int
mov
push
lahf
sub
iret
xchg
movsb
mov
push
adc
cmp
aam
sbb
test
adc
xor
mov
push
jns
repnz
add
cmp
push
jae,pn
shlb
and
xchg
xchg
scas
stc
lods
pop
movsl
mov
xchg
loopne
sbb
mov
test
adc
add
enter
mov
daa
mov
insb
cmpsl
fstpl
pushl
stos
sbb
inc
jg
imul
imulb
dec
stc
mov
lods
andb
addr16
dec
arpl
or
mov
jp
jmp
ljmp
push
adc
rcll
push
out
mov
mov
dec
push
or
aam
pop
out
jl
xor
push
loopne
jge
sarl
fdivrs
mov
jno
js
jg
push
in
in
mov
shrl
stc
outsl
popa
pop
xor
ss
addr16
lods
cvtps2pd
mov
imul
adc
ret
mov
xor
jp
imul
dec
xlat
and
sub
sar
test
movsb
inc
imul
imul
into
imul
jp
mov
adcl
push
scas
int3
imul
mov
dec
add
int3
mov
or
jnp
sbb
mov
stos
xor
shrb
jb
ret
leave
push
pop
out
xchg
outsb
clc
adc
dec
push
mov
ja
test
cld
inc
aam
mov
shlb
add
std
inc
out
sahf
loope
inc
lods
jg
lahf
shrb
adc
inc
push
xor
jo
add
push
jcxz
sbb
rcrb
jae
cmp
push
rol
sub
sub
sbb
cmpl
push
mov
stos
inc
dec
xchg
mov
xchg
dec
ret
jnp
and
test
pusha
stc
push
test
fsubrl
sbb
xchg
movsb
xlat
push
dec
scas
int
pushf
xor
adc
orps
jmp
xorb
lods
inc
fs
pusha
lret
adc
movsl
xchg
xor
add
ror
mov
icebp
mov
pop
lock
push
cmp
into
lea
xchg
js
pop
push
arpl
lods
out
xor
lea
std
or
aam
push
or
test
pop
cltd
ret
mov
xorb
imul
dec
push
mov
outsb
stos
les
push
lcall
lds
xchg
push
ds
mov
bound
add
test
mov
test
or
ret
dec
push
push
aad
mov
mov
xchg
outsb
mov
add
fadds
fmulp
push
sti
lea
and
mov
mov
insl
mov
outsb
push
sub
inc
mov
dec
mov
push
xchg
sbb
fbstp
test
lcall
fsubrl
adc
mov
shrb
xor
inc
add
xchg
inc
push
out
adc
cmp
xchg
lret
jecxz
inc
mov
lds
ret
and
push
mov
into
sub
lret
jne
nop
xor
jecxz
outsl
in
push
xchg
nop
pushf
sbb
jbe
xchg
iret
mov
in
adc
mov
cmp
es
aas
loope
jp
test
int
gs
test
push
enter
push
mov
dec
ret
scas
hlt
mov
cmp
test
dec
call
hlt
out
in
les
inc
call
leave
adc
les
das
adc
cmp
lods
jmp
pop
push
push
sbb
cli
xchg
dec
push
pop
sub
decl
lret
clc
aas
xchg
fcmove
push
test
lods
sbb
sub
pop
mov
jo
pop
cmp
pop
push
mov
mov
mov
testl
js
cmp
outsb
scas
dec
loope
pop
addr16
mov
mov
ret
mov
fistps
movsb
dec
outsb
mov
bound
sbb
or
and
push
lods
rorl
ss
jne
fwait
sarl
jb
mov
add
jns
cld
test
sbb
jb
add
mov
mov
xchg
inc
insb
js
jge
push
add
xor
sti
cli
and
pop
cmc
roll
push
subl
mov
loopne
mov
int
dec
xchg
shl
add
movsb
inc
dec
or
repnz
and
lret
jae
mov
jmp
pop
scas
lahf
stos
aam
adc
jg
dec
or
mov
mov
test
jle
mov
xor
inc
xchg
shrl
addb
jge
or
fsubrl
in
mov
push
clc
sub
jo
pop
clc
xchg
add
insl
fbstp
add
mov
fcmovb
loopne
push
xlat
jmp
cmp
cmp
mov
xlat
lods
int
mov
pop
inc
push
fisubrl
mov
lods
mov
repnz
mov
inc
pop
bound
add
leave
testl
aad
or
and
xchg
int
icebp
sbb
imul
fdivr
stos
icebp
jb
in
push
jno
mov
mov
rol
cli
push
xchg
imul
popf
cmp
movsb
pop
and
flds
ds
or
hlt
mov
sub
mov
ret
inc
mov
mov
out
cmp
xchg
mov
xor
test
cli
pop
jp
jns
fildl
js
sbb
jecxz
adc
outsl
mov
pop
inc
push
sub
mov
push
jnp
inc
xchg
lcall
cli
and
and
mov
xor
fldl
pop
dec
mov
adc
sub
sub
jbe
sbb
push
fnstsw
fiaddl
sarl
rcrb
cwtl
arpl
fcoms
ja
sti
ret
or
das
xchg
mov
cmc
xor
adc
cmp
mov
or
sar
push
dec
sar
std
scas
pop
cmp
mov
mov
popl
cmpsb
movsl
inc
mov
mov
cld
jl
jnp
repz
outsb
adc
adc
sti
mov
push
jg
jae
add
mov
pop
mov
mov
sbbb
cs
dec
jo
xor
gs
and
aam
fnsave
pop
fcmovbe
inc
dec
sub
sub
jnp
xchg
add
jb
out
lods
adc
inc
cmp
fistps
addr16
rol
and
cwtl
xchg
rorl
cmp
ret
add
dec
cmp
into
mov
cmpsb
mov
inc
stos
repz
pop
enter
ja
and
adc
xchg
test
mov
jb
jmp
inc
jns
clc
lds
hlt
mov
lock
stos
inc
inc
pop
push
in
jp
mov
sub
adc
lret
dec
ficoms
leave
inc
jp
and
sub
mov
pushf
mov
pop
mov
ret
stos
mov
mov
adc
inc
inc
dec
cmp
lahf
mov
pushf
sub
lock
shlb
sub
cmpsl
jns
out
out
mov
adc
pusha
jae
cwtl
cmp
inc
movsl
or
bound
pop
int3
stc
and
sub
or
sub
push
cli
insl
rcll
subl
popf
pusha
hlt
or
and
mov
aam
test
dec
jmp
cmp
mov
pop
push
jbe
lods
jl
test
pop
popf
push
pop
xchg
lods
lahf
out
sub
sub
fwait
push
icebp
jecxz
gs
sbb
in
inc
add
mov
mov
xchg
add
pushf
xlat
jo
mov
dec
test
dec
push
mov
push
leave
or
insl
mov
or
xchg
jle
cmpb
mov
pop
icebp
push
inc
les
fdivl
orb
ja
aas
pop
inc
sub
shr
bound
aaa
lock
pop
push
mov
push
xor
pop
leave
dec
xchg
cmp
or
popa
in
out
jle
enter
cld
mov
es
insb
pop
and
mov
andb
adc
fidivrs
icebp
das
rclb
xor
enter
jbe
addr16
and
cmp
mov
lret
call
or
xor
cmc
sub
or
inc
inc
fmull
xchg
mov
das
out
cmc
push
mov
xchg
inc
rcll
subb
test
dec
sub
fsubrp
into
jns
jns
out
jae
std
jl
sub
loopne
adc
adc
aas
in
lea
int
pop
js
pop
sahf
test
das
mov
xor
in
ljmp
adc
sub
pop
std
outsl
inc
adc
test
fnstenv
xchg
aad
outsb
xchg
in
idivl
lret
lcall
sub
icebp
mov
cmc
imul
cli
push
popf
and
mov
ljmp
sub
popa
lahf
cs
dec
mov
push
mov
or
call
fs
subl
mulb
je,pn
icebp
push
scas
aad
movsl
stos
enter
cmp
fimull
bound
and
lea
sub
jge
fcmovu
daa
repnz
stc
pop
cmc
push
aam
in
cli
pushf
sti
pop
pop
and
call
fdivrp
and
mov
loope
fsubrl
push
stos
jne
iret
pop
mov
cmpsb
add
in
subb
cmp
insl
xor
aas
fisubrl
xchg
lds
mulb
mov
and
inc
test
not
push
inc
cmp
cld
pop
jb
cmpsl
xchg
arpl
jo
mov
filds
arpl
jmp
in
shlb
lock
jne
neg
or
cmc
scas
out
movsb
pop
sbb
or
clc
dec
ss
xor
cmp
adc
cmpb
ds
and
loop
cmp
lretw
ja
xchg
push
pop
fbstp
cwtl
rolb
pop
arpl
lret
add
and
xlat
dec
xchg
add
adc
out
mov
out
push
fdivp
idivl
pop
divl
sbb
sarl
insl
test
repz
sub
mov
incl
ret
jmp
mov
jno
dec
xchg
mov
or
flds
pop
mov
or
or
jmp
es
dec
inc
and
xchg
icebp
pusha
xchg
pop
stos
adc
outsl
loop
mov
inc
in
orb
inc
push
inc
jne
imul
cmpsb
mov
in
sub
mov
mov
enter
aam
cld
xor
adc
pop
sbb
sub
mov
push
in
sub
aad
jecxz
lahf
mov
mov
ljmp
add
jp
inc
movsl
sbb
sbb
inc
std
loop
into
ss
jmp
fstp
add
push
mov
pop
outsb
pop
inc
mov
clc
sbb
jbe
or
test
mov
sbb
cltd
mov
int3
movq
jb
aam
popa
scas
out
in
outsl
add
xor
lahf
push
lret
dec
jmp
mov
mov
push
mov
push
mov
test
insl
push
das
or
mov
mov
mov
or
jb
xchg
sub
jae
into
and
xchg
mov
fwait
mov
mov
aad
bswap
mov
xchg
xchg
or
lock
mov
movsl
pop
xchg
jge
fiaddl
icebp
lcall
cmp
push
nop
dec
out
xchg
loope
div
dec
pop
xchg
dec
rorl
or
cli
and
add
xchg
sub
test
pushf
add
xor
sbb
ja
roll
in
or
dec
jne
fwait
in
aam
repz
mov
xchg
push
xchg
dec
leave
gs
leave
adc
jmp
sti
cmc
jecxz
sahf
push
cld
out
mov
jg
mov
pop
mov
cltd
frstor
insl
arpl
imul
inc
xchg
jae
scas
jg
mov
cmp
sbb
sub
rcll
mov
sbb
adc
nop
cmpsl
lea
mov
sub
adc
popa
or
jo
pop
adc
add
fisubl
sarl
jns
mov
push
mov
sti
mov
sbbb
and
sti
nop
iret
adc
rcrl
sbb
enter
les
jmp
dec
test
pop
cltd
addb
and
in
in
sub
add
jae
dec
rclb
mov
adc
adc
cmp
mov
or
repz
imul
sbb
xor
cld
scas
cwtl
adc
fldcw
xchg
cmp
add
psubw
inc
imul
mov
jnp
xchg
sbbl
int
sub
and
adc
push
jl
fsts
cmp
mov
stos
subl
cmp
dec
cmp
daa
jp
bound
xor
aam
ss
fs
pushf
xchg
mov
test
or
pop
lods
cmp
or
xor
test
fimuls
in
push
pop
leave
fcmovb
or
push
dec
mov
leave
daa
dec
cmp
xchg
mov
je
inc
testl
orb
call
test
data16
popf
xchg
lret
push
push
loope
adc
inc
mov
adc
or
or
lret
push
test
sbb
adc
cwtl
push
cmp
xchg
loopew
mov
add
repnz
push
jbe
sbb
cmp
dec
loop
mov
dec
call
loop
shrb
sbb
jbe
ud0
pusha
xchg
xchg
jmp
sbb
or
lods
fwait
ret
sbb
mov
mov
repz
out
sbbb
dec
jle
pop
in
test
cmp
cli
ret
or
push
in
dec
dec
xchg
out
aad
mov
gs
daa
lcall
lahf
sub
scas
jb
sti
inc
pusha
or
push
inc
sub
sub
push
les
dec
push
popa
jns
aam
pop
inc
fsin
call
lahf
xchg
rcll
andb
xor
xchg
mov
jo
inc
or
cmp
mov
xlat
adc
push
mov
repnz
sub
aad
cltd
stos
outsl
mov
or
xor
scas
iret
jne
loope
ror
leave
pop
cs
test
mov
lret
mov
dec
ds
jnp
nop
mov
adc
in
test
rcll
cltd
dec
cmp
xchg
cmp
pop
mov
xchg
mov
ja
push
pop
mulb
mov
loop
xchg
pusha
or
insb
divb
sbb
jl
int
mov
daa
int3
xchg
popf
es
ror
add
inc
mov
cwtl
fiadds
mov
xor
pop
cwtl
incl
push
cmp
outsl
mov
or
inc
test
jp
sbb
idiv
int
mov
lahf
cmp
mov
into
je
push
and
xchg
mov
in
mov
jge
nop
lahf
imul
mov
sbb
arpl
fistps
insl
dec
filds
arpl
and
ret
add
xor
push
ret
test
xor
hlt
dec
loopne
cwtl
jp
outsl
inc
in
dec
lea
and
in
cs
inc
lods
mov
dec
test
icebp
cmp
or
mov
orl
popf
int3
or
push
cwtl
sahf
scas
and
jl
jg
outsb
arpl
inc
mov
in
pop
andb
xchg
nop
test
in
in
subb
or
dec
mov
dec
cmpsb
scas
xchg
add
das
ret
mov
pop
lret
fidivrs
lret
add
daa
idivb
cli
jg
xchg
jae
adc
popa
cltd
pop
xor
out
mov
adc
in
insl
outsb
xchg
iret
sarl
adc
jb
stos
pop
iret
mulb
daa
js
jnp
xor
push
shrb
lds
mov
jnp
jb
pop
and
addr16
sbb
cmp
jg
ret
pop
scas
rolb
dec
xchg
lea
shrl
cmp
xor
cmp
or
xor
mov
inc
push
mov
leave
push
or
adc
xchg
xchg
mov
push
fcmovb
aad
ficomps
lods
loop
cwtl
mov
lods
jae
das
or
mov
flds
in
pop
lock
lds
std
sti
subl
rcll
add
cmp
fwait
dec
out
sti
pop
leave
push
xchg
xchg
arpl
cmp
call
mov
mov
add
outsl
jne
sti
push
mov
mov
enter
shl
mov
and
xchg
xchg
mov
rcl
jbe
or
pop
inc
fidivrl
inc
xchg
mov
mov
mov
jbe
jae
jmp
gs
out
sbb
pop
or
add
fs
lahf
aas
push
stos
xor
mov
cmpsb
cmc
dec
mov
push
jno
push
je
pop
int
inc
loope
push
mov
mov
inc
aaa
jl
push
test
popf
imul
jmp
mov
jno
negl
jo
out
mov
out
cmpl
pop
add
pop
fdivrl
sub
and
out
sub
sub
push
pop
mov
jl
adc
jecxz
xchg
sub
dec
lods
test
inc
xchg
ljmp
xchg
shlb
push
test
fists
je
out
test
test
push
aaa
shlb
dec
rorl
mov
jl
pop
jns
fxch
int3
in
mov
cwtl
push
adc
mov
mov
ret
xchg
sbb
sar
or
lcall
xchg
inc
dec
lret
sbb
mov
addl
imul
inc
das
rorl
cltd
or
xchg
cmp
bound
and
mov
mov
adc
xchg
inc
mov
ljmp
movsl
fdivr
clc
add
dec
add
inc
jb
leave
stos
lea
popa
push
jns
add
push
aas
lods
xor
icebp
push
out
add
or
push
push
daa
mov
fwait
lret
dec
adc
mov
insb
lods
leave
mov
shrl
mov
cmpl
mov
lret
loopne
sbb
mov
sub
mov
and
push
lock
lods
fst
mov
addr16
popa
xor
fistps
and
mov
xor
roll
jno
stos
shrb
xchg
cmp
push
xchg
fistps
xlat
shrb
sbb
mov
call
inc
sbb
sbb
fs
subb
inc
pop
fisubrl
fimuls
int3
in
loopne
pop
adc
cmpsb
adc
jb
ds
movsl
fs
in
call
lods
pop
rorl
mov
fsubrs
sti
cmc
repz
cld
divl
addb
aaa
fs
adc
xor
adc
dec
mov
mov
cs
loopne
xchg
dec
cwtl
std
xor
stos
jne
cmp
jne
xchg
xor
adc
enter
loopne
mov
cmp
hlt
xlat
movsl
nop
scas
cmp
je
daa
std
and
and
jge
jb
aaa
mov
mov
sub
push
xlat
mov
xchg
push
pusha
and
shrl
cmpl
mov
insl
push
imul
lcall
and
cmp
notb
and
rolb
xchg
fsts
ds
or
mov
or
sarl
hlt
jle
push
jmp
mov
push
rcrl
dec
xor
cmpsb
mov
mov
sbb
sbb
push
arpl
or
pop
cmc
mov
cld
test
pusha
mov
mov
pop
push
mov
jno
sbb
jge
enter
fistps
fs
jno
mov
mov
xor
sbb
lea
aaa
sbb
test
pop
jae
inc
jle
push
loopne
xchg
mov
mov
sub
insl
je
xchg
add
mov
xor
push
jne
scas
xchg
mov
and
in
scas
shlb
int3
mov
std
xchg
dec
push
inc
or
push
loopne
xchg
dec
rcr
mov
cmc
mov
push
jno
cmp
xchg
mov
cmp
dec
popf
mov
mov
xor
xchg
mov
loopne
inc
les
fidivl
adc
popf
divl
lret
loop
test
lahf
jmp
scas
int
mov
and
and
push
cli
dec
jg
mov
xlat
adc
daa
lea
sub
out
pop
aam
add
mov
cwtl
pop
sbb
fucomp
adc
push
pop
inc
out
push
imull
in
inc
cmpsl
movsb
je
mov
jl
dec
inc
lods
xorb
fidivrs
sub
push
sbb
sti
cmpsl
adc
gs
jnp
jbe
xchg
js
es
mov
xor
jecxz
lods
sbb
ljmp
repnz
mov
les
xor
mov
movsb
test
fstpl
scas
xchg
pop
xchg
dec
jns
call
out
bound
test
cmp
cmp
push
or
lock
mov
out
xchg
fdivl
jge
jl
pop
adc
jno
insl
shr
imul
jne
fdivrp
ds
lahf
jmp
fcoms
popa
jmp
lea
in
out
out
push
cld
sbb
add
in
push
cmpsl
jle
mov
jge
adc
or
imulb
movl
and
and
cli
sub
hlt
push
mov
test
lods
adc
add
lods
mov
adc
lahf
lret
pop
inc
and
cmp
dec
stc
push
and
aad
in
dec
int3
and
sbb
push
out
inc
movsb
mov
jae
es
push
inc
mov
mov
or
popa
cltd
inc
shll
repz
sub
add
pusha
scas
loop
xchg
adc
pop
insl
rcrb
imul
pop
lods
push
pop
push
jo
fmull
aad
lahf
pop
sub
mov
pop
lret
out
dec
mov
push
stc
push
jae
out
movsb
out
add
in
push
fs
xchg
je
leave
lcall
jns
test
cmpb
loopne
jb
mov
xor
cli
mov
mov
jl
std
push
mov
fldcw
fs
fcoml
mov
mov
cmp
mov
sub
dec
pop
flds
or
fnsave
sub
icebp
inc
bound
pop
jmp
fcom
push
pop
fidivl
test
adc
rorb
inc
mov
sbb
cli
popa
jp
mov
call
test
cmpsb
lcall
fsubs
loopne
mov
push
xchg
cmc
pop
jno
jne
icebp
sbb
btc
mov
gs
ret
popa
sbb
fistpll
mov
pop
mov
fistl
sbb
sub
fndisi(8087
popf
loopne
mov
inc
sahf
add
hlt
cmp
sarl
scas
mov
cmpsl
arpl
mov
dec
into
dec
mov
adc
cmpsb
repnz
popf
loope
and
inc
sbb
or
sahf
mov
xchg
mov
sbb
jne
inc
nop
push
pushf
add
xor
hlt
adc
and
fistps
idivb
and
pop
sbb
lret
std
aam
jb
cmp
sti
xchg
call
xchg
loopne
imul
mov
and
mov
pushf
xchg
xlat
push
bound
es
rcl
cmpsb
and
mov
mov
sub
cmp
inc
xlat
out
cmp
jmp
lret
and
pop
pop
mov
cmp
mov
loope
cltd
mov
sub
and
jg
icebp
push
mov
mov
dec
jl
cmc
les
mov
test
jno
push
xchg
add
lock
inc
cld
push
add
mov
cmc
lods
sti
sbb
sub
and
arpl
negb
mov
mov
mov
rol
pop
mov
mov
sub
out
and
hlt
xchg
sbb
push
fwait
test
mov
les
xchg
jp
scas
scas
cmp
mov
xchg
test
sbb
hlt
pop
push
and
mov
or
arpl
inc
mov
jge
sbb
incl
mov
pop
sbb
notb
jecxz
lods
xchg
jl
pop
popa
pop
xor
jle
sub
cwtl
add
leave
mov
lods
inc
jmp
sahf
mov
sub
in
push
aaa
xchg
add
pop
jge
push
imul
sti
jno
ret
ljmp
mov
lret
sbb
pop
mov
dec
xchg
lret
adc
je
out
unpcklps
jbe
pop
dec
stc
dec
xor
sarl
sahf
addr16
pop
push
ljmp
pop
lcall
lods
test
fmuls
mov
dec
push
out
xchg
sti
mov
inc
jle
dec
out
xor
iret
in
xor
outsl
lahf
dec
inc
xchg
popa
andl
sub
cmp
outsb
cld
daa
xchg
sub
pop
xchg
push
mov
and
jb
cmp
fmuls
orb
pop
incl
out
push
call
xor
mov
fcompl
push
xchg
ja
mov
test
cmp
sbb
xchg
outsb
repz
inc
aad
leave
in
popa
lret
test
jg
pop
inc
xor
sub
push
xchg
cld
adc
and
sbb
stos
ss
mov
jmp
imul
inc
push
jbe,pn
aad
fisttps
add
adc
pop
xchg
lds
cmp
sti
bound
add
scas
jge
fs
shrb
pop
out
cmp
and
adc
push
adc
aaa
dec
shrl
movsb
pop
mov
out
mov
int3
in
shrb
xor
fs
xor
and
sbb
xchg
orl
mov
adc
push
jo
push
test
pop
popa
fdivl
pop
push
adc
scas
nop
mov
leave
faddl
sub
test
fxch
loope
xchg
fs
std
sub
push
cltd
imul
outsl
sub
mov
repz
dec
loop
sbb
out
ss
fisubrs
loop
aam
mov
mov
xchg
fsubl
jns
scas
arpl
aaa
in
es
xor
popa
push
cs
xchg
dec
jo
out
rorl
out
add
incl
jge
insb
in
popa
in
stc
mov
jle
jae
adc
cld
cmc
and
xlat
xchg
dec
flds
aam
imul
xor
xchg
push
out
iret
pop
push
jne
dec
insb
and
outsl
xor
dec
aad
push
mov
hlt
nop
inc
cli
mov
fisttps
stos
push
pop
inc
pop
or
cwtl
xchg
sbb
inc
cmpsl
and
jmp
mov
arpl
sbb
ds
xor
fdivs
cmpb
sahf
bound
cmp
fstps
movsb
xchg
std
test
sti
push
pop
movsl
les
imul
cltd
test
sub
xchg
dec
cmpsl
inc
in
je
inc
adc
dec
jecxz
cmp
lods
xor
cwtl
xor
mov
hlt
gs
push
dec
push
ljmp
stc
mov
mov
gs
clc
and
add
lret
outsb
pop
or
loopw
jge
je
icebp
cmp
inc
mov
cmp
outsb
cmp
loop
mov
pop
movsb
push
mov
add
add
add
adc
cmc
decb
inc
adc
mov
mov
push
and
mov
icebp
pusha
popf
mov
dec
cwtl
orl
jp
lcall
test
sub
push
je
sub
iret
pop
ja
mov
call
mov
jae
mov
mov
jo
js
js
mov
icebp
lret
cmp
test
dec
adc
and
xchg
leave
and
loopne
adc
mov
fidivl
adc
cmpb
call
push
psllw
ljmp
sub
sbb
hlt
push
aad
ss
fmuls
xchg
jbe
xor
cmp
cmp
sub
and
mov
dec
sbb
add
or
cmpsl
iret
mov
cmp
nop
in
testl
dec
adc
mov
dec
std
xor
rorl
xlat
pusha
mov
jp
fs
aas
sti
nop
cmp
iret
popa
adc
sbb
jno
xchg
xchg
outsl
and
int3
rorl
pop
dec
mov
jb
jnp
fmuls
cmp
xchg
mov
aad
jne
pop
lahf
lret
fdivrl
dec
in
sub
sbb
nop
lods
bound
sbbl
jbe
andl
mov
jp
xchg
es
jge
mov
jno
ja
inc
sub
sbbl
rolb
inc
hlt
shl
lods
lods
pusha
cmpsl
mov
popa
incb
adc
xchg
add
xchg
lcall
xchg
mov
add
push
in
inc
shrb
adc
push
sti
fwait
or
shl
or
mov
jnp
push
lea
xchg
adcb
or
pop
insb
sub
mov
jecxz
shlb
rcrb
mov
mov
push
push
mov
fnstcw
in
mov
sbb
gs
loopne
mov
dec
subl
stc
pop
roll
pop
movsl
sbb
ljmp
lret
push
or
inc
adc
cs
push
cs
or
adcl
int
dec
sub
ret
pop
fisttpll
adc
jge
pushf
pop
pop
lret
adc
in
sub
pand
lods
or
inc
ss
cmp
lods
mov
call
add
push
inc
call
cmp
ljmp
scas
push
jno
popf
xchg
ljmp
in
jno
outsb
dec
ljmp
loop
xchg
sahf
in
add
sbb
adc
or
push
lea
push
mov
add
push
or
mov
ljmp
push
cmp
mov
bound
data16
enter
mov
mov
mov
std
jb
sub
jb
xor
incl
jnp
adc
xchg
pop
enter
mov
jmp
xchg
fimull
outsb
add
movsl
add
rolb
sti
cmpb
push
out
testl
pushf
jbe
cmpsb
cwtl
mov
sub
xor
fsubp
push
adc
imul
pop
hlt
call
xchg
out
mov
in
cli
adc
push
inc
mov
mov
sub
sbb
adc
outsb
inc
sar
js,pt
les
faddp
test
jle
sub
push
movsl
mov
push
sti
call
sbb
adc
movd
jae
movsb
std
ljmp
xchg
mov
add
dec
mov
sbb
gs
sbb
in
lret
adc
bound
rol
popa
mov
xor
leave
jo
dec
inc
sbb
ret
or
inc
sahf
icebp
pop
mov
mov
rcrl
shll
sbb
and
and
add
lret
out
push
lret
mov
lret
je
xor
cmpsb
hlt
inc
ljmp
shlb
rolb
or
sbb
jne
js
pop
or
mov
sub
cmpsl
out
dec
testb
mov
addr16
xchg
imul
shl
arpl
mov
mov
jae
ret
or
pop
inc
mov
idiv
out
xor
xchg
cli
das
mov
pop
outsb
out
into
inc
clc
sbb
sbb
inc
jbe
movsb
hlt
pop
xchg
les
test
push
adc
push
test
ficoms
pushf
imul
addl
test
xchg
jle
in
std
outsb
movsl
mov
and
inc
dec
paddusw
pop
cmpsb
jle
cmp
int3
xor
lret
jp
sbbb
test
scas
cld
sub
dec
xor
push
push
pop
arpl
popf
add
adc
repnz
test
je
mov
lods
dec
pop
mov
in
jp
lcall
sbb
cwtl
cmp
ror
aam
xor
fldenv
outsb
sbb
xchg
flds
adc
xchg
fnstcw
rcrl
pushf
mov
popa
mov
inc
hlt
fidivs
cltd
in
push
pop
mov
vpmulhw
ret
lods
les
jb
outsl
sbb
test
orl
push
cs
dec
inc
pop
and
push
ret
cld
dec
gs
cwtl
dec
dec
dec
mov
out
add
sbb
mov
test
leave
or
jmp
lret
mov
aaa
subb
lods
and
je
std
jl
jecxz
js
pushl
or
stos
stos
stos
sub
add
into
or
inc
pop
rcll
movsl
les
cli
shl
adc
mov
and
dec
sub
xor
pop
out
push
int
adc
sub
jo
clc
dec
lock
imull
sbb
cmp
jp
sub
xlat
fbld
add
mov
dec
jns
notl
cmp
sbb
icebp
inc
sub
cmc
pop
imul
mov
into
int3
jbe
push
cmp
ss
mov
add
shll
sub
in
in
fwait
std
insl
mov
aaa
dec
jle
cmc
add
rclb
fwait
pop
dec
inc
dec
hlt
cmp
pop
pushf
cmc
std
out
lds
pusha
aad
sbb
div
out
aad
add
mov
jb
jecxz
push
subb
inc
out
mov
add
mov
dec
je
fcmovu
xor
lahf
repnz
fwait
push
pop
outsb
pop
push
imul
sub
fisttps
rcrl
mov
test
jnp
sbb
xchg
mov
in
jg
bnd
jg
add
sub
dec
pop
and
xchg
popa
and
in
xchg
mov
mov
mov
xor
stos
or
xchg
rcrb
call
mov
mov
iret
add
test
fisttpl
mov
mov
jmp
cmpsl
mov
adc
pop
xchg
xor
ret
inc
es
iret
mov
and
sub
iret
cwtl
pushf
popa
icebp
add
jecxz,pt
fstps
xchg
jp
pop
jnp
and
inc
into
outsb
inc
jae
testb
pop
add
xchg
aaa
sub
insl
and
rclb
xor
jmp
jl
cmpsb
in
or
pop
add
push
std
or
roll
rolb
cmc
mov
and
pop
jmp
loope
sub
jecxz
shrb
insl
call
ds
mov
xor
and
xchg
mov
leave
filds
add
jne
mov
pusha
inc
in
sahf
aam
iret
outsl
mov
mov
mov
fildl
or
mov
sub
divb
xor
mov
xchg
xchg
sub
sub
pop
jmp
xchg
mov
jae
cmp
gs
or
inc
aaa
pop
xor
pusha
xor
inc
in
jle
xlat
dec
popa
andl
dec
fwait
and
aas
push
lret
mov
mov
int3
mov
repnz
shlb
xor
scas
dec
mov
aaa
flds
sub
sub
xchg
push
leave
orl
clc
xchg
or
or
dec
outsb
cmp
sbb
jge
loop
push
cmp
stos
icebp
mov
in
add
ja
adc
xor
mov
mov
push
push
mov
fsts
mov
xchg
dec
and
loope
call
imul
add
cmpsl
in
adc
jecxz
dec
xlat
pop
shlb
cwtl
dec
cmp
cmp
pop
out
xchg
fwait
aam
outsl
stc
pop
adc
xchg
hlt
cmp
jae
andl
mov
hlt
shrl
sub
xor
stos
ffree
add
addr16
pop
xlat
xor
jmp
mov
mov
inc
xchg
aaa
insb
or
inc
cmp
decl
in
inc
inc
mov
mov
shl
xor
lock
xchg
or
mov
ja
ljmp
mov
sub
inc
adc
pop
rcll
push
adc
lock
xlat
mov
jb
dec
or
inc
add
scas
data16
mov
out
test
dec
mov
addr16
icebp
leave
lods
inc
test
dec
mov
shr
or
add
pop
scas
dec
cli
xlat
sub
xchg
mov
into
fsubrs
lcall
dec
js
cld
stos
nop
push
jp
pop
mov
dec
sahf
cmp
daa
inc
mov
mov
inc
out
and
in
rclb
clc
inc
jp
in
add
into
mov
jecxz
inc
xchg
fs
clc
push
and
dec
mov
push
xchg
sbb
jns
lea
cmpsb
mov
adc
xchg
loope
clc
stc
test
push
mov
les
xchg
or
pcmpeqw
xchg
xchg
arpl
xor
mov
mov
dec
fcomps
mov
in
dec
insl
and
decb
or
lea
dec
int
jmp
and
sbb
mov
cmp
jmp
push
repz
test
imul
push
mov
out
cltd
push
pop
pushf
cmp
loop
lods
pop
mov
test
je
and
mulb
sub
fs
mov
ffree
sar
test
adc
pop
lret
push
jl
test
mov
popl
outsl
shrb
lahf
xchg
xchg
mov
imul
adc
stos
cltd
lock
andb
dec
lods
pop
push
dec
test
add
test
les
fdivs
mov
setb
inc
mov
xor
adcb
movsl
mov
xorb
or
andb
aaa
mov
cmpsl
lcall
adcb
cld
sbb
add
into
xor
fcomps
arpl
push
test
stos
pop
pop
mov
es
pop
xor
inc
push
push
pop
push
cmp
cmp
shrb
pop
and
lock
aad
xchg
jl
daa
mov
lea
mov
xlat
test
push
pop
fdivp
int3
pusha
loop
aaa
push
mov
cmp
insb
lahf
clc
add
or
test
repnz
mov
mov
dec
int
push
pop
loopne
pop
out
cmp
stos
jecxz
ret
inc
je
inc
aad
cmp
and
vhsubpd
sbb
mov
sti
pushf
insb
pop
nop
mov
iret
adc
cmp
mov
push
xor
xchg
jbe
push
push
or
out
out
ss
shr
or
and
sbb
fs
cmc
dec
sbb
cmp
loopne
dec
add
mov
xchg
pusha
dec
jae
jne
icebp
pop
push
xchg
loop
leave
inc
jae
stos
inc
arpl
jmp
aam
or
mov
sbb
adc
push
cmp
movsb
test
dec
mov
dec
jae
jp
sub
subb
xor
movsl
jbe
xchg
pop
mov
sub
xchg
repnz
loope
test
out
outsb
sub
les
movsb
rorl
push
shrl
int3
inc
or
test
or
cli
sbb
push
add
sahf
xor
mov
jmp
negl
jo
ljmp
rol
sbb
lods
aas
fs
insb
scas
push
shll
cs
out
ds
cmp
mov
add
xchg
lds
pop
das
push
int3
xor
arpl
pop
and
mov
jno
xlat
out
loop
push
mov
maskmovq
divl
fadds
pop
stos
or
and
popa
int3
scas
sub
decb
enter
inc
dec
jmp
frstor
jecxz
iret
and
cli
xor
sahf
jecxz
lcall
int3
cmp
cpuid
lret
stc
xchg
dec
pushl
xchg
xchg
xchg
pop
loope
mov
mov
mov
mov
int
cmpsl
xchg
loope
rorl
dec
cmp
jnp
addb
mov
push
out
arpl
enter
icebp
ja
fmul
pop
push
mov
fidivs
orl
stos
lods
movsb
dec
push
sbb
adcl
lds
test
into
xor
mov
pop
jle
adc
push
lods
push
mov
xlat
clc
mov
cli
fucomi
mov
mov
push
cmp
bound
push
xor
popa
sub
xor
fsincos
xor
xchg
cld
ljmp
test
loopne
mov
inc
mov
cs
xchg
ret
adcl
dec
gs
in
cmp
cli
xchg
or
inc
sar
and
adc
into
stc
jae
fucom
mov
popa
pushf
out
push
mov
sbb
mov
jg
sbb
ss
cltd
ja
inc
imul
daa
fdivr
ret
lds
repz
jns
mov
adc
jl
mov
and
sub
jmp
rorl
lock
dec
sbbb
dec
xor
aaa
pop
push
jle
inc
add
push
or
jo
test
gs
add
cmp
mov
cwtl
cmp
or
cmp
jo
push
int3
xchg
mov
mov
int
mov
das
jmp
pusha
rol
adc
push
sub
daa
cmp
add
inc
stos
lods
out
mov
inc
jbe
fprem1
fiaddl
or
inc
stos
das
xchg
dec
mov
aaa
insl
sub
sub
imul
pop
pushl
adc
sbb
push
sbb
rorl
mov
adc
pop
int3
jne
notl
add
mov
lods
mov
jmp
hlt
insl
mov
sub
popa
jne
jmp
fwait
icebp
mov
jl
or
pop
adc
addl
loopne
popa
sbb
dec
or
addr16
push
pop
pop
jno
sub
call
int3
jno
lret
dec
push
lock
testl
push
mov
push
sub
test
hlt
xor
pop
mov
lock
stc
test
dec
xchg
out
out
push
jge
push
fldt
push
iret
call
pop
out
pop
mov
ss
jmp
sbbb
jmp
push
xchg
repnz
inc
jns
sbb
lahf
adc
sub
movb
lret
stc
jg
sahf
xor
popf
jne
popa
imull
in
out
movsb
push
inc
sbb
inc
inc
shlb
shll
dec
mov
sarb
out
es
nop
jmp
stos
adc
aam
sbb
push
push
lea
pop
insb
fsts
fdivrs
cltd
dec
rep
cmp
fyl2xp1
push
xor
aas
add
lcall
push
lahf
cmpsl
movsl
shl
fs
xor
mov
test
or
jle
mov
mov
xchg
mov
sarb
sbb
pushf
lods
mov
icebp
dec
int
les
fs
adc
mov
stos
fisubl
gs
sub
cmp
imul
or
das
mov
rolb
jae
dec
and
outsb
xor
fsubr
shlb
sarl
mov
adc
mov
jb
push
mov
les
adc
fisttpl
lods
push
cwtl
add
ljmp
cmp
xor
in
mov
sub
ds
subb
repnz
cmp
fists
jnp
cli
fwait
clc
jge
nop
subl
mov
mov
and
xchg
sub
xchg
jge
or
xorb
pop
in
test
sub
mov
push
mov
cmpsl
idiv
mov
add
cwtl
idivb
data16
test
adc
cs
and
subl
imul
notl
push
push
xchg
adc
mov
mov
icebp
jmp
adc
movsl
dec
sub
fisubrs
push
push
mov
mov
jle
insl
jo
or
mov
push
push
xchg
xor
outsb
sbb
mov
cli
ljmp
stos
mov
or
pusha
pop
mov
repnz
sub
pop
and
mov
repnz
adc
jle
ret
das
xor
xchg
insl
and
imul
push
sub
cmpsl
mov
ljmp
popf
bound
xchg
jnp
jg
dec
ljmp
adc
fwait
mov
cmpsb
cld
addb
jno
rcl
incb
jl
jl
mov
repnz
push
sbb
sub
jbe
addr16
mov
dec
cmp
addr16
aas
lret
xor
test
xorb
jg
loope
ret
icebp
stos
jbe
lods
pop
and
or
mov
lret
loopne
cmc
lods
mov
adcb
movsb
sbb
and
xor
push
mov
inc
jmp
in
out
aad
adc
sub
inc
lahf
scas
cmpsl
ds
mov
mov
add
jle
add
pop
xlat
rclb
ljmp
add
ja
add
mov
arpl
mov
daa
clc
mov
mov
lahf
or
jge
xor
lds
hlt
adc
shl
arpl
inc
add
cwtl
inc
ljmp
mov
ficompl
dec
testl
jl
scas
clc
add
daa
or
push
je
jo
push
cmc
jg
andl
aam
adc
cli
push
pop
add
fldenv
daa
repnz
mov
jns
icebp
mov
ljmp
into
jnp
scas
jge
pop
push
test
cld
add
lea
lcall
mov
scas
fistpl
add
mov
mov
pop
pop
orb
sbbl
cmp
shrb
mov
lahf
sbb
scas
xchg
aaa
dec
adc
js
cmpsb
icebp
lods
sub
and
pop
leave
fdivs
sub
pop
scas
push
mov
xlat
jl
inc
push
jg
xchg
push
sub
ja
das
insl
pop
xchg
jns
sbb
fs
mov
test
scas
push
jecxz
insl
cli
jae
jmp
arpl
dec
repz
jns
jns
sahf
imulb
inc
push
cmp
mov
jbe
sbb
mov
mov
pusha
mov
pop
xor
xchg
movsb
das
dec
insb
jae
xlat
fcmovbe
je
fidivl
push
imul
push
cmpl
rorb
mov
push
sub
add
push
imul
lahf
cmp
sub
outsb
je
dec
or
dec
xchg
in
sbb
pop
cld
pushf
imul
pop
dec
scas
lds
or
and
mov
push
loopne
lods
lea
jmp
push
data16
sbb
pop
leave
push
pushf
lods
sub
pop
mov
nop
inc
hlt
popf
bound
xor
cwtl
mov
or
cmp
add
sahf
xchg
aas
jecxz
cmp
fnstenv
int
mov
test
and
push
push
fistpl
inc
push
mov
imul
xchg
xchg
sbb
js
out
inc
jg
cwtl
sub
jge
rcl
test
and
lret
add
out
jae
inc
mov
xchg
sahf
mov
jns
insl
or
js
lds
pop
into
add
cmp
and
fs
mov
pusha
nop
cmp
cwtl
mov
mov
inc
call
fdivrs
shlb
cmc
sub
orb
jl
fucomi
iret
xlat
cmp
xchg
aas
dec
les
ss
mov
stos
dec
cwtl
icebp
in
and
mov
adc
lret
sub
cmp
fldl
cmp
sarl
sub
iret
push
test
xchg
fcompl
imul
and
in
mov
imul
sbb
fiaddl
add
pop
xlat
and
jp
xchg
add
mov
mov
and
lret
test
jp
xchg
ror
push
xor
lods
sysenter
sbbb
inc
dec
aam
test
jno
pop
enter
in
sub
cwtl
push
sahf
flds
pop
and
repz
sbb
mov
and
test
push
mov
inc
inc
or
mov
mov
aad
mov
incb
pop
inc
pop
sti
pop
push
daa
and
add
dec
jb
mov
dec
xlat
sbbb
lret
dec
int
pushf
rol
mov
mov
dec
pop
lods
addr16
push
xchg
lea
in
dec
fidivrl
adc
ljmp
arpl
jnp
lahf
sahf
xlat
ret
and
sub
outsl
testl
cltd
or
jge
inc
mov
xchg
in
bound
push
pop
lea
dec
out
fists
arpl
cmp
call
xor
stc
cmpsl
andl
jne
stc
pop
cwtl
mov
out
mov
js
or
sub
sub
out
and
inc
pop
aas
pop
cld
pusha
es
inc
mov
dec
sub
push
pop
and
mov
test
cli
xchg
lods
cld
dec
mov
test
stc
shr
mov
push
std
cmp
hlt
test
cltd
jae
test
push
inc
scas
mov
jne
xchg
arpl
sub
add
jae
cmp
ret
and
je
cmp
std
pushl
aas
pop
je
leave
repnz
pushf
inc
xchg
lock
xchg
int3
or
fs
movsb
out
mov
arpl
loope
aad
pop
pop
push
ret
lret
sub
imul
sbb
pop
inc
adc
mov
sbb
sbb
and
test
fwait
cld
push
loope
jecxz
mull
dec
test
mov
lret
or
inc
aas
push
mov
ret
bnd
mov
das
sar
xor
subb
je
push
stos
les
imul
adc
mov
xchg
xchg
pop
out
xchg
in
std
add
xor
fmull
mov
xor
jae
aaa
inc
add
sbb
add
std
leave
xchg
mov
or
pop
sub
dec
jp
cmp
stc
loopne
sbb
push
in
xchg
push
mov
test
dec
sub
and
mov
cmp
mov
movl
movsb
hlt
mov
mov
mov
std
lods
sti
jbe
pop
xchg
push
inc
add
mov
aam
add
push
jno
inc
jae
push
scas
xor
or
hlt
push
je
push
pop
imul
enter
mov
dec
jecxz
xchg
fstpt
mov
lahf
mov
lods
sub
adc
les
je
push
out
inc
aaa
xor
into
pop
repnz
notl
jnp
mov
int3
ja
mov
mov
pop
mov
insl
or
mov
xchg
filds
ljmp
add
in
sbb
or
cmp
decl
xchg
push
or
push
sub
push
je
add
or
mov
fnstcw
mov
dec
cld
adc
aaa
add
aad
sti
mov
or
enter
cmp
fstpl
and
cmp
fidivrs
xorb
sti
test
push
lahf
mov
ja
push
xchg
jl
iret
mov
add
xchg
xchg
or
add
xchg
and
cmpl
xor
jo
movsb
lds
icebp
scas
sbb
jg
ja
lcall
adc
or
fisttpll
clc
test
mov
mov
dec
mov
mov
out
repnz
mov
cmc
cmp
dec
mov
push
cmp
sub
jne
cmp
clc
xchg
testb
out
les
rol
in
push
xor
into
or
xchg
jno
shrb
cmpsl
in
and
outsb
adc
mov
push
and
add
aas
or
xor
roll
xor
cli
popa
sub
ffreep
and
lcall
adc
jno
jne
test
sbb
push
mov
test
xor
ds
dec
jae
call
dec
xlat
adc
sbb
or
int3
clc
pop
notl
outsb
adc
cld
dec
xchg
daa
adc
cmp
jns
ja
movsb
enter
addr16
push
jmp
pop
out
cmp
das
jge
adcb
aaa
mov
sbb
les
pop
dec
add
jb
int
out
stc
xor
jp
push
pushf
mov
pop
ss
xorb
leave
stos
imul
jb
roll
mov
jp
cld
sub
loop
mov
stc
dec
in
add
loope
push
and
inc
jg
sarl
fstps
ss
rorb
jae
ret
sbb
push
dec
pop
dec
test
lods
nop
fistpll
out
repz
or
adc
in
pop
push
cmpsl
shlb
pop
pop
cld
jle
in
pop
imull
icebp
fisubs
mov
gs
jns
pop
das
xchg
loop
mov
test
aad
std
mov
pusha
icebp
stc
xor
jbe
es
jmp
sub
inc
movsb
mov
sbb
adc
call
push
push
js
shl
pop
or
xor
stos
lcall
js
jnp
mov
xchg
fadds
sub
jno
gs
xchg
jne
scas
mov
test
out
sbb
inc
mov
mov
cmp
aam
or
lds
dec
xlat
cmpsl
cs
fdivl
in
jne
jae
push
fsts
jle
rcr
or
inc
lods
push
subb
add
out
sub
sub
fildll
iret
gs
sarl
loopne
mov
fs
int3
adc
sub
dec
repnz
movsl
mov
add
mov
ds
repz
push
rclb
repz
mov
pushf
shlb
popa
add
push
mov
and
mov
getsec
dec
pop
inc
aas
adc
aas
mov
adc
lds
aad
or
andl
xchg
je
mov
mov
dec
sub
subl
dec
ds
adc
inc
cli
mov
fiadds
push
pop
mov
subb
jbe
jp
pop
and
adc
int
jecxz
adc
in
inc
inc
out
add
imul
scas
out
pop
mov
add
adc
mov
cltd
daa
je
ret
addr16
pop
jo
shrb
mov
in
pusha
adc
xchg
pushf
pop
pop
out
aam
aas
pop
iret
aas
pop
fsubr
data16
lds
and
add
cmpsl
mov
mov
cmc
push
lods
dec
xchg
dec
scas
cmp
dec
sbb
addb
movsb
jecxz
mov
je
ja
cmovl
sub
dec
dec
notb
out
notl
fsts
mov
jp
hlt
in
flds
nopl
or
xchg
pop
sbb
cmp
push
in
pop
gs
mov
mov
push
subl
stos
ret
lock
sarb
dec
sbb
xor
cmp
jmp
mov
xor
stos
pop
xor
inc
pusha
imul
inc
out
xlat
mov
mov
dec
popa
mov
jmp
push
pop
adc
rcrb
cli
mov
xchg
sbb
add
push
pop
add
mov
rcrb
sub
inc
rcll
out
cmpsl
aas
in
lcall
lods
lret
fnstenv
xor
mov
xchg
test
adc
ret
mov
je
inc
repnz
xchg
mov
pop
jnp
cmpsl
lock
dec
dec
int
addr16
into
sub
jnp
and
cwtl
repnz
mov
test
cltd
lds
shll
int3
add
pop
iret
or
xchg
out
add
xchg
cs
jge
add
lret
or
mov
adc
sub
push
xor
pop
hlt
out
or
popf
xchg
data16
aad
mov
cwtl
int
lret
mov
xlat
loope
mov
cltd
cltd
outsl
push
xor
sti
arpl
sub
loopne
dec
mov
in
jge
adc
sbb
out
jae
mov
into
add
jge
lcall
cmpsb
mov
inc
mul
stc
mov
and
bound
xchg
negb
jno
xor
fistpll
mov
cs
insb
cmpsb
pop
mov
idivl
cmc
sub
movsb
in
push
popa
mov
out
jg
and
ljmp
ds
repnz
icebp
arpl
push
or
inc
push
xor
sbb
jno
daa
adc
hlt
fmull
sub
gs
cmpsb
pushf
cmp
loopne
repnz
ja
scas
stos
jae
mov
cmc
mov
dec
mov
in
jae
xchg
adcb
loope
movb
fwait
ss
jl
outsb
in
cmc
call
nop
mov
cs
xchg
cmpsl
sarb
imul
jnp
jb
ljmp
cltd
push
inc
cmp
cmpb
stc
pop
cmpsl
mov
sub
xor
pusha
rep
stos
mov
jno
pop
bound
push
test
movsb
fwait
decb
jge
imul
fldl
inc
pop
test
loop
push
es
nop
test
loopne
mov
mov
pop
adc
mov
pusha
leave
mov
push
mov
aaa
jae
mov
and
lahf
dec
mov
mov
leave
mov
in
pop
rcll
notb
jno
mov
pop
fwait
dec
pop
xchg
out
mov
movsb
mov
scas
addr16
rorb
push
cmp
mov
push
fwait
dec
test
add
sbb
lahf
pop
xor
mov
pop
in
xor
cmp
icebp
push
xor
dec
ss
jnp
pop
push
xrelease
mov
mov
xor
sub
outsb
stos
xor
push
lods
xorb
jbe
std
movsl
dec
adc
inc
xor
fsts
dec
test
dec
pop
mov
jmp
std
or
sbb
mov
sbb
fstl
es
and
dec
add
sbb
xlat
sub
bound
xor
push
and
xchg
mov
loope
jmp
xchg
rclb
lea
xor
sahf
xchg
movsl
xor
out
lret
stos
decl
mov
pop
and
inc
cmp
int3
dec
fcoml
scas
pop
aas
adc
jp
stos
sub
push
sbb
lahf
movsl
aam
push
fmuls
sbb
das
inc
pop
and
dec
jle
scas
add
scas
jl
mov
or
sbb
cmp
int3
and
imul
dec
mov
mov
rol
xor
out
dec
and
inc
int3
lahf
adc
jno
das
cmp
mov
dec
and
sub
mov
int
push
xchg
and
xor
mov
fld
xlat
rcrl
mov
int3
mov
cld
rep
cli
iret
dec
fsub
int3
les
and
shrb
sbb
xorl
jne
mov
stos
in
pop
jg
pop
outsb
rclb
and
add
insb
test
pop
pop
lods
pop
mov
sub
lods
xchg
push
lods
dec
mov
outsb
mov
pop
jnp
push
xor
xor
jne
scas
xor
mov
enter
inc
and
pop
pop
sub
stc
out
int3
movsl
mov
fwait
jg
lods
ret
je
jle
push
inc
mov
neg
mov
scas
std
mov
data16
imul
ret
gs
adc
clc
lods
xor
mov
insl
adc
xchg
nop
or
aaa
lret
or
pushf
pop
xor
pop
cmpl
and
cli
imul
pusha
mov
lcall
inc
cli
pop
sbb
hlt
push
cmp
call
sub
dec
xchg
dec
js
add
inc
or
adc
nop
repz
jno
leave
or
push
push
filds
mov
imul
push
xor
insb
cwtl
mov
jg
movsbl
or
aam
dec
mov
in
jne
gs
nop
add
insl
lahf
sbb
cmp
push
lahf
and
mov
mov
sahf
jle
sarb
jo
dec
loop
aaa
shll
rol
mov
add
push
test
mov
test
clc
std
andb
and
dec
mov
xor
test
jge
jge
vpsraw
scas
sub
ret
cli
push
sub
stos
jecxz
clc
das
mov
cwtl
in
int3
xorl
lret
cli
pop
push
cwtl
xchg
jle
gs
push
fs
andl
add
loopne
xchg
faddp
lcall
aam
sbb
cmp
mov
push
jge
fists
imul
push
mov
cmp
push
xchg
add
dec
jmp
lods
test
test
mov
push
int3
inc
ljmp
imul
xchg
cmpsb
or
sub
outsl
jb
iret
les
mov
mov
loop
std
sub
sbb
int3
fwait
push
sarl
add
filds
pop
fdiv
sub
pop
shl
int3
xor
xlat
push
faddl
push
cmp
pop
int3
testl
test
sbb
xchg
pusha
push
test
mov
clc
cs
fimull
ljmp
cld
aad
ret
sbbb
xor
into
or
cmpxchg
cmp
xchg
push
stos
cltd
dec
cmc
cmp
or
mov
lods
pop
jb
out
repz
dec
jle
sub
sarl
mov
pop
in
add
xor
push
dec
adc
lcall
movsb
adc
pushf
jp
dec
out
push
idivl
push
mov
xchg
hlt
adc
pop
dec
jmp
push
cwtl
xchg
fnstsw
inc
dec
cwtl
adc
out
jle
orl
mov
ficompl
daa
inc
push
push
mov
std
jae
push
scas
std
mov
mov
enter
push
pop
push
dec
sti
outsb
enter
lods
fstps
out
sub
lods
add
sub
cmpsl
out
push
in
fwait
scas
push
pushf
out
lret
cmpl
adc
dec
inc
xchg
mov
sub
cli
loopne
and
sahf
sub
repz
push
adc
sbb
scas
test
test
mov
pop
gs
inc
cmp
add
adc
js
ds
iret
jmp
in
and
pusha
pushf
ret
aas
mov
sub
xlat
add
call
sbb
cmp
sbb
hlt
inc
aad
test
aaa
pop
lahf
jecxz
bound
test
adc
jne
add
jae
jb
dec
jge
addr16
divb
cmp
xor
push
or
sarb
sub
adc
push
mov
or
jb
mov
bnd
cmp
adc
and
ljmp
iret
pop
ss
sub
mov
add
sub
call
push
dec
sahf
cld
adc
xchg
out
ja
inc
or
daa
scas
or
jne
push
mov
cmp
add
xchg
stc
sub
xchg
jecxz
sub
dec
fs
jo
in
icebp
add
push
leave
sub
sbb
gs
mov
jp
fiadds
jmp
les
sub
mov
mov
fmulp
mov
mov
mov
inc
je
cld
loopne
out
cmp
inc
mov
mov
mov
pop
lods
mov
jmp
out
ficoms
lcall
sbb
das
popf
adc
xor
dec
adc
popa
mov
sub
dec
fstpt
das
dec
push
fcompl
sbb
sub
add
xor
std
push
gs
push
leave
pusha
adc
or
into
pop
clc
sbbb
daa
mov
jl
scas
xchg
push
outsl
stc
movsl
pop
xchg
and
or
in
int3
test
adc
or
sbb
xchg
loope
add
sbb
mov
mov
mov
sahf
sub
mov
and
jl
inc
and
adc
xor
stc
mov
inc
push
fldcw
add
cmp
xor
sbb
inc
add
jl
cmp
xlat
mov
mov
pop
rcr
push
add
sub
shll
addr16
and
addr16
popf
push
fiadds
sub
fnstcw
push
pop
and
testl
mov
test
mov
mov
or
inc
xchg
jle
mov
mov
push
xchg
ret
out
dec
int3
mov
lea
add
test
and
push
aaa
imul
enter
lea
jg
and
dec
cltd
xchg
sbb
sbb
jge
push
jg
in
mov
jle
int3
jnp
push
adc
cmpsl
and
adc
cltd
add
xchg
aad
ud1
mov
sti
aas
jb
jae
mov
or
je
pop
das
xor
jmp
fistpll
mov
test
mov
shlb
movsl
jmp
mov
push
into
push
cmpsl
inc
ljmp
je
xor
lcall
notb
adc
roll
leave
clc
incb
pop
sti
jl
scas
repnz
push
movsl
xchg
xchg
call
sub
xchg
cltd
xor
and
jmp
cmp
pop
popf
pop
sahf
add
movl
ss
jno
or
adc
iret
pusha
subb
or
mov
push
lret
push
ficoms
cmpsb
push
out
push
imul
outsb
or
out
pop
ja
push
dec
pop
loopne
jno
sbb
cltd
fstpt
clc
mov
mov
sub
shl
cmp
xchg
adc
orb
paddw
test
scas
xchg
push
inc
xor
cmpsb
mov
inc
iret
addl
inc
mov
jle
imul
sub
sahf
xor
jne
leave
cmpsl
mov
lret
jmp
or
mov
push
pushf
data16
imul
pop
or
or
mov
shrl
pop
decl
ss
shll
js
dec
fwait
cwtl
pop
nop
jecxz
xchg
lahf
sub
scas
ja
inc
lock
xor
xlat
es
stos
ljmp
push
sti
rcr
cs
js
jo
andb
and
xor
or
sti
hlt
shrb
jns
pop
push
cmpsb
cltd
outsl
fstpl
iret
test
jmp
lret
mov
leave
inc
aas
jmp
cwtl
add
jecxz
imul
adc
dec
test
lds
iret
rcll
ret
mov
fwait
mov
mov
js
dec
sub
aaa
pop
or
inc
mov
loope
jbe
inc
sub
jg
xchg
imul
mov
in
adc
cmp
std
imul
outsl
hlt
or
jae
xchg
dec
imul
fisubs
scas
inc
nop
or
pop
sbb
scas
mov
rorl
dec
roll
sub
sarl
and
adc
xchg
push
js
push
loop
sub
cmc
jne
sbb
sbb
iret
iret
jmp
push
loopne
dec
mov
clc
sbb
mov
and
push
stos
sub
lahf
mov
test
sbb
ds
xor
es
cs
or
insl
dec
shll
jnp
inc
and
movsl
push
fildll
adc
dec
cli
mov
mov
cmp
in
dec
sub
scas
push
or
mov
test
lds
inc
mov
or
xor
pop
out
dec
sbb
jle
popa
movsb
aas
repz
into
sub
and
int
add
loop
popa
pop
sbb
xor
push
dec
cmc
test
jae
xlat
lea
mov
insb
pop
cmp
clc
and
xchg
rolb
push
dec
sarl
cld
push
and
sahf
and
pusha
mulb
js
rolb
or
cmp
mov
pop
nop
pop
iret
mov
xchg
cmpsl
sub
fstpl
inc
and
imul
push
cmp
arpl
mov
and
mov
mov
sub
addr16
jne
popa
in
ret
mov
addr16
sub
loope
mov
jb
or
nop
push
pop
and
fnstsw
cli
and
pop
pop
sbbb
cltd
sti
dec
and
jmp
aaa
aad
movsl
addr16
or
rep
adc
sbb
push
lods
sub
std
cmp
add
rcll
cmpsl
mov
int3
xor
xor
into
popa
jl
sub
mov
sbb
imul
cmc
out
js
and
sub
loope
sbb
aaa
std
dec
lret
ret
sub
or
or
ret
adc
adc
mov
jmp
mov
adc
inc
outsb
in
sub
or
rcl
stos
fidivs
push
pop
xorb
pushf
mov
fsubs
repnz
or
mov
push
push
pop
mull
mov
or
cmpsl
jmp
aas
data16
and
loopne
push
mov
leave
dec
pop
pcmpeqd
notl
push
push
jb
gs
mov
cwtl
mov
jb
jnp
je
push
push
jl
mov
mov
add
leave
jae
xchg
dec
test
in
mov
lret
mov
cmpsl
cmp
inc
jg
mov
sbb
mov
lock
mov
mov
iret
pusha
lcall
shrb
inc
xchg
xor
xor
dec
movsl
inc
pop
enter
and
das
jle
hlt
pusha
pop
stos
das
das
cwtl
sub
repz
jbe
fiadds
add
es
xchg
push
push
add
adc
fsts
leave
lods
es
cmp
xchg
sti
dec
aas
popa
mov
push
shlb
jnp
popf
jnp
jg
cmp
ljmp
sub
bound
and
push
fsubrl
ss
movl
push
in
xchg
inc
mov
mov
pusha
xchg
cmp
mov
hlt
or
rol
ljmp
dec
mov
push
or
pop
xorl
clc
fwait
add
rcrb
aad
sbb
jne
sbb
addb
mov
cld
lock
or
cmc
cmp
add
mov
push
mov
test
or
push
mov
cltd
sbb
in
lds
fdivr
mov
pop
iret
push
xor
jecxz
dec
fstpt
add
cmp
jo
jno
sbb
dec
es
sahf
or
mov
and
jle
adc
hlt
xchg
insl
or
popa
rorl
stc
inc
shr
sbb
push
jnp
movsb
lods
sbb
push
lcall
fiaddl
lret
cld
jbe
cwtl
push
mov
inc
out
imul
call
fdivs
push
divl
and
mov
test
push
int
into
clc
add
push
xor
mov
inc
mov
push
call
ret
add
cmp
mov
paddq
shrl
cmpl
inc
mov
xchg
sbbb
and
push
mov
imul
xor
test
repz
mov
das
call
cmpb
add
pop
xchg
lea
repnz
imul
pushf
jne
push
pop
cmc
iret
fwait
jb
lret
pop
xchg
pusha
in
rcll
jp
in
dec
lds
lds
ret
mov
jae
and
fnstcw
dec
cmp
bound
dec
sbb
jae
call
icebp
dec
hlt
cld
fistl
iret
jbe
or
movsb
cmp
sub
mov
mov
bound
push
popa
pushf
cmc
xchg
sar
sub
iret
and
arpl
je
pop
hlt
cmc
clc
js
fnsave
notrack
cld
cli
pop
xchg
test
fisubl
int
loopne
iret
cwtl
inc
xchg
xchg
sub
inc
mov
mov
mov
movsl
mov
xorl
js
and
inc
jecxz
lret
cmp
scas
insl
xor
cmc
adc
cmp
xor
dec
lods
ficompl
adc
sbb
call
jmp
push
out
andl
inc
adc
movsb
cli
push
add
xchg
adc
insb
mov
xor
push
rol
jne
jb
enter
sbb
and
pop
ss
jne
mov
xlat
dec
and
outsb
adc
cld
leave
and
add
cltd
mov
loopne
fmull
sbb
or
stc
into
aaa
jbe
fsubp
movsl
jmp
jmp
loope
push
loopne
cltd
fcmovbe
repnz
insl
lock
lahf
scas
add
jnp
adc
adc
xor
sahf
popa
adc
cmpsb
inc
mov
mov
je
mov
insb
sub
ja
cmc
insb
sub
adc
xor
cli
cmp
and
out
mov
mov
xchg
inc
movsb
dec
jbe
enter
pop
mov
subl
pop
cmp
fcoms
or
ret
pop
mov
mov
mov
jecxz
inc
pop
sbb
leave
lea
xchg
pusha
jl
xchg
movsb
jg
mov
lret
rol
enter
mov
push
and
mov
mov
push
mov
int3
es
inc
outsl
sub
addl
mov
sbbb
test
in
mov
mov
cltd
jge
insl
xor
inc
ret
cmc
jb
push
test
lods
neg
pop
arpl
stc
mov
hlt
pop
sahf
push
rorb
test
pop
sbb
aam
mov
jnp
lahf
xor
sub
sub
sbb
es
or
mov
fmul
lock
xor
ljmp
addr16
add
xchg
adc
imul
ja
sub
ret
mov
add
repnz
adc
xor
mov
out
loop
sub
jmp
cmp
adc
add
ret
sbb
cmc
loopne
ljmp
sub
sbb
mov
iret
das
jns
rolb
dec
stc
dec
push
into
seto
aaa
and
xchg
cli
jno
mov
push
add
inc
push
xchg
add
imul
add
add
shl
leave
and
or
push
push
cmc
lret
aaa
int3
jbe
out
test
xchg
mov
ds
std
int3
push
lock
test
xor
sub
add
jbe
push
ret
sbb
add
and
push
adc
push
das
jo
clc
icebp
lea
dec
push
jge
icebp
jl
call
mov
xor
fwait
lods
addr16
mov
mov
call
enter
movsb
out
sbb
pop
cmp
inc
lock
stc
adc
or
sub
test
addr16
outsl
in
xchg
iret
jnp
call
inc
mov
sbb
xchg
jae
jl
fs
xchg
lcall
aas
mov
and
mov
lods
bound
ficoms
xor
sub
je
sub
out
lock
mov
xor
jle
hlt
xor
gs
ret
xchg
mov
fs
mov
dec
xchg
jp
ja
jno
fwait
xchg
cmp
xchg
xchg
mov
dec
or
jp
fs
push
jmp
repz
rclb
sbb
imulb
push
loopne
pusha
jo
jp
aad
loop
dec
adc
cmp
in
mov
inc
je
cmp
ljmp
push
or
xor
xchg
aam
int
cmp
daa
rcrl
push
out
jle
es
adc
in
cs
inc
retw
addr16
or
mov
pop
push
ret
movsb
jns
repnz
popf
pop
mov
cmp
jp
jecxz
inc
insb
cmpsl
std
into
test
bound
popa
xchg
pop
sti
dec
or
pushf
add
and
inc
mov
jp
dec
ror
test
clc
inc
movsl
pushf
and
jae
adc
cmpl
fs
sbb
lds
cli
xor
and
test
out
fwait
dec
mov
std
in
movl
sti
das
or
pop
mov
xchg
int3
xchg
push
testb
mov
int
in
lea
fadds
mov
imul
stos
pop
pop
mov
xchg
dec
cmpsl
fidivs
push
jmp
cmpb
add
dec
and
pop
shrl
mov
mov
ds
stos
xor
adc
testl
mov
in
lahf
popf
cli
xor
adc
fnclex
dec
or
fsubp
xchg
in
inc
lds
xchg
jb
push
scas
sbb
insb
in
cmp
mov
dec
and
push
test
pop
outsl
out
inc
cwtl
jp
ja
push
hlt
mov
push
hlt
adc
mov
cltd
rcl
femms
mov
int
nop
push
enter
xchg
sarb
js
inc
and
ss
and
das
clc
dec
cs
out
adcl
pop
mov
mov
mov
sbb
push
call
xchg
push
sub
imul
sub
jne
cs
lcall
fstpl
mov
xchg
repz
inc
fcomps
jne
push
mov
int3
cmp
mov
jno
ficomps
addr16
cwtl
dec
and
adc
xlat
xor
aam
cmp
mov
xor
lds
push
pop
sub
icebp
add
mov
daa
xor
ss
mov
mov
pop
jne
es
es
jae
pop
fisubrs
pop
xor
jb
add
xchg
jo
imul
fisubl
jo
pop
and
cmp
fwait
sarl
test
jecxz
add
xor
mov
jns
mov
dec
loop
mov
xor
mov
sbb
popf
cmc
xchg
je
xchg
adc
sarb
adc
xorl
jo
push
cld
jnp
lods
pop
inc
insb
and
ret
inc
shrl
int
insb
aas
mov
jnp
pop
push
loope
mov
cwtl
gs
inc
cmp
cmp
orb
jne
cmpsl
push
mov
aas
lods
clc
sti
push
and
stos
sbb
test
or
mov
pop
lret
stc
xchg
mov
jl
push
pop
popf
push
and
jle
sarl
cvtps2pd
add
jo
xchg
aad
lods
sbb
dec
add
loop
dec
fwait
out
or
jns
adc
mov
cmp
fwait
das
in
test
cmpsb
outsb
xchg
jmp
mov
jge
test
mov
loop
pop
enter
xchg
push
ret
inc
ret
nop
mov
adc
cmpsl
inc
into
test
push
out
dec
add
les
push
push
cmp
mov
adc
push
js
xchg
and
push
inc
test
sbb
mov
scas
jl
fdivrs
lock
mov
xlat
jmp
imulb
pop
inc
add
fsubrs
fscale
jle
sub
fdivr
adc
mov
cmpsl
jg
mov
adc
insl
test
aad
aas
add
pop
adc
cwtl
xlat
mov
mov
mov
jo
jbe
loope,pn
ret
cmpl
adc
dec
adc
sti
gs
add
mov
scas
clc
lret
jp
fs
mov
mov
sbb
pop
pop
push
mov
xor
and
insb
dec
popf
cmpsb
push
roll
test
jnp
mov
xchg
jo
jecxz
and
shlb
add
mov
push
adc
cmpl
ss
xor
pop
cmp
aas
neg
movsl
fs
shlb
movsl
das
ror
daa
lea
push
sbb
cli
pop
fcmove
mov
sub
push
dec
jb
call
add
jle
insl
sbb
arpl
mov
lock
gs
subps
sub
adc
mov
push
loop
sbb
addr16
out
imul
call
test
adc
fldcw
ret
and
arpl
sub
test
jl
sub
lods
js
push
ljmp
arpl
fs
cmpsl
mov
in
movsb
out
js
and
sbb
movsb
jp
mov
xchg
mov
in
clc
gs
sub
jnp
bnd
hlt
movsl
loopne
sbbb
jp
movsl
lock
lret
scas
lods
rorl
sahf
push
into
in
pop
iret
jbe
pop
xchg
xor
jmp
cmp
fdivl
xor
push
mov
or
and
mov
lds
repz
popa
mov
mov
pop
push
add
in
das
adc
sbb
pop
ja
dec
movb
stc
mov
mov
pop
andb
push
pop
in
push
and
ficoml
xor
cli
pop
idivl
sub
xchg
mov
pop
push
mov
push
dec
mov
daa
repnz
xor
mov
xchg
out
sub
stc
sub
push
pop
outsb
xor
add
leave
rcrl
ret
cmp
fisubl
outsl
int
and
sbb
pop
inc
fstps
pop
push
xchg
int
dec
cmp
movsb
push
out
stos
outsl
ljmp
mov
sarb
sbb
movsb
in
pop
or
mov
inc
scas
jge
rcll
out
dec
push
outsb
int3
dec
push
xor
jno
sbb
adc
arpl
xchg
cs
cmp
notb
repnz
push
and
movsb
ljmp
xchg
xchg
lods
pop
or
push
xor
sbb
lret
lods
push
cmp
sub
push
nop
std
inc
mov
sub
fistps
out
js
adc
jecxz
adc
dec
subl
lock
aad
dec
aas
insb
cs
imul
arpl
jl
xchg
mov
gs
out
or
outsb
cltd
inc
add
cmpsl
mov
ss
dec
xor
xchg
cmp
and
addb
push
int
mov
xchg
out
ss
mov
cmp
dec
push
mov
mov
sarl
scas
mov
lahf
jno
or
jle
in
pop
jae
stc
das
pop
inc
into
and
lret
push
sbb
or
or
fbstp
xor
scas
add
sbb
sti
mov
lahf
jecxz
cmpsl
and
push
dec
mov
cmp
inc
dec
adc
sti
rcll
sbb
inc
cmp
lcall
mov
sbb
shl
hlt
notb
sarb
fists
ljmp
aam
fidivrs
stos
push
dec
pushf
fnstcw
xchg
jp
or
std
mov
insb
xchg
int
cld
xlat
xor
scas
push
mov
iret
fiadds
jg
jno
add
fisttpl
adc
popf
mov
lret
in
xchg
sbb
icebp
rorb
push
movsl
push
test
mov
cmp
mov
xchg
negl
mov
and
into
cltd
cltd
pusha
xchg
daa
xor
add
jmp
ret
xchg
in
fmull
jo
iret
xor
xchg
daa
jge
bound
jge
jp
mov
ret
mov
orl
jl
or
jnp
fsubrs
pop
sbb
xchg
dec
xchg
mov
pushf
adc
cmp
daa
repnz
fwait
xor
push
rclb
jnp
adc
fadd
outsl
shll
lret
sti
or
xchg
lea
adc
push
imul
or
mov
out
jmp
loope
sbb
jge
insl
jne
xor
aaa
in
cmp
lret
sti
jg
inc
sbb
pop
movsl
hlt
inc
stos
xchg
or
push
filds
lcall
or
ds
sub
lds
jg
add
fildl
loope
repz
or
and
mov
cmpl
add
or
pop
in
insl
xor
shll
jp
mov
es
dec
dec
pushf
fistl
repz
jl,pt
loop
xchg
sysenter
sub
lock
sub
cmpsl
es
jg
mov
arpl
mov
mov
into
mov
ja
inc
jecxz
sbb
jecxz
or
inc
fmul
out
lods
pop
xchg
int
aam
imul
cmp
mov
add
jge
mov
out
pop
jno
jae
std
mov
xor
stos
xchg
nop
jge
test
into
inc
cmp
fimull
sbb
adc
cld
jae
cmpsb
sbb
pop
outsb
in
mov
inc
xchg
lahf
adc
sub
jle
leave
sbb
and
lds
mov
and
dec
xor
ds
push
imul
sub
push
xchg
fistl
inc
sbb
mov
mov
push
mov
mov
xchg
mov
out
mov
and
cmp
push
xlat
hlt
vpmacsswd
or
lods
imul
cltd
js
js
ficompl
xor
sub
movb
hlt
cs
push
nop
imul
mov
jb
rcrl
subl
mov
notrack
jbe
fsub
jle
push
sbb
mov
popa
or
xor
lods
test
mov
in
xlat
std
inc
movsb
mov
mov
sub
jmp
das
push
adc
out
push
mov
push
xor
lds
jns
xor
out
js
lret
mov
ja
mov
enter
adc
jmp
aaa
sbb
cltd
movsl
sarb
push
xor
mov
adc
and
cmc
cmp
jnp
xor
adc
loop
dec
data16
repz
add
mov
fwait
dec
and
cld
sub
fwait
jns
push
movsb
cmp
lahf
mov
mov
push
sahf
scas
cmp
idivl
sti
mov
sbbl
out
mov
and
sbb
adc
test
push
das
stos
add
push
push
inc
mov
in
xchg
aaa
stos
jmp
or
lds
rorb
dec
imul
push
add
and
dec
and
sbb
scas
addr16
or
mov
mov
dec
enter
inc
icebp
mov
xor
pop
inc
cmp
xor
cmc
fisttps
xor
mov
popa
stos
jle
shl
xchg
cmp
cmp
mov
push
shrl
xor
shr
dec
jnp
mov
addl
and
mov
lods
lods
fcmovnbe
outsb
sbb
ss
addl
sub
fistl
mov
pop
push
inc
shlb
sub
nop
sub
cmp
or
fcmove
push
lret
in
adc
insb
negb
ret
stos
stc
scas
sbb
out
push
pop
lods
cmpsb
sub
fisttpl
cltd
push
in
loope
mov
aas
and
test
out
and
xor
ret
aam
ficomps
push
or
popf
loope
xor
sbb
test
fnstcw
xchg
dec
pop
jmp
es
cmpsb
jmp
jns
push
push
addl
xchg
inc
ret
rolb
aad
das
jno
or
stos
movq
ret
pop
mov
inc
stos
stos
pop
or
dec
adc
aas
push
negb
or
xchg
scas
ljmp
and
mov
pop
xchg
or
mov
hlt
inc
test
push
sbb
roll
stc
xchg
xor
sarb
ds
add
imul
shlb
mov
and
push
mov
sbb
out
sbb
lahf
cmp
mov
or
and
cmp
pop
dec
lock
xor
jl
flds
test
inc
push
movsb
jp
in
xchg
sub
mov
dec
popa
repnz
rcrb
clc
sub
fdivs
lret
mov
out
clc
jle
xchg
test
push
int3
mov
fdivs
pop
movsl
or
mov
dec
xchg
arpl
mov
out
or
cmp
lock
aas
shlb
inc
sub
xor
int
push
xchg
in
rcr
and
sub
cmp
mov
push
xchg
and
js
xor
stc
add
rcrl
mov
mov
je
insb
push
test
cli
mov
lds
fisubrs
cmp
or
xor
jns
xchg
mov
mov
cltd
addr16
xor
and
gs
mov
dec
mov
and
mov
hlt
dec
inc
inc
sbb
jno
mov
fdivr
xlat
xlat
adc
and
xor
test
lods
lea
out
inc
sub
or
inc
aaa
mov
dec
aam
dec
push
aad
push
adc
add
add
mov
xchg
sti
mov
movsl
mov
repnz
lock
cmp
out
cmp
sbb
insb
shr
in
pop
xor
loope
jae
pop
add
jno
or
pop
pop
insl
pop
outsl
or
xchg
xor
xor
or
clc
test
pop
add
mov
or
shrb
cmpsb
in
mov
outsb
stos
sub
int
shrb
inc
idivl
push
iret
jg
incl
test
xor
inc
movsb
push
sarl
jne
pop
lds
negb
jmp
in
cltd
stc
mov
sahf
cmp
cwtl
daa
fiadds
cltd
loopne
mov
lret
lock
xchg
pop
les
hlt
call
or
lcall
sbb
je
leave
pop
jl
fists
adc
jp
lcall
mov
dec
mov
mov
push
inc
movsb
clc
ss
jmp
mov
in
pushf
mov
loop
popl
cmp
enter
lods
xchg
ficompl
or
mov
add
dec
push
pop
mov
repz
popa
test
stos
mov
mov
mov
fistpl
jecxz
mul
dec
and
mov
adc
inc
adc
jecxz
push
arpl
inc
adc
pushf
ss
inc
aam
mov
jecxz
int3
sub
fwait
sbb
out
cmp
pop
daa
adc
je
pop
data16
cld
dec
jne
stc
orl
ja
mov
jmp
add
dec
pop
cmpsl
mov
flds
adc
test
repz
testb
push
push
out
sub
leave
push
xor
add
in
fldt
sub
fs
in
or
jle
adc
lods
mov
or
push
cwtl
fcompl
jmp
popf
lock
and
push
ret
div
popa
and
jae,pn
and
xor
test
push
mov
sbb
aas
fwait
inc
adc
mov
pop
in
or
loop
fdivl
sub
leave
fdivp
std
stos
aaa
repnz
aam
dec
cmp
xchg
test
sbb
je
stos
rol
les
xchg
push
dec
xor
jo
pushf
shrb
push
cmp
adc
and
test
push
mov
clc
sarl
push
pushf
jbe
ret
pop
xlat
in
stc
xlat
sbb
sbb
mov
test
jp
xlat
push
cltd
jno
outsl
dec
shlb
and
xlat
mov
rolb
shrl
sbb
loop
push
popf
lahf
add
iret
enter
xchg
push
push
insb
es
pop
sti
mov
sbb
jno
push
je
push
mov
loopne
dec
cld
adc
sbb
dec
lcall
inc
stos
fs
outsl
jae
adc
mov
andl
movsl
imul
in
lock
cld
out
adc
sbb
push
add
xchg
pop
int3
and
out
jb
pushf
mov
sbb
mov
stos
push
iret
inc
in
pushf
pusha
lea
arpl
mov
push
stc
mov
adc
out
popf
mov
adc
cmc
pop
and
mov
jge
je
cmp
outsb
fs
scas
sub
adc
ds
fildll
rep
arpl
xor
jecxz,pn
xor
adc
mov
ret
insl
in
pop
lcall
jns
jo
int3
add
jb
nop
mov
cltd
pushf
pop
pop
push
ret
test
inc
lods
lds
cmp
jo
cs
aam
dec
rol
push
fsts
sub
mov
mov
sbb
sbb
stc
xchg
or
dec
pop
or
or
jo
dec
cmp
and
mov
cli
mov
pop
mov
inc
fcomps
and
mov
sub
movlps
xchg
xor
int3
jae
adcb
enter
and
repnz
stos
insb
push
cmp
or
push
int3
inc
sbb
adc
mov
outsl
stos
ret
icebp
test
sub
dec
int3
call
push
out
popa
add
mov
cli
aaa
lea
andb
push
inc
mov
shll
lds
add
mov
push
sub
loope
call
dec
sub
ret
call
mov
or
cmp
test
aam
mov
rcll
add
push
or
inc
pop
jae
je
xchg
cmp
sub
or
data16
adc
sub
add
jl
popa
in
adc
sbb
mov
gs
push
pop
cs
lahf
faddp
sti
sbb
pop
add
or
cli
lret
mov
ljmp
jbe
lds
movsl
in
sub
inc
xor
inc
mov
lock
xor
inc
pop
addr16
cmpsl
mov
fisttpl
out
adc
push
jb
xor
push
loope
add
loop
sti
lods
cld
jmp
in
jne
mov
mov
pop
loopne
aam
sub
test
movsl
mov
mov
mov
xchg
inc
andl
cs
mov
out
rcll
xchg
mov
iret
or
inc
daa
ret
es
jns
out
into
lret
xchg
test
mov
push
pushw
sbb
fildll
sub
test
or
jne
xor
sub
jne
and
xchg
rclb
xchg
mov
int
xchg
sbb
add
sub
and
mov
ret
inc
fucomi
je
ds
adc
push
vunpckhps
mov
jle
repz
and
aaa
outsb
xchg
lret
push
jno
int3
stc
cmp
push
rcll
scas
movsl
mov
cwtl
aaa
pushf
data16
lret
push
icebp
arpl
mov
sbb
les
into
dec
mov
inc
clc
mov
loopne
dec
inc
into
pusha
xor
pop
cmp
pop
movsl
sub
mov
jne
enter
inc
int3
inc
lds
jmp
mov
loopne
jno
pop
mov
cld
sbb
ds
xor
xor
sarl
cmp
xchg
pop
mov
inc
jmp
out
cmp
ds
add
push
test
lcall
mov
cmp
or
dec
pop
ljmp
dec
pop
jb
js
mov
mov
popf
rcrl
cmp
cld
cmpsl
pop
fcoms
dec
push
test
out
add
iret
mov
sub
jae
jmp
gs
cmp
inc
pushf
shlb
std
in
jmp
incb
xor
or
mov
and
aad
add
mov
scas
jbe
push
je
inc
cmpsl
mov
xor
fucom
sub
inc
stos
shl
add
test
add
daa
cmp
popa
dec
out
cmp
out
daa
adc
hlt
fldenv
push
lcall
jl
std
jg
ja
jmp
pop
test
ret
sub
mov
cmp
inc
lahf
mov
loope
xchg
aaa
push
mov
add
gs
cwtl
xchg
gs
sbb
mov
push
mov
jno
push
aaa
fld
mov
mov
or
and
inc
pop
dec
repnz
add
in
sti
sbb
mov
in
test
ja
sti
popa
inc
imul
mov
shlb
mov
lods
or
and
jnp
lret
addr16
jg
inc
js
out
xor
or
les
dec
push
inc
sub
rolb
add
cwtl
adc
std
cs
dec
sub
das
push
xor
mov
dec
outsl
jecxz
inc
xor
mov
xchg
pop
jb
sbb
xchg
loop
loope
es
mov
inc
and
push
lcall
sarw
jno
in
daa
and
jl
mov
inc
dec
int3
std
sub
pop
in
cmp
sahf
pusha
mov
iret
icebp
add
xchg
pop
imul
enter
dec
mov
ss
sbb
mov
leave
add
stos
pop
call
and
std
push
mov
hlt
xchg
rcrb
repz
fistps
cld
sti
mov
insl
sbb
js
inc
pop
mov
ds
ds
aaa
mov
mov
jmp
cmpsl
and
inc
sub
sub
cs
jecxz
cltd
pop
pop
icebp
enter
add
dec
cmp
push
jle
adcl
dec
les
push
cltd
sti
ljmp
fisubs
jns
mov
push
arpl
mov
popf
push
mov
cwtl
xchg
pop
shrb
test
xor
lods
aaa
inc
jp
and
outsb
sub
jns
lods
mov
sbb
enter
mov
js
xor
std
shll
dec
cwtl
mov
out
int3
rorl
out
adcb
and
mov
sub
mov
negl
aaa
xchg
hlt
decb
xor
lods
fldcw
cmp
in
in
mov
sarl
xchg
lods
aam
call
out
jl
push
dec
rcrl
bswap
pop
mov
cmp
push
and
cmp
sub
inc
dec
mov
popf
popf
popa
lcall
cmp
xchg
adc
loop
sbb
inc
sti
inc
divb
and
xchg
jmp
mov
sbb
and
scas
sub
sbb
mov
sbb
lcall
leave
popf
fsubrs
lahf
mov
adc
add
xchg
in
jbe
sub
nop
jno
insb
ret
test
sbb
je
ret
insl
and
sbb
stc
jae
push
divb
popf
mov
lea
cld
testb
push
xor
jb
notb
cld
or
sbb
repz
adc
pop
add
sub
cltd
pop
pop
iret
aam
rorb
daa
or
inc
pop
insb
sbb
jns
in
adc
addr16
sub
adc
pop
cli
inc
cmpsb
or
out
cli
or
mov
jge
sbb
ljmp
test
insl
adc
in
dec
cmp
fcmovnbe
int
test
fdivs
sahf
push
std
inc
mov
push
mov
cmp
push
inc
xchg
jno
xor
jmp
lahf
adc
cmpsl
fcomps
push
sbb
pushf
rclb
mov
xor
mov
jno
push
and
cwtl
jbe
jnp
das
dec
xchg
outsb
out
sub
push
jo
sahf
sub
add
dec
insl
sbb
and
push
jge
subb
cmp
adc
dec
movsl
insb
lea
enter
xor
lods
and
add
sbb
sub
jno
mov
js
ljmp
lea
adc
cmp
pop
pop
sbb
ficomps
in
pop
xchg
outsb
icebp
jbe
push
mov
sbb
inc
mov
inc
rcl
lds
fldcw
cltd
mov
cmp
inc
mov
xor
cmp
dec
je
xchg
loope
jo
sbb
ljmp
ja
inc
iret
jb
xchg
sub
or
push
push
jne
xor
jb
sbb
xchg
mov
pop
and
mov
in
inc
cmp
mov
mov
adc
lds
push
and
adc
rclb
cli
jne
lods
cmpsl
fimull
xchg
add
dec
adc
jne
xchg
addr16
lods
dec
rclb
inc
inc
adc
mov
lret
addb
mov
push
sbb
inc
scas
lock
test
daa
push
mov
adc
sub
jle
or
dec
xchg
int
dec
sbb
out
dec
decb
ja
mov
insl
jae
repz
loopne
ss
and
test
fstp
jno
push
or
fadds
jmp
xor
mov
sti
in
mov
sbb
jbe
lods
divl
mov
imul
ret
dec
addr16
and
fnstenv
repnz
stc
mov
sti
sub
rcrl
jns
mov
adc
mov
shrb
cmp
xchg
in
ss
test
xor
pop
aad
popa
adc
mov
fldcw
ret
sbb
inc
pop
add
sub
push
enter
push
icebp
shr
dec
scas
push
hlt
ja
dec
aaa
jnp
sub
pop
inc
xor
scas
cmp
sahf
cmc
push
jmp
inc
ljmp
sahf
outsl
stc
dec
mov
fisttps
jne
dec
and
ljmp
int3
cmpsb
mov
jp
rsm
and
or
xchg
mov
jp
negb
sar
fsubs
aad
adc
or
subb
push
cmp
arpl
jbe
cmpsl
mov
movsl
aaa
popa
sub
iret
iret
scas
cwtl
daa
xchg
mov
mov
orl
sbb
pop
add
mov
xor
lahf
lahf
lods
fcmovnu
sbb
hlt
adc
xchg
insl
add
insl
shlb
ljmp
sbb
mov
push
fwait
mov
add
adc
mov
push
jae
add
ds
into
fimull
imulb
push
sahf
repz
call
andb
test
sbb
pop
sbbb
in
jae
ss
cmp
adc
cltd
push
jge
cmp
jnp
mov
mov
mov
xchg
pop
jae
add
out
push
pop
in
dec
push
adcl
dec
mov
jae
cltd
bound
fcmovnb
std
cmp
add
xor
mov
data16
push
jne
test
in
cmp
mov
jbe
pop
loop
ror
push
in
jnp
aas
and
daa
stc
loope
in
arpl
adc
mov
mov
shlb
sub
cmpsl
out
sub
xor
push
add
jne
sarb
stc
inc
push
pop
mov
dec
jnp
xchg
nop
andb
cmp
sbb
stos
int
push
fsts
faddp
test
sbb
fidivrl
push
cmp
out
xorl
add
test
push
mov
inc
sbb
stos
in
fidivrl
les
das
and
test
xor
lret
sahf
mov
je
wbinvd
fsubrs
das
cmp
and
mov
or
out
cmp
fisubrs
scas
cmp
dec
rorl
mov
cmp
out
xchg
push
sub
adc
mov
iret
addb
xchg
mov
inc
cmp
call
insb
mov
inc
fs
xchg
xchg
sub
in
adc
cltd
loope
std
or
mov
jecxz
ljmp
mov
sbb
jnp
push
bndstx
jecxz
adc
jmp
or
pop
sti
push
scas
ja
adc
inc
ja
sub
emms
mov
data16
loope
pop
addl
jbe
out
sbb
fmuls
xchg
xchg
xor
lea
add
cmc
inc
stc
shlb
inc
and
inc
push
sbb
mov
mull
insb
jb
jno
sub
test
out
mov
inc
and
pop
je
out
imul
add
xor
es
jl
or
popf
pop
or
add
jae
lcall
jmp
arpl
jg
pop
mov
shlb
imull
xchg
test
pop
data16
incb
arpl
fucomp
fdivl
pushf
loopne
mov
push
push
pop
xchg
cmp
shll
dec
lods
enter
das
dec
sub
bndldx
dec
aaa
mov
sub
imul
movsl
pusha
xor
aas
mov
repnz
mov
gs
hlt
add
lret
bound
xor
pop
and
pop
iret
push
into
push
lcall
incb
sahf
or
push
push
test
inc
cmc
mov
mov
sahf
mov
data16
push
loop
iret
push
std
mov
ror
fisubrs
mov
mov
ja
adc
fnsave
mov
cs
inc
mov
daa
cmpsb
push
xchg
cmp
leave
out
fisttps
out
stc
pop
mov
insb
jmp
int3
add
rcrb
jmp
xchg
es
jecxz
xchg
lods
fidivl
dec
scas
mov
in
xorb
jbe
bound
test
shrl
xor
movsb
or
sbb
jbe
add
aaa
data16
cmp
jnp
outsb
inc
cmp
in
loopne
adc
gs
pushf
outsb
xchg
jmp
mov
repnz
pop
or
out
and
mov
inc
mov
jo
mov
jne
xor
push
imul
clc
lock
roll
or
imul
lods
or
pop
inc
jl
int
in
push
mov
mov
rorb
dec
fwait
push
pop
fstpt
orl
fdivs
out
mov
data16
cmpsl
push
shl
aad
test
adc
jge
cld
cli
mov
bound
ljmp
lea
and
data16
dec
add
mov
xchg
aaa
cmp
out
mov
xchg
test
insl
imul
aad
lods
aam
cmc
jecxz
loope
mov
cmpsb
call
stc
aam
in
cli
mov
cs
cwtl
sbb
xchg
jge
repnz
adc
xchg
sub
xor
jp
addr16
xor
fdivl
push
inc
push
imul
rcll
mov
loope
aam
movd
nop
xlat
negl
add
stos
mov
out
popa
pop
insl
add
or
mov
cmp
jbe
andl
xor
orb
dec
mov
stos
xchg
xlat
cmc
xchg
stc
xorb
scas
cmc
adc
sbb
push
ffreep
repnz
imul
and
push
bound
add
xchg
nop
xchg
dec
mov
mov
loope
cltd
testw
add
das
mov
in
mov
dec
stos
dec
data16
pop
cltd
lret
pop
or
xchg
inc
pop
push
mov
push
pop
jecxz
cmpsl
flds
cmp
cld
mov
rolb
sti
arpl
sub
mov
in
gs
fs
aad
xchg
imul
and
fimull
sbb
sub
aas
pop
push
cmp
jmp
adcb
add
mov
mov
cwtl
lcall
jle
loop
in
test
pop
xor
sbb
test
pop
roll
cmp
inc
pop
adc
jmp
pushf
sbb
xor
jp
popf
icebp
xchg
push
add
xchg
dec
popa
mov
inc
pop
adc
push
mov
lret
dec
sahf
js
ret
mov
inc
sub
cmp
addl
dec
scas
ficomps
call
sub
les
hlt
pop
outsl
in
xlat
sti
mov
and
jg
lods
xchg
ja
pop
icebp
stos
lds
stc
jae
sbb
idivl
push
cwtl
sarl
mov
cmpsl
xor
rcrb
ja
mov
es
add
ds
orb
pushf
pop
adc
call
inc
mov
push
test
mov
stc
int
adc
push
iret
dec
fwait
pop
xchg
mov
repz
or
cs
sub
std
stos
add
scas
ja
xchg
das
mov
jnp
inc
mov
cmp
xchg
pop
lret
sbb
in
lret
movsl
ret
xchg
sets
mov
sti
pop
push
enter
mov
push
sahf
int
js
cmc
mov
insl
push
popf
jmp
data16
xor
lret
call
mov
jnp
es
inc
les
cmc
push
adc
sarl
sub
push
mov
stc
jg
push
cli
add
icebp
sbb
sub
les
or
cmp
sub
mov
jp
inc
add
addr16
testb
loopne
pop
push
add
out
fnstenv
stos
into
popa
add
sub
jo
test
mov
sbb
pop
rcrb
cmp
cmp
sbb
lea
mov
fistpl
rcl
loop
push
mov
xor
jecxz
ret
daa
mov
adc
sarl
add
pop
jle
and
cltd
pop
pushf
std
mov
fistl
dec
lods
mov
call
add
es
xchg
shl
xor
pushl
nop
insb
dec
pop
insb
outsb
mov
fimuls
lea
daa
adcb
pop
fimull
sub
mov
jecxz
cmp
mov
inc
cmp
and
jne
pushf
out
pop
add
repnz
je
pusha
test
sahf
stos
sub
xor
push
cltd
into
xor
aam
xchg
push
mov
mov
int
aad
mov
dec
push
into
adc
fiadds
lahf
hlt
xor
xor
mov
popa
sub
hlt
enter
sbb
lods
pop
jns
mov
pop
cmp
adc
and
push
mov
je
rol
adc
jp
inc
push
jp
pop
or
ljmp
into
push
mov
jne
push
stos
fbstp
dec
cltd
xor
fs
mov
mov
xor
xchg
lcall
or
dec
jmp
mov
imul
test
es
mov
lods
sbb
push
inc
xchg
push
mov
notl
ret
jle
cltd
push
mov
xchg
loopne
mov
arpl
and
push
xchg
test
out
xchg
adc
add
lret
push
push
loop
push
or
lret
mov
xchg
push
mov
sbb
pop
xchg
shr
sub
iret
mov
insb
in
clc
popa
mov
imul
mov
pusha
ficomps
xchg
xchg
cmpsb
cli
out
shl
shl
stos
add
cmpsb
add
jns
fistpl
mov
mov
dec
lret
dec
cwtl
out
mov
xchg
fcmove
lahf
out
ret
jnp
sbb
out
stos
sbb
dec
jns
or
cmp
mov
cmp
jno
mov
xchg
inc
add
sub
fimull
adcb
mov
jmp
out
das
dec
mov
shl
pop
mov
xchg
adc
imul
pop
sub
cmpl
jne
or
or
mov
jecxz
mov
lret
subl
xchg
mov
adc
mov
mov
repnz
cmp
add
adc
fcmovnb
adc
add
xorb
cld
loopne
jno
clc
dec
inc
pop
test
btc
pop
or
and
push
mov
in
leave
inc
mov
or
popf
in
dec
or
lret
push
lods
add
jecxz
ret
or
outsl
pop
push
pushf
or
mov
jne
bound
bound
pop
mov
pop
arpl
dec
xor
add
sar
xchg
ja
stc
movsb
stos
mov
or
pop
mov
push
es
pusha
lahf
daa
and
jg
sub
push
lahf
cmpl
daa
imul
sub
fmull
mov
cltd
xor
dec
imul
lods
out
scas
mov
insl
out
xchg
ss
lds
jns
iret
cli
out
ret
cli
call
fisttps
sbb
adc
repz
inc
adc
mov
rorl
sbb
call
push
fistps
dec
pusha
imul
rsm
fiadds
lock
push
js
scas
scas
adc
sbb
mov
cmp
push
sub
mov
xor
inc
sbb
cmpsl
rorl
mov
insb
lret
jle
push
adc
rcll
inc
mov
mov
xor
int
sub
push
into
repnz
dec
int
in
fwait
insl
in
pop
fdivrl
fldcw
jae
dec
cli
cmp
mov
push
fsubrl
pop
dec
es
cmp
xor
mov
or
sbb
ja
pushl
dec
hlt
cmpsl
and
adc
mov
test
bound
adc
les
cwtl
xor
pop
shrl
and
jmp
stc
aas
test
mov
xor
cmp
xor
xor
xchg
fsubrl
loopne
mov
dec
in
imul
xor
sbb
xchg
repnz
sub
mov
arpl
cvtps2pd
ret
adc
test
aam
and
push
and
loope
adc
int
das
out
add
notb
insl
dec
or
shrb
lods
pop
xor
shll
cmc
sbb
les
xlat
dec
stos
call
inc
nop
leave
or
cmp
add
out
neg
aad
call
addr16
push
fisttps
call
lods
and
jp
test
clc
sub
xchg
repnz
pop
cmp
in
xchg
fidivl
negl
mov
cs
rcll
xor
xlat
dec
lcall
jbe
cmpsb
inc
inc
push
lahf
push
push
mov
xor
lcall
push
push
dec
add
add
lods
cmpsb
adcl
xchg
push
push
aad
jl
shrd
fdivrp
repnz
in
sub
outsl
fidivs
mov
push
les
fsubs
test
sub
or
add
cltd
add
jmp
in
rcrb
lods
out
mov
push
lahf
cli
inc
mov
nop
inc
dec
dec
cmpl
into
test
sub
mov
jge
mov
inc
add
inc
dec
pusha
pop
pop
call
cmp
test
pop
inc
push
mov
sahf
sbb
xchg
cmc
push
push
push
pop
xor
mov
inc
jp
subl
mov
sub
into
sti
gs
lcall
subb
adc
mov
and
jns
jo
rolb
inc
je
into
in
inc
pop
hlt
enter
and
lods
int3
push
jmp
test
sbb
xor
fistpl
aaa
aam
adc
cld
jno
lock
clc
loopne
xchg
xchg
push
cmc
push
cmpsl
sbb
loopne
int3
lret
sub
pop
ret
cmp
xchg
jmp
call
push
mov
mov
arpl
push
movb
xor
mov
jne
sbb
inc
xor
mov
in
pop
xor
dec
lea
pop
xchg
cli
out
lcall
inc
jmp
decb
pop
mov
je
js
lods
sbb
jl
mov
ss
jnp
mov
jp
dec
sbb
mov
gs
stos
cmp
push
sbb
loop
push
mov
dec
imul
add
cmp
inc
jg
cmc
jl
ret
int
cmp
sub
xor
mov
lds
rol
imul
mov
cmp
or
stos
iret
mov
dec
sub
movsb
sti
pop
inc
in
gs
out
enter
mov
arpl
out
enter
shlb
jmp
cld
mov
xchg
adc
repz
pop
mov
jmp
loopne
ljmp
mov
stc
add
cld
jp
mov
sub
pop
sahf
mov
inc
imul
cmc
in
add
inc
xor
stos
pop
mov
inc
dec
test
aas
xchg
and
idivl
or
ffree
mov
sbb
outsl
jle
movsl
cmp
fidivrs
fimull
mov
inc
lcall
sub
cmp
cmp
jbe
push
in
mov
popa
int3
xchg
int3
ret
pushf
rolb
es
movsb
xlat
shr
inc
jg
cmc
push
mov
in
in
sbb
repz
push
in
ljmp
cli
and
pushf
or
imul
dec
in
inc
sub
adc
lods
or
and
cmp
add
pop
repz
dec
ficompl
in
les
push
mov
aaa
jl
ja
fs
jo
xor
nop
cmp
fcoml
js
jge
push
lods
mov
adc
scas
data16
push
call
cmpsl
and
mov
leave
sub
and
cld
in
inc
loop
sub
loopne
sbb
and
xchg
out
cltd
aas
stos
in
fmuls
adc
arpl
mov
and
fcmovnbe
dec
xor
sbb
fs
aas
pop
push
jle
es
push
xchg
je
clc
test
aad
sub
push
mov
rcr
pop
jnp
lret
jb
cmp
negl
push
cmpb
pop
push
jb
pop
dec
sub
mov
mov
fildl
mov
adc
jnp
xor
adc
push
clc
int
mov
outsb
adc
imul
inc
adc
sbb
jns
dec
xchg
das
stc
pop
jp
outsl
push
cs
xchg
loopne
sbb
dec
lods
in
ret
inc
inc
push
sub
push
xchg
jbe
loop
inc
xchg
mov
outsl
push
test
insb
cs
mov
sti
xchg
sbb
fwait
lds
xor
dec
cli
cli
sbb
mov
sub
fiaddl
adc
lea
sub
iret
shll
pop
mov
push
and
clc
pop
aam
adc
sub
mov
ds
cmp
lcall
or
inc
shlb
movsl
enter
leave
adc
pop
sbb
push
push
das
pop
cmpsb
xorb
aam
cmp
xlat
mov
inc
movsb
jg
test
jle
out
shll
push
out
popf
sub
ljmp
xor
test
push
insb
adc
sub
repz
add
pop
mov
push
fsqrt
jl
pop
xchg
pop
mov
xor
cmp
fs
jno
js
jb
pop
mov
xor
mov
ljmp
rclb
add
je
cmp
out
mov
cmp
push
xor
cmc
dec
jmp
fistl
mov
dec
jno
lds
mov
mov
fildll
xchg
fwait
sti
lea
sub
mov
aaa
cld
addl
outsb
jno
cmc
dec
adc
mov
ljmp
cltd
aad
fs
test
repnz
daa
xor
jb
push
push
mov
popf
mov
lock
pop
xor
push
mov
and
add
lret
inc
sub
mov
mov
inc
mov
sbb
push
adc
ja
pop
into
fildl
out
jp
inc
stos
add
add
jl
add
fiaddl
mov
fs
sbbl
movsb
mov
and
cmpsl
pop
in
sbb
fisubs
imul
cmp
inc
jle
and
xchg
pop
shlb
into
es
jecxz
arpl
jae
xor
add
fbstp
jle
jmp
int3
inc
cmp
adc
rolb
mov
xchg
push
adc
cmova
cmc
sub
repz
adc
cmp
in
xor
popa
add
leave
ret
sub
out
fistpll
jne
je
pop
adcb
bound
dec
outsl
sbb
mov
push
call
cmc
pop
jg
movsl
sahf
outsb
popa
stos
or
dec
inc
imul
jl
cmp
dec
cmpsl
mov
and
clc
sbb
icebp
icebp
or
pop
mov
jge
jecxz
adc
push
and
mov
xor
sub
ret
rclb
cmpsb
jmp
fstpl
xchg
fs
push
mov
dec
insl
mov
pop
pop
xchg
sbb
sahf
pop
push
clc
jb
mov
and
or
std
js
fwait
sti
and
xor
mov
mov
jmp
mov
mov
and
push
mov
mov
sbb
sbb
mov
mov
jmp
add
mov
arpl
repnz
int3
xor
ret
jge
inc
xor
mov
adc
sbb
cmovne
leave
jle
push
mov
test
push
and
mov
popf
fistps
pop
mov
mov
adc
jg
sbb
add
mov
in
and
and
jb
lods
mov
loop
cmpb
dec
sbb
mov
test
int
add
mov
inc
pop
lods
cmp
in
and
pusha
pusha
push
sbb
push
mov
shrb
mov
push
push
fwait
mov
push
push
mov
fwait
out
mov
sub
add
dec
mov
and
inc
mov
mov
imul
cmp
inc
push
test
pop
inc
mov
sbbl
mov
in
cwtl
xchg
repz
xor
repz
andl
ds
mov
nop
pop
outsl
xor
mov
pop
cld
fmulp
xchg
jl
jmp
ret
mov
shr
xor
arpl
imul
mov
lock
sub
mov
lea
push
push
push
cmp
mov
lods
xchg
mov
pop
dec
cmp
adc
cmpb
sti
dec
mov
jl
cmp
xor
mov
test
fnsave
and
add
mov
mov
jnp
adc
jns
dec
mov
loope
pop
lock
mov
mov
push
icebp
neg
push
pusha
cmpsb
jo
xlat
cmpsl
aas
jmp
and
pop
fsubl
lods
jno
xchg
mov
es
or
test
test
mov
ds
mov
dec
nop
xor
inc
push
inc
mov
rcll
dec
mov
sbb
mov
jo
clc
or
and
inc
das
clc
leave
xchg
sbb
es
sub
inc
push
ja
cmpl
cmp
and
fistpll
test
xor
loop
or
mov
cltd
push
xchg
mov
movb
je
dec
test
adc
pop
pop
cmp
jae
xchg
adc
push
addb
adc
repnz
pushf
lods
inc
adc
xchg
aam
or
mov
movsl
jge
mov
pop
pop
adc
and
cmp
mov
push
mov
movsl
inc
sbbb
aas
mov
dec
mov
dec
insl
add
push
insl
cli
int
push
adc
movsl
add
push
fwait
jb
mov
adcb
or
das
and
ss
xor
rcrb
iret
aas
insl
xchg
sub
add
popa
movsb
call
rolb
das
ds
xlat
mov
lods
cld
std
cmp
lds
inc
mov
cmc
mov
sbb
cmp
jg
and
fs
ljmp
push
out
xchg
iret
mov
sbb
in
imul
xor
addb
add
xor
jae
dec
xchg
jg
imul
mov
sub
imul
popf
and
sbb
lods
fsubp
and
jb
pusha
mov
int3
mov
or
push
addr16
xor
mov
inc
loopne
or
int3
mov
inc
sub
cmp
sub
jns
dec
lods
dec
mov
sub
inc
sub
adc
mov
sub
xor
shl
cld
mov
add
mov
mov
std
xchg
mov
out
cmpsl
into
mov
and
imull
or
popa
or
inc
lcall
or
inc
ret
jg
das
leave
mov
hlt
cmpsl
mov
mov
rcr
stos
popa
push
add
adc
push
loopne
cld
mov
dec
aad
mov
outsb
fwait
icebp
js
lcall
adcw
mov
jmp
ss
icebp
and
test
arpl
cmpl
hlt
xchg
xor
lret
or
push
jno
call
sub
leave
mov
dec
pop
mov
test
scas
ljmp
jl
sub
shlb
cmp
inc
pop
dec
pop
inc
in
popa
sbb
sub
jp
xchg
iret
insl
movsl
pop
pushf
cs
inc
stos
sub
mov
pop
cmp
cmp
and
pop
or
cmp
divl
mov
jno
mov
pop
loope
inc
clc
jns
out
xchg
in
int3
mov
pop
decb
jmp
push
xor
dec
push
repz
dec
icebp
enter
cmp
adc
pop
dec
ss
loopne,pt
or
int
mov
and
push
outsl
cwtl
and
push
das
into
xor
xchg
push
jbe
cwtl
lcall
adc
mov
jo
daa
jl
aam
push
add
sbb
aam
and
mov
mov
clc
dec
cmpsl
jl
orb
jecxz
bound
push
pop
sbb
bnd
sub
adc
xor
mov
dec
dec
push
xor
adc
dec
or
push
sbb
ret
pop
sbb
lret
sub
enter
or
das
xchg
pop
mov
xchg
mov
inc
mov
push
sub
jp
sbb
into
inc
ds
xchg
icebp
inc
mov
sub
ja
cmp
bound
jne
pusha
and
nop
outsl
mov
iret
fldenv
fdivs
lret
enter
stos
inc
adc
cmpsb
or
mov
int3
mov
cltd
in
jno
cld
out
and
test
adc
aam
xchg
and
in
fwait
insb
and
adc
out
sbb
adc
xor
iret
xchg
sbb
or
call
adc
insb
pop
in
or
mov
cmp
mov
mov
test
mov
adc
mov
mov
and
test
adc
lods
fbstp
andl
ret
pushf
std
sarb
mov
ret
shlb
fisubl
xchg
xchg
adc
nop
cli
xchg
and
jle
int
add
pushf
faddp
inc
es
mov
mov
mov
fsts
add
jno
add
dec
and
push
jge
shl
adc
or
lods
sbb
sbb
mov
test
insb
iret
add
bound
rolb
jp
add
popa
dec
mov
mov
fldenv
addl
popf
jecxz
ds
pop
mov
cmp
jno
ds
movsb
ret
pop
loope
push
rcr
aaa
sbb
cmp
jl
mov
and
ja
cmp
pop
out
xorl
lcall
jg
jae
enter
stos
xor
jge
rclb
enter
test
rorb
xchg
into
in
shll
or
or
aam
sub
push
xchg
in
into
ljmp
je
clc
incb
push
lds
jge
xor
hlt
mov
and
cpuid
xor
arpl
sbb
mov
adc
or
ss
push
fcmove
loop
ds
adc
mov
and
add
mov
mov
mov
out
into
les
sub
dec
xor
sbb
shrl
or
jecxz
sub
inc
aad
out
xchg
scas
mov
xchg
xchg
cmp
cmpsb
aam
int3
daa
ds
lock
adc
cmpsl
cli
test
cmp
shlb
push
push
addb
pop
arpl
jp
outsl
mov
mov
adc
popf
cmp
cs
push
xor
daa
cli
dec
call
sbb
mov
lds
insl
sub
inc
insb
sbb
sbb
popa
jecxz
xlat
lds
and
mov
pop
add
mov
push
mov
sti
mov
jmp
aas
mov
rorb
loop
dec
and
ss
and
xchg
sbb
sub
addr16
sbb
popa
loope
mov
xor
inc
outsb
clc
cmpsb
out
fisubrl
xlat
or
ss
je
mov
in
adc
fucom
jg
nop
aas
inc
push
add
mov
out
fbstp
stos
lret
fwait
stos
mov
fmul
sarb
push
add
jl
loop,pn
pop
push
push
pusha
inc
dec
mov
dec
push
cli
push
jg
xor
rcll
pop
cli
fcoml
add
enter
mov
sahf
cmp
ljmp
rorb
ss
mov
cmpsb
scas
cmp
out
pop
lret
xchg
mov
rclb
lcall
pop
popa
es
push
mov
fmuls
adcl
outsb
pop
lret
push
pusha
adc
or
adc
scas
and
dec
out
ja
imul
xor
test
rcll
inc
fimuls
lods
out
mov
in
sub
pop
jge
ljmp
aad
xor
out
rolb
out
pop
jnp
aas
sahf
imul
enter
lods
cmp
cmp
in
jp
adc
add
in
xor
mov
sub
mov
inc
cmpsb
fsts
xchg
pop
and
mov
adc
sti
adc
es
jmp
inc
neg
out
iret
mov
js
insb
jnp
mov
aas
dec
mov
sub
mov
mov
sub
dec
fldt
pop
adc
jge
fcompl
inc
pop
pop
jge
cmpsl
ret
pushf
xchg
xor
push
add
push
mov
inc
cs
cmc
out
cmp
faddp
adcl
shrl
mov
jo
mov
cwtl
cld
and
add
pop
je
mov
test
xchg
add
dec
or
mulb
repz
fcoms
stc
mov
popa
mov
movsl
insb
loope
pop
adc
into
arpl
dec
mov
pop
xchg
jbe
push
aad
cli
and
fnsave
aad
mov
inc
lds
cs
xchg
lds
mov
lods
pop
pop
pop
dec
jns
nop
sahf
bound
xor
test
mov
or
js
mov
pop
add
mov
cs
jmp
loopne
imull
mov
and
jae
rcrl
mov
popa
loopne
mov
mov
ror
aad
clc
dec
lret
imul
fbstp
rcrl
mov
jnp
lret
test
add
cs
into
push
dec
mov
jnp
scas
mov
jae
mov
mov
bnd
movsl
mov
xchg
mov
add
sbb
push
mov
push
addr16
arpl
dec
add
and
clc
aas
dec
xor
pop
push
lcall
push
mov
pop
mull
lret
and
cmp
mov
cli
fstl
dec
xor
mov
adc
fiaddl
addb
cmpsb
inc
sbb
push
jno
cli
pop
cmp
fwait
add
les
dec
or
adc
sbb
je
or
inc
shl
stos
mov
call
rcl
addr16
iret
jae
out
clc
int
jmp
lahf
stos
aad
jno
lds
shlb
rclb
movsl
push
and
orl
out
push
sbb
xchg
xor
sbb
jnp
movsl
push
outsb
movsb
inc
jecxz
insl
mov
lcall
cmp
fnstenv
xlat
ffreep
adcl
sbb
cmc
testl
and
pop
arpl
xchg
push
cwtl
xchg
mov
cwtl
inc
fists
in
sbb
xor
sub
adc
fcomip
roll
xor
scas
push
xchg
or
dec
mov
inc
mov
mov
shlb
fidivrl
iret
ret
leave
xchg
int3
icebp
ret
pusha
in
mov
pop
mov
dec
es
sbb
stos
jmp
xchg
mov
sar
das
inc
sbb
dec
and
dec
stos
das
sbb
pop
aad
sub
ret
testb
lock
lock
mov
insl
sub
rcrl
jge
pop
dec
jne
cmp
adc
in
xchg
and
inc
cmpb
test
leave
jb
cltd
dec
add
sub
xchg
push
and
les
loopne
and
sarl
jg
jmp
or
pushf
fsubl
lods
jl
inc
sbb
daa
std
imul
fiaddl
pusha
fistps
repz
cmpsb
jle
mov
rorl
lods
and
in
jbe
cmp
push
outsl
xchg
cmp
add
fisubrl
xor
sub
cmpsb
mov
mov
stos
pop
ret
push
inc
inc
dec
xchg
insb
out
mov
cmc
push
aam
push
movsb
ret
or
xlat
out
sbb
dec
dec
or
ret
mov
pop
popa
or
loope
cmp
and
test
mov
or
xchg
and
inc
gs
mov
mulb
push
inc
shr
sbb
pop
add
popf
pop
mov
xchg
jbe
xor
in
test
jge
xor
outsl
sub
outsb
add
sub
ljmp
sub
repnz
dec
or
xchg
jbe
xor
adc
jae
es
in
rcrb
les
or
aaa
cmpl
cwtl
pusha
xchg
xchg
push
jmp
insl
hlt
popa
mov
pop
ret
inc
pop
mov
pop
es
push
je
push
or
mov
and
inc
daa
imulb
mov
and
hlt
sub
mov
mov
pop
icebp
pusha
mov
in
mov
or
xchg
push
popf
xor
mov
add
pushf
add
sti
push
test
adc
inc
mov
or
jns
sub
mov
and
dec
call
mov
xchg
aam
xchg
mov
minps
mov
test
repz
sti
and
adc
movsb
cld
or
mov
test
or
ljmp
addr16
mov
pop
adc
mov
dec
scas
or
push
push
test
adc
pusha
ja
push
jp
sbb
adc
ds
dec
mov
xlat
sub
xor
stos
andb
add
xor
ja
jb
xlat
std
lods
out
jbe
push
xchg
fildll
cmp
and
sub
push
pushf
cmp
daa
loope
push
lahf
out
inc
in
std
ss
inc
lods
mov
dec
mov
iret
stos
sub
mov
lahf
push
adc
out
dec
push
pop
arpl
test
adc
sub
lock
pushf
cli
cmp
push
xor
or
out
movsb
mov
push
push
and
outsl
pop
aad
addr16
pop
outsb
push
repz
xor
inc
sub
gs
or
insb
pop
int
js
add
and
inc
push
adc
sbb
mov
jo
icebp
inc
pop
sbb
adc
dec
pop
sbb
call
mov
xchg
mov
xor
stos
in
mov
scas
rcl
add
insl
mov
stos
mov
movsl
popf
adc
les
sahf
in
and
mov
int3
xlat
ljmp
call
pop
inc
xchg
sbb
pop
adc
scas
xor
lea
sahf
nop
cmp
pop
out
subb
neg
in
sti
push
jecxz
mov
lock
or
into
jmp
push
push
push
scas
sub
add
add
cmp
outsl
add
push
mov
cvtpi2ps
dec
inc
out
cmp
pop
rorb
lds
push
or
pop
sahf
jle
ficompl
dec
stos
pop
outsb
push
add
jo
test
ja
lds
in
in
jmp
jecxz
cmp
mov
and
mov
sbb
ret
popa
or
jmp
aam
jle
mov
xchg
cmp
dec
and
mov
add
add
push
dec
mov
push
mov
cmp
shrb
sub
outsb
push
repz
xchg
mov
lret
jnp
cmp
ret
ss
das
in
mov
jno
xchg
fdivrl
mov
pop
xchg
fcmovu
enter
mov
lock
inc
pop
pushf
insl
testl
sbbb
adc
int
ljmp
push
adc
xchg
pop
pop
push
cli
movsb
nop
imul
movsl
pop
cmp
loopne
scas
jae
or
fsub
sti
inc
push
inc
mov
mov
jmp
mov
and
enter
cmp
xor
mov
ljmp
mov
lcall
xchg
add
imul
jp
mov
lret
lds
scas
xlat
mov
aas
lods
lods
iret
or
push
loopne
faddl
xor
mov
dec
loopne
lret
or
cmpsl
adc
add
pop
sti
cmp
push
mul
jge
mov
push
pop
int3
test
mov
ret
xchg
dec
xchg
cmpsl
mov
mov
xor
in
or
pop
pushf
sbb
sbbl
es
push
xchg
rclb
out
rcll
dec
cmp
les
cmp
xchg
push
out
push
shl
gs
xchg
xlat
sub
mov
xchg
lret
mov
push
incb
jg
pop
fsubp
mov
mov
lock
xchg
shlb
mov
jbe
add
aas
cmp
fdivrs
int
or
loope
lret
mov
les
and
mov
pop
add
cmp
aas
add
mov
repz
mov
pop
int
popf
xchg
mov
sti
insl
pop
insl
sub
add
mov
sub
adc
rol
cli
push
inc
inc
xchg
out
xchg
outsb
jbe
stos
xchg
bound
xchg
push
mov
cli
loopne
xchg
jae
test
cmp
dec
mov
sub
sbb
mov
into
clc
rcl
xchg
std
hlt
jnp
jno
or
xchg
push
sub
daa
and
pop
fimuls
mov
inc
mov
pop
cmp
cmp
add
shlb
lods
push
enter
add
sub
inc
pop
js
sbb
add
cltd
ss
pop
adc
lods
push
das
cwtl
sbb
push
adc
in
mov
sti
or
mov
aad
add
pop
xchg
xor
stos
js
ds
pop
icebp
jg
scas
ss
inc
mov
dec
mov
xchg
push
jbe
push
into
mov
or
cwtl
cmp
cmpsb
mov
rolb
inc
test
dec
cmp
aad
xchg
ds
xchg
insb
push
ret
cmp
enter
sub
sbb
xor
lds
xor
gs
xlat
adc
testb
call
loop
jmp
fmulp
imul
test
adc
dec
stos
xchg
jb
fmull
in
pop
jo
out
mov
jns
ret
pop
adc
mov
flds
push
icebp
loopne
lcall
stos
loop
lahf
mov
sub
inc
adc
push
adc
mov
jno
mov
cli
ja
cli
xor
or
insl
dec
mov
mov
dec
push
add
mov
repz
in
push
roll
adc
lock
cmp
ret
sub
in
insb
mov
or
mov
pop
mov
cmpl
xchg
mov
push
cli
js
or
cmp
xchg
out
jns
mov
pushf
int
mov
popa
push
in
sbb
add
test
ret
mov
jp
cmp
pop
pop
scas
cmpsb
testl
out
lods
shlb
mov
xorl
inc
dec
movsb
pop
insb
mov
cs
rorl
in
inc
mov
call
sarl
insb
jge
or
mov
mov
mov
mov
cltd
and
mov
xor
xlat
adc
out
cld
sbb
gs
aam
or
inc
add
jl
shl
jnp
jge,pn
orl
imul
add
sub
mov
lock
orb
push
pop
fs
pop
gs
iret
insb
mov
ret
mov
pusha
psraw
jno
push
lahf
out
fistps
mov
arpl
cmpsl
mov
lret
incl
jge
dec
decl
or
inc
sahf
push
clc
js
add
sub
push
sbb
sti
pop
int
addl
dec
sub
mov
cs
fmulp
cld
xor
lahf
insl
cmp
out
popa
and
fs
clc
aaa
xchg
adc
add
and
sub
mov
push
cltd
rorl
dec
inc
inc
das
mov
mov
and
clc
sub
mov
dec
inc
shll
fwait
out
cmp
jo
js
iret
mov
shrl
xchg
jecxz
test
push
xchg
mov
inc
cmp
sbb
or
cmp
adc
clc
sub
push
mov
add
mov
sbb
mov
aad
cmp
out
stos
shll
stc
int
iret
xor
mov
out
scas
adc
or
jle
mov
clc
stos
hlt
pop
cltd
out
xchg
test
or
push
pop
scas
ljmp
and
jge
testl
cmp
insl
shll
iret
lock
fyl2x
add
scas
xchg
pop
cltd
loopne
aaa
sub
js
push
out
jp
bound
std
add
cwtl
fsubrs
nop
in
dec
pop
cmp
aam
js
mov
sub
lods
xchg
sti
pop
loop
mov
lret
std
mov
inc
daa
mov
outsb
push
jbe
das
and
cmp
out
cmpsl
sub
fidivs
push
push
or
fcomps
cmp
or
xorb
and
das
notb
xor
mov
push
add
mov
rorb
fimull
popf
cmpb
mov
jmp
arpl
cmp
inc
xor
je
adcl
dec
ss
mov
dec
dec
shrb
sub
mov
xor
or
adc
sbb
adc
and
shlb
push
test
out
mov
inc
sub
add
jb
pop
pop
aas
mov
sbb
xchg
addr16
cmpsb
push
xchg
cmpsl
or
inc
lds
push
cmpsb
xchg
xor
lds
fstl
arpl
inc
sub
sbb
out
fstpl
aaa
xchg
aas
jecxz
mov
mov
or
inc
int
xchg
pop
cltd
mov
mov
leave
stos
mov
orl
aad
cmp
test
xchg
jmp
xchg
loop
jo
adc
push
xor
mov
xchg
icebp
cmp
inc
pop
and
fldenv
cmp
lret
sub
or
sahf
add
xchg
or
sbb
icebp
pop
daa
fcoms
sbb
pop
lcall
in
add
lret
andb
adc
rcll
dec
cmpsl
dec
mov
mov
and
out
dec
test
jmp
in
or
call
pushl
inc
movsl
data16
clc
lods
dec
inc
pop
in
jle
scas
mov
ljmp
rcrb
jmp
dec
fisubs
mov
clc
in
test
ficoml
cwtl
lods
lret
push
inc
aad
lds
test
xchg
mov
nop
sbb
aad
repz
mov
cs
jl
inc
jg
pushl
and
pop
jmp
jo
cli
imul
mov
mov
push
push
mov
xor
fsubs
out
xchg
jecxz
cmpsb
push
ror
sar
push
mov
cmc
dec
xlat
faddl
push
cld
mov
loop
adc
add
mov
sub
xchg
mov
xor
push
sahf
and
xor
stos
movsl
ficoml
movsb
mov
stos
imul
push
nop
addb
mov
mov
mov
xor
imul
or
sbb
push
mov
lcall
fsubl
mov
add
adc
add
xor
push
out
imul
ljmp
sarb
push
mov
push
xor
add
stc
mov
cmp
sbb
imul
add
sub
mov
leave
lret
xchg
sbb
mov
jecxz
sub
jbe
dec
lods
xor
inc
and
cli
test
loopne
xor
aad
sti
mov
clc
inc
sub
add
sbb
in
int3
mov
jecxz
add
lods
jno
outsb
push
pop
xorl
ds
sub
pop
fcoms
repnz
cmp
add
stos
xorb
add
mov
jle
inc
sahf
test
cmovns
ja
insl
add
lahf
imul
xchg
icebp
push
dec
push
rorb
push
push
jle
outsb
test
imul
icebp
pushf
jl
push
insl
push
cs
in
add
leave
sbb
jae
pop
adc
lret
mov
clc
iret
or
inc
rcrb
cmp
push
pop
mov
aas
rol
fstps
dec
fwait
popa
xchg
push
sbb
roll
jae
or
inc
lods
or
je
insl
push
sub
xchg
add
xchg
mov
sub
or
in
mov
fsub
mov
push
push
enter
idivb
sub
mov
jne
push
pop
sub
lods
adc
mov
jb
stos
add
cmc
push
lea
mov
jmp
stos
and
test
aad
xor
hlt
xor
clc
xor
or
jg
mov
push
mov
lods
pop
scas
sbbb
cmpsb
pop
cmpsl
fisubrl
insb
insb
or
movsb
dec
xlat
int
lds
ror
fidivrl
add
scas
scas
pushf
sahf
jns
fldcw
push
push
mov
inc
and
pop
mov
aas
mov
je
pop
jno
inc
cmp
fwait
sub
pop
push
push
xor
adc
fsubp
enter
insl
push
jae
jns
scas
cmp
pop
and
push
push
sbb
adc
movsb
fisubs
dec
movsl
mov
inc
outsl
adc
mov
add
sbb
cmp
sbb
pop
xlat
ret
add
mov
mov
jg
movsb
call
test
jae
xchg
jecxz
and
or
out
out
insb
fisubrl
jecxz
jbe
int
insb
test
mov
sbb
lcall
push
lods
push
or
sahf
insl
mov
test
neg
and
iret
mov
mov
sub
mov
cmp
mov
adc
sbb
jns
jns
sbb
pop
imulb
lods
insl
dec
lock
in
inc
push
pop
in
jge
fmulp
jg
jns
xchg
jl
or
mov
aaa
insb
push
fisttpl
arpl
loopne
push
hlt
sahf
sti
test
fsubl
pop
arpl
repnz
mov
inc
pop
lods
sbb
fidivrs
hlt
mov
adc
pavgb
sub
subb
orl
lret
jp
jb
sarb
les
xchg
test
shl
loop
cmp
xchg
sbb
add
pop
cli
pop
enter
inc
sub
sbbb
jle
xor
xchg
jge
push
jae
jb
cmpsl
popa
lock
sbb
pop
jle
or
stos
mov
fsubrs
pop
fldcw
adc
in
movsl
adc
inc
ss
lods
pop
pop
jb
dec
fimull
int3
jbe,pt
adc
mov
inc
dec
cmpsl
cmpsb
inc
test
and
xchg
lret
int
push
jo
insl
mov
adc
lret
pushf
dec
sub
sbbb
or
or
aad
loope
lret
cmp
push
imull
movsl
sub
cmp
adc
inc
mov
pop
in
push
lods
dec
xchg
in
fldcw
push
jmp
js
cmp
mov
dec
test
imul
sahf
cmp
jmp
jl
aam
push
inc
xchg
mov
adc
in
pop
mov
pop
xor
sahf
add
dec
pop
mov
add
ds
fs
push
cmpsl
add
repnz
dec
xchg
pusha
jnp
cs
in
mov
loopne
outsb
andb
add
sti
fcmovne
clc
fucom
stc
pop
inc
mov
idivl
push
sbb
cmpsl
rorb
push
scas
or
xchg
pushf
adc
inc
push
pop
xchg
pop
xchg
ds
or
bound
mov
fwait
mov
push
pop
xchg
enter
push
and
xchg
mov
jb
test
fnstenv
sbb
pop
repz
jo
mov
lea
je
enter
ds
cmpsb
jge
into
cltd
jp
and
jae
jns
or
sub
stos
xor
stos
push
das
clc
jbe
push
jbe
out
rcr
pop
push
in
jne
repz
sbb
leave
stos
dec
dec
in
dec
xchg
xor
push
pop
or
outsl
push
into
pusha
js
sti
fnstcw
and
push
inc
xor
cmp
add
add
and
addr16
add
cmp
cmp
xor
ds
mov
push
jle
mov
call
mov
pop
mov
sub
cmp
inc
push
jnp
adc
test
mov
mov
shrb
stc
lret
xlat
xchg
int
xchg
and
das
mov
rcrb
or
aaa
adc
mov
adc
int
pop
daa
cmp
movsl
ds
sti
enter
or
mov
insb
push
sbb
aad
pop
mul
imul
int
inc
repz
testl
sub
xor
mov
inc
dec
lret
fsubs
cmpsb
repnz
fdivp
pop
adc
mov
lods
shll
out
jle
sub
shll
les
faddl
inc
sub
cmp
add
jbe
pusha
xor
cli
push
sub
mov
mov
pop
mov
inc
aam
dec
dec
cs
out
das
mov
jle
cmp
cmp
ss
inc
push
pop
outsb
pop
out
adc
fadds
push
or
mov
ret
lahf
out
jo
or
lock
xorb
dec
xchg
out
das
mov
add
mov
mov
hlt
es
test
push
adc
lock
pop
mov
cwtl
xor
stos
dec
ljmp
pop
mov
jmp
pop
dec
aaa
ret
mov
xchg
outsl
or
int3
shl
sbb
imul
imull
test
fdivl
mov
les
jae
lret
nop
fcmovb
int3
js
arpl
fisubrl
xchg
in
add
fsubl
xor
pop
and
adc
stc
jae
ror
jbe
adc
mov
and
cmp
push
cld
add
sub
in
daa
hlt
mov
mov
in
jle
imul
adc
push
lcall
jle
adc
sub
sti
hlt
and
xor
push
xchg
adc
fidivl
sbb
xorb
movsl
imul
sbb
and
mov
call
loope
imul
sarb
loopne
xchg
and
pushf
dec
xor
andb
inc
push
out
xchg
mov
mov
shll
sub
mov
adcl
and
inc
or
enter
daa
mov
or
loope
adc
sbb
dec
ds
je
dec
jge
out
mov
add
dec
mov
test
sbb
out
test
mov
mov
js
mov
lds
aaa
out
mov
test
mov
pusha
inc
fisttpl
out
adc
jg
popa
adc
neg
bound
pop
jge
and
sub
pusha
jo
ds
or
and
es
loope
cmovae
mov
push
mov
sub
addr16
push
adc
lcall
cltd
insl
rolb
push
cmp
add
inc
andb
xor
inc
ds
push
pop
adc
push
repz
or
sarb
mov
adc
clc
or
mov
out
mov
aam
pusha
shll
and
add
mov
shlb
add
testl
lock
push
subb
dec
cmp
pop
cmp
pushf
lods
fldt
sbb
repz
jmp
das
scas
cmp
jnp
cmpb
imul
nop
or
inc
xchg
scas
push
insb
call
jecxz
aad
ret
push
ljmp
or
repnz
lds
jmp
sub
jnp
xchg
jne
vmwrite
jl
popa
jmp
sbb
jle
sub
nop
mov
jmp
push
ja
hlt
mov
ret
subb
cmpb
lcall
pop
dec
sbb
sbb
jp
cmp
insb
addb
push
inc
imul
pop
imul
lret
call
fwait
jb
mov
fs
add
adc
inc
jp
mov
mov
sub
test
addr16
xor
outsl
aam
data16
pop
cli
sbb
cmpsb
adc
and
out
stc
jmp
or
adc
cmp
push
cmpsb
sbb
out
idivl
cmp
mov
out
jecxz
lret
out
adc
and
xchg
add
dec
sbb
insb
cmp
push
xchg
ret
hlt
cltd
imul
push
xchg
dec
sbb
inc
mov
mov
adc
insb
xor
pop
das
aaa
pop
mov
je
adc
xchg
pop
xchg
out
inc
or
rolb
fcmovnbe
pushf
mov
add
sub
adc
repz
call
leave
ja
pop
sbb
mov
ss
fildl
cmp
push
ljmp
lock
sub
adc
adc
adc
mov
and
cmpsb
sub
jge
test
loopne
or
hlt
jp
dec
stos
bound
in
and
mov
xchg
popf
cmpsb
sbb
xor
sbb
push
mov
cmp
call
ljmp
fistps
scas
js
je
sti
cs
movsb
jg
add
and
int3
adc
inc
pop
sub
mov
mov
jl
movl
xchg
adc
pop
pop
cmp
insl
je
test
jae
fnsave
push
rcr
jns
addl
inc
daa
in
ja
scas
mov
mov
mov
pusha
movsl
dec
scas
mov
daa
dec
sbb
daa
and
pop
mov
push
xor
subl
outsb
jb
xchg
pushf
outsl
ja
bound
sarb
out
in
sub
jl
imul
push
das
pop
clc
mov
mov
aam
push
dec
adc
pop
xor
lods
dec
push
mov
cld
cmpsb
cmp
ret
lock
pusha
lahf
gs
cmp
rolb
outsl
pop
pop
testb
stos
jmp
in
sbbb
jp
dec
fsub
pusha
xchg
popf
jl
fstpt
xlat
fwait
cwtl
hlt
mov
fsubr
das
fs
or
fwait
add
mov
fisubrs
or
cmp
in
shl
push
lock
ret
fcomps
pop
jmp
sbb
push
aas
idivl
jmp
outsl
mov
scas
inc
cmp
lret
movsl
enter
sub
jo
xchg
out
mov
pop
xchg
push
cmp
cwtl
xor
jg
fsubs
xor
outsl
sarb
push
sbb
sbb
loope
aas
adc
cltd
fmull
pop
jp
lock
inc
aaa
test
add
inc
lret
push
stos
mov
out
or
sub
xchg
nop
push
push
cmp
lods
xchg
jge
or
es
insb
dec
adc
subb
push
adc
mov
dec
and
cs
fisubl
xchg
fldcw
repnz
and
sbb
fwait
bound
add
inc
pop
mov
push
in
stc
int
dec
icebp
pusha
and
jae
es
sbbb
sub
pop
mov
rorb
pusha
xor
dec
imul
jo
icebp
fst
mov
and
push
cmp
pop
jae
or
add
iret
outsb
mov
aam
inc
jp
jbe
scas
cmp
dec
xlat
inc
push
fistl
rcll
jae
aas
in
push
int
and
icebp
xor
sbb
movsl
in
inc
xchg
mov
ret
cltd
push
test
push
mov
insl
imul
lock
imul
ss
push
push
adc
insl
mov
or
loope
lods
out
sbb
insl
push
jb
es
and
ror
jmp
shrl
mov
fldcw
call
and
push
ret
push
movsb
jmp
sbb
sti
mov
cmp
adc
in
sbb
and
push
push
adc
push
inc
sbb
dec
mov
fwait
cmc
mov
mov
leave
ds
fs
cmp
mov
dec
sbb
xor
pop
jno
pop
push
ds
pop
xchg
inc
or
push
stos
adc
xchg
xor
in
leave
push
shll
mov
insl
cmp
iret
cmpsb
cld
mov
int
ret
xor
jle
scas
or
fdivl
shlb
cmp
test
sahf
out
leave
repz
pop
imull
sti
inc
das
pop
in
cmp
dec
enter
sbb
mov
mov
std
mov
or
cmc
mov
pop
bound
ss
mov
pop
jmp
mov
cs
pop
jmp
dec
mov
mov
add
bound
in
jnp
nop
mov
sbbl
mov
mov
xchg
mov
bnd
cmp
out
rcrl
add
push
mov
and
pop
mov
mov
je
push
and
dec
dec
outsl
ret
sbb
sbb
cmp
and
and
jmp
in
jbe
lods
inc
mov
clc
pop
je
imul
cmp
mov
data16
nop
dec
pushf
cltd
xor
mov
data16
mov
test
xchg
and
pop
je
dec
mov
sarb
push
rcrb
jmp
es
mov
push
out
jbe
cmpsb
adc
jnp
pop
aam
aaa
popa
ljmp
adc
call
bound
fs
arpl
sbb
ds
addr16
and
push
loopne
mov
rclb
mov
fnstcw
loop
ds
push
push
and
out
mov
mov
loopne
xor
lds
sahf
hlt
mov
jmp
mov
ret
out
pop
mov
test
rcrl
pop
bound
push
push
xor
mov
imul
lret
mov
test
sbb
mov
pop
pushf
pusha
lea
xor
lock
outsb
lea
cmpsl
mov
and
ja
sub
add
pop
cmp
lock
jb
push
fbstp
pop
enter
ja
push
lock
pusha
stos
push
cmpsl
push
inc
mov
jb
xchg
push
dec
test
mov
push
pop
pop
arpl
daa
cmp
cmp
adc
popf
mov
iret
cmp
lcall
cwtl
jno
mov
and
pop
ret
cmpsb
lret
mov
fdivrl
mov
sbb
cmpps
clc
loopne
sbb
or
xor
pop
inc
insb
jnp
es
or
and
xor
pop
clc
sbb
jl
add
aaa
movsb
push
and
dec
xlat
aad
xor
clc
push
add
js
pop
les
mov
test
inc
xchg
xchg
insb
pop
sub
aas
jbe
add
iret
jle
pop
ret
mov
leave
repnz
xchg
sar
xchg
enter
test
cmp
ret
sub
enter
rep
adc
xor
cwtl
lds
inc
mov
xchg
rcrl
mov
into
mov
popa
inc
ret
xchg
push
add
mov
aaa
ja
sahf
lea
push
sub
push
popa
adc
clc
mov
dec
push
adc
xor
or
xor
repnz
ss
pop
jecxz
leave
pop
jp
sbb
xchg
mov
dec
in
xchg
pushl
test
outsb
xor
outsl
addb
stc
popf
dec
jle
push
ja
fucom
xor
fstl
fs
mov
cld
cmp
and
push
fdivr
sarl
outsl
cmpsl
push
and
pop
imul
std
sub
mov
leave
push
xchg
mov
loop
xchg
enter
pop
xor
and
mov
das
pop
cmc
adc
jmp
and
mov
mov
mov
subb
push
mov
or
mov
lods
cmp
sub
lods
in
push
sub
mov
push
data16
rcrl
inc
sbb
jae
int3
rclb
cmc
out
ss
push
icebp
fbld
mov
jnp
push
push
arpl
pushw
mov
pop
cltd
lret
add
fidivs
cwtl
in
lcall
jns
inc
cmp
and
loopne,pt
mov
je
repnz
dec
xor
movsb
stc
in
inc
mov
mov
aas
in
mov
dec
jecxz
lahf
cs
inc
pusha
ds
push
add
lcall
stos
pop
dec
pop
outsl
push
das
outsb
sbb
cmpsb
lods
outsb
sbb
sbb
sbbl
test
push
sar
popf
mov
push
sub
idivb
stos
or
daa
mov
inc
popf
cmp
in
sbb
jmp
lahf
sahf
jnp
sahf
xchg
dec
fildll
xor
int
pusha
out
enter
dec
push
popa
das
push
pop
xchg
shll
add
addb
and
add
push
push
fwait
sbb
pop
xchg
or
test
arpl
out
xchg
sub
cmp
sbbl
pusha
or
loop
mov
xchg
and
nop
insb
mov
add
xchg
leave
loop
das
shrb
and
cs
repz
scas
lahf
mov
insb
mov
pop
jnp
sbb
xor
in
cmp
loopne
fisttpll
xchg
jbe
inc
and
inc
into
pop
adc
mov
repz
inc
pop
sbb
cmpsb
scas
mov
mov
mov
aas
push
jmp
mov
sbbl
push
movsb
cmc
xchg
lods
mov
incl
out
cmp
xor
mov
divl
cmpsb
or
gs
les
cmp
pop
mov
pop
std
mov
xchg
int3
jmp
loop
jne
push
ret
jbe
mov
fidivl
std
aas
sbb
mov
jae
push
adc
call
push
mov
in
repz
jle
mov
jmp
shlb
pop
jecxz
mov
sbb
mov
dec
add
xor
add
push
adc
movsb
in
mov
and
clc
int
jp
pushf
sub
imul
jmp
mov
jbe
mov
lock
ret
flds
adc
xchg
xor
sbb
lods
jecxz
mov
and
xor
fmull
fucom
popa
jne
es
inc
sub
push
jl
fistpl
fsubp
cld
popa
lret
pop
pop
dec
ja
sub
test
sub
inc
mov
sub
cwtl
leave
sbb
popa
jno
bound
xor
pop
dec
fidivrs
out
out
mov
push
jge
mov
jbe
mov
or
push
xlat
mov
enter
insb
cmp
inc
push
mov
gs
sbb
push
ret
mov
test
mov
push
mov
movb
sub
dec
xor
xchg
shl
mov
mov
cmc
andb
cmc
lds
and
lea
roll
add
dec
cwtl
sbb
repnz
movsl
rolb
adc
fs
les
push
sub
nop
or
sub
out
jnp
test
inc
sbb
pop
inc
sub
mov
movsl
mov
loopne
fs
pop
push
clc
push
cmp
dec
test
xor
stos
testb
xchg
lea
and
adc
repnz
fsubrs
xor
push
pusha
popa
sub
cmp
mov
fldl
inc
add
xlat
mov
xchg
jmp
xchg
shlb
fs
pop
cld
inc
sub
out
mov
shlb
gs
sarb
push
mov
imul
ret
imul
popa
xchg
mov
lea
mov
ret
es
imul
fadds
insl
pop
push
xchg
addb
or
pop
sub
nop
bound
faddl
leave
jp
out
sbb
and
adc
loopne
mov
fimuls
out
sub
test
test
std
fstpl
xlat
fistpl
sbb
jl
cmp
dec
fldcw
lods
outsl
out
and
pop
fidivrs
out
pop
mov
cltd
je
lret
sarb
push
sbb
data16
scas
aaa
dec
test
adc
cwtl
xchg
push
push
aaa
jg
add
push
fisttpll
pop
ljmp
xor
ja
ret
jecxz
sub
aam
mov
adc
mov
fldcw
lret
inc
adc
testl
push
leave
repz
les
icebp
je
jp
sub
pop
mov
sti
shl
xchg
popa
int3
push
pop
lods
cmp
shlb
test
pop
add
xor
jle
mov
xchg
inc
outsl
std
pop
xchg
adc
cmp
inc
pop
pop
pop
into
fwait
dec
pop
mov
imul
xlat
mov
sbb
sti
add
fcmovnb
sahf
enter
lods
fiaddl
xchg
movsb
adc
push
daa
fmul
mov
rcrb
pop
fadds
or
int
push
fmull
lods
lcall
scas
add
hlt
cwtl
push
sti
lcall
mov
mov
test
loopne
aad
and
xor
mov
or
adc
push
xlat
sub
push
push
lahf
cmpsb
ret
repnz
insb
jp
and
xor
mov
mov
sbb
or
sysenter
jge
movsl
lds
lahf
pop
sbb
or
je
inc
stos
jae
add
call
inc
xchg
cmp
sarb
xchg
stos
repz
inc
fsubrs
and
mov
mov
testb
cld
ret
and
sbb
cmp
pop
test
mov
dec
loopne
ja
insl
mov
jle
outsb
sahf
add
es
test
sbb
xlat
lds
adc
insl
cmp
imul
aas
push
popf
inc
inc
lcall
dec
fbld
and
push
cs
out
push
hlt
inc
xor
jg
pop
pop
add
jle
push
dec
stc
dec
jne
mov
movsl
popa
xchg
rcr
clc
mov
out
es
popf
xor
mov
jmp
xchg
test
and
add
fstpt
cmp
pop
adc
mov
and
js
jge
mov
xchg
mull
cli
aas
mov
mov
inc
jmp
mov
jmp
gs
pop
enter
dec
lods
jge
ja
mov
loopne
ss
push
and
out
repnz
shrl
outsl
ljmp
push
mov
xchg
decb
mov
pop
ds
xor
outsb
jmp
add
arpl
jge
jmp
add
mov
jge
mov
hlt
dec
adc
jne
es
enter
movsl
sbb
jge
add
sahf
ja
mov
xor
dec
jmp
and
sbb
mov
or
jmp
into
inc
or
pusha
hlt
sarl
mov
popa
inc
or
repz
sub
xor
pop
cmp
inc
pop
push
xchg
sarl
sbb
or
jge
fdivrs
xchg
add
test
shlb
test
xor
cld
out
push
ja
arpl
pop
adc
push
div
lock
pop
das
incb
and
and
mov
sbb
daa
das
inc
lods
notl
and
mov
je
aaa
sbb
jmp
jnp
jnp
inc
jmp
jmp
dec
jge
dec
dec
adc
xor
add
adcb
scas
push
cmp
add
rcpps
xchg
ror
mov
and
xlat
ljmp
adc
sbb
dec
cmp
fwait
int3
into
xchg
aaa
les
punpckhdq
xlat
scas
sub
into
xchg
sub
movsb
scas
or
lods
jae
mov
push
stos
pop
lock
call
stos
push
lret
sub
btr
movsl
div
sbb
testl
pop
rcrl
jg
enter
adc
scas
mov
inc
xor
lret
pusha
cs
add
add
cs
mov
sbb
in
add
popa
enter
jmp
xor
pop
movsb
sub
daa
ja
xorl
cwtl
inc
gs
mov
xlat
jns
sub
outsl
push
cmp
aad
sub
sub
outsl
mov
sub
pop
movsl
movsb
ret
and
inc
or
adc
or
gs
or
mov
mov
dec
jecxz
inc
xor
push
mov
cwtl
mov
or
mov
sbb
push
sbb
push
dec
aad
dec
mov
or
imul
aaa
adc
pop
shlb
movsl
mov
mov
jecxz
mov
lahf
sbb
aas
sarb
mov
or
pop
dec
aam
or
sub
mov
shl
jecxz
or
das
in
and
dec
mov
lds
push
pop
or
mov
stc
cmp
ja
imul
inc
std
fsubr
mov
and
inc
jp
xlat
fmull
rolb
or
inc
jp
into
xchg
xchg
xchg
add
xchg
arpl
int
shlw
dec
hlt
out
movsl
inc
and
out
sub
mov
je
stc
cmp
adc
cld
icebp
jb
iret
cmp
fst
jnp
inc
loopne
and
sbb
sbb
push
mov
iret
xor
leave
mov
pushf
jbe
adc
lret
jle
inc
xor
pop
imul
clc
cmp
cmp
lcall
mov
pop
cwtl
inc
inc
adc
ljmp
dec
rcrl
adc
pop
fwait
repz
loope
adc
push
xchg
lock
push
cwtl
jbe
or
cmpsl
enter
and
adc
jp
adc
xchg
sahf
sahf
or
out
inc
push
repz
pop
sub
fidivl
shr
adc
mov
jno
sbbl
jnp
divb
push
push
repz
je
ret
lahf
in
or
insb
stos
and
lret
jp
stos
jnp
mov
add
adcb
out
ss
inc
cmp
shrb
jns
test
mov
push
movsb
mov
push
loopne
out
inc
dec
mov
cmpxchg
sbb
pop
stc
cltd
mov
mov
test
rcr
jbe
xchg
jo
pushf
mov
movsl
lea
xor
shrb
jecxz
out
mov
dec
add
mov
jnp
jmp
cmp
or
xchg
pop
sub
test
stos
sarl
xchg
mov
mov
popa
and
cmp
lcall
inc
dec
cmp
fmuls
shrl
sarb
idivl
enter
lock
iret
xor
xchg
lret
cltd
inc
lds
js
fsubrl
mov
xlat
dec
sub
pop
adc
jl
xor
pushf
scas
xlat
push
pop
ror
cmpsl
rcll
jp
mov
jmp
add
pop
out
push
add
dec
xchg
movb
aam
aas
movsb
sbb
mov
jne
sub
or
faddl
in
cld
inc
pusha
and
insb
or
rorl
adc
jp
mov
xchg
mov
jno
out
sub
dec
add
push
test
or
xor
in
out
sti
or
xor
sar
jg
call
xchg
pusha
fucomi
ja,pt
out
in
inc
xor
cmp
andb
cmp
je
inc
scas
sub
pop
jnp
lock
imul
inc
ljmp
int
cmp
dec
pop
mov
jb
mov
js
ficoms
mov
and
inc
pop
ja
or
push
adc
lds
push
lods
xchg
insl
adc
jo
dec
lds
icebp
xchg
push
je
lahf
cmpsb
xchg
stos
lods
pop
cs
mov
push
mov
adc
faddl
fdivr
push
in
pusha
cmpsb
sbb
push
pop
outsl
ss
cmp
lods
hlt
mov
pop
rcrl
or
mov
mov
adc
inc
jl
aas
inc
add
cmp
jl
pop
int
cmpsl
push
data16
lret
mov
mov
fmull
imul
push
mov
pop
xchg
mov
dec
pop
js
aas
shlb
pop
loope
cmpsl
pushf
push
sub
mov
adc
inc
add
lahf
imul
push
call
cs
or
test
mov
mov
lea
inc
test
pushf
xchg
lret
or
movsb
push
fisubrs
xrelease
subl
fistps
mov
popf
mov
outsb
mov
pop
mov
and
in
rclb
and
imul
fmull
adc
inc
jb
sbb
mov
xchg
xchg
flds
pop
into
add
sub
jbe
adc
pop
push
mov
int3
lea
gs
lock
jno
cltd
decl
aam
xchg
jle
sbb
push
fidivl
mov
lcall
mov
push
pop
in
lahf
jno
inc
shrb
cmpsb
fildll
adc
dec
dec
xchg
clc
jmp
hlt
adc
inc
xchg
add
and
or
test
xchg
jle
aam
test
sbb
pushf
neg
stos
sbb
push
push
mov
xor
cs
subl
ja
sarb
and
cli
shll
pusha
or
movsl
add
ret
xchg
sbb
mov
cwtl
cmpsb
aaa
push
add
xor
push
pop
mov
jb
fwait
outsl
jmp
leave
ret
hlt
nop
xchg
cmp
mul
pop
jbe
scas
imul
mov
lcall
les
xchg
and
lods
pop
loope
jae
repnz
push
orl
pop
mov
scas
je
cmp
lahf
push
test
inc
cli
popa
or
xchg
jne
jo
out
xchg
popf
lahf
push
mov
pop
jno
xchg
push
inc
lods
in
jmp
mov
sbb
jae
lock
popf
and
xor
and
xchg
jge
mov
addr16
inc
in
cmp
xorl
adc
add
cmp
and
push
mov
test
pop
mov
lret
scas
stos
test
jno
add
mov
cmc
adc
dec
repnz
xchg
mov
mov
and
lea
lods
jns
jns
add
outsb
dec
xor
fsubr
hlt
xchg
sub
pop
sub
cli
mov
jb
in
repnz
dec
fcoms
scas
in
das
mov
cmp
pop
push
inc
popf
jp
in
fldl
fbld
out
into
jnp
pop
sarl
into
arpl
mov
push
xchg
or
mov
test
or
out
cmpsl
pop
mov
ss
xor
mov
xchg
inc
push
or
sbb
sub
push
push
cmp
mov
dec
lods
adc
fisubs
loope
data16
in
movsl
push
mov
xlat
sub
cmp
dec
dec
xchg
jle
stc
es
pop
icebp
pop
incl
jle
mov
dec
aad
sti
ficoml
or
fsts
aam
fsubrl
mov
cltd
mov
xor
testl
aaa
xchg
fisttpll
cmc
bswap
or
mov
sbb
inc
mov
and
hlt
test
push
adcl
cmpb
aad
mov
and
jb
push
nop
out
pop
pop
mov
lea
stos
imul
lahf
leave
insl
test
mov
xchg
test
mov
cmp
jle
push
jae
jmp
jl
inc
cltd
xchg
push
xor
xor
mov
push
push
inc
je
cwtl
fmuls
or
cmp
dec
insl
push
mov
sbb
inc
push
shlb
xchg
aad
jmp
shrl
inc
pop
clc
ret
ss
scas
out
inc
test
mov
cli
mov
outsb
inc
shll
pop
mov
shll
cmpsb
push
cwtl
jae
out
add
mov
push
cmpsb
jmp
pop
testb
sbb
in
jno
cmc
dec
xchg
shrl
push
sahf
push
pop
mov
xor
lock
sahf
movsl
lods
mov
filds
cmp
lcall
call
nop
negl
adc
jg
xor
insl
mov
jp
pop
loopne
arpl
pop
lret
cld
sti
pusha
ss
outsb
jns
jp
jl
or
pop
pop
sbb
aas
push
xchg
push
xchg
loope
jmp
cmp
and
mov
sub
push
loop
jnp
into
push
cwtl
or
xchg
jnp
push
mov
ljmp
int3
and
outsb
ds
jnp
or
cmp
orb
cmp
push
in
and
cwtl
rclb
into
pop
jg
insl
pop
xchg
sub
dec
imul
stos
sbb
out
lock
mov
sbb
mov
sti
sub
leave
cmp
mov
idiv
sub
dec
mov
adcb
mov
xchg
adc
int3
pop
dec
sti
ret
loop
or
js
loopne
shl
nop
mov
sbb
push
cmp
sti
mov
mov
xor
add
pusha
jns
clc
mov
movsl
jp
pop
sub
push
dec
mov
loop
and
mov
jge
aaa
mov
mov
inc
add
aad
and
sbb
mov
pop
hlt
jbe
cmc
arpl
xorb
xor
xorl
xlat
shlb
or
test
fxch
mov
sar
pop
dec
in
inc
cmpsb
mov
mov
movsb
and
mov
lock
and
push
jb
pop
push
jp
dec
sti
notb
jae
add
adc
adc
outsl
jle
add
loope
jmp
and
mov
or
and
add
dec
stc
xchg
dec
mov
int
jle
xchg
lret
xchg
push
inc
mov
cmp
pop
pop
test
add
icebp
mov
mov
je
fstps
mov
stos
adc
or
insl
push
adc
lea
int3
test
dec
out
insl
mov
sub
add
xor
cmp
xor
pop
test
xor
mov
iret
mov
xchg
jns
in
stos
push
lock
sbb
mov
pop
shr
movsb
movsl
data16
int3
mov
loop
jnp
popa
push
iret
cmp
outsb
mov
mov
int
jle
addr16
popf
push
mov
pushf
mov
pop
sti
and
in
jmp
fs
cld
je
data16
daa
fistps
xor
mov
add
add
aas
mov
loope
inc
lods
popa
ss
lcall
lret
leave
adc
lea
in
push
xlat
loope
xchg
inc
dec
mov
dec
imulb
fmull
pop
and
iret
jb
std
or
jns
test
push
pop
mov
add
pop
je
repz
arpl
sbb
mov
mov
rcl
inc
mov
ds
rcrb
adc
fwait
mov
cmc
je
sbb
pop
and
mov
sahf
jnp
vsqrtps
pop
hlt
pop
mov
enter
repz
jbe
std
sbb
dec
pop
in
add
mov
jo
cwtl
int
and
add
mov
cmp
mov
dec
mov
mov
sub
xchg
roll
sub
push
jno
pushf
push
out
lcall
jns
inc
jg
stos
idivb
xchg
cmp
and
mov
into
sbb
icebp
sub
jne
insb
jb
or
mov
and
arpl
outsb
mov
push
es
mov
pop
out
push
xor
data16
addl
push
cmc
cmp
xor
jle
sbb
mov
andb
mov
ret
ret
inc
mov
inc
enter
cltd
mov
sbbb
cmc
ss
pop
les
ljmp
lods
outsb
or
movsl
rclb
push
xchg
addr16
adc
lea
insb
lea
dec
cwtl
in
into
popf
push
mov
fwait
int3
outsl
test
add
shlb
aam
push
xchg
and
mov
dec
push
ja
roll
sub
mov
stos
movsb
push
cltd
mov
fadds
xor
sbb
call
sti
bnd
mov
lods
and
cmc
scas
loope
lods
rcl
inc
syscall
lahf
and
std
gs
idiv
repz
int3
lds
mov
ja
inc
cmp
inc
inc
sub
dec
sbb
sti
ds
push
and
in
enter
push
or
leave
fistl
push
je
sub
mov
push
dec
lahf
pushf
in
mov
adc
js
push
pop
cmc
dec
push
rorl
adc
scas
mov
pop
sbb
test
stc
lcall
jg
pop
loopne
adcb
adc
repz
call
pop
call
movsl
xchg
sub
pop
push
gs
fnsave
cmpsl
andb
adc
adcb
mov
cwtl
xchg
scas
cwtl
cmp
add
ljmp
fwait
and
out
dec
xorb
cmp
stos
std
imul
stc
popf
mov
fcmovnb
out
jne
outsl
mov
jg
int
mov
jo
cltd
insb
or
pop
fwait
addr16
scas
outsb
sti
mov
mov
out
jae
cs
outsb
lods
and
aam
adc
out
mov
leavew
adc
es
jge
xchg
jnp
pop
ret
jl
xlat
jnp
out
movl
push
popa
rolb
sbb
leave
push
enter
aam
inc
jae
cli
repz
xchg
mov
xchg
fs
jl
cmp
test
push
inc
mov
lret
mov
ret
jl
or
pop
lcall
sbb
mov
and
test
add
outsb
jecxz
mov
lret
xchg
clc
mov
arpl
cmpsl
lret
fadds
leave
xchg
movsl
xor
test
xchg
push
add
mov
mov
hlt
addl
xadd
mov
dec
rorl
fimull
sub
xor
outsb
dec
add
out
adc
clc
scas
orl
lcall
lret
mov
daa
jg
cmp
and
hlt
and
outsb
call
mov
outsb
inc
xorl
ficoml
popa
inc
mov
daa
pushf
dec
add
mov
sar
adc
dec
imul
cvttps2pi
sbb
mov
cli
fwait
push
mov
xchg
fisubs
inc
dec
insl
xor
fdiv
imulb
lahf
cmpsl
inc
inc
arpl
gs
popw
jmp
jle
adc
mov
je
inc
loop
lcall
into
jbe
lods
iret
fwait
movsl
push
sbb
push
inc
xchg
xchg
testl
push
adc
lds
xchg
mov
sub
in
cs
mov
repz
jns
and
jmp
subb
mov
jne
roll
lods
push
leave
mov
out
aas
dec
or
sbb
push
cli
cmp
or
lret
inc
sbb
dec
arpl
or
jnp
jb
pop
das
aas
mov
sti
daa
and
add
daa
repz
outsb
push
repnz
mov
or
loopne
or
jmp
lods
incb
xor
cmp
or
lea
mov
test
aam
aad
jle
cmp
int
cmp
pop
imul
inc
inc
add
or
inc
xor
jo
push
mov
push
xchg
cmp
fwait
andb
aam
mov
leave
stos
sub
dec
jle
mov
cmp
add
or
call
adc
lcall
lds
out
sbb
dec
xchg
dec
adcb
sti
enter
adc
push
jle
push
or
xor
xchg
outsl
cwtl
mov
xor
call
inc
aad
mov
push
mov
lds
sub
xchg
js
lahf
ss
fnsave
fwait
into
pop
adc
data16
jbe
xchg
repz
lods
jle
cmp
pop
out
shlb
in
jl
sub
ret
pop
inc
dec
mov
xchg
clc
popa
push
push
mov
mov
xchg
stos
addr16
or
rol
mov
test
jge
gs
mov
scas
out
aaa
cmp
push
dec
mov
adc
and
mov
sbbb
sub
lahf
mov
cltd
xor
fsubr
fbld
mov
xor
push
aas
pop
add
push
jg
les
push
and
adc
jns
and
rorl
in
mov
stos
fwait
mov
fildl
ljmp
cmp
xor
mov
sub
xchg
jb
inc
add
lret
xlat
and
or
xchg
les
cmp
fadds
cmp
jnp
jmp
sti
jle
lods
ret
push
sub
cld
lods
sbb
ja
outsl
outsb
and
pop
jbe
adc
or
and
lret
push
mov
ja
popl
mov
sbb
xor
js
xchg
out
cwtl
in
popf
push
dec
add
push
gs
aaa
fbld
in
arpl
aad
mov
adc
pop
push
js
outsl
pop
dec
sbb
dec
xchg
sbb
scas
outsl
testb
jg
sti
sbb
mov
and
mov
push
ds
xchg
mov
ds
fsubrl
inc
fldenv
push
pop
das
nop
add
jl
or
cmpsl
int
mov
and
scas
mov
pop
insl
cmpb
leave
nop
call
jne
daa
ffreep
dec
sub
xchg
xchg
cltd
add
sbb
and
dec
sbb
scas
jg
pop
pop
jecxz
mov
or
fnstsw
push
add
pushf
lods
lahf
jb
lret
push
push
dec
xlat
push
sbb
adc
loopne
ss
xchg
enter
ja
pop
jne
sub
mov
dec
in
add
incb
sbb
pop
fcoms
daa
xor
aaa
push
mov
mov
stc
fsubrl
call
cmpsl
shlb
mov
enter
xchg
push
lods
xchg
mov
adc
mov
inc
cmp
mov
movsl
mov
imul
jnp
sti
loope
sub
adc
and
jno
jecxz
sbb
xor
ja
jae
pop
pop
iret
push
dec
sti
cmp
inc
cmc
inc
add
fsubrl
push
cmp
jbe
mov
es
rclb
pop
sbb
push
ja
sub
and
in
mov
mov
jp
xchg
fnstcw
fstpt
add
mulb
fwait
jg
lret
xchg
xchg
loope
and
std
sbb
adc
gs
lods
xchg
cld
push
dec
js
int
and
out
jl
out
add
and
dec
cltd
popf
sbb
pushf
cmpl
es
and
mov
jp
inc
popa
jle
sub
sbb
cmc
cli
sub
fsubl
into
adc
pop
inc
ret
bound
xchg
cmc
das
int
jne
clc
cltd
xlat
daa
ja
xor
popa
lock
and
mov
cmpsb
lds
cmpsl
mov
fmuls
mov
aaa
adc
out
jbe
cmc
iret
xchg
insb
sbb
mov
dec
mov
hlt
nop
dec
xlat
push
dec
mov
push
push
es
shll
aam
cmp
xchg
stc
rorb
mov
push
add
and
lock
leave
sub
shr
xchg
sbb
cmpsb
sub
push
fidivl
adc
bound
sub
push
test
add
jp
cltd
push
lahf
outsb
pop
ss
sahf
popa
cmp
movsb
xor
sub
dec
xor
xor
add
mov
xchg
and
pop
cwtl
pop
ffree
std
icebp
xor
xchg
shl
cmpsb
adc
pop
ret
aaa
into
xor
lahf
fldcw
mov
ss
jge
jb
add
cmp
int3
dec
and
mov
das
mov
loop
inc
cmc
jne
leave
mov
cmp
pop
pop
fldenv
insb
cmp
mov
and
ret
inc
mov
cmp
mov
sbb
out
gs
mov
push
enter
mov
in
pusha
ret
lods
fs
rorb
pop
jbe
sbb
push
ss
jae
cs
pop
push
push
cmp
shll
fnstcw
fimull
inc
nop
int3
sub
push
mov
xchg
into
pop
adcl
mov
test
add
adcb
mov
testl
mov
xchg
sub
jmp
add
lahf
sahf
fs
xor
add
ror
or
dec
xchg
and
mov
and
rorb
dec
pop
out
stos
pop
ljmp
add
nop
dec
cmp
jp
sub
pop
mov
rol
movb
push
repnz
cwtl
dec
or
cmpl
jo
fisttpl
ja
mov
add
lock
inc
xor
inc
jnp
or
fwait
out
dec
mov
cld
cmp
bound
and
sbb
leave
lahf
sub
roll
fdivrs
loop
cld
sbb
mov
andb
xchg
mov
push
pop
sub
fiadds
mov
jne
pop
notb
adc
dec
sbb
mov
inc
inc
mov
cs
fsubrl
pusha
cmp
inc
lcall
mov
out
popa
shlb
lret
add
ss
js
cwtl
lods
ss
sbbl
fbld
jg
std
xor
push
add
dec
xchg
sub
xor
and
xor
orb
sbb
in
pushf
out
pop
lea
imul
mov
mov
pop
pop
fwait
test
jg
push
int3
cli
dec
jno
xchg
das
xchg
mov
jge
lock
cwtl
out
mov
add
cmp
pop
out
adc
mov
out
clc
shl
mov
gs
ds
cmp
jmp
in
loope
ss
push
or
inc
sahf
jnp
popf
fcomps
cwtl
repnz
inc
rol
mov
pop
xchg
mov
cwtl
pop
cmp
aas
jb
js,pt
fidivrl
rorb
dec
rcrl
andb
test
dec
nop
sbb
sbb
mov
cmp
iret
enter
push
cmp
test
int3
push
dec
inc
arpl
xchg
lds
jne
xchg
and
setl
jmp
sbb
mov
fldenv
jne
stc
and
fs
pushf
pop
pop
or
sub
movsl
sbb
int
sub
push
mov
push
lea
ficoms
xchg
std
ljmp
push
sarl
inc
mov
fistpl
dec
adc
stos
mov
roll
ficoms
dec
xchg
xor
push
sbb
lcall
xchg
cs
in
add
leave
bound
push
push
cwtl
mov
imul
push
cltd
dec
push
lret
sarb
jae
pop
loopne
add
cmc
sbb
push
pop
pop
out
adc
xor
push
cs
cwtl
ret
in
imul
cmc
call
jo
sbb
imul
push
int3
orl
push
cmp
in
add
scas
xor
rclb
cmp
out
push
aaa
pop
subb
mov
sbb
cmp
jae
arpl
dec
and
scas
mov
xor
xor
adc
or
fisttpl
movsl
mov
gs
pop
push
popf
inc
cmp
mov
sbb
aam
js
sahf
hlt
in
jge
mov
push
fcoml
mov
cli
addb
mov
add
cmp
movsb
xor
icebp
sbb
fldt
scas
shll
cli
cmp
jle
dec
jo
ret
dec
lock
std
dec
iret
fwait
mov
add
jb
mov
cmpb
shlb
cwtl
fsubrl
adc
mov
or
sahf
adc
movl
xor
cmp
pop
mov
jl
pop
mov
xor
es
imul
push
jo
rorb
fadds
fwait
out
push
push
mov
int3
dec
dec
pop
mov
or
clc
fs
add
sub
mov
xchg
pop
or
pop
jo
push
pop
mov
xor
push
sar
dec
inc
jge
xchg
idivl
xchg
add
and
mov
repnz
mov
mov
jb
jge
sbb
add
imul
or
pop
jle
int3
sti
push
xchg
out
mov
fcoms
ds
xor
dec
aaa
sbb
dec
jae
fisttps
adc
mov
lret
popa
pop
imul
inc
add
sahf
pop
fimuls
xchg
fsubs
mov
push
inc
push
mov
or
jnp
jg
ds
and
cmp
and
repz
adc
mov
arpl
int3
je
adc
nop
adcb
test
push
flds
nop
mov
mov
and
push
test
pop
fs
xorb
mov
es
sti
xor
mov
inc
or
xchg
dec
jae
xorl
pop
out
xchg
jecxz
jnp
hlt
movsl
xlat
jne
jecxz
mov
ret
xchg
pop
loope
jge
mov
fistpll
insb
push
ss
mov
xchg
imul
in
ret
push
out
icebp
int
dec
push
push
mov
jecxz
ret
outsl
addb
insb
sub
pusha
flds
fisubrs
mov
ss
xchg
lods
aam
xchg
fstpl
dec
fimull
out
xchg
mov
add
stos
subl
in
subl
aas
fldt
add
jbe
lahf
popa
das
ficomps
push
cld
es
addr16
sub
int
inc
addr16
mov
cltd
xchg
outsl
dec
test
test
arpl
add
out
mov
outsb
push
and
fisubrl
test
sbb
push
fwait
xchg
dec
iret
into
push
adc
leave
and
iret
jmp
push
ja
and
adcb
push
mov
fildll
sarl
fistl
mulb
pusha
fidivrs
stos
inc
inc
ret
mov
jo
mov
push
cmp
hlt
pop
nop
mov
mov
insb
idiv
mov
repz
sub
dec
mov
dec
jne
xor
cs
pop
mov
sub
dec
leave
or
fisubs
orl
stos
add
jb
stos
jae
cld
das
loop
movsb
sahf
or
pop
jbe
and
stc
lahf
addl
das
jb
scas
push
cs
ret
fisubrl
add
lcall
pushf
inc
loopne
lock
cmp
and
push
call
adc
pop
or
js
jbe
sbb
addl
push
inc
rcll
jle
mov
add
adc
ffreep
insl
and
adc
cs
out
mov
cmp
testb
fdivrp
jae
jmp
fdivl
movsl
lcall
into
mov
sub
add
lahf
xchg
addl
or
cwtl
jmp
js
jecxz
push
lea
outsb
cltd
and
stos
ret
mov
sub
imul
ret
cmp
mov
stc
idivl
jp
inc
test
jg
cmp
idiv
push
aam
cmp
lock
outsb
into
dec
daa
stc
add
push
cmp
out
mov
pop
rcll
mov
sarb
mov
loopne
in
push
mov
inc
adc
inc
mov
addr16
lcall
jnp
fcomip
scas
call
cmpsl
inc
mov
fwait
xchg
or
repz
dec
dec
inc
pop
jnp
mov
push
movsl
and
imul
and
leave
xchg
nop
sbbb
std
sub
xlat
shrl
shlb
js
cltd
lods
add
adc
iret
xor
movsl
outsb
ret
mov
adc
lcall
ljmp
xlat
repnz
xchg
mov
ror
ljmp
int
das
push
sub
cmp
pushf
shlb
mov
push
ja
mov
ja
and
icebp
adc
or
jo
sbb
roll
jno
ror
xchg
push
sbb
or
mov
cmp
adc
scas
jne
aas
or
aaa
popf
aad
push
cld
push
inc
sbb
dec
imul
in
add
insl
das
or
loop
jmp
add
dec
roll
cmp
mov
sti
fists
rcrl
mov
shrl
iret
xchg
je
inc
push
pop
loope
xchg
xchg
xchg
std
neg
movsl
es
mov
inc
jnp
mov
inc
and
xor
dec
cmc
es
test
popa
push
aad
movsb
neg
test
js
pop
jle
cs
in
mov
fcmovnb
adc
popa
int
aaa
enter
inc
cmp
mov
jo
loopne
es
push
xchg
or
xchg
push
cmp
jge
mov
hlt
or
pop
stc
push
sub
repz
dec
ljmp
imul
clc
jmp
lods
mov
mov
add
lcall
test
popa
js
cs
jg
jno
cs
pushf
adc
cli
pop
adc
hlt
insl
mov
cs
xchg
in
shrb
adc
call
cmp
fld
cmpb
int
jmp
lods
inc
test
and
aaa
out
jl
mov
xchg
push
dec
stc
xlat
out
out
out
test
push
lods
mov
notl
lods
pop
jnp
jge
ds
dec
sarb
cmp
mov
cmpsl
inc
xchg
mov
hlt
jae
add
in
add
into
cmp
and
mov
cmp
lock
cmp
jp
into
inc
adcb
push
movsb
js
cmp
fdivr
movsb
cs
pop
jae,pn
dec
scas
shr
fbstp
into
cmp
pop
jns
xchg
sub
or
pop
or
pop
mov
out
cmpsl
pop
stc
xchg
or
sub
arpl
or
push
push
stc
inc
push
add
hlt
mov
or
xor
pop
imul
insl
outsl
cmp
and
mov
sbb
leave
add
fs
aaa
hlt
mov
dec
inc
xor
sbb
pop
mov
add
or
pop
or
mov
mov
mov
sbb
mov
pop
inc
sub
stos
out
jp
push
xchg
jge
dec
addr16
mov
test
adc
or
inc
iret
call
into
mov
clc
pop
or
mov
outsl
jmp
pop
add
stc
add
push
movsb
in
jb
fidivs
jno
xchg
adc
sbb
jle
jp
insl
lret
fstpt
loope
lret
cld
pop
pop
or
or
push
js
insb
loop
add
sub
ret
pop
cwtl
inc
jbe
mov
aam
add
sbb
add
and
sbb
movl
push
mov
push
pushl
pushf
pushl
ret
pusha
movb
xchg
pushf
mov
lea
jae
setbe
movsbl
cwtl
xchg
lea
pusha
mov
mov
push
mov
mov
movw
movzbl
lea
call
mov
andl
lahf
mov
sbb
jge
pop
xchg
ja
mov
icebp
pop
pop
mov
or
jne
xchg
add
sti
sub
addr16
jae
not
or
les
xchg
sti
adc
cmpsl
jbe
xchg
repz
stc
xchg
scas
push
xchg
cwtl
inc
xlat
repz
sbb
jns
sub
ds
jg
xchg
push
es
dec
les
mov
test
ss
gs
das
add
xchg
std
loop
bound
nop
add
push
in
dec
adc
imul
and
mov
arpl
xchg
push
xchg
mov
fs
shlb
addr16
push
or
xchg
stc
xchg
iret
dec
mov
rcr
sbb
lea
icebp
dec
fwait
inc
mov
mov
insb
call
into
inc
hlt
pop
jo
pop
xor
shlb
js
xchg
das
and
loop
bound
jp
les
add
pop
fisubrs
lcall
cld
push
mov
jae
lods
out
mov
loope
mov
adc
std
mov
loop
bound
sub
mov
or
inc
mov
add
inc
out
outsb
mov
sbb
add
mov
and
or
shrl
mov
push
inc
sbb
xchg
jecxz
cmp
sti
scas
ret
pop
test
xchg
pop
add
mov
imulb
lcall
add
add
jae
clc
incl
add
popa
addr16
imul
ja
js
add
inc
push
jo
jb
jne
inc
add
add
dec
outsb
push
arpl
or
loop
sub
fxch
push
aas
xchg
xchg
ja
mov
or
mov
insb
cwtl
xchg
ficoms
sub
push
pop
enter
push
push
outsl
hlt
push
loope
imul
rorb
ljmp
insb
sbb
in
jl
in
dec
popa
jb
or
pop
jne
push
hlt
push
jp
push
int
js
push
xchg
adc
mov
sub
int3
xor
clc
int
jbe
mov
fnstsw
fdivr
scas
push
popf
and
xchg
out
push
cli
popa
dec
rcr
jl
jp
mov
cmp
jb
popa
call
icebp
mov
filds
xor
add
lea
call
lea
jb
xchg
mov
add
not
xadd
cmp
sar
mov
and
bts
add
pushf
setb
pop
pushf
pusha
pushf
lea
jmp
add
inc
jb
popa
je
inc
imul
mov
or
adc
fsubr
cs
outsb
jne
mov
cmp
addl
rcrl
cs
mov
jno
lea
int3
pop
stos
pop
mov
stc
leave
and
fs
jg
sbb
hlt
dec
nop
int
sub
or
jp
lds
dec
mov
lea
clc
inc
pop
in
push
push
dec
mov
rcrl
addr16
outsb
aad
incl
mov
jnp
xchg
jecxz
test
pop
test
je
aaa
pop
shl
or
in
insb
mov
jne
call
sub
lea
jne
movsbw
mov
pusha
movw
pusha
pushf
lea
jmp
add
dec
insl
popa
addr16
imul
je
outsl
jns
add
inc
imul
outsl
ja
add
add
insb
gs
jae
inc
popa
jo
jne
add
mov
add
inc
gs
nop
fwait
sbb
imul
and
ljmp
pop
push
push
lock
xchg
std
jmp
lcall
cmp
jno
mov
movd
jns
sub
dec
push
mov
push
cmpsl
out
roll
mov
push
test
rcrl
jp
fstps
adc
mull
daa
shll
adc
pop
jle
ret
push
imul
add
lcall
loop
cmp
cmp
or
pusha
pusha
jmp
imul
test
call
lea
je
pusha
sets
lea
lea
push
pusha
jmp
lea
call
test
push
mov
movw
cmp
cmp
push
lea
jb
jmp
loop
push
mov
dec
fsubrp
or
ss
filds
lret
cmp
hlt
gs
dec
int3
jnp
leave
jb
jne
sub
lahf
pop
push
fistps
sti
mov
jns
adc
mov
ss
xor
push
ficoms
in
shll
jecxz
movsl
xchg
ljmp
adcb
sbb
outsl
or
jge
sbb
repnz
test
lcall
mov
push
mov
sub
push
fs
lahf
leave
hlt
fdivrs
mov
xchg
int
cmc
jns
push
mov
stos
jno
push
cmpl
inc
mov
mov
sub
jge
mov
je
mov
pop
jno
data16
aaa
cli
pop
subb
outsb
and
xor
cmp
test
repnz
pushf
call
add
inc
popa
insb
insb
push
imul
outsl
arpl
pushf
pushl
call
add
inc
gs
insb
popa
jae
dec
outsb
outsw
inc
add
add
ja
arpl
inc
js
lea
jne
shld
jbe
sar
movsbw
mov
bsr
ror
shl
and
mov
mov
sub
stc
xor
rcl
adc
mov
bsf
mov
jb
mov
mov
bts
sub
bsr
mov
xor
bts
mov
test
mov
sar
sub
shl
mov
lea
neg
shl
mov
aad
sub
mov
lahf
and
btr
xor
bswap
lea
mov
pushf
clc
pusha
shl
pusha
cmp
mov
add
pushl
pushf
lea
jmp
pushl
popl
push
test
cmp
pusha
mov
jmp
add
push
popa
gs
jb
popa
jns
je
dec
dec
outsb
fs
add
push
gs
jo
outsb
dec
gs
js
add
xor
pushf
bswap
not
mov
xchg
setbe
not
mov
lea
jmp
add
push
gs
imul
outsl
arpl
jae
movb
mov
push
lea
ja
test
sar
stc
sub
stc
test
sub
cmc
add
sbb
mov
cmc
adc
rol
or
mov
cmc
bt
bt
repnz
pusha
pusha
call
jmp
stc
or
pusha
pushl
call
pushl
popl
mov
pushl
ret
pushl
lea
jb
pushf
mov
lea
jmp
add
dec
insl
popa
addr16
imul
inc
imul
outsl
jb
movl
pusha
push
mov
pushf
pushl
ret
stc
test
pusha
call
lea
call
xor
neg
rcl
sbb
add
rcl
bt
add
add
pop
sar
cmp
jmp
call
or
jmp
lea
xchg
lea
not
pusha
pusha
movzwl
lea
jmp
add
dec
outsl
jbe
push
imul
add
popa
fs
imul
je
movsbw
mov
mov
lahf
jmp
movb
mov
pop
not
push
pushl
popl
pop
lea
not
mov
lea
ja
push
pushf
movsbw
call
inc
mov
test
cmc
and
call
add
inc
jb
popa
je
dec
arpl
add
add
outsb
fs
insb
outsl
jae
add
add
jb
je
push
add
push
gs
outsl
arpl
add
add
fs
gs
jne
arpl
add
inc
gs
outsb
jne
je
insl
dec
inc
add
movsl
mov
add
cltd
xchg
hlt
fisttps
rcll
shl
scas
rorl
jnp
aad
clc
add
push
xor
in
sbbb
and
jns
push
je
cmp
test
sub
xor
add
hlt
mov
jmp
sahf
xor
ja
add
jg
sub
aam
cmp
xchg
movsl
faddl
cltd
jnp
xchg
enter
adc
dec
xchg
pusha
aam
pusha
sbb
xor
jno
idivl
ret
mov
std
repz
dec
push
ret
negl
xor
cmp
loopne
cli
aam
sub
sbb
or
pop
movsl
mov
and
or
mov
stos
jl
add
xlat
xor
aad
mov
aam
jns
fimuls
jmp
inc
leave
or
sub
add
xchg
jp
inc
ret
adc
cmp
popa
jp
or
and
pusha
cmc
xor
popa
adc
fnstsw
xor
jbe
sub
cld
lcall
out
jecxz
dec
cltd
push
dec
int3
or
jbe
pusha
xlat
mov
insb
sbb
xor
test
sbb
loop
fcomps
lret
xor
test
xor
out
shrl
nop
mov
aam
hlt
xor
pop
dec
lods
les
cli
push
xchg
fdivrs
inc
pop
mov
scas
stos
jmp
scas
push
and
and
mov
cmp
mov
iret
jg
sub
out
jmp
sub
pusha
and
push
ret
jne
inc
aad
sub
insb
push
inc
add
xchg
stos
lea
test
and
push
lock
je
out
fistl
and
xchg
xchg
cltd
inc
sbb
mov
mov
sahf
sbb
and
fwait
and
imul
test
or
imul
and
shll
stc
cmp
loop
mov
push
adc
data16
cmp
xchg
sbb
data16
stc
xor
mov
fcmovb
inc
es
fmull
jne
cli
mov
add
xor
sarl
pop
add
mov
xor
enter
push
imul
mov
out
sub
push
inc
aaa
push
ljmp
idivl
shll
clc
hlt
insb
xchg
mov
rcrb
xchg
popa
int
sub
add
test
pop
enter
and
cmpsb
data16
pop
les
les
or
aaa
mov
lea
icebp
dec
int
inc
and
ror
ret
adc
aas
fimull
lcall
push
js
jecxz
pop
xchg
test
jge
out
roll
sbb
aaa
jnp
lds
scas
cld
fisubrs
cmp
in
push
or
add
xchg
mov
xchg
in
ret
cmc
adc
cmp
add
dec
add
fdivr
call
popa
sbb
or
sbb
jp
pusha
mov
mov
addl
insb
xchg
mov
dec
ret
adc
mov
cmpl
pushf
mov
or
sbb
xchg
dec
pop
or
mov
sub
inc
flds
scas
dec
xlat
inc
pop
cli
jp
or
or
divb
mov
push
inc
cmpb
fwait
jbe
dec
dec
in
push
rol
outsl
xchg
adc
sbb
lea
scas
test
icebp
int
inc
aam
mov
pop
roll
dec
adc
mov
idivb
fs
mov
nop
xchg
inc
cmp
inc
mov
mov
jp
test
sbb
lds
inc
dec
jp
rcrb
push
scas
into
inc
mov
cvtps2pi
sbb
shl
stos
jb
int
fstps
movups
push
pop
jg
leave
xlat
xchg
xchg
jmp
loopne
push
stos
inc
or
fdivrl
pop
pushf
in
nop/reserved
inc
fldt
add
mov
in
es
dec
jle
je
jge
pop
jl
repz
xorl
or
cwtl
dec
aas
mov
mov
cwtl
mov
mov
sbb
inc
in
xor
pop
dec
mov
fidivrs
je
lods
test
outsl
jbe
cwtl
loopne
aaa
xchg
ljmp
enter
push
xor
std
les
test
mov
adc
adc
jae
add
inc
rcrl
sub
iret
adc
test
xchg
jns
xchg
xchg
cli
fmul
fsubrp
xlat
fdivl
test
adc
loop
insl
cmpsb
cmp
dec
aas
fsub
xor
enter
or
push
dec
and
ret
jmp
xor
mov
dec
arpl
or
into
int3
iret
fstpt
mov
sti
shl
test
xchg
hlt
test
out
inc
and
push
jne
push
fsts
cs
inc
jle
sbbb
inc
mov
mov
add
sub
outsl
xchg
fwait
and
pop
imul
lock
xchg
sbb
incl
pop
xchg
movb
in
std
add
call
lds
test
pushf
push
rcrb
jns
cmp
sub
pop
rclw
gs
test
fildl
sbbb
xor
add
shl
in
aam
xor
loope
jle
aaa
in
std
push
shrb
add
and
iret
cltd
orb
push
out
outsl
fstps
xor
cmp
sbb
ja
sbb
insb
ljmp
sbb
jle
inc
out
out
mov
sub
jb
mov
lods
clc
aad
insb
int
dec
adc
ss
shll
push
lods
out
imul
inc
imul
test
and
jbe
mov
sub
push
addb
push
imul
and
int
adc
popa
jecxz
add
and
rcll
lcall
shll
adc
jnp
rcl
lret
cmp
xchg
adc
test
dec
xchg
outsl
cmp
mov
shll
adc
and
mov
in
dec
insb
mov
test
jp
and
scas
fstpt
scas
or
add
test
int
scas
xchg
call
sub
lret
call
add
fcmovnu
jmp
stc
fyl2xp1
inc
out
sbbb
stc
mov
cwtl
mov
pop
aaa
leave
out
xchg
pop
xchg
in
lods
inc
sbbb
imul
ret
push
nop
adc
mov
fldl
cmp
ficompl
cmp
xchg
gs
jle
or
data16
mov
lcall
cmp
jnp
jle
push
or
sub
shlb
mov
mov
lret
pop
cmp
and
pop
mov
push
setns
jbe
and
jae
inc
cvttps2pi
idivl
leave
shlb
lahf
jno
test
mov
hlt
test
sbb
mov
add
ret
out
and
inc
int
inc
arpl
add
jle
cmp
outsb
xchg
cld
pop
insl
pop
out
into
cmp
mov
and
mov
push
ret
pop
test
mov
sbb
aad
mov
fldenv
test
and
jmp
sbb
pop
pop
xchg
adc
jns
mov
cmp
cmp
cmp
daa
bound
mov
mov
or
in
and
fdivrl
and
push
push
outsb
in
stos
stos
sub
add
imul
pop
clc
mov
push
je
cltd
jne
ja
push
ret
dec
mov
int
enter
iret
outsb
and
jg
loope
mov
ja
push
add
add
push
ds
ds
sbb
mov
add
dec
adc
push
xchg
mov
rcrl
aad
sub
mov
sbb
pushf
mov
pop
jg
cmp
idivl
insl
push
push
out
jb,pn
lcall
loopne
icebp
orb
insb
pop
or
xor
test
rclb
xchg
in
lret
js
xor
imul
test
shlb
mov
jno
aad
adc
cmpsl
daa
adc
mov
test
mov
fstpl
test
popa
cmp
outsb
out
add
test
fmulp
mov
jmp
and
jbe
xor
fldenv
shrb
popa
cltd
sbb
mov
jmp
ljmp
enter
mov
push
out
mov
xchg
jae
mov
sahf
decw
jg
or
movsb
sub
lret
jb
adc
xchg
iret
ds
mov
pop
mov
sub
pop
xor
pop
pop
rcrl
stc
or
mov
js
mov
inc
imul
inc
push
fs
jne
stc
push
cmp
dec
xlat
mov
out
rcl
inc
jo
sbb
sahf
jb
push
pop
adc
bound
test
cmp
pop
fcmovne
test
and
insb
xor
gs
cmpb
mov
out
loopne
or
sbb
inc
push
xchg
inc
das
jmp
add
dec
in
xchg
push
fimuls
push
lock
pop
cld
cld
into
popa
call
gs
mov
xor
inc
nop
jecxz
lret
mov
mov
insl
sbb
sbb
psubb
adc
imul
clc
jo
adc
adc
push
pop
sbb
stos
sbb
cmp
sarb
jecxz
dec
add
movsb
fs
adc
adc
ret
sub
mov
mov
test
xor
or
push
sub
lea
rorl
arpl
adc
pop
mov
mov
imul
xchg
aam
data16
add
cld
psubsb
jmp
mov
mov
stc
jbe
stc
testl
psubb
add
mov
xchg
jns
jo
outsb
mov
js
ja
lahf
pop
jge
or
jecxz
ja
arpl
jns
adc
cmp
aad
cld
sub
inc
jbe
and
dec
push
mov
rcrl
and
test
mov
mov
adc
cwtl
ljmp
repnz
ror
sub
roll
xchg
loope
ja
mov
loope
in
pop
enter
lcall
xor
lds
push
mov
jb
mov
or
xor
sbb
push
lcall
and
mov
inc
and
dec
dec
mov
mov
fistl
or
adc
push
rcll
les
fcmovnbe
in
sbb
sbb
pop
aaa
ljmp
pop
test
jae
mov
into
aad
scas
stc
xchg
ss
fstpt
xchg
mov
sbb
push
pop
xor
xor
or
xchg
leave
lret
aaa
sbb
sub
imul
cmp
daa
lds
pop
push
pop
cltd
fstpt
xchg
cld
popf
repz
mov
je
fs
mov
rorl
loop
jmp
mov
pop
and
jecxz
cmc
and
sub
fsts
ds
lret
pop
into
icebp
cmc
push
mov
jno
mov
test
shll
scas
mov
fcmovb
out
pushf
inc
cmpsl
fldl
xor
jle
popf
leave
sbb
addr16
hlt
push
xor
xor
loopne
mov
dec
inc
loop
cld
cld
lods
stos
adcl
rolb
cmpsl
and
xchg
inc
into
mov
sti
mov
das
or
mov
pushf
fbstp
fstpl
gs
add
aaa
push
dec
sbb
je
adc
xchg
orl
jg
jp
sub
arpl
pop
call
pop
arpl
or
jno
jno
in
outsl
mov
add
mov
or
pop
cmp
sbbb
xchg
cmp
pop
push
mov
out
outsb
es
pop
std
scas
fdivs
cmpsl
das
jno
lret
lcall
pop
in
iret
fdivrl
aas
lahf
pop
pop
xor
jge
push
add
les
dec
ja
and
cwtl
mov
sti
notl
ror
fidivl
repnz
xlat
cmp
pusha
xor
mov
mov
mov
out
mov
aaa
sbb
cld
jmp
push
adc
sbb
loope
push
push
mov
xchg
jp
movups
xchg
lea
outsl
into
clc
xchg
push
fcomps
dec
lahf
out
mov
push
js
mov
in
pop
xchg
ret
or
inc
mov
fstpl
popf
and
repz
out
xchg
rcrb
out
sub
dec
in
leave
mov
popa
jb
test
movsl
gs
idiv
imul
loopne
inc
outsl
dec
adc
or
sub
mov
xlat
mov
mov
push
sahf
and
mov
das
add
push
sahf
testb
mov
push
cltd
sbb
xor
cmp
mov
inc
inc
ja
xor
test
xor
and
pop
out
out
je
fstps
cmp
mov
jle
or
mov
mov
adc
or
stos
out
mov
pop
add
cmpsl
push
mov
sar
inc
rcrb
push
imul
std
popf
bnd
sbb
and
jmp
out
add
inc
dec
mov
clc
pop
testl
loopne
gs
sub
addr16
mov
subl
dec
sbb
mov
xchg
jbe
sub
push
sarl
pop
sbb
call
lret
mov
mov
pop
fbld
lods
mov
sub
xchg
inc
orl
mov
leave
sbb
arpl
xchg
lods
in
aad
rclb
sub
pushf
dec
daa
mov
mov
pop
insb
inc
or
mov
adc
lret
icebp
clc
add
shll
inc
cmp
std
loop
mov
pop
add
push
jl
and
push
sbb
cmpb
pusha
mov
sbb
out
cld
arpl
arpl
mov
add
test
pop
icebp
cmp
sub
xchg
int3
xor
pop
dec
adcl
insb
fld
movsb
mov
jp
dec
dec
scas
or
mov
xor
or
jg
jmp
jl
push
push
or
mov
imul
pop
and
xor
cmp
popf
dec
xlat
lds
xor
mov
pop
mov
or
sarl
mov
aam
jno
and
or
xor
push
add
psubq
loopne
mov
popf
popa
cltd
xor
addr16
fsub
testb
mov
fidivl
jp
xchg
sbbl
and
sahf
enter
cli
icebp
adc
bound
push
loop
shl
or
or
sbb
mov
xor
mov
mov
jb
push
mov
cmpsl
cmp
push
xor
xorb
callw
stos
in
mov
or
push
cmp
pop
sub
mov
sarb
add
cmpl
jb
adc
inc
dec
sub
pop
xor
stc
push
ffreep
mov
add
movsb
addb
not
out
fs
cld
cs
cltd
jmp
mov
or
outsl
es
pop
insb
push
imul
xchg
sbb
dec
hlt
xlat
inc
outsb
addl
in
stos
cmp
mov
and
mov
aad
dec
xchg
test
dec
mov
ja
ds
sub
or
jmp
addr16
ds
repnz
pop
dec
imul
pusha
xor
or
shll
xchg
sub
fistpl
mov
jbe
mov
in
aam
into
xor
and
xchg
pop
add
shll
test
add
subb
stos
and
or
repnz
mov
push
xchg
adc
push
into
cltd
xorb
clc
or
or
rol
push
push
aad
lcall
pop
ret
decl
or
adc
and
int
les
shlb
test
das
mov
pop
inc
sub
lret
jno
movsb
cmp
pop
jnp
inc
sbb
inc
mov
fldt
jmp
dec
sub
mov
push
ss
dec
out
in
xor
xchg
fs
inc
pop
movsb
inc
cmp
xor
fisubl
adc
fwait
aad
lcall
mov
push
mov
aad
adc
dec
ss
xor
roll
mov
fsubr
test
scas
jae
cs
mov
push
xor
push
or
scas
lcall
jbe
ret
and
mov
pop
sbb
jp
push
cmpsb
sti
dec
lret
ds
andl
aas
les
pusha
and
ss
pop
lock
inc
jl
sbb
xchg
lds
xor
mov
mov
lock
mov
xor
push
lahf
arpl
pop
popa
mov
fnsave
push
fcmovb
dec
cld
in
daa
xor
outsl
outsb
fstl
lret
loop
sti
xchg
dec
jp
loop
mov
and
lret
cmpsl
cmp
es
mov
push
mov
mov
dec
rcrl
addr16
push
push
sbb
inc
rcll
cli
jmp
in
mov
mov
test
icebp
push
xor
repz
mov
test
mov
mov
mov
inc
cmpsl
je
fnstsw
stos
push
aaa
imul
mov
mov
movsb
test
mov
sub
jbe
push
and
orb
dec
ljmp
jecxz
push
testl
or
cmp
fs
cmp
add
sbb
jae
sbbb
scas
out
outsb
mov
jl
out
mov
addr16
xorb
sub
into
int
lcall
and
inc
cmpsb
cli
xor
fsubl
lahf
fisttpl
xchg
add
les
rcrb
mov
or
sbb
clc
mov
data16
cmpsb
sarb
dec
inc
lock
aas
cmp
cltd
ljmp
inc
dec
aaa
xchg
test
cmc
add
jmp
call
push
stc
test
jbe
repnz
push
push
inc
loop
xchg
pop
xchg
mov
pop
or
enter
mov
cmp
add
add
mov
jmp
xchg
xchg
loope
adc
lods
pop
mov
popf
psubw
cs
cmpb
gs
cmp
roll
push
daa
mov
mov
addr16
movsl
jb
sahf
xchg
lahf
loop
stc
xor
jg
jbe
shl
fbld
pop
repnz
push
les
sub
push
xchg
pop
jle
out
fcomp
adc
in
arpl
ljmp
ds
pop
jmp
adc
lret
into
sub
and
fnsave
adc
mov
dec
mov
shlb
fdivrp
push
enter
mov
pop
sarb
shlb
ds
insb
cmp
nop
xchg
mov
ret
pop
movsl
and
cltd
or
mov
jecxz
jge
test
push
repz
orb
into
mov
xchg
into
cmp
loope
pop
test
sbb
add
iret
hlt
pusha
popl
iret
sub
pop
sub
jecxz
aam
xchg
popa
jecxz
lods
sub
bsf
sub
pop
pop
hlt
xchg
xor
inc
mov
and
int
cs
pop
imul
inc
es
mov
int3
cmp
fidivrl
lea
sub
jae
pop
fcoml
xchg
push
jns
dec
pop
pop
cmp
adc
test
repz
pop
loop
add
aam
mov
pusha
jnp
sbb
push
fs
or
stc
pop
mov
mov
leave
adc
inc
xchg
ss
sbb
outsb
cmpsb
dec
cmp
adc
fisttps
scas
into
adc
jg
out
jp
mov
lods
loop
cmpsl
stos
sbb
bound
jo
inc
fcompl
push
sub
into
lahf
ret
and
shlb
inc
std
popf
xor
pushf
and
cmc
out
sbb
and
addr16
cmp
and
xor
pop
outsl
add
filds
aad
push
cmp
mov
push
mov
aaa
jmp
dec
fs
mov
sbb
mov
testb
and
jns
imul
outsl
mov
repnz
mov
mov
pop
push
jb,pt
push
mov
cwtl
push
sbb
xor
push
push
out
aaa
sub
adc
or
add
cmp
popf
mov
mov
call
add
add
ret
xchg
outsl
sub
lods
dec
push
imul
rcl
mov
in
and
shl
or
pop
ss
inc
pop
int3
aam
loope
ss
jp
aad
and
shr
and
dec
xchg
cmp
sub
std
jno
push
and
out
repnz
cmp
in
cli
mov
push
pop
sbb
push
js
sar
mov
dec
sti
dec
roll
pushf
popf
movsl
cli
pop
stos
jae
iret
outsl
daa
jmp
or
lds
add
cpuid
dec
push
popa
dec
popa
inc
int3
and
pop
add
push
test
sub
inc
std
dec
xor
insl
xchg
cmp
ret
js
rcrb
bound
in
negb
mov
xchg
mov
out
js
sti
mov
arpl
xchg
jb
es
lods
mov
fld
mov
popa
insb
lret
sbb
dec
scas
test
sarl
fucomp
dec
lea
push
adc
cwtl
aad
xor
out
mov
sub
movsb
sbb
pop
and
pop
rcrl
stc
mov
ja
imul
xchg
jno
dec
nop
pop
mov
jmp
dec
mov
cltd
add
mov
add
test
imull
pop
rol
rcr
or
ret
lods
std
test
stos
or
icebp
repz
dec
sub
add
jne
push
ds
pusha
fidivs
jne
mulb
xor
dec
cli
mov
mov
mov
mov
pop
cmp
mov
js
xchg
lds
daa
mov
leave
cmp
int3
cmp
out
adc
shlb
cwtl
faddl
cli
popa
cwtl
inc
sbb
xor
mov
and
incb
dec
dec
aas
movsb
roll
xlat
mov
mov
sbb
sbb
cltd
sbb
jmp
jmp
aaa
dec
out
int
add
test
daa
gs
inc
mov
and
jg
adc
inc
pusha
mov
dec
ret
cmc
ljmp
dec
mov
cmp
out
sti
popf
dec
clc
out
sarl
sub
lods
and
mov
out
push
pop
adc
insl
pop
rcrb
cld
insl
push
xchg
jmp
test
pop
add
push
stc
jae
rcl
cmp
sub
xlat
mov
adc
rorb
mov
mov
pusha
jmp
xchg
cltd
mov
pop
mov
jbe
or
icebp
mov
xchg
in
add
mov
mov
inc
imul
mov
jbe
fsubrs
cmp
repz
pop
stos
xchg
out
into
subb
pop
lea
sub
sub
xchg
jae
jae
mov
mov
repz
push
jae
dec
jne
mov
movsb
fwait
xor
fidivl
popa
out
out
nop
leave
outsl
test
mov
ror
pop
xor
data16
cmp
out
pusha
pop
jb
outsb
inc
je
jns
sbb
int
outsb
or
movl
ja
ret
dec
cmp
dec
movsl
push
xchg
push
xor
out
leave
mov
orl
ret
in
and
ret
cli
rcr
adcb
sub
data16
fiaddl
xchg
arpl
loopne
rorb
xor
push
ljmp
aad
cs
mov
xor
lods
push
jno
lock
push
mov
in
and
mov
and
mov
sbb
fcmovnb
adc
test
pop
add
pop
push
outsl
pop
into
iret
mov
scas
es
in
and
or
jne
mov
bnd
and
add
lds
xor
arpl
gs
jl
orb
enter
or
jl
mov
loope
jne
inc
je
mov
or
mov
sbb
fldl
aad
push
pushf
mov
out
mov
ficoms
jbe
lcall
enter
or
in
lret
and
or
popa
pop
cmc
push
mov
pop
add
aas
je
jnp
test
ds
sub
push
cs
sub
or
or
fcoml
roll
cmp
and
cmp
cmc
ret
pop
in
sbb
insl
cmp
mov
xlat
cmp
adc
idiv
adc
sub
xlat
sbb
or
movlps
sbb
or
push
leave
mov
ja
in
mov
xchg
jge
test
sbb
mov
jae
add
lea
push
stc
mov
int3
and
adc
jmp
aas
xor
sub
test
jno
into
pusha
cmp
or
add
xchg
sub
shll
push
aam
cmp
mov
ror
fildll
mov
fcomp
jmp
jbe
mov
jmp
mov
addr16
lods
xchg
pop
pop
test
out
popf
ljmp
insb
js
mov
cmc
stos
jo
shrl
sub
and
mov
xor
std
push
cmpsl
and
cli
mov
dec
jg
add
rclb
lock
sahf
sub
xor
ja
mov
lret
fwait
stos
adc
sbb
imul
fdivp
xor
pop
sbb
ret
decl
pusha
add
mov
jg
pop
xor
in
mov
cli
test
xchg
out
cmpsl
xor
fcomp
cmpsb
cld
loope
mov
inc
int
xor
mov
popa
adc
out
jne
in
cmc
fcomi
mov
sub
and
lock
pop
stos
cmpsb
mov
outsb
xor
mov
pop
cltd
push
mov
or
fiadds
sub
xchg
or
movsl
pop
aaa
sbb
adc
lods
sub
popa
push
mov
mov
stos
pop
pop
mov
ljmp
je
fstpt
call
mov
imul
xchg
js
add
xlat
sbb
and
dec
ret
cli
mov
mov
lock
js
inc
inc
int3
push
outsb
loopne
cmp
pop
pushf
scas
adc
mov
fwait
js
ret
push
popf
and
cmpsb
cs
imull
dec
imull
and
cmp
call
or
pop
ret
jp
mov
jecxz
push
cmp
cld
fisttps
jns
arpl
inc
insl
mov
psubw
fimull
push
cld
inc
notb
xchg
frstor
ret
dec
cmp
push
cmp
dec
add
xor
add
pop
jno
mov
add
sub
aam
jp
js
lds
xchg
int3
pop
pop
scas
sbb
or
push
mull
fsubp
test
or
out
mov
cmp
in
fwait
cmc
cltd
sar
mov
cmp
testl
xor
out
sub
jl
jno
loop
pop
push
xchg
xchg
roll
mov
or
or
in
aad
mov
fldenv
cmpl
and
ja
out
pop
aam
add
popf
imul
mov
fisubl
rorl
loopne
cld
sbb
test
push
mov
mov
sbb
enter
outsb
or
test
and
movsl
add
mov
ljmp
out
js
ret
inc
enter
inc
mov
stos
mov
rep
jge
je
and
arpl
negl
inc
dec
and
out
outsb
inc
je
dec
fcompl
pop
repnz
push
cld
cwtl
mov
xor
into
repnz
int
jecxz
or
xor
fstps
enter
ret
loope
decb
rcrl
ljmp
adc
or
pop
lahf
out
xor
push
or
fsubl
sbb
inc
or
mov
sub
bound
or
mov
lret
lret
xchg
into
xchg
loopne
rcll
idivb
pop
stc
rolb
inc
cmc
mov
stc
and
add
mov
adc
popf
lds
loop
sbb
pop
mov
cmp
aaa
push
or
mov
xchg
scas
mov
dec
jo
mov
loope
inc
js
ret
mov
push
fs
add
addr16
adc
fsubrs
mov
ss
mov
fisubl
mov
inc
dec
outsl
cmpsb
inc
je
or
or
adc
std
jns
in
mov
loope
jbe
sbb
mov
jecxz
in
xor
adc
subb
js
lcall
enter
cli
jle
cmpsl
sti
shlb
cmpsb
jne
js
xor
int3
adc
push
test
lcall
inc
mov
out
jecxz
sbb
bound
ret
or
subb
add
test
fistpll
repnz
xor
in
push
or
adc
xchg
stos
mov
adc
xor
popa
lret
inc
jp
orl
mov
sbb
cs
das
insb
sbb
xchg
out
pop
pop
addr16
movsl
or
pop
sub
add
pop
int3
ja
push
jge
jg
cmpsb
stos
pop
xor
dec
mov
gs
push
dec
lods
fadds
mulb
packssdw
sbb
adc
shrl
push
inc
mov
jl
loopne
mov
dec
xor
push
inc
xor
xchg
jmp
adc
fistl
xor
inc
mov
or
pusha
mov
aaa
stos
pop
sbb
add
push
jb
fmuls
mov
rolb
mov
add
andl
mov
add
mov
xor
in
cli
enter
dec
pop
jg
inc
lock
ficoms
dec
push
movsl
mov
out
adc
aam
mov
flds
and
lret
bound
and
lcall
jmp
and
pop
or
test
sub
cmp
pop
shrb
xchg
in
jne
xchg
out
aam
fstpt
inc
cmp
cmc
setb
cmp
jge
enter
xchg
scas
jne,pt
repnz
daa
lds
pop
mov
cmpsl
repnz
mov
mov
pop
shl
int3
mov
scas
call
jle
insl
xchg
das
mov
inc
dec
sarb
data16
or
xorb
repz
enter
push
mov
jl
pop
and
addr16
dec
add
sub
cmp
add
cmp
adc
mov
adc
add
sbb
cwtl
mov
push
add
cmp
cld
dec
les
in
shll
push
xchg
enter
mov
in
adc
cld
sub
dec
cs
jg
mov
mov
dec
fstl
push
lahf
xor
test
sub
push
inc
out
dec
fs
jle
sub
jge
imul
xor
mov
cmp
test
data16
inc
dec
sub
mov
inc
pop
loopne
sahf
pusha
jp
sub
and
test
leave
mov
fildl
arpl
idiv
pop
push
repz
movl
sbb
stos
or
mov
das
adc
lods
jecxz
jg
pop
and
stos
xor
mov
sub
mov
sub
mov
out
sbb
pop
lahf
push
inc
push
insb
fsubrl
fimull
jne
inc
scas
gs
mov
xor
push
jle
not
mov
sete
push
div
fnsave
add
testb
and
testb
ljmp
and
xor
pop
mov
mov
das
setle
ds
insl
bnd
inc
dec
push
ja
lret
or
int
dec
adc
out
sbb
add
lods
adc
inc
pop
insl
add
rcrl
mov
aas
xchg
mov
xor
push
ret
cmp
cmp
mov
enter
add
adc
jo
or
mov
dec
mov
or
scas
lods
out
mov
lahf
add
popf
mov
ret
cli
jecxz
inc
icebp
mov
xchg
gs
iret
mov
xchg
xlat
pop
pop
std
adc
pop
shrb
loop
dec
loope
lea
leave
pop
lds
sbb
jmp
pop
jae
ret
fwait
insl
cmp
pop
dec
sti
je
cs
jg
ljmp
popf
lea
rol
cmp
fisubs
inc
or
ljmp
fistps
sub
mov
xchg
cmpsb
out
test
push
or
cmpsb
repnz
outsl
or
int
cmp
pop
icebp
inc
or
mov
fs
adc
add
iret
cs
dec
push
push
sbb
fwait
adc
nop
pop
jmp
gs
cmc
xor
scas
into
cli
jns
int
push
test
data16
and
jge
cmpsb
mov
subb
fldenv
jecxz
es
cli
cli
fistpl
stos
cmp
cmc
loopne
fs
xchg
sti
inc
ret
jmp
mov
pop
sti
movsb
clc
sbb
aaa
shll
push
and
lcall
aad
lods
xor
adc
push
pop
xchg
mov
mov
loop
inc
adc
mov
fcomps
adc
movsl
mov
call
xchg
or
push
cs
and
adc
add
adc
subb
dec
jno
pop
insl
cmp
pop
sbb
and
fcmovbe
lods
clc
xor
cmp
jmp
es
sub
in
dec
mov
cmp
je
cmp
jl
mov
out
xorb
adc
or
pop
pop
int
jmp
imul
loopne
pusha
nop
fcmovb
ss
push
push
sub
cmp
pop
push
or
sub
jge
lods
cs
cmpsb
pop
mov
addr16
sbb
inc
outsb
pop
out
mov
repz
mov
mov
bound
cli
in
pop
popf
fcomps
add
mov
enter
push
or
sub
std
mov
daa
outsl
int
cmp
push
pusha
out
sbb
cltd
aas
stos
mov
clc
xlat
lahf
jg
in
stc
pop
lahf
mov
outsb
pushf
xchg
inc
mov
jmp
hlt
outsl
mov
mov
ret
cmc
sub
aaa
rclb
aaa
sub
add
mov
shlb
nop
and
jge
xchg
mov
mov
std
mov
mov
adc
jnp
iret
or
sub
adc
push
lods
outsl
stos
mov
xchg
mov
fstps
scas
jno
mov
add
pop
pop
xchg
jl
xor
ret
push
sbb
add
push
sub
and
dec
mov
sub
mov
xor
sub
mov
jmp
stc
popa
icebp
das
cmp
jne
incb
pop
inc
out
dec
xchg
inc
or
fcmove
xchg
out
push
adc
testb
jo
xor
cld
jns
filds
out
cltd
mov
rcrb
insl
mov
add
xchg
daa
jb
inc
imul
xchg
gs
adc
mov
pop
jbe
cmpsb
or
mov
xchg
nop
pop
cwtl
xchg
jp
add
mov
pusha
shrb
cmp
movsb
lock
in
mov
push
adc
aaa
and
xor
sbbb
inc
sbb
fwait
shr
outsb
loop
and
fldcw
xchg
js
aas
movsb
pop
inc
push
mov
xchg
xchg
inc
inc
pop
pop
pop
repnz
xchg
je
inc
rolb
or
sbb
ret
push
leave
xor
enter
pop
mov
not
jbe
es
fcoml
push
lods
dec
mov
inc
sub
sub
sub
jp
mov
testb
sti
pop
adc
les
out
mov
push
xor
mov
hlt
aas
push
mov
mov
inc
inc
cmp
test
leave
lods
and
inc
mov
mov
ret
inc
add
call
xor
fadd
jle
xor
fs
xchg
jnp
lds
fs
sub
loope
pop
or
ds
add
sbb
out
in
mov
mov
stos
sbb
sub
cmp
stc
lret
lret
sbb
mov
ret
aam
mov
cmp
insl
inc
jg
jne
xlat
mov
inc
dec
cs
stos
cltd
pop
xlat
pop
add
into
dec
jle
jle
or
icebp
xor
cmp
jmp
mov
pop
sti
cmp
cltd
gs
sbb
jp
int3
mov
pop
pop
arpl
cmc
addl
bound
popf
movsl
mov
push
xor
mov
dec
xchg
pop
mov
push
push
in
or
pop
cmpsb
cs
popf
int
add
dec
or
pop
pop
test
scas
add
scas
mov
jecxz
pop
mov
xor
rcr
and
jae
cmpl
mov
pop
xor
pusha
and
nop
leave
and
mov
jg
xor
or
push
scas
and
jne
ja
jge
inc
mov
xchg
div
dec
scas
lea
ja
negl
stos
leave
js
and
xchg
dec
lret
outsl
cmpsl
imul
xor
cmp
mov
ret
mov
or
fwait
jns
mov
dec
mov
int3
in
sub
shrb
sbb
pushf
jno
sub
arpl
sti
leave
popa
sub
lret
add
aam
pop
push
scas
inc
out
xchg
fdivr
add
ss
and
xchg
cmp
insl
or
addb
cltd
loop
mov
fwait
dec
cmc
idivb
inc
mov
loopne
fstpl
fsubl
xchg
inc
push
dec
outsb
or
inc
push
int3
jge
mov
push
arpl
lock
inc
sbb
scas
in
sahf
mov
cltd
xor
aam
sbb
xchg
add
call
pop
fimull
shll
jmp
add
push
pop
push
cli
std
mov
lods
ds
or
pop
cld
sbb
mov
xchg
xor
jbe
daa
out
mov
ret
icebp
stos
movsl
imul
xchg
and
jecxz
add
popf
popf
movsb
sbb
sbb
jecxz
sub
arpl
push
sbb
decb
and
dec
fs
jl
inc
pop
mov
rcrb
cmp
fwait
loope
xor
cmp
imul
addb
xor
sti
repnz
jbe
addl
repnz
arpl
cld
dec
js
cmp
xlat
dec
loope
ds
mov
decb
insl
jne
xchg
clc
jbe
or
lock
sbb
shlb
mov
lods
push
cmp
fdivl
add
shrl
in
ss
in
test
add
or
cmpl
mov
gs
pop
call
mov
mov
and
cwtl
inc
repz
and
push
xrelease
imul
push
repz
mov
dec
dec
add
mov
nop
and
xchg
les
sub
rcl
sbb
mov
lret
inc
test
push
sbb
jmp
mov
lret
mov
clc
aaa
inc
loopne
stos
pop
nop
sbb
in
cwtl
jne
pop
in
aad
pop
mov
push
lds
aad
sahf
outsb
pop
sbb
sbb
int3
bound
in
adc
pop
xchg
push
iret
call
arpl
out
test
rorb
mov
dec
andl
xor
pop
and
pop
fiaddl
test
sub
ja
push
ljmp
lahf
dec
jp
je
mull
jmp
jno
nop
jns
mov
cwtl
mov
inc
bound
xchg
xor
popa
loop
push
shll
xor
pop
sbb
inc
push
mov
jle
pop
mov
iret
imul
int3
or
cld
dec
lock
sahf
fistl
push
mov
adc
hlt
imul
repz
jge
imul
xchg
push
out
nop
pop
repz
daa
lahf
mov
je
gs
in
es
inc
cmp
inc
mov
cld
bound
xchg
push
movsl
pop
loop
push
or
add
out
cld
or
lea
add
dec
and
mov
add
icebp
rorl
faddp
lret
sub
xor
mov
aas
test
aaa
mov
mov
xor
adc
add
scas
movsl
adc
inc
aaa
popf
in
sub
movsb
scas
enter
out
es
dec
stos
lock
mov
inc
mov
adc
fcmovnbe
or
cli
push
xchg
les
sbb
inc
and
adc
aam
out
mov
inc
push
daa
xchg
dec
adc
dec
adc
out
cmpsl
pop
cmp
shld
pop
jge
repz
jle
inc
out
adcb
lret
and
xchg
mov
mov
and
cmp
adc
adc
xor
push
mov
fisttpl
pop
mov
and
pop
sbb
aad
lret
sub
dec
xor
mov
dec
add
test
mov
rcr
loopne
mov
push
dec
or
jno
push
adc
xchg
ficoms
inc
push
inc
and
sbb
inc
sub
jae
jno
rolb
and
sub
fwait
jmp
scas
lea
jae
push
dec
mov
push
addb
movsb
into
clc
push
imul
test
das
movsl
jmp
mov
jmp
loopne
and
push
adcb
pop
mov
jb
jg
fcmovu
cmc
xchg
add
mov
inc
jecxz
add
inc
arpl
xchg
sub
test
xchg
stc
inc
sub
push
mov
int
mov
stos
jecxz
jbe
in
add
jge
push
sbb
sarl
js
loopne
movsl
push
sub
int3
mov
xor
imul
xchg
pop
jae
xlat
ds
mov
dec
test
cmp
cmp
inc
out
int3
sti
mov
mov
and
insb
imul
jg
les
enter
nop
ss
in
in
xchg
mov
jns
jmp
repz
sub
es
jecxz
scas
pop
add
mov
adc
jecxz
enter
lods
dec
sbb
mov
push
mov
and
scas
add
inc
packuswb
mov
mov
cmc
out
imul
xchg
lret
inc
test
add
cmp
pop
xchg
mov
stc
cs
negl
into
push
in
xor
jle
xchg
scas
mov
shlb
addb
ss
mov
jp
stos
cltd
out
cld
push
push
sub
jecxz
es
insl
dec
adc
shlb
xor
out
push
adc
pop
dec
dec
addr16
mov
insl
das
jns
jle
push
mov
out
ds
insl
int3
je
pop
aam
rclb
or
xchg
pmuludq
ss
pop
lfs
add
pop
adc
push
in
test
sbb
lods
popf
push
cmpsb
xchg
ss
fstl
lock
mov
movl
repnz
pop
fwait
pop
data16
fidivrs
xor
pop
lret
inc
lock
hlt
sub
push
call
mov
pop
sbb
filds
fstpl
mov
and
dec
and
cmp
jge
sbb
cwtl
or
xchg
not
shrl
or
in
xor
pop
dec
in
int
pop
sbb
adc
out
sbb
bound
xlat
aad
cmp
dec
aam
xchg
lds
lods
and
into
loop
fucomp
push
xor
pop
mov
call
addl
lret
fwait
call
ss
or
cs
mov
ljmp
push
outsb
push
ret
inc
rorb
retw
jo
inc
inc
ficomps
xchg
fisttpl
adc
std
xchg
lods
push
or
shll
scas
xchg
lcall
jbe
nop
aam
add
inc
mov
test
shrb
dec
fadds
sub
pop
in
fst
aaa
push
jnp
cwtl
fcmovnb
jae
dec
cmp
push
sub
fcmovu
nop
pop
dec
sbb
loop
push
adc
stc
pop
xchg
movsb
and
stos
xor
jle
pop
orb
inc
inc
out
mov
adc
int
dec
in
add
mov
outsb
xor
xlat
add
dec
xchg
std
jecxz
dec
shlb
add
not
dec
jo
inc
and
call
add
xchg
inc
lds
inc
das
jecxz
xchg
jle
dec
xchg
dec
mov
je
or
dec
xor
lahf
sarb
and
cwtl
movsl
jne
adc
sbb
cmp
sahf
sub
xchg
or
cwtl
sbb
lcall
sub
push
xlat
sub
push
jl
shl
sub
cld
lea
insb
loopne
notb
lcall
lods
outsl
ret
add
ficoms
aaa
adc
inc
mov
sub
arpl
dec
cwtl
sub
aam
add
mov
test
jl
sbb
sub
fstpl
pop
dec
and
and
lods
addb
in
pop
cmpsl
and
jne
sbb
movsb
rol
sahf
sbbb
sub
ja
push
sub
mov
fwait
adc
sub
flds
xchg
icebp
sti
add
nop
pop
cld
imul
mov
sbb
adc
loope
mov
lea
sarl
mov
sub
adc
sub
insb
andb
js
jmp
inc
add
push
xor
ja
adc
iret
les
cmpsl
mulb
iret
cmp
das
pop
loope
mov
and
leave
or
or
jae
mov
dec
shrb
pop
sub
push
and
inc
cmpsl
pop
jg
jmp
ficoml
inc
ret
call
jb
insb
sti
sub
sbb
out
fcoms
dec
xlat
xchg
mov
in
sub
pop
jmp
push
clc
dec
enter
mov
or
sbb
push
in
pop
adc
mov
test
cltd
mov
mov
fstpt
dec
pop
jg
fwait
ljmp
mov
adc
in
mov
cmp
sub
ficompl
cmpsl
mov
xlat
clc
je
add
outsb
pop
pop
ljmp
inc
sub
push
and
xlat
enter
or
hlt
or
inc
mov
mov
pop
inc
jecxz
fwait
mov
aas
cmp
addr16
push
mov
mov
test
icebp
cld
mov
shl
rorb
mov
jns
mov
jne
inc
enter
int
mov
add
jl
sub
push
insb
mov
push
in
lds
ljmp
hlt
pop
push
pop
shrl
sti
movsb
insl
rol
ficoms
and
popa
mov
lea
adc
push
mov
xchg
inc
ja
movsb
xor
daa
pop
mov
pop
cmp
loope
sbb
mov
dec
mov
ss
in
stos
add
or
arpl
sub
movsl
loop
dec
in
inc
cmc
jmp
mov
jns
cltd
jmp
mov
or
arpl
loop
lret
scas
sbb
push
pminub
push
movsb
push
fdivs
xor
xchg
outsb
xchg
inc
int3
mov
movsl
test
add
arpl
bound
jl
shlb
call
shl
cmpl
xlat
sbb
rcll
xchg
arpl
pushf
fstl
mov
fidivs
test
mov
inc
push
jg
or
pushf
or
sbb
add
aaa
test
sbb
jnp
mov
ficoms
stc
test
pop
dec
lahf
or
mov
arpl
dec
xchg
xchg
mov
lods
fbstp
pop
push
mov
outsl
push
mov
jb
mov
pop
jns
imul
sub
mov
mov
jnp
mov
add
xor
xor
imul
out
dec
sbb
adc
fs
arpl
cmp
ret
jb
mov
cmp
push
ss
or
sub
xchg
repnz
mov
loopne
adc
outsb
cmpsb
jecxz
adc
xchg
push
frstor
push
jnp
fidivrs
fmulp
ljmp
dec
out
insl
jno
aaa
fdivrs
and
sbb
repnz
sub
sarl
push
test
rcr
mov
loope
dec
aad
rclb
shll
inc
lock
int
push
scas
mov
push
fnsave
sahf
dec
clc
aam
movsb
adc
inc
lahf
push
xchg
rol
add
and
xchg
cmp
ret
mov
cld
xchg
and
cmp
leave
sub
push
fadds
cmp
adc
rorl
in
xchg
mov
dec
inc
nop
movl
je
daa
inc
addr16
movsb
jo
cwtl
fimull
jl
mov
repz
mov
mov
and
dec
fiaddl
pop
sbb
pop
sbb
ss
in
inc
push
sub
ret
dec
jno
sub
je
pushf
mov
fdiv
mov
xorb
mov
add
pop
cld
adc
and
lock
sahf
cmp
sbbb
out
sub
and
movsl
andl
in
push
and
ss
fidivrs
aaa
jmp
ss
out
out
int3
js
mov
jno
sbb
in
xor
inc
xlat
pushf
jl
movaps
loope
xchg
dec
ljmp
inc
mov
rorb
dec
or
sbb
mov
out
cmp
outsb
idivl
negl
push
mov
xor
or
decl
nop
push
imul
pop
ret
data16
xchg
jecxz
fincstp
icebp
insb
sub
adc
into
arpl
sbb
lea
push
int3
sub
sub
mov
sar
inc
jge
cmp
pop
add
ret
pusha
mov
cltd
in
mov
sarl
push
cld
imul
inc
repnz
fld
in
push
adc
sub
dec
mov
mov
out
jo
or
cmp
cltd
add
pusha
outsb
pop
push
gs
sbb
insl
leave
pop
mov
and
scas
sbb
lock
pop
mov
mov
jge
xchg
clc
adc
push
stos
out
std
push
gs
inc
cld
xchg
repnz
pop
mov
and
mov
sbb
push
pop
scas
dec
sbb
aam
adc
das
cmp
mov
in
dec
imull
scas
mov
lods
mov
stos
xchg
rorb
mov
sbb
pop
adc
outsb
xchg
lods
fsts
cmc
lcall
cmp
insl
outsl
stos
inc
sbb
xchg
xchg
adc
and
jns
imul
popf
ret
mov
adc
fadd
stc
push
inc
sub
popf
fisttpl
in
add
pop
mov
and
dec
lret
insl
ds
lcall
mov
mov
push
or
push
sbb
dec
add
push
ds
popf
inc
adc
cltd
fcomi
scas
push
xchg
sbb
jnp
sbb
inc
sbb
sbb
das
lock
mov
mov
push
outsb
jle
fimull
repz
jnp
pop
and
enter
int3
out
jg
sub
mov
cs
mov
in
mov
jne
js
lcallw
push
rorl
jns
mov
mov
push
adc
outsl
lcall
lahf
sub
push
daa
lods
movsb
mov
sbb
xlat
sahf
mov
icebp
sbb
xlat
mov
sub
loop
mov
jb
jo
sarb
in
pop
add
cmpsb
in
sbb
neg
pop
xchg
cli
inc
or
out
enter
mov
popa
mov
mov
adc
dec
incl
js
das
sbb
cmp
pop
mov
sbb
xchg
leave
or
mov
pop
or
pop
adc
sub
mov
repz
fs
stos
fadd
scas
pop
mov
ljmp
lea
xlat
jno
inc
je
lret
mov
scas
inc
push
xchg
aaa
arpl
loopne
lret
daa
pop
jbe
and
dec
jle
cmp
out
cwtl
cltd
addb
sbb
xchg
xor
test
xchg
scas
cmp
mov
scas
mov
addr16
stos
repz
sbbl
jbe
xchg
push
xor
lods
arpl
repz
shrb
nop
adc
or
daa
out
cmp
mov
out
out
sbb
repnz
pusha
adc
gs
mov
dec
add
daa
xor
push
sub
out
mov
push
std
std
faddl
sar
mov
loop
pop
jne
in
aas
jp
xchg
jmp
das
and
sub
mov
imul
jg
imul
aam
adc
ds
mov
inc
or
out
xchg
dec
sbb
mov
pop
sbb
ja
orl
stos
das
or
leave
loopne
dec
jge
cmp
addb
sbbl
scas
dec
mov
ss
sub
fidivrl
pop
jnp
call
sub
ror
aad
movsb
jne
jo
clc
pop
scas
push
in
les
add
les
lock
loope
dec
loope
aas
dec
mov
xchg
sarb
loopne
ffreep
fdiv
mov
bound
mov
adc
clc
xchg
std
out
mov
aam
mov
rdpmc
es
loop
shll
test
sbbb
movsl
cltd
addr16
rclb
aas
stos
repnz
imul
and
cld
lods
iret
jb
sarb
jne
lret
adc
lcall
aas
scas
sub
dec
and
nop
cmp
push
je
lcall
jle
dec
cmpsl
int
cmpsb
mov
push
imull
out
or
daa
aad
test
push
xor
adc
scas
mov
mov
sahf
div
inc
cmp
sub
movsl
jae
pop
notl
dec
cmp
out
clc
inc
lret
aam
cltd
ss
and
inc
inc
mov
int
hlt
mov
int
push
movsl
xlat
stos
cs
daa
sti
les
call
add
xor
pop
imul
mov
or
cmp
sarb
push
inc
daa
in
mov
scas
into
insl
insl
pop
xchg
in
stc
lcall
push
jbe
mov
ret
mov
add
mov
movsl
jp
aas
imulb
and
push
inc
pop
dec
inc
xchg
jo
jo
mov
jae
jmp
add
dec
lods
sub
dec
mov
cmp
test
dec
sub
add
out
sub
nop
or
xchg
xor
inc
ja
stos
jmp
jmp
pushf
leave
mov
cmovge
dec
inc
cwtl
fsubl
stc
mov
imul
repnz
loope
ret
mov
mov
ret
push
dec
and
mov
pop
jb
mov
or
xchg
sub
cld
test
cs
inc
or
and
lods
ja
enter
fucomip
adc
jnp
fidivl
and
mov
sub
icebp
movsb
mov
sbb
ljmp
adc
xor
lea
fwait
add
int
repnz
loopne
cmpsl
and
lret
mov
pop
loope
sub
ror
xor
sbb
mov
and
xchg
mov
cmp
data16
push
fsubs
xor
xchg
inc
cltd
mov
jmp
jo
inc
mov
ja
test
add
adc
xor
imul
jle
test
cmpsb
rcll
out
push
cmc
mov
mov
repnz
insb
es
mov
adc
adc
mov
sbb
add
fistps
cmp
jae
pop
fdiv
mov
test
or
imul
in
int3
js
xchg
push
das
scas
pop
push
push
dec
addr16
pop
movsl
data16
jns
or
add
and
in
addr16
mov
faddl
mov
outsl
fdivrl
dec
test
lea
repz
les
ljmp
fmuls
repnz
call
sbb
imul
fsub
xlat
fnstsw
mov
test
roll
shlb
cwtl
dec
cmpsl
mov
mov
sub
mov
sub
mov
inc
add
dec
mov
cmpsb
mov
pop
mov
ret
lret
inc
lret
clc
dec
les
jae
in
out
imul
cmpsl
adc
mov
mov
cmpsl
jmp
aaa
popf
push
sub
fs
test
sbb
imul
dec
sbb
in
pop
inc
sbb
add
fs
jns
out
int3
pop
or
adc
lret
xor
std
mov
ret
clc
loopne
mov
mov
dec
dec
in
or
and
adc
cmp
out
adc
sahf
cmp
mov
orl
cmpsb
inc
sbbl
je
push
outsl
out
negl
jnp
cmp
pop
pusha
lock
ljmp
lret
es
push
mov
test
fdivr
div
cmp
mov
push
sbb
pop
in
jb
push
sub
xchg
sbb
and
add
inc
jg
cmp
adc
cmp
sti
dec
and
sti
mov
mov
lods
jp
mov
cmp
test
cli
dec
jl
jne
sbb
cmp
lahf
mov
cli
popa
adcb
stos
lods
outsl
sbb
sbb
push
ljmp
and
push
push
sub
test
sub
jle
sarl
lret
and
int3
mov
call
into
rcrl
loop
stc
hlt
lret
enter
push
mov
jnp
fmuls
push
dec
fistpll
mov
insl
das
ja
icebp
adc
cmp
fdivrs
fdivrp
insl
sub
out
mov
mov
cld
lods
scas
test
jmp
xor
adcl
outsb
icebp
mov
rolb
leave
mov
jbe
or
xor
in
aam
shlb
sahf
test
jb
int3
xor
fldcw
dec
jb
and
push
cmp
aad
lock
adc
out
or
lret
dec
hlt
aad
inc
and
xchg
dec
divb
inc
jmp
jo
jne
enter
xlat
lret
push
jg
out
pusha
cwtl
mov
outsl
dec
dec
dec
gs
mov
push
aas
mov
fldl
fwait
xor
sti
iret
pop
fisubrs
addr16
sbbb
lret
addr16
test
inc
nop
jne
data16
cmpsb
stos
xchg
jne
mov
movsl
repz
inc
sti
mov
daa
lods
push
out
lret
idiv
rorl
aam
inc
jne
pushf
ja
testb
clc
dec
cmp
je
dec
mov
push
lahf
movsb
sub
pop
scas
add
jl
xor
cli
stos
lock
push
xchg
mov
mov
mov
je
mov
jge
xor
movsl
icebp
mov
sub
pop
cli
ja
adc
mov
jmp
cltd
jne
push
or
hlt
xor
lock
mov
xchg
outsb
adc
outsb
insb
into
sahf
cmpsl
dec
int3
jg
add
jns
repnz
push
adc
sub
dec
mov
mov
add
enter
fisubrs
insl
lret
jae
mov
loop
mov
sub
xchg
lods
mov
sbb
dec
imul
sti
xlat
fwait
mov
inc
cli
into
ret
jne
xchg
cli
push
push
int
add
ret
test
xchg
fdivl
or
or
cmp
jl
or
pop
mov
aas
push
je
xchg
cli
rcrl
push
sub
xchg
shl
out
decl
mov
out
or
lock
pop
rclb
cmp
mov
lcall
cmp
and
fiadds
daa
subb
push
sarb
mov
cwtl
adc
inc
sar
sub
sarl
imul
dec
lds
push
sti
mov
js
sahf
scas
cmp
insl
mov
orb
inc
test
cmc
rcr
lret
add
ljmp
xchg
mov
lods
sahf
cmp
dec
popf
rorb
pusha
orl
dec
cmpsb
sti
push
shll
sar
clc
cltd
add
data16
xchg
nop
lret
push
das
insb
ficoms
add
cmpsb
sbb
iret
xor
sub
arpl
shll
mov
popf
pop
cmp
cwtl
xchg
pusha
jnp
imul
fsubrs
inc
ret
dec
fs
arpl
push
add
sbb
add
sbb
push
lret
pop
lret
loopne
scas
out
pop
mov
add
push
mov
xlat
or
aam
or
aad
aad
and
pop
mov
xchg
movl
sbb
xor
mov
push
test
hlt
adc
std
out
lock
in
pushf
rcrb
inc
xchg
push
jg
mov
mov
jnp
sbb
ljmp
mov
push
mov
out
jb
jmp
xchg
cmp
stos
leave
jb
dec
test
sbbb
xchg
ja
bound
js
imull
push
test
in
mov
mov
pop
pop
add
in
inc
or
cmpsb
das
mov
imul
push
jmp
clc
out
jb
sub
negl
mov
sub
sub
in
jns
call
imul
mov
and
jecxz
adc
xchg
push
dec
xchg
and
lods
adc
test
and
cmpsb
jae
int3
repnz
aam
lea
xchg
push
js
jg
mov
xchg
inc
and
xor
loop
sbb
subl
inc
cmpsl
push
loope
dec
addr16
int
push
roll
jge
pop
lea
add
or
js
cmp
lods
outsl
int
in
jge
pop
iret
push
dec
rclb
mov
xchg
mov
or
icebp
aad
mov
jp
push
fstps
or
sub
adc
or
push
xchg
xchg
mov
xchg
jbe
and
stos
inc
or
xor
ljmp
add
mov
aam
dec
shl
cmp
test
xchg
sbb
and
hlt
cli
jbe
or
push
sbb
xorl
pop
scas
adc
xchg
or
mov
stos
arpl
pop
rcl
pop
pop
add
gs
push
jecxz
mov
ret
dec
dec
mov
fs
ret
out
popa
dec
adc
es
mov
std
arpl
or
mov
es
cmp
lret
mov
cltd
lcall
out
movsb
xchg
push
push
add
push
ljmp
repnz
lock
mov
xor
scas
bound
fnstsw
or
scas
movsl
in
mov
call
outsb
mov
adc
adcw
flds
stos
movsl
mov
or
mov
xchg
mov
pushf
sub
loope
ljmp
mov
or
pop
cmp
out
loop
es
bound
xor
jno
cmp
cmp
inc
aaa
in
or
rorl
roll
or
shlb
adc
adc
in
mov
push
test
mov
mov
jmp
push
cs
clc
push
ljmp
insl
imul
push
and
sub
mov
xorb
fmuls
mov
push
dec
jns
mov
test
int
pop
dec
mov
inc
add
loopne
add
push
in
mov
mov
push
dec
or
out
aad
mov
mov
cmp
sbb
dec
push
mov
push
push
enter
mov
call
add
xchg
loopne
test
lock
fwait
add
mov
mov
out
repz
xchg
lock
cpuid
mov
fisubrs
xchg
cs
xlat
icebp
sbb
sarl
dec
mov
dec
inc
dec
mov
aam
jge
int
xor
leave
stc
lods
inc
inc
lods
xor
or
lods
push
mov
sbb
sar
cmc
addr16
xchg
mov
repnz
popa
test
les
pop
enter
sub
jb
and
hlt
or
or
inc
pop
jg
sbb
aam
push
loop
jge
or
add
divl
mov
in
xor
movsl
sbb
push
enter
pop
stos
shlb
icebp
cwtl
sbb
mov
clc
push
ror
push
cwtl
clc
aas
pusha
iret
std
inc
mov
or
leave
mov
ljmp
roll
jmp
adc
das
aad
jg
js
jns
mov
adc
push
aam
push
jge
push
ja
loopne
xchg
and
mov
outsb
pop
jmp
outsb
in
out
fdivrl
cmc
dec
fnstcw
jp,pn
cltd
fsubrl
lods
adcl
mov
jbe
out
mov
outsl
adc
imul
ffree
inc
sbb
jmp
ljmp
pop
rcrb
pop
popl
movsl
insl
mov
add
jae
mov
ja
or
push
sub
mov
lods
incb
rcl
in
mov
mov
xchg
or
sahf
push
scas
pop
stc
push
rolb
adc
add
lock
and
xchg
les
popa
in
in
xchg
insb
mov
movb
cwtl
mov
sub
sahf
mov
cmp
add
adc
jne
fisttpl
mov
fdiv
test
insb
inc
subb
fdivl
aam
fimuls
xchg
inc
roll
loope
das
pop
fsubrp
xchg
add
adc
sbb
in
sbb
or
xor
mov
rcrl
dec
inc
mov
movsb
jb
leave
jns
jge
adc
ror
jns
subl
jns
bound
or
jb
aas
sti
fdivl
repnz
outsb
jo
aas
jbe
ret
into
shlb
inc
sahf
lea
roll
pop
daa
dec
aaa
or
and
aad
mov
call
lcall
pop
fsubs
add
movsb
xchg
fs
rcrl
sbb
or
xchg
inc
shr
popa
pop
imul
pop
or
lods
flds
in
ret
into
or
pop
loope
mov
gs
jbe
lods
add
in
test
scas
xchg
mov
scas
push
movsl
inc
ja
mov
aam
mov
mov
push
test
bound
cmp
mov
data16
bound
js
ds
or
cmpl
out
fidivrs
push
xchg
dec
lods
orl
mov
cmpsl
int3
shll
jns
mov
xchg
xchg
mov
inc
iret
adc
cltd
push
mov
fldt
mov
mov
mov
cs
mov
mov
insb
cmc
pop
in
ret
decb
rolb
popf
aad
mov
sbb
jg
adc
gs
inc
call
imul
add
mov
jne
cld
dec
nop
pop
inc
jnp
aad
js
pop
xchg
push
pop
push
in
inc
arpl
dec
in
or
inc
and
add
or
push
iret
mov
xchg
repz
sbb
das
test
jmp
adc
scas
mov
out
adc
lret
or
xlat
push
out
adc
sub
push
gs
xor
jne
mov
adc
popa
ja,pn
lcall
mov
lock
xchg
cmpsb
pop
pushf
pop
xor
pop
sub
in
stos
mov
lret
test
lahf
inc
hlt
mov
cmp
or
rcll
and
cmp
insl
movsl
pop
or
icebp
lds
pop
std
push
pop
sub
jo
push
mov
mov
aam
sub
xchg
adc
std
jg
imul
add
xchg
jp
in
sub
push
test
push
fildll
out
xor
sti
jmp
mov
mov
sbbb
cli
hlt
in
cmpsl
push
aas
mov
jae
fstps
push
inc
cmp
mov
cs
push
shll
or
mov
pop
sbb
pusha
push
aad
and
jg
mov
mov
jne
call
sbb
aas
adc
xor
clc
xchg
gs
call
stos
arpl
outsl
pop
push
mov
add
mov
pop
push
pusha
bnd
call
and
push
loop
mov
fbld
mov
fucomp
or
outsl
sbb
push
gs
mov
lock
fisubs
int
jmp
dec
or
xor
lret
xchg
inc
pop
dec
add
pop
fbld
fsubp
hlt
out
and
cwtl
loope
pusha
sub
lret
push
pop
ret
sbb
sbb
adc
test
jne
or
mov
push
cld
aad
push
adcl
lret
mov
sbb
popa
roll
std
test
test
stos
inc
hlt
je
pop
out
lods
inc
movsl
neg
push
popa
sub
dec
push
testb
mov
dec
int
xor
ficompl
push
xor
out
cmp
fbstp
mov
push
jmp
sbb
add
iret
or
in
aam
jmp
jbe
outsl
xchg
pop
xchg
adc
cld
add
and
and
mov
call
add
push
ds
jmp
jnp
jb
push
sbb
xor
in
mov
adc
adc
dec
test
fwait
sarb
cli
or
cwtl
stc
lret
iret
xor
jbe
xchg
movsl
rcl
dec
in
xor
loope
push
mov
insl
push
movsl
shr
ljmp
movsb
notl
and
cmp
add
cmp
mov
fabs
or
inc
out
ds
jg
cwtl
push
jmp
popa
sbb
cmp
ret
cmpsb
dec
xchg
cmp
ss
lock
inc
xchg
cmpl
push
rcll
push
mov
dec
xor
clc
cmp
add
push
mov
xor
xor
pop
sbb
orb
movsb
loop
cmp
inc
out
jp
fcoms
sbb
lods
cltd
cmp
mov
push
in
add
adc
rcrl
loop
ljmp
sub
adc
outsb
jp
sub
jno
mov
idivb
xchg
cltd
push
lds
pop
jo
loop
push
push
fldcw
sub
add
or
push
sti
fisttps
lahf
dec
inc
iret
outsb
add
add
pop
push
pushf
push
push
cmpb
mov
arpl
aas
cmp
lods
sti
push
aam
dec
insb
ljmp
aas
mov
je
lods
cmpl
pop
push
stos
jge
out
dec
sbb
cmpsl
fisttpl
decb
pop
push
pop
mov
jo
ds
dec
jb
cmc
lods
ret
rol
pop
je
pop
stos
inc
std
pop
adc
icebp
mov
insb
mov
push
dec
sahf
popf
test
test
pop
add
cwtl
xor
push
dec
clc
lds
inc
adc
and
data16
add
push
dec
lahf
ds
jo
movsb
xor
push
rcr
sub
adc
enter
stos
fcomps
fnstcw
jp
mov
and
call
xchg
jo
sbb
pop
xor
and
out
iret
aad
xor
les
sub
lea
jp
arpl
divl
and
inc
outsb
mov
fwait
mov
mov
and
pop
push
xor
push
insl
popl
shll
dec
sub
and
add
mov
ds
fsubp
pop
push
es
stos
enter
mov
push
sub
sub
pusha
push
mov
stc
dec
jg
test
repz
packssdw
rcll
test
push
lret
aad
les
xlat
push
enter
mov
or
bound
into
jmp
out
mov
mov
popa
add
push
cltd
pop
mov
sarl
or
xchg
and
mov
shlb
jo
jno
imul
push
jnp
cli
sti
in
rorl
adc
ficomps
dec
mov
jae
repnz
cwtl
adc
push
push
pushf
popf
inc
das
mov
push
adc
push
pusha
aaa
mov
pop
xchg
mov
ss
xchg
rcll
jb
xchg
and
adc
sbb
mov
test
jge
jno
shrl
lcall
lods
sub
pop
dec
addr16
push
sub
pop
push
pop
jp
sbb
mov
mov
fildl
xchg
je
cli
popa
in
stc
xchg
roll
loopne
sub
jmp
jg
pop
in
mov
out
cmp
mov
mov
fldpi
xchg
adc
clc
stos
fisttpl
lcall
lds
dec
lahf
or
push
cs
out
sub
or
xchg
or
enter
in
pusha
lock
dec
inc
mov
test
dec
xor
jbe
jns
mov
mov
sub
sub
jle
inc
push
fs
mov
sbb
fs
adc
xchg
fcoms
mov
fwait
push
mov
repnz
lea
xor
sahf
cli
jge
dec
pop
push
xchg
inc
xchg
xorl
push
test
cwtl
iret
push
inc
daa
dec
bound
pop
jecxz
add
xor
xor
jle
push
hlt
lods
sarl
outsl
in
mov
jg
cmp
scas
and
xor
fcompl
lds
lahf
mov
cmc
mov
stos
dec
in
sbb
jne
sub
push
xor
sbb
xchg
imul
fs
jge
andb
sub
out
xor
or
fsubr
mov
popf
out
push
lret
aam
testb
mov
add
or
sarb
inc
or
pop
xor
pop
and
sub
or
mov
xchg
fs
xchg
push
mov
call
mov
scas
jecxz
push
sub
sub
movsl
imul
sub
and
pop
xlat
add
insl
inc
std
pop
inc
xlat
mov
flds
xchg
jmp
lds
in
movsl
add
fimuls
jne
in
push
add
cmp
sbb
push
push
clc
lock
xor
pop
pop
js
std
pop
push
out
inc
pop
pop
cmp
ss
in
repnz
imul
sbb
sbb
add
sbb
mov
shlb
mov
xor
lcall
ss
pop
insl
adc
adc
leave
sbb
mov
cmpsl
cli
pop
stc
popa
mov
mov
mov
jp
stos
dec
fdivr
lea
cli
add
add
and
adc
push
lahf
or
aad
inc
dec
loopne
add
jbe
insl
push
push
push
imul
stos
mov
sub
bound
enter
mov
out
inc
movsb
ret
clc
jge
mov
jns
cmpsb
and
rorb
sub
pushf
mov
andl
mov
mov
or
std
imul
jl
ret
arpl
dec
and
sub
jg
and
inc
or
xchg
mov
cmp
xchg
cld
ja
inc
shl
sub
pop
jecxz
xchg
lock
loope
imul
add
pop
sub
push
push
mov
sub
fnstsw
fwait
dec
mov
jle
pop
inc
add
xchg
sarb
cmp
inc
pop
pushf
iret
pop
mov
pop
icebp
sub
pop
ret
and
repnz
sbb
xchg
xor
add
pop
xchg
pusha
push
push
jmp
cmp
fsubl
xlat
hlt
or
aam
pop
movsl
cmp
sbb
es
sbbl
mov
sub
adc
arpl
sub
in
mov
inc
ret
dec
insl
add
sbb
ss
fildl
jle
popa
sbb
mov
rcrl
cmp
test
cld
int3
adc
lock
faddl
xlat
insb
xchg
pop
xor
fcomps
adc
xchg
sar
xor
bound
xor
inc
dec
add
xorl
push
mov
mov
and
jo
jne
sub
inc
adc
in
xor
or
pop
push
sbb
cmp
loopne
push
loope
jg
inc
mov
dec
jmp
mov
adc
mov
push
scas
lahf
xor
mov
push
pop
fsub
pop
xor
cwtl
jne
push
xor
push
jge
mov
rcl
jae
mov
test
or
cs
adc
inc
dec
and
push
sahf
popf
sub
fs
mov
cltd
data16
xlat
mov
mov
cmp
cmp
das
or
pop
in
pop
xchg
ret
mov
daa
shl
mov
mov
push
aam
add
jb
repnz
sbb
out
repz
cli
mov
daa
cmp
add
xor
mov
adc
pop
data16
xchg
adc
es
cmpxchg
add
cwtl
xor
mov
xchg
and
pop
mov
cli
xlat
inc
dec
scas
adc
out
pop
fs
xchg
mov
aaa
shl
out
fdivl
xchg
xor
movsb
push
icebp
cmc
fdivl
jle
or
inc
add
pop
imul
stos
in
mov
inc
cmp
push
add
inc
lret
andl
mull
test
or
aaa
lock
xchg
pop
mov
mov
mov
ficomps
popa
aam
mov
test
mov
test
sub
push
gs
jmp
daa
loopne
cmp
inc
inc
mov
adc
in
inc
add
hlt
cs
test
push
bound
and
cwtl
mov
add
sbb
dec
mov
mov
repnz
jbe
fildl
loop
pop
pop
adc
cwtl
scas
addr16
data16
mov
mov
addr16
ds
insb
or
pusha
scas
repz
cltd
test
xor
add
ja
mov
inc
or
movsl
test
call
mov
ds
ja
mov
fld
enter
pop
adc
jbe
xchg
xchg
add
in
cmp
lahf
jne
push
stos
rorb
or
cmp
or
bound
outsb
xchg
rorl
mov
in
lea
roll
and
adc
jmp
inc
push
pop
push
jbe
mov
pop
ds
test
lock
sti
mov
xchg
jmp
pushf
jmp
mov
aaa
out
mov
mov
push
cwtl
int
mov
cmp
test
ror
dec
aad
jb
fwait
lret
cs
sbb
adc
fucomp
mov
arpl
insl
pop
and
insb
sub
pop
insl
mov
cmp
dec
pop
leave
mov
mov
sbb
ljmp
fldcw
lods
icebp
xchg
jae
pop
add
pop
test
jle
sub
mov
mov
mov
jno
pop
aaa
fs
inc
mov
cmp
mov
data16
std
mov
cmp
adc
jmp
dec
sub
dec
pop
pop
ja
pop
jno
icebp
push
cmpsb
cmp
test
push
iret
and
cmc
mov
test
and
pop
filds
add
adc
scas
sar
and
fidivs
in
push
fsubl
cmpsl
ss
mov
fstpt
repnz
sbb
popf
inc
insl
fistpl
xor
shrl
fdiv
ja
out
mov
ljmp
fimuls
das
and
fsubl
call
mov
xchg
jbe
lods
inc
rcrl
mov
insb
jb
imul
scas
mov
jns
sti
adc
pop
sbb
pushf
adc
add
xcrypt-cbc
cmpsl
xchg
push
pop
or
enter
inc
std
pop
out
dec
data16
dec
sub
add
jns
mov
mov
in
mov
out
inc
ljmp
out
and
mov
dec
mov
inc
popf
xchg
and
xor
mov
mov
nop
jbe
push
insb
mov
mov
loopne
fstpt
movsb
cltd
sbb
xchg
lods
xchg
stos
in
or
insl
push
fildl
adc
out
inc
pop
mov
xor
pushf
jecxz
cmp
frstor
adc
push
xchg
jl
add
fwait
mov
jae
pop
jae
in
add
cld
fcomi
adc
fstl
push
push
mov
xchg
clc
out
popaw
out
fmul
sub
test
pop
popa
or
cltd
lahf
mov
addb
adc
mov
call
nop
sub
xor
ret
test
jns
jne
ss
addl
gs
arpl
push
mov
push
cmc
fmull
aas
push
sbb
out
into
dec
mov
push
enter
xchg
jge
in
jmp
xor
dec
and
outsb
inc
mov
mov
negb
rcrl
mov
or
or
dec
sbb
or
jg
outsb
repz
lods
sbbb
fwait
jns
fwait
jns
push
rcll
rcl
pop
movsl
loop
sub
inc
hlt
jge
jo
sbb
jge
int3
mov
shrl
call
cmp
ret
xchg
lcall
pushf
sti
addl
dec
push
shl
cmpsl
scas
push
je
cmp
xchg
call
ljmp
and
sub
pushf
insb
push
inc
xchg
jne
lahf
fildl
dec
mov
mov
mov
push
xor
aas
sbb
insl
inc
js
ret
cs
push
into
mov
jb
xchg
add
add
dec
leave
pop
cltd
dec
ss
int3
and
jl
test
add
lcall
test
xchg
dec
inc
fimuls
mov
repz
addr16
inc
enter
lods
mov
xchg
fistpll
scas
or
or
aas
or
hlt
hlt
push
pop
and
mov
cmp
pop
xor
push
js
rclb
sbb
jbe
aam
xor
xchg
inc
adc
loopne
dec
pause
lock
mov
into
lock
outsl
xor
jg
and
mov
add
es
sub
or
call
rclw
push
inc
ja
das
repnz
nop
adc
fadds
fwait
int
imul
rcrb
inc
cmpsb
rcr
adc
dec
pop
iret
mov
dec
fidivrs
out
int3
lea
xchg
insl
test
cmpsb
inc
mov
stos
insb
adc
xor
mov
cs
push
movsl
clc
mov
pop
xchg
mov
shlb
inc
adc
movsl
pop
hlt
and
cmp
and
mov
stos
adc
mov
dec
pushf
xchg
test
adc
mov
mov
sub
lret
icebp
lahf
mov
adc
jb
jge
mov
dec
repnz
mov
mov
into
jg
push
dec
push
gs
mov
loope
adc
sbb
xchg
ljmp
nop
push
iret
push
out
into
xor
lret
lahf
jmp
mov
sub
mov
xchg
pop
ljmp
invd
push
ss
ffreep
jb
adc
pop
mov
lret
aam
fs
jno
push
inc
xchg
addl
movsl
loop
jns
push
subb
outsb
mov
sbb
subb
fidivs
push
sahf
and
mov
sub
jne
push
movsb
outsb
movsb
imull
sub
test
dec
or
xor
push
add
aas
test
movb
sub
mov
mov
out
sub
fwait
push
cmp
outsl
pop
sbb
mov
push
clc
xor
push
or
mov
adc
mov
jno
add
jmp
pop
int
ret
bswap
mov
pop
outsb
xchg
gs
sahf
jmp
insb
stc
lods
inc
sbb
pop
xor
pop
std
dec
shll
mov
push
in
or
sub
dec
mov
addb
jns
push
push
aam
jecxz
jecxz
xchg
cmp
lea
dec
outsl
insl
fprem1
loope
sbb
dec
jb
rclb
in
add
push
int
mov
jns
into
cmpsl
pop
mov
jno
in
xchg
xchg
or
sahf
jns
loope
inc
data16
or
lret
xchg
sbb
arpl
mov
enter
outsl
push
push
xor
sub
mov
scas
mov
sub
loopne
repz
test
stos
fucomi
cmp
ds
xchg
pushf
inc
and
fsubp
int
test
pop
dec
push
xor
and
cmp
xor
jbe
mov
inc
pop
js
xchg
jmp
xchg
in
or
xchg
and
inc
test
dec
outsb
pop
popa
jmp
fiadds
sti
hlt
jle
jmp
aas
mov
ficoml
jge
dec
sub
dec
lock
push
sbb
dec
pop
ret
or
das
and
and
hlt
xchg
rolb
push
or
and
mov
jg
imul
adc
lock
pop
jns
jg
ja
xchg
int
mov
fs
or
and
adc
stos
mov
or
push
or
sub
or
outsb
decb
cli
jns
adc
dec
push
js
or
into
adc
jno
jne
into
pop
adc
repz
arpl
xchg
fisttps
inc
dec
push
cltd
ljmp
std
fistpll
aad
jmp
xor
inc
pop
mov
mov
jmp
sbb
add
sti
push
xchg
imul
out
in
xor
push
cmpsb
sti
pusha
lret
out
mov
popa
loope
test
rcl
push
repnz
faddl
lahf
mov
ret
hlt
int
gs
leave
mov
lock
adc
mov
push
jle
stos
stos
push
cmp
insb
jno
cmp
testl
loop
cmpsl
sub
pop
jg
sub
mov
jbe
sbb
mov
pop
mov
jb
aad
mov
ja
divl
xchg
mov
popa
add
and
adc
fadd
enter
out
pop
sub
test
push
fbld
mov
sub
mov
or
data16
lahf
dec
inc
add
mov
sbb
adc
sub
jecxz
outsb
push
imul
call
push
xchg
jl
loopne
jg
adc
adc
testb
dec
push
not
cmpsl
jle
dec
ss
jo
push
aaa
inc
adc
shr
fildl
jge
sub
fadds
in
mov
sarb
in
stos
in
sub
fisubl
cmp
das
push
sub
pop
cmc
push
sbb
mov
xchg
xchg
into
leave
enter
dec
insb
jo
xor
push
xor
into
inc
daa
cmpsb
pop
and
bt
ror
jnp
sub
inc
clc
stc
sbb
xchg
cmp
cmp
jle
pop
insb
mov
sub
xchg
aaa
xchg
mov
fcomps
call
inc
and
jo
into
sub
or
mov
jae
iret
iret
outsl
push
jae
mov
jbe
rcrl
or
mov
cmp
and
jmp
push
pop
mov
dec
les
jb
aam
and
stc
xchg
cwtl
stc
das
outsl
lcall
lods
push
int
rcl
push
cld
pop
mov
movsl
loope
mov
test
xchg
popa
mov
fistl
outsb
mov
fcomi
adc
int3
xchg
mov
push
frstor
mov
mov
cltd
out
imul
test
jl
lock
jg
push
adc
mov
in
mov
in
cld
lcall
pushf
std
fstl
data16
adc
mov
cmp
insl
or
jbe
addr16
lret
mov
cmp
out
xchg
popa
enter
fwait
adc
push
ss
mov
pop
loop
cmp
xchg
push
adc
repnz
xchg
jno
rep
hlt
and
in
pcmpgtw
mov
xchg
inc
movsb
mov
dec
xchg
inc
call
sbb
lcall
insb
mov
xchg
inc
add
popl
in
lcall
movsb
or
mov
call
push
je
pop
sbb
mov
or
mov
sub
orb
fiaddl
jmp
pop
inc
inc
int
adc
mull
pushf
mov
mov
popa
test
xchg
pop
sarb
push
jg
inc
scas
pushf
nop
push
cs
ljmp
cmp
sbb
add
add
out
loopne
stos
gs
pusha
xchg
fmulp
insl
cli
out
cld
or
mov
push
dec
and
scas
pop
jge
sbb
mov
push
icebp
dec
arpl
mov
lahf
sub
lret
mov
and
icebp
cltd
jo
aam
pop
push
push
outsl
mov
adc
dec
sub
repz
in
cmc
dec
decb
mov
or
jns
fimuls
sbb
xchg
xor
das
mov
inc
mov
lcall
adc
xchg
pop
xchg
sbb
dec
add
push
lret
xor
mov
out
push
adc
jecxz
or
mov
lods
or
jp
mov
push
or
imul
jne
js
jae
popf
mov
cld
mov
scas
sub
fldenv
arpl
jg
cmp
pop
mov
inc
jp
xchg
jg
sub
xor
cmp
ret
mov
imull
movsb
and
rcll
pop
stos
imull
or
inc
dec
xlat
stos
jns
cld
sbb
data16
mov
mov
test
or
mov
jb
push
jnp
ret
int3
jb
mov
arpl
gs
mov
jp
fnsave
aad
mov
out
xor
sbb
mov
adc
adc
std
test
das
subb
jl
mov
mov
push
mov
into
adcb
jnp
dec
addr16
sub
lret
sbb
cld
add
negl
shl
lea
jle
int
xchg
test
cmp
pop
or
bound
add
cmc
xchg
adcb
push
fadds
adc
movsb
push
lahf
aam
shrl
fcompl
cmp
mov
mov
std
je
js
mov
push
shll
stos
into
clc
fldcw
dec
lea
shlb
sti
sub
std
shrb
gs
mov
fistpl
push
iret
fwait
cmp
fidivrl
mov
sahf
out
push
arpl
jmp
lea
std
mov
call
aam
clc
jmp
rorl
or
insl
popa
scas
in
push
clc
cmc
loop
cltd
sbb
mov
xor
leave
jmp
sbb
or
flds
int3
mov
fs
mov
test
ds
icebp
ljmp
and
outsb
lcall
sub
into
jmp
fadds
daa
into
add
mov
scas
movsl
dec
xchg
mov
xchg
lods
loope
fsubl
mov
mov
xor
out
pushf
shlb
sub
push
dec
imul
rolb
mov
out
dec
in
fs
mov
mov
shll
rclb
mov
mov
sbb
stc
push
and
ds
push
jo
cmc
jl
fcmovb
mov
or
add
loop
sbbb
dec
ljmp
outsl
jmp
cmc
cmpsl
mov
xor
lds
xchg
cwtl
js
sbb
les
imul
pusha
lock
mov
movsb
fistl
shlb
add
pushf
push
mov
xor
das
stos
call
xchg
jecxz
dec
adc
mov
lods
loop
lahf
dec
sub
adc
mov
mov
and
jp
rclb
lods
mov
outsl
hlt
sub
push
sub
cmp
int
push
or
mov
sub
test
roll
popa
adc
fdivp
loopne
dec
sbb
inc
pop
out
jge
jl
ficompl
sbb
lret
loopne
mov
pop
rolb
inc
adc
mov
aas
push
test
pop
data16
mov
testl
popaw
pop
jecxz
adc
leave
pop
pusha
aas
and
sbb
cmp
sbb
call
repz
xor
movsb
in
fxch
dec
inc
and
call
in
clc
jbe
ss
or
lock
loopne
stos
popf
xor
lret
icebp
jge
jne
iret
push
push
sbb
sahf
pushl
in
mov
sub
dec
sub
jb
fdivs
out
ljmp
call
popf
cmc
lret
cmp
mov
fwait
cld
mov
mov
cmp
sub
fstl
call
and
dec
test
push
xchg
inc
mov
test
jo
repnz
fwait
or
push
pop
dec
cmp
shlb
xchg
jne
dec
push
aaa
cmp
mov
xor
and
cmp
mov
adc
mov
test
popf
mov
mov
pop
mov
lea
iret
clc
inc
cli
data16
in
add
pop
imul
imul
cmp
repz
loopne
mov
insb
iret
mov
add
jecxz
loope
inc
inc
cmp
les
sti
lahf
in
enter
cmpsl
insb
or
mov
jge
test
dec
dec
and
daa
rcll
sub
mov
pop
push
cwtl
xlat
lea
push
xor
fwait
xchg
ffreep
in
insb
mov
inc
jge
push
mov
das
or
mov
shrb
rorb
lods
jp
xchg
pop
jl
add
and
sbb
xchg
cmp
inc
insb
outsb
iret
and
loopne
aad
ss
jae
adc
cli
add
xor
cli
repnz
xlat
in
cmp
jbe
lods
jns
cs
test
lea
sbb
add
dec
icebp
mov
mov
jo
cmp
inc
adc
test
inc
scas
and
pop
fadd
in
or
cmp
and
jns
cmp
inc
daa
inc
gs
mov
jbe
adc
aaa
shll
fs
leave
jb
or
testb
stos
inc
jl
lret
and
idivb
lods
push
fistpl
lock
mov
lret
and
leave
sub
and
into
ds
icebp
nop
cmpb
idiv
test
movsb
sub
push
push
loope
cmpl
dec
push
imul
das
push
push
pushf
or
hlt
cmp
jo
test
lret
lret
lret
mov
fucom
das
push
movsl
or
inc
mov
mov
add
loopne
stos
dec
movsl
dec
dec
push
arpl
clc
xorb
inc
inc
cs
mov
imul
xchg
cwtl
icebp
inc
sub
mov
pushf
xor
insb
jle
add
jno
ja
or
fdiv
adc
int
or
in
and
and
std
cmp
or
pop
mov
push
call
pushf
xor
xchg
in
jbe
imul
lods
xor
cmpb
call
out
adc
cwtl
out
pop
addl
push
push
test
push
inc
fldt
push
pop
pop
stc
lret
repnz
dec
rolb
sbb
inc
xor
popf
aad
out
xchg
sbb
inc
mov
xchg
jp
lds
insb
mov
push
xchg
jb
and
lret
lea
mov
sbb
mov
inc
in
xchg
jge
pusha
gs
pop
mov
inc
loopne
ja
pop
xchg
push
lock
mov
sahf
std
jne
ja
sar
sub
in
adc
pop
xchg
pop
ja
or
rclb
xchg
leave
out
bound
fsubl
imul
push
adc
cmpsl
fmuls
pop
inc
testb
sbbl
mov
aas
mov
adc
cmc
mov
adc
test
xchg
clc
cld
in
dec
pop
aaa
loopne
dec
movl
int
lret
jae
dec
push
jo
stos
jecxz
add
int3
scas
lret
pop
int3
lds
scas
int
and
sbb
lcall
or
cmpsb
pop
jb
repz
mov
add
mov
add
add
clc
xor
add
sbb
adc
jns
fnsave
arpl
mov
divb
xchg
test
pop
cmc
xor
lcall
xor
fists
push
adc
cmp
mov
jmp
dec
dec
or
and
sbb
cmp
cmp
iret
dec
mov
repz
adc
sbb
fsts
sbb
aaa
jo
rcrl
mov
cmp
fwait
pop
mull
outsl
xchg
jno
dec
bound
mov
loope
and
out
hlt
rcr
cs
dec
jnp
pop
inc
sub
xorl
push
fmuls
push
int
ret
dec
or
sahf
cmpsb
jmp
sbb
cmc
les
cmp
cmp
out
xchg
push
dec
in
clc
jnp
fnstsw
jmp
inc
sub
jne
idiv
sub
insb
jno
sbb
inc
adc
cli
jmp
jo
arpl
cmp
push
jno
inc
loopne
enter
aam
sbb
aam
mov
inc
dec
rol
fxch
adc
mov
clc
fidivs
sub
push
push
cmc
fisttpl
and
xchg
movsl
daa
dec
shl
mov
arpl
ja
inc
cli
scas
into
loopne
daa
sub
loopne
jl
adc
inc
mov
insb
rolb
out
inc
lds
or
test
insl
and
lds
inc
js
add
push
insl
int
rolb
in
movsl
push
decl
push
adc
ds
jo
pusha
lcall
icebp
sbb
pop
jge
imul
pop
repz
push
mov
xchg
fs
sbbb
push
sub
push
int3
jmp
shl
iret
pop
inc
fs
mulps
jo
sub
mov
add
push
pop
cmpsl
mov
add
or
or
pop
and
repnz
mov
push
mov
fldlg2
push
xchg
insl
sub
xchg
arpl
pop
sbb
and
vcvttss2si
int3
push
or
rcrl
pop
and
pop
cmp
cmp
test
in
xchg
out
roll
xor
outsb
xchg
sbb
dec
jle
jp
loope
inc
cmp
xor
mov
cmp
mov
mov
lods
push
mov
mov
adc
outsl
pop
cltd
mov
imul
sub
mov
cld
orb
stos
sbb
cld
jmp
xchg
inc
mov
stos
rcr
xchg
mov
jne
andb
dec
jb
xchg
lods
cltd
les
loopne
aaa
mov
ds
cmpsb
imul
in
aad
xchg
jge
push
mov
pop
adc
lcallw
andb
inc
xchg
add
out
jle
adc
lods
push
repnz
and
daa
mov
lods
into
jbe
bound
xchg
mov
ljmp
sbb
jge
jge
sub
sbb
les
cmp
inc
xor
jl
add
mov
mov
lock
outsb
xchg
pop
cld
pop
jne
push
les
jl
sbb
xlat
aaa
mov
les
xor
lds
jae
or
scas
cli
pop
xor
mov
iret
jae
aaa
jnp
fmuls
xchg
mov
outsl
aad
or
or
cmpl
mov
rorb
and
or
into
cmp
lcall
lcall
int
sbb
mov
push
in
int
sub
or
loope
stc
and
in
enter
sbb
push
sbb
cmpsb
loopne
je
int
xor
mov
xchg
shll
jb
jns
dec
aam
loopne
mov
loopne
dec
mov
jmp
mov
test
pop
xor
mov
mov
sti
sub
push
push
push
mov
cmp
mov
aad
test
sbb
popf
shl
iret
xchg
dec
mov
mov
add
clc
jo
inc
pop
inc
or
in
rorb
and
cmp
mov
lea
repz
popa
ficompl
nop
sub
xlat
ss
and
bound
cs
inc
xchg
sbb
mov
enter
jp
decb
adc
cmp
jae
mov
movsl
ds
mov
jmp
ret
loopne
xlat
shl
outsl
push
or
mov
in
data16
mov
fistps
je
mov
adc
scas
dec
sub
stos
mov
mov
jl
leave
and
les
jb
rcll
mov
cmc
mov
loope
and
jbe
stos
add
movsb
loope
mov
xor
loope
add
scas
xchg
mov
dec
jb
shrb
cmp
adc
movsb
and
imul
mov
xor
adc
xor
jae
mov
inc
js
fcmovnbe
jns
call
sbb
ss
mov
es
pusha
ja
nop
repnz
in
int
add
sbb
mov
stos
js
ret
insl
lods
mov
daa
sub
and
sbb
aaa
stos
pop
mov
pop
mov
dec
enter
mov
out
dec
jno
imul
call
sub
push
pop
dec
sbb
add
adc
and
pop
and
mov
test
cmpsb
enter
mov
xorl
add
jb
xor
push
rcl
sbb
inc
shlb
loopne
dec
insl
nop
sbb
sub
dec
push
lea
ja
jle
dec
adc
sub
insl
mov
push
mov
pushf
and
test
lock
sti
sub
or
inc
out
add
dec
mov
imul
hlt
push
xor
xor
in
test
in
cli
inc
flds
iret
js
sarl
xchg
insl
loop
dec
jb
loop
add
jbe,pt
repz
dec
adc
add
lret
dec
dec
inc
push
insb
mov
clc
sub
or
leave
bound
imulb
push
rorl
mov
imul
cli
push
test
pop
clc
sbb
sub
lea
inc
scas
das
arpl
push
testb
sahf
mov
mov
inc
lds
jle
sbb
rclb
cwtl
mov
scas
xlat
mov
loopne
push
jg
add
mov
idivl
sbbb
sub
test
sbb
dec
test
roll
mov
je
bound
mov
jp
jmp
call
in
mov
push
addr16
sti
in
fsts
and
mov
lods
shl
cwtl
cmp
pop
xchg
test
in
fxtract
add
insl
mov
jl
mov
add
loop
jbe
xchg
ja
leave
les
adc
cltd
out
xchg
cltd
jmp
mov
mov
and
lods
dec
jmp
mov
dec
fmull
xchg
xorl
cwtl
mov
add
jae
aaa
in
dec
mov
adc
stos
xor
add
mov
inc
cmc
sub
insb
jnp
lret
inc
imul
or
adc
int3
lea
or
mov
jl
rcll
hlt
cmp
mov
xchg
xchg
aas
bound
pop
pushl
fdiv
inc
fsubrs
mov
push
addl
add
repnz
cmp
add
push
aaa
daa
mov
js
dec
and
dec
fstps
push
xchg
and
insl
nop
repnz
xor
mov
push
pop
arpl
sub
aas
pop
push
lds
and
inc
or
shl
cmp
jg
rorb
xor
xchg
jnp
mov
jmp
icebp
int
jo
lahf
lahf
and
in
sub
push
lock
mov
into
xlat
sub
pop
fdivrl
mov
incl
add
loopne
sub
bound
jmp
mov
push
mov
sbb
in
add
push
jae
loop,pn
jnp
rcrb
mov
add
lcall
xor
iret
mov
rcll
int
repnz
push
adc
xor
or
xor
sbb
xchg
fcmovnu
mov
pop
pop
lcall
dec
jb
inc
inc
mov
mov
neg
inc
movsb
in
shrb
icebp
sub
fadds
repz
mov
leave
push
lock
push
inc
int3
fistpl
xlat
aad
jge
mov
pop
insb
mov
movsb
sub
adc
ja
adc
lcall
dec
loopne
jb
sbb
mov
pop
js
insl
imul
sbb
xor
scas
mov
sahf
test
sub
lods
xor
or
adc
sub
inc
dec
push
aaa
jmp
push
out
adc
lock
and
stos
aam
inc
push
cmp
mov
mov
add
adc
insb
and
adc
mov
in
adc
add
mov
jo
aad
js
pop
std
xchg
hlt
cwtl
xor
cmc
sti
cmp
cmovns
dec
fdivr
add
sbb
out
stos
popa
mov
hlt
jmp
xchg
das
jb
call
fwait
push
xor
ret
xchg
leave
adc
xchg
call
adc
stos
fsts
jne
xor
cmp
in
xchg
sbb
outsb
icebp
mov
fwait
push
es
imul
aaa
jbe
push
aaa
jle
hlt
jnp
xchg
aas
push
jecxz
push
add
aad
jno
xchg
push
ret
sbb
fisubrs
sbb
popa
fsts
fisubs
shlb
imul
popf
std
imul
xchg
pop
hlt
out
cltd
dec
xchg
mov
sti
pop
or
dec
sbb
addl
ret
stos
frstor
mov
push
hlt
cmp
xor
lds
or
daa
push
test
push
or
and
adc
fadd
fdivr
push
adc
test
in
ljmp
inc
rclb
push
clc
lods
in
hlt
leave
mov
sbb
scas
mov
enter
adc
js
pop
pushf
loopne
out
sub
jp
cmpsl
test
movsl
je
test
ss
cmpsl
fsubrl
jo
sbb
lcall
xchg
out
pop
dec
push
mov
sub
ficomps
ljmp
mov
or
movsb
insb
lret
jle
out
and
pop
add
pop
inc
mov
mov
inc
lea
sbb
scas
les
sbb
cmp
mov
ds
inc
out
or
pop
jmp
icebp
fists
inc
stos
sbb
push
fs
xor
push
push
subl
mov
mov
icebp
popf
push
sub
inc
and
testl
mov
sub
sbb
cmc
cwtl
shl
sti
fs
adc
or
push
test
shr
mov
mov
jno
aaa
mov
mov
jo
inc
js
pop
inc
dec
jns
pop
fldenv
mov
je
cld
ds
cwtl
das
repnz
push
stc
xor
or
xor
fprem1
ljmp
mov
inc
push
jge
rolb
mov
add
dec
fisubrl
loope
push
mov
push
lea
int
cwtl
or
sahf
iret
jle
repz
es
cmp
icebp
sti
insl
push
mov
inc
cltd
xchg
inc
shl
cwtl
xor
pop
aam
push
add
ret
jmp
icebp
and
jae
out
inc
xchg
push
aad
scas
lods
out
push
imul
or
notb
lods
iret
pop
fidivrs
sti
mov
stc
mov
jmp
enter
jae
fldenv
add
push
sbb
fwait
out
mov
jno
push
jg
push
mov
lcall
push
sbb
fidivrl
enter
dec
sub
xchg
pusha
push
jnp
in
dec
daa
jg
daa
lods
add
xchg
test
xchg
imul
inc
add
movsb
arpl
lss
fnstsw
cwtl
or
ret
loope
icebp
aam
shlb
pop
dec
and
out
and
sub
mov
sub
sub
stos
push
push
mov
jmp
rorb
xchg
out
push
pop
jb
pop
mov
cld
xchg
push
lods
idivl
mov
lds
jmp
repz
hlt
jge
lds
add
shr
push
lds
data16
sub
insl
repz
xchg
sbb
icebp
loopne
xchg
mov
in
sub
les
idivl
testl
das
das
and
shrl
cmp
and
dec
int
imull
jo
ljmp
inc
aas
arpl
dec
push
sbb
repnz
add
outsl
fidivl
mov
iret
jb
hlt
mov
fcom
jb
or
in
jb
imul
sub
mov
pushf
lret
sub
mov
test
mov
cwtl
add
sbb
inc
rcrb
inc
cmc
sar
jns
xor
dec
test
push
rorb
push
jne
sub
or
mov
rorl
dec
add
das
imulb
lods
rclb
aad
sub
push
bound
mov
xchg
js
stos
mov
out
cli
and
xchg
out
sbb
je
adc
mov
mov
imul
dec
popf
in
cwtl
push
sti
insb
xor
push
ljmp
pop
pop
push
test
arpl
cld
es
mov
outsb
mov
xlat
lea
dec
cmp
mov
iret
js
ficompl
xchg
xchg
mov
movsl
xchg
hlt
out
outsb
dec
jb
pop
dec
sub
aad
add
xchg
mov
cs
adc
inc
movsl
mov
cmp
pop
cmp
xchg
aas
in
sbb
and
movsb
test
out
mov
cs
and
je
mov
out
xchg
mov
sbb
mov
icebp
imul
sub
adc
in
sub
iret
mov
cmpsb
xchg
mov
push
ret
push
and
pusha
outsl
cmp
aam
sub
dec
dec
inc
cmp
das
icebp
mov
fstps
nop
aam
popa
jae
loop
mov
xor
push
push
mov
lods
xor
push
lcall
je
pusha
mov
hlt
mov
mov
mov
jo
les
jmp
movsb
mov
cmp
ret
xchg
adc
jb
push
shl
fdivs
fwait
mov
push
fld
xor
dec
std
fldcw
std
or
loope
mov
fisttpll
outsl
stos
insb
jge
mov
loop
scas
mov
mov
movsb
mov
mov
cmp
and
and
aas
mov
roll
cltd
mov
test
cmc
push
dec
inc
lock
mov
pop
adc
stos
push
nop
lods
fldcw
pop
je
lods
test
ja
jb
and
xor
ffree
inc
adc
mov
push
cmpsb
mov
mov
lods
sbb
ljmp
xor
ljmp
jmp
nop
adc
mov
enter
rorl
fcomps
dec
inc
push
xor
inc
mov
xchg
arpl
jge
test
stos
push
xor
popf
jmp
cmp
rcrl
xor
sahf
out
cmp
add
movsl
xor
repnz
jp
cmp
or
and
xchg
mov
add
out
ss
pop
pop
pop
lods
xchg
pop
bound
push
dec
test
sub
cld
jae
ja
pop
mov
push
and
in
xor
sbb
sub
sub
dec
xchg
out
jg
pop
or
jge
jle
mov
push
push
or
pop
xchg
bound
aaa
push
jge
xchg
loop
sub
sub
pop
les
test
push
xchg
jo
test
xchg
loop
in
dec
or
xchg
test
ret
and
fidivrl
push
inc
imul
imul
fwait
push
cmpl
cltd
in
andb
xchg
mov
popa
sbb
add
or
in
ficompl
fwait
sarl
or
inc
mov
xchg
or
fistpl
adc
or
out
repnz
mov
ja
gs
movsl
cmp
or
movsl
test
push
test
lods
jl
call
sbb
cmp
dec
jmp
mov
lea
in
and
dec
bound
aas
mov
cmp
int
mov
sbb
andb
cmc
dec
insl
dec
daa
js
sbb
pop
cmp
inc
push
sbb
testl
into
inc
test
out
and
jnp
rcl
mov
mov
push
pusha
push
mov
aam
insb
les
mov
pop
ds
and
clc
sub
loope
or
insb
stc
ds
repz
mov
pop
mov
xchg
and
loopne
pop
jno
das
add
push
pop
sbb
xor
adcl
scas
cltd
sti
loop
ja
mov
popa
pop
fildll
or
mov
dec
out
xchg
fisttps
lcall
sarb
sub
jge
nop
call
sahf
mov
jmp
adc
fnstcw
and
cmp
cmp
or
sbb
jge
push
pop
xchg
les
in
dec
pop
or
jp
repz
pop
mov
repz
das
and
lahf
cmp
lds
in
mov
das
leave
int3
das
mov
fnstenv
xchg
sbb
push
in
or
repnz
or
push
pop
xor
jmp
iret
and
mov
jl
clc
inc
fidivrs
js
xchg
ja
loopne
out
push
addr16
fs
and
jo
fstl
xor
push
inc
sub
dec
jle
adc
xchg
push
and
insl
add
movsl
inc
lret
daa
mov
mov
pop
push
je
fisttpll
or
aas
sub
mov
push
and
push
xor
das
lcall
hlt
xchg
in
sub
movsl
inc
movsl
or
stc
xchg
aam
in
repnz
lcall
push
sbb
xchg
and
mov
popf
push
mov
int3
arpl
xor
cmp
dec
mov
xor
mov
xor
iret
mov
jne
dec
push
shrb
out
mov
insl
aad
mov
insl
rol
xchg
cmp
lcall
jne
jnp
movsl
rcrb
mov
xor
cmp
in
scas
jns
imul
mov
dec
inc
sub
mov
sub
popa
xor
inc
inc
pop
out
daa
push
fs
shl
mov
aad
add
shlb
cmp
enter
add
cmpsl
inc
sbb
jae
daa
xchg
sub
mov
sub
sti
out
mov
aam
and
cmc
mov
fs
fidivl
std
cwtl
fnsave
inc
ss
push
or
cmpsb
sbb
adc
sbb
sbb
in
xor
mov
in
add
pop
jmp
push
je
fidivrl
test
fucomi
into
xor
loopne
dec
rcrb
lret
leave
loop
aaa
lods
mov
xor
push
jns
push
rorb
dec
fwait
xor
repz
pop
in
cmc
jae
jge
xchg
sbb
ja
lret
adc
iret
adcl
push
mov
add
std
lahf
sarb
imul
mov
jns
or
inc
xor
jp
aam
ja
into
mov
mov
pop
add
adc
int3
fistl
imul
in
mov
mov
subb
fistps
jo
dec
mov
cmp
shl
push
mov
stos
bound
xchg
mov
jl
rolb
cwtl
test
jbe
test
sub
outsb
test
sub
subb
cmp
mov
cltd
cmp
lcall
fistps
sub
xchg
push
aad
mov
ret
jg
mov
stc
test
ja
dec
movsl
cmp
xor
stos
pop
dec
pop
push
arpl
xchg
add
inc
popa
dec
jno
outsb
mov
mov
xor
add
xchg
outsb
daa
inc
push
sub
insb
scas
pop
mull
loopne
dec
mov
cmpsl
fimull
outsb
lods
mov
pop
imul
shll
mov
cmpsb
sbb
iret
cmpsl
fwait
cmc
mov
cmp
lret
movsb
arpl
cmpsb
mov
cmp
fidivs
inc
and
xchg
mov
dec
pushf
inc
mov
mov
add
je
mov
pop
lahf
mov
add
inc
shll
dec
cltd
push
sub
aas
pop
and
in
jb
stc
push
sub
or
mov
movsb
outsl
inc
and
and
xchg
gs
scas
xchg
inc
mov
ljmp
dec
push
xchg
push
test
adc
fidivl
mov
imul
sbb
or
in
cs
mov
sub
movsb
divb
cmp
pop
xorl
fidivrs
push
jb
dec
or
movsw
fstl
add
mov
outsl
sbb
adc
xchg
cmp
push
ljmp
push
jmp
mov
mov
or
repnz
adc
icebp
lcall
inc
pop
and
jbe
lret
sub
movsb
dec
mov
jecxz
es
sbb
mov
ror
ss
push
test
ljmp
aas
test
out
ss
cmp
and
aad
adc
pusha
push
pop
adc
insl
lret
pop
jne
in
in
pusha
leave
ffreep
or
sar
es
and
pop
ja
arpl
fmuls
pop
and
dec
jo
sub
call
cmp
insl
aas
out
or
xor
dec
adc
pop
lea
mov
enter
sub
pop
rolb
bound
dec
jmp
repz
mov
loope
push
outsb
pop
inc
pusha
xor
sbb
inc
adc
pop
xchg
mov
in
pop
cmp
les
jmp
and
dec
cli
push
and
insb
leave
pop
xlat
lret
sbb
sbb
repz
adc
loopne
fdivrl
xchg
xchg
lods
in
and
pop
push
test
scas
mov
mov
test
sbb
jp
pop
test
in
xor
push
enter
addl
add
cmp
sub
mov
mov
push
dec
add
cmp
or
cmp
mov
lods
xchg
adc
add
movsb
enter
leave
push
arpl
into
inc
jno
and
leave
outsb
cmp
push
nop
pop
push
and
xor
in
das
mov
mov
mov
push
in
xchg
fidivrl
les
mov
xor
scas
mov
ss
and
enter
sahf
in
sub
push
or
xor
scas
add
dec
repz
pop
ds
add
adc
pop
imul
adc
sahf
mov
enter
rorb
inc
out
inc
leave
arpl
xor
and
lret
cmpsb
rorl
js
cmp
int3
out
int3
sub
loopne
xchg
pusha
inc
inc
iret
mov
stos
adcb
push
movsb
mov
ret
mov
sub
leave
mov
xlat
movsl
sub
fcomip
add
pop
pop
and
es
push
movhps
ss
add
mov
push
mov
aam
pusha
rcl
inc
jmp
push
add
push
xchg
mov
push
add
mov
sbbl
mov
lods
dec
or
jge
ja
mov
adc
into
stos
es
lret
out
push
xchg
sub
mov
add
or
subb
mov
add
fwait
mov
xor
push
or
dec
leave
mov
pop
xchg
fs
mov
mov
add
sbb
and
mov
pop
mov
arpl
pop
lcall
jl
insl
dec
decb
stos
inc
jge
mov
pop
fwait
jl
jne
xchg
enter
and
pop
dec
push
xor
xlat
repz
int
notb
dec
fisubs
ljmpw
cmc
push
inc
jno
std
test
sbb
pop
and
jp
testl
shrl
ja
jmp
fistl
ds
clc
xor
scas
and
rcrl
push
sub
popf
cmp
out
das
mov
rcl
shl
test
sub
stos
xchg
sarb
fs
add
sub
fidivrs
and
pop
scas
and
cs
jnp
xchg
pop
xchg
push
add
pop
seta
push
lret
jb
xlat
mov
xchg
jp
or
roll
test
cmp
push
push
fmul
mov
pop
in
pop
mov
mov
test
fsubrp
into
xor
and
mov
or
sarl
jp
imul
mov
or
fnstcw
jmp
je
ja
mov
jo
cmp
jns
arpl
loopne
out
pop
fdiv
adc
stc
popa
mov
dec
cmp
and
cmp
icebp
cmp
das
clc
xchg
mov
and
dec
in
imul
mov
mov
imul
and
xchg
cmp
rcl
sbb
in
sub
xorl
sbb
cmp
scas
lds
mov
jae
aad
mov
push
fwait
sbb
leave
test
mov
push
setp
add
gs
int3
dec
adc
mov
sbb
push
cmp
adc
lods
adc
xchg
aaa
sub
mov
cmc
cmp
lods
mov
pop
or
into
loopne
andb
push
ljmp
and
inc
mov
shll
out
push
out
dec
xchg
insb
xor
cmc
mov
ret
push
fbstp
cwtl
mov
movsl
movsl
inc
repz
xor
jae
loop
insl
inc
xchg
je
xchg
cs
push
and
popf
repnz
loopne
xor
dec
mov
jno
jne
leave
or
inc
arpl
inc
mulb
rcrb
mov
negb
jae
xor
adc
jb
mov
enter
aad
test
dec
iret
repz
jg
pop
or
pop
ds
lds
xor
mov
xlat
xchg
jo
mov
mov
mov
in
inc
adc
add
rorl
arpl
addr16
jle
out
mov
jmp
mov
dec
mov
loop
push
aaa
inc
and
out
repnz
or
and
add
repnz
adc
in
test
fldcw
xor
dec
sbb
int3
out
sub
inc
jbe
out
cmp
lcall
add
insb
push
sahf
daa
jo
and
push
lods
add
gs
mov
pop
mov
adc
mov
mov
xor
hlt
jg
xchg
sub
lahf
inc
adc
or
out
add
movsb
dec
mov
shll
jb
shrl
mov
fcompl
or
fildll
pop
mov
jecxz
ja
insl
pusha
push
daa
xorl
jno
fistpll
and
fbld
fnstsw
aaa
add
lock
repz
mov
pop
test
cmc
imul
pop
sarb
cs
and
mov
push
xchg
push
sub
push
pop
xor
xchg
mov
push
ret
test
lret
jno
stc
add
sub
rclb
int
iret
push
mulb
sub
scas
test
xchg
adc
out
shrl
and
push
jp
jle
daa
daa
and
repz
and
fsubp
ljmp
sti
add
out
jb
lret
in
ljmp
cld
push
movsb
xchg
jmp
and
push
cmpsl
filds
repz
sbb
pop
in
cmpsb
lea
iret
lcall
lock
add
icebp
push
int
add
inc
sub
push
stos
cmp
std
mov
sub
xchg
push
std
shl
mov
stc
fbstp
popf
and
stos
out
cwtl
jae
in
test
push
or
adc
loop
daa
adc
adc
sub
push
test
xchg
dec
xchg
lret
adc
sub
xchg
mov
cmp
add
xchg
cmpsb
or
fwait
out
mov
test
cmpl
jns
repnz
addr16
sbb
inc
sbb
lahf
in
add
cld
pop
cltd
pop
mov
jle
jge,pt
add
xchg
pop
cmp
jg
sub
out
mov
mov
insl
jle
je
cmc
movsb
test
outsl
sbb
cmp
ljmp
sub
inc
xor
icebp
bound
adc
in
jne
xor
sahf
lds
sub
cmp
inc
jmp
loopne
test
jns
jns
and
rcl
xor
sub
enter
cmp
daa
or
sub
sbb
je
lds
jns
mov
xchg
pop
repz
mov
bound
pop
lock
adcb
ret
adc
pop
jo
mov
sub
cwtl
fimull
xchg
dec
push
mov
or
loop
sbb
jbe
adc
das
in
mov
lahf
xor
push
neg
mov
add
lcall
add
shl
imul
sub
jge
and
jge
lods
cmp
push
in
lods
cs
stos
jle
ljmp
ret
mov
testb
or
sub
mov
test
lods
inc
mov
cmp
pop
int3
aad
idiv
pop
xor
jecxz
test
push
mov
js
jnp
add
sub
adc
scas
jb
sub
adc
and
jg
xchg
sub
aam
adc
cmpsb
sbb
pop
xor
and
inc
imul
cmp
xchg
int3
testb
push
test
xchg
fildl
xor
cmp
jmp
loope
adc
lahf
loope
sahf
lock
andnps
mov
adc
inc
das
lret
movsl
jae
or
loope
ljmp
push
movsb
pop
push
push
stc
sbb
push
ljmp
mov
sub
adc
mov
roll
xor
inc
pushf
inc
cmpsb
cmpl
jp
mov
pushf
subl
lds
cmc
ljmp
dec
sbb
inc
lahf
add
jae
xchg
daa
int3
imul
push
ss
push
push
stos
std
cwtl
jle
or
mov
cli
mov
mov
xlat
pop
pop
cli
bound
hlt
scas
mov
ret
test
imulb
pop
es
mov
fsub
daa
pop
mov
or
push
in
roll
aad
mov
dec
sub
stos
pop
sbb
lods
in
and
mov
jo
ds
pop
lret
out
rolb
stos
data16
fwait
aaa
jae
lock
jo
pop
mov
adc
pop
pop
fldl
out
insl
xchg
scas
sub
inc
test
aas
loopne
enter
ja
mov
int
mov
lods
sbb
data16
popf
rclb
cmp
test
pop
jb
cmp
data16
stos
ss
and
insl
cmp
cld
sbb
addb
push
js
popf
and
out
mov
mov
push
loopne
or
iret
ja
ds
jae
dec
cmp
cld
insl
aas
pusha
pop
shlb
shll
cmpsb
add
popf
fimull
ja
cmc
leave
data16
mov
sbb
lret
stc
mov
cmp
ds
inc
ja
clc
xchg
ljmp
in
push
cmp
imul
xor
inc
add
imul
scas
mov
pusha
adc
lret
pop
mov
and
fstps
ss
mov
or
mov
inc
mov
dec
shrl
jecxz
push
xchg
push
dec
lcall
test
and
cmp
cmpsl
sarb
xor
mov
shlb
mov
cmpb
mov
mov
not
hlt
lock
in
add
inc
cltd
jmp
ror
and
xchg
data16
out
and
dec
xchg
mov
pop
fistps
mov
js
push
lret
imul
iret
loopne
stc
push
pop
cmp
sbb
adc
and
push
xchg
xchg
sub
sub
or
adc
xchg
xchg
ss
in
out
cld
pop
pop
jae
test
fisubl
clc
icebp
mov
scas
ss
lcall
xor
cltd
stos
fisubrl
adc
daa
dec
out
cmp
out
fmull
roll
or
mov
mov
loopne
pop
repnz
daa
jo
pop
adc
add
cli
dec
or
inc
pop
mov
js
push
clc
outsb
mov
ja
ljmp
fiadds
ljmp
mov
push
jns
out
adc
sti
and
stc
rorl
loop
or
sti
and
dec
jns
jae
and
sub
aas
out
sbb
push
out
mov
repnz
xchg
das
ljmp
or
loopne
insl
pop
adc
cmp
mov
and
lods
mov
adc
dec
xor
in
outsl
sbb
cmp
mov
jbe
adc
cmp
push
adc
ror
mov
add
hlt
data16
xchg
cmp
rorb
inc
jne
out
and
mov
stc
pop
lret
pop
imul
cs
mov
mov
mov
mov
mov
push
xchg
movl
cmp
push
je
add
mov
xchg
push
xor
fisubrl
das
out
or
mov
out
or
adc
jno
jae
int
fisttpll
adc
inc
fcmovnbe
rcrl
push
cwtd
pop
insl
jns
xchg
pop
test
jno
pop
sub
jb
outsl
inc
popf
cmp
mov
dec
addl
adcl
mov
adc
push
adc
cmp
xchg
jg
add
mov
push
inc
push
loope
xchg
and
pop
dec
idiv
mov
dec
adc
mov
cmpsl
test
cwtl
shrl
ret
inc
stos
pop
mov
jp
sbb
jp
mov
sbbb
aas
scas
shrl
pop
inc
mov
js
in
fidivrl
sub
iret
xchg
mov
nop
insl
inc
mov
xchg
jmp
push
push
ret
in
cmp
test
push
scas
mov
ss
stos
pusha
xchg
jle
fidivs
xor
outsb
adc
mov
test
adc
mov
ja
mov
dec
movsb
in
push
pop
shlb
lcall
adc
aad
test
in
mov
icebp
jb
and
notb
cli
sub
inc
das
icebp
jnp
addb
jo
adc
movsl
cmp
mov
mov
pusha
fcoms
scas
adc
sub
frstor
push
or
cs
sbb
addr16
jae
ja
jge
sbb
push
or
push
or
in
ss
jecxz
loopne
ljmp
roll
sub
scas
sahf
cmp
dec
mov
aam
pop
jns
idivl
popf
dec
sbb
mov
stos
enter
push
clc
loope
insl
adc
pop
je
jg
cmp
add
je
cmp
sbb
sbb
jnp
cmp
add
mov
loopne
outsl
jecxz
adc
cli
sbb
dec
in
outsb
aas
jmp
insb
lret
xchg
scas
and
xchg
dec
imul
cwtl
xchg
cmp
add
movsl
sbb
sbb
fisttpl
xchg
aad
int3
jp
jne
and
mov
outsb
mov
xor
adc
mov
jmp
xchg
lret
mov
lahf
jp
and
fildl
mov
push
fcmovnb
pop
das
push
mov
das
xchg
mov
das
add
pop
in
int3
mov
jno
pop
add
scas
arpl
mov
xor
arpl
push
mov
push
adc
lret
popa
ret
jb
sub
mov
rcrb
jo
mov
jb
add
repz
shll
pop
jle
and
in
or
adc
add
test
pop
push
jecxz
aad
jb
mov
daa
movsl
inc
xor
notl
xor
cmp
rcrb
gs
sti
stos
or
adc
add
sub
pop
pop
adc
lods
sub
popf
and
pop
add
dec
jle
decb
testl
sub
outsl
or
pusha
xchg
lret
inc
sbb
cmp
fs
outsb
sub
pop
cmp
mov
lds
cmp
mov
aaa
loope
ja
mov
and
jmp
mov
fisttpl
ret
pop
popa
add
mov
mov
loope
outsb
jae
mov
add
mov
and
xor
sbbl
pop
ss
movsl
fdivs
test
dec
sbb
scas
or
std
xchg
mull
fnclex
aad
fs
jo
incl
cmc
sti
pop
jbe
adc
mov
lea
loop
add
xor
rclb
mov
pop
xchg
cmp
int
inc
repnz
sbbl
stos
sbb
or
lcall
test
push
mov
or
dec
xchg
jmp
add
pop
adc
dec
pop
mov
shll
les
dec
cmpsb
push
es
cli
call
mov
gs
fsubs
mov
cs
daa
std
or
js
loopne
sub
mov
cld
fucomp
js
js
push
adc
mov
scas
xor
nop
mov
add
jmp
or
add
out
pop
jo
mov
addr16
int3
mov
adc
cmp
daa
inc
imul
push
out
fstps
lcall
std
fidivl
mov
lods
jg
inc
or
pusha
sti
test
xor
adc
add
orb
mov
mov
cltd
inc
push
pop
std
xlat
aaa
ficomps
sti
mov
aad
push
dec
pop
inc
sub
push
ljmp
xor
imul
mov
add
mov
adc
int
lods
mov
sub
rclb
mov
cmp
sti
pop
and
xchg
dec
cpuid
pop
shlb
lods
lret
cmp
outsb
cmpsb
xor
sbbl
js
sahf
sbb
mov
push
push
shrb
outsb
jmp
adc
pop
mov
arpl
jge
sub
lock
push
imul
mov
and
icebp
pop
pop
fs
dec
cmc
cmp
mov
aam
and
popf
jo
sub
adc
push
cmp
pop
mov
mov
mov
xchg
xchg
ds
repnz
scas
cltd
cmp
mov
mov
sbb
jnp
repz
adc
arpl
popf
push
lods
lcall
inc
sbb
dec
mov
or
inc
xor
mov
jecxz
or
arpl
test
adc
std
addr16
mov
mov
inc
jecxz
das
jle
std
fistpll
mov
mov
mov
mov
and
testb
or
dec
sbb
insl
dec
out
jl
dec
sbb
jg
mov
add
cli
mov
jo
ficoml
in
mov
repz
fptan
lahf
and
std
jmp
je
pop
dec
add
cmp
cld
loop
das
inc
mov
mov
movl
inc
adc
cmp
mov
rolb
into
adc
pop
inc
adc
popa
push
das
out
int
sub
out
cwtl
decl
adc
inc
cmp
mov
into
push
ret
call
ljmp
jnp
arpl
shl
jno
push
test
aad
aaa
cmc
aad
sbb
rorl
and
cltd
sti
or
sub
lock
dec
lcall
lret
mov
adc
daa
pop
clc
lds
cltd
aam
fwait
inc
mov
fs
xchg
cs
pop
ret
xchg
ljmp
test
jbe
jno
mov
jo
ljmp
cmp
jns
xor
es
jp
stc
mov
cmp
shlb
pop
add
int3
rcll
ljmp
xchg
add
insb
clc
fcompl
cltd
pushf
stos
sbb
clc
or
adc
fwait
cmp
sarb
out
mov
mov
jmp
mov
loope
imul
rorl
add
jp
out
and
push
pushf
mov
inc
mov
push
ret
ss
call
sbb
adc
stos
pop
arpl
out
mov
sbb
or
das
repnz
loop
imul
jns
pop
push
roll
dec
das
cmp
call
inc
cmp
leave
mov
loopne
mov
pop
adcl
mov
sarb
push
pop
jnp
pop
dec
sub
adc
dec
xchg
test
or
les
inc
push
pop
aaa
pop
mov
in
push
lea
mov
xchg
jp
pop
loopne
mov
mov
inc
xor
scas
pop
push
jp
stos
scas
mov
test
iret
rol
pop
aaa
xor
xor
jno
adc
scas
xor
frstor
pop
out
sub
cmpsb
push
loopew
scas
ljmp
sahf
inc
iret
nop
imul
sbb
sbb
in
add
in
sbb
and
mov
add
mov
cld
jne
or
cld
push
aam
leave
or
rcl
mov
mov
and
out
mov
loope
push
ret
mov
adc
movsb
lods
jle
mov
dec
xchg
inc
sub
cmpsb
mov
push
cmp
ss
mov
mov
sarb
stc
cs
sarl
ds
lret
loopne
insl
nop
sbb
loopne
test
jae
jle
push
in
fisttpll
aad
int3
daa
xor
hlt
push
jp
into
out
aas
xor
mov
loopne
addb
std
adc
stos
and
icebp
jae
aad
push
adc
add
roll
add
mov
push
jle
mov
lea
jle
xor
pop
out
xor
es
jp
push
jmp
lods
dec
lock
mov
xchg
cmp
pop
sub
lock
push
rcrl
jmp
push
pop
jecxz
push
sub
mov
lods
inc
mov
pop
inc
in
testb
push
aaa
pop
dec
popa
inc
je
sub
aas
popa
dec
lods
jne
je
jnp
arpl
cmc
adc
cmp
mov
into
dec
cmpsb
cmpsb
push
xorl
xlat
push
mov
mov
add
add
loope
test
sahf
xor
mov
mov
clc
inc
push
jbe
ret
pop
pop
xchg
sub
sbb
lahf
testb
insb
out
jae
jo
jnp
and
mov
mov
icebp
test
sahf
jle
hlt
sbb
dec
adc
push
dec
negl
icebp
pop
mov
xchg
push
push
push
repnz
arpl
mov
add
sub
mov
push
xchg
out
and
daa
mov
cmp
iret
xchg
andb
adc
mov
inc
cmp
sbb
sbb
lcall
dec
dec
adc
adc
push
clc
mov
out
pop
cmp
cmpsb
jo,pt
daa
sub
scas
rorl
das
lea
ret
in
es
xlat
into
sub
mov
int
lret
jp
aas
leave
sbb
mov
out
test
mov
shll
int3
or
stos
sbb
lret
mov
mov
dec
fildll
cmc
ss
push
lds
jmp
sub
or
jge
lods
dec
loopne
clc
sbb
push
sub
mov
xchg
xchg
orl
iret
arpl
movb
outsl
jnp
lock
jmp
aas
imul
in
sbb
jle
pop
clc
ds
popa
mov
adc
lret
inc
sbb
ret
call
sub
aad
sbb
adc
dec
cwtl
and
inc
into
add
aas
in
out
mov
sarb
rclb
hlt
push
shll
out
and
mov
fsubrs
mov
adc
addr16
iret
clc
xchg
js
scas
in
xchg
xchg
jge
lea
cs
pop
flds
mov
lret
sbb
fisttpl
ror
je
mov
dec
pop
cmp
pop
xchg
stos
or
add
cmp
icebp
inc
sub
ficoms
xchg
out
addr16
ljmp
cmp
sbb
or
aad
push
pop
pop
cmp
dec
stos
test
outsl
jo
out
scas
dec
scas
push
jg
mov
sarb
xor
js
dec
mov
bound
xchg
scas
nop
lea
ljmp
or
push
xor
out
js
leave
sub
decl
inc
mov
pop
aad
jb
mov
sbb
cmp
mov
xchg
ds
lret
orl
sbb
add
aad
lods
or
jns
xchg
xor
or
insb
and
jb
mov
inc
inc
xor
aam
push
icebp
and
or
icebp
mov
sub
clc
dec
mov
jbe
cmp
sbb
jo
pop
fwait
ja
mov
adc
in
xor
hlt
je
hlt
sub
mov
push
shrl
mov
aaa
mov
lds
loopne
dec
cmp
test
add
sti
sub
icebp
mov
inc
cmp
or
fs
repnz
lods
xchg
inc
cltd
mov
shlb
mov
jl
aad
xchg
addr16
pop
dec
xchg
bound
sarb
add
pop
or
lea
in
bound
cmpsb
mov
push
adc
test
jae
leave
mov
adc
lds
std
push
push
nop
jmp
incb
imul
cld
xor
cmpl
mov
push
popf
rcrb
mov
or
pop
sub
loop
push
xchg
jmp
or
sti
jle
jo
and
ljmp
int
sti
rolb
movsl
fisttps
repz
stos
icebp
pop
mov
test
loop
insl
inc
shl
dec
out
push
dec
dec
dec
dec
ds
mov
test
fldcw
fiaddl
popf
outsb
and
loopne
adc
dec
cltd
cmp
xchg
rorl
in
push
push
push
sbb
js
lock
insl
fmuls
nop
cltd
xor
push
enter
call
mov
insb
fsubl
sub
mov
dec
inc
iret
out
icebp
pop
daa
call
add
inc
and
out
out
es
je
pop
adcb
ljmp
movb
sahf
ja
push
mov
fists
shl
sbb
nop
icebp
cmp
leave
je
insb
mov
sub
xor
idivl
jecxz
xchg
push
adc
sub
fwait
or
jno
arpl
sub
out
lods
mov
lahf
outsl
movsl
sub
dec
or
scas
cmp
sub
sbb
rcr
jo
insb
pop
mov
sub
dec
sar
dec
sbb
and
or
pop
and
adc
sub
xchg
cmpsb
je
sub
rclb
loope
psrad
arpl
push
ret
jb
sub
std
enter
sub
aas
add
push
adc
faddp
sbb
add
int3
aam
push
push
pop
inc
movsl
fs
loope
in
js
pop
in
fistpl
lret
inc
iret
jle
aaa
inc
mov
sbb
mov
and
and
out
jg
neg
ds
cltd
xor
xor
push
idivl
leave
popa
push
movsb
sarl
outsb
sub
in
test
into
icebp
xchg
add
adc
adc
int3
dec
mov
jecxz
xor
pop
mov
push
sahf
fstpt
xchg
sub
mov
stc
mov
or
mov
iret
test
btc
push
jecxz
movsl
popf
inc
cmp
fisubrs
lahf
shl
cmp
cmp
xchg
data16
fsubs
xlat
fwait
xchg
rol
xchg
mov
lock
xor
enter
dec
stos
fsubs
mov
jne
fcomp
or
inc
or
in
ja
icebp
and
mov
mov
mov
stos
or
cld
sub
push
jnp
mov
push
jbe
dec
data16
stos
mov
jno
mov
nop
mov
jb
xor
cmp
pop
jno
mov
cmp
and
jno
out
pop
cmp
in
fistpl
mov
leave
nop
pop
gs
outsb
jns
dec
lahf
in
or
mul
incl
sub
or
jne
and
fdivs
add
mov
cmp
mov
adc
cmp
add
shr
shr
gs
cmp
icebp
das
inc
xchg
inc
inc
push
lret
out
aas
add
lret
mov
jno
xor
push
xchg
sub
push
fmul
jne
flds
xchg
pop
dec
mov
aaa
xor
repnz
or
xchg
sbb
sbb
insb
xchg
pop
pop
cltd
push
fbstp
sti
test
pop
and
iret
xor
incl
iret
xchg
hlt
orl
leave
jae
loope
jl
inc
or
jecxz
jle
inc
mov
int3
aas
or
mov
jo
lods
sahf
bound
in
xlat
sbb
adcb
ds
daa
mov
adc
xchg
inc
pop
lock
clc
in
push
hlt
xor
jge
jb
hlt
and
add
in
loope
aas
fildll
mov
xor
or
xor
adc
pushf
and
cmp
sti
cli
in
mov
push
jb
dec
pop
dec
xchg
fbstp
js
mov
test
ss
dec
xlat
lret
aad
add
dec
or
fmulp
out
clc
pushf
cmp
ja
lahf
adc
aaa
popa
jbe
pop
xchg
push
int
fisttps
lock
cli
repnz
mov
in
inc
filds
shrl
lret
mov
jge
cld
and
sbb
jno
cld
icebp
loope
jmp
aaa
xlat
sbb
in
sti
add
mov
loopne
icebp
in
mov
cmp
insl
fs
cmc
test
inc
movsl
inc
call
pusha
or
orl
jne,pt
out
mov
xor
mov
pop
clc
leave
sub
mov
dec
lcall
mov
jl
xchg
dec
add
outsl
mov
pop
xor
cmpl
popf
or
and
test
mov
loope
gs
hlt
mov
xor
jle
push
cmpsb
cs
push
lea
aam
pop
mov
jmp
insl
xchg
or
or
pushf
adc
pop
loop
inc
out
pop
fmuls
mov
xchg
xchg
out
out
enter
sti
lods
or
cmp
dec
fiadds
ds
test
lret
insb
loop
add
jbe
jb
inc
into
mov
popf
lea
dec
add
stos
loope
push
insl
outsb
push
ret
jp
nopl
inc
scas
js
lret
dec
nop
scas
dec
inc
dec
sub
aas
decl
outsl
sbb
and
aad
pop
fsubrs
xchg
sbb
lds
ds
cmp
out
cmp
jns
movsl
pop
repz
push
nop
jecxz
imul
lds
dec
adc
ljmp
lea
daa
ss
push
push
lea
imul
ja
mov
fcomi
adc
pushl
xor
stc
inc
or
ret
insb
retw
aad
cltd
loopne
mov
cmp
pop
lcall
pop
lcall
shrb
sub
lds
jae
popa
mov
negb
test
adc
nop
mov
rorl
inc
sahf
rcrb
addr16
jne
pusha
sbb
adc
inc
daa
ljmp
es
jmp
cmc
xchg
aad
pop
popa
cmpsl
push
sbbl
mov
cmp
or
movsb
pop
ret
xchg
dec
and
mov
fnstenv
repnz
sub
clc
test
cs
loop
mov
adc
ret
fwait
jae
pop
push
sarl
movb
in
mov
out
clc
popf
xchg
aaa
hlt
mov
adc
popa
leave
xor
test
sahf
xchg
sub
push
pop
pop
into
dec
popf
jnp
fstpt
aam
xor
je
push
mov
popf
aaa
inc
jno
ljmp
sbb
inc
mov
leave
mov
ja
cmp
push
push
xchg
cwtl
cli
push
in
and
fs
or
jns
mov
test
int3
mov
mov
mov
into
popa
movsl
push
jecxz
push
or
pop
dec
pop
js
lds
cmp
dec
mov
mov
loope
xchg
pop
adc
fmul
xchg
and
stos
mov
je
add
xchg
dec
pop
cmp
mov
xchg
xchg
stc
aam
outsb
loop
in
mov
jge
sub
xor
std
pop
add
cld
lcall
addr16
pop
adc
jecxz
adc
xchg
test
bound
and
test
mov
mov
fisubrs
mov
loope
pop
ljmp
lret
jle
shll
out
test
push
and
jp
addr16
or
mov
sub
or
stc
dec
cmp
std
pop
insl
aaa
sti
push
int3
pop
jo
pop
fmul
adc
iret
jae
push
in
js
fisubs
pop
lret
inc
mov
in
out
and
jge
hlt
fmull
lret
mov
in
enter
ljmp
push
lods
repz
ljmp
fisttps
mov
mov
adc
aam
sbb
fdivs
or
scas
or
jecxz
aaa
push
adc
arpl
es
aas
cmp
aaa
jecxz
ret
sub
push
scas
cli
stos
push
ja
popa
fsubl
mov
xor
sbb
std
frstor
lahf
mov
mov
jae
add
in
aad
mov
fidivrs
dec
xchg
mov
subb
pop
push
mov
sub
jmp
ljmp
pop
jnp
lret
je
pusha
fists
mov
repnz
sub
in
out
push
push
and
ljmp
movsl
mov
pushl
lahf
push
ds
inc
jmp
jl
cmp
loop
mov
sub
push
mov
fimuls
inc
mov
bound
sarb
push
movsl
ret
cmp
aam
xlat
fsts
mov
fisubs
mov
xchg
add
leave
pop
sbb
std
aad
lods
pop
mov
adc
jnp
inc
and
scas
mov
xchg
mov
ljmp
adc
pop
cwtl
push
push
neg
or
and
jns
or
into
or
jb
inc
lahf
cmpsl
add
dec
sti
out
popa
push
popa
lret
roll
xor
imul
add
clc
pop
mov
mov
inc
loopne
mulb
test
pop
stos
push
lods
cmc
mov
shl
lds
stos
out
mov
or
movsb
out
xor
cli
out
inc
inc
dec
and
mov
dec
je
leave
sub
insb
push
inc
cmp
or
mov
adcl
hlt
push
std
repz
mov
sti
and
jnp
popf
mov
popf
dec
lret
jg
push
movsb
ffree
adc
in
out
or
jg
adcb
into
xor
cmc
jae
dec
movsl
outsl
xor
jb
xor
mov
mov
rcrl
repnz
insl
rcr
push
pop
scas
cmpsb
popf
sub
les
mov
into
pop
xchg
push
out
mov
cmpsl
popf
js
cmpsl
in
xchg
pop
test
cs
mov
nop
mov
mov
jge
shlb
cmp
mov
xchg
jne
enter
repz
sub
lock
xchg
shlb
out
rclb
add
fmul
cmp
xchg
in
lods
pop
sbb
jg
fcomps
ficompl
mov
sbb
or
mov
mov
out
in
call
sarb
mov
add
mov
cmp
pop
sbb
mov
mov
mov
push
and
cmp
subb
outsb
sahf
out
call
pop
xchg
mov
test
repz
jge
adc
mov
xor
fisttps
push
jne
pop
mov
das
pop
cmp
jecxz
shlb
insl
es
jo
popa
mov
mov
add
fiadds
fwait
addr16
je
xchg
repnz
test
jg
test
add
jb
cmp
ret
sti
jnp
lods
gs
xchg
insl
cmc
pop
pop
in
ss
xchg
ret
je
icebp
outsl
inc
inc
in
cmp
enter
cmp
repz
push
lahf
sbb
inc
inc
dec
stos
pop
pop
clc
and
aaa
aaa
les
xchg
add
pushf
jbe
dec
dec
scas
dec
jbe
adc
clc
jecxz
sahf
incl
mull
lock
scas
sarl
xchg
dec
aas
jbe
and
out
or
imul
loopne
push
call
push
pop
jmp
push
mov
sbb
test
mov
nop
inc
cmpsl
in
push
test
enter
xor
lcall
sub
cmp
loope
scas
mov
xchg
mov
subl
xor
mov
xor
ss
pop
pop
adc
sub
xorl
shlb
push
jnp
lahf
and
aaa
pop
xchg
clc
ljmp
add
inc
push
pop
cmpsb
shlb
pop
jne
addr16
icebp
mulps
xor
hlt
mov
sub
aaa
rcrb
cltd
sahf
and
loope
inc
pop
iret
or
dec
sub
std
or
std
jecxz
ss
mov
pop
jbe
icebp
dec
aaa
and
sbb
enter
notb
js
jecxz
insl
movsb
xchg
testb
mov
adc
movsb
adc
movl
cmovae
mov
xor
jg
mov
movsl
inc
cmp
fstl
mov
dec
mov
rep
adc
popf
jae
fstpl
push
fldcw
cmpsb
jmp
lods
and
pop
mov
clc
mov
cli
insb
inc
push
push
les
inc
rcl
mov
mov
jmp
les
cmp
mov
lret
inc
xchg
imul
xchg
mull
mov
iret
pop
xor
add
fsubl
arpl
jmp
rcll
imul
mov
add
pop
mov
mov
mov
lret
mov
inc
fidivl
xor
sbb
test
mov
nop
lcall
gs
inc
mov
addr16
jo
stos
addb
divb
xor
add
ret
fldt
pop
repnz
incb
nop
mov
push
jmp
cmpsl
jg
and
in
xchg
adc
cmc
or
sub
pop
je
push
add
xchg
fxch
and
xor
cmp
mov
cmp
xchg
and
pusha
push
mov
inc
iret
pop
push
movsb
shlb
daa
out
add
scas
xor
divb
sub
jo
sbb
lcall
jo
jge
les
jbe
pop
mov
test
scas
cmpsb
or
pushf
mov
dec
add
add
sbb
movsl
or
sbb
lods
aam
mul
jne
sahf
ss
cmpsb
popl
cmp
mov
leave
cmpsb
dec
mov
lret
jecxz
inc
add
mov
imul
pop
dec
add
test
and
and
mov
clc
xlat
mov
scas
push
enter
pop
sbb
repnz
inc
or
faddl
adc
lods
mov
stc
pop
sub
cmp
mov
std
push
imul
cld
and
testb
aad
inc
mov
push
scas
mov
xor
jb
hlt
faddl
notb
push
push
inc
nop
loopne
mov
into
out
shll
xchg
mov
jne
adc
test
fcmove
lcall
mov
iret
movsl
sbb
sbb
mov
and
xchg
jl
pop
xor
pop
outsb
pop
fmull
push
push
jae
or
inc
jge
mov
xchg
and
inc
insb
xor
pop
or
add
mov
cs
pop
repz
pop
push
cmpsl
jle
dec
fnsave
mov
mov
je
add
mov
mov
int3
scas
scas
sbb
adc
js
outsl
xchg
xor
or
sub
dec
jg
mov
lds
jecxz
inc
xchg
inc
jno
fldenv
and
and
hlt
push
jae
and
jle
push
inc
imul
test
fwait
call
xor
nop
ret
dec
or
dec
push
sbbl
and
sbb
mov
lret
notl
pop
or
jmp
jns
push
movsb
dec
add
js
sti
pusha
push
cld
dec
cld
add
test
stc
pop
ljmp
pop
jl
pop
xor
xchg
inc
xchg
jle
and
and
jo
ror
insb
xchg
mov
dec
mov
jae
gs
outsl
inc
mov
out
mov
movl
cmp
push
or
and
mov
call
imul
bound
or
and
dec
push
inc
incl
adc
aad
ljmp
lcall
insb
fwait
sahf
aas
jb
fcompl
push
xchg
adc
inc
stos
call
dec
cli
dec
and
mov
sub
mov
test
pop
fcmovne
in
shrl
mov
mov
ficompl
fldl
lret
dec
cmp
fldcw
rcr
adc
mov
scas
ret
scas
lock
incb
aad
sarb
arpl
sarb
stos
adc
lahf
flds
push
push
push
dec
aad
xor
push
movsb
xor
lahf
fxch
sahf
iret
inc
in
xor
into
adc
mov
cli
test
mov
xchg
or
sbb
in
xchg
pop
in
mov
adcb
xor
in
bound
mov
enter
bnd
mov
jp
mov
fisubrl
mov
add
repnz
in
fs
in
cmpb
add
mov
jg
sbb
dec
in
inc
dec
movsb
aas
jl
xor
addl
jg
adc
sbb
mov
xor
insb
shrb
xchg
test
xor
cwtl
aas
fidivs
in
cmp
or
dec
xchg
jg
mov
stos
and
xchg
pop
jp
xchg
jo,pt
push
mov
mov
pop
add
int
or
sahf
and
lahf
jno
and
sbb
fwait
mov
stc
lahf
pop
push
and
sub
imul
push
xor
mov
jecxz
adc
mov
lds
dec
mov
xlat
outsb
scas
fcoms
data16
call
imul
insl
into
sbb
or
cmp
mov
je
addb
int3
push
mov
aas
ja
and
mov
inc
jle
dec
out
mov
sub
lret
pop
jno
dec
and
jp
adc
sub
mov
dec
inc
or
jmp
inc
lahf
push
inc
mov
mov
lret
aaa
stos
sbb
push
add
push
sub
pop
orb
cmp
inc
pop
lods
or
mov
adc
and
leave
pop
or
insb
out
fnstenv
push
inc
fldcw
mov
jnp
fists
sub
push
or
sub
mov
arpl
mov
mov
int
loop
inc
test
inc
repnz
mov
es
inc
cld
movsb
ja
inc
inc
out
outsb
sbb
xchg
xlat
cmp
sbb
outsb
lcall
int
add
in
or
adc
jl
xchg
jge
test
mov
jecxz
in
fildl
xchg
sahf
outsb
pop
orb
jno
test
imul
push
into
dec
and
xchg
js
push
and
dec
lcall
add
popf
inc
sub
aad
repz
arpl
lret
lcall
fildll
std
popa
dec
addr16
adc
cmp
mov
and
mov
lock
loop
pop
xor
mov
adc
mov
ja
lahf
inc
and
xor
adcl
and
int
xor
das
out
cltd
jmp
sub
pop
jp
jo
mov
xchg
fsubrl
add
mov
sub
loop
les
xor
ret
cmp
jl
iret
xor
or
cs
xchg
cmp
in
cs
sti
mov
lock
arpl
lret
jbe
movsb
movsl
cwtl
adc
pop
sahf
or
mov
jg
xor
js
ljmp
adc
xor
les
mov
mov
inc
sahf
rclb
out
iret
test
sub
loopne
ret
mov
jae
loopne
lods
mov
or
jp
jae
scas
sub
or
dec
in
arpl
push
outsl
mov
inc
clc
pushw
adc
cmp
lcall
insl
push
in
mov
sub
inc
add
sub
std
add
int3
cmc
mov
ja,pn
dec
add
cli
sbb
fucomip
into
ja
pop
xchg
sub
pop
sarl
push
mov
repz
outsl
xlat
and
ss
lods
mov
lret
fs
ljmp
lea
movsb
sbb
clc
inc
add
nop
add
in
xor
shl
jg
pop
dec
rep
mov
imul
clc
or
cmpsb
nop
jbe
mov
shll
aam
shl
add
arpl
adc
lods
lods
cmpsb
je
add
fmull
jecxz
xor
outsb
adc
out
testl
and
xor
xor
movsb
clc
inc
fucomi
hlt
js
dec
mov
jp
test
mov
mov
lcallw
lea
and
rorb
jnp
imul
push
rorb
jg
bound
pop
js
xchg
arpl
js
orl
aad
aas
cmp
sub
xor
inc
push
aad
popa
test
pop
dec
add
pop
enter
and
sbb
pop
xor
sbb
or
fs
inc
jg
call
iret
cli
pop
jno
sti
shll
sub
stos
push
pop
cmpsl
xor
mov
xchg
cltd
aaa
test
add
das
adc
and
fs
std
and
and
jbe
ss
sub
cmp
pop
out
lcall
data16
gs
cs
inc
push
fldcw
adc
and
ljmp
cwtl
stos
push
icebp
cltd
daa
and
jb
jg
push
lahf
add
mov
mov
out
xchg
cmp
sbb
jmp
aas
push
outsl
mov
popf
aad
mov
lods
sub
add
int
and
jecxz
repnz
jno
arpl
pop
js
imul
scas
xchg
icebp
sub
pop
pop
xorl
hlt
shlb
push
iret
cmp
xchg
push
inc
call
scas
sub
sbb
out
gs
adc
pop
pop
mov
call
jmp
orl
mov
sbb
jmp
das
aaa
mov
push
imul
push
or
add
aas
gs
imul
mov
aad
sti
pushf
jae
sbb
xor
repz
mov
lret
sarl
mull
loopne
mov
xacquire
cmp
lea
in
imul
mov
mov
imul
xchg
cmc
sub
push
shlb
mov
push
sarl
cmp
aad
ja
mov
cld
or
scas
sbb
rcll
mov
xorl
sbb
xor
mov
xor
xchg
xor
jo
adc
pop
sub
jmp
negb
xchg
in
in
sbb
jbe
std
jns,pt
pop
dec
fcmovu
sahf
jne
push
icebp
pop
outsl
xor
lcall
add
adc
dec
push
pop
jg,pt
in
outsb
cmpsb
gs
shll
pop
rolb
dec
inc
adc
sbb
or
sub
daa
in
vmovntdq
xchg
mov
fwait
out
cmpsb
and
in
lods
pop
mov
or
in
add
mov
pusha
les
dec
lods
movsb
ljmp
bound
rorl
mov
sub
mull
popf
in
jmp
test
fcmovnbe
cmp
sub
xchg
rcrb
jbe
cwtl
nop
mov
jge
xchg
xor
add
subb
pop
mov
sub
pop
cltd
scas
ror
lret
jnp
pop
mov
xchg
ret
mov
sbb
xrelease
mov
popa
push
stc
sahf
xor
inc
ss
jno
cli
xchg
mov
fidivs
fs
mov
lret
pop
add
popf
jmp
sbb
shll
jecxz
lret
pop
loop
lock
push
sub
inc
xor
jae
sub
add
cmp
dec
xchg
mov
gs
jmp
out
cwtl
push
cwtl
mov
js
dec
fcmovb
int
jmp
aam
lock
sub
cmp
movlps
stc
nop
xchg
data16
sti
cmp
idivl
pop
cmp
or
ljmp
xor
pop
and
mov
fwait
add
jns
addr16
shll
adc
mov
imul
lds
push
add
pop
inc
data16
loopne
push
rolb
loope
imul
jl
jle
stos
int
dec
leave
cmp
stc
ja
imul
push
cmp
dec
mov
xchg
jp
lods
stc
xchg
out
cli
gs
or
mov
lcall
push
mov
addr16
add
fcmovnb
outsl
orl
into
int
hlt
inc
rcrl
lods
cmp
push
xchg
or
mov
or
pop
inc
lret
mov
lds
jmp
inc
iret
mov
dec
mov
aas
or
in
mov
es
cmp
mov
jo
mov
jge
adc
sbb
stc
insb
shr
test
mov
sbb
arpl
jno
mov
mov
mov
int
aam
dec
ret
push
shrb
movsl
cmpsb
stc
xchg
mov
pop
movsl
xchg
int3
pop
jmp
pop
stos
or
gs
enter
ret
icebp
jmp
dec
int
dec
add
out
test
jb
aam
test
xchg
inc
sub
xor
nop
cmp
fstps
sub
iret
popf
xchg
fdivrl
inc
fcompl
push
xor
pop
xchg
dec
fs
and
push
data16
xchg
das
push
mov
arpl
or
ljmp
ret
mov
daa
mov
stos
mov
sbb
lds
mov
adc
lahf
jle
inc
xchg
push
stos
arpl
in
out
dec
adcb
and
notb
je
imul
shrl
das
in
lret
push
lock
addr16
popf
and
lods
fs
movsb
pop
xor
push
pop
inc
ljmp
cs
imul
dec
jl
sub
inc
push
stos
xchg
cmp
int3
adc
dec
mov
xchg
std
aas
xor
pop
sbb
decl
mov
mov
sub
fcomps
mov
xchg
mov
jbe
dec
push
xchg
or
pop
test
out
cwtl
mov
mov
xchg
fisttps
xchg
jne
sbb
mov
in
push
cmp
addb
push
pop
test
adc
pop
sub
imul
adc
push
jne
dec
and
inc
cwtl
stc
push
imul
cmc
adc
dec
out
xchg
hlt
arpl
fnstsw
notb
xchg
pop
aaa
sub
cmpsb
jns
loope
test
cmp
fcmovnbe
test
ret
loope
xchg
rolb
scas
jo
dec
mov
inc
jge
shll
xor
mov
xchg
les
ljmp
jns
or
push
cmp
pop
or
subl
pop
fisubl
cmp
jo
xchg
loop
pop
js
cmp
mov
inc
negb
or
mov
fs
bound
into
stc
or
cmp
pop
loope
adc
aad
insb
scas
lret
ret
add
dec
inc
imul
add
lods
sub
sbb
xlat
mov
mov
cmpsl
popa
jge
sub
push
push
inc
or
pop
or
test
push
or
sbb
cwtl
arpl
inc
add
sbb
dec
test
scas
cli
insl
mov
jp
stc
shr
aam
das
xchg
push
mov
adcl
cld
cltd
js
and
cmp
dec
inc
inc
xchg
scas
add
push
das
add
dec
mov
imul
mov
ja
adc
add
mov
jg
subb
popa
sbb
insb
and
mov
or
icebp
lods
mov
and
test
dec
out
imul
xor
adc
fildll
add
ficomps
mov
stos
lods
adc
pop
xor
test
dec
mov
dec
cmp
adc
dec
cmpl
repnz
add
cmpsl
cmpsl
shlb
sub
ficoms
popl
out
cmp
adc
mov
in
shlb
add
cmpsb
pop
mov
cmpsb
push
lcall
push
int
lods
jbe
movsb
push
add
out
mov
cwtl
mov
mov
cwtl
inc
inc
adc
loop
stc
hlt
pop
pop
push
lods
repz
movsb
ret
sahf
xchg
mov
jns
lret
mov
dec
push
icebp
pop
push
sub
push
inc
repz
push
nop
cld
push
orps
ret
jo
icebp
ja
fnstcw
mov
dec
pop
jmp
test
jmp
mov
pop
jmp
icebp
bound
mov
jb
repnz
mov
jb
dec
fists
scas
jmp
rol
sbb
rcrb
xchg
push
rclb
sub
sbb
repz
sbb
cmp
into
xchg
sub
jg
sbb
xchg
std
ljmp
inc
jg
shr
mov
or
cmp
inc
in
clc
ljmp
xchg
or
mov
or
adc
out
popf
xor
cmp
push
cmpsb
jnp
add
gs
insl
mov
xor
push
or
push
dec
test
iret
push
xor
ret
aam
jge
inc
dec
mov
cmpsl
bound
and
test
cltd
fisttpll
iret
mov
mov
jecxz
mov
repz
or
xor
inc
lcall
mov
aad
sub
xor
cs
push
inc
stos
test
out
dec
jl
xor
or
pop
fs
cli
aad
call
sti
xor
inc
stc
aaa
xor
push
enter
sub
pusha
push
popa
out
xor
adc
mov
into
pusha
cs
insl
mov
mov
loopne
insb
fs
scas
mov
mov
fsubs
cmp
xchg
xchg
push
push
dec
aas
sub
jmp
dec
xchg
aaa
dec
pusha
jae
lds
inc
add
cmp
call
add
call
xlat
push
notl
fst
xchg
jne
cmp
and
shl
xor
daa
lds
int
cmp
fsubr
in
dec
andb
pushf
insb
sub
divl
fwait
pushf
aaa
nop
outsb
adc
mov
push
mov
movsl
cmp
das
lods
aas
mov
add
dec
cmp
or
ret
repnz
js
xlat
sti
mov
ret
cwtl
xor
mov
or
jns
sarl
stos
test
mov
xlat
xor
mov
loopne
push
adc
jg
mov
cwtl
push
add
aam
adc
jns
and
mov
fcompl
push
data16
and
cmp
mov
fcmovbe
into
mov
stos
mov
mov
in
loop
cmp
cltd
sub
repnz
xor
jecxz
loop
jg
out
jno
cmp
lahf
push
pop
out
fisttpl
bound
sbb
ss
in
std
stos
cld
lcall
sub
imul
lock
fdiv
inc
push
or
cmpsl
jbe
loopne
add
aas
aad
sbb
add
jae
mov
ja
test
int
ror
jae
fcompl
movsl
lcall
inc
pop
sbb
inc
nop
aas
mov
mov
sbb
push
lds
push
mov
aaa
ss
cmp
sbb
inc
push
sar
push
xchg
mov
xchg
push
and
pop
push
jb
inc
jnp
cmp
push
mov
mov
jle
std
dec
lea
je
or
lahf
test
jge
ror
lret
cmp
popf
sub
in
push
push
mov
into
stos
lds
lods
dec
mov
ss
je
subb
push
add
or
mov
push
inc
ss
ret
sbb
into
push
mov
repz
sbb
lret
aad
stc
add
iret
ror
push
adc
mov
repz
sti
shll
inc
daa
ss
sbb
adc
pop
xor
in
cs
pop
mov
jmp
in
push
sub
lea
fnsave
inc
or
push
pushf
ret
and
pop
mov
cmp
sbb
data16
push
ds
sub
aaa
sbb
lea
stc
addl
je
mov
stos
addb
inc
daa
cli
push
sbb
or
mov
pop
leave
sti
inc
jo
cmc
mov
adc
pop
mov
add
or
push
iret
addr16
rcll
jge
cmp
jbe
mov
int3
or
call
daa
out
gs
movsb
ds
adc
push
mov
scas
pop
xor
cmpsb
ds
push
daa
xchg
pop
mov
jno
ja
insl
es
mov
mov
pop
fs
lret
adc
aam
add
stos
pextrw
je
mov
adc
stc
jo
cmc
idivl
pop
sub
pop
sbb
gs
push
in
mov
xchg
cmp
das
cmp
push
inc
sbb
mov
push
enter
mov
jae
inc
push
inc
pushf
push
shlb
stos
mov
inc
mov
inc
pop
xchg
arpl
or
jb
dec
cmpsb
adc
mov
ficomps
xchg
fdivrs
int3
jae
lea
enter
cld
push
pusha
jae
mov
pop
pop
in
gs
test
mov
and
jbe
xchg
mov
fsubrl
fsubs
mov
pop
add
add
sbb
or
pushf
xor
gs
movl
pop
scas
xchg
aad
rolb
jno
pusha
sub
ss
lock
in
test
or
aad
mov
jne
fistpl
outsl
icebp
enter
sbb
push
shl
ljmp
imul
mov
adc
push
xchg
fs
fsub
in
sub
mov
add
fimull
push
add
pop
push
lods
testl
loopne
push
mov
pop
jns
pop
adc
lds
push
test
adc
aad
imul
dec
loope
push
int3
es
pop
cmp
mov
fidivl
arpl
pop
and
ret
scas
xchg
mov
daa
dec
add
iret
cmp
fs
std
lret
lds
sub
sub
stos
mov
pop
add
imul
icebp
lods
js
cmp
xor
ret
hlt
pop
push
sbb
xor
dec
pushf
sub
ja
rolb
xor
aad
pop
mov
ljmp
and
pushf
push
push
lret
pop
inc
mov
jecxz
mov
movsb
add
jecxz
insl
jg
mov
pop
pushf
push
in
mov
mov
and
and
cmp
rcrl
sub
loop
loopne
out
aad
push
inc
inc
ret
add
jle
aam
popa
je
mov
daa
inc
hlt
js
push
fnstenv
add
and
std
xchg
or
jp
sbb
fistpl
mull
dec
xor
aad
sub
add
jl
out
faddl
pop
loope
aam
mov
sub
aaa
cld
push
cmp
lea
pushf
nop
sub
js
sub
rol
cmp
pop
push
mov
and
das
xlat
push
leave
scas
sub
inc
fdivs
mov
and
daa
xchg
mov
scas
sarl
fsubp
jmp
daa
iret
mov
in
adc
push
sub
jbe
xchg
push
ljmp
lret
dec
stc
mov
push
movsl
pop
in
sub
popa
mov
lods
dec
sub
mov
pop
jo
mov
loop
stos
insb
mov
lods
dec
or
jbe
cs
in
addr16
push
and
dec
lret
pushf
dec
or
mov
jb
ret
pop
add
out
nop
int3
rcrl
subb
adc
mov
imul
push
lahf
cli
aam
js
xchg
push
rcrb
push
add
and
jb
adc
xlat
jge
out
mov
sbbl
adc
arpl
push
insl
imul
fnstenv
in
xchg
ds
jb
xchg
sarb
push
sarb
cltd
dec
xchg
or
ret
insl
ss
mov
lret
imul
das
sbb
adc
jl
stc
jo
and
hlt
xor
les
lret
int3
adc
data16
cmp
pop
sbb
xchg
jl
stos
insl
pop
jnp
adc
int3
cmc
testl
push
push
in
mov
xor
and
inc
shlb
pop
lahf
mov
xor
push
dec
adc
cmp
and
in
popa
por
sub
ret
mov
pop
ja
test
lods
mov
sbb
jle
data16
fsubs
inc
test
in
cmp
fsubr
call
fiaddl
mov
pop
leave
arpl
xor
cmpsl
rolb
call
push
mov
xor
xor
ror
inc
es
daa
movaps
lcall
pop
dec
ds
or
test
xchg
sub
mov
jecxz
popf
out
and
cmp
mov
xchg
shll
daa
addr16
add
pop
and
xor
fwait
repz
fidivrl
into
inc
lret
or
add
add
pop
mov
or
in
inc
push
js
jns
clc
rclb
xor
lahf
punpckldq
js
dec
movsl
add
repz
jp
adc
repnz
arpl
push
divb
xor
sub
xor
loopne
push
cmp
and
in
sbb
rclb
adc
pop
std
fsubs
push
cmp
pop
adc
inc
and
or
push
sahf
xchg
mov
test
call
in
xchg
or
in
add
jns
xor
loope
jns
sbb
ljmp
paddd
dec
push
aam
adc
or
shlb
sti
hlt
scas
fdivs
popa
push
lcall
sub
xchg
mov
xchg
jbe
mov
ror
jmp
or
rcrl
ss
loop
add
movl
inc
mov
fimuls
ljmp
inc
or
sub
idivl
inc
push
cmp
and
je
loopne
pusha
les
aam
pop
and
les
jne
sbb
xchg
adc
lds
lock
mov
mov
std
xorb
jp,pt
js
jle
sub
push
or
xor
sbb
shlb
dec
fbstp
mov
dec
xchg
test
cmp
iret
in
mov
mov
pop
or
pop
cs
push
xchg
jp
jnp
mov
xor
push
adc
add
mov
mov
push
mov
aad
and
mov
fnsave
addr16
stos
ret
sub
xor
or
mov
ds
push
adc
dec
mov
jno
push
cld
or
cmp
sbb
inc
mov
mov
jmp
jae
lock
js
sbb
mov
imul
in
imul
jno
or
icebp
enter
fisubrl
adc
fsubrl
xchg
dec
pop
dec
loopne
add
shrb
cmpsb
cmp
jp
lahf
stos
inc
or
aam
pop
add
mov
push
mov
mov
or
out
and
clc
shrl
adc
jns
cmpsl
push
inc
arpl
dec
movsb
push
or
in
mov
mov
jl
inc
cmc
xchg
xchg
pop
popa
xor
dec
dec
mov
nop
xchg
into
push
xor
nopl
inc
sbb
repnz
enter
fldl
repz
sbb
jb
inc
loop
pop
xchg
fldt
pop
js
scas
roll
push
orb
sub
popa
push
mov
push
cmp
sub
inc
nopl
add
xchg
bound
or
cmp
xchg
push
mov
shll
adc
fstps
outsb
sub
daa
pop
sbb
jb
faddl
fstpl
repz
fsts
ret
icebp
ret
dec
xor
cmp
orl
in
mov
xlat
sub
jl
or
sub
jmp
movsb
mov
pop
mov
arpl
cmp
shl
btr
outsl
mov
sbb
inc
dec
xchg
movzwl
mov
stos
rcrl
push
and
pusha
mov
push
sbb
or
xlat
imul
fisttps
call
ja
sbb
sbb
add
jne
mov
pop
loop
mov
daa
insb
fnstenv
or
or
aam
add
in
pop
call
cmpsl
sbb
sbb
fistl
pop
sbb
add
stc
xor
mov
fsts
push
addb
add
loop
pop
cmc
xchg
sub
aas
xchg
mov
daa
cmpsl
sbb
imul
test
arpl
call
lds
or
jne
jecxz
push
mov
bound
in
leave
push
jbe
and
into
mov
sub
outsl
jbe
cli
dec
enter
xor
int
mov
push
leave
out
not
jg
cwtl
inc
stos
xchg
pop
cli
outsl
bound
hlt
stc
pop
in
movsl
out
push
fbstp
imull
pop
mov
insl
fld
jecxz
xor
add
add
out
xor
pop
les
mov
jge
lcall
sbb
test
push
mov
clc
push
push
test
stc
xor
clc
sub
mov
adc
cmpsl
into
adc
sbb
cli
lods
push
std
mov
insb
pop
loopne
cmc
sahf
and
sub
jns
inc
dec
scas
popf
add
int
cmp
lock
mov
push
ljmp
sbb
repnz
cmp
jae
int
mov
mov
adc
lock
cwtl
nop
adc
mov
and
mov
add
mov
sbb
iret
sbbb
dec
inc
sti
pop
pop
lahf
fs
shr
aad
jbe
rorl
adc
cwtl
cli
pop
js
es
pop
fsubrl
in
in
fiadds
dec
xor
inc
xchg
je
test
push
push
js
sbb
das
add
push
sub
jnp
cmp
cmpsl
gs
jbe
sub
jp
fucom
divl
pop
loop
push
dec
mov
add
xchg
sbb
xorb
out
in
call
add
xchg
mov
test
inc
movsl
movsl
cmp
jno
dec
mov
insb
or
ficompl
rolb
cmp
inc
push
ret
sub
jl
push
jge
fidivl
popl
push
cld
dec
sbb
jp
iret
iret
sbb
dec
cmp
aaa
rcr
inc
jmp
cli
cmp
push
mov
sahf
jno
fsubp
bound
lds
in
ja
sbbl
addb
cmpb
out
pop
iret
xchg
jae
stos
sahf
in
pop
stc
pop
sbb
fsub
jb
dec
ss
lret
pop
scas
lcall
push
jb
sbb
dec
push
cmp
mov
jb
into
ss
imulb
scas
aad
icebp
mov
loop
jo
and
ffree
cld
inc
jne
jno
icebp
inc
sbb
mov
cltd
add
sbb
cli
inc
div
mov
mov
divl
mov
inc
rcrl
rorb
cwtl
mov
fisubrs
test
xchg
mov
jno
aas
xchg
cltd
cltd
call
dec
cwtl
or
fnstcw
add
mov
ss
sti
add
pop
decb
sahf
daa
adc
mov
mov
adc
shrd
sahf
cmp
lcall
push
cmp
mov
movsb
inc
orl
inc
mov
or
ljmp
pushf
xchg
jmp
arpl
cs
add
fwait
sub
cwtl
std
sbb
mov
mov
mov
and
aad
incl
das
aam
lret
fiadds
fbld
jge
bound
pop
scas
test
negl
bound
add
or
add
lahf
lock
cli
test
repz
add
test
into
sarb
add
rorb
pop
cmp
daa
pop
adc
add
fwait
cmp
push
ljmp
imul
rolb
xchg
jecxz
cmp
call
push
fistpl
xchg
mov
pop
dec
test
jo
lock
mov
xlat
cli
shrl
out
ljmp
pusha
and
fmuls
cmpsb
imul
mov
repnz
mov
xor
fs
shlb
pop
hlt
jmp
nop
or
repnz
add
xchg
sub
pushf
cmpsl
push
loop
dec
mov
insb
mull
or
mov
dec
ds
and
pop
fdivrs
lods
into
stos
dec
fwait
pusha
and
push
sub
cmp
frstor
lret
pop
inc
das
ret
aaa
mov
ror
adc
js
jge
fwait
sbb
out
or
mov
out
into
push
insl
xor
cmc
or
clc
divb
int
sub
push
fcomps
clc
mov
imul
jb
inc
jae
enter
dec
aad
sti
outsl
lods
mov
dec
sub
mov
adc
outsl
push
mov
fistps
in
mov
out
mov
lods
mov
push
mov
gs
push
xchg
cmc
ss
ficompl
insb
mov
pop
or
mov
mov
jbe
scas
adc
in
roll
inc
cmp
adc
test
jmp
xor
out
movsl
sub
sbb
and
xor
mov
int3
cmp
lock
jbe
pop
fidivs
mov
jp
jecxz
xor
outsb
loopne
mov
das
ja
xchg
shlb
add
in
clc
jl
xlat
ja
fildl
movsb
cs
sbb
sbb
andb
mov
daa
enter
es
icebp
inc
pop
sub
inc
cmp
std
scas
mov
cmpsl
testl
sub
pop
lahf
cmp
pop
negl
mov
movsl
lods
push
aad
es
fsts
lret
cmp
xchg
push
push
rcl
jge
int3
aaa
movsl
pop
gs
xchg
jne
push
dec
leave
das
and
inc
ss
or
sbb
aam
data16
push
cmp
sbb
icebp
loope
or
gs
das
stc
sbb
push
fiadds
push
xor
call
outsb
mov
mov
jno
sarb
fidivrl
js
or
inc
sahf
mov
mov
mov
sub
pusha
test
scas
scas
out
nop
out
jne
sbb
mov
outsb
jp
mov
scas
call
xor
sub
xchg
and
lret
das
adc
xlat
cwtl
push
push
sub
aas
pop
cmp
dec
sti
push
dec
cmpsb
sub
jg
aad
lret
add
fs
push
or
imul
sub
in
push
lret
xchg
xor
ret
add
xchg
mov
sarb
jno
int
jb
xor
cmc
ss
ror
sub
xchg
popa
push
push
sbb
and
mov
rcrb
fwait
sub
icebp
cwtl
jmp
or
push
and
push
sbb
das
jge
mov
std
mov
leave
cmp
lock
mov
cmp
and
xchg
int3
mov
ret
inc
add
movsb
arpl
xchg
testl
jmp
mov
inc
cmp
in
pop
pop
sub
sbb
das
dec
mov
and
jne
in
addr16
stos
push
stos
mov
and
cmp
stos
jecxz
lret
imul
dec
mov
ret
negb
add
dec
sbb
mov
sub
or
mov
push
int
fs
pop
flds
clc
jg
adc
adc
xchg
popf
les
es
mov
movsb
scas
std
mov
sbb
add
sbb
lods
or
adc
adc
inc
and
sti
scas
mov
lods
imul
jl
testb
mov
and
push
xor
xchg
jmp
pop
cmp
nop
fnstsw
cmp
jmp
cmp
sbb
mov
add
push
leave
and
clc
jbe
cmc
stos
sub
jmp
leave
jmp
cmc
sbb
lds
push
push
fmull
ficoms
cs
stc
outsb
lds
popf
sub
ljmp
and
scas
pop
in
inc
push
sub
cwtl
xlat
push
std
mov
jecxz
inc
subb
adc
cwtl
or
xrelease
jne
sti
mov
into
cmc
push
push
out
mov
ja
loope
std
sub
push
pusha
jbe
fcoms
cmp
testl
jno
pop
ja
jo
push
push
call
sbb
rep
pop
jnp
fsqrt
fisttps
xor
cmpsl
cmpsb
or
iret
mov
out
repnz
jle
ret
in
jecxz
aaa
decl
push
dec
inc
in
data16
jno
push
xchg
xor
hlt
xchg
enter
mov
jns
push
ja
inc
lods
mov
mov
dec
jns
arpl
pop
mov
imul
pop
gs
add
int3
mov
mov
or
jl
jge
dec
and
jne
mov
mov
loopne
jne
pushf
mov
je
xor
mov
sub
lret
adc
aas
cs
ds
into
fidivrl
cmp
fstpl
pop
jle
push
xchg
loopne
in
nop
pop
sbb
push
xor
xchg
cmp
inc
inc
jno
lret
lods
pop
lret
leave
xchg
adc
adc
insl
lcall
les
push
mov
in
popa
dec
dec
fs
or
sub
out
mov
test
test
scas
lock
sti
fidivrs
jne
cwtl
xor
jae
jne
dec
or
mov
xchg
jle
lea
xor
dec
arpl
popf
adc
push
sbb
jecxz
leave
add
jae
pop
or
repz
sub
stc
mov
cmp
fcmovne
into
ret
push
and
push
or
insl
mov
lods
imul
cmpsb
adc
pop
cltd
and
push
xchg
movsb
dec
rcl
pop
cltd
mov
mov
sub
add
adc
ficompl
dec
pop
fcoms
mov
popa
cmp
xor
xlat
cmp
mov
mov
loop
sub
add
push
dec
xor
adc
data16
dec
aad
enter
test
insl
mov
rcr
xlat
push
adc
shlb
jge
mov
out
outsb
mov
daa
dec
std
push
push
pushf
lahf
adc
pop
sub
xor
xor
sbbb
mov
nop
loop
mov
mov
gs
and
sub
sbb
xor
js
push
sahf
rorb
sub
pop
and
sbb
dec
pop
loop
pop
inc
popa
pop
sub
pop
sti
out
lock
mov
je
in
arpl
notl
iret
fbld
dec
and
imul
daa
mov
imul
sbb
es
les
inc
sbb
iret
int
jge
shll
jmp
pop
movsl
in
sarl
or
shrl
pop
adc
fdivrl
inc
sub
dec
arpl
adc
pusha
mov
je
add
sti
imul
mov
loope
jne
fmuls
mov
or
cmpsl
in
xor
jo
xchg
jg
xchg
test
mov
nop
fs
sub
jne
loop
andl
cmp
decl
xor
ss
fmuls
or
test
cmp
cmp
sub
cmp
push
mov
inc
popf
mov
mov
aam
xchg
mov
xchg
mov
fisubl
inc
inc
cmp
leave
repz
cmp
xchg
push
cmpb
push
mov
lods
inc
jmp
push
mov
fcoml
notl
add
movsb
xchg
or
pop
sub
fcoml
pop
jl
rcrl
iret
or
push
jg
ds
arpl
sub
out
inc
popa
xor
xor
es
test
rcll
or
and
jbe
out
or
jecxz
out
stc
es
xchg
add
mov
cli
ds
jp
push
popa
mov
test
pop
push
imul
nop
inc
jmp
push
push
cmc
lods
mov
sbb
xchg
or
out
mov
push
loope
inc
addb
lods
push
popf
js
push
xor
out
sbb
aad
xchg
fs
out
insl
and
mov
out
ds
inc
dec
mov
lea
fldcw
cmp
add
xchg
mov
inc
mov
sahf
stc
push
enter
xchg
or
inc
xlat
inc
adc
ja
jno
test
jle
and
loop
push
dec
adc
jbe
jle
repz
pop
xor
jns
or
and
bound
dec
jns
pop
mov
lret
jae
jnp
dec
in
push
mov
das
sahf
popf
sub
xlat
mov
fs
out
jl
sub
sub
sub
add
push
dec
xor
xor
lock
data16
ret
jo
inc
jmp
call
sahf
xchg
fists
mov
out
cld
push
mov
mov
mov
mov
pop
lret
pop
mov
seta
andl
iret
es
cli
fimull
inc
pop
pop
xchg
addr16
loopne
or
shrl
push
mov
mov
addr16
dec
cmpsb
adc
shl
adc
stc
sbb
addr16
jle
jge
pop
or
test
cmp
aam
mov
adc
jp
int
adc
and
aad
icebp
in
cmp
mov
mov
xor
enter
xchg
push
insl
stos
out
out
addl
mov
testb
pushf
sti
and
fstpt
aaa
or
sub
sbb
xor
repnz
xchg
adc
repz
mov
sahf
in
outsl
leave
sub
sub
push
out
stc
mov
push
cmp
dec
mov
test
test
xor
js
in
imul
sbb
ror
in
testb
jl
and
or
add
jae
add
gs
lds
and
pop
addr16
jno
fsubs
lock
frstor
ss
bound
pop
loope
and
gs
mov
cmp
and
loop
xor
cld
lahf
xor
xchg
dec
les
pop
xor
imulb
inc
xchg
xchg
sub
lcall
ret
pop
xor
adc
ret
call
out
jp
jmp
sbb
rclb
mov
clc
sub
mov
cmp
jmp
sbb
ret
mov
xor
jo
push
mov
scas
push
mov
push
mov
fs
call
or
or
or
lods
aad
mov
pushf
clc
add
inc
cmp
out
std
loopne
nop
xchg
and
push
js
xchg
pop
cld
rorl
xor
mov
imul
sub
and
jnp
push
dec
inc
movsb
sbb
mov
repnz
xchg
jns
mov
mov
push
adc
pop
bound
or
out
bnd
inc
jge
orb
push
lods
pop
mov
sub
in
sub
dec
lds
jno
cmc
cmp
push
ss
or
xchg
jnp
dec
or
push
loope
mov
lret
push
jp
pop
fcmovnb
inc
sub
or
loopne
xor
mov
lahf
sub
test
adc
jmp
insl
pop
push
or
jbe
in
scas
andb
inc
dec
cmp
mov
push
and
addb
lock
and
cld
testb
incb
pop
jne
aad
xchg
repz
movsb
call
mov
mov
daa
std
sub
adc
ret
lret
dec
lods
push
popf
pop
sbb
jnp
andl
sahf
cmp
pop
mov
push
jmp
clc
mov
cmc
and
lahf
fstps
nop
rclb
ficompl
repz
add
stos
test
adc
ja
out
rclb
lret
loope
inc
sbb
xor
push
xchg
pop
sub
and
fdivrs
pop
fistpl
subl
sub
lret
sbb
pop
popf
cmp
fldt
les
lds
shlb
xlat
push
fstps
mov
push
test
add
or
movsl
pop
or
mov
es
adc
pop
xor
es
add
ds
xor
frstor
pop
dec
push
cmc
out
jae
sub
movsb
sbb
xchg
pop
mov
inc
iret
mov
mov
xchg
in
rorb
push
mov
xor
daa
mov
hlt
lods
push
jge
test
lock
outsl
xchg
nop
daa
lods
pop
mov
sub
test
outsl
fnstcw
pop
cmp
xor
sahf
mov
mov
inc
push
insl
or
call
push
leave
test
leave
pusha
pop
outsl
or
xchg
call
cmc
clc
xchg
aaa
insl
add
cwtl
gs
in
cmp
std
pop
leave
iret
sbb
test
mov
push
mov
sahf
dec
divb
xor
jae
int
inc
xchg
shlb
test
shrb
adc
xchg
mov
orl
test
in
ret
hlt
in
jg
gs
push
test
jge
sub
leave
xchg
arpl
ret
rcr
sbb
cmp
fwait
mov
dec
xor
dec
jge
js
mov
into
imul
cmc
ss
inc
mov
mov
addr16
add
mov
mov
int
sbb
push
push
iret
call
jle
sbbl
test
lock
aas
mov
vmread
inc
xchg
push
arpl
sti
aas
mulb
adc
mov
in
adc
subb
xor
and
add
lds
cltd
fcompl
adc
jnp
dec
in
cmpsl
xchg
cmc
loop
lods
xchg
add
jnp
imulb
stos
stos
arpl
jno
mov
jno
pop
sbb
aam
pop
inc
adc
mov
test
cmpb
push
iret
mov
lds
movsb
movsb
fsubs
outsl
add
push
mov
xchg
fcomps
and
loop
std
inc
in
dec
stc
sti
aas
cmpsl
lods
jae
xchg
pop
xor
dec
add
lods
shll
fs
inc
inc
xchg
outsb
fstl
sub
dec
ret
lds
pop
es
int
cmp
pop
cltd
bound
push
jg
sbb
xor
jp
inc
into
cmp
xchg
pop
jle
fmul
hlt
mov
jp
xor
xlat
or
push
ret
push
inc
inc
mov
jo
adcb
int3
sbb
leave
jno
dec
cmp
filds
jecxz
pop
xor
mov
sbbl
hlt
fsub
stc
push
cmc
jns
or
aaa
stos
adc
xchg
ficoml
cmp
jae
pop
rcr
shr
push
inc
das
xacquire
test
mov
cmp
testl
ret
pop
mov
xchg
addl
sbb
mov
sub
sarl
cld
rcll
stc
into
out
xchg
pushf
dec
or
lcall
xor
sarl
mov
out
ja
mov
nop
lock
sub
pushf
movsb
lret
fcoml
jnp
mov
bound
ja
int
cmpsb
in
or
int
adc
xchg
mov
cmpl
sahf
lahf
mov
mov
mov
das
xor
out
inc
cmpsl
jmp
mov
jno
xor
jp
gs
mov
out
inc
cmp
adcl
rcrb
lock
stc
inc
lods
rorl
inc
fdecstp
mov
inc
fdiv
jecxz
notb
xchg
sbb
mov
mov
test
sbb
pop
cmpsl
mov
movsl
mov
pop
xchg
std
pop
sub
movsb
cld
aam
xchg
xor
lods
test
rcr
xor
pop
stos
cmpb
xchg
cmp
xchg
mov
test
adc
out
and
mov
loopne
jge
rcll
cmpb
cltd
cmp
mov
sahf
loopne
daa
lret
ljmp
lock
mov
jns
pop
movsl
push
cmp
pushf
dec
lods
inc
icebp
xchg
xchg
jnp
shll
clc
fwait
cwtl
ret
pop
dec
inc
dec
ret
call
sub
push
mov
ja
sbb
stos
xor
jmp
leave
inc
push
push
cmpsl
push
cmpsb
xor
lret
xor
dec
xlat
aad
push
jmp
rclb
add
imul
add
mov
pop
mov
mov
pop
pcmpeqd
icebp
add
fildll
test
roll
mov
fcmovnbe
ret
es
jb
push
xchg
dec
mov
je
mov
pop
das
push
nop
clc
out
mul
test
dec
jmp
lock
les
sbb
sbb
inc
les
push
cmp
lret
cmp
mov
adc
pop
xor
inc
sbb
dec
push
push
movsl
imul
mov
mov
lds
cmc
xor
jne
arpl
lret
dec
subb
pop
ljmp
jl
xchg
push
jp
pop
xlat
inc
cmp
insl
fldcw
add
dec
mov
pop
inc
push
arpl
adc
pusha
mov
sub
push
es
cmp
stos
push
fldenv
dec
ret
pop
pusha
push
jno
lods
out
aaa
sahf
inc
xor
cmp
jbe
inc
mov
xchg
mov
push
xor
xor
jle
mov
sbbb
stc
jle
cwtl
mov
mov
adc
xchg
xchg
or
loopne
cld
cltd
jbe
xor
fs
jle
cs
xor
dec
xchg
rcrb
cmp
jp
fldcw
add
pop
clc
fcoml
icebp
jb
mov
aam
cmp
out
xchg
and
or
adc
fidivl
jmp
pop
cmpl
jmp
sub
lock
inc
in
push
and
ds
adc
lods
cwtl
popf
jp
outsb
push
fdivl
sti
fs
fsubs
lods
jg
pop
adc
mov
mov
divl
mov
jo
sbb
sti
sbb
loope
push
jns
and
pop
push
jae
fstpt
inc
or
repz
or
outsl
pop
movsl
fwait
dec
mov
ds
inc
jl
test
push
enter
call
push
jl
fstl
mov
pop
jae
pop
xchg
lcall
add
out
insb
or
int3
cmp
and
add
punpckhwd
or
xchg
sub
fidivs
inc
out
leave
and
and
les
sbb
sub
adc
stos
pop
jl
pop
lods
shlb
sbb
dec
sub
pop
adc
in
adc
test
cmp
or
jne
and
and
mov
mov
fstp
fs
mov
movsb
roll
cs
cmpsl
aam
jns
cmp
pop
test
fs
rcrb
imul
movsl
inc
pushf
inc
cmc
int
inc
xchg
sbbb
xchg
pop
adcb
cli
roll
icebp
test
sbbb
dec
mov
jne
sbb
cmp
xor
push
mov
in
push
push
fwait
mov
add
jge
or
andb
clc
and
adc
rorl
fnsave
fidivrs
popa
cmp
aam
add
cmp
mov
fs
into
lea
mov
mov
out
imul
pop
andl
push
mov
xchg
sub
mov
cmp
push
mov
enter
lock
lods
pop
adcl
lret
sub
mov
push
int3
je
jecxz
bound
sub
fistpll
nop
sub
jnp
rcrl
cmpsb
mov
movsl
push
aaa
xchg
xchg
data16
sub
je
stc
push
sub
idivb
ja
icebp
push
imul
mov
insb
or
mov
push
push
into
sbb
shll
mov
lods
mov
loop
and
mov
stos
gs
xor
dec
movsb
inc
movsl
jecxz
outsb
xchg
loope
addb
imul
out
mov
shl
pushf
mov
out
lahf
fwait
shrb
xor
dec
int3
lcall
fiadds
add
incb
add
jmp
repnz
out
lods
dec
stos
xlat
xchg
dec
rcrl
popa
pop
push
aas
inc
inc
mov
stos
cmp
mov
addr16
push
pop
sti
inc
pop
pop
inc
adc
outsb
aaa
jo
mov
ret
inc
inc
ret
stos
lds
push
aad
mov
loop
jns
negl
push
mov
bound
and
aam
adc
pop
cli
loop
jmp
stc
pop
pop
sbb
inc
pop
add
xchg
cwtl
test
jp
jp
jge
fwait
pop
aad
mul
adc
xchg
sub
ss
cmp
xlat
inc
fimull
in
imul
dec
pop
das
push
stos
lahf
mov
orb
test
inc
lods
scas
push
rcll
sbb
mov
subl
jmp
cmpsl
js
jns
xlat
sbb
in
xchg
arpl
fwait
mov
das
popf
in
push
icebp
insl
popa
sahf
mov
mov
xchg
call
or
push
sub
inc
lods
mov
lahf
pusha
xlat
stos
cmp
cltd
psllw
and
test
jmp
sbbb
clc
push
icebp
adc
pop
cmp
pop
push
cmp
push
adc
push
nop
lods
roll
xchg
sbb
xlat
push
pop
pop
insb
out
xchg
cli
imul
js
test
jbe
mov
outsb
movsb
mov
xlat
test
pop
pop
aas
mov
imul
dec
sub
xchg
add
outsb
dec
test
pushf
arpl
sbb
jmp
movsb
fwait
push
cmp
xor
fcmovbe
mov
pop
subb
adc
xor
fisubs
jge
and
xlat
lahf
shll
add
out
cmp
mov
mov
sub
and
push
push
jg
cld
adc
into
inc
fcompl
mov
dec
inc
xchg
and
mov
jecxz
mov
shl
xchg
arpl
jae
mov
inc
enter
pop
dec
push
or
xchg
push
xchg
je
mov
mov
sub
enter
aad
loope
xlat
inc
cmp
xchg
xchg
jp
cmp
and
std
push
rcr
jnp
sub
cltd
push
mov
sahf
inc
xor
jns
ss
pinsrw
sbb
scas
add
lret
mov
push
adc
outsw
bound
sub
sbb
aas
jb
cmp
mov
shrl
jno
cltd
out
mov
fwait
xchg
out
push
jns
jle
push
lret
cmpsl
jle
int
icebp
inc
lret
es
fs
sbb
cmc
lret
mov
mov
add
xchg
inc
pop
lret
stos
mov
clc
ss
aam
test
pop
adc
or
jle
sub
jmp
pop
popf
push
cmpsl
stos
clc
lret
test
test
in
ret
cmp
add
test
inc
xor
test
mov
cli
inc
push
lret
xchg
mov
jg
cltd
sbb
ret
insl
outsl
lret
sbbl
xchg
pop
sub
shll
push
xor
sub
nop
fs
push
fdivrs
xor
pop
rorb
insb
shr
xor
mov
xor
movsl
lret
test
addl
mov
lds
mov
jg
dec
push
aaa
xchg
popa
add
and
ret
jb
rolb
arpl
sbb
cmp
add
or
fsubs
test
pop
test
and
je
mov
inc
and
xorb
fstps
ds
scas
push
pop
sbb
xchg
aas
pusha
sbb
push
mov
int
in
ds
pop
data16
clc
add
push
clc
sti
mov
pop
jge
aam
mov
adc
sbb
insl
jg
jne
mov
cmpb
jns
push
push
push
stos
mov
fstp
mov
xchg
push
add
mov
in
sbb
repnz
adc
rcrl
mov
ljmp
add
xchg
push
lods
lret
xchg
sbb
mov
lods
int
aad
dec
sub
mov
add
loope
jae
arpl
mov
push
js
hlt
or
aas
pop
xorb
aad
dec
rcll
xchg
mov
inc
leave
lea
les
cmp
insl
icebp
aas
cmp
sahf
fadds
lea
cwtl
fists
les
mov
push
jb
js
mov
push
push
std
sar
test
adc
cmp
xchg
mov
dec
mov
mov
xchg
and
mov
cs
cwtl
flds
in
pop
out
lret
dec
add
inc
push
mov
jecxz
mov
xor
scas
dec
and
adc
imul
fisttpll
inc
shlb
pop
xor
mov
push
or
xchg
pxor
mov
fnsave
lods
popl
imul
dec
outsb
dec
lret
addr16
mov
lahf
mov
test
lcall
iret
sti
stos
mov
sarl
movsl
ljmp
shrb
bound
ror
add
ds
ss
dec
xchg
mov
in
mov
fimull
dec
scas
rclb
mov
ret
outsl
add
in
call
lds
cmc
xlat
sub
repnz
dec
enter
clc
push
ds
pop
fdivr
lods
daa
mov
xchg
adc
fdivrp
jp
mov
mov
pop
cmp
lds
test
sbb
and
mov
je
aam
add
test
add
cmp
mov
test
cmp
loop
cwtl
fnsave
loopne
je
mov
daa
push
sub
add
lock
inc
insl
jbe
add
insl
dec
jbe
movsl
mov
shlb
push
cmp
pop
or
test
cmp
in
shrb
push
ret
dec
pop
mov
cwtl
xor
roll
adc
pop
xor
in
aad
imul
fstl
jne
mov
outsb
int
ret
add
xor
movsb
ret
mov
test
movsl
dec
dec
mov
test
push
pop
imul
xchg
aaa
cmp
lods
pop
add
jmp
mov
inc
or
mov
bound
insb
lock
lock
bound
dec
pop
ret
mov
add
in
call
mov
cmp
aam
mov
dec
cmp
cmp
and
dec
xlat
loop
lahf
in
test
push
xchg
push
adc
push
cli
fnstenv
rcl
das
jmp
jbe
shlb
pop
fstps
jecxz
jge
loopne
cmp
bound
stos
mov
mov
sar
faddl
mov
xchg
sub
dec
sbb
ret
nop
sbb
push
pop
loopne
and
push
xchg
in
pop
add
insl
jl
out
loopne
ds
mov
ds
sub
jecxz
adc
fistpl
call
sbb
sti
push
or
test
add
fstp
jno
xor
adc
jge
sbb
mov
mov
xchg
andb
xchg
cmp
push
xchg
out
aam
pop
xlat
mov
roll
pop
dec
repnz
xchg
cmpsb
in
jno
dec
scas
data16
cmc
adc
dec
lret
or
adc
sub
mov
in
outsl
fsubs
adc
stc
push
push
xor
test
pusha
xchg
addr16
mov
push
jno
mov
pop
sub
jecxz
xchg
xchg
xchg
adc
cmp
sbb
daa
dec
push
negb
clc
jp
add
mov
pop
xor
mov
sti
aaa
inc
cmp
xor
fiaddl
or
xchg
insl
sbb
ret
adcb
insl
icebp
pusha
add
std
and
mov
push
test
push
mov
hlt
pop
xchg
cmp
pop
xchg
out
mov
adc
jne
sub
add
cmp
pop
iret
add
or
popa
iret
ds
loop
ret
ljmp
insb
decl
cmc
in
xor
mov
mov
imul
mov
bound
jg
mov
subl
mov
out
daa
lahf
mov
dec
cmp
inc
int3
sub
cmp
push
push
fldt
int
jne
xchg
mov
aaa
xor
sub
cs
lcall
xchg
mov
xor
jp
pushf
xor
leave
push
and
inc
xor
and
cmp
lods
mov
flds
sbb
or
out
mov
lods
jmp
ret
fdecstp
xor
cld
loopne
pop
xor
js
js
jbe
sbb
or
es
stos
jae
mov
loop
pop
mov
mov
push
sarb
cmp
movsl
popa
push
xor
inc
or
xor
push
mov
lret
scas
mov
movsl
stc
ret
call
hlt
aaa
imul
inc
call
testl
aam
xor
clc
loop
cmp
mov
xor
cmp
sub
jne
ja
lds
not
mov
jne
iret
jb
jne
mov
push
sbb
fadds
jmp
pop
xor
jl
popa
xchg
es
ss
jp
xchg
xor
sbb
jmp
pusha
fsubl
lods
mov
cmp
movups
andb
sub
fstps
mov
push
repz
int3
mull
ja
repnz
and
xor
loop
add
scas
in
push
into
ljmp
cmpsl
mov
jl
xchg
cmp
ror
stos
pop
or
lcall
bound
sbb
and
inc
or
and
lods
les
mov
cs
mov
jg
mov
jo
stc
enter
mov
out
sub
lea
push
lods
test
xchg
mov
push
mov
mov
push
and
jmp
sub
and
out
adc
movsl
in
into
negb
mov
or
shlb
sub
fistl
je
lea
je
xchg
ret
cs
or
xchg
cmpsb
mov
sub
add
or
repz
aaa
or
jb
push
mov
nop
jmp
out
in
jge
xchg
test
inc
mov
cld
iret
jno
cmp
adc
mov
loop
shl
push
mov
lea
aam
xor
dec
adc
jnp
jmp
les
mov
jns
or
or
mov
push
mov
add
add
jp
xor
and
sbb
inc
sbbl
push
fldenv
and
cwtl
insl
dec
fadds
sbb
push
in
das
mov
lods
shlb
popa
js
stc
add
repnz
adc
push
in
xchg
push
inc
fwait
in
mov
pushl
notl
jl
cltd
gs
sub
cld
pop
pop
in
or
xor
inc
hlt
int
mov
sti
mov
jmp
stos
cmp
mov
movsl
and
shlb
push
xchg
fwait
aaa
cmp
cs
adc
push
call
lock
and
jle
push
aad
inc
xchg
pop
xor
clc
and
dec
sbbb
aad
fiadds
and
call
mov
push
aam
or
addl
adcb
and
jecxz
xor
pushf
fdivs
cli
inc
ficoml
sbb
stc
adc
sub
push
jns
out
icebp
lret
sub
ja
push
pop
xor
and
dec
fisttps
dec
add
inc
fs
mov
push
adc
lods
fbstp
mull
jbe
and
aas
fwait
and
pop
out
add
or
cmpsl
out
ljmp
add
jns
push
add
out
rcrl
rcrb
fimull
jae
inc
mov
sbb
push
shrl
cmp
dec
fcompl
sub
add
jmp
pop
lods
hlt
sbb
mov
imul
lea
adc
insb
mov
arpl
hlt
ljmp
fmuls
ss
cmp
jecxz
mov
out
aad
arpl
cld
cltd
out
pop
xor
inc
jg
push
add
outsb
mov
jae
fnstsw
mov
add
movsb
call
mov
pop
popa
adc
scas
aad
mov
in
int
push
repz
jns
in
es
mov
mov
mov
mov
inc
dec
fcomps
mov
mov
mov
sti
and
imul
js
inc
in
testl
sti
dec
xchg
mov
pop
cmp
lea
xchg
mov
push
jle
inc
pop
push
fs
pop
inc
sti
sbb
adc
mov
xor
imul
clc
xchg
shrl
pop
lods
sub
ret
push
jnp
enter
sbb
jns
dec
ds
pop
or
js
adc
xchg
push
lret
xor
sub
cs
cmp
mov
ror
shl
orl
mov
loopne
fs
push
mov
pop
imul
lods
xor
fmul
jmp
cmpsl
rolb
xchg
xchg
fisttpl
movsl
and
fcmovbe
nop
xchg
cltd
in
imul
enter
push
addr16
scas
adc
inc
or
and
in
add
mov
outsl
xor
and
adc
sahf
mov
mov
iret
lods
std
or
sbb
and
mov
call
lock
test
clc
leave
xlat
sbb
mov
and
adc
push
ss
sub
es
add
aad
movsl
mov
or
hlt
mov
movsb
or
ljmp
push
xchg
jp
mov
xchg
mov
xor
xor
pop
aas
out
bound
and
gs
xchg
out
pop
dec
push
fists
push
fisubrs
cs
adc
xorb
frstor
shrl
aas
sub
test
add
sbb
xchg
pusha
xor
jb
inc
xor
int
stos
jne
mov
cmp
cwtl
push
xchg
cmp
sbb
sbb
in
es
or
pop
inc
scas
stc
rorl
cwtl
mov
aad
sbb
sub
hlt
and
jecxz
out
or
push
sub
dec
test
lret
xchg
mov
inc
iret
xchg
out
jno
xchg
daa
sub
xchg
call
jo
and
lds
cmp
cld
xchg
jp
jo
sub
shll
movsl
adc
pusha
or
jo
in
inc
movsl
mov
fs
xchg
xor
fs
lock
lods
xor
scas
insb
das
adc
cwtl
dec
xor
push
xor
inc
mov
push
test
repnz
xchg
jmp
inc
mov
cmp
lods
or
jl
mov
ljmp
or
addl
lret
push
dec
insb
outsb
push
mov
mov
pop
and
adc
sub
xchg
int3
lcall
cltd
adc
mov
or
dec
sbb
push
xchg
cmp
cmpl
test
outsl
nop
fisubrs
inc
stos
outsl
hlt
xlat
jmp
loope
dec
stc
cld
push
mov
in
shl
ja
insb
aad
jmp
push
adc
enter
add
mov
js
orl
cli
xchg
adc
fwait
push
ds
cmp
notb
fs
xchg
iret
pop
icebp
sub
adc
jg
jmp
add
int3
fldl
xchg
rcrb
dec
and
mov
ds
int
and
out
sub
or
in
test
aad
les
shl
mov
stc
lret
push
lock
xorb
pop
jecxz
xchg
out
ret
fisubrl
xor
jp
inc
es
rorl
dec
mov
aam
mov
fwait
push
adc
call
jle
pop
cltd
movsb
push
sub
xchg
movsl
add
std
xor
adc
and
mov
xchg
sub
in
push
gs
jle
and
push
pop
rcll
adc
jnp,pt
nop
push
leave
jbe
lret
xor
mov
or
in
inc
jecxz
popa
popf
mov
push
in
icebp
aas
xchg
data16
icebp
pop
cmp
add
shrb
or
int
ljmp
imull
les
pop
dec
mov
fcompl
pop
insl
ds
fwait
push
insl
pop
mov
daa
stos
into
fs
jp
adc
and
enter
std
adc
lea
cmp
fstpt
mov
sbb
ss
push
jle
out
mov
dec
outsb
bound
lahf
jae
mov
pop
jge
shll
mov
lods
pop
movsl
fwait
ljmp
xlat
pop
into
adc
lahf
add
push
call
jne
test
insb
mov
and
dec
lahf
loopne
mov
test
test
lods
push
fwait
sub
pushf
add
fwait
xorb
aam
sar
xor
ss
ljmp
or
aad
fwait
add
and
fdivp
aaa
xchg
lods
iret
mov
mov
cmpsl
test
push
ss
jmp
in
scas
scas
xor
xchg
cmovne
dec
jbe
sbbb
xchg
push
push
cmc
sub
cmp
ret
lods
inc
push
arpl
and
adc
out
adc
sarl
dec
mov
inc
sbb
dec
cmp
sbb
into
push
call
push
pop
mov
mov
inc
jne
iret
cwtl
fdivl
stc
xchg
adc
mov
imul
fsubrl
pop
ret
sbb
sub
stos
dec
aad
mov
push
aad
mov
mov
dec
push
loopne
inc
jns
pop
pop
jne
jmp
lods
cmp
rclb
mov
ds
enter
mov
mov
adc
push
xchg
xlat
gs
scas
pop
sub
imul
mov
push
sub
sbb
sbb
test
sete
je
adc
leave
repz
mov
mov
pushf
pusha
sub
mov
fsts
lahf
xchg
imull
xlat
jae
std
inc
inc
js
pop
int
xchg
es
mov
or
push
cmp
sbb
mov
fxch
and
xchg
or
loop
sub
cli
mov
adc
mov
add
bound
push
aad
or
dec
and
sahf
lcall
stos
mov
std
pop
nop
xor
stc
cmp
imul
cmpsb
sti
cmp
jb
stos
addr16
repz
stos
xor
lahf
push
scas
adc
adc
sbb
rcrb
pop
mov
call
dec
mov
sbb
inc
fisubl
or
pop
lods
daa
ja
rcr
incl
cs
mov
cmp
adc
movsb
aad
push
xchg
lahf
ljmp
sub
or
inc
push
jae
movsb
or
and
mov
mov
push
xchg
xor
out
push
daa
mov
and
mov
mov
sub
ror
aam
inc
sub
xor
add
xor
adc
add
shlb
lcall
dec
adc
fsubl
adc
dec
and
or
into
addr16
mov
sub
fldl2t
push
loop
push
lods
sub
mov
push
jmp
daa
pop
and
and
mov
or
andl
mov
adc
cmp
adc
dec
out
test
pushf
insl
inc
sub
bound
pop
adc
mov
dec
rcrb
adc
je
mov
inc
sub
inc
jae
fsubl
test
div
mov
aad
pop
call
insb
adc
xor
cmp
mov
cmc
jecxz
mov
out
xchg
mov
or
negl
and
fdiv
cmp
stos
cwtl
push
mov
pop
das
jle
mov
adc
in
cmp
sti
jle
sbb
add
ljmp
sbb
icebp
imul
dec
mov
lcall
stc
arpl
ds
jle
adc
sub
or
mov
sbb
ret
inc
xor
ss
jne
stos
repz
add
or
pushl
loope
jl
scas
andl
sbb
inc
mov
pop
andl
jmp
and
jl
mov
dec
imulb
adc
test
gs
mov
cmc
dec
movsb
mov
leave
imul
js
sub
jle
dec
and
imul
testl
lods
adc
lods
or
adc
and
pop
push
pop
pop
cmp
icebp
sarl
jns
jo,pn
add
inc
shr
adc
lcall
xchg
push
sbb
cmp
xchg
js
fs
mov
dec
jnp
pop
enter
sub
test
jge
xlat
jnp
fiadds
sub
ss
jg
test
pop
jno
mov
sbb
les
xchg
mov
mov
or
popa
xchg
ret
mov
xchg
xchg
jle
jns
mov
mov
jge
and
sbb
xchg
bound
mov
mov
mov
sub
cld
inc
pop
add
adc
dec
test
or
push
hlt
out
jnp
xor
inc
imulb
adc
stos
mov
pop
push
pusha
xor
popa
xorb
or
fidivrs
jae
jl
dec
lods
adc
nop
lret
outsb
inc
rorl
pop
jmp
pop
addr16
stos
popa
push
shlb
into
pusha
fwait
aaa
push
daa
pop
sbb
mov
hlt
and
xchg
mov
jmp
dec
fisubs
dec
scas
dec
push
cmp
lahf
test
in
push
je
push
repnz
xor
loop
sub
push
xor
adc
dec
loopne
ja
or
xor
add
stos
cltd
das
imul
mov
sub
push
sub
mov
cmp
push
mov
cld
sbb
or
pop
mov
test
xor
in
ficoms
mov
aam
jb
rolb
mov
sbb
inc
fnstcw
ret
add
outsb
xchg
and
rorl
mov
fidivs
pop
push
jno
adc
xor
push
mov
sahf
ja
dec
stos
cmpsb
mov
cmpsb
add
adcb
call
call
mov
scas
popf
fistps
aad
outsl
inc
jle
jno
inc
fwait
rcl
les
fildl
aad
pop
ret
sbb
pop
cmp
ss
out
pop
cmpsl
jge
loope
mov
xchg
adc
scas
mov
jno
cmpsl
repnz
sbbl
and
mov
repnz
xor
add
popa
push
repnz
les
inc
call
aam
sub
aaa
adc
out
mov
inc
repnz
js
mov
pop
jmp
xchg
pop
js
add
jmp
cmp
sbb
loope
out
out
xlat
sarl
gs
mov
loope
pop
sub
mov
push
xchg
add
cli
cmp
shl
jnp
fnstenv
pushl
or
das
or
xchg
aas
pop
xor
and
mov
repnz
or
jmp
sbb
pop
add
mov
mov
xor
shlb
push
adc
aas
nop
or
pop
jns
mov
mov
fidivrs
cltd
loope
std
mov
call
dec
mov
xchg
dec
sub
xchg
das
jmp
push
and
adc
mov
out
out
mov
mov
dec
xchg
pop
jnp
inc
mov
lret
xlat
adc
jns
adc
aad
fsincos
or
rcll
dec
cltd
js
mov
movsl
xor
addr16
aas
adc
and
enter
xor
cmpsb
ss
sub
scas
addr16
sub
cmp
roll
test
lods
xchg
push
lods
add
ficompl
mov
popf
inc
shrl
push
dec
cli
mov
push
clc
ja
loope
xchg
sub
adc
adc
sbb
inc
pushf
icebp
mov
xor
xor
mov
daa
mov
fdivrs
xor
aaa
in
das
jb
push
pop
lods
jb
shlb
outsb
rclb
pushf
adc
movsb
nop
adc
rcrb
jae
and
cmp
test
inc
sahf
mov
add
pop
mov
xlat
decl
cli
scas
jae
xor
inc
stc
lret
sub
cmpsb
loopne
pop
aad
adc
andl
rolb
push
xor
cmc
cmc
mov
push
mov
mov
lret
push
mov
sarl
and
cmpb
mov
xorb
sub
clc
lcall
inc
sub
add
mov
inc
mov
testl
sti
cs
je
pop
push
jns
mov
push
push
cltd
je
test
cmp
push
ljmp
jo
ror
pminsw
mov
scas
mov
scas
cpuid
mov
jnp
ret
push
fdivrl
or
pop
idivl
adc
scas
in
mov
pop
or
popa
loope
in
iret
test
cmp
push
sub
sbb
mov
xchg
jno
loopne
mov
or
mov
pop
lock
nop
xchg
popf
fisttpl
in
lds
sarl
fistl
std
jmp
jae
add
fldcw
iret
cmp
jae
out
xchg
in
ds
sub
int3
popf
mov
add
shlb
pop
add
or
imul
daa
xchg
pop
sub
and
xchg
xchg
dec
ds
mov
bound
mov
cli
jle
push
ljmp
std
sub
mov
jno
rcr
cmc
daa
inc
enter
cs
jns
or
push
ret
xchg
je
popf
jne
xchg
loope
push
push
add
and
xchg
sbb
cmpsl
hlt
pop
push
insb
jle,pt
pop
repz
popa
cmp
add
pusha
mov
clc
fucom
test
and
repz
sbb
pop
mov
jnp
out
insb
mov
push
cltd
inc
dec
sahf
xchg
sahf
es
pop
arpl
or
leave
mov
cwtl
mov
cld
push
fidivrs
fidivrl
stos
push
add
xlat
mov
cmp
decb
inc
imul
add
jmp
add
test
daa
mov
call
sub
push
mov
outsb
daa
out
je
leave
adc
pop
jae,pt
shl
loope
dec
xchg
jg
outsl
jmp
push
xlat
xchg
movsb
mov
xor
sbb
inc
mov
cmp
xchg
hlt
lret
outsb
fstpl
imul
mov
inc
mov
mov
movsl
pop
stos
movsl
sbb
add
xchg
call
orb
dec
xchg
scas
cld
pop
dec
outsl
sub
mov
jge
jo
mov
cmp
bound
cmpl
stos
cmpsl
and
out
sahf
addr16
lock
lea
mov
sti
and
add
mov
js
inc
mov
jnp
dec
push
outsl
test
add
jb
loop
pop
int
dec
dec
test
add
movsl
and
les
sti
aas
test
mov
mov
adc
push
dec
shrl
xchg
and
push
sti
push
cmc
in
inc
fidivs
push
fildl
cmpsl
je
jne
addr16
int
dec
mov
mov
pop
mov
loopne
add
rcll
fdivr
imul
je
je
mov
movsb
jns
cmp
out
pop
fstl
mov
pop
repz
adc
bound
test
aam
pushf
mov
jge
ds
cmp
fisttpl
test
jg
or
test
add
arpl
mov
ret
xchg
xor
movsb
mov
pop
xchg
shrl
scas
movsb
in
push
inc
cmc
add
xchg
mov
arpl
and
xchg
xor
mov
cwtl
fwait
mulb
jae
jns
sarl
frstor
shll
pusha
aaa
xchg
test
filds
xlat
pop
pop
inc
mov
xchg
mov
add
pop
jnp
ljmp
and
aam
sub
and
out
sbb
sbb
int
mov
mov
mov
addb
and
fsubl
addr16
in
pop
addr16
jns
iret
mov
jp
cmpsb
call
dec
es
clc
movsl
sahf
cmp
bound
push
adc
gs
arpl
mov
add
lahf
xchg
scas
push
adc
pop
pop
cli
fstl
loop
adc
mov
rcl
pop
cs
fcmovnb
inc
out
stos
fdiv
fincstp
push
cli
add
ss
mov
jp
pop
into
cli
mov
imul
pushf
sbb
cmc
clc
mov
and
cmpsl
cltd
jb
rcl
push
fsts
jnp
fnsave
loop
call
jp
in
loop
pop
jge
es
pop
add
add
sbb
sbb
inc
loop
add
mov
and
cld
pop
sub
sub
in
push
lods
icebp
push
pop
je
ljmp
outsl
inc
aaa
sbb
mov
scas
mov
dec
lcall
shlb
mov
scas
adc
jbe
scas
jecxz
sbb
mov
mov
add
add
fisubrl
jnp
movsl
mov
es
lea
pop
xor
cmpsl
jae
repnz
adc
loopne
dec
add
cmc
add
lea
add
dec
orb
fs
jmp
nop
or
mov
test
nop
add
insb
or
mov
or
push
sti
mov
sbb
adc
jecxz
in
bound
fdivrl
decb
ficomps
xorl
mov
cmp
pop
jae
cwtl
dec
lods
into
fldcw
imul
or
shrl
jle
adc
adc
inc
mov
stc
ret
jno
ret
push
add
push
pop
xchg
and
dec
dec
inc
jae
jg
or
push
in
pop
jbe
inc
fists
das
cmp
pop
fdivrs
outsl
ret
or
ljmp
scas
sub
fs
je
not
push
pop
call
stc
mov
sub
cmpsl
les
or
mov
movsl
fidivrl
jnp
mov
rcl
dec
shrb
imul
jne
pop
push
cmp
mov
gs
push
add
popa
cmp
rcll
hlt
fmull
aam
sub
push
add
data16
xchg
mov
lea
popf
loope
lahf
ljmp
add
dec
sub
lea
mov
dec
cwtl
or
roll
jp
mov
icebp
push
cmc
or
test
repnz
loopne,pn
and
leave
xchg
jecxz
pop
out
icebp
out
icebp
jmp
xchg
adc
mov
inc
and
dec
call
push
push
sbb
inc
rolb
es
sti
repz
data16
pop
imul
xor
lds
jg
adc
push
in
jge
push
ret
add
test
push
orb
out
mov
jl
and
test
lods
aaa
sahf
insb
pop
jecxz
inc
aam
push
scas
push
movsb
das
and
in
push
inc
mov
mov
inc
decl
mov
stos
je,pt
adcl
aad
repz
mov
dec
lahf
leave
adc
fbstp
fwait
pop
pop
pop
dec
sub
cmpsb
addr16
cltd
ja
jl
push
loop
push
jne
lret
cwtl
and
insl
lret
xor
push
sbb
sahf
outsb
in
mov
xor
loop
leave
cmpsb
mov
je
or
call
mov
shll
push
lret
test
in
xor
out
cmp
pmuludq
scas
sub
sub
xor
faddl
inc
dec
or
addr16
sti
jg
fisttpll
xchg
cwtl
pusha
cmpsl
sub
stos
or
int3
push
adcl
mov
xchg
fwait
mov
push
sub
dec
inc
lret
dec
xchg
pop
xor
add
jle
adc
loop
aad
mov
iret
inc
iret
ds
call
inc
aaa
insl
jns
daa
int
mov
lods
fbstp
mov
aas
add
dec
mov
xlat
fldenv
mov
sub
lock
push
or
psllq
cltd
xchg
xchg
testl
lock
mov
stos
sub
rolb
iret
cmpsl
jg
jg
movsb
mov
aam
xor
movsl
mov
scas
inc
mov
movsl
mov
mov
pop
xor
mov
cmp
clc
push
mov
push
or
sub
adc
ret
mov
sub
and
aas
icebp
xchg
mov
out
push
add
sub
mov
loopne
add
xor
ret
lock
and
xor
std
add
jecxz
pop
jle
mov
cmp
sbb
and
js
push
popf
mov
jo
icebp
addr16
and
cmp
addr16
cmp
inc
sbb
mov
nop
pop
adc
jecxz
or
jmp
mov
shll
or
mov
mov
inc
and
mov
xchg
daa
scas
jne
sarl
sti
mov
pusha
iret
pop
mov
or
push
jne
inc
pop
fsubs
lea
jmp
and
mov
loopne
mov
xor
into
imul
xor
and
xorl
and
ds
test
push
jg
test
dec
inc
ja
shrb
mov
add
vmread
push
adcb
sub
sbb
lea
lods
xor
repnz
cmc
fcmovb
xorb
shlb
jne
mov
jns
and
add
xchg
and
mov
xchg
cli
sub
fwait
lcall
dec
jmp
xor
push
es
sub
pop
lds
fistps
sbb
mov
add
sub
jae
mov
mov
lcall
mov
fiaddl
inc
addr16
adc
mov
mov
loope
xchg
addb
aad
test
imul
jg
xor
inc
mov
js
cwtl
js
test
dec
sub
negb
fdivs
pop
in
pushf
mov
sbb
xchg
imul
out
daa
xchg
mov
mov
movsl
je
mov
outsb
aaa
add
or
sahf
mov
mov
sub
inc
in
xor
pop
dec
adc
jp
ficomps
sub
shlb
add
ss
stos
dec
xchg
in
cli
inc
or
es
out
outsb
iret
cld
mov
jl
and
out
outsl
bound
loopne
inc
and
lods
sub
cs
adc
call
cmc
inc
es
mov
ret
xchg
nop
into
sub
test
outsb
xchg
sub
shlb
push
jmp
xor
mov
xlat
pop
pop
inc
aam
sub
pop
cmp
mov
sti
mov
cwtl
push
insl
daa
xchg
mov
xor
sub
pop
sub
sub
xchg
shll
sub
pop
js
mov
ss
gs
cmpsl
push
push
scas
stos
stos
xchg
dec
push
imulb
fistps
lods
outsl
mov
pop
pop
in
and
lock
fdivs
and
ja
adc
rcl
out
pop
mov
jmp
icebp
mov
push
mov
mov
cmp
cltd
stc
cltd
push
push
adcl
add
mov
xor
es
mov
sbb
mov
mov
stc
shlb
mov
cltd
cli
pop
loope
sub
cmpsb
mov
inc
adc
sbb
sub
inc
dec
sbb
popf
and
imul
das
fstpt
arpl
in
and
sub
fucom
cmp
xor
inc
jp
call
and
add
adcb
xchg
add
mov
out
sbb
rcrb
dec
or
add
sbb
lcall
add
or
pusha
or
inc
shll
cmpb
xchg
inc
jae
mov
xor
lock
cmp
inc
or
xchg
loop
ss
mov
lret
push
jp
mov
lds
mov
jge
mov
xchg
or
loope
leave
jecxz
jbe
mov
ds
imul
xor
jmp
xchg
outsb
std
dec
cmc
add
gs
repz
adc
pop
das
out
scas
add
into
addb
sbb
adc
dec
aas
stos
outsb
jecxz
pop
jecxz
lahf
scas
fwait
jp
inc
push
cs
scas
in
imul
in
lea
adc
cmp
aad
cmp
int
inc
mov
inc
out
lahf
lret
add
inc
mov
leave
mov
cmc
mov
in
cltd
xchg
popf
lods
xchg
gs
repnz
dec
out
cmpsb
rcll
iret
movsb
mov
xor
js
fstps
scas
nop
insb
sarb
jbe
mov
dec
inc
cmp
and
xchg
aaa
and
xlat
hlt
shl
ret
inc
cltd
mov
repz
roll
cmp
test
pop
fidivl
add
adc
push
lods
bndldx
mov
mov
dec
pusha
ja
jge
sbb
mov
jne
out
mov
mov
cmc
scas
frstor
push
mov
jl
dec
push
aad
mov
repz
cmpsb
mov
les
pusha
mov
xchg
jb
dec
or
repnz
sbb
fldcw
and
rcrl
sub
xor
negb
inc
pop
adcl
push
enter
repnz
mov
clc
mov
add
xchg
fdivr
repnz
roll
sub
ret
pop
mov
pop
rcl
daa
iret
jmp
data16
lods
xor
push
jnp
pushf
sbb
gs
adc
sarb
bound
sbb
inc
insl
inc
vpcmpgtb
jnp
imul
imul
stos
data16
mov
fdivrs
aad
fs
clc
adc
sbb
ret
mov
mov
popw
outsb
sub
enter
xchg
jmp
and
mov
mov
icebp
stos
dec
mov
nop
out
dec
cmc
sub
shrl
icebp
inc
add
xor
pop
int
add
and
dec
pop
imul
or
xor
dec
mov
pop
and
inc
test
mov
sbbl
popa
clc
xchg
mov
imull
xchg
ljmp
mov
shl
cmpsb
cmp
sarl
mov
mov
rcr
sub
push
outsb
jns
aad
push
test
cmc
in
ss
jns
mov
scas
push
dec
fidivs
test
mov
and
lods
or
xor
fisubrs
xor
cmp
push
dec
daa
pop
mov
or
lret
out
ret
mov
jmp
repnz
cmp
js
mov
outsl
add
push
gs
ror
pusha
push
dec
push
test
pop
vcvttps2dq
imul
mov
mov
imul
sbb
sub
addr16
xchg
cmp
cwtl
cli
mov
pop
add
hlt
push
xor
mov
sti
pop
call
adc
mov
inc
dec
mov
add
jecxz
loopne
sbb
push
cmp
leave
movsb
in
insb
fdivl
in
call
lods
sbb
sub
cmp
sub
ret
sbb
push
push
cltd
jecxz
repz
leave
jmp
outsb
das
imul
jo
ljmp
sahf
xadd
mov
xor
sub
dec
cmp
xchg
adc
jb
dec
aad
sbb
and
movsl
jl
cmp
dec
lahf
das
mov
cmp
hlt
mov
jno
repz
lea
adc
or
lret
mov
insb
push
inc
or
push
inc
xchg
data16
in
cmp
mov
in
lods
xor
imul
scas
jbe
cmp
dec
add
js
push
enter
in
xor
das
data16
add
cmp
mov
sbb
pop
std
jmp
and
jb
jnp
pop
jno
outsl
not
sbb
add
sub
pop
rcrl
pop
inc
inc
neg
call
inc
xor
lcall
mov
dec
lods
and
mov
ret
xchg
outsb
sahf
pushf
test
cltd
rcrb
xchg
and
jg
std
add
int3
dec
cmovl
clc
xchg
ffreep
inc
push
dec
jae
scas
cwtl
and
jge
in
clc
sbb
sti
cli
jle
idivb
fld
movsb
adcl
xor
mov
cmc
inc
pop
cmp
scas
aam
sub
sub
outsl
jp
std
lcall
fnstsw
and
bt
pop
pop
mov
popf
sub
fcmove
lods
fstpt
cmp
in
aaa
bound
xchg
daa
movsl
push
lahf
cs
cmc
leave
les
jne
je
jno
repnz
or
mov
loopne
mov
dec
push
jge
mov
mov
sbb
inc
int3
and
push
cmp
stos
lea
jle
repnz
xchg
jns
frstor
loope
rolb
aad
lcall
sub
imul
sub
mov
mov
mov
inc
mov
and
inc
scas
dec
jmp
or
mov
cmp
in
cmp
arpl
sar
in
push
in
shrl
mov
pop
mov
and
xchg
sub
std
mov
and
rcr
jecxz
in
jmp
test
mov
fisubrl
lret
repz
dec
outsl
mov
test
stos
or
sbb
shr
pop
cltd
or
sti
lods
push
or
out
xor
mov
sub
fsubl
jp
mov
imul
xchg
fnsave
jnp
arpl
mov
in
mov
fstpl
test
fwait
rorb
adc
fsubl
or
xchg
push
jb
xchg
mov
daa
loop
push
out
gs
xchg
addr16
insl
test
std
enter
cltd
dec
mov
int
push
mov
mov
mov
sbb
pusha
sahf
aas
lods
xchg
in
jecxz
lods
aam
xchg
outsb
mov
xor
fs
xchg
adc
pop
pop
or
add
roll
lea
pop
push
in
and
repnz
in
ds
mov
aas
arpl
out
jnp
nop
popa
lds
es
jle
sub
cli
or
movsl
enter
add
and
arpl
or
inc
dec
sub
addr16
ljmp
or
jno
gs
stc
add
mov
stc
gs
rorb
repz
clc
aaa
pop
cmp
mov
in
movsl
add
loopne
les
push
frstor
clc
push
xchg
in
test
call
nop
add
pop
lods
mov
in
mov
sbb
sbb
dec
in
dec
ret
mov
or
mov
scas
out
in
and
mov
iret
mov
fidivrs
js
mov
mov
pop
fadds
pop
mov
jo
adc
repz
andl
jl
inc
cmp
cltd
xor
xchg
and
push
xor
shr
sbb
adc
into
xchg
outsb
adc
sbb
sub
cmp
movsl
add
call
test
jns
iret
fidivl
xlat
xor
int3
pop
inc
inc
mov
idivl
sbb
popl
xchg
or
push
mov
out
mov
jno
loop
and
inc
or
xchg
xor
lock
inc
adc
mov
jns
lock
fisttps
pop
pop
iret
popa
xchg
adc
jno
jo
mov
sar
mov
lcall
ficoml
stc
loopne
inc
fldl
popf
jecxz
xchg
pop
cmp
test
pushf
daa
cmpsl
mov
cld
cmp
idiv
sbbl
js
or
in
pusha
mov
xchg
js
leave
pushf
xchg
scas
test
dec
sbb
test
cltd
repz
jmp
fistl
jmp
lret
lea
ret
xor
mov
addr16
mov
add
cmp
hlt
bswap
aad
ds
sti
xchg
jno
push
sub
jae
jg
dec
ja
xor
xchg
jge
push
fcoml
daa
mov
add
adc
push
loopne
movsl
sbb
jp
out
outsl
push
push
cmpsb
or
and
push
scas
mov
mov
je
jg
inc
hlt
push
mov
sub
lds
dec
jge
xchg
xchg
cmp
and
lcall
lcall
inc
mov
movsl
sub
stc
mov
int3
bound
inc
sub
jae
adcb
jmp
cld
lret
inc
pop
push
and
or
out
mov
stos
repz
push
xchg
mov
fdivl
jmp
xor
and
shrl
add
push
push
out
inc
in
push
lcall
fdivp
mov
add
inc
push
js
xor
or
cmpsb
mov
mov
incb
adc
std
call
pop
lods
sub
add
jg
sbb
std
push
sbb
idivb
inc
fdivs
cmpsb
push
dec
mov
in
fsubr
nop
mov
lods
cmp
sbb
jecxz
push
jle
sub
inc
adc
adc
mov
pop
aas
hlt
outsb
sub
loope
mov
xor
adc
push
jbe
cwtl
add
add
sbb
or
adc
popl
jnp
pavgb
adc
dec
and
push
pop
mov
fs
out
in
xchg
or
pushf
enter
mov
push
loopne
int
pop
xchg
dec
js
movsl
jle
in
leave
shr
sti
inc
push
ja
mov
adc
and
popf
jnp
pop
mov
stos
mov
je
in
fildll
ljmp
mov
pop
pop
filds
ret
mov
xor
mov
dec
push
daa
in
adc
xchg
clc
mov
gs
sti
loop
inc
pop
and
lds
negb
cld
sbb
cmp
mov
xchg
test
or
test
dec
out
cld
pop
xchg
repnz
fldt
stc
mov
clc
fdivrl
mov
jno
je
test
adc
fisubl
xchg
mov
lods
ds
cmpb
pushf
arpl
pop
sub
popa
and
dec
data16
inc
jns
insb
or
adc
sub
mov
inc
jbe
pop
popl
repnz
jg
in
jmp
cmp
fcmovbe
sub
jne
sub
nop
and
mov
mov
mov
aaa
xchg
push
inc
js
xchg
in
or
fidivs
and
xor
pop
popf
inc
sub
pop
xchg
lea
fisubl
lock
jne
int
pop
cmpsl
mov
out
push
push
xor
add
les
cltd
aas
imul
pop
mov
ljmp
mov
mov
cltd
out
mov
std
clc
out
fsubl
mov
fistps
and
into
xor
cmp
fmull
lret
dec
jmp
or
aad
pusha
adc
cmp
dec
andb
sub
sbbb
lds
xchg
sbb
mov
adc
jg
movsl
loope
add
mov
jle
aaa
push
dec
sub
rcrl
pop
pop
in
push
mov
call
dec
and
int3
subb
popf
loope
jns
ja
push
fisubl
ljmp
and
xlat
into
xchg
rorl
mov
fld
insb
push
sub
daa
popf
or
mov
pop
mov
cli
sti
inc
mov
fsubrl
mov
cltd
pop
mov
jecxz
mov
inc
mov
or
push
cmpsl
dec
dec
outsl
mov
outsl
pop
int
stos
lods
lods
inc
jg
imul
cmp
out
das
push
cmp
test
js
mov
int
mov
mov
fidivs
popa
out
cmc
stos
insb
int
fbld
aas
pop
jecxz
adc
daa
inc
mov
leave
and
sub
movsl
dec
mov
mov
sub
inc
jae
xchg
scas
filds
add
sbb
or
jg
shl
sub
loope
aam
sub
push
sbb
sbb
ret
popl
inc
das
dec
shll
pop
jns
adc
push
imul
aad
push
sub
divb
js
sahf
or
jno
xchg
outsl
bound
pop
in
mov
lds
ret
stos
fwait
shl
mov
pop
push
xchg
loopne
mov
popa
push
test
loop
fsubp
dec
push
jg
dec
jbe
fldenv
sub
add
mov
lods
push
fstpt
mov
mov
jno
mov
adc
lret
inc
rclb
test
add
dec
xchg
cmp
push
pop
cld
mov
jl
inc
mov
adc
sbb
push
ljmp
xchg
or
add
lcall
jns
std
jae
sub
mov
push
lods
mov
popa
das
or
mov
cwtl
push
out
lret
pop
or
jg
add
inc
add
arpl
mov
fstl
xchg
popa
imul
lret
js
inc
inc
or
xchg
add
outsl
es
adcb
inc
enter
fisubrl
pop
shll
inc
adc
jb
stc
dec
or
sub
pop
mov
sub
and
mov
inc
repnz
pop
lock
notl
pusha
adc
jbe
inc
dec
mov
fwait
xor
addb
mov
int
cmpsb
xchg
cmpsl
movsl
mov
lds
push
cld
les
jmp
or
push
dec
lea
shrl
pop
adc
sub
ficomps
shlb
mov
add
sub
mov
push
icebp
in
stos
push
sub
inc
lea
pop
lahf
jns
jl
mov
xchg
movsl
inc
push
mov
xor
sub
sbb
adc
sbb
pop
inc
in
inc
jbe
dec
fs
ss
mov
lahf
mov
or
cmp
add
sbb
cwtl
sbb
pop
shlb
mov
test
push
or
push
dec
out
inc
cmc
inc
xchg
leave
mov
dec
mov
in
mov
sbb
outsb
js
outsb
push
push
jb
out
push
hlt
inc
jb
shrb
pop
lods
jnp
sbb
je
fists
insl
pop
cmp
loopne
cmp
add
imul
mov
and
dec
push
outsl
lret
lret
mov
fildll
call
inc
push
lret
and
popa
and
sub
cwtl
std
adc
push
mov
inc
push
mov
push
cmp
iret
cmp
adc
imul
lea
roll
call
mov
fsubrl
iret
aaa
gs
mov
and
xor
sub
jg
sti
sahf
fstps
inc
fstps
cld
pop
and
fdivl
lds
xor
mov
mov
sbb
insb
ja
inc
inc
les
icebp
and
test
mov
or
pop
imul
mov
out
daa
sub
icebp
vsubpd
push
pop
dec
out
imul
test
aam
repz
inc
mov
inc
pop
in
outsb
cmp
jbe
jecxz
mov
mov
das
into
imul
dec
mov
les
push
mov
daa
sti
sub
fsubl
adc
mov
jp
sub
mov
xchg
or
pop
push
xchg
movsb
out
add
repnz
gs
gs
adc
adc
ficompl
int3
in
sbb
inc
mov
lods
cmp
jp
dec
insl
into
pop
lea
iret
mov
jnp
push
dec
repz
insl
mov
add
cmp
lcall
rorl
out
stc
jbe
mov
jne
aaa
or
mov
mov
mov
imul
jge
insl
hlt
jle
in
dec
sub
inc
out
adc
dec
or
and
repnz
mov
add
dec
aad
mov
pop
sbb
mov
cmp
js
dec
in
mov
ljmp
into
mov
push
repz
mov
ficompl
adc
and
push
mov
in
adc
xchg
dec
push
rcll
mov
sbb
mov
mov
ja
pop
testl
aam
inc
pop
insl
das
les
cli
ljmp
add
aam
lcall
dec
mov
mov
push
mov
inc
int
mov
dec
dec
sub
push
ljmp
das
push
lea
or
xor
pop
inc
pop
xchg
aaa
hlt
sub
adc
fs
pop
aad
inc
add
sub
orl
push
popf
test
cmp
sbb
and
movsb
aad
mov
imul
scas
xchg
loop
lock
cmp
sbb
adc
push
shl
mov
jns
xorl
mov
sbb
lret
inc
mov
ret
scas
push
push
inc
imull
fisttps
adc
test
movsl
mov
jae
cmp
cmc
dec
mov
in
nop
jecxz
out
xchg
add
jns
cmpsl
iret
in
aad
xchg
int
sahf
std
adc
sti
fcmovnb
cli
push
cltd
or
add
mov
js
cs
call
xchg
fs
adc
fdivs
inc
ljmp
lret
insb
mov
stos
call
aad
arpl
sub
fisttps
nop
test
push
lea
inc
paddd
scas
jnp
rorb
pop
jbe
add
sbb
jmp
mov
sbb
cmp
repnz
sub
aaa
loope
mov
adc
xchg
push
outsl
test
add
cmpsl
les
stc
mov
popa
in
push
sbb
lock
les
pop
jmp
jae
dec
scas
repz
mov
aad
mov
adc
int
insl
mov
popf
test
dec
inc
mov
rolb
adc
scas
daa
stc
loope
mov
je
and
cmc
sbb
ss
sarl
fiaddl
and
jae
cmp
mov
stc
mov
lret
movsl
xor
pop
mov
mov
mov
js
aam
iret
xor
jbe
test
push
loope
mov
jo
dec
jmp
scas
arpl
cli
cmp
in
loop
xchg
and
mov
jo
mov
xchg
arpl
das
pushf
adcb
loope
ret
ja
mov
loope
insl
mov
into
bound
push
imul
insb
xchg
mov
stos
scas
scas
mov
dec
sbbb
adcl
xchg
int
sbb
sbb
lcall
cmp
mov
and
cltd
bound
shlb
sbb
push
test
xor
ret
loopne
sub
push
push
pusha
imul
packssdw
mov
cmp
fstl
inc
add
inc
add
dec
sbbb
adc
addl
leave
mov
bound
shlb
sbb
and
mov
inc
movsl
ret
jmp
push
and
sub
inc
or
pushf
mov
mov
js
mov
pop
sbb
jns
rolb
out
mov
inc
xchg
mov
and
push
jbe
xlat
xor
dec
mov
mov
inc
stos
push
or
not
negb
sbb
jmp
mov
int3
xor
mov
out
jno
dec
xchg
dec
loopne
ja
arpl
inc
push
inc
xchg
iret
cmc
mov
add
out
xor
inc
or
fcmovnbe
jnp
xor
cmpsb
jnp
jge
dec
leave
sub
xor
mov
stos
mov
aaa
cmp
jl
cmp
adc
aas
xchg
int3
into
mov
xor
ret
hlt
cmpsb
xor
cld
dec
subb
add
int3
in
xchg
pop
cmpsl
cmp
add
aam
lahf
add
dec
push
mov
and
fnstenv
in
add
inc
fists
jle
pop
lock
or
lds
lods
add
gs
cltd
xor
xchg
lahf
sbb
ficoml
inc
dec
jmp
sub
dec
or
mov
xchg
mov
test
mov
push
xor
lahf
shrl
fidivs
xchg
push
inc
jge
enter
in
xor
cmp
sbbl
out
xor
shrb
ror
or
cmpsb
xchg
xor
aas
jl
xchg
test
dec
xor
cmp
in
sbb
push
lds
pop
cmpsl
sub
add
jno
std
and
ja
pop
stos
movsb
jb
movsl
add
cmp
pop
addr16
xchg
shr
fisubl
subb
sbb
xor
es
movsl
and
aaa
hlt
neg
xchg
cs
iret
bound
adc
sbb
push
mov
mov
jo
popa
xor
dec
ds
cmp
scas
and
sbb
in
sub
cli
cwtl
es
or
jno
repz
out
xlat
daa
ds
imul
dec
mov
loope
pop
mov
xchg
stos
mov
xchg
cmp
shl
xchg
loopne
fldt
orl
push
jmp
adc
lods
lret
shrb
jb
dec
mov
das
cmp
insb
jg
lods
xchg
lret
cmp
pop
lcall
and
sbb
scas
cmpsb
add
flds
push
sub
ljmp
jl
ds
out
mov
cltd
sti
loop
aad
cwtl
insb
push
xor
and
and
pop
scas
pop
push
lods
cwtl
insb
loopne
in
xchg
adc
jbe
stos
aaa
xor
sub
popf
ljmp
lret
in
inc
shll
and
fnstsw
xchg
xor
js
pop
ret
push
sbb
hlt
aam
fistpll
cmpsl
pop
popa
mov
dec
mov
rcl
sbb
adc
dec
fwait
push
and
clc
pop
scas
mov
mov
repz
std
scas
jnp
mov
aam
mov
iret
dec
xlat
iret
pop
lcall
push
stc
outsl
dec
hlt
jns
in
hlt
cmp
dec
and
pushl
xor
or
repnz
mov
call
icebp
jne
xor
fimuls
xor
fwait
popa
ss
adc
orl
fldl
or
or
adc
pop
cs
mov
fidivrs
ret
ljmp
stos
and
loope
jns
cld
nop
push
cmp
ficoms
clc
jg
out
and
rcl
inc
push
jge
mov
pop
sbb
xchg
lea
ljmp
and
lret
mov
lock
push
cmc
mov
pusha
mov
inc
jle
orb
inc
mov
mov
loop
imul
cmp
push
add
pop
cmp
cmp
and
dec
mov
push
mov
push
out
ret
mov
icebp
mov
iret
or
lods
out
incb
xor
sub
subl
lods
bound
fs
ss
jo
mov
sbb
popa
jo
enter
add
repz
jae
mov
ds
in
nop
fnstsw
sti
loope
jl
adc
pop
into
rorl
inc
das
ljmp
jnp
mov
in
notb
ljmp
rsm
pop
push
push
sbb
jmp
and
jbe
ret
in
push
mov
arpl
arpl
outsl
adcl
push
cmp
sti
mov
stc
sub
iret
and
mov
psubsw
add
push
das
lahf
push
inc
mov
in
mov
movsb
stos
data16
xchg
mov
sti
out
sbbb
add
xchg
and
test
insl
or
jmp
int
and
adcb
pushf
rcrl
gs
push
mov
sub
lods
jmp
insl
test
movsl
aam
out
lahf
cltd
test
mov
dec
sub
stos
xchg
scas
jae
in
mov
mov
mov
jae
inc
std
jl
sub
push
mov
inc
movsl
lods
scas
lcall
pop
scas
test
aas
iret
xor
aas
outsb
lcall
cld
sbbb
xchg
push
and
pop
mov
pop
pop
js
addr16
mov
cld
das
sbb
add
insl
dec
out
cmpsb
xor
addr16
mov
dec
cli
in
popa
xor
xchg
and
mov
clc
pop
in
xchg
or
jge
xchg
pop
push
adc
inc
test
mov
sbb
cmpsl
addl
inc
std
test
lret
add
mov
jbe
out
adc
pop
movsb
movsl
mov
jp
or
lods
inc
mov
adc
in
and
sarb
or
sar
addr16
pusha
xchg
in
xchg
repz
dec
push
cmp
in
enter
sbb
lods
inc
pop
mov
push
jae
jae
xor
cmp
aam
cltd
lcall
pop
xor
mov
rorb
mov
mov
gs
cmpsl
xchg
mov
push
dec
inc
mov
sub
outsl
fcoms
inc
mov
sub
in
nop
push
adc
popf
cld
cmp
gs
imul
outsl
outsb
insb
dec
bound
sbb
imul
adc
pop
cmp
repnz
nop
in
xchg
in
sub
xor
das
inc
jb
xlat
jns
cmp
sbb
mov
out
and
mov
pop
rorb
jmp
sub
insb
ljmp
repnz
in
hlt
iret
les
rclb
sarb
push
jae
loope
fisubs
clc
add
add
and
mov
ja
push
dec
stos
inc
fiadds
pop
push
iret
xchg
xchg
repnz
xchg
mov
inc
es
cmpsl
push
mov
fsubrs
cwtl
sti
in
mov
xchg
mov
arpl
mov
pop
pop
aaa
pop
ret
add
sub
jp
cmp
outsb
push
pusha
sbb
cltd
call
icebp
pop
scas
mov
mov
movsb
imul
popa
cmp
fists
leave
pop
push
cli
dec
imul
jmp
push
mov
push
ja
add
je
test
jg
xor
xor
pop
inc
shrl
adc
cmp
mov
das
repz
lods
push
stc
dec
mov
pusha
xchg
mov
or
mov
add
pop
and
loop
lock
lret
and
and
lods
push
sub
lret
pop
mov
cmpsl
jno
adc
js
scas
jb,pt
fisubs
cmp
dec
xchg
xchg
mov
adc
add
ficompl
mov
into
push
adc
fcmovnb
shll
outsb
jae
cmp
add
adc
insl
shlb
insl
cwtl
xchg
adc
mov
lahf
xor
sbb
push
pop
push
shrb
subl
jecxz
mov
adc
cld
inc
jl
push
stc
adc
xchg
cmc
mov
insl
mov
xchg
and
fmull
js
xor
test
and
mov
call
sbb
loopne
mov
jg
mov
jnp
sbb
stc
daa
and
cmp
pop
xchg
mov
out
and
sub
sti
adc
ret
or
mov
ds
pushf
dec
add
call
fistpll
xorb
inc
mov
testl
adcl
jecxz
mov
or
les
mov
jno
push
cmp
test
or
sub
jb
shll
and
out
xor
mov
lea
out
pop
jbe
push
mov
imul
pop
mov
mov
cmp
inc
mov
xchg
lods
mov
mov
sbbb
ficompl
xchg
js
or
and
aas
pop
sbb
add
or
add
js
sbb
cltd
mov
dec
mov
cmp
insb
add
notl
mov
aaa
leave
ljmp
and
mov
cli
xor
sbb
mov
aam
jg
xchg
in
jecxz
mov
das
add
sbb
jp
jg
hlt
jle
pop
mov
cmc
cmp
nop
cmc
div
out
enter
sbb
lock
jle
inc
sarl
lahf
inc
in
mov
mov
pop
ljmp
jecxz
rorb
imul
mov
mov
sbb
and
mov
adc
jne
pop
or
in
cs
mov
cmp
push
xchg
jb
mov
inc
or
movsb
das
aam
mov
cmp
mov
push
rclb
mov
insb
add
call
fdivrs
icebp
jne
daa
lret
rcll
popa
lods
jmp
adc
mov
xor
test
fstl
adc
lea
inc
push
pop
mov
mov
scas
xor
dec
out
dec
adc
insb
push
insb
pop
es
clc
int
mov
inc
and
ret
popf
or
pop
insb
cmp
cs
inc
push
jno
bound
cmp
mov
inc
xor
mov
ret
pusha
aas
dec
sarb
inc
xor
sbb
xchg
jno
mov
dec
shr
test
xor
lahf
mov
nop
jns
cmp
loopne
jbe
loopne
xchg
dec
push
inc
repnz
push
push
sahf
popf
xchg
xchg
stc
jb
pop
cmp
lock
rcrl
cmp
jle
add
lds
sbb
jno
loopne
lret
sahf
mov
js
xchg
xor
and
movsl
mov
cmpsb
lea
scas
mov
imull
imul
xchg
jo
dec
addr16
mov
adcl
sbb
in
inc
mov
dec
inc
test
inc
pusha
mov
je
sbb
and
lods
out
dec
mov
aas
pop
adc
nop
leave
aaa
inc
push
fistpll
inc
and
dec
push
xor
mov
pop
pop
icebp
repz
imul
pop
mov
nop
xlat
or
call
mov
push
adc
pop
push
add
push
pop
scas
into
jns
fs
fwait
les
sahf
mov
mov
push
call
and
xchg
fsubrl
mov
test
icebp
repz
inc
ret
jns
loop
int
rolb
pop
shl
aad
fldt
lea
repz
lcall
cmp
adc
sti
mov
and
and
adc
cmc
imul
test
cli
dec
aas
dec
shrl
inc
add
cmp
push
sbb
jl
mov
pop
lcall
in
add
js
imul
fwait
testl
inc
push
push
fwait
cmpsl
xchg
dec
in
addr16
pop
sbb
arpl
fimuls
jb
lock
mov
sbb
popa
loop
cmp
movsl
fcmovu
xlat
pop
in
and
jge
aad
or
xor
cmpsb
imul
fisttps
dec
fadds
mov
cmp
lods
xchg
add
std
push
lret
lret
rol
scas
out
int
pop
scas
jbe
add
les
mov
pop
std
or
pusha
push
mov
mov
pop
or
cmpsb
aad
push
lds
sub
lret
mov
jl
sbb
imul
mov
test
addr16
mov
iret
mov
mov
movsl
xchg
roll
xchg
push
dec
mov
dec
fisttpll
or
jmp
sahf
or
das
push
clc
cwtl
add
or
jp
sahf
ds
mov
adc
jne
inc
testl
out
test
xor
xchg
es
lods
or
add
in
xchg
dec
emms
xor
arpl
rcrb
push
pop
sub
mov
sub
insl
sbb
xor
in
sti
sbb
std
push
sub
div
push
or
sar
mov
push
lods
pop
cmp
aaa
fwait
and
cli
cmp
call
mov
cli
popf
stc
mov
or
in
xlat
gs
aad
mov
stos
nop
popa
movsb
xor
repz
sti
dec
sahf
dec
or
test
imul
and
adc
in
leave
xchg
dec
mov
xor
pusha
sbb
scas
mov
lds
cli
dec
mov
adc
adc
fwait
push
int3
jg
out
leave
sub
mov
dec
daa
or
cs
adc
movsl
and
icebp
sbb
jno
push
sti
lahf
mov
repnz
gs
aam
mov
pusha
or
mov
xor
lret
push
sub
xchg
dec
add
push
dec
inc
scas
js
mov
add
mov
or
lock
movsl
inc
mov
jns
shll
dec
pop
xchg
sarb
shrb
daa
lret
sub
std
pop
mov
push
lods
push
and
sbbl
adc
ret
jge
aas
xchg
inc
test
rolb
fisubs
pop
adc
sbb
fdivrp
insb
fs
jl
shrb
add
es
stos
push
fsubrl
mov
xchg
adc
dec
inc
xor
adc
and
pop
movb
add
sub
push
loope
pushf
rolb
pop
popf
test
rol
fidivs
outsb
mov
xorb
jne
push
pop
sbb
fwait
mov
cmp
mov
aam
nop
movsb
push
daa
shl
xor
fxch
mov
insl
aaa
cwtl
sub
xor
or
leavew
pop
mov
scas
bound
sub
cmp
out
cmc
test
cmpsl
sbb
jmp
push
repnz
pop
enter
loop
iret
aam
stos
inc
gs
mov
cmp
jg
jns
fistl
xchg
out
mov
call
xchg
lcall
andb
mov
push
rcrl
push
mov
fiaddl
iret
ret
mov
push
xor
cmp
sub
mov
adc
sbb
shrb
lds
imul
push
mov
stc
jg
insb
dec
mov
gs
cs
roll
test
imulb
and
aam
aam
lret
popa
fnstcw
stos
push
jnp
rcr
test
dec
in
add
adc
push
add
incl
enter
scas
imul
leave
inc
mov
and
xor
adc
fisubl
mov
jp
mov
notl
mov
in
xchg
dec
test
cltd
cmp
out
dec
mov
and
pop
push
xchg
jecxz
fstp
pop
psubb
bound
cmp
clc
shl
jno
rcll
cmp
xchg
lods
fists
lcall
xchg
fisttpl
and
aas
jg
bound
das
pop
mov
cltd
shl
imul
add
xchg
jae
add
mov
lret
adc
pop
imul
add
notl
std
fcomi
ljmp
int3
imul
pop
jb
xlat
outsl
and
cmpsb
jb
jp
cwtl
repz
stc
enter
mov
adc
insb
cmp
shr
loop
jnp
dec
sarl
out
jge
adc
inc
cmp
shrl
dec
mov
scas
inc
popa
xchg
insl
push
fcompl
mov
jge
mov
ret
push
add
aaa
sub
jmp
int3
js
jmp
fadds
jae
ret
orb
lods
jo
or
dec
push
es
shll
mov
popa
daa
jl
clc
mov
lcall
hlt
xchg
inc
ds
hlt
sbb
xchg
push
jecxz
movsb
dec
sub
xor
adc
lret
pusha
push
cmp
lock
int3
inc
push
jnp
or
sbb
add
mov
cmp
xchg
leave
insb
movb
mov
in
mov
lahf
xchg
cmp
mov
jmp
mov
or
subb
sbb
push
xlat
gs
inc
ficoml
and
push
add
xchg
clc
mov
mov
icebp
pop
push
sub
jae
and
mov
inc
pop
dec
imul
in
xchg
in
mov
inc
andb
push
push
aad
and
xchg
and
adc
test
faddl
push
mov
add
adc
mov
int
jg
arpl
add
popf
negb
shrl
inc
and
inc
in
fnstsw
popf
mov
mov
insb
mov
jo
and
out
jo
das
mov
insb
int3
jo
add
adc
inc
inc
insb
ljmp
rcrb
and
aam
mov
add
sahf
sub
pop
sarb
lcall
mov
push
mov
clc
or
xor
add
out
pop
xor
mov
xchg
add
jbe
mov
icebp
xor
hlt
int3
inc
sbb
imul
int
gs
idivl
fldcw
and
lock
movsb
fnstenv
in
adc
popa
orb
lea
adc
adc
ja
pop
pop
addr16
cmovle
fcomps
fldenv
loopne
xchg
pop
add
jecxz
stos
push
inc
mov
leave
dec
nop
push
out
loop
and
popa
dec
push
fcomps
test
push
out
shll
push
loopne
aam
mov
cli
adc
sbb
push
cs
jle
out
insl
sbb
mov
out
std
ret
test
mov
mulps
sbb
aas
shrb
cmp
sbb
daa
and
or
lcall
out
dec
mov
repz
scas
cmp
jnp
jl
sbbl
add
dec
outsb
scas
mov
add
adc
std
pop
add
in
movsl
cmpsl
mov
push
or
push
push
call
xchg
add
or
pushf
fnstcw
push
sbb
xchg
push
or
ret
inc
push
cmpsb
add
cmp
mov
loope
xlat
mov
and
push
jecxz
sbb
cmp
xor
hlt
repnz
xchg
lods
popf
sub
or
es
push
sbb
mov
nop
rdtsc
sti
testb
hlt
icebp
sbb
ja
outsl
movsl
dec
or
push
cmpsl
xchg
daa
cmp
and
dec
dec
lcall
test
rcrb
xchg
imul
pusha
stos
cld
repnz
iret
jns
out
loope
cmp
test
ss
push
jno
mov
cltd
enter
fcoms
add
lcall
sar
jmp
inc
push
je
aaa
outsb
insl
les
aaa
outsb
bound
and
add
sub
push
sub
mov
pop
enter
inc
sbbl
pop
push
daa
in
ds
pusha
fistpl
dec
xchg
cmp
sti
or
pushf
outsl
xor
fcompl
cmpsl
ret
adc
cmpsl
jbe
inc
xor
cmp
add
push
not
push
cmpsl
test
cmp
cmp
movsl
cs
cmp
adc
xchg
fbstp
fstpt
xchg
pop
jae
stc
inc
jg
sub
sub
rdmsr
jg
and
add
push
aas
add
movsb
push
mov
fld
and
not
push
imulb
lcall
adc
sbb
mov
std
pushf
inc
jp
and
fists
dec
stos
add
popf
sbb
ds
stos
sbb
popf
xor
mov
lcall
xchg
push
in
jo
pop
xor
sahf
xor
adc
inc
xor
cmp
mov
cmp
orb
push
in
sbb
jne
adc
mov
or
outsl
sti
dec
push
xchg
and
ss
xchg
jnp
dec
mov
pushf
stos
xor
je
cs
adc
push
cmpb
jp
ljmp
xchg
inc
test
cmp
test
mov
stc
pop
roll
pop
into
addl
call
jg
and
xchg
test
mov
or
and
sub
stos
popa
adc
mov
in
xor
mov
mov
outsb
push
cmc
loopne
pop
flds
mov
lea
shll
adc
sbbb
popa
dec
mov
icebp
inc
mov
or
adc
mov
add
popa
jns
test
std
mov
cmp
pop
out
iret
test
inc
fucomp
pop
xor
lret
test
push
sarl
cmp
lret
inc
ja
icebp
outsb
in
pop
sbb
rcr
aaa
or
es
sub
xchg
out
push
cwtl
fadds
ret
cmp
stos
inc
fsubrs
rol
sbb
dec
cli
movsl
into
pop
test
into
pop
mov
cmp
jecxz
es
std
rorl
pop
push
pop
aas
lds
nop
pop
mov
sub
andl
nop
fisubs
mov
addr16
adc
std
lcall
push
sub
arpl
movl
push
mov
and
push
out
les
or
jno
inc
and
in
sbb
ljmp
adc
lods
test
cmpl
dec
sbb
dec
sbb
mov
pop
mov
mov
or
mov
adc
xchg
mov
pop
inc
test
or
adc
loope
mov
jno
xor
test
iret
xor
push
fistl
sbb
sarb
aad
cmpsb
jecxz
icebp
pop
add
lods
mov
aaa
std
dec
mov
xor
lock
sbb
mov
jnp
fwait
imul
mov
inc
jno
xor
andb
fwait
test
lds
sub
xchg
dec
pop
push
loop
fdecstp
sbb
lods
add
imul
repz
nop
scas
adc
cmpsb
push
ret
xchg
jp
xchg
cltd
dec
cwtl
sub
mov
and
xchg
push
iret
dec
xchg
push
mov
and
fxch
in
inc
jbe
xchg
data16
aas
fsts
andb
sub
xor
out
or
test
scas
les
sub
xlat
mov
inc
sbb
mov
test
addb
mov
roll
sub
filds
sbb
fyl2x
aaa
movsb
mul
mov
sbb
xor
mov
add
sbb
xchg
xchg
sbb
xchg
xchg
sbbl
das
arpl
lret
jnp
lock
cs
jae
in
xchg
sbb
int
cmp
mov
xchg
enter
les
iret
push
ljmp
sbb
or
add
cmp
test
int3
out
xchg
icebp
mov
dec
and
jno
add
sbb
cmpsl
dec
xor
out
repz
ret
mov
sub
jecxz
mov
das
sti
out
cwtl
adc
stos
pop
inc
inc
cwtl
into
push
fmul
cmc
stos
push
in
pop
push
adc
mov
sarb
pop
ficoms
pop
es
bound
mov
testl
xchg
cmpsl
pushf
or
je
leave
xor
repnz
dec
xchg
hlt
add
inc
movups
mov
mov
jae
adc
push
or
lock
jp
cld
and
push
dec
and
sbb
test
cmp
or
lret
or
and
repz
jmp
dec
out
jg
adc
or
and
lock
mov
push
and
mov
shlb
add
xor
lock
push
adc
leave
call
ret
out
negw
and
rolb
enter
loopne
icebp
jbe
pop
add
dec
orps
mov
dec
add
data16
inc
and
mov
outsl
dec
clc
test
cmpsb
aas
movsb
sbb
pop
movsl
ss
mov
xorb
sub
cmp
mov
or
rcrb
mov
je
xchg
dec
xor
cmc
cli
addl
cmp
sbb
push
lock
aas
das
inc
sbb
sub
sbb
lcall
jge
or
movsb
out
mov
inc
test
scas
pop
pop
loop
sub
mov
mov
jns
push
xchg
je
adc
sahf
or
or
sbb
fcoml
jns
outsl
mov
mov
pop
rcrb
fs
pop
sub
movsl
stos
inc
sahf
adc
dec
inc
js
mov
adc
pusha
les
dec
jle
xchg
and
lods
insl
lcall
add
sbb
out
xor
jns
inc
icebp
or
adc
scas
sarb
mov
fidivrl
sbb
adc
cltd
pop
mov
in
mov
cld
fwait
mov
pusha
jno
pushf
icebp
aam
dec
scas
ljmpw
popa
popf
dec
icebp
pop
dec
mov
push
inc
fwait
pushf
fwait
fwait
pop
xchg
lods
dec
and
andb
stos
fstpt
dec
mov
mov
inc
mov
ss
jle
dec
xchg
mov
jg
filds
xorl
mov
call
loop
sbb
lcall
aam
cmp
pop
push
sub
into
loop
dec
mov
cmpsl
int3
aam
add
adc
mov
sub
push
stos
mov
xor
sub
sub
sbb
enter
fcomps
iret
cmc
lahf
inc
pop
jb
stc
mov
sub
fsubr
rorl
add
mov
add
mov
dec
mov
shl
incl
cmp
aad
gs
insl
fstpt
aad
fdivs
movsb
push
mov
pop
inc
sbb
jbe
pop
cmp
mulb
pop
sbb
addb
or
sarl
gs
mov
pop
adc
pop
mov
mov
push
test
enter
sbb
pop
xchg
jg
clc
int
sbb
mov
sahf
inc
mov
fwait
dec
dec
push
cltd
push
push
cmpsl
mov
imul
xor
lret
nop
mov
test
mov
mov
stos
mov
in
xchg
xor
add
xchg
mov
mov
roll
fwait
idivb
add
cmp
cmp
push
icebp
xor
fiadds
push
dec
xchg
push
insl
out
add
xchg
jl
fmul
mov
test
xchg
lcall
cmp
mov
sahf
jae
pop
xchg
xchg
pop
sbb
mov
popf
xchg
das
in
adc
sbb
test
decb
stc
mov
ljmp
std
test
pushl
mov
adc
loop
xchg
xchg
mov
das
outsl
inc
rorb
rcll
icebp
inc
pop
adc
or
mov
adc
mov
cli
push
stc
sub
sbb
js
repnz
mov
cltd
push
shrb
jb
rolb
test
lret
mov
xor
sbb
std
fsubr
idivl
jl
xchg
cltd
xchg
or
notl
add
pusha
ffreep
shr
ljmp
xchg
pop
fidivl
adc
out
sbb
movsb
pusha
lods
outsl
ja
ja
sbb
xchg
scas
push
pop
push
sahf
rcll
sub
inc
out
mov
sti
mov
push
xor
ja
push
shl
sbb
cmp
ja
in
jl
mov
push
push
xchg
mov
fsincos
lea
loopne
outsb
pop
fidivs
adc
mov
adc
push
dec
sahf
cmp
cmp
adc
inc
out
aam
adc
mov
js
cmp
out
mov
lods
imul
fs
mov
stos
jae,pn
ficoms
loopne
mov
add
mov
pop
jbe
mov
or
sbb
xchg
cmc
gs
fimull
xchg
stos
and
enter
insl
les
ficompl
pop
stc
dec
subl
dec
aad
addr16
sahf
sbb
xor
out
fadd
gs
xchg
mov
fldln2
clc
mov
sbb
adc
adc
loope
xor
push
rolb
mov
mov
aas
or
test
roll
shl
push
and
dec
xor
sbbl
dec
mov
loop
into
popf
popa
neg
sbb
push
fs
sbb
lods
and
add
test
cs
mov
cmp
fstpt
daa
jbe
stc
cmpl
sti
ret
adc
fsubl
push
bnd
push
xchg
insl
mov
fcoml
fisubs
clc
out
pop
fstpt
outsl
fmul
sbb
adc
imul
sbb
vpunpcklbw
adc
lret
movsb
stos
mov
jmp
lret
and
enter
pusha
cs
scas
sub
sbb
movsl
xor
xchg
ret
push
lods
adc
jecxz
adc
jno
cmpsb
in
notb
inc
xchg
or
push
loopne
push
pop
inc
xor
clc
or
psubd
ja
or
fcoms
inc
popf
and
and
mov
enter
test
jl
inc
aad
pusha
ds
notl
ljmp
in
dec
mov
inc
imul
imul
lcall
mov
sub
loop
cmp
mov
and
mov
sub
out
cmp
adc
fwait
dec
idiv
stos
xchg
jle
mov
jo,pn
pop
mov
sarl
repnz
cmp
inc
mov
jle
push
add
mov
and
ret
mov
sub
das
xchg
xor
mov
stc
pusha
icebp
std
repz
xor
mov
hlt
hlt
xchg
mov
nopl
roll
lea
cwtl
test
dec
fwait
sbb
fsubs
je
mov
xchg
mov
xor
je
lock
pusha
lock
mov
and
push
add
pop
push
push
xlat
add
aaa
cld
ss
ljmp
incl
rcrl
repz
cld
jns
dec
inc
sub
bound
out
sbb
push
inc
in
in
cmp
xlat
xchg
or
sub
inc
sub
inc
fisttpll
shr
xor
adc
sbb
into
jmp
repz
shrl
push
mov
mov
cmpsb
pop
cltd
mov
dec
into
pop
bswap
and
mov
test
add
mulb
add
push
sbb
xchg
jbe
pop
repnz
adc
cmp
clc
sahf
outsl
imul
popf
loop
cs
fnstenv
xchg
mov
fstps
dec
mov
cld
mov
test
lods
adc
push
xchg
sub
dec
pop
mov
push
pop
insl
daa
ret
adc
pop
jb
rolb
jmp
rolb
adc
sub
sub
dec
xorl
sbb
xor
addl
outsb
dec
jb
dec
or
push
or
imul
add
push
cs
dec
cltd
push
cmp
xchg
push
cmp
lock
xchg
jns
int
imul
xchg
fsubl
das
cltd
fucomip
inc
xor
bound
sbb
push
mov
cli
aad
and
outsl
sti
cld
imul
fbstp
imul
push
into
or
je
jmp
jne
add
cmp
jp
in
cwtl
shll
sbb
push
jne
xchg
mov
rdpmc
push
xchg
cmp
push
cmp
shl
sbb
gs
cwtl
cmp
push
mov
pop
push
stos
bound
or
jo
mov
xchg
and
cmp
lcall
cld
and
jl
ds
test
adcl
mov
sbb
int3
add
js
sbbb
dec
fwait
xchg
cmp
inc
or
jp
mov
sub
pop
or
aam
mov
mov
std
scas
mov
in
mov
xchg
repnz
repnz
mov
jae
bound
sub
jae
dec
cmp
ds
inc
into
xchg
mov
push
out
je
pop
xchg
sub
sub
and
test
push
stc
loop
ljmp
ficompl
cwtl
or
mov
xor
scas
in
fstpt
xchg
enter
adc
dec
sub
push
and
leave
sahf
pop
out
push
and
xorb
pushl
xor
andl
xchg
ror
daa
loop
sub
popa
clc
int
shll
xchg
and
stos
pusha
in
mov
cmp
xor
lret
int3
inc
fisubrs
aas
arpl
pop
stos
sbb
adc
cmp
add
pop
pop
or
loopne
push
add
cmpsb
int3
lods
xchg
cmc
xor
lcall
push
cmp
std
xor
mov
jp
sbb
call
jle
mov
dec
in
stc
xor
ds
std
add
pop
push
jbe
test
or
adc
xor
testl
pop
sbb
int3
rclb
fdivrs
mov
int3
xor
fnstsw
jns
je
or
pop
cmp
mov
jg
mov
mov
xlat
cmpb
jne
or
xchg
outsl
cmpb
sub
lock
mov
ss
lret
notb
ds
jb
fnstsw
add
and
xor
jno
and
jecxz
pop
jns
lcall
xchg
adc
dec
push
cmp
icebp
sub
pop
shr
push
xchg
push
in
rcrl
gs
push
jmp
push
aas
pop
xchg
iret
sub
push
adc
fnstenv
xor
stos
cmpsl
push
jbe
mov
xor
xorb
jl
mov
inc
xchg
push
mov
sbb
rol
pop
jb
rcrl
shrl
pop
pushf
mov
xor
nopl
or
ficoms
jmp
push
sarl
jo
movsl
out
mov
or
push
rorl
jns
popa
lcall
mov
xchg
sbb
inc
hlt
icebp
lret
dec
ljmp
jae
add
cmc
jg
pop
xor
cwtl
sbb
jbe
scas
pop
mov
icebp
or
scas
sub
cmp
jmp
xchg
stos
mov
loopew
lods
dec
mov
jmp
push
test
mov
xchg
jle
jg
cmp
cmp
cmpsb
fstl
repz
push
lahf
jg
cltd
jb
jnp
pop
cmp
push
xchg
in
shlb
shll
mov
adc
out
xchg
mov
push
imul
and
cmpsl
jbe
ja
test
mov
push
rcrl
mov
fmull
loope
or
mov
jnp
call
xor
fcomps
or
fsubs
adc
mov
mov
arpl
dec
es
adc
fldt
insl
mov
jge
xchg
mov
lret
lcall
inc
pop
xchg
or
sbb
dec
nop
inc
dec
xchg
data16
outsl
sbb
xchg
sar
in
inc
push
bound
and
lock
je
int
sub
xor
dec
add
cmp
and
inc
dec
fists
mov
push
clc
pop
iret
imul
loope
std
push
std
jo
stos
scas
jb
mov
data16
jmp
movl
out
xor
inc
pop
repnz
sbb
hlt
mov
cmp
sti
jp
adcl
or
add
fcmovnbe
out
mov
mov
fwait
and
outsb
push
xchg
sbb
int3
shl
arpl
push
mov
adc
mov
dec
lahf
ror
xor
daa
lahf
jbe
xlat
mov
movsl
ret
xor
dec
dec
pop
ja
or
mov
inc
jnp
pop
mov
repz
add
jmp
and
mov
push
out
aad
dec
sub
cltd
clc
addr16
mov
fwait
aaa
psubd
and
xor
push
mov
roll
push
out
xchg
push
movsl
jmp
push
loopne
mov
mov
int3
pop
mov
std
leave
loop
pop
cs
rolb
test
or
jg
sub
dec
jecxz
ja
cmp
cmpsb
jo
add
push
mov
jmp
or
aaa
and
xor
mov
jmp
test
ret
sti
icebp
xchg
cmpl
out
jp
jg
jge
jne
jg,pn
pop
scas
and
decl
inc
fwait
xor
mov
out
sub
mov
sbb
xchg
mov
push
cwtl
lret
imul
xor
imul
mov
pop
ds
adc
pushf
das
cld
adc
mov
das
ds
out
aaa
push
ss
lea
repnz
xchg
jnp
xchg
add
fldcw
test
cmp
daa
cmp
js
fwait
out
daa
cld
mov
xchg
adc
ret
and
loop
mov
add
cmp
mov
sub
push
or
movsl
lahf
out
xor
xchg
sti
xor
xchg
xchg
outsl
test
mov
fstpl
push
mov
push
lcall
sahf
in
adc
sbbl
sbb
outsl
scas
mov
stos
cmc
cmp
adc
push
pop
cltd
or
das
shrl
mov
mov
mov
sub
mov
inc
ret
inc
call
mov
adc
ss
mov
pop
ss
stos
mov
flds
mov
cmp
sub
xchg
cli
or
insl
es
enter
add
aad
in
jle
sub
dec
xor
shll
xchg
inc
pop
sti
rcrl
into
or
sub
push
and
out
sbb
mov
icebp
mov
xchg
sub
or
inc
ss
mov
inc
xchg
mov
sbb
cmpsl
into
sub
shll
cmpsb
adc
jmp
stos
mov
mov
pop
int3
jne
jne
or
inc
outsb
ret
cld
mov
and
inc
mov
push
iret
add
paddd
sbb
faddl
stos
test
insb
xchg
ret
cmpsb
cmpsl
pop
xorb
mov
icebp
mov
test
jp
lea
pop
jns
cmp
call
pop
mov
pop
inc
test
push
fwait
mov
pop
clc
mov
push
mov
push
adc
in
loopne
pop
clc
ljmp
or
fdivrl
scas
ss
pop
nop
add
mov
push
pop
std
aad
hlt
jnp
mov
stc
or
je
sti
loop
mov
fildl
sbb
popa
rorl
les
sub
push
fistps
ret
scas
movsl
jle
mov
xlat
push
or
or
js
mov
xchg
jecxz
push
jmp
dec
imul
push
js
xchg
outsb
xor
mov
cmp
inc
in
popa
jmp
adc
sbb
or
sub
loop
push
jo
insb
mov
dec
lcall
lods
xor
aam
inc
sub
cld
sbb
cmp
mov
push
fwait
int3
mov
ds
test
cltd
push
mov
test
mov
daa
stc
iret
sbb
shrl
sbb
jecxz
jmp
popa
mov
loopne
dec
ret
int
je
lea
mov
adc
adc
fildll
shrb
fidivrs
pushf
cli
xchg
or
sahf
popf
call
sbb
mov
cli
dec
loope
cmp
jge
test
shll
fistpl
push
je
mov
stc
in
inc
xor
xor
xchg
dec
into
push
cltd
enter
mov
mov
ret
pop
push
pop
clc
mov
scas
loope
add
mov
lcall
xchg
lret
mov
jo
adc
mov
sbb
clc
cmp
jno
pushf
testb
nop
mov
ds
xchg
cmp
push
jae
mov
xchg
sbb
add
mov
add
cmc
clc
jne
sbb
mov
add
and
rcl
adc
jno
mov
add
mov
push
jb
xor
push
and
test
mov
push
adc
mov
negl
fmuls
enter
aad
clc
add
mov
imul
ja
stos
les
push
xor
push
outsl
cmp
out
dec
mov
mov
mov
jne
inc
fmull
in
mov
lock
out
xchg
pop
mov
cli
test
lea
je
xchg
test
into
insl
or
cmp
xchg
dec
lock
or
mov
cltd
in
sbb
rcr
cmpsb
cmpsb
sbb
lret
fadds
mov
pop
and
adc
push
or
in
arpl
jl
ret
mov
fdivl
inc
fstp
sarb
jg
adc
sub
xchg
insb
hlt
bound
add
mov
or
fcomps
stos
cli
jmp
mov
pop
cmc
pop
lahf
and
sub
outsb
loope
jle
mov
mov
js
fisubl
jo
inc
scas
mov
mov
aaa
and
sub
cmp
jno
rolb
lret
cli
dec
out
lods
xor
in
mov
cmp
pop
enter
iret
fdivrs
push
movsl
sbb
jne
in
jb
and
cwtl
mov
ljmp
sub
jbe
jnp
scas
ss
jns
xchg
mov
dec
std
lret
push
in
cmp
in
mov
push
imul
mov
mov
fxch
pop
aas
popf
push
sub
into
cmc
xsave
mov
sbb
push
mov
dec
faddl
std
jns
pop
mov
and
aas
iret
fistpll
clc
lods
lea
cld
jge
dec
repz
repz
push
repz
test
in
mov
sub
lret
xchg
add
mov
and
cmp
fidivrs
dec
in
rcrl
jmp
push
popf
lods
mov
cmp
dec
out
fistps
insb
scas
jp
jp
push
mov
xor
or
rorb
imul
shl
add
icebp
jl
jno
mov
movsb
or
adc
mov
jae
jmp
aaa
gs
shll
push
add
inc
sti
aad
pop
cli
sub
adc
popf
or
lods
icebp
xlat
cmpsb
shll
mov
inc
jbe
sbb
imul
scas
mov
or
outsb
push
negb
jns
fs
clc
inc
jge
in
mov
in
stos
iret
and
loop
sbb
adc
loopne
and
pop
mov
cmpl
sub
dec
orl
jp
mov
cmpsl
pop
arpl
cmp
shr
jb
sahf
cmpsl
mov
push
xchg
xor
imul
xchg
testb
xchg
scas
adc
cli
sarb
and
aad
sbb
mov
mov
jmp
aas
incb
bound
sub
add
push
rclb
xchg
push
add
or
dec
cmp
adc
push
lds
cwtl
adc
je
mov
sbb
orb
pop
rclb
sub
xchg
rorb
mov
jl
mov
and
mov
loop
add
test
fimuls
sbb
mov
mov
add
pop
dec
mov
movsl
les
sub
xchg
adcl
cltd
mov
pop
mov
into
pop
ret
pop
stc
jo
movsb
add
inc
scas
pop
rorb
mov
and
xchg
stos
movsl
adc
push
mov
outsl
loope
stos
lods
push
repnz
push
ds
dec
dec
push
aas
xor
jp
pop
or
mov
jnp
push
xor
es
xchg
xor
jnp
mov
in
icebp
xlat
add
scas
inc
sbb
cmpsb
shufps
dec
and
nop
add
out
lock
mov
inc
sahf
out
roll
pop
mov
mov
and
sarl
jb
push
fadd
adc
cmp
mov
fisttpl
dec
ror
je
adc
cmp
mov
push
adc
arpl
add
and
not
mov
jb
stc
outsb
mov
adc
mov
jbe
push
adc
in
push
pusha
addr16
cmpsl
aad
icebp
gs
jle
lcall
xor
pusha
into
add
xchg
sub
in
dec
into
subl
gs
push
mov
adc
jl
daa
inc
fucom
pop
sbb
adc
arpl
cmp
mov
add
ret
notl
mov
lock
xchg
sub
jl
test
jmp
jmp
leave
fdivrs
push
push
xor
dec
adc
jo
ret
mov
inc
mov
loop
fcmovb
insb
pop
scas
sahf
fiadds
in
inc
add
repnz
test
lods
outsb
rorb
hlt
cmpsb
mov
mov
popa
hlt
shlb
lret
push
jecxz
xchg
mov
inc
cmp
cmp
std
add
mov
lods
pop
clc
test
pop
hlt
pop
sub
stc
clc
add
test
mov
xchg
mov
cmp
imull
add
fcompl
loope
sub
mov
enter
add
sub
aad
jb
and
push
cmp
sbb
lahf
rclb
push
mov
in
mov
pop
sbb
aam
xorb
fimuls
and
jbe
or
aaa
xchg
push
aaa
adc
aad
sbb
pop
add
mov
andl
adc
dec
add
mov
shl
dec
scas
push
or
or
mov
mov
ret
jnp
fists
mov
ljmp
ret
das
jle
push
inc
int
popl
pusha
push
inc
fsubl
popa
and
in
cs
fwait
mov
add
xchg
and
ja
ret
adc
adc
stc
not
mov
jo
inc
and
inc
lcall
inc
push
mov
mov
push
ds
cmc
jle
xlat
out
stos
es
or
or
in
or
popa
movsb
rol
inc
inc
push
aad
inc
fldcw
xchg
fdivrl
cmp
daa
push
cmp
jge
shlb
jb
inc
xor
sbb
adc
and
dec
jb
mov
xchg
ja
xor
js
pop
out
fs
rcr
or
aas
nop
sub
rclb
jecxz
push
mov
test
ud2
and
add
pop
mov
mov
adc
adc
aad
rcll
sub
leave
cwtl
push
cmp
add
pop
sahf
js
mov
xchg
movups
inc
dec
jb
ss
sahf
neg
jbe
icebp
fisubrl
aaa
shl
mov
js
rol
aam
push
test
in
add
inc
inc
cli
cmc
and
in
cld
cli
mov
std
mov
mov
jno
shlb
mov
mov
out
stos
mov
out
inc
cmp
and
jb
mov
cwtl
jp
push
gs
popa
icebp
xchg
push
mov
push
es
mov
repz
fistl
fidivrs
push
int3
test
aam
pop
push
pop
xchg
mov
push
push
mov
xchg
mov
pop
pop
ret
les
dec
dec
arpl
xor
sub
cmp
stc
nop
xchg
fistpl
dec
cmp
inc
push
in
mov
std
cld
and
shlb
xchg
mov
aam
std
cmpsl
iret
data16
dec
add
sub
lret
into
adc
jb
sahf
cmp
mov
and
ljmp
popf
ret
and
dec
mov
fiaddl
add
pop
mov
movsb
pusha
lret
shll
inc
cmp
sub
dec
scas
out
jecxz
fsub
icebp
push
sbbb
cltd
cmc
jg
inc
dec
outsb
outsb
fwait
pop
pop
adc
sub
dec
clc
das
addr16
jle
push
push
dec
pushl
cwtl
inc
aam
add
adc
sbb
sbb
fmul
aad
xor
or
push
ret
and
int3
pusha
xchg
xchg
lahf
push
xor
xchg
fs
mov
push
add
out
fisttpl
repnz
sub
mov
and
ljmp
inc
fucomp
fisubl
insl
addr16
push
jmp
xchg
pop
loope
mov
in
pop
fnstsw
add
cmp
sbb
and
mov
insl
cmp
lcall
sahf
mov
sbb
cmpsb
fdiv
jno
test
lahf
mov
daa
lret
pushl
mov
adc
and
or
lods
daa
adc
ret
addr16
mov
mov
jne,pt
aam
loopne
fadds
sbb
hlt
cmp
add
add
xor
cmp
cmp
mov
bound
hlt
jmp
lret
out
hlt
mov
mov
test
xchg
in
xchg
push
std
scas
lods
sar
xor
adc
adc
addl
push
push
mov
pusha
sub
gs
or
fwait
decb
in
scas
jbe
mov
push
fistps
cmpsl
add
sbb
stc
cli
arpl
and
sub
mov
lret
and
fistl
int
fwait
mov
int
add
mov
scas
jg
outsl
adc
jne
sti
mov
adc
ret
lea
or
add
cmp
adc
cmpb
mov
out
aam
mov
sti
mov
stos
or
sbb
dec
push
rorb
adc
aad
xchg
sub
loope
sbb
push
mov
pushf
add
and
inc
int3
and
pop
xchg
push
push
lret
gs
mov
xor
cmpsl
loop
insb
dec
sub
xchg
loopne
mov
mov
pop
js
into
mov
ja
jl
push
std
insl
xchg
push
push
clc
in
jo
jg,pt
mov
push
lcall
or
xchg
cwtl
fidivl
leave
xor
jae
js
mov
pop
xor
mov
and
mov
and
pusha
call
sbb
or
stos
sbb
inc
aad
std
adcl
call
test
pop
scas
add
jo
es
fisttps
test
lret
popa
test
mov
out
dec
xchg
inc
cli
mov
insb
pop
xchg
dec
sub
inc
xor
stos
jo
into
sti
mov
clc
sti
test
add
jnp
cmp
fdivr
mov
inc
hlt
mov
pop
dec
pop
rcrl
sbb
or
cltd
imul
leave
xor
xchg
pop
sub
hlt
inc
xor
jmp
mov
iret
outsl
aad
test
das
jno
xor
pop
sarw
push
push
mov
dec
cmp
xchg
mov
mov
jbe
popa
dec
scas
mov
sbb
and
lcall
dec
shl
cmp
repz
mov
adc
cltd
js
adc
pop
lahf
fnsave
inc
and
mov
cmp
repnz
jmp
stos
stos
inc
notb
mov
mov
add
dec
jp
sub
addl
jge
lret
cmp
cmp
cmp
cmpsl
mov
mov
mov
or
bound
xchg
xchg
ret
repz
sar
mov
stos
cld
inc
push
sbb
xor
imul
out
or
aad
icebp
repz
faddl
add
jbe
or
cmp
cwtl
repz
dec
or
mov
sbbl
sub
stos
lock
mov
je
pop
imul
pop
mov
imul
daa
scas
or
into
xor
sahf
cmpsb
idivl
mov
dec
inc
std
ljmp
inc
ret
pushf
hlt
lods
je
test
popf
adc
mov
or
xlat
xchg
pop
sub
sarl
vprotd
pop
or
mov
mull
cwtl
dec
jecxz
lahf
mov
iret
jns
jl
iret
cmp
sub
pop
xchg
and
add
sbb
inc
pop
xchg
sbb
dec
mov
cli
nop
cmpsl
in
repz
loope
repz
jo
sbb
push
jne
mov
xor
loopne
gs
mov
pop
jbe
cmp
adc
in
mov
mov
ror
mov
fsubs
add
add
jg
clc
jb
mov
sti
imul
bts
sbb
in
pop
mov
sbb
mov
cmp
sbb
xlat
and
in
cmpsb
cmp
cli
and
dec
out
aam
xor
jle
shlb
lds
push
cld
mov
aas
aam
xor
push
loopne
into
ljmp
xchg
mov
cwtl
shrl
add
xor
pop
push
cltd
ljmp
mov
test
icebp
pop
arpl
dec
aaa
rdpmc
in
xor
cmp
push
sub
daa
push
iret
sti
enter
jmp
imul
cmpsl
cmc
ja
mulb
fs
inc
test
stos
leave
jmp
inc
mov
cmp
push
loop
sub
mov
add
sbb
fsubp
icebp
ds
mov
mov
dec
adc
es
in
push
loope
mov
ja
jmp
test
and
xor
jns
push
dec
cwtl
iret
cltd
nop
test
mov
jbe
jg
mov
fnstenv
xor
pop
les
rorl
dec
push
pop
xchg
inc
jp
imul
shrb
sub
cmp
mov
dec
pop
hlt
prefetch
fdiv
fdivs
pop
movsb
mov
fcmovnbe
xorl
push
in
fs
icebp
xchg
roll
cltd
jmp
add
dec
call
lds
ja
jp
push
out
mov
cwtl
mov
cs
dec
pop
and
push
nop
ss
mov
cmpsb
jo
shrb
push
faddl
fstl
ljmp
inc
fcmove
pop
push
mov
pop
jmp
pop
ret
sub
pushf
xchg
out
je
cmp
stos
jp
adc
int
dec
inc
jmp
sub
ja
sub
sub
or
mov
push
cs
js
jmp
mov
xchg
cmpsl
in
mov
adc
call
dec
sti
sub
or
push
outsl
xchg
daa
popa
dec
sub
and
dec
dec
jbe
shrl
xchg
int
add
xchg
inc
or
pop
ljmp
mov
mov
lock
and
jns
xor
dec
sub
push
movsl
js
adc
add
ret
mov
getsec
loope
das
repz
test
orl
shrl
push
cmp
scas
sbb
mov
inc
out
adc
out
push
nop
xor
mull
int3
dec
mov
dec
pushf
or
testl
stos
fwait
cwtl
loopne
push
push
jne
fildl
inc
mov
shlb
dec
imulb
jg
push
xor
add
mov
cwtl
imul
jne
pop
movsb
sbb
push
nop
outsb
arpl
gs
leave
mov
add
and
mov
jae
mov
mov
mov
lds
inc
jecxz
stos
dec
icebp
adc
notb
jno
cmp
xor
xor
jo
sarb
push
out
xchg
xor
cld
iret
mov
push
inc
fbld
cltd
inc
xor
cmpsb
jl
mov
add
pop
ret
out
dec
jne
jae
inc
or
arpl
mov
sub
push
lds
std
mov
jecxz
lea
rorb
leave
je
clc
int
push
adc
mov
imul
data16
outsb
ja
xlat
dec
outsb
add
pop
sub
into
lcall
or
loop
and
arpl
iret
std
or
pop
mov
pop
lcall
xor
mov
das
push
pop
inc
inc
iret
call
xorl
mov
add
cmp
sub
push
adc
mov
jne
shlb
pop
xchg
fisubl
movsb
xor
negb
enter
jmp
add
cmp
mov
mov
outsb
movsb
stos
iret
and
sub
aas
ss
int3
jmp
push
je
ret
mov
push
or
add
sbbl
mov
and
cmp
in
push
cmp
mov
sbb
mov
daa
addl
orl
repnz
add
out
mov
add
inc
xlat
xchg
xchg
cmpsl
push
pop
pop
pop
stc
adc
ds
dec
pop
clc
lret
pop
out
and
adc
push
lahf
fsubrs
mov
lret
js
xchg
cmp
divb
add
dec
in
and
call
push
aad
sub
pop
mov
add
shr
add
fadd
lahf
aas
mov
mov
inc
daa
lahf
jle
cs
mov
shr
cmpsb
out
jne
or
outsl
cmp
jnp
xor
dec
adc
lcall
testl
ja
or
dec
xchg
add
xchg
add
sbb
bound
xchg
hlt
fsubr
push
pop
data16
jp
push
out
scas
and
cmp
adc
sbb
cli
and
lret
push
cwtl
push
fcoml
orb
ficoml
push
loopne
pop
aam
rcrl
or
inc
sub
aaa
mov
aad
xor
push
push
popf
sti
mov
jns
mov
mov
xlat
cmp
pusha
mov
jo
loopne
sbb
jg
and
xor
scas
cmp
and
xchg
sti
mov
mov
add
and
add
rcll
cmp
mov
gs
ljmp
in
mov
rolb
loop
xchg
mov
xor
stc
call
ljmp
in
push
jge
insl
fildl
mov
lock
out
push
movlps
insb
and
in
inc
cmp
and
jmp
inc
sub
clc
add
loope
outsb
mov
daa
inc
nop
cmp
adc
lds
pop
adc
push
mov
xlat
and
stos
lods
in
mov
insb
cltd
insl
add
xor
mov
inc
mov
movl
xor
aam
imul
push
mov
pop
orl
aam
sarb
movsl
or
scas
inc
mov
mov
pop
pop
sahf
ret
les
sbb
sub
je
pop
dec
out
scas
jl
cmp
in
dec
scas
mov
push
sub
xor
sbb
add
loop
xor
hlt
gs
pop
cs
mov
stc
mov
add
dec
cwtl
mov
cwtl
insl
or
push
jle
push
dec
dec
lahf
or
pusha
or
fnstsw
push
fimuls
add
or
dec
or
repz
outsb
and
imul
jbe
cmp
dec
pop
or
mov
fs
scas
aas
cld
iret
outsb
mov
inc
aaa
lods
adc
mov
cltd
inc
sahf
dec
push
pushf
out
aaa
jge
in
fidivrs
cwtl
inc
pop
push
sub
and
xchg
sar
das
je
dec
lods
sbb
add
sbb
in
fcompl
stos
adc
loop
lahf
aam
popf
rorb
jne
sub
jae
mov
mov
test
push
mov
mov
in
data16
mov
aaa
or
add
ret
sub
push
adc
xor
mov
clc
xchg
mov
sbb
mov
repnz
inc
mov
je
mov
push
dec
ficoms
lea
add
repnz
mov
push
sbb
or
imul
adcb
sti
clc
or
addr16
push
pushf
or
insl
xor
addr16
lods
lock
call
aam
and
xor
push
fdiv
sub
test
push
jmp
pop
xchg
push
push
sbb
dec
sub
push
ja
imull
pop
adc
cmc
jb
fcom
adc
mov
xor
ss
aas
mov
mov
sahf
loope
jp
push
and
and
ficoms
ficoml
push
minps
lds
jae
mov
pop
outsb
fldcw
dec
outsl
shll
pop
mov
stc
sub
movb
popf
and
pop
ljmp
jae
mov
inc
rorl
or
sti
xchg
xor
jl
mov
mov
add
jmp
inc
sub
push
sarl
mov
les
into
sub
xor
pushf
ret
repnz
test
out
fs
imul
jg
and
sti
pop
test
js
rol
rorb
inc
shll
inc
dec
notb
ljmp
mov
sti
dec
lods
ret
jbe
popf
sbb
pop
pop
dec
xchg
sub
lods
das
sub
mov
outsl
insl
icebp
xchg
out
lcall
or
ret
addl
and
pop
les
xor
out
rolb
lret
lods
mov
xchg
add
bound
xor
jnp
fcomps
ret
cld
xchg
addl
cld
int
outsb
loopne
and
sbb
jle
jo
leave
in
push
in
xor
std
andl
mov
insl
xchg
mov
icebp
movsl
rcrl
cmp
mov
ja
push
xchg
xchg
iret
ljmp
ret
ror
lods
jl
inc
xor
inc
fdivrs
jl
fwait
outsl
jno
push
add
ljmp
dec
es
jecxz
insl
stos
dec
xor
or
xchg
and
lods
pop
lret
mov
out
dec
fistpl
push
xchg
ss
ret
cmp
cmp
cmpl
mov
loope
adc
xor
inc
rep
jbe
loop
loope
daa
lods
sub
pop
inc
fistps
fsts
pusha
push
test
cmpsl
gs
cmp
cmp
xchg
pop
data16
or
mov
rolb
and
sub
divb
xlat
adc
jecxz
dec
sub
and
in
push
cmp
mov
movsl
leave
add
fsubs
lahf
js
sbb
xor
ret
fimuls
cmp
mov
mov
mov
dec
mov
or
jl
inc
mov
cs
icebp
insl
adc
pop
cmpsb
ret
pop
or
rol
adc
out
shrl
call
sti
add
xchg
dec
and
push
push
stc
mov
mov
iret
inc
add
push
loopne
jmp
jmp
int3
lahf
test
insb
ljmp
xchg
and
lahf
mov
xor
pop
xchg
push
mov
scas
mov
fwait
mov
testl
and
out
pop
xor
mov
test
std
and
divl
sbb
cltd
test
dec
cld
std
and
or
scas
or
push
loopne
xor
mov
xor
and
mov
or
addb
subb
sahf
push
push
cltd
dec
scas
or
int3
xchg
aad
xchg
imul
repz
xor
enter
inc
push
pop
cmp
inc
inc
sbb
push
movntps
adc
or
or
xchg
pop
mov
mov
sub
mov
fistps
test
cli
lods
cwtl
in
fnstsw
out
push
lret
add
and
pop
dec
les
jle
scas
movsl
loop
or
enter
rorl
bound
into
adc
push
andb
fsubrp
out
push
sub
xchg
or
in
adc
cs
fistpll
or
mov
xor
cs
sbb
and
lock
inc
inc
add
push
xor
sbb
bound
mov
loope
xchg
adc
sbbl
xlat
jae
pop
sub
jne
aas
js
mov
cmpl
loopne
xor
cmc
push
fdivr
cmp
adc
sub
xchg
mov
xchg
inc
add
pop
xchg
mov
mov
cmp
mov
mov
push
jbe
ds
repnz
repnz
push
idivl
lret
shlb
jno
cwtl
cmp
pusha
lock
inc
test
outsl
sbb
icebp
insb
lahf
and
rorl
push
clc
aas
test
inc
ja
push
mov
into
xchg
in
out
ljmp
push
pop
out
daa
stos
out
loopne
in
adc
xchg
mov
jo
fistl
mov
lods
repz
ret
sbbb
int3
fisubrs
push
andb
int
loopne
jp
cs
dec
out
aas
imul
or
cmpsl
and
jle
movsb
in
out
xchg
enter
cmp
or
loope
mov
fwait
into
rcrb
xchg
push
xchg
je
xchg
addr16
dec
jg
push
adc
cmpsb
ss
mov
mov
mov
sub
or
test
ljmp
test
and
mov
sbb
aaa
fwait
push
push
es
push
push
into
inc
pop
pop
push
pop
lock
jno
add
xlat
dec
mov
push
push
into
and
push
addb
or
stc
lcall
pop
jcxz
or
mov
cs
shrb
popf
cltd
shlb
pop
jb
mov
lcall
pop
sbb
pop
mov
ja
add
cmpsb
in
inc
shl
pop
cmp
test
adc
ds
adc
test
xlat
or
outsl
movsb
dec
mov
mov
ret
loop
mov
or
cs
mov
adc
inc
cli
push
push
and
mov
cmpsl
xor
out
sub
dec
lcall
out
push
jae
loope
mov
out
mov
mov
jb
lahf
mov
sbb
movsl
cmp
nop
mov
push
fwait
ss
adc
lods
mov
pop
lea
dec
sti
sbb
dec
data16
xchg
ret
inc
mov
jns
addr16
lcall
loop
mov
movsb
fndisi(8087
dec
insb
ret
cmp
mov
pusha
int
mov
out
pop
gs
adc
xor
or
adc
les
jl
sub
sahf
mov
call
push
cs
dec
jmp
dec
add
jmp
loopne
in
jg
cld
sbb
mov
inc
outsb
imul
cmp
hlt
xchg
fidivrs
notl
sub
ja
jno
xlat
jmp
loope
push
jmp
test
pop
sbb
and
pop
inc
mov
icebp
mov
mul
cmp
xor
fdivl
jl
mov
dec
sub
psubb
cmp
incb
mov
addr16
scas
inc
pop
out
jnp
pop
std
fsubl
mov
orl
stos
rcrb
pop
ret
mov
ja
inc
dec
cmpsb
or
adc
sbb
ja
cmp
xchg
add
or
mov
inc
dec
in
insl
inc
push
fsubrl
jmp
in
pop
mov
divl
dec
mov
jb
cmpsl
sbb
fildl
rol
aad
or
sub
jg
xor
sub
scas
mov
pop
loope
push
repz
test
jbe
stos
mov
xor
mov
stos
je
sub
xor
sbb
inc
mov
decb
xor
push
cmp
roll
test
bswap
cmpsl
mov
jb
in
mov
ja
and
pop
loop
cli
inc
push
or
xor
and
roll
ja
jle,pt
movsb
sti
xor
push
adc
xchg
mov
aam
cs
xchg
out
clc
outsl
inc
sub
and
sub
aam
or
lods
addl
repz
inc
lret
dec
and
xchg
sub
fwait
sti
aad
data16
ret
bound
sub
mov
outsl
cmp
add
adc
and
push
out
shl
test
mov
arpl
loop,pt
sub
hlt
outsb
mov
push
add
daa
jnp
pop
test
mov
adcb
jmp
mov
test
je
test
cli
out
mov
test
jle
clc
inc
pop
sub
or
movsb
xor
sbb
in
mov
adc
mov
icebp
popa
int3
shll
outsl
div
jge
add
test
mov
icebp
fdivr
gs
xchg
pop
lret
bound
xor
dec
xor
cmpsl
insl
push
repz
int3
jbe
decl
fnstsw
jae
and
sub
in
bound
lods
scas
lea
and
into
xor
inc
test
mov
sub
sbb
fdivs
pcmpeqb
jno
mov
and
stos
mov
sbb
push
lcall
daa
cld
pop
pop
pushl
pop
out
outsl
stc
fcoml
add
and
jg
jp
js
jbe
and
shrl
jge
dec
and
push
xor
aad
mov
or
ret
jmp
sub
jg
xor
adc
mov
xlat
outsb
test
sub
insb
rcrl
mov
adc
adc
pop
mov
and
fwait
data16
movsb
mov
mov
jo
les
xor
cmc
add
gs
jmp
pop
fistpl
jne
gs
mov
data16
sarl
ss
push
push
in
mov
ds
aaa
jns
pop
mov
std
movsl
xchg
test
and
int3
jecxz
push
jecxz
lahf
adc
dec
xchg
mov
or
cmp
jne
sub
add
stc
push
jp
xor
je
xchg
fcmovne
add
or
push
aad
sbb
fistpl
lds
mov
jne
lods
sub
iret
fsts
or
cmp
out
daa
mov
repz
pusha
repnz
je
or
cmp
sarl
mov
push
je
je
enter
mov
scas
cmpsb
scas
ljmp
int
lcall
inc
inc
sub
test
jmp
arpl
stc
test
push
lret
in
divl
scas
adc
lcall
insb
jp
mov
push
push
pop
push
or
xchg
jb
rorl
push
cmp
outsb
movsb
ret
or
dec
ret
and
rol
inc
leave
xchg
fimuls
xor
rcrl
dec
enter
mov
mov
cmc
rorl
out
and
mov
outsl
sarb
rcr
inc
mov
bound
mov
pop
pop
adc
and
push
push
into
mov
mov
out
sarl
xor
repz
cli
adc
in
out
sti
iret
sub
stos
in
std
sub
dec
je
shl
xor
mov
test
fs
xor
outsb
sbb
mov
adc
cwtl
js
pop
cld
push
mov
divl
mov
addr16
rcrb
dec
and
in
in
int
xchg
fdivrs
pop
jns
inc
lods
add
sub
cmpb
scas
dec
pop
mov
and
jo
clc
xchg
jo
cmc
pushf
popf
pop
xlat
jnp
sub
outsb
idivl
xor
test
mov
xor
jmp
dec
pop
xchg
xor
into
into
in
mov
jl
adc
dec
adc
sarb
add
push
xchg
add
prefetchnta
stos
pusha
adc
push
pop
xor
les
scas
icebp
dec
mov
cmp
out
adc
lret
shl
xchg
jmp
out
push
xor
dec
mov
push
outsl
test
icebp
fs
sub
dec
insl
loopne
inc
xchg
adc
or
pop
push
sarl
mov
ss
push
pop
or
fstpl
xlat
inc
and
jecxz
scas
xor
mov
ds
push
cwtl
out
jl
scas
shl
repz
insl
push
lret
dec
xchg
inc
fstl
add
out
push
lods
jecxz
add
insb
repz
ret
jno
out
aad
mov
sbb
aam
dec
loope
xor
les
cmp
cmp
ret
dec
jp
mov
je
shrb
dec
mov
mov
inc
cmpb
dec
fmul
dec
lcall
cwtl
sbb
clc
clc
clc
movsl
clc
das
test
cwtl
jo
pusha
and
pop
mov
je
push
ficomps
push
jnp
jb
or
mov
push
jno
dec
sub
adc
jl
scas
pusha
xor
or
pop
pop
mov
push
mul
xor
insl
ss
and
lods
cmp
lret
mov
dec
addr16
jle
jge
shll
jb
stos
imul
cld
stos
imul
jns
sub
push
out
fs
push
mov
movsl
in
xor
jnp
jp
jp
sbb
aas
test
das
stos
cmp
add
adc
in
cmp
dec
divl
sbb
cmpsb
rcll
imul
call
cmp
fidivrs
cltd
fstpl
rcrl
test
mov
add
lret
or
cmpsb
xor
lods
imul
sbb
adc
in
imul
rcrb
push
pusha
xchg
inc
nop
jmp
clc
dec
out
xchg
xchg
xchg
repz
int
imul
pop
bound
mov
ds
xchg
jae
stc
in
lods
imul
pop
and
sub
loop
pop
into
jae
or
out
jecxz
dec
push
mov
add
mov
xchg
sub
pop
cltd
jl
sti
fs
cwtl
mov
call
sub
in
scas
shl
scas
mov
pop
lods
push
sbb
movsb
dec
stos
adc
jns
dec
dec
mov
and
sbb
outsl
pop
fwait
xchg
loop
jns
je
das
cmc
cmp
dec
ljmp
jg
cmp
cmp
jbe
mov
test
push
mov
xchg
adc
les
pop
jns
enter
inc
insb
lret
mov
shld
fisubl
xchg
push
stc
leave
cwtl
cmp
inc
inc
hlt
pop
push
push
push
stos
or
rclb
adc
sar
inc
into
scas
xor
divl
push
inc
mov
icebp
je
inc
lea
cwtl
cltd
lods
sub
and
pop
push
inc
enter
xor
pop
mov
mov
mov
int
popf
sbbb
and
rorb
popf
pop
repz
lahf
inc
scas
maxps
scas
xorb
inc
cmp
sbb
mov
pop
pop
fsub
pop
jns
je
sub
inc
fwait
js
sbb
push
add
out
pusha
ficoms
mov
shll
fbld
jg
lahf
add
arpl
push
mov
repz
fbstp
leave
sub
insb
sbb
inc
cmp
and
out
cltd
mov
xchg
add
sub
push
cmp
mov
shll
and
dec
lahf
pop
push
inc
hlt
les
cld
shll
testb
mov
sub
jp
pop
sub
outsb
xchg
push
lahf
mov
jecxz
jne
aaa
sub
jmp
xor
pop
cmp
fsubs
dec
pop
xchg
and
xcrypt-ecb
cmpsl
mov
add
adc
inc
push
ret
stos
iret
cmc
pushf
fists
lods
mov
aas
mul
mov
add
iret
mull
cmc
jl
adc
outsl
mov
test
out
scas
ja
cltd
and
xchg
sbb
loopne
mov
and
push
jecxz
sbb
jecxz
adc
and
jge
cltd
add
test
inc
inc
out
scas
push
out
fstl
xor
imul
mov
hlt
es
jle
pop
popa
leave
imul
leave
ss
cmp
lods
fwait
or
push
or
and
andl
loopne
mov
cmpsb
push
popa
or
pop
pop
pop
fs
and
sbb
int3
inc
ja
imulb
adc
cmp
out
packssdw
or
dec
mov
jecxz
mov
ret
jge
mov
mov
mov
insb
and
push
rcrl
pushf
aad
cmpsl
pushf
pop
iret
in
lcall
outsl
out
jns
divl
lods
jbe
stc
jl
adc
jae
and
fstpl
mov
sbb
outsl
or
clc
cli
and
cmp
ret
adc
add
cld
adc
mov
dec
push
inc
les
movsl
pop
aam
aas
inc
or
int
sbb
les
mov
or
adc
incb
xchg
pop
imul
lds
add
xchg
dec
nop
mov
mov
repz
lea
and
add
not
pop
lret
sub
adc
ja
mov
push
xor
int
cltd
aad
loopne
push
repnz
imul
pusha
loope
lcall
sahf
stc
jnp
imul
mov
mov
imul
add
xor
fwait
cmpsl
stos
and
mov
push
xchg
imul
fiaddl
ret
scas
fistpll
push
jb
jne
loope
sbb
je
out
jge
push
lds
sbb
in
popa
xchg
sbb
pushf
cmp
lcall
fnstcw
push
into
sbb
out
cmp
mov
and
ja
mov
daa
subb
popf
dec
push
lock
out
fisttps
mov
or
add
or
gs
fwait
shlb
and
sbb
cwtl
clc
mov
xchg
aam
ja
or
add
mov
xor
jge
into
pop
dec
mov
mov
cmc
imul
pop
cmp
out
or
and
mov
push
loopne
sbb
mov
pop
mov
mov
idivl
mov
jbe
add
imul
es
pop
lods
xchg
in
das
xlat
pop
xlat
mov
test
adcb
loope
pusha
or
cs
xchg
or
sarl
inc
ss
pushf
jb
and
loopne
loop
ja
jle
test
xchg
push
push
push
mov
push
xchg
out
pop
rcr
hlt
insb
data16
xchg
lea
repnz
icebp
inc
ret
and
js
in
dec
cmc
mov
out
scas
mov
or
add
sub
add
pop
cld
cmp
mov
push
pop
aad
roll
mov
jnp
jmp
je
mov
in
iret
push
leave
lds
xchg
add
and
xlat
inc
test
jle
insl
jl
dec
cmp
jp
xchg
add
adc
and
jb
or
push
pop
lods
filds
cltd
adcl
test
stc
es
sub
into
xor
dec
out
lods
ljmp
jae
call
ror
inc
xor
sub
dec
hlt
test
lods
in
sbb
jo
je
sub
inc
adc
push
lock
mov
jl
inc
int
ret
jns
andb
int3
inc
fidivrl
adc
inc
inc
dec
stos
aas
rcll
jb
leave
sub
data16
xor
jb
mov
add
add
pop
ljmp
mull
sbb
push
cmp
rorl
jecxz
outsb
leave
mov
div
and
shl
inc
and
decb
mov
aad
pop
sbbb
mov
jecxz
fimull
sti
mov
dec
push
pushf
in
dec
push
mov
mov
lods
fidivl
aam
mov
lock
std
mov
daa
pop
pop
int3
xor
jne
imul
invlpg
stos
insb
icebp
dec
dec
push
dec
push
cmc
mov
inc
jo,pt
jmp
aas
cmp
xchg
fistpl
sbb
mov
les
jl
push
xor
negl
clc
nop
and
ret
sti
sub
mov
dec
mov
xor
mov
or
addb
cmp
pop
cli
xchg
enter
dec
aad
enter
or
pushf
inc
xchg
mov
int3
xchg
mov
xor
and
push
lea
and
es
push
icebp
jb
loop
fdivr
jecxz
scas
outsl
fnstenv
stc
enter
or
xor
dec
scas
insl
lods
cmp
dec
aam
mov
add
xchg
in
xor
lock
add
in
adc
cli
ss
or
mov
mov
shrb
rcll
inc
push
dec
or
pop
push
les
push
fdivrs
fwait
loope
cmpsl
mov
lahf
out
inc
cld
push
sbb
ret
xchg
in
ficompl
ret
shll
mov
jmp
inc
cmp
jbe
dec
in
lds
mov
lds
inc
mov
nop
imul
faddl
sbb
loope
jg
jae
aad
frstor
and
mov
icebp
movsl
mov
lea
lds
xor
das
mov
jecxz
push
cmpsb
sbb
jne
jnp
mov
sahf
int3
outsb
dec
pop
cltd
je
add
jle
jbe
push
push
push
das
xchg
push
xchg
push
loopne
arpl
mov
fildll
mov
cwtl
mov
imul
fdivs
mov
shlb
int
imul
lods
pop
repnz
jnp
lods
gs
mov
pop
ljmp
push
in
inc
add
xchg
or
and
frstor
or
mov
roll
mov
hlt
jae
cmp
pop
xchg
out
xor
rolb
lods
ficomps
dec
and
xor
divb
adc
rorb
sub
pop
inc
mov
vfrczps
sbb
or
mov
push
mov
or
orb
sbb
dec
xchg
inc
jnp
push
cmp
cmpsl
out
mov
fisubrs
addr16
movsl
xor
outsl
push
push
jmp
mov
test
lret
lret
sarb
icebp
dec
push
test
push
mov
inc
jo
xchg
aas
sub
add
cmp
xchg
fidivrl
cltd
push
dec
lds
jne
ds
jecxz
packssdw
aad
nop
and
mov
mov
clc
fisttpll
push
out
aad
jno
cmc
enter
outsl
mov
mov
xchg
ljmp
mov
ja
add
js
mov
fistpl
jae
pop
fsts
sti
fildll
jo
lcall
lods
push
cmp
inc
adc
xchg
push
xchg
mov
divl
cs
cld
xor
leave
popf
iret
imul
lcall
add
out
sarb
jecxz
and
faddl
cmp
ret
jge
sbb
sbb
jl
imulb
out
sub
out
sbb
movsb
jo
add
fmuls
xor
xchg
and
xor
aas
in
ss
add
pop
mov
popf
sub
jb
fs
fcmovu
xor
xor
push
jns
adcb
mov
std
pushf
push
xor
ljmp
xchg
out
mov
push
push
mov
mov
add
lsl
push
mov
stc
stos
inc
pop
outsb
data16
jb
pop
rcrl
movsl
sub
loope
dec
jmp
mov
mov
in
fcoms
mov
in
mov
jmp
loope
andl
int3
mov
lret
add
pop
ja
push
adc
inc
pusha
pushl
pop
jg
inc
fdiv
push
stos
in
shll
and
push
push
rcll
les
std
arpl
jnp
std
or
mov
fsubl
xchg
push
std
or
and
jg
es
inc
scas
or
aad
stc
sar
fidivrl
xchg
jo
leave
sbbl
movsb
inc
stos
mov
mov
xchg
dec
dec
push
add
and
bound
in
pop
imul
xor
pusha
and
push
xor
movsl
jp
pop
push
clc
or
testb
nop
cmp
lods
sahf
cwtl
out
cltd
sub
fdivl
jno
jl
in
cmp
std
jmp
int
cmpsl
mov
push
mov
out
dec
call
inc
sbb
aaa
iret
test
jecxz
xchg
je
sub
add
rep
push
fldpi
push
loop
mov
add
fisubrs
ja
mov
jns,pn
xor
loop
adc
loopne
xchg
add
ds
js
cmp
lret
hlt
test
xor
stc
je
mov
mov
mov
fdivrs
outsl
lea
fwait
popa
mov
imulb
sub
lahf
in
int3
xorl
out
cmpsl
pop
stc
insb
mov
std
xchg
push
in
push
add
xchg
ret
lock
int3
xor
in
repnz
ret
stos
ss
fldl
sbb
out
jg
shlb
jns
push
push
leave
std
xchg
testl
xchg
das
into
jmp
lods
mov
mov
je
outsl
push
mov
mov
cmp
adc
xchg
cmp
fisubl
and
and
mov
nop
adc
mov
in
add
sbb
inc
sbb
nop
xchg
inc
insl
sbb
cmc
jb
repz
mov
loope
adc
cmc
sahf
add
and
sti
jle
xor
out
cmc
div
sahf
cli
fiadds
cvtps2pi
fistpll
cltd
add
ja
je
ds
xor
mov
mov
jb
notl
icebp
fldcw
and
jg,pn
outsb
jae
mov
push
inc
cmp
jns
and
jp
lods
les
mov
ss
lahf
sbb
out
xor
cmp
push
shll
jmp
mov
or
cmc
ja
push
and
hlt
xchg
pop
jp
adc
in
rorl
mov
mov
outsl
cmp
stos
mov
inc
inc
jp
cli
int
mov
outsb
jle
push
outsb
shll
cmpsb
lahf
mov
lds
xchg
xor
lea
enter
xchg
fidivrs
rcll
cmp
es
fldln2
push
push
imul
lock
outsb
fucomip
outsl
pop
mov
dec
mov
loopne
aaa
inc
in
iret
jl
ss
ficomps
mov
stos
ret
push
lret
push
push
fcomps
sar
cmp
out
or
out
fwait
push
out
add
fdivr
dec
dec
iret
add
emms
mov
cwtl
dec
jg
mov
xchg
out
int3
clc
aaa
leave
push
in
stc
dec
scas
xor
pop
or
xor
scas
or
and
popa
aas
mov
inc
mov
test
pop
out
mov
inc
or
ja
xchg
xchg
add
xchg
xchg
inc
pop
cs
jmp
aam
xchg
jne
mov
xchg
movsl
push
out
xor
mov
cmp
dec
xchg
cmp
ss
pop
andb
xchg
or
add
call
mov
sarb
inc
push
xchg
aas
cli
lret
jbe
mov
push
mov
adc
xchg
add
sub
nop
pusha
aas
mov
lea
addr16
mov
rcrb
and
lahf
out
inc
mov
stos
loopne
cmp
inc
popl
mov
in
xor
sbb
lret
cmp
scas
dec
push
xchg
pop
in
and
pop
mov
xchg
xor
or
or
xchg
aaa
jns
test
push
and
into
sub
mov
addb
sbb
out
mov
xchg
lahf
insb
popa
cmpsb
rcrl
pusha
ret
pop
adc
mov
cmp
daa
push
je
lahf
dec
pop
movsb
ss
pop
aam
je
mov
shl
pop
test
icebp
icebp
cmp
ds
jge
inc
adc
and
lea
cmp
test
gs
inc
xchg
push
sbb
rolb
rcrl
mov
inc
jge
inc
and
pop
push
fiaddl
dec
dec
or
sti
rcll
lret
fisubrl
mov
outsl
test
or
xorl
adc
mov
daa
gs
cli
xlat
push
pop
mov
arpl
jle
cwtl
inc
xor
lret
adc
mov
enter
out
cld
loop
jl
stc
scas
ljmp
stos
jle
inc
push
jbe
mov
notl
inc
pusha
mov
cld
lods
dec
cmc
leave
dec
popf
call
aaa
jno
mov
pop
ja
sahf
mov
mov
aam
lret
cli
pop
xchg
push
imul
shl
cmc
or
inc
lods
jbe
mov
or
lods
test
adc
push
jecxz
or
sahf
xchg
mov
or
in
les
sub
imul
sub
or
jns
leave
push
daa
aam
jns
ljmp
inc
or
add
pop
push
mov
iret
mov
aas
lret
xchg
jo
adc
jle
and
outsl
xchg
rol
inc
add
mov
fwait
adcl
jae
mov
insl
or
lock
lods
push
fmull
pop
aam
xchg
adc
jge
dec
ds
addb
and
add
mov
das
les
jbe
stos
jae
xchg
movb
popa
jge
jmp
xchg
sbb
ljmp
loop
divb
mov
mov
enter
out
push
jl
jo
decb
or
push
lret
std
es
clc
aam
das
push
inc
adc
adc
lods
out
mov
andb
mov
cld
jo
push
bound
inc
dec
push
push
arpl
out
idivb
and
pop
aas
pop
adc
enter
or
xchg
ljmp
add
in
loop
add
push
jmp
sub
sub
das
xor
and
jmp
mov
mov
push
cmpsb
into
cmp
fwait
std
enter
out
mov
adc
iret
or
sbb
shrl
mov
imul
roll
pop
mov
adc
jb
ja
rcrl
scas
xchg
fcom
mov
mov
decl
jns
outsb
repnz
lds
lods
hlt
push
leave
xor
mov
xor
ja
ja
or
mov
push
lret
in
pusha
inc
or
jl
xchg
inc
addr16
xor
divl
sbb
hlt
dec
inc
mov
inc
pop
stos
jae
repnz
clc
ret
xor
mov
out
shl
imul
in
mov
cmp
cmp
cmc
mov
push
fcmovnb
int3
pop
js
insl
addr16
aas
stc
js
popf
sahf
mov
xor
lods
lods
mov
popa
leave
clc
push
popa
sar
in
push
mov
jle
je
incl
and
and
pushf
stc
jae
dec
fbld
or
dec
fmuls
shrb
xchg
je
cmc
push
rcll
loope,pn
insb
jnp
iret
adc
lods
cmpsl
cwtl
push
incb
aaa
arpl
pop
and
mov
aam
jne,pn
js
cmp
dec
adc
mov
mov
inc
loope
addl
inc
fcmovnb
pop
ffreep
pop
jp
mov
imul
jmp
subl
int3
dec
cmp
adc
or
pop
add
jnp
and
jle
xchg
cwtl
or
sub
cmp
push
pop
dec
mov
call
sbb
jo
movsl
lds
sbb
ffreep
jae
push
sarb
vsqrtss
into
fisubrs
xchg
cld
dec
jb
cmp
dec
leave
mov
mov
sti
mov
iret
adc
ret
jmp
sub
enter
rep
sub
in
insl
popa
mov
addr16
xor
xchg
int3
imull
stc
or
dec
testl
cmp
mov
aad
pop
imul
ret
cwtl
mov
mov
sub
mov
insl
loopne
out
repnz
negl
rorb
or
shll
adc
xchg
add
pop
popf
addr16
inc
pop
push
cmc
jnp
loop
xor
add
push
and
xlat
aaa
int3
jecxz
jae
pusha
pop
lods
inc
call
ja
jmp
insb
jecxz
in
xlat
xor
pop
adc
cld
inc
sbb
pop
cltd
popa
mov
and
and
fucom
ret
pop
and
mov
push
aam
push
hlt
sub
flds
cmp
cld
pop
mov
xchg
mov
out
in
fmul
add
pop
add
jmp
jo
lcall
mov
sbb
xchg
adc
or
push
cmp
xor
fbld
loop
data16
xchg
mov
je
push
fistpll
jl
mov
add
rorb
pusha
fwait
das
sahf
lds
pop
pop
push
pop
xchg
xchg
xor
les
aaa
and
add
mov
mov
mov
arpl
arpl
push
jns
dec
adc
xor
mov
jb
add
cmp
lea
outsl
xchg
cmpl
mov
jae
xchg
aas
shlb
push
lret
aaa
jl
gs
ret
pop
pop
cmp
aam
int
roll
and
dec
test
lods
cltd
loope
out
and
pop
cmp
mov
xchg
mov
mov
and
test
mov
mov
and
jmp
data16
adc
test
mov
mov
jge
ds
xchg
cmc
cwtl
aas
jecxz
rol
xchg
inc
push
add
sbb
adc
pop
mov
jg
psraw
test
stc
inc
jg
mov
lcall
cmp
ret
adc
cmp
adc
leave
add
roll
addr16
mov
adc
push
sbb
aaa
adc
sbb
jns
lcall
sbb
inc
push
mov
jnp
inc
and
fmuls
adc
lret
cmpl
inc
fsubrl
mov
cmpsb
sub
bound
jle
fstl
push
mov
dec
xchg
cltd
stc
push
xchg
movsb
ljmp
loopne
out
and
cs
arpl
pop
sahf
mov
pop
or
push
xor
jb
in
sub
hlt
push
mov
insl
xchg
inc
dec
out
jecxz
push
push
jo
pop
add
sbb
push
in
mov
fldenv
add
sbb
adc
jae
aad
inc
cmp
fnstcw
sti
jg
je
sti
loope
dec
lahf
ficoms
mov
cwtl
pop
dec
sarb
adcb
mov
adc
jns
fadds
aad
mov
outsb
stos
dec
into
sarl
bnd
aaa
and
and
xchg
dec
inc
mov
sahf
bswap
out
cmp
mov
pop
mov
adc
mov
aad
movsl
adc
lcall
shll
push
mov
mov
fcoms
cmp
ljmp
loope
cmpsl
ffreep
inc
shlb
pop
xchg
data16
jns
mov
mov
push
out
in
cld
test
std
xchg
emms
push
rorb
cli
gs
and
push
fnstsw
cmc
fs
cs
fdivs
pop
ret
mov
and
xor
faddp
stc
fucomp
cmp
jge
mov
push
push
stos
mov
sub
aad
dec
mov
push
popa
fsub
loop
scas
adc
xchg
sbb
popf
stc
and
xor
mov
rdmsr
aas
dec
and
out
lret
scas
lret
lcall
add
sbb
push
lcall
out
jge
mov
dec
inc
insl
rclb
clc
lea
pusha
testl
lcall
int3
es
mov
and
mov
repz
mov
adc
in
addb
or
mov
add
dec
push
or
xor
mov
mov
loop
ret
xchg
inc
inc
inc
incl
cmp
sbb
clc
and
mov
mov
lret
cld
jns
clc
mov
lahf
loope
ja
dec
cmpsb
mov
mov
mov
imul
sbb
add
jge
cmp
push
jno
sub
daa
loop
insl
test
add
shll
sub
clc
xor
jl
lcall
sahf
lret
pop
push
jmp
jmp
sbb
pop
mov
movsl
cmp
into
mov
ljmpw
sub
xchg
sbb
dec
jns
cmp
inc
adc
jg
in
loopne
xchg
aaa
std
repnz
clc
dec
cmpb
lods
pop
stos
inc
imul
and
pop
push
call
data16
pop
dec
divl
bound
mov
imul
es
sbb
inc
mov
push
mov
and
loop
scas
jg
fmul
mov
jns
ret
pop
or
cmp
inc
adc
and
xorl
add
inc
in
out
add
cmp
repz
scas
dec
mov
mov
jbe
fsubs
cmovo
lcall
push
fucomip
shlb
dec
sub
aas
in
cmpsb
hlt
or
jae
sbbb
pop
pop
push
lds
mov
leave
inc
dec
lcall
or
les
pop
jno
cmp
mov
and
cmova
sahf
inc
faddp
je
mov
push
mov
hlt
pop
sbb
push
sar
roll
mov
out
mov
out
cli
sbb
inc
mov
xlat
xor
cld
cmp
nop
push
jmp
inc
fdivrl
cmpsb
lods
movsb
fmull
sahf
fsubrl
ss
stos
movq
movlps
add
fsubp
push
cmpsb
xchg
add
fnsave
lcall
or
scas
mov
stos
mov
jle
insb
adc
ja
scas
jo
das
fucomp
push
pop
sar
fimull
sbb
pop
sbb
je
pusha
mov
out
mov
mov
nop
sbb
mov
mov
cmp
je
nop
aam
sub
and
mov
push
inc
xor
xorb
aas
pop
adc
pop
jno
and
cld
sbb
inc
mov
mov
mov
jae
jg
sub
popl
and
jmp
imul
mov
sub
mov
loop
int3
mov
or
test
mov
pop
mov
dec
dec
and
fs
cmp
sbb
push
pop
xchg
enter
ljmp
xchg
inc
scas
mov
mov
loopne
cmp
inc
call
mov
in
sub
fiaddl
shll
js
in
jmp
iret
pop
sahf
add
lods
pushf
inc
adc
inc
fldl
addl
adc
mov
pop
daa
test
or
fs
pusha
mov
xchg
sub
jo
mov
cld
pop
les
sub
cmp
dec
adc
aam
fists
xchg
adc
in
mov
les
mov
sbb
cmpb
xchg
rcrl
sub
lea
push
out
idivb
jbe
movsb
js
dec
and
mov
pop
and
das
mov
fldl
insl
cmc
push
dec
sbb
add
mov
imul
push
jae
fsubl
or
js
jmp
jle
incb
int
adc
mov
fstpt
cmp
lahf
push
push
outsl
shrl
push
andb
xchg
jmp
lock
cmp
cmpsl
arpl
jbe
in
scas
jle
pusha
and
loop
xor
ss
out
xor
dec
imul
sti
aad
stc
faddp
add
insl
sub
mov
fstpl
mov
ficoml
lcall
adc
dec
sbb
iret
pusha
jne
pusha
xchg
cmp
push
in
add
adc
leave
rcrl
mov
mov
call
mov
fbld
push
in
xchg
jmp
rclb
aaa
pinsrw
jge
mov
dec
dec
adc
roll
inc
push
iret
push
orb
push
imul
mov
jns
xor
mov
jmp
push
rorb
mov
jbe
out
mov
or
push
push
cmp
inc
mov
scas
adc
test
mov
aam
sub
mov
cwtl
push
leave
cmp
add
sahf
pop
pop
jle
inc
jg
fwait
and
jle
test
push
loopne
mov
daa
std
push
pop
pop
pop
pop
nop
pop
lods
add
or
in
cmc
movsl
leave
pop
ljmp
sub
mov
lods
mov
jnp
push
cmp
in
xor
cs
int
and
jbe
popf
orl
and
ret
mov
mov
shlb
cmp
mov
shll
repnz
sarl
mov
or
or
jge
xchg
aam
pop
les
mov
mov
insl
sub
mov
dec
inc
aam
aad
call
cltd
cmp
jl
dec
lret
jge
pop
mov
insl
mov
pop
into
mov
test
mov
clc
xor
dec
outsb
cmp
outsl
mov
mov
sub
movsl
lods
sbb
pop
or
cmp
or
xor
xchg
mov
mov
inc
dec
stos
out
cmp
add
mov
pop
fisubl
xchg
and
int
mov
js
adc
dec
fstpt
sbb
iret
js
daa
sub
addb
dec
outsb
and
repz
or
sahf
jg
cmp
xlat
in
inc
push
lds
incl
pop
lods
stos
push
leave
sbb
aad
inc
push
ss
cmp
jns
dec
cmc
mull
xor
ds
push
add
mov
loopne
sub
aaa
adcl
add
rcrb
mov
adc
pop
dec
add
test
add
icebp
loope
xchg
xchg
and
lret
scas
mov
imul
les
imul
repnz
int3
push
mov
or
hlt
loop
add
mov
cmc
loope
xchg
test
testb
fnstcw
mov
mov
add
xchg
stos
push
sbb
jge
push
xchg
sbb
jecxz
sbb
jae
movsl
dec
xchg
in
add
out
push
dec
dec
test
and
add
or
ss
je
sub
loop
jle
dec
dec
stos
fldl
xor
cmc
out
stos
stos
outsl
jl
xor
lds
in
lds
add
jl
mov
insl
faddl
testl
sub
inc
inc
mov
addb
jnp
idivb
jge
test
or
lods
jb
add
add
mov
cli
add
or
enter
sub
inc
cmp
insl
xchg
lods
jp
sahf
pop
dec
mov
cmp
mov
sti
cld
mov
add
mov
repz
in
xchg
inc
jecxz
inc
cmpsb
fidivs
jns
popf
enter
mov
arpl
aam
fcoml
mov
mov
inc
test
pop
outsl
push
dec
add
jns
leave
mov
test
mov
push
sbbl
mov
leave
jecxz
push
push
mov
fwait
mov
inc
push
pop
sbb
dec
jp
pop
sbb
or
xchg
iret
mov
mov
lea
lret
popl
jb
sub
mov
lahf
or
xchg
bound
push
adc
lret
out
fistps
lock
xor
add
lods
imul
mov
mov
or
icebp
rclb
cmp
loopne
iret
jo
jae
shrb
cmp
cltd
mov
cmpsb
jbe
cs
addr16
jo
pop
xchg
incb
xchg
push
loopne
icebp
dec
in
sbb
add
in
cmp
jo
mov
movsl
movsb
adc
mov
out
adc
inc
cltd
mov
icebp
lea
xchg
aad
mov
xchg
aad
ret
jnp
xchg
xchg
cmp
push
cli
push
dec
fwait
push
add
aas
or
mov
cmp
gs
dec
inc
push
xchg
sbb
shrl
outsl
and
cmp
imul
add
jl
js
xor
test
inc
into
test
add
stc
sub
pop
cpuid
stc
adc
orl
and
orb
hlt
ja
ret
mov
mov
inc
dec
negb
mov
mov
cltd
and
mov
adc
popa
jge
dec
add
or
xchg
js
inc
loope
push
je
stos
dec
pusha
mov
push
outsl
in
ds
xchg
inc
cld
or
mov
push
ret
hlt
js
gs
fcmovb
movsl
mov
mov
fidivrs
lahf
out
repnz
je
test
push
cmp
or
and
jb
cmpsb
mov
pop
sbb
pop
add
xchg
jp
add
call
rol
jmp
repz
xchg
push
icebp
and
mov
jmp
xor
ret
jb
inc
adcb
jns
idivl
pop
jp
xchg
jo
inc
fs
dec
mov
movsb
pop
pop
or
cmpb
jnp
push
pushl
dec
xchg
sbb
pop
aam
mov
xchg
mov
popa
into
rcrl
test
adc
aam
ret
sti
lock
adc
packssdw
jo
cwtl
and
jp
ljmp
int3
hlt
xor
xor
rcr
loopne
inc
cli
mov
jmp
in
adc
or
es
inc
mov
adc
pmullw
sub
mov
js
cmp
mov
sub
nop
or
shll
mov
outsl
js
adc
mov
and
sub
cli
pop
out
imull
sahf
sub
add
sbb
xchg
xchg
lahf
loope
pop
std
xor
adc
xchg
imul
bound
idivl
fwait
out
nop
push
mov
push
shlb
add
push
enter
inc
cltd
imul
cmp
dec
pop
fwait
lret
loop
lret
mov
mov
adc
lahf
ret
bound
fyl2x
inc
lret
cmp
sub
xor
or
mov
inc
mov
inc
fstps
mov
lea
jo
ljmp
test
xor
cli
xchg
sbb
aaa
xchg
xchg
loopne
cmp
aad
mov
xor
mov
push
dec
push
mov
jecxz
push
jg
pop
and
push
sub
repnz
push
test
dec
nop
orps
dec
or
nop
test
arpl
mov
inc
mov
sti
sbb
test
fidivrs
sahf
push
push
cs
fcmove
jl
movsl
pop
sbb
movsb
fwait
ss
pop
xor
imul
push
or
sub
jo
push
mov
add
in
js
xor
inc
adc
mov
jl
cli
cmpsl
inc
add
add
dec
in
pop
xor
popa
mov
jbe
inc
pop
inc
jmp
insl
jb
xor
cwtl
xor
xor
sbb
push
and
dec
mov
fs
sbb
dec
xor
lahf
add
push
hlt
pop
cmp
sub
mov
xlat
outsl
xchg
or
xor
repz
push
lds
imull
ds
movsb
leave
ret
cli
ss
jp
mov
nop
clc
clc
fildll
cmp
mov
js
xchg
aad
int3
mov
lds
add
xor
sub
pusha
mov
or
cs
mov
dec
xchg
jne
push
sub
inc
scas
or
test
cmp
addb
mov
shrl
and
aas
push
xor
test
out
pop
cmpsl
push
lea
mov
mov
enter
lock
add
loope
xlat
dec
xchg
mov
mov
push
mov
movsb
sbb
filds
fcoms
cld
cmp
xchg
sub
mov
incb
adc
hlt
dec
hlt
or
sbb
and
out
lret
mov
adc
icebp
xor
jmp
cmpsl
out
pushf
inc
repnz
popa
push
pushf
lea
sahf
xlat
pop
pop
pusha
scas
or
xchg
mov
and
les
pop
dec
push
cmc
xchg
cli
lret
scas
not
hlt
sub
je
cs
xchg
add
jo
popf
scas
sub
arpl
fbld
mov
into
daa
in
int
push
push
lods
push
cmp
pop
movsb
add
jbe
shll
jae
mov
and
jmp
jle
xchg
test
inc
mov
xchg
fsts
leave
lods
xor
xchg
xchg
and
sub
cmp
jnp
aas
jno
cmpxchg
stc
xchg
in
and
lret
les
jnp
out
cmpsl
adc
mov
xchg
sub
in
fists
or
nop
test
ret
inc
cmp
adc
adc
bound
mov
and
or
push
pop
test
mov
adc
out
push
sbb
adc
push
in
or
inc
pop
or
jb
sub
push
test
data16
out
cmp
push
scas
pop
pusha
jne
fcoms
popa
test
sub
sub
jb
adc
mov
test
pop
mov
and
push
mov
scas
mov
dec
sub
adc
push
inc
adc
add
jne
test
ds
mov
repz
mov
push
and
dec
sub
lods
test
push
adc
cmp
inc
jnp
mov
xor
adc
clc
inc
les
mov
pop
or
sbb
mov
lret
iret
popa
and
dec
sbb
sar
or
add
xor
or
testl
out
inc
stc
cmc
arpl
mov
cmpb
stos
test
mov
das
sbb
rcl
jns
rcrl
or
xor
in
mov
pop
in
mov
mov
xchg
test
or
stc
pusha
push
cmp
sbb
jb
xchg
xor
jo
inc
out
sbb
loop
bound
pop
pop
sbb
arpl
leave
cwtl
outsl
mov
loope
decl
pop
xor
ljmp
repnz
lcall
or
lret
js
ss
mov
loope
pop
loope
pop
sbb
arpl
repnz
sbbb
sbb
popf
ret
ror
cmp
pop
arpl
popf
loopne
mov
inc
das
pop
adc
in
pop
outsb
and
addr16
xor
mov
cmp
adc
pushf
mov
inc
add
movsb
clc
jmp
push
fmuls
push
add
daa
push
cmpsb
inc
jbe
pop
xchg
fadds
xchg
pushf
mov
andl
clc
sub
inc
mov
or
add
shl
stos
ss
mov
popa
fstl
mov
or
out
addr16
jg
push
dec
push
iret
xor
jle
cwtl
jno
jg
mov
sbb
stos
lds
shlb
push
cmp
addb
xor
dec
call
or
push
sbb
jmp
mov
mov
mov
mov
jmp
ja
scas
in
icebp
or
movsl
in
and
mov
pop
inc
jle
ret
ja
lret
push
inc
cmpsb
sub
inc
movsl
cmpsl
adc
loopne
aaa
lahf
into
or
aad
and
xor
xor
aad
add
ret
mov
sub
fwait
cs
les
pop
xchg
jnp
inc
dec
mov
xor
and
mov
lcall
repnz
xchg
popa
pop
mov
in
ret
mov
stos
cld
jg
jle
xchg
sub
mov
dec
stos
imul
stc
ljmp
xor
inc
out
fisttpl
jl
dec
dec
stos
sbb
sbb
mov
inc
mov
cmc
fldl
xchg
cmp
lret
test
movsl
test
add
sbb
test
xor
push
cmp
inc
sahf
inc
mov
imul
scas
bnd
pop
jmp
imul
sub
ja
aam
cmp
xor
loope
add
xchg
cmp
lcall
rclb
scas
dec
cwtl
int
decb
out
mov
add
mov
mov
and
and
adc
iret
jg
inc
pop
mov
xchg
cmp
xchg
fimuls
fistps
inc
mov
jne
and
jp
mov
cmp
sbb
in
dec
add
dec
lea
cmp
mov
xchg
and
cmp
push
out
gs
xchg
in
mov
adc
add
ljmp
imul
sub
cmp
icebp
add
bound
je
inc
repnz
lods
loop
cltd
add
dec
mov
nop
lcall
or
inc
add
mov
std
dec
and
lea
mov
inc
jno
aas
jge
or
jns
inc
aaa
xchg
in
cli
adc
xchg
scas
in
daa
in
sti
xchg
xchg
test
sbb
arpl
jge
push
mov
cmovg
add
fcmovne
adc
mov
fwait
insb
or
jecxz
cli
in
mov
outsl
push
cli
pop
jne
sub
pop
in
ret
in
repz
jne
mov
fcomps
xlat
cmpsl
pop
test
cmc
and
adc
mov
repz
jmp
aam
pop
jae
mov
sarb
pop
push
hlt
addb
xchg
xchg
or
loop
mov
sbb
aaa
xor
out
pop
loopne
mov
scas
pop
mov
cs
cmc
pop
out
mov
jne
sbb
mov
clc
jmp
sbb
mov
mov
test
adc
inc
mov
cmp
das
sub
fildll
push
sbb
idivl
push
adc
mov
aas
or
inc
dec
fidivrl
xchg
mull
fildll
pop
adcl
addr16
jmp
push
ss
mov
sbb
mov
push
into
lock
xchg
lock
cmp
add
hlt
dec
lods
jl
sbb
pop
inc
add
out
daa
sbb
adc
std
stos
fisttps
aas
testb
sub
adc
mov
pushf
mov
or
add
sbb
add
jg
stos
sbb
fsubrp
mov
ret
push
mov
shrl
sarb
arpl
je
gs
push
jp
ss
sub
mov
lds
xor
hlt
xchg
jnp
dec
pop
xchg
int3
cmp
testl
mov
cmp
or
jno
clc
std
ror
sbbb
adc
dec
rorb
loope
shrl
xchg
imul
into
mov
xor
std
addr16
mov
sub
and
mov
shlb
popf
sub
mov
inc
push
jae
dec
scas
inc
mov
lods
jbe
hlt
roll
or
sbb
in
xor
fwait
cltd
repz
shrb
xchg
aaa
jp
jnp
push
add
imul
es
iret
insl
xchg
movaps
xor
push
mov
pop
in
lcall
es
repnz
ljmp
mov
pushf
push
aaa
jmp
dec
shlb
sbb
es
xor
out
add
sub
out
pop
aas
fs
sub
fstps
shll
jbe
lcallw
stc
mov
idivl
outsb
and
fbstp
or
dec
out
mov
cmc
push
or
pop
data16
mov
mov
frstor
add
call
inc
and
and
stc
or
jle
dec
push
lock
pop
clc
leave
movl
ja
pusha
int3
loop
shll
les
adc
pop
jns
and
pusha
and
loopne
dec
xor
pop
add
ds
in
lock
adc
or
inc
popf
jmp
adc
scas
adc
mov
jp
xchg
sbb
std
sub
cmp
imul
pop
pushf
sti
movsl
push
call
gs
inc
stos
arpl
into
add
sub
xchg
icebp
into
sub
enter
into
pusha
push
insl
scas
es
faddl
xor
mov
mov
jno
fistl
cmp
adc
out
push
pop
loopne
jg
cs
fwait
push
test
pop
xor
clc
dec
push
int
xor
mov
cs
lret
loope
inc
push
jg
sub
or
mov
stc
mov
imull
dec
or
xchg
or
jle
out
gs
in
push
adc
xor
insl
mov
inc
cmp
mov
mov
inc
bound
dec
repz
jg
std
out
and
aad
adc
jae
pusha
imul
push
push
or
cmp
call
das
inc
xchg
mov
ret
mov
mov
lods
out
and
sbb
pop
int
lcall
sbb
pop
ja
bound
out
xchg
loope
push
push
shlb
mov
mov
or
and
add
cmp
rorb
clc
js
imul
mov
fisubs
gs
outsb
cmp
cmp
xchg
jb
dec
pop
int
or
aas
fsubs
or
idiv
adc
and
sbb
xchg
mov
bound
and
or
icebp
out
stc
mov
mov
add
and
and
cwtl
stos
ja
test
push
and
mov
sbb
bound
pop
mov
jae
adcb
rcrb
leave
push
das
add
dec
sbb
pop
sarl
pop
adc
imul
insl
mov
adc
call
and
add
and
daa
hlt
push
out
xor
xchg
push
enter
jae
mov
rclb
popf
xor
out
xor
js
dec
mov
mov
incl
xor
xlat
push
inc
pop
sbb
mov
add
adc
inc
test
nop
loope
xchg
ds
imul
arpl
xor
test
fucomi
pop
dec
jecxz
xchg
ljmp
xor
lds
dec
cwtl
fs
inc
sbb
jns
jp
fwait
lcall
or
pop
popa
repnz
loope
mov
pop
dec
xor
xlat
ret
push
ljmp
in
push
mov
mov
push
data16
mov
xor
imul
pop
jb
dec
shll
daa
mov
adc
in
icebp
popf
ja
pushf
sti
idivb
mov
scas
dec
pop
test
scas
sub
lods
add
xor
repz
orb
imul
sbb
stos
push
push
fs
nop
add
popl
lock
pushf
inc
icebp
das
xchg
sub
push
mov
cmp
enter
mov
fst
dec
add
xor
negl
aad
cld
in
out
mov
in
or
mov
pop
and
mov
xlat
out
addr16
testl
icebp
rcl
daa
mov
aas
push
ljmp
lods
div
mov
mov
pop
shrl
xchg
jmp
dec
ds
lock
mov
and
jg
cli
inc
call
adc
jno
xchg
idivl
xor
mov
cmp
aad
inc
movsl
les
int3
and
hlt
add
or
lods
iret
push
push
sbb
mov
shlb
stc
jle
cmpsl
cmpsb
cwtl
inc
push
or
and
jle
fwait
inc
mov
ds
adcl
shll
cmc
push
arpl
out
add
in
fsubrs
mov
push
and
popf
enter
push
add
jb
inc
cmp
xchg
loopne
aad
pushf
mov
adc
cmp
dec
addr16
pop
je
push
mov
jecxz
push
mov
movd
cwtl
push
cmpsl
or
add
dec
mov
int3
pop
shll
xchg
addr16
insb
imul
mov
xor
push
cli
add
lods
popa
les
inc
ret
mov
notl
dec
das
xchg
mov
xchg
aaa
jl
mov
xlat
mov
das
sub
and
cmp
push
sub
adc
popf
shrl
mov
dec
xchg
loope
fmul
arpl
jl
cmpsl
pop
repz
std
ja
jmp
xchg
or
loope
lds
into
nop
sub
jge
jmp
and
sbb
sub
rcl
sub
aam
loopne
mov
fsubrl
and
jne
and
fcmovb
or
test
mov
or
push
cmpl
icebp
gs
mov
xchg
lahf
jmp
and
xchg
loope
lock
inc
popa
movsl
dec
test
add
and
pop
pop
cmp
inc
js
insl
pop
fldl
scas
cld
jp
jmp
dec
pop
pop
out
xchg
mov
fbstp
scas
push
or
inc
xor
out
push
ja
jl
push
inc
mov
cmp
push
xor
cmpsb
in
int3
or
push
fwait
jg
nop
cli
scas
cltd
jmp
xchg
sbb
jbe
mov
jne
jl
cs
bound
adc
xchg
in
fwait
jae
leave
and
sahf
clc
ds
jmpw
pop
movsl
jg
pop
imul
push
ret
add
imul
sbb
aaa
lahf
xchg
add
fisubrl
adc
bound
dec
jns
cmp
mov
hlt
les
mov
fdivrl
mov
pop
dec
lds
push
lock
mov
lods
subl
and
cmp
jb
mov
sub
jae
xchg
loope
std
mov
rcrl
fimuls
ffree
push
mov
mov
pop
add
and
push
xchg
xlat
jp
neg
call
jmp
int
aas
sbb
inc
outsb
mov
xchg
push
loope
loop
lahf
in
repz
or
sub
insl
psrlw
dec
addb
mov
inc
loop
shrb
arpl
push
cmp
mov
jle
jbe
rcr
xor
mov
and
pop
sti
sti
aad
mov
es
push
das
mov
jb
pop
repz
push
insl
adc
cmp
sbb
fwait
jns
mov
shll
mov
cmp
mov
stos
in
adc
int3
adc
xor
lahf
xchg
add
xor
in
gs
mov
jo
rcrb
ret
and
stos
jne
mov
aaa
outsb
pop
movsb
mov
gs
popf
xchg
imul
or
sub
sar
leave
sub
xor
mov
mov
lods
fdivl
je
push
daa
dec
jae
mov
fwait
mov
xor
out
std
roll
in
push
mov
scas
mov
sbb
push
push
dec
testl
std
int
jo
pop
and
fdivrp
sbb
outsl
adc
std
adc
test
popf
pop
fistps
addr16
xor
pop
sub
pushf
dec
popf
aam
scas
popa
jmp
push
jmp
mov
push
xlat
lea
xchg
mov
mov
push
sub
jb
lods
sbb
xchg
pop
cmp
dec
adc
js
shlb
cmp
stos
cmc
or
and
sub
cmpsl
push
sbb
lods
jno
nop
pop
cmp
sbb
mov
lock
jmp
insb
lcall
pushf
loopne
sub
outsb
mov
jmp
add
pusha
icebp
mov
sub
mov
shrb
test
enter
leave
stc
out
leave
push
mov
push
aam
adc
or
sbb
jo
xor
pop
fisubrs
lods
int3
push
orl
ret
cld
lds
insb
data16
mov
jae
dec
cwtl
jmp
xchg
repnz
aas
flds
les
inc
mov
lcall
outsl
nop
enter
aaa
push
loope
mov
iret
cmp
jae
test
inc
mov
inc
push
in
push
add
pop
fidivl
jl
and
test
loopne
test
gs
mov
mov
xor
adc
sbb
mov
xor
lahf
shrl
int3
mov
cs
add
aad
hlt
pop
leave
inc
adc
pop
and
or
mov
test
cmp
outsb
mov
mov
loopne
xchg
jge
pop
sbb
std
sbb
adc
dec
and
leave
jns
gs
es
cld
mov
add
popf
push
push
jns
shll
xchg
movsl
loopne
push
in
test
sbb
stos
pop
adc
in
int
rcr
sahf
push
pause
je
mov
dec
jge
ret
dec
and
push
pusha
repz
ja
fisubs
dec
int3
sub
xchg
pusha
mov
sub
gs
nop
pop
imul
inc
or
test
jne
mov
cmp
xor
leave
mov
sub
cmpsb
in
dec
repz
xchg
mov
jnp
not
mov
add
ficoms
xor
into
adc
add
aas
dec
mov
sbb
ds
outsb
fisubl
inc
or
and
mov
ja
sbb
xorl
jo
call
sahf
sub
movsl
faddl
pop
fucomi
test
push
add
or
cmp
xor
fsubl
pop
ljmp
nop
xlat
pop
in
mov
jnp
scas
or
pop
and
and
push
stos
enter
test
ss
jmp
pop
mov
mull
out
add
jb
or
in
lret
pop
fbstp
and
dec
push
in
sbb
push
cmp
xchg
mov
mull
mov
fbld
gs
add
decl
or
dec
add
push
fs
cld
je
ret
loopne
push
mov
in
jp
jge
pop
lds
add
cwtl
fidivl
add
jb
mov
xchg
sub
push
std
jg
lret
mov
pop
xchg
push
inc
push
ja
sbb
je
jg
jno
adc
nop
mov
xor
pop
pop
mov
and
lds
fcmovbe
push
xor
pop
mov
test
psrlq
mov
enter
jne
pop
stos
jle
out
sub
stos
sbb
icebp
sahf
outsl
add
adc
xchg
mov
outsl
add
bound
cmp
add
sbb
mov
inc
ja
pop
fisubs
arpl
cld
adc
cmp
hlt
jnp
and
loopne
pop
aam
mov
jl
dec
mov
mov
pushf
lds
js
dec
add
int3
jg
cmpsb
xchg
hlt
lahf
outsb
lods
iret
aas
je
xor
lret
push
jmp
enter
mov
dec
xchg
iret
xor
xchg
pop
add
jae
ds
std
sbb
pop
aam
int
add
mov
loopne
sub
jne
cmpsl
rclb
dec
xchg
sbb
cwtl
xor
xor
pop
or
jl
fistpll
lret
ljmp
mov
pusha
push
xchg
mov
inc
lahf
std
sub
in
sbb
adc
adcl
data16
xor
lahf
sbb
lahf
lahf
jns
fisubrl
mov
je
stc
mov
pop
fstpt
pop
and
mov
aam
lods
and
add
pop
mov
cmpsl
negl
pusha
fwait
mov
jnp
test
fisttpl
mov
add
mov
jb
cs
bound
mov
jno
push
mov
out
insl
jnp
int3
sbb
insb
loope
add
sahf
jl
andl
xor
adcl
pop
cmpsl
in
push
mov
push
xbegin
xor
inc
negl
xchg
jb
sub
or
xchg
add
inc
push
shrb
jmp
std
inc
shl
push
mov
cmc
push
loop
dec
out
mov
int
adc
out
scas
pusha
dec
dec
int
in
or
shlb
out
jmp
xlat
mov
push
mov
fs
stos
sub
roll
sbbl
das
xor
repnz
sub
inc
aas
mov
repz
push
xor
into
insl
xchg
pusha
inc
imul
jb
repz
faddl
mov
test
and
mov
subl
sbb
inc
xor
int3
fimuls
repnz
or
test
mov
shlb
mov
mov
cmp
popa
imul
jecxz
cli
mov
inc
or
mov
test
cltd
push
cmp
xchg
popf
gs
adc
aad
xor
dec
mov
sar
sbbb
jne
and
mov
insl
mov
lock
lahf
adc
or
daa
add
xchg
iret
jae
call
add
xchg
daa
adc
mov
lahf
aaa
adcb
roll
mov
xor
ret
add
pop
popa
adc
lcall
sbb
sahf
jmp
sbb
orb
lds
inc
inc
into
inc
lods
pop
adc
adc
clc
stc
out
testb
sub
aam
fidivl
mulb
push
pop
pop
dec
sub
lret
ret
imul
xor
orb
or
inc
sbb
data16
leave
dec
cmpsb
pushf
loop
movsl
xchg
or
rcrl
divl
xchg
jo
inc
incb
popa
jl
jno
mov
popf
or
lahf
pop
and
sarb
or
sbb
and
xor
lret
xlat
sub
jbe
pop
scas
loope
mov
pushf
inc
xor
mov
daa
movsb
and
add
pop
mov
stos
cs
inc
xchg
jae
nop
fs
xor
pop
pushf
mov
adc
pop
inc
loopne
call
dec
push
in
cmp
popa
rcll
xchg
std
aad
jo
push
push
cmpsb
ret
jp
xlat
test
test
push
stc
in
mov
in
stc
mov
nop
nop
dec
int3
lret
dec
push
push
xor
inc
cmc
inc
sub
mov
aam
gs
xor
hlt
addr16
jge
sub
inc
lret
lcall
push
aaa
pop
add
and
jecxz
ror
add
inc
mov
fdivrs
cmpsb
xchg
jl
pop
mov
fmuls
stos
int
push
int3
daa
loope
insb
or
or
cmp
std
push
out
sub
sub
pop
dec
and
add
sahf
aam
push
outsb
mov
mov
sub
outsl
adc
bnd
imul
mov
iret
stc
or
dec
jb
mov
xor
test
mov
or
pop
mov
stos
and
sti
les
pmaxsw
sub
fistl
jns
fsubp
or
aad
das
push
int3
fsts
push
pop
sbb
pop
dec
pop
add
or
out
das
mov
xchg
mov
inc
dec
rorl
insb
stos
out
jnp
outsl
adc
arpl
cmpsb
stc
adc
and
and
push
jle
jle
xor
cld
or
sbb
repz
iret
scas
dec
fsubp
movsb
mov
add
or
int
xlat
cmp
xor
xor
inc
imul
add
loope
loopne
scas
add
pop
sbb
mov
pop
das
ret
dec
jge
decl
adc
mov
aas
lea
add
mov
add
popa
push
std
popf
subb
cmp
push
mov
or
dec
mov
adc
sub
or
ljmp
imul
sbb
push
push
test
push
gs
les
insb
sub
sub
and
ret
or
ds
jle
sahf
inc
cmp
inc
aaa
jp
shlb
test
pop
and
dec
arpl
pop
mov
push
pop
aam
sub
mov
cmc
push
test
sub
pop
movsl
cmpb
loopne
test
pop
adc
mov
xor
jae
into
dec
loopne
jb
fs
adc
pop
inc
test
hlt
push
cwtl
add
scas
mov
not
rclb
pop
cs
dec
adc
push
push
pop
int3
test
mov
jl
insl
ret
incb
call
jg
push
dec
pop
rcll
xchg
and
psubq
test
xchg
iret
in
mov
js
lds
and
nop
jmp
pop
out
jle
imul
jmp
push
push
aaa
jnp
sbb
cs
add
fsubrl
int
movsl
cmp
std
mov
fidivrs
nop
dec
xchg
lret
movsl
les
cmpsb
mov
jnp
adc
cmc
out
mov
jno
jecxz
jbe
lea
push
insb
jae
and
cmc
fistpll
cld
testb
dec
inc
mov
inc
xchg
add
sub
popf
dec
pop
test
das
mov
mov
repz
and
mov
pop
pop
add
add
and
jge
insl
lock
mov
out
dec
test
dec
es
xor
cmp
mov
adc
push
dec
insl
push
jo
and
daa
push
test
jns
dec
daa
jae
mov
pop
fs
push
inc
leave
scas
ljmp
add
and
loop
jge
xchg
adc
mov
call
mov
inc
fwait
xchg
or
shlb
cmp
hlt
pusha
push
mov
jb
daa
inc
pop
or
jnp
jl
stos
xor
add
inc
mov
xchg
ja
shrl
xchg
add
xchg
mov
fcmovnb
pavgw
and
xchg
in
inc
int3
or
xchg
daa
pop
mov
mov
and
mov
push
dec
jge
sub
insb
loop
pop
push
and
mov
jo
iret
xchg
imul
inc
movsb
sbb
jae
addr16
xchg
popa
loope
sbb
jmp
shlb
pop
je
bndldx
push
jecxz
jmp
test
and
js
xchg
aaa
cmp
sub
xor
push
jl
push
mov
cmp
rcl
dec
rclb
jno
int
fsubrl
jge
mov
lds
out
sub
or
sbb
jle
mov
jno
jno
mov
cwtl
xchg
or
rcll
mov
xor
xchg
mov
adc
jne
sbb
cwtl
pop
pop
fstl
imul
cmpsl
sub
cmp
jl
leave
lods
pop
adc
bound
sti
repnz
andb
popa
xchg
inc
pop
mov
xor
cmc
and
rorl
add
pop
in
cmp
ret
sbbl
in
pop
in
outsb
movsb
or
in
jne
and
push
mov
cltd
xchg
lcall
pop
filds
adc
movsb
push
hlt
int
and
cs
cmp
mov
std
pusha
es
xchg
sbb
dec
dec
lods
pop
mov
cmp
push
and
shll
cli
dec
cwtl
xor
mov
mov
xor
mov
sarl
add
stc
dec
shlb
fcmovnb
sbb
ret
cmp
dec
dec
fwait
jo
push
push
inc
lret
pop
mov
out
mov
insl
pop
pushf
in
mov
fsubrl
cmp
push
mov
push
add
mov
ret
mov
dec
jnp
out
mov
ds
fprem
add
cmpsl
and
adc
mov
mov
jno
pop
mov
loop
dec
pop
shlb
fcmovnb
outsb
xchg
sbb
xchg
mov
inc
daa
shll
and
adc
addl
mov
sti
push
ret
push
sbb
xchg
sbb
insl
add
dec
mov
mov
mov
sbbb
fdiv
inc
scas
insl
insb
or
xor
cli
xchg
call
mov
lahf
fiadds
push
and
xorl
cmp
pop
lahf
sbb
out
aam
lds
into
jmp
cltd
lods
cmp
xchg
and
cmpsl
aas
pusha
imul
or
mov
pop
cwtl
hlt
jo
push
clc
imul
in
sti
xor
cli
subb
dec
mov
add
jnp
loop
mov
inc
ds
enter
stos
inc
in
inc
pop
in
jb
jmp
mov
jbe
jne
rcll
dec
inc
insl
aaa
and
test
divps
pop
dec
or
and
cs
lret
cmp
repz
gs
add
mov
push
push
cltd
lahf
jg
mov
push
cmp
movsb
push
push
sbb
xor
push
test
and
push
push
mov
jb
subl
imul
dec
mov
lret
lret
nop
inc
cli
ret
sbb
cld
clc
push
jecxz
test
jg
jmp
arpl
incb
jno
dec
into
mov
shll
xchg
adc
fcoms
jge
das
pop
test
imull
sbb
rorl
sub
movsl
jle
enter
stos
add
pop
xor
js
fstpt
data16
mov
dec
mov
sbb
loopne
stos
scas
cmp
and
jecxz
sbb
xor
adcb
sbb
dec
cs
add
adc
andl
inc
ret
stc
enter
inc
jge
cli
insl
rclb
mov
adc
jnp
pop
jg
dec
aas
add
adc
mov
cmp
and
sub
out
cmp
repz
xor
adc
sbb
push
icebp
xchg
scas
popf
test
jnp
adc
adc
and
das
pop
xchg
inc
adc
dec
lahf
dec
sti
sub
fadds
or
das
sti
and
fisubs
pop
pushf
push
stos
lock
mov
pusha
ficomps
or
jecxz
ficompl
mov
sahf
xor
jno
push
out
lret
popa
pop
fwait
xorb
out
jg
and
push
shll
fwait
adcb
test
stc
mov
sub
cld
ja
js
aam
roll
push
rolb
cmp
lea
pusha
stos
shrl
pop
dec
cmp
hlt
cmp
sbb
nop
xchg
pop
push
mov
int3
in
insl
mov
pop
cmpsb
mov
jnp
inc
cli
shrb
out
dec
mov
mov
inc
mov
sub
sbb
vmovsd
idivb
or
inc
push
xchg
ds
sub
adc
mull
push
sahf
jg
push
dec
jg
inc
cs
js
xor
dec
sbb
rcrl
das
add
mov
rclb
addr16
in
punpckhdq
or
pop
push
xchg
cmp
mov
outsl
sti
out
and
pop
xchg
mov
pop
push
xor
cli
stos
jns
cmp
je
cmp
mov
xchg
dec
xchg
into
and
loope
scas
in
mov
jecxz
xchg
mov
xlat
jne
pop
add
mov
pop
loopne
jne
mov
dec
aaa
push
inc
xchg
mov
sbb
aam
mov
sbb
popa
insb
popa
dec
inc
sub
lea
in
cmp
pop
push
inc
std
bts
push
pop
fstpt
dec
xlat
mov
and
xlat
sbb
mov
enter
arpl
add
lea
jns
pop
ja
pop
idivb
or
jns
stc
sti
push
pop
sbb
int3
fisttps
aas
repnz
jge
cmc
popf
sbb
mov
push
mov
xchg
incb
aaa
jbe
or
cmpb
mov
imul
in
jl
stc
fdivrl
xchg
inc
push
pop
repnz
jo
inc
cmp
jg
inc
mov
arpl
setl
ds
sub
orb
mov
mov
mov
in
shll
mov
push
push
rorb
in
pop
fadd
cmp
xchg
mov
pop
adc
adcl
dec
jno
mov
fcmovb
jbe
aam
scas
cld
popf
pop
insb
mov
jne
test
shlb
shl
or
push
mov
jle
push
mov
jno
mov
addr16
dec
call
call
ficomps
cmp
mov
jecxz
insb
loope
sbb
pop
iret
aam
push
xor
dec
cmp
insb
sub
sbb
pop
and
jp
fistl
pushf
xor
xchg
inc
ja
roll
inc
pop
adc
dec
jno
ficoml
xchg
xchg
arpl
mov
cmp
and
mov
pop
clc
dec
mov
repz
imul
leave
mov
dec
lods
jp
lret
sub
cmc
jg
xlat
ja
sahf
and
mov
data16
std
outsl
cmp
push
push
pop
mov
xor
jp
sbb
ffree
jae
add
xchg
in
popf
pushf
xor
lods
cmp
pop
mov
in
lahf
fwait
popa
xor
leave
test
push
mov
xchg
pop
xchg
pop
xlat
js
lcall
xchg
fcmovu
mov
xchg
pop
adc
add
sbb
shrb
lcall
fsts
fdiv
stos
js
iret
bound
dec
cmp
mov
lods
andb
mov
adc
enter
pop
fwait
notb
je
stc
ja
xchg
mov
jns
jae
mov
dec
sub
add
fidivrl
xchg
add
sbb
stos
outsb
mov
pop
sbb
in
mov
add
adc
add
xchg
andb
subl
pop
add
mov
jnp
int
mov
xlat
notb
push
enter
repnz
arpl
das
or
out
add
dec
lea
and
fimull
adc
filds
or
ficomps
pop
sub
in
clc
int3
or
inc
in
sub
fdivr
and
loope
and
mov
dec
fimull
scas
push
jmp
add
inc
cmpsl
mov
popa
stc
bound
xchg
cmc
xchg
lods
push
xor
add
or
ud1
or
filds
out
push
pop
add
jge
scas
int
or
xor
in
mov
loop
int
out
mov
or
mov
pop
insl
outsl
push
sti
nop
dec
loopne
test
and
xchg
test
daa
or
outsb
test
jns
xor
cltd
lea
je
int
jns
add
rolb
mov
repz
movsl
loope
mov
repnz
idiv
dec
es
inc
arpl
push
ds
repnz
push
sbb
add
xchg
loopne
lret
fwait
dec
out
xorb
iret
pop
mov
out
or
movsb
inc
or
repnz
cli
sbb
test
ja
dec
ljmp
je
adc
enter
sub
sbb
push
je
ja
shl
push
rorl
test
push
sub
or
inc
mov
loop
and
in
repz
aas
cli
lcall
je
push
sub
dec
shrl
lahf
daa
ficompl
pop
aam
pop
pop
movsl
mov
daa
popa
inc
out
arpl
inc
push
mov
xchg
cmp
inc
or
outsb
stos
and
add
xchg
push
sbb
lock
js
pop
fcmovne
insl
aam
mov
jno
call
sahf
dec
aam
aam
and
imul
fistps
cli
mov
aam
leave
xor
and
dec
out
fwait
btr
test
sub
cmpsl
shl
and
lods
daa
pop
push
push
xchg
push
xchg
fmuls
push
es
jbe
jl
cmp
nop
pop
pop
pop
sbb
mov
inc
jge
push
loopne
lea
adc
fcmovnb
out
fcomps
mov
sub
icebp
jne
js
int3
push
icebp
add
insb
or
lret
bound
mov
inc
add
sub
push
pusha
sub
outsl
xlat
adc
jle
int3
loope
dec
and
repnz
lcall
push
dec
add
aad
mov
mov
fdivs
mov
fisubrs
jo
cltd
jecxz
stos
dec
movsl
in
mov
loopne
outsl
shrb
lahf
loope
pusha
mov
xor
mov
pop
sbb
jmp
adc
test
xlat
test
xchg
daa
fbld
mov
rclb
jmp
fidivl
out
mov
pushf
rcll
sub
pop
or
mov
push
jmp
pop
lods
movsb
test
jp
lods
cs
out
push
insl
fwait
clc
stos
xchg
jmp
gs
cmp
addl
jae
notb
xor
in
scas
lock
push
push
int
andl
outsl
mov
stos
pop
xchg
pop
js
xorb
mov
cmp
popf
int3
loop
stc
lahf
pop
js
inc
mov
fs
xor
sahf
mov
sbb
outsb
neg
sub
adc
inc
hlt
cmp
pop
pop
xchg
pop
adc
pop
cmc
mov
fwait
popf
mov
imulb
push
sub
arpl
loope
arpl
lret
jmp
test
jge
jae
add
add
and
mov
adc
test
popa
cmpb
xchg
jecxz
xor
or
lea
fs
test
mov
add
add
add
mov
lods
xchg
ds
dec
test
xchg
xor
mov
pushf
xchg
in
mov
sbb
inc
sbb
ss
xchg
mov
add
xor
imul
push
xchg
aam
mov
push
mov
push
jo
bound
push
xchg
bound
cltd
cmp
out
fcoms
jno
cli
sahf
sbb
jb
fadds
sub
dec
or
mov
test
adc
sti
or
sbbl
lahf
and
dec
insl
fwait
xorl
sahf
std
int
xchg
pop
pushf
sub
adc
and
out
mov
cmc
out
idivb
xchg
stos
adc
out
in
cmp
popf
int3
xchg
mov
bound
xor
lds
in
sub
jno
mov
xchg
mov
dec
addr16
data16
enter
mov
xor
pusha
mov
jnp
fsubrs
jecxz
std
pop
ret
mov
in
pop
cmp
pop
and
cmp
adc
mov
movsl
xor
std
jnp
push
mov
mov
daa
sbb
js
dec
arpl
push
jge
fnstenv
rorl
mov
pop
cltd
scas
mov
in
push
pop
ljmp
pop
loope
fisubrs
jp
cmp
xchg
jmp
mov
and
scas
mov
pop
cmc
push
mov
mov
icebp
mov
lods
movsb
jecxz
lret
ljmp
xor
mov
xchg
mov
sbb
stc
xor
xorl
push
movsb
loope
xor
test
cmpsl
inc
arpl
fnstcw
repz
cli
xor
pop
mov
lock
fidivs
dec
outsl
dec
push
xchg
cmp
pop
fwait
pop
cmp
cli
lret
dec
sahf
pop
push
xchg
rorl
jo
rcrb
mov
and
push
pop
ljmp
xchg
lret
mov
or
dec
bound
test
ret
jle
push
xchg
imul
bswap
push
lods
inc
xchg
fwait
mov
gs
push
dec
cli
pop
xor
inc
jns
inc
pop
dec
dec
inc
aad
insb
shlb
repz
dec
les
dec
adc
xor
fstl
imul
push
jnp
mov
sbb
pop
mov
addr16
inc
dec
iret
sub
jnp
insl
mov
adcb
and
sub
adc
test
pop
mov
mov
add
mov
xchg
dec
data16
stos
ficoml
incl
divl
mov
cmp
mov
cmp
push
jb
inc
test
xchg
push
scas
imul
fwait
sub
shll
or
mov
mov
jg
xor
iret
xor
or
mov
stos
push
mov
sarl
ficompl
dec
add
jns
loopne
hlt
js
mov
out
xor
ror
mov
xor
add
repnz
aad
loopne
lcall
inc
sbb
call
add
push
adc
lahf
add
jo
cwtl
in
jp
push
dec
inc
shll
sbb
fsubrs
hlt
dec
mov
adc
cmpsl
mov
scas
out
cmpsb
std
pop
outsb
mov
gs
into
inc
scas
add
pop
mov
lret
lds
lcall
xchg
into
cmpsb
addb
ret
bound
mov
mov
daa
xchg
in
aam
xlat
pop
xchg
iret
push
sbb
mov
cmp
loopne
ljmp
mov
mov
dec
mov
fcompl
icebp
aas
xor
add
loopne
notl
xchg
jmp
xchg
cmp
mov
arpl
cmp
and
pop
ret
jae
jb
xchg
mov
adc
sbb
add
neg
jl
dec
xor
loope
mov
xlat
jl
jb
adc
repnz
pushf
lods
aad
leave
cltd
out
mov
arpl
lods
jno
fldenv
loop
in
mov
loop
in
and
dec
icebp
insl
inc
addr16
scas
mov
xchg
mov
cltd
test
movsl
mov
lds
mov
sub
das
sarb
rorl
or
jb
das
mov
inc
aas
or
mov
jl
push
lahf
and
dec
and
lret
fs
push
pop
flds
enter
inc
dec
push
ljmp
dec
push
jp
outsl
ds
mov
dec
fwait
stc
adc
jg
xchg
push
sbb
fld
lret
cmpsl
sub
add
pop
addl
mov
jbe
nop
outsl
jp
xor
out
mov
cmp
cmp
outsl
xor
fs
mov
ds
push
fnstsw
xchg
cmp
loop
dec
outsl
xor
movsl
daa
leave
imul
in
ljmp
notl
inc
cmp
ds
sbb
scas
add
shl
test
lea
adc
sub
in
or
push
sub
leave
insb
cmp
cli
int
dec
jge
or
push
ss
incb
adc
mov
insb
push
subl
push
xor
filds
xchg
sti
jno
sbb
add
movsb
xor
mov
lock
aas
sub
add
cmpsl
cmp
pop
xchg
dec
push
cli
lret
call
mov
jo
mov
fstpt
mov
hlt
arpl
aaa
jmp
or
adc
sub
stos
pop
rorl
push
sub
out
push
mov
xchg
add
mov
mov
addr16
cltd
inc
pop
jecxz
xor
and
dec
xor
sub
push
sbb
shrl
xor
mov
mov
jl
pop
jmp
cmp
popa
sbb
inc
lcall
ret
xor
mov
add
pop
xor
loope
frstor
stos
xchg
and
push
jno
imul
ret
test
mov
xor
pusha
hlt
jle
ja
mov
loopne
adc
mov
cwtl
int
adc
andb
jmp
test
mov
orl
mov
add
and
lds
dec
jno
and
fstl
and
out
repz
lods
push
scas
rorl
addr16
dec
add
std
lock
push
sbb
dec
test
mov
and
inc
sbb
jge
mov
popa
jmp
int3
adc
out
orb
sbb
fdivl
aad
mov
idivl
in
flds
loop
scas
push
in
adc
and
jl
je
cltd
pusha
mov
push
and
out
pop
xor
sub
imull
pop
mov
pop
fnstenv
lret
cmp
jp
mov
dec
lret
cld
adc
in
ret
or
push
jl
addl
or
int3
mov
ja
inc
mov
xchg
call
cmpb
sub
cmp
aad
and
fildl
sar
xor
hlt
adc
inc
add
push
lret
int
fistl
pop
ret
or
scas
jo
add
pop
jnp
scas
js
std
sbb
pop
push
and
int
jp
sti
and
add
xchg
das
popa
fcomi
roll
xor
aad
test
scas
xor
xor
inc
adc
mov
jns
fmull
jae
gs
icebp
sbb
mov
in
jae
enter
adc
adc
scas
adc
lret
push
loop
jp
sub
out
dec
sbb
jecxz
js
add
sbb
cmp
and
sti
sub
mov
rcrl
std
les
inc
mov
xchg
cmp
out
cli
aas
or
sbb
xor
insb
pop
jae
fsub
mov
sbb
xor
iret
adc
jb
push
lahf
in
sbb
dec
lods
int
sub
test
das
cmpsb
cmpl
cmpsl
push
adc
push
iret
dec
outsb
cli
int3
imul
cmp
aas
pop
lods
out
dec
outsl
leave
movsb
fisttps
add
fcompl
aad
sbb
scas
jo
out
inc
adcb
pop
lahf
fcompl
cwtl
sbb
inc
and
xor
pop
insl
sbb
xchg
xchg
xor
shlb
push
mov
cmovno
fwait
sub
push
popf
test
addr16
in
adc
les
fnstcw
inc
xchg
jae
ret
lds
mov
jno
cmp
sbb
add
lea
in
adc
aad
ja
jo
xchg
aas
lahf
or
cli
mov
inc
pusha
testb
cli
add
sarb
pop
cmp
add
xor
and
scas
inc
add
stos
adc
imul
outsl
lods
xor
push
push
out
push
cmp
sub
cmp
jae
test
cmp
xchg
aam
xchg
xlat
pushf
test
xchg
push
sub
and
cmpsl
jb
sub
aad
cmp
cwtl
or
dec
push
jl
adc
std
stos
mov
adc
lods
lret
mov
fiaddl
fadd
mov
mov
pop
xchg
jg
cmpsl
sub
leave
mov
outsl
mov
cmp
into
push
pop
stc
pusha
sbb
inc
jmp
loope
addl
xorb
movsb
mov
sub
repnz
or
les
pop
dec
js
aas
push
push
mov
in
and
xor
daa
push
pop
cmp
add
pop
mov
testb
add
notl
int
gs
sti
pop
lahf
cmc
push
and
pop
pop
lods
inc
cmp
dec
add
jg
into
push
add
mov
out
jmp
outsl
js
ljmp
mov
pop
js
or
mov
iret
fs
jmp
out
jmp
in
lcall
outsb
ss
ljmp
sub
sub
fnstenv
xor
lock
loopne
ret
add
xor
pop
std
lret
xor
jge
sbb
and
and
out
adc
scas
xchg
cmc
adc
fldl
xor
int
orb
scas
frstor
sub
pop
shr
or
mov
adc
inc
dec
pusha
les
lds
pop
inc
and
add
loopne
and
aam
and
mov
popf
orb
jns
inc
xor
lock
sbb
enter
xchg
gs
pop
aad
ja
outsb
dec
mov
cwtl
mov
and
push
imul
mov
mov
sbb
fldenv
and
sub
adc
mov
inc
stos
mov
out
cmp
push
cmpsb
inc
mov
jecxz
fistl
cmp
pop
ljmp
lock
dec
dec
mov
adc
fadd
mov
cli
and
scas
sti
ds
sub
hlt
sbb
mov
imul
xor
mov
dec
mov
cmc
sbb
adc
test
aas
jmp
push
xor
xchg
xor
mov
dec
xchg
movsl
aam
mov
mov
lods
xchg
movsb
push
loop
jo
pusha
out
push
das
lcall
jae
loope
mov
test
out
mov
xchg
pop
mov
adc
test
jmp
loop
das
jns
lahf
fstps
lods
fstp
iret
hlt
pop
jae
push
outsb
in
inc
mov
dec
dec
cmpsl
xorl
aaa
or
sub
shr
jmp
lcall
add
lods
mov
cld
movsb
jns
jl
pop
cmp
push
test
sti
inc
sbb
inc
fs
cmp
pop
imul
sar
push
xchg
add
daa
adc
popf
adc
jp
mov
jne
pop
pushl
jo
icebp
daa
mov
test
sahf
xchg
jns
dec
stos
adc
ja
aas
cmp
xchg
in
add
les
and
dec
xchg
pop
or
xor
jnp
dec
dec
mov
pop
xchg
adc
xchg
scas
addl
rol
sbb
push
ficoms
repz
adc
mov
pop
xchg
int
enter
sbb
xchg
ljmp
cmp
jle
push
movsl
jp
mov
sub
neg
xor
jno
adc
dec
pop
inc
jnp
mov
aaa
stos
push
sarb
nop
add
fisttps
sbb
push
in
add
xchg
xor
dec
push
dec
ja
jge
add
or
rcr
cmp
lods
cmp
jns
incb
add
cmp
add
loope
pop
mov
enter
out
jg
jl
call
sbb
push
repnz
xlat
dec
jb
testl
ret
or
sbb
subl
cmp
and
adc
jle
mov
pop
test
insl
cmp
dec
adc
or
mov
jl
fprem
mov
lahf
jle
inc
rcrl
loope
icebp
cwtl
pushf
sets
imulb
pop
add
aaa
bound
stos
jno
cmp
and
jae
cli
and
inc
aad
and
repz
xchg
sub
pop
lret
xchg
cmc
cmp
gs
repz
mov
xchg
jae
cwtl
adc
lcall
sarb
sbb
js
out
pop
and
dec
jb
adcb
ss
adc
jp
jl
cltd
loope
mov
jbe
cwtl
mov
xchg
lcall
xchg
inc
mov
in
push
out
xchg
and
cmpl
push
xchg
and
pop
mov
push
repnz
jb
lea
push
inc
sets
rcl
pop
adc
loopne
push
lret
cmc
xor
cmpb
fcmovbe
push
xchg
mov
dec
pop
jge
xor
aaa
mov
dec
pop
xchg
lods
xchg
loop
lcall
cltd
mov
dec
popa
lods
mov
aas
out
ffree
sub
gs
mov
sub
and
cmp
clc
mov
dec
mov
mov
mov
or
mov
aas
inc
cltd
aad
xchg
in
sti
adcb
dec
clc
mov
cmp
or
rclb
sub
lea
push
jl
jl
mov
mov
push
dec
mov
aam
out
mov
add
divb
pop
into
imulb
popa
lcall
arpl
cmp
mov
xchg
inc
pop
gs
das
sarb
test
cs
je
or
addl
mov
xchg
rolb
and
push
lds
inc
cmp
out
sub
dec
fs
shll
pop
jge
fidivl
pop
add
mov
cmp
mov
add
xchg
mov
mov
aam
fsub
sub
rcrb
mov
pop
adc
lea
mov
pushf
or
fnstsw
sub
ud1
and
ja
cmp
hlt
aad
cmp
inc
and
dec
xchg
data16
cs
lods
add
jb
jp
test
rorb
pop
dec
jecxz
rcll
imul
and
xchg
mov
pop
flds
inc
jl
dec
ljmp
das
les
mov
iret
andb
inc
mov
xchg
pop
sub
js
and
xchg
dec
mov
mov
push
int
imul
daa
test
daa
test
lgdtl
mov
and
or
jbe
aad
or
add
lds
je
test
and
jnp
pop
push
push
push
cmc
cmp
data16
sarl
std
stos
es
repz
fisubl
mov
lock
scas
and
mov
insb
ljmp
cmp
xor
mov
xchg
cltd
shll
xchg
and
test
test
gs
cmp
fsub
and
sbb
xchg
or
jge
stc
jmp
adc
pusha
mov
pop
sahf
sbb
sbb
decb
ficompl
push
stos
mov
push
sbb
loopne
test
scas
jno
add
gs
fistpl
js
movsb
mov
outsb
push
add
cltd
and
rolb
sub
aam
adc
xor
inc
mov
lds
fisttpll
add
inc
in
adc
sbb
cld
fnstsw
rolb
jae
adcl
jmp
das
mov
sub
repz
das
push
xor
lds
pushf
adc
fcmovb
add
mov
and
cmp
jae
pop
rcrb
jno
mov
cld
or
rorl
out
out
ret
das
jmp
jp
adc
mov
cmp
push
jp
inc
add
fisttps
xor
ss
lea
sbb
jecxz
cs
faddl
cmpsl
or
mov
cli
stos
mov
and
mov
cmp
call
jbe
adc
pop
or
mov
xchg
std
fsubs
les
push
sbbl
and
push
in
add
xchg
jmp
das
pop
push
cmp
in
lock
sbb
and
xchg
sub
or
sub
inc
inc
loope
les
jg
je
sbb
xchg
imul
xchg
outsb
xchg
ja
insl
sub
xchg
mov
shlb
jb
cwtl
imul
mov
outsl
notl
xor
js
push
mov
aad
pop
clc
popf
pop
js
dec
push
into
mov
lods
dec
loopne
jae
xchg
cmp
and
sarl
icebp
mov
jb
popf
fwait
jo,pt
adc
fimull
pop
xchg
inc
sub
or
cmp
xor
fsubrs
cli
add
in
or
inc
popf
xchg
sub
ljmp
clc
cmpsb
sahf
into
cmp
inc
sbb
push
add
pop
dec
or
and
push
int
xchg
insb
or
dec
bound
inc
dec
mov
cmp
aad
movsl
daa
jne
push
lods
xor
movsb
sarl
add
fwait
repz
xchg
sbb
int
xor
rcll
mov
mov
or
mov
xchg
jb
fldcw
fcmove
add
fldz
push
or
lods
mov
or
mov
ss
push
lods
mov
xor
fs
jb
inc
pop
xor
xchg
lret
in
dec
cmpsl
cmovnp
popf
test
bnd
ret
jne
js
popa
icebp
fcmovnb
insl
xchg
outsl
xor
push
call
stc
or
idivb
jmp
daa
xor
mov
jae
jge
ret
ljmp
mov
mov
push
test
push
sbb
push
mov
mov
mov
mov
sbb
test
cwtl
out
push
leave
cmp
adc
xchg
jnp
cld
push
aad
pop
mov
imul
and
cmpsl
or
sbb
loope
or
and
aas
inc
jo
push
loope
adc
mov
or
loopne
lret
mov
cmpxchg
mov
sbb
popa
sbb
pusha
sbb
cltd
rorb
cmp
inc
or
jmp
xor
aaa
iret
mov
jnp
adc
push
and
ljmp
popf
mov
mov
xchg
sbb
in
xchg
pop
jae
push
mov
fcoml
sbbb
outsl
lcall
adc
pop
out
jne
shl
das
xchg
push
mov
into
dec
stos
pop
push
jb
ret
test
mov
leave
add
dec
dec
out
pop
xlat
stc
hlt
add
les
pop
outsl
jmp
es
sub
das
test
lahf
sub
mov
aam
out
lods
in
add
xor
mov
dec
fstpl
popf
mov
sbb
fucomp
aas
push
add
push
insb
jmp
mov
sti
lret
aaa
cmp
push
and
enter
neg
sub
cmpsb
into
mov
cmpsb
mov
jne
stos
mov
arpl
ds
inc
movsb
cltd
scas
sbb
lock
movsb
or
cmc
adc
pusha
push
shl
mov
insl
adc
push
scas
arpl
test
fs
iret
mov
jg
pop
push
inc
idivb
xchg
test
std
out
xchg
mov
movb
lods
push
in
insl
add
jo
dec
shll
sbb
sub
xchg
cli
or
jbe
mov
pop
in
out
cmp
dec
stos
fwait
aam
add
adc
adc
int3
out
frstpm(287
adc
ret
mov
ds
push
decb
lock
es
dec
addr16
outsb
mov
jmp
xchg
fisttps
cmc
outsb
add
adc
pop
mov
add
out
xor
sub
pop
push
sub
cmc
xor
inc
xchg
pop
push
cmpsb
push
je
fucom
rolb
dec
mov
xlat
in
and
test
loopne
mov
push
adc
int
jp
dec
mov
pop
inc
inc
and
xchg
adc
xor
enter
mov
xlat
jmp
cld
test
pusha
pop
pop
mov
pop
out
push
in
dec
ljmp
test
repnz
fcmovnu
pop
mov
xchg
stos
add
test
icebp
data16
into
cmp
or
add
mov
pop
mov
sahf
loop
sbb
clc
pop
popa
pop
sub
outsb
insl
ret
rcll
cld
insb
jae
popf
jl
mov
or
in
mov
scas
std
fs
cltd
aas
sbb
loopne
mov
dec
inc
addr16
adc
in
outsb
inc
xchg
push
or
push
jnp
jmp
aaa
pop
arpl
ds
add
sub
into
clc
or
xchg
pusha
stc
int
mov
int
outsl
mov
mov
inc
les
adc
rolb
pop
or
test
jae
or
lret
xchg
movsb
cmpsl
dec
aas
test
in
pop
sbb
ret
xor
lea
xorl
adc
xchg
and
pop
mov
imul
popa
add
mov
clc
mov
in
fcompl
mov
adc
xchg
gs
out
xchg
stos
stc
inc
cmp
adc
js
out
cmp
lea
push
xor
lds
add
into
cwtl
cs
shlb
push
fwait
dec
subl
and
int
or
mov
cmpsb
xor
cmp
inc
and
sbb
jbe
enter
fwait
sub
sbb
pusha
sbb
adc
insl
jecxz
pop
rolb
xor
loopne
mov
sub
out
jp
dec
lret
lret
inc
or
sub
xlat
pop
outsl
ss
clc
xchg
jmp
test
sbb
nop
fisttps
mov
imul
out
or
adc
arpl
jns
mov
dec
fsubrs
jmp
in
test
aas
xchg
test
test
adc
gs
xor
sahf
iret
outsb
lods
rcrb
fpatan
lock
in
aaa
lea
dec
xchg
movsl
add
inc
rcll
idiv
out
jmp
inc
inc
enter
movsb
sbbl
mov
mov
leave
enter
xlat
dec
and
ret
cs
icebp
xor
push
mov
clc
bound
push
fnstcw
sbb
pop
fcmovne
repz
xor
xchg
xchg
cmpl
dec
cmp
jmp
dec
cmp
mov
mov
push
in
dec
stos
and
fisubl
sbb
push
push
mov
aas
mov
sub
jge
push
pop
sbb
xorb
mov
jne
add
sub
lahf
and
std
jp
fwait
mov
lcall
cli
jne
jo
pop
push
rclb
mov
movl
imul
push
shlb
sub
adc
sub
dec
xchg
jae
cmp
lock
aaa
and
add
cmp
enter
xchg
aam
and
je
lret
adc
loope
push
sahf
arpl
shlb
idiv
sbb
out
inc
cmp
loopne
repz
sub
lods
adc
adc
shlb
es
push
cmp
xor
insl
cmp
or
in
jg
sbb
push
adc
inc
jnp
xor
fwait
imul
arpl
fsubr
insl
or
jne
adcl
jle
sub
jp
xor
in
xchg
mov
push
test
xlat
lods
stc
clc
jle
xor
sbb
sbb
lahf
push
adc
lret
cmp
mov
ficoms
nop
fstps
andl
jae
fs
jo
pop
sbb
imul
mov
cmp
dec
adc
popa
inc
adc
push
push
enter
mov
or
fcoml
mov
jbe
lret
xor
pushf
push
fwait
sbb
xchg
sbb
cmc
je
rorb
daa
sti
mov
add
cmp
fisttpl
push
rcrl
cmp
rcrb
iret
mov
mov
cwtl
stos
aam
fisubl
jae
or
mov
mov
jns
pop
leave
pusha
add
pcmpeqw
dec
or
xor
mov
pop
insl
pop
xchg
hlt
in
lahf
out
dec
cltd
les
push
call
outsb
fimull
int3
mov
cmp
pop
add
inc
imul
sbb
xchg
arpl
and
pop
repnz
adc
ds
test
lds
loopne
cmp
outsb
jbe
adc
loopne
aam
xchg
inc
or
nop
xchg
jb
mov
jmp
xchg
mov
jle
add
inc
popf
cli
shrl
pusha
pop
scas
push
cmp
sub
jle
dec
loopne
pushf
mov
add
xor
shll
shll
pop
cwtl
rcrl
cmp
inc
pop
cwtl
adc
xor
dec
dec
sub
mov
scas
and
test
gs
xchg
and
dec
sti
cmp
mov
xor
data16
arpl
add
repnz
adc
pop
int
dec
pop
pop
lcall
fimull
sbb
jecxz
enter
sub
mov
and
push
xchg
xor
sbb
xchg
in
pop
in
xchg
dec
aaa
test
lahf
stc
packssdw
in
test
mov
insl
xor
neg
lds
or
xor
mov
sub
push
inc
xchg
sahf
push
and
iret
jno
dec
or
sub
sub
lock
and
cmpsl
mov
call
std
add
push
mov
scas
fwait
push
mov
imul
push
sub
add
push
js
mov
jmp
xor
dec
adcl
fmul
add
add
rcrb
adc
cli
cld
pushf
lock
addr16
into
dec
fmull
ffreep
mov
push
jmp
push
sub
xchg
out
or
test
insb
sub
mov
mov
push
ss
mov
mov
gs
cltd
jno
sub
add
out
sbb
mov
mov
pop
sub
push
rorb
addr16
cld
add
xchg
and
cmp
push
cmp
pop
mov
cmpb
mov
addl
shll
sahf
aad
sbb
add
pusha
fisubl
popf
repnz
mov
jge
add
imul
adcb
mov
loopne
rorb
mov
jne
sbb
adc
scas
imul
pop
push
les
das
outsb
out
cmpsl
inc
mov
push
inc
shrb
and
inc
add
movsl
push
xor
push
fwait
cli
adc
in
clc
stos
or
loop
xor
data16
popa
add
rorl
inc
pop
push
gs
or
push
xchg
cltd
xchg
pop
pop
enter
idivl
shll
xor
cmc
push
icebp
jge
dec
movsl
or
es
das
and
jne
aam
lret
inc
pop
inc
inc
xchg
mov
cld
pop
ss
in
push
pop
cmp
dec
outsb
sub
pusha
addb
aas
insl
ss
ljmp
cmpsl
int3
lds
lahf
je
cmpsl
push
push
mov
sub
ja
adc
stos
xchg
pop
out
mov
imul
into
jle
mov
add
or
mov
out
jae
mov
andb
mov
xchg
mov
dec
out
mov
outsb
add
dec
push
out
popa
cld
xchg
mov
dec
cltd
jecxz
xchg
sub
add
call
and
aas
inc
pop
movsl
add
mov
scas
push
sahf
loop
xorl
fdivrs
js
xor
andb
adc
sbb
and
mov
imul
repz
dec
je
loop
push
movsl
test
cmpsl
dec
jnp
lret
adc
add
pusha
pop
mov
cmp
fidivl
jno
inc
lret
loop
fildll
add
ficoml
sub
sbb
and
lcall
insl
loope
add
inc
dec
add
lcall
scas
add
out
fimull
sub
lahf
inc
addl
mov
cmp
ret
mov
mov
xchg
into
lcall
mov
lcall
fs
scas
pusha
orl
fnsave
enter
cli
cmpl
pop
stos
inc
pop
test
jbe
jmp
jl
xchg
shlb
inc
and
sub
and
sahf
les
mov
jbe
dec
movsl
adc
add
clc
out
call
ficompl
sahf
js
sarl
or
adc
lods
shr
test
xchg
data16
out
mov
push
ljmp
cmp
ja
gs
out
xchg
xchg
fsubl
setbe
xor
iret
mov
outsb
pop
pop
shll
loop
dec
fstl
xor
push
lret
sbb
std
repnz
pushf
int3
push
aad
subl
out
ljmp
cld
leave
cmpsb
cld
movb
add
and
push
mov
mov
js
push
mov
mov
push
push
loopne
pop
and
arpl
xorl
lret
int
movsl
stos
mov
mov
lds
and
lods
lahf
fwait
lea
in
ss
js
push
call
or
or
sahf
cmpb
fcom
jnp
lds
insl
cwtl
inc
rolb
jecxz
jbe
add
mov
cmpb
push
pop
inc
shrl
std
fldl
xchg
mov
adc
add
dec
sub
cwtl
insb
jbe
dec
mov
mov
xchg
push
pop
add
jle
in
cld
jb
ljmp
and
add
add
push
cmp
add
mov
mov
cmc
pop
cmp
scas
fsubrs
packssdw
fisttps
imul
sub
ss
popa
stc
cmpsb
inc
in
push
stos
dec
xorl
sub
in
adc
and
jge
ret
mov
adc
lea
lds
test
lods
pop
inc
cmp
rolb
movsl
repz
loop
dec
jo
into
cmpsl
xor
and
repnz
dec
xor
adc
in
jle
mov
adc
fnstcw
fistpll
xor
push
lock
repnz
and
sbb
mov
mov
mov
push
add
cmc
in
cld
mov
mov
cmp
mov
shlb
or
daa
cmp
rcrb
negb
xchg
inc
cs
loop
push
repnz
or
cwtl
ficoms
jno
push
fmull
hlt
mov
dec
lcall
popa
push
and
insl
mov
mov
sbb
arpl
and
push
adc
lret
ficoml
ret
sahf
xchg
jp
jecxz
fmuls
sub
sbb
rolb
call
mov
xchg
movsl
cmp
mov
negb
aaa
lds
sbb
xor
dec
lods
mov
mov
sar
sbb
enter
cwtl
pop
and
lds
xor
push
fstl
dec
ljmp
in
add
or
sbb
out
xorl
pop
cmp
lods
insl
cmpsl
mov
ss
sbb
add
dec
pop
pop
and
jno
xchg
insl
add
rolb
into
es
xchg
cmp
outsb
imul
jmp
repnz
out
lahf
mov
outsb
ret
mov
cs
mov
in
cmpsl
cmp
push
fcomps
iret
movsl
daa
cmp
xlat
das
mov
js
testb
dec
popf
mov
mov
in
enter
popf
sbb
cld
sbb
nop
jle
cmc
mov
sbb
push
pop
sahf
add
imul
push
fmull
sub
jnp,pn
inc
lret
jp
sub
jb
jne
jmp
mov
into
inc
dec
mov
ja
xchg
pusha
mov
fildl
jnp
scas
inc
sbb
popf
mov
popf
movsl
jge
jp
push
in
dec
int3
cmpl
gs
mov
into
or
push
dec
nop
mov
out
jae
iret
lahf
sbb
ja
std
out
int
rol
mov
pop
xchg
and
movsb
divb
test
in
outsb
rorb
jae
outsl
add
cmp
je
adc
lods
jae
ljmp
idivl
es
stos
pop
hlt
pop
fsubl
push
daa
adc
dec
mov
dec
imul
dec
sbb
out
nop
or
frstor
xchg
subl
out
dec
aas
mov
mov
sbb
addl
in
and
sarl
nop
add
imul
std
jmp
insl
rcpps
add
repz
inc
inc
push
dec
adc
sbb
mov
adc
or
mov
imul
pop
dec
xchg
sahf
sbb
aaa
imul
int3
aam
sub
pop
cmp
test
adc
js
add
xchg
mov
pop
mov
hlt
cltd
arpl
lret
mov
dec
sub
lods
jp
sbb
push
jg
xor
and
pop
cmovo
jp
adc
test
jae
cmpsl
pop
xchg
jle
test
and
popa
sub
rcr
adc
rcrl
xchg
popa
or
or
mov
jle
or
fdiv
outsb
testl
xchg
cmp
push
and
ret
cli
xlat
aas
dec
sarl
jecxz
cmp
pushl
out
fadds
sub
and
add
fs
sbb
and
lock
insl
push
ss
lret
add
inc
pop
std
sbb
scas
inc
daa
cmp
or
sarb
or
adc
stos
xor
jle
in
or
andb
mov
test
icebp
jmp
das
rolb
mov
rcrb
insl
pop
aas
mov
fistpll
dec
xor
outsl
rclb
mov
stos
dec
shrb
adc
js
dec
xor
jmp
std
adcl
add
aas
ficomps
jbe
aam
inc
or
shll
js
fmull
pop
adc
rorl
push
fcompl
inc
je
daa
or
div
mov
movsl
mov
addr16
stos
or
push
test
loope
ds
imul
mov
sahf
dec
shll
fwait
mov
testb
pop
push
into
sub
sub
js
cli
dec
sbb
jecxz
out
pop
sub
fs
or
and
aad
push
movsb
imul
lods
mov
mov
mov
jmp
fucomi
sub
test
mov
push
mov
push
xchg
ljmp
sub
mov
push
add
inc
and
sub
xor
cmp
je
inc
add
mov
cmpsl
cmp
push
xor
enter
jnp
or
mov
mov
xchg
pop
nop
xor
out
lret
les
leave
push
xorl
cmpsl
mov
push
and
add
mov
data16
sub
and
inc
ror
out
xor
repnz
cltd
pop
mov
pop
arpl
sbbl
iret
and
fdivrp
ja
xor
adc
dec
stc
aad
push
add
xlat
mov
rcll
jno
ret
mov
jne
loop
bound
push
test
sub
pop
xchg
ds
cmp
sbb
daa
adc
push
jmp
mov
jg
frstor
dec
xchg
stos
xchg
mov
lea
fstpl
pop
sub
sbb
cmpb
push
lea
rorb
idivl
inc
pushf
xorl
push
bnd
fstps
leave
cmpb
cwtl
jge
sti
dec
dec
jae
jp
cmpsb
lret
ror
pusha
shll
scas
and
xchg
outsb
or
jle
fsubrl
mov
rclb
cmp
push
inc
mov
and
es
push
in
aam
jnp
mov
adc
cli
jo
pop
in
sbb
out
xchg
jo
dec
lea
sub
push
das
fldt
lahf
jl
mov
testl
lret
xor
mov
rol
ret
loope
shlb
imul
je
pop
mov
sbb
xchg
rcrb
es
ds
add
mov
xchg
pop
fmuls
xchg
push
lock
addb
insl
push
or
pusha
or
jns
test
call
out
test
icebp
and
jecxz
out
outsl
mov
cmc
cs
sub
adc
adc
repz
and
out
mov
or
shrb
and
jnp
aas
add
sbb
push
cmpsl
push
enter
push
fsubrs
or
dec
xchg
in
cmp
jl
flds
jecxz
rcrl
aaa
cmc
and
jmp
leave
push
popf
mov
jb
sbb
int
mov
or
ret
setg
jb
or
jnp
dec
xchg
pop
shrb
xor
ljmp
clc
pop
xchg
lock
xchg
loope
jl
or
mov
push
mov
push
jns
je
mov
sbb
cmp
aaa
push
clc
xor
mov
stos
dec
cmpb
mov
mov
test
and
jecxz
dec
push
sub
cld
cwtl
repz
add
push
cmc
fcomps
push
mov
cwtl
and
outsl
clc
cmp
jmp
adc
je
pop
lar
das
mov
test
test
jmp
rcll
mov
int
push
push
in
and
aas
pop
adc
addps
pop
mov
add
jns
stc
or
in
mov
lock
orl
andb
adc
in
jae
out
mov
add
mov
push
mov
push
mov
mov
mov
cli
in
mov
ret
mov
or
jg
stc
adc
in
leave
inc
mov
vsqrtpd
mov
lods
inc
push
je
pop
test
fwait
push
and
and
cmp
pop
adc
inc
cwtl
nop
in
jo
and
or
sahf
xchg
push
aad
mov
divl
aad
mov
push
mov
sub
shl
sahf
or
mov
imul
cwtl
jl
movsb
or
push
aaa
imul
jle
clc
lret
lahf
lds
es
mov
pop
cmpsl
push
mov
lods
inc
sbb
out
aas
jle
out
mov
sub
xchg
or
inc
nop
mov
mov
xor
mov
pusha
xchg
nop
inc
xorl
leave
cmpsl
pop
scas
imul
xor
sti
sar
dec
dec
icebp
popa
icebp
sub
in
sahf
pop
pop
je
and
and
lods
jae
cmpsl
movsl
imul
cltd
int3
bound
pop
add
filds
insl
sub
shrb
fldl
out
cli
push
push
jge
mov
loopne
rclb
add
out
lods
insl
mov
int
inc
jle
movsb
cld
cmp
test
add
mov
movb
test
mov
xchg
popa
fldenv
cli
leave
mov
mov
adc
xchg
in
mov
rcrb
outsb
inc
int
mov
hlt
adc
xchg
lret
xchg
mov
aas
subb
lahf
sahf
mov
cmp
or
outsl
insb
push
pusha
lea
lods
cmpsb
sub
inc
js
into
insb
icebp
rclb
scas
stos
inc
outsl
std
lods
fimull
cmp
mov
lea
pop
mov
mov
icebp
movsb
lods
mov
adc
jg
sbb
pop
xor
push
sub
sub
sti
in
js
repz
add
mov
adc
lret
iret
std
test
pop
sub
mov
in
ret
test
adc
and
stos
ret
mov
mov
xor
or
ds
lods
movsl
in
or
fisubl
jge
pop
popl
jl
add
push
syscall
xor
aaa
aaa
test
cmpsl
xlat
mov
mov
pop
and
xchg
and
es
xlat
std
aam
arpl
or
ja
dec
cmp
rorl
shll
xchg
xchg
jo
mov
xor
mov
and
inc
lret
arpl
jl
mov
in
or
fisttps
popa
sub
in
jge
mov
shll
add
sub
repnz
lahf
xchg
fsubrl
ret
js
sbb
add
es
in
loope
iret
pop
int3
mov
mov
shl
popa
lret
int3
push
mov
dec
cmpl
idivb
xchg
mov
out
mov
mov
push
ret
xchg
test
jnp
jo
mov
inc
or
out
cmp
xlat
pop
push
adc
rcll
inc
decb
cmp
lds
and
icebp
adc
fwait
or
dec
pushf
movsb
mulb
decl
add
pushf
jae
mov
out
pop
in
and
or
sub
loope
mov
iret
negb
rorb
or
mov
in
scas
and
pop
jmp
inc
cs
ljmp
xchg
mov
add
jmp
shlb
cltd
lea
cmp
daa
or
mov
adc
ss
stos
pop
sub
add
mov
mov
pop
or
mull
add
push
mov
xlat
adc
mov
cmc
xchg
lret
daa
mov
stos
or
loop
test
and
push
int3
out
mov
mov
cmp
into
push
xor
sbb
jl
xchg
aas
mov
mov
stos
cmp
mov
neg
pop
mov
dec
outsl
lret
cmp
lahf
dec
test
and
movsl
shrl
dec
push
adc
lcall
lock
jp
loopne
xor
fisubrs
xor
mov
dec
scas
push
mov
sub
mov
and
mov
popf
jmp
mov
jb
mov
out
mov
or
out
and
jle
call
cmp
mov
push
cmpsb
enter
mov
ret
pusha
xchg
mov
mov
scas
jg
stos
call
inc
es
leave
addr16
in
sub
adc
mov
ss
ss
dec
xor
lcall
mov
jecxz
mov
and
je
mov
push
out
fsubrs
mov
cmpsl
nop
lods
push
push
call
fsubr
mov
lret
sbb
sbb
lahf
test
cltd
insl
mov
mov
mov
loop
nop
aam
sbb
mov
pop
and
in
inc
xor
add
sub
mov
or
dec
fadds
or
inc
push
loop
test
dec
repnz
adcb
aas
fnstcw
jnp
inc
cltd
aad
jns
pop
ljmp
jne
jl
sarb
and
xor
insb
sub
int
push
loop
mov
push
ljmp
and
mov
testl
push
jnp
pop
test
sbb
or
mov
xor
pop
subb
pop
sbb
xor
xchg
aad
jl
xor
ss
mov
xchg
and
jnp
dec
shll
jo
shr
push
outsb
cmp
mov
popa
ret
mov
ss
daa
out
arpl
mov
arpl
xchg
or
testl
mov
mov
out
sbb
and
mov
stc
movsl
pop
push
xor
call
inc
dec
subb
jg
bound
das
push
sbb
xor
sub
js
bound
xor
or
jo
call
iret
fwait
out
xchg
push
jns
cmp
aas
sahf
test
and
addr16
imul
mov
mov
adc
push
mov
out
loopne
inc
or
call
rorl
call
push
addr16
and
nop
jge
mov
xchg
loopne
jo
idivl
jnp
push
add
gs
cmc
xchg
and
scas
lods
jmp
jno
xchg
add
sbb
addb
shlb
push
mov
mov
mov
shrl
and
loope
cld
and
mov
les
xor
bound
pop
push
sub
mov
jne
mov
adc
pop
and
insl
or
adc
jno
test
in
fmulp
push
jnp
test
movsb
xor
xchg
outsb
cmp
cmpsl
adc
inc
inc
imulb
jl
lret
mov
jae
add
subl
call
dec
inc
adc
cs
add
faddp
mov
and
fucomip
mov
jmp
and
sbb
jno
push
dec
rcl
aam
add
mov
jge
cwtl
xchg
inc
pop
mov
sub
adc
push
stos
sbb
adcl
clc
sbb
ss
jecxz
pop
adc
sub
ret
movsb
sub
incl
push
daa
mov
xor
pop
adc
ja
pop
dec
lcall
push
xor
insb
ljmp
sub
stc
push
mov
sub
mov
inc
jmp
inc
cmpl
enter
outsb
inc
pop
adc
in
push
lret
pop
or
test
stc
test
test
pop
cmp
rclb
jge
sub
cltd
fstl
jge
shl
push
sbb
fwait
mov
push
pop
out
aad
aam
jl
and
pop
xor
test
push
inc
xor
sub
inc
and
inc
loop
loopne
aas
push
pusha
cmc
imul
push
test
xor
cli
mov
sbb
out
or
or
xor
xchg
cmp
push
stc
xor
cltd
cltd
rolb
ja
addr16
dec
inc
sub
push
lret
push
push
je
jbe
test
pop
sbb
jmp
inc
inc
js
mov
dec
lea
push
ret
pop
xchg
hlt
jmp
mov
fs
mov
mov
dec
mov
and
and
push
mov
scas
ljmp
pop
jecxz
pop
das
fwait
push
cmpb
int
shlb
dec
cmp
and
outsb
cld
in
dec
xchg
sbb
les
ja
xor
imul
sub
loopne
lahf
xchg
out
adc
lret
xor
xor
mov
sahf
das
insl
xchg
loopne
or
ja
rorl
mov
shll
mov
adc
push
outsl
call
adc
push
aaa
inc
xchg
adc
sub
cmc
scas
test
and
xchg
pop
cmc
mov
xor
scas
jbe
inc
in
stc
aas
cwtl
sti
out
faddl
mov
adc
jb
icebp
stos
mov
and
ret
data16
sbb
cmp
into
push
sub
mov
dec
adc
arpl
sbb
adc
jbe
xchg
cs
stos
mov
push
lahf
xor
adc
ss
jmp
and
pop
xor
lret
mov
ds
adcl
pushf
mov
incl
mov
ret
fmuls
adcl
lods
outsl
cmpsl
rclb
int3
shrl
mov
mov
mov
xchg
fisubrl
int3
cli
stc
and
xor
or
sbb
loope
sub
inc
daa
icebp
inc
jge
mov
roll
sbb
call
in
jp
test
mov
xor
lea
sahf
nop
push
cmpsb
mov
xlat
or
xor
or
nop
jns
loope
ret
clc
out
jmp
mov
mov
jne
mov
xchg
adcl
outsb
aam
imul
fidivl
fs
lea
jp
in
scas
cmpsb
pop
cmc
pop
adc
lret
adc
enter
clc
sub
or
mov
push
mov
jl
jnp
add
repz
mov
sbb
jb
xor
xchg
xor
pop
test
les
scas
arpl
jle
xchg
push
shll
push
and
call
adc
and
repz
push
push
aas
jmp
rcll
add
sbb
jo
arpl
jb
cli
xchg
or
int3
movsl
mov
sub
xlat
stc
xchg
dec
inc
and
sbb
xor
xchg
out
xchg
mov
inc
rcrb
mov
hlt
je
rolb
pop
mov
or
lods
cmp
push
xchg
pusha
adc
nop
es
inc
push
lods
pop
sbb
cmp
adc
andl
add
je
inc
mov
push
mov
ss
xlat
jmp
fwait
popa
push
or
call
or
xchg
rcrb
stc
jbe
sub
stos
in
pop
add
lea
inc
mov
mov
sub
push
xchg
ja
outsb
or
or
popf
pop
cmp
pusha
add
cmpb
or
add
cmp
repz
xchg
call
mov
mov
xchg
ds
clc
mov
push
pop
jb
jbe
repz
stc
not
rolb
jo
xor
push
xchg
xor
xchg
dec
pop
insl
fimull
lock
lea
adc
add
les
and
jmp
mov
cmp
stos
dec
sbb
out
pop
jmp
cltd
dec
cmp
or
inc
or
ja
sub
fistps
dec
mov
dec
mov
in
add
pop
mov
test
adc
pop
out
xchg
lea
add
mov
xchg
stos
pop
or
dec
cmp
sbb
push
lret
flds
daa
push
push
pusha
xor
arpl
mov
ret
popa
push
movsb
or
out
into
cs
fcomps
lea
das
cmp
inc
mov
sbb
rclb
hlt
aad
insl
movsl
mov
push
dec
pop
xchg
xlat
add
mov
imul
js
arpl
fisttpll
cmp
mov
inc
push
pop
mov
outsl
out
dec
mov
or
cmpsb
outsl
pop
out
xchg
add
push
or
pushf
ficompl
lds
out
sbb
cmp
push
iret
daa
or
ret
jle
cli
mov
sub
cmpsl
pusha
orl
das
mov
mov
mov
shlb
sbb
in
cli
push
jge
pop
push
in
push
je
stc
lret
cmp
push
out
repz
cmp
jmp
inc
lahf
add
mov
push
ljmp
fld
cmp
cmp
mov
pop
push
mov
mov
inc
int
ja
push
arpl
inc
pop
cmc
sbb
lret
sbbb
orb
cmp
out
mov
fisubrl
dec
sbbb
mov
mov
int
cltd
mov
fisubs
dec
sti
test
inc
adc
stos
lea
repz
mov
xor
imul
pop
cmpsl
mov
push
add
sbb
jbe
je
xor
dec
pop
xchg
inc
xchg
xor
dec
xor
leave
inc
cmc
jb
es
dec
xchg
stc
push
out
dec
pop
out
stos
xlat
add
fimuls
cmp
movsl
out
xor
and
addb
repz
push
in
pop
jp
jnp
in
fldl
je
aas
cmp
cwtl
push
xor
xor
push
stos
pop
xor
pop
lret
fs
mov
add
cs
insb
cmp
jno
dec
xchg
cli
pusha
xchg
loope
cmpsb
push
call
mov
cmp
dec
aas
repnz
cmpsl
dec
push
aaa
and
cmp
add
call
jnp
ds
mov
lcall
sub
xor
adc
mov
enter
mov
shr
stos
jmp
push
xchg
mov
cltd
push
mov
insl
rcrb
aam
icebp
xor
jmp
sbb
addr16
xchg
mov
je
popa
imul
insl
int
fs
jb
xchg
mov
sub
mov
xchg
fstpt
adc
mov
push
das
ds
fwait
push
dec
cmp
or
push
jbe
add
rolb
xchg
xor
mov
xchg
adc
icebp
scas
sub
pop
ds
in
shll
mov
pop
and
or
xor
push
cmpsl
rcrl
push
pop
mov
sub
xor
cmpl
scas
adc
or
sbb
mov
and
push
mov
xor
mov
sbb
aaa
or
pushw
test
flds
mov
imul
stos
mov
mov
incb
popa
fs
js
jae
jae
mov
mov
sbb
mov
sarb
lods
inc
cmpsl
push
stos
gs
and
pop
into
das
rclb
add
lahf
and
psubd
shl
fwait
xchg
aam
push
lods
aam
jl
cmp
imul
adc
push
cltd
dec
out
notl
or
test
jae
cwtl
mov
aas
or
loopne
es
and
cwtl
jge
movsl
aas
lahf
dec
jbe
ret
dec
cltd
cmp
imul
frstor
push
inc
cld
out
aad
stos
in
shll
inc
out
xor
push
cmp
mov
mov
shll
dec
ror
adc
xlat
inc
arpl
inc
test
arpl
mov
addr16
enter
data16
test
cmp
mov
aaa
aam
testl
repz
test
mov
jbe
fsubrl
cltd
dec
jle
mov
push
fsub
inc
jo
inc
jno
jl
cmp
or
cld
xchg
out
sub
xchg
mov
pop
shl
cmpsl
or
jecxz
aad
aas
and
and
data16
jo
pop
cmp
outsb
inc
or
dec
hlt
jmp
nop
ss
iret
stc
mov
pop
out
cmp
repnz
mov
sbbb
pop
je
pusha
mov
jmp
sub
ljmp
push
push
adc
jmp
sbb
leave
rcrb
xor
int
js
stc
enter
and
mull
mov
rcll
inc
adc
xchg
cmp
loopne
jne
sbb
xchg
xor
test
cld
jg
pop
and
pop
pop
cld
cmpsb
hlt
sarl
lods
sbb
fldl
hlt
xchg
mov
add
xchg
lahf
ja
ja
add
into
add
pop
jge
push
cmp
mov
xorl
loop
rcl
lods
pop
fcomps
mov
fsubrl
sbb
rolb
jbe
and
xchg
int
xchg
sub
aad
adc
jl
and
and
imulb
xlat
add
jno
fisubs
arpl
repz
out
or
fs
lahf
inc
xchg
jo
imul
adc
cmp
mov
aam
inc
aam
cmpsl
xorl
mov
add
add
outsl
outsb
mov
pop
cmp
enter
cli
test
jle
addl
lea
outsl
sbb
jnp
das
pop
jne
inc
mov
jge
xor
shlb
push
jmp
mov
mov
clc
push
test
ja
mov
cs
jl
xchg
insl
repnz
int
mov
push
pop
aas
stc
jns
addr16
das
lods
pop
lock
or
push
ljmp
pop
sbb
mov
mov
xchg
push
pop
std
in
mov
mov
lret
mov
inc
mov
sbb
sahf
dec
hlt
jle
cmp
pop
fdiv
mov
cwtl
dec
nop
mov
cmp
pop
push
enter
icebp
je
add
pop
cs
les
jnp
cmp
jo
add
pop
in
loop
dec
std
lock
ficoms
cmp
cmc
push
sbb
fidivrl
sub
stc
jmp
daa
mov
cld
loop
jb
push
dec
mov
mov
add
fs
mov
shll
inc
imul
ret
lcall
dec
pop
and
jge
ds
cmp
std
lods
iret
and
sub
and
test
mov
cmp
ret
stc
insl
add
and
jl
and
lods
mov
fnstenv
test
mov
cld
mov
or
push
pushf
xor
or
mov
push
xchg
lret
push
jbe
xchg
shll
jbe
in
and
pop
cmp
xor
jl
mov
and
lock
jp
sub
mov
mul
icebp
pop
fs
sbb
xorl
jnp
jbe
xlat
iret
sahf
adc
xlat
inc
push
jne
dec
mov
xchg
xor
cmpsb
mov
addr16
mov
das
jno
clc
insb
lds
gs
xor
rcrb
cmp
dec
adc
int
enter
sbb
das
pop
mov
sbb
leave
out
add
pop
and
cmp
stc
jno
es
cmp
push
mov
push
mov
jbe
mov
xor
push
mov
mov
test
in
mov
xlat
ja
jmp
adc
and
jnp
es
cmc
ds
mov
and
mov
cmp
jp
pusha
mov
jbe
xlat
inc
outsl
xor
daa
mov
dec
in
sbb
ss
pop
jb
es
sub
hlt
dec
test
test
imull
add
ror
insl
cmp
fstpt
mov
jmp
cmpsl
std
movb
sub
call
cmpsb
fsubp
pop
inc
jbe
adc
int
mov
data16
in
hlt
add
or
push
push
hlt
dec
dec
mull
mov
push
mov
xchg
xlat
ret
push
dec
in
pop
mov
scas
push
leave
jno
inc
or
les
outsb
dec
iret
mov
mov
test
fwait
xor
mov
mov
stos
mov
lea
popf
decb
cwtl
mov
pushf
inc
mov
mov
inc
rorl
inc
mov
and
out
push
call
jge
add
xchg
sub
inc
xchg
ret
add
push
jl
lahf
test
jnp
cs
add
bound
popf
dec
and
inc
cmpsl
loop
insl
icebp
dec
add
lods
fisttpl
sub
stos
in
sti
sldt
fldt
repz
cmpsl
test
sub
and
pop
cwtl
dec
and
cltd
aas
pop
jbe
xchg
filds
orl
sub
push
imul
rcrb
sub
dec
les
add
insl
fidivl
jnp
leave
subb
mov
in
lds
inc
inc
adc
sub
test
xchg
out
rcll
xchg
xchg
sbb
icebp
outsb
mov
cmpsb
or
sbb
dec
xor
dec
insl
dec
mov
in
test
xchg
cwtl
andl
pop
sub
inc
mov
scas
and
push
sub
popa
repz
inc
sbb
aad
test
fcmovbe
lock
or
lahf
pop
sub
dec
cmpsb
stos
scas
hlt
inc
push
orl
pop
mov
movsl
xor
pop
pop
imul
cld
std
sahf
test
and
cmc
fnsave
sub
and
jb
lahf
cli
adc
inc
mov
mov
js
shlb
cld
cmp
loop
xchg
inc
push
mov
fistps
test
imul
scas
lock
inc
out
lock
or
lret
mov
bound
loope
or
sbb
xor
jmp
fcoml
sbb
test
mov
ja
push
lret
or
aam
cld
push
push
jo
and
daa
ljmp
sub
adc
repz
mov
aaa
cli
push
push
icebp
sub
pushf
aaa
add
add
xor
sbb
imulb
push
aaa
out
lcall
ret
aam
mov
popf
cli
adc
scas
imul
cli
add
adc
ret
sbb
cld
mov
add
inc
rorb
xchg
stos
scas
aaa
cmp
push
jp
sub
pop
mov
sbb
xor
rcrb
movsb
in
shlb
sahf
mov
cwtl
jns
addr16
adc
jl
sar
xchg
das
pop
inc
sub
aaa
dec
or
aam
cmp
mov
out
xor
rolb
push
aas
cli
xchg
rcrl
mov
in
jb
aaa
scas
in
push
fsubrs
dec
lock
cmp
mov
repnz
inc
cmpsl
jnp
cwtd
ljmp
rolb
mov
push
aam
pop
push
fisttpll
xchg
pop
dec
movsl
jne
xchg
dec
mov
subb
clc
out
and
das
jbe
outsb
rcrb
push
xchg
cmpsb
cmp
aas
cmp
jne
dec
ficomps
mov
sahf
pop
pusha
or
dec
sbbl
adc
and
push
out
jb
or
push
nop
xchg
adc
shlb
lods
popf
push
add
out
pop
and
insl
add
iret
or
push
scas
ret
lret
in
ret
lea
sub
mov
jl
cmp
mov
mov
jae
lret
or
mov
mov
jbe
or
add
call
scas
loopne
cld
jb
scas
or
addr16
adc
mov
test
fidivrl
jae
and
sbb
outsl
sub
mov
cmp
leave
add
cmpsl
cld
push
cltd
int3
arpl
fwait
stc
xchg
test
push
xchg
movsl
mov
mov
dec
and
andl
stos
inc
sub
adc
xchg
mov
sar
xor
scas
or
insl
in
aas
pop
mov
lret
in
loopne
mov
inc
jmp
fdivl
or
sbb
jb
jge
ljmp
mov
push
adc
mov
sbb
sub
pop
pop
pop
ret
pop
dec
pop
mov
jecxz
fstp
cld
dec
insb
mov
loope
call
out
cli
adc
mov
into
shlb
sar
or
ss
ret
sahf
push
cli
call
cmc
jle
addr16
bound
jg
out
ljmp
mov
out
jecxz
fsubrl
stc
jmp
pop
adc
adc
daa
pushf
lahf
movsb
adc
or
fabs
call
aam
or
push
xchg
jo
lahf
jb
loop
loope
lods
mov
jl
pop
ret
and
fists
fsubr
test
je
aaa
inc
ss
leave
int3
jnp
xor
sbb
lcall
lods
js
cmp
aam
mov
movsb
pop
or
stc
sahf
inc
push
shll
nop
sbb
cltd
out
jbe
dec
pushf
lods
ljmp
add
adc
in
into
add
xchg
dec
fnstenv
hlt
sbb
mov
jb
adc
fs
xchg
or
ret
push
dec
pop
leave
inc
xchg
andl
roll
dec
xchg
xor
mov
push
adc
push
xor
mov
sub
loope
cmp
aas
inc
pop
sub
int
inc
push
in
sbb
sbb
fsubrp
lock
fidivrl
lods
das
push
push
sub
in
pushf
std
roll
sub
loop
daa
xor
shrb
mov
arpl
int
xchg
push
sub
cli
push
repz
pop
out
pop
jae
shl
aad
dec
out
pop
sub
outsb
inc
mov
cmp
mov
testl
add
cmpsl
push
pushf
sbb
mov
push
ret
jmp
je
sbb
ss
jb
dec
clc
xor
or
lahf
mov
daa
push
jne
andl
addr16
xor
xchg
adc
xchg
imul
xchg
lock
xor
mov
sahf
jge
mov
pop
sbb
xor
loop
insb
add
dec
xor
lods
sub
stos
sub
sub
nop
sub
mov
aam
jne
mov
or
or
add
les
dec
lcall
in
hlt
iret
stos
cmp
mov
push
dec
xchg
xchg
shrl
scas
dec
pop
cmpsl
stos
sub
inc
fwait
add
cwtl
outsl
pop
xchg
cmpsl
aam
mov
aad
mov
enter
fcomi
sbb
out
sub
sbb
loop
or
push
jbe
push
in
pop
aam
mov
sub
rcll
push
outsb
add
jle
pop
add
test
adc
daa
push
mov
adc
out
adc
dec
xorb
ss
jmp
mov
xor
mov
stos
xchg
inc
jmp
lcall
xchg
xchg
loope
pop
cmp
mov
add
icebp
inc
dec
mov
or
je
je
mov
and
int
pop
and
dec
and
out
inc
jno
xor
jp
das
mov
jp
pop
xor
sbb
movsl
jecxz
sub
test
bound
push
adc
icebp
inc
shrb
lock
mov
mov
mov
movsb
jge
pop
cltd
pop
call
sbb
jb
add
mov
add
cmpsl
stos
and
add
shll
shll
push
adcb
jno
nop
jno
pop
xchg
loopne
in
lcall
pop
xchg
aas
ds
movsb
adc
lahf
loope
fwait
mov
testl
int3
shll
popa
push
mov
shrl
pop
cmpsb
js
insl
xor
mov
xchg
ds
dec
bound
adc
ret
add
mov
andl
mov
aaa
adc
jp
movsl
repz
fs
testl
cld
adc
pop
push
push
jnp
pop
lret
rorb
fcompl
dec
xor
pushf
and
jl
out
push
mov
das
push
lods
inc
mov
mov
shrb
das
jmp
push
push
jo
cmp
loopne
arpl
dec
pop
aas
mov
add
or
test
sarl
mov
adc
pop
push
outsl
sbb
ljmp
fisttpll
pushf
dec
insb
push
out
int
mov
cmp
scas
movsb
rorl
mov
movsl
cmp
mov
or
push
xor
cmp
stc
pop
aas
mov
lea
lods
fwait
sub
ret
call
mov
ljmp
retw
mov
and
add
adc
xchg
xor
push
sbb
jge
xor
sbb
icebp
adc
ds
cmp
jg
push
shll
in
or
ljmp
jne
lea
mov
sarb
inc
arpl
xchg
push
mov
fcmovb
push
mov
leave
rcll
push
fbstp
negb
repz
dec
jg
dec
mov
mov
dec
in
lret
das
pop
push
jp
sub
sub
mov
mov
imul
loopne
shlb
jbe
mov
xchg
and
sub
repnz
pushf
push
sub
pop
shlb
adc
outsb
rcll
inc
jg
lods
lret
loop
ret
das
mov
fisttps
jae
jmp
es
xor
fistl
movsb
sbbl
add
jg
mov
arpl
sbb
ret
mov
xor
repnz
fists
fcompl
lret
repnz
int
mov
xor
dec
cmp
xor
jne
sub
aaa
popa
and
dec
outsl
and
pop
ss
es
ljmp
mov
lds
xchg
fs
imul
push
mov
mov
jge
jge
call
mov
loopne
testl
adc
dec
out
lcall
mov
pusha
nop
push
mov
pop
cmc
and
cmp
xor
lret
fimull
icebp
sub
fnstsw
aas
cli
inc
sub
stos
mov
jl
xor
push
mov
xchg
xchg
xchg
mov
sahf
add
push
mov
dec
xor
sbb
call
jb
cmc
cmp
mov
jb
cmc
mov
out
sub
jno
insb
mov
mov
mov
imul
sub
in
jl
imul
mov
out
fimuls
xor
or
aas
cmp
sbbl
jp
dec
mov
je
push
rorl
xchg
sub
pop
add
push
ljmp
imul
jnp
ret
xchg
xor
rorl
cmp
or
add
inc
mov
lds
jns
xchg
jns
push
jg
scas
fsubl
xor
stos
mov
addl
dec
dec
mov
mov
cwtl
movsl
sub
push
clc
dec
add
out
lock
xor
cmp
sub
in
test
pop
cmp
dec
cli
inc
xor
cmp
fidivrl
bound
flds
lock
mov
add
push
je
test
mov
pop
or
sarb
ljmp
mov
xlat
sarb
lods
mov
inc
arpl
hlt
mov
ljmp
sbb
pop
popa
or
inc
loopne
push
jb
xor
movsb
pop
add
ret
orl
lcall
jmp
lahf
dec
shrl
xor
out
fwait
jl
dec
jne
or
mov
cs
or
lcall
adc
xchg
jb
xor
sbb
movsl
and
lods
mov
out
xor
lods
sub
arpl
test
pop
test
int3
jb
addr16
jecxz
adc
dec
add
mov
add
shl
dec
call
dec
cwtl
sub
or
jmp
js
pop
sub
push
dec
mov
lret
xlat
xchg
xchg
push
cmc
leave
dec
inc
adc
jl
jp
or
testl
lods
push
dec
fsubrl
aas
imul
xchg
jnp
cmpsb
push
push
out
out
testb
mov
gs
lods
cmp
mov
sbb
cmp
das
daa
aad
or
adcl
loope
rcl
std
nop
dec
loopne
mov
fstpt
in
mov
test
sbb
loop
out
call
sar
xor
pop
ret
bound
xchg
addr16
mov
fnstsw
aad
mov
dec
pop
aad
data16
fdiv
mov
or
sbb
shlb
adc
aaa
lock
int3
ds
or
imul
pop
push
mov
inc
sub
es
jmp
rcrl
sarb
jo
cltd
adc
bound
faddl
xchg
aam
dec
mov
jmp
mov
sub
jg
cmp
ds
mov
mov
cmpsb
cs
or
scas
inc
test
dec
rcll
add
pop
and
pop
dec
xor
sbb
sub
inc
or
les
lret
int3
movsl
and
sub
push
and
mov
xor
popa
mov
popf
lret
sub
ljmp
in
sbb
push
xor
fistpl
push
and
inc
sbbl
imul
nop
call
int
mov
and
lret
jbe
and
push
jp
orb
das
pop
nop
mov
movsb
jle
push
idivb
ds
cmp
rcrb
mov
daa
mov
cmp
mov
ret
sub
pop
mov
cwtl
stc
sub
popf
push
add
pop
stos
lret
mov
dec
test
loope
enter
popf
or
or
adc
jb
mov
mov
or
or
stc
jmp
ljmp
pusha
insl
push
js
clc
ret
insl
and
mov
inc
fiadds
pop
jle
pop
cmpsl
push
and
adc
dec
sbb
lret
mov
out
jp
and
adc
test
sub
aam
movsl
subb
sub
nop
subb
mov
lcall
sbb
xchg
mov
adc
fidivrl
cld
mov
jecxz
sbb
push
pop
cmp
push
xlat
popf
xor
out
movsl
imul
insb
rorb
or
test
in
and
mov
and
mov
daa
daa
xchg
sub
inc
cmp
mov
shll
cmpl
inc
cmpl
rcrl
fwait
or
inc
add
mov
pop
mov
inc
lods
sub
jg
les
lods
ret
push
xor
lods
call
jge
inc
jecxz
cmp
invd
adc
and
cmp
fdivl
push
test
fsubrs
icebp
add
jmp
test
mov
and
in
test
je
jge
das
push
jle
pop
rolb
jl
or
dec
sahf
aad
pmaddwd
xor
hlt
insl
int3
addb
js
pop
je
clc
filds
jne
fists
bound
xorl
cmp
ds
fptan
sbb
hlt
xchg
dec
icebp
sti
dec
ret
call
jmp
fdivrl
cmp
aas
push
mov
jno
jnp
xchg
jbe
das
mov
inc
sub
jae
jnp
add
fsubrs
lret
arpl
stos
pop
dec
pop
lcall
jnp
shrb
pop
mov
xchg
and
movsl
push
dec
cmp
mov
inc
push
rorl
mov
xchg
inc
lret
push
mov
lret
xor
pop
fwait
outsb
cmpsl
inc
jle
cltd
add
jae
repnz
cmp
js
push
enter
lret
call
pop
xchg
xor
sub
mov
add
mov
adc
outsl
pop
lea
xlat
adc
int
int3
or
mov
lods
add
pop
icebp
shll
jne
and
int
pop
sbb
cmp
in
adc
repz
in
xlat
popa
push
jl
les
jno
iret
pop
and
mov
inc
lock
push
add
loope
cmp
icebp
adcb
xor
mov
into
iret
in
sti
aaa
jae
cld
cmp
dec
lea
jnp
je
inc
and
jbe
mov
add
rcr
pop
lahf
inc
es
mov
icebp
out
cld
fstpt
sub
or
cmpb
inc
push
mov
mov
xchg
adc
pop
fwait
mov
arpl
shlb
xlat
sub
leave
cmp
ss
popf
jb
sahf
add
js
mov
stc
bound
nop
pop
adc
add
scas
or
repnz
inc
sahf
ja
mov
inc
jbe
fdivs
cmc
cmp
push
and
and
pop
in
adc
jae
xchg
cmc
pop
push
adc
addr16
xor
pop
inc
and
add
insb
xchg
sub
or
cwtl
mov
int3
dec
cmp
dec
mov
jmp
icebp
test
push
pop
cmpsl
dec
lret
pop
add
xor
adc
push
push
js
in
fdivrl
cmp
xor
push
lret
and
in
xor
sub
mov
mov
jae
cmp
out
sub
adc
cmpsb
mov
and
xor
pop
add
jns
cmp
mov
xchg
imull
push
addb
push
adc
pop
out
inc
mov
rclb
and
pop
xchg
data16
pop
and
dec
cmpsl
mov
test
fxch
aad
negb
push
jg
repz
ss
gs
and
sahf
lods
pop
les
sarb
mov
xchg
cli
aaa
cmpsl
data16
mov
fdivs
iret
xor
mov
cmp
cmp
jo
cld
sbb
clc
inc
hlt
xlat
pop
sub
add
or
out
das
jp
mov
das
fimuls
mov
and
into
fwait
test
mov
cmpsb
sub
xor
dec
out
icebp
iret
ss
xchg
mov
gs
inc
out
fisubl
mov
xchg
mov
jg
or
lret
movsl
jne
popa
adc
insb
or
or
xchg
mov
or
sbb
xor
xchg
dec
sbb
cltd
adc
lret
addr16
push
enter
add
cmc
fimuls
aam
pop
mov
and
mov
jnp
cmp
ss
sbb
cmp
add
out
or
faddp
and
mov
mov
xor
sbb
fs
mov
sbb
jnp
cltd
xor
dec
sbb
mov
popa
in
insl
mov
jmp
lahf
aaa
fists
test
ja
mov
les
cmc
insb
hlt
adc
fwait
jecxz
pop
adc
mov
lods
cli
hlt
scas
adc
movsl
dec
mov
pop
enter
or
ret
movsl
jae
pushf
xor
jle
hlt
add
faddl
cmp
lahf
icebp
sarb
js
inc
mov
add
fnstsw
icebp
mov
xchg
sarb
mov
stos
enter
aad
and
sbb
jnp
in
arpl
jmp
roll
mov
mov
or
xor
push
imul
pushf
add
in
sbb
inc
pop
or
jno
inc
push
scas
cmpb
pop
adc
jbe
lea
inc
push
mov
iret
mov
inc
xor
or
pusha
mov
outsl
cmpsl
test
add
jne
inc
insl
fsubrs
push
sub
repnz
lods
sti
shll
xchg
push
das
add
popf
push
sub
callw
pop
into
jg
les
pop
sbb
andl
pop
or
cmp
dec
in
mov
adc
cmp
rcll
and
and
jns
sub
dec
and
cmp
jns
pop
bound
jne
call
mul
test
lock
outsl
mov
and
mov
add
insl
and
bound
mov
xor
jmp
xor
lods
cmp
aam
mov
addr16
add
popf
cmpl
xchg
xchg
mov
shrl
hlt
lods
dec
sbb
mov
out
dec
xchg
sbb
cwtl
mulb
enter
int
jg
movsl
inc
lods
mov
sarl
jg
pop
lret
inc
fincstp
push
adc
sbb
cmp
sub
arpl
jae
xor
dec
stos
cltd
stos
xor
mov
inc
mov
or
es
xchg
mov
lret
lock
xor
dec
cwtl
and
jg
xchg
shl
scas
jecxz
je
or
xchg
les
xor
add
or
push
xor
or
nop
xor
and
mov
cmp
stc
inc
aas
cmpsl
push
mov
jnp
lahf
and
lds
mov
mov
add
enter
pop
and
subb
aam
jo
add
mov
jl
or
rorb
subb
aam
fimull
cld
das
cltd
pusha
ss
negl
jecxz
clc
clc
fstl
push
mov
fstps
add
popl
jmp
xchg
test
inc
add
mov
cwtl
or
sahf
xor
mul
jmp
call
mov
ljmp
js
push
and
sbb
xchg
mov
pop
lcall
or
jg
out
scas
cld
in
lock
sbb
mov
and
dec
pop
cmp
jl
jne
lea
or
xor
mov
ret
aad
mov
jle
xchg
loop
loopne
inc
jb
inc
xlat
cltd
mov
clts
fmull
test
mov
and
sbb
in
movsl
daa
in
out
popa
xchg
movsl
xchg
shll
or
bound
lds
lret
mov
lret
jns,pn
fbstp
fisubrl
and
jnp
arpl
sbb
lcall
test
xor
aad
cmpl
lret
pop
sbb
mov
adc
scas
push
inc
push
cwtl
xor
lock
js
mov
push
lds
lods
sbb
cmp
mov
icebp
fsub
cmpsl
outsb
testb
sbb
mov
popf
jne
rol
outsl
insb
nop
movsb
iret
dec
sbb
add
cmpsl
pop
aam
cmp
movsl
jb
outsb
push
mul
fs
add
nop
repz
xchg
push
cli
test
xchg
sub
test
dec
cmp
mov
in
pop
lahf
add
ja
cmpsb
xor
xchg
incl
inc
lods
inc
pop
int
faddl
adc
js
clc
cs
jbe
cmpsb
xchg
xlat
mov
sub
negb
les
dec
loopne
cmp
adc
movsb
mov
xor
and
jmp
loop
mov
pop
jno
jb
mov
cmp
in
lret
mov
sti
lea
xchg
mov
fisttpll
cmp
outsl
das
adc
add
dec
xchg
jo
pusha
mov
and
sub
xor
cmp
mov
xchg
test
sub
push
or
fcoml
rorl
cmp
cmp
imul
sbb
adc
mov
stos
jae
loope
mov
je
into
stos
pop
xchg
lahf
cmpb
cmp
xchg
arpl
xor
cmp
ljmp
add
out
mov
pushf
mov
test
or
pshufw
jae
xor
popa
test
xchg
sbb
inc
push
mov
std
das
and
and
iret
ret
shrl
lock
jbe
int
cwtl
aas
jmp
mov
xchg
sti
aad
add
rcrb
mov
aam
cwtl
mov
xor
or
jb
xlat
or
jl
pop
lret
popa
adc
add
gs
orl
adc
insb
or
mov
push
shlb
lret
arpl
jb
add
cmp
and
loop
push
jge
xchg
cs
jge
popf
add
xchg
call
mov
lret
add
mov
mov
imul
and
arpl
negb
push
fdivl
mov
pop
enter
arpl
push
mov
mov
leave
pop
xor
mov
test
mov
inc
pop
sub
in
jmp
cmpsb
int
adc
mov
stc
adc
or
inc
dec
jo
jbe
rcll
sbb
jae
jo
in
ja
jae
xchg
mov
pop
shlb
pop
adc
mov
jo
push
jae
inc
popa
add
xchg
shrl
and
mov
adc
mov
out
arpl
sbb
inc
add
xor
fisttps
stos
out
fldl
xchg
cmpsl
add
pop
push
nop
loope
jp
or
push
add
jl
cmc
loope
mov
jnp
xor
js
xchg
je
clc
pop
movsl
mov
repz
test
ret
sbb
arpl
add
adc
pop
xchg
pop
incl
test
je
mov
pop
jp
add
dec
fsubrl
mov
xchg
inc
call
xchg
imul
push
inc
jb
push
popa
mov
pop
inc
xchg
pop
mov
ljmp
push
outsb
mov
inc
xchg
arpl
push
xor
push
push
repz
or
cmp
popf
js
ret
add
dec
addl
idivl
xor
shl
scas
adc
lods
icebp
mov
adc
mov
pop
cld
fiaddl
jae
sbb
test
leave
movsb
je
out
xor
fists
adcb
jbe
stos
mov
pusha
lahf
ljmp
test
mov
pop
push
dec
mov
lcall
dec
int3
jmp
adc
cmp
pusha
mov
out
inc
aas
dec
pop
add
call
aaa
push
fimull
inc
mov
pop
test
iret
lods
pushf
cwtl
mov
adc
es
or
adc
push
into
xchg
loope
jl
xor
in
push
nop
add
lret
sbb
lret
movsb
ds
enter
adc
cmp
test
and
sbb
jae
ficoml
jmp
movsl
xchg
lods
aaa
cmp
mov
std
or
mov
push
push
es
push
adc
mov
lcall
adc
int3
pop
ja
sbb
fcmovnb
lcall
loop
xchg
mov
add
ret
jl
ss
mov
roll
xchg
push
aad
push
fcmove
in
in
std
pusha
mov
cmp
sbb
lcall
neg
fnstcw
test
mov
daa
mov
and
xchg
das
outsl
pop
xor
jno
pushf
bound
inc
inc
sub
subl
mov
out
lods
aam
les
push
test
pop
add
pop
mov
push
sbbl
jno
push
pop
movsl
insb
push
jp
cmpsb
clc
mov
fsubrl
into
cmp
xor
stos
adc
into
inc
lds
int3
imul
adc
dec
dec
cld
gs
push
sahf
xchg
push
xor
out
fstpl
xor
add
dec
cli
std
push
movsb
orl
jg
jg
push
test
loopne
int
iret
movsb
push
leave
push
jbe
in
inc
mov
ljmp
cmpsl
jno
xor
repnz
test
and
mov
jne
lret
xor
push
cs
imul
imul
leave
outsl
add
repz
movsl
or
js
pop
out
popf
mov
fisubrs
xor
pop
cmp
mov
rcpps
adcl
sbb
cmp
or
leave
shl
mov
dec
sub
or
and
mov
cmc
push
adc
and
sbb
test
jl
dec
or
insb
sub
mov
aam
push
int
inc
lock
lahf
push
pop
dec
pop
rcr
pop
mov
in
inc
sub
push
xor
sub
test
jmp
into
stc
push
mov
imul
push
mov
xor
insl
xchg
fisubrs
add
push
stos
mov
push
cmp
and
imul
lods
data16
xchg
aam
dec
mov
int3
data16
shrb
adc
fnsave
rol
lods
sub
cs
jbe
movsb
dec
sub
push
mov
and
and
jne
fstpl
in
out
sbb
ds
scas
popa
jg
fninit
adcb
outsb
mov
daa
pop
div
jae
mov
insb
pop
push
iret
inc
jl
cmpsl
loope
fcoml
jge
out
sub
setns
test
es
pop
loope
mov
mov
mov
jge
push
xor
fisubrs
mov
xlat
mov
ret
popl
mov
sbb
fisubs
xchg
popf
int3
cltd
add
adc
pop
out
mov
inc
inc
adc
mov
icebp
arpl
repz
test
fbstp
mov
xchg
cmpsl
jecxz
popa
mov
mov
mov
inc
jmp
push
and
dec
inc
lods
push
dec
aam
call
xchg
inc
filds
lods
cmp
xchg
push
jl
in
repnz
mov
into
sub
jbe
xchg
add
test
test
jmp
push
das
dec
enter
fldl
les
out
stos
test
sbb
adc
mov
mov
lds
push
push
gs
jg
xchg
js
adcb
push
or
xor
in
repnz
lods
mov
sti
popf
add
adc
inc
push
std
dec
mov
dec
test
aad
mov
cmp
xor
sbb
mov
les
sub
xchg
icebp
popa
cs
lock
push
dec
jo
js
mov
pop
pop
lahf
or
mov
inc
xchg
or
test
insl
add
divl
sbb
jg
cs
inc
xchg
add
movsb
clc
sahf
fcomi
mov
lcall
inc
jle
jno
jo
cwtl
cli
push
add
outsb
dec
nop
and
mov
mov
or
rcrb
push
out
cli
leave
cmc
inc
movsb
notb
ftst
jmp
inc
cs
lods
or
cli
jne
inc
pop
cmp
mov
ja
inc
mov
jbe
test
popf
sti
pop
adc
mov
aaa
xchg
or
lret
lret
fisubs
fcomp
push
cmpsl
lock
sbb
xor
xchg
cwtl
dec
cwtl
mov
dec
fcmovb
xor
sbb
cli
and
push
sbb
insb
bound
lcall
incl
sub
ss
sbb
mov
shrl
lret
xchg
in
cmpsl
cmc
shll
xchg
jge
sub
in
loopne
inc
mov
pop
int3
inc
push
add
mov
cmpb
inc
loopne
mov
iret
lods
fldl
mov
jmp
out
rol
sahf
sbb
xor
cmc
sbb
call
cwtl
sbbl
andl
lcall
jne
mov
fs
dec
and
mov
arpl
cmp
test
sbb
sbb
push
jp
jae
sti
aas
xchg
mov
incl
add
xor
add
stc
xchg
sahf
stc
sub
dec
cmpsl
push
sub
xlat
sub
sub
mov
sub
xchg
fldt
loope
sub
stos
sub
xchg
ljmp
lret
daa
or
stc
add
ret
push
roll
inc
xchg
pop
or
icebp
push
and
and
pop
ret
xor
in
mov
push
and
repz
imul
lret
adc
push
pop
add
add
push
rclb
in
clc
neg
xchg
es
loopne
xor
lcall
and
push
or
fisttpll
icebp
std
in
push
pop
imul
push
add
mov
cmp
adc
inc
push
shrl
pushf
pop
pop
hlt
dec
jecxz
or
sub
mov
repnz
in
call
cmpsb
pop
lea
enter
adc
ror
loopne
xchg
inc
aas
xor
sub
sarb
pop
sbb
fnstcw
jle
jecxz
in
mov
stos
loope
add
jne
cwtl
xor
adc
cmp
jno
dec
or
pop
and
hlt
add
xchg
sbb
cs
add
push
int3
mov
adc
mov
popa
mov
rolb
mov
int
rolb
or
outsb
adc
and
mov
xchg
cmc
fs
add
pop
loop
test
sub
inc
dec
int
lahf
sub
test
ja
mov
gs
loope
dec
lods
gs
scas
loopne
or
mov
mov
aad
add
aam
repz
sar
je
shlb
and
jo
mov
sahf
cli
das
sbb
fsts
mov
ret
iret
push
je
jp
lcall
inc
imul
mov
or
xchg
dec
add
xor
ljmp
addb
or
push
fisttps
ret
scas
sahf
std
les
and
mov
fcomip
xor
pop
out
dec
mov
test
bound
sti
fsubr
std
mov
test
shrl
push
in
pop
lret
push
in
push
mov
inc
sub
xchg
mov
xor
dec
mov
and
or
cmpsb
pop
xchg
sarb
es
push
pminub
icebp
iret
test
sub
xchg
stos
push
das
fucom
add
push
lcall
jno
cmp
mov
mov
hlt
mov
mov
inc
jns
lods
jmp
xor
push
sub
int3
fs
sub
and
scas
and
dec
adc
into
imul
negl
pop
push
fcomp
out
jne
rep
loop
lea
stos
xor
imul
xor
pop
and
inc
xchg
mov
push
push
jnp
inc
imul
xor
in
cwtl
and
loope
fidivl
pushf
sub
mov
push
or
push
adc
arpl
cmpl
jbe
icebp
andb
or
push
xor
jge
popf
fwait
mov
movsl
mov
mov
lret
fistpll
int
jmp
inc
in
clc
xchg
mov
std
lock
out
lds
fstpt
lcall
jno
int3
jne
popa
aaa
add
nop
xor
mov
inc
and
mov
imul
mov
decb
lods
jo
adc
push
xchg
jmp
hlt
push
or
pop
jmp
pop
mov
sbb
in
jbe
mov
outsl
push
mov
repz
icebp
push
xchg
mov
mov
push
cs
push
rclb
lea
pop
jl
shlb
movsb
jb
out
jno
push
decl
push
jge
jge
mov
or
sub
cltd
int3
movsb
xor
rclb
and
xchg
pop
addl
sbbl
ret
mov
sbb
mov
xlat
mov
sub
sbb
push
test
sbb
add
push
inc
aaa
iret
adc
cmpsb
xor
adc
aad
ss
xchg
sbb
sub
lcall
bound
xchg
dec
in
out
push
sub
jmp
inc
sub
mov
addr16
jbe
sbb
jbe
das
xor
xorl
jnp
sarb
test
rclb
lea
and
mov
insb
pop
dec
iret
js
stos
push
loop
xchg
jmp
mov
sbb
orb
nop
in
outsl
out
cmp
push
mov
jecxz
call
add
inc
pusha
inc
ret
out
loopne
popf
push
pop
mov
imul
pop
cmp
dec
lods
fisubrs
and
pushf
orl
idivb
ret
insb
inc
popw
cmp
and
cmpl
into
pushf
cli
iret
cltd
push
pop
int
or
imul
cmpsb
adc
inc
adc
addr16
push
fwait
dec
stos
divb
jns
pop
and
movsb
cmc
jp
add
and
mov
and
xor
adc
leave
sti
pop
jbe
lods
test
pusha
iret
xchg
movsb
xchg
push
jecxz
pusha
xlat
les
mov
mul
mov
push
adc
mov
pop
sbb
pop
mov
add
jle
jle
jae
push
mov
lock
pop
in
or
ret
comiss
cs
mov
mov
or
ffree
popf
sti
lea
cmp
mov
mov
cmp
js
pop
std
out
pop
and
pop
ss
jmp
xchg
jmp
mov
or
lods
lcall
xchg
lea
pop
scas
ljmp
int
aad
ror
aas
cmc
jmp
dec
xchg
lods
inc
push
in
pop
ffree
call
xor
mov
xchg
sbb
insb
enter
sbb
test
out
xlat
loope
dec
mov
mov
or
hlt
mov
pop
mov
fdivs
stos
aaa
loope
leave
jo
mulb
std
fdiv
pop
repnz
nop
add
push
push
xor
mov
dec
adc
sub
adc
cmp
mov
mov
or
in
jno
out
mov
cmpsb
cmc
lret
repnz
pop
jnp
sbb
mov
adc
outsl
mov
sahf
pop
pop
inc
pop
lcall
notl
inc
adc
sbb
cmp
shrl
inc
sub
lret
sti
pop
sbb
mov
movsl
and
icebp
and
pop
mov
cmp
lret
jp
xlat
jae
fisttpl
lret
icebp
psubq
mov
leave
cltd
adc
arpl
test
jne
gs
lods
jne
and
cmp
mov
faddl
sub
ss
inc
jmp
iret
jno
mov
loopne
rcr
daa
in
and
xor
xor
or
pop
cmc
jae
lods
sbb
mov
cmc
popa
ss
xchg
push
adc
mov
push
in
adc
rcr
and
call
add
repz
outsl
test
mov
push
cmp
setp
push
addb
in
jae
inc
push
jnp
mov
lods
xchg
shlb
push
sbb
or
jecxz
pop
cmp
mov
or
jbe
jecxz
or
cmp
aas
repz
js
and
popa
popf
sub
mov
xchg
rcrb
and
mov
std
jns
xor
or
mov
add
adc
clc
xchg
sti
imul
jne
ss
mov
cwtl
stos
nop
push
fldl
mov
mov
out
mov
imul
aaa
sbb
popf
inc
xchg
push
xlat
clc
mov
imul
sbb
fstpt
mov
pop
ss
push
subb
aaa
das
dec
js
pop
frstor
std
mov
pop
sub
scas
jbe
in
push
sbb
movsl
test
jb
inc
mov
icebp
sbb
adc
pop
adc
outsb
sahf
cmp
fsts
scas
sub
outsb
fdivrl
arpl
ds
movsl
pop
push
scas
shrb
or
pop
fidivs
rcll
pop
mov
inc
outsb
push
daa
test
pop
shlb
sti
mov
int
out
fildll
xchg
gs
rcll
popf
insb
cmpsb
jle
xchg
gs
iret
add
mov
pop
movsl
xchg
cmc
scas
dec
das
ljmp
fwait
pop
mov
mov
add
test
js
xchg
or
cmc
push
dec
xor
mov
pop
add
and
inc
mov
loopne
shll
movsb
jno
mov
cmp
add
and
scas
inc
or
push
xchg
mov
icebp
push
cmpsb
jns
adc
ret
scas
rcrl
jle
and
scas
and
inc
jo
mov
jnp
cmp
int
gs
sub
jbe
push
adc
push
xchg
xchg
icebp
popa
mov
push
shlb
insl
lds
lods
sub
pop
mov
inc
imul
loop
push
xlat
xchg
negl
sahf
lcall
jmp
xchg
mov
cwtl
fdivrl
pop
xor
fisttps
cmp
pusha
call
out
out
push
int
mov
jae
in
dec
add
out
jne
xchg
pop
ja
dec
xlat
ja
jnp
cmpsb
popf
sub
mov
imul
popf
popa
xchg
xchg
outsl
test
mov
roll
jb
cmp
sub
adc
inc
out
aas
dec
mov
adc
fists
xor
mov
mov
adc
mov
ficoms
popa
bound
dec
aas
dec
fdivl
mov
push
inc
inc
ja
dec
adc
inc
jb
outsl
and
das
or
outsb
loop
stc
lods
mov
test
sub
hlt
sbb
pop
inc
pop
aam
les
dec
mov
and
fstpt
mov
sarl
dec
lods
test
test
xchg
mov
inc
pop
push
mov
es
jbe
sub
and
inc
push
push
lret
rcll
push
xchg
ljmp
int
mov
cli
jae
push
mov
push
fcompl
popf
loopne
fstps
ret
in
mov
xchg
mov
loope
ficompl
or
into
in
lahf
cmp
jl
mov
cmp
or
pop
push
test
jmp
clc
dec
xchg
nop
or
mov
shlb
inc
lahf
mov
pop
jo
bnd
lea
sar
cld
mov
adc
pop
sbb
shlb
cmp
sub
lret
sbb
loopne
fwait
daa
mov
mov
and
test
dec
mov
repnz
repnz
mov
out
clc
outsl
daa
outsl
clc
testb
xchg
subb
daa
add
lods
sub
xchg
lea
xchg
pop
jl
fstpt
sbb
lret
scas
sub
js
adc
les
xor
cld
sub
pop
sbbl
adc
dec
sbb
sbb
test
push
icebp
rcrl
xchg
dec
mov
paddb
cmp
dec
xchg
ud1
mov
mov
jb
fwait
out
aad
cmp
jmp
mov
jo
mov
add
push
inc
orb
ret
hlt
cmp
mov
inc
cwtl
jmp
dec
xchg
cwtl
xor
rcll
ja
inc
movsl
xor
insl
outsb
or
jle
jne
xor
inc
mov
arpl
aas
testb
sub
dec
mov
movsb
inc
lret
or
mov
outsb
dec
xchg
pop
mov
sub
movsl
sbbb
pushf
shrb
sub
lods
sub
sahf
pop
cmp
stos
int3
mov
les
jl
cmp
xor
loopne
push
pushf
sahf
or
xor
cmp
js
or
test
mov
stos
push
xchg
in
repz
pop
lods
jbe
std
jmp
fdivrl
lret
lock
fwait
scas
xchg
and
pop
ret
and
fiadds
test
scas
lods
mov
fldl
or
add
shl
xor
lahf
jmp
scas
inc
insb
call
lret
cmp
bsf
and
sbb
out
xchg
test
jne
fs
inc
dec
add
insl
notb
stos
inc
int
push
push
dec
idiv
mov
lods
add
in
mov
pushf
mov
repnz
divl
test
loope
repnz
in
dec
out
outsb
pop
push
rolb
daa
pop
movsb
into
and
mov
es
xchg
mov
ja
imul
pop
mov
scas
out
call
je
bound
lahf
data16
stos
mov
jb
pop
movsl
nop
pop
add
pop
mov
sub
and
cmpsl
pop
ret
ljmp
in
scas
sub
or
mov
aaa
cmp
lahf
loope
lret
scas
xor
int3
push
subl
cmp
int
jp
add
inc
ret
cs
and
pop
das
mov
dec
pop
out
or
xchg
lea
ret
int
cmp
jne
fnsave
sub
lock
dec
push
rol
xchg
das
adc
mov
cwtl
or
inc
in
mov
dec
mov
lret
mov
lcallw
fsub
mov
repnz
cmp
push
stos
mov
adc
fbstp
jns
bnd
add
ret
jle
enter
dec
int
xor
inc
adc
arpl
and
add
pusha
jns
add
xchg
pop
pop
incb
call
or
cmp
xchg
pop
dec
cmp
cli
pop
divl
push
je
ret
mov
jge
es
pop
rol
xchg
sbb
pop
dec
mov
mov
xchg
and
in
arpl
adc
popf
lods
cmp
iret
ljmp
sbb
mov
les
pop
or
add
xchg
movsb
nop
jge
sbb
and
lcall
ss
adcb
adc
xchg
sti
test
lret
cld
adc
fstp
xor
je
test
cmc
movsb
in
jbe
faddp
xchg
fnstcw
push
leave
dec
jg
mov
push
fwait
cmp
shll
mov
jns
scas
das
fcomps
sub
stc
lret
es
mov
mov
cmc
pop
jmp
test
add
outsl
lea
loop
mov
jo
jl
and
mov
push
stos
mov
cmp
shll
test
rcl
dec
fs
mov
xchg
lret
pop
mov
shl
and
xor
scas
mov
inc
cmpsb
loope
push
dec
xorb
mov
pop
stc
in
ss
js
call
add
xchg
add
and
pop
punpckhbw
jno
adc
mov
lods
jge
pop
inc
bound
sbb
es
mov
xor
pusha
push
adc
out
mov
and
cmp
xchg
sub
lock
xchg
push
and
popf
ds
fs
lea
xlat
out
adc
add
lods
and
adc
xchg
inc
pop
mov
xlat
lock
lds
mov
aad
dec
mull
repz
aas
mov
pop
inc
xlat
sbb
and
imulb
mov
sub
dec
rcrb
insb
dec
push
push
xor
inc
mov
mov
and
test
sarb
jmp
jae
xchg
sub
jne
in
inc
dec
insl
aas
jne
test
pop
dec
and
sub
je
pop
mov
add
call
xchg
hlt
jmp
aad
stos
mov
cmc
pusha
pop
sbb
popf
add
sbb
add
pop
xchg
call
push
pop
test
mul
clc
out
rclb
xor
and
add
sbb
xlat
or
cmpsl
pop
dec
sahf
rolb
lods
push
pop
sub
lds
test
test
rclb
mov
cs
out
in
xchg
cwtl
mov
mov
fwait
out
in
fidivrs
out
sub
inc
sbb
lahf
arpl
add
loop
and
xchg
out
xor
sub
and
adc
cs
popf
movsl
xchg
movsl
mov
add
and
or
flds
orb
inc
mov
sub
lret
test
cmp
mov
pop
mov
outsl
push
xchg
lods
push
xchg
mov
pop
scas
cmp
test
mov
insb
test
cwtl
jnp
sbbb
lds
idivl
in
arpl
and
das
xor
lods
out
insb
mov
clc
or
fistl
jmp
mov
dec
adc
movsl
xor
sub
mov
cmp
rorb
push
pop
jbe
js
push
imul
sarb
in
inc
push
and
dec
cli
flds
cmp
cmovs
add
fbld
notl
jo
and
jb
xchg
mov
cmp
testl
jns
cltd
in
cmc
dec
rcll
imul
sahf
adc
xchg
mov
jo
imul
repnz
int
movsl
hlt
adc
mov
inc
pop
sbbb
jne
mov
adc
ret
mov
cmpl
mov
push
jbe,pn
insl
mov
out
pop
rcrl
enter
push
jbe
mov
mov
jns
xchg
cmp
stos
mov
outsb
sarb
sahf
inc
fwait
dec
push
xchg
jp
dec
sbb
sub
cmp
jo
dec
fsubl
int
rcll
test
sarb
mov
aaa
ja
idivl
arpl
push
fsubl
cmp
pop
inc
sti
pushf
mov
cmpsl
push
iret
vpackuswb
or
jmp
out
push
adc
pop
sub
test
xchg
pop
mov
pop
pop
jo
inc
mov
arpl
jmp
les
jg
fneni(8087
push
push
es
and
clc
cmpsl
adc
push
mov
mov
xor
or
adc
lock
cli
push
mov
sbb
cmp
push
push
adc
and
adc
jb
fldcw
jmp
pop
es
test
int3
inc
jmp
push
jo
dec
enter
push
add
jmp
push
mov
or
sbb
stos
es
fsubrs
mov
mov
popa
outsb
icebp
cli
movsl
lret
ja
and
jge
out
adc
roll
xchg
jle
loopne
adc
or
adc
mov
pop
stc
insl
int
add
pop
popf
xor
inc
loope
push
stos
pop
shll
lods
mov
sbb
cltd
add
repz
mov
arpl
loope
aam
clc
dec
push
sbb
inc
lea
push
test
or
xchg
sub
test
push
sahf
or
dec
fldcw
push
and
mov
push
ljmp
pop
int3
or
aaa
mov
mov
push
lcall
inc
add
lcall
push
pop
push
mov
out
adc
jmp
nop
lahf
cmp
aad
or
jae
into
outsb
dec
jp
mov
movsl
jecxz
cmp
int3
or
insb
sbb
jbe
mov
jno
out
pop
fnstsw
cmpsl
jge
mov
and
lret
ficoms
mov
mov
or
inc
and
mov
push
push
pushf
inc
xchg
fdivrl
cmp
mov
push
sub
lret
inc
xor
xchg
fs
imul
out
push
sbb
pop
pop
pop
pop
mov
inc
mov
adc
sti
pusha
push
repz
cmp
lods
outsb
iret
ficoms
hlt
mov
mov
jno
dec
imul
mov
sbb
add
out
dec
and
push
pushf
xor
and
push
pusha
test
cmpsb
dec
push
pop
dec
or
jecxz
out
or
push
push
sub
cmc
je
adc
fwait
pop
cmpsl
mov
push
or
jecxz
addb
push
adc
dec
cmp
jb
in
je
xor
pop
mov
add
pop
add
jns
movsl
jae
add
lods
ret
pop
repnz
das
dec
jp
pop
sarl
inc
into
adc
loop
lcall
cld
jo
filds
js
scas
or
adc
and
pop
adc
jle
mov
sbb
and
mov
mov
adc
fsubs
cmpsb
jae
xor
int
hlt
scas
dec
pusha
mov
mov
iret
lods
loope
ljmp
stc
iret
in
and
and
pop
xor
xchg
jne
in
fwait
aas
mov
out
push
sbb
adc
ds
jb
mov
les
mov
and
sbb
fidivl
lahf
je
sbb
jne
adc
out
adc
arpl
xchg
incl
bound
push
loope
jge
mov
sub
pop
xor
mov
jecxz
aas
add
out
aam
jmp
ds
adc
outsl
rolb
pop
push
or
xchg
cmp
testl
in
inc
xchg
push
repz
loop
popf
sahf
cmp
jns
rcrl
lock
iret
andl
fistps
stc
sub
pop
test
aas
out
add
ja
or
sub
fmul
push
fnstcw
imul
int3
ficoms
sub
call
inc
cmpsl
fwait
or
loopne
sbb
or
sub
insl
pop
adc
js
lods
insl
test
add
test
mov
bound
cmp
sbb
lahf
ljmp
push
xchg
xchg
push
mov
xchg
div
orl
fbld
cmp
notl
sarb
cmpsl
ss
mov
cmc
popf
insl
sbb
jg
xchg
arpl
rcll
aas
xor
ds
insl
or
add
loop
shl
inc
scas
ja
sub
pop
repz
aad
xchg
insb
lods
aas
imul
scas
in
xor
push
repz
loopne
fcomps
inc
xchg
sub
ds
pop
jge,pn
mov
mov
in
daa
xorb
lock
aad
xor
test
aaa
inc
mov
and
hlt
jo
xor
cmp
sbb
push
lods
sub
insb
sub
in
push
xchg
mov
inc
xor
scas
xchg
cld
repz
pop
mov
sub
or
xor
outsb
mov
mov
lds
lds
enter
xor
sbb
mov
pop
call
enter
inc
pop
sub
xor
xchg
mov
inc
push
mov
or
jp
repz
insb
imul
out
sub
and
add
fstl
xchg
rorb
adc
rorl
jp
in
mov
mov
pop
test
jle
imul
mov
pop
iret
dec
xchg
pop
push
dec
stos
cmc
mov
rolb
icebp
push
imul
lea
in
in
scas
or
dec
jo
in
pop
stos
mov
xlat
lock
inc
mov
sbb
mov
js
repnz
insb
out
out
jg
xor
negl
mov
mov
push
pxor
and
decl
insb
lods
sbb
sbb
xchg
and
lret
dec
or
and
push
adc
int3
push
mov
dec
pop
dec
sbb
cmp
mov
xor
or
add
or
push
les
test
push
jge
scas
les
dec
popf
mov
pop
pushf
shll
andl
dec
addl
jl
add
mov
sub
imul
mov
pushl
popa
lock
mov
clc
sbb
orl
pushf
lahf
or
movsb
out
imulb
jno
lods
jae
dec
loopne
mov
xchg
or
ret
cmp
inc
inc
outsb
loope
subb
cmp
push
dec
inc
and
cltd
and
roll
or
mov
sub
or
jg
scas
sbb
and
pop
xor
je
scas
mov
insb
xchg
es
inc
scas
ljmp
push
ror
stos
push
addr16
int
popa
lret
cmp
pop
adc
dec
ljmp
sub
sbb
shll
test
icebp
dec
push
in
out
push
fwait
or
in
jae
outsl
dec
lret
xchg
add
mov
movsb
xor
xchg
mov
xlat
xor
mov
popf
popa
scas
ljmp
aas
fwait
ret
cltd
pop
jmp
jmp
aas
mov
cli
xor
es
lcall
pop
or
out
mov
subl
cmp
lock
jne
xchg
inc
pop
dec
loop
dec
lcall
out
dec
and
sub
xor
push
insl
push
sbb
sbb
test
cmp
setno
sarl
lret
imul
int3
add
repnz
hlt
sarb
in
dec
jmp
jmp
mov
xchg
mov
roll
and
ja
fildl
hlt
sub
das
imul
sub
mov
or
cmpsb
js
mov
push
out
out
into
push
jo
in
fs
fcom
sbb
jne
ss
lea
iret
add
push
popf
imul
lods
nop
dec
cmp
adc
add
cmp
testl
xchg
mov
push
fcompl
push
insl
xor
bound
es
push
jmp
xchg
and
in
mov
pop
xchg
pop
and
pushf
xor
dec
loop
sbb
and
pop
mov
sub
cmpsb
and
repz
and
dec
push
add
push
faddp
sahf
cmp
sbb
jnp
xor
dec
inc
sbb
testl
dec
test
adc
push
lret
pusha
add
mov
pop
imul
jge
cmpsb
cmpsl
movsl
testl
mov
popa
dec
mov
jae
xor
or
jle
sbb
xlat
ljmp
cmp
push
pop
fadd
jbe
es
rolb
mov
dec
test
lods
dec
mov
mov
xchg
lds
addr16
das
xchg
pop
sti
das
ljmp
and
xchg
mov
xor
mov
mov
and
div
adc
rcrb
and
into
fbld
xchg
jo
push
adcl
cmp
jl
xchg
in
xor
mov
mov
mov
inc
jne
fbld
xor
shrl
enter
in
iret
sbb
dec
in
jns
or
mov
lea
and
pop
jae
jl
pop
adc
push
inc
pop
xorl
pinsrw
inc
dec
mov
push
push
stos
or
sub
cltd
mov
mov
sub
test
push
add
in
jnp
sbb
scas
pop
loop
jle
mov
pusha
pop
jo
stc
mov
pop
enter
mov
and
dec
xor
mov
mov
in
les
cmp
call
xchg
cmp
sub
inc
dec
andb
push
leave
ja
lcall
xchg
mov
jnp
mov
out
pop
mov
mov
cmp
push
imul
pop
sbbb
enter
inc
dec
adc
mov
aam
pcmpgtb
enter
mov
outsb
add
mov
lret
and
repnz
dec
out
jnp
cmp
mov
std
ds
repnz
push
inc
sbb
clc
dec
ja
or
fwait
es
ret
int3
push
insb
pop
data16
int3
outsl
and
mov
lds
jmp
inc
xchg
mov
outsb
pop
mov
xlat
pop
in
movsb
xor
inc
push
xor
fsts
fcmovb
js
sub
jge
movsl
das
dec
jb
pop
push
sbb
jge
repnz
xchg
push
popa
push
jge
pusha
dec
mov
clc
xlat
ss
div
xchg
out
ret
pop
jnp
inc
cmp
push
sarb
push
pop
daa
daa
push
xor
push
dec
cmovns
lret
xchg
push
adc
aam
pop
outsb
pushf
pop
inc
adc
pop
sahf
pop
dec
adc
push
mov
dec
xor
imulb
or
mov
lahf
jo
in
or
mov
in
outsl
cmpsb
lret
pop
iret
sbbl
pop
mov
loope
add
dec
cmp
enter
insl
mov
pushf
aas
cmpsl
jg
adc
negb
or
sbb
data16
outsl
sub
int
sub
mov
gs
das
xchg
dec
xchg
imul
cmpsl
xor
push
mov
jb
mov
or
and
imul
push
mov
leave
xor
sbbl
cli
push
jnp
rolb
dec
xchg
sbb
sbb
cmp
rolb
cmpsb
lods
sbb
cli
gs
jge
push
pop
fisubrs
add
and
out
lea
mov
xchg
pusha
arpl
or
fucom
dec
dec
cli
mov
xchg
test
loope
sarl
loop
out
xchg
push
shll
bound
mov
mov
pop
scas
stos
or
or
xchg
and
call
sub
xor
std
add
int
xor
jb
pop
xchg
cmp
ss
into
out
movsl
cmp
stc
je
sub
add
out
and
mov
lahf
arpl
sti
adc
ror
jb
fst
and
cmc
idiv
in
pop
and
lahf
xorb
outsl
ljmp
jae
or
insb
jns
jg
mov
mov
or
lods
call
andl
iret
xchg
aas
xchg
inc
mov
pop
hlt
mov
inc
loopne
pop
or
gs
and
sub
mov
loopne
mov
popf
sub
xor
scas
xor
mov
and
in
inc
je
xchg
dec
jle
callw
cmp
std
ja
dec
test
push
outsl
mov
cmpsb
cmp
movsl
out
pop
jp
mov
jecxz
roll
dec
insl
loopne
stc
out
dec
iret
adc
push
lahf
stc
mov
ret
xor
adc
jp
sbb
insl
xchg
aad
push
rcrb
cmp
push
or
jno
cltd
sub
rorl
add
dec
and
je
insl
mov
inc
call
or
sub
repz
mov
out
js
dec
mov
adc
jne
pop
movsl
shl
push
pop
out
cmp
mov
fildl
mov
adc
das
ja
add
mov
dec
out
pop
cltd
aas
jne
cmp
dec
js
jecxz
jne
push
push
aam
fs
jle
loope
mov
cmc
loope
inc
in
pop
stc
out
jno
pop
adc
clc
repz
lock
xchg
outsl
jp
das
dec
into
cmp
xor
adc
inc
dec
xor
cmp
push
loope
adc
lods
jno
mov
mov
clc
in
jg
outsb
inc
bound
mov
sub
nop
dec
cld
jle
mov
jne
loopne
icebp
jb
xor
xchg
in
mov
mov
ret
fiadds
data16
mov
push
jnp
adcl
mov
pusha
or
push
pop
push
sti
jae
ja
popa
out
and
test
pop
cmpsl
inc
mov
mov
pop
mov
loopne
cmp
js
cmp
ja
pop
adc
or
mov
sub
and
outsl
std
mov
pop
xchg
icebp
repz
aad
sub
jnp
test
mov
push
adc
adc
mov
xlat
mov
ja
sbb
pmulhuw
in
incl
sbbl
jno
inc
jns
bound
in
mov
into
dec
frstor
or
lret
lahf
xchg
sbb
xchg
dec
das
subl
sbb
ss
pop
add
out
mov
mov
cli
loopw
dec
out
int
push
dec
aaa
icebp
repz
cmpsl
sub
scas
test
test
out
test
callw
jmp
adc
rcrb
mov
adc
dec
lsl
pop
es
sub
mov
mov
lret
orb
stc
ss
mov
inc
dec
cmc
gs
int3
jecxz
icebp
in
pop
pop
inc
pop
jl
mov
jecxz
pop
adc
test
mov
cmp
mov
and
adc
sbb
fstpl
mov
or
push
or
mov
int3
mov
mov
add
jne
pusha
insb
push
inc
dec
jg
bound
in
arpl
xchg
or
push
push
cltd
out
in
imul
into
lret
fucomip
fwait
movsl
rol
andl
fnstcw
int3
xor
push
mov
data16
jbe
inc
test
inc
jg
addb
arpl
dec
xchg
inc
push
mov
ret
and
sub
sbb
rcrb
pop
dec
dec
dec
cmc
repnz
xchg
push
inc
jnp
sbb
std
cmc
icebp
push
jae
cmpsb
loopne
clc
mov
or
cmp
shr
imul
mov
cmp
sub
js
jb
and
push
mov
out
insl
dec
jmp
inc
mov
es
pop
cmpsl
lods
jo
arpl
mov
js
pop
push
ljmp
mov
jne
xlat
movsl
mov
sar
jmp
push
leave
cmp
and
call
and
push
xchg
push
je
mov
in
push
xlat
xchg
cs
pop
sub
add
out
push
fwait
ljmp
data16
fdivrp
pop
imul
test
or
std
push
lods
sub
sub
outsl
mov
xor
divl
outsl
jne
pop
sub
xor
or
cs
insl
ja
iret
mov
lea
jl
rcrb
into
lock
dec
jnp
shl
xor
cmpsb
loop
or
into
and
sub
xor
and
imulb
aam
jmp
or
pop
and
sub
int3
sub
arpl
pop
in
hlt
cltd
inc
notb
stc
cmp
sbb
fdivrl
jg
mov
call
out
add
loope
inc
inc
mov
xor
test
sub
rolb
cmp
in
repz
or
cs
repz
push
mov
ljmp
and
sub
jl
daa
xor
sbb
aas
ja
int3
repz
repz
addr16
mov
cwtl
outsb
loopne
enter
or
push
ss
gs
int3
movsl
adc
pop
xor
ret
push
in
cmp
cli
sahf
pop
popa
out
mov
mov
daa
fs
jo
inc
out
test
adc
cmpsb
and
sbb
sub
and
scas
inc
js
xchg
adc
xchg
jmp
xor
dec
push
movsb
testl
repz
hlt
xchg
mov
pextrw
insl
jp
scas
add
pop
push
mov
lcall
jmp
ror
daa
insb
shll
cli
jecxz
mov
inc
jl
clc
inc
and
inc
mov
xor
fldt
outsb
mov
adc
cmpsl
pop
es
out
mov
xor
mov
jle
popa
push
and
test
and
mov
ds
and
sbb
and
out
or
fisttpll
pop
pop
pop
cmp
or
nop
add
and
and
cltd
leave
rorl
inc
repnz
lock
xchg
and
mov
add
dec
test
cmp
adc
test
pop
lods
adc
push
xorl
mov
shlb
jno
and
inc
mov
les
lea
ja
push
test
pushf
push
sub
stc
add
add
movsbw
mov
lea
lea
mov
pusha
mov
pushl
push
lea
jmp
movb
call
add
dec
insl
popa
addr16
imul
inc
imul
outsl
jb
add
inc
gs
jb
outsl
jb
outsb
outsw
add
test
std
clc
inc
shr
cmp
mov
test
push
sub
shrd
pop
adc
mov
jb
pushf
bt
push
sub
stc
cmp
mov
bt
pushl
popl
push
stc
push
pushf
cmp
lea
jle
pushf
lea
ja
mov
sub
sub
rcl
add
pusha
jmp
push
jmp
jne
gs
xor
fs
insb
add
aam
fdivl
push
add
add
cmc
sub
setg
mov
pushf
setno
mov
mov
jmp
add
push
popa
jb
popa
outsb
je
outsl
jo
add
add
icebp
lea
call
push
pushf
call
push
lea
jae
das
inc
pop
shr
pop
xor
test
das
lahf
mov
adc
adc
or
cmp
pusha
jmp
mov
add
pushl
clc
mov
stc
test
jmp
call
jmp
mov
call
outsl
insb
xor
cs
insb
add
mov
int
adc
out
daa
cmp
mov
or
les
cld
mov
and
dec
sub
add
jns
dec
test
add
mov
mov
pop
ret
mov
sarb
cld
rcrl
push
xlat
and
les
cwtl
or
mov
add
push
gs
imul
imul
add
inc
jb
popa
je
dec
jne
gs
add
pop
push
clc
push
decl
or
imul
adc
mov
idivl
mov
sti
popa
jmp
es
mov
xchg
scas
test
stos
les
inc
cwtl
loopne
or
sub
push
daa
movsb
subl
fstl
leave
dec
adc
pop
ljmp
and
repnz
rcrb
ret
xchg
jno
inc
push
jno
fiaddl
mov
hlt
cli
addr16
iret
aam
inc
mov
cmp
out
jg
rcrl
jg,pn
into
and
push
pop
jmp
pop
sub
add
inc
jb
popa
je
push
imul
fs
jb
pusha
bt
pusha
call
mov
pushf
lea
jmp
add
inc
gs
gs
popa
addr16
imul
popa
gs
jb
popa
jns
gs
inc
outsl
jne
add
add
gs
outsb
je
popa
add
imul
insb
add
add
je
jb
jae
dec
jb
inc
js
movl
pushl
pushl
mov
call
test
pushl
lea
je
inc
add
sub
and
mov
call
add
push
gs
gs
imul
and
fs
jae
ror
shl
pop
not
shl
rcr
pop
pushf
jmp
jmp
mov
pusha
pushl
ret
movb
pushf
cmp
call
pushf
push
jmp
sub
movw
stc
pusha
pushl
popl
movw
stc
pusha
cmp
jmp
add
push
imul
ror
mov
cmc
clc
bt
test
pusha
mov
call
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
mov
bswap
mov
clc
cmpb
call
add
inc
gs
gs
outsl
popa
jb
dec
popa
jns
jne
dec
imul
arpl
jae
bound
add
push
imul
jb
gs
clc
cmpb
push
lea
jne
not
sbb
sub
pushf
shld
das
mov
setno
cmp
shr
neg
add
clc
mov
stc
call
push
lea
jne
lea
rcr
shl
mov
call
mov
neg
not
call
rol
scas
addl
cltd
mov
repnz
mov
push
and
and
pushf
add
xchg
movsb
rcll
pop
andl
addl
dec
in
jl
mov
loopne
push
cmp
arpl
push
sub
in
in
push
test
mov
lahf
sub
popa
fs
jo
xor
cs
insb
add
or
icebp
and
jo
add
sub
inc
daa
jle
subb
std
mov
lahf
das
push
lods
lock
mov
sti
outsl
xor
adc
out
arpl
fldcw
push
inc
and
jmp
fcoms
fwait
outsl
dec
lds
inc
lods
lock
mov
cmp
daa
mov
mov
sbb
push
jg
or
fbld
sub
sub
push
lock
std
std
addl
insb
cmpsl
mov
ret
jne
adc
lret
out
pop
sub
pushf
mov
pop
aad
xor
das
jl
jge
imul
xor
rcl
pop
push
enter
and
test
lcall
add
xchg
inc
inc
mov
jae
xchg
push
cmpsb
lods
hlt
push
or
insb
add
mov
roll
mov
clc
mov
pusha
cmp
cmp
pushf
lea
jbe
rcl
setae
lea
mov
xor
add
sub
mov
movzbw
sub
inc
mov
add
stc
shr
rcr
movl
bt
adc
mov
cmp
cmc
cmp
stc
cmp
call
add
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
inc
add
cmc
movb
cmp
movl
mov
push
pushf
lea
jmp
jmp
pushf
lea
jb
lahf
movzbw
clc
daa
movzbl
movsbw
shr
stc
clc
pushf
rcl
imul
rol
lea
pusha
shld
shrd
mov
test
xchg
shr
mov
shrd
push
setle
mov
cmp
push
clc
clc
cmp
pusha
call
push
pushf
lea
jne
lea
pushf
pusha
movb
lahf
bswap
movzbl
pop
mov
movsbw
jmp
ror
bt
jmp
or
and
and
sub
ds
and
mov
push
loop
sbb
imul
loopne
jae
add
inc
sub
mov
sarb
int3
add
fwait
mov
add
and
hlt
sub
mov
mov
mov
or
hlt
sub
cmp
mov
xor
sub
stos
dec
add
sub
add
push
jns
inc
jb
gs
je
imul
sub
pushf
lea
call
rcr
shl
mov
pusha
stc
pushl
shl
pusha
pushl
add
cwtl
lahf
lea
pushf
lea
call
stc
jmp
shr
movzbw
movsbw
imul
bsf
lea
pop
lea
movzbw
push
btr
lea
btc
push
pushf
add
push
and
mov
movsbw
mov
jmp
add
push
gs
imul
push
gs
imul
js
inc
add
add
jo
inc
imul
or
test
jne
xchg
pusha
push
lea
jmp
lock
xor
jb
mov
jbe
xchg
loopne
pop
pusha
or
mov
mov
inc
mov
dec
mov
sarl
mov
mov
add
sbb
clc
lcall
call
leave
jg
insl
loopne
repz
repnz
icebp
mov
jne
imull
ja
add
jo
mov
das
out
add
sarl
iret
mov
inc
andb
sub
sub
add
inc
gs
inc
add
push
and
push
mov
lea
call
jmp
add
push
popa
jb
popa
outsb
je
push
push
jns
add
pop
and
mov
pushf
lea
jmp
call
dec
pop
push
xor
xchg
pop
ss
adcl
push
push
das
cmp
add
pop
in
enter
rclb
rcrl
repz
outsb
mov
lret
add
add
sbb
ljmp
mov
pop
roll
nop
cmovo
mov
das
sbb
inc
pop
shlb
mov
cmp
dec
push
data16
jo
mov
and
test
aad
ret
popl
mov
cwtl
add
out
das
xor
sub
xor
xchg
mov
test
sarb
imul
jl
cmp
mov
push
cmp
mov
or
shll
mov
dec
push
sarb
fimull
out
xchg
adc
fiaddl
inc
pop
fbstp
add
xor
inc
xchg
sub
fidivs
inc
mov
mov
daa
cmpsb
sub
fs
push
mov
sbb
out
cmovl
mov
jo
adc
sbb
xchg
cld
push
and
repnz
push
pop
outsl
inc
cmp
mov
shr
mov
xchg
add
aas
and
shrb
das
loope
movb
cmp
fs
inc
sub
insl
push
dec
jbe
adc
sub
xlat
jno
mov
jg
cwtl
add
mov
and
addl
cmp
sbb
xor
xlat
pop
in
dec
sub
jge
mov
or
inc
pop
fisubl
sbb
notl
xor
clc
push
cli
shll
mov
insb
fucom
outsl
sbb
scas
xchg
popa
cmp
and
ds
scas
cmpsb
sti
lahf
mov
clc
mov
cmpsl
sbb
inc
mov
sub
or
dec
lea
inc
xchg
scas
adc
or
in
aas
clc
bt
clc
push
shl
mov
pushf
movzbw
mov
shrd
pushf
lea
mov
inc
push
shrd
xchg
neg
ror
push
and
xor
bt
push
sbb
bt
bt
mov
pusha
neg
mov
sar
mov
test
movb
push
cmp
or
jmp
cmp
pushf
cmp
cmc
or
pushf
lea
je
cmc
cmp
pushf
cmp
lea
pushf
jmp
add
push
outsl
jne
fs
arpl
add
outsb
add
mov
lahf
lea
call
lea
call
push
call
movb
mov
mov
movb
movl
lea
jmp
add
inc
outsl
jo
push
arpl
and
rcl
lea
bt
pusha
bt
sub
push
push
xchg
mov
mov
mov
cwtl
push
pusha
bswap
mov
lea
push
call
movl
pusha
mov
not
setae
not
lods
stc
ror
pushf
bt
cmp
add
clc
xor
cmp
sub
jmp
add
inc
gs
popa
insb
gs
gs
outsb
je
imul
sbb
pop
cmp
repnz
lea
stos
lods
addr16
dec
lods
mov
mov
fsub
cld
gs
test
add
mov
push
insl
lahf
mov
inc
sub
data16
in
jae
lea
daa
push
jp
cmp
xchg
jecxz
das
sbb
outsl
int3
movsb
int
jp
loop
sub
pushf
sbb
rcrl
mov
jmp
cmp
sub
lea
jae
bt
btc
rcr
rcr
mov
xchg
shl
sbb
mov
shld
mov
jmp
jmp
loopne
shll
js
push
mov
shl
add
lods
sahf
mov
lea
sbb
dec
punpckldq
sub
outsb
xchg
adc
fiadds
push
xor
cld
mov
adcb
sub
add
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
xor
call
rcr
xchg
btr
mov
sub
cmc
bsr
add
shl
mov
adc
mov
jmp
btr
stc
shr
or
rcr
cmc
bsr
mov
sbb
add
add
jmp
pushf
jmp
movb
lea
je
pusha
pusha
sub
stc
stc
jmp
rcr
stc
xor
push
stc
shr
mov
clc
cmc
jmp
add
push
push
inc
inc
jae
outsb
arpl
je
outsl
jae
inc
jns
popa
insl
add
xor
lea
jnp
mov
push
pushf
pushf
mov
xchg
mov
jmp
add
dec
outsl
popa
fs
arpl
inc
add
add
je
imul
dec
jb
inc
js
jmp
fistps
mov
push
pop
mov
data16
clc
jne
push
ret
xchg
jae
outsl
repz
jg
mov
aaa
lret
mov
xchg
inc
lods
push
mov
push
and
inc
or
cmp
cmp
stc
mov
jo
add
out
xchg
add
inc
pop
push
icebp
std
aam
fisubrl
leave
movsl
ljmp
shrb
sbb
and
lret
mov
cld
sub
jo
lret
cs
in
sbb
inc
sub
lret
test
sbb
sti
xchg
xchg
ds
idiv
jmp
mov
adc
xor
out
add
sub
cltd
fst
push
scas
out
cltd
sbb
repz
or
dec
pop
loop
xor
insl
cmpsb
xor
mov
and
lret
pop
aaa
pop
aam
xchg
push
ret
cli
add
lret
out
sbb
dec
mov
mov
or
cmp
push
jmp
loope
add
inc
ret
inc
sub
and
jae
addl
js
xor
into
inc
xchg
cmp
ret
xchg
sub
pop
int
cwtl
or
adc
movsl
pop
jmp
js
xor
cmp
mov
push
cs
mov
imul
mov
cld
push
icebp
jnp
sbb
mov
movsl
mov
jle
dec
jnp
int3
or
sti
add
xlat
dec
mov
out
gs
sub
sub
push
movsl
push
xchg
frstor
gs
loopne
icebp
pusha
inc
pop
clc
xchg
inc
cmp
scas
sbb
adc
add
mov
ljmp
insl
mov
jns
mov
pop
imul
mov
fistpl
inc
pop
ja
push
cmp
imul
jp
fsubrp
loop
div
adc
push
sub
dec
and
inc
and
mov
or
test
jne
adc
sbb
ret
aad
ja
pop
repz
aad
mov
mov
sub
out
sbbb
jo
insb
mov
xor
ror
jmp
movsb
mov
lret
aas
std
jl
and
sbbl
mov
cmp
fnstenv
add
out
shl
insb
repz
shl
es
xchg
rclb
in
in
push
loopne
je
add
lahf
dec
add
pop
push
cmp
aad
mov
jmp
ret
and
or
sbb
sub
sub
push
stc
mov
inc
mov
push
lods
pop
in
orl
das
scas
les
ds
pop
xchg
pop
xor
xor
jns
inc
lret
popf
mov
jmp
adc
aas
mov
popf
sub
arpl
in
inc
sub
mov
dec
jmp
sbb
sub
ss
clc
pop
add
mov
cmpsb
jecxz
cli
sbb
shrl
dec
rol
pop
icebp
shlb
mov
cmpb
or
jecxz
jl
fnsave
mov
mov
aad
mov
movsb
fldcw
in
xchg
pop
jle
das
inc
xor
sub
fcmovb
add
pop
dec
jne
sbb
loopne
sahf
add
add
mov
xchg
repz
test
mov
fidivrs
or
fisubl
ss
popa
cmp
mov
or
cmp
ss
cmp
xchg
das
push
push
and
adc
lcall
xlat
xchg
xchg
xchg
pop
out
inc
mov
pop
loope
dec
xchg
xor
mov
pop
push
aad
pushf
dec
js
pop
cmp
movsl
jae
fwait
popf
add
pop
push
out
push
aad
jno
mov
dec
fildl
daa
jne
leave
xchg
cmc
in
xchg
mov
mov
shl
inc
loop
add
jae
repnz
push
insl
dec
pushf
jae
ret
pop
mov
mov
xor
jl
sub
lahf
in
sub
mov
imul
imul
xor
outsl
dec
and
fbld
std
sub
out
in
dec
lret
and
out
in
mov
mov
push
cmpsl
movsl
and
das
arpl
jo
in
push
gs
jp
jge
nop
test
pop
sub
jns
rclb
sbb
imul
outsl
repnz
dec
pusha
mov
into
sub
sbb
xchg
push
fcmovb
sub
icebp
shrb
mov
je
fldl
mov
bound
fnsave
jp
jle
sbb
cmc
xchg
sbb
data16
fldl
movsb
je
lock
jne
lods
rcrl
pop
jo
pop
or
inc
dec
movl
sbb
xor
outsb
mov
and
sub
sbb
int3
cmpsl
cmp
adc
xor
adc
and
push
lret
shll
and
rorl
mov
cmp
mov
mov
int3
fs
cmp
loope
ror
movsl
or
mov
add
aad
inc
mov
jp
into
jle
scas
outsw
mov
sbb
jl,pt
add
imul
icebp
pop
jp
pop
xchg
es
and
mov
pop
lret
ljmp
sbbb
jecxz
push
push
test
hlt
push
or
enter
js
fiaddl
cmp
imul
fwait
push
sub
arpl
pushf
lock
mov
xchg
leave
mov
fs
jl
or
popa
aam
out
loope
push
fwait
inc
arpl
cs
mov
pop
xchg
inc
cmp
pop
inc
cltd
popf
lret
std
adc
mov
stc
adc
loop
mov
push
xor
mov
mov
test
ror
aam
shl
fsubr
mov
mov
fisubs
mov
ror
fs
dec
sahf
pop
mov
push
sbb
xor
cmp
fstl
or
mov
out
or
jle
pop
jbe
sub
loop
xchg
and
jne
addl
push
push
xchg
mov
sbb
mov
mov
cmp
pop
lods
rcl
cmp
pop
sbb
test
scas
loope
loope
cld
xlat
and
dec
ja
xchg
ljmp
pop
shrb
loopne
xchg
outsl
inc
sahf
add
fnstsw
mov
js
sbb
or
adc
push
mov
adcb
imul
es
pop
jae
loopne
call
lcall
cmp
cmp
lods
and
das
lock
mov
jle
cltd
lret
iret
stc
out
ljmp
xor
ret
sbb
or
inc
or
adc
mov
repnz
xor
jmp
jecxz
add
ss
mov
xor
ret
fs
adc
rcrl
or
inc
mov
sub
in
mov
or
outsb
mov
data16
adc
sbb
inc
jns
pop
arpl
pop
dec
ffree
dec
xor
cwtl
xor
inc
mov
cmpl
mov
xchg
cmpsb
cmp
xchg
push
jnp
bound
es
roll
mov
je
xchg
cmp
outsl
ss
and
sbb
inc
icebp
xor
adc
test
adc
fbstp
mov
in
mov
sbb
cld
out
cmp
and
popf
xor
jg
lahf
xor
mov
mov
insb
idiv
pushf
xchg
icebp
mov
scas
imul
leave
subb
jp
xchg
arpl
xor
je
cltd
mov
divl
push
popf
ror
dec
cmp
lcall
in
push
cmp
xlat
faddp
mov
dec
adc
int3
imul
and
mov
popa
sbb
add
lods
movntq
push
dec
pop
jmp
add
jno
push
lcall
aas
pusha
or
inc
add
jge
daa
fildll
stc
call
sbb
jle
ret
jmp
lret
aaa
loope
xchg
pop
jnp
fdivs
and
ljmp
or
xchg
clc
xchg
inc
mov
shll
loope
andl
out
sbb
call
test
mov
adc
jae
sub
int3
jae
into
push
lcall
mov
mov
out
mov
inc
testb
pop
pop
jg
fisubl
push
cs
jb
xor
cltd
sbb
push
cmp
add
in
cmp
iret
sbb
jecxz
loopne
divl
and
dec
jbe
outsl
push
sub
stos
fsubrs
jo
push
and
dec
inc
mov
mov
lea
fimull
js
iret
xchg
rorb
inc
test
inc
out
dec
sarb
push
jecxz
cmp
stos
xorl
jg
test
dec
fnstcw
dec
pop
arpl
pop
movl
mov
pop
imul
fisubl
lea
jne
and
inc
xchg
pop
into
xchg
pop
decb
subb
jle
mov
jnp
sub
ror
gs
test
insb
rcl
into
mov
dec
inc
fcom
inc
addb
jb
rcrl
sbb
push
jmp
jbe
sub
push
cmp
jmp
call
mov
je
ljmp
fldt
addr16
fcomps
les
mov
jmp
pop
repz
in
adc
in
repnz
dec
cld
and
jl
push
lods
sbb
and
cmp
dec
cmp
push
scas
repnz
cmp
jns
js
mov
xchg
daa
xlat
lods
mov
js
sub
ffree
mov
dec
sub
insb
fstps
add
jns
lcall
sahf
enter
or
lret
movsl
jno
push
sub
ss
fstpl
mov
sbb
cmp
pop
jle
addr16
in
out
adc
nopl
insl
rclb
ss
arpl
insl
sbb
xchg
shrl
adc
insb
jne
fisttpl
or
imul
loopne
sbb
cli
push
inc
and
fstl
jecxz
fldcw
xor
pop
inc
push
jb
inc
mov
lahf
fbstp
xchg
push
xchg
dec
dec
cmp
loopne
dec
mov
jl
push
mov
adc
mov
xchg
popa
ret
aaa
movsl
in
sub
gs
lock
or
pushf
sub
mov
cld
jno
add
or
aam
push
mov
add
test
add
dec
in
dec
fdivs
fsubrp
jge
addl
add
int3
pop
push
sahf
icebp
movsb
inc
mov
stos
testl
int3
mov
stc
jne
loope
xor
xchg
aaa
adc
in
xor
and
pop
decb
aam
mulb
dec
jmp
dec
into
xor
sub
cmc
cwtl
and
int3
test
xchg
arpl
mov
sbb
scas
nop
sub
mov
mov
lock
aas
push
imul
and
jo
in
pop
mov
rorl
movaps
shlb
push
in
lcall
lea
imul
jbe
loopne
cmp
popf
data16
repz
cmp
mov
xor
test
pop
loop
out
imul
fstpt
ljmp
sbb
rcll
inc
pop
inc
pop
jp
repnz
icebp
add
mov
cmp
inc
cmp
dec
sbb
pop
negb
xchg
ja
in
xchg
loopne
and
cwtl
les
or
xor
mov
mov
xchg
push
and
fldcw
adc
push
push
sbb
mov
mov
xchg
rol
dec
ret
or
xchg
xchg
or
or
sbb
xor
stc
mov
loop
dec
mov
push
mov
fldt
cli
mov
stos
cmp
scas
pop
xor
es
pop
lret
dec
xchg
je
inc
sbb
cmp
jmp
and
mov
push
add
nop
test
xchg
test
jbe
pusha
mov
outsl
out
push
push
push
loopne
int
sbb
mov
xorb
sub
repnz
gs
rorl
xor
mov
xchg
push
sarb
or
mov
repz
loope
cmpsl
jl
adc
lock
xchg
sbb
daa
inc
in
xchg
sbb
pushf
ss
insl
mov
int
in
add
pop
cli
loope
mov
dec
and
push
lahf
sub
mov
xchg
cli
pop
decl
or
into
ret
lods
movb
jbe
jns
sub
jo
cltd
sbb
xchg
push
inc
in
stos
movsl
mov
test
scas
mov
pop
xadd
mov
jb
fwait
mov
xchg
push
lahf
mov
pusha
sti
inc
ret
test
xchg
mov
into
mov
xor
mov
scas
aam
mov
imul
pop
cwtl
cmpsb
es
mov
loop
ss
xchg
in
scas
lret
jg
push
adc
xchg
hlt
jo
fucomp
in
outsl
mull
loop
or
iret
jg
mov
scas
xor
jge
hlt
pop
cmpl
mov
dec
rorl
lcall
aaa
lahf
and
sbb
loopne
and
jbe
fs
aas
ret
push
in
in
xchg
or
lock
iret
cmp
int
repnz
iret
mov
jmp
inc
clc
mov
mov
mov
pop
ret
mov
mov
out
dec
repnz
jge
or
pushf
scas
jge
imul
pop
icebp
and
int3
mov
adc
jno
cmp
mov
adc
dec
iret
repz
cmp
mov
je
mov
xchg
or
xchg
adc
and
dec
aas
ljmp
xor
mov
sar
in
ds
sbb
dec
std
mov
dec
mov
incb
xchg
mov
xorb
enter
cmp
sub
std
adc
add
andl
adc
insl
mov
mov
sbb
mulb
test
xchg
jo
push
test
pop
pop
movsl
ja
js
clc
mov
mov
pop
cmpsb
mov
sbb
outsl
xchg
jmp
add
out
mov
inc
aas
jle
stos
test
adc
lret
xor
xchg
and
mov
or
js
addb
add
pop
insl
aas
stos
inc
mov
in
lcall
xchg
pop
lods
clc
lds
ret
int3
jmp
add
adc
outsb
sahf
jge
int
jnp
inc
mov
sbb
test
or
xchg
sub
pop
cmp
dec
call
nop
rcrb
mov
movsl
fldcw
inc
pop
adc
sahf
shll
inc
stc
hlt
mov
sahf
xor
movsl
pop
cmpsb
mov
addb
cmp
mov
pushf
mov
adc
jb
aad
clc
imul
push
dec
neg
pop
mov
aas
cmp
out
lret
popa
mov
mov
jo
mov
arpl
orl
repz
mov
adc
or
fstpl
or
ds
jl
hlt
lea
add
pop
xchg
pushf
clc
jnp
arpl
or
mov
cmpsb
add
loope
pop
addr16
inc
and
mov
jns
dec
orb
jle
test
roll
lods
push
gs
shrb
out
dec
xchg
jb
xchg
aad
in
adc
mov
mov
xor
cmp
pop
or
je
xor
adc
pop
fwait
sub
mov
roll
mov
push
sub
repnz
cwtl
sbb
pop
jmp
dec
adc
stos
mov
shl
mov
jl
ret
rcll
pop
and
icebp
movsl
imulb
push
mov
addb
mov
or
lock
ret
sti
xor
test
loop
lods
aas
mov
push
loop
dec
and
popa
xchg
test
dec
jae
repz
pop
mov
mov
iret
std
push
sbb
adc
cmp
xchg
jns
cmpsl
in
lock
clc
xchg
jp
push
xchg
popl
arpl
adc
std
clc
lock
push
pop
or
xor
gs
lret
xchg
mov
cmp
mov
aaa
scas
mov
sbb
xchg
loope
jl
xchg
ljmp
mov
cmp
jecxz
std
ja
jge
stos
pop
jno
push
xor
mov
jmp
mov
sub
xchg
stos
sbb
shlb
mov
scas
xlat
cmpsl
sub
and
cmpsb
lcall
fldt
xor
mov
jb
and
ja
or
dec
out
mov
stos
mov
xchg
sti
dec
ret
adc
cmp
xchg
mov
or
xor
stc
and
lea
inc
stos
mov
or
addl
dec
rdmsr
xlat
mov
push
insb
js
push
or
and
pop
das
jbe
mov
mov
xchg
fbld
fmuls
adc
in
es
mov
cld
nop
xor
cmpsb
dec
stos
lret
push
cmp
fucomp
sub
cld
repnz
pop
or
or
inc
clc
cs
inc
push
js
jo
mov
or
aam
sahf
lock
imul
test
push
test
xchg
loope
add
test
popa
test
jp
loopne
adcl
aad
test
mov
shl
pop
arpl
lahf
imul
adc
dec
jl
fcoml
jae
fidivrl
loop
ror
pop
mov
sti
lahf
and
and
cmp
andb
aaa
mov
dec
adc
stos
dec
xchg
in
fsubrl
mov
mul
ficomps
pop
push
push
ljmp
std
dec
lods
mov
rclb
xor
mov
sbb
stos
fsub
add
stos
loop
bound
or
jne
dec
push
imul
bnd
test
imul
mov
pop
or
popa
ret
bound
mov
test
loop
cltd
lret
lods
mov
hlt
mov
aaa
stos
pusha
test
int3
adc
insl
lsl
push
ds
sub
imul
xor
in
pop
dec
scas
rcr
or
popf
cmp
or
jae
cli
sub
nop
xlat
sbb
stos
or
imul
push
jp
mov
and
pop
in
lock
xor
jp
jbe
xor
cmpsl
lock
xchg
mov
shll
dec
scas
add
push
mov
cmp
clc
dec
stos
sarb
mov
xchg
cmp
shlb
fdiv
hlt
testb
es
aaa
cmp
jmp
adc
test
call
push
and
imulb
xchg
rclb
popa
xor
xor
fwait
lods
shl
pop
adc
cmpsl
inc
lret
test
cli
repz
and
and
out
and
in
gs
pop
aad
xor
jbe
xchg
pop
inc
movsl
push
addr16
mov
push
cltd
std
adc
popf
fstpl
lret
jg
mov
add
pop
dec
mov
add
jbe
lret
mov
cs
pop
sub
or
pop
inc
pop
mov
xchg
arpl
adc
mov
shrb
aam
mov
push
ja
int
pop
clc
out
or
xchg
stos
aaa
push
pop
lret
add
movsl
inc
pushf
add
loope
sub
add
jmp
pusha
test
les
sbb
enter
imul
pop
inc
aaa
pusha
mov
mov
adc
into
dec
and
fcompl
or
notl
adc
mov
adc
orb
dec
rcrl
xchg
popa
jle
add
decb
ds
mov
inc
ret
stc
movsb
xchg
popa
push
sub
es
mov
push
or
mov
out
dec
xchg
insl
mov
inc
jae
daa
cmpsl
pop
cmp
mov
andl
jmp
jnp
adcl
testb
fs
fsubrl
aad
stos
dec
in
or
fdivr
mov
fbld
push
jno
jl
mov
addr16
cmpb
jns
movsl
je
fs
inc
sbbl
sbb
ret
jge
hlt
sbb
movsl
sub
cld
pop
aaa
imul
mov
out
jle
sub
sbb
mov
scas
mov
push
aam
mov
ret
stos
enter
lock
sub
dec
pusha
data16
data16
scas
mov
dec
pop
cmp
iret
mov
adc
lods
popa
push
rorl
int3
mov
mov
jecxz
pop
loopne
jo
mov
sub
push
hlt
aaa
cmpsl
popa
test
pop
lock
push
pand
cmp
or
adc
adc
xchg
pop
sti
add
cmp
jnp
inc
jnp
sbb
jns
mov
test
sub
int3
push
jae
or
and
scas
daa
fnstenv
roll
xchg
lock
in
inc
inc
or
jmp
sub
xor
dec
ljmp
cltd
ja
test
call
inc
roll
sarb
mov
inc
pop
pop
xchg
test
iret
jmp
mov
mov
pop
mov
dec
loop
sbbl
push
pop
push
xor
shr
cwtl
fdivrl
push
inc
inc
icebp
jbe
lret
iret
sbb
and
pop
shr
and
sar
orb
xchg
push
jg
mov
in
test
xor
loope
xchg
lods
enter
loop
mov
out
push
add
lds
insb
popf
movl
test
daa
out
jno
adc
outsl
out
insb
mov
in
cltd
push
cmp
popf
mov
cmp
test
stc
add
mov
lds
push
fldenv
mov
push
cmpsb
jb
je
stos
jge
pop
ret
or
xchg
cmp
mov
daa
push
stos
imul
xor
mov
bound
pop
std
loop
scas
cli
addr16
jno
cmp
std
lret
push
cwtl
dec
je
adc
mov
jae
push
imul
int
push
jl
push
lods
cld
push
fadds
add
cmpsl
jb
fs
jb
leave
jne
fsts
pop
ret
in
jbe
jne
jl
sbb
xchg
sarl
or
mov
mov
sub
imul
dec
mov
les
test
xor
or
mov
cmp
adc
stos
je
xchg
sbb
push
fwait
int
xor
sbb
xchg
stc
out
jnp
outsb
dec
sbb
ret
push
mov
add
jp
add
imul
stos
mov
cmp
inc
jg
or
rcrl
cld
pop
mov
mov
sub
mov
pushf
dec
fadds
jp
popf
in
and
mov
cmpsb
sbb
decl
lahf
jge
rep
adc
lcall
hlt
mov
sbb
insl
cld
and
jbe
int3
fcmovne
xchg
addb
cmp
pop
dec
pop
lock
mov
jae
inc
enter
xlat
gs
adc
or
dec
movsl
xchg
adc
cmp
mov
ret
cmp
mov
xchg
pop
mov
sbb
push
mov
sbb
lods
fcomip
test
je
cmp
add
jge
lcall
pop
decb
push
into
xor
mov
mov
sub
cmp
cli
sbb
xchg
fists
pop
shll
incl
fstps
test
adc
mov
in
scas
or
sbb
mov
mov
lcall
jecxz
scas
imul
lds
stc
popa
test
jb
popf
xchg
cmpsb
jno
jns
mov
icebp
jl
hlt
and
lahf
jbe
pop
mov
lock
adc
test
mov
lret
js
xchg
pop
popa
sbb
repnz
andb
mov
jge
icebp
pop
adc
cmp
jnp
push
push
cmp
mov
test
cs
mov
ds
dec
add
imul
cmp
pop
inc
insl
repz
dec
ret
lods
xchg
mov
and
xchg
add
jne
stos
sbb
les
stos
and
jg
jle
ret
dec
cwtl
push
push
cmpsl
shll
mov
cmp
jb
pushf
cmp
lcall
stc
lcall
lahf
and
jns
mov
stos
xchg
or
movsb
ds
repz
movsb
cld
daa
mov
lds
pop
cmc
inc
orb
push
sbb
in
lret
lods
int
lcall
cmp
nop
jns
jp
push
lret
mov
sub
and
loopne
enter
pop
adc
stos
sub
add
gs
jecxz
push
in
lea
mov
lcall
je
imul
cmp
push
mov
pusha
inc
jbe
aaa
das
and
enter
insb
lahf
dec
adc
leave
pop
mov
fwait
adc
and
rolb
fsubr
mov
nop
movsb
ret
xor
or
ret
add
popa
push
push
push
cwtl
sbb
in
aas
lret
sub
fs
jecxz
outsb
in
sub
test
in
or
jbe
dec
call
or
loop
pop
xor
icebp
jns
dec
xor
jns
push
sub
mov
inc
dec
adc
sbb
into
inc
mov
inc
inc
mov
xchg
sub
xchg
jg
xor
cs
mov
and
jo
pop
sub
sub
jne
sbb
cmp
fsubr
inc
mov
dec
push
pop
dec
in
fs
std
js
dec
jne
mov
push
sbb
sub
jns
push
xchg
sub
mov
shr
mov
lods
dec
xor
shlb
mov
mov
fcmovnu
xor
add
jns
adc
mov
pop
xor
jp
pop
fsubl
push
sahf
bound
mov
stc
mov
push
gs
push
push
jno
in
test
hlt
test
mov
sbb
ja
insl
push
shrl
jno
out
pusha
inc
scas
mov
popa
sbbl
xchg
pusha
popl
mov
ss
jne
lds
xchg
xor
fisubl
xchg
loope
mov
xchg
pop
xorl
pop
sub
imul
lock
inc
push
inc
gs
js
push
jg
pop
or
xchg
sti
jle
fimuls
ss
push
mov
mov
jne
aaa
inc
xor
or
mov
shll
cld
stos
push
inc
in
dec
inc
ds
out
cmc
call
xchg
pop
pop
inc
mov
aad
lret
pop
sbb
jnp
pop
stc
outsl
rorb
enter
lds
jnp
out
mov
jnp
xlat
mov
jl
mov
cld
sbb
and
cmc
es
mov
jecxz
dec
rcrl
movsb
mov
outsl
stc
sub
xor
arpl
fcompl
inc
add
mov
testb
test
cs
lret
xorb
push
arpl
int3
xor
add
lret
cltd
xor
and
jge
pop
mov
dec
dec
rcll
clc
in
cwtl
shrb
mov
imul
cmp
insl
lods
lods
data16
add
cmp
cwtl
inc
jo
jo
push
mov
mov
dec
imul
dec
jge
or
adc
popf
stos
imul
addr16
mov
jne
pusha
push
fst
cmp
push
pop
imull
test
pop
and
aaa
in
insb
push
jnp
jb
cbtw
dec
jae
stos
adc
xchg
ret
out
out
push
jl
mov
and
jmp
lret
out
int3
xor
cmpsl
shll
jo
mov
pop
addr16
fmuls
mov
stc
dec
pop
pushw
xchg
xor
arpl
dec
add
xchg
popl
xchg
test
inc
mov
and
sub
andb
fdivrl
jns
push
inc
xchg
sub
mov
xor
mov
push
fs
icebp
scas
out
xchg
mov
cltd
mov
mov
stc
sbb
in
jae
into
sbb
sbb
loopne
cmpb
adc
aam
inc
mov
or
imul
sub
inc
pop
rcl
out
adc
dec
aam
orl
je
sbb
dec
hlt
sbb
sub
mov
lea
mov
sub
in
roll
push
sahf
lcall
mov
push
call
in
shll
mul
fcomip
dec
daa
fmuls
loopne
out
jbe
lods
mov
cmc
sti
pop
pop
neg
cmp
shll
mov
jae,pt
inc
clc
push
cmp
dec
fsts
mov
fcoml
cmp
xchg
lea
jecxz
sbb
cmp
sub
fs
push
testl
out
daa
bound
dec
or
add
pop
data16
inc
sub
in
mov
stc
daa
push
pop
ljmp
stos
and
hlt
sar
sbb
lea
xchg
mov
xlat
xchg
mov
or
pop
xchg
cmp
outsl
insl
xor
fidivl
shll
cltd
fcompl
out
push
or
jge
ret
adc
loope
dec
adc
xchg
jnp
sbb
mov
jge
add
push
repz
dec
dec
mov
dec
adc
sub
cwtl
mov
xlat
mov
and
lret
pushf
or
add
pop
push
je
sbb
roll
imul
adc
mov
lds
xchg
dec
lock
jge
xchg
and
sub
nop
aad
lea
xchg
push
pop
jno
pushf
xchg
insb
cmp
testl
lret
and
dec
xorl
mov
mov
jno
dec
aad
jno
shlb
mov
add
jns
jbe
adc
out
imul
enter
stc
xchg
call
enter
mov
imul
lea
insl
jl
pop
sub
ret
cmpsl
adc
jne
aad
push
push
out
in
push
clc
inc
pop
aaa
cmp
lahf
xchg
push
cs
pop
inc
movsb
adc
push
popa
js
adc
cmpsl
sub
dec
xorl
add
mov
push
enter
in
es
scas
add
into
adc
gs
lret
mov
sbb
sub
pop
pop
dec
mov
push
sub
cmpsl
xchg
and
mov
mov
xchg
stos
lcall
adc
pop
sahf
cld
aas
lcall
roll
stos
jns
je
shll
dec
jbe
dec
hlt
mov
jecxz
pop
mov
iret
push
sub
test
scas
mov
sbb
in
rol
push
fcmove
cld
in
lret
push
adcb
rolb
xchg
faddl
addr16
enter
push
xor
or
jbe
mov
jne
mov
enter
ucomiss
or
dec
adc
push
lret
adc
mov
ficoml
xor
mov
rcrb
or
pop
xchg
mov
mov
cmp
aas
cmp
jl
adc
xor
pop
xchg
xchg
inc
fwait
rcrl
sub
pop
dec
shrl
imulb
mov
pop
ljmp
or
cmp
push
add
lods
dec
cmp
push
stos
cmp
cmc
jno
nop
push
dec
inc
push
jae
mov
inc
adc
sahf
inc
push
mov
fistpl
inc
orb
fadds
pop
out
mov
pop
loope
add
lahf
sbb
add
jecxz
dec
adc
add
push
sti
inc
pop
cmp
int3
add
inc
pop
repnz
loopne
jp
fmuls
sub
mov
in
cmp
pop
call
mov
push
scas
outsl
cmp
repz
mov
cs
pop
dec
leave
fs
into
outsl
jns
xchg
xchg
ret
mov
xor
lds
out
or
pop
xchg
and
es
in
addl
inc
xor
loopne
sarb
xchg
add
and
mov
or
mov
mov
push
out
fidivl
xorb
inc
lret
xor
adc
arpl
mov
lret
mov
sub
push
fcoms
out
adc
add
push
mov
fimull
mov
or
cmc
cmc
adc
rol
push
push
int
jnp
iret
out
stos
gs
icebp
xchg
mov
inc
scas
push
sbb
mov
cmp
sti
sub
insl
int
mov
orb
cmp
jno
cmc
daa
shlb
out
daa
jae
mov
mov
pop
imul
push
aam
movsl
fcoml
mov
sub
clc
fwait
xor
cli
dec
dec
xchg
xor
in
das
into
inc
loop,pn
jmp
or
popl
mov
fmuls
scas
out
cld
pop
mov
sbb
sahf
enter
shr
movsb
shll
cmpsl
cmp
mov
bound
sbb
sub
xor
or
dec
inc
add
lret
je
sbb
xchg
mov
dec
in
xchg
mov
pop
pop
xchg
adc
fcomi
addr16
sbb
sbb
adc
mov
sbb
stos
nop
add
sbb
xchg
jb
fdivl
in
fisubrl
cli
mov
sbb
daa
movsl
sub
xor
enter
rolb
stos
and
bound
jmp
ret
push
inc
sti
mov
mov
cltd
xchg
cwtl
fdivp
outsl
and
mov
xor
imul
jge
pop
in
jle
cmp
adc
push
pop
add
clc
pop
adc
dec
shlb
shl
mov
inc
cltd
icebp
sarl
jge
pop
jb
fwait
dec
push
aas
push
mov
stc
mov
pop
daa
outsb
adc
cmp
xor
jmp
or
sbb
leave
cltd
mov
lret
rcl
sub
popf
jno
inc
adc
mov
xor
xor
push
jge
cmp
adc
mov
mov
pusha
jns
iret
xorl
cld
fdivrl
mov
popl
mov
daa
stc
cmp
jbe
mov
dec
rolb
mov
cwtl
inc
sbb
add
pop
mov
sub
les
pop
imul
and
jge
pushf
das
xor
add
ret
mov
and
test
and
push
es
sbb
clc
movsl
rcll
mov
push
loope
jnp
mov
popa
sub
adc
outsb
insb
inc
scas
call
push
imul
xlat
iret
in
ret
inc
mov
and
adc
inc
add
pop
outsl
mov
pop
adc
mov
pusha
fcoms
add
cs
lea
adc
mov
jp
push
xchg
adc
cld
pop
leave
pusha
or
in
es
xor
sbb
loope
sbb
pop
lock
jo
push
addb
and
mov
sbb
lock
or
xchg
dec
pop
loope
jo
jbe
mov
add
fldl
dec
test
int
pop
fmuls
cli
mov
addr16
pop
sbb
fimull
jle
addr16
pop
dec
cld
dec
ja
aad
std
push
fistps
clc
mov
mov
dec
mov
mov
arpl
dec
popf
enter
mov
or
jae
in
inc
xchg
sub
jno
aaa
popf
call
cmp
pop
pusha
or
ss
fmul
dec
sahf
sbbl
lock
mov
daa
cmp
xchg
inc
int
and
aam
popa
mov
xor
push
push
outsl
xor
xor
dec
hlt
push
inc
or
mov
repz
and
push
loopne
insb
out
mov
movsl
push
ret
fs
lret
rcrl
adc
cs
test
mov
mov
frstor
xchg
xlat
mov
testb
xor
jge
pop
lock
cmp
fidivl
rorl
sbb
xchg
mov
cmpsl
pop
and
lret
fbstp
bound
pop
stos
mov
jno
dec
je
inc
xchg
ret
outsl
and
jmp
xchg
imul
pop
xlat
stos
into
xchg
insl
push
sbb
or
addb
lea
sahf
data16
and
repz
cmpsl
adc
popf
mov
and
or
mov
sub
mov
or
shll
cmpsl
inc
lods
mov
and
aas
sbb
pop
aas
js
aaa
dec
push
cmpsb
add
fwait
mov
sub
dec
push
sbb
cltd
idiv
dec
addl
cmp
add
les
movsl
dec
pop
xchg
inc
inc
pop
in
insb
push
fildl
in
fcoms
mov
push
and
ret
je
outsb
sti
add
and
mov
test
mov
jle
dec
mov
mov
test
jo
fs
stc
cld
out
shlb
shll
fistps
ja
in
fstpl
xor
int3
or
pop
mov
mov
imul
push
jbe
lret
lods
ljmp
jno
icebp
out
add
jbe
or
divl
cwtl
or
mov
mov
pop
fs
jecxz
inc
push
jno
and
pop
mov
and
adc
fnstenv
lahf
hlt
xlat
mov
das
mov
and
aaa
mov
jns
rol
inc
div
dec
inc
xchg
cli
or
test
cmp
xchg
jbe
xor
xchg
sbb
repnz
jns
into
cmpsl
out
scas
and
sbb
or
adc
imul
mov
rclb
aas
sub
lods
dec
jmp
icebp
movsl
das
pop
repnz
daa
ljmp
ficoml
push
inc
xchg
bound
pop
mov
inc
leave
adc
scas
dec
loop
sub
sbb
pop
arpl
lahf
jo
in
mov
push
addr16
mov
mov
ret
pop
xor
mov
ret
jne
scas
xchg
addb
jg
mov
lea
sub
mov
in
out
adc
xlat
cltd
mov
ds
cmp
xchg
add
hlt
cmp
add
xchg
test
adc
jno
stc
push
jecxz
mov
inc
mov
lret
pop
ds
lret
xor
fistpll
add
test
aam
scas
fsubl
push
mov
adc
in
or
popa
jecxz
fcoms
mov
xchg
cmp
arpl
aaa
adc
lret
sbb
icebp
mov
imul
jp
push
pop
loop
gs
sub
stos
mov
pop
inc
mov
out
mov
int3
repnz
scas
rcl
pop
iret
pop
lahf
cltd
mov
sti
adc
and
pop
push
cli
ja
gs
jge
and
mov
and
ret
push
mov
imul
inc
pop
ret
add
addb
leave
inc
add
or
push
mov
sti
adc
mov
popa
xor
je
push
jnp
pop
es
daa
or
sub
rep
repz
in
dec
aaa
dec
pushf
gs
hlt
push
and
dec
push
cs
add
lds
in
imul
loop
movsl
mov
dec
jbe
sbb
cmp
pusha
nop
leave
mov
addr16
mov
mov
repz
push
or
mov
cmp
mov
mov
adc
shlb
sub
repnz
loop
fists
jle
dec
dec
xchg
xchg
dec
bswap
ss
dec
lret
mov
cs
dec
fmul
rol
loope
dec
sub
or
dec
aas
or
cmp
hlt
fnsave
adc
add
fldcw
and
pusha
cmc
ret
stos
xchg
dec
jne
out
dec
idiv
sarb
outsb
cli
dec
scas
dec
pushl
out
loopne
mov
fbstp
ljmp
sub
sub
data16
flds
mov
add
mov
xchg
fldcw
jae
cwtl
pop
in
sbb
sub
imul
push
iret
mov
mov
jl
in
mov
fcomps
and
out
filds
js
add
mov
xor
fnstsw
cld
fistl
lods
sub
dec
arpl
dec
arpl
pop
cmpsb
inc
adc
outsb
sahf
pop
mov
jae
pop
sub
jae
sub
xor
in
fsubs
pop
push
push
add
gs
adc
and
out
xor
mov
popa
mov
dec
sysret
push
loopne
push
rcl
decb
iret
xchg
push
sti
sub
adcb
test
push
jg
scas
addl
fnstenv
ss
iret
jnp
add
jge
lock
leave
scas
sbb
jo
dec
rcrl
cmp
push
cmp
mov
inc
cmp
xchg
sbb
aaa
in
pop
jp
stos
ljmp
lods
jne
icebp
movsb
and
into
shrl
test
in
xchg
xlat
shr
mov
pushf
int3
sbb
xchg
push
jnp
std
lods
stc
test
jge
pop
in
dec
les
inc
xchg
notl
insb
fadds
mov
mov
addr16
fnsave
out
aad
or
lcall
loop
test
roll
es
enter
fmul
mov
out
cmp
cmpsl
mov
push
test
dec
ret
inc
push
loop
sarl
cli
sahf
test
dec
pop
push
nop
fdivrl
andl
rcrl
rcll
inc
icebp
es
mov
jp
xchg
add
adc
imul
mov
mov
jnp
jbe
inc
sub
cmpsb
ret
mov
js
icebp
sub
loop
sbb
adc
ss
xor
shrb
mov
into
arpl
push
and
mov
jne
jns
leave
popa
jne
or
jns
out
adc
mov
and
add
shl
dec
or
jge
and
add
inc
jno
js
jns
xchg
xor
cli
fcmovne
inc
pop
cwtl
test
aad
hlt
adc
jns
in
cmp
adc
xchg
popa
mov
or
fnstsw
jmp
stos
add
aam
popa
arpl
inc
cmpsl
pop
mov
sub
xchg
outsl
outsl
mov
daa
mov
push
inc
push
sti
mov
sbb
xchg
push
cmpsb
test
frstor
or
int3
icebp
outsb
xor
jno
ficoms
enter
jle
jnp
pop
xorb
movl
leave
clc
imull
lahf
lods
cmp
lods
cmp
mov
int3
inc
int3
add
inc
xchg
jp
xchg
xchg
icebp
and
clc
cmp
movb
rol
sarl
mov
inc
lock
xchg
loopne
cmp
and
add
jo
dec
mov
dec
movl
lds
out
lret
sti
xchg
in
cwtl
das
jbe
inc
xchg
aas
jp
cmp
jns
push
add
sarb
cmp
mov
in
les
sub
orl
push
stos
or
inc
mov
leave
mov
bound
dec
ljmp
test
mov
nop
push
mov
mov
scas
pop
dec
mov
mov
fidivrl
dec
outsb
inc
fs
rolb
popf
test
jne
lods
orb
fiaddl
sub
test
and
jno
inc
jns
jp
nop
sahf
popa
leave
sbb
sub
add
sahf
lcall
popa
push
or
dec
and
bound
mov
pusha
jb
clc
js
mov
push
push
aas
mov
cmc
pop
clc
add
arpl
stc
sbb
add
push
std
negl
insb
stos
aad
add
or
add
xchg
movsb
cmpsl
push
andb
divl
into
shl
jecxz
lcall
bound
or
adc
cmpsb
pop
pop
iret
mov
idivl
aaa
cmpsb
mov
xor
paddq
jp
mov
dec
mov
inc
adc
dec
pushf
pop
gs
fimull
jns
jg
sub
cmp
xlat
lods
inc
mov
mov
insb
mov
pop
dec
adc
push
jnp
dec
sub
imul
jmp
in
loopne
aaa
inc
add
mov
xor
mov
mov
xor
ret
jge
jb
or
or
sbb
pushf
adc
and
push
fs
sahf
mov
scas
jne
pop
adc
dec
xchg
hlt
xor
mov
aad
pop
xor
fcmovnbe
cwtl
mov
jns
or
cwtl
xchg
ja
jbe
movsl
fbstp
stos
xor
lret
push
pop
mov
adc
xlat
xor
mov
pop
lcall
arpl
out
jl
aam
loope
pushf
mov
adc
test
in
cmc
push
fsub
or
ds
jp
lods
dec
push
add
scas
ret
jmp
int3
mov
pop
mov
loope
cltd
les
sti
pop
cmc
add
lock
push
jg
pop
fadd
xlat
gs
arpl
jge
fnsave
imul
dec
xchg
and
leave
idivl
or
jmp
cltd
mov
sbb
xor
ss
or
dec
movsl
aaa
cmp
xchg
flds
mov
rcrl
mov
dec
iret
lods
sbbl
adc
ljmp
fwait
shll
add
dec
sbb
mov
dec
cmp
movsl
addl
mov
int3
pop
fxch
sub
movsl
adcb
lods
stos
test
lea
sub
lods
loopne
in
add
inc
mov
stos
sahf
cltd
or
mov
ljmp
jo
cmpsb
lcall
lret
cmp
sub
rolb
ss
ja
lods
daa
shrl
cmp
xchg
fwait
stc
jb
leave
fwait
out
and
ss
loopne
js
mov
or
aad
fcmovnu
insb
shlb
ficomps
cs
jns
test
push
pop
out
inc
add
and
mov
and
pop
int
push
out
insb
mov
and
adc
test
mov
xchg
pop
int3
mov
aas
dec
xor
inc
jle
clc
jle
add
ljmp
inc
ficomps
inc
cmp
xchg
sahf
xchg
rcr
mov
clc
mov
fistps
lds
cmp
hlt
inc
icebp
jl
subb
jg
out
inc
or
push
test
push
stos
sbb
and
dec
sbb
loopne
push
divl
mov
sub
iret
push
or
dec
iret
loop
xchg
sub
jp
xchg
repz
sub
loop
sub
adc
xor
lods
sbb
mov
pop
add
stos
stos
out
leave
sti
fisttps
jmp
pop
push
push
mov
test
lcall
mov
and
test
xor
imul
pushf
test
repz
push
pop
les
lahf
andb
inc
negl
add
pop
sysret
in
pushf
inc
mov
cltd
arpl
sub
fmull
cmp
call
mov
sbb
push
icebp
fldenv
sbb
std
push
in
into
sub
jge
push
shl
jne
test
sub
sahf
test
dec
jno
xor
rcll
sbbl
cmc
adc
mov
cli
fs
rorl
testl
cmp
xchg
into
mov
addr16
imul
in
dec
popf
push
jbe
pushf
xchg
int
daa
pop
mov
arpl
in
mov
jl
addb
dec
and
call
cmp
add
int3
test
sbb
xchg
stos
mov
shlb
mov
xchg
shr
sbb
sub
jle
shrb
sub
mov
dec
sub
xchg
aaa
adc
fmuls
and
jno
cmp
pop
in
loopne
xchg
std
inc
inc
push
sub
push
mov
lcall
dec
cmp
push
aad
jecxz
push
mov
rsqrtps
test
ds
sbb
mov
add
addr16
js
out
pushf
dec
loopne
int3
repnz
and
cld
dec
xor
in
subl
mov
pop
cmp
andl
mov
cmpb
mov
and
mov
adc
push
jl
ret
inc
dec
dec
mov
mov
ljmp
cmpsl
sub
leave
dec
aad
cmp
je
xchg
bound
pop
jle
mov
fmull
outsb
sub
dec
popf
xor
cmp
rcr
subb
in
jp
mov
rcll
imul
jbe
push
sbb
insl
aam
loop
pop
xchg
cmp
mov
das
dec
add
fdivl
jecxz
ds
testl
lock
psadbw
lret
out
or
test
mov
sbb
into
mov
ret
mov
sub
xorb
pop
mov
shlb
or
jg
sbb
jl
imul
xor
fidivrs
or
xchg
in
xor
std
lock
pop
mov
jns
test
test
aaa
push
cmpsb
lock
xchg
push
test
mov
push
mov
es
pushf
pop
aaa
shll
ljmp
stc
xor
xchg
fs
sub
adc
push
ret
push
xchg
cltd
scas
jmp
fmuls
push
jae
or
or
push
sbb
xor
dec
mul
sbb
jns
pushf
clc
popf
push
inc
mov
bound
das
sub
dec
les
into
loop
push
jg
jmp
push
dec
pushf
mov
inc
int
sub
int3
xor
idivb
push
push
in
fistpll
sbb
clc
mov
test
rcr
or
icebp
stos
cwtl
push
lret
stos
xchg
mov
cmp
mov
in
xor
shlb
lret
mov
jnp
xor
and
mov
out
jmp
gs
dec
mov
sub
xchg
mov
mov
mov
dec
mov
dec
jmp
xchg
rolb
xchg
clc
sub
xchg
test
in
xor
sub
push
cmp
xor
push
in
addr16
cmp
adc
out
lock
ljmp
ret
movsl
clc
mov
lods
add
jne
xchg
push
sub
push
cli
pop
pusha
mov
cmpsl
mov
pop
outsl
out
cwtl
inc
pop
cmp
cmpsb
in
and
pusha
adc
inc
xor
insb
insb
icebp
and
mov
push
insb
ret
inc
lret
fistpl
push
rorl
pop
mov
fadds
jo
lret
aam
mov
cwtl
sub
les
push
cmp
sti
loop
cmp
pop
push
xchg
adc
out
shll
sub
aam
jg
aam
push
dec
lock
js
test
jae
imul
ja
and
lret
sub
mov
inc
xchg
sbb
push
mov
mov
andl
or
jb
dec
push
lret
adc
pop
push
mov
popf
adc
pop
mov
lret
in
jg
push
subps
int3
enter
push
lret
cli
sbb
sub
fidivrl
jns
rdtsc
cmpsl
cwtl
repz
imul
adc
and
loope
shl
sub
cmp
out
xchg
cmc
mov
movsb
enter
push
and
enter
pushf
je
sub
jp
enter
jmp
or
mov
cmpsl
cmp
push
jns
mov
inc
sbb
movsl
or
lsl
out
insl
insl
scas
pop
fidivl
adc
call
fidivrl
outsl
or
movsl
test
or
mov
mov
movsl
pop
add
dec
jmp
sbb
adc
jnp
imul
inc
jno
stos
or
addb
inc
fidivrl
rcll
sub
repnz
mov
or
nop
lahf
das
movd
test
sbb
adc
push
inc
ja
adc
stc
stc
fdivs
scas
mov
push
add
orl
bound
xchg
pusha
nop
sbb
inc
clc
aam
vpaddusb
pop
xor
es
call
xchg
mov
inc
or
mov
or
mov
fdivrp
pop
add
inc
cmp
loop
mov
jp
je
push
push
jae
ret
pop
inc
sub
cmp
enter
sub
arpl
adc
or
mov
movsl
aaa
cmp
lock
movsl
fsubl
jge
rcll
sub
mov
xor
push
jae
xchg
outsl
mov
std
or
sti
xchg
pushf
jmp
and
sub
test
pusha
sarl
mov
jecxz
mov
sub
add
mov
xchg
test
aad
push
pop
data16
pop
leave
int
imul
lcall
inc
lea
inc
jns
inc
lock
pop
dec
or
adc
mov
fisttpl
pop
sbb
aad
cmpb
into
inc
mov
pop
push
repz
lds
push
aad
jo
nop
push
or
push
pop
insb
jge
jne
inc
scas
adc
push
es
adc
or
jg
push
insb
push
push
push
in
insl
push
sub
xchg
push
inc
and
push
jle
mov
cltd
movsl
pop
pop
inc
push
push
mov
push
mov
je
call
cmpsl
sub
adc
dec
cmpsl
pusha
sub
call
dec
jmp
ljmp
jbe
xchg
loope
jnp
xchg
add
mov
outsb
clc
push
les
test
test
jno
and
shll
shl
cmp
mov
out
adc
and
lea
rol
mov
movb
imul
iret
mov
cmp
cmc
imul
cld
jmp
dec
inc
mov
cmp
add
jae
jno
add
adc
sahf
les
inc
je
cli
rcrb
testl
mov
repnz
js
fcmovu
les
mov
add
cltd
shlb
scas
in
or
or
push
xor
lahf
xor
xor
dec
iret
fnstcw
scas
aam
mov
popf
pushf
xor
mov
dec
xchg
xlat
add
fdivrl
scas
rcrl
jnp
out
mov
decl
ljmp
sbbl
cmpsl
mov
or
add
xor
mov
lcall
sub
cmp
notb
ja
add
xchg
jb
or
out
rolb
es
ljmpw
les
adc
and
xchg
sahf
dec
sub
in
push
adc
and
fstpt
push
fsts
subl
jp
push
nop
testb
iret
shrb
jmp
pop
xchg
sbb
aam
sub
or
fst
in
and
subl
in
loope
cwtl
arpl
in
mov
jo
movsl
aas
adc
xor
scas
push
and
add
push
js
enter
push
popa
mov
inc
nop
repz
cmp
push
jo
mov
pop
jle
fs
inc
jp
loop
imul
rcrl
int
inc
ret
mov
push
subb
adc
mov
cltd
push
mov
jmp
aas
andb
or
pop
mov
xchg
jle
cmp
aam
inc
xor
xlat
push
movsb
push
pop
mov
test
pop
mov
nop
pop
lea
out
mov
pop
xor
pop
push
push
pop
lcall
xchg
pop
cmp
inc
jg
fcompl
xor
data16
rdmsr
pusha
mov
ret
add
mov
mov
cld
mov
cmpsb
xchg
dec
mov
hlt
mov
adc
dec
cmc
jle
adc
ja
popa
xchg
dec
jns
bound
push
cmp
or
dec
lea
jns
int3
and
stos
cmp
repnz
pop
sub
dec
xchg
into
cmp
cmp
jae
push
rorb
adc
xlat
repz
dec
sahf
pop
jge
mov
mov
fnsave
shll
ret
andb
and
xchg
es
addr16
int
jl
aas
cmp
sahf
mov
negb
out
lock
or
push
sub
lods
cmp
cmpsb
shlb
add
lods
and
jl
add
clc
paddusw
bound
movsb
adc
pop
test
lds
mov
mov
or
in
sti
lcall
pop
xlat
es
insb
int3
int3
dec
xchg
cmp
mov
pushf
daa
inc
cmpsl
arpl
in
fcmovbe
inc
jle
mov
fst
adc
dec
cld
lcall
gs
mov
sbb
cwtl
cmp
sahf
add
jo
mov
ror
iret
sub
int3
test
mov
and
and
arpl
mov
enter
mov
repz
add
stc
fs
pop
push
pop
adc
and
or
pop
cs
lods
push
jp
sbb
mov
ss
jg
popa
loopne
jl
pop
adc
lret
xor
or
lret
je
shlb
fsubrp
in
xor
mov
push
xchg
lret
inc
dec
xlat
push
addr16
lods
lret
pop
cld
in
push
je
xchg
ficompl
dec
pop
xchg
cwtl
push
je
or
or
es
subl
dec
pusha
stos
ss
nop
hlt
add
jo
cmpsb
dec
push
push
aam
push
das
jb
lahf
iret
ret
jl
cs
add
lret
imul
dec
lahf
scas
add
outsl
and
mov
insl
frstor
mov
sbb
pop
outsb
mov
push
pop
ror
xor
inc
and
ret
sbb
add
jae
xlat
add
mov
rcrl
pop
push
push
mov
mov
rcrl
cmpsl
into
mov
mov
mov
out
pop
mov
dec
cmpsl
hlt
test
into
xchg
push
icebp
cli
inc
jae
test
push
cmpsb
jae
push
and
xlat
sub
dec
andb
jge
pop
das
mov
xchg
push
jbe
xor
maskmovq
imull
cmpsl
ss
mov
mov
cs
fwait
pop
inc
outsl
lea
jle
push
into
sub
adc
lcall
push
loopne
xchg
sbb
dec
xchg
test
je
arpl
xchg
mov
ss
ljmp
adcl
fbstp
bound
cmp
mov
out
push
ljmp
pop
loopne
xchg
sbb
fwait
mov
cmpsl
lods
pusha
int
cmpsl
mov
lret
shrl
sub
or
mul
icebp
cmpsl
in
insl
or
sbb
or
lods
in
mov
loopne
lret
cmp
mov
cwtl
push
cmp
mov
enter
and
mov
push
addb
ret
jo
sbb
xor
pop
cmpsl
add
scas
movsb
cmpsb
fwait
pop
cmovle
sbb
jns
adc
pop
fs
cmpsl
jle
lods
cwtl
inc
sub
pop
js
lahf
jno
outsl
rclb
ret
insl
cmpsl
popf
outsb
jge,pt
cmpsb
outsb
gs
pop
inc
mov
and
cmc
mov
int
mov
xchg
inc
inc
pop
pop
rcrb
test
mov
cmp
cmpsb
pop
popa
adc
pop
dec
sti
cli
fmul
jmp
loop
mov
pop
dec
loopne
xor
icebp
add
sub
mov
push
push
push
and
mov
out
dec
out
xor
mov
sbb
jge
adc
push
mov
or
out
dec
mov
and
add
xchg
jne
xor
jmp
call
aas
or
sub
xchg
sbb
out
hlt
and
cmp
or
aas
inc
xchg
mov
xchg
idiv
int3
jg
dec
lret
pop
ja
lret
or
push
push
push
aaa
cld
iret
lahf
lods
shlb
mov
pushl
mov
push
mov
pop
lds
fistl
dec
movsl
cli
inc
or
mov
or
je
int3
jle
mov
cs
pushf
popa
dec
in
js
call
push
mov
sahf
decl
mov
call
lods
dec
cmpl
push
push
push
pop
or
fmul
addr16
adc
jg
mov
nop
mov
mov
lea
shrl
scas
fisubrs
in
gs
and
leave
mov
push
rclb
pop
adc
aad
cmpsl
fucomi
repnz
sub
mov
stos
fnstcw
push
ficoms
pop
mov
mov
mov
iret
loope
aad
aaa
das
lcall
dec
loopne
mov
in
test
scas
jne
sub
push
add
pop
in
ja
outsl
inc
mov
pop
cmpsb
jbe
pop
jno
in
fcomi
stc
sub
mov
xchg
cmpsb
xchg
ret
pop
out
inc
ds
insb
inc
mov
and
lret
push
or
ss
cmp
push
push
cli
popf
popa
pop
xchg
aas
popf
adc
mov
fs
xchg
xchg
sub
fistpl
scas
test
in
roll
jp
in
in
repz
sub
ja
sub
shrl
aad
popf
push
add
mov
jno
mov
mov
xchg
sahf
xor
or
pop
and
inc
inc
xchg
test
fsubl
mov
lcall
test
aas
cli
jge
adc
fcomi
mov
out
scas
dec
pop
dec
fsubl
dec
decb
cltd
mov
or
push
sti
mov
adc
mov
aas
lcall
js
mov
mov
stos
sbb
incl
mov
add
std
push
adc
call
pop
js
mov
or
leave
inc
sub
inc
movsl
outsl
rorb
add
sub
jns
test
aaa
in
int
icebp
cwtl
mov
test
out
and
mov
sub
sahf
mov
adc
jnp
into
add
mov
jns
fwait
shlb
cmc
xor
add
cmpsb
ds
imul
pop
ljmp
ljmp
ret
sbb
repnz
js
loop
mov
push
push
rcpps
int
sbb
sbb
stos
rolb
std
push
in
jns
push
dec
mov
dec
and
inc
jae
mov
enter
std
jge
pusha
imul
ss
xor
mov
jecxz
fsubs
xchg
mov
xor
dec
sahf
inc
sub
mov
insb
insb
les
or
scas
in
sbb
addr16
iret
jb
fldpi
nop
mov
unpckhps
mov
xlat
push
xchg
out
xchg
sub
or
adc
mov
notb
loop
add
mov
insl
lods
popa
out
in
xor
popf
mov
movsl
dec
pushf
or
pushl
cmpsb
xorl
cltd
adc
add
dec
and
adc
jne
mov
mov
adc
shll
insb
pop
leave
sub
addr16
in
aad
adc
and
nop
jge
fcomp
pop
dec
shrl
xchg
shlb
out
lret
inc
sub
mull
or
js
cwtl
mov
push
std
pop
adc
push
mov
push
sub
aaa
movsl
and
repz
pop
out
mov
add
dec
andb
inc
iret
add
scas
adc
movsl
dec
xor
test
and
mov
sbb
inc
das
jno
or
out
nop
sbb
dec
adc
test
and
outsb
mov
jo
arpl
decb
js
inc
bts
xor
stc
leave
xor
inc
mov
cmp
mov
sbb
mov
into
jl
outsl
notb
inc
fists
fistpl
imul
sub
inc
adc
lock
sti
inc
dec
xchg
push
into
adcl
call
jmp
lods
in
xor
lock
sub
or
iret
arpl
xchg
inc
jl
pop
jo
enter
pusha
test
mov
aas
in
out
or
nop
js
int
imul
out
fmull
push
and
lahf
stc
addr16
jo
and
pop
lret
ljmp
and
and
repnz
hlt
cmc
pop
dec
mov
or
mov
push
sub
mov
jle
push
add
push
daa
orb
jns
stos
xchg
and
adc
mov
stc
outsl
mov
push
stos
cmc
and
xor
stc
push
out
pop
dec
rcrl
cmpsl
and
jl
rcl
jb
dec
daa
fstps
sarl
mov
fisttps
sub
or
cmpsl
ss
sbb
push
inc
jb
mov
pop
push
lea
xlat
inc
shlb
and
pop
loop
hlt
test
xchg
mov
fmul
inc
pop
and
jo
fbld
dec
ficoms
dec
cmp
mov
pop
std
std
pop
mov
jo
lds
xchg
cld
add
pusha
sub
sbb
push
cld
aaa
ret
std
lret
jae
lods
outsl
add
xchg
sub
jg
jmp
stos
rolb
outsl
mov
adc
ret
pop
push
popf
stc
in
ret
jle
xorb
mov
bound
stc
xor
insb
fsts
scas
mov
shll
ret
and
jl
std
lds
movsb
cmpsb
cmp
lea
ljmp
add
pop
jmp
enter
mov
notb
fadd
pop
add
aas
add
les
sub
mov
or
or
inc
out
mov
pop
and
push
and
fists
xor
shr
or
int
mov
into
mov
ss
das
leave
sub
mov
insb
cmc
sbb
addr16
in
repz
push
call
rcr
das
push
push
ljmp
xchg
mov
xchg
mov
stos
fxam
subl
andl
daa
stos
int3
filds
in
and
dec
push
xchg
or
or
mov
or
cmpsb
pushf
mov
cs
inc
fisttpll
ret
sub
leave
ret
clc
jb
pop
loop
imul
or
sub
sbb
stos
dec
lret
and
ss
pop
arpl
jbe
shlb
imul
push
aas
jo
inc
pop
cmp
scas
insb
into
std
cs
inc
and
adc
xchg
push
sub
sbb
mov
push
movsb
ficomps
mov
lahf
jne
fsubl
sbb
mov
aas
lock
mov
adc
sti
push
push
adc
push
fwait
cmp
pop
mov
lret
js
data16
add
mov
sub
xchg
push
pop
inc
mov
outsl
movsb
in
rolb
add
nop
add
jg
stos
out
icebp
sub
or
int
cmp
jmp
test
in
mov
mov
ljmp
or
test
push
pop
arpl
sub
aas
outsl
and
sub
xchg
ret
insl
popf
das
hlt
ret
test
sbb
and
dec
nop
lock
adc
lahf
jns
movsb
or
mov
jno
mov
adc
int
add
xchg
cmpsb
insb
cmp
es
xor
addb
dec
lret
sahf
mov
nop
pushf
popa
mov
pop
and
pop
nop
sahf
sbb
push
lret
aad
inc
mov
pop
scas
jle
jae
xchg
addr16
into
sub
sahf
aad
aam
sub
jae
test
test
jae
pop
pop
gs
fwait
orb
xor
adc
add
out
inc
jbe
ja
ja
xlat
push
jno
flds
jmp
jo
mov
stc
pop
outsb
sub
stos
fmul
test
insl
cs
inc
scas
mov
mov
loopne
cmp
adc
movb
test
and
mov
dec
add
push
adc
adc
aad
popf
or
js
jmp
cltd
mov
nop
xchg
mov
cmp
cmp
cmp
mov
push
mov
pop
int
cmpsb
or
push
jae
ret
movsl
sub
sarb
repnz
test
arpl
jmp
adc
movsl
inc
or
dec
jns
xlat
addr16
pop
imul
out
push
or
pop
pop
inc
out
pop
xor
xchg
fdivl
and
mov
sbb
xchg
mov
imul
imull
sbb
shll
mov
mov
jge
inc
inc
leave
jp
push
jnp
mov
sbb
mov
mov
jle
shlb
jle
xchg
dec
pop
hlt
xchg
pop
test
pop
stos
ret
dec
inc
dec
push
nop
std
outsb
iret
orl
cmpsl
ljmp
rorl
or
data16
mov
ficoms
iret
adc
jnp
push
pop
jb
outsl
int
jl
push
lret
test
add
mov
xchg
cmp
rcl
add
xchg
imul
scas
adc
mov
adc
xor
pop
xor
call
add
add
mov
xchg
sbbb
pop
incl
cs
notb
pop
cld
int
outsl
mov
mov
mov
mov
not
jmp
adc
aas
test
fstpl
xlat
add
fsubrl
shlb
int
sub
xor
imull
push
sbb
mov
out
mov
lret
push
iret
ficoml
sub
jmp
fmul
mov
mov
loope
popa
mov
aad
in
out
outsl
sub
cmp
mov
lods
jg
mov
ja
cmp
mov
add
xor
arpl
sub
dec
dec
jg
xchg
lds
inc
adc
jecxz
sbb
adc
push
repz
mov
xor
fnstcw
lods
cltd
mov
mov
mov
mov
fmuls
adc
js
test
pop
xlat
sub
cltd
dec
sbbb
mov
adc
cs
lea
push
es
pop
mov
sbb
fbld
push
lock
mov
fwait
lcall
stos
fbld
clc
mov
jge
in
or
adc
inc
cmpsl
cmp
stos
pop
inc
subl
add
add
push
xor
xchg
out
xchg
shlb
xchg
mov
out
aam
stos
pop
repz
js
mov
fwait
dec
inc
pop
dec
aam
cltd
jecxz
shrb
iret
jp
jl
lds
sbb
mov
es
stc
xchg
cli
adc
arpl
shrl
call
daa
and
repnz
dec
testl
push
mov
in
mov
xchg
xor
sbb
push
notl
pop
and
in
sub
pop
jmp
mov
xchg
idivb
push
test
xchg
cmovp
out
cmp
decl
or
add
cmp
shr
decb
repnz
mov
or
dec
and
dec
sub
repz
xor
jl
bound
adc
xor
mov
testb
js
fwait
xchg
sub
shl
fistps
aaa
sbb
dec
cs
and
push
cmp
fbld
out
or
arpl
shl
repz
sbb
dec
lea
lret
ret
ret
jb
jmp
cld
outsb
jae
push
sbb
hlt
movsl
pop
ret
lock
mov
sbb
pop
inc
adc
movsl
jnp
dec
outsb
xchg
or
pop
cwtl
cmp
adc
xlat
out
jecxz
and
sub
out
mov
imul
xor
pop
push
inc
mov
cmp
imul
mov
ret
andps
or
sbb
mov
loope
jae
inc
jae
in
cmpsb
push
dec
jle
add
out
sbb
jmp
gs
or
outsl
out
and
inc
mov
shlb
rolb
test
data16
mov
sub
push
sbb
repnz
xchg
sbb
cld
adc
push
mov
adc
dec
icebp
fnstsw
addl
mov
xchg
ja
mov
cmp
in
fidivs
fsubrs
js
add
mov
xor
ja
test
fnstsw
xchg
dec
std
lods
jne
pop
into
stos
sbb
sarl
add
cmp
xor
xor
push
inc
lcall
popf
lcall
xor
cmpsl
adc
adc
pop
xchg
jae
negl
mov
xchg
push
jnp
roll
test
test
std
out
mov
popf
jmp
cmp
out
int3
int
xchg
jbe
loopne
push
mov
dec
jge
imulb
xor
or
test
cltd
jo
mov
mov
pushf
lock
jb
push
test
xor
pop
repz
daa
scas
xor
mov
push
adc
rorl
aas
jno
pop
cmp
jle
cltd
or
rol
dec
ja
xor
cmp
push
lock
xchg
push
pop
das
jb
mov
lcall
xorps
and
nop
hlt
jb
push
icebp
call
repz
mov
dec
pop
pop
data16
cmp
arpl
cmp
push
clc
insb
insb
cmp
push
neg
lcall
call
add
xor
cmp
xchg
and
xor
mov
outsl
sub
jl
gs
nop
xor
ret
jb
push
lahf
pop
mov
test
push
xchg
cmpsl
pop
cmpsl
pop
dec
lret
mov
push
push
fdiv
cmc
mov
xor
lea
movsb
push
test
gs
popf
hlt
pop
aam
and
mov
xor
xor
push
xchg
xchg
ret
ja
mov
inc
test
push
pop
sti
rolb
inc
fcmovnb
mov
idivl
insb
loopne
dec
ja
ja
imull
test
xchg
push
xor
inc
cld
lods
and
out
ss
mov
incb
subl
outsl
pop
sub
inc
adc
or
xchg
jae
mov
cmp
cwtl
pop
gs
movsb
pop
sub
inc
imul
sbb
sti
sub
out
xchg
jmp
fistpll
fidivs
xchg
insb
insb
xchg
jle
dec
jge
lods
sahf
mov
hlt
and
or
sub
hlt
ljmp
pop
inc
in
jo
add
orl
test
jne
mov
arpl
imull
and
test
cs
in
mov
fs
inc
lret
add
mov
loopne
dec
addb
mov
sbb
loopne
mov
jmp
xchg
cld
jge
cmpsl
cmp
repnz
inc
mov
and
int3
aam
mov
pop
mov
xor
fcmovnu
add
ljmp
ret
mov
push
inc
jnp
pop
mov
push
pop
inc
andb
movsb
xor
push
mov
imul
pop
jbe
ret
add
arpl
clc
pop
xchg
jmp
mov
or
xor
out
pop
popa
stc
cmpsb
mov
rcrb
test
inc
std
xchg
add
movsb
jne
pop
mov
mov
or
pop
idivb
sbb
sbb
push
out
mul
and
mov
jo
fwait
data16
jo
cld
insl
bound
sub
jle
int3
out
jl
mov
faddl
lods
daa
pcmpgtd
or
sub
or
sub
mov
cmp
mov
popa
sahf
loopne
enter
mov
sbb
xor
and
hlt
and
sahf
xchg
or
pop
and
lcall
xchg
test
jg
xchg
pushf
aaa
pop
roll
outsb
xchg
and
mov
mov
fstpl
outsb
fwait
jnp
icebp
xchg
xchg
and
es
push
sbb
xor
sysexit
in
mov
cltd
enter
pushf
rclb
cmp
xchg
in
enter
push
iret
adc
add
jne
orb
rorl
aam
enter
jb
lds
mov
test
and
adc
inc
loope
push
or
add
inc
adc
dec
xor
popa
cmp
in
and
pop
subb
bound
adc
mov
cmp
mov
cmp
adc
enter
scas
cwtl
jp
push
pop
pop
xchg
inc
andl
lods
lea
xchg
int3
sub
adc
test
ljmp
shrl
gs
int
push
std
int
sbb
jp
cmp
adc
pop
jo
mulb
lahf
push
rorb
test
push
loope
shr
pushl
arpl
arpl
sti
lahf
xor
jb
lds
int
jecxz
xor
mov
cmc
cmpb
xor
xchg
mov
mov
loope
scas
into
adc
mov
jne
inc
lcall
pop
lea
scas
adc
xchg
push
adc
or
ss
sub
aas
push
into
dec
mov
adc
in
pusha
mov
in
mov
insb
cltd
mov
mov
or
mov
pop
scas
sub
xchg
push
adc
loope
roll
loop
mov
outsl
jne
mov
dec
rcrl
fsubrl
test
test
out
or
mov
fs
add
rolb
cld
test
xchg
jg
inc
imul
push
jne
pop
outsl
inc
aad
jmp
inc
sub
mov
dec
add
jecxz
dec
pop
ds
sahf
lods
jp
mov
repnz
ret
or
cmp
xchg
repz
add
scas
jmp
int
dec
repz
ret
cltd
push
int
mov
cmpsb
jno
sahf
jl
fwait
divl
mov
ret
adc
add
cwtl
scas
repz
sbb
sub
cmp
iret
and
les
sbb
lret
xor
and
add
and
mov
jbe
push
and
xchg
and
xchg
testb
loope
sti
sbbb
jle
or
sub
push
loopne
mov
and
jb
ret
subl
pop
mov
inc
movsb
ret
pop
or
scas
shlb
cli
dec
adc
leave
icebp
fdivs
xchg
inc
popl
rcrb
test
pop
idivl
and
dec
arpl
pusha
divb
jl
icebp
xchg
mov
arpl
ja
sbb
xor
jp
jns
test
push
xchg
xchg
cmc
das
push
icebp
lcall
mov
push
inc
xor
imul
test
mov
xchg
fnstenv
call
mov
mov
push
ljmp
mov
sbb
fisttps
setne
lahf
cli
les
mov
fdivrs
test
mov
ja
addr16
sbb
jnp
pop
sub
xchg
cwtl
and
lds
in
aaa
mov
ss
xlat
popa
lods
cs
repz
int3
jl
push
in
xor
stos
mov
jecxz
mov
dec
push
mov
mov
cmpsl
mov
push
mov
xor
insl
push
repz
or
icebp
dec
cmp
inc
int
leave
jmp
or
xchg
outsb
pop
stc
pushf
push
lret
in
daa
dec
out
or
lock
pop
lret
cmp
jb
pop
push
sbb
in
push
or
push
in
fmull
or
mov
mov
daa
divb
ret
in
mov
jmp
inc
mov
mov
dec
sub
fwait
mov
sbb
nop
push
rorl
pushf
into
add
insl
xor
ficomps
jns
into
stos
pop
cmp
adc
call
push
push
xor
mov
es
mov
add
test
icebp
setle
add
sti
les
movsl
mov
xchg
pop
pop
dec
xchg
sbb
sbb
sbb
pop
or
lods
lods
push
test
or
adc
addr16
test
lret
leave
fxch
mov
cmpsb
sub
xor
fcoms
bound
mov
sub
nop
add
mov
les
or
rcll
or
jne
daa
out
or
mov
cmp
in
call
sbb
sahf
and
cmp
rclb
ret
mov
and
test
out
lock
sahf
and
ret
pop
mov
iret
aam
out
sahf
jno
sbb
pop
and
lret
sub
neg
jae
aas
pop
mov
mov
sbb
cs
jmp
fstl
inc
mov
add
cwtl
cli
les
adc
xchg
flds
popa
sbb
fcoms
dec
push
adc
int
scas
jle
jne
dec
dec
xchg
addr16
and
add
dec
cld
insb
xchg
mov
dec
xchg
xchg
sub
mov
jb
xchg
sti
fdivs
sub
lea
stos
test
movsl
cmc
js
xchg
sbb
rolb
lds
in
psubb
sbb
ljmp
sti
ret
xchg
pop
imul
cli
add
pop
fiaddl
test
adc
dec
out
pop
enter
fsqrt
das
adc
popf
fs
jae
pop
scas
data16
push
cmp
lea
lcall
xchg
arpl
scas
das
pop
xor
in
push
sti
subl
xchg
pushf
or
jp
cs
outsl
jge
mov
divl
jbe
mov
mov
cmc
and
pushf
lahf
push
jo
and
jae
outsb
lds
and
jnp
mov
je
jl
dec
sub
mov
pop
das
ljmp
lahf
insb
stos
jp
and
and
jae
dec
rol
imul
cmp
ss
test
push
mov
adc
push
gs
cvtps2pi
pop
lret
orb
push
clc
sbb
lock
les
push
into
fsubrl
ss
pushf
or
jne
inc
pop
sarb
dec
pop
cld
sub
addr16
sbb
cmc
xchg
push
adc
imul
xchg
jl
push
stos
and
fs
push
movsl
jmp
es
jae
clc
push
sub
ljmp
mov
push
pusha
fnstcw
repnz
dec
xor
les
pop
bound
and
cmpsl
arpl
out
fimuls
dec
aaa
push
inc
mov
xchg
stos
enter
jg
jne
add
cmpb
cltd
or
lahf
ja
lods
cwtl
std
inc
aad
lods
ror
mov
sti
pushf
push
mov
daa
adc
xchg
jmp
mov
enter
push
gs
adc
insl
out
mov
xor
sub
mov
mov
cmp
rorb
pop
dec
cld
rorl
jo
aam
mov
aad
mov
in
pop
push
jo
add
test
mov
pop
iret
fwait
loopne
xor
inc
sub
leave
shrl
lret
insb
jae
movd
xor
xchg
push
xor
jg
fcmovnbe
mov
ret
xchg
jmp
xchg
dec
mov
js
jbe
mov
test
push
and
mov
scas
adcl
cmpsl
inc
lods
data16
mov
fbstp
outsl
sub
inc
mov
sbb
int3
pushf
stc
sbb
shll
inc
out
jae
and
or
cmp
leave
mov
enter
fmull
adc
pushf
int3
jnp
es
sbbb
out
jae
push
push
aas
cmp
insl
dec
roll
sbb
sub
adc
enter
xchg
cs
mov
dec
outsl
in
cmc
movsl
push
pop
lock
xchg
mov
mov
roll
pop
stos
addr16
mov
mov
dec
movsb
jo
cwtl
out
or
mov
push
or
xchg
sub
pop
pop
inc
mov
subl
inc
int3
imul
pop
pusha
jb
das
mov
lods
ja
or
mov
xchg
xchg
int3
add
lretw
and
cmp
adc
jmp
cltd
idivb
and
dec
sub
hlt
inc
xor
jae
fmuls
sbb
mov
inc
jge
jl
fisttpl
mov
inc
jno
rorb
dec
adcl
out
and
sub
pop
fs
cmp
gs
mov
rcr
mov
pop
jns
and
cltd
mov
mov
sbb
arpl
aaa
xchg
xor
xor
pop
into
mov
std
mov
fsubl
pop
mov
insb
mov
mov
ds
jae
sbb
pop
rcrl
mov
add
xchg
push
mov
lods
pop
leave
js
dec
cli
ljmp
fwait
outsb
cmp
cld
dec
jle
icebp
jno
fcompl
lret
push
or
mov
sub
scas
push
mov
mov
aas
add
push
jns
pusha
adc
pop
add
adc
jno
sbbb
inc
ret
mov
pop
mov
mov
mov
fdivl
shl
js
popf
lret
push
dec
mov
mov
sub
loope
jg
cs
and
pop
push
test
push
and
ret
sbb
jns
mov
movsb
mov
pop
jecxz
inc
cld
sahf
arpl
lcall
push
imul
jb
inc
and
dec
call
xchg
jno
rolb
push
fs
mov
ds
sahf
imul
xlat
lahf
cmp
sbb
xor
ljmp
mov
fdivr
or
xchg
daa
jmp
mov
add
push
inc
adc
pop
rcrb
mov
xchg
mov
enter
cmp
sahf
maxps
in
push
mov
jmp
arpl
call
push
xchg
xor
stos
xor
xorl
mov
ss
cmp
test
xchg
and
ja
in
into
call
fiadds
pop
fdivl
mov
xor
dec
or
inc
push
and
gs
mov
lahf
int3
fstpt
xor
dec
loope
imul
jmp
mov
mov
cmp
mov
iret
sub
mov
mov
and
cmpsl
xchg
pushl
leave
lods
and
popa
xchg
js
cmp
jmp
ret
mov
lret
scas
push
inc
xor
stos
test
sub
mov
xlat
ljmp
and
inc
and
and
and
scas
cmp
sbb
sbb
lret
fadds
pushf
int
sbb
dec
je
fdivrs
cmp
sbb
inc
andl
sub
popa
mov
insb
xchg
pop
stos
add
cmp
mov
insl
sub
stos
cmpsl
imul
test
cmc
cmpl
or
dec
daa
dec
or
das
scas
jb
aad
outsl
dec
out
fsubrs
lds
pop
sbb
dec
xor
lods
mov
sbb
mov
cld
add
fcompl
je
cli
and
leave
rcr
ds
sbb
xchg
dec
adc
stos
sbb
leave
or
shlb
push
andb
mov
jg
dec
xorl
inc
add
cmp
ficompl
add
iret
jle
and
out
sub
xor
addr16
in
sbb
stos
fucom
sub
lret
mov
out
mov
mov
push
enter
inc
iret
pop
sub
jle
inc
sbb
xor
xor
xchg
dec
or
push
add
scas
out
adc
sbb
lock
jno
test
jns
add
or
jg
outsb
ljmp
add
xorl
fcoml
mov
or
jnp
mov
rorl
fsubr
jl,pn
sub
lahf
packsswb
sub
mov
std
jmp
inc
lret
std
out
jl
iret
mov
lods
dec
shll
push
or
jo
xor
cmc
sbb
cmp
ja
and
cmpsl
dec
into
aam
jb
xchg
ss
inc
dec
mov
rclb
mov
inc
mov
mov
pop
fs
shlb
std
pop
jne
inc
jecxz
insb
mov
aaa
stos
sbb
xchg
stos
jge
jbe
sarb
leave
or
insl
mov
stos
pop
push
cmp
and
fdivrl
jmp
or
or
xchg
gs
mov
dec
jg
jb
sub
or
xor
movsb
cld
jmp
fadds
pop
xchg
lods
adc
aas
loopne
push
fldcw
mov
ffreep
sbb
and
pop
cmovne
push
enter
add
divl
push
xchg
dec
and
or
jnp
stc
stos
pop
test
pop
mov
mov
sub
aad
jge
stc
stc
enter
loopne
sub
out
xchg
ret
xchg
or
sbb
ja
inc
jge
inc
jo
mov
xor
insb
xor
cmp
movsl
ret
cmpsb
inc
lahf
add
mov
lods
out
fldenv
push
dec
imul
or
add
adc
sbb
push
cmp
test
inc
insl
imul
pop
xor
jb
push
cmp
push
cmp
mov
mov
jl
stos
mov
jb
mov
and
mov
cmp
adc
lods
out
cltd
xchg
push
xchg
andb
mov
or
adc
pop
pop
sbb
inc
loop
mov
pop
xor
bound
pop
add
adc
cltd
push
push
sbb
stos
xor
cmp
ljmp
xor
stos
rcrl
mov
pushf
insl
jno
add
sub
std
and
push
sbb
loope
lcall
in
dec
cmp
imul
push
push
outsb
into
jae
aas
mov
cmc
mov
in
shll
outsl
inc
adc
insl
jl
jle
mov
in
loopne
aam
push
outsl
mov
sub
xor
xchg
mov
cmpsb
inc
mov
sbb
rorl
sbb
dec
clc
mov
mov
pop
jnp
mov
jae
jnp
scas
shll
out
pop
or
sub
popf
stos
adc
je
cmp
pop
lret
and
mov
xchg
bound
test
and
popf
mov
loopne
mov
imul
pushf
addr16
out
lret
cmp
lock
movsl
adc
mov
das
fisubrs
mov
mov
testb
lret
xchg
out
ret
sbb
and
nop
jmp
inc
aas
jp
subb
cmp
aam
bound
in
popa
int
dec
nop
sub
pop
jle
repz
lahf
lea
shr
adc
xchg
mov
mov
mov
jecxz
aaa
fdivrl
inc
icebp
lds
mov
adc
push
push
mov
mov
pop
adc
rcll
jmp
pop
pop
push
sub
mov
out
xchg
add
cmp
jmp
out
jne
add
dec
inc
test
xor
in
popa
js
push
inc
pop
inc
incl
push
push
scas
repz
pushf
repnz
shl
pop
es
sub
hlt
push
aam
push
stos
jb
mov
xchg
nop
mov
adc
lods
cmp
add
and
int3
rcr
sub
out
lret
into
cmc
cmp
push
jp
loope
outsl
add
xchg
sbb
push
into
mov
bound
dec
dec
jl
push
xchg
mov
push
into
pop
fwait
xchg
int
scas
mov
jg
das
jbe
push
iret
xlat
repnz
push
jb
mov
in
mov
clc
jl
xor
push
add
adc
sti
jae
xchg
dec
cli
jge
mov
xor
inc
insb
jo
cmp
scas
lea
adc
cmpsb
lcall
std
add
mov
xor
sbb
mov
xor
mov
cmp
xor
pop
fisttpl
sbb
sahf
jmp
imul
popf
js
enter
mov
xchg
add
ljmp
xchg
cltd
mov
clc
mov
fmulp
jo
ljmp
movb
clc
jno
jne
std
repnz
jo
test
cs
ficoml
inc
iret
jnp
mov
aad
cmc
mov
sub
mov
das
sbb
mov
inc
loopne
jns
adc
repnz
and
loop
adc
inc
aam
sarl
or
adc
jle
mov
pop
adc
frstor
shlb
push
stos
in
aaa
sbb
in
sub
push
or
jb
ret
jnp
add
mov
shl
inc
loop
rclb
cmpsl
sahf
notl
jl
movsb
call
div
mov
jle
cltd
inc
push
xor
dec
cmpsb
sub
repnz
push
xlat
das
cli
xchg
stos
xchg
lcall
pop
xchg
push
adc
rcr
jbe
xor
sbb
xchg
mov
cmpsl
dec
cmpsl
roll
mov
rcrb
fmul
movsb
push
cwtl
dec
int3
insl
jns
and
dec
imul
sub
sbb
lea
into
dec
dec
jnp
adc
dec
pop
xchg
sub
rcll
pop
xchg
pop
cmpsl
mov
push
out
mov
popa
icebp
or
or
add
push
imulb
jle
loop
ret
jo
pop
daa
mov
fcos
test
dec
lods
mov
sbb
dec
or
mov
pop
mov
shll
aas
daa
lret
add
dec
mov
out
cmp
jle
and
lds
pop
sarb
roll
dec
pop
mov
sub
lahf
inc
xchg
dec
dec
lds
fcoml
cmp
lret
xlat
sbb
dec
popa
pop
add
les
mov
jo
push
aad
lods
outsl
shll
push
aaa
adc
dec
pop
in
add
jg
lea
mov
mov
lcall
push
sahf
lods
jns
sti
sub
out
adc
sub
sbb
stos
mov
pop
add
mov
xchg
out
movsl
add
mov
out
fyl2xp1
pop
daa
decl
fsubl
xchg
xor
popa
cmpsl
lods
pop
sbb
cmp
addr16
mov
pop
xchg
inc
jecxz
mov
scas
cmp
inc
mov
insb
test
fcomip
inc
jle
imul
fildl
add
cli
push
dec
or
inc
xor
mov
mov
add
fisubrl
rcll
mov
mov
jbe
mov
mov
mov
out
sbb
push
mov
shlb
inc
in
push
or
fdivl
push
shr
mov
jecxz
cwtl
cli
xor
fs
rcr
cli
mov
push
or
fisttpl
pop
notl
icebp
fcoms
arpl
add
mov
mov
mov
in
jl
or
mov
addr16
jae
mov
jb
pop
or
cmp
outsl
jo
push
test
data16
das
in
xor
mul
add
mov
hlt
mov
out
out
inc
jl
clc
fisubs
sti
push
add
ficomps
dec
adc
mov
idivl
pop
call
sub
cmp
inc
std
mov
jne
jno
or
imul
flds
xchg
mov
fadds
cmpsb
in
daa
iret
loope
int
popf
daa
sbb
fiaddl
jno
or
fdivrs
lcallw
addr16
mov
dec
cmp
or
mov
popa
cwtl
xor
sub
iret
push
and
xchg
ror
imul
xchg
inc
imul
mov
push
sahf
sbb
xor
dec
out
mov
jne
pop
inc
push
pop
pop
xor
push
loope
push
inc
mov
cltd
lcall
sbb
cmpsb
aam
orb
jbe
mov
lahf
jae
dec
xor
xchg
sbb
mov
stos
cs
repnz
not
pop
mov
ds
das
push
lods
rorb
cmpl
test
mov
movsl
aad
std
mov
rcl
fwait
mov
dec
cmp
xor
pushf
arpl
out
cmpl
fwait
notl
test
xchg
xlat
mov
dec
cltd
movsb
mov
lcall
adc
popa
xchg
cmp
add
pop
mov
add
ja
andl
sub
aad
repz
or
pop
pop
mov
aas
and
or
jg
cmp
dec
fs
mov
mov
bound
cmpl
hlt
xlat
divl
pop
dec
jmp
sbb
insl
cmp
ja
mov
cltd
out
push
in
xchg
jecxz
jnp
pushf
xchg
testl
inc
sub
dec
jns
mov
test
dec
inc
lret
testb
pop
mov
inc
pop
sub
sbb
daa
xchg
aam
inc
sub
xchg
add
adc
lock
sbb
xor
insl
test
inc
and
or
sbb
push
dec
lret
mov
mov
cmp
sbb
or
xchg
jns
jns
dec
jae
add
mov
out
cmp
or
popw
cmp
lret
mov
push
pop
into
pop
loopne
daa
push
insb
push
sbbb
mov
sbb
jo
out
cmc
adc
mov
popf
jl
sbb
sub
and
pop
sub
cmp
cmc
mov
lahf
fstpl
xchg
mov
adc
test
jo
pop
in
pop
pop
scas
divb
inc
xchg
pushf
and
testl
test
orl
stos
push
add
mov
jo
push
ret
addr16
add
test
enter
pop
jle
or
out
mov
mov
std
mov
jne
sti
test
out
add
ret
mov
and
outsl
ss
mov
push
sub
out
sarl
add
xchg
bound
push
lret
sbbl
or
push
pop
sbb
lea
nop
cmp
mov
repnz
into
inc
dec
xchg
inc
cmp
pop
mov
pusha
xchg
sub
mov
pop
mov
dec
mov
adc
sub
movsb
pop
fs
push
mov
sub
cmp
push
ret
out
loop
push
add
hlt
add
dec
xor
rcll
lock
mov
std
pop
mov
jp
jne
shrb
adc
jno
sub
and
add
mov
pop
test
mov
jo
mov
jmp
and
cpuid
fcmovnbe
cmpsb
inc
mov
dec
mov
add
push
iret
sub
std
stc
popf
pushf
in
shlb
lods
insb
in
push
call
sbb
iret
mov
test
iret
mull
add
jo
shlb
aad
pop
cwtl
ljmp
out
xchg
sub
out
mov
sbb
daa
cmp
push
shll
std
inc
mov
ja
outsl
dec
push
fldenv
cmpsb
sub
add
xor
jns
adc
int3
sub
loope
xor
push
ss
testl
call
mov
inc
mov
push
xchg
cmp
lods
mov
cmc
jg
mov
and
inc
inc
sti
inc
insl
sub
or
repnz
ljmp
cmp
dec
inc
fsubrs
push
sbb
adc
fldl
mov
xchg
xchg
jno
mov
mov
pop
fdivrl
dec
mov
or
out
or
jns
fadds
inc
xacquire
jecxz
cld
sahf
addr16
pop
in
pop
sbb
stc
popa
dec
xacquire
dec
jo
loopne
or
std
cs
add
stos
out
pop
in
loop
mov
pushf
dec
mov
outsb
and
scas
clc
mov
pop
jmp
cld
outsb
mov
cmc
repnz
push
inc
roll
enter
mov
sub
mov
jno
scas
mov
xchg
xor
cmovl
bound
mov
fstl
push
bound
sub
jnp
pop
and
sti
ret
out
xor
loope
in
inc
out
or
cs
push
in
or
stos
insb
pop
dec
ret
cmpsl
gs
mov
mov
sub
cmp
ficoml
bsr
popa
popa
addr16
dec
aaa
pop
sub
fimull
and
arpl
movsb
fdiv
or
inc
addr16
or
inc
les
jl
mov
sub
xchg
icebp
cmp
and
pop
jg
or
std
mov
mov
test
scas
popa
sub
in
cmp
mov
movsl
inc
sbb
clc
adc
inc
testl
mov
add
iret
mov
decl
out
test
push
es
xor
mov
pop
mov
xchg
loope
cmpsb
mov
pop
adc
xor
cmp
push
stc
iret
test
adc
add
cmpsl
fwait
subl
push
inc
scas
stos
or
push
mov
lcall
arpl
scas
test
vpcmpeqd
out
fdivrs
cmp
jmp
out
push
jo
add
mov
and
ss
rcrl
and
mov
scas
phsubw
xchg
sbb
push
xor
cmpsl
sub
sbb
inc
pop
jo
adc
cs
sub
jnp
in
inc
add
sub
push
popf
shrb
cmp
sub
insl
mov
and
cmp
aad
and
mov
sub
ret
inc
sahf
adc
pop
or
and
mov
sub
or
sbb
jbe
pop
push
enter
in
adc
cmp
mov
cmp
rcrb
cs
into
and
adcl
mov
test
ret
push
int
dec
lcall
and
jg
ja
rcll
xor
scas
cmp
popf
or
lret
dec
call
lcall
into
fcomi
jl
mov
js
mov
imul
xor
ret
cmp
sub
pop
rcr
and
lea
xchg
fimuls
jp
xchg
or
pop
jmp
xor
in
jno
xchg
xchg
and
mov
sbb
pop
push
sub
or
iret
sub
and
xor
mov
mov
je
cli
cmp
fldcw
stos
dec
mov
sbb
mov
mov
jns
arpl
dec
sti
pop
xchg
scas
xlat
cmp
push
pop
nop
movsb
inc
lret
clc
mov
fwait
mov
rcrl
xchg
loopne
mov
data16
mov
and
and
add
adc
dec
mov
stc
imul
xchg
push
aad
lea
fadd
fdivr
repz
pop
push
cmp
sub
xchg
movl
inc
jp
mov
push
lea
daa
jle
sub
pushf
movsl
aad
fdivrs
mov
inc
ss
pusha
icebp
mov
pop
jns
cmp
xor
addr16
imul
fldl
call
xchg
fcmove
cmc
cld
lret
inc
lahf
and
xchg
clc
push
or
ficompl
out
lret
mov
lock
mov
mov
stos
cli
rorb
mov
xchg
add
rorl
enter
mov
roll
xor
enter
mov
push
loop
in
loopne
pushfw
mov
mov
adc
mov
mov
pop
xor
lock
popf
mov
stc
jle
das
shll
sub
push
add
inc
fsubp
push
in
aad
jecxz
push
jae
aaa
dec
add
or
inc
lods
cld
jae
mov
jg
mov
stc
mov
pushf
fdivs
in
lcall
add
mov
dec
jl
lds
inc
xchg
push
cwtl
adc
arpl
insb
mov
leave
mov
jg
into
mov
shlb
stos
out
xchg
pop
call
push
aaa
jo
jl
addb
in
sub
repz
arpl
push
xor
imul
out
mov
rcrl
push
mov
aaa
test
jmp
xchg
xlat
jno
mov
scas
jnp,pn
std
push
jne
cmp
cli
jecxz
xchg
mov
sbb
xorb
test
lret
jecxz
into
das
repz
stos
cwtl
mov
jmp
add
push
cli
xchg
adc
inc
sbb
xor
jns
sub
sub
imul
sbb
aaa
lods
dec
rcl
lahf
out
in
out
das
loop
imul
xchg
mov
pop
pop
data16
push
bnd
dec
and
push
jecxz
scas
xor
pushf
call
adc
es
lret
jge
sahf
fs
les
mov
iret
jecxz
jbe
push
ret
pushf
add
test
loopne
aad
push
outsb
xchg
mov
cmp
movsb
iret
xchg
cmp
enter
or
cld
or
jo
sti
cmp
mov
mov
xchg
push
add
mov
xor
call
mov
add
test
or
mov
xchg
and
push
pusha
orl
add
or
adc
mov
js
and
push
out
pop
mov
and
jg
sahf
int
nop
inc
repz
pusha
mov
xchg
mov
adc
push
pop
cmp
ja
push
adc
pop
sub
call
test
or
dec
mov
pop
jmp
lret
movsb
mov
inc
idivl
xchg
push
stc
dec
sub
movsl
push
adc
popa
aad
or
push
or
and
push
adc
push
movsl
int
adc
dec
jno
shll
cmp
enter
int3
add
outsb
adc
out
mov
mov
dec
in
fldenv
xor
in
jmp
popa
xor
jg
cld
dec
mov
sbb
xchg
add
mov
lock
pop
lods
mov
xor
popa
out
sbb
xchg
test
mov
outsb
aaa
add
dec
dec
xor
mov
and
sbb
addb
mov
xor
jae
adc
xchg
outsl
mov
jae
in
pop
rol
in
test
bound
icebp
je
in
sarb
inc
lds
sub
insb
mov
movsl
mov
jmp
add
sbb
loopne
cmpsb
filds
dec
das
shll
int
cwtl
adc
mov
pop
xchg
repnz
lret
stos
sub
and
repz
test
pop
ret
scas
int
push
mov
outsl
daa
mov
push
ja
dec
in
fsts
add
imul
inc
push
dec
lods
xlat
fwait
or
loope
scas
pop
loopne
jae
imul
cli
decl
dec
sbb
sub
pop
pop
pop
xchg
aaa
ds
push
and
xchg
pop
js
xor
lock
xchg
movl
leave
jns
outsl
orl
in
mov
mov
sbb
jl
mov
lods
adc
mov
call
xchg
popa
rcr
xchg
lahf
sub
push
shll
jecxz
and
jae
push
cld
enter
push
or
rol
push
testb
shld
fstpl
mov
mov
jo
mov
adc
add
mov
xlat
pop
pinsrw
jb
sub
iret
adcb
push
jnp
test
sti
mov
cmp
stos
shll
pop
add
dec
leave
scas
lds
lods
lock
xchg
test
out
mov
lods
call
pop
rorl
insb
add
push
iret
loop
mov
push
xchg
leave
mov
fs
dec
adc
and
notb
out
xchg
cmp
jmp
icebp
xchg
pushf
dec
push
inc
cs
jmp
mov
call
bsr
ficomps
mov
sub
pushf
je
adc
jge
jmp
adc
mov
enter
sbb
add
cmp
sub
lock
daa
addr16
inc
add
mov
sti
mov
sbb
aam
ja
push
stc
movsl
xchg
cmp
mov
mov
sti
outsl
mov
ds
sbb
push
or
loop
push
xchg
inc
int3
shrl
outsb
jnp
and
push
cmp
popa
mov
pop
repnz
xchg
cmpb
xchg
aas
mov
sbbl
popa
in
sahf
sub
enter
imul
inc
push
loopne
jno,pn
xchg
sub
adc
mov
js
xor
jae
push
out
aam
xchg
in
mov
inc
sbb
mov
std
in
scas
xchg
nop
aas
pop
pop
mov
subl
mov
mov
inc
ss
push
jno
dec
insl
cld
pop
sbb
loopne
orl
std
xchg
orb
outsb
dec
lods
push
movl
push
out
xchg
mov
or
xchg
leave
fnstcw
pop
and
ja
shll
jbe
rcl
insl
into
push
xchg
mov
push
jns
rcr
adc
ret
data16
mov
shrb
aaa
lret
scas
repnz
sub
stos
jp
mov
sbb
enter
and
jl
fisubrs
rcll
xchg
outsl
movsb
jp
cwtl
mov
push
or
cmpsb
mov
loop
imul
inc
test
pop
xor
aam
mov
icebp
pop
add
cmpl
mov
ds
jno
adc
comiss
xchg
and
shll
nop
sub
push
sub
pop
aam
js
outsl
imul
push
enter
movsl
mov
mov
dec
sub
fiadds
ss
sbbb
aas
xor
xor
out
and
test
in
insl
pop
cmp
loope
dec
mov
mov
loopne
sub
cmpsb
cmpsb
mov
pop
xchg
adc
pop
test
xchg
mov
js
mov
xchg
adc
or
xchg
pushf
add
mov
cmp
cmp
pop
lock
std
dec
pop
pop
mov
and
xchg
pop
fcmovbe
imul
cs
cltd
scas
jnp
aam
scas
jnp
je
xor
stos
jg
pop
jge
lods
or
pop
leave
push
xlat
arpl
push
mov
insb
mov
inc
mov
xchg
sub
mov
dec
loopne
fldcw
mov
inc
out
lea
out
js
icebp
addr16
add
je
and
shll
imul
pop
test
mov
and
jle
jne
fisttpl
mov
xor
je
incb
lods
fwait
cmp
js
add
sub
leave
jns
lock
adc
jns
mov
repz
or
sti
push
out
xor
int3
push
mov
pop
sbb
xchg
pop
jmp
mov
cli
mov
jbe
adc
cmp
xchg
mov
or
pushf
rcl
das
dec
iret
loop
dec
and
cmc
push
cmp
mov
cmp
add
dec
rcl
js
inc
fiaddl
call
es
inc
xchg
jle
int3
inc
inc
in
sub
pop
in
aas
mov
sbb
sub
test
ret
pop
push
lds
mull
push
popa
mov
je
pop
mov
mov
outsb
and
jle
test
stc
push
mov
daa
pop
pusha
mov
ss
fistpll
fdivp
sar
test
or
jmp
and
xchg
addr16
mov
xor
cwtl
lahf
cmpsl
sub
in
xor
and
ljmp
cltd
jge
pop
cld
in
mov
or
scas
lcall
jl
pop
sahf
push
outsb
fstl
aas
mov
hlt
ljmp
js
mov
jecxz
sub
push
dec
cmp
fucomip
int3
pop
out
inc
dec
sub
imulb
in
popa
cmp
inc
adc
out
adc
xorb
lds
mov
mov
pusha
push
fidivs
inc
es
loope
shr
mov
xchg
outsl
jmp
cmp
incb
jg
shll
dec
aaa
cmp
push
inc
jle
lret
cmc
call
cltd
cltd
addr16
xor
lcall
insb
pop
addb
and
mov
sub
push
xor
in
jge
push
add
movsb
rol
inc
out
cmpsl
cmp
pop
insb
cli
xchg
push
cmp
and
mov
lock
inc
scas
inc
data16
sub
shr
in
fcmovnu
cmc
jecxz
das
ds
adc
mov
mov
ret
addr16
test
xchg
dec
jae
and
loope
dec
cmpl
push
cli
fldcw
lock
and
jp
jle
dec
pop
dec
jmp
test
out
mov
in
psrlw
pop
sbb
xlat
xor
jnp
xchg
hlt
inc
push
gs
hlt
and
sbb
int3
adc
pop
insb
data16
stos
shlb
xchg
xchg
je
movsl
mov
or
addr16
es
inc
dec
in
ja
dec
inc
and
mov
ud2
cmpsl
pop
sbb
in
mov
fwait
pop
ffreep
cs
adc
vandpd
or
and
xor
jb
and
mov
and
cwtl
enter
nop
xchg
lods
xor
cmp
fwait
rcr
call
xlat
inc
jmp
test
int3
andl
inc
xchg
sbb
sbb
sahf
test
faddp
test
push
mulb
adc
test
add
dec
sahf
mov
and
test
ret
push
pop
in
jb
mov
pop
xchg
mov
adc
or
jnp
cld
cmc
stos
insb
ret
pop
fdivrl
js
dec
js
imul
xchg
repnz
xor
xlat
push
pop
js
jae
push
std
arpl
sub
add
dec
pop
pop
mov
ret
pop
imul
scas
jno
or
pop
push
je
pop
sub
pop
das
cmpsb
and
fs
jo
cmpsb
sub
leave
test
mov
js
mov
and
movsl
test
and
dec
and
es
and
ret
data16
jne
loopne
or
ds
adc
xchg
movsb
mov
sarb
jge
daa
mov
ja
adc
adc
xor
mov
addr16
mov
jno
mov
jge
enter
push
pop
push
xchg
in
mov
dec
cltd
scas
neg
ret
lret
lds
mov
dec
jb
js
out
pop
aam
ret
mov
mov
jae
out
mov
mov
aas
fcmovb
push
lods
pusha
inc
and
pop
sbb
lea
push
sub
mov
xlat
pop
mov
add
out
out
xor
imul
lret
leave
scas
dec
adc
sub
mov
push
aam
in
call
fdivrs
pop
push
or
push
repnz
jg
or
pusha
jae
into
cli
fimull
rorb
jmp
add
pop
and
pop
mov
cmp
pop
jp
shrb
jno
and
cmp
xor
xchg
pop
lahf
sbb
mov
xchg
sub
sub
pop
mov
inc
xlat
cmp
mov
sbb
ds
ja
adcb
aaa
adc
xchg
jb
and
and
es
dec
jne
movsb
xor
push
xlat
sbb
mov
dec
mov
aam
cmp
icebp
mull
fisubrl
adc
mov
dec
sbb
jecxz
sub
out
enter
std
jbe
jmp
mov
repnz
pop
lods
jns
or
or
cs
cs
mov
loop
andb
test
fcmovu
cwtl
jecxz
fidivs
loope
lahf
push
mov
imul
mov
dec
push
push
pusha
inc
testl
idivb
sti
leave
adc
movsl
sbb
add
mov
mov
xchg
lods
xchg
jo
addl
sub
mov
inc
ds
ret
ret
cmp
fisubs
xchg
pushf
mov
cmp
lahf
insl
or
push
jle
shr
je
push
cmpsl
mov
cmp
ljmp
add
imul
xlat
xchg
jae
das
roll
and
add
push
cmp
mov
mov
inc
maxps
cld
popf
test
xorl
dec
loop
imul
jl
sbb
pop
fwait
pop
outsl
insb
sub
addr16
sub
std
add
mov
aad
dec
ret
inc
inc
outsl
insl
push
ss
leave
push
lea
ret
xor
mov
data16
fstps
fldt
and
inc
adc
push
dec
sbb
push
mov
xor
jne
sahf
std
notl
adcl
sbb
mov
pop
push
sbb
and
and
push
repnz
adc
sbb
xor
orl
mov
push
imul
roll
in
popa
adc
out
loope
cmp
aaa
das
lods
mov
push
je
popf
xlat
inc
in
mov
push
push
xor
sub
jnp
shr
aam
lods
push
pop
out
jnp
repnz
and
push
fsubrs
mov
xorl
push
jecxz
or
sahf
mov
push
push
sub
mov
orl
xor
out
shll
xchg
aaa
shlw
in
shlb
cmp
and
fwait
pop
push
xchg
add
arpl
mov
push
outsl
imul
mov
outsb
jmp
sarl
push
es
insl
push
fsubs
test
and
pop
incb
fsubs
aad
xchg
sub
push
stos
push
mov
xor
inc
loope
adc
popa
les
fmull
push
and
inc
push
mov
lret
xlat
lds
push
mov
fwait
aad
xchg
push
xlat
loope
adc
jle
lods
push
bound
popf
jmp
push
mov
les
enter
mov
mov
push
subl
push
mov
mov
cmpsb
in
mov
cmp
mov
dec
insb
js
inc
add
into
jb
dec
fisttps
jl
sbb
cmp
jne
out
rcrb
aas
sarl
sub
mov
addl
adc
sub
and
das
mov
cmpb
cmpsb
pop
push
pop
arpl
popf
push
or
enter
dec
ret
pcmpeqd
dec
lea
gs
ljmp
rcl
sar
sbb
dec
inc
aad
popa
icebp
rol
aas
scas
add
andb
out
cmp
clc
cmp
add
mov
push
mov
pop
inc
imul
mov
lods
push
xchg
stc
gs
jge
pusha
and
pusha
mov
js
push
sub
push
jo
js
jecxz
shlb
scas
jno
push
push
mov
cmp
ror
jb
pop
or
jle
sbb
push
and
or
mov
cmp
lea
das
divl
mov
lods
or
cmp
negb
gs
daa
pop
pop
cld
lds
push
mov
pop
int
adcb
jg
rclb
xchg
sarl
cwtl
repz
dec
dec
and
sub
cmpsl
cltd
xabort
xor
mov
jg
xchg
jnp
sbbb
imul
jg
dec
aas
inc
inc
out
mov
daa
rclb
push
ret
xchg
jl
ret
jno
adc
mov
or
lock
mov
das
movsl
cld
cmp
or
jl
dec
out
sbb
aaa
mov
loopne
or
popa
pop
adc
jl
stos
and
cs
fs
cmp
movsb
pop
push
jbe
popf
sub
sub
pop
dec
lock
inc
ja
mov
aaa
hlt
dec
dec
stc
inc
jl
inc
into
test
aam
push
adc
or
insl
adc
call
dec
xor
sti
gs
or
stos
cmp
loopne
mov
fdivs
mov
dec
or
in
lea
and
sub
testl
mov
adc
mov
das
mov
jle
fdivr
xor
fld
xor
cltd
ficomps
sbb
out
xchg
dec
test
adc
xchg
mov
std
xchg
push
into
fwait
push
jp
into
test
rcll
mov
outsl
mov
cld
dec
xor
xor
pop
add
jg
insl
xlat
adc
add
and
scas
stos
mov
ss
std
jl
mov
jp
movsl
add
scas
enter
sbb
movsb
jmp
sbb
in
sbb
stos
mov
lret
xor
hlt
push
mov
and
into
mov
xor
adc
scas
int3
xchg
push
fwait
mov
mov
push
xchg
push
sbb
inc
pop
dec
pop
mov
jno
les
or
dec
in
xchg
mov
xchg
enter
fidivrs
sub
fadds
or
fmuls
mov
xchg
in
leave
roll
ret
out
sub
scas
das
insb
cmp
cmp
nop
sbb
cmp
or
add
pop
je
add
sub
imul
call
in
dec
xor
movsl
rol
lods
and
int3
or
and
ret
and
pop
sub
cs
test
scas
dec
gs
push
or
inc
addr16
pop
nop
push
sbb
jne
and
mov
xlat
xchg
stos
and
addr16
mov
or
enter
adc
stos
push
mov
arpl
repz
mov
xchg
pop
leave
movsl
cmp
test
pop
mov
repnz
in
fcoms
or
or
lds
popf
or
aad
cli
sbb
push
xor
xchg
or
add
xlat
outsb
sub
cmc
and
int
jmp
xlat
movsl
push
jp
fwait
sbb
bound
sbb
andb
mov
rorl
xchg
fcmovbe
pushf
in
mov
nop
jae
loopne
and
jl
sub
mov
sub
pop
out
nop
daa
and
ja
mov
imul
inc
mov
icebp
mov
ss
insl
mov
test
sbb
mov
addl
adc
mov
cmpsb
push
ja
inc
sbb
cmp
fst
sbb
dec
in
out
sbb
pop
dec
dec
es
xchg
mov
out
movsb
sbb
or
xchg
mov
clc
fstps
sbb
jp
dec
jmp
push
aaa
sti
push
xor
push
xor
sbb
sbb
mov
sub
out
lods
fidivs
xchg
cld
aad
xor
sub
scas
std
test
adc
mov
into
mov
xchg
dec
sbb
push
adc
insl
stc
dec
or
scas
xor
pushf
mov
and
outsl
jns
lds
lea
in
loop
sub
pusha
js
imul
in
sub
push
mov
imull
xor
aam
push
cmpsl
mov
lahf
xor
pop
dec
test
add
add
cs
push
outsb
xchg
jmp
xor
push
inc
push
mov
test
sub
push
jae
sbb
das
cmp
or
scas
add
imul
pop
iret
sub
repz
jg
imul
add
subl
jb
cmp
mov
xchg
push
xchg
insl
shrb
mov
ljmp
jle
test
test
fcmovnu
jg
aam
int3
fdivl
push
imul
pop
adc
xor
popf
out
dec
cs
xchg
mov
jp
dec
out
mov
stc
enter
add
mov
mov
loop
test
bswap
xchg
or
jnp
ja
dec
rcrb
xor
cmp
in
shll
pop
dec
pushf
pop
imul
pop
and
movsl
ret
movsb
push
lahf
sbb
rclb
ljmp
mov
mov
jne
cmpsl
fstl
push
insb
shlb
sub
nop
xchg
negl
fcmovne
fdivs
mov
cmp
xchg
and
or
mov
jne
bound
and
and
repnz
jge
cmp
inc
or
dec
mov
xchg
adc
jmp
adc
inc
outsb
and
gs
inc
xchg
xchg
xchg
ret
and
mov
outsb
mov
xlat
repnz
cmpsl
dec
rorb
repz
mov
mov
jg
cmp
aad
xchg
mov
jnp
push
sub
insl
js
pop
cmp
shrb
add
mov
in
addb
xchg
in
inc
push
mov
jge
xchg
and
data16
adc
cmpsl
movsb
jno
dec
out
sbb
inc
jle
sub
in
imul
jns
int
push
mov
mov
fnstsw
int3
ljmp
ss
scas
scas
mov
sub
das
fdivl
cld
fbld
fldenv
jmp
cmp
mov
dec
ds
popf
mov
or
in
xchg
push
popa
jns
mov
inc
les
jecxz
out
insb
and
cmpsb
repnz
mov
or
pop
lock
adc
pop
jmp
adcb
dec
es
sbb
xchg
mov
jb
out
fisubs
sti
scas
stc
inc
sub
xchg
fildll
inc
add
xchg
hlt
lcall
push
xchg
push
pop
outsb
cmp
add
scas
add
mov
cmpsl
outsb
mov
js
and
nop
mov
loope
xchg
sub
daa
incl
push
jle
mov
aad
insb
dec
fadd
mov
out
dec
cmp
xchg
push
xor
push
out
pop
jno
pop
cmpsb
jmp
sub
sti
pop
sahf
push
xor
or
sub
inc
adc
and
cmc
jb
inc
fstl
pop
sarl
sbb
push
sbbl
xchg
stc
lret
dec
jnp
ret
mov
sub
jno
add
rol
cmp
push
rorl
jnp
inc
call
icebp
fs
mov
adc
cmc
or
dec
mov
aas
inc
add
mov
sub
call
adc
xchg
into
sahf
cli
mov
sub
ss
pop
or
faddl
or
inc
xchg
jp
in
sahf
jb
stos
int
popa
or
shrb
sbb
fimull
sahf
outsb
jmp
adc
xchg
test
data16
or
mov
mov
and
mov
ret
xor
push
push
jo
out
outsb
outsl
push
or
frstor
mov
mov
mov
dec
mov
mov
mov
push
jmp
pop
mov
scas
je
jecxz
test
adc
xor
and
pop
nop
xor
ds
mov
inc
pop
xchg
sahf
jae
cmpsl
ljmp
jmp
gs
stos
test
and
jg
out
push
popf
fbld
xor
or
xor
and
arpl
or
fidivrs
iret
sub
lods
std
fisubs
mov
pop
mov
inc
mov
cmp
scas
push
mov
call
and
jle
adc
jle
cmp
jbe
in
ret
or
ljmp
and
pop
call
ror
pushf
shll
fidivrs
aas
cmp
lcall
lret
push
xorb
mov
lods
add
xchg
mov
lods
das
pop
std
adc
nop
xchg
imul
lods
xchg
add
fidivrs
lock
push
stos
out
in
fs
out
pop
push
mov
repz
fsubs
imul
xor
out
popf
ss
dec
pop
andb
xchg
pop
fiaddl
add
jns
lret
icebp
push
mov
icebp
and
xchg
xchg
je
bound
ljmp
pop
movsb
add
rcrl
cmp
xor
outsl
mov
sarl
std
aaa
addl
add
out
mov
aaa
jge
add
xchg
inc
jle
and
mov
adcl
add
xor
sbb
fwait
call
daa
ds
or
xchg
loope
jnp
add
pop
mov
xchg
mov
call
pop
xchg
and
jl
fucomip
or
jb
xor
xor
je
fs
sub
cld
or
in
fsts
add
or
mov
outsl
cwtl
imul
cmpsb
xchg
lahf
push
js
sub
jbe
and
xchg
mov
pop
repz
mov
mov
mov
loop
or
push
sbb
cmp
mov
push
into
dec
repz
jg
or
add
mov
movsl
jle
adc
pop
xchg
xchg
test
cmc
fildll
test
push
or
sub
xor
mov
addl
adc
pusha
cmpl
jmp
mov
add
out
ds
insb
lock
imul
dec
add
or
push
jno
insl
xchg
stos
or
xchg
pop
cmp
or
inc
ja
rclb
cltd
sub
rolb
xor
outsb
jns
mov
popa
and
andb
jns
jge
push
pop
out
or
fwait
mov
leave
adc
push
mov
ja
xor
int3
mov
sahf
adc
inc
inc
out
dec
pop
dec
pushl
push
dec
xchg
mov
dec
pop
movsb
add
push
outsl
call
icebp
in
lret
lret
std
sahf
cli
sbb
jp
addr16
loopne
ficoms
sbb
xchg
stc
btc
inc
lahf
inc
test
add
dec
push
push
imul
or
aaa
jb
pusha
daa
aas
mov
into
adcb
jne
lea
cmpb
dec
fwait
aad
inc
adc
xchg
out
xchg
inc
cld
test
ja
repnz
and
cmpsb
ret
jge
fwait
imul
cltd
push
mov
inc
cmpsl
jmp
add
addr16
sbb
icebp
dec
and
pop
fwait
pop
aad
dec
or
loope
mov
and
loop
inc
mov
notl
mov
out
push
js
sahf
fisubs
inc
sbbl
jp
mov
dec
mov
jge
ljmp
in
push
cmp
movsl
adc
dec
call
fimuls
shr
xchg
dec
dec
iret
frstor
adc
fadd
movl
in
cmp
fwait
cmc
outsb
dec
inc
and
pop
or
sub
add
push
ljmp
es
push
stos
fxch
adc
int
mov
mov
or
repz
lock
or
mov
and
xchg
lods
shl
loop
in
xchg
loopne
xlat
cmp
jl
fs
into
cmc
rolb
adc
mov
cmp
or
ja
push
push
jnp
cmp
les
test
mov
dec
xor
and
aas
shrl
add
push
fs
or
out
pop
and
in
ds
repnz
sub
nop
or
jns
into
fadds
mov
inc
jecxz
fcmovnbe
int3
cmp
jle
jg
push
addb
mov
sar
negb
loop
and
loop
lcall
scas
sub
rcrb
mov
jo
imul
sub
lcall
jo
pop
sti
xor
mov
orb
cmc
inc
loopne
adcl
xchg
into
lods
dec
add
shl
push
jg
xor
and
arpl
mov
adc
dec
test
aaa
pushf
mov
cmpsl
mov
xor
cmp
out
les
push
mov
sbb
add
sub
cmp
mov
jl
sub
rorl
enter
or
rcrl
pop
out
imul
xchg
mov
popf
adc
sbb
mov
inc
aas
adc
push
mov
cmp
insl
fstps
inc
xchg
xchg
pop
xchg
iret
push
cmp
ficomps
dec
mov
ss
xchg
call
flds
push
shlb
add
addr16
inc
add
pop
mov
shrb
addps
daa
push
mov
enter
ja
lcall
cmp
pop
pusha
add
sbb
xor
sbb
mov
iret
inc
dec
arpl
imull
mov
push
xchg
mov
sbb
mov
inc
aas
sbb
xchg
aas
mov
movsl
inc
pop
inc
cmp
das
xor
xchg
hlt
and
mov
sbb
and
pop
test
pop
sub
mov
sub
cli
int
movsb
subl
cmc
lock
lret
std
test
mov
fidivrs
daa
mov
xchg
push
jbe
rorl
popf
sti
lods
roll
outsb
jo
dec
inc
inc
adc
mov
insl
push
repnz
outsb
pop
pop
mov
pop
pop
adc
inc
jae
mov
andl
imul
testl
repz
mull
push
fistps
insb
xchg
mov
and
rolb
aas
jne
pop
pop
push
int
sar
pop
push
addr16
cmpsb
dec
clc
cmpsb
push
std
imul
dec
sbb
xor
sub
out
cmpl
int
sbbl
daa
js
jle
fstpl
daa
leave
loope
xchg
inc
sbb
sub
loopne
push
lods
dec
sbb
popa
sub
lret
mov
insl
int3
arpl
sbb
test
outsl
add
push
ret
insl
jp
testl
mov
out
shlb
ja
out
fwait
cmp
dec
call
inc
enter
test
repz
cwtl
shl
xorb
cmp
mov
add
jg
stos
shrb
shl
pop
pop
test
mov
scas
fcmovu
test
sub
rorb
je
repz
sbb
cmp
mov
or
add
xor
sub
inc
jo
push
ficoml
sub
xchg
jge
int3
das
icebp
dec
cmp
mov
fwait
ljmp
outsb
shlb
and
ss
sub
inc
mov
dec
mov
inc
mov
aas
mov
jle
popa
mov
sub
cltd
das
in
fisubl
mov
ret
fidivl
xchg
jg
mov
je
gs
insl
sbbb
push
clc
cmp
pop
gs
inc
mov
das
sbb
popf
mov
pop
mov
and
out
mov
mov
ljmp
mov
in
scas
cltd
add
sub
mov
je
les
jmp
push
fs
pop
in
jp
mov
push
ljmp
je
xchg
jecxz
add
xor
das
sbb
inc
enter
xchg
adc
sti
pop
in
lock
mov
cli
ret
popa
push
inc
dec
dec
lods
xchg
ret
daa
add
inc
rol
xchg
shlb
sub
mov
adc
out
add
fsubr
scas
data16
pop
inc
push
cmp
popf
movsb
mov
clc
push
pop
lahf
pusha
sti
inc
int
popa
std
pop
mov
dec
mov
test
cmp
fwait
or
mov
lock
std
ss
popf
ja
cmp
xchg
lcall
and
jp
mov
and
fists
mov
adc
mov
cmp
xchg
and
ljmp
xor
mov
cwtl
outsl
pop
xchg
addb
mov
or
push
leave
test
pushf
fst
push
pop
push
xor
jecxz
or
daa
mov
inc
gs
pop
not
setl
stos
or
pusha
jne
ds
dec
or
jns
outsl
mov
in
cltd
xor
in
es
nop
fucomp
inc
stc
es
jg
ss
out
loopne
mov
add
aas
data16
stc
cmp
xchg
xchg
in
push
movsb
mov
scas
inc
subl
inc
leave
loope
bound
dec
cmp
or
cltd
pop
jo
ficomps
mov
inc
dec
jmp
xor
push
icebp
out
lds
and
inc
lret
add
mov
mov
sub
or
loop
int3
inc
mov
and
call
mov
pushf
adc
xchg
repz
loopne
shlb
out
and
add
push
jne
mov
push
inc
test
pop
ss
or
movsl
loop
cmp
dec
xor
shrb
push
mov
mov
push
lcall
call
mov
jbe
inc
add
adc
ja
lahf
dec
outsl
mov
ds
push
pop
dec
clc
pusha
sub
insl
push
sbb
and
loope
jbe
bound
clc
inc
gs
mov
lods
mov
ret
out
mov
push
jp
cs
sahf
inc
or
mov
dec
decb
jg
jb
xor
loopne
out
andb
test
sahf
and
inc
push
movsb
cmpsl
stc
jmp
push
aad
insl
add
int
insl
les
pop
cmp
je
push
jg
fdivl
adc
scas
rcrb
iret
imul
dec
mov
imul
fwait
mov
arpl
xchg
icebp
jns
inc
push
and
add
jb
xor
aad
cmp
movb
adc
bound
stos
shrl
xchg
xchg
fs
xor
mov
rolb
out
cmp
jbe
sbb
push
mov
cmp
divb
push
dec
icebp
gs
out
push
jecxz
lock
stos
dec
decl
push
into
bound
leave
test
pop
fs
push
mov
push
inc
repnz
mov
mov
clc
and
push
dec
sbb
ret
arpl
inc
into
rcrb
lret
or
iret
sar
cld
je
das
scas
and
leave
jle
adc
push
and
mov
jns
xor
cltd
mov
lea
aas
jle
ljmp
lahf
lret
and
into
or
adc
aaa
push
sahf
inc
gs
mov
loop
ficoml
outsl
push
dec
rorb
lock
mov
cmpsl
pop
pop
ret
out
pop
adc
out
cltd
xor
adc
pop
dec
jg
test
in
sti
jo
or
les
cwtl
jnp
mov
cmp
mov
pop
push
add
push
dec
rcrb
jb
dec
std
pop
test
cmp
cli
insb
cmovle
push
aas
inc
mov
dec
push
sub
stc
adc
cmpsl
ljmp
and
mov
pop
and
lcall
adc
scas
jle
sub
dec
add
lcall
insl
mov
inc
int
xor
inc
xlat
sub
jne
mov
xlat
or
or
mov
xrelease
xchg
imul
shlb
push
mov
shrl
shr
lods
in
shrl
sti
mov
cli
pushf
jmp
adc
cmp
fs
jno
dec
dec
lods
cmp
cmp
mov
gs
pop
daa
out
sbb
dec
fwait
shll
inc
pop
fwait
mov
inc
sbb
stc
dec
out
ss
or
dec
gs
icebp
sbb
xor
xlat
add
xor
mov
mov
rclb
sub
sub
mov
aaa
mov
unpckhps
or
dec
cs
mov
ret
std
test
cmp
scas
add
pop
xchg
arpl
jl
cmp
sbb
fbld
movl
jno
and
sbbb
into
xchg
cwtl
clc
je
lcall
push
mov
cmpsl
add
fwait
push
lret
dec
pushf
fnstsw
shll
out
scas
lea
push
insb
cmp
cmp
sti
mov
mov
out
dec
movsl
loop
xchg
xchg
fisubrs
dec
xchg
imulb
mov
int3
and
ljmp
clc
fcomip
and
add
jle
ret
adc
out
sub
out
or
xor
mov
out
loope
pop
mov
mov
push
andl
sub
scas
add
jmp
ret
in
stos
dec
sub
push
cmp
jns
mov
cmp
cmp
nop
js
and
sub
pop
nop
mov
add
dec
dec
adc
test
cmp
adc
pop
jle
es
lea
pop
jne
int3
mov
test
mov
inc
add
lret
out
addr16
iret
jl
in
mov
lods
sbb
xchg
in
push
mov
int3
bound
pop
jb
mov
lock
add
fiaddl
stc
inc
aam
mov
insl
shlb
or
sub
stc
sbb
and
dec
xor
ret
test
test
mov
mov
and
pop
subl
add
roll
adc
mov
filds
inc
adc
mov
and
test
xchg
int
fbstp
leave
ss
jmp
out
movsb
cwtl
stc
fwait
ljmp
das
hlt
push
xor
sbb
push
lcall
xchg
mov
mov
outsb
arpl
call
cmp
mov
xchg
xchg
xchg
pop
sahf
and
into
jmp
mov
add
rcll
sarb
insb
stc
gs
add
mov
push
push
dec
sub
jns
sub
mov
pop
out
inc
add
insl
nop
imul
dec
subl
pop
les
push
int3
add
dec
insb
push
sahf
imul
xor
pop
int
cmp
jae
sbb
mov
xchg
aam
and
cs
mov
int3
inc
push
push
aaa
sub
mov
iret
inc
int
cmp
or
scas
fwait
cmpl
adc
cmp
jge
cmp
xor
movsb
and
lret
dec
mov
leave
int3
xchg
sti
xor
ljmp
sbb
push
sub
xchg
or
dec
mov
movb
push
sub
repnz
in
ljmp
xchg
in
mov
fs
adc
fistps
sahf
clc
andb
dec
jl
and
dec
sti
dec
cmpsb
push
fldl
or
shrl
mov
dec
sahf
inc
xchg
sub
ljmp
sub
notl
outsb
pop
out
jb
xchg
sub
xor
xlat
shl
pop
pop
mov
mov
mov
dec
int3
into
inc
mov
loopne
mov
call
dec
lret
in
push
pop
jnp
sbb
pop
mov
sbb
test
and
sub
jo
push
mov
jl
outsb
dec
fisubrl
xchg
adc
test
add
pop
fcoml
mov
icebp
jno
fnstcw
and
xchg
mov
xchg
push
mov
add
loopne
pusha
push
mov
jno
clc
dec
fwait
rclb
cmp
cmpsl
es
test
and
in
adc
xchg
les
scas
repnz
iret
std
xor
xchg
out
insb
shll
cs
xchg
cltd
mov
adc
jmp
jbe
jns
inc
stc
into
and
rorb
into
push
adc
lret
in
xchg
loopne
je
dec
shrb
xlat
cmp
jns
movsb
push
or
outsl
pop
add
cmp
loopne
movsb
mov
pop
inc
mov
fildl
sub
add
sbb
xor
fs
jecxz
sti
fcoml
jecxz
in
in
sub
lock
aad
lcall
sbb
pusha
xchg
popa
fcompl
ret
cmpsl
scas
xlat
shlb
fstl
shr
bound
and
mov
andb
in
inc
rcr
mov
rcll
xchg
ret
or
insb
and
adc
push
add
test
push
je
adc
rcrl
scas
sbb
mov
inc
shld
xor
mov
xor
out
popa
les
testb
addl
jnp
sbb
insl
xor
rorl
push
jne
pop
mov
ja
inc
dec
scas
cld
dec
xor
aas
push
sarb
dec
insl
sbb
nop
addr16
scas
js
sti
sbb
mov
imul
test
enter
jb
jne
daa
je
mov
imul
shlb
fadds
lea
scas
clc
mov
mulb
cmp
dec
cmp
push
cltd
and
clc
or
adc
fs
sahf
and
push
mov
mov
xor
xor
sbb
add
movsl
iret
lds
loopne
sar
mov
js
add
cmc
cmpsb
enter
add
ret
pushf
sahf
jp
adc
xchg
cmp
pop
notb
sub
add
mov
andl
jg
in
outsb
gs
or
or
cld
test
das
xor
mov
jmp
stc
lock
insl
dec
push
jb
xchg
push
mov
mov
lods
cli
adc
mov
push
jg
xchg
sbb
inc
xchg
hlt
jl
mov
mov
ljmp
ficompl
sbb
insl
leave
mov
aam
ret
outsl
int3
fwait
pop
inc
or
push
shr
mov
pop
es
mov
mov
and
cwtl
mov
mov
lds
aaa
pop
push
mov
orb
mov
jle
adc
loope
or
push
stos
cli
sub
sub
jg
sub
and
xor
fwait
mov
jecxz
dec
sbb
in
lcall
cmp
adc
das
mov
inc
popl
jle
ds
inc
aas
cmp
push
in
shrl
fstpt
inc
mov
es
sub
scas
arpl
xor
sbb
push
int
or
mov
jbe
shll
pop
cltd
jae
lock
mov
cmp
add
sbb
xchg
ret
ficoml
cmc
aas
test
call
aam
lods
dec
xor
push
adc
clc
and
inc
xchg
dec
loopne
and
push
xchg
in
fildll
xchg
mov
add
push
loop
sbb
pop
mov
mov
lods
pop
xchg
loopne
je
sub
test
and
push
nop
dec
dec
pop
mov
std
push
dec
pusha
out
sbb
push
mov
fcmovnbe
fcom
lea
dec
mov
and
stos
xor
jne
ret
bound
imul
pop
in
sub
add
sbb
jbe
fstps
std
cmc
xlat
ja
or
push
aam
or
fwait
push
jecxz
mov
jp
je
movsl
fistpl
mov
mov
add
in
fsubrs
out
inc
xchg
sub
adc
js
hlt
adc
sub
shl
or
sub
xchg
xchg
dec
rcll
enter
call
lea
mov
lret
iret
or
xchg
clc
push
pop
fsubs
pop
andb
lds
dec
dec
call
ja
add
xchg
mov
xchg
add
add
loope
bound
ljmp
pop
jg
mov
mov
fcmovne
js
stos
aaa
js
xor
das
cmpsb
pop
lds
and
push
lods
mov
fwait
xchg
sbb
iret
and
sbbl
mov
xchg
push
add
cs
enter
pop
and
xchg
out
pop
push
icebp
in
xor
xchg
cld
enterw
int3
fcomp
jl
mov
in
mov
jnp
std
stos
insl
cmpsb
adc
out
xchg
mov
stos
dec
cmpsb
mov
cmpsl
inc
cmp
sub
cmp
mov
sbb
fsubrp
dec
loopne
test
sbb
dec
push
cli
and
lcall
outsb
jle
stos
testl
inc
into
sub
icebp
ret
ljmp
pushf
pop
adc
hlt
neg
out
outsb
aam
dec
xchg
xchg
test
int
ds
popa
cltd
scas
xchg
push
sub
arpl
jp
loope
aaa
negb
imul
pop
shll
outsb
out
pop
clc
sub
mov
sbb
cmp
and
addr16
add
pushf
test
or
mov
dec
xchg
sbb
jns
daa
dec
dec
nop
movsl
push
mov
or
test
mov
inc
icebp
sti
push
or
xchg
pop
test
movsl
push
xor
fistpll
jp
scas
jno
in
sahf
mov
lcall
aaa
gs
inc
out
xchg
sbb
ret
pop
push
in
jmp
push
mov
pop
mov
lahf
fdivs
jns
push
mov
sub
mov
fiaddl
mov
je
mov
mov
movsb
xlat
push
xchg
cli
mov
dec
cmp
mov
daa
push
sbb
andb
shll
or
push
ret
mov
int3
add
xchg
hlt
jo
mov
pop
in
mov
out
push
dec
rolb
pop
rcrb
mov
jo
enter
scas
jmp
gs
mov
lahf
and
push
xlat
push
lea
sub
xchg
jae
sbb
clc
popa
xchg
xchg
mov
push
adc
adc
js
adc
cli
add
aas
es
adcb
xchg
adc
ret
mov
pop
xchg
popa
fisubrs
xchg
mov
push
jg
or
pop
aas
pop
lods
and
enter
cmp
adc
ja
shrl
jne
xor
scas
mov
mov
sub
mov
jno
jns
into
mov
or
lods
es
push
popa
push
sub
mov
out
fbstp
mov
repz
pop
push
cmpsb
aaa
stc
cmpl
mov
xchg
lea
xchg
or
loopne
xchg
jp
aas
testb
dec
shrb
adc
inc
stos
inc
mov
pushf
xor
push
test
inc
xor
mov
mov
rolb
ljmp
ja
into
mov
pop
imul
push
pushf
ficoms
repnz
aas
push
vpand
mov
popa
pusha
inc
test
insl
dec
loopne
sbb
jnp
popa
xchg
cmc
loopne
xlat
sbb
sbb
mov
stc
jo
sub
sbb
gs
xchg
mov
dec
outsl
dec
movsl
pusha
cmp
cwtl
arpl
inc
mov
push
sbb
inc
xor
fdivs
push
xchg
xor
or
jo
sub
xchg
xor
cmp
dec
xchg
cmpsb
jle
xchg
cli
loope
divb
int3
inc
dec
pusha
dec
adc
das
ret
cmc
xor
xor
inc
cld
jmp
ja
jg
cmp
movsl
loop
loope
icebp
imul
lea
test
xchg
push
jns
sbb
xorb
push
jns
cmpsb
and
push
cmpsl
rorb
stos
or
mov
cmp
add
out
in
insb
cmpsb
pop
fs
jne
mov
cwtl
in
ret
pop
ds
push
push
jmp
jbe
subl
dec
sahf
lcall
xor
pop
cmpsb
jg
lret
adc
mov
jecxz
rcll
nop
lcall
inc
idivl
push
loop
in
adc
test
lods
dec
mov
fistps
rcr
mov
or
pop
xchg
pop
xor
and
out
fisttpll
loope
sub
push
xchg
sbb
push
loope
push
divb
jmp
leave
mov
add
pop
push
cmp
cmpsl
xlat
aad
jo
std
mov
std
mov
or
push
rolb
mov
jg
lahf
pop
fisttpl
xchg
adc
mov
repnz
lahf
mov
dec
and
mov
lds
fcomps
push
dec
inc
out
test
shll
jl
mov
pushf
inc
lock
daa
dec
or
cmp
mov
and
orb
or
pop
adc
loope
jge
mov
int3
in
xchg
and
inc
mov
jle
fnsave
inc
adc
adc
clc
or
pop
pop
push
aad
movsb
popf
xchg
pop
and
incl
pop
xor
mov
jmp
xchg
adc
stos
pop
adc
jecxz
ljmp
push
mov
inc
es
hlt
js
inc
loop
inc
popf
mov
inc
pminub
imul
push
cmpsl
pop
lret
sbb
xchg
and
and
xlat
test
mov
mov
xor
pop
rclb
pop
fdivl
pusha
push
std
repz
or
mov
and
int
movsl
popa
cmpsl
push
sbb
and
push
lret
and
jo
xchg
xor
add
test
movsl
fildll
out
xchg
sbb
lds
movups
mov
popa
jp
add
dec
or
aaa
sub
nop
jo
scas
jmp
pop
dec
adc
arpl
push
imul
lock
cld
insl
sbb
lcall
push
pop
cmp
cmc
int
fwait
or
mov
push
ljmp
xor
mov
loopne
mov
xchg
mov
inc
stos
sbb
or
jno
inc
out
push
push
cmp
lea
cmp
push
in
test
outsl
es
daa
pushf
push
pop
jnp
mov
sbb
dec
iret
sub
jmp
inc
jae
pop
adc
or
sub
daa
jb
lods
mov
mov
add
dec
push
cmp
cmpsl
ja
push
addl
in
jp
dec
push
sub
stc
aad
cmp
ja
cmp
push
xor
jecxz
es
ret
in
mov
sbb
popa
stos
jge
popa
and
test
shll
es
dec
and
or
into
inc
sbb
sbb
jo
inc
cwtl
js
out
xchg
repz
adc
in
repz
fsubl
int3
jae
push
sub
repz
xor
push
jmp
scas
pop
pop
mov
or
nop
or
xchg
jb
aam
out
mov
hlt
sub
jle
xor
inc
leave
cmpb
jp
inc
dec
pop
pop
sub
pop
lods
adc
mov
pop
mov
mov
or
mov
sbb
pop
imul
xchg
lock
ljmp
inc
dec
iret
out
arpl
mov
xor
test
div
add
cmp
jmp
int3
movsb
sbb
jp
jo
and
adcb
insb
sub
push
int
fistl
icebp
sahf
fists
pop
cmpsb
and
adc
inc
movb
ret
dec
xchg
adc
jmp
test
pop
add
mov
js
inc
sbb
std
leave
xor
cmp
sbb
pop
dec
jl
out
arpl
adc
in
pop
pop
nop
fwait
shr
dec
push
gs
jl
xchg
lret
or
inc
das
mov
add
sar
and
adc
or
inc
dec
and
movsb
int
loope
mov
outsb
and
rclb
mov
int3
inc
fsubl
imul
shrb
js
and
jecxz
mov
push
dec
add
out
daa
xchg
adc
out
lods
repz
test
cmpsl
sub
call
or
sub
test
repz
add
fwait
pusha
nop
xor
jo
or
inc
scas
push
mov
mov
lahf
adc
test
in
aas
push
aam
out
sub
or
lock
and
sub
in
out
adc
call
out
xchg
sub
aam
mov
cmp
lcall
dec
mov
into
and
in
insl
mov
dec
aaa
cmpsb
dec
popa
arpl
mov
jnp
adc
jmp
loopne
mov
arpl
adc
lds
xor
xor
popa
push
jp
test
jecxz
mov
adc
pop
rcll
iret
pop
push
dec
pop
adc
scas
jg
inc
dec
imul
popf
sbbl
ficompl
in
jecxz
movsl
dec
mov
jo
cmp
les
mov
xchg
aaa
fnstsw
lret
or
test
inc
inc
lds
rcrb
roll
push
pop
loopne
lods
daa
mov
adc
xchg
test
push
xchg
ret
xor
das
mov
jbe
pop
pop
in
push
jl
mov
pop
je,pt
scas
daa
aam
inc
xchg
subl
ja
cmp
mov
push
or
inc
mov
jne
ror
cmp
sbb
ret
sub
sub
cwtl
pushl
das
dec
scas
std
pop
leave
cmovnp
and
mov
and
ret
loope
mov
fidivrl
cwtl
cmp
xor
cmp
call
test
popa
xchg
call
lock
das
stos
mov
xchg
mov
jmp
mov
mov
dec
push
cmovb
lods
ss
cmp
mov
or
ds
cmp
out
or
sbb
or
ja
xchg
syscall
out
clc
push
cmp
test
add
clc
cmpsb
fldcw
lahf
pop
mov
adc
rolb
gs
jb
fmul
inc
inc
xor
lcall
cs
jmp
fst
xchg
adc
mov
gs
dec
in
mov
loopne
xchg
fs
fdivr
aam
cmp
and
push
adc
js
fdiv
std
es
lock
lock
mov
xor
sub
sub
xor
jno
ret
insb
adc
insb
mov
loopne
mov
cmpsl
test
dec
or
test
nop
xor
cmpsl
int3
xor
and
adcb
mov
xchg
inc
cmp
add
in
adc
inc
fdivs
scas
add
adc
rcll
cmpsb
outsl
outsb
xchg
sbb
cmp
ljmp
xchg
cmp
stos
cmp
and
adc
sahf
jle
pusha
push
pop
stos
bound
repz
and
rorl
add
sahf
xchg
push
jne
hlt
xchg
mov
sbb
adc
sar
enter
fdivl
add
jns
in
mov
in
roll
mov
xchg
out
insb
xor
fisubrl
pop
out
and
mov
jb
dec
loopne
mov
jecxz
jb
mov
and
fnsave
sarl
lcall
or
shll
jl
insb
out
mov
xor
mov
mov
cmc
call
push
mov
or
cmp
pop
push
dec
inc
out
sbb
negl
outsl
sarb
inc
andb
mov
xchg
inc
scas
sti
pop
mov
andl
mov
call
adc
in
push
fcomi
xor
push
dec
mov
push
or
mov
inc
cmc
mov
andl
insl
sbb
ret
out
leave
les
pop
and
add
or
mov
mov
sbb
ret
dec
icebp
pop
pusha
dec
std
or
xchg
out
test
push
jo
pop
push
fs
mov
mov
neg
xchg
and
sub
dec
xor
nop
std
pop
cmpsl
pop
pop
repz
in
jbe
push
mov
cwtl
sub
xor
mov
dec
push
int3
call
push
int3
jle
push
mov
into
cmc
arpl
lret
mov
xchg
stos
add
cmc
icebp
mov
rclb
xchg
into
je
lods
or
mov
scas
fs
mov
and
sub
or
cmpsl
fcmovb
stos
in
out
push
jbe
js
adc
xchg
filds
sbb
stos
add
in
rcrb
cmp
push
shlb
sbb
sahf
push
mov
xor
jae
push
mov
out
inc
lods
out
roll
je
xchg
jmp
cmp
cmpsb
int
and
les
cli
jno
cmpsl
rcrl
push
jae
rol
and
sub
push
lret
repz
mov
in
dec
bound
imul
push
xor
or
ret
push
xchg
sbb
rcrl
jl
lds
xchg
nop
fimuls
mov
cli
add
mov
lods
jns
scas
sbb
add
jl
mov
ret
inc
adc
jnp
mov
mov
fsubs
jbe
repz
and
sahf
clc
inc
lea
sbb
inc
mov
push
mov
test
mov
cs
stc
sar
xor
mov
sbb
into
loopne
dec
iret
test
std
inc
inc
xchg
in
mov
int3
inc
js
push
and
push
sbb
push
icebp
mov
insl
aas
xor
ret
xor
adcl
push
fs
outsb
scas
cmp
leave
cs
hlt
ds
repnz
pusha
mov
jmp
mov
cmp
inc
sahf
std
push
lret
rorl
push
clc
pop
insl
sti
and
in
loope
mov
cmp
or
or
shlb
xchg
sub
pushf
fdivrp
pop
inc
mov
add
add
mov
insb
movb
dec
pop
fwait
sbb
push
jg
orb
insb
or
std
dec
sub
inc
push
inc
ljmp
ds
inc
ficompl
test
mov
push
fcoml
xor
sub
gs
cmp
arpl
pop
stc
cmp
fiaddl
mov
xor
jb
pushf
mov
insb
add
sub
fucomp
lret
andl
cmc
mov
push
inc
loop
rolb
shrl
fcom
xchg
add
or
push
out
sti
sarb
xchg
cmpsb
lock
out
jno
adc
and
hlt
imul
out
cmp
jp
aad
xor
int
pop
cmp
outsl
jb
push
std
push
fisubl
imul
mov
add
dec
out
loop
aam
lods
adc
fwait
in
out
bound
xor
pop
dec
lods
inc
mov
adc
dec
pop
dec
cmp
arpl
pop
mov
movsl
loope
dec
gs
test
pop
jle
and
fs
in
leave
lea
adc
clc
mov
xchg
and
pop
mov
lret
xchg
je
sbb
fwait
jecxz
cmpsb
jb
loop
xchg
imul
repz
or
cwtl
and
adc
sbb
cmp
push
sbb
jmp
pop
jo
sbb
push
jg
push
cld
fists
pop
cmp
xor
xlat
push
int3
sbb
stc
push
sub
pop
cli
add
xor
xchg
mov
mov
cli
int
mov
pop
mov
push
push
aas
xor
xchg
pop
mov
or
push
dec
xlat
inc
setne
xchg
cmpsb
sbb
jno
dec
push
mov
retw
dec
aam
mov
mov
clc
mov
mov
in
sbb
push
add
inc
negb
sahf
add
pop
pusha
dec
sub
xor
fcoml
rclb
jne
and
fisubl
ljmp
pusha
negl
lcall
repz
mov
mov
cs
and
in
repnz
mov
and
mov
das
dec
sahf
lret
data16
movsl
stos
mov
mov
movsl
xchg
fadd
mov
es
xorb
push
dec
or
mov
ret
lods
jge
mov
test
lea
js
imul
loopne
ds
dec
pop
call
jp
xor
pushf
fldenv
test
pop
jle
lahf
hlt
outsb
push
loopne
lods
or
loop
sub
or
mov
jp
pop
scas
sub
int3
imul
add
insb
pop
pop
jmp
mov
out
fdivrl
jbe
inc
es
sbb
jae
fcompl
mov
in
cmp
and
jle
fsubl
mov
in
push
jae
lahf
pop
lea
arpl
andb
popa
adc
push
mov
in
arpl
dec
icebp
inc
mov
jo
mov
jecxz
jmp
dec
lock
lcall
imul
dec
cmpsl
sti
ljmp
mov
jge
enter
inc
rolb
dec
mov
lods
mov
mov
add
cli
mov
sub
mov
lods
sbb
jo
scas
popa
xor
sub
sub
adc
aad
loop
fstpl
ror
and
cmc
fildll
adc
orl
mov
push
push
shr
outsb
push
lahf
testb
sub
pusha
inc
outsb
mov
pop
mov
pop
xor
loopne
mov
mov
push
push
sbb
pushf
and
cld
dec
in
leave
lret
sahf
mov
add
mov
xchg
and
adc
call
out
lods
push
add
add
mov
cmp
ret
dec
mov
xchg
push
cld
adc
in
xchg
mov
mov
loope
push
push
inc
in
cmp
lret
bound
in
xchg
test
int3
js
and
bound
push
pop
mov
mov
cmpl
xchg
insl
inc
push
cmp
cmp
lcall
push
roll
out
inc
or
inc
sub
out
jle
iret
dec
xchg
ret
fsubrs
mov
push
push
js
in
repz
or
lock
lds
add
dec
cmp
cmpsl
jge
jg
dec
cltd
xchg
test
out
call
pushf
mov
daa
outsb
icebp
xor
jns
aas
adc
cmp
jnp
jbe
or
icebp
scas
int
addr16
mov
push
aaa
stc
cmp
ljmp
fs
outsl
std
and
and
pop
gs
sub
test
jne
inc
adc
repnz
js
or
cmp
inc
sub
sti
xor
push
and
ljmp
jg
cli
xchg
in
adc
and
sbb
adc
push
sub
adc
pop
cmp
dec
pop
and
call
push
mov
xor
mov
dec
mov
fnsave
addr16
test
fstl
or
mov
pop
and
inc
stos
xor
test
inc
cltd
inc
jmp
repz
mov
mov
mov
mov
mov
int
pop
pop
outsb
xor
pop
xchg
movsl
icebp
mov
push
js
cmp
shrb
aam
push
jl
jge
jmp
pop
or
mov
xlat
insl
or
push
inc
mov
pop
imul
sarl
mov
push
jbe
xchg
icebp
lock
out
ss
loopne
pushf
add
popa
jo
dec
sub
inc
mov
jg
xchg
mov
out
aad
and
andb
add
out
ret
insb
cwtl
loope
adc
sbb
jne
or
xchg
out
popf
lahf
dec
cmpsb
pop
adcb
pop
sbb
or
outsl
fisubrl
filds
in
ss
push
cld
xchg
xor
fucomi
mov
icebp
out
or
xchg
jmp
cmp
or
mov
popf
xchg
lock
fs
dec
mov
add
sub
sub
lock
push
mov
add
inc
pop
fst
iret
nop
test
mov
cltd
adc
jecxz
sbb
lea
js
into
stos
ss
lret
movsl
lods
or
pop
push
sub
push
hlt
movsb
add
push
mov
fstl
pop
xor
sbb
mov
mov
inc
mov
pushf
call
je
fcoms
test
xchg
in
mov
out
dec
data16
gs
xor
stos
sub
push
or
jb
popa
leave
inc
xchg
adc
pop
jmp
ljmp
mov
pop
pop
fcoms
stos
xchg
sbb
or
adc
mov
lods
jae
sbb
mov
stos
lcall
jg
ret
xchg
fcoml
cmpsl
add
je
xchg
sarl
jnp
sub
adc
enter
jmp
imul
dec
xor
fldl
outsl
cs
adc
mov
or
sbb
daa
ja
call
nop
cltd
cmp
pop
scas
into
mov
and
daa
mov
cwtl
leave
orl
cltd
testb
mov
addl
hlt
lea
sub
in
aam
mov
lds
or
cmp
test
int3
cmp
and
mov
aas
mov
xchg
in
cmp
lds
xchg
cmpsl
jae
jge
pop
inc
cmp
xor
and
dec
inc
jno
pop
inc
mov
sti
dec
rcl
xorb
mov
sarl
mov
cmpsb
dec
ljmp
inc
fstenv
push
sub
cmpsb
out
add
jb
jne
add
adc
mov
fidivl
rclb
add
fidivrs
movsb
mov
fmuls
imul
fwait
jo
aad
and
add
jl
jl
jp
lods
xchg
pop
test
xchg
inc
out
jmp
lea
mov
out
mov
mov
add
and
cld
loopne
stos
fcmovu
fcomps
jg
dec
add
jne
xchg
dec
movl
mov
xchg
cmp
jb
out
insl
add
adcl
push
iret
xchg
or
jg
pop
xchg
and
jb
adc
and
incb
aam
imul
loopne
adc
mov
xchg
inc
mov
add
call
orb
les
mov
int
jae
int3
hlt
mov
mov
pop
clc
fwait
pop
negl
jb
pushf
adc
jb
add
cli
ficoml
cmp
inc
test
push
cwtl
lahf
divb
mov
addr16
fimull
adc
mov
loopne
movsb
sub
jns
jae
sti
negb
dec
js
sbb
aad
sub
mov
imul
pop
sahf
std
pop
sbb
je
cmpsl
push
lret
mov
and
imul
xchg
dec
dec
rcrl
imul
popa
repz
add
cmp
mov
ljmp
out
mov
jecxz
mov
cmp
push
imul
jnp
push
jno
outsb
cli
xor
sbb
push
cld
xor
or
pop
stos
pop
lret
xchg
shlb
fnstcw
in
pop
test
faddl
into
cmp
dec
arpl
xlat
scas
popf
push
sbb
push
jno
cwtl
cmp
pop
sbb
mov
sub
cmp
xchg
cmp
cmp
out
jb
scas
mov
cltd
sbb
scas
sub
popf
fiaddl
jle
aam
push
rolb
pop
and
ds
xor
mov
push
or
xchg
lret
and
xchg
insb
lds
inc
lcall
clc
sub
push
sbb
outsl
jae
popa
aaa
push
or
dec
ljmp
add
add
xchg
popa
rcr
icebp
lds
insb
outsb
and
mov
xor
sti
test
int
sub
push
add
add
push
scas
mov
insb
jecxz
imul
push
lds
jecxz
dec
imul
mov
push
dec
dec
add
hlt
loope
inc
aaa
sub
mov
or
in
and
mov
sbb
out
cmp
xor
push
add
pop
outsl
popf
inc
and
fsubl
pop
shrl
fiaddl
mov
loopne
mov
xchg
jnp
shr
ljmp
mov
or
pop
jg
icebp
insb
fcoml
mov
pop
ja
aam
jb
or
or
push
fdivr
getsec
inc
and
cmp
in
rcll
mov
notb
inc
sub
lret
adc
imul
mov
fs
mov
lods
xchg
sbbb
dec
cmpsb
mov
mov
mov
dec
cmp
jbe
sbb
sub
jge
mov
enter
hlt
rcr
dec
jg
or
loopne
or
les
adc
shrb
and
dec
pop
jge
movsb
lds
cmp
test
inc
in
xchg
in
mov
in
dec
loopne
xchg
jmp
mov
mov
loopne
imul
test
push
fsubr
dec
fbstp
pop
inc
sub
scas
dec
rorl
iret
push
addb
out
push
push
xor
jge
out
ljmp
push
pop
cmp
mov
jae
fdivs
sbb
mov
mov
nop
dec
xor
xchg
inc
sub
mov
out
ficoms
jne
in
mov
or
pop
xchg
fwait
ss
and
mov
inc
das
lds
adc
repz
push
fsts
jno
loopne
ret
or
dec
popa
mov
xor
pop
cltd
add
mov
loop
fldl
xchg
add
lret
gs
in
xchg
loope
jge
mov
repnz
jl
sarl
repnz
cmp
mov
pop
divb
cmp
pop
pop
mov
adc
insl
cmp
icebp
mov
roll
std
pop
cmc
dec
loop
jb
bound
or
adc
sbb
repz
stos
fldt
jecxz
fucomp
fcoms
fwait
testl
int3
xchg
cltd
lock
mov
das
jmp
mov
push
mov
inc
mov
jp
loope
mov
mov
jmp
add
and
xchg
jbe
dec
into
xor
xor
inc
xchg
push
daa
dec
pushf
ljmp
sub
mov
inc
loopne
cmpsl
data16
sub
adc
jno
out
inc
ret
stos
mov
jnp
and
mov
jo
les
push
dec
loope
data16
push
stc
pop
scas
in
daa
repz
sub
imul
jo
push
inc
dec
mov
xor
ljmp
aam
cli
push
push
dec
icebp
jno
fwait
jmp
lods
dec
add
mov
shrl
or
int
dec
sub
sbb
mov
and
mov
push
lcall
ret
pop
pop
jecxz
stos
into
fucomp
inc
xchg
andl
out
cmp
push
arpl
mov
xchg
sarl
jle,pn
push
bound
pop
imul
rol
popf
scas
mov
inc
ret
sbb
insl
stos
jmp
call
lods
in
outsb
and
pop
iret
add
jb
sub
mov
dec
loop
lret
mov
sahf
ds
add
cwtl
mov
jl
mov
add
add
data16
imul
xor
in
pop
scas
sbb
push
int
loopne
mov
sbb
mov
imul
imul
cmp
xchg
daa
and
movsb
stos
mov
mov
ja
into
jl
lea
fstpl
int
lret
adc
mov
stos
inc
mov
and
push
pusha
popl
iret
rcll
out
xchg
push
nop
aas
loop
insb
sti
rclb
nop
push
and
insb
rclb
add
pusha
push
adc
int3
lock
stos
fdivp
scas
adc
adc
scas
pop
mov
sub
xchg
je
mov
stos
mov
inc
fsubl
mov
test
xlat
mulb
xor
cmpl
lcall
dec
mov
dec
ficompl
or
pop
movsl
lahf
mov
fdivl
mov
hlt
clc
dec
pop
push
aaa
jae
jae
pminub
and
fcom
mov
and
mov
dec
push
leave
mov
loop
loopne
sbb
adc
xchg
scas
in
iret
xor
das
loope
push
imul
sub
mov
or
mulb
sub
cs
icebp
dec
push
mov
pop
imull
das
cmp
push
push
int
std
cmp
xchg
push
add
push
cmp
jge
sub
xchg
fdivl
test
xor
dec
adc
adc
xchg
jp,pt
les
out
pop
ljmp
push
pop
or
fsubrs
outsl
mov
sub
pop
dec
jmp
push
lea
repz
push
ss
repnz
popa
mov
adc
sbb
and
scas
inc
pop
push
and
xchg
and
cltd
cmpsb
sub
add
cmp
cmpsl
xor
inc
pop
stos
test
out
mov
push
stos
int3
cmpsb
inc
add
iret
daa
sub
sahf
mov
push
movsl
jo
sbb
pop
add
xchg
or
xor
jnp
ljmp
pop
push
jno
pop
sub
dec
lret
push
inc
cmp
and
dec
jne
fdivrl
pop
mov
insb
push
push
test
repz
aad
xor
in
notl
xor
adc
push
or
dec
mov
stos
mov
pop
mov
xchg
and
testl
cmc
fsts
xchg
mov
pop
xchg
xchg
push
pop
push
add
repnz
mov
pusha
popf
iret
lods
mov
ljmp
lock
aas
lcall
jecxz
jge
pop
bswap
adc
ficompl
lods
or
and
int
ss
cmc
int3
lock
sbb
fistl
or
imul
inc
mov
int
adc
aaa
shlb
mov
iret
mov
nop
jo
leave
sahf
in
or
cmpb
shll
outsb
mov
fs
int
in
mov
sub
test
inc
call
out
lds
xor
subb
adc
test
std
iret
sub
xor
popa
daa
or
in
push
rep
stos
das
dec
push
xchg
jmp
sbb
cmp
add
mov
sub
sub
push
pop
ljmp
loope
and
xchg
popf
and
mov
xchg
xchg
push
sub
rcrb
rcrb
dec
mov
jp
add
jg
repz
cltd
insb
fstpt
test
sbb
out
cwtl
ss
mov
cld
push
das
mov
lea
adc
mov
hlt
sub
jns
inc
and
cmp
es
cmpps
les
mov
and
jo
dec
sub
jge
lea
dec
lea
loop
mov
iret
std
sub
ja
loope
jnp
jno
and
sub
repz
jle
int3
and
jb
sbb
pop
je
std
loop
arpl
or
mov
and
nop
xor
push
add
sbb
and
xchg
cmp
enter
popf
sarb
jno
pop
fwait
mov
push
scas
repnz
or
push
pop
xor
pop
les
dec
pop
inc
pop
test
add
jo
sub
outsl
dec
and
sahf
jg
jbe
into
jns
jge
mov
or
adcl
lock
sbb
jg
mov
cmpsb
dec
cmp
nop
sub
inc
dec
jl
sub
daa
sub
xor
xor
addr16
pop
mov
daa
inc
xchg
cltd
outsb
inc
roll
mov
pop
and
or
test
xchg
jl
mov
mov
inc
pusha
std
cmp
loop
fdivrs
mov
leave
hlt
clc
ja
lcall
or
leave
pop
push
sub
test
mov
push
ror
stos
adc
and
sbb
mov
pop
xchg
jg
xor
lea
scas
mov
or
pusha
imul
adc
mov
fidivl
jl
xchg
sub
or
and
pop
or
sbb
fmul
mov
out
stos
fs
inc
imul
mov
mov
inc
ret
mov
cwtl
mov
inc
jae
into
shr
mov
ds
fsubp
in
ljmp
push
sbb
pushf
inc
andb
add
js
and
push
inc
andb
cltd
loopne
movsb
imul
dec
lock
clc
test
decl
and
test
dec
mov
daa
xor
cmp
imul
jbe
sub
test
mov
adc
add
enter
xchg
mov
pop
mov
pop
aam
mov
roll
pop
xlat
arpl
push
mov
enter
into
shl
data16
pop
lea
mov
and
test
outsl
data16
xchg
rclb
mov
addr16
or
mov
orb
lea
rcrb
inc
subl
int
ljmp
scas
fcmovnb
fdivs
mov
insl
movsb
sbb
icebp
and
mov
lds
ljmp
hlt
push
xchg
xor
pop
cmp
and
mov
ss
fwait
cld
inc
in
mov
mov
cmp
or
in
shrl
int3
mov
movsl
popf
into
pop
imul
dec
int
mov
jle
adc
test
jno
aam
dec
pushf
jg
jns
xchg
inc
cltd
mov
daa
and
xchg
mov
insb
pop
fincstp
lcall
inc
pop
test
jnp
test
sbb
mov
mov
call
movsl
data16
jp
add
fwait
mov
xor
or
stc
xchg
jno
mov
mov
addr16
sbb
cld
push
and
pop
std
leave
jmp
insb
nop
sbb
lods
xor
bound
jge
push
test
scas
xor
cld
lret
jmp
add
cld
int
test
inc
out
lock
pop
mov
inc
mov
nop
mov
push
jecxz
cmp
push
int3
nop
inc
xor
jge
fisttpll
push
mov
popf
dec
and
jnp
shl
xchg
and
sbb
data16
sbb
sbb
mov
insl
jo
cld
aaa
cmp
mov
daa
push
dec
movsl
jns
out
xchg
test
repz
push
shr
or
ret
mov
sti
or
lret
pop
pop
mov
arpl
jns
out
dec
je
imul
dec
mov
sti
sub
cli
orl
sti
arpl
mov
cmp
test
pop
pop
gs
je
clc
out
sub
jae
cmc
push
push
pushf
or
mov
sbb
cld
fsubrs
adc
cmpsb
pop
ljmp
push
adc
mov
ret
movsl
leave
jmp
dec
inc
xor
xlat
pop
fcmovnbe
xchg
push
inc
test
xor
xchg
jge
sahf
jno
xor
sbb
cwtl
mov
push
out
sbb
jmp
push
push
adc
rcrb
cwtl
leave
out
cli
sbb
mov
mov
cmp
addr16
fcomip
aaa
push
cld
iret
or
mov
mov
fnsave
pop
mov
xchg
sbb
aam
shlb
imul
fcompl
xchg
and
hlt
sub
lret
dec
add
iret
test
or
pusha
sub
fdivl
scas
push
iret
lds
pop
push
daa
inc
cwtl
dec
subb
in
pop
enter
mov
gs
in
cltd
fs
pop
push
xlat
enter
pop
sub
lcall
dec
imul
dec
xchg
mov
pop
sbb
and
mov
mov
mov
add
int
push
and
dec
mov
inc
xchg
lds
movsb
es
in
inc
test
pushf
movswl
scas
mov
and
pop
mov
push
lret
adc
xor
pop
test
lea
jae
lahf
cmp
in
loopne
sbb
aaa
jae
cld
inc
popa
mov
mov
dec
mov
fidivl
imul
inc
cld
loopne
fmuls
or
icebp
repz
or
pop
ljmp
mov
mov
std
arpl
test
mov
fsubs
mov
sbb
cmpsb
cmp
mov
jbe
pop
cmp
mov
out
lret
jns
ret
or
loopne
gs
add
fists
inc
test
pop
and
jle
inc
test
pop
ret
insl
sub
roll
popl
pop
jecxz
inc
pop
cmc
test
imul
sti
cwtl
es
xchg
ds
xchg
dec
pop
repz
movl
gs
lods
pop
cmp
cmp
inc
cmp
test
cli
sub
sarb
push
mov
add
ret
movsl
push
xchg
ret
fimuls
cwtl
into
addr16
sbb
inc
adcl
adc
cwtl
std
ds
sbb
jb
lds
xchg
iret
xor
cld
lahf
jb
imul
fs
xorl
mov
cwtl
imulb
insb
in
add
imul
add
xchg
ds
add
sub
inc
jle
iret
fistpl
pop
or
sub
sarl
and
test
push
xchg
fsub
clc
xchg
cmpsl
neg
mov
xchg
sbb
xor
mov
jno
and
div
xchg
xchg
sbb
aas
jo
neg
clc
mov
fstpl
pop
outsb
negb
pop
pop
aam
mov
cmpsb
sbb
pushf
test
icebp
mov
aaa
add
jecxz
lds
call
int
fmuls
fcompl
lods
int3
add
pop
loopne
mov
push
sbb
es
inc
btr
lret
imul
outsb
das
js
scas
inc
das
movsl
push
add
xchg
loop
xchg
sbb
call
sarb
inc
and
mov
dec
xor
push
inc
popa
dec
loopne
mov
dec
push
mov
int3
ljmp
inc
addr16
cmc
into
sbb
fdivl
adc
fs
jecxz
dec
pushl
mov
fiaddl
testb
imul
in
bound
divl
jb
or
out
add
add
out
push
mov
or
push
push
xchg
aas
sbb
ret
jmp
sbb
mov
mov
rcr
or
imul
inc
mov
cmpsb
pop
sub
leave
sarb
aad
jecxz
add
lock
test
fwait
xor
out
cmp
divl
xlat
test
jno
adc
mov
sarl
or
scas
dec
hlt
mov
jmp
fisttps
inc
iret
clc
cmpsl
and
sbb
adc
adc
mov
and
js
cmp
js
mov
push
fcmovnu
mov
test
in
xchg
loope
jl
push
mov
pop
mov
arpl
jne
mov
mov
insb
ret
cmc
fsubs
js
sbb
jmp
orl
fdivrp
in
mov
cltd
mov
dec
mov
push
mov
loope
and
inc
aas
fnsave
ss
xor
out
mov
push
test
jno
paddb
inc
xor
push
inc
pop
mov
xor
add
mov
push
dec
jmp
fdivr
jecxz
sub
and
cli
adc
stos
cmp
xor
xlat
xchg
mov
mov
sbb
add
rclb
sahf
pop
movntps
fwait
into
rcll
out
loop
out
cmc
dec
mov
ror
js
cmp
lea
fiaddl
pop
and
ja
enter
mov
test
push
add
movsb
gs
arpl
jle
frstor
iret
mov
das
in
lret
daa
lods
iret
fiadds
lcall
sti
into
sbb
or
dec
shrb
pusha
mov
repz
shrb
lock
ja
das
nop
es
shll
in
jmp
pop
fs
cmp
xor
jo
pop
stos
stos
and
lcall
xor
pop
sub
adc
outsl
or
add
push
mov
xor
sar
sbb
mov
mov
xchg
outsb
stos
lret
mov
inc
bnd
sbb
stc
loopne
jno
cmc
push
outsl
inc
mov
repz
repz
mov
and
mov
xor
pop
cmp
adc
add
jb
adc
js
dec
adc
inc
dec
arpl
dec
fidivrs
test
add
xor
xor
shr
aad
clc
add
dec
add
pop
mov
insb
hlt
adc
jmp
fcomps
add
sbbl
push
insl
xchg
int
loop
ljmp
add
sarl
sbb
mov
stc
das
sbb
and
mov
scas
push
ficoms
pop
pusha
and
mov
jae
mov
ret
stos
or
jge
sub
dec
sbb
push
stos
or
outsl
push
jmp
nop
call
lods
ret
jmp
test
sahf
mov
xor
ljmp
cmc
loopne
aad
je
lock
addr16
mov
sti
add
lcall
inc
stos
mov
or
out
mov
dec
and
push
dec
addr16
ret
ret
cmp
adc
andb
push
xorb
in
mov
xor
lods
inc
mov
jecxz
insb
or
test
std
mov
jo
mov
fisubl
shlw
movsl
popa
out
scas
shlb
inc
jle
add
jmp
outsb
or
inc
cmc
out
inc
jae
mov
mov
mov
add
add
adc
in
nop
insb
cmp
fadds
aas
mov
cmc
push
lods
cs
sub
pop
cmp
sbb
bswap
mov
push
lret
lret
cmp
mulb
shlb
xchg
shlb
xor
inc
lahf
jnp
push
fwait
mov
fidivrl
xchg
dec
and
lea
xor
inc
push
popf
bound
es
sbb
fs
and
push
cmpsb
enter
subb
pop
scas
dec
add
xor
imul
xchg
adc
js
fs
sub
jnp
das
cltd
int
imul
lcall
enter
xchg
rolb
jp
mov
and
xor
loopne
ss
insb
pop
inc
xchg
clc
adc
jmp
data16
aad
and
mov
cmp
push
aaa
sub
jmp
pop
popf
fisubs
xchg
adc
or
push
pop
mov
call
daa
mov
scas
rcll
popl
call
lret
adc
or
cmovge
pop
xchg
loop
and
stc
mov
in
pop
jae
lret
pop
and
imul
pop
jo
lcall
dec
lret
xor
sub
adc
xchg
or
stc
mov
jnp
aas
aas
fs
and
add
ljmp
mov
and
xchg
pop
jl
pop
shrl
insb
clc
adc
adc
cmp
add
push
inc
pop
fmul
jns
pusha
ficoml
add
adc
or
mov
sahf
lahf
pop
add
and
fildll
mov
and
scas
shlb
outsl
repnz
mov
shrb
je
call
xchg
arpl
cs
shrl
mov
ror
push
pop
das
loopne
push
loopne
lock
out
mov
pop
es
in
ljmp
sub
call
mov
mov
lds
out
sbb
je
ret
mov
cltd
xor
mov
sub
into
cld
push
jns
adc
or
insl
popf
pop
pusha
test
cmpsl
or
pop
ja
or
mov
xchg
pop
mov
lret
jae
mov
ret
outsl
pop
xchg
dec
mov
lea
addr16
leave
bound
cmp
sbb
imul
push
aaa
sub
test
mov
ret
sbb
xchg
sahf
rcll
outsb
dec
hlt
mov
sahf
jmp
and
and
pop
inc
stos
push
inc
mov
popa
cmp
xor
inc
inc
cli
sub
orl
inc
shr
jl
lcall
dec
hlt
inc
popa
xchg
lea
jle
aas
sub
pop
mov
cmp
das
push
adcb
xor
movsl
push
sarb
jae
push
jl
jbe
mov
fnstcw
adc
arpl
shlb
int
cmp
xor
mov
dec
jl
and
jecxz
mov
mov
dec
xor
loope
loopne
or
hlt
lahf
nop
ficompl
jbe
int3
lret
dec
xchg
mov
jb
dec
out
mov
in
repz
inc
pop
mov
sti
out
sbb
xor
fdivrl
and
sbb
out
sarl
fimuls
sti
adc
pushf
inc
sbb
jb
dec
and
mov
testb
xchg
shrl
jecxz
ret
mov
xchg
shl
sahf
aaa
mov
xor
sbb
ds
mov
ret
scas
mov
fwait
call
das
xor
ljmp
mov
sub
push
inc
rclb
cmp
notl
jb
inc
or
aaa
inc
hlt
cmpl
je
iret
xchg
pop
int
push
mov
je
pop
lret
std
in
adc
sahf
sbbl
push
pushf
mov
push
scas
push
mov
scas
mov
push
xchg
arpl
stc
xchg
fxch
insl
stos
sbbb
push
and
mov
push
xchg
dec
or
xor
movsb
add
and
pusha
jp
sti
jge
dec
icebp
test
adcl
aad
test
push
cmp
in
sub
or
inc
insl
out
ss
pop
add
cmp
inc
jns
movsl
fildl
inc
cmp
push
aaa
and
jne
jnp
jg
clc
js
aam
cmpsb
cmp
adc
pop
sahf
cmp
mov
or
int3
ficoml
cli
popl
sub
mov
jle
xchg
jp
inc
mull
sbb
out
mov
call
test
mov
adc
das
mov
mov
xor
test
add
nop
xor
add
aad
mov
push
cli
push
inc
adc
fisttpl
inc
in
mov
aaa
lods
push
clc
cs
mov
imul
in
hlt
adc
sub
jle
loopne
scas
je
pop
mov
out
sti
stos
popf
shlb
insl
jno
jbe
cmpsb
pop
loope
jle
mov
or
dec
lcall
iret
enter
das
rorb
fs
das
ss
xor
mov
add
dec
out
xor
inc
in
hlt
and
cmc
push
nop
sti
ds
adc
daa
popa
add
fisttpl
sub
jo
test
or
fstpt
mov
enter
fcompl
inc
sbb
xor
mov
fcmovnbe
pusha
adc
adc
jnp
push
scas
push
adc
loop
dec
std
out
push
dec
in
repz
mov
xchg
and
addr16
or
rcrb
hlt
jae
jge
jae
in
sbb
mov
mov
cld
pop
push
push
dec
dec
push
sahf
fbstp
insl
fimull
pop
xchg
cltd
inc
add
jle,pt
pop
les
hlt
jp
jmp
sbbb
dec
cmpsb
nop
push
into
pop
add
dec
mov
repnz
repz
jno
cmp
pop
call
add
loopne
int
cmp
pop
fwait
int3
and
xor
jecxz
dec
ja
or
jne
inc
push
push
nop
sbb
xchg
mov
inc
roll
popa
lds
push
pop
lret
test
inc
adc
add
ljmp
fmull
in
dec
fsts
and
mov
cmp
dec
cwtl
mov
and
nop
mov
movsl
cwtl
sub
cs
lds
adc
mov
xchg
pop
mov
cs
or
and
xlat
push
dec
xor
xchg
xorl
cmpsb
in
arpl
into
dec
imul
xchg
in
cmc
mov
jge
mov
dec
dec
or
push
jg
adc
lock
aas
jns
sbbl
or
mov
mov
shl
lahf
idivb
or
jb
lea
loop
jae
mov
rorl
mov
adc
or
pushf
pop
inc
fabs
or
push
push
data16
sbb
and
es
jbe
jne
pop
popf
rcrb
lds
ja
repnz
jge
sbb
cmpb
dec
adc
add
in
test
cmp
scas
je
ficoml
scas
add
mov
mov
xor
test
or
out
das
sub
xor
cmp
lret
or
pop
test
and
ds
cli
loopne
add
xlat
inc
sbb
insl
roll
call
scas
dec
sub
sbb
rorl
push
adc
lea
icebp
or
dec
sahf
and
paddusw
sub
jg
dec
lods
dec
inc
cmpsb
dec
popa
and
sub
cmp
or
mov
aaa
mov
cmpsb
icebp
xchg
out
mov
cli
loopne
popf
and
stos
jae
cmp
xor
adc
mov
or
cmp
mov
mov
mov
cmp
cwtl
xor
mov
jp
mov
mov
fisttps
xor
push
scas
scas
or
jecxz
mov
addb
jp
mov
pop
jnp
sbb
jbe
and
nop
repz
pop
sbb
out
add
sar
lock
and
div
pop
or
ds
pushf
repz
rcrb
roll
push
pop
fcmovb
dec
push
bnd
xor
nop
leave
rcrl
jl
add
ja
sub
lret
pop
sub
xchg
sbb
xchg
sub
fdivs
adc
fsts
cmp
call
in
adc
cmp
iret
stos
rcr
fists
mov
dec
loope
sub
inc
data16
mov
cmp
push
nop
xorl
test
xor
in
pop
aaa
dec
fsubp
xor
cmp
xchg
data16
insl
test
iret
dec
add
cmp
jns
fcmovbe
mov
sbb
loope
and
test
xor
sub
jno
lret
jg
ret
adc
inc
cmp
fisubs
add
push
jp
test
mov
push
imull
or
fs
inc
push
pop
pop
xor
aad
lcall
test
xchg
das
aam
sbb
lcall
cld
jmp
lea
xchg
stc
jge
push
aam
add
mov
push
or
xor
mov
cmp
cltd
enter
xchg
out
nop
in
pop
dec
imul
lea
jle
call
pop
movb
cmp
enter
rol
mov
dec
fld
jge
mov
testl
push
jae
dec
repz
mulb
cmpsl
mov
mov
push
iret
pop
add
xlat
inc
or
pop
mov
dec
cmp
pop
pop
bound
xor
in
sbb
push
cltd
xor
and
jge
or
gs
jbe
pop
jbe
mov
add
addb
mov
mov
inc
enter
inc
int3
push
sub
dec
push
xor
or
lea
adc
inc
sbb
mov
pop
jecxz
adc
das
inc
lock
insl
pushf
decb
cmp
xor
jge
hlt
lret
loop
ret
insl
inc
scas
xlat
pushf
mov
dec
cmp
jg
jb
data16
aas
fwait
add
push
and
xor
xor
cli
push
xchg
hlt
cltd
out
fmuls
mov
fnstcw
fistpll
call
pop
loop
aad
fildl
xor
addr16
adc
xor
jbe
imul
ret
ret
or
shl
int3
mov
mov
push
jge
and
xchg
das
push
out
jnp
cmpsl
outsb
cmp
or
adc
push
lcall
cmp
xor
inc
jle
push
cmpsb
dec
mov
in
jle
inc
inc
sub
incl
push
dec
push
mov
add
xchg
xchg
add
fnstcw
adc
xor
repz
xor
addl
es
jge
insl
dec
push
xchg
mov
out
jp
cmp
pop
in
push
xchg
adc
imul
mov
dec
pop
aad
jl
mov
mov
scas
xchg
repz
or
push
cmpsb
call
push
push
mov
imul
jmp
adc
sahf
rorl
and
jnp
jno
jp
mov
inc
push
adc
or
mov
inc
icebp
lock
repz
cs
and
lcall
clc
std
cmp
xchg
adc
mov
rcl
es
rolb
xchg
sti
fidivl
rcr
in
sub
xor
pop
and
aas
or
sbb
scas
shl
pop
in
inc
and
sbb
mov
in
or
lods
lret
xchg
mov
shlb
cmp
lods
loope
ljmp
cmpsl
idiv
in
mov
cmpsb
sbb
shrb
pushf
inc
mov
and
loopne
mov
addr16
adc
inc
movsb
xchg
rclb
mov
sub
add
imul
or
mov
mov
cwtl
push
daa
pop
sbb
and
add
cmp
popa
sub
inc
pop
aad
pop
outsb
outsl
jb
cmp
rclb
and
adc
out
fsubs
or
push
les
mov
inc
xabort
xor
mov
ret
rcrl
xabort
xchg
lret
jnp
daa
mov
lock
sahf
clc
fbld
mov
xchg
cmp
in
inc
push
mov
mov
cmpsb
sub
shlb
or
leave
jbe
dec
aam
mov
mov
dec
addr16
jbe
lods
sub
in
fsubrs
loopne
call
out
push
pop
cmp
fs
test
daa
stc
das
stos
dec
inc
in
jae
mov
insl
outsl
imul
jp
jmp
imul
pop
add
outsb
mov
add
dec
inc
adcl
pusha
mov
stos
jmp
or
inc
jne
push
negb
fisttpll
cmp
stos
fsubl
sti
inc
cmc
pusha
xor
scas
jb
out
lret
or
out
adc
cmp
inc
jle
cmp
shrl
sub
adc
aam
push
ds
popf
xor
jne
stos
cli
les
dec
jno
enter
and
pushf
in
icebp
outsb
add
and
dec
stos
push
sahf
pop
cmp
shll
jg
les
jl
idivb
fwait
pop
ret
aam
push
jno
lret
xor
out
js
jae
cmp
push
push
add
stos
adc
add
int3
movsb
push
mov
pop
out
and
sub
or
cmc
enter
xchg
outsl
repz
mov
mov
sbb
mov
sbb
scas
pusha
sbb
mov
xlat
lds
inc
xchg
nop
jge
xor
mov
aas
add
out
push
aaa
xchg
add
enter
cmp
push
push
daa
cmc
add
sarl
sbb
jl
aam
mov
rcll
roll
pop
in
rorl
push
push
loopne
movsl
push
movsl
jmp
pop
mov
stos
adc
sub
inc
in
or
inc
cmp
inc
push
movsl
fmull
xlat
test
movb
lds
xchg
pop
into
or
js
xlat
aas
xchg
scas
push
mov
popa
sub
jne
jns
enter
sbb
mov
pop
lods
cmp
into
fisubrl
in
cs
pop
adc
xchg
frstor
pop
jo
fimull
sarl
cld
popf
sub
pusha
or
xchg
jbe
adc
ljmp
lock
mov
sub
leave
xchg
adc
xchg
movb
clc
mov
dec
xor
cmpsl
jns
cmp
js
movsb
comiss
dec
imul
fucomi
lock
loopne
cld
inc
and
push
and
xor
repz
idiv
cmp
push
xor
push
cmpsb
repnz
lcall
lret
add
jmp
ror
mov
xchg
adc
ja
mov
int3
leave
push
jl,pt
xor
inc
xchg
pop
cs
or
push
jne
inc
dec
flds
mov
cmp
lahf
push
sbb
add
ud0
es
negb
cwtl
out
loop
shl
xor
dec
mov
inc
add
mov
push
call
xor
jb
ficoms
push
mov
mov
or
cmp
pop
test
fs
sub
sbb
xchg
cmp
adc
outsl
push
sub
xchg
xor
aas
push
test
xchg
mov
nop
mov
cmp
sbb
and
stos
adc
jae
inc
push
imul
sub
jae
or
xlat
push
pop
in
xchg
mov
adc
cmp
js
cwtl
mov
dec
aas
push
dec
testl
xor
and
mov
sub
xchg
cmpl
dec
adc
xchg
test
mov
in
imul
mov
dec
outsl
or
sbbl
dec
push
scas
ds
scas
sub
fbstp
pop
mov
pop
test
inc
sbb
stos
cmp
dec
data16
jnp
cmp
mov
mov
pop
add
pop
stos
sub
xchg
cli
adc
and
jg
add
adcl
and
nop
repnz
loope
push
sub
fiadds
leave
cmp
add
or
xor
repnz
jns
out
and
or
lods
jge
lods
inc
mov
xor
mov
jo
sti
jmp
jbe
adc
sub
in
stos
pop
test
loop
add
iret
and
push
cmpsb
add
int
outsl
mov
in
std
push
pop
int
mov
sahf
jge
repz
lds
cs
dec
movsb
sub
mov
dec
cmc
popf
mov
loope
sahf
loope
dec
hlt
fistpll
mov
ror
mov
iret
lahf
xor
jnp
pop
and
gs
or
cld
insl
daa
dec
test
das
inc
stos
cld
dec
lret
sbb
xchg
xchg
es
es
popa
mov
fisubl
shll
cmp
jge
nop
leave
int
call
cmpsb
pop
popa
xchg
sbb
rclb
jl
insb
push
dec
inc
pop
xlat
sbbb
loop
jo
mov
loopne
sbb
inc
hlt
stc
jne
imul
cmp
fmuls
jne
sbbb
stos
testb
mov
dec
imul
rcl
or
cmp
rorb
sub
imul
push
enter
add
je
sbb
add
jns
imul
ljmp
mov
lahf
je
sbb
xchg
insb
xchg
add
and
sbb
arpl
mov
inc
faddl
cmp
push
sti
fwait
cmpb
icebp
sbb
das
sbb
jecxz
inc
fists
inc
pop
dec
ja
cld
lea
mov
out
cli
mov
xchg
rorl
add
cltd
cmpsl
inc
outsl
pushf
mov
dec
in
sbb
cmpb
lds
sub
mov
ret
push
out
inc
ljmp
or
mov
jge
push
xor
test
jns
lods
pop
rclb
mov
cmc
pop
cs
pushf
inc
push
arpl
mov
imul
jns
xor
call
ret
je
pop
or
jmp
cmc
ffreep
test
mov
inc
hlt
add
cwtl
fucom
mov
in
out
das
mov
andb
arpl
sbb
and
jae
fwait
sub
loope
ds
pushl
mov
sub
loope
cmpl
stos
jo
cmpsl
ja
sti
xor
adc
push
imul
sub
mov
faddl
popa
sbb
sub
mov
sbb
and
xor
xorb
pop
ja
dec
jno
xchg
sbb
mov
popa
adc
dec
xchg
add
sbb
mov
mov
in
xor
jno
lcall
or
pop
sub
aas
jle
repz
add
mov
mov
or
pop
shll
pop
dec
cmp
mov
jge
ds
mov
fs
ja
dec
sub
push
cmp
sahf
mov
adc
aaa
rcr
mov
repz
inc
pusha
lds
jecxz
repz
adc
inc
adc
inc
pushf
or
jmp
inc
or
sub
push
mov
xchg
sbb
out
sub
leave
adc
jle
sbb
xchg
pushf
mov
loop
sbb
sahf
gs
loope
subb
inc
rol
add
mov
std
in
aad
ss
jb
push
xchg
inc
push
or
repnz
dec
add
inc
jecxz
mov
ljmp
mov
jnp
ror
imul
pop
adc
mov
or
mov
add
rorl
rorl
loop
pusha
sti
add
enter
stos
iret
pop
pop
shr
movsb
in
push
pusha
subb
addr16
lods
shr
push
jecxz
lahf
mov
negl
loop
jle
rcrb
repnz
out
mov
sbbl
fistl
fdecstp
sub
test
mov
jg
or
bound
dec
sbb
js
mov
mov
add
inc
sub
pop
and
arpl
mov
sub
aad
mov
adc
inc
sbb
loope
push
dec
in
cmpl
sbb
add
xchg
sti
cmp
adc
add
adcb
push
lcall
dec
jno
cwtl
add
in
add
dec
pop
fstp
cmpsb
sub
or
out
xadd
fsubrl
fisttpll
pop
jbe
stos
sub
pop
popa
cmp
xchg
and
cmp
push
xchg
jg
lret
jo
mov
jl
leave
ror
fucomip
jge
js
sub
shrl
lds
push
lret
mov
out
or
fistps
data16
push
jl
das
sbb
inc
mov
adc
pop
add
shll
mov
push
loope
mov
sahf
xchg
mov
jl
popf
fsubrp
nop
inc
or
push
cmc
enter
cld
jb
sbb
ret
dec
fmull
jno
je
xchg
mov
sub
mov
lret
ja
add
out
sbb
xchg
clc
cmp
lea
les
adc
iret
loopne
stc
daa
mov
xchg
cs
test
out
push
int3
pusha
xor
xor
push
sub
add
int3
jecxz
mov
insb
inc
or
imul
aad
ja
dec
movsb
mov
cmp
jo
cwtl
fidivrs
push
pop
sbb
or
and
iret
jo
int
push
sub
test
lods
add
and
stos
imul
adc
pop
sarl
pushl
js
jns
scas
sbb
and
xchg
adc
cltd
xlat
add
nop
xchg
xor
fistps
mov
addb
pop
lods
jbe
into
dec
or
imul
andb
fdivs
int3
cmpb
inc
insb
ss
pop
pop
nop
les
mov
xor
std
xchg
xchg
push
fisubrs
inc
rcrl
outsb
push
inc
xor
sahf
inc
or
add
imul
je
inc
lods
xchg
and
test
push
jbe
or
mov
or
lods
sub
or
xchg
pushf
cmp
enter
push
aaa
sub
push
and
jl
pusha
fadds
out
popa
dec
icebp
ror
mov
lea
in
sti
adc
arpl
mov
std
out
adc
sti
sbb
and
insl
xchg
fists
subb
scas
cltd
nop
outsb
push
add
das
cmc
movsl
cmp
adc
icebp
mov
dec
push
in
and
jmp
jnp
rcll
test
cs
cli
mov
ret
stos
fildl
jmp
push
jns
mov
dec
pop
jl
xchg
inc
adc
bound
fiaddl
idiv
mov
lret
gs
in
test
int3
push
fs
call
cli
mov
pop
lcall
mov
mov
pop
sbb
lret
aaa
arpl
jl
repz
jp
push
aam
jecxz
cs
ret
mov
mov
dec
jmp
hlt
inc
nop
in
push
cmp
stos
sbb
hlt
and
dec
les
dec
sub
roll
add
cmp
cld
xor
pop
bound
pop
add
cmp
bnd
fnstsw
sub
js
cmpsl
inc
mov
sbb
outsl
push
mov
or
iret
loope
or
ss
xchg
xor
rcl
cli
je
sbb
lahf
data16
jns
shll
in
movsb
loope
sbb
pop
dec
into
imul
ds
adc
test
sbb
je
push
xchg
push
icebp
data16
add
add
adc
arpl
adc
lahf
xlat
adc
movb
outsb
jb
mov
dec
call
scas
xor
in
pop
out
js
lods
jecxz
sub
repnz
push
in
imulb
js
or
imul
retw
in
enter
jle
add
test
mov
sbb
xchg
add
lds
stc
jne
and
dec
xor
icebp
xchg
lea
dec
lret
or
cmp
dec
xchg
lods
cmp
pop
mov
jno
xchg
pop
sbb
das
push
out
rclb
mov
push
xor
adc
test
arpl
fstps
daa
jo
in
sbb
inc
imul
rclb
sub
push
xchg
aas
push
das
adc
xor
hlt
fisubl
lcall
popf
cli
test
cld
out
bound
cmpsl
loope
scas
movl
scas
xor
cli
mov
jb
push
lea
shll
or
xchg
push
jb
bound
lods
hlt
push
mov
adc
daa
stos
dec
adcl
xchg
lret
cmpsb
faddp
mov
mov
es
scas
pop
jp
out
out
push
sarl
pop
lcall
mov
pop
cltd
sub
lahf
in
dec
in
loopne
ja
dec
and
ret
out
sbb
bound
shl
sbb
push
arpl
dec
das
xor
cwtl
sbb
inc
jae
pop
out
add
fstpl
iret
icebp
aas
cmp
sub
adc
hlt
aad
jnp
xchg
sti
dec
adcb
test
das
jbe
int
out
pop
push
jmp
jle
adc
pop
out
mov
inc
mov
dec
cmp
fisubrl
mov
xchg
mov
in
imul
lahf
dec
in
and
shrb
pop
inc
repz
pusha
lock
cmp
xchg
mov
fwait
dec
jno
clc
jae
int3
test
or
adc
aas
jp
orb
xor
loop
into
or
inc
mov
test
mov
adc
addr16
pop
adc
aaa
push
hlt
test
add
xor
xchg
push
fldt
dec
es
push
mov
sub
sbb
cmc
pop
push
in
push
xchg
int
cmp
mov
mov
jbe
in
push
insb
cmp
mov
pusha
or
mov
jmp
out
mov
adc
sahf
mov
loopne
popf
addr16
and
xor
outsb
xorl
js
cvtdq2ps
test
out
gs
dec
push
mov
test
push
pop
mov
je
xchg
and
xor
pop
xor
xor
mov
lcall
dec
lcall
ret
cmp
test
insl
into
dec
inc
push
ljmp
rorl
cmp
mov
je
mov
mov
lds
pop
add
pop
in
push
inc
pop
inc
dec
dec
inc
ret
into
dec
lret
pop
lahf
push
js
cmpsl
jmp
adc
int
xor
push
mov
mov
mov
cmpsb
out
adc
dec
ss
inc
inc
xor
push
adc
inc
pusha
fidivl
push
cmp
xlat
out
jns
adc
pop
jmp
fmulp
sub
mov
imul
data16
cmp
mov
fildll
loope
sbb
mov
inc
fs
out
icebp
inc
pushf
mull
fistps
andl
test
inc
scas
cwtl
das
addr16
roll
sbb
mov
ss
mov
sbb
inc
bound
shrb
pop
popa
mov
insb
xchg
xlat
scas
in
jg
rcl
or
repnz
test
and
stc
fldenv
popf
outsb
mov
sub
mov
sub
xor
push
push
popl
mov
ljmp
jns
xchg
pop
loop
das
cmp
icebp
jp
shlb
sar
push
fs
push
pushf
xchg
pop
clc
mov
inc
xlat
popf
in
fwait
jae
mov
push
push
push
jo
scas
push
mov
jl
movsb
es
daa
mov
out
inc
inc
jb
cmpsb
lret
sti
xor
xchg
adc
fistpll
out
leave
adc
pusha
cli
adc
in
sub
and
add
add
mov
icebp
mov
daa
lret
cmc
clc
mov
data16
and
je
cmpsb
loopne
js
mov
mov
call
out
out
fldenv
sbb
inc
fsubrp
outsb
popa
out
lock
int
xorb
cmpsl
in
mov
das
addr16
mov
ss
xchg
pop
rcll
or
into
das
sub
jbe
out
out
cmpsb
fdiv
stc
lds
or
cmc
test
icebp
mov
jae
rcll
out
sub
xlat
lcall
int
push
mov
or
sub
inc
addl
scas
pop
out
cli
test
push
clc
rol
add
bound
je
mov
stc
shll
stos
adc
dec
int3
add
push
xor
adc
add
xchg
jae
sahf
xchg
jne
push
decl
sub
sub
jno
mov
xchg
sti
fldl2e
push
fwait
xchg
jp
pop
imul
repnz
xchg
add
dec
add
sahf
push
notl
cmpsl
and
punpcklbw
sarb
or
and
jns
das
mov
xor
sbb
fs
movsb
sarl
jns
enter
sbb
lret
add
push
adc
mov
mov
adc
je
ljmp
cmp
out
test
or
inc
fs
pusha
rorl
mov
push
mov
xchg
mov
dec
shr
dec
outsl
sbb
arpl
sub
or
sahf
iret
ret
in
js
cld
incl
jae
or
jne
inc
mov
mov
xlat
cmpsl
js
lock
lea
xor
sbb
pop
xlat
in
inc
out
and
adc
bound
mov
inc
dec
add
sbb
jns
fs
xor
push
pop
inc
mov
aas
test
add
jmp
sub
aas
cwtl
inc
mov
ja
jne
pop
push
push
in
jbe
rolb
inc
in
ret
sbb
popf
push
cwtl
adc
xor
pop
inc
xchg
pop
add
fwait
and
push
mov
inc
inc
test
enter
rcr
stos
push
mov
push
int
jecxz
sub
pop
push
je
mov
popf
inc
jae
or
sbb
outsl
mov
mov
out
in
and
imul
and
and
aam
sub
adc
pop
push
mov
jmp
mov
imul
sbb
aaa
mov
out
mov
jne
rorb
pop
out
popf
jge
pop
xor
add
jnp
add
in
sub
push
push
call
ja
mulb
inc
scas
jnp
or
lods
cmp
pop
das
add
fistps
or
cwtl
cwtl
sub
sub
ret
out
into
cmpsb
sbb
lret
pminub
mov
cmpsb
jecxz
jo
adc
sbb
aad
xor
sub
pop
sub
sbb
push
inc
test
mov
jl
stc
jmp
pop
or
and
xor
xor
cmpb
adc
pop
fcmovnbe
imul
fnstenv
add
adc
in
stos
andl
popa
dec
insl
loop
cmp
sbb
xchg
cmpsb
inc
inc
mov
inc
xchg
mov
dec
fbld
or
pop
pop
loopne
inc
call
aam
inc
push
ss
es
setge
jl
jne
ljmp
dec
test
mov
inc
pop
mov
pushf
sbb
sub
aas
div
xchg
push
scas
or
push
pop
jns
popf
jp
into
cmpsb
stos
pop
pop
jno
mov
sbb
push
scas
icebp
sub
jl
testl
rcll
dec
pop
and
insl
out
xlat
fsubrs
dec
pop
add
arpl
clc
addr16
inc
popa
adc
lods
dec
and
nop
and
jecxz
test
cmp
insb
mov
xchg
cmovle
push
clc
mov
insb
mov
push
movsl
out
loope
pop
sbb
fistps
rol
adc
out
in
mov
repz
xchg
xlat
push
int3
mov
cmp
jnp
mov
in
mov
xor
jl
enter
dec
mov
mov
pop
dec
out
loopne
mov
mov
int
in
sbb
cli
inc
sbb
push
fsubl
jp
cmc
pop
fdivs
popf
enter
push
arpl
scas
xchg
aam
dec
fidivs
movb
and
stos
mov
and
das
sub
iret
jg
sbb
stos
outsl
lcall
or
cmp
pop
cmp
leave
aam
mov
mov
mov
int
lret
repnz
xor
jmp
repz
out
xchg
xor
xor
or
rorb
adc
pop
in
adc
push
mov
push
cmp
push
push
outsl
out
sub
mov
mov
loope
sbb
ds
iret
insb
cli
shrl
ss
mov
cmpsl
es
add
xor
lret
enter
mov
cmp
lcall
mov
arpl
and
rcr
and
push
adc
js
lock
dec
aam
adc
pop
es
or
add
push
xchg
rol
adc
push
inc
xor
ss
sbb
lcall
jge
aas
cwtl
hlt
jne
inc
push
sti
loope
push
xchg
call
sub
les
add
xor
push
mov
rorb
int3
lret
mov
inc
sub
jno
popf
fisubrs
hlt
shll
push
push
sbb
push
dec
sub
and
xor
iret
subl
imul
gs
jp
mov
loope
jbe
add
add
out
push
mov
lcall
jae
ss
dec
pushf
pop
ss
psubusw
mov
icebp
mov
shl
jno
dec
popf
mov
mov
aas
cli
mov
mov
jg
scas
out
stos
and
inc
stos
ficoml
insl
ja
mov
mov
cmp
xor
push
mov
sbb
add
mov
mov
es
pop
mov
ss
xor
xchg
arpl
mov
cli
xor
movsl
shl
in
outsb
call
cmp
das
nop
pop
cmp
xchg
stc
je
pushf
cmpsb
loop
adc
push
xchg
dec
sub
jp
cmp
add
jno
decb
add
xchg
addl
ds
xor
fwait
cli
loope
fdivr
add
outsl
mov
leave
push
cmc
push
div
mov
pop
jl
add
popf
ror
sub
fmull
jg
xchg
add
push
stc
sbb
insl
add
jmp
mov
cli
repnz
shlb
jl
shlb
bound
mov
dec
stos
or
and
lret
out
testb
adc
mov
xor
inc
mov
mov
popa
scas
adc
mov
pop
cmpsl
ljmp
ret
cmp
dec
inc
mov
add
adc
movsl
pop
xchg
push
and
shll
pop
and
insb
cltd
repz
mov
sbb
test
dec
sbb
dec
repnz
js
fstps
sahf
loop
stc
int
aad
adc
xchg
push
xchg
cmpsb
and
pop
sub
cmovns
dec
jg
not
or
lea
sbb
cmc
insb
pop
sbb
xor
sbb
negb
add
push
enter
fyl2xp1
mov
loopne
xchg
rorb
pop
jbe
cld
lahf
mov
push
xor
leave
insl
mov
call
and
imul
rcrl
loop
daa
push
rcll
jl
push
pop
in
and
sub
pusha
repz
cmc
sub
test
adc
cwtl
push
pop
mov
je,pt
xchg
jb
jge
mov
mov
pop
fildll
cmp
mov
dec
xlat
dec
xor
xchg
fisubl
fisubl
test
pop
cmp
push
sbbb
lds
loope
movsl
cmp
lods
lock
sbb
das
cmc
sti
or
ret
loop
insb
loope
repnz
sub
loope
sub
enter
sbb
lahf
xchg
xchg
fidivrs
xor
xchg
je
cmp
lret
mov
fs
push
push
push
mov
cmp
jb
cmp
xchg
cli
sbb
repnz
xor
movsl
lds
and
mov
cli
addr16
cmp
adc
mov
jbe
pop
push
test
es
int3
arpl
flds
xor
arpl
addr16
mov
testb
cmp
fcmovbe
or
mov
test
divb
lret
arpl
scas
movsb
lock
cmp
adc
inc
pop
inc
xchg
and
in
in
call
adc
pop
and
fwait
mov
mov
fcmove
addr16
pop
xor
xor
or
pushf
fdivl
dec
sbb
fidivs
leave
stc
sbb
sub
inc
shlb
pop
jne
sub
sbb
call
jmp
dec
movsl
lods
pop
inc
xchg
add
pushf
xlat
push
adc
mov
mov
xor
sbb
jle
mov
jl
aam
lea
inc
jmp
push
pop
scas
pop
and
test
je
test
cmpl
repz
xor
pop
into
push
mov
sub
ss
mov
lods
adc
popl
loopne
aam
pusha
add
lahf
push
loop
pop
dec
in
push
aas
xchg
add
pop
mov
test
in
insl
sub
sub
into
cld
rorl
adc
push
cmp
dec
push
jp
dec
shll
out
pop
jae
clc
decb
or
mov
sti
pop
fstl
mov
mov
ljmp
push
fnstsw
ljmp
push
cmp
loopne
stc
aaa
cmpsl
push
jmp
push
subl
cmpsl
dec
or
bnd
dec
and
push
cmpsl
mov
out
fcmovb
int3
flds
mov
idivl
dec
sahf
mov
les
lods
imul
div
ss
dec
or
sbb
or
dec
je
cmp
scas
iret
clc
sbb
in
repnz
aad
fsubrs
div
ja
mov
push
pop
pop
pop
clc
sbb
sbb
je
mov
add
and
xchg
push
xchg
in
or
mov
sub
sbb
and
add
popf
mov
fmuls
pusha
dec
xchg
pop
adc
sub
xchg
inc
mov
add
xchg
ds
jmp
and
add
mov
sbb
rorb
dec
outsb
outsl
dec
or
daa
mov
insl
and
std
cli
stc
gs
sbb
xchg
ret
ret
shrl
insl
lock
outsb
mov
movsl
enter
inc
mov
mov
fs
inc
ja
sbb
orb
push
pop
into
inc
nop
mov
push
xchg
jge
loop
imul
pop
movsl
cmp
into
jl
xchg
cmc
or
lea
das
mov
pop
inc
inc
pop
gs
dec
and
sahf
arpl
stc
jp
adc
mov
out
dec
cmp
sti
adc
cmpsb
cmp
dec
push
rclb
pusha
xor
xchg
push
imul
mov
out
movsl
push
dec
daa
outsl
xor
sbb
xlat
jmp
rcr
cli
xchg
jb
adc
jo
fs
pop
jns
sti
aas
mov
sbb
push
insl
add
sbb
mov
mov
sbb
pop
cwtl
repz
mov
fdivrl
adc
rorb
xor
iret
gs
cmp
sbb
or
mov
adc
hlt
jge
mov
loop
cmpsl
lods
and
movhps
outsl
jecxz
dec
push
dec
sub
fstl
lods
loop
adc
push
je
daa
xchg
sbb
in
mov
cmp
imul
jo
hlt
stos
pusha
xchg
jbe
je
xor
adc
lock
dec
das
mov
push
mov
jno
mov
sub
or
fsubs
popf
sbb
lods
movsb
mov
jnp
addb
mov
mov
mov
inc
pushf
sub
loopne
fisubrs
mov
xor
mov
inc
mov
dec
push
inc
iret
imul
push
cwtl
ss
xchg
adc
lret
nop
and
mov
adc
in
push
insl
sbbb
push
pusha
adc
or
rcll
cmp
mov
and
mov
adcb
pushf
cltd
inc
insl
jle
lcall
add
cmpsb
mov
cli
rol
je
or
xor
cmpl
loop
sbb
ret
popa
mov
in
jbe
inc
mov
ja
jg
jnp
ja
js
inc
cmp
dec
stc
sub
or
sub
cmp
or
ja
icebp
dec
mov
jae
addb
es
idivl
popa
push
arpl
rclb
jle
scas
xchg
int3
insb
xchg
jmp
rorl
icebp
xchg
pushf
add
imul
cltd
cmpsl
push
into
insb
pop
xor
jno
test
xor
pop
sbb
stc
jge
dec
add
push
fs
clc
nop
addr16
xor
cmpsb
aas
or
push
mov
aam
and
mov
outsl
xor
stos
xor
clc
subl
sbb
subb
mov
jmp
into
push
mov
and
lods
fdiv
push
xchg
mov
push
outsl
add
jo
sub
cli
sub
xchg
aad
xor
push
dec
and
pop
das
test
lret
xchg
das
pop
aad
mov
dec
iret
incl
ret
add
pop
xlat
inc
lds
test
in
mov
xlat
jmp
movl
cld
lcall
ret
insb
mov
push
sub
andb
cmp
pop
mov
jae
into
sbb
add
movsb
and
arpl
mov
shl
mov
mov
ja
shlb
dec
call
mov
mov
imulb
push
pop
mov
inc
fcmovne
inc
xor
add
cmp
and
inc
ljmp
stc
mov
in
movsb
jmp
add
js
xchg
mov
dec
cmp
xchg
imul
pop
fsubrs
push
mov
push
aaa
popa
adc
icebp
fldt
or
lds
je
xor
xchg
aas
or
cmc
add
divb
insl
or
in
sar
hlt
mov
int3
cmp
pop
int3
test
xchg
out
in
in
test
sbb
jno
cmp
stos
mov
stos
inc
aas
xchg
into
ror
repz
xor
mov
div
mov
xor
bnd
add
sub
dec
ficomps
fwait
adc
push
lret
sub
fnsave
ss
xchg
pop
mov
shl
stc
aam
push
inc
mov
pushf
and
clc
frstor
sbb
jmp
jb
dec
cld
mov
cmp
cmp
lods
pushf
ds
aaa
lock
xchg
int3
dec
and
push
jne
jg
push
xchg
adc
jnp
xor
mov
outsb
in
sub
insl
jae
popa
mov
sbb
inc
roll
stc
jbe
and
in
lods
roll
adc
ficoml
repz
loopne
testb
iret
push
inc
stos
xor
arpl
les
cmp
xchg
adc
or
popf
repz
pop
std
push
xor
enter
stos
imul
ret
popf
ljmp
out
sti
mov
imul
xchg
adc
movl
push
dec
push
pop
leave
xorb
inc
pushf
xor
js
rclb
sbb
test
mov
push
stos
push
xor
pop
adc
ret
cltd
sbb
jp
fs
jg
lds
cmp
mov
into
das
add
xchg
sub
mov
add
xor
dec
fsubl
cmp
test
fnstcw
fisttpl
pop
and
xchg
adc
inc
aas
popf
filds
and
std
and
popf
mov
lret
rorl
xor
xchg
gs
inc
add
loop,pn
idivl
jl
or
jns
xchg
xchg
xlat
out
sbb
cmp
or
jbe
lcall
mov
pop
mov
repnz
sub
dec
pop
sub
sbb
dec
xlat
test
lahf
shll
repz
mov
js
xchg
and
inc
inc
call
mov
mov
push
mov
fs
push
dec
loopne
mov
movsl
test
push
cmpsl
dec
mov
cmpsb
xor
in
out
jns
jno
std
adc
inc
inc
add
jns
das
imul
cmp
orl
xchg
sub
push
push
pop
fiaddl
test
addr16
lcall
loopne,pn
jg
xor
imulb
xchg
out
add
mov
dec
fmuls
xchg
cld
js
ret
inc
xorl
test
pop
in
in
sbb
popa
lcall
and
pop
jmp
jo
jne
int
pop
rcl
mov
xor
ljmp
dec
sub
inc
mov
pop
xchg
scas
test
enter
or
push
cmp
sub
pusha
mov
xchg
fmul
sbb
nop
pushf
xor
hlt
out
cmpb
ss
dec
mov
xor
daa
xor
xchg
pop
jg
push
mov
test
inc
xchg
shlb
pushf
mov
inc
gs
xor
dec
push
or
pop
push
jg
pop
stc
pop
movsl
stos
daa
add
push
std
add
cwtl
lods
gs
jecxz
sub
mov
aaa
adc
mov
ja
call
xor
ljmp
push
or
sub
push
jbe
lock
daa
enter
movsb
or
movsl
dec
xchg
dec
je
xlat
movsl
xchg
es
jecxz
fisttpl
sub
inc
and
addr16
out
mov
sbb
aaa
fimull
aaa
fmul
insl
in
pop
cmp
cwtl
repz
sub
and
into
push
cmp
pop
gs
loop
lahf
add
mov
mov
je
je
pop
icebp
inc
adc
loopne
enter
push
xor
ja
movsl
cmp
cmpsb
dec
inc
xchg
add
adc
cmp
sub
push
cmp
imul
or
jae
or
cmp
xor
mov
lods
shrl
aam
add
adc
xor
push
xchg
dec
or
mov
mov
es
shlb
push
gs
arpl
adc
cmp
iret
ljmp
add
in
add
shlb
cmp
push
dec
cmp
sbb
lahf
gs
sti
rolb
fistps
xchg
mov
mov
int
or
sarl
inc
or
inc
imul
dec
adc
or
jne
push
mov
mov
dec
movsl
popf
shrb
mov
and
xchg
jl
jbe
dec
negb
and
dec
loopne
xor
pop
lcall
mov
les
push
and
daa
mov
dec
pop
cmpb
int
mov
mov
mov
sarl
nop
andps
inc
inc
rcll
scas
cmp
jmp
es
mov
movsl
insl
or
pop
mov
xchg
sub
arpl
sarb
add
xchg
adc
dec
jo
xor
add
mov
mov
jns
xchg
xchg
ret
cmpsb
xlat
in
mov
or
or
pushf
stos
scas
mov
loopne
std
dec
scas
mov
or
aaa
sbb
and
or
jmp
dec
jge
xchg
push
lods
push
imul
pop
cmp
mov
or
mov
xor
add
andl
pusha
scas
hlt
mov
push
pop
fisubrs
out
in
imul
and
mov
mov
jbe
fucomp
adc
mov
fadds
pop
jne
cmp
aam
pushf
jns
ja
adc
repz
jmp
and
jns
mov
shlb
in
pop
pop
cmp
xchg
and
adc
mov
mov
or
fxch
int
jg
inc
dec
pop
xlat
gs
push
aam
and
mov
mov
mov
out
pop
mov
mov
pop
inc
xchg
lds
mov
jno
stc
mov
jnp
fsubrl
dec
jmp
call
adc
jmp
rcrb
je
mov
and
xchg
sahf
sti
int3
cld
ret
push
jecxz
jge
fidivrl
popa
xor
dec
outsb
or
dec
test
mov
lds
aad
repz
mov
mov
mov
dec
xor
add
loope
sti
push
adcl
sub
add
fucomp
dec
pop
sub
popf
mov
dec
mov
jnp
mov
jbe
or
jae
xor
push
std
mov
push
xchg
sub
sub
adc
push
scas
scas
jnp
push
jbe
jge
pop
jge
cwtl
addr16
mov
jmp
enter
xor
pop
xchg
cmp
enter
in
mov
dec
adc
fs
pop
mov
ret
mov
and
xor
stos
lahf
ror
mov
popf
notb
aad
enter
sub
repnz
add
popf
jne
adc
cmp
cmp
adc
fsqrt
ljmp
shrb
cmpsl
adc
lds
mov
and
cmp
xchg
xor
ja
pop
sbb
sbb
add
sti
or
inc
pop
xor
add
mov
xchg
cmp
mov
mov
pop
test
inc
add
fcmovnb
add
adc
sbb
movsb
je
mov
lods
jl
in
outsl
pushl
dec
cmp
xchg
inc
iret
sbb
stos
sbb
cmp
jbe
push
pop
test
sub
xchg
and
mov
stos
les
or
inc
push
mov
fdivs
call
mov
ss
sub
cmpsl
cltd
std
add
lret
shlb
xchg
ja
shlb
push
stos
lahf
cwtl
loope
pusha
fldenv
sar
test
add
repz
cmp
inc
lret
push
sarb
mov
adc
mov
movsb
aad
sub
aaa
xor
jmp
and
idivl
jecxz
neg
xor
ds
test
jmp
mov
mov
out
out
fidivrl
xchg
cli
sub
ss
or
insb
lea
jnp
dec
or
jmp
lahf
sub
mov
in
inc
scas
or
and
lods
dec
push
imul
mov
push
dec
push
fs
jmp
xlat
jge
lcall
push
out
repz
dec
pop
pop
jo
pop
mov
clc
rcrl
mov
filds
jb
aas
sbb
or
or
or
lods
aam
movsl
mov
adc
lret
lods
aaa
ljmp
mov
aam
fdivrl
add
incl
mov
cmp
dec
and
and
adc
lock
das
mov
pop
fsubrs
pop
sbb
movsl
repnz
inc
and
xchg
iret
xchg
add
es
jno
push
sar
push
popa
cltd
out
nop
inc
insl
mov
in
dec
adcb
pop
dec
mov
sti
fs
pusha
fmull
outsl
xor
in
imul
xchg
push
rorl
out
in
rolb
push
cmp
mov
iret
push
sub
mov
pusha
stos
sahf
xchg
sub
mov
fdivs
pop
add
mov
lods
popf
arpl
out
inc
sub
call
cmpsb
mov
pop
iret
push
dec
xor
mov
jnp
inc
jmp
dec
les
xlat
out
add
popf
out
xor
sub
lcall
rorb
shrb
and
andl
mov
enter
xchg
xchg
xlat
pop
mov
cli
pop
sub
stc
fiadds
out
cmp
inc
adc
cmp
movsb
jne
mov
and
xor
movsb
lahf
jae
adc
pop
or
xorl
and
rcrb
aad
jecxz
pushf
dec
push
lret
xor
xchg
inc
outsl
popf
xor
dec
sbb
or
test
into
mov
inc
aad
pop
push
ret
mov
xor
int
pop
nop
inc
dec
outsb
loopne
sub
adc
add
xor
inc
cmpsb
outsb
mov
nop
xchg
ds
xchg
pop
nop
xor
test
pushf
or
mov
orl
dec
mov
mov
mov
sub
shll
jp
lea
inc
fmull
aaa
aad
call
movsb
sti
mov
push
mov
fdivs
imul
push
das
pop
aam
pop
cltd
fildll
and
sbbl
pop
xchg
mov
daa
sub
ds
xrelease
and
pop
pusha
insb
sbb
scas
test
cwtl
pop
aad
dec
scas
aad
cwtl
pusha
pop
or
jo
push
jne
inc
movsb
sbb
out
xor
sbb
mov
sarb
and
aad
add
mov
xchg
sub
xor
and
aas
ficoml
test
mov
fisubrl
andl
repz
xor
xchg
es
test
call
clc
pop
cmp
jecxz
or
push
and
das
mull
loope
adc
sub
loopne
inc
sbb
in
ret
lcall
cli
or
lahf
daa
loope
pop
fdivr
pushw
dec
arpl
mov
loopne
div
and
out
jp
xor
push
stos
mov
ds
nop
sahf
fwait
add
push
xor
mov
xor
rorb
out
mov
pusha
ljmp
add
sub
lcall
sbb
jmp
inc
sub
jle
jmp
icebp
mov
testb
mov
xor
lods
push
xchg
shll
ljmp
sub
push
insl
lds
lea
jle
mov
cmp
mov
pop
insb
mov
mov
ss
fcompl
pop
insb
cltd
adc
stc
pop
or
lds
sbb
out
xor
pop
test
mov
hlt
movsl
xchg
stc
inc
je
aas
test
test
pop
cwtl
out
push
xor
xchg
xchg
addr16
jle
leave
sub
pop
pop
sbbb
pusha
fdivl
mov
test
shrb
andb
and
movlps
fcompl
push
mov
mov
mov
sbb
fistps
mull
test
ljmp
push
sub
lahf
loopne
test
imul
fwait
int3
mov
xor
xor
and
jnp
cmp
jge
xor
sti
bound
inc
xlat
repz
lcall
push
loope
cmp
ficoms
mov
leave
push
jle
push
mov
fimuls
sbb
pop
bound
jg
dec
inc
addr16
xchg
stos
xchg
mov
stos
mov
je
jnp
pushf
or
in
mov
xlat
jecxz
mov
mov
rolb
mov
mov
lods
scas
dec
sub
es
cmp
or
mov
out
jmp
pop
or
ds
insl
and
xchg
lahf
test
mov
push
or
scas
stos
jnp
cltd
fs
call
sbb
fwait
mov
mov
lods
mov
out
inc
push
bound
jne
push
sbb
scas
lahf
push
push
bound
jae
popf
xchg
inc
lret
hlt
out
mov
sbb
sbb
sbb
lcall
push
out
jb
or
adc
adc
cmc
test
push
mov
imul
dec
mov
push
pop
pop
filds
int
nop
push
adc
push
daa
jae
push
pop
inc
outsb
cmpsb
out
rorb
stos
insw
sub
jg
jb
cmp
xor
cmc
mov
inc
lods
add
hlt
int
mov
lret
mov
outsl
pop
out
cltd
ljmp
addr16
aad
cwtl
mov
inc
test
lcall
data16
xchg
loope
xchg
push
ss
imul
mov
gs
mov
lahf
xchg
push
adc
mov
data16
loope
cmp
cmpl
stos
gs
push
add
jo
dec
fimull
or
int3
add
jle
xor
mov
add
outsl
xor
adc
mov
cmp
or
xchg
dec
sbb
mov
adc
xchg
xchg
and
out
cs
jle
in
cmpsl
jo
cmp
movsl
loopne
cmc
leave
notl
mov
fs
push
in
andl
enter
icebp
xchg
jmp
out
mov
add
data16
ljmp
repnz
mov
inc
fimuls
add
sbb
pop
cs
in
mov
hlt
jbe
scas
mov
test
pop
popl
roll
add
enter
lahf
mov
jns
inc
jns
sti
out
xor
push
cmpsl
movsl
lock
lahf
lea
int3
mov
add
imul
fs
outsl
test
test
mov
mov
out
sub
mov
repnz
out
outsl
adc
mov
xchg
inc
xchg
int
sbb
inc
jae
inc
mov
mov
stc
stos
fcoml
cltd
adc
mov
and
fisttps
mov
int3
std
and
dec
jb
bswap
fwait
test
hlt
jb
pop
das
adc
movsl
mov
add
hlt
inc
fcomps
and
push
mov
push
pop
sbb
fs
cmpb
arpl
pushf
lcall
icebp
lahf
cmc
inc
sub
jmp
sub
jle
call
pop
les
jge
sahf
mov
lock
mov
mov
movsl
scas
jnp
fnstcw
pop
inc
jns
cmc
pop
stos
fidivrs
shl
ret
loopne
sub
mov
pop
sub
push
mov
jmp
xchg
jge
loopne
popf
leave
and
add
jne
xor
cmp
jle
or
push
jle
jle
add
fbstp
repz
pop
add
mov
insb
push
adc
xor
inc
inc
repz
inc
jp
movsb
int
cmp
enter
inc
cmp
mov
inc
inc
mov
ljmp
sub
ret
sbb
ret
jg
rol
jne
notb
out
sub
stos
stos
jl
test
adc
leave
mov
stc
or
xor
scas
out
hlt
sub
popa
adc
clc
sbb
pop
jne
mov
pop
lds
cmp
int
into
popa
insl
fucomp
push
scas
test
xlat
push
arpl
push
stos
jl
shl
ljmp
sub
and
mov
bound
imul
inc
pushf
in
push
loop
and
loope
xchg
aas
mov
ja
aam
push
lock
inc
inc
and
jo
inc
rorb
stc
jbe
out
jns
push
leave
sub
jl
xor
jp
out
xchg
fidivl
mov
in
add
adc
je
dec
jo,pn
aad
testl
cmp
popf
sar
lret
insb
test
add
xor
add
fnstcw
mov
and
cs
xchg
sbb
out
ret
cmp
bound
lds
push
mov
mov
dec
in
dec
dec
cmpsb
int3
pop
ds
stos
push
push
mov
loop
scas
es
pop
lods
sbb
push
inc
je
lret
imul
lret
fwait
xchg
aas
adc
adc
rorb
push
fiaddl
mov
adc
dec
mov
adc
inc
xor
lahf
dec
cmp
imul
sub
push
shll
inc
inc
xchg
cmc
cli
cmp
or
ret
adc
scas
dec
xor
dec
xchg
mov
mov
mov
push
adc
jmp
xorl
mov
repnz
mov
int3
mov
or
ret
inc
inc
cmc
ret
cmp
cld
lahf
sbb
adc
or
shll
xlat
ljmp
pop
and
cs
cmp
or
adc
imul
adc
iret
lea
lods
and
mov
pop
nop
adc
ja
fs
mov
adc
dec
loopne
or
jg
jecxz
add
sbb
push
fnstcw
nop
fiadds
xor
fisubrl
push
jno
mov
int
inc
movsb
mov
popa
jecxz
jns
add
orb
add
sarb
adc
in
iret
in
xchg
push
mov
ds
imul
mov
repz
xor
push
es
mov
inc
orb
lahf
movsl
inc
jno
mov
push
xor
jnp
add
inc
jmp
je
decl
jmp
xlat
repnz
jae
jp
xchg
fmull
jns
out
mov
jbe
jg
stc
jle
ljmp
dec
popf
sub
fdivrp
inc
pop
lcall
inc
push
test
dec
dec
enter
out
andl
je
ret
cmp
aad
mov
jns
jns
gs
dec
ret
push
xchg
and
fisubrl
fs
pop
xchg
in
rclb
jbe
repnz
cwtl
xlat
jae
add
adc
mov
sahf
fldl
fs
mov
ficomps
pop
ss
mov
sub
mov
movl
nop
push
ljmp
push
sti
push
pop
fadds
in
adc
push
jl
loope
mov
pop
xchg
shl
pop
cmp
or
xor
cmpsb
mov
ret
xchg
fistpll
pop
push
xor
sahf
inc
mov
mov
hlt
dec
mov
or
push
pop
or
adc
mov
enter
fwait
add
cmc
jno
cmp
lret
xor
add
pop
addr16
mov
xchg
mov
push
jnp
repnz
cmp
add
dec
dec
jp
adc
jg
std
and
iret
mov
dec
mov
push
sub
aas
adc
lcall
xchg
add
mov
cltd
inc
lret
aam
enter
lcall
clc
ss
inc
push
cs
xor
decb
dec
or
add
pusha
test
divb
mov
push
imul
jp
adc
test
sub
and
popl
negb
ljmp
je
jns
inc
mov
outsb
cmp
xlat
lock
repz
popf
fs
or
and
lock
int
xchg
cmp
pusha
dec
enter
pop
inc
lea
pop
sbb
jnp
dec
int3
add
xor
out
jmp
mov
aad
or
cs
add
sub
xchg
sbb
or
ljmp
lds
or
inc
or
mov
mov
into
adc
xor
adcl
lods
hlt
pop
es
pop
jns
in
shll
pop
push
push
outsl
loop
push
xorl
and
clc
test
int3
and
pop
pop
gs
aad
iret
pop
or
jmp
adc
pop
add
into
jge
pop
jno
sbb
test
and
add
lods
fnstcw
or
dec
cltd
cmpl
cmpsb
orb
and
jbe
in
dec
inc
xchg
jno
fnstenv
aam
fwait
imul
jg
or
outsb
sub
aam
scas
out
out
mov
pop
fildl
adc
inc
outsb
lods
iret
mov
adc
inc
jge
sbb
loopne
jecxz
cmp
mov
icebp
sub
pusha
int
sahf
fstpt
xchg
pop
lock
mov
fmull
mov
test
sbb
sub
adcb
dec
add
sub
and
jle
in
fwait
mov
pop
iret
test
sbb
dec
pop
je
dec
mov
mov
out
or
fwait
mov
jno
aaa
aad
lret
inc
dec
aas
and
ds
mov
dec
mov
clc
inc
pop
jo
pop
sbbb
mov
std
mov
xor
aam
xchg
xchg
inc
lea
inc
inc
dec
sbb
adc
and
loope
test
xor
mov
mov
pop
xchg
pop
in
rorl
dec
xor
pop
bound
xchg
sarb
or
out
dec
mov
sub
scas
hlt
popf
rcrb
and
xor
dec
sbb
adc
push
inc
fidivl
mov
inc
push
sub
daa
out
aas
stos
inc
in
inc
lahf
sub
inc
inc
push
jo
jbe
push
mov
xchg
mov
jne
push
xchg
pop
xlat
loope
cs
mov
adc
insb
test
les
stos
adc
add
dec
mov
cltd
mov
jp
jnp
insl
sbb
fldenv
lret
sarl
in
repz
aad
mov
out
repnz
adc
and
test
shl
push
ja
mov
es
lret
or
and
lcall
nop
inc
test
xchg
sahf
addr16
sbb
xchg
in
pop
scas
sbb
fisubl
jnp
ror
add
gs
fisttpl
mov
movsl
push
xlat
and
jns
xlat
or
adc
scas
xor
icebp
dec
lods
mov
js
cmc
sbbb
aaa
icebp
lods
shr
push
popa
das
push
xchg
pop
sbb
and
mov
add
mov
pop
mov
or
mov
cwtl
and
enter
insl
xor
xchg
cmp
mov
fwait
cwtl
jle
sbb
xor
add
xchg
loop
dec
sti
xchg
faddp
lea
push
sbb
jl
cld
push
ror
repz
int
shll
fsubs
dec
jle
cmpsb
fsts
nop
and
fsubl
sub
les
jmp
sbb
jecxz
pop
ja
repz
add
cmp
xchg
cmpb
jp
inc
sbbb
test
repz
jecxz
movsb
iret
mov
dec
fidivl
mov
fstps
cmp
lret
les
jge
into
out
cmpsl
jbe
xchg
add
fistpl
pop
cmp
mov
mov
mov
and
cmpsb
mov
fs
mov
push
enter
inc
push
adc
jge
push
add
xchg
std
pusha
pop
loop
mov
fdivl
sub
lahf
inc
out
stos
stos
xor
pop
jmp
pop
stc
xor
dec
stc
cwtl
pusha
loop
xchg
lahf
mov
pop
cmpsb
aas
sbb
sbb
mov
xchg
enter
dec
jnp
add
insb
out
pop
add
sbb
dec
jmp
xchg
pop
data16
insl
in
mov
out
fistl
sbb
inc
je
lea
outsl
insb
fmuls
fsubrs
icebp
xchg
movsb
pop
and
and
lods
test
dec
xchg
inc
mov
mov
mov
inc
xor
aam
dec
mov
cmp
mov
jmp
and
rcrb
mov
div
leave
mov
fidivl
xchg
sub
leave
lahf
or
out
or
mov
pushf
mov
sarb
mov
mov
ds
xchg
pop
jmp
movzwl
ds
add
dec
cwtl
or
aaa
or
and
xchg
mov
imul
or
mov
xor
outsl
subl
iret
dec
shrl
inc
repz
and
push
or
or
scas
cmp
dec
push
aaa
sbb
dec
fstpl
pop
xchg
fs
pop
lcall
push
sbb
sbb
inc
add
xor
cmc
lret
rclb
jmp
loope
insb
mov
push
cs
or
arpl
frstor
push
sub
pop
outsb
add
ds
outsb
cmp
outsl
sbb
or
xchg
pop
out
push
jge
dec
mov
call
fmull
sarl
lods
jno
or
or
rcll
bound
xor
scas
ds
ffree
in
inc
mov
inc
negl
push
pop
and
cltd
data16
js
sub
sbb
test
pop
nop
add
adc
dec
mov
jmp
addr16
ficoms
jns
iret
jae
lret
and
or
scas
ljmp
dec
pop
loop
enter
rcr
orl
inc
adc
or
out
call
js
push
sbb
in
cwtl
cmp
gs
in
add
leave
xchg
daa
ret
dec
pop
cmp
push
or
addr16
popa
jge
mov
pop
movsl
sub
mov
cld
push
mov
sahf
arpl
dec
fcomps
push
dec
shll
push
xlat
pop
daa
pop
mov
test
push
cmp
jle
xchg
push
movsl
ss
cltd
push
add
sarb
pop
pop
fs
inc
roll
out
out
mov
insl
jo
push
adc
sbb
adc
outsb
mov
xchg
aaa
or
aaa
sbb
popf
xor
int3
lods
sti
sbbb
jb
or
pop
mov
test
dec
push
int
cltd
outsb
mov
loope
pop
add
pop
int
in
dec
sbb
pop
sub
pop
push
cs
dec
pcmpeqd
jbe
xchg
cltd
mov
add
test
adc
pop
cld
mov
fs
sahf
ds
mov
mov
mov
out
andl
xchg
movsl
push
sub
mov
cli
push
test
repz
sub
rorl
movsb
cmp
inc
dec
aad
sbb
cmpsl
inc
mov
adc
adc
jb
pop
or
pop
iret
dec
lahf
out
mov
push
lods
sbb
sti
dec
js
cmp
call
mov
das
repz
push
aaa
fldl
push
mov
or
jb
cmp
shlb
mov
test
in
cmc
sbb
fs
mov
cmp
fldenv
xor
fwait
push
jecxz
leave
int3
lock
cmp
orl
or
or
shll
jle
push
adc
insl
adc
testb
jge
cmp
out
mov
out
sub
pop
insb
ret
or
rolb
out
lahf
insl
movsb
insl
xor
mov
inc
mov
je
in
jbe
aas
mov
test
imul
push
pop
loopne
negb
lret
jle
lea
xor
xchg
xchg
scas
jmp
std
mov
aad
or
mov
fwait
je
fildll
sahf
mov
out
fs
pop
and
ficompl
sti
cmp
inc
jbe
les
jno
or
xor
iret
adc
jg
xor
xor
mov
jo
outsl
xchg
ds
and
test
ja
test
iret
test
push
cmpsb
lods
out
loopne
movl
jb
das
adc
xor
cld
sub
nopl
in
push
mov
push
adc
movsb
andb
adc
ljmp
jl
jno
sub
mov
jne,pn
enter
jnp
mov
icebp
aaa
jb
sbb
pop
push
and
xchg
sub
enter
add
nop
mov
imul
daa
mov
in
adc
mov
push
stc
mov
pop
sti
cli
dec
enter
fs
dec
fcoml
jbe
mov
jge
mov
fadds
lret
arpl
outsl
shrl
inc
ss
sub
dec
mov
imul
or
iret
mov
mov
repnz
fnstenv
scas
push
adc
adc
lds
mov
sub
repnz
fdivl
push
cmpl
imul
xchg
inc
push
cmp
jae
inc
in
jno
insl
xor
gs
mov
out
push
test
ljmp
mov
mov
xor
jge
test
rclb
mov
in
dec
or
dec
fisubl
sub
test
sub
adc
mov
pop
inc
icebp
cmpsb
pusha
jb
lret
into
aam
nop
lods
int3
sub
mov
push
dec
pusha
sub
scas
xor
loopne
sti
pushf
or
xor
lods
mov
imul
inc
xchg
pop
rorb
sbb
sub
sbb
mov
push
insb
xorb
aad
mov
dec
adcb
shl
mov
ja
adc
pop
jl
in
leave
sarb
add
jae
aad
add
adc
mov
test
sbb
xchg
cmp
stc
repz
xchg
test
into
popa
fcmovbe
mov
or
mov
jno
jne
cmp
fwait
mov
mov
mov
in
decl
mov
add
or
mov
dec
and
shl
pop
shll
adc
mov
xorb
out
dec
mov
fnstcw
xchg
mov
jb
ljmp
sbb
loopne
pop
sahf
testb
aaa
insl
movsb
mov
in
iret
imul
dec
lea
adcl
insb
cwtl
aad
gs
push
mov
xor
stos
xor
fwait
lahf
adc
adc
add
js
and
xor
and
and
push
leave
lods
loop
dec
mov
push
lcall
sbb
jg
ret
mov
push
add
lcall
testb
repz
xor
and
pop
daa
mov
int
xor
push
mov
pop
stc
pop
mov
adc
cmpb
ds
fcomi
call
aad
ds
add
or
rcrl
icebp
fdivr
inc
mov
mov
xor
imul
mov
stos
mov
push
add
dec
cmp
rorl
pop
and
mov
or
dec
stos
bound
pop
sbb
adc
not
push
dec
mov
add
xor
insb
dec
faddp
xchg
xor
add
mov
push
mov
jne
sub
cs
xchg
call
rclb
or
das
jnp
fistpl
jge
cmp
jae
outsb
outsl
add
orb
mov
arpl
mov
jbe
dec
add
sbb
xorb
xor
jle
inc
jle
data16
call
push
aaa
sahf
and
xor
movsb
popf
cwtl
pop
std
shlb
aaa
xchg
das
push
jge
mov
xor
dec
inc
enter
call
adc
adc
push
dec
test
adc
pop
stc
jns
or
fdivrp
shlb
cltd
lock
mov
mov
scas
or
pop
outsb
mov
push
pop
in
cwtl
ljmp
cmc
dec
push
add
cli
cmp
push
scas
push
inc
adc
repnz
mov
cmp
cmpsl
daa
fstl
dec
sti
fnstenv
mov
xchg
mov
insl
pop
movsb
mov
sti
pop
mov
mov
sub
test
mov
movsb
rcrb
pop
mov
fsubr
adc
ret
out
loopne
ficoml
mull
pop
out
add
sbb
add
add
mov
and
push
inc
adc
andb
pop
pop
mov
sbb
inc
stos
adc
sbb
sbb
cmpsl
xor
mov
lock
call
pop
cmc
loopne
or
aam
jb
fcmovne
insl
cmp
divb
xchg
fwait
jb
ja
sbb
push
push
pop
sti
adc
add
or
bound
outsb
roll
jns
dec
mov
xchg
dec
sti
gs
rorb
lret
xchg
dec
mov
sbb
lea
push
ds
inc
dec
mov
dec
in
lods
cmp
pop
mov
fidivrl
push
adc
push
dec
setbe
push
hlt
pop
mov
push
xchg
daa
test
stc
mov
cmp
out
pusha
subl
mov
pop
jnp
jp
rolb
or
xor
setae
push
xchg
lock
cmp
pop
les
adc
in
inc
xor
testb
iret
xor
out
loope
pop
xchg
fimull
push
cmpsl
stos
jle
cwtl
mov
dec
xchg
or
dec
bound
pop
insb
test
pushf
clc
ret
leave
lds
or
enter
cmpxchg
mov
xlat
cld
call
xlat
loop
xor
cli
aam
mov
rclb
loope
mov
loopne
aaa
and
mov
pop
cmpsl
ss
or
xchg
push
push
cmp
lret
mov
jmp
sub
inc
cmpsl
clc
mov
dec
fisubl
lods
shrb
mov
xlat
dec
shlb
mov
clc
cmp
ret
sub
icebp
daa
enter
jno
dec
push
inc
inc
cmp
les
int3
fadd
incb
clc
mov
mov
mov
divps
mov
nop
inc
mov
xchg
mov
push
arpl
fbstp
xchg
xchg
jo
dec
in
jecxz
jns
daa
aaa
cli
mov
sahf
inc
inc
in
shl
fadds
jnp
sbb
scas
into
lods
pop
inc
or
aam
add
fidivrs
insl
insb
je
es
xor
lods
cmpb
cmp
test
push
inc
dec
mov
sub
out
cmp
or
or
rorb
jno
fs
sti
movsb
sti
adc
dec
or
fs
push
pop
mov
adc
jge
je
lods
clc
dec
push
xchg
push
lods
push
or
lds
cmc
sub
cmp
aaa
iret
leave
jo
mov
aad
pop
aaa
push
scas
sahf
lret
push
xor
xchg
jl
xchg
xor
sub
xor
adc
xchg
xor
push
lods
mov
fcmovne
clc
adc
pop
jmp
lret
aad
std
adc
subl
pop
sti
es
inc
jle
mov
xor
lcall
fsincos
cmpsl
adc
cwtl
xor
bnd
adc
and
jbe
cmpsl
das
jns
jb
arpl
push
or
fstp
popa
nop
bound
jnp
insb
mov
loope
loope
xor
sub
fldcw
pop
dec
out
inc
in
aas
mov
pop
dec
mov
mull
sarb
xlat
aaa
fldl
lock
out
popa
lods
xchg
roll
stc
xchg
or
shl
jnp
xor
fs
popa
inc
mov
pusha
jnp
cmp
mov
mov
inc
mov
push
push
xorb
mov
pusha
data16
outsl
inc
xchg
pop
lcall
loop
xchg
dec
cs
mov
fs
addr16
xchg
pop
inc
dec
xlat
test
or
adc
clc
jb
fbstp
or
nop
xchg
xlat
pop
mov
jg
sbb
lods
test
popa
mov
mov
push
and
fidivl
pushf
jg
mov
mov
mov
outsb
jo
jp
add
sbb
mov
pop
mov
xor
loope
push
xor
cltd
pop
in
mov
jecxz
clc
fnstenv
sbb
inc
nop
and
scas
mov
push
out
xchg
jnp
repz
or
mov
stos
mov
cs
lds
jg
dec
jge
jecxz
and
jns
fstp
faddl
xchg
lret
lcall
daa
repnz
insb
loopne
jmp
mov
sbb
dec
sahf
cmp
or
cwtl
clc
pop
pop
mov
imul
cs
jae
movsl
xor
sbb
mov
sub
sbb
out
loopne
sub
jge
or
ljmp
pop
inc
jmp
sbb
test
pushf
stc
inc
sub
pop
fildll
sub
daa
lret
aas
xor
sbb
mov
pop
jecxz
je
daa
std
movb
outsb
push
out
inc
ret
in
sub
xchg
bound
cmp
insb
pop
and
sbb
movsb
pop
xor
cwtl
sbb
jmp
rcrb
adc
jg
int
jl
sbb
lea
aas
add
daa
xchg
pop
pop
roll
sub
mov
sbb
xchg
and
pop
test
adc
adc
push
lahf
xchg
pop
nop
sub
xor
loop
mov
cmp
mov
nop
cld
rcll
pop
shll
leave
add
jb
addl
mov
mov
popa
pop
and
ret
xor
add
add
sub
xor
sarb
pushf
mov
aas
or
and
jecxz
jecxz
lods
or
and
or
mov
sbb
cmc
push
mov
sub
dec
dec
xchg
push
and
add
repz
imulb
imulb
ds
lahf
pop
rclb
out
mov
sub
sbb
out
gs
jbe
imul
xchg
outsb
mov
nop
cmp
jns
inc
fisubl
mov
sbb
jecxz
push
or
movsl
aas
cmp
mov
ficoml
scas
lods
aaa
in
push
mov
dec
mov
mov
fbstp
inc
lds
dec
cmp
test
sub
push
or
cmp
dec
jmp
loop
in
jnp
sub
rcll
lods
and
jle
dec
outsl
sub
imul
ds
push
aam
sbbb
pop
cli
or
aam
add
leave
adc
xchg
call
push
xchg
mov
xchg
mov
cmp
inc
cmp
lods
fadds
push
and
mov
push
pop
fldenv
mov
jmp
cli
cmp
push
test
imul
idiv
jno
mov
inc
mov
lods
sub
out
hlt
jmp
jnp
dec
out
pop
ret
adc
jo
cmp
mov
mov
mov
or
test
outsb
cmpsl
test
nop
or
sbb
mov
sub
add
sub
add
jp
out
cmp
push
mov
and
insb
jbe
fidivrs
push
sub
xor
in
lea
in
add
sub
leave
add
pop
pop
mov
xor
std
and
test
pop
lods
dec
inc
lahf
adc
loopne
mov
mov
mov
sbb
pop
popf
xchg
sbb
mov
xchg
movb
sub
ror
pop
xchg
cmp
outsb
push
jne
in
loopne
mov
push
mov
xchg
fwait
imul
and
lods
add
jecxz
scas
pop
cmp
sub
movsb
iret
jns
xor
adc
aad
adcl
jecxz
nop
adc
cmp
jno
xor
push
mov
xor
jbe
mov
int3
ja
add
mov
or
lcall
push
les
leave
fmull
xlat
scas
imul
jle
or
push
sbbl
xchg
popa
mov
pop
cmpsl
inc
jae
out
lea
pop
sbb
imul
sahf
and
xor
jae
leave
mov
push
leave
filds
pop
imul
fwait
lods
dec
xchg
call
xchg
adc
inc
arpl
ret
in
int3
mov
dec
mov
jmp
cmpsb
ret
or
bound
xor
rclb
adc
sub
mov
pop
insb
and
pop
xchg
in
test
popf
andb
ja
clc
sub
cmp
roll
in
or
mov
int3
pop
push
jbe
sub
or
dec
pop
mov
mov
sub
insl
out
push
jo
push
cs
lds
mov
das
adcb
ljmp
mov
sub
aad
inc
dec
les
push
dec
mov
inc
aam
push
push
or
divl
push
movsb
das
and
cmp
push
filds
or
cmp
scas
shll
sbb
sbb
test
or
stos
out
mov
xlat
pop
mov
xchg
imul
jl
sub
xor
fcomps
icebp
dec
and
testl
je
rol
dec
dec
insl
pop
xchg
adc
sub
sub
je
pop
mov
lock
dec
and
popf
imul
fsts
clc
andb
std
xor
int3
pop
push
mov
mov
and
mov
scas
inc
adc
xchg
jge
in
pop
out
lods
pop
repnz
mov
mov
loop
pop
scas
lret
imul
adc
inc
popf
loop
inc
inc
aas
loope
stc
jo
stos
adc
movsl
sbb
mov
call
imul
or
push
nop
mov
test
push
push
mov
adc
jmp
es
ret
lret
and
fdivs
and
cwtl
leave
in
popa
test
xchg
sti
mov
lock
cmp
int3
inc
aas
cmp
push
gs
jne
ficompl
push
cmp
stos
popa
sbb
mov
xor
adc
cmp
inc
dec
ret
jl
sbb
mov
lds
loop
or
mov
in
or
xchg
movsl
mov
sub
xor
movsb
out
stos
lcall
mov
mov
stos
lods
push
mov
call
or
mov
and
idivl
ljmp
push
sbb
add
fsub
imul
test
cwtl
add
gs
cmc
fnstcw
mov
jle
push
adc
jp
pop
cs
mov
pop
es
pop
lcall
mov
popf
and
pop
ljmp
mov
roll
fnstcw
in
in
int3
inc
aad
gs
out
jae
pop
push
mov
mov
cmp
jmp
jmp
sub
push
inc
inc
cmpsl
inc
xrelease
mov
xchg
xchg
push
bnd
push
and
iret
mov
in
adc
mov
mov
into
fcomp
enter
mov
movsl
jmp
push
jns
adc
mov
int
std
lods
mov
out
mov
sbb
rclb
jecxz
push
cmpsl
lret
je
xor
adcb
xlat
dec
mov
sub
lods
les
mov
int
rcrl
into
clc
xchg
sbb
cmp
pop
jge
ljmp
inc
cs
jle
xchg
cmpsb
xchg
cmp
in
sbb
lret
je
jo
sbb
loop
fwait
mov
xor
push
jbe
lods
xchg
add
mov
leave
push
orl
cwtl
cmp
orl
cmp
jnp
mov
icebp
ret
insb
xchg
dec
mov
pop
xchg
mov
push
arpl
enter
pop
gs
xor
out
sub
das
out
cld
xchg
push
ror
mov
sub
popa
jno
xor
jb
mov
xor
pop
cmc
xlat
std
lds
cmp
mov
arpl
xor
aaa
mov
or
sbb
in
fyl2x
popa
in
jecxz
pop
xchg
ljmp
js
sarl
push
mov
mov
pusha
mov
jns
jp
and
dec
ds
push
loop
adc
or
das
mov
mov
xchg
cmpsb
mov
in
or
dec
fnsave
cltd
pop
lds
pop
push
xlat
dec
inc
fwait
pop
cmp
movsb
fdivrl
push
cli
into
es
sub
xchg
mov
sbb
mov
add
outsb
dec
cs
dec
imul
or
loope
xchg
imull
shll
sbb
push
aam
dec
ljmp
mov
fisubrl
ret
shr
cmp
insl
fists
jge
clc
leave
pop
ljmp
xchg
mov
push
pop
xchg
jle
arpl
fidivs
clc
cmpsb
cmp
push
imull
sbb
push
mov
lods
and
xchg
xchg
in
out
xor
ljmp
test
movsb
bound
push
fnstcw
repz
arpl
jl
xchg
dec
pop
les
pop
mov
dec
push
sbb
xor
push
cmpsb
xor
dec
in
adc
or
das
into
lods
call
out
aam
adc
mov
lcall
mov
xchg
cli
inc
inc
popa
adc
mov
xchg
orl
addr16
xor
adc
cmp
dec
or
movsb
cmp
mov
inc
sub
or
cld
stos
sbb
xchg
bound
pop
sarl
jge
lcall
xor
inc
dec
insl
out
ljmp
adc
xor
jp
insl
lock
std
mov
das
pushl
sbb
mov
outsb
stos
imul
pop
and
sub
imull
mov
test
cs
pop
xorl
adc
hlt
in
add
mov
pop
or
lea
mov
sahf
pop
and
push
xlat
and
xchg
jp
or
sbb
xchg
pop
fucomi
add
jae
rorl
sub
adc
jno
mov
dec
idiv
aad
rclb
mov
iret
fidivrs
dec
sub
adc
gs
jo
mov
push
and
push
in
decl
ret
cwtl
jp
xchg
add
mov
movsb
cmpsl
cld
sub
mov
cmp
jne
mov
leave
inc
cs
cmc
fists
stc
lret
setp
int3
xor
inc
jne
in
push
sbb
jbe,pt
pop
dec
popf
int3
aaa
dec
ret
sub
cmc
test
and
ret
aad
fiadds
cmpsb
mov
and
jo
adc
stos
or
inc
mov
loopne
push
mov
scas
xor
xlat
push
push
daa
adc
pop
xlat
adc
fwait
es
pop
xchg
and
dec
mov
push
sbb
rdpmc
arpl
int3
in
mov
dec
jmp
rcrl
out
and
lock
cmp
das
sub
lahf
stos
lods
icebp
shrb
sbb
out
cmp
pop
jge
sti
scas
mov
arpl
lock
mov
xchg
mov
jge
push
and
push
in
hlt
add
mov
shrb
push
xor
hlt
ret
mov
pop
pop
lock
fcomps
mov
sub
sahf
pop
inc
imul
pop
inc
mov
cmp
xor
rcr
adc
lods
push
pop
pop
mov
inc
adc
scas
pop
mov
or
cmp
jg
cmc
repnz
enter
xchg
push
repnz
mov
imull
hlt
jmp
cmp
xor
bound
xchg
add
sbb
jnp
in
testl
adc
out
outsb
out
dec
movsl
push
mov
cmp
lret
in
sub
imul
sub
xor
fwait
call
dec
pop
repz
stos
into
jno
mov
lea
cld
ret
jne
pop
push
jp
loope
or
iret
movsb
or
jg
inc
inc
xchg
jno
ret
jg
jl
and
mov
sub
mov
jo
pop
push
push
sarb
jle
mov
sbb
popl
popf
rcrl
fld
and
xor
or
and
fwait
jge
fisubrs
aaa
out
push
arpl
int3
xor
jmp
or
lcall
xchg
aas
les
les
jne
xor
and
mov
pop
jecxz
mov
mov
stos
cld
mov
movsl
jg
arpl
jno
pop
inc
lock
jbe
shl
jp
jno
inc
xor
in
adc
aam
mov
test
sbb
aaa
adc
or
mov
pop
out
fcomp
sub
aaa
xchg
cmpsl
imul
pop
xchg
imulb
adc
xor
aam
xacquire
sub
clc
adc
loope
xor
jmp
insl
xchg
subb
lock
stc
jecxz
sub
xchg
daa
xchg
pop
and
stos
mov
in
stos
cmpsb
push
push
repz
jne
cwtl
cmp
jmp
xor
mov
add
jmp
jns
mov
pop
cmp
sbb
jge
cmp
pop
jae
repz
xor
dec
inc
add
test
jns
ret
jne
push
jmp
xlat
ljmp
rorb
aad
std
test
addr16
ljmp
add
and
push
int3
and
jnp
lds
jp
jbe
pop
push
addr16
push
and
in
rcrb
clc
mov
jne
mov
lcall
push
lock
dec
jge
inc
and
ret
xor
mov
icebp
jmp
jl
inc
xchg
sbb
iret
nop
push
in
mov
dec
mov
insb
lret
adc
pop
stc
sbb
nop
xchg
xchg
xor
add
add
jg
adc
add
cmp
aam
lcall
sub
mov
jb
jle
mov
xor
dec
or
js
das
imul
mov
rcrl
push
mov
pop
test
sbb
dec
movsb
imul
ljmp
jp
mov
dec
jecxz
mov
sbb
imul
test
out
fs
aaa
mov
inc
icebp
shrl
shl
mov
pop
jg
sti
es
pushl
xor
jae
dec
jl
data16
ficoms
mov
loop
push
lahf
sbb
lods
adc
and
push
cmpsb
jno
jmp
fwait
lcall
loopne
out
mull
mov
test
loope
add
cmpsl
mov
cmp
and
mov
sbb
movsl
add
jmp
fwait
add
test
sub
cmpsb
outsl
xor
cmp
loope
xchg
mov
dec
movsb
out
loop
lcall
adc
inc
xchg
or
test
rorb
push
mov
jle
xor
test
repnz
mov
mov
sub
ret
lret
pop
push
xor
jmp
mov
aaa
cs
in
or
dec
loop
ds
mov
or
inc
jne
sub
pusha
sub
push
sbb
stos
shrb
aas
push
xchg
push
decb
push
repz
pop
add
sub
je
loope
enter
popa
pop
negb
in
jg
jle
pop
push
pushf
stos
push
push
xor
add
dec
adc
dec
insl
mov
xchg
mov
in
movsb
in
or
cmpsb
lods
inc
xor
movsl
jmp
repnz
add
pop
stos
xor
loopne
inc
outsb
pop
or
cmp
push
fistl
mov
dec
jno
sub
aam
sbb
mov
into
xor
sub
loopne
push
stos
dec
jg
sbb
add
andl
xchg
addr16
jno
into
push
iret
inc
dec
push
call
cmpsl
adc
push
cmpsl
jne
mov
mov
pop
ljmp
test
mov
cmc
popa
test
cmc
scas
push
sbbb
int
push
add
push
sub
push
cmp
aam
cmpsb
inc
std
mov
loop
sub
xor
ret
jnp
xchg
shll
lcall
cmp
xlat
dec
fsubrl
test
in
mov
adc
inc
and
jns
popaw
or
out
es
repz
testb
mov
imul
shlb
iret
fisttpl
fadd
xchg
cmpl
dec
cmp
enter
pop
fcomip
ficompl
pop
xchg
popa
lahf
and
and
xchg
jle
in
movsb
sbb
push
lret
xlat
mov
xorb
sarb
xlat
mov
loop
inc
add
mov
mov
sti
repnz
fildll
xchg
sti
push
pop
stos
mov
pop
fst
subb
pop
test
ds
mov
dec
xor
in
das
roll
fs
into
mov
sbb
ret
cltd
mov
push
in
jp
and
cmp
aam
mov
idivb
jmp
jbe
adc
gs
mov
or
add
scas
mov
addr16
inc
dec
dec
xor
xchg
lock
mov
movsl
adc
fidivrl
idiv
and
jbe
rol
popa
cmp
cltd
and
sbb
daa
sub
dec
jne
push
pop
sti
aad
pop
in
mov
call
pop
mov
into
aas
push
xchg
hlt
stos
sbb
aad
mov
scas
arpl
push
pop
jle
movl
in
aaa
aas
xchg
xchg
pop
movsb
sahf
cmpsl
shll
aad
jle
sbb
dec
xchg
dec
in
push
js
xchg
ret
sub
adc
mov
and
inc
sub
cmp
pop
aam
aad
pop
jb
mov
dec
jmp
sbb
ror
nop
mov
sbb
mov
ja
out
xor
sbb
xchg
stos
sahf
cmpsb
int
shl
movq
dec
lods
sbb
xchg
add
sbb
sbb
test
addr16
mov
rolb
insl
xchg
test
and
push
push
lds
out
sbb
sub
cld
aas
xor
jns
daa
sbb
inc
or
xor
test
jmp
cmpb
aaa
loope
push
pop
and
aad
aaa
lods
arpl
loop
je
mov
ds
mov
sub
cmovb
or
std
pusha
in
or
mov
cmp
jmp
mov
sub
sbbb
mov
xor
neg
push
sbb
cmp
mov
jne
das
push
cmpsb
repz
lret
sub
cmp
adc
adc
aaa
fs
inc
lods
mov
sub
pop
stc
xor
fistpll
inc
in
jae
mov
mov
xchg
lret
adc
add
fwait
xchg
daa
jl
xor
mov
sbb
arpl
int
cmp
shlb
inc
xchg
int
mov
fistps
idivl
add
or
pop
adc
loopne
rclb
mov
int
loop
fs
ljmp
mov
pop
push
mov
and
lcall
fidivs
enter
pop
dec
mov
mov
push
sbb
xchg
mov
sbb
stos
out
xor
jp
pusha
mov
dec
das
jmp
lret
add
out
and
data16
push
mov
dec
pop
movl
fistl
push
std
dec
add
loope
lret
ret
in
push
sub
cmc
mov
mov
testl
push
pop
xor
lahf
outsb
fsubr
or
cmp
xchg
push
push
xchg
call
inc
js
push
insb
int
das
movsb
jne
cmp
sub
int
movsl
inc
mov
mov
and
and
mov
pusha
pop
xchg
mov
je,pt
xor
inc
call
push
pop
and
sahf
mov
push
pusha
fimuls
xchg
movsb
sti
std
cmp
pop
xchg
sub
push
mov
int
sub
mov
icebp
pusha
stos
adc
cmp
cmpl
or
mov
mov
loopne
dec
xchg
fiadds
shlb
fsubrl
mov
sbb
mov
sarb
imul
push
sbb
ret
inc
in
cli
xlat
or
xchg
in
cmp
pop
call
in
scas
xor
xchg
mov
xchg
dec
icebp
pop
sbb
jmp
jecxz
sub
sbb
push
jb
pop
pop
lret
push
mov
popa
xchg
push
shrb
add
xchg
das
mov
mov
inc
in
enter
iret
scas
add
fwait
mov
push
push
cmp
xchg
sti
aad
or
movntq
incb
sbb
test
jno
jmp
inc
idivl
out
sub
jmp
lock
jns
insl
xchg
adc
sub
out
or
in
jmp
ret
mov
jmp
xorb
add
pop
sbb
popf
jne
sub
pusha
imul
fnstenv
std
lret
cmpsl
rolb
or
pop
in
icebp
push
mov
push
into
cmpsl
add
out
xorb
add
adc
xchg
add
jge
shlb
gs
aad
jno
in
mov
jg
lret
mov
lcall
push
test
and
jnp
lods
jl
loope
sub
cwtl
sub
sub
pop
and
int3
xchg
notb
xor
xchg
sbb
stc
arpl
arpl
jb
ds
pushl
jp
daa
aas
stos
xlat
push
pushf
in
sub
xchg
dec
pop
out
sub
movsb
push
int
loope
xor
ljmp
adc
ljmp
cmpsl
pop
push
xchg
andl
or
dec
in
xchg
jecxz
in
mov
aas
or
jmp
fs
vcvtdq2pd
inc
hlt
or
nop
or
out
adc
cmp
mov
aas
sub
mov
dec
cld
pop
lret
adc
mov
aas
xorl
pop
rcrb
mov
stos
idivb
jecxz
and
adcb
sahf
lock
xchg
dec
rolb
das
adc
dec
aam
outsb
sbb
or
int
fldenv
mov
notb
addb
out
jg
jae
sbbl
sti
iret
clc
imul
dec
sub
mov
sti
lret
shr
jge
jle
movsb
mov
push
subb
sub
test
and
xor
cwtl
mov
push
ret
and
bound
ds
lds
idivl
sub
pop
cmpsl
jmp
pop
in
sbb
push
repz
fists
jo
pushf
sbb
enter
int
stc
lret
in
pusha
fisttps
pop
or
das
push
inc
add
bound
cltd
stos
cmp
push
fsubl
xor
fiaddl
and
addr16
push
lahf
jp
int
jle
cmp
pop
mov
mov
bswap
push
dec
push
pop
fldenv
cmp
mov
pop
xchg
and
pop
daa
insb
pusha
lock
in
mov
jg
push
jae
stc
sbb
je
call
out
popa
inc
lcall
add
in
and
jnp
test
or
cltd
pop
jb
mov
sub
jbe
cld
xor
ret
loop
mov
mov
push
outsb
fistpl
fucom
dec
scas
lds
out
push
hlt
adc
mov
inc
jnp
pop
test
cmp
add
or
mov
in
add
sbb
arpl
pop
inc
dec
in
stc
mov
lods
and
leave
inc
push
and
insb
arpl
dec
sbb
pop
int3
jno
cmpb
and
imul
lret
dec
movsb
cmpsl
mov
cmp
repnz
cmp
loop
dec
cmpsl
popl
and
call
cltd
inc
int3
outsb
jmp
out
ja
or
ret
lea
pop
ss
or
sbb
add
into
add
pop
outsl
cwtl
punpckhbw
scas
scas
inc
int
or
push
mov
je
or
popa
cli
ds
jns
sahf
arpl
popf
push
in
ret
jno
ljmp
mov
negl
or
dec
jge
mov
push
incl
clc
jp
add
adc
movsl
setl
leave
cs
inc
fimuls
mov
bound
rorb
push
mov
push
mov
int
inc
inc
imul
popa
adc
jae
mov
mov
mov
dec
insl
push
fmuls
cmp
jl
cli
jle
test
pop
test
pop
scas
daa
xchg
flds
hlt
xchg
nop
std
aas
sub
dec
fcomip
shrb
sub
aam
pop
mov
pop
cld
jmp
aas
and
mov
aad
movsl
or
loopne
mov
adc
mov
bound
jl
fimull
or
dec
inc
mov
ds
fwait
cli
pushf
int3
push
cmp
aaa
mov
les
jae
in
pop
divl
pop
mov
mov
xorb
sub
nop
stos
ljmp
and
push
aad
inc
int3
dec
movsl
int
pop
jne
xchg
jne
popf
leave
test
cmc
adc
inc
outsb
mov
stos
mov
pop
dec
test
mov
cmp
or
jecxz
icebp
je
pop
sahf
ja
push
decb
and
pop
nop
or
mov
adc
nop
dec
sub
pop
mov
leave
les
inc
and
mov
cmpsb
sbbb
and
repz
orb
push
popf
dec
cmp
sub
ja
add
scas
roll
stc
dec
adc
sbb
loope
push
xchg
jp
add
push
xchg
dec
jp
sub
clc
aad
lea
xchg
sbb
stos
test
fld
test
popl
or
leave
mov
mov
pusha
inc
dec
cmp
das
lds
sti
fdivrs
xor
mov
bound
cmpsl
fs
mov
dec
or
fstps
dec
mov
roll
mov
fwait
cmpsl
push
orl
dec
cmp
push
nop
jp
data16
lret
or
sub
je
add
xor
inc
aam
mov
ds
fiadds
std
inc
or
mov
adcb
sbb
ret
mov
dec
int
test
push
adc
cmp
sub
jne
sub
cmp
ss
in
ss
ret
inc
xlat
bound
shrl
mov
loopne
jmp
sbb
push
dec
xchg
xchg
dec
cmp
mov
ret
xor
lock
xchg
cmp
inc
dec
sub
aaa
push
jmp
mov
inc
fcomps
sahf
jo
je
mov
mov
jp
pop
xchg
jnp
pop
adc
div
movsl
enter
fwait
mov
sub
stos
mov
push
neg
movsb
pop
int3
repz
pop
add
int
jb
dec
ret
scas
cmpsl
fdivl
push
fmuls
inc
adc
cmp
rcrl
sarl
mov
cmp
andb
in
incb
into
dec
addr16
pop
insb
pop
out
mov
xor
and
mov
popf
jge
inc
xchg
push
adc
sub
into
xlat
adc
sarl
rclb
stos
add
popa
int3
loope
sbb
xor
push
cli
inc
stc
lret
das
or
push
fists
aaa
leave
ret
iret
add
add
mov
push
loop
sarb
int
loop
mov
cmp
stos
ret
imul
or
xchg
movsl
sub
lods
faddl
mull
sbb
test
xchg
and
pushf
lods
pop
leave
and
and
inc
inc
imul
jmp
fmul
dec
push
mov
and
sub
jge
rorb
shrb
mov
jge
dec
jne
cmc
jl
ss
int
mov
out
mov
sti
push
lds
cmp
mov
xchg
and
mov
nop
pop
sbb
mov
ret
pushf
jbe
notb
mov
jae
or
mov
and
es
add
xchg
xor
repz
or
or
add
fistl
jle
push
pop
pushw
cmpsl
hlt
mov
fildl
pop
mov
add
int
scas
bound
sar
cmp
in
mov
out
dec
mov
xchg
inc
and
or
add
push
sbb
xchg
cmp
arpl
popf
jmp
fwait
ds
xchg
sub
lret
outsl
mov
jge
sub
lahf
test
mov
jg
mov
xchg
movsb
lods
stos
pop
mov
sub
repz
or
push
frstor
sti
adc
fisttpll
loopne
sub
insl
cld
xor
push
lea
inc
pcmpgtw
mov
outsl
vpunpckhbw
lret
inc
loop
mov
aad
shll
repz
repnz
push
rcll
sahf
xchg
push
jo
adc
nop
push
fucomp
and
cmp
lahf
dec
inc
aas
sub
addr16
cmp
mov
push
xor
pop
fcomps
insb
mov
pusha
push
adc
mulb
and
fdivs
add
pop
clc
pop
roll
ffree
out
xor
xor
cltd
mov
shll
push
jbe
dec
or
or
test
inc
mov
xlat
je
fld
xlat
sbbb
insl
mov
test
rorl
inc
stos
dec
outsl
in
or
cli
cmpsb
ja
dec
aam
dec
cmpsl
insb
jnp
adc
mov
push
cmp
xor
int
or
xlat
and
movsb
ss
stos
popa
mov
pop
mov
scas
les
lret
xor
jne
add
lret
xor
xchg
imul
cmpb
xor
pop
inc
imul
add
sbb
xlat
pusha
ljmp
jo
mov
movsb
aas
mov
int
pop
pop
inc
test
pop
adc
mov
mov
and
icebp
xchg
ja
repz
les
sub
scas
rorl
jnp
pop
jp
cld
adc
pop
jmp
out
xor
test
shl
sbb
dec
mov
mul
jge
dec
and
leave
jns
push
mov
sub
sub
push
js
out
dec
loope
aad
mov
mov
cld
xor
mov
adc
jb
or
es
jbe
xchg
cltd
cwtl
push
pop
jl
repnz
sub
mov
leave
jg
insb
call
xor
jae
xor
in
aad
xchg
outsb
and
xchg
hlt
inc
fistps
sbb
out
jecxz
scas
adc
mov
imul
sbb
rorb
arpl
xchg
xchg
stos
in
mov
push
xchg
or
sub
pop
sbb
push
xchg
pop
lret
fsubrs
insb
mov
mov
add
daa
test
sub
pop
pop
and
push
fistl
cmp
aad
push
mov
inc
shll
sarb
jne
outsl
add
rol
js
jb
je
je
jp
dec
dec
movsb
cld
daa
aaa
in
pusha
xor
repz
xlat
mov
push
pop
dec
int
mov
repnz
ret
mov
scas
mov
rcrl
jmp
cmp
cmp
les
fidivl
shll
dec
inc
dec
xchg
mulb
push
aad
and
rorb
out
add
hlt
pop
jp
inc
cmpsl
lret
inc
inc
mov
inc
adc
aad
pop
pop
je
sahf
mov
mov
mov
outsb
in
out
punpcklwd
lret
int
std
mov
scas
mov
dec
or
ret
dec
pusha
xor
or
mov
or
jnp
lds
adc
push
or
xor
pop
add
mov
out
and
xor
add
out
gs
mov
and
push
jmp
sbb
cmp
cmpl
jle
and
pop
dec
cmp
insb
mov
sub
lock
dec
int
xor
dec
outsl
sarl
inc
fdivl
roll
test
loope
in
xor
je
mov
imulb
dec
call
fstp
adcb
stos
push
and
das
mov
push
and
aaa
stos
mov
mov
jnp
test
or
ljmp
out
sub
nop
mov
fldenv
jp
bound
xor
shl
enter
int
or
cmc
rorb
mov
stc
stos
pop
mov
push
test
mov
push
pop
aas
xor
jnp
mov
add
ljmp
push
dec
xchg
adc
mov
int3
and
fs
cli
or
pop
inc
outsb
xor
lods
xchg
cwtl
js
mov
xchg
popa
jge
insb
mov
ret
lock
test
aam
mov
dec
pop
jge
add
cmp
mov
pop
jg
cmp
call
jae
inc
movsb
jle
lods
loop
lea
int3
jbe
fiaddl
shl
push
and
dec
inc
mov
inc
adc
sarb
stc
repnz
push
iret
add
ljmp
xor
std
arpl
fcmovne
lock
inc
outsb
xchg
cld
mov
jge
and
sub
ljmp
xlat
stos
mov
nop
add
pop
xchg
movsl
mov
mov
aas
push
dec
push
cmp
or
lret
xchg
aaa
into
sub
ret
arpl
stos
cmp
into
push
mov
mov
clc
shr
push
in
mov
jecxz
out
sbb
or
fs
push
mov
and
ret
add
mov
negl
sub
mov
push
movsb
mov
fwait
inc
call
out
lea
repz
je
aam
mov
sub
mov
push
cli
pop
ljmp
pop
fcoml
dec
and
mov
dec
add
insb
test
in
mov
movsb
mov
bound
push
addb
and
jno
test
push
insl
repnz
scas
pop
inc
imul
mov
sbb
into
adc
pop
fdivrs
xor
aaa
mov
xchg
fwait
cmc
push
xchg
mov
fdivrl
cltd
pop
icebp
pushf
add
fisubrs
es
ds
out
sti
nop
adc
repz
inc
cmpsl
fimull
shlb
push
dec
out
pop
push
bnd
loopne
cmovle
pop
xchg
out
ror
outsb
ret
orl
scas
pop
xor
and
or
add
popa
dec
xor
fs
sub
mov
xchg
fsqrt
inc
pop
adc
add
jns
cld
popf
cmp
mov
aas
loopne
jne
dec
ror
jle
pop
xchg
inc
nop
into
cmc
push
jmp
lock
xchg
fnstcw
inc
repnz
pop
fisubl
scas
cmc
dec
sub
sub
push
ret
dec
mov
imul
add
push
add
outsl
imul
decl
dec
mov
add
dec
arpl
or
out
arpl
push
jb
mov
sti
repnz
int3
mov
scas
mov
rclb
mov
mov
in
cli
or
jl
pop
push
mov
mov
xchg
mov
or
push
push
mov
cld
and
pop
mov
xchg
dec
pop
push
push
push
ss
lds
add
call
ja
loopne
inc
out
and
xor
cmpl
bound
loop
lds
daa
pusha
into
dec
mov
rolb
scas
jae
or
and
popf
inc
mov
lock
push
mov
fstpl
pop
stos
jl
inc
sub
inc
sbb
push
test
fwait
js
pushf
ja
mov
fstpl
in
jae
adc
jmp
xchg
inc
enter
insl
scas
add
cmp
loopne
pushf
cmpsl
xor
mov
lea
xchg
in
adc
mov
int3
jecxz
pushf
xor
pop
hlt
popa
sbbl
int3
hlt
cmc
and
mov
outsl
imul
fstpl
pop
sbb
arpl
cmpsb
aad
push
cmp
push
mov
lods
and
jle
mov
es
mov
push
lret
adc
or
bound
xor
or
lods
sti
lods
pop
fstpl
loop
mov
cmp
inc
inc
cltd
mov
movsb
mov
pushf
push
cmpsb
icebp
pop
jecxz
leave
xor
push
psrlq
aad
stos
loopne
and
mov
jle
jg
scas
rcll
mov
cmpsb
insb
push
add
mov
cmp
movsb
dec
jno
mov
lret
cwtl
push
les
leave
inc
inc
push
xor
hlt
pop
jo
call
daa
movsb
and
sbb
push
popf
cld
insl
or
xchg
adc
dec
mov
sarb
aad
pop
add
aam
in
je
add
sub
ja
hlt
adc
push
mov
std
popf
fldcw
mov
mov
arpl
adc
lahf
je
cld
inc
stc
out
xchg
dec
push
mov
inc
push
loope
mov
and
add
adc
adc
aaa
dec
push
fbstp
notl
add
lods
mov
dec
push
xchg
loopne
loopne
jp
mov
pop
arpl
push
fidivrl
out
jno
ds
fistpl
sub
mov
scas
imul
popa
cmp
scas
or
mov
mov
push
inc
mov
divl
jecxz
pop
lds
ljmp
dec
xchg
mul
push
and
ds
push
mov
jbe
pop
mov
xchg
into
cmp
inc
xchg
xor
mov
pusha
popa
xchg
scas
mov
adc
jb
push
or
sbb
push
mov
cmp
imul
popl
pop
rcrb
xchg
cmp
dec
sub
jnp
gs
jg
xchg
mov
xchg
std
outsb
inc
movsb
jl
dec
mov
xchg
fsts
fcoms
jnp
add
sub
divl
jb
cmp
in
sub
test
and
cmp
ret
cmc
fnsave
mov
or
lahf
mov
xchg
insb
mov
mov
or
or
or
xlat
lret
outsb
cld
mov
dec
loop
xchg
leave
je
stc
push
fbstp
enter
dec
adc
call
jae
xor
inc
add
out
orl
fidivrs
js
inc
aas
movsb
push
in
mov
stos
mov
test
inc
repz
xchg
sub
scas
lock
or
dec
loope
sub
das
jbe
add
xlat
ret
and
add
sbb
loopne
pop
cmp
or
mov
or
clc
push
test
xor
dec
or
cmpsb
cmpsl
loop
andl
adc
xchg
js
movsl
in
insl
sti
cld
xor
je
dec
lock
dec
cmc
jp
ja
rorl
xchg
mov
xchg
lods
incb
cmpsb
pusha
pop
xchg
pop
adcb
jl
cmpsl
sbb
in
popa
dec
push
dec
push
pop
add
mov
fimull
sub
cmp
push
mov
in
lahf
repz
dec
xchg
jle
add
call
scas
xchg
aad
hlt
sub
sbb
outsl
fidivrs
imul
cmpsb
jno
mulb
bound
imul
sub
lods
jp
lock
mov
mov
mov
inc
pop
xchg
cltd
sbb
cltd
lret
fistpl
push
and
mov
enter
mov
push
jle
cmp
ret
in
je
call
pop
lea
sbb
movsb
mov
xor
add
mov
mov
test
and
sub
and
repnz
int
xor
in
and
int3
and
sub
and
jp
mov
dec
inc
and
int
cmp
and
adc
fildll
mov
dec
jbe
pop
dec
cwtl
iret
cmp
mov
outsl
int3
mov
pop
ds
xchg
scas
mov
mov
inc
adc
int3
xor
cltd
pop
jle
outsb
xor
mov
in
lds
repnz
shrl
ficompl
test
daa
jae
and
push
cmpsb
xor
test
push
rcrb
pushl
mov
scas
ret
mov
fcmovnu
pop
movsb
mov
push
pop
pop
ret
hlt
rcrb
cld
in
push
sahf
iret
movsb
or
inc
adc
jmp
dec
hlt
dec
lea
mov
and
or
xor
stc
sbb
xchg
sbb
sbb
mov
shrb
jg
mov
adc
jns
mov
dec
and
push
inc
into
dec
mov
xchg
repz
fwait
test
pop
test
mov
or
push
mov
jo
xor
dec
ds
dec
inc
push
out
lds
loop
popf
shlb
or
sub
out
stc
ret
sbb
std
and
movsb
cld
pop
mov
cmpsl
sahf
cmpb
js
or
pop
or
daa
jmp
push
pop
xor
xchg
int
orb
mov
scas
lds
xchg
in
jne
mov
pop
mov
hlt
sub
pop
pushf
cmp
loop
push
inc
scas
hlt
into
pop
mov
lret
mov
loopne
bound
into
aas
ficoms
xor
or
dec
lods
dec
rolb
lods
fsubrs
push
aaa
xchg
cmpsb
sbb
ret
shlb
push
cltd
jnp
jmp
mov
pushf
cmp
and
scas
call
xor
add
jae
and
jno
mov
iret
fdivl
cmp
sbb
xchg
es
inc
cld
jns
fnstenv
lock
test
je
mov
xchg
scas
fidivrl
pop
xchg
addr16
mov
push
sub
or
insl
mov
in
mov
lahf
adc
subb
jo
push
push
inc
and
and
adc
mov
movsb
leave
sbb
sbb
dec
push
cwtl
cld
sbb
xchg
push
xchg
jg
mov
adc
mov
repz
cmp
xchg
cmc
aaa
pop
mov
mov
cli
cwtl
dec
loop
push
icebp
xchg
push
aam
xor
inc
bnd
aas
in
and
fsubrp
shrb
cmc
jns
ja
mov
push
int3
sub
cmp
outsl
addl
frstor
cmp
sbb
inc
add
mov
push
pop
loope
cmpsb
mov
out
mov
imul
aaa
fisubl
pop
or
sub
cmp
repz
mov
dec
js
pop
fld
push
into
movsb
fisttps
dec
mov
leave
out
sbb
push
inc
inc
popa
stos
ficomps
sahf
outsb
lods
or
add
and
data16
and
sub
inc
jno
std
ss
adc
jmp
fidivrs
mov
clc
movsb
push
pop
call
and
shrl
out
into
inc
subb
mov
xchg
push
jle
xchg
or
cltd
xchg
mov
in
sbbl
adc
js
and
xor
andl
mov
push
cmp
cmp
or
sub
arpl
xor
repz
pop
mov
xchg
sub
fiaddl
jno
cmp
nop
xchg
push
cmp
jl
ss
imul
mov
mov
ss
jmp
and
repnz
aad
andl
incl
add
push
or
enter
pushf
arpl
and
pop
dec
xor
sbb
sub
sbb
mov
xchg
or
mov
bswap
push
xchg
and
outsl
inc
je
outsl
test
sub
jb
addr16
stos
cmp
fs
inc
sub
inc
sahf
add
pop
push
je
pop
xor
loope
movsb
and
inc
mov
repnz
testl
loope
emms
inc
sub
out
divl
xorl
jmp
xchg
xchg
xchg
or
jb
jo
dec
push
adc
sbb
cmp
xchg
dec
jmp
xchg
pop
xorps
jge
inc
add
xchg
add
mov
bound
sti
lods
ljmp
lahf
jecxz
jbe
mov
fisubrs
shrl
or
dec
mov
je
lret
ror
xlat
xchg
xchg
rol
cmp
cmpb
xor
cltd
jle
in
inc
jno
mov
popa
push
or
add
aam
cmp
aaa
jb
jmp
lods
or
sub
cmpsl
sub
mov
and
adc
mov
insb
sbb
imul
imul
push
cmp
dec
fdivrs
jns
loope
push
or
mov
mov
mov
sbb
jo
into
shrb
pop
cld
mov
int3
dec
mov
scas
loop
add
cmpsl
outsl
and
inc
inc
es
jmp
xchg
out
in
push
nop
arpl
push
rcrb
mov
pop
les
mov
jecxz
xor
mov
cltd
stos
mul
cmp
adc
test
inc
pop
or
dec
dec
adc
dec
sbb
leave
daa
push
pop
mov
mov
jb
out
xchg
mov
pushf
out
movhps
jbe
sbb
push
stos
mov
stos
adc
pop
sub
test
ja
jl
lods
jne
jb
add
notl
jmp
push
lea
add
dec
stc
in
xchg
jecxz
jp
cmpl
pop
pop
push
jno
ret
xor
shr
jns
call
aaa
push
sub
js
mov
mov
cmp
push
xor
push
mov
adc
cmp
mov
and
cmc
cwtl
iret
stos
in
add
bnd
mov
adc
or
sub
ss
aam
sub
jp
push
call
fcmovb
mov
stc
sbb
call
hlt
xchg
sbb
cmp
mov
jge
dec
gs
xchg
or
or
mov
xor
jnp
rorb
xor
fs
lahf
add
lret
add
ss
pushf
daa
jg
or
xor
fisttps
pusha
jae
sbb
push
orl
movdq2q
dec
mov
out
cmc
fbstp
into
sbb
popf
cmp
test
fldenv
repz
xchg
xchg
push
or
jmp
ds
inc
shlb
xchg
xchg
imul
lods
jae
std
mov
jecxz
mov
xor
add
imul
sub
daa
push
je
scas
fcmovnb
ficomps
sub
repnz
ljmp
repz
push
ret
dec
je
mov
mov
mov
bound
pop
lcall
popa
dec
test
jne
jp
dec
lea
mov
out
lahf
fwait
lods
mov
dec
clc
jo
pop
fwait
xor
sub
push
stos
sarb
fistps
cmpsl
call
jp
in
rolb
sbb
int
cltd
lock
inc
and
sub
pop
sbb
aam
mov
nop
mov
popa
mov
push
mov
rol
pop
jae
pop
rclb
mov
icebp
cltd
xchg
mull
adc
sbb
sbb
cmp
jge
in
sub
mov
mov
mov
sbb
cmp
dec
lods
not
in
test
cmp
mov
jnp
inc
pop
lods
ret
aam
mov
pop
xchg
push
sti
and
lods
sub
aam
inc
add
inc
and
xor
scas
pop
push
cmpsb
mov
shrl
loop
daa
imul
push
hlt
je
pop
insb
rcl
cmp
jmp
mov
insl
pop
pusha
jle
cmp
inc
xchg
pop
dec
jno
jmp
xor
mov
adc
fimuls
hlt
mov
mov
in
cwtl
mov
cli
ja
stc
jns
faddp
mov
movsb
lcall
rcr
jne
xor
jmp
sub
loope
out
roll
dec
stos
lock
cli
mov
xchg
jmp
mov
out
cmp
adc
cs
fwait
enter
ret
or
xor
and
pop
mov
sub
mov
pop
rorl
sbb
cmc
inc
cmc
fcompl
ret
add
lcall
mov
push
mov
cmpb
jno
mov
sub
and
arpl
fcmovnbe
add
repnz
mov
lret
mov
lret
clc
sub
dec
lahf
sbb
dec
dec
cs
pop
repz
insl
xlat
add
cmp
mov
repnz
out
iret
fsubl
push
leave
mov
mov
or
pop
mov
lea
mov
push
hlt
cmp
fs
pop
test
and
iret
jae
pop
lcall
xchg
cmp
cmp
out
into
in
xchg
inc
pop
dec
data16
jbe
test
gs
sahf
mov
jne
and
pop
pusha
js
mov
ja
push
jg
imul
lret
ret
push
sub
rcrl
out
cmp
cmp
repnz
insl
pop
or
int
testl
pop
test
mov
gs
scas
xor
rcll
push
xchg
lods
leave
mov
or
cmpsl
fistpll
sub
or
leave
pushf
pop
pop
inc
lret
cmp
orl
sub
lods
sub
mov
insb
testb
mov
out
mov
ja
je
jns
fcomp
add
inc
in
iret
and
jg
cmpsb
pop
pop
pusha
jg
ja
movsl
mov
sbb
fcompl
in
adc
stos
push
std
mov
jge
rcr
pop
dec
int
mov
call
fisubrl
xchg
sub
adc
mov
cli
pop
pop
out
or
stos
into
sub
lock
notl
fsubrl
inc
shr
mov
loope
jb
out
clc
mov
fwait
add
add
movsb
cmp
adc
jbe
push
out
faddl
notl
rcl
stos
push
cs
dec
test
insb
or
imulb
pop
cmp
xchg
hlt
das
push
cmp
mov
or
fcmovne
shr
int
inc
xor
adc
pop
fwait
call
cltd
dec
adc
daa
gs
xor
mov
and
dec
out
dec
lods
fnstcw
insl
xchg
inc
pop
adc
mov
cmp
shr
cmpsl
xchg
addr16
sbb
cld
ja
and
mov
push
insb
test
adc
scas
fimuls
jp
cltd
lret
adc
sbb
or
lock
push
xchg
add
lret
add
rorb
add
sub
mov
and
mov
jp
push
cmc
push
cmpsb
push
jnp
mov
xchg
or
pop
cmp
fnstsw
and
fisubrs
lcall
add
push
cmp
xorb
cmp
out
pop
mov
mov
inc
jg
rol
adc
addr16
cli
push
dec
gs
mov
add
out
lods
fiadds
mov
or
movsl
sbb
sti
movsl
gs
cld
push
add
pop
stc
xchg
test
dec
test
dec
in
sbb
inc
mov
je
add
notl
clc
shl
dec
call
add
push
sub
or
mov
add
and
jbe
cmp
cmp
loopne
ss
xor
jmp
push
dec
fisttpll
mov
xchg
flds
scas
jmp
popa
cmpsl
cwtl
fcoms
cmc
xor
loope
xchg
aad
mov
lea
sbb
push
addr16
cmp
shll
rcll
les
add
out
pushf
and
mov
dec
dec
mov
pop
mov
jle
sub
sub
movsl
sub
ret
dec
push
lret
cmp
pop
lret
adc
jo
lret
popaw
fs
jle
fxch
pop
int3
mov
sbb
fbstp
test
cmp
bound
add
xchg
jb
in
xor
xor
xchg
mov
adc
mov
sub
cmpsb
jp
or
inc
sub
xchg
dec
lret
adc
test
xchg
jecxz
ficompl
ret
adc
pop
in
and
cmp
jo
jae
clc
pop
mov
xor
outsb
sbb
mov
jb
rcpps
das
repz
xchg
imul
sti
rorl
cmp
loopne
mov
dec
push
popf
out
xchg
out
xchg
inc
mov
sub
repnz
jge
mov
inc
sbb
leave
cli
cmpsb
sub
hlt
loope
stc
in
scas
sub
sub
push
and
rcr
push
clc
push
dec
arpl
jp
adc
sti
pushf
xchg
jmp
jmp
scas
decl
xchg
cs
xor
jbe
scas
pop
insl
and
mov
fcoml
outsl
call
sti
and
push
cmpsl
mov
scas
sbb
inc
cmp
mov
test
jl
cmc
lods
outsl
push
ljmp
sub
mov
and
sub
cmp
add
mov
hlt
ficompl
fidivrs
sub
xchg
lcall
pop
xchg
mov
sub
in
cmp
push
mov
mov
add
inc
inc
popf
xchg
enter
lgs
mov
arpl
fsts
imulb
inc
lret
cmpl
xchg
inc
adc
clc
arpl
lods
shrb
cmp
mov
jl,pt
rorb
std
add
cli
xchg
sub
insb
mov
ret
pop
pop
popf
cmp
and
popa
mov
repz
mov
rorl
call
inc
fs
pop
push
rcll
dec
xor
outsl
pop
call
dec
or
pop
dec
sub
into
sbb
fmull
dec
aad
adc
cmpsb
movl
push
out
sbb
mov
popf
ja
jmp
jmp
adc
xchg
jl
jp
jp
inc
inc
xor
or
aad
jno
mov
mov
pop
dec
mov
mov
dec
xchg
xor
and
add
push
xor
mov
adcb
pop
cmp
mov
jno
inc
adc
std
inc
xor
pop
mov
and
mov
mov
out
ret
fbstp
outsb
aas
push
jecxz
cli
mov
data16
cmpsl
roll
add
ja
jge
jne
dec
stos
in
or
hlt
fistpl
movsb
outsb
fdivl
push
dec
popf
jmp
cli
ss
mov
adc
adc
inc
cmpps
dec
insb
push
leave
test
sbb
cltd
popa
into
and
daa
push
cli
cmc
popa
pop
adc
dec
inc
cmc
adc
testl
loopne
jns
aad
fdivl
xchg
fsts
movsb
cmp
mov
xlat
ret
fstpl
imul
jns
out
sbb
sub
adcb
sbb
sub
jmp
stc
and
sahf
mov
push
fld
xchg
sti
mov
inc
aas
mov
lock
shll
add
imul
lock
fwait
cmpsb
repnz
dec
movsl
fwait
in
daa
movsb
pop
push
stos
push
jae
sar
aam
sbb
dec
mov
pop
aam
test
cmpsb
mov
jl
pop
jne
gs
xchg
lahf
or
jmp
inc
cmpsb
jmp
js
ret
mov
lret
mov
stos
mov
inc
add
sti
adc
std
xchg
or
sub
lret
adc
lea
lock
addr16
or
and
push
or
cmp
ljmp
or
rcl
mov
and
iret
dec
aam
jecxz
pop
pop
push
and
cmp
orl
sbb
test
xor
ss
pop
jmp
lcall
lds
mov
dec
jae
dec
mov
push
popf
cmpsb
popa
and
or
inc
xor
xchg
push
inc
push
or
adc
xchg
add
test
hlt
outsl
push
xor
xor
je
shlb
sbb
outsb
aaa
out
mull
mov
stos
inc
dec
adc
push
pop
mov
rorl
mov
movb
sub
mov
test
jb,pn
pop
and
xor
sti
shll
mov
out
mov
mov
cli
orl
push
sbb
out
outsl
add
insb
iret
dec
dec
dec
jae
popf
xor
jmp
scas
pushf
shl
out
stos
sbb
mov
add
stc
int3
inc
dec
hlt
mov
sub
add
mov
fcoml
testl
add
sub
pop
sbb
cmp
adc
inc
add
push
jp
pop
and
pop
sub
ret
mov
scas
stc
ret
jb
sbb
or
stos
fsubrl
inc
fcmovb
movsl
clc
stos
push
fwait
inc
out
xorl
iret
jmp
inc
dec
test
cmc
dec
loope
push
mov
cwtl
arpl
stos
or
cmp
lock
xchg
rcll
push
les
lods
jecxz
sahf
add
insb
decl
add
jg
je
iret
push
xchg
push
call
pop
insb
loop
xor
pop
cltd
repz
rorb
aaa
arpl
insb
pusha
shr
push
and
sub
pop
mov
daa
xchg
xchg
mov
mov
fwait
lahf
fsubrl
lcall
jg
dec
push
jge
iret
je
je
dec
adc
sbb
fwait
push
sahf
mov
mov
loope
pop
popa
addb
pop
cwtl
in
shll
inc
addr16
shlb
add
mov
add
xor
xor
jl
out
ja
mov
xor
dec
repz
cwtl
lods
ret
mov
cmp
repnz
dec
movsb
mov
dec
mov
mov
add
fwait
cli
movsl
inc
into
hlt
dec
or
outsb
mov
xor
and
ja
pop
jmp
ja
push
sub
sub
mov
sub
pop
jmp
divl
push
popa
push
xorb
sub
fs
pop
sbb
push
pop
and
mov
xchg
rcl
cmc
mov
cli
sahf
mov
or
int3
int
jne
ds
mull
imul
pop
xor
add
jae
cmpsb
mov
lea
or
mov
pop
aam
fimull
pop
inc
xchg
xchg
add
es
inc
andb
bound
push
bound
and
pop
roll
hlt
adc
inc
stos
sub
cmpsl
pusha
fistpll
mov
movsb
shll
mov
and
popf
cld
dec
or
enter
inc
dec
jecxz
pop
mov
dec
lods
or
cld
or
outsl
fwait
mov
mov
dec
dec
aam
sub
pop
ds
pusha
lds
pop
addr16
roll
out
jge
xchg
push
lahf
stc
out
xor
jmp
adc
sub
sarl
push
xchg
sub
add
inc
and
nop
pop
fnstsw
lea
pop
cmp
dec
cs
sarl
pushl
cli
inc
iret
hlt
sbb
ljmp
adc
fmuls
rorb
mov
xor
push
add
xchg
movups
mov
inc
dec
mov
inc
push
xchg
cli
push
adc
or
xchg
dec
cmp
inc
rcrb
pop
out
lret
divb
pop
mov
testb
movsl
push
dec
loopne
out
dec
mov
or
push
mov
mov
leave
js
dec
aad
call
fmuls
cmc
adc
mov
cwtl
push
add
pop
xchg
mov
jmp
pop
cmpsb
ss
insl
mov
je
pushf
jo
cmpsb
sbb
pop
fisubl
ss
in
call
into
sti
scas
xlat
rcll
mov
iret
lcall
popf
push
insl
cmpsb
pop
mov
xchg
notb
jne
jge
push
dec
push
dec
scas
das
jae
push
fidivrl
push
test
test
or
mov
mov
push
sahf
inc
and
or
enter
xchg
incl
sbb
or
cmp
inc
add
dec
stos
nop
test
fwait
addr16
jmp
outsb
jnp
lret
xor
gs
cmp
or
xor
icebp
call
dec
mov
jecxz
push
addr16
in
add
xlat
inc
sub
int
xlat
mov
push
lea
jnp
sbb
jge
and
clc
data16
or
jecxz
or
xchg
pextrw
outsb
repz
or
jne
cmp
out
push
jle
add
aam
inc
xor
aaa
in
jle
enter
xchg
adc
sete
out
adc
and
lods
sahf
xchg
xchg
sbb
mov
dec
mov
lret
add
addb
cltd
imul
ds
xor
into
cli
cmc
icebp
and
mov
ja
xchg
jmp
stos
pusha
imul
out
cli
fs
inc
cli
mov
rcl
and
int
popf
cmc
jle
and
clc
or
lahf
lahf
push
mov
sub
subl
dec
aam
pop
mov
pop
inc
rcll
push
jno
jle
mov
aam
jp
int3
mov
mov
mov
arpl
inc
jge
and
mov
mov
inc
in
cmpsl
cmc
std
cmp
sbb
cli
push
cld
cmp
js
incb
xor
hlt
decb
out
inc
cmp
imul
push
cli
insl
inc
mov
jns
push
sbb
mov
pop
sti
xchg
xchg
repz
and
cltd
dec
dec
add
cmp
jno
psubd
mov
call
jge
sub
in
cltd
cmpl
mov
mov
les
fcmovnb
and
dec
mov
mov
mov
into
xchg
sub
pop
pop
lret
xor
lods
repz
imul
shll
daa
mov
cltd
cs
jl
cltd
cmp
mov
std
dec
xor
mov
sbb
add
call
push
popf
lods
mov
lea
cmc
orl
clc
dec
cmp
pop
cmp
imul
dec
fmull
adc
das
and
sbb
xorl
xor
sub
pop
loopne
xchg
out
out
stos
aas
pop
faddp
push
pop
imul
outsb
lahf
dec
xchg
scas
rcrb
flds
rcr
mov
push
xchg
rcl
cmp
in
orb
jg
lods
push
sbb
les
sahf
in
cwtl
push
leave
fidivrs
lea
jbe
pusha
aam
lds
fcomps
adc
sub
arpl
or
xchg
stc
or
xchg
xchg
mov
or
out
pop
lret
imul
and
adc
leave
int
cli
pop
sti
lahf
dec
ljmp
xchg
lds
pop
inc
int3
add
loope
gs
sub
sahf
lret
sbb
inc
lret
test
mov
mov
lahf
fs
mov
je
and
and
arpl
adc
cltd
sub
jecxz
jbe
je
cs
in
dec
out
or
pop
or
push
call
or
push
xchg
xchg
jbe
clc
xorb
pop
movsb
aam
and
xor
sbb
cmpsb
adc
loope
xor
mov
mov
aad
xchg
lret
ret
mov
xchg
jbe
data16
clc
mov
into
test
fstpl
xchg
adc
enter
xor
lds
pop
mov
and
das
pop
push
idivl
ret
cmpsb
cmp
add
ss
mov
cmp
mov
inc
mov
sbb
add
aaa
jo
icebp
push
fwait
xchg
and
hlt
loop
stos
mov
sbb
mov
xchg
lret
cmp
and
addr16
adc
push
or
push
dec
dec
adc
cmp
mov
add
dec
lds
mov
jbe
aaa
fucomip
or
jb
adc
cmp
xchg
mov
adc
xchg
ja
push
pop
and
mov
fsub
push
sarb
adc
sbb
inc
call
push
sub
js
out
pop
adc
fidivl
xor
enter
and
nop
pop
mov
add
cld
inc
in
push
int
rcrl
xchg
rcrb
mov
xchg
ret
rcll
sbb
pop
mov
inc
xchg
popf
mov
mov
xchg
jo
into
lea
push
stos
sub
bnd
sub
sub
xchg
gs
lret
out
ret
and
test
inc
mov
or
jp
sbb
loopne
stc
in
bound
and
cmp
inc
in
or
pop
cltd
popf
aam
enter
mov
mov
pop
sub
mov
and
movhlps
sbb
call
popf
fistpl
xchg
jno
xchg
xor
mov
xor
inc
lcall
in
and
xchg
cmc
cli
push
mov
add
shl
xchg
adc
stos
inc
mov
fwait
mov
add
add
add
mov
in
addr16
jae
mov
and
in
xchg
jge
or
xchg
cmp
stc
jg
test
aas
cmp
sbb
fs
inc
xor
cmp
push
cmp
sbb
test
add
pop
inc
push
repnz
cmp
dec
sahf
inc
ret
inc
sub
sub
mov
push
into
push
xchg
and
lds
push
cmp
popa
cmp
mov
pop
mov
cmpsb
cs
fsubp
dec
inc
add
push
inc
packssdw
fcomp
mov
cmpsl
nop
adc
lods
xor
out
repnz
les
insb
cwtl
aam
mov
lods
shr
sub
shll
adc
mov
das
clc
inc
jge
insb
insb
mov
aad
test
out
pop
xor
aas
mov
push
add
fdivs
out
arpl
add
hlt
sub
stc
je
inc
sbb
adc
insb
push
loope
mov
jg
adcl
mov
fbld
fs
cmp
daa
jge
ds
lret
xchg
les
cli
push
inc
outsl
subl
push
aam
cmc
sub
sub
mov
in
adc
sub
ret
xchg
lods
push
negl
je
cmp
aas
into
mov
pop
push
sbbl
aaa
lods
ds
cmp
pushf
aas
and
mov
js
test
jecxz
mov
and
fdiv
in
dec
mov
mov
jge
inc
mov
fcoml
mov
xchg
mov
aad
movsb
xlat
jo
out
dec
cmp
mov
pop
xchg
sub
out
fmull
je
cmp
in
sti
repz
and
push
repnz
mov
imul
scas
push
mov
pop
fisttps
jle
xchg
int3
out
lahf
lods
popa
psrld
sub
test
push
xor
arpl
das
mov
das
pop
out
aaa
out
test
pop
inc
fnstcw
push
sbb
sub
aas
inc
dec
push
push
movsl
stc
pop
mov
push
and
call
add
jnp
jg
rol
or
sub
enter
push
test
mov
das
or
shlb
mov
push
or
xchg
testb
lock
stos
xchg
jno
cmpl
and
std
cmpl
cmp
push
fcmovb
sahf
mov
imul
lock
aas
or
test
lds
add
orl
ret
stos
nop
xchg
mov
scas
or
nop
cmpsl
jle
and
inc
loope
adc
sbb
cmp
or
mov
ret
push
push
inc
mov
cmc
xchg
loopne
cmpsb
rorl
test
jnp
rolb
out
xchg
push
jmp
or
movsl
mov
les
sbb
fstpt
mov
push
push
xchg
icebp
sub
sarl
addr16
push
incl
aad
cmc
lahf
jge
pushf
dec
push
inc
fstps
je
adc
mov
push
sbb
inc
xchg
mov
ficoml
test
aam
cmp
or
fwait
sub
test
out
in
lods
cld
mov
jmp
push
jecxz
and
lds
mov
jo
jo
or
or
and
roll
cld
fisttpll
mov
dec
lcall
mov
rcl
push
cmp
adc
das
pinsrw
imul
jp
les
fidivrl
sbb
xlat
dec
imul
scas
movsb
insl
les
ret
outsl
sbb
fcompl
data16
mov
movsl
xor
xor
sub
clc
std
icebp
mov
into
and
xor
mov
cwtl
sti
ret
movsl
std
mov
or
dec
stc
lea
pop
ss
aam
testb
add
inc
lcall
push
push
aad
lods
out
or
jae
inc
add
testl
mov
stc
aas
jp
call
push
push
fcompl
sub
xchg
icebp
insl
adcb
ja
xchg
sti
rcrl
movswl
push
ud0
data16
mov
xchg
test
dec
push
jbe
lret
les
incl
push
cmp
sub
dec
fcmovnu
cltd
push
mov
dec
leave
push
out
mov
or
roll
mov
shlb
daa
jb
js
cmp
jecxz
mov
leave
dec
decl
mov
xchg
cmpsb
add
add
cwtl
inc
cld
xchg
pop
aam
cwtd
mov
movsb
mov
mov
movsl
push
and
lods
sub
xor
es
sarb
sbbb
push
lahf
ljmp
mov
fcmovb
mov
push
hlt
push
xchg
or
xor
adc
aas
jecxz
sbb
push
mov
sbb
dec
pop
js
sub
pop
pop
pop
sub
mov
test
pushf
dec
cwtl
mov
push
in
mov
inc
mov
or
sub
loope
loope
inc
sti
leave
pop
sbb
mov
cwtl
and
pop
scas
dec
out
dec
je
fs
ret
sbb
lret
ret
sub
xor
push
lret
jno
mov
push
mov
xchg
ds
add
mov
lret
int
mov
jae
mov
jle
scas
sbb
jl
mov
and
jb
cmp
push
xchg
jb
sbb
or
add
loopne
js
inc
cmc
scas
pop
adc
rcpps
cwtl
adc
add
push
mov
jp
fdivr
cmp
adc
push
in
inc
mov
and
shrl
repz
psllw
mov
aaa
iret
test
in
xchg
add
outsl
add
jl
xor
xlat
and
int
stos
pop
sbb
push
jle
subb
leave
inc
add
imulb
pop
jecxz
lea
out
mov
stos
sbb
out
in
and
or
xchg
iret
ja
jmp
lods
push
ret
add
ficoml
test
pop
repz
sub
mov
in
jg
popf
out
hlt
andb
cmp
sar
and
stc
mov
dec
or
or
aad
repz
sub
test
add
cli
pusha
dec
lods
ja
mov
js
cld
xor
movsl
out
mov
test
pop
pop
add
adc
clc
sub
repz
and
not
mov
cmp
or
xlat
je
push
nop
fcoml
adc
cmpsl
dec
fists
stos
mov
pop
ds
adc
lea
push
outsb
popa
clc
xor
icebp
ja
add
mov
pop
ss
scas
or
dec
xor
adc
test
sub
fidivs
es
inc
jmp
pop
dec
pop
mov
nop
xchg
ret
imul
int3
mov
or
cmp
fdivrl
pop
hlt
clc
clc
inc
dec
ja
adc
pop
adc
or
es
xchg
pusha
jle
repz
xchg
xlat
cmp
out
in
xchg
add
inc
add
ljmp
jnp
sbb
xchg
cmp
dec
sub
sub
aam
pop
cmp
xchg
xchg
nop
les
jnp
icebp
sbb
push
pusha
add
flds
jns
or
stc
test
push
and
sub
pop
adc
push
stc
sahf
dec
loope
pop
sub
jmp
fisttps
adc
sbb
sti
push
repz
inc
jl
xor
fstp
jg
push
dec
pop
imul
cmpsb
loop
scas
pop
and
adc
sbb
cmc
pop
addr16
push
and
pop
stos
stos
push
loopne
push
das
call
in
adc
js
add
movsb
movsl
sbb
test
cmp
dec
fwait
inc
cltd
jns
sub
mov
push
rcrl
cmp
add
dec
pusha
adc
aam
mov
mov
ret
pop
imull
jb
add
mov
data16
or
dec
test
jp
pop
daa
jg
dec
fmull
push
jbe
int
loope
popf
clc
sbb
ret
jno
xorb
cld
rclb
ret
adc
pop
push
add
push
aam
scas
mov
mov
bound
cs
jle
mov
imul
sub
outsb
repz
add
mov
lret
sahf
hlt
ret
push
sbb
push
fdivl
jge
pop
idivl
or
push
bound
fidivs
dec
imul
ret
add
pop
mov
outsb
scas
dec
sub
push
cmp
xchg
stc
fs
mov
loop
test
lock
out
bnd
rol
sbb
aaa
cmp
add
dec
lea
jae
cmp
mov
ds
mov
call
movsb
bts
add
lea
cmp
iret
sbb
inc
mov
outsb
je
sub
leave
out
cwtl
cmp
mov
sahf
out
sub
pushf
ja
mov
mov
popf
inc
dec
mov
pusha
push
xchg
lret
add
call
ds
ja
test
sbbb
add
mov
and
add
lods
mov
sub
push
loop
int
inc
mov
mov
orl
xor
pop
xor
inc
xor
push
cmp
rcrb
add
repz
movsl
jmp
cmpb
pop
int
in
xchg
loopne
dec
or
in
dec
pop
push
jne
sbb
ret
mov
ret
sub
sbb
pop
sub
hlt
dec
loop
xor
fwait
dec
pop
pop
xor
out
fsub
mov
out
test
jecxz
out
inc
adc
jns
in
test
xchg
lea
inc
add
add
call
pop
pusha
sbb
cli
test
adc
ljmp
rol
jo
pop
movsl
push
in
ljmp
inc
jp
out
mov
dec
lcall
shrl
fsubrs
pop
fs
push
adc
or
insl
test
or
push
nop
test
ljmp
mov
xor
je
xorb
aaa
pop
cmpsb
xchg
xor
add
sub
test
lods
mov
push
xor
cltd
push
mov
sti
jo
and
scas
push
fisttps
in
sbb
lahf
je
repnz
jp
mov
jb
mov
inc
out
pop
sbb
aas
add
mov
mov
nop
sub
jne
stos
jecxz
out
mov
in
jge
jae
add
xorl
cmc
in
xchg
int
ret
xchg
sbb
mov
imul
adc
fwait
add
mov
add
sub
adc
vmwrite
xchg
xchg
dec
xchg
cwtl
sbb
int3
mov
icebp
clc
cmp
inc
insb
frstor
push
je
sbb
push
test
xor
or
push
push
jp
inc
fcom
mov
in
sub
or
xchg
outsl
inc
outsb
sub
xchg
jp
jle
add
fimull
adc
mov
mov
insl
mov
jge
rcrb
outsb
out
jbe
cmpsl
test
push
shl
or
arpl
fistpll
adc
cmp
fisttpll
cld
ret
in
xor
dec
xchg
stos
in
adc
push
xchg
jp
fisubl
sarb
push
nopl
mov
out
mov
and
and
ja
mov
cmpsb
sbb
sub
adc
inc
inc
cmc
lods
adc
sahf
pop
scas
jno
cmp
bound
dec
hlt
rcrb
add
jmp
add
sbb
pop
cmp
sti
xlat
loope
adc
and
add
fdivs
pop
xchg
pusha
add
mov
push
xchg
push
mov
mov
cmp
pop
inc
clc
stc
sub
mov
or
cmp
daa
sub
cs
cmpsl
pop
sbb
mov
out
mov
fwait
mov
dec
push
repnz
mov
sub
dec
fisubrl
enter
dec
lods
jbe
mov
inc
xchg
cmpsl
addr16
fstp
inc
movsl
gs
sub
movsl
pop
push
movsb
sti
xchg
xchg
push
or
les
push
imul
test
and
xor
inc
xor
insb
push
add
out
mov
jle
cmc
cltd
push
pop
push
loope
jmp
push
xor
int
imul
dec
imull
sub
out
add
mov
idiv
les
mov
popf
sub
fildll
adc
mov
les
pop
xchg
sub
and
add
xchg
pusha
sub
jb
clc
pusha
jo
push
mov
out
jno
call
jmp
sbb
aad
or
adc
inc
popf
scas
sub
push
sbb
pop
push
insb
adc
mov
mov
loope
mul
cld
pop
pop
loop
test
or
pop
push
push
lcall
in
push
ss
loopne
lcall
lock
imul
sarb
icebp
or
mov
push
iret
xlat
cltd
scas
das
lret
js
sbb
xor
pop
xor
lea
in
mov
sti
loop
mov
mov
mov
mov
mov
out
outsb
jo
idivb
xchg
jae
movsl
pop
in
negb
iret
stc
sub
out
or
sarb
push
pop
cmp
pop
pop
int3
inc
xorb
pop
xorb
cmp
mov
insb
daa
roll
xor
ljmp
arpl
sbb
xchg
mov
into
inc
test
ret
dec
dec
and
les
xorb
js
dec
popf
and
mov
lods
mov
cmpb
psadbw
jl
xor
addr16
add
xchg
sub
xor
les
or
cmp
aam
cmp
adc
cmc
enter
xchg
in
pop
adc
sbb
data16
sbb
leave
or
rcl
and
sub
int
sub
popf
fdiv
mov
data16
and
cwtl
out
repnz
mov
cmp
arpl
dec
test
adc
icebp
dec
lods
xchg
test
and
fs
test
mov
dec
cmpsb
rcll
pop
ret
pop
mov
cwtl
notl
push
je
cmpsl
rcrb
dec
popa
lcall
pop
or
negb
add
sub
jl
mov
sti
mov
in
std
cmp
cmp
jge
mov
fcoml
in
dec
scas
loop
cmp
les
int3
je
pop
lret
pop
loope
loop
nop
ljmp
test
shl
cmp
xchg
cltd
nop
mov
xorb
out
push
lret
outsl
push
jmp
xor
addr16
fbld
mov
or
rcrb
je
mov
cmp
test
sub
gs
mov
rclb
fdivr
add
add
sbb
nop
shl
mull
es
mov
mov
into
adc
hlt
int
hlt
inc
push
insl
stos
cmp
inc
xchg
mov
cmpsl
pshufw
sbbb
test
jge
insb
std
dec
pop
das
pop
jg
neg
pop
fsubs
sub
lret
push
ficomps
jl
and
jle
cmp
lods
filds
mov
mov
insl
bound
lods
jmp
add
pop
repnz
add
popa
rolb
xchg
adc
mov
dec
mov
aaa
lea
mov
jmp
outsl
mov
ljmp
sub
inc
push
sub
adc
loope
sub
fidivrl
push
adc
or
mov
mov
ja
dec
out
pop
inc
pop
inc
jl
hlt
lcall
dec
test
enter
add
jnp
sbb
push
xor
das
cmp
mov
in
aad
mov
mov
ret
sub
adc
or
orb
iret
xor
into
les
xchg
loopne
std
sarl
testl
xchg
jne
insb
and
jnp
sub
lret
mov
xlat
popa
ficomps
sbb
xchg
js
ja
cmp
inc
mov
repnz
xor
pop
cmp
scas
pop
mov
ja
xchg
mov
mov
popf
mov
or
les
in
or
xor
fidivrs
mov
nop
stos
and
pop
imul
xchg
inc
cs
adc
mov
jg
jnp
mov
dec
pop
dec
mov
add
jnp
jmp
dec
outsl
mov
jb
or
data16
sub
pop
and
sbb
inc
dec
xor
mov
dec
xchg
shrb
aam
les
je
mov
sub
jmp
adc
jmp
mov
and
sub
add
cmc
rclb
jae
movsl
arpl
mov
push
fildl
jg
push
popf
inc
sahf
cld
xchg
icebp
inc
dec
pop
pop
std
in
push
sbb
sub
sub
addr16
bnd
dec
adc
push
scas
mov
push
shrl
xchg
push
xchg
inc
or
lret
cli
fcom
addr16
outsb
push
jl
xor
push
lds
addr16
hlt
sbb
xorl
inc
mov
add
fucomp
divb
cmp
fsts
adc
xchg
cmp
imul
rcrb
push
mov
dec
jl
xchg
or
js
push
divb
lcall
inc
push
push
mov
mov
insb
or
jb
xor
sub
xchg
mov
fdiv
lods
repnz
popa
inc
mov
outsb
mov
jge
and
mov
lock
aad
popf
push
rcrb
or
dec
mov
cmp
pop
dec
mov
jmp
mov
sti
and
popf
lods
mov
sahf
test
lods
sbb
mov
and
push
je
pusha
fbstp
lock
dec
push
inc
inc
jns
jge
mov
test
push
mov
jecxz
xchg
xchg
sub
leave
in
cmp
test
lods
jg
inc
mov
outsl
pop
xor
dec
shll
and
pop
jle
in
or
push
outsl
jmp
aas
inc
shlb
or
push
pop
in
imul
fnstcw
push
xchg
fs
pusha
sbb
sbb
jnp
fsub
jnp
mov
fsubs
jns
out
mov
lds
fwait
jb
xor
fwait
mov
ret
mov
leave
gs
xlat
adc
mov
dec
lods
cmp
loop
jmp
je
inc
imul
xor
nop
jb
stos
pop
cmp
popf
lcall
mov
xchg
xchg
dec
mov
and
popa
sub
push
popf
rorl
jge
mov
push
inc
mov
pop
cmp
daa
nop
aad
xor
cmp
ficomps
lcall
adc
cmpsl
jnp
daa
jmp
icebp
add
and
loopne
clc
sub
push
dec
push
cmpsb
mov
or
cli
in
sub
mov
cwtl
lcall
xor
cltd
and
pcmpeqd
adc
dec
sbbb
dec
cmpsl
pop
adc
mov
push
add
fdivr
push
pusha
xchg
pushf
idivb
mov
es
sub
shlb
test
xor
mov
dec
xchg
mov
xchg
xchg
daa
and
cld
sub
popa
or
adc
jmp
jo
test
cmp
out
mov
dec
ds
popf
adc
sti
cld
mov
imul
lock
xchg
pop
push
mov
out
jle
stos
aad
sarb
xchg
jbe
and
pop
dec
not
sub
adc
cmp
into
lods
mov
fs
jne
xlat
popa
inc
inc
sbb
sub
lret
xchg
test
movsb
notb
cmc
adc
stc
lods
or
test
call
mov
loope
test
jp
xor
sub
roll
iret
es
pop
bound
xchg
jp
les
add
jmp
jecxz
mov
cmp
call
cmp
add
jg
jecxz
fs
push
or
jmp
imul
mov
xchg
dec
popa
and
pop
outsb
subl
add
clc
mov
inc
std
lods
jb
sbb
inc
mov
mov
mov
pusha
cmp
xor
ja
insb
pop
adc
sub
out
mov
mov
call
sub
clc
int
loopne
aam
push
cmp
adc
out
std
ret
adc
pop
aad
pop
dec
imul
pop
test
cmp
sub
or
fsubs
pop
loopne
mov
dec
pop
les
dec
pop
je
lock
lods
jo
xchg
cmp
bound
mov
rclb
xorb
push
daa
fnstenv
rclb
jmp
add
ljmp
xchg
xchg
xor
dec
loopne
ja
sbb
cmp
nop
mov
js
mov
xlat
bndldx
jns
mov
pop
jno
mov
sbb
aad
and
inc
movsb
push
movsb
or
pop
cmp
hlt
mov
pop
test
aad
fwait
sbb
push
rcl
daa
pop
sub
fldt
mov
add
adc
dec
loope
nop
mull
xor
repz
xchg
xchg
pop
mov
push
inc
out
jnp
and
mov
push
inc
sbb
out
xchg
sbb
aas
pop
jne
cmp
inc
scas
pmulhuw
fimuls
jb
lahf
xorb
inc
dec
push
add
and
xchg
and
and
mov
leave
add
rolb
jle
push
cs
stos
icebp
or
pop
ljmp
cmc
inc
and
jnp
or
push
xchg
xor
add
aam
data16
andb
sub
shrb
and
mov
std
sti
mov
cwtl
jl
pop
stos
sbb
arpl
and
xchg
jb
bound
sbb
cli
adc
add
test
or
mov
scas
rcll
pusha
out
mov
ret
insb
aad
add
js
sbb
pop
sub
pop
push
stos
jp
inc
dec
aad
dec
sbb
pop
xor
and
xchg
mov
pushf
imul
mov
push
pop
cmp
cmpsb
iret
int3
pop
fwait
and
pop
test
adc
sbb
rcrl
adc
scas
cwtl
out
xchg
icebp
ficomps
pop
and
aam
and
pop
xor
jnp
push
iret
adc
mov
shrb
dec
das
shrb
inc
inc
rcrl
out
mov
lods
mov
cmp
fbstp
mov
or
push
loopne
in
insb
loopne
jae
pop
out
xor
push
push
aaa
pop
in
sbb
insb
sbb
xor
pop
sbb
in
jmp
int3
in
sahf
mov
add
pusha
adc
dec
push
ret
mov
xor
icebp
test
sbb
and
push
stos
inc
push
in
adc
push
imul
addr16
jns
shl
loope
je
insb
add
cmp
xor
cwtl
fwait
push
jbe
and
adc
inc
push
pop
push
lret
cli
mov
repz
mov
sub
mov
mov
mov
add
xchg
mov
pop
inc
xchg
pop
jge
pop
xchg
in
cmpsl
sbb
scas
jge
push
jl
cmp
push
mov
stos
loope
out
pop
mov
dec
dec
push
pop
jns,pn
mov
inc
sbb
adc
add
cmp
fstp
jns
lea
lock
test
aas
push
add
into
cmpsl
in
push
iret
jb
push
mov
xchg
int3
add
push
or
les
out
or
push
jecxz
jae
mov
scas
std
pop
adc
lret
ret
scas
fcompl
jp
leave
jg
pop
pusha
pop
xchg
imul
lea
sahf
xor
insb
mov
lods
mov
jno
pop
lods
jp
idiv
mov
push
sub
stos
jmp
cmpb
push
pop
jne
pop
das
cmpsl
pop
std
xor
xchg
mov
adc
fsubrs
scas
push
add
rorb
jg
sbb
pop
pmulhuw
and
sub
cmp
or
push
dec
fnsave
xor
lods
shll
pusha
dec
outsb
shlb
movsb
add
jmp
sbb
mov
pop
cmp
jge
pop
pop
loope
shl
adc
mov
jae
aas
xor
sahf
mov
mov
add
and
cli
mov
repz
fs
mov
fldenv
cwtl
pop
outsb
sti
or
rcr
mov
popf
push
sbb
jmp
ficompl
mov
pop
cmpsb
mov
mov
fcmovne
mov
das
jecxz
loope
movl
popa
mov
lret
mov
push
or
in
rcrl
cwtl
cmp
and
fmull
mov
push
rcrb
cltd
incb
push
adcb
push
arpl
push
inc
sub
lcall
nop
mov
data16
inc
enter
pop
inc
mov
fistl
daa
jecxz
out
lret
ret
mov
rorb
addr16
inc
aad
data16
scas
adc
sarb
pusha
cmc
ss
pusha
cwtl
and
mov
sub
lods
iret
aaa
data16
test
sub
rcrl
dec
xchg
jbe
pop
sahf
mov
inc
rcll
test
adc
push
xor
pop
out
scas
mov
push
inc
insl
push
das
sub
loopne
ljmp
dec
ret
filds
out
adc
pushf
aaa
mov
sub
aaa
push
stos
dec
xchg
sub
add
mov
cmc
mov
xor
popa
cmpsb
push
add
aam
sub
push
nop
ss
dec
pop
mov
out
add
xor
fldcw
push
jmp
inc
popf
mov
mov
and
iret
cmpsb
mov
les
cld
push
mov
dec
dec
sub
sbb
push
push
xchg
cltd
xchg
xchg
mov
sbb
dec
daa
fdivrl
adcl
sahf
or
mov
and
push
clc
test
icebp
mov
test
std
sti
ss
cmc
sub
sub
lret
movsb
cmpsl
in
jmp
ror
stc
jecxz
xchg
push
jb
xor
pop
or
outsl
loopne
fstp
into
lcall
test
cmp
fldl
cld
cmp
sbbl
cltd
mov
out
pop
psraw
cmp
popf
mov
outsl
insl
repz
or
fiaddl
cli
dec
fstps
fmull
cmp
push
xchg
adc
push
adc
cli
nop
icebp
adc
jmp
scas
scas
mov
jg
mov
movsl
insl
jae
ljmp
sbb
idivl
push
mov
jecxz
neg
shlb
sub
mov
int
push
in
lea
jecxz
loop
js
lcall
je
and
mov
nop
imul
dec
mov
pop
or
idivb
sub
push
and
jae
fisttps
fs
movsb
mov
lret
push
xorb
mov
jb
shrb
inc
dec
xor
test
sub
push
dec
or
jns
or
and
fldcw
jnp
mov
outsl
cmp
inc
mov
ret
jmp
or
pop
shl
adcb
jnp
ljmp
mov
add
push
in
add
fcom
rol
aaa
inc
loop
aam
lret
cmp
mov
push
out
sti
fisttpll
fstpt
test
xor
test
rcrl
mov
mov
mov
mov
sub
or
mov
mov
stos
icebp
fcmovbe
push
and
ret
pop
es
add
and
mov
lea
movsl
xchg
lcall
cmpsl
and
fmuls
mov
stos
pop
es
jns
or
repz
xlat
aas
xchg
ds
jle
in
pop
jge
in
cli
and
test
ret
inc
mov
push
fbstp
sub
in
icebp
mov
fldl
mov
and
sub
inc
cmpsb
movd
sahf
mov
jecxz
jge
pop
sub
fsubr
cwtl
cmp
adc
or
das
arpl
repz
mov
cmp
jle
mov
incl
mov
mov
sarb
shlb
add
js
mov
push
faddp
je
lret
ss
mov
scas
mov
mov
pop
mov
stos
fs
loope
pop
push
xchg
lcall
add
or
push
dec
xchg
lret
lea
fwait
std
push
cltd
dec
arpl
add
dec
jbe
in
inc
adc
call
mov
jbe
ljmp
pop
jp,pn
gs
dec
xchg
and
push
popa
mov
dec
out
repz
mov
adc
mov
loopne
pop
repz
xchg
outsl
add
add
dec
push
adc
pop
jmp
inc
add
movsl
testb
lret
fstpl
sbb
xor
je
rcl
enter
insl
fst
mov
imul
mov
cld
and
add
cmp
movsb
inc
push
sahf
inc
push
sub
jl
out
cwtl
popf
jg
imul
pop
call
jle
into
xor
divl
js
or
iret
mov
push
push
dec
movb
sti
sub
aas
negb
cmp
xchg
sub
xorb
cmc
cmp
imul
pop
jecxz
push
loopne
jmp
jbe
xlat
xchg
push
in
adc
mov
sahf
jbe
or
scas
dec
dec
scas
lods
dec
std
test
and
lret
popf
pop
and
pop
movb
jge
sarl
cmp
insl
and
sub
loop
adc
mov
dec
adc
pop
faddl
sub
sarb
movsl
out
adc
bound
sbb
pushf
jmp
rorb
adc
adc
or
xor
jae
xor
xor
and
into
pop
mov
jecxz
and
xchg
mov
je
popa
xorb
sbb
inc
test
xor
rorb
insl
xchg
scas
fsts
mov
shrb
in
mov
sbb
fldl
sbb
pop
lret
dec
out
int3
fdivrl
mov
mov
fisubs
inc
push
ljmp
movsl
jo
in
adc
jbe
and
pop
mov
and
dec
leave
repz
call
add
fisubrs
xchg
xor
dec
mov
cmc
pop
loope
push
and
mov
fsubrl
xchg
jmp
ror
int3
mov
jne
add
jns
imul
lds
out
adcb
test
nop
test
mov
cmp
cmp
adc
outsl
leave
dec
test
jb
lea
cmpsb
jbe
jmp
dec
fstp
cmp
stos
add
mov
add
add
or
push
repz
pop
mov
stos
icebp
mov
sbb
popa
mov
mov
shll
cltd
and
adc
shr
pop
xchg
scas
dec
sub
jo
mov
mov
fisubrl
lods
push
cmc
mov
pop
mov
mov
jb
inc
ss
jno
fdivp
mov
pop
scas
jmp
adc
mov
jmp
fnsave
dec
xchg
roll
add
test
pop
or
push
add
jmp
loopne
ss
movsl
mov
mov
push
cli
adc
or
sbb
sbb
fnsave
cmp
or
inc
fsubl
scas
scas
pushf
pop
clc
lret
test
sbb
adc
dec
sub
shrb
add
adc
test
push
and
adc
xlat
mov
sbb
mov
xor
repnz
mov
fnstcw
adcl
fld
inc
fnsave
jge
jae
dec
xchg
rorb
insl
not
nop
mov
pushf
push
ret
js
cmp
sarl
cmp
sbb
rcr
loop
cmpsb
pop
loop
sarb
mov
shrl
mov
icebp
lahf
pop
adc
jae
outsl
sahf
cmp
mov
ficomps
xchg
sub
adc
add
cmp
inc
pop
movsl
mov
movsb
decb
es
mov
lods
xor
scas
mov
inc
and
push
sbb
push
xor
jae
cs
call
dec
sub
and
ficomps
scas
cmp
dec
push
xchg
cmp
jo
loopne
mov
filds
add
idivl
mov
add
adc
je
add
inc
in
pop
or
push
or
movsb
lcall
xor
mov
in
loop
outsl
cmc
movb
mov
or
mov
shl
repz
out
mov
sub
popa
xchg
dec
push
in
xlat
and
lods
cltd
or
xor
sub
lods
into
cmpsb
addb
jo
and
inc
fistps
scas
jge
pushf
xor
inc
inc
faddl
cmp
jo
cmp
arpl
inc
fstpl
and
ret
sub
cwtl
mov
incb
cmp
pop
stos
fs
clc
imul
jl
cmp
cmpsb
dec
popa
scas
ror
mov
sahf
int3
dec
pop
out
popa
data16
mov
pushf
lea
jecxz
jae
fidivs
sbb
or
push
sub
mov
pop
repz
mov
jo
enter
dec
pop
paddsb
lcall
adc
aas
push
sub
or
dec
jb
push
push
shl
fdivrs
inc
lahf
loopne
pop
js
fstpl
stos
mov
lods
jnp
fcmovbe
inc
neg
xor
push
pop
rorl
cmp
movd
cmp
dec
leave
lea
fadds
dec
and
mov
add
cmp
fisttpll
or
or
pusha
xchg
mov
ja
lods
mov
cmp
insb
inc
leave
push
loopne
push
sub
lods
cs
gs
lcall
push
lcall
mov
lret
scas
dec
jl
or
lea
mov
ficompl
xchg
lahf
cmc
pop
xor
jle
rol
insb
sbb
xchg
dec
mov
ffreep
adc
mov
inc
mov
xchg
test
push
fstl
or
adc
scas
negl
sbb
sbb
add
lea
lea
push
mov
mov
scas
jp
std
xchg
dec
sub
dec
cmp
pop
fists
cld
inc
lds
cmp
icebp
jb
cmpb
push
pop
jnp
pop
mov
mov
scas
lock
pop
sub
inc
add
jo
xchg
out
inc
sti
popf
push
mov
rclb
lcall
xlat
shll
pop
add
mov
cs
sub
lcall
pop
in
fldcw
jmp
mov
sbb
sub
jmp
mov
or
gs
jo
in
cmpsb
mov
repz
rcrb
jae
arpl
test
sbb
orl
push
loopne
mov
aam
leave
testl
push
adc
lea
fiadds
sbbl
pop
cmpsb
push
rcrb
pop
js
iret
xorl
test
stc
in
add
dec
fs
movl
push
xchg
add
inc
sub
fmul
popa
dec
dec
aas
mov
adc
mov
mov
stos
int3
push
xor
aad
rdpmc
push
ds
push
adc
js
push
or
inc
sbb
xchg
sbb
out
adc
aam
sbb
pop
inc
push
adcl
and
adc
fisttps
nop
jo
repz
fidivl
pop
fldt
jecxz
xor
dec
push
loop
xor
test
push
add
push
cwtl
inc
in
lret
ret
in
sub
pusha
bound
or
dec
add
xchg
outsl
cmpsb
lods
test
or
lea
jbe
mov
data16
sub
inc
adc
dec
addr16
repz
sub
out
cmp
and
add
push
sbb
les
stc
ss
fistps
scas
mov
inc
outsb
push
ss
cmp
mov
in
xchg
dec
outsb
sarb
xchg
pusha
arpl
loope
out
aam
xor
cmpsb
cmc
fistpl
ds
std
push
scas
test
ss
pushf
jmp
sub
inc
movsl
mov
sbb
pop
dec
pushf
fstp
sti
int3
iret
cltd
xchg
inc
mov
jb
push
sub
and
pop
js
ret
inc
lock
mov
outsl
mov
xlat
insb
pushf
mul
lahf
je
cmp
sbb
push
or
out
mov
call
lea
lcall
add
ja
sub
popa
sbb
stos
nop
sub
clc
and
lea
xchg
test
mov
dec
jbe
pop
ljmp
dec
mov
test
or
push
fcoms
je
das
cli
mov
lock
sbb
cwtl
push
pop
mov
mov
push
mov
repz
pop
pusha
mov
jl
cltd
mov
sbb
push
xlat
jle
cmp
fidivs
mov
push
push
ret
jp
pusha
out
jb
mov
das
or
pop
adc
loopne
lods
cmp
pop
movsb
icebp
test
and
cwtl
test
sub
aam
sbb
push
in
jp
gs
add
filds
or
mov
xchg
pslld
pop
scas
loop
push
inc
jo
xor
mov
and
or
push
cmp
bound
xchg
sbb
add
jg
mov
popf
adc
xchg
mov
adc
pop
pop
lods
lret
sbb
and
or
pop
fisttpll
ljmp
pop
adc
ret
inc
xor
sbb
sahf
dec
dec
repz
fiadds
rcr
insl
pop
test
lahf
pop
xor
and
jb
movlhps
pop
scas
mov
lret
add
push
push
js
xchg
inc
push
insl
mov
dec
pop
out
lock
and
dec
mov
daa
inc
mov
inc
or
test
xlat
mov
ret
push
div
cmpsl
lahf
icebp
xor
mov
sarb
stos
ficoml
lods
mov
in
dec
sbb
push
mov
mov
cmp
fcoml
jb
icebp
pop
lea
movsl
sbb
xchg
into
movsb
pop
test
push
push
jp
imul
sub
mov
jle
stos
fcomps
sarl
mov
jne
out
mov
jns
cmp
jno
sub
jno
movsb
sarb
sahf
push
inc
repz
jmp
imul
out
into
popa
xchg
cs
aad
leave
scas
jmp
inc
inc
out
xchg
cmp
mov
fisubrl
leave
xchg
sbb
insl
add
aad
ja
cs
ret
arpl
pop
sub
or
mov
lret
mov
jns
cs
mov
imul
aad
adc
outsl
push
push
inc
in
cmp
pop
sbb
test
in
jb
jecxz
es
in
sub
test
es
push
fdivr
adc
test
jbe
inc
inc
dec
mov
xchg
push
dec
and
cmpsl
fstpt
cmp
adc
jne
outsb
adc
movsb
hlt
add
mov
lock
imul
test
pushf
orl
popf
sub
add
pop
dec
icebp
xchg
outsb
inc
and
or
push
pop
jp
xlat
adc
mov
adc
jg
xchg
xchg
in
mov
mov
cmpsb
in
jnp
sbb
xor
shll
cmp
mov
fistps
add
arpl
mov
xor
lcall
sbb
jg
or
adc
dec
stc
jnp
and
cld
jge
or
lods
rorb
gs
dec
add
cmpsb
sbbb
sbb
sbb
dec
push
dec
pusha
sub
movsl
ljmp
inc
fcom
ds
xor
scas
imul
cmc
mov
pop
outsb
in
lods
scas
jge
outsl
and
insl
in
mov
lret
rcrb
cs
dec
jo
sbb
adc
mov
add
cmc
and
scas
cltd
std
sti
movsb
sub
rol
xchg
push
jb
push
pop
cmp
test
xor
sbb
sbb
bnd
mov
out
xchg
scas
jne
inc
sub
enter
es
fndisi(8087
ja
sbb
dec
out
mov
jge
loope
outsl
jns
inc
dec
lcall
lret
jb
fwait
outsl
out
je
dec
mov
push
cmpsl
popa
sarl
mov
mov
iret
arpl
push
lret
cmp
aaa
fucomip
fbstp
mov
mov
aam
mov
jb
out
jno
add
sbb
xchg
addr16
push
popf
bswap
addr16
jp
call
lret
jge
pop
enter
sbb
lret
xor
cmpsb
ret
add
xor
test
mov
pusha
test
insl
popf
or
lods
dec
xor
cmc
pop
insb
inc
cmpsb
sti
push
int
test
data16
push
icebp
in
or
mov
add
xor
mov
mov
push
lret
stc
cmpl
mov
aaa
jne
cmpsl
je
lock
rcll
add
sbb
xor
movsl
sbb
mov
insl
xchg
xchg
lods
xchg
and
mov
and
lret
add
rorb
mov
jl
push
daa
stc
shll
cmpsb
push
jo
scas
loope
mov
push
fistps
mov
inc
push
sub
popa
out
out
mov
and
cmp
xchg
push
aad
pop
jae
scas
and
jge
xchg
daa
repnz
mov
data16
ja
dec
pop
lret
and
orl
das
mov
push
pop
add
push
cmp
mov
jg
inc
sbb
fs
mov
push
or
and
xchg
adc
push
xor
pop
fadd
les
icebp
adc
pushf
or
stos
sbb
pusha
pop
sbb
or
xor
cmpb
fdivrs
jp
add
bound
and
shlb
mov
inc
cmp
mov
add
or
movsl
xor
push
jp
push
mov
push
mov
pop
sub
dec
push
int3
loopne
inc
lods
in
lahf
fsubl
xchg
loopne
mov
in
daa
xor
or
pushf
out
add
mov
fstps
lcall
shll
and
cld
ss
out
insb
cli
inc
xor
cmpsl
sahf
fbstp
sub
std
xchg
mov
test
push
and
jno
sbb
cmp
ret
add
push
pop
sbb
test
jb
mov
dec
movsb
les
or
add
push
insb
mov
fwait
into
imul
xchg
scas
ja
adcb
out
movsl
in
sarb
js
cmp
mov
sbb
in
fs
mov
lahf
aam
push
int
inc
in
add
mov
mov
fwait
inc
inc
loop
test
in
push
inc
jge
inc
fdivrs
mov
ret
cmpsb
xchg
jbe
je
pop
fldcw
ds
shrl
sbb
js
int
xchg
jl
xlat
sbb
xchg
mov
pop
cmp
loope
lcall
enter
add
sub
xor
adc
roll
push
lods
js
out
push
mov
sub
lret
adc
out
adc
add
mov
icebp
stc
and
jo
roll
inc
sbb
movsb
add
sbb
push
mov
adc
popf
stos
mov
sahf
int
cli
pushf
mov
cmp
jbe
ret
mov
pop
sub
mov
hlt
pop
stc
mov
scas
add
lahf
dec
sub
push
dec
push
cld
aaa
into
lahf
outsl
add
pop
fists
jno
inc
shll
out
pop
push
adc
push
js
std
jno
cmpsb
into
pop
sbb
mov
sahf
jb
dec
push
mov
sbb
adc
out
pop
outsl
outsb
es
sar
or
popf
mov
mov
decb
sub
movsb
cwtl
mov
shll
and
mov
lret
mov
push
pop
daa
xchg
rcr
cmpl
cwtl
or
xchg
jae
cmpsb
leave
or
cmpsb
add
subb
cmp
js
mov
cmp
cmp
push
je
xchg
or
int3
ja
pushf
stos
fsin
sbb
dec
leave
aad
xor
sub
ds
arpl
or
fisubs
jle
inc
mov
mov
lds
out
adc
mov
fsubs
pop
xor
and
pushl
scas
mov
aaa
or
cmpsl
xor
or
sahf
xor
popl
sti
std
in
adc
test
fcomp
faddp
inc
dec
dec
adc
fld
test
dec
arpl
inc
push
movsl
jmp
mov
sbb
aas
in
je
sbb
mov
popf
mov
int
inc
pop
bound
or
xor
pop
xor
ja
adc
ret
and
movsb
jnp
icebp
lods
cmp
pop
push
scas
stc
push
shll
shlb
sub
iret
hlt
jmp
test
cmp
fbstp
ds
ds
jle
loopne
popf
xchg
mov
adcl
hlt
and
nop
pop
mov
cmp
repnz
mov
xor
add
cld
lea
push
push
loop
and
dec
repnz
std
sub
in
pop
xchg
mov
mov
dec
fistl
cmp
lods
popf
sbb
fbstp
lods
xlat
mov
aaa
in
push
lods
das
out
push
roll
fs
daa
push
jg
fadds
jmp
cmp
cmpsb
mov
idivb
inc
xor
into
dec
cmpsl
xlat
insl
lods
cmpsb
pop
mov
push
jne
into
loop
dec
inc
xor
and
cltd
mov
cmpsb
fwait
adc
mov
add
rol
jl
xchg
or
nop
sbb
cltd
mov
pop
mov
sbb
sahf
cmp
adc
sti
jb
xchg
in
test
ja
xor
lret
into
xchg
in
jne
or
imul
int3
sub
inc
imul
aas
fwait
out
push
fxch
dec
xchg
int3
mov
or
and
sbb
inc
outsl
popa
cmp
aam
add
cmpsl
enter
ror
push
mov
pop
mov
pop
dec
add
fisttps
repz
aad
sub
jge
inc
scas
cmp
cwtl
cwtl
lret
dec
out
cmpsl
ret
je
test
js
fxch
in
cs
adc
insb
dec
add
cmp
shrb
faddp
xor
jo
jno
dec
or
mov
mulb
loopne
sub
js
inc
fsubs
cltd
cmpsl
imul
sub
adc
xchg
ret
nop
loop
or
loopne
ss
push
push
ss
stos
xorb
aaa
cltd
jb
mov
cmpsl
or
in
xchg
jmp
sbb
sbb
clc
push
iret
sahf
xchg
cmp
push
add
es
aaa
jns
mov
nop
ja
movsl
xchg
insb
mov
fs
and
gs
out
and
adc
push
leave
mov
push
pop
mulb
rcrl
mov
push
loope
push
inc
or
xor
xchg
push
ret
or
pop
outsl
xchg
pop
stos
mov
sbb
sub
and
or
pop
push
push
mov
dec
mov
je
sahf
inc
jns
call
push
and
mov
aad
mov
xchg
push
jl
push
das
push
mov
std
and
jb
push
js
rcr
pop
repz
cmp
jno
and
mov
gs
sub
out
jge
fdivs
mov
pop
je
lahf
idivl
add
mov
test
mov
jg
insb
pusha
mov
shl
pop
xchg
fdivrs
arpl
pushf
pop
pop
les
call
mov
repz
pushf
push
fildl
std
test
xchg
outsl
cmc
jp
xor
xchg
sbb
xchg
jns
jge
pop
mov
pop
or
pushf
fdivr
jmp
mov
pop
mov
and
lock
and
add
loopne
stc
mov
dec
out
mov
inc
xchg
cltd
mov
mov
es
scas
jge
mov
pop
imul
xchg
popf
xchg
shll
pop
call
lock
mov
pop
push
add
push
enter
stos
mov
sbb
jg
jg
and
jnp
aam
in
and
loop
aaa
stos
jnp
ds
fldpi
popa
xor
outsb
jbe
and
jbe
std
das
mov
in
les
faddl
add
jb
sub
mov
dec
push
push
jge
jle
enter
jge
or
and
leave
iret
push
or
xchg
pop
add
jb,pt
daa
cmp
test
cli
fdivrl
jne
roll
pusha
mov
clc
add
fistpll
lea
int
jns
jmp
mov
fucompp
xchg
rcrb
pop
mov
sub
out
ja
dec
cwtl
jg
lcall
mov
ret
or
inc
std
xchg
out
iret
addb
pminub
or
jae
out
jns
xchg
cmp
pop
ss
jo
mov
cmpb
mov
adc
aam
inc
icebp
sti
push
movsb
mov
sub
ss
sbb
mov
xor
jecxz
repnz
mov
mov
gs
mov
cltd
popl
enter
cltd
add
sti
mov
loop
sbb
out
mov
pop
xlat
inc
dec
in
cld
dec
jo
das
shll
cmp
xchg
sbb
add
shlb
shrl
sub
mov
xor
mov
enter
in
daa
sbb
add
jne
mov
xor
cmp
cmp
lock
repnz
and
and
pop
test
lods
sbb
sbb
repz
or
cs
pop
test
adc
sub
add
bound
sbb
addl
cwtl
cltd
lds
outsl
xchg
dec
dec
hlt
jne
loopne
xor
bound
xchg
sahf
lods
mov
mov
push
cmpl
test
push
out
aas
das
jmp
out
sbb
jno
sub
mov
imul
scas
repnz
push
mov
test
repz
mov
popf
mov
insb
mov
pop
push
outsb
mov
dec
and
pop
jnp
sti
fcmovnb
fistl
jl
sub
add
hlt
sub
xchg
sub
inc
maskmovq
jno
ret
scas
fdivr
add
mov
push
jnp
icebp
mov
jmp
repz
lahf
and
add
xchg
cld
xor
lds
xchg
sub
xchg
xchg
mov
dec
shll
jl
iret
jnp
mov
push
adc
pop
jle,pt
dec
sbb
xor
rclb
fnstcw
or
ss
jns,pn
sub
repz
ffree
sub
cmp
ds
or
pop
mov
in
out
ljmp
add
andb
mov
stc
cmpsl
mov
fcmovu
in
cmp
inc
push
xor
pop
push
into
push
inc
push
lea
inc
sub
xchg
dec
sbb
adc
test
aaa
lea
fisttps
add
repz
daa
dec
pop
in
sbb
mov
mov
andl
adc
call
call
out
cmpsb
and
fisubs
pop
sbb
enter
inc
mov
mov
fnstcw
dec
pop
mov
push
in
jae
popf
mov
test
les
pusha
and
out
pop
das
mov
lods
dec
mov
es
xor
mov
jp
inc
jecxz
mov
sbb
xchg
addr16
inc
cmp
int
lret
dec
push
jno
xchg
adc
fists
xlat
lret
xor
mov
divb
jle
aaa
js
xorb
sahf
scas
add
and
push
jl
enter
xor
repnz
and
adc
adc
pop
adc
aad
ret
scas
stos
rcl
int3
cmp
dec
push
insl
push
cwtl
fxch
cmp
sbb
arpl
xchg
mov
or
in
rol
jns
add
nop
xorl
insb
pop
sbb
in
stos
movsl
ret
adc
in
lcall
addr16
mov
mov
push
inc
repnz
dec
add
sti
cld
adc
jnp
daa
inc
dec
push
out
jno
xor
mov
sbb
pop
jne
mov
jg
jle
adc
cmp
mov
jge
cmc
fwait
inc
cmpsl
dec
jnp
and
jle
pop
mov
cmp
mov
adc
fs
fistpl
loopne
inc
sub
insl
in
sahf
lock
push
and
fists
or
mov
and
sti
sti
push
daa
jmp
push
xchg
test
adc
xor
sbb
cmp
test
stos
shlb
mov
pop
pop
outsb
pusha
andb
push
stos
mov
pop
adc
fbld
into
inc
xchg
popf
pusha
testb
sahf
mov
fs
in
das
or
xlat
insb
jmp
enter
adc
and
sbb
or
iret
shufps
push
ljmp
sub
dec
stc
je
mov
pusha
dec
dec
wbinvd
rol
arpl
mov
push
mov
in
mov
fcomip
dec
fcoml
cli
mov
mov
jp
mov
xchg
mov
mov
jmp
in
aam
pop
jecxz
mov
or
pop
pop
or
push
push
mov
inc
xlat
das
xlat
mov
mov
mov
sbb
jmp
sbb
mov
cmp
push
add
or
rcll
push
je
or
cmp
xor
int3
inc
out
adc
aaa
jnp
pop
xor
lods
aas
hlt
testl
shlb
loope
imul
xchg
sbb
dec
mov
adc
jbe
inc
inc
pop
push
push
rcrl
sbb
cli
xchg
test
inc
test
aad
add
test
mov
add
test
gs
jo
enter
jns
ds
pusha
push
addr16
ret
xlat
out
pusha
push
mov
paddsw
nop
jg
fnstenv
adc
sub
add
ret
pop
cmp
xor
sbb
outsl
adc
sbb
pop
ficompl
pop
or
ds
xchg
jmp
push
cmp
js
into
test
mov
jle
adc
adc
ret
fbld
sarl
jecxz
lods
cmpb
cmp
push
mov
gs
and
sbb
cltd
popf
or
movb
sarb
cmp
div
sub
add
data16
sahf
xorl
jno
movsb
sti
cli
xchg
cs
xchg
adc
push
loope
stos
mov
mov
inc
mov
je
outsb
pop
add
out
fiadds
mov
dec
or
in
or
xchg
test
ret
mov
mov
cld
dec
push
sub
or
sub
stos
adc
bound
sbb
fisubrs
or
xchg
scas
shrl
sbb
mov
xchg
jb
xchg
pop
or
mov
andl
repnz
mov
imul
pop
imul
xor
jecxz
rorb
aad
aad
inc
mov
cmpsl
add
push
lea
outsb
mov
aaa
das
inc
sbb
adc
nop
into
aaa
jle
jbe
push
fwait
test
daa
or
xchg
loopne
pop
bound
pop
add
cmp
mov
int3
pop
mov
push
fnstsw
cwtl
cmp
rorl
outsl
shlb
cmp
adc
push
and
push
jg
adc
arpl
adc
jbe
jmp
aaa
sub
cld
jle
ja
fsubs
dec
pop
cwtl
and
jb
inc
cmp
stos
jnp
imulb
pop
sbb
mov
mov
push
leave
pop
aaa
out
out
xor
sub
push
flds
add
stos
ljmp
leave
adc
repnz
out
push
stos
mov
jo
or
dec
out
push
std
xchg
adc
dec
jmp
xchg
shrb
xor
ss
ss
push
adc
stos
mov
ja
jbe
lahf
mov
cmp
out
pop
jge
jbe
hlt
shll
mov
xchg
adc
and
or
bound
cmpsl
ficompl
sbb
add
and
push
test
dec
adc
sbb
mov
insl
les
add
cltd
xor
mov
push
out
xchg
jbe
in
sub
sbb
adc
pop
push
pop
pop
sbb
fmulp
adc
or
pop
mov
add
cwtl
adc
add
pop
xor
add
imul
inc
dec
xor
fisubs
shr
mov
xlat
mov
sbb
fisubrl
mov
pop
mov
dec
xorl
fdivrl
out
movsl
cli
adc
sbb
dec
fistl
add
js
mov
mov
xchg
jbe
sbb
mov
and
inc
pop
decb
xchg
mov
movsl
add
sarb
std
pop
popa
lods
jge
jl
testb
mov
roll
adc
sbb
inc
lcall
outsb
mov
pop
push
mov
fmuls
pop
fisubl
rclb
xchg
in
fs
scas
xchg
or
and
pop
cli
jnp
or
pushf
jle
mov
ss
out
xchg
pop
xchg
jmp
hlt
and
xchg
aaa
dec
fisttpl
mov
jno
cmpsb
sub
dec
mov
sbb
icebp
cmp
mov
adc
das
lea
xor
test
mov
out
xor
scas
sub
or
push
xchg
ja
xor
js
push
cwtl
and
mov
push
mov
inc
ds
ret
jge
and
enter
rcpps
mov
loopne
adc
push
fldt
repz
dec
outsl
sub
jno
dec
cltd
push
mov
jne
shr
out
lds
sbb
mov
scas
ljmp
push
incb
xor
movsl
aad
cs
es
sub
adc
adc
test
in
cld
jne
and
jle
repz
mov
mov
adc
pop
push
jno
xor
add
popf
xor
movsl
push
lret
push
rol
jns
ret
insb
xor
ds
test
cmp
fwait
xor
jmp
push
insl
or
xor
pusha
jbe
lret
lock
sbb
mov
push
stc
or
mov
or
popf
cld
push
les
repnz
movsl
sbb
xor
lahf
shr
mov
in
cmp
in
push
fisubrs
cld
xchg
notb
lret
lea
jno
sbb
add
xchg
popl
sbb
fisttps
or
pop
sbb
imul
push
cmp
inc
mov
xchg
dec
pop
je
ljmp
dec
mov
bnd
leave
push
test
or
xor
imul
fcomip
hlt
mov
mov
mov
cli
data16
aad
inc
push
repnz
das
xor
aam
jbe
lods
or
xor
cld
mov
adc
lds
jmp
xchg
testb
or
jnp
jmp
pop
mov
loope
mov
insb
sub
or
into
adc
inc
cmc
adc
ljmp
rep
add
in
das
mov
shrl
pusha
xor
jl
adcl
xor
xchg
std
xor
test
inc
fdivl
mov
inc
dec
inc
or
xor
outsb
rolb
push
sarl
jmp
mov
mov
adc
dec
jp
roll
dec
xor
sbb
jmp
out
dec
shll
hlt
sahf
mov
xchg
mov
mov
inc
xchg
sub
hlt
dec
das
and
popf
and
outsb
adc
jns
inc
sti
shrl
fbld
rcrb
je
jmp
mov
ret
mov
inc
loopne
adc
and
fsub
xor
cmp
sub
cli
mov
adc
pop
mov
push
jns
xor
sbbl
xor
or
insl
mov
cmp
out
xchg
icebp
sbb
out
dec
mov
mov
adc
mov
sbb
repnz
and
mov
push
popa
loope
or
xor
testl
dec
dec
dec
lds
add
sbb
mov
cld
adc
push
test
fdivr
cld
jno
xchg
imul
rcll
push
daa
dec
in
dec
add
mov
mov
lea
sahf
orb
fmuls
push
xor
lock
mov
jecxz
push
js
ss
jnp
and
sub
in
hlt
cmp
push
sbbb
and
mov
es
cli
jmp
inc
les
or
pop
pop
scas
aas
cmp
sarl
pop
int
loope
mov
aas
pop
stos
pop
je
push
arpl
icebp
dec
outsl
sbb
mov
pop
dec
sub
fdivs
imul
dec
lds
push
aaa
inc
je
push
scas
jg
loop
mov
subb
mov
mov
add
iret
pop
bound
inc
insb
pop
in
movsl
or
orb
and
ret
idiv
add
insl
cltd
into
or
jnp
arpl
or
sub
xor
sub
add
fnsave
nop
pop
push
cmp
add
inc
pusha
add
jl
mov
lds
jb
in
movsl
push
and
fsts
dec
loop
orl
scas
jle
aad
cmpsb
rorl
lds
fistps
push
mov
loop
xor
or
inc
loope
adc
pop
or
or
push
in
roll
cmp
push
inc
push
adc
mov
cli
jae
pop
push
xor
push
pop
push
push
pop
mov
jp
fistpll
pop
sar
movsl
data16
mov
lahf
fiaddl
lret
cmp
in
movsb
mov
das
jno
divl
je
mov
xor
adc
rcrl
cli
xchg
jns
push
cmp
rolb
mov
xor
dec
xchg
ret
jb
aad
aam
add
lods
adc
mov
in
movsl
mov
enter
cmp
add
fmuls
sub
sbb
les
shr
mov
dec
mov
push
call
insl
jbe
inc
sub
inc
push
movsl
test
push
lret
arpl
inc
sub
and
xchg
pop
lret
cmp
cmpsl
inc
test
stos
vpmovmskb
sti
pop
roll
cmp
and
add
icebp
ss
adc
pop
adc
test
add
fists
pop
cli
jmp
mov
out
xor
std
mov
jns
or
out
out
adc
ljmp
push
inc
call
nop
mov
shlb
jns
lods
or
insb
jns
jp
push
outsl
std
lret
into
sub
jp
pop
cmp
xchg
repnz
dec
add
ret
cli
push
sti
rcrb
sbb
fmul
test
rcr
dec
testl
xchg
jne
hlt
jge
mov
call
push
imul
dec
adc
mov
rolb
fisubl
xchg
push
jg
out
adc
ds
and
inc
jle
sti
pop
mov
popf
das
xor
lcall
cmp
call
push
insl
arpl
insb
sbb
in
xchg
adc
inc
push
shr
adc
xchg
mov
mov
mov
out
sbb
pop
mov
outsb
imul
mov
mov
push
inc
in
test
mov
cmp
dec
sub
les
lds
aaa
outsb
push
mov
pop
mov
mov
or
mov
xchg
les
mov
scas
push
cmpsb
jb
sub
je
push
andl
xchg
clc
add
xor
leave
push
jnp
push
ret
pop
pusha
out
dec
pop
add
fnstcw
or
pop
loope
pop
pop
lods
cmpsb
iret
call
fdivrs
mov
and
cmpsb
div
inc
in
outsb
fistpll
adc
mov
leave
lods
pop
sti
rcl
jbe
enter
adc
insb
jp
jbe
cmp
inc
cmp
inc
sbbl
inc
push
mov
cmp
mov
sbb
hlt
aas
xchg
mov
icebp
mov
xor
mov
and
xchg
dec
loopew
rcll
out
dec
xchg
inc
addr16
dec
inc
outsb
dec
mov
lods
or
xchg
repnz
movups
and
sbb
cmp
repz
js
lds
adc
cli
stc
aam
loopne
aaa
cmp
testb
pop
je
jns
sub
outsb
ret
outsb
aam
sub
decl
xchg
aad
mov
cmp
jbe
bnd
pop
lret
movsb
stos
jmp
lds
xchg
jbe
sarl
iret
mov
out
sub
fildll
mov
xor
daa
rclb
inc
jo
cmpsl
jb
inc
xor
ret
mov
enter
xor
mov
ja
cwtl
sbb
dec
arpl
add
enter
jbe
sub
cs
sub
sbb
mov
or
inc
mov
mov
test
push
pusha
jp
sub
or
or
mov
loope
lea
das
adc
stos
jb
movl
test
adc
loope
or
icebp
outsb
pop
push
pop
stos
pop
daa
pop
or
or
sub
movsl
add
mov
loop
push
push
cmc
xchg
ja
jl
outsb
mov
aam
push
ret
int3
in
je
in
test
xor
outsb
xor
or
cmp
adc
push
pop
cli
xchg
mov
pop
aam
push
pushf
das
pop
addr16
pusha
lret
mov
movb
sub
nop
inc
popl
dec
push
pusha
add
add
jo
out
test
not
adc
iret
cltd
jle
adc
leave
pop
stos
rcr
test
and
inc
and
loope
cmc
in
jb
out
sub
cs
and
jbe
clc
and
lods
xor
xorb
jnp
sub
loopne
inc
testl
inc
mov
push
cmpsl
lds
inc
dec
mov
stos
mov
ret
jns
xchg
mov
cmp
and
test
cmpsb
shll
out
imul
xchg
dec
inc
and
dec
in
and
mov
push
movsl
or
in
and
lea
adc
xlat
sub
stos
fs
clc
imul
test
mov
mov
ret
xorb
jns
cwtl
jmp
pop
jnp
lea
imul
pcmpeqd
mov
add
and
cmp
daa
and
mov
mov
jae
mov
jns
jg
adc
jae
dec
stos
cmc
adc
push
ret
data16
out
pop
ficompl
aam
pusha
adc
in
dec
add
sahf
inc
gs
addb
mov
cmp
pop
stos
sti
and
ja
ljmp
outsl
in
mov
adc
add
mov
incb
adc
pop
loop
cwtl
imul
cli
xor
xchg
add
push
inc
sti
sub
cmp
and
cmp
sub
out
jbe
rolb
call
imul
or
call
mov
adc
ret
inc
insl
arpl
imul
cmpb
pop
pop
cmp
pop
xchg
flds
js
fistps
es
cltd
out
lcall
movhps
xlat
push
mov
sub
pop
add
in
xchg
cmp
xor
shrb
mov
xor
movl
aaa
arpl
jnp
push
scas
adc
mov
cmc
add
jp
mov
adc
outsb
and
lea
mov
stos
lcall
nop
adc
not
neg
jmp
cmpsl
mov
jg
shlb
shlb
mov
aam
sub
ss
fbld
orl
mov
mov
clc
outsl
jmp
into
jne
and
cwtl
jp
push
shll
cli
shr
int
mov
adcb
xor
xor
push
lea
inc
clc
andl
nop
sub
mov
aaa
ret
xor
out
add
pop
data16
xor
lret
icebp
ljmp
inc
dec
lock
mov
aam
fcomp
jns
sahf
fsubrp
fadd
jbe
repz
nop
inc
inc
daa
push
inc
sub
hlt
faddl
mov
adc
xor
inc
xchg
sahf
cli
ja
stc
cmpsl
cmpsb
pop
jle
sbb
pop
xor
pop
outsl
sub
jae
fstpt
push
in
xchg
in
in
sbb
xchg
push
imul
jnp
push
dec
lret
js
inc
inc
jge
rcrl
lea
aas
dec
int3
aad
xchg
out
mov
data16
mov
and
sbb
jb
xor
out
mov
push
mov
lcall
scas
sub
aas
pushf
push
lock
mov
fnstcw
into
add
push
cmc
xchg
stos
bound
stos
sub
mov
xchg
mov
or
outsl
add
or
adc
inc
rorb
lahf
xlat
ret
mov
loop
xchg
pop
sub
js
mov
jno
push
ss
loop
mov
adc
cmp
inc
push
xchg
push
mov
bound
add
dec
mov
xor
stc
int
sub
test
cmp
inc
data16
outsl
fdivr
out
mov
cli
push
mov
mov
stc
clc
push
daa
pushl
test
sbb
dec
add
daa
jb
push
stc
jbe
icebp
xor
fdiv
cmpsl
fistpll
push
add
add
push
xchg
outsb
pop
xchg
pop
cmpsl
loopne
outsb
fwait
sub
rcpps
out
or
sub
ret
jge
testb
jge
cmp
pop
clc
xor
movsl
popf
rol
data16
mov
inc
pop
fwait
push
adc
jmp
popa
mov
shl
push
adcb
mov
in
jl
outsb
pop
rcll
xchg
rcrl
loope
rorb
mov
fs
add
mov
sete
push
cwtl
enter
popa
into
jmp
sub
sbb
fs
out
gs
jge
xlat
cltd
add
mov
sbb
dec
pop
cmp
andl
or
fcmovnu
xor
mov
imul
movsl
mov
xchg
int3
daa
lcall
jmp
or
test
fsqrt
cmp
fldcw
or
addr16
out
adcb
pop
pop
repz
sub
jae
rorl
flds
pop
pop
xchg
aam
addr16
adc
push
test
lds
rcll
mov
mov
rcl
nop
cmc
add
dec
int
xor
enter
js
mov
or
sbb
mov
cmp
mov
xor
loop
add
dec
sub
mov
mov
faddl
jnp
bound
push
dec
std
adc
xchg
test
loopne
push
jecxz
int
pop
mov
loope
and
stos
mov
aas
movsl
push
test
loopne
mov
mov
push
sbb
pop
enter
mov
sbb
xchg
aas
mov
stos
pop
sti
cltd
out
inc
or
inc
lcall
mov
ljmp
test
in
out
adc
in
cmp
mov
test
cltd
ds
adc
out
lock
into
out
xor
stos
shll
mov
push
or
dec
sti
scas
sbbb
outsb
dec
hlt
mov
mov
rcr
in
pop
shll
nop
push
jo
repz
sahf
sub
push
inc
mov
imul
popa
push
in
rclb
pushl
idiv
lahf
frstor
xchg
lods
sbb
std
add
and
mov
les
fdivrl
mov
mov
sti
xlat
pop
aaa
inc
lahf
ret
jp
adc
mov
icebp
lods
sbb
test
je
push
clc
data16
sahf
or
je
shll
push
add
add
cmp
add
test
push
mulb
jae
pop
in
fcoms
sahf
lock
sub
pop
subb
lock
xlat
jg
sbb
sub
idivb
shrl
mov
and
fimuls
std
scas
inc
je
and
das
leave
jmp
data16
insl
xchg
ret
lcall
or
mov
and
cmc
lods
jg
mov
mov
mov
test
mov
sub
lea
int3
push
or
rol
mov
mov
jnp
or
dec
fdivrs
mov
jo
mov
jp
lock
aad
push
fcoms
lret
mov
mov
add
std
lock
mov
inc
inc
out
dec
lock
out
movsl
pop
into
cld
inc
xor
ss
push
movsb
js
cmp
shll
mov
adc
push
pop
jns
push
js
int
add
dec
mov
int
or
mov
push
je
xor
pop
or
dec
jg
xchg
jge
iret
lods
mov
lock
das
mov
ret
insl
adc
call
push
adc
xor
insb
mov
fsub
pop
inc
dec
dec
sub
sbb
sti
or
xchg
fnsave
in
sbb
int3
dec
push
jo
hlt
dec
mov
cld
sahf
jmp
mov
loopne
xor
xor
aaa
dec
jno
orb
pop
cmp
lods
push
lock
mov
or
adc
in
sub
iret
xchg
mov
cmp
adc
push
mov
dec
in
xchg
jecxz
fdivs
call
pop
pop
aam
dec
call
cmc
inc
loope
pushf
out
sbb
in
test
jmp
push
mov
mov
sbb
sbb
mov
sub
js
sub
push
inc
stos
jne
xlat
test
outsl
in
cmp
and
out
inc
lcall
fisubs
jge
inc
movb
call
jl
pop
sbb
push
jmp
sbb
and
inc
jmp
and
inc
sahf
xchg
fwait
pop
divl
add
cltd
sub
fisubl
sahf
divl
inc
jo
xor
call
sub
add
lea
pushf
scas
not
dec
or
push
das
iret
stc
orb
mov
sub
inc
in
icebp
fstpt
scas
push
push
les
sub
popa
aad
sti
or
stc
and
insb
in
xor
sub
sub
mov
xlat
mov
mov
lret
and
push
loop
ficoms
push
mov
repnz
into
xor
fistps
mov
push
cli
pop
mov
push
dec
aam
call
hlt
dec
imul
push
adc
std
shr
push
and
in
xchg
or
sbb
and
lcall
add
ffreep
rclb
pop
es
and
pop
push
mov
mov
fstpt
popf
int
xor
sbb
out
jae
scas
jmp
or
insb
adc
jg
ds
bound
add
std
cmp
push
call
aad
adc
push
dec
mov
sbb
add
adc
popw
repz
es
jb
inc
into
fidivrl
movl
or
sub
cwtl
pop
jg
xchg
sbb
scas
stc
in
mov
rorl
sbb
jae
mov
lea
adc
push
and
xor
arpl
add
jmp
inc
fists
xchg
out
inc
push
cltd
iret
jae
lret
xchg
ja
cli
out
push
adc
mov
in
pushf
mov
push
add
stos
enter
xor
adc
inc
jo
mov
mov
cli
aas
jp
pop
divl
incl
jno
lods
enter
or
in
and
lods
mov
push
stos
das
sbb
das
pop
sbb
lahf
jl
xlat
sub
stos
adcl
xor
pop
out
imul
inc
mov
sahf
lds
insl
test
dec
mov
add
adc
mov
jno
movsl
dec
fwait
mov
imul
test
pop
stc
and
es
push
rolb
and
mov
xchg
push
imul
xlat
ret
jg
and
push
xchg
sarl
push
jle
sub
out
lds
adc
dec
std
lahf
pop
xchg
mov
in
xchg
sub
adc
insb
mov
mov
inc
out
ret
daa
aad
cmp
sub
xchg
lahf
leave
lret
cmpsl
xor
sbb
bndstx
jg
ljmp
push
and
icebp
dec
push
cmp
sub
xchg
push
stc
jle
addr16
sbb
pop
filds
push
cli
ds
or
or
or
cmpb
and
adc
sahf
arpl
xchg
jle
test
ljmp
push
test
xlat
mov
insl
xchg
in
in
ja
push
jl
dec
outsb
into
mov
mov
loop
xchg
pop
testb
das
dec
out
add
rcrb
sub
sub
dec
das
int
or
jo
mov
dec
call
ds
xchg
lds
mov
adc
cs
push
stos
jnp
sub
dec
fs
or
sbb
push
aas
lods
push
xchg
imul
cld
stc
out
mov
fcomps
cmpsb
or
dec
rcl
out
les
dec
mov
sub
adc
loope
aad
or
lods
push
sub
mov
or
mov
push
dec
sti
mov
in
imul
and
xchg
ss
add
test
xor
sub
xchg
add
in
loop
test
dec
adc
cld
dec
mov
cmp
loop
push
mov
divb
push
notl
xor
loopne
mov
xchg
iret
iret
lods
aas
test
and
pop
shrb
mov
and
mov
add
push
xchg
loope
shrl
mov
mov
xchg
pushf
sub
aas
push
cmpb
outsb
and
adc
push
or
out
ljmp
push
int3
push
mov
adc
fs
or
sbb
pop
jns
adc
mov
lret
or
mov
adc
call
xchg
mov
pop
jns
inc
sub
xchg
sbb
push
imul
xlat
jnp
fwait
ret
int
pop
jle
or
fadds
shlb
xchg
in
out
mov
adc
pusha
loop
push
rorl
jg
adc
and
or
fsubl
adc
das
les
adc
inc
icebp
ja
das
scas
adc
shrb
mov
cmpsl
pop
and
ljmp
sahf
pop
insl
dec
adc
cmp
scas
stos
add
movsl
adc
adc
xor
ljmp
or
push
push
js
outsl
stos
rorb
inc
loop
loop
and
lock
sti
setbe
cmp
push
and
sbb
ds
int
jmp
push
sbb
lret
add
std
push
daa
xor
xor
std
jnp
js
sub
cmp
sbb
incb
popf
pop
int3
cmp
imul
rol
cmp
inc
or
sub
dec
rcl
cmp
hlt
je
ret
rcrl
cmp
and
sub
mov
mov
sub
and
call
inc
out
insb
xchg
call
outsl
mov
shll
lcall
push
push
xor
jp
and
mov
dec
mov
adc
scas
call
mov
jge
mov
lcall
mov
loop
sti
pop
mov
mov
pop
icebp
add
dec
mov
nop
rcll
mov
push
orb
pop
mov
adcb
push
flds
sahf
cmc
sbb
lret
lods
dec
pop
arpl
movsl
jge
mov
inc
mov
popa
aad
sti
xchg
sbb
fsincos
cs
out
flds
es
ret
dec
jmp
fdivp
mov
dec
mov
dec
testb
cmp
fcmove
int3
stos
inc
push
nop
sbb
add
jle
inc
jge
es
aaa
mov
cmpsl
cwtl
xor
out
stos
jge
sub
test
aam
ds
add
push
loopne
inc
and
push
jae
mov
stc
icebp
adc
fidivrs
mov
jp
nop
jno
mov
adc
ret
jmp
push
stos
nop
leave
adc
mov
das
loopne
jp
aad
jmp
and
inc
pop
or
out
mov
lcall
lock
popf
imul
nop
ss
push
push
push
negl
and
clc
xchg
cmpsl
popf
daa
mov
dec
or
jbe
inc
mov
or
pop
cs
dec
mov
in
mov
mov
inc
add
jge
jb
cs
std
enter
sti
test
cmp
add
pop
pop
pushf
sub
jg
out
add
sub
mov
xor
out
sbb
rorb
lret
xor
mov
repz
jo
cltd
cmp
out
pop
sarb
mull
mov
jmp
int
nop
mov
mov
leave
mov
jle
xor
xchg
or
jnp
xchg
inc
add
sbb
into
mov
out
addr16
adc
hlt
subb
insl
sub
ja
in
xor
inc
inc
fistps
aaa
xchg
sbb
fdivr
rcl
adc
pop
ret
push
jg
xor
or
icebp
repz
dec
mov
mov
adc
sub
shll
out
cli
in
aas
in
xchg
push
std
test
cmpsl
movsl
sub
into
and
test
mull
pop
dec
mov
inc
inc
dec
pop
scas
cwtl
pop
ss
repnz
loop
cltd
pop
cmpsb
out
adc
js
sub
mov
out
insl
jmp
xor
adc
jno
out
pop
or
fs
sbb
int3
je
cmc
test
dec
push
xor
paddusw
pop
stc
sbb
enter
mov
cmp
adc
das
in
mov
add
fdivl
or
jnp
test
xchg
jp
dec
inc
pop
int3
pusha
cld
lcall
lret
jmp
xchg
lret
dec
sahf
inc
push
dec
les
adc
mull
out
inc
orl
push
rolb
daa
xchg
insb
loopne
lea
sbb
mov
lret
inc
out
shll
sbb
sub
cld
mov
dec
dec
sub
in
aas
shll
int3
xchg
or
scas
xor
sub
test
mov
or
mov
mov
jb
cmpsl
ret
jno
xorl
xor
cmpsb
loopne
mov
xchg
push
inc
mov
and
jge
loop
mov
push
sbb
ds
push
ljmp
sub
call
ret
stos
dec
cltd
xor
outsb
xor
bound
roll
xlat
popf
cmp
sti
adcb
mov
pop
imul
and
jbe
mov
jmp
subl
and
pinsrw
ret
and
into
adc
ss
hlt
les
dec
out
pop
sbb
mov
add
cwtl
dec
outsl
adc
and
shr
dec
xor
fisttps
push
mov
jl
cmp
loope
jp
add
or
stos
out
out
jl
jl
jne
mov
mov
cmpsb
pop
and
sub
fsubl
movsl
push
test
jo
jmp
pop
or
cld
aam
lods
sub
mov
lods
push
lret
cwtl
in
jo
dec
in
testl
add
and
or
fistl
lds
xchg
and
sbb
cld
push
or
fimull
dec
or
insb
cmp
das
daa
sub
lods
rcr
loope
in
mov
in
js
fwait
iret
icebp
stos
pop
adc
adc
out
or
push
mov
dec
xchg
xchg
inc
cwtl
jno
mov
push
mov
inc
mov
adc
jb
outsl
out
sbb
cs
nop
mov
xor
loopne
push
jmp
add
jle
or
sbb
int3
cmp
mov
insl
jle
mov
loop
push
in
testb
adc
popl
testb
add
pop
fstps
out
ret
paddq
sub
orl
and
imul
ljmp
mov
je
pop
in
sbb
sub
out
dec
fildl
aas
fst
movsb
jo
cmp
xchg
push
mov
lock
sbb
ret
mov
aad
pop
cltd
cmp
jmp
stos
push
sbb
push
mov
inc
and
loop
in
mov
cld
pop
push
add
cmp
sar
imull
std
nop
inc
mov
gs
or
adc
cs
pop
lock
pushl
cmp
inc
cli
mov
leave
mov
mov
jecxz
and
sbb
out
stos
jb
packsswb
or
loopne
popf
lds
dec
hlt
mov
sbb
pop
imul
jle
mov
loope
in
jg
mov
adc
js
outsb
es
mov
adcb
pop
stos
test
fnstcw
ret
loope
aaa
push
inc
ret
xor
les
push
out
sbb
mov
sub
dec
cld
imul
mov
mov
pop
mov
outsb
add
je
jae
fisttpl
xchg
cwtl
loopne
lret
lret
out
lea
lretw
lahf
cs
in
inc
ja
xchg
cmp
mov
xchg
jg
fstpt
fidivl
sbb
mov
mov
cmp
jl
aas
popf
ror
or
cmp
mov
jp
mov
inc
dec
dec
out
push
cmp
push
sbb
push
xchg
cli
ds
mov
aaa
repnz
sub
jb
and
pop
icebp
bound
call
push
movsl
fcomps
pop
pop
pusha
mov
mov
pushf
jnp
cwtl
movsb
int
cltd
into
and
es
int3
lret
inc
les
sbb
insb
popf
pushf
lret
in
push
lret
das
decb
gs
shlb
outsb
push
shrb
inc
outsb
add
cli
arpl
xchg
aaa
ffreep
outsl
pop
test
xor
movsb
and
in
mov
in
adc
lock
into
xchg
in
fs
xchg
mov
push
fldl
jne
push
neg
aaa
mov
inc
int
lret
jb
pushw
xchg
jbe
fimull
mov
test
xor
sbb
mov
mov
xor
and
sbb
sahf
sbb
add
cli
or
mov
movsb
enter
stos
pop
adc
hlt
jle
push
jno
decl
into
stc
jae
out
insl
jp
bound
adc
aam
fsubs
repz
add
imul
outsl
lcall
cmc
or
int
jbe
in
shll
int3
data16
push
xlat
jmp
jmp
lods
orb
sbb
jge
arpl
cmp
add
mov
jne
sub
lcall
mov
bound
xchg
lods
cmp
insl
repnz
pushf
sbb
sbb
jb
mov
loopne
xchg
jb
lods
dec
lds
lock
dec
leave
adc
mov
push
jecxz
hlt
shrl
mov
in
data16
icebp
testb
push
and
popf
cmpsb
rcrl
xchg
repnz
mov
imul
xchg
add
fidivl
ljmp
sub
cs
add
or
push
cltd
sbb
cmp
and
or
pop
fcoml
les
popa
xor
or
rcrl
push
icebp
outsb
cmp
inc
sub
mov
adc
mov
pusha
xchg
in
push
lret
pop
inc
or
pop
jae
mov
sub
xchg
sti
stos
stos
mov
aad
dec
inc
pop
push
lea
int
jle
shl
test
lods
mov
clc
dec
sbb
sbb
mov
fs
ss
jae
xchg
cmpsb
and
mov
or
ja
add
stc
popa
into
mov
sahf
inc
lods
xor
inc
xor
ja
dec
pop
jecxz
jns
outsl
sarb
sub
pop
cmp
lock
pushf
mov
push
shl
xchg
imul
gs
cmc
jno
and
or
ret
stc
mov
xor
aad
dec
mov
loop
imul
jb
xchg
inc
cwtl
gs
bound
setp
lcall
and
gs
lods
jns
inc
inc
cltd
mov
adc
cmp
stos
xchg
mov
popf
fwait
lds
ljmp
jo
aam
mov
sub
mov
or
rclb
inc
rorl
dec
push
cmpsb
jbe
movsb
push
stos
mov
ds
mov
push
xchg
sub
cmp
dec
in
pop
lcall
add
pushf
jno
sub
xor
cmp
mov
cmp
je
and
sbb
arpl
lds
pop
xchg
add
pop
rcll
xor
mov
test
jmp
sub
js
lds
cld
and
test
test
add
push
dec
or
aas
dec
loopne
xor
pop
sti
in
insl
pop
pop
and
jb
mov
adc
jno
cmp
inc
sbb
pop
dec
cmp
imul
enter
lret
jbe
imul
or
es
sar
sbbb
sbb
push
adc
sbb
call
sub
outsl
sahf
inc
mov
cld
pop
outsl
cld
jle
jl
add
dec
fists
icebp
mov
ret
add
stos
stos
jge
xor
jp
xchg
in
push
add
cltd
in
movsb
or
jmp
outsl
out
aam
dec
xchg
fistpll
cmp
inc
inc
fstpl
shlb
sub
mov
testb
cmpsb
je
out
mov
subb
pusha
lcall
adc
mov
fwait
xchg
into
mov
and
jmp
add
pop
insb
mov
sbb
xchg
xchg
pusha
mov
repz
mov
outsb
mov
scas
insl
es
mov
pop
cmp
adc
rolb
idivb
jge
mov
decb
sti
and
mov
test
jns
cmp
cwtl
es
xor
iret
push
mov
int
test
and
mov
mov
sbb
das
aaa
inc
mov
push
jmp
add
test
push
rcll
lods
loop
loope
pushf
xor
mov
cli
xor
adc
push
jb
mov
mov
inc
xorl
shrb
xor
aas
mov
add
mov
mov
mov
xchg
or
ds
or
cmp
dec
fcoms
int
jl
rorl
lds
lret
test
inc
xchg
cmp
out
jo
das
nop
gs
rcrl
insl
pusha
jp
jbe
int3
push
mov
add
in
sahf
push
push
pop
lea
mov
pop
int3
outsb
cmp
imul
cltd
add
shll
adc
adc
fistpll
sbb
addr16
add
mov
lret
jle
mov
jno
or
sub
aas
out
add
cmpsb
cwtl
pop
jmp
and
aaa
jnp
in
mov
js
mov
aaa
stos
cmc
std
cltd
add
cmp
in
cwtl
sub
insb
xchg
mov
cmc
fnstcw
sbbb
into
sbb
stos
or
fists
movsl
enter
jge
jl
mov
ret
sub
js
cmpsb
dec
notb
xchg
lahf
sub
inc
mov
push
mov
faddl
xor
lods
daa
out
icebp
dec
adc
data16
cmc
outsb
sbb
push
lock
adc
lock
mov
shl
mov
rol
xor
ret
xchg
cmp
cmc
stos
out
cld
es
and
hlt
hlt
mov
cmpsl
sbb
inc
dec
inc
fisubs
fnsave
fmulp
popf
scas
inc
pop
pop
mov
cmpl
push
ret
dec
outsl
dec
mov
aad
aam
cmp
fptan
fcompl
push
adc
sub
inc
jg
lret
hlt
xor
mov
in
testb
stos
mov
mov
insb
cs
mov
pop
lea
xorl
loopne
dec
adc
imul
movl
test
jg
dec
daa
add
inc
lcall
mov
mov
jecxz
cmp
mov
pushf
fs
and
jg
int
lods
dec
and
mov
push
pop
test
sub
vmovmskps
mov
mov
lea
out
adc
and
outsb
neg
jl
sub
aaa
std
mov
dec
loope
jb
lea
loop
pop
mov
add
lret
fwait
mov
pop
lds
jmp
xchg
adc
push
lods
cmp
movsl
js
xor
imul
lret
and
mov
rclb
mov
fcmovnbe
adc
adc
sub
sbb
inc
xchg
sbb
clc
or
dec
les
outsb
and
hlt
xchg
push
in
add
shll
insl
mov
pop
les
or
add
sub
sub
sub
nop
ficompl
xlat
outsb
fdivl
jns
aaa
insl
pop
dec
dec
in
scas
or
and
sbb
sbb
xchg
mov
dec
mov
stc
dec
mov
movsb
jp
insl
adc
js
xchg
mov
btc
sbb
push
in
jl
cli
es
stc
iret
jb
xor
sub
mov
sbb
adc
xor
out
or
scas
repnz
outsb
or
pop
in
in
insb
jp
xlat
xchg
mov
inc
sti
cmp
lods
mov
push
or
in
cld
dec
hlt
cli
pop
daa
or
xchg
mov
out
insb
add
ljmp
cmp
add
adc
sbb
into
shll
out
loope
or
cmp
aam
or
jge
pop
fisubs
hlt
int
jb
or
inc
cmp
xlat
dec
pusha
push
outsl
frstor
inc
dec
pop
stos
lea
xor
dec
push
dec
aam
cmc
aas
mov
imul
inc
ss
xchg
scas
adc
jo
sahf
call
and
cmp
xor
dec
aad
mov
out
xchg
lret
push
dec
xor
ficomps
adc
repnz
add
xchg
xchg
lret
bound
mov
ret
push
xchg
mov
jp
push
adc
lods
ret
pop
mov
imul
mov
pop
and
and
aaa
stos
xchg
push
ss
mov
iret
pushf
pop
das
mov
daa
dec
call
mov
push
jmp
movsl
cmp
pop
ljmp
ja
les
jne
mov
xchg
xchg
dec
jge
outsb
lock
iret
ret
lods
and
ds
mov
stc
icebp
aas
adc
jnp
and
lret
rcll
pop
stos
adc
aas
shl
enter
sub
daa
or
stos
mov
fadds
fisubs
movsb
test
sub
jl
mov
je
or
inc
je
icebp
in
mov
fs
mov
icebp
repz
fdivrs
lret
shrb
scas
fcmovu
sbbb
rcrb
arpl
sub
push
mov
pushf
es
scas
sarb
mov
fnsave
lret
scas
or
add
sub
sti
lahf
ficompl
ds
in
loop
cli
pop
orb
mov
in
or
pop
es
mov
pop
and
ds
sbb
cmp
jl
cmp
sbb
mov
xor
xchg
ret
adc
mov
inc
ds
xchg
scas
xchg
pop
rorl
ja
cmpb
icebp
stc
dec
imulb
lcall
or
repz
aaa
loopne
or
mov
lret
out
stc
xchg
mov
pop
jae
inc
adc
lods
xchg
inc
mov
cs
jbe
out
je
lcall
test
fdivrl
or
add
test
inc
adc
sbb
mov
cli
movb
jecxz
int
inc
sub
imul
out
fnstsw
inc
inc
pop
stc
vunpcklpd
cmpsl
push
adc
das
lret
push
inc
xor
idiv
mov
scas
ret
push
imul
or
popf
or
clc
pop
sbb
xchg
int
popf
mov
sti
inc
push
xor
and
mov
in
dec
jno
pushf
cwtl
xchg
sarl
or
cmp
push
mov
das
loop
push
outsb
mov
or
cltd
cmpsb
mov
mov
les
cmp
and
and
data16
insb
stos
loope
push
add
push
insb
cvtps2pi
jle
insb
mov
fisubrl
cmpsb
add
insb
out
aas
jnp
xchg
push
hlt
or
loopne
das
add
lret
in
sub
orb
mov
call
push
add
push
scas
mov
dec
adc
in
scas
fbstp
stos
cmp
add
repnz
cwtl
add
xor
add
insl
pop
inc
repnz
insl
push
adc
aad
mov
sbb
mov
test
jbe
xor
movsl
outsb
call
sahf
outsl
repz
or
pop
mov
cmp
mov
rcll
sub
cmpsl
clc
xor
out
inc
data16
dec
cld
into
sarl
fidivrl
mov
and
enter
mov
jns
inc
jns
divb
mov
jp
test
push
aaa
jecxz
nop
je
aam
cmp
daa
mov
add
lods
into
orb
mov
xchg
xchg
jae
adc
popf
ja
imul
mov
add
fcoms
stos
imul
cld
ret
rorl
add
lahf
or
mov
push
insb
jns
fwait
sub
fs
ss
adc
push
outsb
popa
xlat
jb
push
mov
adc
sub
push
jb
dec
loop
and
mov
mov
ljmp
dec
mov
or
jbe
outsb
cltd
inc
out
cli
mov
and
nop
sub
repz
adc
daa
adc
cmp
jnp
mov
bound
xchg
xchg
inc
test
lahf
cmpb
or
xlat
nop
stc
into
lret
or
rclb
inc
mov
cwtl
sti
popa
mov
jp
xchg
sbb
inc
mov
xchg
jle
std
lret
xchg
pop
jle
add
mov
mov
ljmp
xchg
inc
or
bound
push
mov
jmp
push
imul
cltd
aaa
inc
sbb
sbb
je
stc
xchg
sub
dec
or
insl
das
test
inc
aad
jmp
lds
xchg
sbb
movsl
and
mov
dec
add
inc
cltd
ret
mov
mov
insl
mov
aas
fdivrs
jb
pop
mov
into
mov
shl
xchg
mov
xor
add
push
push
js
scas
push
and
add
cli
jmp
push
xchg
popa
rcll
and
xchg
imul
imul
std
mov
sub
ljmp
mov
call
mov
and
or
jbe
xchg
pop
sbb
je
aaa
jbe
sub
in
sbb
dec
dec
loop
pop
shrb
sbb
sbb
cs
dec
and
push
push
and
fistl
pop
pop
movsl
sbb
jbe
push
mov
cli
or
sub
bound
and
dec
push
addb
je
mov
cmp
mov
inc
mov
push
pop
out
cmp
imul
push
jp
imull
mov
xchg
js
mov
lods
aad
pop
adc
in
or
pop
and
adcb
xchg
add
mov
icebp
jne
push
and
repnz
inc
in
imul
mov
shlb
cwtl
sub
mov
movsb
mov
loop
jecxz
pushf
push
insb
shll
mov
xor
in
pop
in
xchg
xchg
jl
data16
repnz
pushf
sbb
fstpl
pop
xchg
shl
xchg
jae
scas
or
xchg
pop
repnz
in
sbb
divb
lods
jg
fistpll
push
and
xor
nop
cmp
out
aas
es
inc
test
xlat
cmp
fisubs
push
jnp
pop
mov
jmp
dec
cld
shll
pinsrw
sahf
inc
pop
gs
cmp
xor
pop
pop
movsb
or
nop
dec
test
mov
lods
jne
fs
sub
cltd
fmulp
gs
push
mov
fwait
mov
xchg
adc
ljmp
xchg
xchg
xlat
call
mov
inc
les
mov
mov
cmp
push
les
in
or
or
fs
xor
daa
mov
inc
xchg
push
inc
popf
iret
push
pop
pop
sbb
push
xchg
sbb
and
setg
popf
push
stc
pop
lock
inc
xchg
loop
mov
stc
jle
leave
and
gs
pop
adc
mov
shr
cmc
cmpsb
mov
pop
mov
jge
sub
sub
test
mov
or
icebp
shlb
cmc
out
and
xchg
push
jno
mov
jmp
mov
fdivl
dec
ds
iret
push
or
xor
xlat
repz
sbb
popa
pop
imul
adc
jb
xchg
adc
hlt
pop
andl
popa
xchg
clc
jo
lret
or
sbb
pop
popa
xchg
push
inc
xchg
sub
in
fsubp
mov
aaa
jo
mov
in
sbb
xchg
ss
adc
int3
mov
xor
add
popa
jmp
insl
mov
jne
mov
js
xchg
ljmp
xchg
lock
pop
fiadds
cmpsl
test
test
cmpsl
jb
cld
stos
in
fisubrs
push
mov
mov
jecxz
lret
dec
btr
aaa
rcrb
loope
int3
jl
inc
lcall
leave
enter
dec
pusha
das
repz
es
and
sahf
mov
inc
adc
jo
addr16
fwait
jecxz
dec
push
sahf
mov
mov
pop
addl
inc
jbe
lds
cmp
std
test
inc
inc
pop
lret
gs
push
shr
hlt
es
popf
out
mov
jo
dec
clc
jp
mov
pop
and
je
jo
push
call
in
call
jmp
inc
push
jmp
mov
divb
leave
pop
push
cmp
push
jnp
jb
in
mov
xor
loopne
jne
pop
aas
loopne
aad
jmp
xor
leave
pop
add
inc
jmp
andl
lods
xchg
scas
sarl
mov
lock
add
sbb
add
add
adc
adc
xor
int
dec
mov
lret
je
popa
xor
or
pop
in
and
mov
sub
pop
jle
dec
pop
mov
notb
out
xchg
mov
movsl
out
test
divb
add
out
rclb
addr16
adc
ret
test
sub
lret
enter
in
xor
loop
inc
xor
xchg
cmp
lret
pop
inc
test
jecxz
inc
ret
lcall
icebp
mov
idivl
cmpsl
or
sub
pop
inc
add
add
pushl
pop
xchg
int3
mov
cli
mov
movsb
inc
xchg
andb
hlt
cli
sti
dec
add
iret
jnp
inc
mov
mov
push
test
xchg
out
inc
lret
insl
into
mov
dec
add
fisubrl
xlat
pop
mov
fidivl
bound
pop
jnp
aaa
sub
push
add
pop
mov
dec
adc
jnp
xor
cmp
lock
fldt
test
neg
mov
cmp
mov
sub
es
fisttps
jg
mov
cmp
pop
frstor
jl
rolb
pusha
adc
adc
mov
pop
adc
movsb
xlat
mov
fimull
in
loope
inc
aas
inc
mov
add
fisubl
add
cmpsl
addb
int
ja
mov
push
jmp
fsubr
shl
pmulhuw
dec
imul
pop
adc
mov
inc
add
stos
mov
lods
fs
js
imul
fbstp
movsb
test
flds
jp
sbb
inc
incl
out
xor
mov
jge
sbb
out
jb
adc
pop
sbb
add
in
pause
fwait
insl
int
out
test
cmp
imul
mov
ret
jl
xor
sub
push
jg
hlt
je
xor
sub
dec
jns
cmp
popw
cmp
mov
mov
stos
testl
repnz
imul
int3
xchg
syscall
test
es
nop
add
fisubl
int
push
push
xchg
push
pop
das
xchg
fisubs
call
jp
rcrl
ds
mov
in
push
push
pop
sbb
jmp
inc
bnd
xlat
mov
faddl
mov
and
mov
sbb
sub
push
stos
ss
sub
or
aad
jg
addb
pop
fists
subl
and
jno
sub
add
ljmp
ljmp
add
push
jb
adc
in
mov
stos
call
rdpmc
fs
adc
js
neg
gs
lret
dec
fwait
add
cmp
fldenv
test
stos
lret
bnd
and
out
gs
call
mov
fisubrl
and
pop
push
aad
xchg
cmp
push
mov
insl
das
sti
adc
in
cli
fstpt
xchg
imul
mov
push
xlat
daa
sub
cmp
das
imul
or
pop
sub
nop
popa
clc
test
jns
mov
add
loope
or
cli
leave
sbb
mov
roll
imul
xchg
inc
pop
andb
push
jge
lods
icebp
pxor
test
int
mov
sub
inc
push
cmpsb
in
scas
add
pop
clc
lods
ja
ja
add
push
inc
inc
imul
push
in
or
mov
stc
mov
pop
imul
jg
fstps
push
pop
fadd
pop
or
pop
xchg
incl
das
sahf
out
aad
jb
cwtl
into
jo
data16
and
dec
imul
std
cmc
xor
jne
mov
or
sub
lock
inc
pop
fs
lock
aad
fsubp
movsl
roll
mov
ss
inc
sahf
cmpl
jge
not
mov
das
cmp
cmp
xlat
jo
shlb
cs
iret
mov
addr16
mov
shrl
dec
pop
das
nop
gs
inc
jne
insl
gs
lock
inc
add
jge
sbb
jecxz
sub
stc
push
sbb
in
dec
mov
fwait
fs
mov
repz
sbb
repz
rcll
cmpb
and
pop
adc
cmpsb
out
jno
stos
jmp
mov
icebp
sub
call
dec
imul
lods
repnz
mov
adc
add
test
pop
or
jp
jnp
or
shrb
cwtl
imulb
fisttps
xchg
in
icebp
arpl
ja
cmp
outsb
in
fs
lcall
sarl
sbb
aad
fcoml
repz
mov
dec
movsb
shrb
out
mov
ja
inc
mov
adc
out
fildl
cmc
inc
add
loope
xor
dec
add
es
das
ror
or
mov
ret
xor
pop
insl
scas
nop
rclb
ljmp
addr16
and
add
lods
lods
or
sub
test
outsb
in
xchg
out
dec
out
jge
lods
push
adc
jb
add
push
or
int
adc
loope
and
cmp
inc
ret
lock
sarl
pop
out
xchg
mov
shll
or
cmp
xchg
cmp
pop
sarl
subl
imul
es
out
inc
lds
out
cmpsb
orb
stc
repz
loope
adc
sbb
aad
dec
push
stos
clc
cli
mov
enter
cmp
lods
fsubrs
mov
loope
add
mov
jge
mov
lahf
fxch
cmp
mov
inc
push
pop
or
sbb
fcmovnu
mov
rorb
lret
cwtl
or
arpl
movsb
sub
inc
pusha
add
pop
stos
adc
inc
sti
push
and
stos
outsl
jge
mov
aam
add
jge
jbe
nop
es
or
je
mov
xchg
xchg
adc
xchg
dec
and
dec
in
jne
mov
jns
cmpsb
inc
push
cmp
aas
das
add
inc
outsl
imull
mov
jge
jns
out
push
subb
lds
mov
add
std
aad
data16
adc
cmp
std
fisttpl
sbb
clc
in
mov
pushf
cwtl
movsl
push
jne
outsl
loope
aas
leave
sbb
sub
or
sub
je
jp,pt
jns
cmp
insl
jb
mov
test
insb
cmp
sub
fidivl
add
jg
mov
shlb
add
jb
cmp
repnz
mov
mov
mov
jb
adc
add
mov
mov
cld
pushf
aam
sub
popf
stos
jp
lds
mov
sub
pop
xchg
pslld
insb
insl
movsl
dec
mov
inc
ds
cmc
das
mov
or
push
sub
in
mov
xlat
sti
loopne
mov
jne
pushf
mov
ficoms
cmp
int
out
sbb
and
cmp
shll
jne
adc
test
insb
js
repnz
inc
lret
das
xchg
loope
inc
mov
imul
cmpsb
setb
sbb
push
scas
or
jge
int
push
stc
cmp
in
push
gs
cmpl
cmp
shrl
xor
adc
outsl
call
into
push
jl
lods
inc
adc
int3
nop
sub
cmp
push
mov
pusha
pop
rol
daa
lea
xor
push
cmp
lret
cmp
sarb
dec
dec
push
mov
imul
pop
in
jle
loopne
pop
or
in
lods
push
loopne
mov
insl
pop
xor
imul
aam
mov
mov
mov
mov
pop
xchg
movsb
adc
cli
into
jp
sbb
mov
pop
sbb
sbb
sbb
fsubl
pop
les
push
scas
sbb
je
inc
inc
dec
push
pop
je
cmp
pop
and
sub
insb
sub
adc
je
sub
pushf
test
movsb
lahf
cmpsb
dec
popa
sbb
test
sub
xor
mov
jp
adc
addr16
ucomiss
sub
ficoml
aas
aaa
data16
or
jb
and
pop
jle
test
ret
or
cmp
outsl
cld
lea
dec
cmp
sbb
cmp
loop
add
dec
ficompl
xor
mov
insb
inc
jl
subl
mov
cmp
pushl
sub
dec
fidivrl
cmp
mov
cmp
pop
int3
or
movsl
mull
jle
shr
cmp
out
inc
loope
lret
add
frstor
mov
iret
and
or
leave
mov
inc
jno
or
xor
pop
popa
pop
mov
inc
fnop
cld
nop
push
mov
rcrl
sub
inc
inc
sub
inc
pop
or
jb
iret
xor
jae
aam
push
rcll
clc
test
adcb
lods
orb
mov
dec
inc
sbb
movhps
sub
mov
mov
or
dec
xor
cmp
mov
xor
adc
shl
push
dec
adc
push
notb
push
fstps
popa
loope
push
mov
cs
jae
lock
bound
repz
imul
leave
ficomps
xor
in
mov
outsb
push
imull
jecxz
jl
clc
xchg
mov
xor
sbb
adc
xor
jl
pushf
int
int3
je
mov
xchg
sbb
outsl
scas
enter
dec
repz
dec
mov
sahf
add
cli
js
inc
mov
sbb
mulb
pop
sti
loop
lock
pop
das
xchg
add
scas
data16
imul
lret
test
xchg
enterw
xor
inc
and
push
lock
shlb
stc
mov
test
arpl
pop
dec
je
xor
jb
jnp
sub
and
add
aam
les
jp
scas
cs
mov
or
mov
ret
cmp
testl
adc
fwait
pop
fstpl
aad
andb
mov
lcall
add
add
addr16
dec
mov
pop
xchg
jne
addr16
xchg
mov
inc
pop
pop
cmove
or
inc
fsubl
xchg
adc
pop
or
lret
mov
out
loopne
sahf
xchg
add
sub
cli
fcompl
insl
lret
dec
jge
out
stc
icebp
pop
mov
inc
repnz
mov
sbb
xor
push
bound
adcb
imul
insl
out
test
shll
scas
ds
lcall
in
je
hlt
cmp
cmp
call
and
mov
loop
js
jge
xor
add
jle
inc
inc
add
push
jl
scas
cmp
xchg
ss
xor
dec
sbb
mov
popa
xchg
je
int
xor
scas
pop
testb
rorb
adc
int
mov
lock
inc
sarl
adc
aas
sbb
push
add
inc
cmp
lock
clc
into
add
mov
dec
sbb
sub
idivl
mov
icebp
cwtl
xchg
mov
data16
test
dec
pop
cmp
dec
mov
pop
pop
mov
push
in
lahf
sbb
popa
mov
jo
mov
pop
jns
loop
mov
mov
inc
xchg
repnz
fdivrs
sub
mov
mov
and
fidivrs
stos
or
add
inc
imul
fisubrs
cltd
leave
add
xchg
sub
push
outsl
inc
xor
pop
adc
cmpsb
mov
dec
inc
test
xor
mov
mov
mov
repnz
ss
sub
outsb
je
lds
inc
adc
mov
mov
push
pop
arpl
test
xchg
movsb
push
imul
and
fwait
vorpd
pop
push
bswap
push
fiadds
jae
inc
cmp
pop
jg
inc
fisubl
cmp
out
test
adc
mov
jo
scas
icebp
xchg
mov
mov
xchg
add
ret
dec
sahf
testb
js
or
cltd
stos
or
xchg
pop
pusha
les
mov
rclb
loope
repnz
test
dec
add
cmp
xchg
leave
lods
cwtl
sub
imul
push
out
stc
dec
jae
cmp
es
mov
sub
aad
xchg
and
xor
cwtl
dec
test
jecxz
ss
inc
rcrl
push
adc
aam
push
pop
fdivp
xor
xor
rolb
shr
rolb
pop
add
jbe
xchg
aad
mov
jmp
mov
dec
fs
inc
pop
repz
nop
cmp
sub
sti
xchg
rcll
cs
jmp
je
int3
adc
in
cmp
and
inc
popa
enter
cmp
cmc
dec
int3
js
sub
fsubrl
push
sub
sti
mov
lret
mov
sbb
pop
int
popa
xor
sahf
mov
aam
xor
sbb
jle
mov
cltd
sahf
imul
sub
mov
hlt
repz
movsb
and
mov
mov
jne
cli
adc
ljmp
adc
pmullw
push
and
mov
shl
lret
cmp
push
mov
add
insl
imul
test
in
jno
jo
popf
cmp
xor
pop
test
sbb
cmp
mov
lods
and
sbb
sti
or
adc
adc
jecxz
and
cmc
mov
add
cwtl
jae
jecxz
mov
jmp
pop
adc
loope
inc
sbbb
jnp
out
gs
mov
fisubl
popf
int3
imul
repz
clc
sbb
cld
pop
stos
hlt
jmp
mov
mov
pop
test
aad
clc
adc
pop
sbb
cli
inc
sub
jbe
or
xchg
aad
pop
ds
insb
in
into
jnp
sbb
add
cs
call
jo
push
insb
scas
rorb
mov
stos
and
fstl
mov
cmpsb
idivl
mov
xchg
fwait
rcl
addr16
in
xor
ljmp
jo
das
mov
and
dec
mov
push
xor
mov
xor
popa
clc
repz
and
mov
cmpsl
add
lahf
adc
int
jmp
pop
mov
push
shl
xchg
pop
pop
cltd
jg
or
cmp
dec
push
cmc
lds
daa
fdivp
je
shll
mov
xlat
push
push
mov
inc
out
or
pop
fstpl
xor
sub
push
scas
ljmp
cmp
mov
mov
jge
jp
pop
add
je
repz
pop
outsb
inc
jbe
push
insl
sbb
jmp
out
fcoml
sub
addb
push
nop
push
fldcw
add
ja
jb
and
or
arpl
sbb
xor
ja
fildl
dec
sub
out
pop
std
ficoml
pop
shll
or
mov
add
stos
sub
popf
imul
inc
js
fmuls
scas
ljmp
cmp
cmp
int3
xor
fisubs
loope
pusha
movsb
lds
and
pop
test
adc
cmp
js
or
mov
aad
pmuludq
decl
mov
cmp
inc
jnp
iret
je
leave
mov
inc
mov
dec
std
shrb
mov
outsb
filds
mov
iret
insl
cli
ficompl
popa
mov
stc
or
pushf
mov
sub
and
adc
lock
cmp
and
add
push
pop
or
iret
lcall
jmp
ret
cmpsl
mov
dec
sub
mov
mov
and
outsb
loopne
jns
fbstp
mov
ret
adc
lods
push
xor
pop
jg
push
ror
sbb
jo
mov
and
shrb
pop
stos
call
pop
shrl
loop
push
mov
in
lods
negb
stos
iret
sbbl
jbe
add
out
stos
mov
jge
icebp
insb
icebp
lds
test
inc
ss
cmpl
mov
adc
popa
inc
add
push
jl
insb
sbb
xchg
ret
sub
mov
pop
mov
pop
out
jmp
mov
lahf
fldcw
icebp
lds
mov
cmp
ss
push
dec
dec
mov
clc
test
repz
bound
cld
and
cld
xchg
jb
cmpsl
mov
fwait
dec
cld
jp
test
pop
cld
movsl
lret
and
jns
add
jns
cmp
sub
jne
ss
mov
insb
jns
inc
outsl
test
shll
jmp
rol
inc
and
lods
mov
sbb
sub
xlat
sub
test
out
cmp
sub
lret
sub
inc
sbb
xor
pop
lret
sbbb
shll
or
fsub
fisttpl
rcrb
arpl
mov
sbb
shll
out
dec
aad
lods
scas
enter
mov
push
out
inc
in
movsl
icebp
cmp
xchg
stos
and
dec
xchg
fistpll
test
xor
cltd
or
jmp
inc
jb
loope
cmpsb
mov
sbb
rcr
loope
aas
movsb
xor
jbe
pushf
ret
outsb
adc
jecxz
jmp
sub
mov
lods
push
xchg
out
repnz
jbe
ucomiss
and
pop
jbe
repz
ret
adc
push
mov
pop
pop
into
fsubrl
std
sbb
outsl
and
in
loope
sbb
push
fistpl
ljmp
ret
movsb
clc
rclb
jge
idivb
fstps
push
popa
dec
mov
jo
add
or
outsl
enter
inc
dec
add
adc
or
mov
adc
addr16
add
fisttpl
pop
or
jp
pop
idivl
cmc
and
cmpl
shll
mov
notl
pop
push
ja
pop
sub
sbb
dec
dec
jl
insl
pop
js
jo
std
xchg
pop
mov
addl
mov
repnz
mov
stos
sub
xchg
test
jl
add
ds
inc
insb
cld
add
repz
dec
lahf
test
gs
cmp
push
mov
or
cltd
mov
jns
sbb
dec
push
sub
sbbb
cmp
fisubrs
sbb
sub
in
cli
mov
adc
mov
and
mov
in
pop
push
cmc
outsb
scas
scas
sahf
in
sti
dec
push
sbb
lods
mov
aaa
mov
dec
pop
push
push
sub
or
sbb
mov
or
xchg
test
mov
pop
xchg
inc
sub
cltd
mov
xchg
out
sahf
mov
dec
lds
out
xor
inc
adc
shl
and
mov
pop
loope
in
mov
mov
scas
into
cltd
add
jmp
mov
aad
cmc
mov
fstpl
mov
cmpsl
inc
cmp
cmc
xor
push
pop
movsl
popa
pop
push
push
out
rclb
sub
out
sbb
push
in
shl
jmp
sbb
mov
insb
adc
mov
arpl
mov
xchg
clc
push
or
mov
mov
in
bound
stc
cwtl
add
push
add
les
push
shr
push
mov
add
adc
test
jnp
inc
scas
repz
mov
push
sbb
mov
rorb
jbe
mov
jnp
cld
dec
or
pop
fidivs
mov
add
mov
mov
cmp
dec
das
mov
or
test
testl
les
adc
mov
insl
dec
mov
push
xchg
leave
mov
into
repz
fidivs
inc
cmp
jl
jg
in
out
push
inc
cmc
sti
sbb
dec
xor
jg
js
ret
dec
fdivp
pop
insl
mov
fadds
mov
jns
xchg
arpl
out
inc
repnz
mov
negb
psadbw
ret
jae
mov
xchg
mov
push
lods
lock
ret
loope
mov
lods
aaa
lods
in
jnp
ret
mov
pop
sbb
je
rolb
in
bound
and
fsubl
sbb
push
sbb
mov
das
xlat
clc
jo
nop
inc
das
push
and
ret
rcll
aad
push
push
icebp
sti
in
arpl
fidivrl
rcl
push
push
or
jmp
or
cmp
notl
cmpsb
inc
sarb
push
fisubl
xchg
mov
daa
mov
hlt
mov
ja
ret
pusha
cld
test
fwait
stos
mov
leave
jb
scas
pushf
pop
int3
xchg
inc
aaa
inc
cli
popf
ljmp
out
xchg
jno
xchg
cvtps2pi
sbb
jl
jecxz
push
int
lea
fwait
pop
in
insl
lds
adc
iret
cltd
nop
mov
out
jbe
icebp
sbb
in
fimuls
ret
sbb
dec
mov
add
shl
mov
dec
mov
lods
or
xor
and
mov
cmp
dec
pop
imul
xor
int
rorb
aas
pop
jmp
jne
call
mov
xchg
ss
cmp
mov
push
push
inc
jnp
pop
test
adc
pop
outsb
jmp
lds
inc
test
fucompp
fwait
push
fwait
mov
sbb
cmpsl
xchg
das
adcb
cmp
sbb
mov
adc
inc
mov
xor
sub
leave
xor
xor
out
jmp
adc
jge
xorb
adc
sbb
or
daa
inc
push
jecxz
loopne
mov
add
int
sbb
sub
js
cwtl
sub
cmpsl
loope
repz
adc
fsub
mov
xchg
inc
loope,pt
pop
mov
cwtl
fstps
mov
push
stc
cld
scas
add
and
and
fsubl
test
fwait
pop
and
jbe
mov
in
cmp
mov
and
add
cmp
mov
rorb
xor
and
or
fs
push
or
inc
sub
mov
ljmp
mov
push
cmp
mov
adc
repz
push
data16
sarb
add
mov
cmp
rcrb
mov
sti
dec
shr
mov
test
mov
lret
sbb
xchg
jns
inc
push
sub
lds
insb
mov
inc
xchg
daa
mov
sub
shr
imul
aaa
fistpl
scas
xchg
adc
pushf
jecxz
aaa
xorb
dec
subl
std
fnsave
adc
mov
call
jg
out
int
lret
incb
pop
sub
cmpsl
push
pop
sbb
or
jmp
cld
dec
pop
add
cmp
pusha
pop
mov
gs
adc
les
push
les
add
push
xchg
pop
cmp
fiadds
mov
out
mov
mov
cmp
cmp
mov
sub
sub
fildl
repnz
adc
clc
push
sbbb
dec
mov
jnp
aaa
mov
es
push
pop
jno
xchg
or
js
lret
mov
int3
jns
mov
xor
mov
and
iret
xorl
mov
ret
fldenv
sbb
stos
add
ficoms
int
dec
or
mov
subb
sahf
cld
mov
out
int3
popa
mov
mov
mov
dec
int3
movsl
iret
out
cwtl
sbb
and
mov
mov
mov
fdivl
cld
push
dec
jl
fisttps
lahf
sbb
and
cmp
sbb
ret
outsb
call
in
pop
add
push
mov
fsubs
std
hlt
into
or
aad
data16
xor
mov
xchg
int3
or
pop
lret
push
jle
ss
xchg
adc
sarl
sub
jp
mov
subl
scas
and
mov
movsb
xchg
cmpsl
addb
xor
jl
cmp
add
mov
sbb
stos
push
loopne
inc
cmp
mov
in
call
mov
dec
push
cmp
mov
mov
mov
repz
ds
xor
sahf
sahf
repnz
sbb
push
daa
sbb
rcr
mov
loopne
dec
jg
popf
and
sbb
cltd
movsl
xchg
int
xchg
dec
mov
push
lea
jg
add
jle
add
dec
imul
and
add
arpl
adc
insb
cmp
mov
ret
or
mov
mov
xlat
and
cld
into
add
ficoms
dec
std
xchg
mov
inc
dec
jge
cmp
push
xor
mov
or
testb
repz
push
mov
aas
push
mov
push
imul
int
push
lahf
sbb
mov
inc
mov
adc
cmpsb
mov
add
xchg
push
faddl
inc
push
mov
jge
lahf
dec
mov
add
inc
rorl
arpl
cmpl
inc
push
or
in
cmp
or
mov
insb
inc
sbb
mov
pop
pop
xchg
outsl
mov
mov
hlt
adc
inc
jmp
cmpsb
adc
pop
cli
add
test
xchg
push
int3
push
inc
jl
shrb
movsb
not
mov
push
xor
or
mov
loopne
aaa
push
fisubrl
cld
in
xlat
jg
push
hlt
flds
icebp
and
push
push
push
stc
or
jb
jecxz
add
pop
inc
mov
popf
cmp
insl
lea
cmp
call
ds
push
dec
lock
sub
pop
stos
decb
inc
scas
push
sbb
xor
push
inc
mov
ljmp
push
scas
mov
mov
rorb
test
jge
sbb
lods
icebp
mov
les
xlat
pushf
xchg
mov
pop
inc
fs
xor
cmpsl
sbb
fst
mov
dec
loopne
fisubrl
xchg
push
fmulp
loop
push
lret
push
add
shrl
pop
sti
mov
jb
jae
stos
xchg
aam
dec
lock
repnz
jmp
cmp
xchg
insl
dec
loopne
icebp
popf
add
scas
mov
mov
stos
and
inc
ret
jle
int3
int
sub
jp
shrb
imul
adc
repnz
nop
pushf
mov
hlt
ret
add
push
in
sti
dec
test
xlat
pop
les
push
fsts
std
in
pop
add
icebp
sub
pop
jo
xchg
or
adc
repnz
xchg
and
mov
bswap
repnz
xchg
mov
adc
push
mov
sbb
push
sub
dec
shrl
hlt
jbe
arpl
mov
inc
outsb
pushf
or
pop
jle
mov
inc
sbb
push
or
enter
int
or
cwtl
jle
loope
lret
and
nop
mov
jns
daa
das
add
int3
data16
jo
ljmp
addr16
sub
mov
jmp
cld
leave
pop
dec
in
sub
ja
cmp
loop
cli
pop
call
shlb
mov
shlb
out
add
push
sbb
and
mov
call
into
mov
stc
das
mov
sbb
mov
outsl
xor
inc
notl
pop
push
fbld
adc
jecxz
add
dec
xchg
insl
dec
and
rorb
fstl
push
or
mov
or
sar
rcl
inc
mov
pop
push
les
cwtl
into
scas
test
cmp
xchg
dec
push
fildl
inc
pop
cld
and
cltd
or
sub
jp
sub
adc
rorb
icebp
push
sbb
jmp
mov
stc
pop
dec
cltd
cmp
dec
hlt
sub
adc
lea
push
imul
addr16
pop
stos
ret
outsl
push
sbb
mov
ret
imul
xchg
or
mov
jns
lock
sub
sbb
loope
dec
push
push
imul
lret
out
xor
rcll
repz
ror
inc
test
into
hlt
loope
xor
into
stos
add
mov
dec
push
xlat
jnp
lret
cli
jmpw
pop
ret
xchg
push
test
xlat
sbb
fmuls
cltd
mov
sahf
shlb
jg
push
push
adc
imul
out
cmp
lret
dec
cmp
repz
and
scas
call
or
out
fisubrl
or
mov
pop
mov
fcomps
dec
stos
lds
mov
pop
in
inc
dec
jecxz
mov
mov
mov
jmp
add
or
add
andb
xchg
sub
fs
mov
lock
call
cmpsb
cmpsb
jmp
mov
sbb
dec
jb
and
in
sbb
jno
and
push
cli
test
lar
inc
insb
pop
stos
mov
dec
xchg
xor
repz
dec
mov
and
push
mov
jl
aaa
inc
cmpsl
pusha
xlat
cmp
mov
push
push
cmp
jb
imul
jl
data16
pop
loop
fadd
mov
add
jecxz
insb
jmp
ret
adcb
mov
scas
add
loopne
das
xchg
aad
bound
fsubs
add
into
mov
ffree
mov
mov
cmp
ret
pop
xor
jbe
inc
xor
das
dec
jle
ja
cli
daa
sbb
cmp
call
leave
and
pop
sti
test
cli
push
sub
inc
out
sub
push
mov
into
mov
cmp
enter
insl
ljmp
pop
lret
popl
and
xchg
jmp
mov
jle
ds
adc
jecxz
adc
inc
jmp
dec
mov
or
sbb
mov
shrb
into
addl
jne
lcall
outsb
psubd
push
cmp
insb
fidivl
sub
jne
or
mov
push
repnz
dec
mov
ss
push
pushf
shrl
sbb
mov
push
popa
adc
or
and
adc
imul
in
pop
insl
inc
in
andb
ret
sbb
aaa
add
xchg
xor
sub
mov
int3
scas
les
fcoml
cwtl
fadd
outsb
push
push
scas
mov
stos
das
push
mov
sahf
nop
lods
inc
arpl
test
add
mov
dec
jno
gs
mov
fwait
xor
out
or
push
hlt
push
js
jnp
pop
pop
xchg
movl
cld
enter
pop
jne
add
jae
call
test
dec
add
sbb
loop
or
jae
cmp
add
cli
add
jb
cmpsl
clc
sub
orl
ret
andb
mov
test
mull
jnp
mov
pop
enter
ljmp
add
lret
sub
sbb
jp
or
mov
fucomip
fisttpl
xlat
insb
lods
xchg
orl
ret
xchg
mov
insl
push
pop
mov
mov
xor
xor
inc
cmp
out
push
test
mov
insl
add
insb
mov
add
xor
dec
jae
pop
out
cmpsb
fwait
es
inc
lock
outsb
cwtl
arpl
lret
push
test
adc
enter
mov
dec
mov
cmpsl
jno
cmp
jle
incl
mov
adc
adc
bound
rol
cmpb
aam
jmp
daa
outsb
cmp
bsr
add
int
fisubrl
mov
dec
jae
pop
xor
pop
icebp
mov
loopne
pop
lods
aam
xor
mov
aam
stos
push
leave
mov
mov
clc
stos
push
and
cmp
or
sbb
out
sbb
sbb
lret
jge
std
pop
adc
lahf
jge
jmp
mull
push
cltd
pop
xor
mov
pushf
or
fwait
pop
or
loopne
xchg
repz
or
mov
movsl
nop
xlat
loopne
fwait
sti
mov
clc
jmp
pop
gs
popa
pop
jne
lcall
arpl
cs
xorb
pop
and
into
aam
scas
shlb
add
cmp
fwait
pop
xchg
push
lahf
arpl
pop
inc
cmp
aaa
jle
ret
es
xor
aam
sbb
and
push
mov
xchg
and
cmpsl
sub
inc
mov
xchg
pop
cmp
rclb
and
push
dec
mov
xchg
cli
aaa
inc
test
popa
fsubrl
mov
inc
popf
je
adc
jmp
xor
sti
ss
hlt
xlat
arpl
sub
xchg
or
add
popa
jge
dec
daa
ds
add
lods
push
imul
ret
or
adc
xchg
inc
pop
scas
xchg
div
cmpsb
or
rol
aas
push
and
mov
inc
lcall
mov
in
push
enter
dec
dec
mov
dec
mov
nop
pop
sarl
pop
lea
inc
loop
jle
rcr
sbb
sub
repz
popf
inc
data16
imul
pop
push
mov
mov
aaa
jle
out
in
or
pop
jnp
cmp
push
fidivs
addr16
mov
sbb
daa
mov
in
out
loope
xchg
xchg
enter
dec
mov
in
xchg
fdivrl
jb
inc
cmpsl
out
adc
xchg
and
movl
ret
mov
dec
gs
mov
push
add
mov
xchg
ret
adc
cmpb
lret
notb
sbb
sbb
lahf
sbb
xor
pop
outsb
mov
add
inc
scas
cmp
fdivrs
push
outsl
js
mov
or
xchg
stos
lock
movsl
mov
mov
mov
outsb
lahf
mov
jb
mov
icebp
push
ret
je
jns
aam
mov
xchg
push
mov
imulb
mov
fimull
and
xchg
mov
stc
xor
pop
jae
notb
sbb
mov
and
pxor
mov
mov
cld
cmp
decl
int
stos
push
push
jle
add
fbstp
repz
and
sub
repnz
mov
mov
jecxz
mov
sbb
pop
daa
icebp
adc
test
test
incb
call
std
pop
out
pop
into
or
test
and
cmpsl
xorb
inc
and
sub
ds
ficompl
daa
dec
push
mov
xor
pop
xchg
idivl
addr16
cltd
rclb
cmp
pop
mov
dec
adc
inc
sbb
jecxz
outsl
loope
jge
popa
sub
push
jne
adc
sub
icebp
addr16
jmp
xor
lds
aas
insl
xchg
test
in
lahf
in
dec
incl
pop
test
fbld
daa
dec
and
inc
mov
pop
cmp
movsl
mov
popf
mov
mov
jae
in
pusha
inc
jp
flds
sub
loopne
inc
mov
je
sahf
mov
nop
fisttpll
sub
and
add
sub
or
notb
cli
inc
pop
hlt
mov
push
sbb
mov
in
int3
out
mov
lods
mov
inc
notl
sub
mov
ret
ja
jecxz
push
xor
push
jl
into
or
sub
adc
mov
cmp
jno
std
loopne
sar
fwait
imul
mov
sbb
and
xlat
mov
mov
sbb
fs
cmp
pop
mov
cmp
adc
arpl
andb
sub
mov
add
dec
adc
les
inc
mov
inc
and
pop
movsl
scas
pop
out
hlt
push
push
mov
pop
pop
outsb
loope
xchg
pop
push
mov
cld
mov
rolb
loope
mov
mov
jmp
mov
out
pop
loop
jns
inc
repz
mov
outsb
sub
leave
cli
push
lods
bound
addb
mov
sub
mov
mov
cmp
dec
movsl
cmpsb
fucomi
cld
stos
or
inc
out
jns
mov
pop
enter
mov
mov
cmc
loopne
dec
jo
or
mov
sbb
daa
or
in
push
push
push
mov
adc
fists
dec
mov
popf
and
iret
mov
lret
and
ret
fwait
sub
cld
insl
stc
inc
mov
xchg
popf
jnp
outsb
pop
and
into
out
hlt
cmpsl
push
dec
pop
cmp
cmp
stc
test
and
dec
rol
outsb
cmp
cmpsb
in
fcoms
and
in
push
fwait
push
cmp
or
ror
sub
leave
bound
xor
and
dec
mov
pop
or
adc
xor
fldenv
test
or
sti
loope
cmpb
les
inc
pop
in
mov
push
or
push
xor
jae
pushf
daa
mov
in
jno
cwtl
xlat
or
sar
jne
sti
dec
ret
pop
aad
bswap
inc
sub
xchg
mov
es
and
js
movsb
jmp
div
pop
adc
repnz
mov
lea
push
subb
or
fwait
adc
cmp
xor
rcl
mov
stc
jns
jp
mov
repz
or
nop
mov
shr
arpl
shr
pop
mov
subb
push
add
dec
setb
adc
cmp
jp
rol
mov
adc
neg
ficoms
jns
out
cltd
adc
ljmp
rcl
imul
mov
jbe
ret
mov
sbb
add
lods
into
xor
loop
test
ret
int3
and
dec
cmp
ret
ja
mov
loop
dec
sub
outsb
pushf
daa
jno
sbb
inc
ja
cmp
xor
or
mov
clc
or
int
pop
js
push
push
sub
das
in
push
sub
pop
addb
sub
into
arpl
in
ljmp
lods
xor
mov
xlat
inc
lcall
fmuls
add
mov
pop
sbb
orb
rorl
and
in
sub
popf
data16
ret
std
jp
sub
loope
imul
pop
imulb
or
cmp
pop
mov
or
bound
push
fwait
int
test
loope
xchg
mov
cmc
xchg
out
jge
test
in
push
mov
xor
cltd
sbb
inc
xchg
outsl
pop
loope
lret
pusha
mov
lahf
in
lock
sbb
jne
dec
stc
mov
dec
dec
push
xor
cmp
and
mov
xor
mov
sub
cltd
shrb
push
mov
xchg
test
pop
ds
adc
sbb
push
aad
mov
push
add
push
xsha256
cmpsb
rcl
gs
inc
push
inc
push
jno
lcall
xchg
push
lea
xor
outsb
add
inc
insl
rolb
adc
mov
xchg
popf
adc
xor
xchg
shll
movsb
push
jg
mov
rorb
jae
pminsw
mov
pop
mov
push
in
loop
pop
lock
mov
mov
and
test
ret
iret
cmp
inc
mov
mov
pop
jle
test
and
dec
out
adc
and
push
shl
xor
fwait
adc
sub
lret
push
outsl
test
xchg
adc
or
push
insl
inc
ret
mov
pop
js
lret
mov
js
stos
dec
push
cltd
and
mov
pop
loopne
lret
test
pop
in
inc
enter
or
push
xcrypt-cfb
cmpsl
daa
sub
xchg
jmp
repz
xchg
bound
or
push
push
lahf
sub
mov
cmp
std
stc
push
das
lods
outsb
xor
xchg
hlt
sub
aam
dec
jle
sbb
rorb
mov
xchg
in
adc
aam
inc
push
out
sbbl
mov
mov
inc
ja
xor
adc
mov
lret
sub
cmp
pop
fisttps
xor
in
jns
pop
sub
mov
mov
pushf
dec
lock
dec
inc
jbe
mov
adc
jp
gs
scas
add
cmp
push
mov
fildl
jle
dec
scas
cmp
fwait
cmp
ret
outsl
in
or
or
mov
xchg
push
cmpsb
push
jmp
int
jge
sar
stos
mov
push
rol
lea
dec
in
inc
xchg
or
jne
xchg
inc
or
aas
test
sahf
fsubl
pop
ja
mov
xor
je
xchg
gs
and
mov
icebp
add
push
xor
iret
mov
dec
mov
in
sbb
mov
loope
or
xchg
cmc
in
mov
cmp
aaa
ret
repz
enter
stos
push
cli
popf
sbbb
scas
dec
sbb
test
test
shll
or
leave
mov
in
lahf
mov
inc
leave
jb
xchg
sbb
and
and
cwtl
in
leave
adc
push
mov
fsub
pop
fildl
xor
pop
aas
jo
out
or
mov
jecxz
int3
in
hlt
push
xor
xchg
jno
js
icebp
mov
adc
dec
nop
dec
or
sbb
mov
stos
cmp
lea
nop
sbb
fucomip
mov
mov
mov
sub
jo
fs
into
lret
mov
mov
dec
sbb
aam
push
aad
enter
xor
push
clc
dec
xchg
call
push
out
fs
sub
push
mov
and
aam
in
inc
arpl
adc
out
lahf
inc
daa
or
or
inc
sub
std
dec
mov
lock
adc
sahf
dec
and
stos
add
loop
or
xchg
loope
fwait
jl
pop
cltd
inc
into
sti
inc
mov
std
shlb
dec
xor
jecxz
pop
xor
and
stos
jecxz
and
sub
jns
cwtl
sbb
sahf
cltd
xor
cmp
sti
pop
icebp
or
mov
shrb
pop
aaa
lret
loope
cs
test
add
sbb
jno
rclb
xchg
rorl
add
dec
movsb
mov
ja
inc
imul
inc
jbe
imulb
mov
adc
into
lahf
push
mov
pop
cltd
add
loopne
dec
out
push
mov
adc
inc
icebp
sbb
xlat
mov
lcall
lock
sbb
inc
xor
and
push
inc
xlat
mov
mov
jp
dec
mov
addr16
pushl
mov
mov
pop
cmp
or
int
dec
sub
fnstsw
test
sbb
fcompl
mov
out
sbb
add
xchg
fwait
mov
es
xor
mov
mov
push
mov
dec
ja
out
popf
jbe
xchg
ds
cmp
and
sbb
xchg
int
mov
jg
lea
fldt
je
imul
dec
fcom
mov
push
add
fucomip
cmp
mov
out
inc
testb
or
adc
cmp
fs
adc
loop
loope
adc
jbe
in
mov
in
mov
stc
jo
movsb
cmpsb
mov
roll
ret
adcl
inc
jecxz
es
fwait
test
shrb
xor
in
push
aaa
das
xchg
adc
js
jp
or
sub
test
cmp
mov
adc
lcall
and
lahf
push
fidivrl
imul
ja
out
jnp
stc
pop
fidivl
or
mov
adc
nop
push
inc
sbb
xor
daa
ljmp
std
dec
dec
dec
in
push
push
mov
enter
push
push
hlt
aas
pop
test
imul
xor
stc
fistl
test
mov
data16
lahf
repz
imul
or
popa
dec
sub
repz
inc
xchg
lea
ret
shll
fincstp
push
adc
inc
fistpll
callw
mov
push
cmp
jl
in
rclb
or
dec
jno
call
mov
xchg
insb
lret
inc
fwait
sub
stos
popf
dec
cmp
adc
mov
inc
add
cmc
jge
or
dec
jmp
or
fimull
push
cmpsl
mov
popa
xor
xchg
xchg
inc
adc
fisttpll
push
push
test
jl
idiv
sbb
xchg
in
fbld
repz
push
push
jno
inc
pop
pop
sub
pop
rcl
and
xchg
push
add
xor
xchg
xchg
sub
mov
xchg
repnz
xor
lods
mov
decb
push
jo
loopne
es
std
sub
cmpsb
jecxz
fucomi
xchg
xor
sub
jecxz
repz
push
stc
mov
pusha
test
into
aad
out
mov
jae
xchg
xchg
pop
fldcw
jae
push
mov
js
dec
xchg
sub
insb
inc
lahf
dec
cmpsb
test
cmp
lds
ror
jno
pop
dec
fsubl
adc
lcall
jb
gs
mov
and
notl
sub
dec
mov
push
repz
push
xlat
cmpsl
sbb
dec
mov
outsl
cmpl
or
and
shll
push
dec
addr16
lea
outsl
popa
mov
in
xor
jle
fsubl
sahf
out
fcoml
mov
push
push
mov
mov
call
ret
lret
xchg
daa
imul
sbb
xor
inc
pop
mov
jnp
popa
out
mov
test
dec
call
into
lods
dec
mov
cmp
xchg
pop
cmpsb
mov
push
add
jmp
mov
pusha
addr16
nop
test
adc
rorl
sbb
repnz
jno
or
dec
in
nop
pop
icebp
mov
sbb
test
push
aad
movsl
js
and
dec
int
push
cmp
or
in
xchg
test
inc
push
fnstsw
jnp
cmp
dec
mull
or
or
dec
outsb
jae
sub
jecxz
jg
stos
hlt
mov
hlt
mov
mov
out
arpl
cmp
enter
fdivr
int
inc
popa
mov
imul
fsubrs
adc
mov
cmp
fnstcw
imul
jmp
scas
or
scas
stos
jno
aaa
aad
add
dec
mov
nop
mov
dec
sub
mov
jb
pop
and
and
inc
shll
push
and
push
fldenv
or
adc
arpl
pusha
cltd
mov
into
mov
ljmp
add
sub
pop
aam
subl
sub
cld
dec
sub
stos
or
dec
pushf
sub
add
and
sbb
fwait
test
mul
sub
xlat
arpl
movsb
je
jo
push
clc
xor
addb
popa
push
push
dec
mov
pop
lock
ret
pop
repnz
negb
sarl
lea
jnp
dec
jmp
dec
pop
xor
add
or
dec
push
push
sub
cmc
roll
cltd
out
xlat
cld
push
mov
lahf
jnp
test
roll
lahf
loope
sub
aas
push
xchg
sub
mov
bound
and
adc
sbb
jne
int
push
ret
mov
in
xor
push
lret
xor
dec
add
fistps
enter
xor
push
pop
jge
mov
filds
sbb
pop
aaa
push
clc
test
int
jbe
mov
test
clc
leave
cmp
inc
cmc
punpckhdq
repnz
idivb
sbb
push
xor
cmpsl
mov
sub
insb
inc
in
rcrb
subb
fwait
lea
adc
jno
add
loope
mov
fisttpl
lods
dec
or
mov
sbb
movsb
mov
aas
or
bound
xchg
rolb
ds
bound
mov
icebp
fsts
xlat
xchg
jg
jp
mov
sahf
mov
jae
jne
enter
mov
or
repz
and
stc
xchg
push
stc
sbb
dec
xchg
out
sub
out
fidivrs
movsl
and
call
xor
sub
es
push
xlat
cmpsl
aad
push
das
lods
xor
xor
cmp
xchg
jne
int3
inc
push
jecxz
mov
rol
jnp
pop
mov
lods
icebp
xchg
fcoml
add
mov
add
pop
int
mov
ret
cmp
sbb
sbb
jge
nop
adcb
test
loope
lods
ucomiss
out
mov
xchg
clc
fistpll
dec
dec
ret
or
xchg
push
and
insl
pop
or
fwait
mov
jno
push
cmp
movsl
test
ja
lahf
jne
stc
addb
cli
outsb
aaa
loopne
jno
xchg
xlat
mov
ds
dec
ret
mov
adc
dec
mov
adc
xor
mov
call
mov
shl
adc
cmpsl
popf
loopne
ss
inc
xor
cmp
fadds
mov
neg
or
stos
push
xchg
ret
adc
ret
scas
out
lea
fstl
mov
ljmp
inc
gs
div
inc
mov
les
test
jg
nop
lcall
icebp
sbb
and
mov
out
push
fs
cmc
xchg
stc
cli
ja
sbb
fimuls
fdivrl
push
clc
push
push
lock
enter
ss
dec
stos
mov
sbb
xlat
pushf
std
andl
xlat
cld
jae
jo
jnp
xchg
gs
pop
inc
repnz
gs
fwait
rcrb
mov
push
and
cld
dec
inc
shll
sbb
lret
mov
jbe
out
mov
and
xchg
cltd
dec
in
or
pop
or
sbb
adc
cmp
cmpb
pushl
clc
dec
pop
insb
test
xchg
gs
clc
insb
imul
sub
int3
add
lods
jbe
hlt
stos
inc
sbb
jne
dec
or
imul
mov
jmp
test
mov
and
or
jb
sub
rcll
subb
mov
jecxz
xchg
fs
inc
out
jge
pushf
ljmp
gs
fistpl
mov
pop
out
out
mov
and
fisttpll
pushw
adc
test
iret
addr16
or
jge
inc
jmp
push
cltd
push
out
lcall
push
stos
or
popa
fidivl
adc
push
xor
dec
andl
sbbb
sar
rol
pop
sub
xchg
rclb
bound
adc
inc
push
lcall
xor
dec
jp
sbb
push
jns
and
or
call
int3
or
jo
xorb
mov
rorb
or
imul
hlt
lret
test
pop
push
mov
dec
rcll
subl
jmp
repz
fisubrs
outsl
cli
xor
je
mov
jl
fdivrs
arpl
mov
mov
fcomps
fistpll
inc
outsb
loop
notb
stos
lcall
movsb
mov
xchg
fdivr
sbb
jo
sub
and
sub
xchg
adc
and
dec
xor
lds
push
xchg
cltd
cmp
stos
outsb
push
pop
ss
push
mov
cmp
rclb
stc
xlat
lea
movsl
adc
je
inc
aas
or
imul
xor
push
in
lds
enter
repz
sub
sub
mov
rolb
pop
inc
in
mov
fisttps
popa
cmpsb
fcmovbe
aaa
in
xor
fiadds
sbb
inc
mov
popf
or
lcall
xlat
int
mov
or
mov
scas
and
imull
or
cmc
or
dec
mov
shl
mov
imul
mov
pop
add
andl
pop
cmp
popa
mov
enter
cmpsl
je
jp
push
mov
adc
stc
jmp
or
push
ljmp
mov
mov
pop
pop
repz
adc
nop
pushf
xorps
leave
and
ss
mov
and
push
mov
repz
inc
sub
cltd
sbb
push
dec
sbb
sbbl
sub
insl
mov
and
push
xorl
mov
repnz
mov
cmp
test
fwait
jle
aam
or
out
pushf
push
mov
nop
xchg
xchg
jnp
push
orb
push
inc
xor
and
ja
nop
movsl
dec
mov
or
lock
jb
sar
mov
adc
addr16
fistpl
add
test
xchg
fstl
aas
sahf
xor
cmp
push
arpl
aam
lcall
pop
sbb
mov
cltd
stos
aas
jb
pop
mov
int
mov
sahf
lds
pop
cmp
fbstp
jo
cli
stos
or
rcll
inc
add
or
cld
xchg
cmc
daa
jp
enter
push
push
cmpb
adc
popf
push
test
imul
cwtl
jmp
push
aas
adc
nop
sahf
cmp
test
outsl
test
jl
imul
xchg
push
mov
inc
inc
pop
fisubl
mov
and
ror
xchg
lods
aas
icebp
sbb
or
mov
leave
loopne
outsl
and
adc
test
and
sub
xchg
cli
imul
aas
lods
ficoms
and
in
xchg
les
cmp
adc
xchg
jb
dec
mov
or
jg
mov
cli
and
jbe
pop
add
mov
mov
or
sub
and
rcr
jne
xchg
lods
adc
adc
jl
stc
sub
mov
fistl
jecxz
cmp
test
sbb
push
movsl
push
jne
mov
mov
sub
push
cmp
xchg
mov
aam
sbb
mov
pop
aad
loope
cmp
clc
ss
dec
out
pop
imul
test
test
sbb
adc
push
pop
push
cltd
cmp
xchg
loop
sbb
lret
andb
inc
adcl
leave
mov
inc
cli
shl
mov
mov
divb
sbb
std
loop
inc
cmpsl
lcall
fidivs
fsubs
lret
pop
into
out
sub
mov
aad
adc
sbb
mov
mov
pop
or
inc
das
inc
and
mov
sub
int
rorb
add
mov
jns
shll
cmp
das
fnstenv
mov
out
dec
jl
mov
add
push
into
cltd
out
cld
jmp
pop
mov
sub
loop
mov
fisttps
lds
mov
push
iret
dec
inc
mov
mov
sub
cld
dec
fwait
dec
cmp
shll
add
loope
or
pop
sbb
mov
les
mov
xlat
jp
sbb
pop
into
mov
cmc
aas
repz
lods
or
js
xlat
out
ds
ret
mov
pop
dec
addb
aas
enter
xchg
daa
loope
in
push
push
push
movsb
ret
jnp
push
jbe
xlat
xor
popa
pushf
inc
push
sub
dec
pop
xchg
xchg
ljmp
push
inc
lret
int3
mov
xchg
shrl
icebp
jp
mov
sub
adc
mov
push
roll
loopne
xor
cli
xlat
add
loope
mov
in
movsb
cmp
or
rcl
sub
sub
adcl
les
adc
stos
shll
cmp
mov
pop
adc
jnp
sub
orl
jge
ljmp
adcl
dec
jne
pop
imul
cli
popf
xor
sub
fdivr
inc
mov
dec
jo
cld
mov
fs
pop
loop
andb
cmp
cs
add
adc
sub
pop
bound
testl
loopne
pop
or
leave
je
jl
scas
push
cli
in
repnz
dec
hlt
xchg
test
aad
cs
repz
enter
jp
shrl
pop
xchg
pop
es
jg
push
pop
inc
jle
clc
mov
imul
push
testb
xlat
sahf
es
inc
std
mov
lcall
sub
gs
lds
adc
bound
outsb
xchg
sub
mov
pop
push
cwtl
shrl
test
pop
in
push
lea
mov
test
adc
dec
out
div
dec
insb
popf
shr
mov
mov
and
adc
loop
xchg
addr16
lds
push
pop
jbe
mov
xor
dec
mov
mov
cltd
leave
paddw
dec
cmp
fcmovbe
rorl
aaa
add
or
inc
sbb
mov
je
xchg
nop
rep
fildl
sub
adc
pop
fs
mov
cltd
daa
push
hlt
sub
sbb
xor
std
cli
or
xor
mov
das
test
mov
js
in
ja
adc
and
daa
outsl
hlt
inc
lret
imul
mov
arpl
fmuls
outsl
cmp
mov
call
clc
mov
add
popa
int3
sub
sbb
roll
xchg
push
mov
jb
dec
add
sahf
push
jge
lret
mov
into
ljmp
xor
lret
inc
xor
xchg
mov
adc
cmpsl
mov
adc
xorl
xor
int
cltd
mov
add
add
fcoms
mov
test
cmp
lret
push
inc
leave
inc
mov
imul
test
cmc
lods
jnp
jae
inc
push
negb
adc
inc
fs
rorl
test
ret
test
mov
scas
inc
dec
lods
imul
bound
push
push
cltd
xchg
sbb
adc
sbb
push
clc
hlt
clc
int3
int
cmpsb
sub
call
sbb
add
popa
pop
std
sahf
lcall
repz
jno
aaa
mov
test
pop
push
inc
outsl
pop
adc
xchg
mov
in
push
sbbl
mov
and
mov
ss
adc
scas
and
push
daa
mov
xchg
pushf
inc
jl
gs
inc
es
movsl
pop
xchg
sub
cmp
dec
jno
test
stos
or
lods
sbb
dec
jno
xchg
and
jl
fdivs
pop
fists
in
stc
cmpsl
fidivrs
mov
jnp
fs
cmpsl
sbb
ret
ret
rcr
les
add
pop
pop
fcomps
arpl
std
inc
dec
adc
adc
ja
and
push
and
sti
lret
in
mov
scas
negl
mov
rclb
loope
and
sub
and
iret
pop
cmp
xor
mov
jp
sub
sbb
arpl
mov
popf
jbe
imul
inc
das
cmp
xchg
sub
add
movsb
ljmp
shll
bswap
pop
subl
mov
gs
imul
out
and
cmp
shrl
lahf
add
adc
and
les
imul
jb
push
addr16
mov
subl
inc
pusha
adc
mov
outsb
jbe
jl
adc
fsubl
jbe
fcmove
pop
adc
mov
les
jnp
pop
add
push
sbb
int
add
es
pop
cwtl
repz
inc
sahf
dec
in
cmpb
lret
pop
xor
mov
xor
insb
pushf
test
push
or
xor
iret
ja
pusha
mov
mov
sbb
dec
sbb
inc
les
in
lods
adc
aaa
mov
pop
pushf
movsb
daa
fwait
pop
test
add
or
xor
mov
xchg
fstp
call
icebp
sub
cltd
aas
addr16
les
mov
push
mov
or
clc
ds
push
or
mov
jg
in
outsl
mov
push
fstpl
cld
xor
sub
incl
cmp
pop
neg
and
mov
and
arpl
je
mov
cmp
mov
xchg
in
push
xchg
in
nop
scas
dec
lds
pop
outsb
xlat
jg
arpl
jecxz
fadds
xor
sub
andl
xor
sbb
mov
and
mov
das
addr16
in
int
add
pusha
add
insb
push
xchg
movsb
mov
clc
adc
push
imulb
xor
loope
jbe
mov
andb
xor
dec
mov
jo
cmp
dec
popf
sbb
jb
jns
ror
stos
int3
pushf
cmp
imul
lock
outsb
xchg
outsb
std
das
add
pusha
adc
xchg
dec
enter
dec
fucompp
shll
repz
push
je
cs
test
add
into
xorl
push
imul
insl
cli
jle
pop
pop
ret
hlt
adc
sbb
xchg
fdiv
jne
lahf
sti
push
test
ja
push
scas
jnp
mov
or
les
or
in
push
pop
add
mov
dec
mov
add
mov
imul
or
mov
pop
jo
xor
loope
pop
enter
andb
cmpsb
push
or
out
incb
aad
scas
mov
fcmovne
add
push
pop
mov
adc
outsl
sti
arpl
ljmp
stos
in
iret
mov
jg
cltd
popa
fbld
test
cmp
in
push
jle
push
cmpsl
loope
popf
inc
dec
out
push
lcall
push
sub
xchg
sbb
imul
imul
in
daa
mov
pop
adcl
gs
scas
cmp
mov
sub
fwait
mov
lret
cwtl
adc
test
lods
call
mov
and
sub
icebp
push
xchg
lahf
and
cmp
jp
inc
cmp
pop
fsubl
dec
in
or
push
cwtl
bound
out
loope
mov
dec
test
jl
mov
mov
sbb
sbb
repnz
mov
aas
cltd
or
mov
sbb
inc
outsb
jp
out
lahf
mov
mov
jecxz
stos
adc
clc
outsl
pop
push
add
outsb
xchg
jmp
xchg
mov
inc
shll
adc
ss
jne
sub
add
into
test
pop
xor
dec
and
mov
cmp
ja
scas
mov
and
rorl
jp
xchg
imul
lds
mov
ljmp
cld
dec
movsl
lahf
xchg
shll
mov
add
pushf
les
movsl
adc
xchg
in
sub
inc
rcr
rolb
dec
nop
sahf
popl
lahf
mov
pop
mov
pop
test
inc
xchg
std
push
leave
sub
pop
daa
adc
in
inc
addr16
mov
lahf
cmp
rolb
jl,pn
ljmp
sbb
mov
insl
imul
roll
push
lods
and
inc
push
push
test
inc
cmc
pop
mov
cli
and
adc
inc
xchg
sub
mov
ss
jne
or
add
lahf
jmp
aad
xlat
push
enter
lret
fisubl
pusha
int3
xchg
xchg
inc
cmc
lret
jg
insb
in
scas
push
adc
and
jge
pop
pop
mov
dec
out
push
add
cs
loope
or
mov
jns
aaa
mov
repz
stc
negb
or
xchg
ja
rorl
or
adc
leave
cmp
adc
cmp
aaa
lods
cmc
xchg
mov
cmp
adc
add
xchg
jmp
mov
mov
mov
jle
xchg
aad
std
pop
clc
or
push
in
outsl
lea
fnsave
fisttpl
pop
sub
push
data16
cmp
and
icebp
jp
mov
mov
and
adc
movsl
mov
mov
lea
adc
popa
js
data16
cmpsb
xchg
sar
test
adc
mov
les
sub
lods
mov
out
mov
jb
cmp
inc
fnstenv
scas
test
mov
ss
and
jns
cmpsb
jb
mov
imul
movsl
stos
pop
push
inc
sarb
nop
repnz
shll
std
leave
daa
mov
dec
push
adc
xchg
divb
jnp
mov
fbld
mov
out
pushf
pop
outsb
cltd
xor
and
sbb
push
inc
jge
sbb
pop
sar
xlat
fdivs
add
jb
pop
add
cmpsb
push
outsl
or
mov
xor
outsl
jmp
cmp
inc
pusha
or
data16
push
test
pop
push
adc
inc
xor
dec
mov
mov
int
andl
or
addr16
cmp
cmpsb
mov
cmpb
dec
aam
orb
lods
and
cmp
jmp
cmp
mov
sub
and
sbb
push
mov
sti
and
jo
pushf
arpl
cmc
cmc
test
nop
mov
add
into
adc
xchg
scas
adc
sub
jb
mov
or
sahf
subl
cmc
dec
lds
bound
in
jnp
daa
aaa
sahf
ljmp
dec
test
fcoms
cmpsb
push
sbb
or
ja
in
cwtl
ret
pop
sarb
pop
icebp
arpl
pop
inc
popa
cmp
inc
add
cmp
jnp
cmpsl
mov
dec
jmp
mul
arpl
pop
and
push
xchg
and
iret
in
pop
sbb
dec
jmp
shl
jg
scas
sarb
lods
xchg
insl
stos
jb
fimuls
shlb
test
pop
and
hlt
push
lock
addr16
jecxz
je
mov
je
in
sub
pushf
mov
flds
loope
add
insb
pop
loope
adc
dec
lock
repz
jb
jg
cli
mov
or
imul
mov
fbld
lods
sub
cld
rcl
jbe
xor
pusha
popa
fcoml
push
mov
fbld
repnz
ss
jo
pop
pop
jmp
std
mov
push
adc
sti
xlat
sub
push
sti
mov
mov
add
shrl
cmp
imulb
mov
inc
sub
add
ja
int
push
jmp
cmpsl
loope
adc
jnp
pop
push
mov
lock
inc
xchg
je
xor
adc
push
jne
push
call
mov
lret
pop
jbe
and
lds
xchg
jmp
insl
loopne
xchg
sub
das
outsb
pop
add
into
sub
and
stos
mov
in
xorl
dec
add
jp
mov
popa
out
and
in
dec
jo
xchg
pop
xlat
or
addb
dec
xchg
fimull
popl
jle
xor
leave
repz
aas
adc
inc
ret
inc
shlb
sbb
cmp
subb
loop
mov
scas
xchg
fsubrl
xor
les
roll
scas
cmp
push
mov
push
jbe
scas
mov
inc
jns
sbb
sbb
and
cld
lock
out
movsb
mov
jno
pop
std
dec
in
aaa
inc
int
rcll
adc
and
and
xchg
out
lock
xor
mov
cmp
or
inc
inc
call
fprem
je
aam
sbb
fld
inc
cli
movsb
aad
bound
cmp
popf
mov
mov
ret
mov
xchg
out
sub
or
shrl
aam
jo
aad
jecxz
and
jo
xchg
adc
xor
hlt
loopne
movsb
ds
lds
dec
cmc
lret
rorl
mov
repz
mov
mov
sub
arpl
adc
hlt
ja
packsswb
rcll
movsl
lahf
fdivrs
sub
ja
mov
sub
mov
cmp
insb
mov
dec
add
in
pop
ljmp
bound
in
daa
loop
push
and
pushf
xor
mov
mov
push
repnz
lahf
mov
push
mov
or
xor
cli
aaa
sbb
jmp
adc
test
inc
insb
xchg
pop
sbb
iret
cmpsb
out
jle
cmpsl
aaa
insb
ds
arpl
xchg
mov
fstpt
cmp
mov
mov
into
cmpsl
inc
stos
leave
sub
outsl
lret
aam
into
or
push
insl
outsb
outsl
arpl
iret
mov
aam
shll
pop
or
inc
adc
cltd
and
cmp
pusha
push
ljmp
mov
out
movsb
mov
and
int3
dec
push
int3
xchg
push
pop
filds
shl
jmp
sbb
lcall
das
jae
xor
sub
movsb
sub
lock
xor
addl
mov
mov
sub
mov
in
jg
rclb
or
loop
scas
mov
jnp
hlt
lods
repnz
repz
mov
mov
loope
dec
pop
ljmp
mov
push
lcallw
mov
mov
loop
sbb
cli
fwait
mov
int
xchg
out
test
cmp
sbb
addr16
icebp
ljmp
xor
lods
sahf
dec
ret
fadd
dec
testl
lock
adc
in
ficompl
int
aas
and
test
in
and
dec
sbbb
mulb
add
call
sahf
cmp
jp
xor
jbe
movb
in
aaa
repnz
sbb
or
out
xchg
nop
inc
popf
js
inc
iret
push
mov
lret
cld
fsubl
aad
dec
stc
icebp
pop
cmp
stc
shr
or
xchg
mov
scas
leave
mov
or
fisttpll
mov
ror
mov
push
aam
dec
mov
cmp
out
jbe
and
aas
xor
in
ja
mov
jo
hlt
loope
add
loope
jne
xor
push
into
xor
mov
test
xor
adc
outsb
lods
stc
mov
mov
leave
test
dec
movsl
pop
aas
clc
xorl
add
test
int
aad
pop
push
pop
out
pusha
in
cmp
inc
jns
jg
int3
shlb
popa
mov
js
rolb
es
adc
add
arpl
cmp
data16
push
jnp
out
testl
loop
mov
push
das
loopne
or
mov
xor
js
and
and
cs
xor
in
xor
pop
jmp
in
jb
inc
pop
sbb
rorb
arpl
ss
je
popa
push
aas
mov
cltd
imul
movsl
stos
inc
loope
dec
repnz
push
loope
jo
scas
xor
adc
test
pusha
lcall
filds
mov
sub
dec
push
xchg
or
leave
mov
mov
ljmp
nop
sbb
lret
push
pop
and
mov
cmpsl
addb
out
in
sub
lahf
sarb
icebp
jne
add
hlt
xchg
dec
enter
sbb
fsubrl
cld
add
mov
pop
cmp
mov
dec
jl
mov
xchg
stc
mov
mov
jecxz
xchg
andps
leave
xor
out
jl
ret
lea
in
cli
gs
mov
sbb
push
cmp
sti
mov
cmp
rolb
out
sub
gs
outsl
mov
inc
sti
cwtl
or
xchg
sbb
or
lock
out
mov
rol
cmp
push
shlb
mov
jae
sbb
dec
and
or
imul
mov
add
testb
bound
mov
popf
lahf
and
pop
in
mov
push
jbe
jo
cltd
testb
test
loop
cmp
inc
in
stos
mov
leave
cltd
shll
fmull
aam
rorb
popf
push
xor
push
dec
sub
cltd
sbb
lock
jle
mov
jo
or
fisubrs
shll
pop
adc
pop
out
mov
test
pop
fwait
cwtl
add
xchg
jbe
jns
sub
mov
xchg
mov
add
mov
push
push
iret
pop
adc
xor
push
or
or
mov
js
into
aad
rcr
sub
arpl
add
call
lcall
push
jl
out
rorl
into
xor
push
cmpsl
aaa
imul
pop
push
or
push
call
push
int
cmpsl
pop
mov
dec
sub
xchg
mov
sti
ss
js
dec
test
stos
sbb
leave
xor
popf
inc
and
push
sbb
and
call
daa
ja
jns
cmpsl
imul
sahf
push
scas
add
out
and
lret
cmpl
cmp
sub
xor
dec
add
insb
stos
cltd
jl
sub
and
lcall
inc
jo
lds
test
or
or
add
insl
cs
xor
arpl
jbe
icebp
sahf
call
xchg
add
repnz
push
adc
push
jb
inc
lock
mov
fnstcw
push
aaa
std
fiaddl
inc
in
aas
mov
inc
ds
sub
mov
insl
pusha
insb
inc
std
xor
daa
push
mov
adcb
dec
xlat
add
push
jns
inc
mov
ficoml
push
pop
or
jns
movsl
jp
pop
dec
insb
orl
mov
xchg
lock
ret
mov
jbe
or
mov
pop
cmp
cmpsb
rorb
andl
fsts
pop
inc
outsb
loop
xchg
sahf
sti
lret
jecxz
into
rol
push
and
lea
xor
nop
cmpsl
jo
adcb
or
test
pop
pop
mov
std
xor
inc
mov
inc
adc
shlb
jmp
xchg
sub
sub
das
lret
add
or
mov
test
mov
cmp
std
pop
mov
sbbl
loop
cld
cltd
fprem
inc
mov
add
daa
mov
push
cmpsb
sbb
mov
mov
xor
cmp
loop
cmc
movsb
push
push
cli
push
insb
mov
in
imul
nop
sub
mov
lods
jb
sahf
push
in
push
das
sbb
lret
std
sti
shll
ret
loope
cmc
push
mov
mov
ret
jg
xor
cmp
sub
lds
cwtl
or
aad
clc
or
cmpsl
dec
loopne
fdiv
ljmp
mov
popa
insl
test
dec
ja
gs
mov
stos
aad
push
cmpsl
test
int3
movsl
loop
sub
test
lods
test
dec
xchg
bound
push
or
leave
push
adc
xor
mov
cld
push
and
sbb
mov
mov
clc
popf
xchg
jne
and
jb
int3
cmp
ljmp
cli
outsb
mov
lcall
and
psubw
cwtl
data16
xorb
xor
negb
std
aas
add
xchg
pop
pop
out
fdiv
es
es
jb
mov
mov
pop
dec
js
inc
jae,pt
aad
ljmp
push
fdivl
add
and
pushf
dec
lods
push
push
or
loope
push
outsl
xor
inc
push
test
or
int3
cmc
xchg
xor
jecxz
xor
sub
data16
mov
sbb
test
ss
mov
lock
mov
xchg
cltd
push
push
jl
xchg
sahf
sbb
mov
mov
pop
and
ja
stc
sbb
subl
call
push
pop
push
gs
outsb
lods
decl
cs
stc
shll
aas
jg
cmpsl
jle
sub
pop
into
dec
xchg
fildl
frstor
add
adc
jns
push
jnp
jmp
fcom
mov
adc
fdiv
enter
sub
mov
xchg
sbb
outsl
and
cltd
div
mov
dec
lret
jecxz
rclb
inc
pop
push
enter
and
fadds
insb
xor
outsb
lods
and
pop
pop
add
decl
iret
lock
dec
popf
inc
pop
aad
stos
insl
or
aad
loope
pop
push
inc
mov
xchg
or
mov
loopne
cmpsb
jb
mov
xchg
aaa
add
or
push
lods
and
add
and
outsb
cmc
sbb
pop
mov
pusha
push
out
mov
or
xor
and
or
dec
xor
mov
dec
out
or
and
cmpsl
mov
mov
enter
out
add
push
stos
adc
push
sbb
jae
mov
dec
mov
clc
xlat
pop
out
into
cmp
inc
mov
sub
rclb
xor
dec
mov
fs
dec
stos
das
cli
scas
mov
iret
sbb
mov
int3
fistps
aad
pop
gs
sub
dec
jmp
xchg
inc
sub
push
shr
mov
pusha
cs
out
sub
xor
out
fldcw
add
jmp
mov
mov
mov
or
out
mov
xor
test
xchg
ficompl
adcb
push
dec
mov
adcl
adc
movsl
push
stos
mov
inc
sarb
aaa
xchg
fistl
jmp
out
cmp
cmc
hlt
xchg
hlt
imul
sbb
jp
push
sbb
mov
sub
mov
pop
roll
sub
xchg
xor
cmp
arpl
dec
sbbb
les
sbb
pushf
cmpsl
mov
mov
mov
js
sbb
out
or
and
sbb
xchg
in
cmp
xchg
dec
shrb
out
inc
jno
mov
or
dec
stos
xchg
lahf
jmp
inc
gs
imul
jnp
adc
add
add
xchg
call
jg
cli
push
push
je
jge
cs
xchg
mov
push
xchg
lea
xor
dec
pop
sahf
add
leave
dec
mov
pop
or
out
mov
les
lret
gs
aaa
push
add
jne
orb
push
inc
dec
cwtl
es
lock
mov
add
pop
imul
cmpl
pushf
aam
xor
ljmp
sub
pusha
add
or
pop
inc
mov
cmp
sbb
lods
lret
add
push
aaa
je
pop
add
dec
sbb
lahf
mov
sub
iret
aam
xchg
popa
sarl
test
test
xor
enter
mov
sbb
mov
pop
push
mov
mov
mov
rolb
push
xchg
xor
testl
ljmp
add
cmp
mov
and
mov
mov
fisubs
jbe
push
jae
repnz
mov
mov
xchg
into
lret
pop
pop
lods
add
ss
mov
sti
shrb
inc
sarl
inc
sub
pusha
in
xor
pushf
adc
jge
xor
lods
pushf
push
push
sub
hlt
xor
sti
pusha
and
mov
fstps
ja
cmpsl
lods
stc
jne
out
shr
mov
data16
fwait
xchg
pushf
gs
int
ret
xor
clc
sub
mov
data16
jne
mov
fdivp
mov
ja
in
test
loop
inc
inc
jns
dec
pop
ds
sti
jg
pop
ja
clc
and
mov
scas
mov
adc
mov
add
test
out
cmp
xor
inc
lods
subl
in
cli
subb
inc
push
fists
pop
mov
icebp
and
xorl
sbb
rclb
fnstsw
add
jns
or
add
or
jg
daa
fcomps
idivb
push
sbb
arpl
pop
jae
pop
ret
jmp
jmp
enter
xchg
push
cwtl
jns
nop
fstps
aaa
jle
scas
mov
lea
ret
inc
xchg
xchg
scas
sbbb
dec
xor
adc
cmp
je
lods
mov
orb
out
loope
xlat
mov
stc
lcall
mov
jb
push
mov
xchg
cmc
popa
fldcw
push
mov
sbb
ret
repz
icebp
icebp
and
divb
stc
pusha
mov
push
daa
gs
mov
pop
fbstp
xchg
jmp
mov
xchg
ja
inc
add
push
inc
adc
movsb
inc
lret
cmpsl
repnz
loop
incb
sahf
shrl
inc
aam
cmp
stc
pop
inc
or
pop
jns
into
push
js
or
add
pusha
dec
into
rorl
add
repnz
ret
les
pop
xor
out
stc
xchg
or
js
inc
adc
mov
add
sti
fs
xchg
mov
je
or
dec
mov
mov
aam
daa
arpl
push
mov
xchg
pushl
push
or
xor
mov
int
jo
hlt
xchg
sbb
push
xor
push
test
inc
adc
push
dec
add
loop,pn
cmp
adc
cmp
lcall
in
xor
jmp
xor
xor
pop
and
mov
sub
pop
adc
pop
movsb
lcall
mov
cmp
dec
outsb
dec
das
mov
out
mov
idivl
jne
mov
data16
fs
shr
and
lret
je
pushf
pop
and
sub
test
call
mov
push
add
cmp
aas
xchg
addr16
clc
mov
and
mov
out
add
test
push
cmp
xor
jecxz
fisttpll
sbb
hlt
xchg
shlb
cmpsl
push
in
lock
mov
and
mov
outsb
pop
in
push
lcall
push
out
sahf
jne
hlt
pop
mov
das
push
inc
sub
movsb
and
aas
xlat
xor
hlt
push
sbb
push
mov
inc
ficomps
sub
scas
sub
or
mov
lret
outsb
xor
daa
jp
test
lret
rol
xor
aad
mov
aas
in
xchg
sub
into
xor
in
push
test
fwait
lods
movsb
fistpl
ss
in
add
add
cmpb
imulb
test
adc
dec
sub
aam
adc
xor
cld
nop
jmp
jg
cs
nop
call
push
fbstp
pusha
aad
lret
pop
mov
mov
dec
addb
or
pop
add
shll
movb
jnp
push
add
sar
nop
dec
dec
mov
in
and
sarb
or
js
mov
stos
aaa
xor
ror
xorl
icebp
iret
xchg
push
dec
imul
inc
in
jno
testl
lock
cld
cltd
sbb
mov
dec
cmp
roll
push
loopne
sbb
aaa
mov
enter
xchg
mov
lcall
fwait
xor
or
sbb
mov
dec
and
movsw
dec
xor
pop
sbb
mov
movsl
lahf
mov
pop
nop
sarl
jne
push
dec
pop
dec
call
pop
mov
fmull
lahf
or
dec
inc
mov
dec
nop
fcom
pop
mov
mov
call
inc
cmp
push
adc
lods
fiadds
daa
ds
jns
sub
mov
popa
xor
mov
or
scas
mov
push
nop
ret
fiadds
sub
int3
push
add
jle
sub
jge
insb
cmp
cmp
fsts
xor
stos
sti
fadd
insl
stos
xor
push
outsl
movsb
inc
stos
dec
mov
jae
add
outsl
inc
in
clts
push
into
test
push
pop
fdivs
rcrl
mov
gs
mov
call
mov
mov
mov
mov
push
mov
adc
sub
sub
out
lock
movsb
sbb
inc
adc
xchg
bound
lahf
push
sbb
xlat
in
pusha
lds
outsb
ja
xlat
inc
cld
lcall
loope
hlt
repnz
dec
shlb
pop
sub
pop
scas
xchg
shll
push
xchg
shrl
fbstp
push
jmp
sbb
pop
loopne
pop
xchg
sbb
das
pop
imul
pushfw
push
xchg
dec
stos
dec
sub
repnz
enter
inc
or
mov
push
dec
inc
xchg
cmp
mov
icebp
ljmp
outsl
lret
jbe
add
mov
loope
test
imul
mov
out
out
popl
mov
pop
ss
pop
aaa
ljmp
jmp
mov
inc
jbe
cmp
and
ret
pop
test
add
sbb
mov
lret
mov
push
or
call
js
or
and
fstpl
loopne
inc
push
sub
lret
pop
repnz
mov
sub
mov
sub
push
mov
sets
scas
out
leave
int3
ret
rcrb
sarb
aam
mov
mov
movsb
inc
adc
lds
inc
icebp
dec
inc
mov
cld
mov
test
mov
or
pop
cmp
and
fs
loopne
sub
lock
mov
jnp
mov
pop
mov
cmpsl
in
int
pop
mov
out
fucom
mov
mov
lds
lds
and
rorl
cmpsb
lods
push
jo
or
inc
stos
loop
mov
mov
cld
dec
pop
sub
fsts
nop
sbb
fsts
adc
jnp
loop
shlb
mov
icebp
sbb
sbb
dec
mov
push
xor
out
shl
push
jne
call
ds
subl
mov
divb
stos
mov
sbb
jg
inc
fidivrl
out
repnz
jnp
xchg
dec
adc
dec
idivb
dec
push
ja
scas
in
push
js
mov
icebp
cmpb
xchg
xchg
fildl
jns
cmp
fiadds
and
adc
dec
adc
dec
jecxz
inc
imul
add
jl
cmp
aad
push
cmp
and
mov
mov
ret
lds
push
mov
enter
xor
cli
xchg
xchg
adc
pop
mov
pusha
into
sahf
dec
cmp
enter
je
add
shrl
popf
mov
loopne
test
outsb
ja
xchg
xsha1
cmpsb
dec
sub
aaa
aad
xor
daa
or
and
inc
out
arpl
ss
mov
incb
jmp
and
lea
dec
aad
popf
and
pop
push
jno
repz
repnz
roll
push
fs
pop
fidivl
jl
jbe
lea
jecxz
scas
mov
fidivrl
push
xchg
pop
sbb
aaa
repz
roll
cmp
lret
aad
aad
mov
lea
ss
dec
out
addr16
inc
jp
xchg
adc
pop
inc
lcall
les
cs
adc
ljmp
adc
xchg
fucomi
out
cmpl
dec
jne
rcr
mov
sub
jp
push
xchg
or
jbe
iret
cmpsl
mov
xchg
adc
das
pop
xchg
push
out
test
pop
xchg
xor
in
add
push
mov
outsb
push
xchg
mov
movsl
or
push
push
fadds
or
std
and
ds
ficoml
xor
or
out
cmp
xchg
mov
mov
insb
out
xor
icebp
sub
cmp
jg
cmc
jns
mov
cmpsb
dec
call
iret
push
push
sete
aas
repz
jb
mov
fcomp
push
cli
out
into
loope
jecxz
arpl
aad
mov
std
leave
inc
mov
sarb
mov
fsubs
iret
push
mov
push
fimuls
fildl
dec
mov
lods
lahf
and
leave
ss
scas
inc
jb
xchg
or
pop
mov
pop
test
les
xchg
push
je
fwait
add
test
pop
push
fdivrl
add
cli
jmp
xor
mov
sbb
in
leave
jmp
mov
pop
and
pop
xchg
das
push
bound
jmp
push
shr
pop
popf
cltd
mov
shr
inc
ret
cmpsl
or
jg
icebp
out
add
stos
bound
test
sub
sbbl
sub
stc
fwait
jl
mov
cmp
cltd
cmp
or
or
sahf
or
push
out
bound
dec
add
inc
mov
push
imul
add
outsb
jbe
fwait
or
xlat
pop
add
push
adc
inc
leave
push
es
mov
stc
add
push
add
pop
pop
es
pop
push
iret
push
sub
pop
adc
add
cld
cmc
mov
movsb
sti
inc
sub
call
test
in
mov
jp
enter
data16
add
pop
into
mov
inc
cmp
xor
cmpsb
pop
adc
arpl
sarb
into
jecxz
mov
aad
pop
inc
aaa
incb
cmp
mov
rclb
aam
or
pop
sti
push
cmpsb
or
inc
neg
add
loope
daa
push
push
ret
ljmp
cmp
jge
cli
ljmp
jnp
xchg
faddl
or
lret
shll
fisttpll
ljmp
push
daa
mov
fisubrs
hlt
lcall
lcall
mov
aam
insb
and
cmc
pushf
mov
pop
lahf
adc
and
ret
shll
add
jge
sbb
mov
je
sarb
xor
gs
or
notl
cmp
nop
faddp
nop
push
lea
cld
pop
je
repnz
adc
cmp
stos
jo
je
lahf
insl
hlt
cmpsl
and
paddsw
pop
inc
scas
sub
push
inc
inc
mov
lods
std
cmp
xchg
test
sbbl
sub
sub
dec
test
xchg
cld
xor
dec
ss
add
xchg
lods
jecxz
dec
jne
loop
in
adc
mov
cmp
movsl
out
aad
stc
sub
cmp
and
dec
shlb
xchg
lret
dec
decb
sbb
popf
xchg
sbbl
mov
adc
mov
push
cs
mov
fwait
cs
lret
cltd
add
movups
mov
xchg
mov
push
dec
rclb
cld
cmp
addb
jle
and
daa
negb
inc
scas
nop
jp
ret
mov
push
loopne
dec
daa
adc
sub
add
xchg
sbb
jge
jae
fcom
fldenv
and
add
pop
pop
jb
or
cmp
je
stc
dec
ds
ja
mov
xchg
hlt
loop
out
int3
addr16
fstps
pop
mov
cwtl
or
jge
int
push
leave
mov
fdivs
sahf
in
sub
jnp
inc
pop
jmp
pop
cmp
jns
lock
push
jmp
mov
adc
jne
mov
out
ret
repz
in
cli
mov
cmp
jle
sub
push
repz
mov
inc
test
xchg
push
andl
lods
insl
int
mov
ret
outsl
fists
popl
into
aad
xchg
ds
fwait
scas
test
push
lea
js
jl
inc
pushf
mov
and
sbb
adc
fwait
jns
mov
fucomip
aam
fadds
cli
sub
sahf
ret
int
add
pop
rep
jp
or
mov
pop
or
fwait
sub
stos
mov
das
insb
adc
shlb
xchg
inc
inc
dec
subb
xor
push
sbb
mov
shlb
push
jb
jbe
lds
mov
pusha
js
sub
fs
mov
ljmp
sub
into
lds
sub
jecxz
movsl
bound
cld
repz
add
sbb
add
movsl
mov
cmp
int3
rcr
adc
jp
hlt
sbb
sub
mov
and
data16
push
xor
daa
mov
pop
aam
std
mov
and
pop
mov
scas
hlt
out
sub
push
pop
ds
xor
pop
rorb
mov
xor
roll
out
int3
inc
jb
in
pop
and
sub
popf
pop
xchg
push
test
mov
add
adc
pushf
lahf
in
xor
ss
js
jge
mov
mov
int
jecxz
sbb
lock
ja
inc
scas
cmpsl
das
xchg
repz
jmp
shr
inc
shrb
dec
mov
jle
xchg
int3
leave
les
lods
jns
mov
and
enter
push
popa
adc
js
mov
data16
into
xchg
mov
cmp
sub
xchg
cli
test
xor
jle
dec
scas
pop
mov
jmp
daa
mov
push
ljmp
dec
aam
cltd
add
adc
push
mov
inc
out
mov
arpl
push
pusha
pushf
push
lret
leave
xchg
out
mov
jb
loopne
dec
push
xor
add
cmpsl
sbb
push
or
arpl
mov
mov
in
inc
mov
inc
loop
push
adc
sbb
push
pusha
data16
jo
outsb
fs
and
dec
xor
insb
nop
and
aas
pushf
add
xchg
inc
jae
mov
dec
arpl
int3
out
addr16
inc
lcall
pop
repnz
loopne
frstor
pop
sahf
cmp
jbe
dec
rcl
nop
dec
cmpsl
loope
lahf
lock
and
into
xchg
fnstsw
sbb
mov
mov
scas
xor
mov
or
pop
add
push
stos
or
and
imul
ljmp
adc
inc
inc
inc
popf
enter
mov
jg
or
xor
ret
lods
xor
adc
jmp
dec
pop
mov
mov
popl
inc
outsl
ss
rcrl
loopne
insb
jnp
pop
sub
fisttpl
add
loope
pusha
insb
mov
sbb
xchg
loope
comiss
push
sbb
adc
adc
jb
pop
lret
imul
and
sbb
pop
push
ret
sbb
rcll
xor
movsb
ja
mov
inc
sti
dec
andb
or
mov
cmc
imul
pop
mov
fsts
cmc
icebp
xchg
ret
and
lcall
mov
jmp
notb
add
jge
mov
mov
ror
xchg
pop
dec
mov
jb
xor
jns
stos
aam
jl
mov
test
test
fidivrl
dec
cmp
sub
sbb
cmpsb
xor
lock
or
mov
out
mov
or
mov
ds
fcmovnbe
xchg
adc
lods
push
fstpt
jae
aam
xlat
dec
add
in
mov
jno
mov
jl
jnp
loop
cmp
js
jg
sbb
jb
jno
inc
adc
outsl
cmp
lea
inc
mov
pop
mov
and
mov
jecxz
es
xor
aam
into
sbb
mov
push
push
out
jmp
push
jbe
out
ds
mov
je
loop
push
and
push
movsb
fisubrl
ficompl
bound
mov
xchg
ja
lret
inc
rcrl
mov
jo
adc
dec
xor
ja
jp
xlat
sub
leave
shll
les
es
js
mov
cmp
cs
cmc
xor
test
clc
jns
dec
add
pushf
les
mov
xor
fistps
test
and
cmp
mov
bnd
push
add
xor
outsl
test
inc
jmp
roll
add
aad
nop
ja
int
mov
in
xchg
lcall
adc
es
daa
pop
mov
lret
jmp
mov
sub
stos
push
push
aam
mov
pop
fst
in
insb
cmp
xor
add
mov
movd
in
jae
fstpl
stc
out
inc
sub
in
and
nop
ljmp
stos
pop
cmpsb
inc
inc
sub
adc
pop
andl
sbb
xor
xorl
stos
dec
sbb
adc
inc
clc
hlt
into
pop
xchg
cmpsl
ficoml
dec
test
shlb
aas
or
ds
nop
in
jmp
cltd
jmp
jmp
sbb
fcmovb
push
push
cmp
jg
call
cmc
xor
rorb
mov
pushf
inc
add
jmp
dec
mov
cltd
insb
dec
sub
test
shlb
mov
in
and
pop
mov
rep
popl
xchg
pop
sbb
pop
adc
divb
or
and
icebp
aaa
sub
fldt
jle
fs
out
cld
ds
test
inc
cltd
pushf
mov
int
inc
dec
and
cmp
mov
push
jp
outsl
icebp
mov
mov
bound
dec
push
out
shrl
xchg
ret
pop
fstps
inc
ljmp
add
das
fnsave
push
push
dec
cmp
aam
jmp
xor
inc
call
fadds
cmp
push
gs
and
add
sub
icebp
mov
ljmp
cmp
and
add
inc
xchg
xorl
roll
jnp
cmc
jno
push
mov
push
fwait
mov
fadd
in
add
stc
jb
or
mov
ss
into
mov
mov
mov
ja
ret
iret
jnp
sub
fstp
push
repz
shll
xchg
mov
mov
mov
in
leave
push
andb
adc
or
cmp
mov
pshufw
mov
sarb
enter
fadds
or
sbb
or
push
sub
pop
cmp
push
cs
jecxz
call
jecxz
mov
cmp
and
jnp
and
add
mov
sarb
outsb
mov
cld
addr16
in
mull
fs
icebp
sbb
xchg
add
jecxz
mov
adc
out
or
dec
out
addb
sbbb
push
rclb
loopne
push
sub
or
sahf
add
mov
loop
int3
clc
pop
lret
jp
sub
jle
cmpsl
sub
js
jmp
out
inc
mov
jge
scas
inc
xchg
insl
loope
out
or
imul
dec
ficomps
gs
pushf
xor
sbb
stos
mov
push
xor
jbe
mov
or
cmp
push
lea
int
ret
jl
jle
cmpb
fstpl
stc
xchg
add
xchg
xchg
test
jbe
adc
aad
mov
jp
xor
cmp
add
push
jae
out
icebp
xor
add
mov
mov
leave
mov
jp
mov
sahf
inc
mov
in
pop
pop
mov
or
push
dec
int
jae
sub
int
xor
xchg
or
xchg
adc
shll
mov
call
or
or
inc
stos
stc
mov
fmul
jecxz
fsub
aaa
data16
and
insb
std
inc
in
cmc
loop
cmp
inc
repz
loop
pop
stos
mov
insb
mov
cmp
xor
lcall
movb
data16
push
sbb
mov
mov
fwait
icebp
or
mov
insl
mov
subl
hlt
mov
jle
int3
mov
ret
mov
inc
test
test
loopne
inc
add
sbb
iret
push
lds
ror
out
addl
push
in
mov
and
cmp
cwtl
shlb
xor
stos
or
pop
rcl
add
jg
gs
jno
stos
mov
cmp
roll
jns
mov
clc
cmpsl
or
jle
pusha
insl
pusha
das
pop
stos
add
aad
es
gs
sbb
mov
and
cld
test
xor
jmp
cmp
gs
and
lock
inc
xor
and
jno
bound
push
imul
mov
lods
mov
or
imul
xor
cmp
sub
into
dec
or
in
cmpsb
mov
psrlq
lods
shlb
jnp
loopne
push
mov
inc
dec
movsl
cmp
mov
jp
inc
push
rcll
or
mov
lret
divl
das
addr16
loopne
push
add
test
loop
xor
sub
aas
decl
inc
add
and
ficomps
cmp
push
xchg
nop
push
test
shlb
cmp
aaa
sbb
dec
rolb
or
les
cs
mov
dec
xchg
loope
roll
in
push
ret
popa
sbb
in
lods
inc
out
xchg
sbb
into
pop
cmc
adc
adc
leave
cmp
sub
stos
inc
cs
pop
sbbb
stos
jg
lahf
xor
fmuls
rcl
sbb
leave
pop
pushf
enter
xor
jns
jnp
mov
mov
in
add
add
in
ret
and
or
sti
sbb
into
mov
xchg
push
push
fs
inc
add
sbb
fs
rcrb
test
das
mov
popa
xchg
cli
or
xchg
mov
outsl
std
pop
and
dec
pop
push
cmp
rorl
adc
addr16
ficompl
fcompl
bnd
jge
outsl
adcb
rcrb
dec
lock
data16
std
in
mov
cli
xor
hlt
add
lahf
pop
insb
or
mov
mov
and
cltd
addr16
xchg
cmpsl
fwait
gs
mov
les
loope
pop
jb
andb
cmp
aaa
in
jnp
cli
lret
mov
xlat
mov
stos
test
inc
popf
xor
test
test
pop
xchg
push
incb
or
dec
nop
pop
and
ja
gs
xor
lock
loope
push
pop
jbe
push
adc
xchg
cmp
stos
mov
and
mov
dec
aam
push
cld
xor
pop
aam
sub
test
sbbl
add
sub
inc
push
loope
jo
cli
xchg
mov
loope
push
push
inc
jns
push
jp
icebp
push
pushf
mov
or
mov
mov
fs
mov
fiaddl
inc
or
adc
dec
lret
pop
inc
jne
lods
in
repnz
das
sbb
mov
push
clc
das
jmp
mov
aaa
add
das
jg
pusha
adc
mov
xchg
cmpsb
aad
insb
outsb
xchg
cli
adc
int
mov
lock
xor
xlat
shlb
mov
ret
cmp
clc
inc
xor
pusha
test
jae
mov
in
jp
dec
mov
pop
and
jo
adc
idivb
dec
div
xlat
pop
jmp
fsubp
lcall
sub
ljmp
or
iret
ja
lahf
andl
adc
lods
mov
call
cwtl
scas
inc
inc
push
mov
push
lods
cmp
sarl
arpl
les
cmpb
aaa
out
lret
xchg
mov
sahf
mov
mov
aad
loope
cmp
pop
les
aas
jo
push
fstpl
dec
jecxz
rclb
and
repnz
scas
or
jae
fldt
xor
adc
notl
adc
cmp
lcall
ficomps
int3
cli
sub
dec
inc
call
jg
out
data16
add
stc
mov
lds
xor
testb
jge
cwtl
imull
ret
and
aam
add
rcl
jle
add
stos
insl
cmp
stos
cmpsl
mov
pop
xor
jbe
out
jl
popa
testl
sub
mov
inc
pop
add
bound
scas
push
fiaddl
mov
jne
rolb
push
adc
inc
adc
inc
mov
pushf
inc
stos
pop
xchg
add
sbb
mov
mov
loop
lds
aas
jo
cmpsb
mov
daa
roll
outsb
rolb
add
xchg
popa
jns
or
rcll
mov
inc
aad
in
xchg
pop
push
inc
add
cmp
subl
jl
sbb
inc
xchg
push
push
pop
push
in
mov
pop
adc
daa
push
mov
out
test
arpl
jle
adc
push
jge
mov
scas
mov
rcll
push
roll
incl
aaa
rcr
fs
pop
push
add
mov
mov
add
ss
loop
mov
mov
mov
arpl
in
dec
mov
cmp
loopne
js
outsl
je
adc
adc
repz
jge
push
out
stc
jle
xchg
sarl
inc
popf
clc
dec
push
repz
mov
cmp
jp
add
repz
aaa
hlt
jp
pop
inc
xlat
mov
rcll
mov
insb
scas
mov
movsb
sub
cmpsb
jg
subl
push
xor
xor
jnp
nop
repnz
jmp
or
out
xor
imul
dec
fldcw
sub
xlat
jno
lret
div
and
and
cmp
test
sbb
mov
pop
mov
mov
fistpl
xchg
cmpsb
lds
xchg
inc
sub
inc
jae
mov
mov
cmc
in
sbb
or
je
mov
add
ret
out
pop
adc
in
dec
das
pop
dec
loopne
xor
out
xor
fbstp
stos
or
psubusw
mov
jno
nop
pusha
std
fs
rorl
push
aam
mov
aad
xchg
mov
jg
inc
cmc
fwait
push
push
pop
inc
sub
add
inc
mov
adc
and
fisttpll
cmp
sarl
arpl
lods
adc
pop
out
jge
adc
push
std
mov
cmp
add
movsl
push
sbbb
sbb
jnp
fwait
addr16
leave
pop
repnz
adc
rsm
lea
ljmp
sbb
vcvtss2sd
stos
pop
cmp
leave
push
filds
jge
inc
jae
inc
je
fisttpl
out
repnz
out
sbb
cmp
out
sub
sbb
outsb
out
lds
into
int3
mov
pop
adc
push
pop
test
daa
inc
and
fdivrl
mov
sub
mov
fucomi
outsl
jb
rcr
in
mov
jne
std
aad
scas
xorb
lods
test
sbb
jl
sub
leave
lods
add
mov
pusha
cmc
mov
nop
fcmovb
les
jnp
cmp
std
mov
sbb
sub
mov
lock
dec
popf
clc
out
loop
adc
sbb
push
sbb
and
lods
mov
arpl
jp
adc
rcll
sbb
mov
cmp
ffree
inc
out
mov
ds
in
inc
popa
in
scas
nop
ss
sbb
xor
sbb
xor
sarb
and
stc
push
lds
mov
inc
dec
lret
mov
stos
add
or
mov
jo
xor
jnp
les
mov
test
xchg
push
je
js
int
sub
je
imul
cli
loopne
adc
ds
cmp
out
cwtl
or
sahf
int
cmpsb
mov
mov
pop
mov
outsl
iret
scas
cmpb
xchg
dec
mov
xlat
mov
sarb
and
mov
cmp
hlt
mov
sub
pop
iret
cld
test
lret
dec
xchg
pop
cmpb
and
adc
addr16
xchg
push
adc
push
mov
aaa
fsubr
repz
pop
sub
out
out
and
add
int3
ljmp
rcrb
push
mov
xorb
xchg
insb
xchg
outsl
ss
sbb
sbb
fdiv
data16
std
jecxz
into
mov
divb
adc
rcrb
mov
fsubl
jno
rcll
mov
div
mov
fucomp
cmpsl
sahf
dec
je
or
sti
xchg
push
pop
shrl
cmp
mov
cmp
xchg
fs
arpl
int3
or
mov
mov
mov
jle
pop
adc
push
inc
enter
repz
je
push
mov
cli
and
jmp
aam
js
jbe
ret
inc
add
outsl
jb
arpl
jmp
push
jg
dec
inc
std
jnp
jmp
push
jge
out
stos
inc
pop
jbe
lea
sub
in
stos
aas
add
into
mov
or
into
pop
cmp
push
jb
ret
adc
add
in
test
ljmp
mov
divb
jmp
ja
xor
hlt
mov
lret
and
push
adc
clc
cli
data16
xor
push
stc
jmp
dec
imul
rolb
push
push
mov
xchg
sub
cmc
ret
mov
sbb
movsl
inc
popf
cmp
aam
ja
pop
cltd
sub
jge
cld
test
rol
out
pusha
jg
fisubl
stos
pop
pop
sahf
add
mov
inc
xchg
sti
fwait
mov
sub
icebp
push
xchg
pop
xchg
xor
mov
pop
lods
pop
scas
test
js
aad
xchg
inc
xchg
push
stos
adc
lods
scas
xor
out
push
xor
adc
aaa
aas
mov
cmp
ss
and
int
cmp
pop
leave
pop
cmp
and
inc
push
jbe
jle
sub
mov
adc
test
mov
ret
or
mov
sarb
mov
pop
test
std
sbb
jg
std
sub
push
adc
dec
dec
and
or
xchg
push
mov
fstps
push
jnp
push
push
jns
popf
repz
xor
pop
addr16
push
mov
dec
out
out
test
lahf
xchg
mov
add
inc
stos
add
xchg
cmp
and
jp
or
dec
mov
stos
xlat
aas
aaa
clc
movsl
in
push
es
add
sub
push
ret
insb
mov
mov
pop
in
pop
pop
lock
loope
pop
iret
test
push
out
ror
repnz
mov
mov
lock
into
push
out
fnstenv
xchg
rol
jo
clc
dec
lahf
cmpl
incb
loopne
push
je
mov
add
sub
jecxz
and
in
cmp
push
push
mov
xor
xlat
dec
cmp
rcll
sbb
es
std
cmp
cmp
jmp
aad
lea
push
jecxz
jp
add
jnp
ljmp
mov
jmp
push
loop
cs
daa
sbb
loope
loopne
js
jmp
popf
outsl
or
clc
aam
pop
outsl
scas
scas
popa
aam
stos
adc
in
jl
int
dec
vmwrite
dec
lock
aaa
enter
lret
inc
cmpsb
push
push
mov
ror
int3
lahf
dec
orb
je
xor
jns
dec
insb
fdivrl
pop
stos
sub
cmp
in
cld
clc
pop
dec
xchg
arpl
jns
lahf
test
cmp
int
push
jb
sqrtps
lds
clc
mov
outsl
das
push
or
xor
outsl
and
xor
enter
push
fmuls
mov
pop
mov
or
add
xchg
int3
shll
fs
lock
sbb
dec
loopne
movsb
inc
test
es
out
movsl
xchg
mov
in
mov
or
mov
popf
mov
push
sbb
mov
sbbl
push
inc
fbld
stos
xor
enter
mov
test
jnp
pop
mov
cmp
in
mov
movsb
fisubrs
xchg
in
out
pop
and
cmp
ret
test
sbbb
pop
je
push
out
jb
push
or
cwtl
pop
cs
pop
adc
inc
mov
cmc
in
leave
aam
pop
rorl
out
gs
cs
fistpll
in
xor
mov
inc
or
pop
sarb
sub
dec
cmc
das
mov
push
xchg
sub
pushf
ds
cmc
or
repnz
pop
and
xor
mov
mull
scas
mov
or
leave
inc
inc
lods
jo
sub
out
mov
jb
jecxz
or
inc
pop
fistl
xor
mov
fs
add
sbb
mov
add
dec
in
repz
out
aad
ljmp
push
insl
movsb
ja
push
out
in
pop
sub
loope
mov
mov
test
or
dec
xchg
and
cmp
adc
adc
ss
pop
int3
movl
insb
imul
pop
lcall
loopne
pop
mov
std
shll
int
push
repz
outsb
mov
xchg
inc
daa
stos
mov
leave
lock
pop
fdivl
or
nop
int3
cmp
inc
add
aas
fstpt
mov
or
je
fcompl
idiv
dec
fnsave
int
fisttpl
inc
insb
pop
icebp
xchg
ret
mov
push
inc
and
or
mov
rcrb
push
js
loop
push
xchg
and
insb
cli
jecxz
out
cmpsb
rcr
mov
add
aam
xchg
lock
movsb
jecxz
lock
imul
jl
push
pusha
mov
mov
jle
add
ret
mov
mov
dec
add
mov
cmpsb
xor
mov
nop
stc
leave
dec
or
inc
lea
xor
pop
aas
lds
lods
jo
lcall
test
mov
call
adc
adc
cmp
xor
mov
sbb
jb
jb
cltd
scas
or
push
neg
mov
lahf
adc
pop
mov
inc
mov
fpatan
pop
sahf
iret
mov
hlt
mov
movsl
repnz
mov
or
repz
xchg
jo
pop
fsubp
mov
sub
mov
mov
jmp
or
aas
popa
adc
scas
xchg
aam
movsb
repz
insb
xor
in
int3
jno
xor
sub
mov
mov
int3
jns,pt
cmp
cltd
adc
shl
jno
mov
repz
inc
stc
mov
mov
insb
into
mov
mov
clc
xlat
adc
popf
aas
cltd
jle
mov
inc
les
insb
incb
iret
pop
xor
pop
jle
mov
mov
cmp
or
int3
dec
cwtl
jne
inc
inc
into
enter
lock
push
popf
mov
push
mov
xchg
jg
push
mov
mov
es
adc
sti
enter
or
adc
sub
xlat
lods
clc
lret
jp
pop
mov
cmp
jecxz
jne
daa
push
fsubr
inc
addr16
dec
jg
icebp
inc
aas
jbe
xor
and
cmp
or
pop
shlb
pop
push
orb
je
stc
movsl
insl
sbbb
or
and
and
daa
mov
and
push
or
add
inc
or
and
mull
movsb
jmp
addr16
mov
movsb
fdivr
mov
xchg
push
inc
in
jns
cmp
enter
in
lods
ja
push
sbb
sti
popf
arpl
pop
lahf
loopne
mov
or
pushf
in
push
test
bound
and
in
loopne
jg
adc
xor
notl
arpl
dec
push
jno
aam
daa
lods
or
and
fdivrs
xchg
int
mov
outsl
lret
mov
adc
and
les
xchg
jmp
add
sti
stc
push
inc
add
hlt
cmp
imul
pop
cld
sbb
leave
mov
jg
xor
inc
mov
bound
lret
jg
xchg
test
insl
imull
lea
push
shlb
out
dec
daa
shrb
dec
arpl
pop
lahf
mov
rorb
xchg
ds
out
push
or
ds
leave
lock
imul
rcll
cmpsl
cmp
cmp
inc
push
sbb
out
loope
ja
sub
iret
mov
cmp
mov
sub
cmp
xchg
jne
repz
or
fsubs
ljmp
mov
lock
aad
sbb
jge
cwtl
test
andb
dec
or
pop
insb
out
pop
pop
test
or
mov
or
mov
mov
xor
idiv
pop
gs
lahf
and
mov
cmp
sbbb
stc
aad
scas
push
and
pop
jb
std
jecxz
jp
jmp
testb
test
mov
pop
xchg
test
mov
in
mov
sub
ficomps
pop
stos
nop
dec
adc
adc
cltd
outsb
cmpsl
xlat
xor
loopne
push
loopne
loope
nop
adc
out
dec
ret
xor
cwtl
cmp
adc
stc
push
sbb
in
inc
mov
sub
rorb
mov
imul
xor
lret
dec
lcall
sbb
in
out
xlat
sbb
subl
pop
loopne
xor
pop
cmp
sub
xchg
cmp
jb
mov
cmp
jp
and
sub
cmp
imul
push
in
icebp
test
pop
adc
sbb
jp
in
movsb
mov
inc
ds
cltd
shll
fildl
push
mov
xor
into
andb
lods
pop
cmpsl
inc
ja
out
sub
movsb
cmp
mov
mov
cmp
pop
pop
hlt
push
xchg
je
ret
jle
jbe
lcall
push
je
int
testl
aas
mov
outsb
nopl
pop
fprem1
lods
xor
movsb
xchg
idivb
push
xor
cmp
push
mov
mov
push
mov
stc
xchg
xchg
test
jns
call
xchg
lcall
jns
cmc
mov
outsb
push
cwtl
test
cmpsl
test
adc
adc
mov
stos
adc
sarl
pop
int
pop
sbb
xchg
test
cmp
repnz
push
sbbb
loope
out
add
pop
ret
fcoml
in
or
jb
and
sub
fdivrs
sbbl
test
cmp
popf
scas
sahf
or
arpl
testb
stos
pop
jae
pushf
insb
aad
aad
pop
lret
jae
aad
xor
mov
xchg
push
rol
test
push
js
jg
push
lret
int3
dec
mov
int
call
mov
jnp
iret
mov
add
adc
fmulp
scas
imul
dec
cmp
std
stos
cmpsb
in
mov
das
loop
ds
cmp
jge
pusha
adc
cmp
shr
and
mov
lds
pusha
mov
rcll
or
jb
mov
add
cmp
scas
fs
or
cmpb
sbb
sbbb
icebp
dec
xchg
arpl
or
sub
out
jg
lods
or
imul
repz
cmc
iret
je
pusha
sub
jge
cli
fmuls
xchg
push
out
xor
outsb
push
push
adc
mov
sbb
jecxz
rclb
pop
jbe
ss
popa
pop
inc
gs
inc
jae
xchg
in
sbb
bound
adcl
loopne
xchg
scas
mov
les
and
std
xchg
mov
inc
cmp
push
lret
mov
mov
pop
test
rsm
mov
mov
pop
lea
pop
mov
mov
push
and
rcl
push
ss
mov
cmp
test
sbb
aas
xchg
dec
in
aas
push
mov
jbe
jmp
or
fisubl
dec
fists
dec
fwait
gs
mov
mov
add
push
fnsave
mov
movsl
mov
movsb
nop
movl
jl
stc
arpl
popf
outsl
rcrb
les
insl
out
add
mov
pop
cmovg
dec
mov
or
and
stos
dec
lcall
pushf
lods
pop
mov
mov
xor
mov
or
cld
into
rorb
cmp
pop
dec
jecxz
jae
jl
es
mov
insb
push
adc
push
jbe
cmp
xchg
pusha
xchg
in
jl
dec
leave
inc
dec
mov
out
test
mov
xor
pop
mov
pop
jns
inc
out
or
xor
mov
mov
jge
les
aam
dec
or
test
ss
jns
inc
pop
test
test
sbb
repz
cld
notl
loope
jp
mov
scas
sub
popa
insl
xor
stos
out
fnstsw
dec
outsl
call
shlb
cmp
daa
push
mov
inc
bound
scas
mov
icebp
call
mov
insl
add
movsb
xor
negl
fdivrl
or
xchg
adc
mov
fwait
cmc
mov
jge
sub
popa
mov
loop
ficomps
mov
sub
scas
std
cld
divb
fdiv
mov
push
jns
insb
sub
and
f2xm1
adc
daa
lds
rcrl
fiadds
and
sar
jns,pt
jmp
js
xchg
sub
out
stos
gs
pop
push
add
dec
xchg
sbb
pop
shll
sub
and
ss
sbbb
stos
jne
mov
push
adc
push
daa
fld
pop
inc
emms
adc
fisubl
lock
jle
sbb
dec
mov
xor
jb
and
cmp
mov
test
inc
ljmp
xchg
push
sub
inc
and
in
aas
jo
pusha
jecxz
cmc
loope
dec
lock
sti
rclb
jo
lods
das
cli
jg
addl
adc
ljmp
sbb
mov
sbb
in
sbb
jl
and
or
int3
aad
jno
call
fbld
or
jmp
mov
cmpsb
push
lds
out
les
hlt
mov
insb
mov
pop
push
test
out
sub
mov
outsl
loop
ja
cmp
pop
pop
cwtl
stos
mov
xchg
sbbl
cmpsl
mov
mov
mov
push
cmpsl
scas
inc
movsl
mov
cmc
sbb
fsubr
mov
addl
lods
lods
dec
push
xchg
sarl
rcrl
aam
xlat
pop
mov
sub
loope
mov
push
push
enter
jb
out
dec
out
scas
jne
xchg
mov
mov
dec
dec
fnstsw
and
and
jmp
push
fnstsw
rorl
fcomps
loope
push
mov
in
push
dec
xchg
in
les
enter
outsl
imul
adc
sub
aam
call
mov
and
pop
jns
sub
repz
xor
aas
data16
inc
pop
insl
xor
leave
shll
loopne
mov
mov
mov
sbb
pop
and
das
xchg
mov
sbb
bound
sub
sbbb
push
mov
test
add
jae
cmp
movsb
adcl
adc
inc
leave
sahf
test
pop
pop
xor
mov
sub
sub
fwait
push
test
ret
inc
xchg
aad
pop
clc
push
push
fsubrp
cltd
adc
aaa
push
in
scas
stos
mov
push
je
sub
and
pop
xor
insb
lahf
pop
pop
into
subl
mov
and
add
in
lcall
das
call
jnp
push
xor
pop
movsb
xor
inc
mov
or
jbe
insb
sbb
xchg
mov
adc
push
repnz
mov
insb
stc
and
scas
test
or
scas
dec
imul
out
or
inc
hlt
pop
pop
push
xchg
dec
aam
adc
cmpl
adc
mov
lahf
insb
or
and
mov
int
push
xor
sub
dec
mov
push
mov
es
dec
dec
fists
cmp
sbb
je
sbb
fisttpll
nop
cmp
push
jge
in
cmp
fistpl
js
ss
cwtl
push
xchg
jnp
mul
inc
cmp
mov
jecxz
xlat
xor
xor
ljmp
out
mov
and
in
imul
inc
dec
fiadds
mov
xchg
in
arpl
int
hlt
mov
mov
rolb
fildll
jb,pn
inc
rorb
jge
cmp
sbb
mov
sub
loope
das
inc
cmp
sub
jno
inc
sti
inc
jo
xor
mov
mov
fcomps
icebp
cmc
aas
and
insb
dec
pop
or
sti
stc
jecxz
xor
and
push
sub
fbld
enter
mov
out
xchg
insl
push
sub
and
sub
cmp
inc
dec
inc
xor
adc
fisttpl
cmp
push
xchg
xchg
mov
cmpsb
test
push
dec
xlat
in
adc
jns
outsb
shlb
repnz
fidivrl
jns
mov
dec
sub
loope
sub
push
rcr
xorps
pop
rorl
ss
es
movaps
cmp
lods
dec
inc
mov
lahf
das
in
mov
or
es
mov
mov
lret
int3
les
sub
aas
outsb
insb
and
rcr
mov
xchg
notb
mov
bound
mov
pop
jno
inc
push
leave
std
sub
sbb
jbe
imul
std
push
mov
inc
ret
jne
jnp
xlat
movsb
and
sbb
mov
dec
mov
inc
jp
sahf
lret
and
fimuls
pop
pop
sub
sub
sub
mov
popf
in
js
xor
js
mov
leave
lock
dec
sarl
movsl
out
dec
add
dec
mov
xor
cmp
out
stos
mov
add
sbb
fwait
sbb
in
push
dec
and
or
mov
pop
mov
add
sbb
repz
push
sub
and
jbe
pop
adc
rorb
lods
in
jmp
movsl
mov
sub
loopne
stos
in
jae
lret
push
mov
divl
sub
testb
or
rolb
sbb
xchg
sbb
or
std
movsb
loop
out
sbb
hlt
lds
jbe
int3
mov
bnd
or
jle
mov
inc
lea
or
das
inc
aad
daa
dec
ret
xchg
rol
std
adc
mov
push
adc
int
popf
pop
loopne
pop
pop
scas
pop
jge
mov
lcall
rol
cld
ja
xchg
xor
pop
arpl
ror
push
mov
out
xor
jb
clc
test
dec
stos
adc
inc
cmpb
ret
and
dec
xlat
in
negb
notl
push
sti
int3
lahf
xor
in
jae
movsb
arpl
daa
xor
ret
in
mov
in
and
mov
xchg
jge
xorl
adc
dec
xchg
in
pop
adc
cmc
les
std
outsb
jo
fxch
xchg
cmc
mov
int
ss
xchg
inc
leave
xchg
lret
jae
lahf
aam
call
sbb
add
lret
jo
cmp
scas
or
es
jp
mov
push
mov
hlt
jmp
push
pop
inc
repz
push
mov
sub
adc
and
repnz
sqrtps
sarl
jl
or
or
daa
ja
shl
bound
push
mov
es
andl
cld
push
call
movsl
xchg
sti
jo
or
add
push
outsb
jbe
fnsave
sbb
push
jl
std
and
mov
scas
ja
pop
and
mov
mov
lahf
imul
gs
dec
jne
fnstcw
jno
fsubrl
mov
or
es
or
dec
iret
scas
fiaddl
cmp
cli
mov
or
jg
je
into
fst
stos
test
js
lods
or
movsl
out
xchg
push
hlt
cmpsb
sub
ljmp
xchg
std
and
cmpb
mov
cmp
js
cmp
pop
inc
and
ljmp
push
shl
ds
pop
sti
mov
mov
iret
flds
sti
sarb
ljmp
inc
loopne
sahf
mov
sbb
aas
mov
add
xor
imul
push
jl
xchg
rcrl
aam
adc
add
mov
jbe
mov
sub
ljmp
sbb
pop
jmp
loope
test
and
adc
aas
inc
sub
std
mov
outsb
mov
scas
jmp
call
jmp
les
mov
cltd
lcall
mov
stos
push
dec
pop
jb
adc
jp
xlat
push
rcrl
mov
dec
shrb
dec
sbb
adc
mov
mov
and
xchg
bound
push
in
xchg
outsl
stos
daa
pop
xor
xchg
nop
das
push
mov
sbb
lahf
orb
lret
sub
mov
push
mov
jno
fs
xchg
pop
fistpll
in
mov
and
int3
dec
and
jae
dec
and
cmp
inc
push
jne
xchg
in
in
jo
cltd
popf
sbb
shll
movsb
sub
or
lds
pop
inc
popf
xor
push
sub
cmp
stc
adc
pop
xor
sarb
pop
pusha
cmpl
shl
push
jnp
jle
popf
in
push
xchg
imul
das
hlt
sub
pop
clc
cltd
hlt
rcl
xor
hlt
cmpsb
xchg
dec
cmc
out
adc
scas
je
push
iret
xchg
fcom
filds
mov
into
cmc
sub
repz
mov
xchg
xor
fldl2e
lock
mov
adc
insl
cmp
cmp
mov
into
sub
sahf
adc
ret
mov
les
mov
add
jno
mov
out
and
outsl
stos
sub
sbb
xor
jb
push
div
sbb
outsl
imul
sar
sarl
js
fistpll
out
popf
movsb
ret
dec
ss
in
sub
ret
inc
sbb
in
aaa
pop
hlt
outsl
and
pop
sub
push
xor
pop
leave
mov
pushf
pushf
aaa
mov
ds
inc
mov
pop
or
sbb
adc
push
notb
mov
lret
jno
aaa
in
or
mov
and
fwait
popl
shrl
ret
adc
rol
fcmovb
hlt
add
out
lds
lcall
lret
les
xlat
shll
idivb
sub
popf
ret
dec
sub
mov
sbb
call
in
or
push
mov
mov
aam
mov
dec
stc
fstps
iret
pop
addr16
pusha
testb
loopne
dec
cmpsl
mov
jp
shrl
ja
aaa
out
rolb
je
mov
or
pop
fcmovne
sbb
push
mov
xchg
cld
data16
pop
scas
dec
je
sub
jp
jg
mov
mov
or
pushf
daa
shlb
and
call
scas
inc
lret
daa
lret
adc
fnsave
scas
je
cmp
fadd
lret
mov
rcll
mov
sahf
adc
cmp
cld
inc
mov
iret
dec
test
scas
psrad
or
jb
insb
rcll
testb
sbb
insb
or
mov
enter
xor
ja
push
mov
fucomip
jne
sub
movsb
inc
or
pop
dec
mov
mov
lret
push
outsb
xor
sarl
push
inc
sbb
inc
fldt
imul
sub
dec
in
jecxz
data16
scas
cmp
or
sbb
jo
mov
xchg
pop
js
sbb
les
jg
stos
outsl
jo
cld
jge
adc
xor
xchg
push
add
mov
mov
push
sbb
lods
jecxz
jbe
jp
lods
xchg
scas
in
dec
adc
out
cmc
xor
and
in
fcomps
pop
rclb
repz
mov
sub
lcall
rorb
or
clc
cmp
pop
sub
cmp
dec
or
inc
call
xor
call
cli
pop
sarb
es
cmp
sub
cmp
pop
in
adc
shrl
loop
ss
in
cmc
xchg
daa
shlb
inc
or
flds
adc
pop
mov
adc
mov
stos
mov
cmp
gs
push
int3
or
divb
sub
jb
ret
repnz
jp
lcall
flds
fnstsw
dec
push
jno
inc
out
mov
icebp
adc
out
inc
sub
push
and
jne
push
iret
mov
cmp
cmp
arpl
jmp
nop
xchg
and
jns
loope
xchg
or
push
rcrb
sbb
stos
rorb
imul
test
and
and
insb
jge
fistpll
xlat
xor
imul
movsb
mov
out
push
cwtl
das
sub
into
pusha
and
xor
sbb
outsb
sahf
fstpt
jle
sub
mov
inc
cmp
inc
sbb
pop
arpl
cmpb
cmc
pop
mulb
clc
dec
pop
fwait
push
arpl
xchg
push
mov
or
and
jno
xlat
out
shrb
xchg
inc
inc
fnstsw
adc
stc
mov
outsb
dec
mov
add
mov
fs
inc
repz
push
sub
into
jl
push
fsubs
sahf
mov
arpl
pop
cmpl
jge
jecxz
push
ret
scas
lea
mov
push
aam
into
cld
pop
mov
mov
mov
test
cltd
cwtl
pop
pop
jle
test
cwtl
dec
add
inc
jne
std
and
lock
incb
sbb
ljmp
mov
divb
test
jae
cmp
sbb
mov
pop
mov
and
repnz
xor
in
jecxz
push
mov
mov
xor
mov
ss
and
addr16
xchg
inc
iret
xor
push
jg
lret
pusha
mov
ret
jae
lods
out
push
imul
rcll
js
cmp
push
outsl
ret
mov
rcrl
push
js
or
clc
and
sub
fcmovbe
jo
cmpsb
and
icebp
pop
mov
mov
jnp
ja
cmp
fcomp
mov
inc
jns
lret
mov
aad
sub
enter
loopne
push
push
pop
mov
and
xchg
push
lds
jge
ss
sbb
std
outsl
xchg
loope
mov
mov
push
push
shrb
and
shl
into
push
jne
sar
scas
push
jo
or
add
sahf
arpl
push
xchg
xor
stc
or
xchg
lods
cmp
int3
insl
xor
decb
mov
int3
popa
clc
mov
xchg
sbb
mov
lcall
dec
gs
xor
xchg
aaa
jmp
jg
pop
stos
inc
sbbl
jg
push
xor
jecxz
ret
inc
loopne
mov
repnz
sbb
add
push
xchg
cmp
pop
xchg
outsl
mov
mov
nop
pushf
xor
arpl
fstp
popa
aas
jmp
jle
jns
lds
movsb
nop
loope
cmpsb
in
pop
lahf
daa
notl
mov
movsb
shll
inc
cmpsl
loopne
popf
out
push
jmp
mov
scas
fs
push
mov
jle
mov
lret
inc
cmp
in
scas
mov
mov
clc
mov
ret
add
adc
stos
icebp
adc
ljmp
push
repnz
mov
addr16
inc
leave
lret
lds
orb
pop
rcr
or
dec
ret
push
fs
push
fbld
sub
pop
push
add
pushf
push
arpl
mov
mov
hlt
repz
test
pop
mov
mov
aas
ja
pop
adc
aas
clc
lods
pop
lahf
mov
inc
inc
add
pop
mov
rol
test
repz
jl
and
sbb
test
in
ds
or
xchg
dec
push
mov
xchg
imul
icebp
pusha
mov
xor
inc
std
dec
xor
push
cmp
mov
imul
ja
jno
fidivs
ljmp
xlat
pop
and
out
push
mov
add
pop
or
add
xor
jge
and
cmp
jo
loope
or
push
mov
insb
sub
test
fcomps
jg
daa
and
or
test
sahf
push
jecxz
jg
shrl
clc
fcomp
test
mov
out
addr16
pushf
sahf
dec
and
pop
int
pusha
loop
jno
pop
pop
loope
cmc
cs
daa
lret
daa
aam
fcomps
test
push
cmp
mov
mov
test
out
dec
lcall
mov
iret
sbb
inc
mov
jae
xor
mov
and
out
popf
repz
ret
xchg
mov
cmpsl
pop
sbb
stc
mov
popf
rcrl
xchg
shrb
imul
mov
sbbl
inc
popf
sbb
scas
mov
std
jne
dec
dec
fucom
rcll
lock
jae
ret
dec
or
pop
xchg
adc
push
fidivs
popa
repz
imul
inc
or
push
ljmp
or
imul
lahf
xchg
mov
gs
ss
dec
jl
insb
add
out
jae
nop
sub
mov
stos
adc
jecxz
js
es
sarl
repnz
inc
sub
cld
xchg
xlat
cs
mov
pop
jb
mov
sbb
mov
lods
sbb
mov
mov
pop
pop
xor
sub
and
sbb
sub
jl
stc
aaa
je
sbb
inc
pushf
inc
dec
lock
xor
filds
das
aaa
inc
cmpsl
add
aas
gs
pushf
pop
inc
loop
cmp
jb
jge
sbb
push
mov
pop
pop
ds
pop
scas
push
adc
sahf
sbb
mov
iret
sbb
push
aaa
loop
and
in
inc
mov
mov
xor
pop
ja
out
pop
sahf
or
out
sub
push
or
mov
jle
pop
xchg
nopl
sub
push
andl
loope
movswl
xchg
adc
xchg
mov
fsubs
hlt
xor
out
enter
dec
out
hlt
out
call
sahf
cld
xchg
add
in
push
outsl
fdivrl
sub
push
adc
lods
dec
mov
mov
insb
mov
adcl
imul
cld
adc
aas
dec
or
dec
sub
inc
lahf
repnz
jns
jb
je
dec
adcl
loop
sahf
xor
addr16
push
mov
adc
aad
sbb
dec
data16
mov
outsb
xchg
in
repnz
mov
movsl
mov
das
testb
in
scas
sbb
ljmp
test
mov
sti
add
cs
xchg
xor
mov
je
cmp
push
rcrb
inc
mov
outsb
jnp
xor
out
pushf
fldt
pop
aam
sarl
dec
leave
pop
push
xchg
aam
sbb
fld
mov
push
lods
mov
ds
jo
fisttpll
cwtl
lea
pop
adcl
adc
adcb
mov
addr16
lods
mov
clc
sbb
jae
jne
pushf
arpl
xchg
xor
add
stos
lea
jl
dec
cmp
xchg
popf
sub
leave
jmp
jg
scas
stc
pushw
mov
mov
ror
dec
xchg
pop
sub
inc
pop
hlt
fisttpl
jo
mov
jo
sbb
arpl
cmp
negl
shlb
push
loop
lods
mov
test
xor
xor
add
mov
or
jae
stos
sbb
cmpsl
arpl
nop
sti
outsb
icebp
lea
cmp
repnz
lret
es
iret
fnstsw
inc
sbb
leave
add
and
dec
subl
mov
jle
pushf
xchg
push
test
ds
jle
push
inc
pop
mov
adc
jp
jbe
and
pop
insb
ror
cmp
scas
xchg
jecxz
mov
sub
popf
mov
imul
or
jns
mov
shr
mov
mov
dec
repnz
inc
arpl
xor
lea
icebp
mov
int
jns
out
xor
outsb
out
popa
and
icebp
pop
fsubl
adc
dec
push
sarb
scas
ficoml
or
rcl
and
call
push
icebp
push
inc
xchg
add
cltd
pop
in
in
rcrl
pop
test
pusha
js
mov
push
call
add
movsl
inc
ret
xor
cmp
dec
mov
out
cltd
fisttpl
jb
cmp
fisubrl
pusha
rorb
mov
hlt
popa
imul
adc
xor
mov
out
lods
mov
scas
ljmp
mov
mov
enter
cmc
sahf
and
ret
test
enter
cmp
sub
sbb
pop
inc
in
pushf
push
pop
pusha
iret
adc
pop
out
dec
cmpsl
mov
add
jne
enter
lock
fldenv
sar
dec
dec
cmp
dec
and
jae
adc
clc
inc
hlt
popf
xor
or
or
out
push
lret
jp
push
fisttpl
in
mov
jl
aad
xchg
sarl
mov
pusha
sbb
xchg
stc
imul
xor
mov
aad
popa
push
add
mov
je
cmpsl
add
rcrb
and
arpl
out
mov
fistpl
lods
out
sub
xor
push
arpl
ret
stos
jl
rcll
cmpl
daa
adcl
scas
add
ret
and
scas
cmp
dec
dec
hlt
psubw
pop
test
leave
out
inc
sbb
movb
push
mov
test
hlt
sbb
jle
jg
add
dec
push
mov
sub
lods
mov
adc
movb
outsl
push
cmp
sahf
sbbl
and
sub
fucomip
movsl
lret
cltd
lods
pushf
xchg
fs
jmp
lods
das
pop
push
fwait
in
inc
push
xorb
mov
jle
fidivrs
jo
cmpsb
mov
leave
rcrl
xor
insl
mov
ret
xchg
push
dec
sbb
mov
pop
mov
dec
rol
pop
mov
push
scas
mov
call
out
pop
int3
xchg
int3
mov
rol
roll
das
outsb
jmp
icebp
rorl
in
inc
insl
insl
into
and
ror
mov
add
xchg
insb
adc
dec
arpl
mov
test
xchg
repz
gs
cmp
cmpsb
pop
and
dec
mov
pushf
mov
fcmovnbe
push
mov
sbb
cmpsb
add
lds
iret
arpl
scas
stos
add
pop
lods
cmp
xchg
fisttps
nop
mov
shrl
and
dec
add
or
lock
xor
xor
add
into
fldenv
in
test
mov
or
in
mov
insl
cmp
sahf
pop
lahf
pop
xchg
sbb
aad
shl
test
rclb
pop
cli
mov
mov
jmp
and
cltd
subb
lock
or
push
out
js
push
xchg
adc
lahf
movsl
out
sbb
push
cmpsb
and
fiaddl
push
aas
mov
adc
inc
data16
push
mov
leave
repnz
stc
xor
add
in
out
jo
inc
jo
mov
clc
mov
push
jnp
dec
stos
pop
cwtl
push
fnstcw
cmp
pop
cwtl
lock
sub
call
and
mov
fidivl
dec
gs
adc
lds
icebp
inc
inc
and
pop
fistpll
dec
sbb
into
inc
xlat
cmpsb
iret
stos
sbb
fs
loopne
add
pop
loopne
je
in
cmpsb
fldl2e
loopne
push
call
ja
add
out
push
scas
sti
aaa
cmc
rcrb
mov
ljmp
inc
addb
mov
iret
mov
cmp
dec
xlat
xchg
push
jmp
adc
push
repz
lock
les
jecxz
nop
push
push
cmpsl
lods
mov
add
dec
out
imul
outsl
xor
or
inc
mull
into
push
adc
shrl
push
mov
pop
jb
enter
cmc
inc
rcll
int3
outsl
ds
mov
add
test
mov
mov
jae
jb
and
inc
mov
jmp
stos
sub
subb
cltd
es
jo
adc
fsubrs
sbb
mov
adc
rcrl
popf
and
dec
fimull
pop
cs
ds
leave
push
cmpsb
mov
divl
jl
push
fidivrs
inc
sub
cli
or
add
sub
mov
pop
fs
adc
incl
sub
outsl
cmp
or
stc
sbb
mov
inc
jae
addr16
mov
movaps
inc
mov
mov
imul
mov
aad
lahf
push
mov
sub
inc
cs
in
xchg
loop
mov
and
jno,pt
mov
nop
xchg
mov
mov
push
xor
shlb
shl
dec
xlat
sbb
les
jle
in
ljmp
xor
out
lret
cmp
xchg
sub
repz
mov
ffree
xor
add
mov
loopne
addr16
ljmp
aas
pop
xchg
scas
int
mov
dec
push
test
xlat
sub
pop
in
outsl
jno
test
cmpsb
mov
vmread
pusha
test
pop
mov
jae
pop
jl
mov
fcoml
rcrb
ret
out
fdivs
push
push
sub
icebp
cld
jne
dec
pop
in
neg
jmp
sub
shll
pop
or
addb
pop
sti
and
push
mov
rcll
pop
mov
movsl
bnd
adc
lret
xchg
or
pop
fdivrs
orl
leave
dec
pop
push
aaa
push
bound
insl
call
push
mov
pop
leave
and
push
lea
xchg
mov
repnz
jo
lds
es
jle
mov
inc
add
ret
inc
sub
push
sbb
loopne
sub
popw
adc
filds
mov
jg
ret
add
or
loopne
push
daa
test
pop
shrl
xor
inc
cmpsl
and
mov
dec
test
mov
push
jnp
imul
ret
aaa
data16
inc
mov
das
sbb
jbe
sahf
cmc
or
mov
shl
pop
into
and
rolb
nop
out
cmc
cmp
adc
insl
sahf
shlb
xor
adc
push
adc
notl
test
mov
lods
sub
les
push
lods
cmpsl
mov
jecxz
popf
add
xchg
mov
lock
or
adc
mov
loope
hlt
loope
out
dec
sub
ficoml
or
dec
je
sbb
cmp
cmp
int
jae
rorl
mov
mov
inc
jae
repz
lret
insl
pop
jbe
mov
dec
notl
sbb
jl
push
jge
add
and
push
sub
adc
pop
xchg
loop
mov
pop
sub
or
stc
xchg
ss
sub
inc
daa
insb
push
sahf
lds
scas
jp
or
cmpsl
inc
pop
push
stos
loope
and
mov
mov
insb
dec
frstor
imul
ja
cmp
push
cltd
mov
pop
inc
mov
lret
in
and
lret
mov
sti
test
call
aam
aam
add
xor
les
imul
lret
stc
out
and
push
ret
ja
or
orl
ret
popa
std
cmp
outsb
rcr
mov
insl
push
ljmp
push
mov
inc
sbb
pop
xchg
push
iret
stc
cs
push
and
xlat
dec
jo
outsb
jmp
mov
loope
inc
sbb
add
add
and
rcrb
cmpsl
loope
dec
fnsave
sarb
inc
mov
ljmp
icebp
cmp
jno
test
cmpsl
sahf
insb
xchg
push
sbb
loope
mov
out
sub
sub
xlat
clc
ret
pushf
cmp
jno
roll
xor
cmp
insl
lds
push
jno
mov
loopne
into
out
pop
ss
jno
pop
add
mov
sub
and
xchg
xor
or
cwtl
or
and
mov
add
shll
imul
lock
mov
push
cmp
push
repnz
sub
sahf
xchg
dec
adc
nop
or
pop
jb
or
imul
push
lcall
fildl
fsqrt
aad
jp
std
out
adc
and
pop
popa
inc
mov
mov
xchg
cld
xor
inc
stc
mov
bound
sub
cmp
add
xchg
sub
xor
mov
pop
fcoms
frstor
adc
cltd
jne
mov
pop
xchg
mov
scas
push
ret
sub
gs
lea
and
jmp
test
pop
and
mov
dec
subb
xor
adc
dec
xor
mov
incb
loop
sbb
imul
sbb
cmpsl
push
push
ja
movsb
push
scas
mov
scas
scas
jno
fmull
ss
fwait
and
xchg
orl
lods
sbb
out
mov
or
pop
jo
and
and
sti
out
or
sub
cmpsb
inc
push
xchg
mov
sbb
inc
mov
and
ja
cmc
xor
push
das
push
add
push
mov
xchg
pop
jne
inc
adc
loopne
mov
stos
mov
jno
cmp
das
aad
add
pushl
pop
pop
pop
sahf
pop
enter
outsl
adc
dec
cmpl
bound
pop
xorl
sbb
xchg
add
inc
mov
xchg
repz
stos
lahf
or
mov
jno
cmpb
or
adc
out
mov
and
jg
loope
push
jno
sbb
pop
adc
aas
jmp
mov
fnstcw
xor
call
repz
fimull
cmp
mov
add
inc
mov
mov
test
outsb
js
nop
cmp
mov
add
out
jmp
shll
popa
daa
rcr
std
ret
push
test
shrb
pop
dec
pop
stos
mov
dec
dec
lock
dec
push
pop
or
mov
mov
mov
fmull
jp
dec
call
push
outsl
scas
iret
xchg
dec
inc
sub
jl
xchg
fsubrp
fisttps
cmpb
loope
js
int3
aam
in
sbbl
sbb
imul
sub
and
sub
fadds
push
sbb
je
cmp
js
push
in
sub
mov
push
outsl
repz
xchg
test
in
mov
push
ds
pop
jns
fistpll
fbstp
or
subl
test
xor
leave
push
cmp
out
adc
lds
lret
sbb
roll
mov
out
out
xchg
sarb
icebp
sbb
mov
fimuls
ret
cld
ror
push
lahf
mov
xor
scas
mov
call
rorb
mov
mov
aaa
mov
inc
ret
aam
repz
sbb
mul
jge
movsb
xlat
xchg
sti
sbb
data16
int
int3
mov
je
push
xchg
sbb
xchg
sbb
mov
arpl
outsl
jge
mov
in
jmp
shll
sbb
pop
leave
addl
mov
jmp
mov
sub
insb
ja
push
addr16
xchg
shlb
leave
int3
sbb
cmpsl
in
test
pushf
jecxz
outsb
adc
sti
pop
and
sbb
addb
jns
out
push
in
fstpt
cmc
shl
inc
enter
dec
jge
xchg
add
and
xor
cmpsb
sbb
sub
movsb
cmc
xchg
sbb
xchg
les
sub
inc
sub
dec
repz
add
lods
fcomip
je
ss
inc
sahf
sti
flds
scas
add
mov
or
in
pop
test
sub
out
add
fcompl
ret
movsb
and
sbb
fstl
jge
lods
xor
adcb
adc
and
cmp
adc
cmp
insl
cwtl
push
push
mov
sbb
test
idiv
sbb
push
or
lahf
stos
xor
push
cmp
cmp
cmp
lahf
sub
stc
fnstsw
aas
push
test
cli
ficompl
jne
je
in
dec
inc
inc
shll
bound
jae
and
lahf
sbb
std
jp
sti
push
cmp
mov
jns
arpl
mov
sahf
mov
or
subb
nop
inc
aad
movl
mov
sbb
cmp
data16
rorl
mov
jbe
lods
sbb
cmpsl
sub
ss
int3
adc
fwait
or
les
loope
push
pop
mov
imul
scas
ja
ret
out
or
cli
imul
rcrb
fbld
adc
mov
mov
mov
push
push
shrl
icebp
std
or
mov
xor
pop
jle
loopne
and
sub
lods
js
arpl
pop
aas
lahf
mov
stc
xchg
inc
add
adc
adc
stos
movsb
and
sbb
imul
insl
ljmp
mov
jo
mov
push
xor
sub
imul
jl
aad
jo
pop
in
sub
fsubrl
pop
stc
ja
dec
das
and
jnp
cwtl
cmpsb
xchg
int
pushl
jmp
fcomip
mov
pop
lahf
out
mov
sbb
repnz
push
stc
mov
or
sub
out
add
pop
mov
push
rcll
out
test
and
push
std
cmp
inc
int
inc
aam
adc
movsb
adc
sarl
imul
sbb
movsl
lret
sub
sub
shr
bound
add
in
pop
adc
and
mov
call
sub
add
fdivrs
cli
enter
pusha
xchg
pop
movsb
sti
mov
inc
pop
xor
or
push
mov
cmp
adc
cmp
inc
push
cmp
add
jmp
inc
adc
pop
jle
and
mov
mov
out
add
jne
xchg
imul
addr16
mov
nop
mov
repnz
dec
pop
jne
out
inc
repz
dec
push
mov
sbb
mov
bound
jae
mov
loop
movsw
sti
dec
inc
aad
pop
adc
out
cs
jno
test
adc
mov
fucomi
hlt
stos
popf
fisubrs
xchg
push
arpl
in
test
adc
sbb
pop
xlat
dec
cmp
fisttps
xor
sahf
xchg
dec
out
ret
pusha
dec
loop
jmp
js
fadd
sbb
and
pop
sbb
movsl
and
fsubs
les
dec
repz
inc
in
andb
adc
mov
jb
sbb
inc
into
loopne
pop
fwait
out
inc
xchg
shl
insb
mov
ja
pop
in
sbb
loope
lahf
rcrb
adc
pop
add
pushf
lods
sub
int3
dec
jbe
or
pop
std
pop
dec
xor
xor
mov
dec
inc
xchg
sbb
pop
ds
outsl
data16
push
in
mov
cld
or
mov
fstl
std
repz
orb
or
inc
mov
ljmp
int3
jl
sbb
nop
cmpsb
jg
mov
pop
pushf
arpl
imul
fwait
push
lea
das
sub
xor
cmc
dec
or
lahf
stos
push
test
push
aad
fldl
inc
leave
mov
sub
in
fldenv
or
push
cmc
ja
cmp
mov
in
jl
cmp
fnstsw
mov
inc
dec
dec
sub
std
lods
pop
jbe
add
xor
mov
movb
lock
mov
aas
add
or
gs
jo
int3
jb
fimuls
xchg
mov
sub
dec
enter
adc
pop
movsb
add
jmp
mov
xchg
xchg
gs
push
pop
cmpsl
fs
or
roll
push
and
outsl
jl
repz
push
jecxz
out
test
mov
pop
call
mov
mov
push
int3
mov
daa
pop
and
test
push
dec
sbb
mov
pop
and
shlb
popa
xor
div
sub
insl
subl
xchg
xor
cs
sub
jp
idivl
loope
mov
pusha
sub
jb
fstps
jb
aad
int3
add
mov
add
out
test
pop
mov
xchg
int
icebp
adc
lock
cltd
sahf
mov
int3
shl
cmp
imul
stc
and
fxtract
mov
lcall
mov
add
inc
jb
gs
add
or
mov
lea
jp
sarl
aam
lds
addr16
jmp
xlat
subl
push
sbb
das
scas
jns
xchg
fs
pushf
aas
loopne
jnp
jo
dec
xor
dec
gs
xchg
sarl
arpl
ljmp
pusha
and
add
dec
sbb
dec
jp
das
or
mov
cmp
lret
std
push
fsubp
lret
arpl
popf
in
xchg
mov
pop
mov
push
int
sbb
rcrb
sub
test
pop
jp
cmc
aad
cwtl
test
and
mov
aad
aam
adcb
mov
test
dec
inc
cmpsb
jns
adc
aas
hlt
adc
jo
sbb
lock
int
xor
mov
mov
in
push
in
les
fldcw
fisttps
lea
aam
test
inc
xchg
jle
mov
dec
ss
movsl
jge
push
dec
xchg
push
je
int
adc
ja
hlt
mov
dec
xor
pusha
sub
clc
add
sbb
cmpsl
mov
adc
xor
sbb
div
mov
rcrl
mov
push
add
mov
pop
subl
cmc
and
lods
mov
xor
push
enter
xchg
mov
aaa
dec
pop
nop
jecxz
cmp
dec
mov
and
aad
pop
xchg
jmp
mov
pop
xor
clc
push
ret
add
sbbl
sub
cwtl
out
sbb
vmovlpd
inc
test
pop
jnp
xchg
add
or
sub
fildll
cmp
sub
add
adc
fwait
in
mov
outsb
lds
scas
or
and
mov
and
fcmovne
fisubrl
outsl
jg
in
mov
das
scas
push
test
fidivl
imul
stc
jmp
pop
pop
pop
mov
xor
push
out
xchg
xchg
vrcpss
inc
dec
jb
es
xchg
adc
push
mov
cmp
and
ljmp
adc
mov
clc
loopne
add
add
pop
out
and
imul
xor
popf
sahf
cmp
push
mov
adc
jnp
xchg
bound
mov
jecxz
repnz
in
xchg
ja
jne
sbb
and
pop
add
rcr
xor
lock
mov
stos
cmpl
dec
nop
movsb
jmp
icebp
scas
xchg
cmp
popf
cli
out
int3
roll
cwtl
xchg
inc
or
xor
in
mov
inc
aaa
adc
mov
or
loop
mov
push
ret
add
inc
out
les
cli
mov
xlat
inc
adc
das
jns
insb
scas
mov
subl
sbb
cli
sarb
into
nop
sub
jl
mov
jnp
insl
push
jno
xor
push
pop
pop
xor
mov
mov
and
push
arpl
pushf
js
sbbb
idivl
xchg
inc
xor
bound
outsb
inc
les
sbb
cmp
in
in
outsb
sahf
shl
into
sub
mov
pop
xchg
loope
leave
sbb
mov
lahf
sub
mov
mov
jge
and
fstpl
negl
sahf
repz
xor
cmpsl
jae
xor
pop
sub
loopne
jl
and
mov
xchg
insl
movb
icebp
repz
bound
add
push
movl
enter
lret
jbe
xchg
inc
lods
mov
dec
or
aad
test
pusha
add
rorl
jge
insl
mov
mov
into
int
bound
push
push
shl
pop
adc
popf
repnz
adc
les
lcall
or
jl
mov
nop
sub
inc
les
mov
loopne
adc
js
mov
mov
mov
in
or
lock
fbld
lods
cmp
add
cs
and
dec
pop
mov
jmp
popf
scas
add
insb
in
in
cmp
movsl
sub
or
stos
nop
and
bound
les
mov
cltd
cmp
sarl
sbbl
iret
pop
andb
insl
jnp
out
xor
loop
test
lds
xchg
out
out
push
and
shlb
adc
cld
add
out
clc
das
test
js
mov
stos
les
push
movsl
cmp
sbb
sub
imull
pusha
sub
cmp
cmpl
cmp
xor
inc
call
mov
ret
fwait
cld
rol
scas
repnz
ljmp
mov
and
xchg
shll
dec
lds
inc
sbb
mov
stos
rorl
pushf
mov
inc
sub
and
fsubrp
aad
mov
iret
mov
push
sub
insb
retw
pop
dec
stos
push
les
xchg
jno
xchg
movsl
pop
popa
lahf
test
rcl
fnstcw
push
xor
aaa
or
pushf
dec
movl
int3
das
repz
jb,pn
jns
xor
idivl
jb
in
push
inc
mov
pop
inc
test
punpckhdq
sub
pop
cmp
js
cmc
ret
dec
ror
mov
inc
sub
rcl
mov
cmp
rorl
outsl
and
adc
sarb
add
push
divb
lods
hlt
inc
jno
xor
add
push
enter
addr16
int3
adc
stos
fwait
aaa
ret
mov
push
lods
in
xchg
mov
lds
sti
out
dec
loopne
loopne
jmp
cmpsb
or
sti
sbb
mov
or
xchg
int3
roll
adc
mov
in
adc
mov
int
inc
cli
xor
or
js
aam
sti
lret
pop
test
pop
je
jle
ljmp
test
sub
sahf
bound
sarb
inc
movsb
sub
out
xchg
scas
in
ljmp
ss
ljmp
loopne
jns
add
xchg
or
je
jecxz
mov
cmc
dec
push
fidivrl
test
call
mov
push
stc
xchg
mov
sahf
add
mulb
mov
mov
sti
mov
ss
push
cmpsl
shrb
ljmp
xchg
dec
adc
jne
sbb
mov
inc
dec
add
push
ret
testb
sti
ret
mov
idivb
dec
push
lock
or
in
mov
int3
addb
js
jns
mov
mov
daa
std
xor
push
xor
aaa
pop
test
mov
adc
insb
pop
xchg
decb
ljmp
sbb
sbb
rorb
add
mov
into
aaa
jo
das
jnp
push
sub
stos
mov
imulb
fwait
pop
sub
cmpsl
push
xchg
mov
negl
mov
xor
and
push
push
dec
jg
cmp
lret
jns
cli
pop
mov
fldl
cmp
jne
dec
or
out
add
mov
mov
cmpsb
push
adcl
inc
push
hlt
add
add
sub
adc
cmp
push
movsl
fs
shl
add
stos
inc
shrl
xchg
sbb
xchg
inc
pop
xchg
cmp
shll
in
or
adc
and
incb
mov
and
pop
jnp
add
or
mov
push
ss
push
mov
cmp
xchg
pushf
pop
mov
jns
orb
lcall
icebp
fst
and
dec
aam
push
dec
sub
out
xor
movsb
xchg
mov
xor
stos
xchg
out
cltd
rorl
lods
stos
xor
sub
cltd
ss
add
repnz
push
mov
and
outsl
mov
push
sub
gs
dec
xorl
not
jmp
xchg
mov
dec
insb
faddl
test
xor
icebp
adc
fmuls
cmpsb
cmp
push
orl
ds
push
loopne
nop
push
pop
xor
push
jb
aam
add
jp
aas
icebp
pop
xchg
xor
imul
imul
mov
leave
jg
adc
into
fbstp
mov
arpl
das
jle
scas
push
in
out
fisubl
pop
pop
and
popf
pushf
insl
sahf
mov
sub
fstl
push
movl
bound
dec
daa
dec
in
stos
jne
lods
andl
xor
dec
in
and
dec
adc
add
xchg
stos
es
mov
add
dec
fstpl
mov
xchg
repz
fldenv
push
jno
push
pop
hlt
call
flds
mov
cld
out
addr16
iret
je
pop
sub
inc
imull
inc
fs
sub
loope
mov
sahf
icebp
cld
mov
jl
mov
pop
jne
rcll
push
sbb
rcll
xor
cmp
sub
mov
mov
fwait
inc
and
lds
jmp
mov
je
or
push
and
cld
test
div
lods
int3
insl
in
and
out
leave
aaa
lret
and
test
cmp
out
ficoml
addr16
jne
sbb
popa
sub
pop
lret
test
mov
shlb
outsb
sbb
pop
push
jp
inc
adc
cmp
sub
cmp
mov
outsb
pop
jno
adc
xchg
jb
insl
cmc
decl
daa
std
ds
push
push
out
xchg
mov
aas
mov
cmova
sbb
jb
dec
mov
pop
aad
mov
add
outsb
popf
jp
call
pop
fwait
jns
push
in
call
ds
xor
jno
movsl
rcrb
je
xor
sbb
dec
pop
popa
sbbb
xchg
mov
addr16
mov
in
adc
mov
sbb
or
adc
ja
cli
xchg
int3
fmul
sbb
pop
ret
pop
mov
lret
push
sbb
enter
lea
xor
mov
adc
shll
jo
andl
sub
and
cltd
lret
pop
dec
jmp
xchg
xor
stos
mov
int3
outsl
xor
adc
test
insb
push
adc
mov
imul
pop
dec
dec
mov
jl
imul
fmull
inc
adc
loopne
nop
and
mov
push
push
sub
cmp
cld
fcmovnu
xor
push
dec
and
pop
clc
loop
popa
mov
inc
rorb
enter
mov
rcr
lods
outsl
push
mov
jmp
push
cmc
nop
icebp
and
in
adc
das
mov
jg
dec
xchg
sub
xchg
sarl
dec
fbstp
mov
ljmp
test
cmpsb
and
lds
jnp
sbb
nop
fwait
mov
xchg
arpl
or
pop
pop
shrb
insl
insl
adc
jmp
out
andl
test
adc
pop
dec
stos
bound
xchg
and
shll
out
es
xor
add
out
pusha
and
int
test
mov
xor
jecxz
daa
inc
dec
mov
cmpsl
pop
jae
or
inc
xchg
adc
shrb
mov
push
jp
mov
pop
insl
push
mov
push
and
lret
add
xchg
push
sbb
jo
xor
inc
test
pop
inc
add
popl
xchg
push
adc
push
dec
add
fcmovne
fidivrl
jns
inc
jns
popa
sbb
rcr
cmp
lcall
aaa
push
add
xchg
loope
test
inc
cmc
jno
dec
cmp
lea
sbb
xchg
cmp
nop
or
push
test
int3
pop
shrb
lods
sub
xor
pop
je
insb
mov
push
xchg
ds
dec
leave
and
or
add
inc
or
je
xchg
and
les
mov
and
dec
mov
sbb
dec
arpl
xor
mov
mov
pop
jae
xor
outsb
movsl
jmp
sub
sub
xchg
push
mov
popf
xchg
inc
jg
dec
xor
mov
adc
stc
cmpsb
mov
push
xlat
ds
sbbb
lahf
cmp
fildll
xor
xchg
dec
ss
rolb
loopne
iret
push
arpl
andl
jns
mov
mov
js
add
mov
aaa
lock
jnp
into
ljmp
into
jl
and
leave
push
out
into
and
orl
adc
inc
dec
pop
add
jb
es
test
sti
incl
mov
cmc
xchg
or
sub
xchg
pop
int
repz
add
sub
sub
sbb
or
loope
push
ret
jne
push
and
and
adc
jp
idivb
outsb
mov
test
pop
mov
rclb
dec
add
sarb
xor
pop
test
movsl
dec
and
jge
xor
xor
scas
mov
dec
jmp
outsb
adc
sbb
negl
pop
mov
mov
cmc
movsb
and
xor
dec
push
xchg
popa
cwtl
bound
dec
mov
scas
gs
xchg
mov
xor
sub
jo
jmp
push
pop
add
cwtl
fisttpll
movsl
push
lret
mov
pop
cmpsl
iret
ret
cmpsl
mov
ds
cld
clc
scas
mov
fs
in
dec
pop
movsl
xchg
out
cmpsl
sbb
jbe
jnp
data16
or
mov
cwtl
jne
pop
xor
xchg
push
test
mov
mov
stos
popf
cs
xchg
cld
push
pcmpeqb
add
test
int
leave
inc
popf
data16
call
mov
jl
mov
cmp
aam
stos
inc
jb
lods
ss
out
cmp
enter
cwtl
paddb
xchg
jo
insb
dec
or
xchg
lahf
and
out
mov
in
in
pushw
psubb
out
fnstcw
jle
test
adc
dec
int
test
dec
iret
insb
data16
and
mov
dec
xchg
add
pop
and
sub
xchg
test
add
addr16
loope
mov
sub
test
inc
in
xchg
jne
sarb
dec
pop
inc
loop
xchg
sub
popl
repnz
push
dec
jbe
sbb
xchg
fs
jno
adc
out
in
inc
pop
push
jns
push
sbb
aam
push
jle
fcom
jb
jne
call
popf
jb
mov
pop
fildll
inc
jg
push
cmpb
mov
xor
push
xchg
push
sbb
mov
incb
pushf
mov
xlat
jg
lcall
lods
pop
sub
fmuls
cmp
push
lret
lds
mov
pop
movsl
cwtl
test
mov
dec
inc
iret
jmp
fldl
push
mov
aaa
bound
out
sub
sbb
xor
fimuls
jge
bound
mov
cmp
or
dec
xor
push
mov
inc
mov
aas
loop
lods
mov
or
jne
dec
cmpps
mov
jp
fistpl
jg
sbb
mov
or
and
xchg
jp
ja
fistpll
fs
sbb
mov
imull
add
insl
rorl
jno
fidivs
pop
xchg
fnstcw
out
popf
sbb
int3
jl
inc
fnstenv
pop
adcb
into
into
sbb
pop
cmp
adc
push
add
add
lock
sub
ljmp
es
mov
pop
pop
fiadds
insb
sti
outsb
xchg
in
push
jmp
nop
xchg
jo
mov
in
insb
out
sahf
bound
add
mov
jg
rclb
jecxz
xchg
dec
xor
xor
iret
mov
data16
scas
push
adc
sub
nop
scas
xchg
sub
scas
dec
sbb
add
dec
cmp
dec
enter
in
push
xchg
dec
mov
or
lds
sbb
ja
or
mov
pop
insb
add
add
loopne
imul
gs
or
js
adc
pop
fcomps
lahf
or
cmpsl
and
mov
inc
mov
add
dec
popa
and
jge
movsb
mov
pop
sub
push
je
inc
mov
shl
cmpsl
xor
lds
fmull
lahf
pop
dec
jnp
push
xchg
iret
or
push
add
adc
xor
jge
mov
jecxz
push
inc
sbb
les
mov
pop
xor
aam
in
xchg
cmp
in
cwtl
lahf
fdivrs
dec
mov
jbe
pop
xchg
aas
fisubs
mov
sahf
rorb
sti
addr16
fidivl
pop
movsb
andb
push
hlt
sub
jnp
or
push
lahf
jecxz
pop
sbb
jle
cmp
xor
xlat
cmp
fwait
xchg
pop
fs
loop
mov
sub
roll
dec
stos
mov
imul
insl
jae
ret
jl
push
xor
push
rol
ffreep
jb
insl
xor
fwait
add
or
lcall
imul
stos
pop
fmull
mov
aam
push
in
push
movsb
push
fs
xchg
fsubl
cmp
pop
loope
and
int3
ret
in
push
int
ds
jae
pop
inc
sti
inc
nop
and
and
push
cltd
outsl
popa
jecxz
fldcw
scas
jae
push
jg
call
movsb
xlat
adc
push
xchg
adc
jmp
fidivs
stc
outsl
shrl
lea
push
scas
xchg
int3
cmp
xchg
scas
ja
enter
outsb
lds
dec
xchg
das
pop
adc
mov
add
out
int3
decl
insb
xchg
xor
fwait
and
lcall
jns
xchg
movsl
fwait
dec
stos
es
int
daa
std
dec
mov
xchg
mov
pop
mov
loope
pushf
data16
ss
int3
xchg
lock
cmp
inc
jae
or
and
sti
or
xlat
mov
sarl
insb
insl
fcom
adc
sbb
or
cltd
outsb
pusha
int
cmpsl
out
std
daa
sbb
pop
and
loop
insl
adc
lock
es
cmpsl
fdivs
ja
in
pop
xor
ja
stc
scas
pushf
xor
jne
jge
sub
xor
adc
dec
pop
lea
imul
push
xor
xor
cld
xor
fisubs
cwtl
mov
cli
cmp
xor
lea
xor
imul
xchg
fsubl
jecxz
mov
imul
xchg
shr
fcomps
pop
arpl
dec
subl
fimuls
and
dec
arpl
cmp
xor
push
sahf
xchg
pop
fcmovnu
pusha
pop
jle
pop
rol
add
stos
pop
loope
cld
dec
adc
ret
test
push
jae
xchg
dec
cwtl
ret
mov
and
faddp
popf
mov
imul
out
fsubrl
mov
sbb
and
push
jbe
lcall
bound
enter
rcrl
jae
in
xor
call
mov
sbb
sbb
mov
adc
cmpsl
imul
lcall
sub
and
sbb
pop
sbb
push
cmp
jns
jmp
cwtl
mov
xor
in
push
mov
dec
fildll
mov
push
push
ljmp
add
pop
ficompl
push
mov
push
cmpsb
out
push
push
push
mov
inc
and
cmc
adcb
clc
and
pop
jg
mov
movsl
mov
pusha
pop
mov
push
popf
mov
sub
andb
insb
push
ja
int
fsubl
das
push
aas
les
xor
sub
pop
cmp
filds
mov
inc
fs
sub
fisttpl
insl
sub
pshufw
push
notb
ljmp
mov
mov
cld
in
sahf
mov
jecxz
sbb
push
sbb
imul
aas
add
or
sub
mov
mov
cld
xchg
mov
addb
add
mov
fwait
test
xchg
rcrl
lret
js
jne
xor
test
jns
mov
in
pusha
add
lret
scas
loope
test
inc
push
mov
xor
xchg
loop
jns
mov
xchg
push
pop
push
jmp
js
cs
xor
insb
cmpsl
mov
or
fsubs
lahf
cmc
jb
testl
mov
mov
rolb
dec
lahf
pop
push
imul
sub
sub
jge
jg
adc
pop
cwtl
mov
xor
dec
sub
aad
sub
xor
movsb
pusha
xchg
xor
push
add
push
div
shll
inc
mov
ret
mov
mov
sbb
or
push
and
test
es
mov
imull
dec
repnz
popa
adc
lods
loope
sahf
mov
hlt
repz
and
mov
push
dec
sbb
dec
imull
ja
mov
or
dec
outsb
mov
xchg
xor
bound
daa
scas
cmp
dec
sub
jno
imul
pop
adc
mov
and
jne
xchg
and
sbb
scas
mov
imul
inc
cltd
push
cmpsb
pop
xchg
mov
xchg
mov
adc
xor
jecxz
in
sbbb
mov
ds
jg
add
jnp
mov
int3
push
mov
ss
jg
sarl
xchg
sahf
pusha
adc
push
int3
stos
dec
repz
mov
and
movsl
aam
lahf
insb
iret
int3
int
aad
dec
movsl
ss
xorl
into
into
dec
scas
fisubrl
sahf
ss
and
mov
and
mov
xor
dec
sbb
xchg
mov
or
adc
aas
stos
outsb
xchg
mov
and
int
pop
or
and
and
ljmp
outsl
bound
sbb
inc
dec
int
mov
lods
pusha
jl
inc
push
jo
leave
mov
lods
test
dec
xchg
into
cli
cmp
mov
ljmp
push
aas
jle
jle
inc
pmuludq
inc
mov
es
cmc
add
sbb
adc
jns
jbe
roll
lret
mov
lret
push
push
xchg
cmpsl
inc
sbb
and
push
int3
cli
gs
dec
mov
bnd
or
xor
or
movsb
pop
sub
xchg
adc
int
insb
mov
mov
pop
cli
adc
xchg
xchg
cmp
mov
clc
or
scas
daa
mov
movsl
jecxz
movsl
test
lods
std
sub
cmp
shrb
inc
sarl
insb
mov
insb
sub
inc
sub
inc
inc
inc
sbb
sbb
mov
mov
fstp
inc
inc
xchg
xchg
addl
hlt
adc
mov
mov
insl
fnstcw
jne
mov
addr16
test
es
scas
push
pop
sub
push
xchg
lods
ret
cli
and
push
pusha
les
fstpl
mov
cmp
and
aam
inc
inc
je
clc
aam
push
jmp
jmp
xchg
mov
sarl
movl
sub
xor
in
xor
leave
adc
and
xchg
jno
mov
xlat
aad
cmp
clc
jae
mov
scas
add
jno
test
push
adc
orb
pop
clc
jno
shlb
test
mov
adc
rorl
shl
jl
xorb
cmp
dec
aam
or
fs
cs
aaa
lret
scas
xchg
stc
aaa
and
adc
push
aaa
jae
aam
sub
dec
outsb
ficomps
ljmp
cld
popf
aaa
and
dec
pop
sbb
dec
push
pop
iret
pop
ret
pop
mov
loope
lret
add
adc
arpl
jne
jge,pt
pusha
or
popf
data16
inc
nop
jnp
cmpsb
adc
into
add
int3
xor
lret
inc
test
or
push
rcr
pop
lods
xor
add
cmp
incb
xchg
movsb
add
add
dec
push
sbb
xchg
cmp
insl
push
iret
cmp
jno
mov
cmc
and
sbb
xor
popa
jo
sub
sbb
popa
mov
mov
cmpsl
mov
ljmp
lock
into
inc
rcrb
sub
loopne
ja
jbe
mov
ret
and
rol
push
mov
push
cli
pop
jmp
ffree
lret
pop
mov
ds
pushf
dec
xlat
push
sbb
shl
inc
jp
rcll
xchg
insb
stc
daa
pop
cmp
xchg
loope
push
leave
jnp
add
mov
mov
int
push
pop
sub
mov
push
push
mov
sbb
aas
sbb
jnp
mov
mov
adc
add
xchg
jno
push
jecxz
pop
ret
out
mov
mov
jb
fstps
inc
sbb
lods
imul
mov
or
dec
shlb
pop
mov
mov
cli
stos
jge
xchg
sbb
push
sbb
daa
sub
popf
je
insb
arpl
mov
sub
iret
iret
jns
hlt
in
fsubrs
fisttpll
fistl
rorb
insb
xor
cwtl
jae
jnp
mov
hlt
in
sub
jge
dec
mov
lcall
bound
inc
xchg
cmp
add
inc
inc
xor
mov
or
stos
jp
cmc
pop
dec
cmp
std
pop
pop
dec
mulb
stos
sbb
hlt
aaa
scas
aad
or
jle
fdivrs
sub
into
cmpb
jne
loope
or
add
mov
add
mov
xchg
call
rcrb
adc
xchg
lahf
fs
ljmp
ljmp
dec
xor
jne
xchg
cmp
scas
jmp
outsl
je
scas
clc
sarl
mov
xchg
mov
lcall
xor
es
adc
xchg
mov
jge
out
stos
fdivrs
mov
lods
popf
pop
inc
insl
insb
jno
aam
jle
cltd
sbb
push
jecxz
hlt
pop
cmc
pop
xor
nop
mov
jmp
push
into
fwait
lea
jmp
neg
sbb
repz
xor
dec
call
jp
inc
mov
sub
popa
mov
xorb
xchg
sub
idiv
clc
sarl
popl
xchg
fildl
pop
mov
popa
orb
leave
sbbl
push
inc
jg
iret
mov
mov
sbbb
mov
sub
loop
arpl
jno
push
out
or
ljmp
jae
adc
dec
or
xchg
pop
mov
dec
push
dec
sub
xchg
or
xchg
rol
je
fistps
es
sar
mov
gs
push
push
stc
inc
sub
adc
in
push
xor
in
push
xor
sti
popa
xchg
stos
lods
dec
inc
jl
or
push
xor
ror
sub
mov
aas
aaa
push
push
xchg
xor
iret
stos
dec
adc
dec
push
adc
dec
xchg
xor
jecxz
xchg
shll
xchg
xchg
movb
mov
shlb
pushf
stc
dec
dec
imul
daa
lahf
sbbl
cmp
in
cld
rorl
cltd
mov
fldl
inc
faddp
and
inc
cmp
pop
push
xor
jle
pop
in
sub
in
aad
mov
pop
xchg
push
xchg
rcl
xchg
mov
dec
pop
cld
ss
and
in
push
mov
pop
sbb
sbb
fildl
push
xor
sub
cmp
push
fidivrl
xchg
add
mov
ret
fdivp
out
loopne
test
scas
cltd
sbb
int3
xchg
das
aad
and
mov
lret
jmp
loope
loope
mov
adc
and
jecxz
adc
mov
ss
enter
mov
and
shrb
cwtl
dec
aas
mull
jns
mov
out
icebp
es
and
pop
mov
ds
outsb
inc
cmp
inc
sbb
push
into
pop
push
mov
call
imul
loopne
in
sbb
clc
fmull
mov
pop
in
add
cmpsl
mov
rcrb
sub
mov
and
xchg
iret
xchg
jne
rcrl
pusha
in
mov
mov
pop
arpl
repz
movsl
jmp
add
out
shl
or
stos
push
xchg
push
int
test
lods
push
mov
xchg
lcall
enter
and
or
push
cmpsb
push
mov
push
addb
ja
xchg
add
int3
cmc
mov
pop
dec
push
mov
sub
and
xchg
push
cwtl
ss
jne
rorb
movsb
fistpl
inc
int3
rcll
fdivl
xor
push
dec
jge
sahf
jbe
iret
pop
fcmovnu
pop
or
cmp
leave
jae
xor
test
mov
mov
outsb
cmp
cmpsl
mov
stos
pop
loopne
das
pop
sti
es
lea
mov
fsubs
sub
jb
push
loopne
push
repz
xor
dec
or
push
dec
push
lods
sbb
pushf
movsl
pop
rcll
ss
test
or
aam
push
dec
mov
sub
rclb
jo
pop
or
push
cmpsb
out
push
clc
cs
lds
mov
xor
out
sub
mov
inc
icebp
mov
push
out
js
mov
in
int
mov
scas
iret
cmc
mov
push
or
in
movsl
push
inc
js
nop
scas
incl
aaa
mov
sub
sarl
add
adc
fnsave
xchg
aad
push
popf
ds
inc
ror
out
cmp
call
fisubrl
icebp
lret
or
xchg
icebp
cmpb
std
push
addr16
lds
push
cs
mov
and
mov
sbb
gs
ljmp
cmp
push
push
inc
lods
movsl
ss
mov
popf
icebp
pop
std
push
jle
cltd
push
popl
adc
in
loop
in
dec
add
aas
push
test
and
mov
adc
fwait
xlat
mov
xor
jbe
mov
loopne
subl
loope
ja
dec
dec
cmpb
mov
mov
pop
or
push
pop
adc
mov
xchg
pop
fisttpll
mov
shl
mov
push
into
pop
lods
or
sahf
or
adc
mov
xchg
test
xchg
pop
cmp
inc
adc
in
clc
iret
jge
sti
sub
adc
in
xchg
cmp
sti
inc
dec
fwait
mov
and
fildl
add
jmp
push
pop
adc
stc
aas
call
cmp
dec
mov
add
cmpl
pop
jecxz
xchg
nop
sub
pop
jp
mov
inc
add
jae
in
mov
cmpsl
jno
or
out
shlb
mov
pop
jnp
and
mov
pop
insb
shll
cmc
test
jmp
movsl
fwait
xchg
mov
jae
and
pop
daa
or
and
clc
xor
mov
and
xor
mov
arpl
rdtsc
add
jge
lods
jne
xchg
mov
xchg
xchg
cmp
sub
cmc
dec
dec
pusha
out
dec
adc
sub
xor
fcompp
fmuls
mov
imulb
mov
shl
dec
mov
cmp
xor
test
mov
inc
dec
mov
data16
std
mov
int3
xor
ffreep
add
sahf
rcll
jp
es
ds
mov
addl
rcrl
or
call
xchg
cmp
cmp
inc
sbb
arpl
xor
xchg
inc
js
rcrl
fmul
imul
addb
in
gs
aaa
std
subl
xor
test
cmp
cmp
ret
outsb
fisubrs
and
or
jle
aam
repz
ror
or
into
test
dec
mov
xchg
add
cmp
add
or
mov
push
sbb
cmpsl
out
cmp
lds
test
call
jl,pt
cs
test
out
mov
imul
dec
stos
or
xchg
cltd
es
movsl
popa
and
push
pop
lods
ljmp
and
fisttps
mov
gs
push
mov
test
mov
sbbb
shl
leavew
cmp
outsb
mov
fdivrl
xor
or
cltd
sub
pushf
sub
ficomps
mov
fs
mov
inc
repnz
cmpsb
fbstp
jg
xchg
scas
dec
dec
in
adc
filds
jns
das
inc
loope
or
cmp
mov
lcall
sahf
cmp
test
dec
inc
inc
xor
sbb
movhps
ljmp
idivl
cwtl
sub
lahf
shrl
mov
push
fldenv
xor
mov
adc
hlt
out
cwtl
test
adc
sub
vrcpss
xchg
pop
mov
lods
loopne
pop
sub
add
cmp
hlt
es
dec
and
sahf
xor
push
aas
sbb
sub
inc
cli
or
xchg
xor
xor
inc
sub
push
mov
add
xchg
data16
int
cltd
mov
mov
ja
mov
loop
jmp
inc
lahf
dec
outsb
or
movsb
mov
in
mov
inc
mov
inc
dec
jb
mov
mov
mulb
adc
push
gs
pusha
in
test
jae
mov
or
jmp
inc
test
mov
aad
test
cmc
jmp
mov
lea
shlb
adcl
sub
inc
inc
aas
xor
push
lret
daa
mov
dec
jmp
fs
mov
pop
push
int
cmp
arpl
aad
or
push
dec
leave
inc
mov
xor
cmpsl
inc
mov
push
pop
mov
shrl
add
mov
xchg
jns
and
cmovs
pushf
sahf
std
push
cmp
mov
sub
and
shrl
and
inc
ret
push
cwtl
movsb
fucomp
and
jp
sub
shrb
jle
sub
mov
fs
ror
in
cmp
xchg
pop
iret
lahf
pop
mov
dec
ret
repnz
lods
int3
cltd
jg
sbb
data16
shrl
mov
test
stos
dec
or
cltd
push
cmp
or
push
xlat
sub
mov
sub
dec
andl
ret
dec
imulb
jle
jb
sub
adc
mov
stc
icebp
jb
adc
mov
jp
loope
stos
dec
inc
out
add
in
inc
mov
test
pop
dec
fcomps
inc
and
cmp
aam
repnz
or
pushl
xchg
cltd
hlt
gs
ja
jge
in
cmp
and
cmp
je
adc
movsb
mov
dec
int3
in
outsl
dec
fs
repz
or
adc
or
inc
ljmp
leave
notb
in
fildll
dec
mov
mov
sub
inc
xchg
hlt
sbb
cmp
fldcw
dec
rorl
bnd
ja
push
in
mov
mov
dec
pop
inc
sbb
and
rcrb
hlt
cwtl
xor
iret
cwtl
insl
stc
out
out
into
xchg
add
xlat
pop
insb
push
popa
sub
lods
xchg
dec
enter
cmpl
mov
jno
xor
sti
sbb
sub
add
pushf
loopne
or
jl
jle
sbb
movups
pop
pop
mov
sbb
cltd
jmp
pusha
divb
push
xchg
or
cmp
gs
adc
imul
or
adc
addb
jns
jecxz
cld
push
ret
clc
lret
stos
ljmp
mov
mov
sub
mov
iret
dec
dec
pop
test
cli
pop
in
pop
push
scas
mov
jecxz
out
mov
out
jl
les
pop
in
and
pop
adc
jg
div
imul
mov
loop
add
fldpi
and
xor
jp
add
sbb
adc
ret
loopne
test
inc
cmp
pusha
test
mov
or
sbb
lods
repnz
dec
std
mov
cmpsl
fcmovnb
pop
sub
aad
or
push
cmp
fnstsw
push
leave
pop
dec
stos
xchg
add
or
mov
fimull
ret
xchg
lock
mov
fmulp
imul
stos
push
lret
or
adc
cmpsb
je
xchg
icebp
cmpsl
jb
testl
mov
lock
xor
and
ja
outsb
in
jp
fwait
mov
in
jmp
call
xchg
dec
xchg
sub
leave
or
mov
mov
sbb
jb
data16
push
adc
js
pop
shll
insl
lret
push
outsl
movsl
add
xchg
xchg
sub
lret
in
je
sub
pop
fs
xor
push
and
leave
fsubrl
mov
xor
lcall
fdivp
cmp
mov
popf
or
adc
mov
adc
arpl
sbb
jmp
add
in
rclb
mov
mov
cmpsl
or
dec
mov
testb
je
out
fnstcw
fdivr
mov
dec
push
aas
test
cwtl
sbb
icebp
xchg
dec
add
xchg
jmp
js
leave
adc
test
in
das
or
xchg
es
dec
push
sub
sub
scas
dec
outsl
xor
and
xchg
push
dec
insb
fwait
or
pop
repnz
mov
mov
xlat
mov
pop
inc
lret
ljmp
jae
ja
sub
movsb
xchg
lcall
xor
je
mov
xor
fisttpl
adc
push
jns
pop
mov
lret
or
cmc
repnz
cmpsb
dec
pop
push
fisttpll
pop
cmp
mov
ret
out
jnp
hlt
rcl
adc
adc
and
sub
or
bound
inc
inc
inc
clc
cmpb
mov
inc
push
mov
sbb
daa
test
xor
sbb
dec
xchg
adc
pop
ss
fs
mov
ds
and
jecxz
fdivrl
adc
mov
ret
in
jne
ljmp
in
mov
popa
out
dec
inc
sub
mov
or
aad
outsb
lods
out
inc
dec
stc
data16
xor
push
int3
gs
push
adc
dec
adc
add
fmull
mov
jmp
mul
sub
loop
out
xchg
jmp
mov
in
mov
aaa
inc
sahf
sub
hlt
mov
in
mov
leave
aas
inc
clc
pushf
pop
aas
call
add
adc
sarl
mov
stc
leave
mov
mov
ja
in
nop
in
dec
test
loope
adc
jg
test
clc
leave
add
imul
out
jne
pop
in
es
test
xchg
xchg
jle
push
add
mov
bound
loopne
movsb
pusha
sbb
adc
jbe
mov
mov
bound
ja
adc
ja
addr16
dec
rcr
fcmovbe
or
int
fdivrl
push
mov
imul
popf
movsb
push
loope
and
mov
mov
dec
cltd
test
add
fisttpl
call
outsl
xor
jne
xlat
es
pop
jp
jne
pop
mov
push
sbb
scas
xchg
mov
sti
sub
test
aam
sub
or
out
sbb
mov
sub
cmp
jg
insb
pop
push
les
add
dec
nop
add
push
out
pop
lds
les
pop
mov
notl
sub
out
mov
lods
sbb
stc
fucomp
aas
pushf
adc
int
das
dec
cmpsb
cmp
jle
sbb
push
pusha
and
enter
cmp
pop
dec
xchg
sub
push
aaa
inc
lock
icebp
loopne
sub
inc
es
and
pop
xchg
and
cmp
das
cmpsb
test
int3
test
push
jle
xor
daa
lock
dec
test
das
inc
push
lds
loope
mov
int
int3
cmp
inc
lret
ret
cmp
sub
dec
mov
or
lret
xor
es
ds
fstpt
pop
lcall
push
movsl
xchg
sbb
repnz
lret
mov
sbb
or
jbe
and
sarb
test
loope
sbb
sahf
cmpsl
lcall
xor
inc
and
xlat
dec
add
dec
lea
roll
test
xchg
ret
cli
xchg
inc
fidivl
jb
add
incb
je
into
stos
xor
popa
lods
push
cltd
cmp
mov
xchg
pop
icebp
iret
pop
ljmp
imul
mov
lcall
adc
mov
icebp
dec
lret
dec
jns
aad
jo
and
and
leave
cmp
jne
xor
ret
stos
repz
js
out
in
popa
ja
jnp
pop
jns
sub
and
repz
or
movsb
adc
aaa
out
ljmp
and
arpl
fsub
mov
adc
inc
cmp
stos
addr16
pop
dec
out
fwait
xchg
push
int
cs
sbb
aaa
xor
fcompl
jl
inc
and
pop
stc
mov
sbb
or
in
push
xor
fmulp
xchg
xor
aas
shrl
add
add
push
push
pop
xor
and
daa
mov
add
mov
andb
inc
xor
into
pop
mov
and
lods
sub
push
xchg
mov
aam
data16
mov
cwtl
popa
push
lods
fbstp
lret
dec
data16
lods
inc
stc
idivl
dec
lret
int3
cmpsb
jo
mov
inc
cwtl
mov
ds
loop
mov
push
jnp
mov
xor
sbb
in
xchg
xor
icebp
sbb
xchg
push
cmp
jp
aaa
imul
ja
xor
push
sbb
daa
xor
aas
cs
jno
out
push
in
pop
xchg
std
out
jb
jo
pop
pop
fcos
xlat
sarb
aad
jmp
nop
call
sbbb
push
out
mov
int
lock
das
or
fs
and
inc
xchg
std
xor
sub
and
ret
dec
xor
cs
push
stos
and
fst
aas
js
rcl
mov
mov
push
cmp
mov
jno
pop
push
xchg
icebp
pop
lret
pop
jl
bound
mov
into
mov
adc
push
stc
jns
lcall
stc
cmp
fisttpll
mov
fisttpll
lds
cmc
fs
mov
adc
jbe
push
test
mov
pop
imul
xchg
sahf
mov
sub
fsubs
lock
pop
jge
mov
nop
dec
xor
aad
dec
mov
outsl
xchg
dec
addr16
sub
sti
orb
and
pop
lock
pop
mov
mov
jg
add
mov
inc
jmp
xchg
in
lret
push
ljmp
out
jg
push
lcall
dec
or
aam
add
test
sub
mov
mov
xchg
repnz
cli
xor
stos
test
push
out
hlt
and
insl
xchg
loope
push
jne
xchg
push
xchg
jns
pop
ljmp
pop
inc
mov
add
xor
faddl
cwtl
sub
xchg
movsb
ds
movsb
inc
pop
mul
arpl
jmp
adc
pop
adc
test
lret
mov
into
jne
repnz
dec
mov
pop
or
mov
loop
lahf
sti
and
xor
aam
jmp
mov
and
scas
push
rcr
ret
cltd
in
and
in
ret
lock
pop
xchg
fsubl
push
scas
andb
xor
test
adc
mov
jno
outsb
in
adc
lock
sub
sub
inc
add
add
adc
loope
cmc
cmp
shr
cld
movsb
repz
ljmp
push
adc
pop
cwtl
inc
push
cmp
xor
or
aad
add
mov
push
mov
cmpsb
shll
test
mov
push
addr16
out
push
push
enter
mov
pop
in
ljmp
xor
push
mov
jnp
adc
jmp
mov
ret
mov
sub
mov
testl
xchg
inc
loopne
nop
sub
sbb
push
enter
stc
test
rcrb
les
sbb
fcompl
push
push
not
or
sub
add
sub
aaa
lea
jle
sbb
inc
fimuls
bound
adc
scas
nop
mov
push
xchg
push
add
ljmp
cmpsl
and
xor
loopne
out
inc
loope
out
into
jae
and
adc
jo
adcb
dec
mov
mov
bound
jecxz
xor
xor
stos
popa
add
test
fldt
les
mov
dec
mov
das
cli
pop
je
repz
shrb
xor
sub
in
sbb
xor
scas
push
mov
push
sbb
mov
sbb
push
mov
xor
mov
sti
xchg
clc
mov
jg
jl
es
ljmp
cmpsb
pusha
sbb
ja
sbb
xchg
aad
jmp
test
pop
and
and
ficoms
mov
dec
sub
fnstenv
daa
fnstenv
xor
mov
dec
insl
sbb
js
jmp
sub
or
mov
insl
xor
sub
adc
or
xor
pop
sarb
fs
loope
pop
jno
test
adc
scas
xchg
dec
inc
cmc
popa
pop
cltd
scas
enter
fcoms
mov
insl
and
inc
movsl
jae
or
dec
push
out
sbb
or
push
les
inc
mov
or
pusha
out
jp
pop
cmpsb
jbe
push
sbb
adc
in
xor
sti
iret
stos
in
ljmp
sbb
or
cmp
in
fldl
cmp
and
sub
imul
dec
imulb
or
test
rorl
push
xchg
popl
test
ret
sbb
and
sar
fcomps
push
mov
outsb
pop
imul
popa
push
test
add
es
stc
divl
aad
mov
lcall
push
cmpsl
mov
mov
or
in
adc
insl
das
ret
push
rcll
mov
cmp
push
mov
pop
loop
mov
xor
fisubrl
mov
xchg
xchg
vmovdqu
lock
mov
popa
jmp
fadds
movsl
stc
cmp
inc
add
dec
orl
mov
sbb
popf
adc
jl
cmp
fmuls
sub
lret
loop
icebp
pop
mov
nop
push
insb
or
add
sub
cmpsl
mov
push
arpl
inc
jmp
dec
add
rolb
loopne
add
sub
and
lret
inc
mov
aad
dec
dec
or
sub
test
mov
jl
mov
shlb
rolb
sbb
ja
sub
xor
jno
testl
xchg
popl
cmp
push
add
cli
sub
rclb
incb
dec
push
mov
add
je
fiadds
mov
or
stc
cwtl
jbe
pop
test
dec
mov
gs
in
or
test
push
aas
xor
and
push
mov
mov
mov
cmc
push
movsb
popf
mov
test
sti
jmp
ss
sbb
mov
aad
mov
stc
stos
insb
repz
lock
mov
or
push
into
push
push
and
cmpsl
fisttps
cmp
push
pmullw
lcall
insl
imul
adc
add
pop
inc
xor
mov
dec
loopne
cmpb
hlt
jae
jo
pop
cmpsb
push
lock
mov
in
mov
xor
cmp
push
les
stos
cmp
stos
dec
cmp
or
clc
fimuls
jns
in
daa
lcall
xor
aad
add
stos
sbbb
int3
ds
add
test
inc
jl
inc
push
jne
sti
sbb
hlt
sbb
icebp
adcb
arpl
cli
cmp
enter
mov
push
and
test
je
xchg
mov
xchg
mov
xor
mov
adc
scas
ljmp
jb
xor
pusha
cmp
cmp
test
divl
sub
outsb
or
push
movsb
cmp
data16
push
sub
and
push
xor
imul
mov
jg
negb
push
ss
outsl
mov
aam
xor
add
xchg
cmp
inc
cmpsb
add
xlat
stos
cwtl
insl
data16
in
sbb
in
icebp
xor
add
inc
mov
xchg
xchg
jno
mov
mov
sub
push
xor
addb
mov
scas
pop
rcrl
mov
stc
push
sbb
test
mov
xor
cmpsb
xor
jp
sub
pushf
lahf
leave
mov
outsl
cmp
call
pop
sbb
xchg
std
ljmp
xchg
std
test
sbb
sub
cltd
and
inc
scas
sahf
push
xor
pop
rcrl
mov
xchg
and
pushf
mov
jns
push
and
out
sbb
lcall
lret
xor
sbb
mov
mov
mov
loopne
jl
dec
sub
aad
clc
dec
fwait
enter
xchg
outsl
scas
fidivs
out
xchg
mov
dec
call
and
xchg
fmul
jle
xchg
xchg
aaa
inc
std
pop
data16
xchg
mov
push
iret
sbb
out
leave
or
mov
mov
mov
ds
xchg
xchg
stos
test
rorb
shrl
call
gs
imul
add
and
lahf
cmp
xchg
jmp
xor
iret
int3
arpl
addb
aad
pop
or
test
adc
and
into
call
aaa
rolb
mov
sbb
push
xlat
pusha
cmp
lcall
popa
jecxz
stos
sarb
mov
sbb
mov
aas
stc
add
sub
or
mov
and
sub
push
cmc
fsubl
mov
dec
cmp
or
dec
sti
mov
sub
add
div
lock
ret
xor
rorl
aaa
push
in
jb
sahf
xchg
xor
jp
insb
int
dec
xor
rolb
aaa
call
mov
test
lea
mov
pop
and
pop
pop
adc
pusha
push
xor
and
mov
int3
out
cmp
outsb
xor
in
lret
add
cwtl
xor
sub
sub
std
fstpt
rcrl
pop
pushf
pushf
and
popa
mov
in
cmp
lea
loopne
ss
inc
mov
cli
xchg
or
inc
fidivs
es
int3
push
repnz
jnp
xchg
adc
jae
cmp
push
jbe
scas
dec
cmpsl
movl
sti
orl
dec
fstp
imul
or
jbe
xor
jmp
outsl
sahf
repz
nop
pusha
jno
dec
or
xchg
pop
inc
push
std
push
mov
enter
xchg
movsl
movsl
or
out
lret
and
bound
sarb
mov
adc
ljmp
or
das
stc
dec
xor
mov
ja
add
popf
inc
xchg
lahf
pop
cld
push
push
sub
cmp
pusha
push
fadds
cmc
jmp
pop
out
and
lret
pop
mov
mov
mov
movsb
sub
loopne
jae
ss
sbb
push
mov
hlt
notb
cld
pop
imull
fwait
lcall
into
int3
xchg
jge
popa
lret
aad
or
push
inc
lret
jl
push
pop
fxch
clc
insl
ficoml
ja
or
add
data16
leave
jecxz
leave
insb
out
int3
cs
cmp
push
movsb
or
loop
sub
shlb
arpl
loopew
fstl
clc
out
das
pop
lcall
ficoms
ss
int
in
xchg
pushf
push
fs
cmp
popa
pop
je
outsb
pop
mov
mov
ja
mov
in
xor
fimull
popf
cli
cmp
sahf
push
jmp
xchg
pusha
imul
xchg
sar
adc
add
dec
addr16
es
rcr
and
mov
pop
orl
out
mov
test
cmp
pop
mov
cmpsl
cmp
sbb
adcb
cmpsl
loopne
mov
scas
push
clc
xchg
pop
mov
jnp
jp
pop
jno
mov
push
or
out
jns
cs
push
fmull
push
inc
aad
sub
enter
adc
mov
and
sahf
xchg
add
mov
xor
mov
shl
add
add
div
int
inc
jne
add
adc
dec
mov
lahf
iret
adc
arpl
dec
ret
in
push
fisttpl
mov
movsb
int3
ljmp
jbe
sbb
xlat
and
cmp
xchg
divb
jmp
test
mov
sbbb
aam
in
xor
mov
mov
dec
inc
stc
push
insl
cli
insb
dec
fsubrs
enter
add
mov
loopne
iret
popf
or
xchg
ret
add
adc
ret
scas
cmp
push
or
sbb
add
push
xor
jae
mov
cmpsl
mov
inc
push
dec
js
add
cmp
dec
xchg
enter
into
lcall
xchg
inc
icebp
push
mov
fistpll
xchg
idivl
mov
xor
adc
cmp
mov
rcrl
jae
ffreep
ss
rorl
imul
in
rorl
gs
jbe
cmpsb
sahf
cmpsb
jl
mov
imul
repnz
sbb
insb
pop
dec
mov
jo
shl
mov
jmp
inc
jecxz
adcl
inc
mov
call
daa
sbb
fdivl
insl
outsb
pop
in
inc
test
and
cmc
iret
mov
push
dec
mov
in
xchg
push
add
loop
aas
pop
mov
test
in
clc
jo
mov
xchg
jle
inc
mov
les
std
or
push
adc
lea
pop
dec
dec
sub
xchg
jp
xchg
or
xchg
aas
cmp
insl
jns
insb
cmp
jp
sbbb
jp
insl
stos
lock
dec
arpl
js
push
pop
pop
mov
xor
fimull
push
or
mov
xor
push
sbb
int
jno
roll
insb
jle
frstor
out
push
fnstcw
icebp
xor
dec
sub
pushf
pop
pop
pop
je
pop
ljmp
or
mov
sub
cmp
jl
in
mov
icebp
inc
shll
ficoml
fists
arpl
loop
aaa
xchg
jne
shll
lods
push
mov
imul
dec
je
loope
ret
pop
cmp
mov
sbb
and
cmpsb
sub
test
stos
mov
sbb
inc
push
std
add
push
xor
jmp
jo
inc
push
lahf
mov
mov
inc
pop
lock
inc
sahf
insl
inc
xchg
adc
mov
xchg
jmp
dec
adc
lea
scas
in
sub
cwtl
or
cmp
popf
js
sub
xor
or
sbb
xor
fiadds
pop
fcoms
fwait
mov
out
test
aaa
and
loopne
sti
hlt
push
addb
inc
fwait
das
mov
and
sahf
mov
sbb
std
lret
out
sub
jbe
repnz
adc
mov
outsl
dec
jnp
lret
mov
dec
pushf
mov
fnstcw
push
je
xlat
out
xor
mov
lock
daa
icebp
dec
outsl
push
pop
out
cwtl
in
fsubs
xchg
ljmp
inc
aad
dec
dec
and
inc
jle
jle
rcrb
and
mov
or
or
aas
clc
jo
pop
cmpsb
jo
hlt
sub
imul
mov
and
out
repz
mov
les
xchg
iret
jno
xchg
int
scas
sbb
or
sbb
test
jno
xchg
fisubrl
sti
loope
and
sbb
pusha
fsubrp
adc
push
jnp
xlat
sub
scas
cmova
xchg
repnz
jbe
mov
sbb
push
ficoml
push
xor
mov
gs
mov
push
mov
jge
pop
jl
sti
cmp
rcrl
dec
dec
lea
pop
sub
dec
addr16
fidivl
std
adc
xor
or
xor
jns
xor
lret
les
jae
sub
out
mov
push
mov
adc
orl
xchg
loopne
xor
int
fsubrs
jne
mov
jo
loopne
mov
add
sub
xchg
adc
pop
cmpsb
add
pusha
mov
xchg
popa
xor
test
outsl
xchg
aaa
lcall
xchg
fisubrs
jne
or
roll
dec
cltd
push
push
push
ja
sahf
or
cmp
mov
xlat
out
movsl
add
push
aas
popf
inc
add
mov
mov
mov
push
sbb
mov
xchg
in
add
push
xorb
cmpsl
mov
sub
fistps
ficompl
pusha
mov
xchg
sbb
roll
adc
pop
adc
js
out
and
std
enter
loop
fildl
ret
push
mov
add
movb
icebp
jecxz
push
dec
mov
nop
les
jmp
lods
in
popa
fucomip
addr16
push
in
dec
sahf
scas
cmpsb
ds
cmc
cmp
ja
cwtl
adc
imul
add
fwait
push
mov
mov
jbe
mov
pusha
mov
cld
aam
enter
push
ljmp
mov
nop
dec
and
sbb
out
in
cwtl
or
dec
aas
sbb
mov
pop
lahf
pop
push
bound
adc
or
xchg
test
xchg
scas
jmp
int3
xchg
adc
pop
push
roll
sbb
rorl
mov
sbb
pop
jns
clc
std
fsubrs
les
lahf
adc
jecxz
stc
daa
jp
mov
lock
addr16
popl
adc
sbb
adc
shll
add
or
daa
test
xor
jecxz
addr16
repz
call
int
ds
stos
fnstenv
and
xchg
fisubrl
fldl
push
xchg
dec
jae
xor
or
push
mov
mov
in
mov
cld
gs
mov
xor
cltd
pusha
lods
xchg
push
insb
nop
sbbb
push
or
pusha
addb
iret
in
sahf
loope
es
cmp
ret
lret
push
pop
pop
fs
aaa
nop
and
dec
lret
cmp
inc
mov
js
inc
cmp
mov
das
cmp
loop
adc
adc
ret
sbb
mov
pop
fsubrs
loope
mov
jno
mov
adc
int
sbb
gs
mov
lret
jae
enter
adc
cli
data16
mov
cmp
enter
in
loopne
scas
push
in
jl
dec
lret
add
sti
mov
xor
in
pushf
rorb
ljmp
or
fmuls
and
std
data16
sbb
and
out
stos
iret
dec
in
ror
jb
icebp
fcmovbe
into
popa
cmp
adc
aaa
call
ret
out
sbb
adc
sub
cltd
and
ret
fdivrp
push
mov
shll
loop
add
adc
enter
push
pop
mov
mov
adc
jge
cmp
ja
lahf
lcall
jno
mov
pop
lock
sbb
pop
and
jp
mov
neg
cmp
movsl
pop
pusha
sbb
pop
movlps
xlat
mov
adc
ret
fsub
ljmp
dec
push
dec
loopne
mov
mov
ja
pop
decb
pop
fistpl
loopne
out
sub
jae
sub
push
cmp
and
lock
jbe
sbb
dec
pop
or
pop
rol
in
cmp
adc
out
sbb
int
inc
xchg
inc
stos
nop
push
and
ret
lcall
sti
scas
add
or
inc
movsl
xlat
pop
jns
push
test
cmpsb
bound
das
lahf
mov
dec
cli
and
mov
insb
dec
loopne
imul
ret
scas
jnp
clc
and
inc
js
in
cmpsb
pop
sarl
cltd
repz
mov
ret
push
xor
xchg
mov
daa
sarb
dec
push
outsb
fnsave
movsb
arpl
dec
cmp
hlt
lock
std
pop
fiadds
insb
fsubrl
mov
jl
inc
shrb
in
jecxz
inc
mov
xlat
add
add
mov
test
xor
mov
sahf
mov
mov
fnstsw
ss
xor
std
daa
sbb
push
xchg
lret
adcl
mov
pop
sub
jnp
cmp
jne
xchg
cld
and
pop
jae
bound
ffree
adc
xor
subb
cld
jns
pop
ja
mov
dec
mov
jb
push
mov
mov
rcrl
ss
movsl
test
rolb
popf
pop
sbb
mov
outsl
mov
rcll
inc
inc
pop
in
cmp
pop
mull
push
push
jae
mov
pushf
mov
and
and
add
fs
cmp
add
xchg
addl
and
enter
test
mov
shll
lahf
loop
dec
aam
inc
rcrl
dec
mov
sub
mov
pop
psrad
jns
into
pop
and
sub
inc
lods
mov
loop
ret
int3
les
xchg
in
pop
iret
xor
mov
pop
fisubrs
aad
mov
cmc
xor
lods
sahf
call
shlb
orb
loope
insb
push
add
mov
sub
xor
fldenv
jns
mov
enter
incb
ja
in
sub
or
inc
push
fadds
in
cmp
cltd
dec
xor
xor
adc
pop
adc
mov
xor
push
mov
in
insl
mov
shrb
jns
repnz
pop
mov
stc
inc
test
insb
ja
or
test
xchg
xchg
jg
sbbb
in
pushf
pop
inc
jbe
aam
mov
dec
sub
fcmovu
and
mov
xchg
icebp
jno
adc
mull
nopl
fcomps
cmp
sbb
movsb
loop
imul
dec
bound
xor
jecxz
cmp
xchg
stos
movsl
dec
fstpt
insb
push
xchg
and
add
int3
cmp
sub
mov
nop
cmp
shlb
or
test
jne
xor
fdivl
cwtl
test
pop
jp
sbb
xor
shl
xchg
xchg
mov
lock
xlat
leave
loope
outsl
pop
sub
stc
stos
std
les
std
setae
outsb
test
add
lock
pop
lret
mov
stos
nop
xchg
push
sub
dec
cwtl
fstl
push
jbe
ljmp
inc
xchg
orb
sbb
inc
shlb
fisubs
inc
jp
mov
mov
xlat
mov
cmpsl
and
fdiv
int3
nop
imulb
and
add
enter
push
push
mov
pop
dec
push
mov
pop
xor
std
jne
inc
mov
xor
shrb
jbe
ja
inc
daa
push
clc
mov
imul
dec
clc
mov
loop
addr16
add
xchg
xlat
pop
scas
mov
mov
mov
add
in
pop
jp
loope
jmp
mov
in
jae
fistps
test
loope
xorb
inc
test
adc
sub
test
xor
pop
ljmp
xchg
in
shl
xor
imul
push
stos
lea
mov
mov
in
mov
cmc
sbb
inc
inc
jle
int
imul
cli
aas
repnz
js
push
loop
mov
mov
mov
dec
or
inc
rorb
lret
xor
xchg
and
scas
add
int
jo
lea
imull
call
or
adc
sti
and
sub
andb
lock
lods
push
hlt
jno
cmp
adcl
dec
faddl
mov
inc
sbb
repnz
daa
push
jb
inc
out
mov
sbbl
add
xor
push
xchg
int3
or
jae
das
sbbb
jg
pop
insl
mov
sbb
push
js
aas
or
in
mov
pop
add
lea
pop
sahf
iret
or
and
xor
xchg
dec
ja
je
sahf
lcall
out
push
jp
or
dec
fcmovne
cmpsb
lcall
mov
icebp
ss
clc
and
or
scas
mov
sbb
les
imul
and
loope
and
inc
enter
test
loop
dec
sbb
bound
test
popa
sbb
push
cmp
lods
scas
insb
mov
cmp
lret
xor
stos
pusha
adc
je
orl
pop
inc
in
cmc
fst
imull
add
push
dec
jle
in
std
pop
sbb
lock
jle
test
jnp
pop
xorb
dec
pop
lahf
adc
cmp
lock
lret
sub
addr16
inc
pop
in
adc
lcall
je
xor
jns
test
loope
stc
pop
call
adc
movsl
in
or
sbb
sbb
sub
mov
cmp
pop
in
out
xorl
dec
xlat
mov
aaa
and
roll
imul
outsb
xchg
jmp
inc
add
div
fisubl
je
jp
xchg
pop
iret
dec
cmp
dec
addr16
mov
mov
outsl
mov
idiv
fdivp
aas
sahf
jecxz
and
or
and
mov
mov
pop
pop
push
lock
in
call
jg
lret
aaa
and
sbb
lods
lret
daa
sbb
cwtl
pop
dec
pop
fldt
ret
mov
mov
fildl
inc
mov
add
test
dec
pop
in
js
sub
call
mov
push
dec
pushl
pop
pop
or
lahf
mov
test
dec
imul
jmp
lock
data16
dec
mov
pop
in
and
les
shll
pop
test
hlt
lcall
ret
sbb
cltd
jnp
mov
jp
cmpsl
sub
stos
or
nop
mov
lea
mov
or
cwtl
int
sbb
mov
mov
int
ss
aam
repnz
mov
push
lods
insl
es
inc
sbb
incl
xchg
mov
scas
xchg
add
xor
xchg
shlb
cs
aaa
repz
dec
fyl2x
popa
xchg
loopne
xchg
imul
in
xchg
mov
xchg
push
popa
or
or
in
in
add
iret
mov
lods
in
push
test
sub
in
sub
repnz
or
mov
lods
cltd
pushf
fisttpll
add
loop
imul
adc
sti
and
out
aam
cmp
jmp
cmp
flds
lods
nop
cli
and
shl
mov
out
jmp
sub
inc
pop
jae
cltd
mov
xchg
repnz
jae
mov
push
push
jg
ljmp
push
mov
pop
ret
dec
jecxz
int3
in
outsl
movsb
jecxz
aas
loop,pn
and
movsb
out
cmp
std
sarl
mov
sbb
out
mov
push
xchg
cmp
mov
into
fildll
pop
cmc
xchg
movsb
ret
fnstenv
adc
sahf
rolb
adc
push
or
pop
push
inc
enter
xchg
xor
inc
arpl
out
ret
or
out
in
jne
mov
data16
dec
aad
push
pop
shrl
jl
aaa
sbb
icebp
shlb
push
mov
xor
inc
jecxz
mov
ss
xchg
xor
adc
testb
and
sub
mov
xchg
inc
or
lods
jns
mov
and
xor
shl
dec
mov
mov
xor
pop
icebp
repnz
xor
jp
ret
incl
xorb
loop
das
pop
pop
mov
mov
push
xor
or
add
and
mov
lret
dec
leave
stos
xchg
lcall
sub
cli
mov
aam
repz
popf
inc
out
in
sub
scas
mov
inc
leave
cmc
mov
mov
cwtl
addr16
aas
mov
mov
repz
adc
add
pop
inc
inc
and
je
jmp
je
and
fucom
xor
sbb
ljmp
add
outsl
cmp
shrb
xchg
pop
jo
pop
lock
jmp
sub
pop
in
pop
andl
mov
test
mov
fstpl
xchg
es
push
inc
pop
int3
jo
mov
dec
insl
and
movsb
lcall
mov
arpl
pop
repnz
in
stc
clc
add
imul
int
mov
or
xor
mov
fcomps
enter
xor
cmp
mov
lret
inc
xchg
stc
push
roll
mov
adc
sbb
scas
insl
lods
cltd
mov
mov
xchg
mov
dec
cs
xchg
fisubrs
aaa
into
cmp
mov
sub
mov
mov
rol
add
popf
adcb
in
clc
sbb
lret
adc
fbstp
cmpsb
mov
test
rorl
pop
or
jecxz
mov
xor
cltd
xlat
ljmp
stc
cmp
jbe
aad
inc
into
orb
cmp
popl
lret
out
cmp
pushf
xor
inc
dec
fcoml
ljmp
movsl
xchg
ljmp
outsl
mov
test
loope
add
dec
cmp
pusha
outsl
xor
inc
scas
add
or
xchg
pop
dec
push
loopne
adc
mov
addr16
rcll
jle
xor
test
dec
sarb
sub
mov
mov
test
out
xchg
adc
insb
jo
jl
mov
push
xor
cmpsb
inc
nop
ret
xor
sbb
loop
sldt
out
cmpsl
and
fmuls
jno
fsubs
ss
mov
mov
cltd
int
sbb
adc
enter
push
or
shll
lcall
sarb
mov
movb
int3
jp
mov
stc
outsb
xchg
inc
xor
add
push
sub
aas
call
xor
inc
out
out
add
add
dec
stos
or
aas
add
outsl
pop
sarb
fisttpll
enter
dec
cmc
jp
iret
mov
out
in
jp
xor
sti
in
insl
or
cwtl
sub
push
dec
jp
and
mov
or
stos
push
inc
test
mov
or
out
mov
xlat
push
pusha
and
jl
and
xor
xchg
jns
jge
sub
push
bound
outsb
and
mov
aad
mov
push
cwtl
and
ljmp
sub
hlt
pushl
jne
jecxz
jl
minps
cmp
pop
pop
adc
sbb
xlat
jl
lods
pop
pop
adc
repz
jns
cld
dec
mov
fucomi
mov
jmp
in
outsl
icebp
mov
lret
push
cmp
mov
out
test
mov
sbb
clc
imul
orb
pushf
ds
dec
pop
jbe
clc
icebp
inc
push
loop
pushf
push
fwait
cmp
and
outsb
addr16
pop
mov
out
jo
stos
add
xor
pop
xchg
subb
cli
fnstcw
xchg
xchg
int
jecxz
das
cmpsb
inc
adc
lods
lea
add
dec
popa
fs
xchg
fisubrl
sbb
lea
pop
cli
or
and
lods
add
jp
loope
inc
aaa
push
jb
mov
cwtl
repz
lahf
jge
cmc
ds
inc
xor
and
xchg
push
inc
jle
cli
mov
and
rcrb
sub
xchg
mov
outsb
xchg
pop
dec
cmpb
leave
xchg
cmp
hlt
or
sub
pop
mov
mov
pop
mov
frstor
movsl
sbb
lcall
or
aam
adc
mov
adc
jl
mov
dec
enter
mov
and
and
jg
xlat
lods
push
add
fwait
loop
fidivrl
mov
rcrb
push
push
push
add
jnp
jno
loop
xor
leave
dec
xor
mov
mov
idiv
dec
and
push
leave
pop
mov
into
lcall
js
test
fcmove
imul
mov
mov
and
adc
in
inc
sarb
in
call
sbb
out
outsb
xlat
cmp
rcrb
loopne
push
out
add
cli
sahf
test
mov
rol
xchg
mov
in
push
jno
enter
dec
in
inc
popf
push
inc
mov
loop
adc
add
nop
adc
fs
jmp
gs
pop
scas
add
cmp
cli
mov
out
xor
sbb
sbb
jl
jno
pop
lcall
adc
cs
xchg
sarb
push
pop
jmp
imul
xchg
leave
int
repz
aam
mov
cmp
into
inc
ret
stc
sbb
push
xor
pop
mov
jmp
dec
fs
jmp
dec
xchg
inc
in
mov
or
mov
repnz
jbe
pop
dec
add
mov
xor
dec
cmp
repnz
sbb
add
shr
push
sti
and
lret
push
or
jecxz
lahf
daa
cmp
jp
push
and
xchg
xchg
gs
mov
push
add
repz
out
sub
xor
push
jle
dec
aaa
xorb
mov
cmp
push
test
fiaddl
jp
cmp
pop
mov
scas
cmp
bound
insl
icebp
ja
push
pop
aaa
loop
into
push
or
mov
aaa
sub
pop
shr
mov
cmp
push
cltd
xchg
clc
mov
mov
adc
add
cmp
xchg
cld
jns
loope
ror
cmp
mov
or
xor
js
hlt
sbb
add
scas
mov
adc
shrb
adc
cmp
sub
mov
push
sti
pop
dec
loope
sbb
bound
cmp
mov
add
sarb
mov
js
fisttpl
mov
popf
in
cmp
ret
repz
xlat
dec
adc
cmp
sub
xor
xor
mov
mov
js
frstor
leave
frstor
pushf
mov
sub
pusha
in
lahf
shr
std
lret
inc
xor
iret
inc
fs
fcomps
dec
sbb
inc
fimuls
stc
push
hlt
repnz
call
mov
test
mov
push
dec
push
pushf
jle
iret
add
loopne
test
bound
jae
stos
sbb
cwtl
inc
pop
inc
pop
jae
cmp
sbb
lahf
push
inc
xchg
cmp
fidivrl
loop
lret
jo
mov
push
sbbb
stos
xorl
test
das
and
xor
lods
rclb
adc
ret
jno
repnz
add
ljmp
lods
out
push
push
arpl
mov
jb
xor
pop
ret
ret
sbb
movsb
into
push
mov
shll
cmp
ja
jno
mov
les
push
push
retw
iret
into
dec
adc
out
out
iret
sbb
mov
push
xor
mov
xor
xchg
or
xor
add
aam
xchg
jns
scas
aad
sub
icebp
subl
pusha
aaa
xchg
lods
int3
lods
mov
xchg
mov
sub
int3
bnd
sub
jecxz
js
mov
sti
cmp
adc
mov
inc
dec
insl
inc
std
and
dec
jns
lock
daa
mov
mov
out
jle
sbb
jl
dec
cmpsb
push
push
cmp
mov
fldt
mov
in
push
out
pop
aas
popf
xchg
mov
and
rcrl
push
push
or
mov
mov
addr16
arpl
fs
mov
push
xor
push
test
rclb
jae
iret
mov
fwait
in
jp
jl
daa
pop
out
push
inc
mov
push
ljmp
inc
clc
mov
dec
sub
mov
fwait
jge
pop
sub
lea
decl
or
sub
cmp
test
ja
vxorps
cs
into
ja
movsl
mov
mov
icebp
out
daa
xor
pop
sahf
rorb
lret
in
leave
mov
into
push
push
and
add
stos
lock
in
int3
daa
xchg
mov
es
cmp
mov
bound
into
jmp
xor
xchg
push
sbb
repz
mov
test
out
inc
xlat
loopne
cli
xchg
mov
xchg
or
pop
mov
xlat
leave
push
jno
jge
fwait
push
jns
xor
xchg
mov
add
jl
out
int
push
push
inc
rorb
and
or
ret
ljmp
mov
fwait
push
cmp
adc
addr16
fsub
or
or
and
call
push
mov
ss
pop
les
xor
loope
lahf
xchg
push
gs
lret
adc
inc
sahf
push
imul
mov
jg
jae
lret
sub
push
into
dec
push
sub
mov
mov
fidivrl
dec
and
clc
jne
cmp
mov
jl
dec
aad
jnp
lea
xchg
out
jg
sbb
repnz
xchg
add
jo
pop
xor
mov
xor
cwtl
and
jp
testl
enter
xchg
mov
inc
cmp
enter
xchg
and
fsub
push
lahf
xor
daa
clc
lahf
popf
in
add
aaa
outsb
sbb
cltd
pop
inc
jno
rcl
cmp
mov
insl
jmp
mov
xchg
outsb
jg
in
lods
or
push
sub
xchg
adc
out
mov
sahf
aad
push
pop
xchg
out
fs
cmc
xchg
sub
pop
push
add
iret
sbb
xor
adc
mov
psubw
into
cltd
cmp
xlat
test
movsb
les
mov
in
call
push
adc
lret
scas
xchg
or
fs
mov
sbb
mov
out
repnz
std
pop
enter
cs
test
arpl
int
mov
xchg
int3
outsl
dec
repz
or
and
cs
and
or
out
cwtl
pop
leave
sub
sbb
insb
jb
shll
mov
popf
lds
xor
fisubl
scas
push
mov
fsubrs
sub
daa
mov
inc
cmp
mov
jmp
stos
lods
cmpsl
fcoml
daa
shl
in
sbb
stos
nop
mov
pop
xor
mov
data16
cmp
pop
jne
pop
stc
test
jae
nop
sbb
xor
rolb
cwtl
jns
int3
xchg
sarl
add
push
jl
mov
xor
mov
inc
divl
sbb
scas
cmpsl
xchg
cltd
pop
or
insl
cli
enter
xchg
add
rol
lods
sahf
add
sbb
jne
dec
and
pop
mov
lds
out
pop
mov
inc
xchg
lods
popf
xchg
add
sbb
popa
sub
dec
ss
repnz
inc
sahf
lods
ds
push
xchg
dec
xchg
stos
xchg
sub
shr
dec
dec
xchg
out
loope
xor
leave
sub
rcrl
add
rclb
add
test
lcall
in
fcmovb
or
ss
movsb
and
icebp
les
lea
rorb
mov
sub
fdivl
in
mov
jmp
out
mov
int3
sbb
mov
sahf
mov
lods
call
out
jge
out
xchg
mov
stc
cmp
sbb
cltd
mov
sub
and
push
mov
xchg
fcmovne
xor
jl
xchg
jae,pt
popf
cmp
or
fbstp
aam
aam
stos
jecxz
mov
jb
int
outsb
stos
adc
mov
shll
inc
in
and
ret
cwtl
push
mov
fnstenv
sub
inc
popf
je
dec
imul
cs
add
rorb
mov
and
sub
and
es
in
leave
lds
insl
mov
stos
js
xchg
stos
imul
fimuls
xchg
scas
push
push
push
ret
cld
cli
lret
or
or
decb
or
fistpll
lret
xchg
xchg
sbb
and
dec
ret
dec
adc
and
dec
dec
js
fnstsw
fs
push
pushf
push
data16
mov
push
inc
jp
mov
dec
mov
mov
ret
sahf
lea
repz
and
xor
or
cmpsb
loop
mov
pop
sub
cli
and
shr
rcr
mov
sbb
lret
pop
inc
push
lods
outsb
fs
sub
pop
sbb
inc
lahf
adcb
fs
and
and
movsb
iret
mov
lods
and
jo
in
ss
sbb
dec
or
lahf
or
stos
fstl
push
or
adc
xchg
scas
xor
aam
dec
fisubrs
arpl
test
arpl
pop
sbb
inc
push
mov
daa
data16
xor
and
cld
loop
adc
in
add
adc
add
ljmp
push
push
clc
sub
mov
faddl
xchg
je
rclb
adc
int3
mov
mov
dec
xchg
fwait
lods
mov
enter
sbb
jp
daa
and
add
dec
xor
mov
cli
jl
arpl
mov
out
lahf
faddl
fisttpl
lods
mov
out
pop
fildll
stc
aas
andl
and
add
and
and
push
pop
rolb
dec
cld
in
and
out
pop
or
cmp
movsl
cmp
cmp
or
push
cmp
fildll
fstpl
out
ja
rolb
push
out
xchg
es
sarb
aad
lahf
fsubl
in
aas
rorb
rcrb
sub
mov
mov
sub
call
inc
shll
mov
in
pmaxsw
lret
jns
lcall
bound
dec
pop
leave
sbbb
test
aas
testb
jmp
inc
sbb
ljmp
sub
cmpsb
rcrb
mov
mov
jns
mov
ffree
loope
fimull
ret
jb
outsb
and
shl
pushw
pop
hlt
out
and
aaa
pop
xchg
addr16
pop
cld
cmc
dec
add
and
jo
push
or
hlt
out
into
inc
test
leave
push
lcall
inc
out
push
cmpl
nop
lret
mov
push
mov
xor
js
add
or
rcll
ljmp
mov
cmp
mov
and
jbe
mov
sub
or
push
adc
mov
int
popa
scas
inc
cmpsb
add
aas
in
pop
fwait
es
adc
sub
xchg
test
dec
aam
enter
in
add
mov
inc
aaa
idiv
outsl
xor
sub
cltd
jae
pop
mov
rorl
mov
or
mov
sbbb
dec
fnstenv
inc
out
pop
and
cmc
xchg
jl
loopne
mov
stos
xlat
jo
cmp
ja
movsb
fisubrs
cmp
int
sbb
aad
xchg
pushf
jne
sub
xor
andb
neg
test
mov
cmpsb
sbb
icebp
fldcw
inc
mov
repnz
cld
adc
faddl
fs
adc
mov
push
push
fwait
adc
push
lods
and
pop
mov
fwait
lret
pushf
cmc
push
jns
fldenv
xchg
jbe
addr16
inc
pop
in
je
cmc
dec
pop
insl
out
arpl
cmp
pop
mov
mov
jne
lock
push
stos
stos
lea
ds
lock
test
inc
add
adc
rorb
pop
adc
jle
pop
popf
sub
sahf
dec
or
jns
xor
ljmp
pop
ret
push
dec
jmp
or
imul
hlt
mov
rcr
xor
sub
and
repnz
sbb
xchg
push
sbb
mov
notl
push
out
jo
fistps
sub
jae
jmp
push
sub
mov
add
sbb
cmp
pop
rorl
dec
dec
or
push
inc
sub
adc
push
arpl
cmp
rclb
adc
sbb
shll
cmpsb
sarl
ss
jl
je
insb
jbe
paddd
repz
pop
and
sub
add
inc
outsb
pop
sbb
hlt
cmp
xchg
shlb
pop
add
cmpb
popa
add
push
cmpsb
pushf
adcl
adc
cld
mov
mov
test
or
dec
ror
sbb
xchg
sbb
in
std
jg
frstor
add
adc
mov
mov
inc
or
pop
pop
mov
adc
mov
pop
ficompl
cmp
adc
mov
mov
mov
aaa
cld
cld
fsubrp
xchg
fnsave
scas
addl
setae
push
xor
notl
xchg
jbe
and
sbb
out
adc
out
sbbb
lds
and
or
adc
daa
scas
insb
ljmp
icebp
ja
mov
dec
scas
jle
mov
xor
pop
test
adc
stos
addr16
dec
adc
add
mov
mov
aam
inc
aaa
xor
pop
fcmovnb
sbb
loop
add
test
loope
nop
push
jne
mov
dec
popa
stos
outsl
xchg
sbb
das
call
les
pushf
les
int3
sub
sub
std
aad
iret
add
add
dec
shl
ret
xchg
push
pop
xor
ljmp
rcll
mov
mov
dec
pop
je
push
aad
mov
lret
add
jb
mov
loop
aad
jge
inc
add
into
lods
jl
dec
addl
jecxz
jo
int3
jl
mov
mov
shll
xor
jnp
fldenv
cli
pop
sub
xchg
sbb
add
jg
sub
imul
push
fisubrs
scas
sub
xchg
xor
mov
lods
lods
and
cmp
cmpsb
sbb
imul
repnz
scas
cltd
cli
loope
pop
adc
sbb
mov
xorb
int3
mov
enter
into
rclb
add
jge
mov
mov
lcall
sbb
push
xchg
xchg
fwait
inc
add
or
bnd
je
push
sarb
repnz
adc
push
out
adc
sarb
nop
dec
sbb
pop
sbb
xor
cmpl
mov
dec
inc
mov
lock
jg
adc
mov
int
or
mov
push
mov
mov
scas
jne
psubusb
sarb
fs
xchg
icebp
pop
imull
subl
ja
mov
aam
push
inc
mov
mov
je
out
lcall
dec
push
mov
mov
xor
rol
inc
je
adc
stos
lods
add
lods
sub
int3
mov
test
out
leave
shlb
fwait
shrb
lret
aam
ret
jmp
sbb
pop
pop
lret
test
jne
fnstcw
pop
push
ljmp
and
ret
inc
cmp
mov
add
and
out
jno
xchg
xchg
or
and
mov
inc
cmp
out
je
sub
mov
mov
add
clc
leave
and
popf
mov
mov
mov
jp
mov
iret
aad
push
add
jmp
mov
int3
jecxz
gs
cs
jae
adc
iret
pop
jnp
sbb
ret
dec
test
mov
jbe
std
xor
mov
xchg
mov
or
cs
ficoms
ss
cmp
loop
loop
push
std
xchg
mov
xor
and
icebp
fdivl
mov
jns
pop
setb
mov
add
mov
cld
inc
pop
mov
addl
pop
inc
repz
shll
or
ja
sar
bound
in
mov
out
cmp
pop
hlt
stos
bound
xor
int3
pop
and
inc
lods
push
pop
xor
pop
les
pusha
pop
jne
lods
sarb
in
js
pop
pop
add
or
movsb
add
lret
cltd
rclb
decb
xchg
mov
pop
or
cli
lahf
std
aad
rcrl
pop
in
scas
cmp
loop
ret
xorb
mov
or
mov
mov
jl
out
mov
lds
mov
pop
std
fldcw
ret
xchg
sbbl
fidivrl
jg
lahf
adc
dec
pop
and
adc
lahf
xor
pop
sti
stc
ljmp
fld
stos
jmp
or
dec
fadds
and
jne
fwait
jmp
jp
inc
test
popa
dec
icebp
iret
test
test
pushf
pop
addr16
dec
fstp
movsl
cmp
out
test
jnp
inc
fwait
cs
mov
shrl
or
test
push
sub
dec
incl
pop
das
jmp
scas
sub
add
out
sub
mov
cwtl
ljmp
gs
sub
and
push
sbb
push
cld
icebp
and
sub
pop
fidivs
sub
leave
jg
mov
in
outsb
push
dec
imul
inc
mov
mov
xor
jp
jle
mov
shll
cmp
pop
jl
dec
and
jmp
test
jb
inc
lods
ss
ja
sub
jns
movsb
clc
mov
mov
ja
cmp
or
scas
and
andl
xchg
xor
rorl
sahf
loope
loopne
pop
add
xchg
ret
jl
xchg
out
push
add
enter
mov
pop
and
lret
mov
sbbl
and
in
daa
shll
and
ud2
into
scas
hlt
xor
mov
mov
shr
sbb
push
and
push
and
cwtl
aad
jne
cmp
les
ficoms
lds
pushf
mov
push
bound
pop
pop
add
hlt
add
fidivs
dec
sti
inc
add
fdivl
sbb
jecxz
pop
push
out
scas
dec
fs
xor
jl
xchg
mov
cld
push
push
jne
mov
cmp
adc
jle
scas
pop
xchg
stc
dec
cmp
push
mov
inc
ret
rcrl
outsb
dec
lods
sub
inc
or
testb
push
pop
jle
jge
out
xor
cmp
stos
aas
out
add
mov
flds
xchg
rcll
clc
jp
inc
and
ja
cmp
aaa
pop
popa
outsb
xor
push
shll
loop
daa
adc
stos
and
or
jg
out
adcl
insb
test
dec
xchg
pusha
leave
fs
les
out
dec
outsl
mov
mov
aas
mov
ljmp
adc
cmp
mov
into
dec
notl
push
or
gs
inc
sub
or
inc
pusha
or
dec
lea
movsl
cmpsl
inc
shlb
xlat
aad
aas
mov
sbb
inc
sbb
shl
inc
push
adc
xadd
sahf
adc
push
test
pop
pusha
xor
inc
inc
into
ljmp
pop
cmp
fistps
inc
mov
test
add
enter
mov
pusha
int
rclb
fidivl
data16
pop
dec
insb
lret
cli
xor
loopne
dec
jle
sub
dec
fisttps
adc
test
adc
mov
inc
fsubrl
pop
movsb
inc
std
les
nop
sti
std
inc
cmp
testb
gs
jg
hlt
and
sub
mov
pop
outsl
insl
inc
xchg
repz
dec
int3
add
mov
pop
and
mov
xor
jno
mov
xchg
sbbb
inc
lret
adc
inc
fldcw
push
sbb
xchg
cld
mov
es
fiadds
bound
pop
push
cmp
shll
sbb
mov
rcrb
ljmp
ret
mov
scas
inc
inc
fcomps
add
cmp
pop
ss
inc
sti
add
out
mov
fldl
push
push
or
mov
ljmp
lock
call
mov
gs
inc
xchg
mov
pop
pushf
push
mov
mov
pop
std
ljmp
mov
mov
add
mov
das
arpl
adc
jnp
sbb
xor
sub
fwait
incw
pop
add
cmc
add
rcr
test
icebp
sub
icebp
daa
sti
loope
out
movsl
repnz
pop
cmpsb
and
mov
jb
or
aad
andl
or
xchg
test
xchg
dec
sbb
dec
test
push
sub
fstps
or
xor
repnz
mov
in
imul
shrl
cmp
addr16
sub
push
out
subl
cld
shrb
or
adc
frstor
and
xchg
mov
push
popf
dec
in
mov
push
inc
in
inc
pop
imul
push
inc
jmp
push
int
les
loop
shll
aas
fldl
test
push
mov
or
mov
inc
shll
fwait
inc
fistps
add
push
xor
jbe
push
push
dec
xor
imul
push
mov
mov
sbb
movsl
cmp
mov
in
push
mov
mov
lahf
mov
lahf
sbb
jmp
adc
mov
jmp
mov
dec
xor
or
int
jo
mov
repz
mov
xchg
idivb
jns
nop
repz
in
sbb
or
daa
sub
add
loope
je
aam
lds
dec
push
mov
sbb
out
les
dec
jnp
xchg
fcompl
rcll
sahf
mov
jl
mov
push
mov
fmuls
aam
and
pop
imul
shll
mov
jecxz
pop
js
jnp
or
ds
dec
mov
add
sbb
pop
sub
repz
call
cmpsb
stc
shrl
jle
fisttpll
shlb
pop
imul
and
cmovo
fs
jae
std
add
inc
xchg
cmpsb
and
push
xchg
clc
dec
scas
rcrb
push
scas
movsb
and
mov
adc
shrl
stos
sbb
call
jnp
arpl
sub
mov
sbb
dec
shrl
mov
cltd
jnp
xchg
adc
mov
push
icebp
imul
mov
jmp
int
int
or
pop
xor
enter
int
fsubp
add
int
call
out
popf
or
jae
lock
add
scas
cli
arpl
scas
ja
mov
lret
dec
sbb
mov
mov
nop
enter
dec
sti
lret
push
push
test
sub
jae
ficoms
xor
clc
sbb
inc
rcrb
hlt
dec
pop
mov
pop
xlat
aam
mov
insb
add
mov
adc
in
mov
lock
pop
or
ret
inc
imul
mov
pop
cmpsl
movsb
int
les
push
call
dec
mov
dec
fildll
dec
scas
idivl
nop
movsl
std
add
js
outsb
jbe
icebp
inc
outsl
loopne
and
pop
nop
rorb
insb
xchg
cmp
jb
lcall
jmp
sbb
push
in
jp
clc
xor
movsb
sbb
mov
gs
cwtl
fistl
xchg
lods
or
ficoms
mov
insb
pop
inc
add
lret
in
fistl
in
dec
jle
fs
cmc
mov
pushf
xor
lds
push
jae
rolb
push
jecxz
adc
adc
jae
test
pop
jp
mov
shll
xchg
push
or
gs
scas
and
shld
adc
in
inc
xor
mov
jmp
ret
xchg
jle,pn
cmp
xchg
test
out
cwtl
imul
xchg
xlat
mov
hlt
mov
cld
mov
sti
jb
movsl
mov
jg
cmp
mov
test
mov
in
push
dec
je
mov
pop
mov
jmp
test
mov
sub
lods
sub
and
or
in
jecxz
insb
shlb
lahf
repz
push
mov
cmc
xor
fldenv
mov
mov
in
and
jge
aaa
mov
cwtl
jne
dec
pop
cs
sbb
jmp
pop
mov
arpl
push
adc
adc
push
pop
sbb
subps
jge
arpl
add
mov
arpl
mov
fdivrl
scas
aad
dec
mov
inc
not
mov
xorl
jmp
inc
push
mov
aaa
test
bound
imulb
mov
pop
div
js
xor
test
add
cs
mov
and
aam
pop
addr16
rcll
test
xchg
cwtl
or
and
xchg
sbb
lods
in
rolb
push
fdivrl
mov
lret
jnp
fnstenv
sub
dec
add
repz
pop
push
std
addl
add
push
cli
jae
push
stos
pop
and
add
xchg
addr16
sarb
cmp
cmpsl
cmp
mov
or
and
mov
into
hlt
cmc
jle
ret
xchg
insb
in
sub
sbb
push
sub
xor
testl
je
cmpsb
ret
mov
roll
leave
cs
sbb
push
pop
inc
fidivrs
in
or
mov
push
mov
rcl
or
jge
insb
inc
mov
data16
push
and
arpl
adc
dec
test
mov
jae
aam
into
aam
or
adc
or
cmpb
in
pop
or
bound
ret
lds
push
in
mov
loopne
test
jno
out
push
mulb
sbb
push
sahf
push
add
pop
out
dec
add
inc
inc
mov
fidivrl
push
mov
sbb
std
bound
dec
ror
mov
cltd
mov
icebp
arpl
add
cs
js
mov
lret
insb
pop
adc
push
std
sub
shlb
xchg
ds
aad
push
inc
xchg
popf
dec
loop
add
add
adc
mov
mov
shlb
fwait
insb
and
add
sub
adc
xor
movsl
inc
lret
fimull
call
pop
out
int3
call
add
mov
imulb
jp
data16
mov
cmp
sarl
sbb
cli
cmp
fistpll
rcrl
sbb
mov
pop
add
ds
aad
mov
loope
hlt
jmp
enter
inc
jns
nop
xor
cmp
adc
fmuls
into
loope
inc
roll
fistl
push
xchg
add
adc
jecxz
pop
mov
inc
push
inc
call
cmp
xchg
pop
js
sub
scas
cmp
dec
xchg
and
jmp
inc
std
lods
ret
mov
cmp
push
je
stc
inc
cmp
sub
nop
cltd
xor
adc
jg
sbb
sbbb
ret
sub
lods
fwait
add
ljmp
xlat
insl
mov
mov
or
test
mov
push
mov
aam
jl
mov
sub
add
repnz
or
stos
rcrb
in
mov
adc
mov
mov
aas
push
xchg
test
mov
adc
testb
rorl
xchg
sbb
das
sub
popa
or
movsb
cmpsl
cwtl
sub
and
rorl
hlt
jge
adc
cmp
sbb
mov
movl
push
xchg
in
sbbl
icebp
xchg
fs
stos
fdivrs
mov
pusha
sbb
test
das
sbbl
mov
roll
add
xor
imul
hlt
sub
hlt
lock
lcall
mov
pop
aam
xchg
ret
ret
mov
test
loopne
sub
int3
dec
jae
add
mov
dec
adc
jl
adc
or
sub
mov
xchg
iret
and
scas
cld
push
out
call
rorb
xchg
dec
xchg
sbb
add
cli
movsl
faddl
sahf
xchg
xor
cmpb
add
or
jae
xor
adc
and
or
in
cmc
cmp
sbb
pop
std
mov
aam
xchg
adc
call
mov
mov
cmc
aas
rclb
pop
test
and
sbb
movsb
dec
sub
cmp
data16
mov
dec
lcall
or
sbb
pop
adc
out
rclb
rorb
cli
mov
testl
pop
inc
nop
das
mov
adc
jnp
cmpsb
lock
loop
mov
pop
rolb
jno
pop
cmp
les
sub
or
ljmp
cmp
scas
daa
mov
sbb
addr16
dec
lret
sbb
ljmp
push
jae
push
mov
jp
jl
negb
adc
loop
push
mov
loope
jne
insl
sub
xchg
shlb
push
stos
jle
stos
adc
dec
or
outsl
inc
adc
mov
dec
mov
fstps
cmp
jecxz
jb
inc
pop
xchg
sub
popf
into
mov
cwtl
dec
into
pushf
popf
dec
sbb
and
or
adc
or
out
ret
cmc
mov
pop
sahf
adc
pop
aad
dec
enter
cltd
mov
and
outsb
or
filds
mov
jg
jge
out
je
push
icebp
pop
push
jmp
dec
inc
movsl
es
in
mov
bound
rorb
andb
test
mov
outsl
mov
mov
jge
sti
mov
nop
add
inc
les
jne
push
adc
ret
cs
pop
dec
notb
out
jns
mov
or
loopne
mov
xchg
adc
daa
dec
push
cmp
add
push
aaa
lods
jecxz
cmp
mov
mov
cmp
xor
imul
mov
inc
insb
push
inc
sub
mov
add
dec
push
xchg
fnstenv
addr16
xchg
rcrl
cmpsl
inc
or
pop
mov
jge
sub
out
in
mov
inc
xchg
push
inc
out
jmp
pop
inc
fbstp
out
ja
and
mov
cwtl
int3
sbb
sti
inc
pop
jnp
ret
mov
ret
stos
out
pop
fdivrl
jb
mov
mov
mov
inc
xchg
hlt
out
shl
sbb
mov
mov
xlat
pop
out
or
cmp
sbb
mov
mov
adc
mov
xor
and
sbb
test
fildl
test
repz
jecxz
mov
add
ss
sbb
jbe
lret
lods
mov
fmull
in
outsb
pop
int
push
adc
out
stos
mov
and
lahf
pop
insl
mov
inc
mov
xchg
rcr
out
dec
or
sahf
stc
addl
sbb
fimull
xchg
add
mov
int3
fsubs
enter
push
test
stos
roll
lods
mov
fneni(8087
push
add
sti
mov
test
and
sbb
mov
cltd
mov
lret
jg
orb
cld
jb
inc
pop
ja
push
aam
out
mov
mov
pop
clc
cmp
movsb
or
fwait
cmpsb
lods
mov
jb
pop
bound
incl
cmp
clc
fwait
mov
push
mov
adc
jle
cmp
mov
ljmp
or
icebp
dec
aad
lret
cmpb
xor
sub
mov
ss
push
negl
scas
cltd
and
fsubrp
addl
mov
xor
mov
pop
xor
lock
mov
icebp
je
lret
out
idivb
mov
sub
xchg
xor
lcall
push
aas
ds
mov
jle
mov
aaa
pop
cmp
dec
addr16
aas
out
xchg
push
sti
xchg
daa
hlt
mov
loopne
je
shl
arpl
pop
xchg
xchg
sub
js
mov
aad
fs
xor
out
ljmp
jl
test
adc
movd
jl
int3
in
or
mov
pop
cs
inc
mov
lahf
or
xchg
mov
sub
mov
xchg
rolb
add
mov
mov
sbb
loopne
jbe
jo
sub
ficoms
lea
popa
add
and
add
push
rolb
cmp
aaa
add
xlat
les
pop
ds
dec
sbb
insb
stos
ds
shll
inc
enter
aaa
in
das
cltd
dec
rorb
fcoml
xor
adc
pop
jo
xchg
mov
fistpll
aad
push
mov
push
mov
mov
jmp
lret
sub
pop
push
orb
cmp
and
mulb
add
mov
push
cmp
sbb
dec
sbb
bswap
pusha
cmpsl
cmpsl
pushf
jbe
in
sti
lea
xor
test
xor
jle
xchg
ljmp
pop
or
addr16
xchg
leave
xor
mov
sub
push
and
sub
aaa
push
sub
jl
imul
mov
flds
pop
or
jmp
and
lods
pop
enter
mov
or
mov
loope
push
push
js
in
out
xchg
cmp
jnp
orl
pop
ret
cmp
mov
popf
and
mov
sarb
roll
aas
and
ret
movsl
sahf
jmp
mov
lods
push
sub
and
jge
adc
push
out
insb
pop
shrl
pop
mov
pop
sti
mov
pop
mov
std
inc
test
arpl
pop
and
xchg
mov
lret
pop
dec
push
lcall
jno
push
rorb
pop
cs
sub
insb
iret
repz
fistps
adc
filds
and
cld
cmp
inc
or
out
call
stos
sarb
loop
sti
mov
les
jnp
popa
jle
mov
sbb
fisubl
jno
push
push
stc
and
dec
mov
cmpsb
aad
inc
pushf
aas
ds
aad
or
sbb
dec
out
pop
jne
pop
lock
ljmp
sbb
mov
dec
xor
aam
pop
mov
and
jge
or
cs
arpl
js
inc
andb
cs
mov
scas
inc
mov
sbb
mov
push
cli
add
pop
jp
js
inc
fcompl
add
xchg
mov
sbb
cs
fsub
rclb
mov
outsb
cmp
dec
enter
jno
push
inc
rcl
cmp
cld
fisubrs
cmpsl
loop
fsubs
jae
mov
rclb
jl
test
jge
stos
jle
or
jb
inc
imul
imulb
clc
fisttps
aam
mov
pushf
mov
mov
lock
out
fisubrl
into
dec
dec
push
scas
std
mov
add
sub
sbb
ds
jp
push
outsl
cmpsb
mov
insb
test
dec
cli
clc
clc
mov
mov
loopne
pcmpgtd
sahf
push
pop
into
dec
rcr
int
aas
mov
mov
ljmp
sbb
mov
cmpsl
inc
jecxz
ja
pop
leave
into
lea
push
inc
nop
mov
fwait
cmp
jecxz
mov
fsubrl
pop
test
mov
pop
aad
push
fidivrs
cmp
sub
popf
xor
pop
push
push
popf
into
push
std
cwtl
inc
loope
gs
dec
lcall
adc
bound
fmull
addb
pop
inc
les
or
push
jg
arpl
xor
mov
cs
lods
dec
out
daa
inc
test
bound
pop
mov
push
cmpsb
je
sub
in
sub
mov
mov
mov
shr
xor
lahf
dec
and
sahf
stc
adc
or
mov
pop
jno
jl
push
jge
and
adc
add
sub
adc
pushf
cmp
or
in
leave
sub
lcall
mov
cmpsl
mov
dec
repz
subb
pop
movsb
dec
ds
inc
mov
leave
sub
test
cli
mov
out
sti
cmp
fs
cs
stos
jae
jp
les
and
lcall
cltd
push
sarb
mov
xchg
push
in
popa
and
xor
insl
fcmove
push
cld
and
pop
xchg
mov
sbb
push
pop
mov
ss
dec
mov
and
out
or
imul
xchg
sti
jg
jmp
mov
xchg
sbb
sbb
mov
pushf
or
lret
imul
sbb
xor
xchg
mov
call
sbb
xchg
inc
lods
sbb
mov
call
adc
hlt
push
shr
stos
outsb
jae
inc
xchg
dec
mov
call
cli
shlb
pop
loop
sbb
dec
mov
ljmp
and
loop
jp
mov
dec
mov
cmpb
or
cmpsl
int
lahf
fwait
and
push
mov
mov
or
pop
cwtl
dec
fcoml
or
pop
mov
das
push
pop
jb
lock
movsl
lods
xor
adc
pop
cmp
xchg
popa
mov
pusha
and
pusha
ljmp
out
loope
push
dec
fstpt
push
mov
mov
in
callw
push
orl
test
and
jne
mov
loop
xchg
adc
mov
imul
jge
xlat
inc
jno
in
mov
push
and
and
call
xchg
dec
negl
fld1
push
mov
mov
insl
and
cmp
and
out
int
cmp
inc
das
cwtl
into
push
mov
repnz
or
push
mov
loopne
pop
cmc
mov
cmp
and
xor
cmp
std
push
pusha
les
ljmp
jge
add
test
subl
mov
int3
inc
divl
into
ret
dec
idivb
adc
sub
les
mov
mov
fwait
jge
test
in
out
sarl
push
scas
es
cmpsl
scas
bound
or
pushf
out
movsb
mov
xchg
test
or
cli
mov
ficoms
cmp
mov
push
cli
imul
mov
cld
pop
imul
mov
sub
scas
or
or
insl
cltd
pop
xor
test
mov
loop
dec
sub
xor
pop
hlt
jp
repnz
push
pop
sub
jb
adc
outsl
fcmovnb
push
rorb
mov
inc
add
add
and
shrl
adc
jge
mov
mov
fwait
sub
movsl
negl
xor
aaa
lcall
sub
pop
loope
adc
cwtl
push
or
les
add
xchg
ret
and
dec
nop
cmp
in
xchg
sub
dec
daa
outsl
push
out
insb
xchg
cltd
sub
jp
shr
jp
ss
aad
add
push
pushf
and
cmc
cmpsl
adc
pop
pop
lods
out
pop
inc
xor
test
inc
setne
xchg
adc
mov
dec
movsb
test
sahf
pop
mov
push
push
pop
mov
gs
ds
push
cmp
jecxz
in
inc
adc
popf
cs
movsb
popf
or
lds
scas
sbb
jnp
out
pop
add
push
pusha
cld
scas
aam
bound
adc
or
das
lcall
add
mov
mov
stos
adc
test
jno
jl
mov
test
mov
shll
inc
xor
push
sarb
enter
cwtl
int
filds
jl
pop
cltd
pushf
xlat
mov
and
cmp
push
lret
in
push
sti
loopne
mov
inc
or
jnp
jnp
inc
push
sbb
pop
and
lock
pop
ljmp
xchg
mov
popa
ficoms
jecxz
iret
inc
popa
xor
les
clc
repz
insb
xchg
mov
out
xchg
aam
mov
xchg
dec
lods
movsl
aad
inc
psubb
xchg
leave
sbb
or
jge
loopne
push
mov
and
xchg
sbb
dec
push
loope
lods
leave
sbb
cmpsb
jle
test
sub
fistl
jne
cmp
sub
jmp
add
je
add
xchg
das
push
test
in
dec
add
sbb
out
inc
mov
add
stos
pop
xchg
and
sub
lods
loopne
or
pusha
je
pop
xchg
int
movsl
inc
in
dec
cmp
arpl
mov
mov
popf
sub
es
lods
movsl
jmp
xchg
xchg
pop
push
adc
movsb
shrl
mov
and
lahf
adc
sbb
pop
shrb
dec
adc
movsl
out
sub
adc
mov
add
sbb
addl
mov
add
addr16
dec
lods
inc
leave
sti
mov
out
xlat
call
xchg
int3
xor
stos
sub
sub
jnp
dec
dec
and
imull
sysret
dec
lret
pop
fwait
cltd
sbb
cmc
inc
ss
xchg
inc
dec
bound
push
sub
jg
xorl
inc
fimull
push
push
jmp
aam
mull
cmp
sbb
add
ret
push
sbb
xchg
hlt
lret
jp
insb
xchg
lods
adc
xor
or
push
jne
outsb
dec
lcall
add
xor
gs
ds
pushf
outsl
or
sahf
push
add
sub
roll
mov
adc
jo
push
iret
xorl
add
mov
repz
ret
call
hlt
inc
in
or
ss
mov
push
pop
fsts
jmp
jb
xlat
mov
jmp
sbb
sti
enter
jmp
adc
push
push
or
inc
pop
sub
inc
pop
add
pop
data16
and
jmp
push
dec
jg
cmp
test
jmp
xchg
inc
inc
std
push
imul
xor
imul
addr16
ret
loopne
mov
adc
mov
outsb
popf
dec
push
sub
mov
inc
xchg
add
jno
jp
or
js
scas
xor
in
mov
xchg
inc
xchg
xchg
test
mov
push
cmc
mov
dec
fdivr
ljmp
insb
sub
push
push
jp
xchg
xlat
pop
popf
cmpsb
dec
fs
pop
jge
cmp
add
fmull
loope
xchg
lret
pop
aam
mov
arpl
xchg
or
xor
push
mov
add
shlb
stos
in
push
loop
xchg
ja
mov
or
insb
mov
adc
leave
xor
push
mov
les
xchg
inc
cltd
or
aaa
int3
adcb
sub
in
out
pusha
sub
adc
mov
ret
and
cld
push
cmp
cmpsl
sub
xadd
sbb
lret
mov
int3
bound
jmp
and
mov
stos
xlat
dec
xlat
mov
in
inc
xorb
xor
sub
cmc
mov
sub
push
jns
hlt
xchg
test
xor
mov
xor
ficoms
sbb
push
jmp
push
cs
sarl
pop
leave
xor
mov
pop
cwtl
xor
lods
into
outsl
addr16
ret
sub
xor
aam
xor
cltd
inc
rcll
sbb
out
int3
idivb
mov
popfw
leave
push
test
iret
push
lods
decb
fidivrs
push
dec
nop
adc
fidivs
cmp
mov
int3
aam
and
mov
aas
push
mov
lds
fisttps
popl
sbb
sbb
mov
cmpb
jge
cmp
leave
enter
outsb
popf
das
cld
push
jb
xchg
icebp
adc
movsl
lods
dec
dec
lret
mov
repz
out
insb
orb
test
es
inc
sbb
cmp
pop
jne
enter
or
push
inc
arpl
inc
les
cmp
or
ja
jecxz
loope
jo
cmp
push
and
jne
ljmp
xor
test
add
scas
mov
push
std
mov
imul
fwait
popl
daa
iret
dec
dec
test
loope
mov
pop
cltd
xorl
lahf
int
hlt
pusha
enter
ja
and
das
sti
pusha
and
mov
xor
cmp
repnz
mov
pmaddwd
xchg
sbb
add
sub
jg
shl
aas
add
xor
xorl
jnp
fdivrl
sub
ds
mov
sbb
mov
push
loope
mov
sbb
shlb
dec
cmc
fsub
pop
cld
std
ja
call
cmpsl
cwtl
push
daa
xor
xor
imul
daa
je
pop
pop
call
in
adc
psubsw
imul
sti
int3
sbb
pop
test
jle
shrl
xchg
int3
xchg
std
js
pop
and
inc
pop
mov
aaa
nop
shll
rcrl
inc
pop
cmp
movsl
xchg
xor
add
push
xchg
sbb
out
dec
push
and
std
xchg
popl
push
shr
and
mov
mov
imul
push
push
dec
repz
pop
jbe
addb
add
out
mov
imulb
lods
repnz
jo
cs
std
sbb
jne
and
fcoml
jae
or
ja,pt
fisubrs
arpl
insb
aas
imul
fcoms
dec
jl
lds
sub
ja
jl
leave
movsb
sub
xchg
xlat
popa
pop
fimuls
in
jmp
imul
fnstsw
cltd
jne
jbe
and
mov
scas
test
clc
fcompl
lock
dec
sbb
xor
loope
sbb
ror
mov
in
jle
mov
into
pushl
jmp
mov
mov
xchg
dec
outsb
aaa
mov
imul
inc
xchg
jmp
pop
adc
jne
nop
iret
nop
pause
xchg
lds
rolb
aas
or
iret
cmp
mov
jmp
outsl
stc
or
test
movsb
push
xchg
push
dec
jecxz
cmp
bound
into
loope
movsb
add
jecxz
or
or
xor
mov
mov
mov
pushf
fldenv
pop
or
xlat
cld
and
cmp
pop
cmpb
fimuls
inc
dec
nop
jno
outsl
sub
dec
or
push
outsb
jns
test
stc
xor
sbb
int
cmpsb
dec
mov
cmp
outsb
xchg
or
jo
flds
dec
dec
out
inc
jp
ss
lret
cs
sahf
pusha
jmp
pop
or
mov
call
xor
jecxz
jp
movsl
aam
xor
xchg
call
pop
cmp
jmp
rol
jno
push
scas
int
inc
push
test
adc
pop
filds
push
cmpsb
mov
adc
sbb
mov
mov
push
inc
xchg
or
shrb
jbe
in
sub
xchg
adc
xor
jae
lret
mov
cmpsb
or
jl
nop
push
push
xchg
dec
jmp
pop
lea
sbb
iret
rorb
mov
insl
cltd
push
jecxz
inc
ficoms
cmp
rcrb
push
push
jae
out
cwtl
loope
and
pop
inc
popa
les
clc
bound
loope
daa
mov
mov
and
push
add
shlb
fbstp
mov
aam
imul
ljmp
adcl
mov
mov
ja
xchg
mov
xlat
sub
push
sbb
fcoml
fwait
push
ljmp
sub
pop
inc
inc
pop
dec
pushf
loopne
fmull
cmp
mov
sti
nop
mov
out
and
xchg
stc
stos
dec
lods
mov
jnp
inc
lret
hlt
test
bound
pop
cmc
cs
jbe
adcb
sti
mov
pshufw
mov
fcmove
popa
fisubrl
movsl
and
push
inc
int
mov
ja
imul
sub
nop
lret
push
and
push
ret
test
ljmp
lcall
mov
push
pop
mov
sub
xlat
je
dec
lods
das
cmpb
cmpsb
out
loopne
add
mov
into
dec
cltd
jmp
mov
ret
pop
add
push
inc
and
mov
adc
ret
hlt
mov
mov
and
push
out
hlt
pop
mov
call
add
shrl
aas
jg
pop
mov
dec
cmpsb
sub
inc
mov
popa
lock
lahf
data16
jmp
mov
lock
jle
add
loopne
cmp
leave
mov
mov
jnp
sbb
pop
add
out
lea
and
nop
inc
dec
out
cmp
dec
mov
sbb
ss
and
mov
xor
fidivrs
xchg
out
dec
add
dec
ds
inc
xchg
add
xchg
mov
bound
iret
push
test
into
xorb
in
cmp
daa
mov
dec
pop
pop
loop
or
roll
adc
cmp
mov
jl
icebp
fimuls
sub
mov
mov
test
inc
mov
out
xor
push
pop
repz
jae
inc
fs
xor
test
fildll
ds
aam
push
adc
iret
sub
add
out
adc
xor
pop
lods
scas
push
in
and
lea
jno
mov
jns
xchg
push
push
mov
mov
out
scas
lcall
data16
pop
mov
rcl
movsl
push
ss
dec
sub
add
stos
push
out
inc
in
and
iret
jo
mov
mov
jmp
push
lea
and
daa
mov
sub
pop
cmp
into
sub
arpl
mov
arpl
idiv
push
ljmp
pop
loopne
mov
xor
sub
adc
lret
stc
fs
insb
orb
and
jl
inc
cld
and
fstpl
sbb
and
fs
xchg
adc
xchg
inc
popa
shr
out
aaa
mov
add
inc
pavgw
push
sub
xchg
push
sub
cmp
es
jns
in
mov
into
cmp
jnp
ret
mov
insl
sub
sub
pushf
pop
addr16
popf
cld
and
pushf
add
stos
adc
mov
imul
push
sbb
jbe
jge
adc
xor
rolb
add
and
sub
sti
push
add
cmp
xor
xchg
add
mov
icebp
insb
inc
js
xor
cli
arpl
fisttpll
pop
test
stos
push
shr
ret
outsb
insl
push
mov
test
sub
push
mov
frstor
mov
lret
cmp
sub
xor
xor
jmp
mov
cmc
mov
arpl
imul
in
mov
adc
dec
mov
outsb
repnz
mov
push
fidivs
push
fucomip
mov
fsub
pushw
push
movsb
cmp
sbb
aad
pop
adc
pop
jle
dec
adc
insb
xlat
rcll
jb
js
ret
mov
aas
mov
scas
add
out
sub
ret
enter
xchg
and
push
sub
sahf
je
in
ja
stc
jle
pop
sub
dec
test
pop
cld
lods
test
pop
jne
xcrypt-ofb
cmpsl
in
lods
pop
or
sbb
pop
jne
mov
insl
movsb
call
and
dec
leave
repz
xchg
inc
ret
add
repz
and
sub
test
and
and
sub
xchg
leave
jmp
mov
insb
adc
jae
mov
inc
popf
popa
xchg
aas
test
stos
test
sbb
and
mov
fidivs
inc
pop
repz
loopne
sub
das
adc
outsl
and
leave
in
mov
xchg
aas
add
jecxz
fidivs
fs
lahf
jo
dec
pusha
inc
fadds
push
cmp
testb
mov
adc
leave
add
mov
lock
lahf
out
pop
in
inc
inc
dec
cltd
xor
fmuls
jno
pop
pop
xchg
xchg
inc
xor
insb
mov
lea
cld
rdtsc
inc
jnp
xchg
jmp
mov
movsl
dec
mov
in
and
jb
test
mov
in
inc
inc
ja
out
lret
dec
sti
and
inc
push
push
mov
in
call
scas
sbb
scas
testb
movsl
sub
dec
jns
mov
pop
testl
mov
mov
mov
arpl
cmp
push
aad
adc
sahf
xchg
and
push
mov
adc
popa
cmc
loopne
cli
mov
mov
rcl
inc
and
scas
lret
jne
mov
xor
test
sub
lcall
cmp
fwait
xor
adc
daa
popf
clc
popa
cmp
jp
lods
mov
icebp
jnp
and
and
cmpl
mov
lret
push
inc
movsl
inc
mov
arpl
aad
aaa
lock
arpl
mov
push
mov
int3
sbb
jl
cmp
jbe
out
and
pop
insb
cs
out
mov
out
lea
sbb
sbb
es
movsl
xor
arpl
and
mov
cwtl
sbb
push
push
mov
ret
notb
xlat
jg
inc
mov
mov
pop
js
sbb
add
xchg
inc
shlb
leave
js
sub
jmp
lock
and
mov
inc
inc
adc
notb
into
push
mov
js
pop
push
dec
cmc
flds
mov
sbbl
scas
pop
add
hlt
fadds
inc
in
stos
mov
and
cmp
and
and
dec
xor
mov
sub
jl
push
add
cwtl
dec
mov
gs
roll
int
rorb
popa
lea
sub
repnz
pop
ret
cmp
adc
mov
push
test
sub
sbb
cmpsl
sbbb
xchg
lahf
cmp
push
jecxz
lret
jbe
xchg
out
cmp
loope
cmpsb
fstpt
xor
out
scas
fdivr
xor
aad
lret
xor
out
mov
xor
ja
adc
out
pop
insb
jle
push
adc
cmpsb
ds
div
cmp
sbbl
out
stos
les
push
ja
sbb
repnz
les
push
pop
pusha
fwait
xchg
lds
sahf
push
dec
pop
in
mov
push
sti
adc
sub
outsb
std
mov
mov
xchg
xchg
fs
jno
call
sbb
lcall
cmp
mov
mov
xor
push
cmp
das
adc
das
sub
sub
dec
lret
rcl
and
add
sub
mov
push
xorl
call
ss
jb
push
cld
stc
cwtl
add
into
mov
ds
nop
test
pushf
xor
inc
cmp
pushf
xchg
cmp
hlt
js
push
js
outsb
add
mov
dec
mov
jne
pop
sbb
outsb
cli
jne
pusha
xlat
addr16
mov
insb
fisubs
cld
and
and
xor
daa
dec
dec
leave
xchg
rcl
movd
jg
int3
mov
sahf
xchg
popa
faddp
inc
mov
addl
out
push
xchg
add
jno
in
ja
pop
repnz
jecxz
push
jno
mov
jno
dec
fcoms
sbb
test
in
mov
popa
call
sub
inc
pop
push
js
jecxz
mov
inc
and
fimuls
mov
leave
addr16
xlat
push
mov
cld
cmp
fcoml
xlat
lods
pop
pop
pop
or
cmp
add
sbb
sub
sub
pop
or
pop
mov
insl
push
mov
xchg
hlt
lock
fcomip
dec
cmc
sub
dec
mov
mov
mov
mov
lock
push
negl
rorl
jb
jecxz
push
dec
mov
outsl
xor
mov
imul
pusha
negl
dec
pop
jnp
int3
repz
xor
ds
out
pop
adc
lret
mov
pop
push
mov
mov
push
cmc
jo
jnp
inc
popf
cmpsl
add
jecxz
adc
loopne
iret
outsb
mov
pop
push
inc
loop
cmc
aas
nop
sbb
mov
jl
dec
jbe
sbb
pop
jae
and
mov
test
es
flds
push
outsb
stc
or
sbb
mov
addl
shl
inc
lea
enter
std
or
fsubr
cmp
fwait
adc
xlat
lcall
jp
loope
arpl
sbb
cmpsl
mov
aas
enter
imull
pop
push
cmp
subl
push
add
scas
add
dec
sahf
loop
or
mulb
icebp
sbb
push
imul
sbb
mov
lahf
xchg
outsl
ret
jmp
mov
add
mov
mov
dec
ret
push
pop
aas
lcall
dec
jno
push
clc
jmp
jns
xor
and
fisubl
mov
mov
mov
dec
sti
out
test
lret
jo
adc
xlat
jae
test
scas
out
jge
pushf
xor
fs
pop
loop
sbb
jl
ss
orb
mov
add
iret
cld
mov
jmp
rclb
jle
sbb
mov
pop
pop
mov
jnp
adc
rcll
lcall
fs
sub
test
les
iret
adc
dec
add
add
and
in
pop
sbb
out
and
outsb
dec
or
mov
jno
stos
pop
out
sbb
cmpsb
sarb
imul
inc
add
mov
or
fcoms
sbb
int
lods
xor
inc
lods
es
sub
jbe
cmp
jbe
dec
or
lret
out
cmp
aad
xchg
push
or
daa
out
popf
sbb
ret
add
ss
enter
mov
aas
sub
shr
pop
loope
and
sub
ljmp
pop
adc
aam
fmull
sahf
jne
sbb
sub
das
mov
imul
adc
scas
add
fidivl
sbb
xor
xchg
dec
sbbb
mov
dec
adc
xlat
notl
xor
stos
pusha
vminss
cmp
iret
pop
mov
bound
jmp
jecxz
testl
xchg
mov
add
fisubrs
mov
push
push
out
push
inc
jg
mov
fwait
cmp
jno
fisttps
in
mov
mov
or
fistpll
jmp
xchg
mov
dec
mov
cmp
inc
xchg
cmp
pop
js
mov
movsl
lods
aas
insl
rcr
iret
xor
sbb
and
ss
and
mov
add
add
xor
adc
aad
clc
es
inc
popa
sahf
cwtl
imul
scas
inc
push
xor
cmp
les
push
outsb
mov
or
dec
mov
adc
jne
xorb
sbb
imul
les
pop
push
movsb
outsl
jg
cwtl
sbb
aam
nop
stos
push
std
add
aas
lcall
dec
jnp
shr
rol
ja
inc
shl
jo
pop
ficomps
push
pop
mov
add
lcall
xorl
cmp
mov
xchg
scas
mov
adc
or
jle
insb
leave
js
mov
daa
std
stc
subl
sbb
xchg
mov
frstor
dec
into
jmp
or
adc
jp
test
push
stc
mov
mov
push
gs
add
pop
push
sahf
xor
in
xchg
xchg
push
fistpll
xchg
sbb
cmp
lret
jno
push
popf
pop
xchg
and
out
push
push
jmp
out
push
aad
inc
cs
mov
dec
fcomps
outsb
push
in
add
mov
rcll
add
pop
loop
mov
sbb
imul
adc
adc
xchg
mov
xchg
je
mov
inc
scas
push
xor
ljmp
mov
dec
hlt
pop
pop
mov
mov
mov
pop
adc
xchg
pop
cmc
sbb
fists
and
mov
leave
out
repnz
push
dec
cmpsl
jo
das
adc
xchg
jno
push
push
push
dec
adc
sti
inc
push
sub
xchg
mov
dec
push
imull
ds
shlb
jl
aas
icebp
aam
icebp
sbb
enter
and
jecxz
fimuls
inc
xlat
jo
jb
or
mov
pop
adc
imul
mov
adc
mov
sub
xor
in
insl
lods
jnp
adc
jl
popa
xor
xor
mov
add
mov
dec
adc
jne
cs
ret
aad
fnstsw
addr16
into
pushf
jg
mov
mov
leave
xor
fwait
inc
push
or
cmp
incl
push
inc
fistps
jb
fwait
rcr
iret
sbb
ljmp
mov
sub
push
ret
call
bound
cmp
movb
inc
pop
mov
roll
into
leave
push
dec
mov
or
lea
loopne
sarl
pop
stos
add
and
sti
out
jnp
mov
mov
cmp
cmp
aad
cmpsl
mov
xor
cmp
fcompl
mov
ret
and
jge
dec
popa
adc
cmc
call
daa
cmc
sbb
mov
fldenv
pusha
pop
jb
cli
sbb
xor
push
add
or
cmp
sub
jl
pop
and
xchg
arpl
int3
movsb
xor
dec
cs
and
sub
and
or
outsl
cmpb
push
sbb
test
sub
mov
jecxz
pop
push
fdiv
xchg
mov
jbe
lahf
ja
add
loop
and
adc
sahf
sbbl
stc
dec
xor
mov
icebp
fwait
testb
sbb
push
push
xor
ror
lret
inc
pushf
fwait
adc
or
mov
push
ljmp
fisttps
sbb
sarl
pop
pusha
cmp
pop
inc
pop
cmp
stos
in
mov
or
movups
stc
push
or
dec
lcall
loopne
shr
adc
add
or
mov
rcll
inc
fldenv
enter
mov
add
outsb
jmp
cmp
scas
lock
xchg
lret
ret
push
js
enter
cli
xlat
sbbl
mov
jl
adc
push
pop
cltd
mov
inc
sahf
mov
pop
mov
pop
in
ret
clc
jns
lcall
mov
adc
inc
test
dec
mov
jg
lock
rclb
roll
lods
fldenv
or
jbe
sbb
hlt
and
pop
lret
cwtl
mov
pop
xor
fcmovb
sbb
subb
movb
stos
dec
gs
lahf
leave
mov
std
cmp
clc
xchg
enter
out
in
inc
mov
or
aas
dec
xchg
pop
pop
stos
test
mov
mov
push
jle
cltd
xlat
add
out
mov
mov
ds
cld
xor
inc
leave
lcall
or
test
inc
jnp
aad
or
lea
out
cmp
inc
xor
xchg
out
adc
and
test
scas
dec
push
idiv
sbb
arpl
push
add
hlt
rclb
lock
aad
ds
ja
xchg
fadd
mov
mov
xchg
aas
inc
popa
cmp
inc
or
aad
aam
inc
push
rol
outsl
xlat
jecxz
std
ret
gs
das
sbbb
call
into
jp
int3
xor
dec
je
jp
add
pop
jmp
fisttpll
pop
cmp
adc
dec
int3
dec
pop
into
pop
add
pushf
push
sub
call
jecxz
jno
and
shrb
sbb
sbb
and
popf
xor
std
imul
cmp
add
fcompl
mov
lea
push
daa
movsl
fcmovb
jne
out
push
roll
stc
jl
dec
out
push
dec
mov
cmpsl
mov
fs
or
out
pop
sarl
xorb
add
adc
mov
cmp
dec
push
xor
dec
cmp
lods
pushf
ret
jbe
xchg
je
inc
leave
lea
push
mov
js
xor
aam
mov
adc
ficoms
cs
cmovl
push
out
movsb
lret
add
mov
jo
mov
adc
pop
mov
outsl
push
fildll
mov
js
inc
push
mov
sarb
or
pusha
fidivrs
test
jo
mov
sub
jmp
ja
push
imul
jo
mov
cmp
call
out
data16
xchg
sbb
scas
mov
inc
or
cltd
movl
pop
jb
ret
ljmp
mov
inc
loop
scas
cmpsb
pop
mov
or
lret
jecxz
xor
shrb
mov
daa
push
dec
out
sbb
clc
jle
call
popf
pop
fmuls
push
xchg
cmpsb
mov
xchg
ret
mov
in
iret
lock
enter
jne
addr16
pop
into
and
sbb
pop
or
test
or
add
icebp
lahf
jns
sbb
adc
dec
ficoml
inc
pop
push
push
jge
aas
pop
cli
mov
outsb
mov
mov
mov
and
mov
repz
xchg
loop
lahf
rep
pop
mov
mov
pop
mov
lock
lea
aas
dec
pop
mov
mov
adc
push
and
jmp
dec
sub
js
int
sbb
sub
or
lock
outsb
inc
push
sbb
sarb
add
mov
cli
pop
jle
mov
fisttpll
dec
mov
lret
dec
mov
call
inc
xchg
xorb
fwait
lret
inc
loop
out
es
js
pop
aas
xchg
les
scas
int3
sub
repz
stos
sti
and
jne
popa
test
scas
test
mov
pop
bound
xchg
js
ror
in
dec
mov
pop
sub
xchg
loope
jge
mov
jmp
adc
scas
pusha
stc
adc
inc
jl
ret
imul
push
push
inc
xchg
pop
push
popa
out
inc
sub
jno
clc
inc
lea
fildll
adc
sub
clc
fnstsw
shlb
fcoml
mov
cmp
sub
adcb
std
inc
cmp
inc
mov
in
lods
inc
xor
loope
sbb
out
and
clc
repz
mov
sti
and
outsb
jl
leave
cmp
test
xchg
mov
push
pop
rol
aas
mov
xor
jbe
push
in
inc
mov
inc
xor
xor
ret
fisttpl
and
dec
movsb
pop
fsubrl
xchg
push
int3
stc
xor
cmc
inc
lcall
mov
push
cld
jbe
fwait
or
out
mov
xchg
and
rclb
inc
push
inc
push
fcompl
gs
mov
jnp
sub
xor
mov
imul
sub
inc
decb
inc
adc
cs
push
outsl
mov
xchg
scas
inc
sar
mov
jp
in
add
test
sbb
mov
inc
into
jmp
or
jae
xchg
sti
imul
mov
in
repnz
mov
cmp
roll
pop
or
or
cmp
sub
jp
addr16
into
ret
data16
jmp
in
mov
arpl
mov
pop
lcall
inc
in
xchg
mov
stos
add
clc
xchg
iret
pop
pop
mov
cmc
cmp
aaa
sbb
imul
adc
inc
xchg
sub
dec
or
outsb
jmp
xchg
inc
xor
pop
pop
dec
sbb
lret
cmp
pop
cwtl
push
lret
int3
xchg
mov
dec
jne
incl
mov
scas
dec
jno
enter
sub
xchg
and
mov
dec
xchg
je
leave
adc
and
adc
push
push
jge
push
cld
or
xchg
push
pop
mov
cmpsb
xor
mov
vcvtsd2ss
add
add
add
push
jp
test
jb
data16
bound
notl
add
xchg
xchg
cs
adc
lods
cmp
adc
adc
insb
mov
dec
and
das
cmp
xor
pop
push
test
sbbl
or
pop
mov
or
nop
rorb
and
and
mov
mov
pop
xor
adc
mov
fwait
out
mov
push
ret
pop
add
mov
and
loope
sub
cmp
cmpb
pop
clc
sti
insl
fcomi
inc
xorb
rcr
and
push
inc
fdivr
cmp
and
adc
pop
and
xchg
pop
sub
sbb
jg
clc
inc
push
cli
out
mov
cmp
push
dec
push
push
adc
cmc
jl
jl
inc
imul
add
int
outsl
popa
fdivl
call
fwait
nop
ret
loop
fldt
xor
jb
imul
or
pop
je
cltd
and
ret
lret
int
mov
mov
xor
inc
enter
mov
subl
outsl
cli
dec
call
fs
mov
mov
sub
cmp
dec
dec
fsubrl
xor
or
ds
dec
add
popf
mov
inc
out
xchg
daa
xor
cmp
ljmp
enter
xor
mov
sub
loope
sbb
cmp
test
filds
mov
xor
mov
leave
divb
in
xlat
mov
pop
icebp
enter
in
int
sahf
add
mov
pop
pushf
movsl
inc
pop
fdiv
in
adc
pop
into
mov
cmp
loope
xor
scas
dec
js
and
in
test
push
inc
roll
lds
sbb
stos
cltd
popa
lods
movsb
arpl
test
dec
mov
mov
mov
pop
cmp
push
repz
orl
dec
pop
mov
xchg
fnstcw
mov
mov
fiadds
xchg
sarl
ss
sbb
or
xchg
xadd
jnp
xchg
das
pop
xchg
xor
arpl
jae
or
cmp
icebp
push
call
rcrb
cmp
cmovge
xor
inc
push
shll
pop
lds
sub
mov
clc
popa
adc
int3
pop
mov
jo
pop
mov
mov
xchg
and
xchg
les
in
lret
xor
imul
pop
lret
adc
jge
pop
add
ret
xor
jecxz
mov
rorb
fs
mov
arpl
add
mov
dec
jbe
jbe
mov
outsb
mov
mov
jno
cmpsl
imul
xor
xor
arpl
in
divl
mov
sbbb
rclb
adcl
cld
pop
push
mov
mov
cs
push
mov
imull
or
xor
push
push
xchg
aaa
sahf
lret
pop
test
into
and
adc
popa
add
leave
dec
scas
pop
jno
lcall
sub
je
jle
mov
sahf
jno
fcomps
inc
in
test
mov
jp
lcall
add
sub
not
int3
xchg
mov
ss
push
jbe
mov
mov
jno
add
push
add
push
sahf
or
cs
xor
sti
rclb
test
xor
cltd
sbb
cmp
jmp
outsb
jo
pop
pop
sbb
cwtl
dec
mov
int3
inc
dec
cmp
pop
loopne
bound
lods
mov
pushf
or
aaa
dec
jbe
insl
xchg
push
cli
ret
mov
add
push
xchg
aam
sbb
adc
and
push
ds
enter
push
lds
cmc
scas
enter
insb
mov
les
testb
jne
or
cmpsb
adc
xlat
daa
mov
inc
notrack
hlt
ss
fisttpl
fwait
mov
lods
repnz
cmp
push
push
xorb
push
mov
mov
and
repnz
hlt
popf
cli
in
jp
sti
and
outsb
icebp
xchg
pop
jmp
add
and
mov
xchg
cld
jno
and
add
rol
push
adc
les
js
in
jae
cmp
or
mov
xchg
repz
or
insl
push
mov
and
test
je
ss
cwtl
xor
ja
data16
in
adc
push
in
std
inc
ds
sahf
mov
test
mov
ljmp
inc
loopne
mov
es
dec
fscale
mov
neg
icebp
sbb
sub
mov
inc
in
cmpsl
shl
mov
insb
out
pop
pop
jmp
shll
add
out
fsubrp
jmp
pushf
or
or
mov
aam
pop
sar
into
ljmp
xlat
insl
pop
xchg
cmp
lret
pop
icebp
ja
jp
push
shrl
and
adc
jae
push
std
cmpsl
popf
inc
sbb
cltd
arpl
mov
data16
icebp
notb
cmp
and
orl
imul
xor
mov
pushf
add
add
in
and
push
inc
pop
xchg
movsb
shr
std
or
imul
mov
or
rorl
ret
cmp
scas
lahf
insl
fsubrs
pop
scas
leave
fistpl
xor
mov
and
pop
js
aas
insb
and
mov
daa
jle
push
test
es
inc
cmp
test
and
testb
sub
push
or
fisubs
add
xchg
aam
mov
out
std
push
pop
cmpb
das
xchg
nop
jns
pusha
dec
jg
and
inc
out
sbbl
fnstcw
mov
xchg
insl
adc
sbb
pop
dec
aas
xchg
fidivs
sbb
xchg
lret
sub
fdivrs
ds
sub
xor
es
push
pop
das
fcmovnbe
inc
sbb
mov
ds
sbb
bound
cmp
adc
mov
les
fs
or
out
mov
and
push
pop
dec
fidivl
mov
stos
in
in
lea
dec
xchg
sbb
test
ja
in
cld
hlt
pop
fldt
movl
out
mov
xor
xchg
or
fdivrp
mov
gs
leave
pop
mov
pop
test
mov
cmp
icebp
sub
inc
ret
dec
rol
lods
movsl
in
stos
pop
loop
roll
dec
sub
arpl
jae
popf
ja
sahf
rolb
movsb
repnz
push
faddl
lret
test
shlb
enter
xor
jmp
cmp
test
pop
ret
lds
push
push
inc
jo
sub
inc
push
mov
jge
inc
lds
mov
and
insl
outsl
mov
rcl
lahf
mov
loopne
mov
outsb
or
sub
mov
mov
pop
and
outsl
add
and
in
rclb
xor
pop
fs
nop
add
dec
mov
mov
cmp
sbb
scas
cmc
jge
dec
sbb
xchg
in
pop
mov
ficoms
push
das
fs
cmp
sub
repz
cmp
add
xchg
add
popa
scas
pushf
push
jae
roll
jb
stos
iret
scas
push
pop
aam
lahf
jnp
sub
sbb
daa
sub
xlat
push
mov
and
les
mov
dec
stos
add
icebp
mov
loopne
pop
ja
stos
jns
cmp
sub
mov
cmp
push
aas
sub
inc
dec
filds
popf
mov
mov
in
push
loopne
adc
imul
mov
das
sub
xchg
jbe
xor
int
imul
and
sbb
lcall
outsb
jo
aam
inc
fistl
or
and
es
into
popf
int
xor
sbb
push
jno
int
push
pop
test
fcmovnbe
or
ja
dec
mov
cmpsb
push
pop
dec
xchg
leave
mov
adc
ss
pop
jb
andb
push
lret
imul
jle
mov
or
dec
dec
and
dec
inc
fdivrs
std
lock
in
ds
inc
lods
test
sbb
mov
jno
sub
or
lock
adc
daa
adc
push
push
jle
push
ja
lods
mov
jnp
shll
push
cs
cmpsl
adc
xorb
dec
and
into
fadds
mov
sbb
xchg
jle
xchg
out
or
cld
mov
jmp
push
es
jbe
sub
idivl
inc
pop
mov
dec
scas
lods
mov
ret
shll
sbb
roll
cmp
loope
inc
inc
push
test
mov
cmovae
and
out
aas
mov
popf
sbb
lret
in
cmpsl
sbb
cmp
cmp
jmp
lea
js
push
pop
inc
fldcw
add
jbe
push
fbstp
mov
dec
mov
jo
es
dec
mov
cmp
dec
sti
pop
popf
in
ja
dec
cld
cmp
das
ds
adc
outsb
insb
ds
push
sbb
mov
into
mov
or
pop
pusha
push
mov
pop
icebp
push
jmp
arpl
adc
leave
push
inc
leave
push
aaa
mov
les
cltd
pop
inc
pusha
sti
jg
jge
int
fsubs
lret
xor
xchg
xor
push
dec
je
insb
fldt
test
setge
lcall
push
mov
sub
jno
cmp
dec
movsb
jb
jnp
push
and
scas
dec
loope
in
adc
test
movsb
push
aam
fistpll
in
mov
xchg
jae
xchg
orl
jge
dec
push
xlat
iret
and
pop
adc
push
mov
test
cmpl
and
pop
mov
test
add
xorb
test
enterw
inc
bound
add
inc
inc
orb
dec
xor
and
in
iret
jbe
mov
stc
rcrb
xlat
js
mov
mov
jns
sbb
sbb
push
mov
rep
xchg
inc
ljmp
aam
or
mov
xchg
push
push
insb
call
repnz
jo
lock
xchg
pop
dec
loop
dec
adc
push
jnp
mov
sub
outsb
gs
push
xor
xchg
call
jecxz
imul
pop
jb
sub
fcomp
je
sub
insl
mov
les
incb
scas
jp
adc
pushf
stc
push
xchg
pop
movl
mov
lods
dec
adc
sarl
in
hlt
push
lods
mov
ja
push
push
lods
dec
cmp
test
sub
shrl
xor
frstor
push
add
xor
rclb
mov
movsl
adc
pop
mov
fnstenv
out
xor
and
mov
xor
in
pushf
outsb
jl
and
lock
leave
ret
mov
loop
fisubs
pop
pop
mov
cmpsl
stos
popf
mov
and
arpl
loop
add
sti
add
aam
fdivl
xor
mov
add
jns
shrl
and
and
and
scas
mov
jp
cmp
andl
xor
sub
mov
mov
push
xor
jo
and
sbb
scas
mov
fcmovnb
leave
lods
gs
in
xor
jnp
xchg
cmp
mov
incb
mov
insb
mov
push
out
jge
adc
pop
cmpsb
push
fimull
jns
xor
sub
mov
test
push
push
push
clc
xor
pusha
xchg
push
sbb
or
inc
sub
icebp
xchg
mov
mov
cltd
daa
pop
cltd
cld
movsb
mov
jae
jne
sub
lock
outsl
btl
inc
inc
js
js
fimull
add
mov
cmpsb
jbe
inc
rolb
jmp
repz
enter
sbb
sbb
imul
jge
repz
xchg
loop
stos
ret
les
in
into
ja
cmc
push
outsb
cmp
or
mov
das
data16
movsl
add
sub
and
lds
push
xor
mov
jns
into
daa
fadd
cltd
mov
jb
bound
jp
stos
adc
mov
and
xor
xchg
rcll
decl
fwait
hlt
int3
loope
or
adc
adc
mov
cmp
scas
sbb
push
and
push
dec
inc
fstps
scas
sbb
adc
insl
arpl
outsl
push
mov
lcall
jmp
xchg
aaa
scas
adc
xchg
shll
xor
push
movsb
jns
pop
lock
sub
pop
pop
scas
clc
call
dec
stc
aam
mov
add
out
movaps
cmc
ret
dec
jmp
mov
ds
xchg
sub
fs
cmp
mov
shll
mov
add
mov
mov
lods
scas
xchg
das
scas
sbb
lahf
xor
clc
sarb
ds
or
outsl
jmp
xchg
pop
xchg
lahf
push
add
outsl
fs
pop
pop
and
and
xor
nop
int3
test
or
notb
outsb
mov
mov
ret
sub
mov
mov
stos
enter
icebp
cmp
sbb
aas
xchg
les
sub
in
std
mov
mov
mov
imull
outsb
lahf
subl
and
push
js
cmp
test
popf
movsb
push
cli
mov
in
adc
sbb
cmp
cmp
lock
idivb
cmp
xchg
cmp
sbb
shlb
xchg
ja
lods
push
daa
sbb
and
mov
fs
ljmp
lock
hlt
mov
add
mov
push
pop
pop
lahf
cmp
pusha
cmp
xchg
pop
add
pop
mov
pop
push
popl
push
add
mov
mov
mov
xchg
pop
xchg
and
jg
dec
inc
ljmp
inc
lret
inc
lcall
adcl
mov
and
fisubrs
insb
dec
jg
nop
les
mov
mov
pop
loope
ret
shl
jnp
aas
sbbb
push
xorb
push
cwtl
jo
push
sub
dec
fwait
sbb
sbb
sub
push
adc
sub
js
outsb
pop
or
loop
inc
dec
sahf
mov
sbb
mull
imul
xchg
mov
loope
xor
loope
jle
cmp
inc
dec
adc
or
and
add
stos
mov
push
scas
xchg
rcl
je
push
scas
icebp
inc
sbb
fstl
andb
adc
mov
mov
and
and
or
inc
fs
inc
xchg
and
push
mov
dec
fstl
in
into
inc
das
cs
sahf
lock
and
add
pop
clc
mov
in
and
jnp
enter
ret
adc
rcrl
clc
lods
xchg
adc
add
mov
jbe
cmp
adc
std
movsb
out
and
int
ja
jae
lret
xchg
mov
adc
dec
insl
adc
and
packsswb
sti
jg
lea
mov
cmp
inc
push
popa
decl
jmp
cmpsb
fidivrl
mov
in
test
mov
adc
lret
mov
xchg
int
insb
push
dec
mulb
mov
mov
ja
xchg
outsb
pop
cmc
adc
stos
mov
jbe
mov
add
bound
in
jle
push
add
ja
mov
fbld
push
cmp
inc
test
mov
sbb
dec
sub
test
mov
push
adc
call
andl
push
and
pop
push
popa
xor
add
pusha
add
xchg
gs
pusha
push
add
jecxz
jecxz
dec
movsb
int3
mov
push
ror
int
bound
andl
mov
dec
xchg
cmp
cltd
cli
aam
xchg
lds
icebp
imul
rorb
mov
cmp
mov
dec
and
lods
inc
roll
addb
jns
enter
mov
push
cmp
sbb
outsb
call
sbb
push
xor
push
ficoml
mov
cmp
fcompl
push
inc
lret
push
push
comiss
aam
pop
xorl
lahf
clc
xor
or
mov
cltd
jbe
scas
push
sti
aaa
sub
sbb
xor
mov
dec
inc
fdivs
in
stos
mov
leave
jp
cmc
fadd
lcall
adc
repnz
pop
fsubrs
cld
ja
xor
jne
xor
fs
repnz
dec
fidivl
sub
lock
inc
mulps
imul
mov
inc
loopne
fnstsw
je
push
sub
test
mov
and
adc
pop
mov
and
inc
mov
adc
dec
xchg
insb
icebp
aad
add
test
sbb
insb
xchg
addl
xchg
fsub
add
push
mov
xchg
cmp
enter
das
jns
pop
aaa
sbb
adc
push
lods
cld
das
jmp
add
mov
js
sub
outsb
dec
test
neg
pop
das
push
and
dec
or
je
sbb
dec
dec
mov
inc
mov
mov
shll
xchg
lret
aaa
mov
sbb
call
enter
sti
out
push
sbb
push
jl
jmp
add
mov
stc
mov
sub
daa
pop
or
mov
mov
popf
mov
out
movsl
cwtl
sahf
shrb
in
jmp
and
mov
mov
dec
cld
insb
xor
arpl
ret
mov
imul
in
inc
mov
xor
push
in
popf
add
sub
out
in
mov
popa
pop
inc
fdiv
frstor
les
out
cwtl
cmp
scas
shll
pop
jne
add
je
ret
dec
push
or
cmp
scas
sti
in
ss
repnz
mov
outsb
rcl
jecxz
jae
sahf
push
shlb
stc
xrelease
mov
stc
mov
repz
jle
data16
test
outsl
movl
in
ffreep
inc
or
das
mov
out
cli
adc
inc
pop
test
xor
or
push
jmp
mov
cmp
out
and
inc
movsb
mov
jns
and
cmpsl
xor
fidivrl
nop
rorb
add
das
fwait
xor
fiaddl
scas
mov
xchg
lcall
pop
xchg
je
test
jne
mov
scas
jnp
ret
cmp
hlt
add
fisubrs
cmc
scas
in
bound
add
sub
std
inc
ja
mov
xchg
out
mov
sub
inc
xchg
cmovge
pop
pop
cmp
fldl
in
mov
pop
adc
cli
dec
pop
repnz
shrb
jo
cs
pop
mov
sbb
sub
push
push
adc
loope
pushf
pop
xchg
loopne
or
xor
daa
jge
roll
push
testb
jbe
push
inc
mov
cmp
pop
pop
loop
hlt
add
ds
dec
add
and
pop
mov
mov
cs
ljmp
xchg
fbstp
call
cwtl
xchg
arpl
or
pop
push
andl
pop
fcmove
jo
dec
jmp
rcrl
cmp
mov
mov
scas
jmp
fmull
or
mov
popf
out
push
scas
std
in
push
fldenv
call
xlat
mov
cmp
push
ljmp
cmpsl
xor
fsts
pop
jae
outsl
cmp
movsl
arpl
cld
mov
out
jo
cmp
mov
pop
inc
mov
mov
cmp
or
mov
pop
inc
or
scas
loope
lods
xor
jno
mov
call
lahf
add
mov
movsb
insb
or
testb
push
push
jecxz
cmpsb
in
push
adc
or
outsb
enter
mov
negb
pusha
add
stos
push
mov
jp
cltd
stos
repnz
orb
shll
stos
outsl
add
xchg
xor
push
cs
iret
std
sbb
sbb
loope
xor
dec
push
xbegin
movsl
mov
jo
push
js
mov
cmp
jbe
fs
pop
rcll
inc
out
adc
cmp
imull
nop
leave
ja
mov
addr16
dec
fcmovu
jmp
xor
cmp
out
fdivl
test
fdivl
into
daa
in
les
fs
xchg
pop
jae
jmp
add
test
dec
dec
or
inc
cmp
jb
popf
aas
lock
icebp
and
add
cwtl
cwtl
adc
test
paddusb
jmp
jnp
push
mov
clc
fisttps
sub
push
loope
fs
call
mov
faddl
rorb
xchg
dec
inc
test
imul
repnz
sahf
outsl
lret
mov
push
sub
lea
fs
dec
sti
aam
daa
push
xchg
insl
pop
stos
sbb
xchg
sbb
sti
lds
or
pushf
pop
mov
push
jnp
adc
mov
cmp
into
sbb
lea
inc
aas
js
xor
dec
xchg
or
daa
and
jb
mov
test
repz
xchg
pop
push
add
pop
iret
push
into
cs
jmp
out
fst
loopne
jge
clc
rcll
cmpsl
fs
dec
push
lcall
xor
jle
push
add
sbb
lcall
out
lcall
dec
push
dec
pop
aad
jb
arpl
lahf
pushf
lods
outsl
shrl
out
add
addr16
data16
js
xor
jnp
repz
subl
mov
sti
mov
out
jecxz
pop
xor
mov
jmp
push
and
out
cmp
cwtl
hlt
lea
ss
insb
fnstenv
lcall
mov
cwtl
popa
sbb
mov
clc
cmp
sbb
pop
jne
ja
inc
lods
jne
mov
test
push
pushf
out
dec
pop
movsb
stos
xchg
fmuls
outsb
dec
mov
mov
shl
pop
stc
inc
push
xor
or
jo
inc
cmp
nop
cmp
jge
sub
push
jbe
fildll
sti
pop
cs
push
jne
pop
cmpsb
daa
iret
rolb
mov
pop
sbb
lock
dec
mov
dec
nop
mov
lcall
mov
mov
mov
mov
xchg
mov
loope
in
pop
aam
dec
jnp
sub
shrl
sbbb
dec
sub
mov
mov
push
jle
fsts
lret
cmpsb
cld
repz
pop
and
jae
sbb
cltd
shll
jb
cltd
lea
add
pop
adc
repnz
xchg
ficoml
jle
cs
adc
cld
lea
into
mov
aas
fsubr
xchg
mov
or
inc
xchg
or
lods
nop
push
cltd
cwtl
jp
xor
ret
mov
pop
popf
xor
loopne
cwtl
sub
jo
cmp
loope
ret
mov
jb
pop
nop
dec
mov
enter
sub
pop
fwait
das
orb
aaa
jmp
xchg
fildl
aas
divb
cltd
fcmovnu
lahf
call
popa
mov
das
scas
arpl
sub
mov
lret
pop
sbb
pop
psubsw
mov
add
les
movsl
or
adc
bnd
fwait
rcrb
xchg
bound
imul
pop
mov
jo
dec
cltd
sub
ja
inc
cltd
mov
xor
mov
pushl
clc
in
jmp
xchg
sbb
leave
sti
fsubrs
push
xchg
pop
mov
add
pop
sbb
enter
test
pop
mov
fwait
pushf
bound
dec
cmp
stc
dec
popa
cs
mov
stos
cmpsb
mulb
cmp
cltd
mov
test
test
aaa
mov
shlb
xor
inc
mov
movsb
and
enter
shrl
test
out
push
push
adc
xchg
data16
fwait
xchg
cmp
xchg
adc
loopne
xchg
mov
add
adc
cmpsl
xchg
jmp
loopne
sbb
cmp
es
mov
mov
aas
adcl
jmp
jg
loopne
jl
aad
jle
movsb
imul
jno
jecxz
jnp
push
enter
lock
jb
pop
insl
push
cmp
push
xchg
push
popa
stc
adc
jae
mov
mov
jecxz
adc
pushl
mov
loope
das
in
jns
cmp
dec
jne
iret
mov
in
cmc
sbb
push
cs
push
into
cltd
aaa
sbb
cwtl
test
push
jge
mov
mov
adc
pushf
sbb
sbb
stc
fwait
mov
mov
bound
sub
shrl
int3
dec
mov
pop
lcall
das
push
cli
inc
push
in
shlb
mov
push
mov
arpl
or
imul
push
bound
les
lods
fisubs
aaa
sbb
fidivs
mov
cmp
jg
jp
mov
imul
ret
add
xchg
cmp
shl
add
in
jo
mov
add
jle
in
aam
pop
and
mov
loope
or
cmpsb
lods
fisubrl
loop
test
pop
sub
arpl
sbb
ds
mov
sbb
push
and
sbb
push
daa
into
cmpsb
xchg
addb
push
fwait
or
push
jg
into
xor
insl
inc
adc
inc
pop
idivb
or
pop
mov
pop
je
jl
mov
cmp
pop
jmp
pushf
out
sub
pop
cmp
fwait
push
mov
pop
fmull
mov
cwtl
and
dec
inc
adc
cmp
adc
adc
jb
mov
pop
dec
pusha
pop
movsl
orb
inc
cwtl
enter
add
and
gs
nopl
adc
imul
cmp
ja
fcmovne
push
fs
inc
sub
loopne
loopne
xchg
popa
sbb
dec
push
mov
and
arpl
push
pop
inc
jge
sub
dec
and
or
gs
les
lcall
in
push
ss
or
iret
push
jecxz
ret
lods
pop
sub
push
mov
test
lcall
or
adc
adc
imul
mov
xlat
aas
loope
or
lcall
shll
ljmp
inc
ja
fcoml
jns
pop
sbb
add
sbb
cmpsl
jns
lods
mov
sbb
sub
cmp
sub
mov
mov
jmp
push
xchg
inc
out
jecxz
pushf
cmp
sarb
sub
push
in
mov
xor
add
or
xchg
nop
inc
jno
es
imul
add
lock
mov
ret
xlat
jo
cmp
inc
fisttpll
movsl
add
ret
ja
add
sti
ret
shll
and
lretw
or
mov
nop
xchg
cmp
sahf
cld
stc
cmpsl
jg
leave
jns
mov
mov
es
jle
inc
pop
mov
fisttpll
pop
xor
in
cmpb
add
fmul
clc
lock
iret
cmp
and
cmpsl
iret
out
mov
icebp
in
pusha
sbb
or
dec
or
pushf
sahf
adc
add
lret
jne
cmpb
jns
push
push
sbb
outsl
out
pop
dec
jno
cmp
stos
xchg
cmpl
out
aam
cmp
xor
or
lods
or
scas
addr16
fwait
push
popl
scas
lret
add
stc
sub
in
xchg
push
insl
ja
stos
cmc
nop
in
mov
cwtl
out
ficoms
push
aas
pop
and
lret
sarb
sti
adc
out
sarb
aaa
xor
in
push
int3
mov
imul
js
mov
dec
push
mov
xor
dec
mov
movsb
insb
lahf
out
and
and
pushf
jne
lcall
movsb
fcoms
lcall
outsb
sti
and
dec
jns
fs
sbb
fsubrs
sub
xchg
stc
jnp
jne
jmp
mov
or
idivl
in
mov
jo
scas
arpl
in
fsubr
out
cmp
add
loope
dec
and
add
out
les
adc
pusha
sbbb
and
xchg
shrl
aaa
fcoml
or
pusha
test
mov
repnz
ret
popf
push
inc
imul
jno
mov
sbb
pop
stos
pop
xchg
int
add
je
pop
mov
loopne
push
inc
mov
dec
jae
loop
inc
out
pop
dec
bound
rcrl
cmp
adc
sub
hlt
inc
cmp
fisttpll
and
les
aam
jmp
lds
lea
loope
fsubr
repnz
mov
push
shll
ret
cwtl
int3
ds
xchg
loopw
out
xorl
add
insl
adc
dec
dec
add
xchg
dec
test
in
pop
pop
jge
rcr
or
insb
or
push
out
add
lea
xor
outsl
dec
adc
fldcw
test
ret
dec
cli
add
jns
push
addr16
icebp
or
fcomps
dec
cmpsl
jb
push
popl
pop
dec
xor
mov
test
test
fsts
sub
pop
jmp
sti
leave
in
hlt
or
test
leave
lret
inc
jecxz
push
push
and
mov
inc
andl
sbb
ret
or
stc
xchg
imul
fisttpl
cmc
sub
ret
add
pusha
mov
test
or
dec
jns
mov
mov
loope
mov
push
jb
mov
dec
mov
in
pop
sahf
mov
and
and
cltd
xlat
lret
cmp
loope
scas
adc
adc
nop
out
loop
push
test
call
inc
out
jmp
xor
icebp
fmuls
xor
sub
xchg
xlat
sbb
stos
ret
outsl
jg
out
xor
pushf
sub
inc
clc
movsb
cmp
adc
and
push
lret
shlb
gs
xor
test
repz
push
frstor
xor
loop
loopne
jl
mov
pop
repnz
pusha
pop
push
insb
loopne
outsl
mov
fst
mov
movsb
sbb
add
jae
sbb
adc
push
fcoms
pop
adc
or
lret
dec
dec
cmp
out
imul
addr16
inc
movsl
xchg
push
out
and
ljmp
or
aas
and
les
mov
cmp
outsl
jae
mov
js
cmc
inc
lods
loope
sti
ljmp
fsin
sbb
xor
mov
pop
pop
push
and
imul
outsb
add
int
fstl
repz
or
xor
xor
add
lcall
popf
adc
inc
lret
sahf
adc
insl
sahf
pop
stos
es
std
xchg
gs
dec
cmp
inc
movsl
jo
jnp
ja
mov
fidivs
mov
bound
jno
cwtl
scas
cmp
inc
rcrb
insl
into
dec
jecxz
lret
xlat
js
inc
xchg
mov
inc
add
sub
push
cwtl
cmp
outsl
jo
jbe
or
cmp
fidivrl
or
lods
test
cs
cmp
nop
insl
mov
xlat
sarl
fdivl
pushf
and
ss
rcrl
je
cmp
xchg
mov
xor
cmpsb
daa
and
pop
adc
push
cmp
ds
sub
pop
int3
mov
cmp
push
fwait
sub
out
stos
out
outsb
cld
aaa
mov
lahf
insl
jne
xor
into
insb
dec
cli
mov
add
pop
fisttpl
mov
cmp
test
negb
insl
push
fbld
sub
daa
pop
aaa
or
aam
std
push
mov
fnstsw
repz
xor
adc
lret
imul
lods
xchg
mov
shlb
and
sbb
mov
pop
jp
xchg
out
das
sar
lods
loop
in
jae
adc
mov
scas
repz
sub
sbb
or
ret
jns
push
iret
ret
enter
fidivs
std
add
xchg
pushf
pop
mov
mov
inc
pop
sub
arpl
pop
adc
pop
insb
das
fwait
dec
cltd
inc
dec
iret
inc
arpl
or
icebp
pop
dec
sub
push
lcall
sbb
popf
mov
fdivs
test
dec
sarb
outsl
pop
shr
cmp
and
sbb
mov
mov
fisubrs
xor
jle
push
adc
sbb
dec
mov
test
inc
mov
mov
pop
insl
subl
pop
or
inc
jno
sbbb
sbb
and
call
nop
dec
sbb
inc
or
and
mov
mov
mov
jmp
cmp
clc
lahf
shll
mov
and
push
jp
inc
rorb
shrb
adc
test
lods
in
add
andl
inc
loope
fistpll
int
xchg
enter
cmp
inc
div
xchg
ss
fdivrs
jne
cmp
adcb
dec
jnp,pt
lods
enter
loop
clc
popf
mov
pop
lahf
pop
sbbl
pop
icebp
rcl
xor
push
loop
test
aad
cmp
jle
adc
std
shl
daa
stos
fidivrl
pop
out
js
arpl
mov
rcll
out
push
dec
adc
pop
xchg
mov
out
popl
das
pop
imul
or
and
cmpb
jmp
adcl
xor
bound
loop
shll
ret
inc
outsl
ja
sbb
testl
mov
iret
xor
mov
inc
ja
push
loop
adc
scas
mov
pusha
mov
pushf
ja
or
cmpsl
push
movb
add
lds
dec
adc
cmp
out
sbb
xlat
jmp
pusha
insb
ja
frstor
mov
fwait
push
sub
jb
lret
cmp
mov
test
mov
push
and
fildl
pop
outsl
aad
subl
mov
mov
ficoms
push
fisubrl
mov
inc
dec
push
mov
jp
add
push
lods
push
jo
and
mov
xor
sub
cmp
and
pushl
jnp
jbe
pop
sub
adcl
loop
es
xchg
icebp
mov
test
imul
sarl
jns
stc
push
adc
pop
fcmove
adc
insl
cld
jbe
sub
sbb
push
sahf
fimull
inc
mov
lds
adc
sbbl
jmp
or
mov
cltd
scas
stc
test
xchg
cmp
or
popa
stc
cltd
pusha
incl
mov
popf
repz
insb
push
insb
push
je
pop
sub
lock
pop
jno
movsl
jg
push
cmpsl
mov
int3
xchg
xor
jae
inc
xchg
shl
mov
sub
clc
test
mov
xchg
aaa
inc
push
test
adc
mov
dec
push
jae
jae
fcompl
scas
jmp
repz
ljmp
adc
jmp
cmpsb
aaa
nop
add
xor
jl
mov
cwtl
jmp
lods
stc
mov
mov
and
test
fwait
push
ja
test
mov
sbb
test
inc
pop
xchg
xorl
idivb
mov
inc
or
lret
cmp
gs
cmc
mov
adc
testl
gs
fisubl
xor
sbb
movl
inc
ds
ret
aad
daa
fcmovnbe
lds
movsl
mov
loop
lds
jo
int3
nopl
int3
cld
shl
pushl
mov
push
mov
adc
xor
xchg
and
lahf
dec
dec
test
push
test
sub
sbb
xor
add
jle
add
ss
push
std
loop
lds
ret
sbb
jmp
mov
mov
add
cmpsl
popl
pop
mov
mov
jbe
lock
and
mov
mov
call
xchg
xchg
stos
lods
into
insl
jae
pop
and
sbb
mov
pop
sub
cs
popf
rclb
mov
in
mov
ja
mov
add
stos
mov
movsl
pusha
mov
repnz
or
pushf
icebp
out
and
sbb
sti
sbb
adc
lret
push
jecxz
adc
stc
mov
lret
pop
into
in
cmpsl
sub
xchg
mov
sbb
push
ss
push
lock
lahf
jmp
sub
test
jp
inc
add
jne
sbb
xlat
inc
mov
mov
mov
clc
mov
mov
ss
fcomp
jp,pt
repz
sub
js
push
sub
push
repnz
insb
stos
push
pusha
stos
push
cli
push
jns
push
and
out
fimull
loopne
loope
out
popf
mov
les
sbb
dec
dec
loop
mov
jne
cmpb
test
push
popf
sub
sub
push
cmp
xchg
push
in
inc
movsl
jo
fcmovnb
xchg
xor
loop
cmp
dec
cwtl
adc
inc
test
lods
pop
dec
mov
test
lods
sbb
repz
sti
mov
out
inc
sbb
repz
and
stc
pop
addr16
es
xchg
stos
out
jnp
or
xchg
sub
push
push
ret
sub
nop
or
insb
sbb
sub
jle
adc
stc
dec
cmp
shrl
jmp
in
je
ss
lods
pop
fwait
push
shlb
popa
adc
faddl
outsb
xchg
xor
add
add
test
cmc
ss
push
cmpsl
mov
cmp
xlat
add
ret
subl
pop
inc
pop
fucom
fadd
adc
jg
sbb
add
scas
cmp
test
sbb
mov
in
inc
xchg
lea
inc
movsl
nop
dec
and
dec
push
ja
test
jg
jo
push
mov
add
pop
sub
call
add
mov
xchg
ret
xchg
inc
cmp
fscale
mov
out
push
shrb
mov
popa
out
cld
adc
xlat
xlat
inc
or
pop
adc
push
test
pop
lods
adc
push
pop
add
inc
subl
mov
adcl
xchg
cmc
stc
or
daa
dec
incb
das
push
push
aaa
mov
pop
dec
jb
mov
outsl
pusha
or
pop
test
call
clc
fidivs
xlat
jnp
sub
jne
clc
test
or
inc
scas
dec
ja
lock
es
cmp
jno
sub
aad
inc
hlt
push
xchg
cmc
xor
out
xchg
adc
xchg
rorb
add
mov
imul
xchg
cld
ds
mov
mov
into
jno
and
mov
je
or
sbb
push
fwait
nop
push
jnp
bound
cmp
popf
mov
icebp
out
pop
aam
outsb
push
pop
jb
pop
in
nop
jp
sbb
in
repz
push
pop
pop
push
add
jb
loopne
xor
pop
and
or
cld
mov
mov
mov
inc
testl
cmpl
stc
adc
and
sub
and
out
mov
les
sbb
ss
insl
loopne
cmp
add
jl
cmpsb
sub
cmp
and
add
or
mov
popa
push
mov
and
cmc
sti
xor
popa
popl
xchg
fildl
pushf
pop
imul
sbb
sbb
in
popa
or
rsqrtps
aaa
push
faddp
push
test
mov
outsl
aad
add
push
xor
add
outsb
sub
jmp
jecxz
sub
jnp
dec
imul
lret
popl
dec
into
and
mov
and
loope
adcl
into
xor
lret
in
js
mov
mov
xchg
pop
js
mov
movsl
adc
int
xor
in
or
bound
into
repnz
pusha
out
cmp
cmp
inc
sbb
lret
fwait
mov
inc
pushf
pop
addr16
jb
leave
hlt
enter
adc
hlt
push
call
jne
rcrb
jo
and
jo
test
sbb
add
and
mov
or
cmp
cs
imul
scas
leave
and
dec
or
jno
inc
xor
sub
pop
sti
incl
call
daa
and
stos
ljmp
mov
es
cmp
inc
insl
add
xlat
data16
aad
jecxz
ljmp
imul
inc
sub
mov
addb
mov
nop
in
loop
push
and
push
icebp
imul
sarl
stos
push
jecxz
sub
scas
adc
pop
dec
test
adcb
cmc
or
andl
test
stos
jo
xchg
fstps
cmpsl
add
xlat
pusha
negb
add
mov
mov
mov
jl
push
test
jg
arpl
xor
lret
std
leave
in
mov
gs
adc
cmp
subb
dec
cmpsl
dec
jnp
ljmp
not
scas
add
fwait
inc
test
push
cs
testl
jb
mov
mov
imull
ss
dec
mov
cld
lock
leave
xchg
roll
or
push
pusha
pop
js
movb
mov
push
test
xor
hlt
cmpsl
pop
testl
pushf
mov
push
fistps
rolb
repnz
call
in
mov
shlb
nopl
or
mov
xor
mov
jl
mov
add
xor
pushf
jbe
stos
mov
push
insl
out
mov
imul
push
insb
adc
in
mov
aad
sbb
lcall
mov
add
xchg
roll
sub
mov
push
fidivrs
dec
xlat
sti
sbb
sbb
inc
and
fstpl
outsl
push
xchg
mov
add
mov
gs
add
aaa
dec
or
mov
fisttpll
fidivl
cmc
ss
pusha
mov
cld
mov
pop
push
cli
push
push
loop
das
insl
jp
fs
fildll
sub
xchg
ficomps
mov
mov
int
gs
dec
push
mov
inc
fcmovnb
sbb
imul
xor
xor
or
popa
dec
aad
ljmp
and
dec
sbb
repnz
jno
out
icebp
dec
sub
dec
mov
lcall
cmp
cmp
sub
push
push
mov
insl
mov
sub
xor
jb
lcall
js
lods
dec
int
inc
test
mov
ret
sub
sub
push
loope
call
push
out
loop
add
sbb
mov
push
mov
stos
adc
rcrb
dec
dec
clc
jne
push
jle
cmp
add
or
int
cmp
rcll
cmp
inc
xchg
lea
arpl
sti
mov
xlat
dec
lret
sub
mov
mov
jmp
repnz
outsl
aad
add
or
es
repnz
ret
cld
hlt
xor
cmp
repnz
dec
inc
std
fldenv
push
lret
mov
leave
mov
cmp
scas
jnp
repz
rorl
mov
fs
ja
sbb
mov
movsb
icebp
jle
mov
add
dec
lock
mov
jg
xchg
mov
iret
xor
xor
adc
lcall
rcll
mov
sbb
xchg
gs
mov
mov
dec
push
jno
test
and
or
xchg
inc
rorl
sahf
into
leave
mov
bound
xchg
jmp
push
mov
or
dec
mov
push
repz
popf
stos
int3
mov
bound
jne
es
data16
fldenv
fs
gs
sahf
loopne
int
nop
sub
add
cld
scas
and
ss
pop
cmp
jmp
lret
pop
dec
mov
xchg
sbb
jb
jle
cmp
fwait
ret
jb
xor
cmc
add
and
push
sub
shl
and
loope
mov
xor
mov
xchg
inc
or
dec
inc
sbb
scas
stos
xor
std
or
frstor
in
cmp
hlt
sahf
fs
test
loope
add
mov
lods
mov
jp
xor
or
fwait
testl
stos
fs
sub
inc
and
sahf
jecxz
mov
in
dec
scas
popa
sbb
inc
xor
push
xor
rcr
mov
jne
in
mov
sbb
lock
fidivrs
mov
push
mov
mov
push
mov
popf
cmp
imul
or
sub
push
dec
cld
in
sub
movsl
jns
add
iret
xchg
push
mov
loopne
or
cmp
pop
mov
daa
rolb
jmp
inc
enter
add
sti
mov
nop
repz
jne
xor
daa
mov
dec
enter
repz
mov
mov
mov
sbb
ficomps
out
addr16
pop
popf
inc
push
scas
jp
cmp
lahf
and
inc
and
sbb
lods
push
fldenv
ja
arpl
shl
sbb
and
int3
iret
shrl
into
sbb
popa
cmc
aaa
xor
sbb
cld
imul
rorb
mov
pop
shll
mov
inc
cmc
mov
add
jb
in
in
jmp
sbb
add
or
sbb
imul
stos
insb
mov
rorl
ja
bound
xor
jns
cmp
pusha
movsl
xchg
push
add
cmpsb
jbe
xor
jb
dec
cs
dec
jnp
push
lods
stc
dec
cs
mov
mov
mov
cs
jge
cld
xchg
ffree
cmpsb
mov
divl
sbb
xchg
sub
or
sti
pop
lret
mov
shll
lock
out
repnz
dec
add
adc
enter
mov
push
movhps
outsl
inc
jg
test
arpl
sbb
inc
inc
int3
sbb
mov
rcrl
cmc
inc
shll
scas
or
bound
mov
popa
lock
mov
xchg
rcr
sbb
idivb
sbb
mov
inc
xor
ja
inc
pusha
jge
popf
jnp
add
push
inc
cmpl
fcmovnbe
pop
inc
gs
mov
mov
in
pusha
cmp
mov
inc
push
dec
cli
lcall
pop
push
fcmovb
pop
cmp
ret
or
push
fs
push
mov
push
cmp
das
jno
in
arpl
push
popl
pop
sbbl
jg
stos
inc
cmp
pop
lods
xor
adc
outsb
adc
xor
gs
mov
popw
leave
test
addr16
sbb
pushf
fldl
jbe
dec
adc
mov
stos
mov
push
lcall
in
mov
dec
sub
rcll
scas
movsb
mov
loopne
pop
xor
xor
jno
pushf
cmp
shrl
xchg
or
push
ret
sbb
pop
loope
cmp
vhaddps
dec
inc
pop
pop
mulps
sbb
fcos
test
xor
dec
repz
mov
pop
mov
stc
andl
aad
sar
jo
inc
imul
sbb
sub
imul
mov
jo
mov
mov
or
jmp
jne
xchg
jmp
sar
xchg
add
mov
sub
outsb
out
inc
push
jmp
out
push
jns
das
adcb
dec
stc
mov
mov
mov
dec
insl
xchg
cmpsb
out
ljmp
push
sub
sbb
cs
test
mov
adcl
lods
cld
inc
push
ja
aas
leave
cwtl
xchg
mov
dec
jae
mov
cmpsb
xchg
and
dec
xor
lcall
lret
stos
in
sub
mov
mov
test
push
jo
xchg
aad
gs
leave
sub
pop
jnp
and
cmp
movsb
cmp
mov
gs
mov
data16
mov
sbb
arpl
ds
daa
add
pop
or
test
in
dec
in
adc
mov
test
adc
fwait
pushf
xchg
push
pop
jbe
lock
mov
mov
int
xor
xchg
out
ja
cmp
popf
incl
les
sbb
pop
sarb
push
stos
enter
js
out
sti
sub
in
out
ss
inc
jmp
jp
xor
cmp
in
xchg
sahf
add
xor
repz
ror
push
rorb
and
lods
push
mov
lret
sbbb
sahf
cmpsl
lcall
lods
shl
andb
mov
mov
xor
push
addr16
outsl
mov
pop
adc
mov
jmp
push
out
and
mov
xor
popa
xchg
xor
testl
dec
pushf
pop
cltd
xchg
ficompl
mov
mov
push
mov
jbe
adc
mov
sti
sbb
jae
loop
lahf
dec
pop
fstp
mov
mov
inc
cmp
jle
cli
imulb
sbb
shrl
or
loop
lea
adc
inc
sbb
dec
pusha
or
xlat
aam
xchg
outsb
inc
sub
shrb
xor
jle
shll
pop
stos
push
adc
cmc
shlw
je
sbb
and
cmc
jmp
xor
xchg
mov
iret
mov
xchg
gs
jp
xchg
adcl
push
les
xchg
bnd
imul
test
in
mov
jl
dec
fstpl
dec
jmp
ret
arpl
adc
daa
sub
push
xchg
mov
and
fimull
shlb
xchg
sbb
mov
mov
mov
jecxz
inc
xchg
or
sub
cmp
mov
scas
push
loop
filds
xchg
outsb
adc
stos
or
cs
sbb
movsb
insb
aam
fnstcw
icebp
jge
loop
les
outsl
scas
ss
aam
loop
sub
mov
cld
mov
lahf
repnz
xor
addr16
jo
fsubp
cltd
leave
loopne
mov
out
popa
mov
add
in
imul
arpl
mov
adc
sub
js
rorl
aad
mov
inc
js
in
inc
aaa
sbb
push
in
mov
ljmp
jp
cmp
xchg
addr16
or
mov
sub
lods
aaa
add
sbb
outsl
stos
sub
stc
push
faddp
mov
popf
mov
call
ficoms
or
mov
sub
cmpsl
mov
je
mov
xchg
inc
push
xchg
mov
jo
test
fdivs
jl
jno
pushl
arpl
js
pop
or
cltd
rcrl
cmp
int
stos
int3
push
push
lret
loop
rcrl
out
cs
adc
insb
add
lods
push
and
arpl
pop
push
das
inc
inc
mov
call
and
jp
fs
or
mov
push
push
hlt
jae
inc
sti
sahf
hlt
pop
shlb
int
xchg
add
add
mov
xchg
xchg
test
fwait
xchg
or
scas
pop
les
das
int3
fildll
sub
sub
push
inc
push
shlb
sub
dec
aam
push
adcb
and
fidivl
mov
add
shlb
jo
sub
and
mov
int3
jmp
sub
popf
mov
cmp
push
jno
cltd
mov
in
inc
or
push
add
dec
iret
sub
sbb
aam
shrl
clc
push
mov
mov
mov
shlb
add
inc
xor
imul
sub
xchg
or
adc
inc
inc
and
mov
push
cmp
gs
movsl
adc
loope
mov
pop
sti
or
bts
negl
lret
pop
mov
jns
testl
adc
mov
jb
xchg
inc
and
sbb
aad
stos
pop
jle
xchg
xchg
dec
out
xor
mov
cmp
add
and
adc
mov
addl
add
mov
pop
aaa
pop
scas
jno
jmp
sbb
pop
in
insl
fucom
jl
dec
leave
add
and
mov
xor
outsl
sbb
es
pop
iret
and
or
lahf
cmp
loop,pt
lea
mov
adc
jmp
jno
and
pop
mov
jmp
pop
jecxz
push
scas
push
cli
mov
lds
repz
ja
ja
fcos
dec
aaa
shlb
adc
out
enter
fwait
mov
scas
sub
jno
daa
lea
pop
jbe
stc
push
insb
cld
leave
mov
fcomps
rorb
lahf
push
push
cmc
jge
cmp
das
into
stc
add
frstor
and
cld
xchg
out
imul
sbb
adc
and
mov
loop
add
cld
inc
xor
jns
out
adc
sbb
fs
lret
ss
mov
stos
adc
push
pop
jecxz
push
add
movsb
inc
mov
jae
cmp
mov
jle
mov
jg
push
mov
mov
push
push
xlat
jne
aas
into
rclb
insb
and
pop
cmpsl
pop
mov
inc
push
xlat
jno
clc
sub
sub
jge
cmp
xchg
fwait
in
xorb
or
mov
fs
cmp
aas
pop
adc
sbb
pop
push
imul
or
test
xchg
mov
mov
repz
dec
test
mov
add
sub
jg
shlb
rclb
cmp
mov
outsl
cmp
cmp
xchg
mov
jg
outsb
fldl
lret
jo
fmull
jnp
out
pop
mov
xchg
xchg
mov
arpl
adc
xchg
test
xchg
loopne
pop
leave
imulb
xchg
lcall
pop
mov
jne
xor
test
jne
cmp
xchg
sbb
out
and
clc
push
iret
jae
dec
insl
cli
jns
fldenv
out
inc
and
das
cltd
inc
xchg
out
sub
sub
pop
cmpsb
shlb
sahf
and
inc
xchg
mov
mov
push
ja
das
jmp
adc
ja
mov
xor
sbb
lds
xor
mov
lahf
test
jbe
jecxz
cmp
pop
gs
movsl
lret
mov
movsb
add
into
in
and
stc
inc
sub
xchg
cmpsl
mov
fisttps
std
and
daa
andb
mov
insl
xor
pop
fwait
clc
or
arpl
dec
fs
push
cmpsl
mov
sub
dec
int3
icebp
adc
lret
mov
call
mov
fisubrs
xchg
test
shrb
mov
movsb
jae
mov
cld
xchg
push
xchg
inc
push
mov
add
mov
das
roll
xor
adc
les
cmp
js
push
fsubrl
push
and
mov
pop
sub
xor
btc
dec
das
test
fsts
iret
add
cmpsb
mov
jbe
push
test
lahf
mov
and
scas
fcoml
pop
fiaddl
int
xchg
and
adc
sti
es
sti
pop
rol
xchg
adcl
sbb
xchg
out
and
and
sub
add
inc
jno
push
xchg
dec
inc
sub
cmp
add
test
and
popa
repz
mov
xchg
lret
insb
push
test
cmp
cmp
push
fbstp
sbb
xchg
lods
cmp
fstpl
push
sub
das
sbb
outsb
dec
sub
jmp
mov
push
mov
lds
inc
rorl
iret
adc
adc
and
inc
pop
mov
cmp
pop
cmp
adc
mov
jno
repnz
pop
mov
movsl
adc
and
dec
mov
xchg
mov
test
sbb
fnsave
jns
mov
mov
push
mov
mov
mov
sub
xchg
or
cmp
imul
cld
pop
faddl
fimull
movsl
pop
xor
enter
ss
enter
pushf
mov
cmp
addl
xor
ds
in
add
mov
movsb
clc
xor
cmp
jecxz
push
bound
dec
lods
movsb
pop
repz
jg
mov
leave
mov
push
jnp
hlt
ja
push
popf
dec
cmp
or
jg
mov
sti
iret
cmc
shll
add
std
insl
xchg
mov
pop
push
jl
xchg
ds
jmp
sbb
dec
dec
cmpsb
push
aam
mov
xchg
inc
sub
pop
addb
aam
xor
mov
mov
adc
jbe
mov
sub
sbb
rclb
xchg
aas
push
add
inc
das
and
mov
pop
dec
bnd
cmp
jg
xchg
add
push
or
cld
in
int3
nop
ja
jbe
repnz
adc
fildl
fcoml
arpl
pop
cli
sbb
cmpsl
hlt
inc
mov
mov
shlb
clc
in
or
push
out
lods
push
pop
mov
lods
js
and
inc
lcall
sbb
shl
insb
es
mov
jge
insb
ja
jnp
jl
cmp
or
pop
xchg
arpl
xchg
dec
mov
fistl
dec
scas
pop
mov
mov
in
dec
adc
dec
inc
sub
or
clc
rcrl
mov
push
xor
aas
sarb
mov
or
sbb
imul
sub
bound
cwtl
icebp
push
cmpl
addr16
push
sbb
ret
inc
add
out
pushf
sbb
cmc
daa
int3
and
mov
in
into
and
movsl
xor
inc
jmp
sub
sbb
cmp
jl
mov
jle
sub
cmp
jecxz
es
cli
mov
mov
scas
mov
dec
inc
push
out
jmp
mov
mov
out
pop
fidivrs
test
adc
jp
data16
neg
cmp
mov
lea
jae
pop
xor
call
scas
fnstenv
sti
andb
mul
xchg
addr16
jae
shrl
insl
sub
or
into
pop
je
imul
aad
flds
jns
cmpsb
pop
mov
fimull
xchg
sbb
sti
mov
jns
pop
fldenv
push
mov
fsubrs
inc
sbbb
cmpsb
mov
cwtl
adc
lods
mov
imul
in
dec
xchg
add
cs
xchg
pusha
lcall
or
movsb
int
in
repnz
dec
add
xor
push
push
fcmovu
test
or
or
inc
adc
clc
repnz
lods
imul
arpl
test
or
sbb
out
sbb
inc
xchg
pop
in
mov
pusha
lods
jle
jae
mov
lock
rcr
stos
das
dec
cmp
sarb
xor
orb
push
sbb
jae
or
and
or
inc
jl
js
andb
jno
sahf
in
adc
xlat
out
mov
test
repz
mov
lods
cmp
sub
add
sub
mov
sbb
adc
push
js
mov
push
xchg
pop
aas
push
mov
mov
insb
shl
adc
xchg
push
repnz
fxch
aam
sbb
sbb
pop
or
mov
pop
xor
lods
inc
hlt
gs
add
cmp
adc
pop
mov
push
cld
nop
mulps
mov
mov
orl
les
sbb
test
icebp
sti
xchg
sti
shlb
pop
nop
push
xchg
fldt
jne
scas
icebp
popf
clc
jno
rorl
mov
int
ret
mov
in
fimull
jae
imul
xchg
mov
iret
scas
lds
mov
lds
adc
hlt
mov
inc
xchg
sub
jmp
in
sbb
insl
add
test
out
sbb
iret
pop
jnp
bound
sub
in
fidivl
xor
seto
inc
mov
push
cmp
popa
adc
rcrl
jle
addr16
test
cmc
in
push
or
sbb
jbe
xchg
dec
fsubrl
std
cmovle
iret
daa
cmp
mov
mov
gs
imul
xchg
jne
inc
test
sbb
lea
push
jl
xchg
cld
lret
pushf
sahf
out
repz
mov
lret
mov
fs
add
notb
dec
lods
add
fdivrl
movsb
test
and
push
xor
jge
bound
in
jle
mov
xchg
cmpsl
sbb
xchg
mov
cwtl
mov
xchg
test
mov
sbb
enter
xor
cmp
popf
shl
xorb
mov
das
and
xchg
xchg
pop
iret
jns
pusha
and
imul
data16
dec
adc
fists
sbb
or
mov
adc
push
dec
or
dec
mov
or
mov
xchg
in
mov
mov
lret
cmp
push
cltd
mov
push
mov
notl
adc
mov
xchg
inc
shrb
push
sbb
test
xor
scas
lock
fisubrs
mov
xor
push
ret
mov
out
pusha
jg
out
add
mov
mov
pop
cmp
xor
mov
inc
jae
mov
mov
cmp
lods
jbe
pop
cltd
xchg
lds
pop
sub
pop
mov
mov
rolb
sbb
ljmp
and
fwait
in
mov
out
and
aas
mov
lret
add
and
sub
xor
or
sub
xchg
dec
cmc
rorl
jo
imul
repnz
data16
and
outsb
loopne
mov
sbb
add
xor
xchg
jp
shll
nop
in
dec
nop
in
mov
test
mov
or
cmp
cmp
scas
fldcw
orb
rcl
mov
pushf
daa
pop
xchg
into
dec
lods
sbb
movsl
pushf
outsl
je
movl
das
push
mov
fsub
jne
das
or
repz
xchg
pop
xchg
rorl
xor
rclb
imul
adc
or
cmp
lcall
movsb
cwtl
sti
ljmp
lods
cmpsb
pushf
iret
pop
pop
ret
pop
cmp
leave
mov
icebp
mov
jbe
lcall
cvtdq2ps
xor
jg
push
mov
xchg
jb
mov
test
addb
ds
cs
sbb
out
mov
imul
leave
push
push
xor
adc
mov
ljmp
leave
mov
cltd
pop
mov
and
push
jae
jno
push
movsl
lock
sub
jecxz
mov
sbb
fdivs
rcrl
call
leave
daa
jl
dec
sbb
aas
and
orb
mov
mov
or
mov
sahf
xor
lea
mov
mov
push
and
scas
mov
and
cmp
test
enter
iret
push
dec
jge
je
fistl
xor
adc
cmp
push
push
mov
mov
rorl
jp
pop
or
fs
adcl
gs
and
mov
leave
mov
bound
pop
inc
shrb
outsl
sarl
pop
cmc
push
out
inc
lret
enter
jo
dec
arpl
pop
jmp
cmc
rorl
pop
sub
psrlw
push
test
push
rcrb
loope
std
sub
fmuls
ss
push
hlt
fadds
ret
mov
cmc
fnstcw
dec
lock
aas
add
sbb
jne
inc
cmp
add
adc
mov
jnp
test
mov
int
aad
inc
push
dec
setge
inc
jl
push
dec
rclb
push
cmp
sbb
or
sbb
xor
bound
int
inc
imul
add
jmp
fbld
and
dec
std
pop
mov
xchg
lret
out
cmp
or
jecxz
shr
dec
fdivs
in
ss
aam
dec
movsl
jbe
pop
mov
cmc
inc
mov
int
frstor
lret
mov
add
cwtl
mov
sub
pop
fs
pop
bound
arpl
test
inc
test
dec
jno
test
adc
sub
in
jecxz
loope
or
cmp
inc
xchg
scas
xchg
push
out
lods
out
dec
jp
jmp
xor
or
cmp
mov
daa
mov
fcoms
ret
int3
mov
test
mov
ljmp
and
sub
lods
ja
mov
mov
mov
or
cmp
test
aas
fucomip
mov
sbb
cli
outsl
sbb
adc
out
fld
in
imul
aaa
dec
enter
xchg
repnz
dec
xchg
out
jae
fcmovnu
insl
or
and
jp
and
scas
cwtl
inc
roll
dec
sti
nop
mov
adc
sbb
cmc
test
repz
jecxz
mov
inc
push
mov
fistl
aaa
cmpsl
sbb
jecxz
add
call
or
or
lock
fldcw
xor
jne
and
mov
fcmovbe
dec
outsb
inc
or
orb
adc
sti
dec
lret
out
inc
imul
or
inc
stos
scas
cltd
je
adc
aad
mov
fs
jge
jo
bound
mov
xchg
loope
jmp
push
imul
cli
ret
in
repz
mov
mov
lahf
sub
les
xor
movb
sbb
cmp
sub
into
clc
mov
out
and
jmp
sub
inc
xor
lcall
and
mov
mov
mov
dec
sub
ljmp
iret
dec
addr16
mov
loop
cmpsl
inc
xrelease
inc
pop
mov
mov
xchg
xor
push
sbb
and
sar
push
scas
test
fld
mov
lahf
cmp
inc
push
pmulhw
scas
clc
sbb
jg
inc
lea
adc
mov
push
out
sub
push
mov
mov
test
call
xor
jb
lret
push
leave
mov
pusha
repz
sbb
sbb
cmpsb
adc
in
pop
cltd
aam
ficomps
repnz
je
push
das
fs
cltd
push
in
jns
sub
filds
adc
push
fidivrs
das
fists
mov
add
add
pop
cwtl
mov
gs
xor
test
ficomps
lret
lret
lcall
rolb
jnp
nopl
sub
sbb
movsl
jg
mov
pop
bound
popf
add
data16
jns
ficoms
in
ret
mov
lods
loope
sbb
leave
call
cmpsl
ds
sub
push
cmp
stos
mov
jmp
int
fstpt
cmpsl
mov
insb
addr16
outsl
push
mov
call
nop
lea
arpl
stos
inc
out
pop
jns
and
iret
dec
jg
cmpsw
jp
jge
xchg
outsl
add
ret
adc
nop
add
push
int
ja
fcmovnb
xchg
or
repz
sbb
push
dec
dec
popa
lret
std
sbb
lret
shr
test
in
or
cmp
aam
adc
sbb
xlat
aad
cmpsl
sbb
adc
jl
sbb
mov
das
pop
push
cmp
aaa
fwait
mov
push
aas
inc
ret
fucomi
cld
std
pop
sub
xchg
cmp
int
cmp
lea
lock
push
push
xchg
out
push
pop
iret
test
loop
inc
jnp
jo
iret
xor
xchg
movsl
ds
pop
hlt
sub
aad
movsb
or
lahf
int
sbbl
mov
pop
enter
jmp
mov
mov
sub
iret
mov
add
ret
test
mov
mov
and
jo
sbb
fistl
push
mov
jecxz
fisttps
popa
cmp
jae
inc
orl
push
sbb
fidivl
stos
inc
aad
popf
or
popa
mov
fstl
das
xchg
sbb
fldcw
mov
sbb
add
adc
stos
pusha
and
aad
add
mov
xor
adc
movsl
stc
mov
popa
jnp
inc
fwait
pop
push
loop
loop
rcll
mov
subb
lret
sub
shlb
pop
mov
pop
out
dec
mov
fwait
adc
or
dec
js
pop
xor
out
cld
rcrb
cltd
push
addr16
scas
std
call
mov
jl
xchg
pop
mulb
je
orl
out
sbb
push
jl
sar
add
out
in
pop
cwtl
xchg
loopne
push
call
fcom
sbb
cmp
xchg
xor
insb
xchg
lcall
mov
out
pop
sub
mov
cmpsb
xlat
or
daa
cld
aam
sbb
sub
das
iret
xor
push
and
stos
fucomp
mov
jne
pop
cmovae
sub
push
cmp
das
sub
imul
cmpsl
add
adc
out
ja
sub
fidivrs
pop
jle
xor
ffreep
sti
or
xchg
lea
mov
mov
bound
xor
pop
mov
enter
into
adc
int3
fwait
adc
stos
add
daa
and
jnp
pop
push
xchg
in
out
inc
popa
cmpsl
jae
xor
lcall
or
mov
pop
jg
dec
xchg
test
mov
xor
mov
imul
pop
mov
and
scas
cmpsb
iret
lahf
out
test
out
pop
andw
loopne,pt
and
pop
imul
cltd
shl
push
das
cmpsl
scas
mov
dec
inc
std
mov
rcll
dec
pop
shrd
jo
cli
dec
lahf
aas
mov
and
push
or
or
push
push
and
inc
pusha
enter
mov
push
dec
mov
cmp
and
insb
jl
ss
mov
les
add
lods
mov
lock
cmpsb
jbe
sub
sbb
adc
ja
loopne
or
rcrb
lret
pusha
negl
lahf
mov
and
rcrb
in
mov
xor
test
movsl
mov
incl
icebp
add
stos
cld
das
dec
movsb
add
clc
and
jmp
shl
bound
popl
cmc
outsl
dec
adc
hlt
ficoml
and
int
test
add
pop
fdivs
std
rcrl
cmp
pop
int3
imul
js
outsb
js
pop
xchg
negb
nop
xor
test
xchg
or
jns
cmc
pop
mov
add
lcall
pushf
adc
les
jns
clc
push
and
test
loope
inc
pop
jle
aad
data16
stos
aad
outsb
xor
mov
jbe
inc
push
imul
test
sbb
add
popf
cmpsl
mov
jg
imul
push
shl
in
js
mov
div
inc
jle
ret
xchg
add
popl
in
dec
sub
ret
mov
pop
adc
xchg
cwtl
gs
dec
pushf
sub
inc
and
scas
mov
addr16
cli
fs
push
xor
je
inc
call
aas
cli
mov
aaa
jne
mov
mov
loop
mov
add
icebp
arpl
sub
pop
mov
jne
inc
dec
stc
popl
jb
lods
dec
nop
xchg
sbb
repnz
jae
push
les
adc
dec
jne
imul
jle
fsubrp
mov
mov
jecxz
xchg
dec
ror
fcomps
cmpb
push
dec
jns
lcall
mov
jb
pop
rcl
mov
pop
sbb
fwait
clc
stos
adcb
mov
xchg
xor
insb
insl
outsl
mov
inc
jnp
imul
sub
icebp
data16
jo
lea
dec
icebp
mov
sti
sbb
scas
les
jbe
les
dec
dec
scas
popa
jp
into
addr16
bound
dec
lds
lea
enter
inc
push
pop
mov
les
inc
adc
ret
sub
adc
jb
and
xchg
or
mov
add
mov
mov
repnz
inc
ffreep
aad
rorl
pop
mov
xchg
jae
leave
dec
test
mov
adc
clc
sub
icebp
in
inc
jae
push
daa
insl
aad
pop
cmp
rcrl
or
insl
stc
inc
push
xlat
pop
xor
mov
movsb
mov
xlat
cmp
pop
xchg
out
movb
adc
lods
push
add
fdivr
ret
stos
mov
test
cmp
cmovns
adc
cli
xchg
xchg
aam
js
pop
fbstp
push
sub
js
aam
cmc
add
cli
cmp
nop
bound
sub
jns
add
jge
xchg
xor
jge
enter
stos
mov
or
repz
sub
cli
mov
insl
mov
into
stc
mov
jae
cmp
push
or
inc
add
xor
stos
lods
stos
outsb
adc
pusha
in
xor
out
push
sub
stos
cmp
les
pop
jbe
xlat
or
ret
decl
add
test
dec
or
jae
out
push
push
test
sbb
add
stos
mov
sti
pop
test
or
dec
mov
filds
cmpsl
mov
lret
loop
xchg
adc
test
aam
mov
mov
in
outsl
scas
inc
shll
out
xor
mov
inc
and
adc
inc
shll
data16
scas
loopne
mov
fstpt
inc
mov
mov
jno
sub
push
xor
jg
mov
push
sbb
dec
inc
jne
and
das
sbb
pop
jns
daa
jne
push
mov
je
mov
in
idivb
lcall
mov
cmpb
pop
rorl
fs
cmc
cwtl
stc
insl
dec
mov
cmc
mov
pop
pop
and
cmp
repnz
pop
mov
in
mov
sbbb
jecxz
orb
pop
add
push
mov
mov
fsubs
imul
add
jnp
pop
add
std
dec
inc
mov
popf
out
dec
repnz
lret
out
sahf
outsl
mov
cmp
push
or
add
cmp
jle
sbb
fcomps
cmp
jb
out
inc
push
mov
negl
mov
add
icebp
mov
fimuls
mov
mov
mov
sbb
mov
push
clc
adc
mov
shll
loop
cmp
into
shl
xchg
imul
adcb
xorl
les
in
cld
or
and
movsl
mov
sbb
data16
and
adc
nop
xor
pop
stc
ss
icebp
imul
add
jmp
out
insl
std
dec
test
js
push
subb
scas
mov
nop
push
sbb
push
mov
dec
inc
ss
daa
test
jle
or
cwtl
and
sub
push
shll
pop
pop
dec
or
add
mov
shll
mov
stc
or
fldcw
push
mov
mov
inc
push
push
cwtl
hlt
xlat
pop
orb
push
inc
popa
outsb
mov
in
jge
cmp
pushf
inc
pop
pop
fcoml
adc
rol
popf
jg
cmp
movsb
adc
mov
adc
cmp
movsl
cwtl
and
jg
add
cmp
xchg
ret
ret
mov
sub
cmpsl
jbe
adc
mov
mov
pop
push
mov
sti
cmp
repz
pop
pop
mov
xchg
in
mov
or
lods
call
inc
fdecstp
in
jb
xor
pop
mov
arpl
mov
xchg
dec
add
test
xor
test
jp
sub
jnp
xchg
jno
xor
adc
pop
cmp
cmp
sub
lret
bound
xchg
push
jmp
xchg
sbb
jae
les
test
mov
cltd
push
clc
in
cld
cli
pop
sbb
mov
cmpsb
lret
pop
sub
sub
dec
divb
fwait
loopne
fisttps
in
push
mov
dec
int
mov
inc
cmpb
sbb
xchg
addb
lock
int
stc
lcall
xchg
push
mov
mov
xchg
rcrb
and
fiaddl
pop
arpl
fcmovbe
mov
rol
jl
ret
mov
scas
push
fldenv
mov
shrl
test
fwait
roll
jmp
ss
xchg
test
stos
call
jno
or
bound
mov
je
out
out
movsl
popf
cmp
daa
int
sub
lret
rorb
sub
inc
mov
pop
in
jns
adc
jo
mov
cld
or
jnp
imulb
popa
dec
loop
jg
mov
movl
not
mov
add
int3
roll
insl
sub
mov
adc
dec
dec
in
mov
addl
lret
shl
jp
push
in
xor
test
incl
mov
adc
call
mov
in
fbstp
push
lcall
aaa
mov
jae
dec
push
dec
mov
outsl
sbb
sub
aas
mov
xchg
gs
sub
mov
inc
add
rorb
xchg
jp
dec
and
mov
jne
xchg
mov
pushf
test
movsb
sbb
xor
xchg
inc
sbb
xchg
mov
shlb
mov
inc
jmp
pop
pop
inc
and
rcll
adc
mov
cltd
push
xchg
ss
add
mov
pop
in
or
xlat
scas
dec
cmp
xchg
cli
test
cmp
sbb
mov
mov
jp
lahf
into
dec
mov
adc
adc
fwait
imul
and
adc
push
insl
add
lods
mov
xchg
and
inc
adc
sub
jne
or
lods
rorl
fadd
dec
mov
fistl
ret
xchg
pop
in
imulb
fldcw
dec
pop
sub
scas
mov
sbb
and
sub
sahf
dec
mov
repz
push
stos
cmpsb
aas
mov
fidivrs
jb
sahf
add
xor
repnz
mov
dec
mov
xchg
cmp
out
repnz
push
push
adcb
pop
cmp
xchg
xchg
test
sbb
mov
aaa
sahf
aam
aad
push
jmp
mov
mov
outsl
add
mov
mov
leave
and
les
jecxz
sbb
daa
mov
mov
fsubrs
mov
push
sbb
and
ja
aas
pop
mov
add
es
rep
sbb
and
scas
sbb
mov
call
jg
mov
push
es
mov
push
dec
popf
in
mov
add
cmp
loope
in
arpl
add
jp
cmpb
sub
cmp
fs
jecxz
mov
mov
mov
dec
repz
shrb
dec
xchg
ret
adc
mov
inc
cmp
rcr
mov
pop
xchg
loope
jne
mov
imul
negb
sub
inc
stc
fldt
adc
mov
adc
inc
ss
data16
add
popf
jo
fldt
xchg
push
das
pushf
mov
in
lods
xchg
push
pop
jb
leave
and
rclb
mov
aaa
loop
push
pushf
inc
test
xchg
xchg
je
enter
sahf
into
dec
and
dec
test
xchg
mov
iret
fisubrl
dec
xor
loop
mov
and
and
fistpll
dec
mov
xchg
test
cld
iret
xor
xor
daa
mov
xchg
lods
dec
sub
sbb
jmp
push
push
arpl
xchg
jle
testb
jge
leave
clc
mov
push
xor
movl
xor
add
lea
lock
cmpsl
int3
cld
adc
rorl
xor
adc
mov
int3
test
cmp
or
mov
inc
fnstsw
mov
test
cmpb
mov
xor
jnp
or
sub
imul
in
or
sub
and
jne
add
push
out
mov
or
pop
lods
mov
mov
dec
cmp
jl
push
sbb
jecxz
fs
xlat
xlat
ret
pop
sub
sbb
lods
out
mov
push
add
inc
movsb
xchg
mov
repnz
mov
and
int3
push
in
mov
clc
nop
mov
daa
dec
repz
cltd
imul
out
xchg
jnp
data16
loopne
mov
cmpsl
pop
cmp
dec
and
ret
fmull
mov
out
data16
into
or
pop
jo
jo
sbb
call
mov
push
add
movsl
mov
cltd
inc
push
pop
in
or
in
leave
cmp
inc
jae
in
or
and
mov
pop
mov
jp
mov
sbb
and
fdivs
rcrb
mov
movsl
inc
dec
push
inc
cld
lret
cmp
imul
pop
je
adc
dec
xor
into
pushf
inc
adc
or
sbb
or
mov
push
repnz
in
and
cmc
insb
mov
inc
cmp
mov
ss
bound
mov
arpl
jno
cmp
fisubl
cmp
je
js
cwtl
mov
dec
push
stos
mov
gs
and
fiaddl
xor
adc
pop
cld
lock
pop
dec
stc
jg
push
scas
xchg
leave
xor
in
insb
add
ret
mov
mov
hlt
mov
xor
call
sahf
std
lret
jno
repz
imul
repnz
adc
fidivs
in
cmpsb
or
pop
leave
jecxz
test
stos
dec
sti
xchg
and
pop
mov
mov
outsb
bnd
cmp
insb
int3
mov
pop
js
add
test
loop
in
cs
mov
xlat
push
pop
sbb
das
vmovss
push
stos
pop
xor
shrb
lea
pop
jnp
xor
and
fsts
push
sbb
cli
dec
jle
inc
test
inc
push
sarl
dec
in
aad
push
pop
sbb
lods
add
bound
lods
mov
add
insb
inc
ret
sub
insb
xchg
aam
sbb
sub
inc
aas
push
dec
cli
push
jg
mov
in
mov
ret
or
subl
adc
std
scas
xchg
sti
fsubs
fdivl
repz
les
xor
out
cs
fcompl
std
test
xchg
das
dec
inc
jno
lahf
je
int
mov
push
into
mov
mov
out
jne
mov
and
pop
fcmovb
stos
incb
jae
popa
sub
lahf
mov
gs
idiv
jne
out
jmp
jne
sub
push
dec
in
lods
fcmovu
pop
in
ds
cld
lcall
push
push
jnp
xchg
fs
xchg
in
xchg
mov
add
xor
bound
jnp
mov
xchg
cwtl
jae
leave
leave
sub
stos
xlat
mov
mov
pop
pop
add
fld
scas
mov
sbb
dec
xchg
or
in
add
xorb
add
mov
sbb
aad
dec
push
or
cwtl
mov
sti
and
fildll
sbb
add
jmp
fwait
std
ficoml
enter
negb
fisttps
jae
inc
add
mov
ljmp
mov
add
xor
test
dec
xchg
push
cmp
jmp
sub
xchg
jl
pusha
sbbb
sub
jge
js
fidivrs
mov
dec
adc
daa
das
cmp
subb
test
push
pop
sbb
notl
push
outsb
mov
dec
mov
mov
sub
sub
adc
jp
sahf
cmp
mov
xchg
ljmp
push
mov
data16
cld
or
orl
mov
mov
and
push
movsb
cmpsb
push
xor
inc
in
fwait
loop
adcl
fisttpll
and
push
mov
fnstsw
and
inc
test
xchg
rcr
int3
mov
mov
inc
into
push
mov
mov
or
divb
or
and
sub
lcall
int3
outsl
push
xlat
sbb
push
mov
jae
adc
xchg
or
adc
ret
sarb
sub
icebp
out
pusha
dec
lcall
shl
popa
adc
lock
fdivrl
pop
mov
aad
cmc
and
scas
dec
cmc
sub
inc
mov
leave
gs
lds
adc
push
xchg
cmpl
jp
roll
pushf
jl
fbstp
test
lcall
add
cmp
inc
mov
mov
bnd
xchg
pop
jp
mov
mov
xor
clc
add
ficoml
js
mov
xor
fldcw
sub
test
hlt
mov
mov
push
jmp
and
outsl
xchg
mov
aam
lcall
lcall
push
sbb
notb
clc
cmpsl
test
xor
enter
je
adc
mov
bound
pusha
sbb
add
loopne
jbe
lods
hlt
subb
mov
xchg
cmpsl
jmp
jae
inc
lahf
negl
out
xor
mov
fs
out
adc
pop
inc
or
data16
enter
inc
pushf
add
lds
lea
mov
pop
pop
add
mov
les
and
inc
mov
lret
sub
sbb
mov
lret
mov
adcl
iret
pushf
lahf
jae
andb
bound
jmp
fadds
enter
testl
shlb
ljmpw
mov
jns
out
cli
fnstenv
mov
cmpb
mov
mov
ret
dec
adc
cmp
xor
mov
imul
cli
wbinvd
sub
insb
add
les
push
cwtl
mov
ds
fldcw
daa
hlt
loop
cmpsl
cmp
push
push
dec
or
xor
mov
addr16
nop
mov
inc
sbb
sub
in
bound
or
cli
mov
ret
gs
cmpsl
jl
and
scas
shll
out
pushf
adc
and
int3
add
pop
mov
jecxz
mov
in
arpl
mov
xor
sbb
pop
leave
shll
aam
adc
push
dec
mov
mov
sbb
jg
aaa
or
in
dec
dec
pop
lret
sub
enter
push
xchg
jb
mov
adc
xchg
xchg
sarl
rcrl
mov
lea
sar
dec
cmp
jo
gs
pop
fwait
mov
addps
jnp
scas
push
pop
cmpsb
int
xor
add
or
jge
lret
adc
xor
data16
nop
loope
xor
or
dec
sub
sub
jmp
aas
dec
sub
scas
sbb
mov
pop
inc
fnstcw
fiaddl
ss
pusha
repz
ss
pop
xchg
xchg
mov
jae
jl
pop
sbb
cwtl
into
shrl
xchg
bnd
out
mulb
aaa
or
hlt
pop
les
sbb
xchg
lcall
dec
imul
and
mov
fstl
ret
dec
imul
jnp
addb
dec
push
and
jb
movsl
ja
outsb
movsl
add
loope
xchg
daa
inc
inc
ss
mov
dec
insl
js
push
int3
sbb
out
jge
xchg
leave
into
lds
inc
push
mov
push
xchg
jp
sti
rorl
jo
sbb
xchg
or
jo
or
fisubrs
cwtl
insl
adc
ja
add
pop
cmp
rclb
js
dec
fwait
mov
mov
mov
jb
mov
cmpb
inc
ficoms
inc
xchg
repz
add
cld
les
pop
mov
rolb
mov
shl
add
push
jmp
ss
sarb
pop
xchg
sub
popa
dec
cltd
jecxz
dec
sbb
mov
ljmp
jge
jb
adc
xchg
repz
daa
pop
pop
xor
fucomp
or
fstl
jns
mov
test
xor
sub
std
arpl
xchg
xchg
ret
das
ret
xchg
rorb
lret
in
imulb
daa
adc
rcpps
mov
xor
roll
push
dec
and
lret
xor
inc
jns
test
lock
adc
dec
cmpsb
aaa
and
pop
pop
push
inc
call
jbe
pop
lea
lahf
xchg
stc
pop
sahf
cmp
shlb
cwtl
fcom
cltd
and
sar
jl
les
sbb
mov
hlt
fisubl
adcb
sub
ret
mov
sbb
mov
pop
leave
filds
dec
adc
sub
iret
push
lahf
es
imul
imul
and
xchg
push
sub
sub
push
mov
sahf
addb
xor
pop
ret
daa
lea
fstps
push
test
or
mov
es
or
in
sub
lret
dec
stos
das
ss
cli
sub
adc
jmp
dec
mov
and
pop
jne
daa
stos
js
mov
rorb
mov
stc
cwtl
int
pop
fildl
das
push
stos
xchg
sub
mov
vpxor
cmp
push
sbb
sarb
or
repz
sub
jp
dec
lahf
ret
cltd
lea
outsl
ja
push
inc
fcomp
shll
adc
pop
mov
cmc
icebp
int3
jmp
scas
in
cmpsl
fwait
and
inc
adc
adc
jg
scas
jge
lcall
lods
adc
pop
jne
cmp
pop
xor
push
js
push
cli
push
adc
mov
ret
xorl
ss
push
mov
ficoml
in
adc
pushf
mov
cmpb
push
movsl
int
sub
enter
or
in
add
and
mov
xchg
cmp
insl
dec
xchg
mov
jl
das
jb
es
scas
push
pop
xchg
adc
icebp
mov
pop
int3
pushf
mov
sbb
mov
js
pop
mov
xchg
je
das
test
jmp
xor
shl
inc
ret
sbb
fwait
cmp
xorps
addr16
loope
hlt
mov
pop
scas
add
cwtl
mov
repnz
popa
mov
cs
sarl
xchg
in
jo
cmp
add
loopne
or
xlat
and
mov
bound
adc
fsubl
xor
lret
xor
pushf
jae
aaa
xchg
xor
sub
pop
mov
fdivs
dec
int3
mov
xchg
cli
mov
and
addr16
flds
push
rolb
mov
pop
mov
cli
xchg
push
jge
lods
mov
jp
inc
jns
outsl
xorb
inc
std
mov
in
mov
lea
stos
mov
pushf
xchg
cmp
mov
inc
xchg
scas
in
lret
out
cmp
pop
outsb
adc
shlb
adc
lds
jge
mov
scas
shrl
out
cmp
inc
fildll
jp
psubb
mov
outsb
pushw
push
clc
cmp
or
std
push
add
dec
inc
addl
cwtl
cli
js
ficoml
loopne
in
inc
add
insb
mov
lock
cld
pop
das
pop
sbb
lahf
or
and
hlt
adc
mov
xor
fcomp
ljmp
push
xchg
inc
lret
jb
pop
lea
mov
scas
dec
test
xchg
enter
add
rcrb
xlat
shll
mov
pop
es
movsl
cmpsl
adc
js
lea
and
flds
out
jne
push
leave
stc
ret
into
imul
dec
dec
into
adc
into
shlb
ds
aas
or
sub
dec
mov
mov
and
shr
xor
add
jmp
or
loope
mov
stc
push
cs
inc
dec
stos
lret
mov
pop
jo
bsr
addb
cmp
lcall
fcmovbe
sahf
popa
out
fiadds
imul
and
stos
mov
jns
jnp
inc
xorl
pop
jae
enter
pop
adcb
mov
mov
fcmovb
push
inc
push
pusha
jne
daa
cmp
dec
mov
dec
mov
xchg
in
fs
cmp
cwtl
mov
inc
inc
add
lods
pop
mov
xor
int3
cli
mov
in
clc
testb
sbb
sahf
mov
nop
call
cmp
pop
mov
mov
jne
cmp
adc
sub
cmpl
mov
popl
adc
js
arpl
mov
cmc
push
arpl
enter
pop
pop
push
jnp
cmp
push
fidivrl
adc
scas
ljmp
cmpsl
std
jnp
je
sub
lds
push
fidivrl
into
nop
xor
xor
inc
sbb
mov
scas
cwtl
sub
je
mov
dec
mov
adc
pusha
sbb
repnz
and
lahf
bound
fwait
out
popf
repnz
mov
mov
fidivrl
gs
mov
fld
out
and
mov
sub
mov
cltd
sub
pop
icebp
inc
ficomps
std
lahf
pop
mov
push
out
sbb
and
imul
loop
loopne
mov
insb
mov
int3
lahf
cld
pop
adc
popa
call
push
cmp
pop
je
dec
pop
je
sbb
fsubrs
clc
ljmp
xchg
pusha
mov
mov
out
adc
stos
xor
jecxz
ret
jo
or
call
clc
pop
fisubs
mov
sbb
in
stos
sbb
loopne
cs
das
lahf
adc
push
cmp
leave
xor
in
adc
fwait
or
xorl
stos
outsb
sti
adc
ss
call
aam
xor
adc
cmpsl
push
mov
inc
sbb
xor
int
jmp
sar
daa
push
idiv
sub
xchg
pop
pop
scas
push
add
aam
fadds
mov
nop
adc
inc
mov
add
je
loopne
or
stos
inc
push
scas
popa
dec
scas
ret
xor
dec
scas
shl
roll
sbb
pusha
add
add
push
ficomps
push
add
cld
ds
jno
cmpsl
jg
and
sbb
ffree
ljmp
sbb
cltd
lret
js
rcr
fnstsw
jg
mov
je
rclb
scas
cmpb
pop
cltd
lods
gs
mov
dec
pop
cwtl
sbb
aaa
and
mov
jl
insb
in
movsl
lret
add
fstpt
out
test
xchg
arpl
inc
pop
xlat
pusha
out
lea
mov
mov
cmc
sahf
or
js
push
stos
jns
repnz
jl
out
inc
mov
xor
xchg
adc
pop
mov
push
pop
mov
sub
pop
out
mov
in
lock
mov
and
add
mov
js
push
or
mov
incb
adc
mov
pushf
fnstsw
push
popa
popf
std
mov
sbb
sar
ret
mov
mov
or
popa
jmp
mov
aam
inc
hlt
aad
stos
pop
or
sub
jae
mov
xlat
mov
add
popa
int
pop
movsb
lods
enter
mov
ret
lods
into
pop
mov
mov
cmp
mov
cmpsl
scas
jb
xchg
ret
mov
fadd
mov
addr16
aaa
mov
int3
inc
pop
aas
cs
nop
gs
insb
loope
jmp
hlt
mov
movsb
jge
cltd
mov
pop
or
enter
cs
movsb
lods
cwtl
pop
mov
fwait
push
ljmp
push
push
sbbl
jle
mov
or
xchg
loopne
or
sarl
jle
ds
loop
pushf
xlat
push
mov
fisubl
sbb
cmp
adc
jp
sarb
int3
sti
jae
mov
cmpb
cld
rol
cmp
lahf
into
pop
cmp
test
das
rcr
arpl
cltd
mov
cmpsl
adc
push
stos
lret
icebp
mov
inc
in
mov
jae
xor
push
or
pop
cmp
iret
into
jecxz
xchg
dec
mov
int
inc
mov
cmpb
push
in
and
pop
mov
adc
jmp
xor
jle
and
scas
cmp
pmuludq
jae
xor
xor
add
shll
rcrb
lret
icebp
movsb
add
or
dec
call
and
call
mov
mov
cmpl
mov
addb
icebp
sarl
push
push
lods
aaa
les
mul
jae
test
xor
mov
sbb
inc
lahf
cmpl
xchg
dec
cmp
mov
lahf
sarb
xchg
out
mov
add
dec
cmc
mov
mov
sbb
jbe
sbb
adc
loope
mov
das
loopne
cmp
sahf
sbb
mov
or
and
scas
sub
ret
inc
repz
jne
mov
loopne,pt
cmpsl
jp
push
adc
adc
xor
clc
repnz
icebp
cltd
outsb
and
fnstenv
dec
add
push
and
dec
mov
push
insb
sub
enter
lock
cmp
testl
mov
into
push
mov
ficomps
adcb
fldcw
jae
xchg
fisttpl
pop
pop
inc
pusha
dec
mov
pop
mov
imul
xor
movaps
aam
sub
lea
dec
sub
ret
and
mov
cmc
repz
cmp
adcb
jmp
mov
shrb
mov
repnz
int3
mov
xchg
sub
aad
mov
mov
add
popa
popa
imul
push
jecxz
test
cmpsb
jge
mov
mov
repnz
inc
cmpb
mov
mov
enter
stc
sbb
loopne
insl
ret
sahf
mov
jne
push
leave
pop
inc
push
or
inc
popf
popf
scas
sub
xchg
sti
dec
cld
in
push
ds
xchg
cwtl
inc
xchg
cwtl
aad
push
insb
mov
notw
pop
je
nop
sbb
pusha
clc
mov
xlat
or
xor
sbb
fsubl
mov
jb
xchg
sbb
divb
push
push
pop
ret
jns
cmp
xchg
scas
testb
lcall
xchg
shl
je
and
and
fwait
out
lret
es
lods
push
mov
inc
jge
cmpsb
mov
push
sub
cmc
fldl
cmp
dec
es
in
movsb
jge
sub
xchg
lcall
sar
mov
mov
enter
sbb
push
sbb
sbb
popa
push
add
aam
sbb
pop
test
popf
mov
push
mov
push
sti
in
test
sbb
imulb
cmc
rorl
xchg
fidivs
into
je
pop
cs
pushl
mov
pusha
mov
imul
lret
inc
ljmp
xchg
ror
xorb
mov
dec
add
iret
lahf
test
add
lds
xor
inc
testl
addl
add
movsl
jns
xorl
fadd
fmuls
les
adc
cmp
pop
mov
jp
movsl
ret
xchg
sbb
cld
stos
das
xlat
push
cmp
std
push
cmp
dec
out
cmp
lods
sbb
adc
xchg
cmp
in
sbb
addb
jne
mul
jge
rcll
cmp
add
in
sub
add
aaa
repnz
loopne
aas
inc
aad
mov
xor
mov
lret
into
jle
lahf
lcall
and
sti
add
push
push
jge
mov
out
shrl
imul
mov
mov
lea
or
data16
pop
cmovns
das
bound
orl
push
jle
pushf
mov
xor
ss
loope
sub
adc
leave
inc
daa
dec
pop
dec
pushf
pop
add
roll
scas
addr16
jmp
test
lret
cmp
xlat
or
inc
and
and
sti
in
test
lods
mov
sbb
gs
jbe
jns
ret
dec
insb
add
xchg
or
xchg
inc
repnz
push
mov
push
dec
and
sub
lods
test
add
aas
andb
insl
inc
ljmp
sub
adc
ret
jecxz
pop
fwait
iret
sub
lods
ds
gs
push
jp
pop
insl
out
gs
xchg
fmull
test
scas
mov
sbb
mov
sub
pop
xchg
mov
or
aad
sub
orb
sbb
ja
jb
and
dec
xor
adc
jb
cmp
lret
and
cmp
adc
aad
jb
into
cwtl
aaa
sarb
jge
xor
push
add
lret
repz
nop
add
jmp
pop
pop
jecxz
xlat
test
mov
pop
xchg
mov
cmp
test
and
ljmp
stc
sarl
out
mov
push
gs
adc
jmp
call
daa
addr16
addr16
mov
repnz
xlat
push
pop
data16
xchg
popa
aad
lds
mov
or
cld
icebp
ds
out
xchg
jae
fmull
pop
push
ret
jecxz
jl
stos
cmp
cmp
stc
mov
fidivs
cld
cwtl
ror
pop
stc
cltd
out
stos
bound
sub
nop
pop
mov
rcr
xchg
pushf
xor
cwtl
out
std
mov
in
decl
push
dec
pop
xor
stos
adcl
push
iret
testl
push
xchg
xchg
addr16
subb
jne
cmp
mov
loopne
ret
adc
ldmxcsr
or
push
lret
dec
push
push
xor
les
dec
jg
and
aaa
es
or
aam
dec
dec
mov
sub
int
test
xlat
cmc
jae
jbe
out
mov
out
lret
push
adc
frstor
cld
add
xchg
lcall
sbb
push
mov
jbe
sbb
lods
in
sbb
mov
dec
subb
jge
mov
dec
lds
pop
pusha
sbb
idivl
dec
push
fs
jo
xchg
insl
mov
psllw
lret
pop
jg
inc
mov
or
jns
sarl
xchg
mov
mov
sbb
insb
mov
orl
test
mov
call
pop
sbb
insl
out
add
push
xor
in
test
call
xor
call
sbb
lret
gs
inc
popa
push
loope
ret
daa
or
cmp
dec
das
fiaddl
insb
loopne
int
addr16
mov
nop
aaa
mov
jecxz
and
push
insb
mov
ljmp
and
ds
stc
dec
xchg
idivl
sti
movsbl
xchg
sub
jnp
xchg
lock
imul
outsb
popl
aas
pop
leave
xor
fucom
xor
dec
sbb
bound
test
dec
nop
cmpsb
das
sub
push
psubsw
enter
sbbl
cmpsl
imul
shr
shll
mov
jnp
adc
mov
cmp
pslld
ss
dec
lret
inc
sub
out
fistpl
sbb
test
stos
cli
mov
xchg
pop
and
adc
rorl
jno
xchg
mov
orb
mov
stos
xchg
sbb
nop
pop
mov
xlat
jge
enter
xor
sub
add
rcll
pop
mov
out
lahf
testb
or
push
clc
jo
loopne
lret
cs
jae
sbb
bound
rorl
testl
jns
inc
mulb
lahf
enter
and
out
fisttps
mov
pop
shlb
ret
pop
leave
cmp
inc
adc
sahf
xchg
or
das
xor
sbb
sbb
adc
pop
xor
arpl
outsb
int3
js
in
cmp
mov
cmpsb
mov
xorl
jb
js
rcrl
stc
lcall
sub
out
popa
jg
imul
jge
pop
cld
jp
fstps
je
stos
xchg
pop
sub
fisubs
jno
cld
jmp
cmc
jb
sbb
and
aas
ds
aas
addr16
out
pop
sub
mov
mov
inc
push
rcl
inc
pop
mov
outsl
ret
dec
out
pop
repz
icebp
in
ja
es
stos
pushf
in
pop
aas
inc
sub
sti
xchg
push
adc
jg
pop
addr16
sbb
imul
imul
inc
inc
addr16
ret
mov
pop
inc
push
inc
mov
mov
inc
push
dec
test
inc
call
pop
mov
outsl
mov
fsubs
ljmp
xor
sub
inc
lcall
xchg
xor
das
std
inc
and
push
add
ret
inc
cmp
std
or
jne
jae
pop
enter
dec
xor
cmc
fnsave
int3
int
loop
aam
lods
pop
adc
dec
mov
mov
les
test
and
lcall
cltd
dec
orb
in
test
lock
sub
inc
jnp
stos
push
pop
lock
fldl
or
test
jno
mov
mov
dec
xchg
stc
cld
stc
mov
mov
push
jecxz
ds
mov
mov
rcll
adcb
inc
sbb
lcall
test
mov
sub
xor
cmp
repnz
jb
xchg
dec
xchg
xchg
test
mov
call
cltd
sarl
pop
sti
mov
jo
mov
stc
aas
mov
xchg
out
xor
gs
fcoms
mov
cli
mov
xor
pop
dec
push
add
mov
push
cmp
mov
and
dec
fwait
and
std
daa
pop
fimull
insl
push
into
push
or
pusha
jns
add
enter
out
loopne
xor
mov
icebp
mov
push
repnz
out
mov
mov
ficompl
std
fistpl
in
fwait
inc
imul
fidivrl
add
push
mov
pop
aad
mov
dec
push
pop
aas
push
cmp
outsl
loope
sub
xor
cmp
icebp
push
xor
or
jmp
scas
aam
push
fwait
test
push
push
or
mov
inc
mov
fistpl
gs
sbb
jns
repnz
in
sbb
add
mov
popa
jbe
cltd
push
lahf
sbb
dec
lea
fstl
dec
sbb
cmp
orl
sbb
in
in
scas
sti
stc
cwtl
or
je
lods
add
loopne
insl
xchg
daa
add
and
cltd
xor
jbe
lahf
in
pop
fwait
adc
xchg
fwait
je
or
adc
fcompl
insb
sub
addr16
lock
pop
out
jnp
jge
pop
int
rol
jmp
gs
icebp
sbb
out
xlat
pushf
pop
jno
mov
scas
inc
pop
addr16
outsb
cltd
dec
jge
add
in
pop
and
push
vmwrite
xlat
push
jmp
sti
mov
pop
cmp
inc
test
mov
test
cmp
dec
mov
std
inc
and
sbb
xchg
xchg
xchg
and
ljmp
loopne
cmp
dec
mov
sbb
adc
inc
cwtl
cmpsb
sbb
ret
push
addl
push
ljmp
push
push
dec
sub
lods
mov
cmp
sub
mulps
add
mov
mov
cmp
lcall
fistpl
sub
fcmovbe
dec
cld
xchg
outsb
and
arpl
xchg
dec
mov
sti
sbb
and
jmp
daa
xchg
sub
mov
push
sbbb
mov
xchg
pop
xor
mov
and
adc
pop
mov
jecxz
in
sub
adc
popf
cltd
fwait
pushl
push
mov
xchg
mov
out
xor
inc
mov
adc
xor
scas
out
ret
ret
sarl
push
inc
fwait
or
lahf
add
and
xchg
xor
add
pop
imul
sub
out
pop
sbb
mov
pop
movsb
push
mov
stos
pushf
test
dec
push
addb
ljmp
in
loop
jge
xor
cmp
jge,pn
push
repz
iretw
jnp
inc
call
movsb
in
aad
sbb
pop
sub
jno
loopne
cs
xchg
pop
xor
lods
and
lret
aaa
sbbl
scas
loope
mov
dec
test
and
outsl
push
cmp
ljmp
jge
and
mov
sbb
sti
in
cltd
xor
pop
xlat
out
sub
addr16
add
xor
push
pop
xor
daa
dec
mov
and
lret
mov
cs
xlat
call
cltd
fildl
loop
sub
adc
xchg
roll
scas
fcmovbe
pop
fdivrl
xor
rol
inc
cltd
aaa
in
xor
pop
push
inc
pop
adc
dec
jle
inc
adc
inc
dec
fcoms
xchg
pusha
adc
xor
test
xor
cmpsl
repnz
push
test
sbb
xchg
lock
jns
mov
mov
das
sarl
add
xchg
scas
imul
mov
dec
imul
aas
mov
cmp
into
fistps
add
sbb
nop
leave
insb
mov
inc
in
mov
sahf
in
rcl
dec
cmp
callw
loop
pushf
cld
daa
scas
loop
add
xor
inc
inc
lods
inc
mov
xor
test
and
mov
mov
sub
aam
dec
fisubrl
cs
mov
cmp
xor
inc
pop
in
fwait
lret
mov
decl
pop
inc
sahf
mov
mov
cwtl
xor
enter
loop
mov
ja
out
movsb
sbb
and
push
mov
fmuls
jns
mov
push
call
fadds
fnstenv
adc
cmpsl
jb
int
or
fsubs
cmpl
stos
in
adc
push
xlat
in
push
fbstp
dec
pop
adc
aas
mov
punpckhwd
insl
jmp
popf
pop
adc
xchg
xchg
xchg
repz
add
push
in
test
mov
insl
cmpsb
push
mov
push
test
stc
mulb
xor
pop
pop
fwait
mov
mov
jmp
dec
outsl
add
dec
int3
add
jb
pop
jns
pop
dec
and
les
mov
sahf
mov
xor
jno
fs
push
push
or
mov
xlat
aas
mov
out
pop
inc
cmp
aam
enter
sbb
push
dec
push
stc
mov
cmpsb
hlt
stos
or
push
add
mov
nop
arpl
mov
jnp
popf
mov
push
aad
xchg
cmp
jp
mov
inc
xchg
repnz
aas
loopne
inc
or
pop
adc
stos
aad
dec
int3
lcall
dec
cmp
incl
hlt
cmp
jmp
xor
mov
xchg
dec
pop
cmp
hlt
or
jle
push
je
mov
imul
daa
xchg
push
inc
jmp
ret
add
xor
jecxz
int3
scas
mov
or
mov
sbb
xchg
pop
je
dec
or
pop
xor
push
cs
and
out
ficomps
xchg
mov
enter
shl
cmp
push
aam
mov
nop
push
cmp
xchg
push
mov
outsw
lret
and
adc
out
xchg
mov
insl
rorb
fidivrl
mov
sub
sahf
clc
shr
lcall
addr16
sarl
fnsave
fwait
push
ja
shlb
push
adc
leave
inc
dec
jge
test
inc
cmp
adc
jne
and
aas
mov
mov
cmp
lcall
inc
adc
mov
jns
shll
mov
push
mov
xchg
pop
adc
mov
jp
aad
inc
loopne
sub
testl
out
fidivs
sub
pop
icebp
cltd
rclb
fstl
adc
sbb
shrl
negb
mov
pop
das
enter
xchg
adc
xchg
add
vmread
pop
push
adc
imul
push
test
and
mov
jmp
xor
jle
jno
orps
std
pop
sarl
inc
daa
push
test
sbb
push
add
sbb
inc
and
testb
or
pop
pop
clc
fcomps
sti
test
out
xor
hlt
jb
sub
mov
adcl
mov
add
enter
addb
inc
stos
ljmp
inc
xchg
out
loop
xchg
mov
cmp
adc
fs
loopne
aad
dec
xor
stc
dec
in
movsl
jmp
push
lea
jb
iret
or
xchg
cltd
sti
add
nop
push
popa
xchg
lahf
sti
lds
dec
cmp
fs
push
in
cs
cmc
scas
inc
dec
cmp
ss
enter
xchg
xor
loopne
mov
or
and
imul
daa
jno
cmp
inc
fldl
int3
scas
cmp
adc
xchg
lcall
pop
insb
test
xchg
shr
lcall
mov
sub
mov
and
imul
call
ja
cmp
inc
shll
sbb
mov
out
dec
pop
cwtl
dec
inc
rorb
mov
mov
stos
dec
movsb
push
and
adcl
fdivrs
fs
clc
loop
push
out
dec
loopne
jl
pop
neg
dec
mov
jo
jo
xlat
movsb
in
jle
ds
cmpsb
loope
fistl
inc
pop
in
pusha
jno
cmp
aam
mov
sti
or
xor
mov
loop
std
adc
call
mov
add
inc
inc
jmp
push
jbe
inc
int3
stc
jle
mov
movsl
dec
movsl
hlt
push
and
mov
sub
lods
movsb
in
xor
mov
or
pop
ret
paddw
cmp
push
daa
cmpsl
stc
jb
addr16
cmpsl
mov
cmp
out
jp
shl
loop
ss
mov
icebp
xchg
mov
popf
sub
js
xor
inc
lock
cmpsl
shll
add
lcall
jge
jle
push
outsb
mov
sub
sbb
insb
int
mov
repz
mov
in
mov
enter
int
movsl
aaa
jnp
arpl
and
and
scas
repnz
shll
sbb
add
aam
lret
and
pop
mov
les
dec
dec
add
adc
adc
sbb
inc
pusha
fnstcw
mov
and
jecxz
ds
mov
cs
out
loope
pushf
movsl
fstl
sbb
popa
cmpsb
lcall
scas
insb
outsb
ljmp
hlt
call
cmpsb
int3
in
cmpsl
xchg
sub
cmp
es
in
pop
sub
xchg
pushf
push
aad
and
arpl
cmp
pop
rcrb
fmul
adc
subb
jl
and
leave
jnp
jb
push
jmp
lods
aaa
sbb
mov
mov
push
add
shrl
ficomps
pop
add
jmp
and
stc
sub
or
testb
rcrl
jbe
mov
outsb
aas
xor
xchg
pop
lods
add
mov
xchg
mov
dec
adc
push
insb
push
mov
pop
sahf
push
push
or
jge
push
pop
jo
in
std
das
ss
scas
clc
rol
test
lcall
dec
lods
push
out
aam
lock
rcrl
repz
lock
idivb
mov
xor
pop
push
push
imull
popf
vmovntps
int3
inc
xor
ss
mov
pushf
outsb
hlt
pop
sbb
mov
fsub
xor
mov
loop
lret
push
ss
stos
loop
xchg
and
movsb
outsb
jmp
jle
add
adc
ljmp
xlat
adc
jmp
push
outsl
and
mov
push
insb
dec
pop
fwait
adc
add
movsb
xchg
enter
inc
cmpsl
inc
mov
int3
push
lcall
sub
dec
mov
ds
dec
xor
aas
in
or
sbb
push
sub
xchg
movsb
mov
wbinvd
clc
pop
cmp
mov
out
jge
cmp
lock
push
pop
inc
fistpll
and
rcrl
inc
mov
jns
test
stos
movl
jo
jmp
and
mov
pushf
adcl
jae
push
mov
inc
cmpsl
push
rcl
mov
das
push
scas
jmp
aaa
dec
nop
pop
mov
lret
mov
leave
mov
jnp
inc
mov
add
add
in
jnp
push
xor
cmp
icebp
call
sarb
dec
cmp
lcall
pop
sub
mov
inc
je
xor
xor
push
outsl
loope
fdiv
sub
repnz
xchg
pop
mov
lea
ffreep
je
or
xchg
adc
mov
leave
cmpsl
stos
jl
mov
xchg
sub
sbb
stos
add
cld
ljmp
call
popa
dec
mov
je
fimull
popa
push
pop
scas
mov
jns
fdivrs
jge
cmp
cmpb
push
dec
es
xorb
mov
scas
sbbl
push
xor
std
shrb
leave
pop
lds
daa
leave
leave
pusha
mov
jl
cmp
imul
das
outsb
jae
sbb
sti
int
sbb
cmp
xor
xchg
sbb
fsubrl
xorb
call
sub
sbb
or
pop
stos
inc
rorb
lcall
and
out
out
xor
in
mov
jle
loope
mov
push
jbe
sbb
xorl
aas
stc
cltd
daa
ds
add
xor
cmpsb
pop
jb
loope
sbb
ficomps
pop
pop
sbb
je
dec
jp
pop
and
xchg
pop
inc
push
add
pop
imul
loop
ljmp
jle
inc
insl
xor
add
push
fwait
add
pop
into
push
clc
test
lcall
aad
inc
jg
daa
mov
sub
mov
lods
sbbb
mov
cmc
insb
jg
xchg
lock
dec
fiadds
sbb
pop
fbstp
mov
nop
es
lods
and
pop
inc
aam
sahf
test
or
push
mov
out
daa
jg
mov
and
cmp
repnz
lods
repz
inc
jle
and
adc
inc
daa
pop
lret
iret
mov
addr16
bound
lret
fs
lods
gs
mov
inc
xor
xor
das
jne
gs
xchg
lock
mov
jb
jg
cmp
inc
dec
jp
sub
cmpsl
lock
and
loop
movsl
int
pop
cwtl
movlps
or
scas
out
scas
push
xchg
dec
cwtl
mov
xchg
inc
sahf
sbbb
cmp
mov
mov
outsb
xorb
pop
add
or
or
les
xor
pop
fs
leave
insb
xchg
cmp
lret
pop
testl
cli
aam
roll
sbb
push
icebp
cmpsl
jb
and
cmp
in
in
mov
rorb
aad
dec
and
cmc
fimuls
pop
pushf
int
xchg
bound
iret
cmp
xchg
pop
inc
clc
pop
sar
enter
push
lcall
loopne
xchg
xor
add
xlat
mov
popf
ds
push
push
xchg
test
int
sub
imul
inc
repz
mov
pop
jge
jge
fimull
cmp
pop
mov
pushf
pop
outsl
and
adcb
xor
cmp
jecxz
out
push
jne
mov
shl
orl
jecxz
xchg
pop
push
aad
fidivrs
mov
ret
pop
mov
push
cmpsl
pushf
adc
push
pop
into
lret
ret
fisubrl
add
inc
stc
dec
jecxz
mov
dec
sarb
div
sub
sub
jge
aas
je
cli
or
pop
popf
cmp
jl
cmpsb
mov
fwait
loopne
stos
cmp
fcmove
xchg
insb
stos
jmp
stc
test
jl,pt
jmp
imul
adc
lock
and
xor
addr16
mov
cmp
insb
fwait
xchg
ret
sahf
inc
icebp
orb
adc
push
aaa
xchg
cmpsl
mov
flds
add
adc
scas
and
xchg
in
sti
test
mov
insl
mov
sahf
pop
aaa
and
cmp
aad
push
movsb
mov
mov
fs
ja
xchg
loope
pop
mov
dec
inc
sub
xchg
sbb
subl
pop
adcb
cltd
push
ret
test
pop
pushf
xchg
jo
in
mov
in
pop
mov
inc
loop
ds
mov
pop
mov
adc
les
mov
hlt
shll
pop
xchg
xor
jbe
sub
pushf
shlb
iret
pushf
out
mov
out
scas
stc
mov
ljmp
aas
mov
cltd
pop
pop
mov
sub
xchg
in
pop
sub
lcall
jg
add
mov
sbb
dec
ss
pop
lcall
loope
imul
andl
js
mov
jbe
mov
inc
std
adc
jecxz
mov
push
sub
fnstsw
pop
jle
jns
mov
mov
pusha
addb
add
aas
cmpsl
popf
loopne
push
add
push
xchg
outsl
lahf
jbe
cltd
cmpsl
or
xor
fsub
or
popf
jl
faddp
inc
pop
adc
insb
xchg
iret
pop
paddd
and
popa
mov
iret
imul
push
movl
jnp
or
test
push
orb
xorl
xor
sahf
inc
pop
and
xor
int
jno
adc
sub
les
cmp
cmpsb
shl
scas
mov
mov
push
cmp
jno
mov
pop
es
fmuls
aam
mov
pop
mov
scas
lods
sbbw
sub
imul
fs
xor
jae
int
repz
out
jle
imul
sbb
ss
arpl
fsubs
adc
gs
pusha
dec
push
sbb
pop
adc
mov
sub
adc
decl
cld
jo
push
pop
out
mov
cmp
test
or
or
maxps
mov
stc
or
dec
inc
xor
adc
pop
hlt
cmp
stc
dec
sub
mov
fsubp
ljmp
pop
movsl
pop
in
popf
es
test
sub
in
dec
stos
lods
jle
daa
jle
add
sbb
push
mov
push
pop
push
lcall
mov
jno
xor
rcrb
fsts
shl
pop
cs
jb
push
push
andl
pusha
scas
movsl
into
dec
xlat
ds
loope
dec
bound
dec
jno
xorl
inc
jae
xor
sub
mov
outsb
push
cmp
sub
pop
sbb
call
push
add
outsl
or
mov
and
mov
pop
movsl
in
mov
jnp
aas
insb
jge
cmp
push
out
movsb
and
jmp
xor
or
imul
mov
test
cwtl
and
or
popf
mov
movsb
and
dec
js
nop
xchg
push
decb
sbb
adc
mov
adc
inc
popa
lret
xor
jo
iret
xor
pushf
pop
nop
lea
mov
jae
inc
adc
imul
movsl
or
lds
popa
mov
pop
mov
mov
xor
cli
rorl
aam
cli
jle,pt
mov
loop
push
test
pop
fisubrs
xchg
sbb
inc
cmp
stos
add
mov
aam
je
inc
or
cwtl
inc
pop
lea
sub
mov
cmp
cs
shl
shlb
arpl
dec
push
jmp
or
push
xchg
inc
sbb
outsl
add
outsl
das
push
leave
iret
dec
fdivrs
pop
aas
adc
or
lds
sbb
rcl
xchg
and
into
xchg
mov
aam
or
std
fadd
push
inc
in
clc
test
dec
mov
dec
xor
push
inc
cmp
mov
icebp
mov
xor
mov
jbe
jns
push
push
mov
fmulp
cmpxchg
test
imul
and
je
inc
arpl
jp
push
fwait
add
test
dec
push
fxch
sbb
pop
and
popa
sbb
jp
outsb
xlat
lahf
dec
inc
xor
lahf
cmp
aas
fnstcw
lcall
movsb
fnsave
vminps
fmul
pop
mov
andb
push
mov
jnp
ljmp
and
jne
testl
jns
inc
xchg
mov
pop
and
ds
rcrl
out
push
aam
cmp
roll
aas
xchg
loope
imull
mov
rorb
into
adc
sub
mov
fistpll
push
and
in
in
mov
test
mov
fbstp
mov
dec
cmp
and
add
loope
pop
xchg
stc
add
rclb
int
cmpsb
dec
xchg
xlat
repz
inc
mov
sbb
arpl
inc
das
dec
mov
aad
push
adc
lret
sarl
aas
xchg
dec
out
bound
pushf
jecxz
and
adc
mov
mov
xchg
jns
cwtl
rcll
int
lods
cmpsl
xor
in
and
leave
or
jno
movb
rorb
imul
shl
xchg
mov
fcoml
addr16
and
iret
adc
mov
outsl
jp
inc
nop
gs
shl
mov
fs
jle
js
pop
dec
push
aas
mov
or
jp
sbb
aam
loopne
je
sahf
dec
cmp
push
jb
mov
xchg
and
sub
xlat
push
jne
jo
and
mov
mov
nop
rorl
mov
add
fadd
leave
mov
push
fcoml
aam
push
aaa
inc
loop
add
mov
lcall
add
data16
add
or
in
imul
test
jns
sbb
mov
lock
rcl
mov
movsb
sti
mov
pop
jge
mov
sbb
lcall
fildll
add
jg
mov
pop
outsb
jp
jns
xchg
aam
repnz
inc
in
or
pop
sbb
enter
shll
repz
testl
addr16
adc
cmovno
add
add
movsb
fistps
or
jns
mov
sbb
loop
and
out
mov
stc
sahf
push
jecxz
dec
push
and
enter
mov
in
and
call
inc
scas
jns
cmc
sub
lcall
in
adc
or
adc
mov
fwait
xor
out
add
popf
xlat
add
ds
sub
sarb
push
mov
push
dec
jno
jmp
leave
sbb
aad
notb
jge
daa
js
inc
pop
jmp
mov
mov
cmpsb
jp
mov
inc
push
out
sub
mov
or
fbstp
jno
mov
fnstcw
rcrb
scas
pop
mov
inc
xor
xlat
cmp
jb
jae
mov
push
mov
inc
dec
xchg
into
sbb
sbb
mov
xor
add
xchg
adc
push
dec
push
adc
rcr
enter
jle
mov
ret
outsl
in
push
sbb
or
test
or
repz
cmp
mov
push
pop
jge
rcl
sbb
clc
dec
notl
jnp
fs
dec
and
or
sub
stc
jp
cld
out
pop
mov
repz
mov
in
scas
insl
movsl
dec
add
nop
ss
pop
test
ja
dec
leave
jle
xchg
insl
gs
clc
and
aas
aad
inc
pop
je
pop
fcomip
jnp
cmp
xchg
cmp
cmp
cmc
and
repz
andl
mov
dec
inc
ds
xor
mov
cmp
add
mov
jp
rcrb
xchg
xchg
pop
mov
dec
pop
xchg
adc
cmp
add
adc
std
push
in
or
outsl
jmp
lods
cs
in
push
mov
pop
popa
jnp
popa
nop
inc
mov
repz
dec
fistps
loope
scas
push
test
fcoml
fisubrs
adc
mov
inc
push
xchg
mov
imul
inc
push
push
pop
or
rorl
stc
sbb
and
movsl
push
daa
xchg
imul
push
jle
sub
and
jae
or
arpl
xchg
fwait
mov
ret
mov
xchg
jns
lret
repnz
aaa
out
lods
pop
stos
xchg
push
mov
cbtw
cs
daa
inc
jecxz
decl
jns
ret
test
int3
inc
sbb
out
mov
inc
lds
mov
xchg
leave
sbb
mov
jo
ds
mov
ret
pop
fists
fcmovnb
jmp
lret
jno
push
movsl
out
push
mov
adc
addl
adc
or
mov
bound
fmuls
jecxz
aaa
fadd
mov
xor
mov
sbb
neg
lock
adc
scas
pop
ret
jne
sbb
ljmp
and
and
notb
movsl
data16
push
cmp
rcr
xorl
clc
push
mov
scas
inc
inc
add
or
adc
int3
in
sub
jnp
movsb
jo
test
das
test
das
aaa
loopne
inc
out
pop
fsubrl
int3
jl
add
roll
push
push
or
ss
jmp
jecxz
sbb
pushf
fistl
push
jp
cmp
add
lret
mov
test
sub
lods
mov
mov
pushf
popl
loopne
adc
leave
insl
xchg
and
das
pop
mov
jb
mov
xor
aad
into
xchg
pop
pop
adcb
mov
sti
fmulp
movsl
add
jno
ljmp
pop
push
mov
xor
and
test
insl
jo
sub
mov
cmpsl
movsb
inc
pop
mov
aad
out
popf
jg
and
test
or
adc
leave
push
aas
and
jo
xchg
fiadds
lahf
xchg
jmp
cmpsl
xor
adc
negb
xchg
and
in
inc
int
inc
ljmp
mov
or
in
cmp
xor
mov
leave
cmp
pop
clc
mov
cmp
in
cmp
xor
rcrb
js
sub
cmp
or
sub
addr16
fwait
mov
hlt
cmp
mov
xchg
mov
test
xor
decb
lock
js
shrb
pop
xlat
leave
mov
std
and
fbstp
push
adc
cmp
and
mov
lock
lock
sbb
sti
push
imul
mov
xorl
dec
push
scas
std
lahf
mov
xchg
pop
mov
xor
insl
addl
inc
fsubs
bound
inc
pop
dec
pop
mov
add
idivl
lock
insb
dec
test
mov
pop
ror
in
icebp
test
push
and
pop
popa
cmpsl
xchg
mov
cmp
ret
daa
insb
neg
mov
xlat
cmp
xchg
pushf
dec
jge
and
xor
mov
push
aad
xchg
pop
add
xchg
push
sbb
addr16
cmpsb
pushf
add
jmp
push
ja
push
push
or
jmp
push
hlt
repz
and
jg
mov
sbbb
sub
arpl
push
notl
movsb
jne
push
adc
pop
jb
mov
negb
add
dec
or
aas
aad
mov
incb
and
scas
data16
pop
sti
xchg
lea
jge
mov
cmp
loopne
pop
popa
fldcw
lock
sbb
repnz
aam
mov
frstor
adc
pop
sbb
cmp
fcmovnbe
sub
mov
ficoml
mov
mov
mov
cmpsb
cmpl
push
add
xchg
es
cmpsb
aam
test
mov
scas
lcall
sub
sbb
and
cmc
fldenv
mov
faddp
testb
xchg
out
lea
mov
in
mov
in
addl
aam
sbb
cmp
pop
pop
jecxz
mov
fdiv
cmc
xchg
jne
inc
les
xchg
arpl
movsl
push
stos
pop
repnz
mov
ror
stc
out
mov
jbe
fnstsw
xchg
mov
jg
mov
xlat
push
jne
mov
adc
mov
imul
sub
dec
bound
and
jge
push
mov
jns
cmp
jno
or
pop
repnz
adcb
mov
outsl
cmpb
data16
mov
mov
mov
jmp
mov
movsb
push
fs
lods
lods
cmpl
or
inc
jle
pop
cld
and
inc
hlt
subl
xor
outsl
and
aaa
sbb
add
lret
divl
roll
jne
hlt
je
and
pop
sbb
xchg
lret
bswap
in
rorl
push
ja
xlat
inc
out
jl
adc
xor
scas
inc
xor
cmp
pop
mov
xchg
div
test
cmp
loopne
cmp
and
jmp
mov
add
or
dec
stos
sbb
mov
gs
fiaddl
xchg
lcall
mov
dec
mov
je
mov
or
lret
and
in
jge
adc
adc
push
or
cmp
push
add
mov
stos
and
mov
mov
push
out
mov
repz
sahf
mov
xchg
jp
jb
sbb
popl
and
lret
loope
xlat
enter
les
xlat
inc
or
lret
mov
cmp
aad
pusha
sbb
add
mov
xor
or
cmpsb
push
sbb
or
and
jnp
push
inc
setl
movsl
adc
jbe
fbld
aam
cmp
xchg
xor
shll
stos
inc
cmp
mov
call
lods
test
dec
xchg
and
pop
adc
pop
mov
in
in
dec
lahf
fldl
mov
jmp
mov
call
loop
cmp
mov
test
std
jge
cmp
mov
rcrl
iret
jecxz
gs
mov
pop
subb
sbb
add
clc
add
aaa
dec
push
jno
aas
xchg
adc
call
mov
xchg
scas
inc
js
out
dec
fdivrs
shl
jne
push
cmp
pop
mov
sub
cli
mov
xorl
cmc
arpl
fs
test
add
cmp
sbb
test
aaa
aam
cmp
cmpsl
gs
cltd
ror
hlt
pusha
inc
jge
dec
xor
cmpsl
dec
pop
out
mov
dec
mov
cmp
iret
mov
push
test
and
xchg
icebp
rcrl
xchg
push
std
mov
hlt
lahf
daa
adc
adc
out
jecxz
incb
mov
jge
mov
and
push
jp
jg
ja
or
das
stos
push
mov
scas
jp
mov
xchg
sbb
mov
add
fisttps
mov
xchg
push
lea
cmp
lahf
cmpl
inc
inc
sbb
popf
idivb
icebp
pop
fwait
mov
push
adc
dec
mov
fldcw
psubw
flds
push
mov
xor
push
pop
cli
les
and
daa
sbb
arpl
cmp
inc
pop
mov
out
mov
push
nop
in
push
cmp
fucomi
cs
cmc
or
cmp
imul
add
stos
jle
cmpsl
push
push
cmc
push
or
ficoml
into
fadd
pushf
rcr
lea
lea
lret
popa
nop
jne
imul
aam
stos
mov
enter
cmp
es
pop
int3
lods
or
icebp
lcall
clc
push
inc
mov
inc
pop
or
push
jle
xchg
movsl
push
in
xlat
pop
es
xchg
mov
push
xrelease
xchg
or
lret
push
cs
pop
pop
xchg
icebp
lahf
movsb
mov
not
fwait
inc
pop
lock
dec
lret
jne
sub
dec
mov
adc
jp
int3
mov
fisubrl
lods
pop
lcall
add
mov
dec
in
cmc
rcrl
iret
test
fiadds
inc
into
lret
lods
adc
mov
cmp
test
push
cmp
sub
mov
ret
sbb
mov
push
jbe
cld
nop
mov
shr
jecxz
pop
cli
test
bound
jo
jo
inc
pop
sub
dec
pop
repz
jb
in
sbb
jl
add
ds
adc
std
mov
stc
out
mov
or
shlb
mov
sar
pop
dec
js
cmp
les
or
add
cld
jecxz
and
or
ds
sub
test
imul
push
mov
out
lahf
jp
mov
inc
xchg
adc
fcomps
mov
test
jbe
fsubl
jne
in
mov
out
and
sub
repz
add
adcb
repnz
lock
and
sahf
add
out
dec
repnz
cmpsb
mov
inc
or
push
pop
shlb
ds
xor
or
inc
mov
jo
push
imul
or
mov
insl
inc
lret
adc
scas
jle
add
into
and
dec
lea
xchg
jb
ljmp
pop
aaa
insb
aaa
stos
and
xor
xchg
add
push
loop
jae
shll
lret
fcmove
mov
sub
popf
mov
add
arpl
repz
mov
or
cmpsb
push
fstpl
int3
vdivps
add
insb
js
mov
jne
sbb
sbb
jb
and
into
xchg
scas
js
pop
xchg
addl
push
jge
out
dec
cmp
cli
enter
jl
arpl
cmp
sub
test
cltd
decl
push
imul
pop
aas
out
lods
fsub
or
mov
jecxz
push
test
mov
jge
push
hlt
cs
jbe
push
sbb
sub
sbb
shlb
call
jns
lock
ret
add
mov
mov
mov
fnstenv
mov
loopne
or
lcall
add
inc
mov
add
mov
out
jp
pop
add
js
daa
xchg
popf
xor
xchg
push
insb
sbb
cmp
pop
mov
cmp
xor
add
int
and
rcll
movsl
ds
add
push
pushf
lcall
lods
xor
inc
push
inc
mov
std
popa
sbb
dec
adcl
aas
xor
inc
cmp
dec
mov
arpl
cs
cmp
or
outsl
icebp
xchg
or
or
les
cltd
push
jns
cmp
cltd
js
jmp
fcomi
adc
shrl
pusha
push
sub
mov
iret
jno
gs
inc
leave
scas
rolb
ljmp
push
mov
xchg
cwtl
aad
repnz
adc
sub
aas
pop
push
pop
mov
lret
ds
das
mov
paddusb
mov
les
push
inc
mov
dec
xchg
sub
dec
lret
lcall
mov
pop
adc
and
adc
mov
mov
and
fs
jno
add
in
and
imul
lea
loop
lds
pop
andb
pop
rorl
icebp
jae
lcall
inc
test
test
pusha
mov
sbbl
fs
jb
xlat
sub
push
lods
sub
arpl
outsb
cs
jae
inc
mov
adc
mov
in
and
push
push
shlb
fs
xor
mov
retw
jo
icebp
pop
in
iret
or
fldenv
mov
les
add
push
lahf
cltd
cmc
adc
xor
fidivrs
ret
push
ficoms
adc
call
shll
dec
jb
movsl
sbb
push
clc
add
cmp
jle
jnp
insl
inc
das
sub
push
cmp
mov
clts
dec
or
mov
daa
dec
dec
imul
pop
inc
lods
xchg
scas
jg
addr16
add
sbb
and
sbb
jmp
mov
xchg
rolb
repz
add
mov
lods
test
pop
lret
fidivl
repnz
jne
dec
push
lock
cmpsb
jecxz
mov
jae
adc
adc
test
xor
inc
adc
xorb
fstps
jne,pn
cs
xchg
mov
repnz
jmp
add
sbb
inc
jae
cmp
xor
xchg
xchg
xorl
pop
stc
mov
aad
jmp
add
in
mov
inc
fld
addb
test
mov
arpl
pop
adc
scas
js
cmp
add
add
mov
pop
into
data16
ds
pop
fwait
cmp
dec
pusha
ret
cld
dec
insb
push
movsl
jb
dec
pop
lods
inc
aad
mov
push
ljmp
cmp
jg
push
adc
add
in
and
jmp
jle
sbb
or
cs
test
and
mov
sbb
push
testb
cwtl
xor
jg
mov
mov
push
adc
mov
aaa
aaa
negb
mov
jnp
dec
and
inc
push
test
ds
xor
adc
mov
cmc
gs
mov
mov
add
pop
inc
lcall
aaa
mov
cld
ret
out
mov
dec
push
cmp
mov
iret
sbb
clc
xor
rcl
fildl
fcoml
aaa
or
cmp
mov
fstp
push
sub
aas
sub
dec
lock
cld
push
dec
sarl
dec
fsubrl
sbb
adc
mov
sarb
xor
inc
test
mov
fisttpll
les
popa
mov
cltd
jbe
mov
dec
pusha
and
jnp
push
sub
push
push
out
mov
loopne
mov
jmp
idivl
stos
adcl
mov
push
mov
jl
adcl
dec
cmp
rclb
mulb
ljmp
in
sti
jno
cmpsl
adc
xor
popf
adc
mov
add
sbb
cmp
dec
divb
adc
sub
lock
xchg
insb
jl
xor
notl
mov
imul
js
leave
incb
out
mov
cmp
jnp
fs
pop
push
mov
inc
lea
lods
sub
lea
xorl
xchg
dec
dec
fstp
mov
jne
pop
push
and
scas
movsl
outsl
pop
inc
dec
inc
out
sub
or
or
cli
fmull
inc
sub
push
push
adc
scas
jb
pop
psubsb
and
imul
fldl
xlat
jl
imul
adc
lds
mov
xchg
pop
push
xchg
icebp
dec
adc
pop
sar
pop
out
shll
ret
jle
data16
jbe
jp
stc
xchg
mov
int
dec
dec
push
cmpsl
sub
xorb
sub
push
lret
jle
mov
and
repnz
push
nop
scas
xchg
sub
int
rolb
jne
in
push
or
popf
fldl
loope
in
ret
iret
repz
sbb
dec
int3
loope
outsl
pop
inc
inc
pushf
mov
mov
push
cmp
cmpsb
std
add
push
mov
inc
jl
sbb
sti
sbb
cmpsb
inc
in
cs
mov
jmp
jp
xlat
adc
push
ja
jae
cmp
jg
jno
jb
call
pushf
mov
lods
jb
sbb
dec
dec
pop
iret
xchg
and
push
cmp
sbb
sbb
jle
jp
push
mov
fwait
jecxz
mov
in
jecxz
xchg
mov
xchg
adc
xor
lahf
imul
pop
mov
subl
jmp
aas
sbb
leave
mov
push
ja
inc
sub
out
adc
icebp
adc
gs
add
ds
pusha
adc
xor
cltd
iret
xor
je
outsb
jg
mov
xchg
pushf
push
pop
jle
mov
jl
cs
int
dec
pop
jle
lahf
ss
and
loopne
pop
mov
cwtl
and
mov
cmp
or
repz
pop
cmp
sub
faddl
adc
dec
add
sbb
add
aaa
sub
xor
cmpsl
out
xchg
das
push
inc
inc
and
das
daa
mov
shl
popl
das
lock
sahf
dec
fwait
je
pop
popa
arpl
adc
shlw
xorps
cwtl
ljmp
lahf
in
xchg
xchg
fnstcw
adc
cmp
inc
xor
clc
call
push
xchg
jnp
mov
fcom
ficomps
movsb
cli
or
out
xchg
lds
and
in
jge
popf
fldcw
fs
dec
movsb
pop
push
cmp
rclb
add
scas
fadd
lds
pop
jb
ja
jmp
scas
lods
mov
mov
cld
imul
cwtl
or
xor
and
rorl
jbe
adc
rcll
stc
adc
xlat
imul
adc
adc
iret
adc
pop
adc
in
mov
shrb
jb
orl
push
inc
rclb
push
mov
sub
xchg
push
and
pop
jne
mov
dec
xor
jmp
insb
aas
mov
outsb
mov
mov
cmp
jns
add
mov
je
dec
xchg
dec
or
sub
pushf
js
pop
hlt
adc
pop
fistps
sub
mov
ss
and
xlat
in
sub
sub
cltd
sbb
jae
enter
pop
xor
das
arpl
outsl
nop
ss
cld
jae
std
mov
pop
enter
mov
orb
incl
call
shll
mov
aas
xchg
mov
jecxz
test
repz
sub
in
jne
cwtl
movsb
inc
into
adc
sbb
int
and
or
dec
jo
xchg
lods
movsb
sub
or
fisttpll
adc
cmp
loop
addr16
fimuls
cltd
xchg
mov
add
xor
mov
in
imul
fadd
roll
xchg
and
stos
jne
xor
push
loop
mov
lods
repz
add
mov
xchg
push
ds
pop
add
sbb
ret
jge
push
jmp
insl
pop
inc
in
bound
mov
out
jno
jb
das
mov
adcl
cmp
xchg
cmc
sbb
shll
xchg
push
cld
inc
movsb
aaa
mov
popf
lods
adc
sub
aaa
mov
out
in
into
inc
fidivl
dec
call
js
adc
and
sarl
xor
std
fs
add
outsb
out
adc
vmaxpd
leave
mov
imul
sbb
and
cli
fbstp
jmp
ds
jmp
inc
add
jnp
jbe
sbbb
cli
test
lret
sbb
sub
sub
ret
inc
inc
push
pop
scas
out
cmpsb
lea
dec
testb
adc
inc
lea
cli
lock
xchg
cli
push
aaa
ja
sub
repnz
jbe
cmp
ja
aaa
jle
xchg
test
pop
mov
mov
mov
les
mov
outsl
and
xor
loopne
int
push
dec
aam
jg
cmp
xchg
and
shl
lods
jl
inc
push
mov
xchg
sub
cwtl
movl
dec
jae
icebp
sub
stos
repz
push
push
ja
outsl
in
mov
xchg
dec
arpl
inc
sbb
push
adc
pushf
sbbb
movsb
mov
adc
mov
je
push
cwtl
fmuls
test
push
dec
mov
xchg
cmp
lahf
and
aad
xchg
cmp
cmp
out
lret
push
fdivrs
xor
or
cmp
push
xor
xchg
pop
jge
sub
rorl
andl
insl
mov
sahf
mov
sbb
sub
push
sub
lds
or
imul
cmpsb
rolb
rorl
stc
sbb
xchg
insb
xchg
lahf
test
int3
xchg
shl
push
dec
test
outsl
mov
mov
fcomip
and
cmpsl
sub
and
stc
lret
ja
mov
inc
push
dec
and
test
in
add
or
dec
jmp
movsl
aaa
push
outsl
adc
push
push
jecxz
cli
sub
hlt
push
dec
mov
je
aam
pusha
mov
jb
and
push
cmp
pop
add
ret
xor
cld
pop
sbb
frstor
mov
jle
jp
mov
ljmp
adc
bound
cmp
hlt
bound
inc
adc
ficoms
inc
cmp
jge
pushf
test
lret
js
stc
push
rolb
pop
lcall
add
stc
cld
test
int
cs
stos
inc
mov
push
icebp
das
hlt
pminub
fsts
or
inc
xchg
push
loopne
inc
fxch
bswap
outsl
xchg
dec
lds
aad
push
fistpl
outsl
adc
ljmp
addr16
jns
icebp
enter
adcb
fisttpl
fldenv
lret
or
subl
mov
add
mov
pop
test
xor
dec
aad
fstpt
inc
cmp
std
shll
xchg
aaa
pop
mov
lds
test
mov
icebp
pop
mov
psrlq
xorl
push
aad
call
lods
xor
pop
lret
inc
mov
ror
mov
out
sub
pop
subl
jbe
loopne
shll
test
iret
mov
repz
adc
andl
or
ret
je
subb
and
iret
sar
call
adc
mov
push
scas
out
push
lods
stos
sbbb
add
mov
inc
jnp
sbb
mov
fs
push
push
fidivs
out
and
sub
pop
adc
out
jo
cmp
add
dec
inc
out
les
stos
sbbb
pushl
out
mov
pop
mov
outsl
sub
repnz
lods
mov
fistps
xchg
xchg
jl
adc
jg
lods
stc
sbb
inc
or
int3
mov
pop
and
leave
or
inc
dec
or
sarb
inc
cmpl
leave
mov
movsb
fbstp
ljmp
sub
add
or
push
decb
push
or
jo
mov
imul
nop
stos
sub
mov
xchg
in
xchg
pop
xor
push
call
add
cli
xchg
dec
mov
jae
cwtl
cltd
cwtl
ret
mov
js
imul
in
daa
sbb
test
sub
js
dec
outsl
in
movsl
lret
shr
sbb
aaa
stos
xchg
stc
mov
aaa
jecxz
into
xchg
pusha
jnp
jecxz
sbb
add
push
out
out
inc
iret
out
sub
xor
stc
movsb
xchg
rol
in
ljmp
outsl
in
jbe
mov
popa
xchg
jmp
ja
cmp
das
jge
xor
pop
mov
xor
pop
xor
cltd
xor
pop
cld
inc
and
and
jp
nop
and
orl
and
fmul
out
adc
mov
mov
pop
mulb
aaa
or
enter
jns
mov
or
or
test
cmp
push
pop
sahf
mov
mov
xor
data16
dec
dec
jne
out
push
and
and
imull
jo
sbb
sub
loopne
adc
xor
pop
loope
repz
fxch
mov
mov
jge
push
pop
adc
call
xor
or
lods
add
adc
push
ret
mov
or
sbb
adc
adc
js
out
lahf
inc
mov
leave
pop
jmp
nop
push
jns
pop
in
mov
mov
pop
and
stc
fldt
in
repz
out
in
push
nop
cmp
add
sub
cmpsl
stc
es
nop
scas
ljmp
and
and
das
hlt
dec
icebp
loop
leave
cmpsb
das
and
inc
repnz
mov
push
mov
and
pusha
movsl
mov
sbb
es
das
push
cmovnp
jle
sbb
mov
sub
mov
push
inc
out
xchg
jmp
test
cs
jnp
and
stos
jmp
xchg
sbb
push
cltd
lret
rclb
xchg
data16
xor
sbb
pusha
xor
mov
mov
mov
xor
out
sahf
sbb
fildll
mov
repz
orl
xchg
sub
mov
mov
or
inc
pusha
fidivl
push
and
mov
dec
cmpsl
xor
sub
out
repz
xlat
test
ret
cmp
add
lods
push
or
add
dec
xchg
jle
outsb
and
arpl
cmp
loopne
in
nop
jle
sub
in
out
and
mov
stc
shlb
jo
add
dec
orb
cmp
test
push
or
lods
mov
lret
xor
xchg
push
in
aas
lods
sbb
pop
pop
daa
xchg
push
icebp
jecxz
pushf
movsb
je
lahf
int3
cmpsl
divb
pop
pop
subb
frstor
repnz
out
mov
movsb
cmc
mov
inc
sbb
xor
xor
xor
popf
mov
xchg
mov
lea
jmp
aad
cmp
add
imul
xchg
mov
iret
loopne
cli
addr16
and
add
xor
repz
gs
ret
je
inc
cmp
sbb
popa
ret
dec
cmpsl
cwtl
sub
lcall
mov
mov
lret
adc
sub
rcrb
popf
aaa
mov
mov
cmp
push
sbb
push
adc
mov
or
dec
xchg
jecxz
call
in
mov
sub
inc
mov
lock
jb
mov
fisttpl
stc
cltd
int
lods
sub
jnp
loop
xchg
stos
jecxz
jecxz
das
mov
sahf
xor
lcall
mov
jg
mov
pop
mov
std
test
and
sub
test
and
fadd
mov
add
mov
push
push
cli
mov
sahf
out
pop
mov
xor
add
push
add
dec
mov
sbbl
leave
and
hlt
mov
sub
cmp
or
mov
ret
sbb
pusha
cmc
sbb
mov
mov
add
and
add
xchg
jnp
mov
or
xor
dec
sarb
lahf
rorb
std
cmpsl
mov
popa
dec
ja
dec
and
mov
out
xor
push
imul
mov
mov
mov
push
mov
or
push
push
cmpsb
out
outsb
dec
movsb
shrb
mov
adc
jne
add
cmpb
add
or
pop
sahf
mov
xor
mov
iret
in
pop
xchg
or
ljmp
mov
adc
cmc
test
je
jmp
sarl
aaa
push
jecxz
fistps
hlt
mov
popf
adc
sarb
and
fsubr
data16
push
jecxz
test
fldlg2
les
int3
les
jb
jmp
sub
sub
fldt
sbb
lods
and
and
lea
popf
clc
movsb
xor
xchg
and
fwait
cli
fadds
ja
stc
xchg
push
rclb
mov
leave
push
adc
cmc
jb
mov
push
mov
cmc
xor
out
insb
xchg
test
jle
sub
push
push
mov
xchg
sub
insb
rcll
iret
jae
ficomps
repz
cmp
push
add
inc
push
and
xchg
ljmp
imul
shr
cmc
sub
ficomps
mov
xor
insb
mov
stos
sub
pop
push
daa
scas
and
mov
inc
fs
lds
ret
xor
int3
test
mov
faddl
pop
inc
jns
repz
xor
mov
icebp
pop
xor
in
in
icebp
imulb
mov
mov
out
int
js
ss
outsb
cmp
pop
push
fidivrs
push
mov
test
jp
pushf
xchg
mov
push
fiaddl
mov
es
out
xlat
je
gs
shlb
int3
lahf
negl
es
xchg
lock
sub
aam
call
fdiv
cmpsl
jecxz
scas
cmp
adc
pop
push
outsl
rorb
pop
repnz
ror
cmp
and
fcoms
cltd
loop
sub
xchg
mov
xchg
cmp
test
les
shrb
mov
lret
insb
cltd
push
dec
std
les
fimuls
pop
lcall
dec
mov
inc
enter
cmp
imul
lret
jns
scas
pop
ret
loope
popa
jmp
inc
sbb
cmpsl
cmp
pop
outsl
xlat
sub
lods
or
fcmove
cmpsl
shll
sti
lods
xor
loopne
jno
cmp
imul
fisttpll
add
int3
sub
out
popa
cmpsb
ds
lods
push
fsts
pop
inc
xchg
cld
stc
ret
lahf
push
xor
scas
test
mov
aam
stos
rorl
adc
pop
and
nop
arpl
movsb
pop
or
or
lret
clc
or
jo
mov
dec
and
pop
mov
push
and
inc
out
jmp
jl
dec
sarb
xor
or
pop
ja
popf
add
fisubs
xchg
jne
push
fdivrs
xor
inc
fimuls
or
iret
rcl
xor
data16
push
pop
gs
or
fldenv
inc
fldl
jne
cmpsb
or
pushf
aad
jecxz
pop
mov
out
mov
xor
add
stc
push
mov
mov
cmp
out
rorl
outsl
sahf
dec
stos
sbb
cmp
into
test
push
int3
mov
push
jo
sahf
sub
mov
imul
stos
adc
rcll
dec
fmuls
dec
xor
mov
pop
sub
repz
fs
jp
int3
sti
lds
sbb
shll
mov
div
mov
or
repnz
mov
stos
imul
arpl
inc
dec
testl
mov
rcl
inc
scas
js
inc
out
push
pusha
cmpsb
mov
testb
or
jle
mov
sti
ja
inc
sub
inc
shr
rcr
dec
xor
sti
push
movsl
lds
push
cmpsl
inc
jne
xchg
inc
pop
sub
cmp
xlat
shlb
push
outsl
cmp
mov
xor
push
cmp
adc
into
jle
xchg
mov
in
sahf
jmp
scas
mov
loopne
inc
dec
cmp
repz
leave
cmp
add
mov
loop
testl
je
lds
fmuls
fsts
mov
push
fldl
sub
sbb
jmp
test
cmp
jbe
sbbb
add
aas
test
cmc
xchg
enter
push
sbb
shll
mov
pop
xchg
mov
and
fists
pop
lret
orl
xchg
imul
adc
mov
stc
pop
je
mov
leave
and
scas
cmp
ret
int3
lahf
jmp
adc
aad
sub
sbb
pop
ret
int
icebp
in
mov
pop
mov
lock
add
lcall
shrb
xchg
clc
dec
popfw
mov
sub
aaa
ss
ljmp
cmc
in
rorl
loop
push
out
lds
mov
xorl
bound
outsb
jecxz
jnp
fxch
psadbw
inc
mov
sub
jp
or
push
fsts
mov
inc
add
repnz
daa
jmp
aam
jge
icebp
pop
jns
sub
sub
loope
jecxz
mov
xchg
adc
in
ss
mov
arpl
pop
jae
jg
imul
push
mov
mov
andl
add
das
gs
test
fisubs
and
cli
xor
sub
loopne
daa
inc
pushf
js
jbe
jno
push
xchg
ud0
xor
mov
idivb
or
pop
jecxz
leave
add
xor
sub
or
dec
fwait
cmpsb
loopne
cmpsb
loope
mov
jecxz
ss
sarb
jne
inc
push
jp
popf
mov
mov
test
mov
aaa
stos
mov
lds
addr16
xor
push
mov
sub
xor
add
inc
fdivl
push
lds
add
aad
scas
mov
enter
movsb
int3
push
fsubl
in
xor
xchg
scas
rorl
shlb
pop
pop
push
les
lea
mov
jae
push
shl
push
jp
int
sbb
add
xchg
clc
cmpsl
jecxz
cltd
adc
gs
mov
xchg
lret
inc
inc
mov
jno
and
fildll
push
mov
sub
pop
out
push
mov
mov
lret
mov
movsl
sub
movsl
sbb
push
sub
and
std
cmc
xchg
cmc
push
xlat
sti
push
xchg
dec
int
stos
xchg
pop
cmp
stos
fdivrl
sbb
dec
xchg
out
jbe
insb
mov
pop
inc
pusha
cltd
imul
sbb
int
arpl
mov
dec
inc
cmp
fstps
inc
sub
test
sti
xchg
adc
fdivrs
out
xchg
sub
popa
mov
das
jb
pop
push
xchg
movsl
push
dec
imul
xchg
mov
out
or
inc
frstor
cmp
fcmovne
ret
clc
lods
call
popa
xchg
xchg
mull
fildl
iret
imul
sahf
aaa
pop
aad
mov
stos
imul
repz
jp
fstpt
sbb
jecxz
cli
test
rorl
test
sub
rcll
xor
mov
fisubrl
sbb
pop
roll
adc
and
test
mov
shll
ds
ss
mov
ja
mov
mov
inc
inc
jo
lcall
add
mov
mov
insb
hlt
addb
aas
loopne
cmpb
cmovg
insb
in
xchg
adc
lahf
sub
mov
adc
in
cltd
addr16
mulb
test
int3
inc
shll
cltd
lahf
mov
inc
sbb
gs
dec
lock
into
inc
sub
pop
inc
cmp
pop
mov
popa
and
rclb
pop
pop
cld
or
jle
push
add
loope
jmp
inc
mov
xchg
dec
dec
push
into
mov
test
xor
jp
push
xor
lea
xor
xchg
mov
xor
xchg
lret
adc
inc
xchg
xor
adc
mov
and
jb
jno
mov
adc
sarl
test
roll
mov
dec
arpl
mov
add
jmp
pop
push
out
sub
jg
hlt
push
mov
sbb
idivl
ja
stc
nop
add
mov
stc
popf
and
scas
xchg
jg
ret
jb
out
cmp
cld
dec
into
inc
and
add
fidivrl
add
jb
push
addl
cmp
stos
enter
pop
int3
es
xor
pop
fistpl
mov
inc
jno
sbbl
or
lahf
pop
mov
ss
xor
js
ret
pushf
outsb
sti
aaa
sub
mov
push
jno
pop
pop
aam
dec
leave
xchg
notb
jecxz
push
push
loop
lock
mov
xchg
lea
ds
sub
lods
jno
pop
lahf
and
imul
mov
in
lea
jae
mov
add
outsb
xor
push
mov
or
retw
cmc
shl
mull
cli
xchg
xchg
je
jno
fisubrs
sti
mov
shlb
mov
mov
push
jle
iret
inc
inc
idiv
sbb
dec
push
scas
movb
daa
pop
mov
aad
mov
jp
add
xchg
movsl
or
stc
lods
adc
mov
mov
cmp
adc
leave
aaa
movsl
clc
daa
cs
mov
js
mov
jle
jnp,pt
add
sahf
adc
push
les
test
shll
mov
push
arpl
sahf
hlt
test
call
pop
sub
pop
mov
pop
xchg
jnp
pop
es
jmp
jb
fisubrl
icebp
cmp
xchg
or
adc
idivl
lcall
mov
push
mov
push
cmp
cltd
pop
dec
loope
lret
fstps
jbe
pop
scas
aam
mov
mov
inc
adc
imul
insl
dec
repz
cs
lret
jnp
addr16
jbe
push
mov
in
cmpsb
cmp
fnstenv
jnp
sub
or
jp
mov
bound
outsb
pop
pop
push
add
pop
jnp
bound
sub
ret
ja
push
popa
adc
adc
xor
mov
xchg
adc
rorl
push
cmp
xor
mov
daa
cs
imul
cli
xlat
adc
push
lcall
mov
fsts
aas
ffree
dec
sahf
mov
mov
xchg
bound
push
mov
popa
stos
dec
xchg
adc
in
sbb
insb
shr
cmp
push
sub
test
outsl
pop
aas
fsubrs
add
fnstcw
ss
addr16
fnstcw
sub
push
ss
aaa
int
in
push
xor
pop
dec
mov
loope
fstps
jge
sbbl
push
jns
inc
std
xor
push
xchg
es
xchg
xchg
push
daa
mov
call
out
iret
cmp
or
lcall
mov
insb
dec
fucomip
xor
enter
lahf
or
nop
inc
cmp
push
inc
ljmp
sti
fwait
jg
add
and
movsl
lods
jb
mov
sub
jae
cmp
mov
add
add
mov
cltd
lock
stos
lcall
int
mov
push
call
jecxz
imul
push
pop
insl
xchg
and
cwtl
fisttpl
jge
sub
dec
imull
dec
cmp
test
nop
lret
add
mov
in
dec
jne
push
ljmp
mov
cmp
loopne
fstpt
cmp
cmp
lcall
scas
fnstenv
testb
addr16
out
cmp
or
mov
mov
lret
push
aam
sahf
rcrb
ja
or
mov
ror
stc
mov
push
insb
aad
cmpsl
push
cmc
mov
mov
rcll
sti
fists
jb
sbb
jae
or
cltd
add
sbb
mov
mov
push
stos
mov
and
xor
xchg
mov
cmp
dec
test
fisubrl
or
sbb
cmc
or
sti
add
test
push
xor
test
cmp
std
bound
shrb
fst
repz
loopne
mov
mov
adc
fstps
and
or
lods
xchg
imul
enter
cmpsl
xlat
adc
inc
sbb
stos
pop
adcl
subl
push
xchg
push
dec
jl
in
in
cmp
xorb
std
jecxz
xor
adc
cmp
out
sbb
lahf
aas
pop
test
inc
lds
cwtl
out
push
shll
nop
ss
mov
sbb
jg
mov
stc
mov
mov
pop
mov
and
inc
call
adc
lods
aaa
repnz
loopne
inc
gs
jmp
pop
popa
pop
adc
dec
into
adc
movsl
xor
in
pop
divl
sub
and
in
ret
cmp
pop
jb
leave
aaa
xchg
loope
or
imul
mov
pusha
xchg
lcall
xor
insl
imul
pop
fs
xor
sub
mov
push
xchg
outsb
add
add
sbb
push
and
int
push
lods
cmp
push
lods
adc
mov
sti
cmp
mov
adc
imul
bound
sbb
sub
scas
dec
xchg
lods
xor
fimuls
dec
repnz
mov
jns
pop
sti
shlb
mov
mov
adc
jecxz
jnp
call
mov
cmp
jg
sbb
jno
mov
xchg
sub
sti
cmp
pop
mov
fisttps
cs
ret
and
and
xor
sti
std
data16
jns
in
or
cltd
mov
iret
enter
bswap
or
fmuls
popf
add
std
fstps
cmpb
out
add
clc
adc
fs
mull
adc
loop
mov
dec
sub
jae
xchg
mov
fidivl
cmp
in
aam
cmpl
push
push
movsl
mov
jae
test
mov
movsb
mov
pop
and
xchg
mov
sub
stos
shlb
nop
js
jmp
sbb
lahf
cmp
add
xor
inc
sbb
cltd
push
mov
loope
out
shll
fwait
sbb
popf
lcall
ss
and
cbtw
in
mov
jb
adc
ficoms
mov
cmp
rsm
push
mov
in
fcmovbe
push
xchg
inc
and
inc
jp
jo
aam
sahf
push
iret
fdivr
sti
push
cld
mov
sub
jns
cs
push
jb
sub
insb
lds
ja
repnz
loopne
test
shrl
adc
repnz
pusha
sahf
xor
lcall
or
xchg
out
into
xchg
jmp
xor
movsl
pop
popa
dec
push
adc
call
test
mov
mov
xchg
xor
mov
xor
pop
push
push
je
xchg
cmovno
jns
call
dec
fwait
jo
fcomps
ds
push
fcoms
rolb
insb
jge
cmp
mov
aad
out
iret
inc
mov
mov
icebp
or
push
xor
adc
and
push
add
test
in
inc
loope
mov
into
mov
add
sbbl
or
rorl
sti
dec
cmp
iret
cmove
out
jo
mov
int
mov
nop
cmp
lds
sub
mov
adc
aas
cmp
cld
rol
xchg
ss
ret
jo
and
out
dec
icebp
cmp
pop
jl
aad
or
mov
out
pop
and
jnp
les
mov
mov
cmp
mov
cmp
out
insb
adc
movsl
andl
cmpsb
in
or
mull
push
test
push
aad
stc
inc
scas
lock
pop
insl
xchg
add
and
adc
mov
mov
xchg
jmp
mov
or
mov
arpl
xorl
js
inc
xchg
mov
sahf
push
mull
int
inc
imul
sub
mov
es
jno
push
add
test
shrb
aam
dec
iret
pushl
jo
test
bound
fisubs
mull
cltd
adc
repnz
adc
movsb
mov
fstp
adcl
psubusw
aam
sub
sbb
mov
pushl
movsb
jns
insl
rol
mov
sub
mov
lds
cld
insl
mov
or
jmp
cltd
mov
xor
in
mov
js
or
les
xor
pushf
stos
mov
jle
repz
fstl
divb
aad
jo
and
mov
mov
inc
sub
pop
pushf
xor
in
out
mov
push
fwait
sbb
arpl
std
add
cld
cmp
icebp
ret
lock
pusha
stos
stc
jg
iret
xor
rorl
out
mov
mov
cmp
cmp
imul
ds
outsl
leave
std
jecxz
ret
mov
sarl
dec
icebp
or
fmul
fidivl
jle
int
test
adc
movsb
scas
outsl
jp
sub
push
pushf
sub
mov
sub
sbbl
sub
pop
shrl
fstps
out
cmpsl
mov
mov
pushl
jecxz
add
aas
adc
mov
xchg
xor
and
jno
and
cmp
incl
out
iret
dec
in
aas
adc
fwait
pop
popa
insl
jp
mov
fsts
clc
pop
test
loop
test
jno
lcall
mov
inc
inc
popf
jecxz
or
in
cld
test
adc
pop
inc
cmp
repnz
mov
xchg
add
mov
mov
stos
jecxz
jecxz
xor
aad
sbb
dec
mov
je
in
inc
jnp
bound
testl
sahf
divl
cwtl
pop
xor
mov
pop
jae
or
and
xor
into
mov
jmp
mov
push
cld
dec
loopne
out
dec
cmc
ret
aam
cltd
rcrb
pusha
pop
js
and
and
mov
mov
ret
fcompl
es
enter
inc
mov
popf
mov
nop
cmp
in
mov
sahf
orb
jns
jne
and
test
xor
mov
outsb
mov
inc
inc
adc
lret
cmpsb
mov
out
jle
hlt
pop
add
lods
xorl
mov
inc
xor
fsubr
clc
imul
push
jno
mov
adc
mov
imul
lods
adc
scas
test
xchg
loopne
cwtl
push
inc
add
loope
dec
dec
or
or
fwait
stos
movsl
add
cwtl
or
jle
jne
pop
aam
rcrl
es
push
sbb
add
push
xchg
jmp
and
cwtl
and
push
fdivrl
inc
xchg
sbb
call
sub
out
xor
out
lcall
sub
cmc
sub
and
sbb
sbb
iret
mov
or
adc
enter
stos
mov
pop
cmp
fdecstp
outsl
aas
movsl
call
push
mov
mov
sahf
xchg
addb
jns
loop
stos
lcall
inc
sub
into
sbb
xor
jmp
mov
push
jge
adc
icebp
xchg
out
imul
lods
lahf
fcmovbe
dec
inc
mov
xor
pop
pushf
push
int
in
sbb
jl
mov
add
push
push
lock
lret
pop
lds
test
push
popf
jo
je
iret
cmc
ds
testl
mov
repnz
pop
test
sbb
sub
int3
add
stos
sub
xor
jnp
fstpl
rorb
jp
xchg
shlb
addr16
pop
outsb
push
mov
lods
sub
repz
cli
and
leave
or
and
dec
popa
imul
inc
mov
addr16
xor
gs
sti
inc
dec
xchg
mov
xlat
mov
xor
mov
dec
xlat
inc
not
lods
adc
or
mov
repnz
movsl
inc
test
sbb
sub
lds
jecxz
sarb
mov
jecxz
push
fistps
loopne
jg
cmp
fs
jecxz
push
fdivl
push
jge
push
outsl
mov
adc
stc
stc
mov
mov
pop
rcll
iret
xor
mov
fs
test
ja
add
je
push
repz
xchg
pop
repz
push
rcll
jp
cltd
jmp
fwait
and
xor
lds
jae
sub
bound
aas
sub
push
loope
xchg
enter
lret
push
jg
xchg
cld
xchg
xor
stos
sub
xchg
fmul
inc
daa
mov
xchg
std
or
jo
xchg
mov
sbb
pop
push
repnz
or
ja
inc
or
js
cmpsb
testl
lret
or
add
push
aad
mov
mov
jno
fisubl
fwait
mov
add
adc
or
dec
hlt
sub
adc
xor
lahf
adc
fcompl
mov
xchg
hlt
dec
inc
ds
xor
mov
cmc
test
sbb
xor
mov
ss
adc
cmc
inc
faddp
rcll
dec
movsl
push
xchg
and
daa
jo
loopne
enter
jge
cmp
cli
cmpl
mov
cwtl
push
lods
sub
insb
into
repnz
sbbb
nop
cmp
fs
lock
int3
negl
sbb
add
jecxz
sarb
add
cli
and
fisubl
dec
stc
cs
lret
dec
scas
cld
ljmp
add
pop
jno
lret
sub
push
xor
imul
das
movsb
mov
fmul
xchg
scas
test
mov
stos
clc
mov
test
scas
xor
fsincos
int
andl
or
jbe
fnsave
and
out
decl
cmp
addb
ljmp
push
push
testb
jp
daa
jnp
cmc
andl
pop
or
push
addr16
rcr
inc
add
insl
add
sub
shr
and
cwtl
sbb
repz
lcall
out
mov
andl
jns
push
xchg
std
inc
pop
push
in
mov
sbb
adc
mov
push
lods
push
inc
mov
adc
cwtl
mov
ret
and
test
push
std
pop
in
repz
repnz
fadd
lcall
sbb
jno
ja
sub
out
pop
dec
sahf
cmpps
mov
xchg
inc
xor
mov
dec
dec
push
push
mov
pop
dec
mov
stos
jo
lcall
inc
cld
mov
imul
ret
or
jge
in
insb
pop
lret
inc
int
add
or
lock
push
sahf
in
aaa
gs
pop
xor
pushf
xchg
ret
test
in
xor
test
pop
rorb
add
outsb
push
movsb
jmp
adc
mov
gs
mov
mov
ficoml
xchg
insb
pop
aas
enter
adc
mov
movsb
ljmp
and
ds
or
lock
stos
mov
pop
dec
mov
push
mov
cwtl
inc
mov
outsb
sti
fwait
shl
ljmp
xchg
inc
sub
xchg
psrld
cmp
stc
ljmp
pusha
inc
mov
sbb
push
adc
outsl
jg
addr16
icebp
es
stc
adc
imul
ds
leave
push
adc
adc
jae
mov
mov
inc
inc
rorl
dec
insl
dec
dec
lds
add
sub
dec
inc
cmp
xchg
ret
adc
movsl
test
dec
push
cmp
mov
xchg
dec
inc
push
mov
aaa
xchg
cmp
test
jb
cmpsl
inc
in
fsubl
outsl
mov
std
xchg
movsw
mov
mov
sub
out
lods
push
movsb
cmc
testl
test
sbb
xchg
push
adc
rcll
cmp
jb
push
adc
icebp
add
xor
xchg
cwtl
adc
out
ret
push
mov
or
gs
xchg
adc
and
push
push
jmp
in
cmp
lahf
sub
lods
mov
cld
mov
mov
mov
pop
ja
sbb
xor
push
push
rcrl
push
loopne
mov
cmp
push
fnsave
lods
lahf
inc
mov
jb
mov
adc
jae
pop
mov
sub
pop
xlat
cmpb
fmuls
mov
jge
lcall
mov
aas
popl
xchg
insl
jecxz
insb
pop
pop
pusha
xor
outsb
test
fcmovnu
cs
mov
jp
sbb
add
sub
lret
jnp
sub
sub
rorb
mov
int
adc
xchg
add
sub
pop
mov
in
in
loope
inc
aam
sarb
hlt
and
loop
cmp
imulb
in
lret
int
xor
mov
lods
xor
jmp
adc
add
data16
add
pushf
mov
in
jle
push
movsl
or
ret
inc
mov
adc
jns
jl
lock
push
testb
movsb
add
stos
and
xchg
mov
push
adc
popf
fmuls
mov
xchg
jno
push
enter
jp
jne
push
push
pop
and
dec
orl
in
into
jge
ss
in
lods
shr
mov
dec
in
inc
jle
loope
xor
push
add
add
out
cmpsl
in
lods
pop
xor
adc
xor
mov
bound
outsl
add
xor
pop
pop
jns
dec
lret
pop
hlt
hlt
int3
jb
lret
dec
mov
pop
mov
mov
push
push
mov
jecxz
mov
push
lods
lods
pusha
test
das
cs
mov
movsl
ljmp
mov
arpl
and
rol
sbb
jnp
in
cli
shlb
xchg
inc
aad
xchg
inc
xchg
inc
and
lock
aas
xor
sbb
pushf
jecxz
outsb
mov
sbb
push
mov
mov
jle
push
push
shlb
mov
lahf
inc
mov
dec
dec
push
testb
jne
sbb
pushf
test
ds
jmp
pop
scas
adc
mov
add
and
mov
xchg
lcall
jmp
or
shrb
pop
push
mov
jecxz
fldl
fwait
jmp
pop
gs
push
xor
pop
add
icebp
mov
xchg
insl
repz
call
sbbl
loope
fcmovne
pusha
mov
mov
xchg
lcall
outsb
dec
add
fldenv
lcall
adc
jg
mov
pushf
lahf
xchg
mov
movl
cli
inc
addb
inc
sub
push
inc
jge
jno
test
xchg
jae
in
cwtl
out
mov
and
icebp
scas
out
rcl
jmp
jmp
movsb
ljmp
arpl
and
add
icebp
sbb
jp
ds
and
sti
cmpsb
mov
clc
cld
push
repnz
in
mov
pusha
test
cwtl
ss
or
ret
lea
pusha
cmpsb
out
addl
ret
clc
rcll
data16
ret
clc
sbbb
js
ffreep
adc
insl
xchg
in
test
test
mov
jp
aad
cmp
xor
mov
cmpsl
scas
and
shl
mov
cld
loop
flds
fisubrl
pop
ja
out
pop
in
xchg
std
jne
gs
mov
in
inc
test
inc
dec
cmp
jge
fidivrs
mov
fdiv
inc
lock
and
in
mov
xchg
fmul
cmp
into
xlat
jae
xor
xchg
xchg
sub
in
xor
ds
or
test
aad
call
jb
data16
mov
jg
mov
std
addr16
and
mov
ds
mov
jns
fnsave
dec
push
pusha
push
pop
mov
cwtl
aam
rorl
mov
jge
cmp
int3
cmpl
add
push
mov
loope
inc
jns
push
jge
rclb
fs
fstl
dec
adc
ljmp
gs
ret
lods
and
adc
pop
imul
sti
je
or
push
push
lahf
insb
test
test
aas
ror
gs
push
cmc
push
sbb
push
ret
jnp
loopne
mov
mov
ret
hlt
mov
xchg
jo
test
ja
xchg
mov
nop
int
stos
outsb
sbb
pop
adc
push
xchg
sub
mov
push
mov
mov
mov
dec
aad
xor
cmp
sbb
mov
lods
or
add
xchg
sbb
xchg
loop
ljmp
scas
fildll
movsl
sbb
mov
mov
pop
sar
test
scas
push
xor
dec
cmp
out
adc
mov
sbb
in
mov
mov
cmpsb
dec
fidivrl
test
pop
cmpsl
mov
fnsave
inc
add
std
push
lcall
int3
cli
imul
sbb
icebp
sub
jae
imull
cmp
xor
sub
ja
arpl
dec
xlat
sahf
add
jp
fwait
and
sbb
sub
push
fcomip
push
cmpsl
sbb
jmp
cwtl
in
loopne
push
mov
sbb
sub
insb
popf
sarb
add
cmp
pop
insl
repz
mov
icebp
fdivs
push
aas
out
pop
repnz
insb
int
lea
pop
jnp
sub
cmp
xchg
test
test
lahf
bound
into
lcall
cld
jl
insl
ss
aam
lods
jne
aas
jmp
dec
push
push
add
or
cltd
jle
push
popa
adc
mov
inc
sub
xor
insl
daa
jnp
iret
jl
rcrl
jl
data16
cld
movsb
xor
add
jb
test
ds
ja
jae
cmp
cltd
out
or
ret
int
test
mov
mov
cmp
sbb
pop
jne
ds
mov
stos
mov
jmp
psadbw
jns
cli
sarl
push
outsl
into
shll
aad
shl
and
add
xchg
xchg
jmp
or
mov
push
push
mov
enter
lods
sub
movsb
pop
mov
adcl
cmp
ficomps
xchg
xor
jns
sub
jne
push
xor
aam
inc
push
adc
mov
or
imul
add
stos
mov
call
xor
pop
sbb
out
and
lret
bound
and
data16
je
dec
push
add
cld
mov
leave
arpl
fsubl
mov
cltd
mov
and
fstl
dec
icebp
jmp
sbb
push
jg
cmp
test
ja
hlt
pop
sub
stos
rcrb
or
enter
scas
test
std
mov
imul
pop
out
test
enter
fisttpll
or
adc
rorb
inc
jmp
mov
out
mov
jge
dec
repnz
or
cmpsl
adc
add
leave
mov
das
dec
insb
cwtl
xchg
aaa
ret
icebp
cwtl
stc
mov
pusha
jle
fmul
aas
or
mov
aam
pop
adc
mov
aad
add
int
mov
jp
or
movsb
lcall
jecxz
xchg
cmp
pop
adc
inc
stos
lret
clc
sub
mov
mov
int3
ret
iret
loop
adc
xchg
mov
addl
data16
add
jno
pop
sub
lcall
cmpsb
jmp
arpl
loope
push
popf
movsb
sarl
mov
jle
dec
push
subb
mov
push
das
rolb
inc
mov
lods
sub
sbb
inc
cli
mov
or
inc
jmp
fwait
xor
scas
out
lahf
stc
lds
fildl
hlt
scas
pop
lods
imul
mov
in
int
gs
out
cmp
aaa
adc
fsubl
or
pop
nop
in
pop
test
fstpt
mov
sub
jno
rcr
in
stc
in
cmpsb
aas
sahf
incb
inc
ret
adc
pop
xchg
inc
sub
cs
or
test
pushf
fisttpl
gs
pop
out
rcrb
test
stos
adc
xchg
lret
call
add
xchg
out
xor
mov
or
outsl
nop
iret
inc
fisubs
aad
call
adc
and
cli
xchg
das
ror
popa
call
lahf
mov
add
ljmp
fs
mov
xor
rclb
sahf
push
lods
gs
adc
add
mov
dec
mov
mov
insb
cmp
test
cltd
jp
fcmovb
mov
mov
fstpl
sub
dec
xchg
mov
fs
stc
sbb
imul
inc
pop
push
ficomps
fldl
lea
inc
sbb
js
out
adc
lea
rcrl
test
mov
lds
mov
addr16
test
cmc
jle
and
xor
pop
hlt
pop
pop
aad
inc
sbb
xor
loop
dec
mov
sbb
in
mov
sbb
xchg
jb
pop
subl
jecxz
push
jns
into
mov
pop
xchg
das
daa
and
or
mov
or
jb
imul
int3
sahf
xlat
or
jl
add
icebp
pop
dec
iret
push
xor
lds
scas
inc
in
shll
arpl
xor
cmp
jo
push
push
cmp
loope
or
movsb
shrl
push
and
sub
js
jae
mov
mov
aam
and
push
xor
mov
ja
int
ffree
sarb
bound
and
in
jns
push
fldenv
test
jmp
jne
push
arpl
and
xchg
test
xor
rcrl
adc
les
jl
roll
ret
mov
mov
mov
pop
test
pusha
lcall
dec
popf
adc
call
pushf
lods
hlt
mov
testl
xor
jmp
or
stos
adc
pop
pop
insl
das
push
cmpsl
out
push
jne
das
pop
xchg
divl
mov
cmp
and
arpl
icebp
dec
jns
mov
fsubl
imul
jmp
pop
ss
xchg
sbbl
xchg
jns
lods
pop
mulb
out
mov
pusha
outsl
sbb
sahf
rclb
iret
test
fldl
imul
mov
outsb
hlt
das
jle
out
or
sub
out
pop
add
pop
daa
mov
cmp
fstps
or
adc
outsb
es
or
jmp
ds
mov
lret
sbb
dec
mov
push
push
lea
or
pushf
adc
adc
sub
nop
call
outsl
outsb
pop
dec
jbe,pt
lahf
sbb
stos
insl
dec
insb
test
or
push
pop
dec
push
mov
jae
pop
mov
imul
xor
xor
sub
clc
ljmp
mov
or
xor
xor
push
mov
fs
pusha
ljmp
stos
cmc
push
ja
jb
mov
ss
pop
ja
lds
jno
sub
jle
mov
ljmp
mov
aam
incb
scas
negb
cmpsb
pop
mov
xor
mov
cmpsb
inc
fcompl
int
push
cmp
mov
pusha
rcrb
mov
movsl
fs
shlb
insb
je
lods
mov
enter
sub
movsl
ljmp
mov
mov
push
in
out
sti
cmp
lret
fdiv
push
arpl
xchg
je
mov
out
dec
movsb
mov
dec
sub
push
cld
adc
xor
jne
bound
adc
xor
cmp
mov
pop
xor
mov
inc
std
mov
and
cmp
out
add
je
inc
in
jp
pop
pop
mov
dec
ficoms
imul
imul
repz
loope
and
pop
les
in
movsb
adc
cwtl
mov
adc
out
lahf
jg
mov
xchg
ss
nop
push
add
imul
mov
push
jmp
rorb
testb
in
fidivrl
cmp
and
jge
stc
and
testl
add
sbb
mov
sub
lea
dec
xor
roll
cmp
xchg
mov
add
and
es
fdivrl
adc
push
pop
cmpsl
dec
test
in
in
mov
mov
fdivs
jbe
or
push
xchg
fs
mov
mov
fcoms
jno
test
stc
or
push
jbe
mov
ds
mov
mov
scas
scas
mov
fisubrs
aam
mov
nop
pop
push
mov
daa
add
mov
mov
cmp
mov
cmpsb
dec
and
aam
fstpt
sub
add
mov
nop
sbb
shlb
mov
shrl
xor
adc
cs
sub
sbbb
pop
xor
add
ja
sub
push
pusha
cltd
push
inc
out
dec
shlb
stc
cmp
pop
in
jb
pop
sti
cltd
sub
das
jmp
mov
adc
push
daa
sub
mov
push
adc
fucomip
jge
jmp
fcoml
popa
hlt
push
push
popa
shr
push
push
sarb
fstpl
es
adc
cli
ss
popf
das
mov
icebp
rclb
add
mov
cmpl
mov
aad
cs
adc
leave
mov
pop
enter
aad
xor
lret
xchg
jp
sbb
das
xchg
les
cmp
scas
pop
sub
scas
inc
or
xor
mov
add
and
ljmp
dec
pop
mov
xchg
cmp
xlat
inc
xor
pusha
stos
bound
mov
aad
pop
shl
jns
or
xchg
jge
lods
stc
push
adc
or
pop
in
roll
adc
jae
jle
lret
fcoms
and
cwtl
pop
addr16
jo
andb
add
jmp
xlat
iret
loop
push
stos
jns
fsub
fildll
repz
cmp
add
imul
cmc
sbb
sbb
aaa
lret
sub
mov
lods
neg
inc
cmp
mov
enter
or
sahf
popf
sahf
cmp
ret
repnz
dec
rol
call
lret
divl
inc
dec
jge
or
out
pusha
lods
in
push
inc
mov
xor
xlat
mov
cmpsb
js
jo
or
in
xor
sub
loopne
imul
cltd
cmp
fadd
push
gs
cwtl
in
test
inc
pop
jb
outsb
inc
push
mov
js
inc
fiaddl
ret
xchg
adcl
jmp
dec
dec
cwtl
rorl
pop
aaa
out
inc
push
lret
imul
pop
or
xor
and
cmp
dec
and
imul
lock
push
rclb
movsl
shlb
sub
mov
pop
inc
scas
adc
lret
mov
mov
xchg
insl
data16
xchg
addl
cwtl
stos
or
test
insb
sub
fstl
add
mov
mov
xor
stos
mov
inc
mov
stos
lds
ret
mov
mov
scas
stc
dec
mov
push
fwait
pop
es
bound
mov
and
mov
sarb
jo
add
inc
ds
lock
xor
fcmovnbe
stos
andb
movsl
insl
jmp
jmp
fwait
dec
stos
dec
lcall
or
popa
mov
test
adc
test
fs
repnz
push
repz
subl
pushl
mov
xchg
lods
mov
cmpsb
clc
jle
stos
das
add
xor
rcrl
pop
inc
outsl
cmpsl
sbb
push
pusha
rolb
push
idivb
fcoms
cmpsl
xlat
xorl
mov
xor
adc
push
dec
fisubrl
test
cmc
xor
xor
aaa
sub
add
mov
fisubrl
sarl
ljmp
sbb
fsubs
es
cli
mov
jmp
inc
arpl
insl
xchg
fsubl
push
pop
pop
inc
mov
dec
adc
add
xchg
loope
adc
sbb
test
lret
xorl
pop
pop
mov
fildl
adc
data16
push
push
inc
ljmp
sub
fcoml
push
js
scas
dec
cmp
popf
adc
adc
stos
aaa
xchg
iret
mov
fwait
xchg
pop
andl
mov
jmp
sbb
adc
adc
insb
insb
sbb
pushf
xchg
repnz
sub
pushf
fsubl
push
inc
fldcw
adc
mov
sti
pop
test
pop
repz
out
dec
or
mov
in
mov
xchg
sbb
sub
add
push
test
lods
loop
hlt
and
jecxz
movsl
icebp
inc
cli
cld
cmp
adc
nop
cs
and
push
fisubs
mov
xor
jns
add
rcrb
mov
movsl
in
dec
mov
mov
cmp
push
or
test
mov
pop
scas
lods
add
mov
test
inc
rcrl
popf
repz
mov
pop
xchg
out
insl
mov
mov
push
add
pop
sbb
pop
pop
cmpsl
cmc
das
test
rclb
jmp
sub
fwait
xchg
popa
cmp
dec
dec
inc
jnp
and
and
jg
push
ja
in
inc
and
cmpsl
or
cmp
mov
xlat
push
mov
sarl
sub
xlat
ss
cs
mov
xchg
je
popf
mov
pop
loop
push
lcall
hlt
and
addr16
adc
dec
bound
xor
icebp
add
arpl
scas
lcall
leave
repnz
mov
jns
fcoml
lods
sbb
mov
lods
mov
dec
psrlq
js
popf
lret
data16
sbb
rol
ja
stc
push
dec
fwait
jge
add
jge
dec
pop
stos
jo
fwait
xchg
pop
jmp
adc
mov
or
sarl
or
outsl
jb
sub
dec
jns
xchg
inc
inc
xor
push
adc
adc
inc
das
add
lret
inc
and
es
dec
out
cmp
shl
add
sahf
xorb
dec
loopne
inc
lods
dec
loopne
cmc
pop
add
cmp
mov
rcl
mov
sub
add
imul
jmp
or
push
stos
push
inc
lret
shld
push
pop
cmp
in
jbe
mov
imul
shll
cmpsb
mov
push
mov
std
mov
out
lock
add
dec
int3
xchg
xchg
pop
inc
mov
sti
jb
out
ret
ror
push
jnp,pn
andb
push
sub
gs
rcr
sbb
popa
dec
cs
nop
das
popa
incl
pop
ds
cmpsb
mov
add
xor
jo
mov
pop
call
jg
es
inc
fisubs
adcl
enter
xchg
and
aam
push
jp
pop
xor
in
nop
xchg
adc
jge
fsub
stc
imul
das
xchg
mov
xor
cmpsb
out
push
mul
test
add
notb
jg
inc
add
rcrb
and
cwtl
pop
rcrl
ljmp
ja
and
push
out
push
xlat
gs
jno
dec
leave
stos
jbe
jle
dec
jge
int3
out
ljmp
dec
and
xor
cmc
fs
push
sbb
jns
ds
mov
ret
sub
sahf
sbb
lcall
ja,pt
lods
pop
push
dec
outsl
mov
fcomps
test
stos
into
ficomps
pop
fwait
adc
xor
push
stos
loope
mov
loopw
jle
roll
fidivl
and
repz
lret
push
mov
mov
jae
es
int
stos
jmp
icebp
dec
daa
out
xor
int3
add
xchg
daa
inc
fildll
iret
ficompl
test
nop
jg
pop
into
pop
test
movsl
fsubs
adc
test
sub
je
dec
inc
ljmp
out
cmp
inc
jbe
nop
jno
adc
pushf
cmp
xlat
addr16
push
cltd
jb
xlat
xchg
sub
fisubs
lcall
in
in
add
sbb
mov
push
mov
push
fdiv
fs
adc
adc
push
dec
jns
cmp
adc
sbbl
mov
fstpt
hlt
xchg
iret
pop
xor
pop
ficoms
mov
xlat
add
mov
ja
aas
and
and
pushf
dec
lahf
fdivrs
dec
mov
sub
lretw
or
cmp
sbb
loop
rcrb
pop
sbb
aaa
mov
arpl
enter
sub
mov
mov
push
mov
outsb
ret
dec
bound
js
imul
add
out
les
pop
jae
sbb
in
xor
pusha
lahf
mov
arpl
pushf
push
out
adc
adcl
push
hlt
xchg
aad
cmovbe
fmulp
out
pop
mov
ds
xlat
mov
mov
sarb
out
push
ja
or
mov
mov
ja
sub
push
ror
push
pop
and
out
es
sub
jno
jl
jl
inc
cmp
fcompl
xor
out
pop
xor
repnz
mov
mov
cs
gs
sbb
inc
movsb
dec
arpl
xor
sbb
jmp
adc
inc
add
shll
and
sbb
sub
lock
jne
cli
leave
sbb
pop
loope
mov
int3
pop
into
lcall
adc
jge
out
push
ja
add
fdivrs
fsts
xchg
repz
in
push
jne
mov
push
sbb
jbe
stc
mov
or
shl
in
std
mov
fnstenv
mov
std
inc
in
or
repnz
imul
rcll
outsb
aad
sbb
test
mov
cmpsl
addl
ja
in
mov
pushf
iret
add
xchg
add
jle
adc
add
sbb
push
xchg
jno
pop
sub
inc
loop
fnstcw
scas
rorb
into
leave
pushf
and
pushf
lcall
jb
pop
mov
imul
ret
sbb
insl
cmc
mov
sub
inc
fmull
test
sbb
dec
inc
dec
mov
cmpsb
cmp
cltd
filds
pop
fistpl
mov
jnp
sbb
cli
dec
mov
int
mov
cld
test
inc
pop
and
cwtl
and
dec
xchg
or
push
push
ds
pusha
cmpl
pushf
aam
sahf
inc
xchg
mov
ret
int
lea
fisubrl
cld
cmc
into
jno
ret
inc
mov
pop
dec
or
push
imul
mov
outsb
frstor
mov
lods
call
push
scas
gs
fistl
js
out
sbb
jl
or
add
adc
ret
iret
ja
mov
xchg
call
ljmp
test
xchg
nop
xchg
arpl
jnp
addb
adc
pushf
js
mov
add
fbstp
pop
fwait
push
jbe
inc
loopne
scas
dec
sbbl
pop
push
inc
push
dec
inc
jo
xor
push
sahf
std
mov
andl
jmp
inc
push
jmp
jp
test
cmc
xchg
and
ja
dec
or
pop
and
ret
xor
in
int
imul
mov
jecxz
inc
inc
sbb
sbb
mov
push
shll
clc
inc
scas
movsb
xchg
jp
inc
fs
add
add
sub
fwait
inc
cli
jmp
jl,pn
aaa
ds
sbb
cmp
cmp
lods
inc
sub
mov
sti
jecxz
mov
fbld
adc
mov
movsb
loope
dec
pop
push
add
inc
movb
and
pop
sahf
sbbb
push
jo
rcl
daa
filds
sub
movsl
jmp
repnz
out
loope
ficomps
repnz
sub
jns
test
mov
jo
cmc
pusha
dec
inc
adc
imull
inc
rcrl
sbb
imul
dec
inc
mov
in
roll
cwtl
add
pop
sub
cwtl
ret
out
sub
mov
idiv
aad
sahf
out
add
in
aas
subb
outsl
jo
add
mov
in
aaa
jecxz
jno
fimull
outsb
out
out
shrb
in
movsl
out
cmp
add
inc
add
lea
mov
xor
call
stos
pop
daa
dec
fmulp
aad
outsb
add
stos
and
cmp
dec
gs
xchg
adc
or
sbb
or
push
cmpsb
arpl
testl
pop
push
nop
add
sbb
jg
mov
push
ds
call
testl
in
push
rorb
xchg
sahf
jns
mov
push
int3
dec
aaa
jg
sbb
leave
fdivl
movsl
mov
mov
mov
cld
xchg
test
pop
cmpsb
jne
mov
xor
or
mov
das
push
rolb
lock
and
cmp
gs
fabs
push
adc
sbb
xchg
mov
in
loope
mov
add
adc
dec
sub
fcmove
cmp
fstpl
ja
cld
push
jl
sbb
inc
cmp
xor
sub
mov
clc
sbb
movsb
aad
clc
ss
fsub
jno
xor
outsl
cltd
fnstcw
xchg
push
adc
popa
cmp
add
xor
adc
jo
push
add
mov
bound
add
lods
xor
insl
mov
addr16
cmp
lds
sub
test
std
ficoml
leave
sbb
imul
fdivrs
dec
inc
loope
or
push
dec
loopne
ror
das
pop
div
insl
shl
scas
mov
sbb
or
into
pop
fs
xchg
stc
sbb
cmpb
sub
or
xchg
shll
jge
push
pop
adc
jbe
sbb
rcll
cmp
push
or
pop
fwait
outsb
or
out
pop
or
sbb
negl
mov
inc
lret
xchg
insl
loope
cmp
mov
lcall
test
into
fistl
cmp
xchg
pop
or
enter
jmp
sub
cs
or
xchg
cmpsl
xchg
xor
cmpsb
aad
push
rcl
call
pop
cmpsb
out
jae
scas
lcall
pop
pop
pop
movsb
dec
pop
das
xacquire
push
ficoml
xchg
dec
scas
push
pusha
fs
enter
xchg
das
dec
jne
and
sbb
inc
or
xchg
cmp
aam
xchg
xchg
outsb
add
mov
mov
test
mov
mov
dec
sub
je
push
cmp
xlat
sbb
cwtl
loop
mov
xor
sbb
or
cmp
mov
jo
stos
fisttpll
nop
mov
cmc
jl
push
sub
and
xor
push
or
loope
lcall
add
test
mov
je
test
push
cwtl
into
movsl
movsl
push
mov
test
sub
adc
push
inc
mov
call
ljmp
jbe
ret
inc
inc
add
aam
cmc
sbbl
pop
ja
sub
and
pop
nop
inc
xor
jnp
rcl
bound
das
xor
push
mov
sahf
pusha
in
out
nop
les
add
in
mov
xor
cmpb
pop
stos
incb
cmp
imul
pusha
loopne
mov
add
ds
scas
adc
sbb
cld
test
push
cmpsl
adc
ljmp
jmp
lods
pusha
add
pusha
pop
call
cmc
sbb
push
inc
adc
icebp
int
leave
aaa
repz
das
cmpsl
pusha
scas
mov
mov
test
ja
in
or
sbb
repz
loope
xchg
in
jnp
adc
popa
sbb
in
aas
imul
mov
ss
sub
jp
cmp
pop
jecxz
add
jb
subb
sbb
in
mov
shll
pushf
jns
fpatan
mov
test
mov
adc
adc
add
push
adc
add
aad
mov
mov
fdivr
ss
or
out
mov
xor
lcall
hlt
cmpsb
lret
add
sar
sub
push
xor
sbb
fnstcw
adc
and
adc
addb
dec
pop
cmc
xchg
fistl
popa
and
mov
or
mov
xchg
cmpsl
in
xchg
mov
add
dec
inc
lcall
dec
out
jae
data16
mov
jbe
test
and
push
fcompl
bound
mov
cmp
add
and
cmc
xchg
mov
std
jp
xchg
fwait
lods
mov
cmp
xchg
out
out
lods
push
int
mov
push
aas
and
mov
push
bound
sub
fistps
mov
js
xor
cmp
xlat
inc
incb
push
clc
dec
push
or
pushf
dec
ret
into
imul
xchg
imul
xlat
adc
push
fisttpll
ds
fcom
xor
aas
and
mov
fdivrs
scas
outsl
insb
push
fcoml
pop
lods
addb
movsb
lea
test
dec
xchg
jge
jl
and
jo
imul
xchg
or
outsb
fildll
inc
lret
mov
sahf
sbb
or
hlt
sbb
adc
insl
ja
mov
loope
mov
sbb
lock
cmp
cwtl
call
xchg
xchg
imul
shlb
sbb
adc
pop
mov
negl
imul
pop
cmp
xor
outsb
fisubrs
mov
jg
enter
sarl
push
jnp
sbb
jg
bnd
imul
inc
outsl
jmp
imul
and
jg
push
mov
jl
lret
fs
popf
or
xor
test
sbb
ljmp
add
cmp
lret
dec
cwtl
pop
sub
cmp
push
xor
mov
cmp
or
jecxz
push
cmp
cs
cmp
jge
test
les
cmpsw
jecxz
xchg
divl
and
mov
inc
jg
lahf
iret
pop
insl
mov
or
sub
and
dec
stos
fdivrs
jnp
call
cld
add
cmp
iret
xchg
scas
fldl
mov
icebp
adc
lods
js
decb
push
test
add
cmp
adc
lds
test
rol
jne
test
sub
sbb
mov
add
repz
shll
call
push
cmp
sbb
movsl
jg
lock
fisubl
cltd
xchg
pop
lock
push
js
mov
orl
xchg
or
loopne
inc
jl
inc
movsl
fidivrl
mov
fiadds
mov
inc
jns
pslld
dec
test
dec
jno
movb
jo
xchg
orb
fsubl
cmpsb
cmp
pop
fcmovbe
outsl
sbbl
adc
mov
cmp
iret
mov
pop
outsb
adc
fnsave
pop
pop
mov
leave
sub
mov
fs
mov
cmc
sbb
adc
inc
push
dec
push
jle
lret
out
push
js
sbb
clc
cld
cmp
pushf
int
pusha
push
cmpsl
cltd
lea
jns
and
pop
std
jle
lret
jo
sub
xchg
cli
inc
mov
mov
add
lods
cmp
outsb
addl
push
ret
fcoml
or
sub
mull
hlt
fwait
pop
cmp
xor
xchg
ret
loop
cmp
das
fwait
xor
cwtl
clc
stos
push
mov
or
roll
mov
int3
pop
in
mov
sbb
les
push
sbb
mov
adc
int3
sbb
sub
icebp
aaa
in
mov
scas
scas
cmp
andl
lods
and
or
push
cmpsl
stos
mov
adc
mov
dec
inc
mov
cmpsb
push
jp
push
jno
mov
popf
pop
pop
mov
stc
ret
sbb
inc
mov
xchg
addr16
pop
add
mov
lods
xchg
inc
shl
popa
loope
rcll
xlat
push
std
fcoms
push
xchg
pop
jnp
or
or
fwait
ss
in
jecxz
sub
inc
popa
out
sbb
jge
dec
pop
mov
xchg
push
rcrl
out
push
ret
mov
push
cmp
xchg
lods
out
pop
cmp
imul
push
mov
mov
in
roll
test
inc
push
add
call
jb
push
inc
push
adc
jg
adc
or
in
mov
cltd
hlt
popl
movq
lcall
add
sbb
push
add
jp
pop
xor
sbb
or
xor
outsb
pop
mov
lahf
out
sbb
icebp
pop
push
pop
push
pushf
cld
insl
xor
inc
pushf
pusha
pop
aad
movsl
scas
mov
mov
mov
add
mov
cmp
aas
add
sbb
xchg
cmp
lcall
scas
push
iret
xchg
cmp
add
cmpsl
and
mov
inc
add
sub
hlt
ss
jl
daa
push
aaa
xchg
cmp
daa
cmp
mov
nop
add
push
pop
pop
push
pop
pop
daa
push
std
js
mov
and
push
inc
out
and
sahf
mov
xchg
test
adc
or
sub
cmp
shll
addl
dec
jno
lea
icebp
dec
mov
aam
and
mov
flds
mov
mov
mov
mov
push
jae
dec
rcll
fs
jb
outsl
iret
mov
xlat
pop
out
int3
or
jns
imul
adc
push
fs
dec
call
sbb
ja
int
pop
dec
rclb
clc
pop
out
or
into
sarb
enter
mov
movsl
mov
cmp
out
pop
stc
insb
pop
inc
sub
test
inc
mov
mov
popa
aaa
cmp
push
cmp
sbb
lret
cltd
rol
iret
ds
std
cmpsb
popa
sbb
pop
sub
and
pop
sbb
pop
scas
add
in
popa
popa
stos
repnz
test
leave
cmp
mov
mov
pop
aaa
in
in
inc
les
jg
and
aas
xchg
lcall
sbb
xchg
sub
xlat
and
aad
push
or
rcrb
js
or
sub
and
and
xchg
jge
xor
gs
out
dec
cli
stos
out
ficoms
adc
cmc
shl
and
or
int3
jge
adc
popf
mov
mov
adcb
pop
push
add
sbb
xorb
ret
xchg
rclb
cmc
inc
js
add
push
in
cmpsl
testb
test
popf
arpl
push
fimull
sbb
aad
jns
popf
clc
jg
add
in
push
mov
in
out
out
xor
dec
mov
jmp
sub
hlt
jae
jnp
divl
insb
and
stc
mov
shlb
or
or
scas
adc
addr16
pop
add
and
sub
ljmp
aas
data16
xor
fisttps
aad
jl
rorb
lret
lcall
inc
cmp
cmpsb
mov
push
push
sbb
and
or
push
nop
and
xchg
jmp
add
adc
or
dec
jle
scas
inc
push
int3
out
int3
inc
sahf
sbb
cli
fcmove
out
mov
ja
pushf
jg
cmp
cmp
adc
jb
mov
js
xchg
adc
scas
xchg
in
pop
pop
int
out
push
mov
mov
add
xchg
xchg
push
fld1
stos
sti
arpl
cmp
sar
clc
leave
ffreep
mov
loopne
movsl
mov
inc
jae
ret
mov
popa
dec
add
out
lret
pop
or
ret
cmp
xor
mov
es
dec
push
daa
jb
push
in
ds
pushf
arpl
cmp
xchg
and
stos
xchg
js
mov
dec
sarl
xor
pop
add
inc
pop
push
lret
aam
xchg
jge
test
add
roll
xchg
les
adc
mov
lea
aaa
push
jae
pop
das
dec
pop
stos
sub
lock
out
jg
repz
or
sub
jg
lahf
dec
jp
lods
and
and
gs
leave
in
pop
mov
add
shlb
arpl
ret
sahf
fstps
mov
cmpsb
fmuls
add
movmskps
push
jmp
or
add
xor
push
inc
sub
cli
lock
lods
lahf
pop
sbb
add
mov
jne
jmp
jno
into
xor
popf
mov
in
push
pop
lock
inc
nop
cmpsb
add
lea
sbb
add
out
pop
inc
imul
addb
fistpll
push
xchg
sbb
mov
dec
pusha
dec
mov
in
xor
add
jne
push
cmpb
fildll
and
bnd
cmp
sub
dec
mov
rclb
inc
adc
push
xlat
push
push
mov
int3
jb
xor
pop
lods
xor
sub
pop
fimull
sahf
push
or
outsl
out
imul
out
stc
lds
dec
adc
dec
lahf
gs
jl
movsl
jae
jae
jo
adc
mov
lea
repnz
aas
scas
dec
sarl
sbb
sbb
movsl
ret
andb
adc
stc
leavew
sahf
repnz
add
jp
leave
cwtl
mov
jmp
rclb
mov
lahf
cmp
jg
add
stos
in
cltd
jno
push
out
push
xchg
out
cmp
sub
enter
stos
cmpsl
and
mov
aas
imulb
push
cli
rcrl
pop
movsb
sub
adc
imul
lods
sub
pop
xchg
pop
push
cmp
leave
mov
mov
push
pop
pop
mov
shlb
popf
adc
int3
js
call
rorb
mov
ret
push
in
cli
mov
pop
int3
nop
cmp
xchg
cmp
clc
lds
sbb
mov
mov
mov
push
adc
lret
out
imul
shll
adc
and
mov
sbb
push
sbb
or
scas
dec
arpl
out
inc
xlat
sbb
imul
mov
adc
or
inc
scas
aad
rcl
xchg
mov
dec
movsl
mov
or
out
sub
cli
scas
sbb
ret
sbb
mov
sub
mov
ficoms
inc
cmp
adc
inc
cld
cli
dec
add
mov
xor
fsubrl
adc
lods
repnz
add
aam
aas
in
in
xor
cld
push
push
add
scas
in
or
mov
out
push
dec
jns
cld
mov
or
add
mov
pusha
jne
cwtl
sbb
xchg
insb
cmc
xchg
sbbb
adc
mov
pushf
lock
and
fadds
enter
cs
push
cmp
jg
rorb
xchg
sbb
loope
inc
sub
fsqrt
in
mov
and
mov
jno
test
fwait
push
stos
loop
or
or
xchg
cmc
mov
pop
and
sbb
gs
inc
mov
mov
pop
push
xchg
call
mov
mov
cmp
lock
dec
xchg
movsl
mov
cmc
and
je
js
mov
std
add
insb
xchg
lods
pop
xchg
cmpsb
ficompl
mov
iret
movsb
sbb
mov
inc
es
dec
in
cs
pop
xor
imul
xchg
xor
pop
xchg
mov
mov
out
adc
mov
inc
mov
ss
sbb
cmp
sub
test
into
fistl
pop
xchg
sbb
pop
inc
adc
add
dec
out
push
daa
xchg
or
and
sarl
push
call
nop
inc
xor
push
xor
xor
dec
sbb
xor
pop
cmp
out
aaa
cltd
xchg
sub
mov
jo
xor
cmp
add
sbb
dec
jmp
pusha
push
adc
mov
dec
or
dec
mov
mov
cli
and
jo
iret
jne
sbb
repz
pop
xchg
pop
and
out
push
cmp
divb
ret
cmc
into
test
push
lret
std
fbld
mov
mov
outsl
fcmovnu
ret
sbb
in
sbb
cwtl
jle
repz
cmp
in
flds
hlt
inc
pop
scas
dec
dec
add
xlat
xor
or
push
shrb
mov
mov
and
push
insl
notl
lds
xorl
mov
push
ljmp
pop
inc
pop
ja
fldt
jno
nop
fadds
addl
add
lahf
mov
lods
jl
movsl
mov
icebp
or
adc
loopne
sbb
roll
push
xchg
jns
out
inc
or
jl
push
cmp
mov
xor
xor
fwait
test
and
or
sub
dec
leave
ja
dec
shll
adc
sbb
fldenv
mov
shrl
imul
mov
mov
or
jns
movb
mov
push
pop
and
aas
ret
sbbl
add
push
test
and
cmp
jb
call
sub
scas
sub
mov
cmp
call
shl
enter
sti
mov
jl
je
pop
mov
rolb
dec
inc
je
bnd
rcr
and
cmp
iret
sahf
mov
ret
dec
bound
dec
js
out
cmp
mov
imul
mov
je
lahf
popf
mov
push
pop
mov
popf
xchg
jl
sbb
jle
es
jb
mov
fwait
daa
mov
hlt
montmul
cmpsb
inc
loope
jp
pop
js
test
add
push
cmp
subl
xchg
cli
js
push
sbb
sbb
stos
rclb
in
adc
ljmp
loopne
or
jno
inc
std
mov
xchg
push
sbb
add
movsl
mov
in
mov
es
fists
loop
test
outsl
and
xor
punpckhbw
test
mov
sub
sbb
test
sub
or
jae
push
mov
dec
lret
scas
xlat
mov
mov
dec
push
loop
or
push
dec
xlat
xor
add
xchg
cli
mov
jmp
dec
adc
xchg
insb
jecxz
xchg
dec
mov
std
sti
out
xor
btr
fmulp
mov
or
std
or
inc
cmpsl
out
cwtl
and
into
mov
in
or
pushf
rcr
or
mov
loop
jns
fstl
loop
xor
cld
ror
ja
cmp
xchg
lcall
adc
push
xchg
dec
lds
popa
pop
mov
rorb
and
xchg
cld
dec
mov
in
stos
sub
add
std
add
les
mov
imul
cmp
shl
xor
xchg
add
rorb
out
inc
xor
or
das
es
in
cmp
sbb
ret
adc
pushf
mov
sbb
add
jle
in
mov
sbb
ficomps
repnz
pop
scas
or
sbb
xor
mov
jmp
mov
mov
add
outsb
sub
sbb
ret
cmp
lea
icebp
test
mov
mov
insb
rcrl
in
sbb
in
ret
xchg
out
cmp
push
pushf
push
cs
sub
jmp
mov
push
xlat
cltd
stc
mov
cmc
stos
out
cwtl
mov
lods
lds
in
sbb
xchg
call
pop
ret
push
jle
call
xchg
scas
ljmp
jno
dec
ljmp
faddl
mov
push
cmp
cwtl
and
mov
mov
out
popf
push
xchg
mov
inc
mov
mov
add
mov
mov
mov
cmpsb
testb
lods
sbbb
inc
sbb
and
mov
fcomp
cmpsb
int
arpl
lret
ret
push
mov
sbb
mov
jne
inc
ror
sbb
mov
sub
adc
fs
imul
test
loope
mov
shr
dec
mulb
loop
sbb
mov
xchg
clc
outsl
test
out
mov
pop
pop
fidivl
and
insl
out
dec
mov
enter
dec
jae
stos
fistpll
jno
xor
std
dec
sbb
aaa
repz
push
mov
imul
or
imul
sbb
fwait
jae
int3
pop
loope
adc
add
add
shrb
jae
lea
pop
sti
jmp
adc
lret
js
sub
add
dec
fildl
push
aas
fidivs
mov
xchg
int
test
mov
dec
and
in
mov
xlat
mov
clc
sbb
inc
sbb
add
negb
jge
movsb
test
add
mov
jns
cwtl
cmp
xor
cld
sub
sbbb
mov
out
cmp
andb
ljmp
loop
pop
imul
in
mov
cmp
xor
sbb
and
sub
pop
and
lret
sbb
pop
fildll
pop
jecxz
roll
into
jg
and
sbb
dec
pop
jns
fcmove
jb
data16
cmp
push
jnp
out
insl
imul
arpl
aad
cs
loope
xchg
repz
add
adc
movb
jl
push
and
sub
mov
insb
lds
mov
and
movsb
dec
addb
xlat
jns
pop
adc
add
mov
jle
mov
xor
or
ret
inc
mov
rorb
sarl
ret
sbb
sub
push
test
adc
pop
repz
push
insb
pop
adc
ja
stos
mov
addr16
adcl
push
imul
mov
dec
popa
mov
loope
es
xchg
mov
mov
xchg
imul
mov
repnz
jne
xor
add
jno
add
jbe
fs
pmulhw
inc
je
dec
int
incb
mov
outsl
arpl
sahf
scas
fcmovbe
subl
sub
test
pop
roll
aaa
cs
into
sbb
mov
frstor
insb
mov
testb
imul
jno
cmp
mov
or
xor
mov
cld
adc
inc
orl
pop
push
pop
inc
ret
leave
add
pop
mov
stc
pop
notb
mov
mov
add
pop
cmp
mov
mov
outsl
clc
ja
lods
mov
adc
mov
push
sbb
cltd
jmp
mov
addr16
addr16
or
int3
jmp
xchg
repnz
cmpl
pop
jl
loope
jle
addr16
int
or
ret
mov
je
test
imul
lea
mov
das
repnz
pop
add
enter
or
inc
in
ljmp
push
shrw
ljmp
loop
cld
ret
xchg
cmp
dec
std
adc
mov
sbb
jl
cmp
sub
and
js
sbb
ret
or
ljmp
jno
push
outsl
push
sub
xchg
push
lds
iret
cmc
sti
push
in
push
mov
pop
stos
sbb
push
dec
dec
popf
push
and
push
arpl
shll
sub
lret
cli
ret
sub
pop
xchg
sbb
and
insl
icebp
test
pop
mov
cmp
lods
es
jp
fld
lock
into
cmc
push
fldenv
cld
add
fsubrl
add
in
sbb
lea
ljmp
adc
push
jmp
add
inc
je
jo
sub
and
jmp
sbb
sub
stos
jmp
gs
push
das
xor
pop
lock
test
scas
lret
pop
aaa
mov
call
ljmp
cmpsb
fists
xor
sbb
je
mov
std
jmp
push
addr16
and
repnz
pop
push
leave
adc
adc
aam
push
and
cli
jnp
xchg
fbstp
bound
lods
sar
inc
mov
inc
sub
mov
cmpsb
mov
nop
add
push
inc
inc
das
les
sti
adc
movsb
inc
mov
lahf
das
mov
jge
mov
lock
pusha
add
and
pop
push
cmp
aad
dec
push
leave
mov
sbb
imull
mov
ds
push
cmpsl
mov
push
push
and
rcrb
sbb
jecxz
pop
loope
xchg
lahf
fcomps
hlt
and
xchg
movsl
out
or
idivb
add
sub
add
mov
xchg
mov
dec
mov
into
ja
add
lret
shl
test
out
aad
lea
dec
int
cmp
scas
js
sbb
cmpsl
and
test
mov
push
sub
ljmp
push
push
pop
arpl
xchg
popa
scas
sti
mov
jl
or
lock
cmp
icebp
test
call
xchg
sti
mov
es
sub
cmpsb
stc
or
push
in
ficompl
jne
fbstp
mov
push
push
leave
adcl
xchg
inc
enter
adc
add
test
ret
ror
xorl
test
cwtl
mov
mov
scas
int
movsl
pop
add
and
xchg
movsl
add
aam
repnz
dec
gs
bound
push
dec
xchg
cmpl
sbb
daa
push
xor
push
ss
add
push
and
bound
lahf
mov
ret
jl
dec
pop
popf
shrb
sti
into
fnstsw
pop
mov
in
sub
stc
inc
cld
and
sarl
or
cmp
rorl
scas
xchg
xchg
and
in
xchg
cmp
stos
xchg
mov
sub
xchg
or
bound
aad
or
push
xor
mov
jle
subl
add
add
mov
push
push
movsl
or
roll
js
movsb
push
shl
mov
aaa
scas
xlat
clc
dec
adc
jecxz
popf
add
loop
cli
inc
lcall
call
xchg
testb
loopne
aad
movsb
dec
shrl
dec
sahf
dec
shrb
fsubl
imul
inc
push
setne
fistl
xchg
jle
loop
xor
imul
push
in
lock
pop
gs
add
cwtl
loopne
add
cmp
push
int3
shlb
jp
mov
mov
mov
add
inc
inc
mov
and
push
mov
and
mov
data16
mov
dec
aam
mov
lret
je
cmovs
push
movsl
xchg
mov
aam
mov
fstpl
xor
test
mov
rcr
lret
push
sti
jne
repz
add
sbb
sbb
loope
mov
mov
lahf
icebp
enter
ds
pop
push
je
xchg
push
mov
iretw
jle
cs
push
daa
jg
pop
std
dec
jns
sub
repz
and
push
pushl
out
ja
shrl
test
fsubr
inc
push
or
aad
dec
mov
insl
pushf
in
push
imulb
int
inc
outsb
or
cwtl
or
mov
ds
mull
nop
xchg
imulb
dec
lea
xchg
push
mov
push
adc
inc
test
ficompl
xchg
add
jle
gs
rcrb
cmp
xor
jl
dec
fimuls
mov
fisubrl
lods
fld
scas
mov
shll
mov
enter
cld
scas
das
movsbl
sbb
add
mov
int3
xchg
gs
push
aad
hlt
ja
test
adc
mov
dec
mov
data16
push
jmp
push
jae
inc
or
aam
pushf
pop
sub
icebp
dec
mov
test
outsb
add
inc
jnp
cmp
or
jne
pop
cmp
jb
inc
sub
xor
iret
je
movsb
aas
pusha
js
adcl
movsb
jae
lods
cltd
sbb
pop
sub
aad
test
pop
jmp
dec
fcomp
pushf
out
daa
movsb
into
nop
insb
stos
push
adc
sbb
jmp
and
sbb
fwait
je
jb
andl
push
int
xor
in
push
pop
shl
and
mov
mov
lock
imul
sbb
lea
mov
cmp
lahf
and
fstl
lret
fnstenv
jg
rcr
popa
jo
rolb
xchg
xor
xor
mov
fst
jb
dec
or
das
cmp
fdivp
push
pop
sbb
movsl
or
xor
lret
popf
cmp
jne
mov
popa
adc
dec
and
sbb
loop
push
lds
repnz
movsl
scas
popf
sbb
sub
lods
dec
das
and
into
mov
mov
daa
lcall
shufps
fcomps
das
das
rcl
push
lock
shlb
push
loopne
jmp
or
jg
dec
and
mov
test
fidivs
xor
cli
out
cmp
loope
push
cmp
ret
arpl
xchg
loopne
push
push
pop
add
aaa
subb
ds
inc
mov
sti
mov
xor
loopne
popa
push
sub
push
sub
dec
mov
mov
test
fwait
out
dec
cmp
and
aas
fwait
mov
inc
xor
enter
call
aad
push
int
pop
cld
fwait
pop
push
mov
and
adc
in
daa
jl
jecxz
mov
cld
cwtl
imul
movsl
dec
lods
cwtl
sahf
and
cmp
inc
xchg
mov
jge
pop
inc
shll
fstl
pop
imul
push
mov
mov
les
mov
mov
mov
into
xchg
fisttpl
lock
jl
lahf
in
pmulhuw
arpl
test
fisttpll
cmp
stos
ja
push
or
xchg
cmpsl
decl
in
arpl
adc
push
and
iret
call
bnd
sbb
or
stc
clc
push
dec
mov
jge
add
rorl
jmp
adc
mov
pop
jo
xchg
push
outsb
mov
ss
into
aas
es
mov
fisubl
push
icebp
mov
dec
jmp
jmp
ja
nop
or
add
mov
jle
jnp
jb
mov
mov
mov
popfw
loop
into
cmpsl
adc
or
mov
cltd
inc
out
imul
jne
mov
mov
inc
js
and
or
jbe
adc
lods
mov
int
outsl
mov
lahf
xchg
pop
adc
xor
int
nop
cmc
jne
pop
xchg
or
sbb
sti
clc
das
std
fisttpll
dec
inc
or
outsl
inc
xchg
lahf
jno
flds
mov
out
out
dec
xor
inc
shrb
and
and
or
pop
mov
fs
cmp
mov
pop
lret
out
xor
xor
sti
stos
or
add
jo
leave
sub
nop
mov
jle
shl
out
cs
dec
fidivs
or
jmp
jmp
lods
cmp
mov
sbb
pushf
inc
je
repnz
mov
shll
pop
cltd
sub
mov
cmc
and
iret
rorb
mov
adc
cmp
cmc
pop
add
in
das
pushl
lret
das
mov
or
mov
cmp
sub
cwtl
lret
test
sub
fnstsw
es
pop
ds
ret
add
int3
sahf
inc
shl
mov
movsl
sbb
inc
xor
xor
scas
inc
push
lods
test
arpl
mov
sbb
stc
rcrl
xor
cli
test
pop
and
push
outsb
in
adc
iret
dec
jno
addr16
cmp
out
jb
add
fwait
mov
fidivrs
mov
out
cmpsb
rcll
mov
imul
jmp
stos
je
fstps
out
mov
push
xor
test
ss
and
xchg
shll
mov
inc
fwait
push
push
not
movsl
dec
xchg
shlb
lea
sbb
cmp
sub
cmpsl
loopne
nop
push
and
sub
lods
daa
gs
mov
ss
and
insb
mov
or
push
inc
mov
adc
mov
shll
nop
adc
lret
mov
movsl
pop
sbb
cmp
mov
jge
pushf
mov
fisubs
iret
dec
adc
inc
es
or
jne
jmp
icebp
into
shrb
mov
push
shr
mov
jmp
das
loop
jnp
mov
jp
imul
shll
cld
add
test
fiaddl
pop
inc
dec
out
jbe
inc
sub
test
mov
divb
cmp
pop
ficoml
xchg
lcall
add
and
mov
popf
cmp
sbb
lahf
sbb
adc
fiadds
fsubrs
pop
mov
inc
pop
test
sub
xchg
pop
negb
add
andl
insl
gs
cmp
mov
stos
and
adc
ljmp
pushf
sbb
or
cltd
ret
push
mov
daa
add
adc
or
or
jl
aaa
mov
adc
sbb
inc
pop
pushf
dec
xor
xchg
dec
loop
xlat
jns
fists
stc
xor
add
in
push
jnp
dec
xor
mov
mov
dec
loop
js
xchg
xchg
decl
fmull
enter
leave
dec
aad
mov
sbb
mov
data16
fildl
sbb
add
xor
push
add
fmull
push
lret
test
inc
and
push
mov
pop
test
lods
jns
ljmp
enter
aas
xchg
add
loop
add
mov
fwait
jl
lods
adc
popfw
xor
aam
jbe
ficoms
sub
pop
pushf
sub
mov
pushf
pushw
gs
mov
sub
pop
in
add
enter
std
inc
push
push
cwtl
mov
and
pop
out
in
enter
add
insb
cmp
sub
pop
scas
hlt
xchg
pop
or
or
in
and
fsubp
dec
jp
xchg
jae
pop
cmpsl
std
shl
sub
mov
div
and
test
xchg
xchg
pop
mov
fwait
test
xchg
sub
cmpsb
push
jno
rorl
jo
pop
cmc
es
ljmp
inc
nop
aas
sbb
pop
adc
jge
mov
mov
xor
test
pusha
test
mov
in
movsb
les
dec
je
fucomp
int
das
out
cld
xor
arpl
insl
stc
es
cmp
scas
ret
push
arpl
mov
xor
and
mov
sarb
inc
push
mov
mov
ds
loopne
mov
imul
fisubrs
push
pop
loop
jns
pop
mov
cmp
sbb
push
fsubs
lock
mov
add
outsl
cli
bnd
outsl
mov
insl
jnp
cmc
jmp
ret
movsb
int3
push
in
xchg
bound
cmc
insb
or
push
push
pop
mov
nop
push
fdivrl
sub
ljmp
push
out
push
mov
jnp
stc
js
inc
jne
pop
lret
sbb
sbb
adc
pop
cltd
stc
and
aam
dec
orb
sbb
pop
subb
sub
arpl
inc
cwtl
into
test
aas
mov
imul
arpl
popf
and
xor
jbe
xchg
jb
push
lcall
cltd
ror
pop
lret
sbb
and
xor
scas
mov
movsb
inc
pop
push
cmpxchg
sub
add
subl
jo
testb
mov
jl
cmpsb
mov
lods
jg
push
push
cmp
lcall
jnp
pop
daa
cs
and
inc
mov
xor
aam
fmull
pushf
mov
in
in
push
add
xor
mov
adc
pop
add
out
popa
cli
ja
call
or
push
xorl
stc
pop
jl
movsl
cmp
fwait
xchg
mov
jb
lahf
aaa
jg
imul
push
and
and
mov
mov
pop
cmp
mov
jno
daa
push
add
scas
sub
dec
fcomps
shlb
mulb
out
sbb
cmp
inc
clc
push
cmp
xchg
rcrl
addl
cmp
js
hlt
ss
out
or
xchg
or
pop
lds
sub
xor
mov
loopne
pop
jae
daa
ret
jl
mov
sub
icebp
dec
inc
dec
xchg
pop
pushf
mov
stc
inc
push
or
adc
rclb
rcr
or
push
xchg
dec
fcmovnbe
add
lea
pop
xchg
sbb
mov
aad
dec
mov
je
sbbl
fistpll
sbb
xchg
jge
orl
out
mov
orb
int3
cmp
cmp
daa
shlb
cmpsl
jmp
loopne
xor
jmp
jnp
pusha
xchg
lds
ret
pop
flds
cmp
lods
std
cmp
insl
ficoms
loopne
push
sahf
lods
ds
hlt
dec
rclb
call
pusha
dec
mov
repz
mov
loop
mov
inc
in
fidivrs
fadd
jbe
repz
jge
fsubr
cmpsb
sub
pop
std
dec
jo
aam
nop
ds
dec
add
adc
test
ja
xchg
aas
mov
stos
sbb
in
in
and
mov
add
pop
cmp
cmp
push
and
and
push
enter
fisttpl
imul
push
call
bsr
and
pushf
movsl
mov
out
adc
mov
scas
cmp
call
jge
bound
loopne
hlt
mov
or
repnz
pop
and
lock
adc
nop
pop
jno
mov
mov
ja
lds
and
or
add
cmp
aad
fists
adc
adc
out
shll
pop
popf
mov
fcmovne
dec
xor
xor
aaa
fwait
test
in
rcrb
push
aam
or
add
jmp
sbb
mov
outsl
lcall
and
bswap
mov
mov
pop
into
xor
mov
jge
enter
jmp
sub
lods
and
imul
add
loope
ficompl
dec
jg
sub
call
test
mov
xchg
sub
cltd
cmp
enter
xor
inc
jne,pn
aam
adc
imul
sub
rcr
loopne
outsl
sub
push
sub
into
iret
adc
push
out
mov
cmp
mov
xchg
fisubl
lods
push
xchg
lock
loope
add
aaa
in
pop
inc
dec
test
fptan
pop
dec
xchg
popl
sbb
ja
xchg
insl
or
scas
sub
dec
cmp
add
mov
inc
es
iret
push
shl
leave
int
jg
and
xchg
fldt
movsl
inc
adc
push
ret
mov
mov
pop
adc
add
aad
mov
addr16
mov
aad
sar
pop
and
xchg
mov
jge
xlat
cmc
mov
jge
add
and
aam
insl
pop
xor
xor
inc
xchg
dec
daa
lahf
into
mov
ror
fldcw
sub
and
push
sbb
cmpl
pop
mov
lret
jl
mov
jne
xchg
cli
inc
mov
xor
sarl
prefetch
or
rcll
mov
xchg
mulb
mov
jnp
xor
sub
in
repz
mov
add
movsl
lcall
xchg
int3
outsl
xchg
cmp
push
pop
add
jo
sbb
adc
mov
adc
adc
jae
add
adc
mov
mov
or
push
pop
push
cld
aaa
adc
data16
sahf
dec
and
sub
mov
and
mov
leave
xor
sbb
sub
lret
xchg
and
pop
add
cwtl
cmp
in
xchg
jbe
push
sub
and
nop
pop
mov
pop
pop
jg
push
pop
mov
dec
dec
lds
popf
stc
push
pop
fsubrs
test
pop
enter
stos
or
xchg
xchg
dec
cmc
ja
add
xor
push
aam
push
jp
sbb
jecxz
imul
sub
push
mov
or
shl
cltd
fsubrl
test
negl
je
movsb
jb
inc
in
xorl
movsb
and
xor
ret
test
clc
mov
jge
jl
jb
sbbl
sbb
pop
lret
adc
mov
adc
push
fcomps
pop
add
jge
mov
fildll
out
stc
sub
adc
jecxz
mov
int
xchg
cmp
out
mov
fstpl
mov
sub
rcl
ss
popf
pop
pop
mov
mov
sbb
and
mov
lret
jp
xor
jle
xor
ljmp
test
xor
jbe
mov
lcall
test
add
call
and
and
mov
sub
ret
cltd
add
xor
pushf
mov
lahf
loopne
push
and
rsm
mov
loopne
addb
xor
sarl
repnz
movsb
xor
mov
lcall
pop
xor
call
es
lods
sub
pop
cwtl
sub
jge
inc
hlt
pop
xchg
jle
or
aad
ja
in
js
push
cmpsl
lds
cmp
dec
call
xchg
jle
xchg
mov
or
and
insb
ja
add
jnp
jecxz
ds
in
rcrb
push
stos
and
pop
addr16
adc
cmp
cwtl
pop
test
jno
and
int
test
lods
test
imul
addr16
jo
aas
adc
iret
push
std
sahf
fsts
js
jle
cs
add
loope
jg
enter
xor
adc
inc
cmp
sbb
inc
adc
sub
outsb
cld
lods
outsl
mov
aas
xchg
out
leave
movsb
mov
daa
pushf
jne
jle
pop
inc
or
into
and
and
fwait
xchg
inc
test
sub
push
push
push
cwtl
fs
pop
xor
loope
ret
xor
fcompp
jns
inc
mov
insl
pop
xchg
xchg
or
mov
sub
cmp
mov
dec
bound
repz
lret
adc
ljmp
repnz
fidivrl
xchg
shll
dec
dec
les
outsb
dec
fiaddl
push
insl
jge
fstl
lea
cmpsb
fwait
in
mov
out
mov
jp
bound
or
mov
mov
rolb
in
dec
fwait
jge
xchg
pushf
push
clc
fisubs
inc
test
pop
jmp
aad
mov
push
fwait
aaa
fcmovnb
push
lahf
dec
in
ret
or
rolb
fucom
jno
adc
or
or
cmpsl
xchg
dec
int3
rorl
xor
jb
sbb
cmp
cmc
repz
add
hlt
xor
andb
or
in
inc
mov
icebp
jno
sbb
fs
loop
inc
out
mov
loopne
sbb
push
xlat
rclb
jae
test
decb
test
mov
fisttps
jo
icebp
ja
call
sbb
shlb
notb
inc
mov
sbb
cli
dec
cmp
inc
sti
jp
fxch
xchg
adc
int3
xor
ret
fimuls
testb
xchg
ror
jno
mov
js
or
test
and
ja
sub
test
in
incb
mov
pushf
jne
or
icebp
jbe
sbb
insl
aaa
sub
inc
es
cmp
xor
inc
insl
test
dec
loope
xchg
arpl
mov
lret
adc
push
mov
mov
jae
cmp
adc
inc
shrl
pop
dec
out
push
inc
lcall
scas
sbb
cmpsl
jo
ljmp
or
fists
dec
lods
xchg
pop
jmp
mov
test
decl
ficompl
jmp
sub
shlb
or
cmpsl
push
nop
clc
movsb
sahf
mov
data16
gs
xchg
pmaddwd
mov
cmp
xchg
rcrb
call
outsb
cmp
mov
push
xchg
rcll
pop
or
push
mov
xchg
loop
xchg
adc
loop
push
dec
shld
pop
mov
xor
and
inc
js
mov
rorl
mov
loopne
enter
xchg
xlat
arpl
dec
es
leave
xchg
test
ret
mov
icebp
outsl
jecxz
sar
inc
sbb
xchg
xchg
test
popa
jno
jns
push
jge
dec
dec
dec
out
pop
adc
test
ret
add
fwait
andps
rcrl
push
add
fidivl
int3
xor
push
or
and
and
mov
test
xor
mov
mov
loopne
and
fcmovu
ret
push
jp
lret
mull
cli
cmp
jne
rclb
cmpsl
mov
dec
xchg
leave
cmp
jp
std
and
lds
test
xor
cmp
inc
int3
addr16
mov
jbe
jbe
fnstenv
jecxz
outsl
fistpl
xchg
pop
mov
test
pushw
sahf
out
out
divb
pop
sbb
arpl
mov
cmpsb
out
enter
dec
mov
cmp
data16
jo
cmp
push
jecxz
ss
cltd
xor
int3
andb
sub
out
mov
clc
das
sbb
mov
adc
cs
int
xbegin
inc
aad
pcmpgtw
nop
dec
mov
jge
stc
loopne
mov
add
repz
adc
xchg
mov
cmp
mov
and
sub
ds
icebp
imul
adc
and
js
repz
movsb
fstpt
dec
mov
add
outsb
adc
out
les
cmpsl
int
out
stos
fwait
mov
adc
mov
sbbl
ret
sub
inc
pop
repnz
sbb
addl
mov
push
nop
inc
inc
je
cmp
hlt
sbb
ret
das
insl
dec
cmc
cmp
scas
sub
pop
xor
incl
sub
in
cmp
mov
xchg
and
out
and
add
push
dec
sub
das
cli
iret
add
cmp
insl
mov
xchg
add
mov
mov
push
lea
sub
call
adc
test
pop
lahf
sub
divb
push
ja
sub
ljmp
movsb
sarl
or
mov
mov
in
inc
inc
sub
out
ds
add
mov
sbb
or
sub
push
xor
and
push
subb
mov
lock
leave
out
hlt
lahf
mov
aaa
dec
sub
stos
or
or
popf
ficomps
bound
idiv
cli
mov
xchg
in
sub
clc
repz
imul
sub
adc
push
cmc
testl
push
xor
stc
sbb
mov
pop
test
imul
cld
ret
dec
inc
inc
dec
inc
mov
arpl
pop
cwtl
gs
test
incb
gs
cld
fmull
cmp
xchg
data16
data16
lds
cs
and
addr16
loope
xchg
mov
xorb
cmp
mov
mov
jne
outsb
pop
ja
mov
aas
pop
add
pusha
outsl
nop
das
dec
hlt
nop
test
push
iret
icebp
repz
jno
and
nopl
popf
jnp
push
call
mov
daa
gs
push
xor
icebp
jne
mov
cld
xchg
inc
inc
dec
sub
shlb
shll
or
incb
mov
in
push
jbe
add
sbb
cmc
mov
pusha
daa
jge
sbb
pop
push
jns
push
adc
out
loope
push
fiadds
mov
std
cmp
xchg
or
mov
js
fdivs
sbb
add
xchg
dec
test
int3
add
mov
fisubrs
out
repz
sub
sti
mov
sbb
jmp
enter
es
insb
inc
xchg
pop
pusha
repz
add
inc
aas
shlb
mov
dec
or
arpl
xchg
cmp
clc
sbb
enter
sub
adc
fdivrs
fldt
loope
or
jne
outsb
test
insl
sbb
xor
divl
in
dec
stc
adc
or
or
fs
mov
sbb
cmp
jno
pop
adc
jne
mov
jecxz
cmp
ror
inc
push
adc
fwait
loope
mov
repnz
pop
in
arpl
xor
pop
sub
aad
jmp
sub
pop
push
insl
xor
aam
sub
jno
mov
out
out
idivl
fldcw
push
les
or
lahf
cmp
testl
mull
loopne
stc
js
ret
es
cmp
outsb
mov
test
lcall
jmp
in
pop
icebp
scas
call
or
adc
push
fisubs
ljmp
add
shr
fistps
test
in
stos
repnz
xchg
sub
jnp
xor
cmp
sub
das
out
add
popf
inc
pop
mov
jnp
jb
push
push
stc
mov
add
shlb
pop
xchg
mov
inc
or
loop
mov
std
scas
cmpsl
arpl
out
and
std
push
pop
xchg
gs
addr16
sbb
icebp
pop
sbbb
sbb
cmp
adc
pop
stos
jne
mov
pusha
adc
pushf
ret
adc
dec
mov
xor
inc
cmp
les
in
lcall
fdivl
pop
push
jno
lods
scas
mov
hlt
xchg
sbb
jae
fistl
push
inc
xchg
push
clc
xor
sub
outsb
jmp
imul
push
das
adc
lea
fistl
adc
sbb
xchg
jns
lret
insb
push
bnd
mov
test
adc
or
jb
data16
push
out
mov
push
dec
sub
mov
mov
or
sbbb
test
mov
sub
push
fs
daa
test
outsb
or
xor
fcom
jge
sub
jecxz
inc
jecxz
pusha
testl
mov
mov
mov
stos
xchg
cmp
mov
xor
cmp
fdivrs
pop
pop
hlt
int3
sub
test
xchg
inc
dec
pop
xchg
pop
inc
adc
je
cmpsb
jae
push
mov
adc
pop
cwtl
test
mov
mov
std
cld
stos
add
lret
mov
out
aas
dec
std
lock
outsb
bound
in
ficompl
ja
es
test
repnz
pop
lea
aas
enter
jecxz
cmpsb
lock
sbb
adc
fucom
jbe
or
inc
dec
mov
xchg
xchg
daa
lock
imul
movsl
lea
add
in
dec
ja
call
repz
sahf
enter
xor
pop
subl
and
push
clc
push
cmp
jge
sub
add
jmp
jbe
xor
ret
and
jmp
add
push
les
les
into
movsb
push
add
push
inc
xchg
mov
das
rol
jo
dec
or
inc
std
pop
xchg
dec
outsl
icebp
xor
call
lcall
inc
andb
lret
jg
fdivl
sbb
aaa
adc
push
xor
movsb
add
push
mov
push
pop
cmp
sar
adc
cmp
lret
in
dec
repnz
mov
imul
and
xor
mov
shll
out
pop
sti
mov
lahf
aam
lahf
mov
mov
movsb
jecxz
inc
adc
int
scas
push
jo
mov
js
lods
in
mov
mov
ret
add
movsb
mov
or
test
stos
cmp
xlat
add
xorl
pop
in
dec
imul
roll
or
clc
or
mov
xchg
int
rorl
pop
mov
and
mov
xor
scas
adc
callw
out
das
popa
out
push
sbb
roll
out
sbb
insb
sbb
cltd
and
or
xor
or
jecxz
add
mov
fidivl
test
jae
ljmp
and
loope
push
push
loopne
push
push
mov
lea
test
jae
and
xchg
xchg
test
sarb
pop
dec
sbb
cs
rolb
frstor
cmc
into
sub
inc
imul
mov
fistl
push
inc
inc
out
push
cs
sub
pop
stos
sbb
arpl
popl
sub
jecxz
dec
repnz
jecxz
mov
in
sub
stos
pop
mov
push
sub
mov
stos
test
lock
push
ret
repz
ss
lods
add
pop
mov
cmp
mov
test
fisubrl
aam
ja
xchg
push
mov
jl
std
bound
adc
dec
cwtl
lret
cwtl
pop
push
sbb
repnz
pop
jp
cmpsl
jl
push
lea
push
inc
imul
into
cmpsb
ja
test
mov
cmp
lds
int
rcl
or
nop
jg
sbb
sti
pusha
nop
dec
xchg
cmpsb
sbb
sbb
xchg
jecxz
loope
fldcw
mov
jno
sbb
inc
sbb
imul
mov
pop
rcll
aas
cld
jle
nop
fiaddl
mov
or
test
ret
mov
cwtl
cld
jbe
mov
xor
inc
ret
leave
orb
add
rolb
aaa
cmp
inc
or
js
cmpsl
pop
dec
cmp
cwtl
mov
mov
sub
test
aam
ret
mov
jne
je
xchg
inc
cmp
cmp
xchg
jns
pop
out
lahf
aaa
cmp
cld
dec
dec
cmp
daa
cmp
test
jo
int3
bswap
mov
mov
fadds
sub
sub
xor
jnp
mov
and
cmpsl
add
cmpsb
xchg
nop
pop
push
mov
mov
leave
daa
or
ja
leave
sbb
lock
mov
pop
inc
and
sub
fsubr
push
cmp
cmp
push
jbe
sbb
repnz
testl
jno
inc
fcompl
inc
pushf
xchg
add
pop
pop
dec
mov
mov
xlat
aad
leave
mov
and
roll
subb
xor
fnstsw
les
and
xchg
mov
or
test
mov
dec
scas
adc
std
and
icebp
arpl
out
addr16
lods
in
outsl
in
mov
push
push
xchg
ljmp
scas
jmp
pop
ret
dec
leave
loopne
repnz
test
jb
add
sub
insb
xor
mov
push
inc
cmpsl
js
daa
jnp
into
jne
aad
pusha
popl
hlt
adc
pop
cmp
fldl
xchg
add
outsb
out
jmp
cltd
and
mov
loope
mov
xchg
ss
push
stc
mov
jl
loopne
fsubp
cmp
dec
hlt
hlt
aam
push
insl
ja
scas
insl
or
fwait
ljmp
or
mov
push
mov
ja
and
add
cmp
scas
jo,pt
imul
orb
mov
aaa
cmp
push
or
adc
cli
sub
add
incl
xor
mov
enter
dec
inc
jnp
sahf
rcrl
mov
xchg
push
mov
inc
xor
lds
lods
mov
rcrb
inc
insl
inc
std
pop
aad
in
mov
fcomps
int
cld
fsubrp
loop
popa
and
cmp
mov
lcall
pop
or
repnz
les
out
cmp
push
push
into
mov
imul
mov
stc
sub
and
xor
sbb
fs
ret
bt
and
int3
mulb
mov
mov
push
sahf
inc
cmp
xchg
mov
adc
mov
inc
jecxz
test
sub
jecxz
std
mov
pop
mov
mov
push
pop
and
mov
icebp
dec
test
mov
inc
outsl
dec
cmpsl
scas
aas
inc
and
mov
sti
and
scas
arpl
loope
orl
hlt
mov
adcl
movsl
sbb
mov
lret
sahf
cwtl
adc
inc
lods
movsl
aad
cmc
mul
adc
icebp
mov
popf
lea
jnp
mov
lret
hlt
fstps
pop
outsl
stos
xchg
dec
jbe
ljmp
xlat
sbb
push
fs
test
enter
js
rclb
dec
icebp
adc
sbb
testl
movl
lds
mov
adc
fcmovnbe
sbb
mov
ljmp
pop
inc
sub
or
iret
test
movsl
sub
test
outsl
inc
popf
sbb
test
test
in
loop
pop
sub
sbb
movsl
mov
sbb
outsb
add
push
stc
jne
int3
jg
xchg
push
test
lcall
mov
and
dec
and
popa
popf
push
nop
sub
or
sbb
cs
inc
lds
xlat
lods
sahf
lock
dec
and
scas
les
cmpsb
mov
loopne
adc
xor
faddp
jns
cmp
insb
dec
je
xchg
dec
mov
push
scas
divb
adc
stc
inc
loopne
arpl
xchg
ror
or
push
sub
roll
int3
xor
xchg
and
push
dec
movsb
mov
cmc
es
les
sbb
ds
hlt
hlt
inc
fisttpl
push
adc
adc
and
pushf
clc
jae
jmp
add
pop
in
es
push
push
int3
addr16
ds
mov
mov
xor
mov
cltd
shrl
sti
mov
adc
pop
sub
dec
dec
pop
push
cltd
push
push
imul
fadd
loop
pop
rcrl
add
mov
dec
or
lahf
xor
cmc
or
fistpll
jnp
ljmp
aaa
inc
ss
sbb
scas
aas
test
mov
adc
je
inc
aas
aaa
pop
loopne
sarl
sub
out
insl
push
push
xor
lods
or
push
loopne
mov
fmull
gs
and
inc
pop
adc
mov
test
out
pop
dec
and
inc
mov
in
fstl
lret
iret
movsb
fsubrl
lahf
in
mov
cmp
push
das
int
pop
dec
add
adc
push
cmp
mov
push
dec
mov
popf
add
cmpsl
icebp
sbb
add
in
lea
stos
outsl
unpckhps
fwait
outsb
out
xor
dec
sbb
jno
adc
lcall
loop
pop
sbb
xchg
sarl
imul
sbb
sbb
lret
push
clc
jl
jno
fcomi
pop
dec
or
dec
ret
popa
rcrl
mov
call
dec
mov
jmp
mov
cltd
cmc
sub
mov
test
sbb
adc
jmp
and
mov
mov
lea
sub
mov
fs
hlt
enter
adc
sub
jae
sub
xchg
jl
out
lods
insb
push
mov
xor
ljmp
js
and
je
and
scas
cmp
stc
or
cmp
lcall
sbb
adc
fwait
fwait
or
dec
les
jecxz
imul
lahf
mov
pop
dec
sub
xchg
pushw
mov
adc
pop
inc
add
loop
mov
push
out
popf
or
nop
imul
add
inc
xor
add
dec
xor
sbb
sarl
mov
sbb
gs
sbb
pop
mov
inc
pop
push
inc
je
or
fs
adc
sahf
imul
sarb
jle
sbb
jo
fs
je
sub
jle
fadds
rcrl
and
jne
hlt
push
out
add
inc
sub
pop
les
xlat
xor
lahf
inc
xchg
inc
adc
insb
in
xchg
mov
and
in
push
mov
mov
jp
in
scas
and
loope
lds
arpl
push
pop
add
adc
aaa
or
scas
cmpsb
hlt
mov
in
mov
xor
jae
sbb
jle
mov
cld
stos
ret
dec
int
inc
pop
loopne
pushf
data16
xor
cmpsl
jbe
sbb
add
sarb
xchg
arpl
mov
or
std
scas
loopne
inc
int3
add
mov
push
into
cmp
out
idiv
adc
cltd
jb
adc
or
or
lcall
cmp
outsl
inc
movsl
mov
int3
es
pop
lcall
and
out
popf
cmp
xor
jbe
xchg
js
xorb
ja
repz
fstpt
mov
mov
jne
xchg
and
out
dec
rcll
cli
lcall
push
fimuls
mov
or
out
mov
outsl
cwtl
imul
inc
jae
push
std
sbb
bound
pop
cmp
insb
hlt
mov
lret
mov
pop
cltd
xchg
aas
adc
popa
sub
xchg
cli
cmp
andl
icebp
in
and
std
cmp
pop
test
pop
test
sbb
ds
mov
repz
or
mov
add
sbb
or
rol
mov
dec
xchg
adc
std
popf
inc
mov
cli
push
dec
add
dec
aas
mov
add
push
or
xor
jno
mov
mov
add
mov
lret
dec
repnz
imul
inc
flds
pusha
cmp
stos
add
arpl
jae
je
sbb
xor
push
push
mov
xchg
cmp
lods
mov
adc
or
jno
loope
pop
push
sbb
xchg
mov
out
push
dec
xchg
insb
movsl
rcrl
icebp
iret
push
inc
inc
std
mov
data16
jne
mov
mov
or
pushf
repnz
sub
sbb
sarl
mov
jne
adc
jnp
aam
mov
insb
mov
stos
aad
sbb
movsb
cmpsb
scas
mov
int
imul
imul
testb
or
jmp
sub
pminub
outsb
mov
jbe
test
testl
es
iret
xchg
mov
and
fnstsw
lods
in
inc
lcall
movsb
fsts
inc
iret
gs
fcmovnbe
aad
leave
clc
rcll
inc
pop
xchg
sbb
jnp
rcll
xor
pop
popf
and
out
jp
pop
retw
arpl
js
xchg
pop
loope
sbbl
or
mov
ret
cmpsl
pop
push
loopne
xchg
out
iret
add
decb
add
jnp,pn
mov
pop
push
jno
jg
push
inc
mov
adc
xor
dec
dec
cmp
fistpl
cltd
int3
jl
sbb
mov
mov
add
test
orl
jo
leave
mov
inc
imul
and
sbb
jae
les
push
leave
sti
ffree
sbbl
sub
add
cmp
dec
in
rcll
cli
pop
pop
lahf
dec
je
jbe
adc
ss
mov
bound
ja,pt
pop
xchg
inc
mov
pop
ja
popa
xor
add
push
jge
sub
push
test
inc
xor
cs
addb
sub
inc
fwait
inc
add
pop
or
sbb
es
mov
popa
adcl
clc
push
cwtl
push
orb
imul
jno
xor
lock
cmpb
das
outsl
or
push
pop
insl
int
imul
aas
xchg
cmp
rcl
mov
xchg
leave
jmp
shrb
into
rol
and
lret
cmpsb
pop
push
xor
aaa
add
push
adc
mov
lahf
int
test
sub
movsl
movsb
inc
dec
aam
inc
sahf
in
test
nop
push
lret
hlt
mov
xchg
les
mov
push
mov
push
lea
inc
pop
add
popa
mov
aaa
lahf
movsb
ss
test
mov
fdivrs
cltd
icebp
rcll
dec
jp
int3
test
pusha
sbb
mov
in
add
mov
dec
jae
in
shll
sbb
outsl
movsb
daa
leave
dec
dec
stos
clc
sub
fsubl
add
mov
stos
adc
xor
and
arpl
test
add
les
add
lds
push
push
fs
test
iret
pop
cmpsl
fnstsw
mov
out
jl
xor
xor
lahf
popl
hlt
fwait
mov
sbb
aas
push
inc
shlb
jbe
int3
push
dec
pop
push
jecxz
and
lcall
push
pop
pop
and
and
push
and
or
xchg
lods
xchg
fimuls
das
jmp
shll
bound
cmp
es
xchg
scas
das
mov
cli
fldenv
gs
ret
aaa
movsb
pusha
or
lea
xchg
fidivl
lods
adc
jmp
ja
lret
cwtl
push
test
testl
dec
mov
repz
faddp
and
call
inc
sub
lcall
ss
add
xchg
out
pop
xor
sbb
jne
push
add
jmp
call
sbb
xor
ja
push
repz
dec
xchg
mov
imul
stos
dec
andl
rclb
mov
and
imul
stos
push
mov
push
add
insl
jmp
test
sub
sarl
or
or
xchg
or
pop
dec
cmp
sbb
mov
fs
bound
push
adc
mov
inc
mov
call
pop
pop
or
sub
std
or
fwait
ds
shrb
insl
outsb
inc
das
adc
jmp
cltd
shrb
ljmp
adc
shlb
hlt
cmc
add
xor
sub
push
push
lret
pop
push
lods
and
push
fistl
jl
movsl
lods
and
xor
fwait
or
xlat
lea
cwtl
rclb
cmp
push
adc
rol
and
dec
shll
fnop
and
test
and
mov
orl
push
inc
movsl
popa
jge
nop
sub
sub
fsubl
popa
jmp
sbb
daa
push
inc
mov
andb
loope
jbe
add
push
or
fnsave
cltd
push
adc
jne
add
lock
imul
push
scas
xchg
rcr
test
jmp
pop
mov
rol
jo
test
cmp
out
cltd
arpl
fisubs
cli
sti
sub
adc
roll
xchg
ret
mov
ss
ljmp
sub
mov
mov
or
xchg
data16
mov
fisttpll
rcr
xor
add
inc
dec
call
aad
into
push
fxch
sbb
shll
dec
cltd
dec
cli
call
mull
movsl
add
push
clc
or
sbb
fisttps
dec
outsb
dec
gs
loope
das
into
in
dec
xor
mov
icebp
outsl
dec
inc
jp
push
dec
popa
pop
fnstenv
xor
insl
pop
push
imul
addr16
mov
jge
sbb
dec
pop
mov
lock
dec
mov
fs
ret
popa
mov
cmc
das
js
xchg
aas
shlb
adc
sbb
sbb
ret
test
mov
jbe
hlt
mov
subl
inc
inc
insl
inc
mov
mov
test
fldcw
push
push
push
pop
add
push
lea
push
mov
inc
fwait
sti
cmp
cmp
rcr
mov
arpl
xor
adc
jno
cs
fwait
popf
ss
mov
cmp
call
in
sub
push
lds
inc
pop
add
mov
mov
mov
pop
xlat
dec
pop
in
cwtl
and
stc
adc
adc
in
scas
push
dec
pusha
inc
jecxz
or
test
lods
xor
repz
fwait
add
insb
mov
jno
test
jbe
xchg
inc
push
orl
xchg
cs
sti
ret
rcll
fsubr
pop
jns
push
xchg
int3
cmp
push
ljmp
ss
fldenv
push
fs
enter
push
test
jnp
dec
lret
movsb
imul
notb
repz
sbbb
jb
lods
sub
and
mov
mov
dec
pushf
insb
xchg
adc
fidivrs
jl
aaa
insl
aad
add
pop
inc
stc
mov
pop
cmovle
insl
pop
pop
jnp
push
push
out
clc
je
inc
fnsave
jae
cmc
adc
aas
nop
loope
adc
mov
ret
xchg
mov
cwtl
inc
cmp
dec
mov
jno
scas
aas
pop
popf
mov
test
inc
dec
adc
and
lods
add
and
cmp
bound
stc
in
stc
or
inc
outsl
popf
fmull
jno
repz
jmp
loop
and
push
sub
push
inc
sbb
in
clc
inc
pusha
out
dec
and
roll
mov
push
aam
mov
fs
gs
mov
mov
dec
test
push
in
or
push
ljmp
adc
movsb
dec
int
mov
rcrb
cld
jg
jg
out
ret
sbb
cmpsl
jbe
gs
xchg
xchg
imul
sarl
ret
lea
sub
inc
jmp
mov
cmp
cs
aas
lods
andb
ret
inc
repnz
cs
mov
and
mov
mov
scas
cmp
fiaddl
xchg
outsl
popa
pushf
das
pusha
stos
pop
lret
jg
jl
sahf
jmp
std
push
pop
icebp
jmp
movsl
mov
lds
sarl
adc
mov
mov
mov
mov
cmc
stc
inc
sub
push
xchg
sbb
mov
cmovne
or
ret
arpl
jb
jmp
inc
mov
test
inc
cmpsb
mov
pop
lods
stc
xor
push
into
lret
xor
inc
std
aam
fwait
adc
xchg
xchg
pop
flds
mov
mov
mov
stos
popa
imul
inc
fisttpl
push
dec
or
xor
push
xchg
dec
bound
mov
and
add
sub
mov
adc
push
fdivs
lds
xor
cld
cmp
xchg
aam
or
stc
add
sub
push
adc
sub
mov
sti
push
scas
fcoms
rcrl
cs
jle
jp
jbe
ss
orb
rorb
mov
imul
jae
or
daa
sub
jl
adc
and
stos
dec
fadds
clc
sahf
mov
popa
push
mov
sbb
inc
arpl
out
adc
dec
test
stc
jae
mov
loope
setno
pop
cmp
push
pop
dec
loop
shlb
push
sub
outsb
pop
cmp
sarl
in
repz
push
divb
pop
xor
mov
mov
jmp
jb
stc
dec
dec
iret
out
cmp
mov
and
cmp
add
ljmp
xchg
outsb
scas
lcall
push
enter
jle
andb
rorl
cmp
pop
mov
push
cwtl
std
lods
cmpsl
inc
jmp
arpl
dec
pop
out
mov
jmp
fcoml
insb
pop
inc
jmp
test
fsubrs
into
leave
and
inc
jle
push
mov
and
cs
xor
imul
stos
sub
pop
mov
adc
mov
and
test
ljmp
add
int3
rorb
into
xchg
adc
sbb
movsl
push
hlt
mov
pop
jl
popf
mov
xor
or
add
in
aas
and
sub
mov
pop
sar
mov
fwait
mov
lock
sub
lahf
push
mov
jo
loop
push
lahf
or
push
sbb
dec
mov
inc
or
add
inc
aam
aad
sti
ret
out
push
aam
add
test
je
dec
or
subb
push
or
mov
aam
cmp
sub
jl
repz
iret
jno
rorb
adc
iret
mov
scas
sub
push
cwtl
inc
cmp
rcrb
xorb
shlb
dec
call
mov
pusha
call
xchg
cmp
mov
test
clc
xchg
pop
test
ret
addr16
loope
jbe
fimull
push
rcrl
mov
ret
xlat
cmp
xchg
jno
int3
or
out
dec
sbb
dec
or
and
scas
push
xchg
lods
imulb
scas
out
aas
les
lret
fwait
int
in
lock
jno
xchg
mov
mov
repz
sub
inc
xchg
mov
cmp
fldcw
adc
push
popf
push
mov
jnp,pt
push
xor
jg
mov
add
push
loope
xchg
xchg
jmp
jecxz
xlat
mov
scas
lods
loopne
jle
mov
pop
lcall
dec
fwait
sub
ja
dec
andb
in
sbbb
push
repnz
sti
sub
xchg
pusha
sub
dec
repnz
inc
lret
in
add
lods
sub
shll
push
or
fistl
xchg
mov
xor
jg
sub
loop
inc
sbbb
call
out
pop
push
mov
sub
jmp
dec
and
dec
jg
dec
xlat
add
xor
clc
daa
xor
je
adc
sbb
sahf
test
sbb
movsl
and
test
inc
pop
subb
es
repnz
icebp
sbb
cmp
je
mov
xor
cltd
cmc
jne
pop
sbb
inc
fdivr
stc
subl
stc
movsl
mov
bound
xchg
adc
int3
call
and
cmpsl
fsubrs
inc
mov
mov
dec
dec
dec
cmc
add
sbb
aas
ja
js
jnp
pop
nop
lds
subl
mov
leave
and
cli
ret
xchg
cmp
jmp
jle
jno
xchg
repz
add
cltd
fistl
lret
or
jae
cmp
mov
push
lcall
push
popa
clc
adc
mov
jge
enter
ds
jae
fdivl
inc
repz
fistpll
cmpsl
push
cmp
dec
cmp
int3
outsb
fcomps
inc
or
loop
adc
push
jo
int3
leave
nop
mov
or
and
out
std
out
xor
clc
dec
fmuls
out
es
mov
adc
icebp
cmp
clc
popa
rol
fistpl
and
xchg
mov
je
pop
test
lea
lods
ret
cmp
or
mov
pop
push
cmpsl
gs
loope
sbb
jp
aas
cmp
cltd
leave
loop
mov
jno
dec
fdivs
loop
das
xorl
data16
idiv
add
xchg
xlat
les
jmp
rcl
fsts
sub
fisubrs
and
xor
cmpsl
idiv
mov
ror
sahf
lret
enter
movsb
xor
xchg
add
mov
xchg
adc
stc
push
or
dec
enter
dec
push
jle
lock
inc
dec
sub
add
xor
jmp
popa
mov
adc
xlat
in
enter
push
pop
fucomp
rorl
push
stos
out
mov
rcrl
mov
xchg
fiaddl
inc
es
daa
cmp
sub
in
dec
les
push
pop
sbb
jnp
pop
pushf
push
dec
loop
mov
fcmovbe
inc
test
push
sbbb
or
push
out
and
int
rorl
pop
adc
aam
outsb
sub
push
xchg
cmpsl
jle
das
xor
pop
adc
push
jl
mov
mov
mov
or
aad
cld
jnp
test
xor
pushf
mov
cmp
adc
loopne
push
popa
xchg
sbb
or
push
lock
jle
mov
int3
mov
mov
nop
xor
call
hlt
lock
popa
out
sarl
cmp
or
test
cmp
mov
outsb
cld
jo
test
popa
or
into
add
sti
cmpsl
daa
pop
lea
inc
shl
hlt
movsb
pusha
lods
dec
dec
mov
dec
sbb
xchg
jge
and
or
inc
cwtl
cli
push
andb
outsl
mov
xchg
jb
push
push
jle
lock
lods
cwtl
int
lret
in
fisttpl
mov
add
outsl
sti
fst
pop
mov
xor
das
add
mov
sub
sbb
xor
sbb
into
sub
dec
hlt
sbbl
aam
ret
outsl
sbb
add
ljmp
adc
sub
lret
jle
ljmp
rcl
jg
push
lret
xchg
jle
js
and
faddl
add
js
mov
loope
pop
repz
movsb
lahf
or
int3
imul
adc
cwtl
mov
shrl
inc
xchg
pop
jo
divb
push
adc
aaa
imul
mov
lds
call
sbb
sbb
nop
insb
fldl2t
andl
paddd
or
aad
rorb
sub
out
jge
dec
in
stos
xor
fnstenv
cltd
stos
xchg
rdpmc
in
subb
call
and
adcb
push
mov
pusha
fmulp
lahf
and
push
dec
aad
lret
and
mov
scas
inc
fisubs
dec
loope
vhaddps
cli
pop
lret
jns
mov
aam
das
call
fidivs
push
or
test
icebp
or
sub
das
in
imul
pop
mov
rcl
pop
mov
and
mov
inc
lods
xor
movsbl
inc
and
jmp
lods
fisubrl
jae
sti
mov
mov
sbb
popa
dec
mov
jae
pusha
cmp
aad
bound
push
jb
add
jp
mov
xor
cli
inc
cli
sbb
or
repnz
or
mov
iret
cmpsl
test
xor
gs
push
pop
adcb
inc
dec
xchg
and
push
lret
xchg
outsb
dec
jl
sbb
push
push
popf
cmp
sub
movsl
sub
mov
push
adc
call
addl
fisubs
dec
push
outsb
popf
jg
lcall
or
cmp
ljmp
jle
fdivrs
lea
mov
sahf
shlb
pop
xor
daa
jp
xor
xchg
mov
cmpsl
mov
xor
aas
jbe
movsb
lret
sbb
dec
jecxz
aas
dec
push
lret
dec
sahf
imull
pop
mov
or
jmp
into
inc
xchg
ss
rcll
xlat
pop
inc
pushf
jp
push
lds
jmp
loop
inc
sub
or
xor
orl
cmp
and
movsl
ret
ljmp
xchg
sbb
xor
sbb
inc
mov
loop
sbb
push
push
test
pop
mov
stos
aad
addl
frstor
daa
add
add
repnz
mov
jae
test
int3
xor
inc
out
fwait
mov
sti
jmp
mov
xchg
jcxz
mov
dec
or
test
in
lods
gs
in
mov
into
jp
dec
leave
test
or
pop
dec
mov
clc
daa
aam
push
pop
mov
into
movsl
mov
pop
je
ja
or
out
add
rcl
loopne
xchg
bound
push
cmpsl
xchg
mov
daa
xchg
xor
sub
mov
rcrl
add
cmp
pop
lret
clc
in
mov
loop
lea
addr16
cs
insl
or
mov
cmp
sti
push
fcomp
inc
outsl
push
stc
inc
adc
sub
loopne
cs
out
jns
xor
test
and
inc
mov
mov
push
push
ss
movsb
sub
lahf
and
aam
es
lcall
sarb
movsl
and
inc
mov
xchg
cld
jl
mov
outsl
stc
stos
iret
fidivl
mov
insb
subl
fcmovnb
roll
pusha
ret
ljmp
cmp
mov
or
mov
iret
mov
mov
rclb
mov
mov
push
arpl
aad
cs
ljmp
adc
test
ja
inc
daa
shl
sbb
jg
aad
fstl
mov
cmp
sub
sub
pop
sub
xchg
stos
lea
pushf
mov
mov
mov
dec
out
outsb
aas
jo
test
sub
in
sub
xor
rcrb
lds
xchg
scas
movsl
dec
incb
rclb
pop
xor
mov
sub
sar
fsub
sbb
xor
call
xchg
scas
jmp
movsl
push
loop
pop
ret
fisubl
mov
jb
sub
pop
into
lcall
cmpsl
xchg
pop
fsubrs
jmp
pushf
cld
imul
xchg
dec
pop
sbb
mov
aam
add
or
cli
in
mov
in
jbe
pop
sbb
mov
scas
push
repz
getsec
xchg
loopne
nop
ret
sub
stc
jge
push
idiv
subl
push
cmp
pop
jns
enter
popf
xchg
int3
dec
pop
mov
jbe
fwait
xchg
sti
mov
and
and
mov
push
cs
loopne
xchg
inc
shll
and
jecxz
dec
mov
push
xor
xlat
imul
push
test
xor
pop
ljmp
ja
add
jne
lahf
pop
mov
repnz
call
mov
xchg
ss
and
cld
mov
mov
testb
or
ret
js
add
aas
cmpl
insb
out
ds
rorb
inc
xchg
fwait
mov
jnp
xor
dec
call
sub
xchg
adc
lret
add
mov
and
imul
add
push
repnz
mov
gs
enter
cmp
jb
sbb
adc
cwtl
inc
push
cmc
ret
das
add
and
dec
cmpsl
mov
dec
bnd
xchg
add
adc
jnp
push
jmp
std
adc
lods
aad
inc
push
dec
mov
push
ret
lret
jl
add
pop
rolb
adc
xlat
and
push
pop
cmp
imul
nop
jecxz
mov
add
js
mov
inc
es
or
scas
sub
sub
cli
in
imul
mov
rol
lods
orb
hlt
faddl
add
gs
mov
xchg
je
jecxz
fdivrs
testl
and
add
std
stos
repz
sbbb
pop
cmp
adc
and
es
push
in
jb
sbb
pop
mov
lods
pop
ljmp
inc
test
arpl
cmp
jne
sarl
and
mov
dec
and
cwtl
sbb
xchg
in
adc
scas
jno
mov
addr16
dec
xchg
or
fcmovbe
add
cmp
dec
leave
aas
rcrb
xchg
clc
repz
inc
jne
lea
add
aam
ror
test
adc
fs
lret
cmpsb
clc
test
aad
jae
push
xor
cmp
xorl
sub
add
addb
movntps
push
mov
push
cmpsl
mov
lods
imul
adc
add
add
sbb
lahf
cmp
stos
dec
cmpsl
test
ljmpw
mov
mov
sub
test
mov
pop
and
cmpsb
dec
jg
sub
add
pop
sub
mov
mov
xchg
shll
in
pop
dec
dec
rcrb
push
cmp
mov
and
jle
call
or
sub
pop
xchg
and
cmpsl
pushf
movb
sahf
in
mov
ja
out
jne
cld
mov
jb
or
mov
mov
fwait
enter
push
xor
enter
xor
js
mov
scas
mov
iret
cmp
pop
lock
test
fwait
pop
movsb
cld
popa
mov
dec
or
push
jnp
lahf
in
js
jns
rcrb
mov
add
pop
sbb
push
pop
mov
shll
outsb
or
mov
stos
fmul
imulb
imull
pop
add
push
fsub
ljmp
addr16
imul
push
fsubrs
movsb
mov
adc
push
mov
lcall
dec
or
mov
test
jle
cs
xor
cmc
shlb
inc
mov
rcrl
xchg
lds
pushf
leave
js
repz
and
cmp
lcall
fbstp
mov
mov
sub
in
not
mov
mov
mov
dec
adc
out
mov
inc
mov
mov
in
rcrb
adc
inc
repnz
xor
ret
ficomps
int3
fwait
push
push
jp
or
ja
fmull
pusha
or
xchg
mov
into
sahf
ss
mov
test
xchg
adc
and
sbb
jecxz
out
loope
xchg
xchg
push
popa
jg
mov
mov
or
jns
mov
dec
out
mov
nop
mov
mov
add
repnz
push
bound
fimull
test
ret
jns
xchg
outsl
in
mov
xor
jns
mov
jecxz
orb
mov
push
push
push
pop
test
aas
gs
add
lock
inc
xor
lret
or
and
pushf
mov
insb
mov
test
xchg
stos
xorl
sbb
test
mov
or
inc
fnstcw
shrw
stos
adc
jbe
das
mov
xlat
iret
inc
movsb
fstpl
movsb
imul
stos
pusha
xchg
negl
push
bswap
mov
sbb
sbb
mov
mov
stos
xchg
into
push
cmp
jg
sbb
pop
or
sbb
fbld
sbb
mov
pop
fadds
ret
pop
in
push
dec
jecxz
cmpl
insb
jno
sbb
in
or
lds
pop
mov
stos
rcrb
cmp
or
xchg
push
add
and
adc
jb
inc
xor
out
sub
jl
sub
leave
or
adc
cmpsl
movsb
lods
jnp
mov
or
test
xchg
cli
mov
lock
test
mov
push
aad
lea
mov
xchg
lds
mov
mov
push
cld
xor
push
jbe
pop
inc
inc
sbb
push
call
xchg
addr16
cwtl
mov
add
sub
aam
mov
sbb
gs
add
inc
testl
mov
and
pop
fisttpl
and
lret
cmp
pop
inc
xchg
jg
xor
push
sarl
cmpsb
push
add
dec
jmp
dec
test
cmpl
stos
cmp
push
or
int3
xchg
outsl
sbb
xchg
sbb
int
jns
cmp
xchg
pusha
mov
push
cmpsb
sub
dec
arpl
sbb
and
add
fcomps
pop
lds
cld
arpl
jmp
mov
pop
sbb
inc
add
sti
and
daa
mov
add
mov
in
ljmp
ds
push
adc
jg
xor
mov
popf
cli
gs
adc
adcb
cmc
js
jns
fisttpl
jnp
and
mov
ret
jp
std
mov
sti
dec
hlt
xor
inc
pop
add
dec
push
dec
insb
xor
mov
mov
cmp
enter
mov
cmc
inc
insl
ljmp
mov
sti
add
jo
push
pop
loopne
xor
sub
jecxz
les
sbb
xchg
cmpsb
add
fmulp
pop
in
push
mov
faddl
lods
popa
and
push
ja
xor
test
sbb
aas
vmwrite
ja
stc
jnp
out
xor
pushf
test
sub
push
adc
jg
addr16
mov
mov
add
add
stos
cmp
je
ss
stc
sub
insl
mov
cld
cld
out
pop
inc
stos
incl
insb
dec
loopne
out
dec
dec
push
inc
push
cwtl
in
div
cmpsb
xchg
mov
sub
or
xor
mov
xchg
lret
mov
or
push
cmp
push
lock
in
cmc
subl
or
jmp
jecxz
xchg
pop
ja
pop
xchg
movsb
cmp
ljmp
pop
adc
sar
retw
adc
dec
rclb
jne
push
testl
inc
xchg
cld
mov
cld
lret
ret
cmp
mov
cmp
xchg
jl
and
call
push
xor
add
jp
daa
xchg
mov
mov
lahf
pop
add
insb
inc
test
xlat
xchg
cmpsb
fwait
in
mov
sbb
sbb
scas
adcb
or
xor
or
fcompl
out
mov
js
cli
sbb
sbb
nop
fsubrp
shlb
test
mov
dec
pop
sbb
setb
or
inc
aad
sub
mov
aas
xchg
fwait
adc
or
aad
insb
and
cmpsb
out
shll
mov
or
fsubrp
aad
mov
and
loopne
adc
xor
ror
jg
mov
repz
sub
repnz
movsb
and
aam
mov
cs
mov
sbb
dec
inc
out
cmp
dec
pop
cmp
testb
data16
fldenv
xor
mov
imul
pop
sub
and
or
aam
mov
popf
lcall
outsb
aaa
fdivl
cs
pop
aas
lret
jo
aas
les
mov
loope
ret
jae
mov
movb
cmc
imul
push
aam
adc
insl
mov
push
xchg
subl
push
ja
movsl
mov
std
stos
push
inc
mov
movsl
imul
pop
lods
lahf
fs
dec
sub
xlat
outsl
xchg
xor
call
inc
out
test
xor
lcall
jns
aas
xchg
iret
stc
and
jnp
sub
je
jge
mov
movsb
ds
pushf
shrl
or
push
cmp
add
sub
push
push
lret
pop
enter
dec
data16
outsb
scas
rcrl
mov
in
inc
fistl
jp
xchg
sbb
inc
fstpl
sahf
push
xchg
xchg
pushf
fbld
pop
adc
bound
add
add
and
mov
mov
mov
rol
xchg
rcrl
mov
inc
lahf
mov
bound
inc
xorl
sub
gs
mov
or
xchg
mov
cmc
cmp
in
adc
add
xor
mov
int3
fsubrl
enter
std
jae
sub
push
xchg
pop
into
ret
mov
xchg
xor
das
cmp
arpl
add
jno
pop
scas
add
dec
cmc
fstpl
jecxz
and
mov
pop
jne
inc
loope
sub
jg
cmpb
pop
push
mov
lods
test
mov
lcall
lods
or
fcomps
cltd
into
test
loop
out
or
cpuid
std
sub
jp
pop
dec
test
stos
stos
mov
ret
xchg
test
je
mov
jae
push
mov
adc
mov
cmp
push
lret
cmpsl
idivl
xchg
daa
fisubl
fisubrl
sub
jns
mov
stos
cmp
ret
js
cld
lcall
insl
or
adc
inc
or
sbb
stc
sub
popa
nop
pop
push
adc
mov
nop
loopne
inc
in
add
retw
fisubl
test
negl
xor
xchg
adc
fld
cmp
fs
push
jno
shrb
out
cmc
adc
lahf
xchg
adc
jbe
bound
and
sbb
hlt
xchg
inc
dec
mov
mov
xchg
push
dec
push
jae
dec
xor
adc
sub
cmp
adc
js
mov
int
mov
xchg
enter
cmpsl
data16
push
pusha
xchg
mov
add
in
outsl
push
cmp
push
xor
jle
hlt
fwait
je
add
movsb
dec
lret
ret
out
cmp
orl
movsb
xchg
int
sub
sti
jnp
sub
pop
scas
sub
mov
arpl
lahf
jns
loop
shlb
sub
arpl
imul
push
dec
enter
enter
mov
daa
adc
ja
xchg
insb
jno
pop
scas
cli
jmp
pushf
std
daa
cli
loop
imulb
jbe
leave
push
pop
hlt
ja
cwtl
push
dec
xlat
and
xlat
insb
dec
cmpsl
dec
in
rorb
rcl
inc
jle
stos
push
movsl
pop
push
or
xlat
out
and
mov
sbb
cmp
mov
out
mov
dec
loope
pop
jg
sub
fwait
mov
add
call
pop
cmp
clc
clc
pusha
mov
adc
sub
aad
fistl
inc
and
fs
les
adc
imul
mov
pop
mov
xchg
loop
std
mov
int
mov
repz
sub
clc
test
mov
jnp
lcall
rcr
or
mov
enter
out
aaa
push
xor
jle
push
jg
popf
int
frstpm(287
jge
out
sbb
test
cmp
iret
push
hlt
mov
outsb
hlt
scas
arpl
or
mov
fcoml
ret
jae
xchg
sbb
cld
int
shll
pop
mov
fldt
sub
sbb
cmpsl
ret
or
rcrl
sub
cwtl
dec
mov
lds
stc
mov
and
fistl
inc
mov
std
sub
imul
aas
add
jmp
mov
fs
add
pop
adcl
in
pop
xor
sub
mov
sbb
pop
mov
fwait
adc
xchg
jbe
ss
scas
ja
or
lea
inc
out
xchg
push
mov
jo
in
out
repnz
gs
jge
sub
dec
push
and
mov
adc
aam
rcll
rcr
addb
aaa
into
mov
insb
mov
mov
mov
lret
fwait
dec
xchg
push
ret
mov
daa
mov
mov
sti
in
rclb
and
hlt
mov
jno
inc
sbb
push
je
fdivl
pop
sbb
jp
inc
sub
xchg
inc
cmpsb
dec
mov
xor
mov
in
les
mov
mov
sbb
xor
or
pop
ja
xor
jo
xor
dec
stos
adc
jnp
pop
add
pop
cmp
sbb
iret
mov
xchg
incl
push
pop
int
loope
fs
xlat
ret
imul
cmc
lock
mov
nop
outsb
ds
push
popf
inc
rcll
aas
fstpt
ljmp
lods
inc
dec
loope
out
inc
jp
and
aaa
fld
int
pop
inc
inc
lret
cwtl
repz
std
cmpsl
xchg
jge
adc
or
jg
notl
movsb
inc
and
roll
and
aas
inc
jae
stos
mov
jo
jns
mov
mov
out
test
testb
fimull
lods
xchg
pop
or
cmp
xor
push
movsl
jle
mov
daa
out
daa
call
push
push
into
fisttps
cli
ret
push
lret
cmc
es
imul
push
je
mov
jb
loop
jo
cmpl
mov
xchg
arpl
dec
mov
adcb
rcr
pop
xchg
loope
arpl
push
mov
and
adc
cli
mov
adc
pop
movsl
movsl
add
push
pushfw
call
fsub
repz
in
pop
xchg
shr
or
xchg
cs
sub
lods
xor
in
lods
scas
add
cwtl
mov
movsb
int3
repz
jb
jne
jae
add
inc
stos
popf
dec
lds
jle
jge
adc
dec
fldcw
dec
inc
mov
lods
std
and
mov
adc
rorl
sub
adc
sar
popl
mov
arpl
push
clc
ds
mov
aam
pop
aad
dec
push
xlat
xor
aam
mov
popl
mov
lods
pop
loopne
xor
jecxz,pt
xor
add
ljmp
inc
inc
mov
repz
sbb
push
lret
mov
fcmove
pop
push
sbb
arpl
cli
push
popl
mov
test
lock
subb
enter
inc
or
jno
rdmsr
pop
dec
dec
imull
out
into
mov
push
imul
sbb
rolb
pop
ja
xchg
xchg
fildll
mov
in
jae
hlt
pop
adc
and
dec
and
cs
push
sbbl
cld
icebp
outsb
dec
incl
bound
inc
mov
inc
into
mov
es
jp
jmp
xor
push
hlt
jb
sarl
nop
adcl
scas
call
lret
and
mov
dec
push
decl
cmpsl
lods
inc
inc
adc
xor
xor
jl
mov
and
in
mov
push
mov
shl
and
sti
mov
out
cmp
mov
xor
stos
push
mov
mov
out
sti
hlt
or
inc
arpl
push
sahf
int
sub
ja
push
rcrl
enter
mov
insb
jno
rorb
mov
xchg
mov
sbb
sub
adc
scas
pop
or
cmp
mov
fiaddl
push
jns
cli
adc
hlt
or
out
xor
movsb
jle
dec
imul
mov
outsl
imulb
jle
ds
insb
lret
stc
lods
xchg
arpl
fiaddl
cmp
mov
movsb
fcmovnbe
sbb
pop
enter
sub
add
jno
push
lea
add
das
lcall
fidivrs
inc
sbb
subb
cmp
hlt
dec
add
dec
and
ljmp
dec
movsl
mov
fldt
or
repnz
int
inc
popa
test
lock
mov
mov
push
lock
mov
adc
pop
jne
into
shrl
push
cmp
bnd
out
pop
fcmove
push
ljmp
sahf
sbbl
sub
aad
out
jae
pop
je
fsubs
add
sbb
pop
jae
jne
sub
test
mov
test
cli
sti
xchg
mov
in
ror
and
and
mov
sarb
mov
lcall
sarl
mov
jns
adc
sub
push
in
jb
dec
aaa
dec
sarb
mov
push
mov
js
inc
test
push
dec
and
clc
outsb
lock
call
icebp
cmp
ljmp
mov
sti
inc
add
sub
iret
test
xor
push
in
jo
lds
push
push
mov
dec
xchg
push
stc
imul
clc
ds
popf
pushw
mov
mov
daa
mov
inc
inc
or
inc
push
xor
ja
mov
jp
fistpll
ljmp
in
push
xor
enter
out
outsl
push
xchg
movsb
adc
in
sub
subl
out
jno
pusha
les
inc
in
mov
stos
mov
cmp
ljmp
sub
dec
jmp
inc
lahf
aad
xchg
das
jl
daa
pusha
or
mov
or
add
clc
std
gs
jp
popf
jo
pop
push
out
push
push
cmp
int3
mov
jg
in
clc
cs
imull
popa
xor
cwtl
sbb
pop
mov
adc
ret
fisubl
stos
and
and
push
fsubp
push
shll
cmpb
adc
cmp
mov
mov
adc
shrl
adc
bound
dec
push
push
out
fs
shlb
addr16
jle
out
dec
xchg
negl
ljmp
out
sbb
jo
shlb
mov
jge
xchg
mov
fldenv
cmp
ss
xchg
mov
mov
out
pop
pop
jns
lock
pop
test
sarb
lret
jecxz
pop
mov
cmpsb
xor
add
xor
mov
add
pop
stos
add
pop
mov
push
push
sbb
inc
cmp
stc
sub
mov
dec
fstps
jne
mov
iret
mov
outsl
pop
lret
mov
shll
jae
xor
inc
cmpsl
pop
scas
mov
loop
aam
fsubrl
daa
andl
je
pop
outsl
js
in
fwait
je
mov
xor
pop
fsubrl
push
push
in
ljmp
xchg
data16
adc
aam
sbb
leave
cld
mov
add
nop
dec
xor
or
std
lret
xchg
inc
dec
xor
add
mov
imul
mov
je
test
mov
and
pop
stos
xor
dec
repnz
xchg
ss
mov
pop
mov
ds
pop
and
push
sub
xchg
mov
ljmp
lds
lds
repnz
mov
push
push
add
mov
jl
jle
sbb
mov
movb
je
mov
ret
pushf
cmp
push
add
out
mov
fdiv
test
dec
mov
xor
cs
inc
dec
jl
push
pushf
and
dec
or
jg
jne
rcrb
jno
push
setno
arpl
mov
add
add
push
call
hlt
add
nop
stos
test
inc
inc
mov
push
sbbl
push
test
pushf
orb
mov
enter
adc
adc
jp
mov
js
dec
rcll
int3
dec
xlat
add
cltd
ret
or
xor
pop
inc
mov
aad
jle
push
pop
add
insb
pop
mov
daa
push
ljmp
repnz
out
jb
adc
pushf
cmp
inc
xor
mov
nop
push
pop
jno
idivb
fistl
and
jecxz
cmp
jl
clc
jo
aam
mov
test
stos
stc
inc
fwait
sub
test
repz
push
jg
xchg
mov
dec
repnz
loopne
jg
jb
xchg
xlat
cli
cmp
arpl
adc
mov
cltd
push
ret
mov
outsb
mov
xlat
lock
jl
cmp
ret
lcall
or
cmp
mov
and
or
xor
jne
sub
in
push
add
cld
ficompl
inc
int
fnsave
cmp
inc
pushf
mov
xchg
test
pop
sbb
ss
out
xchg
mov
popl
and
iret
adc
xchg
mov
dec
aad
imul
add
add
adc
or
repz
lcall
sbb
push
push
xor
sar
jns
add
push
mov
insl
push
cmp
iret
lods
fstp
into
cmp
loop
dec
mov
cwtl
cltd
xrelease
rcrb
pusha
mov
call
jo
push
pop
add
rclb
dec
push
cltd
cwtl
sub
imul
jne
mov
mov
mov
es
clc
adc
add
xchg
cli
test
int
xchg
fdivl
leave
dec
adc
pop
ljmp
stos
add
mov
rorl
mov
mov
hlt
jmp
rcr
xor
push
rolb
jg
xchg
add
test
repnz
int3
dec
jae
sarl
pop
mov
or
jl
xor
jno
jb
add
adc
arpl
sub
int
sbb
mov
lods
nop
lcall
cmp
std
daa
inc
inc
pop
fcmovnu
bound
and
mov
ljmp
mov
in
cltd
mov
add
mov
jae
push
stos
add
push
lods
xchg
pop
and
fs
push
scas
out
je
jg,pn
lods
fisubl
xchg
mov
gs
cmp
push
inc
push
dec
mov
sub
rol
xchg
idiv
test
xchg
push
sbb
rcrb
loopne
cmp
ljmp
inc
test
jno
mov
arpl
sbb
xor
or
push
and
lock
nop
cmpsl
pop
std
add
pop
push
orl
push
ret
fstp
inc
jle
in
sbb
test
les
pushf
xor
in
mov
adcl
lods
aam
loop
push
dec
ljmp
xorb
or
fsubrp
sbb
pop
mov
xchg
inc
mov
jg
fidivrl
test
add
dec
fwait
cmpsl
add
pop
and
stos
push
mov
adc
xchg
push
in
sahf
imul
push
fcmovnb
bound
fidivrl
and
or
xor
mov
test
jmp
cld
mov
adc
push
dec
aam
rcrl
test
stc
add
cmpb
dec
add
push
testl
cmp
adc
cs
mov
out
jns
add
mov
mov
int3
pop
das
stc
jo
inc
jp
mov
loope
push
mov
mov
and
push
popf
inc
sub
enter
mov
pop
shrl
jl
xchg
inc
pop
imul
push
es
in
repnz
rorl
xchg
imul
pop
or
inc
ret
sarb
bound
push
push
adc
scas
inc
js
and
push
cwtl
pop
inc
cld
lock
jnp
cwtl
negl
popa
fsubrs
roll
mov
mov
test
pop
in
pop
fcoms
aad
jb
in
shr
nop
outsl
test
and
xor
push
mov
jo
out
inc
movsl
std
jbe
inc
aad
js
jp
and
roll
test
mov
cmp
popa
stos
and
push
cmp
push
into
xchg
test
lret
les
mov
xor
les
and
and
movsb
mov
jb
push
inc
lahf
popa
mov
arpl
or
aad
pop
lret
imul
pop
into
dec
lock
and
lret
leave
rclb
lcall
ret
movsb
push
xor
sub
add
scas
ret
jl
aad
xchg
jb
hlt
hlt
jne
xchg
cmp
fcmovnu
out
sub
push
aam
push
stos
xchg
ljmp
jmp
stc
dec
ficoms
in
or
pop
out
adc
xchg
or
pop
push
lea
insl
sbb
mov
dec
jl
cmpsl
ficomps
mov
imul
mov
inc
mov
lret
xchg
sti
aas
js
pusha
cmpsb
xchg
int3
ret
mov
out
mov
add
and
or
icebp
and
fisttpl
test
mov
arpl
mov
lea
pop
and
push
and
out
stos
xchg
fisubl
sarl
mov
enter
imul
cwtl
or
aas
popa
mov
lret
jb
hlt
inc
movsl
add
shrb
loop
popa
rorb
iret
cli
sub
es
cmp
outsb
loope
xor
pushf
cltd
sti
cld
cld
adc
mov
loopne
out
cmpsb
sbb
and
inc
add
jne
aam
pop
js
xor
movsl
mov
dec
push
lea
xor
lret
daa
mov
insb
dec
test
loopne
sbb
fucomi
ficomps
fs
stos
mov
pop
push
or
pop
xor
mov
cld
mov
xor
mov
idivl
sub
or
mov
push
sub
cmp
push
pop
sarb
movsl
fs
add
mov
loopne
jne
mov
test
add
jmp
sub
pop
ja
pusha
mov
loope
fwait
imul
and
and
inc
popf
fisubl
scas
dec
mov
dec
rcrl
sbb
mov
orb
cmp
jmp
and
repz
dec
pop
fwait
test
aam
dec
mulb
mov
pop
push
cltd
adc
jl
cmp
push
sbb
imul
cltd
sub
roll
lret
and
bound
js
js
dec
nop
add
sbb
lock
xchg
xor
popf
xchg
or
and
mov
or
xor
js
dec
push
xor
sbb
lret
push
inc
push
cmp
pushl
rclb
and
test
and
adc
sub
add
xor
shlb
push
jp
mov
adc
cli
sbb
sti
push
jmp
dec
nop
out
jae
push
jecxz
and
cmpsl
push
jo
sbb
popf
addb
jae
call
rorb
mov
sbb
jns
cli
sub
cli
shlb
repz
outsl
dec
pop
nop
cld
mov
push
ret
and
mov
xor
mov
int
adc
rolb
push
push
push
push
fstpt
outsl
jg
add
cld
jmp
add
les
pop
call
adc
xlat
shrb
adc
xorl
fadd
sub
sub
mov
push
scas
inc
jecxz
and
stos
aas
lods
adc
xor
rcll
pushl
pop
cld
out
daa
jno
mov
stos
lret
mov
imul
mov
add
ret
dec
push
cmpsb
add
and
jns
aam
add
dec
and
mov
jl
mov
or
jns
ss
pushf
out
shrl
xchg
stos
roll
ret
push
pop
xor
pushf
mov
lret
icebp
jno
mov
je
addb
das
pop
push
and
xor
incb
jns
xchg
jg
rcr
iret
adc
and
mov
push
in
adc
movsb
inc
jg
xor
mov
add
cld
adc
aad
cmpsl
mov
repnz
push
repnz
jo
pop
outsl
gs
mov
mov
cmp
ret
enter
loopne
cmpsb
call
add
pop
and
jo
imul
mov
xor
push
pop
jne
test
popf
mov
lcall
fidivl
mov
mov
cmc
loope
push
and
fidivs
sbb
iret
add
jge
stos
ret
fldcw
cmp
jno
jmp
lock
cwtl
add
mov
mov
repnz
rcll
dec
xlat
cltd
inc
jnp
es
jl
mov
out
fildl
sbb
pop
les
hlt
in
xchg
push
decl
mov
pop
sbb
xchg
popa
adc
les
add
int3
popa
xchg
cmp
fldcw
clc
mov
sbb
test
xor
jle
je
jecxz
int3
dec
movsl
es
or
add
pusha
dec
jno
hlt
cmp
dec
push
cld
out
sbb
iret
and
mov
mov
pusha
pop
mov
xchg
push
dec
arpl
sub
jmp
scas
adc
add
cmp
sub
jnp
dec
add
popa
ja
adc
es
adc
repnz
pop
adc
cmovle
div
xor
rolb
psubq
mov
push
push
xor
xchg
sti
xchg
bound
lret
inc
movsb
mov
cmp
or
inc
jp
or
or
push
cltd
jmp
lahf
cmp
es
pop
subl
mov
int
out
arpl
addr16
dec
xchg
inc
mov
cmpsl
ret
pop
repnz
mov
cmc
adc
adc
jnp
dec
mov
test
lea
outsb
mov
mov
pop
rol
hlt
mov
dec
dec
out
pop
push
jns
call
clc
imul
shrb
je
pop
das
push
jne
mov
insb
in
add
lock
insb
mov
adc
loope
inc
jecxz
into
outsl
bound
pop
arpl
pushf
jmp
ds
call
fmuls
fs
fs
xor
arpl
mov
or
iret
negb
dec
xchg
xor
sbb
ss
imul
out
pop
ret
fidivrl
mov
mul
outsl
lahf
loop
cmp
dec
push
xchg
jns
cltd
cmc
push
int
jge
hlt
sbb
pop
pop
fdivrl
dec
sbb
movsb
scas
add
push
std
adc
push
sbb
and
loope
and
or
popa
xchg
dec
sbb
js
xorl
mov
push
mov
add
push
icebp
mov
clc
jge
xchg
fwait
lcall
out
push
imull
bound
mov
sub
pusha
cmp
leave
jmp
ret
inc
sub
in
pop
lret
add
lods
jle
in
push
jno
pop
xor
jnp
inc
pop
fdivrs
adc
push
pusha
push
push
xchg
add
leave
mov
jne
mov
fs
jae
fwait
pop
ret
pop
cs
and
dec
mov
mov
inc
sti
xchg
sbb
jl
or
in
xchg
xor
pop
popa
jmp
push
lret
les
or
mov
jb
loopne
ret
dec
jb
dec
mov
sub
mov
xchg
fmulp
inc
push
sbb
pop
xor
sub
fildl
sbb
xchg
jnp
sub
mov
lods
enter
cwtl
int3
mov
cwtl
inc
movsb
push
dec
lea
push
push
fsts
cmp
mov
addr16
cmp
insb
xchg
lock
xchg
lock
xchg
mov
push
dec
dec
mov
jmp
inc
adc
xchg
in
adc
aaa
sbb
and
lods
or
orb
mov
sub
xchg
test
cltd
cltd
mov
fwait
mov
in
cmp
leave
sbb
jb
sub
rorb
push
sahf
mov
inc
push
cmp
push
jno
jmp
in
aam
rolb
scas
sbb
jae
scas
fisubrs
pop
mov
xchg
dec
adc
fwait
ret
jo
or
mov
fwait
mov
fs
ljmp
shr
fidivl
ficomps
in
repz
xchg
out
sbb
fdivrl
and
jb
ret
movsl
adc
lds
les
test
mov
push
push
fisubs
sub
xchg
sub
jl
das
sbb
pop
mov
lods
push
xchg
jl
repnz
sbb
dec
mov
negb
jo
jno
dec
sahf
das
add
add
jg
out
ljmp
add
stos
stos
or
stos
push
imul
repz
hlt
bound
mov
xchg
loopw
xchg
add
mov
fnstenv
cmp
push
popf
mov
lret
push
sub
in
inc
test
mov
push
cmpb
mov
pop
adc
das
movsb
int3
jns
data16
mov
fadds
mov
push
fldenv
ja
xchg
mov
cmp
ret
mov
ret
movsb
js
lret
xchg
and
cld
test
add
dec
out
gs
cltd
out
push
imul
add
adc
adc
mov
and
pushf
fldcw
lahf
icebp
inc
lods
dec
sub
in
jnp
xor
adc
call
scas
push
xchg
mov
nop
test
cwtl
rorl
xor
in
andb
ja
sub
xchg
adc
ljmp
mov
jae
sub
aaa
or
push
imul
loope
xor
xor
out
adc
xor
pusha
pop
and
pop
ret
push
dec
scas
test
push
jg
push
pop
loopne
mov
pop
popa
imul
xor
arpl
repz
or
shl
movsl
xchg
aad
lods
cs
mov
inc
loope
add
ljmp
rcrl
shll
mov
push
popf
fdivl
test
insl
sbb
and
mov
dec
lods
into
lock
mov
pop
lods
or
cld
loop
mov
sbb
aaa
lea
pushf
inc
inc
fistpl
fmuls
mov
mov
xor
subl
pop
aaa
loope
inc
cmp
jp
lret
inc
adc
fincstp
and
mov
mov
jmp
iret
mov
cmp
sub
into
push
cmp
jmp
push
ds
nop
incb
push
mov
pop
js
sub
sbbl
fnstcw
lods
outsb
insb
lds
jp
mov
pop
inc
outsb
or
std
loop
mov
lds
and
lcall
jae
mov
fldt
in
jmp
sub
call
scas
pushf
aas
in
xlat
into
arpl
mov
hlt
cmp
fdivrs
lods
jg
ds
call
ret
in
dec
mul
mov
jp
mov
dec
xchg
pop
fadds
rorl
xchg
inc
xor
and
jmp
mov
ljmp
push
push
and
and
lea
pop
stc
xlat
or
jl
negb
ja
xchg
mov
add
xor
jae
jg
dec
out
rcll
sbb
fsubrp
sbb
push
sbb
push
ret
cmc
fdivrp
lret
out
cli
mov
lret
call
out
sub
std
mov
in
test
and
sahf
add
fstl
filds
repz
or
je
jmp
add
movzwl
nop
cmpsb
dec
ss
xchg
xchg
cmpsb
cwtl
sbb
mov
push
leave
iret
jae
iret
xchg
in
movsb
divb
inc
xor
pusha
das
popf
lahf
jl
enter
or
mov
mov
add
movsl
add
daa
pop
js
clc
loopne
insb
flds
les
frstor
cmp
test
pusha
fs
int3
gs
aaa
mov
lock
and
and
popf
pop
inc
mov
pop
cmp
xlat
cs
mov
lcall
inc
adc
int
int3
arpl
sbb
xor
lahf
ja
cli
fldenv
cmpsl
divl
sbb
mov
and
jge
lret
cmpsb
cltd
xchg
push
mov
mov
lock
psraw
pop
cmp
mov
setno
cld
pop
dec
mov
ljmp
clc
xchg
pop
pop
loope
call
jbe
push
loop
add
xchg
cmp
movsb
iret
sub
pop
adc
dec
insb
xchg
and
leave
sbbb
sbb
adc
mov
insl
dec
fnstsw
call
fmull
aad
cli
sub
nop
jge
sbb
lock
and
sarl
leave
cmp
in
fbstp
jnp
cmp
fcmovnb
ss
in
adc
mov
xchg
xchg
rolb
sub
ja
mov
mov
or
pop
and
pop
stos
pushl
or
xchg
or
stos
jmp
out
push
les
push
in
xor
das
fildll
and
jbe
jge
fists
mov
das
inc
loop
pop
into
fsubrl
push
cltd
push
mov
or
call
jbe
adc
ds
loopne
xchg
enter
cmp
push
sub
das
jo
lahf
mov
or
and
push
test
pop
in
test
add
push
pop
mov
add
js
push
nop
mov
push
lods
in
int3
das
dec
mov
pushf
in
andl
in
sbb
mov
inc
mov
clc
cmp
push
call
mov
push
cmp
mov
cld
data16
stos
add
push
lret
mov
ja
jp
pop
add
push
popa
mov
test
push
push
pop
push
lret
xchg
shlb
lret
lcall
icebp
sub
jae
test
or
test
fidivrl
mov
je
cmpsb
jg
pop
inc
fwait
enter
xor
pop
and
rclb
ret
pop
cmpsl
repnz
cmc
sub
push
pop
jnp
out
xchg
push
inc
sub
or
xor
pop
outsb
lock
adc
aaa
fs
mov
sbb
ljmp
fwait
jno
xor
mov
call
xchg
or
imul
leave
movsb
int
mov
shll
leave
adc
inc
jne
push
movsb
shr
fst
xlat
add
adc
lret
mov
jp
es
jo
outsl
sbb
xor
xchg
int
push
push
mov
lock
mov
sti
mov
cltd
cmpsb
add
cwtl
enter
add
cmp
sub
push
aas
pop
and
mov
andb
push
jne
fstpt
cs
inc
imul
adc
xchg
or
mov
xchg
adc
mov
mov
fdivrl
jbe
mov
add
mov
dec
dec
ret
lea
push
mov
int3
bound
lahf
dec
hlt
in
pop
aam
int
je
mov
mov
data16
or
pop
jae
call
ljmp
jle
mov
jnp
andl
sub
or
sbb
cmp
pop
mov
xor
cmpl
sub
push
push
mov
ds
xlat
std
add
mov
fstpl
inc
cmp
les
add
pusha
std
pop
xor
outsb
fidivs
popf
sub
shll
add
xchg
out
pop
mov
and
and
fcmovnu
cmp
dec
clc
sbb
xor
mov
cli
outsb
adcb
mov
cmp
js
sahf
mov
xor
stos
lcall
push
mov
in
sbb
hlt
sbb
out
xchg
aad
adc
dec
mov
fidivl
lds
cli
loope
aam
data16
mov
das
and
dec
fcmovb
mov
orl
and
sub
sub
jl
lods
aam
xchg
xor
pop
cmp
inc
subb
fldcw
cmpsb
stos
lods
icebp
fs
mov
jg
fsubrp
jecxz
rcr
xchg
in
pushf
or
lret
movsl
fcomip
xor
das
movsb
in
and
fcmove
pop
add
lahf
scas
dec
hlt
lea
mov
aam
sbb
je
fisubs
xor
aad
insl
outsl
cmp
cmp
push
leave
and
cmpsl
xor
loopne
rdpmc
or
pop
shrl
cs
cmp
adc
or
xchg
je
push
scas
daa
fsubrl
cwtl
fstl
cwtl
daa
sarb
cmc
or
pushf
imul
push
pop
adcl
movsb
fmuls
xchg
cmpsb
icebp
xor
scas
push
xchg
cmp
or
imul
inc
push
pop
mov
scas
and
repnz
jg
inc
fs
sbb
bound
sbb
shr
ds
pushf
icebp
push
fcoms
jne
lea
jmp
movl
lret
jge
add
dec
bsf
pop
dec
bound
scas
pop
call
jae
xor
and
jne
es
mov
repnz
movsl
andb
sar
add
lret
xor
rcrb
mov
mov
loop
pop
cmp
jns
fimuls
test
fsub
call
pop
bound
int
cltd
mov
aam
xor
xchg
pop
addl
push
inc
out
cwtl
cmpsb
stc
inc
sbb
jb
mov
jmp
xchg
ret
rcll
inc
or
mov
jmp
imul
lret
mov
das
fcompl
stos
cli
and
xor
sub
cmpsb
jae
dec
or
mov
cli
addr16
outsb
cld
mov
mov
xor
mov
mov
jp
push
ds
inc
mov
xchg
mov
dec
lods
movsl
jns
sti
ret
sub
sti
cmp
popf
subb
hlt
push
push
shll
hlt
sub
adc
repz
cmp
jne
cmpsb
test
sub
inc
jae
sub
enter
lcall
icebp
cltd
jge
or
test
fdivrs
and
jnp
mov
pop
jno
cwtl
rcll
lods
in
iret
push
mov
cmp
imul
daa
xor
mov
mov
cmp
mov
repnz
mov
fidivrs
ja
mov
mov
xchg
xor
je
and
cwtl
sbb
push
fisttpll
cmc
aam
dec
inc
lock
daa
cmp
mov
sub
pop
xchg
and
ljmp
aad
pop
xlat
scas
xor
out
test
xor
jo
dec
xor
mov
mov
cmpsl
cmp
mov
inc
neg
push
inc
dec
mov
jo
int
or
daa
shll
xor
and
fucomp
fisubrs
sti
leave
pop
in
lret
pop
movsl
test
push
jb
sub
cmp
or
cli
out
push
aam
pop
repnz
mov
inc
inc
addr16
rcl
jmp
sub
jnp
mov
into
lcall
jbe
idiv
adc
add
or
inc
cmc
test
pusha
inc
rcl
lcall
cmpsb
jns
mov
xchg
sbb
inc
mov
sahf
jmp
dec
adc
rcr
adc
pop
push
lcall
mov
fsubrs
jns
xchg
adc
push
test
jmp
mov
or
dec
xor
mov
flds
insl
pop
mov
add
xchg
lahf
mov
icebp
call
insl
mov
dec
cmc
call
aam
mov
adc
adc
push
addr16
sbb
pop
and
mov
mov
lret
in
mov
popf
test
es
ljmp
pop
mov
aas
fstps
loop
clc
mov
xor
or
dec
daa
adc
outsb
mov
pop
pop
stc
js
mov
jl
mov
xchg
aas
fildll
daa
js
or
dec
push
mov
mov
xchg
xchg
sbb
sar
stos
add
daa
jno
add
imul
adc
sbbl
icebp
test
je
movsb
test
inc
xchg
mov
or
std
cld
mov
imul
movsb
shrl
cs
mov
cs
sub
inc
jno
xchg
aas
fnstcw
js
add
add
adc
or
out
aaa
xchg
pop
test
sub
xor
stos
in
js
fucomp
jns
out
iret
mov
xchg
and
stc
sbb
test
pcmpeqd
xchg
xor
pop
in
add
testb
push
in
inc
xchg
cmp
sbb
sbb
cli
mov
or
dec
das
call
pop
fidivrs
adc
inc
inc
mov
hlt
pop
jp
adc
jnp
bound
js
mov
movsl
adc
jmp
cli
mov
mov
sbb
pop
jmp
pop
fwait
scas
mov
cli
stos
stos
and
mov
jl
lods
and
js
enter
int
xor
lock
add
adcl
fadds
inc
sub
mov
imul
outsl
inc
bound
xchg
cmp
mov
inc
adc
pop
adc
and
push
sti
aaa
in
es
jno
sbb
mov
jle
les
les
stos
iret
pusha
testl
and
mov
push
outsb
sub
cmp
stc
jp
sbb
sti
es
jge
cld
or
jbe
popa
leave
aaa
xlat
pushf
cmp
pop
or
jne
lahf
mov
loope
scas
jb
sbb
xchg
stc
mov
cs
pop
add
cmpsl
pusha
cmpsl
fistpl
push
mov
outsl
das
add
pop
into
out
rorb
popa
xor
sti
push
or
jg
orb
arpl
test
pusha
adc
test
es
mov
ja
sbb
or
popa
mov
fidivl
cli
xor
add
add
cmp
adc
icebp
repz
sub
pop
fildll
mov
xor
jnp
push
inc
aas
insb
mov
fisttpll
pop
sub
lahf
sbb
sbb
dec
push
adc
or
test
and
fldcw
sbbb
add
or
inc
lods
sbb
popf
test
movsl
mov
lcall
popa
jno
push
jo
shlb
ficoml
add
jbe
popf
sub
pusha
fnstcw
mov
sub
push
mov
dec
pop
sbb
nop
inc
fwait
out
xchg
rolb
mov
inc
xor
mov
sbb
int3
xlat
pop
and
imul
push
and
movsl
cmc
clc
lret
inc
or
jmp
mov
jecxz
mov
jmp
jecxz
mov
les
jae
push
shrl
ja
cmc
mov
sahf
xchg
mov
inc
mov
test
xor
lods
jb
bnd
outsl
mov
fucomip
and
adc
cmp
rcll
cmp
and
adc
mov
inc
inc
sbb
cmp
or
leave
arpl
add
sub
into
sbb
or
cwtl
and
dec
insb
push
insl
mov
cmp
out
cli
popf
dec
pusha
loop
in
rcll
pop
jge
in
jecxz
and
and
sbb
add
push
ret
cmp
sub
cltd
inc
int
pop
enter
sarb
cmpsb
add
test
and
aas
mov
movsl
push
ret
cmp
leave
arpl
rcll
add
dec
fs
test
dec
loopne
scas
push
or
sbb
push
scas
imulb
hlt
dec
fcoml
sbb
cmp
add
lret
daa
cli
jne
out
cli
xchg
mov
incl
leave
jg
scas
jl
in
lds
xorl
pop
in
rorb
mov
fcomip
and
add
in
jg
in
adc
and
or
ss
rcrb
addr16
les
daa
ljmp
push
jb
ret
movsb
mov
mov
sbb
ds
xor
pop
dec
rcll
inc
mov
mov
push
mov
push
lock
mov
dec
test
and
mov
movsl
out
out
nop
outsl
push
movsb
loopne
dec
sub
mov
and
push
pusha
cmc
mov
adc
mov
call
add
inc
push
rorl
mov
xchg
push
mov
mov
cli
cmp
rcrb
mov
mov
ror
mov
iret
shr
lret
popf
repnz
out
sbbl
adc
popf
dec
sbb
sti
fimull
xchg
test
cli
dec
and
mov
inc
scas
add
dec
mov
cmp
or
mov
sbb
push
js
cmp
sub
popf
and
daa
jp
cli
lock
jp
jecxz
rolb
out
jmp
jmp
inc
mov
mov
xchg
je
mov
xlat
or
dec
jno
xor
test
ljmp
xor
js
jp
or
fisubs
les
mov
and
imul
or
jae
xchg
sti
push
or
add
fisttpll
fnstcw
imul
pop
fbstp
and
mov
jne
fdiv
cmp
clc
push
scas
push
ret
dec
shlb
xor
lock
pop
pop
fs
add
clc
sbb
out
out
es
or
add
jns
fwait
outsb
ljmp
popa
push
inc
in
pop
adc
sar
in
jg
rcr
jmp
es
lret
xor
in
push
push
dec
xchg
pop
popa
jmp
leave
xchg
and
jmp
cmp
jnp
mov
and
cmc
or
adc
out
pushf
lea
mov
fwait
cmp
dec
xchg
test
lods
mov
mov
pop
pop
lahf
rcll
test
push
cmp
sahf
xor
test
ljmp
and
in
mov
mov
or
mov
insb
orl
xchg
je
or
and
jl
pusha
dec
imul
inc
cmpb
xlat
cmp
lcall
out
sbb
mov
pop
jp
out
fsubs
push
sti
out
ljmp
mov
js
js
push
dec
mov
sbb
xor
outsl
cmpsl
pop
push
int3
mov
fs
addr16
rolb
rcll
out
mov
mov
cmp
repnz
enter
insb
lds
nop
test
loopne
inc
nopl
or
add
fprem
fsubrs
repnz
lods
pop
add
out
adc
test
sbb
pop
or
aad
dec
sti
outsb
mov
test
xchg
pop
fstl
stos
add
xchg
out
xor
xlat
jle
rcl
dec
jae
frstor
xchg
push
mov
out
cmp
mov
leave
jle
insb
and
rolb
popf
jae
dec
stc
outsb
jp
mov
gs
add
loope
push
mov
lret
out
test
push
cltd
js
cmc
cld
lods
je
sbb
add
shrl
das
outsb
xor
and
add
inc
cmpsb
cli
push
dec
jecxz
and
xchg
fsubrp
jg
adc
dec
je
dec
push
xor
ja
add
nop
popa
mov
std
pshufw
pop
fidivs
pop
cwtl
out
out
notb
sub
adc
out
xchg
push
and
dec
pop
dec
cld
dec
jecxz
out
inc
sbb
pop
imul
shrl
mov
sbb
xchg
sbb
cmpsl
mov
mov
sar
and
hlt
pop
fildl
rcl
jns
xor
aas
cmp
push
add
sub
lret
sub
cmp
jb
mov
cmp
jo
loop
iret
add
nop
enter
pop
lret
lret
into
xor
xor
jmp
scas
lds
push
sub
cmp
cmpsl
jl
das
dec
loopne
xchg
jmp
sbbb
xchg
sbb
and
jmp
fs
clc
push
fisubrl
xchg
pop
pop
inc
mov
lcall
sub
ficoml
mov
push
or
js
int
rsm
mov
std
xchg
sub
test
mov
nop
int
testl
jb
or
pop
and
popa
xor
ror
shlb
fstpt
les
lods
cli
jmp
ret
xor
dec
iret
ds
pop
push
or
rcl
test
cmp
fsub
and
or
lcall
fcmovu
aam
and
ror
jnp
adc
xor
icebp
cmp
outsl
lods
dec
rcrl
andb
sbb
imul
ds
xor
clc
sti
jg
imull
icebp
jg
int
push
es
outsb
inc
mov
mov
sbb
call
fsubl
int3
adc
lods
cmp
xchg
enter
out
xchg
push
ja
or
mov
data16
and
rol
xchg
in
int3
xor
lcall
dec
or
enter
arpl
fadds
jmp
mov
jge
adc
ss
out
or
sub
sbb
xchg
bnd
imul
mov
cmc
xchg
les
sub
adc
fadd
test
cmp
pop
loope
lahf
inc
fimull
push
mov
push
adc
out
push
movl
jmp
addr16
test
bound
sub
pushf
test
das
movsb
daa
iret
lahf
in
out
mov
jl
jmp
jo
jbe
dec
pop
or
into
push
out
jne
mov
pop
ret
fists
frstor
xor
cmp
sub
push
int
cmp
ds
xlat
jg
sbb
pop
cltd
push
pop
or
mov
mov
loope
jmp
cli
adc
test
push
dec
jle
les
push
and
mov
xchg
daa
pusha
jecxz
sbb
out
pusha
pop
cmp
and
inc
dec
js
int
test
jnp
jbe
mov
int
sub
out
mov
dec
jbe
mov
aas
inc
cmp
sbb
xor
cli
in
int3
mov
sub
mov
add
imul
jp
mov
sbb
add
or
movsb
ss
dec
in
cmp
push
sbb
jmp
pop
aaa
and
mov
push
andb
adc
fadd
xchg
int3
mov
lock
decb
xchg
es
add
sbb
mov
dec
mov
in
inc
cmp
enter
int3
mov
test
out
mov
ja
aad
pop
mov
lea
test
lcall
imul
push
fisttps
xchg
loopne
push
pushf
inc
add
leave
testb
or
test
cwtl
lods
cmp
decb
das
inc
in
or
ljmp
push
pop
daa
inc
cmp
pop
inc
jge
push
mov
imul
data16
xchg
dec
dec
cmp
mov
lcall
lea
notb
mov
insl
testl
icebp
push
xor
repz
das
scas
cmovg
or
ljmp
fidivrs
lahf
stos
pushf
inc
dec
mov
pop
xchg
nop
stc
pop
sub
lds
add
es
mov
xor
sub
push
test
rclb
fildl
and
aas
rcrb
pop
lret
pop
xchg
xor
imul
jge
xor
scas
adc
icebp
mov
pop
cmc
pop
sub
sbb
adc
in
lods
clc
icebp
mov
movsb
repz
push
jne
movsl
je
xor
imul
mov
sbb
jl
or
cmp
push
inc
add
xchg
cmp
push
aaa
js
jg
lds
aas
mov
mov
mov
std
xchg
int3
pop
xchg
jmp
gs
ja
shl
lret
pushf
lea
and
pop
call
sub
mov
xchg
jno
pop
stos
cmc
push
rorb
mov
or
es
aam
mov
mov
jae
jecxz
xor
add
mov
bound
and
mov
shll
mov
stos
test
inc
or
adc
imul
mov
mov
sbb
xchg
jmp
sbb
loope
mov
sub
stos
mov
inc
push
rcll
loopne
cmp
int3
add
fdivs
or
sbb
and
sub
mov
lods
in
bnd
sub
lret
jae
movsb
or
mov
inc
mov
punpckhwd
push
adc
mov
push
or
dec
ret
inc
arpl
std
mov
scas
adc
sub
in
add
sbb
or
stos
adc
pop
dec
cli
in
movsl
icebp
dec
lods
add
repz
or
cmp
xchg
js
mov
push
or
testl
adc
lds
aam
jnp
jle
scas
mov
mov
lret
rcl
int3
inc
mov
sub
or
iret
add
push
push
cmp
fisttpll
data16
jmp
mov
push
ljmp
push
fsubrs
aas
test
xchg
adc
ljmp
adc
sbb
fldenv
cmpsb
push
dec
mov
sub
pushf
jne
arpl
mov
push
jmp
add
in
repnz
shrb
stos
add
test
mov
enter
add
pop
mov
leave
jecxz
push
jne
push
push
aad
into
arpl
xchg
dec
fistl
push
mov
sbb
mov
fstl
mov
adc
es
mov
cmp
jne
subl
lds
loop
sub
sub
push
sbb
mov
stos
hlt
rcrl
in
mov
mov
fsubrl
mov
xchg
xor
mov
adc
shr
add
dec
out
ds
dec
mov
cli
adc
stos
adc
or
popa
jb
ds
data16
xacquire
sbb
pop
push
std
test
push
lock
dec
gs
dec
cmp
fisubrl
cmp
jno
leave
inc
outsl
mov
sbb
sahf
out
xlat
cmc
neg
cli
dec
lcall
sbb
out
in
adc
mov
mov
gs
in
imul
sub
mov
dec
mov
insl
movsb
push
popa
cs
sub
mov
inc
psubb
into
add
push
dec
mov
sbb
cmpsb
add
mov
cmc
xlat
ljmp
daa
dec
adc
push
stos
ret
xchg
outsb
into
push
popa
fxam
sub
ret
and
inc
int3
cld
sub
shrl
pop
add
mov
pop
inc
in
lods
cld
or
popa
xchg
inc
xlat
sbb
shlb
or
leave
ss
scas
nop
movsl
sub
cmp
enter
jnp
cmp
dec
shrl
lea
std
int3
aad
test
and
cltd
and
lock
pushf
jp
test
inc
stos
dec
mov
xchg
hlt
adc
out
in
imull
sbb
js
jle
aam
xchg
bound
pop
loop
pop
stos
mov
xor
das
adc
jo
sub
jno
or
jnp
mov
int
dec
or
outsl
push
inc
pop
fcomip
scas
cmpsb
cmpsl
rol
mov
jmp
push
mov
outsl
aad
ja
lret
sub
jb
mov
and
js
or
pop
dec
mov
lock
in
and
xchg
or
cmpsb
push
insl
lock
sbb
lods
and
lcall
and
shrb
pop
sbb
or
dec
jno
sbb
inc
add
aad
inc
mov
ret
pop
popf
inc
das
push
pop
test
movsb
repz
add
sub
inc
cmp
pop
das
mov
lret
pop
jnp
cmc
and
push
adc
dec
mov
ror
jb
gs
mov
stc
inc
rcl
in
xor
jb
xchg
xchg
stos
mov
mov
dec
sarl
mov
ret
scas
sub
sub
mov
mov
xor
mov
into
cmp
comiss
out
lea
aad
dec
notb
xchg
fimuls
test
scas
inc
sbb
pop
mov
ja
mov
aaa
sub
inc
out
jg
sub
scas
ja
push
pop
nop
cmp
inc
cli
aaa
fwait
scas
cmpsb
iret
daa
movsb
sub
and
jmp
fistpll
pop
ficoms
test
jecxz
ja
cmp
inc
lret
pop
mov
enter
cli
aas
icebp
adc
es
punpcklwd
mov
mov
xlat
mov
loope
cli
xlat
xchg
lods
pop
jecxz
dec
movsb
pop
sub
xchg
frstor
mov
pop
xor
cmp
clc
mov
adc
lahf
push
decl
xchg
dec
cmp
int3
imul
jg
cmp
inc
pop
cmp
push
lret
push
jne
add
lret
xor
pop
movsl
adc
popf
mov
les
push
stos
mov
cmp
jne
ja
xchg
sub
mov
ja
aam
loop
out
mov
mov
cmp
out
jbe
outsl
hlt
imul
add
dec
in
hlt
aas
mov
leave
cmp
or
and
pop
mov
mov
dec
xchg
loopne
add
stos
cmp
js
push
push
xor
xlat
clc
andl
mov
lock
xchg
jl
jo
pop
jns
sbb
cmp
push
jp
ljmp
repnz
fnstsw
pop
dec
aas
xchg
push
mov
mov
jmp
insl
or
shrb
push
xor
lret
add
mov
pop
mov
lock
xor
and
loop
sbb
fnstenv
xor
sahf
mov
dec
jmp
aam
nop
add
pop
mov
popl
sbb
into
sahf
outsl
arpl
sub
das
sahf
movsb
test
push
adc
jne
pop
ja
xchg
pop
pop
lahf
and
mov
and
dec
xchg
ret
push
cmp
sbb
fcoml
outsl
xchg
xchg
dec
jmp
or
leave
push
sub
ret
sti
shlb
clc
mov
adc
je
cs
es
sub
sbb
mov
fwait
cmp
test
sbb
sub
repz
js
add
push
loop
xchg
pop
xor
sar
cld
shrl
ja
mov
jno
incl
lret
into
pop
int
inc
xor
and
add
stos
sarb
sahf
mov
dec
cltd
adcl
in
addr16
pushf
out
jp
jbe
or
aas
shlb
add
cld
ljmp
loop
mov
popa
stos
mov
dec
xorb
bound
adcb
pusha
mov
and
cmpsl
loope
shll
out
jl
mov
insl
clc
mov
mov
in
cmp
adc
lods
lahf
xor
imul
xchg
inc
fmuls
push
sub
imul
ja
loop
in
out
shrb
and
mov
xchg
or
repz
sub
or
mov
mov
add
or
jp
mov
adc
dec
adcb
cmc
int3
mov
popa
xor
stos
inc
shlb
mov
inc
mov
stos
inc
out
push
xchg
or
sarl
and
jo
jmp
aaa
bound
push
dec
movsb
cmp
out
inc
fidivrl
jle
mov
and
push
dec
xor
jp
add
lods
push
lea
insl
sbb
bound
cltd
jne
jno
out
adc
cmp
data16
sahf
inc
pushf
xchg
xchg
pop
mov
sub
les
mov
out
or
sub
pop
adc
pop
daa
sub
push
sub
stc
mov
dec
clc
insb
mov
push
push
cli
repz
push
jbe
fdivl
adc
mov
or
xor
lcall
aaa
mov
rclb
repz
pop
lahf
test
out
add
jmp
add
rorl
cmp
and
mov
cmpsl
jae
test
rcr
jg
daa
int
cmc
lods
sbb
mov
lcall
mov
dec
add
lcall
int3
gs
pop
mov
fs
lahf
jl
cmp
push
xchg
inc
jno
xor
sub
in
shll
aas
inc
cld
fwait
out
or
cmp
mov
xchg
sarl
ljmp
iret
test
and
dec
stos
pop
push
cmp
inc
cs
sarb
test
pop
mov
into
xchg
mov
cmpsb
cmp
push
xor
mov
pop
mov
cmc
in
pop
mov
cmp
or
pushf
sub
xlat
ret
inc
or
ja
outsb
imul
loopne
pop
ljmp
loopne
adcl
out
mov
push
mov
pop
leave
rcll
pop
or
test
or
add
data16
pop
adc
mov
repnz
mov
xchg
pop
push
lods
stos
xor
mov
lahf
movsb
out
ds
ja
mov
std
out
sub
and
jge
sbb
xchg
fistpll
nop
test
cmpsb
es
in
ja
push
fsubl
shlb
inc
mov
pop
and
sti
aad
pop
mov
lahf
push
fsts
ret
jo
ja
jnp
xor
sub
cmp
adc
ss
fucomp
adc
push
pop
mov
leave
mov
xorl
into
push
int
dec
push
ljmp
pop
enter
pop
sbb
in
xorb
outsl
add
scas
movsl
adc
mov
into
mov
and
andl
or
xorl
adc
or
dec
cmc
scas
das
mov
aam
test
lock
ljmp
sub
push
in
sbb
xor
inc
lahf
mov
lret
rolb
stc
cwtl
je
out
jge
add
dec
shl
mov
jg
and
or
xorb
pop
inc
test
stos
mov
mov
stos
mov
jnp
arpl
addr16
xor
lods
pusha
lea
loopne
mov
shrb
add
jle
mov
mov
mov
inc
andb
mov
jp
aas
icebp
mov
cmp
test
sub
aas
incb
mov
sbb
outsl
stos
sub
mov
shrb
outsb
loop
shlb
arpl
stc
and
mov
cld
sbb
call
jge
repnz
or
sub
sub
rcll
insl
in
repz
std
inc
xchg
cmp
add
xor
jle
roll
dec
scas
mov
fwait
mov
add
leave
jae
jns
cwtl
dec
ret
cs
adc
orb
movsb
fmul
movsl
nop
xchg
or
hlt
push
jp
cmp
roll
mov
sub
lret
xor
ffreep
dec
add
jne
ss
lods
aaa
or
scas
in
xchg
ror
bound
and
adc
mov
cmp
mov
add
fs
mov
mov
mov
cmp
pop
sti
subb
ret
sbb
filds
movsl
push
mov
out
sar
lods
scas
fldt
in
ljmp
xor
jnp
cli
fwait
xor
outsb
pop
sub
push
imul
xchg
sti
xchg
or
out
pop
lea
out
and
insl
jg
sub
add
jecxz
int
aam
push
or
mov
mov
shlb
inc
hlt
lcall
fwait
inc
and
in
imulb
dec
lods
mov
mov
lods
mov
mov
inc
cmp
dec
cmp
sub
jbe
testl
aam
sub
leave
xchg
mov
mov
les
mov
jl
mov
xchg
addr16
in
sbb
data16
adc
outsl
sbb
dec
imul
lahf
dec
fimull
pop
jo
jg
push
jb
mov
sbb
rcl
cmc
xor
mov
insl
and
pop
sub
xor
inc
sbb
outsb
mov
push
stc
push
adc
push
mov
dec
lret
bndstx
lahf
adc
push
shl
add
pop
pop
aad
dec
clc
or
movsb
xor
test
mov
sahf
nop
rclb
pop
mov
cmp
inc
jne
inc
inc
xchg
stc
push
dec
psraw
sub
leave
pop
fisttpll
pop
pmaxub
jno
adc
xor
mov
cmpsb
mov
push
xlat
add
jmp
mov
sahf
pop
mov
cld
imul
ja
jg
out
vminpd
sub
jge
inc
dec
or
cmc
jl
xchg
cwtl
adc
dec
hlt
aas
adc
stos
or
sub
shrb
pop
test
pop
jae
les
xchg
fsubl
push
mov
and
cmpsl
andl
mov
bound
arpl
arpl
pop
and
mov
in
jecxz
pop
movsl
adc
jmp
jae
mov
clc
pop
insl
add
dec
pop
mov
push
daa
pop
sub
xor
cmp
mov
jge
lods
daa
lock
pop
inc
mov
lcall
out
jmp
call
out
incb
fstps
dec
out
inc
xchg
push
mov
cmp
mov
push
leave
jnp
popf
mov
adc
mov
mov
jbe
or
jo
mov
negl
dec
add
adc
dec
and
lods
or
in
adc
mov
push
push
cmp
mov
cli
fcomps
cmp
or
push
inc
dec
mov
jge
ffreep
dec
cmp
mov
cmpsb
addl
fstpl
std
sahf
enter
daa
pop
or
sub
inc
lods
jmp
test
cmp
popf
push
leave
sub
mov
mov
imul
stc
mov
stos
aad
dec
inc
dec
loopne
dec
pusha
mov
xor
pop
push
jb
cmp
xor
mov
sub
fdivl
jns
xchg
add
lock
loopne
cmp
push
testl
push
addb
xchg
push
fcom
inc
xor
lock
rorl
push
arpl
clc
push
orl
fs
jge
sbb
or
fisubl
xor
jns
out
mov
push
sbb
sub
or
test
aaa
ss
mov
int3
lods
notl
fiadds
adc
mov
sub
add
call
clc
adc
push
les
xchg
sbb
repnz
push
into
add
sbb
jae
movsl
lahf
xor
fsin
imul
sub
add
adc
cltd
fistl
lea
add
xchg
and
xor
out
cmp
pushf
popf
dec
popf
and
loopne
xor
adc
data16
jno
lock
mov
inc
popf
out
out
fwait
hlt
ret
lret
sbb
rcl
mov
std
call
lods
xorl
lds
rep
adc
sub
xor
cmp
push
sub
mov
mov
and
loope
inc
stos
adcb
xchg
repnz
clc
sti
loope
dec
pop
test
or
sahf
lods
push
insb
xchg
mov
fwait
inc
sbb
and
out
fcmovnb
xchg
movsl
adc
jmp
das
addr16
jge
add
dec
push
xchg
enter
sbb
inc
aam
idivb
sbb
inc
lods
bound
in
dec
xchg
movsl
mov
stos
and
xor
hlt
mov
sbb
lret
std
rorb
iret
fiaddl
test
int3
lahf
sub
lcall
ret
out
sbb
inc
addb
lahf
push
scas
dec
xchg
aaa
xor
stos
jl
sbb
in
and
xchg
pop
mov
or
lea
arpl
and
jae
inc
test
aaa
lds
in
stc
add
mov
and
or
and
negb
outsb
insb
inc
mov
loope
out
loop
aad
adc
sbb
jmp
aad
add
jl
cltd
in
jno
fistps
and
push
js
and
jmp
sub
mov
cmp
pop
pop
fmull
sub
stos
sbb
sub
cmp
mov
shlb
sub
mov
sbb
stos
cmc
sub
dec
xchg
popf
adc
pushf
stc
sub
sbb
daa
xlat
jmp
stos
push
adc
jge
dec
cmp
pop
fldt
daa
stos
xor
xorl
and
dec
aaa
push
mov
mov
lret
mov
mov
dec
daa
mov
xor
das
in
or
jmp
adc
jg
outsw
lret
lahf
aas
xorl
xchg
dec
icebp
xchg
lret
imul
pusha
es
cmp
sub
sbb
in
arpl
test
inc
pop
pop
pop
ficoml
mov
xchg
xchg
xor
mov
push
pop
sub
xchg
sbb
fmull
or
mov
fmul
mov
daa
mov
jnp
js
imul
lahf
js
sbb
inc
pushf
push
lea
mov
mov
shrl
lret
loope
pop
dec
mov
or
or
lds
movb
je
fidivrs
in
xor
or
addr16
dec
push
lcall
sub
std
mov
xor
mov
into
incb
push
int3
fs
xor
mov
mov
sub
mov
and
aam
mov
popf
cltd
fildl
push
cwtl
lods
pop
pop
repz
jecxz
inc
stos
call
leave
mov
in
mov
and
adc
movsb
scas
push
ss
movsb
js
arpl
dec
or
sbb
dec
or
popa
jno
push
xchg
andb
mov
stc
inc
or
lea
sub
stos
inc
call
sbb
movsl
ljmp
mov
pop
sub
cmpb
or
sbbl
les
frstor
jo
fsubr
ret
mov
fs
ret
or
mov
mov
iret
adc
lods
adc
test
dec
xchg
inc
insl
rolb
mov
jl
jp
jl
fmull
adc
vmovupd
test
out
sbb
mov
mov
adc
aaa
push
add
cmp
jns
fimull
shlb
sarl
adc
in
fscale
push
fcmovbe
fstpt
mov
imul
in
pop
mov
xchg
add
cwtl
or
mov
dec
stos
pop
roll
add
inc
pop
ret
dec
xor
xchg
xor
mov
shlb
std
push
xor
adc
xchg
mov
jle
jns
int
push
sub
int3
cmp
mov
lret
inc
scas
cmpb
pop
in
xchg
add
cld
cmp
repz
jb
lock
dec
mov
loope
lods
add
inc
int
in
cmc
xor
stc
aam
mov
sbb
dec
int3
icebp
test
ficoms
hlt
fbstp
fildl
lds
test
add
pop
sbb
ja
repnz
aaa
xor
inc
repz
dec
dec
shr
out
jae
les
or
inc
jns
jne
mov
adc
pop
pusha
mov
inc
xchg
add
test
jbe
incb
adc
and
repz
xchg
pop
sbb
jge
inc
mov
cmp
out
insl
push
add
cmp
add
sahf
push
mov
data16
loop
dec
test
pop
ja
sub
pop
ja
imul
das
cmp
aam
out
inc
hlt
fidivrs
addr16
daa
pop
pushf
pop
fdiv
mov
lods
imul
adc
pop
push
xchg
mov
popa
push
adcl
insl
out
pushf
clc
push
sbb
jle
jmp
xchg
fstpt
cmpsl
pop
or
cmpb
xchg
and
fcmovb
jae
dec
shr
gs
mov
jbe
mov
scas
fucomp
cmpsb
and
or
mov
xchg
ret
into
insb
cmp
out
test
jl
sbb
shlb
push
cli
rclb
xor
data16
push
stc
rep
adc
inc
sub
loop
test
and
mov
test
es
or
stos
scas
stos
xchg
cld
test
cltd
sbb
pop
call
loope
fcompl
sub
lods
adcl
scas
cmp
push
clc
jno
fwait
sbb
or
pop
testb
mov
mov
sti
mov
cmp
cmp
cmp
stos
inc
daa
outsb
sbb
pop
cwtl
jge
sar
jmp
loop
adc
aam
mov
cmpsb
cmp
mov
mov
int3
jns
xchg
mov
pop
ret
shl
bound
aaa
pushf
mov
and
imul
jmp
pushf
cmovb
fdivrl
and
subb
or
cmc
mov
dec
mov
jb
loope
popf
and
test
mov
loope
sbb
pop
mov
mov
xchg
jo
pop
stos
mov
lods
mov
lret
in
cmpsl
jae
stos
inc
std
cmp
push
in
push
outsb
push
pop
ror
imul
scas
xorb
hlt
mov
push
push
sub
xor
add
outsb
mov
jg
xchg
jo
pop
in
aad
sbb
pop
adc
pop
shl
mov
cmpsb
inc
push
xchg
pop
cmc
ljmp
mov
lahf
xor
clts
sbb
xchg
mov
adc
sbb
xor
sub
data16
adc
hlt
inc
insb
or
fcomip
xchg
jae
cmpsl
shr
pop
sbbb
jl
scas
shl
aas
out
cmp
jns
add
add
lret
mov
sub
outsl
xchg
sbb
adc
repnz
rcrb
jl
stos
mov
sub
inc
inc
xchg
jae
mov
add
or
loop
xchg
add
xchg
adc
ret
push
adcb
rep
mov
fbld
int
insl
mov
insw
mov
stc
jmp
ljmp
add
mov
adcb
iret
sub
sbb
cs
loope
sbb
jp
inc
push
fwait
cli
call
shr
mov
mov
dec
leave
sub
mov
sub
lods
leave
mov
adc
mov
pop
idiv
pop
imul
scas
mov
ds
pop
les
seta
aaa
push
jo
popa
jns
xchg
inc
pushf
xchg
mov
je
cmc
push
ret
jns
xchg
fwait
inc
leave
and
lods
xchg
xor
loop
dec
std
int3
mov
iret
pop
dec
int
sub
fisttps
pop
test
lea
ja
repz
pop
sbb
mov
pop
mov
add
jle
sbb
mov
stc
inc
hlt
rolb
sbb
enter
jns
cmc
int
arpl
test
cmp
lock
fcomp
data16
in
hlt
mov
pop
in
jne
aam
lret
scas
aas
push
data16
xchg
test
mov
nop
testb
jbe
push
pop
dec
repz
jbe
inc
mov
adc
add
jb
popl
fstpt
rcr
cld
les
pop
adc
hlt
aad
fcomps
jp
scas
add
xchg
data16
cli
cmpb
adc
adcb
mov
mov
inc
mov
jae
xorl
je
shr
loop
std
movsb
inc
mov
cltd
rorb
pop
cmpsb
xchg
dec
rcrb
lods
cmp
and
inc
pusha
or
xchg
pop
int
push
add
lret
fcomp
js
xchg
je
mov
dec
mov
jbe
or
dec
sarb
stos
lock
cmp
add
push
push
lock
sahf
scas
scas
call
pop
pop
ret
inc
xor
pop
mov
inc
add
jp
in
mov
inc
jge
scas
push
mov
cltd
popf
hlt
outsb
mov
stos
or
cmpsl
push
inc
cwtl
sbb
dec
aad
inc
es
sub
mov
push
xchg
jnp
cmp
cwtl
push
arpl
jmp
test
test
popa
pop
test
add
pop
repz
sahf
xlat
lods
inc
pop
popa
insl
add
mov
ds
ljmp
aaa
xchg
push
lds
push
adc
mov
pop
xor
jl
jge
inc
test
test
into
cmc
imul
push
stos
outsl
mov
xchg
shrl
loope
inc
data16
pop
in
add
addr16
push
or
pop
insl
imul
dec
cltd
hlt
xchg
data16
mov
and
into
or
sub
jno
cmp
xchg
mov
or
push
or
jae
xor
xchg
lcall
nop
sub
jae
push
mov
pop
mov
hlt
jb
movsl
xor
test
pop
mov
out
sub
pop
movsl
xor
mov
or
mov
es
out
lret
out
adc
cmp
loope
lods
ja
pop
xchg
inc
adc
mov
push
adc
and
jbe
inc
jnp
mov
and
mov
loope
stc
fwait
pmaxsw
gs
and
aas
loope
push
inc
shl
outsb
pop
push
pop
jg
pop
ret
dec
orb
mov
xchg
mov
call
clc
cmp
test
stos
sahf
push
pop
sbb
pop
out
filds
adc
inc
loope
ret
pop
frstor
add
add
stos
dec
fistpll
add
outsl
lock
dec
sub
ljmp
test
ret
popf
sub
cmpsl
loop
xchg
outsl
popa
dec
stc
xchg
repnz
jle
subl
xchg
movsb
lock
out
ret
jne
inc
push
popf
add
fmul
stos
scas
push
jo
pop
adcl
pop
repnz
mov
push
mov
sarl
in
loop
fldt
jmp
lock
sub
sub
jae
jmp
aam
fs
fcoms
jb
xlat
rsm
mov
push
in
imul
pop
push
addr16
mov
add
mov
jmp
pushf
dec
dec
mov
push
orl
fldenv
add
push
nop
add
lods
call
sbb
cmpsb
adc
cltd
cli
es
mov
icebp
popf
push
scas
faddl
ret
loopne
lods
xor
out
insb
mov
pop
scas
pusha
dec
mov
ss
adcb
insl
push
jne
pop
test
or
cli
mov
sub
and
mov
xor
xchg
push
xor
push
fcomip
mov
cmp
out
jne
out
push
jg
lds
cmpsb
add
les
mov
test
pop
pop
mov
int3
in
test
sbb
loope
push
push
enter
cmp
add
pop
aaa
jmp
push
enter
pop
jbe
mov
in
fwait
mov
test
pop
loop
cmpsb
mov
imul
fidivrs
mov
pop
in
outsb
xchg
ficoml
push
loop
sbb
cmp
loope
lds
pop
lahf
imul
repz
jnp
cmpb
mov
movsl
out
loop
stc
jle
cmp
and
sahf
xor
xor
cmp
fcmove
out
out
int3
jno
divb
in
sub
pop
or
sti
mov
push
jnp
or
loopne
dec
scas
out
lea
sub
cmp
dec
fnstenv
push
stos
dec
dec
push
scas
loope
stos
push
rcl
scas
inc
sub
sbb
xchg
mov
rcl
cld
xchg
xchg
jl
icebp
testb
inc
mov
jp
sahf
cld
movsb
ret
sbb
cwtl
push
scas
jns
sti
sahf
leave
gs
lea
in
stc
or
adc
lcall
dec
pop
dec
inc
mov
mov
mov
repnz
movsl
cmp
mov
out
cmp
test
jae
inc
xor
or
leave
mov
jmp
mov
xchg
mov
ret
jno
gs
mov
xor
xchg
sub
xchg
imul
call
addb
cwtl
mov
mov
xchg
xchg
dec
test
popf
std
stos
sub
testl
shl
add
mov
fmulp
test
push
mov
push
je
fsubs
addl
stc
movsl
sbb
das
xchg
call
xor
sub
mov
xor
fs
push
cltd
or
pop
cmp
mov
test
test
rcl
jae
mov
ret
pop
adc
out
negl
push
inc
push
outsb
decb
adc
out
leave
lea
lods
adc
scas
push
int3
cmp
call
and
push
or
loop
mov
inc
mov
imul
sub
aam
dec
jmp
scas
stc
aas
inc
adc
scas
and
shrb
add
rcll
jne
lea
hlt
add
inc
mov
jl
xchg
sub
jne
test
pop
cmp
lods
sub
aam
out
xchg
sarb
data16
mov
subb
pop
jne
or
jae
lods
dec
into
nop
cmp
add
or
push
popf
dec
int3
push
xchg
push
int3
xchg
sbb
loope
adc
xchg
out
xchg
call
push
inc
cmpsb
aad
xchg
lret
int
xlat
push
lock
fstpl
push
fwait
sub
push
movsl
das
xchg
cmp
mov
cmp
inc
iret
adc
ljmp
or
and
jb
push
and
mov
sbb
popa
testl
jle,pt
or
inc
sub
sbbb
sbb
xchg
sbb
cmp
cmp
jne
dec
aam
in
ss
cmp
cmp
sarb
lea
daa
or
cmp
sub
mov
stos
pop
xchg
mov
fisubl
stc
lea
mov
mov
push
jns
das
or
or
sbb
dec
sarl
testb
dec
xchg
imul
mov
test
and
fs
dec
aad
sbb
push
test
movsl
mov
mov
aaa
gs
faddp
lcall
dec
sbb
pusha
mov
jge
imul
int3
out
in
jno
repz
mov
pop
mov
lods
adc
repnz
fld
lea
xor
hlt
pop
or
pop
jl
mov
aad
mov
dec
popa
cmp
and
dec
fwait
rcr
sub
mov
mov
loope
sub
nop
and
lahf
into
adc
add
jle
xor
clc
clc
mov
fisubs
test
leave
push
in
call
dec
popf
pop
in
xchg
js
out
fwait
push
jle
add
sbb
cwtl
fwait
pop
pop
jecxz
loopne
pop
mov
add
adc
insb
jle
mov
mov
jne
sub
ficoml
cwtl
pop
push
loop
add
cmp
sti
pop
test
dec
push
lahf
scas
sbb
jmp
adc
sbb
jmp
sub
call
mov
addr16
mov
inc
fildl
push
xchg
mov
arpl
fcompp
dec
into
stc
jne
push
pop
xor
sub
pop
rcrl
gs
adc
dec
jnp
loope
xor
ret
out
mov
push
rcr
pop
inc
in
sbb
test
fsubrs
out
xchg
cmp
scas
jnp
or
in
ret
push
jge
aas
xchg
bnd
orb
aaa
cmpsl
int3
ljmp
xchg
pop
out
outsb
cs
and
mov
inc
push
repz
mov
mov
mov
dec
cld
xor
test
dec
rorl
dec
mov
stc
fnsave
shll
xchg
lret
mov
lea
shll
lcall
sti
fldcw
mov
xor
jae
lret
jo
and
aad
jns
fs
mov
sbb
and
jns
std
jg,pn
add
cmc
std
mov
std
scas
push
inc
aam
loope
xchg
mov
add
pop
xchg
std
sbb
xchg
mov
cltd
cmp
inc
lods
push
cs
xor
adc
jp
and
inc
movsb
inc
sub
enter
je
ret
mov
cmp
ret
cmpsl
jecxz
fimull
mov
xchg
mov
dec
jb
loop
push
lea
jo
inc
xchg
mov
add
and
ds
outsb
mov
xor
xchg
sbb
es
mov
fsubl
test
cmp
sbb
dec
inc
rolb
ficoml
push
push
les
push
sbb
loope
lcall
xchg
xlat
or
adc
sbb
xchg
divl
mov
and
jb
gs
push
add
leave
or
jo
xor
adc
pop
fisubrl
sahf
popf
movsl
fmuls
lock
sub
push
int3
push
into
push
lahf
pop
pop
iret
je
pusha
jmp
mov
xlat
call
pop
stos
clc
xor
mov
mov
cmp
mov
lock
lret
fwait
adc
negl
stc
movsl
push
out
imul
xlat
rclb
sarl
in
fldcw
and
int
jle
je
dec
popa
and
daa
addr16
sub
repnz
xor
add
aam
dec
sub
inc
mov
enter
dec
js
push
pop
mov
mov
mov
leave
pop
adc
fldcw
mov
xlat
or
jle
fstps
and
adc
pop
sti
pop
push
iret
mov
inc
nop
cld
and
dec
mov
push
add
fldt
outsb
xor
imul
insl
subb
cmp
sti
test
je
xor
movsl
xorb
adc
aas
pop
jge
vshufps
roll
shll
add
mov
inc
stos
jne
loop
ret
insl
iret
subb
out
xor
bound
loope
sub
jne
xchg
call
xchg
xchg
pusha
sbb
pushl
xchg
xor
pop
into
add
mov
fdivrl
and
jecxz
leave
cmp
mov
ja
icebp
int3
pop
lds
mov
cmc
fisttps
bound
xor
and
movsl
mov
aam
jae
insb
cmp
and
out
fsubrp
inc
xchg
cmp
jns
sub
xor
dec
lret
push
loopne
xor
jl
and
mov
inc
pop
call
lock
jae
out
push
into
data16
mov
test
mov
mov
aam
fstl
adc
fisubrs
mov
lods
and
pop
out
jp
in
jb
or
inc
push
arpl
loop
xchg
push
fs
xchg
and
js
jp
sbb
add
test
sbb
inc
call
aaa
loope
jl
cmp
add
push
lret
adc
mov
popf
mov
hlt
ljmp
loopne
pop
cmp
xor
aad
inc
mov
repnz
shr
jns
out
add
stos
daa
xor
aas
movsl
mov
gs
pop
pop
imul
pop
sub
cli
mov
nop
add
out
pop
jmp
mov
loope
sbb
or
adc
scas
push
scas
cmp
fidivrl
adc
cltd
and
cmp
dec
jp
add
add
or
dec
push
push
stc
mov
int3
out
or
mov
pop
add
sub
jne
daa
or
push
adc
outsb
jbe
rcrb
jae
nop
mov
sahf
ss
addr16
xor
push
xor
sbb
dec
std
cmp
jae
xlat
rep
adc
dec
outsl
push
lea
push
clc
xor
dec
xlat
insb
xorb
push
and
cmc
or
adc
push
adc
push
mov
outsl
unpcklps
xor
scas
pop
cmc
testb
or
xchg
adc
and
dec
sahf
mov
cmovns
or
xor
call
loopne
fcoml
inc
xchg
pushf
mov
into
movsl
inc
mov
jb
lcall
aad
inc
cmp
pushf
rolb
cmp
sbb
sub
xorb
sahf
push
push
cwtl
mov
test
notl
gs
mov
int
mov
jns
mov
dec
dec
mov
or
dec
sbb
hlt
push
stos
out
outsl
jmp
scas
sub
pop
mov
lret
sbb
inc
inc
and
mov
in
xchg
popf
sub
mov
sub
shll
in
dec
leave
lds
add
sbb
or
movsb
lods
sub
cs
mov
sbb
cld
xor
or
sbb
popf
outsb
xorl
pop
sbb
xchg
mov
gs
dec
psadbw
add
fnstcw
jecxz
xor
stc
mov
add
mov
in
fwait
mov
imul
inc
pminsw
mov
mov
jp
mov
negb
jns
inc
sub
movsb
mov
cmpsl
mov
mov
addr16
jb
jg
add
ficoms
xchg
adc
stos
xchg
adc
pop
ds
xchg
sub
dec
ret
popf
mov
jnp
pushf
and
push
sbb
add
shr
cmp
push
push
pop
adc
cli
cmp
ja
outsl
icebp
bound
xor
fcmovnb
les
decb
dec
xlat
push
call
mov
aad
mov
ret
cmp
cmpsl
addr16
cld
lods
push
addr16
cli
sti
pop
mov
jge
popa
sbb
jmp
pop
jp
xchg
jg
loopne
repnz
pop
addr16
xchg
ret
xchg
push
or
dec
xor
cli
fbstp
lret
ja
pop
add
out
in
mov
test
mov
xor
daa
mov
pushf
out
lods
mov
scas
popf
das
js
or
ds
inc
adc
ret
shlb
clc
insb
xchg
aam
mov
adc
jne
jl
lcall
jbe
sub
add
cmc
sub
mov
stc
mov
rorb
jns
lock
andl
outsl
adc
and
loope
bound
out
dec
sbb
out
orb
inc
push
and
clc
incb
in
ret
es
jmp
and
repnz
arpl
lret
call
or
cli
pop
dec
std
pop
jns
xchg
imul
cmp
or
mov
or
or
hlt
inc
mov
sub
push
dec
lret
stc
clc
popf
bound
lcall
mov
xchg
rcll
stos
sub
stos
loope
mov
pop
ja
insb
outsl
loop
dec
insb
mov
push
or
jo
mov
mov
lcall
pop
adc
lods
xchg
push
cmp
adcb
add
cli
ljmp
xchg
aam
and
out
sti
jb
jge
dec
cmp
out
in
xor
sbbb
mov
in
adc
inc
or
cmp
nop
pop
dec
insb
add
sahf
roll
popf
ja
cmpsl
xor
xchg
dec
sub
in
cltd
xor
shll
dec
and
xchg
pop
rol
pop
iret
inc
les
stos
ret
ret
xor
jae
cmc
into
out
xor
xor
scas
cmc
mov
roll
adc
push
iret
ret
push
mov
push
cli
loop
inc
out
or
lcall
rclb
adc
jl
inc
rorb
pop
sbb
jl
dec
push
repz
notl
rclb
jno
aaa
lock
dec
test
dec
aad
lea
mov
push
aaa
mov
adc
jmp
pop
sbbl
fstl
adc
lods
mov
inc
add
mov
mov
insb
std
sub
jp
enter
mov
and
mov
and
sarl
int
mov
aaa
adc
push
push
fs
mov
dec
lods
cmpb
lods
cmp
stos
lcall
iret
addr16
subb
or
sub
repz
ljmp
add
push
in
sbbb
leave
and
movsl
nop
push
daa
mov
outsl
jle
sbb
mov
inc
pop
ret
pusha
xor
sbb
gs
outsb
test
mov
add
ja
ss
lea
xchg
imul
ds
jl
jmp
lcall
es
or
je
mov
mov
jnp
pop
std
pop
sbbl
sbb
xchg
sub
add
ret
pop
xor
xlat
in
or
jne
orb
pop
push
xchg
xchg
shl
or
cmp
mov
add
sub
mov
bound
inc
ds
pop
pop
add
aas
cmc
in
push
adc
cmp
and
mov
add
call
outsb
xchg
dec
sub
decl
pop
mov
mov
pop
cmpsb
out
cltd
pop
push
xchg
push
je
pop
subl
adc
cmp
sbbl
mov
fnstcw
fidivl
xor
mov
arpl
mov
leave
pop
pop
sub
shr
jmp
imul
cmpsb
pop
outsb
inc
insl
dec
ja
lret
pop
rolb
repz
mov
orps
xchg
sub
adc
push
js
dec
xor
clc
push
jb
mov
mov
testw
jle
and
mov
xchg
cld
stos
lods
fstps
push
and
and
or
jle
xor
xchg
sbb
sub
sbb
idivl
decl
inc
pop
add
dec
xlat
pop
sbb
add
lret
lods
dec
pusha
pop
jg
ret
xlat
sub
scas
mov
test
dec
sti
sti
mov
add
pusha
or
outsl
inc
or
push
int3
push
cmp
in
popa
dec
push
inc
push
xchg
xor
addr16
jae,pt
aad
call
add
ret
stos
gs
adc
jns
adc
inc
stos
adc
pushf
xchg
mov
xchg
adc
je
and
add
jmp
and
mov
inc
mov
adc
enter
jecxz
jb
sbb
mov
cmp
or
or
and
ret
or
rolb
out
sub
ja
push
pusha
test
shlb
push
insl
js
ds
in
sti
arpl
add
mov
imul
push
in
and
xchg
clc
nop
icebp
jl
mov
xor
fucomi
sbb
ja
fidivl
and
inc
mov
xor
sub
fisttpll
sbb
pop
dec
sub
jbe
jg
movl
nop
jg
sbb
or
push
mov
xchg
stos
jb
pop
lret
jle
xlat
cmp
fldcw
clc
sbb
or
sbb
repz
mov
and
pop
js
pop
outsb
scas
shrb
lret
sahf
insl
cmp
lcall
push
dec
je
in
jecxz
test
inc
mov
pop
xchg
or
xchg
outsb
push
movsl
insb
adc
lods
push
adc
push
mov
jl
add
add
sbbb
test
cmpsb
adc
out
mov
mov
fimull
pop
js
mov
mov
out
idivb
mov
outsl
aaa
cmp
xchg
mov
mov
lret
push
lock
mov
xchg
sahf
jp
outsb
dec
sti
or
xlat
aaa
pop
push
inc
mov
test
xchg
sti
ljmp
cmp
call
xchg
andl
lcall
repnz
push
dec
and
inc
add
data16
mov
cmp
pop
mov
mov
sbb
cwtl
or
clc
jno
adc
or
insl
sar
mov
dec
mov
mov
mov
std
push
sbb
das
dec
pop
push
icebp
add
loopne
xchg
adc
xor
push
push
jle
sti
bound
dec
in
test
xchg
xor
inc
inc
test
arpl
js
jns
iret
mov
mov
int
sahf
daa
inc
scas
bound
subl
cmpsb
outsl
sar
data16
cli
ljmp
add
ret
cmc
sub
lock
inc
jo
hlt
adc
clc
inc
xchg
stos
cld
and
inc
imul
loopne
push
ljmp
jbe
mul
add
leave
jnp
pop
add
jbe
lock
cmp
das
popf
sub
aas
daa
test
lret
push
cltd
jb
cmpsl
xor
and
pop
andb
call
int
cmp
pop
lret
in
pop
xchg
or
xor
stos
sub
mov
inc
or
lret
sbb
mov
pop
ror
cltd
repnz
cmp
cmp
mov
mov
nop
and
stos
or
and
test
sarb
pushf
ss
ss
mov
test
mov
iret
xor
xor
mov
mov
arpl
push
cltd
imul
sub
xchg
cwtl
mov
jo
jnp
xchg
ss
and
push
pop
xor
imul
cld
mov
xchg
push
push
xchg
pop
xchg
jo
inc
lods
insb
mov
arpl
push
or
xor
arpl
push
adc
idivl
cmp
dec
aaa
add
mov
mov
xchg
mov
pop
sbb
inc
push
dec
mov
cmpsl
pop
adc
dec
js
add
icebp
fists
lret
mov
and
sbb
cld
mov
inc
shll
adc
daa
sub
and
js
mov
push
jo
cwtl
in
test
sbb
add
insb
lcall
xchg
ja
cltd
and
cwtl
mov
stos
lds
mov
mov
rorl
cmpsb
and
mov
adc
mov
test
mov
out
xchg
repnz
cmp
es
in
cmpsl
inc
test
aad
inc
gs
mov
decl
stc
outsb
stc
dec
fisubrl
aas
jb
lds
dec
pop
lret
mov
xor
cmpsl
arpl
ss
push
inc
adc
gs
jecxz
in
in
je
cmp
lret
inc
jno
jge
pop
cmpsl
mov
dec
mov
xchg
icebp
xchg
imul
xchg
sub
dec
cmpsl
ret
add
push
pop
sbb
pop
mov
inc
in
and
aad
sub
rcrl
adc
fadds
and
dec
inc
subb
and
enter
repnz
cmc
push
mov
dec
jno
shll
lds
cmp
mov
or
cli
arpl
push
mov
bound
cmp
inc
xchg
cmc
pop
loopne
sub
fstpt
iret
mov
adc
jp
rcr
cwtl
mov
scas
adc
inc
add
in
jb
mov
add
lods
loope
xchg
lods
cwtl
rcrl
out
lret
push
inc
push
inc
mov
mov
add
test
and
or
inc
and
xchg
xchg
jge
push
pop
mov
pusha
xor
and
clc
jo
xchg
scas
xchg
pop
push
in
mov
jmp
roll
fucomp
add
sub
sbb
test
inc
pop
pop
xchg
std
lods
aas
faddl
xchg
or
dec
fdivl
xor
dec
cmp
sti
testl
jnp
mov
sub
dec
push
fcomps
mov
out
dec
sahf
xchg
jl
pushf
icebp
rorb
mov
sub
and
cmp
movsl
sahf
dec
xchg
xchg
add
fcomps
insb
mov
adc
roll
stos
test
sbb
jp
movsb
sarl
jns
push
sbb
loop
dec
add
test
mov
ja
xor
scas
pop
insl
mov
jae
inc
sbb
xorl
fbld
ss
jl
cmc
fnstcw
cmp
dec
stc
lret
leave
xchg
gs
cmp
clc
movsbl
test
dec
xor
repz
out
mov
xor
das
pop
cmc
sbb
sbb
push
sub
cmc
arpl
fs
cs
dec
filds
cmp
mov
ds
add
mov
mov
scas
mov
jmp
push
jmp
fdivs
push
and
inc
sbb
lret
add
cli
in
add
int3
xchg
cmp
ret
repz
push
es
adc
ds
pop
inc
iret
xchg
cmp
sahf
leave
add
shll
stos
ljmp
int
cltd
mov
inc
and
add
cmp
jb
fwait
ljmp
hlt
jb
inc
aad
leave
inc
push
lods
int
mov
fwait
inc
repnz
sbbb
movb
sub
push
popf
movl
inc
lock
jg
sbb
sbb
mov
leave
adc
and
in
mov
and
enter
sbb
fldenv
gs
std
xor
loopne
outsl
hlt
pop
sub
mov
and
jno
add
in
cmpsl
dec
or
push
cmp
or
push
inc
and
or
dec
dec
enter
jns
mov
call
les
pop
movsl
jmp
lds
mov
mov
or
in
in
xchg
push
mov
jge
hlt
pop
add
jnp
cmp
je
jp
jbe
rclb
jae
xchg
out
mov
lods
es
cli
jns
or
or
hlt
fcomps
jecxz
and
ror
jmp
rcll
push
inc
push
daa
shrl
test
movsl
scas
das
add
sbb
cmpsl
jno
cmpsb
pop
test
and
and
mov
stc
and
adc
call
rolb
mov
ja
subb
and
es
jge
mov
in
int
scas
aas
add
dec
jo
or
mov
pop
and
je
mov
daa
shl
pop
sub
enter
sub
mov
sbb
jb
stc
mov
sub
out
push
xor
sub
fcompl
pop
popa
pop
in
sbbb
arpl
xor
add
adc
out
cli
cltd
and
pop
sbbb
add
sbb
pop
jmp
dec
adc
repnz
xor
fstp
add
push
enter
push
repnz
test
cltd
es
or
mov
lods
movsl
jo
mov
mov
ljmp
cmp
jns
movsl
pop
xor
inc
shrb
jnp
sub
enter
jbe
mov
jbe
mov
cld
xchg
sbb
jb
dec
inc
mov
adc
jno
aad
cltd
psrld
adc
cli
fldenv
pop
cli
rclb
and
out
out
mov
pop
cmp
das
jl
jo
js
sub
sub
xor
mov
add
xlat
inc
jns
lar
gs
fcomp
nop
aam
cmpsl
jmp
or
fidivs
int3
rcr
shll
enter
mov
jno
mov
pop
xchg
and
mov
sbb
inc
cli
xor
cli
adc
fadds
push
push
aad
mov
sub
cmpsb
push
pop
ret
adc
xchg
jns
ss
push
ficoml
lret
andl
rcll
cmpsl
out
dec
les
movsl
mov
sub
and
int
in
mov
or
jg
xor
stc
sub
out
pushf
sub
les
fisttpll
rcrb
sbb
sbb
sub
or
idivl
xor
add
mov
add
js
pop
sti
dec
pusha
call
int
add
and
shr
hlt
in
icebp
pop
cmpsb
loope
add
mov
in
mov
mov
xchg
into
jmp
fbstp
mov
leave
notb
sub
imul
sbb
dec
mov
jnp
dec
or
test
mov
fidivl
test
xor
inc
sbb
stos
pushf
cmp
mov
jno
ljmp
jmp
imul
movsl
loopne
inc
pop
jle
xchg
or
jle
jnp
lea
je
imul
and
push
incb
mov
pcmpgtw
aas
mov
pop
xlat
out
fists
cmc
lret
imul
cmp
push
sti
add
mov
or
sahf
roll
mov
jns
push
in
or
xchg
pop
sub
jae
mov
add
dec
test
cmpsb
outsb
sub
or
lock
xchg
out
mov
popa
scas
push
inc
clc
shl
in
mov
mov
test
or
divl
cmp
mov
lds
push
stos
and
and
ss
clc
test
lidtl
xchg
mov
icebp
mov
push
cmpsb
loope
xor
and
push
mov
out
adc
mov
pop
pusha
je
out
inc
push
adcb
movsl
pop
dec
mov
dec
imul
jbe
std
icebp
ret
jb
push
dec
arpl
cwtl
xor
pop
pop
or
inc
pop
sahf
dec
fsubl
pop
lret
ds
cmp
aaa
loopne
dec
bnd
sub
jle
cmpsl
leave
scas
lcall
lods
pusha
outsb
prefetcht0
inc
jecxz
jne
ret
mov
fildll
stc
push
jnp
ljmp
not
pop
and
aad
mov
aad
mov
nop
jge
movsl
aam
lret
popf
aas
cmp
scas
mov
inc
mov
loope
xchg
cld
rol
ss
cld
fs
add
fsubl
mov
push
ret
insb
push
mov
scas
loope
in
clc
inc
cmp
divl
outsb
mov
ss
adc
out
jae
jp
test
fwait
cmpsb
pusha
ret
int3
cmp
rorl
jno
enter
cmc
push
addr16
inc
or
movsb
mov
int
jae
in
nop
mov
outsb
mov
and
and
popa
lcall
lret
inc
xor
mov
sahf
gs
inc
enter
inc
sub
dec
inc
mov
or
xchg
outsl
cltd
int3
movsb
jne
jbe
arpl
mov
out
sahf
lahf
and
stos
push
popa
clc
dec
or
in
icebp
cwtl
test
fidivs
cmp
icebp
jo
shlb
pushf
pop
cmp
mov
xor
aas
shlb
mov
xchg
fwait
xchg
mov
addb
enter
cmp
mov
cmp
xor
xchg
out
push
clc
fs
mov
lret
test
inc
aam
ljmp
pop
pop
dec
pop
pop
xchg
cld
cmp
dec
lret
push
lahf
xchg
rcrl
and
fnstsw
ja
adc
dec
pop
pusha
mov
mov
jge
and
iret
mov
es
pop
scas
mov
jnp
mov
jae
js
mov
mov
cmp
xchg
test
data16
xchg
pushf
sbb
xchg
mov
daa
daa
aam
shlb
and
sub
jo
jns
incb
lahf
or
jecxz
cmp
or
cmp
inc
les
push
out
push
mov
popf
jae
and
iret
and
mov
mov
in
inc
test
mov
inc
add
xor
in
add
fcmove
je
lods
pop
ret
and
jge
enter
xor
dec
xor
mov
mov
xchg
sbb
rolb
jl
dec
fwait
add
sti
mov
inc
fimull
jae
pop
mov
jne
xor
sub
icebp
insl
loop
fsub
pushf
cmpsb
scas
fadds
adc
xlat
xchg
lret
mov
repz
sbb
inc
push
mov
or
in
dec
ss
in
mov
and
je
aad
xlat
scas
mov
mov
xor
ja
inc
sarl
test
mov
pop
sub
negb
in
scas
stc
push
or
cmp
cmp
hlt
push
out
sbb
pop
push
cwtl
and
dec
adc
test
popa
mov
inc
xlat
cs
jb
sti
dec
push
pop
clc
cs
enter
cmp
add
aam
in
jl
sarl
ja
cld
test
mov
fs
sub
cmp
lret
bound
ds
xchg
in
pushf
mov
push
sub
sub
inc
imul
mov
jnp
arpl
test
and
xchg
inc
and
mov
mov
mov
fwait
pop
dec
test
mov
fwait
xchg
rcrb
cld
les
xchg
pop
xchg
xor
scas
jbe
dec
or
sti
xchg
xchg
inc
xchg
cmp
cmpsb
pop
popf
pop
jb
rcrl
test
mov
lds
mov
adc
test
cltd
xchg
push
inc
cmc
icebp
testb
inc
jo
jge
sbb
jb
pop
mov
add
outsl
and
lret
mov
sbb
loope
addb
rcll
adc
ljmp
ja
call
add
and
insl
pop
or
adc
jp
cwtl
aad
mov
les
inc
adc
ja
out
popf
mov
pop
dec
mov
fwait
jne
add
pop
ja
mul
cmpsl
add
mov
sti
sbb
push
rorl
clc
ljmp
xor
mov
jp
or
cmc
inc
arpl
mov
frstor
lret
fcoml
mov
idivl
pop
add
fst
xor
mov
jnp
in
cmp
pop
adc
mov
pop
adc
sub
pop
jp
ret
xor
mov
push
ds
rcll
scas
dec
add
ret
lock
jnp
sbb
cmc
push
pusha
in
and
xor
cmp
mov
cmp
sub
cmpsl
xchg
decb
sbb
or
into
outsb
stos
loope
lods
sub
lahf
inc
cmpsb
jp
in
ret
xchg
repnz
sub
jge
addr16
jge
xchg
scas
jle
outsl
pop
pop
aam
cmp
cmp
jbe
mov
cmova
bnd
hlt
pop
test
jl
adc
dec
cmpsl
cltd
inc
into
add
fsubp
std
sahf
fs
lods
mov
mov
pop
lret
mov
sti
dec
imul
in
mov
mov
sbb
push
popf
mov
cs
push
push
cmp
add
fisubrs
pop
pop
xchg
fsts
repnz
sub
fcmovbe
out
xchg
jo
push
jg
sar
mov
sbb
xor
ljmp
cmp
aam
inc
mov
xchg
cmp
pushf
mov
pop
cmp
aaa
sbb
or
mov
lock
cmpl
shl
sbb
xchg
sbb
outsb
scas
sar
sub
pop
mov
sar
loope
push
inc
pop
outsb
bound
and
fsubrs
add
sub
movsb
std
test
dec
testl
icebp
in
sbb
cmpl
loop
mov
jge
jnp
xor
mov
dec
fstpl
pop
aam
repnz
pop
jne
jge
shl
out
mov
in
mov
cmp
add
scas
inc
adc
cmc
mov
fs
push
out
mov
sub
ret
mov
fmuls
xchg
fldt
pop
andl
sbb
sbb
sub
inc
or
fists
addr16
in
inc
push
jbe
lds
or
fdivrl
nop
fildl
push
movsb
out
mov
shlb
adc
out
les
imul
mov
sahf
pop
data16
mov
mov
push
sbb
insl
pop
jmp
imul
mov
xchg
dec
leave
jmp
sar
aad
push
int
ret
icebp
mov
mov
fisubs
outsl
lret
mov
xchg
adc
sub
add
push
fidivrl
inc
mov
pop
adc
rcrl
pop
jl
mov
sub
mov
xor
push
xlat
cmpsb
pop
test
shrl
dec
sub
add
inc
lods
mov
push
es
pop
mov
cmpb
clc
addr16
out
sbb
cmp
jnp
sbb
mov
xchg
dec
lds
ret
jbe
mov
std
jge
int3
mov
stc
insb
mov
sub
mov
scas
mov
out
xor
cli
in
lcall
xchg
add
inc
xchg
add
shll
sub
dec
jl
nop
fcompl
push
movsl
sbb
add
adc
jmp
pop
pop
push
mov
or
out
in
push
lock
jg
inc
jmp
hlt
imul
loopne
cmp
mov
mov
sbb
mov
xchg
iret
xchg
pusha
jno
shlb
roll
xor
xacquire
mov
dec
test
add
fstp
xchg
mov
push
arpl
jg
dec
pop
stos
aad
mov
xlat
xchg
fs
mov
ja
cmc
add
mov
in
jbe
iret
mov
out
xor
das
jle
pop
jne
or
aad
sbb
jo
mov
mov
dec
int
sti
push
jns
aad
cmp
fldcw
rcll
arpl
mov
in
and
mov
loope
xchg
adc
mov
push
sarl
cld
inc
fidivs
mov
mov
sub
and
or
inc
imul
jbe
cmp
dec
xchg
lret
in
and
add
xchg
arpl
repnz
pop
subb
sub
jecxz
mov
ljmp
in
mov
mov
mov
inc
repnz
fcomp
or
mov
call
cmp
lock
sbb
icebp
mov
cli
std
add
incl
jb
scas
xchg
mov
ljmp
add
cwtl
push
stc
cmp
roll
cld
mov
xor
xor
inc
cli
lret
test
xor
jge
punpcklbw
icebp
out
dec
adc
add
or
aad
pushf
sbbl
pop
pop
and
daa
mov
hlt
adc
ret
adc
divb
jne
andb
je
add
push
dec
insb
jnp
mov
frstor
movsl
outsb
push
pop
inc
adc
ret
pop
mov
and
pop
fcoml
sahf
xor
pop
scas
loope
adc
stos
out
hlt
pop
fnstenv
imul
mov
jnp
incl
mov
adc
xchg
pop
cmpsb
ljmp
cmp
pop
rolb
cmp
movsb
inc
mov
and
jb
dec
imul
imul
mov
lea
jmp
scas
push
andb
push
repz
sbb
mov
shrl
dec
and
sbb
xchg
nop
adc
adc
xor
popa
jmp
nop
jge
pusha
pop
inc
sar
aas
outsb
push
mulps
dec
pushf
in
xchg
lods
pop
sbb
mov
and
rol
cwtl
jne
loop
xchg
stos
test
cs
xchg
repz
inc
inc
jno
xorl
sbb
aaa
or
jge
andb
in
je
xor
jnp
sub
in
je
mov
rcll
xor
add
sbb
js
adc
pop
xor
or
leave
insl
aam
sub
mov
out
hlt
push
jmp
xor
iret
mov
or
addr16
mov
mov
sarl
pop
pop
addb
and
cmp
jnp
xchg
shrl
mulb
add
scas
inc
push
lods
cmc
mov
sbb
mov
xchg
or
adcb
and
adc
cli
adc
cwtl
sub
repnz
mov
xchg
adc
mov
test
cmp
dec
hlt
adc
pop
mov
cmpsb
add
movb
jbe
add
stc
xchg
sbb
ror
cmp
aad
data16
cmp
pop
push
jo
mov
mov
idiv
sbbl
sub
push
enter
dec
daa
jg
mov
test
jb
add
inc
xchg
leave
pop
sbb
mov
adc
adc
and
mov
out
sbbl
movsl
jne
subb
shl
cmpl
mov
hlt
push
cli
lods
call
daa
std
pop
sbb
jo
arpl
nop
xor
inc
sets
fimull
push
xchg
hlt
cmpsb
insl
cs
je
pop
js
mov
int3
in
jae
pop
ds
out
and
mov
aam
ret
repz
cld
cmp
test
xchg
mov
and
sbb
shlb
mov
in
inc
insb
sahf
mov
fwait
es
jecxz
lock
jp
sbb
scas
in
mov
sub
aam
pop
and
mov
jne
jbe
sub
jbe
sbb
in
call
int
jns
das
ret
sahf
out
ret
sahf
mov
inc
xchg
lahf
repz
jmp
jae
mov
repnz
pop
pop
shrb
insb
push
cld
lods
pop
xchg
cmpsb
ret
aaa
mov
pop
cli
push
cltd
mov
rcll
mov
loope
std
mov
icebp
out
adc
push
mov
fldl
test
xchg
xchg
in
push
mov
jo
xlat
rcrb
sub
lods
pop
xor
loopne
or
sbb
xchg
add
add
and
pop
dec
mov
sbb
and
xlat
push
stc
dec
push
jae
sub
imul
mov
ret
cmp
dec
lret
lods
mov
and
mov
push
repnz
jmp
movsl
dec
lahf
scas
push
imul
and
cld
sbb
out
adc
in
inc
pop
cld
and
adc
inc
dec
arpl
aas
sahf
inc
mov
cmp
shrb
cmpl
call
sbb
adc
stc
pop
call
inc
xchg
roll
jp
pop
ret
push
loope
inc
test
dec
jb
mov
cmp
insl
mov
aas
stos
js
xor
int3
loope
dec
sub
pop
cmpsb
cmpsb
jmp
push
xchg
stos
int
idivb
cmpsb
cmp
push
sbb
mov
pop
push
dec
sub
or
stos
adc
xor
pop
imul
cmc
addr16
imul
in
inc
les
hlt
sti
jmp
push
and
mov
pop
add
and
xlat
bound
dec
negb
stos
mov
in
data16
lods
fdivrp
rcrb
test
and
in
adc
or
cs
enter
adc
sub
ficomps
mov
sub
xchg
cmpsl
cmpsb
jl
pushf
xchg
cmp
test
cltd
jg
cmc
cmc
jecxz
xchg
sahf
mov
dec
pop
push
cmp
lea
sbb
and
mov
add
dec
insl
shlb
jae
fidivl
sub
icebp
int
sahf
stc
and
lods
jge
jne
add
call
mov
andb
mov
rcrl
add
mov
ret
sbb
sbb
lock
jno
pop
xorb
cmpsb
out
dec
and
test
aas
jns
add
data16
aas
push
sahf
push
icebp
pop
dec
or
out
push
les
jmp
cmc
and
std
sub
mov
test
lcall
shll
pop
mov
ljmp
fiaddl
inc
cld
enter
rolb
jp
xchg
push
dec
mov
mov
xor
or
daa
pop
push
lret
xchg
lahf
cmpsl
in
xlat
dec
mov
imul
xchg
xor
push
push
mov
mov
add
sub
xor
jne
ljmp
mov
cld
int3
cmpsl
dec
push
lcall
dec
mov
dec
movsl
int3
dec
inc
or
int
sub
or
adc
in
push
sbb
jns
mov
les
shrl
cld
sti
dec
lret
fnstcw
push
shlb
add
mov
xlat
orb
fidivrl
adc
xchg
sub
cld
mov
push
mov
orl
mov
mov
add
stos
leave
mov
and
adc
gs
mov
jno
pusha
bound
sbb
adc
subb
lret
and
jl
cmp
repnz
test
mov
in
sub
sbb
insl
mov
repnz
jns
mov
je
out
lcall
jl
add
mov
push
and
popa
sub
mov
subb
sub
bnd
test
add
mov
imul
adc
cmp
mov
mov
add
orl
popf
rcrb
adc
add
inc
loop,pn
scas
push
push
xor
insb
pusha
stc
sub
pop
inc
imul
scas
mov
xchg
in
int
push
mov
inc
fldln2
aad
mov
adc
cmpb
insb
repnz
lcall
push
mov
test
sbb
fldenv
push
jp
mov
outsl
js
rcrb
je
pop
cmpsb
hlt
fldl
ss
sbb
jae
pushf
ds
jle
testl
loope
aad
scas
sarb
push
ror
pop
in
jns
mov
mov
imul
or
popa
xor
dec
mov
insl
mov
lock
psllq
enter
nop
in
xor
push
fstpl
pop
rcrb
or
lcall
mov
or
xchg
pop
dec
cmp
mov
icebp
xor
sub
fwait
mov
cmp
scas
les
lea
cwtl
ja
fldenv
push
lea
outsl
divl
pushf
xor
mov
adc
in
sbb
mov
fisubl
in
in
daa
add
add
imul
mov
aam
inc
jge
int
xor
pop
jmp
cs
mov
fisubrl
and
rcl
xor
clc
shll
sbb
std
ret
sbb
push
int
push
push
jp
mov
notl
mov
xlat
mov
mov
ljmp
dec
cwtl
or
push
ja
jns
popa
cwtl
jecxz
insl
xor
fistpll
clc
aas
out
insl
jne
dec
out
xchg
mov
hlt
adc
dec
mov
sub
jnp
cs
add
fs
scas
decl
fnstsw
jp
fs
test
mov
add
iret
jecxz
repnz
xchg
rcll
insl
ljmp
shlb
cli
js
pop
repz
add
addl
add
scas
repz
push
add
and
and
out
cmp
adc
mov
fbld
cmpsb
xor
inc
cli
inc
cmp
inc
jo
sahf
fisubl
jne
inc
movsb
clc
push
cmc
xchg
hlt
xchg
test
fwait
adc
pop
add
jl
scas
scas
loopne
jl
jecxz
jb
test
jle
mov
jbe
adc
repnz
mov
sarb
lcall
mov
pop
sti
fldenv
lds
loopne
push
scas
xchg
add
hlt
or
cmpsb
xchg
out
push
fcoms
cmp
das
add
cmp
je
jp
stos
pop
add
je
in
push
xor
pop
cwtl
in
mov
adc
adc
out
ljmp
and
hlt
scas
mov
mov
mov
lahf
mov
cmp
mov
push
js
xchg
jmp
mov
fsubr
sub
out
nop
inc
test
aaa
adc
out
push
cmp
push
adc
imul
adc
sbb
push
mov
nop
cmp
jnp
pop
xor
mov
clc
aaa
mov
std
and
jno
mov
ds
push
rclb
dec
xor
jge
rclb
jecxz
xchg
jne
pop
mov
mov
jnp
mov
mov
aas
insb
les
leave
sarb
sub
xchg
mov
sub
in
xchg
mov
loope
adc
push
jge
sbb
lcall
popf
lret
out
or
addb
push
xor
dec
andb
mov
lret
inc
cmpsl
insb
aaa
repz
cs
push
std
cmp
mov
mov
cmp
pop
dec
gs
es
jnp
push
icebp
mov
sbb
push
mov
in
jp
adc
sbbb
std
andl
sub
gs
jecxz
outsb
movsb
or
aad
fcomip
pop
cmp
xor
lahf
stos
push
push
in
imul
dec
pop
jns
pusha
sub
shrl
test
sahf
pop
mov
mov
pop
ss
mov
jmp
cmp
or
cli
adc
das
xchg
in
push
sub
in
aas
sbbb
mov
orb
idivl
mov
mov
mov
flds
sbb
xchg
fisttpll
pop
mov
inc
loop
inc
push
mov
xor
shll
mov
xchg
pop
fsubs
es
mov
cmc
repz
and
mov
jle
lea
cmp
call
pop
mov
leave
add
popa
jno
or
bound
dec
movsl
or
stos
or
push
mov
idivb
cli
jnp
repnz
jmp
pop
test
flds
fdivs
shl
mov
dec
out
in
int3
loop
popl
pop
sub
addr16
xchg
mov
into
mov
loope
sub
push
push
push
and
stos
pop
jno
insb
call
test
fisttpll
es
add
sub
call
out
inc
loopne
popa
testb
in
and
mov
push
pop
push
cmc
or
mov
sbb
pop
popf
mov
sbb
sbb
add
hlt
mov
into
dec
hlt
shrl
jbe
xor
xchg
dec
and
mov
call
add
repnz
fiadds
ss
imul
sub
sbb
cli
cli
mov
das
aad
and
imul
sarb
das
fwait
mov
jp
inc
je
sub
xor
push
pop
imul
jmp
or
call
or
mulb
or
jnp
out
pop
sarl
adc
inc
push
xchg
cmp
outsb
add
divb
hlt
jl
into
sbb
mov
push
test
lds
out
pop
inc
adc
fdivs
outsb
imul
sarb
daa
mov
lods
mov
nop
sahf
xchg
neg
pop
inc
fmulp
xchg
aas
xor
imul
add
and
dec
stc
and
daa
aas
sbb
xchg
mov
outsb
scas
adc
push
fnstenv
fildll
inc
jb
in
out
mov
xchg
mov
out
push
cli
mov
out
aam
pop
fmulp
shlb
les
push
mov
dec
aad
aam
or
jae
xor
call
adc
xor
mov
push
and
mov
call
pop
add
push
jge
loop
and
int
mov
cld
ljmp
xchg
inc
mov
mov
repnz
and
xchg
lock
je
ret
dec
daa
jle
std
jbe
leave
and
fcmovnu
je
nop
or
xchg
and
cwtl
or
fbld
push
lock
in
jl
jb
or
adc
roll
mov
xlat
pop
es
dec
inc
test
adc
les
lock
mov
fs
cmpsl
mov
mov
sub
mov
test
pop
jns
mov
push
shl
imul
popa
and
push
into
jge
jbe
lock
les
mov
cmpsl
cmpb
inc
adc
lods
push
ror
push
mov
stc
imul
out
mov
daa
add
push
int3
adc
mov
stos
sbb
test
leave
dec
outsb
jns
sbb
movsb
mov
or
inc
repz
add
inc
ror
cmp
les
xchg
inc
lret
enter
sbb
inc
inc
into
xor
loope
loop
cmp
loope
call
rclb
cmp
sub
push
mov
lods
es
push
inc
cli
lret
mov
cmpsl
push
sub
popf
mov
fisubrl
pop
lds
insb
mov
aad
test
stos
es
and
dec
jnp
aam
push
nop
pop
dec
lahf
test
mov
test
enter
stos
xchg
data16
pushf
xlat
and
repnz
ret
push
push
inc
dec
add
fistpl
fstpl
mov
pop
sbb
sub
xor
dec
clc
aaa
cmp
cmp
dec
add
cltd
inc
pop
pusha
out
enter
aad
lods
or
fildl
out
push
push
push
add
fisubrs
mov
arpl
loopne
sub
pop
mov
fwait
iret
add
push
mov
adc
cmpsl
ror
call
add
out
clc
dec
add
sub
push
int3
mov
mov
jecxz
fistps
mov
cli
scas
fucomp
nop
daa
pop
loope
aaa
xor
fldt
roll
push
gs
repz
sbbl
int3
stos
cmpsb
xlat
daa
dec
push
rorb
ss
fisubl
or
dec
sub
es
fsts
push
xchg
test
or
cmp
outsb
mov
pop
push
and
nop
scas
lea
push
or
xchg
sarl
mov
loop
loope
int3
cmp
lret
adc
mov
xor
jp
sbb
mov
shrl
ljmp
cltd
sub
fcoml
push
dec
mov
mov
jo
pop
repz
stos
add
mov
iret
andb
mov
mov
roll
pusha
repz
popf
adc
leave
push
daa
inc
shr
js
mov
pop
repz
jae
or
lretw
imul
xchg
pop
pushl
imulb
and
cmp
push
sbb
jmp
adc
adc
test
pop
jl
stos
ret
out
cmp
push
lret
popf
pushf
xchg
pushf
mov
mov
add
xchg
jp
or
mov
scas
jo
push
aad
sarl
pop
xchg
xor
lods
xor
or
andl
mov
call
sbb
cltd
shr
inc
clc
insl
dec
fisubrl
call
in
loopne
hlt
and
leave
xorb
lret
aam
es
mov
lods
xorb
gs
fcoml
mov
sub
cmc
add
rclb
rolb
mov
outsl
adc
pusha
push
fstpt
addb
xor
adc
pop
and
xchg
xchg
repz
xor
popf
gs
jmp
mov
jne
push
mov
xchg
sbb
and
push
mov
sbb
aaa
shr
pop
push
js
loopne
jle
mov
push
bound
cmc
testb
mov
cmp
sbb
clc
insl
int3
xor
sbb
mov
mov
andb
das
push
loop
cmp
mov
jae
hlt
ret
sbb
fnstsw
gs
push
fstpl
das
nop
push
mov
pop
add
scas
clc
push
sub
loope
es
das
push
leave
arpl
aas
push
inc
pusha
stos
imul
ret
notb
mov
fidivs
inc
les
pushf
lahf
testb
fisttpl
ret
and
stc
xchg
xchg
sub
lret
cmp
jl
xor
insb
int3
pop
push
fistpll
mov
xchg
lret
xlat
test
cwtl
adc
ficoml
les
jle
popf
cltd
push
fisubrs
clc
cmp
sti
dec
movsl
lods
repnz
push
nop
mov
nop
adc
cwtl
sub
xchg
and
cmp
shll
lods
dec
adc
and
popa
inc
jnp
jne
jnp
dec
pop
push
jp
test
fnsave
push
mov
gs
inc
dec
jle
xchg
inc
mov
dec
dec
or
jb
push
roll
push
fstp
cmp
jmp
out
xlat
js
push
mov
std
push
out
pushf
loop
out
aad
fcmovnbe
inc
mov
stos
setns
pop
imul
insl
pop
jmp
dec
adc
les
mov
test
mov
and
pop
add
xor
or
shlb
cmp
mov
movsb
xchg
rcll
xor
mov
or
rclb
js
pop
std
and
push
adc
mov
addl
ror
cmp
inc
sbb
jp
das
cmp
push
aad
es
add
push
cmp
dec
jnp
mov
test
sbb
mov
inc
aam
adc
aaa
fld1
push
cmp
dec
or
mov
sti
enter
mov
in
test
cmp
xor
sub
fwait
cmp
sub
lret
cmp
push
lret
mov
add
sub
cli
mov
in
and
cwtl
jmp
xor
jg
jns
mov
ss
pop
jmp
or
orb
clc
mov
lods
push
sub
ret
push
cs
cld
dec
pop
or
mov
jp
ds
ljmp
pushf
sbb
test
cmc
btr
xchg
lock
sbbl
mov
mov
js
out
addb
pop
push
lcall
mov
sarl
out
outsb
cwtl
test
popf
jne
cmpsl
jnp
xchg
mov
adc
loopne
por
js
in
fsubl
push
shlb
or
xor
daa
shll
mov
cld
sbb
arpl
ds
in
es
fsubrp
das
in
mov
repnz
cld
lods
sub
iret
andl
cmpsb
cmp
loopne
enter
inc
mov
pushf
ds
movsl
pushf
jge
cltd
inc
imul
adc
or
mov
daa
xchg
dec
sbb
pop
pop
pop
test
repnz
xchg
in
in
movl
sub
lods
jl
cmpsl
sahf
sub
fnsetpm(287
dec
cmpsl
add
push
adc
into
mov
enter
inc
fstpl
repnz
fldl
sub
fldl
jge
shll
lcall
loop
sub
insb
push
adc
adc
cmp
imul
or
enter
stos
push
inc
or
ss
mov
inc
push
jnp
mov
dec
mov
dec
dec
cld
jnp
jg
sbb
pop
jg
aaa
test
xchg
divb
test
es
pop
and
dec
xor
clc
fisubrl
xor
int
es
cltd
push
scas
adc
or
adc
sbb
adc
xchg
mov
in
gs
in
and
in
mov
mov
lock
jl
mov
xlat
cmp
cwtl
sub
pop
movsb
xchg
and
jbe
pop
out
pop
mov
scas
cltd
pop
outsb
lods
fistps
mov
and
mov
jl
or
lock
std
inc
rolb
pop
aas
mov
cmpsl
lcall
das
add
mov
mov
xchg
hlt
mov
mov
add
xchg
add
shl
repnz
js
pop
jbe
int
addl
xchg
or
insl
fisttpl
cmp
mov
call
out
int
jne
and
and
mov
mov
sarl
scas
imul
push
jl
pop
jle
into
bound
repnz
aaa
cmpsl
push
lods
mov
fs
pop
rcrl
sub
andps
pushf
lahf
inc
pusha
jmp
mov
scas
lahf
scas
sub
push
es
filds
mov
sub
out
inc
stc
mov
imull
sbb
cmp
pop
or
jne
ja
loop
pop
gs
lret
inc
pop
mov
bswap
mov
lds
and
lock
inc
add
and
dec
sti
cmpsb
adc
stos
fmul
xchg
imul
xchg
jbe
push
push
mov
cmc
and
daa
cmp
lcall
xchg
xchg
dec
lret
aad
push
into
insl
xchg
or
sbb
mov
rol
inc
inc
push
push
or
ljmp
fmull
ljmp
sub
cltd
pushf
add
sti
mov
sub
or
nop
cmp
fildll
fistps
mov
inc
jmp
jns
sub
stc
andb
into
inc
fisubl
shll
jb
outsb
jb
inc
mov
xchg
mov
mov
push
jge
lds
dec
repz
sarb
push
fdivl
or
sahf
subl
call
push
xchg
inc
xchg
pop
mov
aas
lods
pop
pop
push
sahf
inc
insb
jo
adc
and
sbb
sub
push
push
sub
jge
inc
inc
inc
pop
mov
inc
lar
lahf
mov
jge
fcomps
push
sbb
ret
ret
mov
hlt
jns
and
add
js
loopne
or
aaa
aad
sbb
and
mov
adc
rcrb
sub
push
test
nop
pop
subl
sub
adc
lea
cwtl
into
lahf
loope
jmp
fimull
and
stc
xor
out
shl
dec
outsl
dec
xor
and
mov
scas
outsb
in
xchg
popa
out
dec
inc
mov
xor
adc
in
adc
bound
jae
mov
dec
vcvtss2si
fistpl
dec
cmc
push
jge
test
cli
imul
and
inc
pushf
scas
mov
pop
mov
add
add
insb
es
sbb
push
dec
ljmp
movl
jb
mov
orb
popa
sbb
dec
fdivs
mov
fcmovnb
push
mov
pop
ret
stos
sub
jo
sub
dec
jle
rcll
aad
pushf
vmovapd
pop
mov
xor
and
and
mov
cmpsl
out
dec
xchg
shrl
adc
xor
test
mov
jmp
jge
jecxz
sbb
outsl
insb
loop
adc
xor
pop
sub
inc
ja
add
lods
mov
sbb
mov
test
jp
es
push
faddp
jae
xorl
mov
int
psraw
cmp
cwtl
push
or
pusha
repnz
shl
sbb
cmp
push
scas
and
mov
pusha
jns
and
popa
sub
pop
xchg
mov
bound
mov
outsb
dec
dec
sbb
or
fcmovbe
repnz
out
outsb
int3
add
adc
push
mov
rorb
fwait
test
loopne,pt
test
adc
push
or
hlt
jo
sub
mov
and
jae
movsb
cmp
ret
add
lds
jmp
insb
shll
ljmp
cmovg
aad
rolb
adc
sub
popl
or
stos
and
sbb
pop
sti
dec
add
mulb
sbb
fdivrs
inc
cld
and
rcrl
sbb
xchg
xchg
repz
aad
adc
sbb
lret
cmp
xchg
xchg
bound
insl
popf
lret
icebp
lret
push
or
mov
and
mov
lods
pop
xchg
fildl
loope
sub
inc
int3
or
lds
inc
data16
stos
lea
dec
adc
fdiv
xchg
loop
dec
pusha
dec
push
push
jmp
and
and
sahf
orb
rcr
xchg
sbb
mov
test
adc
hlt
push
mov
push
aam
lock
insb
jnp
dec
movsb
and
bound
cmp
cmp
or
mov
stc
std
clc
outsl
mov
xor
fistps
lret
ret
loop
ja
hlt
jae
psubsw
jl
scas
stos
addr16
lret
mov
ret
mov
inc
call
dec
sbbb
sbb
cwtl
fs
fsubl
sub
push
cld
stos
aad
mov
mov
lock
jns
fcmovu
sbb
std
repz
mov
cmpsl
push
pop
sub
ret
insl
or
xchg
outsb
repnz
pop
cwtl
xor
popf
push
dec
jg
push
jo
cmc
inc
cmp
fisubrl
addr16
sti
mov
shl
xchg
outsl
mov
in
aam
mov
fwait
mov
call
dec
mov
mov
scas
shr
pushf
clc
lcall
sub
fimull
fcomi
sub
scas
or
sub
fcomps
mov
xor
fwait
in
pop
ljmp
test
iret
nop
lods
inc
mov
mov
jmp
fcoms
fldl
adc
out
dec
lods
xor
push
lods
jb
fdivl
inc
aaa
scas
ja
ja
cmpsl
xchg
ficomps
sti
xor
icebp
leave
sbb
out
dec
dec
or
aam
stos
stos
aas
enter
sub
jae
outsl
inc
push
pop
movsl
icebp
test
xchg
or
jmp
cmp
bnd
data16
xor
mov
rclb
sar
cld
lds
in
in
js
mov
sti
mov
call
cwtl
lahf
and
cmp
sbb
in
movsb
and
mov
sbb
addb
sahf
jnp
inc
aam
cld
mov
sub
popf
sub
sbb
jg
testb
jnp
jp
push
pop
cmp
lret
mov
mov
cmp
mov
pop
add
push
ja
cli
andl
or
out
cwtl
sbb
jne
mov
mov
push
pop
negl
xor
repz
cwtl
sub
jecxz
repnz
mov
ja,pt
notl
lock
mov
jne
inc
jno
mov
cld
pop
test
jb
inc
adcb
pop
inc
stos
cmp
or
pop
int3
adc
xchg
pop
and
imul
jl
outsl
loop
mov
jl
aad
loopne
popf
push
sub
addr16
fidivl
out
pop
shll
or
repnz
fildll
or
push
ss
pusha
fiadds
xor
xor
lds
inc
mov
pop
inc
test
sbb
int3
xchg
xor
pop
cs
jp
insb
jns
push
stc
dec
xorb
jp
inc
imul
and
mov
out
movsl
fwait
rcrb
add
push
aad
or
into
sub
test
dec
ljmp
popf
jns
jge
add
repnz
jge
dec
dec
ror
jbe
adc
pop
sbb
sub
in
and
fdivrl
pop
push
adc
sbb
xor
fmull
dec
iret
shll
push
sub
dec
jge
mov
ss
cmpsl
pop
movsb
add
push
ljmp
push
fstps
mov
or
xchg
popf
pop
sub
pop
cmp
push
std
fimuls
xor
xlat
test
pop
inc
cmp
cmp
sub
push
and
fwait
out
mov
stc
ficoms
xor
mov
aam
les
repnz
ret
leave
jp
xor
jl
pop
es
and
lock
es
subb
lret
sub
push
xor
mov
or
mov
mov
mov
ret
cmp
cwtl
sub
movsb
jle
stos
mov
in
mov
int
jns
xchg
push
out
rcll
sahf
lcall
hlt
pop
cld
cmp
loop
pop
aas
fimull
jbe
pop
outsb
xlat
sub
add
mov
xchg
mov
mov
mov
arpl
mov
add
mov
ja
mov
mov
push
sbb
push
jbe
sub
or
lcall
icebp
je
cld
iret
pop
xchg
mov
and
sbb
sbb
rorb
mov
push
sub
in
or
push
ret
fildl
push
sub
mov
and
es
mov
xchg
cmp
xchg
loope
rorb
test
pusha
stc
pop
sub
xchg
das
inc
ret
fldcw
inc
leave
mov
pop
jg
inc
dec
ss
lods
pop
adc
call
or
push
and
cltd
mov
xorl
and
jecxz
mov
push
or
xor
and
push
test
sub
mov
jle
out
lds
xchg
fcmovne
sahf
jge
lods
jle
out
popa
dec
repz
inc
jb
pushf
aaa
and
jp
or
cmc
and
push
lea
ds
pop
adc
jae
jo
jae
pop
in
jecxz
xchg
inc
loop
xor
jle
lds
pop
inc
xchg
push
sahf
xchg
lods
out
xchg
add
adc
sbb
insl
mov
jb
inc
into
mov
cmp
xchg
jnp
sub
int3
movsb
ljmp
aas
and
jbe
out
test
shrl
and
jmp
lds
int3
push
movsb
sbb
aas
in
pushf
dec
or
sti
popf
xor
lahf
int
add
inc
mov
cmpsl
sbb
xor
pop
mov
scas
sbb
loop
cld
inc
gs
push
dec
negl
xor
mov
lods
xchg
lock
aam
push
xlat
pop
out
and
pop
jnp
mov
ljmp
dec
xchg
pop
shlb
lahf
push
xor
mov
stos
add
xlat
shr
fisubs
inc
xorl
mov
sbb
cwtl
icebp
cmp
adc
scas
jge
js
push
testl
xchg
lock
out
mov
movsb
mov
push
out
cmpsl
fldl
mov
mov
xchg
and
push
in
jge
pop
xchg
adc
in
ret
xor
cmpsl
xor
insb
push
sub
loope
mov
test
outsb
mov
mov
in
orl
or
push
cmp
mov
xor
xor
mov
outsl
mov
cmp
xor
jns
test
jp
push
cmp
xor
mov
xorb
dec
or
xorl
gs
cli
scas
outsl
lret
mov
push
pop
push
xor
ja
rcll
cli
test
jmp
aad
leave
pop
pop
mov
inc
mov
stos
jp
push
push
mov
push
adc
cmpb
pop
xchg
cld
mov
into
and
filds
xor
int3
adcl
mov
inc
mov
sbb
scas
fmull
push
popf
sub
inc
loopne
pop
and
call
adc
mov
xor
mov
mov
in
inc
xchg
sbb
adc
out
iret
imul
sub
and
mov
xchg
and
fld
and
xchg
and
inc
cmc
mov
pop
mov
rcll
jmp
lret
jecxz
sub
repz
mov
hlt
sbb
sub
lds
fwait
adc
mov
es
xchg
sub
int
dec
pop
sarl
adc
icebp
sar
and
sbb
test
lahf
sbb
stc
out
insb
repnz
out
pop
xchg
imul
mov
mov
ret
imul
xchg
insl
push
xor
pop
insb
hlt
and
mov
cmp
daa
std
xor
push
dec
int
mov
stos
mov
dec
pop
xor
xchg
sbb
in
les
lret
pop
icebp
mov
or
pushf
mov
lret
add
xor
mov
imul
scas
mov
test
gs
repnz
mov
scas
stos
stc
jg
push
xchg
jb
leave
push
std
inc
xor
fdivl
xchg
xchg
pop
out
dec
decb
int3
mov
push
mov
pop
adc
shl
imul
sahf
std
dec
mov
movl
test
lods
shrb
fildl
pop
fsts
pop
inc
mov
adc
loope
mov
push
and
int3
pop
mov
stos
idivl
sub
sbb
pushf
push
shll
mov
es
cmc
lds
bound
mov
fcomi
cmp
pop
fldenv
mov
es
shll
es
insb
in
adc
adcb
mov
lods
cmpsl
xchg
xchg
xchg
cmp
aad
and
insb
sub
push
push
jnp
adcl
fucomip
sbb
push
jg
cmp
mov
add
jp
xchg
icebp
inc
enter
loope
sub
aam
cli
mov
pop
cs
add
sahf
idiv
inc
add
pop
lret
fidivrl
push
mov
test
and
cmc
mov
out
jo
loop
xchg
insl
mov
push
adc
xor
lods
cltd
int3
les
cmp
or
or
andl
sbb
add
aad
lret
jo
cmp
out
cmp
insb
add
mov
sub
pop
xor
stos
dec
push
xchg
rolb
sub
cmp
inc
add
jbe
push
push
scas
and
mov
mov
roll
popf
jg
bound
rorl
jle
add
movsb
clc
nop
add
addb
mov
sarb
negb
cld
pop
or
xchg
cmpb
and
inc
cmp
cmp
pop
test
xchg
mov
push
inc
aam
rorb
sbb
sub
insl
ds
andl
mov
int3
push
adcb
sbb
imul
pop
adc
mov
movsl
and
sar
sarl
pop
ret
pop
cmpsl
jmp
rcrb
mov
cs
jecxz
mov
xor
xchg
fldcw
sbb
les
daa
mov
inc
int3
inc
jno
popf
sub
scas
adc
xchg
movsl
xlat
jp
mov
mov
jg
push
and
js
xchg
mov
out
int3
notb
rorl
add
in
adc
mov
sbb
aam
fdivrs
mov
adc
push
dec
fisttpl
sub
sub
ds
jge
imull
ja
pop
outsl
push
xor
xchg
mov
stos
sub
das
std
lock
mov
sub
insl
jne
stos
jae
lods
jbe
scas
pop
andb
fcomps
ja
mov
fsub
hlt
decb
ljmp
cli
add
pushf
insl
jmp
dec
jbe
iret
inc
insl
test
jmp
and
dec
fs
addr16
stos
xor
sbb
lods
mov
add
sbb
scas
xchg
cwtl
and
jae
or
pop
dec
push
mov
mov
lret
mov
ficoms
ret
cltd
fcoms
and
dec
fdiv
add
sarl
jne
adc
push
add
fs
les
ljmp
inc
dec
jne
fwait
mov
xchg
sub
lret
cmp
jg
aaa
pop
lds
rolb
repnz
ds
cmp
adc
and
jno
rcll
fldz
sbb
sbb
lods
int3
xchg
gs
fldcw
mov
aam
cmp
ret
mov
fcomi
std
into
addr16
loop
sbbl
and
dec
popa
jno
pop
test
mov
mov
xchg
shl
sbb
clc
inc
andl
cmpsl
sbb
jmp
and
out
pop
jne
mov
int
sarl
jb
jne
sar
dec
in
hlt
dec
sbb
cltd
cmpsl
notb
outsb
add
out
lret
pop
pop
adc
lds
mov
jbe
mov
imul
mov
dec
cmp
dec
bound
je
sub
mov
push
int3
sbb
xchg
gs
roll
clc
cmp
and
test
nop
pop
jle
push
xchg
out
sub
insb
in
mov
loopne
cmp
movsb
pop
daa
ss
push
pushf
jl
pcmpgtb
out
or
push
adc
jmp
lock
push
pop
or
dec
mov
pushf
cltd
dec
fcmovu
mov
jmp
and
aam
pop
cmpsl
pop
sbb
push
cs
push
repz
loope
std
out
std
sarb
inc
push
inc
test
fwait
adc
sub
cmp
xor
rclb
movsb
pushf
inc
inc
xchg
lods
xchg
jbe
or
inc
jge
daa
ret
cmp
icebp
cmpsb
push
push
xchg
adc
jg
pop
out
in
xchg
cli
cwtl
or
mov
jns
imul
and
jae
mov
int3
add
xchg
cmp
sbb
in
leave
or
sti
jo
add
loop
es
adc
dec
mov
ds
out
test
inc
addr16
push
or
call
mov
bound
jge
stos
add
adc
int3
cld
mov
xor
xlat
fiadds
ja
and
push
popf
sub
jge
icebp
adc
dec
test
adc
out
xorb
push
push
cwtl
dec
pop
jg
xchg
push
cmc
cmp
xchg
xlat
adc
outsb
dec
cli
arpl
int3
cli
jns
jmp
or
fisttpl
jmp
adc
cmp
imull
fwait
dec
or
xchg
movsb
push
cmc
aad
pop
jne
jecxz
adc
clc
imul
cmpsl
loopne
jne,pn
cwtl
movsl
jns
inc
pop
mov
xor
cmp
inc
jmp
mov
dec
and
aaa
stc
pop
xrelease
loopne
js
mov
push
std
push
scas
mov
mov
mov
mov
or
mov
clc
pusha
leave
insb
dec
lock
push
ret
mov
mov
jo
aad
test
imul
jno
mov
arpl
rorl
movsl
hlt
scas
das
in
scas
outsb
lcall
inc
xor
xorb
aaa
push
push
or
xchg
cmp
add
xchg
pop
push
pop
hlt
out
frstor
mov
sub
testl
xchg
add
mov
stos
cld
xchg
sti
mov
add
ljmp
mov
cmp
sub
in
or
xchg
das
jno
ds
popf
xor
sahf
xor
in
jo
mov
js
cmp
enter
cmp
mov
test
add
sarl
subl
mov
frstor
pop
jb
xor
lods
mov
xor
xchg
cmp
xchg
push
iret
roll
sahf
jmp
ss
push
sbb
test
into
jmp
mov
pushf
test
stos
jnp
cmpsl
mov
cmpb
add
mov
into
pusha
sub
hlt
sti
ljmp
sbb
dec
fs
test
pop
daa
inc
imul
lock
popf
pop
ljmp
inc
add
xor
push
das
mov
les
loopne
push
aaa
stos
xor
xchg
push
push
sbb
imul
shrl
cld
js
sbb
loop
adc
adc
cmp
loop
fcompl
dec
push
xchg
mov
hlt
push
bound
repz
xchg
jns
in
mov
mov
sbb
cmp
push
xor
cmp
jne
ds
sbb
or
jnp
dec
dec
mov
or
bound
cmc
mov
es
cmp
lods
lret
xchg
lcall
popf
mov
outsl
inc
mov
lock
push
jecxz
pop
pop
adc
jnp
sbb
pusha
or
jl
daa
inc
sbb
rorb
cli
call
lcall
xorb
xchg
mov
push
or
insl
loope
adc
pop
ljmp
sarl
sti
inc
stos
xchg
hlt
lret
xor
jo
dec
adc
sbb
cmp
leave
fnstsw
test
mov
pop
hlt
jne
lods
sbb
jae
or
inc
or
jb
popf
sarb
mov
stos
fdivs
mov
aas
insl
mov
pop
ds
sbb
jmp
sub
adc
jle
repz
leave
fdiv
int
shll
lods
lret
mov
daa
shrl
rclb
and
mov
sbb
cs
xor
push
popf
xchg
cmpsl
dec
adc
jno
and
adc
fildll
sbb
bound
movb
cs
pop
add
jno
repnz
mulb
adc
cmpsl
fidivrl
scas
mov
js
int
scas
mov
das
pop
sar
jne
and
cmp
mov
imul
xor
lods
sbb
lret
ja
adc
outsb
fwait
mov
orl
xor
inc
jp
pushl
in
mov
fs
and
mov
or
lods
in
xchg
aad
std
push
test
scas
out
or
or
xor
hlt
dec
ror
and
lcall
adc
aam
mov
notl
inc
mov
mov
dec
ret
lahf
in
out
dec
testb
sti
cmp
movsb
dec
adc
dec
pop
arpl
repnz
cs
cmp
mov
ret
out
adc
div
xchg
arpl
out
lret
into
jae
lret
jb
mov
xor
lret
sahf
mov
fs
mov
cmc
rep
mov
cld
xor
xchg
pop
or
ds
ret
cmp
mov
push
mov
popf
or
push
inc
shlb
notb
mov
add
pop
lahf
jno
add
xor
push
adc
push
cltd
mov
push
lahf
mov
daa
pop
lret
xchg
dec
fsubs
rclb
pusha
mov
and
mov
es
pop
sub
mov
inc
cmpsl
pushf
divl
lods
movsb
push
lret
call
repnz
ljmp
iret
clc
adc
jb
cwtl
dec
test
stos
push
outsb
aad
and
dec
stos
dec
and
call
mov
stos
ds
mov
negb
jns
rclb
and
imul
push
mov
adc
jnp
dec
fildl
addr16
jno
or
sti
lcall
stc
jb
into
cwtl
movsl
fisttpl
aam
out
jmp
lea
clc
or
into
bound
or
dec
imul
jne
ds
push
mov
dec
push
call
insl
aas
and
inc
xchg
jle
aam
cmp
enter
es
out
cltd
xchg
jmp
notl
cmp
test
adc
sub
fiadds
dec
loopne
jecxz
and
dec
add
pop
cltd
mov
xchg
pop
mov
sub
mov
ret
pop
cld
adc
mov
mov
or
ret
sbb
roll
dec
adc
sbb
cmc
mov
popa
leave
ss
xchg
mov
pusha
bound
adc
jecxz
inc
aad
pusha
lds
stc
xchg
mov
cld
inc
and
push
fld
cld
adc
push
fldcw
or
daa
xchg
popf
pop
pop
inc
push
and
dec
aas
cmpsb
out
pop
loope
pop
add
cmp
xchg
mov
dec
call
sub
lcall
mov
jp
jne
sub
das
mov
cltd
xor
lcall
fdivs
xor
xor
call
out
loop
inc
xor
push
xchg
pop
push
fildl
inc
outsl
push
nop
xor
mov
icebp
scas
push
out
cmp
cmpsl
mov
mov
out
jle
xor
loopne
push
sbb
xor
adc
mov
aaa
jno
jg
inc
add
loopne
lds
sub
jge
cmpsl
cwtl
push
and
xchg
push
mov
or
xor
inc
jp
leave
out
mov
and
test
xchg
nop
leave
jns
inc
repnz
rcr
cmp
mov
jne,pn
adc
sub
in
or
pusha
jns
icebp
fstpl
sbb
adc
cmpsb
push
mov
jg
sti
adc
dec
subb
fwait
mov
pop
xor
les
imul
lods
jle
xchg
dec
rol
xchg
inc
cmpsl
addr16
subps
insb
xchg
add
leave
cwtl
mov
or
repnz
shlb
sahf
mov
push
cld
inc
lret
dec
sbb
pop
aam
fbstp
sub
and
ds
push
xchg
jl
scas
cmp
pop
cltd
lahf
sub
mov
leave
pushf
jg
or
jl
jg
pop
mov
cli
pop
mov
mov
xor
mov
je
rclb
adc
sub
jae
sbb
cmp
into
fdivs
int
sub
mov
sub
aaa
seta
or
push
lea
dec
xchg
xor
loope
rorl
out
push
jp
outsl
not
mov
lcall
dec
mov
and
pop
lods
xchg
fsubr
arpl
outsl
clc
jne
outsl
xchg
inc
sub
jge
inc
jo
add
jecxz
out
pop
clc
pop
data16
pop
nop
mov
rorl
loope
add
aas
pop
pusha
pop
xchg
push
out
das
jecxz
sbb
xor
xchg
jge
inc
jmp
aad
xchg
sarl
fcomps
or
mov
lea
jp
push
push
loopne
rcrb
rol
push
xor
orb
inc
cmpsb
push
push
xor
pop
cmp
cmpsl
fiaddl
iret
test
add
dec
mov
jno
pushf
stc
mov
mov
cltd
scas
repz
push
rorb
cltd
cld
mov
mov
add
jno
inc
cmp
jle
inc
jbe
stos
lds
jno
xchg
sbb
lret
cmp
jns
loope
sarb
dec
hlt
loopne
movsb
into
jmp
jge
adc
dec
push
xlat
rol
sub
mov
dec
mov
iret
loop
xlat
fdivrs
orl
add
ljmp
mov
sub
sub
fs
mov
mov
out
xchg
hlt
add
insb
sbb
inc
ljmp
sbb
stos
dec
orb
sub
fdivrl
mov
into
xchg
gs
jb
movsl
pop
enter
imul
xlat
xor
mov
sbb
jo
cwtl
ficomps
mov
outsl
or
push
das
aam
shl
sti
xor
pop
jns
icebp
mov
xor
adc
sbbl
mov
popf
decb
icebp
hlt
jnp
out
cmp
popf
enter
iret
add
cli
test
pop
scas
xlat
or
cld
adc
push
sahf
sbb
jns
data16
leave
dec
sbb
out
jae
iret
adc
daa
icebp
push
lcall
pop
mov
inc
test
jle
sub
push
mov
in
test
sbb
or
outsb
mov
mov
jns
push
icebp
or
lea
pop
jl
sub
and
push
out
mov
xchg
push
ljmp
rolb
pop
mov
push
sub
inc
cld
push
push
dec
xchg
fidivrs
inc
jmp
adc
and
or
mov
bound
push
or
std
or
xor
fdiv
shrl
test
test
out
shrl
movsb
insb
pop
movsb
fisttps
xchg
popf
std
jae
cwtl
push
icebp
push
mov
negb
enter
xchg
mov
daa
mov
sbb
aad
jg,pn
or
pop
pop
dec
nop
xchg
add
cld
arpl
mov
movsl
mov
dec
shrl
cmpsb
add
test
loope
xchg
inc
push
mov
inc
ss
jno
xchg
ret
cld
adc
daa
loope
add
stc
xchg
std
imull
cltd
int
out
pop
lret
xor
popa
jecxz
jb
xchg
dec
fs
lock
pop
decl
add
iret
rcrl
icebp
or
or
jns
or
jns
test
fadds
push
inc
push
inc
mov
stos
push
mov
xchg
push
dec
jl
scas
lds
inc
mov
dec
ljmp
nop
push
inc
and
adc
jns
scas
pop
ror
insb
or
rorl
ljmp
std
mov
sar
cmpl
ret
lds
mov
pop
cmpsb
mov
xor
push
fdivl
pop
jbe
xor
sub
repz
cli
cli
es
xchg
xlat
fmuls
sbb
and
repnz
sub
ss
push
nop
mov
xor
or
adc
cs
fadd
xlat
mov
sub
lds
cmp
addr16
mov
je
xchg
dec
sbb
xorb
mov
xchg
test
dec
ds
lock
push
stc
jecxz
data16
mov
and
adc
push
adc
xor
jbe
fdivr
mov
or
in
mov
jne
outsb
gs
jb
xchg
jb
ljmp
es
test
addb
jnp
or
pushf
pop
clc
sti
jl
fs
int
add
stos
push
push
mov
push
shlb
mov
testl
dec
mov
repz
mov
dec
mov
and
inc
addb
cwtl
rorl
pop
jle
cmp
and
mov
add
mov
inc
cmp
lds
mov
xlat
je
add
mov
popf
inc
inc
add
mov
xchg
icebp
or
fidivrl
xchg
sbb
xlat
outsl
test
js
add
push
sarl
xchg
dec
pusha
add
mov
addl
add
es
mov
enter
dec
sbb
stos
dec
xchg
dec
lret
fs
dec
insb
mov
mov
daa
test
xchg
sbb
push
inc
fdivl
mov
idivl
add
xor
dec
sub
and
in
push
jmp
pop
push
jnp
pop
fidivrs
in
sti
pop
or
movnti
sub
ss
and
push
in
jnp
shr
xchg
outsb
sub
mov
popa
jecxz
aaa
mov
xchg
jae
les
movsl
ret
insb
mov
loope
ljmp
pop
rclb
mov
push
nop
cmp
sub
cmp
mov
lcall
cmc
mov
mov
rcrb
hlt
push
movl
test
js
fisttpl
xchg
mov
or
testb
lcall
push
mov
push
decb
movsl
mov
orl
mov
cmpsb
inc
mov
xchg
testb
movsl
lods
dec
jle
xchg
repz
push
adc
dec
ret
fcmove
pop
out
inc
jmp
lea
cmp
fisttpll
bswap
int
outsb
sbb
inc
push
mov
ds
idivb
test
fwait
mov
or
xchg
movnti
test
je
lcall
xor
adc
fbld
int
mov
pop
das
mov
dec
push
cmp
int
and
into
fcomi
orb
cmpsb
mov
adc
dec
jecxz
jo
add
push
lods
xchg
xchg
iret
sub
scas
push
popa
loope
mov
xor
jb
insl
enter
mov
cmp
cmp
mov
jg
mov
cmp
in
adc
pop
shrl
pop
pop
xor
jle
jbe
adc
or
stos
pop
add
and
pop
add
mov
jb
inc
dec
sub
inc
push
sub
pop
mov
sub
or
pushf
xor
jecxz
push
repz
and
cltd
mov
xor
cmp
lret
xchg
loopne
aad
xor
sub
sti
es
jns
call
pushf
mov
test
xor
sbb
out
in
lahf
push
jg
inc
pop
pop
mov
rorb
add
jbe
mov
data16
push
inc
xchg
cld
pop
jnp
push
in
jp
mov
out
mov
les
cmp
mov
test
mov
lds
or
mov
arpl
cli
into
shll
sub
outsb
fsubrl
push
inc
sarl
setge
addb
and
push
insl
pushf
lock
lods
xor
sbb
addr16
mov
in
xchg
sahf
mov
jbe
fcoml
xor
jae
ds
in
cmp
test
test
xchg
xchg
mov
cwtl
mov
push
mov
sahf
mov
push
arpl
and
xchg
sub
out
mov
aas
repnz
xchg
or
out
pushf
lahf
icebp
icebp
jno,pn
lahf
mov
pop
daa
pop
filds
outsb
jg
inc
pop
in
mov
sbb
push
stc
lret
cwtl
xchg
push
pop
fdivrl
and
sbbl
jmp
push
and
xor
sahf
insb
jmp
mov
mov
fimuls
mov
xchg
gs
push
add
push
fwait
inc
add
push
add
in
fs
fisttps
nop
mov
mov
mov
insb
lock
push
lock
lods
lock
add
mov
sub
push
push
aam
and
repz
add
mov
jecxz
lret
insl
test
aaa
mov
int
mov
dec
cmp
push
pop
xchg
sarb
sub
pop
and
pop
pusha
and
mov
test
rcll
fsub
cld
loope
jnp
sub
repz
scas
push
rorl
dec
and
and
xchg
cmp
or
jge
push
jns
mov
ljmp
cwtl
cmp
xor
mov
fistpll
fsubrl
enter
loopne
arpl
adc
test
cmp
mov
mov
inc
cmc
fwait
xchg
mov
ljmp
jmp
das
scas
cmp
inc
jecxz
pop
fs
adc
stc
sbb
loopne
sub
jecxz
jp
mov
scas
and
sbb
sbb
std
leave
adc
nop
adc
repnz
enter
fisubl
xor
mov
push
shlb
data16
push
and
mov
xor
iret
mov
xchg
pusha
rorb
jecxz
mov
cwtl
lds
lds
popf
adc
xor
cmp
aad
iret
push
std
sahf
repnz
xchg
inc
mov
push
sbb
fwait
in
inc
jno
xchg
outsb
inc
cmovg
jp
cld
rol
mov
pop
sub
mov
xchg
fucomp
dec
pop
pop
xor
mov
int3
ss
sbb
push
push
pop
cmpb
cs
in
mov
and
mov
jnp,pt
stc
sbb
in
mov
sahf
jmp
mov
mov
rcrl
subl
xchg
mov
jbe
jae
mov
add
stos
fidivl
adc
mov
and
xchg
adc
outsl
jl
inc
stc
mov
andl
orl
sub
xor
mov
call
pushf
push
stos
cmp
aaa
lea
shll
lods
lods
test
loope
cmp
sub
mov
adc
clc
jno
mov
roll
sti
jecxz
loope
cmp
cld
sub
arpl
ss
enter
mov
pop
fnstsw
and
fs
out
lcall
lods
cmp
mov
rcll
imul
mov
idivb
add
jecxz
mov
ret
jg
scas
daa
cld
scas
or
and
les
mov
ret
mov
scas
mov
sbbl
imul
fnstcw
jmp
lahf
mov
or
xor
test
shll
popa
xor
mov
push
lahf
outsl
xchg
push
adc
das
ss
sahf
mov
adc
pop
cmp
movsb
pop
scas
mov
into
mov
repz
in
loope
mov
or
stc
notl
push
xchg
add
jbe
sub
mov
sub
pop
and
rcll
sub
push
mov
cmp
dec
mov
mov
scas
pop
dec
ret
add
pop
sti
or
mov
jmp
push
sbb
push
jl
adcb
inc
mov
add
gs
cmp
mov
jnp
xor
cli
xor
mov
push
daa
cmp
into
pop
aam
cmp
jecxz
cmp
dec
jb
push
test
fsubrs
bound
sti
mov
mov
jmp
addr16
leave
cs
test
mov
and
mov
imul
pop
xchg
ds
jns
pop
inc
xchg
mov
test
or
fxch
and
pusha
inc
push
sti
mov
stos
aad
imul
cmp
mov
dec
cmp
dec
jp
mov
enter
fs
and
fisubrs
js
pop
mov
adc
aas
sahf
out
aad
mov
cmpsl
loop
insl
arpl
pop
outsb
pusha
scas
cmpsb
inc
jae
arpl
jo
in
subl
xchg
xchg
iret
push
sbb
lds
jo
dec
test
out
sahf
fistpl
jns
daa
push
stc
cs
lods
mov
xchg
stos
and
push
out
lods
cmpl
add
mov
cmp
pop
pushf
dec
push
sbb
push
sub
add
aam
shrl
inc
lea
xlat
push
shl
insb
cltd
pop
imul
mov
loop
sub
sbb
lods
jle,pn
push
xchg
in
punpckhwd
outsl
push
cmp
or
mov
jne
dec
push
xchg
add
inc
mov
cmp
sub
jg
sbb
push
add
jge
pop
xorb
shll
scas
jl
out
adc
inc
mov
dec
jnp
push
adc
xor
or
into
ret
dec
imul
or
add
sub
mov
or
add
daa
addr16
hlt
push
mov
inc
inc
inc
xor
or
les
les
int
out
hlt
nop
fwait
repz
push
repnz
sti
xor
pop
mov
das
les
lahf
mov
adc
call
shll
iret
and
outsb
xor
js
jp
jno
int
cmpsl
ja
mov
rclb
push
aad
mov
rol
imul
imul
or
or
icebp
xor
jp
pop
lcall
int
mov
in
push
inc
bound
imul
dec
mov
adc
cmp
xchg
jp
lods
cmp
inc
xchg
ret
inc
iret
incl
adc
insb
add
ds
popf
push
add
js
sub
andl
push
pop
test
in
mov
add
mov
repnz
or
cmp
sub
mov
cmpb
jge
pop
jl
sahf
imul
cld
repnz
mov
insb
scas
subb
int
int
popf
enter
aaa
dec
lahf
jg
inc
in
sbb
mov
cli
pop
gs
int
adc
adc
jg
jae
mov
daa
je
inc
test
add
or
xchg
clts
jnp
sbb
mov
or
jae
movsl
add
jg
and
lods
adc
and
cltd
fwait
les
cltd
xor
jg
pop
push
push
cmc
or
scas
scas
dec
push
std
mov
cld
mov
mov
mov
mov
mov
fimuls
mov
data16
push
and
imul
fstpl
jne
sahf
or
cwtl
adc
sub
dec
sbb
lock
xor
int
sub
jmp
mov
adc
hlt
insl
mov
add
mov
and
add
daa
adc
sub
dec
dec
in
cmp
inc
gs
mov
mov
jl
outsb
mov
mov
sbb
cmp
sbb
les
decl
mov
xchg
sbb
mov
test
xor
push
cmp
andl
adc
jns
mov
mov
push
ret
adc
jno
shlb
xor
mov
xchg
icebp
add
fstl
push
pop
ljmp
icebp
pop
jo
and
arpl
mov
jnp
push
inc
add
inc
lret
mov
cmpsl
cmp
mov
scas
dec
movsb
ffree
cmp
sub
in
cmp
sub
ror
repz
mov
movb
jns
or
mov
push
dec
push
inc
jmp
in
sbb
push
dec
js
dec
test
lahf
xchg
sbb
jecxz
push
or
sub
mov
mov
cmpsb
push
into
adc
ljmp
and
mov
fwait
in
dec
xor
adc
and
enter
fmulp
push
adc
lea
inc
cmp
es
xchg
mov
js
out
cmp
hlt
sbb
or
sub
jnp
leave
nop
jb
lret
cmpsb
pop
inc
add
xchg
add
inc
fs
les
dec
scas
es
popa
jns
leave
push
outsl
push
aad
jo
lea
mov
cmp
cwtl
mov
sub
add
pop
push
sub
jmp
scas
lcall
mov
and
imul
jb
add
out
outsl
mov
in
sbb
mov
aam
popf
xor
shlb
addr16
sbb
fisubrl
sbb
lret
xor
clc
inc
hlt
movsb
add
in
fidivrs
stc
lret
pop
mov
push
pop
cmpl
xor
imul
mov
push
mov
jle
lock
sub
cli
aas
jb
lahf
or
loope
mov
xchg
ja
mov
mov
add
pop
adc
int3
cmp
mov
pop
push
pop
dec
test
aam
fwait
inc
or
and
or
lods
pop
adc
inc
pop
icebp
add
cld
enter
fisttps
mov
mov
pop
and
push
call
push
push
push
cmp
test
jno
mov
adc
aad
nop
add
cs
mov
int3
cwtl
and
jno
xor
repz
repz
push
jle
gs
fbstp
aas
pop
jecxz
outsl
idivl
loop
push
push
jne
xchg
cmovs
sub
adc
push
mov
jo
stc
and
mov
xor
sub
add
pushf
shrl
xorb
pop
jge
cld
gs
push
fimull
sub
icebp
xchg
aam
ja
addl
aaa
lahf
shrb
fwait
in
add
sbb
pop
ja
xchg
aam
xchg
mov
or
jmp
push
add
xor
mov
cmp
cmpsl
mov
mov
in
sahf
inc
jl
xor
sbb
icebp
ret
pop
hlt
aaa
in
or
mov
notl
inc
filds
int
pop
inc
or
dec
pop
cwtl
inc
mov
sbb
call
or
xchg
call
mov
lret
sbb
mov
sahf
dec
loop
mov
push
hlt
mov
cltd
clc
mov
adc
aam
cmp
mov
dec
stos
add
gs
mov
sub
dec
pop
sub
ljmp
jnp
das
aas
lock
dec
loopne
inc
pop
rol
les
scas
cmpl
sbb
fisubs
pop
cmp
add
mov
and
xchg
scas
fisttpl
mov
sbb
cmpsb
jle
xchg
call
lea
pushf
test
mov
lcall
pop
pop
movsb
rcll
and
mov
mov
stc
cld
loopne
cmpsb
jle
or
fmul
int
movsl
jmp
or
outsl
jle
int3
test
xchg
das
mov
pop
clc
mov
mov
lcall
mov
add
out
xchg
loope
or
js
xlat
lods
loope
xchg
or
xor
cmovne
add
adc
fs
inc
xor
movsl
popa
idivl
loopne
bound
lcall
and
loope
jb
pop
int3
sbb
lock
fisttpl
mov
pop
nop
sub
adc
into
lret
push
cmp
jno
mov
xchg
es
mov
add
aad
xor
jg
cmpsl
and
daa
je
testl
popa
into
dec
xchg
inc
and
in
xlat
jne
xlat
adc
mov
sub
xchg
outsl
lcall
fistpl
mov
movsb
repnz
and
pop
mov
adc
adc
lock
xchg
aam
insb
lret
std
fidivrl
mov
xor
lods
stc
aaa
sbb
mov
mov
push
pusha
pop
inc
stos
ss
and
cwtl
lea
mov
test
dec
cmpl
in
inc
mov
mov
sti
mov
inc
mov
dec
add
add
push
movsb
repnz
xchg
shll
ficomps
mov
cs
sbbl
jmp
push
cmp
pop
call
js
and
movsl
leave
inc
popf
push
cwtl
push
sbb
and
push
enter
pop
add
mov
test
xchg
and
cli
cs
popf
movsl
mov
xchg
iret
sub
scas
jg
ds
movsb
shlb
mov
test
cld
adc
push
pop
dec
bound
cmp
dec
push
mov
pushf
pop
sbb
push
mov
cmp
push
push
sub
out
jns
lret
test
icebp
adcb
fstl
jno
negl
lret
add
mov
out
cmpsl
push
test
lea
pop
pusha
cmp
jecxz
out
xchg
pcmpeqd
mov
inc
sub
sbb
cmp
jecxz
jb
test
or
jle
sti
sub
push
and
mov
jne
jmp
loope
ljmp
push
lods
sub
fisubl
je
mov
cwtl
adcl
nop
movsb
cmp
inc
hlt
icebp
loop
dec
ret
sub
fwait
out
mov
ds
xchg
aad
ljmp
xlat
jns
or
cmpl
push
push
out
scas
jns
adc
mov
pop
int3
mov
xor
dec
add
adc
stc
jb
cmp
sub
pop
bound
inc
and
inc
movsl
xor
outsl
cmp
aas
int
movsl
sbb
aam
jg
mov
adc
jae
mov
add
mov
ljmp
cli
jecxz
lock
dec
movsb
popf
loope
pop
xor
jno
mov
es
pop
jns
add
and
cmpsl
sub
pop
xchg
and
sbbb
xor
jbe
mov
aam
xor
lods
mov
pushf
sbb
test
mov
or
xor
pop
or
cmp
test
and
sbb
fadd
jge
lods
jne
pusha
rorb
add
movsb
or
pop
repnz
testl
test
jnp
adcb
cmp
adc
aaa
pop
cld
sub
xor
je
add
cs
inc
pop
cli
xchg
in
das
mov
dec
repnz
shll
mov
fsubrs
cld
jne
adc
outsl
mov
or
jae
inc
or
out
nop
inc
sub
test
in
pop
cmp
in
push
mov
xchg
pop
or
loopne
icebp
aas
sbb
das
jl
cs
mov
add
mov
ss
add
addr16
jbe
and
hlt
push
xchg
lahf
cmpsb
in
nop
ljmp
inc
add
aam
sahf
dec
sbb
sub
cmpsb
jae
int3
lock
cmp
and
rolb
mov
cld
jp
sbb
push
int3
xor
outsb
push
shl
ss
adc
dec
roll
fistps
xchg
mov
test
sbbb
push
cmp
sub
push
fstpl
cmp
add
mov
fidivs
sahf
test
or
aaa
jle,pt
lret
add
dec
sub
sbb
pop
enter
ja
xchg
cs
mov
mov
mov
push
cmp
mov
mov
hlt
add
ficompl
and
add
and
push
outsl
hlt
out
sbb
adc
xchg
cmp
cwtl
mov
data16
popf
repz
out
nop
cli
add
fisubrl
push
pop
adc
std
mov
push
mov
sbb
subl
jg
and
mov
aam
or
jae
push
inc
into
or
lcall
aaa
inc
jno
adc
scas
movups
sub
arpl
mov
jb
xchg
cmp
sub
out
xchg
xchg
mov
cmp
lea
addl
jle
pop
sbb
mov
pop
rcll
scas
stos
push
cld
mov
std
dec
rorl
cmpb
int3
mov
pushf
sbb
jno
call
jecxz
aam
mov
imul
inc
mov
dec
out
or
or
and
sub
movsb
adc
add
mov
jp
bnd
jmp
in
adcb
jle
lret
pop
repnz
out
fidivrl
fcomps
roll
xor
loopne
adc
jmp
mov
mov
mov
es
clc
sub
sbb
bound
cmp
push
jbe
pop
jge
call
cwtl
or
mov
dec
movsb
jge
std
repnz
pop
je
enter
xor
push
or
xchg
icebp
outsb
mov
jecxz
jne
daa
push
repnz
int3
sarl
idiv
cli
sti
xchg
mov
push
out
mov
cli
shr
xor
push
or
in
mov
shl
xchg
sbb
xor
ror
dec
aad
ret
sbb
jmp
into
or
fwait
xchg
and
in
dec
push
jp
mov
cld
imul
and
push
mov
sbb
and
cltd
adc
loope
jbe
movsb
or
dec
icebp
jmp
push
mov
testb
fmuls
int3
aad
shl
sub
daa
mov
add
pop
add
rorb
ja
imul
ljmp
adcb
pop
mov
and
idivl
out
outsl
pusha
fistl
xchg
pop
cmp
das
jge
pop
sub
lds
pop
ret
pop
ret
rclb
inc
push
fmuls
or
data16
clc
fbstp
leave
sbb
testb
push
out
arpl
jno
jp
xchg
outsb
andb
or
jno
out
mov
xchg
dec
mov
es
std
ja
enter
inc
pop
sub
push
cmpsl
enter
mov
into
decl
cmp
idivb
xchg
mov
inc
mov
mov
and
dec
pushf
inc
fsubp
cmpl
jg
fsubp
inc
jmp
and
mov
in
aaa
mov
adc
mov
into
mov
adc
lahf
dec
lods
cs
scas
pushf
mov
repz
dec
cltd
insl
adc
add
repnz
and
pop
dec
fidivs
popa
rcrb
movsb
adc
add
lcall
addr16
jae
inc
je
and
mov
adcl
dec
dec
daa
fiaddl
loope
pushf
mov
dec
mov
imul
sbb
lock
rolb
xor
loope
mov
mov
xor
mov
or
in
jb
sub
popa
mov
or
in
adc
xchg
fdivs
lret
mov
xor
test
stos
test
sub
push
cmc
mov
lcall
scas
mov
jp
mov
jno
inc
bound
sbb
jmp
mov
jnp
dec
sub
mov
icebp
call
inc
push
imul
aad
arpl
add
xor
data16
aam
pushf
sbb
push
ds
outsl
xor
rclb
jne
popa
jae
fimull
mov
jne
and
or
xor
mov
add
inc
in
insl
pop
xchg
ds
dec
xchg
mov
xchg
cmpsl
sub
fwait
push
inc
je
mov
mov
xchg
pusha
xor
fdivr
test
int3
jmp
fldt
dec
outsl
ljmp
mov
and
sbb
push
das
pop
outsb
sti
lcall
leave
push
leave
add
sbb
or
add
popa
xor
push
cmp
xor
or
mov
jl
repnz
fs
data16
es
je
ljmp
aad
cmpsb
xchg
mov
push
dec
ret
push
adc
shrb
mov
pop
fwait
pushf
push
add
cmp
sahf
outsl
push
xor
dec
mov
dec
mov
push
jne
push
inc
cmpsl
sti
xor
cmp
loopne
loope
add
xchg
aad
add
mov
mov
out
pop
sti
push
cs
out
and
push
shrl
jp
stc
cmc
leave
out
sbb
sub
in
cwtl
mov
jp
js
sbb
cmp
insl
pop
xor
cmpsl
gs
push
sbb
dec
jp
repz
cmpsb
push
sub
cltd
dec
pop
ret
xchg
out
mov
iret
xor
push
sti
fmull
or
pop
mov
fnstenv
mov
bnd
dec
pop
pop
fldt
loop
xor
adc
and
xchg
push
adc
sbb
and
in
lock
mov
mov
jp
ret
negl
jmp
leave
out
xchg
push
sti
movsl
adc
pusha
dec
dec
popa
or
push
sub
mov
int
cmp
daa
mov
lahf
idivb
or
outsl
cmpsb
jecxz
dec
incb
dec
xchg
sub
mov
in
mov
mov
call
loop
or
and
push
std
xchg
adc
insb
les
out
and
add
and
adc
jb
xchg
dec
jae
in
stos
lcall
dec
sbb
popf
loopne
inc
loop
sub
andb
out
testl
mov
inc
cmp
or
sub
clc
fbld
push
inc
or
pop
insb
jl
mov
hlt
jmp
test
popa
insb
out
ljmp
scas
push
mov
iret
repnz
popf
push
mov
lock
sbb
or
adc
addr16
jno
inc
insb
ss
xchg
incl
sub
aad
xor
dec
fildll
bound
dec
inc
jno
jmp
mov
scas
and
pusha
nop
push
xchg
inc
cltd
test
xchg
outsl
dec
or
repz
mov
jne
cmp
xor
mov
inc
ret
sub
into
movsl
mov
fsubs
mov
pushf
add
push
lcall
ret
pop
dec
or
jbe
jmp
aad
or
rorb
insb
sbb
icebp
std
jns
out
js
xor
movsl
clc
mov
repnz
xor
roll
mov
in
adc
push
cltd
ds
mov
push
xor
inc
in
imul
xor
mov
out
jp
cmp
loopne
stc
inc
mov
std
push
xor
xor
int
in
ds
push
pop
pop
testl
stos
xchg
imull
test
mov
pop
mov
add
mov
popf
mov
jge
lcall
call
mov
cmpsb
shrl
push
inc
aas
gs
loope
outsl
scas
jp
inc
add
and
call
jb
adc
dec
sbb
out
mov
mov
fsqrt
je
xchg
aas
dec
push
inc
scas
ja
sub
scas
sub
idivl
es
pop
je
inc
sbb
std
xchg
rolb
xor
ja
inc
mov
sarb
clc
and
jb
fadds
jbe
adc
stos
pusha
mov
adc
dec
inc
out
sti
imul
ja
push
bound
xor
mov
sub
xchg
loopne
stos
adc
adc
call
cli
dec
into
in
pop
fidivrl
ret
dec
pop
inc
stc
dec
test
push
adc
adcl
clc
push
cli
cltd
jmp
fildll
ljmp
and
stos
repz
jo
fsubr
cmp
cld
inc
xchg
pushf
xor
outsl
out
in
int
sbb
adc
mov
add
adc
inc
sbb
push
shl
test
fmul
in
dec
jle
cld
sub
sbb
pop
jne
mov
mov
pop
lods
iret
push
or
sbb
in
xchg
cmpl
insl
jns
sub
pop
jge
or
mov
sub
lahf
daa
sbb
lods
les
cmp
test
xchg
mov
popf
xchg
shrb
mov
das
int
xchg
das
dec
mov
and
pop
xchg
loope
mov
lea
cmpl
aaa
and
pushf
mov
xchg
push
inc
jmp
push
or
xchg
imul
fdiv
cs
push
xchg
fnop
and
fadds
sub
daa
xor
cmp
imul
mov
cld
cmp
ds
je
iret
mov
cmp
popa
xchg
or
fs
adc
shrb
xor
or
pusha
jp
out
push
and
mov
xlat
sub
push
push
aad
xchg
movsl
mov
add
xchg
mov
xchg
popa
adc
jg
adcb
sub
ja
ret
xlat
xchg
add
cmp
scas
or
loop
mov
iret
imul
jne
mov
or
push
pop
jne
std
push
das
pusha
aad
pop
out
jno
inc
jecxz
lahf
add
fstpt
popa
mov
ret
or
pushf
popa
rcrb
ljmp
jb
addl
and
sbb
popa
cltd
jne
adc
add
mov
cli
pop
adc
jns
lods
xor
decl
adc
ss
mov
stos
imul
xchg
lcall
bound
movsl
mov
sub
outsb
sbb
jo
fstps
insl
or
or
inc
jle
les
icebp
mov
xor
pop
mov
or
xor
in
inc
cmp
imul
subl
xchg
mov
mov
adc
jp
ret
dec
and
jne
gs
cli
andl
fisubl
dec
orb
mov
lret
pop
fiaddl
jmp
cmp
pushf
mov
mov
and
fmuls
mov
sahf
bound
mov
rclb
fdivrs
incb
fstpt
imul
xchg
in
jae
and
out
nop
xor
cmpsl
repz
ficompl
fnstenv
mov
outsl
jle
cmp
test
fwait
push
loopne
daa
pop
stc
in
pop
xor
fimull
jns
push
aad
xlat
cld
mov
cs
pop
fcompl
inc
sbb
sti
aas
xor
mov
cmpsl
push
xchg
scas
mov
push
xor
add
add
mov
mov
call
rorb
xor
jne
fsub
sarb
sti
or
cmp
sbb
cmpsb
mov
cmp
adc
mov
or
int3
dec
test
sahf
pop
jmp
outsl
xchg
cmp
movsl
cltd
and
xchg
test
mov
ret
sub
push
cs
pop
jno
mov
outsl
mov
jns
outsb
popf
mov
scas
sub
roll
xor
fsubrl
dec
int3
sbb
and
dec
cs
in
js
or
sbb
inc
xor
aaa
in
jg
mov
lret
ret
ljmp
sbb
jbe
cwtl
mov
jno
xor
in
mov
mov
jo
jne
cmp
xor
pop
mov
adc
sahf
sbb
sbb
push
push
test
jmp
enter
sti
mov
sbb
inc
ret
adc
ja
push
pop
imul
rol
or
jb
outsb
icebp
or
hlt
pmaddwd
popf
xorb
and
push
cmp
sub
sub
pop
inc
inc
addl
cwtl
jbe
out
add
shr
jne
mov
fiaddl
test
sbb
adc
xchg
std
push
add
push
in
mov
fdecstp
and
add
jbe
loop
aad
in
cmp
js
lret
cmc
push
stos
stos
mov
pusha
push
je
out
cld
cmc
test
inc
bnd
stos
mov
xchg
aaa
test
sahf
test
fidivs
dec
stc
shlb
xchg
cmp
xchg
and
mov
jmp
lods
fists
cmpsl
cmp
fwait
inc
adc
push
andl
out
loop
movsb
test
pop
fmull
int
into
popa
adc
push
inc
mov
fcmovnb
mov
roll
inc
xchg
loopne
or
jo
xchg
insb
scas
adc
pop
pop
fs
xchg
ret
xorb
add
cmpsb
cmp
pop
or
push
ret
pop
ret
rcrb
ret
repnz
and
cld
cmp
shlb
or
std
pushf
iret
aaa
xchg
xchg
nop
fwait
and
in
aam
sub
mov
xor
dec
adc
rcrb
sub
test
repz
xchg
dec
orb
into
divl
movsl
sarb
cli
jbe
es
add
aaa
mov
insl
push
pushf
adc
in
cld
sub
lock
jmp
adc
add
lret
jp
cltd
ret
mov
jb
cmp
and
out
sub
mov
aam
mov
push
mov
and
mov
push
aam
mov
stos
mov
or
xor
mov
mov
mov
inc
pop
das
ds
mov
aam
and
lods
mov
faddl
xchg
xorl
mov
shrl
and
pop
test
mov
sub
mov
cmpsl
cmc
fsubs
mov
jno
lods
push
loopne
mov
add
pop
mov
test
jecxz
mov
jmp
add
add
and
mov
test
std
sti
xchg
sub
xchg
pop
rcrb
cld
pop
and
xor
or
and
ja
jmp
push
mov
jmp
loop
push
sarl
neg
dec
rol
pop
repz
mov
ss
loope
jbe
inc
rclb
aas
mov
sbb
scas
inc
out
xchg
and
cmp
scas
adc
inc
les
outsb
loope
out
cmp
or
div
sub
mov
shrl
mov
xchg
insb
push
data16
mov
in
push
mov
jmp
pop
push
ds
cltd
std
or
push
pop
inc
mov
mov
movsb
jno
xchg
lahf
aam
rcrl
cmc
dec
cmc
ret
test
sti
push
stos
jge
mov
pop
icebp
les
aad
mov
insl
daa
mov
mov
mov
xchg
jl
bound
jmp
jo
int3
and
xor
repz
cld
pusha
and
push
adc
sbb
pop
sar
test
mov
xor
aam
test
inc
int
cld
cmp
divb
mov
sub
jns
ret
repnz
inc
mov
push
pop
xorb
test
test
in
mov
loopne
hlt
mov
and
ja
sti
adc
jmp
push
xchg
ss
mov
dec
mov
test
scas
mov
sub
fldcw
xchg
stos
xchg
popf
mov
fidivs
imul
sub
fstl
icebp
inc
adc
rcrl
loope
mov
rclb
test
test
jg
aaa
jmp
adc
js
inc
fldt
and
rcrb
add
rcl
popa
nop
imul
inc
pop
jmp
sbb
cmp
sbb
arpl
dec
xor
push
repz
rorl
loope
pop
and
pop
push
xchg
insb
push
inc
iret
jae
or
cmp
loope
loope
mov
dec
push
das
sbb
fisttpl
or
push
jo
inc
push
mov
or
fdivp
and
lea
daa
data16
insb
push
inc
jge
je
out
push
das
out
xor
sub
mov
fcomps
push
mov
lea
lea
cmpsl
cli
fsubl
xlat
jbe
dec
shl
xor
mov
push
sbb
inc
inc
mov
imul
lods
test
mov
pop
lods
in
mov
lods
std
jg
sbb
push
xchg
fnsave
mov
cli
stos
xor
es
js
pop
call
push
imul
adc
dec
push
outsl
icebp
pushf
inc
scas
pop
mov
push
test
lock
fiaddl
inc
mov
jno
sti
pop
jo
lea
push
xchg
pop
xlat
mov
xchg
inc
ret
lock
ja
and
jge
jmp
or
dec
adc
mov
push
shrl
add
repz
push
js
xchg
imul
js
test
push
pop
or
in
js
sbb
dec
cld
xor
push
add
sub
out
out
and
push
mov
cmp
pop
cltd
outsl
int
add
push
into
and
dec
add
lea
popf
aam
mov
mov
and
mov
int3
mov
mov
push
sbb
setns
int3
jg
mov
push
in
sub
into
push
jo
fisttpll
dec
inc
loopne
lods
das
xor
push
rol
scas
or
and
lret
inc
rol
lea
mov
dec
mov
std
or
testb
lods
push
pop
adc
arpl
push
cmp
mov
push
xor
add
push
aam
push
push
in
jnp
imul
sub
es
sbb
jbe
cmpsb
ror
and
cmp
andb
mov
mov
cmp
scas
mov
jp
cmp
mov
or
out
dec
pop
mov
xor
mov
xor
in
shlb
sbb
push
jns
hlt
int3
mov
adc
mov
jns
imul
jp
and
push
fnsave
iret
lods
dec
mov
test
push
lahf
xchg
or
inc
jne
jp
jne
insb
sarb
adc
push
rcrb
or
scas
and
cmp
pushf
negb
jl
incl
inc
adc
sub
cmp
leave
adc
addl
loope
out
xor
sbb
lret
int
or
mov
data16
and
cli
sbb
jl
stos
std
pop
or
xchg
sub
scas
sbb
pushf
iret
xrelease
adcl
pop
pusha
pop
cmc
push
loopne
mov
and
xor
push
test
mov
stos
and
aaa
cmp
mov
sub
test
mov
lock
push
out
jno
and
fidivs
cmpsl
jmp
out
adc
add
push
dec
les
sub
push
jb
cmp
fnstenv
fldenv
add
scas
movsb
or
imul
fs
xor
push
es
mov
adc
in
add
loopne
jo
and
adc
ljmp
lods
dec
inc
lods
imul
int3
out
jge
inc
jae
rclb
pop
mov
loopne
adc
and
popf
push
inc
fcmovbe
adc
push
xor
add
ljmp
stc
mov
push
jle
imul
pop
mov
mov
sarl
mov
cmp
stos
shl
inc
add
js
xchg
push
in
jns
pop
mov
sub
outsl
shlb
lods
imul
xchg
mov
andb
sub
dec
aad
mov
cmp
fcoms
cmp
jb
jg
dec
mov
jno
popf
cmc
add
sub
lret
xchg
mov
push
sbb
int3
cmpl
inc
ja
cmp
or
xor
in
jle
je
pusha
push
xor
mov
test
xor
lods
sbb
lret
or
stc
stos
cmc
test
xchg
pop
adc
sbb
cmp
cmpsb
and
pop
adc
fxch
add
in
movsl
jnp
fnsave
decb
cld
cmp
fnstsw
adc
adc
add
jmp
sarl
pop
xchg
pop
fidivl
mov
std
pop
inc
xor
pop
lret
add
shl
mov
dec
inc
dec
inc
pand
fs
nop
aam
xor
adc
cmp
in
into
out
xor
jecxz
mov
sbb
jmp
push
push
fucomi
push
in
cmp
lea
xchg
lret
and
roll
and
cltd
jp
outsb
ss
mov
repz
mov
ljmp
das
sbb
fmuls
adc
sbb
push
cmpsb
repnz
pop
lea
cmp
jno
icebp
add
xchg
or
mov
mov
lods
jg
cmp
adc
mov
or
mov
mov
lahf
aaa
xchg
and
dec
cmp
bound
adc
mov
out
xchg
loop
sbb
push
mov
stc
dec
lods
pushf
clc
add
jbe
xor
xlat
jbe
test
stos
sbb
lret
push
incb
aaa
inc
lcall
iret
repz
daa
lds
xchg
pop
mov
cwtl
xchg
inc
xor
cmp
xor
fs
jg
jle
shll
sahf
sub
mov
sub
push
fmul
aam
xchg
sub
out
jbe,pt
cs
test
mov
inc
divl
dec
icebp
pop
nop
int3
jecxz
ret
imul
mov
dec
lods
mov
outsl
outsb
mov
sub
pop
in
add
test
insl
sbb
lret
sbb
mov
inc
out
mov
mov
or
nop
inc
stos
fadd
pop
xchg
mov
mov
cmp
cltd
cmpsl
stos
pop
aas
pushf
bswap
fimuls
subb
cmp
jbe
push
xor
aas
mov
mov
fucomp
and
cmp
popf
or
rclb
jnp
movsb
and
mov
push
out
jno
sbb
int
dec
sti
pop
pop
sub
jnp
popaw
lds
mov
xchg
movsl
push
les
xor
aam
sbb
cmp
out
dec
mov
daa
test
mov
mov
xor
lret
inc
insb
hlt
sbb
inc
out
aam
pushf
cmpsl
push
mov
in
addb
inc
lds
fcomi
xor
das
test
je
push
insl
pop
into
aaa
jae
sbb
push
ja
xchg
mov
sbb
mov
fwait
dec
add
pop
adc
mov
jl
jmp
and
adc
dec
aas
or
push
dec
mov
icebp
mov
jno
push
mov
cltd
push
int3
jb
fdivr
mov
xchg
test
pop
inc
ds
mov
or
cli
mov
or
jnp
push
dec
fstl
cmp
xor
movsl
pop
adc
test
pop
cmp
dec
rolb
cld
pusha
xor
lret
clc
mov
out
lahf
xlat
clc
push
cli
adc
push
add
push
insl
ja
adc
mov
jne
and
inc
add
xchg
mov
or
daa
mov
sbb
das
test
add
repz
pop
cmp
shrl
clc
sti
jle
aaa
aam
cmpsb
popa
std
rclb
out
fnstenv
cmp
push
mov
fldcw
push
pxor
sarb
mov
jb
shrb
jb
and
add
mov
cmp
jg
xor
mov
dec
shrl
xor
dec
or
mov
push
mov
in
lods
inc
cmp
dec
stc
pop
imul
dec
adc
add
nop
std
fistps
jg
add
inc
or
xchg
push
mov
and
add
imul
std
pop
cwtl
push
lods
adc
fs
cmpsb
in
sbb
inc
push
cld
xor
sbb
in
aad
dec
pop
xchg
outsl
pop
dec
fnstenv
fwait
lods
std
xor
ror
mov
add
xchg
inc
push
arpl
je
cmp
aad
test
insl
fs
mov
les
mov
test
jno
in
jnp
out
and
xor
hlt
inc
fadds
xchg
and
pop
lods
divb
je
mov
inc
ljmp
jp
lcall
or
push
shr
notl
imul
pop
lock
xor
ds
mov
lock
xor
mov
movsl
pop
scas
lea
xchg
dec
push
push
out
adc
jmp
push
cld
lds
leave
dec
mov
xor
lods
sbb
jle
inc
sti
adcb
std
std
int
pop
gs
in
mov
jmp
push
sahf
jmp
jo
lcall
sub
frstor
cmp
pop
dec
mov
cmp
cmc
mov
bound
fstl
stos
mov
sub
mov
mov
insl
jno
nop
in
mov
divl
xchg
mov
insl
mov
sbbl
jo
xor
pop
cmpsl
or
sbb
pushf
xchg
mov
jns
jno
sub
sub
or
mov
orl
push
clc
es
lods
test
leave
fistpll
jbe
stos
mov
push
xchg
ss
idivl
test
dec
callw
push
inc
sub
ret
or
mov
imul
mov
scas
adc
out
xchg
add
rcrb
pop
sbb
mov
mov
mov
fstpl
imul
jg
gs
seta
mulb
rorb
pop
or
test
insl
mov
in
fnclex
sahf
adc
dec
inc
add
outsl
lret
hlt
roll
dec
out
inc
inc
mov
das
out
inc
jg
imul
cwtl
add
push
fdivs
ret
sbb
and
sbb
popf
sub
xchg
xchg
into
lods
mov
xchg
or
xchg
xchg
in
dec
inc
add
sbb
add
jp
xor
inc
push
sbb
push
into
pop
add
jle
mov
or
inc
jno
call
movsl
insl
les
jle
dec
rcrb
inc
add
xchg
aam
out
xchg
xchg
aas
add
add
movsb
mov
and
mov
push
sbbl
push
add
fcomip
loope
arpl
ficoml
and
xorb
iret
es
mov
lcall
dec
lret
loope
cmpsb
lods
push
pop
ss
clc
inc
pop
setl
ret
stos
addb
sbb
mov
ret
add
xchg
fwait
push
rcll
xor
pop
cs
push
pop
mov
push
pop
jle
push
jbe
xor
pop
inc
mov
adc
addb
jle
cmpl
jno
mov
clc
stos
and
lahf
call
pop
mov
hlt
jl
sbb
and
push
into
mov
int3
xchg
adc
dec
mov
jle
es
test
jb
insb
inc
mov
shrl
addr16
jae
scas
xor
sbb
hlt
loopne
jl
cmpsl
aaa
dec
jmp
insl
add
dec
push
jge
test
push
ficomps
sub
movsl
xlat
or
dec
pop
mov
mov
loope
inc
out
mov
roll
jbe
shll
mov
loop
fnstcw
mov
cmp
jmp
imul
cwtl
jp
sub
xor
pusha
fisubs
jl
sub
ja
xchg
movsl
notb
jbe
jecxz
push
out
sub
les
and
arpl
mov
out
jp
arpl
push
mov
inc
int3
fidivl
popa
xor
js
and
push
daa
xchg
push
lods
pop
or
xor
mov
mov
rcll
xchg
lods
lds
xchg
pop
in
mov
mov
inc
or
aaa
arpl
xlat
xchg
push
cmp
cld
cwtl
in
mov
xchg
sbb
inc
or
repz
leave
dec
sbb
ret
or
fdivrl
and
dec
std
clc
mov
inc
mov
ja
insb
mov
jge
add
jle
pop
lds
outsl
imul
push
das
pop
jbe
xchg
les
pop
lahf
ror
mov
mov
inc
ret
and
mov
bound
adc
test
mov
scas
and
je
sub
sbb
or
sbb
popf
jle
lcall
mov
cltd
incb
das
adc
rcll
jns
je
daa
xor
jne
dec
test
test
orb
sbb
in
mov
mov
or
cmp
push
gs
adc
divl
mov
in
int3
scas
jnp
test
ja
mov
pop
dec
out
pop
loopne
cwtl
cmpsl
aas
cmp
cld
dec
stos
mov
inc
pop
jl
pop
push
mov
rol
xchg
push
jmp
dec
adc
cmpsl
mov
das
stos
xchg
jmp
xor
mov
out
jle
aad
dec
test
cld
and
and
test
ss
enter
push
mov
adc
daa
push
pop
and
mov
into
in
popf
pusha
idiv
push
rcrb
mov
lods
sbb
mov
call
aad
push
std
test
fsubr
lods
repz
dec
insl
fwait
movsb
adc
dec
popf
call
pop
sub
nop
jge
add
fs
in
popf
inc
adc
cmpb
mov
pop
ljmp
dec
jno
aas
push
mov
push
rorl
lock
addr16
and
shll
adc
add
imul
ss
pop
popf
out
movsl
and
jl
rorl
mov
jne
mov
outsl
sub
jge
mov
scas
xchg
jecxz
push
jecxz
xchg
movsl
dec
push
sbb
cmpsl
cmc
jge
xor
mov
xchg
xchg
repnz
das
sti
add
mov
rol
scas
dec
mov
xchg
adc
jmp
sub
push
xchg
call
int
jnp
movsb
shrl
mov
int
fnstcw
data16
iret
in
sub
adcb
je
add
sbb
pop
fdivr
loopne
inc
lret
mov
pop
je
nop
jecxz
lods
ret
ss
xchg
es
shll
mov
mov
mov
loope
or
test
bound
xchg
sub
cmp
icebp
push
dec
cltd
or
aaa
adc
das
push
hlt
mov
push
pop
out
jl
je
movsb
pop
nop
sbb
and
mov
mov
mov
mov
jmp
sub
std
and
jge
in
sbb
outsl
sub
push
jmp
inc
jp
push
cmp
cli
xlat
jp
mov
add
stc
divl
add
movsl
push
sub
out
add
mov
add
sub
inc
loope
xor
xor
and
jb
into
dec
or
push
cli
jl
jno
push
hlt
sub
aas
jecxz
mov
repnz
xor
arpl
mov
xor
pop
jl
add
dec
push
sub
cmp
sahf
js
les
std
add
loop
push
leave
sub
cmp
jbe
in
mov
push
jmp
mov
xchg
daa
and
jnp
into
mov
repnz
push
insb
out
mov
xor
and
cmp
push
ja
repz
mov
clc
gs
xlat
adc
jnp
icebp
xchg
pop
jl
cwtl
mov
jb
cmp
bnd
fsubrs
iret
jle
push
pop
push
mov
cli
int3
adc
add
dec
rcrl
xchg
icebp
nop
clc
mov
pop
or
flds
repnz
add
push
pop
sbb
inc
jge
push
sub
mov
mov
ss
xor
negl
loope
pushf
push
mov
cmp
sahf
push
pop
inc
xor
mov
or
xor
pushf
sub
ljmp
outsl
ljmp
clc
cmc
dec
ror
or
mov
lock
cmp
and
push
outsb
incl
lods
lahf
cwtl
insb
mov
sub
clc
mov
push
roll
mov
ss
mov
jle
imul
lods
pop
leave
or
xlat
pop
fisubs
cmp
testb
cmp
inc
xor
and
xchg
fsubl
lods
cmc
cmpsl
leave
mov
stc
cmp
mov
jno
sbb
popa
xchg
ljmp
shrb
testl
movsl
fwait
rorb
mov
adc
inc
in
jno
inc
push
ret
inc
fcoms
mov
out
pop
fistpl
or
divl
std
lods
subb
shll
jg
mov
out
jnp
push
xor
repnz
adc
mov
jp
fsts
cmp
addr16
push
mov
iret
nop
out
fsubr
xchg
sbb
dec
test
xchg
pop
enter
cmp
sarb
mov
ret
insb
notb
pop
bound
repnz
loope
lods
frstor
jge
jne
sbb
mov
jl
lret
ja
cwtl
test
lcall
daa
pop
aas
xchg
cmc
cmp
jae
popf
imul
nop
dec
popa
out
lret
in
iret
call
fisttpl
jne
xchg
xchg
rcrl
inc
xchg
cmp
cltd
xchg
scas
addl
mov
fsubrs
cmp
push
push
andl
ss
out
pop
lahf
cmpb
dec
loopne
xor
pusha
ss
sub
stos
imulb
xorb
mov
ja
xor
icebp
out
outsl
loop
lret
mov
mov
xchg
imul
shll
mov
xor
in
test
test
movsl
mov
xchg
xchg
call
in
cmp
push
mov
cmp
ja
mov
jg
std
bound
xor
cmp
aas
sbb
adc
pop
mov
mov
cmc
and
divl
pop
ror
cmc
es
mov
mov
jne
push
fdivp
xor
mov
std
or
mov
data16
jg
pop
fs
pop
in
xor
cmp
mov
ljmp
insb
cmp
out
insl
pop
jo
pop
mov
int
hlt
shlb
push
pop
orb
mov
test
decl
mov
sub
fiaddl
cltd
das
xor
inc
mov
sub
and
outsb
sbb
popf
sub
adc
dec
push
fmuls
aad
in
pop
out
movsl
cli
ja
loopne
rcrl
sub
mov
pop
mov
sahf
mov
and
fidivrl
xchg
pop
adc
cmp
sub
mov
sbb
jno
push
sbb
clc
imul
mov
cmp
jle
push
or
xor
fs
jl
cmp
loope
ja
ret
mov
mov
out
insb
out
add
xor
lret
add
movsb
pop
push
aad
fimull
add
mov
adc
add
sbb
fsubl
mov
cmp
mov
in
jno
lret
xchg
ss
adc
jae
outsb
or
loope
cwtl
loopne
shr
xchg
or
int
mov
dec
iret
popf
incb
aam
pop
jbe
mov
and
movsb
cmp
xor
add
std
lods
into
dec
in
inc
sarl
add
jns
xchg
addr16
scas
mov
dec
aad
cmpsl
and
not
add
sahf
sbb
vandps
cli
dec
gs
pop
cmpsl
push
xor
cld
mov
pop
cmpsl
inc
out
fildll
adc
ss
mov
xchg
stos
sub
sub
in
lock
dec
and
test
hlt
data16
dec
cwtl
stos
jg
sarl
xchg
xchg
fcmovnbe
mov
mov
stc
imul
add
mov
inc
ljmp
fimull
in
jae
xlat
mov
and
push
ljmp
sbbl
je
adcb
cmp
push
enter
jmp
xchg
push
xchg
push
push
mov
jmp
fs
sub
aad
jb
mov
stos
leave
fisubrl
xor
mov
negl
sbb
rcl
inc
pusha
ja
add
xor
mov
pop
cmpsl
pushf
or
inc
xor
xor
pop
sub
out
fstps
call
adc
shll
test
xor
outsl
xlat
bound
pop
cld
addr16
shl
dec
jl
adc
cmpb
and
push
cmp
sbb
lds
push
lea
jnp
das
stos
adc
push
arpl
ljmp
inc
es
stc
push
adc
clc
daa
outsl
pop
jge
out
call
out
icebp
adc
push
xchg
add
xchg
jne
aad
cwtl
je
xor
or
xor
or
test
movsb
ljmp
test
xchg
mov
sbb
arpl
push
movsb
cmp
call
dec
adc
pop
pop
clc
sub
mov
jnp
pop
push
andb
push
pop
data16
add
mov
jb
sub
ja
rorb
push
pop
shll
xchg
lret
adc
js
jle
and
std
and
lea
fisttpl
dec
pop
outsl
sub
cs
lahf
cmp
mov
js
iret
outsb
and
add
jb
pop
cmpsb
fs
push
xchg
xor
mov
mov
sbb
shlb
stos
movsl
cmc
popa
pop
insb
imulb
cmp
sbb
mov
rcrb
rcrb
sbbl
dec
das
es
mov
dec
cld
dec
popf
mov
and
xchg
mov
out
ffree
les
cli
rcrb
add
test
fisubs
mov
out
std
or
outsb
sbb
scas
or
andl
hlt
mov
mov
leave
idivb
in
lods
sub
lds
push
jae
cmp
lret
stos
mov
mov
loope
inc
mov
clc
arpl
and
jge
stos
popa
cltd
jmp
ret
ret
sbb
add
cmp
sub
lods
pop
cmp
pop
addb
cld
mov
cwtl
jae
lahf
inc
mov
dec
popa
cli
cmpsl
pushf
in
pusha
adc
dec
xor
loop
jge
mov
jns
sbb
push
jge
sahf
cmp
clc
outsl
cmpsb
and
inc
cmp
xchg
push
insb
jne
ret
int
xor
push
sbb
and
xor
jge
sarb
cmp
out
xor
inc
xchg
jge
test
std
aad
push
fists
daa
cmp
sub
test
and
lds
or
pop
push
imul
push
int3
inc
cmp
dec
fs
mov
cmp
mov
pop
sub
sub
mov
int3
insb
xor
xchg
adc
fs
push
inc
adc
outsl
mov
mov
push
popa
leave
idivl
adc
adc
enter
ret
es
cmp
cs
sarl
mov
mov
leave
arpl
add
sub
out
dec
pop
inc
adc
inc
and
push
mov
sub
lcall
jle
popf
push
lret
das
cwtl
shrl
pop
adc
int3
pop
popf
mov
fdivrs
add
pop
pop
lea
sti
jne
add
or
push
and
cmp
jmp
lcall
in
fwait
push
push
adc
test
imul
push
scas
and
dec
push
mov
push
fdivr
in
gs
pop
pop
inc
xchg
arpl
push
gs
jp
mov
loope
push
jecxz
js
xchg
jns
das
in
testb
loope
inc
and
loopne
jmp
jbe
push
cmpsl
dec
push
mov
and
jle
push
ss
aad
mov
cwtl
sbb
rolb
mov
stos
fiadds
or
mov
fldenv
mov
xchg
inc
int
call
fmuls
sub
or
push
xlat
into
mov
fstpt
in
pusha
repz
sbb
inc
jl
and
and
inc
arpl
push
fisttpl
pop
push
cmpsl
sbb
ret
mov
les
or
rcrl
leave
push
sbb
test
mov
and
cli
loope
xlat
insb
rol
xchg
mov
shrb
pusha
and
or
add
sbb
pop
scas
arpl
imul
push
and
adc
sbb
jb
repnz
pop
push
jmp
adc
xor
sub
sbb
add
cmpsb
push
std
dec
sub
mov
dec
ljmp
jl
int
mov
loop
pop
jne
xchg
jnp
xor
leave
xchg
ss
test
icebp
inc
or
or
lret
pop
subl
leave
mov
idivb
and
in
push
pop
adc
xor
cmp
sbb
pop
push
sbb
and
out
fildl
pop
pusha
xor
pushl
clc
dec
scas
icebp
xchg
and
sbbl
lahf
rorb
jae
movsl
mov
or
loope
lret
shrb
lock
inc
xchg
and
push
data16
jne
mov
fbstp
out
mov
daa
mov
pop
in
push
or
add
add
mov
movsl
cwtl
movsl
xor
sbb
lods
ficomps
adc
cmp
rcrl
push
pop
mov
adc
in
mov
xchg
dec
sub
jne
bound
mov
in
pushf
sub
dec
mov
test
sbb
xchg
popf
inc
out
rol
test
pop
roll
lahf
addr16
sbb
jp
jge
lcall
cld
frstor
stc
insb
sub
xor
fistpll
sbb
lock
sub
in
dec
lea
sub
sbb
mov
int3
and
lea
repnz
andl
hlt
pop
lea
rorl
jmp
test
arpl
mov
xchg
and
ficoml
pop
imul
push
jb
fs
imul
xchg
daa
daa
add
push
les
adc
dec
push
data16
cmpsb
mov
add
lcall
pop
es
andl
jne
je
cltd
mov
and
shll
jp
xlat
out
aad
stos
dec
sahf
test
mov
jb
push
jno
mov
jge
ret
push
lahf
and
pop
hlt
and
xchg
int3
adc
les
pop
into
push
dec
mov
ret
rcll
xchg
cmp
in
push
les
scas
lahf
inc
mov
jp
pop
push
jnp
dec
leave
addr16
pop
out
cmpsb
adcl
jecxz
sub
testl
xlat
mov
xor
and
xchg
push
dec
pop
aaa
cmpsb
fistl
mov
dec
test
js
outsb
pusha
lods
sub
jmp
xchg
fadds
enter
adc
adc
aam
mov
and
mov
imul
push
aam
mov
or
push
adc
shrb
jae
inc
fnstenv
sarb
mov
adc
stos
jno
cmc
pop
jnp
movsl
pusha
push
dec
in
testb
fldt
inc
and
jp
mov
pop
pop
popf
sub
out
mov
cli
mov
lods
loope
ja
movsb
inc
aam
xor
test
jecxz
jmp
fldt
test
loopne
sbb
inc
or
xchg
shll
jge
cmp
or
xor
cmp
js
inc
out
push
sbb
inc
test
negb
and
outsl
hlt
dec
sub
push
sub
je
stos
add
lahf
xchg
repnz
cmp
xor
push
insl
or
lahf
pop
adc
jle
add
inc
imul
in
pop
fstl
pop
notl
pusha
jecxz
outsb
fldl
in
fisttpl
add
mov
out
movsl
or
mov
dec
dec
int
mov
loope
les
mov
xorl
push
xchg
icebp
cld
add
cmpsl
fidivs
fldcw
jmp
mov
ret
or
int
cmp
cmp
mov
cmp
or
shl
push
stos
mov
cmovl
push
ret
mov
dec
inc
scas
pop
mov
adc
int3
jle
mov
fsts
pop
mov
xor
clc
xchg
push
sbb
xchg
jge
dec
jmp
jbe
xchg
sub
es
orl
fdiv
mov
mov
dec
aam
cmp
or
movsb
xor
xchg
push
fwait
add
inc
imul
out
mov
inc
in
out
xchg
lret
subl
rolb
jmp
xchg
adc
sti
mov
push
rep
mov
inc
jl
mov
sbb
mov
aas
sbbl
jno
mov
xor
lea
pop
shll
in
xor
jmp
xchg
inc
int3
adc
inc
jge
aas
jmp
rcrb
idivb
inc
and
dec
je,pt
imul
ret
shll
push
mov
stos
mov
jo
jae
icebp
fwait
out
pop
in
flds
roll
push
cmp
jmp
mov
test
jnp
jae
push
jbe
xchg
loopne
loope
jo
fstps
jnp
fidivrl
stos
push
lcall
or
sub
pop
dec
lds
lahf
xlat
cmpl
ret
inc
outsb
call
cmp
or
in
sbb
push
mov
sub
test
js
in
mov
dec
sub
dec
scas
fistps
iret
inc
arpl
mov
push
daa
adc
push
xchg
pop
mov
cmp
and
imul
or
mov
loop
inc
inc
xlat
pop
pushf
je
jne
jge
inc
lds
sbb
dec
call
dec
mov
push
in
sub
push
jl
pop
dec
fmul
movsb
mov
dec
out
call
pop
andl
hlt
inc
int
cmc
dec
xor
pushf
add
cmpsb
pop
push
lahf
dec
sbbl
xor
jne
adc
mov
data16
sti
mov
lret
push
je
mov
inc
sub
sub
and
shlb
into
ljmp
sbb
movsw
xlat
fdivl
and
iret
repz
je
arpl
mov
and
sti
cltd
cld
inc
xor
ret
ret
sbb
test
or
mov
in
and
mov
and
mov
jmp
hlt
pop
mov
jmp
mov
inc
push
and
popf
daa
dec
inc
push
inc
mov
mov
hlt
fs
loopne
mov
inc
and
mov
adc
push
into
gs
iret
inc
in
ds
pushf
mov
inc
std
aas
mov
mov
inc
or
jae
jge
ss
mov
xchg
cmp
pop
add
jb
inc
dec
cmp
sbb
push
pusha
arpl
hlt
ds
and
sbb
mov
test
adc
and
in
mul
idivl
aam
mov
ds
mov
out
mov
outsb
pop
sbb
inc
into
jns
and
mov
mov
cld
cmp
xchg
dec
xor
loope
aas
arpl
push
mov
bound
cmp
push
rcl
add
mov
repz
inc
in
xor
inc
imul
mov
or
fldt
sti
sub
clc
jp
push
pop
mov
push
pusha
test
mov
loope
cmp
aas
loop
cmp
jno
andb
xor
inc
mov
jb
bnd
das
mov
cwtl
addl
movsl
aam
adc
scas
in
mov
or
dec
dec
mov
xchg
mov
imul
mov
stos
lds
and
test
xor
cmp
jg
or
jne
jge
cmp
xor
std
fdivrp
add
dec
dec
rorb
ss
mov
int
inc
mov
int3
mov
call
std
icebp
rcr
or
insl
dec
jp
pop
and
repz
or
lret
insb
sub
pushl
in
mov
jecxz
adc
outsl
lea
add
dec
and
sub
into
lcall
bound
jge
cmpsb
cmpsl
aam
mov
dec
inc
adc
iret
movb
cld
in
or
mov
push
inc
ss
loope
in
rcrl
dec
or
xchg
insb
jo
rcll
mov
mov
mov
xor
or
pop
push
test
xchg
jbe
cltd
mov
xor
or
mov
inc
or
cmp
sahf
mov
cmp
fldl
dec
data16
adc
jge
jae
push
mov
sub
pop
fs
sub
inc
push
jns
push
push
in
dec
pop
add
imul
ffree
jmp
push
je
daa
pusha
movsb
sub
mov
xchg
lahf
pop
sbb
fcmove
in
sahf
jge
outsl
add
add
push
lds
jp
mov
adc
dec
jmp
jmp
xchg
outsb
fmull
mov
dec
imul
or
popa
push
adc
dec
dec
dec
inc
stos
pop
sti
in
pop
mov
loop
rcrl
sub
add
dec
call
aas
idiv
jp
inc
lods
outsl
or
adc
call
mov
push
in
testb
ja
pop
add
and
or
cwtl
pop
enter
repnz
jae
loope
and
mov
mov
mov
je
cmpsl
pop
xchg
fildll
lcall
xchg
lcall
push
cltd
js
pop
xor
loopne
mov
cwtl
adc
sub
add
ret
int3
add
shrb
jmp
stos
cmp
js
add
lea
mov
dec
scas
mov
arpl
int
jno
jno
and
rcrb
dec
mov
pop
push
sbb
inc
stos
mov
or
mov
shl
insb
iret
aaa
cmp
cmp
mov
mov
and
int3
push
icebp
je
fadds
and
addr16
outsl
out
mov
out
imul
cmp
push
repnz
mov
daa
push
jns
cmc
push
pusha
dec
das
mov
aas
push
dec
ss
xor
jne
xorl
repz
int3
and
pop
pop
add
mov
movsl
cld
out
movb
cs
lock
mov
add
jge
rorb
inc
ss
dec
dec
jp
push
mov
dec
mov
les
jmp
add
daa
pop
cmpsl
add
xor
movsb
xchg
cmc
xchg
push
insb
cmp
das
jmp
adcb
icebp
mov
ret
pushf
xor
test
adc
fsubs
popf
cs
cmp
jb
mov
sub
sub
bound
jg
mov
mov
sbb
jp
sbb
mov
mov
add
mov
outsl
mull
enter
push
xchg
sub
pop
dec
repnz
stos
or
jns
std
test
repnz
out
and
test
mov
dec
mov
push
cli
stos
loopne
xchg
dec
in
xor
xchg
cs
mov
xor
out
fsts
pop
lea
fdivl
mov
or
add
mov
sbb
jge
xor
inc
jnp
dec
fisttpll
inc
pop
dec
and
pop
popa
shlb
cmp
enter
mov
xor
push
and
pusha
lret
pop
pop
push
fisttpl
add
je
sub
xor
xchg
inc
sbb
xor
mov
icebp
pop
inc
aaa
or
and
pop
js
mov
sbb
adc
mov
pop
xchg
or
pop
fabs
adc
lods
lods
inc
push
repz
lods
out
adc
mov
and
lret
fstpt
imul
add
bnd
add
mov
dec
js
divb
ljmp
sti
out
ljmp
xor
daa
sbbb
add
jo
push
adcb
jecxz
mov
xchg
out
adc
enter
pusha
xor
mov
or
xchg
arpl
adc
cmp
ficoml
push
mov
sbb
mov
jl
push
add
jns
and
adc
sbb
fwait
mov
or
clc
out
add
stc
es
fnstenv
mov
je
push
aad
xor
test
daa
jmp
xchg
data16
out
les
mov
lret
lea
enter
sbb
cmp
xchg
cli
bound
and
jmp
inc
rcrl
cmc
sbb
sti
jmp
pop
jae
lds
cmp
data16
lret
inc
scas
mov
dec
dec
xor
push
sti
movsl
add
lret
jle
out
stc
or
or
cld
aaa
popf
sub
test
insl
nop
mov
inc
jbe
mov
ds
pop
fs
test
popa
mov
stos
cmp
inc
fs
cmp
inc
cmpsl
andl
jae
ror
adc
push
test
cmc
jmp
pop
ficoms
mov
icebp
adc
mov
shll
lcall
lea
jmp
xor
ss
add
nop
push
jmp
jg
loop
mov
scas
pop
adc
add
mov
inc
cmp
repz
xchg
cmp
loop
xchg
pop
jg
cmp
sub
xchg
xor
or
sbb
ljmp
mov
xchg
add
jne
pop
mov
nop
add
in
sbb
ret
loop
inc
roll
push
ffreep
sbb
divb
fidivrl
cmpsl
adc
loope
pop
insl
fmull
adc
push
stos
or
xchg
test
mov
xor
hlt
pop
sbb
pop
and
icebp
mov
dec
in
mov
cs
mov
add
popf
aas
jne
sbb
icebp
and
push
sti
scas
out
rclb
pop
outsb
fisttpl
mov
sbb
lcall
shr
repnz
mov
mov
ror
out
cmc
test
add
lock
push
insl
jecxz
or
lods
add
mov
push
mov
fcomps
jl
stos
cltd
add
lret
test
sahf
or
test
out
inc
das
xor
in
sbb
mov
mov
mov
sbb
lods
mov
and
cmp
adc
lret
xor
flds
push
stos
sbb
xor
int3
clc
and
shr
lcall
cmpsl
cmpsb
bound
sub
std
rcl
inc
jbe
sbb
insl
add
call
add
cmp
aad
scas
xchg
loopne
cmp
jno
push
push
mov
xchg
out
dec
xchg
xor
cwtl
dec
pop
or
lea
xchg
mov
iret
adc
push
inc
test
out
xorb
pop
out
xor
mov
xor
pop
jne
scas
std
aam
fsubs
mov
pop
arpl
test
or
out
jl
aas
ucomiss
lods
aas
shrb
dec
or
fidivrl
adc
into
or
imul
mov
mov
inc
or
lods
je
inc
xchg
ffreep
jg
xlat
rcl
aam
out
or
call
stos
mov
pop
mov
nop
inc
lret
clc
cmpsb
xchg
mov
loop
das
or
aad
jbe
inc
sbb
or
cmp
mov
jle,pt
ja
mov
xor
pop
mov
lods
pop
popl
push
in
add
xor
or
sub
pop
shld
flds
call
rorb
push
dec
pop
ss
addl
stc
aam
mov
fs
sub
cmp
jnp
jle
inc
mov
push
cli
cmp
rol
in
loopne
push
add
xor
jmp
pop
scas
dec
sbb
aad
fadd
mov
stos
jo
fcoml
pop
jge
pop
xor
sub
cmp
das
jp
std
mov
orl
addr16
sub
push
ds
bound
push
sarl
mov
gs
xor
adc
jns
call
mov
movsl
test
push
js
hlt
adc
out
inc
pop
mov
xor
sbb
in
scas
aaa
adc
nop
out
fdivs
fistpll
pop
xlat
jb
mov
inc
frndint
xchg
cmpsb
ret
pop
jbe
daa
addl
mov
push
jb
adc
scas
mov
dec
push
rcrb
cmpsl
xor
add
loopne
adc
stos
ljmp
or
sbb
adc
jle
cwtl
mov
insl
faddl
mov
xchg
cmp
sbbl
sub
icebp
add
mov
adc
inc
pusha
push
cmc
sbb
cmc
mov
push
and
imul
scas
gs
pop
adc
insl
xor
mov
sbbb
repz
das
lods
xor
decl
rcrl
in
mov
dec
fwait
mov
mov
clc
and
and
repnz
call
push
mov
mov
add
movsl
test
fwait
leave
jmp
cmp
in
add
loope
jbe
xlat
aas
lcall
inc
jb
jp
cmpsb
addr16
xchg
jp
inc
add
xor
rcr
in
testl
mov
int3
fmull
fdivl
and
mov
xor
mov
cmp
mov
xchg
mov
jp
push
push
add
outsl
or
sahf
adcl
punpckhwd
adc
rcll
aas
dec
hlt
ljmp
push
icebp
pop
sub
adc
cmpsb
das
or
mov
ret
mov
pusha
jl
fildl
ljmp
cld
push
notb
movsl
push
outsl
cld
push
mov
xchg
mov
adc
pop
dec
cmpsb
pop
leave
les
xchg
cmc
inc
mov
jg
repnz
gs
sub
cmp
push
shlb
nop
inc
xchg
cmp
inc
mov
and
mov
fwait
push
push
xor
imulb
mov
adc
pusha
add
mov
sbb
push
xor
fs
xlat
psadbw
cs
popa
test
sti
setge
dec
dec
sahf
or
adc
add
stos
fcomi
push
int
xchg
xor
mulb
inc
into
adc
dec
cli
jmp
cmpb
fwait
and
addl
rcrl
adc
fsubrs
scas
push
bound
xor
mov
pop
add
inc
cld
icebp
jae
stos
js
and
aas
inc
xor
sub
or
mov
lcall
subl
mov
jo
xchg
and
pop
jp
popf
pop
cmp
mov
rorl
inc
mov
cli
cmc
stos
fdivs
jg
mov
dec
inc
jge
imul
lods
inc
mov
popa
popa
mov
push
mov
pop
lret
xlat
dec
add
lock
mov
dec
cwtd
pushf
iret
push
push
push
sahf
or
dec
rclb
addr16
hlt
fldl
xchg
rorb
add
repz
in
cmpsl
xor
stos
cs
enter
pop
or
movsb
cld
cmp
add
into
push
orl
iret
imul
xchg
out
mov
stos
mov
add
rclb
dec
hlt
fs
aaa
int3
aam
mov
ss
ds
pop
lret
adc
enter
iret
mov
out
test
mov
aam
mov
movsl
stos
push
icebp
out
push
jne
in
fwait
mov
or
imul
jno
call
loope
mov
insb
jmp
mov
cmpsb
push
pop
mov
jg
inc
inc
sbb
aam
mov
xor
cmp
xchg
jo
pop
insl
insb
lods
adc
cmp
xor
scas
sub
xor
jae
and
mov
mov
sub
sbb
add
add
mov
or
gs
xchg
sbb
adc
push
insl
pop
mov
pmulhuw
add
push
subb
jmp
popa
mov
jb
lods
incb
aam
stos
inc
popf
test
fdivrs
sub
es
push
dec
xchg
dec
jle
xor
arpl
movl
dec
and
xorl
fprem
insb
or
mov
ss
ret
add
inc
cmp
and
xchg
rolb
repz
mov
add
sub
iret
rep
rol
sbb
adc
jecxz
dec
dec
loope
in
scas
mov
ja
cs
cmp
aad
call
int3
jecxz
jp
outsb
inc
pop
jle
mov
sbb
sbb
test
fstp
dec
jnp
mov
scas
adc
test
insb
xor
das
popa
cmp
or
das
pop
push
lgdtl
into
xchg
xlat
cs
je
mov
cld
movsl
stos
pop
push
mov
xor
lds
or
push
das
push
mov
jb
lods
cs
test
ds
sbb
mov
loop
adc
fwait
cs
jns
into
fistpl
sbb
shll
cmp
add
into
mov
adc
popf
scas
pushf
test
aaa
lret
subb
mov
xor
xchg
insb
lds
mov
xchg
arpl
test
push
dec
push
addr16
sub
fwait
loop
mov
adc
movnti
push
xchg
mov
iret
push
insb
mov
aad
push
out
pusha
in
inc
adc
pop
sub
and
cmp
dec
aam
jnp
push
add
movl
es
cli
or
hlt
pop
xor
jns
sarb
sarl
dec
rorl
int
std
out
or
rclb
jns
fnstenv
mov
adc
push
cmc
mov
mov
mov
or
insl
sub
stos
ljmp
pop
xor
push
xchg
push
movsb
sub
push
and
jle
mov
cmpsl
jbe
xor
int3
aam
push
mov
fucom
mov
arpl
cmp
or
addr16
int3
jl
mov
jg
sub
test
mov
adc
lock
dec
xchg
sub
or
stc
repnz
je
inc
push
jae
push
icebp
mov
xor
sub
testb
xchg
arpl
pop
ret
jae
fadds
fstpt
push
cmp
pop
lcall
sbb
dec
stos
inc
aam
push
xchg
loopne
jo
daa
test
lahf
xlat
push
dec
adc
push
sahf
adc
outsl
pop
sti
nop
xchg
rorb
shlb
imul
sbb
nop
and
mov
loopne
out
in
sti
fwait
xor
bound
sahf
in
dec
push
lods
test
sub
xor
push
mov
inc
jg
outsl
icebp
push
data16
push
pop
sbb
fdiv
and
stc
aam
inc
loop
or
scas
mov
lret
aas
jg
dec
jge
fcmovb
xor
mov
mov
jg
push
aaa
sub
clc
xor
daa
push
pop
or
mov
lea
push
add
rorb
push
outsb
jp
mov
shlb
loop
sub
sub
out
xor
mov
mov
cmpsl
enter
arpl
nop
dec
movsb
cmp
mov
mov
addr16
pop
inc
cmpsb
roll
sbb
out
sub
ds
add
orb
xorb
pop
sub
or
std
stc
test
add
fs
mov
push
mov
pop
mov
mov
bswap
data16
ss
gs
pop
mov
jne
outsb
cltd
scas
sbb
xor
inc
mov
and
jns
faddp
dec
push
bound
jmp
mov
xchg
fs
mov
sbb
add
inc
into
jo
adc
stc
adc
inc
stos
or
sarl
out
lcall
divl
sbb
test
ficomps
movsb
rcrb
push
cmp
xchg
out
inc
mov
mov
sbb
xchg
or
push
xor
adc
addr16
adc
scas
push
push
or
cld
sarb
mull
fs
shrl
pop
jecxz
js
pusha
jmp
jne
cs
jb
les
xchg
in
pop
hlt
repz
ds
mov
arpl
nop
loopne
stos
dec
stos
fidivl
push
stc
mov
out
movsb
in
pop
sbb
mov
push
lahf
mov
push
xchg
ss
call
sbbb
cmp
mul
test
cltd
loope
xchg
ficomps
push
addl
lcall
and
adc
mov
cmp
xor
sbb
xor
jae
pop
orl
out
inc
out
pop
jne
out
cmp
insb
pop
adc
sbb
xchg
pmaddwd
sbb
mov
enter
sub
mov
test
jnp
jae
lock
outsl
insb
sbb
xchg
scas
ficoms
fisubl
scas
lahf
fstps
xchg
push
shll
xchg
mov
or
test
add
mov
pop
push
pop
decb
repz
and
imull
test
mov
mov
dec
sub
add
jnp
xchg
pop
movl
sub
mov
in
test
fists
dec
push
jnp
add
inc
mov
fcoms
jecxz
ss
into
pop
lds
ss
cmp
aad
daa
dec
aad
mov
stc
test
push
mov
xlat
inc
fstpl
mov
and
dec
mov
lahf
pop
jmp
mov
add
fnstsw
stc
fdivrl
inc
adc
xor
pop
mov
xchg
mov
sbb
test
fdivrp
mov
fdivrp
int3
cmp
dec
cmpsl
sub
pop
stc
inc
push
cs
mov
or
enter
cmpsb
popf
icebp
je
push
lret
in
xor
es
sub
lods
or
lods
jns
xchg
jecxz
lock
mov
cmp
in
pop
mov
insb
xor
aad
cmpsb
loopne
pxor
add
fcomps
rorb
xor
hlt
jmp
xor
dec
movsb
push
push
bnd
xchg
sub
aad
sub
push
imul
xchg
test
xor
dec
dec
xor
inc
jae
ret
push
jmp
xchg
pusha
cmp
les
fisubl
ljmp
adc
cmpl
or
outsl
mov
push
add
push
adc
cmp
jo
loope
xor
jle
add
stos
or
out
jno
mov
rorb
jnp
adc
loopne
inc
in
push
mov
xchg
jmp
mov
pushf
dec
imul
in
mov
scas
test
mov
cmp
mov
cmpsl
adc
or
orb
jg
outsl
mov
dec
cmp
sub
std
scas
jmp
mov
pop
out
movb
cmp
daa
aas
lods
fdivl
mov
rcrl
fwait
sub
xor
add
hlt
fisubl
aad
out
icebp
int3
bound
daa
je
icebp
fisubrl
inc
pop
and
or
loop
mov
push
push
push
pop
mov
push
nop
sub
and
pop
xor
aaa
rcrl
or
push
lahf
sarb
jle
sub
in
movsl
dec
pop
mov
sahf
push
cmp
dec
xor
icebp
stos
jmp
lcall
iret
mov
push
movsl
js
xchg
xchg
ljmp
dec
testl
inc
dec
adc
push
mov
mov
mov
insl
and
pop
in
clc
incl
sub
and
xchg
sbb
addr16
inc
rcrl
pop
xchg
rcrl
lea
fnstsw
jmp
push
xchg
les
pop
into
sar
shrb
sub
or
aad
bound
ss
cwtl
jne
pop
or
or
inc
xchg
mov
icebp
sub
mov
cmp
fnstenv
xchg
xchg
jne
testb
outsl
push
movsb
or
loopne
stos
mov
jbe
cmp
mov
cmp
push
mov
loopne
or
mov
daa
push
jo
aam
in
iret
push
idivl
pop
js
hlt
fistps
pop
or
lds
inc
xchg
dec
push
cmpsl
push
jo
and
lock
mov
movhlps
dec
pop
jb
xchg
sbb
loop
mov
pop
test
lods
cmp
mov
add
shrl
xchg
inc
add
leave
sbb
push
dec
icebp
sbb
push
sub
sub
fwait
sub
movsb
fsubrs
inc
iret
movsb
mov
mov
or
jae
popf
inc
inc
xor
popf
shlb
loop
xchg
mov
clc
push
shlb
jnp
adc
cmp
loope
dec
fwait
arpl
arpl
cmp
addr16
int
sub
jmp
xchg
xchg
sub
xchg
mov
add
lea
adc
icebp
pop
ljmp
pop
mov
clc
ficomps
icebp
xchg
sarb
lret
pop
pop
or
ds
sub
cs
insb
fbstp
inc
stc
mov
pop
dec
adc
cwtl
test
mov
out
add
jo
lods
loope
or
outsl
scas
push
or
pop
pop
xchg
inc
int
aam
xor
aad
std
lds
ja
xchg
loope
push
nop
cmp
stos
lock
dec
enter
in
loop
mov
and
sarb
mov
xor
cwtl
xor
popf
sbb
mov
mov
pop
movsl
fcomps
and
xchg
adc
cwtl
movsl
lds
push
xchg
cmp
add
into
xchg
mov
jge
in
jmp
mov
in
bound
scas
and
fists
ljmp
fidivrl
repz
push
inc
push
hlt
ret
mov
push
pop
mov
fucomi
push
push
mov
or
jnp
and
push
jnp
in
pop
push
adcb
out
jns
xchg
dec
mov
fisttps
aam
dec
ret
sar
mov
pop
pop
imul
fcoms
les
xchg
das
or
insl
fsubl
movl
sbb
movsl
push
loopne
lock
out
fsubp
testb
add
cmpsb
add
or
lahf
movsb
cmp
mov
mov
idivb
insl
fs
xchg
or
cmpsl
fnstcw
lcall
sbb
gs
inc
pop
cmpsl
mulb
dec
and
cli
jns
ds
adc
out
in
shl
lret
jp
mov
xchg
insl
loopne
mov
adc
outsl
push
arpl
pop
sbb
rcrb
and
fadds
in
xor
stos
enter
cmp
jo
xchg
inc
and
dec
pop
sub
ja
xchg
mov
xor
dec
repz
inc
loop
jno
inc
xchg
cmc
sbb
loope
push
cmpsl
mov
push
outsl
test
dec
rorb
push
insb
xchg
mov
fs
or
imul
mov
pop
imul
mov
popa
inc
sub
sbb
or
push
sarl
mov
lahf
popa
dec
ss
cwtl
cmp
ret
dec
mov
cmp
xchg
hlt
loope
fadds
test
lock
ljmp
arpl
lods
dec
cmpsl
xchg
mov
stc
and
xchg
sub
pop
cs
cmpsw
inc
push
push
mov
xchg
jg
roll
pop
pop
mov
cltd
pop
xchg
cmp
sahf
js
test
inc
or
and
mov
sbb
push
out
lahf
lret
dec
daa
xor
xor
adc
lock
test
and
mov
mov
adc
xchg
call
aam
test
js,pt
leave
xchg
daa
mov
jb
stos
adc
mov
xor
mov
pop
sbb
std
fcomp
inc
test
lret
orl
lods
adc
sbbb
cwtl
push
fst
mov
out
fwait
and
push
lods
inc
jp
xchg
xor
pop
adc
push
push
stc
sbb
xor
inc
pop
mov
or
bound
js
sub
fwait
xlat
lret
popa
adc
popa
pop
ret
out
clc
stos
cs
adc
ret
cltd
addb
popf
cs
imul
mov
nop
xchg
stos
aam
sub
mov
leave
shl
mov
and
shrb
jb
adc
mov
out
jne
sbb
xchg
jns
sbb
jns
and
daa
mov
scas
sub
fldl
enter
jb
xor
jl
cmp
mov
int3
sahf
sbb
mov
mov
push
js
sbb
mov
sub
mov
mov
mov
scas
pop
xchg
and
addb
mov
test
or
adc
push
leave
divb
push
test
psraw
mov
adc
xchg
inc
mov
dec
lock
pop
jge
push
and
outsl
shlb
pop
inc
xchg
ret
add
daa
and
in
push
ds
jbe
lds
inc
sbb
cmpsb
mov
fs
test
bound
xchg
or
fists
in
shrb
shll
inc
daa
insl
testl
adc
cmp
mov
xchg
or
lock
gs
jb
popa
dec
inc
popf
pop
test
loop
and
lret
iret
addb
nop
pop
mov
push
jg
movsl
cmpsl
jb
jmp
loope
lea
or
in
lcall
adc
dec
xchg
or
push
xchg
dec
inc
jl
enter
jno
xchg
inc
lcall
xor
inc
or
mov
inc
insb
imul
push
jg
test
push
int
std
xor
lods
cmp
clc
cmp
adc
scas
fcom
fcomp
push
or
adc
cmc
pop
inc
jne
fiaddl
out
jae
xchg
jno
dec
les
insl
lcall
and
mov
lods
or
xor
jmp
pop
test
je
lock
push
and
lret
inc
cmp
sbb
xor
mov
jno
ret
fistl
mov
xchg
stos
les
sub
cli
shl
adc
mov
mov
into
mov
dec
mov
sbb
iret
aam
aam
sub
imul
add
pop
mov
push
addr16
adc
fdivr
or
stos
bound
sbb
ret
mov
add
pushf
or
jo
stos
call
jge
xchg
mov
fs
jecxz
lods
dec
push
and
jo
ror
dec
dec
rcl
push
stos
mov
inc
iret
icebp
call
fucomip
aaa
push
popa
stc
je
push
aaa
loopne
cmc
cmp
pop
fnstcw
jle
pop
or
jmp
mov
inc
int
cmp
cs
lret
mov
pop
cmpsb
les
mov
inc
push
js
mov
xchg
inc
adc
popf
xchg
add
push
inc
dec
inc
mov
shlb
mov
rorb
nop
push
les
rcll
aaa
lds
scas
and
pop
mov
jae
or
test
fldt
dec
add
test
adc
mov
sbb
inc
js
rcll
orl
or
adc
cltd
push
dec
adc
dec
push
clts
mov
inc
mov
add
xor
and
cmpsl
lock
ds
jbe
dec
sub
out
adc
inc
pop
lock
adc
mov
jne
or
sbb
push
xor
movsl
xchg
add
cmpsb
loopne
ds
ret
push
jo
adc
ret
clc
sub
dec
jne
cmp
popf
addr16
repnz
out
hlt
clc
pop
ret
adc
cmp
push
pop
call
xor
sbb
push
mov
mov
enter
pop
aad
mov
cmp
scas
and
dec
xchg
and
mov
call
or
loop
mov
or
sbb
jnp
andl
mov
adc
repnz
aad
addr16
sarl
or
popa
rolb
cmp
sbb
adcb
jp
in
mov
roll
imul
sbb
cs
shlb
add
mov
in
roll
pop
push
dec
repz
or
push
dec
pop
xchg
xchg
inc
add
ds
adc
dec
xchg
push
imul
pop
add
fcomps
push
arpl
mov
sub
insb
push
std
aaa
lret
mov
outsb
enter
sbb
cmp
sbb
in
pushl
fwait
fs
sbb
rcrl
xchg
lea
cmpsb
sbb
push
dec
sbb
repz
js
mov
sbb
lods
and
movsl
je
sbb
or
inc
out
rol
scas
mov
shrb
cmp
pop
orl
sbb
pop
adc
fwait
jo
xor
je
divl
aad
arpl
and
arpl
rorl
call
das
jne
cmp
xor
adc
mov
mov
inc
jo
rcll
iret
xchg
ret
ret
stos
pop
pop
or
mov
out
push
hlt
cmc
imul
or
out
or
outsb
pushf
mov
stos
pop
sbb
or
mov
ja
addr16
imul
outsl
mov
mov
adc
and
inc
mov
adc
xchg
into
jg
gs
jb
int3
jnp
push
imul
add
movsb
fadds
xor
int3
leave
stos
ds
stos
fdivs
add
imull
pop
and
pop
icebp
jbe
xchg
cmp
xchg
push
ret
mov
scas
pop
jg
sub
sbb
jae
imul
sarl
loop
bound
in
jb
mov
pop
dec
mov
mov
push
adc
or
notb
push
and
icebp
dec
inc
cli
sbb
loop
cmpsl
mov
fistpll
cld
xor
xlat
mov
jge
hlt
aad
iret
mov
sete
sti
aaa
scas
das
lret
cld
shrb
jecxz
loope
push
or
fnsave
lret
pushf
xor
out
push
pop
popa
test
mov
lods
mov
mov
mov
stc
xor
jp
jbe
push
dec
leave
cs
lret
jmp
notb
js
loopne
xor
sub
mov
xlat
insb
sub
jb
cmp
or
xor
stos
sbb
cwtl
dec
insl
mov
adc
repnz
ds
std
mov
and
xchg
subl
les
pop
fdiv
cmp
adc
imul
jnp
dec
inc
sahf
notl
xor
mov
sub
test
push
pusha
or
ret
mov
hlt
insl
fadd
lds
xchg
imul
mov
aam
ret
int
jb
mov
rcrl
int3
das
mov
xchg
jnp
xor
js
pop
inc
pop
mov
scas
fisttpl
mov
shll
jecxz
out
mov
add
dec
popa
inc
jp
std
frstor
mov
inc
mov
push
mov
in
pop
pop
and
movsl
int3
insl
push
pop
mov
orb
push
xchg
loope
out
jno
jecxz
fisttps
add
adc
pop
xor
int
xchg
fistpll
cmpsl
in
fs
pop
ds
mov
in
clc
fs
xlat
ljmp
inc
aas
cmp
repnz
xchg
sahf
xor
pop
push
push
and
add
fmulp
or
jbe
or
or
pop
pop
mov
mov
jmp
cltd
pop
jge
sub
xchg
daa
cmp
ja
push
je
addl
inc
inc
fisttpl
ret
nop
and
pop
mov
adc
mov
lret
loopw
and
cmp
inc
mov
xchg
nop
iret
movsl
jge
loope
mov
jne
sets
cmp
cmp
xorb
ja
dec
mov
std
mov
dec
mov
stos
incb
inc
out
call
xor
xlat
dec
sbb
mov
stos
cmpsb
test
mov
dec
loop
inc
cwtl
rcr
lea
inc
pop
cmp
int
jle
mov
pop
cmp
repnz
jae
xor
sti
adc
xor
adcl
xor
mov
mov
nop
nop
lea
or
movsb
idivb
sbb
iret
push
icebp
dec
sub
mov
sub
xor
scas
fldcw
jo
sbb
sbb
mov
pop
dec
dec
xchg
aad
pop
bnd
mov
cs
jnp
sbb
lret
filds
jbe
or
pop
cs
mov
push
cmpsl
inc
int
test
addr16
cmp
or
push
xchg
lahf
movsb
shl
mov
stos
cmp
dec
cmc
xchg
btr
mov
add
jge
cmp
sub
in
mov
sti
cmpsb
orb
push
clc
cli
jae
mov
std
test
inc
icebp
jbe
icebp
jecxz
sub
jae
bound
loop
push
or
in
je
andl
cmp
addr16
push
sbb
mov
ror
or
xchg
mov
emms
pop
fisttpll
pop
jmp
fwait
push
lods
jb
dec
jbe
rol
push
add
sti
scas
add
sub
and
pop
imul
pop
or
cmp
mov
dec
test
sbb
andl
movsb
adc
daa
xchg
mov
xchg
cmp
sbb
jae
lock
enterw
fbstp
int3
jne
adc
push
cmpsl
jp
jge
pop
aas
rcl
mov
inc
mov
mov
icebp
mov
incb
cmpl
pushf
shr
or
xlat
jmp
pop
mov
jae
out
lock
dec
imul
mov
mov
and
jg
inc
mov
push
pusha
test
dec
aas
js
and
ds
out
pop
mov
jle
cmpsb
mov
mov
nop
xchg
into
mov
jge
jge
xor
aas
mov
loop
mov
std
imul
jecxz
sub
dec
or
aad
lahf
ret
call
and
fucomip
insb
dec
push
repz
inc
std
int3
push
jmp
add
out
mov
fwait
push
mov
or
shlb
popf
ja
lea
mov
fwait
xchg
fwait
mov
cmp
xor
lea
or
les
bound
sbb
adc
not
jnp
sbb
or
repz
inc
xor
loopne
pop
std
ror
cmp
iret
out
xor
cmc
cmp
in
outsb
test
ds
add
stc
lret
stos
movsl
lock
clc
fmull
push
fstl
mov
mov
stc
stc
jns
and
movsb
cmpsb
addr16
aad
ja
test
in
sub
aad
jmp
mov
push
sub
loope
pop
add
cmp
sbb
movsl
cli
mov
push
aaa
fdivl
mov
enter
outsb
and
mov
lock
out
int
repnz
dec
test
icebp
adc
daa
out
mov
cmpl
jl
xchg
push
add
mov
cltd
lods
cmp
fistpll
or
pushf
test
adc
adcl
mul
push
outsl
sar
call
mov
addb
outsb
leave
or
and
dec
cmp
and
movsl
loop
cmc
cmc
ret
cmpsb
xor
pop
fcoms
and
ror
inc
adc
push
cmc
arpl
nop
jl
jae
out
sahf
fisubl
lock
pop
lret
jl
cmpsl
add
push
lods
add
out
cmc
lahf
jmp
inc
fcmovnu
xchg
xchg
cwtl
xchg
mov
adc
out
push
lret
add
dec
push
in
ror
push
enter
jb
rclb
xor
adc
dec
std
xchg
subl
adc
cmp
mov
pop
sub
adc
fs
adc
adc
and
sbb
inc
adc
jmp
mov
push
ljmp
push
and
out
cmpb
xlat
fsubs
push
adc
cmpsl
cmp
and
inc
jne
push
lret
outsl
inc
mov
jns
in
and
ja
sar
or
popa
mov
adc
imul
xchg
jno,pt
cmp
and
mov
je
add
daa
and
push
adc
out
pop
inc
adc
sarb
cs
addr16
push
popa
cmp
pop
mov
or
lds
pop
adc
out
xchg
leave
xchg
stos
jnp
push
jp
push
jno
inc
mov
inc
or
std
adc
sbb
int3
mov
and
mov
fnstsw
mov
data16
cmp
addl
sbb
jmp
inc
mov
sub
ror
push
xlat
adc
xchg
adc
fsubr
adc
loope
addr16
pop
jg
mov
out
sbb
je
add
xchg
scas
dec
sbb
fcompl
lcall
cwtl
xor
mov
dec
imull
ja
pop
das
repnz
pop
xchg
lahf
cs
loop
insl
cmp
cmp
jmp
and
jmp
adc
lea
jae
adc
mov
rcr
cld
popa
movsl
cmp
cmp
dec
pop
cmp
test
push
adc
sbb
xchg
out
aaa
js
pop
xchg
push
int
nop
hlt
and
fidivrl
cld
dec
daa
icebp
hlt
inc
in
clc
adc
dec
mov
and
lcall
pop
testl
sbb
das
mov
shll
cwtl
loopne
cmp
sahf
xor
and
jle
loope
mov
mov
sbb
adc
pop
jo
outsl
test
mov
dec
notl
mov
das
push
movsb
push
adc
adc
jbe
dec
jno
jp
add
xchg
lock
and
ja
insb
and
xchg
push
push
jo
insl
insb
pushf
lods
lds
inc
imul
cmp
in
mul
jae
mov
mov
fstps
push
dec
fistpl
sub
inc
add
inc
pusha
lock
in
bnd
inc
shll
pop
mov
sbb
xchg
dec
bound
repz
int
lret
add
dec
pop
and
jb
cmp
push
in
popa
icebp
jnp
cs
test
mov
mov
ret
notl
lea
xor
jmp
fildll
and
push
dec
and
lcall
cmpb
out
into
ds
cs
xchg
in
loopne
std
jne
mov
ror
push
push
jmp
rcll
adc
jmp
xchg
inc
mov
mov
push
mov
sub
push
mov
inc
lcall
insl
pop
fs
mov
les
adc
clc
insb
xor
adc
lret
int3
xor
pop
xor
mov
rcrl
xchg
fsubrl
dec
xor
dec
mov
pushl
jg
mov
shrl
lret
mov
cmpsl
and
dec
mov
bound
test
pusha
mov
cmp
jmp
cs
sti
dec
dec
add
push
repnz
loop
les
adc
or
push
add
clc
ljmp
jmp
xor
adc
lret
xchg
shl
loop
mov
test
inc
push
lahf
fisttpll
jg
or
ljmp
or
pop
pop
mov
dec
mov
pop
test
jno
and
cwtl
jmp
or
mov
or
mov
ja
sti
and
inc
lock
dec
cld
repz
push
xor
adc
out
add
ss
insl
shlb
pop
pop
cltd
sbb
pop
jne
fcmovu
test
mov
ret
mov
cmpb
and
les
arpl
adc
fistl
out
arpl
cmp
xor
sub
mov
stos
pop
push
and
mov
jbe
aad
push
out
push
fisubl
popf
out
aad
push
mov
push
push
sbb
add
fldl
fimuls
sub
fsubrl
ja
es
and
iret
gs
inc
cmp
fmul
or
mov
xor
jge
pop
shl
cltd
pusha
addr16
repnz
push
dec
in
sbb
lock
js
bound
add
push
int3
pop
adc
outsb
pop
jb
inc
adc
subb
std
mov
mov
push
cmp
mov
sbbl
fxch
int3
push
add
lret
push
test
jecxz
or
add
add
xchg
arpl
push
and
dec
data16
mov
insl
sub
out
add
adc
lods
push
push
xchg
mov
sub
jg
push
pop
iret
cs
or
mov
popa
outsb
inc
xchg
pop
mov
sbb
push
inc
or
push
dec
lret
adc
stc
loope
push
int
jge
push
and
ja
sub
lcall
int
push
icebp
aaa
add
push
xchg
fdivrp
push
daa
testb
gs
imul
out
cwtl
sub
insb
pop
lock
add
out
cmp
or
cltd
adc
and
pop
jle
stos
mov
push
loope
push
pop
or
dec
add
scas
push
lcall
stos
call
sub
xchg
pushf
addr16
adc
cmp
enter
inc
dec
stos
inc
mov
fs
xchg
sub
sbb
mov
sahf
jp
clc
lret
xor
xchg
jle
sub
movsl
xchg
jb
je
sahf
shlb
mull
leave
dec
xchg
imul
mov
mov
cmp
xor
mov
rorl
mov
xchg
lods
pop
data16
dec
mov
and
adc
mov
xor
or
aaa
adc
inc
push
xchg
neg
into
sub
add
iret
out
push
and
jecxz
popf
arpl
adc
xchg
or
xchg
rolb
or
jge,pt
mov
sbb
int
xor
fmuls
dec
jne
xchg
int
pop
mov
jb
push
outsl
cmp
fistpl
push
andl
mov
dec
lcall
xchg
sti
cmp
xchg
or
xchg
jmp
fsubrs
add
pop
lods
popf
call
push
pop
sahf
aad
popf
ljmp
mov
sub
rcrb
and
mov
daa
add
push
pop
dec
scas
fbstp
cli
in
out
jns
insb
rcll
es
xchg
jg
ret
mov
inc
fs
rorl
leave
mov
jb
jp
push
adc
dec
jnp
inc
or
daa
or
gs
jle
loope
cmc
ss
lret
pop
roll
jno
sub
mov
xchg
xlat
movsl
in
and
push
je
push
clc
lcall
jmp
jg
cmp
and
add
lret
imul
daa
jge
fstps
push
push
and
inc
add
rcrl
pop
vcvtps2pd
movsl
fcoms
sub
jg
xor
adcb
sub
ret
mov
fwait
jp
inc
or
fsubrp
jae
das
inc
arpl
repnz
dec
dec
aad
and
test
setne
add
mov
ret
movsb
lods
popa
daa
push
xchg
in
and
test
push
mov
negl
push
cmc
sbb
xor
lock
rcr
stc
jbe
ret
xor
push
shll
and
fwait
icebp
push
scas
inc
push
mov
dec
sub
inc
int
push
xchg
pop
pushf
adc
fwait
int3
jns
lahf
aad
mov
arpl
aaa
repnz
leave
sbb
inc
rcrb
clc
xchg
scas
test
out
or
popa
add
pop
test
push
and
dec
dec
mov
adc
push
sbb
adc
into
scas
mov
or
dec
inc
stos
pusha
pop
mov
movsl
and
inc
xor
stos
aas
xchg
pop
cld
lods
jne
mov
and
xorl
subl
and
or
pusha
push
aas
cmp
xchg
jno
and
std
insl
ret
popa
inc
shr
loop
push
jne
jbe
ljmp
cld
gs
xchg
xor
ss
out
xchg
mulb
pop
mov
add
loop
incl
scas
sub
in
xchg
push
mov
popa
push
sar
fsubrl
cmc
fcompl
inc
loope
add
cltd
imul
les
push
icebp
mov
adc
hlt
and
inc
mov
lret
jle
mov
jp
fstpl
mov
stc
pop
mov
lahf
stos
popf
mov
movsl
jbe
out
jo
jo
cltd
sbb
lea
and
add
push
or
add
jle
inc
pop
xchg
sub
adc
fidivl
cmpsl
or
cltd
xor
push
mov
sbb
out
in
ss
in
mov
mov
outsl
adc
or
cmpsb
ret
pop
cmp
mov
mov
test
pop
sbb
push
leave
inc
mov
push
roll
bound
mov
outsb
test
jo
xchg
out
sbb
lahf
ret
stc
loop
loopne
sbb
popa
pop
andl
jne
es
xchg
cmpsl
pop
jg
roll
nop
mov
push
sub
fsubl
int
mov
xor
dec
jecxz
psubd
dec
cmp
sahf
repz
outsb
or
push
mov
push
mov
sub
mov
or
clc
icebp
push
mov
adc
push
lret
adc
xor
pop
or
cltd
jns
sub
movsb
sbb
lahf
xor
shll
cli
rorb
ret
inc
notb
mov
cmp
sahf
xchg
mov
lret
xchg
popf
sahf
push
in
adc
fwait
add
xchg
dec
call
pop
out
sbb
repz
stos
imul
xchg
and
mov
imul
sub
mov
lcall
or
xchg
bound
pop
into
jecxz
pop
sub
sub
add
xchg
inc
adcl
pop
into
pushf
sbb
xchg
xchg
and
mov
adc
in
mov
mov
lcall
ljmp
lods
les
mov
mov
js
in
rclb
push
cltd
jbe
xchg
fstpl
int3
shl
cmpsl
ret
fistps
push
cmp
icebp
jae
rcrl
jmp
xlat
in
into
push
pop
dec
in
movsl
mov
aaa
inc
cmp
pusha
outsb
int3
adc
inc
fnstenv
pop
mov
fsub
fiaddl
cwtl
mov
inc
mov
fs
in
gs
nop
cltd
icebp
insl
gs
pop
push
and
jns
dec
pushf
fs
lock
scas
out
scas
xor
shlb
leave
aad
iret
cwtl
xor
and
cli
or
movsb
pop
enter
and
add
out
insb
mov
outsl
insb
add
add
sbb
mull
popf
inc
xor
or
jns
and
adc
lret
push
out
dec
xlat
mov
mov
test
in
cltd
push
data16
insl
pop
mov
pop
xchg
xchg
xchg
fbld
in
int3
xchg
push
mov
push
push
push
sub
add
andnps
iret
lods
cld
mov
mov
in
js
out
push
in
ss
fldcw
shrl
xlat
movsl
movsb
loop
dec
ja
xchg
push
sbb
pop
push
cmp
cwtl
xor
sbb
rcll
popa
sti
adc
and
xchg
je
and
mov
jns
loop
mov
mov
push
data16
fwait
loop
xchg
into
dec
cmp
mov
push
stos
out
clc
adc
out
divl
std
cmp
pop
insl
push
stos
dec
scas
add
ret
lcall
xchg
into
sbbl
add
test
and
test
adc
xor
notb
stos
fstps
add
sarl
jno
ss
sbb
fcomi
adc
push
loopne
std
mov
sub
jl
push
ret
fldcw
mov
into
gs
movsl
and
jno
add
pop
mov
jmp
pushf
push
dec
xchg
ds
pop
gs
in
pop
jnp
cmpsl
ss
clc
ss
mov
lods
xchg
pop
out
mov
dec
fstpl
push
inc
jnp
inc
push
repz
insb
inc
inc
mov
sbbb
jecxz
pop
repnz
add
movsl
dec
rcll
push
cmp
dec
pop
test
mov
fidivs
dec
jg
mov
sub
lock
mov
jb,pn
and
aaa
dec
mov
add
xor
mov
jbe
inc
add
out
inc
push
divl
in
sbb
arpl
xchg
cmp
jb
sub
in
test
sarl
loopne
inc
stc
mov
data16
cmpsl
lahf
lds
inc
xchg
or
push
push
adcb
cmpsb
xchg
adc
in
out
mov
out
or
call
fsubrl
mov
cmp
sbb
or
and
ljmp
xor
push
rorl
sti
gs
hlt
cmpsl
push
mov
orl
and
and
dec
jne
shl
or
mov
jecxz
pusha
cmc
mov
cmpl
loopne
xor
xchg
ja
call
cli
cmp
clc
outsl
enter
aaa
dec
loopne
jo
mov
leave
or
pop
push
loop
mov
adc
fiaddl
ret
lea
lret
push
sahf
jb
cld
cwtl
lock
in
and
cmp
add
xor
clc
xor
int
sti
movsb
loope
ja
xchg
and
popf
and
icebp
test
mov
out
movsb
dec
shrb
jbe
sbb
in
outsl
cli
mov
cmp
fsubrl
jb
dec
popf
jo
lret
jb
dec
test
mov
mov
rcrl
push
push
mov
jle
mov
push
push
jbe
jp
cmpsb
lret
xchg
mov
mov
push
xchg
fisttpll
movsb
into
jp
dec
sbb
insb
cli
cmpsl
sub
xchg
in
xor
lret
andl
cmp
jl
xchg
xor
enter
dec
cmpsl
xchg
imulb
hlt
adcl
in
cmpsl
fstp
mov
pop
cmp
push
fs
loopne
ficompl
sub
outsl
or
dec
aam
scas
add
adc
mov
mov
insb
scas
push
cwtl
xchg
jg
lcall
xchg
push
dec
les
sub
cmpsl
inc
mov
repz
xor
sub
lret
fisttpl
rolb
jae
cld
es
js
enter
cmp
adc
lock
lds
nop
inc
fadd
adc
adc
mov
push
jbe
xchg
mov
xor
pop
ret
pop
cmp
mov
icebp
cmp
and
mov
cltd
dec
jae
dec
fstl
mov
pop
xchg
les
push
fs
adc
lahf
xor
lock
sbb
or
in
and
cmp
out
lea
ja
int3
mov
sti
aad
fs
sbb
outsb
aas
call
leave
adc
cmp
cs
or
and
xor
cmp
lds
or
in
gs
iret
add
pop
or
cmpsl
inc
jecxz
dec
es
and
cmp
jae
sar
xchg
sbb
rcl
dec
pop
push
adc
ds
rclb
bound
shl
xor
jne
xchg
cmp
test
mov
or
mov
cmp
int3
xor
add
sub
pop
dec
jne
jae
mov
xchg
sti
inc
mov
jle
arpl
pop
push
fidivrs
push
je
test
inc
fists
iret
insl
out
lods
inc
das
out
lods
leave
pop
in
pushf
subl
lcall
in
lock
sbb
xor
incl
push
popa
xor
call
xor
je
mov
rol
incl
sub
ljmp
add
jae
rcrb
xor
aam
insl
jne
lcall
add
fldenv
ljmp
ljmp
data16
dec
push
push
mov
jo
call
das
push
sub
lods
iret
cli
leave
jno
xor
xlat
inc
sti
add
inc
mov
fidivl
mov
xor
add
das
jbe
lods
rolb
add
fs
pop
stc
fmull
std
scas
sbb
mov
jp
add
or
adc
punpckhdq
pop
ja
es
mov
jle
jp
bound
das
fisubs
mov
cmp
je
cld
bound
into
jmp
ret
pop
push
fdivrp
and
mov
dec
stos
or
imul
and
dec
push
and
test
insl
jo
push
bound
aas
mov
or
xchg
cmp
xlat
push
stc
pop
sarl
cmpl
adc
jae
xchg
pop
scas
popf
incb
and
adcl
mov
orb
cmp
sbbl
mov
sahf
jb
inc
icebp
int
dec
in
push
lock
les
add
push
dec
out
mov
loop
xchg
mov
sbb
push
sbb
popa
in
leave
push
js
lods
inc
pop
data16
lret
insl
mov
add
ret
jae
lock
jbe
pop
jecxz
pop
cltd
nop
jle
pop
enter
enter
movl
nop
inc
mov
gs
mov
xchg
add
xor
popf
pop
mov
adc
dec
or
inc
or
mov
mov
ficompl
fs
adc
bound
cld
test
nop
ret
cmpsb
mov
stos
imul
dec
or
popl
pop
dec
loop
cmpsb
dec
dec
xchg
sub
sbbl
imul
notb
stos
testl
inc
inc
movsl
in
or
ja
push
mov
arpl
stos
dec
scas
fcomi
ret
lods
mov
mov
xchg
das
and
jo
pop
ds
jb
pop
rclb
dec
inc
call
insb
xchg
xor
sbb
adc
imul
sub
inc
cmpsb
dec
inc
pop
lret
mov
les
fnstsw
and
xor
mov
and
push
cmp
and
mov
test
es
cmc
sti
out
negl
jmp
pop
mov
pop
es
adc
lods
xchg
pusha
ret
xchg
sub
jp
cli
push
xchg
cli
lret
xchg
hlt
fcomp
sbb
or
fsts
xchg
stos
fcmovu
pop
mov
xchg
add
adc
pop
cmpsb
repnz
sbb
cmp
mov
test
fsts
xchg
push
xor
pop
push
push
sbb
mov
gs
cs
adc
lret
mov
popa
xor
int3
sti
and
sub
lods
xchg
cltd
shlb
icebp
mov
iret
xchg
mov
jbe
out
sub
inc
loopne
movsl
daa
rcrl
cmp
inc
jns
rol
sbb
dec
orb
mov
data16
mov
jmp
cli
xor
dec
shlb
aas
gs
sbb
shrl
inc
adc
or
sub
lcall
or
add
movl
add
test
rcrl
mov
jns
lock
inc
jns
inc
mov
es
jae
sahf
dec
xchg
aad
addr16
push
xor
mul
push
jge
jo
scas
xchg
adc
popa
or
in
mov
ret
aam
mov
xchg
mov
xchg
adc
outsl
pop
pop
pop
push
and
std
std
hlt
push
xchg
inc
adc
repz
jp
push
imul
mov
mov
cltd
fld
mov
das
in
repz
mov
out
mov
add
mov
jb
and
jle
jne
out
sbb
popa
pop
xchg
mov
cmp
dec
iret
sub
and
mov
xor
dec
xor
test
int
cmp
xchg
and
inc
ficompl
jmp
int
adc
mov
scas
add
fsubrs
push
jo
xchg
push
lahf
cmovg
sub
daa
xor
inc
push
jbe
pop
sub
jnp
rol
test
loop
push
sbb
into
jae
jge
cmpsb
push
nop
mov
sbb
pop
pop
loopne
mov
sub
xlat
or
in
jnp
push
and
in
cmp
int3
inc
inc
sbb
pop
push
lods
rcr
dec
sarl
pop
lods
adc
inc
sbb
insl
les
xchg
imul
movsl
cmp
mov
xor
in
mov
sub
jns
out
cld
and
enter
out
gs
rorl
sbb
test
jo
dec
lahf
cmpl
sarl
sahf
test
les
xchg
pop
adc
outsl
push
or
xor
adc
lret
js
cmp
sbb
js
mov
cli
aam
mov
mov
arpl
int3
jb
repnz
mov
xchg
and
sub
cmpsl
fs
popa
mov
rcrb
sub
push
jns
mov
imul
mul
cmp
sahf
push
jmp
ja
in
aad
movl
testl
sbb
cmp
dec
mov
gs
push
loop
imul
fwait
out
inc
mov
inc
call
adc
adc
jmp
push
in
shrb
xor
sti
fwait
sbb
and
mov
add
or
int
insb
mov
imul
sub
push
mov
dec
dec
sbb
call
sar
lahf
mov
iret
sub
add
mov
mov
lods
aam
push
mov
lahf
mov
divb
dec
mov
jb
xor
mov
daa
cld
mov
push
mov
test
inc
mov
scas
mov
popf
ds
push
mov
lret
sub
jmp
jbe
call
jle
inc
jmp
mov
jecxz
popf
xor
test
xchg
icebp
pop
pop
add
mov
mov
lahf
adc
gs
xchg
xchg
jge
cs
ja
mov
jns
adc
out
test
push
popf
movsl
jle
sbb
sub
mov
xchg
aas
mov
aam
loop
ret
fsts
loope
pushf
rorl
mov
xchg
adc
cmp
mov
xor
push
pop
cmp
push
lea
test
or
push
insb
test
lret
fwait
aam
push
sub
cs
loop
addb
outsb
stc
ss
std
loopne
bound
cmp
jno
xor
sbb
adc
xchg
in
fdivl
push
lock
out
cld
and
roll
dec
add
clc
sbb
push
cmp
in
sbb
push
cmpb
inc
clc
push
roll
mov
dec
repz
lock
mov
dec
imul
xchg
in
call
cmp
push
push
pop
shlb
adc
mov
outsl
push
pop
push
pusha
and
mov
mov
add
sbb
sbb
lds
mov
testb
mov
and
xor
sbb
dec
and
cmpsl
xor
ret
jl
mov
sub
xor
and
adc
and
cmpsb
fnstsw
popa
pop
sub
hlt
xchg
adcb
sbb
imul
jo
daa
icebp
outsb
xchg
out
xchg
pop
cmpsl
leave
jmp
cltd
sbb
pop
mov
mov
adc
inc
or
add
xor
sub
sbb
call
into
movsl
sahf
fmul
movsb
xchg
cwtl
or
adc
inc
insb
dec
test
cmp
fsqrt
iret
pop
lods
loopne
pop
mov
dec
fbstp
cld
mov
dec
xlat
lock
adc
mov
das
ljmp
xchg
aaa
jmp
xor
cmp
inc
inc
xchg
mov
lahf
sbb
add
idivb
outsl
out
mov
mov
sbb
popf
push
pop
addr16
or
adc
jae
ret
or
and
jno
xor
jge
pop
stc
adc
jno
mov
popf
enter
fmuls
xor
dec
movsb
enter
sbb
lret
and
and
add
xchg
pop
cs
mov
inc
cmp
xchg
dec
lods
and
lods
cmpl
gs
int
dec
nop
pop
int3
jo
cmpsb
dec
push
stc
push
popf
inc
ljmp
add
imul
ss
jne
jns
jbe
cs
rcrl
adc
in
std
mov
and
fdivp
cmp
sbb
lods
shlb
out
loopne
jae
sub
int
sbb
dec
cmp
push
push
cmpsl
or
std
adc
mov
push
lods
std
jnp
sub
movsb
push
mov
or
fstpl
lods
mov
hlt
iret
and
inc
jmp
int
movsl
jl
cmpsb
pop
insb
insl
lods
mov
adc
pop
mov
mov
or
adc
ret
scas
add
adc
test
or
loop
jns
std
hlt
add
test
add
test
fs
or
nop
repnz
adc
test
mov
js
call
xor
nop
es
pop
inc
mov
mov
jg
out
gs
iret
push
in
fisubl
mov
lods
or
int3
loope
popa
push
mov
jmp
in
push
cmp
inc
sbb
xchg
push
aad
pop
roll
std
pusha
insb
pop
stos
push
dec
inc
adc
jb
jno
xor
inc
push
imul
sbb
out
ja
and
pop
or
int
ret
mov
call
mov
jo
imul
mov
mov
lret
imul
mov
and
dec
movl
cmp
cmp
fisttpl
flds
dec
in
iret
outsb
mov
jo
sub
xchg
pop
popf
dec
xlat
and
loop
jmp
rorl
cmp
xchg
sub
mov
xor
in
shlb
sbb
or
sahf
pop
cmp
cld
sbb
ficomps
int3
rolb
xor
sub
aas
sub
mov
cmp
sbb
xchg
scas
icebp
rcrb
ror
or
outsl
add
dec
add
mov
ds
adc
pop
inc
ret
cwtl
stc
fwait
dec
rol
adcb
xlat
dec
cmpsl
out
mov
lcall
fldl
fs
mov
mov
ja
or
daa
cmp
clc
and
loop
push
dec
lock
faddp
mov
dec
repnz
movsb
and
mov
push
mov
mov
xchg
cmpsl
insb
lds
pop
scas
loopne
popl
adc
xchg
leave
je
push
jb
add
cmp
sarb
stc
and
xor
mov
test
push
pop
and
or
sub
fsubrs
addb
or
adc
cltd
dec
andb
jns
and
mov
icebp
rolb
insb
popf
adc
xchg
mov
lock
inc
sarb
clc
adc
cmc
and
pop
aas
popa
into
jns
cmp
and
repz
or
dec
jp
jno
add
jne
sbb
pop
ffreep
mov
sarl
sbb
jno
rolb
push
sbb
pushf
and
repnz
into
scas
arpl
xor
fstl
mov
test
push
jmp
pop
mov
inc
mov
mov
pushf
les
xchg
into
pop
popl
adc
cli
sub
jns
cmp
jns
mov
ja
add
popa
dec
fldl
jb
inc
call
mov
mov
pop
lds
mov
stc
insb
and
sahf
inc
xchg
push
shrb
repnz
xchg
dec
pop
xchg
push
int
mov
xlat
inc
push
out
xchg
xchg
xor
jecxz
pushf
or
inc
cli
popf
setg
sbb
in
lea
dec
jmp
movsl
xor
and
xchg
outsb
fisttps
stos
lods
or
mov
lcall
mov
icebp
jmp
dec
pusha
int
subb
outsl
jmp
les
push
push
enter
adc
sar
pop
cmp
scas
mov
fdivrs
jg
push
scas
and
rol
push
mov
in
sub
sti
scas
stc
sbb
xor
cmp
loop
sbb
and
and
sub
add
fisubs
ja
mov
mov
sbb
dec
test
lods
icebp
mov
pop
loopne
inc
sbb
ret
pushf
int3
dec
lcall
es
enter
xchg
call
in
mov
ret
dec
pop
into
or
mov
leave
mov
shll
jno
jg
add
cs
xor
jb
sti
pusha
in
pop
xchg
fsubp
and
jl
fcompl
sub
lock
ret
lea
dec
xor
dec
jo
push
sbb
adc
mov
and
movsb
mov
std
jmp
lea
fs
cmpsl
cmpb
cmpsb
int3
pop
add
add
add
shlb
icebp
xor
mov
mov
loopne
add
shlb
jb
cmc
jmp
roll
movsb
cld
test
sub
or
lods
stc
imul
xor
cmpsb
sbb
cmpsb
adc
push
scas
jge
or
in
lock
xchg
mov
or
in
pop
cmp
aam
lret
push
inc
cmpsl
stc
fnsave
pushf
jp
cmp
xor
je
stos
push
mov
xchg
or
aam
test
data16
pusha
xor
cmp
sbb
sbb
inc
mov
mov
mov
fadds
inc
pop
mov
inc
xchg
pop
lds
mov
pop
mov
add
outsl
push
xchg
movsl
cs
jbe
in
imul
mov
push
push
aam
out
dec
add
pop
sub
jle
ds
xor
lock
rep
xchg
std
xlat
in
inc
lea
inc
dec
dec
roll
mov
test
add
dec
inc
rcrl
mov
or
testl
sbb
mov
in
xor
jmp
lock
fdivr
push
nop
mov
add
xchg
adcb
inc
imul
popa
and
and
mov
pop
push
pop
jle
ss
out
fs
mov
pushf
sbb
xchg
inc
cmp
mov
test
test
push
xor
jno
xchg
call
icebp
inc
mov
mov
xchg
lods
in
ja
decb
call
mov
mov
xor
cltd
movsl
aaa
cmp
mov
cmpsl
enter
shlb
data16
clc
adc
adc
movb
out
sub
repz
sub
adc
cmpsb
shll
popf
cmpps
pop
mov
cmp
xchg
pop
stos
push
fcoml
loopne
xchg
cmpl
and
pop
fisttpl
unpckhps
push
arpl
and
cmp
loop
ljmp
pushl
test
push
jnp
pop
or
jo
mov
imul
mov
adc
mov
daa
pop
mov
dec
push
pop
push
mov
in
push
pop
loope
inc
outsl
es
out
adcb
adc
dec
pop
xchg
mov
push
or
mov
sbb
xchg
cld
cmpsb
lret
pop
test
ljmp
or
or
lcall
push
in
xchg
pop
std
cmp
xor
out
lret
fs
and
in
and
jae
jb
cmp
jle
cli
sub
out
sub
xchg
filds
pop
push
cmp
bound
inc
xchg
int
fdivrl
push
pop
arpl
gs
movsl
test
xchg
push
cmp
jbe
sbbb
idivb
pop
mov
fsubr
cwtl
into
in
jge
mov
add
test
mov
data16
es
push
xor
jle
pop
in
pop
jl
loopne
xchg
xlat
aaa
pop
mov
insb
in
or
inc
jle
test
arpl
mov
push
add
jnp
shrb
push
pop
push
xchg
mov
cmc
cmp
bound
insb
pushf
cltd
adc
dec
in
out
movsl
shll
idiv
fdiv
cwtl
outsb
les
aad
pop
mov
lods
cwtl
enter
or
pop
movsb
aaa
sub
xor
std
iret
jnp
fmuls
sub
popa
shl
or
or
dec
inc
mov
inc
jns
shll
add
add
popa
and
iret
inc
add
imul
test
inc
pop
inc
lret
mov
or
add
xor
inc
add
add
test
push
add
dec
cltd
mov
xchg
add
nop
lods
push
fnsave
pop
das
xor
xor
ljmp
movsl
cld
mov
xor
fwait
and
inc
pop
xor
pop
comiss
add
es
cmc
shl
jg
cmp
stos
cwtl
fcompl
subl
into
and
xchg
divl
sti
in
iret
sbb
and
and
mov
ret
sarl
pop
test
leave
ss
bound
jg
mov
dec
sub
popf
mov
repz
xchg
ret
dec
inc
movsl
das
movsb
and
ljmp
movsb
fbstp
js
ret
xchg
cmp
sbb
stc
cmp
add
rcrl
fistl
or
movsl
in
jecxz
mov
stos
push
test
pop
push
push
js
arpl
add
adc
jb
adc
dec
repnz
call
push
lret
addl
cmpsb
je
aaa
je
iret
inc
push
test
sbb
jbe
test
in
jge
xor
in
xchg
imul
test
ror
insl
pop
mov
and
mov
or
ss
pop
subl
or
and
fadds
mov
xchg
mov
fidivl
xlat
xor
push
mov
daa
shrb
add
cmpsl
in
jae
mov
jp
jp
outsb
mov
jle
pop
into
repz
fsubrs
gs
loopne
imul
and
je
inc
es
gs
dec
mulb
rcl
xchg
sub
sbb
mov
sbbl
lock
enter
sbbb
aad
leave
sahf
xstore-rng
cmpsl
inc
cmp
mov
adc
jp
out
lods
dec
imull
mov
push
push
movsl
mov
in
inc
sbb
fwait
adc
lods
insb
sbb
mov
jle
out
iret
xlat
repz
xor
mov
add
fwait
pop
call
call
bound
lods
mov
jb
inc
mov
cltd
ret
pushf
fisubrl
js
mov
sub
das
adc
mov
add
dec
push
mov
pushf
cmpsl
lds
rcl
sub
loop
mov
test
jle
adc
aad
add
test
cmc
pop
in
sarb
mov
mov
int
out
push
xchg
iret
add
mov
gs
pop
scas
mov
es
and
cwtl
or
dec
sbb
ret
repz
loopne
mov
ss
push
cmpsb
mov
jp
ret
lret
outsl
test
pop
push
lret
movsl
call
sub
lods
lahf
scas
push
mov
lcall
mov
pop
scas
loopne
dec
lds
cmp
xor
nop
xor
xchg
int3
inc
xchg
imul
cltd
imul
dec
bt
add
shlb
fwait
push
jmp
lahf
negl
imul
sbb
cwtl
cmpsb
fadds
mov
mov
dec
cmp
xchg
mov
add
cmp
movsl
xchg
popf
fwait
mov
cs
faddl
enter
xor
jne
mov
xchg
sbb
mov
in
vpmacssdql
xchg
or
shll
push
cwtl
dec
mov
je
mov
test
mov
inc
pop
test
cwtl
lahf
push
ljmp
stos
test
das
stc
jge
scas
cwtl
mov
arpl
insb
mov
and
push
mov
movsl
aaa
push
xchg
imul
mov
jbe
frstor
sbb
or
jnp
incl
mov
xor
xor
lods
scas
test
loope
fadds
or
icebp
cmpl
insl
mov
scas
fsubs
fs
fcmovne
pop
addr16
ja
push
aaa
cmp
mov
mov
lods
xor
popa
int
add
inc
jne
adc
lds
je
add
cmc
mov
aam
pop
mov
ficompl
iret
test
pop
xor
ljmp
sbb
in
or
dec
addb
push
test
inc
push
scas
add
cmc
mov
jno
fsubr
stos
movsbl
test
dec
rorl
dec
push
mov
outsb
and
xorl
loop
shl
mov
xchg
dec
xchg
push
imul
mov
add
in
roll
xor
pop
xchg
mov
es
aad
ret
adc
cmp
movsb
inc
scas
fucomi
mov
out
bound
ficoml
jp
sub
imul
mov
repnz
cmpsl
xchg
or
subl
scas
xchg
add
gs
fmull
pop
nop
sbb
adc
test
data16
stc
and
xor
cmc
test
pop
push
enter
pop
or
lds
call
mov
inc
jbe
xchg
pushl
xlat
or
push
pop
cmp
jecxz
or
out
cmp
cmp
sahf
aaa
adc
sti
loop
cmp
mov
sub
mov
xor
adc
inc
and
xor
ror
mov
mov
mov
xor
and
jnp
mov
aam
cwtl
lcall
into
cli
push
arpl
add
xchg
scas
and
fs
or
shl
xor
test
jecxz
jae
mov
ret
je
jg
mov
or
inc
arpl
mov
inc
scas
lahf
cmp
sbb
pop
enter
or
pusha
pop
xchg
repnz
push
adc
popf
inc
cmp
adc
pushf
xor
push
xor
xchg
jnp
test
add
push
insb
lods
scas
cmp
lea
jmp
mov
xor
adc
xor
adc
shlb
xor
inc
ljmp
lock
js
mov
xor
or
mov
xchg
cmp
xor
jno
fmul
dec
outsb
leave
or
push
ss
cmpsb
aas
mov
pop
xchg
cmp
pop
or
cmp
push
mov
xchg
gs
sub
aas
dec
cwtl
xchg
out
test
xchg
xchg
lcall
push
ljmp
mov
mov
inc
pop
jmp
shrd
push
adc
ret
cmp
adc
loope
dec
adc
mov
call
mov
int
shll
imull
sub
push
mov
mov
cmp
imul
dec
cmp
jnp
pop
dec
mov
cmp
adc
push
mov
andl
adc
sub
xchg
mov
inc
pusha
arpl
loopne
jnp
lock
mov
xor
loopne
imul
lods
push
loope
sub
int
divb
jnp
call
fsub
fnstcw
mov
add
hlt
cmp
sub
int
std
add
mov
pop
outsl
jns
and
test
add
jb
inc
roll
inc
cmc
leave
ds
push
inc
in
in
into
arpl
mov
test
loope
aam
arpl
sahf
nop
mov
fldl
je
fwait
jne
hlt
jbe
xchg
loope
mov
rol
cmpsl
and
pop
xor
xor
jbe
orl
int
dec
add
xchg
xchg
stos
scas
je
lods
insb
int
mov
nop
dec
sahf
and
outsb
cmc
mov
pop
mov
xor
pop
mov
cmpsl
push
and
cmp
lret
je
mov
dec
and
sub
add
test
mov
mov
mov
ja
and
filds
add
ficoml
jg
icebp
sbb
shl
or
dec
dec
lds
push
or
cmp
jg
sub
or
stc
int
fnstcw
insb
xchg
inc
adcb
mov
cmp
mov
test
push
lret
imul
and
es
add
mov
movsb
in
cmpl
push
int3
cltd
cltd
repnz
inc
js
mov
in
mov
jp
cli
outsb
adc
in
es
stos
sub
push
sbb
lret
imul
shl
ss
in
mov
nop
dec
xor
push
mov
clc
mov
push
pcmpgtw
mov
stc
or
mov
scas
lahf
mov
cmp
sbb
mov
inc
cmp
add
stc
mov
and
sbb
mov
xchg
pop
popf
movsl
mov
push
mov
notb
push
in
inc
mov
sub
imulb
loopne
cmp
push
xor
mov
mov
adc
int
and
adc
mov
jno
aaa
in
iret
xchg
sub
dec
in
add
out
mov
andl
test
jnp
jb
call
mov
sbb
sub
into
clc
addl
lret
out
insl
fimull
add
jnp
mov
mov
and
xchg
jp
mov
xlat
xor
sbb
push
outsb
and
inc
jge
inc
and
sbb
inc
rcrb
jge
divb
daa
jecxz
mov
out
mov
test
xor
push
cli
sarb
aad
push
dec
or
xchg
mov
mov
cmp
loopne
shlb
call
stos
mov
xor
add
lods
xchg
int3
imul
stc
or
or
in
sbb
cmp
cltd
xchg
pushf
and
adc
cltd
insl
cmp
lcall
andb
dec
or
sbb
and
dec
mov
mov
mov
lret
mov
aam
fmuls
loope
add
outsl
sbb
cmpsl
add
ficoms
jno,pn
ffreep
data16
inc
adc
jb
sub
jge
adc
mov
pop
mov
or
xchg
daa
and
mov
popa
clc
xlat
pop
xchg
push
aas
lret
inc
lock
lret
xchg
jno
mov
bound
add
out
nop
sarb
mov
sub
inc
push
dec
mov
push
cmp
sbb
insb
jb
fwait
pop
fldenv
xlat
es
mov
inc
adc
addr16
push
sbb
cli
jge
push
daa
incb
mov
iret
jecxz
xchg
jmp
in
repz
hlt
cmpsb
sbb
and
pop
fst
mov
in
arpl
pop
pop
push
hlt
inc
adc
xchg
les
mov
adc
data16
mov
or
add
sbb
sbb
mov
mov
int
in
sub
mov
inc
xchg
inc
fstl
out
arpl
shlb
xchg
call
flds
fsubl
inc
pop
or
pop
push
dec
dec
mov
mov
mov
subb
loop
aaa
insl
lret
ret
orl
inc
call
and
jg
popl
int3
cmp
fsin
call
loope
fwait
shll
jmp
cwtl
adc
inc
std
lds
mov
cmp
dec
pop
jns
dec
cwtl
enter
sti
mov
or
inc
xor
cmp
fdivrp
dec
inc
ret
sbb
xchg
shrb
cmp
mov
xor
movsb
xor
or
fisttpl
les
rcrl
xor
mov
dec
jo
inc
stos
ror
pop
jl
mov
pop
mov
xchg
inc
subb
clc
mov
fsubs
xor
add
dec
fs
aad
xor
inc
js
and
mov
stc
mov
adc
in
mov
in
sbb
and
repnz
cwtl
mov
dec
xchg
es
rcll
xchg
movsl
addr16
jmp
and
dec
movsl
and
cmp
jno
mov
add
jl
insb
mov
adc
sub
push
into
adcl
inc
arpl
mov
lods
sub
pop
enter
xor
insb
rorb
or
cmc
or
pop
mov
aam
jnp
inc
pop
aam
fcompl
mov
mov
dec
cmc
inc
or
scas
add
pusha
lcall
inc
in
xor
jmp
fs
lcall
dec
cmpsb
sub
xor
jb
add
dec
aaa
dec
cld
je
js
mov
fwait
or
in
lahf
cmp
out
jno
arpl
decb
adc
sbb
adc
mov
push
mov
xchg
xchg
xchg
push
pop
or
jl
iret
xchg
sbb
fld
adc
jge
mov
and
jb
jno
push
mov
popf
fisttpl
fbld
out
mov
loopne
jle
xlat
ret
test
fsubl
in
xchg
sub
jmp
stos
xchg
or
mov
pop
pop
mov
in
jmp
js
inc
jp
pusha
movl
iret
test
cmc
inc
std
enter
push
ret
inc
jnp
adc
push
lods
push
dec
dec
out
pop
sbb
out
add
shlb
add
jb
pusha
daa
or
or
adc
pop
adc
insb
movsb
lea
pop
andb
push
adc
jecxz
jl
gs
sub
cmp
aas
add
daa
gs
pop
jmp
xchg
adc
mov
scas
js
pop
push
fisubrs
inc
movb
jnp
mov
mov
insl
and
cmp
xchg
movsb
xor
std
jo
dec
mov
shll
add
pop
repz
bound
sarl
lock
decb
rolb
pop
rcll
mov
fisttpll
pop
popf
push
xchg
xor
and
sbb
lods
mov
cmpsl
call
loopne
popf
mov
jle
rolb
lea
shl
push
in
push
xor
push
negl
jge
scas
sarb
adc
jle
cmp
in
xchg
das
pop
and
push
xor
addr16
lret
sub
xchg
or
ds
enter
cmp
outsb
push
dec
in
and
sti
ret
in
cmp
sti
dec
stos
xor
cli
clc
pop
pusha
lret
xchg
mov
int3
sub
mov
cltd
mov
sub
adc
cmp
pop
push
shll
sbb
test
aas
mov
sti
stos
les
jp
fimull
mov
lock
fidivl
cmp
dec
out
ds
dec
xor
loop
in
xor
int
jl
cmp
xor
gs
xchg
int3
cmpsl
test
je
stc
fwait
mov
rcrl
mov
sbb
in
ds
lock
pushf
cwtl
xor
pop
adc
jp
mov
clc
outsb
aaa
rol
test
pushf
sub
or
push
mov
pop
imul
push
lods
dec
and
xchg
pop
fidivrl
mov
add
aaa
and
mov
xlat
repz
cmpsb
cltd
pop
dec
jae
das
adc
mov
daa
movsb
inc
lret
xor
add
mov
iret
dec
add
jp
mov
xor
jge
cmp
repnz
sbb
outsb
shrl
sub
gs
add
lock
sbb
mov
add
icebp
pop
in
stc
into
mov
inc
jmp
out
xchg
mov
rcrl
pop
or
out
fcmovnb
jg
push
out
les
push
cld
and
cmc
leave
iret
xlat
test
pop
pop
or
stc
mov
pop
push
aas
jno
out
xchg
iret
mov
int
dec
jge
clc
lahf
ljmp
dec
cmp
xor
adc
and
repz
movsb
xchg
loopne
fwait
mov
jle
xor
xchg
sbb
jge
mov
aad
mov
mov
adc
mov
pusha
fldcw
rorb
pop
fildll
icebp
aad
xor
mov
std
mov
push
inc
mov
lds
imul
cmp
add
pop
repnz
cmpsl
inc
fstpt
or
nop
fstps
and
enter
pop
xlat
inc
sub
mov
test
movsl
aad
roll
and
out
dec
lock
sub
mov
add
push
jle
mov
in
sahf
cwtl
jle
pop
xchg
adc
test
push
sub
fcoms
je
lahf
mov
idivb
add
loop
fists
push
lret
jo
gs
jnp
incl
sti
punpckhbw
xchg
sbb
inc
mov
inc
insb
ja
fwait
dec
and
shrl
lahf
cmp
outsl
push
ljmp
add
iret
adc
xchg
das
mov
jmp
jo
in
xor
adc
sub
incl
jnp
out
push
lret
pop
in
lcall
push
lahf
jno
xlat
std
les
ja
jns
dec
jno
scas
pop
push
xor
dec
inc
adc
and
inc
mov
mov
add
icebp
xchg
mov
adc
cmp
ret
adc
frstor
frstor
mov
mov
mov
sbb
pop
mov
add
or
cltd
jae
lahf
clc
es
mov
insb
js
lock
rcll
pop
xor
roll
and
leave
stc
nop
stos
mov
xlat
lods
ret
aas
mov
loopne
in
lret
xchg
adc
mov
mov
cwtl
sbb
dec
push
ret
add
into
and
cmp
pop
insl
insl
insb
push
loope
push
andb
jns
repnz
and
outsl
dec
xchg
push
pushf
push
aad
outsb
xchg
dec
jbe
js
mov
repnz
cld
push
leave
mov
sbb
mov
push
mov
sarb
mov
iret
dec
mov
int3
sti
fadd
testl
aad
lock
pop
push
addr16
cli
lcall
push
cmp
cmp
lods
xor
orl
loope
mov
pop
dec
and
or
imul
int3
sub
pushf
pop
add
dec
stc
push
add
sahf
out
mov
pop
lcall
push
mov
sar
xor
sub
fwait
jns
outsl
dec
flds
xor
xor
js
sbbl
pop
jae
push
mov
aas
lea
lods
push
movsb
in
adc
loopne
mov
mov
mov
jp
enter
aaa
jg
ja
sbb
sub
sub
ret
cmc
add
inc
dec
and
xchg
daa
test
jg
xlat
pop
ja
push
jbe
lret
xchg
aaa
cmpsb
pushf
mov
ret
mov
jge
sbb
mov
ljmp
aas
ret
xor
loope
mov
jecxz
insl
jmp
and
sbb
lods
test
pop
adc
roll
cmp
stc
mov
mov
and
pop
jb
pop
push
inc
inc
sbb
xor
mov
adc
js
shl
push
das
or
sahf
daa
out
xor
cmp
pop
decl
mov
lods
popl
jb
or
jecxz
xchg
sbb
mov
push
push
pop
popf
or
fldcw
inc
jge
insl
add
inc
fwait
adc
mov
and
xchg
mov
mov
gs
nop
push
cmp
fiadds
cmp
cmpsl
rolb
mov
fiadds
or
shl
icebp
and
scas
add
stos
in
inc
pop
movsb
pop
adc
aaa
lcall
sub
pop
jb
ret
imul
sbb
mov
push
pop
lds
jl
outsl
add
sub
inc
repnz
jne
in
fnstsw
and
ret
rorb
cs
fiaddl
xchg
clc
cmp
rorl
or
xchg
hlt
xor
push
jae
inc
sub
cmpsb
or
fs
sarb
mov
fwait
and
lret
xchg
pop
adc
jo
add
xchg
and
mov
dec
push
add
imull
ret
mov
imul
push
jbe
xchg
dec
in
aas
testb
es
jmp
in
and
push
sbb
mov
xchg
fs
aaa
pop
inc
pusha
jmp
xchg
out
lds
sbb
loope
sub
sub
fwait
mov
pop
in
inc
lods
adc
cmpsb
fwait
enter
or
aad
add
push
addl
rcrl
push
pop
push
xchg
ficompl
fdivrl
enter
ljmp
cmp
out
xchg
shll
sbb
dec
es
lret
loop
repz
fdiv
or
add
xor
cwtl
push
mov
adc
inc
insb
mov
test
inc
cmpsl
cmpsl
cmp
bound
or
adc
icebp
mov
pop
push
cmp
pop
enter
orb
mov
xchg
push
loope
fiaddl
add
aaa
mov
lea
cmp
cmp
pusha
xchg
jbe
es
in
lahf
or
aas
dec
popa
ror
icebp
addr16
in
jle
inc
xor
or
outsb
fadds
add
rcr
mov
add
fldt
push
shrl
aas
jecxz
cmp
aad
inc
int3
or
jecxz
adc
push
lds
xchg
push
loopne
cmp
scas
jae
dec
sti
aas
aaa
fcmovb
negb
popl
pop
cld
xlat
std
jno
imul
pop
sbb
pushf
add
ret
repz
sub
mov
bound
push
push
shlb
inc
fsubrs
xchg
das
dec
loopne
sub
frstor
adc
jmp
sbb
push
in
mov
lcall
push
nop
aad
pop
mov
inc
out
xor
jbe
or
arpl
add
pinsrw
add
in
out
xchg
int3
or
jg
dec
sti
mov
pop
mov
push
xchg
jg
test
xchg
push
clc
pop
or
clc
cltd
hlt
push
je
push
and
mov
jnp
inc
test
sbb
dec
cwtl
mov
inc
inc
jo
inc
jne
test
sub
mov
push
cmc
xor
pop
fcoms
mov
addr16
sub
mov
stos
lods
stos
notb
mov
fiaddl
daa
fsubrl
jae
or
lahf
dec
mov
add
push
add
mov
and
movsb
xchg
aam
aas
test
or
mov
lods
or
ds
ss
in
mov
cmc
rcr
jns
into
loope
nop
addr16
cmp
cmp
stos
lods
enter
inc
cltd
fwait
add
lret
jmp
push
pop
sub
push
sarb
dec
std
pop
sbb
shrl
sub
inc
movsb
and
cwtl
sub
push
ret
cmpsb
call
add
dec
insl
in
imul
popf
les
jp
ja
inc
sub
jp
mov
cmp
mov
xchg
sbb
ret
jle
dec
loop
movsl
add
repz
scas
in
xor
rorb
sbb
lea
xchg
cmp
fcmovne
mov
xchg
sbb
cld
int3
or
cmpsl
add
xchg
mov
cmp
fs
fbstp
jmp
xchg
xchg
sbb
in
jl
lods
mov
lods
cmc
into
add
into
sub
or
adc
push
cmpb
xor
hlt
pop
sub
push
sbb
rclb
push
int3
fnsave
imul
aas
inc
aaa
inc
cmp
inc
push
loopne
imul
dec
lret
mov
dec
aas
dec
jle
inc
inc
sbb
xor
add
jno
adc
pop
inc
nop
or
sbb
in
jno
jae
jbe
mov
or
inc
lahf
popa
push
in
xlat
lods
dec
imul
jbe
dec
lea
fadds
mov
xchg
out
clc
adc
mov
push
imul
add
js
cmpsl
push
push
inc
ret
adc
adcb
and
cmp
xor
inc
add
icebp
inc
dec
je
pop
push
lods
fisttpl
cmp
shlb
pusha
sarb
sahf
or
shll
test
mov
jecxz
cli
lret
jmp
and
ss
inc
push
repz
cli
ffreep
xor
xchg
mov
sub
fsubp
lock
loop
xor
sarb
sahf
pop
lock
or
sarl
lret
lret
jne
movsb
jns
push
jbe,pn
xlat
mov
stos
cmc
les
push
cmp
inc
adc
imul
mov
cld
les
ds
push
lret
xor
push
mov
rcrl
xor
and
pop
stc
mov
xchg
in
mov
sub
fs
add
sbb
cmp
mov
xor
sbb
mov
rorb
and
xchg
xchg
sbb
or
sbb
mov
sahf
jo
cmp
inc
out
lock
and
mov
sti
test
xor
jno
sarb
mov
mov
aam
sbb
adc
push
int
pop
call
sub
dec
xor
subb
fcoms
or
jno
sbb
mov
or
jp
ljmp
mov
xchg
mov
jl
lods
jns
sbb
mov
jge
insl
clc
lea
shlb
sarb
loop
mov
ja
in
mov
sub
das
and
in
push
addr16
sub
or
mov
test
pop
andl
mov
rcrl
ds
rclb
ss
and
push
stos
inc
das
pop
mov
pavgb
das
hlt
in
and
pop
jl
test
xchg
imul
and
sub
cwtl
mov
mov
cmp
sub
lods
mov
xchg
jmp
je
lahf
test
int
repnz
inc
cs
mov
mov
es
push
mov
out
pop
popl
xlat
mov
cmpsb
jne
fisubrs
cltd
or
inc
sti
cwtl
xor
lea
inc
fiadds
lods
mov
jae
loop
xchg
mov
cmp
add
lods
lock
and
xor
pop
inc
lods
cmpsb
xchg
jg
ds
dec
mov
dec
mov
jle
scas
loop
sbb
mov
add
and
and
movsl
das
push
loopne
daa
cli
adc
out
faddl
xchg
adc
hlt
loope
outsb
cmp
cmp
ret
es
mov
popa
jne
fsubs
and
icebp
or
in
insl
push
dec
lcall
sbb
enter
and
dec
jp
addl
sbb
adcb
adc
add
mov
repz
aad
jo
ret
fists
xor
xorl
cmp
hlt
ret
jmp
and
inc
dec
ljmp
inc
sbb
ficomps
pusha
cmp
add
sub
cli
cmp
mov
data16
dec
lcall
dec
inc
mov
or
xor
dec
shlb
or
push
mov
mov
ljmp
es
insl
arpl
daa
out
lea
imul
test
leave
mov
js
decb
mov
pop
ret
fs
mov
lahf
das
outsl
pop
sub
pusha
test
out
cmc
test
or
movsl
lret
add
call
xchg
pop
fucom
xchg
arpl
push
cs
xorl
inc
mov
fmull
lea
mov
fst
xchg
sub
loop
pop
hlt
add
jp
sahf
cmp
arpl
mov
mov
mov
fistl
gs
addb
sbb
inc
mov
xlat
pop
into
fsts
xchg
cltd
cmp
test
test
mov
and
stos
out
mov
imul
cmp
push
mov
iret
sbb
push
pop
cmc
shrl
in
test
movb
xchg
and
xchg
sub
add
add
ficomps
push
pushf
mov
and
mulps
adc
mov
xor
cmp
sbb
push
cmp
cmp
icebp
in
inc
ss
add
mov
push
sbbb
nop
push
push
sbb
add
cwtl
fldl
jp
xor
andb
pop
gs
xchg
cmpsb
xchg
sbb
cmpsb
shll
mov
ljmp
inc
mov
repnz
sbb
fisubrl
daa
fistl
xor
sub
sub
jmp
mov
shll
push
adc
pop
stos
ja
cmpsb
lods
dec
xor
popf
xchg
or
repnz
test
sbb
cmp
sub
loop
pop
mov
or
sbb
jae
cld
ds
hlt
jecxz
sbb
scas
inc
scas
in
cmpsl
dec
stc
fcomps
dec
jne
nop
mov
pop
dec
addr16
jle
mov
incb
mov
mov
sbb
fprem
repnz
xor
xor
aam
pop
pop
mov
adc
pop
lods
cmpsl
jge
imul
scas
mov
dec
dec
sbb
pop
and
aaa
aad
jg
xchg
xor
mov
xor
mov
adc
add
repz
mov
test
mov
dec
push
or
das
add
adc
outsl
lret
les
inc
mov
xlat
sub
jge
paddusw
test
dec
fdivrs
jl
mov
xor
mov
pop
xor
adc
fildl
fwait
add
movsl
pop
shlb
mov
sarb
sbbb
cwtl
sbb
arpl
call
jge
adc
daa
cmp
stos
dec
jmp
dec
xlat
jecxz
sbb
loop
push
mov
dec
push
lods
lock
xchg
out
pop
or
int
fiadds
fisttpll
leave
pop
push
xchg
fnstcw
cli
enter
leave
jecxz
stos
xchg
pop
inc
jmp
outsl
mov
xchg
leave
in
jmp
mov
cwtl
push
adc
mov
xor
fwait
mov
outsb
ja
mov
pop
stc
popf
leave
fwait
sub
pop
xchg
or
sub
ds
mov
insl
je
or
lret
push
call
inc
xor
adc
cmpsb
cmp
cmp
lods
push
xchg
cli
hlt
shr
gs
popa
push
cmp
clc
sub
fimuls
mov
pusha
and
xchg
cs
pop
loope
sbb
out
jb
imul
pop
mov
subl
sarb
ret
adc
testl
push
les
cltd
push
sub
out
lea
and
cmp
dec
mov
cmc
mov
negb
lods
dec
dec
stos
jnp
cli
ss
push
xor
cmp
jmp
rcll
inc
xchg
and
pop
aam
adcb
stos
or
add
outsb
mov
pop
fdivrs
mov
jecxz
sub
add
push
push
inc
aad
xor
lock
xchg
push
repnz
and
out
loop
flds
lcall
mov
scas
sub
jmp
scas
loopne
subb
pop
jae
sti
ds
outsl
push
movsl
inc
sahf
mov
add
repz
push
aaa
xor
ja
jne
enter
xchg
aaa
push
fs
jmp
or
fisttps
fucomi
stos
mov
cmp
lods
push
pcmpgtb
int3
ficompl
insl
jns
ljmp
std
fwait
loope
je
sbb
mov
out
cmp
ja
fnstsw
leave
aam
dec
lods
std
mov
dec
or
popa
adc
ja
adc
and
sbb
inc
pop
aad
and
mov
test
or
inc
arpl
cmp
sbb
scas
lock
loopne
pop
out
add
mov
add
loopne
add
test
adc
pop
repz
call
sub
add
dec
dec
ljmp
out
inc
mov
sbb
test
xchg
cmp
push
es
cmp
xchg
fldcw
fidivrl
or
sysenter
ja
cmp
push
in
add
sbb
fs
jno
pop
stos
pop
xor
out
out
rcrl
mov
xchg
pop
dec
movsb
imul
jmp
push
js
mov
cld
inc
mov
pusha
or
mov
cmp
fwait
rorl
xor
xchg
and
jp
fisttpl
and
jle
lret
in
mov
jo
xchg
orb
mov
pop
xchg
adc
in
movsl
leave
inc
push
movsb
int
mov
mov
ja
fstps
cld
cmpsb
aad
ljmp
and
ret
out
insb
xchg
arpl
int3
sub
rcll
imull
dec
mov
sbb
mov
xor
fmuls
xchg
cmp
out
sbb
loopne
add
lret
sarb
adc
push
inc
aas
xor
cmp
pop
xorb
cli
pop
mov
pop
inc
xor
xchg
das
fwait
stos
aaa
lret
cmp
push
cmp
dec
pop
and
flds
popa
test
push
mov
test
ljmp
xchg
or
mov
sub
pop
cmp
int3
scas
add
sbb
lods
jg
sahf
fstp
clc
lret
sbb
mov
push
aam
xchg
xor
pop
std
das
mov
xor
jg
mov
cmp
pop
xchg
rcr
adc
inc
add
push
fs
sub
clc
jle
sub
adc
test
testl
jb
sub
loop
lret
sbb
jne
movsl
push
mov
insl
shl
das
fs
clc
das
inc
in
xor
or
inc
pop
and
les
cmp
xchg
sahf
fsubrp
bound
add
jnp
lds
lods
mov
enter
lret
js
daa
call
xchg
jl
lret
xchg
test
ja
adc
inc
outsb
push
xor
sbbb
arpl
imul
ja
mov
imul
outsl
mov
mov
add
loope
test
xor
lds
mov
xchg
sbb
sbb
adc
shl
pop
loopne
out
mov
jns
or
rcl
push
pop
push
sub
mov
push
or
mov
dec
lret
aaa
mov
scas
cmp
int
cs
call
mov
pop
sub
xlat
inc
lods
push
insb
add
bound
sbbb
sub
add
pop
test
push
mov
mov
xchg
mov
in
inc
mov
mov
jl
adc
lock
int3
cmpsl
pop
mov
movsb
sub
std
mov
adcb
int3
push
add
cmpb
out
jecxz
mov
jge
push
jecxz
push
jl
mov
cmpb
insl
add
cltd
xor
sbb
dec
stos
dec
clc
in
and
push
je
xor
cwtl
je
repnz
push
mov
mov
xchg
sub
movsl
imul
gs
movsb
and
lcall
in
jge
xchg
jmp
iret
loope
mov
movsb
icebp
or
clc
add
ret
fwait
mov
mov
cmc
and
xor
dec
add
rcrl
sub
dec
pop
mov
mov
push
mov
pop
xor
inc
jmp
loope
les
or
in
sbb
sbb
or
stos
in
imul
dec
loopne
pusha
push
jle
mov
or
rcrb
daa
loopne
cmpsb
sub
push
jmp
popf
xor
push
aaa
repnz
mov
push
ja
loop
xor
mov
addr16
cld
ret
outsl
sbb
cmp
loop
cmp
movsl
pop
out
scas
cmp
addb
and
cmpl
pop
mov
lock
sub
popw
rol
in
cmp
mov
stos
push
or
or
rcr
xor
mov
push
imul
sbb
lock
arpl
sbb
inc
jae
mov
insb
lock
jo
repz
sub
jl
imul
ret
cmp
test
or
push
rorb
in
jnp
ret
xor
cltd
lahf
scas
or
rorb
pop
aad
inc
pop
aad
sbbl
push
je
xchg
sub
push
add
xchg
inc
mov
lcall
dec
jecxz
enter
out
sub
cli
cmp
dec
sbb
into
das
and
lcall
jbe
pusha
pop
cmp
jnp
enter
fs
jecxz
sub
adc
push
and
cltd
mov
mov
lods
inc
bound
mov
xor
frstor
mov
out
sub
xchg
sub
popf
mov
add
call
repnz
dec
scas
mov
inc
adc
rorb
and
xor
cmp
fs
call
mov
lcall
dec
ljmp
jecxz
jns
nop
cmp
ss
mov
leave
cmc
in
mov
mov
cld
pop
stc
or
icebp
ret
xchg
cwtl
faddl
pop
xchg
test
and
dec
sub
aam
repnz
fsubrl
js
in
fnstsw
js
loope
cmp
mov
cli
ss
mov
dec
mov
fcmovu
push
lahf
and
push
clc
inc
ss
repz
mov
push
xor
mov
mov
mov
fnstcw
loopne
mov
or
fwait
lahf
jecxz
ret
mov
outsb
mov
lock
loope
fldt
jp
in
dec
shl
sbb
or
inc
ljmp
out
idiv
sbb
dec
std
adc
xor
lret
dec
test
cmp
mov
fiaddl
sub
xor
mov
lods
fwait
lret
add
mov
insl
push
cs
push
xchg
push
add
adc
lds
mov
ja
test
jmp
xor
jae
and
stos
enter
xor
mov
mov
scas
aas
push
dec
sti
add
or
pop
aam
xchg
xchg
sub
add
inc
mov
dec
sub
jmp
push
adc
shl
cmp
mov
lods
inc
nop
add
or
pop
dec
inc
dec
daa
sub
xchg
pop
clc
add
test
and
add
xchg
cwtl
dec
test
popa
test
cmpsb
clc
and
inc
mov
pop
jge
sub
dec
lret
call
aaa
push
ljmp
in
rorl
xor
loop
out
lods
jae
mov
repnz
idivl
imul
fists
aad
hlt
dec
sahf
fwait
arpl
les
jmp
out
cmpsl
mov
sbb
idivb
test
mov
movsb
adc
lret
inc
mov
adc
loop
loop
sbb
mov
aaa
lahf
iret
jecxz
lds
icebp
xchg
fldl
cmp
ja
in
je
dec
cmp
jb
cmp
add
pop
dec
xor
ljmp
daa
and
lods
cmp
mov
xchg
dec
ds
fsubp
cmpsl
pop
rorl
out
cmpl
fwait
rorb
jmp
add
push
sbb
dec
loopne
xchg
mov
jno
or
mov
mov
sub
add
jge
loop
or
ds
xor
arpl
cmp
xor
mov
jp
inc
dec
xlat
mov
dec
adc
mov
fldcw
shlb
clc
xchg
pop
jp
inc
sets
jnp
lods
dec
repnz
imul
repnz
aad
repnz
cltd
outsl
jns
mov
cmp
dec
ja
cld
or
jmp
loope
dec
pop
jl
inc
sahf
repnz
jp
mov
sbb
call
mov
add
mov
lahf
nop
stos
mov
adc
xchg
ret
jb
pop
daa
push
cwtl
push
mov
push
pop
add
inc
fidivrs
popa
or
sbb
dec
cs
mov
mov
mov
ss
xchg
pop
adc
push
into
pop
es
and
pop
sbb
out
shr
mov
add
mov
mov
jb
int3
aas
push
push
jbe
pop
adc
push
fs
or
fwait
dec
mov
hlt
or
cmpsb
xor
xor
and
xchg
jae
icebp
add
fsin
aad
inc
les
dec
imul
rorb
iret
icebp
in
xor
or
mov
lret
insb
les
add
lods
inc
movsl
dec
jno
imul
lret
out
les
hlt
outsl
adc
xchg
inc
movsb
pop
pop
and
cmp
jle
mov
mov
insb
push
stos
test
or
dec
sbb
push
je
xor
pop
jae
mov
hlt
or
sbb
mov
ret
xor
inc
xor
mov
out
jns
stos
popa
push
inc
or
ret
ds
dec
or
call
scas
cld
rorl
dec
fsubrl
inc
push
ljmp
insl
jo
push
ljmp
xchg
loopne
ljmp
cltd
push
push
pop
hlt
or
adc
jns
inc
or
fstpl
scas
sahf
aaa
dec
lods
add
out
ljmp
sub
ds
cmpb
dec
adc
inc
dec
xor
iret
stos
mov
lods
mov
cmp
rcll
scas
into
sbb
jno
jae
lcall
mov
in
in
sub
int
bound
sbb
cmp
aam
mov
loopne
movsb
js
push
sbb
sub
xor
jge
add
pop
neg
ret
add
scas
mov
mov
aas
or
lods
mov
cmp
popa
sbb
dec
pop
dec
scas
lock
cmc
sub
sub
ror
lahf
gs
mov
js
shr
fs
aam
inc
sub
adc
popf
out
fcomps
pop
push
xchg
add
adc
add
call
fildl
pop
dec
fisttpl
inc
push
punpcklbw
and
sbbb
nop
mov
mov
ds
xchg
jl
cmc
hlt
mov
int3
or
outsl
addb
es
inc
scas
in
sbb
stos
imulb
cmpsb
pop
pop
add
push
popa
nop
jno
jge
je
dec
sarl
mov
dec
rcr
pop
mov
xchg
pushf
cmp
cmpsl
cmp
xor
es
adc
cmp
add
xchg
adc
inc
jg
cmp
loope
jg
xchg
aad
rolb
dec
addr16
inc
inc
push
jmp
push
scas
xchg
mov
dec
pushf
mov
mov
jg
data16
push
int3
jbe
mov
insl
into
mov
sbb
mov
mov
outsl
xchg
inc
or
inc
sub
or
fdivp
push
lahf
cmp
jle
clc
pop
add
jg
andl
pop
call
repz
ja
repnz
stos
inc
loop
pushf
cmc
out
mov
push
mov
addb
sub
pop
xor
shll
push
cmp
ret
push
pop
aam
sub
lds
paddq
mov
mov
out
xor
pop
nop
xchg
xchg
sub
pushf
sbb
pop
sbb
cmpsb
ret
sbb
add
test
xchg
jo
lods
sub
rcll
sub
add
add
cmp
fiaddl
repnz
lock
pop
cmp
dec
sub
lods
pop
mulb
mov
loopne
lret
sub
std
cmp
jp
pop
mov
je
rcrl
sbb
pop
mov
mov
shll
add
mov
imul
push
xor
add
fidivs
das
push
push
inc
add
sbb
fdivl
outsl
dec
xchg
lahf
leave
pusha
and
les
push
lods
ds
jne
pop
movsl
imul
jno
aam
sub
mov
mov
sbb
mov
cmpsl
add
inc
ljmp
aam
mov
jmp
les
inc
addb
add
or
popa
mov
mov
or
jl
js
das
add
test
les
lcall
rol
cs
or
aas
or
mov
cmc
mov
push
inc
movsw
aam
loopne
stos
pop
es
lcall
mov
push
mov
shlb
push
fbstp
or
xadd
push
jne
in
stos
sahf
jle
nop
pop
sbb
aad
push
call
mov
arpl
adc
cmpsl
mov
inc
test
push
push
mov
repnz
mov
test
pusha
aaa
mov
add
mov
leave
mov
shlb
jecxz
jle
xlat
mov
aaa
addr16
lcall
push
enter
sar
inc
adc
xor
xor
rcl
pusha
hlt
inc
lahf
mov
sub
pop
movsl
div
jp
xlat
sbb
mov
rcll
xor
push
xchg
mov
mov
mov
pop
and
xor
cmp
jecxz
int
push
rorl
sbb
fistl
cmp
xchg
jne
push
int3
pop
inc
add
sahf
xchg
sub
xor
repnz
icebp
leave
inc
imull
sti
aaa
cltd
cs
lret
aaa
cli
mov
or
out
xchg
cltd
add
mov
pop
incb
dec
jae
sub
push
or
cmpsl
push
adc
movb
rorl
outsb
mov
mov
insl
xchg
jne
les
mov
xchg
cmp
mov
je
in
xor
inc
and
push
aas
repz
les
mov
shlb
cmpsb
ret
fcmovne
adc
iret
pop
mov
adc
or
sbb
loopne
mov
jne
loope
outsl
push
gs
xchg
mov
mov
mov
gs
das
and
and
adc
push
and
sub
mov
stos
outsl
vpabsd
mov
pop
sub
test
xchg
stos
cmp
xchg
inc
cmp
cmp
cwtl
lods
pop
jo
nop
pop
push
push
test
dec
and
lret
dec
dec
idivl
push
sbb
cmpsl
jl
push
jle
cld
inc
push
mov
sbb
icebp
mov
rcrl
push
lcall
push
iret
push
xchg
mov
pop
cmp
dec
and
mov
rorb
popf
and
dec
adc
lods
in
out
mov
mov
sub
lcall
shrb
pop
fcoml
inc
sahf
xchg
sub
xor
call
gs
or
arpl
mov
mov
scas
pop
bound
mov
mov
lahf
scas
sahf
mov
leave
and
lods
xchg
stos
cmpsl
sub
jg
loope
xchg
sbb
sbb
push
mull
clc
aaa
stos
dec
mov
sbbb
mov
jge
std
repnz
sbb
popf
mov
push
jae
daa
sbb
xor
test
outsl
mov
xor
fwait
xor
dec
movsb
in
js
inc
sbb
xchg
xor
push
pop
subb
push
negl
divl
rorl
arpl
inc
and
mov
inc
pushf
andl
mov
imul
fwait
dec
inc
jb
subl
sahf
and
push
mov
out
cli
popf
sbb
cltd
imul
hlt
and
jmp
daa
jp
mov
dec
divb
mov
pop
push
jno
sbb
lea
into
add
jb
test
jl
aad
mov
inc
pusha
xchg
fisubl
ljmp
xor
jne
jge
in
dec
jno
dec
inc
cwtl
xchg
push
popa
inc
inc
jle
les
push
add
stos
out
sbb
fstl
insl
jbe
dec
pusha
xor
cli
mov
sarb
push
sub
addr16
faddl
or
movb
imul
inc
pushf
stos
cmp
add
cwtl
jl
xchg
push
push
push
lods
enter
push
outsl
sub
pop
xchg
pop
out
loope
xor
psadbw
xor
inc
mov
cmp
ret
sub
dec
ret
mov
jl
sti
push
mov
imul
jbe
pop
pop
rcrb
std
xor
test
push
mov
and
xchg
lods
xor
scas
cmp
adc
and
cmp
mov
cld
lret
lret
push
pause
mov
out
pop
add
rclb
out
outsl
andnps
sub
or
bound
inc
mov
cltd
ljmp
or
and
jp
or
sti
mov
mov
mov
inc
mov
sti
pop
lret
xchg
shrb
mov
xor
adc
gs
and
jnp
mov
adc
lret
push
leave
and
repnz
cwtl
std
add
mov
add
push
mov
sti
mov
pop
inc
xor
mov
inc
filds
xor
out
stc
pusha
out
das
test
fdivrl
jno
insb
sbb
mov
adc
sbb
xchg
mov
out
icebp
mov
sbb
int3
cmp
jae
fdiv
cmp
inc
add
sbb
out
pop
xorb
adc
add
jmp
aad
mov
push
dec
in
clc
jb
pusha
movsl
add
jle
mov
sti
pop
ret
pop
ja
push
shr
cltd
xchg
leave
mov
adc
cltd
dec
and
dec
adc
rcrl
loop
imul
sub
push
mov
mov
pop
cmp
jmp
cmp
test
mov
lods
mov
push
push
xchg
push
fistpll
jge
je
xchg
loop
lds
mov
fcoms
adc
dec
clc
test
xor
mov
pop
test
add
xor
push
call
enter
int
out
out
xchg
inc
xchg
fisttpll
insb
sbb
aam
xchg
push
lds
jae
sub
ret
orl
add
dec
inc
and
adc
sub
pop
pop
mov
in
mov
stc
scas
fs
jb
loop
push
add
dec
xchg
jne
fcoms
loope
clc
nop
and
fnstenv
shll
xchg
out
jne
or
or
sbb
cli
mov
cmp
xchg
stos
daa
jno
push
add
arpl
lahf
inc
insl
arpl
xchg
xchg
fidivrs
jns
imul
or
xor
xor
jp
inc
stos
sub
call
movsl
dec
mov
xchg
js
dec
dec
icebp
jge
jne
push
mov
dec
xchg
lea
lds
xchg
push
std
cmpsb
ds
or
add
xchg
push
mov
imul
cwtl
mov
lds
sub
cmp
push
aas
lock
push
fldenv
mov
xor
pop
dec
pop
push
dec
lret
pop
arpl
mov
ret
loop
insb
adc
pop
ljmp
mov
push
insb
inc
pop
xchg
xor
out
out
nop
xor
stos
mov
add
xchg
pop
out
jmp
mov
xor
cltd
xchg
push
iret
push
je
nop
push
cmp
or
adc
xchg
push
jno
pop
fwait
leave
loopne
es
adc
xchg
xchg
test
mov
repnz
cld
or
aas
xor
and
and
mov
femms
lahf
pop
and
jne
in
pop
testb
xchg
scas
imul
imul
popa
daa
push
pop
imul
out
popa
movsb
mov
adc
mov
cmp
nop
lahf
ss
mov
mov
mov
shll
jg
js
jge
hlt
stc
dec
sub
add
xchg
testl
pop
inc
push
push
inc
imul
cs
daa
and
xor
push
lea
jg
outsb
adc
push
pop
lea
mov
nop
xchg
lock
fld
sub
xor
cmp
inc
push
adc
fsubrs
jle
loop
mov
push
lret
add
ss
pop
cmc
inc
add
mov
stc
outsb
lea
sbbb
fstpl
pop
pop
in
stos
mov
jge
out
mov
mov
mov
iret
stos
jge
and
add
enter
push
xchg
sbb
scas
arpl
cmp
sbb
pop
jecxz
movsb
out
mov
call
pop
pop
fwait
pop
push
mov
or
push
xlat
loope
stos
repnz
xchg
sahf
xor
mov
push
xchg
sub
mov
int
andl
dec
jnp
int
outsb
add
mov
rcrl
sbb
test
add
add
out
insb
popf
popf
push
add
mov
divb
cmp
insb
dec
jmp
out
cli
ljmp
insb
mov
lock
rolb
adc
xor
in
inc
ja
pop
jge
dec
cld
bound
xchg
dec
xor
push
sub
sub
flds
push
xchg
jmp
jb
xchg
jbe
int
or
lock
into
jns
and
or
ficoml
mov
sbb
lret
movsl
fxch
mov
gs
xor
cld
lret
cltd
pop
cmp
mov
je
out
inc
pop
jne
clc
lcall
in
enter
xor
in
adc
pop
insl
adc
add
insl
jge
fisttpll
stc
int3
adc
jp
mov
cli
jne
data16
inc
scas
lret
inc
jb
inc
iret
cmp
int3
mov
adc
lcall
popf
das
add
sbb
jns
xchg
test
testb
push
leave
cmp
dec
adc
dec
xchg
mov
add
call
jle
clc
fisubs
js
leave
test
xchg
pop
leave
or
stos
data16
push
xor
popa
jne
lods
gs
imul
movsb
popf
insl
cmp
cmp
jmp
or
mov
nop
stc
test
nop
cmp
fidivs
jbe
mov
outsl
mov
gs
es
push
orb
cmp
lahf
xlat
xor
arpl
shlb
iret
sbb
pop
jo
mov
orb
sarl
and
inc
decb
cmc
or
pop
mov
stc
bound
xchg
adc
cli
popf
adc
fstps
xor
xchg
jl
addb
faddl
dec
cmp
fnsave
mov
ret
ja
adc
stc
xchg
repnz
sbb
repnz
notb
push
cmc
mov
adc
out
rorl
jg
subl
xlat
inc
sbb
aam
inc
inc
insb
xchg
ret
sub
cmp
adc
icebp
or
cmc
aas
sub
xchg
clc
dec
test
push
stos
sub
mov
shlb
mov
or
mull
mov
ret
or
inc
arpl
inc
mov
mov
popf
jge
mov
add
loope
stos
cltd
pop
repz
or
out
popa
mov
aad
jno
xchg
inc
subl
sbb
repnz
std
inc
sub
in
mov
repnz
subl
mov
jg
sbb
sbb
lahf
cld
stos
xchg
or
add
jl
fmuls
add
sub
mov
ret
adc
mov
add
stos
push
sbb
inc
popw
sbb
mov
sub
add
xchg
cmp
xor
mov
shr
adc
sbb
inc
cmovg
dec
add
xchg
adc
lret
mov
or
and
jb
in
xchg
xchg
xlat
adcl
pop
leave
test
frstor
sbb
xor
das
jl
mov
mov
xchg
fbstp
inc
imulb
push
dec
ja
pop
test
lods
xchg
and
aam
xor
sbb
pop
out
mov
pop
sub
pop
enter
cmp
jo
push
sub
cmp
push
xchg
cmp
orl
test
push
push
push
xchg
adc
ljmp
test
push
pop
fstpl
inc
or
cmc
pop
cmp
mov
test
movsl
fmull
dec
xor
inc
stos
push
mov
outsb
adc
call
loopne
sub
cmp
test
dec
fwait
and
sub
sub
hlt
dec
in
jae,pn
add
push
insb
pop
jo
cmpsb
or
push
idivl
pop
xchg
jmp
sbb
ljmp
lods
cmp
mov
inc
sahf
sub
dec
inc
addr16
dec
out
fsqrt
ljmp
sbb
or
pop
out
push
mov
mov
shll
loope
push
fldt
lods
or
pop
ret
push
testl
push
lret
call
in
jns
cmp
movsb
in
in
jbe
mov
lret
xor
in
sub
pop
fisubs
jne
jno
in
adc
and
push
push
popa
pop
loope
mov
rcl
mov
dec
outsb
push
cmp
mov
hlt
imul
aas
and
sbb
add
loop
rcll
pop
je
xor
cmp
mov
std
mov
int
mov
gs
jmp
cld
addr16
ja
rcr
fnstcw
jle
push
data16
mov
sti
adc
movsb
out
fadds
pop
ret
push
cli
add
icebp
out
rclb
or
pop
push
xor
imul
in
dec
lret
dec
xchg
inc
call
or
pop
int
ljmp
pop
mov
aas
jae
xchg
jo
in
ja,pt
testb
xchg
adc
and
mov
push
push
dec
xor
arpl
in
in
mov
xchg
jbe
les
cmp
insb
lea
mov
lock
mov
fs
out
mov
cmp
fs
mov
xor
dec
jmp
pop
jecxz
add
jl
inc
pusha
push
aam
cli
outsb
pop
shr
ret
dec
loopne
outsl
xchg
pop
pop
adc
xchg
xchg
stc
in
filds
sbb
cmpsb
pop
jo
and
adc
or
add
fstps
fs
bound
pop
aad
mov
loope
mov
xor
gs
sub
inc
cmpsl
fs
lods
inc
cltd
scas
jecxz
aam
leave
inc
jmp
imul
mov
lret
and
rorl
adcb
pop
lods
cmpsl
mov
loop
cmpsb
repz
pop
inc
pop
int
mov
mov
lods
xchg
sub
adc
mov
push
cmpsb
sbb
xor
mov
mov
fs
push
daa
add
outsl
and
aad
cmp
sub
rol
call
adc
inc
jecxz
push
mov
into
mov
mov
push
rcl
roll
jecxz
push
adc
pop
push
mov
inc
jno
mov
push
icebp
lcall
rcl
aas
iret
in
hlt
pop
dec
jp
xor
pop
push
sbb
inc
repz
add
mov
out
outsb
fimull
cwtl
mov
sbb
or
test
mov
cwtl
rolb
mov
pop
adcl
push
push
mov
into
mov
xor
notl
icebp
nop
test
xor
sarb
mov
inc
mov
scas
jg
mov
jle
mov
scas
repz
xchg
push
mov
sti
cli
aam
sbb
roll
bound
mov
insl
sahf
jp
dec
and
out
xchg
inc
mov
jg
lcall
hlt
sarb
sar
subb
cld
mov
jecxz
test
xor
push
fisttps
inc
aam
stos
lea
outsb
and
sub
ret
scas
sub
push
das
sub
xor
sub
lret
push
lcall
sbbb
es
xchg
pop
xchg
sbb
mov
scas
xchg
das
mov
inc
test
scas
and
cmp
xor
xchg
cltd
cmc
mov
cmp
inc
pusha
mov
push
mov
out
loop
pop
addr16
mov
int
xchg
push
jno
in
and
ljmp
ficompl
movsl
xchg
xchg
sbb
stc
daa
fs
pop
mov
xchg
loopne
xor
in
jmp
cwtl
pop
and
cmp
adcb
fs
push
inc
lret
jno
insl
cwtl
cmp
and
lods
add
sbb
mov
sub
dec
sub
ficoml
lea
sbb
in
inc
mov
ret
lds
push
jge
sub
fiadds
push
out
mov
sarb
adc
sahf
out
xchg
add
mov
lods
jb
push
xchg
int3
das
sbb
or
imul
das
test
sub
jbe
arpl
inc
pushf
dec
lods
lock
in
out
shrb
aas
fildll
mov
repz
jecxz
fdivs
std
in
mov
aad
adc
hlt
rorl
or
jns
lock
dec
pop
outsl
jecxz
and
out
add
push
cs
or
xrelease
adc
leave
adc
xchg
mov
mov
test
inc
ficomps
sub
mov
mov
push
sbb
jae
push
pop
ret
sub
mov
add
insl
inc
mov
cmp
add
xor
lahf
bnd
push
cmp
lock
xchg
loopne
push
fistpll
in
in
sti
out
jecxz
ret
mov
xchg
sbb
jo,pt
sbb
movsb
subl
mov
icebp
dec
cmp
and
pusha
push
mov
data16
enter
dec
or
sti
loop
aaa
pop
jmp
mov
jle
push
bound
sbb
xlat
sti
xchg
loopne
scas
push
mov
outsl
and
push
lds
imul
sub
js
data16
fs
inc
cli
lods
ja
loop
in
out
cs
xorb
cmp
mov
call
imul
repz
or
mov
xchg
sbb
mov
pop
iret
mov
mov
inc
int3
lcall
mov
jnp
pop
cmp
mov
loope
adc
pop
outsl
insl
ret
shl
ret
xor
xchg
jle
sti
cmp
out
xchg
dec
js
fbld
sahf
ds
outsb
sbb
xchg
and
and
inc
dec
ja
sub
push
insl
pop
inc
test
mov
adc
push
test
mov
aas
outsb
sbb
shl
fisttps
clc
jno
lock
ret
jno
fisubl
idivl
jae
and
xchg
sub
add
push
in
push
mov
clc
pushl
sbb
ret
inc
sub
ja
or
testb
les
pusha
leave
imul
xor
in
pop
mov
mov
out
xchg
gs
aaa
pop
jg
xor
comiss
pop
std
mov
sti
adc
stos
dec
xor
lods
mov
jb
cmp
test
dec
int3
subps
test
mov
shll
fisubrs
mov
aas
into
cmp
out
cmp
mov
adc
cs
in
inc
imul
jns
popf
xchg
push
fsts
sbb
add
fiadds
mov
arpl
inc
iret
sub
add
mov
scas
xor
or
push
out
sbb
sub
jno
popa
andl
sbb
ja
out
sub
inc
test
cmpsb
xchg
test
push
mov
mov
rcr
jmp
mov
sub
pop
dec
lods
cmc
pop
jns
xchg
mov
add
in
xor
and
jl
nop
push
xor
aaa
sub
xchg
lea
xor
xor
xchg
orb
out
movsb
lret
xor
mov
gs
ret
xchg
mov
mov
add
sub
mov
jnp
decl
sbb
scas
add
hlt
jo
cli
cmp
mov
xchg
jg
imul
xchg
add
inc
icebp
je
and
in
sub
aaa
push
sub
cli
jmp
or
mov
in
xor
mov
dec
es
sub
cmp
jb
jmp
ret
mov
addr16
aam
mov
scas
cmp
ds
inc
outsb
jge
jae
les
pop
xchg
fsubl
pop
push
dec
outsl
add
mov
sbb
push
push
xchg
mov
push
and
pop
mov
and
jecxz
xor
mov
movswl
test
dec
fs
in
push
pop
jne
lea
int
mov
add
lods
adc
daa
adc
lcall
push
sub
int3
loop
push
cwtl
in
mov
jecxz
scas
imul
lds
add
add
pop
addr16
clc
out
jle
inc
vdivss
inc
iret
jecxz
mov
mov
lahf
mov
outsl
lock
and
add
and
xor
xor
sbb
arpl
mov
jecxz
jb
ja
fwait
in
lea
xchg
inc
mov
mov
jo
pop
jnp
js
shrb
lods
out
sbb
xchg
dec
in
jmp
pop
cwtl
dec
in
cmpsl
jp
mov
mov
sti
sbb
cli
pop
hlt
push
pop
xchg
xchg
push
cmp
clc
adc
cld
js
fwait
in
leave
mov
in
jecxz
fstps
mov
loope
sub
sub
lods
mov
in
sub
sbb
int
push
dec
sbb
mov
inc
in
sbb
roll
push
not
cltd
lods
repz
cmp
and
andl
iret
sarb
or
imul
and
add
pusha
dec
pop
pop
push
cltd
sub
add
jbe
fbstp
inc
pop
or
ret
pop
aaa
jns
ficompl
push
insb
or
out
sub
repnz
sbb
mov
lods
in
jno
outsl
jmp
jl
test
jl
mov
mov
in
xchg
pop
imul
lret
xor
xlat
mov
mov
jl
wbinvd
sbb
repz
fnstcw
pop
xchg
xchg
or
pop
dec
and
push
and
pop
sahf
repnz
and
pop
inc
addr16
in
loopne
sbb
fnstcw
adc
lahf
pop
add
hlt
dec
inc
rcr
xor
and
icebp
mov
mov
lret
mov
out
pop
add
mov
mov
repz
pop
ljmp
mov
or
jb
add
adc
inc
test
je
jp
pusha
or
les
dec
scas
cli
cwtl
sbb
dec
sbb
sahf
jo
leave
pop
xchg
push
push
ljmp
push
mov
add
frstor
add
loop
fidivrs
mov
scas
or
xchg
lret
fbstp
xchg
rclb
cmpsb
adc
adc
jns
mov
push
shr
les
mov
ret
inc
movsl
or
dec
jle
pop
jecxz
js
lret
sbb
fbld
call
repz
sbb
mov
inc
fcmovnbe
jno
mov
mov
mov
mov
clc
shl
in
dec
mov
dec
cmp
in
in
lods
ret
lea
xchg
and
push
mov
push
dec
flds
push
xchg
fistl
int3
jl
and
test
mov
in
call
lret
mov
and
xor
popf
out
adc
sub
repnz
pop
or
addl
inc
into
jno
mov
shlb
xorl
test
xchg
in
andb
lock
fcmovnu
shl
cmc
div
sub
dec
pcmpeqd
xor
or
sbb
xlat
imul
js
mov
mov
stos
idivb
sbb
ret
lret
jno
add
pop
es
and
sbb
inc
push
cmp
push
and
jno
sub
adc
lcall
cmpsl
push
cmovae
xchg
fidivrl
outsl
test
ficomps
xchg
mov
sbb
in
mov
push
mov
add
adc
adc
pop
mov
xchg
in
or
mov
leave
jo
inc
into
lcall
mov
pop
or
inc
iret
lahf
in
ret
lcall
xor
aas
inc
imul
jae
sub
fdivrs
test
dec
mov
dec
inc
lds
xor
lcall
xchg
dec
sub
fldt
sbb
scas
stc
jp
jne
dec
mov
push
aas
shll
add
push
addr16
xchg
dec
mov
imul
push
mov
mov
xor
cmpsl
or
cmp
pop
push
ret
cmp
bound
and
add
into
in
add
jo
dec
hlt
outsl
fisubrs
loope
into
dec
aam
stos
pushf
call
fisttpll
lahf
dec
push
les
es
lods
push
into
imul
mov
repz
xor
xor
adc
and
sub
mov
roll
mov
jg
fisttpll
add
adc
add
in
test
int3
lock
xchg
add
gs
in
jmp
incl
push
dec
push
mov
mull
add
sti
cmpsb
pop
xor
stos
adc
test
lea
or
and
pop
repnz
or
sbb
or
es
sub
test
je
dec
cmc
in
sub
cmp
pop
or
dec
mov
imul
mov
adc
lock
fsubr
mov
sub
push
loopne
stc
pop
or
pop
mov
jmp
into
dec
pop
mov
lahf
xchg
cmc
arpl
les
jno
xchg
in
cwtl
pop
iret
call
mov
xor
inc
mov
gs
jp
rorb
into
sar
adc
mov
out
stc
clc
pop
dec
aam
pop
sbb
jae
mov
daa
dec
in
jns
lods
and
fs
test
stos
sub
adc
jle
cmp
inc
outsb
push
stos
mov
and
scas
pop
sub
mov
sub
lods
xchg
xchg
mov
fcompl
mov
jne
mov
xor
sub
or
mov
stos
push
sub
ret
xlat
mov
xor
mov
lahf
in
test
cltd
test
cltd
popf
jnp
sbb
loope
xchg
mov
jb
push
cmpsb
push
pop
fsubl
nop
lods
cwtl
leave
mov
sub
fcomps
es
mov
rcrl
xchg
fwait
nop
mov
lods
icebp
pusha
or
pop
test
daa
sbb
stos
adc
sbb
adc
mov
mov
scas
jae
movsl
pop
push
adc
addr16
or
sub
jno
jae
mov
cltd
das
bound
and
test
ret
outsl
aas
sbb
jbe
mov
cltd
fadd
loopne
xlat
xchg
push
sbb
xchg
in
jmp
pop
inc
mov
mov
pop
test
sbb
lret
pop
shl
pop
cmp
scas
xchg
ljmp
xor
jb
test
pop
imul
xchg
cmpsb
mov
mov
sub
xchg
movsl
scas
sti
and
and
popa
stc
idivl
lea
and
enter
mov
mov
bound
mov
push
push
enter
je
mov
jge
mov
fnstsw
push
mov
ja
ljmp
loope
mov
mov
test
popf
add
xor
fnsave
in
xchg
pop
repnz
inc
test
pop
test
ret
inc
push
lret
lahf
repnz
push
mov
loopne
mov
das
push
pusha
xor
ret
es
stos
int
inc
mov
push
xchg
mov
xchg
pusha
test
xor
sbb
pop
mov
jmp
push
out
cmpl
fistps
jo
jb
lods
inc
and
mov
add
xchg
pop
pop
sbb
push
jb
mov
jb
lds
jl
gs
pop
fdiv
pop
loop
push
into
outsb
in
add
out
mov
mov
mov
fdivrp
xor
insb
lahf
cmc
pop
xorl
mov
sbb
mov
or
rorl
ret
adc
ret
lods
outsb
mov
std
addb
movsb
sub
pop
jl
mov
push
std
outsb
clc
inc
ss
adc
adc
shrb
sbb
test
stos
adc
sub
mov
or
add
jbe
xchg
pop
int3
lods
cli
fwait
sub
aaa
cwtl
out
mov
fld
movsl
mov
ror
mov
sbb
ljmp
or
sarl
adc
and
sahf
movsb
into
cwtl
and
mov
enter
add
mov
ljmp
sbb
addr16
push
cmp
ret
roll
test
sbb
cmc
xor
sbb
dec
push
and
xor
cli
pop
imul
outsb
shll
push
mov
shrl
pop
pop
movsl
pop
cmpsl
ret
fiadds
je
loop
popl
imul
ds
push
lock
enter
loope
cmp
add
in
and
pop
mov
mov
jge
pop
lods
dec
rolb
cmpsl
jmp
test
mov
xor
xor
push
out
fistpl
dec
sbbl
arpl
fisubrs
subb
andw
je
or
jo
cmp
outsb
in
pop
adc
stc
jnp
lock
loop
bnd
rcll
cmp
push
adc
fs
adc
push
mov
push
jg
lods
adc
es
call
cs
mov
mov
fcmove
out
mov
test
into
push
ljmp
pop
sbb
sbb
push
insb
or
jle
push
and
es
pop
test
push
fisubrs
and
outsb
mov
cmp
fcoml
negl
or
lea
lret
in
repnz
shr
mov
repnz
xchg
sub
or
cmp
adc
mov
mov
inc
pop
fwait
out
xchg
xchg
mov
out
jmp
mov
repnz
push
andl
setnp
aas
xlat
out
movsl
xchg
sbb
xor
fs
jp
jbe
mov
jmp
inc
push
fidivs
xchg
xor
push
mov
dec
shr
mov
jmp
xor
lret
mov
push
lea
test
sahf
push
jp
add
pop
shr
jg
cmp
add
jns
jbe
mov
mov
and
cs
pop
dec
frstor
dec
pop
or
dec
lods
sahf
xchg
lods
loope
pop
pop
clc
int
and
fisttpl
pop
aas
inc
adc
or
lcall
mov
and
imul
inc
dec
das
fstl
inc
shrd
adcl
pop
add
xchg
loopne
mov
sbb
xor
andb
test
cmp
mov
loopne
jo
xor
out
in
stos
idivl
fmul
shll
inc
jle
int
push
xchg
dec
mov
test
inc
xchg
push
sub
int
xchg
das
imul
push
add
pop
ss
pop
mov
mov
pop
jge
ficompl
xchg
fidivrl
mov
pop
jne
movsb
popa
stos
push
cwtl
popa
xchg
dec
iret
push
jle
push
mov
fldl
inc
out
jl
outsb
adc
ds
xchg
adc
ficoml
and
sbb
mov
xor
sub
or
lods
xor
mov
dec
fwait
and
scas
test
cltd
xlat
testb
pop
dec
enter
and
inc
sbb
pop
insb
xchg
xchg
and
adc
aam
aam
int
xor
into
jne
mov
push
repnz
ja
jge
aam
sbb
mov
cmp
inc
out
push
pop
addr16
sub
sbb
cmp
out
jmp
loop
mov
sub
in
imul
hlt
fldcw
rcll
movsb
adc
and
mov
aas
insb
lahf
sbb
sub
inc
or
cmp
sbb
sub
xor
jl
push
xchg
outsb
push
stc
xor
out
aas
mov
xor
dec
dec
cltd
sarl
aad
sti
adc
pop
negb
cmp
bound
lods
call
sbb
dec
xchg
mov
dec
test
stos
xchg
jne
mov
mov
mov
fstenv
pop
pop
jns
pop
cld
sbb
scas
and
jno
fimull
mov
dec
sbb
jp
andb
push
dec
lahf
imul
jno
inc
mov
adcb
leave
stos
mov
test
lret
ret
faddl
cs
stos
repnz
sti
push
fucomip
pop
stos
adc
iret
push
pop
sahf
mov
sahf
pop
or
mov
pop
lods
jg
out
mov
inc
and
mov
and
outsb
add
into
ja
outsl
jnp
clc
int
pop
mov
mov
xchg
xchg
lock
iret
inc
inc
add
out
add
negb
pop
push
fmull
dec
inc
mov
adc
mov
jle
aaa
mov
pop
loope
out
jns
xor
jbe
sub
sbbl
xor
mov
ret
dec
popa
movsl
adc
loopne
dec
ret
insl
int3
repnz
out
call
movsb
dec
mov
mov
or
inc
jo
add
sub
daa
in
sti
and
push
fadds
mov
adc
pop
scas
mov
cmpsb
shrb
mov
repz
outsl
int
push
xlat
jmp
pop
lock
mov
jb
sarb
adc
cmc
int
aaa
push
xlat
jge
cmp
xor
pop
dec
stos
mov
addb
pop
pop
xchg
idivl
fcomp
sub
loopne
or
xchg
add
add
jp
adc
repnz
push
xor
ljmp
adc
pushl
gs
add
mov
es
mov
jb
mov
jne
and
mov
pop
jo
cltd
and
xor
xchg
in
ss
inc
jge
mov
xchg
fcompl
pop
lcall
imul
jecxz
jle
loop
dec
or
clc
xorl
adcb
adc
adc
sbb
inc
dec
dec
lahf
add
stos
fistps
nop
fimull
fwait
jb
push
and
int
mov
or
xchg
adc
iret
je
push
cmp
push
add
lods
xor
out
push
cmp
push
in
push
rclb
scas
out
sub
sbb
out
lcall
jno
stc
mov
arpl
out
daa
lcall
and
pop
adc
lcall
nop
popa
lea
loopne
inc
add
cmpsl
mov
pushf
sub
and
pop
mov
xor
js
addl
jmp
sahf
sbb
call
xor
pop
ja
loope
lea
ret
insl
call
das
lock
sbb
and
inc
imul
sahf
xchg
and
mov
push
shrb
mov
js
in
lret
xor
add
jp
mov
and
dec
jmp
popl
add
pop
or
fwait
mov
cmp
mov
dec
out
fiadds
xchg
sbb
mov
insl
ja
test
lcall
out
iret
or
std
adc
popf
inc
mov
mov
xchg
clc
mov
jae
insb
test
or
add
subb
imull
xchg
xchg
jecxz
jae
in
loope
inc
mov
push
outsb
ss
lods
dec
fldt
pusha
inc
sub
adc
xchg
pop
sub
sbb
push
out
bound
inc
clc
fcmovu
test
fcmovu
mov
loopne
in
dec
shlb
cmp
movsb
mov
inc
ss
mov
test
and
xchg
push
ds
iret
or
ljmp
outsb
add
pop
and
stc
inc
out
pop
pop
ret
les
inc
aaa
xchg
mov
adc
pop
sub
shlb
ss
lds
mov
inc
lds
fsubl
xchg
inc
inc
fmul
and
xchg
cmpsb
pop
dec
arpl
sbb
incb
pop
adc
mov
add
push
out
pop
jbe
cli
cmp
mov
mov
inc
jl
aad
js
mov
sahf
and
mov
push
jle
cmp
xchg
jecxz
pop
fdiv
push
sbb
aad
lcall
ror
hlt
adc
ret
xor
loope
gs
jae
orb
enter
rclb
cs
movsb
push
adc
test
xor
lods
xchg
sub
mull
arpl
arpl
jmp
push
or
cmp
aaa
iret
fmulp
mov
mov
mov
out
lock
dec
sub
nop
mov
cmpsb
loope
out
mov
sbb
mov
aad
flds
out
fs
jae
aas
jnp
bound
icebp
pop
sub
out
pop
sahf
in
mov
cwtl
or
and
mov
xlat
sub
notl
jnp
clc
adc
stos
add
jge
mov
jmp
jo
push
jb
jle
fbld
in
sti
shll
mov
out
lock
scas
scas
insl
insl
ret
icebp
sahf
adc
ret
lock
rcr
or
xor
int3
sub
pop
xchg
fimuls
js
aas
aam
cmpsl
dec
dec
jbe
pop
lds
jae
ljmp
in
pop
jecxz
fnsave
push
mov
sbb
inc
and
fsubs
add
int
aaa
push
pushf
scas
sahf
push
cmp
add
xchg
testl
das
idivl
jp
test
ss
jne
push
and
jecxz
sub
pop
outsb
scas
std
aas
pop
lods
insb
sbb
adc
mov
sbb
in
mov
cmp
push
mov
fiaddl
xchg
inc
js
mov
adc
or
push
int
dec
ret
repnz
je
xor
pop
lahf
mov
jnp
mov
rolb
jb
enter
adc
fwait
stc
cs
repnz
mov
mov
pop
xchg
adc
js
movl
std
xchg
push
fcoml
cmp
xchg
repnz
nop
cmpsb
xor
clc
jp
mov
lcall
inc
and
xchg
mov
pushf
aas
pop
fisttpl
out
jns
out
loopne
sbb
daa
out
dec
inc
cmp
pop
mov
cmp
inc
ret
xchg
mov
mov
sti
stos
ret
ljmp
popf
popl
sbb
push
sub
xchg
pop
sbb
jae
dec
mov
out
pop
sar
xor
lcall
adc
imul
xchg
sub
or
leave
jle
push
fwait
jns
nop
ss
jae
aam
stos
jecxz
sub
cmc
pop
adc
jl
sbb
or
jae
ljmp
rorl
push
xor
sar
dec
pushf
movsb
adc
xor
and
lock
jle
or
pop
sbb
and
imul
xchg
jno
fisubrs
sub
scas
inc
iret
lods
dec
test
mov
test
icebp
rcl
dec
mov
xchg
sbb
pop
push
mov
test
ja
pop
cmp
push
sub
push
mov
mov
test
lret
jns
lret
pushf
cs
jbe
inc
sub
roll
sbb
pop
pop
push
mov
mov
les
shll
lcall
dec
adc
ljmp
decb
lahf
xchg
fbld
cmpsl
popa
jae
fisubs
fcmove
shlw
les
jl
jg
in
mov
iret
jl
mov
xorb
loope
in
push
mov
xchg
jb
es
pop
rcll
mov
xchg
scas
aaa
cmp
outsb
jbe
xchg
fistps
jmp
cmp
insb
pusha
mov
pop
xchg
inc
jnp
insl
pop
out
mov
jne
in
mov
pop
out
loope
stos
cmp
adc
pop
adc
popa
dec
add
cmp
sub
test
lods
jge
clc
mov
xor
sar
stc
mov
call
addr16
xchg
xor
xchg
ljmp
aam
push
ja
lret
or
popa
pop
inc
xor
int
mov
aaa
sub
sub
leave
cwtl
or
or
add
scas
mov
xchg
test
and
out
jecxz
adc
lods
js
inc
rolb
icebp
pop
stos
repnz
lret
lcall
pop
inc
jo
jl
dec
or
dec
fidivs
or
xchg
inc
xor
imul
cmpsb
dec
imul
or
mov
and
fsubrl
jmp
out
push
inc
jge
dec
mov
sub
xchg
push
xlat
call
das
andl
pop
mov
ljmp
je
aad
add
lea
fsubrp
leave
ret
movb
cmpsb
dec
inc
fs
sbb
xor
iret
lret
and
xlat
push
das
das
sarl
cmp
mov
fbld
pop
pop
mov
pop
push
xor
addb
adc
jecxz
in
push
test
and
dec
pop
lret
mov
mov
mov
pop
lods
mov
ret
out
dec
fsub
test
add
lret
aas
and
das
pop
movsl
jmp
add
sbb
pop
imul
pop
mov
les
mov
lds
mov
dec
fxch
fsub
out
cmp
mov
das
xchg
adc
mov
or
xchg
movsl
les
mov
imulb
add
xchg
jecxz
inc
das
jno
fstpt
push
stc
in
in
clc
pop
sbb
add
cwtl
sahf
and
cmpsb
shrl
sub
inc
sub
xchg
out
lret
and
push
and
xchg
cmpsb
mov
dec
shrb
addr16
jmp
cmpsb
mov
sub
jns
cmpsb
dec
movl
xchg
sbb
dec
repz
pop
xor
jno
fmull
rclb
mov
leave
cmc
push
shlb
shlb
inc
ljmp
fmull
dec
inc
mov
pop
jl
mov
pop
imulb
sbb
in
cs
ljmp
dec
pop
sub
insb
push
into
jo
fcoms
divl
and
addr16
cli
cmp
dec
push
xchg
sub
movsl
lret
xchg
dec
push
test
xor
jbe
in
int3
rcll
sub
sub
cmp
lahf
pop
cmp
push
xlat
jb
into
sbb
mov
bound
rcr
inc
mov
jp
data16
push
xchg
pop
loop
ds
and
into
dec
mov
pop
mov
and
xor
rcrb
shrb
fimull
icebp
fdivl
adc
pop
add
mov
xlat
push
movsl
add
std
mov
jp
cli
out
jmp
ds
jo
inc
imul
sbb
mov
pusha
xor
dec
scas
int
fwait
xor
shrb
ror
iret
out
add
cmp
cmpxchg
shrl
pushf
bound
in
aas
cmp
pop
aam
jne
ret
pusha
mov
aaa
pushw
sbb
leave
pop
mov
into
notb
inc
push
gs
xchg
jno
movsl
lds
hlt
push
xor
dec
bound
push
rcrl
xchg
popf
mov
es
je
or
scas
shll
test
pop
icebp
dec
cwtd
xlat
fistpl
sbb
inc
cmp
sub
pop
cs
je
add
jne
ljmp
enter
push
xor
mov
daa
jo
call
cmp
xchg
xchg
mov
mov
cld
ss
stos
pusha
xor
mov
aas
mov
mov
jmp
int3
jg
rclb
iret
sub
cld
cmc
xor
inc
jp
mov
add
adc
add
mov
dec
icebp
mov
in
inc
and
push
movsl
mov
in
out
add
jne
aas
pop
jg
or
mov
pop
or
shll
aas
popf
adc
inc
or
sbb
push
xchg
dec
mov
push
scas
int
jns
xchg
push
frstor
push
jae
out
pusha
xchg
sub
xchg
jne
sub
into
adcb
ljmp
imulb
cmp
stos
push
mov
repz
in
dec
jbe
fs
insb
ret
gs
sbb
pop
xlat
mov
adc
xchg
xchg
stos
cmpsb
dec
imul
push
test
sbb
stc
sub
daa
jl
pop
jg,pn
sub
sub
mov
xchg
js
dec
test
gs
jo
sbb
mov
ret
jl
dec
jecxz
cmp
or
xchg
add
cld
scas
test
cmpsb
sbb
inc
xor
or
shrl
mov
clc
movsl
into
fimull
rcr
lods
mov
insl
icebp
lds
mov
dec
cs
lods
jae
pop
cmp
inc
test
icebp
sbb
jae
dec
cld
mov
mov
xchg
xchg
mov
dec
pop
in
dec
test
leave
nop
into
jmp
or
ss
push
mov
xchg
shl
jo
jns
insb
shlb
in
outsb
into
xor
cmc
xchg
rcll
cmp
and
pop
es
lock
jae
dec
ret
inc
cmpb
mov
insb
sbb
out
bound
jb
in
lahf
inc
adc
mulb
nop
scas
push
xchg
jb
mov
dec
inc
xor
inc
mov
pusha
mov
jo
xchg
fdivr
mov
in
std
aas
inc
xlat
shrl
mov
fcmovb
push
add
jae
add
andb
nop
sbb
sbb
int3
jne
sahf
push
add
insl
inc
inc
xor
sbb
pushf
jp
test
mov
adc
imul
mov
xor
or
fs
pop
fsubrl
xor
add
or
lcall
and
or
and
pop
or
xchg
sbb
jo
and
xchg
mov
lret
cmp
rorl
je
or
mov
jb
dec
lret
movsl
pop
push
in
pusha
jge
sub
mov
scas
out
mov
or
lods
inc
inc
js
arpl
jecxz
ret
dec
push
sarl
jns
ret
inc
mov
and
or
sbb
xor
inc
jbe
push
mov
imul
mov
push
and
sahf
adc
insl
sbb
sub
cmp
lcall
mov
cs
ds
cld
xchg
pop
dec
cltd
outsb
lea
in
icebp
int
clc
jle
add
pop
je
fisubrl
dec
mov
pop
inc
sbb
push
in
mov
in
cwtl
cwtl
add
arpl
xor
or
pop
push
lahf
stos
enter
clc
inc
push
pop
imul
cmpsb
sub
rorb
je
mov
xor
mov
in
movl
in
push
inc
mov
sbb
push
jge
add
in
imul
push
jno
or
add
add
in
pop
jne
movsl
xchg
ss
es
pop
cmp
push
lret
mov
aam
hlt
lcall
arpl
icebp
dec
xlat
js
adc
ljmp
mov
or
and
push
call
cmp
lods
and
test
aam
das
mov
stos
cmc
mov
inc
lcall
sub
jbe
hlt
and
sbb
push
cmpsb
testl
jnp
dec
inc
test
fiadds
shlb
jecxz
jne
ja
mov
mov
sub
mov
jge
dec
mov
push
mov
jge
adc
xchg
in
and
icebp
insb
add
mov
addl
mov
call
mov
sbb
xor
hlt
jne
sub
xlat
and
add
or
or
pop
mov
rolb
inc
and
add
movsb
loop
push
dec
push
pop
dec
cmpsb
in
cmpsl
add
punpckldq
insb
xor
add
mov
into
pop
sbb
negl
into
or
cld
loop
pop
and
cmpsl
das
jb
or
in
cmp
rorl
sbb
or
pop
cmpsb
sti
mov
shrb
sub
je
iret
arpl
lret
out
sub
jmp
or
movsl
lret
adc
enter
bound
jo
jno
jg
out
push
mov
inc
xchg
adc
into
dec
icebp
fistl
fldl
and
movsl
or
leave
cmp
jno
xorl
sahf
mov
stos
std
xor
and
mov
fbstp
mov
pop
or
push
xchg
push
str
movsb
stos
add
std
das
mov
arpl
lahf
mov
sub
jl
sbb
jae
or
and
insb
aad
int3
add
call
push
in
mov
and
in
popf
xchg
imul
enter
aas
gs
cmpsl
sbb
rdtsc
repz
mov
jae
out
mov
pop
scas
mov
pop
out
testl
gs
and
xchg
add
repnz
push
pop
ljmp
cs
and
lahf
pop
mov
mov
ds
cwtl
scas
mov
outsl
lock
lds
cmp
in
inc
scas
sub
test
pop
fdivp
adc
or
cmp
pop
ficoms
cmp
data16
mov
imul
imul
inc
js
sub
add
push
les
sahf
xchg
mov
nop
lock
stc
sub
mov
push
repz
pop
mov
cs
enter
mov
rclb
cmpsb
das
adc
cltd
jg
jae
xorl
out
push
push
push
push
push
and
clc
fsubrp
insl
inc
hlt
dec
jle
or
adc
into
leave
add
scas
push
repz
mov
or
lret
pushf
cmp
and
push
out
jo
sub
aam
or
movsl
nop
push
cmp
jae
cmp
lret
jge
inc
jge
repnz
ss
shrb
fistps
sarb
rorb
shrl
lahf
xor
dec
stos
faddl
cmc
or
jb
pop
mov
push
jmp
xchg
daa
bnd
sub
jbe
gs
jl
test
xor
mov
mov
sarb
mov
xchg
daa
pop
int
inc
mov
sahf
roll
int3
adcl
es
les
cmp
or
mov
test
mov
ret
ljmp
lds
add
push
imul
mov
and
mov
fwait
out
imul
fwait
mov
fbstp
shll
lods
fdiv
xchg
aaa
movsl
mov
sbb
xchg
pop
push
fadds
xor
mov
sbb
sub
and
int3
jle
xchg
in
jae
xor
mov
popf
dec
pop
push
mov
mov
cwtl
repnz
push
aad
shrl
mov
shrb
outsb
mov
or
shl
addr16
jno
dec
loope
dec
xor
jno
mov
clc
jb
jo
jns
fwait
xchg
test
lods
pop
and
jecxz
ret
dec
fsubp
or
mull
mov
push
insl
jne
pop
jae
jae
inc
insl
jp
xchg
add
cmpsb
and
leave
inc
cld
popa
nop
mov
popa
dec
inc
jnp
jno
cwtl
push
je
shll
fwait
mov
mov
mov
xlat
or
movl
sbb
dec
repnz
ret
lea
dec
mov
sbb
mov
std
pop
dec
jns
les
mov
pusha
jl
out
push
cwtl
add
inc
jecxz
dec
and
pop
outsb
sbbl
or
adc
cli
push
cltd
repz
pop
adc
fwait
and
and
popf
pusha
add
clc
mov
aas
out
or
mov
scas
ljmp
push
lcall
loop
mov
dec
fisttps
cmp
or
insb
inc
dec
mov
jo
outsb
insb
mov
leave
dec
ja
cmpsb
mov
out
jp
dec
mov
ret
stos
xchg
inc
xor
imul
popf
shll
ds
fcomps
pop
or
cmp
mov
dec
repz
js
cmp
lret
nop
sti
pop
ret
test
jge
pop
mov
mov
sub
cmp
cmp
rolb
push
std
mov
push
shll
mov
pop
enter
es
dec
loope
pop
fisubrl
les
in
pop
mov
jns
insb
lods
fnclex
movlps
movsl
cmpsl
test
cmp
loop
ret
orl
mov
xor
push
xor
mov
jmp
jnp
mov
sub
arpl
lcall
or
mov
and
xor
lock
aas
sahf
in
pop
lea
mov
pxor
mov
sub
les
xchg
mov
stos
adc
xchg
insl
outsl
cmpsb
xor
jae
testb
xor
mov
in
jecxz
hlt
lods
ljmp
in
icebp
mov
cmp
jne
push
or
cwtl
jge
cwtl
test
mov
push
aam
add
sbb
fnstenv
outsb
cltd
addr16
mov
add
add
clc
shlb
jae
dec
inc
lea
icebp
pop
out
inc
das
je
cmp
lods
pop
jnp
lds
xchg
sbb
addr16
add
adc
ds
cmp
ljmp
popa
jb
imul
jg
es
inc
sub
fldl
les
adc
outsl
mov
ret
in
pop
sbb
call
xor
arpl
cmp
data16
cmp
xchg
xchg
mov
sbb
stos
mov
prefetcht1
mov
cmp
sub
add
jg
rclb
mov
inc
loop
addb
xchg
sbb
je
das
xchg
lods
jg
shlb
or
cld
jnp
test
jge
and
add
add
add
les
int3
sti
jge
std
jnp
and
lret
mov
dec
int3
xchg
and
mov
in
cmp
pop
mov
pop
lods
fwait
stos
int3
scas
xor
push
mov
loope
pop
and
or
stos
and
sti
in
lcall
sub
or
and
mov
out
jmp
xchg
cld
pop
iret
pop
pop
fildl
dec
test
je
xor
mov
les
ret
shlb
cmp
sbb
mov
pop
mov
xchg
sbb
and
push
pop
sub
add
popa
in
scas
adcb
aad
push
pusha
sub
pusha
sbb
jmp
push
pop
repz
push
pop
xchg
lods
test
lods
xchg
clc
lret
insb
push
mov
subl
dec
mov
inc
sub
jo
clc
das
std
add
sbb
pop
iret
in
cltd
cli
iret
ljmp
cmpsb
or
jecxz
mov
arpl
fdivr
int3
adc
fldenv
add
jmp
addr16
inc
dec
ret
int
into
xor
ds
out
adc
in
xchg
les
push
xor
movsb
imul
dec
scas
les
fwait
xchg
push
jl
data16
sub
pop
rorb
je
popf
adc
cld
cmp
pop
les
xchg
imul
addl
mov
fisubrs
mov
stos
enter
mov
push
and
arpl
out
xchg
out
sbb
dec
fcmovu
jle
cmc
push
xor
xor
nop
push
bound
pop
xchg
jae
cs
mov
mov
mov
add
jge
sub
or
inc
dec
jmp
movntps
sbb
loopne
adc
fbld
push
cmp
pop
xchg
pushf
jl
jbe
rolb
lock
sub
xchg
sub
cmc
xor
lret
rcrl
call
cli
dec
jmp
rcrb
xchg
ja
mov
imul
jb
rorb
stc
sti
push
lret
cmpsb
mov
mov
xor
cltd
int
pusha
lods
lea
mov
ficoml
push
mov
jo
or
mov
pop
xor
mov
ret
cs
sbb
inc
sbb
sbb
dec
mov
jp
inc
lahf
sti
add
add
push
mov
fadds
and
sbb
aam
or
sub
sahf
leave
inc
jne
lahf
lret
rcll
sub
add
push
mov
mov
call
xor
pop
popa
or
mov
jb
dec
cld
mov
xchg
mov
aam
leave
jle
jmp
jne
dec
test
xor
inc
push
loop
call
mov
xlat
jo
cli
sti
xchg
xchg
stos
push
mov
sbb
push
or
testl
movsl
xor
int
pop
stc
inc
sti
xor
adc
mov
push
adc
stos
nopl
inc
sbb
out
inc
cmp
enter
and
ret
inc
js
push
jl
or
xlat
jge
and
cmpsl
rolb
lds
aaa
jecxz
divl
push
test
ds
sub
mov
rcll
cmp
or
mov
xchg
shl
mov
fcomp
fdivl
add
into
mov
es
outsl
fldcw
pop
mov
stc
icebp
mov
xchg
cltd
out
aad
push
mov
jns
mov
les
shlb
push
sti
push
push
push
pop
sbb
push
sbb
xchg
mov
cmovae
pop
xor
jg
push
xchg
rclb
mov
iret
fcmovne
cmpsb
call
imul
mov
cmpsb
or
inc
xor
add
adc
cltd
push
mov
xchg
mov
or
rolb
int
push
sti
mov
xchg
hlt
sub
cmp
loopne
mov
in
pop
or
xchg
add
adc
inc
scas
cmp
adc
jge
pop
dec
mov
jmp
pop
sahf
jo
pushf
test
sub
dec
jmp
mov
fildl
or
fldenv
add
pop
loope
pop
repnz
pop
scas
sub
add
test
aas
add
xor
push
push
fstpt
imul
lret
lcall
pop
xchg
xlat
lret
popl
adc
mov
in
rcpps
dec
jbe
or
pop
test
incl
dec
mov
and
arpl
loop
or
adc
xchg
imul
scas
fucom
or
mov
xchg
cmpsb
stc
inc
and
mov
xchg
daa
sti
pop
ljmp
stos
cli
out
mov
repnz
pop
repnz
loope
inc
mov
mov
cwtl
push
jmp
jl
test
shrb
sti
cmp
add
push
inc
jno
test
ljmp
sub
xchg
ja
rorl
jge
imul
push
sub
push
xchg
add
and
lcall
mov
call
fisubl
dec
sbb
icebp
jge
mov
fnstcw
adc
xor
cli
mov
push
cmp
lahf
decl
aad
fcoms
inc
loope
call
cmpsl
xchg
cmp
ret
imul
dec
mov
pop
sub
xchg
xchg
pushf
pop
in
add
rclb
sbb
adc
cld
xor
mov
int3
iret
xor
add
sbb
shrb
call
jge
sub
pushf
insb
mov
in
imul
jnp
xchg
mov
fmull
inc
loopne
cmc
mov
xor
mov
loop
pop
imul
cmp
sbb
xchg
sub
stos
sub
pop
fimuls
add
gs
adc
bound
cmpl
movsb
sti
dec
adc
pop
sbb
and
icebp
inc
sub
in
push
adc
and
aam
pop
in
fimull
mov
and
fcoms
lods
enter
lods
cmp
push
push
iret
add
mov
mov
or
clts
loopne
pusha
dec
xor
sub
xor
rorl
push
js
mov
rol
stos
pushf
push
push
mov
mov
repnz
mov
out
fistpl
mov
push
mov
push
rcll
jle
pop
arpl
leave
aaa
in
fstl
mov
out
push
and
jae
sbb
sbb
jg
pop
xor
sbb
sahf
andb
lahf
bound
xchg
xchg
jle
fsts
push
pop
and
cmp
dec
mov
sbb
push
xchg
mov
inc
movsb
dec
and
mov
mov
mov
aas
xchg
push
xor
inc
cmp
or
repnz
lods
mov
mov
inc
cwtl
cwtl
adcb
bsr
add
dec
notl
sub
sub
xchg
pop
insb
jge
pop
push
data16
and
or
sub
push
mov
in
sub
push
sbb
das
sbb
fdiv
lret
xchg
fsubl
mov
pop
add
sbb
pushf
jle
jl
adc
dec
xchg
subl
sub
mov
jb
push
movsl
adc
iret
fimuls
int3
jge
das
jae
scas
mov
bound
pop
aam
jo
in
out
sbb
movsl
in
add
dec
in
xor
and
push
xlat
inc
jae
test
pop
iret
push
add
shll
in
mov
je
add
mov
and
pop
pop
in
dec
pop
test
mov
pop
cmpsl
adcb
iret
sub
sti
shrb
mov
int
mov
pop
jge
sub
aam
gs
jle
mov
xchg
pop
mov
in
in
mov
mov
mov
sbb
jae
jg
mov
cmp
xchg
arpl
inc
ret
mov
imul
loopne
stc
scas
out
pop
ret
call
jmp
lods
test
pop
cmp
cltd
add
add
pop
push
and
inc
pop
shr
scas
add
aaa
cld
cmp
jbe
adc
fadd
insl
ret
pop
cmp
insl
lock
cld
outsl
xchg
add
push
lods
add
hlt
addr16
mov
imul
push
push
xchg
out
sub
mov
mov
push
fdivs
fistl
jnp
jge
outsl
xchg
out
outsl
and
and
in
aaa
inc
iret
jle
cmc
icebp
leave
notb
out
mov
or
ficompl
hlt
xchg
or
out
jns
popa
push
sbb
inc
test
outsb
sbb
repnz
xchg
ret
pusha
cmp
stos
dec
push
out
xor
popa
mov
jge
lock
test
ljmp
cld
je
jae
sbb
dec
mov
sbb
mov
ror
sub
dec
sub
test
popa
outsb
out
enter
mov
or
jl
xchg
popf
fnsave
je
in
neg
mov
and
je
dec
insl
ja
jnp
lret
aad
cltd
push
mov
pop
in
mov
dec
dec
xor
popa
and
jbe
pop
je
dec
and
out
popf
insb
sbb
mov
aam
mov
xor
movsb
lahf
or
push
sub
xchg
push
push
stos
and
dec
sub
test
xor
xor
scas
in
aad
pcmpeqw
and
loopne
sbb
add
mov
xchg
mov
jae
je
pop
cmc
insb
mov
sarb
in
insl
dec
arpl
push
sub
fsts
stos
or
popl
add
mov
in
es
push
je
fldcw
mov
mov
adc
jp
xchg
cmp
jnp
xor
adc
fninit
mov
xor
adc
repz
lea
dec
out
leave
cmp
push
hlt
mov
sub
jle
mov
jl
data16
add
int3
lods
or
sti
pop
adc
subl
mov
shlb
mov
ds
jne
pop
mov
lahf
pop
cmp
mov
mov
mov
movl
push
add
pop
repz
sbb
and
sti
jl
mov
mov
cmp
sbb
lock
mov
dec
pop
shlb
daa
scas
pop
or
testb
test
jmp
fstps
sbb
xchg
pusha
inc
xlat
xchg
orl
push
and
enter
and
inc
nop
mov
sbb
mov
into
mov
cmp
mov
xchg
ss
xchg
push
adc
sbb
mov
scas
push
sbb
sub
xchg
daa
insl
jb
and
inc
push
lds
sbb
mov
pop
push
fs
xor
xchg
sbb
push
inc
lcall
repz
jns
arpl
stc
stc
pop
jbe
cmp
sbb
push
adc
cmp
mov
cmpsb
sti
cmp
test
jo
push
jnp
sbb
cs
cmp
jno
es
inc
stc
test
inc
fwait
rcr
push
je
cmp
mov
mov
lret
xchg
cmc
popa
jnp
sahf
sahf
outsb
pop
popa
dec
pusha
mov
ret
add
dec
subl
lcall
or
adc
inc
fiaddl
adc
push
push
das
imul
xchg
arpl
sbb
lock
mov
sbb
loopne
je
inc
xchg
sbb
lock
popf
or
in
in
int3
pop
dec
adc
imul
dec
xchg
add
jecxz
mov
out
pop
add
and
mov
fisubs
adc
in
mov
or
ljmp
adc
shll
adc
or
fcos
cmp
lcall
cmpsb
sub
jb
imul
and
sarb
mov
aaa
or
iret
xor
insl
enter
cli
shrb
ss
fisubs
xor
cmp
add
clc
jmp
adc
xchg
jb
das
stc
inc
mov
mov
es
pop
gs
cs
incl
push
xlat
test
loop
and
xchg
lods
dec
sub
inc
in
dec
mov
into
jecxz
rcrl
jo
adc
adc
dec
gs
leave
sub
inc
mov
adc
sbb
or
sbb
outsl
jno
imull
push
dec
cmp
pop
mov
aas
pop
xor
inc
cmpsb
push
xchg
loop
cwtl
jg
stc
in
xchg
cli
insb
dec
in
sahf
aam
dec
xor
lret
xchg
and
jmp
sti
dec
fimull
sbb
xorb
push
lret
pop
jb
int3
pop
ljmp
jb
outsb
out
bound
push
xchg
movsl
nop
push
pop
out
leave
lea
cltd
in
hlt
inc
fistpl
int3
xchg
pop
jbe
inc
xchg
fwait
in
mov
or
sbb
sbb
popa
inc
cmc
mov
sbb
push
mov
in
dec
out
mov
ret
fildll
xchg
sahf
repz
sbb
inc
pop
add
push
call
cmp
nopl
pop
fucom
sub
xor
in
fsqrt
enter
andb
lcall
mov
push
jl
push
testb
xor
test
adc
fstpl
push
inc
push
add
fnstcw
inc
lret
ret
cmp
lds
xchg
xlat
jge
mov
add
cwtl
inc
lcall
roll
xor
and
std
cli
aad
or
xchg
daa
je
cmpb
cltd
add
pop
imul
movsl
dec
cwtl
enter
jno
leave
popf
xor
push
loope
inc
aaa
sbb
test
aaa
jmp
cs
ja
int
or
imul
fcomps
sub
cmpsl
test
fnstsw
xchg
lock
xchg
mov
shl
adc
loopne
ret
hlt
mov
dec
pushf
arpl
and
pop
dec
xchg
nop
push
dec
cmpsl
cmp
cmp
repnz
jp
ja
xchg
dec
subb
insb
daa
mov
adc
mov
addb
xchg
xor
cld
mov
jl
leave
jno
jmp
cmp
mov
repnz
rorb
inc
inc
mov
clc
bound
dec
xchg
cli
movsl
fiadds
jmp
dec
insb
mov
jg
xor
push
std
push
xchg
push
jp
mov
jnp
dec
mov
test
dec
dec
mov
aam
jnp
xchg
loop
jb
inc
or
ja
rclb
incb
xchg
shl
int
xor
lret
dec
jmp
xorb
ss
es
jo
inc
xor
aad
pusha
fwait
sub
lret
inc
pop
add
adc
shl
and
adc
sbb
sbb
in
shll
in
ret
repz
ljmp
aas
aas
jnp
sbb
std
and
shrb
mov
jae
pcmpeqw
loope
mov
add
jo
ret
test
adc
std
mov
xorb
scas
mov
jmp
imul
dec
pop
xchg
fisttpl
push
lock
sbbl
aad
addr16
inc
jnp
xchg
call
addr16
int
hlt
in
jo
lods
jge
mov
jbe
sbb
sub
cmp
pop
shlb
sahf
push
clc
arpl
xchg
push
jg
dec
mov
lds
sub
add
cmp
mov
jns
pop
pusha
ljmp
inc
mov
pop
xor
test
add
or
sub
xchg
es
getsec
xchg
in
roll
addb
jecxz
dec
fstpt
inc
xchg
inc
ret
ret
mov
repz
inc
inc
jl
jno
xor
pop
fsubp
jge
out
sbb
push
into
lret
int
inc
inc
rcl
stos
add
scas
repz
mov
push
addb
dec
xor
outsb
adc
jno
push
cmc
or
dec
cmpsb
sar
movsl
inc
ljmp
mov
out
cmp
add
fstpt
xchg
ret
pop
xor
loope
pop
fiaddl
jbe
mov
pop
adc
dec
fstpt
rcll
cs
rcrb
or
mov
pushl
or
dec
pop
stos
xchg
sub
mov
leave
lds
fbld
outsb
or
jmp
or
or
mov
and
fwait
jp
lea
push
mov
dec
xchg
jmpw
scas
test
jle
aad
mov
iret
mov
lds
aad
jno
lock
inc
lea
movsl
fwait
and
mov
int
stc
imul
pop
iret
sub
ret
mov
daa
cmpsl
mov
aam
adc
xor
rol
clc
or
sbb
xor
jo
push
rcr
xchg
push
add
fwait
scas
fcomp
call
push
ljmp
xor
repz
push
pushf
mov
les
or
enter
cwtl
mov
and
gs
fildll
in
notl
push
mov
cli
push
cmp
das
shl
cmpsb
adc
pop
push
rcr
jg
aad
cs
rcll
jne
lods
dec
dec
push
lds
xchg
pop
inc
out
aad
out
aaa
shll
in
clc
pop
pop
gs
ds
lods
mov
ret
push
mov
sbb
sti
adc
jp
shlb
xchg
mov
lods
or
test
add
xchg
das
bound
out
es
pop
fldenv
and
repz
cmp
popf
jge
loope
mov
jno
test
or
in
mov
adc
dec
push
cltd
pop
mov
or
cli
pop
push
mov
and
mov
sub
fisubrs
test
xchg
out
xor
insl
jl
jmp
cwtl
lcall
cmpsl
fsubrs
fldl
sbb
cmp
daa
jle
movsb
jmp
xchg
aaa
aam
xchg
jmp
dec
mov
xor
adc
xor
xchg
xchg
enter
dec
cmpsl
repnz
push
inc
mov
adc
icebp
in
not
fimull
test
mov
jg
cmp
xor
test
pushf
dec
je
movsb
dec
ljmp
jnp
xchg
movsb
shll
inc
xchg
in
push
pop
adc
cmpw
xlat
or
push
cmpsb
testb
popa
xor
js
out
mov
test
scas
pop
xor
push
dec
xchg
sub
shrb
push
ja
mov
push
iret
adc
in
mov
jne
cmpsl
dec
push
insb
sti
out
and
icebp
repnz
cs
mov
cld
nop
or
ja
adc
jl
lret
jle
fldcw
cmp
pop
shll
insl
out
lock
fstl
inc
loope
outsb
outsb
xchg
insl
cwtl
imul
leave
push
lret
xor
roll
cmp
stos
cmc
mov
mov
lods
js
xchg
push
inc
or
lahf
dec
or
mov
aad
mov
and
mov
or
jecxz
push
or
fisttpll
push
xor
out
mov
movsb
mov
cmpsl
ret
stos
xor
jl
xchg
loope
xchg
inc
test
dec
push
popa
add
mov
dec
mov
pop
cmp
cmp
push
jno
out
mov
or
lods
pop
xchg
loope
xchg
fmuls
cmp
add
lock
sub
cmp
out
dec
dec
les
sub
cmp
repnz
cmp
lea
ret
or
jo
ret
pop
push
mov
inc
rol
sub
xor
jp
std
adc
adc
lea
mov
cmp
jg
rorl
out
dec
iret
clc
add
insl
lock
push
jno
into
jl
scas
dec
push
outsl
pop
mov
add
pop
inc
jp
add
mov
push
mov
mov
push
cld
mov
filds
mov
sbb
cmpsl
mov
xchg
int3
cwtl
fsubrs
lret
and
movsb
lds
xlat
in
inc
xor
addr16
fldt
and
pop
adc
mov
mov
mov
adc
rcrl
ja
sub
sti
jae
sbbl
cli
mov
std
addb
adc
adc
adc
lods
push
pop
pusha
pop
test
jmp
or
int3
jl
adc
lods
icebp
sti
lea
cvttps2pi
lret
imul
rorb
inc
in
in
push
or
negl
scas
data16
fs
lcall
add
mov
sbb
lds
addr16
push
ja
adc
fwait
or
mov
lock
lods
sbb
mov
pop
cmc
pop
adc
push
add
add
xchg
cltd
mov
sub
mov
aas
frstor
repz
add
or
mov
sub
daa
call
sarl
out
adc
xchg
mov
popa
adc
jle
shlb
repz
jmp
sub
pop
ret
inc
es
push
push
adc
adc
adcb
pusha
pop
iret
lods
push
cwtl
movl
pop
js
call
jb
jmp
je
sti
cs
jno
cltd
push
jmp
aaa
dec
push
sbb
xor
jmp
jl
cwtl
in
mov
inc
sub
sbb
fsub
movsb
add
into
xchg
ja
and
fldl2e
mov
pop
pop
incl
fwait
bound
divb
loopne
aaa
sub
lcall
pop
jo
adc
sub
repz
mov
and
in
subb
or
lods
push
add
test
or
pop
es
enter
mov
pop
sbb
into
arpl
leave
push
jnp
and
push
insb
shld
xchg
arpl
xor
loopne
cs
cld
stos
and
aam
push
out
sbb
or
mov
mov
mov
dec
ret
mov
jle
jl
loop
js
jbe
jno
out
adc
call
add
imul
xchg
pop
inc
leave
cmc
add
hlt
push
ret
or
hlt
cli
int
fidivrl
jmp
inc
in
fmull
and
dec
jb
cld
int
aam
cmp
pop
rcll
adc
mov
pop
inc
dec
add
lret
test
xor
cmpsl
inc
mov
mov
ljmp
mov
or
hlt
mov
addb
mov
inc
data16
mov
int3
inc
push
lods
and
std
ljmp
jp
lds
nop
xorl
or
mov
or
mulb
aas
jecxz
and
das
ds
pop
mov
xor
mov
mov
xor
xchg
cltd
or
lcall
and
out
leave
cli
pop
push
insb
cwtl
aam
xchg
scas
pushf
inc
push
js
stos
mov
push
sbb
push
xor
mov
pop
in
sarl
sub
sti
rol
lcall
loopne
sbb
and
and
sbb
xchg
mov
int3
popa
xor
xor
mov
push
jg
mov
lock
aad
mov
or
shl
sbb
ret
std
lock
das
jge
push
inc
mov
mov
sub
xchg
lods
pop
sub
fs
jno
xchg
mov
mov
inc
push
pop
push
mov
repz
xchg
sub
incl
add
jecxz
aad
sahf
movsb
cmp
jmp
cwtl
xchg
nop
add
mov
out
jns
sub
sub
sbbb
nop
es
and
aad
cli
adc
or
and
rclb
out
mov
jecxz
sbb
leave
jecxz
cmpsl
inc
lds
push
inc
add
das
sub
jne
data16
loope
xchg
mov
jle
mov
adc
sbb
xchg
dec
and
jecxz
dec
adc
out
dec
add
dec
imul
test
jbe
add
nop
jbe
adc
mov
pop
call
loope
outsl
ret
dec
ja
xor
rcrb
dec
int3
inc
ror
adc
arpl
jno
sub
fucom
arpl
in
jae
xchg
aam
inc
ror
mov
cmp
aam
cvttps2pi
test
leave
movsl
mov
fs
lahf
ret
dec
or
push
sub
pop
aad
insb
jge
push
enter
dec
repz
push
lds
push
pop
cli
xchg
fildl
aam
jle
jl
xchg
icebp
xor
inc
add
mov
loopne
adc
jl
pop
test
iret
aas
jns
xchg
nop
xor
mov
xor
mov
arpl
xchg
add
shrb
sbb
aam
jae
fstp
insl
rcl
jge,pn
lahf
cli
cmp
bound
pop
xchg
in
cmp
stc
inc
sub
dec
hlt
aaa
dec
imul
stos
cmp
in
fcoms
mov
adc
jne
add
cmc
cmp
or
fs
sub
push
stos
js
adc
push
sub
enter
xor
jp
out
jle
in
call
in
sub
test
mov
movsl
sub
add
push
lods
xchg
out
int
jecxz
out
adc
andl
leave
mov
cmc
sub
fstpt
jbe
fwait
dec
popa
into
push
repz
into
inc
xchg
stc
sub
push
popf
fnstenv
xor
fwait
dec
pop
ret
mov
mov
shll
sub
lds
jmp
das
out
push
adc
int
xchg
rorb
fidivrl
stos
data16
jg
dec
cli
adc
pop
imul
scas
ror
add
nop
loopne
sar
out
jnp
push
mov
mov
cmp
mov
mov
lahf
sti
push
adc
cmp
mov
cmc
dec
sub
and
or
xchg
lods
gs
sbb
fdivp
stos
sub
or
adc
inc
jmp
sub
sub
and
jbe
loopne
mov
fisubrl
dec
leave
sbb
out
mov
pushf
cmpl
popf
mov
or
test
jmp
dec
fmull
inc
insl
adc
loop
clc
dec
in
sub
lcall
add
movsb
inc
or
push
or
aam
fldt
sbb
bound
pushf
aas
adc
sub
xor
and
and
sbb
ja
cltd
cmp
inc
adc
jl
or
push
daa
insl
mov
test
insl
scas
cli
roll
insb
ficompl
pop
or
jbe
out
movsb
and
ljmp
test
in
mov
inc
arpl
xchg
or
imul
int3
in
sahf
jmp
in
orl
mov
dec
cmc
loop
loopne
cmpsl
jbe
jle
je
dec
xor
mov
stos
fs
repz
jbe
repz
stc
mov
push
leave
mov
mov
cmp
add
xchg
xor
sarb
mov
cmp
push
idivl
shlb
cltd
shlb
pop
fstpl
xchg
pop
adc
aaa
cmp
ret
aaa
lret
mov
pop
lods
int3
jecxz
jmp
scas
dec
xlat
stc
popa
into
fdiv
mov
jmp
or
jle
dec
enter
mov
push
shlb
aas
push
mov
outsl
ds
dec
xchg
inc
mov
jb
mov
int
out
notl
sbb
xor
dec
lahf
cld
fnsave
dec
or
stos
nop
stos
mov
cli
mov
or
gs
adc
push
jecxz
lea
cmp
push
movsb
dec
cmp
popa
fdiv
les
mov
scas
or
gs
aam
mov
arpl
push
int
adc
cwtl
int3
or
out
pusha
adc
int
mov
jmp
rorl
dec
faddl
sbb
or
push
mov
pop
and
push
fldcw
cmp
pop
mov
pop
cwtl
cmp
or
xchg
outsb
pop
sbb
pop
pop
push
pop
cmp
xor
inc
sbb
out
cmp
cld
dec
sbb
jne
jne
cmp
pop
mov
lret
or
pop
pop
adc
adc
pop
xchg
imul
jp
sbb
mov
insb
out
mov
or
pop
add
call
mov
sarb
xchg
xchg
inc
fdivrs
or
and
adc
lods
adc
add
sti
add
push
xor
popa
incl
loopne
cmc
sub
push
test
or
les
stos
divl
add
xor
and
ret
add
dec
nop
mov
mov
add
lods
dec
jp
push
push
sahf
pop
mov
repnz
sbb
cltd
loope
mov
les
test
cmp
popa
repz
in
leave
leave
jbe
fistpll
jne
mov
or
push
out
xor
ret
jb
mov
mov
jnp
cmp
push
xor
std
loop
call
test
jmp
and
bsr
mov
mov
push
movsl
jecxz
stc
rcll
push
adc
push
xor
adc
cmpsb
test
sbb
and
or
dec
cwtl
dec
xchg
incb
ss
adc
inc
push
add
test
push
pop
in
jle
inc
stc
add
dec
sbb
dec
gs
lret
mov
test
inc
test
ret
js
scas
shrl
pop
nop
fsubs
cmc
xor
xlat
loop
sbbl
xorl
ljmp
xchg
ret
inc
or
das
mov
jo
mov
and
jge
je
psubd
push
inc
outsb
lods
fmull
gs
sub
mov
jae
dec
jnp
pop
pop
mov
call
les
call
inc
jle
or
in
xor
jne
or
repnz
lahf
subb
negb
cwtl
add
inc
movsl
mov
dec
xchg
dec
or
dec
mov
inc
jo
cmp
and
add
repnz
or
movsl
dec
js
data16
aam
mov
mov
pop
add
lods
scas
ficoms
cld
mov
int
jne
mov
mov
hlt
stos
xchg
inc
push
lahf
lds
adc
fcmovu
mov
or
imul
dec
scas
test
in
xor
dec
sqrtps
clc
mov
pop
lret
repnz
xor
insb
jno
adc
inc
lret
aam
xor
stos
add
hlt
pop
fwait
cld
sub
lds
and
cwtl
pop
sbb
sub
std
xchg
stos
aad
and
rolb
rorl
sti
push
sub
int3
repz
fdiv
inc
fs
cmp
mov
leave
jne
cli
xor
xlat
daa
icebp
mov
jg
subl
pop
jl
lods
rclb
add
das
aad
pusha
mov
div
xchg
push
ret
daa
pop
dec
push
repz
add
sbb
aad
pop
and
pop
cmp
jge
pop
clc
loope
inc
sbb
in
pop
mov
mov
sub
xchg
sub
or
iret
sbb
ljmp
insl
xchg
test
outsb
mov
pop
mov
scas
cmovp
shlb
ja
lea
pop
nop
xchg
pop
je
jae
ds
xchg
push
cmp
mov
or
mov
call
fstpt
cmp
adc
add
ljmp
or
addr16
mov
or
fisubs
sbbl
jg
rorb
mov
push
ret
dec
sti
push
push
xor
sub
mov
sub
jp
mov
xchg
repnz
sbb
test
das
xor
cmp
gs
and
push
xor
sub
jbe
aad
mov
inc
stos
mov
fstpl
push
dec
loopne
fdivl
in
mov
jecxz
sbb
adc
insb
pop
push
jno
jns
xlat
cltd
xor
scas
test
cmp
xor
add
mov
xlat
test
in
push
push
fildll
std
pop
mov
and
cmc
das
enter
mov
push
roll
dec
push
xor
mov
push
cmp
mov
or
jnp
adc
sub
int3
mov
cmp
loope
mov
xchg
adcl
xchg
xchg
cli
int
movsl
mov
or
jo
push
paddq
pop
fucomi
out
xchg
mov
icebp
cmp
rclb
fwait
pop
lods
pop
sub
in
jbe
in
add
xchg
jno
pop
lahf
loope
test
and
inc
mulb
cmpsb
aas
loopne
xchg
push
inc
fmull
add
xchg
dec
add
imul
pop
jo
popf
inc
pop
mov
sarb
jmp
jge
inc
int
sub
and
dec
fimuls
mov
sub
sbb
loop
fisubl
xor
cli
xchg
dec
and
sub
and
sbb
push
repz
pop
jl
rcr
xor
xchg
fcmove
rcl
jo,pn
or
adc
xchg
popf
fnstenv
mov
cmpl
lods
lea
mov
sbb
testl
xorl
notb
stc
xchg
dec
stos
out
push
pop
loop
imul
jl
mov
fsubl
jb
adc
and
and
xor
sbb
push
imul
scas
cmp
fiaddl
cmp
ret
cmp
dec
mov
push
add
or
lock
pop
mov
pop
inc
rorl
call
pop
cmp
rcrb
cmp
inc
mov
ja
subb
das
xor
ret
repnz
jmp
sbb
dec
xor
addr16
mov
lret
test
pop
or
mov
mov
pop
dec
sbb
movsl
shll
sub
lret
fsub
insb
pop
in
dec
or
fsubl
add
call
xor
rcr
push
cmp
mov
mov
andl
test
xor
adc
dec
popa
adc
pop
inc
dec
fdivrs
jae
mov
arpl
loopne
rol
int
xor
stc
in
jae,pt
and
addr16
lahf
push
xlat
jmp
jne
inc
push
cmp
pop
and
cmp
pop
ret
lods
xor
jg
mov
cmc
andb
cmp
leave
lret
jecxz
int
cmp
mov
lds
push
ffreep
xchg
dec
outsl
loop
mov
lret
push
int3
lods
jo
mov
push
adc
xchg
mov
mov
dec
test
mov
dec
lret
sub
arpl
test
pop
jle
xlat
dec
fs
negb
fwait
mov
test
roll
mov
inc
and
cmp
xor
in
push
cmp
and
or
pop
mov
pop
cmc
push
aad
repz
mov
clc
rcrl
cltd
insl
fsubrs
cmc
dec
fcompl
ret
std
xchg
test
je
jae
movsb
popa
idiv
fs
out
fs
jecxz
xorb
and
xor
ljmp
ljmp
and
jno
insl
xchg
mov
pop
adc
pop
repz
loopne
cli
popf
sbb
lods
outsb
jns
cli
adc
adc
loop
xor
push
or
mov
in
adc
lds
mov
out
int3
out
xlat
and
std
push
push
push
dec
add
outsb
inc
push
dec
call
shrb
out
add
inc
cmp
test
jp
dec
pusha
pop
push
push
inc
cltd
mov
iret
mov
inc
andb
and
jmp
outsl
lods
jmp
xor
out
fstpl
notl
pop
push
iret
mov
adc
subb
xchg
add
mov
and
movsl
fwait
adc
mov
mov
fwait
mov
outsl
fsubr
in
inc
push
dec
hlt
cli
movsb
or
andl
outsb
movsl
adc
inc
xchg
mov
push
jecxz
sarb
cmc
dec
rorl
adc
in
jo
jae
and
mov
pop
dec
lock
out
and
sti
cmp
lock
lahf
dec
dec
mov
xor
push
inc
lds
loop
stc
loope
int
dec
adc
addb
aaa
lds
lods
popa
or
fucomi
pop
mov
or
push
or
loop
mov
push
and
mov
sti
pop
cmp
aaa
mulb
lods
inc
sar
mov
out
xchg
push
jbe
and
and
cmp
sbb
pusha
cltd
mov
push
pop
dec
rorl
nop
push
mov
sbb
out
push
mov
cmp
pop
ret
or
xor
mov
int
notl
xor
sub
cmpsb
jle
xchg
sub
scas
lods
dec
add
dec
sbb
sub
sbb
inc
or
xor
ja
and
add
outsl
jmp
fwait
xchg
inc
mov
push
and
lods
lock
cs
les
aam
mov
in
pusha
popa
cmpsl
mov
fsubl
call
icebp
xchg
inc
cmpsb
call
pop
mov
ret
dec
outsl
mov
test
push
mov
roll
dec
lea
dec
push
xchg
imul
jle
jb
jnp
add
or
int3
pop
lcall
call
pop
rolb
cmpsb
es
mov
dec
gs
dec
sbb
js
inc
rolb
push
popa
push
data16
push
sbb
xor
xchg
add
jle
mov
xor
fisttpll
inc
or
lahf
cltd
mov
sbb
mov
cmpsl
pop
movsl
xchg
dec
shll
jb
mov
dec
push
seto
mov
cs
sub
sub
movsb
mov
mov
adc
or
sub
imull
jbe
jp
data16
jp
mov
sub
das
mov
in
fistps
jecxz
xchg
and
outsb
ja
xor
xor
pop
dec
lcall
sbb
and
sub
sub
push
aad
jbe
mov
enter
mov
dec
cmp
popa
cmp
loopne
test
adc
mov
jg
lods
cmp
and
dec
scas
cli
push
rcrl
inc
daa
push
dec
adc
fwait
xor
aad
pop
xchg
mov
les
jle
xlat
mov
bound
and
mov
sbbl
jbe
jne
xor
pop
mov
mov
cs
push
fwait
cld
arpl
and
push
ljmp
das
mov
mov
fdivrl
enter
lea
popa
outsb
divb
sub
xchg
jns
sahf
xchg
and
mov
sub
xlat
repz
xchg
int
jmp
jnp
rcl
ds
je
xchg
jb
cmc
loopne
mov
dec
stc
mov
out
sbb
jno
inc
sti
sbb
movsl
jno
pop
dec
mov
aad
dec
addr16
mov
outsl
cmp
jl
mov
je
pop
xchg
test
and
add
scas
inc
inc
inc
addr16
push
xchg
addr16
add
ds
mov
mov
sub
cmpsb
dec
sbb
movsl
xchg
cmpsb
loopne
aas
js
lock
dec
ljmp
mov
movb
sbb
mov
cmp
mov
fiaddl
dec
insb
cmp
push
icebp
jmp
into
adc
xlat
sub
insl
and
add
cmp
and
cmpsl
mov
insl
push
jp
inc
push
mov
pop
mov
enter
icebp
xor
cmp
mov
daa
cli
enter
add
ja
pusha
sub
adc
stos
into
test
outsb
fsubs
pop
mov
mov
dec
roll
xchg
inc
das
sub
addr16
mov
add
inc
lret
xchg
cli
outsb
jb
push
push
ss
loop
test
cmp
imul
adc
mov
test
out
cmp
xchg
rorl
sub
lds
aaa
xchg
xor
fimull
stc
imul
adc
pop
xchg
icebp
pop
mov
xlat
xchg
les
std
pop
movsb
aas
cmp
add
fstp
mov
out
push
mov
js
or
mov
lods
xchg
jg
roll
push
scas
add
imul
adc
loop
pop
aas
subl
jb
in
scas
daa
and
rorl
mov
jmp
mov
ret
pop
mov
push
rclb
mov
cmc
das
rcrl
jno
adc
inc
repnz
mov
test
pushf
mov
in
aad
arpl
ss
push
imul
cmp
dec
mov
test
stos
and
in
xchg
test
loopne
loop
dec
je
push
mov
shld
jg
jb
xchg
out
int
in
imul
stc
pop
xor
repnz
cs
lcall
adc
das
in
test
sbbl
jle
mov
aas
xchg
ret
dec
sub
pop
or
xor
lahf
es
sbb
mov
pop
xlat
adc
cmpsl
xor
and
mov
stc
adc
cs
push
mov
sub
add
sbb
je
dec
inc
push
icebp
movsl
xor
inc
ss
mov
lcall
ret
das
je
sti
lock
xchg
push
outsb
call
push
call
sub
dec
cmp
push
mov
mov
loopne
lcall
jp
jno
stos
lock
add
cs
xchg
pop
and
dec
je
jle
cmp
movsb
lcall
dec
and
in
stc
mov
mov
sbb
lea
jecxz
add
push
int
and
lret
es
jg
and
mov
out
inc
push
mov
dec
insb
inc
addl
out
das
ss
dec
or
insl
mov
or
test
mov
cwtl
mov
pushf
jmp
ljmp
dec
mov
ret
push
pushf
inc
pop
add
cwtl
pop
imul
push
fwait
lds
inc
imul
xchg
andl
jl
in
pop
sbb
add
mov
ds
or
fildl
adc
popf
sub
sub
imul
daa
leave
clc
sbb
xchg
mov
push
cmovb
in
dec
lea
fcompl
push
movsw
pop
lods
dec
push
cmp
movsl
fwait
mov
stc
or
mov
cwtl
testb
jg
subb
test
mov
dec
cmp
jg
xchg
test
test
mov
sbb
mov
popf
push
push
int
pushf
mov
mov
pusha
jge
clc
and
add
cmp
stos
jecxz
data16
sti
mov
rclb
in
and
cld
jmp
mov
aad
aad
sbb
inc
xor
mov
jg
xchg
les
ds
adc
test
dec
repnz
enter
ja
sbb
or
cli
xor
lock
xchg
test
imul
mov
and
leave
or
mov
cs
test
xor
mov
pop
inc
push
iret
outsl
outsl
cmpsl
push
and
pop
movsb
inc
mov
pop
mov
sti
aas
ficoml
dec
cltd
xor
push
lcall
cmpsl
shlb
out
dec
adc
fnstsw
jl
fisubs
xor
xor
das
call
sbb
add
cmp
sahf
cmp
cmpsl
outsl
sub
cmp
jmp
mov
test
loope
adc
rorb
xchg
jb
in
adc
lods
sbb
inc
inc
lock
insl
and
mov
pop
lods
and
xchg
mov
arpl
ss
and
add
lahf
sahf
dec
jmp
lea
inc
cmpsb
sub
insb
push
mov
mov
cli
sub
xor
cmp
adcl
pop
jg
ret
pop
pop
mov
adc
xchg
jo
mov
xor
cs
out
test
jae,pt
in
mov
popf
or
sbb
mov
pop
xchg
sub
adc
inc
mov
pop
aas
sub
mov
jge
add
xor
mov
aas
cmc
mov
out
cwtl
aam
fdivs
loope
lahf
push
shll
adc
int3
stos
mov
pop
movl
add
push
cmp
sbbl
cs
gs
movsb
inc
cmovns
dec
pop
test
adc
jbe
loope
rcr
sub
cmc
test
pop
lock
imul
mov
fcmovne
popf
inc
cld
aad
and
cmp
adc
inc
movsl
xor
insl
cmc
out
mov
adcl
lret
sbb
fwait
adcb
dec
xchg
cmp
mov
rolb
inc
jne
fisubl
mov
sub
mov
add
fdivrl
xlat
loope
jge
or
ss
icebp
or
add
add
fstl
inc
push
ret
adc
adc
mov
fisttpll
mov
ret
sbb
test
jle
out
lret
push
movsl
xor
test
out
ss
and
or
bound
or
rolb
lret
imul
pop
xor
push
lods
add
sub
or
xor
iret
pop
into
add
push
repz
daa
cld
mov
sahf
fistpl
mov
pop
insb
cmpsb
test
sbb
mov
hlt
aaa
leave
pop
inc
push
adc
jl
dec
cwtl
test
lods
jbe
rcrb
ss
push
stc
es
out
negb
clc
addr16
mov
fs
icebp
xchg
inc
mov
lods
push
aaa
dec
pusha
lods
in
dec
addb
stos
xor
cmp
rcrl
jmp
sub
mov
jne
clc
pop
inc
mov
cld
rcrb
mov
mov
adc
je
test
andb
flds
xlat
mov
das
mov
dec
ret
nop
push
pusha
jmp
fistps
lret
gs
cmp
mov
push
cmp
lahf
or
and
negl
rclb
pop
mov
sbb
shlb
jae
cwtl
bound
push
cltd
lds
jo
jge
addr16
dec
jl
mov
iret
js
add
mov
insb
dec
adc
mov
ljmp
pop
loopne
inc
pop
mov
sbb
or
xor
adc
mov
int
jp
js
lahf
test
pop
dec
bound
inc
outsb
sti
orl
ss
pop
hlt
mov
cli
jbe
cs
imul
mov
mov
daa
test
push
roll
mov
dec
or
sti
jecxz
pop
in
pop
testl
fdivrs
sti
push
mov
divb
lahf
sbb
dec
cld
or
sbb
testb
fsubrl
addb
ret
cli
movsl
inc
icebp
jge
ret
into
push
xchg
push
push
out
lret
sub
jne
jb
popa
lahf
mov
stos
add
lcall
out
push
mov
addr16
mov
xor
rorb
les
sbb
mov
int
cmpsl
mov
push
jle
das
rorl
in
pop
dec
notl
mov
push
push
cwtl
fsubrp
or
mov
mov
dec
xchg
cmpsl
xchg
inc
lods
xchg
icebp
and
in
test
loope
inc
hlt
inc
mov
call
int
cwtl
fisubs
ljmp
shll
mov
and
dec
or
cmc
inc
ljmp
fistpll
push
mov
xor
xchg
mov
jl
bound
iret
jbe
int3
lds
sbb
sub
orl
pop
or
xor
fildl
out
and
les
push
push
mov
jno
bound
xchg
jp
mov
ss
jno
lds
mov
pushf
push
sub
and
ror
in
aaa
inc
outsw
mov
inc
insl
lret
das
sti
push
mov
icebp
lahf
xchg
popf
enter
cmp
push
fidivrl
mov
lea
clc
and
or
push
ret
push
push
out
cwtl
andb
ja
xor
je
ljmp
outsb
repnz
mov
and
insl
push
xor
test
hlt
jg
jmp
loopne
add
fiaddl
aaa
std
cmc
loopne
sarl
pop
rol
xor
sbb
test
clc
cmc
gs
into
xchg
and
dec
in
lea
cmp
mov
sbb
xchg
cmpsl
push
xchg
rcrb
push
sbb
xchg
pop
xor
scas
push
pop
loop
pop
lock
movsl
pop
lahf
and
ljmp
movsl
push
xor
mov
fsubrl
test
arpl
sub
mov
notl
mov
mov
mov
lds
or
jmp
add
xchg
xlat
mov
out
loope
sub
icebp
and
cld
call
lock
popf
int3
lahf
pop
rorb
push
xchg
cli
add
insl
adc
adc
mov
stc
orl
mov
jge
orl
aam
mov
rolb
in
stos
sbb
fisubl
shrb
jns
cmp
push
push
add
dec
adc
sbb
add
daa
dec
xchg
in
ficoml
fidivrl
add
lods
and
cli
cmpsl
scas
dec
imul
jle
sbb
and
pop
ljmp
lods
add
push
pushf
jno
rcll
dec
push
int3
inc
mov
fsubl
lds
or
jnp
xchg
pop
pop
out
pop
in
outsb
jno
fiadds
xor
cltd
mov
scas
lock
adc
insb
xor
test
arpl
xchg
lds
xchg
mov
adc
dec
mov
cltd
sbb
or
cmp
aad
and
add
mov
leave
xchg
sub
mov
add
jmp
cwtl
repz
dec
rolb
addb
inc
push
stc
rcrb
hlt
jnp
rorl
mov
mov
fdivp
fnstcw
orl
nop
fists
data16
xchg
and
dec
pop
sidtl
or
mov
xorb
into
es
jmp
jnp
call
orl
ljmp
bound
cwtl
arpl
sub
nop
bound
in
repz
push
cmp
stc
scas
dec
lcall
jle
cmc
push
loop
rol
lock
mov
and
daa
xchg
push
setl
mov
arpl
fldl
nop
in
mov
push
fdiv
aaa
cmp
lods
js
add
stos
scas
push
out
ds
cmp
mov
dec
mov
std
push
mov
roll
jns
push
mov
fimull
repnz
jb
movsbl
cmp
cmp
aaa
push
mov
fwait
and
mov
ret
jne
cmp
jmp
jbe
ret
jne
scas
in
lahf
adc
xchg
add
stos
mov
arpl
add
dec
lea
aaa
dec
pushf
jle
pop
imul
imul
daa
loopne
adc
lock
cmp
dec
sbb
movsl
push
mov
mov
mov
aam
ljmp
aaa
mov
shll
xlat
jecxz
jmp
jno
rorb
pop
int3
pop
add
mov
and
mov
add
dec
xchg
sub
pop
add
cmp
lea
sub
sarb
push
rcrb
ljmp
xchg
or
or
ret
xchg
push
sbb
xlat
inc
fadds
and
push
mov
sbb
adc
xchg
and
pushf
aam
iret
scas
sarb
adc
xchg
mov
sti
push
lret
xchg
cmp
push
or
pop
adc
or
xchg
sti
push
adc
out
mov
lret
dec
pxor
push
insb
iret
xchg
xchg
or
jno
jbe
cmp
fimuls
mov
and
jmp
mov
mov
xor
sub
pop
inc
arpl
dec
out
shrl
into
jns
outsl
insl
pop
idiv
jae
aad
mov
jge
push
xor
scas
stos
xchg
scas
rcll
push
mov
jecxz
aad
adcl
lea
adc
jge
pop
inc
sbb
sub
jmp
lea
dec
out
dec
or
lods
mov
push
inc
xchg
fs
pop
cld
pop
mov
test
rcrl
jne
into
addr16
add
mull
mov
xor
repz
test
lods
dec
push
aas
and
mov
sub
mov
adc
xlat
stos
and
stos
and
imul
gs
xchg
mov
xchg
test
mov
call
xchg
pushf
jle
out
lret
jb
jp
nop
ficoms
scas
out
outsl
jmp
jno
mov
shl
movsl
andb
jae
outsl
pop
mov
add
lods
je
enter
push
push
cmp
lret
xchg
ja
mov
jae
out
std
sbb
std
in
dec
xchg
bound
jbe
pop
fs
fcomps
clc
popa
inc
mov
pop
adc
or
enter
sahf
dec
call
cmc
xchg
xchg
xchg
repnz
ljmp
shll
repz
enter
jne
mov
sbb
adcb
adc
sbb
inc
inc
cmp
and
mov
int
aad
mov
aaa
pop
out
lahf
inc
xor
call
mov
stos
xor
mov
sbb
jge
out
shlb
fs
sbb
stos
sbbl
dec
mov
imul
sti
xchg
ja
and
pusha
roll
pop
mov
dec
xor
divl
aas
dec
pusha
psubusb
dec
sub
scas
scas
xchg
push
jno
lods
pop
push
scas
adc
ja
mov
rcl
in
andl
mul
lods
ficomps
lea
int
rcll
pusha
rorl
mov
enter
ret
xchg
inc
adc
ret
lahf
imul
cwtl
xchg
push
ret
loopne
cltd
pop
xchg
pop
or
pop
arpl
inc
push
inc
aam
fld
stos
jmpw
add
incl
cmp
movsl
lds
pop
les
push
xorl
ja
xchg
mov
test
or
mov
inc
push
aaa
lds
ss
mov
inc
dec
pop
rcl
mov
ret
sub
loopne
fnstenv
or
mov
insb
out
orl
cld
or
xchg
push
or
mov
stos
arpl
sub
pop
add
dec
fs
inc
pop
push
mov
pusha
push
fnstenv
mov
xlat
cmp
push
and
fwait
and
xchg
mov
add
jp
sbb
nop
and
fcompl
mov
and
and
xchg
loop
fiadds
nop
cmpb
lahf
adc
inc
leave
xchg
add
adc
pop
js
cmc
leave
test
icebp
out
outsl
outsb
sbb
add
push
xchg
cwtl
mov
mov
cltd
xor
rcrl
rcll
rcr
mov
push
sarb
push
scas
xorl
xorl
es
and
fwait
insl
dec
hlt
sub
in
sti
mov
sarb
aam
outsl
push
xor
xor
jl
cltd
loop
movsl
cwtl
lock
je
decb
sub
mov
pushf
mov
pop
into
push
xchg
popf
mov
loope
jae
arpl
inc
scas
addr16
xlat
arpl
insl
nop
das
xchg
push
ret
gs
add
push
into
or
sub
push
dec
gs
xor
inc
aaa
lods
mov
in
enter
movsl
imul
js
inc
mov
xchg
cmp
aad
clc
fs
jnp
clc
data16
sub
fisttpll
push
jecxz
push
popl
mov
stos
sbb
sbb
sbbb
sub
push
inc
dec
ret
loopne
xor
std
mov
ja
out
push
into
lds
mov
dec
stos
call
pop
in
popf
and
lcall
jmp
add
enter
inc
fists
cltd
or
cmp
imul
xor
dec
mov
add
pusha
inc
jo
jp
push
aad
push
aad
and
sarl
pop
cmp
cmp
jae
adc
cs
inc
clc
loop
or
clc
or
aad
adc
loopne
sub
je
cmc
movl
cmc
mov
daa
add
inc
mov
pop
je
in
inc
aas
cmovp
mov
xchg
mov
ss
test
lahf
lock
mov
insl
ljmp
pop
mov
je
aam
pop
cld
outsb
mov
aaa
dec
sub
repz
adc
cld
sbb
filds
test
je
mov
xor
icebp
sbb
cmp
or
xchg
pop
lods
sbb
dec
cld
hlt
sbb
out
popf
lret
mov
push
jb
fldcw
addr16
cld
pop
jp
mov
mov
mov
mov
mov
outsl
xor
mov
pop
scas
inc
inc
adc
push
push
lds
jae
out
into
cld
mov
std
jne
xor
aad
cs
pop
fbstp
mov
pop
scas
push
adc
mov
jmp
pusha
mov
add
rorl
push
or
add
xchg
and
sbbb
xchg
je
jns
or
push
mov
outsb
cld
call
inc
and
icebp
mov
sub
or
loope
orb
jmp
mov
sub
sbb
loope
mov
xchg
sub
push
fabs
ja
addr16
xor
scas
mov
xor
aam
aad
xchg
add
or
xchg
mov
aad
pop
je
mov
and
out
popf
mov
test
or
inc
idivl
imul
dec
jb
fs
js
fnstenv
add
imul
sbb
mov
lret
add
xchg
mov
subb
ss
mov
fisubs
sbb
fwait
mov
push
lods
cmc
in
shld
mov
cs
stc
and
pop
dec
dec
push
paddd
fst
push
mov
stos
es
in
orl
jnp
iret
addr16
loope
loope
jb
mov
mov
adc
and
cmp
out
sahf
lds
popa
jecxz
cmp
dec
or
stos
jmp
cwtl
adc
jo
lds
frstor
movsl
test
sbb
into
popa
mov
in
pop
out
inc
incl
xor
xchg
test
xor
lds
fldenv
insl
mov
dec
rcrb
test
mov
test
repz
cmp
loopne
mov
outsl
inc
fcom
push
std
popa
repz
mov
inc
dec
xchg
push
addr16
sub
inc
add
inc
pop
scas
js
xchg
fdivl
dec
pop
or
adc
out
mov
ret
mov
sub
dec
dec
pop
push
andb
push
push
sbb
mov
lds
nop
jne
fsubrl
sbb
add
ret
mov
mov
test
or
push
jb
shr
cmp
cmpsl
std
aas
movsb
dec
adc
jp
adc
mov
or
fidivrl
mov
add
push
cmp
out
ret
add
ss
inc
or
add
and
jl
fs
push
jbe
xchg
add
imul
pop
mov
pop
nop
lds
or
push
jo
and
iret
mov
loope
xchg
inc
or
outsb
xor
shl
lret
out
mov
mov
sbb
and
cs
sub
fisubs
xchg
cli
dec
in
cmp
aam
ror
mov
mov
mov
add
push
xor
push
dec
leave
repz
mov
popa
leave
sub
xor
mov
xor
stc
cwtl
adcb
push
pop
add
mov
pavgw
out
mov
gs
sbb
pop
cmp
pop
xchg
pop
nop
inc
jp
sti
insl
movsb
xor
std
inc
loopne
xchg
jle
pushf
cmpsb
sbb
addb
adc
cmp
xchg
rcrl
arpl
ss
sub
mov
lret
imulb
inc
cwtl
ret
aad
lea
fisubrs
xor
fistpll
mov
xor
adc
fimull
in
fsubl
sub
inc
fwait
pop
sub
jge
insl
jp
pop
dec
jbe
mul
lods
pop
sbb
sub
mov
jnp
mov
and
adc
add
cmp
mov
imul
popa
mov
movl
jle
fwait
sarb
inc
lods
xor
add
rclb
jl
adc
repz
aad
xlat
cmpsb
mov
dec
pusha
sbb
jnp
mov
adc
dec
loope
or
leave
aad
ror
fimuls
scas
mov
push
int3
and
add
stos
xchg
ret
or
faddl
insb
adc
pop
mov
dec
xchg
cmp
sbb
popa
ss
sbbb
mov
out
cmc
testl
pop
daa
pop
mov
loopne
pop
mov
xchg
lcall
mov
es
add
incl
mov
ret
mov
insb
xor
pop
cld
nop
push
mov
add
dec
insl
pop
mov
lods
mov
lods
bound
xlat
cltd
andl
mov
scas
movsb
inc
es
xchg
jle
jae
shl
aaa
jg
test
rcrb
xchg
cmp
push
fucomip
mov
adc
mov
aad
sahf
cltd
pushf
jae
mov
xchg
jp
test
adc
je
adc
sub
mov
rcll
sbb
and
add
cmp
xor
dec
adc
lcall
pop
hlt
and
dec
cmp
rclb
mov
lea
jmp
cld
loop
push
testb
leave
and
mov
jne
dec
pop
loopne
rclb
arpl
sub
in
sub
dec
ljmp
lds
aam
cmp
lret
pop
add
xchg
mov
lds
xchg
dec
cmp
sub
push
jbe
aaa
and
xor
test
aas
or
xor
aam
ss
dec
pop
clc
mov
lods
sub
stos
pop
mov
mov
std
rorb
sub
dec
and
cmpb
pop
inc
push
push
dec
dec
popa
lea
inc
mov
dec
xlat
lods
xchg
outsb
movsl
imul
cltd
xor
add
add
xor
xchg
scas
or
lret
imul
pop
out
cltd
pop
lds
test
inc
dec
in
mov
lods
add
cmp
call
mov
jb
std
sbb
adc
fisttps
repz
movsl
add
add
xor
imul
mov
mov
cld
adc
add
shll
pushf
and
cmp
outsl
push
lock
cmp
pusha
pop
hlt
shlb
sub
dec
lahf
bound
mov
mov
xorl
int
ja
sub
loopne
add
inc
mov
mov
or
stc
cmp
repz
scas
loopne
fiadds
jg
or
mov
iret
adc
push
nop
fcomi
xchg
rdpmc
roll
mov
sub
mov
push
mov
lods
repnz
xchg
ja
and
leave
ss
pop
adc
shlb
ss
rol
or
inc
arpl
sbbl
out
aam
adc
mov
mov
jbe
add
or
call
lea
scas
mov
pop
in
mov
leave
push
ljmp
data16
sub
iret
xchg
dec
mov
jge
cld
sbbl
sbb
jecxz
xchg
insb
insb
xor
mov
add
stc
push
lock
pop
test
push
popf
rcrl
sub
out
mov
cmp
pop
int3
mov
sub
sub
and
negb
mov
aaa
in
sub
fcoml
xchg
pop
jne
pshufw
mov
xor
les
mov
ljmp
dec
ljmp
mov
sti
xor
pop
mov
mov
daa
sub
jnp
stos
xor
xor
mov
pop
xchg
mov
ja
insl
fbstp
push
mov
orl
mov
push
pop
jg
dec
scas
cwtl
xchg
cwtl
ret
dec
jae
push
aad
xchg
push
xor
fiadds
sub
pop
and
push
xchg
fistpl
jl
sub
lock
ret
and
lods
popa
shlb
inc
ror
icebp
push
pop
xchg
fneni(8087
mov
dec
jo
jo
stos
cmc
fadd
ret
sbb
ljmp
sbb
arpl
lods
cmp
push
test
stos
or
loop
fdivrs
repnz
cmc
inc
les
inc
stos
rcr
out
cmc
xchg
mov
icebp
dec
sti
mov
xchg
xor
mov
test
or
inc
lret
in
leave
ds
inc
les
mov
repnz
icebp
in
add
or
aam
pop
and
inc
sub
fcmovu
pop
nop
and
mov
int3
cs
or
sub
mov
fsubr
push
mov
int
cmc
push
es
imul
lret
jecxz
pop
movb
and
adc
xchg
add
fiaddl
shl
cmpsl
sbb
mov
xchg
cmp
ljmp
ljmp
loope
sub
cmp
pop
and
pop
add
int3
and
mov
movsb
andb
fwait
mov
xor
mov
cmp
xchg
arpl
and
jg
mov
or
int3
mov
xor
push
orl
int3
repnz
mov
out
in
insl
test
jnp
inc
inc
jbe
test
idivl
dec
jle
jae
inc
lahf
ss
repnz
sbb
push
fadd
lret
lods
mov
add
js
add
cmp
pop
adc
push
dec
std
push
aad
jecxz
fiadds
sub
pushl
mov
js
cmp
subl
mov
push
mov
mov
fmul
pop
xchg
loopne
cwtd
xor
push
insb
cld
ja
xor
cmp
cld
cld
bound
or
xchg
leave
lea
mov
xchg
cltd
sbb
push
xchg
iret
jp
int
and
jg
stos
inc
ficompl
and
sub
cmp
or
pop
or
add
sbb
dec
ss
dec
mov
mov
ret
ljmp
dec
pop
call
inc
jb
inc
adc
and
xchg
sub
cwtl
fs
popa
out
sub
insl
dec
lods
daa
lret
aas
pop
loopne
aam
cmpsb
aad
adc
xorl
daa
jmp
test
les
xor
jmp
jle
test
pop
xor
push
xor
lcall
mov
dec
addr16
jae
pop
lret
stos
aad
fldl
or
and
push
in
xchg
sti
lahf
fcoms
sbbb
daa
or
push
outsl
insb
cmp
xor
sub
fcompl
in
and
xchg
cmpsl
gs
adc
sbb
push
or
sbb
in
repz
pushl
adc
xor
leave
dec
dec
mov
xchg
lahf
in
call
imul
xor
mov
xor
testl
lcall
js
rcrl
out
inc
fcmove
repz
mov
jnp
loop
jno
imul
frstor
fs
cld
jmp
jmp
faddl
shr
jecxz
es
arpl
jae
mov
sub
scas
in
sbb
mov
add
cmp
jae
push
imul
cmp
aas
mov
lds
hlt
push
fnstsw
adc
in
dec
repz
fdivs
out
mov
dec
inc
je
xor
mov
mov
dec
popa
mov
mov
jno
mov
jp
loop
pop
and
or
push
pop
call
fdivrs
fwait
push
mov
inc
movsb
or
gs
pop
push
xor
pop
or
xchg
add
xchg
js
mov
cmp
sub
sbb
mov
lcall
aam
ror
stos
push
mov
test
push
jecxz
pop
aad
pop
outsb
inc
icebp
add
push
xor
cmp
inc
add
stc
test
fadds
sub
dec
jp
pop
sub
ja
mov
adc
loope
jecxz
mov
aas
lcall
jmp
xlat
das
orl
sbb
mov
shrb
das
adcb
or
inc
mov
mov
lea
stos
cld
shll
xorb
js
cmp
insl
test
mov
dec
pop
rorb
insl
mov
pop
mov
mov
inc
inc
add
xchg
movsl
orl
xor
jnp
incb
jno
push
inc
cwtl
aam
cmpsl
loop
ud2
sbbl
stos
rep
frstor
pop
fisubrs
sbb
jbe
xor
leave
mov
mov
addr16
popa
jge
jmp
daa
orb
ret
ja
pop
xor
lahf
insl
sub
repz
mov
movsb
push
sbb
mov
jae
mov
fwait
xor
fs
and
aaa
cmc
xor
insb
andl
jae
pushf
push
aas
sub
pop
jg
dec
mov
outsb
test
cwtl
mov
sub
cmp
mov
push
clc
mov
jne
pop
jne
push
test
imul
cltd
inc
and
cmpsb
sub
pop
out
push
test
pop
inc
insl
mov
dec
pop
jno
test
jnp
push
pop
push
jp
shl
pop
mov
aaa
pop
inc
imul
leave
dec
pop
cmc
test
jno
out
jne
test
insl
loop
test
repz
pop
mov
loop
test
add
xor
ljmp
out
neg
sbb
xchg
cld
mov
in
data16
mov
xor
das
mov
mov
test
pop
add
jp
dec
sub
loope
push
cmpsb
jo
cmp
jge
sbb
ljmp
pusha
out
loop
sub
jp
dec
fwait
mov
ss
mov
dec
ret
cltd
decb
mov
aas
icebp
mov
in
mov
stos
movsl
imul
jno
adc
insl
cwtl
jle
jae
out
cs
shrb
ljmp
or
imul
fcompl
sbb
fldl
fsts
add
xchg
sbb
pop
or
or
sbb
xchg
push
mov
shlb
xor
into
and
call
les
lcall
ljmp
test
dec
inc
xchg
movsb
orl
push
cmp
jb
pop
pop
pop
rorb
mov
loop
cli
lcall
ss
mov
adc
push
or
xchg
sub
in
push
mov
jl
adc
xor
add
push
jb
lret
pop
clc
or
mov
es
push
push
testb
or
pop
push
mov
imul
jb
and
fistpll
cs
stc
cs
hlt
sti
shrb
in
push
js
xchg
in
pop
pop
leave
movsb
push
xor
jbe
xor
clc
nop
xlat
fbld
call
or
sbb
in
filds
sbb
cmp
xchg
jo
test
clc
jge
in
bound
sbb
mov
pop
cld
repnz
fsubrp
cmpsl
lea
orb
ror
in
xor
out
or
and
add
jnp
pusha
test
aaa
ret
cli
dec
insb
mov
push
xchg
mov
dec
or
fcom
add
call
int
or
push
inc
loopne
addl
in
xchg
mov
xor
rol
sbb
popf
fdivrp
sahf
jmp
loope
scas
xchg
xlat
xlat
ds
dec
xchg
xchg
dec
and
push
test
pop
insb
sub
imul
les
movsl
push
xor
shlb
xor
lahf
cld
iret
sbb
jg
lods
mov
adc
or
push
pop
and
mov
xor
rclb
xor
cmp
arpl
fisttpll
xor
mov
pop
jns
lds
jmp
int3
cmpsl
jge
pushl
outsb
cmpsb
xchg
shl
mov
clc
cld
pop
sbb
iret
cmp
bound
push
mov
inc
out
aad
int3
movsl
clc
inc
int3
mov
xchg
leave
ja
dec
or
enter
add
loope
mov
push
iret
jb
mov
add
dec
or
inc
roll
cmp
stc
movsb
adc
je
and
push
add
dec
ljmp
jae
cmp
mov
aam
mov
push
xchg
ret
xor
cld
jnp
mov
add
inc
mov
sarb
in
orb
shr
mov
push
int
js
push
sub
mov
push
sub
inc
xchg
insb
icebp
pop
pusha
cwtl
js
mov
loopne
subl
icebp
mov
push
pop
jo
add
in
sbb
shrl
fbld
lods
adc
xchg
pop
cld
and
dec
sbb
pop
aas
dec
push
int
sub
sub
and
pop
rep
std
lret
daa
adc
aaa
sub
nop
hlt
mov
fadd
fdivs
add
fdivrs
add
repz
mov
mov
es
lahf
mov
lds
mov
movsl
dec
std
shrl
sbb
cmp
pusha
out
sarl
inc
test
in
hlt
adc
pop
icebp
iret
sbb
leave
call
gs
mov
adc
and
cmpsl
xor
lret
sbb
cli
jle
push
sbb
push
sbb
stos
push
jmp
dec
pusha
mov
outsl
loop
mov
push
xor
xchg
hlt
cwtl
pop
rcr
sbbl
loopne
pushf
push
push
scas
in
mov
mov
daa
cmp
test
into
sbb
sub
fdivl
cmpb
shll
and
jo
jl
jecxz
pop
xchg
mov
jmp
sub
popa
pop
sbb
inc
dec
add
cmp
xor
xchg
imull
or
ret
cmpsb
mov
popf
daa
mov
dec
daa
or
jge
xor
mov
cmp
test
mov
cmp
loop
dec
and
add
xor
jns
outsb
cmp
xorb
jae
mov
adc
push
sub
push
scas
xor
jbe
xchg
inc
cli
push
sub
mov
ficoml
inc
inc
int3
fcmovbe
ljmp
or
adc
lahf
pop
cmp
outsb
mov
jmp
fcmovu
inc
push
or
jg
out
stos
test
and
pop
inc
into
mov
xchg
cmp
xchg
sti
repz
lret
jns
cli
movsb
mov
aas
add
or
dec
jg
insl
push
icebp
das
and
inc
mov
mov
push
dec
js
push
out
sub
ret
loope
mov
mov
call
mov
rclb
cmp
cltd
add
ds
mov
movsb
loopne
add
mov
inc
push
xchg
addb
xor
push
std
dec
idiv
in
mov
mov
icebp
sbb
adc
and
sub
test
mov
mov
test
test
fistps
sbb
es
sbb
jns
jb
nop
dec
les
pop
and
mov
push
fisubrl
ljmp
daa
mov
pop
jne
sets
fs
xchg
pop
jle
push
mov
jno
adc
sub
dec
sub
or
xor
mov
xchg
xchg
jecxz
fwait
dec
aad
sbb
dec
or
cmp
pop
cli
push
fbstp
daa
faddl
pop
stc
stos
das
rcl
pop
lcall
lcall
into
aas
cwtl
xlat
inc
dec
aam
push
xor
shr
mulb
fwait
hlt
mov
xlat
sbb
rorl
inc
sbb
lret
lds
push
sub
mov
inc
lret
cltd
and
dec
pop
add
cmp
rcrl
xor
xor
fiaddl
ds
stos
loope
addb
or
roll
lods
bound
test
fisttpll
or
mov
xchg
inc
daa
mov
cmp
in
and
adc
sbb
stc
mov
lret
sbb
jmp
cmp
enter
in
ljmp
xchg
xchg
test
bound
or
sbb
dec
das
mov
dec
cmp
pop
pop
mov
mov
mov
xchg
andb
sub
out
jo
jmp
int3
or
mov
jo
lods
shll
gs
push
in
xchg
cwtl
lods
pusha
incb
mov
and
jnp
pop
imul
fildl
clc
mov
repnz
and
mov
lea
mov
ret
push
insl
pop
sub
lret
or
out
aad
mov
lahf
div
push
xchg
movsb
jge
shll
add
gs
lods
and
out
and
cmp
popa
add
cmp
jns
sbb
repnz
mov
inc
and
fdivp
mov
mov
fstp
xchg
mov
ljmp
xor
mov
mov
pop
or
scas
push
pop
sub
xlat
push
adc
aad
inc
jge
scas
pusha
push
test
pop
out
xchg
pop
lcall
dec
ja
ret
cmpsb
in
dec
stos
sbb
ret
add
dec
pop
iret
jnp
or
lcall
lea
nop
in
lahf
sub
and
lods
pop
jb
sub
and
imul
aas
jl
addr16
sub
jecxz
stc
jo
or
jne
jp
or
xchg
shl
cmpsb
sub
adc
push
xchg
lcall
push
adc
pop
push
push
sbb
xchg
cmp
add
decb
pop
rolb
jge
xchg
push
mov
sbb
or
lahf
sahf
push
add
or
loop
sbb
bound
out
sub
pop
ret
jnp
fistpl
pop
ds
mov
lock
lcall
sahf
cli
mov
lret
fists
xor
and
test
jp
sub
or
lods
mov
fsts
push
lcall
push
pop
xor
sub
cmp
jbe
sti
xchg
aas
gs
or
mov
aas
or
cmpsl
inc
add
or
cmpsb
lods
pop
push
test
cmp
or
jo
rclb
add
stos
cmpsb
in
push
sbb
mov
js
pop
jbe
mov
in
dec
jmp
mov
sub
ret
add
and
push
mov
scas
or
mov
push
dec
ficomps
test
push
les
sarl
push
pusha
mov
test
js
sbb
mov
fsubs
clc
cwtl
rorb
cltd
sti
push
shrl
add
andl
fldl
outsl
mov
ljmp
iret
out
jmp
pop
sahf
repz
sbb
push
inc
pop
adc
pop
mov
sbb
xor
sti
or
rolb
pop
xchg
dec
mov
mov
iret
mov
out
mov
jbe
fstpt
jecxz,pt
addb
loop
rolb
or
icebp
pop
fisttpll
rolb
push
and
push
mov
pushf
pop
hlt
add
jnp
sahf
jae
sbb
sbb
adc
add
ss
stos
clc
js
add
pusha
imul
in
cmp
or
push
inc
orl
and
xchg
fldt
pop
add
mov
xlat
push
fidivrs
stc
adc
jecxz
cltd
leave
or
ja
gs
rorl
rorl
and
mov
xchg
stos
jl
imul
sbb
inc
lret
fbstp
outsl
sahf
add
adc
lret
xlat
int
jmp
popa
adc
dec
push
adc
mov
mov
pushl
sarb
cmp
and
test
repnz
fmull
pop
test
jp
imul
dec
cmp
adc
les
fdivrs
adc
mov
jo
ss
sbb
cmpsl
mov
sbb
and
fcoml
cmp
sbb
repz
jl
lahf
into
xor
push
mov
or
pop
xor
lds
mov
cmp
xchg
je
in
es
aas
sub
mov
faddl
cmp
bound
mov
sbb
inc
xlat
mov
lret
stos
pop
sbb
xlat
iret
popf
dec
push
pop
pop
repnz
adc
imul
jge
jns
sbb
insl
mov
mov
push
movsb
push
in
pop
shll
pop
xor
mov
jbe
push
test
push
fdivl
add
mov
mov
ret
cmp
jg
mov
fstpl
cmp
pop
sub
adc
push
lock
movsb
lds
xor
xchg
sbb
sbb
std
sbb
aaa
loopne
jbe
subb
dec
imul
xchg
insl
cltd
inc
fwait
sub
push
sbb
lea
inc
lahf
fisttpll
inc
add
and
ds
addb
mov
push
aaa
and
adc
add
xor
jno
mov
jbe
push
fcos
clc
dec
insb
cmpsb
adc
fsts
push
jge
stc
xchg
push
or
mov
fs
jae
pop
inc
jle
aas
mov
mov
xor
jecxz
sbbb
shlb
or
cli
mov
dec
and
pop
lods
inc
jno
mov
jne
ja
inc
cli
fmul
jge
shl
mov
int
fisttpll
aaa
inc
mov
fs
inc
insl
clc
iret
rcl
jo
xchg
push
mov
pop
push
sbb
fbstp
lds
aas
rclb
or
sub
repnz
shlb
xchg
hlt
mov
sahf
inc
or
add
xchg
adc
mov
and
ret
pmaxsw
push
ss
mov
push
leave
aad
jo
or
add
lret
dec
jnp
cltd
rorb
inc
and
inc
mov
sub
pop
xchg
clc
pop
add
leave
push
dec
mov
jmp
cld
push
mov
stos
push
into
dec
ss
dec
cli
mov
add
dec
lret
popf
das
stc
mov
dec
and
and
repz
into
push
xor
xor
push
sub
stos
pop
rorb
popf
xor
aad
mov
rorl
jnp
not
fnsetpm(287
sbb
in
xchg
xchg
jp
repz
xor
out
jae
dec
mov
inc
frstor
fmuls
aam
popf
cli
lahf
gs
aaa
inc
mov
jb
sub
sti
jmp
sahf
in
mov
cld
mov
mov
imul
inc
rclb
lret
lar
test
cltd
adc
cmpl
aad
pop
or
add
out
repnz
inc
jnp
mov
pushf
cmp
repz
mov
dec
push
inc
daa
and
xchg
mov
mov
and
ds
and
and
jno
xor
mov
movsb
insl
sub
repnz
gs
div
xchg
dec
test
popf
int3
mov
pusha
pop
pushw
outsb
fisubrs
mov
movsl
push
pusha
jecxz
lock
sbb
or
repnz
lcall
scas
std
xchg
ret
sbb
xor
push
mov
sub
popf
inc
int3
pop
cltd
inc
fsubl
fsubs
add
lock
adc
xchg
pop
cmp
mov
cs
fwait
arpl
and
out
push
cmpsl
dec
mov
mov
dec
popf
jne
pop
stos
gs
push
sub
stc
hlt
pop
jo
dec
lods
jae
test
xor
repz
sbb
popl
int
lock
push
jo
stos
and
aas
mov
outsl
mov
jmp
lea
jo
mov
cmc
xlat
std
dec
inc
out
lods
push
outsl
mov
dec
xchg
ja
aaa
pop
js
cmp
pop
fcomp
enter
aaa
aam
les
xor
adc
push
cmp
sbb
fsubs
push
adc
lods
xor
and
dec
inc
xcrypt-cfb
cmpsl
popa
add
mov
dec
test
sub
sbb
sub
dec
push
cli
xlat
jbe
dec
scas
mov
or
popa
aam
leave
mov
or
pop
jl
or
sbb
pop
dec
dec
icebp
lods
sbb
inc
sbb
leave
bound
in
or
cvttsd2si
lahf
push
lcall
int3
mov
lret
in
out
xlat
push
enter
push
jecxz
std
push
xchg
jnp
lahf
mov
inc
inc
fwait
pop
push
jl
jno
dec
jle
cmp
mov
in
dec
iret
mov
mov
add
mov
das
outsl
push
cmp
shll
and
pop
pop
dec
sbb
cmp
jle
loopne
jbe
orb
pop
in
adc
leave
xlat
or
push
icebp
jl
test
sub
xchg
rcll
pop
data16
sbb
ss
insb
out
dec
scas
or
pop
enter
imul
jb
popf
add
jb
fdivl
mov
or
mov
cmpl
sbb
cmp
aas
push
mov
add
add
mov
mov
popa
push
call
jg
roll
sbb
push
cld
rcll
or
js
ljmp
and
std
jbe
jb
pop
push
cmp
mov
dec
ja
jl
mov
jecxz
cmp
jo
and
js
and
sarb
orl
jmp
ja
add
or
daa
sub
sahf
enter
sub
dec
jp
push
xchg
mov
mov
test
sbb
xchg
fs
jg
sbb
pusha
inc
shl
push
lret
in
dec
gs
mov
mov
add
lods
arpl
test
cmp
inc
adc
in
dec
xchg
and
mov
add
shrl
jb
sub
xor
sbb
popa
sbb
lcall
mov
mov
outsb
jns
leave
out
xchg
inc
mov
adcb
orl
jmp
sbb
sub
xchg
ret
mov
and
push
cmpsb
stos
pop
sar
and
lahf
pusha
lock
adc
push
pop
hlt
inc
idivb
jae
repnz
push
or
jns
ret
xchg
xlat
push
mov
jmp
fs
sti
mov
iret
xor
in
out
cmc
fs
sbb
sbb
adc
test
or
mov
fiaddl
mov
mov
stc
leave
pop
sbbb
sarl
arpl
test
test
dec
sahf
clc
or
mov
imul
ss
sub
cmpb
icebp
jnp
mov
rorl
xchg
out
rorl
mov
lret
in
jbe
jbe
add
imul
mov
push
or
adc
mov
mov
out
jns
push
cmc
add
pop
cmc
enter
fldl
pop
data16
lret
xor
cmp
es
cltd
add
sub
rol
cs
aam
cltd
call
lahf
inc
insl
lds
je
arpl
cmpsl
test
dec
or
mov
cmc
mov
add
vucomisd
adc
shlb
imul
sub
xchg
fs
mov
loop
daa
dec
pop
or
push
jo
lds
xchg
test
xor
std
stos
rcll
or
mov
std
outsb
pop
std
test
pop
mov
into
lahf
mov
aad
mov
lahf
pop
stos
in
aad
adc
arpl
js
cmp
cld
cmp
xchg
jbe
cmpsl
ljmp
xchg
xor
movsl
pop
cmp
fwait
cli
lcall
int3
int
andb
jne
fsave
jae
sahf
inc
jo
sbb
or
test
repz
adc
out
jno
jno
mov
scas
mov
push
sub
out
ss
jp
sbb
add
arpl
in
pop
cld
mov
add
roll
lock
loop
test
sbb
mov
rcll
test
ret
jp
cmpsl
and
push
mov
sarb
into
jge
divb
ja
mov
enter
mov
lds
push
lret
idivb
or
cmp
adc
dec
jno
cwtl
jb
mov
mov
mov
xchg
jo
aas
mov
imul
mov
inc
inc
mov
js
and
aad
or
cmp
push
push
lcall
ret
push
out
sub
mov
push
lea
push
sbb
ljmp
xor
jl
sbb
int3
out
add
xchg
sbb
out
in
roll
imul
xchg
mov
push
int
push
add
jmp
stc
xchg
pop
fbstp
adc
aas
xchg
push
in
or
popa
mov
mov
cmp
leave
aam
dec
ljmp
and
sub
push
comiss
xchg
mov
jg
push
inc
stc
and
movsl
int
push
pop
subl
negb
jb
and
addl
mov
mov
lahf
aas
test
mov
mov
out
jecxz
jo
popf
fisttpl
repz
dec
inc
sbb
fidivrs
mov
xor
call
push
inc
jecxz
jno
cmp
sbb
out
addb
out
ja
testb
sarl
lcall
sub
insb
leave
jmp
xor
mov
push
xchg
mov
lcall
sti
pop
fwait
mov
lods
mov
mov
mov
ror
mull
fs
lods
jns
push
xchg
cmp
scas
mov
test
mov
cmp
repz
jge
fxch
dec
mov
jnp
rclb
add
outsl
or
lahf
sahf
or
jb
dec
mov
mov
and
xor
into
inc
idiv
pop
and
movnti
outsl
pop
adc
dec
cmpsb
stc
mov
lret
mov
mov
dec
jecxz
movb
or
xor
add
pop
jge
pop
js
repz
cwtl
daa
ja
and
jb
cld
pop
sub
mov
mov
or
dec
sbb
lcall
mov
adc
mov
xor
sub
clc
adc
dec
xchg
and
pop
pop
cltd
ljmp
imul
pop
test
pop
js
cmp
mov
inc
and
mov
sub
dec
repz
in
adc
mov
daa
lock
mov
dec
dec
cmp
pop
ds
xchg
sub
adc
mov
push
push
add
iret
bound
cmpsl
aaa
adcl
mov
daa
adc
add
out
loopne
movb
arpl
ret
mov
aam
inc
arpl
in
and
in
dec
ljmp
or
and
sub
push
adc
dec
fs
lret
sub
movsl
ret
rorb
adc
bound
mov
stos
aam
das
shll
ds
rcll
mov
les
push
cmp
out
nop
sub
in
loop
xor
popf
loope
mov
xor
and
ss
sar
jne
pusha
jnp
push
push
add
lock
inc
jbe
mov
mov
pop
add
lods
sbb
lret
jnp
ret
aam
repz
into
ret
sbb
dec
inc
test
lock
xor
dec
adc
test
push
or
mov
cmpb
lock
push
push
or
out
sbb
nop
jg
push
xchg
shrl
popa
dec
mov
leave
jle
ljmp
faddl
adc
or
jmp
mov
imul
mov
ret
dec
outsl
push
xchg
adc
out
out
lret
xor
cltd
pop
ss
shlb
popa
ret
daa
ss
bound
pop
mov
ficoml
mov
xor
std
and
or
fcom
dec
pushl
fldt
sti
adc
out
jmp
ljmp
out
test
movsl
inc
pop
mov
sub
ja
jp
imul
xchg
negb
push
pop
test
loopne
adc
adc
shlb
lods
andl
movsl
neg
mov
dec
mov
mov
jp
out
or
cmp
pop
repz
sbb
add
or
adc
pop
push
inc
lock
ljmp
pop
and
fs
clc
js
sbb
jno
inc
imul
cmp
cmp
outsl
inc
loop
pop
inc
xchg
add
les
inc
and
test
ret
jmp
jmp
push
lods
jl
popa
out
inc
gs
sbb
aaa
pop
xor
outsb
popf
gs
pop
dec
push
xchg
sbb
push
cmp
and
inc
lahf
push
cs
int
les
out
dec
dec
or
pop
mov
push
das
dec
fnsave
xor
lock
mov
mov
xor
sbb
or
mov
rorl
xor
mov
jmp
jne
cs
sarl
fildl
push
dec
in
fwait
nop
dec
push
js
adc
aad
lods
push
loopne
jnp
inc
out
rcrb
mov
jno
in
add
add
cmpsb
jno
adc
mov
sub
or
jns
mov
xlat
mov
cmp
jo
lret
jo
jp
pop
scas
frstor
lahf
ret
mul
xorl
out
jbe
fiaddl
sbb
enter
fnsave
mov
inc
xchg
push
mov
push
mov
xchg
pop
pop
xchg
subb
fwait
inc
ret
in
popl
enter
mov
loop
in
sti
lea
dec
pop
into
popf
insl
rcrb
mov
jbe
add
and
xchg
sub
cmp
jne
push
imul
icebp
inc
pop
dec
in
test
leave
mov
or
add
xchg
cmpsb
pop
mov
push
fs
add
mov
cltd
dec
jecxz
repz
fildll
dec
imul
test
ficomps
ds
adc
in
xor
sbb
mov
inc
jns
fstpl
or
leave
ror
fimull
out
in
push
or
inc
subl
and
mov
sbb
cltd
arpl
popa
sub
mov
dec
adcb
orl
cli
mov
test
cmpsl
loop
and
xor
in
xor
es
inc
cmc
mov
loop
lcall
nop
sbb
leave
adc
adc
mov
clc
subl
xacquire
int3
adc
inc
in
fidivrl
fistl
decb
cmpb
xlat
jmp
lods
push
sbb
jg
clc
bound
lcall
adc
or
in
rolb
or
add
int
adc
in
push
fldt
fisubrs
dec
ja
sub
mov
pusha
mov
fdivrl
ljmp
stos
adc
jne
js
out
insb
rcl
xchg
pop
mov
mov
or
xor
push
in
repz
pop
fsubl
outsl
clc
push
cmp
push
testb
xor
fs
es
and
jae
cmpsl
pop
dec
flds
int
pop
mov
sub
inc
addb
jns
dec
adc
push
add
push
mov
das
loope
mov
arpl
xor
out
stos
pop
iret
repz
ja
mov
add
adc
icebp
or
sub
jmp
ret
test
and
gs
sub
or
jle
cmp
and
scas
xchg
sbb
ficoml
fwait
dec
cmc
cmc
fwait
push
aam
inc
cmpl
push
jbe
sub
in
fs
xor
nop
inc
mov
lret
int3
test
outsb
pop
add
xchg
fdivr
cld
call
aas
fildl
add
mov
pop
and
cmp
int3
in
sbbb
dec
sub
outsb
es
lods
push
mov
into
in
mov
aam
mov
in
negl
and
push
aam
lock
lcall
outsl
sahf
or
cmpsb
fists
add
adc
xor
cmp
test
add
jno
icebp
lcall
sbb
cmc
fs
testb
bnd
xchg
xchg
imul
ljmp
xchg
adc
push
mov
repnz
imul
jecxz
cmp
paddb
testb
ds
xor
fmuls
dec
xchg
arpl
sbb
sti
fs
cmp
pushf
push
mov
xor
and
icebp
mov
add
mov
push
ret
ss
loope
pop
lahf
outsl
mov
cmpsl
rclb
shll
fldl
jns
cmp
dec
sbb
clc
lds
fcoms
sbb
xor
jne
and
movsl
push
sub
jnp
mov
ljmp
mov
ret
pop
jge
pushf
dec
adc
lods
pop
subl
adc
xchg
mov
jp
jp
repz
and
arpl
jns
add
mov
adc
add
out
xlat
mov
jl
stos
dec
scas
sbb
aaa
or
push
dec
mov
xchg
add
add
xchg
and
sbb
inc
addb
fwait
and
fwait
inc
pop
jle
mov
cmpsl
mov
ss
test
outsb
xor
inc
adc
mov
push
sub
in
fs
mov
add
mov
sbb
xchg
push
xor
inc
and
mov
lahf
add
dec
sbb
std
imul
loope
dec
cmp
mov
adc
ja
xchg
dec
or
cmp
insl
mov
cld
add
nop
sbb
imul
sub
mov
sarb
jle
aam
and
pusha
cmp
cmp
inc
nop
fbstp
xor
pop
add
in
pop
inc
inc
gs
les
lcall
mov
int
lcall
test
sub
xchg
xchg
and
daa
test
shrb
imul
cmp
or
sub
in
insl
mov
add
pop
pop
inc
ret
sub
gs
out
mov
add
rclb
outsb
cs
add
aaa
pop
insl
mov
or
dec
cmp
fwait
loope
dec
iret
ljmp
dec
mov
cmp
lds
xlat
cmpsb
jmp
gs
pusha
ffree
test
test
aam
add
pop
push
mov
adc
je
mov
and
pop
loop
out
repnz
pop
rcll
adc
lock
add
sub
push
cmpsl
lcall
pop
fisttpl
or
mov
jl
ss
sti
sub
flds
lcall
mov
in
mov
jle
fmull
les
test
mov
es
jmp
in
pop
mov
sub
idivb
and
push
push
cmp
sbb
cmp
mov
andl
jae
adc
pop
jne
or
xchg
dec
adc
cmpsl
orl
push
cmp
jbe
push
xchg
out
mov
cmpsb
or
sbb
push
cs
in
stc
mov
cmp
cmpsb
imulb
pop
fs
add
js
push
sub
sub
in
adc
ds
jnp
jno
mov
aad
mov
add
fistpll
mov
xchg
lcall
in
lret
sbb
mov
adcb
fisubrl
lea
sar
cmp
adc
push
aaa
inc
xchg
lock
pop
pop
rol
fisttps
cld
or
jg
mov
mov
mov
jl
into
incl
cmpsb
xchg
xor
movsb
dec
ret
rep
insb
mov
cmp
or
mov
mov
xchg
sub
out
pushf
pop
add
fwait
push
testl
sub
adc
xor
call
in
flds
iret
inc
popl
iret
pop
inc
push
mov
sub
subb
push
add
cmp
in
jo
je
je
sub
cli
sar
xchg
push
xlat
pushf
pop
and
fwait
rolb
add
enter
sub
pushl
push
jne
into
stos
js
pop
mov
xor
data16
fxtract
cmc
mov
add
mov
push
jecxz
xor
xchg
movsl
pusha
dec
pop
gs
inc
pop
fwait
mov
test
cmp
sbb
dec
sbb
stos
mov
and
push
lea
rcrl
dec
stos
in
push
arpl
aam
jl
pop
pop
das
jg
jp
push
insb
int
popf
dec
xchg
rcl
fisubs
mov
aad
lds
stc
xorb
outsl
xchg
sub
jle
pop
hlt
push
mov
mov
mov
mov
nop
in
add
push
pop
xchg
pop
push
add
lahf
icebp
lret
fnstenv
in
sub
iret
scas
lahf
add
clc
es
fisttps
push
dec
popa
sahf
imul
test
sub
xor
and
mov
mov
jge
fisubl
or
scas
and
enter
xor
pop
into
dec
jp
out
into
pop
test
fs
je
movl
test
aad
fiadds
push
xor
lcall
mov
xor
mov
xor
mov
cmp
mov
arpl
dec
push
fstpl
aaa
and
cmp
aad
push
push
jle
xlat
and
push
cmc
aas
mov
inc
clc
out
xchg
push
jne
cmpsl
lcall
in
fwait
cmp
call
mov
add
mov
ljmp
xchg
xor
jl
fisttpll
cmpsb
ss
ja
xchg
jmp
jecxz
cmp
cwtl
xchg
lcall
incb
daa
add
add
lret
adc
pop
jge
lahf
cmp
fwait
aas
lds
fldcw
fdivl
pop
mov
movsl
mov
cmc
cmc
pusha
mov
nop
dec
lcall
jnp
clc
mov
mov
pop
adc
xchg
subb
inc
fidivs
movsb
pushf
or
adc
adc
or
jnp
push
daa
xchg
test
inc
mov
pop
outsl
jbe
test
lea
test
int3
push
mov
leave
inc
call
orl
out
mov
xchg
fisttpll
stos
sbb
jl
cmp
inc
fs
push
mov
push
jg
cmpsl
add
movsb
jge
outsb
add
adc
lret
arpl
not
loope
adc
cmpsb
lock
push
push
jbe
popa
loope
add
inc
jp
cmc
jmp
mov
xchg
cmp
cmp
inc
inc
imul
sbbl
sbb
out
rolb
mov
pusha
cmp
pop
add
test
sub
xor
ja
aam
clc
cmp
cs
lods
mov
sub
dec
xor
pop
sbb
cmp
subl
xor
ljmp
sbb
insl
sti
sbb
add
rcrl
ret
jge
out
adc
fildll
rclb
mov
testb
addr16
push
sbb
mov
popa
repz
rcrl
daa
sub
fisubl
stos
in
test
popl
mov
mov
mov
repz
push
xchg
test
push
jbe
dec
mov
psubsb
sti
and
test
iret
push
filds
xchg
aad
and
jae
addr16
jo
daa
fmul
bound
das
mov
aad
ds
lods
adc
loop
pop
pop
fcmovbe
test
or
push
sub
cltd
adc
int3
sub
xchg
ret
shll
loope
popf
lcall
jbe
popf
repz
push
xchg
jnp
jb
je
dec
jecxz
repnz
div
popa
mov
lret
rorb
enter
les
fildll
js
das
loopne
lahf
out
lahf
cmpsl
sub
loopne
lock
add
jae
sub
xchg
xor
jp
cld
jnp
inc
cmp
lret
mov
fs
aas
or
daa
cmpsl
xor
jl
push
fidivl
sarb
mov
test
xchg
inc
inc
pop
pusha
cmp
jg
add
jle
gs
pop
pop
mov
jmp
call
cmp
mov
adc
mov
xor
mov
sub
cmpsb
dec
adcb
sbbl
ror
add
push
pop
xchg
fsubrs
or
jg
jecxz
into
pop
int
sub
jle
pop
sbb
cmpsb
rclb
icebp
lret
fidivs
cmp
pop
xor
das
mov
js
fistpl
jle
dec
sub
pop
ret
xlat
out
push
rcrl
loope
movsb
mov
mov
jnp
lods
clc
in
in
mov
push
popl
jns
out
sub
push
push
sub
rorb
xor
sbb
sbb
mull
icebp
inc
sub
mov
or
push
cmpsb
mov
rorl
ds
outsb
adc
mov
push
stos
xchg
cmp
push
in
pop
test
dec
pop
mov
xor
lds
jno
sbb
dec
imul
sti
enter
sbb
xlat
inc
add
lds
cmc
sub
push
cmp
lcall
add
call
xor
sti
rcl
xchg
jle
sub
add
movsl
adc
or
pop
mov
movsb
or
add
insb
push
mov
xor
loop
mov
xchg
or
push
push
cmp
dec
mov
mov
inc
ds
popa
fs
inc
sbb
orb
mov
mov
cmp
ja
mov
bound
sar
pop
std
dec
pop
pop
push
cltd
add
nop
pusha
push
loopne
add
in
add
mov
xchg
and
ss
out
loope
inc
adcl
adc
fldl2e
cltd
sbb
adc
pop
mov
sbb
xchg
inc
cmp
ljmp
int3
bound
mov
cmpb
push
pop
enter
or
scas
xor
xor
inc
gs
jb
dec
sub
mov
js
mov
mov
sbb
adc
addb
or
mov
into
aaa
mov
stos
jo
add
add
scas
sarl
movl
push
lret
addl
sub
outsl
shlb
int
or
movsl
push
in
fucomp
outsb
movb
cs
lock
iret
and
mov
or
lock
xor
sbbb
dec
mov
iret
add
dec
cmpsb
adc
dec
sbb
inc
aam
or
pop
sbb
jmp
call
pop
xor
stos
jb
loop
mov
mov
pushf
bound
mov
xor
nop
xchg
sub
push
or
in
aaa
push
push
int3
mov
push
inc
fsubrs
pop
sub
jmp
mov
push
pop
icebp
clc
mov
xchg
xor
lcall
ss
outsl
aad
mov
sahf
inc
daa
push
in
loop
ja
add
push
test
pop
ljmp
jae
cs
sti
push
in
xor
xor
or
cld
insl
mov
mov
sub
push
mov
hlt
movsl
fs
nop
cmp
adc
jns
imul
jg
or
mov
loop
aam
mov
in
shrb
jl
lods
mov
test
sbb
or
mov
xchg
push
jae
hlt
xor
scas
leave
cmp
les
dec
pusha
cmp
mov
je
jge
enter
iret
fiadds
js
lds
mov
fs
pusha
adc
jno
stos
sbb
pop
lcall
testb
push
addb
int3
arpl
mov
xchg
jl
and
jnp
pop
aam
rorl
or
pushf
xor
push
mov
ficomps
sbb
sub
xchg
push
xchg
pop
jae
ds
rclb
daa
loopne
add
hlt
lods
aaa
je
and
ljmp
push
push
pop
mov
outsb
xlat
mov
or
ds
aas
ss
sbb
jns
mov
scas
mov
mov
mov
mov
cmp
enter
push
jae
pop
fidivl
lock
shrb
ds
jne
and
hlt
and
push
or
icebp
and
inc
dec
mov
in
pop
ds
mov
push
fnsave
adcl
inc
xchg
lcall
mov
lock
mov
sub
dec
sub
lods
jbe
dec
lds
stos
mov
adc
ljmp
adc
lret
mov
adc
lea
mov
mov
or
jle
shr
dec
inc
or
jge
cwtl
dec
xchg
add
sbb
cmp
sbb
xchg
mov
bound
mov
cli
les
or
inc
xor
mov
adc
js
xchg
inc
adc
push
mov
cmp
xor
cld
sub
add
pop
testb
jne
and
popa
mov
mov
andb
aaa
ds
mov
stos
in
clc
lret
out
jno
and
test
and
pop
lahf
sub
or
cwtl
cmp
sbb
mov
xor
das
dec
jg
xor
cmc
cmp
movsl
popf
enter
ret
xor
jae
sarb
inc
daa
inc
gs
lahf
cmp
ret
dec
movsb
push
mov
pop
or
dec
stos
mov
je
mov
push
sbb
movb
mov
mov
dec
fidivs
add
jo
sub
add
jnp
test
lods
dec
outsl
jns
inc
mov
cmp
shll
aad
hlt
inc
inc
mov
pop
lret
insl
jle
xchg
inc
inc
movsl
mov
les
daa
dec
ret
ja
das
std
mov
nop
arpl
and
mov
test
xchg
and
fwait
fs
das
subl
cmp
inc
xor
aaa
or
jne
dec
out
and
cli
mov
call
insb
ret
jae
xchg
xchg
cmp
lahf
je
xchg
or
xchg
andl
inc
or
ljmp
mov
jge
stos
pusha
sub
imul
sti
stos
rolb
mov
rorl
mov
mul
mov
data16
jmp
in
out
scas
out
hlt
adc
popa
outsb
xchg
rcrl
xchg
cmp
clc
outsl
xor
sarl
xchg
idivb
cmpsl
scas
notb
gs
cld
and
mov
and
xchg
adc
sahf
imul
test
pop
dec
and
lcall
ljmp
push
sub
fldl
push
mov
mov
jns
dec
popa
jno
adc
cli
add
lret
ret
adc
add
cmpsl
sbb
or
fnstcw
inc
movsb
pushf
mov
cmpsl
add
inc
sarl
mov
or
clc
movsb
std
fisubrl
sbb
mov
pop
mov
push
aaa
mov
xlat
fcmovu
inc
mov
loope
or
mov
cmp
add
in
push
xlat
cli
adc
xchg
call
fbld
mov
inc
and
nop
lods
loope
dec
fst
andl
add
xchg
bound
lock
xchg
test
imul
gs
jbe
nop
and
imul
jno
insl
and
xlat
hlt
testb
fistl
and
leave
mov
scas
aas
adc
xchg
loop
adc
fldenv
vmptrst
push
xchg
inc
in
push
sub
or
mov
int3
mov
push
daa
ds
xchg
sub
mov
test
xchg
push
push
jb
mov
jae
mov
jne
cmp
adc
or
lahf
popl
xorb
mov
call
dec
bound
repz
pop
push
or
out
add
pop
lcall
and
icebp
das
pop
aad
xorb
es
xchg
jp
test
add
xchg
es
scas
les
std
clc
enter
shll
movb
dec
ljmp
pushf
inc
clc
sbb
pushf
lahf
cmovne
cmpsl
xor
jmp
cwtl
inc
push
inc
movsl
fldt
dec
inc
mov
cmc
idiv
movsb
cmc
jbe
push
or
jne
xchg
add
cmp
ds
test
mov
mov
pop
sub
pop
fbstp
movsb
cmp
test
cmc
mov
ficompl
loope
pop
ss
jle
xchg
xor
movb
push
cli
mov
push
and
test
mov
pop
adc
insl
ret
rcll
in
jns
dec
aad
adc
add
hlt
adc
sahf
xchg
xchg
out
pop
icebp
ror
sbb
lahf
in
out
loope
inc
mov
cmp
mov
hlt
and
mov
addr16
pop
bound
lea
comiss
xchg
adc
push
jb
xorb
push
xchg
cs
fwait
jns
rcrl
outsb
and
sahf
das
in
jmp
imul
aam
inc
call
cmp
ds
in
mov
push
daa
mov
mov
pusha
inc
jp
gs
js
mov
cmp
scas
add
out
mov
jae
scas
pop
jge
imul
push
ret
pop
push
dec
mov
aam
adc
lds
sbb
fistpl
inc
push
inc
mov
daa
mov
mov
jno
push
shl
jp
pop
repz
in
push
jnp
in
out
cmp
push
aas
jl
cmp
imul
call
stos
sbb
xor
push
shlb
loopne
mov
jne
sub
mov
test
shr
push
push
xor
fbstp
jmp
rcll
stos
mov
xor
and
add
cmp
inc
fs
imul
lods
or
xchg
jae
sbb
jl
sub
inc
das
out
fwait
gs
je
cmp
aaa
icebp
enter
int
cltd
cmpsb
cmp
aam
jecxz
pop
and
jo
pop
mov
sub
push
imul
aam
in
jbe
jo
sbb
adc
gs
call
cs
in
popa
sub
insb
aam
ljmp
or
xchg
xor
xorb
nop
jmp
push
stc
lea
js
add
popf
test
test
sbb
push
out
add
push
inc
adc
pop
mov
and
fildll
pop
sub
sbb
dec
and
push
jb
sahf
insl
prefetch
cmpsb
data16
mov
inc
flds
mov
push
mov
xor
leave
vunpcklps
arpl
orl
push
pop
pop
sbb
lods
pop
push
inc
pop
mov
les
cmp
mov
and
sbb
pusha
inc
cwtl
stc
add
jno
mov
frstor
shrl
idivl
test
xchg
pop
cli
aas
out
pop
stc
mov
mov
push
cmpsb
aaa
ss
and
scas
mov
daa
fs
sahf
mov
mov
dec
in
loope
dec
pop
jl
out
mov
lret
xchg
data16
jp
xchg
add
cmc
rorb
add
fidivs
insb
insb
pop
and
add
pop
into
cmpsl
or
out
push
cmp
dec
dec
ror
ret
mov
mov
xchg
loopne
arpl
or
mov
push
and
scas
bound
adc
cmp
lds
jge
fcmove
fisttpl
scas
fistpll
mov
mov
or
add
int
cmp
movsl
mov
xor
in
clc
loopne
cmc
ds
push
push
mov
and
insb
adcl
push
sbbl
stc
sub
mov
and
and
test
je
movsb
int
sub
jno
fnstenv
or
sub
inc
dec
jge
lret
pop
jecxz
es
ret
fstpl
pop
movsb
test
jle
or
js
cwtl
or
jnp
cmp
fs
lret
sub
xchg
cmpsb
pop
sbb
das
add
inc
pop
arpl
pusha
test
out
pop
push
cltd
dec
dec
mov
sbb
pop
cmp
and
jbe
sbb
movsb
fstpl
sarb
lds
ror
mov
nop
int
fimull
inc
pop
inc
enter
or
mov
ret
and
jp
xchg
adc
enter
dec
int3
sbb
or
fnstenv
movsl
lods
mov
dec
cs
adc
popa
mov
pop
cmc
sub
fbld
imul
xchg
or
dec
xor
add
inc
aam
jge
fs
fs
jge
xchg
cld
mov
push
daa
push
sub
js
sub
inc
decb
je
in
fs
jbe
cmp
leave
out
sub
roll
mov
dec
mov
scas
add
fisttpl
push
dec
adc
jne
out
jp
in
movsb
cltd
enter
subl
dec
xor
mov
ret
cmp
repnz
adc
inc
imul
dec
pop
outsl
cmp
xor
out
sub
add
repz
arpl
leave
flds
pop
popa
adc
cmp
jmp
mov
subb
pop
mov
mov
or
cli
icebp
jp
iret
pop
jp
inc
add
mov
dec
shlb
mov
addr16
outsb
mov
mov
ret
mov
decl
lds
cmpb
xor
test
jnp
lock
xor
aad
cmp
in
js
shrl
rcll
xor
sub
adc
pop
call
xlat
jnp
mov
pusha
and
cmpl
rcrb
adc
dec
enter
cld
fisubrl
clc
cmp
xchg
inc
adc
push
lods
std
inc
adc
mov
push
enter
pop
dec
into
mov
pop
and
cltd
shl
out
aam
jle
jmp
mov
repnz
xlat
out
daa
sub
sub
sarl
enter
and
push
cld
clc
movsl
out
dec
sbb
mov
movsb
loope
scas
repnz
inc
ret
je
push
leave
add
mov
arpl
out
fdivrl
out
les
push
and
pop
sub
cmp
push
adc
test
pop
cmp
int
into
pop
ljmp
roll
ljmp
dec
addr16
pop
popf
jp
sbb
daa
fnstsw
xchg
ret
out
sbb
xchg
cmpsb
pushf
pop
cmpsl
and
xchg
mov
divl
aam
es
dec
mov
cwtl
hlt
xor
and
mov
movsl
stos
inc
testb
jns
aaa
mov
jno
mov
jecxz
or
xchg
xlat
rcr
push
jmp
inc
push
mov
insl
jmp
sub
mov
pop
in
xchg
pop
ja
pop
imul
out
movsb
cmp
mov
insb
jp
sub
or
repnz
mov
lds
push
int3
test
std
mov
xlat
adc
xor
bound
or
xchg
andl
scas
js
ds
push
mov
shl
push
in
xchg
or
push
imul
pop
adc
es
add
cld
push
lcall
insl
sub
clc
loope
and
push
dec
sbbb
sbb
jle
cld
loope
pop
push
push
inc
or
cs
and
ds
lret
push
stc
and
inc
andb
dec
inc
or
cmpb
sahf
out
mov
in
add
pop
addl
dec
pop
dec
bound
mov
sub
fdivrs
ret
sub
leave
ss
ja
push
nop
cmp
pop
xchg
jo
mov
lret
mov
ja
add
inc
popa
push
xchg
negl
fs
lods
mov
sub
inc
popa
pop
adc
aas
push
add
sub
std
jns
popf
sub
pop
loope
fs
out
push
jl
pusha
mov
icebp
jle
sbb
fs
in
test
xor
pushf
and
sub
outsl
adc
and
jl
in
clc
loopne
rcr
stc
and
push
subb
mov
mov
push
sti
test
fstps
sbb
lea
cmp
cmp
andb
test
loope
sbb
shrb
sbb
mov
ret
in
inc
stc
call
push
xor
and
or
push
movsl
cld
jp
push
pop
scas
jbe
jo
ljmp
out
fwait
pop
aam
outsb
ljmp
out
mov
ret
adc
inc
dec
jo
lahf
push
cmpsb
daa
arpl
adc
sbbb
repz
mov
mov
lahf
dec
xor
or
lret
mov
pop
fiaddl
shlb
xchg
sbb
data16
mov
imul
mov
adc
cmp
push
data16
lods
mov
sbb
push
or
mov
xchg
dec
push
mov
dec
mov
cmp
inc
sarb
dec
nop
mov
and
aaa
mov
dec
xor
es
sti
hlt
and
adc
in
xchg
fs
xlat
mov
and
sbb
lods
fidivs
int
mov
mov
in
and
jecxz
add
adc
sbb
jge
mov
sub
daa
arpl
cmpsb
orl
shrb
out
out
imul
mov
cmp
adc
sub
add
popf
xchg
fmull
push
daa
ret
aas
scas
fnsave
das
adc
out
outsb
cmp
sbb
mov
xor
stc
inc
mov
idiv
negb
testb
jne
jmp
mull
cmp
sar
mov
cld
add
push
imul
push
xchg
jge
add
dec
outsb
mov
arpl
aam
enter
mov
push
and
xchg
or
sbb
add
imul
popa
je
adc
cld
pop
popa
inc
popf
arpl
out
icebp
mov
pop
lahf
lea
xor
mov
mov
cmpsl
mov
nop
pushf
or
xor
ret
push
rcrb
nop
xor
repnz
ret
imul
insb
je
fsubrs
push
xlat
mov
out
jne
xchg
mov
cwtl
pop
mov
iret
pop
outsb
scas
fsubr
cmp
aaa
inc
jge
sarb
aam
mov
aam
out
call
mov
subb
lods
adc
adc
leave
fbstp
sbb
xor
aas
xchg
or
push
aas
jl
mov
jle
xor
aam
outsb
cmpsb
mov
adc
cmp
push
das
out
mov
push
mov
dec
adc
and
inc
test
and
xchg
ret
sahf
adc
mov
or
lahf
leave
rcrb
push
jecxz
xor
movsb
stos
adc
out
outsl
jb
aad
inc
pop
test
adc
or
stc
daa
jecxz
arpl
aad
pop
stos
out
testb
cwtl
addr16
cltd
fcom
mov
daa
outsw
mov
mov
into
mov
pop
scas
mov
sbb
cmpsb
lahf
enter
aas
xchg
sub
dec
sbb
sti
or
xchg
jp
movsl
jmp
ret
xchg
mov
mov
xchg
ror
aad
jecxz,pn
cwtl
mov
decl
pop
outsl
movsb
outsb
mov
out
dec
dec
mov
mov
mov
push
push
push
and
stos
mov
aad
ljmp
lods
dec
aad
jae
xchg
iret
jae
int3
adc
cmpsb
repz
mov
inc
outsl
popf
aaa
push
sbb
and
jo
mov
dec
or
and
push
stc
mov
inc
cs
dec
xchg
ror
inc
xor
mov
and
push
mov
test
mov
sbb
jns
idivl
pushf
jo
and
jge
aas
pop
cltd
jl
test
das
jmp
mov
adc
mov
hlt
mov
fwait
jp
popa
fidivrs
add
sub
lods
out
sti
inc
push
lcall
cmp
jbe
mov
push
push
lods
aas
bound
xor
lods
outsl
inc
add
imul
adc
cld
mov
andl
lea
orb
dec
pop
sbb
aaa
mov
mov
or
and
iret
test
inc
and
add
and
mov
xchg
lahf
mov
cmp
jl
mov
shll
xchg
cmp
jle
loope
fmul
xchg
push
jle
ret
push
movsb
int
mov
jl
mov
or
fidivs
push
stos
iret
cli
test
out
or
pop
push
mov
jl
lret
test
ror
pop
adc
pop
addr16
add
call
mov
out
xchg
pop
hlt
mov
sbb
imul
adc
nop
fldt
xor
out
aaa
scas
es
pop
mov
jns
repnz
inc
xor
adc
pop
jge
pop
jae,pn
cmp
imul
adc
out
sbb
andl
xor
stos
cld
imul
or
xchg
inc
add
mov
and
ss
or
adc
repnz
inc
cld
dec
push
jp
orl
test
add
in
mov
ss
jge
push
adcl
push
xchg
sbb
std
cmp
cli
pop
mov
aad
ja
and
cmp
cs
nop
cmp
imul
es
test
int3
paddusb
scas
in
xchg
stos
mov
push
pop
ror
add
push
ss
mov
mov
mov
push
cmpsb
mov
loop
mov
insl
insl
push
sbb
jge
rclb
cmp
xorl
out
dec
push
dec
adc
cmp
push
inc
mov
out
mov
loope
sub
ret
dec
adc
dec
jno
cmp
fwait
addr16
lock
dec
dec
lock
out
lods
lock
pop
add
push
sbb
dec
jae
fcompl
sub
jbe
icebp
bound
rorl
cmpsl
xor
mov
es
jno
sub
jl
cmpsl
fdivr
jg
les
fwait
dec
cmp
icebp
sarb
test
push
or
or
jno
out
push
movsb
jle
paddsb
sub
push
sub
and
xor
fwait
inc
xor
movsb
fisubl
or
sbb
pop
outsb
shll
movsl
insb
nop
jle
mov
mov
pop
sub
mov
push
add
jbe
outsb
inc
insl
outsb
in
fistl
mov
shlb
jo
xchg
ss
test
push
mov
js
cmovl
aam
push
push
mov
jmp
stos
dec
sahf
test
shlb
push
daa
add
mov
jbe
int3
inc
int
leave
loope
leave
xor
add
lds
mov
jg
icebp
push
fwait
dec
mov
jmp
mov
ret
scas
and
lret
ds
cmpsl
movsl
cmp
xor
loopne
add
jo
sbb
cmp
and
lods
movsb
insl
xor
sbb
add
lahf
pop
mov
repnz
out
movl
out
mov
mov
mov
sahf
mov
loopne
sub
pusha
mov
sbb
mov
xor
dec
xor
fstpt
jae
insb
into
test
inc
inc
clc
xchg
lods
lock
pushf
cmp
jmp
adc
mov
pusha
xor
es
push
mov
lcall
jo
nop
arpl
dec
mov
sahf
pushf
adc
jae
lea
into
aas
sub
inc
lds
xor
mov
dec
aam
jecxz
inc
test
out
jno
ficoml
nop
sub
inc
dec
repz
dec
push
repz
cld
movsb
or
sub
ss
gs
pop
incl
jle
inc
pop
add
jne
fimuls
pop
mov
aam
jb
imul
adc
mov
in
test
popf
xchg
xchg
cmpsl
xor
mov
sub
push
adc
subb
das
sbbl
push
es
clc
sahf
pop
ds
shrl
loope
faddl
push
sub
xor
gs
loope
in
out
adc
mulw
or
cld
pushl
rcrl
xor
mov
xor
mov
rcr
loop
push
cmp
call
xadd
push
fidivs
pop
push
inc
add
cmp
popa
fs
enter
xchg
fiaddl
adc
test
frstor
mov
lahf
inc
ret
fdivrs
mov
xchg
int3
fimuls
mov
insb
repz
add
mov
mov
push
xchg
mov
mov
clc
iret
mov
arpl
push
lods
and
xchg
xor
add
ret
popa
dec
ja
repnz
cmp
or
xor
scas
aas
cmp
lea
sbb
int
adc
dec
pop
dec
nop
sarb
fwait
xchg
lods
push
xor
insl
adc
mov
xchg
pop
les
or
sbb
gs
popf
inc
pop
push
adc
pop
mov
xchg
loop
pushf
jbe
jl
cwtl
ss
outsl
dec
mov
inc
mov
and
repz
xorl
test
arpl
sbb
fstpl
pop
incb
and
xchg
inc
cmp
mov
push
xchg
adc
test
sbb
cmp
mov
movsl
jnp
or
out
push
pop
rorb
inc
aam
adc
dec
adc
xchg
and
xchg
and
inc
outsb
pop
mov
pop
xorl
lock
sub
iret
addl
and
mov
rorl
in
sbb
or
push
dec
adc
call
icebp
pop
ss
and
pinsrw
xchg
or
cmp
fs
pop
lea
testb
sbb
shll
xchg
sub
fiaddl
sub
pop
xor
dec
lahf
sub
jecxz
or
xchg
xor
fnstsw
adc
sub
xchg
xor
sub
inc
jge
xor
sti
out
adc
xchg
mov
jmp
fcmovnu
pop
or
leave
mov
mov
mov
les
adc
xor
xor
and
mov
das
mov
imul
loop
mov
enter
cmp
gs
cmp
iret
enter
jmp
adc
jno
xchg
sahf
out
adc
mov
cmpsl
insl
add
pop
cmp
and
dec
push
es
ficompl
in
clc
cli
imul
adc
mul
sti
dec
jge
jb
mov
div
int3
dec
or
and
and
push
hlt
add
or
xor
sahf
inc
dec
mov
cld
repnz
xchg
or
mov
mov
adc
push
xor
xor
sbb
sub
push
dec
stos
jae
cmpsl
jae
sbb
mov
jae
hlt
xor
clc
pop
fs
mov
addb
xor
aas
rcrl
xor
sub
mov
mov
into
mov
and
fldl
jae
gs
sarl
push
sbb
rorl
pop
mov
div
cld
xchg
add
mov
push
insb
mov
add
dec
int
fwait
or
pop
sti
push
sti
fs
pop
inc
mov
mov
sahf
ljmp
cs
cltd
jb
xchg
arpl
xchg
xchg
jb
ja
into
mov
pop
test
mov
or
mov
shrb
insb
pop
fisubrs
inc
dec
pop
es
outsl
fildll
xchg
int3
mov
push
sub
outsl
sarb
test
ja
cmp
pushf
jae
in
sbb
stc
push
mov
stos
or
fnstsw
mov
std
cmp
loope
fwait
xor
addl
and
pushf
divl
inc
outsb
leave
mov
mov
subps
jns
fisubl
mov
mov
imul
push
sbb
outsl
sub
xor
inc
jnp
jmp
insl
stos
in
sbb
mov
jecxz
xchg
les
stos
int3
jle
jb
shl
sub
push
xchg
mov
lock
and
inc
xlat
adc
add
jno
jnp
inc
inc
mov
jno,pn
in
dec
mov
xor
and
xorl
adc
pop
lock
ret
pop
cmp
mov
ret
test
cld
mov
jo
mov
mov
xchg
cltd
int3
xchg
xor
jecxz
jo
mov
test
enter
sarb
xor
inc
jg
idivb
cmpsl
cld
push
xchg
neg
sbb
sbb
push
imul
mov
aam
adc
xor
arpl
rcrb
sarb
ret
adc
or
icebp
xor
mov
sub
les
pop
fbld
aaa
popa
in
and
dec
dec
or
jno
dec
push
ds
loopne
push
negb
sahf
xor
daa
sub
dec
push
mov
inc
lahf
outsl
imul
aas
jmp
ss
rol
jmp
bound
stc
jl
lds
and
mov
aad
add
mov
cmp
rcl
hlt
mov
dec
and
jmp
or
push
test
pop
movsb
and
and
inc
mov
xlat
sarb
popf
sub
in
push
aad
push
mov
xchg
sbb
cmpsl
dec
pop
out
xchg
xor
lcall
stc
leave
je
sbb
jge
lret
imul
outsb
sbb
and
pop
je
xchg
xchg
xor
jle
pop
lret
leave
xlat
das
call
movsl
imul
cmpsl
mov
fiadds
clc
inc
adc
cmp
adc
add
push
negb
pop
xchg
sbb
add
push
pop
test
jg
movsl
out
nop
adc
loop
mov
xor
in
pop
shrb
cmp
aas
xchg
mov
int3
shll
in
out
xlat
and
arpl
fidivrl
pop
push
ljmp
nop
mov
mov
push
les
xchg
and
popf
lds
push
mov
rcll
xchg
jbe
ja
test
mov
in
out
ja
in
inc
cmp
insb
xchg
inc
jae
mov
add
lahf
inc
inc
jne
leave
mov
pop
mov
mov
push
in
cmp
outsb
insl
xchg
mov
mov
out
frstor
xor
fldcw
sub
jle
sti
pop
mov
negl
adc
sbb
repz
add
mov
sbb
pop
xchg
ror
xchg
add
sbbb
xor
and
movsl
jmp
inc
inc
or
test
pop
add
sub
and
sub
and
xchg
cmc
iret
repz
iret
mov
jne
and
add
mov
repnz
cmpsb
rol
mov
add
jecxz
fdivrs
popf
bound
imul
pop
ss
movsb
push
negl
notb
aaa
mov
cmp
push
das
insl
xchg
mov
pop
das
push
mov
sub
in
mov
adc
jge
and
sub
mov
sub
cmp
aas
bound
ljmp
out
jecxz
cmp
jns
push
push
stos
rolb
roll
cmc
in
loop
dec
mov
jmp
test
mov
jmp
mov
pop
ljmp
xlat
xchg
in
or
ss
leave
cmp
std
mov
repz
xchg
clc
sub
movsb
lds
jno
lods
or
mov
jle
push
sbb
ret
xchg
pop
sub
sub
adc
aaa
sub
lods
scas
pop
or
repnz
aam
clc
in
js
mov
mov
xchg
push
push
push
subb
jne
addr16
scas
pop
pop
je
pop
rcl
jecxz
es
mov
dec
lea
pop
dec
stc
jl
sbb
sbb
popf
sub
or
in
push
int3
push
repnz
aad
ret
insl
mov
stc
in
arpl
mov
push
fcoms
mov
movsl
jecxz
and
inc
and
mov
idivb
xor
push
ja
aas
int
fwait
lcall
movsb
mov
pop
cmp
sbb
mov
push
std
mov
arpl
notl
push
jge
and
out
pop
or
lret
insl
jbe
mov
inc
lret
pop
jecxz
loop
imul
and
fstp
inc
jg
push
jo
cmpsb
aad
test
sub
and
mov
and
xor
inc
aas
pop
cmpb
test
mov
xchg
mov
jp
popa
std
insl
mov
sub
push
cmp
mov
mov
xlat
pop
rcl
sub
cmpl
mov
xor
dec
lahf
xchg
jge
je
out
xor
push
sarb
stos
xchg
push
fs
pop
cli
cmp
mov
mov
lret
sbb
or
lods
lret
sub
add
dec
test
push
pop
xchg
push
mov
xchg
sub
leave
ret
adc
shll
fsubrl
aas
lods
pop
subb
jnp
mov
fbstp
adc
loopne
dec
sbb
xor
outsb
mov
aaa
movsl
cmp
aaa
lahf
ror
lret
jne
cmc
cmp
subl
dec
dec
push
lods
push
loope
or
insl
mov
shll
repz
xor
scas
cmp
cmp
aam
pop
outsb
cmp
jbe
add
push
push
loopne
dec
andb
shll
test
ljmp
add
xorb
add
xor
test
jge
jnp
inc
push
addb
xor
jp
popa
call
mov
cmc
dec
jge
push
insb
pop
cmpsl
xchg
add
pop
cs
or
xchg
and
dec
dec
add
lods
cwtl
hlt
ret
data16
and
or
js
fwait
outsl
add
sbb
cmp
aas
add
stc
je
cwtl
fidivrl
imul
adc
call
and
adc
lea
dec
mov
xchg
inc
add
icebp
sbb
fadd
fistl
sub
xlat
addr16
xor
lods
hlt
mov
lret
jbe
call
test
rcrb
jbe
leave
inc
rcll
xor
movsl
mov
fsts
jl
out
pop
cld
scas
insb
mov
es
popa
test
mov
xchg
xor
push
rclb
into
pop
rcr
iret
popa
pushf
lds
cmp
sbb
repnz
iret
in
gs
dec
add
xor
fisubs
scas
jge
test
movsl
xchg
into
jecxz
or
scas
outsl
jo
dec
sub
andl
xchg
xor
lods
mov
loope
push
pop
fsubp
push
fmuls
std
xchg
jb
mov
xor
lods
add
clc
push
inc
push
cmp
aas
out
outsl
jno
hlt
pop
in
push
test
stos
mov
daa
mov
xor
inc
test
lcall
sahf
test
xlat
fidivs
mov
sbbl
js
sbb
je
adc
ret
sbb
add
mov
icebp
dec
fisubrs
bound
jne
or
adc
or
outsl
fldenv
push
sbb
out
mov
cmp
sub
lds
and
and
sub
daa
and
fsub
pusha
aaa
fidivl
inc
xchg
into
inc
sahf
das
dec
xchg
jg
fstl
adc
ss
push
mov
leave
jle
test
push
xor
test
sub
shr
or
jnp
cltd
xchg
and
sub
pushf
mov
leave
idiv
pop
sub
sub
clc
jno
adc
xor
jmp
mov
fstpl
dec
pop
jbe
aam
sbb
imul
rep
mov
cmp
or
jnp
push
mov
xchg
data16
cmp
inc
enter
ret
cltd
and
lret
and
sti
cvtdq2ps
stc
imul
xorb
out
bound
lahf
push
call
xchg
aas
les
std
mov
fcmovnbe
or
addl
jle
leave
sbbl
test
out
xchg
add
mov
into
dec
push
xor
repnz
ja
dec
loope
sbb
in
inc
add
push
mov
lahf
push
pop
push
lds
push
and
cld
lds
push
jbe
popa
aad
and
fcoml
inc
xchg
mov
cwtl
imul
jecxz
mov
mull
gs
rol
ja
pop
inc
dec
jge
insb
cmp
cwtl
cmpsl
cmp
fsubrs
dec
inc
add
cli
test
pushf
or
sbb
les
ret
jnp
and
jl
sar
mov
arpl
lret
mov
shl
or
in
mov
out
pop
sbb
inc
xor
leave
outsb
shll
addr16
cld
outsl
jp
add
cld
jge
or
out
push
add
adc
jg
cmpsl
bound
and
mov
add
stos
stos
je
lock
stos
call
enter
add
loop
pop
add
or
jp
inc
mov
mull
or
pop
mov
arpl
mov
and
in
cli
and
push
sbb
add
es
cmp
out
leave
into
xchg
xchg
lods
inc
inc
cltd
loopne
add
cmp
jge
mov
jnp
cmp
cmp
inc
inc
roll
xor
push
jb
mov
sarl
sbbb
pop
jl
cmp
xchg
addr16
lret
dec
jne
dec
nop
jns
jns
leave
and
clc
clc
or
bound
jns
stos
and
int3
xor
fsubrl
jbe
mov
push
aam
sub
xchg
push
cmpsl
dec
jl
daa
jae
jecxz
push
or
pop
ljmp
mov
adc
outsb
imul
pop
imul
rclb
rcrl
inc
out
jp
push
cmp
fwait
jbe
scas
mov
push
fistpll
in
mov
imul
or
push
fadds
aam
xchg
pop
clc
inc
adc
mov
jecxz
mov
cli
lahf
adc
cltd
imul
imul
ds
das
mov
xchg
je
test
mov
mov
xchg
aad
rol
rcll
es
jmp
push
bnd
int3
adc
inc
scas
sbb
cwtl
insb
jb
inc
pop
inc
inc
inc
dec
adc
lahf
clc
in
repnz
xchg
movsb
pmuludq
push
mov
push
test
xchg
mov
or
jp
daa
pop
inc
cli
out
data16
rolb
lods
sbb
test
push
adc
xor
loop
fstl
sub
mov
les
xchg
pslld
pusha
mov
xchg
jl
jb
xchg
out
dec
inc
push
dec
ja
pop
popa
loopne
mov
lods
lret
mov
xchg
xor
imul
mov
je
cltd
cmp
cmc
cmp
in
ja
mov
adc
out
insb
adc
pop
dec
je
jge
cmp
test
dec
pop
xchg
mov
pop
sub
inc
out
mov
adc
daa
cwtl
cld
data16
push
cli
lret
jle
int
cmpsl
repnz
imul
lret
jmp
xchg
adc
popa
cmp
fwait
sub
test
lret
lods
dec
jl
adc
sub
mov
fistpll
or
xor
test
pop
lea
inc
mov
lea
mov
lds
fs
mov
rolb
loop
loop
push
inc
shlb
lret
cmpb
mov
xor
push
orb
adc
sub
icebp
fimuls
sti
xchg
add
add
fwait
sbb
cmp
mov
mov
ret
and
mov
push
fwait
mov
movsb
sbb
into
mov
lods
lds
cmp
icebp
mov
data16
fbstp
pop
sbb
cwtl
scas
sbb
cmpsl
push
cmp
xor
scas
lahf
pop
xchg
mov
fiadds
xchg
out
rolb
aam
push
or
sbb
xor
inc
hlt
cmp
xchg
fsin
mov
lea
call
adc
add
mov
testb
loope
in
iret
das
cmpb
inc
int3
movsl
push
dec
mov
and
les
push
pop
rcrl
iret
mov
sbb
mov
rorl
inc
cmp
fidivs
lds
mov
cwtl
in
xchg
and
xchg
adc
outsl
mov
adc
inc
shr
jmp
jmp
or
xor
shrl
bound
retw
mov
dec
cmc
daa
jo
jmp
enter
test
inc
push
imul
repnz
add
mov
out
inc
imul
into
cmpsl
push
inc
inc
jb
jne
incb
add
call
dec
dec
jp
cmpsl
neg
call
shl
cmc
jb
lods
sbb
cltd
lret
cmp
cli
lcall
out
add
mov
imul
xor
jns
mov
jge
fs
pop
and
xchg
fisttpl
adc
jge
push
dec
ktestw
in
xchg
sbb
lods
and
rorb
push
daa
fstpl
bnd
cs
lds
ljmp
inc
std
inc
lret
jmp
cmpsb
sub
add
scas
xor
inc
cmp
sbb
add
scas
mov
shl
out
mov
sub
popf
fs
jmp
repz
xchg
inc
push
loope
rcrb
pusha
mov
test
xchg
aad
push
sbb
lds
sti
divb
xchg
mov
add
sub
sub
int
dec
push
iret
jge
dec
in
flds
imul
sub
insl
push
cmp
in
cmpsl
in
or
xor
mov
and
push
adc
xchg
shrl
cld
mov
dec
mov
addr16
push
sahf
lock
jb
xor
loop
mov
push
push
dec
lods
test
sbb
dec
dec
push
gs
jg
stos
pop
and
jge
cmp
add
pmulhw
or
outsl
test
aas
mov
push
sbb
out
notl
sbb
mov
gs
shrl
xor
push
inc
ss
and
fidivs
lahf
test
xor
add
mov
popf
fildll
les
subb
dec
mov
mov
jmp
nop
adc
js
stos
xor
ret
clc
lds
pusha
aaa
adc
xor
mov
fstl
or
cli
and
loopne
decb
mov
rcr
push
mov
ret
xchg
scas
lock
mov
rol
dec
jae
cmp
cwtl
xchg
aas
movsb
mov
sti
push
test
pusha
inc
inc
mov
inc
and
mov
inc
aad
loope
mov
je
dec
mov
les
push
ror
cmp
add
fildl
lret
add
out
push
sbb
push
and
sbb
mov
xor
and
lret
jmp
sbb
or
pop
movsb
cmp
cmpsb
stos
push
stc
jno
dec
sub
xchg
out
lods
mov
mov
xor
and
add
mov
inc
mov
jns
ljmp
pop
addr16
cmp
pop
push
push
cmp
pop
push
adc
cmc
loop
jb
jl
add
aaa
out
mov
add
mov
sub
add
lods
jg
pop
imul
adc
pop
daa
dec
sbb
adc
sbb
jl
int
jno
pop
adc
ja
fistpll
or
adc
push
sti
std
xchg
jo
sub
outsl
inc
inc
daa
popa
push
rorl
sub
mulb
in
cwtl
fadds
lock
dec
rcr
jnp
xchg
adc
mov
call
push
outsl
scas
test
out
in
mov
push
inc
fdiv
and
jmp
jmp
cs
xchg
jp
xor
fldt
rcr
sbb
inc
sbb
jp
push
or
pop
adc
dec
mul
inc
call
sbb
push
xor
cmp
in
xchg
inc
push
xor
enter
lds
adc
cmpsl
dec
mov
cld
mov
lahf
mov
dec
jmp
dec
xor
and
jmp
xorb
mov
jae
push
mov
dec
call
faddp
push
jmp
pop
push
add
arpl
sub
or
jge
cmp
call
int
add
lods
clc
jae
sub
imul
lods
add
int
aam
repz
popf
and
or
bound
or
xchg
test
fsubrl
std
mov
mov
adcl
loope
sti
ret
stc
pop
sbb
jno
dec
out
mov
adc
out
cmp
aaa
pop
or
inc
add
mov
jae
dec
daa
dec
jecxz
or
lret
movsb
mov
push
pushf
fmull
mov
jl
rorb
pop
and
mov
stos
scas
int
dec
pop
pop
push
call
jbe,pn
inc
xchg
pop
sbb
gs
test
xchg
shll
xor
fistl
push
movsb
or
jne
jecxz
push
lds
imul
lods
pop
dec
dec
adc
pop
mov
jae
dec
fisttpl
rolb
pushf
pushf
in
push
add
loop
mov
jnp
push
jbe
xchg
test
sub
rcr
fiadds
imul
iret
pop
mov
test
xchg
aad
sub
or
add
add
add
pusha
add
or
fidivrl
pop
jp
sbb
decl
rolb
mov
jbe
test
sbb
xchg
push
push
inc
add
arpl
ja
sbb
popf
cmp
xor
xor
fwait
jae
dec
sub
adc
dec
pop
sub
mov
pop
pop
insl
xchg
js
inc
mov
pop
cs
fwait
std
push
mov
pop
test
aaa
mov
repnz
rcll
sbbb
mulb
sti
dec
xor
mov
mov
loope
addb
and
push
mov
and
cs
adc
faddl
lahf
nop
insl
push
cmp
xchg
gs
outsl
xchg
nop
test
dec
push
movsl
inc
in
push
add
xchg
pop
addr16
xchg
xchg
xor
xlat
jb
aam
mov
push
out
jbe
xchg
call
mov
cmp
sahf
fs
push
sti
adc
cmp
arpl
cmpsl
or
lods
and
in
cltd
lods
and
jmp
jmp
lods
test
push
mov
pop
cli
fbstp
movsl
jns
jle
dec
add
repnz
enter
cmp
or
and
push
lea
inc
add
adc
dec
imul
pop
mov
and
scas
int3
enter
add
lock
repnz
mov
cs
decl
sub
addr16
xchg
add
push
je
les
outsb
rcll
xor
ljmp
and
xor
adc
push
xchg
pop
cmp
or
jmp
push
fs
adc
inc
jno
pop
sbb
cmp
aam
xchg
and
ds
jbe
pop
sbb
pop
jge
outsl
pop
fdivs
or
and
ror
add
mov
xchg
cmc
dec
cltd
or
shll
mov
dec
stc
push
in
dec
inc
inc
mov
loop
filds
sbb
sti
jl
mov
pop
out
lods
mov
test
sbb
jae
mov
mov
jmp
cs
fsubs
insl
mov
loop
paddb
cmpsl
je
pop
sti
arpl
or
movsb
jp
dec
adc
pop
popl
inc
test
sub
cli
mov
mov
or
je
jge
push
rol
push
shrb
iret
and
push
test
sbb
or
dec
mov
iret
xchg
imul
cld
rorl
pop
test
xchg
cltd
ljmp
jnp
stos
mov
ja
pop
pop
sub
cltd
loopne
in
and
and
push
mov
mov
mov
mov
pusha
test
dec
jmp
rep
bound
push
mov
or
mov
sbb
mov
inc
pusha
loope
lock
mov
cmpsl
hlt
cmpl
cwtl
rcrl
push
mov
push
pop
add
pusha
movsl
xor
mov
loopne
lcall
mov
mov
mov
lods
adcb
cmp
pop
or
ss
sub
push
pop
xchg
out
pop
fstpl
mov
fwait
inc
dec
lods
pushf
cmc
pop
sbb
jmp
push
ret
mov
mov
xchg
mov
jne
int3
out
jb
xchg
push
sti
in
pop
pop
loop
loope
popf
mov
aam
in
jp
int3
cmp
fcomps
in
mov
cmp
movsl
sti
pop
sbb
loopne
dec
into
mov
and
dec
cmp
aaa
ss
imul
xor
sub
sbb
and
dec
xchg
les
mov
jne
xchg
and
leave
inc
push
push
dec
pop
leave
push
jo
and
sbb
and
aas
int3
sbb
add
cmpsl
lea
mov
rclb
int3
aam
rorl
xlat
js
xchg
jge
call
and
adc
sbb
int
mov
xor
and
mov
pop
push
jmp
cld
stos
cmp
lret
mov
push
leave
mov
pop
mov
xor
test
outsl
xor
xchg
mov
mov
mov
jl
mov
pop
xor
sbb
push
sub
sub
adc
sbb
sub
sbb
jbe
test
add
cmp
test
ss
mov
mov
xor
xchg
lcall
ss
and
jns
icebp
imul
fiaddl
addr16
jo
mov
sbb
pop
xchg
jo
adc
and
add
sub
fidivs
mov
inc
push
call
mov
lret
mov
kmovb
or
or
test
int
cltd
test
into
or
jge
lcall
mov
insl
adc
scas
sub
mov
fisubrl
movsb
outsl
inc
daa
add
adc
sub
int3
mov
xor
ret
test
or
push
push
cwtl
sahf
add
adc
inc
mov
rcrl
fcomps
pop
mov
cmc
xchg
xor
xor
and
lods
stc
mov
push
jno
jmp
xorb
adc
mov
aam
shlb
repnz
addr16
lcall
sbb
in
fmuls
cwtl
inc
jle
js
mov
mov
pop
rcll
mov
xor
sub
push
lds
aad
mov
cs
movsl
push
cmp
push
sti
lock
andb
add
rclb
sub
stc
ljmp
lret
or
xor
and
outsl
lea
fisubrs
xchg
xor
mov
dec
jno
or
mov
shrl
pop
inc
fsubs
pop
inc
xchg
xchg
jg
divb
nop
add
jge
sub
adc
dec
or
mov
sbb
ss
ja
sbb
and
popa
jb
jbe
jo
sub
or
lods
cltd
sahf
mov
sub
sbb
movsb
jae
icebp
out
hlt
into
pusha
push
xor
sbb
mov
inc
sbb
and
stc
cmp
into
mov
loope
lods
jle
aas
mov
pop
aad
lea
push
push
add
in
movsl
mov
mov
std
jle
inc
adc
cmp
jge
bound
in
das
movsb
imul
jmp
and
fnstcw
sub
or
popa
sbb
dec
call
aam
pop
je
out
jg
cld
mov
add
movsl
cmp
lds
sbb
or
enter
mov
jb
adc
jns
sti
call
pop
or
and
dec
aaa
xchg
sub
inc
push
std
stos
repz
mov
rorl
lret
fiaddl
push
pop
stos
inc
ja
gs
lret
xor
outsl
cmp
mov
mov
push
xchg
frstor
stos
js
mov
fs
sbb
adc
movsl
das
xchg
ljmp
cmp
jbe
inc
lock
mov
icebp
lods
jmp
pop
popa
insl
or
xor
repnz
pop
fisubrl
scas
push
in
lret
aad
mov
xchg
int3
or
adc
lea
testl
sbb
je
outsb
push
mov
jmp
clc
pop
sub
es
cmc
xorb
ja
out
push
mov
mov
and
push
adc
jae
rcl
push
jnp
mov
dec
sub
cmpsl
out
int3
inc
pushl
clc
enter
scas
enter
pop
or
fmulp
jl
or
aad
loop
jge
out
cwtl
or
movsl
cmpsl
mov
clc
ds
cmp
movsb
imul
ror
sti
in
sbb
aas
pop
popa
sbb
mov
sti
daa
jo
sbb
insb
xor
insl
push
dec
bound
pop
xchg
inc
fwait
aas
mov
pushf
inc
incb
leave
jo
js
ds
ficomps
dec
pop
cld
cltd
sti
jp
inc
jno
imul
test
decb
mov
enter
enter
add
mov
cltd
daa
push
pop
cmp
or
sbb
adc
jge
pop
pop
xchg
stc
aaa
movsb
ret
sti
cmp
jne
cmc
aam
jge
pop
add
mov
xor
cmpb
and
nop
jnp
inc
loopne
mov
pop
lods
jecxz
mov
mov
lcall
mov
mov
inc
sbb
mov
push
and
loop
and
add
rcr
je
xchg
inc
xchg
js
cmp
movsl
aaa
repnz
cmpb
xlat
mov
fsubrl
sti
add
inc
push
ja
mov
mov
rorb
adc
ficompl
push
and
imul
dec
mov
outsl
repnz
xchg
jg
out
rcrl
or
push
sub
adc
push
mov
dec
ja
lods
je
or
popa
lock
jae
mov
pop
dec
imul
fistps
sub
mov
ja
dec
cmpsb
leave
out
cmpsl
ja
add
pop
negb
in
loopne
divb
inc
inc
fsubs
mov
mov
lea
jmp
ljmp
cli
aaa
push
mov
sbb
sbb
sbb
mov
mov
or
ds
jne
mov
ds
jo
cmp
inc
aas
xchg
movsl
push
repnz
bound
lret
aad
repnz
mov
add
pop
cs
mov
cmp
pushf
mov
mov
push
fstps
xchg
les
out
mov
jp
ret
mov
push
call
jecxz
repz
insl
adc
hlt
mov
sbb
leave
in
mov
cmp
out
insl
jnp
sbb
cmp
xchg
subb
in
pop
sub
dec
xlat
aad
jb
and
in
cltd
cmp
add
pop
mov
xchg
xor
mov
dec
mov
pop
add
movsl
cmp
mov
mov
pop
pop
ret
adc
repnz
imul
addps
test
xor
aam
adc
xchg
jae
stc
xchg
ret
push
xor
dec
test
lret
sti
sbb
and
imul
xchg
pushf
sbb
sbb
ss
aaa
pop
leave
inc
cli
pop
lret
push
jns
or
mov
add
jmp
pop
sbb
or
mov
jbe
lret
pop
push
jp
and
pusha
adc
addr16
jbe
test
ss
mov
inc
shrb
aad
pop
sub
push
les
popa
cmp
rclb
fisttpll
jne
clc
xor
std
add
inc
push
lock
push
rolb
outsl
in
decb
arpl
mov
cmp
dec
sub
rol
nop
subb
stos
mov
arpl
imul
push
loope
mov
das
jmp
xchg
imul
or
movsb
ss
pop
aad
sbb
push
push
movsl
lahf
into
lock
test
lock
out
sbb
insl
cmp
call
pop
push
push
cmc
or
xorl
mov
enter
testl
int
push
stc
jle
and
fsub
aas
mov
call
and
xchg
lods
ljmp
dec
fcmovne
cmp
mov
lret
mov
fdivr
dec
and
mov
mov
mov
cmpb
ja
sbbl
addr16
nop
push
jae
adc
and
sub
lahf
inc
add
mov
jbe
xchg
cs
mov
movsl
aad
push
mov
aam
shl
fwait
xor
add
jne
sub
jb
int3
inc
jecxz
test
popf
lods
sub
call
cmpsb
loopne
std
into
cltd
pop
loope
faddl
and
pusha
pop
sti
fwait
pop
lea
mov
stos
pushf
nop
loop
sbb
movsl
and
pop
insb
scas
sahf
pop
repnz
mov
loop
fwait
xor
push
mov
pop
fldcw
cmp
roll
and
lret
loopne
stc
insb
sahf
or
je
call
addl
pop
fs
lcall
push
sbb
push
stc
fs
fwait
xchg
jge
jnp
add
inc
inc
or
jns
scas
inc
and
rolb
mov
pop
lods
loop
test
cmp
pushf
pop
enter
or
rolb
jns
add
cmc
jae
dec
sahf
outsl
mov
xchg
add
mov
test
push
aaa
pop
ror
jb
inc
xchg
cmp
popf
mov
push
cmp
pop
adc
adcl
push
fchs
and
sub
and
rcr
roll
push
cmp
icebp
scas
xchg
int
pop
mov
pop
loopne
and
push
mov
adcb
mov
fildll
aad
jmp
xor
addl
add
sbbl
iret
add
je
fldl
sbb
movsb
pop
mov
push
push
lods
roll
dec
push
loop
mov
ja
pop
lea
jge
mov
mov
inc
cltd
arpl
mov
cmp
fmull
xchg
dec
lcall
shrb
pop
aam
pop
and
and
ljmp
or
adc
std
or
jno
sbb
push
adc
push
ficoms
sbb
push
addl
loop
cmp
cmp
dec
divl
lods
popf
xchg
or
bound
lea
add
nop
xor
sub
test
add
dec
xchg
dec
sub
sub
stos
jnp
repnz
mov
test
pop
lahf
cmp
arpl
push
sub
push
icebp
mov
or
xor
dec
mov
andb
js
int3
iret
sbb
sahf
fdivrl
or
data16
xor
dec
fcompl
dec
loopne
push
sbb
out
inc
das
xor
adc
inc
adc
fadd
sub
and
mov
xlat
cld
push
fbld
pop
das
dec
inc
inc
ret
pop
imull
jae
mov
fisubrl
pop
inc
jo
pop
mov
add
out
jno
cltd
or
stos
enter
push
pop
imul
andl
sbb
jns
mov
ljmp
mov
cld
in
cmp
jmp
movsb
mov
sbb
inc
sbb
fisubl
adc
scas
repnz
or
sbb
dec
push
pop
mov
fadd
aaa
or
mov
into
out
hlt
mov
scas
ret
insb
xlat
shrl
xorb
cli
jns
in
sbb
sub
jae
mov
sub
add
pop
sbb
fsubrs
sti
inc
lods
or
sub
xor
inc
mov
xchg
out
mov
mov
mov
dec
idiv
jnp
frstor
mov
mov
mov
lods
push
xor
xchg
bound
les
lea
push
nop
xor
inc
mov
xlat
nop
or
cld
sub
aad
mov
in
test
add
add
aam
repz
xchg
pop
rolb
and
out
cwtl
mov
mov
sbb
push
or
into
push
lret
adc
jp
mov
push
push
adc
outsl
mov
mov
or
add
dec
adc
outsb
add
mov
push
ret
fs
inc
cwtl
fistps
mov
insb
cmp
dec
mov
lret
sub
icebp
test
fwait
adc
xor
push
sbb
push
lea
xor
pop
jo
cmp
adc
in
scas
sub
cmpsl
push
mov
pop
mov
xchg
fistps
loopne
lahf
ret
sub
popa
call
mov
jb
rorb
jge
or
insb
pop
lahf
push
sbb
pop
pop
adc
mov
gs
out
jge
daa
xchg
out
jne
idiv
cmp
cmp
and
mov
mov
push
movsl
pop
dec
xchg
outsb
xchg
or
imull
fiadds
sbb
or
mov
in
jp
xchg
fcoml
cmp
nop
cli
inc
mov
jle
jne
xor
cs
sub
lock
add
xor
outsl
jbe
cmp
test
mov
push
xor
lea
pusha
sub
inc
addr16
hlt
cmpsl
ja
ret
gs
out
or
xor
ss
pop
ja
in
stos
jns
movsl
arpl
fst
dec
jae
mov
jno
and
movsl
leave
and
call
adc
or
and
sbb
arpl
mov
jp
jae
cmpsb
scas
mov
dec
xor
pop
mov
daa
or
ljmp
jl,pn
scas
adc
lret
or
iret
call
shll
fs
add
das
sub
push
sbb
adc
jnp
xlat
cmp
fstps
mov
sub
adc
js
xchg
xor
bnd
xor
inc
rolb
call
in
and
or
mov
pop
pushf
andl
inc
ret
pop
fnstenv
mov
xchg
cltd
jp
js
sbbb
or
xchg
add
xor
daa
scas
shrb
dec
arpl
xlat
sahf
mov
sbb
imul
lea
sub
ret
lahf
das
mov
inc
pop
mov
push
fcmovne
cmp
cmp
cmp
cld
mov
loop
rcrb
dec
outsb
iret
and
sub
adc
adc
mov
rcll
sahf
fldenv
sarl
int
and
ret
sub
push
cwtl
push
jb
pop
scas
push
movsl
outsl
mov
nop
push
fldenv
adc
mov
lret
lock
jmp
cmp
je
inc
xchg
adc
cmp
cmp
add
das
lods
mov
setl
neg
and
pushf
push
xorl
xchg
test
roll
xchg
mov
jmp
inc
dec
lahf
sub
repz
sbb
fyl2x
loop
pop
movsl
adc
sbb
jmp
pusha
sbb
test
mov
cs
mov
call
add
pop
mov
cmp
fdivl
or
sti
push
fisttps
dec
test
sbb
js
push
dec
in
movsb
imul
sub
pop
inc
ror
lret
ret
push
adc
negl
jo
jp
rolb
fcmovnbe
jo
add
imul
test
mov
dec
mov
mov
mov
lock
pop
frstor
push
bound
in
clc
mov
sbb
jae
pushf
sbb
add
sbb
sbb
pop
inc
adc
mov
cmp
pop
dec
fsub
int3
or
dec
cwtl
fnsave
sbb
popf
mov
xchg
push
shll
add
cmp
jp
arpl
xchg
fistpll
cld
das
ss
shl
lods
lcall
lea
test
pop
pusha
shlb
dec
aas
pop
stc
mov
push
add
andb
adc
inc
add
imul
cmp
pop
jno
mov
xor
arpl
in
inc
sub
adc
imul
or
mull
std
pop
addr16
shlb
fsubl
sub
xor
jmp
orl
gs
pop
loope
pop
mov
pop
inc
push
test
or
xchg
pop
inc
mov
xchg
cwtl
imul
ja
andb
dec
cs
loopne
es
sbb
jmp
ds
or
pop
icebp
push
in
es
imul
or
dec
arpl
xchg
std
into
dec
lods
inc
or
aam
pusha
scas
dec
out
outsb
roll
mov
dec
dec
mov
mov
test
lret
sti
sbb
arpl
repnz
aam
and
add
adc
cmpsb
cwtl
add
ret
and
mov
outsl
call
sub
mov
mov
pop
and
mov
sarl
push
repz
test
nop
pop
inc
or
mov
push
dec
ds
hlt
cmp
cmp
xor
pop
pop
loop
jne
shll
mov
adc
out
movsl
and
or
notl
xchg
and
add
cmpsb
jno
test
sbb
xor
in
rcrb
imulb
and
mov
fists
push
pop
jle
xchg
ja
and
cltd
loope
sbb
test
pop
inc
inc
sbb
xchg
adc
addr16
cmp
xchg
in
cmpsb
mov
dec
sub
mov
push
inc
pop
test
or
xchg
aam
add
imul
test
mov
mov
push
xchg
jbe
xor
inc
mov
add
into
cmp
pop
push
addr16
dec
mov
sahf
stos
aam
dec
adc
dec
arpl
ljmp
jle
test
daa
lcall
and
push
adc
jo
es
lds
xchg
pop
sbb
mov
xchg
or
xor
cmp
out
jle
fisttps
in
xor
push
fists
push
rep
std
push
out
or
lds
repnz
lret
pop
call
cs
sub
ret
cli
sbb
inc
cld
insb
xor
mov
fdivs
mov
jb
sub
jg
insl
adc
pop
sbb
filds
sbb
imul
add
or
loop
lcall
out
push
lcall
mov
inc
mov
lds
adc
mov
insl
jo
cmp
clc
adcb
loop
popf
stc
cmpsl
iret
or
jne
inc
fisubrs
sub
push
cmpl
dec
mov
push
xor
stos
adc
mov
mov
hlt
int
sbb
jno
inc
jae
scas
stos
popf
std
roll
jbe
roll
call
sub
es
lea
das
pop
lods
pop
jno
ret
push
daa
stos
mov
int3
mov
into
int3
cltd
and
bound
add
xchg
mov
icebp
push
inc
or
push
inc
pop
imul
xor
push
fimull
push
sbb
mov
adc
mov
pop
icebp
in
dec
sbb
mov
and
mov
or
cli
push
add
aaa
sbbl
pushw
dec
and
inc
icebp
push
push
ja
iret
test
dec
mov
push
mov
enter
mov
cmp
clc
jne
jnp
sbb
sub
adc
pop
lret
and
adc
cs
dec
test
mov
stos
dec
adc
jecxz
xor
mov
push
inc
int3
adc
lret
sbb
mov
pop
out
mov
mov
dec
jne
call
stos
ss
mov
sub
mov
mov
pusha
add
jle
pop
pop
fs
dec
xchg
pop
in
push
das
jae
out
sbb
inc
pop
add
cld
adc
shll
int
jle
xor
xor
jne
jb
scas
jmp
jo
dec
in
mov
lds
mov
test
andl
cld
push
add
icebp
pop
imul
or
pushf
nop
flds
cmp
xchg
jns
jne
frstor
xor
adc
sar
add
call
cwtl
cmpb
rclb
and
push
fcomi
adc
and
mov
test
mov
and
and
mov
out
insl
cmpsb
xchg
add
push
push
loope
std
outsb
sub
xchg
arpl
cmpsl
test
or
loop
fsubrs
sub
jns
push
cmpsb
xorl
add
and
cwtl
aas
adc
xor
icebp
cld
je
ja
jne
mov
xor
mov
cli
push
loopne
cwtl
out
scas
mov
sbb
add
cmpb
adc
mov
mov
inc
push
bound
cmp
push
movsl
data16
pop
xor
shll
cmp
jno
and
and
ljmp
inc
aad
scas
mov
inc
sbbb
pop
dec
pop
sub
enter
fiaddl
mov
hlt
push
adcl
lahf
iret
xchg
push
outsb
dec
dec
in
rcr
cwtl
imul
jne
dec
sbb
insb
push
xchg
sar
aas
or
pop
jg
xchg
lds
xchg
xor
inc
out
std
enter
stos
sar
inc
inc
pusha
mov
outsl
sarl
scas
jno
lahf
repnz
ret
icebp
cmp
dec
jle
adc
ja
mov
jg
mov
faddl
xor
push
aas
dec
inc
sar
or
mov
push
test
icebp
fnsave
aaa
sbb
ret
mov
loope
push
cs
jecxz
aam
insl
mov
xchg
add
pop
int
sahf
adc
mov
cwtl
push
lods
or
mov
cmpsl
pop
mov
or
pop
mov
shrl
adc
pop
cwtl
mov
add
adc
mov
adc
xor
lcall
mov
js
and
pusha
dec
dec
sub
inc
inc
sub
sbb
pop
cmc
cmpsb
ljmp
xlat
jb
js
jbe
test
jecxz
icebp
add
mov
dec
or
pop
sub
inc
aaa
jecxz
movsb
scas
jae
dec
in
rcl
cli
cmpsl
xor
inc
shll
xor
xchg
ljmp
adc
jge
or
push
pop
out
loopne
outsb
mov
lcall
inc
dec
mov
push
push
movsl
out
pushf
into
and
jnp
inc
pop
pop
sub
in
lds
push
jmp
mov
stos
jns
test
into
add
sub
inc
scas
in
outsl
push
repnz
or
fidivs
ficomps
and
push
fwait
pop
jne
mov
jbe
dec
mull
and
push
jl
sub
push
filds
insl
mov
mov
add
jns
icebp
mov
daa
jge
add
movl
mov
shll
mov
sbbb
sbbl
addr16
sub
inc
mov
loope
int3
adcl
pop
xor
pop
sti
fmull
ss
std
pop
xchg
xchg
out
cld
sub
scas
movsl
add
pop
mov
das
loope
bound
std
ret
insb
ljmp
leave
sbb
adc
fisubl
out
cmp
arpl
sbb
jp
cli
inc
loop
push
dec
mov
daa
cli
mov
sub
pop
int3
les
ja
ss
dec
in
fcmovnu
out
lock
insl
test
insb
fidivs
dec
movsb
xchg
nop
repz
hlt
sub
out
mov
xor
mov
and
lods
jnp
or
mov
push
call
mov
loopne
xchg
cmp
out
cmpsl
mov
iret
fmuls
negl
jns
xor
sti
cmp
sti
mov
out
xor
and
jl
movsb
out
sub
jl
lret
and
fwait
adcl
and
and
or
and
dec
push
add
xchg
lcall
mov
and
push
jae
adcl
rorb
movsb
mov
rclb
insl
inc
testl
mov
sbb
js
sbb
add
outsb
lock
dec
sub
add
test
push
pop
fcompl
sub
cmpsl
out
sbb
andl
dec
repz
and
inc
or
jne
jl
adc
pop
and
out
rolb
neg
int3
negl
movsb
mov
adc
jecxz
or
fsub
std
jle
in
mov
arpl
je
sub
int3
aam
repnz
rcrl
xchg
xchg
push
hlt
mov
cli
cmp
in
mov
cmp
mov
jns
aad
jmp
jp
jp
mov
sbb
std
sub
push
es
daa
sub
lods
push
xor
mov
sbb
cmp
cmp
cld
adcb
dec
imul
rorl
rcrl
nop
mov
pusha
jns
clc
sub
mov
xchg
fdivrl
fidivrs
sbb
xor
jbe
data16
int3
cmp
nop
jb
mov
fstl
xchg
xchg
jge
xchg
test
clc
repz
pop
adc
sbb
and
sbb
lods
pop
xchg
fdivrl
mov
xchg
dec
sub
arpl
xchg
xchg
sbb
mov
pop
decl
dec
data16
icebp
and
pusha
lret
call
stc
xlat
fiaddl
and
xchg
popl
add
xor
and
pop
or
add
outsb
shll
pop
repz
aad
leave
leave
xchg
out
xor
jb
or
mov
sbb
push
mov
add
xor
sub
jne
xchg
cmp
cmp
cltd
push
gs
mov
loopw
mov
test
xchg
sbb
cmp
movsb
dec
das
insl
lods
lods
lds
repnz
jecxz
popa
adc
xchg
scas
test
or
inc
cwtl
jmp
add
rcll
call
sub
int
call
jp
fnstenv
sbb
and
in
imul
insb
out
std
sub
push
push
sarl
pop
push
dec
ret
or
xchg
cmp
out
xor
sub
rclb
lret
outsb
subl
aad
mov
fwait
add
inc
fs
and
test
xchg
ljmp
mov
test
mov
loopne
xchg
add
pop
or
shl
xchg
arpl
int3
incl
cmp
xlat
movsl
sub
sbb
sub
mov
jge
add
add
sub
popa
jbe
shlb
enter
lcall
ljmp
sbb
push
mov
xchg
xor
mov
hlt
pushw
lret
daa
std
pop
sub
cmp
aam
add
adc
sbb
or
mov
fucompp
pop
pop
pop
int3
xchg
xor
jb
jb
jl
xchg
pusha
pop
mov
cmp
dec
sbbl
jo
pop
push
mov
mov
dec
push
push
mov
mov
test
add
pop
mov
dec
imul
jae
ret
jns
out
mov
sub
push
or
inc
lret
mov
outsl
jecxz
xor
jecxz
popa
jnp
mov
aad
cmp
mov
aaa
cmp
inc
jecxz
sub
out
dec
mov
pop
movb
outsb
sub
movsb
mov
mov
ret
fsubl
pusha
sub
ret
and
std
inc
out
push
cmp
int
lret
repnz
mov
sarb
sbb
das
pop
lret
mov
xor
int
mov
hlt
ljmp
data16
and
sbb
pop
pop
mov
ret
jbe
aad
int
and
dec
jbe
into
nop
test
cmp
push
jmp
inc
popf
aaa
outsl
mov
adc
je
xlat
ja
push
js
mov
cli
mov
inc
nop
inc
cmpsl
nop
out
push
aaa
cwtl
lods
iret
mov
outsl
xchg
push
push
inc
repnz
jmp
jmp
aaa
xor
adc
jp
popf
adc
dec
int3
out
mov
xor
jnp
mov
adcb
pop
in
push
inc
into
std
pop
or
push
outsl
idiv
xchg
mov
xchg
sbb
mov
movsb
arpl
ja
mov
push
shll
xor
arpl
mov
pop
mov
hlt
in
xchg
cmpsl
and
mov
mov
stc
mov
sub
mov
mov
mov
mov
jle
mov
mov
cmc
cmp
arpl
jl
cmp
xchg
ljmp
fidivs
sub
sub
sbb
sub
gs
push
imul
and
imul
pushl
aaa
in
stos
popf
inc
jo
mov
mov
loop
mov
mov
cmp
add
push
test
fxam
jo
test
lock
iret
and
lret
sbb
mov
popf
rcrb
push
cmp
out
imul
dec
jge
dec
push
pusha
filds
pop
sub
scas
pop
aaa
push
xchg
inc
ror
push
std
movb
push
cmc
sub
test
out
rorb
sahf
sub
iret
shll
movsb
lcall
int3
scas
mov
mov
aaa
inc
pop
push
repnz
rclb
jge
push
in
or
jae
psrld
rorb
loop
ds
push
sub
ret
sub
push
fcoml
cld
add
packsswb
adc
dec
bound
popf
push
adc
outsl
in
mov
lret
popa
repnz
cwtl
sbb
jge
fcmovnbe
or
xor
pushf
movsl
lret
mov
sub
bound
push
mov
fs
xor
jmp
xlat
in
push
lret
stos
test
popa
lcall
mov
push
inc
jae
enter
or
mov
and
dec
pop
stc
xor
mov
sbb
or
push
mov
notb
push
fldcw
xchg
jno
mov
xchg
lcall
sub
sub
or
xor
add
stc
popf
cmp
inc
add
popa
sub
adc
adc
lcall
in
leave
hlt
std
ss
cmc
pop
pop
cmp
sbb
in
mov
mov
aaa
bound
fildl
sarl
jb
mov
stos
sub
fwait
push
stos
lock
xor
into
pushf
scas
and
mov
cmp
lods
aaa
out
aad
or
in
sub
sahf
test
cmpsl
notl
fwait
shr
cmp
mov
pop
fdivs
aad
cwtl
adc
in
mov
leave
std
jo
test
out
cli
rclb
out
lods
inc
movsb
lods
js
int
popf
push
loopne
rclb
loope
movsb
mov
stc
int
push
dec
lahf
and
cltd
into
imul
mov
mov
pushf
or
dec
sub
jge
xchg
testb
cmp
mov
rcll
clc
jge
dec
jo
ljmp
adc
sub
xchg
in
movsb
jb
in
cwtl
xchg
cmp
stc
dec
or
int3
xor
inc
or
loopne
cmp
fistl
xchg
sbb
push
pop
lcall
pop
das
test
ss
in
jo
dec
push
push
jae
in
pop
lcall
inc
jle
mov
xor
sbb
pop
cs
mov
fbstp
push
loopne
cmp
js
dec
dec
aas
mov
mov
pop
arpl
or
mov
jl
push
aam
mov
push
adc
movsl
je
in
and
cmp
xor
mov
ds
or
mov
scas
inc
aad
dec
fdivr
dec
mov
jbe
insb
mov
mov
in
fldl
ret
sub
pop
xchg
adcb
sti
lcall
pop
addr16
jl
outsb
cmpsl
leave
imul
push
sub
or
movb
icebp
fdivrs
adc
xchg
xchg
adc
sub
cmp
aam
mov
lods
mov
pop
ror
mov
stc
pop
loop
jo
into
ficoml
xchg
inc
mov
inc
mov
shlb
add
dec
mov
fmul
js
cltd
sbb
xchg
imul
ja
adc
hlt
arpl
mov
aaa
push
test
sti
and
mov
aas
stos
push
add
dec
in
jno
je
cmp
lods
push
out
jl
jle
repnz
mov
rcrb
pop
add
je
test
into
bound
fsubrs
loop
cmpsb
je
test
outsl
insl
pop
lods
sub
das
cltd
cld
imul
les
cli
jae
iret
add
xchg
bound
pop
mov
xor
inc
cwtl
out
or
scas
inc
int
inc
mov
shrb
lock
jmp
mov
stos
and
es
in
push
bound
aas
cmp
outsb
xchg
out
scas
pushf
adc
lcall
rorb
mov
sbb
mov
jo
dec
xor
repz
xchg
popa
mov
mov
mov
mov
jbe
or
aam
fwait
and
leave
cmp
es
aaa
ljmp
out
repz
movsl
lock
sub
and
std
mov
xchg
sbb
add
ja
dec
ja
shlb
loop
and
loop
cmp
push
test
sub
push
mov
mov
inc
mov
add
cld
js
mov
jbe
in
out
and
jb
pop
in
push
push
cmp
loope
int3
lret
push
push
push
sbb
mov
ja
mov
in
and
sbb
pushf
push
push
push
xor
arpl
or
sub
arpl
jmp
divb
in
out
popf
pop
add
xchg
or
xchg
clc
pop
sub
scas
jno
push
add
dec
add
adc
out
iret
cmpsl
and
mov
or
mov
dec
xorb
lds
xchg
sbb
es
aas
and
mov
in
lods
ss
stc
mov
outsb
mov
add
inc
rol
sub
inc
sbb
ljmp
bnd
xor
sarb
mov
sbb
inc
les
scas
xlat
jmp
pop
aad
sub
ror
dec
sarb
push
adc
mov
mov
pushf
ljmp
incb
icebp
mov
mov
arpl
lods
push
leave
push
movsb
jge
fucomip
xor
fistps
bound
mov
adc
imul
insl
insb
ret
adcl
fiaddl
call
or
sub
xor
xchg
push
rcr
add
xchg
sub
jne
mov
cltd
std
and
inc
movsl
adc
xchg
test
fmul
ficoms
cmc
jo
pop
outsl
int3
insl
int3
jne
jp
mov
lahf
jge
pop
test
je
repz
pop
test
dec
cltd
fs
into
cmpsl
dec
mov
mov
ja
xchg
loope
sbb
sub
stc
lock
jns
mov
mov
inc
inc
aad
dec
dec
lcall
jo
js
fwait
adc
xchg
xor
insl
je
shrl
or
stos
das
imul
jne
dec
in
shll
cmp
insb
cltd
inc
jae
pop
cs
and
or
lret
lcall
or
mov
xchg
mov
jb
inc
sbb
psllq
cmp
lock
lods
fidivs
rolb
push
hlt
pop
or
dec
pop
lods
mov
xor
jge
sbb
clc
icebp
adc
dec
cmp
in
orb
or
xor
and
add
jo
xor
icebp
dec
popf
inc
mov
insb
je
mov
add
adc
push
nop
add
jp
data16
push
xchg
add
scas
mov
push
dec
sbb
push
rcrl
enter
or
aam
jg
pushf
cmp
movsl
mov
pop
out
jbe
adc
mov
push
lahf
ss
mov
pop
mov
inc
ljmp
cmp
or
imul
fs
inc
sbb
sbb
mov
or
bound
outsb
addr16
rcrl
in
rcrl
stos
push
repz
movsb
xchg
mov
pop
or
lods
xor
sub
out
mov
mov
and
push
out
lea
popa
rcll
testl
shrl
pop
sbb
sub
scas
ss
outsb
call
pop
pop
xchg
sub
mov
cwtl
sub
inc
xlat
adc
jmp
iret
ret
sub
push
xorb
push
mov
fcompl
sarl
psubw
in
cmpsb
addr16
nop
sub
sub
nop
sub
cmp
jg
xor
push
imul
les
push
ljmp
push
lcall
cld
js
dec
and
clc
push
js
xor
call
mov
adc
movsl
pop
mov
cld
outsb
fisubrl
inc
insb
bound
out
fimull
mov
int3
loop
rcll
jmp
jno
fisttps
enter
and
in
sbb
mov
push
lret
mov
out
and
out
cli
loope
addb
mov
add
fisubs
or
mov
cmpl
pop
dec
push
scas
lods
mov
loope
sti
dec
mov
cmpl
adcb
cmpsb
in
jae
out
in
loopne
lahf
outsl
pushf
ja
call
sbb
repz
pop
xchg
fldcw
push
dec
sar
mov
ss
daa
jne
or
aas
mov
pop
adc
xchg
and
push
sub
inc
test
push
hlt
dec
sbb
add
stc
scas
push
nop
sarb
loop
ret
jge
xchg
lea
fnsave
pop
mov
cmp
cmc
in
mov
in
mov
inc
mov
mov
imul
xlat
xchg
inc
push
loop
inc
pop
jne
cltd
mov
adc
pop
in
test
mov
inc
xchg
push
divl
js
jns
rcl
idivl
lods
in
push
inc
jmp
adc
sbb
loop
popf
mov
cld
in
pop
sub
or
mov
movsl
lods
call
mov
mov
cmp
loop
xor
stos
dec
add
or
jo
inc
push
in
xchg
inc
stc
ljmp
outsl
cmp
jb
mov
mov
test
and
jns
cmpsb
in
out
test
out
mov
cmp
push
loope
leave
jne
test
fidivs
movsl
mov
push
sahf
mov
xor
sahf
jne
outsl
out
or
xchg
insl
xor
pop
mov
push
outsb
dec
adc
jbe
mov
lret
pop
add
test
pop
clc
push
pop
pop
insb
add
adc
dec
cmp
or
imul
out
int
xchg
inc
lret
imul
cmpsl
inc
xchg
adc
fistpl
and
xchg
call
sub
stos
jg
lock
add
sbb
mov
jb
cmp
hlt
xchg
pop
sub
xlat
push
leave
test
inc
fwait
stc
sbbl
leave
xor
jle
aas
adc
fcmovbe
adc
add
mov
dec
int
push
push
mov
into
in
sar
int3
push
adc
jno
inc
mov
dec
and
xor
sbb
sub
push
jo
mov
xchg
pusha
setae
inc
inc
xchg
ret
jecxz
adc
dec
scas
adc
jns
or
stos
stos
fidivrl
sub
or
or
mov
mov
lcall
lret
mov
out
sar
or
or
mov
sbb
scas
adc
lcall
jl
mov
cwtl
sub
dec
add
scas
enter
in
ds
mov
xchg
lea
push
rcrl
pop
fldl
ljmp
ret
and
cmp
inc
add
mov
loop
pop
adc
sti
fmull
and
test
sbb
pop
pop
in
aam
fcmovb
out
mov
stos
push
scas
mov
aam
aaa
or
push
insb
cli
mov
xor
popf
ja
dec
decl
sub
sbbl
xchg
loopne
mov
cwtl
and
outsl
imul
pop
pop
add
dec
fwait
sub
mov
mov
loopne
std
cmp
or
incl
xor
mov
mov
adc
das
adc
mov
mov
jmp
push
arpl
cwtl
cmp
jo
pop
std
jne
sub
push
pop
jae
out
out
xchg
les
inc
push
mov
in
inc
adc
pop
loopne
inc
stos
pop
pop
adcb
mov
sub
inc
pop
aam
loop
adc
dec
jle
aad
fs
sub
xor
push
aad
and
inc
xchg
mov
push
inc
mov
nop
sub
sarl
int
add
push
outsb
and
hlt
scas
bound
int
pop
xchg
sub
mov
sub
pop
sub
outsl
movsb
jp
adc
int
and
sti
ds
scas
lods
push
mov
andb
pop
mov
out
xchg
lret
fs
iret
mov
mov
xor
popf
es
or
test
sbb
icebp
cmp
add
or
dec
or
repnz
sbb
and
xchg
jmp
mov
in
lcall
stos
ds
fwait
data16
aad
inc
hlt
cmc
mov
jo
mov
push
push
mov
test
xchg
push
pushf
jp
dec
lods
mov
cmpb
jne
ror
pop
stc
mov
cmpsl
xchg
outsl
jnp
mov
iret
and
test
xor
push
aaa
xor
lds
or
jno
scas
mov
sbb
or
push
aad
sbb
mov
jb
adc
cmpsl
pop
inc
jmp
stos
rorl
mov
jne
and
out
aad
pop
jle
jge
shll
inc
jmp
inc
out
subl
jns
cmp
sbb
sub
push
mov
and
sub
popf
or
xchg
les
test
test
mov
test
inc
jae
scas
sbb
jge
ret
mov
cs
xchg
xor
ror
imul
push
daa
sub
or
pusha
mov
dec
ljmp
push
cmpsl
sub
push
mov
cmp
jno,pt
insl
or
pop
mov
xor
inc
cmpsb
mov
sbb
cmp
in
mov
pop
iret
in
aas
in
dec
xor
int3
jbe
sar
cli
mov
dec
mov
je
add
lcall
sbb
lods
notb
mov
imul
fldl
inc
mov
popa
push
adc
xor
inc
leave
in
xchg
mov
jg
and
mov
or
cwtl
dec
fiadds
sti
dec
fldcw
xor
fadds
shl
or
jp
mov
dec
ds
sbb
ds
push
mov
push
xchg
dec
subb
push
fidivl
stos
sbb
jne
fisubrs
jae
in
subb
xchg
xor
cmpsl
aam
lea
icebp
cmp
jno
test
aas
inc
inc
sbb
push
cmpsb
pop
in
add
jb
imul
pop
int3
mov
sarl
test
lea
movsl
xor
and
jmp
xor
jecxz
dec
fsub
cmpb
cmpsl
icebp
lock
sbb
ja
ljmp
rorb
fsubrl
outsb
mov
fsubl
jmp
ja
or
mov
dec
add
push
movsb
ret
mov
aas
sub
and
or
mov
rep
jge
clc
adc
sbb
stos
fisttpl
xchg
dec
roll
sbb
clc
stc
sub
shll
loop
pop
verw
dec
out
jns
daa
in
or
psadbw
xor
inc
push
pop
cwtl
jae
adc
pop
dec
lods
sti
in
out
cwtl
cmp
out
roll
mul
mov
repz
mov
mov
rcrb
jmp
xor
mov
stc
adc
mov
mov
push
xlat
adc
sub
jecxz
dec
or
test
pusha
fbstp
mov
sub
pop
mov
popa
sub
es
in
aam
push
mov
mov
adc
push
xchg
push
or
dec
mov
cmc
mov
adc
ja
sub
cmp
into
enter
push
leave
push
aad
jl,pn
ret
sbb
mov
out
xlat
in
push
test
pusha
or
lock
cli
push
int
bound
jno
lret
test
jl
sub
and
shrl
dec
pusha
aas
inc
and
mov
popa
stos
mov
in
fisttpll
std
sbb
add
sarb
negb
cmpb
sahf
mov
mov
add
adc
push
add
call
mov
cmpsb
xchg
push
test
sub
in
xchg
test
insb
lahf
mov
andb
add
mov
cmpsb
ret
pop
movsl
cmp
dec
pop
push
xchg
push
jge
ljmp
lahf
ljmp
push
sahf
jo
in
dec
ja
movsb
imul
mov
push
je
stos
nop
addb
fiadds
icebp
jne
cld
shll
jo
lea
cmp
stos
mov
lods
loopne
xor
cmp
xchg
ja
insl
sahf
xchg
pop
std
shrl
insl
push
pop
or
xor
jns
sub
mov
pop
xor
out
rcrl
sti
xchg
jb
scas
pushf
outsl
mov
lock
bound
adc
sbb
xchg
push
in
cmc
jp
movsl
pop
or
adc
sbb
mov
lsl
pop
dec
popf
push
inc
ljmp
iret
rcl
lahf
and
push
mov
insl
in
cmp
xchg
pop
outsb
data16
mov
xchg
out
cmp
insb
jne
gs
push
and
jl
loope
or
mov
sub
jno
mov
push
std
xor
pushf
sti
or
ja
aas
mov
scas
cmpsb
xor
jo
or
shlb
and
push
icebp
xchg
sub
mov
mov
in
sub
imul
in
jmp
fdivs
dec
repz
pop
xor
jae
xchg
inc
xchg
mov
mov
add
loope
xor
test
jae
testl
in
mov
or
repnz
cltd
repz
adc
cmp
mov
mov
sysexit
outsl
dec
test
sub
mov
push
je
fcmovbe
mov
imul
sbb
sarl
jg
push
mov
push
lcall
je
pop
outsb
sub
ljmp
fs
xor
mull
insl
inc
leave
inc
stos
xor
enter
xorl
movsb
jno
cmp
es
aas
or
std
movsb
fwait
scas
stos
gs
outsb
shll
ja
fstpt
push
add
jp
and
pop
pushf
nop
nop
call
mov
sbb
pop
push
sbb
rolb
xchg
pop
pop
pop
ss
mov
bound
je
xor
lods
mov
jns
cmp
fstpt
jl
push
lods
ja
inc
jmp
mov
jo
fcomp
add
xchg
cmp
cmpsb
andl
je
xchg
mov
xor
fdivrl
call
mov
ficomps
pop
mov
or
push
sub
jne
mull
insl
sub
test
arpl
test
insb
hlt
fsubrs
mov
mov
pop
sub
js
ljmp
sti
xor
mov
es
jle
out
mov
adc
mov
push
test
pop
mov
rclb
jb
iret
cmp
aad
xor
pusha
cmpsb
mov
jbe
subl
add
push
pop
fdivr
enter
sarl
mov
add
sbb
inc
cmp
mov
jnp
ret
dec
aam
xchg
mov
lahf
push
fidivrs
mov
leave
test
addr16
jne
movsb
rolb
movsl
mov
sti
aam
mov
jge
repz
sahf
outsb
push
mov
arpl
cmp
push
and
cmp
jmp
and
es
cmpl
sarl
xlat
xchg
imul
daa
sbb
incl
add
or
push
cmp
xorb
insb
stos
jge
es
rcrl
iret
add
sub
ss
insb
push
data16
push
rcrb
dec
js
xor
push
in
stc
dec
fcmovbe
mov
mov
gs
cmp
add
sub
jle
xchg
mov
adc
sub
fstps
xchg
lcall
loopne
push
sahf
inc
shll
js
sbb
add
loopne
lahf
push
lock
adc
xchg
loop
add
aaa
xchg
outsb
lea
adc
out
out
pop
dec
bound
or
scas
insl
decb
je
sbb
adc
cmpsb
pop
push
test
mov
aam
jmp
cli
xor
fistps
cs
shrd
test
lock
ret
mov
and
push
aas
in
or
repnz
ljmp
adc
cmp
push
in
xlat
lods
dec
push
int
mov
fistl
loopne
adc
and
lahf
shrb
xor
je
jg
sbb
pop
mov
in
push
mov
pop
jmp
andb
xor
mov
mov
fcomip
scas
pop
arpl
pop
cmp
add
pusha
sti
sub
testl
mov
mov
sbb
sbb
dec
aad
xchg
sbb
push
inc
into
inc
dec
scas
pop
adc
or
aad
imul
push
add
icebp
inc
and
out
rorl
mov
idivl
mov
jbe
adcb
xchg
add
clc
push
pop
aaa
sbb
xchg
popa
mov
adc
fwait
or
xor
xchg
sbb
enter
cmp
cwtl
aas
loop
add
xlat
sub
pop
outsb
xchg
int
xchg
jo
call
inc
push
popa
movntq
in
xchg
out
lds
ja
cmpsl
dec
mov
cmp
sbb
jmp
fistpll
push
loope
shl
mov
bound
outsb
add
cli
jno
mov
sarb
hlt
jp
pop
fcoms
sub
or
out
je
or
add
inc
sti
jg
scas
sbb
jo
mov
cmpsb
cli
jl
in
inc
mov
pop
sti
cs
int3
xor
fistpll
sbb
xchg
sbb
xlat
adc
pop
sub
inc
aas
movsb
jl
xorl
sbb
out
imul
daa
sti
jl
push
mov
add
xchg
repnz
xor
ljmp
loope
sbb
cmp
and
cmp
sub
mov
jo
aam
xchg
mov
les
inc
sbb
adc
or
pop
and
in
cs
jo
dec
retw
pop
inc
pop
xchg
in
shl
pop
pop
mov
sahf
ds
jmp
and
inc
lahf
jne
cmpsl
push
movsb
loop
or
cmpb
pop
loop
loope
cs
jle
or
mov
xorb
out
and
movsl
sub
or
cwtl
test
negl
jmp
pop
pop
or
or
mov
into
add
jo
dec
test
ficompl
imul
adc
cld
daa
cwtl
or
outsb
repnz
lret
inc
outsl
mov
lock
lret
iret
test
lcall
int3
xchg
mov
sbbl
out
into
cmp
je
xchg
icebp
cmp
xor
fistpll
or
or
jne
or
lret
in
mov
and
push
roll
clc
ret
or
jnp
pop
pop
adc
push
lahf
lea
out
fwait
in
jns
inc
cmp
mov
stc
mov
dec
repnz
xchg
adc
mov
mov
in
mov
sarb
fmul
outsl
testb
mov
out
inc
dec
jnp
in
jle
jge
aaa
sahf
into
inc
lret
pop
or
mov
dec
or
or
enter
dec
lcall
inc
enter
inc
aaa
jb
add
bound
aaa
sub
jl
cli
aas
iret
inc
sub
xchg
repz
add
pop
lea
jp
push
mov
or
inc
mov
dec
and
lcall
pop
or
cmpsl
xor
xorb
les
fmull
add
sub
fwait
push
mov
movsb
out
cmp
sti
mov
pusha
jne
loopne
push
adc
xor
sub
imul
xor
mov
add
mov
imul
mov
in
outsl
sbb
xchg
fcmovnu
mov
push
sbb
inc
cmc
push
scas
inc
movsl
lea
enter
xstore-rng
cmpsl
pop
lcall
mov
enter
mov
dec
add
push
xor
shl
cld
out
ja
xchg
pop
dec
in
lret
lret
mov
push
cmpsl
cmp
loop
mov
jbe
outsb
cmp
xchg
loop
pop
hlt
mov
iret
sbb
inc
cs
jns
push
push
push
stos
std
lock
cmp
add
imul
lods
pop
mov
mov
dec
iret
mov
stos
mov
xchg
mov
outsb
insb
inc
inc
mov
outsl
out
pop
sub
fidivrs
mov
das
lock
xchg
out
xor
dec
mov
pop
adc
cmp
dec
or
outsl
adc
loope
out
inc
mov
fldl
pop
stos
icebp
in
stos
push
aas
cs
cmp
add
xchg
jo
and
clc
data16
push
ds
and
cmp
in
js
jne
mov
and
add
dec
mov
insb
adc
nopl
mov
ljmp
xchg
popf
adc
cld
jmp
loope
insl
out
test
lret
sub
push
jno
scas
push
cltd
jmp
cmc
and
xchg
or
scas
cmpsb
push
jp
std
pop
lds
and
fstpt
dec
lahf
pop
inc
push
jl
push
add
dec
xor
xor
cmp
mov
pop
ret
daa
aad
mov
mov
fwait
xor
orl
loop
adc
shrb
jne
insl
jns
shrb
xlat
push
fstpl
cwtl
jns
jmp
loopne
movsl
push
stos
pop
ficompl
dec
adc
xchg
fdivs
and
xor
mov
or
lahf
push
jl
jge
jmp
in
fadds
sub
lret
add
inc
mov
ret
cmpsl
das
push
insb
xorb
mov
mov
cmp
jle
mov
and
push
xchg
ds
cmp
outsl
xchg
jne
bound
arpl
jge
xchg
sbb
les
mov
leave
push
stos
xorl
fmul
popf
pop
jnp
xchg
or
iret
ds
fwait
inc
push
daa
arpl
ds
mov
cmp
pop
hlt
adc
clc
jecxz
stos
lcall
lods
adc
sahf
jl
xchg
add
jge
pop
jnp
dec
or
rol
or
jnp
ret
scas
push
xchg
outsl
cs
in
or
cmpl
mov
cltd
push
es
cwtl
xchg
sub
push
mov
xsaveopt
js
or
movsb
adc
sbb
repz
loop
aam
fsubrs
sub
out
push
push
ljmp
jae
stc
adc
stc
inc
arpl
mov
je
jmp
jno
add
jl
ss
dec
fstpl
jbe
dec
js
push
out
sbb
pop
sbb
sub
jae
dec
pop
aad
mov
mov
dec
subb
xchg
cmp
mov
cmc
les
scas
repz
icebp
fldl
sub
inc
shll
mov
mov
sbb
call
xor
mov
xchg
mov
insl
pop
sub
and
jl
mov
inc
out
pop
add
int3
inc
mov
xchg
out
pop
jo
daa
gs
test
inc
bound
js
jl
mov
push
incb
xor
sti
mov
sahf
jecxz
xlat
add
pop
pop
push
scas
fs
push
icebp
idivb
and
daa
sbb
imul
push
mov
mov
shrl
mov
fcoml
fsubl
lret
notl
sub
or
dec
push
sub
outsl
sbb
dec
xchg
push
or
test
lods
mov
jne
xchg
es
inc
int
fbstp
push
or
fimuls
dec
and
leave
cmp
loopne
leave
cs
pushf
insl
mov
mov
pop
es
rcrl
or
push
sub
ja
lods
loope
xor
add
xchg
and
push
xlat
inc
push
jp,pt
popa
xchg
lock
adc
loope
mov
jnp
push
rorb
sbb
bound
bound
mov
cmp
pushf
fs
or
pop
enter
and
inc
dec
in
cmp
jno
adc
add
mov
ficoml
inc
das
inc
mov
jmp
sbb
sbb
ret
push
inc
push
fldcw
mov
pushf
jb
cld
push
enter
mov
insb
in
loope,pn
mov
mov
mov
repz
je
cmp
inc
pop
sbb
inc
mov
xchg
ficomps
jae
pop
test
enter
or
cmp
mov
pop
jne
lahf
sti
add
mov
je
mov
lret
jmp
clc
popf
lcall
in
mov
mov
fwait
rcll
push
or
pop
mov
out
adc
call
lret
push
rcll
push
jmp
xchg
outsb
push
jno
cmp
jo
pop
sbb
daa
dec
sbb
xchg
arpl
iret
xchg
dec
fdiv
push
cmpsb
add
mov
call
push
push
push
cmc
xchg
add
jge
sbb
shl
fwait
stc
dec
aad
cli
xchg
pop
das
outsb
testb
adc
lret
aaa
xchg
test
jo
in
push
add
dec
inc
shl
or
inc
cli
lret
xchg
push
subb
notb
xchg
pop
sahf
push
dec
mov
sub
inc
adc
add
insb
sti
adc
stos
lcall
les
dec
mov
pushf
add
jge
mov
mov
xor
push
ljmp
shll
dec
sbb
inc
adc
test
xor
and
int
sub
imul
outsl
cmp
jne
ds
and
xabort
lcall
cld
in
mov
sahf
out
fs
jecxz
xchg
cmc
cld
dec
cmp
xchg
jb
int3
sti
rolb
sub
mov
xchg
xchg
ss
cmpsl
mov
pop
xor
data16
out
ret
inc
or
stos
mov
add
loop
movq
cli
push
fisttpll
outsl
in
jbe
push
jbe
pop
mov
loop
pusha
xchg
jmp
mov
repnz
xor
stos
daa
add
repz
sti
dec
incl
ret
mov
dec
fimuls
mov
ds
adc
stc
daa
pop
mov
in
fcoml
sbb
ljmp
test
sub
mov
outsb
lea
ss
jle
and
enter
sub
xchg
jge
xchg
es
pop
pop
mov
gs
fwait
mov
adc
in
xchg
push
call
test
add
xchg
adc
mov
push
iret
popa
lods
enter
add
jns
push
or
loopne
popf
push
sub
adc
shl
inc
push
add
repnz
adc
fmull
mov
mov
jge
enter
xor
add
pop
ljmp
pushf
inc
not
loope
lods
mov
scas
imul
flds
dec
mov
sbb
ss
std
aam
jle
mov
sarb
or
loope
scas
ljmp
inc
add
xchg
mov
out
jno
js
insl
js
jne
decl
test
jnp
xchg
mull
scas
aam
movsb
into
xor
sub
cmp
lcall
pop
xlat
mov
jge
mov
addb
ljmp
sub
inc
addw
or
inc
sbb
test
push
iret
mov
inc
inc
out
int
push
cmp
scas
sbb
out
test
inc
xor
dec
xor
cli
mov
sti
cmpb
fsubs
loopne
les
pop
roll
jg
dec
lcall
xchg
rcll
xchg
and
add
mov
pop
mov
inc
out
jecxz
outsl
adc
into
xchg
jecxz
in
ret
adc
sub
jecxz
add
xchg
sti
pop
or
jl
repz
pop
inc
jmp
movsb
and
movsb
lea
stos
jae
mov
xchg
rorb
jmp
stos
movsl
in
popf
lock
jbe
ljmp
fcmovnu
pop
out
pop
loope
xchg
and
movsl
pop
test
sbb
xchg
lods
push
pop
xchg
mov
gs
push
or
jno
or
xor
iret
test
clc
lds
pushf
shll
jns
ficompl
sub
test
cmp
outsl
add
adc
pop
mov
rorb
imul
cmpsl
std
cmp
xchg
clc
lods
jno
nop
xchg
imul
pop
scas
pop
out
and
dec
inc
repz
call
mov
add
sbb
ljmp
test
lahf
sub
loope
fwait
xchg
cmp
mov
and
cmp
shll
mov
dec
xchg
loop
inc
subb
adcl
lods
push
jmp
dec
and
add
std
stos
popf
cmp
dec
fldl
xor
inc
jmp
shl
and
rcrl
ret
mov
lds
mov
mov
xchg
xor
jnp
jg
icebp
out
and
pushf
cmp
stos
mov
das
xlat
imul
ljmp
push
cltd
neg
dec
lcall
or
out
push
sbb
shlb
dec
mov
sub
adc
lds
popa
push
cmp
je
sbb
mov
pushf
lods
xchg
gs
xchg
xchg
aam
pop
hlt
rcl
pop
shll
mov
fnstsw
jl
jb
add
movl
pop
mov
aam
inc
mov
std
add
in
scas
sti
mov
out
mov
jl
push
sub
and
jno
xlat
lods
cmpl
cwtl
add
into
into
pop
sbb
shlb
pop
lods
ficoms
rolb
xor
adc
sbb
mov
std
insl
add
cmp
adc
push
in
xor
loopne
and
push
xor
mov
push
hlt
ret
xor
popa
sarb
ret
popf
fwait
xor
fidivrs
iret
mov
ffreep
or
push
mov
sub
ret
xlat
sbb
xchg
push
scas
fidivl
fwait
pop
pop
je
scas
hlt
mov
mov
mov
lds
pusha
mov
mov
jge
add
mov
das
lret
mov
outsl
outsb
movsl
aad
rcl
jecxz
inc
or
pop
xchg
mov
fsts
push
push
scas
stos
mov
test
mov
inc
xchg
mov
mov
iret
cmpsl
ss
neg
out
aad
lea
and
mov
pop
mov
mov
sub
dec
xchg
inc
adc
fcompl
jmp
mov
mov
mov
dec
or
mov
inc
xor
add
ljmp
inc
xor
cmp
xorl
ds
lods
push
jo
ja
mov
jmp
idivl
sbb
mov
cmp
ds
fs
cmp
dec
movsb
cli
lods
pop
pop
fimuls
shrl
and
cwtl
add
dec
pusha
mov
icebp
xor
mov
in
cmc
js
cmp
push
pop
mov
xchg
test
mov
pop
scas
pop
mov
or
sub
hlt
in
push
ljmp
popa
or
mov
cmpsl
gs
and
movsl
pop
ss
sub
push
loope
call
jns
add
icebp
ljmp
fstp
dec
aas
mov
outsb
test
addr16
orl
cmpl
test
dec
ret
cld
dec
dec
lcall
push
mov
clc
inc
mull
add
and
mov
ret
bound
push
loopne
dec
cmp
inc
push
and
add
mov
das
inc
jl
mov
sbb
into
and
mov
xlat
dec
mov
xor
ret
int
jae
movb
rcrl
insl
arpl
mov
in
daa
fisubl
sbb
repnz
lcall
xchg
es
sarb
ret
jae
sarl
stc
mov
add
mov
jae
pop
mov
xchg
data16
aad
mov
sbb
sbb
aaa
dec
cwtl
jecxz
or
jge
adc
das
sbb
mov
xchg
mov
test
jae
sbb
cs
push
push
add
cmp
fisubrs
jno
pop
sbb
shlb
dec
sub
shl
xor
loope
dec
movsl
lret
adc
pop
dec
insb
fs
mov
sub
push
js
pop
shlb
sbb
out
es
rolb
pop
out
lods
iret
ds
insb
dec
push
cmpb
pop
cmpsl
mov
mov
les
jne
jo
fwait
push
jmp
push
xchg
in
xor
daa
scas
add
ljmpw
cli
imul
pusha
pop
fnsave
adc
xchg
adc
sub
ss
stos
popa
jg
dec
insl
sti
repnz
mov
xchg
dec
push
repz
divl
fwait
sti
je
mov
mov
ret
bound
faddl
push
out
in
cmp
call
ds
arpl
pop
adc
push
stos
xor
lods
divl
mov
ds
or
scas
xchg
cmpsb
fldl
cmp
push
leave
pop
and
cmc
js
jmp
xchg
aas
or
sub
fsubs
cwtl
xchg
jb
cs
popa
pop
pushf
int
in
jp
ljmp
int3
mov
mov
out
in
aad
call
xor
jns
outsl
lods
fldl
jns
jmp
scas
daa
add
dec
repnz
arpl
or
or
mov
fwait
xchg
cmp
or
imul
push
loope
xlat
scas
lret
pop
cmp
jo
dec
aas
int
mov
cmpsb
mov
popf
aad
pop
mov
pop
mov
xor
ja
movsl
jecxz
xchg
push
test
cmp
icebp
mov
push
cld
inc
lret
js
mov
repnz
sahf
mov
out
xor
adc
inc
imul
sub
mov
loop
adc
repnz
icebp
jp
insl
pop
mov
testb
sti
enter
or
jmp
orl
sub
inc
pop
sub
mov
jne
shll
fs
fs
adc
mov
adc
mov
scas
dec
push
nop
out
shlb
sub
jo
mov
int
fs
jp
icebp
aaa
or
pop
add
cmc
in
and
lcall
jb
test
dec
out
or
data16
adc
outsl
mov
imul
loopne
in
push
movsl
cwtl
stos
mov
pop
cld
and
clc
pop
frstor
adc
test
cld
inc
popf
jmp
scas
pop
inc
inc
adc
je
pusha
and
dec
out
mov
out
xchg
push
pop
int3
xchg
fdivl
andl
pushl
push
push
and
fstl
fcompl
repz
pop
arpl
sarb
call
psubb
loop
xchg
sub
lock
add
fldenv
sub
or
scas
or
and
dec
mov
sbb
jmp
cmp
jne
jp
movsb
stos
pop
mov
out
xchg
and
xor
int
fisttpll
daa
fiadds
aaa
adc
jp
cmp
lcall
in
jle
mov
inc
fmull
or
add
mov
fwait
scas
jle
negb
inc
pop
out
xor
inc
push
add
stos
jecxz
mov
add
in
iret
cmc
mov
aam
pop
push
leave
cmpsb
xlat
aaa
adc
mov
xchg
mov
enter
push
inc
hlt
rcll
loopne
mov
or
std
mov
push
out
push
push
call
shrb
jbe
push
data16
push
xchg
rcl
add
rolb
jb
dec
xchg
dec
push
mov
call
jl
int3
das
cmp
test
ret
rclb
ficoml
fidivl
mov
hlt
cli
push
rcll
cmp
and
outsb
jne
mov
rorl
cmpsb
repz
hlt
dec
scas
nop
ds
dec
push
jbe
scas
mov
mov
adc
stos
arpl
popa
outsb
xchg
hlt
ret
out
add
test
shl
sahf
andl
jae
or
cmp
mov
enter
dec
mov
inc
or
cmpsl
mov
fs
push
lret
xchg
subb
mov
test
hlt
pop
lcall
mov
cltd
push
cmc
out
arpl
inc
add
xor
shlb
cwtl
add
dec
jb
dec
xchg
test
mov
and
test
testb
movsb
mov
dec
add
fdivrs
movsb
push
icebp
and
adcb
fmull
push
sub
aas
rcrl
dec
and
lahf
popf
fidivs
enter
cmpsb
cs
sti
loopne
clc
push
mov
mov
cmc
ret
notl
jl
xor
mov
sbb
and
daa
lods
stos
add
jle
shrb
mov
in
stc
pop
in
xchg
out
adc
adc
inc
loope
ret
in
pop
inc
cs
ljmp
mov
push
cmp
js
ss
clc
inc
xor
inc
shlb
cmp
rolb
jg
dec
fwait
sbb
push
xchg
jmp
loop
test
cli
cmpl
mov
nop
xor
pop
push
inc
xor
push
pop
sbb
inc
imulb
xchg
jg
ljmp
cwtl
jl
xor
into
addl
mov
and
clc
enter
jne
xchg
popf
jmp
out
stc
lcall
mov
bound
push
shrl
shr
xor
dec
jl
cmp
shll
addb
test
push
inc
inc
icebp
mov
push
inc
xor
adc
xorl
xchg
push
push
sub
mov
xchg
adcb
daa
dec
inc
xchg
inc
cmp
test
jg
jnp
cmp
mov
ja
imul
stos
pand
sub
pushf
lcall
sub
mov
sti
xchg
inc
fmulp
repz
jbe,pt
cmc
stos
mov
push
loopne
add
jne
dec
pop
sbb
sti
ja
inc
scas
repz
and
sbb
pop
subl
scas
popf
cmpsb
cmp
es
std
mov
ja
fcmovb
pop
adc
fidivs
je
and
imul
add
mov
adc
mov
cmp
xchg
jae
je
push
xor
or
fcmovu
sar
shll
adc
nop
icebp
xor
mov
sbb
ficoml
mov
fsubl
dec
mov
xchg
jne
cmp
dec
add
leave
ret
les
or
mov
cli
out
out
add
or
pusha
adc
add
subb
imul
dec
inc
jae
cmp
pushf
pop
mov
pop
fwait
nop
and
idivl
or
or
dec
mov
cld
xchg
test
mov
fcompl
aad
and
shl
cwtl
insb
push
mov
push
cld
jns
dec
and
mov
xchg
in
mov
mov
jmp
andl
mov
pop
mov
xchg
adc
stc
clc
pop
std
pop
pop
inc
pusha
xor
loopne
sub
cmpl
mov
jmp
out
mov
sub
inc
inc
adc
and
push
xchg
sbb
cmp
daa
or
and
push
subl
jno
or
push
je
push
jmp
mov
or
psubusb
in
mov
xorl
sub
jp
les
or
pushf
das
sub
sarl
mov
cmpsb
mov
test
ret
xchg
sbb
adc
js
cmp
addr16
cs
pop
push
xor
adc
loope
add
jbe
add
jl
xchg
xchg
push
push
lods
pop
pop
jbe
idivl
jno
dec
cli
subl
icebp
or
lea
out
sub
or
xchg
xchg
test
sub
subl
sub
packuswb
dec
jmp
imull
fdivr
test
xor
cmp
xchg
jp
mov
clc
incb
adc
es
cmp
stos
int3
leave
lock
mov
lds
cmp
jno
rclb
cmp
ss
addr16
shrl
lcall
sub
xorb
icebp
stos
cld
rcl
xor
mov
incl
iret
aam
cwtl
sub
cmp
lcall
and
cltd
xchg
ret
insb
pop
stos
std
sti
mov
xchg
fwait
decb
cmp
inc
sub
loop
shr
pop
mov
bound
adc
movsl
adc
and
inc
adc
rcll
xlat
imul
cmp
add
ja
adc
ds
and
ret
dec
mov
jmp
xor
lret
lock
imul
outsl
es
mov
ljmp
sbb
mov
addr16
xchg
inc
push
dec
inc
jae
mov
inc
dec
sbb
sub
push
or
cli
daa
sbb
pop
mov
stos
push
adc
lock
mov
push
nop
clc
jno
insl
push
add
xchg
movsl
sub
repz
push
fiadds
mov
adc
psraw
push
clc
adc
pop
cld
push
lahf
outsl
mov
addr16
ret
dec
fwait
push
pop
jecxz
cli
inc
adc
mov
xor
jno
mov
into
sbb
mov
or
leave
dec
stos
inc
dec
push
popf
test
bnd
pop
fbstp
enter
dec
aaa
jbe
ret
movl
subl
push
fucom
push
xchg
inc
and
call
sub
dec
dec
mov
pop
xor
mov
movsl
fsubl
jmp
stos
adcl
dec
lret
push
and
inc
rorb
adc
movsb
js
add
lret
iret
bound
ljmp
cltd
js
cmp
les
loop
clc
fdivs
nop
xchg
push
fisubrl
test
push
cmp
enter
pop
call
push
cmp
pop
nop
xorb
ljmp
fstl
lea
inc
xor
mov
loop
ja
cmp
clc
mov
xchg
test
int
and
mov
sub
shr
aaa
movsl
fisttpll
xchg
xchg
out
loope
push
jns
ds
hlt
push
xor
push
inc
xchg
js
inc
ljmpw
das
sub
sbb
jl
xor
lret
xchg
adc
clc
pop
dec
cmc
lret
or
inc
inc
pop
inc
mov
clc
in
and
addr16
cmp
mov
imul
ds
dec
test
fimuls
loop
pop
es
popf
insl
nop
xchg
mov
inc
in
dec
adc
ljmp
loop,pt
ficoml
push
enter
notl
fsts
jge
insl
vpaddw
jb
cmc
lcall
mov
xchg
pop
shlb
pop
inc
or
add
or
dec
add
xchg
pop
push
and
add
test
mov
jp
xchg
repz
or
xchg
mov
int
ds
cmp
adc
addr16
leave
adc
cmpsl
dec
out
add
push
sbb
push
lret
mov
aaa
jne
push
jg
mov
and
lret
pshufw
sbb
int3
std
jle
xchg
mov
aas
incl
loope
dec
sub
cs
scas
dec
push
inc
mov
push
or
lret
ret
dec
sbbl
mov
jno
fmulp
in
mov
push
push
in
pop
lods
sbb
sub
xchg
push
pop
andl
push
xor
jmp
jecxz
inc
imul
push
stos
mov
jmp
jmp
jmp
repz
lock
mov
imul
xchg
fdivl
cltd
xchg
pop
sbb
cmpsb
xlat
cli
jecxz
cmc
out
jp
in
add
push
mov
lods
addr16
in
jecxz
fcmovu
pop
mov
push
mov
jge
jo
add
insl
rol
sar
mov
cltd
int
in
fst
aas
xor
xchg
stos
das
cwtl
cmpb
inc
push
iret
inc
rorb
jae
xor
sub
stc
cmp
loope
jmp
das
test
int3
dec
dec
mov
fistpl
or
int
out
int
inc
mov
cmc
jmp
and
je
pushf
lods
ja
movsb
imul
les
scas
test
lahf
inc
rcrb
fnstcw
sahf
sub
ljmp
mov
push
xor
jp
ffreep
xor
shl
bound
sbb
das
cmp
jns
aaa
push
ljmp
clc
push
in
add
aam
xor
cmpsb
shl
iretw
stos
iret
insl
fmull
jb
repnz
adc
mov
int
cmp
imul
in
pop
jmp
sbb
xor
mov
inc
adc
jg
mov
jp
aam
adc
cli
mov
mov
push
popf
cltd
aad
lret
jae
scas
xchg
leave
mov
orl
jl
sub
push
jg
rol
lods
outsb
repnz
cli
movsl
loop
in
sub
push
xor
pop
mov
ss
or
push
pop
and
add
mov
in
imul
add
iret
and
xchg
hlt
inc
shrb
and
pop
pop
xor
cltd
jmp
inc
push
pop
mov
rcl
scas
pop
enter
mov
dec
sub
scas
cmp
and
xor
cmp
and
dec
pop
hlt
jae
dec
je
mov
mov
mov
les
jns
imul
repz
sbb
add
dec
lahf
shl
out
or
mov
mov
adc
mov
in
sti
lret
xchg
ret
push
push
mov
cmovl
cmp
mov
lret
sub
out
insl
xchg
andb
gs
mov
cmp
inc
mov
xlat
int3
scas
and
into
pushl
in
fcomip
pop
xor
movl
push
movsb
test
and
adc
sub
add
inc
xchg
jecxz
pusha
sbb
push
ss
out
scas
aam
adc
adc
fdivs
pop
mov
lods
out
xchg
rcrl
inc
icebp
pop
and
lret
rcl
cmp
lret
sub
ds
mov
rorl
sub
adc
fs
loop
mov
scas
stos
sbb
sub
add
icebp
insb
not
add
push
mov
orb
cld
mov
push
add
orl
rorb
push
pmaddwd
jae
shlb
xchg
arpl
xor
nop
or
jnp
and
and
aam
adc
mov
mov
xor
es
sti
das
shrl
int3
aad
xchg
test
cmc
adc
xor
inc
fyl2x
test
inc
fs
out
inc
mov
adc
testb
ret
fmulp
imul
sti
call
pop
sbb
sbb
xchg
xchg
mov
in
dec
mov
add
sbb
iret
inc
scas
or
mov
dec
cmp
lcall
cli
cs
outsb
arpl
fldcw
out
mov
loope
dec
lods
mov
movsb
push
mov
out
mov
lods
int3
cmp
nop
flds
push
sub
in
mov
or
popa
orl
pminub
fidivrs
lahf
jno
mov
jbe
push
leave
shll
mov
loopne
movsb
ret
jmp
mov
aaa
movsl
sbb
jge
cmpsb
imul
jno
jge
jno
sub
xchg
ret
repz
faddl
inc
jne
sbb
or
mov
jle
adc
jns
add
and
scas
lea
mov
aad
inc
pop
lret
mov
mov
xlat
and
mov
rsqrtps
outsl
adc
mov
fcmove
clc
sub
repz
loope
and
insb
and
out
mov
dec
and
cltd
icebp
out
add
mov
cmp
roll
filds
lock
add
xor
rclb
mov
xor
push
adc
imul
sahf
mov
enter
push
in
movsb
push
mov
addr16
jo
fistpl
dec
popa
mov
xchg
arpl
call
popf
cmp
movl
add
sbbl
stc
in
pop
or
mov
adc
xor
xchg
add
adc
inc
jmp
stos
fsts
sti
adc
push
bswap
popa
iret
jae
shl
dec
roll
ja
dec
movsb
sbb
dec
fisubs
adc
push
out
push
or
or
js
insl
jmp
mov
mull
aad
sub
lods
mov
xchg
arpl
cltd
push
mov
sub
cmp
xlat
cmpsl
jns
rorl
das
rcrl
jge
cmpsl
cmpsl
andl
jo
mov
int3
int3
push
add
push
push
push
mov
inc
sub
or
jecxz
pop
arpl
dec
sbb
push
gs
mov
test
test
ljmp
in
mov
jg
shrl
xor
pop
mov
movsl
lea
outsb
mov
xchg
or
inc
imul
inc
std
sar
nop
cmp
inc
mov
sub
push
fdivr
imul
push
outsl
ds
gs
lretw
int3
rcl
cmp
push
test
imul
mov
sbb
xlat
inc
jne
xchg
inc
inc
enter
dec
mov
cmp
mov
cli
ljmp
iret
sub
cmp
pop
int3
decb
push
ds
cmp
xchg
and
lret
lret
popa
data16
repz
adc
rorl
mov
xchg
shll
and
jecxz
movsl
repnz
xchg
in
js
jle
adc
fucomp
cli
or
pop
dec
xchg
jb
push
lock
aad
lcall
inc
sbb
fadds
fadd
xlat
mov
mov
mov
sti
inc
adc
push
sub
inc
xor
inc
in
testl
sti
leave
sub
add
scas
xchg
test
js
xchg
xor
cmpsb
or
test
into
xchg
sbb
sub
ret
daa
mov
not
sub
je
pop
dec
std
and
outsb
test
icebp
fstl
stos
jle
sarl
mov
fcomip
add
shll
test
lcall
test
jecxz
repnz
cmp
nop
int
adc
adc
adc
and
mul
jbe
push
ja
jle
call
dec
imul
call
add
mov
jo
cmp
out
sbb
fdivr
fcompl
fdivrl
push
mov
xor
roll
jb
ljmp
adc
cld
xchg
jmp
adc
mov
aaa
adc
je
ror
ds
test
ror
jge
mov
jecxz
pop
insb
out
cmp
enter
mov
xorb
aam
test
test
popa
push
pop
insb
push
imul
pandn
movsb
mov
push
cwtl
imul
or
dec
sbb
int
fs
pmulhuw
leave
mov
lods
orl
push
mov
lea
push
test
lods
xor
mov
dec
pop
adc
xchg
mov
pop
aaa
orb
pop
pop
stos
es
jge
mov
jge
inc
idivb
ret
insb
mov
adc
adc
lea
add
push
xor
jmp
loopne
int
push
inc
dec
in
mov
rol
movsl
test
cmp
add
mov
cli
adc
out
mov
and
add
scas
aad
jae
sti
sbb
and
sub
call
cli
out
xchg
add
sbb
cs
jbe
pop
adc
stos
pop
or
fs
les
mov
push
movsl
repz
push
daa
das
incl
in
cmp
mov
add
scas
or
xchg
filds
rolb
mov
dec
inc
filds
in
pop
and
push
das
stos
paddusb
and
jge
sarl
imul
pop
negb
loopne
stos
mov
arpl
and
jecxz
inc
sbb
xchg
adc
jg
dec
mov
sbb
jne
dec
mov
xchg
fnsetpm(287
pop
xlat
out
and
push
jne
mov
into
out
or
stc
dec
push
stc
add
scas
mov
push
sbb
loop
pop
sub
lods
mov
mov
sahf
cli
cmp
rclb
ljmp
lock
inc
lods
mov
dec
jb
mov
hlt
xchg
mov
int3
ret
ret
in
push
mov
aas
inc
inc
bound
sub
xchg
push
push
cmc
jbe
mov
stc
rcl
aas
xor
xor
or
sbb
pop
lcall
jbe
insl
jecxz
lcall
imul
xlat
push
in
dec
test
enter
mov
out
popf
jb
rcrl
movsl
cmp
icebp
jmp
aaa
stc
cld
adc
enter
mov
cmp
js
lcall
sbb
test
inc
inc
cmpsl
mov
xchg
fidivl
in
outsb
jl
jnp
leave
loopne
pop
inc
jb
pop
adcb
adc
add
mov
sbb
test
daa
xchg
add
int
and
call
or
into
mov
scas
inc
xor
jge
dec
cs
xchg
iret
adc
cmpsb
out
ret
ljmp
movsl
or
pop
daa
xor
cmp
inc
dec
addl
loope
sub
cld
aaa
mov
xchg
inc
pop
dec
stos
pop
lret
mov
mov
scas
in
jl
mov
jae
in
aas
loope
lods
jecxz
pop
pop
or
imul
dec
bound
in
cmp
cld
dec
in
mov
sbb
enter
fcomip
inc
movsl
jno
cmpsb
inc
imul
jg
cli
aas
dec
xchg
repz
xchg
scas
fsubr
pop
and
push
orb
jbe
push
lcall
in
pop
nop
mov
movsl
xchg
cmpsb
cmp
jns
test
shll
stos
cmp
dec
insb
jge
lods
fisttpll
inc
adc
pop
out
xor
add
aam
sbb
or
mov
loope
in
loope
dec
or
push
and
mov
adc
cwtl
pop
dec
jne
push
lcall
gs
fadds
xchg
sbbb
xchg
mov
stc
jge
sub
or
xorb
fimull
xor
movsb
cltd
add
call
out
mov
jl
or
inc
scas
scas
mov
xlat
dec
shl
xchg
test
repnz
add
adc
pop
add
outsb
jp
leave
int
aaa
out
cmpsl
sti
mov
inc
or
push
mov
lret
scas
jg
sbb
ud1
adc
rcrl
xor
imul
mov
and
cmpsb
fsts
pop
add
das
idivl
ret
sti
xchg
or
xchg
mov
cmp
ss
cli
jo
loop
popl
xor
fldcw
xor
in
fsubrl
jmp
fcompl
scas
jl
sbb
hlt
gs
loope
jno
jmp
inc
cmpsb
repz
dec
dec
outsl
xchg
inc
stos
fwait
adc
inc
in
cmp
xor
push
fisubrs
test
jge
pop
shll
lret
adc
cwtl
xchg
mov
push
push
mov
sbb
insl
fs
aaa
arpl
fucom
gs
inc
cmp
xchg
pop
fwait
daa
and
sub
loop
sahf
je
jbe
xchg
stc
repnz
xchg
ja
cs
push
lock
xchg
xor
mov
xchg
fcoml
xchg
in
sahf
add
or
into
or
out
adc
sbb
add
pusha
cmpsl
inc
pop
push
cmp
ficompl
ja
mov
in
lret
iret
bound
dec
sbb
cmpsb
subb
jne
adc
movb
lret
adcl
out
add
test
outsl
rcl
lret
ret
scas
lret
lret
gs
or
sub
jp
popa
add
pop
shrb
xchg
imul
aas
ret
xlat
jno
jecxz
inc
xor
xchg
mov
mov
jno
ss
add
xlat
mov
sahf
cltd
inc
loope
filds
pop
nop
or
xchg
pop
inc
std
out
mov
mov
sbb
fistpll
sbb
mov
aam
cmp
into
push
insb
ss
cltd
mov
cmp
bound
push
mov
mov
mov
dec
call
cmp
xchg
ret
popf
into
pop
and
out
mov
cli
sets
cmp
jae
pop
rcrb
popf
jns
roll
xor
das
stos
adc
je
jo
sbb
es
mov
stos
mov
rcrl
push
push
add
cmpsl
jae
fs
sbb
ror
mov
lcall
imul
and
loope
cli
sbb
dec
xchg
xor
pusha
push
xchg
push
cmp
or
outsb
es
mov
imul
mov
nop
and
inc
sti
pusha
fadd
jno
les
and
negl
js
lods
cmc
int3
aaa
icebp
sub
pop
and
fstps
push
inc
mov
mov
sbb
mov
mov
aaa
adc
data16
outsb
adcb
mov
in
pushf
adc
mov
pop
add
xchg
push
movsl
fdivs
push
mov
pop
roll
fwait
cmp
xlat
mov
add
and
aad
lock
bnd
lods
sbb
mov
jb
xchg
mov
icebp
pop
mov
es
rcrl
les
das
outsl
push
ret
imul
mov
subb
xor
add
jecxz
xor
adc
xor
inc
add
data16
or
mov
je
loopne
inc
mov
int
sti
mov
or
out
jmp
ret
push
or
nop
mov
lock
out
mov
push
pop
jg
arpl
sarb
jecxz
pop
in
hlt
push
das
dec
xchg
mov
jle
sub
arpl
lret
pusha
mov
sub
cmpsl
loopne
nop
js
outsb
je
xor
xor
add
ljmp
inc
mov
mov
ss
int3
sar
mov
ffree
xchg
jne
loopne
mov
in
inc
in
sub
ret
xlat
add
loop
pop
ret
jge
jecxz
popf
push
dec
inc
sub
jmp
xlat
adc
jne
push
and
mov
and
jne
popf
push
shl
jl
sbb
je
insb
mov
dec
daa
dec
xchg
sbb
inc
cmc
dec
cmp
and
push
icebp
outsb
loope
jb
inc
mov
rcrb
cmp
cmp
subl
jg
aam
xchg
mov
lea
inc
int
sub
js
fiaddl
cwtl
push
mov
xchg
cmp
lea
mov
or
dec
stc
insl
mov
cmpsl
mov
jecxz
push
mov
inc
inc
sub
fwait
rorl
cld
sub
jbe
jb
js
lock
aas
jl
add
inc
and
lret
fs
fldcw
aaa
push
loopne
mov
test
cmp
sub
in
cld
sbb
xor
fs
inc
movsl
cmp
jmp
stos
sub
inc
mov
xor
aam
mov
mov
sub
addr16
fld
inc
roll
ja
mov
cmpsb
arpl
test
popf
adc
scas
iret
sub
sahf
push
imul
cs
push
and
notb
lret
push
mov
lret
xor
fucomp
jno
jo
dec
aad
ljmp
jmp
in
int3
jl
sbbb
mov
sti
cmp
push
or
test
mov
cmp
mov
xchg
in
jns
divl
or
mov
push
test
movsl
cmp
xchg
faddl
sahf
test
adc
or
jbe
mov
pop
gs
aad
adc
aam
xor
or
xor
test
push
mov
jbe
lock
and
push
jne
sbb
int3
lret
movl
nop
shrb
mov
and
into
popa
xchg
push
adc
popf
jno
jb
sbb
pusha
mov
js
xchg
mov
xor
pop
push
loope
pop
mov
cld
adc
jno
lds
jae
xchg
sbb
inc
xor
mov
jae
xlat
xlat
xchg
mov
out
addl
push
xor
out
jl
fisubrl
xchg
xchg
mov
xor
jl
leave
out
fimuls
add
loop
loope
xchg
mov
dec
lret
cmp
mov
ret
and
lds
test
gs
mov
popa
out
sbb
std
pop
arpl
push
das
repnz
and
mov
mov
into
or
lret
insb
daa
orb
xchg
ds
iret
xor
loop
andl
mov
stc
mov
repz
rol
inc
pop
nop
mov
stos
inc
adc
testl
loop
data16
insb
and
stos
lods
insl
mov
test
ss
lcall
addl
push
cltd
iret
movsb
and
aas
pushf
scas
repz
iret
ja
add
enter
adc
cli
rolb
fsubrl
ret
jl
jg
je
movsl
mov
inc
pop
mov
mov
xor
fcoms
sub
xlat
cmp
push
pop
aas
xor
daa
ret
movsb
ficoml
mov
aad
pop
and
mov
push
mov
in
mov
icebp
aad
je
pop
das
xchg
ja
pop
in
dec
icebp
pop
jge
jecxz
lods
or
add
fistl
jmp
rcrl
cmp
pop
or
insb
push
cmpsl
sub
imul
jne
jb,pt
sbb
pop
jl
out
pop
add
and
add
inc
int
leave
add
push
je
cwtl
addr16
dec
insb
test
push
rcl
iret
xor
or
adc
pop
inc
inc
adc
cmp
lret
xor
popa
fdivr
int3
push
outsl
push
push
mov
popf
and
mov
out
or
ret
jo
pop
out
push
shll
ror
int
push
adc
clc
stc
sbb
loope
flds
and
aad
lods
lods
jae
cltd
popf
inc
bound
dec
or
push
jns
inc
inc
nop
mov
mov
push
add
xchg
jae
not
jp
mov
push
jae
add
imul
jae
mov
pop
mov
loopne
and
sbb
adc
outsl
cmpsb
xchg
les
mov
dec
cmpsl
dec
filds
inc
sub
std
and
push
lcall
pop
cmp
lcall
lahf
lret
adc
dec
enter
stc
sbb
scas
sbbb
jg
shlb
aas
enter
rcll
add
js
bound
inc
pop
pusha
dec
sub
xchg
lret
dec
mov
mov
xchg
dec
push
push
sbb
insl
shlb
cmc
cmc
out
and
cmp
xor
push
sahf
push
jmp
dec
mov
or
js
cli
jbe
push
push
pop
dec
push
mov
jle
cmp
fcompl
cld
mov
xlat
and
jb
mov
or
dec
test
xor
in
repz
push
xor
push
xchg
xlat
or
and
and
das
jo
stc
xchg
rorl
lcall
leave
lcall
inc
adc
mov
les
mov
pop
inc
bound
test
push
arpl
pushf
rclb
pop
cld
into
mov
imull
sahf
adc
cs
mov
mov
or
fimuls
jae
sbb
sbb
push
scas
xor
aas
notb
je
pop
pop
or
push
dec
xor
mov
mov
jmp
ficoml
jbe
pop
out
ljmp
js
mov
adc
lret
stos
popf
mov
jmp
faddp
pop
sbb
add
mov
mov
fidivl
pop
inc
dec
roll
mov
add
jnp
data16
jle
and
cmp
into
fwait
rcl
rcl
scas
movsl
enter
cmpsb
push
add
cmp
push
les
scas
mov
popl
cld
scas
insb
imul
rorb
jae
in
insb
dec
mov
lods
out
stc
ja
push
cmc
aas
fcom
scas
mov
and
xlat
mov
movsl
out
adc
jmp
sub
fldl
fs
pop
cwtl
mov
in
mov
pop
push
dec
nop
cmpsl
mov
jbe
dec
lahf
or
dec
fcompl
jae
sbb
lock
jno
hlt
cs
cmp
pop
addr16
jl
cmp
inc
mov
hlt
daa
mov
fs
lds
jmp
cmp
mov
rcl
in
cmp
mov
sar
testl
inc
sbb
cmc
add
sbb
adc
and
or
ret
pop
add
gs
jno
addr16
push
inc
inc
das
cld
shll
jp
mov
je
and
daa
call
fisubl
pop
sub
scas
xchg
aaa
in
cmp
test
sub
push
imul
mov
xor
adc
movsl
data16
fs
add
bnd
lea
jge
xor
loopne
in
cli
adc
arpl
push
leave
bound
rclb
int
sub
out
mov
sti
lcall
pusha
fimull
xor
or
adc
push
mov
and
xor
cs
repnz
pop
mov
std
enter
arpl
pusha
xchg
ds
xchg
mov
imul
pop
cs
xchg
mov
jp
sbb
ret
rcrb
xor
jp
add
test
aas
mov
mov
rcl
insl
mul
daa
xor
pop
out
enter
mov
es
mov
dec
or
mov
xchg
mov
adc
mov
mov
mov
rep
addr16
lret
cmp
in
push
mov
xchg
data16
movsl
fwait
lods
fisttps
pushf
popf
ds
pop
dec
mov
cmp
mov
data16
arpl
aaa
das
ficoms
push
sbb
dec
or
jb
or
enter
push
pop
dec
push
jp
push
ret
hlt
clc
and
push
std
jnp
cmp
ljmp
sub
je
leave
ds
roll
mov
mov
mov
sahf
je
fnstcw
rclb
or
xchg
jmp
enter
xor
inc
rorl
xchg
std
cmc
mov
imul
rcl
leave
imul
aam
cmpsb
or
fstp
add
out
sbb
popf
xchg
jmp
cmp
cmp
mov
mov
dec
les
fstps
jns
hlt
xor
push
stc
pop
pushf
sahf
pop
push
fsubs
and
mov
push
sbb
lret
pop
add
xchg
push
fmull
and
sub
mov
scas
dec
popa
daa
cmpsb
faddl
aam
dec
xchg
sbb
lods
adc
adc
pop
dec
xor
and
out
mov
add
pop
fs
xlat
data16
incb
mov
mov
lret
inc
push
jnp
mov
aam
mov
pop
push
push
dec
mov
and
xor
int3
jnp
sbb
push
mov
xor
gs
out
sbb
inc
pushw
andb
xchg
xor
mov
mov
cmc
xchg
mov
lods
lahf
sub
rcrl
jle
hlt
pop
adc
sub
dec
cmp
push
in
or
and
and
push
and
mov
ret
jns
enter
dec
int3
les
xchg
test
mov
mov
xor
lcall
pop
enter
int
out
and
mov
inc
sbb
fisubrs
and
out
xchg
push
icebp
enter
int
xor
movsl
and
and
cmpb
movsb
rcrb
and
pop
mov
and
cmp
loope
fwait
sti
test
std
ret
sub
sub
and
data16
xchg
hlt
sub
imul
mov
push
sbb
divb
mov
push
dec
and
imul
out
inc
into
add
cwtl
adc
mov
sbb
ss
into
int3
inc
lock
dec
ds
jge
mov
shll
out
das
pop
sahf
flds
repz
cmp
rcl
sub
cmp
push
icebp
fidivs
arpl
adc
pop
add
bound
xchg
daa
imul
fs
ja
pop
jne
push
sub
cmpsb
mov
push
mov
dec
dec
rorb
int
int
or
sarb
fwait
leave
sbb
push
or
jb
mov
dec
fistl
xlat
stos
fisubs
xchg
sub
push
es
fwait
xchg
test
rcll
pop
and
and
sbb
in
sub
and
shl
aam
lock
fmull
or
and
out
cli
and
pop
sbb
fnstenv
or
lahf
dec
and
leave
in
pop
cld
or
push
dec
lret
jno
sarl
mov
popf
imul
xchg
in
pop
xor
fldenv
jnp
in
das
aam
adc
out
adc
mov
push
xor
or
imul
fsubl
lds
mov
rcrb
movsl
fwait
out
mov
fnstenv
dec
pop
stos
mov
mov
test
aam
mov
inc
test
js
jbe
andl
repz
jle
andl
stos
dec
fisubl
pop
testb
rcrl
adcb
pop
mov
movsb
scas
movsl
imul
mov
imul
push
cmpsb
pop
mov
pop
sahf
adc
xchg
orl
push
loop
imul
push
scas
aaa
push
cwtl
xchg
fisttpl
push
divl
cwtl
lds
cs
or
js
cwtl
test
dec
push
and
dec
sub
cmc
xor
mov
enter
aaa
test
inc
cwtl
nop
sub
sarl
dec
js,pt
int3
in
movsb
inc
loop
cmpb
jmp
xchg
mov
clc
push
xlat
repz
push
loope
inc
cmp
lea
std
lret
push
sub
std
cmpsl
jle
push
aas
arpl
push
inc
stc
or
insb
aas
int
jl
push
jnp
or
pop
rorl
sbb
xchg
xor
cmpsb
mov
sbb
push
insl
movsl
repnz
cmc
mov
xor
pop
sub
add
ret
xchg
sbb
jns
wbinvd
insb
cltd
sbb
daa
ftst
jae
xchg
or
sbb
fistpll
mov
addb
xlat
cmpsl
mov
xlat
adc
pop
mov
mov
lret
popf
cwtl
mov
inc
adc
push
orb
sbb
mov
push
sbb
add
mov
and
in
in
dec
movsl
dec
adc
push
dec
test
push
insb
call
pop
add
insb
and
lock
and
or
jno
or
in
lds
fadds
loopne
mov
mov
mov
int3
inc
sbb
sbb
mov
xchg
ss
sub
dec
cmp
fwait
sbb
and
mov
pop
faddl
mov
or
shl
add
and
and
push
aaa
dec
mov
and
or
sahf
lds
aad
add
pop
daa
and
cld
mov
pop
cpuid
into
push
cld
push
popa
testb
cmp
xchg
mov
and
pop
inc
int
mov
adc
rcll
lds
adc
xor
xchg
lcall
int3
jb
cmp
test
pop
lcall
mov
ds
pop
dec
arpl
sub
mov
arpl
hlt
cmpsb
jb
addl
out
push
andb
push
cmp
popa
loopne
jne
push
jle
sub
inc
es
nop
ret
into
push
int
add
dec
dec
in
cltd
out
insb
xchg
xchg
and
xchg
cmpsb
clc
pop
jge
in
mov
push
sub
push
lcall
jl
sub
or
pop
rolb
scas
je
jp
xchg
mov
out
add
and
sarl
std
icebp
sti
movsb
fsubrs
test
cmpsl
xchg
fisttpl
xor
ss
lea
dec
sbb
dec
jle
xchg
adc
xchg
scas
push
cmpsb
movsb
out
lahf
into
mov
fdiv
sbb
je
push
clc
je
pop
inc
call
in
sub
fisubrs
lahf
mov
and
jge
into
xor
jo
mov
or
out
aam
enter
pop
into
xorl
xor
orl
add
rcrb
mov
and
scas
shl
mov
movsb
sbb
daa
sbbb
fwait
lock
shrb
xchg
sub
xor
loop
lcall
stc
shl
daa
pushf
mov
out
mov
pop
ret
cltd
insb
fistpl
push
inc
aas
sub
popf
lcall
lahf
daa
imul
jl
mov
rcrb
push
jb
add
and
inc
inc
adc
push
call
push
cmc
lcall
por
mov
or
push
ljmp
test
sbb
and
ret
test
loope
jo
cmp
pop
incl
insb
pushf
dec
push
or
mov
iret
popa
mov
xchg
insl
sbb
sbb
sub
xchg
mov
outsb
cmpsl
pop
push
int3
outsl
ljmp
mov
ss
sub
and
idivl
mov
push
movsl
cmp
adc
pop
pop
adc
cmp
dec
push
push
inc
mov
cmp
push
movsb
inc
daa
xor
xchg
shlb
addb
sbb
stos
mov
xorl
daa
scas
mov
scas
jno
int3
xor
mov
push
test
and
push
and
gs
jg
jae
ljmp
les
cmp
and
xor
insb
imul
jp
rorl
ret
filds
inc
dec
pop
mov
ss
push
stos
mov
mov
push
sbb
out
dec
sub
stos
push
ret
xchg
stos
je
dec
adc
push
addl
mov
add
push
cmc
cmpb
es
inc
dec
int3
adc
out
lret
xor
lods
or
rolb
push
mov
inc
mov
dec
flds
repnz
fstpt
push
out
sub
ljmp
rcll
sub
leave
iret
ucomiss
popf
jg
adc
jp
notl
into
push
and
shll
jno
rcrl
mov
jne
retw
jo
sti
fnstcw
stc
into
fldenv
sbb
popa
ss
sti
aaa
stos
mov
insl
insl
je
add
and
push
jo
fsub
pop
push
mov
subb
out
fdivrs
push
rorl
xchg
movsb
popf
int3
mov
jecxz,pt
rep
lahf
add
testl
iret
dec
lahf
lahf
test
jb
call
int
add
cld
jmp
dec
imul
mov
cli
cwtl
in
sub
inc
mov
sbb
ljmp
adc
mov
jl
std
push
outsb
push
loope
pushf
mov
add
cmp
fwait
sbb
jmp
loope
pop
cmc
adc
dec
xor
movsl
dec
jg
jb
cmpsl
pop
and
jo
mov
addr16
cmp
sub
cmp
out
sbb
ficoml
notl
stos
movsl
imul
into
mov
inc
cmp
jo
xchg
mov
jge
out
cmp
mov
cmp
inc
in
mov
leave
imul
cmpsl
xor
pop
mov
xor
sbb
fwait
insl
call
pop
cmp
mov
xchg
xchg
jecxz
mov
pusha
lds
lea
mov
mov
repz
mov
adc
xor
inc
xlat
pop
std
mov
les
lods
lret
xor
movsb
lock
or
lcall
cld
add
fisttps
sbb
dec
sbb
into
mov
call
repnz
inc
insl
inc
cmp
orb
pop
lcall
sahf
xchg
dec
iret
rcll
outsl
pushf
push
cmc
mov
cmp
pop
sub
adc
xchg
push
mov
subl
repz
fsubs
pop
dec
in
pusha
cmpsb
fwait
jmp
fbld
stos
jbe
dec
mov
push
aas
sbb
push
mov
cmp
sahf
ss
fbstp
jb
out
je
xchg
push
out
cmpsb
push
add
xchg
fistpll
mov
jecxz
xchg
lret
lods
fimull
pop
ret
mov
dec
xchg
mov
addr16
pop
out
out
cmp
mov
pop
or
mov
jo
adc
pusha
loopne
mov
push
das
aaa
mov
scas
cli
cs
mov
pop
jae
xor
in
incb
mov
outsb
sbb
or
popa
mov
movl
fsubrs
jno
fdivs
jno
inc
es
push
std
jnp
xchg
sahf
and
fwait
sbb
pop
fdivs
out
in
xchg
mov
mov
cltd
or
xchg
stos
js
mov
or
iret
mov
fisubl
fidivrs
mov
lea
adc
or
mov
cmp
mov
movsb
mov
inc
jmp
lret
call
push
adcb
mov
xchg
sub
mov
es
jge
mov
pop
or
adc
pop
pop
cltd
dec
arpl
mov
add
ficoml
js
mov
shl
cmpsb
push
cld
cwtl
sub
fdivrl
outsl
inc
loope
test
jecxz
push
sub
adc
sbb
or
data16
inc
cmpl
mov
jecxz
mov
aas
sub
adc
add
mov
xchg
xchg
js
shll
iret
aad
adc
std
out
push
xor
lds
dec
dec
jbe
mov
push
shlb
ds
das
xchg
xchg
decb
jbe
in
xchg
xor
pop
inc
sbb
dec
push
inc
pop
and
adc
js
call
fs
xchg
clc
insb
andb
aam
dec
push
pusha
repz
push
adc
into
xorl
mov
xchg
ds
sbb
push
add
pusha
test
popa
cmp
int
popf
dec
mov
cmp
jnp
mov
xor
and
hlt
rclb
cltd
mov
xchg
pop
pop
pushf
xchg
cs
dec
push
or
mov
or
pop
xchg
add
aas
outsl
mov
out
mov
popf
and
push
inc
sub
js
lea
aad
ret
fs
jmp
jg
pop
push
xchg
xor
iret
sahf
rcll
mov
daa
dec
popa
ret
mov
iret
sbbb
lods
js
insb
cld
int3
lcall
pop
repnz
outsl
dec
ja
out
lcall
or
mov
mov
daa
xchg
mull
aaa
sbb
dec
sbb
cmpsb
sub
test
xor
mov
and
xchg
adc
mov
rol
inc
shll
xor
sbb
lret
pop
fbstp
mov
fnsave
sti
sbb
add
loope
lret
mov
pop
mov
bound
movsb
ret
shll
mov
scas
out
test
rolb
mov
and
cwtl
cwtl
adc
jp
adc
ret
stc
push
das
ds
pusha
xchg
lcall
daa
cmp
pushf
xchg
jbe
dec
movsl
adc
adc
roll
loop
mov
push
inc
insb
mov
sbb
addr16
pop
in
jmp
pop
cmp
dec
notl
add
mov
outsb
testb
sub
repz
push
fldenv
pop
add
ret
pop
adcb
xchg
fstpl
jae
clc
into
sub
dec
int3
sbb
out
mov
sahf
xchg
loope
push
sahf
js
mov
jmp
push
mov
mov
mov
inc
mov
push
shl
add
repz
enter
jge
shrb
jecxz
mov
pop
nop
lahf
sarl
pusha
lret
je
inc
fbld
pop
loopne
loopne
rorl
or
sub
xchg
pop
cltd
or
mov
pop
in
dec
jb
jns
jno
shrl
add
cmp
cld
jbe
adc
imul
outsb
cmpsl
push
push
xchg
out
push
and
sub
xor
lcall
addl
mov
shrl
data16
mov
inc
adc
mov
imul
mov
in
fisttpll
mov
hlt
xchg
or
pop
xchg
add
lcall
mov
xchg
iret
fwait
jno
mov
cmp
pop
gs
mov
imul
or
and
pop
xchg
jecxz
ret
mov
shll
in
mov
pop
push
fisubrl
pop
mov
daa
pop
add
xchg
ds
test
mov
or
and
adc
cs
decl
test
shrl
lret
hlt
shll
test
cmpsl
xchg
xchg
pop
roll
ds
mov
cs
cmp
cli
push
fwait
add
fwait
repnz
stos
pop
xor
jb
pop
daa
or
add
outsl
cld
add
int
stos
dec
jge
dec
out
out
loope
jg
or
test
mov
mov
fs
divb
mov
push
pop
out
call
and
and
outsl
ret
ss
mov
int
stos
repnz
and
sbb
sbb
shrb
xor
lods
mov
sub
popl
sub
imul
jl
lret
jle
add
jmp
mov
int3
js
cmp
sub
ss
sub
cmp
test
pop
std
loopne
addr16
cwtl
fimuls
mov
sub
pop
bnd
sbb
inc
repz
insl
adc
jecxz
in
xchg
lea
mov
mov
mov
push
out
cwtl
movsl
xchg
xor
pop
fbstp
sbbl
fsts
dec
loope
nop
das
nop
sbb
jo
or
mov
xchg
nop
xchg
xchg
jnp
ret
cmp
and
mov
inc
ljmp
scas
pop
jmp
mov
movsl
cmp
adc
sahf
jo
subl
repz
aad
lods
push
push
sarl
ret
xor
inc
pusha
icebp
shlb
xor
pop
and
outsb
ss
dec
cltd
pop
sahf
enter
jno
rolb
jecxz
mov
xor
test
mul
shll
out
push
or
in
xchg
cmp
xchg
out
push
rcll
ret
pop
sub
cmc
popa
xchg
popf
sbb
mov
mov
test
push
jne
pop
stc
fstpt
out
ror
push
push
push
bound
mov
sti
push
imul
push
mov
mov
outsb
push
hlt
sahf
adc
int3
sub
xor
aas
stos
xchg
push
pop
cmp
cmp
xchg
jnp
inc
imul
in
mov
pop
cmp
jnp
push
out
mov
and
stos
scas
insl
xchg
pushf
call
ror
fdivl
push
scas
lahf
int
push
push
pushl
jo
testl
jo
add
das
adc
std
test
jge
icebp
adc
xor
sbb
imul
sub
fsubs
xor
lret
or
push
jno
mov
dec
adc
xchg
inc
out
xchg
xor
cmc
jns
nop
insb
and
and
fwait
xchg
or
pushf
push
and
sbb
pop
fwait
and
sahf
and
mov
in
fdiv
push
punpckhwd
inc
push
movsl
pop
cmpsl
stc
stos
ret
cmp
cld
subl
push
mov
mov
cmpsb
lret
cld
jle
iret
add
loope
pop
adc
dec
lcall
xchg
je
mov
das
pop
fldt
cmp
pop
inc
setp
sbb
outsl
dec
cmp
stos
cmp
in
cmp
lock
int
add
xchg
mov
test
adc
xor
mov
inc
cld
xchg
fcom
mov
jnp
pop
aad
cmpsl
push
mov
and
mov
cmpsl
pushf
mov
adc
icebp
add
add
adc
lea
outsl
xor
jb
mov
scas
xor
push
dec
inc
sub
xchg
js
pop
jnp
pop
cmp
jb
cmpsl
movsb
mov
rcrb
add
sbb
loopne
pop
ja
add
aas
fcomps
dec
jbe
mov
mov
leave
sbb
hlt
add
outsb
xor
sahf
inc
and
ljmp
mov
push
enter
je
dec
sub
insl
push
mov
xor
pop
in
push
fisubrs
cmp
fbstp
and
sbb
or
je
jmp
mov
jo
insl
add
pop
cmpsb
cltd
mov
fildll
adc
add
mov
mov
rorl
testl
inc
or
std
cmpsl
inc
movsb
jbe
mov
mov
sub
das
inc
mov
ret
and
cli
or
cmp
sbb
cmp
cmp
loopne
orb
nop
dec
out
pop
test
cmp
dec
test
push
hlt
rorl
shrl
adc
test
cmp
pop
inc
or
sub
shlb
imul
push
inc
mov
stos
push
gs
int
push
stos
ljmp
cmc
ret
adc
orb
ja
jbe
dec
inc
xor
sbb
aam
pop
inc
xchg
out
sub
mov
iret
mov
test
lods
adc
fwait
mov
rcll
mov
pusha
pop
test
cmp
add
mov
dec
inc
insl
inc
dec
fdivl
leave
aas
cmp
and
enter
or
dec
pop
push
in
sbbl
orb
mov
lret
iret
iret
push
add
jo
push
push
inc
lret
arpl
push
sbb
cmp
mov
andb
push
push
mov
xor
jno
loope
xchg
test
sbb
pusha
xchg
add
fisubl
ds
xor
dec
adc
dec
test
faddl
int
rcll
fnstenv
mov
mov
das
ljmp
pop
aad
jecxz
jne
push
xor
adc
and
aaa
add
outsb
sbb
xor
aam
jno
sub
vpmuludq
push
test
push
insb
das
andb
out
clc
ds
push
adc
inc
xlat
xchg
daa
sbb
fisttps
mov
outsb
mov
popf
xor
cld
imul
mov
cmc
mov
push
loopne
and
mov
mov
leave
jp
bswap
jmp
mov
adc
and
hlt
int3
test
mov
cli
push
jnp
pop
pop
lret
mov
test
shl
nop
ja
pop
ret
jbe
adc
les
not
add
xor
dec
cmpsl
jae
loopne
stos
cmp
dec
pop
int
mov
xchg
push
adc
adc
fistpll
lret
push
jne
out
jo
fwait
add
sub
cmp
jp
lret
xor
mov
and
xchg
dec
stos
sub
jl
mov
pop
js
lret
cmp
cwtl
or
jno
mul
aas
jg
sbb
add
pop
outsb
out
lret
mov
xchg
jmp
filds
mov
mov
jge
and
mov
mov
mov
subl
sub
lea
into
mov
aad
xchg
sbb
fcompl
sti
inc
xor
dec
daa
cmp
or
xor
mov
das
dec
inc
rcrb
scas
add
jns
mull
xchg
loop
aad
mov
popa
mov
jns
aas
add
lcall
push
movsb
sti
dec
adc
sub
adc
cmp
arpl
inc
inc
aad
leave
sbb
test
test
jae
dec
or
mov
push
jl
call
sahf
mov
and
mov
mov
dec
or
push
sahf
jno
rorl
sbb
in
adc
lcall
daa
inc
leave
ds
icebp
leave
or
testb
sbb
xchg
test
cmp
xchg
sarb
adc
jns
ret
and
or
mov
stc
testl
push
adc
inc
or
sub
push
out
stos
mov
sub
ret
or
shlb
push
pop
shl
cmp
push
add
sbb
push
nop
xor
cmp
inc
les
inc
xor
paddsb
xchg
push
ja
les
sub
lds
in
ds
test
pop
or
mov
mov
and
mov
xchg
and
or
incb
hlt
stc
jecxz
mov
mov
pop
mov
mov
sub
out
fmull
dec
sbb
push
sub
xor
push
imul
xchg
mov
dec
adc
mov
out
jmp
loope
or
jnp
cld
lret
fidivs
cmp
repz
and
or
xor
incb
push
jge
xor
sarb
mov
and
test
movsb
mov
hlt
dec
pusha
add
fs
or
sub
cli
sbb
mov
imul
pop
cmp
dec
cmp
sahf
mov
ret
mov
inc
xchg
jle
aam
push
ret
push
rorl
mov
mov
pusha
dec
in
mov
mov
loopne
cmc
jle
push
and
loope
dec
mov
mov
insw
fdivr
mov
jmp
mov
mov
stos
mov
mov
outsl
cltd
int3
lretw
sub
push
movb
cmpsb
dec
push
cwtl
imull
xchg
cmc
daa
adcb
push
repz
fmull
mov
fwait
test
lods
push
aas
sub
hlt
call
lds
popf
ljmp
fidivl
mov
iret
insl
shll
xor
sub
inc
xchg
add
xchg
push
and
sub
in
movsl
adc
and
cmp
pop
lahf
mov
into
popa
push
xchg
popf
fldcw
jae
jge
rcll
test
mov
cs
jno
es
stos
jge
mov
daa
inc
es
lret
mov
fs
add
clc
popa
aam
in
aam
jne
aad
sub
sbb
pusha
int3
inc
sbb
ljmp
push
stc
sbb
dec
fimuls
mov
push
push
shrb
lahf
sbb
cs
cltd
sbb
lea
add
jecxz
mov
psllq
push
pop
xchg
sbb
push
sbb
sub
mov
loop
mov
out
inc
xchg
pop
dec
int
dec
fadd
dec
xchg
jbe
pop
lret
push
xchg
mov
xchg
fldt
add
hlt
rcrl
inc
xchg
sbb
pop
rorl
dec
loope
and
pop
cltd
mov
test
imull
mov
ja
dec
in
push
ror
out
test
lcall
sub
xchg
fimull
cmpl
inc
std
add
pop
mov
and
setle
mov
jp
jge
push
xchg
xorl
or
ds
adc
and
fimull
lods
cmp
jp
hlt
mov
ds
popf
jle
flds
adcb
dec
das
fisubrs
pusha
shrb
sbb
aam
out
sahf
fldenv
adc
mov
cli
mov
in
adc
stc
jno
adc
mov
sbb
seta
and
mov
jns
test
je
jecxz
addb
dec
loopne
cmpsb
jno
aam
sti
scas
mov
lock
andl
cmp
adc
repz
movsb
inc
jl
jge
repz
pop
push
xor
cmp
icebp
pop
mov
xor
pop
fldl
dec
scas
cli
js
mov
cli
inc
arpl
loope
push
push
push
std
shl
lahf
cmp
daa
cli
andl
mov
push
sarl
mov
sahf
mov
xor
mov
cltd
es
jo
js
cmp
filds
cmp
out
mov
and
cmp
and
fsubrs
xor
mov
js
adc
jbe
xorl
das
adc
cli
ss
jp
test
mov
dec
cwtl
int3
push
or
das
movsb
push
and
mov
dec
call
into
std
loope
mov
lret
mov
sarb
arpl
in
pop
add
jno
push
popf
dec
dec
outsb
or
int
in
jno
cmp
enter
sub
ljmp
popa
mov
outsb
mov
lahf
movsb
sbb
lahf
sbb
mov
cmp
pop
insl
iret
push
jno
out
aaa
inc
or
push
js
cmp
sub
sbb
nop
jmp
or
shrb
cs
test
aam
bound
inc
or
add
in
fildl
push
cmp
push
cmp
jae
std
mov
pop
pop
sarb
mov
popa
xchg
sbb
out
mov
pop
rcl
mov
mov
in
add
shr
and
add
jnp
mov
mov
xor
push
mov
cltd
sub
dec
lds
loope
repnz
nop
inc
cmpl
fstpt
inc
in
xor
jmp
push
imull
mov
xchg
push
popf
or
lods
add
mov
mov
fwait
mov
aas
dec
setg
mov
nop
cmp
sub
and
and
xor
push
and
stc
mov
cli
fwait
mov
jl
add
and
xor
es
clc
shrb
push
push
inc
cltd
gs
lret
jmp
in
dec
es
sti
rcl
subb
jle
je,pn
or
adc
push
lret
push
fs
sbb
jae
lock
cltd
test
push
pop
shl
data16
addl
and
or
sub
or
sti
xor
jo
test
loopne
mov
inc
add
jp
lret
mov
dec
xorl
mov
sbb
mov
fst
inc
pop
js
ljmp
or
jne
xchg
lcall
mov
insl
pusha
sahf
or
sub
cmp
or
jecxz
mov
sbb
fstl
and
xor
xor
adc
and
mov
loop
and
add
cmp
inc
scas
and
jp
scas
repz
xor
stos
cmp
shlb
mov
sbb
movsb
or
add
mov
test
push
icebp
jns
pop
data16
repz
adc
push
inc
jmp
cmp
add
pushf
xchg
dec
push
cmp
mov
ss
cltd
popf
movsl
negl
gs
sbb
and
inc
arpl
movsl
mov
sbb
xlat
nop
dec
xchg
popf
xor
call
movsb
mulb
jo
loope
dec
in
xlat
mov
mov
jl
rsm
dec
lock
aaa
xor
fcom
data16
ds
into
pop
mov
imul
mov
jb
sbb
std
lcall
shll
and
mull
icebp
xchg
int3
sti
enter
insb
push
xlat
pop
dec
rolb
jecxz
hlt
je
outsb
add
test
daa
push
sbb
loope
loopne
sbb
mov
sbb
popf
pop
data16
jg
mov
hlt
mov
scas
lcall
outsl
dec
dec
shlb
dec
popf
icebp
mov
outsl
outsl
sbb
out
jo
lods
fstpt
push
in
mov
scas
jae
mov
das
push
stc
mov
sahf
push
data16
popa
jb
add
mov
inc
lock
pop
sti
push
and
test
sub
je
mov
ljmp
sub
cli
fiaddl
insb
push
das
ja
sub
outsl
dec
xchg
sub
jne
xchg
arpl
outsb
xchg
xchg
stos
pop
test
das
std
adc
int
insl
dec
shlb
jbe
jp
sar
adc
clc
outsb
lock
pop
jno
cmp
loop
xor
cmpsb
push
add
push
scas
pop
xor
imul
xchg
inc
sub
mov
jns
dec
ds
or
cmp
in
gs
xorb
inc
inc
sahf
mov
xor
dec
mov
pop
pop
in
dec
loop
push
jl
push
fs
ds
lahf
mov
movsb
cld
lods
stc
push
adc
jle
mov
jb
in
stos
xchg
push
and
bnd
loope
cltd
adc
shr
push
pop
or
int3
lret
mov
xchg
fimuls
inc
sbb
int
inc
insb
lahf
fdivs
push
mov
dec
gs
es
sub
mov
pop
mov
gs
cmp
add
push
enter
bound
mov
or
jp
je
pusha
and
push
pop
sti
inc
xor
pop
lcall
lods
ret
mov
mov
movsb
or
jbe
test
daa
pop
je
aad
leave
mov
inc
mov
mov
adc
les
test
pop
sbb
shll
mov
jmp
add
addr16
in
and
dec
pop
adc
popf
sbb
gs
pop
sbb
out
push
jne
or
xchg
sbb
popa
sbb
inc
mull
sti
sub
fsubl
jmp
cmp
test
gs
rcrl
xchg
sbb
ret
pop
sbbb
testb
inc
mov
mov
test
lret
or
shlb
mov
jbe
mov
xor
std
mov
lret
mov
xchg
leave
pusha
push
pop
xor
js
and
xchg
dec
push
iret
xchg
rorb
out
outsb
pop
fwait
clc
add
inc
int
test
mov
mov
fistpll
inc
idiv
movsb
loope
lcall
bound
or
mov
mov
stos
sbb
outsl
add
aam
in
ret
jle
in
or
in
sbb
xor
push
push
jg
sub
scas
or
cmp
lahf
dec
mov
push
lods
pop
dec
push
inc
and
ret
add
xchg
and
ficoms
mov
arpl
pop
ja
outsl
mov
add
mov
jnp
hlt
jnp
xor
shrl
jae
pop
hlt
inc
push
test
nop
popa
mov
pop
pop
icebp
insb
sbb
fwait
mov
add
sbb
jae
add
repz
jle
adc
xchg
xor
pop
gs
fwait
cmp
test
jns
sbb
pop
push
fs
popa
mov
add
xor
or
sbb
fildll
jb
sub
cs
arpl
mov
add
daa
cmp
push
mov
cmp
add
sub
and
out
or
icebp
movb
es
out
jecxz
push
xor
push
orl
aad
call
decl
pop
xor
cwtl
aaa
ja
mov
pop
sti
sub
dec
aad
cmp
dec
flds
jo
push
jnp
push
lret
fcomps
cmp
push
dec
xor
inc
jge
sub
jge
and
fwait
cmp
mov
or
mov
pop
push
cmpl
xlat
pusha
fnstsw
lahf
xchg
decb
es
jb
popf
jo
adc
int
call
push
test
xchg
inc
adc
sahf
add
mov
cmp
push
xor
int3
and
aam
push
aad
mov
call
mov
cli
xor
pusha
adc
stc
rcrb
inc
ds
dec
sub
mov
sti
sbb
fsubs
fldcw
pop
cmp
cmp
stc
in
fwait
movsl
and
pop
push
inc
xor
cmp
jle
mov
cmp
aas
or
daa
ss
mov
xorb
adc
imul
xchg
into
inc
inc
add
adc
jo
lods
sbb
fwait
movsl
dec
imul
subl
xchg
mov
daa
add
mov
and
jecxz
jle
sub
adc
and
in
mov
imul
data16
mov
sti
sub
insl
jne
in
rorb
jno
cmpsl
or
mov
dec
and
movsl
rcl
mov
mov
sbb
mov
imul
stos
insl
repz
lret
faddl
lcall
out
cmp
jns
jne
and
mov
or
cmpsl
ret
jecxz
xchg
inc
or
bound
adc
out
cmpxchg
mov
scas
adc
out
cmp
inc
addb
fsubp
or
ficoms
sbb
dec
mov
sub
scas
xchg
pop
icebp
js
push
fcomip
lcall
roll
rorl
jnp
jg
or
shl
push
push
fcompl
andb
hlt
daa
gs
lods
mov
sub
cmp
inc
jecxz
out
andl
insb
data16
sub
addb
xchg
jo
cmpsb
xchg
add
lahf
test
pop
dec
inc
xor
jp
push
cmp
fisttps
aam
int
push
cwtl
sub
cs
push
test
test
lahf
in
loop
and
test
pxor
push
or
xchg
movsb
xor
je
jge
in
pop
and
je
lret
fwait
sub
sub
add
in
faddl
mov
scas
cmpsl
icebp
sahf
out
les
test
inc
or
and
pop
jo
in
lods
lds
push
call
cmp
into
or
shrl
pushf
imul
mov
mov
cmp
leave
mov
and
in
lods
and
and
jl
movl
lock
sahf
pop
lret
jge
jge
xor
test
movsb
int3
mov
push
push
popf
pusha
fisttpll
add
jo
pop
push
in
scas
aad
nop
es
std
mov
jne
lahf
faddp
shrl
mov
cmpsl
sbb
sub
and
fs
xor
pop
sub
je
dec
out
arpl
decb
cmpsl
mov
xchg
adc
insl
xchg
int
and
mov
leave
jns
push
mov
data16
jae
push
jg
pop
push
pop
sbb
push
fisubs
adc
cltd
pop
sar
rsm
sbb
dec
shlb
dec
jnp
lods
hlt
pushf
and
cwtl
and
or
xor
sub
aam
xor
ret
mov
stc
mov
jecxz
xlat
dec
jne
or
out
shr
xchg
dec
mov
inc
push
push
pop
repnz
inc
test
das
mov
cltd
es
cs
xchg
jno
inc
and
test
or
das
jns
push
sub
cwtl
pop
inc
imul
add
inc
dec
sub
out
and
pop
icebp
jno
int3
sahf
shlb
ja
push
xor
mov
adc
arpl
mov
fisubs
popf
sti
cmp
test
out
mov
xorb
push
xchg
fisubs
addr16
sti
fs
jmp
and
push
sahf
out
pop
mov
sub
and
or
lock
inc
in
je
cmp
and
cmpsb
bound
jbe
fsub
cs
call
mov
add
outsb
push
mov
and
push
dec
and
bound
lret
cmpsb
daa
into
cmp
fistpll
ljmp
bound
or
xor
add
outsb
and
jmp
fnstcw
add
sub
nop
jmp
push
unpcklps
xor
sarb
mov
cmp
xor
push
fimull
jnp
xlat
ds
iret
pushw
inc
int3
cmp
outsb
xor
push
mov
or
mov
and
or
push
push
xchg
mov
pop
and
sub
or
jae
ss
inc
pop
inc
xchg
shlb
cmc
sti
mov
jnp
mov
jp
lods
lahf
test
loope
pop
aas
or
xlat
mov
lods
mov
jg
sub
loope
testb
adc
xor
mov
xchg
in
xchg
jns
stos
sub
cwtl
lahf
rcrb
jae
mov
sbb
pop
mov
hlt
xchg
daa
xor
sarb
out
mov
xchg
push
pop
aad
sub
leave
pusha
inc
xchg
pop
pop
mov
cmp
insb
inc
ss
push
aam
ljmp
lcall
popa
imul
ja
fldenv
inc
fisttps
inc
lds
pop
cwtl
pusha
mov
jmp
dec
pop
xor
aad
fwait
rcll
inc
lcall
out
xor
aam
int
into
gs
hlt
xchg
cmpb
inc
int
push
fwait
icebp
rorl
mov
add
cmpsb
inc
xchg
jae
dec
clc
cmp
mov
inc
jecxz
test
push
rcr
in
popf
notb
dec
push
fld
fidivrl
loop
stos
pop
je
mov
add
push
push
outsl
cmp
outsb
stc
aaa
cld
mov
lret
rcrb
pop
and
cltd
std
rorl
test
jbe
inc
out
inc
loop
and
lock
pusha
int3
mov
push
xchg
repz
and
or
ljmp
or
adc
push
xchg
sub
and
cli
arpl
mov
cs
negl
jnp
mov
mov
in
fcomps
pop
imul
daa
pop
xor
cmp
loop
pop
mov
loope
arpl
mov
test
cs
and
in
sub
es
sub
icebp
sbb
push
fdivrs
pop
inc
sbb
stos
lods
imul
rclb
ss
popf
mov
pop
out
std
mov
mov
addr16
popf
adc
cmp
adc
and
mov
or
mov
fst
aad
cmpsb
fs
cmc
repnz
shrl
mov
fsubl
fisttps
neg
mov
inc
inc
out
sbb
jg,pt
sub
jl
mov
test
xor
movsl
out
pushf
popl
cld
dec
inc
xor
cmp
push
shll
and
adc
js
ljmp
loope
push
mov
out
mov
punpcklwd
jg
pop
leave
fisubs
sbb
mov
cmp
in
jge
fimuls
xchg
adc
ljmp
repz
jo
cwtl
js
rcrb
lods
push
rolb
fsincos
lahf
jg
loop
cmp
iret
out
mov
inc
and
push
add
sbb
jbe
roll
lcall
cmp
add
xchg
push
shl
push
shrb
mov
mov
sbb
ret
sti
sub
div
xchg
mov
in
xor
inc
inc
cmp
mov
loope
ficomps
jl
into
roll
call
mov
fnstsw
mov
and
push
mov
push
rcrl
addb
pop
adc
fwait
test
adc
and
in
or
test
rcrb
gs
and
sbb
jnp
sub
scas
mov
ret
aam
aaa
in
shrl
insb
cmpsb
cmp
repnz
gs
enter
outsb
push
in
test
pop
mov
jge
xor
pop
pop
xchg
adc
xchg
cmp
push
shlb
daa
popf
cmp
cmp
jo
mov
sbb
xor
pop
jae
adcl
ja
mov
vaddps
mov
addr16
push
mov
xchg
scas
xchg
rcll
jg
scas
dec
mov
xor
mov
sbb
mov
test
adc
ret
inc
fists
push
sahf
mov
fmuls
mov
and
jl
loop
out
inc
pop
lea
sbb
mov
mov
roll
in
add
enter
mov
or
dec
scas
add
enter
nop
mov
inc
push
jae
push
adc
or
lods
push
sub
add
fisubs
xor
push
popa
mov
rorb
push
fs
sti
out
cmp
enter
test
push
adc
inc
stos
lods
outsl
adc
sti
sub
sub
imul
fsubrl
sti
xchg
jmp
jg
jae
mov
cmp
push
or
shl
push
fists
aam
pop
adc
sub
mov
notl
pop
repnz
and
or
loope
addr16
or
test
xchg
andl
loope
pop
int3
hlt
lcall
add
mov
adc
xor
paddb
inc
or
les
fisubs
rcr
adc
fs
dec
xchg
lret
mov
test
cli
xchg
and
outsb
jge
or
bound
cmpl
mov
add
js
xor
sub
je
push
adc
popa
ja
xor
imul
inc
or
popf
stos
stos
mov
xlat
test
insb
xor
mov
xchg
ret
lret
nop
push
jnp
in
fisubl
loop
iret
xor
sarb
or
mov
add
inc
adc
dec
or
mov
scas
jno
mov
leave
dec
loopne
arpl
sub
mov
lea
sub
lret
das
add
and
add
pop
pop
xor
cmp
mov
mov
and
cltd
sub
mov
sub
shll
xchg
ficompl
in
fstpt
push
dec
push
xchg
in
movsb
mulb
das
or
mov
lds
pop
jae
dec
dec
push
cmp
test
in
cmpsl
lcall
dec
mov
fsts
cld
dec
leave
mov
inc
sahf
rorl
mov
aad
push
mov
loopne
or
pop
push
les
loopne
ret
mov
imul
add
icebp
insb
mov
jbe
rolb
outsl
pop
mov
mov
data16
mov
inc
pop
sub
imull
popf
and
call
std
lcall
orl
scas
and
cmp
inc
scas
or
in
loop
roll
pop
sarb
jecxz
movzwl
xchg
sub
jge
xor
lds
xchg
std
cmp
sahf
jb
mov
clc
ljmp
aas
xchg
lcall
mov
cmp
stos
sahf
and
out
push
enter
int3
fs
aaa
insb
orb
and
sub
fs
sahf
iret
scas
cmpsb
pop
imul
and
pop
in
jno
pop
lods
in
lods
mov
jg
jns
add
mov
enter
stos
xchg
outsl
lret
and
mov
stos
repz
dec
loop
cltd
inc
mov
pop
mov
mov
jmp
sub
pop
cmpsl
jmp
loopne
cmp
lea
popa
pusha
aam
into
mov
pop
add
out
sub
xchg
loop
cmc
push
jg
jmp
cmc
int
rorb
sbb
movsl
or
lea
clc
and
inc
xchg
and
int3
mov
cmp
aas
mov
push
shrl
push
pop
push
addr16
shll
icebp
in
es
inc
cmp
sahf
das
or
inc
dec
xor
cltd
pop
mov
movsb
jl
sub
loopne
cmpsb
test
cltd
inc
ss
jmp
jae
push
mov
lods
fnsave
dec
insb
push
out
pop
push
pusha
push
xorb
sbb
lcall
sub
arpl
ret
pop
in
out
mov
cmc
cmpsb
fidivl
subl
cli
std
mov
inc
leave
xlat
out
icebp
jns
in
add
gs
add
mov
pop
das
xchg
fucom
lods
adc
mov
jbe
jbe
aaa
arpl
add
push
clc
std
mov
scas
sub
or
insl
dec
outsl
push
xchg
mov
mov
sub
jae
insl
out
or
repz
inc
negl
cmpsl
insl
stos
mov
sub
add
cmp
jns
imul
loope
inc
cmp
xor
fcompl
mov
xchg
aad
mov
clc
or
imul
cmp
xchg
iret
push
xchg
pop
cli
fimuls
orb
outsb
mov
out
sahf
movsb
mov
push
popf
or
hlt
dec
pop
add
inc
pop
xchg
dec
adc
inc
insb
fistpl
popa
or
lret
ds
pushf
sub
xchg
les
xor
pop
or
mov
test
cmpsb
nop
inc
movsb
pop
filds
inc
mov
cmp
mov
push
mov
cmp
adc
or
das
jno
scas
pop
lds
cltd
jno
pop
cmp
notb
adc
dec
push
inc
into
inc
mov
sbb
in
jne
xchg
sub
sti
fidivs
sti
sub
mov
or
mov
push
pop
mov
xchg
jo
lret
cmp
fdivr
adc
loop
fs
mov
orb
jb
je
sbb
scas
xchg
icebp
sahf
xor
push
inc
dec
push
sub
gs
aam
sub
fcompl
out
adc
iret
mov
pop
pop
adc
fmul
stos
add
jno
pusha
push
fldenv
pop
stc
pop
xor
test
mov
add
iret
dec
call
stos
xchg
jge
xor
xor
je
loope
inc
mov
dec
stos
imul
xchg
sbb
mov
jmp
adc
iret
push
hlt
dec
sahf
push
into
sbb
dec
dec
dec
ja
cwtl
into
lock
inc
push
ljmp
xor
int
or
adc
sub
scas
mov
addr16
in
frstor
pop
test
fidivrs
lret
cmpsb
clc
lahf
pop
cltd
xor
mov
out
sti
mov
scas
popa
loop
fsts
mov
test
sarl
pop
xor
mov
daa
nop
clc
cmp
inc
into
push
imul
lahf
xor
add
aam
cmp
popf
xchg
sar
push
clc
mov
mov
int3
fldcw
dec
sar
movsb
cmc
push
sbb
mov
mov
fidivrl
ret
or
or
add
sub
push
dec
xchg
pop
shlb
popf
popf
fimuls
insb
mov
sbb
js
mov
mov
imul
mov
pop
sti
xchg
push
pop
mov
xlat
push
mov
sub
mov
sbb
rorb
scas
loopne
daa
imul
cmpsb
orb
adc
jae
or
inc
daa
add
jecxz
clc
or
fwait
jp
inc
jnp
xchg
inc
stos
js
dec
xchg
pop
fisubrs
popa
inc
mov
xlat
stos
jo
cmpsl
sbb
fcomps
sbb
cmp
test
pop
in
out
ds
add
sub
outsl
jbe
inc
adc
subl
dec
lret
ficoms
stos
sub
jo
inc
xorl
mov
or
xchg
inc
scas
test
mov
mov
incl
sbb
loopne
stos
or
jg
sahf
out
je
mov
push
addr16
pop
nop
fisttps
xor
and
sub
dec
ss
jmp
daa
out
pop
stos
rolb
xor
pusha
stos
xchg
lds
mov
bnd
insl
jbe
xchg
mov
dec
fsubrs
push
iret
jg
push
icebp
or
sbbb
dec
sub
lcall
mov
inc
xchg
dec
push
mov
addr16
mov
fstpl
jl
movsl
aad
cwtl
jno
ljmp
icebp
sub
sub
call
call
int
pop
loope
pop
mov
mov
fcmovnu
adc
mov
xchg
cwtl
or
pop
sahf
push
cmpsl
or
stos
jp
or
lcall
cmp
mov
jne
adc
cmp
rorb
or
repnz
mov
mull
push
dec
test
call
xor
xor
jne
push
xchg
xchg
push
jae
bnd
es
or
sbb
repnz
ja
pavgb
adc
imul
pop
add
repnz
push
jne
xchg
inc
adc
mov
mov
clc
pop
sbbb
add
aam
movsl
cli
push
adc
push
ficomps
scas
hlt
mov
mov
adc
xor
popf
les
mov
dec
push
pop
push
xchg
add
fbld
hlt
mov
push
repnz
push
aam
mov
lods
mov
adc
pop
addl
mov
aaa
stos
sbb
out
in
xorb
in
push
cs
int
and
mov
push
arpl
and
cmp
andl
jmp
sahf
hlt
mov
dec
fiadds
int
pop
loop
idivb
into
into
pop
cld
xlat
and
flds
iret
push
cmp
dec
mov
mov
mov
pop
jecxz
lea
dec
fcmovnbe
mov
icebp
jbe
out
outsl
mov
mov
mov
push
test
and
or
into
orl
push
xor
dec
sahf
dec
inc
pop
in
cmp
cmp
xchg
in
rcr
pop
cmp
mov
push
shrl
inc
and
xchg
sub
jo
xchg
sub
pushf
stc
cmpsl
pop
cmpsb
fmuls
movsb
dec
inc
roll
aad
jne
pop
repnz
xor
repnz
xor
pop
lea
cmp
xor
push
add
jnp
pop
push
insb
and
xchg
xor
arpl
mull
mov
lret
pop
inc
lea
jne
lock
repz
sub
inc
pushf
sbb
mov
add
daa
cmp
push
mov
or
pop
jg
or
sbbb
fwait
nop
push
std
or
cmp
jge
fstpl
sub
dec
pmaddwd
insl
jo
push
negl
stos
lcall
xor
sbb
and
ljmp
test
xchg
rclb
push
call
movsl
or
movsl
repnz
pop
aaa
or
addb
inc
xor
pop
addb
or
mov
xorb
pop
loopne
xorb
lds
iret
fdivl
cmpsb
jg
jecxz
push
add
mov
insb
sahf
adcl
dec
imul
and
cltd
addr16
mov
jb
jo
cwtl
loop
sbb
fistl
xchg
vmcall
mov
jge
cld
fisubl
mov
push
xor
sbb
sbb
adc
inc
loope
inc
outsl
lcall
out
js
rcrl
mov
dec
xor
imul
mov
nop
jmp
or
inc
add
xlat
or
std
call
adc
fcompl
vmaxps
js
add
imul
push
mov
fsubs
movl
push
sahf
pusha
fdecstp
movsl
movsb
cmp
xchg
and
addr16
daa
mov
orb
test
push
fisttpl
push
clc
pop
loope
les
and
push
fidivs
pop
mov
inc
lds
icebp
dec
xchg
out
xchg
and
cmp
sub
dec
jb
movb
mov
dec
fld
data16
push
movsb
or
xor
popa
scas
push
jns
aad
xchg
dec
jo
jp
sub
addl
push
inc
or
rol
arpl
es
push
imul
lea
outsl
int
incl
aad
inc
xor
sbb
dec
inc
add
icebp
mov
imul
mov
push
add
sbb
scas
cmp
pop
lea
cmc
loope
xor
insl
pcmpgtb
je
stos
dec
sub
jno
lods
inc
sub
enter
mov
mov
ljmp
or
and
adc
xchg
dec
ss
push
std
cmc
pop
cmpsb
pop
mov
add
push
xchg
push
mov
mov
jecxz
pop
sub
jns
mov
sbb
out
cmp
xor
int3
addr16
dec
sub
pop
push
xchg
jge
inc
std
dec
test
sbb
pop
adc
pop
mov
inc
jno
std
mov
data16
xchg
jl
jg
adc
sub
pop
jb
pop
cmp
js
shrb
daa
shlb
cli
in
pop
or
mov
loopne
add
fwait
and
mov
inc
movsb
dec
jg
fcmovnbe
fstp
call
pop
mov
adc
lds
int
push
cld
repnz
popa
pop
loopne
dec
int3
cmp
inc
mov
jl
push
cli
test
inc
pop
xchg
repz
jae
fcompl
jp
out
jecxz
xor
inc
add
mov
das
ljmp
into
add
cmpsb
dec
addb
pop
xchg
stos
daa
dec
out
or
jns
xchg
adc
jno
pop
aad
out
add
cwtl
fbld
cmpsl
cmp
xchg
test
out
xchg
inc
fdiv
adc
push
cltd
adc
cltd
xor
lret
addr16
push
rcr
jns
enter
mov
push
and
out
das
pop
ljmp
dec
call
bound
pop
pop
out
out
fists
ds
sbb
out
jne
ret
jle
outsl
push
imul
imul
jo
fucomip
mov
push
jnp
pop
lock
lahf
dec
sbb
cli
js
mov
dec
ljmp
cmc
add
movsb
mov
hlt
imul
sbb
and
cmp
jp,pn
call
xor
cmp
sbb
stos
dec
xor
inc
outsb
sarb
dec
and
orl
add
nop
mov
jbe
dec
jl
add
int
inc
push
aad
sub
jns
xchg
jae
push
outsb
fsubs
mov
movsl
test
jecxz
into
call
adc
jbe
inc
cld
movb
jns
add
sub
sub
push
test
out
adc
adc
adc
cwtl
div
xchg
cmp
jge
inc
stos
adc
sti
adc
xchg
int3
push
pop
add
pop
xchg
in
addr16
xchg
inc
subb
les
mov
dec
movb
out
add
xor
push
push
shrb
ds
or
push
adc
sbb
repnz
je
mov
mov
ret
xor
cli
scas
jae
js
pop
jae
push
push
inc
push
xchg
xor
scas
mov
inc
test
std
cmpsb
fisubs
mov
sahf
cmpsb
lahf
in
sbb
dec
jl
inc
jbe
fidivrs
arpl
movsl
push
arpl
dec
inc
into
push
sti
repnz
adc
xchg
pop
rorb
push
jno
adc
addr16
adc
adc
xor
in
fiadds
inc
mov
push
out
in
add
push
pushf
jmp
shll
scas
ret
fwait
mov
dec
aaa
aaa
pop
push
shrb
sub
pusha
cmp
push
lea
fists
xorb
mov
shld
lcall
ljmp
dec
mov
inc
sbb
rcll
es
mov
fwait
sub
cmp
push
or
push
imul
inc
in
sti
mov
and
sub
test
pop
shrl
push
adc
out
mov
xor
mov
js
cmp
sbb
mov
xor
fldt
cli
call
xor
jle
insb
xchg
out
sub
sbb
mov
out
out
sbb
sub
mov
mov
in
and
aas
or
negl
icebp
xchg
sti
push
xor
inc
stc
and
adc
adc
stos
mov
cmp
xchg
add
or
xchg
js
xor
nop
popa
data16
push
mov
jo
dec
pop
rorl
cmp
fsubrl
add
ss
mov
mov
sub
loop
xor
mov
lret
cmp
jmp
enter
lahf
mov
inc
scas
push
mov
je
add
mov
int3
pop
add
sub
mov
mov
cmp
xor
test
dec
or
cltd
cmp
push
lds
aas
ljmp
xchg
lcall
xor
scas
mov
fcmovnb
xor
out
mov
popa
cmp
fcompl
pop
shll
mov
call
jne
scas
ret
xchg
lds
cmp
adc
lock
push
lock
xor
mov
xor
sub
jne
out
and
mov
inc
inc
popf
and
or
xchg
and
xor
sub
std
arpl
xor
inc
je
scas
sbb
dec
ds
dec
push
adc
cmp
jp
imul
xlat
mov
ljmp
xchg
mov
shrl
jno
mov
mov
jle
mov
lea
mov
loop
in
mov
out
std
mov
pushf
xlat
mov
mov
lret
stos
mov
inc
and
stos
stc
lea
scas
ja
mov
lods
add
jmp
add
mov
push
xchg
in
xchg
mov
pop
xchg
xchg
mov
cmp
pushf
outsb
xchg
arpl
nop
mov
cmp
push
sti
push
xchg
mov
adc
mov
mov
mov
pop
sbb
testl
mov
xlat
ss
or
gs
dec
inc
jl
lock
cltd
add
clc
push
push
push
fbstp
stos
push
or
test
sahf
sbb
and
nopl
sbb
ret
mov
fnstsw
or
push
fnstenv
sbb
push
leave
lods
xchg
arpl
int3
leave
and
mov
and
ret
add
mov
imul
and
in
xor
loope
out
xor
repnz
fs
imul
and
addb
jbe
sub
jno
js
out
jns
mov
aam
andl
pop
ret
cmp
sarb
test
mov
imul
into
mov
call
pop
mov
or
sbb
aas
sub
sbb
xchg
push
into
jns
lahf
mov
sub
es
repz
jnp
mov
jo
rcrl
and
mov
icebp
xor
fnstcw
sti
aam
jns
sub
sub
mov
addr16
in
dec
ljmp
jp
xchg
lods
mov
iret
add
gs
sarb
data16
mov
loope
inc
adcb
pop
sbb
fists
std
pushf
lret
fildl
push
je
cmp
or
mov
dec
divl
subb
ja
xchg
xchg
and
out
mov
mov
xor
jns
fwait
ljmp
dec
lds
xor
or
add
fwait
popa
cwtl
into
test
or
pop
or
and
adc
inc
or
inc
sub
adc
test
in
aaa
loop
lea
push
rolb
and
out
inc
xchg
add
mov
int3
shlb
mov
xchg
in
xchg
mov
push
jl
lret
cmpsb
loope
xor
aam
cwtl
rorb
aad
cmp
xchg
sbbl
xchg
enter
aad
repnz
jmp
jb
gs
lret
mov
aam
sbb
mov
push
rcl
mov
imul
mov
mov
leave
and
jae
in
jge
and
mov
xchg
out
into
enter
push
inc
fisubrs
das
fs
sbb
bound
clc
sub
fbstp
mov
imul
or
add
pop
dec
dec
xchg
xchg
sub
inc
sub
dec
adcb
retw
xchg
xchg
fstps
ljmp
jns
sbb
cmp
sub
adc
lcall
and
or
cmpsl
cmp
int3
jo
lock
mov
push
mov
cmp
fdivl
cmpsl
and
mov
ja
or
aas
inc
inc
dec
test
int
push
push
or
xchg
filds
int3
ljmp
sarl
xchg
push
pop
inc
inc
pop
xchg
jge
js
jl
sbb
ljmp
sbb
jg
jmp
repz
scas
mov
cmpsb
gs
jns
mov
sbb
xor
mov
stos
mov
xor
push
mov
ss
pop
rcrb
mov
xchg
sub
nop
lock
arpl
js
or
mov
push
fstps
movsb
adc
push
ret
dec
jge
mov
testb
push
xchg
andl
add
mov
and
lcall
cmp
adc
fimull
sub
ss
pop
jno
xor
out
pushf
aam
and
inc
add
ret
push
jo
rcll
shlb
and
stos
sahf
and
scas
shl
into
jbe
inc
mov
fs
sbb
out
loope
loope
imul
ftst
inc
fcmove
mov
fs
push
dec
scas
push
mov
ss
and
aas
imul
mov
sahf
sub
push
out
add
cmp
int
fdivrs
sub
mov
jae
sbb
add
inc
pusha
pushf
dec
sahf
adc
mov
sub
test
jecxz
mov
int3
popf
mov
mov
fisubrl
arpl
movsl
enter
mov
lods
inc
and
push
leave
imul
je
xor
or
iret
lods
and
add
add
adc
lods
and
es
sbb
test
fsubrl
daa
int
rorl
mov
int3
or
push
daa
pop
lods
lret
int
faddp
imul
cmpsl
push
arpl
out
into
jne
xchg
cmpsl
dec
pop
and
xchg
mov
mov
ja
xchg
dec
and
sbb
mov
mov
nop
loop
stc
rcl
mov
mov
stc
dec
cmc
cli
fistpl
push
pop
aaa
loope
in
push
adc
ds
xor
mov
out
xchg
sub
push
lock
pusha
aaa
cmpsl
imul
mov
adc
xchg
mov
xchg
jle
mov
inc
push
cwtl
shlb
movsl
push
jb
jmp
out
mov
aam
notl
aam
push
lret
inc
and
pop
sbb
adc
mov
adc
lock
iret
jns
ljmp
dec
mov
iret
fdivl
cmp
jle
mov
imul
sbb
sub
adc
mov
jg
add
add
sbb
or
ss
adc
pop
std
inc
stc
adc
stos
lahf
push
jne
push
xor
cmp
int3
das
stos
lods
cmc
in
or
cmc
scas
mov
not
xor
mov
outsl
repz
pop
pop
clc
xchg
inc
xchg
ffreep
in
mov
push
mov
sub
fdivl
cmp
lds
mov
notl
popf
stc
xchg
pop
mov
js
jl
dec
outsb
out
dec
stos
lcall
mov
xchg
mov
sbb
xchg
adc
insb
mov
sti
dec
cmp
data16
inc
push
adc
out
je
and
bound
clc
in
imul
ficoml
push
and
sarb
add
ljmp
xor
jle
repnz
addr16
jno
mov
rcll
andb
jp
jmp
fmul
hlt
rcl
fnstsw
les
repnz
popf
stc
jp
mov
pop
jne
push
subl
push
jbe
xor
mov
xchg
pop
xchg
jne
mov
out
insl
js
add
sbb
or
test
cwtl
pop
inc
and
cmp
sbb
pop
arpl
shlb
andb
rcrb
push
shll
and
mov
add
add
test
aam
pop
push
jp
pop
loopne
mov
jmp
arpl
jmp
dec
repnz
das
sbb
xor
add
mov
cs
push
test
sub
cmp
mov
mov
inc
jecxz
inc
out
add
int
pop
mov
cmp
cmp
and
mov
dec
popf
aam
mov
test
testb
imul
cmp
or
jb
sub
sub
sub
lahf
mov
loope
jle
bound
int
jno
push
fadds
ret
mov
mov
imul
out
jae
fistps
inc
lock
dec
repz
inc
mov
pop
xor
add
test
push
pop
mov
scas
xchg
and
adcl
xchg
out
cmc
xchg
testb
out
mov
sti
fbstp
xor
std
mov
fs
push
or
xchg
jecxz
cmp
cmpsl
inc
dec
jno
cmpsb
xor
fbld
jno
cmpsb
les
xor
adc
jg
pop
psubb
lret
pop
ds
push
push
shrb
inc
adc
ficomps
movsl
mov
xchg
das
insl
test
sbb
inc
adc
mov
add
int
push
scas
and
subb
jns
cmc
jmp
xchg
adc
pop
mov
sub
jecxz
call
adc
fidivl
jle
or
ror
fidivs
xor
and
hlt
inc
dec
mov
les
sub
and
xor
pop
and
xor
decl
je
xchg
leave
sbb
cmp
mov
cmpsb
sub
xor
sub
mov
idiv
sub
in
cwtl
adc
mov
int
into
sub
mov
xor
sub
insb
ficomps
sub
fnstenv
fisubs
xchg
mov
aas
inc
xor
inc
loopne
mov
enter
pop
sbb
lret
adc
push
inc
cmp
in
lds
cltd
xchg
mov
add
mov
popa
and
imul
fsubs
lahf
and
xchg
push
jmp
xchg
pop
shlb
mov
arpl
fisttpl
imul
jb
dec
filds
aam
daa
dec
sub
inc
mov
std
or
mov
mov
ret
adc
xchg
jo
xchg
push
inc
cld
loopne
push
inc
addb
lea
lock
cmp
ret
fildll
jmp
sbb
xor
mov
mov
gs
pop
jl
pushf
dec
add
inc
cmp
adc
cmpsl
xlat
push
mov
call
and
sbbl
xor
or
cltd
jecxz
dec
push
addr16
es
mov
push
test
cmp
clc
dec
push
dec
dec
mov
xor
rcr
sub
popf
ss
xor
test
test
pop
cmpsl
sub
pop
push
mov
test
jo
movsl
cmp
outsb
je
cltd
test
mov
scas
les
xchg
test
sub
shll
push
fcomps
leave
loope
jae
out
add
out
push
xchg
or
nop
repz
jno
pop
sarl
push
out
add
jo
lods
out
sbb
ja
lods
leave
sti
jmp
mov
jbe
cmp
xchg
inc
filds
add
in
in
aad
add
test
cmpsb
jp
mov
push
arpl
arpl
loop
sub
insl
add
repz
out
add
push
mov
fadd
xchg
or
adc
adc
leave
xchg
push
push
jno
xchg
ljmp
or
mov
inc
add
xchg
in
addl
shlb
adc
lea
dec
inc
push
lods
or
decl
mov
inc
dec
dec
pop
mov
xor
popa
mov
ss
push
xor
push
push
dec
push
xchg
cmp
jnp
lods
mov
jnp
int3
add
cli
jmp
dec
ficoml
adc
fdivrs
test
repz
mov
inc
mov
test
sub
loop
and
data16
sbb
xlat
jg
lcall
test
scas
and
xor
stc
es
mov
popa
or
repnz
das
ja
pop
xor
nop
cs
inc
jmp
es
xchg
les
rol
andl
pop
icebp
add
lds
loope
mov
icebp
mov
xlat
cltd
sub
mov
into
shll
push
insb
daa
aad
mov
push
mov
clc
xchg
pop
clc
or
xchg
movsl
push
pushf
mov
out
pop
or
mov
outsl
xchg
dec
pop
lock
dec
test
lcall
xchg
push
sbb
mov
aas
dec
and
cmp
les
pop
ret
call
popf
cmp
pop
aad
cmp
mov
sbb
daa
mov
das
jp
jge
mov
clc
mov
push
out
loopne
sbb
mov
lds
cwtl
cmpsb
xchg
mov
dec
cltd
pusha
lds
inc
jns
int
xor
xchg
rcrl
sahf
enter
addr16
or
xchg
mov
dec
test
movsb
push
xor
stos
cmp
testb
mov
mov
sti
test
dec
in
decb
je
pusha
jecxz
je
movsb
es
jno
mov
je
xchg
cmpb
negb
aam
andb
pop
pop
adc
xor
in
cmp
pop
imul
jl
xor
fstp
popf
mov
xchg
xchg
mov
mov
xor
xchg
jecxz
adc
jno
out
bound
mov
sbb
jge
xchg
lods
addr16
cs
pop
xor
pmaxsw
daa
inc
arpl
aad
lret
cs
adc
pop
dec
call
aam
js
xchg
push
clc
int
xor
shrl
loop
inc
mov
sub
adc
movsb
mov
inc
jle
cmp
pop
cltd
fisubrs
ds
adc
pop
psubusb
mov
sub
or
jmp
xchg
push
xor
push
push
aaa
or
push
mov
lea
js
int
mov
sbbb
mov
adc
fsubs
in
push
fadds
and
clc
pop
sbb
inc
mov
sti
lcall
mov
int3
xor
popa
jp
ds
pop
fidivs
push
jle
lock
sub
push
rol
mov
push
jl
cmp
cmp
and
aas
loope
inc
pop
shl
push
inc
pushl
cmp
pop
and
pop
jnp
xchg
dec
xchg
mov
jmp
in
mov
adc
lods
imul
repnz
push
mov
mov
gs
adc
test
xor
xchg
lods
nop
xorb
xchg
inc
adc
into
sbb
popf
mov
mov
sbb
mov
flds
or
pop
cmp
test
hlt
cmc
pop
xchg
pop
and
test
sub
data16
add
lods
lods
push
lahf
sbb
cwtl
popa
fld
leave
stos
cmpsb
adc
sbb
fists
mov
fstpt
syscall
xchg
cmpb
pop
cmpsl
lods
lahf
sbb
je
stc
cld
or
mov
lret
sub
pop
icebp
shrb
movsl
idivl
lock
push
flds
sahf
push
mov
sbbl
or
cmp
cltd
add
lock
jae
jno
rorl
dec
lds
insl
sbb
and
and
cltd
jge
lds
jecxz
insb
leave
pop
sbb
jmp
pop
out
cmp
ljmp
dec
and
jmp
enter
mov
mov
jmp
adc
fmull
push
push
ds
add
call
push
pushf
cmovl
data16
shrl
fistpl
pop
cmpsb
sti
xor
fcoml
pop
adc
cmp
inc
dec
mov
loope
es
popa
jle
aam
jae
lea
dec
cmp
lea
push
jp
and
in
inc
std
jecxz
mov
inc
mov
movsb
inc
xor
js
out
testl
fwait
mov
jnp
ficoms
pop
adc
mov
push
inc
or
scas
xchg
xlat
into
cmpsl
mov
sbb
dec
push
enter
lods
arpl
in
push
movsb
lods
int
in
xor
lret
sbb
mov
pushf
scas
loope
leave
or
pop
xlat
or
push
pop
outsb
jmp
enter
or
mov
mov
fsubrs
sub
shl
jge
jbe
stos
sub
fldl
into
jmp
pop
ret
push
jmp
arpl
push
in
insb
jp
pop
pop
sti
loopew
notl
movsl
xchg
mov
sbb
jmp
dec
xor
lea
xchg
sbb
mov
test
pop
movsb
pop
mov
imul
mov
xchg
xsaves
or
js
jmp
loope
sti
aaa
xor
stos
popa
cmp
and
int
push
fnstsw
insl
sbb
cmp
push
aad
je
xchg
mov
jp
in
daa
add
popa
cmp
cmp
cld
jae
lahf
mov
and
mov
push
test
jo
rorl
adc
mov
bound
out
mov
or
cld
das
mov
in
mov
xchg
fdivrs
mov
dec
fbld
pop
fcompl
mov
dec
repz
xchg
adc
sub
js
sbb
lods
xchg
mov
mov
cmpsb
dec
aad
int3
arpl
mov
in
dec
jmp
push
mov
xor
jb
xchg
push
je
adc
mov
jmp
add
push
xor
jmp
dec
test
lock
scas
aad
mov
or
jbe
sarb
sbb
int3
test
mov
push
ficompl
fisttpl
jne
and
push
adc
or
or
mov
ja
dec
pop
es
loopne
mov
movsb
test
sub
leave
push
inc
mov
fucom
in
je
testb
push
fcomps
lds
out
sub
int3
js
test
pop
xor
xchg
cltd
mov
mov
sbb
movsb
xor
outsl
pusha
dec
push
and
data16
sub
push
push
stos
fstps
ss
movsl
dec
cmp
xor
sbb
mov
pop
and
pop
pop
mov
and
add
mov
push
xor
lock
mov
xor
int
in
pushl
popa
ret
push
add
mov
in
xchg
orl
hlt
out
aaa
lods
push
add
loop
js
dec
jb
out
mov
loope
fcomps
xor
dec
dec
into
mov
xchg
mov
fs
imul
pop
adc
jmp
ds
inc
std
pop
es
jmp
sub
fisttpl
mov
push
fcomi
movsb
cmp
adc
subb
or
imul
ret
scas
dec
cmp
pushw
mov
shlb
lock
jne
lock
test
cmp
or
movsb
xchg
or
xor
jne
dec
jo
jne
fs
test
jge
pop
push
cmc
adc
jecxz
sbb
add
std
pop
mov
pop
mov
cmp
lds
mov
sub
out
mov
adc
mov
and
jae
cmp
cmp
xchg
sti
icebp
js
cmpsl
dec
or
mov
inc
daa
mov
push
jecxz
sbb
cwtl
push
add
inc
rcl
adc
sbb
mov
leave
xlat
pop
out
loope
adc
jne
imul
movsl
sbb
mov
push
mov
mov
shrl
fbld
push
popf
sar
lock
scas
ljmp
psubsw
fstpt
pusha
fsubrl
mov
leave
cmp
dec
in
stc
adc
mov
mov
sahf
fisubrl
mov
mov
push
pop
xchg
xchg
clc
roll
vpcmpeqd
jge
das
and
pusha
fcomi
mov
jb
xor
imul
dec
adc
push
lahf
out
pop
rclb
cmp
jge
jge
pop
scas
mov
cld
or
mov
xlat
push
ss
xlat
clc
mov
std
mov
repnz
test
lret
dec
xchg
pop
popa
xor
mull
lds
sub
jnp,pn
shll
sub
imul
jae
add
dec
or
add
xchg
jle
xchg
popa
popa
scas
sub
jle
dec
pop
fcmovb
jecxz
divb
adc
adc
scas
or
and
xchg
or
imul
outsl
dec
pop
aas
xchg
ss
je
jb
sub
enter
shll
fs
lcall
ljmp
mov
pop
jp
in
xchg
das
sub
push
lock
pop
mov
popf
dec
pusha
xchg
dec
mov
xor
mov
adcl
addps
scas
es
imull
test
mov
push
or
mov
out
outsl
jno
inc
out
ret
int3
aaa
sbb
ficomps
jge
iret
jecxz
mov
push
inc
sti
mov
jbe
sbb
jnp
int3
and
dec
jns
sar
popf
ds
and
mov
aam
push
dec
jno
pop
xor
test
mov
loopne
sub
adc
lods
xor
out
cmp
aas
inc
cmovnp
inc
dec
cs
rorb
imul
xchg
in
and
fdivrl
and
ffreep
jno
subl
shll
call
aad
data16
aam
inc
insb
and
mov
jecxz
iret
aam
lea
hlt
repz
sbb
mov
popf
cmp
jo
lahf
rolb
shl
add
jbe
and
es
push
xor
push
inc
push
fadd
shrb
int3
inc
or
pop
push
mov
push
xor
mov
sti
mov
push
sbbl
adc
shlb
mov
and
lahf
jno
push
repz
pusha
lds
or
notb
aad
scas
jae
sub
add
bound
gs
push
xor
sbb
mov
push
pushl
rclb
and
orb
cmp
movsb
jmp
jo
out
aam
fwait
insb
cmp
dec
addl
mov
sbb
mov
xchg
pop
push
inc
sub
xorl
sub
in
data16
lret
sub
int
jmp
es
dec
xlat
lea
ds
sbb
lods
pop
ljmp
ja
test
nop
ret
cld
cmpsl
sbb
xchg
push
jg
inc
mov
inc
add
jno
negb
xchg
cmc
dec
mov
mov
jmp
popf
int
cmp
pop
push
xor
test
push
stos
jb
dec
and
cmp
inc
aad
lret
test
test
stos
xchg
push
sarb
sbb
fcmovnb
jns
fwait
xchg
adc
sub
daa
and
ljmp
sub
shll
jnp
orl
scas
aad
push
loop
es
dec
mov
add
push
mov
insb
jb
sub
xchg
cs
xor
rcll
mov
enter
rdtsc
xchg
andb
add
add
out
je
loopne
dec
mov
imul
jns
vmovd
aaa
scas
in
enter
int3
cmp
insb
xor
out
call
mov
inc
test
test
dec
add
mov
inc
in
out
push
cmp
and
mov
jmp
fisttpl
jl
insb
sbb
test
fnstcw
mov
pop
repnz
mov
jge
lret
jmp
in
stos
scas
fidivrl
and
fldenv
js
jge
jmp
test
xchg
mov
stos
xor
sti
pop
sub
jnp
or
jg
mov
js
xor
mov
jne
mov
out
push
aas
sub
into
scas
push
das
sahf
cwtl
fbstp
inc
mov
pusha
adc
push
jns
fcoml
inc
pop
in
movsb
fsts
mov
daa
ret
jg
into
push
in
push
fisttpll
pop
jo
rcl
imul
sub
or
cmpsl
jmp
cmp
je
sbb
xor
jb
and
or
sahf
mov
xor
pop
sbb
cmp
fs
lret
mov
scas
inc
cmp
movsb
gs
inc
pop
cmp
adc
dec
and
add
out
mov
or
and
scas
sbb
test
mov
cltd
cmp
lcall
jo
jg
inc
mov
xchg
ret
sub
test
dec
push
sarl
mov
adc
sub
mov
clc
add
jns
mov
idivb
cwtl
pusha
dec
mov
jnp
shl
mov
mov
mov
cmpsl
xorb
cmp
push
mov
mov
cld
xlat
imul
pop
testl
sub
gs
ja
lret
test
jmp
shll
mov
ds
mov
and
or
cmp
inc
jg
out
daa
andb
mov
iret
inc
subb
aad
shrb
or
or
jbe
outsb
inc
icebp
nop
pop
jne
fimuls
xlat
ss
test
mov
push
mov
pop
pop
iret
in
add
adc
xchg
leave
iret
test
repz
mov
sub
scas
mov
sbb
adc
mov
jae
mov
ds
push
or
adc
imul
imul
ss
mov
cltd
jl
mov
mov
inc
pop
push
pop
lock
scas
pop
out
mov
lret
ja
jnp
adc
outsl
lods
sbb
xor
sub
mov
sti
fcoms
sub
mov
ja
push
mov
dec
std
push
xchg
xchg
cmp
sub
xchg
dec
movsb
cwtl
hlt
mov
push
sahf
add
imul
popf
push
rolb
or
xor
lock
pushf
or
mov
loopne
mov
xor
inc
pop
pop
iret
adcb
cmp
jns
hlt
xchg
mov
loope
movsl
inc
vpcmpgtb
jecxz
sbb
pop
roll
sub
mov
aas
inc
mov
ds
ds
hlt
cmp
mov
mov
push
shrb
cmpsb
pop
jg
popf
jge
lock
lcall
test
inc
inc
mov
mov
mov
ret
cli
loop
fs
movsl
xor
fwait
xchg
adc
inc
stos
xchg
xchg
rol
es
and
or
inc
xchg
and
fdivrs
cmp
cmc
pop
int
xchg
xorb
sub
ss
loope
and
mov
xchg
out
push
mov
jle
insl
mov
and
xchg
jl
pushf
xchg
xchg
xchg
push
addr16
cmp
xor
incb
insb
es
fsub
fs
hlt
xchg
add
sub
mov
mov
add
stos
rclb
xor
pop
push
arpl
popa
cld
out
call
lock
or
and
push
jp
mov
imul
stos
xchg
movsb
ljmp
mov
lret
push
lret
push
out
jge
pop
add
push
add
push
fnstcw
xchg
stos
std
in
xchg
or
outsl
pop
pop
sub
pop
inc
mov
mov
pop
push
out
movsb
stos
mov
test
aam
jp,pn
cmp
and
jle
int
sub
and
shlb
data16
sbb
popa
dec
in
int
xchg
sahf
fwait
mov
popf
xchg
fmuls
fwait
test
mov
ret
mov
xor
stos
testb
mov
mov
lods
inc
mov
sub
sub
mov
pop
adc
mov
mov
sbb
in
lret
jl
out
mov
pop
lret
mov
xor
mov
pop
inc
xor
repnz
xchg
into
add
dec
lods
fidivs
fisubrl
sub
push
or
push
lods
adc
cld
filds
mov
ret
lahf
sub
jae
adc
daa
sarl
inc
ss
dec
mov
xchg
mov
sub
push
cmp
lcall
pop
adc
loop
call
adc
in
insb
movsb
pop
fsts
iret
add
push
loopne
scas
mov
das
orl
ljmp
inc
in
out
mov
js
out
in
inc
test
pop
xchg
shl
jo
jno
ds
jne
aas
pop
sub
jmp
popf
out
cmpsb
add
or
xor
daa
push
xchg
pop
nop
int
cmpsl
das
jno
mov
fistpl
mov
cli
sbb
and
mov
nop
clc
mov
cmp
adc
push
sbb
sub
jns
pop
ret
xchg
xor
mov
fdivl
xchg
cmp
sub
lret
test
inc
inc
dec
dec
out
pop
xorb
mov
push
and
sbb
inc
mov
es
in
mov
push
clc
inc
nop
or
popa
add
sub
das
jbe
adc
aaa
jb
jmp
gs
decl
jge
dec
xchg
mov
jns
xchg
in
add
sub
hlt
rorb
mov
jl
push
mov
mov
or
add
mov
gs
sti
test
pop
loop
testb
mov
leave
lahf
fcoms
roll
cmp
jecxz
mov
push
dec
mov
jl
pop
out
pop
aad
inc
ja
lea
decb
push
ror
jb
or
jns
in
sub
aam
cmc
call
inc
imul
sbb
addr16
lods
ret
cmp
lret
jle
xchg
sub
push
sbb
mov
scas
and
leave
psubsw
test
test
adcb
push
sbb
sahf
add
insb
or
mov
mov
lcall
mov
repz
and
xor
xor
ja
cmp
into
lea
mov
push
push
mov
fcmovnu
jae
mov
dec
icebp
jae
mov
lret
pop
mov
xchg
arpl
jae
xor
pusha
add
sub
ret
fistpll
xor
std
mov
or
push
inc
cmpsb
dec
neg
dec
insl
ret
stos
aam
mov
lea
inc
in
add
pushf
outsb
sub
outsb
mov
push
int
inc
lods
xor
xchg
or
repz
popf
push
inc
mov
int3
les
adc
stos
mov
clc
std
mov
push
pop
cmpsb
mov
jo
subl
in
fxch
inc
xorb
scas
push
scas
push
xlat
xchg
mov
pop
movsl
test
mov
inc
xchg
aas
adc
mov
push
iret
mov
lcall
mov
roll
adc
das
push
cmp
mov
jno
stos
movsb
gs
mov
mov
jmp
xor
outsl
outsl
ret
fildll
imul
aad
enter
adc
add
mov
fbstp
push
sub
push
inc
mov
cld
mov
xchg
push
mov
mov
adc
in
dec
repnz
add
test
fsub
jge
jmp
mov
cwtl
inc
leave
iret
cwtl
dec
lahf
mov
out
xchg
outsl
ror
iret
das
sbb
add
jp
xchg
shrl
xchg
cld
pop
jo
aad
xor
dec
jl
stos
mov
mov
lods
call
jecxz
inc
int3
xchg
xchg
xlat
or
fs
mov
cmpsb
jmp
adc
jo
pop
bound
dec
mov
lret
and
jg
adc
std
pushf
jge
push
les
hlt
sbb
inc
loop
loope
imul
fbstp
fmull
das
cmc
lcall
je
addr16
push
fsts
das
or
xchg
into
inc
and
sbb
fisubl
data16
lods
cmpb
and
fstpt
lock
or
xchg
fwait
mov
outsb
jne
xor
push
pop
out
mov
pushf
mov
xchg
cld
mov
and
aaa
cmpb
inc
sbb
outsb
stos
jo
push
mov
or
push
es
inc
stos
push
call
adc
rcrb
mov
outsl
mov
jecxz
dec
leave
fnstcw
lret
sar
mov
cmp
mov
xor
cld
sub
and
push
sub
cmp
jne
sarl
push
jbe
cwtl
sbb
pusha
divb
jle
add
inc
fs
repz
cli
add
xor
pop
outsl
leave
es
insl
arpl
notb
and
mov
mov
fcomp
mov
shl
jno
ret
roll
and
dec
sub
ja
aas
or
jnp
leave
out
mulb
mov
lret
pop
jno
mov
loopne
push
pop
jno
push
push
arpl
mov
fwait
or
cmp
lods
imul
jno
popf
dec
rcl
test
pop
mov
lcall
cmp
adc
fimuls
stos
cli
divl
sub
jb
fwait
push
pushf
call
inc
inc
int
xor
movl
push
movsb
pop
imul
out
cltd
inc
outsb
sbb
jo
push
pop
adc
rclb
stc
ret
sbb
mov
push
cmp
shll
jmp
push
mov
leave
lods
push
insl
inc
cmp
call
fs
shlb
mov
push
dec
data16
xor
mov
es
cmpsb
pop
push
push
add
fcmovb
mov
jecxz
sub
scas
jo
pop
pop
and
jo
cmp
add
mov
rorl
mov
mov
rorb
je
push
int3
repnz
pusha
mov
xor
jle
add
sub
inc
imul
pop
clc
xor
aas
mov
mov
add
cli
ds
xchg
or
pop
add
and
jne
cltd
pop
repz
dec
in
nop
pop
xchg
ja
pop
lds
and
inc
lret
call
bound
outsb
xlat
xor
test
adc
sbb
enter
xor
fisubs
mov
roll
hlt
inc
shl
mov
jnp
sti
ja
xor
cmp
lods
std
mov
adc
lea
xor
es
movsl
adc
or
push
jle
fbld
test
lds
lret
lea
add
cltd
inc
mov
sub
pusha
movsb
pop
ss
fsubr
push
bound
sbb
jmp
fs
nop
scas
fst
sbb
adc
jl
add
pop
mov
cmp
mov
jne
or
cmc
mov
mov
adc
in
mov
sbb
inc
js
or
ret
out
mov
xchg
aam
mov
faddl
mov
inc
sbb
cmp
push
out
test
dec
jg
stc
cs
sbb
stos
inc
rcl
ret
and
mov
jbe
shlb
sbb
pop
xor
pop
int
add
sahf
test
clc
or
or
push
xchg
sarb
xchg
jmp
push
and
das
mov
add
test
in
mov
pop
fcomip
dec
jns
sub
and
loopne
add
cltd
in
call
mov
lret
sub
cs
mov
mov
mov
or
jmp
sarl
jo
push
or
das
and
mov
int
bound
pop
sbb
hlt
mov
cs
enter
and
js
cmpb
lods
fisttpll
daa
adc
sbb
mov
nop
cmpsl
in
sub
push
and
lret
cmp
mov
push
lcall
in
mov
rorl
xor
mov
xchg
scas
or
mov
lock
pop
in
xchg
pop
lret
or
cmp
fidivrl
mov
das
dec
inc
sub
jns
inc
popa
repz
cmp
or
add
adc
cmp
pop
aam
or
or
daa
ret
roll
pop
pushf
mov
lcall
mov
pop
jle
xchg
mov
mov
adc
dec
cmp
lock
pushf
mov
mov
mov
popf
mov
mov
leave
fimull
popf
sub
mov
push
mov
lods
add
aad
gs
xchg
imul
les
xchg
das
sub
pop
xchg
cltd
jb
mov
sarl
add
sti
call
pop
out
ret
push
add
lret
xor
mov
sbb
in
shlb
sbb
lods
dec
ficoml
addr16
lret
push
dec
fldcw
mov
insb
enter
mov
ds
pop
mov
pop
aam
add
cmp
scas
std
push
in
sub
pop
or
shlb
xor
pop
hlt
xchg
push
or
push
ret
test
es
pusha
int
jb
pop
mov
jecxz
or
cmp
mov
sarl
fs
les
test
mov
aaa
nop
adc
cltd
dec
sub
xor
lahf
movsl
movsl
fwait
dec
jno
pop
add
pop
mov
jnp
sbb
sub
clc
scas
inc
mov
adc
sti
std
test
jnp
push
mov
mov
cmpsb
ret
pop
lods
aam
cmp
fiaddl
imul
and
sbb
jp
jae
mov
cmp
loopne
mov
or
lret
xchg
dec
jecxz
adc
enter
iret
imul
loop
mov
inc
repz
in
push
in
cmc
ror
cwtl
and
pop
mov
push
iret
jl,pt
cmpsb
in
loopne
push
mov
sbb
bound
add
mov
xchg
add
dec
xchg
mov
xor
movsb
mov
out
sub
imul
imul
test
jmp
subl
dec
adc
sti
cld
sbb
xor
bound
mov
adc
inc
movsb
in
jno
jns
negl
insb
xchg
pop
cmpsl
hlt
push
loope
shlb
sub
and
dec
inc
in
arpl
mov
insb
pop
cmp
cmpsb
add
sbb
mov
clc
fs
pop
in
mov
inc
in
lods
std
rolb
adc
adc
jns
and
pusha
out
and
mov
repz
fnstenv
mov
pushf
xor
daa
adc
cltd
test
repz
adcl
popf
lret
jecxz
pop
out
xchg
jbe
adc
xor
push
je
fdivs
or
push
push
or
or
lret
aam
jbe
hlt
inc
enter
push
or
dec
hlt
aaa
aad
inc
and
icebp
iret
aam
inc
les
mov
sti
mov
arpl
cmp
andb
push
fdivl
cmp
ret
push
sub
scas
jnp
popa
sub
xlat
xor
shl
ret
stos
lock
push
repz
xor
sbb
fisttps
and
addr16
xchg
std
ljmp
mov
aam
lret
add
add
sub
add
pop
ret
mov
fidivrl
push
cmp
sub
pushf
push
imul
inc
dec
xor
cmp
imul
or
push
jp
lret
sub
arpl
jmp
push
push
xor
jo
mov
mov
push
pop
cld
test
or
pop
daa
leave
sub
adc
jae
xor
dec
fisubl
aad
mov
stos
jo
dec
dec
inc
mov
std
pop
xor
mov
inc
mov
dec
add
scas
aas
jae
ljmp
xchg
cwtl
mov
mov
fiadds
popl
sub
xor
gs
mov
add
enter
pop
push
ds
stc
mov
mov
push
call
adc
dec
notb
sub
outsb
stc
repnz
dec
lods
xchg
xchg
xor
idiv
sub
and
lea
sub
mov
push
fnstsw
push
int
pusha
orb
push
cmp
dec
loopne
jmp
mov
stos
pop
add
cmp
pop
push
nop
pop
divb
repnz
inc
stos
jmp
lock
test
xor
push
mov
shlb
push
cmp
push
fstl
call
dec
loop
imul
xchg
sbb
out
add
sub
or
enter
shlb
dec
pop
stos
push
xchg
jl
sahf
pop
and
sbb
decl
in
sbb
pop
pop
scas
in
fs
push
xchg
mov
push
adc
or
pop
push
jb
xchg
shlb
pop
in
leave
jge,pt
or
clc
movsl
shl
dec
sti
ret
cli
xorb
es
loope
lock
cwtl
mov
stc
jecxz
mov
sbb
inc
lcall
imul
pop
xlat
inc
lods
out
in
movsl
ret
add
or
fistpll
mov
pushf
outsl
pop
lds
inc
repz
shll
inc
mov
sbb
loopne
inc
or
cmp
cmp
xlat
jg
test
mov
aaa
lcall
iret
and
mov
leave
xchg
cltd
neg
rcl
sbb
cmpsl
cli
stc
jns
adc
je
inc
scas
js
sahf
push
shrb
nop
jo
gs
jbe
nop
idivb
mov
jae
push
pop
inc
cmp
xor
fiaddl
inc
adc
jns
addr16
dec
jg
sbb
xchg
xchg
adcl
ret
outsb
out
sbb
addr16
pop
ss
dec
mov
testb
xchg
cld
aaa
in
gs
clc
imul
jae
dec
xor
mov
push
inc
aam
shlb
cmpxchg
mov
mov
adc
cwtl
jge
add
jmp
gs
addr16
pop
rcrb
test
test
addb
fcoml
sub
test
dec
adc
mov
sbb
push
lcall
movsl
ja
or
xchg
inc
pop
or
add
out
daa
lods
sahf
push
dec
jmp
es
leave
mov
mov
jp
push
das
les
movsb
add
pop
outsl
lods
in
xor
mov
pop
fldt
sbb
pop
xchg
jnp
jmp
stos
call
arpl
stos
mov
nop
add
cmp
stc
cmpsl
ficoms
adc
clc
ja
lahf
gs
out
adc
mov
clc
sbb
and
lahf
clc
test
adc
add
and
jae
dec
push
rcl
test
jb
jp
in
dec
sub
jle,pt
sub
icebp
cmp
mov
cmp
test
test
subb
subb
lds
in
sub
mov
sbb
movsw
cmp
mov
loope
popf
fldt
xchg
repnz
loop
xchg
repnz
insb
add
mov
stc
push
xchg
or
jmp
pop
lock
lea
int
cmpsb
bound
sub
push
loop
push
idivb
sarb
sub
push
insl
jmp
cmpsl
inc
shll
fdivrl
ret
negb
jo
inc
mov
or
mov
inc
sbb
inc
push
outsl
lcall
fucomi
hlt
cmp
mov
dec
fstps
lea
xor
mov
mov
xchg
jg
cmpsl
pop
mov
cmp
mov
fisubs
clc
push
sub
out
sarb
mov
aas
cmp
test
rcrl
sub
push
xor
push
adcb
ret
jl
mov
aas
sbb
xchg
leave
pop
adc
xchg
fadds
pop
inc
or
jno
test
je
adc
sarl
testb
pop
inc
xor
ljmp
inc
push
test
mov
inc
imul
mov
add
sub
int
push
incl
sarb
xchg
incl
xchg
fmull
or
out
lret
cli
mov
mov
movsb
or
mov
xor
in
pop
in
jne
or
jl
or
sub
push
fstps
mov
xchg
daa
out
mov
jae
lea
out
imul
out
out
push
mov
je
fiaddl
jb
popf
inc
subb
lret
cmc
iret
cmp
bound
cmp
enter
push
dec
mov
mov
sbb
fs
bound
mov
test
lret
clc
lds
xchg
insl
pop
int3
in
shr
fldl
pusha
push
stos
push
cmp
xor
jns
cli
shr
adc
gs
cld
fldl
lahf
ja
fisttpl
scas
es
scas
loopne
xor
cli
dec
ficompl
dec
fdivl
push
mov
mov
sub
and
nop
cmp
ja
cs
dec
pop
pushf
lahf
and
or
rolb
int
dec
data16
push
mov
popa
mov
jg
in
and
push
mov
in
andl
rcll
adc
push
inc
dec
iret
or
jns
pop
mov
xchg
mov
jno
outsl
inc
dec
stc
xchg
xor
cmpsb
outsb
js
mov
or
fdivl
sbb
jnp
adc
ret
cmp
sahf
jnp
movaps
xor
addl
pop
add
push
jo
mov
push
pop
mov
ret
xchg
ja
adc
sarb
mov
fsubrs
fstps
push
cmp
or
jo
sysenter
fldl
push
rorb
push
inc
cs
xor
nop
pop
xchg
push
push
mov
or
and
cmpsb
xchg
push
jge
rclb
clc
scas
jae
pop
in
or
mov
pop
mov
stos
fnstsw
sahf
push
cltd
cmp
push
lods
fwait
push
sub
jl
inc
xor
sbb
fdiv
nop
pop
pop
enter
add
jo
xchg
mov
dec
cmc
out
fnstsw
lea
lods
stc
stos
pusha
mov
inc
jge
fcompl
dec
out
clc
cltd
mov
nop
enter
or
pop
inc
in
clc
sbb
pop
cmp
or
push
loop
xchg
mov
dec
insb
xlat
out
xchg
jecxz
addr16
jne,pn
or
insb
shl
clc
mov
ja
push
and
cwtl
repz
stos
jns
dec
fidivrs
dec
les
xchg
rorb
movsl
push
ret
mov
pop
add
ljmp
sub
or
push
pop
dec
cli
dec
xor
ja
sbb
ljmp
pusha
out
sub
mov
mov
scas
inc
sub
icebp
aas
mov
jno
scas
daa
cmovs
sub
es
adcl
pusha
rcr
pop
pop
outsl
ret
in
jp
sbb
jge
insl
les
or
ss
fxch
lret
xchg
xchg
ja
sbb
add
popa
jmp
test
dec
xchg
cmp
stc
jecxz
mov
aad
or
and
loopne
ret
or
clc
es
mov
mulb
int3
imul
test
and
lret
pop
push
mov
mov
mov
pop
cmp
jl
dec
jnp
push
mov
aas
test
inc
inc
ds
pop
insb
xchg
out
data16
cmc
mov
in
bound
fisttpl
mov
sbb
test
push
scas
andb
jo
ss
repnz
lds
shlb
mov
jnp
dec
mov
push
mov
fs
imul
dec
lods
ret
xchg
rorb
inc
lret
loope
pop
mov
or
mov
xlat
pushf
sahf
sub
sbb
jg
mov
adc
lods
outsb
or
enter
nop
es
xor
std
cmpb
cmp
xor
mov
aas
adc
push
in
repnz
ficomps
cld
push
inc
xchg
add
or
push
jmp
sahf
icebp
test
xor
rolb
cmp
out
icebp
xor
xchg
dec
pop
dec
mov
in
mov
rorl
push
out
fcmovne
dec
out
adc
mov
xor
subb
sti
nop
lahf
add
inc
mov
cmc
mov
adc
cmp
ss
pop
leave
mov
mov
les
jo
repnz
aad
and
stos
cmp
jge
rclb
adc
mov
inc
xor
pushf
push
mul
mov
repnz
push
push
pop
mov
push
scas
push
ret
and
push
rolb
sbb
sarl
xchg
add
jmp
or
jp
sbb
mov
mov
faddp
out
inc
dec
cmc
add
pop
cmpsl
ficompl
and
xor
movsb
xchg
pop
pop
sti
sub
mov
or
enter
sahf
in
cmc
mov
pop
rol
shrl
xor
lret
out
call
inc
mov
mov
xor
add
sbb
mov
dec
cmpsl
incb
xor
jno
xor
test
mov
push
push
mov
inc
outsl
mov
xchg
loope
negb
mov
into
xchg
xlat
adc
dec
loope
scas
mov
sub
loop
and
std
jae
adc
cmp
sub
arpl
lret
pushf
xlat
test
add
out
lret
push
es
call
push
cli
les
pop
xchg
sbb
add
lret
jno
pushf
xor
stos
jge
pop
mov
adc
push
mull
and
in
sbb
fisubrl
pop
lret
daa
stos
cmpsb
cmp
ret
fadds
lea
dec
cld
pop
lods
pushf
clc
mov
jge
add
repz
mov
xchg
ja
mov
adc
lock
mov
mov
inc
mov
xchg
pop
por
inc
mov
out
mov
or
sbb
adc
add
pop
and
je
in
hlt
push
mov
xor
aam
es
std
or
addr16
js
mov
xor
mov
jns
iret
out
xchg
xchg
jo
mov
aas
lock
mov
out
lds
scas
inc
outsb
scas
sub
and
iret
arpl
add
rorl
daa
int3
mov
push
dec
imul
call
fcmove
mov
lods
xlat
mov
fsubl
and
rcrb
pop
mov
jmp
inc
adc
sbb
sub
hlt
adcl
clc
ret
jmp
sub
xlat
add
scas
and
scas
insb
scas
faddl
and
sub
mov
test
outsb
mov
lods
sbb
cmp
mov
xor
adc
sahf
imul
pop
mov
push
loop
lahf
cmpsl
mov
and
lock
xlat
mov
mov
les
divps
insb
jl
int
or
xchg
fcmovne
cmpsl
stc
xchg
adc
cli
xchg
testl
leave
fbstp
mov
loope
dec
fidivl
cltd
pop
test
jp
pop
mov
mov
js
lcall
das
inc
push
xchg
sbb
dec
pusha
mov
pop
cld
or
pop
mov
add
pop
sub
stos
pop
jno
mov
fildl
daa
iret
jl
test
daa
test
adc
bound
test
cltd
mov
jb
mov
mov
movl
outsl
xchg
insl
stc
divl
mov
mov
insl
and
insl
hlt
pushf
sub
cmp
and
push
les
sti
movsl
test
lods
add
test
pop
mov
pushf
ret
ror
pushf
cs
shl
push
dec
bound
in
push
or
fbld
rclb
pop
inc
movsb
out
into
mov
mov
xchg
pop
adc
jecxz
rorb
insl
loopne
push
mov
sbb
movsb
ds
lret
pop
shrb
pusha
sub
les
inc
cmp
fcomps
test
std
sbb
dec
shr
scas
jg
aad
push
incb
imul
mov
push
cmpsb
sbb
pop
xchg
or
push
stos
push
pop
test
inc
pop
mov
fsubrp
xchg
sub
ret
les
sub
add
daa
lret
sbb
push
fs
mov
clc
cltd
inc
and
aaa
dec
std
loope
dec
push
lds
test
adc
dec
inc
jno
pop
loope
outsb
in
push
dec
dec
sub
int
sbb
xor
pop
mov
sub
jne
into
mov
sub
jbe
andl
push
xlat
imul
ljmp
sub
mov
push
push
mov
adc
xchg
mov
stos
add
mov
das
cmp
cmp
outsl
inc
outsb
mov
lahf
jecxz
psrad
mov
pop
pop
sub
jg
scas
xor
arpl
xchg
jp
int
cmp
mov
mov
and
cmpsl
int3
jns
mov
push
jl
jbe
std
stos
shrb
les
mov
jbe
test
mov
mov
test
and
mov
push
xor
test
cltd
adc
fsubs
pop
in
fcompl
mov
push
push
outsl
dec
je
hlt
jno
mov
jmp
mov
test
ret
outsl
sub
xchg
adc
or
push
je
jbe
xchg
es
inc
jecxz
iret
and
mov
popa
adc
movsl
push
addb
fsubs
scas
aad
sub
mov
sub
loopne
js
jbe
cmp
jno,pn
and
cmpsl
out
lret
loop
and
pop
mov
clc
lock
xor
stos
mov
das
pop
inc
push
jb
inc
mov
emms
inc
push
push
scas
mov
xchg
hlt
jbe
push
push
sbb
sub
cmp
mov
ljmp
xchg
lds
dec
loope,pt
lock
dec
mov
mov
sub
into
xchg
mov
and
popa
inc
sub
in
outsb
pushf
leave
pop
enter
xor
into
icebp
out
popa
pop
stos
sbbl
jmp
mov
pop
andl
push
mov
bound
push
cld
dec
sbb
shlb
or
jae
insl
leave
sbb
iret
sbb
push
mov
add
rcl
and
cwtl
inc
sub
stos
mov
rorb
lret
xchg
jae
dec
jg
jae
sbb
inc
jnp
repnz
ss
aad
push
sub
push
add
dec
movsb
sbb
dec
ss
pop
and
iret
push
enter
add
mov
mov
lock
mov
jb
ja
mov
cltd
jg
cwtl
mov
out
es
cmp
jbe
push
push
out
mov
aas
push
xchg
test
xchg
xor
sbbb
inc
in
xor
xlat
push
gs
popa
pop
lret
adc
or
dec
inc
out
cmp
scas
scas
daa
dec
push
popf
jg
popf
lcall
cli
sbb
mov
fisubrs
imul
push
ficoms
inc
xchg
movsl
aaa
repnz
jne
xlat
xchg
or
jp
dec
sbb
inc
test
push
or
xor
mov
mov
fs
cmp
adc
imul
sbb
lcall
loopne
in
loope
je
popf
lret
push
xor
les
push
jle
pop
cmp
out
ret
into
dec
lds
cld
push
addl
or
lret
or
adc
fwait
stc
dec
mov
test
insl
out
xor
mov
rorl
xchg
popa
xchg
sub
mov
cmc
mov
xchg
xor
or
insb
enter
xchg
and
test
sub
fcomps
cltd
mov
clc
jmp
mov
mov
inc
xlat
movsb
sbb
jnp
cltd
das
test
xchg
ret
mov
cmpsl
arpl
fsubs
and
xlat
cwtl
popa
xor
dec
jnp
mov
inc
fmul
cmp
loopne
je
mov
and
loopne
pushl
movsl
jle
pushf
out
inc
nop
or
mov
nop
xlat
ja
std
xchg
lret
mov
repz
pop
jmp
dec
shrl
dec
daa
sbb
loop
stos
or
insb
sbb
in
push
pop
sub
dec
xchg
xor
stos
movq
mov
dec
xchg
loop
push
cmp
mov
jecxz
and
dec
add
lods
daa
pop
adc
cli
outsl
dec
bound
fwait
jecxz
xorl
cmp
xor
push
aad
fsubrs
lea
icebp
sub
mov
dec
sahf
cmp
or
inc
mov
and
cmpsl
orb
mov
adc
or
fadds
pushf
les
jecxz
shlb
pop
ret
outsb
dec
push
adc
mov
pusha
lock
fwait
sbb
hlt
ret
inc
jo
or
cmp
dec
sbb
push
dec
push
pop
cmp
dec
xchg
push
lret
xor
mov
inc
jne
ret
lea
pop
popa
push
ds
push
enter
or
mov
push
and
arpl
jns
fnstcw
adc
aas
fcompl
andl
push
out
loope
inc
push
pop
and
sub
mov
cmp
push
push
xor
je
cmpsb
sub
mov
iret
shlb
addr16
lock
int3
dec
ds
push
mov
clc
dec
insb
leave
mov
jg
xor
loope
lcall
jl
or
dec
in
lcall
mov
sub
adc
out
dec
and
mov
mov
rclb
xchg
adc
dec
ret
popf
jl
ljmp
mov
stos
inc
mov
xchg
imul
mov
lock
jb
xlat
sahf
insl
ret
in
neg
insl
rcr
stos
out
ljmp
flds
xchg
mov
fnsave
ja
fsubs
dec
movsl
adc
add
mov
pop
jno
out
jno
jae
stos
outsb
test
push
fwait
rcrl
inc
xor
std
mov
xchg
jb
mov
mov
in
sbb
jp
xor
and
in
bound
roll
cmpl
out
mov
stc
inc
cmc
fidivs
fldl
insl
cmp
or
push
and
pusha
int3
mov
ljmp
cld
int3
or
clc
outsl
xor
sbb
out
xorl
mov
loope
sub
adc
sbb
in
sbb
cmp
cmp
fs
imul
or
repz
fmull
inc
std
movsb
aam
es
imul
sub
jmp
mov
cmp
push
lea
icebp
cld
jle
call
or
sti
subl
fucomip
or
icebp
and
out
mov
leave
pop
jb
jo
xorl
lds
jno
mov
mov
sbb
inc
loop
lcall
inc
ss
cmpsb
stos
jge
or
push
jo
push
mov
lret
inc
cld
sbb
add
push
xor
mov
loop
dec
lret
push
dec
jl
xor
sahf
inc
sbb
je
xchg
iret
lret
inc
and
popa
in
mov
movsl
xor
mov
sub
mov
adc
pop
aam
ds
xchg
aad
imul
lahf
pop
pop
jnp
jns
jnp
jle
movsb
jno
test
and
les
add
jle
fisubl
enter
test
cvtps2pd
mov
rcr
insb
xchg
das
push
mov
jae
hlt
cmpsb
pop
lret
adc
out
in
cltd
lret
lock
das
ljmp
loopne
or
arpl
fs
ja
les
pop
movsl
dec
std
movsl
fld
dec
ret
or
pop
jmp
cltd
outsb
mov
shll
out
insb
scas
cltd
mov
mov
je
push
hlt
mov
xchg
sti
mov
stc
xor
dec
mov
pop
insb
mov
int3
cbtw
inc
sub
int
mov
pusha
lret
sub
adc
cltd
imul
cli
je
mov
push
add
lods
call
mov
mov
cmp
dec
shl
xor
std
ljmp
adc
jae
cmp
arpl
ds
cmc
jno
add
das
dec
xchg
test
adc
mov
mov
push
imul
dec
stc
xor
mov
ret
or
adc
bound
scas
mov
int3
and
sbb
mov
xchg
ljmp
or
imul
mov
cli
scas
int3
stos
adc
or
pop
xor
inc
mov
in
lahf
push
inc
shlb
imul
mov
test
mov
adc
into
je
bound
xchg
sub
pop
xor
imul
jl
in
mov
aad
cltd
pop
test
fadds
movsb
fsubrp
leave
xor
stc
inc
sub
ror
jns
mov
xchg
mov
jo
jecxz
jle
idiv
sarl
mov
mov
mov
push
push
pop
out
lahf
sub
into
mov
pop
jge
sarb
sbb
jmp
ret
xchg
adc
jo
push
ss
or
sti
xor
mov
insl
mov
push
fidivs
jge
mov
idiv
push
out
xchg
setp
fisttpl
inc
mov
lods
mov
push
rolb
into
aam
xor
xlat
ds
sbb
cli
aas
add
dec
stos
xchg
mov
fcomps
push
adc
cmp
addr16
push
stos
sub
jo
mov
out
xchg
add
in
fisubrs
jecxz
sahf
outsb
pop
cmp
sbb
xchg
stc
scas
loop
jnp
ficomps
add
add
out
push
jae
pop
jecxz
xor
fadd
js
push
xchg
mov
jae
push
mov
sbb
jb
dec
inc
ds
adc
lds
fucomp
adc
hlt
add
out
pop
out
jb
out
rcrb
aad
jbe
jp
add
sbb
pop
mov
cltd
sub
adc
cmpsl
sarl
jbe
jb
add
ds
sub
aad
gs
dec
sahf
lret
decb
out
sub
stos
aad
jmp
loopne
ds
in
aaa
sbb
xor
lahf
loopne
push
pop
or
dec
fmul
or
add
sub
ljmp
cmpsl
arpl
push
je
std
push
cmp
out
inc
and
cmp
cltd
push
xchg
loope
sbb
cmovl
lock
imul
pop
test
scas
push
push
inc
mov
xchg
or
test
outsl
pop
lods
xlat
mov
mov
adc
cmp
dec
cli
push
sub
test
push
or
in
xor
bound
jp
mov
push
test
imul
xor
mov
into
out
imul
add
pusha
mov
inc
data16
mov
aas
mov
xchg
mov
cmp
xlat
cmpsl
add
insl
jae
andl
sub
or
pop
out
xlat
je
jnp
cltd
pop
sbbl
ret
ffreep
imul
inc
inc
pop
adc
out
test
mov
popf
fnstsw
add
loop
arpl
dec
mov
jecxz
push
pushf
outsb
pop
sub
insl
repnz
hlt
fcmovnb
loopne
cmp
jecxz
cli
mov
fsub
stos
push
xor
jo
mov
out
stos
cmpsb
iret
push
add
pop
sbb
inc
sbb
ss
fs
lods
imul
aad
shrl
cmp
adc
lods
xor
mov
mov
jns
dec
xchg
arpl
out
push
sbb
mov
insl
into
add
pop
or
sbb
jbe
inc
je
lret
pop
adc
data16
push
pop
aam
negl
or
rorl
inc
adc
mov
and
pop
mov
dec
loop
adc
cmp
addr16
inc
lcall
stos
subb
xor
push
xorb
in
jno
es
rcrb
lds
add
mov
mov
ret
ss
pop
in
nop
inc
mov
sbb
push
jb
push
lods
cmp
arpl
cltd
push
hlt
mov
or
cltd
pop
and
mov
mov
mov
mov
jge
mull
mov
mov
mov
cltd
xchg
test
pop
aas
cltd
or
mov
mov
lods
xchg
aad
xchg
inc
lret
insb
xor
mov
jg
fdivrl
sub
xchg
icebp
sbb
andb
lret
inc
sub
mov
pop
cmp
dec
es
fs
aam
rclb
and
inc
and
lea
cld
or
sti
repnz
iret
or
int
pop
sbb
mov
add
subb
dec
shrl
dec
aad
jl
cltd
in
xlat
lock
mov
ljmp
inc
dec
push
jmp
inc
flds
jge
cmp
dec
enter
and
hlt
cli
scas
shlb
fdiv
cmp
mov
dec
and
dec
mov
imul
dec
mov
or
pop
sahf
out
lcall
out
mov
test
push
into
add
in
movsl
js
lcall
add
mov
out
fistpll
or
pop
push
je
rclb
aaa
pop
or
rol
push
imul
pop
mov
mov
push
dec
mov
clc
cmpsl
or
xor
decl
pop
mov
out
imul
pop
loop
into
movsb
bt
push
xor
sahf
adc
cli
stc
and
cmp
jecxz
or
test
in
lret
imul
add
dec
fildl
push
ja
sbb
enter
jp
dec
lcall
nop
sbb
sbb
sub
nop
rorb
lret
push
dec
enter
push
clc
xor
loopne
push
out
imul
rcll
add
xor
hlt
jns
push
xor
outsb
lret
cs
sub
inc
scas
fsts
cltd
xchg
test
bound
pop
les
bnd
ss
addr16
out
divb
sub
dec
sub
xor
lahf
movsl
cmovp
sarb
test
inc
loopne
lea
inc
mov
push
adc
sbb
mov
add
dec
add
sti
adc
aas
mov
shrl
inc
push
xchg
cmp
jbe
fnstsw
enter
inc
mov
mov
jle
hlt
adc
scas
cmp
mov
push
test
mov
pop
pop
idiv
je
jle
dec
fwait
sbb
in
pop
adc
sqrtps
push
imul
lret
les
in
dec
aas
fwait
int3
mov
mov
sahf
pop
sbb
inc
jmp
bound
fstps
loope
inc
sbb
jnp
in
fcmovu
pop
cmp
push
inc
mov
loope
addr16
js
pop
js
mov
fisttpl
mov
mov
jg
jnp
xor
cmp
test
outsb
mov
jecxz
or
jge
cmp
mov
xchg
or
shrb
add
outsb
add
mov
inc
push
pop
cmp
inc
mov
lahf
mov
or
mov
out
into
jns
jo
jb
ja
testl
jo
leave
ret
in
pusha
scas
mov
int3
jns
push
addb
adc
push
xchg
or
mov
das
push
mov
cmp
mov
mov
and
negb
xchg
push
push
adc
loopne
lds
movsb
mov
stos
ljmp
scas
sbb
pop
jbe
xchg
jno
in
fwait
mov
mov
push
outsb
iretw
inc
jl
icebp
repz
jno
nop
popa
adc
pop
out
enter
push
mov
test
dec
cwtl
adc
mov
insl
int3
push
sti
jae
jo
mov
inc
pop
cmp
or
test
xchg
adc
cmp
sti
pushf
sbb
adc
and
je
lock
jl
pusha
shll
movsb
cmp
dec
mov
fsubrl
sub
cld
pop
cmp
mov
imul
jecxz
pop
pop
fdiv
out
clc
xchg
mov
or
push
out
ret
testb
shlb
or
jnp
push
iret
fimuls
leave
fcomps
mov
ret
xchg
xchg
into
loopne
mov
jmp
out
fwait
bound
add
sbb
popf
scas
pop
push
sub
dec
mov
out
cmpsl
xor
push
sub
ret
in
push
es
mov
stos
cmp
cmp
xor
fcompl
dec
iret
shl
or
testb
xor
inc
cmp
mov
xor
in
mov
pop
xlat
push
lods
sti
std
inc
lods
mov
dec
push
cmpb
push
aad
jne
fiadds
pop
mov
sar
mov
mov
pushf
inc
push
sub
pop
cli
add
inc
cmpsl
jp
jge
pushf
inc
and
leave
push
xor
sub
lahf
and
test
addr16
int3
ja
push
jl
out
inc
int
adc
lock
cmp
push
inc
cmp
jl
jno
lods
mov
sbb
adc
push
mov
xchg
scas
mov
cmpsb
shrb
pusha
xchg
iret
sub
mov
test
add
pusha
out
inc
gs
subb
pop
inc
mov
hlt
inc
orps
sub
mull
dec
roll
or
push
jne
mov
dec
fs
and
cmp
popa
lret
aam
pop
jns
stos
xchg
push
js
leave
mov
lods
xor
icebp
pop
cltd
mov
insb
adc
rorl
call
mov
adc
or
int3
push
xchg
push
iret
add
xchg
and
add
in
push
stc
lea
in
scas
sahf
cmpsb
jmp
jge
inc
inc
pushf
inc
and
cmpsl
adc
movsb
fstl
insb
xor
rorl
sbbl
jbe
or
mov
iret
outsb
jecxz
jecxz
mov
sbb
aaa
aaa
out
call
push
inc
inc
inc
add
inc
jp
mov
push
pop
sub
dec
mov
sbb
ljmp
jmp
imul
add
xor
mov
dec
push
jmp
lods
jmp
movsb
jnp
or
pushl
sahf
fdivl
gs
aaa
mov
push
push
fdivrs
cwtl
scas
sub
jecxz
xchg
dec
jb
jmp
dec
sbb
paddusb
out
loop
shrb
push
movsb
and
cmpsb
push
filds
push
mov
push
mov
addr16
mov
jb
push
sub
notb
pop
jbe
cmpsb
test
das
imul
mov
jecxz
inc
stos
pop
enter
mov
sbb
xor
lret
mov
mov
add
add
imul
lret
add
mov
insl
test
lock
jnp
out
sub
add
fidivrs
or
sti
cmpsl
xchg
push
jl
xchg
push
xor
jmp
jecxz
enter
in
mov
clc
pushf
les
adc
xchg
xchg
fldenv
sbb
xchg
mov
lret
inc
stos
cltd
xchg
out
loope
lds
dec
xchg
sbb
stos
dec
rcrb
test
lret
add
lcall
test
jle
mov
jecxz
cmp
mov
push
mov
loopne
dec
out
add
not
in
out
popf
cmpsb
cmp
inc
jns
shll
ja
out
jbe
repz
scas
repz
ljmp
sbb
aas
repnz
and
jne
je
shr
dec
pusha
jp
sarb
test
leave
jg
lret
sub
lods
fidivl
mov
fsubrs
push
das
rcr
loope
imul
add
mov
mov
cs
cmp
mov
and
or
mov
ljmp
pop
push
xor
out
add
push
lds
imul
or
jg
outsb
sbb
ja
lcall
cli
mov
repnz
lock
xrelease
je
pop
adc
xor
call
push
ret
flds
faddl
xor
stos
lds
inc
lret
pop
mov
sub
add
jbe
dec
mov
push
shrl
or
sarl
imul
loopne
movsb
cmp
cmpsl
jb
les
fld
ljmp
jo
jae
mov
stos
out
jno
push
in
pop
popf
dec
out
pushf
mov
jp
cmp
adc
pop
popf
mov
mov
adc
mov
mov
inc
lahf
pop
ja
notb
test
int
xor
cmc
fdecstp
leave
cs
dec
test
cmp
imul
mov
jmp
outsl
aad
sahf
popa
mov
lret
inc
or
in
int3
in
jo
jbe
mov
push
aas
cmc
adc
mov
scas
les
push
neg
and
adcb
push
movsb
bound
imul
cmpsb
mov
out
xor
xlat
repz
and
jmp
scas
mov
mov
mov
jae
loopne
mov
cmpl
das
arpl
pop
jbe
cwtl
out
aad
xor
enter
mov
lret
fistps
test
repz
inc
aaa
arpl
ret
arpl
in
enter
fimull
jne
in
loop
fidivrs
loope
dec
cld
mov
dec
cld
es
pop
outsb
add
push
lods
mov
push
mov
sub
mov
push
mov
or
mov
or
mov
int
cmp
cmp
shrl
mov
fnstenv
outsl
xlat
mov
fbstp
movsl
inc
adc
jne
mov
add
or
ds
xchg
push
aaa
jae
movsl
dec
jmp
xchg
mov
dec
xor
in
movsb
out
adc
pop
cmp
xchg
sbb
xchg
inc
call
sub
lcall
adc
inc
mov
pop
jne
cmp
fadds
jecxz
jae
sar
pop
fs
lods
push
mov
sub
ja
cmc
int3
outsb
inc
xor
daa
pushf
pop
lock
aad
push
das
stc
add
mov
mov
mov
cmp
je
mov
out
cmpsl
popf
xor
cmp
mov
jns
stos
cli
sub
inc
sub
cli
dec
jbe
xchg
jl
lret
sbb
test
pop
cmp
call
test
inc
ds
mov
hlt
shlb
leave
jge
mov
mov
into
or
vpshuflw
popf
jnp
stos
jo
xlat
jae
sbb
dec
push
iret
push
and
lock
mov
jns
add
js
and
add
mov
sbbl
xor
into
int
push
mov
lret
les
sub
dec
sti
xlat
arpl
push
push
mov
leave
pop
int
or
addr16
push
mov
sub
das
push
jp
mov
nop
mov
jnp
sub
addl
pop
or
sbb
ljmp
jbe
mov
inc
push
adc
xor
pop
xchg
jae
push
repz
notl
sbb
or
pop
cmc
pop
push
pop
jo
stos
rcll
xchg
cld
int
mov
cmp
enter
mov
dec
ss
pop
mov
arpl
pop
stos
ja
lock
ud2
xchg
push
rolb
jg
shlb
sti
sub
xor
scas
pmulhuw
jg
xchg
sbb
pop
js
xchg
call
and
in
and
ljmp
xor
fidivrs
jmp
dec
test
jmp
out
dec
filds
pop
sti
pop
push
jb
sbb
jae
addb
out
daa
ds
std
test
mov
sub
or
adc
clc
push
aad
adcl
lods
shlb
mov
pop
jmp
pop
je,pt
mov
adc
addr16
or
and
mov
icebp
push
mov
adc
in
lret
and
fnsave
sub
or
mov
jg
add
inc
out
dec
rol
xor
jmp
in
mov
dec
mov
cmp
and
adc
jg
push
jbe
push
and
insb
in
dec
cmp
std
es
inc
pop
mov
xchg
sbb
scas
iret
lea
cmp
inc
leave
in
shlw
nop
pop
push
fnstenv
pushl
imul
push
xchg
push
mov
mov
add
mov
int
mov
mov
scas
testl
loope
or
pop
cwtl
mov
mov
xchg
inc
std
pop
imul
out
xor
test
lods
mov
inc
cmp
arpl
outsl
fs
and
pushf
stc
subb
cmp
mov
js
cmp
or
out
mov
push
out
jge
cmp
call
cltd
in
out
test
in
cltd
mov
mov
ret
pop
shrb
outsl
jg
pop
scas
mov
ja
pop
xor
shrb
ljmp
mov
mov
sbb
cmp
mov
lcall
seto
add
push
push
insb
out
xchg
xor
xchg
cmp
into
push
and
xor
add
repz
insl
dec
sarb
in
rcr
rcrb
add
addr16
jge
cmp
xchg
cs
jge
stos
cltd
mov
mov
pcmpgtd
xlat
shll
push
lods
lods
gs
lods
outsb
sbb
inc
push
pop
pop
stos
stos
mov
lods
not
push
inc
push
in
sub
push
in
and
push
xor
mov
in
test
hlt
popf
loop
xchg
int3
adc
xchg
lcall
insb
xor
aad
mov
or
sbb
cmp
nop
mov
test
repnz
shr
sbb
inc
xchg
xchg
scas
sub
test
shrl
dec
and
mov
fdiv
jp
sub
xchg
dec
mov
xchg
sbb
mov
shlb
int
cmp
mov
ljmp
mov
fnsave
push
rorb
movb
les
fdiv
sub
sbb
icebp
out
rcrb
mov
jl
and
sbb
adc
outsb
sbb
mov
inc
aad
in
fcomip
ret
xor
mov
daa
stos
xchg
cmp
adc
push
mov
pop
rolb
and
push
sub
sbb
xor
mov
ss
in
push
jg
adc
movsb
jg
imul
mov
data16
jbe
xchg
ss
pop
sub
addl
inc
fs
sbb
sbb
sbb
dec
in
pop
mov
sub
dec
xchg
xor
test
cwtl
xchg
vphaddwd
int
int
mov
insb
in
xlat
push
mov
jbe
insb
mov
test
lahf
into
int3
inc
popa
add
in
lock
ss
jnp
or
dec
add
loop
dec
jae
out
xor
push
loope
push
jae
and
lods
xchg
cmp
iret
lea
stos
arpl
pop
seto
or
mov
push
mov
adc
sbbb
or
fcmovne
mov
and
insl
ljmp
cmp
push
jmp
cmp
daa
fwait
and
cld
jne
std
repz
mov
pushf
rcrb
shll
fisubrl
mov
faddl
mov
push
push
and
push
out
pop
dec
push
and
push
mov
add
dec
sbb
inc
and
xchg
iret
stos
loop
pop
jmp
adc
cltd
pop
enter
sbb
movsl
or
imul
out
mov
cmovp
pop
sbbb
ss
xchg
adc
aaa
xor
inc
push
cmp
mov
push
int
pop
push
xchg
pop
mov
push
cmp
sbb
xor
add
aad
mov
push
imul
add
push
xor
in
or
xor
in
int3
xchg
jmp
int
std
dec
out
enter
jle
pop
mov
jne
test
cmp
arpl
iret
add
fdivr
push
scas
aam
add
cmp
jne
or
cmp
push
mov
and
movb
pop
xchg
push
sbb
push
mov
add
sti
cltd
imulb
rorl
inc
fsubs
imul
lods
lahf
mov
dec
cwtl
mov
sub
pop
add
xchg
les
mov
int
or
insb
int3
shlb
scas
loopne
in
xchg
cwtl
dec
js
cmp
or
scas
fnstsw
ret
stos
xor
test
pop
pop
out
aaa
ss
mov
ja
and
xor
clc
test
pop
mov
jne
xor
addr16
fs
cs
jnp
jp
je
xorl
adc
adc
popa
cmpsl
push
js
add
adc
jb
add
jmp
sbb
cmpl
jge
ret
add
xchg
in
mov
inc
mov
jp
cmc
aad
push
and
sbb
push
popa
mov
test
push
cmp
sarl
push
push
in
in
mov
dec
call
std
cmp
push
sti
test
loop
rorl
into
and
loop
scas
adc
insl
jns
aas
inc
jb
sbb
mov
dec
jg
lret
dec
scas
mov
jmp
sbb
andl
lret
mov
rclb
cld
xor
fs
xor
sbb
nop
pop
xor
leave
stos
out
jl
mov
push
mov
ret
call
jnp
idiv
pop
lret
aaa
mov
das
loope
lods
or
rcrl
das
cmp
mov
xchg
pop
mov
test
mov
push
lret
adc
jo
and
cli
pop
popf
xor
cmp
pop
lret
jmp
xor
stos
ret
mov
push
fldz
push
loop
movsl
push
add
mov
ret
scas
inc
jne
jnp
adc
mov
leave
inc
insb
mov
adc
or
pop
jb
jno
rclb
lret
ljmp
xlat
roll
mov
sub
int
fdivrp
lds
and
jo
jp
jmp
in
add
ret
adc
xchg
or
out
mov
mov
orb
pop
xor
fnstenv
shl
js
gs
dec
mov
dec
mov
leave
xchg
or
outsb
aam
mov
pusha
rcll
push
hlt
dec
mov
dec
push
std
xchg
jb
fldt
sbb
movsl
adc
sbb
push
dec
lock
cli
and
cs
gs
inc
xchg
dec
sub
insl
mov
add
mov
lods
cmp
adc
fsubr
mov
mov
lret
inc
push
and
jae
jnp
nop
jne
in
xchg
inc
imul
stc
roll
adc
loope
insl
push
mov
mov
and
mov
int
insl
imul
hlt
scas
fistps
mov
pop
add
stos
cmp
loope
xchg
movl
mov
push
pop
fisubrl
mov
push
cld
push
cmc
out
mov
sbb
insl
push
out
pusha
jne
or
adc
insl
lds
push
bound
or
data16
je
rclb
sub
fisubl
cld
test
dec
sub
cmp
inc
mov
jns
dec
push
scas
je
xor
int3
cmc
loope
repnz
push
rep
ror
adc
andl
pop
pop
test
push
xchg
mov
shll
jg
xor
dec
fs
push
lock
test
jecxz
inc
inc
and
popf
and
mov
enter
repz
dec
push
push
lods
clc
jmp
xchg
in
inc
add
lods
fwait
sbb
pop
int3
pop
out
mov
adc
sbbb
int3
add
mov
scas
aam
fildll
loop
aam
sbb
pushl
shr
jno
and
mov
xchg
dec
scas
mov
xor
add
lret
push
hlt
xchg
mov
pop
cmp
ret
fdivr
adc
sub
sbb
js
inc
push
inc
cli
mov
dec
das
popa
aam
scas
rcrb
jmp
inc
cmpsb
mov
test
aad
mov
xor
inc
mulb
or
cmpsl
adc
lds
pop
mov
jmp
fs
dec
push
js
rolb
aad
jmp
imul
xchg
call
ret
or
pushf
pop
ret
ja
push
dec
add
push
push
mov
in
rcll
and
loope
decb
mov
push
into
xchg
cmpb
adc
xchg
sub
xchg
xchg
arpl
xor
andb
pop
pop
ret
push
arpl
xor
aas
dec
arpl
in
xor
sti
add
loope
not
mov
loopne
sbb
loope
addr16
lods
enter
xchg
sbbl
arpl
movsl
in
stos
icebp
inc
jp
sub
push
scas
dec
push
rcrb
sub
mov
inc
adc
mov
mov
push
das
pop
xor
mov
std
push
loopne
push
stos
aam
subb
pop
into
push
jge
add
cmp
sub
mov
lods
int3
jne
orl
lods
cli
cld
cmc
push
pop
push
imull
in
imull
mov
repz
icebp
repz
cmpsb
mov
dec
arpl
das
add
imul
push
cmp
cmp
and
pop
int3
test
mov
in
repz
icebp
sub
jnp
or
mov
and
jno
inc
add
cmp
scas
sbb
adc
xlat
aam
pop
fneni(8087
fidivs
ja
int3
dec
pop
inc
adc
or
mov
xchg
jns
pop
xor
dec
inc
jae
jae
aam
or
xor
cltd
stos
xchg
xor
cmc
popa
fwait
and
addr16
stc
dec
notrack
sub
dec
jae
or
add
dec
mov
mov
adc
mov
mov
cli
test
aad
rcrb
hlt
xchg
clc
xor
add
in
out
xor
icebp
adc
test
xchg
adc
call
dec
cmc
cs
pop
sbb
fisubrs
dec
sub
mov
es
cwtl
or
adc
push
jno
dec
push
cmpb
or
mov
cmp
or
push
cltd
cmc
push
dec
jecxz
sahf
data16
xor
rcrb
push
cmpsb
sbb
or
dec
sti
xchg
call
sbb
dec
jg
jp
pop
jle
scas
push
mov
rolb
sahf
dec
dec
ret
ret
mov
imul
fwait
dec
insb
loope
popa
add
add
fwait
aaa
xor
inc
jmp
mov
pop
test
fwait
in
loop
adc
xor
cs
cmp
sub
inc
fs
sub
rcr
repnz
inc
mov
hlt
leave
mov
jne
adcb
jge
or
stos
xorl
add
adc
push
mov
sbb
mov
dec
push
bound
push
or
es
shrb
in
xor
dec
sbb
xchg
test
lock
push
cmp
or
fcomp
and
mov
xchg
push
jae
adc
pop
jne
mov
inc
jnp
mov
es
insl
sti
js
and
jns
push
lea
je
sub
roll
mov
mov
psubsw
jl
mov
js
pop
stos
stc
rolb
aad
adc
in
ja
stos
sahf
movsb
add
jle
or
adc
xchg
ficomps
imul
cmp
daa
outsb
cwtl
out
mov
pop
loop
shl
mov
cmp
mov
cmpsb
jbe
mov
out
cmpsl
arpl
sub
leave
pop
xor
negb
mov
stos
add
outsb
rcl
out
loop
ret
mov
nop
adc
mov
ror
inc
cli
inc
adc
fdivrp
mull
xlat
dec
sbb
test
cmp
outsl
mov
sbb
pcmpgtd
in
test
xor
jge
mov
push
inc
cli
into
add
enter
int3
add
sarb
js
dec
mov
inc
cmp
jg
adc
mov
adc
mov
mov
stc
inc
cmp
cmc
push
pop
test
adc
lods
xchg
sbbl
lret
outsl
add
mov
push
pusha
pop
xlat
sbb
mov
xchg
pop
adc
sub
sub
addb
lods
fs
mov
int3
loopne
dec
mov
subb
divps
nop
xlat
movl
mov
mov
sub
jno
sub
pushl
inc
lock
ljmp
cli
mov
xchg
pop
xchg
sub
sbbb
jo
or
popa
pop
jmp
fldt
xlat
daa
push
xchg
mov
lret
or
fs
add
lea
inc
sti
inc
data16
in
xor
ds
in
lahf
push
bound
adc
push
icebp
fcomps
shlb
scas
adcl
cmp
fstpt
inc
fldl
or
jbe
shrl
dec
insb
pop
cwtl
rorl
jnp
push
xchg
pop
popf
scas
and
inc
loope
aaa
pop
shrl
imul
repz
push
xor
xchg
sbb
inc
std
insl
mov
and
mov
in
mov
push
lret
out
cld
rclb
sahf
adc
jmp
dec
push
or
mov
in
scas
jmp
mov
hlt
xchg
std
sub
push
mov
push
std
rol
loop
mov
outsl
mov
cmpsl
xchg
cld
lahf
sbb
pop
sbb
add
xor
test
xchg
or
push
scas
mov
ret
popa
mov
gs
xor
dec
push
adc
inc
or
add
pop
sub
push
into
dec
fisubs
pop
stc
addr16
das
inc
es
mov
cli
xchg
or
bound
scas
dec
xor
pop
shrl
out
add
popa
call
popf
mov
lret
adc
test
cs
dec
adc
data16
imul
scas
dec
xchg
int
and
jg
xlat
rorl
repz
mov
push
mov
rcr
mov
mov
rolb
cwtl
jg
daa
cmp
mov
jns
dec
mov
and
pop
push
dec
lret
stos
movsl
jmp
ret
xchg
mov
cmp
clc
mov
ljmp
nop
add
daa
xor
xchg
loop
and
cmc
out
fsts
adc
int3
cmpsl
scas
cmp
outsl
test
inc
adc
mov
ret
cs
out
mov
inc
add
sub
push
mov
jae
out
sbb
out
and
mov
test
out
jle
mov
mov
sbb
cmpl
movsb
lods
push
cmp
loopne
or
fwait
pop
iret
mov
inc
ficoml
scas
out
pop
lahf
mov
push
pop
sbb
or
out
sbb
negb
movsl
sbb
icebp
sbb
ljmp
dec
xor
icebp
iret
xor
sbb
mov
dec
stc
pop
les
bound
cmp
lods
dec
out
pop
into
in
loop
out
mov
lock
dec
addb
nop
data16
sbb
hlt
gs
call
cs
lods
inc
vcomisd
cmc
cwtl
les
pop
sbb
and
into
or
mov
sbb
and
in
rcll
jmp
sahf
filds
dec
jb
hlt
xchg
stc
ja
xor
mov
mov
cmp
sub
scas
repnz
aaa
pushw
dec
arpl
push
or
imul
push
add
pop
or
cwtl
lock
pop
test
test
sub
fldcw
les
jge
shl
push
sbb
fnstcw
inc
js
repz
add
loope
and
jnp
or
pop
or
imul
cmp
div
and
ljmp
fstl
shrl
sahf
mov
mov
push
mov
add
cmpsb
xor
xchg
sub
sub
cmp
je
bound
hlt
jns
adc
jmp
mov
jle
push
notb
mov
dec
fnstsw
jb
lahf
jge
mov
rclb
push
lret
and
pushf
fcomp
xor
movsl
xor
rcrb
stc
jb
cmpsl
loopne
jl
fcmovne
lock
lret
and
dec
or
mov
test
aam
xor
mov
fidivrs
jbe
clc
jbe
arpl
adc
incb
xchg
lds
enter
xchg
pop
mov
leave
addr16
fisubrl
and
cmp
push
leave
out
xchg
dec
dec
adc
or
fsubrp
mov
push
lds
push
cs
lods
shrb
outsl
xchg
cmp
jbe
mov
ret
aad
cmp
repnz
popa
mov
scas
scas
ljmp
push
mov
dec
push
movl
jns
pop
jbe
mov
testb
fs
and
mov
mov
test
ret
pop
cmp
imul
mov
pop
loopne
mov
sbb
mov
aaa
imul
fwait
cs
or
scas
je
pushf
push
fwait
mov
aaa
xchg
mov
std
inc
mov
mov
mov
mov
pushf
rorl
aam
mov
xchg
fildll
rolb
adc
popa
add
add
lock
adc
sahf
inc
in
sub
push
xor
ds
iret
push
xchg
sti
jecxz
and
inc
pop
or
cmp
sub
mov
in
std
jecxz
xchg
inc
xchg
aaa
clc
mov
mov
jb
shlb
aad
sahf
xchg
sbb
xchg
push
out
js
mulb
xor
mov
lds
cli
inc
out
or
repz
lahf
push
jno
mov
jcxz
jne
ljmp
mov
sbb
and
jbe
aad
push
and
pop
scas
loope
out
jae
outsl
mov
push
loope
loop
adc
jb
or
mov
inc
or
inc
insl
xor
ljmp
jle
inc
jmp
outsl
loope
cltd
cltd
cld
cmp
push
pop
rcrl
xor
out
flds
xchg
popf
cmc
or
cltd
pop
sub
pop
add
cmp
cmpsb
jnp
gs
mov
cmpsl
dec
cmp
mov
aaa
inc
adc
cli
mov
das
scas
jp
sbb
sbb
add
jb
or
inc
push
lods
xchg
dec
fwait
xchg
jge
add
aas
jp
in
sbb
test
stos
add
cli
mov
mov
fsubs
out
xor
cltd
pop
testl
push
icebp
jg
aad
mov
sbb
enter
mov
xchg
xor
xchg
stc
sub
loopne
testl
jae
or
lea
jge
sub
lock
lock
repnz
sbb
and
rcll
mov
xlat
xchg
movsl
stos
or
test
popf
stos
mov
xor
mov
sbb
fidivrs
mov
inc
es
inc
and
mov
outsl
stc
jne
ljmp
sbb
sub
and
mov
cmp
mov
pop
fisubl
or
mov
je
push
mov
dec
pushf
sbb
sub
jg
mov
jnp
in
scas
xchg
xchg
pusha
cltd
mov
cmp
cmp
gs
aam
stos
push
test
push
push
icebp
mov
lea
jl
scas
and
pop
cmpsb
xchg
into
pop
mov
fistpll
jmp
mov
and
loope
sub
mov
in
sahf
adc
pop
mov
sbb
mov
push
lods
add
push
add
cmpb
shll
vpcmpgtw
sbb
dec
mov
dec
sahf
xlat
icebp
xchg
std
je
adc
stos
jl
test
in
xchg
xchg
push
std
fcmovb
pop
sub
or
mov
notl
jo
xchg
push
into
cmp
shlb
push
inc
fildl
fwait
mov
adc
add
scas
cmp
in
out
or
rcr
js
cmp
mov
in
lods
dec
mov
imul
jb
popf
adc
iret
jb
insb
lods
in
ror
lock
std
mov
and
cmpsb
lahf
insl
jne
or
sub
mov
aas
and
cwtl
nop
cmp
xchg
sbb
pop
fisubrs
out
fistps
inc
mov
xor
ja
aas
dec
mov
and
jl
mov
imul
jp
jmp
mov
inc
cmp
fcom
std
inc
or
stos
mov
out
pop
ja
inc
sbb
xor
cmc
ljmp
repnz
cmp
xor
outsl
lods
mov
rcrb
and
scas
push
sub
lods
jecxz
negb
lods
lret
aas
and
imul
sahf
pop
adc
aaa
sbb
pushf
ds
shlb
sahf
xchg
inc
enter
xchg
movsb
aaa
cmpb
jg
xor
jno
aad
jb
stc
loop
xor
push
data16
inc
and
pop
cli
dec
cmp
hlt
add
jns
ret
ljmp
jp,pn
mov
jne
fs
rclb
and
jne
je
in
std
add
stc
leave
stos
lret
int
jne
ja
pop
movsl
xchg
inc
loop
aam
inc
iret
cld
push
lods
cmp
sub
icebp
inc
stos
jae
push
in
mov
inc
orb
addr16
mov
mov
in
and
add
sub
dec
jle
clc
aas
push
jecxz
xlat
in
add
jno
mov
aam
andb
jg
jecxz
mov
cld
cmp
cmp
aam
pop
idivb
adc
mov
dec
jg
mov
sub
cltd
cmpxchg
scas
mov
pop
cmpl
pop
mov
loope
jl
mov
pop
repz
adc
adc
rolb
add
mov
cs
fcompl
cmp
pop
mov
jno
cld
sub
pop
sub
imul
sti
cmp
or
sub
mov
push
xchg
sbb
shrl
push
mov
cltd
and
inc
sub
and
sbb
into
adc
scas
pushf
dec
or
mov
rcr
jmp
jno
dec
inc
mov
repnz
add
xchg
jns
sub
push
frstor
subb
aad
and
mov
xchg
sub
shr
daa
lahf
sub
jne
jl
lret
add
je
adc
jp
insb
outsb
lret
jecxz
loop
leave
fidivl
sbb
fisttpll
jle
loopne
adc
mov
lods
mov
subl
fisubrs
out
cmp
lret
outsl
push
xor
adc
into
inc
sub
cmpsl
xadd
sub
adc
insl
mov
scas
jmp
xchg
popf
imul
fwait
js
lods
fldl
xchg
xor
ds
dec
xchg
mov
push
mov
std
pop
les
mov
mov
push
sbb
gs
bound
mov
lahf
leave
into
dec
jo
imul
jno
pop
xchg
iret
fs
dec
mov
or
xor
sti
hlt
dec
int
mov
and
jno
inc
mov
into
enter
fstpl
inc
pushf
xor
clc
cmp
cmp
cli
in
mov
shlb
sahf
xchg
addr16
into
sbb
out
icebp
fs
xor
xor
pop
sub
xchg
mov
xor
sub
jmp
jo
add
xor
scas
xchg
mov
fldt
dec
sbbb
scas
add
adc
fiadds
pop
addr16
push
push
adc
movsl
sbbb
cld
mov
dec
pop
and
pop
xor
jae
mov
mov
push
add
or
inc
sub
mov
xchg
inc
xchg
sub
rolb
leave
mov
ftst
add
imul
add
sub
or
in
test
adc
and
jl
xchg
dec
add
gs
cmp
inc
filds
daa
pop
adc
stc
xor
cmp
mov
pushf
add
mov
scas
mov
std
or
fadd
pop
ljmp
js
lock
add
hlt
xlat
subl
mov
sbb
outsl
outsl
and
xchg
push
ja
mov
mov
sub
mov
rcrl
inc
push
sub
sahf
js
sbb
lods
mov
fisubrs
jne
scas
into
in
leave
pop
pop
fwait
pop
popa
insb
xor
xchg
fcmovu
aas
xchg
je
lret
sub
mov
cmpsb
adc
lods
je
xchg
je
cli
ret
shlb
add
data16
mov
sub
push
and
xorb
xor
insl
fsubl
xor
cltd
outsl
rorl
or
popf
dec
fisttps
sub
in
popf
out
pop
sbb
push
push
stc
aad
mov
icebp
scas
push
xlat
rorb
cmpsl
xchg
out
mov
es
cmp
jmp
pop
shlb
je
adc
adc
mov
scas
icebp
lds
sahf
idivl
pop
adc
mov
repnz
fisttpl
daa
sub
scas
add
jp
clc
out
add
jecxz
jbe
sub
loope
insb
test
test
jnp
inc
sti
inc
bound
mov
les
imul
fs
pop
push
inc
fistpl
pop
cmp
imul
or
or
mov
call
sub
pop
fidivrs
pop
sub
and
mov
daa
add
xor
push
xchg
xchg
add
push
in
mov
testb
mov
sub
lcall
cmp
lret
inc
sub
loop
jo
mov
scas
fnsave
cmp
cmp
mov
pop
stc
jge
dec
mov
mov
es
sbb
into
add
mov
adc
jo
jle
sbb
sahf
jge
insl
xor
stos
iret
or
data16
mov
faddp
mov
add
xchg
dec
pusha
sub
cmc
sub
fsubs
pop
xchg
data16
test
hlt
ror
cmp
mov
insl
lcall
lock
dec
inc
fiadds
lea
jg
add
stc
xchg
push
or
das
pop
fstps
shlb
jg
sub
aad
cmpsl
pop
jmp
cmp
and
inc
aaa
call
xor
flds
mov
xchg
push
fdivs
mov
sub
dec
or
repnz
std
inc
cmp
sub
in
mov
sbb
mov
ret
dec
insb
sbb
in
push
lock
lds
lret
mov
or
or
cmc
mov
xchg
jno
cmc
lods
lret
mov
rolb
fwait
sub
es
in
push
dec
add
push
jle
out
cmp
xchg
lea
sbb
push
push
mov
mov
mov
mov
loopne
std
pop
sbb
cmp
sbb
sub
add
add
call
push
pop
xorl
and
fnstenv
leave
aaa
loope
jp
cltd
inc
or
push
pop
push
mov
mov
xor
sbb
movsl
jns
xor
push
ss
cli
bound
xor
add
jns
pushl
in
cs
adc
xlat
jle
sbb
mov
negl
cmp
cld
push
and
dec
sbb
outsb
mov
pop
add
inc
push
mov
mov
xchg
shrb
adc
daa
inc
add
sbb
scas
xorl
fdiv
arpl
xor
add
fcmovb
push
mov
shlb
pushf
pop
mov
aam
dec
in
add
cmpsl
sub
nop
aam
jnp
mov
and
adc
js
jnp
pop
repnz
mov
push
jl
adc
mov
scas
frstor
xor
mov
adc
xchg
or
mov
adcb
jbe
xchg
add
xchg
sub
in
addb
cs
xor
mov
mov
fldl
adc
mov
xor
adc
mov
ret
in
xchg
in
int
mov
daa
das
adc
daa
cmp
pop
inc
mov
sti
or
in
xlat
cmp
ss
mov
jl
out
mov
out
and
ss
jbe
xor
jb
fiaddl
xchg
rorb
cwtl
or
jmp
push
jecxz
xor
into
subl
dec
mov
inc
dec
lea
lcall
mov
subl
sbb
fimuls
stos
sub
jno
xor
adcl
loopne
inc
inc
mov
rorl
cmpsl
add
lods
pop
dec
mov
pop
lods
jecxz
mov
insl
jno
pop
ja,pt
mov
hlt
lods
enter
ja
push
ljmp
jmp
mov
xchg
push
cmpb
ds
rclb
mov
imul
sub
mov
xchg
shll
hlt
xor
sub
push
dec
enter
pusha
sub
cwtl
xchg
les
dec
frstor
push
sti
jbe
sub
loope
push
cmc
test
adc
dec
loope
xor
push
dec
das
or
cmp
pop
xchg
jl
jecxz
add
mov
arpl
add
in
and
imull
std
leave
jg
cs
xchg
hlt
aaa
mov
adc
gs
dec
sub
adc
cld
push
int3
or
shrl
stc
icebp
sbb
data16
int3
mov
pop
scas
jne
cmovae
int3
insb
cmp
adc
nop
fwait
lahf
insb
push
pop
mov
push
and
jle
cli
push
dec
std
cltd
lahf
jge
pop
insl
lock
pop
cmpsb
sbb
pop
movsl
sbbl
rolb
test
mov
dec
je
mov
push
cmp
mov
cmp
data16
or
pop
dec
cld
in
dec
xchg
inc
push
add
xor
sbb
pop
sbb
mov
iret
cmp
pop
push
mov
cli
lahf
fisubs
xchg
lods
mov
sbb
mov
es
sub
sar
push
jmp
and
and
cmpsb
mov
add
in
movsl
and
fists
jg
popf
mov
ss
mov
in
jp
xor
filds
xchg
and
out
int
push
mov
inc
sarb
adc
xor
mov
mov
push
ret
movsl
test
pushf
jl
fadd
push
xor
mov
repz
pop
or
mov
out
js
sahf
push
push
add
leave
lods
push
fprem
inc
out
test
mov
or
cmpsb
into
inc
mov
jmp
cmpsb
push
aad
jno
loope
xlat
popa
push
fwait
inc
adc
pop
add
add
gs
dec
mov
jmp
dec
mov
pop
pop
outsl
les
outsb
push
cli
push
cwtl
add
or
es
sub
cwtl
in
fdivl
or
adc
stos
shrl
jle
mov
lds
pop
hlt
xchg
test
loopne
stos
sub
mov
xor
push
dec
adc
sbb
xor
pop
xor
lahf
mov
int3
cmp
inc
push
lcall
cs
sbb
out
aas
cltd
and
inc
out
pop
xchg
out
sahf
out
ret
cmpsl
pop
in
arpl
jno
cmpsl
js
dec
pop
pushf
repnz
jmp
fstl
inc
mov
lods
push
cmp
jae
cmpsb
jne
add
fadd
or
sbb
push
add
aas
push
cli
adc
fsts
xchg
icebp
or
sub
ss
aaa
jmp
in
xor
fldl
aaa
xchg
xor
push
outsb
movsb
pop
arpl
movsl
or
pop
mov
ds
or
or
jo,pn
xor
push
hlt
and
mov
pop
dec
mov
rcl
mov
dec
and
adcb
fstpl
push
push
fimull
mov
inc
sub
mov
loop
lock
sub
test
pop
sbb
pusha
repz
dec
cmp
lds
pop
push
mov
push
lret
xchg
scas
ficomps
mov
mov
inc
jg
mov
push
sub
addl
das
jnp
mov
push
or
imul
pop
push
xchg
sbb
cli
cld
xchg
dec
sub
mov
scas
xor
dec
mull
insb
lock
pop
and
sahf
or
sbb
pusha
sub
test
sbb
test
popa
pop
enter
dec
inc
mov
popf
cwtl
leave
int3
inc
sahf
pop
daa
mov
and
lods
lods
jae
push
jmp
sarb
dec
pop
movsb
loopne
dec
rorb
ljmp
lds
push
fwait
lods
popf
dec
notl
mov
jg
in
mov
dec
into
mov
sub
pop
add
pop
arpl
push
push
jno
xor
cmp
lds
mov
add
push
aad
outsl
in
push
fdivs
jno
int
bound
mov
scas
adc
pusha
and
xchg
mov
jmp
cmpsl
and
jmp
jb
xchg
js
pushf
out
js
in
ret
lahf
stos
mov
lods
out
insl
aam
pop
sbb
push
sub
int3
arpl
inc
jmp
cltd
mov
out
in
js
sbb
int3
dec
dec
addl
cmp
xchg
jl
sbbb
dec
cltd
mov
xchg
clc
add
je
lret
cld
mov
pop
lret
xchg
aad
jno
leave
aam
cmp
test
adc
sub
inc
cmpl
cmp
bound
inc
xorps
jge
push
pop
incl
and
mov
pop
addl
mov
jne
sub
sbb
or
adc
cmp
lret
sbb
xor
push
mov
or
jp
lcall
add
cmp
lea
ret
cmp
cmp
hlt
in
jns
aas
pop
xchg
in
add
fidivl
enter
sbb
sub
add
cmc
imul
incb
add
es
sbb
jle
mov
std
inc
xchg
jns
dec
push
cmpsl
ret
xor
jbe
xor
insb
pop
xchg
ror
push
addr16
out
les
ja
int
jmp
push
push
and
out
into
mov
jmp
dec
ficompl
push
and
jle
mov
sbb
sbb
push
and
sub
cmp
or
jne
xchg
pop
push
in
dec
add
clc
repnz
out
jle
je
in
inc
ficoml
push
sbb
not
push
repz
jp
cmp
outsb
push
or
xorl
push
dec
mov
add
repnz
and
insb
cmpsb
repz
pop
mov
jae
mov
outsl
repnz
daa
sub
stos
imul
aam
fs
lret
add
mov
lahf
cmp
mov
inc
hlt
jne
jae
fiaddl
fldcw
add
adc
dec
rclb
xor
movsb
jp
stos
dec
pop
aad
dec
dec
lods
jmp
xor
in
test
add
ds
fcompl
je
jno
mov
adc
pusha
pop
push
cld
int
lcall
retw
les
pop
adc
test
fldenv
fistpll
push
sbb
test
adcl
shrb
inc
jecxz
adc
repnz
nop
dec
mov
sbb
add
jmp
mov
and
adc
dec
xchg
fisttps
inc
das
push
inc
ficoml
mov
leave
cmc
add
mov
gs
cmp
lcall
push
aad
pop
sarb
adc
xor
mov
in
mov
adc
pop
andl
mov
vshufps
sub
cmp
movsl
sub
loop
inc
testb
les
test
xchg
push
pop
mov
adc
push
sub
movzwl
das
ljmp
aam
xor
outsl
xchg
mov
ljmp
adc
test
mov
inc
leave
jnp
mov
jnp,pt
or
push
cwtl
imul
jno
out
pop
loopne
das
out
imul
or
cmp
je
data16
sbbb
js
mov
int
repz
add
jg
sbb
add
nop
aaa
insl
dec
ja
mov
aam
sbb
cltd
and
leave
fistpl
stc
adc
ja
into
or
mov
mov
test
lcall
lahf
call
xlat
xor
nop
imul
ret
xchg
aam
enter
cmpsl
mov
divb
insl
cs
stos
dec
lret
pop
pop
imulb
test
dec
aam
insb
or
shlb
idivl
bound
pushf
loopne
test
lea
mov
out
adc
daa
mov
out
mov
call
clc
outsl
xor
cmp
and
mov
bound
cli
out
push
pop
je
sub
cmp
fwait
inc
dec
test
pushl
and
fldt
xor
push
add
iret
mov
mov
inc
or
les
mov
popa
fldenv
dec
int3
pop
outsl
fmull
lock
pop
adc
ret
xor
clc
dec
add
xchg
repz
pop
or
cli
push
sub
jecxz
jg
out
scas
in
mov
jne
mov
xor
pop
rcr
lods
int
lret
jne
imul
jle
aaa
and
and
lret
lret
sub
shrl
cmpsl
fsub
cli
push
scas
mov
iret
testb
xor
stc
mov
mov
or
int
xor
lods
movsl
icebp
out
scas
outsl
repnz
daa
add
and
xor
jne
inc
push
fisubl
mov
mov
adc
mov
lret
jns
fstl
and
aad
cmpsl
jo
sbb
jg
sti
inc
hlt
push
xchg
cmp
testl
popa
or
inc
xchg
bswap
aam
cmp
fs
inc
xchg
adc
pushf
je
call
movsl
ja
sbb
mov
dec
push
jo
sub
out
js
mov
rcrl
std
imul
pop
dec
cmp
adc
je
pop
inc
jno
push
cmpl
rolb
mov
inc
jl
mov
mov
popf
mov
sti
xchg
dec
dec
shlb
jno
aam
sub
lahf
add
mov
retw
inc
dec
xor
rolb
out
add
jno
sub
rcrl
sbbb
push
sbb
push
sbb
cmp
add
insl
leave
orl
popf
aaa
icebp
mov
lods
dec
xrelease
fwait
in
jg
out
rclb
fcmovnu
adc
fadd
cmpsl
and
aaa
leave
lahf
add
xchg
mov
sub
negl
sbb
sar
in
cmp
sbb
push
repnz
cmp
or
test
pop
fstp
pop
and
test
jo
pop
cmp
ds
push
adc
out
insl
adcb
sub
int
fstp
mov
and
pop
adc
mov
rcll
popfw
add
cmp
mov
aad
or
jecxz
js
outsb
lret
dec
ret
jg
nop
movsb
dec
or
andb
loop
xor
int3
daa
jge
fildll
popa
mov
sub
xor
jg
xchg
stos
repnz
and
ljmp
ja
rcr
mov
mov
mov
sub
jnp
add
adc
rcrb
push
and
jno
jg
enter
push
repz
fisubl
dec
repnz
sbb
or
jno
adc
xchg
lret
iret
test
cmpsb
jp
inc
or
or
fs
xchg
orl
push
nop
inc
ss
add
dec
rcrb
fildll
mov
inc
mov
inc
bound
mov
in
pushf
insb
stos
xchg
mov
pop
mov
jecxz
das
mov
clc
les
lea
ret
pop
sbb
mov
inc
dec
notb
fidivrl
js
inc
out
and
lods
mov
popf
into
xchg
push
ljmp
jge
pop
and
cmp
mov
test
shlb
std
int
cmp
ret
xchg
pushf
xchg
aad
add
bound
adc
test
pop
scas
aam
insb
repz
nop
mov
cwtl
inc
or
mov
push
jge
imul
push
pop
mov
xlat
push
insb
loope
mov
ja
sbb
out
aaa
addr16
cmpsl
sbb
or
pop
pop
fs
dec
inc
ds
outsl
dec
sbb
ljmp
mov
cmp
jp
mov
add
fdivrs
or
mov
or
insb
or
jo
pop
cmc
les
repz
rolb
and
lret
push
jbe
pusha
or
out
jl
inc
enter
mov
lea
dec
mov
pop
pop
mov
stos
hlt
aaa
popa
cmpsb
test
roll
mov
jo
repz
out
ret
fadds
subb
dec
sub
loop
mov
mov
mov
iret
jne
jp
jmp
fidivs
xor
and
mov
push
sbb
adc
sub
push
aaa
in
sti
jle
add
and
mov
fisubrl
add
push
dec
sub
nop
daa
lock
inc
repnz
lock
pusha
in
sub
add
add
pop
int3
adc
dec
xor
bound
orl
in
iret
lret
xchg
sub
sbb
fs
lea
add
dec
into
xchg
int
jb
pop
xor
adc
adc
mov
xor
stos
aam
inc
jle
shl
dec
or
mov
out
inc
pop
and
xchg
add
mov
addr16
adc
popa
push
cltd
scas
sub
loope
or
faddl
lea
mov
pop
adc
sahf
pusha
add
mov
movsl
or
cmp
fiadds
pushf
lcall
lods
sbb
add
daa
push
cmc
gs
addr16
outsb
or
jne
push
mov
stc
xor
fdivr
jae
jno
sti
emms
sub
cmp
int3
adc
out
ja
dec
or
test
mov
or
outsb
cmp
sbb
mov
fs
int3
ja
stos
push
xorl
cmp
xchg
push
pop
add
outsb
movsb
dec
xchg
and
pop
mov
push
stos
pop
punpcklbw
xlat
jp
leave
mov
fiadds
fisttpll
mov
xor
sbb
pop
xlat
mov
sbb
jmp
and
inc
test
lods
push
lock
gs
repnz
loop
fcoml
xchg
xchg
ljmp
dec
xor
ljmp
lret
rolb
jg
cs
loope
insb
sub
ss
mov
push
xor
cmp
dec
jo
je
cmp
pop
mov
and
inc
stos
hlt
leave
xchg
fdivrs
andb
fdivl
in
pop
adcl
xchg
cmp
xchg
mov
fcmovnu
mov
mov
mov
in
pop
das
add
pop
sub
sbb
pop
mov
mov
sbb
jno
inc
mov
mov
stos
shrl
add
cmp
inc
mul
iret
xchg
jle
leave
jmp
mov
jmp
shll
adc
mov
xor
ljmp
enter
dec
ficomps
xor
pop
xchg
add
dec
xor
xchg
xchg
dec
inc
imull
mov
pop
repz
das
es
mov
cmpsl
lcall
scas
popa
mov
dec
call
ljmp
icebp
lds
dec
insb
dec
in
cltd
xchg
and
adc
outsl
cmp
fwait
pop
aad
clc
paddusw
jp
fnstcw
in
les
outsb
mov
mov
clc
cltd
mov
inc
push
test
sbb
arpl
repz
popf
pop
in
insl
andl
dec
daa
aaa
ja
dec
ret
fucomi
je
std
sbb
sub
movsl
mov
mov
push
mov
into
ret
insl
movsl
rcrb
pop
fucomp
push
adc
in
push
dec
lock
push
cwtl
inc
adc
pusha
stos
aad
in
sub
sbb
jl
or
xor
jno
mov
sbb
lret
and
inc
fmul
dec
cmp
xchg
les
mov
ja
ret
pop
pop
imul
xchg
mov
fcomi
dec
xlat
es
imul
inc
jge
and
fidivs
mull
sub
jns
cltd
adc
fildll
jmp
inc
or
pop
jbe
sub
in
movsb
repnz
rcrb
into
sbb
stc
cmp
pop
mov
cmc
jno
jg
and
mov
push
xor
in
sbb
pop
aas
add
in
jl
repnz
adc
aas
stos
cmp
cmp
push
push
out
mov
bound
inc
addr16
out
ss
push
push
loopne
in
cli
pop
loop
dec
sbb
mov
fldenv
into
aaa
mov
sbbb
or
repnz
sub
mov
and
fcomps
sub
in
or
stos
rorb
std
dec
push
xchg
inc
les
and
pop
and
inc
adc
movsl
pushl
nop
pop
daa
mov
lods
sarb
adc
push
ret
pop
ficomps
push
lods
clc
es
sbb
add
aaa
sub
sbb
mov
mov
movsb
and
rorb
mov
call
dec
jae
dec
stos
sub
xchg
push
pop
sub
movsl
enter
mov
loope
arpl
pushf
pop
in
mov
aad
mov
scas
push
mov
mov
pop
out
ficoml
sbb
push
pop
mov
and
sbb
dec
jns
push
mov
sub
shll
sahf
lds
inc
inc
cmp
test
inc
sub
icebp
arpl
mov
fidivrs
fimull
push
in
imul
xor
xor
jns,pt
imul
ja
pop
aad
bound
xchg
xor
sub
mov
daa
mov
arpl
aaa
xchg
adc
mov
mov
stos
cmp
pusha
lret
mov
xchg
adcb
and
sbb
adc
dec
fimuls
pop
inc
xor
fidivl
jb
shlb
jg
scas
cmp
jne
pop
imul
adc
lds
xchg
pop
loope
sbb
jae
push
dec
inc
jnp
mov
dec
dec
pop
ret
imul
mov
stos
mov
cmpsl
pop
in
iret
add
and
jp
push
faddl
cs
setb
insl
cmpsl
fmul
mov
iret
and
test
jnp
sub
mov
push
aas
adc
adc
out
cld
in
bound
jle
or
xchg
dec
iret
mov
je
daa
sub
hlt
aaa
push
pop
sbb
fdivl
fdiv
fldcw
int
pop
cmp
sub
out
adc
mov
xor
rclb
push
out
sbb
je
test
push
sbb
push
or
popf
movsl
imul
and
lret
jmp
les
mov
fs
lcall
xor
pop
xchg
push
mov
and
push
adc
xchg
dec
xor
xor
dec
test
ja
popf
adc
sbb
and
movsl
cwtl
cmp
shlb
mov
add
sub
jnp
jle
jge
inc
mov
mov
fsubs
jne
out
push
pop
jge
push
call
jge
clc
dec
push
or
orb
ret
imul
pop
icebp
in
stc
pop
xchg
out
sub
ret
data16
std
data16
adc
sub
cmp
pushf
fdiv
inc
test
clc
jo
push
pop
xchg
je
push
inc
pop
imul
adc
and
inc
jp
dec
and
inc
xchg
mov
pop
gs
mov
js
inc
in
das
mov
jne
inc
outsl
ret
cli
les
xchg
outsl
dec
dec
inc
gs
aam
in
mov
mov
ficomps
adc
out
ljmp
insb
xchg
lods
repnz
add
icebp
orl
push
pop
sbb
les
mov
pop
lret
mov
jmp
loopne
push
mov
into
jno
ljmp
loopne
cmp
mov
or
mov
fimuls
lret
lfs
adc
mov
ds
int3
cmpb
jmp
mov
scas
xor
sub
iret
faddp
inc
outsb
icebp
adc
shrb
out
pop
inc
gs
jmp
std
sub
mov
mov
push
xchg
ljmp
xchg
dec
pop
inc
push
insl
cmp
in
xchg
into
adc
imul
test
out
adc
mov
push
inc
rcll
or
adc
sbb
mov
arpl
arpl
in
mov
add
jbe
lods
xor
fcmovnbe
mov
fiaddl
rol
leave
lret
out
and
fsubr
cmp
aaa
jmp
mov
xor
lret
pop
out
fdiv
mov
lahf
push
adc
add
xchg
sub
xchg
in
adc
stc
ljmp
add
dec
fidivs
dec
popa
cmc
mov
push
leave
lea
into
lcall
jne
mov
mov
jbe
adc
xchg
nop
int3
or
leave
ret
aam
adcl
je
out
mov
aaa
into
addr16
jg
lock
jl
mov
cwtl
insl
pop
xor
xorb
rol
imul
repnz
lea
sub
mov
outsl
lea
cs
sub
add
fsqrt
jg
out
cmc
sbb
lock
xchg
jmp
jo
in
push
mov
sub
cmp
lea
ds
jge
cmpb
fistpll
lret
and
inc
fsubl
mov
scas
lds
shr
cmpsb
sub
and
cmpsl
pop
adc
hlt
ljmp
repz
aam
pop
mov
test
adc
shrl
push
jae
cmp
sub
add
into
insl
mov
xor
ss
nop
imul
xchg
push
pushf
scas
sahf
out
insb
in
pop
mov
es
or
sarb
pop
mov
jae
xchg
pop
icebp
push
mov
cmpsb
cmp
and
outsl
jl
xor
sbb
orb
stos
sub
add
xorb
jl
mov
mov
ds
arpl
xlat
test
stos
int3
and
add
iret
push
cmp
ja
xchg
add
adc
loopne
icebp
jne
xor
cmp
fistl
cs
mov
xor
nop
mov
xchg
divl
addb
ljmp
lahf
xchg
xor
dec
aas
in
inc
dec
fdivrs
fsubrp
dec
loopne
in
loopne
lahf
cmpsb
pop
out
call
popa
outsl
daa
or
js
repz
aas
lods
dec
shl
sbb
mov
or
jns
jb
push
sbb
push
pop
inc
or
xor
nop
aas
adc
fiaddl
xchg
ss
xorb
fimuls
lea
in
mov
mov
mov
dec
cmpsl
bsf
out
jnp
nop
cmp
movsb
movsb
push
notb
adc
loope
pop
outsb
dec
movsl
nop
jp
mov
pusha
sbb
sub
lahf
scas
jno
sbb
mov
push
jbe
lahf
add
xchg
nop
mov
lods
imul
les
dec
icebp
add
mov
mov
jmp
push
mov
sub
cltd
or
ljmp
roll
nop
mov
into
jecxz
push
jbe
mov
pop
inc
js
push
dec
mov
repnz
jl
inc
sti
cmp
std
daa
bnd
adc
jge
shrb
aaa
mov
repnz
fistps
std
sbb
aam
jmp
pop
xchg
jo
jb
push
xor
sub
and
icebp
rorl
mov
fistpll
mov
popf
pop
les
popa
insl
cltd
ret
sub
hlt
insl
mov
jne
jecxz
mov
xchg
cmp
cmc
lea
push
mov
cltd
aad
icebp
daa
or
or
sbb
xchg
pop
mov
jbe
cmp
cmc
lahf
es
add
mov
mov
jecxz
mov
jb
hlt
rcll
pusha
xlat
mov
jo
iret
mov
lret
js
popf
test
push
mov
dec
daa
pop
imul
jmp
push
mov
push
xchg
cltd
adc
or
into
shrb
sub
insl
mov
mov
mov
loope
sub
add
fbstp
call
xor
setne
test
lret
outsl
sbb
or
movsb
push
lea
mov
sahf
adc
sarl
das
sti
pushf
push
mov
lods
inc
les
cmp
cmpsl
or
jl
mov
sbb
daa
sarb
in
rolb
adc
roll
repz
sub
jp
dec
les
aaa
jnp
cld
inc
jge
or
mov
push
mov
push
sub
arpl
test
inc
rorb
cs
push
adc
in
shlb
pusha
fmull
mov
xor
fldl
cmp
ret
pop
xchg
loope
jae
dec
stos
stos
cli
lock
jmp
inc
or
cmpsl
mov
cmp
bound
xor
daa
xchg
loop
mov
cwtl
lods
xchg
jl
imul
mov
fistps
mov
mov
jne
enter
lret
jo
cmc
les
cmp
in
cmp
pop
fsts
cwtl
and
imul
dec
cmc
mov
push
lret
lahf
daa
mov
push
push
lds
dec
pop
mov
jmp
push
jb
pusha
in
outsb
sbb
lret
bound
daa
sar
fnsave
mov
out
ljmp
aad
fs
loope
add
mov
cld
mov
inc
aaa
mov
fimuls
scas
divb
lret
aaa
inc
ret
imul
leave
inc
ds
sbb
push
pop
loopne
negb
xor
adc
cltd
shlb
jnp
mov
jns
rcrl
mov
aam
sub
cmp
mov
or
out
ljmp
sbb
shrl
pop
push
je
jp
xchg
or
divl
or
inc
or
pop
pop
ljmp
dec
jecxz
xor
sub
pop
mov
sbb
cmp
dec
inc
jmp
cld
jl
dec
jne
xchg
mov
loop
test
adc
jb
arpl
or
ret
sub
das
in
std
setb
xchg
imul
imul
fnstcw
or
out
inc
xchg
xor
pushf
repz
out
inc
sub
inc
int
mov
lods
mov
mov
mov
xlat
push
fidivl
outsb
sahf
xor
das
xlat
jl
pushf
aas
sub
xor
lods
add
dec
mov
add
ljmp
cli
adcb
pop
mov
pop
shrb
fstpl
in
ror
xor
sbb
imul
insl
mov
shl
shl
mov
sbb
and
cmp
and
ds
jae
push
jp
cltd
loop
xor
sbb
xchg
sahf
arpl
out
mov
cld
cmp
add
add
dec
rorb
sbb
ret
shlb
imul
or
lds
xor
mov
int
mov
les
push
imul
jae
enter
push
inc
iret
mov
scas
fisttpll
mov
cltd
dec
sub
iret
icebp
xlat
incl
daa
xor
or
cmpl
pop
jo
pop
jle
pop
fs
fucom
in
addr16
pop
std
sahf
mov
decb
or
cmpsb
add
aam
jg
sar
and
sarl
jno
xchg
jnp
xor
lret
pop
mov
repnz
jle
loope
inc
cmp
pusha
in
scas
xor
adc
xchg
frstor
leave
and
xchg
mov
addr16
sub
mov
dec
jns
out
out
js
mov
aas
mov
insl
ljmp
xchg
fsubrl
gs
push
jnp
cmp
cmpl
test
cmp
mov
dec
sbb
loop
daa
adc
push
jl
dec
xchg
xor
add
push
mov
std
mov
fisttpll
icebp
cmp
jle
shl
push
xor
mov
orl
insb
test
mov
push
or
xchg
iret
push
ds
mov
push
or
xchg
roll
es
inc
sarb
pop
adc
jecxz
inc
sarl
ret
test
repz
cmp
call
mov
adc
adc
sbb
pop
mov
push
cwtl
sbb
cmc
xchg
jl
movsl
cmp
adc
out
adc
cmp
and
mov
jno
pop
xor
jmp
or
repnz
inc
fimull
and
mov
mov
cli
incl
xchg
fisttpl
xchg
sub
movsl
in
rorl
cmp
mov
mov
jne
adc
pop
loopne
xchg
std
mov
aas
addr16
call
add
xlat
jp
ljmp
mov
stc
scas
or
pop
pop
rol
jns
mov
repz
ret
sahf
inc
push
mov
lcall
addr16
xchg
and
cltd
aaa
xchg
jb
sahf
sti
push
rcr
addr16
in
roll
aaa
mov
push
adc
test
pop
test
xchg
scas
movsl
mov
push
and
and
cmpsb
add
into
add
xor
sub
icebp
inc
adc
imul
mov
lret
dec
pop
and
int
add
sbb
mov
jo
mov
loop
lret
jmp
jle
xor
pusha
mov
mov
arpl
or
shll
arpl
outsb
cwtl
mov
mov
inc
mov
rcrb
and
lods
lcall
cmp
repnz
sub
sub
xchg
lea
imulb
test
push
pop
jo
xchg
xchg
and
mov
jo
sub
mov
sbb
lahf
mov
pop
mov
lds
ficompl
sub
loope
pop
mov
rorl
push
imul
sahf
push
dec
mov
xchg
or
decb
mov
pop
pop
add
and
gs
js
outsl
mov
leave
inc
ja
into
xor
cmp
push
add
cld
jmp
xlat
xchg
xchg
scas
and
ljmp
mov
movsl
fwait
cli
stos
loopne
xchg
push
fisttps
cmc
cmc
cmp
xlat
push
nop
cmp
push
and
mov
aad
xor
pop
dec
std
xor
out
div
jmp
repz
cs
aas
sti
xchg
icebp
sub
test
hlt
lods
shlb
cmpsl
and
cld
loope
jns
ljmp
pop
lahf
push
rcl
xor
nop
test
inc
in
fistpll
mov
hlt
jecxz
call
orb
in
sub
les
shlb
sbb
call
pop
jl
sub
call
pop
push
sbb
pop
add
fadd
sub
call
das
mov
jecxz
jae
cmp
mov
sub
push
loop
aaa
fidivs
cmp
ds
add
mov
jle
ja
push
jo
imul
vmread
or
sub
push
add
push
mov
pop
xchg
sub
jo
jno
ret
cmpsb
inc
push
sbbl
xchg
rolb
cli
jl
fsub
das
arpl
mov
xchg
push
fnsave
outsl
loope
out
test
jecxz
loope
aad
mov
jl
das
push
inc
jb
push
xor
push
push
lds
or
aam
insb
cmp
jle
psllq
fdivrl
add
push
dec
mov
xchg
insb
fwait
insl
in
es
aam
sti
repz
icebp
and
add
idivl
cmp
je
aam
jb
ret
mov
adc
inc
popf
outsb
call
mov
addr16
call
lret
add
je
shrb
mov
in
decb
cmp
ljmp
jbe
dec
shlb
das
add
in
pusha
enter
and
fcompl
fcmovne
aam
jp
lahf
sbbl
dec
push
mov
jmp
aad
fsubrl
jle
mov
or
sub
jne
in
fsub
popa
cmp
ds
jno
jnp
jle
sub
mov
call
mov
and
xor
fs
test
in
cwtl
lcall
cmpsb
lods
ss
push
andl
mov
lea
sbb
sbb
test
lcall
add
fs
inc
and
andb
test
mov
xchg
es
loopne
mov
xchg
gs
fistpl
leave
repz
dec
fcmovnbe
jbe
arpl
jle
add
fcoms
jbe
adc
sbb
jecxz
mov
stos
dec
xlat
pop
gs
dec
jge
inc
lret
aaa
ret
mov
aam
stos
fstps
add
xchg
es
xor
mov
stos
sub
ja
das
outsb
lret
mov
jae
pop
rcr
cmpsl
out
in
hlt
ljmp
jns
insl
fbld
shll
sbb
in
sbb
nop
xchg
mov
jecxz
das
shl
addb
or
fcmovnu
dec
pop
push
fsubl
inc
outsl
mov
scas
imul
jmp
clc
shl
into
lods
cli
xor
es
into
test
call
add
rcr
neg
mov
xor
inc
mov
nop
xchg
fnstenv
pop
xlat
jle
dec
adc
sub
shll
movsb
mov
push
loop
mov
sbb
jo
icebp
cmpsb
js
push
add
ds
sbb
push
cmp
lds
fstp
dec
orb
pop
mov
xchg
jmp
jb
aaa
loope
mov
sbb
adc
pop
iret
scas
inc
pop
sbb
scas
lds
jo
add
xor
ss
xchg
adc
and
test
fwait
fwait
subl
xor
dec
fucom
push
push
cmpsb
stos
mov
arpl
cli
sub
cmpb
cmp
aam
sub
pop
adc
mov
jnp
adc
sti
mov
hlt
pop
enter
inc
push
xlat
dec
sbb
pop
xor
cmp
cld
adc
sbb
sbb
dec
mov
aaa
sub
jae
push
push
nop
push
mov
cwtl
add
stos
inc
rcll
push
aad
adc
cmp
inc
daa
aas
rorl
xchg
push
negb
rclb
test
push
lods
sbb
repnz
sbb
sbb
out
mov
je
out
inc
cmp
sbb
push
xchg
ss
cld
jns
mov
mov
xchg
inc
cltd
push
hlt
fwait
mov
cltd
pop
xor
adc
cwtl
sub
or
and
std
sub
adc
jmp
outsb
push
push
or
fs
aas
xor
add
jecxz
in
ror
rclb
sbb
stc
and
test
je
cmp
xchg
jle
jecxz
repnz
mov
test
mov
test
ror
icebp
outsl
mov
push
mov
mov
push
icebp
sbb
adc
fwait
push
aas
dec
and
insl
jecxz
add
sarl
mov
dec
jl
leave
jmp
add
mov
ror
je
or
jp
loop
xchg
and
mov
jo
sbb
pop
fcompl
dec
addl
or
frstor
or
sub
jnp
cmp
mov
rcrb
mov
jecxz
fidivl
cwtl
shrb
inc
mov
inc
jbe
shr
add
xchg
xchg
leave
or
lods
dec
xchg
inc
mov
loopne
xchg
sbb
mov
xor
cld
jb
leave
out
mov
mov
hlt
fists
je
call
or
xchg
aaa
lret
and
jge
or
xlat
mulb
add
bound
movsb
mov
ljmp
pop
call
ret
pop
insl
cmp
hlt
adc
and
xchg
imull
loope
int
mulb
dec
icebp
sub
shrl
sbb
jne
mov
mov
dec
or
inc
jmp
fucomp
sti
pushl
test
dec
popf
cmp
aas
push
rorb
mov
xor
in
in
mov
lret
pushf
ret
nop
and
cs
jns
add
fiaddl
xchg
mov
cmpl
pop
test
xchg
mov
outsl
lea
xor
pusha
in
aas
xlat
imul
jge
lcall
and
pop
repnz
and
fldt
lock
sbb
xor
lahf
out
sahf
dec
cli
cmp
gs
mov
and
test
ds
repz
ret
fmul
push
iret
in
sbb
dec
pop
dec
add
jne
mov
movsl
xchg
sbb
mov
push
jo
mov
je
mov
jmp
inc
pop
and
aas
test
add
outsl
mov
push
mov
xor
fldl
jmp
popf
loope
notb
push
into
fldl
mov
sbb
call
and
inc
push
scas
lods
adc
xchg
in
jnp
mov
sub
pop
popa
aad
lods
mov
xor
mov
in
clc
fisttpll
rolb
xor
lahf
cmp
xchg
lcall
and
dec
xlat
leave
in
scas
mov
cmp
stos
inc
lret
add
lret
jg
movsb
fwait
pop
adc
pusha
pop
push
jg
mov
pop
bound
jb
cmpsl
inc
jg
sub
std
clc
xorl
and
sahf
mov
in
lret
jns
fwait
cmp
jp
cli
xor
ret
jae
imul
in
push
add
lods
sub
out
ljmp
mov
pop
inc
in
dec
sub
add
sbb
movsl
push
pop
ljmp
dec
ficoml
or
pop
cmc
mul
enter
jb
ljmp
adc
stos
aam
sarb
stos
mov
shufps
jns
jnp
xchg
add
inc
push
scas
shl
movl
addr16
adc
xchg
mov
dec
adc
sub
testb
sub
add
jns
es
add
leave
faddp
mov
stc
scas
pop
and
pop
bound
xchg
jmp
push
pusha
dec
pop
sbb
pop
jp
pop
push
inc
sti
mov
jmp
push
cli
subb
ret
aaa
ss
iret
dec
jno
enter
pop
inc
mov
or
subl
cmpsl
stos
in
test
xchg
mov
lods
int3
aam
or
mov
mov
cmp
pop
push
cmpsb
and
cmp
and
popa
ror
adc
xchg
leave
aad
dec
xchg
jg
inc
push
cmovs
lock
testl
and
cs
pop
bound
add
add
mov
adc
jmp
shll
xlat
ror
hlt
mov
in
xchg
lret
pop
xchg
inc
pusha
rolb
das
std
sub
adc
pop
lret
push
movsb
cltd
pop
pop
mov
insl
inc
jp
data16
sahf
ret
sub
or
sbb
cli
scas
repnz
mov
bound
xchg
shlb
pop
shll
mov
push
sbb
sub
mov
push
mov
pop
sub
insl
icebp
lods
mov
dec
nop
and
cmc
jmp
and
xorb
cmp
call
mov
adc
adc
lretw
ljmp
xchg
int
mov
mov
mov
xchg
pushf
pushw
pop
clc
mov
hlt
test
inc
mov
and
dec
aas
sub
xchg
cltd
notl
push
fnstcw
int3
adc
movl
mov
or
popa
faddp
add
loop
outsl
cmp
jg
mov
mov
or
adc
sub
rorb
test
sub
cmp
inc
mov
les
and
adc
lcall
test
int3
mov
sbb
das
mov
add
cld
push
std
test
in
sbb
inc
sub
sbb
dec
in
cli
jecxz
ficoms
inc
in
fcmovnu
fwait
push
mov
xchg
loopne
ljmp
int3
shlb
stc
rol
pop
mov
sub
faddp
mov
add
outsl
movsw
sbb
inc
mov
out
lret
push
jns
mov
iret
dec
pop
xor
test
add
inc
jmp
in
mov
pop
adcb
xorl
js
mov
cltd
pop
enter
dec
sub
in
xchg
pop
push
sub
cmp
cmc
mov
sbb
cmp
jecxz
shll
pop
int
adc
dec
mov
xchg
repz
sar
clc
lret
push
inc
sub
aad
xor
adc
fwait
xor
divl
pop
mov
sbb
sub
or
or
mov
sub
sub
int3
outsb
xchg
sub
orl
scas
jecxz
incl
or
es
xchg
lahf
loopne
rcrb
cmpsl
jl
pop
aaa
jmp
std
aaa
mov
jbe
fnstsw
scas
mov
push
pushf
pusha
mov
out
xlat
mov
push
mov
addl
xlat
mov
insl
pop
pop
mov
push
ficoml
movsl
ss
movsl
rorb
das
fisttps
and
mov
fidivl
es
dec
ret
xor
mov
push
jbe
les
mov
add
mov
out
fisttps
adc
aas
and
mov
int3
sub
mov
push
inc
cs
xor
mov
cmpsb
dec
lock
in
cmp
dec
pop
repnz
or
or
mov
mov
faddl
add
stos
push
jne
in
insl
test
ss
scas
mov
je
mov
ret
dec
in
lods
mov
pop
popf
and
aaa
or
adc
mov
shlb
or
adc
push
sub
imulb
mov
decl
pushf
jnp
mov
or
add
jmp
stos
jl
pusha
jmp
mov
out
lret
push
data16
inc
pop
adc
jbe
cmpsb
scas
into
dec
in
movsl
inc
xchg
jp
aad
cld
push
pop
lds
xchg
jo
mov
mov
aas
xchg
lret
in
test
mov
cmc
popa
inc
adc
std
aam
mov
mov
jle
xchg
enterw
rol
scas
inc
addl
cwtl
pop
sub
out
mov
and
pop
jg
push
add
data16
vpaddusw
js
sbb
shl
mov
jge
mov
jl
jno
ljmp
aad
ljmp
push
pop
sub
hlt
or
bound
lods
lcall
lods
sti
js
fcomps
jnp
mov
jns
sbb
int
dec
push
aas
mov
mov
push
push
mov
loopne
test
add
cmp
mov
lret
cmp
popf
out
pop
ss
in
fwait
repnz
push
cmpsb
dec
imul
movsl
xchg
pop
mov
icebp
adc
jno
xchg
xchg
add
inc
popa
cmp
cmc
pop
sbb
xchg
scas
mov
stos
pop
cmp
pop
or
mov
mulb
cmpxchg
jno
lcall
out
mov
or
aaa
dec
add
push
fisubl
icebp
xchg
loopne
xor
mov
std
test
fidivrs
inc
imulb
mov
test
addr16
imul
jno
push
cwtl
fdivl
xchg
jae
sub
int
mov
dec
xchg
lods
adc
gs
push
mov
adc
lods
push
lea
lea
mov
jbe
pop
repnz
mov
aad
mov
outsl
das
cld
js
jbe
sti
push
xchg
arpl
cmpsl
out
scas
push
xchg
pusha
dec
sbb
jecxz
push
pop
cltd
aam
dec
sub
adc
shlb
mov
xor
inc
add
lods
mov
mov
mov
int
push
icebp
jle
sbbb
outsb
hlt
mov
sahf
mov
mov
sbb
inc
stos
ret
aam
mov
mov
idivb
aas
xor
push
pop
out
ja
cmp
jg
stc
mov
mov
xor
jbe
daa
inc
fstpl
lcall
push
idiv
adc
movsl
xor
mov
mov
sub
mov
push
dec
cs
mov
mov
out
pop
inc
mov
mov
mov
pushf
enter
xchg
or
push
xlat
cld
or
loopne
into
cwtl
pop
pop
in
add
add
xor
dec
cmp
clc
inc
scas
inc
loop
push
stos
mov
cmc
mov
mov
outsb
fistpll
loopne
hlt
sub
nop
scas
js
xchg
enter
add
js
jne
filds
ss
subb
clc
mov
aaa
lahf
push
or
call
insl
pop
jmp
xchg
fisubl
aad
hlt
cs
xlat
pushf
jno
pop
cmpl
shll
enter
mov
fcoml
dec
sti
icebp
ja
repz
xor
mov
outsb
pop
imulb
mov
inc
or
and
dec
cmp
xchg
daa
push
mov
aad
push
add
fwait
or
insb
cld
pop
xor
movsl
xor
lds
pop
stc
jle
cwtl
push
lret
xchg
lret
lea
in
lods
sub
lret
stos
lock
sbb
and
jl
pop
inc
data16
inc
add
jp
movsl
loopne
sub
aam
inc
mov
out
xchg
jb
cmp
lock
cmp
fwait
outsb
movl
pop
pop
jns
add
idiv
in
inc
fimuls
xor
inc
and
jnp
xlat
lret
lock
aam
xor
mov
adc
add
xchg
mov
and
pusha
or
jmp
sbb
dec
inc
cmpb
insl
add
test
lahf
shr
scas
or
stc
adc
inc
lret
and
test
shrb
pop
rorb
gs
sbb
lcall
push
adc
fadds
xor
jmp
in
xchg
adc
mov
popf
mov
sbb
sub
fstp
out
shrb
mov
stc
pusha
xor
mov
push
aam
mov
mov
jb
int
repnz
pop
sub
jle
xchg
push
dec
xor
call
sub
sbb
lods
imul
std
mov
lret
lock
fdivrs
test
je
and
xor
in
and
adc
mov
dec
std
movsb
adc
lock
sub
scas
adc
aas
xor
jbe
and
cli
jne
mov
and
sbb
lds
arpl
add
fisubrl
pop
scas
cmpl
cmp
ret
fcoml
pushf
shll
mov
cmc
lock
mov
sahf
sbb
pop
inc
pushl
mov
mov
or
negb
in
and
fwait
push
or
mov
int3
push
ja
cmpsb
loope
cmpb
lock
inc
push
imull
pushf
push
dec
push
dec
sub
or
xor
cwtl
mov
xor
xchg
loope
xchg
mov
aad
inc
push
xchg
xlat
cmc
jl
adc
out
mov
xchg
test
sbb
mov
xor
mov
ret
jle
inc
fwait
ja
mov
iret
scas
inc
cmp
push
adc
lea
cwtl
shll
and
lcall
fdivs
jmp
les
xchg
or
and
into
mov
flds
hlt
inc
jo
push
adc
test
adc
lcall
pop
jge
push
jb
jb
idivb
xor
inc
out
jbe
xchg
push
enter
sbb
or
test
adc
aaa
xlat
cmp
mov
lret
int3
mov
mov
lea
imul
or
hlt
mov
jne
out
stos
pop
mov
in
fldenv
mov
stos
lret
cmp
pop
test
jge
cld
movsl
lcall
xchg
shlb
and
and
in
ljmp
pop
std
sbb
aas
insb
mov
ja
movd
pop
clc
lahf
negl
mov
push
repnz
mov
gs
jo
sbb
out
add
jnp
sub
push
les
mov
and
push
push
nop
sahf
mov
nop
psadbw
jmp
fmuls
les
cmp
int
js
push
xor
lods
jnp
push
mov
por
fwait
dec
lea
sbb
mov
js
jl
jo
pusha
sbb
lret
cld
mov
movsl
jbe
xchg
inc
mov
xchg
and
sbb
mov
out
fs
jp
dec
mov
fstpt
push
into
hlt
push
mov
insl
ds
adc
sbb
lods
mov
mov
or
sarb
inc
scas
je
adc
jge
icebp
mov
pop
jnp
or
out
mov
or
divl
or
sbb
jae
insl
repnz
ret
and
fbld
lods
leave
jle
aas
mov
addb
push
popa
jmp
cld
out
ja
call
fidivl
bound
inc
lods
inc
push
sbb
nop
fistl
daa
icebp
cli
loop
leave
or
mov
fsubs
sbb
sti
mov
xor
or
icebp
iret
xchg
imul
negb
sub
das
adc
fldt
movsb
imul
es
lret
iret
and
push
fwait
dec
xor
in
xor
and
xor
push
rorb
cmpsl
sbb
adc
xchg
fs
add
push
sub
jno
std
les
pop
into
pop
jbe
sub
xor
ja
shl
mov
outsb
test
rcl
sub
std
mov
insb
adcl
inc
lods
inc
testb
dec
and
adc
dec
stos
jp
push
roll
out
xlat
arpl
inc
inc
int3
rorb
lret
ficompl
sahf
rorl
hlt
cmpsw
fisttpll
jg
and
cmp
mov
outsl
aaa
mov
sbb
cmp
sti
add
rcr
mov
aad
out
out
ret
scas
push
mov
adc
jge
add
repz
jecxz
mov
push
xchg
into
and
rcl
inc
mov
cs
or
mov
es
fs
fstl
pop
mov
mov
iret
and
lret
pop
inc
mov
and
cwtl
adc
ret
sub
xchg
cld
sbb
dec
jns
xchg
cs
mov
push
mov
cmpsl
leave
mov
fistpll
imul
mov
out
ljmp
sti
sub
movsl
aad
push
lods
push
jnp
rep
cld
xor
outsb
sbb
sar
repnz
mov
fisttpll
mov
jle
adc
iret
test
enter
lret
push
aaa
test
xchg
jb
xor
pop
shll
cmp
pusha
sub
adcb
and
xchg
leave
arpl
insb
jnp
mov
inc
cmpsb
push
jne
adc
mov
fcmovnb
jns
lret
outsb
push
iret
into
jp
daa
inc
cmc
enter
inc
popa
push
push
adc
mov
mov
jne
movsb
sub
cwtl
sbb
jle
scas
jne
ror
lds
mov
mov
mov
xor
out
add
adc
in
out
ds
sub
cmp
fmulp
mov
mov
inc
mov
sub
xchg
mov
es
sbb
aaa
add
test
sbb
jbe
lcall
leave
jl
sub
pop
inc
and
push
shufps
inc
popf
ret
jae
sbb
in
leave
mov
test
push
lret
mov
lcall
or
lahf
or
add
int
lods
gs
xchg
lret
mov
lods
std
out
and
push
and
cld
or
or
pop
addr16
aam
sbb
sbb
xchg
or
or
adc
push
mov
fiadds
add
dec
xchg
mov
daa
mov
or
ljmp
lahf
adc
xorl
xchg
mov
sbb
push
clc
jb
rcrb
pop
sbb
mov
out
sub
dec
loope
cmp
loopne
jo
loopne
cmp
inc
jg
and
xchg
ja
adc
cmp
or
nop
pop
jg
mov
inc
push
lahf
shl
std
push
cmp
and
cwtl
jl
les
sub
ja
inc
dec
mulb
sub
fcomps
cmpl
inc
xor
imul
jl
sbb
sbb
lcall
icebp
gs
scas
stos
jns
jb
ljmp
xor
jl
scas
les
sti
sbb
add
dec
push
mov
retw
sbb
mov
movsb
int
adc
xor
fisttpl
cs
shrl
mov
cmp
add
and
jbe
xchg
jp
cmp
dec
push
xor
fs
in
dec
stos
jae
pop
inc
ss
cmp
iret
gs
mov
cmp
ja
xor
lahf
fdivs
jg
popf
mov
and
dec
outsl
push
pop
stos
dec
dec
in
sti
mov
inc
xchg
adc
and
pop
xchg
lahf
push
dec
xchg
dec
xchg
xor
jnp
mov
test
sbb
movsl
enter
test
bound
inc
xor
andl
xchg
sub
out
or
ljmp
push
out
jl
test
dec
in
sub
flds
push
div
add
mov
xchg
mov
int
sub
les
mov
sbb
aas
xchg
add
push
jg
mov
jmp
ljmp
add
stc
pop
mov
js
cmp
hlt
jne
adc
fisubl
test
pusha
jmp
inc
cli
aad
jge
adc
pop
xor
xchg
mov
mov
jo
std
jne
pushf
sub
daa
movsl
pop
jg
es
fisttpll
jp
loop
outsl
insl
jb
xchg
fisttpll
test
pop
mov
dec
mov
popa
dec
mov
pop
mov
sub
jbe
cmp
test
and
test
pop
xor
xchg
xchg
cmp
cmpsl
gs
jmp
sub
loop
adc
inc
xchg
int3
push
sar
out
nop
out
ds
xor
mov
fdiv
jb
mov
lock
dec
int
sbb
sti
pushf
loope
mov
jb
je
pop
sbb
lods
xor
add
cwtl
jbe
loope
jae
xlat
and
xorb
test
das
mov
push
sub
xchg
and
std
out
int
xchg
je
dec
loop
mov
pop
fmulp
test
ds
lds
dec
nop
stos
addr16
jge
dec
clc
fnstenv
mov
sahf
scas
mov
adc
mov
inc
daa
fdivrl
mov
mov
popa
sti
cmp
mov
int
cmp
xor
adc
jecxz
sbb
xchg
lret
call
inc
loop
mov
sbb
clc
or
in
mov
out
in
cmpsl
shlb
das
xchg
loope
jp
outsl
cmp
push
cmc
add
push
std
imul
outsl
repz
push
sub
push
add
addl
push
rolb
push
mov
testl
push
mov
jmp
pop
sbb
aad
lock
adc
sbb
xchg
sub
fimull
sti
jne
jge
loopne
out
push
subl
mov
iret
sbb
and
pop
push
xor
mov
lret
jmp
movsb
ja
mov
call
sahf
and
xor
sbb
scas
aam
mov
jb
les
mov
xorl
sub
pop
frstor
mov
sub
cmp
jl
push
movsb
fdiv
jp
mov
push
mov
mov
mov
arpl
sbb
pushf
fstps
push
mov
pop
and
sub
sahf
push
sub
arpl
das
stc
inc
push
sub
add
jb
imul
js
mov
push
movsb
icebp
dec
xchg
addr16
ficoml
repnz
aad
sahf
or
cmp
cmp
frstor
cwtl
cmc
ss
ja
cld
mov
sub
mov
inc
jns
dec
mov
xchg
bound
icebp
and
outsl
stc
dec
ds
xor
inc
push
scas
pusha
xlat
inc
sub
les
fisubrl
jo
xlat
sbb
adc
adc
cltd
push
insb
add
sti
bound
insl
fidivrl
popa
inc
les
mov
out
in
add
loop
xchg
push
mov
pop
mov
test
mov
repz
mov
insl
ds
lret
js
sarb
sbb
mov
jecxz
xchg
pop
cmpsb
sahf
and
insl
push
fcompl
mov
mov
mov
mov
call
ja
pusha
in
mov
call
adc
push
mov
sbb
and
in
imul
adc
and
scas
test
adc
inc
leave
or
xchg
movsl
push
jl
or
dec
mov
mov
jl
push
fisubs
pop
jg
out
inc
addr16
xchg
test
push
push
test
sbb
xchg
pop
shr
sti
push
xlat
mov
lds
jle
mov
push
into
cmp
inc
sub
pop
lret
arpl
loop
scas
xor
mov
out
push
stos
mov
sub
add
mov
jp
sub
mov
push
sub
test
pop
inc
adc
mov
push
sti
xchg
mov
jmp
xor
push
pop
push
inc
xor
je
cmpl
das
out
jns
inc
cmpsl
sbb
jmp
mov
sbb
sub
cmpsb
in
leave
data16
inc
cmp
aam
cmp
scas
aad
xchg
dec
mov
add
mov
add
push
mov
dec
lahf
das
cmpsb
lock
aam
shlb
push
leave
mov
xor
cmp
shll
mov
cmp
sbb
decb
inc
icebp
mov
xor
cs
pop
punpckhbw
ret
add
addb
cmp
lcall
xor
imul
jbe
imul
cltd
pop
mov
ja
jo
out
mov
or
ret
out
in
shr
jg
pop
fstps
jo
pop
stos
lret
sti
or
and
mov
scas
cld
outsb
lahf
imul
sub
cltd
je
fwait
cwtl
es
es
mov
mov
mov
fistpl
add
test
ljmp
mov
insb
mov
lcall
cmp
inc
mov
dec
lret
sbb
icebp
jmp
fldenv
imul
mov
cmc
bound
pop
imul
cltd
repz
mov
repnz
repnz
stc
jo
leave
shrb
in
xchg
test
sbb
sub
xor
jbe
inc
jnp
popf
lea
dec
jge
add
add
push
arpl
sub
jmp
adc
loope,pn
xchg
push
xchg
sbb
aam
push
xchg
sub
fldlg2
aad
xchg
ljmp
stc
xor
fdivrs
int3
xlat
or
loopne
loopne
fdivrs
mov
sub
lea
insl
aas
mov
es
push
pop
in
insl
movsb
addr16
addr16
sbb
repz
jnp
stos
int3
std
out
jge
cmp
jle
add
fldt
fstpt
inc
jmp
iret
popa
sub
scas
pop
xor
jmp
xchg
ret
push
xchg
mov
cmp
cmpsb
outsl
les
cltd
arpl
sub
or
inc
ja
and
add
add
xchg
ret
dec
ss
and
fbstp
rolb
ljmp
xor
xor
add
orb
mov
roll
adc
loopne
ljmp
jl
dec
andl
std
shr
mov
ds
adc
lock
imul
test
mov
jne
leave
insl
repnz
and
pop
cltd
xor
daa
sbb
pop
out
jp
xchg
std
subl
jmp
mov
jns
out
sub
shl
movsb
movsb
mov
fs
insb
cmp
push
mov
inc
adc
pop
aaa
movsl
push
jno
les
xor
icebp
jne
in
repnz
mov
and
aad
in
sub
fs
int3
dec
push
cwtl
fcoml
adc
push
adc
cmp
dec
fsubrl
sub
pop
leave
cmpsl
test
hlt
outsl
jb
bound
lea
movsb
xchg
sbb
movsb
push
scas
or
aas
mov
add
jns
xchg
jmp
lcall
dec
adc
sub
inc
arpl
xchg
popf
ret
loope
adc
fisttps
daa
push
xchg
fs
rcrb
addl
out
aad
inc
enter
jg
test
cmpsl
arpl
jecxz
mov
aad
adc
push
sub
pop
rcl
pop
inc
jns
push
adc
in
aaa
in
cmp
or
inc
add
pop
lcall
mov
xchg
add
or
pop
adc
mov
and
xor
cmp
cmp
roll
and
stc
aas
ljmp
pop
shl
add
cli
ja
popf
and
aam
mov
out
mov
sub
xor
data16
and
lds
out
sti
jle
or
pop
cmp
stc
dec
loope
repz
jl
aaa
pushf
push
xor
xlat
lcall
push
xorb
sub
sub
cmp
cltd
xchg
sbb
into
sahf
enter
negb
dec
push
fldcw
push
push
inc
pop
hlt
mov
mov
mov
xchg
es
inc
jg
cmc
pusha
and
mov
add
enter
xchg
inc
ljmp
sti
xchg
pop
addl
push
mov
lret
nop
xor
or
pop
xchg
shll
jecxz
popa
sub
adc
sbb
or
les
add
lods
faddl
scas
insb
imul
adc
adc
rolb
movzbl
or
jo
dec
lods
out
push
and
adc
repz
cwtl
pop
cltd
paddsw
shlb
inc
mov
mov
or
pop
outsl
clc
gs
fidivrs
shrl
push
lahf
negl
lods
lret
imul
xchg
jo
cmp
inc
fidivs
jle
cmp
mov
or
mov
stos
pop
dec
aaa
or
pusha
push
fisubrl
jnp
in
sub
mov
mov
pushf
stos
jp
pop
scas
sub
mov
mov
xor
mov
push
loop
mov
pop
enter
decb
mov
xor
lcall
jp
in
push
and
push
fcoml
dec
dec
mov
push
and
jb
stos
cwtl
mov
dec
jnp
or
insb
and
test
jge
imul
push
xor
fisttpl
mov
xchg
jno
mov
repz
sub
out
mov
jno
pop
xor
jmp
or
mov
jge
je
mov
lods
xchg
adc
fsubrl
cmp
sbb
jmp
lods
jae
and
stc
mov
xchg
cmp
sar
sub
jge
sbb
xchg
cmp
aas
and
cli
lret
nop
mov
xchg
shlb
push
ljmp
jle
jne
nop
out
hlt
rcll
push
adc
inc
xlat
insl
sahf
test
push
nop
add
jmp
jge
fwait
inc
mov
sbb
dec
clc
mov
xlat
mov
roll
jns
imul
stos
into
add
inc
in
dec
cld
aas
add
fs
je
cld
dec
mov
push
fst
subl
mov
mov
sti
adc
arpl
fsqrt
xchg
inc
iret
adc
pop
out
mov
xchg
lret
pop
lods
xchg
mov
add
loopne
mov
in
jg
daa
sti
and
push
mov
mov
mov
inc
xor
repz
push
sti
lret
test
cli
push
xor
mov
push
and
jne
fs
js
test
clc
sarb
sbb
aad
sarb
adc
and
andl
lods
data16
data16
in
ret
pusha
in
ret
sti
mov
adc
imul
push
or
mov
into
xor
frndint
mov
arpl
or
sbb
cmp
sbb
xchg
out
xor
aam
xchg
push
pop
andl
imul
cmp
push
mov
cmpsb
cld
xlat
cmp
mov
xor
mov
xlat
loop
push
ret
lds
popf
cld
mov
shlb
jae
dec
mov
adc
jb
nop
incb
mov
jne
and
jno
adc
call
pushf
movsb
pop
movsl
scas
fnstcw
push
xchg
adc
jecxz
std
mov
jbe
in
and
aam
inc
push
rolb
mov
scas
popa
inc
pop
out
jnp
call
cmpsl
mov
ds
push
pop
mov
aam
iret
sub
ss
jns
fcoms
aad
mov
push
jns
arpl
popf
pusha
repnz
jo
ror
das
bound
ljmp
sub
push
das
pop
sbb
out
adc
cmc
mov
cmp
std
add
jno
js
js
pop
fwait
xor
loopne
xor
andb
and
stc
sub
out
mov
jb
mov
repz
push
test
xchg
outsl
push
ret
mov
mov
repnz
pop
adc
fstps
or
and
xor
ljmp
movsb
push
sub
out
imul
subb
xor
clc
not
mov
mov
xchg
xchg
hlt
xchg
sbb
int3
lods
xchg
inc
std
inc
push
les
jecxz
inc
fadds
pop
stos
fadds
sub
sbb
mull
inc
imul
and
or
pop
jnp
xchg
or
cmp
xor
sub
mov
scas
ficoml
add
insl
xorl
mov
xor
loope
jg
mov
and
sub
aad
and
mov
nop
pop
rcrl
mov
cli
fisubs
movsb
sbb
adc
sahf
pop
pop
cmp
xchg
fdivrp
and
cld
and
dec
fsub
adc
sti
or
adcl
mov
cmpsb
les
add
or
dec
enter
cltd
xchg
sub
mov
pop
push
push
mov
jp
sbb
adc
mov
pop
nop
cmc
dec
stc
sahf
adc
and
jbe
sbb
inc
dec
stos
lods
adc
fsub
imulb
mov
sub
int
aam
and
cs
or
out
leave
cld
mov
in
pop
int3
xor
xchg
push
xor
inc
push
ret
dec
xlat
xchg
test
dec
mov
mull
incb
jno
inc
das
mov
stc
push
in
nop
sti
lods
jae
int
push
mov
mov
cwtl
cmpsb
shr
loopne
inc
mov
lahf
cld
pop
pop
daa
xchg
xchg
jbe
les
into
inc
lds
push
add
fcoms
xor
inc
mov
test
mov
sbb
out
repz
or
rol
cmpsb
cmp
add
xchg
repz
mov
or
xchg
rcrb
inc
xorl
mov
lods
or
aaa
jns
dec
pop
enter
lods
mov
adc
aas
pop
inc
fnstcw
push
ja
mov
test
cmp
push
cmp
fstp
mov
test
imul
imul
inc
and
fisubrl
mov
xchg
aad
lret
dec
pushf
push
xorb
out
mov
and
loope
mov
pop
push
lret
push
fwait
xchg
cmp
sarl
push
ret
pop
sarb
pop
insl
scas
mov
sub
ret
in
pop
or
addr16
sbb
dec
xchg
inc
dec
cs
or
outsl
push
dec
dec
mov
hlt
js
push
fisttps
in
out
mov
mov
shrb
lock
pop
pop
or
movsb
xor
or
mov
inc
push
jno
or
mov
gs
xchg
dec
sub
sbb
test
out
daa
or
inc
loopne
cli
fimull
mov
stc
cwtl
mov
mov
stos
push
jbe
xchg
js
mov
sub
sti
popf
gs
int
pop
mov
cltd
idivb
mov
cmp
jge
je
and
ret
test
push
xor
fstl
pushf
add
xor
arpl
bt
into
mov
inc
jno
sub
and
daa
push
jno
adc
push
mov
fdivl
fs
pop
nop
lea
test
data16
dec
daa
sbb
push
aas
lods
jle
mov
out
lcall
out
sbb
jp
test
imul
inc
sahf
push
sub
shlb
scas
pop
xor
mov
mov
rcl
nop
iret
cmp
or
mov
stos
stos
cmp
out
imul
cmp
push
loopne
mov
insl
mov
aaa
arpl
inc
add
xor
pop
mov
insl
imulb
imul
loopne
xor
addr16
or
lret
fists
sbb
add
add
out
push
enter
shll
shlb
cmp
dec
mov
je
xlat
imul
pop
push
mov
inc
mov
imul
mov
mov
push
dec
popf
jo
rcl
inc
pop
cmp
outsb
enter
loopne
mov
lahf
std
xchg
loope
sub
enter
icebp
xor
xchg
sbb
in
cmp
pushf
pop
sbb
inc
sub
das
fidivrs
mov
xchg
repz
test
jmp
adc
cmp
mov
jecxz
stc
xlat
xchg
cwtl
add
jnp
ja
xorl
mov
push
addl
outsl
nop
pop
mov
and
out
mov
outsl
push
int
jecxz
push
and
dec
mov
pop
push
xchg
test
les
mov
pop
mov
lcall
loop
add
fdivrs
repnz
ret
into
aas
int
xchg
push
test
addl
fsubrs
enter
add
sub
outsb
fimuls
mov
add
ljmp
pop
fs
ljmp
pop
stos
mov
movsb
dec
outsb
adc
clc
dec
mov
dec
mov
scas
jo
outsl
in
das
cltd
sbb
mov
sbb
jne
mov
bound
bound
lea
scas
cli
jns
insl
mov
stos
fldcw
push
mov
cltd
roll
shll
cmp
mov
inc
cmc
mov
mov
pop
mov
lods
nop
pop
push
inc
test
repz
push
aad
dec
or
jae
out
into
repz
dec
test
stc
dec
clc
jg
das
jg
mov
xchg
jmp
push
dec
repz
pop
shrl
movsb
scas
lret
loopne
xchg
leave
pop
test
xor
push
lret
imul
aam
out
jne
or
add
loopne
push
lock
fisttpl
stos
add
incb
lock
xchg
stos
adc
and
lcall
insb
mov
push
jne
xor
mov
push
sub
daa
pusha
scas
mov
ljmp
into
ficoml
cmp
jmp
cld
mov
ret
add
aaa
xchg
sub
push
adc
inc
mov
lds
int
cmc
subb
xchg
inc
jo
jle
or
test
xor
das
jecxz
push
sbb
in
fwait
ret
jnp
adc
xor
dec
xchg
nop
pop
filds
add
jmp
push
dec
ljmp
or
mov
idivb
cmp
inc
popf
sti
addl
fsubrs
xchg
push
insb
sub
testl
fmull
push
jno
mov
out
mov
jbe
sbb
pop
jge
orl
xlat
lahf
test
sub
scas
ret
dec
pop
pop
pusha
popa
sbb
mov
jl
jne
sbb
mov
xchg
push
xchg
jmp
scas
dec
popf
sbbl
call
ficoml
sub
dec
mov
cli
enter
fidivs
cltd
je
fcoml
lods
mov
cmp
jp
loop
or
scas
jb
incl
or
push
jecxz
js
xor
outsl
cmpsb
int3
fisubrl
mov
pop
cmpsb
mov
sbb
fldcw
cs
mov
add
xchg
insb
popa
adc
cmc
loop
mov
lcall
cmpsl
inc
out
inc
loope
push
jo
lcall
in
cmp
mov
inc
push
adc
dec
mov
in
loop
or
outsl
cmc
add
cmp
cmp
and
push
push
lret
repnz
sub
imul
roll
xchg
cmpb
fmul
inc
dec
dec
push
fldcw
mov
push
cmc
mov
xor
sub
adc
testl
stc
jmp
aam
and
icebp
cwtl
cmp
nop
pop
pop
shlb
bts
popa
mov
mov
lcall
adcl
pop
push
and
gs
cwtl
dec
pop
mov
sbb
mov
mov
push
movsl
enter
imul
test
ret
aas
jecxz
jbe
stos
repnz
dec
mov
shlb
mov
push
aaa
xchg
xor
inc
jb
icebp
add
pushl
outsl
cmp
inc
push
pop
out
push
outsb
pop
dec
pop
sti
or
lar
shlb
adc
fs
popf
inc
rolb
xchg
dec
xor
insl
dec
pop
mov
cmp
shlb
xor
mov
ret
sbb
jp
pop
mov
hlt
mov
push
sub
inc
sub
push
in
loope
or
sub
xchg
ficompl
int
push
in
repnz
sti
sub
sub
lods
xor
cs
push
add
ret
inc
roll
dec
ficomps
push
xor
push
sbb
jecxz
cmc
test
frstor
lahf
push
xchg
inc
pop
adc
mov
outsb
inc
repz
dec
pushf
push
subl
cs
pop
cmp
std
jae
inc
sbb
cwtl
pop
inc
outsl
sti
mov
popa
hlt
fisttps
push
sti
pop
jns
inc
in
add
outsl
xor
mov
icebp
iret
pop
stos
orb
dec
pushf
mov
xor
testl
icebp
fs
jl
sahf
ljmp
bound
clc
jae
test
cmp
ret
lret
mov
xor
ret
mov
mov
popf
and
or
inc
nop
jno
mov
lods
mov
outsb
sub
scas
pop
ret
out
je
push
mov
int
sahf
adc
scas
cmc
hlt
sub
cld
imul
xor
outsl
push
ret
dec
inc
and
and
js
xor
cld
xor
arpl
icebp
inc
jns
or
mov
int
fadds
nop
add
dec
mov
scas
jg
insl
repz
inc
hlt
inc
test
aad
push
fucomip
outsb
test
mov
sub
scas
add
pop
subl
jg
cwtl
icebp
mov
jb
enter
out
mov
cmpsb
add
dec
aam
mov
mov
pop
jo
add
fucomi
fisubrs
jmp
mov
insl
sahf
jle
jg
out
loop
inc
hlt
mov
xchg
out
push
or
repz
movl
test
xor
inc
lret
mov
imulb
pop
mov
push
sbb
xchg
pop
in
outsl
and
mov
popa
test
les
in
cmpsb
lds
jo
cmpsl
lret
in
xor
mov
xlat
outsb
mov
fdivrl
push
cmp
loop
xor
jnp
mov
pop
xor
rorb
call
pop
loop
ss
sbb
pushl
sub
mov
sub
lea
pop
mov
xchg
and
inc
lahf
adc
inc
xchg
mov
es
xor
in
pushf
shl
pop
mov
mov
mov
cmp
into
or
mov
mov
cltd
xor
cmp
mov
cmp
mov
adcb
mov
fstpt
imul
les
sbb
test
jmp
xor
mov
push
sbb
inc
in
lods
out
addl
mov
test
test
jno
xor
inc
shr
adc
cmp
pop
lcall
or
jp
sbb
xchg
push
adc
inc
dec
xchg
inc
les
add
rcl
lahf
pop
ds
mov
adc
addr16
aad
fdiv
add
stos
pushf
mov
out
mov
inc
inc
cs
fadd
outsl
into
push
jl
dec
mov
addr16
dec
fwait
cmp
out
push
sub
cmc
push
ret
adc
push
mov
insb
inc
out
leave
push
pop
adcb
outsb
orb
mov
sub
dec
and
mov
inc
mov
je
inc
mov
sbb
and
test
mov
or
mov
mov
mov
ret
jg
add
mov
loop
pop
pop
cmp
popf
je
mov
mov
xchg
pop
out
xchg
sbb
aaa
xchg
mov
pop
fs
in
xor
mov
ret
stos
push
mov
dec
andb
dec
mov
aas
pop
sub
mov
cmp
mul
lock
insb
loope
ss
push
push
cltd
mov
mov
jo
push
incb
fldl
add
lods
iret
or
mov
pop
aaa
int3
and
notl
dec
inc
jae
rcrl
movl
lret
add
pop
pop
jl
stos
push
inc
jl
add
mov
out
pop
jle
jg
fdivr
ret
leave
push
cmp
mov
mov
xchg
loope
iret
scas
add
popf
fwait
jmp
out
mov
icebp
imul
mov
pushf
daa
fsubl
lea
pop
out
loop
inc
or
stos
push
jbe
mov
shlb
mov
or
ret
mov
xchg
out
frstor
mov
subl
lock
xchg
mov
arpl
push
insb
cmp
xor
sti
jmp
fwait
inc
cmc
inc
aas
aaa
mov
in
push
sub
fwait
xchg
mov
lds
fwait
jo
hlt
js
dec
ljmpw
das
and
push
fwait
imul
das
jnp
mov
outsl
xor
ss
inc
repnz
popa
fcomi
pop
xchg
call
lcall
pop
jae
js
bound
stos
xchg
mov
jp
std
adc
lcall
jbe
in
out
xchg
xlat
bound
mov
pushf
shrl
jbe
lea
push
add
mov
jne
mov
adc
je
mov
lea
adc
jno
fucomip
lods
repz
jg
pop
je
imul
pop
in
imul
inc
pop
daa
mov
cmp
shrb
cmp
ljmp
int
pop
fmulp
rcr
jg
add
push
imul
jl
stos
sub
insl
push
jg
jge
movsl
mov
lock
fists
mov
rcl
adc
into
inc
mov
pop
outsl
call
test
mov
cltd
pop
filds
sub
pop
xor
aam
mov
lret
lds
xor
sub
inc
insb
clc
mov
xchg
push
stc
mov
cli
mov
in
icebp
fsub
nop
pop
bound
call
push
icebp
lods
les
stc
cmp
push
jge
es
pusha
outsl
out
fwait
pop
ds
jb
cmp
outsl
mov
xor
adc
in
clc
std
call
pop
or
sti
add
incb
jae
addl
xchg
xor
adc
lahf
inc
jl,pt
mov
add
daa
xchg
or
push
insb
cltd
inc
repz
and
xor
jnp
dec
and
xchg
or
lods
out
std
gs
jne
dec
jo
inc
pop
cs
jne
xor
pop
or
shll
movsb
sbb
pop
or
inc
cld
pop
in
xlat
aad
sbb
rcll
repz
push
mov
inc
bound
and
mov
xor
int3
ljmp
mov
pop
add
pop
and
pop
pop
mov
ffree
mov
mov
fimuls
popf
in
sbb
sub
pop
fcmovne
arpl
jecxz
jne
inc
call
cmp
sarb
cltd
xchg
xchg
adc
fmull
inc
out
int3
sahf
test
stos
sub
stc
lock
movsl
push
sahf
lret
fwait
xchg
clc
add
pusha
push
leave
test
push
into
adc
mov
cmpsl
jg
add
bound
insb
xchg
or
or
adc
call
ja
mov
mov
and
mov
out
add
or
outsb
dec
xor
into
rcr
bound
insb
inc
push
mov
shrl
rcr
jb
pushf
or
inc
xchg
jnp
filds
out
xchg
xchg
addl
nopl
fadds
fucomp
xor
out
pop
jo
pop
mov
js
data16
out
push
sub
jnp
mov
js
or
ljmp
or
jp
jb
stc
int3
dec
lea
das
popa
and
or
lcall
mov
testl
lds
xchg
les
jbe
inc
inc
push
xlat
mov
push
test
lods
sub
dec
xlat
sbb
mov
nop
adcb
orl
enter
and
test
push
roll
in
xlat
ret
jns
test
mov
or
sbb
pushf
into
add
loop
add
shl
pushf
fs
pop
fldt
sbb
cmc
mov
movsb
sbbb
or
lret
push
push
ret
cmpsl
xchg
cmp
and
sbb
cmp
outsl
xchg
jmp
pop
and
mov
cli
hlt
push
pop
loope
imul
fiaddl
push
cmpsb
jo
jp
cmp
test
arpl
cltd
or
xchg
push
sub
jmp
jnp
nop
jb
mov
cmpsb
mov
mov
or
add
mov
shrb
cmp
push
inc
sub
jbe
xchg
lods
sarl
lret
xor
push
sub
outsl
lret
aam
sbb
push
js
jle
shr
int3
mov
add
ja
aas
mov
xchg
out
je
adc
fwait
inc
or
sarb
mov
dec
ja
xchg
adc
push
int3
or
enter
je
mov
sbb
sbb
xchg
or
sarl
push
loopne
mov
jle
xor
mov
lock
popf
aas
jns
jbe
jnp
push
add
jecxz
cmp
add
and
hlt
cmp
mov
adc
sub
inc
fsubrs
lds
stc
sub
inc
sub
xchg
add
pushf
pop
xchg
xor
jl
pop
into
call
vmovss
fcomp
cltd
and
je
loope
pop
int3
xor
scas
jns
jl
fs
cmp
mov
cmp
pusha
add
add
out
pop
pop
jne
int3
jbe
pop
xor
pop
fistpl
pop
xor
sbb
mov
ror
sub
and
mov
rcr
cmpsl
std
leave
icebp
leave
lret
cmp
pop
push
dec
out
xchg
cmp
dec
lret
jmp
test
arpl
testb
out
pop
sahf
jo
mov
or
and
jmp
pop
push
das
or
adc
pop
testb
sahf
xor
scas
mov
adc
add
jecxz
cmp
and
add
and
movsl
in
sub
pusha
int3
and
es
ds
cwtl
popa
sub
mov
lahf
sub
sbb
sbb
shrl
pop
mov
loopne
dec
adcl
inc
pop
into
rorb
out
adc
and
mov
adc
imul
xchg
mov
adc
into
inc
lcall
aad
dec
sub
xchg
in
test
cld
push
rolb
test
imul
daa
push
sti
or
ror
fildll
mov
inc
outsb
sahf
add
in
je
xchg
push
cmpsb
add
xor
push
inc
enter
and
rol
or
js
cmp
jo
mov
pop
scas
rcrb
inc
addb
inc
mov
icebp
out
xchg
in
mov
mov
add
nop
inc
test
push
add
dec
ret
into
adc
outsl
inc
ja
sti
mov
scas
inc
ret
int
into
xor
das
sahf
test
das
jge
icebp
dec
jecxz
xor
mov
dec
hlt
xor
pop
mov
and
addl
orb
sbb
sub
mov
mov
mov
jnp
add
in
scas
das
push
add
punpcklwd
push
test
cli
mov
push
sbb
je
ss
test
int
mov
adc
mov
into
push
and
mov
xor
jae
aam
inc
jecxz
test
fistps
mov
sahf
adc
cwtl
jo
cmp
shr
dec
cmp
into
popa
fisttpl
das
pop
or
add
mov
or
cmpl
adc
jl
mov
aad
and
mov
movsb
js
cld
mov
jae
dec
imul
push
or
mov
daa
popa
xchg
rorl
loope
loop
adc
xor
cmp
cmp
add
or
xor
test
divb
das
inc
repz
dec
aad
xchg
push
inc
xchg
sbb
jl
mov
mov
mov
mov
push
frstor
dec
adc
sub
and
xor
aas
ret
xchg
iret
dec
xor
pusha
loope
aas
push
cmpsb
sub
mov
xchg
daa
in
loope
loop
sbb
aam
cmp
sahf
or
pop
xor
inc
ljmp
leave
es
jmp
stos
mov
iret
popa
iret
rclb
jge
jmp
fnstsw
mov
pop
sahf
jo
cmp
dec
sbb
ret
adc
clc
ret
imul
and
push
repz
aaa
jle
fisubrl
add
cmp
cmp
mov
inc
and
mov
out
lahf
outsb
call
sbb
mov
pop
stc
repz
xor
mov
adcl
movsl
pushf
scas
or
mov
idivb
jb
loopne
jb
pop
push
push
pop
dec
mov
sbb
into
popf
mov
loopne
dec
xchg
test
shll
jl
enter
dec
mov
mov
adc
inc
cmp
mov
mov
aas
add
jns
mov
rcrb
push
xchg
call
jg
fisubs
in
fld
add
sub
sarl
es
push
setno
outsl
into
inc
and
add
outsb
push
pop
mov
sub
cmp
push
aas
xchg
add
ljmp
xor
mov
xor
dec
or
aad
adc
ja
pusha
or
mov
pop
sbb
cmp
movsl
sahf
iret
xor
stos
or
xor
pop
jno
xor
stos
lods
and
xor
xlat
and
icebp
pop
push
add
or
in
test
xchg
rcll
lods
or
xor
jp
call
imul
imul
int3
fs
rorb
int3
push
push
cmp
imul
shlb
mov
ss
dec
mov
jg
sbb
in
mov
scas
inc
daa
jnp
mov
jl
dec
mov
push
out
imul
adc
ret
mov
inc
adc
push
xlat
in
adc
mov
add
add
out
and
fisubrl
mov
push
mov
adcl
mov
shlb
ret
mov
sub
push
outsb
cmovae
daa
push
in
push
sub
and
lret
js
mov
pop
xchg
or
sub
mov
jp
inc
test
fstpl
jmp
add
cmc
inc
pop
jbe
cmp
sbb
xchg
push
andb
outsl
push
add
mov
loopne
push
and
jecxz
mov
xor
fwait
push
cmp
cmp
cmp
stos
dec
orl
cs
pusha
sub
pop
adc
push
xor
test
test
add
pushf
shlb
mov
pop
sub
xchg
sub
jo
pop
sbb
cmpb
mov
aas
jo
shll
adc
push
or
sbb
sub
popf
xor
fildll
fcomps
scas
inc
pop
adc
xchg
icebp
hlt
mov
addr16
hlt
xchg
cmp
imul
dec
mov
std
outsl
add
leave
adc
sti
in
and
movsb
xchg
xor
lcall
pop
testb
add
dec
xor
nop
inc
xor
es
loop
into
pop
xchg
cli
xchg
and
scas
popf
or
sub
pop
sub
pop
imul
stc
pop
dec
xchg
sahf
call
sbb
jp
xchg
push
rcll
sub
or
imul
xchg
add
roll
cmp
mov
dec
fisttpll
sbb
arpl
inc
pushf
sbb
pop
test
outsb
lret
push
cmp
sbb
call
clc
pushf
push
push
mov
jb
test
and
jle
xor
insl
imul
int3
movsl
mov
arpl
outsb
xorl
or
fwait
repz
jl
lahf
sub
fs
jmp
daa
cli
rclb
or
or
rol
lret
push
dec
fs
in
in
rclb
fldt
fsubrs
jg
pop
leave
sub
push
jbe
mov
test
fistpl
imul
mov
xor
mov
add
mov
jns
add
das
ret
fldenv
push
filds
and
movsl
out
jns
mov
dec
pop
cmp
test
adc
jmp
ja
push
cmp
pop
inc
pop
test
cld
outsl
xor
and
add
add
rorb
mov
aaa
push
dec
icebp
pop
sbb
jae
in
sbb
add
or
fs
enter
adc
int
cmpb
lds
or
sub
mov
adc
arpl
fwait
dec
dec
ja
sbb
sbb
inc
pop
push
neg
dec
add
sbb
adc
les
aaa
adcl
outsl
dec
movsl
and
dec
movsb
je
cli
popf
mov
fs
je
mov
push
or
mov
sub
enter
cmpb
clc
pop
xchg
sahf
fiaddl
sub
lds
sbb
add
scas
inc
cmpl
push
call
jo
in
scas
std
lahf
xchg
cli
scas
cwtl
out
mov
push
jge
imul
pop
ds
ret
adc
outsl
cltd
dec
ljmp
nop
and
dec
call
ljmp
cmp
cmp
and
pop
inc
mov
in
jns
ret
xchg
push
test
and
in
sub
fnstsw
cmp
fucomi
sbb
fstl
xor
push
push
rorl
mov
pop
pcmpgtb
push
or
cmp
and
mov
adc
dec
insl
xor
stos
fnstcw
stos
fisubs
mov
push
lret
stos
pop
out
repnz
add
add
inc
test
push
pop
pop
mov
dec
mov
nop
pop
sbb
ret
data16
dec
dec
dec
sbb
inc
or
xchg
aam
cmp
sub
ret
hlt
and
and
xor
popf
xchg
scas
xchg
mov
sub
pop
jae
xchg
mov
incb
call
mov
xor
adc
adc
mov
aaa
mov
fdivrs
mov
insl
hlt
inc
js
test
rcll
cmp
ret
andb
push
push
mov
addr16
cmp
enter
cmpsb
mov
roll
ficomps
pushf
test
rolb
mov
lahf
call
sbbl
adc
jno
cwtl
insl
shlb
cmp
add
xor
sti
jb
mov
mov
xor
sbbl
mov
sti
and
mov
repnz
jmp
pop
shrl
mov
jge
xchg
mov
addl
sub
push
jns
push
jecxz
jae
hlt
xchg
mov
mov
cli
push
pusha
enter
leave
lcall
pop
in
mov
stos
sub
sbb
icebp
shl
add
inc
or
cmp
call
mov
filds
pop
and
pop
cs
insl
div
movsb
push
jmp
rcl
bnd
sbb
sbb
xchg
dec
jns
push
cmpb
xchg
jmp
inc
pusha
and
sahf
add
fwait
jnp
icebp
dec
pop
and
negl
iret
and
pop
cltd
jg
push
mov
sti
lods
ljmp
in
dec
add
jnp
and
out
mov
mov
xor
xchg
lods
incl
imul
loopne
aas
fwait
cwtl
ljmp
push
ss
repz
pop
movsl
push
cmp
je
xchg
addr16
jae
push
ret
adc
inc
test
aaa
ret
sbb
nop
mov
loope
fwait
stos
leave
out
sbb
enter
adc
adcb
jmp
jb
pop
inc
pusha
loop
or
xchg
lcall
sbb
pop
pop
or
sahf
xor
shrb
inc
push
push
insl
push
mov
pushf
aam
aas
in
pop
data16
lret
clc
outsl
aam
fdivrs
bound
jne
pop
mov
push
mov
nop
sbb
shlb
cmc
inc
mov
jmp
add
aaa
xchg
jo
fnstcw
sub
pop
dec
xor
jnp
inc
xor
pushf
sub
incl
movb
sbb
aas
fnsave
cmp
adc
adc
lock
dec
loopne
add
xor
fucomip
lock
cmp
orl
and
movsb
add
fnstenv
dec
inc
daa
fwait
cmp
push
test
movsl
or
sub
mov
in
call
dec
ja
lea
xor
and
out
jae
out
add
in
mov
add
push
inc
lea
clc
xor
push
xlat
inc
outsl
mov
sub
cltd
push
adcl
int
mov
addr16
sbb
cltd
mov
pop
loop
rorb
ret
sub
push
out
stos
xchg
dec
jae
scas
and
insb
push
lret
mov
es
imul
cld
add
jle
push
sbb
xchg
pop
notl
adc
inc
mov
imull
sub
adc
push
pop
mov
xor
inc
scas
loope
and
jl
leave
in
or
inc
ja
sahf
sbb
pop
mov
and
jecxz
add
push
sbb
enter
cmpsb
inc
jbe
je
ds
and
sub
xchg
repz
js
cmovge
lea
std
mov
out
jmp
pop
xchg
xlat
cmc
sbb
mov
loop
sub
xor
push
fistps
cmpsl
jg
cmp
sbb
jg
scas
ret
sti
loopne
fbstp
xchg
pop
mov
cmp
jl
ljmp
sahf
out
dec
leave
and
icebp
mov
out
cmc
or
push
mov
lret
push
das
mov
mov
mov
mov
pop
push
ljmp
out
mov
push
jnp
das
pop
push
loop
and
dec
in
lret
push
or
or
xchg
mov
lods
outsl
pop
xchg
sarl
mov
sbb
stos
xor
rorl
cld
sbb
out
fwait
xchg
mov
test
mov
das
pop
jno
pop
mov
cli
cs
mov
mov
pop
or
push
and
jne
xor
mov
xchg
or
xor
xor
out
mov
sbb
add
pop
mov
mov
ljmp
stos
inc
lret
pop
inc
int
pushl
mov
imul
lret
xchg
aam
pushf
cs
sbb
inc
pop
xor
adcb
mov
jge
mov
scas
ss
inc
push
mov
push
xorl
cld
xchg
aaa
int3
into
and
fnstenv
xchg
xor
stc
orb
add
and
pop
filds
push
pop
cmp
icebp
mov
mov
mov
repnz
shll
clc
mov
sbb
inc
xchg
or
andl
and
xchg
in
pushf
pop
sub
rcrb
rol
jb
inc
inc
popf
roll
dec
callw
cltd
test
ret
iret
fnstenv
adc
jmp
mov
fsts
xchg
vminss
outsl
jns
sub
fdivrl
fwait
mov
jl
sbb
sahf
dec
push
add
or
out
jae
aad
lcall
push
pop
jg
stos
ficomps
mov
mov
lret
fdivrs
bound
dec
filds
cmp
out
movsb
nop
jmp
idivb
add
aam
xchg
mov
sbb
cwtl
out
sub
lret
aam
cltd
sti
mov
jecxz
adc
loop
loope
sub
and
dec
fcoms
orl
mov
adc
orb
cmp
aam
mov
mov
lcall
pop
rcll
movsb
cltd
push
cmp
insl
xlat
xor
xchg
mov
jno
xchg
xchg
mov
jg
jecxz
jo
bound
push
mov
mov
inc
cmc
mov
adc
cmp
lahf
add
sub
popa
cmpsb
jns
pop
es
jb
fidivrs
push
sahf
pop
push
cli
sub
lahf
push
jo
dec
in
pop
int3
cwtl
sbb
icebp
in
ds
xchg
pop
popl
cwtl
call
js
in
imul
ljmp
push
xlat
cmp
mov
pop
call
inc
xchg
arpl
pusha
or
cmp
call
in
inc
iret
bound
mov
das
outsl
xor
inc
fwait
jle
scas
cld
lods
daa
dec
arpl
adc
roll
loopne
fimull
adc
jbe
dec
and
pop
cmp
inc
add
jmp
xchg
xchg
cmp
and
rcrl
in
jge
les
xchg
cmpsl
xchg
rclb
or
lcall
cltd
sub
cmpsb
xchg
ds
inc
les
lea
jl
xchg
xor
daa
and
xchg
jne
repz
and
push
sub
push
adc
aam
shrd
fwait
or
movsb
jg
add
mov
mov
inc
pusha
xchg
xor
fdivrs
subl
iret
xor
ret
xor
stos
cmpsl
in
jb
jbe
out
push
addl
loopne
into
jnp
shll
jg
shl
push
repnz
push
inc
adc
repnz
outsl
neg
pop
cltd
and
divb
fs
xchg
lcall
je
pop
fisubrl
xchg
cli
dec
stc
shl
pop
mov
xchg
shlb
insl
push
cmp
fisubs
fildl
pushl
js
or
int3
dec
movsl
push
xor
cmp
xchg
pop
xor
outsb
push
addl
mov
aam
sub
push
jnp
mov
mov
add
or
fcmovnbe
insb
mov
leave
in
lret
jmp
shr
scas
push
pop
and
mov
push
mov
adc
lods
jle
xchg
mov
xor
pop
sbb
mov
and
xor
jmp
popa
movq
push
pop
xchg
add
into
test
clc
pop
push
sysret
enter
fcomip
mov
imul
movsl
call
cmpsl
pop
mov
lock
mov
push
rol
call
add
cmp
sbb
mov
rolb
lock
das
jmp
loop
xor
mov
clc
ljmp
add
outsl
cmp
mov
or
dec
inc
aaa
dec
and
adcl
cli
fcoml
xlat
sub
adc
push
jge
sub
lock
loopne
inc
clc
mov
mov
mov
leave
adc
xchg
adcb
push
fldt
fstpl
dec
scas
lcall
dec
nop
out
fadd
das
es
into
sbb
sbb
push
mov
jecxz
xchg
test
push
push
rorl
add
sbb
imul
push
or
add
mov
out
sub
jne
and
mov
loop
jle
clc
mov
inc
bound
jge
addr16
jnp
push
cmpsl
aam
imul
xchg
jg
in
or
lahf
or
in
jno
pop
sbb
add
in
inc
jnp
add
fistpll
scas
push
sub
fstl
lret
icebp
mov
inc
sub
mov
mov
movsb
addr16
push
lods
loop
pop
rcl
xor
iret
ss
ds
jmp
inc
sub
insl
inc
and
inc
outsl
or
outsb
lret
push
ror
jo
sbb
cld
repnz
out
dec
cld
cmc
mov
arpl
mov
mov
dec
push
js
sub
inc
push
and
mov
or
pop
mov
orb
outsl
jbe
out
cmpsl
inc
loop
xchg
mov
jmp
fisttpl
mov
dec
pop
stos
or
lret
decl
stos
aas
xor
mov
enter
or
push
jnp
add
sbb
adc
cld
fdiv
movsl
aad
lds
je
sti
mov
dec
push
add
pushf
lock
insb
sub
dec
pop
test
jg
test
pop
data16
mov
scas
lret
push
sti
popf
aaa
sub
fists
lret
dec
scas
xchg
jp
sub
inc
mov
mov
jle
icebp
fstps
aad
and
int
and
pusha
orl
sahf
adc
push
xchg
mov
sub
clc
into
loop
repnz
mov
shrb
cmp
outsb
cmp
hlt
mov
pop
incl
push
pop
jae
or
int3
icebp
xor
push
movl
les
mov
sbb
pop
cmp
enter
pop
mov
inc
add
dec
xor
inc
mov
incb
pop
daa
cmpsl
and
call
outsb
lea
lods
inc
xchg
in
incl
xor
adc
test
ret
mov
imul
nop
jns
repnz
jge
adc
add
pushf
xor
sbb
mov
sub
jg
dec
in
pusha
cltd
fcoml
ljmp
dec
adc
and
bound
cmpsl
faddl
adc
loopne
lret
dec
rcll
pop
call
jno
mov
sbb
adc
inc
xchg
lret
xor
mov
xchg
aaa
pusha
and
xchg
fstpl
je
dec
adc
icebp
fildll
cmpsb
xchg
dec
inc
popa
add
mov
jge
ja
mov
rolb
cmp
sub
icebp
jg
in
lcall
pop
xchg
in
dec
jge
clc
push
pop
movsl
xchg
and
andb
sbb
inc
shrl
sbb
repz
ret
mov
inc
nop
stc
adc
push
and
fwait
mov
lds
rcrl
outsl
pop
push
xor
std
pop
ljmp
fisubrs
xor
loopne
popf
jl
pusha
mov
sbb
rorl
sbb
icebp
dec
das
lahf
push
add
jae
mov
adc
adc
adc
fdivp
sbb
push
dec
xchg
pop
xchg
push
iret
xorl
xchg
call
test
bound
hlt
xor
inc
push
stc
or
stos
pop
nop
dec
packuswb
inc
sahf
scas
dec
mov
in
fldl
inc
push
es
lea
bound
inc
dec
mov
imul
fnsave
mov
ret
sub
jo
jecxz
out
mov
jns
mul
iret
push
test
mov
popa
test
scas
pop
psllq
dec
dec
sahf
jnp
je
and
test
adc
pusha
dec
mov
inc
out
gs
jp
loope
notb
dec
xchg
cmpsl
dec
das
mov
cltd
cmc
push
ds
test
or
cmc
xor
jl
xchg
xchg
push
push
jnp
lock
and
mov
repz
sbb
jne
imul
sbb
add
scas
sar
insb
out
hlt
jl
fidivrl
je
push
jp
jno
test
xlat
xchg
cmp
sahf
push
add
cld
jmp
xor
ror
loope
and
je
xlat
inc
sar
loopne
inc
popa
inc
xor
push
jnp
scas
jns
push
test
mov
xchg
mov
ficoms
loopne
pop
popa
xchg
cmp
push
das
aas
movsl
mov
loop
mov
cmp
add
push
xor
fs
or
lods
and
pop
or
lcall
mov
xchg
cmp
stos
je
enter
and
out
jae
cmp
shll
cmpsb
divb
rcr
movb
lahf
jbe
cmpsb
pop
out
or
pusha
mov
sub
aas
mov
rclb
mov
daa
push
fildl
jb
iret
mov
sbb
jno
lods
aam
xor
mov
cmp
loopne
lea
pusha
inc
inc
and
fcomps
mov
jmp
sarl
lret
lret
sarb
fildll
cmp
jns
aaa
or
xor
sub
movsb
add
push
notl
cwtl
pushf
fstp
cli
hlt
fucomi
cld
inc
or
lock
inc
in
jmp
movsb
add
outsb
jmp
out
test
pusha
daa
pop
dec
popf
imul
jbe
and
inc
cs
push
add
outsb
inc
stc
lock
pop
xchg
adc
scas
xor
fldenv
pop
out
push
push
fbld
int
fs
and
inc
push
insl
outsl
mov
pop
and
inc
inc
test
movsl
or
or
xchg
mov
inc
add
cmpsb
fstl
or
push
fsubrl
pop
push
ret
cwtl
pushf
jbe
hlt
shl
int
pusha
test
fsubl
cmp
add
fs
sti
xchg
imul
push
or
addb
pop
pop
stc
sub
dec
jns
incb
movsl
add
insb
jl
je
mov
adc
mov
ja
fs
shlb
cmp
mov
adc
dec
cld
js
mov
je
inc
cmc
mov
jae
aad
mov
ficomps
jnp
mov
lcall
add
xchg
adc
test
mov
mov
and
call
lods
loop
les
rolb
push
dec
jge
add
pop
sub
or
insb
loop
ja
dec
xor
xchg
xor
cmp
inc
test
jne
xchg
int
insb
fucomi
sbb
xchg
loopne
popf
aam
leave
mov
mov
lds
push
jp
jge
sub
sbb
lret
sti
lods
popf
in
loopne
mov
in
mov
or
lea
mov
sti
adc
xor
pop
sahf
loope
xlat
sti
out
fs
xor
mov
in
or
aas
data16
xor
inc
out
mov
cmp
jae
leave
jecxz
jo
jns
xchg
push
and
add
pop
or
stc
inc
les
addb
popa
dec
mov
fldcw
xor
jae
lcall
and
cmpsl
mov
pushf
rcrl
sub
iret
addl
mov
imul
push
jns
cmpsl
dec
fcoms
jecxz
out
sbb
mov
in
mov
inc
ds
inc
or
mov
cmp
je
mov
cmc
jecxz
sub
inc
mov
sub
inc
mov
lock
cmp
push
outsl
adc
push
stc
fwait
push
out
add
push
mov
jp
mov
outsl
cmp
loopne
push
sub
pop
test
cmp
inc
imulb
inc
shll
pushf
adcl
jge
mulb
iret
mov
mov
xor
cmp
or
outsb
aad
pusha
nop
sbb
xchg
jg
int3
pop
imul
hlt
adcl
out
jecxz
xor
adc
push
push
adc
fucomp
push
rcl
push
xor
mov
movsl
test
repz
or
cmpsl
dec
xchg
mov
outsb
test
lds
add
cmp
aad
jbe
inc
stos
jmp
imul
aaa
call
ret
cmc
movsl
add
in
sub
xchg
push
dec
adc
enter
pushf
int
pop
xchg
arpl
and
mov
mov
jl
cs
cwtl
mov
stos
ja
fidivs
jecxz
xor
sbb
cmp
insl
mov
pop
cmp
xor
mov
push
push
gs
enter
jbe
cmc
scas
mov
dec
mov
push
pop
cmpsb
or
repnz
mov
aaa
pop
outsb
mov
outsl
mov
lds
repz
sbb
jl
push
fisttpll
add
pop
mov
push
pop
cs
sbb
jne
dec
push
call
aaa
insl
movsl
cmp
mov
sbb
adc
scas
jg
cmp
jmp
popa
mov
dec
jecxz
inc
and
xchg
fistl
scas
in
orb
cld
pop
push
push
mov
cltd
mov
shlb
sub
imul
mov
loop
cmp
test
sahf
dec
into
adc
xchg
mov
mov
add
pop
xlat
cmp
mov
ret
das
mov
movsb
int3
not
cmp
int3
push
add
test
testl
and
push
stc
sbb
sbb
cmp
push
push
ljmp
out
push
daa
bound
sbb
filds
adc
and
decb
sbb
sub
loopne
adc
jnp
fwait
xchg
lahf
dec
or
sbb
adc
mov
cs
test
and
mov
popf
jl
push
adc
decb
mov
xchg
dec
mov
mov
or
xchg
ljmp
icebp
sbb
out
xlat
lret
adc
dec
xor
xchg
jnp
cmpsb
xor
push
pushf
pop
jp
out
mov
jmp
pop
xchg
jmp
jne
adc
test
xor
xchg
fistpll
sbb
cmpsl
push
ret
xchg
shl
cmpsb
das
and
cmc
mov
xchg
sub
sub
pop
mov
test
push
cmpsb
stc
pop
stos
add
dec
aad
inc
xor
retw
adc
shll
adc
cmpsl
xlat
imul
cmp
cs
jns
jle
jg
cmp
adc
jle
xchg
stc
cs
and
cwtl
push
popf
jmp
pop
xor
jb
bound
mov
mov
jbe
sbb
out
enter
and
cld
and
cld
inc
fs
xchg
shr
addr16
stc
adc
sub
mov
sub
mov
push
imul
pop
ljmp
rcll
loop
adc
scas
or
mov
lock
repz
out
mov
int
int
ljmp
scas
adc
cmp
cwtl
adc
pop
push
lods
es
les
mov
push
addr16
dec
into
popa
mov
jbe
jb
movsb
movsl
xchg
mov
popf
mov
incl
stos
clc
add
je
sti
push
pop
and
pop
push
in
mov
call
int
stc
cli
xchg
test
dec
sub
sarb
adc
fwait
sbb
inc
add
sbb
add
cmp
cmpsb
mov
add
inc
js
jmp
daa
pop
or
ret
sub
and
insb
test
daa
je
fs
inc
and
test
fdivl
shll
mov
dec
cmp
jo
leave
xor
popf
push
dec
sub
or
out
mov
or
add
sbb
fisttps
icebp
sbb
pop
add
or
test
iret
andl
dec
ss
xor
mov
cmp
cmp
sub
stos
mov
stc
mov
repnz
pop
mov
sahf
dec
sbb
notl
or
inc
jbe
mov
push
add
pop
adc
xchg
ds
cmc
imul
jo
sub
jae
stos
mov
adc
mov
ds
leave
in
cmp
leave
addr16
shll
xor
pop
mov
in
sbbl
iret
push
push
mov
cmc
popf
inc
loope
xor
cmp
push
inc
xchg
adcl
mov
inc
test
and
ja
sbb
leave
decl
clc
aad
vpunpcklwd
out
inc
add
push
add
mov
test
push
sub
xchg
mov
inc
sbb
sbb
mov
inc
mov
fmul
add
shrb
fsubs
cld
push
divb
lods
xchg
or
xor
ja
pusha
addr16
testl
inc
sbb
mov
mov
lahf
mov
jne
mov
and
pop
insb
test
fimuls
mov
imul
sub
lret
leave
inc
ss
mov
es
leave
loop
jmp
andl
push
adc
sbbl
adc
and
lret
push
jns
push
hlt
pop
lds
push
scas
mov
cltd
std
sub
in
das
jmp
movsb
cmp
push
jae
nop
ja
push
daa
je
lret
shll
push
sbb
or
inc
mov
pop
setge
dec
vsqrtpd
fisubrs
pop
jmp
mov
inc
leave
xor
lcall
movsl
cld
cmp
cmp
repz
push
jb
loope
xorb
movsl
mov
mov
enter
clc
pop
scas
cmp
push
xchg
jge
or
adc
jns
add
jp
int3
dec
subl
dec
test
mov
add
in
nop
sbb
leave
fsubrs
repz
mov
push
dec
xor
ljmp
lods
jb
mov
mov
leave
out
in
pop
imul
jae
xchg
faddl
out
dec
scas
idivb
nop
stc
xchg
cmp
jnp,pt
jo
inc
cmp
pop
adc
aam
test
cmp
dec
sbb
mov
or
or
rol
push
cld
psubusb
pop
dec
pusha
mov
in
sbb
popf
pop
jl
gs
lock
int
mov
xchg
push
lods
scas
shrb
jae
ljmp
rcrl
fs
loopne
xlat
ds
aas
bnd
push
data16
mov
mov
mov
mov
pop
inc
lods
std
enter
push
out
sbb
push
test
jl
mov
mov
in
out
mov
test
jp
push
adc
and
xlat
and
push
out
incl
data16
mov
dec
fisttpll
nop
mov
cmp
ret
xor
test
inc
mov
push
mov
daa
jo
shll
fwait
dec
scas
inc
fistps
rcrl
into
mov
out
pop
cmp
mov
push
add
mov
test
js
sbb
sbbl
out
gs
mov
popa
sbb
arpl
bound
fldl
shll
sub
xlat
xchg
push
ja
int3
sbb
orb
fstpl
enter
push
gs
testl
sbb
pop
dec
xchg
mov
mov
xchg
xlat
and
fwait
mov
fldt
or
add
inc
inc
sbb
divl
int3
in
jne
or
jmp
jg
loope
push
mov
and
mov
lods
dec
mov
xchg
mov
test
cmpsb
loop
xorl
jns
lods
or
outsb
jno
insl
popf
in
cmp
lret
bound
inc
fdivr
sub
jmp
mov
jl
adc
jmp
loop
cmp
cmp
dec
push
cmp
push
fidivrl
pop
shll
shr
mov
dec
pop
cltd
dec
xor
push
sbb
shll
adcl
out
mov
ret
mov
jle
xchg
inc
mov
jmp
ds
int
ret
mov
mov
sub
mov
dec
clc
jge
push
fsubp
push
je
arpl
mov
rcrb
ljmp
movsl
hlt
add
jmp
pop
in
aad
call
sarb
pop
push
faddl
mov
mov
xchg
sub
fcomps
fwait
inc
test
mov
xor
cmpsb
ret
dec
push
iret
push
addl
das
mov
rorl
mov
cmpsb
pop
pop
adc
add
roll
mov
dec
pop
lea
cltd
lock
cwtl
nop
mov
sub
mov
jecxz
push
jbe
mov
dec
pop
cmp
xchg
rclb
cli
cmp
ljmp
jecxz
out
or
enter
fbld
mov
push
imul
push
fwait
js
sub
lods
cmpsb
out
and
adc
add
push
push
sbb
xor
and
scas
add
add
rcrl
dec
push
aaa
and
pop
pop
inc
jg
jecxz
nop
loopne
jle
or
ret
repnz
fs
addr16
movsl
xchg
sbb
mov
iret
jnp
out
inc
sub
sbbl
adc
test
insl
sti
jmp
insl
lahf
push
pop
or
sub
mov
fmull
das
pop
nop
lods
stos
jmp
sahf
scas
inc
xchg
in
push
mov
mov
mov
jnp
cli
mov
jecxz
mov
ret
push
cmp
lea
cltd
les
insl
lds
sub
mov
test
cmp
jo
mov
mov
icebp
movsb
rol
addb
call
mov
das
mov
loope
adc
mov
sbb
jne
push
mov
mov
sub
sbb
xor
jne
xor
stos
xchg
arpl
pop
repz
mov
repz
pop
insb
or
dec
adc
sub
xor
inc
data16
push
data16
shrb
or
sahf
add
stc
cmp
out
out
pop
jno
xlat
les
stc
inc
out
add
inc
pop
push
addl
cmp
dec
xor
popa
and
out
inc
dec
fldl
in
push
into
fwait
je
std
inc
mov
bound
or
mov
pop
or
inc
adc
pop
cmpsl
repnz
or
lret
jo
add
xchg
into
sti
out
lock
cmp
int
inc
mov
pop
rolb
cmp
inc
jno
dec
dec
push
dec
or
push
jns
xchg
dec
mov
adc
fs
adc
inc
fidivl
xor
jmp
xchg
mov
push
lock
push
cmp
push
das
dec
out
xchg
mov
outsb
sbb
adc
adc
inc
fsubs
fwait
popf
out
ss
arpl
sub
pop
mov
jns
call
movsb
sub
dec
push
rorb
pop
cmp
xchg
push
incb
in
jo
xlat
rolb
inc
dec
ud0
cmp
fldl
popa
sarb
xlat
xchg
jo
jae
mov
data16
data16
push
mov
out
or
or
addb
leave
inc
push
mov
jp
jns
es
xchg
popa
loop
xchg
lret
or
add
icebp
ret
cmp
cli
cld
dec
jnp
rol
repz
xor
jle
xor
cs
sbb
jne
test
in
aas
gs
ds
test
dec
lods
xchg
jbe
add
fwait
ret
clc
adcb
repz
jae
sub
test
ret
dec
cmpb
and
sub
pop
xor
leave
stos
repz
mov
push
scas
xor
imul
dec
or
in
jle
adcb
int
and
test
js
sbb
xor
out
xor
xor
jo
lods
jge
xor
sbb
push
push
int3
add
ss
test
cmp
ss
push
jb
mov
int
sti
jns
inc
and
rorb
jno
leave
les
pop
in
shlb
nop
mov
jb
scas
lret
and
or
flds
rol
movsl
push
xor
mov
and
or
dec
inc
xor
adc
pop
sub
sub
ja
popf
cmp
jecxz
push
sbb
mov
shll
jbe
out
jg
jl
gs
or
lret
insl
jmp
adc
imul
pop
mov
add
and
dec
or
dec
loope
push
mov
incl
les
jb
xor
push
nop
jb
cmp
pop
push
orl
xor
xchg
lcall
xchg
rolb
daa
invd
add
or
cmp
inc
ret
test
push
mov
loopnew
rorl
shll
xchg
adc
sub
pop
mov
adc
sbb
daa
or
mov
pop
mov
jbe
add
pop
mov
je
jbe
xor
stos
loope
int
bound
ds
clc
push
rorl
jo
jo
clc
push
scas
adc
pop
movsb
cwtl
cmc
les
mov
add
pushf
pop
shr
and
inc
inc
xlat
xor
mov
pusha
pop
out
fstpl
mov
mov
xchg
and
lock
pop
sub
cs
adc
xchg
sub
xchg
pop
add
ds
insl
jp
out
test
int
xor
fnstenv
ja
or
jge
cmc
xlat
mov
scas
aaa
loope
je
lret
or
and
push
fistl
subl
mov
pop
int
repnz
sbb
dec
sub
xor
fcoms
adc
mov
jne
hlt
sub
out
imul
clc
mov
jg
jae
out
loopne
inc
or
mov
sbb
roll
gs
jns
sbb
sub
jle
fwait
fwait
pop
sbb
cmpsb
cwtl
aaa
dec
jae
sbb
dec
cli
popa
lock
mov
imul
movb
push
mov
sub
lea
jecxz
test
fldlg2
xor
jecxz
lock
pushf
ljmp
or
int
mov
xor
or
lahf
jmp
and
inc
dec
imul
jbe
out
popa
shlb
jnp
adc
and
sahf
ss
jae
mov
lock
test
jbe
xor
pop
mov
push
lods
enter
adc
dec
mov
mov
sbb
stos
mov
movsb
adc
adc
push
pop
rcll
sub
aad
das
cmp
jge
mov
add
mov
inc
addl
cltd
fldcw
mov
or
sub
pop
inc
jae
lods
xor
add
hlt
movsl
ret
outsb
ss
xchg
and
xchg
mov
cmpb
pop
test
addr16
fsts
clc
pop
out
inc
pop
push
shrl
outsb
push
or
inc
pop
cmp
aad
daa
sub
cmp
inc
es
mov
add
rcrl
xchg
ss
cmp
lock
fs
pusha
xchg
das
fistpl
and
adc
iret
orb
adc
ss
cmpsl
sub
inc
dec
mov
addr16
xor
sbbl
in
cld
add
outsl
adc
xor
mov
mov
lea
cmc
cmp
cmp
sbb
cmp
jns
push
sbb
xor
mov
insl
cmc
xchg
sub
jae
mov
out
les
arpl
fiadds
cmp
add
inc
rcrb
popf
lods
mov
ljmp
icebp
jae
test
lods
xchg
repnz
sub
hlt
imul
push
add
add
dec
or
mov
loop
out
pop
cmp
ret
pop
fcoms
adc
mov
xor
iret
aaa
out
test
pushf
mov
sub
out
and
jnp
lcall
xchg
sarl
insb
pop
mov
mov
ss
sub
pop
sbb
xlat
pushf
add
mov
push
hlt
mov
jbe
lods
inc
pop
mov
inc
mov
dec
je
inc
shll
mov
scas
mov
loopne
add
mov
sbb
dec
enter
iret
pop
and
in
sti
outsl
sbbb
outsl
push
lret
mov
mov
mov
out
outsb
push
inc
mov
push
mov
pop
xchg
loope
add
dec
mov
push
shl
mov
daa
imul
cmp
push
and
xchg
lret
or
jl
push
push
lds
out
jo
pop
jecxz
call
push
es
pop
sbb
sbb
cmp
test
stos
int
inc
mov
push
jno
jecxz
xor
mov
rep
sarl
mov
pop
filds
aam
xchg
adc
std
sbb
xlat
shl
movsb
leave
ficoms
or
sbb
jl
stos
add
dec
or
fisttps
enter
sbb
push
scas
dec
cmp
xchg
negl
pop
call
insb
cs
or
jp
aaa
inc
je
and
dec
rol
insl
mov
mov
stos
and
mov
cmpsl
push
js
fstpt
or
lea
test
pop
into
decl
xchg
ds
cltd
push
mov
xor
mov
xchg
mov
dec
aaa
in
dec
adc
cmpsl
mov
inc
ficompl
je
push
icebp
pop
mov
aam
jecxz
mov
mov
mov
mov
out
mov
pop
fcmovnb
mov
jle
sbb
and
mov
cs
jmp
mov
arpl
jae
shll
cli
or
mov
xchg
xchg
lea
mov
mov
pop
jl
int
push
xchg
cmp
push
pop
daa
sub
dec
push
adcl
cmc
sub
jmp
ret
fstps
loop
inc
mov
jo
sbbl
loope
jle
movsl
sub
xchg
jle
imul
ja
and
insl
mov
mov
xchg
or
cmpsb
test
data16
mov
js
outsb
movsl
jne
call
les
ret
pop
mov
jae
std
cmp
rolb
xor
adc
roll
sbb
dec
mov
or
inc
mov
jle
scas
push
jno
cmpsb
inc
ficoml
cmp
std
loop
xorb
into
popf
xor
or
mov
xor
push
out
adc
xor
sbb
push
xchg
mov
jmp
test
mov
jo
insb
call
imul
mov
bound
inc
scas
sbb
mov
mov
push
lret
popa
dec
out
lea
cmpsb
es
cmp
mov
and
or
adc
outsb
sbb
push
pop
fnstcw
mov
pop
ljmp
leave
cmp
out
inc
mov
popa
inc
jle
fldenv
add
aad
pop
ljmp
icebp
lds
jmp
mov
das
in
das
testl
outsl
sbbl
sahf
push
lahf
das
inc
shll
jle
pop
imul
repz
inc
dec
pop
jbe
push
movsl
popa
sbbl
popa
sbbl
int3
mov
push
xor
push
out
inc
sahf
ds
jecxz
fsubrl
push
jle
outsb
cli
int3
lds
aam
inc
out
out
inc
lods
mov
repnz
or
mov
clc
sbbb
shr
movsb
lea
fstl
movsl
and
add
dec
ss
pusha
iret
xor
insl
pusha
pop
inc
xchg
pop
jnp
scas
mov
inc
inc
lock
outsb
adc
push
mov
cmp
imul
or
jbe
pusha
pop
pop
dec
aas
call
add
inc
and
add
sub
rol
mov
sbb
adcb
and
stos
jnp
xor
outsl
sbb
popf
out
shr
inc
dec
sub
fsts
int
inc
pop
pop
ja
and
outsb
ficomps
fucomi
imul
imul
jg
mov
push
inc
out
jl
dec
ljmp
ss
movsl
loopne
mov
out
xor
push
pop
push
dec
push
inc
shl
test
jne
jae
lock
dec
stos
mov
leave
fisubl
shll
lock
stc
ficoml
fdivs
fildll
lea
jge
jmp
xchg
insl
adc
je
popf
test
jns
mov
lcall
dec
fnstenv
add
loopne
jp
bnd
dec
mov
sarl
mov
scas
sahf
mov
sti
out
jb
les
mov
inc
xchg
mov
inc
mov
xchg
daa
adc
shlb
xchg
inc
adc
stc
das
inc
fnstcw
xchg
dec
aas
testl
arpl
hlt
push
je
mov
aam
cltd
mov
ljmp
lock
popfw
sub
roll
or
add
lret
and
pop
sahf
dec
push
popf
aad
sbb
mov
fsubs
in
test
push
in
inc
icebp
and
push
xchg
hlt
loope
mov
xchg
push
in
mov
daa
mov
mov
pop
pop
jo
stos
mov
mov
mov
jl
movsb
sti
or
bound
insb
mov
adcb
ja
rcr
jle
cmp
add
xor
into
fistpl
popf
dec
mov
jl
out
sub
jnp
mov
cmp
sahf
push
jbe
xchg
clc
inc
les
xchg
and
sbb
loopew
fwait
call
loopne
fs
cmp
in
mov
cs
jns
cmpsb
inc
incl
call
inc
daa
call
out
add
inc
push
jns
out
add
adc
loop
mov
int3
in
pusha
dec
shlb
into
push
push
add
sti
leave
jle
loopne
sub
gs
push
icebp
jnp
in
cmpb
xchg
pop
mov
inc
mov
cmc
repz
mov
lahf
inc
insl
inc
and
mov
mov
jmp
jbe
mov
outsb
or
xchg
or
jp
pop
cmpsl
sub
mov
out
fs
jmp
dec
clc
push
in
mov
xlat
les
sub
xchg
stos
movsl
loopne
add
mov
sbb
sbb
leave
frstor
decl
mov
fsubl
ja
ret
lret
xor
pop
mov
jno
mov
rcrl
clc
jb
insb
aad
add
shl
adc
fcompl
lock
insb
inc
lock
shll
incl
fmuls
out
int3
stos
movntq
rcrb
pusha
inc
jns
lea
shrb
nop
jp
fldenv
mov
xchg
ret
test
xchg
adc
jne
add
cli
stos
mov
adc
add
adcb
or
cmp
adc
jp
in
lock
mov
and
das
lds
cs
inc
fimuls
mov
add
mov
cltd
mov
add
jo
rol
nop
mov
pop
mov
push
pop
mov
sub
add
lds
xchg
push
iret
int
pop
pop
xchg
ret
out
pop
xor
negb
adc
fidivl
jo
ja
adc
loopne
add
aad
jmp
adc
xor
test
adc
dec
pop
xchg
or
sbb
jns
rcrb
cmpl
pop
popf
imul
or
loopne
pop
mov
movb
mov
int
out
scas
divl
sub
fistpll
fsts
repnz
ss
lods
push
mov
jle
andl
mov
std
pop
test
aaa
jecxz
dec
sbb
fbld
dec
subb
aam
js
lret
sti
lret
aad
xchg
jb
fsubp
jp
and
out
test
in
imul
out
sbb
ja
or
sbb
or
loope
pop
rolb
int
or
and
es
push
cmc
imul
clc
cmpsl
sti
xchg
mov
scas
cmpl
in
jne
call
lcall
cmpsl
into
fs
xor
push
jg
stos
or
jmp
fdivs
jbe
jae
in
sbb
pop
jo
loope
shrb
bound
mov
add
mov
imul
xchg
ficoml
scas
push
push
xchg
inc
ljmp
out
mov
push
mov
jge
out
cmpsl
dec
push
mov
xor
insl
int3
lret
addr16
fwait
and
negl
xorl
or
out
cmp
or
pop
xchg
lret
les
cwtl
jno
mov
into
and
push
test
nop
cmpsl
push
mov
xor
or
aas
push
nopl
andb
mov
iret
push
sbb
jne
stos
jg
mov
inc
sbb
test
sub
push
jb
outsb
out
cwtl
scas
nop
add
andl
pop
fstp
rcrl
loope
and
xor
xor
sbb
mov
popa
xor
inc
in
pusha
nop
cmp
cmp
testl
aam
scas
movsl
adc
mov
lret
sbb
les
sti
cmp
decl
adc
popa
decb
ljmp
add
mov
mov
jecxz
out
fiadds
movsl
test
xor
or
lcall
cmpsl
movsl
icebp
stos
cld
sbb
mulb
pop
loop
inc
and
and
mov
mov
popf
fsubrl
jp
nop
adc
push
dec
mov
jnp
dec
and
push
in
mov
cld
fsubs
in
pop
xor
sub
mov
dec
pushf
cmc
jo
jmp
sbb
dec
stos
arpl
cltd
lds
aad
sub
mov
cmp
loop
push
loop
add
dec
es
outsl
test
outsl
xor
xor
pop
aad
je
pop
shrl
scas
ret
mov
push
xchg
cmp
ds
shll
mov
in
movsl
out
jb
mov
outsl
lcall
repnz
inc
clc
outsb
enter
sbbb
call
pusha
lret
clc
push
popa
jae
mov
fs
pop
sbb
int3
jp
lods
rclb
mov
xor
pop
loopne
aas
pop
dec
imul
rol
popa
pop
lock
pop
stos
mov
pushf
jmp
enter
bound
adc
cwtl
adc
adc
mov
mov
out
inc
jmp
sarl
mov
sbb
popa
test
push
dec
xor
pushl
lods
push
mov
fs
xor
sub
mov
mov
cs
xor
mov
sub
adc
insb
mov
cmp
mov
movsb
inc
add
movsb
adc
loopne
or
adc
sub
das
cmp
out
mov
rcrb
or
pop
int3
mov
arpl
out
sti
sarb
add
cmp
mov
mov
dec
xor
ret
add
lock
dec
xchg
jnp
arpl
mov
xlat
aaa
cmp
or
jmp
aam
repz
popa
jo
mov
and
mov
repnz
daa
int3
das
add
jbe
icebp
aam
mov
xchg
pusha
cs
ficompl
sti
and
inc
xchg
cmp
mov
cmp
inc
lods
xor
daa
pop
cmp
enter
stos
dec
mov
mov
cmp
xor
xor
out
inc
mov
pusha
stos
sbb
dec
pop
enter
mov
and
je
and
mov
mov
ljmp
jae
dec
jp
xor
jge
dec
lret
ljmp
in
inc
add
pop
insl
je
xchg
daa
mov
clc
add
cmp
aaa
sahf
mov
leave
push
mov
lcall
outsl
sbb
cmp
sub
dec
aaa
je
add
out
xchg
sbb
in
cmp
fmul
lods
and
lds
push
repz
enter
jge
jne
adc
jnp
out
into
inc
and
add
mov
jp
or
jg
imul
adc
xlat
mov
mov
rclb
aaa
cld
inc
sub
adc
push
leave
push
add
fnstcw
scas
jg
sahf
testb
mov
jg
insb
mov
rcrb
mov
fwait
push
das
or
sbb
imul
stos
pop
jne
lds
add
and
outsl
jnp
jg
test
es
out
add
xchg
clc
jmp
mov
cld
cmp
fs
sub
sti
push
mov
and
cld
xor
sbb
scas
adc
popl
xor
lret
dec
mov
repnz
fcmovu
or
lret
test
dec
mov
packsswb
cs
xlat
insb
roll
dec
addr16
call
and
cs
push
int
mov
xlat
xchg
adc
sbb
push
add
movsb
aad
jmp
test
test
mov
adc
lods
call
cmp
cltd
xchg
std
add
jmp
movsl
mov
ss
push
pop
sbb
inc
xor
mov
xor
inc
or
lds
in
add
lock
mov
out
aas
jle
loopne
sub
mov
jno
mov
jo
adc
cmpsl
gs
mov
push
jmp
test
into
testl
adc
stos
stos
sub
adc
push
xchg
inc
int
push
mov
ffreep
int3
xor
xor
mov
rcl
enter
pop
addl
mov
loop
mov
mov
rorl
enter
sub
push
lcall
mov
adc
or
push
fnstenv
xchg
inc
dec
shl
jp
iret
loop
cmp
aam
scas
cld
xchg
adc
jg
das
pop
imul
fisubrl
push
push
pop
pop
sbb
loopne
lret
fs
pop
movups
xor
and
fsubr
dec
pop
orb
shrl
push
ljmp
xor
sar
sbb
idiv
lods
imul
lock
push
lret
imul
pop
sete
inc
adc
xchg
mov
je
mov
hlt
or
iret
fbstp
jmp
and
sub
mov
cmp
in
jle
xchg
sahf
jnp
stos
test
cmp
lret
ficoms
jg
loopne
adc
mov
repnz
xchg
out
pop
dec
pop
loopne
nop
outsl
cltd
jg
sti
int
cmp
pop
xchg
pop
sub
dec
arpl
mov
fistpl
add
sub
int
jp
pushf
jbe
cmp
xchg
or
lahf
ss
or
xchg
xchg
and
sub
les
jnp
jl
fdivrl
mov
out
das
in
pusha
and
rolb
dec
mov
xchg
lock
mov
push
std
ljmp
add
fs
jns
push
mov
ja
jno,pn
cli
jns
jl
xchg
add
xchg
jmp
loopne
xor
leave
cld
lret
test
dec
lret
inc
mov
mov
sbb
jno
xchg
insb
inc
int
test
sti
clc
rcrl
aaa
in
lds
incb
int
int
in
fistl
sbb
sbb
bound
test
add
xor
inc
outsl
or
adc
jp
push
shlb
xchg
addb
call
mov
or
mov
mov
lods
fcmovu
xor
mov
inc
xor
lcall
int
mov
jge
insl
repz
dec
and
mov
test
addr16
sub
insl
inc
and
mov
into
cmp
cmp
jns
inc
mov
adc
cwtl
push
in
cli
adc
xchg
mov
and
daa
lods
mov
push
lea
outsb
cmpsl
add
loop
cmp
bound
call
inc
mov
adc
jge
push
insb
pop
add
mov
dec
and
xor
xor
pop
js
scas
pop
jmp
mov
pusha
inc
enter
mov
mov
push
ss
xchg
inc
jno
sub
bound
stos
insb
aas
mov
xchg
jne
fisubrl
subb
mov
and
pop
testb
sbbl
or
icebp
adc
sub
js
or
ljmp
cmp
imul
mov
test
call
ret
mov
push
movsl
mov
push
xor
shl
xchg
dec
ja
sbb
jbe
andb
lods
jg
sub
popa
sbbb
mov
loop
mov
into
push
add
xchg
jl
outsl
xchg
sti
stos
js
sbb
push
sub
xor
lds
dec
jno
dec
xor
scas
mov
outsl
adc
cmp
lea
mov
xor
sub
lds
push
andl
cmp
pop
mov
pop
and
es
sbb
xchg
and
stos
cmp
repz
jno
mov
xor
gs
shl
int
add
pop
or
sti
cltd
adc
inc
loope
xchg
enter
mov
inc
les
jb
imul
fnstsw
or
adc
mov
cmp
call
adc
mov
outsb
mov
mov
in
out
ljmp
mov
and
popf
sub
subl
xor
jecxz
adc
cmp
cmp
mov
xchg
or
daa
insl
xchg
rcl
or
sbbb
lret
jnp
push
jns
aas
lret
sbb
out
test
xor
add
out
stc
add
sti
insl
pop
add
jo
lea
scas
shll
fisttpl
outsl
incb
jae
cmp
and
rep
sub
iret
daa
and
lret
jecxz
xchg
fdivl
sub
push
jl
gs
xor
ret
xor
stos
lcall
lock
aaa
mov
push
mov
fsubrl
cmp
stos
lds
cmpsb
xchg
movl
stos
xchg
sub
or
mov
pop
call
rcll
adc
in
mov
call
jae
mov
arpl
std
mov
and
jmp
arpl
aam
fstl
push
fs
push
psubq
cli
xor
pop
jge
and
xchg
cmpb
xchg
xchg
mov
mov
rcll
cld
in
push
or
mov
scas
out
dec
dec
sti
cmpsl
mov
lds
inc
adc
jecxz
pop
sbb
xor
sbb
loopne
pop
addl
cltd
xchg
and
pop
mov
aad
mov
mov
sub
jne
pop
mov
cmp
insl
xor
out
dec
push
jmp
jg
push
push
xchg
je
mov
fsubr
mov
mov
dec
mov
pusha
xor
push
or
insb
or
adc
mov
ja
bound
in
jb
fs
out
leave
push
jae
pusha
and
addb
gs
sbb
add
mov
mov
inc
push
shl
add
add
push
push
fs
and
or
les
call
popa
pop
add
and
scas
sbb
inc
call
insb
push
mov
in
jle
mov
push
jl
mov
mov
shl
lret
pop
cwtl
std
sub
xlat
cmc
icebp
or
ret
nop
cmpsb
sbb
clc
cs
sbb
fs
mov
notb
xor
jnp
arpl
dec
mov
jmp
ret
cmp
sbb
pop
mov
jmp
daa
imul
ds
xor
xor
aam
and
mov
mov
xlat
sbb
mov
iret
adc
stc
stos
mov
push
fmulp
rcll
jb
pop
in
jne
add
and
inc
sbb
push
xorb
xor
frstor
xor
mov
xchg
mov
dec
arpl
jp
xchg
dec
in
jmp
adc
sub
and
sar
sarl
repz
jp
push
in
mov
pop
jno
and
jmp
sub
inc
jl
lahf
jg
jne
dec
aas
mov
stc
mov
js
jbe
jge
push
pop
cmp
mov
sbb
ss
mov
pushf
adc
cld
adc
lahf
pop
fldenv
cmpb
lea
lahf
pop
dec
sahf
xorl
and
scas
aad
aaa
xchg
mov
hlt
xchg
xchg
xor
fucomip
sub
pushf
mull
stos
sti
fsts
fimuls
into
repz
leave
cmp
call
xor
lret
dec
inc
pushl
loopne
jns
call
cmp
pop
stc
push
and
jnp
cmp
enter
sub
aas
mov
das
mov
fwait
cmp
adc
cltd
jae
cltd
mov
add
add
test
pop
pop
mov
push
jns
jmp
lea
es
lods
dec
mov
inc
test
jae
cmp
xor
repz
movsb
sbb
xchg
aad
lods
and
sahf
lock
pop
inc
cli
xor
pushf
xlat
mov
mov
insb
repz
dec
or
dec
fcmovu
or
mov
or
ss
call
jmp
pop
adc
insb
stc
jne
and
fildl
sbb
mov
dec
or
in
cmp
gs
lcall
hlt
paddsw
push
movsb
dec
sbb
mov
mov
dec
or
mov
fbstp
xchg
mov
out
int
mov
orl
sub
movsb
clc
push
sbb
dec
xorb
incb
popa
push
sbb
inc
popa
cmp
aam
in
dec
repnz
adc
sub
movsl
adc
dec
jge
in
or
loope
xor
mov
movsl
xchg
imul
and
cmp
shll
cs
jge
icebp
add
lcall
push
xor
push
movsl
arpl
lcall
pop
and
pop
inc
or
or
xor
dec
mov
sbb
sbb
mov
ss
mov
xchg
mov
cld
mov
imul
adc
mov
cli
nop
out
mov
mov
lahf
xor
pop
ficoml
stos
dec
bound
mov
push
pop
aaa
xchg
cmp
xchg
outsl
push
lret
shlb
int3
and
inc
loop
cmpsb
mov
jo
mov
inc
outsl
iret
movsl
jle
xlat
push
fwait
adc
fwait
pop
xchg
push
jecxz
scas
out
and
xchg
fst
addr16
adc
imul
dec
or
sbb
in
xor
ret
sarb
jnp
fsubrl
jle
pop
setp
mov
add
flds
pushf
adc
jno
in
ja
inc
ficompl
jmp
push
cld
enter
pop
movsl
push
shll
cltd
scas
xor
data16
lcall
mov
imul
dec
sub
mov
mov
mov
mov
cmpl
lret
adc
movsl
pop
ss
aad
lahf
ja
inc
pop
jg
jb
lret
ja
push
push
orb
mov
or
call
mov
add
xchg
jb
shlb
aam
mov
fimuls
imul
inc
or
xchg
and
inc
inc
loopne
notb
mov
xchg
push
pop
jns
cmp
shll
out
jl
add
dec
gs
test
sti
cmpsb
mov
jecxz
sbb
push
inc
int3
rorb
mov
mov
popa
and
mov
dec
out
in
push
insb
add
mov
imul
fisubl
jmp
popf
in
dec
pop
push
or
dec
xchg
mov
add
mov
scas
and
add
cmp
out
jmp
jbe
mov
fchs
and
hlt
sahf
dec
scas
push
leave
cmp
mov
pop
xchg
dec
mov
popa
es
subl
lea
jmp
inc
dec
xor
or
sub
stos
cmp
dec
push
add
ss
shll
loop
jg
mov
int3
out
mov
inc
mov
pop
cmp
cmpsb
outsb
addl
adc
leave
aaa
insl
jns
mov
lods
push
push
push
pop
mov
pop
test
push
xchg
cmc
iret
incl
cmp
imul
mov
mov
pop
and
push
jp
pop
mov
and
repz
jle
int
cmp
dec
push
je
xor
je
sbb
mov
mov
inc
jae
ds
lret
add
test
sahf
aam
push
xchg
dec
and
int
push
cmp
adcl
inc
mov
rcll
mov
pop
mov
repz
mov
int
mov
push
shlb
insb
insb
daa
adc
mov
or
cmpl
jbe
push
sbb
adc
fstpt
mov
sub
daa
jns
mov
sub
scas
push
daa
xlat
insl
sahf
sbb
divl
push
dec
fnstenv
push
xor
lock
mov
dec
iret
mov
push
gs
or
adc
add
inc
in
mov
sub
in
jmp
pop
sbb
nop
dec
je
cltd
notb
jmp
mov
cmp
dec
add
shlb
call
push
lock
lret
cmp
int
pusha
push
mov
insl
dec
mov
sarl
jo
inc
cltd
fsubs
xchg
add
imul
mov
stos
lahf
xor
lds
lock
mov
or
punpckhbw
mov
mov
inc
cmpsl
insl
repnz
or
in
cli
add
jae
jno
mov
lock
or
and
in
or
lcall
in
cmc
outsl
inc
push
sbb
fcomi
ja
movsl
repnz
cmp
jbe
popl
jnp
lods
call
out
sub
dec
clc
daa
mov
std
test
jbe
mov
dec
out
inc
cmp
dec
cmpsl
xchg
xchg
mov
movl
lea
dec
adc
scas
ret
into
gs
lahf
jmp
inc
imul
rorb
outsl
cld
das
scas
inc
jns
repnz
adc
and
ljmp
dec
sub
out
mov
mov
sub
adc
push
pusha
xor
push
cmp
inc
lcall
xchg
add
orl
scas
mov
es
or
rorb
es
ficoml
dec
pushf
jb
mov
scas
sbb
or
pusha
adcl
scas
ljmp
cmpsl
push
arpl
iret
cmp
sub
jbe
push
mov
dec
ret
shrb
je
out
jbe
lods
mov
inc
outsl
fiaddl
jl
adc
sbb
and
cmp
test
insb
mov
inc
out
leave
gs
ret
pop
dec
add
add
or
lret
es
mov
jnp
jb
pop
cmpsb
mov
scas
scas
frstor
popf
cltd
xor
cmpsl
sbb
mov
fnstenv
mov
lods
gs
ficoml
cmp
fwait
les
cld
push
pop
insl
sbb
xchg
aad
add
icebp
pop
in
mov
int
mov
add
jnp
inc
dec
cmpb
push
out
mov
test
test
stos
adc
bound
cmpps
dec
cmp
xor
lahf
aas
sbb
xchg
lea
adc
mov
insb
cmp
std
and
icebp
sbb
ret
mov
or
push
xchg
pop
xchg
adc
jae
dec
jno
ss
insl
int3
rorl
xchg
inc
pop
xchg
mov
in
adcb
sar
xor
shrl
cli
addr16
in
adc
icebp
push
mov
cmp
and
mov
cmp
out
adc
lods
jbe
fwait
cmpl
mov
mov
fcomip
loopne
cmpsb
repz
gs
dec
jnp
and
outsb
xchg
fs
fwait
inc
test
and
fs
dec
jne
dec
call
rcrb
imul
xchg
leave
push
lahf
jno
push
mov
sbb
clc
lock
pop
inc
xlat
shl
mov
mov
pop
daa
out
mov
mov
push
jge
mov
xchg
jnp
sti
je
lds
lock
les
decl
inc
cli
push
adc
stc
inc
cmpsl
std
outsl
mov
pop
ljmp
sbb
push
and
adc
jl
cmp
adc
shll
or
adc
addr16
mov
mov
test
add
mov
ret
rorb
mov
mov
xchg
pushf
pop
mov
dec
dec
dec
cld
sbb
push
dec
bound
adc
push
mov
inc
idiv
xchg
xlat
repz
lret
out
hlt
mov
push
jl
sar
fsts
lret
mov
rcrb
cld
jo
out
cmp
and
push
adc
faddl
cwtl
mov
jne
addr16
mov
out
push
jnp
pop
jp
inc
dec
dec
imul
lcall
fidivl
xchg
jge
jbe
call
aad
stc
call
xchg
cld
pusha
xor
mov
ss
lock
clc
cmpsb
in
icebp
pop
jl
mov
pop
mov
and
and
test
or
lcall
add
jecxz
or
out
stos
adc
call
fsubp
dec
sbb
es
enter
jb
aaa
cli
jno
loop
test
leave
jle
shrb
or
call
sahf
loope
push
jmp
inc
mov
mov
les
mov
inc
test
xor
dec
out
or
sub
scas
out
rorl
js
add
fs
call
imul
cld
adc
loope
xchg
cmc
pushf
push
sub
ficomps
or
mov
gs
andps
add
pop
mov
das
pop
sub
sbb
outsb
xor
stos
lock
mov
fcomip
lds
jecxz
les
and
jno
dec
out
adcb
leave
popa
mov
or
mov
sahf
es
jg
test
stc
scas
sub
mov
fldt
xor
xor
mov
and
mov
adc
xor
out
push
xchg
into
pop
out
pop
ja
sbbb
scas
push
xchg
test
push
inc
cmp
sti
sbb
pop
inc
movsl
out
jbe
mov
mov
xchg
cmp
xchg
jecxz
pop
add
pavgw
aam
sbb
push
push
pop
andb
sti
dec
roll
out
jmp
and
pushl
sub
pop
popa
xchg
inc
test
cli
outsl
test
pop
adc
lds
nop
push
push
sbb
and
cli
and
mov
jl
mov
jbe
mov
mov
add
adc
lods
and
jae
xchg
jae
push
and
dec
out
outsl
inc
jecxz
hlt
fcompl
clc
xor
outsb
imul
cli
cmpsl
dec
fsubrs
push
adc
add
test
and
loop
xor
pushf
shr
ja
mov
daa
ljmp
mov
aas
dec
jbe
movl
bound
push
mov
sub
push
dec
add
xchg
idivl
and
push
out
pushf
adc
xor
clc
loop
xor
std
dec
rclb
arpl
popl
outsb
js
pop
jecxz
movsl
and
icebp
sbb
int
mov
mov
call
sub
notb
cld
gs
push
xor
or
and
sub
adc
rcll
shr
xchg
js
xorl
xor
cmc
xor
dec
push
push
inc
mov
popa
call
call
rolb
push
push
xchg
or
fisttps
pop
or
popa
cld
mov
sbb
jns
mov
sub
add
xchg
test
pop
imul
dec
add
out
xchg
ret
subb
xlat
xchg
pop
lods
stos
jae
ds
push
repnz
jp
inc
es
bsr
adc
sbb
fdivrl
xor
fstpl
mov
arpl
mov
sbb
jl
popa
orl
mov
daa
adc
cmc
and
cmp
mov
adc
adc
mov
andl
idiv
xor
imul
loopne
dec
sub
xchg
outsb
or
and
jp
icebp
pusha
in
jg
adc
scas
push
pop
lods
inc
sub
push
stos
xor
shr
push
jp
xchg
iret
xchg
or
jo
icebp
inc
xchg
jecxz
jnp
cwtl
aam
or
movsb
into
repnz
iret
cmpsl
jg
dec
sbbb
pop
dec
fldl
sarl
jns
xchg
inc
push
pop
cld
xchg
scas
lock
movsl
rcrb
subl
add
inc
xor
pop
mov
mov
popf
stc
xor
test
shl
add
adc
testl
cmp
adcb
clc
cmp
out
pop
inc
hlt
xchg
mov
pop
cmp
mov
aas
test
cld
orl
repnz
push
mov
push
mov
and
adc
jl
pop
jb
jmp
test
add
mov
pop
sub
push
cmp
inc
mov
scas
dec
push
loope
pushl
or
std
mov
outsl
cmp
sbb
scas
adc
xchg
in
inc
cmp
jbe
pop
dec
dec
sti
lods
inc
popa
lock
ret
add
ret
xorl
loopne
movsl
mov
push
jns
in
lock
in
push
mov
popf
or
shll
add
std
mov
mov
adc
mov
jecxz
cmp
addr16
test
push
jno
sub
add
mov
cmp
jno
mov
movsb
cmp
in
inc
nop
add
mov
out
mov
dec
xchg
cmp
mov
and
mov
inc
mov
mov
addr16
jmp
cmp
ljmp
adc
xchg
mov
inc
push
sub
and
and
sbb
roll
mov
pop
and
testb
stc
xor
cmp
push
push
and
lock
loopne
sbb
mov
lods
adc
xchg
bound
pop
mov
cmpsb
push
fimuls
add
lret
cmp
lds
call
jb
pop
jo
push
pop
sarb
mov
mov
jnp
cmp
mov
cmpsl
adcb
inc
sub
jp
fcmovnb
shr
aas
mov
sub
sbb
dec
insl
or
cld
mov
js
dec
data16
aaa
cmpsl
cmp
sbb
xor
rcrl
jp
test
add
mov
xor
dec
rolb
popf
mov
push
sahf
jns
je
shl
push
movsb
shr
imul
pushl
push
rcll
push
push
push
push
mov
xor
mov
mov
xor
pop
loopne
fcmovbe
out
xchg
ds
lds
popf
fsts
leave
lods
adc
adc
jb
lret
shlb
repnz
and
inc
pop
adc
or
pop
mov
push
pop
mov
scas
dec
out
jo
inc
or
clc
mov
inc
fs
mov
sbb
or
mov
shrl
into
mov
or
test
fsubl
insl
dec
test
insl
lock
cli
sub
xlat
std
jae
rclb
bound
es
mov
pop
std
jno
outsb
fisttpl
pop
adc
imul
int
cmpsb
in
sub
mov
idiv
out
mov
es
subl
ljmp
sbb
sub
insl
mov
dec
xchg
fmuls
aad
push
mov
movsb
lods
dec
int3
push
loope
mov
or
mov
test
fwait
sub
mov
fstl
mov
xor
cmp
push
movsb
in
xchg
mov
imul
adc
cltd
adc
sbb
mov
pop
inc
nop
int3
add
xchg
add
sbb
sub
fsubl
filds
stos
mov
pop
sub
sbb
ja
out
fcoms
int3
or
std
mov
xchg
adc
sbb
xchg
push
mov
daa
ret
faddl
mov
jmp
push
and
gs
dec
xor
inc
insb
jae
adc
cmp
mov
push
and
mov
fistps
pop
lds
fmuls
mov
fs
mov
inc
xchg
adc
lds
xchg
or
sub
lods
sbb
pop
jns
in
js,pt
bound
subb
cli
cmpsl
cmpsb
testb
sahf
dec
dec
lods
jle
shrl
cmpsl
int3
mov
mov
cmp
mov
in
add
cli
lock
jns
fdivs
inc
push
mov
je
push
sahf
pop
stos
dec
and
stc
nop
ja
fwait
add
les
or
push
lea
lods
scas
fcomps
mov
loop
dec
sbb
xchg
jae
dec
cmp
fisubl
call
lock
pushf
or
loope
mov
pop
sarl
je
loopne
add
mov
inc
fwait
cmp
sub
pop
pop
push
mov
push
xchg
fidivrs
xchg
jg
cmp
mov
xorl
adc
mov
test
aad
jmp
test
xchg
pop
ret
das
filds
in
aaa
out
into
fldenv
or
sti
enter
loopne
add
or
jbe
inc
insb
outsl
pop
lcall
into
insb
stos
xor
ret
test
mov
xchg
cmp
pop
cltd
leave
xchg
in
test
push
add
xchg
mov
pop
jne
imul
es
rsqrtps
mov
cmp
inc
test
xchg
std
cmp
ficoml
loop
push
push
cmp
out
xchg
test
cli
xchg
stos
xor
pushf
int
fwait
ret
or
inc
xchg
call
in
rcrb
ret
cli
outsb
fdivrs
ljmp
jecxz
cmp
mov
xchg
add
jno
ficomps
push
les
xor
cmp
mov
rcrb
bound
dec
fwait
into
pop
mov
dec
out
fwait
adc
dec
adc
mov
fsubs
jbe
repz
push
popf
adc
push
jno
pop
ja
aaa
sbb
fwait
cmc
test
mov
cli
or
stos
push
add
sbb
jno
es
sub
mov
or
dec
sahf
xchg
jae
shrl
xor
flds
dec
xchg
sbb
jle
movsb
ret
sbb
lds
insb
fisubs
nop
pop
inc
fnstcw
and
jne
xor
cwtl
and
jg
add
jg
adcb
fisubrl
inc
mov
test
sbb
enter
mov
leave
push
popf
or
dec
sub
shrb
into
dec
pop
mov
pop
enter
jge
xor
or
pushf
xor
out
mov
mov
fiaddl
jg
lds
in
loope
cmp
in
jns
js
fdivs
ret
jno
stos
mov
mov
hlt
push
dec
add
dec
fs
mov
dec
orb
adc
lret
jb
lret
pop
andl
daa
xchg
daa
or
jl
daa
lds
pop
subl
mov
iret
bound
jecxz
sahf
popf
push
lock
pop
je
addr16
cmpl
sbb
xor
xchg
or
mov
out
nop
and
aaa
push
je
fstps
or
repnz
cmp
jo
push
popf
pop
cmp
cmp
aas
popf
dec
addr16
xlat
mov
data16
enter
es
sub
sub
fwait
lahf
aad
iret
xchg
mov
addr16
shrb
rcr
add
imul
shll
mov
pop
jg
bound
adc
sub
xchg
sub
mov
mov
ficompl
jp
jge
xchg
cmc
shll
enter
insl
cmp
jmp
pop
lods
cwtl
pop
jle
lcall
xor
ljmp
adc
test
pop
aas
xor
rolb
scas
lock
xchg
add
push
pop
in
mov
pop
insl
xorb
mov
add
int
sub
push
sarb
lret
fs
bnd
iret
out
out
sti
jecxz
je
sub
or
mov
test
sbb
leave
add
inc
outsb
push
jmp
jl
or
fistps
cmp
ret
mul
sub
divb
pop
ret
out
nop
loopne
into
fadds
xorb
jae
jle
repnz
insl
dec
imull
adc
into
sub
ret
inc
pop
push
mov
xchg
inc
sub
pushf
cmpsl
push
xor
addr16
xlat
roll
dec
out
mov
jbe
cmpsl
adc
std
je
cmp
out
dec
mov
mov
scas
dec
or
gs
fisttps
mov
adc
xor
std
out
cwtl
xchg
inc
imul
sub
sbb
dec
std
ret
inc
pop
mov
xor
jp
cmp
lcall
xchg
mov
cld
in
fldl
xor
mov
mov
mov
fcmovnb
push
lahf
rcll
jmp
cmpsb
outsl
xchg
mov
and
insl
addl
add
sahf
imulb
push
xlat
dec
push
and
jg
or
stos
leave
out
jns
les
xorb
pushf
orl
leave
add
xor
iret
cmp
push
int3
and
dec
les
out
pop
jmp
test
mov
hlt
cmpsb
push
add
cli
imul
mov
inc
mov
lret
in
pusha
pusha
ja
mov
ret
insl
sti
pusha
int
ljmp
jmp
mov
mov
cli
xchg
test
fwait
pop
or
popf
adc
lret
ja
dec
scas
clc
fwait
shll
dec
popf
and
lods
sub
scas
cmp
in
pop
adc
shll
inc
pusha
icebp
cmp
lods
cltd
in
mov
fsts
adc
add
js
ret
adc
lcall
ror
push
mov
mov
daa
insl
loope
adc
int3
push
jns
xor
xlat
jbe
jl
inc
mov
fidivs
add
jo
xor
gs
and
in
pop
xor
mov
mov
shl
int
xor
scas
xchg
std
aad
sub
pusha
aaa
enter
fnsave
dec
push
cmp
pop
test
xchg
jne
es
adc
xchg
mov
mov
cltd
iret
test
mov
xchg
fsub
sbb
imul
test
push
inc
stos
fidivrs
add
mov
imul
nop
aad
adc
inc
je
xor
stc
arpl
xlat
sbb
cmpsl
fiaddl
jle
popf
cmp
cmp
jecxz
movsl
jp
es
push
xor
outsl
or
lods
pop
xor
out
aad
aam
imul
enter
pop
push
adc
fwait
imul
adc
arpl
out
je
je
xor
lea
cmp
pop
xor
cmp
pop
dec
jle
jmp
hlt
out
jmp
mov
xchg
cli
fsubr
adc
jne
adc
outsl
cmpsb
fistpl
mov
mov
pop
jg
mov
orb
sbb
enter
push
in
and
sti
imul
push
jno
jge
sub
notb
pop
std
sahf
repz
xchg
sbb
and
fisubs
or
dec
add
jg
sub
hlt
dec
lods
and
arpl
scas
mov
push
inc
inc
jle
cltd
push
xor
dec
lahf
movsl
dec
daa
pusha
add
out
xlat
scas
clc
adc
in
fldt
or
pop
push
and
fidivrs
pop
arpl
bound
pop
lods
test
pop
out
in
fucomip
je
and
pop
xorl
inc
cwtl
outsl
andb
pop
mov
pop
and
jecxz
shrl
imull
fwait
test
jns
lahf
arpl
sub
in
xchg
fisubrs
fwait
mov
stos
pop
mov
xchg
push
pop
into
xchg
add
fistpl
or
out
lcall
add
popa
inc
pop
mov
ljmp
or
and
push
xor
push
inc
sub
sbb
adc
sahf
pop
cmp
sbb
jae
pop
mov
add
insl
jo
push
cmp
and
jns
inc
inc
sub
sbb
mov
jno
addr16
or
cld
jp
daa
imul
or
and
mov
pop
jle
sub
pop
or
cmc
aam
mov
xchg
imul
lock
negb
push
leave
subb
popa
enter
sbb
jmp
scas
push
in
test
mov
jge
leave
stos
mov
mov
mov
push
loop
lcall
sub
mov
in
cwtl
mov
or
jbe
in
je
divb
jnp
scas
hlt
popa
inc
mov
paddd
mov
das
loope
into
stc
fimuls
arpl
push
dec
scas
dec
cmova
xchg
mov
pop
ja
jg
push
sbb
mov
daa
cmp
dec
jecxz
add
and
push
mov
and
lock
inc
add
loop
push
pop
inc
rolb
aad
or
mov
mov
mov
add
mov
adc
sub
lods
xor
pop
adc
loope
add
fiadds
out
push
popa
mov
mov
pop
or
jb
pusha
push
add
cmp
in
outsb
lret
mov
ret
add
dec
adc
xor
lret
xor
enter
mov
icebp
push
inc
psraw
mov
repnz
inc
sub
push
xchg
dec
mov
in
pop
in
jecxz
dec
dec
xor
push
sub
dec
fdivr
int3
push
movsl
mov
clc
xchg
lcall
pop
adc
test
sub
bound
lret
repnz
jp
fwait
dec
sub
clc
sub
rep
dec
mov
adc
jle
cmp
popf
or
in
dec
and
pop
or
sub
add
jae
xor
cmp
jb
mov
out
inc
rcrb
addr16
dec
sbb
sub
mov
sbb
add
and
pop
adc
dec
push
sti
outsl
push
xchg
xchg
faddl
lret
cmp
leave
ja
nop
fstl
ljmp
and
and
xor
sub
cmp
shll
js
das
or
loope
push
or
pop
and
dec
mov
cmpsl
or
xchg
insb
cmpsl
out
dec
cmp
mov
lea
rolb
aas
xchg
pop
inc
and
outsb
shlb
jnp
or
cmp
xchg
xor
jnp
inc
lds
and
loopne
inc
inc
ret
popa
add
xchg
iret
sbb
mov
pushf
cmpsl
lcall
ljmp
fadds
cmp
sbb
mov
rolb
insl
rclb
or
xchg
jp
sub
testb
dec
jmp
lcall
clc
jnp
add
imul
lret
dec
fucomi
out
sbb
dec
dec
lea
ss
lods
pop
xor
psubw
in
pop
jg
jecxz
jge
js
ror
stc
out
mov
cli
psrlw
jno
test
mov
or
push
test
nop
sarb
sarl
mov
in
jbe
mov
out
imul
rcrl
xlat
mov
and
xchg
lods
push
xchg
dec
add
xor
xor
or
fisttpll
cli
int
cmpsl
cwtl
mov
stc
mov
enter
push
mov
repz
notl
adc
mov
jne
mov
lret
and
mov
add
push
push
cmp
push
ljmp
test
xchg
repnz
sub
arpl
arpl
gs
fucomi
fidivs
adc
pop
jl
jle
mov
push
or
adc
js
or
loope
add
stos
mov
cmp
lock
inc
xlat
in
pop
xchg
jns
xor
movsb
nop
lods
inc
insb
sub
mov
aam
jns
outsl
inc
sub
pop
xchg
data16
mov
mov
fs
sti
jae
adc
or
lock
jl
xlat
mov
icebp
cli
jge
or
lea
xorb
pop
fwait
popf
int3
mov
cld
xchg
movsl
inc
dec
jo
push
and
dec
pop
out
out
data16
shr
push
jge
and
daa
rcll
sbb
push
sub
fldt
lock
insl
push
sbb
mov
lods
lods
fstl
mov
cmp
pop
sti
mov
push
sub
add
add
or
fsubr
arpl
ss
rcr
mov
xor
adc
cld
out
pop
xchg
xchg
rcrl
jb
enter
call
iret
jns
mov
mov
push
jp
jb
push
mov
push
pop
mov
outsb
into
maskmovq
negl
sbb
jecxz
xchg
into
into
mov
or
fimuls
and
sbb
sarb
stos
ret
xor
inc
cmp
divl
adc
sti
push
jmp
scas
scas
bound
mov
imul
leave
inc
xchg
in
rcrl
ret
lock
shl
cmp
in
mov
pop
mov
jecxz
std
outsb
jp
fildl
inc
jle
ja
test
rorl
aaa
inc
and
mov
insl
les
cmp
in
push
fcoms
orl
sti
popa
cmp
movsl
sbb
jl
add
int3
adc
fstp
daa
ret
rcll
xchg
ret
xor
or
loop
in
mov
ljmp
pop
mov
cmp
lcall
pop
fcmovu
mov
mov
in
mov
mov
insl
jno
mov
ror
push
sahf
inc
scas
jb
les
dec
adc
xchg
outsl
xor
addr16
addr16
xchg
ss
push
mov
push
mov
ss
mull
cmpsl
push
inc
cmp
sub
push
xlat
jb
mov
dec
in
cmp
sarb
aas
push
and
mov
dec
pop
je
dec
cmp
mov
jns
xchg
mov
mov
sbb
xor
and
outsl
pop
push
mov
lret
xor
mov
push
lds
in
lret
pop
es
mov
ret
icebp
fs
leave
xchg
sub
insb
pop
cmpsl
je
mov
cmpsb
jbe
ss
icebp
enter
daa
adc
jge
add
ss
jb
gs
push
pop
and
xor
xorb
imul
jne
sub
xor
inc
cltd
inc
loop
xor
jne
fucomip
push
mov
call
mov
outsb
jge
xlat
push
jae
jmp
data16
lret
fldcw
dec
or
popa
nop
xchg
sub
adc
cmp
in
or
add
mov
cld
divb
jae
cwtl
rolb
mov
lea
ljmp
or
faddp
inc
sbb
arpl
jg
dec
adcl
mov
sub
fidivrl
xchg
in
pop
stc
dec
and
ss
imul
outsb
pop
inc
pop
imul
stc
insl
pop
push
jmp
and
into
lahf
cwtl
lds
out
inc
mov
adc
pusha
push
adc
rcrl
push
xor
sbb
and
dec
mov
cmp
mov
cld
or
dec
addr16
lea
je
fiadds
rorb
add
mov
jnp
testb
pop
dec
popa
cmp
ds
imul
xchg
cmp
lret
imul
out
pusha
mov
push
lcall
push
imul
insb
iret
sahf
shlb
xor
lds
inc
adc
sbb
scas
or
sbb
pushf
push
fwait
cmp
les
pop
int
pop
xor
popf
aas
and
fsubrl
push
lods
dec
jecxz
push
orl
pop
andb
in
pushf
decl
bound
xchg
mov
adc
hlt
jnp
xchg
xchg
imul
out
stos
pop
xchg
outsb
sarl
xor
adc
cmp
mov
enter
mov
add
imul
outsl
ficoml
pop
or
outsl
cld
sbb
mov
daa
rclb
jns
pop
cmp
arpl
add
imul
dec
scas
xchg
repz
fmull
jmp
inc
shrl
jg
jae
mov
lods
pop
test
pushl
add
das
shrl
lcall
insb
std
andl
sbb
iret
in
in
sbb
xchg
or
pop
sub
rcl
ja
lret
mov
negl
cmpsb
jno
xor
mov
push
mov
mov
out
mov
sbb
xor
insl
or
push
dec
and
pop
add
imul
lods
cmc
jl
mov
rorl
add
push
mov
outsl
inc
mov
ss
add
jmp
add
ljmp
jp
push
mov
rcrb
pop
dec
mov
mov
push
inc
dec
adc
xchg
push
repnz
cmp
daa
xorl
pop
cwtl
into
outsb
lods
bound
sarl
xor
lods
js
xor
popf
push
jo
hlt
popa
pop
inc
cmp
cmpsb
mov
add
adc
out
lret
lods
cmp
dec
lret
mov
dec
push
shr
enter
data16
push
subl
cmp
pop
test
inc
cmp
xor
rcrb
fmull
mov
outsl
mov
adc
or
ds
iret
jg
push
xchg
out
adc
scas
lret
mov
fucom
shr
dec
fcomps
inc
mov
inc
mov
pop
loopne
and
icebp
ret
sbb
sahf
out
daa
sbb
pop
mov
pop
cltd
push
inc
negl
mov
jb
lods
aad
loopne
sub
cmpsb
xchg
push
scas
jns
pop
jnp
jecxz
mov
mov
push
inc
xchg
add
aam
xor
mov
cmpsb
fwait
pop
xchg
adc
je
or
or
rolb
dec
outsl
pusha
jae
pop
hlt
jmp
pop
xchg
dec
sbb
out
popf
cmpsl
cld
and
pop
sub
inc
mov
popa
psllw
or
test
repnz
sbb
pop
scas
sub
jmp
mov
imul
js
mov
jo
aas
lods
lods
add
stos
jbe
xchg
fnstsw
xchg
js
imul
fisubrl
dec
pop
xor
std
pop
jne
test
pop
or
add
mov
xorl
push
mov
scas
dec
js
dec
je
mov
fs
imul
out
sub
push
decl
inc
in
fcoms
outsb
fadd
mov
subb
mov
out
jp
push
push
fwait
mov
fcoml
mov
dec
outsl
aas
push
xchg
sbb
inc
lahf
add
sub
jmp
test
sbb
divb
push
push
or
add
xchg
and
pop
mov
lahf
in
shl
fldcw
lods
jge
cmp
xchg
aam
sahf
test
lahf
arpl
sub
notl
orl
dec
sub
inc
pushf
in
cmovs
mov
pop
and
push
pusha
xchg
mov
mov
or
pop
jmp
and
mov
xchg
jbe
out
sbb
pop
sub
pop
xchg
int3
imul
jo
repnz
jmp
outsl
scas
or
out
test
bnd
and
lret
adc
gs
cmp
add
out
jae
test
cmp
and
xchg
and
xor
mov
push
pop
mov
fsubr
push
mov
jge
dec
pop
insl
stc
enter
fwait
pop
je
test
mov
cmp
popf
repnz
push
in
cmpsl
and
mov
ret
inc
pop
inc
imul
xor
pop
push
mov
cmp
lcall
lds
jne
shlb
mov
das
jb
dec
bound
add
ljmp
sbb
mov
mov
dec
cwtl
adc
xchg
jmp
insl
imul
fdivrl
pop
cmp
xchg
pop
movl
mov
ja
fstpt
pop
pop
and
into
out
xchg
subl
xor
fcmovbe
jae
pushf
add
sub
sbb
pop
shll
mov
dec
in
push
fnstcw
sub
lods
imul
push
gs
jo
pop
adc
ds
scas
mov
mov
cmp
nop
sbb
xchg
ja
shlb
add
ljmp
sub
test
fs
or
cmpb
mov
mov
fldt
cmp
push
mov
adc
jecxz
adc
mov
push
mov
jp
sbb
loop
add
inc
popf
movsl
xchg
scas
imul
jne
addr16
divl
push
push
out
mov
popf
popf
pop
pushl
push
call
enter
nop
push
mov
int
mov
into
add
outsl
dec
xchg
push
test
sahf
rcr
rclb
ljmp
mov
and
enter
out
jne
cmp
mov
inc
aas
sbbb
inc
inc
cmpsl
shll
xor
addl
shrb
sbb
faddp
mov
or
add
sbbb
pop
jl
loopne
xchg
fsubl
jle
sbb
mov
jns
pop
icebp
loop
cltd
add
mov
mov
les
ficompl
ja
or
stos
in
fisubs
ljmp
outsb
mov
bound
ror
comiss
cmp
mov
pop
and
loop
aad
icebp
add
and
or
sbb
pusha
dec
push
push
stc
mov
in
cltd
gs
das
enter
pop
repnz
push
in
mov
fsubrl
mov
fs
stos
mov
mov
push
popa
mov
cmpsl
scas
outsb
xor
push
dec
fdivrs
or
test
test
sub
test
icebp
out
out
aas
leave
es
repnz
sbb
add
test
aaa
or
sub
mov
adcb
lds
pop
movsl
fmulp
in
add
or
jle
pop
or
push
cmp
mov
int
int
add
ret
cmpsb
mov
xor
add
scas
ds
inc
sub
neg
push
mov
pop
inc
cld
lea
clc
std
ficomps
cmp
push
insb
test
adc
bound
cmp
fbld
lods
mov
fsubs
arpl
adc
movsl
adc
mov
je
jae
lcall
aaa
ss
into
mov
ss
scas
pop
lock
vpextrb
xchg
sub
decl
adc
adc
clc
jecxz
or
pop
and
loope
mov
mov
cwtl
sub
xor
insb
add
mov
mov
fistl
inc
notl
cli
xchg
popa
mov
push
leave
std
and
xor
jge
ja
add
cmp
add
int3
jmp
mov
jne
imul
sbb
in
lods
and
loope
sub
lods
xchg
pop
cmp
inc
push
daa
and
orl
xchg
fsubrs
pop
bnd
pop
jae
jl
pop
inc
add
arpl
jge
push
stc
insl
or
and
or
push
cmp
cmpsb
orl
fwait
in
push
add
je
mov
push
cmpsl
mov
xchg
rcrb
or
xchg
outsb
cmpsl
sub
pop
nop
hlt
dec
xchg
pop
movsb
loope
lcall
pop
pop
inc
lea
aad
mov
arpl
add
sub
jo
stos
stos
stos
pop
int
jge
mov
push
jo
cmpsb
pop
ds
mov
mov
les
push
roll
xchg
mov
sbb
in
loopne
frstor
sahf
lock
or
scas
mov
push
sbb
add
cltd
stc
mov
lds
sbb
imul
dec
push
and
inc
into
dec
mov
divl
mov
mov
jle,pt
movsw
push
pop
dec
mov
lds
mov
cmp
mov
pop
xchg
mov
sub
jl
imul
divl
xor
fbld
xchg
and
xchg
int
fidivrs
insb
leave
cmpsl
fmuls
mov
or
stos
out
das
inc
cmp
fisubs
push
inc
leave
cwtl
mov
add
cmp
push
xchg
enter
ds
mov
adc
movsl
cmp
popa
inc
lcall
inc
inc
sub
jmp
test
mov
cmp
adc
pop
mov
stc
inc
pushf
pop
shr
test
pushf
out
das
stc
push
inc
bound
sahf
scas
jbe
mov
push
jbe
cmp
xchg
cld
mov
ds
push
arpl
lds
add
mov
scas
dec
and
inc
movsl
inc
imul
vmovapd
loope
xor
loope
mov
ds
insb
daa
dec
lods
sub
dec
mov
xchg
aas
xor
push
rcll
ror
dec
pop
or
btc
jmp
stos
data16
lcall
ret
test
dec
jecxz
mov
sbb
aaa
dec
cld
mov
out
xor
dec
mov
loop
jmp
cli
pop
insb
and
sub
adc
andl
aas
rorb
and
push
fwait
lahf
xor
imul
xchg
add
jbe
nop
std
in
loope
pop
pop
loopne
sarb
psrld
setge
cmp
cmp
daa
fistpl
push
shll
inc
inc
out
mov
and
sti
setns
mov
xlat
mov
pusha
inc
push
add
xchg
cmc
mov
fbld
outsl
mov
sub
jb
imul
mov
or
or
rorb
pop
xchg
aam
int3
movsl
fsubl
iret
adc
sub
jo
cmp
fucomi
popf
ret
add
call
xchg
mov
xchg
jg
movsb
mov
add
inc
mov
or
les
xor
gs
mov
xor
scas
cld
ret
mov
aas
mov
mov
mov
inc
jl
data16
mov
in
cmp
dec
icebp
loopne
xor
in
jbe
add
call
sbb
or
pop
les
movsl
test
sub
int3
mov
fwait
xor
push
icebp
mov
inc
pop
push
and
mov
scas
movsl
jp
jb
filds
mov
and
dec
es
jp
in
fcompl
sbb
mov
mov
sahf
cmpsl
clc
jecxz
jae
mov
movl
mov
std
inc
push
dec
sub
cld
pop
loopne
push
incb
neg
xor
stos
scas
cmp
and
ss
icebp
pop
stos
js
loop
pop
fisubrs
and
add
pushf
popa
loopne
push
enter
aas
cmpsb
lds
sahf
dec
sahf
sbb
sub
or
lds
iret
jmp
xorl
in
dec
jnp
ss
jo
repnz
inc
cmp
cmp
adc
push
or
xor
jp
into
sub
add
popa
add
cmpl
dec
insb
dec
inc
cmp
aad
test
call
jnp
cs
cmpsl
pop
popf
inc
les
adc
dec
cmp
sbb
push
mov
arpl
jecxz
xor
loopne
jnp
out
or
lret
mov
add
xor
dec
in
lret
daa
jne
push
in
inc
jl
cmp
xchg
and
arpl
mov
test
loop
mov
lods
pop
mov
and
cli
mov
mov
insb
test
test
pop
int3
aaa
cmpsl
sub
std
sub
dec
mov
repz
mov
adc
dec
imul
push
fistl
nop
repnz
lods
aaa
sub
xchg
stos
pusha
mov
dec
pop
and
sbb
or
push
insb
into
mov
jae
lret
sub
lock
mov
mov
adc
out
iret
shr
push
das
adc
popf
xchg
pop
aad
ss
aad
in
cmpsb
outsb
bnd
test
pop
mov
dec
cltd
push
sub
cmpsl
add
insb
inc
sbb
sbb
inc
ljmp
or
xor
pop
inc
adc
push
repz
repnz
sahf
cmp
sbb
cli
sbb
ss
mov
or
or
dec
xchg
sub
inc
add
repz
notb
push
rol
shlb
pop
pop
push
dec
push
fyl2xp1
xchg
sti
pop
lahf
add
inc
or
push
jmp
ss
sub
lds
xlat
lret
mov
push
xor
in
out
push
insl
sub
icebp
int3
sahf
cwtl
leave
pop
pushf
or
cld
inc
cld
js
mov
add
sub
stc
adc
imul
mov
xchg
daa
mov
arpl
insb
repz
das
loopne
push
xor
enter
or
jns
insl
in
adc
sub
xchg
jb
pop
and
xchg
mov
lcall
stc
mov
cltd
jno
enter
in
lods
add
jmp
xor
jno
daa
stos
xchg
movsl
inc
jmp
pop
shll
inc
rclb
add
cmp
jne
dec
ret
in
repnz
jg
int3
fwait
inc
inc
divb
sbb
insl
jg
roll
rdpmc
std
pop
push
in
jns
mov
clc
daa
and
fbstp
or
dec
and
pop
and
in
lret
inc
or
mull
dec
or
movsl
aas
jo
and
in
cmp
xor
ret
xor
jg
mov
scas
and
xchg
test
xchg
into
stos
xchg
rcrl
add
lods
pusha
sbbb
lret
shll
subb
aaa
push
test
mov
jnp
mov
mov
nop
stc
in
and
mov
sbb
sub
inc
cli
push
fcmovbe
and
push
push
adc
mov
mov
push
outsb
push
and
or
xchg
jp
cmp
sub
cli
mov
call
in
std
in
sub
xor
jne
inc
scas
xor
mov
and
mov
arpl
add
in
xchg
mov
adc
sahf
inc
out
pop
xor
aam
bound
lret
cmp
cli
cmp
inc
pop
mov
push
fs
arpl
or
mov
mov
jne
jl
dec
out
sti
mov
lods
jno
in
andl
int3
mov
push
lret
sub
cmp
pop
dec
inc
adc
lods
scas
or
fst
mov
in
aas
pop
and
jbe
jno
out
sbb
pushf
icebp
mov
or
shl
jbe
mov
cs
adc
js
push
or
movb
scas
xchg
int3
fs
das
pop
and
fcmovnb
testl
cmovo
leave
sbb
clc
mov
pushf
adc
aaa
mov
add
je
rcl
popa
jle
subb
sti
pop
jne
mov
int3
or
xlat
insb
and
rorb
les
pop
mov
cmpsb
out
fs
inc
int
pop
jg
push
mov
pop
ret
popa
xor
dec
shl
jns
fldenv
movsb
ja
dec
jbe
inc
sub
adc
mov
shr
sbb
dec
sub
inc
movsl
leave
into
adc
jns
xchg
loope
cmp
mov
fnstsw
fmul
into
jns
lret
inc
xchg
push
mov
dec
mov
ret
inc
iret
nop
dec
ret
ror
int3
shl
push
iretw
test
mov
sbb
sbb
scas
lds
shrl
cwtl
gs
push
lds
loopne
mov
fdiv
aas
cmp
or
rcl
cmp
outsb
out
pop
ret
pop
or
sarb
mov
lock
mov
jge
add
stc
ds
xor
mov
out
push
std
sub
hlt
inc
lcall
push
cmpsb
frstor
cltd
xor
addr16
scas
sbb
adc
aas
push
dec
sub
test
sti
andl
imul
and
adc
aam
dec
cmp
lock
xchg
cltd
jmp
push
lahf
xlat
imul
inc
lock
movsl
ret
sarb
mov
dec
inc
adc
adc
cmp
out
out
gs
ds
and
pop
sti
adc
fisttpll
or
add
jmp
xchg
xor
jmp
adc
orb
cs
lea
push
mov
fmull
mov
sub
sub
in
push
jmp
push
test
mov
sbb
jp
test
movsl
inc
std
jae
je
movsb
push
mov
outsl
pop
xchg
into
xchg
aad
ret
dec
nop
cmp
inc
push
sub
in
inc
ret
sbb
ret
shl
jg
inc
aas
mov
add
add
fiadds
jb
jecxz
rorl
xor
call
or
ret
adcl
ljmp
inc
jecxz
and
add
mov
lea
ret
dec
les
xchg
scas
inc
mov
push
aad
or
cmp
jno
xlat
sbb
daa
jbe
push
push
dec
jmp
xchg
dec
imul
sub
dec
inc
jne
or
push
inc
cwtl
pop
test
out
lock
mov
inc
les
outsl
pop
or
loopne
enter
push
fsts
mov
inc
and
push
push
push
aaa
jne
cmpb
in
pushf
lcall
test
xchg
inc
ficoml
jb
push
inc
sub
test
jge
or
addb
jb
and
lds
xchg
bound
push
pushf
filds
jnp
mov
mov
clc
insb
inc
jecxz
mov
rolb
jnp
or
test
into
pushf
cmpsb
ja
cltd
out
fdiv
sub
sub
sub
xchg
and
add
jle
repnz
jmp
loop
pop
xor
add
dec
add
sahf
pop
cwtl
or
sbb
inc
inc
sub
push
test
or
into
scas
push
ret
je
outsl
call
jle
int3
mov
mov
cli
adc
scas
scas
push
ret
push
cmp
inc
xchg
xor
cmp
pusha
push
movsl
outsl
aas
lahf
dec
push
notl
sbb
sbb
arpl
push
in
fdiv
adc
insb
add
loope
ja
leave
jae
add
mov
pop
mov
orl
mov
daa
sbb
push
xchg
and
mov
pop
movsl
adc
lcall
dec
lahf
daa
daa
fcomps
std
inc
lret
mov
add
test
loopne
inc
pop
pop
rolb
inc
jne
dec
std
test
mov
pop
sub
jecxz
sbb
movsl
arpl
adcl
xor
sahf
jg
ret
std
test
outsb
psubusw
rcrb
mov
dec
stos
sbb
jb
mov
xchg
push
pusha
and
aad
test
cmp
adc
stos
and
aaa
push
mov
jno
xor
lret
sahf
inc
aad
bound
add
jo
sub
inc
and
jge
jno
pop
cmp
mov
adc
adc
xchg
cwtl
incl
add
xorl
and
shrb
iret
and
popa
fsubs
xor
aaa
lcall
push
mov
inc
add
loop
mov
mov
fnsave
inc
idivb
jne
and
les
or
jno
in
push
insl
notl
pop
xchg
fmuls
adc
pop
daa
js
mov
popf
ja
and
das
inc
pop
cmp
jge
sbb
mov
dec
xlat
sbb
out
adc
std
push
mov
cmpsb
xchg
push
jmp
ret
cld
aad
mov
mov
and
add
in
loop
push
mov
pop
push
sub
cli
je
jno
jl
out
mov
xchg
add
or
out
push
mov
cmpsl
test
fstps
push
pop
push
sbb
lea
int
xor
push
loop
fldenv
clc
push
insl
or
pop
fidivrl
push
push
push
mov
and
jb
call
pop
inc
mov
jne
and
mov
mov
xchg
cli
clc
inc
daa
das
push
cwtl
adc
ss
mov
out
xchg
roll
inc
pop
stc
testb
mov
enter
xor
repnz
test
sub
inc
popf
mov
orb
jge
mov
mov
insl
pop
ja
out
push
dec
pop
mov
push
ds
cwtl
es
arpl
and
jno
in
xor
pop
cld
mov
or
stos
lock
adc
jbe
and
inc
cli
sbb
fsubrp
int3
pushf
scas
mov
fwait
mov
push
push
inc
jecxz
push
mov
pop
cmp
xchg
push
dec
outsb
push
inc
ret
mov
push
push
pop
adc
scas
or
ret
cmpsl
add
xchg
and
mov
test
sbb
cmpsb
jae
xor
in
movsb
js
aam
das
jmp
lea
sbb
mov
lahf
push
sbb
push
jmp
push
in
pop
adc
bound
xchg
and
jecxz
push
adcb
psrlw
or
popl
jbe
adc
pop
mov
jle
jg
push
lret
jns
and
fisttps
arpl
cmp
push
mov
out
push
and
mov
popf
sub
pop
mov
sbb
packuswb
inc
and
cli
cmp
decb
lret
outsb
je
loop
lods
inc
pop
jnp
ficoml
repz
cmc
jno
add
inc
lds
leave
cli
mov
xor
aaa
add
pusha
push
mov
jo
mov
lret
icebp
dec
in
pop
mov
dec
dec
inc
out
int3
push
lret
inc
inc
insl
inc
xchg
xorb
push
ret
fs
push
push
add
or
xchg
and
insl
or
adc
fs
popa
pushf
fcom
ds
out
pusha
xchg
mov
and
lcall
mov
inc
rorb
lea
cld
adc
xor
loope
fdivrl
insl
dec
decb
loop
bound
sbb
jle
xlat
fdivrs
fbstp
adc
gs
adc
subb
imul
mov
shrb
inc
cmp
jnp
loop
lods
add
stos
es
ds
lret
pop
mov
or
or
loopne
xor
mov
repz
cs
mov
cmpsb
test
or
or
pushf
cmp
scas
vmaxsd
repz
xchg
inc
push
divb
iret
sub
jno
insl
push
add
notl
and
outsb
lds
inc
lds
adc
inc
je
mov
mov
hlt
fadds
xor
stc
pop
in
stos
xchg
mov
cmc
sbb
out
xor
adc
cli
add
push
rcll
dec
adcb
pop
cmpb
or
mov
pop
cs
add
and
pop
out
es
mov
push
rolb
pop
adc
jbe
or
je
mov
testb
jo
daa
or
arpl
arpl
stc
stc
dec
jmp
icebp
mov
aas
pop
loope
inc
xchg
cmp
out
jb
xchg
mov
mov
pop
mov
enter
ds
jae
clc
push
sub
cmp
mov
inc
sti
loopne
or
enter
xlat
mov
xchg
push
stc
cli
test
test
cwtl
lea
shrb
lock
lods
imul
in
cmp
pop
and
jnp
popa
fistl
cs
inc
inc
dec
filds
jne
ds
sahf
out
jns
sub
inc
xchg
imul
sbb
jbe
cmc
frstor
adc
test
and
leave
loopne
adc
sbb
push
scas
xor
ljmp
pop
inc
repnz
scas
or
mov
mov
movsb
nop
mov
iret
inc
add
inc
loop
std
daa
mov
mov
jmp
and
mov
xchg
mov
rolb
pop
dec
adc
out
int
sbb
push
jge
movsl
mov
sub
scas
popl
jno
ds
sahf
ljmp
ficomps
jno
out
cmovl
shrb
mov
pop
mov
mov
and
je
scas
sbb
inc
jl
rorl
repz
push
stos
push
aas
ja
ja
cmp
xlat
in
push
or
ds
popa
addr16
push
xor
mov
loop
loope
push
sahf
rcrl
cmovp
scas
push
cmp
cwtl
ds
out
outsl
or
push
mov
xor
sub
pop
cwtl
out
mov
push
and
rolb
out
xor
adc
mov
dec
mov
or
test
arpl
or
lods
imul
sbb
pop
xchg
xor
cwtl
mov
out
outsb
xchg
cmp
push
jno
in
inc
mov
push
mov
mov
lret
cli
sbb
loop
nop
aad
js
push
cmpsl
imul
test
jns
jecxz
pop
inc
add
add
out
in
xor
mov
outsl
lods
or
bswap
pop
mov
ss
jle
into
fisubrs
enter
imul
push
mov
pop
dec
xor
adc
mov
adcl
nop
and
repnz
mov
adc
out
xchg
push
es
pop
sti
pop
inc
rolb
int3
sub
xorb
xor
xchg
jne
sbb
xor
dec
dec
adc
jb
adc
dec
or
or
and
jmp
aaa
cltd
or
lock
jl
das
jb
std
das
int3
jbe
pop
mov
push
mov
xchg
testb
mov
leave
inc
lret
sub
inc
cmp
aas
mov
lret
cmpsl
cmp
sbb
xchg
loopne
inc
pop
dec
in
or
mov
mov
out
push
enter
out
lock
mov
dec
adc
jecxz
mov
cltd
pop
rcrl
wbinvd
push
arpl
test
addb
sti
addr16
cmp
dec
stc
loope
mov
xchg
ret
insl
xor
sbb
jl
mov
test
cwtl
push
mov
sbb
mov
pushf
mov
test
es
test
push
mov
cmp
xor
insb
xchg
push
shrl
fimuls
sub
data16
fwait
add
ja
pop
and
jecxz
fldl
insb
cmpsl
lret
sbb
popf
gs
add
pop
and
sbb
out
fwait
dec
int
xchg
insl
mov
fiaddl
popf
fdivl
mov
cmp
ret
inc
mov
add
jno
popa
ficomps
aas
cs
test
adc
inc
sbb
mov
mov
decb
outsb
movsl
in
xchg
fldcw
push
pop
sahf
imul
jl
push
xlat
pop
scas
in
sub
mov
sbb
into
fidivs
push
add
push
imul
rolb
jns
dec
and
mov
or
push
lret
xchg
inc
fcmovb
push
in
insb
xchg
xor
cmp
lea
add
mov
mov
or
jnp
mov
xchg
cmp
ret
sti
lret
fmul
rolb
add
loope
mov
mov
shlb
mov
inc
loopne
aad
lea
or
push
jnp
popf
xchg
cmpb
lcall
cmp
inc
ja
pop
mov
stos
cmpsl
aas
stos
lods
inc
xor
in
rclb
jge
adcl
sbb
jbe
mov
inc
lds
inc
lea
clc
stc
push
mov
or
jp
sbb
adc
pop
inc
sbbl
pop
inc
mov
jns
dec
mov
pop
lahf
jb
lods
fists
hlt
push
dec
ret
push
xchg
sub
fisubl
xor
sbb
repz
and
cld
out
jp
fnsetpm(287
testl
mov
jmp
shr
push
or
push
rcrl
aas
popa
xchg
cs
push
xchg
lcall
mov
and
and
out
or
inc
orb
add
std
outsl
add
inc
repz
xor
int3
mov
pop
or
xlat
popf
xor
nop
rclb
add
scas
push
cmp
nop
insl
add
pusha
pop
loop
add
push
cmp
mov
cmc
ds
or
pop
enter
insb
stc
fmulp
jg
pop
loop
outsl
adcl
mov
sub
jl
jl
dec
cltd
sbb
cmp
out
adc
je
or
lods
pop
loopne
int3
sbb
cmp
jo
mov
jecxz
cmpsl
test
inc
dec
xchg
repz
lods
mov
jbe
push
push
dec
mov
pop
mov
int3
inc
fists
out
jb
in
sub
add
xor
adc
daa
mov
xchg
mov
hlt
jmp
ljmp
pop
pop
lahf
lcall
lcall
xchg
dec
push
loopne
xor
pop
in
mov
jg
pop
adc
and
sbb
pop
cmp
xchg
mov
cs
or
pushf
imul
jp
jp
jp
mov
jno
jne
call
lock
sarb
push
or
loopne
xor
ja
fs
mov
arpl
loopne
add
xor
into
sar
aam
add
lea
or
out
dec
pop
aad
fs
lods
mov
movsb
loop
ds
leave
jecxz
scas
orl
pop
cmpsl
cld
jae
jbe
jb
pop
and
movsl
pop
jle
out
outsl
adc
stos
les
js
xor
push
mov
xor
sub
push
jno
addr16
loop
lds
in
mov
push
push
or
add
sub
into
inc
add
rolb
add
das
out
xchg
hlt
jno
jb
pop
rorb
xorl
cmp
pop
sub
cmpsb
push
fidivl
and
in
fldt
movsl
cmc
adcb
xchg
and
jns
repnz
in
sub
loopne
icebp
sbb
or
or
xlat
adc
loope
dec
stos
imul
arpl
push
cmp
je
popf
popf
out
sbb
arpl
addr16
cs
sub
cmp
shlb
jno
inc
call
jg
dec
leave
or
mov
popa
push
xor
lods
ret
sub
push
mov
jmp
dec
das
loopne
icebp
mov
cld
jmp
mov
xor
stos
das
cmc
sub
rorb
ds
fdivp
cld
push
shlb
xor
in
sub
pop
testb
dec
inc
cmc
stc
add
xor
fwait
xchg
xor
int
xchg
pusha
lock
out
adc
or
divl
inc
scas
add
pop
lahf
int
cmp
ret
dec
xor
lds
or
shlb
ret
test
lock
cmc
aaa
cmp
and
pop
jns
mov
mov
popf
inc
inc
test
pop
pop
mov
pusha
sbb
sbb
mov
testb
adc
fbld
push
nop
jp
loop
lcall
and
into
loope
or
repz
movl
cs
fistl
aam
cld
xchg
sahf
cmpsb
loop
xchg
inc
xor
cmp
movsl
add
sahf
clc
or
push
cs
xor
pop
or
sbb
add
jmp
pop
pop
mov
pop
xchg
jge
mov
push
xchg
cltd
scas
add
xor
outsl
aas
jnp
outsb
sub
insl
mov
addr16
test
push
test
call
pop
icebp
or
cld
push
daa
bound
xor
sbb
cli
cmp
repnz
cs
fdivp
push
fchs
pop
add
xor
mov
and
or
icebp
ret
leave
nop
cmp
out
mov
rcll
leave
aam
ret
jecxz
stc
scas
lock
and
or
inc
dec
outsb
mov
test
add
out
je
push
add
pop
jmp
dec
adc
mov
cmp
mov
push
xchg
jne
jne
leave
mov
std
push
movsl
inc
sub
inc
mov
jle
inc
mov
jne
shl
pop
sub
fmulp
add
popf
xchg
cmp
cmpl
call
sub
mov
inc
mov
xor
int3
jnp
jg
mov
pushf
mov
xor
pop
lds
fidivrs
call
nop
xor
int3
add
xchg
inc
addr16
inc
aam
jle
outsb
mov
dec
inc
push
jae
push
jl
pop
shll
adc
rorl
arpl
jl
cmpsl
lock
shrl
jmp
sbb
ds
inc
sbb
out
stc
push
loopne
xor
cld
rolb
bnd
push
add
data16
push
cmp
arpl
imul
pop
sbb
add
leave
and
dec
sub
loop
js
and
mov
jne
data16
pop
shll
cli
insl
in
inc
in
mull
je
jo
and
daa
insb
push
loop
lret
pop
push
jae
pop
jbe
in
test
or
xchg
push
movsl
dec
rcrl
push
test
jmp
fwait
add
ja
and
insl
jbe
xchg
icebp
push
push
inc
mov
jmp
in
sbb
push
vpsllq
ret
pop
addl
std
xchg
jo
push
rcrl
out
add
xchg
jne
test
insl
orl
out
and
movsl
or
inc
hlt
mov
js
push
inc
cmpsl
adc
ret
sub
ljmp
out
mov
jp
pusha
add
popa
jb
lock
and
adc
dec
mov
push
dec
fs
push
xchg
in
inc
mov
outsl
loop
xchg
inc
loopne
in
adcl
inc
mov
inc
and
mov
xchg
pop
pop
je
pop
dec
mov
test
sbb
int
xchg
ret
xchg
aam
add
dec
jnp
dec
cmpsb
andl
push
movsl
std
pop
and
cmp
out
xor
push
mov
cld
push
xor
cmp
mov
push
lock
adc
lret
inc
imul
in
jnp
pop
sbb
xlat
mov
clc
xrelease
inc
notb
loopne
aas
cmp
push
leave
inc
mov
cli
xor
iret
xchg
mov
gs
cmp
sub
fbstp
inc
adc
cmpsl
add
adc
repz
fwait
aas
enter
out
push
and
mov
and
or
xor
pop
and
out
jns
aad
rol
ljmp
jle
cmpsl
push
es
mov
cmc
mov
lahf
inc
loop
jnp
add
arpl
adc
pop
sahf
enter
sub
sbb
cmp
fiaddl
push
loopne
lea
daa
xchg
test
popf
xor
add
lods
loope
enter
jae
xor
lock
adc
xchg
push
cmp
movsb
xor
jecxz
movsb
inc
mov
in
inc
mov
ficoml
mov
jmp
sti
arpl
cltd
das
pop
rol
adc
mov
loope
xor
mov
in
clc
pop
imul
imul
jle
adc
lock
and
rcr
cmpsb
jecxz
mov
add
iret
mov
pushf
add
jb
adc
xchg
or
adc
or
push
and
sahf
inc
push
fbstp
xchg
push
mov
push
add
push
cmpsl
shrl
dec
lea
push
pop
dec
cmc
lods
mov
jge
jle
mov
sahf
xchg
adc
lret
dec
adc
and
xor
push
mov
sbb
cmp
in
sub
in
negb
lret
xchg
mov
jl
popf
cltd
fmull
movsl
lea
push
int3
popa
sbb
push
in
cld
bound
test
cmp
mov
push
std
iret
arpl
push
or
mov
and
into
push
sub
or
mov
or
imul
xchg
inc
es
xchg
sbb
rcrl
rcll
add
aas
shlb
and
xor
push
xor
movsl
lods
fildl
mov
add
out
lds
cmovle
in
push
jno
xor
mov
lcall
lret
pop
ret
xchg
leave
xorb
in
dec
mov
mov
pop
push
outsl
inc
aas
jmp
mov
push
aad
push
aas
aam
sbb
stos
pop
shl
inc
adc
push
stos
icebp
mov
mov
cmove
test
mov
sub
mov
leave
in
mull
push
repnz
imul
add
xchg
nop
xchg
test
sbb
xchg
adc
arpl
out
dec
cmpsl
and
lds
dec
mov
lcall
fildll
push
dec
imul
push
and
fsubrp
sti
add
jo
fst
mov
pop
inc
pop
cli
sbb
adc
jbe
mov
in
pop
aad
and
repnz
pushf
addb
sti
data16
inc
movsb
dec
arpl
in
aad
sbb
test
mov
int
movsl
pop
dec
sbb
adc
mov
mov
push
cltd
test
mov
pop
mov
cld
js
fcomip
pop
fists
xor
sub
sarb
sarl
mov
jo
sub
stc
cmp
sbb
dec
jae
arpl
cli
fimull
iret
rclb
jmp
add
inc
enter
inc
mov
lods
call
add
inc
mov
xchg
xchg
ficoml
fldt
pusha
and
bound
dec
mov
mov
sarb
outsb
cmp
dec
data16
outsb
and
cmc
jmp
jle
ficoms
xchg
cmpsl
mov
cmpsl
jno
push
pop
mov
mov
rclb
mov
das
sbb
add
mov
lods
and
out
mov
fidivrs
and
je
push
xor
dec
push
and
lcall
je
or
icebp
pop
xchg
fldz
shlb
lods
iret
stos
push
incl
shll
pop
or
adc
lahf
int
xor
loop
lret
mov
sub
shlb
repnz
pop
insb
mov
pusha
dec
mov
cmpb
mov
outsl
jmp
jecxz
mov
fdivrl
lahf
cmpb
xor
stos
ljmp
xor
sbb
mov
movsb
sub
shrb
rcpps
or
pop
lds
jg
dec
ss
jo
std
mov
gs
lss
shlb
popa
sahf
xor
sti
adc
lods
lods
je
rcl
jp
pop
xor
or
dec
jnp
dec
xor
adc
lods
and
mov
xor
dec
pop
pushf
mov
ds
xchg
push
mov
xorl
loop
xor
lods
xor
mov
popf
call
xor
push
ljmp
and
iret
dec
rcrl
cmc
test
mov
call
mov
std
fs
lahf
pop
pop
test
loop
insl
fwait
out
movsl
push
inc
mov
xchg
push
xchg
mov
sub
addl
ja
jbe
lods
aaa
or
out
sub
outsl
xor
les
iret
sub
adc
das
push
fisttps
mov
enter
dec
scas
inc
in
inc
xchg
jecxz
cmp
pop
test
mov
cmp
lcall
in
cmp
divb
int3
dec
cmp
lock
xchg
xchg
mov
mov
jge
in
or
icebp
sarl
push
xchg
push
out
ror
idivl
mov
std
pusha
inc
mov
dec
inc
xchg
xchg
sub
jge
loopne
shr
outsl
fldl
cmp
jp
stc
sbb
jecxz
test
sub
lods
sahf
out
sahf
adc
jl
movb
popa
sub
dec
imul
dec
or
dec
xchg
aad
stc
and
repz
int3
mov
aam
add
mov
sub
daa
mov
pop
xchg
or
mov
test
sahf
dec
sub
xor
in
and
ret
cmp
cwtl
cmpsl
aas
ja
aam
cmc
imulb
imul
or
sub
push
movsb
ffree
popf
in
xor
insl
in
subb
inc
xor
lea
lcall
xlat
lods
addr16
cmpsb
add
mov
lret
clc
mov
pop
jmp
jnp
std
mov
adc
mov
lock
push
test
and
adc
ja
cmpsl
outsb
adc
inc
mov
mov
jle
lcall
mov
mov
push
nop
ret
lahf
inc
xor
iret
cmp
lods
fwait
add
push
adcl
cmp
outsl
aam
ret
fsubrs
pop
cmpl
push
insl
stos
orb
adc
out
jge
cmp
loopne
xor
repz
fsts
dec
cmp
fimull
mov
xchg
lcall
jno
push
dec
inc
repnz
jle
jp
xor
in
popa
mov
jge
mov
outsl
insl
jg
jb
push
insl
stos
sbb
enter
test
or
adc
imul
xchg
mov
xchg
test
inc
loop
xlat
jb
shrb
mov
mov
fs
scas
and
outsb
imul
jnp
loopne
push
fimull
dec
pushf
cs
sarb
cwtl
cmp
fsubs
es
cmp
pusha
add
js
inc
inc
fs
mov
jl
mov
outsl
scas
or
pop
cmp
loope
jmp
lcall
sub
push
movsb
jge
cwtl
icebp
pop
lret
negl
jl
cwtl
in
mov
inc
add
sub
sti
mov
jb
rolb
sbb
adcb
cmp
add
fistl
lock
outsl
xchg
jg
inc
xor
sahf
stos
test
call
in
ret
or
lods
ret
inc
ds
sarb
lock
aaa
ja
dec
jmp
inc
dec
or
into
xchg
or
cli
cli
pop
sub
icebp
lods
mulb
in
repnz
push
jp
and
jns
xor
mov
xor
loopne
mov
lcall
sub
inc
jno
aad
iret
cmp
andl
sub
movl
xchg
mov
xchg
sti
cmp
cmp
jge
cmp
add
fimull
sub
jbe
cmp
pop
fidivrl
jnp
rcll
pop
push
or
es
lock
fs
jnp
mov
and
loopne
sub
lret
xchg
xchg
push
adc
outsl
sbb
nop
adc
popf
data16
jge
lods
ficoml
std
add
mov
cmp
insb
into
push
lods
inc
loop
cmp
jl
xchg
adc
mov
pop
movsl
adc
cmp
fucomi
jmp
cmpsb
fs
push
sbb
ss
stos
out
push
lea
xchg
push
mov
add
sub
xor
cmp
push
cwtl
add
push
xchg
repnz
dec
fmul
cli
push
cmpsl
inc
int
sub
mov
jmp
arpl
inc
shrl
sub
dec
mov
enter
bound
ficoml
pushf
push
mov
adc
shlb
sbbb
les
pop
scas
cmpsb
inc
gs
mov
icebp
xchg
jmp
xor
sbbl
cmp
movsl
mov
lret
xchg
sbb
xor
cmc
leave
js
stc
sub
fimuls
loopne
lods
loopne
cltd
mov
push
push
push
orb
mov
mov
cmpsl
negl
inc
int3
inc
jae
repz
aam
mov
outsb
rcrl
cmc
or
inc
aad
outsl
outsb
fadd
adc
or
out
add
shlb
leave
lret
pop
sub
xor
pushf
or
subl
inc
sbb
pop
sub
jg
mov
rcll
testl
adc
mov
or
lods
in
mov
jg
out
ds
gs
data16
ret
aas
dec
pop
hlt
ficoml
aad
xor
cld
pop
cli
orps
sahf
sub
push
push
stc
jo
xchg
loopne
jno
sbb
in
dec
inc
xlat
or
icebp
mov
cmp
and
loopne
mov
shlb
jg
in
jmp
sbb
jmp
insl
insl
int3
xor
jg
cltd
jb
push
aaa
movsb
jle
sub
arpl
xor
mov
loope
loopne
inc
push
ljmp
mov
and
arpl
cmp
lock
lock
je
or
lret
jno
insl
adc
inc
mov
fsubrl
jmp
or
fistpll
in
cmpsb
sbb
cltd
dec
mov
loop
jp
pop
movsb
loopne
fisttpll
out
sub
or
out
lock
adc
lock
dec
add
jle,pt
mov
or
and
and
stos
xchg
jae
jmp
sti
or
loope
dec
add
in
push
xchg
and
ja
xor
movsb
ret
inc
xchg
sub
mov
jb
mov
mov
enter
repnz
xor
int3
lret
xor
jbe
fisubs
mov
or
jae
scas
mov
fwait
xor
pop
jmp
sti
and
pop
jp
add
or
or
stos
xor
pop
mov
data16
xchg
xor
cmpsl
or
sub
push
adc
jge
inc
or
mov
and
mov
push
cld
sbb
addr16
adc
pushf
inc
insl
inc
xor
fnstenv
in
and
arpl
shrl
or
lods
insl
ja
and
out
addb
test
xor
in
repz
xchg
pop
mov
mov
sahf
cld
jns
and
stos
xchg
ljmp
fsubl
or
imul
aaa
je
push
scas
add
stos
sub
pop
adc
scas
xchg
push
lcall
clc
jmp
fcomip
and
rclb
sbb
or
lods
gs
mov
add
int
sbb
loopw
pop
push
push
push
pop
shlb
jg
insb
inc
cmp
sbb
sbb
repz
int
push
jae
shrl
imul
xor
mov
jo
push
add
shr
dec
fbld
mov
movsl
add
lahf
and
cmpsb
scas
movsb
int3
add
jl
fldcw
mov
fidivs
js
clc
clc
into
sbb
sbb
dec
movsb
sahf
test
repnz
inc
imull
sub
push
cmp
rcr
or
cs
push
push
sub
aam
pop
pop
or
dec
je
push
jmp
push
pop
mov
xchg
pop
cmp
scas
lret
pop
popa
xor
pushf
sahf
mov
and
cli
cmp
sub
xor
enter
xchg
cmpsl
jp
ljmp
jae
add
ljmp
jmp
test
cwtl
or
add
mov
fs
mov
testl
pop
xchg
arpl
dec
fnsave
out
lret
fcmovbe
fnstenv
divps
jge
xchg
or
cld
jg
xchg
inc
adc
jae
sub
jg
out
arpl
ret
xor
rcll
pushf
add
xor
mov
pusha
fidivrs
and
cmp
imul
aaa
mov
sbb
push
cld
or
pop
imul
sbb
mov
mov
or
jne
enter
das
xor
lret
std
mov
mov
negb
pop
pop
fldl
push
push
xor
pop
lods
sbb
dec
push
pushf
jbe
sti
lods
or
sbb
stos
inc
ja
adc
sbb
and
or
push
pop
int
push
outsl
leave
or
inc
mov
dec
mov
into
dec
test
pop
xchg
sbbl
or
repnz
gs
xchg
mov
dec
pop
aaa
pop
jle
mov
into
jp
push
ljmp
xor
mov
clts
pop
arpl
and
add
mov
mov
mov
xlat
push
xchg
push
ret
xor
sub
in
fsubrs
jge
sbb
adc
xchg
dec
pushf
push
out
dec
pop
popa
inc
call
push
push
sub
ljmp
mov
sbbb
shlb
pushl
pushf
add
scas
dec
xchg
loop
jno
or
pop
pcmpeqd
iret
mov
xor
and
sub
pop
popl
dec
sub
mov
out
pushf
dec
inc
mov
mov
aaa
mov
pop
loop
gs
push
xchg
nop
xorl
test
cli
rcr
cmp
pop
pop
aad
fisubl
ds
add
in
addr16
xchg
mov
daa
hlt
push
inc
cmp
mov
dec
ror
jle
or
shll
sbb
push
ljmp
movsb
aaa
add
dec
fwait
in
iret
mov
sbb
lds
out
in
inc
pop
xor
out
push
lods
and
lock
rcr
das
sub
adc
ret
stos
mov
push
int
add
lds
cltd
roll
jmp
cmpsb
out
lcall
cmp
aas
popa
jle
dec
lret
add
mov
out
fstp
test
inc
pushf
xchg
xchg
mov
lret
enter
dec
es
and
out
pop
mov
xor
out
inc
pop
sahf
int
fsubr
jns
xchg
xchg
or
dec
inc
mov
mov
clc
std
repz
out
das
or
inc
cmc
xchg
stos
jo
pop
rorl
jl
inc
pop
scas
mov
repz
js
jb
popf
dec
maxps
push
push
push
jmp
fstps
ficomps
lods
call
clc
push
fstpt
xor
lcall
or
adc
sbb
sub
mov
inc
pop
fsubrl
inc
scas
pop
mov
loopne
pop
xchg
popa
push
pusha
jg
xlat
xlat
popf
push
or
outsb
xchg
fidivrs
loop
out
jle
mov
insb
int3
pop
fstl
fsubrl
adc
hlt
jo
and
popf
push
mov
pop
js
add
push
mov
xchg
pop
jp
mov
mov
insl
xchg
sub
push
mov
aas
sbb
xlat
outsl
xor
cs
jp
shll
mov
inc
inc
sub
adc
mov
repnz
sbb
stos
movsl
cmp
pop
jg
xchg
inc
popa
push
jecxz
cmp
divb
daa
std
or
ret
addr16
mov
push
sbb
mov
and
sahf
xor
or
lock
pushf
test
inc
cmp
enter
push
xor
dec
mov
nop
bound
inc
clc
sbb
xor
cmp
inc
pop
loop
mov
or
pop
jae
hlt
mov
aas
bound
mov
push
add
js
movsb
push
and
adc
jne
pop
and
mov
dec
mov
loopne
and
rcrb
imul
icebp
fldl
push
movsb
shrb
mov
imul
repnz
xor
dec
fldt
jg
xor
xor
outsb
int
inc
mov
lods
xor
pushf
cmpsl
adcb
je
in
or
ret
adcl
test
cmp
in
add
pusha
jne
sbb
mov
test
xor
push
clc
out
les
add
sub
push
adc
inc
leave
dec
jae
testb
lea
sub
lds
sbb
rorl
std
push
es
movsb
dec
mov
add
mov
rol
push
add
mov
xor
stos
add
rolb
jo
xor
mov
xchg
in
dec
or
mov
mov
cs
insl
xchg
cmpsl
mov
jg
jbe
outsl
cmp
fsubl
jno
xor
or
xor
scas
daa
nop
lahf
repnz
fucom
dec
xor
pushf
mov
mov
scas
das
popa
insb
int
mov
xor
repz
cld
rolb
jl
fldz
jp
lahf
pop
or
lret
inc
jmp
fisttps
mov
push
ret
int
int3
mov
pop
xor
sahf
jl
add
into
mov
sbbb
mov
jl
lcall
lcall
adc
dec
dec
iret
xor
mov
fists
repz
fs
lret
xchg
sbb
push
lea
lea
sub
jb
sub
insl
pushf
loop
push
sbb
xchg
into
xor
cmpsl
rorb
mov
fldcw
jbe
pop
shrb
test
push
outsl
in
cmp
add
adc
movsb
mov
cmp
lock
enter
add
push
outsb
fildl
pop
test
pop
xor
popf
notl
lcall
cmpsl
xor
in
push
sbb
inc
out
hlt
inc
cli
icebp
movsl
or
cmc
push
lret
lods
mov
into
and
cmc
sahf
push
std
fiaddl
fchs
rcr
jbe
inc
jge
imul
or
xchg
inc
outsb
xchg
imul
data16
and
push
jae
xrelease
cmp
add
adc
mov
lahf
mov
lret
sbbl
in
inc
sti
es
addr16
xchg
in
repnz
pop
fwait
push
cmc
movsl
jle
xchg
jmp
out
pop
clc
lods
pop
mov
mov
push
dec
popa
xor
lcall
into
out
or
popa
push
fstpt
mov
mov
insl
cmp
test
out
js
sbb
imul
test
std
xchg
xor
sub
out
jb
ljmp
add
or
xchg
sub
mov
pop
xchg
cmpsb
jg
pop
xor
sbb
and
leave
jo
jne
loopne
outsb
cld
stc
mov
stos
lcall
pop
leave
loop
dec
std
adc
inc
ja
stos
js
push
jg
push
mov
sbb
pop
push
idivl
arpl
in
jno
mov
sbb
icebp
jp
cmp
nop
outsb
push
cmpb
dec
lds
or
xor
jb
in
aam
mov
mov
pop
xchg
mov
lds
xor
push
or
sub
mov
ljmp
xor
jecxz
mov
js
cltd
iret
sub
aaa
mov
sbb
pop
jb
mov
sub
dec
or
in
or
adc
push
adc
mov
push
outsl
stc
cwtl
mov
add
mov
dec
inc
jge
sub
pop
dec
insb
inc
loope
popa
adc
mov
and
push
adc
xchg
into
push
ret
call
sub
xchg
iret
ret
not
std
inc
sbb
call
push
call
fucomp
inc
mov
lds
mov
sbb
adc
in
mov
sbb
aas
pop
int3
inc
dec
jge
stc
mov
pop
int3
inc
into
pusha
jmp
pop
push
adc
mov
mov
mov
push
and
xchg
pop
popa
pop
jne
push
mov
xor
lds
fbstp
adc
ja
add
cmp
xchg
inc
sbb
xchg
pop
addr16
into
mov
repz
int3
iret
int
add
les
fists
arpl
mov
int
sbb
pop
or
out
stos
addr16
lcall
enter
push
cli
mov
dec
hlt
fiadds
mov
mov
shl
fimuls
leave
notb
in
test
xlat
cmp
pop
cld
push
cmc
hlt
jbe
xor
outsb
rclb
sahf
inc
cli
sbbb
jmp
idivl
mov
andl
adc
hlt
adc
or
xchg
idivl
cmp
cmp
mov
jg
xor
lret
mov
xchg
pusha
adc
jl
or
inc
and
test
lods
sub
and
sbb
mov
dec
cltd
ja
aas
mov
jle
jge
ror
icebp
push
push
lahf
and
or
dec
mov
and
pop
and
sub
add
aaa
shll
lar
mov
or
xchg
cmp
add
and
js
mov
out
repz
push
mov
test
xchg
mov
jns
imul
in
fsts
test
sbb
dec
ret
lcall
jge
jl
sbbb
xorl
jl
ss
loopne
mov
push
test
jno
push
mov
orl
outsl
xchg
cli
sub
in
push
das
out
add
cld
xlat
shlb
jl
push
add
int3
inc
das
or
adc
or
sbb
aaa
notl
dec
pop
and
out
cmc
idivl
idivl
sub
test
mov
ljmp
mov
stc
mov
xchg
sar
inc
sub
mov
and
and
adc
in
mov
xor
adc
xchg
std
mov
add
add
xor
jb
loope
xchg
cltd
mov
aad
mov
shrl
jns
mov
jne
outsl
mov
sahf
aas
xchg
dec
and
add
es
fisubs
out
jo
mov
xchg
pop
sub
aad
xor
out
js
in
adc
push
pop
pop
add
sbb
inc
imul
push
enter
mov
cmp
adc
imul
sahf
fwait
jnp
sub
ds
add
out
rcrl
int3
ljmp
adc
les
inc
sbb
insb
mov
xchg
idiv
sbb
aaa
sar
fstpl
in
pusha
outsb
test
sub
sarb
push
add
pop
dec
pop
loopne
push
out
push
fmulp
cmpsl
and
bound
sub
mov
imul
dec
jne
push
jo
mov
stc
mov
jg
mov
cmpsb
ret
push
rolb
imul
adc
cld
mov
imul
mov
cmp
adc
test
inc
xchg
pop
jbe
out
neg
das
add
insb
jns
stos
test
inc
mov
pop
push
out
outsl
mov
sub
js
and
testl
pop
dec
test
sub
push
mov
call
sbbl
push
lods
and
sti
test
inc
stc
popa
repnz
pusha
lock
mov
aam
popf
mov
sub
loope
lahf
mov
es
es
cmp
adc
mov
mov
int
xor
xor
mov
inc
mov
stc
dec
and
sbb
in
jno
rolb
xchg
and
ret
sahf
in
movsb
xor
inc
cmpsl
scas
lds
mov
dec
push
add
addr16
arpl
sub
mov
mov
pop
adc
push
mov
push
cld
add
mov
out
ss
pop
mov
jnp
push
rorb
pop
sub
std
pop
test
mov
pop
inc
xchg
stos
imul
jae
jecxz
inc
xchg
adc
xchg
sahf
enter
add
xlat
ret
mov
xor
push
add
out
enter
lret
mov
push
jb
fdivrl
pop
shl
and
std
push
jns
adc
xchg
pop
lret
loop
pop
dec
jno
stos
fdivrl
sub
call
imul
je
and
inc
fwait
dec
cmpl
cmpsl
jns
stos
push
sahf
jno
dec
push
inc
mov
cmp
pushf
arpl
or
lock
fidivl
mov
xchg
pop
pop
in
in
push
push
mov
inc
push
push
mov
sub
jp
ljmp
sahf
sbb
push
and
pop
aad
nop
cltd
fwait
pop
lods
test
dec
lcall
jp
inc
sub
add
xor
rep
shl
js
scas
dec
fcoms
movsb
jg
mov
es
sbb
sbbb
stos
mov
xchg
xlat
inc
push
cmp
enter
je
in
enter
fs
rcrb
ret
add
cli
inc
out
add
push
fwait
jno
push
add
mov
cmc
push
xor
pusha
adc
test
sub
dec
cld
mov
or
mov
push
aam
in
lods
or
xlat
sbb
inc
cld
rorl
xchg
jp
arpl
jg
cmp
cmpsb
in
jb
jg
dec
rcll
or
push
test
and
sub
sbb
or
adc
out
xchg
sbb
or
inc
push
sub
inc
jno
insl
andl
fwait
mov
cmpl
sub
in
test
adc
out
push
or
sbb
sahf
jmp
cmp
xchg
add
jge,pt
out
add
mov
cmpsl
insb
pop
fsubp
inc
icebp
inc
push
out
add
enter
mov
cmp
rorl
and
push
jne
mov
adc
std
stc
cmp
test
sbb
loop
imul
dec
std
mov
leave
jecxz
ss
addl
jmp
dec
mov
xor
insl
shrl
sub
mov
xlat
or
or
and
mov
ret
loopne
out
cs
jmp
ret
hlt
fimuls
out
inc
ret
mov
and
ficoms
sub
xchg
js
lret
imul
dec
adc
jne
jbe
cltd
test
mov
das
inc
loope
and
loopne
xor
mov
pushf
fcomi
mov
test
lahf
adc
adc
scas
xchg
cmp
imul
dec
xchg
and
lods
repnz
out
addb
add
mov
add
cmp
push
xor
sbb
or
adc
jmp
mov
aam
insb
inc
mov
insb
test
jecxz
popf
clc
xor
mov
mov
and
fisttps
lds
or
push
iret
push
xchg
push
fnstsw
and
aad
sbb
outsb
mov
dec
imul
push
lock
rcrb
push
add
and
pop
andb
rolb
pop
and
stos
or
dec
das
aam
out
push
xchg
and
std
jecxz
shrl
rclb
xor
xor
iret
lea
mov
or
cmpb
xor
je
inc
dec
repnz
fs
adc
pop
jnp
mov
mov
or
push
test
addr16
sub
enter
or
es
mov
mov
xor
xchg
and
imull
pop
test
xor
stos
sbb
xorb
cltd
jge
fwait
rcll
or
dec
or
out
mov
cmp
gs
pop
pop
mov
xchg
jp
jge
loop
sub
cmp
sub
mov
sub
jno
out
mov
incl
or
in
cmpsl
das
fmuls
fsubs
mul
bsr
lods
repz
push
or
das
pop
and
lods
int
and
mov
inc
nop
lds
sbb
daa
pop
hlt
lcall
mov
mov
test
loop
push
mov
icebp
rclb
fstpt
mov
lcall
enter
sbb
lahf
xor
sbb
pop
mov
jb
adc
lds
cmp
push
es
or
adcl
and
repnz
mov
dec
rcrb
sub
shll
xor
and
pop
lret
push
lods
lret
cwtl
cwtl
cmp
out
dec
daa
ljmp
and
and
mov
shll
xor
inc
cwtl
fnstcw
adc
mov
push
lods
mov
adc
mov
call
dec
cmc
mov
out
lods
xor
mov
int
xchg
cmp
ret
pop
push
dec
and
adc
sub
shr
xor
ret
scas
xor
mov
dec
orb
add
or
mov
adc
mov
shlb
or
xchg
jge
fldl
or
cmpsl
in
loope
sahf
in
repz
scas
and
dec
das
dec
imul
mov
jmp
sub
push
pop
dec
stos
outsb
sbb
gs
jmp
sub
inc
gs
iret
push
add
pop
mov
sub
shll
xchg
clc
mov
cmc
das
mov
cmpsl
cmp
mov
lret
fxch
add
xchg
sbb
stc
ljmp
sbb
inc
pop
mov
mov
or
cmc
dec
sub
sub
adc
cmpsb
push
mov
js
jne
xchg
loopne
in
js
mov
inc
shll
jb
xor
ss
pop
pop
mov
int3
or
ss
stc
jp
stos
ret
icebp
leave
mov
and
notb
dec
lock
or
aas
xor
jbe
mov
dec
xor
add
sbb
adc
leave
mov
and
clc
fbld
cmp
push
les
or
leave
jecxz
test
mov
stc
cmp
nop
push
shll
in
mov
out
gs
or
sub
adc
cld
jns
adc
ljmp
pushf
cmp
xchg
dec
add
lret
xorl
cld
sbbb
mov
cltd
test
lds
jg
inc
mov
js
stc
jns
adc
stos
fbld
test
leave
aam
outsb
add
add
scas
lret
ficoml
sub
mov
cmc
sti
sub
jb
outsl
lret
out
add
push
fs
jb
sub
in
in
add
or
add
test
cmpsb
push
call
mov
and
xchg
int
mov
cmp
jne
into
rclb
sbb
ja
jb
push
pop
hlt
sbbl
cwtl
repz
pop
icebp
xorb
stos
push
sub
mov
and
dec
cmp
mov
add
loop
ss
xor
jge
cmp
mov
rorl
mov
aaa
push
gs
cmp
cs
dec
adcl
jp
outsl
addb
mov
stc
aam
aas
divb
sub
fldcw
gs
adc
xor
xchg
inc
stos
dec
and
pop
insb
cltd
ret
xchg
dec
div
sbb
xor
daa
mov
sub
or
adcb
push
mov
stos
and
and
push
lock
fwait
jae
retw
jae
push
mov
mov
cmp
adc
shlb
outsl
sbb
sub
aam
sbb
cmpsb
push
insl
cmp
ret
mov
jp
sbb
jp
ja
ret
mov
jb
clc
in
dec
mov
jmp
jnp
mov
stos
sub
jns
mov
add
lds
xchg
aam
outsl
negb
adc
jne
loop
dec
ja
int
cld
pop
push
or
mov
call
cmp
adc
xchg
push
inc
pop
int3
inc
mov
cltd
ja
and
dec
je
or
scas
rcll
add
loope
sbb
cmp
gs
cwtl
sbb
rorl
jo
mov
cmp
push
ja
daa
fldt
and
addb
push
add
in
add
data16
or
scas
lods
or
cmp
mov
iret
xchg
mov
and
test
hlt
adc
pop
adcb
and
fsts
dec
popa
ja,pt
test
repz
sbb
cmp
push
push
jmp
test
xchg
test
mov
or
out
pop
sti
sti
enter
cmp
fsubrs
in
adc
nop
test
mov
mov
shl
inc
inc
inc
ret
mov
push
loop
shlb
xchg
aaa
ret
cltd
pop
bound
mov
adc
pop
test
cmp
out
insl
test
test
or
insb
hlt
into
in
ljmp
ds
sub
pusha
pop
popa
repnz
adc
sbb
movsb
pop
popf
mov
adc
xorl
jl
mov
xor
pop
mov
inc
inc
call
shr
iret
divb
shrl
mov
pop
push
jb
mov
jae
ds
xor
dec
enter
push
loopne
lret
inc
jle
mov
mov
dec
cmp
inc
aas
dec
aam
mov
lods
out
xor
add
repz
dec
jae
ds
movsb
pop
and
out
fldenv
dec
icebp
jl
lret
je
push
sub
das
addps
jl
pop
sbb
lretw
or
movsb
into
es
das
into
inc
mov
or
cmp
lock
icebp
iret
je
out
inc
test
movsb
jnp
loope
xor
or
test
sbbl
scas
cld
test
dec
shll
xlat
enter
lock
rcll
mov
nop
fdivp
jle
loopne
lods
data16
adc
push
mov
or
xchg
cmp
cmp
mov
shll
insl
stc
ss
pop
imul
cs
push
pop
xor
dec
dec
jmp
and
cmp
push
xor
int
pop
dec
mov
repnz
jl
mov
out
les
xchg
call
clc
rcrb
or
xlat
pop
jne
mov
xor
in
aaa
imul
test
shrl
push
syscall
xchg
push
lods
je
cmpsl
push
pop
das
jle
mov
and
adc
repz
mov
xchg
out
pop
push
or
cli
std
roll
in
nop
mov
push
pop
pop
fidivrl
mov
xor
and
mov
out
pop
sbb
add
mov
into
aad
movsb
inc
jns
cs
gs
jns,pn
jg
subl
fbld
gs
addr16
mov
xchg
repnz
add
jne
data16
sub
repnz
pop
push
mov
jno
test
repz
je
inc
cmp
cld
fimull
jo
adc
add
xor
sbb
out
cs
sub
ret
out
mov
adc
mov
hlt
shr
or
cmpsb
mov
mov
lret
push
mov
mov
jl
das
jns
cmp
push
loopne
push
in
aam
shrb
in
fs
loop
out
push
jmp
test
fsqrt
inc
cmp
or
xlat
andl
sub
stc
enter
pop
fs
mov
add
clc
add
and
adcb
popa
icebp
faddl
pop
dec
rcl
test
clc
mov
sbb
jae
xchg
into
scas
orl
inc
test
ljmp
xor
push
dec
adc
clc
loopne
repz
inc
icebp
jge
jge
and
or
das
repnz
imul
push
sbb
cld
add
les
push
sub
or
pop
xor
xchg
call
mov
xor
inc
inc
les
test
add
adc
repnz
mov
aas
arpl
inc
xor
and
lea
cld
mov
out
and
add
loopne
scas
fiaddl
outsl
shll
mov
out
flds
or
push
mov
stos
push
mov
pop
or
mov
stc
pop
fidivrl
push
xchg
cmp
loope
test
mov
jae
inc
imul
outsb
movsl
inc
push
hlt
faddl
sbb
jl
data16
ja
jno
lods
and
xor
mov
add
inc
lcall
sbb
mov
jge
push
pop
and
push
sub
xor
jb
adc
dec
add
shrl
nop
or
adc
push
cmp
fwait
cmpsb
jmp
imul
mov
xacquire
out
jbe
out
addr16
dec
enter
and
push
xchg
pop
jnp
jp
push
rcl
cmc
xor
mov
cli
aam
xlat
inc
jnp
not
adc
mov
rolb
push
testb
cs
fmull
mov
jbe
sti
lahf
sahf
arpl
data16
stc
cmpsb
scas
lret
shlb
dec
cmpb
in
pop
dec
das
push
xor
addb
mov
es
mov
outsb
test
pop
pop
in
aad
or
jge
mov
or
push
xor
mov
rcrb
push
nop
mov
push
dec
out
xor
push
int
aas
push
or
out
jo
dec
mov
dec
xor
mov
sub
pop
mov
jb
sub
xchg
fmul
je
mov
dec
iret
adc
add
pop
lahf
cli
cmp
clc
cld
jb
fcmovne
cmp
cmp
jb
es
add
push
jae
xchg
xor
mov
bswap
rolb
adc
push
fisubs
outsb
and
and
or
add
test
pop
int
ret
test
jne
mov
nop
stos
lret
dec
cwtl
shrl
cmp
adc
test
xchg
cmp
add
incb
inc
push
loope
adc
sub
roll
les
inc
mov
add
int3
divb
mov
mov
lea
lock
xchg
in
jge
imul
jbe
mov
push
sbb
fistpll
sub
ljmp
add
into
je
hlt
mov
push
dec
mov
fsubs
sub
dec
or
ljmp
out
ret
dec
xor
xor
jno
adcb
fdivrp
xor
cmp
scas
jne
xor
push
sub
and
fldt
clc
pushf
adc
xlat
fiadds
adc
fadds
pop
dec
test
fadds
fs
enter
out
push
repz
cmp
xchg
fistpll
iret
push
lods
pusha
xchg
cmpl
sbbl
pop
pushf
lcall
hlt
push
sbb
lcall
fsubl
or
pop
xchg
stos
nop
fldl2t
push
mov
pop
pop
jno
cmp
cwtl
xor
negb
pop
mov
and
jl
sbb
xchg
cld
lcall
bound
xor
sbb
inc
daa
notl
out
sti
jge
dec
cmpsl
enter
fwait
or
mov
mov
nop
repnz
xchg
jle
mov
hlt
sbb
fistps
push
mov
out
mov
xchg
ret
ficoms
inc
or
mov
mov
dec
push
inc
push
pop
cmp
push
sub
adc
mov
adc
lds
cmp
lcall
mov
cmp
idivl
cli
daa
repnz
xchg
lahf
mov
inc
cmpsl
or
insb
mov
subb
cmc
pop
test
aam
lea
and
jno
inc
iret
mov
rorl
cmp
mov
jns
or
leave
mov
or
test
cmp
aad
xorl
andb
dec
xor
xor
into
inc
imul
jne
aas
pop
ret
ds
jne
dec
out
sarb
xor
push
ret
mov
add
push
test
gs
jbe
inc
mov
dec
leave
adc
mov
clc
pop
sbb
mov
lods
xor
scas
sbb
hlt
and
stc
push
sub
mov
fdivrp
leave
in
xor
inc
das
incl
and
sbb
bound
jo
sbb
pop
fmuls
std
mov
in
scas
xor
test
je
push
out
add
ret
xor
sbb
rclb
cli
cmpsb
inc
in
test
adc
jno
push
cmp
repz
sub
push
or
push
lret
jb
push
fidivrl
jecxz
pop
dec
or
cmp
xchg
sbb
xor
bound
jmp
and
js
jge
cs
stc
scas
lea
pop
dec
not
in
rolb
dec
rolb
popf
cmp
push
roll
push
push
jg
or
int3
js
pop
aam
adc
pop
mov
sub
fiaddl
lahf
bound
pop
in
orb
ds
xchg
clc
out
dec
sub
dec
aam
sbb
and
fildl
mov
in
mov
inc
mov
or
daa
pushf
out
sub
mov
not
inc
mov
sbb
or
mov
add
icebp
sub
fwait
pop
arpl
imul
pop
jae
lea
cmc
std
jb
fstpt
cmp
popf
jbe
push
dec
pop
aad
insb
lods
mov
rorl
xchg
mov
xor
jae
xor
nop
cmp
and
mulb
inc
jecxz
inc
hlt
std
loop
adc
mov
int3
and
imul
pop
cmp
adc
jp
add
outsb
shlb
dec
testb
inc
jb
cmp
push
fistpl
sbb
mov
addb
test
pop
leavew
jbe
add
jmp
push
inc
push
fisubrl
mov
loopne
xchg
push
into
cmp
pop
dec
ja
push
enter
out
aas
mov
sbb
negl
mov
push
jbe
inc
testb
test
add
pop
mov
popa
fnstcw
in
and
shll
cmp
enter
outsb
test
jns
icebp
test
jb
cwtl
imul
mov
mov
mov
jns
or
inc
out
mov
sbb
repnz
rcrb
fiaddl
xchg
jle
outsb
subl
sub
movsb
out
mov
loopne
rorb
or
inc
xchg
sub
or
cltd
mov
cmpb
xor
sbb
and
sub
fisubrs
push
ds
iret
xchg
out
testl
mov
cmp
fstp
xchg
rol
pop
test
cmpsl
xlat
aad
inc
jns
lock
xchg
or
xor
je
mov
fcoms
insb
or
cmp
lods
adc
pop
fdivrs
mov
popl
negl
adc
or
and
push
sub
pop
dec
stos
sub
cmp
push
pop
xchg
sub
out
lods
xchg
les
mov
and
hlt
ficoms
or
sar
pop
cld
test
xchg
fwait
xchg
add
mov
sbb
addr16
mov
adc
popf
inc
adc
jge
mov
sub
sub
mulb
mov
adc
fisubs
hlt
sub
xchg
jne
add
popa
jns
sbb
dec
pop
inc
or
and
pop
pop
insb
sbb
jns
addb
lock
jge
push
xchg
test
lds
xlat
and
push
xor
outsb
jp
and
mov
cli
outsb
mov
bound
ret
es
dec
cmc
ret
cmp
pop
iret
dec
jp
pop
adc
xchg
jg
xchg
jnp
dec
jno
xchg
std
fldt
call
fmuls
stos
and
mov
fsubs
enter
aaa
push
mov
repnz
out
push
in
xchg
inc
insb
rcll
repnz
lods
mov
mov
es
inc
jae
rol
cmp
push
mov
lret
fldl
inc
fiaddl
jmp
loope
arpl
ljmp
stos
clc
in
push
adc
and
push
int
icebp
lret
insb
xor
mov
mov
and
add
or
jo
push
stos
loop
mov
aad
shr
ss
inc
mov
sub
popa
notl
popf
stc
push
add
jb
clc
fcmovbe
add
push
cmpsl
push
sub
jae
push
add
lret
daa
jmp
fidivrs
imul
mov
cmp
cld
mov
adc
hlt
cmpsb
push
push
ficomps
dec
sbbl
adc
inc
ja
xchg
push
or
icebp
imul
jns
inc
int3
sub
add
push
fs
dec
pop
or
jns
mov
mov
push
out
push
jle
push
or
cmpsl
xor
les
cmpxchg
cs
and
mov
scas
xchg
leave
loopne
clc
push
and
aas
pop
repnz
cmc
mov
lock
dec
push
out
adc
movsl
jns
mov
fstp
dec
mov
xor
ss
mov
cmp
in
mov
add
mov
push
pop
sub
jno
add
and
std
repnz
leave
jns
pop
mov
and
das
mov
in
das
cmp
test
es
pop
jno
jno
jmp
aas
mov
or
cld
cmpsl
loop
mov
dec
sbb
iret
repz
and
movsl
pushf
push
jg
push
insb
daa
mov
mov
orl
stos
dec
movsb
inc
jmp
add
es
xchg
dec
orb
fs
or
rcrl
loop
js
pop
sbb
rclb
xchg
mov
xchg
dec
push
outsb
add
cmp
adc
mov
cmpsl
ja
jne
pushf
push
pop
fldenv
outsl
cmp
idiv
jb
pop
mov
std
nop
push
dec
dec
dec
pop
xor
and
or
aas
subl
int3
movb
mov
dec
cltd
sbb
lret
test
lret
mov
in
inc
add
cmp
pop
mov
jl
cmp
in
out
and
mov
pop
addr16
je
or
or
icebp
icebp
cwtl
fistl
pop
test
sbb
enter
std
xor
ljmp
rcrb
push
out
lcall
xorb
in
lret
mov
or
xchg
shrl
xchg
out
inc
cs
mov
push
sub
mov
mov
repnz
push
mov
add
dec
or
mov
shlb
and
mov
fldenv
repz
inc
adc
jmp
pop
or
lahf
stos
lret
xor
jo
jge
inc
ljmp
push
mov
cltd
scas
out
dec
lds
fsubl
push
inc
mov
imul
test
loop
div
and
mov
sbb
mov
mov
dec
pop
nop
mov
cmpsb
pop
test
out
jne
aam
rolb
or
pop
stos
xor
imul
push
jae
jecxz
jae
mov
pop
jp
cli
out
int3
lods
orl
sbb
jmp
adc
stos
fdivl
cld
add
and
es
lahf
jl
fsincos
out
jae
icebp
int3
dec
jg
imul
sahf
es
fstpl
dec
dec
mov
cmp
ds
dec
out
fs
mov
add
mov
outsl
sti
pop
xlat
mov
xchg
sarb
and
mov
cmc
gs
mov
aaa
dec
cmp
push
dec
sbb
mov
sbb
push
decb
jnp
mov
scas
sub
lods
push
stc
mov
mov
testb
or
pop
adc
xor
pop
push
hlt
lcall
fwait
daa
lods
pop
lock
xchg
loop
cs
rcll
xchg
out
xchg
sub
ss
mov
push
repz
jo
movb
xor
mov
lcall
cmp
fcmovbe
mov
mov
sahf
ja
imul
mov
mov
outsb
inc
test
add
jb
ljmp
in
pop
cs
cwtl
xchg
push
cmp
std
loope
mov
jg
lea
leave
jns
pop
sub
pop
mov
rcl
movsl
out
stc
sbb
iret
ficoml
dec
jg
div
fscale
jnp
mov
imul
dec
in
jg
js
sbb
ret
push
mov
xchg
mov
ss
nop
xor
testb
hlt
mov
adc
push
pop
mov
adc
cltd
iret
mov
into
and
testb
xor
xchg
out
sbb
and
mov
mov
fs
call
ds
pop
sti
or
add
adc
insb
push
inc
inc
cmp
data16
insb
outsb
xor
cmpsl
mov
stc
jb
push
xchg
add
mov
inc
xchg
je
push
insl
bound
std
add
je
nop
mov
cwtl
ss
mov
sarl
nop
js
push
or
lahf
jae
adc
adc
add
iret
sub
out
outsb
leave
xchg
add
sub
lods
adc
xchg
mov
stos
xchg
pmullw
clc
aam
aad
je
cmc
adc
dec
push
jl
rcl
jo
xchg
jmp
xor
dec
sub
int
ret
cmp
pop
push
aad
les
iret
xor
clc
arpl
cmpsl
stos
add
inc
push
mov
out
sbb
cmpsb
insl
push
out
add
xor
loop
sub
outsb
lock
pop
in
xchg
into
push
xor
mov
orb
inc
aaa
ds
fnstenv
arpl
push
fidivs
test
xchg
cltd
mov
inc
push
pop
mov
rorl
xchg
stc
mov
js
xchg
lods
xor
jge
jmp
popf
stos
test
lahf
cmpsb
shlb
inc
data16
jmp
xchg
rcr
xchg
xchg
cs
inc
push
scas
push
push
sub
mov
sbb
push
ret
ss
xchg
call
insb
out
sbb
inc
roll
lods
jecxz
loop
imul
inc
or
push
xchg
es
movsl
mov
jg
sub
push
sub
push
dec
loop
or
inc
nop
in
pop
icebp
sarb
dec
fldcw
movsb
addl
mov
cmp
outsl
iret
lock
fwait
mov
mov
fdivp
sahf
xor
adc
test
jnp
icebp
xlat
pop
cmp
nopl
dec
jl
cmp
pop
mov
or
pop
ljmp
fstpt
es
jbe
arpl
adc
sbbl
mov
dec
jne
lret
xchg
pop
xor
add
adc
sbb
jno
int
cli
xchg
pop
call
nop
xlat
and
dec
ror
push
mov
adc
fwait
xlat
or
andl
mov
mov
ror
fnstcw
xor
adc
incb
push
fcmovne
jb
loopne
and
cmp
and
add
jbe
data16
mov
sub
imul
movsl
out
and
push
mov
sahf
notb
daa
or
stos
sub
rcr
xchg
cmc
ja
xor
pushf
lret
mov
out
dec
out
sahf
ret
cmp
in
shl
addr16
jae
insb
out
or
inc
rcr
mul
xor
xor
adc
xchg
lock
inc
wbinvd
xor
jno
cmp
pushf
mov
lods
test
xchg
push
sarl
sbb
cmpsb
jne
push
icebp
cwtl
cwtl
sbb
inc
cli
call
adc
int3
stc
xchg
repz
push
fsts
shl
out
int
cmc
add
mov
jg
or
or
lret
pop
jb
push
pop
xchg
pop
inc
mov
cmp
div
adc
pop
xchg
cld
shlb
pop
sar
mov
dec
push
add
repz
ror
sti
jle
ds
int
into
addr16
call
sub
cmp
es
add
mov
add
fwait
or
mov
int
test
cmp
push
es
inc
cmp
fdivs
push
insb
test
shrb
imul
enter
push
xchg
aam
js
mov
cltd
push
push
sub
inc
push
jecxz
repz
out
add
push
mul
and
xchg
stc
sti
mov
xor
mov
and
imul
outsb
xor
mov
shrl
sub
movsl
loope
sub
nop
cld
cltd
stc
stc
addr16
jecxz
mov
dec
jge
jo
cmc
out
cld
movsb
rcll
push
xor
inc
inc
adc
mov
add
add
lds
or
scas
lcall
loope
movsb
or
test
pop
mov
test
xchg
lret
shll
push
dec
mov
data16
add
mov
jg
mull
mov
fwait
or
popa
fisttpll
fstpt
fsubs
mov
sbb
pop
mov
add
fwait
ja
sbb
jg
out
subl
inc
push
test
lcall
xor
mov
inc
mov
jns
jae
cmp
sahf
mov
dec
test
add
jmp
xorl
add
push
cmp
cld
cmp
cmp
mov
and
ret
dec
repnz
movsl
out
mov
mov
icebp
idivl
jne
push
nop
xor
push
ss
add
or
xor
icebp
xor
jo
loopne
or
inc
je
js
or
mov
mov
fcos
mov
dec
hlt
lods
imulb
test
outsb
and
cmp
pusha
mov
ret
dec
pop
sub
and
sub
iret
pop
xchg
arpl
popa
scas
iret
pop
and
pop
imul
adc
fnclex
loopne
pushf
adc
add
int
fstpl
xchg
popf
add
int
std
jmp
sub
mov
lcall
pop
imul
stos
andb
cltd
sub
mov
push
clc
inc
adcl
ja
loopne
test
jae
push
adc
lret
jns
pushf
push
jmp
jp
jmp
jle
jmp
fdivrs
int3
ja
add
outsb
pushf
daa
sbb
dec
xchg
push
or
or
mov
lds
test
lret
xorb
jae
ficomps
mov
pop
xor
jno
je
push
mov
fwait
and
jne
fmuls
sbb
xchg
lret
xor
cmp
stos
dec
outsb
hlt
sbb
mov
arpl
test
data16
adcl
stos
aad
push
sub
jl
mov
jnp
inc
loop
inc
mov
cwtl
pop
test
adc
rcll
inc
cwtl
pop
or
xchg
stc
scas
xchg
mov
xchg
call
mov
and
mov
inc
dec
sbb
gs
dec
sbb
mov
andb
cli
cmp
adc
xchg
add
fwait
jb
popl
xchg
add
jle
sbb
pushf
rcr
out
aam
mov
clc
dec
mov
or
loope
mov
mov
lea
fstpl
add
dec
push
loopne
dec
lret
add
xor
cmpsl
movsl
xor
cmpsl
ja
scas
rorl
sbb
lds
fbstp
xchg
sti
jo
sub
test
hlt
mov
xchg
mov
mov
mov
cmp
push
fnsave
aaa
faddl
cmp
stos
sahf
lea
pop
push
xchg
pop
add
fmuls
cmp
jnp
fistl
fnstenv
addr16
arpl
insb
and
ficomps
int
incb
mov
sbb
lea
div
xor
and
inc
mov
inc
adcl
imul
sub
dec
das
jno
cmp
and
inc
fisubs
push
outsl
mov
sub
testl
xor
dec
repnz
push
xchg
leave
fcoml
shlb
mov
outsl
test
repz
pushf
insl
sbb
loope
adc
xchg
mov
dec
jo
repz
xor
call
mov
pop
jne
aas
shrl
jae
cld
add
stos
cmp
jbe
testb
mov
jp
push
mov
lret
jns
jp
push
mov
stos
stc
ja
or
hlt
cmp
int
lret
adcl
xchg
out
sub
add
nop
lahf
xchg
fisubrl
imul
scas
push
mov
mov
cmp
loop
ret
rcl
lods
lret
aad
mov
xchg
std
pop
mov
sub
and
popf
add
push
adc
sub
push
imul
push
dec
dec
xchg
xchg
sbb
pop
push
pop
fnstenv
cmpsb
mov
in
xchg
sub
xchg
lret
dec
clc
loope
pop
sub
xlat
insb
mov
or
jmp
adc
adc
mov
movsb
adc
movsl
mov
std
add
fstpl
adcl
hlt
adc
test
jp
incb
push
mov
mov
sti
cmp
mov
shrl
cmp
push
xchg
insw
adc
je
test
jmp
or
sub
nop
gs
lcall
and
jnp
in
push
fldenv
mov
mov
mov
invlpg
inc
inc
sbb
xchg
stc
xor
es
lds
mov
inc
cmp
movsb
cmp
jo
xor
aad
cli
xchg
in
add
imul
pop
cmpl
lcall
mov
addr16
mov
ds
imul
popf
jge
adc
pop
jb
imul
adc
in
lods
sbb
sbb
push
sbbl
out
test
cli
insl
imul
loop
add
xor
ror
call
or
mov
sarl
pop
les
jne
mul
ljmp
mov
xor
mov
ss
add
sub
fs
ljmp
pop
int
pop
lret
call
in
pop
lcall
cmpsb
pop
push
push
sub
mov
inc
lods
mov
in
aad
fmulp
orl
cltd
pop
sbb
and
mov
aas
jmp
in
movsl
jp
cltd
aas
lock
xor
push
and
adc
popa
sbb
fsubs
and
mov
jl
mov
and
lea
iret
mov
cmp
or
in
xor
andb
scas
loop
imul
cmp
sub
loop
ja
and
mov
rolb
jle
fwait
and
xchg
push
mov
mov
iret
dec
add
sbb
andb
and
xor
jl
mov
adc
aaa
push
ret
pop
sbb
mov
cmp
sbb
jo
cmpsl
stc
repnz
jmp
ds
adc
and
stos
jmp
ret
fldt
cmpsb
pop
mov
jb
mov
fstl
popa
movsl
xchg
rcrl
fs
arpl
inc
fldcw
cmp
int
adc
pop
xor
push
icebp
mov
push
dec
xchg
fsubs
fiaddl
shlb
and
dec
test
sub
int
dec
jg
jp
rcll
jecxz
and
cmp
es
out
repnz
add
mov
cmpsb
xor
loope
push
ds
xor
jecxz
insb
push
out
stc
jb
ja
pop
clc
jb
cmp
adc
inc
dec
mov
fnstcw
clc
fsubr
mov
andb
lock
sbb
mov
mov
addr16
cmc
sti
test
sub
int3
xchg
stos
add
jne
xchg
lods
bound
test
sbb
and
jns
rorb
mov
xchg
call
scas
leave
mov
addr16
xchg
ret
pop
das
mov
xchg
das
pop
xchg
scas
and
dec
inc
enter
lret
lret
out
cli
lret
outsl
cmp
ljmp
xchg
xor
pop
cmp
xchg
pushf
aaa
sbb
imull
insl
push
xor
mov
push
jecxz
ss
sarb
xchg
dec
subl
fs
xchg
pusha
repz
jge
sub
in
lcall
lret
inc
test
or
js
push
mov
daa
dec
jecxz
aaa
popa
cwtl
scas
mov
dec
stos
mov
stos
dec
cmp
and
sbb
pop
fisttpll
rorl
mov
push
xor
stos
or
pop
out
xchg
repnz
dec
adc
outsb
stc
rolb
jae
fdivl
jl
cmp
lds
sti
dec
fisubrl
stc
stos
dec
jb
or
leave
subb
int3
bound
push
pop
mov
push
test
pop
sbb
fidivl
repnz
imul
scas
xor
mov
mov
popf
pop
out
pop
fdivl
xor
pop
lds
jge
icebp
push
ljmp
lret
iret
lods
js
addl
sahf
repz
and
fisttpll
add
pop
sbb
in
stos
jbe
rorb
sub
cld
or
pushf
xchg
inc
sub
stos
imul
push
jecxz
rcl
push
mov
dec
xchg
pop
pop
mov
stos
not
mov
shlb
pop
cmp
mov
push
inc
int3
and
mov
mov
ret
sub
cmc
inc
test
xchg
aaa
jno
mov
jnp
inc
inc
test
aas
out
mov
mov
pop
pop
mov
jae
inc
outsl
or
rcll
mov
fdivrp
rcll
out
inc
es
inc
push
mov
push
mov
loopne,pn
in
or
push
sbb
je
cmc
and
sbb
stc
inc
inc
pop
fst
xor
dec
xchg
in
ja
xor
mov
lret
mov
lock
cmp
sub
push
sub
pop
in
or
push
icebp
mull
sub
aas
xor
and
dec
pushl
sbb
cmp
js
hlt
out
and
cmp
les
adc
dec
xchg
cwtl
push
dec
aaa
mov
pop
xchg
cltd
sbb
mov
mov
ljmp
fnsave
dec
shlb
push
xchg
iret
test
sarb
add
movsb
and
mov
mov
pop
inc
inc
sub
jno
cld
jno
xor
lock
xchg
test
adc
pushf
fistpll
cmpsl
fidivrl
xor
push
xor
jp
xchg
fstp
test
insl
xlat
orl
mov
sub
mov
adc
loopne
dec
mov
mov
shll
jb
push
cmp
or
mov
ret
in
clc
sub
xchg
inc
out
lret
jg
pop
aaa
test
shrb
xchg
js
loopne
add
dec
xor
adc
xlat
jl
mov
mov
jl
nop
pop
jl
andb
data16
jge
push
call
shlb
lock
into
xchg
jne
or
mov
mov
sbb
xor
out
push
push
ss
movsb
testb
lods
xchg
xchg
aam
ljmp
inc
mov
xlat
fsubrs
cmp
ror
jae
bound
inc
aam
pusha
and
pop
rcrb
jae
inc
mov
inc
repz
lea
jp
adc
jb
mov
add
jb
mov
test
btc
stc
arpl
sub
adc
or
jl
aas
loopne
das
outsb
inc
test
jecxz
sub
lods
inc
out
cmp
xchg
xchg
roll
and
adc
or
ss
mulb
inc
jae
and
adc
xor
add
pop
ljmp
clc
push
xor
pop
add
jge
add
mov
aaa
sub
push
outsl
dec
enter
inc
js
jle
push
icebp
xchg
sub
xchg
out
mov
inc
aaa
or
fdivr
or
stc
adc
sbb
inc
cmp
inc
sbb
xor
add
push
xor
mov
sub
arpl
inc
inc
jns
fldl
js
adcl
in
mov
inc
xlat
push
adc
loop
xor
ret
daa
addr16
fldt
in
stos
sbb
sti
test
dec
testl
mov
loop
mov
movhlps
clc
xchg
cmpsb
jnp
inc
pop
sbb
repz
movsb
add
and
mov
aaa
mov
stc
xchg
in
cld
testb
sub
and
and
xor
idivb
jo
ds
mov
mov
and
cwtl
ds
mov
sti
sbb
fs
inc
and
sti
xchg
out
jg
xor
pop
jge
popa
jo
inc
inc
inc
imul
xchg
leave
jo
mov
jmp
jle
jne
xchg
lods
lods
imul
das
pop
sub
sub
inc
sbb
les
jo
fbld
mov
jae
bound
cltd
int
add
inc
mov
jl
jo
jle
fbstp
movsb
imul
xchg
testl
addl
roll
xlat
dec
or
cltd
stos
adc
rolb
repz
push
mov
pop
test
sub
lock
loopne
inc
mov
div
and
cmp
sbb
mov
xchg
cmpsb
jge
mov
inc
movsl
jecxz
dec
cmp
sub
and
sbb
push
cmc
aas
push
or
or
orb
rcrb
mov
orb
xor
das
jp
cltd
xchg
push
adc
sbb
cmp
cmp
loope
or
push
add
xchg
xor
xor
stc
dec
sub
gs
xor
je
mov
ds
add
popf
fsub
les
mov
mov
mov
test
movsb
mov
fstpl
pop
lock
outsl
clc
popa
int3
dec
outsl
jl
loop
lcall
add
push
nop
ds
mov
mov
inc
sbb
mov
cmpb
mov
test
leave
mov
cmp
lret
jne
mov
inc
pop
mov
dec
xchg
mov
lret
leave
xor
out
fs
rclb
or
icebp
cltd
adc
adc
mov
jle
sub
jo
jns
rcll
push
fldenv
js
or
xchg
movsb
push
in
pop
aas
and
inc
insl
push
mov
icebp
adc
sub
push
fcmovnb
lret
ret
inc
lcall
loopne
addr16
aam
neg
int3
jge
xor
mov
inc
jno
mov
bound
ja
repnz
mov
pop
mov
arpl
pop
dec
std
pop
test
and
repnz
arpl
pop
arpl
je
hlt
jl
and
movsb
into
mov
pop
loope
and
imul
loop
lahf
jl
aaa
jne
xor
sahf
jne
call
aas
dec
pop
push
in
cmpsl
jle
dec
fistl
test
std
mov
jb
shl
push
xor
pop
pop
scas
push
in
or
cmp
movsb
mov
sbb
cmp
pop
xchg
mov
mov
or
lret
adc
mov
or
sub
adc
fildll
pop
shlb
adc
adc
xor
enter
mov
mov
out
push
sbb
imul
push
xchg
sbb
inc
mov
or
mov
adc
prefetchnta
mov
imul
add
aaa
mov
dec
and
cwtl
push
ret
subb
pop
sub
mov
loope
add
jmp
ss
inc
mov
daa
sub
mov
aas
mov
push
cmp
shll
cltd
cmp
cmp
pusha
movsb
gs
inc
mov
cmp
hlt
xchg
mov
push
adc
mov
lret
and
ret
mov
sub
mov
pop
push
jo
sub
and
inc
insb
xchg
xchg
das
sbb
jns
movsl
das
in
fwait
mov
mov
mov
xorl
cmc
test
or
icebp
jl
je
pop
push
pop
inc
pop
mov
and
adc
add
js
stos
cmpsb
adc
fwait
push
and
shrb
ror
xchg
jbe
loop
xchg
sub
adc
ss
fcmovb
idivb
test
sub
inc
stos
mov
out
push
xchg
sub
push
ret
imul
or
lock
or
mov
xor
test
fstps
addl
arpl
es
dec
pop
repz
add
mov
push
adc
leave
fnclex
pop
test
sbb
outsl
test
jg
loope
stos
into
and
les
loope
and
test
push
sub
and
iret
lods
jp
lret
inc
call
cwtl
cs
sub
gs
adc
js
gs
bound
push
mov
jmp
add
cld
cltd
mov
mov
imulb
out
divb
les
sub
in
cwtl
sbb
lea
mov
xchg
mov
subb
pop
inc
bound
xor
in
jno
mov
test
cld
call
jmp
repz
pop
popa
insl
adc
push
xor
lahf
out
jnp
lock
in
sbb
cs
jg
jbe
loopne
shlb
push
cli
mov
and
inc
fists
pop
jle
popa
test
add
push
lea
les
enter
pop
mov
fldcw
pop
dec
loope
jp
test
sub
mov
cs
pop
call
sub
mov
jg
sub
jo
pop
sahf
cmp
and
in
xor
adc
mov
mov
pop
subl
into
loopne
nop
xchg
mov
rcrb
and
xor
mov
std
mov
mov
shlb
xchg
lret
cmpsb
jg
lods
push
fs
push
mov
stos
pop
cmpb
mov
push
add
sub
jae
cmp
jg
adc
dec
repnz
les
lret
sbb
lret
cmp
leave
icebp
pop
dec
lods
fneni(8087
clc
pop
daa
jmp
pop
hlt
sub
mov
dec
mov
push
push
cmpsl
int
inc
sti
js,pt
clc
mov
dec
and
xchg
icebp
add
push
pop
push
scas
nop
leave
add
sbb
sbb
pop
push
das
add
enter
sub
rcrl
sti
dec
roll
mov
fwait
xor
std
imul
outsb
jb
outsb
jg
dec
flds
pop
addr16
dec
flds
adc
adc
dec
sti
shll
jb
aad
sbb
js
sahf
or
pop
mov
pop
add
scas
mov
pop
jnp
fmuls
out
repnz
pop
push
enter
enter
fldenv
stos
xor
jo
ret
add
repz
lea
loopne
and
cmp
add
lea
jg
adc
cmp
daa
cmp
sbb
xchg
xor
das
inc
xor
jmp
mov
out
movsl
dec
repz
imul
repz
jb
and
stos
cmp
dec
sbb
pop
push
xchg
or
add
pop
xor
dec
negb
jmp
push
out
inc
test
data16
and
lock
xor
jle
bnd
test
movsb
mov
test
jmp
cs
mov
nop
push
push
int3
nop
jmp
and
xchg
imul
jle
jae
adc
jns
add
fsub
mov
daa
ljmp
cwtl
adc
pop
lods
and
in
push
test
push
dec
imul
adcb
mov
outsb
sub
outsl
jle
mov
mov
call
xchg
clc
sarb
dec
andb
hlt
dec
xor
pop
sti
push
xchg
outsb
or
scas
pop
pushf
and
enter
pop
les
push
mov
jmp
pop
push
imul
add
mov
jg
sbbb
cmp
sub
add
fdivp
arpl
mov
mov
out
dec
aad
clc
rorl
jnp
mov
fsubr
adc
lock
sti
movsb
mov
pushf
popf
imul
lock
push
aaa
jo
xchg
pop
rol
push
dec
dec
mov
shll
test
xchg
dec
mov
hlt
cltd
push
pop
jne
xchg
jo
scas
cltd
lcall
repz
dec
inc
jmp
lahf
fisttpl
addr16
or
addr16
es
and
cld
pop
jno
mov
lcall
push
lcall
pop
int
lods
js
out
fldt
call
out
sub
inc
test
mov
inc
pop
dec
insb
aam
push
loopne
jno
mov
rorb
jbe
inc
mov
aas
add
and
ja
mov
bound
add
inc
aaa
and
xchg
add
call
inc
inc
lods
cmp
xchg
jmp
pop
mov
arpl
jbe
mov
add
out
cmp
adc
lods
push
mov
sar
pusha
mov
add
lock
xor
pop
cmp
mov
jg
adc
jp
jb
int
mov
mull
cmp
addr16
cli
push
xchg
xchg
mov
ja
xor
xchg
add
out
add
push
add
inc
pushf
lcall
push
jmp
or
out
aaa
xchg
mov
loopne
fldt
loop
jp
jno
mov
or
mov
scas
mov
or
into
xor
loop
je
arpl
je
mov
mov
aad
xlat
mov
test
mov
ror
scas
or
add
cmp
push
xchg
or
adc
or
int
cs
sbb
sbb
cmp
mov
lcall
mov
jecxz
pop
ja
loop
sti
rcr
add
movsb
adc
mov
ss
mov
mov
shlb
sub
int3
jg
mov
lods
or
xor
cltd
jb
rcl
addb
pop
addr16
sbbl
sbb
pop
getsec
sbb
add
adc
inc
shr
rcll
mov
into
vpmacsdqh
xchg
ficoms
fsubrs
push
xor
out
dec
xchg
int3
fisubs
mov
pushf
in
bound
inc
and
test
iret
ret
jns
pop
sti
jle
sbb
test
aad
xchg
dec
aad
pop
lea
adcb
out
mov
mov
es
rcr
adcl
in
mov
adc
mov
lods
scas
shlb
xchg
sbb
mov
adc
pushf
xor
out
inc
and
adc
cli
mov
pop
movsb
cltd
mov
shrl
pop
pop
pop
jecxz
xchg
cmpsb
push
xchg
sti
das
insb
push
dec
xor
rclb
addr16
push
sbb
cmp
sub
movsl
dec
add
iret
mov
mov
jbe
in
adc
pop
mov
lret
test
lahf
nop
test
in
mov
or
js
adc
mov
inc
push
fwait
dec
sub
add
nop
outsb
outsb
inc
sti
dec
jb
cmpsb
pop
aas
mov
xchg
and
scas
dec
adc
out
jnp
call
dec
outsb
mov
or
loope
cs
cmp
test
push
ja
mov
test
stc
frstor
push
imul
loopne
jbe
imul
add
push
loope
ljmp
shl
aad
icebp
daa
xlat
lods
xchg
inc
sbb
sti
jno
mov
xor
and
and
cmpsb
adc
sub
sub
mov
ret
push
lahf
xchg
jecxz
add
adc
ljmp
stos
xlat
xchg
inc
fdivl
cwtl
cltd
test
scas
lahf
sbb
push
xchg
nop
loope
mov
cmp
test
jne
adc
shrl
pusha
pop
aad
sbb
sarl
lods
push
fcoms
mov
dec
hlt
cmp
and
lret
pushf
pop
xchg
cwtl
dec
sub
les
add
ljmp
mov
icebp
dec
adc
and
test
mov
aaa
xchg
mov
imulb
daa
dec
loopne
cmp
inc
jb
notl
or
mov
jle
add
aas
js
fistpl
loopne
dec
push
sub
or
lea
insl
cmp
lret
cs
jl
mov
jmp
frstor
int3
dec
mov
lcall
aad
outsb
mov
jnp
stos
or
outsl
imul
mov
cltd
push
cld
in
out
popf
fcmovb
push
dec
cs
push
jbe
insl
mov
cmp
les
xchg
pusha
xchg
cmp
ret
test
mov
dec
pop
dec
out
mov
add
xor
sbb
push
jle
fsubs
out
clc
out
enter
aaa
gs
add
jg
jb
sbb
fistps
xor
xchg
pop
mov
adc
nop
in
sub
mov
xchg
iret
decb
and
iret
mov
push
dec
js
imul
push
lock
push
add
test
dec
subb
ljmp
shlb
xchg
repnz
inc
das
jp
pop
mov
xchg
fs
sub
cmc
and
and
and
shrb
and
sub
test
dec
push
mov
mulb
sahf
and
push
gs
lret
popa
mov
outsb
movsl
mov
test
addr16
fsubp
push
sahf
or
jp
and
ja
push
outsl
mov
popa
mov
inc
testb
das
stc
cmp
adc
aam
call
xor
and
sub
push
dec
in
imul
imul
mov
and
cltd
pop
mov
test
xlat
roll
loopne
jbe
sbb
sub
push
push
pop
cmpsl
jnp
and
ret
pushf
xor
mov
out
insb
lea
stos
inc
sbb
shll
fbstp
fdivl
insb
cmp
into
inc
push
cmc
in
inc
iret
pop
cmp
inc
xor
xchg
out
cmc
jmp
arpl
sub
mov
enter
lahf
mov
outsl
addr16
cmp
cmpsb
lahf
xor
or
inc
sahf
mov
xchg
xor
mov
lods
mov
pop
sub
test
mov
push
mov
popf
imul
into
es
xor
xor
xchg
rcrb
jno
pop
mov
das
popa
sub
push
fs
sub
rorb
cmpsl
sub
call
mov
add
out
lret
cmp
mov
inc
mov
jl
xor
inc
sub
or
hlt
hlt
xlat
mov
jbe
stos
xor
aas
sub
jns
xchg
ud2
xchg
inc
pushf
mov
xchg
pop
push
scas
push
inc
aam
or
iret
mov
xchg
mov
stc
js
or
push
add
lret
cwtl
inc
mov
leave
jo
cs
xor
mov
stc
mov
and
in
push
out
fidivl
mov
enter
mov
clc
hlt
pop
rorl
jno
jno
xchg
pop
dec
in
sarl
iret
lcall
test
test
xor
mov
repnz
fisubrl
and
pop
or
push
add
jmp
pop
cmp
mov
xor
sub
lds
lret
xor
outsl
fdivl
cmpsl
ret
sarb
xchg
add
notl
push
aam
cmp
les
movsl
xor
push
subb
push
mov
loopne
push
mov
and
arpl
mov
dec
cmp
stc
aas
pop
jae
in
adc
xchg
in
xchg
mov
or
jnp
sub
int
dec
pop
inc
mov
push
imul
faddl
inc
fwait
lcall
unpckhps
adc
xchg
lcall
scas
dec
mov
inc
inc
mov
xor
mov
cli
sbb
mov
push
jle
mov
js
or
xor
xor
hlt
cmp
push
and
or
loop
insb
loope
ja
mov
jmp
add
mov
push
outsl
loope
pop
mov
dec
cmp
cmc
xorb
xchg
mov
xchg
lods
into
mov
and
fidivrs
fcomip
popa
je
dec
aam
mov
jno
jmp
and
lahf
pop
lahf
inc
fdivl
stc
neg
push
and
and
push
xchg
jp
dec
xor
push
pop
add
dec
out
add
add
mov
repnz
jne
mov
adc
inc
mov
aad
add
pop
mov
add
bound
sub
cmp
inc
xchg
out
xchg
mov
lock
ror
imul
lahf
xorl
loop
test
jl
jne
lcall
sub
out
roll
inc
sbb
imul
mov
repz
popf
stos
js
add
mov
aad
and
sub
int3
adc
cltd
pop
mov
push
scas
pop
out
cmp
push
les
aam
das
imul
data16
add
adc
test
cmp
mov
inc
sbb
adc
stos
xlat
and
aam
in
lods
lods
repz
call
add
mov
les
push
jb
in
sub
adc
add
mov
push
or
inc
xchg
inc
mov
adc
add
push
or
xor
jns
adc
jg
cmc
lock
jp
pop
iret
xor
mov
cld
sub
pop
mov
dec
mov
int3
push
adc
into
in
xlat
inc
andl
cs
jge
dec
inc
cwtl
adc
mov
scas
lret
push
fwait
rorl
hlt
rclb
in
cmp
jbe
addb
shrb
cmpsb
inc
mov
lds
xchg
push
mov
test
dec
imul
dec
sti
add
cmp
mov
and
dec
pop
in
pop
ret
hlt
cmpsb
or
iret
outsl
out
sti
icebp
jnp
dec
push
sbb
dec
pop
dec
pop
frstor
cltd
lret
mov
lahf
pop
mov
lds
dec
sbb
shll
lret
mov
stc
jmp
in
in
inc
insl
adc
int
fwait
loope
mov
and
aad
add
jae
inc
pop
daa
test
adc
das
sarl
ds
mov
jno
fwait
loope
sbb
fs
shll
ret
add
sub
fistl
pop
mov
xor
cwtl
roll
cmp
popf
jle
mov
lea
sbb
je
data16
adc
lret
loop
loop
mov
insb
cmpsb
push
fnstcw
pop
adc
ja
and
add
jne
shlb
push
repz
adc
adc
adc
and
xchg
pop
hlt
cmpsb
fdivr
test
or
sti
push
les
lods
push
jns
add
pop
inc
pop
sahf
push
mov
xchg
popa
or
lock
out
adcl
imul
je
std
shr
cwtl
sub
loopew
leave
leave
sub
fldenv
outsb
mov
mov
cmc
dec
in
jo
repz
sti
mov
xlat
mov
out
cmpsb
push
sub
mov
out
or
jp
jge
jb
jbe
outsl
bound
sbb
setge
push
shl
movsb
xor
inc
repz
adc
mov
and
mov
inc
ds
fildll
sbb
ja
mov
xchg
sub
mov
iret
cwtl
xor
cmovno
sbb
jmp
aas
cli
les
in
nop
add
push
and
adc
hlt
daa
push
add
push
mov
std
xchg
cwtl
mov
lahf
arpl
push
enter
mov
ret
push
scas
xchg
je
or
jmp
testl
scas
push
imul
mov
xchg
out
mov
or
adc
sub
xchg
js
les
and
mov
xchg
mov
in
int
out
push
push
stos
movsb
outsl
add
imul
lock
insl
push
inc
and
outsl
fsubs
push
xchg
xor
add
cltd
in
hlt
pushf
mov
aas
jmp
adc
xchg
sub
xor
xor
test
xchg
mov
sbb
cmp
jp
pop
jae
enter
mov
sahf
cmp
out
outsl
outsb
inc
dec
sbb
inc
sub
and
xchg
jecxz
mov
call
gs
adc
sti
ss
stc
add
shlb
push
or
mov
hlt
std
popfw
pushw
inc
loopne
cs
and
shlb
repnz
push
dec
std
js
xor
aaa
jl
cmpsb
in
aam
in
or
jge
mov
adc
pop
fcmovbe
pop
xor
mov
xor
pusha
sbb
popa
aad
xchg
and
cs
mov
out
jbe
mov
xor
jecxz
xor
popf
dec
or
in
cld
mov
sbb
pop
jb
push
subl
stos
mov
pop
fsubr
ret
and
imul
push
ljmpw
hlt
adc
mov
nop
insb
in
add
lock
xchg
dec
ljmp
inc
jle
imul
stos
nop
mov
lds
cmp
or
cmpsl
out
popf
inc
adc
repnz
push
push
jo
mov
cmp
cld
mov
andb
inc
push
ljmp
jne
xlat
inc
sub
lcall
push
xor
mov
and
repz
jnp
cmp
jb
xchg
aam
push
adc
mov
push
add
mov
imul
test
jp
or
mov
dec
add
and
jle
rclb
loop
mov
xor
or
pop
jns
shr
hlt
xor
xor
add
mov
repz
in
or
jmp
pop
dec
and
in
mov
lret
and
push
icebp
jae
xchg
fstps
inc
pop
loopne
and
outsb
dec
dec
xor
dec
cs
dec
dec
lret
test
into
sbb
jb
dec
mov
sbb
pop
xchg
xchg
lret
xor
lret
push
and
add
mov
mov
xchg
fxam
push
aad
scas
out
lock
jmp
imul
jb
dec
inc
insl
popa
mov
imul
dec
mov
andb
pop
cmp
cmp
lods
es
push
jne
cmp
inc
jnp
outsl
movsb
or
mov
shlb
xchg
sub
sti
jecxz
xchg
adc
push
or
jecxz
and
push
repz
push
movsb
negb
lds
pop
inc
mov
or
lds
mov
inc
sbb
data16
dec
push
pop
dec
push
das
push
jne
insl
adc
sub
stos
dec
cmp
pop
lret
dec
cmp
cmpsl
pop
loop
and
insb
push
pusha
call
sub
mov
insb
leave
jecxz
fisttpl
xor
fmul
in
sub
nop
inc
pop
ficompl
out
mov
and
jae
pusha
fstl
fcomps
rorl
adc
ja
sub
aad
sub
out
or
cmc
sbb
cmp
or
sti
hlt
push
or
adc
cli
sahf
clc
sbb
jl
sbb
in
xchg
jecxz
and
cmp
stos
aad
movsl
push
mov
inc
sbb
xor
jl
testl
mov
mov
and
xor
sbb
scas
lds
push
dec
sub
pop
ds
bound
xchg
sub
sub
jno
jmp
cltd
cmp
dec
xchg
stos
jmp
ds
pop
sbb
jno
mov
dec
pop
jmp
mov
outsl
cmpsl
mov
mov
cmp
sub
int3
mov
arpl
rcl
mov
mov
lcall
or
sti
popa
jne
fidivs
popa
jmp
daa
fdivr
aas
jg
xor
out
cmpsl
movsl
dec
and
lcall
das
mov
sbb
ficoms
lds
pop
cmp
rep
xchg
frndint
pop
dec
xchg
inc
divl
and
jb
cmp
pop
idiv
pop
inc
mov
loope
mov
add
lock
lods
out
and
sbb
ja
repz
cmpsl
xchg
js
jns
dec
js
fldenv
adcb
jno
iret
xor
mov
ss
and
andb
dec
rcl
push
repnz
and
cltd
adc
mov
mov
incb
xor
adc
lcall
das
push
hlt
sti
loope
mov
mov
ficoms
mov
mov
insb
adc
cmp
add
xor
jl
xor
push
xor
or
lahf
xchg
nop
loop
pop
cwtl
pop
addb
add
mov
loopne
xchg
shr
out
cmp
inc
and
add
loope
imul
leave
mov
mov
pop
loope
out
ficoms
in
jle
jge
sub
bound
das
jmp
pop
mov
sub
loope
mov
dec
sub
add
xchg
shll
fwait
sbb
xor
jns
pushf
sbb
jl
in
daa
and
lds
je
bound
sti
pop
and
aam
data16
mov
fwait
jge
dec
stos
das
jns
dec
mov
push
sub
fstpl
mov
and
fbld
into
cmp
add
sbb
adc
adc
mov
xor
push
cs
cld
pop
shll
sub
aad
test
cli
and
ljmp
xchg
ret
arpl
jbe
imul
mov
sbb
int
cmp
bound
ljmp
inc
movsl
scas
cmp
lds
sub
imul
sar
rcr
push
dec
repnz
dec
push
data16
rcll
mov
add
lret
cmc
xchg
dec
mov
mov
ljmp
and
dec
cmp
adc
in
jb
xchg
cmpsb
and
insb
xchg
sahf
xchg
xor
std
xor
mov
or
lret
clc
jl
mov
mov
je
cmp
mov
or
dec
loop
pop
ljmp
movsb
and
cld
xchg
ljmp
sub
jecxz
sub
shll
cmp
insl
clc
les
mov
int
cs
push
xor
xchg
ficomps
mov
cltd
dec
sub
stos
sbb
dec
inc
mov
mov
jge
dec
or
dec
jae
test
lea
cli
imul
sub
inc
popf
test
mov
dec
sub
out
add
shrb
leave
add
and
sbb
xor
sarb
cmp
clc
loopne
ret
adc
fidivs
mov
loope
pushf
pop
rcr
sbbl
repnz
iret
std
mov
mov
push
lahf
insb
insl
sub
and
mov
jns
and
sub
or
stc
das
push
and
daa
cmc
jnp
rclb
dec
sbb
push
push
push
mov
out
push
push
jbe
pop
out
inc
mov
xor
adc
push
cmp
test
or
push
cmpsl
sbb
cltd
push
push
mov
aam
pop
jp
scas
lret
inc
or
inc
jns
dec
in
cmpsb
repz
mov
lret
aam
inc
sub
fcoml
test
mov
aas
stc
pop
cld
out
inc
in
mov
ja
sbb
mov
inc
pop
mov
outsl
dec
cmpsb
mov
pop
popf
mov
jne
hlt
or
xor
dec
jmp
sahf
push
dec
and
sbb
inc
inc
and
js
mov
les
int3
jbe
push
nop
mov
push
pop
das
jae
aad
out
lods
ret
mov
movsl
push
testl
imul
icebp
mov
adc
out
jmp
sahf
jne
ja
ds
mov
out
push
ficomps
fwait
inc
mov
loope
inc
imul
in
mov
cmp
cmp
sbb
adc
out
loopne
pop
ficomps
dec
add
insl
mov
xchg
jbe
repnz
lret
imul
jmp
loope
and
mov
fs
sbb
loop
xchg
push
adc
pop
mov
pop
in
les
xchg
xchg
or
inc
pop
or
imul
aas
jo
lods
cwtl
or
xor
mov
fwait
sbb
xor
or
orl
cvtps2pd
das
scas
dec
and
ss
mov
cltd
adc
and
cld
xor
aad
or
arpl
pop
lcall
and
jg
or
test
imull
sti
out
dec
and
lock
sbb
pop
mov
sub
mov
ret
movsl
mov
cmpsl
cld
out
fildl
stos
xor
andb
ret
es
add
xor
or
mov
mov
sub
mov
xlat
cwtl
or
ja
xorl
ljmp
adc
imul
xor
mulb
add
xchg
sbb
jecxz
push
gs
and
adc
insl
std
jle
xor
ret
pop
cmp
cmp
enter
in
fdivl
jl
stos
cmpsb
mov
xor
mov
push
lcall
test
aad
adc
add
adcl
loop
inc
mov
je
ss
outsb
das
mov
adc
and
jg
pop
out
inc
incb
roll
inc
xor
pop
arpl
and
push
add
xor
xlat
dec
cld
dec
mov
sti
iret
movb
nop
mov
push
fnstenv
int
pop
jns
jae
ja
in
cmp
push
or
jp
and
ret
adc
stos
ja
incl
or
adc
ds
rcl
cmp
push
mov
or
xchg
in
shl
dec
push
dec
cmp
sbb
cmpsb
out
cmpsb
cli
test
pop
add
jns
dec
inc
inc
subl
push
mov
cli
cmp
sub
xor
or
dec
jae
cmpsl
dec
shll
sbb
iret
mov
js
mov
mov
cmpsl
mov
out
pop
and
jp
jae
or
sub
push
shll
jbe
pop
jp
setae
jl
stc
mov
das
cmc
sbb
push
add
inc
sbb
and
popf
out
int3
jb
in
ret
das
stos
mov
decb
and
cwtl
push
fidivs
pop
fisubl
xor
lods
test
cmp
push
out
cmp
fwait
pop
or
cmp
scas
rol
clc
lret
or
cmc
ljmp
out
dec
dec
xor
adc
scas
out
dec
call
lock
es
arpl
xchg
rcl
xchg
pop
std
flds
bswap
into
xor
daa
fsts
mov
jns
mov
jge
mov
mov
cmc
cmc
icebp
cmc
addr16
mov
rclb
bound
mov
mov
rcr
rclb
stc
xchg
int
hlt
insb
fmull
lea
mov
nop
xchg
aaa
mov
add
stos
loopne
int3
js
xchg
mov
es
inc
inc
inc
dec
pop
xchg
dec
daa
cmp
cs
adc
inc
push
jle
and
arpl
fldcw
push
aad
movb
fistpl
fbld
adcl
idivl
addr16
or
or
fidivs
fstl
sbb
stc
fs
jb
int
mov
outsb
inc
scas
pop
stos
shl
sub
or
cmp
cmc
or
mov
rcrl
nop
loopne
test
sub
dec
pop
or
mov
imul
and
push
lcall
cmc
or
shld
popa
je
cmc
mov
fstpt
cltd
push
jecxz
pop
mov
adc
daa
dec
jg
cmp
cld
dec
aas
hlt
gs
inc
mov
in
js
cmp
xchg
test
mov
mov
dec
loope
jnp
xchg
cmp
xchg
outsb
mov
adc
repnz
mov
cmp
cmp
adc
mov
xchg
or
or
cmp
xor
and
or
cmp
jb
push
aad
mov
mov
insl
fldt
int3
hlt
ds
imul
outsl
lret
push
in
fdivl
pop
out
jae
cld
scas
sti
das
and
sar
loop
movsb
push
or
cs
jmp
ss
jmp
loopne
push
addb
pop
mov
mov
stos
inc
in
mov
popa
in
daa
adc
movl
outsb
data16
adc
fs
push
addr16
loope,pt
push
ds
popa
dec
jbe
mov
sbb
jbe
movsb
adc
roll
divl
mov
pushf
ss
out
loopne
adc
jo
add
push
pop
leave
sbb
adc
andl
xorb
ss
fs
inc
je
loope
in
cmp
inc
mov
js
fwait
std
jp
sbb
sub
add
cmpsl
jno
lea
xor
insb
xor
leave
mov
push
std
fwait
fmulp
and
dec
add
cmc
test
add
mov
mov
out
mov
add
push
cmp
das
lds
pop
or
mov
dec
push
and
jb
cltd
scas
int3
and
push
mov
pop
fimuls
jg
push
adc
or
xor
xor
pop
popa
mov
mov
cmpsb
fdivs
sahf
jl
popf
outsb
scas
or
pop
xadd
int3
fsubl
add
mov
test
notl
xchg
repnz
xchg
out
lock
jae
lahf
in
cwtl
es
cwtl
rcr
xchg
sti
out
fwait
jno
loop
mov
xchg
mov
xor
pop
cmpsb
inc
icebp
fisttpll
bound
pop
jmp
fmull
sub
pop
inc
xchg
inc
xchg
movsl
add
in
and
sti
clc
enter
rcr
sub
or
add
push
sbb
enter
sti
add
xchg
addl
icebp
ljmp
loope
movsl
xchg
cmpsl
adc
or
in
pop
sbb
push
pop
flds
adc
dec
mov
pop
inc
adc
loopne
mov
jg
into
xor
xchg
shll
popl
pop
cmp
punpcklbw
les
and
out
enter
mov
inc
inc
in
scas
sbb
fsubs
inc
lods
push
insb
jns
dec
cmp
rcr
cwtl
mov
adc
push
bound
jecxz
cmpsb
cwtl
push
mov
push
sarl
popf
xchg
jle
push
xchg
sub
pushf
push
or
mov
aaa
sub
insl
mov
sbb
pushf
fdivl
sbb
lods
in
cmp
lcall
popf
loopne
data16
jb
xchg
int3
dec
popf
pop
rcr
pushf
sbb
mov
fninit
push
hlt
out
lds
adc
ds
or
test
xor
push
or
out
xlat
mov
xchg
je
xchg
mov
ljmp
jb
mov
mov
lods
push
insb
push
das
or
push
hlt
add
outsl
shlb
cmp
aaa
in
sub
xor
xor
cmp
add
or
xchg
mov
mov
jecxz
mov
jne
lret
xor
insl
outsl
ret
xchg
add
mov
push
cmp
mov
push
mov
les
addr16
mov
xlat
insb
jae
jle
in
stc
jg
pop
mov
pop
fildll
adc
xor
adc
xor
push
mov
inc
and
add
pop
pop
lods
int
mov
sub
out
enter
das
adc
lods
lahf
scas
push
push
in
mov
popf
and
cmp
xorb
cld
sbb
adc
test
jmp
into
sti
inc
jecxz
cs
pop
cmp
hlt
hlt
lcall
pop
xchg
push
popa
fisubrs
mov
lods
sbb
stos
rcll
out
aas
lret
fadds
push
daa
mov
or
stos
cmp
icebp
gs
mov
jns
neg
clc
test
mov
jmp
adc
nop
push
xchg
add
mov
cmp
cmp
xor
int3
sub
fnstenv
sub
fistpll
fstpt
in
mov
jae
movsl
mov
in
bound
push
adc
insb
lcall
mov
out
pop
add
jno
or
add
jb
mov
test
daa
mov
mov
xchg
dec
xor
pop
jmp
and
outsl
and
push
outsl
push
xor
test
mov
lahf
adc
mov
mov
cmc
fwait
mov
push
jne
int3
js
adc
mov
xchg
jmp
mov
sbb
rorl
iret
xorb
int3
in
or
jnp
cmpsb
jb
xchg
ret
inc
inc
push
loop
fsubs
imul
testl
mov
addr16
jmp
xchg
add
jbe
out
enter
fildl
adc
scas
call
pushf
dec
pop
mov
outsb
push
cmp
fnstenv
jle
push
std
cmovbe
inc
mull
xchg
rorb
icebp
call
les
fidivl
and
fnstcw
lcall
and
addl
in
lret
pop
sbb
dec
rolb
std
jnp
ficomps
aaa
fidivl
out
mov
inc
cmp
rol
push
negb
adc
jecxz
data16
rol
je
xor
mov
ja
jae
addr16
test
mov
outsl
mov
enter
lods
lds
stos
pop
in
out
and
or
lcall
loope
mov
pop
call
add
idivb
push
scas
mov
or
dec
cmp
push
dec
sbb
pop
cmpsb
js
mov
add
pop
addr16
mov
loope
sti
aad
xchg
sub
insb
enter
pushf
fwait
dec
sahf
xchg
pop
cld
jecxz
faddl
push
ss
sbb
push
cld
notb
jns
sbb
js
push
ljmp
aas
dec
xchg
sbbl
into
push
add
fistpll
dec
lcall
int3
xchg
insl
sub
bound
lret
mov
and
cmpsl
add
pop
xchg
imul
pop
lcall
xor
add
pop
sbb
mov
and
enter
add
mov
imul
das
in
insb
push
call
dec
adc
pusha
loop
movsl
inc
or
bnd
rorb
movsl
popf
mov
cmp
in
cmp
stos
adc
or
mov
add
pop
popf
sub
inc
ficoms
sub
das
pusha
and
mov
push
inc
and
xor
cmp
outsl
and
xlat
in
test
aas
or
jp
bound
xchg
fidivs
push
sti
imul
nop
movsl
mov
mov
hlt
out
mov
xchg
lret
jp
das
pop
add
scas
pop
pusha
sub
clc
add
add
pop
add
hlt
icebp
sub
xchg
in
inc
data16
pusha
inc
in
jo
sahf
test
mov
in
jno
or
imul
cltd
mov
push
jecxz
jle
lret
cmp
mov
dec
fdivrl
test
std
rorb
popf
ljmp
cmp
sbb
pop
xchg
push
cltd
adc
ret
ret
lods
jecxz
and
enter
nop
movsb
xchg
test
cwtl
add
cld
addr16
jno
fld
xchg
inc
addl
ret
dec
xchg
in
in
adc
or
sarl
inc
nop
out
ja
stos
xchg
test
fs
jp
xchg
js
cmp
adc
and
and
sub
inc
add
or
pop
inc
bound
xor
lcall
xor
mov
adc
push
pop
xor
add
cmpsb
pusha
outsb
leave
imul
mov
mov
ljmp
fmulp
xchg
sub
cwtl
icebp
push
fsub
repz
dec
sub
nop
jg
jnp
out
pop
xchg
in
and
popa
sbb
xorl
push
jp
mov
or
pop
lds
js
mov
fwait
xor
jns
mov
lods
mov
cmp
scas
data16
mov
idiv
pop
int3
push
sbb
hlt
xlat
fimull
and
push
stos
adc
dec
add
push
shlb
pop
pop
or
jge
lods
cld
mov
sbb
inc
xchg
lahf
in
xchg
lods
add
fbstp
roll
xor
xlat
sti
sub
or
mov
jne
add
pushf
pusha
mov
int
mov
cmp
fistl
std
ja
mov
leave
xorps
cmpsb
iret
sub
ja
xor
pop
rorl
mov
mov
test
and
jae
sub
icebp
loop
cmp
and
push
jo
mov
andb
test
adc
pop
xor
int3
xchg
js
in
movsb
xor
jp
dec
shrb
das
mov
add
test
pop
test
adc
lock
cmp
pop
js
out
in
stc
fbstp
das
ljmp
mov
cmp
arpl
adc
xchg
push
sbb
pop
or
cmp
inc
rcr
popf
adc
mov
sub
js
gs
push
jae
ss
lahf
testb
and
dec
and
ret
addl
adc
mov
pop
scas
mov
loopne
cmp
mov
jb
push
mov
aaa
or
ret
rcl
lahf
cmp
xchg
sub
iret
je
push
jl
xor
into
mov
sbb
outsb
jmp
rcr
mov
outsb
out
gs
dec
pop
adc
lock
add
inc
inc
divb
sbb
or
add
or
rcrb
adc
push
pop
or
cmp
add
inc
dec
mov
negb
mov
in
stos
sub
or
add
and
call
push
add
cwtl
popw
push
popa
push
loopne
js
pop
and
scas
mov
mov
jg
mov
or
and
je
jcxz
mov
and
dec
mov
pop
xor
xor
imul
ss
add
pop
mov
cmc
rorl
inc
sbb
pop
mov
ficomps
sahf
cmp
dec
pop
adc
mov
push
decl
xchg
scas
sub
and
and
cwtl
fsts
std
pop
inc
icebp
push
and
rclb
icebp
pop
imul
pop
adc
mov
sub
data16
out
fisubrs
jp
push
and
sbb
and
adc
mov
xor
je
enter
arpl
mov
mov
popa
js
lcall
test
mov
sbb
hlt
mov
push
int
cli
lcall
mov
xchg
push
data16
lcall
ficoms
xor
mov
inc
inc
xor
mov
pop
sub
mov
jo
ret
mov
cld
rcll
out
mov
mov
add
mov
sub
pop
push
aad
clc
adc
and
mov
mov
jo
push
shll
sbb
movsl
test
cmpsl
mov
in
and
cld
cs
stos
jg
jno
aas
jmp
mov
mov
xchg
lret
add
lds
jae
call
dec
add
sbb
iret
popf
in
sub
jns
jne
mov
rcl
mov
das
movntq
out
in
jecxz
push
mov
test
ljmp
push
cmp
movsl
ret
cmp
jnp
or
les
aas
and
mov
mov
enter
and
repnz
dec
xor
lds
add
and
mov
inc
dec
push
push
mov
lock
pop
in
jle
cmpsl
push
push
jnp
les
rolb
jl
push
dec
mov
cld
rorl
adc
add
sarb
js
mov
cmc
adc
sahf
or
fbstp
ds
or
outsb
dec
lods
shrb
pop
pop
popa
push
push
add
ret
stc
jge
scas
add
and
sti
repnz
mov
in
xchg
mov
inc
je
mov
push
xchg
ljmp
add
or
rorb
xchg
out
outsl
cwtl
out
sbb
hlt
xor
cmp
sahf
push
repnz
or
pop
add
adc
filds
mov
xorb
out
cmp
push
dec
jecxz
inc
add
xchg
imul
and
rol
and
pop
jne
push
xchg
cmp
inc
ret
jne
shr
xor
incb
out
in
jno
mov
test
shll
insb
mov
dec
lods
jmp
inc
repz
aam
repz
mov
and
into
mov
and
sbb
add
xor
faddl
mov
sub
add
sbb
cmc
dec
hlt
add
and
sub
mov
sbb
mov
jle
scas
js
sti
mov
outsl
xchg
xor
out
dec
loop
cmp
das
int3
xchg
jecxz
outsl
push
in
test
in
scas
adc
push
mov
inc
je
mov
cmp
call
repnz
cmp
adc
sub
test
jle
sub
outsb
cwtl
sbb
mov
out
fistpl
jmp
loop
sbb
or
mov
fwait
je
and
inc
stc
cmp
adc
mov
enter
push
mov
in
lods
push
mov
shlb
jg
dec
nop
dec
data16
cltd
mov
repz
jge
inc
jae
fcoml
lock
push
insl
data16
and
sub
pop
inc
xor
mov
jbe
jmp
movsl
fdivrs
mov
xchg
add
aad
fs
in
mov
pop
popf
dec
jle
add
or
add
fwait
push
mov
jge
insb
jge
lahf
or
pop
mov
jmp
xchg
nop
push
and
xchg
adc
jp
mov
sarl
xorl
loope
aas
insb
je
lret
test
lret
and
xlat
ja
nop
xor
icebp
cwtl
sub
xchg
xchg
cli
mov
lock
shll
ds
xchg
jp
mov
cmp
jecxz
orb
ds
and
xor
add
sti
subl
pop
xchg
add
jg
inc
inc
ret
mov
sub
push
lret
jge
lret
addr16
or
pop
in
test
shll
movsl
ret
lods
fstl
or
in
in
mov
pop
mov
sbb
jge
add
cmp
jmp
add
subl
cwtl
inc
inc
adc
inc
lea
jae
mov
add
enter
out
cmp
loopne
bound
xchg
and
ret
sbb
add
hlt
jbe
push
fwait
ss
add
mov
jne
push
pop
inc
hlt
mov
rolb
jge
xchg
cmpsb
mov
insb
ljmp
lahf
outsl
outsl
fwait
stc
shlb
insb
mov
mov
push
test
add
cmc
or
push
sub
loope
sub
dec
sbb
or
in
push
ljmp
ficoml
xlat
test
inc
mov
out
enter
add
movl
inc
lahf
xor
fidivrs
push
lods
addl
sar
sub
and
push
mov
or
xchg
out
cmp
xchg
daa
aas
negb
and
pop
sub
jmp
lret
push
leave
mov
frndint
lock
jne
addr16
pop
push
loope
pop
xchg
leave
cmove
inc
adc
pop
push
test
les
adc
jbe
mov
xlat
fbstp
int
mov
in
das
repz
sbb
pmaxsw
js
jae
sbb
sub
adc
iret
aaa
inc
add
mov
add
in
mov
push
sbb
rcrb
pushf
arpl
pop
es
jnp
repnz
adc
inc
fstl
int3
inc
lds
int
lds
jo
test
push
or
mov
ja
ss
mov
and
pop
leave
mulb
cmpsl
jbe
fisttpll
dec
loope
sbb
jns
lods
push
pop
call
or
test
sbb
loopne
xchg
jecxz
xor
std
sbb
mulb
es
adc
xchg
push
call
call
xor
and
dec
hlt
pop
xor
cwtl
and
roll
int3
lea
jl
out
pavgw
test
xor
mov
sub
dec
rcl
fiaddl
push
gs
addl
pop
and
push
mov
ret
adc
cld
addb
fldt
jo
jo
bswap
push
repz
jns
mov
mov
stc
bound
xchg
xor
inc
jg
out
dec
xor
out
inc
mov
out
sbb
cltd
orb
cs
dec
add
xor
mov
pop
mov
dec
clc
sbb
dec
adc
sbb
inc
jp
test
inc
in
dec
or
fistl
dec
pop
xchg
ret
mov
std
ljmp
xlat
and
fnsave
or
cmp
push
addr16
dec
sub
aaa
sbb
mov
scas
int
pop
pop
shrb
pusha
sbb
je
sub
or
push
rsqrtps
mov
insl
dec
jmp
xchg
cltd
jmp
jae
pushf
call
lds
sub
jo
inc
xchg
subl
ljmp
xchg
jne
cmp
add
sbb
mov
add
adc
in
mov
bound
enter
iret
inc
jo
mov
inc
jge
cmovs
ret
lods
mov
orb
or
xor
divb
in
or
pop
jnp
jo
daa
outsb
mov
andb
push
sar
lcall
push
loopne
lcall
mov
jge
dec
bound
pop
outsb
adc
repz
push
push
sub
sub
inc
xor
sahf
adc
mov
test
dec
xchg
cmp
push
test
jne
rorb
lods
xchg
dec
pop
ret
xchg
or
fwait
push
push
mov
enter
xlat
push
cmp
jno
inc
mov
test
jge
mov
jecxz
out
inc
call
xor
add
push
mov
mov
mov
and
movb
xor
cmp
lret
sbb
in
mov
movl
jae
cs
lock
mov
jge
lcall
xchg
dec
pop
subb
xchg
or
or
cmp
insb
test
lea
pop
mov
mov
loopne
xchg
dec
jnp
sub
shl
ss
inc
cmp
sub
xor
mov
in
mov
lods
sub
xor
xchg
cmp
push
add
push
adc
jecxz
dec
test
dec
mov
cld
arpl
push
xchg
or
stos
push
test
cltd
inc
loopne
adc
and
sti
outsb
mov
inc
add
je
fnstenv
les
in
rorl
pop
aaa
sub
jne
fadds
push
jl
mov
call
mov
pop
jne
fimuls
mov
stos
std
outsb
rorb
cltd
stc
xor
push
cmp
pop
cwtl
in
cs
adc
imul
std
imull
jg
sbb
imul
lcall
stos
addr16
out
pop
adc
out
popa
add
jbe
cmp
pop
and
lock
popa
lds
xchg
mov
dec
cwtl
mov
cmp
out
mov
and
or
repz
push
lds
jb
popa
call
loope
pop
cmpsl
push
push
imul
push
cmp
lcall
repz
jo
sub
fdivl
inc
lret
mov
cmpb
xchg
push
pop
push
das
ss
sub
imul
sbb
push
pusha
cmpsb
pop
xchg
lods
icebp
sub
xor
loope
negl
fsubrl
mov
nop
inc
cltd
mov
or
push
in
adc
aad
and
sub
mov
ljmp
jnp
lahf
aaa
and
hlt
and
shrl
int3
or
out
jae
pop
out
jno
jo
cmc
std
pop
xchg
cmp
das
lea
push
enter
jo
xor
std
mov
mov
test
cmp
loopne
clc
mov
jp
fmulp
or
imul
arpl
mov
mov
movsb
fsts
jns
and
lds
and
push
rcrb
inc
decl
pop
repz
mov
cmpsl
out
jae
xchg
insb
imul
mov
sub
mov
cmpsl
dec
add
dec
add
stc
andl
repnz
inc
push
cmp
pop
cmpsb
push
mov
pop
in
push
jle
in
jo
push
dec
lahf
sbb
pop
clc
syscall
mov
push
mov
pop
mov
mov
jp
lea
xchg
nop
filds
push
push
fildl
pushf
scas
stc
sub
cwtl
arpl
out
jbe
mov
das
sub
push
cmpsl
ret
adc
pop
insl
clc
nop
sub
insl
push
sub
and
fwait
xchg
vpcmpgtw
xchg
adc
movb
cmp
lea
sbb
and
js
and
sti
mov
mov
rclb
fbstp
add
push
cld
fsubrl
popa
popf
shl
ljmp
into
scas
fcmovnu
jp
pop
xchg
fnstsw
jo
cmp
fwait
push
fs
push
pop
mov
or
cmp
fimuls
test
shrl
mov
dec
mov
jnp
int3
xor
mov
arpl
push
jp
sub
push
cltd
loopne
pop
mov
and
addl
test
dec
andb
push
jp
mov
idivl
dec
push
push
mov
push
aas
pop
adc
bound
jle
sbb
imul
mov
sub
movsl
inc
dec
or
out
out
js
stos
inc
insb
mov
data16
inc
mov
xchg
add
mov
imul
shrl
jne
mov
fwait
jmp
xchg
or
imul
adc
js
mov
fstl
fsubrs
xchg
cmp
sub
leave
fidivl
cmc
hlt
push
inc
xor
mov
xchg
mov
jmp
push
imul
scas
insl
adc
cs
mov
sbb
jecxz
pop
int
push
lret
loopne
jg
adc
push
mov
test
popw
push
mov
mov
pop
dec
movsb
icebp
mov
xor
call
sub
sub
std
pop
dec
bound
movsb
add
lods
xor
jecxz
xor
xor
xlat
mov
outsb
jge
xor
in
dec
loop
cld
push
aas
mov
cmp
or
repz
daa
lahf
inc
mov
jp
inc
lahf
mov
and
xchg
ljmp
sbb
les
ret
cmp
push
aad
jp
push
insb
leave
loop
stc
ljmp
push
sbb
in
daa
cwtl
iret
dec
into
mov
xchg
rcrl
lret
fsubr
push
add
fisubrl
insb
and
cmc
les
xor
lret
scas
fsubl
xchg
jo
dec
lock
mov
dec
xchg
xchg
das
repnz
mov
mov
into
lods
inc
lock
bound
rcll
push
adc
push
adc
fcoml
or
daa
push
cwtl
push
and
push
sbb
jecxz
cmpl
mov
xlat
sbb
push
pop
cmc
and
aam
ss
mov
sbb
aaa
push
push
jg
pop
popa
dec
lret
out
lret
outsb
mov
xchg
and
fbld
mov
sbb
jnp
jnp
push
dec
enter
nop
out
push
fmuls
lret
push
cmc
xor
lods
xchg
mov
adc
addr16
xchg
mov
pop
dec
imulb
cmpsb
lds
dec
sub
or
sub
xor
stc
stc
push
push
cmp
nop
jecxz
sub
jnp
es
rcrl
fs
or
and
in
aam
out
mov
je
pop
xor
enter
aas
jge
jo
sbb
adc
mov
das
sub
adc
mov
aas
cmp
fisubrl
sub
pop
and
imull
add
add
outsl
mov
sbb
pop
neg
add
mov
pop
push
sarl
fiaddl
sub
inc
dec
mov
pop
pop
hlt
inc
add
mov
and
into
imul
fldenv
insl
mov
insl
mov
lds
lret
mov
inc
or
xchg
and
jg
ds
push
add
test
dec
fldt
dec
jle
or
push
add
cltd
frstor
xor
mov
or
ljmp
aad
data16
fs
mov
out
xchg
mov
loop
fldt
or
push
cs
mov
sbb
or
xchg
mov
xchg
lahf
or
cmp
dec
cmp
push
fwait
cli
subb
cwtl
dec
notl
rol
pop
jecxz
call
repnz
shrb
cmp
pop
pop
sbb
pop
filds
push
inc
or
std
mov
cmp
jnp
and
push
jle
xabort
dec
lock
das
cmc
lret
sub
adc
insb
or
das
stos
bnd
cwtl
in
int
lret
mov
andl
repz
imul
mov
pusha
divb
mov
ljmp
dec
imull
inc
stos
daa
push
sbb
cmp
call
ja
sahf
stc
js
arpl
push
and
jge
and
in
mov
jae
xor
mov
repz
xchg
xor
mov
pop
adc
mov
adc
sbb
or
fbld
jle
dec
mov
andb
ss
xchg
sub
iret
sub
jns
insl
xor
cmp
dec
jne
dec
aad
mov
fwait
sbb
fnstcw
push
idivb
jb
sub
mov
in
xchg
add
jo
mov
icebp
mov
sbb
pop
cli
inc
adc
imul
divps
inc
mov
rol
cwtl
sub
mov
fcmovnb
mov
mov
xlat
xor
mov
outsl
cmpsl
sub
add
data16
outsb
testb
and
and
dec
mov
mov
push
push
add
bound
ret
push
sbbl
in
in
ror
dec
stc
cmpsb
jno
sub
add
jg
repnz
push
inc
sahf
ljmp
int3
cltd
insb
test
out
ss
out
call
lret
test
adc
sub
iret
jle
push
pop
movsl
test
xchg
loopne
jmp
sbb
push
cmp
lock
mov
mov
cwtl
mov
or
mov
mov
rcr
clc
xchg
fiaddl
sbb
adc
push
mov
in
mov
negl
push
fs
arpl
iret
and
jo
shrl
hlt
out
dec
cmp
mov
pop
in
inc
cmp
shl
push
push
xor
pop
cmp
inc
jae
and
out
and
cmpsl
lock
pop
leave
push
popa
inc
xlat
arpl
mov
lds
dec
sub
push
out
mov
mov
into
fs
loopne
fs
arpl
add
decl
lods
mov
popa
sbbb
mov
test
and
lret
or
add
cmp
inc
jo
adc
pop
xlat
in
std
aas
pop
ss
hlt
sbb
xor
out
xor
out
ja
cli
lldt
or
xor
add
pop
sbb
inc
das
rcr
imul
shrl
test
mov
stos
ss
orb
sub
add
push
imul
fnstsw
insb
pop
out
cmp
popf
pop
xchg
mov
test
cmp
ds
call
jmp
mov
add
xor
clc
hlt
adc
jno
les
outsb
xor
sub
xchg
xchg
stc
in
clc
adc
out
cmp
push
cwtl
jo
inc
daa
and
ds
xchg
xchg
nop
xlat
pop
ja
xchg
jecxz
dec
and
mov
dec
xchg
jp
mov
imul
pop
mov
scas
fcmovne
js
nop
orb
xchg
iret
ss
stos
xor
xchg
sbb
ds
jae
imulb
or
cld
stc
inc
sub
push
test
dec
sbb
sti
stos
repnz
cs
lock
ficompl
push
test
jge
je
fidivrl
xor
sbb
pop
imul
or
fwait
add
shll
mov
dec
into
sbb
and
adc
cwtl
out
daa
add
add
push
cmp
inc
mov
cmp
push
lods
loopne
pop
mov
mov
pop
outsl
addr16
shll
jbe
dec
add
mov
das
push
fmulp
test
lahf
mov
jge
cli
nop
pop
pop
lcall
mov
or
inc
cmpsl
or
cmp
cmp
popf
js
jae
insl
sbb
xchg
jbe
mov
jmp
jl
dec
xchg
jns
dec
or
pop
std
loop
cmpsl
mov
push
int
aad
jb
dec
push
inc
sti
pusha
cmc
mov
mov
jns
in
dec
in
pop
xchg
or
dec
dec
pusha
cmp
leave
in
nop
jge
aad
movsb
sbb
jl
inc
inc
push
lds
jo
insb
divb
ja
inc
sarb
sahf
int3
mov
je
loop
mov
int
or
rcll
stos
imul
fisubl
xchg
repz
mov
push
out
and
nop
sbbl
inc
pusha
and
movsl
sbb
xlat
gs
mov
out
sbb
jle
jg
test
sub
testl
lods
xor
out
push
scas
and
mov
in
jecxz
sub
mov
mov
push
mov
outsl
out
sub
mov
out
aas
popa
aam
lds
mov
ds
mov
out
mov
mov
inc
das
adc
call
inc
push
out
jo
push
cld
inc
daa
test
iret
push
pop
clc
cwtl
or
adc
dec
dec
fdivrp
sub
data16
arpl
and
dec
shlb
or
fisubrs
push
xchg
xchg
pop
adc
mov
lahf
popa
pop
cltd
lahf
pop
pop
xchg
lcall
xchg
lock
int3
fisubl
mov
pusha
jecxz
push
ljmp
sbb
pop
adcl
js
ja
lods
fsubrs
shr
scas
jg
lcall
lds
jno
shl
js
call
adc
push
stc
mov
mov
scas
repz
and
cmp
xor
das
imul
fiadds
pop
cmp
sub
sbbl
ret
dec
outsb
aas
pushf
icebp
or
sbb
mov
sbb
out
push
push
lods
dec
and
pop
in
mov
orb
sub
out
jl
repz
ja
add
loopne
xor
mov
sbb
mov
fiaddl
shll
nop
mov
dec
jns
shl
adc
and
adc
pop
sar
mov
push
nop
jne
adc
cmp
je
jle
mov
stos
dec
pop
add
ror
and
scas
lods
icebp
dec
iret
scas
into
cmpsl
dec
adc
cmp
push
loope
andb
push
cmc
jae
mov
pop
and
addr16
xchg
daa
add
dec
repz
and
push
xor
jp
and
or
divl
orl
sub
movsl
mov
lods
push
repnz
xchg
pop
ret
sub
decb
mov
les
sub
cli
xor
dec
or
inc
fdivl
outsb
test
mov
fdivrl
notb
sbb
xchg
addr16
jno
stos
pop
ret
mov
mov
xchg
mov
fwait
mov
aas
sbb
loopne
mov
mov
pop
js
adc
jne
xor
out
push
pop
xor
cmpsb
mov
add
xchg
push
imul
xchg
jno
pop
fcmove
add
call
jae
push
ss
mov
mov
mov
jno
xor
jl
arpl
popa
pusha
fidivrl
dec
add
leave
push
cmp
cmp
in
mov
incl
mov
clc
mov
push
movsb
clc
ja
or
lcall
pop
dec
out
in
cs
adc
pop
sub
jae
lds
lds
lds
loope
mov
cmp
imul
pop
das
bound
mov
xchg
xor
cmp
or
jle
sbb
mov
push
and
mov
fsubrl
call
sbb
cmp
movsb
or
in
sub
out
lea
jecxz
or
xchg
dec
and
mov
pop
outsb
dec
pop
loopne
leave
out
push
mov
shrl
out
push
ret
loope
sti
popa
fcmovu
mov
pop
gs
sbb
dec
inc
ret
andb
xchg
into
inc
jb
adc
sbb
out
in
xchg
push
xor
rcl
cmp
das
out
pop
cmpsl
lods
lret
sub
adc
and
jbe
inc
mov
inc
mov
std
push
das
jb
cmpsl
mov
cltd
scas
mov
jg
rol
mov
sbb
clc
pop
jb
mov
xchg
dec
add
addr16
divl
jp
push
in
arpl
je
adc
jecxz
jge
and
dec
iret
popf
sbb
mov
dec
leave
jg
sub
lds
test
andb
inc
test
leave
mov
push
fstps
das
pop
dec
cmpsb
add
popf
mov
pop
pop
call
sti
xchg
shr
fsubrs
mov
pushl
and
mov
push
test
stc
repz
lock
rcr
les
mov
add
jmp
insb
push
loope
xchg
inc
pop
xor
mov
mov
mov
xchg
dec
lret
es
dec
loopne
jmp
sbb
and
inc
out
or
sub
jl
cli
xchg
int
fdivs
xor
scas
loop
or
data16
cmp
jnp
js
mov
add
pop
repz
dec
push
ret
mov
imul
pop
cs
push
adc
enter
jno
xchg
aad
inc
lods
fcmove
cmp
ror
incl
push
icebp
xchg
and
leave
cmp
aas
iret
pop
adc
sub
sub
int3
faddl
sub
push
stc
je
add
nop
xchg
adc
or
xchg
mov
and
pushf
pusha
mov
dec
inc
mov
sub
negb
mov
and
stos
ret
fsubp
sbb
mov
sbb
loopne
inc
stos
out
inc
xor
data16
aas
test
in
jns
sbb
in
push
in
pop
push
pushf
jne
scas
jg
pop
aaa
bndstx
jo
aad
pop
mov
insl
jg
dec
mov
pusha
pop
pop
cmpsb
mov
loop
push
ds
cmp
sub
aad
push
mov
or
je
cmpsl
cmp
lock
ret
mull
stc
pop
inc
adc
call
gs
loop
sti
xor
ss
repnz
cltd
insl
repnz
in
cmp
sub
xchg
and
mov
pop
inc
cmp
sbb
fsubrl
adc
cli
inc
pushf
mov
cmp
pusha
ds
data16
fisttps
rclb
xlat
test
sbb
int
fnsave
rcr
mov
mov
jo
es
shll
push
xor
arpl
daa
in
enter
mov
mov
and
fcoml
das
dec
das
jbe
clc
mov
jmp
add
arpl
in
iret
mov
jnp
pusha
mov
test
fisubrl
pop
daa
mov
sarb
dec
aam
movsl
pop
imul
xor
or
mov
sbb
ds
mov
mov
push
mov
jecxz
lret
mov
call
cmp
mov
add
test
jle
insb
pop
xchg
pop
xchg
fcmovbe
add
jb
push
pop
lret
push
mov
sub
push
je
out
enter
pop
xor
ret
icebp
out
pusha
ds
or
ja
add
adc
lahf
sarl
dec
lds
mov
jae
lock
and
add
mov
ja
psrad
daa
std
jno
in
xor
mov
xchg
jne
scas
jo
xor
lock
dec
orb
adc
lret
aas
push
sbb
add
popa
fcmove
mov
outsb
rcrl
push
loopne
inc
cmp
mov
sub
fidivl
xchg
jae
or
nop
jne
movsl
add
iret
mov
repz
push
sub
cmp
push
push
pop
scas
mov
mov
push
sub
inc
or
cwtl
mov
dec
dec
cld
sti
inc
les
mov
cwtl
sbb
mov
repnz
arpl
push
and
mov
xchg
mov
and
out
sbb
inc
push
hlt
dec
mov
pusha
sbb
jge
mov
scas
lahf
fstpl
test
jecxz
mov
push
lods
mov
sub
cmpsb
gs
pushf
sbb
test
loope
jns
cltd
sti
mov
push
or
adc
cmp
and
mov
lcall
iret
orl
movsb
scas
imul
shrl
dec
push
mov
repz
dec
js
adc
lret
adc
fadd
cmp
into
imul
or
lcall
push
mov
int3
loop
jo
lods
xchg
cmp
outsb
jns
xchg
or
out
cs
stc
lahf
loope
pop
sbbb
lds
int
add
xchg
je
aas
cmpsl
into
xchg
gs
loopne
fcoml
sub
pop
rorl
or
fcompl
sub
int
jae
leave
imul
icebp
mov
inc
jmp
sub
lock
and
lret
filds
ds
xchg
sub
lea
mov
cld
pop
push
rorl
add
push
and
out
cld
scas
sub
clc
sbb
xlat
xchg
add
sub
jge
dec
push
adc
insl
xlat
push
mov
adc
jnp
data16
mov
adc
or
jmp
dec
shrl
and
mov
cmpsl
cmp
imul
sti
imul
loope
push
repnz
ficomps
jge
xchg
xchg
mov
sub
xchg
out
imul
mov
adc
adc
loope
jo
cmp
push
and
add
lock
rcr
jmp
push
push
daa
dec
adc
xchg
flds
jg
loope
sbb
addr16
aad
adc
cmp
mov
lds
aaa
loope
inc
rcrl
test
adc
into
jbe
in
in
dec
xchg
nop
or
mov
add
mov
bound
cmp
jno
into
cmpsl
pop
call
les
es
xlat
jne
in
lds
test
or
lcall
sub
ds
add
cmp
loopne
sbbl
cwtl
arpl
add
and
dec
ja
test
or
push
imul
adc
cld
sbb
cmp
cmpsl
test
inc
cmpsl
and
cmp
or
add
jge
sub
sbb
movsb
andl
ret
or
cli
inc
and
push
mov
inc
mov
xchg
push
loopne
mov
lds
out
lret
shrl
xchg
jp
fdivrs
rolb
fldenv
data16
mov
mov
and
sbb
pop
out
rorb
pop
ret
ja
dec
mov
cmpsb
cmc
daa
adc
xor
fwait
lea
cwtl
xchg
mov
mov
xor
es
xchg
jl
jp
mov
std
addr16
jp
and
loope
and
cwtl
adc
popa
push
mov
sub
inc
pushl
xchg
lcall
movsb
sub
mov
ds
xor
fs
push
cmpsb
add
lahf
dec
adcb
leave
test
and
movsl
mov
jbe
mov
push
pop
add
cmp
xchg
fnstenv
lret
sub
fldt
out
in
rcrl
xlat
mov
sbb
jecxz
out
fincstp
mov
fisttpll
lahf
mov
dec
mov
inc
fdivrs
sbb
or
xor
icebp
mov
out
pop
sub
stos
cmp
or
jo
pop
mov
mov
shrl
push
shr
cmpsb
dec
push
mov
mov
fstpt
repnz
test
add
cld
loope
iret
rcl
loop
ret
stc
loop
fldt
outsl
fwait
adc
xchg
movsl
mov
mov
sbb
scas
or
adc
daa
xchg
mov
arpl
out
mov
inc
adc
stos
mov
pop
shrb
stos
call
popf
repz
sub
test
lods
shrl
inc
push
xor
inc
andb
xor
inc
popf
push
dec
push
inc
hlt
fiadds
and
push
and
sub
std
mov
fistpll
push
fscale
cs
inc
test
clc
aaa
shrl
iret
push
loope
popa
and
jno
scas
dec
clc
push
mov
xchg
xor
inc
push
frstor
mov
into
jg
mov
imul
pop
jbe
or
cmp
dec
pop
call
ficoml
and
add
outsb
xor
or
in
repnz
int
xchg
mov
cwtl
fcoms
cmp
fmuls
cmpsl
dec
loopne
cmp
sub
mov
lcall
int
roll
push
cmp
scas
cld
push
fnsave
cmp
out
loop
outsb
xor
rcll
ficoms
or
or
pop
adc
jle
or
jb
ss
add
sub
cmp
push
sbb
add
dec
leave
mov
addr16
or
adcl
sub
stos
pop
xchg
adc
mov
adc
int
xchg
mov
popa
out
rcll
nop
adc
fstl
jnp
and
push
adc
add
mov
jl
or
and
movsb
pop
add
vpsllq
lret
repz
cwtl
ljmp
cld
aad
mov
mov
std
addb
add
xor
add
and
repz
sub
ja
insb
ljmp
xchg
out
icebp
out
lret
frstor
hlt
xchg
mov
lcall
int
sbb
add
cmp
pop
push
inc
daa
in
xchg
icebp
xor
nop
sbb
push
lahf
cmpsl
js
aam
xchg
daa
in
pop
jns
pop
ljmp
loope
loope
sub
push
notb
and
add
add
daa
mov
xchg
ja
pop
stos
cwtl
add
mov
pop
sub
fdivs
mov
daa
stos
mov
cwtl
int3
jmp
push
shll
mov
pop
mov
push
xlat
mov
cwtl
std
sub
setg
test
jmp
lock
into
xlat
xchg
adc
pop
jae
scas
int
adc
lgs
test
js
popf
push
xchg
adc
mov
push
jge
xchg
adc
mov
cld
movsb
data16
push
mov
mov
bound
into
leave
jp
jnp
gs
adc
sti
stc
mov
in
iret
inc
lahf
cltd
movb
das
or
icebp
and
je
dec
hlt
in
jnp
xor
addr16
sbb
lds
ljmp
push
push
out
outsl
fs
pop
negb
dec
push
and
test
adc
add
sahf
rcr
mov
mov
lea
cmp
adc
xor
adc
xor
mov
xor
mov
mov
sbb
add
and
ja
mov
icebp
mov
fwait
int
and
jecxz
sbb
sbb
or
iret
hlt
add
mov
fadd
mov
add
inc
adc
pusha
push
sbb
out
and
fs
xchg
cmp
sti
rol
dec
dec
fdivs
mov
pop
out
adc
inc
dec
aaa
and
decb
push
repnz
or
pop
hlt
pop
jmp
xor
and
jl
fldenv
cmp
shrb
jmp
mov
mov
push
cli
adc
test
jnp
push
xchg
sti
aad
pop
lock
sub
xor
pshufw
popf
inc
push
ret
or
xchg
cmp
imul
mov
dec
xchg
xchg
call
movsb
adc
jne
add
xchg
inc
ret
and
imul
inc
dec
mov
cs
jbe
dec
ret
xchg
sub
adc
sub
lods
jge
sbb
jnp
jl
and
lret
shll
xor
arpl
mov
cvtdq2ps
pushf
scas
dec
testl
xchg
xchg
and
lcall
ja
clc
fwait
inc
mov
inc
cmp
divb
and
mov
push
sub
inc
out
lods
adc
sub
clc
sub
test
rorb
test
jp
or
pop
push
mov
scas
fs
std
loop
in
sbb
sbb
cmp
mov
mov
xor
addr16
aam
xor
jne
scas
mov
pop
mov
adc
shrl
out
add
push
loope
sub
sbb
pop
subb
add
mov
out
inc
mov
cmc
fs
dec
dec
mov
push
push
repnz
mov
mov
decl
dec
xchg
push
xchg
inc
ss
dec
orb
lret
aas
push
push
jne
xchg
sbb
pop
sub
sub
add
mov
push
gs
gs
pop
icebp
add
sub
xor
dec
insb
pop
mov
fwait
cmp
dec
int3
push
int3
jo
js
lods
cmp
movsl
clc
fcoml
mov
loop
cltd
mov
sbb
push
pop
fidivrl
or
outsl
mov
push
xor
mov
xchg
sub
pop
std
push
nop
shlb
cs
fcompp
test
mov
cmp
ret
jne
and
adc
or
gs
sbb
dec
mov
xor
pusha
clc
shrl
in
aas
js
mov
cltd
adc
ror
sub
dec
pushf
out
xchg
lea
sbb
and
push
cmp
or
pop
pop
mov
mov
insb
loope
dec
or
jnp
fdivrl
jecxz
cwtl
dec
ljmp
mov
clc
aad
gs
sub
push
ret
icebp
mov
ds
jno
nop
fs
mov
xchg
mov
fistpll
stos
mov
lahf
add
inc
mov
mov
jecxz
inc
jp
xor
and
imul
dec
fisttpl
adc
xchg
into
cmpsb
rorb
pop
addr16
mov
dec
sar
pop
fs
insb
shlb
xlat
or
popw
cltd
cwtl
pop
pop
or
ja
push
mov
sub
pop
cmp
sbb
add
cmp
jo
cmp
pop
lea
push
rcrb
add
jmp
mov
not
pop
or
mov
mov
jo
and
cwtl
sahf
jbe
rol
mov
push
cmpsl
pop
dec
add
mov
and
test
repz
pop
outsb
mov
ja
and
movl
push
sarl
in
mov
jmp
sbb
mov
jp
insb
push
leave
insb
mov
insl
cmpb
mov
aad
cmp
pop
ret
mov
xchg
decl
add
inc
jb
adc
loope
jb
push
mov
dec
xor
in
aam
scas
adc
mov
fisubrs
ljmp
mov
cld
xchg
test
push
jp
xchg
fwait
ret
shl
lcall
cwtl
mov
or
or
sbb
aam
and
into
push
push
or
icebp
imulb
outsl
jge
and
push
add
mov
inc
adc
xchg
pusha
fs
mov
xchg
outsl
mov
inc
pop
cltd
mov
imul
jg
sti
cld
mov
gs
jle
mov
bound
lock
adc
and
mov
and
mov
pop
sbb
xchg
mov
daa
or
neg
jg
mov
jne
adc
dec
xchg
out
pop
je
sbb
sbb
jns
insl
sub
xor
out
repz
leave
push
or
jmp
outsl
ret
mov
dec
test
ficoms
roll
mov
mov
add
push
sbb
push
fwait
sub
push
sbb
adc
iret
mov
jg
or
pop
cmp
push
mov
ss
lods
mov
inc
adc
xchg
insb
mov
adc
arpl
or
pop
xorl
push
std
in
push
xchg
fdivl
loope
test
jle
inc
mov
icebp
cld
adc
pop
lret
cmpsb
lcall
pop
cmp
inc
lret
or
mull
push
in
ljmp
repz
mov
push
mov
outsb
xchg
sbb
push
fnstsw
push
dec
mov
and
pop
popf
js
ror
rorb
xor
sbb
imul
sbb
hlt
inc
sar
int3
xchg
mov
lcall
popl
icebp
gs
loope
xchg
mov
mov
das
je
movsb
push
xlat
mov
mov
fnsave
imul
xlat
cs
mov
in
lock
pop
xchg
lds
xchg
es
and
dec
cmpsl
sbb
pop
push
dec
push
loop
push
mov
xor
je,pn
or
sarl
xchg
mov
xor
sbb
lods
push
xor
inc
jb
or
add
cmc
mov
dec
xchg
dec
adc
xor
cmpl
popa
call
xor
xor
daa
cmp
insl
dec
xchg
adc
test
ljmp
jl
imul
and
nop
xor
int
loopne
stos
xor
sti
mov
push
imul
cmp
xlat
into
dec
add
adc
xchg
pop
cld
sub
fwait
test
jg
push
mov
enter
jecxz
lret
lcall
leave
scas
imul
popf
xchg
jmp
sbb
push
fwait
js
or
mov
sbb
lcall
in
dec
cmpsw
mov
into
or
loopne
add
out
popf
pop
adc
dec
or
jne
cmc
popf
mov
frstor
jecxz
xchg
ret
pop
or
inc
push
or
enter
fidivrs
xlat
adc
jp
call
lods
pusha
mov
cmp
dec
sub
push
mov
imul
unpcklps
fstpt
push
inc
hlt
xor
adc
push
mov
fistpll
stc
push
notl
push
xor
popa
push
loopne
cwtl
dec
jp
cld
or
pop
mov
inc
dec
xchg
or
inc
fcompl
jg
and
xor
mov
arpl
mov
lahf
lock
xor
mov
loopne
and
jnp
or
add
mov
fisubs
inc
in
pusha
mov
sub
adc
int3
jl
mov
lods
xor
push
int3
shl
aam
inc
sub
out
testl
pusha
lahf
fwait
mov
add
das
push
lahf
inc
push
jnp
inc
es
or
push
jecxz
shlb
add
xchg
adc
enter
jl
loop
pusha
xchg
sbb
out
sub
cmp
push
nop
ret
jge
aam
insl
push
dec
jl
cld
mov
sbb
repnz
xchg
outsl
rolb
test
mov
cmp
sbb
imul
jnp
push
or
decl
pop
stc
dec
mov
mov
xchg
test
clc
or
les
mov
aaa
outsl
jle
sub
mov
cs
or
cmpsl
sbb
xor
fstpt
jl
push
cli
jns
push
shrl
add
mov
add
cltd
fwait
mov
mov
lods
xchg
jno
xor
mov
orl
sub
adcb
jmp
lea
add
push
sub
xlat
sub
add
cwtl
repz
mov
add
or
mov
into
cvtpi2ps
add
ds
mov
cli
add
pop
push
add
or
int3
arpl
cmp
xlat
lcall
sub
push
test
cmc
inc
adc
imul
inc
mov
ret
sub
out
dec
movsl
lret
inc
pop
clc
fsts
pusha
aas
sbb
ret
jge
mov
out
push
or
jb
dec
push
push
shll
pop
stc
mov
lret
int
sbb
aam
add
lahf
mov
jne
pop
push
pop
cli
shl
imul
or
dec
push
idivb
push
adc
jo
mov
mov
imul
mov
jle
mov
fwait
xor
loope
cwtl
lahf
dec
hlt
dec
sub
push
push
fdecstp
loopne
divl
inc
pop
mov
dec
sti
adc
aas
cmp
jbe
cmp
testb
push
cmpsl
sub
mov
imul
lahf
adc
jge
mov
mov
xor
add
aas
mov
in
jecxz
pushf
out
idivb
lods
cmp
pop
out
push
cmp
cmp
sbb
imul
inc
movsb
xor
adc
sub
movsb
repz
fcomp
add
in
xchg
mov
fstl
dec
pop
push
add
insl
jnp
cmp
dec
repnz
mov
arpl
xchg
sub
cmp
inc
stc
sbb
out
mov
in
xor
and
mov
lcall
jb
divl
mov
mov
adc
mov
push
xchg
xchg
popa
popa
sub
cmpsl
inc
int3
mov
cmpsl
out
sahf
push
sbb
mov
xlat
loop
push
sarb
or
lcall
shlb
dec
adc
call
pop
lret
xor
roll
pop
adc
test
in
insb
dec
jmp
dec
stos
mov
inc
movsl
cld
fidivrs
and
mov
inc
mov
clc
cld
or
lcall
sbb
mov
rcl
mov
dec
cwtl
pop
jecxz
andb
push
mov
lea
add
pushf
lret
xchg
rol
xor
xlat
fucomip
or
inc
inc
push
xor
mov
shrl
rcrl
push
or
mov
xor
sub
push
xlat
push
mov
xchg
inc
fidivrl
lret
movsb
dec
push
out
or
push
out
adc
mov
fnstenv
mov
cmp
outsb
mov
adc
push
or
daa
loopne
push
popf
jp
leave
std
xchg
iret
jo
mov
sbb
aad
adc
push
cmp
fnsave
xor
sub
mov
and
shl
enter
mov
ljmp
pop
lds
push
jb
insl
pop
shrl
leave
sub
pop
out
fcoms
push
adc
scas
test
idivb
repnz
les
in
adc
hlt
push
and
js
sti
nop
push
cmp
sti
mov
divl
aam
dec
cmp
push
pop
mov
fisubrs
mov
and
adc
pop
sub
adcl
fbld
push
dec
int3
adc
sahf
mov
adc
popa
sub
xchg
pop
sub
call
sub
sbb
cld
or
mov
xchg
inc
sub
jnp
movsb
mov
je
or
lcall
rorb
das
adc
push
stc
into
std
addr16
mov
je
add
adc
cmp
sbb
dec
jns
rcll
xchg
fistpll
jno
sub
inc
dec
push
ret
shrb
push
ja
mov
ficoms
mov
push
out
inc
sub
testb
sbb
sarl
enter
das
and
xor
out
pop
leave
add
dec
out
jg
pusha
pushf
lock
sbb
es
clc
js
mov
jmp
jmp
in
vpmaddwd
push
add
test
jmp
fsubl
rcrb
push
cmpsb
xor
fidivs
filds
sub
rclb
mov
mov
dec
mov
shrl
sbb
pop
dec
jle
adc
fs
add
jg
and
or
loopne
pop
push
pop
xorl
inc
sub
and
and
jae
cmpsb
inc
sbb
mov
loop
inc
xor
dec
and
sti
popf
mov
mov
insl
inc
aas
inc
cmc
dec
ret
jns
flds
sub
xchg
or
and
xor
sti
jne
pushf
xor
xlat
pop
inc
insl
or
inc
fdivrs
cltd
sub
rcrl
lahf
sbb
popa
xchg
int3
add
xor
sbb
ljmp
pushf
pop
push
mov
mov
stos
pop
lea
roll
fsts
and
ss
lahf
inc
mov
fidivrl
int3
pushf
int3
sub
and
shlb
sti
aaa
mov
insl
inc
insl
sub
std
and
cmp
pop
jg
aad
adc
rcrl
nop
test
mov
das
pop
fsub
ret
dec
mov
mov
cmp
mov
and
in
std
jecxz
push
push
stos
sub
loop
shlb
add
or
addr16
clc
ljmp
imul
loop
iret
mov
sub
jp
add
lcall
pop
cmp
nop
xor
push
outsl
sarb
mov
mov
and
insb
jecxz
dec
add
mov
or
push
out
imul
xlat
push
push
push
dec
mov
pop
push
sub
scas
push
dec
cmc
into
lods
inc
aaa
les
mov
aad
pushf
cmp
jp
jnp
das
jb
xor
pop
int
fisubl
rcr
pushf
fldcw
stos
mov
es
mov
mov
sbb
daa
test
fstps
mov
insb
sti
bound
mov
ljmp
addr16
mov
out
bound
aam
cmp
pop
xchg
jge
ficomps
das
fidivrl
lock
scas
mov
in
and
inc
cmp
mov
or
mov
jl
daa
mov
int
maxps
cmp
adc
inc
jns
sub
sti
push
aam
jo
cmpsl
adc
in
push
add
jmp
xchg
jl
imul
ficomps
mov
mov
sarb
add
mov
fwait
jle
add
or
imul
lcall
fcoml
or
mov
enter
pushf
add
jnp
insl
or
dec
or
or
xor
xor
adc
std
lods
popa
push
push
pop
cmp
jnp
cmp
or
std
cmpl
into
dec
push
scas
pop
add
aam
in
sbb
jne
les
dec
xchg
xchg
js
or
aas
fdivs
adc
adc
movsb
test
pop
pop
dec
inc
push
push
pop
xchg
inc
outsb
cmp
add
outsb
pop
int
and
lds
jg
mov
mull
cmp
aas
mov
mov
stc
xchg
xchg
mov
jmp
xlat
push
inc
or
mov
cmp
inc
inc
mov
inc
push
sarb
scas
popf
jno
push
inc
sbb
outsb
in
daa
arpl
jo
adc
mov
cmp
leave
sahf
aas
repnz
sub
xchg
adc
and
fwait
xor
cmp
add
cmp
lcall
sub
imul
or
jno
shll
xchg
sub
add
jne
jecxz
cmp
sub
dec
xor
cltd
xlat
add
lock
lock
cli
mov
push
jge
inc
daa
sbb
mov
repnz
dec
jl
in
fcmovnbe
cmpsb
fwait
xchg
enter
xchg
sbb
or
inc
into
aam
sub
aad
mov
add
fs
rolb
and
add
pushf
rsm
or
sbb
adc
cld
loope
data16
pop
loope
mov
jmp
pop
push
lret
cmp
mov
cmp
je
shlb
loopne
inc
lahf
push
push
and
lret
jo
xor
xor
xchg
sahf
aaa
pop
rcrb
cmpsl
lret
inc
inc
lock
jns
repz
xchg
jns
push
or
push
aad
jne
or
xor
ss
cmpsl
jmp
pop
ret
and
mov
xchg
dec
and
fwait
pop
or
adc
imull
pop
xchg
pop
jl
leave
add
mov
das
inc
or
cmpsb
out
or
leave
repnz
lcall
es
cmp
push
stos
mov
lods
cmp
iret
add
sahf
jne
xlat
xchg
popf
aad
aad
xor
lcall
arpl
orl
jg
add
cs
push
sbb
mov
cwtl
repnz
pop
shlb
loopne
adc
cmp
jmp
nop
pushl
jo
jl
inc
lods
dec
inc
dec
jl
test
xchg
or
hlt
outsl
repnz
add
pop
shrl
mov
add
xchg
pop
jmp
js
fwait
je
out
bound
push
pop
mov
mov
imul
cwtl
cltd
xchg
add
lret
jns
mov
repz
inc
lods
push
jle
loopne
mov
data16
cmp
mov
in
lods
sbb
lret
push
adc
jmp
or
cmp
leave
inc
shlb
xchg
rolb
sub
sti
test
imull
mov
pop
rcrb
cli
lahf
jl
pushf
nop
sub
test
adc
fldenv
fcmovne
into
arpl
nopl
es
or
pop
jo
xchg
mov
dec
repnz
out
loopne
cmpsl
xor
shrb
lea
shl
and
sahf
mov
cmc
es
mov
jne
cltd
lods
jno
in
sbb
inc
out
xchg
enter
test
sbb
cmp
mov
and
xchg
mov
repz
hlt
mov
outsb
sub
dec
mov
stos
xor
ljmp
dec
cltd
jmp
test
jae
frstor
lods
xchg
xchg
lods
in
push
dec
loope
jb
adc
fisubrl
iret
mov
inc
sub
sbb
sub
repnz
imul
lret
cli
push
imul
xchg
and
into
das
bound
and
ljmp
adc
inc
fbld
aam
mov
sti
or
sbb
inc
insl
push
mov
in
mov
or
imul
mov
outsb
and
xchg
xchg
fstpt
xchg
mov
add
fistps
icebp
ror
in
in
xorl
ret
sbb
popa
xchg
into
pop
lods
mov
lcall
leave
lcall
cmp
mov
stos
inc
pop
pop
xor
mov
rcl
xchg
push
xor
inc
jmp
pop
or
inc
in
inc
jge
call
aam
mov
jle
cmp
jp
mov
jno
lret
in
sar
mov
test
frstor
fsubl
push
fsts
les
shr
sbb
pop
xchg
sahf
out
lcall
dec
in
or
ret
inc
cmp
fistl
cmp
cmp
push
sub
and
sarb
jl
cmp
pop
add
jnp
push
mov
sbb
dec
xlat
mov
cmp
mov
pop
scas
push
ljmp
xor
xor
push
in
push
pop
inc
inc
pop
sbb
test
outsb
iret
push
test
push
push
movsb
xor
les
mov
loope
clc
or
mov
out
push
cmp
and
cmp
xchg
or
lret
mov
add
xor
or
jl
lods
push
jbe
add
loopne
sbb
pop
dec
jbe
sub
jecxz
out
dec
call
daa
mov
xorl
mov
pushf
cmp
mov
int
inc
cwtl
stos
int
outsl
dec
stos
jbe
ret
mull
xchg
jmp
lock
fcoms
in
stos
xchg
pop
pop
push
jge
fisubrs
add
sbb
rorl
mov
repnz
adc
mov
aad
test
in
inc
fwait
ret
in
cltd
or
int3
arpl
jp
sbb
das
insb
or
adc
mov
lods
cmp
xchg
mov
aaa
shlb
lcall
jge
scas
imul
mov
daa
test
mov
jmp
ficoms
dec
push
insb
xchg
lcall
and
js
xchg
push
fbld
cld
cs
imul
iret
adc
aad
mov
jg
xor
inc
imul
pop
mov
sbbl
ljmp
out
pop
dec
pop
loope
adc
sub
mov
jmp
jno
push
dec
and
jb
sbb
xor
pop
and
jle
adc
xchg
mov
sbb
push
sub
daa
lret
seta
push
sub
jle
xor
imul
jns
mov
mov
sub
pop
outsl
inc
mov
ds
cmp
fildll
out
push
inc
insl
call
push
pop
inc
sub
mov
rorb
dec
gs
repnz
test
enter
push
mov
stos
jae
out
or
out
mov
bound
push
push
add
pop
jmp
enter
adc
adc
loopne
test
pop
pop
xor
fiadds
loop
pop
pop
outsb
das
sahf
sub
int
push
jnp
aam
xchg
notb
shlb
repnz
and
neg
faddl
inc
sahf
pop
test
xlat
xchg
inc
shrl
ja
inc
repz
int
mov
lods
into
jecxz
jnp
mov
pop
sahf
sub
pop
cmp
addl
ret
andl
mov
sub
fsubrp
pop
lret
idivb
xor
scas
push
in
cmp
loopne
or
icebp
les
fstpl
xor
push
loope
add
push
int3
pop
add
cmp
and
pusha
rcrl
and
cld
jno
sub
pusha
inc
enter
out
xchg
xor
mull
pop
iret
gs
int3
cld
jns
bound
ret
push
xchg
cmp
adc
push
sbb
cld
mov
hlt
push
sub
jl
ljmp
lahf
enter
stc
mov
dec
aad
cltd
in
setge
in
test
inc
pop
fldl
add
mov
inc
hlt
es
mov
jle
add
in
popf
aas
cs
insb
jmp
mov
sub
out
inc
outsl
and
out
ret
mov
arpl
add
or
pop
mov
aam
fisttpll
mov
pop
repz
inc
fs
aad
outsl
mov
scas
icebp
mov
pop
movsb
and
scas
test
arpl
jge
clc
ret
xchg
std
jl
imul
jns
mov
mov
popa
out
sahf
pop
lret
mov
add
lds
pushf
sub
pop
jle
jmp
fiaddl
jecxz
and
xor
lret
mov
push
out
pcmpgtd
mov
pop
and
mov
fdivrs
cmp
gs
inc
popa
mov
jo
or
or
loope
ljmp
ljmp
mov
jno
lret
aas
fcomps
or
mov
xchg
push
push
push
test
dec
jecxz
mov
lret
cmp
cltd
frstor
pop
aam
jb
out
std
flds
fmuls
int3
call
xchg
pop
dec
mov
insl
enter
pop
ja
imul
xchg
push
insb
bound
sub
jnp
scas
ljmp
shll
mov
jle
sub
out
or
jo
jmp
or
ja
mov
inc
mov
pushf
adc
ret
inc
inc
lret
mov
adc
repz
or
and
movl
push
adcb
dec
jecxz
xchg
and
or
ret
mov
mov
add
sub
aam
jb
push
and
inc
mov
test
nop
cmp
ret
loopne
mov
lahf
xlat
nop
scas
idivl
sahf
andb
mov
hlt
and
sahf
mov
fwait
inc
jb
mov
push
or
cmp
jne
cmp
lea
shrb
pop
cmp
insb
pusha
jmp
pop
xor
aad
test
out
adc
and
movsl
enter
xchg
xor
cmp
jno
mov
mov
shlb
sbb
fwait
cld
and
pop
pop
cmpsl
dec
sub
lea
ret
mov
mov
adc
xlat
jbe
test
mov
data16
mov
enter
out
or
jge
mov
das
ret
insl
out
xchg
jp
xchg
jne
and
rorw
dec
in
mov
cli
mov
lock
stos
std
das
xor
scas
je
or
mov
pop
dec
aam
out
inc
leave
ret
into
hlt
sbb
and
call
add
jo
dec
push
jnp
cld
pop
lcall
das
jp
repz
xor
mov
push
ficoml
js
fsubrs
ljmp
xor
push
jg
or
jne
repz
and
aad
xchg
test
jge
cld
ret
mov
popa
js
icebp
daa
sbb
sbbl
mov
pop
call
jnp
mov
sbb
add
pop
adc
mov
mov
cmp
jns
fwait
or
popa
mov
clc
dec
inc
sahf
shlb
mov
lods
arpl
add
arpl
jbe
cltd
or
imul
cltd
mov
lods
int3
inc
push
jo
mov
lods
jb
jne
push
inc
push
sbb
cs
insb
sub
ljmp
sbb
jge
lret
sub
andl
cmc
xchg
sub
rorb
enter
cmp
aaa
loope
scas
mov
sti
pop
jle
mov
jp
sbb
stc
mov
or
and
loop
repz
jle
cwtl
pushf
jns
mov
cmc
ljmp
test
mov
xor
mov
inc
imul
dec
mov
push
test
js
inc
gs
add
iret
bnd
pushf
push
mov
fwait
lret
sbb
scas
jl
cltd
mov
stos
mov
sbb
jle
enter
std
pusha
add
push
fwait
out
outsl
pushf
ljmp
mov
inc
icebp
leave
test
lahf
mov
mov
out
nop
jle
xor
icebp
and
sahf
leave
mov
or
rorl
sub
fiadds
jno
dec
scas
pop
mov
mov
sbb
out
inc
sar
cmp
dec
adc
popf
ja
inc
cmp
js
dec
pushl
shr
inc
decb
cld
out
inc
lods
inc
push
cmp
pop
lcall
jns
and
pop
aam
sub
cmc
mov
jbe
std
dec
pusha
jmp
dec
and
xor
adc
sbb
jbe
arpl
cmc
cmp
clc
pop
cli
into
loopne
stc
sub
frstor
or
xor
cmpsb
push
pop
stos
add
xchg
xor
jmp
scas
jp
mov
or
insb
pop
add
call
push
pusha
cld
pop
test
adc
push
inc
dec
mov
sub
adc
in
enter
jne
dec
jp
push
addr16
int3
push
stos
movsl
testb
ss
lds
testb
sbb
sub
cli
ds
or
outsl
rcrl
jp
mull
int
imul
or
out
xchg
xchg
fs
push
add
adc
pop
test
cmc
adcl
in
out
and
xchg
and
aad
push
cmp
inc
testb
mov
dec
popf
fsubrl
and
xchg
popa
lcall
cld
inc
inc
fucom
dec
sub
inc
das
mov
and
push
lcall
cmp
outsb
imul
sbb
out
and
pop
movsl
sub
push
cmp
mov
jnp
fstp
je
xor
aad
jae
xchg
cltd
mov
add
push
int3
jp
in
xchg
sbb
push
movsb
lods
mov
and
lret
adc
lcall
in
ret
sbb
mov
int
xchg
pushf
jmp
xor
mov
mov
test
mov
mov
in
pop
add
pushf
inc
xor
pushf
cmp
ds
addb
mov
push
sub
lods
pushw
pop
pushf
sbb
mov
inc
jno
enter
insl
xchg
jo
push
fcompl
push
lds
ret
movsb
jmp
dec
mov
inc
popl
fsubrl
xchg
sti
ss
adc
dec
dec
sub
jo
mov
push
mov
add
pop
pop
sbb
fcomi
mov
aam
movsl
insl
cltd
xor
stc
add
sti
out
cwtl
iret
out
aam
mov
jo
jmp
inc
lds
mov
add
or
or
mov
xchg
jno
pop
mov
sbbl
aaa
and
lods
jnp
jmp
pop
xor
sbb
push
mov
xchg
stos
push
es
fnsetpm(287
push
ret
pop
fnstcw
sbb
pushf
js
cltd
inc
xchg
xchg
push
icebp
adc
mov
ret
mov
mov
ret
jns
call
mov
xchg
jnp
fdivrs
ja
pop
in
dec
arpl
popf
dec
xor
mov
test
sbb
call
sbb
sarb
lods
sti
fsubrl
lds
cmp
jae
push
fstps
dec
jecxz
cwtl
or
mov
mov
std
repz
jns
in
or
shlb
out
xorl
aas
jae
idivl
sub
cmp
daa
js
lods
pop
dec
out
or
rcr
stc
daa
push
dec
aad
and
push
aas
sub
mov
inc
in
push
add
insl
push
xlat
inc
sub
sti
mov
aam
inc
mov
push
cwtl
adc
push
dec
xor
mov
sbb
mov
mov
mov
stos
xchg
jmp
mov
loope
iret
loope
aam
push
hlt
je
insb
cmp
mov
sbb
adc
imul
mov
dec
mov
test
pop
pop
mov
mov
pop
cmp
mov
leave
fs
dec
cmc
stos
xchg
mov
imul
fld
fimull
dec
xlat
cli
adc
mov
out
jbe
mov
cmovns
adc
mov
lcall
mov
xchg
insl
jnp
popf
sti
jecxz
shlb
aaa
lock
and
test
test
repnz
and
pushf
imul
sbb
jl
pop
push
mov
sub
adc
pop
cmpsl
pop
daa
dec
pop
repz
and
fs
leave
xor
jle
mov
cmp
mov
pop
add
insl
cmp
dec
jge
js
xchg
xchg
and
std
inc
fcoml
fldenvs
or
pop
lods
mov
inc
test
push
in
mov
pop
mov
mov
repnz
aad
imul
inc
push
xchg
jae
xchg
shlb
out
push
xchg
pop
movl
dec
push
stos
hlt
insl
ffreep
lods
lahf
sbb
jnp
dec
bound
adc
pop
aas
inc
push
call
cmp
aad
mov
sub
test
cmp
adc
jge
js
aas
fnsetpm(287
fwait
ja
push
out
daa
sub
push
cmp
xchg
sbb
sub
lahf
in
insb
fs
push
movsb
mov
jmp
cmp
pushf
jbe
pusha
fldz
push
and
cmp
stos
sti
pop
outsb
cmp
jne
jp
sub
mov
and
pop
mov
xor
mov
fcmovnb
mov
mov
andl
mov
popl
nop
pushf
pop
out
dec
lea
nop
push
push
xchg
popa
xor
enter
pop
cs
popa
sub
push
fs
mov
rcr
xorl
inc
out
pop
fiadds
in
push
popf
add
push
jno
mov
mov
inc
aaa
sbbl
xchg
sbb
sub
jmp
nop
sti
js
mov
pop
fisubrl
in
pop
les
xchg
shlb
cmpsl
push
sub
imul
pushf
mov
xchg
and
pop
xor
out
test
push
or
xor
dec
pop
lret
adc
sub
lds
push
jbe
sbbl
mov
adc
dec
mov
xchg
push
jnp
sahf
test
xor
and
mov
fs
add
nop
pop
movsl
clc
sarl
add
into
adc
mov
addb
incl
pop
js
xor
aaa
add
add
jle
push
sbb
hlt
pop
pusha
nop
sub
test
pop
mov
mov
or
cli
sbb
lods
xor
adc
mov
sub
jmp
pushf
lds
inc
xchg
xchg
mov
pusha
mov
sub
dec
test
insb
das
sbb
scas
jns
mov
cli
pop
push
inc
dec
mov
test
fdivrl
jbe
push
or
cltd
leave
fsubr
pop
xlat
cwtl
shll
inc
leave
cld
cmpsl
nop
mov
mov
push
cs
xchg
mov
mov
push
adc
mov
out
stc
dec
xchg
out
test
test
sti
lcall
aas
mov
ds
stos
shrb
and
pop
dec
sbb
push
xor
push
stos
test
insb
cmpsb
filds
lahf
sub
or
or
sbb
mov
icebp
push
jbe
pop
cmpsl
bound
test
int3
mov
add
sbb
lret
sub
ja
lock
es
int3
je
aad
imul
out
fwait
cmpsl
xchg
cmp
test
loopne
mov
imul
jl
ljmp
call
sbb
mov
cmc
aas
out
ljmp
sti
mov
sub
push
insb
sub
aam
shl
movsb
jnp
std
orb
lds
roll
jle
and
in
movsl
orb
mov
out
iret
cmpsl
dec
adc
pop
pop
std
xchg
push
fnsave
sub
lods
subb
mov
and
cmp
xor
mov
add
mov
scas
leave
sub
sub
stc
out
aas
mov
inc
and
mov
out
cmp
movsb
jmp
pop
insl
or
xlat
jae
ljmp
test
popa
and
lret
stos
je
dec
xchg
or
out
cmp
pop
dec
xchg
lea
bound
xsaveopt
test
clc
lahf
cmp
popa
iret
pop
cld
add
shrb
in
adc
shll
xchg
dec
push
cmpsb
xchg
jle
mov
out
jno
push
aam
cli
mov
push
fstps
inc
jecxz
out
mov
in
pop
xchg
jo
js
add
adcl
stos
aaa
test
mov
xor
mov
push
cld
adc
mov
sub
adc
add
in
inc
in
aaa
mov
push
cmpb
js
cmpsb
in
mov
lods
fdivr
cltd
jmp
outsl
loop
cmpsl
dec
movsb
je
rorb
fistpll
push
ds
push
xchg
outsl
mov
repnz
mov
stos
bound
lock
adc
mov
mov
or
mov
rclb
pop
addb
jb
lock
stc
rolb
xchg
sbb
loopne
xor
jl
lods
inc
sbb
rcll
stos
stos
cmp
cltd
add
adc
or
or
call
lcall
push
and
mov
rorb
cmc
clc
stos
pushf
push
xlat
pop
and
enter
jae
iret
mov
movsb
inc
dec
adc
adc
sbb
xchg
xchg
int
cmpb
add
jnp
inc
aad
xchg
orb
adc
jle
aad
lds
dec
test
dec
leave
popa
pop
jbe
cmc
scas
sbb
decl
ret
pop
xor
lock
push
stos
dec
cmp
mov
cltd
cltd
adcl
in
sub
mov
pop
sbb
insb
xchg
inc
push
scas
pop
and
mov
stos
cmp
add
lds
outsl
cmpsb
fidivrs
push
push
rcl
daa
add
lahf
enter
adc
push
je
push
jbe
imul
sbb
sub
dec
out
sarl
jbe
rcr
sbb
popa
jne
rclb
jb
sbb
xchg
es
decl
imul
insb
add
lods
and
or
bound
out
cmp
pop
mov
jno
cli
jbe
mov
jne
lea
test
aas
xchg
negl
out
add
cmp
ficoms
int3
adc
rorl
pop
jg
ja
xlat
lcall
sbbb
mov
jb
inc
fdivrs
scas
mov
mov
sbb
sbb
call
lret
out
pop
sbb
sbb
ds
scas
popf
cmp
dec
cmp
jle
test
xor
pusha
imul
jmp
lock
mov
xor
jl
mov
int3
add
je
addr16
icebp
and
in
xlat
xchg
or
adc
ret
ret
xchg
mov
jmp
push
insb
inc
lods
lock
add
aam
or
out
inc
push
and
jge
fwait
jo
jne
sub
pusha
lret
jp
scas
js
xchg
sbb
test
cmp
push
cmp
jmp
loope
pop
ja
push
inc
xchg
xchg
push
inc
je
cmc
inc
xchg
mov
xchg
push
mov
int3
int3
out
insb
xchg
outsl
scas
rol
and
push
inc
push
mov
repnz
enter
add
inc
js
out
fsubl
inc
xchg
das
mov
mov
inc
xor
pop
incl
ljmp
mov
xchg
outsb
dec
or
cmp
mov
push
cwtl
in
pop
daa
pop
mov
dec
cld
adc
int3
aas
and
inc
andl
lods
filds
cli
inc
popf
sbb
out
dec
sbb
adc
fisubrl
inc
rcrl
and
in
xor
aam
sbb
aam
or
push
inc
pop
aad
jbe
in
push
sub
push
mov
xor
pop
nop
xchg
sbb
ficompl
cmpsb
lcall
mov
mov
push
push
or
aam
cmc
loopne
lcall
lods
sub
dec
cwtl
pop
dec
add
les
push
or
xchg
pop
inc
in
aas
jnp
cmpb
filds
mov
test
popf
cltd
jecxz
adcb
jns
stos
lods
jecxz
adc
and
sub
xor
cmp
mov
lret
mov
ljmp
add
pop
out
loope
inc
adc
sbb
mov
jl
ljmp
dec
nop
dec
scas
mov
cmp
icebp
inc
push
pop
add
fs
or
add
xor
adc
pushf
les
lret
inc
call
fnstsw
dec
xchg
ljmp
es
mov
xor
and
jbe
popf
add
inc
test
out
or
lahf
sbb
push
mov
dec
fcoml
sub
jb
jbe
xchg
push
sbb
vmwrite
push
mov
pop
sbbl
pop
loope
rorl
in
shll
pop
xlat
int
imul
out
mov
or
cld
cs
sub
sbb
cmp
cmp
jle
push
dec
fwait
pop
test
fidivrs
and
lcall
xorb
fldl
adcl
lods
cmp
or
dec
xchg
jle
mov
xor
icebp
cld
lcall
and
push
rolb
or
ja
mov
in
mul
sub
adc
out
stos
fists
mov
aaa
ficoms
cltd
or
mov
pop
ffreep
js
adc
and
fcom
sub
inc
xor
shlb
jno
cmp
aam
scas
scas
daa
push
das
and
mov
jecxz
rcrl
lock
int
jp
in
scas
inc
mov
fwait
push
jge
inc
shrb
test
mov
lahf
adc
mov
sub
fimull
insl
inc
add
sub
mov
dec
fcoml
mov
mov
push
popf
in
mov
add
orl
or
and
jl
std
and
xor
inc
aad
shl
push
outsb
jle
sub
mov
push
std
push
push
out
lds
iret
adc
fnstenv
mov
cltd
xchg
pcmpeqw
movb
push
shr
stos
dec
sub
xchg
lods
insb
jmp
add
jne
sub
clc
mov
jb
insl
pusha
lods
pushf
lods
pop
lods
sti
xor
jae
popa
int
xchg
and
cmp
xchg
daa
pop
mov
pop
and
imull
mov
es
dec
imul
dec
jg
cmp
push
and
dec
test
sbb
frstor
bound
lea
hlt
adc
mov
inc
shlb
pusha
sub
push
mov
mov
fsub
jbe
or
pushl
stc
or
lret
mov
cmp
mov
jbe
enter
inc
add
popf
sub
adc
jge
rclb
cmpsb
mov
cmp
dec
movsl
ror
int
pop
mov
pop
sub
inc
adc
mov
jns
jne
sbb
dec
xchg
rorl
push
sub
lods
in
push
xchg
push
inc
xor
mov
xchg
lret
stc
xor
sbb
sbb
pusha
les
sub
jge
dec
cmpsb
inc
xor
into
fbld
faddl
dec
inc
jmp
test
stos
in
dec
jl
insb
test
ret
fdivrl
xchg
push
sub
xor
mov
xchg
outsl
mov
inc
sbb
adcl
mov
scas
push
jmp
sub
aaa
test
mov
popf
ss
lret
push
xchg
cs
or
movsb
roll
push
mov
pop
sub
pop
push
popf
xchg
in
xorl
popa
push
mov
out
dec
rcr
in
stc
xor
add
mov
mov
add
mov
mov
inc
int3
pop
dec
xor
out
iret
das
in
pop
hlt
mov
mov
xchg
je
sub
jno
stos
iret
xchg
lret
pop
pushw
xchg
lock
or
inc
scas
mov
scas
std
rclb
int
add
enter
addr16
insb
mov
mov
and
pushf
lahf
pushf
or
jae,pn
add
cmpsl
add
mov
test
mov
es
fcompl
push
sbb
sub
mov
hlt
mov
dec
loop
ljmp
xchg
in
adc
iret
cmp
jmp
stos
jge
mov
inc
pop
and
dec
shl
addr16
stos
popl
cmpsl
fidivs
jnp
add
inc
jb
mov
lret
ret
or
lods
test
mov
movsl
jge
dec
and
idiv
std
aad
xlat
xor
add
lret
mov
sub
or
inc
out
in
or
xor
fdiv
mov
je
pushf
cmp
fcmovne
jno
or
mov
jle
xchg
pop
into
lret
pop
or
adc
inc
inc
mov
jl
pop
aam
lods
outsl
out
jecxz
imul
rol
bt
nop
push
jne
inc
scas
adc
lea
fcomip
nop
xor
add
mov
cmp
mov
imul
shrl
aad
outsl
mov
jmp
out
fmuls
mov
inc
or
add
fdivp
ds
sbb
jns
fldt
push
inc
cmc
sbb
std
mov
clc
movsb
push
pushl
dec
call
mov
inc
inc
loop
cmp
outsb
lods
jbe
xor
pop
repz
dec
xor
dec
sub
stos
mov
mov
lcall
imul
xor
mov
adc
mov
cmp
mov
data16
add
or
je
mov
or
in
or
add
mov
out
xchg
adc
xchg
scas
pop
dec
addl
xor
mov
lea
daa
mov
filds
aad
lods
adc
icebp
jbe
inc
or
push
add
mov
leave
in
lods
pop
adcl
bnd
push
sbb
cmp
ret
pushl
inc
lahf
dec
jl
shrl
fdivr
push
shl
and
lcall
cmpsb
mov
test
inc
jmp
das
xor
or
ljmp
out
mov
fsubl
enter
cli
dec
pop
daa
ja
and
clc
rcll
cmc
test
mov
push
movsb
mov
xchg
push
inc
fmull
fcmovnb
hlt
fnstenv
xchg
dec
push
lock
sbb
outsb
cmpl
sti
stos
adc
pop
cmp
jmp
inc
lods
and
lret
and
test
out
jae
inc
jp
mov
rcr
pop
das
cli
xor
imul
mov
ja
pop
sti
mov
and
sub
data16
jp
mov
lcall
enter
hlt
push
popf
and
movsb
pop
add
mov
jg
xchg
mov
mov
sub
inc
dec
push
and
or
pop
xlat
mov
mov
push
ljmp
adc
push
cwtl
and
add
sub
ds
popf
int3
jno
adc
aas
push
mov
shl
xor
xor
mov
call
inc
loopne
cwtl
jmp
aad
mov
stc
mov
xlat
adcl
sti
mov
push
rorl
popa
and
push
subb
mov
cmp
or
add
pop
jle
adc
xorl
cli
jae
sbbb
cmp
jl
hlt
or
jae
cmp
jl
into
imul
push
movsb
mov
push
sub
pop
lea
lock
add
sub
das
dec
test
clc
cld
cmp
aam
add
push
adc
pop
jle
or
movsl
sarl
mov
les
pop
test
shlb
sbb
add
out
insl
mov
mov
inc
lahf
lock
aam
pop
in
dec
orl
in
and
ret
outsl
mov
push
lock
movsl
sub
jae
hlt
jp
adc
push
inc
insl
mov
mov
jg
in
cmpl
lods
sub
add
cld
imul
push
mov
cli
and
inc
inc
movsl
jo
and
cmp
std
pushf
and
lods
stos
sub
clc
adcb
push
int
or
je
push
stc
adc
dec
cmp
lock
mov
imul
adc
inc
inc
bound
daa
enter
jb
jb
and
rcrl
test
out
pop
lret
out
outsl
push
inc
sbb
cmp
mov
dec
pop
outsl
adc
andb
sub
sbb
jne
mov
out
inc
pusha
adc
jns
pop
cmpsl
stos
jmp
add
stc
mov
daa
jne
clc
xchg
nop
mov
int3
mov
dec
adc
xchg
cli
sbb
das
lea
jae
jecxz
xchg
dec
in
xor
out
adc
push
fs
push
fdivl
mov
jne
or
sbb
xor
xchg
stos
lahf
push
daa
mov
int3
mov
clc
jae
imul
mov
iret
out
xor
mov
pop
psrlq
xorl
cltd
cmp
scas
xchg
adc
fisubrs
dec
rcll
push
inc
jp
dec
and
pop
cld
xor
out
mov
nop
add
iret
scas
lods
pop
and
lcall
lahf
hlt
pop
cmpsl
mov
icebp
jae
int3
sbb
mov
xchg
aaa
jge
outsb
mov
mov
enter
push
pop
mov
aam
jl
push
add
ljmp
add
push
mov
dec
mov
mov
popf
mov
cmp
mov
mov
outsl
es
repnz
jns
repz
mov
aaa
push
dec
adc
mov
push
loopne
sub
out
mov
or
sti
sahf
or
sbb
mov
mov
adc
cli
in
mov
or
and
ss
mov
sub
fildl
nop
sub
divl
faddl
pop
push
jbe
loopne
sub
pop
push
idiv
pusha
cli
imul
jns
aaa
cmp
add
lods
lcall
psubusb
in
inc
mov
or
les
pop
mov
lahf
push
adc
ret
cmp
and
in
or
pop
loop
mov
and
orb
mov
cvtps2pd
cmpsl
sbb
aas
leave
out
jge
push
ljmp
sbb
inc
mov
out
sbb
ljmp
nop
lods
add
repnz
js
pusha
mov
rclb
scas
cmc
or
push
popf
test
push
mov
xor
adc
lret
leave
dec
loope
xchg
movsl
sbb
ret
jmp
ja
popf
xchg
adc
stos
jae
fnsave
pusha
push
xchg
adc
out
push
int3
mov
cmpsb
lret
and
push
pop
add
ja
add
mov
insb
ds
out
mov
cmp
lahf
fs
xchg
push
flds
sbb
cmpsl
pop
cmp
aas
stos
and
xchg
xchg
inc
xor
data16
mov
lock
jb
sbb
lds
scas
dec
fdivrs
pop
test
out
jnp
xor
adcl
lea
rorl
imul
adc
jb
push
sub
hlt
in
mov
mov
sti
movsb
ss
and
and
mov
push
dec
adc
std
or
inc
dec
jae
inc
lret
lods
lea
and
std
test
dec
and
xor
out
xor
mov
mov
pop
lds
ds
dec
or
adc
ds
mov
inc
icebp
pop
out
movsb
pop
mov
pushaw
ja
mov
mov
pop
dec
iret
shll
jp
mov
inc
dec
mov
mov
pop
add
push
push
in
scas
rclb
std
loop
xchg
aad
cmc
daa
jge
das
out
cmc
dec
iret
xchg
jno
push
lret
imul
pop
stos
mov
mov
popa
sbb
xlat
xchg
sub
push
xor
jns
lcall
xchg
push
xchg
scas
or
cmpsb
lcall
movsl
add
sti
out
lcall
int3
pop
cmp
dec
sub
leave
fisubrs
dec
pop
push
leave
xor
and
inc
jle
aaa
loope
add
mov
xchg
jne
cs
sbb
mov
mov
insb
xor
jecxz
push
lods
add
lret
or
cmc
xchg
jge
js
lods
shrb
push
mov
xor
sbb
mov
and
mov
jmp
test
subb
fucom
test
fcompl
shll
ds
push
mov
mov
jns
sbb
mov
orb
loop
cmp
cmova
inc
cmp
aam
leave
jbe
cld
scas
mov
mov
push
arpl
mov
or
dec
sub
push
stos
mov
icebp
icebp
jge
sbb
retw
inc
mov
xor
mov
inc
ds
mov
pop
jbe
scas
sti
sbb
loopne
roll
mov
or
sahf
pop
popf
ficompl
in
xlat
add
push
jmp
jne
sub
in
ljmp
insl
inc
pop
stos
push
cmpsb
xchg
lock
xchg
and
push
loope
int3
in
flds
inc
mov
nop
leave
in
gs
dec
andl
les
mov
xchg
nop
in
xchg
mov
or
jo
or
nop
push
sbb
stos
out
jmp
mov
lods
push
add
sbb
movsl
cmp
ror
call
inc
icebp
out
mov
jmp
hlt
das
cld
mov
jmpw
jl
ja
and
or
xchg
push
imulb
pop
add
hlt
mov
mov
lret
fisttpll
jns
pop
adc
int3
add
pop
lret
jge
or
mov
dec
mov
shr
pop
mov
mov
popf
sbb
and
jg
test
mov
pop
inc
and
mov
pushf
in
hlt
mov
adc
adc
nop
in
inc
adc
inc
xchg
adc
test
cwtl
loopne
push
sbb
ret
push
icebp
out
or
cmp
cmp
popa
mov
pop
aas
sub
jno
rcll
jl
sbb
int3
shrb
or
daa
xchg
in
mov
js
iret
xor
pop
xchg
nop
mov
mov
rorb
movsl
es
push
in
mul
push
add
adc
pop
lods
aaa
adc
out
lods
push
enter
mov
std
ret
jl
popa
fcoml
xchg
cmp
sbb
or
xor
ja
dec
mov
push
cmpsb
xor
int
pushf
loopne
sbb
mov
fwait
sbb
cli
pop
adc
dec
dec
sbb
dec
sarl
fnstsw
xchg
mov
sub
cmpsl
or
and
insl
mov
sbb
pop
sub
mov
sub
push
test
stos
mov
test
clc
xor
icebp
adc
sti
cli
ret
push
pop
dec
pop
sub
movsb
mov
arpl
test
jno
shl
out
mov
leave
shl
test
mov
dec
and
mov
ret
sahf
scas
mov
movsl
and
mov
in
nop
cmp
mov
fldenv
push
or
xor
mov
aad
jns
mov
add
lock
adc
push
sbb
push
out
imul
fsubr
aaa
das
loop
dec
fistl
cli
insl
jle
mov
repnz
lcall
flds
pop
or
inc
mov
adc
or
jae
cmp
test
xchg
or
out
shll
insb
pop
fsubl
push
sub
cmp
mov
mov
pop
arpl
xchg
sbb
cwtl
loopne
test
inc
inc
dec
out
mov
adc
and
lods
add
scas
mov
xor
iret
loop
sbb
punpcklbw
popa
adc
pop
pop
sahf
std
mov
and
aaa
push
push
sbb
add
inc
inc
cs
push
outsl
and
cmp
call
and
push
add
lock
lret
test
or
fldenv
push
scas
cmc
lods
push
stc
jbe
cmp
hlt
jmp
aam
mov
call
push
pop
mov
insl
push
mov
pop
lock
hlt
xor
shl
sub
lods
sahf
jg
je
push
into
xchg
push
sub
mov
int3
dec
pop
fisubrs
and
mov
rolb
add
sub
ljmp
jmp
xchg
mov
add
addb
pop
into
sbb
inc
sub
dec
adc
popf
fsubl
push
loopne
pop
addl
cmp
inc
xor
jno
jns
mov
imul
adc
jp
fdivrs
or
aas
push
dec
rol
sub
imull
jmp
ljmp
inc
push
push
addr16
xchg
rol
jb
cmp
out
lods
sbb
inc
mov
jmp
fwait
xor
roll
cmp
loopne
sti
jle
xchg
add
rcrb
add
sub
xor
mov
xchg
cmp
and
or
cltd
push
xor
adc
inc
out
js
scas
lods
leave
rcrb
js
ja
rcll
sub
aaa
cli
scas
add
lret
rolb
push
push
jecxz
lock
ljmp
inc
xchg
sub
sahf
xor
push
subb
inc
sub
cmpsb
sbb
xor
out
sti
jp
mov
inc
mov
test
divl
je
jge
int
scas
add
pop
jg
aam
roll
xor
push
popf
pop
in
das
stos
pusha
sub
test
cmp
mov
orb
iret
loop
jge
fcomi
gs
xchg
dec
pop
cltd
mov
adc
xchg
lock
gs
inc
ja
or
movsb
loop
xchg
aaa
and
loope
lret
push
dec
lods
in
shr
mov
test
pop
and
loopne
aaa
pop
and
adc
js
xchg
adc
xchg
mov
outsl
clc
incl
movsl
in
pop
rcll
addl
add
lea
stc
out
hlt
stc
xchg
andl
fsubs
cltd
jnp
popa
mov
xchg
enter
adc
loopne
mov
jns
jb
jp
cmp
mov
adc
les
pop
repnz
mov
xor
mov
repnz
sarb
pop
fsubrl
clc
jns
dec
dec
jecxz
imul
jne
cmc
mov
jecxz
add
mov
inc
mov
mov
mov
push
jo
cmpsb
cmpsb
sbb
notb
and
lret
aam
out
xchg
mov
cmp
mov
movsl
mov
out
adc
sahf
addr16
lock
fwait
aad
jecxz
mov
andb
fcmovnu
adc
imul
mov
pop
mov
scas
popa
mov
xlat
pop
pop
fisubs
out
cmp
sbb
addb
push
aam
fdivrl
repz
xchg
push
pop
lds
and
and
xchg
inc
pop
into
jbe
in
js
sbb
mov
xchg
jge
subb
jmp
outsb
push
clc
adc
mov
cmc
ret
into
jbe
sbb
lcall
loopne
aaa
in
inc
mov
mov
mov
xchg
adc
lods
mov
pop
cmp
mov
add
jge
mov
jge
jnp
xchg
ret
push
data16
shrl
push
cmp
and
sbb
cmp
fwait
push
pusha
pushf
scas
add
xchg
fidivl
ret
inc
stos
pop
mov
dec
adc
in
sub
adc
pop
inc
out
sub
outsb
stos
insb
pop
mov
push
aaa
sti
int3
dec
fstp
in
loope
sti
jle
pop
adc
mov
cmpsl
mov
add
sbb
cs
jp
and
int
pop
mov
mov
inc
pop
mov
scas
cmp
adc
sbb
mov
pop
sbbb
adcb
sbb
nop
imul
mov
rcrb
jno
fisubs
push
mov
pop
jb
ljmp
xor
or
add
loop
lods
push
adc
jmp
pop
insb
xlat
mov
in
add
push
daa
scas
shlb
mov
mov
pop
repnz
adc
cmp
push
jl
fimull
aaa
pop
mov
mov
sti
lahf
outsl
pop
lcall
pop
dec
dec
cs
sti
je
inc
ss
lret
mov
xchg
lods
or
push
out
ret
jbe
aam
aad
xor
out
faddl
mov
out
xor
dec
mov
sbb
dec
popf
leave
loop
xchg
daa
inc
fidivl
outsb
push
push
mov
adc
test
stos
adc
mov
aaa
xlat
xor
pop
xor
inc
jno
inc
cltd
movsb
dec
scas
int
mov
dec
popl
sahf
xor
fisubrl
test
xchg
pop
dec
mov
cmp
bound
popf
pop
jo
sub
adc
adc
mov
xor
dec
sub
pop
push
sub
in
lahf
out
cs
out
cwtl
nop
xor
stc
fsubrl
mov
xchg
stos
nop
sbb
out
imul
sbb
add
mov
add
fisttps
fstpt
cld
mov
mov
xchg
sbb
mov
jns
cmp
es
pop
push
stos
mov
gs
icebp
and
mov
sbb
pop
cwtl
xor
push
inc
pusha
test
frstor
test
and
sbb
mov
jo
push
mov
xchg
in
repz
out
pusha
cwtl
pop
int
mov
fimuls
repnz
cmp
add
jno
shlb
mov
stos
cmp
pop
jle
mov
mov
jl
repnz
lret
imul
lds
inc
ljmp
negb
and
mov
in
inc
sub
sub
xchg
mov
cld
jnp
loop
inc
pop
loopne
push
pusha
addl
clc
xchg
push
lods
repz
xchg
mov
repnz
push
push
hlt
cmp
mov
xor
push
mov
or
xchg
or
mov
in
out
adc
rolb
xor
incl
dec
pop
pop
out
nop
mov
mov
xor
pop
inc
xor
xorl
mov
push
push
dec
cmp
dec
jno
mov
stos
aas
or
cmp
dec
sbb
mov
jl
mov
xchg
cmpsl
fsubl
mov
int3
or
imul
mov
push
and
out
cs
sbb
mov
dec
ljmp
adc
inc
dec
pop
test
sarb
les
lret
add
xchg
jmp
aam
adc
in
jo
dec
lret
sahf
fcomps
xchg
fidivrs
in
daa
adc
cmp
xor
cmpsl
into
push
jb
adc
out
sarb
push
pop
cmp
int3
icebp
ret
adc
mov
jne
sbbl
out
hlt
call
in
int3
xlat
jo
pop
cmpsb
push
gs
in
sub
sub
lds
mov
mov
sti
push
notb
sarb
outsb
adc
mov
es
idivl
repz
sar
xor
xchg
push
inc
es
xor
stc
jno
xchg
div
outsl
in
scas
inc
or
jg
dec
es
addr16
sbb
xor
int3
clc
notl
dec
lcall
xor
mov
notb
stos
pop
stos
xchg
das
push
push
cmpb
mov
push
push
cmp
add
xor
jg
sub
lods
scas
data16
in
out
pop
pop
push
push
pop
out
or
pop
std
xor
add
das
data16
lock
add
adc
adc
pop
cli
in
xor
popa
cmpsl
push
sub
mov
lret
inc
dec
cltd
aam
pop
popf
and
gs
mov
popa
cs
sub
outsb
push
jle
mov
mov
xor
mov
stos
sub
adc
add
cmp
mov
pop
add
adc
dec
imul
sub
dec
push
jno
es
xor
inc
xchg
cwtl
sbb
cli
rcl
stc
lcall
jecxz
scas
mov
outsb
sbb
into
mov
in
or
scas
and
rol
jmp
sbb
dec
les
push
daa
mov
sub
sub
push
add
ficomps
xor
out
mov
out
scas
pushf
arpl
mov
addr16
sbb
mov
and
jnp
lods
movsl
sub
and
out
fsubrs
add
adc
cmpb
ds
cmp
xor
bound
inc
arpl
jb
inc
dec
shrl
cmp
inc
sbb
fwait
jge
jno
ja
mov
sbbb
cwtl
and
pop
push
rorb
repz
and
aam
pop
fistpl
dec
dec
aad
je
sbb
and
sub
out
je
and
sbb
leave
movsl
pop
or
sti
leave
and
int3
fistpl
aam
jp
mov
out
clc
jle
test
addr16
and
lods
xor
loopne
repnz
insb
sub
outsb
iret
jmp
push
pop
sbb
pop
std
notb
sbb
xor
bound
movsl
pop
fldl
dec
mov
add
sub
and
lret
ds
pop
jns
push
mov
clc
fwait
imul
sbb
bound
and
jl
adc
mov
pop
out
inc
stc
icebp
out
adc
or
add
pop
enter
dec
pushf
push
mov
arpl
inc
std
cmc
xchg
ss
jo
or
mov
jne
fisttpl
cmp
sbb
ljmp
pop
outsb
je
shr
xchg
pusha
insl
or
test
cmp
or
push
jne
call
jl
cwtl
inc
gs
cmp
pop
test
test
outsl
add
sub
cmpsb
popf
int3
mov
mov
arpl
sub
mov
aad
aad
and
arpl
lcall
pop
or
xchg
stc
out
push
mov
or
mov
mov
lds
mov
gs
mov
pop
bnd
mov
loope
cmp
insb
dec
pop
dec
push
lret
sbb
jne
cmp
xor
in
es
push
mov
out
jmp
xlat
jae
pop
pop
sbb
std
das
xor
int3
xor
stc
push
jns
xchg
dec
dec
cmp
jb
notb
xor
adcb
xlat
push
mov
les
xchg
push
adc
xchg
sub
sub
inc
or
push
xchg
inc
sub
aam
mov
jae
insb
mov
jle
inc
outsl
insl
cmpsl
daa
aad
je
nop
lods
sbb
pop
rol
cs
or
pushf
arpl
add
je
push
stos
mov
aam
xor
dec
and
int
sti
mov
cmp
lret
bound
lahf
loope
lret
mov
hlt
push
inc
jb
mov
daa
bswap
inc
jg
sub
jo
pop
mov
ds
int
aas
xchg
xchg
dec
popf
push
enter
fdivr
cmp
les
xlat
xor
addl
xor
xor
and
and
and
rorl
aad
pop
jmp
lahf
cmpsb
scas
lcall
and
repz
and
movsl
sub
cli
sub
xor
clc
xchg
rcrb
mov
test
clc
xor
pop
jne
popf
nop
inc
test
jge
int3
push
aas
adc
mov
fmuls
sbb
xor
bound
sub
xor
lds
mov
inc
sub
lret
lret
sbb
jne
jne
sub
fisttpl
aas
push
jno
lods
inc
addb
ja
jo
cmpsl
xchg
call
mov
icebp
xor
jge
mov
daa
in
mul
fwait
shll
testb
add
in
pop
fdivrs
cmp
movswl
int
push
inc
inc
jne
push
rcr
outsl
sbb
nop
mov
mov
jnp
adc
xchg
add
lret
aad
inc
mov
gs
jmp
pusha
mov
clc
stc
stc
mov
adc
shll
sbb
int3
jno
rcr
mov
aas
mov
sub
pop
andl
xchg
push
and
insb
cmpsb
test
shlb
adc
cltd
sbb
notb
jno
sbb
xchg
sarb
stos
fcomps
jg
int3
bound
jns
xchg
cltd
xchg
cmpsl
in
jb
push
push
movsl
aam
mov
inc
sbbl
add
outsb
in
xor
mov
test
and
mov
clc
sub
add
jo
movd
cmp
movsb
mov
clc
add
inc
je
icebp
in
sub
in
xchg
mov
xor
push
adc
rclb
hlt
push
push
movsl
js
cld
push
mov
xchg
jnp
and
dec
or
jno
xor
adc
fbstp
and
jae
mov
lret
or
cmc
aaa
in
jecxz
add
in
adc
add
addr16
ficoml
mov
push
and
add
inc
inc
ret
sbb
jne
fwait
nop
in
addr16
pop
inc
jmp
mov
add
ror
cld
mov
pop
movsb
das
shl
sahf
mov
fcomi
dec
pop
jp
inc
xor
mov
sub
mov
and
pop
fcompl
fcoml
sbb
push
stc
pop
sub
push
jmp
inc
jno
adc
xor
inc
add
mov
iret
sbb
lea
push
aad
sti
xor
or
fiadds
jnp
pop
sbb
jle
in
leave
into
dec
sbb
push
repnz
sbb
je
add
movsb
jns
mov
add
add
sub
nop
dec
push
fcoml
jbe
sbb
call
push
fwait
adc
sti
inc
mov
jae
dec
jbe
das
je
xchg
mov
ret
mov
in
enter
je
sbb
repnz
adcl
dec
ret
push
mul
rcll
xor
scas
sub
or
mov
inc
jecxz
mov
cltd
lret
push
cmp
pop
cmpsl
jecxz
out
mov
sbb
in
dec
mov
and
inc
daa
mov
ss
ss
lahf
mov
hlt
push
ljmp
rolb
pushf
popf
outsb
call
test
adc
push
mov
xchg
in
cld
inc
push
fidivrl
das
inc
jl
out
mov
into
fmull
out
xor
jb
iret
shll
mov
mov
xchg
jne
mov
mov
sbb
call
mov
cmp
gs
cs
push
aam
push
sbb
xchg
mov
or
fs
push
cmp
push
add
push
in
lret
mov
rcrb
mov
mov
cmp
shll
or
inc
xchg
xor
sub
xor
fs
xchg
loopne
jge
ja
icebp
ror
dec
ds
mov
inc
sub
inc
repz
xchg
sti
sti
dec
jmp
pop
les
repnz
add
mov
fsubrp
sarl
pop
add
pop
out
fmuls
pushf
dec
mov
pop
fmul
fincstp
and
into
push
adc
shll
test
push
lea
mov
iret
pusha
mov
mov
ficoml
push
pop
push
mov
dec
mov
jae
es
mov
in
xor
inc
outsl
mov
ret
cmp
popa
push
lret
push
xorb
popf
sbb
repnz
arpl
hlt
addr16
cmp
call
ret
mov
xchg
dec
xor
xor
add
fbld
in
data16
or
adc
cmc
push
repz
notb
lea
cmp
cmc
adc
cmp
mov
test
cli
dec
int3
shlb
iret
sub
xor
rclb
mov
mov
decb
faddl
jae
outsb
or
scas
cmpsb
or
mov
push
enter
jmp
pusha
fcmovne
mov
or
sub
in
mov
iret
push
cmc
push
or
push
or
push
dec
push
sbb
fwait
push
mov
loope
lea
dec
xchg
xchg
leave
adc
xchg
adc
dec
sti
mov
mov
push
fidivrl
es
rcll
jnp
mov
xchg
jno
aam
or
stc
mov
jns
bound
cmpsb
and
test
dec
pop
subl
into
adc
out
or
or
cmp
loop
lret
jnp
leave
pop
dec
and
shrl
inc
aad
mov
outsb
add
notb
stos
inc
push
xchg
inc
sbb
ret
inc
mov
cmpsl
inc
mov
jp
lods
and
cmpsb
or
cmp
in
arpl
cmp
lods
loopne
sbb
sbb
dec
paddq
and
ret
frstor
loope
data16
and
popf
cmp
cld
sub
mov
push
jle
and
cwtl
lret
inc
jnp
push
jb
scas
in
jmp
or
fiaddl
in
inc
nop
gs
movsb
pushf
insb
dec
loopne
addb
xchg
sub
mov
jge
repz
lea
dec
data16
xor
imul
push
imul
jae
icebp
ss
mov
stos
nop
in
push
fucomi
call
stos
xchg
push
inc
roll
aas
sti
sub
mov
pop
lods
imul
jb
roll
sub
add
sub
add
jmp
and
movl
repz
mov
cmp
pop
stos
aad
shrb
xor
cwtl
mov
or
in
xor
dec
jbe
aaa
into
enter
rcr
mov
dec
daa
mov
pop
mov
mov
enter
inc
testl
imul
call
push
push
push
loopne
inc
jge
ret
xchg
enter
aaa
aad
ljmp
loope
dec
popf
xor
jecxz
mov
out
repz
out
fcoml
pop
shrl
jo
sbb
cmp
aas
cmp
popf
push
scas
add
bound
add
shr
xchg
filds
jecxz
mov
je
xchg
pop
sbb
adc
aam
arpl
mov
idivl
pushf
push
jae
push
push
pusha
push
pop
mov
ficomps
mov
in
xor
test
jecxz
adcl
xchg
xor
mov
loopne
sti
lods
cmp
xchg
xor
fimull
inc
or
dec
pusha
sub
mov
fldenv
in
jnp
outsl
jg
fsubrl
jnp
fsubrp
pop
xor
and
cmpsl
in
jl
push
mov
dec
push
mov
jp
pusha
adc
push
pop
aam
push
imul
ljmp
cmp
stc
popf
mov
adc
xor
jno
cld
mov
xchg
fnstcw
aad
loopne
enter
jmp
pop
xchg
jle
xlat
sahf
repz
xchg
xor
imul
cmp
jmp
daa
popf
push
test
pop
add
push
lret
mov
fists
loope
mov
stc
sub
cltd
pop
sbb
out
lock
sarb
in
jg
fwait
out
imul
in
fs
sub
fisttpl
xor
mov
jge
iret
mov
fistps
sahf
shl
mov
jle
out
xchg
stc
push
loop
addr16
lret
mov
scas
shrb
mov
mov
lret
or
cmp
cmc
and
pop
dec
or
lock
inc
stc
mov
ds
movsb
cmp
das
sti
pop
add
jnp
and
inc
icebp
xor
jmp
jl
jp
inc
fstpl
in
inc
push
lret
ret
jae
call
ds
jmp
xchg
repz
mov
cmp
inc
sti
in
sub
push
pushf
cltd
out
popa
push
shlb
cmp
cmp
cmp
in
jle
dec
lods
lods
andl
push
fwait
push
mov
sbbl
in
xchg
scas
ffree
mov
dec
inc
jne
sti
mov
ficoms
enter
call
scas
int3
das
cmp
fsts
jge
insl
add
int3
je
cmp
sahf
ret
inc
or
mov
fwait
sbbb
das
xchg
mov
or
in
int3
xchg
push
subl
and
push
subb
rcl
in
cs
fwait
add
ss
xchg
jns
out
ljmp
pop
std
mov
mov
push
xchg
inc
push
int
cli
hlt
rcr
lahf
push
fmull
mov
sbb
pop
fcoml
mov
xchg
fs
pop
cli
ret
subl
subb
mov
sbb
jle
js
inc
movsl
inc
xor
xlat
inc
out
dec
iret
aad
not
call
or
out
cmc
push
lahf
icebp
pusha
dec
or
in
xlat
or
jge
mov
jmp
add
daa
enter
mov
rorb
mov
jnp
push
dec
fdivrs
sub
out
cltd
cmp
lea
outsl
ds
lods
sti
push
out
pmullw
call
loopne
pop
sarl
fisubrs
daa
inc
repnz
icebp
mov
dec
pop
cmc
xchg
xor
out
aad
pushl
shrb
dec
imulb
scas
aam
inc
cs
jns
insl
inc
stos
fwait
dec
dec
or
scas
sub
mov
dec
push
mov
jp
enter
push
imul
mov
sahf
in
jno
in
mov
stc
cs
data16
add
jp
or
sub
sti
adc
add
out
xchg
and
rcl
xor
cmpsl
mov
lcall
addr16
rclb
mov
js
mov
mov
outsl
mov
testb
jnp
sbb
nop
adc
xor
xchg
dec
popl
sub
mulb
mov
push
mov
icebp
pop
in
out
mov
shll
mov
and
add
push
outsb
fwait
out
testb
xor
cli
push
or
inc
xor
std
test
or
mov
and
repnz
push
inc
pop
sbb
xor
pop
and
cmp
pop
xchg
popf
ljmp
push
mov
jns
jl
inc
pop
arpl
test
sbb
xchg
test
cmp
aaa
adc
push
push
push
in
dec
lret
test
aaa
out
je,pn
adc
xchg
cmc
pusha
adc
pop
xor
mov
sbb
mov
aaa
add
cmpsb
popf
cltd
rcll
jmp
dec
cmp
xchg
negb
xchg
bound
sub
mov
mov
orb
inc
das
stos
ror
jb
fstps
out
fadds
pop
les
add
push
jle
jmp
inc
lahf
pusha
negl
mov
sbb
pop
jmp
stos
loop
lcall
cmpsl
push
and
stc
pop
scas
push
out
shl
cmp
or
imul
mov
stc
fsts
repnz
push
jmp
call
lcall
daa
js
aad
cwtl
xchg
pop
scas
and
mov
pop
cmc
fwait
mov
mov
sub
push
xor
fidivl
mov
rolb
xchg
lods
jmp
cs
dec
xor
dec
movsl
cmp
mov
fimuls
mov
ret
repnz
xlat
je
inc
ss
cli
das
add
cmc
pop
dec
push
enter
push
dec
xchg
inc
xor
lods
clc
cmpsb
sub
xchg
out
mov
cmp
hlt
imul
loope
aas
mov
sahf
sahf
xchg
test
lahf
pop
push
or
addr16
pop
lods
mov
sub
out
inc
decl
mov
jge
sbb
flds
lahf
lcall
das
icebp
jno
push
add
inc
mov
jecxz
lods
in
enter
mov
mov
add
lods
mov
mov
ret
mov
cmpsl
ror
adc
cmp
loope
cmp
mov
popf
and
nop
lret
xchg
int
dec
fucom
dec
dec
xor
pusha
push
inc
iret
inc
sub
jae
add
ret
jle
mov
jmp
mov
aad
cmp
xor
mov
inc
stos
mov
dec
xchg
das
or
jnp
xor
pop
out
bound
fmul
test
stos
pop
push
jp
ficomps
testb
adc
dec
sbb
adc
xor
xchg
lcall
lahf
fstps
mov
sbb
xor
mov
dec
mov
ret
fs
mov
pop
icebp
cmp
lea
out
jg
add
out
fs
out
cld
mov
test
adc
or
push
cmp
push
jl
dec
xor
roll
lods
mov
mov
fmuls
mov
outsb
push
enter
pop
pop
daa
cmc
cmc
cmp
xlat
push
mov
adc
adc
stos
mov
lret
cmpsl
bound
mov
subps
dec
xlat
shl
mov
mov
pop
inc
test
mov
inc
call
cmp
call
cmp
pop
mov
adc
mov
and
xchg
push
insb
jae
or
sarb
adc
inc
stc
jae
pop
mov
ds
xchg
or
test
inc
mov
jmp
xchg
add
lahf
jl
mov
jne
xchg
adcb
fisubrs
pop
dec
pop
cmc
into
push
fiadds
or
stos
aad
push
xlat
sub
fstl
outsb
jb
xchg
fisubrl
push
xchg
mov
popa
inc
loope
fsubrs
aad
push
or
cmp
gs
popf
jle,pn
cmp
xor
mov
stc
mov
mov
mov
sbb
cs
sahf
lret
dec
mov
inc
lods
pop
jge
int
sahf
mov
ja
mov
dec
inc
out
xchg
push
repnz
hlt
fstl
xlat
xchg
mov
pop
das
push
ss
add
sti
cmpsl
mov
xchg
xor
insl
es
je
jnp
xchg
mov
pop
mov
mov
arpl
jno
mov
cmp
mov
push
dec
das
mov
adc
imulb
mov
jle
or
cltd
and
outsb
cmp
lea
cmp
iret
in
stos
scas
jb
fstpt
mov
gs
lahf
and
ljmp
jns
add
mov
jbe
pop
ja
js
push
sub
icebp
cmp
rorb
lods
mov
pop
push
push
repz
popa
into
shrb
jb
loopne
or
cld
fnstcw
ljmp
fmull
fstl
mov
leave
mov
sarb
aam
inc
out
inc
sub
test
lcall
nop
outsb
inc
and
mov
cltd
dec
sti
inc
nop
mov
jns
into
int3
jne
pop
out
cmc
cli
test
ret
inc
sub
lods
mov
xchg
in
sarb
pop
int
in
inc
dec
jle,pt
xor
jo
insb
push
lret
bound
loope
in
sbb
or
fstp
cs
add
mov
xor
sub
enter
int3
pusha
stos
repz
in
cmp
dec
mov
sbbb
fwait
inc
ret
push
lret
adc
pop
sbb
loopne
adc
das
inc
roll
and
jg
cmp
mov
mov
iret
inc
sahf
pop
into
push
aam
mov
mov
inc
dec
cmp
pop
jge
add
mov
xchg
add
repnz
iret
add
push
push
leave
sub
sub
cmpsl
and
jb
jns
push
clc
mov
add
push
lret
dec
popf
iret
mov
push
add
and
shrl
xchg
in
insl
sub
in
inc
inc
or
repz
hlt
pop
pop
in
cmp
cwtl
or
aam
and
mov
cmpsb
inc
loope
aad
enter
outsl
push
adc
mov
movsl
lret
in
in
xor
dec
add
rorl
mov
push
or
popa
add
pop
repz
lods
sub
sub
xchg
add
and
fildl
ds
mov
andl
add
mov
jge
dec
cmp
push
ret
xchg
fisttpl
add
mov
scas
mov
mov
xlat
jno
dec
mov
add
fldt
push
mov
mov
std
xchg
inc
inc
push
cmpsl
fcom
inc
movsb
out
aad
insl
pop
ss
je
dec
ret
lock
xchg
xor
ret
sbb
inc
ds
pop
stc
jnp
repz
push
mov
cmp
mov
cwtl
push
mov
jae
push
lock
lcall
or
mov
or
mov
lret
clc
cmpsb
repz
mul
das
adcb
push
test
stos
gs
inc
xchg
or
mov
cmc
mov
ljmp
insl
addr16
jmp
lret
je
jno
jg
mov
cmpb
arpl
dec
cmc
and
cmpsl
dec
xchg
jle
push
and
push
mov
jp,pt
leave
mov
icebp
sti
data16
pop
je
mov
xor
lcall
inc
and
sbb
sub
lea
sub
xor
cli
shl
sbb
and
lea
daa
dec
loop
mov
add
push
roll
xor
lods
movsl
adcb
inc
jle
inc
and
cmp
out
add
adc
jmp
out
pop
sbb
iret
das
icebp
inc
hlt
lods
pop
mov
jne
pop
jae
or
adc
sar
insl
pop
xchg
inc
mov
mov
loop
add
lret
inc
and
pop
icebp
cmp
fsubrl
dec
cwtl
mov
xor
cmp
add
movsb
push
orb
xor
mov
in
pusha
sahf
iret
cld
add
adc
adc
std
mov
enter
dec
bound
arpl
mov
xchg
mov
inc
cmpb
add
sub
push
imul
arpl
cli
xor
jae
push
add
enter
and
jp
inc
add
jne
mov
xor
mov
xor
notl
shll
push
inc
push
negb
in
mov
push
in
dec
push
repnz
xor
pop
int
mov
mov
mov
clc
jno
dec
rcl
fldt
add
lds
aam
push
inc
jns,pt
mov
inc
jns
xchg
scas
loope
cmp
pop
jg
xorl
sub
mov
pop
sbbl
lret
cmc
int
xchg
test
repz
in
je
lahf
popf
testl
push
pop
data16
fsubrs
xchg
mov
jnp
out
mov
je
nop
cltd
insb
mov
sbb
ficoms
cmc
add
mov
dec
es
lahf
push
mov
int
sahf
subl
imul
loopne
outsl
jecxz
jno
push
ljmp
mov
aaa
inc
loop
cmp
jbe
jbe
xchg
mov
or
jmp
das
in
clc
orl
jl
outsb
cmp
out
jbe
into
and
push
rorl
sti
push
gs
pop
lods
add
cmp
add
lcall
inc
sbb
mov
sti
imull
repnz
xor
cmp
cs
xchg
and
fidivl
out
loope
rcl
pop
xor
repz
dec
or
jne
jae
mov
push
xor
mov
lcall
fimuls
out
fs
shrb
sub
out
mov
xor
adc
mov
dec
xlat
dec
pusha
ds
inc
enter
or
mov
fsts
mov
loope
dec
mov
push
dec
scas
es
adcb
jbe
jns
imul
or
sti
xor
repnz
fs
aad
ret
ja
in
in
divl
in
cmp
outsb
xor
pop
stc
push
sub
adc
fmull
jge
jo
cmp
adc
inc
xchg
or
sbb
fstps
push
add
daa
hlt
int
mov
dec
pusha
add
mov
or
sbb
test
xchg
jp
loopne
shll
jb
popa
mov
add
xor
push
mov
das
cmpsl
cs
and
sub
dec
xor
int3
xchg
adc
arpl
ja
loop
inc
ja
inc
mov
outsl
push
ret
scas
arpl
or
das
sbb
xchg
out
push
and
fnstcw
pop
pop
fs
mov
inc
add
pop
pop
xor
cmp
xchg
lret
cmp
xchg
popa
aad
xchg
xorl
scas
mov
dec
out
add
jo
mov
fisubrl
jns
xor
cmp
mov
mov
add
loopne
out
fs
adc
lods
aas
dec
add
sub
or
xchg
jmp
and
lds
xlat
test
icebp
sub
orb
hlt
lds
fldl
movsb
xchg
ss
sbb
add
jne
sbb
je
inc
cwtl
adc
cwtl
push
fcoms
lods
cltd
pushf
mov
or
shlb
lcall
mov
push
mov
lods
mov
dec
jo
test
pop
mov
cltd
js
sbb
cmc
test
push
inc
adcl
pop
and
rol
test
insl
jnp
sahf
stos
cld
rcl
aas
xchg
idivl
dec
pop
sub
scas
clc
outsb
js
push
cmp
addb
mov
das
mov
fdivs
test
sarb
add
mov
lock
jl
mov
add
inc
or
xor
xor
push
cmpsl
fcmovne
arpl
and
std
repz
sub
lock
xchg
es
inc
loopne
test
pop
sbb
ret
mov
adc
jecxz
add
icebp
test
loop
cmpsl
les
jg
adc
jbe
jmp
in
mov
in
test
or
out
xchg
adcl
bound
je
xchg
stc
adc
dec
mov
stos
ss
mov
sahf
xor
mov
aas
andb
pop
mov
adc
sbb
test
adc
bnd
mov
jo
stc
aam
push
adc
cwtl
mov
mov
adc
inc
or
mov
out
push
sahf
iret
lods
ss
sbb
mov
pop
mov
fucomp
jp
xchg
push
lcall
lods
movsb
jle
popl
inc
mov
fwait
pop
dec
test
mov
xor
add
stos
and
outsb
loop
push
stos
mov
iret
cmc
add
xchg
rcll
sbb
lret
iret
dec
cmpsb
push
cs
push
pushf
cmp
lods
imul
push
xchg
negb
or
addr16
push
jl
ja
pop
pop
ja
notl
fsubrs
cmpsb
testl
pop
or
inc
push
mov
cmpsl
or
inc
fxch
scas
jno
sarl
shll
ret
bound
xchg
test
cmp
xchg
out
stos
inc
out
and
pop
lahf
dec
test
fisubs
in
test
rcrb
fstp
cmp
mov
cmp
mov
fwait
icebp
mov
test
sbb
xchg
js
mov
mov
dec
pusha
pop
cmp
xchg
adc
mov
lea
clc
sbb
fwait
or
clc
mov
testb
jo
jmp
inc
and
jno
insl
mov
sbb
adcb
sbb
and
popa
lock
mov
repnz
shrb
push
dec
pushl
mov
push
jmp
mov
clc
push
mov
pusha
rorb
mov
sahf
mov
fldenv
pop
pushl
cmc
ud2
mov
xchg
nop
inc
sub
sbb
push
xor
inc
xor
dec
cmpsl
add
add
sub
pushf
mov
mov
dec
pop
pop
xchg
mov
leave
pop
movsb
movsl
cmp
ljmp
roll
xchg
fadds
cld
sub
test
fimuls
daa
mov
sub
stos
sahf
xchg
dec
ljmp
fisubrl
inc
cmp
sbb
xor
js
lods
or
push
jmp
dec
add
shrb
mov
push
cmp
inc
push
jb
jno
fsub
ljmp
xor
fwait
push
lret
add
sbbl
js
sbb
jle
push
into
jl
lret
imul
jge
pop
or
inc
adc
and
das
xorl
lret
dec
inc
out
fstp
push
rcrb
sbb
cmpsl
je
jp
mov
jne
sahf
xchg
mov
mov
in
push
and
in
dec
mov
icebp
imul
xchg
mov
repz
data16
mov
push
cltd
test
or
mov
sbb
repz
dec
sub
push
mov
add
les
or
cld
xor
xchg
jp
outsl
in
aaa
mov
mov
mov
jmp
cltd
dec
push
mov
push
inc
out
gs
shll
push
pop
adc
es
xchg
pop
pusha
and
out
into
aaa
sub
sbb
mov
cli
popf
insl
mov
test
xchg
test
sbbb
movsb
and
in
or
mov
in
lret
mov
sbb
xor
inc
push
int
gs
fsub
jecxz
sbb
pop
xchg
out
mov
xor
adc
sub
sti
xchg
add
rolb
push
sbb
jecxz
jbe
adc
mov
cld
add
outsl
sub
or
out
pop
in
rorl
mov
push
test
iret
stos
adc
notl
nop
aam
xchg
movsl
in
pop
adc
sahf
es
mov
xor
mov
roll
mov
push
jmp
inc
xor
ljmp
call
pop
push
cmp
jge
pop
outsb
divl
or
psubsb
add
loope
jg
imull
mov
adc
addb
outsb
test
jl
pop
scas
sbb
inc
xchg
or
adc
cltd
jo
lret
in
push
and
pop
push
sbb
push
dec
movl
loope
and
or
insb
aam
inc
mov
test
loopne
push
xchg
loope
data16
inc
mov
mov
ljmp
loopne
lods
and
sub
int3
mov
xchg
jg
shl
outsb
dec
add
inc
js
push
or
add
cs
ja
pop
repz
adc
out
test
jl
out
pop
push
pop
subl
test
and
subb
aad
xchg
adc
fidivrl
out
pop
pop
mov
jg
jnp
sbbb
mov
insl
xlat
jne
push
aad
pushf
mov
or
push
mov
add
rcll
std
ja
push
fdivr
xchg
push
movsb
dec
rcrl
or
cmp
sub
outsb
sub
mov
dec
mov
fadds
sub
lret
xchg
mov
in
bound
push
adc
into
pop
pop
xorb
adc
mov
or
fidivrl
mov
jbe
push
test
cmp
lret
and
outsl
ret
adc
loope
xchg
fistpll
mov
sub
cmpsb
pop
dec
inc
sub
fwait
icebp
into
dec
push
shll
into
fwait
dec
std
mov
cmp
mov
sahf
and
cmpsb
and
out
xlat
hlt
sub
jae
jo
or
inc
push
leave
xor
mov
cli
mov
dec
outsb
cwtl
lret
push
sub
int3
fisttpl
xchg
addb
scas
arpl
cmp
push
leave
push
ja
mov
mov
in
fs
mov
pop
les
in
ret
test
loopne
daa
pop
jmp
fsub
sahf
inc
pusha
add
test
lret
jo
fistpl
fwait
pushf
adc
jle
dec
push
xlat
or
fsub
int3
scas
rcrl
pop
mov
ror
negb
nop
push
mov
sub
inc
int
in
xor
push
xchg
daa
and
xor
cwtl
inc
pop
jmp
popa
jo
pop
dec
inc
insl
icebp
xchg
adc
enter
ficomps
fmull
gs
sbbl
fldenv
inc
xchg
idivb
ja
mov
adc
push
lea
cmpsl
inc
and
fbld
and
pop
jmp
adc
ljmp
jmp
nop
xor
add
dec
jmp
ret
je
rorl
sahf
sub
les
sbb
jo
xor
roll
inc
movsl
jno
jg
and
testl
dec
and
test
repz
inc
lods
mov
xchg
mov
add
insl
shrl
cmc
sarb
mov
cwtl
push
mov
inc
mov
jle
into
dec
pop
sub
movsl
test
iret
rcr
stos
lods
cltd
jmp
fisttps
jp
mov
xchg
xchg
sbb
scas
fcmovnu
pop
es
adc
jl
aaa
pop
icebp
out
insl
add
ret
adc
data16
inc
daa
sti
jecxz
in
xchg
cmp
or
arpl
xor
outsl
cmc
xchg
push
xchg
add
sahf
fs
xchg
pushf
lods
fcoml
aam
mov
jbe
das
mov
inc
jecxz
cltd
loop
cli
push
loopne
test
dec
sbb
push
and
mov
lods
loope
adc
pop
cmp
add
adc
fsubrl
mov
out
mov
cmp
cmp
stc
aaa
imul
or
dec
pushf
sbb
cmpsb
test
ret
icebp
mov
xorb
lret
push
test
dec
cmp
loop
sub
sarl
dec
in
jl
insb
sbbb
dec
or
sub
ljmp
aaa
sub
repz
cmp
mov
outsl
loop
test
pop
das
movsl
imul
or
and
inc
xor
roll
sub
aam
cwtl
out
push
jb
ss
add
cmpb
subl
add
sti
mov
into
icebp
insb
std
add
xchg
lods
shl
pusha
movsl
mov
add
rclb
mov
add
sub
xchg
dec
jmp
or
mov
lock
testb
jbe
lock
and
jo
lock
scas
pop
jne
nop
test
mov
insb
jb
push
mov
test
inc
fiaddl
pop
xchg
jns
and
and
add
aaa
sbb
arpl
mov
movl
add
jp
xchg
adc
dec
push
aad
push
incl
movsl
lret
adc
daa
out
repz
ret
sub
or
pop
sub
daa
inc
pop
inc
outsb
pop
xlat
push
push
arpl
adc
sub
xchg
sbbb
bound
or
and
sbb
cmp
jge
add
push
mov
mov
xchg
in
dec
cltd
mov
test
cmp
aas
dec
imul
mov
bound
sbb
or
cld
aam
mov
sbbb
dec
jecxz
ljmp
sarl
out
mov
inc
in
mov
addr16
adc
sbb
pop
pushf
pop
or
dec
push
stos
push
push
or
push
adc
jmp
sub
jo
ret
rclb
mov
pushf
and
jbe
out
adc
sub
pop
addl
pop
fisubrl
out
adc
shrb
inc
jb
xor
fwait
sarb
inc
cmp
subb
into
inc
ret
push
jge
lds
into
int
pusha
and
sub
mov
mov
sub
xor
and
incl
ds
addr16
and
cmc
dec
add
scas
fsubl
and
jl
jne
jg
ljmp
mov
mov
add
scas
jno
jg
addr16
adc
mov
cld
inc
sahf
adc
sub
ficomps
sarl
stos
inc
add
aam
test
cmp
jecxz
lret
mov
adc
and
push
dec
push
xor
pop
or
test
scas
call
inc
dec
add
sub
lock
inc
mov
push
or
mov
lahf
xchg
out
lds
inc
ds
sbb
xchg
pop
pop
mov
inc
xorb
cmp
inc
rcll
aad
push
jecxz
mov
or
jne
xor
mov
xor
movsb
xorb
push
mov
rcrb
pop
adc
dec
jo
lcall
jg
inc
cmp
insb
mov
mov
sub
cmc
mov
xchg
leave
out
jne
cli
or
adc
xchg
dec
jnp
repz
add
popa
call
inc
fwait
jns
dec
sbb
mov
int
push
imul
into
call
popf
fwait
dec
cwtl
js
dec
cmp
mov
mov
xchg
dec
lea
imul
xchg
pop
inc
push
dec
push
cmp
inc
jmp
daa
pop
xchg
test
sarb
fnstenv
insb
and
jmp
frstor
test
mov
push
inc
movb
inc
add
cmpsb
jmp
push
dec
cmp
fbld
mov
fidivrs
in
mov
and
call
mov
sbb
ja
repz
loope
ljmp
bound
stc
das
cmc
pop
test
das
dec
jnp
arpl
aaa
xchg
jge
sahf
jne
add
mov
mov
xchg
cwtl
les
mov
mov
mov
push
pop
mov
fbstp
gs
cmp
inc
xlat
dec
pop
ficompl
dec
push
push
test
xchg
shrb
mov
fwait
cmp
push
hlt
ss
adcl
cmc
mov
lea
or
pop
push
test
outsb
dec
and
xlat
sbb
dec
sub
mov
pushf
jp
mov
sub
popa
data16
insl
mov
fsubr
xchg
pop
sbb
lods
es
xchg
leave
cmpsl
mov
xchg
in
nop
shl
push
pop
pusha
xor
mov
popf
ret
test
xchg
rcrb
das
mov
test
push
test
gs
int
rcrb
sub
or
push
lods
adc
popa
jg
icebp
jns
push
jmp
int
out
jo
mov
in
je
adc
stos
cmp
jle
dec
shll
lods
pop
rcll
jg
cmp
dec
mov
jae
hlt
bsr
jne
movsl
mov
iret
pop
shll
mov
shrl
mov
and
filds
shl
pop
sbb
jbe
xor
xchg
adcb
sub
sbb
mov
sub
xchg
mov
ljmp
push
ficoml
ss
lahf
and
inc
test
inc
sub
clc
mov
cld
jo
addr16
imulb
out
addr16
mov
lcall
push
jb
xor
dec
jno
cld
push
outsb
mov
push
push
jg
cwtl
pop
lds
jne
mov
fucomp
insb
dec
pop
push
add
or
pop
pop
fdivp
xor
sub
and
clc
inc
jnp
cmp
pop
adc
pop
movsb
or
mov
jecxz
ds
lea
je
adc
scas
pop
insb
adc
imul
sbb
jecxz
xchg
mov
push
aad
cltd
push
lea
xchg
lret
das
arpl
sub
repz
or
lods
mov
push
lcall
xchg
lea
lret
aad
iretw
addr16
push
add
decb
insl
push
mov
cmp
mov
mov
jg
out
inc
or
push
dec
adc
sbb
insl
adc
test
lea
sub
mov
adc
dec
cs
into
cmp
sbb
in
jp
and
sti
loope
pop
xor
scas
mov
sub
leave
cwtl
and
mov
sub
outsb
inc
rcl
popf
scas
hlt
mov
xlat
dec
push
sub
cmp
jecxz
mov
pop
mov
cmp
cmp
shr
dec
mov
lods
jmp
inc
js
cmp
leave
test
cld
iret
daa
jle
cltd
mov
insl
jg
ret
sbb
pop
adc
sbb
sahf
cli
out
adc
inc
lock
or
sub
stos
mov
push
and
sbb
mov
lock
lcall
imul
aad
jecxz
gs
aaa
test
outsl
fildl
xchg
aam
or
movsl
inc
arpl
lds
dec
cmp
mov
adc
pop
stc
lcall
call
jl
jp
or
mov
test
or
ret
sub
mov
pop
cmc
outsb
push
insb
adc
popa
out
test
dec
lock
xor
aaa
test
jge
cmp
mov
xor
shll
add
xor
loop
arpl
xor
mov
xlat
adc
int3
gs
adc
mov
inc
dec
xchg
out
jmp
cmpsl
cmp
insl
sbb
lds
ret
out
shlb
bnd
sub
mov
js
inc
daa
pop
outsb
jp
push
add
and
jbe
jae
es
add
mov
and
out
mov
subb
mov
cmp
or
in
in
lods
pop
movsb
hlt
jno
lea
lret
inc
jl
or
ss
iret
enter
es
lds
jg
sbb
inc
dec
jmp
movsl
mov
xchg
ja
sbb
mov
xchg
dec
push
mov
mov
sbb
and
mov
test
xor
dec
test
push
xlat
scas
loope
mov
fildl
es
call
lea
jbe
rcrl
test
pop
add
test
pop
ror
iret
pop
or
nop
fs
mov
into
lods
mov
ds
insb
outsl
cltd
push
outsl
test
mov
and
out
inc
ja
pop
clc
inc
or
pop
outsl
xchg
movd
sub
sbb
inc
push
sub
pusha
outsl
divl
mov
push
pop
sub
dec
loop
xchg
loopne
dec
cwtl
lahf
push
lods
movsb
mov
fcoml
ret
and
mov
lods
sahf
pop
xchg
mov
testb
sbb
sbb
xor
cltd
xor
popf
or
sub
test
adc
xchg
in
into
gs
movsb
adc
jnp
ss
sub
mov
shlb
jg
sbb
cmp
mov
pop
fwait
movsb
scas
pop
and
sbbl
popf
stos
inc
jmp
ret
stc
pop
push
inc
shr
scas
ror
aaa
jbe
add
gs
aaa
jne
in
and
insl
lods
mov
testb
mov
out
popf
lock
xor
into
ds
sbb
movsb
xchg
jae
or
das
out
xor
pop
in
inc
stc
scas
jns
lds
push
jge
jp
nop
lahf
cmovle
add
or
sbb
ljmp
jecxz
adcl
cwtl
push
xchg
out
mov
mov
mov
repz
inc
inc
cmpxchg
ds
add
lds
adc
fildll
leave
xlat
jbe
das
out
pop
and
jge
lods
and
repnz
mov
jns
jo
xor
pop
mov
mov
movsb
push
push
jl
sbb
or
xor
jp
mov
mov
out
jge
loope
mov
shll
in
xor
sub
adc
jae
xchg
sbb
jmp
dec
je
adc
icebp
inc
or
mov
inc
ljmp
fnstenv
push
fcoml
adc
or
xor
inc
push
sarl
and
icebp
pop
add
lcall
icebp
lret
lcall
pop
inc
inc
data16
fcmovne
add
push
and
ds
jecxz
cmc
inc
jmp
jl
jle
leave
rolb
and
fwait
sbb
shr
jmp
jmp
enter
mov
push
jmp
insb
dec
out
cwtl
mov
int3
int
dec
push
aad
sub
rcl
std
into
aam
mov
cwtl
lea
mov
arpl
sti
sbb
je
das
mov
inc
int3
or
xchg
sub
inc
test
fsubrs
mov
scas
xchg
mov
sbb
xchg
in
cltd
push
sbb
xchg
sti
into
loope
dec
sub
cmp
rcll
test
out
mov
stos
cs
push
sarl
das
sbb
fmull
jmp
or
add
loopne
adc
loope
loop
lahf
ret
mov
jmp
add
leave
mov
or
pop
dec
in
adc
jle
mov
xor
mov
cld
jg
push
lcall
mov
adc
sti
sub
iret
ds
pushf
push
push
fisttpll
mov
ret
ja
push
jnp
shll
mov
hlt
lock
sahf
lods
push
pop
lret
mov
mov
movsl
into
pop
fisubl
or
push
int
inc
jle
xchg
je
xlat
sub
push
mov
cld
cmpsb
std
subl
jmp
test
stos
test
cs
jg
push
dec
repz
xchg
adc
xchg
repz
sbb
or
cmp
adc
lar
sbb
mov
in
mov
mov
sti
jp
jl
js
iret
inc
lahf
adc
loope
jmp
mov
xlat
and
xorl
fisttpll
push
or
or
inc
out
add
push
in
pop
jns
fwait
popf
cmp
add
xchg
dec
add
clc
lahf
or
mov
outsb
adc
pop
add
and
popa
push
fwait
lcall
mov
dec
test
ret
std
mov
cld
inc
sub
xchg
test
das
hlt
loop
in
sbb
sub
cltd
sbb
in
sahf
loope
xor
in
rclb
ss
adc
cmp
push
or
rcll
rorl
lods
pop
notl
and
addr16
jne,pt
or
je
push
mov
cmc
out
and
inc
ljmp
push
jle
aam
test
xchg
or
xor
pop
popa
cmc
sbb
icebp
add
cmp
iret
aam
mov
add
jecxz
test
adc
xor
mov
shl
sbb
fwait
cld
insl
xchg
and
add
xlat
cld
fdivl
xchg
push
cmc
pop
and
lcall
mov
lods
or
stos
fwait
inc
sbb
in
icebp
test
cli
mov
mov
or
lds
jg
repz
dec
and
ficomps
inc
mov
jae
stos
test
mov
imul
xchg
jmp
or
xchg
fcompl
imul
fiaddl
pop
in
fisttpll
adc
mov
hlt
sbb
ret
mov
inc
mov
fstenv
push
rcl
in
or
xchg
dec
dec
sti
lcall
rclb
mov
mov
mov
mov
jb
in
popf
pop
fcoms
mov
jbe
push
sub
jno
and
iret
int
push
cmp
mov
xchg
arpl
mov
and
adc
jg
fidivrs
fnstenv
int3
jle
jp
and
xor
addr16
mov
jns
hlt
aad
pushf
lea
jmp
inc
cmc
pop
cmp
cmpsb
lret
xchg
fnsave
outsb
sbb
js
shll
leave
test
xchg
enter
outsb
out
adc
dec
je
stc
jo
mov
inc
mov
cltd
out
das
outsb
cli
ds
inc
xchg
rclb
repz
fdivs
lahf
inc
sahf
jmp
mov
pop
mov
es
jl
test
test
insl
cmp
push
inc
pusha
inc
ljmp
push
pop
sub
iret
clc
pop
push
xchg
xor
add
insl
lods
jecxz
fdivr
and
push
jle
dec
ds
lcall
sbb
adc
push
sbb
pop
cmp
rcrl
sub
cwtl
ljmp
repz
lcall
lods
fwait
push
sti
jno
rclb
sub
sbb
xor
jnp
mov
mov
roll
nop
push
ja
push
xchg
jecxz
sub
out
sub
jnp
mov
imul
test
fdivs
mov
in
mov
jle
lds
push
mov
cld
mov
push
fwait
insl
mov
mov
mov
push
test
cltd
push
cli
ja
fsts
mov
mov
inc
aad
sbb
jb
pop
push
addr16
mov
mov
xor
add
int
pushf
adc
rorb
dec
jo
push
xor
push
or
iret
pop
xor
dec
xorl
imul
xchg
insb
mov
cmp
jle
xchg
sti
sbb
mov
add
cmp
and
dec
or
sub
xchg
xchg
inc
sbb
aaa
jecxz
push
sbb
dec
loopne
xchg
sub
movsl
push
lods
imul
jns
push
xchg
pop
pusha
inc
cmp
xchg
sub
lret
ud0
call
mov
nop
sarl
fdivr
es
out
insb
testb
daa
mov
push
cli
dec
into
aaa
or
push
mov
pop
pop
adc
shll
or
and
and
and
sub
mov
push
int3
and
leave
push
stos
and
push
les
mov
mov
mov
in
cwtl
cld
jge
je
or
mov
pusha
js
push
pop
fistl
push
push
repnz
inc
pop
xlat
sub
xor
mov
pusha
sub
outsb
aas
fwait
xor
test
aaa
mov
or
xor
pop
nop
mov
push
mov
ss
stos
sbb
mov
jecxz
aas
cmc
cs
shrl
aas
les
enter
mov
popa
mov
lds
push
mov
jp
inc
lock
rorb
sbb
mov
dec
pop
mov
jne
sahf
push
push
xor
repnz
lds
int
and
mov
pop
cs
lds
dec
outsl
pop
inc
out
and
pop
nopl
or
cmp
cmpsb
popa
bound
mov
sti
rcrl
jg
jp
or
push
movsb
enter
fldl
mov
xchg
cmpsb
xchg
dec
add
testl
mov
mov
push
mov
pop
imul
sbb
mov
adc
sbb
dec
mov
pop
nop
stc
das
movsl
push
lahf
lea
pop
imul
mov
imul
test
xchg
push
mov
xchg
xchg
push
fdivrs
rorl
inc
adc
lock
shlb
sub
jno
jns
dec
mov
lea
jl
popa
cmpsl
inc
mov
sbb
sbb
xchg
mov
ds
in
sbb
or
sbb
test
cmp
pop
push
lods
out
testl
popa
and
and
push
lret
out
test
arpl
inc
sub
mov
pop
dec
jg
and
stos
repz
imul
ds
adc
pop
sub
sub
pop
sti
pop
pop
outsb
sbb
adc
push
test
test
and
inc
jno
je
push
add
xor
data16
mov
scas
fisubs
out
pop
cs
bound
cmp
cs
add
cli
movsl
mov
sub
std
jecxz
xchg
test
test
pushf
lea
rolb
aad
xor
es
adcb
jb
or
clc
mov
fists
cwtl
inc
ljmp
xchg
add
insl
fs
out
test
xor
cmp
fidivl
and
shlb
sub
fwait
pop
lods
inc
shlb
inc
mov
fcmovnbe
aaa
or
lahf
sbb
shrl
dec
imul
sti
out
rorl
pause
add
mov
sub
lods
cmp
add
dec
jnp
das
mov
je
rorl
rcrl
mov
es
sub
outsb
mov
clc
mov
aad
jle
cmc
jmp
jns
sub
mov
sbb
sub
xor
ja
or
fs
mov
lahf
cmp
cmp
sti
lods
mov
pop
cs
and
mov
mov
int
pop
jmp
add
cld
mov
mov
ss
insb
sahf
rorl
lret
dec
fsts
sub
sbb
call
stc
out
pop
decb
or
pop
cmp
xchg
sub
push
aad
aas
sbb
testl
repz
pop
jno
dec
dec
push
dec
fistpl
jno
imul
sar
and
ss
int
mov
push
dec
or
xchg
push
or
xchg
sub
mov
into
cmp
cltd
xchg
out
scas
movsl
inc
add
call
roll
outsl
aad
or
xchg
and
inc
fisttps
mov
out
scas
repz
mov
add
push
in
fxch
mov
jp
popa
mov
or
jmp
sbb
fimull
push
repz
cmpsl
inc
mov
arpl
jno
inc
xchg
and
insl
pop
aad
or
dec
sbb
scas
loop
jp
scas
int3
adc
xor
addb
out
push
out
out
es
insb
add
fwait
inc
and
mov
or
sub
shll
gs
popa
and
xor
xchg
xor
sub
sbb
int
data16
aad
adc
mov
adcl
xchg
mov
int
rcll
mov
aas
into
dec
mov
test
fisttpl
mov
fildll
mov
sbb
mov
xchg
pop
pop
shrl
lock
inc
xor
push
add
xchg
jge
imul
lahf
stc
sub
sub
fcoml
xchg
inc
push
sub
jp
fiadds
roll
inc
add
jnp
adc
outsl
mov
push
fldcw
xchg
push
repnz
cmp
lea
test
sahf
insb
jecxz
push
in
xor
and
ss
cwtl
cmc
mov
test
nop
adc
jb
pop
outsb
add
mov
imul
jne
mov
leave
xchg
sub
pop
xor
pop
mov
icebp
popa
scas
dec
adc
aas
mov
ds
orl
leave
mov
add
inc
pop
sarl
add
push
stc
cmp
sub
xchg
leave
icebp
icebp
push
and
outsb
fcom
in
ljmp
xor
push
fs
in
in
mov
mov
aam
cwtl
dec
push
enter
nop
loopne
cmpsb
xchg
test
hlt
in
push
sbb
addl
xchg
or
sahf
jb
outsl
sbb
dec
stos
inc
fnsetpm(287
ret
mov
cmpsb
fwait
mov
mov
mov
sub
sbb
dec
add
push
lock
mov
js
fstpt
jbe
dec
aad
pop
out
mov
icebp
lcall
jne
push
add
mov
push
test
loope
xor
int3
jns
js
icebp
cmpsl
adc
cmp
and
dec
pop
aad
jp
fldl
jo
mov
xchg
xchg
pop
jbe
int3
xchg
loope
sahf
mov
js
or
pop
cmp
inc
fidivl
scas
sti
sub
sbb
push
xchg
cld
pusha
pop
xchg
mov
inc
or
fucomip
xorl
frstor
add
loopne
lahf
cli
push
ss
dec
pop
or
jecxz
push
pop
negl
out
sar
fiadds
mov
pop
pop
dec
rolb
mov
dec
adc
data16
fldcw
mov
ret
mov
mov
or
mov
adcb
cmp
shll
jae
xlat
push
xor
push
sbb
adc
shlb
aas
int
call
stos
xor
sbb
xor
hlt
push
in
xor
pop
addr16
sarl
jb
adc
xor
and
push
pushf
out
sti
stc
adc
sti
cmp
sahf
mov
sbb
mov
loopne
mov
mov
sbb
hlt
ja
push
jbe
jmp
stos
push
ljmp
lret
loopne
jmp
jns,pn
stos
cltd
ss
xchg
cmp
andb
inc
mov
inc
adc
test
inc
add
cltd
cwtl
jle
fwait
repz
xor
js
and
movl
imul
jno
shrb
fs
fcomp
test
pop
jno
loope
jae
dec
imul
repnz
test
scas
pop
cmp
shll
jns
inc
gs
add
mov
xchg
outsl
cwtl
push
add
push
xor
or
loopne
dec
pop
push
inc
and
cmp
adc
sbb
jecxz
flds
push
cmp
mov
inc
js
mov
sub
push
cmp
add
pop
mov
mov
and
inc
mov
xchg
int3
push
stos
and
pop
xchg
sbb
out
in
jp
push
cmp
xor
bound
push
stos
mov
pop
sub
shll
sbb
cwtl
shrl
jg
lods
stos
cmc
pop
subb
mov
les
inc
mov
pop
pop
lods
enter
mov
xchg
jge
out
jae
dec
lret
bound
insb
fs
aaa
arpl
xor
pop
mov
shlb
loopne
lods
stos
icebp
ret
dec
cld
jle
dec
std
mov
popa
inc
insl
mov
sub
xor
pop
mov
sub
scas
xchg
mov
imul
and
or
mov
fisubrs
pop
sub
dec
movsb
aad
adc
inc
and
xlat
pop
push
mov
xor
add
cld
pop
loopne
jg
and
pop
in
sbb
ss
adc
fldcw
or
mov
sbb
insb
pop
lret
aam
xchg
in
sti
add
and
dec
out
inc
lcall
mov
loope
out
mov
add
cmp
jne
aaa
decl
loope
adc
hlt
jae
adc
imul
cmpsb
pop
add
ljmp
xchg
test
mov
jmp
push
xchg
bound
addl
and
mov
arpl
cli
lahf
nop
sub
dec
adc
sbb
ljmp
shll
ljmp
and
insl
and
cmp
xchg
mov
jb
test
or
enter
negl
or
add
shl
es
je
daa
adc
out
mov
push
loope
mov
pop
mov
jmp
xor
and
test
mov
xchg
iret
inc
jp
xchg
scas
mov
pop
aas
in
loopne
fisubrl
lea
fdivs
push
push
mov
inc
mov
mov
pop
dec
out
or
insb
lret
mov
pop
shl
mov
adc
into
lds
jne
mov
sti
cld
adc
inc
daa
cmp
inc
xor
jae
imul
mov
mov
cmp
js
xor
dec
cmp
jl
mov
test
dec
sbb
jnp
mov
sti
addr16
ja
fsubs
jg
add
rcl
and
add
into
lea
pop
mov
pushf
mov
rorb
mov
hlt
push
cmp
fwait
mov
jne
xor
idivb
cmpsb
sbb
xchg
pop
flds
repnz
hlt
aas
push
std
xlat
dec
mov
adc
pop
shr
add
sbb
sub
sbb
sbb
or
repz
fwait
sub
cmpsl
les
cs
loope
cmpsl
lahf
mov
inc
add
push
cmp
pop
jl
flds
repnz
jnp
xchg
inc
push
mov
fimull
aaa
cs
ret
test
inc
pushf
fcoml
in
jbe
lea
stos
xchg
adc
hlt
push
and
dec
sub
ss
push
test
xor
lret
mov
xor
push
and
pop
lret
mov
push
xchg
adc
xlat
lods
push
es
xchg
rcr
push
imul
pop
jle
mov
es
sahf
int
arpl
dec
jg
lock
cmp
or
sub
stos
pop
jge
insb
pop
std
repnz
fwait
testl
inc
in
iret
push
and
fwait
push
lret
sbb
out
and
jmp
stos
fcoml
and
int
or
lods
sbb
push
imul
rorb
adc
sbb
rorl
daa
push
inc
outsl
xor
std
inc
pop
add
fdivrs
enter
faddp
jno
or
test
mov
push
mov
or
pop
sti
loopne
or
inc
lods
and
fstps
jl
xchg
lods
call
lahf
addb
sub
add
ret
data16
xor
dec
call
adc
push
dec
jmp
and
lock
xchg
lcall
lcall
pop
mov
jns
scas
jl
testl
fnstenv
sub
xchg
int3
xchg
out
mov
and
shrl
xor
adc
test
inc
adc
mov
push
xor
push
push
mov
fimull
dec
add
ret
fistpl
dec
lret
pop
jg
aam
or
ds
mov
dec
loopne
out
repz
pop
jns
sub
addr16
or
popa
jne
insl
arpl
mov
xor
add
pop
and
jb
sbb
insl
mov
iret
jns
cmpb
daa
ror
test
pop
pop
adc
aam
scas
sub
xchg
sbb
std
rcr
imul
cmpsl
lahf
mov
insl
jo
jno
pop
lret
push
das
sub
sbb
mov
jecxz
push
xlat
stos
in
fistpl
inc
in
lret
cmp
jns
popa
jge
jmp
jg
idivb
adc
leave
xchg
or
sub
in
xchg
jbe
cmp
xchg
clc
mov
ss
iret
ror
push
es
scas
call
pop
out
mov
lds
int3
inc
add
mov
jl
push
pop
sub
rcll
mov
fsubl
jbe
stos
cmc
lods
enter
jno
mov
call
add
or
xor
shl
push
push
push
arpl
pop
repnz
mov
cmp
cmpl
js
pushf
ret
mov
sub
lods
sub
push
jge
arpl
aaa
and
ja
pop
mov
cmp
push
jmp
mov
iret
jle
int
jle
std
xchg
mov
mov
ror
in
xchg
les
inc
je
push
lahf
or
arpl
scas
std
mov
and
mov
in
cld
cld
pop
pop
adcl
int3
aam
lahf
es
lds
arpl
mov
ffree
cmpsl
mov
inc
and
outsl
dec
cmp
xor
ds
aaa
cmp
inc
mov
xor
xchg
xchg
jmp
jmp
jg
inc
cltd
cmp
outsl
xchg
jne
mov
adc
je
pop
je
mov
and
sbb
inc
fstps
aam
imul
xchg
mov
data16
jmp
jo
js
pop
icebp
push
bswap
adc
mov
mov
in
and
mov
mov
lahf
pop
sbb
frstor
jg
mov
arpl
adc
mov
mov
shlb
pop
push
ds
sub
push
clc
out
cmp
adc
aam
mov
cltd
xor
cld
loop
loope
das
out
or
lods
ljmp
cmp
lds
inc
jle
stos
fs
daa
das
push
mov
sarl
fcomip
out
jo
sti
mov
cmpsl
sbb
jo
lods
sti
out
adc
aad
pop
mov
mov
cltd
dec
cmpsl
stos
js
mov
ja
and
imul
xor
int3
popf
jg
jb
adc
xor
mov
popf
cltd
sahf
mov
call
jo
xorb
sub
pusha
dec
push
clc
sub
adc
dec
pop
js
add
push
jnp
js
mov
adc
mov
pop
test
push
scas
incb
adc
dec
es
out
xchg
mov
mov
je
push
scas
addl
push
sub
xor
in
rorl
mov
jp
add
popa
sub
stos
hlt
push
pushf
xor
test
icebp
sbb
movl
and
sahf
sbb
sahf
add
xlat
es
lods
repz
push
dec
adc
cli
movsl
leave
inc
ds
testb
push
aas
cmpb
cmp
out
mov
mov
xchg
push
dec
cmpb
mov
push
jl
mov
lret
outsl
push
sub
add
dec
movsb
enter
test
adc
call
jg
mov
mov
out
mov
inc
and
sub
mov
into
inc
mov
push
mov
int3
int
mov
insb
adc
out
out
sub
push
das
or
jl
jae
addb
sbb
cmp
popf
movsl
xor
or
sbb
and
stos
fwait
es
lods
mov
out
xchg
das
adc
adc
mov
roll
lods
je
ljmp
aas
xorl
mov
adc
or
bnd
jg
lret
add
daa
xor
ja
mov
xchg
add
mov
pop
xchg
xchg
or
lds
mov
pop
xchg
jbe
call
out
sub
push
xor
repz
sub
or
or
idiv
leave
add
std
pop
rcr
lahf
cmp
mov
pusha
mov
test
stc
rcrl
or
mov
dec
pop
jg
inc
ret
pop
popa
mov
aad
xor
and
sub
cltd
in
lahf
gs
ja
inc
cmp
mov
enter
mov
pushf
stos
jl
imul
cmp
lds
xchg
test
popa
icebp
jno
repz
out
add
mov
inc
push
std
lea
inc
ljmp
jb
in
jp
lret
ret
dec
xor
vshufps
and
andl
push
push
mov
mov
movsb
adc
inc
insl
sub
scas
push
ljmp
aas
out
dec
call
push
pop
mov
jno
pop
mull
dec
in
jns
adc
insb
jmp
sub
inc
pop
out
bound
xchg
xlat
fisttps
or
or
or
jns
lds
insb
popa
and
cs
mov
add
pushf
lds
mov
roll
loopne
bound
ret
inc
jge
leave
int3
push
and
jnp
add
fbld
test
lock
xchg
ret
add
outsl
dec
jnp
xchg
sbb
stos
ljmp
xlat
gs
lock
adc
out
push
lahf
inc
les
mov
sahf
stos
push
sarl
xchg
dec
iret
or
and
mov
add
or
sbb
test
inc
out
shl
outsl
xor
xchg
sbbl
push
shlb
cltd
and
pop
mov
out
push
int
add
dec
int
pop
pop
inc
lods
inc
xchg
jg
mov
sbb
mov
loop
int
imul
fimuls
es
loope
jbe
sub
test
pop
movsl
addr16
hlt
int3
pop
mov
lretw
mov
jnp
test
sbb
loop
jne
mov
pop
stc
insb
call
dec
push
call
incb
dec
mov
fadds
and
ss
jnp
hlt
mov
nop
xchg
sbb
pop
inc
ds
inc
mov
imul
lods
lret
sub
jo,pn
push
call
movsl
imul
psubq
stos
in
push
das
outsl
xchg
inc
aaa
popa
xchg
jne
scas
jnp
jl
mov
fwait
sub
and
inc
dec
stos
adc
jb
sti
inc
lret
imul
js
mov
dec
scas
aad
inc
popa
jo
pop
gs
mov
dec
xchg
push
addr16
push
lods
imulb
mov
jecxz
repnz
xchg
mov
adc
sbb
add
sbb
mov
fistl
push
shl
adc
pop
repnz
xor
sbb
filds
mov
in
rcrl
fcoms
in
sub
sub
push
xchg
mov
mov
xor
mov
mov
mov
test
inc
push
sar
lret
shll
sub
movl
stc
or
pop
sti
mov
inc
loop
test
loop
fcom
mov
jp
sti
cld
jns
sub
jo
add
les
bound
nop
pop
mov
stc
nop
sbb
fisttpll
fisubrl
ficomps
arpl
popf
cs
jb
jmp
test
fildll
mov
arpl
fwait
push
js
xor
fiaddl
push
inc
ffreep
sti
inc
cmp
lahf
cwtd
not
dec
inc
mov
popf
das
popf
dec
std
popf
and
mov
hlt
je
and
sub
lret
ret
pop
push
cmpsb
inc
das
scas
push
add
es
andl
js
cli
das
or
mov
mov
jle
xor
jp
repz
rolb
repnz
lea
cltd
jge
pushf
cmp
pop
arpl
adc
inc
aam
dec
fadds
xor
sub
or
pop
outsb
faddl
jge
inc
add
sbb
push
fbstp
sub
ljmp
scas
test
pop
repz
inc
ds
insl
mov
sub
sbb
cwtl
cmpsb
insl
mov
mov
aaa
fs
test
gs
push
pusha
mov
test
es
movsb
push
in
jnp
enter
scas
cmpsb
ret
or
gs
mov
mov
dec
jmp
scas
in
adc
or
dec
xchg
add
jecxz
bound
mov
adc
xchg
and
xor
jns
test
aad
repz
or
cli
popf
jmp
pop
xchg
je
sub
push
add
cmp
shlb
lds
inc
fcoms
imul
adc
inc
sbb
adc
stc
std
fsubrp
loope
arpl
jg
lahf
pop
lods
and
lea
jo
mov
dec
rcrl
dec
scas
bound
lret
mov
es
xlat
in
push
push
adc
int3
xor
xchg
add
jae
fbld
test
hlt
fs
adc
hlt
inc
mov
fldenv
gs
adc
into
pop
call
mov
cmp
xchg
pusha
loopne
out
bound
jne
jp
dec
rcr
subb
or
int
sbb
jle
push
jno
xchg
popa
jns
repz
add
cmp
and
xchg
push
mov
ret
sub
add
mov
sub
cwtl
cli
push
xor
int
inc
and
pushf
mov
fisttpl
add
bswap
sub
in
cmpsb
stos
xor
cli
or
mov
mov
fnsave
js
clc
push
mov
and
fs
lret
xchg
pop
mov
and
jb
jecxz
jne
add
mov
scas
lret
roll
repz
mov
sub
cmp
add
mov
mov
lock
out
bound
pop
loope
push
loop
jmp
nop
mov
lds
fidivl
popf
cmp
hlt
push
sbb
incl
rolb
xchg
rorb
icebp
lidtl
lret
mov
pop
lods
std
outsl
clc
adc
add
sahf
dec
mov
das
push
mov
sbb
mov
xor
sti
jmp
push
rorb
push
dec
push
lea
dec
jecxz
stos
sub
bound
je
nop
pop
jp
cmp
add
jns
lods
enter
js
inc
push
pop
cs
inc
test
loop
lods
out
stos
push
pop
sub
in
or
mov
push
cmp
clc
jae
stos
xor
cmp
or
mov
rorl
mov
jne
in
cmp
add
xor
or
daa
das
push
or
push
lret
push
cmpsb
popw
cmp
sbb
mov
push
sub
adc
call
data16
jb
pop
jno
push
popf
jecxz
mull
hlt
test
pop
inc
mov
pop
sub
mov
pop
movsl
es
xchg
mov
stos
repnz
inc
dec
call
ret
repz
repnz
xlat
out
cmp
pop
dec
stc
pop
insl
xlat
pop
dec
loopne
inc
xorb
in
inc
add
repnz
into
inc
js
lea
mov
insl
sbbl
mov
adc
pop
add
xchg
jge
addr16
popf
sbb
int
int
dec
lock
aaa
outsl
pop
nop
adc
mov
push
sbb
mov
mov
xchg
dec
imul
data16
mov
icebp
lods
gs
jp
into
lods
xor
xlat
jns
xor
rolb
mov
sarl
dec
inc
stos
sbb
mov
mov
mov
push
mov
lcall
fldenv
test
test
je
pop
sub
test
xchg
mov
xor
jg
adc
repz
dec
bound
push
leave
jno
lret
adc
mov
push
arpl
fnsave
mov
mov
or
adc
sbb
stos
loope
lods
mov
addr16
rcr
enter
das
outsl
mov
scas
addl
testb
sahf
push
aad
mov
inc
add
call
mov
call
add
les
sbb
jge
out
sbb
pop
xchg
in
cmpsl
loopne
fistpll
addr16
mov
into
retw
add
mov
js
fnstenv
dec
loope
scas
pushl
xor
mov
mov
xor
daa
sbb
clc
cmp
push
lods
cmp
cld
mov
test
sbb
pop
int
push
and
mov
imul
dec
sbb
and
orl
mov
fmull
and
fcomp
adc
or
sbb
outsl
mov
cltd
xor
pop
or
mov
int3
mov
mov
mov
fidivs
pop
pop
push
push
pusha
push
pop
and
stos
mov
cld
push
jmp
mov
ret
into
mov
out
das
repnz
and
jmp
mov
xor
cmp
loop
fstpt
or
ret
dec
icebp
ret
jecxz
xlat
cmc
cmp
jmp
or
mov
leave
add
lods
sbb
dec
test
cs
mov
jp
xchg
push
mov
test
stc
cmp
mov
fidivrs
sub
dec
lret
ret
mov
sbb
mov
les
xchg
aam
and
outsl
or
cld
pushf
sarb
xchg
imul
lcall
dec
inc
cmc
shrb
mov
adcb
fsubrs
inc
dec
bound
rol
daa
adc
inc
jne
adc
cmp
xor
pop
push
and
mov
mov
nop
movsb
push
xchg
decb
les
out
adc
iret
push
fs
leave
div
addr16
pop
mov
push
daa
pop
testl
push
pop
and
repnz
jmp
or
std
xchg
into
aas
stos
arpl
pop
lock
bnd
pop
fdivs
pop
dec
lahf
and
jns
test
push
mov
subl
movsl
mov
ljmp
out
xchg
fists
lahf
cwtl
and
test
push
xor
test
xor
rcll
out
outsb
insb
mull
adc
shrb
push
inc
sbb
and
out
add
sub
mov
xor
jo
imul
cmp
out
pop
jno
xchg
add
or
jo
jbe
js
repz
jge
or
pop
nop
cmpl
and
pop
into
sahf
outsb
jmp
xor
out
sub
mov
sbb
sbb
out
pop
sub
dec
jns
pop
or
lahf
push
out
inc
pop
add
out
dec
out
into
dec
and
push
idivb
mov
and
jle
nop
push
push
pop
andb
outsl
ss
mov
loopne
inc
std
lock
cs
cmpsl
gs
cmp
aam
lods
ret
and
adc
jo
mov
dec
fmuls
xor
or
add
xchg
mov
push
aad
mov
fisttps
aaa
enter
sub
enter
cmpl
add
and
in
rcr
lret
mov
or
jle
push
or
fisttpll
popf
inc
rcll
shll
sub
jecxz
add
jae
mov
mov
hlt
jle
xchg
repz
mov
jne
jp
jne
sbb
xchg
sbb
inc
jne
pop
push
ss
loope
fcompl
or
scas
test
cmpsb
sbb
sub
or
verw
ret
outsb
lahf
dec
pop
mov
dec
inc
xlat
imull
push
inc
cmp
fwait
xchg
mov
xor
sbb
insl
cwtl
push
jnp
push
sub
cmpsb
lds
lods
aam
pop
es
mov
out
or
sub
jbe
loop
movsb
mov
dec
dec
inc
push
jbe
pop
fimull
lretw
outsl
xchg
add
sahf
cld
mov
pop
push
enter
repnz
push
bnd
inc
loopne
mov
rorl
stos
mov
pop
mov
xor
fmuls
loop
cmp
xchg
js
pop
mov
dec
xor
aas
mov
xchg
add
and
sub
mov
lods
movsb
pushf
mov
ja
jmp
cmp
lods
jecxz
int
or
lock
push
push
into
or
cmp
roll
jae
push
xchg
loop
xchg
dec
xor
mov
scas
fists
js
loope
jne
jns
lcall
mov
test
inc
add
pop
inc
hlt
or
mov
stos
lret
lock
sbb
push
xchg
mov
frstor
push
push
shlb
or
mov
pop
or
leave
outsl
sti
pop
shl
jle
cmp
push
std
or
out
xor
sbb
xchg
adc
push
pushf
ror
and
pusha
xor
adc
jge
sub
adc
loop
add
outsl
shrb
rorl
outsl
cmpsb
pop
xchg
cmc
inc
or
iret
sbb
out
and
lods
pop
daa
inc
cmpsl
test
idivl
push
out
inc
repz
fs
ss
je
jp
mov
imul
fwait
pop
pusha
outsb
xchg
pusha
dec
outsl
jne
std
cmp
xor
cltd
xchg
xor
in
and
roll
push
mov
movsl
jl
loopne
cmp
inc
outsl
mov
push
jge
lock
dec
bound
sbb
mov
cmp
mov
jle
in
iret
mov
jae
into
push
inc
pop
aad
xor
or
jl
in
in
mov
test
mov
ss
daa
sahf
in
mov
in
or
fdiv
pop
test
jo
std
into
and
stc
cwtl
sbb
mov
paddq
das
decl
loop
pop
mov
addr16
add
push
jno
sbb
fldenv
out
loopne
cmpsb
push
das
mov
mov
cmc
lahf
and
mov
daa
repz
inc
add
iret
fs
adc
int
inc
into
loope
sbb
push
xchg
sbb
mov
sub
shlb
fs
inc
xorb
clc
pop
pusha
xchg
sbbb
es
bound
cmp
mov
cltd
test
xorb
popf
dec
insb
mov
pusha
mov
sti
insb
cltd
push
or
sti
out
lds
les
sbb
sbb
jne
push
in
or
test
in
or
push
int
dec
xor
sbb
loopne
imul
mov
dec
inc
lahf
pop
dec
mov
idivl
int
and
sub
or
es
pop
and
xchg
addr16
dec
inc
add
mov
push
mov
or
in
add
rcrl
arpl
movsb
mov
in
sub
cmp
ss
or
mov
adc
imul
adc
adc
sbb
xor
sti
mov
lds
sbb
mov
mov
xchg
test
pop
scas
inc
sub
ror
or
imul
shr
jne
mov
xchg
fidivs
test
add
xor
hlt
pop
jnp
mov
js
pushf
clc
scas
jge
out
out
add
and
dec
in
out
int3
popa
and
mov
aaa
mov
pop
pop
mov
lahf
subl
test
je
stos
pop
add
xsha1
cmpsb
mov
mov
gs
mov
xchg
pop
movsb
adcb
push
aad
dec
sbb
mov
stos
fsts
mov
mov
cmp
sub
adc
aaa
mov
daa
inc
mov
xchg
sbb
cmp
dec
pop
out
pop
repnz
xor
loopne
sarl
sbb
data16
sahf
cmpsb
inc
hlt
jns
hlt
xchg
and
push
cwtl
rolb
sbb
js
imul
mov
xor
fisttpll
xchg
nop
es
xchg
and
inc
push
repz
fnstenv
mov
mov
rcrb
iret
xchg
sbb
nop
or
dec
cli
int
mov
je
jp
cmpl
jnp
cmc
pushf
cld
stc
and
fcompl
dec
popa
shll
call
mov
cmp
adc
popf
mov
push
icebp
inc
pop
xchg
xor
dec
jmp
and
xchg
aas
push
dec
adc
lahf
mov
or
dec
stos
loopne
vmovq
jno
push
fs
adc
cli
cmp
adc
or
jns
movsb
shr
cli
jl
pop
jmp
dec
stc
adc
nop
fisttps
test
loope
movsl
int
sub
aad
repz
xchg
stc
mov
and
insl
mov
pop
arpl
in
xchg
daa
mov
xor
dec
cmp
dec
scas
in
inc
adc
mov
call
aam
in
out
enter
xchg
out
lret
inc
sbb
add
mov
fisttpll
mov
clc
cmp
xchg
mov
pop
lea
lods
push
les
cmp
cmp
arpl
and
imul
leave
pop
lahf
push
or
or
push
mov
xchg
ss
cltd
dec
out
ds
lock
gs
xchg
sbb
pop
popa
mov
dec
mov
push
test
fstpt
cmp
stc
fistl
xor
adc
test
mov
sbb
push
xchg
ja
mov
enter
incb
lret
cmpsb
push
aad
xchg
or
mov
das
cmp
sahf
push
mov
testl
iret
pushl
bound
xor
xchg
pop
jns
cwtl
fisttpll
dec
push
sub
out
sbb
rcrb
push
mov
stc
mov
xchg
xlat
inc
mov
adc
lds
push
mov
dec
adc
and
int3
rol
insb
ja
push
stos
test
test
dec
xor
orb
insl
pop
cmp
ret
or
cmpsl
in
xchg
addr16
mov
add
mov
lcall
lods
dec
dec
mov
xorb
call
jecxz
or
xor
inc
add
lock
dec
mov
fstpt
loop
aaa
out
pop
icebp
loope
sub
out
sub
cmp
jg
imul
je
xor
jle
mov
hlt
adc
mov
aas
or
xchg
cld
xchg
daa
push
push
jbe
xor
enter
adc
push
fistpl
jo
push
mov
clc
jmp
xchg
add
add
sarb
rclb
mov
dec
repnz
sub
ret
jns
mov
pop
loopne
dec
inc
adc
test
xchg
jl
lcall
xor
imul
lds
jmp
ja
add
bound
pop
gs
data16
adc
loope
test
nop
xchg
aaa
clc
pop
mov
mov
fcompl
pop
sub
daa
jge
lret
pop
xor
cmp
les
ds
rol
fdivrs
jnp
cld
adc
mov
mul
mov
js
addr16
xor
mov
or
pop
data16
int
add
jg
add
or
cwtl
mov
or
cltd
push
and
je
call
mov
rorl
mov
pop
inc
and
scas
stos
outsl
sbb
in
adcl
push
dec
xchg
adc
in
out
addr16
dec
test
loopne
jo
aad
xchg
fstl
jecxz
adc
mov
mov
adc
jl
test
loop
sti
xchg
adc
adc
mov
adc
bound
clc
rcrl
arpl
fcoms
jno
lret
addr16
mov
xchg
pop
dec
in
push
loop
maskmovq
notl
or
or
push
out
xchg
neg
mov
mov
bound
aam
dec
cwtl
lds
add
stc
jbe
stos
call
inc
mov
adc
ja
xor
enter
nop
mov
push
or
ret
inc
testb
lock
out
arpl
or
and
pop
popa
cmp
or
inc
decl
out
pusha
dec
inc
sub
popf
add
adc
push
xlat
push
pushf
aas
movsl
lret
aam
lods
pop
xor
xor
cmp
rcrl
movsl
push
xchg
push
lcall
sub
pop
mov
in
and
mov
jo
stos
nop
pop
mov
add
push
mov
shlb
mov
imulb
sub
add
inc
fistpl
adc
mov
test
add
arpl
dec
cmp
popa
bound
inc
dec
xlat
test
fwait
loop
mov
leave
hlt
dec
mov
rclb
mov
mov
xchg
jmp
pop
sub
nop
loop
adc
addl
pop
aam
push
cltd
out
dec
dec
mov
lods
push
aad
sbb
lret
sti
add
push
adc
popf
add
mov
mov
pop
outsl
pop
pop
mov
add
push
pop
cli
mov
loopne
jecxz
dec
and
xor
sub
sub
movsb
pop
das
imul
mov
lahf
into
movsl
jbe
xor
xor
xchg
mov
sbb
sbb
mov
ljmp
addl
lcall
jns
push
push
sbb
cwtl
xchg
xchg
or
or
push
js
xor
add
add
out
aad
int
dec
mov
xor
inc
push
rcll
sbb
push
cmp
cmp
inc
pop
fnstsw
cmp
add
cmp
nop
dec
jne
and
sub
cmp
cli
in
jnp
and
pop
inc
jo
sub
push
dec
icebp
xlat
mov
sbb
push
and
jge
and
adc
es
scas
xchg
imul
ret
jnp
jle
cmp
jae
in
ret
repnz
push
jge
sbb
sysexit
inc
pushf
dec
jne
inc
add
lods
test
cmp
test
pop
xchg
xchg
cli
popa
setle
mov
ret
data16
mov
lcall
and
sbb
pusha
ret
or
jmp
int
adc
insb
sbb
jge
enter
mov
mov
xor
outsl
ftst
rcl
shr
lcall
and
or
iret
pop
stos
ljmp
lcall
jp
sub
xchg
or
cs
sbb
sarb
jb
xchg
ja
cmpb
xchg
lahf
cmp
xchg
imul
mov
in
dec
shll
xor
push
add
cmpb
xorb
push
aam
xor
push
outsl
push
pusha
enter
pandn
out
sub
cmp
lahf
sbb
jl
mov
jl
mov
inc
xchg
jno
sbb
add
mov
cmp
jle,pn
lcall
inc
push
adc
cli
push
in
and
cmp
push
dec
dec
lcall
arpl
out
aam
or
call
mov
inc
fimull
ret
or
inc
dec
pop
add
lds
mov
mov
cmp
rclb
clc
push
out
dec
cltd
sub
dec
mov
xlat
popa
lahf
pop
push
pop
pop
loop
pop
inc
sub
dec
jb
jae
and
mov
xor
fs
fwait
mov
in
dec
mov
in
push
into
lock
fbstp
in
cwtl
pop
mov
dec
push
fs
inc
fldcw
cmp
mov
push
popf
loope
lcall
jp
sbb
fptan
lret
push
test
jne
lahf
rcll
dec
ljmp
arpl
repz
jne
push
aaa
xchg
and
int
fnsave
mov
push
mov
adc
lret
mov
dec
cmp
cmp
sub
fsts
lcall
mov
or
mov
mov
int3
add
mov
dec
pop
inc
cmp
cmp
rclb
mov
mov
mov
ds
in
arpl
lret
fimuls
cmp
sub
jl
in
xchg
inc
dec
scas
ss
inc
insl
or
test
push
push
jle
aam
mov
pop
inc
fwait
dec
scas
lahf
fnstsw
inc
or
or
fwait
ret
es
push
jmp
and
aad
fidivl
sbb
test
push
cmp
mov
sahf
test
or
jp
fstpt
imul
cmpsb
dec
adc
push
divb
jb
add
or
cmp
sbb
adc
adc
lods
inc
lret
add
mov
pusha
sub
and
xchg
cmpsl
in
popa
mov
or
lock
aam
jle
push
pop
mov
cltd
pop
xchg
loope
dec
xlat
push
pop
jo
movsb
fs
xchg
sbb
out
stos
add
loopne
lret
push
sbb
mov
inc
mov
pop
mov
lcall
mov
and
xchg
sbb
xor
andb
xor
lcall
mov
pop
div
pop
jae
xlat
mov
jg
or
shrb
daa
lods
dec
cmpsb
or
mov
jge
push
shlb
popl
pop
push
sub
cmp
sbb
mov
loope
movsb
popa
sbb
mov
in
stos
daa
faddl
out
js
mov
ljmp
add
jnp
mov
jns
jbe
das
xchg
inc
std
sbb
sub
leave
jno
pushf
cmpb
rcrl
pop
inc
push
enter
jae
cmpsb
stos
sub
sbb
ficoms
push
jecxz
jg
sbbl
adc
popf
inc
stos
jo
sti
jae
lcall
outsl
pushf
push
lret
divl
adc
xchg
or
negl
push
insl
sbb
dec
push
out
mov
jp
imul
jmp
and
inc
test
pop
mov
xor
push
push
aam
lahf
xor
add
adc
repz
sti
sub
lcall
xor
sbb
or
inc
lret
divl
mov
pushl
cwtl
mov
out
jg
mov
xor
js
xor
xor
shl
sub
lret
dec
xor
cs
or
inc
cmpsl
sub
inc
jno
push
pop
push
jp
inc
sbb
inc
or
xchg
add
add
jae
xor
adcl
fwait
xchg
movsl
pop
jle
jne
dec
add
in
cmpsl
aas
sub
jb
jl
push
test
mov
rcr
fsubrs
add
cmpsl
pop
mov
imul
mov
mov
jbe
in
adc
fistpl
mov
orl
shll
push
ja
scas
push
jmp
inc
data16
cmpsl
shlb
ja
xchg
negb
decb
dec
xchg
jp
ds
ljmp
xor
sub
jnp
mov
notb
inc
je
lret
sub
cmp
adcl
mov
mov
lret
hlt
xchg
mov
push
int
aam
mov
xchg
sub
rorl
adc
jne
pop
add
adc
inc
clc
lret
adc
lods
jbe
loopne
mov
daa
test
cli
dec
in
cmp
pop
dec
in
inc
sbb
stos
into
push
stos
les
dec
jo
cwtl
mov
pop
dec
mov
sub
pop
fmuls
pop
lret
push
push
pushf
cmc
sub
repnz
bound
cmpsl
and
arpl
nop
add
push
pushf
xor
push
fidivrl
loop
fxch
sub
test
pop
mov
lods
jl
incl
nop
xchg
int
mov
push
cltd
js
jp
xchg
dec
cld
shrb
inc
xchg
sarb
test
fsubrp
out
jl
jne
jecxz
lret
mov
add
enter
inc
fs
in
sub
shlb
sbb
pop
or
aam
in
jmp
mov
mov
in
inc
or
psubb
sbb
adc
push
mov
pop
in
sti
cs
sub
sub
adc
inc
arpl
mov
cmp
adc
je
jp
insb
mov
add
in
and
out
std
sub
or
es
rorb
or
ss
repnz
jmp
mov
jne
sti
and
aas
mov
dec
ja
test
or
xchg
repz
rcr
loopne
jl
cmp
mov
xchg
std
dec
xor
hlt
jnp
adc
pop
pop
pushf
mov
or
cmp
xchg
aas
or
loop
dec
not
test
cs
enter
push
cltd
ja
popf
andb
decb
jne
sbb
pushf
test
in
das
sbb
jo
jle
mov
imul
mov
ret
fsubs
sbb
lods
mov
loop
inc
xchg
mov
push
cmpsl
xchg
lcall
mov
pop
lea
xchg
lock
popa
mov
jg
out
js
xor
fninit
jle
cmpb
fwait
cltd
cmp
std
aad
div
sarb
jo
andb
stos
sar
aaa
pop
test
xor
mov
pushl
cld
sub
out
int
cmpsb
xchg
and
mov
mov
xor
push
mov
rcrb
mov
sarb
mov
repnz
fldcw
mov
hlt
addb
enter
movsl
ret
mov
cmpsb
xchg
fisttps
jl
arpl
or
push
pop
sub
cs
cmpb
in
sbb
lret
pop
sbb
xchg
mov
jno
xchg
dec
cltd
jl
jecxz
cli
aad
mov
dec
mov
pop
std
int3
loop
mov
push
js
mov
lret
push
fmul
cltd
lods
popf
mov
dec
cwtl
leave
xchg
sub
icebp
lods
fdivrl
pushl
mov
std
sbb
inc
aas
jmp
mov
je
pop
int3
push
repnz
lods
dec
out
leave
jmp
hlt
xchg
xor
scas
cmpsl
jecxz
add
lret
popa
or
mul
popf
mov
push
cli
add
in
push
pusha
lahf
iret
out
push
cs
mov
jbe
mov
push
shl
cmp
ficoml
mov
cmpsb
push
insl
cmp
ret
inc
or
pop
mov
push
mov
sbb
aaa
sbb
inc
out
repz
lcall
add
jnp
movsb
lock
loope
cmp
and
dec
push
xchg
or
sbb
and
movsl
adc
shlb
or
inc
scas
add
cld
inc
or
sub
mov
jp
inc
push
xchg
cmp
mov
cli
push
cmp
dec
negb
mov
mov
add
pop
pop
loope
fnstcw
push
xchg
pop
iret
pop
loopne
lds
push
jne
push
xor
dec
mov
incb
movsl
test
ljmp
xchg
xchg
pop
aas
mov
jnp
add
sbb
lea
xlat
push
nop
dec
ret
mov
adc
imul
inc
enter
cmpsl
arpl
inc
mov
dec
dec
or
sub
xchg
mov
scas
aas
jle
jae
dec
mov
dec
cmp
fstpt
nop
mov
xor
popf
mov
icebp
testl
enter
shrb
cmp
pushf
xchg
or
lock
or
arpl
sub
inc
xchg
sub
or
cmp
jge
jne
mov
jbe
in
sbb
dec
or
add
mov
jle
inc
sarb
in
movsb
add
loop
orb
stos
push
mov
popa
xchg
test
ret
push
dec
mov
and
jns
sbb
mov
out
cwtl
push
xor
lods
daa
push
aad
cmc
mov
imul
aas
mov
inc
mov
xchg
fimuls
push
fnstcw
mov
icebp
add
adc
add
mov
or
fidivrs
add
mov
adc
xlat
pushf
test
jp
mov
inc
popf
movsb
push
sub
les
push
mov
add
in
scas
outsl
mov
cs
arpl
lcall
inc
jp
mov
int
sbb
lods
lea
addr16
sbb
pop
out
xchg
scas
ret
insl
jae
leave
lret
cmp
adc
jmp
in
mov
fldl
ror
push
movsb
inc
push
loope
int
into
xorl
xchg
repnz
xor
aad
repnz
mov
jmp
sti
iret
cmpsb
push
cmp
sti
ja
nop
cs
int
pop
fisttps
mov
scas
adc
cs
int3
push
pushf
sub
lods
sahf
adc
jo
adc
out
call
dec
into
push
mov
icebp
push
mov
add
outsl
cmp
je
push
pop
fstpl
or
mov
into
cld
cmp
jns
fidivrs
xor
cmp
arpl
pop
xor
orl
repnz
sub
lods
inc
sub
movb
xor
lahf
pop
ds
mov
push
mov
shl
sub
jns
das
sbb
add
sarl
out
adc
push
inc
hlt
and
push
insb
xchg
cmp
data16
out
jo
cmp
in
daa
inc
fmull
movsb
call
adc
sub
scas
jno
jbe
cwtl
mov
std
movsb
cmp
lret
mov
lods
pop
mov
subb
pop
xor
hlt
add
mov
push
cmp
ja
mov
inc
aam
cmp
and
in
mov
sbb
pop
or
pop
fstl
arpl
out
std
push
mov
shll
mov
dec
pop
sub
mov
cs
mov
jp
clc
pushf
mov
nop
stos
fdivl
pop
sahf
dec
dec
mov
xor
jecxz
lds
stos
in
dec
xor
jns
outsb
cmp
mov
and
vorps
jg
aam
fucom
mov
popl
scas
push
mov
imul
arpl
stos
ja
mov
icebp
mov
sbb
sbb
int
out
ret
lods
imul
inc
pop
push
or
test
js
popf
inc
jae
lods
xchg
jg
es
gs
mov
cwtl
shlb
lret
in
mov
lock
insb
fcompl
xchg
fdivrl
imul
cmp
adc
jmp
insb
in
xchg
test
and
mov
das
xchg
adcl
std
stos
cmp
fimull
outsl
inc
enter
xor
xor
xchg
pop
rorb
adc
adc
mov
popl
push
or
sub
jae
decb
lods
lcall
adc
lods
lock
repnz
test
push
xlat
xlat
push
pop
pop
add
call
inc
jge
jne
and
loop
rolb
push
data16
out
stos
out
jae
test
xchg
cmp
ss
andb
stc
inc
push
aam
lcall
dec
or
adc
outsl
add
push
jnp
iret
jno
push
xor
scas
test
aam
jp
mov
lret
xlat
adc
arpl
outsb
testb
add
test
sbb
sub
in
xchg
xor
ds
sbb
out
xor
and
sub
dec
es
mov
dec
or
loope
pop
dec
fs
jp
mov
sbb
in
jmp
inc
cld
cmp
lea
aaa
push
scas
pop
xor
idivl
popf
lahf
lcall
int
pop
push
xchg
mov
ja
test
pop
cli
jne
xor
mov
std
clc
imul
andb
movsl
imull
and
cmp
xor
test
mov
sarb
mov
inc
xchg
push
push
cmp
sbb
ret
inc
mov
pop
add
orl
das
mov
nop
mov
ret
inc
ljmp
cmc
out
ret
inc
jp
pop
push
in
aad
dec
mov
pop
dec
ret
xor
repz
and
and
xorl
or
jge
les
scas
out
jns
cwtl
rcl
cmpl
pop
clc
out
repz
lds
mov
jp
mov
add
or
mov
xor
repz
out
into
jae
lahf
add
div
xor
ret
addr16
cmpsb
lahf
mov
lods
int3
sbb
mov
xchg
fidivrs
inc
adc
add
fdiv
pop
ret
ds
call
or
push
orb
push
dec
lret
adc
mov
ret
lea
lods
ficomps
inc
jnp
loop
roll
lds
fwait
or
pushf
insl
mov
jle
pushf
popl
mov
popf
xchg
pop
or
repnz
sbb
mov
pop
sbb
cmp
call
mov
and
out
out
push
add
mov
rcrl
jno
lods
jecxz
cmc
mov
jo
push
std
push
movsl
lods
mov
popaw
add
icebp
fstl
add
mov
cmp
mov
ret
sahf
out
aam
outsl
negb
fucomi
xchg
sbb
nop
pop
mov
xor
nop
or
push
out
js
dec
sub
cmpsl
mov
and
cmpb
scas
mov
push
pop
scas
inc
daa
push
lahf
mov
inc
dec
and
addb
cli
jecxz
sahf
or
addl
movsl
sbb
pop
adc
int3
fcmovu
lods
sahf
andl
xchg
fildll
or
popa
or
sti
lods
adc
push
mov
lds
xor
xor
cwtl
sub
push
mov
xchg
and
mov
cmp
xchg
movsl
hlt
cmp
sbb
add
push
pushf
pushf
popa
cmp
and
movsl
aas
test
mov
lods
adc
enter
ljmp
mov
call
pop
mov
fdivs
aaa
mov
add
stc
insl
js
jo
push
dec
cmpsl
cltd
xor
fstpl
int3
mov
cmp
out
shlb
gs
push
std
mov
sub
dec
cmp
rcrl
in
dec
xlat
ret
sub
fsub
sahf
dec
ds
nop
scas
mov
scas
lock
push
lret
sbb
inc
jp
mov
ffree
fisubl
mov
call
sbb
mov
inc
xor
sbb
adc
cmpsl
and
push
or
ficoms
mov
mov
das
dec
mov
push
xchg
sti
out
or
sbb
cli
lret
sbb
idiv
das
int3
ret
leave
and
aaa
push
jge
dec
push
inc
jle
pop
cmc
pop
cmpsl
and
xchg
inc
lahf
test
pusha
xchg
inc
sub
aaa
sub
daa
and
push
add
arpl
fldenv
or
dec
stos
js
sub
rorl
stos
lods
in
mov
lahf
ss
push
mov
out
in
mov
enter
lods
or
and
js
dec
adc
xchg
push
scas
xchg
jno
jno
mov
push
stos
jecxz
ljmp
rolb
lcall
cmp
cld
cs
andl
xchg
mov
adc
jbe
mov
mov
jnp
pop
pop
cli
push
ljmp
test
dec
rcll
test
jne
pop
jns
mov
das
push
jle
xchg
es
std
outsb
fiadds
dec
pop
mov
sbb
ret
adc
sub
std
arpl
ret
adc
cld
xor
js
sbb
push
dec
sbb
push
out
mov
pusha
adc
sbb
imull
jno
leave
lea
cmp
lods
repz
xor
insl
loop
push
xchg
or
mov
fdivs
xchg
sub
mov
cmp
adc
imul
push
pop
mov
adc
push
jle
and
mov
adc
xor
je
cmp
add
xor
int3
jb
addr16
mov
xchg
aam
or
and
fs
pop
xlat
leave
or
lea
xlat
fidivrl
outsb
rolb
jmp
fs
jl
out
in
js
mov
add
cmp
add
stos
jecxz
dec
xor
add
and
iret
sahf
loopne
mov
cmp
xor
lret
popa
fs
mov
mov
inc
in
inc
mov
scas
add
hlt
pop
std
push
scas
pushl
inc
mov
addl
aaa
stos
cli
cld
fisubl
jmp
inc
push
xchg
repnz
inc
icebp
xchg
dec
sbb
dec
pop
mov
lods
sets
dec
mov
lret
filds
sbb
enter
and
lods
xchg
and
out
repnz
scas
dec
fisubl
pop
fwait
aas
mov
cmpsl
mov
cmpsl
imul
flds
mov
insb
or
loop
and
icebp
xchg
inc
sarb
jmp
loop
mov
lcall
xchg
mov
lock
in
jp
cmp
jl
insl
sti
dec
dec
cmp
xchg
mov
add
push
cs
ret
or
iret
pop
leave
mov
sarb
dec
test
xor
mov
cmp
addr16
xchg
test
lds
mov
jae
movsb
popa
push
add
lret
imul
jge
xchg
mov
out
cltd
dec
push
loop
loop
cwtl
pop
cmp
test
test
stc
xor
cmpsb
dec
orb
icebp
push
xor
aaa
ds
mov
mov
das
inc
fistpl
lds
mov
bound
idivw
mov
push
mov
leave
inc
fcoms
mov
lret
pop
mov
cwtl
cmp
and
and
push
sub
fcmovne
dec
sbb
xchg
sub
pop
js
aam
orb
jp
jnp
lock
and
sub
mov
sub
lods
lahf
xchg
imul
lret
mov
ljmp
cmp
sti
cwtl
cmp
jb
popf
mov
and
jns
sti
subb
push
mov
cmp
sbb
rcrb
testb
jge
sbb
int
sahf
add
loope
cmpsb
mov
pop
add
mov
lret
push
push
jp
xor
push
cmp
lds
push
xor
int3
lcall
cmp
mov
mov
pop
insl
xor
syscall
sbb
das
pop
adc
push
or
sub
lea
fcoml
lcall
clc
std
fdivr
inc
insb
inc
sar
mov
out
enter
xchg
jge
jne
lods
test
adc
clc
mov
les
mov
xor
sbbl
sub
xchg
lret
popf
xchg
sbb
jl
mov
and
inc
mov
xor
add
cmc
je
sub
mov
push
push
ljmp
pushf
and
adc
popa
rclb
inc
bndldx
push
or
fs
dec
shrb
push
jge
dec
dec
inc
pop
jg
test
insb
cwtl
adc
xor
jno
movsb
xor
loop
adc
cwtl
add
sbb
dec
xor
in
into
ret
stc
xchg
dec
cmp
jae
cmp
xchg
jg
jmp
cwtl
xchg
addr16
int
int3
loopne
outsb
in
or
pop
out
lahf
mov
and
pop
aam
imul
das
and
mov
xlat
enter
add
pop
arpl
movsb
out
test
outsb
add
cmp
repz
push
mov
push
gs
lcall
dec
mov
dec
mov
out
imul
addb
scas
fiaddl
push
aas
xorb
mov
loopne
pusha
and
push
inc
std
mov
mov
gs
icebp
lahf
xor
and
rorl
push
sbb
scas
dec
jl
xchg
sbb
daa
lods
loop
in
mov
mov
shrl
pop
shl
shl
test
push
xchg
pushf
call
xlat
pop
inc
push
add
or
jg
or
jp
stc
js
push
jecxz
add
pusha
fsub
out
repnz
mov
mov
aad
dec
mov
lea
out
pop
fnstcw
mov
pop
mov
ret
add
mov
xor
arpl
in
lret
pop
ret
nop
or
cmp
and
pop
fiadds
inc
in
cli
imull
sbb
data16
das
mov
jnp
nop
lods
scas
mov
mov
lock
fiaddl
or
outsl
mov
adc
int3
mov
lahf
outsl
jbe
sbb
loopne
leave
xor
jecxz
ja
sub
popf
xor
push
adc
lret
cmp
aas
jmp
stos
popa
int
jb
push
push
int
mul
aaa
adc
mov
aad
cmp
xor
adc
fistpl
mov
mov
in
pop
test
imul
sbb
mov
mov
stos
cmp
aas
stos
sbb
xchg
dec
in
ja
mov
fisubrs
pop
push
jns
out
adc
xor
loop
sbb
ret
push
pusha
xor
std
push
pop
xor
pop
fcmovnb
jle
int3
sub
xchg
scas
fld
out
and
or
mov
add
enter
pop
add
push
mov
jecxz
and
rsqrtps
pop
push
test
push
scas
xchg
xor
lock
lahf
mov
pop
mov
je
cmp
testb
fcompl
xchg
jno
jno
sub
inc
add
int3
iret
lods
mov
sub
scas
aaa
or
jl
negl
inc
push
imul
jne
cltd
sti
push
sub
gs
xor
jns
dec
nop
mov
ret
jl
cli
mov
xchg
or
pop
mov
fcomps
jo
mov
inc
sub
imul
adc
jns
fldenv
repz
add
inc
sarb
in
mov
cmp
cs
lret
and
call
jnp
pop
dec
dec
in
jp
scas
insb
inc
pop
or
js
cs
sub
cli
mov
imull
xchg
test
test
cmp
fdivrl
add
test
xor
popf
fisubl
and
out
cmp
mov
jmp
rcll
lahf
pop
inc
sbb
clc
dec
mov
dec
jo
out
loopne
push
lea
pop
aaa
mov
push
bound
pop
adc
xor
out
sub
aam
ds
jg
cmp
mov
bound
sbb
mov
or
cs
ret
mov
jl
aam
out
jge
jae
mov
cwtl
add
or
jle
fldt
push
popfw
data16
push
iret
pushf
out
push
fmuls
push
xchg
popf
pop
out
cmp
mov
push
push
sub
iret
lods
sub
jl,pn
sub
sbb
leave
jle
jp
leave
out
dec
leave
xor
xor
call
mov
mov
mov
jae
push
push
dec
cmpsb
pusha
mov
clc
into
dec
sar
add
stos
cli
cs
cmpsb
imul
mov
ret
adc
sbb
jg
dec
adc
std
fwait
push
iret
add
pop
pusha
xchg
loopne
adc
jmp
xlat
xor
xchg
sbb
mov
xor
push
sti
test
adc
rcll
es
push
adc
and
lea
jg
push
adc
mov
pop
pop
push
imul
es
and
mov
jb
in
sti
jns
outsb
or
outsb
mov
sub
pop
arpl
clc
aaa
pop
xchg
jbe
in
fidivs
test
inc
push
rcl
in
pushf
lock
rcl
divb
sub
push
adc
mov
push
sbb
xor
addr16
test
dec
cltd
push
ret
lods
leave
dec
sarl
mov
sbb
cmp
stos
dec
and
psraw
or
movsl
jp
mov
dec
xchg
enter
inc
pop
mov
js
mov
xchg
xchg
mov
sbb
pop
xlat
movsb
inc
adc
cli
repz
fisubs
sti
xor
and
mov
or
mov
pop
xchg
lret
adc
adc
adc
in
aaa
aas
pop
popa
xlat
sbbl
enter
jp
xchg
xchg
inc
ja
push
mov
push
sbb
mov
mov
xchg
divl
and
loopne
xor
xchg
or
xchg
in
sahf
and
loope
jo
xorl
scas
pop
movsb
and
sbb
jbe
adc
and
fwait
jge
push
mov
andb
daa
jo
loope
imul
jb
cmp
sbb
rcl
add
jg
mov
and
jnp
lds
int
jmp
sub
hlt
dec
das
jno
mov
aad
rcr
sbb
mov
mov
mov
pop
mov
or
in
das
cs
idivl
ret
cmpsb
nop
dec
loope
int
jg
cmp
push
cmc
push
sub
stos
pop
fcoms
pop
push
popa
aam
xor
jae
cmpsl
jecxz
or
or
sbb
or
nop
cmpsb
mov
mov
les
cmpsb
inc
out
cmc
movsl
mulb
shlb
lea
loopne
mov
outsl
mov
xchg
sub
mov
dec
cwtl
push
lahf
mov
cmpsb
pop
jmpw
stc
jb
sub
imul
addl
cmp
out
lahf
pop
or
imul
sub
push
dec
sub
rorb
lahf
and
std
repz
loopne
xor
in
outsb
lahf
shl
test
push
pushf
cmp
mov
pop
ja
jecxz
lea
stos
lret
dec
sbb
jecxz
pop
andb
cld
rorl
mov
popf
scas
stos
sbb
cli
movsb
insb
xchg
xchg
cmpsb
test
push
stc
in
lahf
rcrb
addr16
adc
mov
adc
xor
xchg
mov
loope
fwait
sub
mov
rcrl
xor
mov
jge
je
push
out
cmpsl
adc
push
je
add
push
out
jge
pusha
rorl
das
int
xchg
adc
imul
jle
std
and
sub
or
push
sub
xchg
nop
ret
scas
cmp
or
pushf
mov
jae
xchg
xor
stos
scas
jmp
and
sub
pop
add
lcall
xchg
mov
xlat
mov
push
mov
dec
jbe
dec
cmpsl
jge
scas
loopne
outsb
aad
push
mov
sub
mov
xchg
or
ljmp
scas
mov
and
push
movsl
dec
lds
inc
pop
pop
pushf
mov
lods
xor
push
and
test
mov
lods
rorb
ljmp
es
aam
fstl
inc
nop
or
dec
or
push
fdivr
push
loope
jle
imul
pop
xchg
shrl
adc
in
add
dec
mov
fisttps
push
insw
xor
jp
xchg
into
ja
mov
aas
pop
pop
mov
mov
leave
cltd
xor
sbb
mov
nop
pop
adc
rclb
in
shll
nop
cmp
inc
pop
push
outsl
sub
lret
pop
mov
je
ror
inc
lret
cld
movsl
sbb
and
out
inc
into
pop
add
add
dec
fisubs
xchg
cwtl
mov
cmpsl
mov
les
sbb
dec
pop
pop
fs
into
insb
cmp
icebp
mov
mov
push
ljmp
lcall
js
adc
mov
aas
lret
push
icebp
out
daa
out
jge
sub
int3
pop
cmpsb
arpl
out
sbb
mov
sub
pop
and
mov
test
pop
mov
sub
xchg
cmc
inc
xchg
push
xchg
xor
sbb
out
arpl
dec
stc
jne
scas
or
pushf
imul
or
jge
mov
pop
repz
aaa
les
xchg
cmpsl
and
mov
gs
xlat
mov
push
ret
and
dec
test
out
xchg
mov
cs
jnp
clc
jbe
fs
shl
lret
inc
dec
jmp
jnp
daa
pop
inc
int3
cmp
nop
inc
rcrb
jmp
push
add
dec
and
aam
inc
pusha
jae
cmp
sub
pop
or
ret
movsl
add
mov
enter
mov
test
sub
pop
pop
int
repnz
adc
jg
leave
mov
jae
push
sbb
dec
xchg
adc
inc
jecxz
pop
repnz
adc
pop
aam
test
aad
mov
fwait
mov
pop
sub
leave
mov
imul
sbbl
inc
fcoml
aaa
mov
jb
fisubrl
pop
mov
cmp
pop
test
jecxz
stc
shlb
mov
push
jmp
das
jns
fistpl
cs
or
shlb
lods
and
push
dec
cmc
fsubrl
cmp
adc
scas
movsl
in
inc
mov
insl
pop
mov
mov
lcall
xor
fwait
mov
or
sub
daa
sbb
add
shll
sub
sahf
xchg
cld
push
hlt
jo
push
fadds
push
sub
or
add
leave
add
xlat
jbe
fwait
or
xchg
adc
in
push
es
es
mov
pop
rolb
std
and
fld1
pop
jbe
movl
stos
add
jle
adc
xchg
movsb
and
push
xchg
pop
jnp
and
rclb
fldl2e
xchg
jno
adc
dec
sub
lea
in
les
fwait
or
jnp
fldl
out
push
mov
mov
icebp
dec
inc
adc
pop
inc
or
clc
rcrl
push
mov
rcrl
cli
mov
or
pop
or
xchg
and
mov
jbe
mov
call
push
xchg
pop
add
mov
stc
outsb
jg
roll
jne
sub
jb
inc
mov
fisttpll
jecxz
dec
roll
test
inc
jl
notl
lods
mov
into
js
inc
cmp
jb
imul
mov
mov
add
lea
sbb
pop
das
faddl
pop
inc
test
mov
mov
adc
aaa
out
xor
xchg
in
pop
and
xor
iret
and
mov
mov
and
test
clc
insb
hlt
jl
cmp
test
notl
mov
xchg
loopne
xor
pushf
in
daa
sub
rcrb
ljmp
jnp
sbb
add
mov
mov
mov
or
and
sub
mov
jl
or
aaa
adc
push
fmull
pop
imul
pop
movsb
and
pushf
outsb
xor
dec
lods
mov
add
push
lock
adc
lcall
rolb
cwtl
shll
add
pop
adc
scas
sbb
inc
or
sahf
cld
subb
mov
in
dec
sbb
push
or
jo
add
push
mov
adc
jge
shlb
sar
test
ja
jne
test
test
fisubl
adc
neg
popf
iret
adc
mov
clc
sti
mov
xor
jb
addr16
ss
test
jl
lock
aam
inc
lock
or
pop
iret
cs
mov
addr16
and
cli
test
nop
mov
adc
dec
iret
or
xchg
jmp
cmp
hlt
cs
scas
cmpsb
int3
pop
dec
fmuls
ficoms
daa
out
push
popl
aam
gs
jl
lret
cli
lds
inc
fdivp
adc
or
mov
dec
pop
mov
ror
ret
or
sub
out
pusha
jno
xchg
dec
inc
xorb
mov
cwtl
imul
fnstenv
mov
test
mov
push
inc
push
sti
fisttpll
pop
call
out
push
inc
mov
adc
xor
jle
jnp
jmp
enter
fcmovnb
sub
mov
in
je
pusha
lret
in
das
insb
sti
roll
pop
jecxz
cmp
mov
cmpsb
add
sub
lock
mov
andl
pop
sahf
bound
es
rcll
lcall
loop
push
sub
mov
js
or
lods
mov
imul
dec
int3
adc
pusha
or
enter
in
adc
dec
pusha
sub
mov
shl
aas
dec
in
jmp
jno
cld
mov
imul
loop
test
es
aas
imul
sub
dec
gs
pushf
xchg
rorl
jle
push
xor
pop
and
nop
push
das
lcall
test
sarb
cli
aam
subb
sti
push
fsub
test
lret
movsb
mov
fucomi
cmp
sbb
cltd
xchg
movsl
cmp
movsl
mov
push
xchg
dec
aam
outsb
rcl
cmp
enter
mov
sbb
clc
cli
mov
cmpsl
movsl
mov
fucomi
movsl
mov
adc
sub
adc
iret
push
lahf
pop
push
mov
pop
idivl
mov
mov
hlt
mov
popf
adc
jmp
mov
std
int3
bound
mov
jl
pushf
sti
sti
add
pop
dec
es
in
test
arpl
cs
scas
incb
lds
jb
fcmovu
add
mov
mov
sub
xchg
scas
add
sti
xor
jecxz
or
xor
push
cmp
cltd
out
jmp
mov
lds
lds
fsts
aas
or
cli
in
jo
inc
mov
jg
mov
and
sbb
in
jmp
ljmp
rcrb
fsubrs
das
loopne
sbb
sub
inc
iret
xchg
sub
scas
mov
and
cmp
loop
rclb
adc
in
shll
xchg
pop
andb
imul
cltd
adc
ficomps
jb
mov
jb
mov
mov
push
and
or
in
jnp
cltd
inc
lret
les
in
lods
jg
push
test
test
pop
adc
or
pop
cmp
jg
test
stos
inc
push
andl
es
sahf
cmp
ficomps
sbb
cltd
push
and
pop
xlat
mov
scas
dec
lcall
movsb
cmp
mov
fsubrs
pop
xor
cmp
ret
push
movsl
cmp
jbe
es
sub
lods
mov
arpl
xchg
leave
push
and
scas
jle
mov
addb
andl
in
pop
fstl
loope
jb
mov
ja
sbb
jb
sbb
mov
testb
adc
mov
cltd
cmpsb
fs
xchg
xor
push
popa
jae
fnstenv
pop
push
addl
mov
out
cmp
inc
add
pop
and
xor
jae
jne
notl
pushf
pop
add
ret
daa
cmp
cltd
adc
stos
add
in
stc
out
add
icebp
mov
outsl
push
daa
inc
and
pop
movsb
leave
ret
sub
loop
xchg
xor
push
dec
xor
mov
inc
outsl
mov
jno
adc
xorb
leave
lcall
mov
or
sbb
or
jmp
push
in
xchg
sahf
jmp
sbb
idiv
dec
dec
jo
sbb
call
ds
and
enter
sbb
icebp
cmp
xchg
pop
repnz
jne
pop
movsb
lods
jae
fsubs
push
in
jecxz
cwtl
pop
add
fprem
in
cmp
dec
repnz
xor
jle
or
inc
hlt
aad
jae
imul
lea
mov
sbb
movsb
and
jne
and
inc
rcl
mov
jb
fdivs
cld
sbb
inc
imul
dec
lcall
das
mov
mov
jne
and
lret
loop
inc
and
mov
pop
pop
jae
or
popl
cld
push
dec
sbb
call
adc
pop
nop
movsb
dec
mov
xchg
into
movsl
pushl
sti
in
cmp
mov
jecxz
adc
xchg
dec
mov
repz
xor
fsubrs
or
les
sub
push
cmpl
mov
mov
cli
mov
fmuls
adc
sahf
cmp
scas
addr16
mov
xchg
mov
stos
or
xor
add
testl
bound
inc
mov
sub
nop
push
mov
adc
and
test
or
cltd
and
outsl
inc
data16
xor
gs
in
dec
jne
mov
xchg
adc
loop
lret
cmp
insl
dec
pusha
stos
add
out
fcompl
mov
in
xor
bound
pop
mov
pop
push
dec
xor
iret
pop
call
xchg
push
pop
cwtl
dec
cmc
je
lock
cmp
jecxz
dec
jp
xchg
mov
cs
push
imul
mov
inc
or
mov
aas
xchg
mov
xchg
mov
fdiv
mov
int
cmp
sti
sahf
fistps
dec
arpl
dec
cmp
int3
mov
jb
mov
add
adc
xor
sti
mov
xor
mov
sub
loopne
jge
je
ret
nop
test
sub
dec
int3
and
out
push
cmp
dec
mov
adc
aas
outsl
ss
pop
and
aad
dec
fnstcw
movb
cs
xlat
sbb
xchg
add
mov
mov
sbb
adc
lods
mov
xchg
dec
and
lret
jg
or
xchg
xor
sbb
and
pop
mov
aaa
mov
sub
mov
adc
jg
dec
jg
in
in
test
mov
dec
cli
mov
bound
movsl
push
mov
loop
inc
sbb
daa
inc
lret
lods
cs
fistpl
movsl
inc
xor
daa
adc
pop
dec
je
mov
popf
ljmp
lock
jnp
loop
lcall
mov
fisttpl
jae
dec
fdivrl
addr16
fwait
pop
ret
test
testb
xchg
mov
sahf
jmp
dec
sbb
lcall
xchg
xor
fwait
stos
mov
out
lods
jecxz
outsb
sbb
xchg
and
shll
xchg
add
mov
out
stos
ljmp
mov
testb
xlat
push
iret
jns
push
dec
roll
sarl
and
add
inc
popa
testl
or
lock
sub
push
adc
iret
lods
repnz
mov
cli
pusha
add
pop
jle
mov
loop
daa
ficompl
jnp
adc
add
in
sub
movsb
jmp
dec
cmc
lcall
repz
mov
mov
push
mov
imul
test
lcall
lret
ja
dec
inc
inc
push
lea
cmpsl
bound
jg
jnp
addr16
add
rcll
push
cmpsl
faddp
negl
mul
add
cwtl
dec
roll
push
inc
leave
push
push
sub
lea
cmp
hlt
je
popf
jle
xor
cwtl
xchg
adc
xchg
rorb
jne
fldt
cmp
cmp
mov
push
pusha
arpl
aam
jbe
clc
jg
sbb
add
or
or
mov
test
shll
mov
mov
mov
mov
push
fwait
gs
in
notl
daa
mov
jae
push
inc
fstps
or
sub
pop
mov
sti
pop
mov
aaa
cmpsl
xchg
push
jmp
inc
sub
addl
jno
xor
cmp
cmp
push
pushf
xor
jo
mov
mov
lods
insl
stos
test
fcmovb
xchg
lahf
mov
das
popa
les
push
push
pop
push
mov
jg
sub
push
or
and
cmpsb
xor
ljmp
jb
add
and
test
inc
out
jge
scas
mov
mov
or
repnz
or
jge
sti
inc
xchg
insl
pop
cmp
cmpl
loope
ljmp
cmp
adc
dec
fiadds
adc
dec
mov
jno
inc
stos
mov
aas
iret
fisubrs
out
rorl
jno
mov
xchg
pop
fsubrl
xor
mov
jns
push
bound
sub
mov
rorl
cltd
jg
adc
popf
xor
cmp
push
cmc
pop
js
test
test
add
es
fsubs
sub
push
iret
jg
int
les
rolb
sbb
pop
pop
or
push
roll
mov
fdivl
js
mov
sbb
adc
add
in
add
cmp
push
sahf
xchg
out
dec
ret
mov
mov
pop
inc
hlt
movsb
and
cmp
lcall
pop
int3
stos
push
xchg
cmp
aad
sub
add
push
or
xor
and
cmc
int3
inc
mov
lcall
mov
pusha
call
dec
add
mov
sbb
mov
jbe
bound
cmc
shrl
jecxz
push
mov
lret
dec
inc
fdivs
push
lea
sarb
dec
nop
movsl
stos
fstpt
xchg
int
fs
add
sbb
sub
mov
inc
push
movsb
sbb
dec
xor
adc
pop
pop
pop
and
inc
and
xchg
mov
xchg
push
outsl
jbe
jne
xchg
sbb
pop
in
outsb
sub
jecxz
mov
in
pop
out
push
out
ja
cs
xchg
insl
gs
mov
jnp
cmpsb
xchg
adc
add
mov
stos
std
data16
int3
es
xor
jae
add
bnd
imul
cld
leave
mov
lds
cltd
out
sbb
and
rol
mov
mov
in
pop
inc
outsl
lea
mov
sahf
sar
testl
into
enter
pop
das
sub
dec
lcallw
lods
and
in
and
nop
sub
cmp
les
and
aam
mov
mov
cmpsl
stos
fwait
ds
cmp
push
xchg
int3
loopne
outsb
xor
data16
mov
in
insb
lods
mov
lods
lret
loop
shr
or
bound
mov
imul
test
in
or
mov
pop
jg
insl
notl
cmpsb
daa
icebp
sar
test
les
jbe
loop
test
pop
popf
mov
pop
sbb
popf
outsl
inc
ds
pop
dec
je
aad
enter
push
push
jp
xchg
ror
aad
xlat
rcrb
push
pop
mov
sub
ljmp
cmp
out
or
mov
movsb
inc
es
add
andb
lods
dec
in
jl
sbb
shlb
lods
sbb
or
cld
pop
or
sbb
dec
into
mov
sub
shlb
adc
mov
cltd
mov
arpl
and
lea
stc
pusha
imul
jp
leave
rorb
fcom
add
jg
cmp
hlt
mov
xchg
jbe
and
call
pop
insl
cmpl
jg
or
add
pop
xor
scas
stos
lods
mov
cmp
sub
iret
push
add
sti
lods
sbb
inc
mov
xchg
xchg
cmp
int
and
mov
and
and
call
and
fsubs
dec
add
aas
dec
fidivrs
bnd
inc
idivl
ret
sub
es
test
fisubs
mov
lods
cmp
aas
mov
sbb
fcmovbe
mov
popf
pusha
into
dec
mov
xchg
push
hlt
out
int
ljmp
xchg
lret
mov
pop
gs
jg
mov
mov
push
ds
push
adc
movsl
fsubs
or
lret
push
or
or
js
xchg
int
add
in
cmpsb
pop
lcall
push
test
pop
rcll
mov
push
imul
cs
adc
mov
inc
xchg
mov
repz
int3
sbb
cmp
inc
dec
ds
mov
imul
mov
aad
inc
sbb
pop
dec
sbb
push
mov
or
loop
cltd
daa
clc
ljmp
mov
push
push
not
cwtl
imul
aam
imul
inc
add
inc
scas
xor
sahf
lret
xchg
sarl
es
cmpsb
xchg
push
add
inc
loop
lods
xor
clc
pop
xchg
lret
xchg
jecxz
adcl
dec
fwait
jge
test
mov
fisttps
dec
fisttpll
std
mov
cmp
push
cmp
xlat
popf
xor
popa
mov
std
fcomps
jge
xchg
test
inc
mov
sar
inc
icebp
leave
add
mov
cld
cmc
aas
mov
test
adcl
aam
lret
add
fucom
dec
jne
cmc
loop
push
icebp
mov
loopne
xor
mov
dec
int3
cmp
dec
js
ljmp
jns
mov
or
cmp
jecxz
clc
xorl
sub
sbb
mov
mov
xchg
aas
in
adc
sti
adc
and
mov
out
pop
leave
push
dec
adc
or
setp
sub
inc
sbb
fsubs
enter
mov
or
ret
shlb
jno
js
pop
sarl
dec
fistpll
lods
loop
inc
imul
jg
adcb
lcall
lcall
sub
mov
jbe
cmp
call
ret
out
jns
xor
or
jb
scas
xor
inc
ljmp
mov
outsl
out
gs
xchg
push
jae
sub
or
xor
fstpt
mov
hlt
adc
into
dec
out
in
mov
repnz
push
leave
mov
sbb
push
aas
and
out
inc
mov
pop
adc
shrl
bound
push
xchg
mov
inc
scas
pop
push
loopne
cld
cmc
push
jg
adc
fcompl
movsb
test
cmp
outsb
into
cmp
in
leave
sbb
jns
xchg
nop
mov
adc
scas
mov
or
cmp
dec
lcall
cmp
mov
es
lock
jno
test
jmp
fimuls
push
and
cmp
aam
cmp
int
ss
testl
push
in
add
cwtl
icebp
cmp
imul
and
movsl
add
sub
pop
frstor
std
int3
outsb
push
dec
add
mov
repz
shll
sub
fisubl
xchg
pop
loope
test
adc
xchg
push
repnz
divl
ret
dec
add
dec
mov
ds
loope
cmp
bnd
and
add
mov
shlb
pop
dec
dec
xor
sub
push
js
or
or
int3
outsl
int3
in
push
lret
test
adc
fs
insb
cmpsb
push
adc
push
add
push
add
jno
mov
xchg
jno
ljmp
aaa
pop
pop
mov
fistps
xchg
enter
imul
adc
cmp
add
dec
bound
hlt
in
bound
shr
mov
push
fs
mov
stos
add
ss
dec
inc
test
and
jmp
push
or
lea
movsb
mov
push
push
mov
xor
or
jnp
jae
js
loopne
pop
daa
pop
addb
jmp
xlat
data16
pop
xor
sti
cli
fildl
or
adc
sbb
repnz
pop
mov
xor
mov
jmp
ds
aaa
inc
fs
std
mov
and
push
adc
imul
outsb
loop
pop
inc
and
push
lret
dec
pop
sub
incl
pusha
adc
sbb
ss
fs
outsl
add
rcrb
inc
pop
sub
mov
sahf
push
rcrl
xchg
in
ja
rclb
mov
iret
mov
sbb
popa
dec
mov
lahf
pop
rcrl
pop
scas
push
ret
xchg
inc
fisubs
xchg
js
jmp
sbb
pop
aam
jecxz
stos
stc
mov
int
pop
cmpsb
xor
ja
xor
pop
sbb
movsb
lock
push
jb
push
lock
loopne
inc
push
mov
sub
outsl
faddl
iret
imul
sub
pop
cli
cli
mov
xor
and
xchg
outsb
xchg
stos
outsl
cli
xchg
mulb
repz
out
mov
aas
mov
jg
push
repnz
add
mov
sbbb
and
cwtl
push
fisttpl
int3
sub
fsubs
push
jne
cmp
dec
adc
sti
lods
xchg
xchg
movsl
mov
add
data16
jne
pop
pop
sti
adc
and
fidivrs
mull
mov
xchg
testb
les
or
sbb
jo
mov
pop
movl
mov
add
popa
adc
testb
aad
dec
fldcw
jmp
out
sbb
cld
jbe
pop
stos
ja
pop
push
adc
fsubl
loop
mov
mov
cmp
mov
insb
dec
cwtl
lds
dec
fdivrs
mov
jb
xor
fidivl
lods
push
mov
rol
cmp
lcall
popa
sbb
out
pushf
lret
mov
ljmp
xchg
jg
out
adc
fbld
loope
stos
jo
and
inc
add
out
mov
ss
sti
mov
jb
std
xor
mov
mov
or
xchg
dec
ret
imul
or
fnstsw
cmp
insl
xchg
jo
insl
or
push
das
jge
inc
repz
out
notl
mov
or
xchg
cli
ret
push
cmp
add
mov
xchg
jge
pop
mov
push
xor
in
cmp
dec
fs
aaa
sub
inc
adc
fldl
mov
inc
sub
cmpsb
push
push
or
jge
mov
cmp
popa
shrb
xor
in
mov
mov
push
rep
lcall
sbb
insl
pop
das
inc
pop
hlt
pop
shlb
cs
adc
aam
outsl
xchg
push
es
cmc
cld
fisttps
sbb
jmp
lods
fwait
xor
imul
sbb
daa
or
adc
je
popa
inc
adc
hlt
mov
jae
jmp
dec
int
xchg
pop
popf
sbb
or
mov
sahf
dec
bound
mov
add
cmpl
call
cs
mov
sarb
push
mov
lret
mov
cmp
jnp
cmp
xor
in
mov
pushf
sti
inc
mov
sub
test
inc
cwtl
mov
fidivrs
lods
mov
cmp
mov
sbb
enter
insl
dec
sbb
mov
mov
stc
cmpb
jae
fwait
test
push
cwtl
insl
jbe
xor
mov
mov
outsl
inc
or
add
cmpsl
inc
sahf
incb
sbb
insl
cmpsl
mov
cmp
jecxz
xchg
mov
push
rclb
fstpl
adcb
rol
addr16
mov
sbb
iret
arpl
xchg
out
cli
or
add
test
es
lret
cwtl
gs
std
dec
inc
push
ret
or
into
sub
adc
call
mov
xchg
cmp
jle
test
mov
in
pop
stos
and
jb
out
xchg
sbb
repz
ss
ss
mov
dec
shll
ret
call
mov
out
inc
addr16
cmp
ljmp
bound
adc
pop
dec
jb
adc
inc
xchg
out
aaa
nop
jae
outsb
mov
pop
fmuls
in
jle
cmp
push
push
out
outsb
cmp
mov
popf
jae
scas
mov
sti
jne
call
sub
cmpsb
pop
xor
push
negb
lret
xlat
int
adc
movsb
push
xchg
pop
cmp
aam
dec
xor
aam
mov
inc
in
cmp
inc
mov
push
cwtl
adc
jg
add
leave
aad
addr16
jge
and
inc
mov
cltd
andl
lea
dec
inc
fs
jl
dec
inc
loopne
hlt
insb
pop
cmp
xchg
jne
pushf
adc
push
jmp
or
mov
iret
test
pop
out
nop
call
scas
cld
popf
sbb
add
mov
pop
sub
dec
popf
push
mov
repz
sbb
inc
out
push
in
in
imul
dec
inc
jge
inc
in
in
mov
pop
pop
mov
stos
jge
lock
fs
dec
fs
stc
leave
test
or
pop
movsb
xor
test
pop
push
loope
jns
dec
add
imul
pop
mov
or
add
pop
inc
popa
push
jmp
repnz
dec
mov
rorl
fcmovnu
adc
insl
inc
mov
inc
bound
int3
sub
in
in
test
and
fstpl
imul
scas
outsb
xlat
mov
pusha
jnp
lods
pusha
sahf
daa
adc
mov
jle
aad
hlt
xlat
inc
pop
and
ds
cmp
push
pop
jo
or
inc
int
or
data16
jae
cli
add
xorl
popa
les
inc
push
jp
jb
fs
cmc
jns
test
push
leave
repz
mov
movsl
shll
inc
and
xchg
inc
xchg
scas
pusha
fildll
je
mov
add
pop
cld
pusha
dec
xchg
push
imull
loop
mov
in
inc
or
and
aaa
ret
lods
jns
rcll
daa
ds
outsl
xchg
test
dec
dec
sub
mov
outsl
call
add
xchg
imul
hlt
movsl
mov
xchg
sub
add
jb
movsl
rclb
popa
jp
xchg
jge
mov
test
push
aas
or
insl
lock
and
xchg
xchg
dec
ljmp
mov
adc
xchg
jmp
test
adcb
ja
ret
mov
cli
lahf
jmp
dec
popf
inc
xor
cmpb
dec
inc
cwtl
inc
fidivl
dec
call
loop
cmp
inc
lea
xchg
xchg
inc
daa
push
stos
pop
adc
sub
cmp
dec
mov
inc
sub
pop
xchg
and
mov
mov
outsb
cli
fld
sbb
cmp
fcmovbe
cmp
jecxz
sbb
loope
mov
std
adc
shlb
cltd
mov
loope
inc
aaa
jnp
jp
xor
das
xchg
sub
inc
jg
mov
cmp
mov
insl
jae
test
pop
adc
xchg
int
xlat
inc
nop
lcall
adc
add
push
mov
push
xlat
xor
in
mov
lret
cmp
push
fildll
rep
hlt
adc
adc
xor
leave
outsl
and
data16
cwtl
push
stos
addr16
std
or
cltd
aad
mov
lods
ret
jae
daa
lret
js
or
shrb
sub
sysenter
cmp
sbb
mov
sbb
mov
cwtl
repnz
mov
xlat
nop
mov
dec
idiv
cmp
push
aaa
rclb
cmp
imull
dec
and
push
mov
inc
test
ror
sub
dec
clc
es
push
imul
and
jne
testb
cltd
ds
adc
mov
pop
mov
jb
jge
jle
inc
sbb
lcall
push
test
daa
pop
aaa
divl
icebp
movsb
jg
xchg
sbb
mov
addr16
cmp
pop
inc
loope,pt
pop
adc
pushf
mov
rcrl
sahf
lods
shl
shlb
push
cmp
jne
leave
adc
dec
pop
outsl
adc
enter
pop
mov
lods
jmp
fwait
jo
lods
jae
out
inc
stc
sub
in
lea
inc
jbe
xor
enter
inc
push
push
scas
and
xor
sub
mov
fs
xor
cmpsw
lods
pushf
mov
movsl
and
sbb
arpl
sbb
add
cltd
adc
mov
or
mov
outsb
mov
push
sub
neg
gs
xchg
fdivrs
je
aaa
test
popa
ficoml
lods
sbb
pop
sbb
inc
out
push
cwtl
xor
cmpl
into
enter
aaa
xor
addr16
jmp
mov
clc
dec
and
xor
mov
into
ds
lds
push
cli
xor
lcall
inc
fcmovbe
push
arpl
into
lods
aaa
jp
test
mov
cmpb
test
mov
gs
shll
xlat
outsl
lods
pop
xchg
lock
imul
dec
mov
aaa
mull
xlat
ds
add
sti
bnd
push
jb
sarl
or
inc
push
cmc
ja
adc
adc
cmpsl
inc
mov
push
or
aad
xor
int
adc
outsl
xchg
mov
rclb
int3
movsb
call
or
mov
jns
idivl
push
xlat
xor
xchg
mov
stc
inc
mov
and
add
push
sub
addr16
pop
xor
pop
mov
xchg
sbb
push
push
sub
jns
bound
loopne
lea
ret
xor
jge
cmpsl
pop
mov
xchg
dec
or
out
dec
das
adc
in
inc
or
jge
dec
pop
sbb
orl
daa
outsl
sahf
inc
scas
lods
dec
and
movsl
lahf
xor
jb
popf
fdivrl
and
or
mov
mov
and
clc
add
imul
sbb
push
mov
jecxz
cmpsb
clts
outsb
into
jbe
push
mov
in
out
mov
enter
adc
js
repz
or
xchg
add
mov
mov
rcll
or
jl
shl
cltd
mov
cmpl
std
fstpt
sahf
loope
je
dec
mov
jbe
or
mov
ret
mov
jno
sbb
inc
icebp
repnz
xor
dec
vpmacssdd
pop
pop
rolb
shll
or
addr16
scas
jecxz
sub
sub
in
pop
sbb
xor
push
add
les
xor
pop
push
mov
into
outsl
push
jns
or
dec
out
pop
cmp
mov
fnstsw
outsb
pop
adc
lea
xlat
orb
adc
lret
push
jmp
ds
dec
sbb
xchg
subb
mov
in
sti
stc
sub
or
jecxz
sub
outsl
je
xor
loop
xchg
fdivs
mov
enter
mov
mov
dec
in
pop
iret
in
sbb
add
das
xchg
dec
jp
in
mov
loopne
sub
inc
lret
test
add
mov
mov
faddp
push
sahf
and
or
push
mov
movsb
jecxz
aaa
daa
mov
stos
mov
mov
mov
dec
nop
out
bound
inc
and
or
nop
fisubrl
pop
or
jp
in
mov
movsl
sarb
pushf
and
push
and
mov
or
adc
stc
dec
or
data16
out
mov
data16
inc
pop
insl
das
xchg
pop
cmpsb
pop
sub
xchg
movsb
addr16
sbb
mov
cmp
sti
lret
pop
loop
sub
js
popa
rdmsr
std
or
xchg
fistpll
sbb
inc
insl
mov
imul
sbb
adc
into
sub
dec
loop
int
int3
rclb
rorl
jb
add
mov
jno
in
adc
jae
push
out
mov
xlat
xchg
stos
fmulp
cltd
adc
bound
outsb
xor
fcmove
pop
aad
out
xchg
mov
xor
mov
nop
clc
mov
mov
fisttpl
rorb
or
fsubl
pop
movb
mov
or
jnp,pn
out
iret
fcmovb
jnp
mov
sahf
test
sbb
bound
insl
push
jb
loop
lahf
in
mov
add
jns
das
and
mov
dec
sbb
xchg
xchg
inc
notb
icebp
std
insl
movsb
ficoms
sbb
ss
push
cld
dec
push
xchg
outsl
mov
dec
lret
lret
cltd
or
jecxz
xchg
push
and
sbb
stos
insl
push
push
pop
and
enter
or
rcrb
xchg
bound
add
cmp
in
dec
adc
mov
jmp
sub
movsb
ja
add
inc
fmuls
mov
add
test
sahf
or
mov
sbb
std
rcrl
push
lea
jns
adc
scas
mov
movsb
mov
adc
icebp
adc
rcl
sub
push
cli
add
push
sub
sub
loopne
mov
jb
test
test
inc
daa
in
ror
test
stos
sbb
jmp
loop
or
mov
adc
lea
scas
mov
clc
sti
pop
jb
popa
loopne
fisubrs
push
shrb
lds
cmp
xchg
mov
idivl
popf
ret
mov
mov
dec
mov
sarl
dec
mov
adc
lock
nop
cmp
xor
dec
ficomps
pop
fs
xchg
mov
mov
scas
ljmp
push
icebp
sbb
cli
push
push
jp
adc
popf
cmp
test
pushf
cwtl
test
fldt
push
gs
xor
push
cmp
daa
addr16
movsl
cld
test
jge
xchg
mov
andl
dec
loope
insb
sbb
cmp
cmp
cmp
xor
mov
insl
inc
xchg
movsl
xchg
xchg
mov
test
sbb
push
insl
adc
imulb
jnp
insb
cmpsb
adc
fnsave
fnsave
aaa
mov
cld
scas
mov
add
xchg
xchg
clc
cltd
mov
add
mov
repz
mov
xchg
fnstenv
cli
push
or
mov
xor
out
scas
or
inc
sbb
xor
ljmp
scas
mov
xchg
popa
cmp
bound
mov
loopne
lods
push
movsl
lret
mov
in
lods
imul
inc
xchg
dec
loopne
repz
add
push
xor
loope
jmp
int
cmpsb
mov
lcall
std
and
mov
es
pop
cmovbe
xor
push
nop
arpl
iret
test
mov
mov
aam
cmc
enter
iret
push
mov
jo
cmpsb
mov
and
movsb
jp
mov
outsl
int
jb
xor
fnstenv
fst
adc
daa
pusha
or
push
loop
xor
jnp
mov
lds
in
mov
stos
pop
or
mov
in
xchg
mov
sbb
stc
rcrb
xchg
repnz
cld
sahf
pop
ret
jge
test
pop
fdivrp
sbb
or
fdiv
cltd
push
andb
mov
mov
orl
inc
out
sbb
pop
andb
lock
cmp
ds
push
mov
xchg
xchg
test
ret
pop
fcomps
fisubrl
jns
adc
stos
or
xchg
or
enter
hlt
mov
ja
jb
pop
pop
idiv
imul
test
pushf
cltd
pop
ret
cmp
push
xchg
clc
outsb
ret
arpl
in
add
aad
fcmovnu
inc
inc
out
inc
push
or
cmpsb
ja
or
or
mov
sub
jecxz
xor
jle
shll
fcmovnbe
push
mov
es
inc
mov
jp
mov
ret
mov
xchg
arpl
mov
add
std
sbb
jp
bound
and
xchg
aas
push
xchg
mov
jg
cmp
mov
ret
je
mov
pop
mov
push
inc
xor
inc
aam
lods
mov
lea
out
lret
push
fnstsw
inc
mov
push
hlt
daa
popf
mov
mov
pop
mov
into
jb
jge
es
xchg
mov
out
clc
adc
xchg
sub
pop
push
push
lret
or
or
ljmp
add
js
lods
int3
add
sahf
dec
imul
jmp
or
in
xor
pusha
and
cmp
dec
xor
mov
jnp,pt
inc
test
lods
imul
iret
jmp
lahf
adc
xchg
lahf
add
js
sub
and
mov
push
dec
addr16
push
mov
popa
jmp
int
fcompl
jne
add
adc
loop
call
mov
jo
les
nopl
adc
pop
or
mov
xchg
fistpll
cmc
jbe
popa
push
test
adc
test
push
aad
mov
incb
adc
pop
in
ja
adcl
cmp
mov
dec
push
outsl
cmp
mov
xor
subl
fsin
out
test
sub
xor
add
in
ret
mov
mov
ret
push
inc
icebp
mov
mov
insb
and
cmp
pop
sahf
faddl
jo
or
xchg
mov
add
push
xchg
xchg
pop
fstpl
adc
adc
sti
in
inc
mov
negl
push
push
xor
jp
inc
jb
adc
dec
fisttps
jnp
movsb
push
push
lret
ficomps
push
push
cli
inc
sbb
das
xor
adc
imul
fcoml
and
clc
adc
popf
nop
jo
cmp
ds
pop
sbb
test
das
test
addb
pop
loope
jnp
sub
or
dec
lea
mov
jns
add
sbb
mov
push
cmp
lret
stc
in
out
xchg
jnp
pop
add
jle
cwtl
gs
inc
dec
cmp
jmp
mov
jge
or
and
das
add
cmp
hlt
ret
aaa
jge
adc
out
xor
xor
sbb
inc
or
in
jl
jge
and
jecxz
shlb
orl
mov
sti
ljmp
jp
push
xchg
seta
sti
daa
add
movsl
jl
icebp
je
nop
xchg
dec
ja
shl
sbb
popf
dec
clc
push
cltd
aas
and
lods
adc
sbb
push
mov
out
insl
or
mov
fsqrt
jns
lods
arpl
inc
xchg
lods
sub
pop
int3
les
sub
mov
rcll
das
push
rcrl
into
sti
dec
div
inc
add
sbb
ret
call
aad
or
imul
push
leave
sahf
lahf
outsl
add
mov
jb
or
sub
pusha
jo
scas
cli
shrb
scas
push
insl
ljmp
iret
inc
and
mov
add
outsl
lods
fsubrl
lcall
and
mull
add
mov
lret
int3
aas
jp
arpl
xor
push
adc
jle
out
xor
mov
stc
pop
push
jmp
gs
sarl
orl
xchg
jne
xchg
cmp
repnz
mov
test
mov
lret
int3
jb
fld
repz
add
sub
adc
and
in
xor
clc
xchg
ljmp
fldenv
gs
inc
aaa
mov
mov
and
icebp
jge
rcr
roll
adc
add
out
xchg
mov
mov
mov
sarb
stos
dec
pop
sbb
jbe
aas
push
push
das
movsl
inc
add
sub
sub
shrb
pop
pop
ret
or
sub
testb
sar
in
insb
or
aaa
and
xchg
xchg
xor
push
jbe
shll
dec
push
add
scas
adc
cmc
stos
dec
ljmp
pop
xchg
mov
inc
fisubl
cli
repnz
push
or
push
sbb
xchg
scas
clc
loop
cmpsb
mov
xor
sub
adc
cmp
pop
and
test
and
sbb
loope
cwtl
adc
inc
push
mov
jns
clc
mov
daa
scas
nop
seta
cmp
ret
pushf
ja
ds
in
not
sub
mov
and
ret
icebp
movsl
pop
fisubl
push
lock
add
in
cli
adc
hlt
push
inc
mov
lahf
insw
xchg
ds
je
push
pusha
add
jp
addb
cmpsl
test
or
sti
out
das
aad
iret
daa
pop
push
ljmp
loopne
xchg
xor
sti
mov
inc
cltd
mov
lods
aam
xchg
test
lods
shl
cmpsl
pop
je
mov
fmuls
popf
mov
xchg
int3
rorb
push
roll
fmull
dec
mov
mov
mov
movsb
adc
xor
ljmp
fadds
js
push
sbbl
ja
test
sbb
jle
ljmp
cmp
push
push
pop
aad
popa
mov
push
and
push
push
and
dec
sub
divl
insl
cmp
push
xor
negb
jae
cmp
mov
mov
adc
xor
jb
jo
andl
rorb
xchg
cmp
mov
sbb
loope
xor
and
lods
pop
lock
and
pop
jb
lret
cmp
fucomip
daa
jns
cmp
adc
cltd
push
cmp
xorb
jno
movsb
add
add
cmp
jns
push
add
shrb
divb
push
daa
lock
repz
cmpsl
xchg
popf
and
or
insb
push
add
add
xor
scas
sub
enter
mov
orl
in
cs
inc
rcl
xchg
sbb
or
arpl
ret
push
idiv
ret
sti
push
xchg
sub
xchg
or
cmp
jb
pop
dec
mov
pop
adc
inc
icebp
stos
xchg
mov
sbb
dec
lea
shl
js
mov
lret
jp
jecxz
pop
mov
and
pop
xor
sbb
addb
out
lahf
cltd
sub
pop
dec
insl
mov
stc
xchg
imul
mov
sahf
out
mov
adc
in
hlt
pop
call
cmpsl
jle
sbb
movsl
inc
cmp
incb
xchg
out
add
mov
cwtl
mov
jmp
xchg
xchg
adc
mov
call
pushf
hlt
dec
xchg
inc
dec
jb
mov
inc
mov
rol
pop
adc
xchg
and
repnz
imul
es
int
mov
add
call
xor
sub
cld
cli
jno
mov
mov
aam
jae
xorb
add
hlt
adc
and
nop
cmpsl
xchg
addr16
xor
push
jno
jg
ficoml
les
out
xor
jp
add
sub
shlb
jl
mov
xchg
dec
movsb
es
dec
cwtl
adc
aaa
push
hlt
cmpsb
loope
arpl
inc
pop
mov
stos
int
subb
pop
xor
pop
out
ret
sub
rcl
xor
xchg
cmp
pop
mov
sbb
or
lret
fcmovnb
jns
jae
dec
mov
int
jp
inc
add
xor
push
mov
cmp
shrb
dec
inc
xor
mov
iret
and
add
xchg
or
movsb
pop
xchg
mull
add
into
mov
xchg
and
push
jne
lret
gs
sub
sbb
aas
sbb
test
loope
js
outsb
pop
fcmovbe
adc
push
in
add
pop
gs
sbb
xchg
repnz
xchg
fwait
xchg
sub
push
out
test
jb
jp
mov
dec
lret
push
push
repz
and
add
cmp
lcall
or
sbb
cld
or
mov
outsl
cmp
ja
int3
sbb
rcll
ss
popa
clc
ja
sbb
aad
push
int
in
lock
and
adc
adcl
repz
add
ds
js
aam
sub
arpl
mov
add
and
dec
inc
mov
js
adc
aas
mov
or
xor
push
or
mov
out
lods
xchg
add
in
fwait
push
stc
inc
inc
out
popa
lds
mov
sti
pop
call
mov
pop
ljmp
push
jg
inc
ds
and
cmp
xor
xor
fcmovnu
mov
lods
xchg
jne
jno
stc
lret
test
int
ss
mov
inc
jecxz
cmp
jae
js
adc
subl
push
xor
mov
mov
mov
push
pop
pop
std
mov
hlt
out
push
and
leave
cli
pop
push
jno
pop
adc
add
ret
bound
mov
push
addl
xchg
sbb
jne
xchg
pushf
mov
std
push
jo
adc
pop
ljmp
ret
jnp
paddusw
add
iret
cmp
xchg
dec
sub
mov
xlat
jo
jno
mov
lea
xorb
sbb
jmp
xor
dec
mov
out
iret
push
sarl
jne
es
fxch
add
mov
xor
pop
inc
pop
mull
lds
movsb
xchg
sub
jnp
cld
jb
cmp
addr16
mov
xchg
icebp
xchg
mov
or
dec
mov
inc
mov
imul
mov
imulb
shll
xchg
add
pop
dec
adc
pop
and
popa
lods
mov
lea
or
loope
ret
mov
lea
sbb
jecxz
jnp
hlt
mov
xchg
out
repnz
clc
mov
cmp
fs
push
in
xchg
loop
or
push
and
pop
int
dec
sti
mov
mov
insb
int3
pop
roll
fcompl
jle
sbb
scas
daa
cmpsl
push
sbb
xchg
adc
sti
scas
dec
xchg
push
icebp
xlat
pop
in
rcr
aad
adc
and
or
cld
pop
hlt
add
jp
mov
or
inc
push
daa
mov
inc
xor
add
push
test
mov
int3
mov
ficompl
sub
iret
and
in
add
nop
loope
scas
mov
xor
pop
pop
jge
int
inc
sbb
fadds
sbb
xor
out
mov
out
imul
imul
mov
jl
sbb
test
cmp
sub
test
into
xor
sti
inc
cmp
roll
ret
sbb
pop
stos
and
sbb
push
in
rcrl
adc
xor
and
out
mov
je
ljmp
or
push
stos
jb
jp
jmp
cmp
addr16
outsb
mov
push
dec
mov
pop
mov
lea
xor
int
mov
mov
xor
pop
add
cmpsl
ja
enter
loop
push
enter
mov
cmp
sub
mov
cltd
fstpt
out
pop
lcall
std
ss
int
dec
jne
jecxz
pop
inc
cmp
cmp
push
adcl
dec
xchg
addr16
jp
or
outsb
scas
sbb
out
repnz
mov
pop
sub
and
aad
mov
movsb
aam
sbb
jne
add
jmp
xchg
jbe
adc
clc
addr16
xchg
xchg
and
mov
shr
jnp
test
xor
mov
add
pop
ret
inc
dec
gs
sub
fstpl
aas
aas
push
adc
dec
addr16
mov
mov
gs
gs
stos
in
shrb
mov
pop
add
pop
xchg
push
xor
mov
xor
notb
insb
popf
mov
stc
loop
jmp
push
clc
out
cmp
arpl
push
mov
pop
out
adc
shr
cltd
addl
inc
mov
and
lea
es
lret
icebp
jg
fisubs
test
xor
out
dec
sub
in
loop
test
push
in
mov
call
aas
xor
push
pop
dec
sbb
pop
bound
shll
or
cli
incl
sbb
sbb
push
dec
movsl
cmp
add
cmp
fcoml
fisubl
add
cmp
dec
or
jmp
add
xor
aaa
mov
or
or
lret
mov
imul
fidivrl
lcall
adc
fs
aam
xchg
push
sub
adc
nop
js
cld
lods
clc
push
fwait
movsb
shr
mov
mov
dec
xor
add
or
enter
aam
repz
sti
nop
out
dec
adc
in
test
mov
push
leave
filds
mov
fsubl
dec
fcomps
stos
dec
xchg
mov
jp
inc
loope
shl
movsl
add
mov
lock
js
in
movsb
in
xchg
data16
sbb
int
ja
lret
insl
pop
nop
addl
push
jg
pushf
jle
adc
std
or
xchg
test
mov
add
outsl
shr
enter
fwait
xchg
pop
in
push
mov
push
and
mov
aas
mov
sub
jmp
cmp
das
xchg
insl
or
shlb
dec
adc
aas
subl
les
imul
jecxz
cltd
inc
mov
clc
xor
cmpsb
out
imulb
inc
mov
mov
cmp
enter
hlt
sbb
arpl
push
jge
mov
dec
or
insb
push
outsb
fbstp
push
push
mov
mov
add
pop
pop
call
cli
mov
fnstsw
mov
and
jle
lahf
lret
shr
ja
add
dec
sbb
jle
pop
push
push
sti
js
insb
fnstenv
xor
or
pop
icebp
cmp
push
mov
inc
cmp
or
sub
and
js
push
mov
arpl
out
cmpsb
adc
popf
movsl
mov
sbbl
out
cld
push
nop
jmp
xor
mov
pop
adc
push
iret
push
and
mov
inc
int3
cmp
into
mov
mov
mulb
xchg
push
test
mov
lds
jle
incb
fildl
fs
imul
sbb
add
adc
mov
sahf
sub
or
add
loope
mov
xor
push
and
sbb
in
pop
adc
gs
jmp
jb
ljmp
jge
pop
pusha
pop
fstpl
pop
cmpsl
jne
loope
inc
scas
popa
fcomps
repnz
sub
push
xchg
mov
or
jmp
outsb
outsl
jo
xchg
cmp
push
mov
add
fsubs
imul
lods
inc
mov
adc
sbb
push
addr16
icebp
call
mov
sbb
mov
dec
pop
lret
or
mov
pushf
mov
dec
mov
icebp
xor
sarl
jge
pop
xchg
mov
push
xchg
mov
xchg
mov
js
xchg
mov
ja
imul
stc
aad
mov
push
and
mov
xor
and
fidivs
mov
mov
sbb
push
add
ret
xchg
into
xchg
jns
movsl
outsb
stos
xchg
cmpsb
dec
fucom
push
popf
sti
xchg
jnp
dec
push
sub
cs
push
test
xor
pop
push
mov
inc
inc
jmp
mov
fdivr
cltd
rorb
and
lds
push
jmp
xchg
test
xchg
add
aad
repnz
mov
xchg
push
adc
xchg
test
into
orps
shlb
mov
and
rorl
lret
lods
mov
repnz
mov
inc
xor
mov
jae
enter
or
inc
add
orb
sbb
cmp
mov
enter
shll
xchg
daa
mov
pop
push
inc
leave
add
xchg
out
out
jne
outsl
lods
mov
nop
xor
fnsave
sbb
cmp
iret
fcompl
fists
jecxz
shl
arpl
arpl
sub
push
test
adc
rorl
lcall
fidivl
sub
mov
outsl
mov
adc
jb
and
rsqrtps
pop
push
jl
xchg
jl
adc
lcall
mov
mov
dec
mov
mov
fstpt
xor
scas
loop
adc
xor
push
push
mov
leave
jg
repz
mov
fdivr
ss
pop
adc
pop
pop
cmp
lock
mov
push
lahf
fisubl
adc
jo
sbb
push
insb
push
inc
test
sub
fldenv
or
sub
mov
xchg
mov
stos
addr16
mov
jb
out
sbb
and
or
and
cmpsb
adc
inc
bound
jb
and
mov
xchg
lods
and
xchg
add
jns
call
rorl
mov
int3
sbb
add
jle
inc
inc
add
call
mov
xor
iret
stc
out
addb
sbb
ss
pop
movsb
sub
je
push
lret
aam
mov
imul
int3
mov
sub
push
add
movsl
das
or
mov
es
fdivrs
fistpl
jle
out
pop
clc
cld
mov
ret
mov
jge
fbld
pop
and
or
xlat
test
inc
dec
jmp
push
and
adc
or
xor
inc
lcall
mov
xchg
jl
leave
aas
and
mov
xor
bound
adc
add
push
pop
push
add
lds
nop
addl
xor
int
jnp
cmp
dec
in
cwtl
dec
fistpll
cmpsb
test
lds
xor
sbb
mov
lods
adc
std
add
imul
mov
or
das
mov
sbb
imul
and
iret
mov
adc
ficomps
out
stc
ss
mov
outsl
lods
sbb
mov
sbb
push
sbb
cli
push
xbegin
pusha
dec
add
add
pop
cmp
in
or
roll
mov
mov
nop
test
fdivl
mov
mov
inc
bound
pop
cltd
repz
nop
fldenv
cmpb
int
or
jae
xor
dec
imul
xchg
loop
jne,pn
pop
ja
push
jb
daa
mov
ret
jbe
out
aaa
pop
test
push
pop
arpl
fadds
hlt
inc
lods
scas
mov
aam
xchg
cwtl
daa
mov
gs
xchg
xor
pop
jge
fidivrl
call
loopne
sbb
pop
test
push
sarb
aam
mov
mov
andl
jne
pop
jecxz
lods
sarl
mov
in
dec
cmp
add
pop
mov
mov
and
subb
ljmp
in
push
bound
push
xor
faddl
xor
or
movsb
mov
mov
jmp
jb
outsb
or
pop
mov
sarl
idivl
fisttpll
push
or
adc
aam
jge
dec
mov
sahf
mov
clc
and
iret
daa
cmp
jmp
cmp
inc
cli
push
push
and
fs
xchg
std
mov
push
jnp
dec
or
push
rcll
fsubl
sub
jl
pop
push
mov
aad
andl
test
or
jl
xchg
dec
cmp
es
sbb
mov
inc
dec
push
outsl
loopne
stos
sub
sarb
add
cld
sub
inc
popf
cmp
jno
int
hlt
sub
repnz
ja
cld
arpl
sbb
mov
cld
dec
jg
adc
movsb
cmp
xchg
mov
loop
mov
push
and
into
inc
ljmp
adc
orl
sbb
mov
cltd
add
repnz
mov
ret
fbld
add
mov
movsl
shll
fdivr
jg
or
sbb
loop
dec
mov
jle
cs
aad
jne
gs
mov
pop
stc
into
xchg
fnsave
movsl
sti
call
lods
out
fnstcw
stos
jp
cmc
mov
adc
adc
stc
lds
cmp
lock
cmc
or
mov
lods
out
stos
mov
push
stos
lds
jne
lret
mov
test
sti
scas
pop
mov
jmp
pop
add
imul
xchg
insb
in
push
add
inc
aaa
cmp
and
call
clc
fimull
ds
fistps
mov
aad
push
rcrl
dec
lock
cmpsb
or
je
cmp
lock
adc
pusha
mov
jne
mov
mov
adc
push
popw
cli
rorl
out
popa
scas
loop
fisttpl
sbb
aad
jl
add
dec
in
adcb
das
addr16
and
sub
imul
add
xchg
add
fisttpl
pop
int3
push
roll
push
subl
or
push
jne
insl
mov
fldl
shr
jno
flds
xchg
ljmp
loopne
rorl
pop
jl,pt
mov
lret
call
loope
xor
test
or
dec
push
sub
adc
mov
adc
sub
push
shlb
lods
fildll
daa
fisttps
jns
test
xor
push
in
bound
jl
idivb
pop
dec
fldenv
mov
sub
jbe
cmpsb
orb
test
pop
pop
adcb
adc
push
mov
push
cmp
call
repnz
mov
adc
add
inc
inc
ja
nop
cltd
lahf
in
mov
adc
daa
fcompl
jbe
mov
fwait
cmp
xchg
lock
lods
shll
ret
repz
jle
stos
ds
out
ljmp
push
sbb
js
jno
lock
jo
pop
movsb
cmp
out
mov
adc
push
test
mov
leave
mov
mov
pop
or
push
add
mov
nop
rcrl
iret
mov
push
jns
mov
jbe
cmc
mov
pop
arpl
mov
fstl
jmp
scas
jns
mov
dec
sbb
ja
xor
scas
adc
nop
push
mov
and
out
mov
xchg
mov
dec
inc
jl
out
xchg
inc
mov
jge
jnp
ja
xor
test
loopne
add
xchg
out
lock
dec
movsb
stc
mov
add
xchg
mov
iret
daa
stos
ss
int3
stos
and
and
fsubrs
push
xchg
push
sub
imul
fneni(8087
ret
nop
jae
add
aaa
shlb
add
fnsetpm(287
sti
fimull
add
shlb
push
push
mov
cmp
std
inc
imul
dec
shlb
pop
cli
out
lcall
dec
dec
popa
or
bound
icebp
mov
int
xchg
ljmp
je
sub
lcall
stos
fwait
shll
ja
push
mov
aas
test
sbb
cmpl
mov
ret
add
sar
sub
mov
xchg
inc
imull
cld
cmp
aad
nop
test
dec
lahf
add
sub
mov
jp
dec
outsl
pop
pop
scas
fcmovbe
clc
mov
pusha
rolb
push
pop
and
loope
outsl
cmp
shll
cmp
and
pop
addr16
adc
insl
mov
stc
xor
adc
aam
lahf
dec
mov
clc
add
push
ret
adc
filds
ss
adcb
xor
and
adc
adc
jbe
fs
mov
loop
int
fld1
enter
inc
xor
mov
jge
mov
popf
xor
or
arpl
mov
lahf
push
xchg
sbb
add
mov
push
dec
sub
jne
pop
adc
push
fnstcw
adc
lret
jle
popa
icebp
mov
ret
inc
jecxz
shl
int3
mov
xchg
pop
xor
pushf
leave
xor
je
ds
lea
push
aaa
mov
scas
gs
pop
decl
xor
in
daa
jg
jbe
shlb
int3
lock
add
or
lock
es
xchg
inc
adc
std
lret
jnp
dec
sbb
and
jne
push
push
lret
or
ss
cmpb
adc
sub
xchg
jg
cmpsb
loop
mov
xor
sti
push
nop
cmp
movsb
ret
xor
sbb
cmp
and
ret
subb
push
sbb
or
cmp
jne
jmp
sub
jbe
insl
jle
xor
mov
sub
mov
insb
fwait
incb
mov
xor
jmp
xchg
hlt
xchg
lcall
xchg
xor
or
jle
pop
jle
adc
or
or
pop
into
ret
push
dec
mov
pop
sbb
sbb
pop
xchg
sub
pop
ret
repnz
ficoms
pop
dec
inc
int
add
ret
into
imul
jecxz
mov
dec
mov
and
inc
das
jecxz
repz
fistps
fwait
lea
nop
lahf
mull
stos
jle
dec
shr
mov
lret
xor
xlat
dec
push
mov
aas
mov
daa
stos
inc
xor
and
in
arpl
push
mov
cmpsl
pop
scas
fxch
into
jmp
mov
scas
bound
push
sub
mov
cmp
sbb
lret
pop
int
jl
cmc
xor
sbb
cmp
arpl
lock
add
dec
adc
fidivrl
adc
mov
sbb
arpl
pop
adc
jecxz
sub
movsl
push
jecxz
lcall
imul
jno
mov
in
jno
and
outsb
cltd
cmp
in
inc
lea
das
in
mov
pop
pop
pop
ficomps
andb
pop
and
lret
pop
dec
lods
mov
sbb
xor
ds
adc
xor
inc
inc
push
fwait
adc
mov
xor
ljmp
xchg
sbb
iret
mov
jl
dec
mov
sahf
imul
movsl
leave
cmp
pop
enter
mov
sub
rorl
push
pushf
pop
and
xor
xorb
xor
mov
pushf
jp
xchg
pop
leave
fcoms
inc
inc
add
and
das
xor
ds
adc
cmp
lock
bound
stos
ljmp
bound
sbb
mov
sar
addl
aam
inc
shll
movsl
pusha
movsb
dec
ljmp
enter
fs
popf
dec
je
or
mov
dec
loop
jmp
lock
or
and
test
cmp
aam
sbb
jecxz
ljmp
adc
xchg
in
fidivrl
jb
add
lods
repz
sub
adc
fidivrl
cmpsl
ss
jnp
ss
dec
add
adc
sub
cmp
jecxz
inc
mov
inc
jns
cli
sbb
pop
lret
push
lods
aas
aad
cmp
roll
pop
fwait
mov
stc
mov
int
pop
imul
loopne
cmc
into
dec
cltd
mov
lock
fadds
testl
out
out
dec
lgs
fsqrt
dec
or
push
dec
sbbb
adc
frstor
push
mov
xchg
popf
out
add
aaa
add
push
stc
pop
js
sbbb
mov
xchg
or
push
or
or
xchg
or
js
lods
inc
xor
loope
mov
pop
ss
adc
cs
mov
repz
and
xchg
mov
sbb
ret
in
jecxz
ret
pop
sub
js
push
or
pop
jb
mov
aaa
or
mov
cmc
test
xor
xchg
ljmp
mov
xor
jle
jo
roll
push
push
xor
cli
stc
les
loop
mov
mov
cli
cltd
and
add
jp
lds
mov
and
lea
leave
jns
xchg
dec
jae
add
dec
fdivrs
leave
addr16
jb
daa
pop
mov
out
inc
aad
push
push
mov
insl
pusha
jp
testb
adc
mov
out
mov
popf
xlat
dec
fistpll
mov
xchg
nop
xchg
jle
dec
sbb
fwait
dec
cmpsl
sahf
and
shr
ja
imul
call
sbb
aaa
add
gs
das
clc
cmp
add
jp
pop
out
dec
pop
lret
sti
popf
test
inc
mov
xor
jno
dec
sbbl
or
dec
pop
adc
jo
lock
push
les
sbb
notl
clc
loope
jmp
mov
mov
sub
aaa
loope
les
adc
std
mov
movsb
or
and
sub
add
pusha
test
aaa
adc
sahf
push
jg
jge
push
fidivs
sti
in
adc
inc
dec
mov
pop
out
inc
psubb
icebp
fmulp
push
mov
pop
lret
adc
loop
mov
xor
sahf
inc
adc
mov
push
mov
inc
cltd
cmpl
inc
in
ja
clc
test
dec
outsb
out
cwtl
stos
jnp
sarb
cmp
pop
dec
adc
paddb
mov
and
push
push
cwtl
in
aam
leave
sub
and
add
pop
iret
cwtl
cmp
jg
aam
push
out
xor
mov
pop
mov
or
cltd
out
add
loop
adc
xchg
sub
cwtl
nop
ret
dec
fs
mov
popf
sbb
cld
adc
mov
cbtw
dec
sbb
shrl
mov
fwait
adc
and
lahf
xchg
or
ljmp
outsb
out
adc
fildl
mov
aaa
and
out
cmpb
mov
jg
jnp
jl
push
test
fdiv
repz
out
js
ss
test
popf
pop
movsl
scas
imul
loope
addb
ss
adc
cmpsl
loope
outsl
mov
pop
mov
sbb
enter
dec
mov
lods
cmp
jmp
pop
outsb
test
clc
mov
loope
cmp
mov
insb
enter
mov
and
pop
jg
xor
lods
jecxz
and
ja
adc
movsl
jecxz
and
psadbw
add
or
in
out
nop
add
testb
sbb
mov
xchg
jp
or
clc
je
mov
loope
popf
rorb
lods
sub
push
addb
loop
mov
cltd
xor
fidivs
dec
fs
div
mov
loop
xor
xorb
xchg
add
xchg
mov
jno
in
dec
divl
mov
es
out
or
sti
jb
mov
adc
rorl
sub
sbb
add
test
mov
sbb
xor
ss
jbe
dec
pop
cmp
sahf
lcall
xchg
pop
jle
push
add
daa
out
cmc
cmp
test
cmpsb
aas
repnz
cmp
mov
loopne
xor
xor
rcr
into
dec
fidivs
shlb
mov
cmp
rcl
insl
popa
daa
dec
sub
jg
cli
int
mov
xchg
sub
addr16
mov
add
bound
test
and
add
lock
push
add
push
lahf
in
sub
mov
sbb
leave
enter
or
mov
cmp
mov
xchg
decl
scas
fisubrs
mov
mov
data16
cwtl
pop
test
imul
jmp
xor
xchg
pop
or
icebp
sub
fimuls
fisubs
push
inc
es
cmpb
rcr
mov
mov
pop
or
mov
xor
push
and
xorl
sbb
fldt
xchg
dec
arpl
push
movsb
testb
push
inc
inc
notb
jl
cmpl
xchg
pop
dec
fwait
scas
dec
mov
test
aaa
pop
pusha
push
jns
std
into
jge
push
add
jae
daa
cs
in
jmp
and
out
aam
ds
mov
inc
cltd
js
aam
sarl
xchg
jbe
push
stos
in
add
out
add
sahf
fwait
int
cs
sbb
xchg
sbb
arpl
loop
pushw
cmp
dec
test
xor
sbb
mov
mov
push
or
leave
pushl
jge
inc
icebp
dec
lret
orb
in
inc
cwtl
inc
fucomp
adc
aad
test
cmpsl
repnz
sub
jmp
xchg
sti
out
mov
xchg
cmp
xchg
fidivrl
inc
adc
pop
add
xchg
lcall
mov
adc
sbb
aad
xor
dec
mov
add
jl
inc
nop
pop
xlat
lret
out
xor
and
pop
sub
sahf
nop
jbe
push
dec
and
dec
or
jnp
xchg
inc
mov
pop
aad
pop
mov
mov
sub
push
mov
pusha
sub
mov
push
lock
aam
push
mov
mov
ds
shlb
repz
ja
in
shlb
sub
in
mov
enter
movsb
adcb
andb
nop
xor
mov
bound
aam
out
insl
pop
ret
popf
mov
adc
imul
out
inc
pop
xor
jno
out
out
enter
xor
dec
stos
nop
push
dec
xchg
xchg
hlt
dec
xor
adc
aad
cmp
outsb
scas
inc
push
inc
adcb
inc
scas
rclb
xor
int
push
sbb
jge
jno
add
inc
pushf
sub
xlat
or
and
jnp
mov
or
scas
lret
ret
imul
sbb
mov
lret
xor
cwtl
mov
out
shlb
int3
sbb
ljmp
cmpsb
test
repz
sub
ret
rcr
pop
inc
dec
push
loop
shlb
testb
leave
rorb
enter
outsl
xchg
jge
popa
adc
mov
sahf
pop
adc
xor
out
out
loope
sbb
mov
mov
clc
in
ja
add
pop
mov
das
push
in
data16
mov
jg
insb
mov
gs
outsb
call
cmpsl
inc
inc
push
subps
fisttpl
pop
test
dec
fsubs
rclb
loop
js
bound
lret
test
pop
mov
add
lods
lock
outsl
jnp
cld
rclb
jnp
call
imul
clc
insl
cli
pusha
cwtl
mov
adc
out
fwait
mov
loopne
test
sahf
or
inc
or
ror
push
xlat
adc
mov
and
xlat
arpl
dec
fs
lods
inc
xor
scas
cmp
inc
cmp
pop
scas
xchg
cwtl
loopne
js
jecxz
pushf
bound
mov
push
cmpsl
pminub
and
push
push
jne
loopne
in
imul
mov
inc
dec
push
xchg
mov
cmp
repz
in
rcrl
jl
mov
les
and
adc
pushw
rcl
jmp
mov
daa
decl
gs
pop
cmp
sbb
inc
scas
mov
pop
fnsave
stc
les
pop
outsb
mov
cmpsb
jle
ljmp
inc
out
sbb
lret
insb
imul
mov
sub
ret
arpl
dec
stos
add
dec
ds
in
push
push
clc
xchg
lret
mov
test
movsl
cmpsl
or
push
divb
push
enter
fs
jb
test
les
scas
fdivrl
xorb
cltd
lock
jbe
int
ljmp
jae
mov
ss
mov
mov
incb
or
sbb
into
pop
and
mov
ljmp
in
fildll
xorb
in
xor
dec
divb
sub
pusha
push
cld
mov
xor
sti
mov
mov
inc
or
rol
test
outsl
xchg
into
leave
mov
fwait
push
popa
mov
dec
dec
jg
std
push
lods
aas
pop
dec
out
mov
push
adc
in
scas
jmp
repz
int
jne
cmp
aam
jbe
mov
sbb
sbb
out
jo
pop
sbb
loope
in
std
mov
mov
jge
cmp
imul
mov
loop
test
xor
pop
push
fdivr
dec
cli
lret
xchg
fstpt
insb
push
je
xor
sti
push
popa
cmp
fyl2xp1
ret
jnp
fadd
pop
jae
inc
data16
mov
and
mov
pop
sti
or
fldcw
sub
outsb
push
or
popa
insl
sbb
dec
bound
lock
xchg
mov
jp
or
xchg
das
out
shll
cwtl
cwtl
mov
sbb
sub
out
into
inc
xchg
cmpl
into
cmc
loop
xchg
jle
jo
lret
inc
sub
sub
push
mov
movsb
shlb
add
mov
in
in
jg
push
sub
and
stos
es
repnz
and
pop
mov
fadds
jae
dec
lea
xchg
xchg
mov
cmp
cli
loopne
mov
inc
mov
hlt
lock
sub
xor
push
call
jbe
bound
repnz
fwait
push
mov
mov
inc
pop
jmp
inc
into
pop
sub
dec
sub
ret
push
adc
adc
clc
add
pushf
mov
xchg
adc
aad
nop
rorl
rorl
xor
in
and
push
icebp
cld
out
in
push
je
mov
notl
and
jl
jg
xchg
roll
popf
sbb
sti
pop
and
adc
insb
cmp
add
xchg
pop
xchg
sbb
mov
imul
das
cmp
adc
je
sbb
lea
in
out
outsl
test
mov
push
movsl
int
push
or
mov
lods
mov
add
add
bound
cmp
pop
inc
sub
mov
loop
or
shrb
pop
negl
iret
xor
add
mov
xor
jbe
mov
lret
dec
cwtl
arpl
sub
repnz
out
ficomps
es
not
scas
lahf
mov
xchg
sbbl
cmp
add
mov
push
test
stos
xor
or
xchg
mov
rcll
lahf
mov
nop
sahf
mov
mov
mov
scas
scas
push
mov
int3
aad
dec
push
out
ja
jns
mov
jae
arpl
xor
repz
cltd
into
sbb
test
xchg
mov
icebp
popf
jecxz
mov
push
das
mov
shl
mov
call
test
xchg
mov
into
data16
cltd
aas
jno
rorl
in
mull
cmp
push
jo
cmp
sub
or
sahf
pop
or
loope
push
or
or
in
push
aad
out
or
test
mov
aas
cmpsl
pop
shrl
jnp
shll
sbb
adc
mov
xchg
fldcw
mov
testl
fwait
pop
cmp
mov
push
stos
push
add
xor
loope
pop
jmp
rol
sub
aaa
mov
jb
sbb
sbb
ljmp
sbb
lea
movl
aam
pop
mov
sub
and
rcrb
add
mov
cmp
cwtl
mov
cmp
add
xlat
stc
les
and
hlt
jae
scas
imul
push
notb
lret
in
ficompl
movsl
repnz
repnz
xchg
or
leave
dec
and
dec
clc
lcall
out
stos
xchg
aaa
pop
imul
xchg
gs
or
xor
cs
imulb
lahf
out
cmp
inc
sub
adc
test
movsl
and
adcl
jb
outsb
insl
fdivrs
rolb
imul
mov
xchg
push
jne
insb
lcall
not
dec
movsb
aam
arpl
jns
cmp
and
add
cmp
mov
ljmp
sub
mov
lret
fs
xchg
adc
jge
dec
cmp
xchg
cs
test
sti
mov
dec
test
out
dec
mov
inc
pop
add
add
cltd
dec
xchg
add
adc
adc
add
jns
xor
pusha
lret
adc
push
mov
rcl
jg
adc
dec
and
mov
dec
xchg
cmp
push
lods
xchg
push
int3
xchg
xor
xchg
sbb
and
fdivs
xchg
adc
das
pusha
cwtl
cs
test
adc
jle
bound
push
stos
clc
xor
mov
shrl
ret
jmp
dec
push
in
scas
add
lods
cwtl
inc
out
test
and
repnz
loop
loopne
sub
lock
push
inc
pop
lea
adc
cwtl
scas
loope
ljmp
movsb
mov
pop
shl
pushf
xchg
popf
inc
jle
int3
fucomi
cmp
jb
jp
out
mov
push
mov
test
push
addb
fdivr
cmp
jp
fwait
cld
clc
inc
xchg
lahf
jno
out
mov
leave
stc
imul
and
sub
out
ja
mov
loopne
dec
shr
cld
lock
jecxz
or
outsb
push
push
pop
jge
push
ret
pop
dec
int3
bound
sub
xchg
cmp
mov
mov
pop
pop
fisubl
jge
inc
xchg
mov
pop
popa
aaa
mov
lods
mov
push
xor
lock
cmp
push
repz
dec
ret
jp
pop
mov
inc
adc
pushf
std
jb
jge
outsb
adcb
mov
pop
addr16
mov
je
iret
sbb
jmp
in
push
dec
outsl
sub
fdivrs
aaa
std
adc
test
aad
lea
xor
repnz
lods
xchg
cmpsl
adc
add
lret
mov
loop
mov
das
sbb
pop
loopne
cmpsb
lea
and
cmc
jb
popf
cmp
lcall
push
jmp
dec
aam
sub
insl
and
xchg
jbe
mov
mov
mov
iret
divb
jl
repnz
push
lock
add
dec
mov
lret
aaa
or
std
fidivrs
orl
sbb
cmp
adc
inc
je
cmpsl
fstpl
out
lods
insl
sub
inc
fiaddl
sti
rorl
inc
test
adc
lret
cmpsl
scas
jo
das
clc
rcrb
dec
mov
adcb
mov
add
cmc
sub
int3
xlat
or
jle
in
stc
inc
add
sbb
and
loope
jge
pop
into
aas
fiaddl
and
stc
cli
aas
outsl
out
les
out
pop
add
out
mov
sub
push
pop
pushf
ffreep
les
pop
xor
cli
stos
loopne
xorb
adc
inc
loope
and
add
aaa
add
ds
out
dec
sbb
dec
push
push
mov
xchg
das
cmp
pop
mov
popa
push
sbb
and
mov
adc
gs
movsl
ljmp
pop
fdivrs
jmp
repnz
inc
lret
mov
fwait
dec
xor
insl
dec
loopne
pop
lahf
mov
mov
fs
sbb
std
aad
jp
sbb
sbb
popa
cmp
aam
add
sub
test
dec
push
xchg
add
clc
lahf
mov
lods
int3
mov
in
push
lods
sub
dec
aad
test
lds
or
pop
icebp
aaa
push
stos
call
pop
outsl
stc
push
je
xchg
sbb
inc
dec
in
inc
cmp
scas
inc
or
push
xchg
inc
lahf
lret
inc
jno
stos
shll
sub
int
xor
jne
push
push
ja
scas
add
add
adc
jmp
sbb
mov
cltd
mov
stos
subb
add
mov
int
push
cwtl
call
and
push
call
or
je
repnz
in
xchg
bound
pop
sub
ret
iret
les
and
xchg
std
mov
call
xor
popf
enter
dec
in
es
adc
jecxz
out
inc
imul
sub
loope
adc
inc
aad
push
fisttpl
xor
jp
xchg
pop
cmpsl
push
jns
xchg
nop
in
push
shll
lret
iret
gs
out
mov
addr16
ss
push
xlat
aad
fldt
sahf
jno
mov
fsubrs
push
dec
add
jo
aam
push
inc
xorl
bound
arpl
insl
sub
pop
mov
call
or
xorb
adc
add
adc
sub
or
xchg
out
test
mov
pop
inc
and
push
movsl
jns
mov
arpl
jbe,pn
mov
sub
fs
rorb
xor
inc
fisubl
inc
xor
inc
jge
lock
test
out
jb
mov
inc
and
iret
mov
gs
push
sahf
jl
mov
xchg
cli
mov
push
mov
daa
xchg
test
mov
icebp
sbb
mov
push
mov
push
mov
xchg
out
test
push
daa
cwtl
rol
mov
mov
pop
mov
and
pop
mov
ficoml
push
negl
subl
adc
das
dec
jb
adc
leave
cli
in
es
aad
jecxz
in
leave
jae
pop
mov
es
xchg
jge
jae
sbb
lcall
and
sbb
xorb
sarb
leave
ret
std
and
and
iret
imul
stc
add
test
lea
repz
pop
push
int3
and
jno
out
mov
sbb
push
fiaddl
lcall
lds
roll
dec
int3
fbld
add
add
jns
sub
inc
stos
fwait
test
outsb
lcall
push
mov
bound
das
mov
cmpsb
dec
dec
mulb
mov
mov
or
mov
inc
sbb
pop
adc
idivl
xor
dec
aad
bnd
inc
mov
xchg
or
mov
xchg
sub
sub
sar
outsb
mov
xlat
dec
inc
jno
out
jmp
jb
pop
xchg
ja
adc
push
add
cmc
imul
icebp
leave
rorl
pop
gs
adc
sbbl
mov
loop
push
xchg
pop
mov
cmp
push
stos
xchg
add
cmp
lea
inc
into
out
ljmp
lods
cmp
std
lret
or
aam
pop
mov
sarb
push
jne
pop
and
adc
mov
cli
scas
mov
and
and
lock
xchg
ror
mov
xchg
cmpsb
aas
mov
sbb
jmp
fldenv
jge
testl
in
pusha
and
xchg
fidivrs
jmp
shlb
push
into
std
loopne
aaa
fiaddl
sub
add
shlb
repz
jl
aam
jne
xor
push
repnz
js
pop
dec
mov
jae
fdiv
or
or
push
rcrl
pop
jne
or
mov
mov
pop
imul
pop
xor
inc
ret
inc
divl
cwtl
mov
gs
sub
or
in
imul
xor
dec
sbb
inc
aas
sub
add
cmpsl
pusha
das
cmp
mov
iret
jle
push
fdivr
out
mov
xor
out
les
cltd
add
aad
xchg
je
shlb
cmp
jb
cmpsl
aaa
sbb
or
xchg
pop
pop
lcall
cs
jo
shll
fnsave
std
stc
xchg
mov
lds
movsb
xchg
andb
cmp
lcall
mov
cmp
fsubrl
out
xchg
ja
cmp
dec
xchg
rolb
mov
pop
sbb
test
push
stc
loopne
or
aas
stos
data16
cs
rcrl
pop
stc
lea
inc
cmp
xchg
push
clc
pop
xor
add
pop
xor
dec
andb
into
sbb
xchg
mov
aas
lock
xor
xlat
repz
popa
and
movsb
insl
inc
lahf
aad
or
push
mov
mov
cld
aaa
jb
lods
arpl
mov
lret
jp
push
xchg
add
aam
add
ror
cmp
popf
lret
jg
sahf
mov
mov
pop
mov
and
pushf
push
lret
loopne
lret
rcrb
subb
add
nop
rolb
cltd
jo
aas
ss
aad
loopne
xor
adc
das
aad
dec
adc
call
or
insb
in
cltd
mov
or
dec
push
push
test
popa
lds
mov
dec
dec
jl
xchg
pop
push
js
orb
jo
jns
stc
cmc
bound
insl
loope
sbbb
or
cmc
scas
iret
repz
test
sarl
sub
mov
xchg
sub
sbb
sub
scas
or
jbe
call
adc
test
shlb
or
fsubl
sub
fstpt
dec
sbb
aaa
pextrw
mov
lret
sbb
bound
outsl
cs
leave
dec
pop
pcmpeqd
jbe
mov
into
sahf
inc
cli
dec
cld
jb
ret
pop
jle
icebp
jmp
std
in
adc
push
fimull
mov
test
aas
popa
scas
orl
cmp
mov
jg
pop
or
or
jno
sbb
std
xchg
xor
std
mov
jmp
mov
jo
add
pop
sbb
dec
mov
rol
dec
push
or
cltd
jg
add
stos
add
test
mov
loop
aaa
mov
loopne
mov
cmp
xchg
add
fdivs
xchg
lahf
pop
addr16
mov
adc
negb
ret
movsl
jp
jle
mov
enter
scas
mov
cwtd
xchg
push
fistpl
dec
int
inc
out
inc
mov
jbe
rep
mov
leave
push
lret
dec
pop
aam
das
aad
loop
jnp
dec
shrl
movsb
fildl
pop
jge
adc
cltd
iret
es
out
fstpt
fldt
arpl
adcb
pop
popa
scas
mov
test
mov
stos
pop
paddsw
popf
enter
scas
add
inc
pop
incl
popf
jle
inc
pop
mov
inc
push
inc
out
cmpsl
and
fnsave
loope
dec
cmpl
loopne
inc
mov
jl
push
scas
and
out
add
sbb
xchg
testl
insl
xchg
pop
call
mov
mov
xlat
push
xchg
push
testb
mov
lds
cmpsl
nop
popa
mov
xor
movsb
je
fildll
push
sbb
int3
xchg
xchg
cmp
or
jne
add
ret
int
push
shlb
dec
cmp
xchg
mov
cmp
fcompl
leave
inc
cmp
loop
imulb
icebp
jl
adc
outsb
mov
xchg
or
cli
not
xchg
cld
jle
movsl
sbb
rcll
cmc
rcrb
jns
loop
push
sbbl
jo
data16
ret
lock
call
fdivrl
adc
addb
sti
xchg
fldcw
xchg
cwtl
cwtl
movsl
inc
test
jle
sub
aas
nop
fs
pop
das
push
scas
mov
sti
push
cli
add
xor
lea
cmc
cmp
jne
mov
and
sbb
xchg
add
popf
scas
sbb
and
insl
rcrb
sbb
and
mov
xchg
inc
in
jo
mov
mov
loope
mov
stc
add
aam
mov
dec
cmc
shrb
pop
aaa
push
outsb
jo
daa
pop
cmp
popa
sbb
popa
pushf
mov
jp
into
les
jge
add
push
imul
test
push
icebp
inc
cld
pop
sub
icebp
dec
adc
mov
aam
mov
xchg
into
jno
aad
addr16
cmp
jae
jl
mov
pushf
jge
mov
leave
dec
mov
mov
sub
adc
pop
mov
jmp
mov
push
dec
mov
ss
mov
outsb
cmp
aad
out
mov
mov
flds
dec
adc
pushf
je
cmovbe
sti
sbb
out
andb
ds
sbb
lock
sub
hlt
out
lock
sti
ficompl
inc
jp
lea
bnd
mov
xchg
mov
mov
das
push
add
sbb
pop
xchg
ret
dec
add
imul
sub
lods
leave
push
inc
mov
dec
jae
push
or
dec
pmaxsw
mov
mov
and
adc
and
jns
jbe
js
inc
lahf
int
inc
mov
ds
add
pushf
test
cmpsl
xchg
icebp
cld
cmp
dec
in
pusha
rcrl
push
mov
std
test
and
sarb
sbb
out
adc
ret
pop
cwtl
movl
loope
hlt
jge
xchg
and
adc
fwait
sub
pop
jne
push
dec
add
fistl
xchg
std
mulb
inc
repnz
sbb
cmp
js
cmp
pop
xchg
fsubs
push
adc
inc
popf
aad
fisubrl
gs
inc
enter
rorl
or
sbb
sbb
jp
xor
insb
inc
int
sub
mov
jp
inc
nop
mulb
popf
fsubs
aam
xchg
ror
dec
xchg
xchg
jns
out
ret
das
popf
es
into
fwait
idiv
push
outsb
sub
pop
xchg
sahf
insb
lock
push
mov
es
xchg
std
and
dec
xchg
xchg
sbb
test
adc
add
test
inc
loopne
sbb
cmp
mov
sbb
fsubrl
and
adc
adc
popf
xchg
movsl
scas
mov
xchg
ds
mov
nop
je
mov
fstps
adc
addr16
adc
push
aas
lahf
jae
in
mov
fcomps
in
js
pop
xor
jmp
pop
js
dec
lods
inc
xchg
test
pushf
xlat
hlt
les
fmull
loop
daa
jge
dec
inc
hlt
push
pushf
pop
xchg
in
jle
pop
lea
es
jnp
not
push
xchg
arpl
adc
dec
dec
push
pop
punpcklbw
das
cmpsl
add
fidivrs
or
addps
fistpll
cmp
or
int3
push
push
or
sub
and
bound
inc
jle
inc
test
imul
xor
xchg
bound
adc
js
cld
fildll
arpl
dec
dec
cmc
out
adc
or
in
xchg
fs
mov
orb
ffree
imul
sub
cmp
push
xor
sbb
sbb
movsl
stos
push
jmp
movsb
mov
mov
pop
cwtl
js
xlat
orl
mov
dec
mov
dec
inc
shlb
les
inc
aam
mov
inc
cld
lock
in
test
fdivrs
mov
pop
leave
xor
ror
nop
bound
sbb
push
cmpsb
push
shrl
pop
mov
out
stc
xor
sbb
jbe
aam
mov
stos
ja
scas
push
nop
popf
push
cmp
mov
aas
shll
dec
add
mov
pop
inc
cmc
xchg
stc
push
pop
xor
mov
call
cmpsb
pop
jno
fs
add
sarb
sub
pusha
adc
mov
inc
jo
inc
les
or
mov
dec
cmp
je
mov
pop
mov
movswl
stos
inc
adc
lea
addl
push
fdivl
movsl
call
fcoms
nop
jg
das
push
dec
hlt
pushf
and
fs
sbb
pushf
lods
fldenv
lret
into
pop
push
mov
leave
mov
dec
call
fidivl
lret
stos
mov
xchg
fwait
cmpb
scas
fildl
fbstp
nop
into
cmp
cmpb
mov
cmc
pushf
dec
xor
aam
in
push
inc
cmp
pop
ret
xchg
or
mov
inc
mov
push
mov
or
mov
test
or
xchg
ljmp
hlt
jo
inc
push
xchg
lret
sarl
pop
outsl
das
aaa
ljmp
ret
iret
mov
cmp
add
push
sbb
cmp
sbb
jge
xor
addl
mov
xchg
sub
insb
loopne
cmp
adc
mov
int3
loope
fidivl
out
into
insl
or
scas
jo
icebp
pop
mov
cwtl
mov
pop
adc
ficoms
jne
enter
mov
shlb
leave
enter
movsb
jne
mov
out
ds
addb
mov
int3
fstl
sahf
rcll
mov
xor
aaa
sbb
mov
inc
or
adc
mov
add
stos
dec
stos
and
std
icebp
ljmp
xchg
loope
pop
lock
or
adc
xchg
dec
subl
inc
push
mov
fimull
mov
push
cwtl
enter
movsb
stos
and
js
fsts
push
mov
adc
stc
push
sbb
adc
icebp
add
dec
dec
ljmp
push
pop
pop
lahf
mov
lods
push
sub
sbb
cwtl
push
mov
aaa
pusha
xchg
sub
adc
test
lods
cmpsb
mov
pop
rclb
jmp
cmp
sahf
lret
xor
outsb
sub
lcall
mov
push
mov
inc
sbb
popl
jmp
add
test
shll
ljmp
out
pop
into
outsb
cmp
mov
mov
and
pop
mov
push
addr16
pop
pop
xor
pop
subl
jno
cwtl
adc
sub
les
pop
mov
aas
gs
cmp
dec
lret
or
xor
cmp
mov
in
gs
stc
add
fs
fdiv
push
mov
test
pop
mov
outsb
mov
mov
jg
loopne
sub
push
jle
dec
ficomps
ljmp
xor
jecxz
pushf
and
or
add
mov
and
add
ficompl
test
in
stos
adc
xor
xchg
in
adc
sbb
lods
push
imul
enter
les
mov
insl
pop
mov
stos
pop
pop
push
mov
and
fsubrp
mov
jl
fnstsw
add
mov
push
fisttpll
andnps
imul
fiadds
jmp
jno
sub
stc
sbb
popa
icebp
bound
ljmp
pusha
sbb
int
push
lahf
inc
mov
in
xor
pop
fsubrl
fs
and
mov
fadds
xorb
mov
adc
add
mov
call
outsl
aad
dec
cli
or
shl
std
mov
sbb
int3
movsl
inc
subl
cmp
jl
fnstsw
mov
or
jp
push
pop
test
add
shrl
dec
loope
xor
sub
mov
js
mov
xchg
test
outsl
aam
xlat
popf
hlt
pop
ja
mov
or
dec
movsb
pop
frstor
cmp
fdiv
and
xor
stos
jbe
inc
stos
loop
jge
adc
lock
or
int3
and
sbb
in
clc
inc
xchg
or
loope
cmp
adcb
push
in
lods
sub
cmp
sbb
or
jecxz
rclb
bound
jecxz
test
sbb
ds
mov
fbld
xchg
cmp
mov
adc
pop
les
cltd
fmuls
outsl
imul
and
inc
pop
mov
xchg
adc
sub
jl
movsb
pop
mov
movsb
cmc
cmpsb
imul
dec
leave
push
addr16
mov
and
mov
push
jae
push
jne
sbb
jnp
cmp
add
mov
ljmp
fcmovb
push
xchg
lds
pop
cmpsl
cmp
mov
iret
out
dec
iret
xchg
aaa
data16
movsb
movsl
dec
jbe
mov
xlat
adc
aam
push
cmc
jb
or
pop
xchg
cwtl
ja
and
mov
testb
dec
and
lret
adc
leave
in
add
push
lcall
rclb
mov
adc
iret
cs
adc
mov
dec
movsb
fldt
jne
sub
lret
xor
push
inc
and
ja
in
fnstcw
test
ljmp
cmp
insl
pop
cli
inc
jle
mov
pusha
daa
or
xchg
icebp
cli
imul
cwtl
in
dec
jp
and
xchg
hlt
aas
dec
push
xor
imul
xor
mov
mov
push
adc
jnp
xchg
fwait
adc
xchg
mov
jg
cmpsl
and
lea
push
mov
inc
xor
std
adc
fcmovnu
mov
mov
sarl
lret
dec
sbb
sub
nop
mov
add
jmp
imul
mov
loope
imul
push
cs
mov
cwtl
and
shrl
fdivp
scas
push
hlt
test
sbb
sbb
push
lcall
add
add
lods
xchg
aam
pop
mov
mov
out
sub
in
out
sub
pushf
xor
push
lret
mov
clc
pop
lock
mov
xor
sbb
int
pushf
out
and
jnp
jmp
loope
xchg
mov
leave
sub
mov
in
cmp
xor
in
cmp
mov
shl
inc
clc
rcl
cli
and
arpl
ret
ljmp
dec
fsubr
shl
popf
mov
or
popa
shlb
or
fwait
xchg
jno
and
notl
psubsb
fisubrs
imul
lret
call
fidivrs
jnp
in
sbb
and
mov
jp
rcl
ss
mov
clc
shlb
mov
or
lret
jnp
cli
and
rcl
push
or
clc
shrb
out
xchg
dec
adc
or
and
push
inc
mov
in
mov
sub
and
cli
mov
push
lahf
pop
mov
pop
fwait
inc
jno
cs
or
jb
testl
add
rcll
iret
sbb
mov
test
inc
mov
outsl
dec
sbb
mov
test
int3
fst
push
jg
rcll
gs
sub
shlb
pop
cmpb
pop
mov
in
jg
push
mov
jae
movl
xor
push
fsts
out
mov
jo
xor
pushf
rcrl
inc
cmp
call
js
into
mov
and
jbe
mov
lcall
pop
mov
cli
and
fcomps
mov
test
sbb
fnstsw
mov
xorl
repnz
shl
daa
vmovlhps
push
or
adc
daa
cmp
inc
mov
sbb
push
out
xlat
inc
mov
in
jmp
jge
cmp
inc
ja
call
or
std
xlat
xchg
mov
sub
inc
cmp
mov
and
inc
lods
insb
jo
sbb
into
fdivl
xchg
lret
jle
in
out
dec
mov
inc
sahf
scas
data16
je
imul
rol
loope
icebp
dec
xchg
mov
xor
int3
pop
rorl
xchg
adc
fs
mov
adc
lea
jmp
xchg
and
daa
mov
lds
mov
aas
add
pop
sub
hlt
jl
dec
jle
xor
into
cmp
push
and
ja
mov
pop
gs
jg
xor
js
xor
sbb
jbe
cmpsb
popf
cmp
pop
ret
sub
mov
mov
sbb
cwtl
stos
lods
shlb
cmp
and
and
ror
adc
xlat
neg
fwait
popa
loopne
and
rolb
test
enter
or
lea
inc
xor
pop
mov
jl
call
int3
sub
mov
mov
fs
fisubs
mov
xchg
xor
mov
and
test
imul
push
std
shrb
inc
mov
add
fwait
loopne
pop
arpl
loopne
int
inc
sub
add
loope
aas
pop
and
sub
mov
pop
adc
sub
lret
clc
pop
test
adc
add
jo
mov
inc
mov
in
repnz
lods
xchg
enter
out
loop
les
mov
flds
imul
push
push
push
lea
loopne
mov
icebp
xchg
insl
out
daa
sub
mov
imul
push
jne
and
leave
into
mov
or
jmp
sbb
loop
mov
xchg
je
sub
cmp
outsl
ret
pushf
mov
push
out
lods
push
pop
adc
mov
fnop
mov
add
jecxz
in
mov
mov
inc
test
nopl
jl
mov
fnsave
or
sbb
addr16
outsb
and
test
inc
dec
in
sbb
and
and
mov
add
lcall
cmp
inc
lret
dec
loop
sbb
xor
dec
cwtl
add
popf
xchg
test
mov
insl
sbb
pop
lahf
imul
gs
repz
roll
rcrb
sub
mov
cmp
sbb
pop
hlt
fsubrs
stos
ret
outsb
sbb
add
ret
adc
push
ja
and
lret
and
leave
enter
push
xor
mov
jmp
cwtl
xor
insb
pop
inc
jbe
out
and
pop
xchg
jns
popf
fcmovu
mov
dec
adc
push
jbe
jp
dec
pop
cmp
addb
dec
cmp
stos
lea
sarb
movsl
and
nop
jae
xchg
mov
sti
and
mov
sbb
mov
push
popf
repz
stos
pop
jnp
loop
int
int3
je
xchg
rolb
rcrl
mov
and
sti
adc
es
std
push
imull
inc
jbe
push
and
inc
cmpsl
push
cmp
xor
into
inc
ret
lods
ret
jge
adc
cmp
jbe
stos
xchg
inc
inc
stos
sbb
sbb
and
movsl
mov
cmp
and
xchg
or
pop
push
fdivl
pop
xchg
rcll
mov
fistps
fnsave
jp
cmc
or
mov
pop
mov
ljmp
mov
jl
push
xchg
push
adc
iret
ljmp
or
ret
enter
dec
push
ss
jg
jge
fidivl
cmp
jge
mov
inc
loopne
xchg
jp
fadd
lcall
rcll
mov
sbb
lods
imul
rcrl
add
dec
mov
or
xor
movsb
mov
jmp
push
test
cltd
lock
jl
sub
mov
es
pop
pop
fwait
out
xor
cmp
pop
movl
cmp
mov
adc
aad
aam
mov
bound
mov
lds
xchg
enter
push
xor
xchg
bound
stos
pop
testl
jb
test
aad
jb
fbld
popa
fwait
push
and
mov
addl
pop
fisubs
dec
shlb
pop
repz
test
jns
jbe
fidivrl
cmp
std
dec
stc
lret
aam
lcall
lods
push
data16
fwait
enter
sbb
lods
lods
xor
dec
push
fldcw
push
and
test
mov
dec
lret
xor
cmpsb
in
sub
add
sahf
mov
ret
xor
adc
in
ret
sbb
or
pop
push
add
pusha
xor
loop
rorb
data16
lock
std
ljmp
jmp
mov
pusha
inc
pop
add
xorl
sub
mov
jmp
jg
pop
out
or
cld
orb
pop
push
lcall
xor
inc
xchg
xor
fsubs
xchg
cmc
inc
sub
push
push
dec
dec
inc
shll
push
add
pop
movsl
pop
sbb
xor
int3
xor
pop
push
mov
push
push
sub
cmp
cmp
cmp
cltd
mov
lods
loope
sbb
mov
movsb
and
daa
or
xchg
and
and
divl
lods
rcr
lea
sbb
out
popf
lret
shll
mov
push
jl
sahf
stos
fimuls
pop
dec
nop
rol
arpl
int3
ss
je
aad
sbb
push
and
cmp
xor
pxor
cmp
xchg
js
in
das
clc
lods
jae
insl
and
sbb
lea
insl
call
mov
ficoml
cmp
push
outsb
scas
ror
xchg
leave
inc
rcll
inc
imul
add
stc
sbb
inc
fldt
jns
data16
dec
jne
pop
xor
sbb
or
bnd
ljmp
cs
pop
out
insl
pop
outsl
pushf
icebp
mov
jns
pop
push
and
vmovaps
repnz
inc
jbe
mov
and
inc
mov
mov
add
sahf
dec
call
loope
jae
pop
aad
pop
mov
or
lahf
dec
add
out
aam
cmp
arpl
ror
and
mov
ss
mov
jg
lcall
mov
dec
inc
dec
pop
repnz
inc
add
push
ret
mov
and
mov
testb
pop
pop
push
pop
adc
or
inc
loope
jle
cmpsl
push
pop
cmp
add
xchg
sbb
jnp
xchg
and
inc
insl
jno
jg,pt
add
std
daa
lds
jle
mov
ret
ffreep
jecxz
dec
jae
add
push
mov
push
cld
roll
mov
inc
ljmp
inc
data16
ljmp
lcall
xlat
adc
pushf
dec
loopne
lret
lret
sbb
mov
mov
jb
lar
mov
inc
jns
lcall
insl
adc
or
push
fcoms
lock
jmp
dec
jmp
jge
pop
adc
sbb
inc
pop
gs
out
mov
xchg
and
add
repnz
xchg
pop
sub
push
push
out
sub
ret
dec
xor
cmp
lods
push
or
and
mov
xchg
lahf
inc
sbb
aad
popf
fsubr
in
cmp
and
push
stos
bound
fwait
daa
sub
lods
aaa
or
sahf
mov
movsb
jns
jle
xor
lcall
and
mov
shlb
es
jmp
fwait
inc
je
or
cmc
jno
jnp
and
dec
hlt
add
mov
movsb
jecxz
dec
sub
xor
je
das
sbb
lock
sub
and
inc
xorb
inc
in
sbb
cmp
mov
arpl
call
gs
cmp
xchg
lret
leave
in
sbb
dec
leave
adc
cld
arpl
in
addb
js
hlt
push
into
sbb
sbb
outsb
jmp
push
mov
rorb
aad
pop
push
fprem
dec
cmpsl
or
mov
add
pushf
sbb
dec
arpl
inc
and
mov
idiv
adc
xchg
addl
xchg
and
cmp
add
icebp
imul
xchg
shr
cmpb
insb
in
vcmpeq_osss
imul
mov
xchg
mov
xchg
adc
xorl
cld
fstl
push
sbb
nop
inc
test
outsl
or
fs
lahf
cmp
je
lahf
movsl
sub
jnp
call
test
mov
hlt
pop
push
sub
dec
aas
jge
into
insb
inc
push
cli
insb
xchg
push
pop
call
aas
outsb
pop
adc
dec
ss
in
fs
lea
aas
cmp
out
js
repz
mov
or
push
icebp
mull
pop
ss
push
jmp
loop
mov
add
and
add
lds
mov
sahf
mov
adc
dec
bound
std
fs
xchg
xor
dec
and
pushf
cmp
les
stc
mov
in
fucom
popa
sbb
fs
out
cmp
in
sub
out
push
sub
in
and
jecxz
dec
aam
pop
xchg
inc
icebp
movsl
xchg
arpl
dec
sti
mov
ja
lods
jge
pop
outsb
jnp
mov
sbb
push
inc
xchg
add
fs
jmp
mov
inc
fmull
sbb
mov
int
mov
js
mov
mov
cmp
and
lea
daa
test
jne
and
jo
ror
pop
enter
scas
pushf
mov
adc
xchg
jge
mov
jp
or
fldl
les
or
mov
push
xchg
dec
sub
xor
loop
lds
fcmovne
inc
scas
ds
inc
push
cmpsl
add
arpl
testl
mov
sbb
adc
imulb
or
fwait
les
gs
iret
movsl
aas
adc
lcall
addr16
xchg
adc
andl
jle
sbb
aad
xlat
xchg
and
mov
xor
incb
lods
push
cmp
stc
in
fdiv
jne
call
push
dec
pop
inc
xchg
push
adc
cmp
jno
js
ficoml
cltd
std
xchg
test
inc
sub
mov
sbb
jno
and
pusha
cs
mov
push
sarl
rcrb
or
cmp
cltd
scas
add
cli
jecxz
and
stos
cmpsb
aas
or
cmp
fdivs
ja
push
cmp
mov
push
push
fisubl
xor
xor
jl
inc
imull
sbb
das
cmpsl
sub
inc
in
sub
test
lods
in
push
pop
mov
mov
xchg
hlt
jmp
out
inc
rorb
pop
xor
add
addb
adc
pop
lds
dec
push
xor
fbstp
pop
cli
insb
and
lahf
or
outsl
sbb
xor
aas
fildl
aam
xor
jb
mov
ja
push
sbb
xor
stos
int3
fidivs
jnp
stos
clc
add
inc
aad
stc
jo
icebp
stos
rcrl
sub
js
add
xor
popa
data16
fstpl
shr
jle
xor
rcl
cmp
sti
push
sub
ror
add
stc
xchg
or
aad
inc
out
testl
cwtl
js
push
jg
or
xor
xchg
jecxz
inc
xor
je
sahf
lods
or
cwtl
sub
cwtl
push
pop
cltd
push
aaa
movsl
xor
nop
sbb
iret
xor
jmp
scas
xchg
call
loope
adc
pop
outsl
xchg
iret
jl
stos
push
cmpsl
push
jae
pop
inc
adc
nop
and
jnp
sti
lret
mov
ss
rcll
sbb
jae
lcall
and
pushf
mov
movsl
mov
aaa
cmpsb
stos
dec
and
pop
lea
out
roll
mov
fs
scas
mov
or
cltd
jbe
adc
orb
add
aad
xchg
lods
clc
fwait
imul
adc
pop
mov
in
xor
repz
in
xor
add
test
das
cmp
in
or
int
addr16
mov
shlb
dec
iret
aam
ret
jl
jl
out
mov
shl
sbbl
inc
stos
sub
push
dec
xor
and
add
push
cltd
sbb
pop
out
inc
cmp
push
cmp
arpl
cmpb
jmp
adc
add
push
test
push
dec
jae
add
pop
iret
popf
lea
push
out
lret
xor
mov
lods
jge
mov
sub
xchg
and
mov
cmp
mov
test
pop
dec
int3
lds
cmp
lods
mov
loop
lea
pushl
jge
cmp
icebp
add
cwtl
mov
hlt
mov
sbb
out
repnz
or
dec
sbb
or
xor
xchg
mov
in
std
xchg
inc
push
movsl
xorb
ret
popf
icebp
loopne
push
pushf
mov
mov
pop
xor
jno
or
xor
sbb
dec
adcb
sbb
jo
sub
pop
adc
xchg
in
es
sub
sahf
mov
ds
mov
sub
jne
jns
mov
jecxz
into
inc
sub
push
push
mov
sti
into
push
mov
insl
inc
pop
rcrl
cmp
push
mov
les
sbb
mov
dec
ret
pop
in
mov
bound
adc
out
out
out
nop
xchg
ret
adc
aaa
pop
pop
pop
add
adc
xor
inc
int3
cmp
fidivl
popa
imul
add
cmp
mov
ficompl
ficomps
pushf
push
leave
fidivrs
shr
in
rclb
enter
out
sub
addl
adc
xchg
popf
pop
negl
out
mov
lods
repnz
mov
xchg
dec
pop
aam
xor
repz
jge
inc
mov
inc
clc
sub
pop
loope
insb
push
mov
scas
sahf
std
cmp
dec
and
stc
outsb
loop
bnd
push
adc
inc
inc
mov
adc
fcompl
repz
mov
jp
mov
outsl
int3
sbb
andl
push
jno
lods
add
lret
inc
jo
out
mov
push
xor
push
inc
arpl
mov
push
movsl
out
enter
ret
ficoml
pusha
mov
mov
push
jp
xor
out
negl
and
sbb
fdivrs
or
sub
pop
lcall
jae
imul
adc
jl
std
test
call
add
or
fsubs
jnp
xor
push
test
xchg
and
mov
or
lcall
outsl
mov
pop
in
outsl
pusha
jl
shlb
in
shll
insl
push
or
jl
mov
cld
xor
cld
icebp
es
shr
fcmovu
out
and
lret
or
mov
inc
inc
jne
lds
jecxz
push
xchg
ret
inc
push
insl
shlb
sti
mov
xor
shl
aaa
and
xchg
pop
mov
pop
add
jae
daa
popf
leave
pop
sbb
sub
fcoml
mov
mov
pop
int
repz
and
or
into
push
inc
cmp
push
or
movsl
inc
out
inc
fisttps
insl
cmp
sub
in
cld
shll
add
xchg
pop
pop
push
push
popa
sub
out
lcall
lret
mov
push
cmp
inc
pop
popa
push
into
out
mov
mov
clc
xchg
dec
jo
movsb
jle
test
xor
nop
lods
or
pop
or
mov
inc
outsl
dec
pushf
iret
pop
jge
mov
andb
ss
aam
adc
pop
pop
mov
push
and
mov
enter
cli
cmp
xchg
shl
sub
test
jg
cmp
cmc
mov
or
jge
fcomps
js
and
add
aas
shrl
cs
cmp
xor
inc
mov
push
add
das
sarb
popf
mov
adc
xchg
push
sub
call
or
pushf
jle
in
mov
mov
or
push
mov
pop
into
mov
inc
and
int3
mov
sbb
push
lret
push
xor
pop
inc
repz
lods
mov
inc
add
cmp
dec
clc
mov
sti
jle
leave
jg
jne
mov
xor
jb
addl
lret
adc
and
loope
xor
mov
cld
pop
movsl
pop
lret
dec
daa
arpl
fwait
sbb
fsubl
pop
cltd
cmpsb
mov
pop
ficoms
data16
sbb
jb
std
dec
mov
clc
lahf
sbb
fistpl
in
rcrb
cltd
lods
nop
and
cmc
loopne
push
cmc
scas
xchg
and
jo
xlat
xchg
and
sub
xchg
cwtl
faddl
xchg
jp
cltd
lods
pop
adc
pop
jmp
sub
stos
dec
outsb
icebp
xchg
mov
aaa
xlat
mov
std
push
mov
mov
dec
cmpsl
or
nop
xchg
out
ret
sahf
or
lret
ljmp
test
push
bound
mov
dec
outsb
jns
add
xor
inc
sub
xbegin
mov
inc
add
push
dec
iret
scas
cmp
lgs
sub
cmp
mov
sub
jb
clc
fimull
push
or
test
leave
jnp
lock
mov
sbb
aam
mov
or
pop
fistpll
es
or
mov
inc
dec
and
adc
sti
cmpsl
test
sbb
xchg
mov
xchg
xchg
je
cltd
popf
shl
mov
inc
mov
enter
ror
mov
test
dec
lahf
mov
clc
push
loopne
sub
int3
cwtl
pushf
mov
jg
mov
mov
push
pushf
lret
int3
mov
and
push
sahf
cmpsl
jbe
orl
lahf
js
add
lods
test
imul
test
in
mov
xchg
inc
sbb
scas
lods
mov
cmc
mov
push
scas
sub
add
ficomps
fmuls
movsbl
jbe
dec
push
and
imul
mov
hlt
dec
jo
orl
loope
das
lret
adc
sti
loope
pop
jge
push
mov
pop
icebp
adc
out
cli
mov
mov
dec
mov
mov
jns
je
mov
push
fyl2xp1
or
scas
dec
fwait
xor
hlt
cmp
popf
or
scas
faddl
push
sbb
cld
cli
mov
cmp
or
dec
xchg
lods
dec
loope
dec
add
pop
test
mov
movsl
xlat
xchg
fwait
adc
add
jns
cmp
jl
mov
cs
enter
lcall
jo
push
or
and
stos
cmp
lods
mov
mov
cmc
mov
and
mov
pop
mov
add
jg
xor
addr16
and
aaa
and
xor
dec
bound
daa
sbb
mov
and
mov
iret
cmpsl
xor
and
adc
sub
cmpb
mov
mov
cmp
xorl
inc
iret
adc
cs
addr16
ret
pop
sbb
fldt
je
jge
dec
icebp
inc
inc
out
aas
stos
push
mov
xchg
scas
mov
adc
jecxz
stos
rclb
test
pop
pop
cmpsl
or
gs
xor
flds
imul
inc
sbb
sbb
pushf
imul
lea
int3
gs
aam
cmpsb
mov
dec
call
sub
push
lods
mov
lcall
mov
lock
inc
jl
nop
test
mov
pop
aam
imul
ss
sub
push
pushf
das
inc
mov
mov
in
cli
push
imul
add
gs
inc
push
insl
pop
sti
mov
mov
push
cmp
sub
xchg
into
aaa
movsb
or
push
sub
inc
stos
fldt
jg
mov
mov
lock
mov
mov
in
rcll
sub
mov
adc
xlat
jecxz
scas
dec
test
dec
mov
imul
cmpsl
dec
leave
js
or
lcall
movsb
pop
cwtl
sbb
je
ret
cmpsl
and
fisubs
mov
outsl
addr16
mov
mov
scas
sub
or
mov
pop
cmp
fildl
out
test
es
ljmp
mov
xchg
or
jg
shlb
add
cli
push
adc
ret
mov
cwtl
leave
dec
jnp
push
loope,pn
mov
sub
dec
fimuls
inc
lea
loope
and
mov
fscale
push
push
btr
jmp
out
mov
push
and
movsb
ljmp
xor
jg
xchg
jle
std
pushw
aad
addr16
add
fwait
push
mov
in
inc
dec
test
dec
mov
mov
mov
insb
xchg
mov
and
jo
pushf
cmpsb
cli
adc
push
arpl
push
cmp
mov
daa
ja
loopne
dec
adc
pop
loope
in
xlat
dec
mov
pushf
aas
mov
or
ds
roll
sbb
xor
ret
jo
out
ficoms
pop
hlt
loopne
inc
mov
push
xor
pop
arpl
jmp
push
out
stc
cmp
add
call
icebp
aaa
xor
mov
jmp
ljmp
xor
push
push
sti
aam
or
call
ds
sti
mov
or
mov
cli
movsb
call
sbb
jmp
dec
jno
idivb
scas
push
shlb
inc
mov
dec
rclb
fiadds
fiaddl
incb
int3
cld
mov
cwtl
sub
scas
xor
xor
sub
jb
inc
sub
sarb
mov
decb
imul
scas
or
xchg
xor
or
and
int3
sbb
jp
lds
add
scas
push
ret
push
out
orl
imul
imul
jbe
ror
pop
jl
mov
jmp
cltd
mov
lods
push
ss
mov
mov
push
enter
xchg
loopne
idivb
jge
sar
mov
stos
mov
pop
icebp
cmpsb
mov
lods
cmp
push
pop
mov
and
pop
or
pop
out
mov
mov
mov
leave
sub
adc
in
lahf
cli
inc
inc
jb
adcl
ja
lods
mov
xchg
rclb
dec
mov
repz
iret
fisubrs
jne
or
popa
repnz
lcall
loope
push
mov
into
movl
dec
pop
sbb
sub
iret
adc
jb
cmp
inc
or
popf
ret
sti
or
insb
nop
insl
movl
mov
xor
mov
fcoms
sahf
pop
xchg
aas
mov
pop
adc
ret
push
loope
mov
mov
xchg
mov
hlt
repnz
shl
fdivr
dec
dec
xchg
jmp
mov
imul
popa
cld
cmpsl
xlat
fsubs
pop
jle,pt
outsl
and
pop
hlt
arpl
mov
pop
lock
dec
shlb
add
mov
decb
ret
jecxz
push
scas
add
in
push
aad
fwait
xchg
mov
das
aam
push
movsl
mov
jg
ds
mov
daa
icebp
call
das
push
ss
popf
bound
nop
ret
inc
pop
daa
sub
lods
mov
xor
sub
rep
js
leave
adc
pop
mov
pop
loope
cmp
xchg
popf
fistps
dec
push
xchg
sbb
sub
or
mov
inc
jle
cmpsb
data16
dec
adc
pop
jle
lds
std
mov
addr16
mov
mov
xchg
xchg
imul
cld
aam
cmp
mov
xchg
xor
pop
lods
stc
add
iret
dec
lods
add
pop
test
das
mov
sti
xor
pusha
cmp
push
push
aas
xor
mov
outsb
inc
pop
push
out
div
stos
pop
out
and
mov
lret
stc
mov
rolb
mov
movsl
ss
repz
push
insb
inc
aas
pop
xchg
add
mov
insb
push
es
enter
lret
std
jecxz
mov
dec
cmpsb
mov
cmpb
or
adc
mov
add
push
mov
jo
jno
mov
add
cmp
push
mov
mov
dec
insb
xchg
repnz
jge
scas
mov
insl
cmp
arpl
lcall
inc
pop
inc
xchg
lods
mov
and
mov
sbb
add
fdiv
dec
dec
or
mov
or
pop
sub
mov
mov
cmc
cmpsb
insb
push
mov
xchg
sar
sub
mov
mov
push
sub
mov
push
jno
dec
xor
psadbw
enter
into
inc
shrb
mov
stos
aas
add
jne
pop
push
pop
dec
add
cmc
cmc
push
inc
inc
lret
dec
jb
in
jo
addr16
mov
push
je
pop
or
mov
mov
mov
and
mov
cmp
adc
sub
dec
stc
inc
sbb
cmp
lret
es
iret
dec
test
sti
in
or
pop
fs
and
std
dec
aaa
dec
add
fwait
dec
mov
cmp
xchg
lret
repz
lock
sbb
cmp
push
inc
scas
dec
pop
cmp
xchg
das
push
adc
outsb
fwait
mov
add
dec
sub
pop
cmpsl
or
dec
dec
push
popf
testb
into
xchg
imul
les
lods
or
js
fidivs
mov
ret
lret
sub
in
jnp
test
mov
cwtl
out
scas
mov
inc
xchg
inc
add
je
sbb
and
in
jno
shlb
mov
jp
loopne,pt
out
jb
enter
mov
in
jmp
sub
loopne
inc
add
sub
rorb
in
lret
addr16
int
int3
ljmp
stos
in
ret
test
pop
jno,pn
fidivrl
adc
sahf
call
xor
aam
cli
sub
add
mov
hlt
clc
or
stc
pushf
pop
mov
inc
notl
mov
out
rol
fwait
sbb
sbb
xor
subb
out
and
cmp
shl
push
shll
jno
jb
mov
xchg
push
pop
enter
mov
and
xor
mov
xchg
jae
dec
xchg
imul
stc
push
jecxz
loope
pop
addr16
sbb
cvtps2pi
lea
imul
loop
clc
imul
sbb
dec
lea
mov
adc
sahf
mov
dec
push
or
pop
mov
cmp
push
movsb
push
rolb
outsb
dec
icebp
iret
mov
fldt
mov
xchg
adc
xor
outsl
jg
mov
xchg
xchg
out
xor
jae
ret
mov
aam
pop
adc
mov
and
mov
mov
pop
cmpsb
xor
pop
mov
adc
jecxz
pushf
das
stos
push
dec
sbb
sub
adc
push
push
cli
cmp
test
lds
pop
aas
mov
mov
aam
in
inc
push
mov
sbb
in
push
cmp
ror
and
ljmp
out
mov
testb
push
and
add
xchg
xchg
mov
mov
pop
inc
into
cmpsl
lret
out
sbb
mov
sbb
in
aas
inc
adc
arpl
xor
add
push
inc
mov
pop
push
cmp
cmp
mov
adc
lock
daa
pushf
xchg
aas
adc
jge
xor
mov
les
mov
push
aas
and
mov
jb
cmp
sub
adc
lods
cmpsb
daa
movsb
jno
cli
call
movsb
sarb
sbb
push
jmp
dec
pop
nop
mov
jbe
addr16
jmp
push
mov
jmp
mov
push
les
and
sub
dec
inc
clc
cs
shll
cmc
add
xchg
mov
adc
test
enter
js
sti
or
sbb
push
cld
sub
mov
push
pop
movsb
movsl
or
lods
dec
int
cmpsb
sti
push
icebp
cs
dec
mov
mov
aaa
nop
enter
sub
leave
cs
sbb
mov
daa
add
jo
mov
cli
daa
push
jno
push
sbbb
xor
in
test
imul
pop
shr
and
sub
scas
ljmp
add
into
jbe
in
ja
jge
roll
cmpsl
cmp
push
mov
xchg
or
fimull
xor
daa
pop
xchg
inc
add
jae
and
loopne
or
aas
outsl
adc
daa
movsb
dec
adc
add
xchg
stos
add
xchg
xchg
dec
std
fdivl
pop
sbb
mov
ja
in
push
ret
std
fwait
imul
ja
push
sahf
inc
insb
mov
es
fidivl
insb
cmp
popf
or
mov
fs
pop
mov
pop
add
fisttpl
ret
addl
xchg
and
vunpcklpd
and
cltd
sbb
in
imul
or
xchg
or
xchg
push
arpl
test
lahf
lret
mov
adc
fisubrs
dec
ljmp
ljmp
pop
movzbl
lret
out
mov
adc
sti
clc
clc
push
cli
insb
cltd
cmp
add
int3
push
clc
popf
and
sahf
jne
cli
push
push
je
dec
std
pop
mov
pop
test
push
or
add
push
adc
dec
movsl
out
jecxz
iret
jnp
mov
mov
loopne
cmpsl
mov
mov
xchg
dec
popf
lea
test
lret
scas
mov
dec
xor
add
mov
fdivs
lock
ja
add
jecxz
insb
jno
and
ret
push
inc
adc
lret
mov
test
sbb
rcrb
lods
add
xchg
repz
bound
imul
arpl
and
test
dec
ret
in
add
sub
mov
adc
arpl
sbb
sbb
xchg
inc
test
mov
jmp
and
mov
fprem
inc
imull
test
je
fidivs
push
into
inc
or
pusha
push
ss
xor
negb
mov
rcr
mov
loope
inc
aam
adcl
xchg
movsb
or
push
dec
pop
pop
jnp
sbb
ds
sbb
sub
je
adc
jns
mov
std
pop
pop
es
dec
and
sbb
fwait
mov
std
or
negb
push
out
out
push
and
sbb
je
cltd
jmp
nop
adc
xor
and
push
sbb
pop
mov
lcall
pushf
test
or
dec
mov
addl
jmp
mov
or
mov
int
insl
sub
stos
adc
in
lcall
xchg
mov
lock
sbbl
mov
cld
or
in
jno
ret
mov
push
push
or
movsl
xchg
fs
cmc
pop
inc
mov
repz
xlat
dec
outsl
and
mov
xlat
popf
sbb
fdivrs
enter
mov
pop
aam
sbb
divb
sti
pop
mov
xchg
js
sbb
cld
mov
sub
add
xor
shll
adc
jmp
adc
ja
fisubl
int
not
mov
sbb
xlat
test
cmc
fcmove
sub
outsb
popa
cmp
push
xchg
dec
ret
lahf
jmp
push
add
jne
jb
pushf
int
adc
jns
sbb
loopne
nop
inc
aam
mov
cmc
mov
stos
cmpsl
mov
mov
cs
mov
loopne
icebp
dec
std
fs
or
mov
mov
in
cltd
call
imul
push
cmp
popa
es
loope
je
mov
inc
mov
aad
in
push
les
enter
movsl
scas
aad
out
mov
pop
pop
pop
or
and
cmp
xchg
filds
ss
fcmovnb
lods
xchg
dec
hlt
pop
cltd
cmpsl
ljmpw
mov
or
subl
shrb
fstpt
sbb
xchg
mov
ss
push
adc
bswap
or
dec
cmpsl
inc
std
jno
outsb
mov
scas
sbb
xor
insl
push
or
mov
lock
mov
sub
repz
mov
pusha
jp
xchg
cmp
sub
pop
sub
cltd
push
sarl
out
cmp
lcall
add
dec
movsl
sub
pop
xchg
mov
test
jae
out
push
das
lods
dec
cwtl
mov
add
mov
pop
popl
sahf
fsubrp
fnstsw
fdivrl
insb
fcmovne
adc
xchg
sbb
push
sbb
icebp
dec
mov
je
imul
adc
test
xor
icebp
leave
nop
std
xchg
fidivrl
xchg
fisubl
rolb
loope
pop
out
mov
arpl
inc
or
push
das
mov
inc
sub
jnp
out
mov
das
cwtl
mov
mov
in
ss
sub
je
stc
cmp
inc
rorl
popa
xchg
test
out
cs
fadd
out
into
jp
mov
dec
adc
mov
ror
dec
mov
jne
dec
mov
pop
aaa
das
pop
loop
pop
mov
fisttpl
and
dec
loopne
inc
xchg
mov
mov
jp
sub
into
mov
rcll
cmp
je
js
xchg
pushf
loop
or
rcrb
add
in
and
pop
js
inc
aas
sbb
cltd
inc
out
les
rcll
mov
inc
test
cld
sbb
lret
xlat
cmp
push
push
outsl
cmp
outsb
inc
pop
xchg
iret
lahf
cmp
jne
xchg
sbb
pop
or
lahf
and
das
adc
fwait
arpl
mov
adc
push
or
mov
out
jns
inc
insl
les
xchg
sub
mov
mov
insl
cmp
imul
les
adc
dec
mov
loope
push
mov
fsubrl
jle
loopne
das
shll
or
pop
sub
mov
mov
insb
mov
bound
or
dec
or
lahf
jl
daa
inc
shlb
in
in
fs
inc
pop
inc
sarb
cmp
and
and
add
insb
mov
cmp
or
xor
repz
ja
jmp
daa
rcrb
aam
and
cltd
adc
inc
push
and
outsb
adc
pop
shl
daa
adc
rcrl
xor
rorb
xlat
ds
sub
mov
mov
inc
imul
sbb
fwait
fwait
lahf
adc
add
push
inc
repnz
and
pop
push
outsl
sbb
mov
stc
aad
shl
outsl
lahf
in
xchg
aam
sbb
mov
int
push
xchg
mov
call
movl
add
rcll
fiadds
icebp
jg
push
iret
sub
cld
mov
imul
leave
sbb
aas
bound
inc
pusha
mov
mov
inc
lret
out
jecxz
ret
insl
push
sbb
pop
and
sbb
adc
mov
push
js
fisubs
fidivl
sti
adcb
xor
lcall
mov
daa
lods
mov
cmp
xor
adc
xor
pop
xchg
jno
filds
jmp
cmp
sahf
xor
adc
jmp
jmp
pop
loopne
mov
mov
lret
pop
in
adc
pusha
and
cmc
mov
fwait
inc
in
fsubp
jne
and
clc
scas
mov
dec
aad
push
cld
xchg
sub
sbb
gs
cmp
addb
or
cs
xchg
dec
bound
pop
inc
jns
test
ret
or
sub
in
hlt
mov
les
int
sub
pop
cmp
or
movsb
dec
or
inc
scas
shll
pop
clc
aam
aaa
jl
pop
scas
ror
jecxz
or
xchg
mov
jne
sbb
in
ret
cmp
cmp
rcll
mov
mov
das
fucom
adc
in
adc
mov
cld
xor
inc
rcrb
call
in
or
ret
les
fwait
push
xchg
xor
mov
in
popa
imul
das
fwait
or
ljmp
lret
loopne
fisubs
ljmp
mov
aas
jmp
in
xor
mov
iret
dec
and
fnstcw
ss
mov
shl
xchg
adc
mov
adc
or
test
out
pop
lods
outsb
adc
adc
stos
sbb
test
cmp
das
cmp
pop
pusha
mov
xor
int3
repnz
lcall
jbe
sbb
fdivs
bound
mulb
pop
mov
enter
push
lret
mov
sahf
icebp
mov
adc
jns
sub
jo
xchg
lods
mov
pusha
and
lret
pop
fwait
inc
add
test
cs
adc
lea
jae
and
or
mov
pop
dec
mov
mov
outsb
dec
push
arpl
sbb
mov
or
mov
dec
jo
adc
push
scas
and
push
sahf
fldcw
mov
scas
int
cwtl
dec
adc
push
loope
adc
xchg
adc
loop
addl
dec
ret
pushf
jo
fbstp
stos
xchg
fs
mov
out
lock
jo
je
sbb
daa
adc
ret
inc
jno
dec
notb
xchg
adc
subb
push
lcall
pcmpgtb
shlb
jns
clc
into
push
inc
out
sbbl
test
les
fld1
mov
js
clc
push
sbb
adc
push
fistpl
out
ljmp
or
mov
sbb
sub
push
in
ljmp
adc
pop
xchg
das
xor
cmpb
jns
mov
inc
out
or
lahf
sti
pop
insb
sahf
mov
mov
pop
pop
loopne
sub
nop
or
inc
dec
mov
pusha
jns
shll
push
ret
jb
mov
and
loopne
ffreep
shrb
out
rol
das
hlt
arpl
enter
inc
outsb
addl
sbb
mov
movsw
mov
mov
std
popa
mov
sbb
dec
lcall
dec
test
jle
mov
lret
fwait
or
xchg
xchg
cmpsb
div
loope
movsb
andl
sub
jmp
jecxz
push
pushf
icebp
push
lret
int3
aam
adc
in
ljmp
mov
movsb
arpl
push
movsl
insb
cmc
cmp
sub
fisttps
cwtl
rcl
dec
xor
jne
adc
jmp
jmp
or
pushf
stc
inc
push
lock
push
stc
xchg
push
mov
jle
cli
fcmovnu
cmp
and
arpl
fsubrp
je
mov
popa
outsb
shrb
test
mov
in
and
scas
movsl
and
addr16
adc
push
in
xor
mov
xchg
dec
out
outsb
or
div
dec
sbb
or
dec
sbb
cld
es
adc
xor
sbb
fldl2t
cld
pushf
fs
mov
xor
and
pop
fdivl
ret
orb
push
fsub
das
rcl
int3
mov
aas
sub
jle
sub
lret
push
mov
pop
mov
lods
icebp
mov
dec
or
lahf
jg
ret
out
psubb
xchg
jle
rcrl
xlat
je
loopne
cmp
enter
in
xlat
inc
sbb
sbb
jp
int3
mov
xor
mov
daa
popa
xchg
pop
loope
leave
mov
pushf
addr16
scas
mov
sub
jbe
xor
sbb
loop
std
addr16
dec
sahf
mov
ret
dec
xchg
incl
adc
jg
fidivl
test
and
mov
test
lods
inc
call
jecxz
and
jb
mov
repz
mov
lahf
lret
push
insl
jae
fbstp
sti
sbb
mov
in
jg
test
inc
jo
sahf
jne
mov
stos
test
jb
sbb
mov
test
add
mov
jp
jnp
pop
add
cmpsl
add
fistpl
xor
sub
mov
push
xchg
out
pop
scas
ficomps
mov
mov
sub
xor
or
imul
cmp
sub
jae
lods
test
xchg
mov
hlt
or
pushf
or
shll
jp
ja
mov
sbb
jo
xlat
and
push
aad
js
popf
rcrl
and
lret
cmp
addr16
jne
fldpi
xchg
or
out
jl
ljmp
rcrl
ds
xorl
aas
divl
outsl
pop
adc
in
mov
dec
mov
pop
bound
push
mov
cmpsb
stos
push
mov
xchg
jno
cmc
pop
loop
sub
fdecstp
pop
scas
in
adc
sbb
xchg
mov
and
pop
leave
ds
sbb
sub
push
inc
test
sbb
cmp
mov
in
lret
mov
repnz
aaa
test
add
fidivl
jo
fwait
mov
add
mov
int
in
rorb
mov
sub
adc
in
push
dec
cmp
insb
cs
xchg
pop
aas
int3
enter
or
mov
jb
loope
dec
dec
and
jns
or
add
mov
push
movsl
das
xor
mov
xor
ss
das
negb
insb
sbb
cld
push
dec
lea
dec
pop
jno
bound
jno
rclb
test
test
lret
gs
xchg
sarl
lahf
gs
out
je
pushf
mov
mov
xor
jg
hlt
inc
stos
mov
cli
or
pop
mov
push
notl
or
cmp
jecxz
jle
aas
cmpl
cmpsl
insb
inc
and
or
push
daa
imul
ret
add
inc
sarb
and
dec
inc
mov
orl
divl
inc
dec
inc
push
inc
mov
add
test
mov
test
subps
int
clc
sub
pop
scas
imul
insl
mov
addb
push
dec
and
test
cmp
xchg
rorl
jo
xlat
movsl
stos
jmp
stc
xor
lock
addr16
inc
xor
fs
shl
mov
lock
push
jbe
movl
pop
mov
mov
mov
scas
jg
imulb
sar
xor
ja
into
xchg
jns
aam
dec
in
test
pusha
stos
lods
add
daa
pop
js
dec
pop
aas
and
imul
xchg
fwait
push
aad
mov
jae
scas
addl
xchg
mov
mov
je
dec
mov
jb
aaa
adc
in
fs
mov
add
pop
iret
leave
loope
into
cmc
add
sysenter
scas
icebp
and
gs
psubb
in
fs
jle
mov
addps
sarl
add
cmp
mov
cltd
fistpl
rclb
lods
insl
roll
mov
les
add
popa
sbb
cld
mov
jl
cmc
jb
leave
xchg
js
adc
cmpsl
sub
stc
xchg
sub
inc
int3
xchg
xchg
lods
jl
cld
in
fstl
rcrl
pop
mov
ret
xchg
mov
fwait
push
popf
repz
sub
or
lods
mov
in
dec
mov
cmp
sahf
mov
lret
jb
jbe
testl
fwait
in
inc
bound
and
test
or
ds
movsb
push
or
xlat
mov
sub
mov
sub
sti
aas
jg
mov
and
es
or
xor
call
cmpb
div
adc
subl
adc
sbb
and
fisubrs
ret
push
iret
adc
fmull
sub
lcall
jg
fmull
paddb
sub
ljmp
stc
cltd
loop
decl
fdivrs
mov
mov
imul
sub
mov
cmp
xor
test
shrb
xor
inc
cmp
xchg
into
daa
push
pop
icebp
and
mul
hlt
mov
popf
inc
dec
inc
jbe
mov
lock
dec
and
inc
loope
call
sbb
pop
pop
daa
cwtl
mov
out
push
jge
das
push
xchg
dec
test
jl
ret
mov
adc
xchg
shlb
clc
xor
fcompl
in
pushf
inc
je
sbb
xchg
and
out
shrl
sbb
mulb
addl
cmp
lods
or
bound
pop
adc
imul
mov
iret
scas
int3
mov
stc
pop
mov
mov
and
and
pop
stc
cmp
jo
mov
add
inc
outsl
cli
sarb
addb
xchg
gs
rcll
sub
or
mov
leave
sarb
xchg
inc
pop
xchg
fnstcw
in
mov
xchg
leave
enter
mov
mov
out
shr
inc
cltd
lret
mov
sub
inc
inc
lds
notb
push
push
xchg
push
and
sub
sti
jmp
test
jo
sbbl
push
push
lahf
mov
dec
aam
mov
mov
xor
testb
sub
dec
jbe
push
ss
and
aad
inc
aas
aad
sub
xor
xchg
arpl
ret
mov
or
xchg
mov
mov
cmpsl
mov
int3
rcl
mov
in
jb
icebp
fisubs
ss
scas
iret
jns
push
jo
imul
jge
sbb
jecxz
in
shr
xlat
pop
xchg
mov
mov
sahf
int
mov
icebp
and
repnz
push
jnp
call
push
lods
orl
dec
cli
pop
jno
lods
inc
xchg
mov
mov
sub
add
jo
sub
lock
push
cmc
mov
inc
lods
adc
sub
in
inc
rcr
insb
xchg
mov
divb
std
in
leave
push
mov
push
in
cmp
mov
scas
fwait
sbb
mov
outsb
iret
push
push
fimull
les
push
sub
inc
dec
and
pop
stc
mov
imul
add
and
push
sub
and
cmp
mov
push
adc
xchg
enter
inc
aaa
mov
xchg
outsb
int3
mov
sbb
inc
les
into
sbb
and
and
inc
mov
fstps
mov
scas
out
ret
sbb
out
dec
rcrl
test
stos
adc
mov
cld
or
fstpl
aaa
sbb
mov
mov
push
stos
fldenv
scas
out
adc
mov
or
test
popa
ja
fsubr
jl
adc
incb
imul
mov
or
mov
mov
cld
inc
dec
repnz
or
cld
lods
sub
dec
ret
cmp
inc
clc
jl
addr16
test
push
xor
mov
push
jbe
arpl
popa
jmp
mov
cmc
sub
inc
adc
mov
or
cwtl
xchg
mov
call
idiv
test
sub
push
fdiv
inc
fists
scas
sbb
adc
sarl
pop
cmpl
dec
adcl
jg
add
jo
adc
cmp
dec
cmp
incl
pop
icebp
inc
sub
xor
repz
je
cmp
mov
das
add
inc
cld
enter
and
gs
or
push
jl
and
pop
lahf
aas
xchg
in
jne
ds
push
lock
mov
movsl
dec
jno
mov
sub
mov
jns
xchg
outsb
jbe
push
jle
aas
test
mov
sbb
mov
pop
icebp
in
fwait
icebp
jecxz
mov
dec
dec
cmc
jecxz
fnsave
lods
jb
mov
das
sbb
aas
sub
pop
and
push
cmp
adc
jne
push
fmul
fwait
bound
dec
add
jecxz
lret
pop
fcmove
and
cmp
leave
or
imul
out
sub
pushf
push
lods
xor
sarb
sub
push
lahf
mov
leave
xor
cwtl
pop
dec
cltd
pusha
jb
sahf
jl
fsubl
popf
lods
mov
testl
jmp
filds
sti
les
aaa
jle
push
push
je
cmc
jb
push
xchg
ja
in
adc
push
xor
ja
sbb
adc
pop
scas
scas
push
jl
sub
dec
jle
add
dec
mov
xor
adc
pop
or
push
fidivl
jne
jmp
pop
int3
adc
repz
fcomip
xor
sbb
inc
mov
mov
mov
outsb
pop
push
jns
sub
imull
call
in
push
imul
or
mov
fadds
repnz
bound
cmp
stc
push
clc
lods
push
push
push
nop
ja
iret
jecxz
push
dec
mov
mov
orl
int3
shll
jns
repnz
cld
cli
in
rcl
std
jns
adc
mov
pop
lods
jb
jnp
mov
in
mov
insl
sti
mov
pusha
pushf
fistpl
adc
movsl
dec
push
jl
rolb
mov
cmp
pop
out
out
push
ficompl
pop
mov
mov
or
insl
sbb
pop
fucomip
cld
outsb
sub
sbb
inc
sub
push
add
mov
insb
or
pop
loope
ret
sti
jle
push
xor
fsubrp
stos
and
testl
dec
push
movsb
mov
in
leave
insb
add
jbe
dec
cmp
pusha
jo
cmp
add
add
test
push
aas
test
mov
add
pop
sbb
in
sbb
cmp
xor
fiadds
outsl
and
add
fisubl
and
sbb
lret
adc
faddl
shlb
bound
sarl
sub
imull
notb
dec
push
or
jmp
jg
push
and
sub
popf
data16
idivl
mov
hlt
hlt
popl
adc
mov
mov
sbb
jp
jg
cmpsb
jo
fildl
shlb
cmc
lret
or
dec
lret
movsl
fsubl
imul
test
aad
sbb
add
xor
aam
add
lds
rcrb
insb
or
pop
loope
pop
mov
adc
mov
push
inc
cli
inc
rolb
push
rcrb
sub
ss
mov
xchg
push
test
jge
push
mul
mov
in
out
dec
mov
sbb
lret
test
in
push
dec
add
jecxz
inc
out
mov
addb
cwtl
lods
inc
imulb
dec
outsb
ret
jecxz
outsl
jne
enter
jns
hlt
fwait
fs
xor
jno
mov
inc
es
es
test
push
arpl
push
mov
lods
jmp
add
dec
test
sub
dec
fisubl
sbb
xorl
mov
push
inc
cmp
cmp
lods
arpl
inc
fs
mov
push
lds
scas
cs
iret
pushf
lods
fsts
jae
jb
jne
xchg
cmp
add
jg
outsl
jge
sbb
mov
or
imul
sbb
movsl
mov
cwtl
jae
and
mov
dec
push
mov
fists
lods
movsb
or
repz
jb
and
shl
mov
shlb
addb
lock
sub
cltd
mov
repnz
or
aad
stos
jne
ror
into
mov
adc
adc
mov
loope
mov
jnp
out
sub
test
sub
xor
dec
sub
repz
cmp
or
stos
xchg
insl
dec
leave
mov
int3
inc
sbb
push
add
or
addr16
ror
lret
shll
aam
loope
popf
add
sahf
lcall
lret
ret
add
xor
jle
mov
xor
fcomi
cmp
cwtl
sub
inc
pop
loop
stc
arpl
cmp
mov
cwtl
sbb
out
and
mov
adc
dec
ret
jge
fs
inc
push
test
mov
les
fidivl
and
lea
mov
and
icebp
rcrl
insl
inc
sbb
pop
mov
jl
fisttpll
les
fs
test
je
push
shlb
pop
pushf
add
add
insb
sbb
dec
lahf
fmuls
push
xor
addl
sub
inc
arpl
in
xor
push
jecxz
repnz
in
push
mov
popf
sub
and
rcrb
hlt
jl
in
mov
iret
or
in
leave
test
clc
es
adc
adc
ljmp
push
cmp
jns
push
popf
jp
push
or
sub
xchg
int3
xor
mov
adc
fisubrs
mov
movsl
pop
test
xorb
and
add
pop
pop
jle
push
test
dec
inc
add
xchg
imul
mov
mov
jns
push
dec
mov
and
in
outsb
jns
out
jg
aas
push
outsl
mov
movsb
cmp
out
jnp
movsl
cmc
or
pop
or
mov
sub
pushf
and
xchg
ret
aad
cmp
or
mov
leave
mov
insb
cmp
pop
pop
pop
mov
inc
ljmp
pop
mov
andl
mov
push
pop
inc
jmp
lcall
fildll
pop
push
fiadds
xchg
testb
scas
mov
push
push
add
clc
cmc
dec
cli
repnz
adc
test
data16
sub
mov
rcr
push
in
jp
adc
pop
fdivs
inc
or
mov
or
mov
and
push
std
aas
add
stos
mov
xchg
push
xchg
dec
cltd
mov
lret
xchg
cmp
lods
mov
not
mov
cmp
cli
pop
into
stc
ss
insl
cmovb
das
jle
jecxz
shrl
add
bound
mov
nop
inc
das
inc
xor
lods
adc
popl
lea
ds
sbb
ret
xor
mov
dec
aad
fbld
nop
jne
shl
pushf
icebp
xor
mov
add
mov
mov
mov
sbb
add
popa
call
push
cmp
ss
cmp
ret
xchg
xor
adc
test
pop
mov
push
nop
or
mov
jne
inc
sbb
stos
mov
aaa
sub
mov
cmp
xor
xchg
imul
push
loop
and
dec
xlat
and
mov
dec
test
out
push
push
mov
and
in
sub
pusha
inc
xor
filds
jae
mov
push
daa
push
fsubs
inc
or
pop
xchg
cmp
les
jne
sub
es
cmc
pop
pop
mov
push
outsb
mov
cmp
push
std
lret
xchg
xchg
sbb
mov
sub
mov
push
jnp,pn
push
mov
aad
jb
shlb
ljmp
mov
jo
inc
xchg
leave
add
xchg
and
dec
cmp
inc
pushf
cmpsl
test
add
in
test
pop
inc
adc
es
jle
or
xor
clc
jb
push
sbb
dec
ljmp
out
aam
mov
mov
ja
cwtl
cld
addr16
xor
scas
sub
sub
push
sub
mov
inc
subl
mov
dec
xchg
clc
xor
aad
or
xor
push
lret
mov
pop
loope
loopne
mov
les
jmp
int
in
jns
xlat
mov
mov
cli
addr16
lea
xor
repz
stos
js
sub
gs
scas
enter
test
mov
add
lods
sub
js
enter
das
hlt
mov
aad
jns
push
fisubl
ljmp
hlt
push
sti
sbb
cli
pop
xchg
and
aas
dec
fs
or
in
sub
fists
popa
nop
or
mov
loopne
push
or
mov
outsl
dec
gs
std
and
mov
ljmp
leave
aam
cmpsb
lret
xchg
jge
aam
inc
sti
xchg
repz
ds
aam
jmp
xchg
pop
fistl
mov
stos
push
scas
mov
push
xor
ret
sahf
std
loop
ss
arpl
outsb
mov
inc
stc
pop
incb
push
sti
fisubl
fcoml
lahf
sub
inc
push
pop
cmp
into
outsl
iret
popa
in
outsb
sahf
aaa
pushf
jns
dec
jmp
mov
sub
ret
add
out
mov
pop
fsubrl
adc
push
inc
cmpsb
icebp
lcall
or
nop
lret
mov
andl
push
xor
test
xor
inc
aam
and
lret
jmp
mov
jl
rcrb
divl
punpcklwd
rorb
or
insl
fistpll
mov
push
push
int
cmpsl
lret
pusha
sub
mov
mov
sbb
stos
push
pop
and
xor
jnp
jmp
xchg
or
scas
rclb
or
add
scas
cmp
add
mov
dec
cmpb
pop
xchg
out
jmp
dec
unpcklps
mov
pop
ja
fnstsw
ret
aad
shlb
aad
outsb
xchg
popa
and
lock
add
fdivs
mov
inc
dec
cld
popa
movsb
jge
mov
lea
mov
mov
add
or
xchg
or
in
adc
fcom
and
sub
shr
lret
ret
sub
lods
and
mov
sti
xor
cli
jbe
pushf
cmp
outsl
int3
cmpl
mov
mov
inc
or
shrl
inc
pusha
ret
mov
mov
pop
out
cmc
and
inc
xchg
push
push
and
dec
xchg
jne
fdivr
jmp
xor
mov
cmp
sbb
xchg
cmc
xchg
jns
mov
inc
sbb
hlt
jecxz
fsin
xchg
rcl
cmc
and
aad
or
fistpll
cmpsl
lcall
subl
lock
jb
pop
jne
add
jnp
xor
xchg
test
sbb
sbb
pusha
mov
icebp
fidivrl
hlt
push
mov
call
out
fbld
pusha
pop
add
lahf
xchg
jbe
adc
pop
cli
add
into
pop
lock
loop
pop
mov
push
push
rcrb
xor
mov
int
cltd
cmovns
clc
popa
add
popa
jge
push
jecxz
inc
sub
mov
lds
stos
cmp
xchg
xor
rcr
aas
pop
mov
flds
pop
dec
jecxz
fbstp
push
movsb
in
mov
in
mov
imul
sub
xor
fisttpll
sub
movsb
mov
mov
rclb
mov
mov
fcomip
jbe
mov
and
cmp
push
xor
mov
lock
mov
mov
fldcw
fdivs
xchg
jecxz
push
push
xchg
sbbb
out
mov
jb
call
lret
cmp
push
in
and
xchg
jmp
sbb
test
and
and
fadds
movsl
lret
popa
aad
push
stos
cli
sarl
lret
or
xor
lret
out
push
dec
pop
dec
push
mov
xchg
dec
test
shll
sbb
add
nop
in
movsl
rclb
xlat
cli
nop
jmp
sub
sbb
cwtl
mov
push
lds
push
test
mull
or
enter
negl
jno
add
add
mov
xchg
mov
lcall
adc
notl
out
sub
sub
stos
cmp
subl
jmp
mov
call
clc
sbb
popf
xchg
xlat
in
idivb
ja
outsb
mov
lods
testl
dec
adc
loop
test
jbe
xchg
push
dec
xchg
and
mov
aad
and
ficoms
push
cltd
lret
stos
fcompl
xor
pop
push
stos
sarl
lock
repz
and
xor
dec
outsb
jnp
mov
inc
movsb
shll
dec
jg
cmp
sbb
sub
dec
out
arpl
es
inc
shrl
or
pop
imul
testb
sub
js
xchg
in
sarb
pop
add
nop
ror
xor
mov
je
pop
imul
divb
dec
sbb
mov
inc
mov
and
xorl
pop
mov
push
repz
xchg
enter
and
aaa
daa
enter
push
pop
and
xchg
test
pop
sub
mov
mov
push
dec
mov
bswap
enter
mov
cmp
mov
push
sub
xchg
xchg
aad
adc
mov
mov
mov
jp
leave
test
cs
stc
andl
addb
ljmp
push
fucomp
jo
enter
scas
aad
mov
aad
rclb
lock
mov
inc
dec
inc
push
fs
out
rclb
hlt
std
in
pushf
push
and
js
stos
cmp
pop
fcmovnb
xlat
dec
inc
enter
pop
xor
cs
cmp
popa
loopne
xlat
js
das
ret
inc
inc
movsb
das
cwtl
icebp
inc
jnp,pt
outsb
jle
mov
int
enter
xor
add
push
xor
mov
cmp
push
push
jbe
scas
fwait
imull
leave
repz
out
inc
insb
imul
ret
jg
mov
push
jae
dec
outsl
aaa
ret
xchg
cmc
add
in
push
xchg
pushw
mov
sbb
ds
cltd
and
in
inc
dec
jle
dec
cltd
lds
ja
xchg
inc
insb
push
lds
xor
mov
mov
daa
push
out
fistpl
neg
sub
xor
add
cmp
inc
loopne
and
insl
imul
daa
das
sbb
mov
cmp
in
insb
adc
loopne
dec
ret
sub
dec
jns
scas
outsb
loope
pop
rorb
pop
nop
sarl
cmp
cmpsl
or
jmp
jg
repnz
jp
insl
mov
iret
xchg
xchg
leave
lcall
add
nop
lret
ret
xor
aad
lock
mov
mov
movsl
das
jno
add
xchg
mov
add
movsb
adc
std
push
cmp
jl
cmp
icebp
add
pop
movsl
les
sub
shll
inc
mov
lar
fidivrs
cli
push
mov
pop
xchg
test
sti
data16
add
mov
pusha
jp
loop
jo
dec
popa
push
enter
aam
dec
add
out
aas
lret
push
fsubl
and
vmread
xchg
mov
mov
inc
push
jle
sub
add
cli
repnz
or
dec
sbb
fstpt
hlt
sbb
push
add
rep
call
leave
xchg
cmpsl
xor
outsl
sub
fcoml
stos
push
adc
in
fldenv
jno
lods
mov
adc
out
rorb
mov
xchg
inc
xchg
and
jmp
out
loopne
xor
jecxz
mov
sub
sub
iret
data16
mov
dec
mov
sub
jnp
cltd
movsb
mov
ret
std
cmc
hlt
sub
movsb
inc
add
xchg
inc
idivl
and
cmp
sub
mov
xchg
xchg
mov
lret
andb
int
cli
out
or
mov
iret
fdivr
xor
inc
pop
into
or
subb
rcrl
outsl
add
and
test
mov
mov
popf
test
pusha
mov
adc
or
jmp
adc
fidivl
jae
push
sbb
lock
es
dec
inc
sbb
or
cli
mov
xchg
int
push
sub
mov
xchg
fisttpl
mov
sbb
or
cmpsb
xchg
addr16
push
lods
hlt
lcall
add
dec
push
test
cwtl
je
mov
inc
adc
inc
leave
in
xchg
mov
pop
sub
sub
sbb
cmp
or
cmp
enter
ret
sbb
or
dec
sahf
xchg
aaa
cmp
xchg
roll
and
in
aam
jecxz
imul
dec
shrb
shll
bound
inc
push
lahf
mov
out
and
sub
or
and
cmpsl
fisttps
mulb
clc
pop
fs
or
mov
cmp
dec
xchg
adc
out
or
jp
and
shl
testl
xchg
mov
shrl
lods
xor
test
aad
push
jnp
xor
rcr
sbb
ja
or
add
int
push
stos
loope
jecxz
jbe
xor
data16
sbb
mov
mov
dec
fisttpl
cmp
cwtl
dec
dec
add
dec
xor
jae
pop
xchg
xor
lret
dec
in
mov
add
les
xchg
jae
fneni(8087
adc
sahf
insl
dec
cmc
loopne
outsl
jp
mov
push
push
in
cmpl
enter
divl
jb
es
adc
flds
add
stos
lcall
test
outsb
stos
and
xchg
jb
dec
pop
pusha
aas
in
push
mov
mov
loop
and
aam
push
rolb
enter
imul
mov
pushf
ss
sbb
pop
mov
xchg
fcomps
xor
pop
mov
or
jb
loope
sub
loopne
fiadds
cs
cmpsl
pop
fidivl
jp
dec
xchg
dec
lea
jge
or
gs
xchg
icebp
push
push
fisttpll
aam
ss
mov
pop
mov
jbe
mov
sbb
outsb
fmull
or
jge
dec
mov
mov
cltd
adc
sbb
cmp
jl
mov
das
jge
es
cld
das
stos
inc
dec
dec
sti
sub
jmp
mov
stos
in
cmc
push
rcll
push
cmp
or
jmp
xor
mov
fsubrp
js
rclb
in
xor
mov
mov
jecxz
stos
int3
scas
in
cld
ss
andl
push
loope
outsl
lret
or
in
mov
sbb
fists
adc
lods
add
lods
clc
in
lret
push
jns
mov
push
mov
dec
and
dec
mov
enter
mov
mov
and
mov
aaa
cld
mov
sahf
fmuls
loope
xchg
dec
adc
mov
jmp
js
out
rcrl
cmc
fildll
pop
xchg
dec
ja
xor
decb
pop
stos
xchg
rorb
mov
add
outsl
jge
lds
adc
mov
push
sahf
pop
jbe
mov
add
hlt
lods
push
jnp
mov
jbe
dec
in
jns
push
add
arpl
enter
popf
push
scas
sub
cmpsl
fnstenv
inc
arpl
jno
fimull
cmp
sahf
fmuls
pop
inc
gs
inc
outsl
sub
stos
dec
or
ljmp
fisubrl
lahf
stos
mov
mov
es
cmp
pop
pop
push
sahf
test
add
ret
mov
and
xchg
shlb
inc
imul
out
xchg
pop
out
sbbl
xchg
int3
lods
sub
cmpsl
es
inc
je
adc
aas
jo
add
fimull
dec
dec
ret
mov
loop
clc
mov
push
ftst
sbbb
cmp
sub
movsl
mov
pop
hlt
cltd
mov
in
test
or
neg
in
inc
jmp
es
outsb
rcll
xchg
loope
adc
mov
cmp
sbb
stos
cmpsb
mull
insb
add
xor
popf
insl
pop
scas
mov
pop
push
imul
lods
inc
dec
add
push
xchg
cs
jne
xor
enter
ljmp
stos
jmp
jp
push
test
cmpsl
and
out
xor
clc
pop
cli
push
cltd
cld
xor
movb
mov
std
push
sub
sub
add
aaa
jae
mov
mov
lock
out
mov
fadds
popf
pop
fldl
or
or
idivl
icebp
xchg
pop
leave
int
or
cltd
outsb
mov
push
xchg
pop
and
mov
cmpsl
cmp
pop
sbb
pop
sub
lcall
out
out
int3
jecxz
int
sub
dec
push
imul
adc
fsubs
lock
inc
add
iret
pop
push
cmp
test
xor
in
decl
xchg
std
cmp
dec
or
loope
cmpsl
and
jl
and
fwait
add
cmp
adc
shlb
int3
mov
add
sti
mov
jno
outsl
cmpsl
dec
mov
call
das
outsl
out
mov
sub
in
dec
push
cmp
xor
inc
xchg
fnstenvs
jl
lods
mov
es
xchg
in
xor
push
mov
in
push
repz
mov
or
xor
sbb
xor
and
push
insb
std
cmp
xchg
adc
adc
out
mov
mov
adc
xchg
adc
cmp
gs
mov
scas
inc
fdivrs
dec
dec
sub
xchg
dec
cld
or
push
inc
sarl
stos
or
sbb
sbb
mov
mov
cmpb
fucomi
sub
mov
adc
xchg
mov
adc
inc
xor
icebp
xor
inc
and
mov
wrmsr
pop
mov
aas
cmp
mov
dec
xlat
std
add
das
lea
dec
call
ret
mov
add
shll
mov
cmpb
adcl
cmp
lret
scas
fisubrs
int
dec
pop
sub
lcall
movsb
sub
ficoml
jmp
inc
or
insb
gs
pop
les
in
bound
jns
fsubrs
pop
cmpsl
adc
adc
in
addr16
lcall
add
ret
mov
sub
mov
nop
xchg
pop
int
sub
mull
sbb
cmp
iret
xor
fs
add
pop
pop
adc
or
in
cmp
fs
jbe
in
inc
sub
dec
or
clc
adc
jae
add
xchg
dec
mov
xchg
shl
jge
adc
ljmp
lahf
mov
outsl
mov
pushf
je
aam
inc
popf
xchg
mov
fnstsw
dec
pop
fstpl
jmp
push
sub
mov
pop
repz
push
lods
push
std
xchg
push
mov
lock
or
dec
cmpsb
insb
sbb
mov
jnp
push
add
pop
ss
inc
iret
test
pop
inc
out
jno
mov
xor
or
incl
dec
pop
out
cmpsb
jns
nop
lret
inc
mov
adc
and
fimuls
js
ficompl
pusha
mov
sahf
xor
xchg
sahf
sbb
std
roll
test
sbb
jbe
mov
pop
mov
out
jl
scas
jp
inc
mov
jmp
aas
ja
pop
pop
inc
add
sub
xchg
push
dec
loop
test
ffreep
mov
mov
out
pop
imul
insb
out
aad
cmp
inc
or
xchg
mov
or
idiv
inc
push
das
mov
sub
pushf
in
lcall
sub
xor
dec
scas
xorb
mov
mov
fmull
mov
xor
ret
out
add
ret
push
inc
ret
mov
testl
mov
pusha
mov
xor
push
mov
mov
adc
stc
adc
mov
pushl
mov
inc
and
cwtl
sub
pop
mov
pusha
shlb
and
divl
ds
or
pop
mov
cmpsb
dec
adc
into
mov
ds
hlt
dec
aas
movsb
imul
cmpsb
pop
arpl
jmp
fiadds
repz
inc
push
sbb
xlat
dec
mov
enter
in
stc
sbbb
testb
int
or
repnz
xchg
push
push
sbb
or
dec
mov
mov
and
lcall
stc
xor
and
sbb
ss
adc
rclb
jno
cmp
sbb
or
mov
dec
jns
shll
xchg
mov
adc
clc
pop
divb
dec
mov
inc
imul
inc
adc
pop
stc
mov
jnp
jg
orl
fwait
divl
adc
inc
cmp
dec
xor
mov
sbb
jl
lea
xchg
sahf
xchg
bound
loopne
rcrl
add
js
push
fs
mov
jmp
sub
xor
xor
or
shlb
mov
inc
stc
ljmp
push
popa
out
out
fs
mov
push
ds
pop
adc
cli
push
pop
mov
or
mov
sbb
test
push
push
rdtsc
stc
dec
pop
mov
popa
jbe
cmp
pop
insb
das
xchg
adc
int
je
pusha
sbb
lock
or
in
push
test
pushf
es
aas
fisttpll
cmp
sub
lods
ds
cli
shll
imul
test
mov
ret
jbe
cld
dec
cmp
imul
push
push
enter
lods
dec
xchg
fucomip
mov
push
fcom
movsl
cmp
mov
cmp
sbb
out
adc
adc
jno
lahf
pop
aam
add
imul
and
sub
sbb
std
dec
push
pop
mov
out
ficomps
mov
repnz
fists
pop
gs
enter
adc
mov
mov
sbb
out
aam
add
pop
inc
jle
sbb
gs
cmpsl
add
es
pop
lret
jne
sbb
mov
les
rolb
popa
fdivs
leave
cmp
mov
fisttpl
jge
nop
mov
in
mov
adc
mov
mov
scas
mul
mov
dec
inc
add
inc
imulb
bound
cwtl
cmp
stos
lock
lock
sbb
cmp
dec
cmp
jnp
jns
fimull
mov
cwtl
fidivrl
fstpl
jge
jmp
mov
addr16
push
mov
filds
repz
mov
dec
push
call
xchg
mov
pop
sub
push
jo
test
and
pop
pop
cmp
sti
xor
pop
lods
xor
push
add
mov
inc
out
add
pusha
cld
scas
or
out
mov
std
clc
xor
jno
mov
xor
in
aaa
sbb
mov
sub
les
mov
test
and
andb
inc
movsl
jecxz
pop
je
mov
push
inc
test
add
mov
or
push
mov
insl
dec
pusha
imul
cmp
dec
mov
cmp
xor
jbe
inc
mulb
clc
cmp
icebp
aam
inc
pop
out
xor
jnp
or
adc
popf
pop
cli
mov
rorl
outsb
push
push
or
imul
sarl
test
outsl
add
jo
popf
out
mov
aaa
out
lds
add
cmpsl
sub
push
ret
xchg
mov
aad
pop
inc
sbb
pop
out
hlt
cmp
mov
aas
cwtl
cmp
movsl
insl
test
xor
add
stos
push
push
push
out
in
jns,pn
icebp
ret
push
adc
or
arpl
jnp
das
fldl
hlt
sbb
imul
pop
mov
sbb
inc
sti
mov
jecxz
movl
mov
icebp
in
lods
rorb
pusha
push
mov
cmp
mov
es
rcll
sub
loopne
sti
and
dec
sti
dec
pop
push
fcmovu
adc
or
hlt
cmp
sarl
call
hlt
data16
xor
lods
popf
jb
sbb
push
fcompl
jne
enter
jb
pop
jp
ror
fcompl
lock
fistl
cmp
loopne
sub
jle
icebp
jae
mov
outsb
ficoml
xchg
movsl
or
jne
inc
jae
rcrl
sbb
and
adc
js
mulb
aas
sub
cmpsb
fmul
mov
nop
sbb
dec
adc
mov
lret
xor
ss
sub
push
aam
movsb
enter
lcall
inc
dec
lea
mov
aad
mov
cwtl
nop
cli
cmp
jnp
ss
aad
pop
arpl
shlb
jecxz
or
in
sbb
shrl
cmpb
lock
push
mov
iret
sub
dec
mov
sub
cmp
or
jecxz
mov
outsb
mov
stos
dec
dec
aaa
mov
or
out
xchg
gs
enter
insl
stos
push
fistpll
aam
sbb
mov
in
push
push
sahf
adc
jge
mov
pop
sti
fdivl
xchg
xor
pop
jns
pop
fwait
pusha
jo
dec
cli
test
aas
in
call
clc
cmp
fimuls
adcl
loop
push
push
sub
adc
xchg
aad
pop
int
jne
xchg
cmp
mov
mov
insb
jnp
out
sete
jp
push
xlat
sarb
jle
int
or
cmc
loop
imul
push
aaa
insl
adc
xchg
sub
ds
in
cwtl
mov
out
add
jo
pop
mov
sub
jnp
test
out
cmp
das
mov
or
sbb
pop
aas
push
jmp
call
jne
shr
repnz
add
push
cmp
imul
sub
ja
sbb
and
xor
mov
and
push
repnz
enter
bswap
sbb
ds
jb
pop
ficoml
lds
pop
cmp
out
ljmp
sub
arpl
push
lret
adc
rcrl
or
ja
xor
pop
das
test
pop
jae
ret
push
or
lods
test
jo
dec
push
dec
sti
fcomip
dec
cmp
enter
mov
push
jl
push
out
mov
aad
sbb
inc
out
dec
sbb
pop
push
subb
cmc
cmp
mov
xlat
push
mov
lcall
rcrl
fcompl
sub
add
mov
pop
int3
and
sahf
push
ljmp
sub
iretw
xor
or
adc
push
daa
xchg
mov
sub
push
add
xor
popf
aas
pop
mov
out
push
movsb
lret
repnz
push
mov
repnz
fdivrp
or
mov
cmp
mov
cmp
mov
popf
clc
mov
ds
sbb
popa
jb
lds
fs
and
int
mov
adc
in
inc
push
in
jnp
mov
sub
adc
push
mov
outsl
pop
inc
scas
stos
sbb
cs
popa
mov
mov
loopne
addr16
stos
fildl
es
jne
mov
lcall
gs
add
and
cmp
inc
fmull
imul
adc
cmc
addr16
and
or
jno
stc
push
insb
xchg
xor
repnz
data16
dec
mov
adc
jnp
push
fisubrs
sbb
or
mov
out
nop
imul
fidivs
pop
sub
and
push
int3
ret
cmpsb
das
data16
movsl
popa
lret
or
loop
add
test
hlt
stos
mov
adc
andb
xchg
pop
dec
ss
sub
jmp
xor
loop
add
xchg
jge
jns
insb
sub
mov
cmpsb
fidivrl
dec
lods
or
clc
js
sub
addb
jne
test
inc
xchg
loop
orb
rcr
imul
arpl
adc
out
and
push
inc
outsl
call
fldz
cmp
jo
fidivrl
stos
xor
inc
mov
push
push
movsl
mov
es
and
fidivl
mov
pushf
add
dec
dec
inc
arpl
pop
test
pop
pop
push
sub
rorb
cmpsl
out
test
sbb
sub
cmp
mulps
xchg
out
imul
and
mov
jne
mov
cmpsb
inc
adc
fcoml
mov
cmp
les
int3
cmp
inc
or
fsubrs
jmp
ret
cwtl
js
xchg
push
fs
daa
rorl
data16
idivl
sbb
mov
mov
xor
jns
cmp
xchg
xchg
pop
mov
add
lret
push
lahf
inc
push
cli
inc
mov
pop
imull
sbb
inc
pop
aas
sub
mov
mov
in
jnp
loopne
cmp
add
xor
lods
sbb
jmp
sarl
mov
imul
adc
les
test
lret
jno
fchs
loop
sub
into
and
jnp
stos
adc
sti
dec
dec
mov
adc
or
push
in
pop
pop
sub
aad
xchg
push
mov
outsl
lret
divl
mov
lock
xchg
ljmp
dec
std
idivl
out
sbb
adc
scas
scas
dec
cmpl
es
push
lock
add
mov
inc
mov
sub
mov
jecxz
pop
ss
std
ficomps
inc
mov
mov
sub
add
mov
mov
je
pop
cmp
ficoml
aam
fwait
inc
cmp
cmp
stc
testl
in
mov
out
fnstenv
add
out
lock
test
push
outsb
add
jno
jae
xchg
push
xchg
ljmp
lods
pop
repz
pusha
xor
fdivs
aas
jle
addb
ds
push
lods
push
stc
push
mov
xchg
sbb
cmp
movsl
cmp
and
lods
add
add
jmp
into
lods
push
sub
mov
sar
sub
inc
xchg
rcl
idivl
push
in
or
or
incl
mov
pop
stos
sahf
mov
mov
cmpsb
pop
adc
imul
out
jb
imulw
push
and
and
mov
rolb
pop
lock
popf
sub
push
push
mov
jno
gs
ret
scas
xchg
inc
mov
shlb
xor
pop
jne
int
lock
sub
enter
pop
adc
fsub
push
or
inc
sbb
jl
inc
sbb
in
insb
or
movb
cli
push
cmp
inc
cmpb
pop
mov
pop
jmp
and
mov
mov
cmpsl
repnz
inc
jecxz
daa
ret
decl
movsb
dec
ljmp
test
and
jg
push
xlat
push
lahf
dec
cmpsl
test
or
and
lds
es
push
movsl
dec
and
inc
mov
and
mov
add
adc
lods
xchg
xchg
jmp
in
dec
sub
packuswb
pop
jle
cs
cmpsb
jns
push
sbb
adc
enter
or
xlat
hlt
fidivrl
movsl
iret
push
push
or
arpl
xlat
lods
sti
rcrl
in
sub
aaa
imul
popa
jl
out
xchg
inc
std
fdivr
in
mov
ja
inc
inc
sbb
js
mov
xor
imul
pcmpeqw
jg
sub
fmul
aam
imul
adc
leave
add
adc
cmpsb
mov
xchg
add
aas
mov
sub
jecxz
xchg
fildl
iret
movhps
fnstcw
shll
dec
shll
rolb
jp
xchg
inc
sbb
mov
mov
dec
xorb
push
jno
mov
shrb
cmpsb
sbb
add
mov
sbb
loopne
outsl
inc
mov
add
mov
xchg
xor
jle
or
xchg
aad
std
inc
popa
std
fsubrl
jp
ret
add
mov
cmp
mov
jb
and
scas
adc
xor
jecxz
push
adc
push
inc
mov
mov
sbb
fistl
and
outsb
outsb
rcr
and
les
jle
or
cmp
outsb
pop
or
or
sahf
adc
mov
and
or
sbb
push
mov
or
mov
ds
shl
dec
int3
lods
ss
pop
push
sub
leave
std
fsubrl
loop
xor
in
das
sbb
rcll
and
mov
repz
xor
sbb
mov
mov
ficoml
ss
xchg
sub
dec
dec
jg
dec
push
sub
jns
stc
out
lret
sbb
mov
or
mov
ficomps
and
fimuls
add
xor
movsb
mov
jmp
pop
out
lret
xor
mov
lcall
fwait
shrb
jmp
out
jmp
adc
fcom
mov
sbb
cmpb
sub
or
gs
dec
in
sti
adc
push
addr16
scas
mov
xchg
cmpsl
aaa
cwtl
adc
cmp
mov
popa
aas
cmc
lret
jno
add
xchg
mov
sub
nop
adc
cmp
mov
sbb
mov
dec
mov
or
xor
jne
out
aaa
vpsrlq
inc
mov
dec
mov
push
orb
sub
icebp
push
stos
add
mov
pop
push
push
pop
xlat
lds
push
xchg
jnp
xor
in
push
out
aam
cmp
lds
dec
shll
mov
mov
ret
mov
into
push
out
xchg
fcompl
je
fstpt
imul
push
fsincos
pop
xor
popf
push
cmp
call
mov
fildll
ds
imul
sub
mov
xchg
pop
or
sub
xor
fistpl
xor
or
stos
pop
daa
add
pop
and
and
andnps
lock
jge
jnp
and
js
xchg
jecxz
bound
scas
lods
ss
push
ficomps
cld
inc
out
xchg
lret
mov
mov
fcmovbe
pop
ljmp
movsl
hlt
sbb
repz
sahf
xchg
sub
daa
imul
test
and
cli
adc
jbe
cli
lock
adc
das
sub
bound
fsubl
les
add
adc
cwtl
scas
push
inc
jp
imul
pop
mov
add
fwait
jl
aad
mov
insl
call
dec
mov
push
push
fcoml
int
loope
push
imul
push
popf
xchg
lods
loope
ja
stos
addr16
cmp
add
pop
stos
jne
dec
xchg
pushl
push
mov
jo
lock
dec
mov
stos
gs
in
cld
in
xchg
adc
outsl
adc
or
inc
inc
in
loopne
pop
add
mul
es
mov
out
mov
dec
hlt
sahf
in
nop
popf
lret
pop
mov
cmpsl
neg
pop
addr16
test
stos
sbb
addl
xor
jmp
mov
xchg
push
sbb
add
jae
fsub
popa
cmpsl
jp
fcmovne
and
cwtl
les
adc
lods
out
push
push
inc
adc
mov
xchg
aad
out
fiadds
jo
mov
std
out
outsl
inc
sbb
fsubrl
push
ljmp
adc
pop
pop
and
push
dec
out
in
popa
leave
push
test
or
mov
insl
pushf
sbb
fs
mov
and
das
xor
test
out
sbb
mov
sub
enter
scas
pop
rcrb
movsl
or
mov
stc
insb
inc
adcl
das
adc
dec
xchg
pusha
push
adc
pusha
lcall
xchg
dec
aaa
fists
jns
insb
loopne
int3
cmp
sub
daa
xchg
mov
mov
cmp
xlat
movsl
dec
mov
push
call
jae
xchg
pop
insb
sbbb
jns
test
ret
xor
mov
ss
out
insl
xchg
inc
aam
fwait
or
jle
es
pop
mov
mov
fdivl
and
dec
mov
mov
aaa
and
insb
or
jne
pop
cmpsb
mov
mov
mov
jp
test
jmp
int
mov
mov
fwait
cmp
ljmp
loop
ja
pop
mov
pop
in
inc
data16
and
jle
ja
dec
sbb
rorb
push
mov
inc
adc
in
xor
push
out
test
pop
mov
lea
jae
cmpsb
jne
leave
nop
inc
movsb
mov
adc
or
jns
mov
scas
push
stc
add
clc
and
jo
loope
ljmp
mov
cltd
loopne
jmp
mov
pop
push
jne
aas
dec
aas
in
aas
xchg
imul
add
push
test
lcall
xchg
fadds
in
cmp
inc
add
xor
dec
sbb
xchg
daa
icebp
andb
imul
xor
xlat
mov
idiv
dec
bound
push
xchg
cmp
out
xor
jmp
adc
test
xor
sub
xchg
push
cmp
in
shll
mulb
faddl
add
inc
notb
push
jle
push
test
push
sub
or
xor
loope
dec
xchg
addr16
xor
lock
bound
sub
arpl
insb
lea
sub
les
cli
mov
sub
pop
cwtl
repnz
jge
nop
popa
pop
xchg
pop
jmp
test
popf
add
inc
loope
xor
sbb
xchg
insl
ficoml
setno
mov
inc
iret
adc
test
and
shrb
loopew
pushf
lods
aas
mov
loope
push
lret
xchg
cmp
dec
imul
jo
imul
jl
xchg
insb
pop
and
or
ds
sbb
dec
addr16
js
mov
add
push
jecxz
lcall
jmp
idiv
or
enter
imul
fwait
and
icebp
or
icebp
sub
and
jg
dec
mov
int3
or
lret
or
shrl
mov
rclb
sub
loopne
xchg
inc
je
inc
sbb
outsl
xlat
clc
jnp
add
push
inc
lds
stos
and
mulb
rol
cmpsb
les
testb
addr16
es
cmpsl
adc
xchg
add
sbbb
js
adc
subb
add
sahf
jns
nop
jo
jno
mov
push
push
mull
mov
lcall
out
cmp
lods
std
pop
mov
jnp
test
or
fsubrs
lds
push
out
insb
adc
jo
enter
mov
mov
and
into
mov
xor
rolb
sbb
lods
xchg
jge
addr16
adc
fwait
dec
scas
xchg
ss
fs
enter
mov
xchg
mov
pop
sub
xor
and
in
push
pusha
xor
cmc
bound
ja
addr16
inc
cmp
test
mov
outsl
ret
mov
jne
out
rol
xchg
xchg
mov
inc
mov
mov
into
out
lods
loope
repz
aas
mov
nop
sbb
out
outsb
xchg
loope
rcrl
push
test
out
imul
sub
xor
dec
or
jl
pop
xchg
inc
fwait
leave
jae
xor
pop
jae
jnp
fs
cwtl
cmp
out
push
sub
ds
outsl
addl
jg
cltd
test
pop
adc
cmp
mov
test
nop
inc
hlt
ss
enter
push
out
sub
or
scas
inc
ret
sbb
pop
or
sbbl
rolb
stos
loopne
pop
and
sti
jg
and
ret
xchg
adc
mov
enter
int
sbb
jp
pcmpgtd
mov
or
imul
xchg
dec
cltd
dec
movl
inc
or
enter
jne
pop
mov
ror
cmp
lcall
es
daa
je
arpl
lds
push
cmp
jno
cltd
inc
mov
lcall
sub
pop
mov
cmp
repnz
repnz
movsb
movb
jb
dec
or
xor
pop
lahf
pushf
sub
cld
adc
jae
sub
bound
jno
dec
leave
push
push
repz
sahf
cmp
cmc
inc
push
dec
in
adc
inc
popa
ds
cmpsl
fucom
cmc
es
ljmp
jge
movsl
out
js
sti
rcrb
push
outsl
inc
lods
imul
lock
mov
inc
mov
aaa
push
adc
pushl
adc
sub
dec
pop
and
inc
lret
stos
insb
xchg
pushf
inc
add
loop
fdivrs
nop
mov
repnz
ret
jg
jbe
es
and
or
daa
sahf
mov
mov
out
out
call
mov
out
stos
stos
push
dec
sub
rorb
sub
inc
cwtl
insb
dec
mov
pop
or
or
add
leave
inc
mov
push
push
fmull
das
es
out
pop
fstl
shl
jno
xor
mov
test
rorl
ret
ret
sub
pop
aad
push
imul
rcl
daa
mov
je
mov
test
or
std
or
pop
push
add
sub
mov
push
dec
sbb
push
mov
adc
push
cmpb
fsubrl
outsl
es
xchg
std
push
mov
lods
inc
dec
arpl
cld
xor
test
jb
in
icebp
in
xchg
and
add
nop
lret
repz
inc
ret
aas
pop
jecxz
das
pop
or
cmpsl
in
mov
xor
cltd
and
mov
xchg
daa
cwtl
inc
out
aas
int3
addr16
stos
mov
addr16
adc
adc
sti
lcall
ret
mov
lea
cli
negb
or
stos
push
mov
ret
idiv
dec
bt
filds
pop
xor
mov
dec
jecxz
call
xchg
mov
sub
test
dec
and
pop
xchg
bound
pop
in
pop
sub
sbb
jle
pop
sbb
xor
aas
dec
push
enter
adc
mov
cltd
cmp
ljmp
and
stos
std
adc
popf
jno
pop
pop
ss
dec
mov
xor
icebp
shlb
jne
mov
insb
imul
mov
and
mov
mov
inc
xchg
add
sti
test
xchg
lahf
sbb
jmp
mov
gs
xor
das
xchg
jne
mov
in
mov
lcall
or
cld
mov
sub
cwtl
dec
jo
dec
add
dec
add
push
jb
mov
xchg
cmp
mov
ret
and
and
movsb
push
fstps
dec
scas
repnz
jg
sti
repnz
add
cmp
add
xlat
mov
sub
jp
call
mov
mov
in
pop
addr16
daa
sub
je
std
mov
loopne
cwtl
fwait
repz
mov
popa
rcll
mov
rcrl
cmp
loope
mov
dec
popl
out
bnd
mulps
stos
pop
ret
mov
add
clc
mov
mov
push
lds
or
pop
scas
outsb
mov
push
and
out
dec
inc
out
mov
mov
xor
add
mov
push
out
fstpl
inc
pop
das
inc
fidivrl
loop
aas
movsb
dec
dec
inc
push
push
mov
xor
adc
jnp
sub
bound
imull
test
sbb
aas
jb,pn
pop
lret
popf
cmp
lds
adc
or
jecxz
mov
and
push
lret
adc
mov
roll
mov
insb
push
cwtl
sbb
leave
pop
cltd
movsb
push
sahf
lahf
dec
frndint
pop
fwait
insl
mov
int
test
in
pop
or
pop
sbb
leave
sti
imul
xlat
cli
dec
or
or
test
outsl
push
in
push
out
mov
jmp
adc
mov
ss
mov
mov
dec
addr16
and
push
xchg
sti
push
leave
cwtl
wbinvd
aad
pop
fnsave
xchg
xchg
or
mov
jnp
mov
add
or
shlb
mov
lahf
repnz
and
cli
enter
inc
push
cmp
dec
pop
pop
sub
mov
pop
fprem1
mov
sbb
push
mov
mov
jmp
mov
fstps
xchg
cmc
cmp
jle
call
pop
es
paddd
hlt
mov
ss
jp
xchg
xchg
sbb
add
outsb
mov
ss
pushf
add
mov
outsl
pop
icebp
xor
fcmovu
imul
cmpsb
insl
mov
push
dec
aad
out
icebp
out
test
sub
rcll
xor
pop
sub
stos
mov
cmp
mov
or
cmp
fdivs
fs
jno
lock
pop
adc
add
rcrl
or
dec
xchg
test
push
adc
daa
and
fsubrl
push
mov
loope
fs
cwtl
and
loopne
ret
popa
out
sbb
push
aam
flds
std
mov
fistps
jp
mov
push
sub
mov
jnp
jne
jge
cmp
mov
adc
in
dec
shll
push
push
jmp
daa
push
or
inc
adc
movsl
mov
sbb
mov
adc
or
cmp
pushf
mov
push
cmp
fldenv
rcrb
cmpsb
adc
out
out
mov
jb
xbegin
fnstsw
shrl
jmp
mov
pop
xor
hlt
add
ja
out
adc
aam
repnz
sbb
das
jge
sbb
sub
cld
push
mov
in
add
inc
add
dec
cld
imul
rcrb
jge
daa
xor
add
jno
ljmp
add
jmp
push
pusha
adc
mov
test
cmp
push
and
mov
dec
mov
insl
pop
sahf
ret
bound
syscall
ds
dec
inc
or
xor
scas
test
mov
pop
push
sub
pop
sbb
mov
xchg
pop
jb
test
mov
das
mov
jnp
daa
cmp
pop
cmpsb
dec
inc
outsl
xchg
ret
repz
mov
mov
jg
sti
loop
add
fildll
adc
push
out
jmp
pushf
outsb
mov
out
mov
mov
sbb
inc
sbb
test
lock
adc
fucom
pop
popa
imull
roll
jl
ret
sbb
lock
add
sub
sbb
test
movsb
fstpt
sbb
mov
jbe
hlt
bound
sbb
rep
jp
or
test
xchg
mov
sub
pop
outsl
jg
pop
cmp
frstor
paddusw
test
lret
clc
lret
adc
in
cmpsl
pop
lcall
pop
push
mov
mov
jo
mov
xchg
insb
sub
mov
push
movl
fdivs
sbb
mov
add
inc
inc
and
imul
call
sbb
and
mov
sub
shrl
loopne
repnz
mov
out
sbb
mov
jnp
cwtl
sub
push
imul
aas
lods
push
pushf
faddl
dec
pop
sbb
inc
mov
das
xor
jecxz
mov
shl
adcl
push
sahf
cld
lea
popa
cmp
jl
sbb
inc
std
ss
adc
cmp
dec
dec
fcom
imulb
push
aad
cwtl
adc
dec
sti
jbe
mov
out
cltd
aad
add
jnp
add
popa
aaa
loop
xchg
mov
or
ss
shr
lret
mov
mov
cmp
lods
mov
mov
push
dec
shlb
pop
fldt
sub
mov
ret
outsl
mov
ja
pop
add
out
mov
jge
push
sub
cmpb
or
jmp
sbb
out
fisttpl
cmp
or
lcall
out
mov
pop
xchg
push
frstor
out
jg
lock
inc
scas
adcl
fbstp
inc
ja
push
mov
pop
sub
pop
int
iret
xorb
push
pop
sub
jb
enter
test
lret
and
iret
pop
sahf
xchg
and
out
mov
test
or
mov
jl
xor
lret
movsl
xchg
hlt
sti
movsl
pushf
dec
pop
ljmp
add
adc
xor
push
xor
add
subb
es
test
push
mov
loope
mov
dec
cmc
fisubrs
dec
push
es
xor
jg
js
dec
sub
out
adc
stos
test
arpl
dec
rorb
mov
popf
idivb
out
out
notb
js
jecxz
ror
cmp
fs
and
sti
loopne
lods
pop
cli
xor
lods
or
data16
or
and
add
ret
sti
mov
das
test
sahf
xor
pop
adc
jo
xchg
shlb
inc
movsb
clc
add
inc
popf
inc
mov
cmpsl
jne
test
pop
sub
sub
stc
out
pop
icebp
addb
mov
xchg
mov
pop
sahf
lret
cmc
outsb
aas
jge
cmp
xchg
cmp
seto
rorl
inc
jns
mov
in
inc
arpl
jg
or
shl
pop
cmpsl
cmpsl
cmp
jle
mov
fucomi
mov
push
es
ret
ret
not
add
mov
lods
fcoms
xorw
adc
in
sti
daa
or
mov
clc
pusha
movlps
fadds
jge
sbb
and
cmp
hlt
mov
repnz
inc
cli
jge
mov
in
sti
sub
arpl
jge
sarl
sbb
adc
push
sbb
out
sub
scas
xorl
fldl
sbb
sbb
filds
es
inc
sbb
jmp
imul
aad
fstpt
lahf
pushf
bnd
or
push
insl
ss
xor
xor
jae
sbb
aas
pop
cwtl
mov
movsl
and
lds
test
jo
sub
dec
loopne
shll
cmpsb
xor
imul
inc
mov
xor
xchg
mov
pop
outsb
pop
testl
outsb
into
fisttpll
jnp
pop
adc
dec
and
pop
push
pop
cwtl
dec
test
xchg
fadd
in
inc
xchg
dec
sarb
sbb
leave
jg
add
gs
sahf
inc
cmp
js
mov
into
push
jg
lds
mov
lret
sub
mov
mov
sti
lea
xchg
arpl
dec
ret
data16
fcompl
dec
mov
push
movsb
adc
mov
add
pusha
push
xchg
mov
inc
adc
xor
or
xor
imull
push
pop
push
popa
lret
mov
fsubl
push
jp
jl
aad
pop
mov
arpl
ja
sbb
push
shlb
cmp
push
sub
sub
test
clc
and
sub
xlat
stos
pusha
sahf
mov
jge
dec
push
fcoms
addb
push
pop
lea
mov
push
daa
jp
sbb
inc
xlat
fdivrs
or
mov
xor
js
jl
movsb
enter
fwait
sarb
mov
sbb
notb
cmpsl
rcll
fbld
lcall
sti
mov
movsb
fcomip
pop
push
mov
std
lods
lcall
fiaddl
outsb
in
push
jmp
sar
lahf
jp
sub
aad
jg
jmp
and
lea
stos
adc
cmp
fidivl
xor
fbstp
out
icebp
pushf
mov
popa
mov
cmp
mov
sbb
lods
loope
pop
pop
lret
lret
or
and
inc
sub
mov
and
test
ficoml
inc
cmp
js
and
je
jb
jp
sub
clc
test
push
arpl
fidivrl
pop
nop
scas
rcr
test
imul
loop
es
cwtl
inc
jae
and
mov
pop
jle
fsub
vpshuflw
mov
pusha
mov
inc
add
sub
mov
imul
adc
push
dec
xchg
shr
or
stc
xchg
jle
mov
and
loopne
cmpsl
out
test
cmp
lods
and
jb
pop
arpl
popf
jno
pop
mov
insl
xor
cmp
sbb
jo
sbb
lock
jp
lods
ret
mov
mul
mov
mov
adc
mov
ljmp
lahf
adcl
ror
inc
les
out
rolb
ret
sub
bound
fdivrs
pop
in
call
sbb
cmpsl
sbb
inc
outsl
or
sbb
imul
mov
mov
and
push
mov
das
mov
hlt
dec
cmp
ja
rorb
scas
in
clc
int
mov
sar
aam
push
sub
xor
add
mov
sbb
sub
test
cmp
cmp
aas
pop
inc
fisubs
mov
cmp
adc
xor
sub
mov
cmp
divb
shll
insl
in
xchg
cmp
mov
add
paddusw
and
cmp
movsl
xlat
push
xlat
xchg
subl
insb
sti
mov
es
daa
clc
sbb
cmp
scas
push
hlt
xchg
push
xchg
int3
mov
sbb
mov
add
or
fisubl
sti
popa
sub
cwtl
hlt
mov
xchg
push
cltd
dec
pop
adc
into
jge
stos
mov
and
hlt
fwait
or
cli
pop
prefetchw
mov
lahf
mov
xchg
push
jle
cmp
pop
jge
in
lahf
cmpsl
or
sbb
cmc
notl
repnz
push
mov
sub
in
xchg
test
pusha
data16
sbb
rol
enter
push
mov
in
nop
cmp
sahf
dec
sbb
dec
popf
scas
push
mov
push
push
ret
cmp
sets
mov
adc
in
fsubl
in
stos
out
cmpsb
stos
xor
sub
jg
mov
xchg
xlat
push
out
outsb
adc
test
lds
scas
popa
stc
pop
pop
pop
in
bound
arpl
mov
add
cmp
lods
pop
test
cmpsl
push
push
push
fisttps
jno
movsl
scas
dec
push
jne
or
mov
nop
xor
adcb
or
aam
mov
inc
push
mov
mov
push
addr16
add
cmp
sbbl
lods
mov
jecxz
stc
neg
sub
add
icebp
arpl
cltd
ljmp
repnz
sbb
inc
xor
or
jmp
repnz
inc
les
outsb
sbb
gs
push
leave
movsb
pop
ss
lods
push
outsb
cmp
ja
mov
push
outsl
addr16
iret
into
inc
add
sarb
dec
int3
and
aas
lock
sti
or
sub
out
ja
mov
push
lret
out
xor
test
lock
addb
in
xchg
jp
pop
mov
out
out
ret
xor
sbb
push
jle
xlat
fcomps
or
mov
sub
pushf
movsl
ljmp
mov
adc
sub
xchg
pushf
lahf
sbb
mov
or
bound
js
lods
sbb
pop
xchg
adc
or
rcll
xchg
cmp
movsl
jle
push
ret
stc
sbb
test
test
add
int
stos
jno
ss
cwtl
sub
jno
inc
push
mov
mov
ja
xor
std
pop
jbe
xchg
mov
sti
dec
pusha
arpl
test
and
mov
fimull
push
lods
dec
xor
nop
jmp
push
and
push
xor
xchg
push
imul
bound
xor
rolb
jecxz
fs
js
les
call
pusha
aaa
mov
fmuls
mov
cmp
jne
mov
sarb
mov
fadds
inc
idivb
ljmp
pop
mov
lret
xchg
xchg
and
stos
sub
and
arpl
xchg
daa
inc
xor
cmp
pusha
mov
inc
js
or
popa
push
insl
dec
inc
dec
mov
lods
ljmp
aam
mov
xchg
iret
clc
mov
fisttpl
push
jge
mov
daa
test
mov
pop
add
das
sub
push
push
scas
pop
in
call
push
sub
mov
int
data16
into
xchg
push
push
push
push
xorb
sbbb
mov
push
sti
sbb
stos
aas
shll
xchg
fmul
loope
aas
bound
repz
not
xchg
xchg
pop
push
cmc
pusha
stc
inc
dec
push
pop
daa
pushf
cli
sar
cmp
aaa
popa
add
sahf
std
fiaddl
xchg
cmpb
push
in
fcmovu
cwtl
and
out
icebp
negb
sbb
scas
orl
dec
mov
fcmove
sbb
add
loope
push
icebp
cld
insl
or
rcl
into
in
push
es
pop
mov
insb
dec
cltd
stos
mov
pop
fistpl
xor
leave
mov
ss
push
cmc
ja,pt
sbb
lock
or
test
mov
and
subb
xchg
repnz
push
and
add
inc
lcall
inc
je
psubw
roll
aam
xor
je
test
jecxz
push
fs
aas
fsubrs
push
xchg
inc
adc
pop
stos
add
and
push
out
int3
nop
bound
in
stc
in
inc
repz
dec
idiv
jnp
jns
pop
loope
lcall
pop
nop
in
popa
xchg
pushf
fwait
ret
adc
nop
mov
jge
add
pop
mov
ljmp
cmp
jle
mov
adc
popf
mov
push
jae
negb
ds
or
pop
test
pop
jl
bound
dec
mov
je
cli
insb
pop
jecxz
sbb
faddp
test
in
pop
mov
scas
addr16
push
xor
mov
test
pusha
and
iret
push
add
cmp
xorl
jbe
shr
mov
or
inc
dec
jp
mov
xchg
mov
mov
mull
sar
sbb
or
cmp
ret
lods
decl
imul
sbb
cmp
outsb
sub
xor
pop
push
hlt
cs
xor
pop
inc
cwtl
jmp
dec
mov
and
rcrl
jg
or
jns
mov
test
jns
test
std
lods
stos
and
stos
loope
stc
jae
cmp
mov
jle
daa
adcb
xor
mov
and
mov
inc
and
or
add
mov
lcall
clc
dec
lods
icebp
mov
push
loope
and
jmp
mov
cmpsb
shufps
addb
xor
inc
jne
add
insl
addl
sub
sub
in
mov
ds
rolb
repnz
cmpsl
outsb
leave
xor
into
add
dec
sbb
mov
in
sub
cltd
jnp
ja
sbb
sti
int3
push
imul
mov
dec
xchg
test
xchg
loope
repnz
icebp
out
push
gs
sub
or
jle
jle
pop
test
xchg
mov
imul
outsl
push
push
or
add
mov
cmp
mov
ss
jp
pop
inc
repnz
mov
inc
xchg
push
pop
repnz
out
insl
rcl
push
mov
sbb
out
xchg
scas
inc
hlt
push
mov
jecxz
loope
ljmp
and
in
hlt
cmp
xorl
dec
jmp
jae
push
jmp
mov
fisubrl
adc
cmpsb
testb
dec
jno
stos
loope
mov
sar
sbb
xor
sbb
addr16
repz
pop
bound
push
xchg
pop
icebp
fnstcw
out
js
xchg
pop
loope
enter
sbb
push
outsb
fdiv
pop
fst
xor
gs
and
repnz
dec
xor
add
pop
push
sti
ror
lea
aad
in
out
sbb
mov
jbe
inc
arpl
inc
sub
mov
sub
mov
push
in
mov
and
sub
xor
mov
add
xor
fnstenv
lock
lret
mov
inc
add
cli
lea
cmpsb
mov
cmp
jg
xor
or
pusha
push
nop/reserved
sbb
movsl
mov
push
mov
cltd
fldenv
addr16
adc
jnp
push
ljmp
adc
orb
fwait
xchg
mov
push
mov
or
aad
nop
sub
dec
adc
add
cli
xchg
push
mov
dec
xchg
test
in
cli
int3
or
cwtl
mov
int
mull
mov
mov
loope
shlb
mov
cmpsb
int
sub
arpl
cmc
outsl
dec
push
popa
ret
jge
lds
sub
pop
popl
jge
and
lret
and
shrb
add
pop
test
or
mov
cmp
and
jecxz
push
dec
es
cs
out
gs
lods
popf
loopne
js
lods
xlat
or
and
mov
mov
and
fildl
outsl
sub
cmpsl
and
clc
xchg
or
dec
dec
les
fbstp
and
jl
xor
xchg
jecxz
ja
xchg
or
xchg
jno
or
test
pop
in
outsl
ret
clc
es
push
in
lods
das
les
hlt
bound
fisubrs
in
xor
push
dec
nop
xchg
xchg
les
dec
cld
push
out
xchg
push
int
inc
fildll
cld
or
mov
sbb
push
ret
mov
in
addr16
mov
or
push
insb
shlb
sbb
xor
clc
xor
test
mov
inc
dec
add
je
xor
sbb
pop
adc
ret
repz
adc
fisubs
cld
std
sub
fistpll
push
dec
sarl
mov
lea
roll
movsl
push
or
bound
std
dec
pop
xor
and
popa
movsl
inc
clc
cs
xchg
inc
dec
stos
in
fisttps
ret
imul
imul
xchg
jl
or
pop
cltd
js
inc
les
xchg
mov
xlat
jno
popa
mov
mov
in
jecxz
lahf
test
insl
sbb
xchg
pop
mov
push
jo
mov
arpl
sahf
xchg
fdivrs
scas
mov
dec
out
mov
cmpsl
and
cmpl
popa
or
and
sbbb
add
push
scas
push
sbb
in
mov
inc
push
clc
lea
mov
adc
bound
leave
lds
mov
movsl
out
aas
jecxz
loope
mov
mov
mov
mov
popa
js
js
rcrb
addr16
nop
mov
hlt
loopne
adc
jmp
dec
jb
cmp
fcmovnbe
dec
mov
add
mov
cmc
cld
jl
dec
mov
andb
mov
sbb
std
cmp
mov
clc
or
js
shr
jmp
xlat
jo
mov
mov
xchg
xchg
pop
adc
cmpsb
in
push
movsb
test
add
mov
jae
js
jnp
pop
adc
pop
sub
or
pop
icebp
insb
jno
and
mov
sar
cld
xor
lods
pop
icebp
jle
and
mov
inc
cmp
cmp
or
out
call
arpl
xchg
dec
not
cmp
dec
dec
xchg
inc
and
shl
jno
add
sarb
pop
pop
cmp
jns
mov
jecxz
cmpsb
int3
test
xor
scas
push
mov
adc
cmp
mov
icebp
sbb
icebp
fstpl
mov
aas
push
jmp
ss
je
push
push
pop
shll
jne
ja
adc
scas
cwtl
sbb
scas
push
dec
fbld
imul
dec
mov
cltd
cs
mov
push
fwait
out
in
test
or
int
ret
xorb
pop
int3
ja,pt
std
aaa
imul
cmp
movsb
fsubl
xchg
xlat
popl
test
adcb
hlt
sbb
cld
inc
scas
pop
inc
mov
repz
mov
rcl
jnp
jg
lds
and
fildll
adc
test
rorl
popf
jmp
pop
scas
sub
pop
sbb
mov
fwait
adc
inc
and
inc
adc
push
sub
ljmp
inc
rorl
enter
out
mov
js
popf
jg
punpcklbw
xchg
jns
inc
add
sub
out
pop
mov
mov
dec
cwtl
add
mov
sub
int3
bnd
push
iret
sbb
rorb
fldcw
dec
lea
pop
sub
or
push
jecxz
jecxz
icebp
jno
mov
out
aam
cmp
lea
sbb
rorb
xor
nop
jp
outsb
xor
mov
inc
jns
adc
sti
loope
adc
cmp
xchg
xor
in
lock
xorl
xchg
push
adc
mov
inc
gs
jle
inc
cmp
test
popa
lods
cmp
or
daa
lock
sti
cs
fidivl
dec
jnp
mov
dec
ljmp
cmpsl
sahf
sahf
jle
inc
bound
arpl
outsl
sub
icebp
or
mov
xchg
pop
subb
sub
std
sub
ja
fbstp
xor
sub
pop
bound
or
ja
xor
mov
orb
cmp
push
nop
cld
cmp
xchg
arpl
push
lcall
ret
lret
dec
xchg
inc
out
pusha
sti
jmp
add
push
adc
mov
cmp
bound
mov
out
xchg
xor
inc
adcl
mov
outsl
xchg
xchg
adc
mov
jns
inc
fmuls
mov
neg
jmp
jns
mov
int
mov
addr16
iret
pop
adc
pop
out
push
rorl
sub
sti
imul
out
mov
insl
stos
je
imul
or
lahf
xchg
jmp
lahf
mov
ja
inc
mov
pop
push
lea
pop
ret
sbb
cmp
jecxz
stc
push
rorl
or
jae
ja
ret
adc
shrb
mov
jge
or
jns
mov
cmp
ja
ljmp
iret
cltd
aam
jmp
push
mov
xlat
scas
sbb
cmp
mov
xchg
mov
xchg
shll
dec
iret
mov
ss
jg
mov
movb
dec
out
jnp
pop
incb
cwtl
js
add
sti
xchg
pop
sbb
nop
add
push
call
enter
and
ss
rolb
lods
pop
stos
out
jmp
inc
fsts
adc
xor
dec
aas
push
incl
mov
push
leave
jno
lahf
and
fcmovbe
loopne
loop
mov
sub
dec
dec
stc
dec
cmpsb
scas
out
lods
xchg
push
xchg
movsb
fidivl
jno
sbbl
jge
mov
aas
insb
mov
mov
jp
out
mov
xchg
add
push
movsl
jne
jmp
repz
xorl
neg
and
fsubs
dec
adcb
mov
mov
lea
out
lret
jl
ds
lret
cmc
mov
push
or
xchg
push
repz
fsubrl
dec
mov
bound
push
ret
test
test
mov
outsl
loope
inc
dec
adc
rcl
pushf
mov
aad
mov
outsl
or
fildl
xchg
out
scas
jae
and
xchg
js
sbb
adc
stos
les
cli
sbb
popf
out
mov
lahf
aad
sub
mov
test
xor
push
lcall
push
sti
pushf
xor
outsl
fldenv
fcmovnbe
push
repnz
dec
aad
xor
mov
cmp
or
mov
or
out
or
or
jp
incl
ret
and
imul
clc
stos
sub
std
fcoms
fldt
push
add
lds
popl
push
jnp
call
jb
repz
push
cmp
and
insl
dec
stc
add
mov
cmp
adc
into
mov
add
es
sub
adc
cmpsb
insb
inc
insb
dec
mov
inc
and
popf
out
xchg
and
aam
or
inc
loop
fstpl
pop
jnp,pn
adcl
or
ret
adc
stos
jecxz
leave
and
dec
pop
repnz
aad
es
notl
dec
push
jae
lock
test
aam
and
cltd
enter
pop
out
push
pop
call
pop
adc
aam
push
insl
xor
cmp
idivb
xor
test
mov
push
data16
sub
cmc
jl
push
inc
mov
xchg
je
jl
insb
sar
lcall
push
cmpsb
repz
mov
adc
lret
pusha
xchg
rolb
pop
dec
push
scas
mov
push
pop
fucomp
or
inc
scas
shrb
inc
fisubs
in
inc
arpl
rcrb
in
or
mov
movsb
inc
mov
sbb
fsubrl
mov
fistpl
insl
push
pop
lret
cmpsl
mov
fisttpl
enter
and
jp
icebp
into
push
lea
sub
andb
icebp
loope
jge
jle
jecxz
outsb
or
xchg
pushf
add
repz
mov
add
hlt
pushf
cmp
mov
out
jle
pop
push
mov
cwtl
fsubl
push
dec
fmuls
dec
sub
jl
arpl
ficoms
push
aas
movsb
or
mov
xchg
ljmp
std
stc
std
shll
cs
push
dec
push
ficoml
push
ds
std
sahf
xchg
fs
sub
jb
jnp
scas
or
dec
or
mov
pop
mov
pop
out
cmc
mov
lds
neg
int3
test
fnsave
jne
mov
pop
addb
xor
mov
dec
jp
sbb
add
adc
mov
fdivrs
mov
aaa
push
loopne
insl
adc
aas
fadd
xor
jle
sbb
iret
xchg
dec
jb
cmc
lea
or
jp
sub
les
rorl
leave
scas
jae
push
sbb
pop
lock
mov
jne
push
negl
adc
hlt
push
add
rep
mov
stos
xor
aaa
nop
add
add
repz
sbb
push
imull
nop
mov
dec
cmpsl
call
xor
dec
or
xchg
sbb
adcl
pop
out
js
ret
out
jl
cli
out
mov
bnd
xor
cmpsl
sti
ret
loop
add
jp
mov
lahf
mov
xchg
icebp
ret
aad
divl
or
inc
mov
sbb
lcallw
add
mov
jle
xchg
adc
xor
and
mov
out
or
fiaddl
jb
mov
into
lahf
pop
push
adc
in
cltd
cld
test
push
aad
mov
dec
cmp
fs
ret
adcl
mov
imul
bound
adc
push
cld
pop
dec
lods
or
int
push
into
xlat
pop
shrb
jne
dec
icebp
or
mov
outsl
fimull
adc
jns
std
lea
les
or
push
cmc
negb
adc
in
sub
sbb
xor
mov
and
jle
stos
xor
dec
loope
mov
rcll
sbb
push
xor
sbb
pusha
xlat
xchg
inc
mov
fwait
jge
sub
bound
xchg
popf
jae
xsave
sub
push
pushl
xchg
dec
jle
mov
sub
add
imul
fwait
fs
inc
mov
jae
test
divb
and
jecxz
mov
cmp
ss
fdivrl
fimuls
daa
push
inc
mov
mov
sub
arpl
push
jnp
xchg
fxch
sbb
negb
adc
mov
les
das
add
jl
adcl
or
pop
pop
push
les
dec
ds
dec
xor
and
mov
mov
out
cwtl
clc
mov
xchg
mov
sti
push
mov
in
adc
dec
sti
out
push
test
xchg
and
gs
ret
sbbl
cwtl
sub
les
punpcklbw
xchg
sahf
cli
bound
dec
pop
jno
sub
popa
test
lret
mov
and
aam
or
xor
sbb
inc
insb
mov
stos
sarl
sub
loopne
call
mov
sbb
mov
mov
add
and
xor
or
adc
cmpsl
mov
push
mov
negb
pop
sub
imul
dec
add
cltd
cmpl
sub
jb
loope
leave
jo
sbb
and
bound
in
shlb
lods
or
xor
dec
lea
subl
lret
fiaddl
lahf
lahf
mov
sbb
xchg
and
ret
pop
stc
loopne
insb
in
loope
xchg
dec
rorl
je
push
inc
xor
rorl
jbe
sub
jo
mov
xchg
stos
popa
sahf
dec
pusha
add
adc
pop
pop
iret
push
adc
push
cmpl
jg
mov
or
ret
xor
xor
lock
pop
imul
sub
and
vmulss
sbb
popf
jge
push
aas
ficoml
fsubr
cmp
add
mov
cmpl
test
lods
fisubs
jae
int
popa
inc
inc
dec
push
push
fwait
shll
imul
and
rcrb
lods
out
mov
inc
sub
adc
dec
lods
aam
mov
xor
push
add
call
push
adc
or
es
pop
cmp
bound
test
sahf
xor
push
mov
or
mov
xor
sbb
jmp
xchg
call
mov
fisubs
stos
out
mov
in
pop
mov
pop
movsl
test
cmp
loope
jge
cmc
subps
xchg
add
or
fs
or
cmc
addb
insl
push
in
inc
sbb
xor
ds
push
push
push
mov
and
and
push
cmpsb
lahf
cs
out
inc
sbb
pop
gs
insb
hlt
into
xor
loopne
call
inc
int3
popf
lods
jmp
inc
sbb
psubb
cmp
sbb
lock
mov
jne
push
enter
xchg
jne
insl
jl
dec
dec
or
push
push
dec
or
mov
lret
pop
icebp
out
cmp
sub
insl
pop
adc
out
lock
add
add
mov
clc
mov
iret
mov
stos
cmp
les
fdivrs
inc
loope
dec
mov
fimull
xchg
inc
jae
or
mov
jne
dec
push
cltd
icebp
or
sub
and
dec
and
js
add
or
pop
js
pushf
jo
mov
gs
or
and
je
sbb
mov
iret
jmp
out
push
mov
pushf
pop
push
push
mov
aad
jg
pop
arpl
fwait
xchg
movsb
mov
stc
fwait
arpl
mov
cwtl
rclb
sbb
xor
mov
cltd
mov
mov
pop
adc
pop
fisubrs
cmp
push
mov
pop
jb
pop
test
xchg
insb
mov
daa
add
stos
push
sbbl
fiadds
outsb
sub
addr16
push
mov
push
inc
je
mov
ror
imul
out
adc
lods
in
lret
pop
icebp
imul
push
loop
mov
mov
cmp
pop
mov
fwait
lea
imul
ret
xchg
das
repnz
pop
mov
leave
pop
mov
jo
xchg
jns
pusha
mov
jmp
or
xorl
inc
xlat
gs
inc
dec
out
jmp
fstpt
jmp
jb
sub
push
mov
push
in
aad
scas
pop
xor
in
cwtl
stc
pop
push
inc
js
jno
jp
push
xor
xorb
and
pop
adc
sbb
or
outsl
sub
pop
addr16
aaa
cmp
lcall
fdivl
sbb
push
jae
fnstenv
ljmp
push
xchg
arpl
add
pop
xor
mov
mov
sub
pop
loope
jl
out
jg
scas
ss
sbb
adc
cmp
sahf
and
or
mov
daa
push
adc
jle
ss
sbb
loope
jbe
icebp
stos
iret
arpl
outsl
fdivr
jp
iret
cltd
jo
jnp
test
cmp
scas
lods
dec
lret
push
push
mov
push
pop
nop
or
push
and
fdivp
dec
pusha
cs
cmc
clc
jb
jecxz
movsb
lret
mulb
jle
mov
rol
imul
dec
dec
hlt
jge
mov
lcall
and
in
mov
pusha
or
push
lea
movsl
fstl
fnstsw
inc
xchg
fwait
jns
test
idivb
imul
sbbb
and
push
repz
stos
cmpsb
sub
xlat
in
into
out
aad
in
cmp
in
out
call
fidivrl
inc
push
mov
movswl
mov
shr
outsb
cltd
ljmp
faddl
sub
sub
je
jmp
cmpsb
sbb
ja
and
je
leave
fldl
xchg
fimull
mov
scas
filds
mov
fnstsw
cld
mov
and
inc
lcall
push
sbb
divb
pop
repz
mov
or
mov
sub
pop
dec
fxch
ret
fnstenv
repnz
lock
sub
ds
mov
pop
dec
loope
rclb
lret
cmpsl
push
push
pushf
pop
cld
adc
push
jmp
mov
shll
push
stc
ds
add
mov
insl
bound
sub
xor
sub
xchg
or
jb
xchg
repz
mov
iret
mov
add
lock
adc
add
outsb
sahf
inc
inc
dec
jb
pusha
xchg
pop
pop
push
mov
push
or
repnz
out
dec
fldcw
test
leave
mov
rorl
xor
out
andl
daa
xor
mov
sbb
insl
sbb
movsl
mov
dec
push
adc
lods
out
adc
xor
pop
stos
rolb
mov
test
xchg
jns
sub
rorb
push
push
aas
xchg
rep
movsl
xchg
outsb
pop
mov
cmc
or
inc
cmc
jb
pop
jnp
mov
xchg
arpl
loopne
pop
add
cmp
adc
outsb
enter
push
call
cltd
int
in
xchg
sbb
insl
andl
lods
fadd
inc
mov
jb
add
sbb
gs
js
sbb
pop
inc
ja
testl
add
pop
mov
and
ret
sti
push
or
adc
dec
push
push
and
dec
repnz
in
cs
lods
adcl
fstl
stos
in
sti
pop
fidivrs
je
push
movsl
dec
cmpsl
push
fisubs
or
mov
xchg
ss
xor
lea
and
jle
inc
sub
sub
push
arpl
jno
in
adc
jo
xchg
mov
adc
in
dec
aas
fwait
or
or
or
adc
push
or
dec
flds
addb
mov
push
jns
jmp
repnz
and
dec
aam
cld
lods
add
enter
ja
icebp
dec
ljmp
insb
adc
push
push
leave
ret
inc
push
fwait
dec
js
and
adc
dec
pop
jns
data16
scas
lds
ret
sahf
xorb
rclb
sbb
and
test
into
ja
push
test
daa
sarb
rcr
je
orb
movsl
jbe
pop
mov
lods
add
shlb
pop
xlat
xchg
int
les
daa
and
mul
nop
enter
les
mov
fs
pop
jp
sbb
mov
cmc
nop
jp
icebp
ficompl
cld
sbb
mov
push
mov
dec
cmp
imulb
pop
add
xor
dec
dec
lret
mov
adc
lcall
das
mov
inc
ficompl
outsl
push
xchg
sub
mov
fnstenv
cmp
xchg
scas
fs
sti
je
jmp
push
inc
xor
adc
and
jp
test
mov
fists
inc
addr16
dec
mov
leave
jmp
je
movsb
adcl
mov
lret
sub
and
mov
fstpt
cmp
mov
fidivl
xlat
outsl
pop
lea
rcll
aam
sahf
ja
fistl
mov
call
lock
bound
icebp
lods
mov
outsb
mov
jae
pop
fwait
lret
inc
daa
lea
std
add
pextrw
cmp
mov
jp
js
stos
mov
and
dec
enter
mov
cmp
test
jns
or
icebp
pop
lret
xor
leave
sub
mov
jno
mov
pop
adc
add
fs
out
sub
lahf
mov
mov
andl
mov
sub
movsb
fildl
mov
stos
cmpsb
icebp
mov
add
aaa
jb
les
cmpsb
add
jnp
add
movsb
jne
pop
sub
push
sahf
dec
movsl
mov
xor
dec
jae
lods
adc
icebp
adc
cmp
stos
pop
hlt
mov
stos
es
incl
scas
popf
sbb
add
aaa
call
push
stc
lret
imulb
mov
inc
dec
lcall
adc
test
outsb
jmp
lds
or
sbb
je
aas
icebp
mov
mov
inc
jmp
lock
orl
mov
mov
push
sub
xchg
stos
dec
push
sti
test
jbe
mov
and
repz
and
jmp
xchg
push
xor
push
dec
and
lahf
push
xchg
es
or
jge
mov
add
adc
push
in
inc
sbb
gs
repz
fwait
xor
lods
dec
mov
xor
test
sbb
mov
push
jle
test
fwait
out
inc
push
jbe
fsubrl
mov
push
insb
mov
ror
pop
mov
inc
into
out
lcall
jg
jmp
and
mov
pop
das
adc
xchg
dec
or
icebp
out
push
or
fidivrs
test
nop
fcoms
mov
negb
lret
mov
out
jge
add
dec
jg
imul
clc
add
mov
je
mov
and
xchg
cwtl
insl
int
sti
or
xchg
jecxz
das
shrl
xor
inc
push
movsb
insl
clc
sbb
jge
push
mov
loopne
loope
fdivs
push
push
stos
mov
dec
pop
adc
test
ds
popf
adc
andl
xor
mov
daa
cmp
adc
xor
hlt
mov
mov
aad
bnd
inc
movsl
bound
xor
stos
enter
sub
or
xchg
jae
gs
lret
or
xchg
jg
inc
xchg
out
andb
adc
or
push
push
popf
xchg
outsl
mov
adc
xchg
xchg
scas
test
je
insl
test
lds
fmuls
and
into
rorl
sbb
sbb
or
in
jnp
inc
jg
jae
nop
mov
cmp
mov
jb
add
out
jmp
push
ljmp
daa
lret
rorb
in
xor
dec
sub
lds
mov
or
mov
test
pop
lock
loopne
pop
sub
push
sbb
fldcw
jo
lods
inc
xchg
sub
cld
push
cmp
dec
mov
xchg
pop
adc
or
popf
repz
jg
repnz
pop
mov
fcmovb
inc
cld
bound
xor
popf
mov
aas
sub
lods
idivl
jl
popf
les
test
std
jns
cmc
sbb
outsb
rcl
dec
xor
jecxz
rol
xor
mov
mov
inc
pop
and
scas
dec
aaa
inc
out
sti
lock
push
scas
hlt
sahf
sbb
iret
mov
lods
jecxz
sahf
in
cmc
xor
pusha
adc
lds
imul
lods
cmp
push
scas
mov
loop
xchg
pop
ljmp
xchg
enter
aas
adc
out
cltd
jbe
push
fnstcw
shrl
rorb
sbb
xor
scas
notb
sti
adc
push
inc
fadd
clc
sbb
or
pop
sti
cmp
stos
out
enter
xor
mov
jbe
fcmovbe
and
insb
cs
adc
divb
loop
jg
les
stc
sahf
ret
jp
adc
arpl
cmp
lahf
sbb
adc
push
inc
cmp
or
sbb
ret
push
pop
and
pop
test
xchg
push
mov
in
push
ss
cld
sbb
add
or
data16
push
vmovntps
dec
fcmovne
fstl
and
jno
stos
add
add
mov
mov
mov
repnz
inc
in
loop
inc
lods
test
xor
push
and
push
loope
shr
cld
cmp
nop
enter
xor
mov
mov
js
push
fldenv
stc
mov
dec
pop
loopne
arpl
les
rcrb
pop
adc
stos
ljmp
jne
push
ljmp
lock
push
pop
sub
pop
gs
rorl
xchg
dec
or
sub
out
adc
movsl
clc
jb
xchg
insb
and
lahf
mov
mulb
push
out
inc
adc
pop
in
outsb
les
or
sbb
or
jp
or
xchg
fsubrp
jmp
dec
sbb
leave
sbb
ljmp
loop
mov
test
dec
add
out
or
inc
xor
fistpl
jbe
test
xchg
aad
xor
mov
lds
cmp
hlt
pop
add
mov
pop
pop
movb
cltd
ret
enter
xor
scas
adc
mov
ret
xchg
mov
mov
cmp
pop
cmpb
xchg
jbe
cs
mov
or
pushf
in
jnp
add
lods
inc
sub
add
push
sti
and
or
mov
add
shll
push
mov
test
mov
push
stc
ljmp
ds
sbb
xchg
push
or
das
jecxz
repnz
or
lods
pop
lods
js
dec
and
pop
sbb
mov
mov
mov
leave
add
rcrl
pop
jb
jecxz
or
mov
add
or
pop
sbb
xchg
cmp
jne
pop
or
sub
insb
in
inc
fsts
dec
push
mov
mov
dec
and
cmp
mov
sub
sbb
sbb
decl
rcl
aad
test
sub
xchg
les
call
push
hlt
andb
dec
and
push
out
lcall
adc
jbe
lcall
shll
cld
cmp
das
subl
push
cmpsb
cmp
and
add
leave
sub
pop
ja
jl
leave
cmp
movsb
mov
popl
fisubl
rcrl
xchg
jg
repz
cltd
xor
vmovdqu
repnz
aam
push
fwait
push
out
pop
fldl
dec
mov
xchg
int
dec
dec
outsl
aam
inc
addr16
add
add
or
push
sbb
mov
nop
pop
stos
jg
pushf
fmul
cltd
push
shrl
or
leave
in
or
cltd
mov
imul
test
mov
ret
jno
inc
sub
enter
inc
fists
pop
sbb
inc
sbb
clc
pop
filds
outsb
jge
mov
inc
jg
mov
inc
lock
and
pop
mov
sub
inc
and
inc
pop
xor
or
jle
notb
jle
xchg
and
jecxz
dec
mov
in
sbb
add
sub
xor
or
scas
mov
movsb
lret
jbe
movsb
xor
shlb
mov
jnp
sub
lcall
pop
add
xchg
insb
inc
add
mov
aas
cmp
inc
inc
sti
sub
call
iret
sbb
fs
add
test
push
jns
mull
scas
pop
lahf
addr16
fldl
rcl
cmp
sbb
cmp
fidivl
cmp
or
iret
stos
dec
xchg
lahf
mov
pop
sbb
xor
dec
js
addb
cmp
outsl
mov
popf
dec
outsl
iret
jg
push
iret
cmp
or
data16
loopne
das
les
mov
rcl
repz
jle
das
das
call
cmc
inc
or
lods
movsb
mov
test
lods
mov
aad
cmp
pusha
lea
cli
in
xchg
adc
stc
jmp
sbb
repnz
xchg
rorl
fistpll
hlt
sbb
shll
iret
xor
test
out
movsl
scas
test
xchg
xor
loope
int
mov
cld
fists
xchg
addb
fcoml
pop
mov
inc
sub
cmp
ss
decl
and
icebp
pop
aam
imul
jbe
pop
push
inc
sub
inc
test
fwait
mov
jge
divb
imul
add
lds
shll
ds
loop
sub
add
icebp
dec
aam
rcrb
shlb
test
jl
fnstenv
sti
xor
pop
push
and
shll
mov
incl
lock
shlb
aam
hlt
sub
xchg
imull
push
popf
or
jbe
dec
mov
fldcw
jge
and
xor
inc
push
jne
sbb
mov
xchg
test
popa
int3
ss
aad
pop
mov
add
jne
jnp
sbb
cmpsl
mov
lds
test
arpl
daa
mov
fcompl
movsb
or
cwtl
lods
mov
shrb
shr
js
sbb
flds
mov
push
mov
adc
ror
pusha
leave
pop
xchg
daa
lret
lret
mov
loopne
dec
inc
sti
add
cltd
in
cmp
aad
dec
lods
cmp
test
pusha
push
imul
jno
and
lret
fsubrl
xchg
test
daa
int3
clc
push
jns
mov
jg
and
dec
inc
push
xchg
fdivrl
push
push
bound
dec
push
in
inc
shl
or
ds
inc
adc
xchg
add
fdivrl
lcall
jae
pop
aas
xchg
mov
call
cltd
iret
mov
sbb
out
xor
out
xchg
cmp
dec
scas
jnp
js
fists
std
cld
test
movzbl
mov
dec
iret
xchg
icebp
es
xchg
cmc
sub
jns
sbb
ficoms
sti
jmp
push
add
das
mov
daa
loop
aad
sbb
adc
mov
test
lods
push
nop
out
cld
sbb
push
in
test
sbb
rol
mov
fildl
jl
cmp
inc
shll
in
cmp
sbb
pop
int3
inc
enter
scas
and
xor
mov
cmp
cmp
fsubl
data16
ss
call
lret
rolb
adc
xor
push
fsub
push
lods
pop
test
aas
jns
push
andl
jge
gs
xor
sub
push
lahf
pop
push
or
arpl
shlb
shll
fistps
inc
sbb
imul
adc
in
sub
sbb
addr16
stos
xchg
daa
imul
push
insb
test
lret
fwait
js
aad
shr
shll
into
bound
mov
mov
out
sbb
push
push
and
mov
rcl
cltd
push
inc
test
lods
outsb
js
adc
std
insb
jmp
jae
inc
ret
jmp
and
stc
lock
pusha
es
jle
test
mov
or
inc
out
cltd
xor
jle
loop
fidivl
stos
sahf
hlt
xor
add
decb
fildl
sti
enter
out
jbe
insb
push
pop
stc
sahf
jns
sbb
call
dec
fs
adc
add
fsubrp
fmull
mov
push
and
push
cmc
add
mov
scas
add
sub
lods
xchg
enter
mov
mov
inc
movsl
sub
sar
xchg
cs
adc
fbld
inc
lret
cltd
mov
insl
pop
int
lock
leave
ret
mov
das
addl
das
clc
dec
clc
or
sub
add
or
dec
addb
xor
push
decl
in
adc
push
mov
and
or
jo
lds
call
cli
js
mov
out
mov
lods
dec
scas
test
loope
inc
stos
gs
out
push
add
add
loopne
in
out
add
jne
push
out
xor
out
xchg
xor
push
or
mov
cmpsb
pop
int3
jnp
push
jbe
adc
ds
mov
inc
jle
sbb
jno
adc
sbb
sbb
aas
mov
mov
push
or
xor
xchg
js
fisttpll
ss
push
test
mov
add
or
inc
or
mov
sub
add
inc
dec
lods
adc
cwtl
pusha
sub
fucomi
inc
xchg
sub
and
orb
add
lods
lods
ss
mov
xor
xor
mov
jno
call
sbb
inc
repz
cld
mov
loopne
fisubrl
mov
lds
es
push
js
fwait
push
adc
pushf
and
imul
scas
jne
pop
push
xchg
out
pop
pusha
xchg
jl
adc
popf
jb
cmovg
pop
push
mov
mov
pop
scas
push
xchg
sub
jg
mov
jl
ret
lea
clc
shl
and
cmp
push
add
nop
cmp
mov
pop
mov
pop
jmp
cmp
in
incb
sbb
pop
fimull
ret
push
adc
push
fldpi
xchg
and
push
lret
mov
cmp
ss
and
icebp
test
mov
adc
cmpsb
mov
jecxz
fidivl
push
popa
outsb
pop
add
cs
pop
imul
dec
xchg
lods
or
fwait
xchg
mov
xor
mov
test
and
scas
ret
and
stos
add
cmp
sbb
fcompl
hlt
mov
and
add
scas
outsl
and
xor
inc
test
adc
mov
mov
lds
imul
scas
adc
xor
push
push
mov
iret
adc
bound
xor
subl
rcr
xor
arpl
push
mov
int
and
and
daa
xlat
mov
shlb
imul
insb
imul
outsb
outsb
bound
mov
fninit
xlat
xchg
faddl
add
lods
cli
insb
or
dec
gs
jb
and
dec
jecxz
clc
loopne
dec
inc
push
test
jmp
stos
xor
pusha
pop
loop
pop
xor
je
filds
fcomi
cmc
leave
inc
ror
jno
pop
imul
call
inc
mov
clc
sbb
rcrb
addr16
add
sbb
cmpsl
sbb
scas
jmp
and
bound
mov
xchg
xor
ljmp
push
mov
test
xchg
mov
xor
xchg
pusha
inc
mov
fbld
sarb
inc
out
mov
jae
sub
inc
loop
pop
xchg
test
out
mov
dec
rcrb
mov
aam
dec
push
pop
sbb
lock
mov
pop
testl
adc
xor
inc
roll
push
outsl
fs
adc
dec
sbb
mov
imul
mov
iret
jo
jl
ljmp
mov
mov
mov
sbbl
cwtl
cld
mov
xor
mov
je
jnp
push
sbb
cmp
loopne
mov
movsb
cmpsb
insl
pop
xchg
test
ja
imul
adc
sbb
xchg
scas
pusha
or
mov
cmpsl
aad
cmpsb
mov
dec
xlat
cmp
sub
and
psubw
jp
pop
lahf
xor
loop
add
jge
mov
cmp
cli
mov
test
pop
cli
add
push
mov
loopne
jg
xor
stos
dec
add
xchg
jne
mov
xchg
fmul
enter
cmpsl
xchg
icebp
filds
les
iret
cmp
add
fmuls
cmpsl
pusha
into
aam
leave
fwait
push
stc
inc
stc
jo
rolb
lahf
in
xor
sub
push
cld
js
sbb
je
lret
dec
push
and
jnp
adc
insl
mov
push
andb
mov
fdiv
fs
inc
xor
sub
jbe
mov
mov
lock
popf
mov
mov
xor
es
loopne
push
push
pop
fdivrs
push
hlt
addr16
jae
js
push
cmp
dec
insb
es
mov
adc
xchg
ljmp
push
add
push
sahf
fcmovu
cmc
ret
int
and
nop
sub
leave
das
jne
pop
ret
adc
rolb
xchg
and
sbb
mov
out
mov
test
fidivs
cmpb
sbb
pusha
xchg
sub
pop
pop
pop
sub
enter
popf
inc
test
cmp
mov
xchg
test
inc
or
xor
imull
sbb
shrb
cmc
jnp
xlat
cs
xchg
xlat
lds
imul
gs
ret
addr16
push
xor
js
fbstp
dec
js
cwtl
jae
ss
jo
je
dec
pop
ret
fwait
adc
mov
xchg
mov
and
add
das
mov
push
cmp
lret
jo
pop
cld
aaa
dec
in
cmc
push
sub
addr16
xchg
ja
mov
outsl
push
clc
addr16
add
xor
jl
fdivp
sub
xor
cltd
adc
inc
idivb
orl
pop
lcall
pop
fdiv
clc
pop
ss
iret
jge
mov
mov
dec
mov
cmp
cmp
xlat
mov
add
fimuls
adc
jle
pop
push
inc
cmp
ret
into
fisubl
movsl
mov
xchg
cmp
adc
jae
shll
cwtl
lods
sub
dec
mov
test
ret
sahf
fidivs
shrb
fstpt
or
ljmp
mov
fildll
add
mov
jnp
adc
mov
in
shl
data16
or
lock
pushf
pusha
push
imul
test
ss
loop
pop
repz
pop
and
pop
das
ret
inc
adc
test
lret
in
mov
dec
mov
cmc
lahf
orl
push
xchg
jbe
jb
imulb
jmp
orb
in
fwait
adcb
xchg
cmpsl
inc
into
or
mov
push
in
pop
stos
ljmp
inc
add
jp
adc
divl
mov
les
xchg
pop
sub
push
mov
sub
xchg
cld
stc
jae
in
stc
mov
xchg
repnz
jge
and
out
sbb
pusha
inc
pop
adc
sbb
sbb
push
call
call
push
test
jmp
and
adc
xchg
pushl
movsb
mov
push
xor
je
pusha
movsb
stc
cmpsb
xor
xchg
mov
xlat
lahf
pop
jnp
pusha
lods
or
rclb
push
rol
push
clc
and
mov
jb
sbb
cltd
sub
scas
gs
cltd
xchg
shr
adc
jg
enter
mov
pop
or
dec
shll
xchg
sarl
pop
mov
icebp
add
imul
add
icebp
pop
or
test
mov
cmp
rclb
dec
out
orl
mov
cmc
ds
dec
xchg
add
mov
popf
cs
je
xor
mov
ret
sbb
pop
or
notb
mov
scas
sbb
bound
pop
mov
cmp
orb
imul
or
xor
mov
shrl
xchg
leave
jns
and
fsts
dec
sarb
repnz
or
xchg
shll
push
out
adc
mov
into
pop
dec
nop
movsb
jecxz
xor
das
pushf
push
mov
xchg
jb
lret
pop
xchg
shlb
and
push
lcall
and
mov
sbb
pop
mov
mov
loop
lahf
inc
sahf
pop
pop
mov
nop
add
sbb
popa
adc
adc
jb
jle
push
call
pop
std
push
jb
arpl
aam
fnstsw
mov
clc
adc
push
lods
adc
fbstp
addr16
pushf
mov
daa
cmp
int
mov
in
inc
pop
aad
jno
pop
lods
mov
in
mov
mov
pusha
jp
out
int
arpl
rcll
jle
int
imul
ss
pop
xchg
jb
pop
cmp
add
cmp
flds
push
xor
push
adc
stos
cmp
xchg
pop
aaa
dec
pop
hlt
aaa
sbbb
fcomps
or
pop
nop
jno
fcmovnu
sbb
in
mov
lret
rclb
jle
xchg
popf
push
fs
pop
fs
out
rorb
sub
adc
addr16
les
add
inc
add
bound
adc
or
push
pop
pop
adc
fisubrl
push
or
mov
setae
mov
int3
es
inc
shl
inc
inc
mov
push
cmp
jecxz
mov
scas
add
mov
pop
ror
in
inc
pcmpgtb
cs
jg
adcl
lcall
es
stos
inc
jl
xor
lods
add
ja
push
bound
jg
sbb
daa
mov
jmp
push
add
push
std
mov
mov
mov
dec
jge
ret
jns
xor
fs
push
lods
lahf
push
popf
sbb
rcrl
cmp
sub
sub
adc
sbb
stc
pop
sub
pop
and
pop
mov
dec
negl
push
and
imul
cmp
xor
inc
pop
cmpsl
imul
fwait
push
push
bound
stc
fidivrl
jno
popf
test
sbb
mov
jp
fdivrs
insl
fldt
outsb
sbb
push
jb
jae
xor
cwtl
mov
xchg
dec
sbb
jmp
ja
loopne
lds
pop
int
movsl
or
jns
adc
pop
mov
fcmovu
push
pop
scas
and
ss
mov
pop
test
and
je
stos
repz
mov
xchg
out
int3
xchg
cltd
lods
pop
ss
xchg
dec
push
test
insb
xlat
leave
out
xchg
dec
add
pop
stos
lds
stos
idivb
push
adc
fucomi
pushf
xor
out
pop
mov
push
cmc
ret
popa
jle
repnz
cmp
push
inc
fcmove
icebp
or
sti
pusha
je
stos
inc
xchg
mov
or
xor
sub
add
rcrl
cmp
cmpsl
mov
in
dec
mov
dec
cmp
xchg
adc
mov
inc
push
mov
stc
in
aad
or
jge
sub
addr16
ret
insb
xchg
fimull
mov
push
idivb
or
movsb
icebp
scas
jl
push
mov
in
xchg
ret
aad
sub
movsl
shll
shll
clc
mov
pop
shl
aad
mov
add
dec
add
mov
sahf
imul
lods
mov
loope
mov
inc
lea
and
outsb
jg
fcompl
mov
inc
fisubs
xor
rclb
push
hlt
aad
mov
sub
push
pop
int3
cwtl
decb
sti
inc
xchg
mov
or
aaa
cmp
call
jno
dec
jg
icebp
push
sbb
call
mov
iret
inc
movsb
sbb
push
mov
dec
mov
cmpl
inc
insb
shrb
cmc
outsb
mov
shlb
outsb
ja
cmpsb
cmpsl
add
jb
mov
and
adc
aad
dec
aad
icebp
jmp
sti
nop
ds
sarl
mov
out
daa
jmp
fsubr
sbb
cmp
xor
fnstsw
in
lcall
pushf
mov
sub
sub
leave
clc
movsb
sub
or
add
pop
fnsave
sbb
add
push
vpsrad
xchg
mov
mov
and
cmpsl
dec
pop
mov
cwtl
pop
call
test
pushf
pushf
in
in
fists
dec
xchg
push
inc
mov
in
mov
xchg
rcrb
pop
push
cwtl
test
fs
cmp
fisttpll
das
pop
sbb
loope
pop
movsl
mov
cmp
scas
fs
rolb
fs
rorl
sub
fsubl
mov
in
push
push
push
dec
hlt
es
jl
lods
push
and
xor
scas
lret
xor
push
or
jp
and
mov
jmp
scas
js
pop
mov
into
out
icebp
jp
adc
and
enter
inc
push
add
daa
xor
ja
aam
jno
push
mov
inc
aam
scas
fdivr
xchg
push
outsl
les
xor
inc
dec
and
pop
outsl
sbb
mov
sbb
cmp
jmp
dec
pushl
nopl
xor
dec
push
frstor
mov
pusha
fxch
jg
inc
neg
cs
add
jmp
stos
mov
les
iret
jae
jle
es
add
mov
mov
leave
lods
mov
and
push
int3
movsl
out
cmp
mov
stos
jbe
int3
mov
shlb
movsl
sub
jae
jnp
push
xlat
cmp
mov
add
lock
cli
outsb
jno
in
mov
in
jb,pt
sub
icebp
fucom
fistpll
movsl
mov
clc
popf
data16
stos
xchg
movsl
cmc
jmp
pop
lods
es
mov
mov
imul
repnz
mov
sbb
pushf
sub
mov
clc
inc
sub
test
int3
stos
jl
jne
add
scas
mov
mov
and
jecxz
or
cli
xchg
daa
scas
pop
fcomps
outsl
inc
aam
pop
in
add
jo
nop
in
dec
pop
cwtl
xchg
dec
jmp
imul
xchg
xor
push
and
cmp
lahf
js
xlat
add
sbb
fisttps
xchg
inc
sbb
and
insl
sbb
push
repz
mov
imul
xor
mov
ljmp
jno
out
xchg
cmp
and
push
out
fisttps
dec
dec
jne
cmp
or
mov
call
jnp
rcrl
push
push
popf
inc
cli
dec
adc
pop
lods
lcall
cli
cmp
and
pop
mov
mov
and
pop
daa
test
pushf
addr16
sbb
pop
xor
in
push
push
mov
jb
cmp
fsubrs
jb
xchg
add
insb
lods
mov
dec
fsubrs
xchg
and
adc
or
push
push
ja
and
es
jge
pop
hlt
pop
xchg
xchg
fiaddl
adc
leave
rcr
push
mov
dec
dec
out
fbld
inc
arpl
adc
jae
mov
mov
ficoml
adc
sub
cmc
sbb
subb
adc
std
mov
sub
pop
inc
pop
xor
divl
mov
push
jle
leave
inc
inc
add
rcrl
pop
cmc
mov
mov
test
jae
sub
lret
int
xchg
jbe
lret
stos
mov
cli
jb
shl
out
in
mov
aad
sbb
jb
push
fucom
mov
mov
aam
lret
ds
adc
ss
and
ljmp
push
aad
push
test
roll
mov
loop
test
cmp
adc
lea
enter
xor
stos
and
out
adc
adc
mov
inc
cmp
popf
arpl
jecxz
push
pop
fcomi
fisubl
inc
jno
mov
xor
push
cmp
sbb
mov
jb
shrl
lret
xorb
jl
jle
add
push
fs
inc
add
pop
pop
out
push
mov
jle
pushf
or
nop
test
xor
fimuls
inc
arpl
adc
push
push
mov
fs
les
mov
ret
push
push
movl
mov
mov
and
jb
mov
and
jnp
inc
lea
loope
jge
or
adc
pop
jo
nop
ret
test
jp
lahf
xor
shlb
jmp
fnstsw
lcall
popa
jge
add
pop
and
push
xor
sub
xchg
cmpb
stos
mov
sbb
jp
pushf
es
mov
loop
xchg
xor
jmp
nop
rorl
xlat
sbb
mov
push
aam
jl
pop
xor
nop
dec
decb
sub
test
mov
cmp
cli
xor
ret
ss
iret
push
sub
lods
xchg
cli
fs
test
mov
cmp
dec
ja
xchg
pushf
push
cli
jno
test
lahf
rclb
fucomp
sub
loop
mov
xlat
cmp
xchg
mov
push
shlb
add
lods
mov
mov
xor
shlb
xchg
xor
sbb
std
sbb
pushw
rcrb
dec
aas
cwtl
push
jnp
shrl
xor
adc
inc
dec
movsb
mov
dec
push
stos
xchg
cltd
mov
sbb
adc
cli
mov
jg
push
mov
jno
fisubrl
mov
dec
pop
jp
mov
push
loope
push
jnp
jecxz
pusha
arpl
cmpl
inc
dec
pop
fnstcw
js
aad
aas
loope
cli
and
push
mov
filds
scas
es
inc
xlat
xchg
sub
pop
lret
dec
ljmp
mov
cmp
add
int
int3
mov
mov
sub
daa
push
test
scas
pop
mov
insb
sbb
fcoms
and
stos
fnsave
cwtl
and
cld
mov
sbb
adc
cltd
rcll
sub
insb
xchg
inc
inc
rep
or
xor
xchg
push
orl
into
in
xor
and
pop
mov
inc
subl
into
scas
imul
xchg
jmp
pusha
in
ss
mov
sarb
test
cmp
dec
fs
inc
mov
mov
inc
cmp
jbe
or
push
pop
or
push
dec
cmc
jo
push
and
add
dec
jecxz
int
fildl
lret
dec
pushf
lea
sbb
cwtl
out
adc
cmp
mov
ljmp
cmp
je
js
sarb
jl
cmp
push
cwtl
lea
jae
mov
addr16
fxch
push
mov
mov
mov
xchg
in
fcmovnu
loope
addr16
and
je
cltd
rcrb
aaa
mov
hlt
mov
scas
in
pop
dec
xchg
sbb
fildl
pushf
mov
mov
pop
push
fimull
mov
jnp
inc
jg
jge
scas
pop
adc
ret
in
pop
pop
lret
shrb
sbb
inc
sbb
mov
lcall
fs
cmc
adc
lea
sarl
ds
mov
xor
xchg
jl
mov
push
stos
iret
test
fstl
cmp
xchg
inc
test
pop
push
xchg
xchg
shrl
inc
aas
cmpsb
fstps
mov
xchg
ret
daa
and
jmp
mov
dec
insb
xchg
rorl
out
fcoms
fwait
nop
add
shrl
mov
out
push
cwtl
lcall
test
shll
pop
pop
inc
dec
sub
dec
insl
jle
orl
loope
outsl
ret
test
jo
jne
pop
int
mov
adc
xlat
mov
in
mov
jne
jnp
sbb
push
mov
or
and
pop
sbb
jb
jnp
stc
mov
imul
jnp
jecxz
sbb
cmpsb
mulb
push
inc
pop
aas
imul
les
out
loop
sbb
push
pushf
sub
sbbb
adc
test
jne
dec
or
or
cli
xor
out
lods
int3
xor
mov
jae
xor
shr
cltd
mov
pusha
lahf
add
mov
mov
push
mov
mov
mov
out
mov
shlb
adc
fmuls
dec
inc
das
dec
je
imul
sbb
dec
pop
into
stos
and
mov
ja
dec
mov
lret
jb
test
loope
pusha
mov
pop
rcrb
popa
add
fs
sbb
divb
xchg
dec
sub
mov
cltd
rcl
mov
out
cmpsl
sub
prefetcht0
fwait
dec
jns
adc
pushf
scas
inc
xchg
fildll
mov
addl
in
pop
xorb
push
cmp
adc
adc
pop
clc
push
xor
pop
sbb
or
out
xlat
adc
cmp
sub
fcomip
stc
and
leave
jmp
mov
mov
xor
shll
jp
movsl
or
in
cmp
xor
and
loopne
fpatan
cwtl
xchg
push
xlat
adc
scas
enter
mov
clc
mulb
lcall
cmpsl
popa
push
rcrb
scas
adc
sarl
in
out
sbb
lods
in
mov
imul
pusha
aas
xor
test
mov
mov
in
mov
icebp
in
push
aas
imul
aaa
and
iret
fidivrs
mov
call
jp
cwtl
shlb
divl
das
dec
bound
push
add
iret
popf
test
or
push
aad
aas
fisubl
inc
or
push
jno
loop
scas
sub
mov
ret
inc
and
pop
fistps
dec
imul
jecxz
inc
mov
mov
or
xchg
hlt
or
nop
push
push
or
mov
int3
sub
or
xchg
mov
sub
sub
pop
cmp
mov
push
shlb
sub
scas
push
cmc
test
negl
and
testb
ss
sbb
mov
or
mov
movsb
shrl
aaa
inc
je
xchg
cmp
add
jmp
xor
adc
cmp
nop
iret
inc
aaa
inc
push
sbb
xchg
aas
adc
frstor
xor
test
test
stc
jmp
lock
pop
add
inc
cld
enter
cmp
push
iret
inc
movsb
lods
push
jecxz
scas
js
or
push
daa
xchg
xlat
dec
sub
inc
cmpsl
cwtl
arpl
xor
mov
add
pop
subb
adc
mov
xchg
or
loop
push
pop
push
add
sarl
outsb
aaa
push
xchg
adc
pop
dec
jae
pushf
sahf
out
adc
pop
in
cmp
jp
pop
fdivs
enter
icebp
pop
fstpl
inc
mov
addb
sbb
pop
pusha
clc
xor
push
mov
sub
jmp
xor
dec
jno
jle
cmp
mov
xor
sbb
out
push
and
jecxz
inc
adc
pop
inc
cmp
sub
cmpsb
popa
push
dec
xor
push
cld
test
mov
sahf
test
xor
cmp
fimuls
ja
test
lea
adc
inc
into
int
cmp
hlt
stos
dec
jae
pushf
xchg
or
push
jbe
xchg
call
test
jmp
iret
add
inc
cmp
ret
and
addr16
mov
fidivs
xor
push
lods
inc
rcll
pop
lea
loope
shll
test
imul
or
test
shlb
or
push
push
push
loop
jne
jnp
adc
lods
nop
pop
dec
loop
scas
movb
jp
fidivs
pop
jle
gs
push
or
not
mov
and
imulb
data16
adc
or
leave
mov
push
sbb
mov
cmc
ss
xor
idivl
fdivrs
jle
jmp
mov
mov
pop
shll
jecxz
cmpsb
fwait
cltd
push
iret
jno
cmpsl
sub
pop
rolb
int
pop
ds
xchg
data16
rcll
out
push
js
cltd
sub
sbb
dec
cmp
sahf
insb
ret
push
push
mov
lods
fmul
in
sub
xchg
jnp
and
inc
push
jnp
std
inc
pop
sbb
jno
mov
stos
mov
inc
test
and
dec
pop
sbbb
arpl
cwtl
fwait
adc
rclb
jp
mov
pushf
mov
jmp
lret
pop
xchg
outsl
or
inc
inc
inc
xlat
xor
cwtl
call
in
push
outsl
adc
inc
in
xor
push
mov
adc
mov
or
mov
les
xor
lcall
insl
aas
imul
data16
xor
or
xor
das
int
sbb
jb
out
adc
test
and
and
iret
sub
xor
or
jmp
add
insb
or
sbb
push
out
pop
cwtl
or
outsb
dec
mov
fwait
popf
xor
inc
lods
xchg
mov
shlb
xor
mov
sbb
dec
mov
mov
pop
jbe
loop
xor
mov
ss
mov
dec
loop
sbb
addr16
repz
xor
add
popf
out
pop
add
cmp
inc
fldcw
mov
dec
jb
into
xchg
out
outsl
pop
movsb
loope
or
out
or
fcoms
cltd
add
mov
repnz
pop
cmc
jae
mov
jnp
mov
jmp
mov
inc
cmp
xor
dec
jo
cmp
dec
xchg
je
mov
int3
stc
mov
adc
in
loopne
pop
add
pop
pop
ss
xor
inc
ljmp
dec
imul
stc
lret
sub
sbb
lret
pushw
xchg
stos
insb
lods
jg
dec
adc
or
imul
in
dec
in
std
and
frstor
mov
inc
pusha
push
sbbb
fiaddl
out
sbb
pop
cmp
lods
shll
jns
jo
mov
in
add
lods
lret
sub
aad
insb
mov
inc
mov
ret
imul
dec
leave
push
xchg
ficoms
add
cld
outsb
and
sahf
movb
or
jnp
lret
cld
cmp
arpl
mov
pop
inc
jmp
sarl
xor
adc
insb
popa
mov
push
aam
adc
fisubl
xchg
mov
and
adc
pop
imul
xor
add
gs
sbb
data16
push
leave
inc
loope
pop
orl
pop
adc
inc
mov
pushf
mov
xor
ja
in
shl
sub
inc
cvtps2pd
or
out
cmp
push
and
and
inc
outsl
cmc
jb
jno
pop
jmp
push
mov
push
mov
or
scas
ss
adc
xchg
clc
or
lds
pop
cmp
aaa
int3
jecxz
or
dec
sahf
mov
cmc
push
sub
cwtl
inc
popa
rcl
rorl
sti
cli
push
inc
test
popa
xorb
std
std
dec
xlat
data16
push
shlb
add
or
ret
ret
mov
dec
jecxz
int3
cld
inc
add
int3
or
jmp
test
sarb
repnz
pop
lock
vshufps
fsts
mov
push
add
pop
jmp
mov
jmp
sub
adc
cmp
inc
jge
jns
sarl
outsb
mov
inc
pop
pop
xstore-rng
cmpsl
inc
xor
sub
cld
sub
dec
dec
mov
jge
test
ljmp
mov
and
sti
jo
mov
cmpsl
inc
push
cmpsb
mov
push
jge
ret
mov
popf
shlb
mov
mov
mov
mov
sub
or
xor
lahf
mov
inc
jb
ss
iret
insb
ljmp
xchg
stos
out
and
in
das
jne
stos
jle
mov
test
cmp
jmp
mov
mov
inc
lahf
or
stos
push
test
mov
cmp
lret
sub
push
sbb
and
jne
pop
or
dec
mov
mov
push
xor
xchg
or
jne
mov
nop
mov
cmpb
fsin
sub
outsl
lea
jle
mov
adc
hlt
inc
dec
icebp
mov
jge
cld
adc
pop
fsub
pop
aad
sub
sub
pushf
push
push
push
psubb
fwait
mov
hlt
stc
push
ja
adc
rcrb
push
jno
stos
adc
and
pcmpeqd
mov
adc
mov
mov
shrb
loope
sub
cmpsl
das
cmp
in
sbb
inc
jmp
push
outsl
and
sbb
rcr
sbb
inc
shrb
mull
pcmpeqw
mov
out
rcl
sbb
xchg
cmp
adc
into
jo
into
test
cld
adc
pop
push
xchg
cmp
aaa
fmuls
dec
sub
mov
pop
fsubrl
pusha
ja
mov
outsl
in
inc
pushf
adc
je
sbb
push
popf
popa
int3
mov
cltd
dec
sub
inc
pop
jg
das
adc
sar
dec
add
adc
sahf
jae
in
js
fimuls
sub
xchg
pop
sbb
push
xchg
xchg
ror
test
out
inc
ret
xchg
sbb
lods
mov
cltd
ret
pop
cmpsb
xor
cmp
lcall
jne
out
xchg
clc
arpl
inc
mov
jmp
xchg
sti
cmp
in
lds
in
jl
cli
test
push
jmp
cwtl
mov
into
sbbl
dec
jne
scas
stos
cmpsb
sbb
ret
fidivrs
mov
add
bound
call
int
inc
arpl
imul
loop
pop
outsl
lock
imul
mov
addl
mov
adc
sub
push
test
pushf
pop
mov
mov
pop
int3
xor
es
cltd
dec
jo
fwait
repnz
aam
test
mov
call
jnp
aas
sbb
test
mov
repnz
decb
loopne
fsubrl
push
mov
popf
out
lea
or
mov
push
pop
push
mov
pop
outsb
pop
adc
jb
inc
adc
out
pop
lea
xchg
dec
jns
cmp
push
mov
aad
sbb
out
adc
dec
xor
mov
cs
dec
xor
add
mov
rcll
inc
sub
pop
cmp
mov
fsubrs
adc
mov
push
repz
aaa
ja
dec
xor
aaa
mov
push
xlat
lods
jge
sbb
mov
inc
mov
inc
out
je
stos
push
jb
cmp
fwait
stos
rep
in
mov
xchg
pop
jno
xchg
mov
jne
out
jno
ljmp
cltd
mov
cwtl
mov
xchg
in
add
fldcw
enter
test
out
popa
in
test
outsb
lahf
loopne
in
xor
aam
cmpsb
xchg
jb
es
shrl
mov
insb
mov
mov
addr16
jle
mov
insb
jne
jge
xor
or
sbb
in
movsl
xorl
xor
jno
insb
jo
mov
ret
rolb
bound
or
es
imul
jmp
cmp
push
adc
fs
dec
in
pop
jle
cmpsl
push
stos
loop
inc
adc
fiadds
adc
bound
mov
and
push
jns
adc
mov
insl
pusha
shlb
ja
jnp
sbb
pop
xor
je
jae
or
push
pusha
dec
sahf
mov
mov
jg
pop
movsl
mov
jmp
jl,pt
mov
add
jb
dec
mov
orb
in
xor
repnz
push
cmpsl
aam
push
add
je
dec
adc
push
sbb
push
nop
mov
sub
and
out
and
jbe
test
fcompl
testb
loope
push
jmp
jl
dec
fdivrl
add
fnsave
sbb
add
arpl
arpl
dec
mul
dec
jno
sub
sub
pop
stc
loope
add
inc
mov
pop
das
xchg
dec
pushl
sub
inc
xor
dec
loop
mov
jecxz
rorb
add
jae
pushf
cmpsl
ds
fld
cld
sahf
ljmp
enter
scas
stc
enter
jo
inc
cwtl
fs
data16
aas
cs
xor
lcall
inc
dec
movsb
push
sti
shl
jp
jno
or
push
cmp
enter
movsb
lods
pop
stc
cmp
sbb
and
das
aam
add
or
inc
ds
lods
inc
fwait
movsl
add
mov
das
push
loope
and
lea
and
inc
or
je
sbb
and
divl
jg
jle
mov
lret
push
mov
fiadds
inc
sub
fstpl
out
movsl
ret
icebp
adc
iret
or
outsb
dec
insl
fisubrl
pushf
lret
adc
mov
add
cwtl
ljmp
test
cltd
pop
aam
mov
or
frstor
insl
inc
lret
inc
inc
sub
dec
data16
cmc
push
adc
scas
mov
push
das
ss
add
lods
and
jecxz
mov
add
icebp
add
out
lock
mov
dec
dec
addb
xchg
mov
aaa
cli
mov
dec
mov
scas
or
das
inc
mov
push
shlb
sbb
in
repz
inc
sahf
push
cmpsl
movsl
rcrl
mov
dec
or
mov
pop
rcrb
fstl
pop
sti
dec
movl
dec
push
pop
mov
ret
inc
scas
outsb
movsl
es
mov
adc
addb
push
mov
or
push
pop
inc
and
iret
mov
outsl
lcall
cmp
pop
pop
cmp
nop
jmp
lods
dec
xchg
fwait
imul
pop
scas
jb
fxam
cmp
test
cmpb
cmp
ss
out
in
lahf
pushf
inc
inc
lock
nop
or
jge
lahf
fwait
movsb
fsubr
lret
dec
pop
xlat
out
popf
cld
pop
ljmp
xor
adc
push
cmp
ljmp
push
fisttps
jns
or
pop
mov
mov
push
pusha
test
mov
and
inc
daa
pop
int3
cmc
sub
xchg
hlt
inc
aam
or
into
subl
sbb
adc
or
pop
and
adc
cmp
test
sub
xchg
mov
aad
dec
aaa
js
int
cmp
sub
cltd
push
int
pop
fisubs
jp
mov
fcmovnu
cmp
add
mov
adc
mov
sti
cltd
mov
push
pop
adc
xchg
add
in
mov
dec
incb
in
jb
daa
mov
mov
daa
jecxz
lahf
dec
add
arpl
xor
call
push
mov
jae
push
lahf
rcll
mov
jne
inc
or
ljmp
outsb
xlat
xchg
jmp
popf
push
movsl
aaa
mov
dec
jg
lret
fwait
and
xor
pop
rol
rclb
int
inc
mov
sub
mov
outsb
xchg
movb
cmp
xlat
fistpl
pop
outsl
mov
mov
scas
mov
cmp
andl
xor
lret
fisubrs
xor
rorb
pusha
xlat
mov
mov
arpl
or
add
push
cmp
inc
inc
cmp
sub
repnz
sahf
mov
push
pop
fs
fdivrl
mov
mov
leave
or
cld
stos
out
cmp
jg
fmulp
sbb
int3
pop
sub
fwait
and
sbb
test
loop
ljmp
jo,pt
cli
in
inc
aaa
sbb
sahf
mov
sahf
mov
lock
loope
addr16
or
and
insb
fcompl
pop
cltd
out
push
adc
sub
std
jb
test
jns
jno
mov
adc
sub
es
adc
or
jecxz
scas
movsl
sbb
cmovl
movsb
add
adc
dec
cli
push
dec
int
call
aad
arpl
or
lret
jb
clc
xchg
jmp
adcb
repnz
sub
xor
jne
mov
mov
push
in
arpl
mov
icebp
add
std
movsl
dec
pop
sub
fwait
and
and
mov
scas
xchg
jne
lcall
push
pmullw
fs
mov
outsl
dec
and
es
aam
or
sub
rorb
sub
cmp
pop
mov
inc
push
sahf
or
push
dec
inc
into
add
fst
push
ret
enter
inc
inc
xchg
inc
rcll
dec
or
sbbb
loope
rol
mulb
or
mov
test
sbb
fptan
int
inc
pop
pusha
adc
call
inc
inc
mov
fisttpl
aad
addl
mov
mov
add
xchg
mov
or
mov
inc
mov
push
fiadds
adc
mov
mov
js
jl
insb
ret
fs
dec
or
cmp
arpl
add
inc
dec
sub
movsb
ljmp
pop
inc
mov
or
std
add
sahf
cmp
sub
mov
aas
and
and
sahf
inc
pop
mov
sbb
sub
subl
pop
add
outsl
and
stc
pop
outsl
fbld
jge
cmpsb
lcall
jae
sti
imul
push
lret
mov
call
mov
rcrb
sahf
popf
das
pop
aad
xor
mov
inc
cmpsb
xor
mov
bnd
and
xchg
xor
std
call
rcrl
out
inc
call
pop
and
lock
push
and
lds
lahf
out
inc
roll
jbe
xchg
inc
lret
add
xor
xor
xor
aas
addr16
pop
arpl
pop
icebp
sti
mov
sub
push
lahf
in
sbb
sarb
sbb
xchg
cmp
shll
aam
lock
cmp
and
mov
lds
icebp
movsl
jge
mov
push
js
and
icebp
add
dec
daa
lret
fisubrs
loopne
push
jmp
rcll
inc
jmp
test
hlt
dec
add
mov
jle
insb
lods
dec
mov
sbb
sub
xor
and
mov
lock
enter
xor
adc
xchg
jne
sbb
mov
pusha
shlb
aas
add
dec
ljmp
pop
mov
in
sbb
int3
xchg
and
aas
jo
call
push
aas
mov
or
sub
add
mov
adc
imul
add
sti
das
call
pop
sbb
jbe
xor
scas
lods
insb
mov
outsl
mov
mov
xchg
out
inc
add
cmp
mov
rol
stc
in
into
cltd
in
fwait
xor
in
add
sbb
pop
jl
sub
cs
add
sub
jecxz
xchg
pop
rcrb
out
adc
add
out
adc
int
xchg
lret
push
xor
mov
movb
stos
popf
and
inc
mov
mov
stos
sbb
mov
enter
add
dec
scas
pop
xchg
or
dec
outsl
push
jp
xchg
sbb
loope
jmp
sub
movsl
movsl
add
push
lahf
out
add
fisubrs
pop
cmpsl
jnp
sti
rcr
cmp
stos
std
adc
or
pop
cmp
cmc
or
mov
xchg
pop
stos
pop
push
ret
xor
lock
push
and
jecxz
hlt
enter
or
mov
int3
movsb
or
lahf
xchg
jbe
ret
out
negl
bound
jae
out
mov
ljmp
sbb
ljmp
sub
inc
ja
sub
mov
aad
lods
or
fwait
cli
fwait
es
dec
dec
repnz
add
mov
cmp
mov
cmp
or
sub
mov
xor
cli
fwait
jmp
imul
lock
es
scas
inc
aam
mov
sub
mov
call
inc
cmp
jne
scas
add
je
pop
jg
stc
or
sahf
lods
pop
adc
nop
aam
jg
inc
mov
js
shlb
ljmp
mov
or
xchg
jg
loop
add
lock
mov
xchg
rorb
xchg
adc
inc
mov
aas
ret
fidivrs
xor
sub
mov
das
dec
ss
movsl
mov
add
je
sti
add
or
pop
movsl
sub
gs
arpl
shlb
add
or
pop
loopne
sbb
fisubrs
hlt
nop
cmp
jl
pop
adc
and
xchg
lret
das
sahf
push
mov
fistpll
addl
push
loope
mov
mov
outsl
mov
hlt
cmp
jmp
lahf
push
jae
sub
insl
shl
pop
cmp
mov
pop
adc
icebp
mov
xchg
push
mov
sbb
in
inc
xor
repnz
ljmp
push
mov
pop
call
scas
pusha
ror
andb
jnp
clc
adc
mov
std
pop
jmp
insl
xor
or
mov
je
sub
out
arpl
mov
lret
sub
adcb
mov
je
xchg
and
test
int3
iret
mov
mov
movsb
outsl
arpl
push
sub
aam
movsb
inc
push
push
push
dec
out
jecxz
sub
movsb
les
push
in
mov
dec
icebp
sbbb
call
mov
bound
test
into
mov
lret
cli
dec
lods
test
xchg
sbb
cmp
fiadds
dec
stos
fs
push
add
ljmp
pop
ficoms
push
add
push
pop
out
jo
in
mov
add
leave
out
pop
dec
test
pop
lods
mov
or
gs
inc
xor
adc
mov
fidivl
enter
sub
icebp
adc
inc
in
fnstenv
insl
add
inc
outsb
jns
inc
addb
test
cmp
mov
cmpsb
xor
repz
cmpsb
xchg
mov
lods
mov
xor
add
ficomps
arpl
pop
shll
jg
sub
cld
mov
filds
nop
arpl
fistl
pop
cmp
mov
test
or
mov
dec
pushf
into
cmp
inc
xchg
lds
mov
and
cwtl
sub
xor
cmp
cwtl
sub
xor
inc
aad
hlt
and
sub
xchg
and
bnd
cmp
leave
mov
pop
inc
sahf
xchg
aam
pop
js
sbb
push
jp
cwtl
filds
pop
sti
packssdw
inc
fisubrl
jbe
mov
xlat
jge
xchg
jg
shr
inc
pmullw
mov
xlat
mov
and
pop
pop
mov
adc
add
fs
xchg
pop
jle
cltd
mov
adc
lret
push
add
push
mov
pop
fcomps
fcmovne
arpl
inc
ja
pop
mov
dec
inc
aaa
mov
mov
leave
mov
outsb
movsl
aaa
mov
jns
psllq
push
adc
leave
sbb
jo
ret
xchg
int
inc
stos
scas
xchg
movsl
cld
mov
sub
imul
enter
mov
adc
stos
inc
xchg
fisttps
or
into
cmpsb
rcr
mov
xchg
cmc
out
in
xchg
xor
aad
adc
jp
lods
lock
sub
in
inc
pop
jo
add
sbb
pop
add
icebp
fmul
xor
xchg
dec
cmp
mov
inc
cmc
inc
sub
inc
loop
std
mov
pop
xchg
outsl
mov
and
push
mov
outsb
je
call
loop
cli
cmp
shrb
sbb
jle
mov
sub
sub
dec
je
xchg
adc
sub
ja
movsb
or
xchg
xchg
out
cmpsl
xor
cmp
rcrb
dec
in
and
in
frstor
jae
lds
cmp
addr16
push
add
je
mov
push
lahf
loopne
xor
jmp
js
daa
cmp
pop
mov
aad
lret
or
mov
das
lret
std
mov
push
inc
je
xor
lahf
ffreep
out
cmpsl
push
mov
sub
mov
dec
and
repnz
mov
sub
push
shl
imul
lock
pop
out
out
jl
sarl
inc
dec
repnz
in
xchg
jecxz
fistps
inc
xor
sub
cmc
sbb
pop
aas
sub
nop
adc
mov
add
fcoml
and
cmpsl
pop
or
idivb
and
divb
mov
xchg
outsb
mov
cs
ficoml
ret
mov
xlat
inc
scas
cmp
aad
mov
xor
fidivl
cltd
lods
push
xchg
sar
cmp
lods
jp
jbe
cmp
cmc
fs
movsb
jno
jne
mov
dec
dec
lods
rorl
or
mov
push
imul
lods
ljmp
rorl
jmp
neg
or
mov
or
shrb
adc
imul
lods
movsb
sub
pop
idivb
lea
inc
jmp
add
das
test
cmpsl
in
jg
mov
xchg
int3
cs
div
mov
xor
push
dec
outsl
add
fnsetpm(287
fmuls
jbe
imul
hlt
xor
mov
sub
addb
fsubrs
fidivrs
call
in
add
jl
xchg
fiaddl
int
mov
jne
aad
sarb
daa
lcall
addl
xchg
std
mov
inc
fptan
int
aad
add
sub
inc
enter
in
pop
push
cmp
cli
lret
pop
cmp
pop
or
cmp
mov
lret
xchg
lods
add
jb
jge
aad
xchg
jae
mov
sub
adc
addr16
pop
push
aas
roll
repz
push
pushf
dec
xchg
fmull
pop
testl
icebp
mov
add
xchg
imul
jns
shll
inc
push
mov
add
hlt
add
mov
fisubrs
arpl
lods
add
pusha
cwtl
test
sub
filds
pop
and
popa
xchg
mov
xchg
cli
and
rclb
push
fdivrs
ss
scas
push
or
jge
mov
and
enter
and
cmpsb
pop
push
fisubrl
dec
out
stos
jns
jne
xor
adc
add
repz
mov
and
adc
push
ffree
imul
push
cmp
pop
push
or
jg
fnstsw
cmp
lret
and
mov
jnp
add
cmc
add
lods
pop
mov
nop
out
pop
in
push
cltd
out
int3
lods
xor
orl
cmp
pop
mull
jecxz
lea
dec
mov
mov
xor
inc
adcl
cmp
lret
sti
mov
aam
and
sbb
leave
inc
jp
mov
sahf
push
pop
in
push
lret
xchg
addr16
and
mov
and
aad
or
mov
xchg
je
sbb
dec
das
cs
mov
inc
aas
testl
lret
repnz
inc
xor
mov
xlat
ljmp
into
xchg
push
movl
sub
xchg
adc
loopne
inc
popf
pop
mov
addr16
inc
jo
jle
mov
jecxz
rolb
add
stos
das
sub
repz
mov
and
ret
ret
sbb
pop
clc
cmp
pop
sbb
adc
mov
bound
leave
in
xchg
pop
mov
test
sub
cmpsl
ret
xchg
adc
mov
cmp
mov
sbb
outsl
sub
ret
imul
mov
push
add
into
ffreep
fstpt
adc
ja
xor
sbb
pop
incl
adcb
fiadds
inc
ja
icebp
sub
pop
insb
pop
lods
dec
addr16
sahf
cmp
pop
push
jmp
fcmovu
inc
in
pop
cmpsb
add
sub
rcll
and
lea
lock
mov
sbb
xor
daa
cmp
ret
ds
dec
faddl
push
test
ds
and
test
cmpsl
test
pop
mov
cmp
stos
imul
inc
xchg
rcrb
mov
sbb
arpl
dec
jb
cld
outsb
adc
and
jl
pop
xchg
fcomps
inc
dec
ret
call
jb
nop
jae
ljmp
inc
sub
out
dec
fbld
loop
xor
mov
test
xor
incl
add
addb
iret
mov
and
push
jb
loop
push
call
and
cmc
inc
jo
push
add
or
adc
sbb
and
dec
filds
push
mov
scas
mov
test
or
push
lahf
das
pop
push
aaa
and
xchg
out
cmpsl
in
push
sbb
ret
sar
mov
dec
jl
sti
or
es
mov
add
mov
push
jecxz
sub
xchg
leave
xchg
jb
je
sbb
mov
push
mov
test
lods
punpckldq
or
dec
push
push
or
jb
sbb
add
add
sti
pop
sbb
mov
cmp
out
mov
xchg
fwait
dec
cmpl
ljmp
cld
data16
cwtl
cli
xor
mov
mov
nop
sub
xchg
hlt
or
out
dec
int
int
lahf
mov
mov
push
cltd
xchg
xchg
scas
jle
pop
imul
cmpsb
pop
andb
or
jo
iret
vandnps
pusha
adc
out
or
pop
and
adc
and
rcr
idivb
pop
sahf
loop
cmp
lahf
lods
loope
add
icebp
sub
in
add
das
cmp
out
pop
js
ds
mov
testl
mov
sub
add
sub
or
pop
out
popa
push
mov
inc
push
adc
or
stc
in
bnd
repz
repnz
push
ljmp
adc
outsl
add
ret
loope
mov
push
andb
xchg
sub
jg
mov
int
and
fstl
xlat
gs
jge
movb
insb
dec
in
pusha
add
pop
jne
jbe
mov
and
push
inc
out
or
aad
arpl
pusha
mov
popa
std
jmp
pop
xor
test
aas
xchg
mov
sub
scas
cmpsl
pop
adc
aad
dec
mulb
fimuls
or
push
or
rorl
mov
movsl
sub
mov
cmpsl
adc
push
sub
ja
mov
sub
mull
stos
xor
in
jnp
sub
in
scas
mov
pop
insl
mov
dec
testl
dec
inc
jge
mov
mov
shrl
jbe
sub
iret
sahf
andb
insl
cmp
mov
push
scas
cli
sti
xorl
add
arpl
or
sub
les
cmp
insb
fbld
int
lret
cmp
jb
mov
inc
add
ret
shll
push
scas
sub
add
add
mov
decb
lcall
cld
rcrl
jge
stos
push
sub
mul
mov
fucomp
inc
or
jb
or
jae
sub
loope
pop
mov
rcrb
out
sub
jle
insl
call
cltd
or
movsl
xor
mov
jl
mov
jmp
mov
sti
inc
jno
les
fwait
stc
mov
into
in
imul
mov
repnz
shrb
arpl
shrl
push
adc
adc
adc
add
fnstsw
dec
cltd
push
lods
mov
std
mov
xchg
inc
jmp
outsl
dec
mov
inc
push
in
or
jg,pn
lahf
test
adc
stos
pushf
cmp
loopne
aas
repnz
ja
xchg
clc
push
sbb
dec
cmp
mov
jg
mov
into
push
dec
xor
ret
pop
mov
ret
ss
dec
jge
cld
fcmovu
cmp
outsb
dec
mov
mov
fwait
lods
xlat
xor
jb
push
xchg
imul
out
and
or
inc
xor
sub
cmpl
inc
addr16
loopne
aas
jnp
fnstenv
mov
into
sti
inc
xchg
xor
push
shll
mov
pop
cmp
inc
cmp
lret
shl
pop
mov
adc
or
in
aam
negb
xchg
dec
cli
mov
shll
cs
xor
inc
mov
mov
pop
insl
test
inc
and
lock
mov
je
jno
jmp
pop
jp
out
and
sub
inc
add
clc
or
sti
mov
and
push
rclb
int
pop
xor
push
repz
cmpsl
repz
out
mov
jbe
das
mov
push
mov
stos
cwtl
loop
in
xor
mov
inc
cld
push
sahf
xor
jmp
rcl
test
lods
scas
or
sbb
in
xchg
rcrb
divb
lret
push
pop
int3
mull
les
mov
into
mov
call
pop
stc
mov
movsb
ret
hlt
ficoms
inc
daa
sub
jbe
sub
jp
sbb
and
dec
adc
mov
popf
sub
jbe
mov
pop
cmp
sub
hlt
sbb
sarb
movsl
mov
sbb
sub
lods
pop
test
jne
enter
cli
fstps
sti
ds
add
scas
cwtl
cs
push
cli
sub
sbb
adc
stos
popa
cmpsb
movsl
mov
cmpsb
and
loopne
and
test
sub
xchg
mov
push
cmp
lcall
pop
enter
movsb
adc
or
mov
cld
dec
adc
inc
loope
sbb
mov
push
in
sbb
lcall
arpl
loop
std
ret
fisubl
jne
loopne
cmc
es
mov
mov
rclb
insb
adc
push
mov
stc
ret
test
scas
pop
adc
dec
fsubrs
mov
aas
decl
rorb
loop
insb
aam
or
mov
adcl
fs
add
dec
ljmp
xor
rcll
std
pop
int3
push
xchg
addr16
arpl
add
cmp
lods
jnp
adc
dec
dec
out
ficoml
xor
and
cmp
and
aad
jne
xor
fldt
rcll
sbb
xor
cmpsl
inc
rorl
mov
das
and
hlt
stos
movsl
or
bound
sub
pop
cmpsw
jle
inc
jae
xchg
ret
enter
jne
ficomps
shrb
cmp
mov
lahf
arpl
insl
inc
ds
or
and
icebp
adc
test
pop
sub
inc
jg
inc
jmp
dec
pop
jle
and
data16
das
pop
pop
les
inc
aam
divl
je
test
jg
inc
aam
inc
mov
fdivr
inc
cmp
adc
in
cld
ret
xchg
pop
mov
test
into
insl
mov
sub
rcll
test
xchg
repnz
les
imul
pop
popa
lods
and
add
arpl
repnz
xor
jmp
cltd
mov
movsb
sbb
inc
push
jnp
push
mov
sbb
mov
cmp
cli
push
cmp
jl
push
push
ret
xlat
sarl
int3
mov
rcrb
test
ljmp
push
and
imul
add
jbe
lahf
in
xor
rclb
pop
cmpsl
mov
in
popa
shlb
mov
add
pop
mov
sbb
in
out
jnp
and
inc
movups
adc
pop
add
rorl
jno
sbb
jbe
cmp
sti
loope
xlat
orl
shlb
jne
mov
rcrl
je
add
xchg
mov
add
push
imul
jg
or
repz
pusha
jnp
popf
aas
cmp
or
enter
test
mov
and
insb
sub
adc
into
xlat
sarl
addr16
aas
test
adc
mov
pop
jp
and
pop
jne
cmc
repnz
jo
inc
add
aad
fld
dec
out
das
dec
push
popa
mov
out
cmpsl
jmp
push
cmpsl
clc
adc
cwtl
movsb
xlat
outsb
leave
and
sbb
daa
mov
jg
and
cmp
aad
jle
xchg
jle
imul
into
ret
js
mov
inc
cmpsl
mov
stos
xorb
dec
inc
adc
and
xor
dec
adc
les
rcll
cs
push
nop
loop
mov
and
cwtl
or
mov
inc
mov
pop
or
addr16
mov
fstpt
mov
cmp
dec
or
dec
ffree
out
lret
jno
out
mov
loopne
jg
into
xchg
jno
outsl
xor
push
shll
lds
push
pop
pop
andb
mov
cld
push
cmp
xchg
shrl
movsb
js
xchg
test
popa
inc
push
out
sbb
jg
pushf
aas
pop
and
xchg
adc
jle
jae
jmp
ljmp
or
mov
lods
add
test
inc
inc
pop
das
into
imul
imul
aam
clc
loop
xchg
leave
push
jnp
push
sub
push
push
test
add
scas
data16
lock
xor
or
jle
cmc
cmp
fistpll
imul
pushf
movsb
push
or
ja
and
in
cmpsb
or
add
mov
test
pusha
push
or
mov
fsts
aam
pop
mov
add
adc
mov
and
jbe
icebp
or
sbb
jg
test
leave
dec
add
je
in
loopne
loopne
pop
cmc
xor
call
mov
sbb
inc
ret
lret
push
jmp
arpl
pop
push
leave
jle
mov
loopne
mov
mov
xlat
cld
sub
jb
loopne
sbb
into
sbbl
push
sub
dec
sti
sub
adc
cmp
sub
aad
sub
stos
sbb
dec
ret
fbstp
or
pop
jp
addr16
shl
sbb
les
repz
mov
insb
or
rcrb
add
jg
mov
inc
sti
insl
dec
ror
ja
adc
mov
push
add
insb
sub
shlb
movsl
mov
out
mov
sub
cmpsb
xchg
loope
mov
and
cmpsl
and
mov
rorl
loop
lock
xor
mov
dec
sbb
adc
adc
test
cli
mov
icebp
inc
outsl
sarb
add
xor
aam
add
dec
sti
add
popf
test
cs
cli
dec
cmp
mov
mov
sbb
enter
test
pusha
data16
dec
xchg
xchg
cli
push
add
inc
out
mov
lds
js
popa
test
adc
in
mulb
sbb
push
or
push
sbb
dec
imul
push
xor
mov
mov
dec
add
xor
lcall
imul
add
jge
test
test
pop
jns
out
addr16
mov
stos
xor
cmpb
push
bound
in
jecxz
rorl
cwtl
movsl
dec
ret
lret
sahf
mov
xchg
cli
mov
insb
or
testb
popf
mov
pop
lahf
aad
dec
rcll
stos
pop
je
pop
inc
stos
pop
mov
mov
mov
jg
outsl
roll
or
sub
mov
test
inc
or
lea
lcall
mull
jbe
pop
stos
push
js
sub
jl
popf
repz
outsb
ret
ret
jnp
sti
test
xlat
sbb
mov
xchg
adc
adc
insb
lods
mov
lods
stos
push
in
push
mov
loopne
mov
int
repnz
popa
aam
cmp
es
mov
pop
sti
lods
inc
nop
inc
and
gs
pop
inc
jmp
stos
add
mov
cmp
in
xchg
jmp
jbe
hlt
pop
adc
push
je
mov
push
gs
fs
loopne
mulb
mov
pop
orb
add
sbb
xor
lock
shrl
lds
xorl
mov
push
or
mov
or
cmc
jmp
add
xchg
test
xchg
pop
inc
dec
sbb
repz
sbb
jae
ss
outsb
mov
dec
movsbl
sti
adc
fs
mov
pusha
mov
push
in
mov
gs
ja
and
pop
dec
repz
add
jmp
sub
aam
or
xchg
xor
scas
jbe
les
scas
orb
repz
adc
cmp
fimuls
in
lock
mov
inc
jl
mov
pop
shrb
out
pop
jnp
mov
imul
pushf
jbe
iret
sbb
xlat
jp
push
movsl
bound
cmpsb
lea
xor
jg
xchg
sbb
jl
cmp
fs
dec
aam
lock
out
push
mov
and
jb
fwait
int3
jge
insl
adc
mov
cs
mov
push
or
inc
or
testl
jnp
mov
jg
sub
outsb
push
jae
shlb
push
js
dec
xchg
pushf
loopne
ss
xchg
mov
test
add
lods
subb
jl
mov
pop
add
dec
sbb
scas
pop
jno
and
xchg
mov
ficoml
dec
cmp
xchg
pop
std
cmp
adc
adc
jle
jno
out
or
idivb
xchg
cmp
fcoml
popa
adc
dec
cmp
add
aaa
mov
lret
sbb
xchg
or
and
sti
adc
xlat
add
sti
cwtl
mov
insl
fsubrs
cmc
xchg
mov
mov
inc
jecxz
xchg
sbb
iret
cs
jl
sti
fldt
xchg
adc
in
xchg
stos
test
test
xchg
xchg
xchg
inc
into
mov
imul
out
in
mov
dec
jae
mov
out
test
sub
mov
push
push
mov
ljmp
mov
lods
mov
pop
out
pop
mov
xchg
add
mov
lock
sbb
sub
sbb
jmp
ds
xchg
and
ret
hlt
imul
out
cld
movsl
sbb
lods
jo
xchg
sub
rcl
rorl
add
ret
or
test
mov
in
xor
arpl
push
in
test
ret
mov
movsl
xlat
jb
in
mov
pop
rclb
jae
push
cmpsb
fs
int
movsl
insl
and
xchg
mov
mov
mov
or
pop
push
dec
jns
popf
mov
imul
ja
xor
lret
data16
and
push
jae
sbb
sub
pop
inc
cmp
subb
mov
jns
enter
int
mov
push
cmpsl
or
push
jne
aas
lahf
inc
sbb
in
loop
push
imull
ds
lea
insl
inc
nop
pop
je
mov
or
push
adc
pop
and
pushl
inc
sub
push
push
lcall
lahf
or
push
lret
and
add
add
sub
sti
and
bound
mov
aaa
dec
cmpsl
dec
or
pop
in
inc
fisubl
mov
fdivp
pop
or
sub
jbe
es
lock
loope
insb
lods
adc
sbb
cmpsb
stos
jne
flds
sub
sub
test
imul
divb
cmp
std
std
es
lcall
ror
out
ja
cmp
push
shr
jb
inc
mov
notb
adcl
in
les
pop
aad
rorb
fistpll
in
adc
push
fstpl
adc
cmc
pop
sarb
iret
mov
inc
std
movb
pop
push
cmp
mov
in
lea
arpl
mov
test
js
ror
jno
ds
mov
pop
fistpll
xor
lahf
cmpsl
push
or
xchg
pop
bound
jbe
pop
xchg
ror
imul
lock
dec
push
jl
cmp
popa
mov
dec
adc
inc
push
and
popa
lock
jnp
xor
shrb
nop
in
sahf
cltd
addr16
xchg
sbbb
inc
inc
xchg
xchg
add
bnd
adc
xchg
jno
add
cld
mov
ficompl
jnp
adc
pusha
cmp
out
inc
inc
or
popf
lcall
ja
mov
add
repnz
cs
in
into
mov
repnz
push
lcall
stos
xchg
or
mov
lret
mov
das
stos
xorl
pusha
sub
push
std
ret
xchg
insl
popf
add
push
iret
in
je
out
mov
lods
xor
or
ja
lods
mov
je
fistpl
jno
push
fistps
adc
add
das
out
int3
cltd
pop
and
xchg
push
insb
jae
xchg
jne
stos
bound
jg
lds
test
push
enter
subb
add
push
dec
int
add
pushf
inc
fldcw
lods
ficomps
loopne
cli
fcoms
fistl
repnz
mov
fnstcw
jbe
ret
pop
lods
push
xchg
adc
mov
inc
rolb
mov
mov
movsb
add
in
and
sahf
xchg
lea
test
popf
sub
pop
pop
lds
cs
cld
inc
ljmp
or
enter
mov
fnsave
sarl
pop
hlt
mov
add
adc
jle
sbb
sub
xchg
clc
cmp
and
pop
add
cs
push
ja
std
sti
jecxz
popa
mov
ss
dec
or
xor
adc
aaa
aas
mov
mov
rcrl
cmp
addl
mul
pop
aad
mov
mov
jg
popfw
scas
adc
dec
mov
imul
lods
jge
movsl
or
pop
ss
jmp
aaa
mov
pop
xchg
icebp
stos
sub
sahf
jecxz
push
cmp
cld
nop
xor
es
mov
test
add
mov
or
movsb
data16
call
lea
or
sti
or
add
repnz
pushf
and
sbbl
dec
enter
xor
popa
mov
leave
jne
push
insb
mov
clc
sbb
pusha
mov
sbb
sub
push
or
lds
fwait
cmpsb
push
dec
cmp
adc
out
rcrb
lods
inc
jecxz
dec
xchg
mov
or
lods
aam
test
or
mov
push
in
insl
mov
add
mov
mov
out
mov
xlat
aad
mov
clc
cli
xlat
push
pop
aaa
push
push
sub
dec
inc
lahf
cmp
jb
enter
inc
jge
adc
ret
or
popa
and
shll
add
sbb
pop
insl
in
hlt
sti
cmp
daa
aaa
mov
cmp
adc
call
mov
cmc
aaa
cwtl
addl
notb
inc
add
fs
fists
xchg
or
cmp
out
sub
fs
or
js
popa
push
fstps
sbb
jbe
or
pop
sar
and
movsl
xchg
lret
icebp
stos
pshufw
pop
jne
ljmp
aas
fcoml
scas
add
stos
test
sub
fsin
pop
push
cmpsb
cld
lcall
xor
fldenv
js
jns
jae
xchg
out
dec
or
adc
pop
mov
dec
ret
mov
and
or
mov
fdivrs
clc
add
mov
insl
add
mov
inc
mov
lahf
jl
cmp
cmpsb
sti
or
sbb
testl
adc
rcrl
mov
mov
or
shll
leave
adc
mov
inc
std
pop
pop
adc
jmp
jg
mov
jle
cmp
ja
xchg
jns
jge
cmp
ja
inc
lods
jne
iret
fcomip
sbb
ret
push
xor
adcb
mov
mov
es
out
ficompl
cmp
jns
leave
stos
cpuid
xor
in
es
or
mov
and
inc
dec
cltd
cmp
sub
imull
push
lods
push
outsl
dec
out
into
adc
xor
hlt
out
add
dec
add
xor
mov
mov
rcrb
icebp
and
dec
cmc
insl
xor
and
ret
imul
dec
insb
xchg
mov
insl
mov
mov
mov
scas
xchg
inc
jl
push
push
cmp
cmp
sbb
lds
mov
jp
cmp
enter
add
inc
push
adc
aas
or
cmp
add
in
repz
sbb
fstl
pop
jb
arpl
or
gs
xor
push
xor
push
xchg
mov
popa
cmc
ss
sbbb
push
gs
or
push
call
icebp
mov
pop
jmp
cwtl
stos
aas
push
pop
push
ficoms
and
dec
sub
mov
inc
or
loop
xchg
push
sub
or
xor
dec
les
xchg
lret
pop
in
sub
adc
leave
roll
mov
push
xor
mov
mov
cmp
mov
sub
mov
les
dec
dec
adc
add
daa
lods
inc
mov
mov
dec
pop
out
inc
dec
push
inc
lock
out
sahf
lods
mov
das
pop
imul
and
mov
pop
bound
in
fs
sbb
cmp
dec
dec
adc
movsl
or
ret
jp
sbb
lock
push
fsubrl
daa
mov
and
js
mov
xchg
add
xor
repnz
popf
mov
cmp
xor
add
lock
lea
mov
and
dec
fwait
push
mov
jb
mov
test
enter
xchg
lea
mov
or
ja
cmp
pop
jbe
clc
jne
iret
pop
mov
lea
jmp
std
push
out
imul
xor
outsl
cmpsl
pop
add
iret
fdivr
add
les
aad
or
sbb
into
lds
pop
jmp
cmp
cwtl
call
jne
xlat
jne
jns
loope
rcll
jmp
inc
sub
loope
mov
adc
push
mov
dec
xchg
int3
stc
add
out
inc
mov
bound
add
or
pop
nop
lea
jmp
sahf
xor
jp
in
mov
push
nop
imul
cli
push
ds
pop
inc
xor
icebp
jg
loop
insb
cltd
hlt
lcall
das
lds
int3
nop
cmp
xchg
fildl
pop
ss
inc
fildll
ret
pop
cmp
mov
imul
lret
jg
insb
mov
jl
in
outsb
cmp
add
mov
jns
nop
cwtl
lea
sti
dec
mov
imul
push
sbb
and
bound
push
fcmovb
cmp
dec
fwait
push
jecxz
sbb
xor
cmpsb
aad
xlat
sub
cmp
sar
mov
push
cmp
and
jns
popf
imul
xchg
cmp
sub
lcall
add
adc
sub
and
scas
mov
hlt
stc
sub
fidivl
jb
dec
or
adc
lods
mov
je
mov
int
dec
icebp
cwtl
scas
xchg
pop
jbe
inc
and
cmpsb
lcall
stos
cmp
aas
push
lcall
dec
aaa
mov
call
mov
and
push
and
test
sub
imul
add
pop
div
sbb
xchg
lods
xchg
cwtl
or
divl
xor
in
pop
icebp
sbb
add
jmp
or
adc
cld
adc
fwait
rcll
pop
push
mov
enter
insl
inc
bound
pop
or
mov
hlt
adc
ds
xchg
pushf
loopne
std
push
and
sub
pop
or
icebp
insb
cmp
shrb
or
or
inc
inc
mov
adc
jns
sub
mov
movsl
fcmovne
jle
xchg
pop
test
je
lcall
int
mov
cs
sub
mov
out
repz
rol
sarb
add
jle
jmp
into
fadds
in
add
ja
mov
mov
sub
sbb
imul
fmuls
pop
std
fsts
or
jl
mov
mov
mull
lret
out
lahf
lea
outsb
rcrb
adc
inc
sub
push
aam
jne
in
shrl
mov
pop
and
loop
cltd
addl
push
sbb
mov
test
insb
repz
addr16
xchg
xchg
scas
xor
std
adc
shll
push
aad
icebp
test
aaa
pop
movsb
dec
or
out
sbbb
popf
ror
scas
popf
push
mov
and
fwait
test
mov
mov
lcall
push
adc
and
or
cmp
or
inc
into
lret
lods
lret
adc
call
call
shll
rcrl
pop
xor
pop
mov
add
jp
cmp
push
cmpl
jns
imul
out
in
out
mov
mov
pop
out
fldcw
jecxz
faddl
iret
popf
inc
jecxz
xor
sbb
loop
mov
inc
aaa
jno
out
mov
dec
insl
movsb
stos
jg
or
imul
xchg
cmpsb
idivb
pop
cmova
repz
pop
xchg
sbb
gs
iret
mov
cmp
ret
and
pop
add
int3
hlt
fstl
arpl
push
jge
data16
es
xor
icebp
mov
bound
out
fisttps
add
pop
push
ds
subl
fstl
sub
cmpsl
sti
pop
sub
adc
stc
fistl
mov
fstps
scas
cmp
xchg
loope
push
xlat
push
and
mov
mov
inc
bound
inc
mov
aas
adc
pop
outsl
movl
ret
pusha
je
push
aad
ds
loop
gs
int
les
pop
push
ss
popf
mov
out
sbb
cmc
add
push
out
pop
fstpt
scas
or
aas
pop
xor
ljmp
fwait
out
jne
stc
mov
in
daa
add
pop
add
push
xorl
cwtl
fwait
fs
imulb
outsl
fcmovu
in
fcmovnu
jp
sbb
jo
test
jecxz
inc
xchg
in
out
mov
add
bound
repz
or
testb
or
cmp
jg
inc
push
jp
int
les
adc
mov
mov
in
popf
pop
stc
or
pop
add
cmp
in
cmp
pop
jmp
in
pop
in
push
int
js
and
outsb
cld
pop
xchg
lcall
in
or
icebp
daa
pop
stos
lret
stos
ret
sub
cwtl
sub
mov
fstps
jg
pop
out
pop
xchg
push
xchg
dec
iret
sarb
adc
inc
xor
stos
inc
mov
sbb
ffree
sub
sbb
or
idivl
xchg
stos
sub
fld
outsl
aad
jg
sbb
repnz
dec
cmp
mov
cmpsl
push
mov
xor
mov
or
mov
pop
xor
out
fdivrl
cmp
in
icebp
test
adc
push
and
add
cmc
aas
pop
je
xchg
xchg
out
add
pusha
xchg
jge
dec
cmp
jno
je
int3
and
and
loop
sub
repnz
push
loop
sbb
cmp
das
in
pop
out
mov
sbb
mov
jmp
jo
jmp
mov
inc
inc
cwtl
hlt
fdiv
or
xchg
aad
jmp
mov
in
lret
jns
nop
xchg
into
push
xor
repnz
mov
xor
push
sbb
xor
or
sub
imul
pushf
lods
fcmovu
stos
mov
cmpsb
push
dec
cld
fcomi
pop
int
cmp
or
push
cmp
inc
mov
cmp
jl
aaa
divb
pop
int3
or
dec
xchg
pop
inc
pushf
adc
jg
mov
mov
mov
into
aam
pop
ljmp
mov
pop
rcrl
or
ret
push
push
cli
jne
lahf
push
sti
and
mov
jmp
push
dec
push
pop
mov
jg
pop
push
mov
adc
shrb
and
push
cld
xchg
and
jg
icebp
sub
adc
movsb
mov
mov
fcmovne
dec
mov
cmp
cmp
dec
int3
fsubl
cmpsb
jp
sti
popf
sarl
mov
dec
mov
and
ds
xorb
xchg
ret
adc
pop
lock
sbb
pop
adc
bound
int3
sub
test
jns
int3
test
mov
cmc
mull
stos
data16
xchg
mov
jne
sub
movsl
jg
jo
mov
sub
mov
inc
lret
ret
mov
xchg
jb
adc
or
insb
daa
sbb
push
pop
xor
mov
xor
lods
or
cmc
outsb
aam
cli
jne
jle
dec
or
sub
bound
jecxz
imul
or
cmp
or
subl
push
enter
movsb
int
scas
rorl
push
pop
add
fdivrl
xchg
arpl
iret
ljmp
ja
outsb
ljmp
mov
jae
xchg
sbb
inc
arpl
mov
xchg
popa
jecxz
adc
mov
inc
test
out
leave
lods
js
dec
mov
xor
call
popa
mov
xchg
movsb
add
test
mov
je
jne
cwtl
mov
jbe
pop
notb
xchg
or
jbe
pop
mov
scas
xor
arpl
fldcw
out
lcall
push
pop
js
in
sbb
lcall
push
fs
stos
lds
pop
fildl
insl
xor
fs
jmp
in
and
or
jb
cmp
jne
aas
add
nop
jp
popf
dec
cmpsl
mov
rorb
mov
xrelease
jg
sar
sub
outsl
shll
and
iret
push
cmp
dec
out
test
and
add
mov
mov
pop
lock
dec
pop
scas
and
add
cmp
stc
lds
jecxz
mov
ds
mov
popa
pop
mov
or
fidivs
sbb
cmpsb
sbb
addl
sub
adcb
or
push
inc
inc
cmp
mov
mov
outsl
sbb
sub
xchg
clc
rorb
sbb
cmc
jp
lods
cmp
xor
add
aad
pop
js
dec
pusha
push
mov
xchg
pop
cmpl
gs
mov
adc
clc
or
add
imul
lret
xchg
mov
andl
adc
adc
cmpsb
push
xor
call
cmp
stos
loop
fs
or
pop
xor
jmp
aaa
push
lods
repz
push
xchg
xchg
xchg
bound
scas
sahf
inc
sbb
mov
loopne
mov
jle
inc
pop
sub
push
inc
mov
xchg
lret
or
sub
das
push
popa
adc
es
cs
stos
mov
xor
ljmp
jmp
mov
je
fidivrl
pop
cld
imul
push
orb
ljmp
outsl
push
xchg
push
pop
jg
fsubrs
mov
dec
pop
lret
mov
dec
popf
pop
sub
dec
push
push
nop
cli
sbb
xchg
sbb
push
out
mov
push
push
dec
jg
mov
xorl
rclb
push
cmp
dec
push
mov
subb
pop
push
stos
mov
mov
hlt
lods
jb
aad
sbb
mov
rcrb
fldcw
mulb
clc
cmp
mov
lods
xlat
sbb
arpl
xor
inc
mov
inc
jbe
dec
mov
mov
cwtl
cmp
cmp
shr
sbb
push
mov
movsb
add
in
adc
adc
add
xor
mov
mov
and
pop
xchg
sbb
leave
std
mov
or
pop
loope
push
or
adc
xchg
mov
jle
cli
insb
movb
cmp
outsb
inc
adc
insl
outsb
adc
daa
mov
xchg
jnp
dec
arpl
adc
jo
outsl
jecxz
fs
xor
mov
push
call
xchg
or
inc
jl
cmp
outsb
pop
sbb
adc
fwait
adc
adc
adc
popa
pushf
push
adc
mov
inc
lcall
lret
and
in
xor
aas
sub
fisubrl
test
push
lds
mov
ss
sti
dec
enter
mov
dec
and
cmp
mov
sub
repnz
jmp
xor
jle
fisubrl
xor
cmp
sbb
scas
mov
lahf
cmp
imul
fs
aad
insb
cmp
sub
lods
ret
dec
shll
mov
adc
push
pop
and
loop
fisubl
sub
int
hlt
sub
scas
mov
int3
stos
or
or
iret
ja
pop
lods
xchg
imul
fcoms
imul
or
test
mov
ljmp
push
cmpsl
testl
arpl
jle
push
fdivr
sahf
std
leave
cmp
cmp
popf
xlat
fwait
mov
push
pusha
mov
fcoms
push
add
clc
adc
fisttpl
stos
fimuls
push
add
dec
ss
pop
dec
jp
repnz
sub
sbb
add
xor
testb
push
test
xchg
dec
jmp
in
push
jae
fidivl
sub
rol
mov
fsubrs
enter
mov
jmp
subb
test
ret
and
cmp
loop
push
je
mov
pop
sbb
outsl
out
mov
mov
sbb
mov
std
test
sub
adc
mov
or
jns
sbb
and
aad
adc
jp
in
cmc
xor
lods
loope
scas
daa
es
insl
std
adc
jg
dec
fisttps
lret
push
cmpsb
lods
stc
aas
ret
mov
ljmp
sbb
int3
pop
pop
sbb
xor
sub
ss
add
jb
mov
add
sbb
or
fiadds
mov
cli
test
in
lea
mov
and
out
and
mov
fisttpl
jb
push
stos
dec
je
jno
and
jb
pop
add
fnstcw
mov
sub
fwait
mov
push
repz
shll
js
push
addr16
push
adcb
mov
xchg
stc
incl
test
cld
or
call
jge
mov
sbb
jmp
movsb
push
in
pusha
inc
fwait
mov
bound
pop
fwait
jne
sbbl
js
bound
jne
mov
pop
xor
int
mov
cmp
sub
xor
loope
fs
and
inc
push
mov
dec
mov
movsl
nop
negl
cmp
inc
pusha
mov
out
add
scas
ret
xor
cmp
xor
loopne
sbb
inc
mov
test
pop
sub
cmp
mov
mov
sbb
adc
and
sarl
stos
cwtl
cmp
pusha
push
jb
lret
cmc
stos
jge
add
cld
add
sbb
ret
and
pushfw
test
xchg
mov
repnz
mov
clc
dec
lds
int
andl
adc
mov
adc
jo
inc
push
lahf
inc
sbb
andl
repz
loop
jno
xor
jbe
push
out
test
popa
inc
cs
pop
stc
aaa
int
aas
fmul
loopne
push
aaa
ret
adc
add
mov
add
adc
test
mov
jno
mov
mov
xchg
ljmp
inc
or
mov
roll
outsl
or
push
cmc
mov
push
mov
push
leave
lret
notl
loope
inc
cmp
nop
cmp
cmp
sarl
inc
loopne
hlt
ret
push
jl
fsub
dec
xchg
cmpsl
jecxz
ret
or
shll
xchg
cmp
xchg
call
pop
xor
cmp
dec
lods
jmp
jg
fwait
cltd
mov
push
lods
stc
xchg
and
jl
cltd
jl
iret
mov
fimull
mov
push
and
mov
or
xchg
movsl
fstpt
xchg
or
mov
cwtl
inc
and
mov
push
push
cli
jmp
mov
insb
daa
dec
jge
mov
cmpsl
mov
insl
ds
xlat
test
inc
pop
cmpsl
int
nop
bsr
xchg
fsub
jmp
and
mov
sbb
and
dec
scas
ljmp
jnp
inc
data16
xor
pop
xchg
pop
andb
test
pop
lds
lds
jecxz
int
xor
mov
sbb
lret
scas
sub
push
inc
adc
jns
mov
mov
pushf
loop
xchg
mov
gs
sbb
stos
xor
inc
fwait
leave
adc
mov
outsb
and
into
and
mov
inc
lcall
pop
ds
jbe
les
mov
lcall
and
or
xor
sub
xor
inc
cmp
jp
sbb
lods
or
sbb
aaa
leave
movsb
push
push
mov
add
adc
mov
shll
movsl
out
xchg
ss
repz
sub
xor
adc
and
xor
xor
imul
js
xor
es
out
and
shll
hlt
xchg
jae
sbb
jl
sbb
insb
std
push
push
mov
cmc
cmp
inc
jmp
stc
scas
mov
push
push
pop
mov
ror
jns
push
and
into
jae
push
scas
jno
fisttpll
xor
or
mov
call
scas
pusha
cmp
fnstsw
mov
pop
pop
movsl
sub
test
inc
mov
push
sub
aas
outsb
out
jne
fistps
dec
pop
pop
lahf
fstpl
out
ljmp
jp
cld
in
dec
lods
jbe
mov
in
ss
or
loope
dec
pusha
pop
or
jg
xor
shr
inc
iret
inc
test
sbb
dec
repz
jne
jmp
loop,pn
icebp
xchg
jae
idivl
mov
cmp
enter
arpl
and
int
mov
loope
and
call
js
lea
mov
push
push
jge
cmpsb
out
jne
jno
ret
mov
popa
push
and
icebp
mov
repz
sub
scas
movsl
mov
test
test
add
mov
imul
in
scas
outsl
aas
adc
mov
subl
adc
sub
js
jmp
push
ds
fists
outsl
std
mov
adc
push
sbb
xchg
pop
imul
mov
dec
dec
mov
call
and
shrl
or
xchg
mov
mov
mov
in
add
cld
fidivrl
mov
ss
outsl
nop
imul
push
xchg
mov
mov
add
adc
jle
mov
jo
inc
xor
fiadds
xor
ffreep
add
jnp
inc
pusha
int
rol
sub
adc
ucomiss
sbb
fdivr
jp
sub
testb
xchg
xchg
sbb
cmp
popf
sub
aad
push
test
movsb
cmp
push
leave
stos
or
dec
jmp
mov
add
mov
hlt
mov
je
fidivrs
and
cmpsl
aas
test
jne
pop
mov
pop
daa
adc
inc
shll
adc
test
call
xor
fstpt
cmpsl
lahf
jg
in
gs
pop
les
add
inc
imul
fcom
imul
mov
lcall
fistpl
scas
cmpsb
bound
mov
movsb
call
push
dec
cmp
lods
dec
out
in
sbb
jmp
sbb
xor
jne
hlt
call
sbb
dec
fcoml
cmpsl
pushf
push
cmp
repnz
call
insl
lret
sub
adc
sbb
pop
cwtl
xor
fnstenv
js
cltd
rorb
and
subl
lret
icebp
and
xchg
adc
push
mov
push
gs
xlat
sub
xor
adc
js
xor
add
ret
xor
aad
sub
push
xchg
adc
stos
out
imul
jg
add
insb
add
inc
aaa
xor
push
xchg
test
adc
ud1
ljmp
movsl
out
in
ss
and
xchg
push
sbb
push
mov
push
shlb
push
inc
mov
movsb
mov
sub
xlat
cmp
call
shrb
cltd
mov
fs
fs
jnp
jle
jnp
sbb
rol
jmp
xchg
jae
jmp
inc
nop
jo
lea
xchg
ret
jo
sub
shrl
cmc
cld
jo
insb
lret
cmp
out
lcallw
mov
mov
subl
push
jbe
sub
fidivrs
inc
jp
fwait
sbb
in
add
sbb
or
mov
add
mov
inc
shlb
xor
or
test
mov
adc
mov
fmuls
jmp
adc
mulb
dec
stc
mov
popa
aad
aaa
push
xchg
mov
aas
scas
mov
cli
add
jnp
mov
cwtl
out
negl
out
pop
pop
movsb
in
xorb
xor
pop
iret
incl
jge
into
jnp
inc
shll
mov
fwait
jmp
push
int
add
sbb
sti
lods
jo
bound
adc
mov
sub
stos
cmp
je
ljmp
out
adc
hlt
dec
mov
inc
dec
cmpsl
mov
add
pop
dec
jae
pop
inc
or
in
dec
subb
je
adc
sub
popf
cmp
pop
cmp
loop
mov
cmp
xchg
mov
push
outsb
fdivs
jle
fdivrs
mov
rcr
sbb
sub
adc
scas
and
push
pop
lods
jne
popf
lods
out
jae
jle
sub
inc
mov
lret
insl
jl,pt
jmp
pop
call
lea
push
cmp
xor
cmp
scas
sub
push
mov
int3
mov
mov
lock
add
lods
jno
btr
inc
nop
fimuls
lret
and
inc
fstl
jle
test
push
xchg
push
cld
lret
mov
adc
sub
adc
add
sbb
fisttpll
mov
inc
rol
push
scas
cmpsb
mov
cmp
lock
jns
lret
bound
mov
pop
mov
mov
or
mov
or
outsb
dec
or
dec
dec
cmpsb
lods
scas
ret
cmpsl
mov
xchg
xlat
cmp
enter
stc
and
inc
dec
lock
negl
gs
ljmp
jmp
push
inc
cmp
out
cmpsb
ret
xor
cmpsb
lods
xchg
push
sub
add
rolb
into
out
mov
pop
push
xchg
inc
and
jle
sbb
test
out
call
ljmp
lcall
loopne
or
inc
pop
icebp
movsb
repnz
xor
loope
dec
cmp
pop
imul
ret
insl
lds
sub
sub
ret
cmpsb
mov
mov
jno
sarb
pop
rcrb
pop
in
in
jne
cmp
adc
mov
loop
and
or
pushf
push
mov
add
lret
xor
jp
enter
divb
mov
push
jo
add
push
ja
cmpsb
sub
mov
mov
sub
mov
arpl
adc
aad
mov
add
sbb
cmc
ret
inc
jl
repnz
insl
jg
sbb
jne
dec
xor
je
add
xor
das
sbb
mov
add
xor
cwtl
or
or
stos
inc
in
cmp
inc
out
sub
cwtl
cli
test
xor
in
popa
add
jle
ds
add
push
and
rcrl
xchg
lret
sahf
mov
mov
vmread
clc
inc
cmpsl
movsl
cli
mov
jae
xchg
xor
aaa
lret
cmc
mov
pop
and
in
aad
mov
and
test
addr16
mov
scas
jmp
out
jmp
dec
inc
mov
adc
and
popa
cwtl
sub
icebp
out
lea
jg
fistps
and
pop
dec
jnp
sarl
sub
dec
popf
mov
leave
jbe
jne
sub
shll
pushf
or
pop
mov
dec
jmp
in
jge
pop
pop
mov
sub
movsl
ljmp
and
xor
orl
sub
or
xchg
int3
andl
xor
mov
jecxz
adc
mov
cmp
inc
lods
sbb
add
sub
loop
adc
and
ljmp
movsl
pop
cmp
pop
and
xor
in
pop
cmp
inc
pop
ja
jb
and
mov
push
sbb
jg
mov
out
xchg
dec
jno
sbb
rclb
dec
and
aas
imulb
xorl
jl
aam
ss
jo
xchg
add
cltd
imul
pusha
ljmp
adc
jl
hlt
lds
roll
inc
pop
dec
aas
jb
ja
jno
push
sub
outsb
lods
push
adc
mov
push
dec
mov
adc
pop
shr
xorl
and
je
insb
sar
adc
lods
jo
loopne
and
pop
pusha
cmovnp
aaa
pop
fwait
ss
sbb
mov
in
inc
push
push
jp
xor
cmpsl
push
mov
jns
scas
add
aad
add
out
and
sbb
jmp
adc
mov
out
js
scas
mov
fnsave
mov
xchg
lds
mov
xor
or
and
xchg
jae
mov
mov
push
lcall
pop
aad
sub
xor
daa
cmpb
pushf
out
mov
pop
inc
cltd
ja
es
pop
test
fmulp
mov
adcb
dec
jle
cvttps2pi
pop
adc
popa
fdiv
add
in
pop
mov
cwtl
out
cmp
push
sahf
scas
insb
ret
mov
pop
or
scas
and
xchg
fdivr
stos
xor
scas
xor
adc
out
jg
aas
fsubrl
sub
xchg
jne
mov
jge
jb
cmp
in
inc
mov
adc
sub
inc
stos
fcoml
in
rclb
lahf
out
enter
mov
jmp
ss
push
xchg
jp
jg
lds
popa
pop
aad
xlat
add
out
orb
lcall
ds
add
xor
sarl
dec
pop
nop
popa
sbb
test
mov
pop
adc
jns
enter
and
push
mov
gs
orb
pop
call
dec
ret
int3
mov
push
movsb
xchg
pop
clc
addr16
ds
cmp
and
out
out
jg
scas
test
inc
mov
mov
int3
mov
lods
popf
je
xlat
pop
pop
pop
pop
mov
and
iret
out
mov
xchg
data16
sub
loop
shll
ret
shlb
pop
int3
popf
push
mov
fstps
cwtl
out
push
jbe
pop
mov
les
cltd
sbb
aas
jp
mov
add
fcmovnu
lods
jo
xor
es
js
mov
push
xchg
movsb
xchg
movsb
push
imul
cmp
lds
inc
adc
mov
mov
mov
xor
xchg
mov
mov
cli
push
sub
sti
into
mov
dec
cmp
jmp
push
add
xchg
cmp
dec
js
sub
incl
out
push
stos
cltd
add
push
divb
out
jnp
mov
xchg
dec
shll
test
scas
negl
fmuls
fsubl
mov
pop
xchg
xor
loope
lcall
call
mov
cmp
mov
leave
jbe
mov
mov
bound
repnz
pop
mov
push
adc
mov
das
sti
repnz
fwait
xor
sahf
int3
xchg
pop
shll
xlat
insl
pop
mov
lods
push
nop
push
fldl
adc
dec
dec
adc
push
out
jle
andl
lret
shll
add
in
lret
cs
or
test
enter
dec
push
test
mov
inc
in
cmp
iret
push
sbb
fdivrl
cwtl
fisubs
mov
cltd
pop
pop
adc
lret
pop
or
mov
mov
pop
dec
pop
cmp
lods
add
jnp
out
lret
mov
gs
ss
push
push
mov
sbb
adc
cmp
lds
inc
loop
imulb
sbbb
int3
jge
push
loope
ja
stos
insb
or
popa
or
jmp
add
fisubrl
testb
pushf
popa
cmc
sub
dec
pushf
loop
sbb
cmpsl
pop
and
inc
stos
sahf
mov
cmpsl
daa
pop
jle
mov
lea
or
out
dec
imul
fsubrl
mov
mov
je
inc
sub
jns
into
pop
loope
loope
std
push
repnz
push
push
or
dec
xchg
sub
gs
inc
arpl
jl
negl
mov
fcoms
rcll
jmp
roll
cmp
loop
xlat
push
xor
fdivs
add
fwait
mov
bound
sub
jmp
sub
sub
cmpl
std
xchg
mov
jbe
out
and
mov
test
enter
adc
cld
inc
scas
enter
xchg
dec
push
mov
data16
push
fdivr
adc
mov
dec
mov
orb
rcrl
pop
add
dec
pop
xor
xchg
jae
mov
jnp
insl
dec
pop
jp
push
imul
inc
xchg
mov
movl
adc
mov
sub
push
rclb
or
push
out
mov
inc
idivb
mov
inc
fs
dec
adc
or
in
mov
lods
add
adc
mov
ss
add
dec
jne
ror
cmp
sahf
cs
call
dec
dec
pop
mov
roll
out
mul
adc
into
add
hlt
test
jno
stc
mov
mov
out
sarl
inc
cltd
fs
mov
daa
cli
sbb
aad
mov
xchg
sbb
mov
sub
cli
dec
bound
aad
js
out
les
mov
ljmp
fsubrs
fstps
mov
add
sti
jle
js
call
jl,pn
cmp
jb
test
daa
lret
imul
xchg
pop
aaa
outsb
roll
xor
sbb
shl
popf
out
mov
xchg
mov
ret
aam
push
add
cs
sub
sbb
lcall
in
out
outsb
adc
inc
insl
sub
xchg
scas
inc
mov
out
push
les
sub
push
sahf
or
sbb
pop
sbbb
xor
xchg
arpl
adc
jne
mov
in
pusha
xchg
xchg
and
or
lods
xchg
mov
push
mov
dec
and
out
mov
lock
andl
pop
jmp
lcallw
pusha
adc
enter
jns
int
test
xor
xor
sahf
jl
dec
pusha
pop
mov
fistpl
icebp
fstl
inc
mov
inc
sbb
push
test
sub
jno
mov
andl
jmp
arpl
inc
sub
pusha
mov
sub
jmp
xchg
test
xchg
popa
aas
push
xchg
and
jge
inc
imul
mov
pushf
into
mov
jns
adc
icebp
xchg
mov
in
pop
xchg
xor
pop
push
pop
call
stc
sbb
pop
jmp
and
cmp
pop
imul
dec
adc
sbb
or
cwtl
mov
push
dec
inc
arpl
test
mov
pushf
int3
jge
jg
clc
cs
rolb
loope
pop
cmc
jo
outsb
shl
out
sub
scas
mov
dec
sbb
aas
movb
imul
stc
aaa
sbb
dec
lds
or
js
mov
or
mov
push
push
jne
cmp
fdivr
loop
lcallw
fdivs
lock
test
fstl
add
xor
ja
pop
das
fildll
imul
ljmp
adc
inc
test
sub
in
aas
sbb
xchg
into
test
sahf
dec
mov
lret
push
sub
test
push
cmp
rorl
mov
inc
divl
call
pop
add
pop
lret
pushf
nop
inc
dec
das
push
pop
mov
mov
lods
push
mov
mov
add
and
lret
and
sbb
push
sub
fldt
mov
addr16
pop
push
mov
out
repz
sbb
outsb
push
test
mov
jle
aaa
cmpsb
loope
mov
scas
push
sarl
jb
adc
mov
pop
negl
add
imul
xor
insl
loopne
repnz
shrl
pop
stos
fiadds
jo
inc
jnp
mov
sahf
xor
pop
popa
mov
push
inc
std
into
mov
cmpsb
add
and
add
sbb
addr16
add
repz
pop
sub
pop
cltd
stos
adc
inc
flds
decl
jle
or
xlat
nop
sti
jl
and
test
sahf
mov
fsubl
adc
push
push
mov
rcrl
fidivs
adcb
sti
adc
add
xor
clc
mov
dec
fdivrp
int3
xchg
sub
adc
jmp
ljmp
mov
mov
inc
mov
cmpsl
and
xadd
cmp
push
in
mov
aad
inc
pop
or
jbe
mov
push
stc
es
outsb
clc
lahf
shr
or
repnz
fs
call
movsl
pop
jo
jnp
and
js
mov
lods
sar
dec
cmpsl
jns
mov
push
adc
push
repnz
jbe
mov
jl
int3
sub
xor
inc
mov
repz
int3
subl
test
test
fwait
incl
push
mov
mov
fldl
push
imulb
push
aad
add
jbe
push
mov
test
push
imul
inc
and
cs
adc
inc
or
imul
icebp
insl
cmovl
mov
or
mov
jp
test
mov
aaa
push
loop
xchg
push
mov
pand
xchg
in
inc
lret
leave
pop
inc
scas
ret
sarl
add
and
in
idivl
arpl
jo
mov
mov
shlb
and
lcall
mov
loope
out
cmp
mov
imul
dec
lods
cmc
in
out
mov
mov
lret
cmc
mov
sbb
mov
out
imul
inc
pop
jmp
xchg
push
call
nop
fldt
adc
mov
aam
cmpsb
loopne
or
and
mov
cmpb
in
jecxz
gs
scas
push
lret
mov
or
ja
js
insl
imul
lods
push
jne,pn
ja
mov
adc
mov
fidivl
fimull
jno
cmpsl
js
inc
inc
mov
outsb
out
into
mov
sub
adc
push
outsb
and
insb
inc
subb
popa
sti
ljmp
notl
mov
or
cmp
sbb
rcl
inc
mov
pushf
mov
push
in
jo
fwait
das
into
cmpsb
enter
cmp
xor
push
inc
rcrl
adc
and
push
test
scas
nop
clc
inc
les
inc
mov
jno
outsl
pop
cltd
jge
mov
out
xchg
pop
rolb
test
cmp
push
push
inc
or
lea
xchg
iret
test
dec
xor
pop
lods
repnz
enter
adcl
dec
ret
mov
and
jae
imul
shl
sbb
push
data16
fnstsw
bound
or
push
mov
sub
shl
mov
lret
loopne
jg
sti
sbb
daa
pop
fsubl
jp
mov
pop
xor
mov
outsb
call
pop
add
xor
pop
mov
jnp
movsb
xchg
out
xchg
push
fistl
jg
xchg
ljmp
fdivrl
lahf
mov
jno
push
loopne
inc
adc
adc
add
and
andb
jg
mov
pop
xlat
fnstsw
xor
sub
mov
leave
add
mov
sub
enter
xor
mov
adc
sub
in
out
stos
and
pusha
lds
ficoml
mov
es
push
jecxz
inc
xchg
xor
in
cmp
mov
xor
sti
jnp
mov
mov
jmp
data16
movsb
bound
inc
xor
and
bound
sub
ds
sbb
fsts
inc
ljmp
es
or
and
cmpsl
and
xchg
mov
jb
sbb
push
and
dec
and
lods
pop
jecxz
push
sbbl
xchg
pop
or
push
mov
mov
pop
aaa
pop
fdivl
mov
push
inc
mov
mov
adc
jp
jb
add
mov
fwait
mull
jno
cmp
inc
inc
mov
popf
and
jnp
jne
js
push
pop
movsb
and
sub
xor
clc
pop
fstps
loop
pop
push
stos
xchg
cmp
push
mov
dec
hlt
or
and
add
enter
mov
sub
lahf
inc
cmp
lcall
pop
push
jge
mov
int3
movsl
fimuls
leave
adc
ja
inc
xor
bnd
cmp
mov
fucomip
pop
inc
adcb
cmc
add
push
push
rcl
xchg
jne
jno
mov
pop
js
jmp
fistpll
adc
sbb
dec
inc
add
push
cltd
inc
ret
loopne
xchg
dec
inc
xchg
rcll
lods
cmp
repz
aas
xchg
push
xor
aas
jns
mov
fcmovnb
clc
push
out
pop
pop
pop
pop
enter
dec
js
cmp
pop
add
adc
add
mov
loope
and
clc
mov
cwtl
test
fwait
jg
mov
clc
inc
ret
popa
xchg
jmp
push
sub
xor
sahf
scas
inc
cld
cld
adc
mov
xacquire
clc
sbb
aad
push
dec
mov
test
xchg
fwait
in
test
fwait
dec
aad
insl
movsl
leave
in
push
aas
nop
xchg
pusha
xrelease
mov
pusha
sbb
test
or
jmp
mov
mov
and
jge
xor
mov
fninit
push
fcoml
pop
push
sub
adc
rolb
and
sub
jne
push
ljmp
lods
loop
lods
push
out
push
pop
mov
sub
fs
jbe
xchg
mov
mov
push
repz
and
aad
cld
sub
leave
jmp
lock
mov
cmpsb
or
aaa
ja
xlat
jae
jno
mov
out
jg
or
xchg
push
fcoml
jo
xchg
je
push
data16
inc
push
or
aad
sub
sub
loopne
cmp
push
pushf
mov
cmc
in
lods
mov
mov
test
xlat
mov
out
cmp
push
add
mov
cltd
shlb
inc
cmc
add
xor
mov
and
sarb
loopne
ds
xchg
xchg
dec
scas
cmp
notb
xchg
dec
adc
fcoms
cmp
inc
subl
repz
mov
test
cmpsb
push
xchg
icebp
pop
xor
cmp
roll
loopne
cmc
ficomps
jne
mov
sbb
shlb
ss
je
cmp
xor
xchg
bound
xor
fidivrs
inc
lock
dec
call
insl
pop
fs
outsb
fistps
jno
cmp
inc
push
lahf
add
and
xchg
and
pop
adc
or
lret
sbb
pop
sbb
lcall
pop
mov
push
mov
push
aam
jne
push
gs
adc
pop
mov
dec
sbb
cmp
pop
cmp
xchg
inc
pop
inc
xchg
mov
xchg
xchg
add
loopne
pop
mov
inc
push
jmp
push
dec
xchg
fcom
cmc
inc
or
inc
out
sbb
loope
dec
lea
pop
mov
xchg
xor
fdivs
mov
call
sub
jecxz
in
test
mov
adc
call
rolb
insb
fdivrp
lods
negb
popa
pop
push
sbb
dec
jge
cmp
repz
popf
pop
sarb
mov
or
push
loop
xchg
jb
dec
data16
pop
mov
fisubrl
xchg
lds
shlb
mov
cmp
xchg
or
push
or
gs
dec
and
in
xchg
xchg
fwait
xchg
push
inc
mov
jae
inc
dec
jg
and
or
cmc
ficoml
and
push
jb
xchg
jl
jge
daa
movl
sub
packuswb
mov
dec
jno
inc
xor
ret
xchg
jo
iret
add
loopne
cmp
loopne
mov
mov
hlt
test
imul
popf
sbb
add
stos
out
mov
cwtl
ljmp
icebp
and
pop
test
mov
push
ret
popw
fcoms
and
rol
hlt
mov
sub
push
push
arpl
cld
lahf
cwtl
sbb
fmull
mull
lcall
insb
and
xchg
in
push
push
addr16
stc
repnz
dec
loop
inc
mov
imul
xchg
inc
add
push
orl
sub
lret
jmp
xchg
ljmp
in
cmp
lods
xor
fldl
or
cmp
adc
sahf
cmp
das
pop
mov
lcall
pop
lahf
mov
imul
sub
push
pop
inc
push
pop
mov
fnsave
and
addr16
sub
addr16
fcoml
and
push
cmpsb
jbe
or
in
rclb
pop
incb
mov
sbbl
rcll
dec
aas
pusha
fstpl
sub
call
popf
and
add
out
mov
xchg
pop
in
or
jbe
sbb
sub
notb
add
xor
fstpl
aaa
pop
dec
jo
pop
clc
aam
or
push
sbb
jnp
add
fdivrl
int
dec
outsl
in
insl
int3
cwtl
sub
cwtl
aad
push
dec
mov
cld
daa
add
inc
out
add
adc
or
movsb
and
push
int3
adc
xor
data16
push
out
adc
aad
xchg
sbb
int
jbe
fstpt
lods
jb
jno
lret
insb
in
pop
push
xchg
cmpsb
sbb
outsl
lods
popa
iret
test
push
loope
addr16
mov
es
cltd
or
dec
sub
jecxz
clc
jno
cld
sub
inc
push
int
std
xchg
test
lret
jp
xchg
imul
js
push
out
push
mov
lcall
lcall
dec
shl
dec
mov
fisubrl
dec
xchg
test
dec
arpl
add
cwtl
push
cmp
push
xchg
jecxz
mov
xchg
add
jno
dec
sub
ljmp
pop
adc
or
test
jmp
sbb
out
sub
adc
in
pop
repz
cmp
xchg
addr16
and
je
push
in
jle
insb
dec
addr16
or
hlt
mov
and
add
fcmovnu
sub
dec
mov
ret
lds
in
fists
ret
repnz
cltd
jne
sub
lods
mov
add
xchg
cld
add
mov
and
add
inc
mov
imul
pop
mov
or
ljmp
and
fbld
xorb
pop
sbb
aaa
and
xor
push
int3
fsubrs
mov
mov
push
add
inc
inc
sbb
test
js
aas
in
jnp
pop
xor
mov
pop
popf
inc
pop
add
imul
xorb
push
and
lcall
popa
fildl
and
int
dec
repnz
sbb
cmp
cmc
mov
pop
icebp
or
jo
das
les
lea
lret
jge
push
mov
jns
inc
mov
mov
mov
cmp
adc
xlat
shr
xor
enter
dec
repnz
mov
test
in
adcb
push
insb
sbb
add
mov
jns
jge
jp
lds
test
xchg
or
mov
and
aad
stos
xchg
lret
insb
sbb
dec
enter
pop
dec
xor
dec
jns
pop
lret
jo
gs
inc
and
push
ds
idiv
and
cmpb
pop
ss
sti
inc
outsb
test
mov
sub
jge
dec
ret
test
mov
cmp
xchg
pushf
jb
rol
pop
stos
fiadds
inc
jbe
cmpb
and
mov
cld
add
pop
mov
or
jb
xor
xor
test
push
inc
lods
xchg
out
sahf
lea
fs
insb
jecxz,pn
push
mov
xchg
mov
in
mov
lret
push
test
repnz
push
cmc
fwait
inc
ret
cltd
pop
stos
and
pop
mov
push
or
fwait
inc
idivl
lock
icebp
test
sahf
push
sub
mov
dec
lock
jne
cmp
inc
mov
cmpsb
mov
jg
call
shll
test
imulb
jmp
jp
decl
int3
data16
out
repz
movhps
call
cltd
or
test
push
mov
nop
jo
fsubr
add
into
or
out
pop
lods
nop
lock
test
mov
mov
jl
cmp
pop
jmp
lret
xchg
test
imul
mov
out
ss
imul
jge
das
xchg
mov
out
scas
pop
push
or
in
mov
test
cmpsb
pop
adc
dec
cwtl
pop
and
divb
jo
sbb
jge
les
and
mov
popa
mov
mov
and
pop
mov
rol
or
int3
dec
push
nop
inc
mov
mov
jne
loopne
and
jno
jg
lds
testl
sarb
stos
dec
pop
add
sbb
ljmp
sbb
cmpsl
adc
pop
dec
aad
push
or
sbb
jge
lcall
sub
popf
jl
addr16
and
pop
push
push
hlt
mov
ret
popf
xorl
pop
cmp
xor
js
das
jg
ret
out
inc
lods
addr16
ja
cmp
pushf
mov
aaa
dec
push
jae
adcl
or
decb
and
sbb
xor
add
push
add
dec
push
dec
jecxz
mov
scas
mov
cs
xchg
add
xchg
into
inc
loope
loop
int3
and
or
les
data16
insl
rcll
test
or
das
rcr
lds
lret
cs
xchg
sbb
pop
and
adc
inc
adc
xor
xor
fdivs
push
adc
pop
jne
lcall
xor
xor
hlt
ret
sbb
or
inc
lods
sbb
movsb
push
cmp
stc
push
dec
stos
sbb
adc
push
jno
push
imul
stos
cmp
popf
fcom
repnz
mov
popf
mov
daa
mov
je
mov
push
jno
and
mov
call
lds
or
dec
sub
dec
dec
popa
aad
add
cmpl
jp
sar
jg
in
mov
mov
jmp
das
pop
and
sti
pop
and
cmpsl
sbb
sub
or
push
icebp
xchg
and
in
sbb
std
mov
andl
movsb
jno
icebp
in
jg
daa
mov
jg
shlb
push
sub
enter
cltd
bswap
jbe
xor
mov
sbb
cmpsb
or
sbb
sbb
icebp
mov
dec
mov
dec
xchg
xor
icebp
movsb
rcr
fimuls
mov
push
shll
sub
jmp
enter
push
xor
cmp
sbb
bound
or
outsl
popf
popa
fiadds
je
push
add
push
jge
cmp
inc
repnz
clc
mov
jecxz
inc
push
jge
jg
mov
ret
jo
hlt
mov
push
clc
mov
inc
jae
cmp
xor
sbb
sbb
fcompl
mov
and
es
dec
leave
mov
dec
adc
mov
mov
orl
push
loop
rcrl
aad
out
inc
fcomps
or
scas
movsl
shll
insb
daa
pop
lds
scas
mov
xlat
out
push
addb
mov
add
xchg
fs
jmp
or
data16
add
xchg
popa
mov
inc
rorb
test
and
enter
sbb
sub
les
stos
jmp
outsb
pop
vhaddps
add
jg
dec
cmp
enter
pop
jns
loop
out
pop
adc
pop
and
inc
sahf
dec
test
dec
add
pop
lret
lcall
lea
cld
inc
xor
mov
cmp
pop
test
insb
add
cmp
add
leave
adc
sub
jno
fistpl
je
add
mov
pusha
hlt
scas
inc
lcall
and
or
lret
lcall
pop
out
idivb
cmp
daa
cmp
ss
fdivr
out
push
adc
data16
pop
scas
and
arpl
icebp
sub
out
inc
lea
push
hlt
xchg
pop
push
push
arpl
std
out
dec
lock
into
adc
in
cltd
sub
add
xor
test
cmp
adc
mov
out
pop
ljmp
or
mov
sahf
scas
mov
cwtl
xlat
add
sub
adc
es
sbb
inc
insb
aas
dec
ds
dec
pop
inc
cmpsb
ljmp
arpl
adc
int3
test
cmp
xlat
add
xor
add
and
out
sbb
addr16
cmp
sbb
xchg
not
mov
jbe
jb
push
arpl
adc
rcrb
jge
cld
mov
xchg
loop
adc
lods
shll
dec
sbbb
mov
ret
sbb
test
mov
es
rclb
mov
or
in
sti
pop
mov
ds
mov
cld
out
xchg
lock
push
outsl
mov
shll
push
je
mov
or
and
cmc
call
mov
jge
cmp
pusha
ljmp
sbb
fiadds
rorl
in
mov
ret
outsb
aaa
ffree
mov
push
lock
std
xchg
loopne
push
bound
add
and
std
aad
mov
and
out
sti
sub
adc
fmull
bnd
pop
mov
xchg
addr16
xor
cs
xchg
mov
aad
popa
xchg
push
push
daa
je
gs
sbb
das
and
adc
xchg
dec
rolb
sbb
ds
sub
inc
dec
sarb
hlt
mov
popf
mov
loopne
std
push
or
push
mov
sbb
aas
jo
movsb
push
jge
scas
cli
cmc
mov
aas
das
popf
dec
sub
push
ss
shlb
or
adc
push
loopne
enter
outsb
inc
rcr
jle
and
dec
xchg
cmp
inc
pop
imul
dec
mov
xchg
push
lods
push
jbe
pop
data16
outsl
and
bound
push
dec
mov
loop
bound
xor
outsb
jnp
mov
rclb
xchg
outsb
xchg
pop
or
inc
lea
push
fdivrl
sti
jbe
mov
test
lret
clc
mov
or
fiaddl
dec
and
rcl
fsubl
xchg
andb
dec
cmp
lahf
and
out
fisttpl
mov
pop
repz
jl
and
roll
ja
xchg
ds
popf
je
jb
insb
mov
out
mov
stc
das
into
adc
inc
loope
out
sub
adc
mov
test
cmpsl
and
popf
dec
mov
dec
iret
add
pop
ret
scas
es
and
rcrb
icebp
bound
inc
lods
idivl
sub
icebp
pop
movsb
test
or
cltd
in
jbe
fists
sub
sub
aas
adc
jo
jge
stos
shlb
mov
inc
cmp
pop
inc
sub
push
into
xor
cltd
inc
or
addb
clc
cmp
pop
push
popf
or
inc
call
and
mov
dec
out
or
xchg
notb
flds
add
push
push
iret
xorb
out
xchg
dec
stos
adc
dec
sub
shlb
push
pop
popa
adc
stc
fldcw
nop
ljmp
add
or
xor
xchg
mov
push
cmp
and
xchg
aaa
xchg
mov
cmp
jne
add
testl
mov
mov
mov
jae
xchg
ds
imul
cmp
aam
sbb
inc
ret
mov
loop
imul
repz
pop
sarb
mov
test
adc
xor
arpl
lcall
push
inc
sbb
scas
mov
lret
test
xor
pop
or
popf
das
inc
je
push
stc
and
outsl
jmp
pop
sbb
addr16
mov
mov
test
roll
push
adc
mov
cmp
cwtl
lahf
add
repz
xor
mov
inc
and
xor
fildll
mov
movsl
push
cmp
lock
cmpsl
add
jne
sbb
lahf
ja
daa
pop
insb
pushf
roll
xor
sbb
bound
outsl
pop
sub
imul
test
sub
xchg
xchg
adc
aad
out
bnd
ret
mov
sbb
xchg
jbe
dec
lds
ljmp
je
aad
jge
inc
sub
int3
mov
scas
mov
lods
out
jmp
pop
xchg
test
movsl
xor
inc
andl
out
pop
inc
int
add
ja
jno
jnp
aaa
lret
xchg
mov
out
out
cmp
jno
sub
inc
sbb
sub
jne
int
xchg
fisubl
out
aaa
inc
paddw
out
add
xchg
lock
daa
into
outsl
es
lds
jl
xchg
pop
and
int3
cmp
cli
scas
adcb
mov
in
and
int3
mov
push
rcl
xor
fwait
jno
into
jnp
inc
mov
cmp
and
mov
test
sbbl
rcrb
inc
pop
in
out
in
mov
gs
lods
cli
mov
mov
mov
testl
add
cmpl
and
enter
cmp
adc
cmp
scas
mov
es
mov
ss
in
lahf
mov
shlb
dec
ljmp
jo
adc
ds
push
adc
fiadds
jne
iret
xchg
dec
jnp
rcrl
call
pop
hlt
call
jge
nop
mov
cmpsl
jmp
ret
jl
leave
mov
jg
mov
cs
aaa
mov
std
popa
cmp
fsubp
mov
in
sbb
ds
mov
mov
inc
fimull
test
jle
mov
push
push
inc
loope
push
xchg
cmpsl
jg
push
cs
pop
in
xchg
arpl
rcll
cmp
fdivl
cmp
movsb
mov
or
sbb
mov
ficomps
aad
dec
test
jb
push
sbb
push
sub
cmc
cmpsb
mov
in
and
jmp
pop
or
lds
push
mov
imul
inc
mov
jle
call
mov
pop
xchg
or
stos
or
mov
sbb
sbb
inc
add
inc
pop
inc
ja
xchg
dec
lods
mov
outsb
mov
add
js
stos
mov
insl
fdivrl
cltd
or
aad
inc
wbinvd
js
inc
xor
dec
ror
jge
fcompl
sub
lods
fs
daa
ss
xchg
loop
out
dec
pop
jecxz
repz
mov
add
cltd
fwait
add
loopne
add
stc
loopne
xchg
enter
xor
scas
mov
pop
ret
inc
dec
bound
rcrb
pop
cmp
inc
aad
fwait
pop
xor
inc
mov
movsb
jg
lods
dec
popf
lods
add
adc
fisubl
or
cmp
fabs
xor
cmpl
stos
mov
pusha
sbb
push
cmp
mov
jno
in
xorb
xchg
aad
fisttpll
popf
dec
push
pop
dec
sarb
mov
lds
pushf
add
ds
mov
aam
and
sbb
lods
test
xor
xchg
jp
jge
popf
xchg
roll
lea
hlt
xor
mov
outsl
mov
jp
lods
lds
xor
cli
cmp
iret
add
es
dec
add
push
and
cmp
mov
xor
sub
fcoms
testb
mov
lret
cmp
jle
and
out
mov
cmpl
sub
mov
jmp
jge
mov
data16
or
fnstcw
rcrb
add
ret
push
lcall
sbb
pop
pop
inc
bound
pop
mov
out
mov
sub
lds
aam
cmpsb
adc
pushf
pop
cld
inc
add
xchg
pop
inc
push
outsb
xchg
pop
pop
insl
mov
xchg
push
inc
jle
lds
cld
xor
inc
fs
xchg
nop
dec
ja
push
test
pop
stos
inc
and
addr16
movsl
xchg
mov
mov
pop
cmp
imul
add
and
pop
mov
fisubrs
mov
mov
push
mov
pushf
jb
sub
int3
mov
dec
push
test
popa
push
jae
or
pop
adc
xchg
leave
cmp
outsb
and
or
push
cmp
jno
mov
and
sti
jne
push
adc
lock
sbbl
cs
xor
stc
fwait
scas
lock
pop
fwait
jb
jnp
pop
mov
xorb
cwtl
pop
ficomps
int
jae
pop
cld
sub
and
pop
pop
int
fisttps
or
clc
jo
mov
fmull
or
mov
inc
movsb
or
mov
inc
mov
ret
in
cmp
sbb
js
or
push
add
mov
mov
lcall
fstl
push
repz
sub
repnz
pop
xor
pmulhuw
sub
mov
cmp
repz
xchg
mov
pop
cmpsl
inc
sbb
xchg
xchg
pop
or
into
pop
es
mov
stos
pop
jg
jmp
jnp
clc
fnstenv
sub
mov
add
jg
decb
sbb
mov
push
mov
push
mov
insb
xor
cwtl
lock
mov
and
and
rcll
sub
or
pop
dec
loop
push
xchg
push
push
or
cmpsl
enter
popa
pop
fnstenv
dec
jbe
or
loopne
mov
mov
test
pusha
mov
fstpt
pop
sbb
aas
mov
mov
push
mov
cld
mov
sarb
adc
cld
je
add
aas
add
and
jge
fbld
cmp
mov
jmp
iret
int
aaa
hlt
push
inc
imul
test
and
sub
sahf
xchg
pop
xchg
jle
cmpsb
push
xchg
cmp
dec
jnp
sarb
outsb
pop
mov
stos
and
rorl
shlb
sahf
outsb
cld
pop
cmp
loope
lods
jp
jg
hlt
loop
push
iret
loop
inc
mov
fcoms
sahf
jle
enter
jp
rolb
pushf
mov
pop
arpl
xor
rcrl
mov
sbb
test
xchg
test
and
negb
sti
mov
and
xchg
add
inc
test
outsl
adcb
mov
inc
inc
fildll
mov
pusha
cmp
insb
xchg
sub
add
mov
int3
cltd
cli
rorl
je
push
jne
fldt
lret
loope
sbb
pop
lock
hlt
pop
and
dec
fcmovbe
stos
scas
pop
mov
push
data16
mov
adc
stos
push
cmp
add
gs
lock
je
movsl
dec
outsl
rclb
pushf
cs
pop
add
lods
test
outsb
ret
int3
adc
lods
push
jl
pushf
inc
adc
mov
sti
subb
cmpb
mov
imul
inc
mov
int
nop
mov
xchg
test
stos
flds
andb
popf
xchg
outsb
pushf
fstl
xchg
cmp
test
jo
adc
push
sub
jge
push
mov
stos
stc
out
int
or
loope
jmp
into
sub
jle
add
je
and
call
cs
lret
inc
xchg
lods
mov
lods
sub
pusha
lea
push
xlat
arpl
pop
sub
insb
inc
jne
xor
pop
call
mov
mov
stos
cmp
cmc
lcall
inc
mov
int3
cmp
pop
xchg
dec
xorb
and
jl
aad
xchg
sarb
arpl
mov
lret
xchg
lret
jo
or
add
jge
lret
dec
aas
dec
add
push
imul
lahf
sar
lcall
mov
cmp
xchg
jb
adc
fwait
orb
js
inc
insl
dec
pop
into
sub
adc
rcl
xchg
jg
lea
add
mov
iret
divl
rorb
cmpb
sub
mov
rcrb
jns
mov
or
mov
sub
or
pusha
and
aas
addr16
pushw
mov
mov
pop
in
gs
jmp
add
xlat
and
dec
notl
add
arpl
dec
and
jb
sbb
sbbl
movsl
neg
xor
mov
lods
dec
jle
push
mov
out
leave
rcpps
cli
xchg
dec
fdivrp
movsl
inc
cmp
js
inc
xchg
pop
dec
mov
mov
inc
inc
mov
pusha
jne
cs
xchg
xchg
xchg
add
fildll
cwtl
or
inc
push
push
push
ljmp
add
in
xchg
mov
cmp
pusha
xor
mov
clc
adc
lret
mov
pop
cmpl
lods
les
js
xchg
or
inc
shrl
sub
dec
push
repz
sbb
pop
shll
dec
or
xchg
andps
cli
pop
mov
test
pop
cmp
push
push
pop
shll
add
cmc
mov
push
sahf
adc
adc
mov
push
mov
jle
or
in
and
les
daa
test
jnp
mov
into
rolb
daa
jmp
jecxz
jl
pop
xor
cmpsb
or
push
stc
arpl
icebp
xor
mov
xchg
cmp
rcrl
jns
popf
fstpt
stc
push
inc
push
add
xchg
addl
fimull
aam
xor
jae
sbb
dec
jl
mov
mov
sub
fisubs
insb
cmpsb
dec
daa
stos
movsb
pop
mov
add
pushf
lds
sbb
insl
and
cld
ss
push
adc
int
or
dec
and
sti
mov
mov
sub
mov
imul
out
imul
xchg
movsl
xchg
inc
lea
or
in
adc
xchg
mov
sarl
and
pop
in
mov
add
inc
pop
cmp
adc
arpl
xchg
xchg
pop
es
xorb
xchg
jecxz
ss
pop
pop
subb
cs
push
jne
mov
pop
jecxz
sar
lods
sub
mov
adc
in
or
and
pop
pushf
cmp
ja
pop
cmp
out
inc
movsl
insb
arpl
sti
fisttps
cmp
jo
int3
push
or
into
push
push
inc
fcomps
cmp
mov
sar
movsb
sub
dec
pop
adc
stc
js
sbb
leave
and
xor
sbb
push
cs
jecxz
les
push
push
pop
hlt
dec
xchg
cld
mov
mov
mov
lea
pop
mov
mov
lock
or
out
movsl
mov
xchg
cmpsl
xorl
pop
in
in
movl
or
aaa
mov
sub
dec
ljmp
imul
push
rcrl
add
shrb
mov
jb
jmp
inc
into
dec
cld
mov
add
iret
cmp
popf
push
inc
movsb
fimull
push
pop
xchg
rcl
testb
das
js
push
movsl
pop
jp
mov
push
int3
dec
nop
inc
iret
cwtl
xlat
andl
dec
sbb
and
iret
dec
or
aam
jmp
cmp
and
lods
je
sub
pop
pop
std
cs
mov
fnstcw
insl
push
dec
jmp
rcr
xor
sahf
mov
nop
test
mov
push
repz
mov
inc
rcr
call
loopne
lcall
test
movsb
lds
mov
or
in
stos
inc
jg
pop
stos
mov
adc
pop
andb
xchg
mov
rcl
rcrl
sbb
sub
sbb
push
mov
pop
lea
bound
out
cmc
leave
cmp
push
ja
movsb
in
sbb
jns
mov
cmc
and
mov
mov
xor
or
sbb
std
sbb
xlat
push
and
add
fidivrl
or
sub
aad
dec
push
out
lods
iret
cli
mov
jg
mov
jae
xor
imul
icebp
mov
mov
sub
popa
and
sahf
aad
dec
cmp
mov
jne
mov
cmpsb
pop
imul
rcrl
rcrl
pop
jmp
sti
pop
xchg
lahf
push
sti
mov
jg
imul
mov
xchg
lcall
test
test
pushf
cmpsl
add
ss
scas
das
cmpsl
push
jecxz
ficomps
ja
xchg
into
sub
push
in
mov
fldt
movsb
loope
jmp
sub
lods
pop
es
test
inc
das
sub
jb
hlt
lret
movzwl
lock
lods
cmp
sbb
xchg
ss
test
jb
pop
roll
mov
push
movl
cld
div
dec
cld
lahf
or
and
mov
sbb
cmovp
xor
jns
out
dec
jns
mov
scas
xchg
mov
pop
xchg
mov
int3
adc
out
arpl
push
sbb
add
mov
dec
scas
adc
sti
int3
test
shlb
aas
testb
lret
cli
imul
les
jmp
ljmp
mov
push
xchg
std
lock
lea
mov
mov
jmp
enter
test
mov
ret
stos
loope
mov
pop
lods
dec
outsl
pop
cmc
adc
xchg
xchg
call
xchg
dec
repz
aad
pop
xchg
dec
adc
push
mov
mov
mov
push
push
adc
jle
fs
pop
add
mov
orb
mov
lock
pop
mov
dec
xchg
xor
adc
daa
jmp
adc
jae
jb
pop
sub
daa
into
lret
fwait
lahf
loopne
add
outsb
mull
cmpsb
mov
das
and
and
imul
adcb
js
jg
and
pop
xchg
xlat
jge
xchg
test
negb
push
pop
or
fstpl
xlat
cmp
pushf
inc
push
cmp
cmc
loopne
sbb
je
pop
pop
adc
mov
scas
clc
shlb
pop
sbb
call
sahf
mov
adcl
sbb
ja
pop
fwait
fwait
xchg
sti
enter
or
stos
xor
andb
gs
in
gs
lock
pushf
push
inc
leave
rolb
push
stos
rclb
ds
repz
push
push
mov
cmp
sub
pop
adc
loop
sbb
jae
test
sbb
sbb
repnz
push
push
add
popf
insl
push
sbbl
sub
push
mov
subl
cs
pop
dec
pop
or
and
fsubp
sbb
pop
or
jns
fwait
out
and
xor
or
sub
sub
jp
aad
popf
mov
scas
aad
rcl
dec
mov
lea
ret
mov
jae
insb
pop
push
or
lds
jg
cmp
in
jb
mov
dec
fwait
mov
out
mov
aas
sbb
icebp
mov
pop
push
cmpsb
xlat
pushl
add
leave
je
je
dec
mov
cmc
mov
pop
sbb
addl
ss
popa
fwait
leave
adc
subl
jae
in
out
aam
mov
push
loope
mov
push
daa
addr16
push
mov
cmpsl
or
sbb
daa
jecxz
jne
loope
fldl2e
pushf
cmp
fadd
xchg
inc
adc
hlt
les
dec
mov
in
pushaw
into
and
cltd
lods
adc
nop
out
lock
push
and
mov
enter
jae
mov
aas
mov
xor
xchg
push
es
cmp
clc
sbb
sub
dec
mov
imul
sub
push
xchg
stos
popa
pop
jle
xchg
xchg
or
int
mov
loop
or
pop
cmp
fidivs
sub
lods
pop
cwtl
cmp
cmp
jnp
out
cmp
imul
fimull
mov
push
dec
sub
or
sub
mov
aam
ret
inc
insl
test
add
adc
into
xor
adc
inc
outsb
or
mov
sbb
jae
adc
sahf
jne
mov
adc
jae
xor
in
cs
adc
adc
sti
adc
lret
aas
push
fmulp
faddl
outsl
lahf
mov
push
sbb
xlat
cmp
xorb
aaa
add
icebp
inc
lcall
push
sub
adc
mov
sub
add
arpl
pop
mov
push
push
out
jne
xchg
pop
cs
push
jae
movsl
call
adc
jno
mov
mov
inc
mov
add
scas
rclb
mov
loopne
push
jno
lock
std
pop
stos
inc
mov
inc
cmc
ret
sub
sar
out
lods
pop
mov
les
movsb
repnz
fisttpl
xchg
roll
jae
scas
adc
nop
insb
aam
adc
test
es
movb
pop
xlat
js
aam
pushf
test
fldl
push
pop
in
lds
sbb
rolb
adcl
test
movsl
nop
push
dec
pop
cs
popf
cmp
mov
xchg
mov
imul
jo
in
mov
mov
outsl
es
in
repnz
mov
xor
sbb
jmp
leave
call
xchg
pushf
adcl
mov
in
xchg
xor
xchg
push
xchg
jecxz
pop
jp
push
inc
mov
shll
xor
xorb
rcll
mov
lods
test
sub
push
jne,pt
push
xlat
inc
fwait
xchg
or
or
pop
push
scas
out
cmp
add
add
push
in
pop
es
sub
xor
jmp
pop
stos
test
lcall
inc
sti
sahf
js
push
mov
inc
test
jo
dec
sbb
lds
pop
das
cld
test
jge
xor
mov
mov
sbb
loop
or
lret
xor
mov
xlat
sbb
mov
cwtl
arpl
push
out
pop
iret
data16
push
enter
xor
and
daa
push
jmp
xchg
xor
cs
insb
inc
fisubrl
and
jge
fbld
xchg
mov
cmp
push
xor
jo
daa
dec
imul
mov
fisttpll
dec
dec
call
cmp
insb
xchg
dec
int3
and
mov
push
out
push
mov
sti
sti
add
mov
dec
fldcw
jmp
pop
push
outsl
inc
scas
add
es
fiaddl
int
push
fistl
pop
mov
inc
pop
addr16
and
or
dec
cmpsl
and
iret
sbb
test
lds
cmp
in
xor
sahf
dec
jb
xchg
push
addl
pop
xchg
sbb
pusha
popf
xchg
mov
adc
xchg
sub
adcb
ljmp
sbb
sahf
test
mov
cmc
out
add
and
inc
cmp
daa
mov
push
adc
sub
pop
cmp
mov
imul
insb
loopne
cmp
push
dec
and
mov
and
or
xchg
cmpsb
imul
enter
out
inc
sbb
outsl
jnp
clc
insb
mov
movsb
jne
ret
aas
push
imul
xor
jmp
jns
pusha
cmpsl
and
addr16
cmpsb
mov
jne
ret
je
cmp
orb
leave
test
loopne
lods
jbe
out
mov
dec
repz
and
vmwrite
xchg
dec
jnp
lock
sbb
sub
in
bnd
lock
jge
jmp
lahf
mov
subl
sahf
and
data16
push
test
xchg
ret
dec
inc
pop
sub
lahf
lahf
add
fbstp
add
xchg
mov
xchg
gs
popf
jb
mov
scas
adc
std
movsb
divb
fs
adc
movsb
loope
adc
out
repz
xor
xor
dec
mov
lcall
xor
in
adc
fadds
incb
push
fldt
mov
sub
push
sub
push
xlat
daa
jg
in
jp
pop
daa
sbb
mov
lock
jmp
adc
pop
adc
mov
mov
sarl
and
sub
xor
or
gs
jg
adc
fwait
mov
push
mov
fildll
mov
jno
das
and
iret
out
clc
jg
pop
aas
mov
mov
in
cmpsl
dec
mov
stos
mov
and
imul
les
pop
das
pushf
xchg
int3
test
jb
mov
cmp
jbe
shlb
pop
mov
mov
jmp
push
add
ds
add
in
icebp
cmc
xchg
or
mov
mov
cmp
jmp
xchg
xor
cmp
fildl
ljmpw
mov
and
sahf
fxch
dec
testb
and
xchg
popa
mov
xchg
dec
inc
mov
sti
fldl
insl
call
xor
sub
adc
dec
dec
cmp
rorb
jecxz
rol
aad
ss
jno
xchg
js
mov
adc
aad
pop
and
mov
push
cmp
adc
ds
lods
nop
idiv
and
inc
les
push
stc
pop
pop
mov
push
cmp
or
in
aaa
push
pop
push
xchg
jecxz
outsb
xchg
mov
xchg
pop
sub
jo
out
enter
push
push
out
pushf
pop
arpl
jmp
out
jnp
int
ljmp
arpl
xchg
lock
fs
pop
test
fwait
clc
fcomi
cmpsb
cmp
sbb
int
enter
sub
call
jae
cli
pop
pop
ss
mov
xchg
mov
cmp
movsb
mov
inc
insl
rorl
sbb
adc
lods
je
cli
lock
jno
cmp
ret
iret
mov
stos
in
iret
cmpsl
pop
jle
fisubs
aad
dec
stc
das
jecxz
push
fisubl
cmc
sbb
adcl
jo
cmpsb
mov
pop
dec
dec
mov
ds
icebp
add
jle
mov
lret
dec
hlt
inc
mov
push
dec
ror
add
cmp
sarl
arpl
xlat
sti
pop
mov
jle
lods
stos
out
rorl
aam
pop
push
mov
aas
xchg
adc
lret
jecxz
out
int
insb
clc
das
neg
fwait
cmp
mov
insb
push
cmp
lods
out
neg
out
outsb
pushf
or
jg
sub
scas
xchg
lcall
jp
mov
mov
mov
pop
fmull
ss
rol
pop
mov
pop
js
xchg
popf
shll
movsb
mov
sbb
ret
dec
jle
ljmp
mov
cld
mov
lret
push
mov
or
bound
xor
dec
and
repnz
inc
dec
sbb
adc
dec
ja
iret
xchg
adc
add
xchg
repnz
push
sahf
std
test
imull
xor
sbb
stc
and
pop
jp
cmc
jp
dec
pushf
test
divl
fwait
inc
mov
mov
stc
icebp
or
jecxz
dec
push
dec
mov
lds
popf
sub
mov
jne
bound
inc
jp
mov
pop
push
pop
mov
lea
mov
hlt
popa
idivl
xchg
xchg
dec
arpl
sub
out
and
adc
mov
pusha
pop
leave
inc
push
fchs
push
int3
sbb
iret
insl
add
aam
jns
push
out
aad
xor
and
xor
pop
pop
int
adc
jmp
fistl
lea
pop
imul
ja
pop
bound
cli
inc
mov
aad
stc
ret
lret
or
fnstcw
loop
sti
ss
jmp
rcll
cwtl
lret
pop
sub
jmp
lcall
outsb
mov
mov
scas
bound
cs
decl
test
cli
mov
adc
mov
imul
ljmp
cs
xchg
push
cmp
lahf
je
xchg
xor
movsl
push
mov
mov
sbb
push
mov
push
cmp
cmp
rol
movl
dec
mov
push
xchg
dec
pop
dec
cmp
lds
inc
sub
jecxz
icebp
sub
mov
pop
sbb
stos
push
or
xor
fscale
xchg
jb
std
xchg
sub
sub
int
xchg
inc
imul
mov
ljmp
mov
ja
and
pop
pop
je
roll
lds
jbe
mov
into
push
ja
dec
shrl
outsb
pusha
dec
les
cmp
sbb
mov
sub
mov
push
add
xchg
add
adc
add
out
lods
and
sbb
sti
sub
insb
adc
les
sub
mov
dec
icebp
mov
aaa
mov
add
and
out
pop
mov
push
lock
pusha
add
dec
ss
cltd
xchg
xor
mov
arpl
xchg
xorl
in
jne
push
subl
in
sbb
cmp
mov
stc
mov
push
test
xlat
or
aam
xchg
xchg
cli
pop
add
bound
inc
mov
pop
mov
and
inc
xlat
call
jbe
adc
mov
mov
and
mov
int
pushf
xchg
fdivrs
fsubrl
call
pop
inc
jp
cmpsl
mov
mov
roll
loopne
and
cld
aad
xchg
or
cmovns
arpl
ret
mov
jp
lahf
daa
test
scas
scas
dec
fimuls
sub
xor
mov
pop
mov
jge
sbb
fucomp
pop
jb
ds
inc
sbb
lods
nop
sbb
cmp
mov
jno
lcall
fisubl
push
mov
das
push
int
xor
cwtl
adc
fsts
in
xchg
xchg
mov
fsubrs
add
stc
fisubrs
aas
fcmovnbe
shrb
pushf
cmp
in
pusha
mov
fwait
cld
repnz
mov
push
add
mov
adc
int
push
and
xorl
stc
mov
ljmpw
loop
inc
aam
sbb
dec
mov
push
or
out
data16
shl
xor
mov
shr
push
loopne
das
sbb
lret
mov
or
xchg
or
ss
add
mov
cmp
mul
pop
imul
mov
pusha
das
push
sub
pop
or
vpand
into
into
mov
xor
fprem
cmc
jg
jle
jl
movsl
leave
push
repz
xor
pop
dec
xchg
roll
popa
pop
jo
cmp
in
bound
mov
mov
movsl
lahf
pusha
es
je
insw
push
xlat
insl
dec
lods
pop
ret
aaa
xor
mov
dec
out
int3
mov
xchg
push
stos
and
and
adc
cld
add
or
div
sbb
jne
paddusb
pop
mov
sbb
xchg
mov
fidivrl
add
mov
cmpsl
sub
out
jg
adc
dec
out
push
push
xchg
add
add
inc
popf
cmp
daa
lods
lea
bound
sti
aad
add
push
adc
mov
push
xor
xor
sbb
ret
outsb
lods
mov
xor
scas
loopne
cwtl
and
loopne
mov
xchg
enter
shrl
mov
xor
pop
inc
into
insb
xorb
cmpb
sub
inc
cmp
stos
push
add
je
movsl
repz
repz
mull
popf
push
iret
cwtl
and
cli
outsb
add
test
fldt
pop
adc
and
sarl
hlt
pshufw
leave
aas
lods
lods
jp
sub
jno
or
pop
mov
adc
push
inc
pop
push
lea
flds
clc
mov
orb
mov
inc
cmpsb
ror
test
mov
out
cmp
fdivs
push
and
and
sbbl
int3
imul
mov
xchg
loop
aam
arpl
xor
jecxz
loope
mov
mov
xchg
and
or
push
pop
clc
nop
pop
and
sbbb
ret
fwait
cld
sahf
pop
cld
xchg
sbb
call
seto
cmpsb
or
adc
jecxz
int
mov
xor
inc
loopne
mov
mov
xor
shr
neg
pop
xchg
popf
mov
sbb
xor
test
loopne
cwtl
je
fimull
jl
cmc
nop
xchg
ret
aas
xchg
cs
xor
popa
push
sbb
cmpb
push
repnz
jb
push
gs
adc
lods
mov
push
jecxz
xchg
xchg
les
inc
inc
lock
cltd
mov
mov
push
dec
imull
cmp
jl
stos
fs
ja
cmpb
fistpl
or
add
mov
or
mov
popf
les
popf
jb
je
aam
test
pop
mov
push
mov
icebp
jecxz
push
lahf
mov
shll
stc
dec
mov
mov
mov
mov
mov
hlt
inc
xor
inc
adc
inc
adc
cmp
sbb
inc
sub
inc
testb
inc
dec
mov
push
and
ds
fnstcw
filds
xchg
add
mov
or
mov
inc
mov
pop
popf
stos
fucomip
adc
push
push
dec
icebp
out
dec
mov
mov
in
cmc
cld
push
mov
enter
test
insb
lahf
shrb
push
fistl
adcl
aaa
jmp
xor
dec
sarb
movsb
jp
inc
scas
push
cmpsb
mov
pop
xchg
popa
test
hlt
loope
push
jb
je
fnstsw
push
mov
jb
xchg
movsb
int
mov
rcrb
out
jae
pusha
xorb
push
mov
mov
adc
inc
mov
jmp
pop
adc
mov
lret
int3
sub
add
test
mov
test
push
fs
mov
xchg
push
push
insb
pop
imul
pop
shl
inc
cmp
mov
ret
out
or
lds
mov
notb
sbb
dec
rcll
lcall
mov
add
cwtl
push
rorb
aaa
pop
mov
xor
mov
outsb
inc
lret
jnp
arpl
sub
add
lods
adc
stos
mov
mov
notb
mov
jns
sbb
rorl
add
fwait
pop
xor
sbb
push
in
mov
adc
out
inc
sub
adc
xsavec
cmc
test
mov
lea
and
cmp
sahf
enter
fldenv
inc
lock
adc
push
and
repz
data16
push
adc
pusha
cmp
jl
cmpsl
jmp
inc
adc
leave
xchg
outsb
ja
outsl
out
xor
dec
jno
adc
mov
xor
pop
inc
mov
daa
jmp
xchg
xchg
dec
adc
or
mov
in
lea
pusha
and
push
stos
push
jg
adc
loop
mov
cmpl
aaa
fistpll
sti
sbb
adc
test
mov
and
jmp
fwait
gs
inc
arpl
int3
fadd
sbb
inc
arpl
push
les
mov
stos
or
cmp
pop
jno
aam
loope
inc
sbb
xchg
mov
cli
loopne
mov
jns
arpl
out
popf
hlt
lcall
add
sub
mov
repz
hlt
pop
pop
movsl
cwtl
clc
and
pop
inc
mov
lcall
sti
sahf
xchg
cwtl
xor
add
mov
mov
inc
push
mov
mov
lahf
sbb
mov
in
xor
shlb
sarb
sub
or
test
test
pusha
cmp
ss
jp
push
and
sbb
fcompl
std
push
jg
xor
adc
lods
sbb
mov
nop
pop
and
ja
bound
mov
out
icebp
aad
lret
sub
jno
sbb
mov
lea
cmp
loopne
add
test
addb
js
jno
addr16
jb
adc
aas
leave
jmp
test
pop
stos
jne
in
enter
xchg
push
shrd
dec
cmc
pop
sbb
loop
mov
pop
cmp
outsb
and
leave
fbstp
push
call
in
mov
out
xchg
insl
bound
das
fldt
jecxz
push
jmp
push
stc
out
lcall
mov
ficoml
inc
inc
mov
ret
inc
icebp
mov
outsl
test
jo
test
mov
les
in
and
cli
test
leave
lea
or
cltd
ljmp
or
loope
xchg
adc
inc
loopne
std
les
lret
mov
mov
sti
dec
lret
out
out
call
jg
hlt
scas
push
inc
les
sub
jle
jmp
xlat
imul
pop
jbe
imul
mov
leave
fildl
loopne
dec
fimuls
bound
or
jmp
subl
fdivs
and
xor
xchg
imull
add
shll
mov
pop
iret
imulb
shl
addb
pop
shrb
ret
cld
mov
push
sbb
lods
rcrb
adc
xchg
add
ss
inc
out
in
pop
jb
inc
push
inc
shrb
aas
notl
adc
inc
pop
inc
incb
outsl
ljmp
out
xchg
sbb
adc
in
xor
push
push
xrelease
push
dec
std
mov
loopne
jnp
fidivrs
jmp
pop
imul
jne
loop
sti
xor
xchg
mov
movsl
push
aas
adc
movsl
mov
add
hlt
mov
mov
repz
aad
fmull
dec
dec
mov
clc
cli
push
xchg
leave
aad
xor
xor
inc
leave
add
lods
enter
sbb
mov
fmuls
push
cli
sub
into
cwtl
sub
lds
lcall
pop
arpl
and
sarb
daa
mov
call
mov
divb
into
mov
adcb
xlat
xchg
sbb
or
imul
mov
jb
mov
decl
out
cmp
mov
xor
inc
jecxz
into
inc
addb
pushf
cli
inc
pop
mov
inc
xor
outsb
cmp
imul
mov
imul
push
ret
adc
rorb
mov
mov
arpl
jg
mov
stc
or
nop
cmp
and
and
sub
sbb
dec
xchg
sub
xor
xchg
mov
mov
daa
xor
shld
dec
lock
js
push
adc
pop
dec
lods
xchg
xor
push
cmp
pop
cmpsb
loopne
push
ret
inc
iret
fldl
fmuls
addb
adc
inc
sbb
stos
cwtl
enter
fildl
dec
mov
mov
mov
adc
scas
add
adc
pop
lods
pop
sbbl
xchg
ljmp
adc
add
mulb
pushf
dec
cmp
jmp
js
xchg
adc
xchg
cmpsl
xor
mov
lea
fmull
stos
mov
pusha
sbb
daa
pop
lds
lods
push
jmp
repz
mov
sbb
data16
push
out
xor
lret
cmp
mov
inc
xchg
adc
push
inc
or
mov
stos
int
jge
sub
sub
mov
popf
sbb
mov
cmp
not
idivb
push
into
std
leave
inc
jmp
lret
xlat
xchg
pop
or
mov
cmp
dec
or
fstps
xchg
cmpl
test
add
jmp
dec
push
jmp
aam
loope
orb
jno
xor
sub
lret
push
adc
scas
pop
xchg
dec
movsb
std
add
or
sbb
jne
xchg
out
mov
mov
loop
jl
mov
aaa
mov
push
push
pusha
mov
icebp
dec
in
stos
jo
lcall
dec
add
aaa
or
mov
adc
pop
int
enter
mov
sub
cli
imul
cmp
jg
pop
ret
int3
xchg
lret
setns
fld
push
pusha
shl
xor
gs
scas
xchg
adc
push
inc
or
xchg
scas
push
jmp
sbb
lods
inc
loope
fnsave
inc
push
jecxz
pop
or
movsb
xor
icebp
add
hlt
sub
pop
int3
scas
out
adc
out
jecxz,pt
in
mov
add
adc
push
sbb
add
jno
sbbb
cmp
cltd
pop
xchg
jmp
fcomp
mov
xor
pop
loope
leave
test
mov
test
push
insb
fldenv
cmc
mov
xchg
movsb
pop
sbb
pop
mov
into
lret
xor
ds
jbe
sub
pusha
nop
in
int
cmp
test
mov
shrl
fistps
or
nop
add
mov
test
gs
mov
cmpsl
add
sub
out
daa
into
xchg
ds
sbb
mov
mov
add
add
mov
arpl
xorl
jle
cltd
call
fs
icebp
cmp
pop
dec
enter
jbe
aas
sub
pop
mov
push
je
push
push
xor
add
outsl
cmp
dec
imul
mov
inc
movsl
and
imul
sti
scas
call
call
jno
les
outsb
mov
and
outsl
mov
mov
mov
xchg
out
mov
add
div
shll
aad
xor
mov
stos
je
les
xchg
pop
pop
lds
cmp
inc
lea
mov
push
cmpsl
push
rcll
jb
mov
rcll
sahf
divl
test
aam
push
sbb
push
leave
lods
insl
adc
pusha
jne
aam
ja
push
mov
mov
into
and
jae
jnp
adc
cltd
xchg
incl
mov
out
and
popa
aas
insl
rorl
fcmovnb
loopne
xlat
push
dec
pop
dec
mov
mov
push
mov
add
xor
call
arpl
pop
mov
adc
loop
mov
iret
outsl
mov
add
jmp
add
out
aas
adc
sub
insl
cld
mov
sbb
sub
test
test
int3
lahf
cs
xchg
add
movsl
enter
out
popa
jge
fmull
add
lahf
in
in
push
add
pop
out
movsb
adc
addb
das
shll
lret
add
sub
xchg
loope
mov
cli
cli
push
xor
sub
jle
stos
hlt
lods
sbbl
repnz
sub
lret
adc
in
icebp
repz
or
adc
xchg
data16
cmpsl
enter
cmpsl
sbb
or
out
xchg
xchg
nop
roll
xor
lods
jno
int3
loop
imul
out
add
pop
je
scas
dec
cld
xor
cmp
push
sub
fwait
jp
sbb
and
pop
cmpxchg
icebp
add
pop
xor
std
inc
rcr
jmp
or
mov
mov
push
add
adc
or
sbb
aam
mov
lock
into
xchg
rolb
insl
jno
jg
lea
stc
mov
outsl
pop
or
inc
cmpsl
inc
push
lea
jl
ret
imul
iret
mov
mov
out
test
push
dec
push
xor
push
adc
pop
iret
push
stos
pop
inc
incb
lret
and
xchg
push
movl
jg
and
rcrb
andl
shll
fdivs
in
xchg
insb
stos
pop
push
aas
das
inc
mov
outsl
mov
rcl
inc
mulb
pop
mov
or
mov
pop
dec
pop
fists
imul
mov
mov
and
mov
jp
add
arpl
push
xchg
add
test
xchg
in
or
sub
lret
mov
sbb
pop
jnp
push
push
repz
pop
aam
or
rclb
inc
icebp
jmp
mov
test
dec
out
scas
test
xchg
mov
jno
fnsave
mov
jle
in
lea
je
das
xchg
push
out
cmp
cmp
call
mov
mov
and
mov
xchg
out
push
xor
pushf
mov
and
adc
add
out
xlat
or
push
stos
sbb
mov
dec
lock
idivb
imul
ret
jnp
mov
xor
and
dec
xchg
imul
mov
dec
in
movsl
stc
or
bound
sub
movsl
popf
cld
push
insl
push
mov
lret
lock
std
and
out
push
inc
xor
arpl
or
fsts
mov
sub
cmpsl
das
enter
mov
pop
mov
test
dec
dec
pop
cmp
cmpsb
cmp
fcompl
xor
fistpl
cmpl
push
sub
or
outsl
ljmp
loope
push
push
popf
adc
push
add
mov
jno
nop
push
fs
adc
cld
ljmp
pushf
adc
xlat
pop
dec
dec
aad
jge
incl
test
xchg
xchg
cli
add
or
or
int3
mov
jmp
je
ret
dec
inc
mov
mov
shlb
fcmovnu
adc
ret
aas
jno
dec
push
js
aaa
jge
dec
cwtl
push
sbb
inc
push
lcall
push
dec
adc
lret
pop
mov
out
loop
sbb
sbb
mov
cmp
jp
jmp
lret
test
push
or
shlb
lock
pop
decl
into
inc
shll
dec
mov
mov
enter
mov
icebp
add
xor
sub
or
cltd
adc
cmp
cmp
xlat
jge
push
pop
sbb
cmp
jmp
pop
mov
fadds
shl
jp
js
js
neg
sbb
daa
xor
cmpsl
loopne
pop
pop
dec
inc
cs
ja
jns
rorl
insl
addb
pop
lods
jbe
mov
ret
stc
mov
sahf
sub
or
das
mov
ss
and
je
adc
xor
es
xchg
mov
adc
fisubrs
mov
xchg
mov
int3
or
fstpl
mov
imul
ljmp
popf
lods
cmpsb
add
aam
scas
imul
pop
in
inc
xchg
pop
xchg
inc
mov
mov
loopne
jnp
shlb
mov
jge
jg
popf
imul
dec
adc
mov
inc
andb
inc
cmpsb
inc
mov
dec
repz
and
push
cmpsb
cmpsl
push
and
add
add
fildll
sti
add
lahf
pop
pushf
pop
and
xchg
xchg
add
mov
popa
rorl
mull
loop
add
sbb
jmp
jecxz
fmuls
gs
push
adc
pop
orl
push
scas
jo
add
sbbb
xchg
xlat
mov
push
insb
adc
push
gs
cmpsl
adc
aaa
xor
cwtl
xchg
adc
jbe
xor
subl
dec
mov
sbb
lea
in
dec
in
add
sub
cmp
and
sub
jp
mov
ja
rcrl
adc
mov
pop
mov
mov
cs
jmp
mov
mov
adc
xor
inc
xchg
repz
sbb
sub
sub
sbb
cwtl
arpl
sub
popa
pop
imul
xchg
and
andl
rol
movsl
cmp
cli
mov
bound
dec
in
movsl
fsubl
pop
xor
cmp
cli
jno
ret
test
movsl
lock
out
xor
repnz
loop
cltd
and
mov
push
xor
leave
add
pop
and
rorl
mov
and
sarl
int3
push
arpl
mov
or
adc
enter
enter
xchg
je
jo
addr16
ret
and
cmp
dec
out
cmp
pushf
and
xor
cmp
mov
push
push
fst
stc
imul
dec
mov
xlat
data16
test
bound
add
ficomps
orl
cmp
addr16
jge
mov
inc
hlt
roll
xchg
repz
int
xchg
cwtl
sahf
adc
ds
pop
add
fwait
jne
rol
ds
dec
das
push
fdivrs
sub
test
lods
cli
clc
loopne
inc
aaa
jo
add
cmp
les
push
dec
int3
out
jnp
jno
cmpsb
repz
inc
leave
cmpsl
fisttpl
xchg
mov
adc
and
test
sub
scas
mov
in
imulb
scas
lods
pushf
mov
std
mov
lods
sahf
push
add
dec
jecxz
jns
hlt
pop
sub
shl
mov
andb
idivl
mov
mov
je
andl
std
movsb
rcrl
insl
in
cltd
stos
push
out
jbe
lcall
dec
ret
push
enter
pop
fbld
mov
xor
je
fs
das
lds
lds
icebp
xor
jae
cmp
inc
pop
xor
in
mov
inc
fwait
lcall
sub
or
add
fwait
dec
add
xor
dec
mov
cltd
or
outsl
mov
sar
mov
dec
pop
ret
insb
dec
pop
ss
push
jge
test
mov
adcb
in
cmp
or
jne
cmp
dec
sub
std
xchg
cmp
iret
dec
jae
in
cmp
xor
scas
fcmovu
mov
hlt
pop
push
je
gs
xchg
ret
lret
jg
addr16
nop
rcr
pushf
lret
lret
sbbl
cmc
test
and
cmp
popa
lea
adc
test
add
or
shlb
adc
pop
int
cli
cmpsb
sub
mov
scas
adc
dec
xor
cs
mov
aas
add
insl
push
pushf
pop
xlat
and
mov
int
lahf
mov
rclb
push
push
inc
into
push
rcl
das
inc
lock
sbb
mov
inc
data16
fnstsw
mov
and
movsb
in
fs
aas
hlt
rcll
frstor
xchg
sub
es
pusha
gs
imul
outsb
in
mov
xchg
decb
jns
sbb
adc
and
push
push
pop
jmp
add
std
cmp
mov
call
bound
adc
mov
out
cmp
or
pop
jmp
pop
adc
movsl
adc
sbb
sahf
xchg
cwtl
and
movsb
cmp
inc
cmp
push
xchg
lahf
cmp
lods
addb
pop
mov
inc
divl
clc
cli
aas
movsb
or
fistpll
in
push
cld
xor
out
das
lcall
arpl
aad
cmp
sahf
add
mov
mov
icebp
sub
and
push
adc
mov
push
add
cmp
popa
mov
or
insb
mov
cmp
out
adc
ds
jg
je
aad
shlb
mov
xchg
inc
imul
jge
mov
mov
pop
sub
lret
xchg
in
xor
jecxz
aam
es
dec
arpl
jne
shl
and
dec
fwait
inc
pop
sbb
stos
add
lods
add
sub
aam
mov
mov
sahf
xchg
lcall
push
pop
pop
movsl
fdivrl
dec
fiadds
mov
pop
inc
dec
dec
push
mov
out
mov
ret
shlb
push
push
dec
jno
rcll
inc
mov
fs
xchg
decb
jo
cmpsl
enter
scas
inc
gs
js
and
loop
lods
dec
and
push
lock
fcmovne
mov
mov
mov
add
ret
sbb
loop
pop
mov
in
rcll
fs
popf
imul
xlat
mov
inc
in
push
lds
cli
xchg
sbbl
in
test
ffree
ds
sub
dec
imul
shll
xchg
aam
je
xchg
aam
mov
into
sarb
mov
sub
fdiv
and
push
xchg
jns
adc
pop
inc
mov
mov
out
test
les
or
loopne
jns
inc
leave
js
mov
or
sbb
in
shll
mov
ljmp
ljmp
pop
cwtl
pop
pop
je
out
push
mov
stos
mov
push
push
out
sbb
rorb
sub
out
push
ret
nop
cmp
jg
fsubl
loopne
repnz
and
pusha
jecxz
test
cvtdq2ps
arpl
or
mov
mov
lret
rcr
or
inc
sub
dec
pop
add
push
loop
jge
xchg
xor
imul
test
je
add
xchg
jmp
aas
jbe
cmp
adc
cmp
mov
pop
fwait
jecxz
das
jnp
lret
outsb
jl
and
sub
add
push
or
add
xor
inc
inc
dec
mov
or
outsl
outsb
imul
inc
push
cltd
lret
jo
xor
xor
xchg
icebp
sbb
xor
call
or
jno
mov
stos
push
sub
lods
in
add
enter
xor
jg
sbb
and
in
pop
ret
repz
pop
int3
loop
adc
int3
scas
add
sti
daa
popf
cmp
ja
or
jbe
lea
imul
adcl
xchg
fcomps
cwtl
inc
dec
lcall
mov
add
aam
jge
sub
enter
fbld
or
in
loope
lods
and
mov
dec
jb
adc
adc
outsl
je
push
xor
in
pop
pop
jno
inc
je
mov
sbb
stos
sub
in
lods
in
push
and
insb
adc
mov
xchg
sub
and
int
xchg
outsb
push
push
sub
add
inc
fisubs
sbb
lods
insl
pop
jnp
cmp
in
push
mov
cmpl
cltd
or
stos
push
xchg
xor
jg
push
scas
mov
sarb
dec
cwtl
dec
jns
aaa
add
xor
mov
mov
movsl
mov
dec
mov
leave
pop
mov
jge
inc
fcompl
test
les
pusha
bound
orl
and
lds
sbb
aam
jns
and
js
es
mov
sarl
mov
loopne
xchg
jle
in
loop
mov
adc
mov
repnz
jo
loopne
sub
pop
mov
adc
push
lcall
cmp
cmpsb
cmp
popa
add
les
adc
xchg
data16
or
push
sub
std
fisubrs
jae
dec
xor
inc
out
xor
push
dec
out
aaa
mov
lcall
cmp
frstor
xchg
sub
sahf
gs
repz
pop
lock
test
stos
push
scas
shlb
lea
leave
add
loope
pop
pop
aam
leave
cmp
sbb
repz
push
arpl
jne
imul
outsb
dec
ret
int3
data16
jb
jo
inc
lcall
inc
lock
xor
jns
rolb
arpl
mov
negb
shlb
jge
inc
enter
lret
add
push
mov
cmp
mul
jle
adc
cmc
jnp
add
mov
dec
fldl
sbb
push
pop
es
aam
ja
fcomps
in
clc
sub
sub
frstor
mov
ja
mov
mov
pop
mov
pop
ror
out
add
add
out
popf
jecxz
jmp
push
lcall
pop
cmp
dec
aad
je
std
sbb
or
jmp
int
hlt
or
bound
mov
pop
mov
ret
mov
mov
stc
insb
movsl
adc
push
ss
inc
mov
push
lahf
sahf
dec
push
stos
fs
pinsrw
mov
push
loopne
jne
xor
push
cmp
icebp
jo
sbb
sub
push
out
adc
lea
pushl
cltd
mov
mov
push
iret
popf
sbb
mov
push
nop
mov
mov
sub
in
or
lahf
ljmp
iret
xchg
fcom
or
mov
je
mov
inc
lea
lods
jnp
or
sbb
mov
fnstsw
pop
mov
jle
inc
aaa
cltd
xor
adc
faddl
lods
inc
xchg
push
lods
jecxz
jecxz
daa
push
mov
jl
aas
sti
cli
test
insb
inc
push
sbb
sub
jb
das
push
pop
sbb
push
popa
lods
aaa
fdivrl
cmp
insl
mov
inc
mov
scas
cmc
daa
xor
mov
xchg
and
fwait
adc
mov
leave
out
lcall
lret
in
test
jge
shl
daa
dec
jbe
mov
push
lret
imul
add
repnz
mov
cmp
fadds
adc
jb
aaa
ss
mov
in
lret
rcl
dec
fsts
gs
test
insl
mov
jecxz
mov
aaa
pop
pop
push
push
stos
cmpsb
cmpsb
cld
cmp
daa
adc
aas
dec
loope
out
leave
mov
cld
dec
cwtl
xchg
bound
dec
jle
push
sbb
lods
and
and
cmpsb
sbb
cmc
loopne
or
rcrl
dec
adc
push
jae
sarl
inc
mov
inc
lret
addr16
and
mov
inc
in
xchg
and
push
notb
mov
jnp
push
stos
addr16
enter
cwtl
mov
hlt
out
stos
ljmp
sbb
incb
pop
mov
cmp
popf
and
mov
lock
add
lods
aaa
das
xlat
pop
pop
or
push
pusha
mov
into
pop
lcall
xor
movsl
xlat
std
int
test
fs
push
imul
and
and
loop
or
and
pop
jle
insb
sub
out
loop
clc
fidivrl
sbb
inc
fiaddl
mov
aam
ret
pop
sti
jmp
jmp
mov
jmp
sbbb
jae
sub
lds
mov
aad
les
arpl
push
rcrb
lret
xchg
aad
push
cwtl
sub
sbb
lahf
mov
adc
cltd
mov
popa
mov
stos
inc
mov
sub
mov
ds
cmp
xchg
or
jns
aaa
rcr
fs
mov
call
nop
push
nop
sub
outsl
int
fmull
dec
loop
fisubrl
test
and
cltd
mov
adcb
jmp
dec
adc
sbb
sbbl
pop
xchg
cmp
psubb
push
pop
cltd
mov
cmovo
rclb
xchg
test
testl
mov
mov
jge
xchg
ds
sub
pop
or
push
mov
sub
inc
mov
loope
ret
lods
mov
arpl
jl
mov
cmp
cmp
add
setns
repz
mov
sub
inc
cmp
dec
pop
lods
popa
mov
add
movsl
pop
sbb
jno
addr16
sub
lcall
nop
movsl
sbb
rorb
cwtl
jnp
fsincos
xor
xchg
push
clc
loop
xor
dec
lds
daa
lds
inc
and
repnz
mov
xchg
jge
adc
sub
stos
add
sbb
cmp
pushf
fiadds
cmp
aas
aas
adc
leave
cmpl
sbb
pusha
push
add
add
push
adc
lcall
stos
movsb
lahf
push
in
ret
jae
jle
nop
pop
xchg
mov
scas
loope
mov
inc
adc
das
dec
mov
mov
dec
inc
out
call
sub
pop
or
insl
stos
or
xchg
jo
mov
mov
leave
add
mov
shrb
cmpsl
lahf
sbb
ja,pt
test
fwait
icebp
daa
xchg
shrb
clc
stc
dec
dec
test
mov
addr16
lods
lea
cmp
and
ret
or
adcb
adc
enter
pop
or
cmp
imul
mov
repnz
and
add
inc
jbe
arpl
inc
cmp
sar
test
pop
cli
push
jl
gs
sub
xchg
sub
ss
mov
rol
dec
imulb
mov
outsl
mov
cmc
out
test
inc
or
xor
packssdw
leavew
cmp
sub
fiaddl
out
jae
sbb
and
jae
dec
pop
ss
inc
in
ret
add
fisubrl
sub
and
dec
lea
ljmp
pop
mov
push
into
insl
scas
leave
ds
imull
and
test
testl
jle
xor
mov
cwtl
xchg
add
add
push
xor
fbld
jecxz
or
std
mov
add
shlb
sbb
xchg
pop
push
cmp
sahf
fnstsw
xchg
popa
lea
push
mov
btr
sbb
sahf
push
dec
fdivs
add
adc
jle
mov
cmp
lret
dec
ja
cwtl
fsubs
dec
or
cwtl
ss
cmp
cwtl
test
popf
jecxz
icebp
or
add
iret
push
out
push
scas
or
mov
in
or
js
push
and
mov
cltd
add
outsb
lcall
push
cltd
loope
push
jno
lods
push
sub
jno
xchg
ret
shlb
mov
pop
inc
push
out
rol
scas
movsl
push
jmp
mov
jae
sahf
pop
nop
cmp
inc
fistps
add
arpl
and
push
pop
xchg
and
sub
jmp
add
xor
push
movsl
jno
mov
enter
cld
in
mov
subb
cmc
jp
or
push
int
ljmp
push
cmp
xchg
cmp
dec
movsl
xor
mov
xchg
pop
mov
aam
pop
inc
lahf
stos
cmp
push
add
dec
aad
xchg
jo
subl
lcall
insb
aas
push
inc
adc
fildll
jg
std
xchg
cmc
jb
les
sbb
dec
mov
xchg
rcll
or
mov
cmp
xchg
sbb
mov
rol
jns
sarb
out
pop
jmp
rolb
mov
aaa
xchg
pop
lret
jae,pn
dec
loopne
mov
movsl
clc
leave
xchg
mov
ds
subb
push
dec
push
xchg
and
scas
cwtl
sub
movd
dec
push
test
sbb
lahf
rclb
mov
cmp
in
icebp
cmp
jge
fstl
out
jp
icebp
int3
adc
call
adc
out
sbb
or
imul
cmc
push
mov
cmp
and
scas
xchg
pop
adc
roll
imul
dec
js
insl
mov
xlat
or
out
subb
jge
pop
push
sub
aas
xor
push
in
adc
testb
adc
test
data16
xor
faddl
daa
xor
sub
and
in
sahf
lods
arpl
notb
and
fsubp
repnz
mov
xchg
mov
fdivs
cs
sti
sbb
mov
mov
and
mov
stos
push
jae
not
mov
xchg
add
in
and
dec
add
mov
push
jecxz
cmp
sub
je
or
inc
mov
cmp
jne
arpl
inc
outsl
add
lret
pop
and
cmp
mov
je
test
inc
pop
mov
int
and
icebp
mov
xor
mov
mov
sbb
in
push
subl
pop
mov
int
mov
fsts
sub
mov
sbb
jmp
cmp
andb
sbb
or
frstor
aaa
jae
popf
rcl
push
pop
inc
push
outsl
fsubrl
jle
pop
jne
nop
popa
ror
jp
cmp
sub
xchg
or
imul
sti
push
out
mov
or
push
adc
scas
cmp
in
xchg
repz
sub
add
das
lods
sti
sbb
xchg
fbstp
insb
fwait
jp
cmp
stc
pop
mov
cmpb
subb
popa
ja
or
mov
add
adc
and
daa
sub
jo
add
cmpsb
std
pop
rorl
push
jne
dec
fbld
xchg
iret
push
xchg
sbb
jp
test
aas
gs
gs
aaa
js
inc
les
jo
mov
sbb
xchg
sbb
test
pop
scas
clc
sbb
pop
not
or
push
inc
sbb
shl
aad
iret
out
inc
movsl
xor
mov
jno
repnz
inc
nop
and
sbb
bound
push
add
sub
jae
scas
adc
sarb
jo
lods
add
mov
lock
or
daa
sub
mov
xchg
lea
arpl
pop
cmp
xor
and
sub
jo
sub
aaa
das
adc
mov
and
cli
and
in
aas
cs
sub
int3
jo
popf
inc
inc
loope
push
out
xor
scas
jbe
pop
ret
adc
lret
icebp
xor
pushf
sub
fstpt
in
ljmp
dec
subl
out
push
sahf
inc
adc
sbb
std
and
mov
sbb
lock
rcrl
out
sbb
add
xor
out
clc
cwtl
add
sbb
into
fisttps
jl
les
popf
pop
inc
aaa
jns
adc
out
jb
push
popl
mov
sub
add
dec
adc
inc
bound
mov
pusha
shll
insb
xor
mov
lods
cmpsl
jnp
subb
std
out
clc
movsl
xchg
in
dec
sbb
stos
je
mov
cmp
outsb
sti
repz
sbb
jp
std
dec
repnz
jmp
mov
flds
out
in
cmpsl
das
imul
sbbl
jp
cld
or
and
aaa
int
or
inc
mov
addr16
cmp
adc
push
mov
pop
mov
dec
mov
dec
push
sahf
stos
mov
pop
inc
cmp
ljmp
dec
aaa
inc
adc
in
divl
push
iret
sub
jns
fdivrp
pop
pop
jg,pt
dec
mov
insb
aam
dec
sbb
das
sbb
add
ret
insl
mov
dec
ljmp
test
add
mov
cmc
jmp
hlt
mov
lods
add
out
xchg
fsubrp
shlb
out
mov
dec
jl
loopne
into
shll
inc
scas
xchg
push
add
jb
xor
loopne
push
es
dec
fucom
in
shrl
push
mov
push
test
lock
lods
pop
les
or
in
sbb
sti
adc
pushf
in
push
and
inc
fwait
loope
mov
xchg
lret
mov
pop
or
fnstenv
xchg
and
cmc
sub
adc
inc
test
or
xchg
popf
in
in
leave
es
adc
jnp
xchg
fnsave
mov
jnp
sub
mov
or
mov
insl
push
xchg
cld
fsincos
lods
xchg
popa
fistpll
nop
sub
xor
mov
sub
fidivrl
lock
lcall
daa
lds
mov
int
std
jnp
adc
pusha
mov
jp
and
fnstenv
mov
je
cli
out
ds
jae
lods
mov
cmp
lcall
dec
adc
jge
cmpsl
xchg
enter
pop
scas
repnz
dec
repz
and
cs
sbb
loopne
mov
outsl
aad
sahf
xchg
push
movb
xor
mov
sbb
pop
push
mov
pop
arpl
pop
std
adc
jmp
sub
cli
xor
out
and
loopne
mov
inc
hlt
sbb
jle
iret
nop
mov
in
jl
icebp
hlt
outsb
loopne
add
out
inc
jb
pop
push
js
xor
xor
scas
out
test
mov
mov
mov
adc
dec
sub
jl
iret
and
dec
inc
jge
lds
ss
cmp
mov
mov
rcrl
sub
inc
pop
movsl
pop
xchg
or
pop
sub
leave
out
xchg
les
push
dec
cmp
imul
ljmp
cwtl
add
lahf
std
sarl
or
xor
scas
movsl
push
and
push
mov
std
movsl
cmp
je
mov
out
push
sbb
jmp
or
xor
fstps
jmp
imul
push
test
add
out
pop
scas
mov
and
lahf
std
mov
insb
repz
scas
rolb
loop
ret
push
pop
lods
push
xchg
mov
fidivs
dec
jg
mov
push
adc
gs
cmp
push
jno
cltd
cmp
adc
inc
loop
push
mov
pushf
jmp
and
sahf
cmpb
aas
jecxz
xchg
or
rcll
adc
adcl
pop
mov
cmp
sbb
dec
jg
fs
out
cmp
sbb
or
cld
incb
loopne
and
or
jge
and
int3
cli
lods
les
fsubrl
xchg
cmpl
pushf
adc
test
loopne
sarb
test
invd
pop
into
je
xchg
dec
sub
mov
out
mov
mov
cmp
pop
cmp
xlat
inc
xchg
outsl
sub
negb
adc
push
jb
add
mov
insb
mov
pop
sub
sarb
notb
scas
jge
jle
push
mov
cs
mov
mov
sahf
shll
adc
pop
gs
pop
mov
jns
repz
inc
and
mov
jbe
je
dec
sub
mov
sub
cmp
mov
or
fcmovbe
ja
mov
adc
or
fcomi
push
shrb
cmp
jg
shl
cmc
or
ja
mov
mov
stos
leave
xchg
lock
mul
dec
pop
sbb
out
shll
lock
sbb
push
cmp
or
cmpb
push
or
mov
movsl
mov
inc
add
lret
sub
mov
adc
imul
cmp
mull
dec
push
xchg
or
fwait
and
imul
or
or
icebp
test
cmc
xchg
cmp
in
push
lcall
xor
jg
sbb
mov
aam
ret
xchg
sbb
xor
add
add
out
push
loopne
inc
xor
xor
adc
adcl
sub
xor
mov
ljmp
sub
sub
jb
fs
jmp
cmc
ss
dec
scas
stc
scas
popf
jns
icebp
xor
loopne
out
in
pop
add
repnz
jmp
rorb
lds
adc
push
into
sub
pop
or
jae
test
arpl
pop
sub
pushw
cmp
jo
push
push
pop
repz
inc
pop
inc
pop
lahf
pop
lods
outsb
stos
add
add
mov
in
and
fisttps
gs
sub
jle
jge
push
jb
sub
mov
je
in
dec
icebp
cld
enter
add
clc
pushf
fnstenv
add
xchg
cwtl
jmp
jecxz
cmp
pop
inc
addr16
push
xor
jae
pop
cli
pop
cltd
add
notl
scas
fs
dec
sub
ja
insb
pop
loopne
mov
movsl
mov
adc
sbb
xor
loopne
jns
add
inc
mov
jno
adcl
add
test
out
call
dec
js
adc
stos
lcall
inc
popl
pop
imul
sub
mov
cltd
movsl
inc
popl
cltd
xchg
or
sub
dec
lret
stc
jmp
lods
dec
out
pusha
int3
lahf
out
hlt
adc
add
mov
adc
leave
pusha
cmp
and
mov
pop
mov
cwtl
shll
scas
flds
pop
test
or
sbb
cmc
hlt
and
daa
mov
add
orb
cmp
dec
in
pop
mov
mov
mov
cwtl
pop
jle
clc
imul
std
lcall
pop
rcrl
xor
pop
pop
nop
xchg
imul
lret
lret
xlat
sbbb
nop
test
nop
das
fs
inc
push
and
cmp
hlt
jnp
lock
xchg
scas
add
dec
mov
movsl
jne
pusha
leave
inc
cwtl
add
sub
orb
xchg
push
movsb
test
jle
arpl
or
push
push
outsl
imul
das
rep
aam
xlat
icebp
add
aad
dec
dec
dec
sub
test
hlt
mov
add
shlb
mov
in
or
adc
int3
sub
xor
lahf
mov
out
bound
cmpsl
sbb
add
in
out
lds
test
push
imul
lahf
fistpl
repnz
mov
cmc
fidivl
or
push
jmp
cli
jo
xlat
aad
xor
xchg
decb
cs
jl
adc
gs
mov
sub
mov
fbld
mov
aas
out
sbb
sbbb
jbe
push
add
lea
add
or
jge
pop
pop
loope
inc
dec
fmulp
jo
outsl
lret
add
ds
insb
outsl
and
rclb
xlat
mov
lods
scas
pop
aas
fildl
push
add
popf
lea
jp
mov
inc
mov
jmp
and
test
push
cmp
mov
adc
out
push
sbb
and
scas
ljmp
or
fcomp
mov
mov
push
jg
div
inc
cmp
or
lcall
repnz
fsubrs
pop
push
fucom
jmp
leave
scas
xchg
test
inc
test
gs
test
xchg
iret
push
mov
testl
xor
mov
cmp
mov
adc
fldl2e
movb
push
dec
inc
shlb
test
andb
arpl
nop
inc
xchg
adcl
push
mov
int
aad
add
fistpl
test
sub
stos
inc
call
xchg
inc
in
and
sbb
dec
outsl
dec
out
mov
fistps
iret
mov
pop
mov
mov
lock
xchg
and
xchg
pop
jns
popa
and
imul
jbe
sub
stos
call
mov
ljmp
add
xchg
shll
jecxz
out
jg
dec
add
xchg
xchg
cmp
xchg
inc
jno
jl
inc
lds
idivb
lcall
cli
or
cwtl
insl
daa
in
in
cwtl
test
ret
mov
scas
dec
or
sarl
mov
inc
icebp
pop
arpl
enter
lret
outsl
mov
jb
pop
xchg
jmp
jg
test
dec
rorb
aaa
mov
rol
mov
cwtl
cwtl
das
pop
mov
mov
jo
mov
repnz
push
mov
pushf
es
arpl
inc
inc
fucom
pop
sbb
dec
out
into
mov
jecxz
stc
aaa
outsl
sub
dec
add
add
mov
push
fs
sahf
clc
lock
mov
inc
push
sbb
or
xchg
inc
insl
dec
mov
jp
mov
in
sahf
lea
fstpt
ss
sub
dec
insb
push
mov
cmc
mov
jno
push
mov
dec
call
xlat
push
pop
lret
xchg
seto
mov
stos
movsb
addl
mov
in
pusha
lret
or
mov
push
xchg
insl
shll
dec
inc
mov
xchg
or
test
call
stos
push
test
scas
mov
mov
cs
cmpsb
and
cs
arpl
adc
into
stos
sbb
aaa
xchg
clc
xor
rcll
lahf
push
mov
mov
or
decb
inc
movsb
mov
mov
xor
push
xor
leave
aam
iret
gs
push
test
fcomip
out
lock
sbbl
inc
scas
repz
ror
mov
ror
mov
addr16
or
jmp
push
dec
and
repnz
push
inc
test
pop
movsb
popf
es
xchg
xchg
out
mov
mov
int
add
mov
loopne
cltd
sbb
les
or
mov
jo
and
adc
repnz
mov
xchg
sbb
stc
ss
call
popa
mov
mov
rcr
xchg
les
test
cmp
aaa
fs
add
push
sbb
mov
pop
fucomp
xor
fsubrl
ret
inc
adc
ficomps
mov
test
hlt
mov
loope
cmp
and
pop
out
cmpsb
add
jnp
syscall
scas
xor
adcl
mov
stc
xor
mov
jle
popa
cmp
addl
orb
xor
push
jae
imul
sti
idivl
xchg
sbb
ja
adcl
sub
lcall
dec
pop
test
or
mov
shll
hlt
lret
pop
lahf
push
shl
and
jl
outsl
add
and
push
push
inc
sub
push
lods
sub
test
call
dec
enter
jae
scas
loope
push
fidivl
pop
xor
mov
adc
xor
fs
loop
adc
push
ret
lea
pop
lcall
jo
jns
mov
cmc
test
lds
dec
push
jns
and
sbb
and
gs
lods
addr16
repnz
sahf
xchg
jle
nop
xor
push
call
add
sub
cwtl
pop
inc
sbb
aas
popf
icebp
push
add
adc
push
adc
scas
add
loope
mov
mov
mov
sahf
fwait
ret
adcl
fwait
push
or
adc
inc
jae
mov
xor
inc
ljmp
dec
imul
jp
push
outsb
mov
bound
xor
aam
test
inc
sbb
in
popf
loope
jl
lods
ficomps
and
mov
push
jle
pusha
fbstp
aas
cmp
add
inc
add
push
jae
jns
adc
push
repnz
mov
mov
cltd
adc
popa
ds
movsl
imulb
popa
insl
aas
sub
ret
jg
repz
int
xor
cmpb
adc
lret
outsb
jne
pop
adc
imul
sub
sub
inc
jp
inc
dec
aas
mov
scas
mov
popf
repz
adc
sbb
cmp
call
pusha
loopne
out
aas
push
sub
xor
ja
mov
inc
addr16
fsts
icebp
sbb
test
and
mov
stos
push
fs
inc
int
jge
scas
mov
fidivrl
add
xchg
push
jb
lret
test
out
jnp
add
out
push
inc
aam
cs
push
mov
dec
mov
inc
js
add
cmp
and
adcl
push
insl
mov
pop
sbb
xchg
sbb
daa
cli
xor
push
jge
sti
aas
vorps
xchg
push
fisttpl
jbe
mov
cltd
mov
mov
pop
das
test
out
shll
aam
xor
inc
test
add
jmp
in
fs
out
push
jl
push
mov
adc
push
sub
push
push
push
jno
mov
mov
add
or
xor
xchg
outsb
mov
add
inc
ds
jne
jl
lret
and
rclb
pop
add
aas
inc
xchg
adc
aaa
pop
push
fwait
hlt
movsb
mov
stc
push
and
hlt
push
sbb
pop
pusha
or
ss
ret
cmp
mov
sub
or
sub
dec
mov
in
dec
adc
and
call
push
mov
dec
sub
imul
jmp
jb
sub
pop
jp
inc
cmp
fldt
fmull
mov
inc
xchg
stos
psubq
data16
xchg
addr16
push
and
incl
push
cmp
and
jle
aad
das
pop
lods
daa
mov
mov
jmp
ficompl
dec
out
mov
dec
out
jns
cmp
and
and
xlat
hlt
lret
divb
insl
xor
jne
sar
jge
scas
xchg
aad
test
and
jns
dec
enter
jg
arpl
pop
scas
insl
aam
push
roll
mov
and
mov
pop
bnd
stos
and
mov
inc
push
dec
sub
mov
sub
cmc
rclb
mov
mov
jb
int
aaa
ljmp
and
mov
hlt
mov
rcll
or
cltd
es
dec
sbb
jge
out
sub
cs
inc
aas
les
jno
int
sbb
mov
mov
sub
xchg
jnp
jns
sarl
call
xlat
dec
ljmpw
pop
into
sbb
pop
jmp
or
test
xchg
push
outsb
xchg
push
push
test
dec
rcl
outsb
gs
subb
fcoml
mov
mov
dec
mov
outsb
ds
xor
cmp
lret
cmp
scas
sti
fdivrs
fisttpl
mov
roll
jnp
jno
jns
sbb
or
mov
pop
sub
push
out
mov
lcall
add
jnp
test
sub
leave
adc
sub
jge
test
outsl
xor
adc
ret
push
adc
fists
push
cmp
fwait
outsl
cmc
imul
xchg
inc
mov
xor
cltd
xchg
les
adc
xor
int
mov
xor
test
and
cli
xor
enter
dec
sbb
sbb
xor
or
ret
push
adc
cmpsl
cmp
jo
repz
pushf
movsb
push
mov
inc
and
or
xor
pop
xchg
dec
cld
rcl
ret
daa
xchg
add
jge
test
daa
xchg
add
jo
out
dec
ss
jo
sub
iret
xchg
dec
ljmp
andl
fldcw
in
cwtl
mov
or
sbb
enter
out
push
insb
inc
inc
add
or
and
je
xor
testb
pusha
sarb
sub
hlt
loope
sbb
push
dec
pop
gs
inc
out
icebp
rorb
inc
pushl
fnstenv
sbb
dec
push
scas
insb
dec
fsubs
leave
push
mov
mov
inc
mov
inc
push
pop
ss
loopne
fwait
push
cmp
call
std
jge
inc
call
sub
outsl
jge
jp
fistpll
jmp
inc
xchg
inc
loope
leave
ss
cmpsb
push
or
shll
jmp
cmovo
push
movsb
sbb
mov
push
lcall
sub
jnp
push
enter
xchg
xchg
jnp
loope
imul
jno
std
fwait
xor
xchg
add
xlat
fs
push
ds
sub
inc
xchg
pop
inc
xchg
or
jp
xchg
add
cmp
shll
xchg
pop
andb
xchg
pop
bound
mov
mov
test
shl
or
jmp
pushf
push
add
stos
or
jae
hlt
lds
mov
jge
push
pop
inc
js
lcall
xchg
ja
mov
jge
xor
jnp
negb
adc
test
jbe
inc
add
and
mov
inc
lret
push
stos
cmc
shr
jl
cmp
push
xor
cmc
sbb
lds
test
cmp
push
sub
mov
repnz
push
popf
mov
mov
outsb
frstor
pop
fmull
pop
sbb
jp
xchg
stos
cld
call
adc
pop
and
fdivp
jnp
adcl
or
rdpmc
xor
add
insl
imul
push
ja
pop
loopne
mov
adc
push
stos
xchg
loope
dec
out
cltd
xchg
or
fmull
lret
shlb
pop
xor
adc
ss
pop
cli
out
cmp
fwait
outsb
insb
cmp
leave
sub
jnp
push
xchg
das
aad
aas
adc
dec
xchg
xchg
faddl
push
fcompl
outsb
xchg
pop
popa
shr
ss
and
lcall
scas
lds
cmp
stos
les
aaa
popl
xchg
sbb
jecxz
push
inc
insb
test
imul
loop
xchg
dec
cmc
inc
popa
and
mov
jb
xchg
push
test
cmc
and
push
rcrb
xchg
and
jecxz
lods
mov
das
mov
shll
jno
push
das
sbb
into
cmp
dec
or
cmp
pop
push
pop
cmp
mov
aas
xor
pop
and
stos
push
dec
lock
or
mov
hlt
shlb
mov
mov
int3
nop
and
mov
std
xchg
das
daa
mov
stos
lret
jb
out
lahf
push
addr16
xor
mov
dec
pop
push
cltd
cmp
enter
sub
sbb
in
jns
inc
in
shlb
cmpsl
mov
lock
sbb
nop
mov
imul
mov
nop
dec
dec
stc
inc
push
mov
adc
mov
pop
fs
dec
push
mov
sbb
popf
add
movsl
sbb
adc
xchg
pop
bound
mov
daa
pop
aad
leave
mov
add
cmp
mov
sbb
imul
add
aas
mov
xor
imul
mov
fwait
das
push
mov
outsl
add
sbb
fprem
and
cwtl
mov
xor
scas
xor
pop
fwait
lock
mov
shll
mov
fstpl
test
testb
repnz
in
shrb
jmp
xchg
add
inc
sub
adc
jle
andnps
add
ds
enter
adc
inc
movsl
pop
pop
adc
xor
xchg
pop
fildll
imul
mov
add
repnz
sub
repz
stc
pop
push
sbb
loope
pushw
ret
rorb
add
pop
ret
add
outsb
fucomip
push
mov
daa
xor
loope
mov
xor
pop
sub
cmp
popa
mov
ret
inc
scas
dec
mov
in
cli
adc
mov
test
add
push
nop
and
test
ja
dec
inc
xchg
mov
dec
mov
inc
aad
adc
add
out
pop
dec
mov
iret
pop
fldcw
addr16
daa
inc
out
xor
fdivrl
xor
gs
mov
cmpsl
shll
mov
jnp
cwtl
cld
in
jl
sub
dec
inc
sub
pop
scas
jns
sahf
xchg
mov
dec
rorl
pop
in
loopne
shll
jp
scas
cmp
pop
adc
mov
mov
icebp
adcl
sbb
ret
mov
in
mov
sub
lahf
or
dec
in
push
insl
stos
sub
jge
lods
scas
xchg
mov
mov
fsubl
enter
or
std
aad
outsb
add
sub
sbb
jle
jp
lret
add
test
cmp
test
push
push
sbb
adcb
sbb
jge
mov
stos
std
sbb
jae
cmp
mov
inc
inc
fldcw
pop
adc
sti
mov
sbb
mov
push
insl
pop
ja
sti
mov
notb
adc
inc
arpl
or
gs
shll
outsl
mov
and
cltd
xor
lods
cltd
or
cld
push
je
mov
ds
pop
cmpsl
repz
fisttpl
cwtl
mov
or
xchg
les
sub
cmpsb
and
mov
cmp
fbstp
les
and
jmp
mov
inc
push
call
mov
push
shr
pusha
mov
xor
jg
mov
sub
xchg
in
movsb
sbb
xor
lods
les
dec
inc
out
imul
cmp
scas
popw
imul
fisubrl
lcall
sbb
sub
stos
arpl
insl
pusha
fiaddl
dec
stc
xchg
mov
and
nop
mov
and
mov
add
dec
shufps
cmpsl
xchg
aaa
mov
fildl
sbb
fbld
push
scas
cmp
lcall
push
sub
insb
jecxz
test
popf
inc
mov
adc
xchg
cli
xor
lret
adc
pop
jecxz
pop
push
push
enter
sarl
sbb
je
iret
movsl
cmp
sub
adc
arpl
testb
mov
cli
iret
inc
pusha
jecxz
in
faddl
inc
ljmp
mov
bound
dec
mov
push
add
push
xchg
jg
aas
mov
out
int3
outsl
lahf
fcompl
jae
mov
sub
cli
lea
or
ss
loop
dec
ljmp
lret
cmp
adc
push
mov
mov
fs
sbb
sbb
add
negl
dec
int
xchg
adcl
movsl
pop
xor
add
in
out
dec
push
lcall
ss
pop
psrlq
es
add
pop
mov
mov
dec
xor
insl
clc
pop
negl
sbb
lods
jecxz
enter
jge
aad
rcl
shlb
arpl
lods
jle
sub
ret
push
xor
dec
pop
jp
xchg
ficoml
in
cld
push
scas
push
fs
xchg
aas
cmp
movsl
fmuls
xor
cmc
das
data16
and
hlt
fs
mov
push
xchg
push
mov
arpl
pop
or
add
iret
cmc
xlat
mov
xchg
sub
cmp
sub
jb
lds
nop
cld
leave
arpl
dec
dec
roll
pop
mov
pop
cli
in
pop
xchg
push
inc
mov
push
or
cmc
loopne
add
mov
mov
dec
ljmp
testl
ja
les
lds
aaa
cltd
out
idivb
test
adc
push
cmp
stc
dec
cmp
notl
or
inc
icebp
mov
jmp
imul
out
inc
rorl
adc
jno
rorl
cwtl
outsb
shlb
ret
push
int3
test
mov
jmp
pop
jne
ss
insl
cltd
scas
iret
cmp
popf
jne
sub
jb
test
xlat
jl
sub
cmc
sub
arpl
movq
fcmovbe
stos
mov
in
jnp
mov
rcll
aaa
mov
xor
mov
mov
ljmp
mov
fsubs
and
jae,pt
xchg
lods
and
jmp
test
fildl
je
jae
popa
fildll
mov
pop
push
pop
cwtl
or
jb
mov
mov
shl
rcrb
lds
sti
les
cmpsl
out
ja
adc
sub
sub
mov
fldenv
mov
pop
push
sti
repnz
jnp
pop
and
push
inc
cmp
gs
xchg
outsl
rorb
fildl
pop
clc
out
stos
out
sbb
int3
mov
sub
loop
mov
cmp
or
js
or
fistl
loop
inc
aam
lea
pop
cmp
jno
call
mov
scas
in
mov
js
popf
sbb
sahf
std
cmc
into
fldl
mov
icebp
jbe
ds
scas
sbb
xor
jno
sar
ja
add
xchg
aam
push
jne
fildll
cld
imul
xlat
and
pop
sub
xchg
push
lcall
add
pop
clc
cmp
add
std
jmp
movsb
push
fidivrs
int
and
cmp
ss
fnstsw
scas
jmp
cs
ljmp
inc
push
mov
lds
call
pop
bnd
flds
push
in
out
dec
aas
pop
decb
inc
int3
mov
push
cmp
add
cmc
sti
adc
int3
cld
aam
xchg
mov
leave
push
fcompl
mov
push
call
in
mov
or
adc
xchg
mov
mov
add
push
int
faddl
sub
inc
movsl
jb
dec
lret
sub
imul
or
sub
cs
add
loopne
xchg
mov
inc
sahf
mov
lock
mov
push
push
mov
ret
pop
cltd
out
xchg
lret
push
xor
fdivr
push
mov
clc
cmpsb
inc
movsb
add
sbb
mov
mov
mov
sub
pop
rcrb
out
movsb
xor
push
lock
idivb
push
aaa
ret
loop
das
push
add
push
push
sub
mov
in
pop
lock
test
mov
mov
dec
pop
cli
inc
je
cli
dec
sub
adc
and
sahf
subb
mov
fisubl
dec
pusha
cld
pushf
jbe
hlt
xchg
ret
xchg
sub
mov
inc
out
lea
repz
pop
stos
mov
shlb
or
and
and
adc
fidivrl
dec
mov
test
movsl
lcall
or
add
jae
pop
cmovge
xchg
xor
pop
movsl
mov
movsb
les
ja
inc
sbb
test
test
xor
sarb
or
pmulhw
adc
push
adc
cvtdq2ps
outsb
jo
mov
dec
rcll
repnz
in
int
xchg
inc
dec
pop
jl
orl
adc
loope
or
cwtl
out
add
push
in
xor
mov
or
cwtl
add
stc
pop
jns
cmp
push
and
pshufw
test
and
push
adc
aad
xchg
sbb
outsb
testl
cmpl
adc
test
in
test
push
aad
xlat
or
fidivrs
dec
test
mov
dec
fiadds
jle
sub
pop
clc
pop
mov
adc
popl
jle
cmp
mov
nop
lret
stos
mov
imul
test
and
jns
fdivrp
std
lds
mov
push
jecxz
cmp
test
xor
insl
out
scas
ret
push
pop
inc
jle
jle
stos
mov
cmpsl
adc
test
inc
xlat
int
rcrb
and
idivl
lahf
or
cmp
add
jle
inc
mov
pushl
enter
lock
inc
hlt
sub
ss
scas
cwtl
adc
das
ss
outsl
xor
pop
mov
or
dec
daa
pop
stos
jnp
in
sarl
xchg
or
sbb
xor
pushf
pop
dec
movsl
in
cli
pop
sub
or
pop
mov
orl
mov
mov
mov
loope
sub
icebp
sub
sub
inc
inc
outsl
subb
lret
xor
add
call
add
cmp
cmpsb
pop
test
pop
mov
xor
cli
pop
or
add
hlt
repz
pop
push
xchg
pop
inc
mov
push
loopne
or
scas
loopne
arpl
movsb
repz
shlb
mov
dec
sub
jne
add
out
pushfw
test
loope
nop
or
add
inc
cmp
loop
sbb
scas
pop
xchg
xchg
repnz
sub
push
in
popa
and
gs
xchg
enter
inc
push
inc
add
daa
das
cmc
sub
repnz
popf
jne
jge
shl
push
je
es
jno
pop
xchg
cs
inc
jle
mov
mov
xor
jo
cld
jae
add
nop
jo
inc
push
repz
sbb
es
mov
mov
notl
pop
push
xor
lods
mov
jnp
ds
sbb
les
xchg
testl
push
stos
in
pxor
popa
add
push
adc
in
push
xchg
sub
or
pusha
lock
push
in
cmp
xor
fisubs
pusha
and
inc
mov
scas
add
repnz
pop
adc
insb
fcmove
xchg
int3
or
adc
hlt
pop
jbe
adc
clc
jecxz
shl
push
jecxz
cld
imul
rcr
shll
push
icebp
pop
jge
in
ret
xchg
or
cmp
push
and
xchg
aam
jns
cmp
mov
aaa
shrl
les
xor
rolb
push
and
orl
stc
cmp
out
repz
ret
mov
das
mov
bound
cmpsb
push
pop
mov
stos
xchg
fstpt
add
setg
in
leave
loopne
inc
ds
sub
mov
hlt
xor
orb
cs
jae
aam
int3
repz
flds
cmp
flds
fwait
popa
cmp
inc
jp
mov
hlt
xchg
sbb
dec
or
test
inc
repz
or
cmp
push
dec
dec
xor
mov
mov
icebp
into
xchg
dec
dec
fisttpl
aaa
je
jmp
int3
sub
push
dec
lods
mov
add
push
jns
push
bound
insl
pop
inc
in
add
daa
popf
rcr
xor
sub
sub
pop
pop
or
lds
add
test
sti
push
aad
adc
test
adc
ja
sahf
add
movsb
lea
xchg
jo
flds
sub
and
iret
iret
out
push
xchg
lods
cld
shlb
loop
in
pop
or
sti
stos
adc
out
sbb
rol
sub
push
int
mov
and
lahf
or
inc
jmp
js
loop
aas
nop
call
mov
mov
ja
ret
lret
inc
movsb
movsl
inc
ret
mov
outsl
ljmp
and
inc
fcmovnbe
sahf
in
stos
in
sub
xchg
dec
daa
in
fsubl
jo
push
das
inc
int
and
sbb
inc
mov
lahf
lock
and
cmp
out
nop
xor
jno
or
lret
jnp
inc
jp
cmp
add
lahf
lea
das
into
sub
mov
imul
mov
ret
imul
into
popfw
jb
jecxz
fcompl
inc
and
push
mov
cmpsl
xchg
sub
jno
sti
push
mov
cmp
adc
push
mov
lret
jo
push
in
sbb
cwtl
repz
inc
aad
out
jo
dec
xor
cmp
bound
iret
movsl
inc
pop
add
arpl
pop
push
loope
rol
ss
repz
jns
dec
pop
dec
xchg
mov
cltd
es
cli
adc
and
push
dec
push
jae
mov
push
push
mov
cltd
insb
push
or
push
fwait
lahf
test
dec
mov
inc
add
nop
pop
dec
dec
push
ljmp
in
cmp
mov
sub
iret
adc
dec
inc
lcall
adc
xor
xchg
pop
jp
cltd
and
xchg
call
pop
mov
pushf
hlt
mov
outsb
jle
mov
jbe
dec
sar
in
cmp
sbb
into
jne
test
cmp
inc
mov
sub
sbb
mov
je
loop
pop
addl
aaa
lahf
dec
sbb
mov
mov
ja
adc
enter
jmp
shlb
inc
mov
cmp
xor
push
sbb
adc
loope
xor
jge
in
testl
shll
cmc
pop
dec
daa
and
dec
xchg
dec
mov
mov
and
icebp
daa
dec
daa
data16
sti
and
and
mov
movsl
repnz
popa
cmp
jmp
lcall
and
sub
add
jecxz
stos
int
inc
pushf
or
pop
fsubs
jge
leave
incl
xchg
in
outsb
cmpsl
leave
mov
fisubs
lds
adc
pop
cmp
arpl
push
flds
or
mov
push
sbb
lret
push
pop
cs
out
enter
pop
out
mov
nop
mov
iret
add
mov
pop
in
xor
je
movsb
mov
jp
pop
jle
out
out
lods
repz
xchg
stc
dec
sub
sarb
ficompl
imul
loope
mov
inc
jg
sub
xlat
pop
cld
fninit
mov
inc
or
addb
cmp
mov
in
mov
jl
or
fistpll
lea
repz
push
cmp
loop
out
fs
test
xlat
arpl
pop
cmpsl
sbb
outsl
push
test
test
loop
leave
jno
or
or
jge
lock
jns
mov
xor
pop
mov
dec
std
gs
sbb
sbb
test
push
sbbb
jle
mov
pop
std
xor
repz
jb
push
or
addl
dec
xchg
sub
cmp
dec
mov
mov
xor
pop
mov
je
xchg
aad
in
shlb
lods
je
dec
add
inc
stos
add
push
sub
xor
testb
clc
cmp
pop
xor
inc
sub
sub
adc
or
push
fistpl
fsubrp
cmc
popa
mov
dec
cwtl
addl
jp
sub
inc
mov
out
mov
repnz
and
jo
in
xchg
ret
cmp
xor
xor
pushf
push
lcall
sub
jge
imull
xchg
push
aam
sub
mov
push
je
pop
pop
dec
cmp
xlat
sub
xor
mov
lahf
fs
xchg
jle
test
dec
pop
andl
aaa
cmp
mov
mov
sar
dec
shll
mov
rcl
ror
mov
sub
dec
das
ret
fs
rol
push
cwtl
inc
inc
int
insl
pusha
popf
pushf
sahf
inc
hlt
scas
cmpb
xor
out
push
mov
out
sti
mov
sub
in
sbb
stos
test
shll
lcall
push
outsl
mov
arpl
mov
sub
mov
das
hlt
sub
jne
ss
adc
pop
jae
xor
inc
iret
lods
and
int3
adc
in
sbb
insb
outsb
mov
test
enter
inc
inc
jmp
fisubl
jae
jns
out
xor
mov
adc
jle
in
mov
and
cs
pop
aas
add
imul
inc
fdivr
mov
test
lods
push
or
push
idiv
jnp
jns
mov
mov
push
mov
push
jo
and
xchg
and
cmc
xor
mov
ret
jo
adc
xchg
cltd
sub
leave
or
fldt
adc
cmp
xor
roll
xchg
int3
dec
in
cmpsl
xchg
adc
mov
dec
push
loope
add
adc
ja
sub
addr16
adc
fisttpl
sbbb
inc
rep
pusha
adc
es
sbb
sub
int3
insb
insb
lds
push
mov
jmp
jne
mov
and
into
out
pop
cmp
dec
add
fmul
cmp
jne
mov
imul
and
mov
clc
negb
ds
jecxz
pop
add
mov
push
popa
loop
fwait
adc
test
push
xchg
pop
jge
xchg
or
cwtl
sbb
sbb
scas
icebp
adc
mov
mov
lcall
and
xchg
rcr
jbe
fisubrs
andb
push
jmp
test
lea
fidivl
lds
nop
popa
popa
stos
or
or
bound
mov
addr16
or
cwtl
in
and
movsl
clc
push
mov
mov
inc
and
and
mov
and
xor
adc
inc
xor
cmc
loope
jp
mov
adc
add
inc
neg
mov
fiadds
mov
mov
not
add
mov
and
out
test
fdivl
or
fstpl
mov
lret
ficoml
jno
in
orb
adc
sub
pop
call
sahf
stos
add
jne
aas
pop
cmp
stos
xchg
dec
in
repnz
jle
cmpsb
sub
div
stos
push
pusha
scas
or
inc
mov
cmc
insb
out
dec
ja
sub
xchg
das
mov
jo
and
xchg
les
push
xlat
mov
iret
sbb
in
and
and
hlt
lret
dec
jne
adc
sahf
mov
jmp
mov
lods
mov
dec
add
mov
push
pop
push
outsb
mov
mov
push
push
bound
adc
or
aas
inc
gs
cmc
pop
xchg
sub
dec
pop
out
add
xor
test
aaa
adc
arpl
bt
rolb
das
mov
sub
repnz
xorl
and
das
movaps
dec
adc
mov
dec
cli
push
sbb
xchg
and
sub
jge
lret
insl
lods
or
push
cltd
inc
cmpb
mov
sbb
xchg
inc
add
hlt
imul
imul
ljmp
shll
shrl
jb
lods
into
rsm
rorb
xor
jae
xor
cmp
mov
dec
push
call
mov
pop
adcb
mov
and
out
jae
inc
test
adc
shlb
mov
push
inc
fldl
inc
test
dec
outsb
inc
pusha
les
xchg
sub
or
pop
mov
ret
pop
or
push
inc
lods
cwtl
cltd
pop
cmc
loopne
adc
cld
cmp
or
sbb
test
add
les
jp
xchg
scas
pop
lea
xchg
test
sbb
xlat
xor
in
mov
cmp
cs
jmp
mov
and
shl
fs
sbb
into
outsb
cs
ljmp
fcomps
into
sti
push
pop
sub
addl
xor
dec
insl
int
sbb
sub
jno
mov
pop
jno
inc
add
das
out
adc
les
notb
cld
adc
xchg
mov
addr16
lds
sub
or
adc
mov
mov
mov
lea
mov
cmp
in
cli
arpl
jmp
stc
inc
mov
add
jmp
jmp
jno
push
push
ficomps
addr16
lea
lret
sub
add
push
jne
jae
xchg
xchg
rcl
jno
out
dec
lahf
aas
hlt
mov
les
repz
test
add
sub
mov
movl
inc
fdivrs
lcall
push
xor
adc
push
insl
fldl
scas
mov
jmp
test
ror
jno
repz
jne
movsb
mov
sub
mov
jns
jno
pusha
mov
mov
push
loope
xor
ja
pop
inc
add
imul
shlb
cltd
popf
sub
mov
inc
in
repnz
push
ret
movsl
jno
dec
aad
int
repz
clc
mov
decl
and
and
push
sbb
push
pusha
bound
jmp
lret
test
push
dec
xchg
cmpsl
stos
jnp
popa
imul
hlt
in
iret
cmc
icebp
and
inc
gs
clc
cmp
jmp
stc
fsubrl
and
repz
fidivrs
addb
int3
sub
inc
inc
inc
cmpsl
pop
mov
js
cld
pop
mov
es
stc
pop
push
dec
add
outsl
pop
movsl
inc
orb
push
stc
mov
push
add
push
lea
pop
sbb
into
jle
sbb
mov
mov
and
lret
inc
push
inc
sbb
push
lret
loopne
fimull
cmp
inc
mov
jle
add
lods
inc
mov
inc
sti
popa
stos
sbb
subb
mov
mov
in
ljmp
loop
dec
add
pop
jge
xchg
dec
stos
outsl
mov
aaa
fmull
clc
outsl
sbb
pop
rclb
repz
push
mov
or
inc
add
lcall
inc
or
xor
jle
add
lret
xchg
and
mov
inc
ret
mov
mov
lcall
jl
addb
jg
inc
adc
jp
scas
push
repz
loopne
popf
add
and
inc
test
ss
dec
pop
mov
cli
cmpsb
xchg
ds
lea
cmpsl
mov
aad
pop
iret
cmpsl
notl
and
or
bound
jo
push
pop
sub
shll
out
pop
cmp
pop
pop
jecxz
sub
popa
jg
and
mov
pop
xlat
leave
jmp
inc
fnstcw
out
xchg
sbb
or
fmuls
in
into
rclb
mov
adc
test
test
loopne
ljmp
xchg
ficomps
or
icebp
lret
fs
jnp
push
xor
daa
popf
push
or
lret
aad
pop
dec
push
cmp
fmulp
dec
dec
mov
mov
xlat
cmp
jmp
inc
negb
push
cmp
lods
dec
jmp
sbb
lea
ret
adc
test
pusha
push
push
push
dec
mov
jae
pop
stc
arpl
rcl
cli
mov
es
cltd
mov
in
push
cmpsb
lahf
lret
movb
lret
loopne
popf
adc
repz
jae
cmpl
sbb
mov
sbb
enter
call
xor
leave
int
ja
lock
icebp
mov
imul
cwtl
cmpsl
les
into
ret
push
imul
pushf
adc
cmpsl
idivl
sub
add
adc
push
and
cmp
nop
into
push
xchg
mov
lods
pop
in
mov
stos
fimull
adc
dec
push
push
adc
mov
lcall
imul
push
inc
inc
pop
aaa
and
or
push
adc
jbe
cmpsl
sbb
cltd
movsb
fwait
pop
xlat
popf
into
stos
sbb
in
pushf
jle
inc
jb
push
fdivs
dec
cmp
stos
cmpsb
loopne
aam
dec
daa
inc
xchg
cmp
inc
sub
push
in
inc
xor
inc
sbb
arpl
or
push
ficomps
mov
jecxz
int
cwtl
cwtl
std
mov
mov
repz
xor
jge
outsb
jbe
xchg
out
js
insl
inc
cltd
jmp
xchg
mov
dec
push
loopne
jns
test
mov
rclb
or
mov
notb
outsl
dec
xorb
jne
test
movsl
clc
or
and
sub
add
out
mov
cmp
sti
xor
bnd
insb
rol
ficompl
imul
xchg
push
sbb
jle
fcompl
xor
repz
es
jb
frstor
fcmovbe
xor
mov
inc
fdivr
leave
add
fstpl
xor
jg
out
stos
push
pop
shll
push
ss
lgs
jecxz
push
sbb
xchg
out
push
sarb
cmp
add
mov
sbb
mov
fidivs
dec
cmpsl
xchg
or
xor
dec
iret
movsb
mov
pop
mov
sub
sub
popf
sub
repz
adc
lahf
je
gs
xchg
fcmovu
sbb
notl
stos
mov
les
outsl
fnstenv
scas
pop
xor
mov
movsl
movb
ljmp
enter
sarl
aas
outsb
lds
pushf
mov
int
add
sarb
fucomp
push
pop
add
sub
insb
inc
lea
call
mov
iret
sti
insb
or
imul
fpatan
and
xlat
pop
mov
jns
push
in
sub
rcll
in
outsb
idivb
push
fiaddl
pop
clc
fcomip
pop
lcall
pusha
iret
cmp
dec
ds
lds
or
jecxz
mov
mov
xchg
sbb
and
insl
cmpsl
sbb
pop
xor
inc
outsb
pop
repz
cmp
outsb
mov
out
or
xor
sub
push
xchg
std
outsb
mov
or
adc
mov
fwait
lcall
xor
in
xchg
or
inc
js
hlt
push
cwtl
mov
jnp
jmp
xor
mov
sub
sub
add
mov
xchg
dec
in
jno
inc
fucom
das
add
mov
int
lock
cmp
sub
jmp
roll
iret
push
lds
fnstenv
ret
in
call
mov
and
movsb
xor
fstpl
sub
aaa
jl
mov
in
nop
aad
cmp
pop
loopne
cltd
pop
dec
bound
push
cmc
xchg
cld
gs
incl
add
add
adc
fwait
jne
fistpll
or
cmp
push
inc
xor
jp
popf
or
mov
mov
xor
clc
adc
out
sbb
repz
jae
add
mov
and
es
inc
pop
ficoml
push
and
pop
je
stc
xchg
adc
aas
mov
mov
or
out
dec
jns
sub
scas
mov
icebp
ss
leave
sbb
mov
cmp
and
pop
repnz
inc
pop
fsub
and
lahf
arpl
xchg
or
jp
stc
mov
fldt
cmp
lds
mov
aaa
mov
daa
push
and
inc
xchg
inc
aaa
sbb
dec
push
or
js
scas
aad
mov
popl
push
icebp
cmc
mov
mov
jmp
pop
inc
xchg
nop
push
xchg
cli
mov
jl
mov
and
dec
cmp
mov
or
jmp
gs
adc
fildll
add
mov
jecxz
notl
add
jo
inc
les
ss
cld
int
scas
adc
in
ret
outsl
imul
enter
dec
andb
cmpl
xchg
add
jg
mov
mov
push
jo,pt
jmp
rsqrtps
cmp
xchg
lret
jo
adc
hlt
dec
jmp
push
dec
inc
ds
lods
fwait
in
inc
push
pop
stc
lock
test
add
mov
push
mov
in
inc
jbe
lds
pop
push
xchg
dec
pop
and
or
xor
repnz
sbb
sub
inc
in
ret
xor
jg
adc
arpl
aas
not
mov
test
addr16
mov
xor
fwait
add
pop
int
test
cmp
jle
mov
enter
mov
adc
adc
pop
ljmp
popf
and
call
fisubrs
dec
mov
jb
add
cmp
mov
sbb
dec
sbb
inc
cltd
mov
cs
sbb
mov
mull
flds
outsl
mov
xor
cmc
jne
int
jp
outsl
xor
mov
int3
dec
push
sbb
in
inc
or
or
jns
and
jp
shrb
fs
mov
xor
mov
push
pop
fcmove
iret
mov
dec
cmp
inc
test
out
std
in
push
xchg
xchg
cltd
dec
cmpl
pop
pop
jge
popa
inc
cwtl
and
pop
ss
adcl
iret
cmp
enter
jg
push
adc
xchg
sbb
mov
hlt
loopne
adc
jns
sub
lret
push
pop
loop
in
cmp
mov
insb
aaa
mov
mov
jne
out
fnstsw
jp
and
or
fiadds
cmpsl
adc
and
add
fcom
lods
pop
dec
xchg
pop
shrb
xchg
jle
and
outsb
ljmp
movb
cltd
push
sbb
or
in
pop
add
mov
or
std
shl
cltd
jns
ficoms
mov
packuswb
stc
movl
xchg
ret
shlb
out
rcll
cmp
repnz
xchg
mov
add
or
cmp
inc
out
mov
insb
xor
imul
push
jns
int3
je
into
pop
int
cmp
lds
pop
xorb
mov
mov
xor
xchg
mov
sub
gs
sahf
pop
daa
or
sarb
or
dec
xor
fisttpl
in
pop
in
ror
cmp
fs
mov
xor
js
mov
pusha
imul
not
cmp
mov
jge
int
orb
addr16
lret
sti
jb
rcrl
subb
lock
mov
test
sub
mov
push
mov
fmull
ret
shrl
lret
jae
dec
push
loope
call
jne
inc
and
cltd
or
repz
add
repnz
mov
mov
pusha
or
roll
ljmp
cmpsl
xchg
pop
push
jecxz
std
or
dec
inc
inc
or
test
jle
dec
cmpsb
or
cmp
pop
int3
fnstsw
and
aad
adc
lods
fdivrl
insb
mov
push
mov
sub
stc
jmp
pop
aas
adc
xchg
cmpsb
aaa
push
mov
pop
or
dec
aas
mov
ret
sub
bound
icebp
in
out
icebp
sbb
push
test
sbb
movsb
test
test
sub
into
push
push
lret
ja
sti
or
aad
shlb
ja
or
xchg
and
ljmp
aad
pop
cwtl
cs
xor
mov
mov
push
popf
daa
inc
lcall
in
testb
shr
inc
jo
mov
inc
clc
add
cmp
mov
fwait
hlt
test
pop
rcrb
rcrl
cs
push
movsl
int
ret
test
mov
sti
pusha
jns
cmp
push
sbb
bound
adc
sqrtps
xor
jge
test
mov
cmp
xor
pop
or
int3
test
jge
scas
pop
mov
ja
xchg
mov
mov
aad
xchg
and
add
push
lods
inc
pop
push
sti
sub
push
cwtl
or
and
xor
adc
pop
pusha
shr
pop
pop
jmp
fisubrl
cld
adc
rcl
inc
mov
stc
pop
cli
shl
das
xchg
cltd
pusha
loop
gs
out
das
mov
je
inc
mov
ror
pop
pop
aas
mov
or
push
cmc
test
ret
or
cmp
pop
and
sbb
sbb
ss
adc
add
sub
mov
adc
fmul
bnd
test
dec
sub
negl
out
je
add
sbb
jne
xor
jbe
and
in
enter
pushf
sub
mov
xchg
jno
cmp
rcll
faddl
pop
xchg
pop
aad
jle
mov
js
push
leave
ret
cmp
aas
push
rorl
pushf
pop
dec
and
shll
fnsave
ret
je
adc
addr16
mov
sub
fidivrs
jl
mov
or
push
das
and
mov
and
mov
jb
xchg
data16
rorb
popf
lret
inc
xor
push
cmc
loope
cmp
push
lock
jl
dec
movsl
es
movsb
mov
xchg
mov
imul
call
inc
outsl
sbb
incl
iret
popf
xchg
ret
xchg
jae
mov
out
adc
addr16
xor
ficomps
pop
scas
pop
push
mov
cmp
iret
sbb
lahf
adc
bound
jg
sub
or
daa
jno
lea
adc
mov
dec
add
rclb
iret
pop
call
fstp
mov
dec
or
xchg
sub
and
test
into
cmp
scas
mov
sub
jne
push
out
push
pop
push
testb
xchg
xor
mov
in
inc
lcall
or
lods
dec
sbbb
repz
jmp
push
mov
repnz
adc
je
xchg
jmp
inc
fdivl
mov
fwait
insb
pop
jl
inc
jns
mov
mov
pop
xchg
xorl
into
dec
sar
mov
roll
jp
mov
jge
cmp
test
call
pop
ja
clc
pop
fistl
jmp
dec
or
in
test
rorl
fdivs
in
xlat
ror
jnp
cmpsb
std
xor
sbb
sbb
loopne
fsubs
xchg
pop
stos
mov
imul
das
jae
xchg
mov
data16
hlt
sbb
dec
push
dec
xlat
and
pop
in
outsb
jnp
mov
mov
shr
jmp
jle
test
mov
stos
lret
mov
loopne
mov
sub
add
loope
cmp
push
sbb
mov
sahf
sbb
out
cli
nop
xor
cld
sub
std
adc
lock
jl
cli
shrb
inc
out
in
xorb
cmp
fs
je
js
rol
pusha
clc
addr16
test
hlt
inc
mov
dec
pop
adc
add
dec
sahf
sub
daa
xor
and
cmp
int3
scas
fwait
cmp
mov
addr16
ret
popf
mov
and
or
cmp
iret
sub
popa
mov
cltd
cmp
xchg
push
cwtl
jle
insb
cmp
fstps
xor
stos
push
push
loopne
inc
sahf
xchg
mov
mov
sbb
das
lea
loope
repz
pop
pop
mov
cli
scas
adc
mov
inc
mov
hlt
test
add
ds
imul
test
int
ret
lcall
cs
mov
pop
and
sub
repz
cmp
out
or
dec
clc
xorb
sbb
mov
mov
popf
andl
fs
jae
mov
sbb
push
xor
fistpll
mov
cwtl
sbb
ret
ret
bound
xchg
aaa
jno
aaa
ljmp
es
mov
cmc
mov
lods
lret
into
inc
jl
test
icebp
jecxz
jge
push
dec
in
push
push
sbb
mov
or
aad
sbb
mov
add
pushf
in
adc
xorb
fsubs
andb
loop
jne
ds
fsts
inc
cli
add
cmpl
and
lcall
mov
dec
inc
jecxz
mov
cmp
dec
xchg
fimuls
cld
jb
add
mov
stos
imul
shrl
imul
pop
pop
xchg
mov
cmp
cmpsl
jno
cmc
popa
sbb
adc
add
cmp
mov
mov
jo
mov
push
mov
fsubs
inc
out
lods
mov
jg
stos
inc
aas
dec
adcl
dec
ror
loop
call
xorl
dec
scas
loop
sbb
inc
das
mov
pop
pop
add
and
push
xchg
cmc
xor
push
imul
cmc
and
call
jle
dec
insl
enter
sub
sub
repnz
push
mov
jecxz
jns
sub
test
pop
push
add
jg
dec
stos
das
sub
add
aam
push
ds
mov
outsb
mov
scas
in
mov
movsb
dec
and
or
int
xchg
pusha
mov
jno
push
pop
lock
sub
cmpsb
clc
shlb
test
pop
int3
push
outsl
ret
fldcw
mov
jle
xor
mov
mov
mov
xchg
cmp
shl
xor
loopne
dec
dec
mov
int3
dec
xor
cmp
mov
mov
cmpsl
xor
dec
out
and
lret
idiv
xchg
pop
inc
and
add
imul
aas
addr16
rcrb
and
jle
ja
leave
inc
xchg
sbb
lock
roll
inc
sub
push
xor
xchg
mov
mov
fsubrl
cmp
jle
push
cld
leave
std
icebp
pusha
xchg
xor
loope
inc
mov
xlat
lods
push
xchg
dec
outsb
pop
rdpmc
int3
ja
test
das
jno
lcall
pusha
dec
movsb
ljmp
bound
hlt
sbb
sbbb
xchg
sub
mov
in
test
and
pop
popf
pop
js
and
std
fs
inc
mov
or
into
iret
mov
lahf
js
mov
ds
mov
popf
aam
in
cmp
notb
out
cmp
gs
scas
inc
jmp
xor
push
ret
std
push
arpl
hlt
cld
jp
mov
pop
mov
mov
bnd
stc
ror
xor
xor
sbb
in
cmp
sub
aas
mov
out
cmovs
mov
in
mov
jl
xchg
mov
das
movsb
inc
inc
ds
xchg
out
insb
lea
repz
imul
dec
fimull
imul
pusha
stc
sub
jge
loope
pop
sti
psubd
jecxz
push
xchg
aad
lret
js
ror
and
push
or
lret
xor
loop
hlt
push
mov
stc
std
out
cmpsb
xchg
or
mov
clc
addr16
xor
test
cmp
or
negl
push
or
les
in
pop
aad
add
cltd
daa
sbb
inc
mov
in
mov
jle
and
imul
ss
and
mov
pop
mov
mov
test
lods
dec
xor
mov
mov
pop
push
jae
push
fiaddl
mov
mov
mov
mov
ret
adc
fcmove
push
mov
jmp
aaa
popf
ja
fdivl
xchg
lock
test
stos
cltd
pop
add
into
cwtl
sbb
or
cmp
inc
jae
call
mov
inc
jno
or
loopne
jb
mov
mov
push
cwtl
xor
outsl
xor
sarb
jle
or
popa
dec
adc
mov
std
pop
lret
jae
add
inc
cmp
xchg
mov
lock
icebp
add
fdivrl
pop
popa
dec
mov
dec
jns
xor
mov
push
pop
icebp
mov
sbbl
inc
sub
sub
test
cmp
scas
pop
aad
xor
insb
mov
push
jo
jge
fidivl
testw
mov
dec
add
nop
xchg
in
xchg
sub
loopne
cltd
popf
xor
sbb
xchg
in
das
aas
push
add
pop
jp
stos
mov
mov
les
fsubr
push
mov
jae
pop
xlat
dec
add
repnz
loope
xor
sub
decb
out
mov
and
jmp
stos
cwtl
movsb
push
lret
stos
lldt
sub
adc
inc
push
scas
push
dec
sbb
out
nop
cld
add
push
pop
jne
and
outsb
mov
xchg
fisttps
arpl
shlb
mov
ljmp
in
push
xlat
or
mov
pop
repz
mov
sbb
popa
push
push
add
jb,pn
lods
enter
hlt
sbb
push
lods
push
push
add
data16
mov
out
mov
loopne
cmp
adcb
and
push
adc
pop
jmp
adc
jge
nop
pop
cwtl
jmp
out
int
sbb
stc
lds
sbb
fdivrl
test
mov
or
sub
xchg
aad
mov
je
je
shlb
pop
sti
jecxz
fs
out
mov
bound
je
xorb
xchg
or
push
dec
jne
and
xchg
mov
es
push
rcrb
inc
cmp
sub
xchg
enter
repz
mov
mov
sbb
or
xchg
pop
mov
aaa
insl
add
and
in
mov
enter
jmp
or
inc
imul
das
push
xchg
push
aam
mov
pop
push
call
into
shlb
daa
cmp
in
add
leave
mov
push
mov
cmp
lea
jbe
push
shll
bound
std
xlat
jle
or
ljmp
push
adcl
popf
jp
cmpsl
jo
inc
push
jns
out
or
popf
test
enter
push
jo
sbb
xor
pushf
mov
dec
pop
clc
inc
repnz
dec
popa
cmp
mov
add
sub
jmp
jne
daa
in
jnp
mov
lds
add
andb
insl
jl
sbb
pop
pop
in
or
mov
adc
xor
outsb
pop
cmpsb
or
and
data16
jns
js
into
push
sbb
adc
adc
roll
or
mov
in
iret
cmp
mov
nop
test
sbb
fldcw
mov
pop
cmp
push
adc
xchg
fcmovu
adc
jo
scas
cmp
adc
dec
mov
push
cmp
lcall
stos
dec
into
add
push
add
outsl
js
call
push
and
enter
in
add
mul
sub
cwtl
inc
xchg
sbb
shll
scas
cwtl
in
push
adc
push
and
rol
or
adc
enter
js
or
bound
stos
pop
ds
fdivp
popf
xchg
divl
mov
mov
adc
mov
cmp
std
popa
fucomi
pop
inc
cmc
das
jmp
out
shll
pop
sbb
sbb
sub
shrb
stc
in
mov
roll
jns
mov
rcrb
clc
sti
and
xor
sbb
aam
push
addr16
xor
sub
pop
cmp
stos
sub
fcmovnb
mov
xchg
mov
dec
mov
adc
daa
mov
inc
xchg
inc
xor
cltd
mov
scas
jbe
mov
nop
adc
add
lcall
pop
cmp
push
fisubl
push
fsubrl
xor
sbb
in
js
mov
mov
lcall
xchg
sub
sbb
mov
mov
js
push
add
mov
fcoms
xchg
imul
xor
loope
fsubr
movsb
inc
xor
test
xchg
rorb
add
lret
sarb
mov
repnz
add
jb
jl
arpl
jo
push
mov
orl
ja
pushf
cmp
mov
stos
add
bound
cwtl
lahf
xor
and
mov
sbb
cmpsl
fnstcw
lahf
ret
or
imul
push
or
inc
lods
xchg
incb
add
out
cmp
movsb
js
movsb
call
clc
jns
add
mov
jp
pushf
lret
inc
cmp
jno
add
add
aad
sbb
fbld
xor
push
add
lcall
push
es
jb
repz
sti
out
xlat
in
scas
mov
jp
call
sbb
jnp
mov
mov
add
int3
repnz
mov
sub
sbb
xor
sti
jg
fnstsw
imul
jb
fiaddl
sbb
sar
mov
sbb
pop
sti
mov
jmp
jle
jae
bound
lock
xchg
ja
pop
or
sbb
lret
nop
or
pop
mov
and
xchg
out
dec
adc
adc
fwait
mov
fimuls
in
pop
fcos
pop
lret
xor
call
push
pop
shlb
les
sub
in
lret
sbb
aas
cmpsl
add
jg
aad
iret
lods
or
imull
jge
or
sub
sub
add
mov
inc
lret
fldpi
push
push
dec
mov
xchg
adcb
xor
addr16
pop
xor
stc
dec
push
fldenv
icebp
mov
dec
adc
shlb
pop
mov
xor
jb
pop
shlb
mov
and
leave
add
enter
push
inc
adcb
idiv
std
and
loopne
mov
leave
inc
or
bound
inc
or
div
xchg
pop
mov
xor
lock
or
daa
and
lret
loope
xchg
push
add
cmp
inc
dec
lret
cmpl
jae
sub
bsf
sub
xchg
dec
dec
push
push
jecxz
pusha
pop
int
xchg
push
test
negb
ja
cmp
pushf
xor
stc
cmp
jp
xchg
sahf
into
mov
sbb
std
in
ja,pt
cmp
adc
cmp
in
xchg
push
or
clc
sbb
scas
xor
pop
and
and
mov
aam
and
shrl
js
jmp
incb
rorb
mov
cmc
cmp
jns
data16
xchg
lahf
or
cltd
sub
sub
leave
mov
outsl
stos
cmp
stos
mov
negb
lods
in
pop
adc
stos
das
ja
repnz
mov
jge
loopne
movsb
xchg
pushf
sub
mov
or
int
dec
je
cmpsl
sub
jne
xorl
dec
pop
aas
add
mov
push
ds
hlt
cmp
or
shl
sarl
mov
or
test
mov
mov
jnp
adc
xchg
dec
or
pop
cmpb
sbb
jecxz
xorb
or
adc
push
pop
ds
adc
nop
cmp
jmp
inc
xorl
jge
lret
and
pop
fmulp
inc
adc
inc
xchg
ret
mov
push
adc
mov
push
jl
insl
shrb
inc
xbegin
xchg
outsl
mov
mov
dec
shr
cmp
dec
in
inc
inc
mov
push
pop
rolb
dec
out
push
cs
pop
push
repnz
sbb
mov
cmpsl
ja
iret
dec
adc
xchg
dec
je
je
sbb
sub
pop
cmp
push
movsb
sub
jne
icebp
int3
test
mov
movsb
jo
mov
fstpt
xorb
into
adc
cmpsb
outsl
lcall
in
test
jg
xor
mov
or
nop
mov
dec
pop
mov
add
adcb
mov
cltd
lcall
aam
and
mov
int
xchg
push
xchg
enter
gs
cmpsl
jmp
inc
sub
pop
cmp
shrl
fstpl
cmp
scas
cli
sbb
lret
pop
pop
xor
cmp
jmp
insb
cmp
outsb
cmp
lea
leave
sub
fcomi
in
into
xchg
push
repz
push
pop
sbb
push
add
adc
inc
ljmp
imul
mov
add
jne
ret
les
jno
push
std
shlb
ds
lret
push
aam
sub
adc
call
and
stc
bndldx
add
inc
ja
std
cmpsb
in
push
mov
nop
jle
xor
jo
iret
mov
inc
ja
pop
xchg
dec
jle
xchg
shl
dec
push
ss
shl
loop
lds
adc
mov
sbb
cmp
fsts
cmc
sti
xchg
mov
mov
loope
stos
sbb
jae
and
jb
loopne
mov
ficoms
cld
mov
pop
push
fwait
add
jns
pop
xchg
and
pop
mov
and
dec
mov
xorb
clc
repnz
and
pop
mov
mov
fs
sti
out
dec
mov
push
pop
pop
mov
lds
pop
bnd
cmp
in
mov
lea
inc
sbb
popf
in
dec
call
lds
jo
std
mov
fmulp
subb
lods
mov
inc
push
adc
xor
fldl
filds
arpl
lahf
sub
sub
jmp
dec
pushf
sbb
into
jl
sub
data16
clc
inc
inc
push
popaw
cwtl
shll
mov
out
jne
fcom
int
cwtl
cmp
ffreep
pop
pusha
adc
pusha
xchg
xchg
stc
in
sbb
jb
mov
dec
mov
aam
aaa
mov
jnp
push
xor
jne
adc
add
lods
xor
jno
mov
insl
cmp
mov
fs
pop
repz
mov
adc
cmc
insl
loop
pop
push
xchg
rcr
aas
mov
aad
jns
out
in
jle
xor
pop
in
popl
sub
inc
mov
dec
ljmp
repz
out
shl
sarb
in
add
add
js
push
sbb
and
push
popa
insl
xlat
and
test
dec
dec
mov
in
pop
xor
inc
add
pusha
pop
pop
sbb
dec
test
clc
xchg
movsb
lahf
leave
cmp
pop
insb
pop
dec
or
int3
push
jae
mov
push
test
jae
je
xor
mov
ljmp
jae
cmp
xor
sbb
mov
or
inc
sti
xchg
push
cmp
loope
test
pop
cmp
inc
mov
push
aam
test
jnp
sub
pop
mov
mov
rclb
and
adc
inc
jns
sub
out
aas
fmull
sti
xor
pop
mov
leave
popf
test
mov
jo
jmp
sub
xchg
lods
lret
mov
and
xlat
or
fsubrl
lret
mov
jle
cmp
mov
repz
push
stos
and
repnz
dec
fstps
stc
ja
jg
aas
imul
orb
mov
jge
mov
pusha
xor
sbb
and
aam
sub
jne
mov
lock
mov
lods
lcall
loop
out
data16
aas
es
lret
repnz
xor
push
arpl
lahf
xchg
push
pop
sub
popa
inc
inc
adc
fadd
jne
in
mov
sub
mov
andb
and
shlb
jecxz
mov
mov
ret
fstp
adcl
lret
fwait
xchg
mov
xor
or
mov
mov
xchg
out
aam
sub
sub
push
mov
and
adc
sbb
roll
or
lods
test
pop
inc
or
push
arpl
jmp
lods
aad
sbb
std
push
movsb
es
lods
out
and
popa
sahf
mov
push
sbb
mov
push
imul
sub
lds
and
bound
lsl
mov
mov
mov
cwtl
pop
and
lcall
movb
call
sub
sub
cwtl
test
cmpsl
dec
loop
ret
jbe
xor
js
mov
mov
sub
enter
loop
inc
push
les
inc
add
sub
ja
gs
cmpb
mov
inc
test
es
adc
cmp
neg
aas
lods
pushf
or
lcall
or
mov
mov
or
jnp
cmp
lahf
dec
cld
and
add
mov
push
pop
add
cmp
push
cmpsl
test
push
cmp
inc
sub
nop
mov
dec
or
aas
sub
fsubr
push
jl
fwait
push
cmp
push
mov
sub
or
in
aam
or
cld
pop
mov
adc
unpckhps
mov
dec
xchg
das
sahf
rclb
inc
mov
xor
or
add
push
gs
sub
cltd
inc
xor
in
inc
mov
push
push
add
xchg
lcall
aas
cmp
ret
out
fiaddl
and
jbe
jg
sub
sub
push
dec
repnz
xor
mov
dec
push
aas
aad
lret
lahf
mov
test
add
cltd
push
or
stos
sub
push
out
clc
lret
clc
cmp
repz
or
pop
call
pushf
lea
xor
enter
cmpb
dec
sbb
imull
int3
mov
xchg
xor
in
lret
addl
sahf
and
imul
pop
mov
icebp
jns
inc
sub
ss
adc
notb
push
cmp
fcmovu
pop
loopne
cltd
popf
mov
sub
fcoms
sbb
mov
shlb
ja
loopne
test
dec
adc
xchg
sub
sbb
push
xchg
add
jge
cltd
pop
int
in
xchg
jae
mov
jo
jno
adc
int
in
addl
dec
decb
call
sbbb
mov
in
pop
jns
fcomps
inc
jno
or
or
in
lret
ja
fdivrs
int3
jae
sub
out
in
mov
push
fwait
pop
sarb
js
aam
loopne
rorb
cmp
scas
xor
fisubl
out
popf
out
mov
xor
aam
mov
out
out
fiadds
fldcw
jmp
cli
cmc
mov
or
call
push
pop
aas
nop
fs
mov
les
cmpsb
sbb
jne
sbb
jmp
and
loope
mov
jp
pop
and
nop
sbb
bnd
lods
int3
mov
in
test
jnp
and
mov
push
xor
pop
hlt
enter
dec
add
xchg
sbb
add
inc
dec
mov
std
test
mov
arpl
cli
or
or
mov
inc
push
test
mov
lock
cmp
icebp
cmpsl
adcl
incl
repnz
cwtl
xchg
inc
loope
aam
pop
pop
xchg
xchg
mov
pop
inc
call
and
iret
mov
xor
mov
fwait
cmp
dec
xchg
ljmp
aad
mov
pop
pop
push
cmpb
fdivs
xor
add
mov
loope
jmp
sbb
test
lahf
mov
movsb
insl
std
roll
cmp
loop
mov
mov
loop
mov
outsl
insb
ret
insb
loop
and
ljmp
or
push
add
mov
popf
push
add
push
negb
mov
mov
and
arpl
notb
inc
fisttpl
jl
shr
loope
and
clc
jle
xchg
push
adc
dec
stc
ret
mov
push
push
or
push
mov
mov
mov
adc
nop
mov
cmp
imul
outsl
out
dec
pop
xchg
cmpsb
outsb
sub
add
and
divb
sbb
std
pop
or
pop
sub
or
stos
cli
sbb
fidivs
push
xchg
pop
xchg
data16
xchg
mov
push
aas
jl
outsl
mov
rcll
cltd
and
movsb
pop
mov
jns
into
ss
xchg
mov
and
cltd
jmp
jo
add
pop
nop
rclb
call
ja
inc
pop
push
lods
jecxz
addr16
dec
out
push
jmp
negl
aad
imul
mov
inc
es
add
inc
gs
dec
pushf
pop
aas
ss
pop
ljmp
in
ficoml
pop
push
jmp
sbb
fwait
test
adc
lea
imul
je
sbb
popf
jo
in
cmp
lods
mov
jp
mov
mov
and
inc
adc
and
and
mov
mov
rcrl
popf
xchg
dec
xchg
sti
ror
testb
sti
or
pushf
cs
gs
outsb
sbb
jp
adc
xrelease
aad
test
dec
and
sub
js
inc
ret
lret
mull
loop
cmp
push
jl
sbb
inc
xor
leave
lahf
mov
out
int3
fdiv
test
mov
sub
push
jg
jge
or
sbb
js
sbb
outsl
sahf
mov
stos
ret
cmc
pop
mov
pop
jbe
xchg
popa
or
mov
cli
in
scas
test
ret
adc
lahf
rorl
test
push
loope
xchg
sbb
and
addr16
jge
xor
ret
sbb
fprem1
popa
insl
ja
mov
fbstp
push
cli
jo
cmp
ret
pop
popa
sti
in
mov
mov
push
jmp
lret
lds
repz
lods
adc
mov
and
pusha
xchg
mov
sbb
das
mov
mov
in
or
inc
dec
test
roll
outsl
addr16
rol
jb
mul
inc
js
and
lock
jno
les
int3
mov
jg
or
movsb
cmp
sti
push
lret
enter
dec
cltd
aaa
fldt
mov
adcl
mov
test
and
pop
adc
dec
sbb
out
push
mov
sbb
lds
cmp
cwtl
dec
sbb
pop
jbe
ret
xchg
dec
aam
fs
xchg
xor
mov
in
fsubp
test
ret
insb
add
cmp
push
or
cmpsl
mov
in
stos
adc
je
fnclex
enter
cmp
out
add
pop
loope
cwtl
or
ret
pop
jmp
dec
mov
dec
addb
add
cli
xor
lahf
pop
jno
mov
cmp
mov
or
outsb
andb
mov
cmp
cmp
cmp
insb
dec
into
stos
mov
daa
pop
xlat
in
int
adc
stos
mov
mov
imul
clc
jo
loopne
ret
aad
xor
and
xchg
pusha
lds
inc
dec
mov
inc
insb
cmp
jmp
pop
add
inc
xor
mov
pop
imulb
pop
mov
and
jle
je
leave
mov
push
or
bound
adc
ja
into
inc
and
pop
ret
cmp
adc
adc
adc
pop
lahf
dec
pop
jo
jge
inc
and
sub
cmpsb
adc
and
push
rcrb
sbb
int
mov
das
lret
out
sub
and
loopne
mov
or
lahf
ds
in
dec
fdivs
pop
sbb
or
dec
int
insl
mov
or
rcrl
clc
repnz
leave
call
inc
jo
sub
insb
inc
push
push
mov
lock
inc
and
pop
jae
sub
insl
lahf
call
cmp
lcall
hlt
pop
aad
and
js
insl
inc
jg
es
mov
jge
mov
shlb
mov
cmpsl
push
jne
jecxz
xor
fildll
cmpl
clc
shll
xchg
lock
sub
ret
in
and
sub
mov
ss
lret
xlat
ljmp
or
lods
and
sbb
sahf
jmp
add
or
insl
jg
adc
jo
adc
adc
enter
adc
loope
pop
dec
mov
mov
xchg
lahf
loop
repz
cmp
cmp
sbb
nop
pop
xchg
push
mov
test
out
pop
cli
imul
lret
das
in
testb
int
sbb
aad
inc
pusha
push
mov
lods
xchg
sub
sbb
gs
sbb
xor
cli
mov
push
pop
cmp
jg
pop
imul
call
cs
movlhps
test
test
sub
xor
outsl
sbb
jnp
push
clc
dec
scas
or
xor
stos
stos
sahf
repnz
lds
sbb
add
cmc
mov
jmp
in
js
pop
dec
add
pop
sbb
sbb
xchg
adc
add
adc
cmp
movsl
popa
ficoms
jmp
mov
sub
mov
lods
xchg
and
rorb
add
mov
shlb
leave
fidivrl
mov
dec
std
fstp
out
lock
mull
and
dec
inc
iret
shl
inc
js
or
sub
push
cmpsl
adc
pop
ltr
test
push
mov
mov
test
hlt
daa
cwtl
nop
test
push
ficoml
jnp
test
enter
jne
or
popf
jo
je
nop
xor
shll
and
aam
inc
aad
jmp
xchg
xchg
popa
lock
xchg
inc
mov
outsb
inc
out
test
outsb
into
push
sub
xchg
shl
push
and
cmpsl
mov
inc
data16
inc
cld
jp
or
mov
jne
xor
nop
mulb
frstor
or
test
stos
push
ud1
test
inc
add
jmp
lods
mov
mov
stos
jb
mov
dec
mov
inc
sub
jo
ret
sub
std
xorl
testb
out
add
sub
push
test
pop
lcall
arpl
pop
orb
mov
push
lret
popf
lret
push
fistl
lcall
fisttpl
into
push
xchg
and
push
aas
sbb
ss
push
xchg
imul
sub
inc
or
outsb
mov
xchg
push
and
aaa
jecxz
les
push
lcall
inc
mov
sub
clc
loop
rcll
lea
aas
movsl
and
add
fmul
mov
mov
dec
in
mov
mov
fisttpll
repz
mov
inc
dec
and
cmp
dec
adc
cwtl
hlt
pusha
push
int
add
into
pop
inc
aam
cwtl
adc
and
add
lods
mov
mov
lds
shll
xchg
add
shll
cld
pop
ss
sub
js
cmp
adc
ja
mov
je
push
mov
push
jl
push
aad
adc
pop
stos
rcrl
fldt
push
jg
and
jmp
loopne
xor
rcrb
or
shl
es
sahf
push
and
mov
aad
push
or
jmp
adc
mov
fidivrl
push
push
mov
mov
sahf
dec
mov
sbb
adc
lcall
fisubrl
xlat
sti
push
inc
stos
pusha
cmp
jmp
push
push
or
mov
loope
nop
or
and
in
jb
loop
pop
push
adc
das
inc
rolb
les
shll
xchg
fstpt
push
pop
and
fbstp
repnz
js
call
and
inc
xor
ds
idivb
aas
fs
sbb
push
sbb
shlb
fsts
out
pop
aaa
aam
and
icebp
jb
dec
or
pop
unpckhps
enter
mov
push
out
test
adc
dec
das
xchg
xchg
pop
outsb
jg
dec
loopne
int
gs
adc
test
pop
xor
cltd
pop
pop
add
sbbb
mov
mov
sti
js
jno
xchg
pop
arpl
mov
sbb
or
sbb
aad
out
cmp
fidivrl
xor
je
inc
scas
insl
pop
rcr
or
pop
scas
add
jnp
test
icebp
test
adc
adc
fucom
js
add
mov
lret
dec
lcall
icebp
mov
shlb
mov
mov
or
mov
in
scas
fcmovnbe
dec
add
lahf
cs
lret
imul
mov
popl
jnp
adc
dec
jmp
add
pop
hlt
push
mov
or
xorl
xor
xchg
xchg
orl
sbb
push
and
sbb
or
adc
into
inc
add
push
mov
fidivl
sub
outsl
dec
insb
mov
sub
ds
test
loope
dec
fbld
xlat
mov
and
add
sahf
mov
sbb
sbb
dec
inc
cmp
add
sbb
jb
ror
pop
jp
fs
and
jnp
out
xor
xor
mov
cmp
movsl
xchg
jl
mov
cltd
adc
insl
sub
stc
ficoms
push
dec
dec
mov
orl
mov
lea
dec
pop
std
sbb
scas
fiaddl
loopne
add
sti
or
ret
test
or
add
lds
dec
dec
sti
add
lret
add
enter
pop
add
cmpsl
repz
jno
std
test
fwait
push
mov
jbe
pop
inc
sar
xchg
inc
in
jbe
cmp
cmp
push
hlt
push
inc
or
adc
sbb
fcos
xor
push
add
pop
xchg
insl
shrb
sbb
fwait
icebp
jne
cs
or
andb
dec
mov
cmc
push
scas
and
decb
insl
loope
or
mov
mov
loope
inc
aam
jp
and
mov
or
popf
insb
sbb
mov
out
int
std
shl
std
xchg
dec
int
jb
popa
std
testb
push
test
add
mov
out
test
or
ds
push
inc
cwtl
sbb
sysenter
adc
xchg
push
mov
mov
push
mov
xor
dec
or
jnp
jle
and
jg
or
cmp
fdiv
push
inc
and
lcall
nop
pushf
cld
push
add
adc
jbe
insb
push
das
mov
out
idivl
sub
xchg
xor
add
or
add
mov
in
inc
adc
mov
pop
push
lds
and
popa
push
stc
dec
sti
cmpb
movsl
mov
sub
mov
dec
sti
in
cltd
nop
xchg
ja
sub
add
lock
sarl
lret
fs
inc
sahf
inc
ds
lock
arpl
jge
flds
fldcw
test
sahf
mov
hlt
je
loopne
xchg
fbstp
rcrl
mov
adc
mov
add
test
xchg
outsl
inc
clc
in
inc
sbb
rclb
pop
inc
ds
add
es
push
pop
cmpsl
mov
sub
pusha
les
and
fwait
out
adc
push
mov
sub
imul
clc
mov
jge
and
call
ss
int3
jne
adc
repz
hlt
lret
push
xlat
outsb
inc
aas
mov
imul
pop
aas
inc
cmp
adc
inc
daa
add
sahf
mov
mov
aas
jns
push
je
jae
jg
or
insb
fs
and
push
fsubs
test
ficoml
mov
ss
leave
inc
jne
push
jecxz
js
or
or
fisubl
div
loope
dec
push
sbb
arpl
mov
push
into
mov
lret
xchg
jg
andb
inc
push
push
jbe
xchg
adc
stos
fdivs
sub
push
enter
jns
xchg
jno
test
dec
xor
mov
insb
dec
sahf
dec
shl
pusha
loope
icebp
nop
std
pop
or
mov
int
shrb
and
xchg
fcmovne
lods
in
lret
or
in
lcall
sbb
clc
ret
call
dec
aam
push
stos
aad
xor
push
hlt
mov
jecxz
dec
mov
repz
lcall
addb
jne
mov
push
pop
pop
mov
jge
xchg
mov
lock
cmp
test
or
pop
shl
xchg
push
bound
popf
xchg
inc
test
adc
mov
loop
popa
jmp
inc
jg
cmp
adc
cmp
inc
gs
sub
out
popa
jnp
sbb
test
mov
mov
push
outsb
sbb
mov
inc
mov
ss
cli
outsb
push
sub
into
push
sbb
mov
and
or
stos
stc
pop
sar
in
popf
sub
mov
xor
pop
cmp
cmp
subb
mov
out
cli
pop
xor
fadds
push
xor
and
or
testl
incb
add
rcrb
scas
outsb
push
xor
enter
xchg
adc
sti
mov
aaa
fs
dec
mov
push
test
fidivrs
sahf
mov
cmp
pusha
cmp
lea
jge
mov
xchg
sbb
jne
push
jo
out
fistpl
push
and
cwtl
out
pushf
out
dec
cmp
pop
mov
ljmp
push
movl
cmp
mov
mov
leave
or
inc
mov
or
sbb
jle
pop
or
inc
jne
dec
mov
jge
cli
out
dec
rcrl
mov
fsubrs
shlb
push
push
jl
gs
sub
int
sub
sbb
add
pusha
dec
icebp
shll
movsl
adc
test
and
clc
fnstcw
aad
gs
cli
in
iret
shr
pushf
lds
adc
cmp
jp
pop
cwtl
dec
imull
mov
dec
mov
mov
xchg
xor
cmc
adc
fwait
sbb
sti
lea
xor
adc
sub
pop
xchg
jnp
and
shr
xor
adc
inc
push
repnz
gs
test
lcall
xchg
mov
clc
lock
sub
ss
jbe
jae
fucomip
push
enter
mov
out
aas
adc
xchg
lea
add
jo
or
loopne
push
sti
cs
xor
push
jecxz
xchg
pop
adc
pop
cs
dec
rolb
frstor
jo
sub
test
push
add
repnz
cmp
adcl
xchg
mov
test
clc
je
inc
cwtl
xor
leave
and
inc
inc
orl
and
jg
mov
inc
xchg
mov
loop
popf
rcll
xchg
xchg
mov
mov
andl
mov
xorl
int3
loopne
xchg
xor
push
test
fcmovnb
adc
cmp
in
inc
lods
movsl
pop
notl
in
fdivrl
int
pop
sub
pop
dec
jmp
dec
sub
xor
and
push
or
xchg
scas
cmpsl
shr
mov
jnp
fldenv
bound
outsl
insl
fnstsw
iret
mov
imul
ljmp
aad
sbb
fstl
mov
popa
jns
popa
pop
test
dec
pop
daa
fisubrl
orb
je
pop
sub
das
and
jg
outsb
jge
mov
xor
cmp
aas
in
stos
xor
mov
adc
out
xor
sbb
ds
pusha
call
shrb
fdivr
inc
stos
inc
push
data16
xchg
ret
test
jne
xorl
test
xchg
cmp
repz
aad
insl
outsl
mov
or
dec
dec
inc
dec
adc
dec
xchg
xor
xchg
das
inc
adc
add
adc
shl
shrl
adc
aas
mov
scas
jbe
dec
jbe
lret
push
dec
sbb
dec
sbbl
fstp
pop
mov
xchg
ficompl
dec
aas
mov
icebp
xor
mov
sbb
xchg
leave
sub
mov
lret
cs
cmp
pushf
insb
movsl
pop
clc
mov
xchg
cmpsl
cmc
mov
lock
je
bound
mov
jp
test
int
mov
cmc
sbb
pop
xchg
jge
shll
fisttps
js
xchg
and
mov
jge
jge
scas
ja
pushf
sti
fistpll
push
in
lret
mov
bnd
xchg
aas
adc
clc
add
dec
test
push
js
ljmp
cmpsl
cmp
jo
xchg
jl
cmp
inc
inc
imul
jge
push
sbb
sub
push
stc
mov
movsb
aas
sub
mov
pop
cmp
mov
test
inc
aas
mov
sub
aam
sbb
or
xlat
insl
mov
cwtl
inc
in
icebp
pop
jne
and
hlt
pop
cmp
add
icebp
stos
pop
ret
lods
sub
and
aam
add
subl
xchg
jmp
mov
fsubrs
mov
pop
xchg
lahf
fs
pop
inc
or
jbe
mov
popf
jg
pop
xor
mov
push
popf
cmp
outsb
lahf
cmpl
movsl
out
mov
scas
jb,pt
les
maskmovq
negl
mov
mov
sbb
mov
jns
lahf
test
cwtl
call
in
scas
and
test
cs
stos
mov
mov
cmc
pop
addr16
add
cmpsl
xchg
sub
test
push
ret
add
in
popa
dec
dec
pop
pop
jne
pop
adc
in
mov
push
pushf
cs
in
cld
fildll
sbb
add
dec
js
jnp
imul
mov
loope
push
je
and
mov
pop
sub
rcll
int
lods
lds
daa
mov
mov
cs
test
inc
cmc
call
sahf
cmc
out
int
add
bsf
ficoms
aas
adc
jg
jno
in
sar
jmp
jg
pop
adc
and
subb
js
bound
sbb
test
sbb
enter
subl
cli
cmp
push
xchg
lea
mov
hlt
cmp
fwait
outsb
mov
and
mov
xchg
aad
dec
sub
push
sub
fs
xor
inc
fs
das
das
ret
xchg
mov
imul
loope
push
movsl
ret
and
sub
mov
jbe
jle
xor
cs
dec
mov
inc
jmp
adc
dec
out
mov
cmp
mov
icebp
dec
and
sbb
js
pusha
in
testb
testb
dec
xchg
clc
test
mov
cli
pop
jmp
jb
mov
in
sbb
xchg
daa
jg
dec
xchg
jb
inc
pop
fwait
xlat
aas
dec
push
subb
jae
xor
pop
aas
sub
sub
icebp
jmp
daa
or
push
or
mov
and
shlb
jno
push
hlt
mov
xchg
andl
test
and
fldt
jns
mov
and
push
jnp
jle
loopne
add
nop
cmp
dec
jle
mov
sbb
jge
jbe
fisttpl
mov
or
lahf
in
mov
adc
imul
cmpsl
jnp
pop
stos
shrl
clc
add
add
sahf
imul
add
sbbb
stos
cmp
ss
stos
pop
sub
push
imul
sub
pop
inc
mov
dec
xchg
daa
sbbl
xchg
inc
cmpsb
or
mov
in
sahf
jno
mov
js
aam
xor
shll
adc
pop
clc
fdivl
nop
adc
in
lods
loope
adc
sarl
ja
dec
out
sub
sarb
dec
in
lcall
pop
add
pushf
movsb
addr16
icebp
iret
out
stos
pop
or
clc
std
fs
xlat
push
std
insl
add
pop
xchg
enter
sti
insl
or
fisttpll
fcom
add
nop
jmp
xchg
test
and
push
push
pop
xchg
sbb
leave
jnp
xchg
mov
nop
sbb
mov
jnp
ret
clc
inc
sahf
adc
mull
adc
push
jmp
imull
push
arpl
out
mov
das
or
push
push
mov
repz
mov
xlat
xchg
dec
in
mov
mov
mov
andl
jge
scas
scas
dec
clc
mov
jg
in
xchg
insl
movsl
sahf
hlt
dec
mov
lock
insl
popf
ds
jecxz
jns
pop
adc
cs
lret
jno
jl
lods
mov
add
lahf
xor
aas
sub
mov
inc
cmp
dec
test
in
lods
mov
fbstp
cmp
push
pop
jns
sub
or
adc
js
add
xor
jns
pop
jle
imul
add
psrlq
dec
bound
mov
xor
enter
push
pop
gs
xchg
push
jmp
cld
sub
ds
test
push
jno
lock
test
shufps
into
mov
mov
mov
push
jge
lret
fxch
jno
xchg
sub
push
outsl
dec
insl
and
lods
insb
shl
jns
cwtl
repz
xor
inc
adcb
negb
or
ss
or
adc
fsubrl
push
mov
pop
xchg
push
xchg
int3
add
inc
and
aam
pop
xchg
mov
aad
aam
outsl
out
mov
sub
lahf
pop
xchg
aad
jge
repz
and
push
ficoml
mov
xlat
mov
sbb
add
or
cmp
mov
cmp
cli
mov
jne
sbb
pop
dec
adc
shl
push
inc
ljmp
push
loope
cld
aas
fucomp
xor
subb
gs
icebp
jmp
in
mov
repnz
xchg
add
lea
mov
clc
fcoml
arpl
pop
add
xchg
push
outsb
mov
fists
outsb
push
adc
inc
std
sbb
outsl
cmp
sbb
sub
and
dec
xlat
xchg
sub
adc
cmc
mov
push
js
cmpsb
push
call
bswap
ss
pop
jge
popa
addl
fdivs
pop
mov
pop
xchg
addr16
lods
movsl
inc
mov
pop
xchg
pop
in
in
scas
aam
or
call
shll
iret
inc
push
mov
mov
dec
push
out
rorl
sbbb
sub
dec
lret
outsb
or
push
ja
addr16
iret
adc
std
cs
inc
sti
notb
sbb
sub
ds
xchg
lahf
xchg
pop
add
xor
cli
push
pop
or
out
ja
and
fcoms
iret
or
mov
js
pop
push
cmp
mov
cmp
les
adc
scas
cmp
sbb
fistpl
jge
adc
int3
sub
inc
xor
xor
sbb
aas
push
pop
jp
mov
pop
inc
jo
fidivrl
ret
pop
cmp
pandn
mov
in
inc
stc
mov
and
aam
push
jmp
push
mov
jne
outsl
mov
insl
fistpl
dec
mov
cli
sbb
or
outsb
or
fmulp
out
clc
xlat
dec
xchg
outsl
rcll
ret
aad
cmp
push
mov
sub
subb
lea
inc
ret
cwtl
in
fnstsw
fwait
sub
scas
jmp
inc
imul
mov
mov
daa
adc
movl
mov
sbb
aas
xchg
mov
mov
inc
in
int3
dec
cmp
clc
enter
lds
popa
pop
int
mov
call
hlt
and
or
aam
js
mov
mov
sub
cmp
mov
adc
lea
and
in
loopne
rol
inc
leave
xor
pop
cwtl
rcll
test
sbb
loope
inc
in
enter
filds
jo
jecxz
push
fdivr
into
lock
std
push
push
test
daa
sub
mov
out
mov
inc
add
out
push
arpl
out
jno
jns
stos
jnp
and
iret
inc
stos
cltd
fstpl
dec
push
rcr
std
xor
inc
and
pusha
mov
add
int
sbb
sti
arpl
shrl
sbb
jmp
pop
push
pop
test
mov
sar
mov
ljmp
je
call
mov
jne
loop
xor
mov
ja
add
dec
add
sub
sete
int
mov
test
sub
std
movsb
ljmp
pop
loopne
ss
ljmp
cld
mov
aad
mov
pop
das
jnp
ja
jl
insb
fucom
ret
subb
mov
loopne
xor
or
mov
lahf
xrelease
mov
addl
lret
and
push
call
adc
mov
icebp
add
sarl
dec
dec
cmp
sti
mov
lahf
ficomps
in
lods
jp
add
xchg
lock
add
jbe
lods
std
mov
cli
inc
test
pop
fs
sti
faddl
xchg
or
and
xchg
pop
jnp
stos
jnp
xor
jns
sarl
xchg
jae
sub
push
jae
inc
lret
mov
lods
push
sbb
adc
mov
mov
imul
mov
mov
push
das
in
adc
pop
lods
imul
movsb
xor
fcoml
or
lcall
adc
into
or
sbb
xchg
mov
test
pushf
out
popf
dec
dec
dec
jb
fdivrp
pop
push
push
loopne
inc
stos
fwait
push
mov
fwait
js
push
push
pop
loop
sbb
rcl
leave
add
xor
add
jle
adc
cmp
sub
inc
test
enter
cmp
sbb
shlb
ret
fistpl
je
loope
push
clc
inc
outsb
cmc
dec
loop
push
adc
bound
xor
addr16
cld
ljmp
movsb
push
sub
push
addb
add
inc
hlt
daa
sti
test
lds
xchg
ror
into
mov
daa
add
fcoml
arpl
mov
push
inc
dec
mov
adc
mov
dec
add
jle
lods
push
je
lret
jno
cmp
inc
mov
icebp
gs
jmp
inc
ds
sub
xchg
xchg
subl
movsl
jmp
in
movb
jecxz
ss
jecxz
sti
dec
sbb
ss
adc
popf
jge
nop
pop
add
outsb
fistps
mov
gs
xor
iret
aaa
arpl
mov
addr16
mov
sbb
enter
pop
cmpsb
aaa
loopne
or
loope
dec
dec
jg
jne
mov
fsts
and
push
ret
lret
negl
scas
int3
push
insb
and
jae
mov
das
jecxz
sbb
add
es
popf
lods
inc
scas
mov
outsl
js
sbb
sarl
lods
loopne
sub
repnz
cwtl
scas
rcrb
in
out
roll
sarl
dec
bound
lret
or
repnz
cld
inc
pop
pusha
mov
icebp
icebp
rcll
xchg
rclb
jno
xor
mov
cli
push
push
iret
in
insb
add
pop
mov
mov
std
loopne
insl
sub
inc
pop
insl
mov
cmp
sbb
pop
mov
or
scas
or
xchg
pusha
mov
in
mulb
fcoml
mov
cmp
out
fs
jne
push
clc
outsb
xlat
pop
inc
sub
dec
xchg
in
test
dec
das
mov
nop
mov
lock
in
shll
inc
or
xlat
dec
xchg
insb
iret
aad
mov
in
xor
and
lods
adc
movsb
sti
or
movsb
aas
lret
lods
je
jecxz
int
cmp
xchg
pop
popf
mov
mov
stos
loopne
xchg
ljmp
pop
jg
jl
jnp
pop
or
sti
aaa
mov
insb
xor
cwtl
cmp
sub
call
and
aaa
push
sub
cli
fadds
out
mov
aad
jb
ljmp
fmull
orb
idivb
inc
fisttps
sbb
int3
sbbb
lret
out
pop
and
inc
aas
dec
jae
and
popf
jno
mov
mov
dec
bswap
fwait
mov
xchg
cmpsb
pop
inc
xchg
or
push
aaa
mov
lods
hlt
lret
sub
xchg
mov
cmp
insl
testl
jl
or
mov
imul
pushf
inc
add
cli
fildll
mov
inc
push
adc
js
lock
jge
shrb
jnp
mov
push
pop
sbb
js
in
xchg
test
sbb
add
jbe
mov
push
sbbb
cli
push
xlat
xor
iret
leave
lds
cld
xchg
lds
sti
push
xor
add
jne
out
adc
jae
loope
sti
into
rorb
loopne
ds
aam
adc
push
sub
cs
pop
xor
iret
fwait
mov
pop
in
ss
sub
or
incb
mov
xchg
jg
mov
ret
movsl
enter
enter
adcl
adcl
fistpl
push
clc
and
es
mov
pop
stos
mov
jb
stc
sbb
push
cmpsl
in
or
lock
xchg
or
jae
fwait
lcall
movsl
cmp
imul
mov
iret
fs
ret
out
mov
repz
ret
test
in
xchg
fs
xchg
and
fisttpl
dec
jb
mov
or
ljmp
pop
sbb
xchg
jns
pop
test
iret
mov
mov
icebp
lods
repnz
ficoml
sub
push
pop
ret
push
cmp
xor
clc
xor
stos
or
ljmp
adc
pop
jmp
xchg
jmp
imul
adc
gs
mov
out
daa
fsubr
loopne
and
mov
pop
xchg
loopne
lock
std
mov
hlt
push
pop
sbb
es
cmp
int
lret
test
insl
pop
aam
adc
mov
sti
jecxz
or
sub
dec
shll
sbb
fwait
and
mov
aas
add
clc
mov
loopne
or
jg
das
push
scas
mov
and
jecxz
ja
loope
ljmp
adc
and
jnp
jne
fs
xchg
and
ljmp
fs
dec
or
mov
pop
addr16
dec
dec
mov
lea
xchg
out
dec
movsl
sti
adc
aaa
mov
or
push
repnz
lret
adc
or
jae
rorl
fmull
inc
mov
into
test
in
mov
pusha
out
mov
adc
insb
pop
call
push
daa
shll
int3
cmp
ss
mov
scas
out
aas
pop
mov
sub
in
addl
and
add
mov
mov
mov
shll
dec
movsl
dec
repz
clc
mov
aas
pop
daa
adc
mov
xor
mov
push
push
repz
xor
enter
xor
lods
jbe
sarb
xor
cli
repnz
dec
fcoms
adc
sti
push
pop
out
addr16
pop
fldt
out
push
hlt
repnz
outsb
addr16
imul
and
add
cld
hlt
cwtl
cld
sbb
je
pop
imul
xchg
adc
aas
cltd
jbe
lods
inc
fwait
mov
data16
stos
stc
mov
sbb
mov
fmuls
mov
loopne
adc
cmp
es
add
arpl
and
and
push
push
sbb
stos
lret
std
aaa
ljmp
ret
add
enter
test
push
adc
push
push
sbb
ljmp
arpl
hlt
dec
jle
add
adc
in
sbb
aas
out
push
inc
pop
rcrl
dec
mov
int
mov
ja
push
mov
push
mov
jmp
divl
xchg
inc
inc
ret
insl
in
int
push
jno
inc
add
sub
push
in
sub
sub
ds
adc
add
sbb
sub
xchg
fcmovu
js
xor
fcom
add
shll
push
add
sti
inc
jp
push
and
lods
stc
or
hlt
pop
push
lahf
lret
xchg
push
mov
xchg
jg
jns
test
mov
or
mov
mov
int3
push
lcall
add
imul
int
out
lret
jmp
xchg
sbb
add
adc
popf
mov
jmp
pop
idivl
push
aas
jno
sahf
scas
mov
adc
addl
jp
and
dec
xor
test
xlat
jbe
mov
movsb
arpl
and
jle
mov
push
adc
jg
cltd
outsb
out
and
mov
ficompl
stos
pop
test
aam
cli
cmp
lcall
add
gs
mov
insb
iret
jb
fs
popf
or
lret
jle
mov
in
test
pop
das
out
jl
fsubl
mov
mov
push
dec
lret
pop
jp
xchg
stos
push
mov
or
loope
xchg
into
in
or
pop
gs
mov
out
xchg
leave
repz
fbstp
inc
nop
ficoms
xor
push
mov
adcl
stos
aaa
xor
rolb
es
inc
add
lods
loope
ss
sub
and
ret
enter
int
add
outsl
ljmp
repnz
push
mov
inc
pop
ds
inc
loop
leave
iret
shr
jg
cmpsb
xchg
daa
insl
mov
mov
pop
mov
push
lcall
xor
out
bound
adc
xor
xchg
pop
clc
lods
adc
mov
pusha
push
or
das
cmp
stc
jecxz
adc
dec
pop
ror
rol
inc
scas
lock
and
xlat
repz
mov
test
jne
pop
and
hlt
inc
jecxz
cmc
repz
filds
mov
cmp
and
xchg
fists
and
push
fxch
ljmp
rep
xor
int
push
adc
xchg
push
test
cmp
add
sbb
sub
adc
xchg
xchg
lods
shrl
jb
shll
dec
mov
lock
fwait
ja
call
cli
push
xchg
push
adc
aam
dec
mov
ror
pop
int
adc
loop
or
pop
repz
fcoms
mov
jae
cmp
xchg
popf
jno
dec
jmp
ret
dec
outsl
daa
test
mov
jb
xlat
add
clc
push
mov
dec
cmp
fdivs
jb
repnz
lds
jno
gs
shl
in
xchg
shrb
dec
data16
call
sub
stos
ljmp
jne
popf
mov
addb
insl
jb
xchg
cmp
and
inc
cmpsb
cltd
dec
lds
nop
test
das
mov
dec
dec
mov
decl
gs
addr16
sbb
push
mov
add
imul
not
cmp
jne
popf
fyl2xp1
mov
pop
insl
cmp
lea
out
std
sub
pop
dec
mov
clc
or
test
cmp
push
xchg
adc
cmp
inc
pushf
ljmp
je
sbb
mov
sub
jmp
test
pop
pop
fistps
imul
in
xor
jmp
bsf
out
stos
mov
and
fiaddl
xchg
jecxz
push
lods
inc
loop
cmpsb
lcall
inc
inc
out
in
adc
test
mov
inc
loopne
mov
mov
or
daa
sub
stc
mov
sti
mov
int
aaa
addr16
or
stos
sbb
jle
cmp
pop
xchg
ret
mov
fdivl
and
dec
mov
aaa
shlb
out
test
test
pop
adc
daa
sti
jb
pushf
jb
mov
jo
lock
push
mov
cmp
popa
and
push
xchg
add
add
cld
mull
in
mov
dec
add
test
mov
mov
mov
dec
lods
mov
or
add
cmp
imul
insl
xchg
in
sti
lret
rclb
stc
repnz
je
div
out
ret
fldcw
pop
flds
mov
xchg
mov
jle
xor
push
clc
jl
inc
push
insb
lds
mov
push
jae
pusha
iret
ja
out
inc
ret
mov
add
xchg
sbb
lds
rcll
sti
andb
test
dec
into
jmp
push
std
fisubs
pop
mov
jo
dec
xlat
pop
aas
cmc
cmp
lea
sub
xor
cmp
push
jmp
out
pop
into
mov
roll
in
hlt
dec
push
push
call
push
xor
je
xor
shrb
addr16
cmpsb
out
jb
pushf
and
adc
pop
push
mov
pop
pop
xor
out
dec
xor
push
jne
xchg
fiadds
int
in
add
lods
and
out
mov
fisttps
ffree
push
call
or
xor
jmp
idivl
mov
xor
ss
push
cmp
ss
cmp
lahf
test
sbb
hlt
fdiv
jmp
enter
insl
sbb
push
mov
cld
push
out
lret
pop
push
stos
pop
mov
stos
push
xor
add
xchg
shll
cwtl
sahf
dec
movsb
dec
aad
push
mov
sbb
icebp
imul
dec
cmp
hlt
xchg
mov
ja
mov
data16
cmp
mov
aam
jp
jo
incl
push
mov
stc
jbe
dec
fidivl
idivb
jno
inc
lahf
mov
mov
and
xlat
and
cmc
sub
ja
pushf
jo
xchg
sub
daa
pop
pop
jl
mov
dec
jle
aad
pop
in
nop
lret
fidivl
or
subl
sbb
jge
in
xorb
and
or
pop
movsl
inc
mov
fldenv
xlat
sub
int
repnz
sbb
fstpl
jmp
mov
jge
cli
push
pop
pop
shll
les
or
mov
pop
test
add
sub
or
push
fdiv
mov
sbb
pushf
add
xchg
xor
add
dec
mov
popa
ljmp
mov
sbb
jp
ret
rcrb
cli
lds
pop
clc
fiadds
outsb
cmp
aam
sub
pushf
xor
ljmp
cmp
push
out
add
mov
cli
repz
dec
inc
dec
lods
sbb
xchg
test
stos
lcall
mov
dec
andl
sbb
mov
add
cwtl
aaa
in
and
test
lds
test
mov
add
aas
rorb
inc
mov
mov
std
es
movsl
mov
jne
jae,pn
fisubs
or
dec
xlat
push
dec
push
lret
push
test
shl
das
out
fmull
in
jb
shrl
add
xchg
addb
push
adc
adc
inc
push
xor
inc
dec
lret
ds
les
ret
fdivr
mov
pop
ss
out
jle
jnp
push
xchg
loopne
or
push
pop
movsb
mov
clc
push
pop
sahf
mov
stos
lret
jmp
sbbl
push
push
mov
push
push
test
jp
lahf
negl
cmp
jmp
sbbb
inc
aam
dec
cmc
sbbl
pop
stos
jns
cmp
lods
orl
or
nop
fldl
hlt
jl
jg
add
adc
lea
jl
je
insl
cld
daa
inc
or
sub
push
add
xor
lret
stos
repnz
mov
xor
in
pop
pop
mov
fcom
lcall
enter
sbb
pop
add
mov
push
inc
lcall
add
inc
dec
pushf
inc
loopne
or
jne
push
pop
inc
jl
pushf
push
mov
add
pop
not
xchg
xchg
cltd
fwait
mov
inc
or
ds
divl
push
inc
sub
data16
dec
pop
or
dec
mov
les
in
sub
mov
in
xor
imul
test
mov
xor
jecxz
sbb
pushf
js
lret
inc
inc
add
or
lea
cmc
mov
les
imul
cmp
cmovbe
push
movsl
stos
xor
fcompl
push
aad
cmp
icebp
dec
pop
or
lods
push
ja
jecxz
fwait
ror
dec
cmp
loopne
loop
adc
cltd
ds
push
lea
nop
cmpl
std
aaa
add
shr
jne
mov
xor
sbb
mov
shr
sbb
or
popf
out
fucom
loopne
pop
mov
push
sti
adc
filds
ret
js
sti
out
sti
pop
loopne
sahf
push
cmp
mov
lds
push
dec
xchg
cmc
push
mov
sub
sbb
or
xor
cli
movsl
xchg
add
les
dec
dec
mov
ja
das
jle
xor
lods
repnz
xchg
psrad
push
mov
nop
fwait
mov
mov
mov
lods
jle
inc
sub
xor
outsb
fmull
in
iret
cwtl
sbb
outsb
mov
das
in
xchg
push
mov
and
lcall
bound
sub
jo
inc
jne
adc
dec
lods
jg
mov
cmovnp
fldcw
daa
mov
sbb
cwtl
push
movsl
pop
and
scas
jecxz
xchg
scas
dec
pushf
jecxz
push
test
inc
int3
fwait
inc
adc
out
insb
push
or
jg
mov
icebp
jmp
pop
xchg
cltd
nop
mov
cli
scas
pop
jmp
nop
sub
dec
mov
shlb
pop
pushf
je
repz
adcl
lcall
mov
stc
ja
mov
dec
out
mov
push
cmpsb
pop
adc
xor
sub
jp
adc
fsubr
ds
jge
inc
test
sub
cmpsl
loop
lret
mov
xrelease
mov
pusha
enter
fs
and
aaa
pop
pusha
sbb
or
rcr
dec
ljmp
ret
dec
mov
lret
repnz
and
sub
and
sahf
outsb
rcll
inc
jns
jecxz
jo
imul
dec
aam
push
mov
imul
mov
ja
push
cwtl
insl
lock
push
and
std
hlt
es
scas
ret
test
push
jg
cmp
pushf
push
cmp
pushf
mov
clc
push
adc
mov
mov
lods
je
jno
cmp
xor
xchg
and
xchg
insb
arpl
xchg
js
bound
popf
imul
jmp
filds
in
repnz
popa
push
xorb
jp
ret
mov
loop
jno
pop
pop
mov
fidivrl
jmp
cmpsl
data16
and
push
cmp
add
mov
jp
arpl
outsl
pusha
inc
push
repnz
adc
or
jne
clc
pop
cmpl
jno
in
and
lds
add
or
push
ficoms
or
lret
in
pop
xchg
out
jo
adc
pop
cltd
adc
int3
ror
mov
ja
adc
or
inc
js
pop
loope
es
repz
repnz
mov
mov
sub
pop
loope
lea
push
out
pop
sbb
push
mov
popa
xchg
cmpsl
dec
in
pusha
out
jne
pop
dec
pop
mov
stos
ja
inc
push
lcall
aad
ret
add
test
mov
pop
push
call
mov
mov
lods
xchg
add
test
adc
cmc
repz
add
push
cmp
test
sti
xchg
lock
cltd
xchg
push
subb
jns
dec
cli
mov
js
push
sbbl
jecxz
std
mov
lret
xor
pop
and
enter
clc
jae
cmc
cmp
and
incl
push
xor
stos
adcl
out
pop
jne
xchg
or
mov
std
dec
mov
imul
add
or
sub
xchg
ror
pop
call
sar
popa
lcall
test
icebp
sub
out
cmpsl
cld
loope
testl
ss
mov
mov
out
fisubrs
mov
iret
adc
xchg
popf
test
setg
ja
sub
in
mov
inc
add
mov
subl
cltd
mov
call
and
aad
iret
dec
inc
dec
mov
mov
stos
dec
dec
mov
lcall
xchg
or
mov
adcb
ja
push
cmpsb
test
mov
call
arpl
in
data16
or
add
mov
stc
adc
mov
mov
pop
call
mov
fiaddl
call
xor
mov
pushf
jb
ss
pop
add
pusha
adc
adc
mov
xchg
mov
test
addr16
push
mov
xchg
pop
mov
and
in
ds
mov
xchg
pop
loop
jb
pop
or
fidivrl
pop
gs
loopne
mov
repnz
repnz
mov
xchg
cltd
iret
cmpsb
push
pop
dec
sbb
xor
push
xor
inc
jp
xchg
sbb
in
mov
mov
mov
icebp
jmp
inc
sbb
popf
pop
aas
aas
and
loop
or
loopne
jbe
aam
inc
xor
push
cmp
and
ret
divb
jl
and
in
xchg
xlat
adc
mov
test
mov
addr16
fisubrl
int3
or
shrb
xchg
push
repz
sub
imul
or
xchg
divb
xor
mov
les
in
aaa
xchg
xor
dec
push
mov
push
cmp
xchg
out
daa
sub
pop
or
fwait
aam
sti
pop
imul
mov
fistpl
lods
cmpl
fmull
jnp
scas
popf
pop
push
nop
mov
push
and
jns
add
or
mov
pslld
mov
and
cli
add
xchg
sub
outsb
lock
cmp
mov
xchg
fldt
add
pushf
std
addb
xchg
bound
clc
push
push
std
scas
add
bound
vmwrite
pushw
bound
aam
fdivp
imull
mov
xor
imul
out
rcll
in
pop
cltd
push
cmpsl
pop
out
insl
inc
mov
addr16
cmpsl
cmpsl
inc
cmpsl
mov
push
fildll
push
xchg
xor
aas
pop
imul
je
nop
mov
or
sbb
push
or
jo
cmp
cmpsl
outsb
sbb
cmp
push
jo
ja
mov
pusha
repz
test
fmull
xlat
mov
pop
mov
add
and
xor
pop
dec
inc
jbe
rorl
setbe
sub
mov
adc
sbb
push
jge
ja
cmp
mov
push
pop
push
pop
daa
pop
mov
xor
ja
lahf
stc
fdivs
cmp
in
sbb
fs
push
cmp
iret
add
enter
ret
idivb
push
or
add
pushl
cmpsl
mov
jns
xchg
jle
cmp
cmp
rclb
add
fldcw
sahf
fs
cmc
sbb
dec
jg
mov
cmp
sub
stos
cmp
fbld
in
add
jp
call
aaa
or
popf
push
adcb
ss
shrl
stc
es
lods
fwait
mov
cmp
inc
stos
adcl
cmp
dec
test
mov
popf
dec
inc
and
mov
or
push
jb
daa
sub
stos
sub
jae
mov
xor
or
dec
mov
pushf
fsubs
sti
mov
add
das
sahf
xor
mov
xchg
inc
mov
lds
mov
xor
pushf
test
sub
fs
fcmove
inc
jle
mov
push
adc
in
lods
popf
mov
cltd
lret
mov
xchg
sti
xchg
mov
sti
mov
das
shrb
xor
nop
shrb
outsb
and
xor
shl
std
popa
mov
xchg
and
ljmp
adc
or
sahf
xchg
cmpl
push
imul
or
push
sbb
sti
mov
push
or
mov
dec
iret
cmp
sti
out
xor
push
iret
xchg
or
sub
adc
push
cmc
mov
cltd
mov
dec
dec
adc
test
mov
ss
jb
push
pop
cmp
xor
sarl
scas
enter
imul
adc
dec
data16
xchg
loope
roll
push
cmp
pop
loop
andl
ss
xor
arpl
mov
pushf
adc
rol
adc
lea
jecxz
and
pusha
jg
aam
push
adc
xchg
movsl
inc
stc
ret
jne
aad
incl
jmp
int
mov
int3
push
ljmp
test
jnp
je
pop
dec
repz
out
pushf
cli
divb
push
dec
enter
dec
sarl
fsubl
fsub
push
mov
mov
in
lods
or
cli
fistl
jle
and
xlat
pusha
lret
pusha
lea
sub
pushf
les
sub
jl
dec
mov
ret
mov
and
push
ds
clc
adc
cmp
or
mov
push
lds
mov
jge
sarl
add
push
push
cmp
cmp
jo
push
jecxz
push
je
jmp
leave
mov
outsl
insb
fcmovnu
outsb
adc
fisubrs
dec
sti
cmp
ret
or
mov
in
sbbb
adc
out
lock
xor
pushf
ret
xchg
mov
mov
inc
add
stos
test
jge
lods
outsb
shrb
push
divl
stos
adc
aad
mov
mov
fisubl
fsub
pusha
das
out
sbb
and
sti
xchg
out
mov
cmpsl
jbe
mov
in
sub
or
sbb
dec
sub
fstl
inc
fcmovu
in
inc
pop
jmp
clc
inc
add
mov
mov
inc
jl
cmp
les
xchg
and
push
in
orb
push
insb
jne
movsl
jmp
out
inc
outsl
mov
pop
clc
jne
inc
mov
ficomps
sarb
dec
xor
fwait
add
daa
xchg
clc
cmpl
push
push
dec
ret
clc
aad
sti
iret
gs
imul
loopne
jbe
dec
fnstenv
out
mov
xor
adc
push
xchg
push
out
insl
sbb
mov
sarl
fbstp
insl
out
mov
popa
bound
imul
mov
mov
stos
outsb
enter
push
add
fwait
dec
mov
push
jnp
into
aam
or
push
cmc
in
or
enter
hlt
sub
call
fisubrs
enter
shll
clc
outsl
push
fbld
call
mov
or
lods
mov
sti
sbbb
inc
inc
in
mov
cmpsb
push
jge
sub
inc
std
cmpsb
adc
fisubrs
fcmovnb
jo
push
mov
push
out
in
nop
call
imul
push
fdivr
mov
cmp
or
pop
jle
push
dec
pop
sbb
rolb
mov
out
add
lret
in
cmpb
mov
mov
jb
lock
out
dec
inc
push
test
mov
mov
out
and
insl
test
mov
in
in
aaa
and
int
out
mov
je
loopne
inc
pop
aam
cmp
pop
xor
inc
loope
scas
lahf
icebp
out
xchg
insl
sub
xchg
addr16
or
and
dec
adc
iret
divl
jb
les
push
push
pop
mov
jnp
and
in
pop
adc
xor
js
sub
shlb
push
mov
sbb
xchg
adc
jo
cltd
lret
pop
pop
bound
dec
roll
xchg
in
imul
sbb
out
and
pop
into
jno
sub
sbb
or
sub
iret
scas
xchg
rcl
test
aas
mov
jp
cli
out
fdivrl
sbb
or
arpl
jae
fwait
pop
mov
xor
inc
sbb
stc
cltd
imul
mov
sub
add
xchg
pop
pop
push
arpl
roll
jns
insb
cltd
jb
fcompl
adc
xor
jge
xchg
sbb
pushf
insb
push
sbb
xchg
dec
push
or
and
roll
ljmp
sbb
push
rol
inc
out
adc
out
lahf
outsl
or
pop
lret
xchg
int3
das
lods
out
in
addb
outsl
jbe
out
test
xor
push
xchg
jb
rcr
and
xor
dec
jle
pop
sub
jno
dec
mov
push
vrsqrtss
pop
lcall
lds
mov
lock
mov
lods
mov
mov
aad
sbb
xchg
mov
dec
inc
out
and
pusha
fisttps
mov
dec
sbb
stos
jno
lods
scas
push
push
sub
imull
pop
push
xchg
and
sub
xor
add
dec
add
add
xchg
jmp
inc
fldenv
lods
add
mov
xchg
push
cwtl
out
jg
dec
adc
sbb
cwtl
adc
test
jecxz
mov
mov
movsl
jb
pushf
and
xor
lret
xchg
aaa
lahf
andl
mov
push
adc
sub
shlb
and
fisubs
insl
push
jge
or
aam
dec
cmp
xchg
add
dec
and
dec
jp
mov
movsb
add
shr
std
mov
jge
add
rorl
fsubr
jne
cs
addr16
shlb
mov
mov
aam
dec
mov
mov
imul
sbb
fstpt
or
mov
add
arpl
lcall
cmp
xchg
cwtl
or
adc
addr16
les
ret
inc
cmpb
faddl
mov
stos
cmpsl
fstps
xchg
leave
xchg
insl
lcall
xchg
xchg
lcall
dec
mov
jp
lods
gs
repnz
mull
dec
fdivs
sahf
jl
cld
fucom
lahf
test
push
pusha
adc
clc
roll
add
loopne
pop
cmpsb
pop
push
shll
inc
fnstenv
sbb
jnp
xchg
sbb
insb
jl
lahf
jbe
pop
jns
mov
push
sbb
clc
insl
ret
or
or
and
mov
aad
sbbb
int3
jb
cmp
mov
mov
data16
mov
out
rorl
mov
mov
dec
xchg
mov
jns
jge
fdivs
inc
lahf
popf
push
or
cmp
push
ret
stos
push
xchg
fdivl
std
out
jl
dec
negb
pop
and
aaa
cltd
inc
push
sahf
push
stos
pop
xchg
xor
fs
andl
sbb
hlt
push
aaa
xlat
push
sahf
mov
mov
cli
cs
sti
loope
cli
and
aaa
sbb
dec
fs
pushf
js
sahf
outsl
mov
pop
mov
lock
stos
jb
jns
inc
mov
mov
mov
pop
pop
js
sti
jb
lret
cs
call
adc
movsb
adc
mov
push
pop
lock
or
jmp
add
mov
cmpl
pop
pop
aaa
add
data16
outsl
pop
sbb
jb
daa
mov
shlb
adc
rcl
push
or
loop
fsubr
das
fs
adc
stc
jecxz
inc
jge
add
xor
iret
jne
outsl
popf
xchg
add
unpcklps
xchg
imulb
stc
lret
daa
push
or
sbb
aas
mov
inc
movsl
add
stc
cmp
in
cmc
cltd
leave
pop
jno
enter
sub
adc
mov
push
push
orl
xor
push
hlt
mov
in
xchg
xor
outsl
pop
pop
lods
cld
or
mov
std
popf
or
or
sub
int3
dec
xor
mov
fisubs
xchg
sub
xchg
cmp
inc
jns
cmpb
in
stc
sub
ja
lods
mov
and
popa
jmp
stos
fwait
mov
ljmp
mov
or
stos
mov
adc
mov
mov
and
xchg
lea
add
daa
inc
adc
dec
mov
rolb
out
xchg
mov
js
inc
cld
sub
fistl
fs
and
jb
cmp
inc
inc
scas
sbb
call
mov
hlt
pop
cmpsl
or
add
xor
fstl
adc
testl
xorb
pushf
fwait
sbb
cmp
mov
inc
int3
out
shl
mov
mov
xor
xchg
jg
sub
sub
pop
std
test
fidivl
out
popf
imul
jecxz
cmpsb
jo
adc
mov
pop
imul
stos
add
jge
and
push
xor
cmp
sbb
mov
mov
xchg
in
imul
or
pop
insl
cld
stos
out
jnp
mov
xor
test
das
dec
repz
aaa
sbb
sub
jns
sbb
xchg
pushf
test
test
cmp
int3
sbb
or
xor
pop
add
mov
testl
cmc
mov
loop
imul
popf
test
xor
pop
out
push
daa
xchg
aaa
aam
stos
ja
repz
scas
dec
ljmp
sub
cmp
das
cld
inc
or
rcrl
daa
inc
mov
lds
push
lea
add
jle
sbb
jbe
mov
jne
jnp
mov
push
les
sbb
lock
mov
jp
push
sbb
jae
dec
cltd
test
pop
mov
and
xchg
mov
repz
xor
ret
sbb
outsb
mov
xchg
int3
dec
in
iret
xor
cmpsl
mov
jnp
xchg
inc
dec
lret
mov
cmpsl
repnz
nop
xor
dec
shr
cli
push
fsubs
call
popa
rcll
sub
popf
or
lea
add
jne
ret
or
sarb
add
pop
scas
fs
adc
pop
cmc
into
jp
cmp
pop
jge
or
shlb
clc
or
adc
push
xorl
dec
push
stos
leave
shl
aam
sbb
test
repz
dec
cmp
mov
test
adc
mov
or
mov
js
xor
mov
push
adc
repnz
ljmp
out
dec
cmc
inc
fmuls
pusha
dec
mov
das
xchg
mov
lea
cmpsb
mov
and
shl
sbb
fst
sbb
daa
rclb
popf
fisubs
and
mov
pop
mov
outsl
mov
push
stc
faddl
push
push
dec
cmpsl
mov
pop
adc
pop
test
mov
aad
xor
call
xor
mov
loope
cmp
push
mov
leave
shl
shrb
fimuls
faddp
cmp
mov
iret
aam
and
stos
cmp
sub
mov
or
push
pop
mov
mov
ss
push
sbb
fadd
mov
cmpsb
or
adc
push
push
or
xor
call
sti
adc
outsb
scas
jb
mov
repz
cs
pop
mov
addr16
test
inc
in
add
sub
xor
out
adc
push
fsubs
mov
bound
mov
sub
cltd
rcll
repnz
movsl
aam
jb
ss
dec
inc
aam
lods
clc
pusha
mov
arpl
movsl
cmpsb
cld
shl
add
or
testb
repnz
and
into
cli
rclb
test
movsl
xchg
mov
add
mov
daa
pop
and
orl
pusha
xchg
fiadds
push
arpl
mov
ret
popa
push
ljmp
fistpll
fdivrp
jle
scas
ss
dec
jne
jnp
xor
sub
sub
or
sub
pop
pushf
lds
mov
jae
mov
test
in
jge
imul
xlat
inc
and
cli
mov
es
mov
pop
cwtl
mov
adc
sub
or
pop
inc
ret
adc
dec
inc
xchg
inc
sbb
jl
insl
bound
clc
popa
ss
add
cmp
xor
dec
adc
fadd
lods
xor
and
push
ret
dec
add
movsl
aas
int
addl
pop
vpmulhw
pushf
popf
in
test
scas
sub
and
pop
lret
test
orl
aad
inc
cs
cwtl
or
outsb
aas
test
mov
inc
push
movsl
sgdtl
in
pushf
ja
push
jb
nop
data16
pushl
mov
xchg
das
pop
mov
inc
push
mov
popf
xchg
out
jmp
xorl
jle
lcall
iret
pop
je
and
fs
adcb
das
mov
push
inc
sbb
js
cld
insl
out
popa
push
add
std
mov
sarl
xchg
aam
inc
inc
test
mov
pop
int3
ret
into
cmp
xchg
push
stc
inc
push
bound
mov
jnp
cmp
xchg
xchg
sub
fiadds
adc
push
push
ret
es
cmp
jge
add
jp
mov
ficoms
je
dec
mov
rcll
lahf
hlt
adc
xlat
add
sub
push
push
xchg
push
cmp
mov
mov
loop
outsb
mov
outsl
mov
test
mov
lcall
scas
jae
cmp
scas
lret
xor
in
mov
and
add
sub
arpl
popf
sbb
push
idivl
jl
xchg
cs
scas
xchg
loope
inc
inc
int3
shlb
pop
jecxz
int
loop
cltd
rorb
mov
dec
inc
mov
shll
dec
pop
out
dec
jge
in
pop
jmp
and
rcl
mov
arpl
mov
add
stc
xor
stos
xchg
loopne
xor
fidivrl
int3
cmpsl
mov
xor
xor
add
loopne
mov
ret
cmp
ret
sbb
push
iret
or
add
leave
jns
js
enter
mov
int
negl
sub
sub
int
aaa
jmp
test
outsl
lds
addr16
popa
push
push
test
fisubl
movsb
les
notl
jno
fstl
aas
addr16
or
push
cmp
dec
loop
lret
pop
lods
or
mov
push
push
aas
sbb
add
daa
xchg
sbb
daa
cli
decb
inc
jmp
xchg
aam
dec
ret
jnp
mov
sbb
inc
out
lret
adc
call
sub
push
pop
int3
test
ficomps
and
div
xor
mov
xor
leave
test
jnp
add
lods
jns
shll
push
ss
push
cltd
cmpl
ds
cmpsl
cmpsl
adc
add
mov
push
gs
imul
cmp
and
push
xchg
outsl
push
stos
push
scas
jnp
shr
sbb
dec
sarl
roll
lods
mov
and
cmp
test
or
fiaddl
mov
inc
jecxz
in
jle
push
cmc
mov
ret
push
mov
ds
sti
add
mov
js
bound
movsb
adc
mov
add
push
xchg
lock
cmpb
das
int3
inc
mov
negl
dec
or
cmp
mov
stos
xchg
ja
xlat
scas
pop
cmp
lods
iret
movl
add
cmc
faddl
sub
inc
orb
xlat
and
ud1
sti
sub
idivb
add
pop
jno
jbe
cld
adc
adc
fnstenv
ja
out
xchg
jo
daa
xor
ret
stos
out
lret
repz
cmpsl
out
add
sbb
xchg
test
test
lret
jb
sub
insl
push
ret
pop
mov
xchg
push
push
aam
mov
pop
ljmp
je
pop
inc
cmp
and
or
sbb
daa
inc
xor
lcall
loopne
sbb
in
dec
ret
xchg
stos
jle
test
adc
or
enter
scas
in
or
lea
mov
test
jno
mov
or
push
pop
jecxz
inc
push
in
ja
xchg
sub
lea
testl
mov
pop
or
xlat
pusha
mov
sarl
jo
repz
in
scas
and
dec
and
test
lds
xchg
dec
jno
out
pop
and
fdivrl
sbb
jb
adc
push
or
notb
loop
sahf
fs
in
out
stc
cmpl
jo
sub
out
test
ret
test
dec
mov
sub
sbb
and
nop
push
out
faddl
int
pop
sbb
pop
or
inc
mov
leave
lret
sub
fldenv
mov
sbb
pop
sbb
add
mov
pop
or
mov
cmpb
jnp
mov
cltd
cmp
aas
cmp
sub
in
loope
sub
mov
xor
sbb
pop
sbb
or
mov
rorb
js
scas
sti
lds
push
sbb
and
push
xchg
pusha
rcr
jae
dec
scas
cs
repz
add
jo
lods
ja
xorb
add
movsb
and
frstor
or
gs
dec
shlb
inc
popa
sbb
jl
mov
jmp
or
and
xchg
shrl
dec
jl
dec
arpl
cmpsb
pop
add
popf
js
cs
hlt
pop
lret
sbb
pop
sbb
jl
scas
ficoms
jae
add
pushf
add
sbb
dec
xchg
rep
into
and
fldcw
popf
pop
xor
mov
outsl
jb
push
movsb
out
cld
jno
loop
hlt
mov
imul
xor
xchg
fildll
loope
mov
ljmp
arpl
rolb
and
cmp
mov
xchg
cmp
push
push
dec
je
inc
dec
sbbb
insb
fstps
dec
dec
jae
cwtl
push
jmp
mov
xor
push
mov
push
mov
stos
jle
jbe
jp
jae
cmp
cmpsl
or
push
cli
mov
push
not
mov
mov
stc
mov
xlat
fldenv
adc
jl
push
push
lds
fisubrs
shr
dec
out
adc
repnz
lods
scas
ljmp
sbb
mov
pop
daa
pop
rcrl
cs
iret
add
xchg
sbb
dec
loope
dec
loopne
mov
xor
sbb
sub
add
jp
mov
and
pop
dec
jo
jns
test
scas
dec
aam
xchg
dec
pop
pusha
insl
das
xchg
clc
dec
sub
bound
push
push
fdivl
mov
cs
repnz
adc
ljmp
xor
fsubr
dec
loopne
mov
jge
xchg
pop
nop
mov
call
sub
lea
rorb
dec
mov
sbb
adc
mov
je
dec
mov
aas
stc
and
mov
inc
pusha
pop
dec
cmp
push
fiaddl
dec
test
pop
dec
adc
popa
in
stc
inc
jmp
in
xchg
and
mov
and
pop
mov
out
out
pop
add
ss
lret
xchg
fs
aaa
add
mov
sub
mov
test
pop
mov
xor
sbb
adc
les
or
pop
fiadds
push
jge
and
pop
dec
pop
inc
bound
jge
sbb
xlat
sub
addr16
popf
mov
dec
sub
mov
adc
repz
jle
cltd
mov
sub
rol
popf
push
outsb
sbb
rclb
fcoml
ljmp
jnp
add
xchg
push
sbb
xor
cwtl
outsb
jge
jbe
mov
popa
rep
popa
test
lret
lock
sbb
leave
jle
xchg
jp
cwtl
xchg
or
mov
sbb
mov
es
out
data16
setne
add
jp
add
aaa
ss
movsl
xor
push
cltd
popa
nop
ficomps
pop
ds
call
jns
lock
xor
lock
and
jno
insl
jns
xchg
dec
repz
cmc
pop
or
add
rcrb
mov
xchg
jae
hlt
adc
push
lahf
jle
or
and
mov
jns
aas
jnp
bound
cmp
or
shlb
push
mov
or
std
fwait
jne
inc
je
mov
mov
jnp
pushf
pop
js
je
aaa
in
dec
mov
xor
idivl
jo,pn
add
adc
out
mov
loop
aas
mov
jg
and
pop
jne
lds
arpl
adc
pop
je
jmp
dec
and
jecxz
sub
add
mov
mov
sub
mov
cmpb
cli
cltd
das
adc
cmp
push
xchg
jno
push
jns
movsb
out
out
les
xchg
xchg
push
sub
clc
int3
mov
sbb
and
and
mov
fistl
or
sub
cmc
xor
pushf
lret
adc
fwait
push
adc
rcll
xor
adc
mov
jae
mov
fdivrs
call
pop
dec
jns
je
fs
mov
rcll
xchg
or
rclb
popa
bnd
dec
repz
popa
insb
and
fcompl
push
add
adc
notl
addl
mov
addr16
pop
jbe
jnp
jae
or
jns
jno
jnp
dec
mov
rcrb
jg
cmp
sub
pop
dec
or
loop
inc
fsubp
gs
mov
repz
cmpsl
or
ret
testl
fdivrp
mov
int3
leave
dec
push
and
xor
in
or
jge
and
mov
dec
scas
jbe
rcl
cmp
add
pop
cs
pop
cwtl
mov
sahf
mov
sub
popa
dec
popa
cmp
push
mov
in
lods
icebp
add
pop
daa
gs
roll
adc
jno
xchg
rolb
je
bound
js
stos
xchg
dec
xchg
add
inc
leave
shl
mov
xchg
shlb
and
loop
lcall
popa
adc
dec
or
fcmovu
mov
xchg
negl
and
cmp
pop
pop
jmp
push
inc
lret
xchg
and
mov
adcl
hlt
es
mov
int3
xchg
cld
jb
lret
fs
sbb
dec
and
ja
jne
xchg
addr16
mov
sahf
test
in
aas
jmp
pop
xor
push
int
ret
and
pushf
bound
stos
outsl
push
aad
mulb
sbb
in
jae
movsl
sbb
hlt
push
pop
lods
lcall
pop
fs
repnz
push
out
and
enter
mulw
cmc
xchg
cmp
push
imul
cmp
arpl
sub
iret
and
pop
loop
cmp
sbbb
jno
mov
mov
or
out
mov
xchg
push
lods
and
pop
imul
cmp
popa
aaa
xchg
dec
push
mov
sub
outsb
sbb
jecxz
inc
cmc
push
mov
add
insb
push
imul
fiadds
mov
fimull
sti
pop
xor
cld
mov
sbb
nop
cmp
das
test
movsb
xlat
xchg
pop
or
mov
mov
test
loopne
or
insb
sbb
mov
jb
fisttpll
out
pop
adc
test
fcmovne
js
fldenv
add
enter
insb
vmread
es
push
out
icebp
test
jns
adc
or
dec
clc
and
cmp
in
lcall
int3
pop
in
pop
fldenv
test
push
mov
adc
insb
cld
mov
cmpsb
aaa
sbb
ja
add
jmp
adc
cli
lcall
lds
cmp
fs
stos
int3
loop
mov
out
inc
xor
dec
inc
loop
loopne
mulb
jno
mov
in
push
fdivrl
jae
xor
cmp
in
mov
sbb
mov
xchg
jo
sti
inc
sti
call
pop
mov
or
dec
data16
mov
ds
aad
cmpsl
sti
mov
xor
adc
mov
popa
cmpsb
stc
sub
or
jb
in
mov
push
lock
mov
jno
xor
or
sub
test
popf
fs
shld
jp
movl
test
out
add
shrl
sub
inc
inc
xchg
lds
sbb
and
sbb
sbb
sub
push
dec
loopne
subb
out
test
mov
lret
sub
adc
movl
test
scas
pushf
dec
push
cmp
in
fstp
add
clc
lock
and
mov
lds
lcall
mov
mov
rcll
pop
je
fcompl
pop
cmpsl
pop
lods
call
cwtl
pop
fiadds
xchg
lock
dec
push
and
jno
cli
aaa
shll
fsubrl
arpl
inc
fdivrl
cmp
repz
into
jbe
cmpl
clc
xchg
gs
mov
aad
sbb
add
and
jnp
aad
fwait
inc
jg
repnz
cmp
enter
arpl
cmp
fisttpll
rorb
mov
pop
pop
rorl
pop
mov
dec
mov
adc
xchg
stos
addb
add
bound
in
out
aas
cmc
xor
mov
es
mov
in
movq
aam
movsb
and
sub
test
movsb
dec
mov
sub
or
movsb
fs
cmpsb
lcall
and
fs
jg
and
pop
jbe
sub
xor
adc
cmc
xchg
xor
push
sbbb
mov
and
cmc
mov
mov
adc
lret
data16
adc
sub
aas
sub
mov
loop
cmp
mov
sbb
mov
mov
push
sbb
and
test
xchg
pop
aad
add
jge
fdivs
push
aam
cmpsb
nop
insb
cmp
mov
test
fsubs
and
inc
int3
aaa
pop
mov
xor
out
jbe
in
cmpsl
rorb
xor
push
or
mov
jbe
in
inc
sbb
jle
into
mov
fimull
stos
sub
push
pop
imul
aam
jnp
fildl
jnp
xchg
lods
fcomps
and
xchg
mov
jbe
stos
das
outsb
cmpsb
xor
mov
or
mov
dec
aas
dec
push
jecxz
pop
jp
jo
lcall
cwtl
test
push
cmpsb
xor
or
test
cmp
loopne
sub
jbe
enter
mov
jg
cli
or
pop
mov
jbe
scas
add
xchg
mov
imul
les
sub
std
rcrb
push
mov
ja
jmp
test
lahf
cmp
inc
push
sub
mov
xor
in
adc
in
repz
loopne
in
jg
mov
enter
mov
stos
ljmp
add
and
dec
push
xor
loopne
xchg
insl
xchg
adc
mov
or
adc
inc
es
mov
daa
loope
pop
cmp
xchg
in
pop
push
push
pop
mov
push
in
pop
adc
and
pop
mov
mov
aaa
inc
and
and
sub
push
xlat
mov
mov
popa
xchg
cmc
sarb
inc
out
call
cmc
pop
jb
mov
jmp
and
subl
dec
xlat
mov
jecxz
int3
pop
test
mov
jo
or
fs
pop
push
ficoms
sub
popf
mov
jb
out
inc
inc
icebp
cmp
inc
lret
push
or
div
call
mov
and
js
jge
fsubr
pop
inc
inc
mov
aam
inc
jnp
mov
cwtl
dec
mov
ja
rcll
pop
jecxz
inc
mov
inc
add
jge
jae
das
push
outsb
add
push
insl
cmp
xor
lcall
icebp
inc
mov
sub
jo
in
ret
ja
stc
fsts
xchg
xchg
sub
sbb
lret
sbb
ds
inc
mov
ljmp
adc
lds
or
pushf
jp
jns
or
or
je
or
loop
cmp
push
xor
dec
int3
fcmovne
jmp
cli
xor
jnp
mov
ss
ja
sbbl
addr16
fldt
cmpsb
cwtl
outsl
lods
pop
or
aam
push
pop
fadds
dec
outsb
jg
jo
add
fcmovnu
dec
dec
cmp
dec
fnsave
mov
add
leave
cltd
lea
fwait
lret
bound
ret
xchg
iret
mov
inc
out
scas
ljmp
test
mov
pop
and
mov
movsb
inc
mov
cltd
in
popf
mov
mov
repnz
sbb
push
orb
les
add
addl
cmp
int
mov
sahf
mov
subl
cmc
sbb
adc
jp
jno
ror
jg
dec
and
cmp
jecxz
insl
xor
jne
jae
push
and
push
or
sbb
and
or
mov
outsb
test
in
mov
push
dec
and
and
mov
xor
jne
adc
mov
cld
out
xor
cmp
add
push
aad
fs
xor
je
mov
xor
cmc
scas
bound
or
shlb
pop
cmp
sbb
mov
mov
clc
xchg
iret
daa
ja
stos
rcrl
adc
out
adc
das
movsl
aad
pop
add
out
rorl
addr16
and
cli
outsl
add
enter
enter
xchg
sub
popf
inc
push
mov
xchg
ss
jbe
loop
jo
aam
out
xor
daa
push
scas
call
inc
xor
out
cwtl
xchg
js
sbb
out
pushf
xorb
daa
jno
xchg
mov
pop
outsl
loop
std
mov
dec
ljmp
push
and
repnz
or
pop
xor
loop
aas
and
pusha
mov
lock
pusha
pop
imulb
dec
or
push
jo
aad
insl
cmpsl
dec
rcr
or
in
les
test
int3
mov
aad
data16
cmp
outsl
outsb
dec
fisubs
sete
xchg
mov
jg
adc
jb
sbb
jns
jne
mov
xchg
jge
imul
in
xchg
add
divb
in
jl
jbe
and
addr16
insb
pusha
std
mov
sub
fbstp
fnstsw
mov
push
or
scas
fs
and
push
into
fcmovu
test
pushfw
fcmovnu
mov
stos
rorb
sbb
jle
adc
adc
mov
subb
cmpsl
ljmp
xor
lds
pusha
sarl
sub
jnp
cmp
or
jmp
mov
shlb
inc
js
repz
repz
jnp
dec
movsb
fcomp
daa
push
je
cld
loope
popa
xor
inc
lret
xchg
push
xchg
inc
sarb
push
popf
repnz
jnp
and
inc
and
push
in
es
cwtl
leave
mov
sub
enter
push
lea
adcl
loopne
mov
and
repnz
imul
xor
lret
orb
jmp
repz
ja
std
mov
mov
cmpl
mov
jbe
jl
add
lods
hlt
xor
lret
add
lds
sti
jno
dec
pop
jnp
into
xor
fsts
js
loope
jae
lea
les
cmp
stmxcsr
stos
xor
fidivrl
adc
int3
dec
mov
paddusb
xchg
xor
sub
or
into
adc
or
mov
dec
out
xchg
fnsave
dec
push
lea
jno
repz
lahf
ljmp
pop
aaa
je
sbb
lods
outsb
das
jae
into
sahf
pop
add
ljmp
test
mov
push
xor
jecxz
jp
xchg
sbb
mov
jecxz
jmp
aas
fdivrl
or
jmp
fwait
mov
lret
jae
and
xor
jle
lcall
setne
xchg
enter
je
pop
pop
dec
inc
and
jno
adc
adc
repz
adc
mov
xor
fcoms
mov
lock
sbbb
jle
jnp
in
fdivs
repnz
fisubrs
fidivl
aas
or
mov
sub
into
imul
add
adc
outsb
jae
loop
mov
push
jge
insb
fwait
sbb
ficompl
push
les
and
dec
cmp
dec
or
bnd
pop
out
add
jbe
add
or
jl
and
sub
pushf
outsb
jne
gs
jmp
jle
imul
ss
pop
xchg
jno
ss
xchg
outsl
jb
jb
adc
pop
or
pop
je
fwait
xchg
push
dec
cmp
adc
push
daa
pop
fwait
fwait
xchg
insl
lret
sub
in
mov
shll
push
daa
enter
out
insl
jg
out
or
int3
ds
or
add
inc
and
insl
pushf
mov
loopne
adc
add
adc
mov
clc
add
pusha
daa
rcrb
faddl
into
sbb
adc
xor
enter
in
insl
stc
mov
dec
add
orl
cmpsl
push
movsb
test
lcall
in
xchg
lea
rcll
xchg
into
lret
outsb
xchg
mov
lret
push
cmp
push
adc
lret
sub
iret
das
mov
ljmp
mov
dec
inc
das
dec
adc
mov
cwtl
xor
xchg
mov
mov
pop
push
or
mov
mulb
bound
xlat
and
ret
fst
mov
jge
mov
jle
jmp
loope
xorl
bound
and
lods
int3
xchg
pop
mov
test
cmp
or
out
push
lcall
arpl
test
push
jae
pop
enter
shlb
es
and
lahf
add
repz
and
cld
push
idivb
ds
movsb
dec
mov
sti
repnz
lret
rorl
out
movsl
ds
pop
and
rcl
insb
add
pop
movsl
push
jae
push
movsb
sahf
leave
loop
sbb
jnp
in
and
add
sar
jle
or
add
stos
ret
hlt
and
mov
gs
pop
shr
sbb
and
addr16
add
test
sbb
pop
hlt
pop
sahf
cmp
mov
ret
mov
ss
std
push
add
xchg
pop
sahf
cmp
jl
sub
or
xchg
adc
pusha
cmp
push
xor
mov
push
push
dec
outsl
sbb
daa
jne
test
mov
pop
xchg
mov
push
xchg
movsb
rclb
cmpsl
sbb
or
std
and
xchg
arpl
jp
adc
sar
fnstsw
sub
lods
mov
xchg
or
imul
orl
inc
lret
clc
popf
jle
ljmp
imul
mov
pop
jp
jnp
jmp
mov
jae
popf
fnstenv
xor
test
mov
cmpl
push
jno
pop
cltd
daa
cmp
push
jb
enter
pop
insl
lret
dec
shlb
sbb
aad
pop
fadds
adc
add
jle
loop
mov
adc
popa
adc
adc
mov
mov
fnstenv
addr16
outsb
sete
addr16
xor
imul
test
shrb
adc
add
mov
cld
cmp
imul
inc
pop
inc
cmc
call
cmc
in
ja
cmpsl
in
xchg
add
xlat
subl
movsl
test
mov
jbe
pop
jbe
jmp
rcl
jge
and
xchg
pusha
popf
ja
in
and
insl
mov
and
add
mov
or
repz
push
fdivrp
notb
mov
mov
rolb
jmp
jb
inc
sub
xchg
mov
shl
ds
cmpl
roll
inc
les
dec
pop
mov
lret
lea
leave
dec
jg
jne
inc
loopne
xor
lcall
jo
mov
leave
icebp
shrb
lock
xchg
inc
ja
push
pop
adc
aas
mov
adc
inc
int3
inc
clc
icebp
dec
sub
dec
sub
xlat
mov
mulb
hlt
xor
mov
push
arpl
outsl
or
test
inc
cmp
scas
fidivs
adc
cmp
das
aam
add
dec
popf
xorl
dec
dec
xor
mov
jl
pop
jmp
jns
push
push
loop
and
sub
imul
sar
jle
std
and
inc
or
add
mov
mov
lds
faddl
sub
fildll
mov
and
xor
dec
dec
cmpsl
dec
cmp
sub
push
hlt
in
cmc
jp
stc
pop
mov
push
lods
fnstenv
fstp
add
inc
loope
inc
mov
addr16
push
fnstsw
loop
and
mov
inc
lods
jbe
xor
inc
pop
cwtl
cwtl
jae
mov
jno
inc
jb
mov
jne
push
mov
flds
xchg
mov
xchg
ret
dec
xchg
and
sub
hlt
cmc
jae
sub
push
outsl
fcmovnbe
loopne
xchg
in
push
cmc
adc
fcoms
adc
push
cmp
xchg
sbb
sbb
jo
repz
std
jge
mov
ljmp
sbb
fisttpl
fimull
xchg
movsl
jne
ffree
test
mov
xchg
int
lds
xor
addb
adc
sub
adc
rcll
sub
and
mov
adc
adc
jle
iret
sbb
ss
repnz
mov
pop
stos
inc
popa
or
fcoml
lock
adc
movsl
mov
loop
xchg
sbb
es
and
push
jge
repz
mov
loopne
xor
sbb
pusha
sub
shlb
mov
nop
sub
pop
out
leave
ds
das
gs
clc
jns
xchg
nop
and
jne
dec
push
push
sahf
js
fdivs
mov
movb
mov
inc
mov
fstps
out
pop
fsubl
sub
outsl
sbb
in
cmpsl
pop
cmp
addl
dec
jo
lock
ret
popf
jne
or
lock
jg
cmp
adc
scas
xor
or
jnp
pop
cmp
mov
insb
fstpl
fmuls
cwtl
cltd
js
xchg
cvtps2pd
xchg
cmp
int
and
fmuls
ffreep
fcompl
cltd
push
xchg
fiadds
and
xchg
bnd
call
pop
in
sbb
test
dec
mov
aad
push
mov
rclb
cld
or
xchg
jne
je
stos
fbstp
dec
aam
aas
and
xchg
add
and
stos
dec
mulb
push
sti
aaa
mov
xchg
pop
dec
mov
sbb
pop
pop
jle
insb
pop
rorb
std
cmpsb
sbb
out
xchg
and
xor
addr16
cmp
dec
push
xchg
add
add
xor
jne
outsl
test
les
mov
mov
leave
dec
lcall
pop
stos
jno
pop
gs
js
add
lahf
lcall
jb
sbb
xchg
adc
out
lods
adc
jnp
pop
or
pop
arpl
mov
xchg
dec
jl
mov
addl
push
jle
inc
out
sarl
mov
sub
cwtl
popa
mov
fwait
xor
cmp
mov
fdivl
xchg
jns
in
cmp
or
popf
sub
fidivrs
leave
int
pop
outsl
jmp
lea
ss
loop
mov
fimuls
fdivl
roll
test
lret
inc
scas
mov
movb
sub
pop
sub
add
imul
pop
sbb
dec
dec
mov
movsb
push
fcmovbe
mov
les
mov
dec
imul
jg
out
imul
add
fsubrs
or
jge
out
cld
movsb
xor
xchg
out
inc
and
jmp
inc
inc
inc
aad
add
shll
sbb
cmp
stc
mov
loop
xor
leave
add
mov
sbb
mov
xchg
dec
mov
insb
sbb
cmp
cmp
jae
inc
cli
cmpsl
cmpb
xor
add
psubb
push
repnz
sub
sub
xor
mov
clc
leave
sbb
inc
movsb
or
jmp
inc
shrl
and
sub
dec
sub
jp
lret
pop
cld
adc
aas
int3
xchg
and
data16
sbb
mov
xorw
andl
mov
pop
add
out
inc
dec
out
cmp
adc
jle
hlt
es
mov
pop
cs
test
or
cmp
adc
and
jle
pop
push
cmpsl
lret
push
push
cmpsl
fsubr
push
add
movsb
roll
outsl
ds
das
dec
ret
cmp
gs
pop
inc
daa
xlat
loopne
rcrb
js
jge
popf
scas
rclb
in
xchg
popa
push
adc
in
push
push
jbe
ljmp
sti
jne
or
call
inc
popf
leave
push
mov
repz
jecxz
jge
notl
iret
pop
in
push
pop
mov
push
xchg
push
mov
xchg
ret
inc
sub
fwait
pop
adc
ffree
inc
mov
push
fwait
ss
jnp
mov
test
adc
or
mov
cmp
popf
mov
jbe
inc
stos
jle
push
lds
sbb
mov
fldl2e
xchg
xor
bnd
cmp
je
shll
add
in
in
jg
pop
push
test
scas
dec
jb
mov
imul
out
and
or
in
jo
mov
hlt
xor
enter
pop
call
sub
shl
popa
fimull
insl
pop
push
lods
mov
mov
mov
fnstcw
sub
sub
cmp
cmp
dec
sub
bound
adc
pusha
dec
pop
xchg
xor
and
les
jo
adc
lret
dec
xchg
pusha
je
or
adc
cmp
mov
mov
stos
aas
repz
push
movsb
mov
mov
sarb
lea
arpl
sti
push
stc
int3
xchg
fwait
cld
les
bnd
mov
add
xor
dec
insb
dec
cmp
dec
sbb
repz
pop
push
lret
push
or
movsl
shll
enter
sub
movb
rcl
pop
rcrb
outsl
mov
pop
lcall
mov
or
mov
out
push
out
test
jg
popf
jne
cli
jmp
aad
inc
jle
fcompp
inc
and
mov
outsl
cmpsb
adc
push
sub
sub
inc
cmp
cmp
add
pusha
jecxz
and
mov
data16
xchg
lcall
lea
adc
clc
in
repz
and
enter
daa
sti
push
mov
rcr
pushf
je
jae
repnz
sarl
mov
sub
cmc
test
shll
sbb
insb
jle
rclb
dec
addr16
ss
pop
jmp
icebp
pop
fisubrl
popf
stos
mov
jle
data16
fnstenv
and
dec
push
movsl
adc
loop
iret
std
push
mov
cmpb
sbb
xchg
xor
daa
pop
movsb
push
push
inc
leave
in
cs
out
jge
lods
jecxz
inc
and
or
sbb
adc
xchg
xor
and
stc
imul
mov
pop
int
cmp
and
xchg
les
sub
and
addr16
mov
fsubrs
aam
sbb
repz
pop
jb
daa
roll
cmp
mov
mov
inc
std
cwtl
out
std
cmp
mov
roll
adc
jmp
into
pop
es
xor
mov
pop
mov
jbe
ret
lea
pop
mov
leave
or
nopl
jno
xlat
test
into
ret
jno
scas
in
lcall
outsl
addr16
std
es
pop
push
sbb
int
or
hlt
adc
sbb
rorb
les
lcall
lret
jl
ficompl
jbe
cmp
xor
out
jne
mov
stos
sbb
xchg
inc
pop
cmp
ss
pop
in
out
insl
xchg
and
and
inc
and
inc
mov
push
call
xchg
adc
mov
dec
imul
inc
testb
adc
iret
add
sub
loope
push
inc
arpl
lods
mov
shrb
mov
mov
stos
and
jle
push
push
scas
push
jne
pop
pushf
fmuls
outsb
lcall
sub
testl
ret
in
in
leave
out
inc
int
sbbb
rcr
lods
add
lock
mov
popa
test
or
dec
jnp
xchg
std
ljmp
mov
fsubrl
push
das
jo
js
xchg
lcall
and
lods
aaa
mov
mov
jne
adc
into
dec
pop
dec
inc
pop
clc
add
lock
fimull
mov
cld
xchg
mov
sbb
and
mov
ds
mov
xchg
add
ss
or
cmp
adc
sbb
sbb
leave
in
ja
add
sub
lcall
mov
xor
mov
test
js
imul
dec
sub
aam
mov
insb
push
mov
push
outsl
icebp
xor
faddp
sbb
pushl
pop
inc
repnz
add
testl
popa
mov
insb
clc
inc
sub
jno
push
jge
dec
jecxz
xchg
cmc
sub
mov
sub
or
xchg
leave
cwtl
imul
jmp
dec
xor
xor
inc
std
or
sbb
jns
lahf
lahf
daa
cmp
enter
test
aas
in
fiadds
inc
sub
test
push
gs
and
cltd
push
cmpsb
nop
inc
cmp
aam
xchg
int3
pop
loope
mov
lds
push
pusha
mov
in
push
in
sub
inc
imul
das
mov
lret
scas
scas
push
clc
fdivs
aas
push
jno
mov
inc
lds
loop
ret
mov
mov
ljmp
push
sbb
dec
dec
cli
repnz
cltd
dec
cld
lea
fsts
popf
push
jmp
jae
scas
fmull
jns
or
mov
insb
sub
jp
imul
out
and
fs
repnz
xorb
ret
push
xchg
mov
scas
jns
mov
pop
loop
or
ret
xor
inc
cltd
daa
lds
in
sbb
sti
xor
ret
pop
push
pop
sahf
sub
cmp
push
inc
lret
xchg
sbb
popa
bound
adc
inc
out
fmull
cmpsb
mov
push
add
ds
pop
fisttpll
and
push
jmp
nop
les
push
cmc
xor
xchg
mov
mov
lds
jno
mov
pop
add
push
adc
jo
xor
add
add
shlb
mov
lods
out
or
nop
sbb
add
dec
or
sub
movsb
mov
sbb
cmp
insb
add
jnp
xorb
adc
sub
mov
pop
leave
popa
push
cmp
mov
jbe
shl
stos
lds
push
adc
subl
jmp
cmp
sbb
cmp
jmp
jne
jae
lds
lret
jecxz
adc
enter
addr16
mov
addr16
cltd
dec
push
shlb
pop
cmc
and
movd
pop
fs
jp
mov
sbb
xchg
out
jmp
jg
das
sbb
mov
xchg
jnp
enter
inc
inc
sbb
push
bound
shll
jnp
stos
xor
xchg
or
dec
dec
push
dec
mov
stos
sbb
fwait
addr16
icebp
js
icebp
lcall
dec
cmp
xchg
cli
mov
adc
inc
dec
cmpsb
jbe
int
scas
in
and
loop
mov
clc
not
adc
mov
push
mov
js
test
jnp
push
in
mov
imul
frstor
jne
pop
cltd
sbb
add
ja
pop
xchg
push
jns
sub
sbb
rclb
rcrb
xor
or
sahf
inc
fdivs
mov
mov
and
mov
jno
test
adc
sbb
int3
repnz
and
pop
mov
and
dec
cmp
hlt
lahf
push
push
xlat
dec
je
mov
add
stos
dec
jne
rcrl
jmp
cmpsb
adc
dec
or
xor
dec
fs
and
push
mov
sti
mov
in
mov
and
idivb
adc
xchg
loopne
sbb
aam
dec
cmpl
mov
sub
cltd
js
mov
mov
pop
call
in
in
ficomps
push
pop
xlat
ljmp
push
or
mov
jo
outsb
repz
lahf
mov
std
mov
pop
fldt
pushf
mov
pop
xor
push
and
iret
inc
test
dec
int3
jecxz
outsb
aad
xor
repz
cwtl
mov
jnp
fisttpll
popf
pop
lods
sahf
inc
xor
mov
iret
mov
add
les
ret
rcl
jg
cmp
pusha
lret
xlat
cltd
lea
fstpl
push
std
sbb
mov
mov
and
lock
add
arpl
pop
and
push
outsb
dec
mov
jp
lods
and
xchg
push
cltd
pop
ljmp
lea
sbb
in
and
push
xchg
mov
xchg
aas
add
fisubrl
and
popa
stc
out
idiv
cmp
aam
jae
movsb
inc
push
faddl
inc
push
insb
popa
mov
xchg
jp
mov
mov
mov
test
or
jae
addr16
sbb
adc
cmp
dec
cs
cmpsb
out
mov
push
fidivs
push
mov
xchg
xchg
and
mov
inc
lea
int3
aaa
dec
roll
imul
test
xchg
int
add
popa
jle
fs
leave
mov
lods
lret
je
stc
adc
sti
in
hlt
rcll
dec
mov
sub
sub
subl
ljmp
push
adc
sbb
mov
imul
xchg
mov
and
outsl
xchg
jg
cmpsl
inc
cmp
andb
aas
xchg
iret
xchg
push
sti
mov
jecxz
nop
sub
cmp
xorl
push
jae
pop
das
mov
sub
pop
sbb
pop
mov
push
clc
nop
push
pop
ds
sbb
js
pop
cmpsl
mov
push
js
mov
dec
cli
xchg
arpl
add
adc
cmpsb
push
mov
mov
les
hlt
rcll
add
sbbb
stc
xchg
mov
out
ja
fsubrs
mov
xchg
xor
mov
mov
sti
adcb
fwait
xor
sbb
jle
mov
xor
mov
pop
mov
test
sub
int3
std
inc
push
lock
xor
ljmp
fidivs
sahf
lcall
mov
dec
shlb
jbe
adc
jge
mov
add
xchg
fdivrs
out
icebp
sbb
adc
shlb
push
push
pop
and
xlat
lret
rcll
ret
inc
dec
jae
adc
or
xor
sbb
jb
cmp
cs
je
push
out
lret
repnz
xchg
xor
fisttpl
mov
sahf
jecxz
pushf
sbb
mov
movsb
adc
mov
pop
gs
add
repz
cmp
or
sbb
mov
or
pop
jge
shlb
aas
je
lods
subb
sbb
stos
lds
pop
jge
inc
xor
lock
insb
jb
mov
loopne
mov
aad
sbb
and
enter
push
idivb
mov
dec
mov
fimuls
pop
sbb
sub
scas
mov
mov
out
outsb
mov
pop
adc
or
xor
push
add
mov
data16
xchg
xchg
lds
js
jbe
mov
push
hlt
sahf
nopl
mov
repnz
cmpsb
inc
sti
xchg
inc
pop
js
xchg
lods
cmp
xchg
sahf
cmpb
into
out
sub
mov
test
xchg
int3
fnstenv
dec
and
push
xor
aam
adc
and
cmp
mov
push
repnz
pop
ja
mov
dec
adc
jnp
mov
mov
push
push
mov
pop
jo
mov
push
mov
pusha
lret
mov
out
push
and
lcall
push
in
xchg
pop
pop
mov
or
test
mov
idivl
and
fwait
mov
test
push
insl
insl
inc
js
jns
js,pn
cmpsl
lock
mov
daa
jnp
push
sbb
inc
lahf
mov
lcall
xor
pop
out
iret
outsb
pop
jns
and
xor
inc
fisubrl
cs
pushf
bound
mov
sub
outsb
maxps
scas
mov
lcall
mov
repnz
jl
ss
mov
push
push
mov
dec
pop
idivb
stc
data16
adc
push
stc
mov
cli
fildl
xor
shrl
jae
pushf
jmp
jmp
cmp
nop
xor
fisttps
jbe
pop
inc
roll
cli
mov
dec
adc
imul
adc
dec
jge
in
jno
inc
ss
data16
arpl
jno
inc
xchg
xor
aaa
int
addb
push
jnp
stos
push
dec
mov
push
push
inc
fs
test
fnstcw
ret
fsubs
popa
mov
mov
add
shlb
dec
jecxz
sti
shrb
out
arpl
xchg
data16
jo
ds
pop
movsl
pop
out
inc
xchg
test
outsb
test
test
inc
in
inc
sti
cltd
pop
sub
dec
dec
jbe
cmp
das
pop
and
adc
cmc
sbb
bound
or
mov
inc
dec
sub
mov
or
je
xchg
pop
dec
mov
pushf
test
and
cltd
das
mov
dec
cmp
jnp
cmp
ja
cmp
les
mov
mov
mov
or
and
mov
mov
sahf
insb
aas
and
sbb
inc
adc
xor
jnp
adc
jnp
jnp
inc
jne
mov
push
fwait
jb
jo
mov
mov
pop
movsb
inc
mov
pop
inc
or
int3
bound
cmp
pop
mov
fisttpl
push
cwtl
inc
cltd
int
or
mov
daa
dec
add
jae
mov
jno
inc
mov
mov
out
or
lcall
add
ds
or
or
mov
add
jge
pop
cmc
pop
fs
or
sub
mov
dec
ficompl
cmpsb
negb
mov
lock
cmp
adc
mov
aam
mov
sahf
jmp
dec
or
test
nop
ret
outsl
sbb
in
jbe
rol
xchg
movsb
out
pop
imul
cmp
cs
dec
aad
lock
xor
rol
mov
or
fldln2
push
fadd
lret
lret
pop
jmp
and
push
mov
iret
mov
pop
aad
sti
pop
jno
mov
mov
jne
push
or
jbe
in
push
pop
in
int
pop
aad
ds
out
stos
xchg
mov
insl
pop
sub
mov
jb
lahf
mov
sub
push
inc
fiadds
mov
pop
push
push
aaa
mov
imul
mov
loope
arpl
les
adc
mov
fwait
bound
sub
addr16
stc
xor
mov
xor
rcrb
mov
orl
shlb
jnp
lahf
sti
xchg
sbb
add
shll
jo
mov
inc
sub
imul
sbb
jns
push
stc
imul
adc
inc
pop
jmp
sbb
mov
jmp
test
rcr
sahf
dec
fisttps
stc
mov
jb
imul
add
out
dec
push
xchg
arpl
cmc
movsl
cmp
fldenv
sub
mov
or
shlb
and
dec
mov
cmp
imul
incb
sahf
cmpsb
push
pop
orb
inc
or
test
jb
and
push
ja
clc
dec
les
add
stc
dec
push
and
dec
jmp
jge
loopne
or
call
bound
jge
mov
dec
and
sub
shlb
adc
or
mov
xchg
test
mov
jl
jnp
movsl
dec
loope
pop
loop
push
shlb
cmp
push
rcl
cmpb
sub
bound
push
adc
mov
inc
sbb
in
int
ss
cmp
mov
out
or
cmc
ljmp
and
or
sbb
hlt
mov
idivb
lods
adc
shl
mov
rorb
addl
into
dec
mov
pop
dec
xor
call
fildll
arpl
lcall
push
lret
in
xor
mov
mov
insb
push
push
mov
cwtl
outsl
xor
fs
inc
loope
or
dec
cmp
cwtl
xor
adc
lcall
xchg
sub
xor
jg
loop
pop
loop
sti
mov
pop
pushf
jle
hlt
push
pop
inc
xchg
fistps
mov
adc
loope
cli
add
cmp
sub
mov
dec
push
mov
mov
lret
loop
inc
sub
adcl
faddl
xorb
lods
movsb
ficompl
mov
sub
hlt
cwtl
xor
adc
test
arpl
xor
xchg
dec
push
push
stos
movsb
xor
dec
and
xor
and
mov
call
mov
xchg
pop
add
repnz
mov
repz
movsl
or
sub
imul
fadd
pop
test
lahf
jl
stc
sbb
in
addr16
inc
xor
aam
call
or
test
jns
outsb
and
lcall
jmp
mov
std
mov
int
dec
enter
pop
sbbb
xchg
mov
test
clc
in
pop
xchg
push
jno
jo
mov
mov
sarb
xchg
pusha
push
xchg
aam
push
xor
imul
inc
fsts
lock
add
adc
pop
pop
pushf
sub
inc
out
es
fdivrp
lret
inc
into
lock
jle
xchg
rcr
clc
xchg
sbb
sub
jl
mov
mov
shlb
fstpt
popa
pop
mov
test
clc
sbb
inc
outsl
mov
repnz
sub
insb
sbb
adc
cld
and
inc
fisttpl
cmpsb
mov
add
rcll
push
leave
lcall
xor
ljmp
loope
sbb
mov
pop
repz
pop
jle
cmp
test
rorb
jb
xor
enter
stos
sub
push
ja
xor
cld
lret
popa
sub
mov
mov
dec
loopne
fdivs
fmulp
xor
ficomps
cltd
inc
rcrb
pop
in
mov
sahf
ss
mov
fisttps
mov
js
clc
aam
clc
repz
rcrl
pushf
test
mov
jnp
leave
mov
and
sti
test
push
xchg
push
adc
bound
loope
adc
sub
xchg
ljmp
xor
ds
lock
pop
or
cwtl
or
inc
sub
and
mov
xor
cld
pop
insb
subl
shll
mov
adc
mov
and
adcl
cmp
ret
loop
mov
gs
mov
mov
rcr
loopne
pop
mov
dec
mov
es
mov
inc
fs
jl
cmp
out
or
xor
leave
mov
pushl
fs
insl
fimuls
xchg
insl
bnd
das
testl
mov
cmpsb
cmp
jl
sahf
push
adc
xor
xor
cmpsl
out
mov
ret
sbb
mov
push
dec
push
cmpsb
cltd
jnp
flds
popf
loop
mov
dec
inc
pusha
adc
insb
insl
nop
dec
popf
xchg
xchg
jmp
dec
sbb
cmp
loope
mov
and
xchg
out
xchg
cmp
xor
ja
mov
jmp
jne
mov
adc
xchg
out
movsb
rcrb
jmp
fadd
push
cs
jbe
stos
or
push
pop
imulb
cld
xchg
out
jns
lahf
mov
jno
pop
sahf
xor
out
popf
jmp
call
cmpsb
cwtl
push
stc
xchg
xchg
and
xchg
arpl
and
push
push
scas
or
xchg
lods
sbb
fnstsw
sbb
pop
rcrb
ret
mov
xchg
and
mov
cmp
adc
or
dec
lds
cmp
dec
and
sbb
dec
or
inc
sub
shrb
mov
addr16
cmp
adc
arpl
jae
ror
and
out
call
cmp
das
out
out
out
mov
sbb
cmp
xlat
pop
fcompl
and
xchg
add
push
test
gs
in
lods
dec
dec
push
pop
fs
bound
test
push
movsb
mov
adc
jne
dec
ja
out
pusha
sti
hlt
mov
add
pop
addr16
xor
and
jle
xor
dec
lea
inc
frstor
sub
dec
addl
mov
ljmp
xor
into
fimuls
pusha
sti
inc
jecxz
inc
insl
sbb
subb
inc
jne
inc
sub
shr
pop
lea
outsl
xor
out
pop
dec
jns
mov
call
pop
pop
cmpsb
add
loope
sbb
mov
fmull
lret
movsb
loope
dec
fcompl
mov
adc
inc
sub
out
ret
inc
dec
jbe
mov
jns
imul
adc
sbbl
fmuls
sub
mov
xor
sahf
dec
push
push
pop
lahf
rorl
inc
add
mov
divb
mov
lcall
cmp
mov
leave
jne,pn
dec
inc
mov
adc
jp
adc
mov
dec
cs
outsb
dec
cmp
jnp
xchg
or
hlt
aam
iret
xchg
pop
into
add
and
ja
cwtl
fmuls
jmp
sbb
inc
jno
lods
push
xchg
rorb
xor
adc
xchg
and
cmp
sbb
shll
adc
sub
mov
cmc
lods
mov
xor
sbb
lock
pop
loopne
jmp
aas
scas
arpl
cmp
sub
jl
nop
inc
mov
cmp
mov
imul
notb
mov
out
pop
sbb
das
jg
sub
and
shl
jnp
mov
out
lahf
iret
int3
scas
or
dec
mov
xchg
or
xlat
rcl
sub
push
dec
add
xor
mov
adc
pop
iret
sub
mov
scas
push
fs
out
int
jae
out
test
ljmp
push
sbb
cmc
mov
dec
mov
loop
ds
mov
mov
push
aas
mov
in
movsb
pop
stos
xchg
lock
inc
icebp
mov
adc
roll
sub
sub
cld
je
in
gs
lcall
push
cltd
movsl
dec
adc
shrb
popf
in
sbb
lcall
mov
popa
popa
test
lock
fsubs
in
out
addr16
xchg
fdivrl
in
push
call
adc
mov
stos
and
fistps
mov
je
enter
js
and
sbb
and
ret
add
inc
or
ret
push
sahf
loope
mov
mov
dec
test
sbb
or
push
dec
cmp
hlt
sub
sub
fbld
arpl
or
jp
ljmp
and
xchg
adc
imul
sahf
and
mov
lods
aas
nop
je
adc
push
sub
cmp
subb
sub
sbb
inc
pop
inc
fwait
mov
shl
pop
loopne
mov
fwait
pop
jl,pn
inc
ljmp
pusha
mov
sbb
outsl
mov
push
shlb
pop
in
lahf
xchg
push
daa
pop
sbb
repnz
cmpsl
ljmp
mov
popa
mov
and
mov
bound
cwtl
xchg
clc
pop
sub
subl
jne
adc
sub
mov
insb
sbb
rclb
or
shlb
nop
and
push
cs
outsl
aam
inc
fisttpl
jno
cld
pop
and
testb
sub
pop
xchg
movsl
dec
and
pop
sub
lods
sbb
les
pop
aaa
out
insb
jl
cwtl
sub
lds
sub
push
dec
xchg
pusha
dec
lret
push
std
stos
jle
imul
push
jle
in
xor
xchg
sub
sub
jp
and
cmp
jg
mov
push
mov
addr16
xor
lret
pop
test
hlt
hlt
pop
inc
fidivl
mov
cmp
mov
adc
adc
mov
cmpxchg
jae
mov
int3
sbb
xor
inc
push
sarl
mov
fdivs
xor
std
or
push
into
pop
mov
xor
cmp
js
lock
jno
test
insb
movsl
imul
cltd
lods
sbb
mov
jb
ficoms
rcr
inc
pop
dec
xchg
in
push
out
scas
mov
nop
in
int3
stos
push
repnz
arpl
stos
xchg
jno
es
mov
sbb
cmp
loop
adc
sub
cmp
jle
push
cwtl
and
add
fidivrl
push
xorb
adc
xchg
insb
add
pop
lahf
mov
jns
fidivs
outsb
or
xchg
add
adc
js
ja
divl
bound
adc
mov
xor
pop
dec
jp
add
stos
shrb
mov
into
pop
push
clc
out
pop
xchg
sar
dec
lcall
into
fisubl
test
cltd
mov
out
xor
pushf
jo
pop
mov
pushl
mov
popf
loop
incb
xor
sti
into
push
inc
scas
pusha
or
inc
mov
dec
dec
ret
out
mov
adc
inc
mov
in
or
repnz
sti
xor
cmc
dec
ret
mov
ret
xchg
fstpl
inc
adc
outsl
push
or
dec
mov
and
xchg
ficoms
and
or
or
int3
lods
xchg
sbb
cmp
mov
out
push
inc
stos
cmpsl
adc
cvtps2pd
call
enter
out
in
xlat
addr16
mov
adc
xchg
rcrl
jmp
mov
or
ds
lea
dec
cmpsb
or
sbb
lock
cld
jl
or
inc
mov
cli
bnd
mov
inc
mov
out
xchg
stos
xchg
loop
ljmp
push
push
fcompl
lock
fisubrs
cmp
and
scas
out
inc
sbb
inc
mov
ljmp
outsb
in
scas
pushf
aaa
pop
imul
mov
ret
sti
sahf
cwtl
fistpll
and
bound
sub
jg
cmpb
dec
jb
adc
sub
test
mov
xor
cwtl
xchg
pop
mov
gs
dec
cmc
dec
mov
pop
sbb
push
cmpsl
pop
dec
fisubs
sub
das
out
clc
add
mov
lahf
not
ret
inc
jo
arpl
fdivr
aas
shrb
gs
nop
push
push
out
dec
add
dec
fxch
rcl
sti
lahf
int3
mov
adc
fiaddl
lock
repz
inc
incl
add
les
jle
sbb
cld
adcb
jmp
lret
xchg
aas
ljmpw
xchg
imul
loopne
loop
jmp
push
out
pop
push
rsm
lock
pusha
nop
push
xchg
push
jl
out
xor
lret
pop
imulb
mov
pop
ds
cld
adc
int
fcoms
cmp
mov
and
push
inc
jne
inc
sbb
push
mov
xlat
in
test
sti
pusha
in
adc
mov
adc
fcmovnu
mov
fstpt
test
mov
or
cmpsl
pop
in
insb
push
mov
push
fs
push
shr
jae
pop
add
iret
pop
mov
aam
dec
inc
sub
cmp
aas
push
inc
cs
mov
inc
inc
push
inc
jg
cli
xor
jle
fisttpl
and
mov
xchg
es
pop
mov
lea
mov
jmp
into
arpl
push
movsb
neg
push
in
rorb
jno
lea
push
pop
or
mov
scas
mov
mov
mov
outsb
inc
push
cmp
xchg
jbe
in
dec
enter
fnstcw
pusha
push
aad
jge
idivl
insb
sub
or
mov
test
sbb
stc
addr16
xchg
iret
push
sub
xchg
mov
add
test
mov
mov
js
xor
inc
and
xor
dec
dec
mov
cmp
sbb
fisubrl
movsl
pusha
shll
mov
std
ficoml
mulb
lea
outsb
ss
mov
shrb
das
subb
mov
mov
sub
mov
pop
dec
icebp
int
add
sub
cmpsb
scas
sub
mov
rcrl
mov
shll
push
add
bound
insb
lret
mov
mov
cs
xchg
push
pop
cmp
mov
arpl
and
inc
cmp
xchg
xchg
dec
out
stos
xorl
push
out
jp
cmp
inc
int3
popa
dec
jo
push
insb
mov
jns
ret
popl
subl
xor
aaa
insl
std
clc
mov
inc
test
add
sbb
cld
lcall
and
pusha
jnp
jecxz
or
or
xor
les
xor
iret
or
mov
sub
sbb
lcall
xchg
and
jb
push
push
xchg
add
sub
call
mov
mov
jo
clc
repz
cmp
les
int
dec
cmp
mov
push
test
jecxz
mov
imul
sbb
jmp
aad
add
mov
stos
lret
aad
testb
push
jge
mov
pop
mul
adc
pushf
test
or
into
jmp
xchg
pushf
int
push
xchg
cmp
jnp
cmc
xchg
in
adc
push
mov
pop
add
mov
adc
and
mov
mov
xchg
sub
imul
mov
setne
sahf
xchg
in
shlb
decb
fdivr
sbb
mov
push
lahf
mov
sub
std
ficoml
lahf
push
in
xor
iret
mov
and
gs
adc
dec
roll
adc
into
inc
loop
add
pop
bound
testb
js
scas
sbb
scas
shrl
pushl
push
xchg
jb
cld
hlt
pop
pcmpeqb
inc
push
dec
fisubl
lcall
inc
dec
fstpl
or
mov
mov
or
das
cmp
push
lea
out
xorl
adc
xchg
movsl
aad
outsl
pop
inc
cltd
std
icebp
jne
dec
push
inc
and
loopne
out
mov
test
les
sbb
jns
roll
in
mov
and
mov
xchg
cmp
cmp
cmp
nop
bound
lea
inc
sub
inc
xchg
or
pop
cmc
aaa
sarl
lret
aas
imul
pop
stc
push
dec
hlt
ret
cmp
shlb
repnz
and
and
das
inc
mov
lcall
jns
push
test
in
push
shlb
fistps
dec
push
mov
cmp
mov
test
pop
ret
insb
fdivp
call
adc
mov
sarb
clc
dec
adc
xchg
jno
std
std
lahf
ja
push
testb
stos
and
sub
xchg
mov
sbb
out
cmp
lcall
cs
pusha
movsb
outsb
insl
cli
ja
test
pop
or
lds
inc
loopne
sub
addr16
push
sub
out
or
lock
sub
inc
dec
add
daa
cld
les
mov
int3
sub
sbb
mov
incl
mov
pop
scas
sbb
adc
insb
pop
dec
inc
je
aad
std
xchg
mov
loop
fwait
inc
in
je
out
sarb
xor
xchg
in
mov
xchg
jle
jb
aad
mov
pop
int3
daa
jo
xorl
aaa
into
fiaddl
pop
inc
je
iret
addl
das
jns
jno
fiadds
mov
stos
imul
insl
inc
ja
inc
inc
dec
stos
imul
push
je
repz
fildll
jecxz
xlat
or
cltd
das
cld
lods
lcall
add
sbb
inc
xchg
push
or
jbe
in
popf
jp
testl
test
loope
cwtl
jecxz
pop
lods
dec
mov
lods
mov
cmp
scas
mov
xor
adc
shll
xchg
shrb
add
and
and
shll
movsb
out
in
dec
pop
add
ja
xchg
fwait
push
and
push
mov
repnz
mov
add
mov
mov
xor
sub
push
mov
cmpsb
repnz
pop
clc
dec
xor
and
xor
outsl
push
mov
push
fiadds
pop
cmpsb
pop
ja
ljmp
lods
push
mov
sbbb
ljmp
insl
out
inc
cmp
and
lods
push
fsts
jne
and
shlb
lcall
cld
dec
repnz
xor
jae
jp
outsb
xchg
mov
subl
push
jg
hlt
pop
xchg
shll
or
push
lods
xor
into
imul
das
inc
rol
push
push
std
shlb
into
mov
js
mov
dec
ds
jp
rcrl
inc
cmp
stos
aaa
notb
repnz
pop
stos
lret
arpl
aaa
outsl
cli
fld
aad
jbe
int
sbb
repz
inc
nop
xor
dec
jns
test
mov
cmp
jo
inc
jmp
xchg
in
test
xchg
aaa
das
popf
add
sbb
or
hlt
adc
addr16
mov
call
cmpsl
das
adc
ljmp
sub
jnp
imul
ja
sub
mov
das
jl
xor
add
push
iret
jns
aas
in
dec
dec
test
loope
inc
cmp
imul
xor
in
into
mov
inc
cmpsb
mov
sub
and
out
inc
adc
adc
pop
test
pop
lods
setle
ja
popf
popf
fmul
out
push
jp
lods
and
outsl
daa
dec
xor
out
js
and
into
popa
sub
out
imul
jnp
fcmovne
dec
sbb
out
mov
pop
lods
in
jae
jg
ljmp
stos
enter
lock
iret
xchg
loopne
call
mov
lds
mov
mov
dec
aas
movsb
outsl
lahf
ljmp
mov
jo
movsl
pushf
out
cmpsl
cli
movsb
sbb
leave
loope
xor
lahf
in
rcl
addl
pop
out
xchg
std
push
add
mov
inc
arpl
cmc
rclb
xchg
xchg
or
lea
repz
fwait
addr16
mov
mov
cmpb
lds
leave
bound
xchg
pusha
js
insb
and
or
lahf
ljmp
push
jns
mov
es
xlat
js
clc
mov
adc
stos
cld
or
repz
out
leave
lods
out
aam
les
and
out
lds
hlt
jne
pop
lods
ret
in
dec
es
inc
stos
movsl
insl
aad
adc
mov
pop
test
adc
test
pop
jae
fcompl
or
daa
mov
or
adc
inc
imul
sbb
mov
adc
lea
jp
pop
fwait
push
mov
call
push
clc
xlat
idivb
dec
and
inc
pushf
in
in
adc
dec
stos
insb
pushw
jbe
fimuls
stos
xor
cmp
xchg
loopne
sbb
int3
ljmp
sub
sbb
push
adc
movsl
scas
jae
dec
test
push
dec
dec
ret
movsl
mov
push
scas
nop
xchg
push
push
jns
loope
sbb
mov
repz
lahf
popf
gs
pushl
mov
push
fucomp
lods
addr16
stos
add
mov
sbb
les
adc
ja
and
ficoms
push
out
add
sahf
aas
mov
faddl
dec
in
stos
jecxz
stc
loop
jnp
nop
inc
loop
sbb
pop
test
add
pop
sar
iret
out
dec
push
jmp
cmp
add
cli
std
xchg
push
or
jae
inc
in
xchg
sti
mov
arpl
shll
outsb
enter
mov
enter
int3
jecxz
loope
mov
ret
cmpb
les
ret
push
ficompl
neg
mov
test
sbb
sbb
cwtl
call
cmp
pop
pop
fnstsw
jecxz
dec
mov
and
in
xor
into
xchg
sbb
pop
popa
bnd
shll
imul
or
cmpsb
adc
pusha
inc
xor
out
sar
dec
scas
pop
add
sti
push
daa
xor
and
ret
test
sub
sbb
pop
test
pop
push
in
xorb
je
cmp
pop
mov
pop
cmc
jno
xchg
jnp
pop
mov
dec
fidivrl
mov
and
mov
outsl
lods
es
in
add
je
sub
fs
mov
sbb
mov
lds
xchg
clc
and
dec
imul
push
aad
cmpsb
xchg
pop
xchg
loop
fwait
mov
daa
stos
fildll
dec
mov
xor
pushf
packuswb
scas
data16
jo
xchg
xor
add
mov
rol
pushf
mov
xchg
es
xchg
and
iret
lods
inc
lds
pop
xor
movsb
or
mov
jmp
and
jo
mov
imul
je
dec
adc
xor
pop
jns
cmp
cmp
xlat
pop
xor
outsb
push
cmp
mov
push
pop
sub
add
in
adc
jae
xchg
push
andb
cmp
bnd
stc
mov
add
or
aas
popa
and
nop
fld
outsl
push
push
into
fwait
outsb
ficoms
xchg
roll
je
fdivrs
call
out
lock
xor
in
aaa
push
es
add
xchg
icebp
mov
adc
movsb
sub
jecxz
mov
test
add
pusha
iret
mov
push
imul
cmp
inc
jbe
sbb
ret
lahf
lcall
sub
pushf
movsb
outsl
sbb
loopne
xchg
inc
stos
push
jle
pop
loopne
push
mov
cmpsl
jae
mov
out
or
adc
xor
xor
xchg
std
adcl
leave
popf
pop
repz
gs
push
scas
adc
mov
pop
sbb
sbb
or
xor
add
pushf
and
add
bnd
push
pop
fcomps
outsl
mov
inc
jl
icebp
movb
sbbb
gs
dec
dec
sbb
mov
mov
pop
inc
jecxz
leave
inc
jns
repnz
sbb
pop
mov
xor
pop
test
daa
adc
inc
out
enter
inc
mov
dec
fsubs
xor
ja
out
fidivs
divl
dec
mov
cs
pop
mov
mov
mov
loop
inc
in
sub
xchg
jns
mov
adc
cmp
cmp
pop
cltd
jge
fs
xchg
andl
jns,pn
call
test
or
shll
push
push
adc
add
or
mov
mulb
jnp
daa
in
leave
mov
sbb
cmp
repz
push
add
jl
push
mov
rcr
mov
dec
fistpll
test
pusha
scas
dec
mov
dec
dec
cmpsb
sbb
and
push
xchg
mov
push
ficoml
stc
xor
das
or
xor
adc
test
pop
call
in
mov
xchg
mov
dec
dec
loop
xlat
cs
test
pop
mov
add
mov
arpl
jmp
adc
nop
lret
adc
xlat
xor
mov
add
lds
insl
enter
test
test
fwait
cmpsb
cltd
mov
loopne
mov
mov
xor
pop
int
add
cmpl
int3
inc
cmp
or
les
into
mov
cs
enter
jg
cmp
pop
xchg
mov
mov
sahf
mov
adc
mov
mov
aam
in
ds
jne
jmp
cltd
push
jmp
nop
pop
push
gs
fnsave
and
sbb
aas
mov
adc
add
and
push
les
subb
inc
xor
ds
mov
mov
push
fs
dec
adc
imul
out
dec
and
stos
and
push
popa
lock
and
addr16
fcmovnb
or
jl
dec
xor
lahf
and
aas
push
cli
mov
jp
pop
scas
xor
sub
adc
cwtl
pop
inc
aaa
int3
lock
add
pushf
out
lods
mov
and
aaa
add
mov
push
dec
pop
fidivrl
adcb
call
and
out
lds
pop
int
stc
fxch
lods
sub
js
cs
int
icebp
ret
jle
and
mov
mov
fisubrl
and
int
negb
pusha
daa
xor
or
or
ficoms
mulb
inc
adc
cmpsl
and
xchg
xor
or
out
shll
cmp
jge
sub
mov
xor
mov
inc
mov
mov
jg
jmp
adc
rolb
in
gs
fcmovb
or
xor
push
push
mov
and
push
add
mov
or
test
in
imul
loope
sbb
sub
push
lods
aaa
outsb
cmpsl
dec
out
sub
fwait
sbbb
push
adc
mov
and
pop
adcb
sbb
mov
inc
push
repnz
pop
push
mov
fwait
cmp
test
cwtl
xchg
ffreep
into
out
mov
sbb
insl
hlt
jecxz
repnz
out
mov
inc
jns
in
imul
inc
aam
pop
lock
out
sbb
ficompl
or
incb
in
pop
js
aas
or
icebp
inc
mov
cld
dec
leave
mov
push
gs
fistpll
and
adc
roll
mul
inc
jns
lcall
inc
cmp
pop
dec
bound
divl
dec
sbbl
pop
test
xor
popl
int
cld
xchg
das
cmp
inc
ror
jl
mov
mov
test
add
aam
and
mov
cmp
xchg
stc
sti
pop
into
rcrb
inc
mov
push
fisttpl
inc
jg
push
insl
add
nop
cmpsl
lods
loope
je
dec
pop
into
add
out
add
or
nop
test
xor
fcoml
mov
ret
dec
scas
pop
adc
in
popf
call
sti
push
and
mov
shlb
movsl
mov
add
cmpsl
outsb
or
test
repnz
pop
mov
jae
js
fildll
fcmove
bound
mov
nop
jle
xor
push
xchg
or
mov
jp
jns
out
cmp
adc
or
and
jge
adc
add
mov
mov
cmc
insl
lods
cmp
insl
loopne
mov
fnsave
stc
add
shlb
pop
and
mov
movsl
mov
loop
sarl
mov
popa
icebp
testl
push
and
sbbl
pop
pop
loope
sahf
fisubs
dec
lea
stos
sti
stc
add
daa
dec
xor
bound
xchg
adc
stc
pushf
pop
push
repnz
out
out
cmpb
popa
xchg
insl
cld
mov
inc
sbb
ss
xor
aas
stos
sbb
xchg
xor
xchg
in
cmpsl
mov
ljmp
mov
dec
stos
xlat
lods
ds
and
mov
mov
insb
jecxz
hlt
mov
sbb
fadds
mov
out
mov
jecxz
sub
mov
adc
shlb
push
inc
jg
cmp
pushf
push
scas
andl
insl
call
push
loopne
or
pop
push
cmpsl
je
mov
mov
adc
in
xchg
push
rcr
xchg
loop
lret
gs
jle
pop
xchg
push
add
lods
popf
push
dec
jno
pop
sbb
adcl
lahf
jp
sub
adc
outsb
cmp
sti
shlb
push
or
push
jno
sar
mov
or
adc
and
and
jno
shl
push
pop
xchg
xchg
jle
or
lahf
pop
ret
repz
lcall
push
pop
sub
inc
push
repz
mov
cmp
scas
shll
sub
or
data16
inc
sub
adc
decb
cmc
mov
mov
data16
subl
mull
jl
jle
xchg
pop
xchg
addr16
xor
outsb
shl
fst
mov
mov
pop
int
cmpsl
ret
cltd
pop
mov
loope
mov
dec
rol
icebp
clc
add
mov
cmp
pop
arpl
mov
lahf
jl
movsb
test
xlat
adc
mov
enter
xchg
stos
xchg
jb
sub
and
sbb
dec
test
icebp
loopne
fldenv
outsl
mov
push
les
and
sub
pop
xlat
fisttpll
mov
mov
dec
test
rorb
std
roll
jecxz
xor
sub
mov
mov
call
adc
scas
jae
ret
in
xchg
pop
push
lods
push
adc
dec
pop
ja
fsubrl
popa
sbb
mov
lds
in
test
daa
insb
cld
stos
stc
inc
mov
insl
cld
or
adc
xlat
mov
pop
jp
adc
xor
mov
xchg
jns
jl
jmp
popa
mov
dec
push
outsl
pop
popf
jno
sub
jbe
mov
data16
cmp
ljmp
in
add
mov
cmp
insb
or
cmp
test
loopne
xchg
pop
sub
movsl
ja
inc
aad
fwait
test
int
popl
fdivl
sbb
xor
mov
in
sbb
or
sub
sub
scas
cmp
ja
sahf
fs
add
adc
jb
or
out
es
xchg
outsb
xchg
nop
ret
out
mov
jmp
pop
mov
aam
push
xchg
in
jb
bound
mov
movsl
add
imul
inc
push
movsl
lods
cmp
stc
clc
fldt
sbb
inc
inc
mov
pop
lcall
andl
and
cwtl
push
pop
add
in
daa
fistl
push
pop
fsubr
sti
and
stc
add
daa
push
mov
add
testl
stc
mov
inc
mov
push
or
aaa
test
fildll
add
shl
inc
pop
std
movsb
push
pop
into
int
jne
mov
into
mov
inc
outsl
sub
mov
mov
je
xor
std
jge
add
repz
stos
cmp
rorb
jge
xchg
leave
test
cmpsl
and
into
adc
out
jmp
sahf
jno
seta
sbb
cmp
loopne
cs
iret
or
ss
aas
dec
push
shll
mov
mov
jno
outsb
dec
lds
mov
push
imul
data16
dec
test
bound
cmp
das
adc
mov
insb
lods
add
mov
nop
aad
mov
push
lret
mov
xchg
mov
stos
and
cmp
lds
sub
mov
cmpsl
fidivrs
add
mov
sarl
pusha
xadd
or
dec
mov
mov
or
cmpsb
cwtl
rorb
jp
pop
frstor
and
dec
outsl
jae
push
sti
sub
lea
dec
in
les
test
push
pop
xchg
fldl
inc
ret
sbb
aaa
inc
repz
and
test
les
cmc
aad
adc
pushf
pushf
inc
lock
fsub
mov
sub
xchg
cltd
mov
bound
js
inc
mov
sub
inc
and
mov
and
cmp
stc
lret
pushf
in
pop
lods
test
pop
sbbb
jp
int
jmp
mov
dec
inc
hlt
cmpl
sub
in
jbe
xchg
inc
add
jmp
cmp
loope
jbe
sub
sahf
out
mov
test
jb
out
xlat
jecxz
faddl
aaa
addl
sub
out
addr16
sti
in
fs
sbb
dec
lods
in
pop
cmpsb
pop
push
mov
add
in
cmpsl
add
lods
in
sub
sti
in
mov
outsb
sahf
bound
sub
iret
jb
push
mov
imul
xor
iret
add
mov
enter
psraw
mov
lret
mov
add
pop
faddp
ss
push
and
mov
cltd
sub
mov
sub
jae
cltd
shr
popf
sarl
xor
aaa
jb
stos
and
push
xchg
jge
movsl
sub
dec
pushf
mov
insb
add
sbb
jecxz
add
cmpl
sub
addr16
out
popf
jge
pop
add
xchg
test
or
and
dec
push
cmpsl
pop
divl
add
mov
pop
rol
mov
int
add
dec
je
add
jge
dec
incl
pop
pop
repnz
xor
mov
cmc
lret
sbb
add
xchg
ss
push
sbb
push
mov
dec
and
fcoml
mov
mov
cmp
push
mov
in
xchg
push
cmp
lret
push
mov
mov
and
pop
push
imul
lock
xor
pop
jns
mov
mov
jne
fwait
mov
xor
insb
xchg
cmp
lods
sahf
mov
test
mov
imul
mov
mov
test
push
cmp
shr
push
fiaddl
sbb
ret
dec
loope
hlt
pop
add
iret
xchg
ds
push
or
aam
arpl
inc
scas
js
push
pop
imul
mov
mov
push
push
out
in
psubd
fs
imul
repz
ret
mov
out
add
mov
xchg
jmp
adc
pop
stos
aad
imul
roll
je
mov
lods
cmp
or
mov
mov
out
jns
jg
and
jns
xlat
xchg
push
bound
movsl
sbb
xor
testb
add
ja
mov
mov
ja
clc
mov
daa
cmp
push
lea
push
mov
xor
cmp
jo
fs
xor
lea
adc
push
stc
pop
and
leave
iret
insb
insl
push
sub
addr16
push
in
fcoms
lods
repnz
adc
sub
out
sbb
or
in
jg
add
jb
ret
jle
sbb
stos
mov
jno
sahf
das
mov
and
iret
in
ds
imul
cmp
outsb
push
cmpsb
cmpsb
adc
loope
sbb
repz
xorw
cmp
xchg
xlat
mov
and
mov
adc
or
dec
jb
loop
mov
jb
mov
nop
inc
dec
lret
aam
lods
pop
inc
add
es
test
xor
sub
sub
fimull
iret
push
sbb
dec
orl
mov
fiadds
cltd
stos
pop
leave
lds
out
fucomip
add
pop
xor
mov
in
xchg
loop
xor
or
xchg
mov
test
jbe
popa
sub
stc
push
mov
mov
mov
pop
mov
mov
scas
pusha
dec
out
fnstsw
push
and
jbe
shl
cmp
sub
add
lcall
xor
dec
les
sub
lret
or
mov
and
pop
push
test
mov
aas
ss
xlat
or
push
jno
cmpsl
sbb
and
cld
cli
push
inc
cmc
arpl
inc
cmp
push
das
aaa
filds
fildll
test
cmp
mov
xor
fs
hlt
inc
cmp
add
insb
scas
xchg
xchg
adc
cs
jecxz
cmpsl
test
arpl
imul
addr16
pop
test
imul
xchg
cmp
xor
or
inc
imul
mov
int3
lods
and
cltd
test
pop
test
and
es
push
ja
dec
pop
jb
mov
push
push
pop
dec
mov
xchg
enter
das
jg
push
inc
pop
shll
sub
cld
cmp
mov
jnp
xor
mov
cmpsb
jge
ret
lods
repnz
jmp
dec
mov
insb
imul
addr16
xchg
cwtl
sbb
xchg
lds
aas
pop
xchg
xchg
insb
xor
mov
mov
xor
and
fdiv
insl
mov
test
cs
dec
aam
cmp
pop
repz
pop
subb
xor
lock
insb
mov
xchg
fsubs
in
jge
adc
in
repz
pop
cli
movsb
pusha
leave
bound
dec
push
mov
outsl
jbe
mov
add
fists
push
adcl
movl
std
adc
dec
cmp
aam
and
das
mov
ss
fdivr
inc
cs
fistl
stos
xchg
add
inc
lods
enter
int
popa
out
pop
add
scas
imul
testl
inc
push
jmp
andnps
sub
push
inc
push
or
les
xchg
cltd
jbe
test
adc
sub
aas
mov
mov
pop
out
xorb
test
mov
mov
mov
out
insl
cmp
enter
insb
out
adc
lret
mov
mov
mov
jnp
mov
mov
das
fwait
mov
es
mull
mov
dec
repnz
cmpsl
icebp
pop
in
xchg
popf
push
sub
iret
xchg
data16
sub
movsb
add
or
pop
fildl
adc
add
jge
push
movsb
fsub
inc
loopne
cmp
nop
adc
stc
into
dec
pop
cmp
or
mov
dec
xor
mov
jns
push
mov
cli
dec
sbb
popa
mov
xchg
cld
dec
mov
and
push
sbb
and
sbb
ret
test
hlt
jne
push
add
rcl
in
jnp
ljmp
sub
jg
leave
push
sar
sbb
push
inc
test
fadds
xor
and
mov
movsl
repz
xchg
cmp
imul
pop
add
je
fstpl
je
sub
xor
xor
or
push
mov
sub
in
mov
data16
mov
cmp
pop
pusha
rcrb
jmp
jne
aam
push
gs
jecxz
pop
es
xorb
push
push
xor
push
mov
dec
cmc
mov
inc
ret
mov
sub
flds
inc
frstor
or
lds
cmp
inc
and
cmp
and
add
and
push
mov
cmc
or
data16
cs
pop
int3
dec
jno
mul
fistpll
adc
sub
push
in
sti
push
xchg
lcall
hlt
test
xchg
lods
lret
loopne
sbb
sti
and
jmp
test
or
push
ret
out
sbb
scas
ficoml
cmp
xor
mov
pop
jnp
pop
mov
dec
cmpsl
sbb
mov
add
sbb
loopne
ja
push
xchg
dec
inc
pop
pop
inc
scas
xacquire
xor
inc
test
xchg
cmpsb
sarl
sbb
mov
rclb
cmp
in
das
jnp
pop
or
aad
icebp
testl
push
stc
push
pop
sub
aam
mov
push
dec
test
inc
test
pop
mov
call
daa
and
mov
add
xor
insb
adc
fxch
pop
mov
incl
in
inc
push
dec
and
rorl
insl
sarb
fldl
cmp
popf
sub
adc
popf
outsl
mov
mov
into
lahf
pushf
daa
insb
jno
dec
inc
mov
scas
lods
adc
cmp
insl
test
insb
ficoms
rcll
mov
mov
inc
sbb
pusha
or
adc
pop
mov
je
or
sub
mov
and
sub
into
arpl
dec
or
xor
loope
arpl
jo
andl
mov
add
roll
fnstenv
and
ja
cmp
xor
cltd
or
xor
insl
adc
cmp
push
aaa
arpl
insl
ja
sti
hlt
int
mov
and
pop
add
mov
xor
cmp
aaa
mov
ljmp
jne
xor
ljmp
add
mov
inc
sbb
push
add
dec
int
push
xchg
sub
fstp
lahf
pop
pushf
les
xor
cmpsb
xor
std
mov
icebp
jg
mov
hlt
loope
daa
fmul
push
in
pop
jns
loopne
test
stos
mov
adc
aam
call
jmp
shl
sub
shll
je
daa
cmpsb
imul
fsubs
jp
in
mov
in
and
inc
push
mov
mov
xchg
sbb
das
add
test
bound
cmp
cwtl
cmp
loopne
ds
jl
push
out
lret
xor
js
es
mov
lret
xor
adc
inc
xchg
cwtl
jp
lea
push
movsl
cmp
in
jo
xor
enter
sbb
js
rorb
mov
cmp
sar
fmull
xchg
jmp
cmpsl
jp
pop
jnp
dec
inc
or
shll
pop
clc
outsl
or
jp
stos
cmp
xchg
imul
cli
int3
mov
cmp
or
repz
dec
push
pop
inc
js
pop
outsl
cltd
repnz
in
adc
mov
dec
jecxz
mov
scas
fucomp
shr
push
je
loop
dec
inc
push
in
mov
popf
mov
and
sbb
xor
pop
sar
arpl
insl
and
fimull
dec
and
leave
in
pop
icebp
sbb
enter
or
dec
jecxz
movsl
jae
shll
inc
cmp
sbb
pop
lcall
xor
pop
int3
imul
sub
mov
stos
mov
jge
dec
xchg
or
scas
enter
jbe
imul
outsl
outsb
pop
sub
inc
jae
cmp
fmul
dec
bound
adc
dec
add
jbe
fcom
push
push
xchg
dec
scas
out
pop
je
pop
add
stc
jle
aaa
dec
ss
jmp
nop
dec
in
cli
lahf
mov
bound
pop
call
daa
repz
nop
ja
in
ficoms
cwtl
shrl
add
mov
repz
or
pop
xchg
call
fiadds
outsl
in
test
pop
jae
fsts
ss
xchg
pop
sub
xor
hlt
or
add
xchg
iret
incl
frstor
sub
pop
cmp
lods
addr16
cli
push
aaa
sbb
into
cmp
test
dec
sub
sarb
shll
inc
dec
push
les
xchg
add
shr
fcoml
iret
arpl
in
je
jl
mov
push
push
xchg
aam
jmp
mov
fwait
cmp
pop
into
mov
fwait
ds
pop
jo
test
mov
push
arpl
pop
xor
jecxz
mov
cmp
pop
and
ret
data16
adc
mov
xchg
xor
mov
jb
push
pop
or
or
ja
mov
stos
aas
mov
shl
mov
push
mov
push
dec
xor
jmp
cli
push
ret
adc
jne
jmp
sub
sub
inc
sub
btsl
jecxz
mov
shr
fmull
push
sbb
sahf
add
adc
cmp
mov
mov
push
dec
lret
repz
push
mov
xchg
out
jmp
mov
cmpsb
jno
fbld
jmp
movsl
jge
ja
xchg
test
hlt
push
mov
js
out
popf
cmp
or
orl
dec
js
out
push
push
xor
push
mov
stc
xchg
je
stc
xor
jmp
and
mov
loop
lret
inc
cltd
push
mov
sbb
ror
lea
or
mov
adc
cltd
loope
sub
cmc
aad
jle
aas
lock
ret
clc
dec
sbb
mov
lods
push
imul
xchg
mov
mov
add
jbe
add
loopne
push
xchg
mov
mov
lock
fsubs
test
or
sub
or
imul
push
rol
mov
xchg
dec
mov
daa
fcompl
in
or
jl
fwait
or
test
adcb
xchg
mov
pop
mov
shlb
je
mov
bound
jmp
es
je
or
out
sahf
mov
adc
das
sti
insl
sub
cmp
sbb
jg
aad
test
aaa
add
pop
dec
popf
out
push
ret
mov
pop
jle
mov
jae
mov
jb
dec
incb
ds
int
call
mov
pop
jno
or
mov
js
fmull
ret
sahf
in
cmp
adc
push
rcll
iret
jp
jno
cmpl
and
and
jo
lret
dec
fimull
outsl
andb
and
fs
and
xchg
pop
mov
sub
pop
das
fistps
fisubs
addr16
push
sub
sbb
xchg
add
push
out
adc
or
cld
mov
movsl
pop
push
jl
xchg
push
out
outsl
ss
lea
sbb
int
bnd
mov
popa
xor
push
or
cmpsb
cmp
in
inc
insb
fsubs
addl
push
lret
leave
mov
and
cltd
fcom
subl
and
stos
xor
arpl
addb
sbb
push
mov
insb
lea
adc
xchg
cwtl
lret
xchg
push
test
shl
mov
dec
sti
mulb
xchg
pushfw
divb
xchg
mov
je
cld
pop
loop
sbb
or
nop
lret
rcr
dec
cli
jp
insb
into
jecxz
imul
ja
xor
outsl
adc
and
rcll
pop
arpl
pop
xlat
push
fdivrs
fsubrl
subl
mov
cli
sti
lock
pop
jbe
je
mov
sub
xchg
jecxz
fwait
adc
add
lahf
cli
fnstenv
sarb
pop
pushf
jle
das
mov
jle
inc
sbb
mov
push
dec
test
sub
jg
sub
leave
mov
dec
aam
imul
addr16
repz
xchg
lret
xchg
and
mov
in
xor
jbe
frstor
or
mov
fs
outsb
sbb
cli
cwtl
outsl
data16
or
mov
push
xor
mov
ja
mov
push
out
mov
bound
jae
add
pop
dec
scas
ret
mov
add
je
movsb
aam
loop
mov
stos
and
scas
fildll
xor
pop
ds
jmp
lods
push
pop
cmp
movsl
jmp
insl
pop
je
outsl
ja
inc
adc
iret
clc
mov
in
data16
push
pushl
ret
or
jb
adc
mov
push
and
add
add
dec
xor
lcall
jno
mov
pop
adc
ret
sbb
cmp
mov
mov
imul
js
lahf
mov
jge
ret
jecxz
std
xchg
mov
mov
sti
inc
add
movsl
push
enter
fstps
ret
rorb
leave
cwtl
xchg
aam
bound
popa
repz
mov
mov
or
ss
ja
dec
mov
in
std
ffreep
iret
sbb
add
xor
cmpsl
shr
or
in
mov
mov
xchg
sub
jb
or
lods
rcrl
push
xorps
mov
fidivrs
add
scas
inc
dec
data16
mov
sub
sub
and
push
gs
dec
fld
iret
fnstsw
ss
push
push
icebp
fidivl
adc
xchg
jp
pop
mov
mov
xchg
mov
js
arpl
push
xchg
pop
push
cmpl
sbb
push
push
push
push
add
in
jg
jb
pop
pop
xchg
and
je
ds
push
movsb
pushf
xchg
ret
adc
xchg
dec
sbb
cmpsb
imul
test
mov
data16
and
push
lds
push
jmp
cmp
out
dec
xchg
int3
notl
das
sub
outsl
xchg
pshufw
std
push
repnz
mov
aam
je,pt
push
dec
fcmovnbe
jnp
mov
push
dec
mov
mov
scas
lods
cli
pop
pushf
adc
fnstsw
adc
pushf
pop
xchg
mov
outsb
iret
adc
ret
lods
js
hlt
pop
push
or
xor
pop
push
xchg
pop
cmp
pop
lahf
es
jno
sub
scas
push
popa
test
sbb
sbbb
stos
outsb
push
cli
out
xor
sbb
fmull
add
int
lret
rcl
mov
lret
sahf
add
jnp
mov
ljmp
popaw
fists
in
iret
arpl
leave
lock
push
push
pushf
xor
and
iret
xchg
cld
add
sub
inc
cld
dec
adc
jge
cmp
dec
call
test
xor
push
aad
mov
in
adc
outsl
shr
repz
adc
inc
sub
jl
les
out
mov
or
fmuls
imul
xchg
xchg
test
add
pop
test
add
mov
mov
lods
loope
mov
add
push
nop
ret
ret
stos
lcall
lahf
or
cli
mov
ret
push
lret
inc
lahf
xlat
mov
mov
inc
push
mov
sbb
cmp
mov
cwtl
out
sbb
mov
out
imul
lret
jno
push
movsl
lods
fildll
out
aad
lret
cmp
mov
push
jp
jno
test
pop
js
mov
int3
int
push
or
xchg
inc
inc
hlt
pop
jno
inc
aad
dec
cmp
pop
lret
pop
fidivrs
js
loopne
and
push
test
sahf
mov
dec
lods
sbbl
lahf
push
arpl
dec
mov
dec
push
es
push
mov
repnz
cwtl
loopne
fsts
mul
loopne
inc
jb
mov
pop
xchg
loop
cmpsl
mov
push
mov
cs
mov
pop
jno
fs
inc
mov
sbb
movsl
cld
jg
jg
movl
int3
pop
cmp
dec
int
push
mov
adc
gs
test
lret
lret
popl
jbe
ficompl
sti
mov
outsl
jl
repnz
ss
fs
fiaddl
bound
pop
data16
fwait
push
add
ja
add
cmpsb
xchg
push
insb
cmp
imul
jo
dec
popf
mov
test
test
mov
adc
das
and
mov
sbb
mov
movsl
lock
pusha
gs
and
mov
xchg
ret
repnz
jbe
fiaddl
adc
xchg
inc
outsb
in
dec
sahf
sti
mov
out
and
and
pop
rcrl
cmp
sahf
insl
bound
pop
or
sub
push
leave
add
xor
fucomip
popf
dec
add
jg
pusha
mov
sbb
fimull
cs
ud0
sbb
cwtl
cmp
dec
ror
rolb
popf
push
mov
dec
xor
rolb
cmp
inc
xchg
stos
lcall
mov
ja
jns
call
inc
dec
adc
call
arpl
repnz
loop
or
idivl
aas
push
jb
cmpsb
xlat
dec
pop
out
add
sbb
lret
jg
mov
xor
and
mov
xchg
inc
in
fldl
dec
cwtl
push
cmp
inc
cltd
pop
ds
xor
shl
push
mov
mov
xchg
sbb
xchg
movsb
rorl
cltd
scas
fwait
push
push
lret
cld
ja
arpl
sub
push
inc
mov
test
or
sahf
and
push
icebp
imul
aaa
stc
sbb
fisttps
xor
pusha
andb
push
test
movsb
cmc
xor
imul
fwait
out
inc
and
popa
andb
inc
adc
pushf
stos
mov
mov
cmp
push
or
cmc
lret
pop
or
pop
shrl
and
pop
lods
in
cs
loopne
mov
out
pushf
and
popa
fistpl
mov
loopne
cltd
cltd
jo
ds
bound
and
push
test
mov
adc
mov
jl
push
aas
icebp
push
shl
es
or
outsl
js
xchg
push
popf
fdivrs
mov
sbb
mov
mov
push
iret
addr16
add
mov
mov
push
scas
dec
nop
repz
xchg
rorl
inc
ss
push
roll
decl
and
out
imul
das
sbbl
sub
mov
mov
jecxz
mov
cmpl
mov
scas
imul
mov
mov
in
mov
rcrb
and
pop
dec
sti
push
rorb
and
fimuls
ss
or
not
mov
pop
inc
cmp
push
fdivrs
push
ljmp
xor
std
arpl
xor
sbb
jp
cmp
sbb
and
sub
xor
dec
out
jno
lret
add
into
loop
jl
mov
std
stos
xor
stc
fdivr
sub
and
mov
adc
jno
ret
mov
jo
dec
mov
push
dec
repz
sbb
in
and
sub
dec
mov
iret
or
sbb
movsb
repz
jl
mov
addr16
xor
stos
mov
inc
js
mov
nop
cs
outsl
inc
or
mov
aad
mov
jbe
mov
mov
pop
lcall
sub
dec
jnp
mov
push
out
xchg
lock
test
loope
inc
out
and
or
mov
shl
imul
adc
jecxz
add
jnp
inc
out
nop
push
xor
add
ret
and
mov
int3
rolb
jecxz
std
mov
fxch
stos
ja
or
xchg
fldcw
push
cld
inc
adc
inc
and
xchg
aas
jno
shll
mov
mov
jg
sub
insb
and
outsb
cld
or
mov
mov
cs
mov
dec
out
imul
pop
or
sub
push
faddl
nop
fldcw
lods
outsl
jl
xor
sbb
fsubp
sub
xor
xchg
loopne
hlt
xchg
das
xor
mov
iret
add
int
int3
dec
or
lahf
lahf
in
jbe
in
outsl
sub
pop
jns
push
int
lds
ret
pusha
sbb
outsb
sbb
xchg
scas
aaa
imul
loopne
out
pop
sbb
sub
nop
or
xchg
adc
addb
pop
pop
jb
imul
pop
cmpl
clc
cmp
jne
fistpl
es
popf
lea
pop
rcll
int3
cmc
fnstcw
cmc
mov
mov
inc
iret
sub
or
hlt
lods
inc
mov
mov
sarl
orl
pop
js
add
add
mov
enter
and
mov
bound
push
mov
scas
add
mov
sbb
sub
or
xor
cltd
fcoml
push
pop
int3
inc
mov
jnp
nop
das
adc
inc
popa
dec
pop
sub
mov
cmp
icebp
stos
stos
xchg
fwait
aad
mov
jl
pop
sbb
mov
aad
jae
aam
cmp
stos
cmp
sub
insb
lods
mov
fidivrl
cmp
es
push
bound
xchg
in
loopne
inc
in
adc
out
add
add
ficoms
add
sbb
and
inc
sahf
ret
or
enter
jne
std
mov
mov
aad
inc
pop
fistps
mov
fdivrl
xor
push
movsl
in
aaa
add
xchg
push
xchg
inc
orb
out
ds
aaa
leave
lea
and
aad
jge
sar
sbb
sub
into
jae
xchg
mov
ds
dec
push
pop
fstpt
pushf
cmpsl
xlat
adc
inc
xchg
and
aam
scas
jmp
rol
mov
push
fwait
xchg
jl
fistpll
imul
mull
insl
push
pop
and
into
daa
es
in
push
ror
xchg
or
jle
arpl
sub
cmp
xlat
jnp
ficoml
pop
xor
inc
inc
lods
stos
cmp
in
movsl
imul
mov
add
inc
sti
pop
mov
dec
jg
mov
jmp
inc
mov
fs
ret
insb
lea
aam
pop
mov
jecxz
push
jno
test
adc
xor
xchg
cmp
out
jb
loop
pop
xchg
idivb
mov
mov
mov
dec
push
lea
add
cmpsb
mov
xchg
fscale
movsb
xor
sub
mov
xchg
mov
push
call
jle
sbb
inc
dec
sub
fst
mov
mov
xchg
insb
mov
jge
mov
and
mov
iret
daa
push
jl
fucomip
pop
movsl
sub
ds
lock
ss
gs
jnp
mov
push
sbb
mov
test
or
ret
mov
aas
jno
sbb
jmp
mov
mov
sub
mov
popf
push
lods
mov
adc
rorb
notl
outsb
jp
fcomps
add
inc
cmpsl
xor
insb
in
out
push
loop
push
xor
cs
aaa
icebp
jg
test
add
addr16
sub
dec
mov
in
cli
xor
dec
cmc
fldl
mov
movsl
sbb
lret
sti
sarl
push
mov
cs
das
mov
adcb
xchg
jg
add
add
decl
adc
adc
jl
xor
mov
negl
std
nop
add
mov
mov
mov
ja
imul
add
add
pop
lret
es
scas
adc
xor
aas
or
je
in
jg
cmp
orl
mov
cmp
cmp
push
and
push
in
daa
push
mov
mov
shlb
nop
lea
push
or
cmc
jae
xchg
sbb
nop
andb
jle
or
or
call
inc
test
out
sbb
add
cmpsb
sahf
iret
cld
fwait
adc
jno
xchg
outsb
inc
push
lahf
cmp
sub
xchg
andb
out
push
aaa
inc
jne
mov
call
into
out
add
andnps
aas
mov
lds
enter
lods
das
pop
sub
pop
jne
out
push
xchg
repz
sbb
imul
or
pop
pop
gs
addb
stc
inc
lea
and
sbb
pop
loopne
sub
aam
add
aaa
adc
xor
out
loope
add
sub
das
adc
ds
pop
pop
ret
lock
jo
lahf
adc
cmp
mov
in
or
sbb
inc
or
push
push
jmp
repz
pop
sti
mov
fnstenv
mov
notb
stc
imul
dec
mov
jmp
into
pop
xor
mov
popf
or
ds
and
dec
loopne
xchg
outsw
sbb
es
cs
lret
and
pop
out
stc
mov
lock
out
jbe
mov
jg
pop
insl
cs
add
and
shlb
or
je
or
adc
sbb
bound
add
stos
loop
add
xchg
fbld
loope
mov
in
xchg
fdivrs
out
push
pop
or
cmp
xor
loop
mov
outsb
dec
ret
add
mov
mov
xor
pop
nop
mov
aaa
dec
insl
xchg
mov
mov
js
fmull
icebp
dec
inc
jecxz
ljmp
push
and
cmp
push
lock
and
push
cmp
xchg
fsubrl
pop
shrb
and
xor
or
cli
out
adc
or
push
mov
push
xchg
sbb
or
in
mov
sub
hlt
inc
fistpl
jle
xorl
outsb
ja
cmc
xchg
incb
push
shl
mov
test
dec
cmp
stos
push
xchg
hlt
fisubrl
xor
add
aad
jns
aas
rclb
imul
into
dec
mov
loopne
xchg
lock
mov
pop
fistl
aam
rcrl
int3
stc
cmpsb
pop
sbb
sahf
dec
or
das
jecxz
aaa
inc
mov
cs
jbe
into
subl
xor
push
cmc
add
mov
shrl
pop
inc
loope
clc
shlb
push
xor
sbb
ret
pop
push
popf
xlat
gs
and
mov
sbb
xchg
jns
inc
sub
and
mov
or
ss
stc
data16
addr16
test
mov
std
fsqrt
leave
mov
xor
add
jle
test
cs
mov
mov
lcall
sub
xor
sub
cmovs
and
xlat
repnz
mov
cld
push
test
xchg
and
xchg
mov
cld
dec
cld
sbb
mov
dec
mov
xchg
jns
push
mov
xor
call
add
pop
adc
pop
sbb
rcll
enter
inc
inc
cmp
test
lcall
out
mov
xor
dec
push
outsl
bound
dec
clc
lods
xor
xchg
insb
lahf
mov
sub
cmp
xchg
mov
mov
pop
push
outsl
jl
jl
sbb
test
clc
mov
out
dec
sti
rclb
fwait
testb
enter
add
sbb
sbb
cli
pop
nop
inc
pop
push
inc
lea
adc
lcall
aaa
push
lahf
int3
add
mov
les
ss
cmc
inc
daa
lock
mov
pop
ret
cmpsb
adc
lcall
mov
xchg
xlat
out
push
dec
or
outsb
xchg
adc
inc
pop
cltd
add
jg
rcrl
out
les
imul
inc
adc
xchg
xchg
fmull
hlt
lods
mov
pusha
push
mov
sarl
mov
xchg
jl
cmp
mov
test
ljmp
jmp
mov
es
mov
movsl
popa
xchg
es
aam
movsb
mov
jl
insl
shll
xchg
mov
mov
fdivrs
jmp
adc
sbb
test
shrl
lcall
scas
xchg
clc
bound
shlb
push
aaa
mov
sub
pop
cmp
add
mov
fisttpl
xchg
fidivrl
aam
lea
mov
in
shlb
and
idivb
xchg
mov
arpl
scas
movsb
sub
xlat
or
nop
push
add
xchg
inc
lods
dec
in
sub
mov
or
lock
pop
jmp
lds
lea
lcall
push
fnstenv
mov
xchg
hlt
fidivl
pop
jnp
dec
popf
and
push
cli
sti
cmp
sub
dec
and
jb
in
adc
ss
cmpl
xchg
xor
das
xor
gs
in
mov
out
shll
ret
jge
neg
mov
test
aaa
mov
test
mov
orb
xor
add
mov
jnp
movsb
test
ds
pusha
negl
sub
adc
daa
fistps
pop
ficoms
in
mov
cld
mov
movsl
sbb
stos
aaa
mov
jge
push
mov
sbb
lods
cmp
movsl
movsl
stos
jmp
xchg
or
dec
pop
cmc
push
sub
push
cmp
fsubr
pop
loop
pop
jmp
push
xchg
scas
decb
jl
xchg
mov
push
pop
mov
jmp
out
push
jbe
add
xor
aad
ret
and
std
mov
add
mov
mov
xchg
mov
mov
mov
shlb
cwtl
push
push
data16
je
sti
mov
aam
sub
and
push
cs
fisubrl
adc
mov
in
ds
xchg
js
in
movsl
data16
pop
ljmp
jg
add
mov
loopne
rcll
jle
std
test
lret
testb
cltd
adc
jns
movsb
mov
pop
jle
mov
inc
push
shlb
lret
fstl
sub
pop
inc
lea
data16
mov
es
cld
cwtl
ret
jno
fdivs
add
xchg
loop
sub
fmull
inc
mov
mov
in
mov
out
push
lods
in
out
lahf
xlat
or
add
sub
jle
jmp
mov
sbb
mov
cli
and
in
mov
and
into
dec
add
jle
ds
cltd
ds
inc
mov
add
mov
mov
push
jge
mov
rolb
cli
inc
stos
psubb
sub
mov
data16
mov
jge
mov
outsl
insl
cmpsb
add
xchg
icebp
and
mov
add
bound
test
sbb
mov
push
insb
pusha
test
inc
ja
jnp
mov
cmpsb
out
js
mov
enter
ja
popa
cmc
pop
fdivrl
push
fsincos
sbb
cmp
aad
xchg
test
lea
sahf
xlat
std
lods
cmp
jns
es
pop
dec
js
jge
inc
dec
push
and
xor
jp
dec
mov
jbe
push
sbb
fbstp
dec
mov
push
cs
stc
shrb
out
sbb
lret
or
mov
je
cmp
push
pushf
push
orl
sahf
arpl
dec
nop
sub
data16
inc
cmp
lcall
lret
mov
and
lea
add
je
sub
repnz
push
outsl
jns
push
dec
setp
shrl
sub
mov
int
jmp
jecxz
js
fdivrs
add
push
pop
popl
mov
sub
push
pusha
pop
rclb
insb
enter
fcompl
dec
adc
subb
pushf
jbe
insb
scas
push
inc
jle
xchg
cmpsb
in
ficoml
mov
sahf
repz
push
sarl
inc
lock
lcall
iret
popf
daa
xchg
loopne
jmp
pusha
jmp
pop
dec
fcmovnu
push
jle
push
das
cmp
mov
pop
lea
sbbb
cmp
mov
je
cmp
loope
adc
les
fadds
jg
mov
lahf
xor
pusha
jae
pop
daa
mov
sbb
pop
push
negl
xor
in
mov
in
mov
imulb
dec
inc
or
cmp
xor
idivl
loopne
inc
mov
add
icebp
xchg
andl
xchg
std
sbb
mov
inc
xor
xlat
rclb
out
or
xchg
lods
ficomps
clc
add
pop
add
jle
jge
mov
jo
and
fwait
jne
jmp
mov
out
dec
lret
mov
add
mov
mov
push
les
mov
imul
push
push
testb
or
sbb
pusha
xchg
popa
mov
dec
sub
popf
lcall
sbb
popa
dec
out
cmp
fcom
push
stos
mov
add
fisttpl
pop
mov
fs
mov
pusha
or
icebp
jl
dec
mov
and
sahf
add
xchg
shll
mov
pusha
sub
mov
cmp
fdivrs
jle
stos
seto
fisubrl
sub
jbe
mov
jno
das
les
rcll
xor
adc
and
push
xchg
add
data16
icebp
fimull
adc
sbb
xchg
cmp
pop
rorb
add
int
es
xlat
cmp
adc
push
into
sub
mov
adc
sbbl
jg
push
out
nop
mov
leave
add
push
int
jge
out
jl
shlb
gs
cmp
stos
das
inc
out
jb
inc
mov
adc
or
popa
loop
ret
or
sti
arpl
mov
mov
test
or
addr16
enter
and
dec
jmp
or
inc
ja
data16
out
ljmp
inc
dec
mov
and
sub
loope
push
xchg
push
push
adc
lea
pop
mov
dec
lods
sbb
loop
arpl
test
jp
add
dec
xor
loope
xchg
arpl
jle
sar
inc
mov
pop
incb
jp
into
pop
jo
push
cmpl
rorl
dec
and
cmc
ror
test
sbb
cs
int3
cmp
mov
push
mov
rclb
add
inc
pop
insl
addr16
push
out
add
fcoml
frstor
and
inc
adc
lock
mov
jp
sbb
xor
jmp
jb
cmp
inc
mov
adc
popa
cmp
inc
pop
and
dec
xchg
popa
cmp
orl
mov
or
sahf
adc
sbb
or
std
push
insb
daa
cs
mov
xor
out
or
lret
xor
xchg
pop
pop
popa
addr16
pop
or
or
cmp
add
int
xlat
xor
loopne
shl
imul
subb
lock
sbb
pop
mov
xchg
dec
push
dec
rcrb
add
cmpl
and
fcomps
in
xor
cltd
rol
sbbb
lret
and
xchg
pop
mov
inc
pop
dec
call
pop
int3
testl
pop
iret
imul
push
outsl
mov
mov
jmp
mov
loop
stos
or
scas
arpl
pop
stos
xor
sbb
mov
adc
cwtd
cmpsb
pop
aam
jne
pop
pop
sbb
xor
ret
fcoml
sbb
and
xor
bound
mov
pop
xchg
dec
scas
es
inc
cmp
jno
dec
popf
pop
fbstp
bnd
push
lods
xchg
jno
icebp
out
add
xchg
ret
out
ljmp
inc
mov
imul
mov
mov
mov
mov
movsb
mov
repnz
stc
aas
mov
dec
adc
test
andb
sarl
cmpsb
js
xor
adc
sub
push
add
out
jb
or
in
xchg
pop
subb
outsb
add
stos
fstpt
xchg
not
mov
cmp
aas
dec
idiv
mov
lahf
mov
stos
rcr
pop
inc
pop
xor
int3
or
les
outsl
cltd
xchg
and
and
add
addr16
fsubl
xchg
pop
stc
sub
repz
lcall
pusha
pop
adc
std
push
je
xlat
inc
sbb
mov
in
cli
or
pop
push
xchg
xchg
dec
adc
push
adc
add
inc
nopl
repz
fimull
xchg
push
and
mov
arpl
push
push
and
mov
in
inc
into
mov
les
clc
fisttpll
mov
enter
stc
jge
push
daa
xor
sbb
mov
sbb
jmp
ficomps
aad
mov
jne
sbb
popa
pop
repz
ljmp
and
fistpl
cli
aad
lcall
sbb
jnp
int
enter
gs
xchg
popa
std
mov
xchg
push
xchg
mov
pop
inc
pop
loopne
inc
lea
jp
loopne
sbb
sahf
mov
dec
push
pop
xchg
jb
in
ljmp
or
sbb
jns
and
mov
in
lods
ss
jmp
shll
xor
xor
sub
sbb
cli
cmp
pop
pop
jg
test
or
fwait
xchg
das
lahf
jb
inc
cmpsl
aam
daa
push
dec
stos
ret
adc
int
push
sbb
shlb
jne
xor
cmp
jge
aam
sub
mov
jmp
rclb
out
pop
pop
inc
and
arpl
and
jnp
fmuls
insl
push
cmp
mov
or
inc
or
bound
mov
pushf
mov
jnp
dec
pop
jbe
jp
inc
pop
pop
push
adc
xor
jl
or
xor
sub
loop
jmp
jnp
sub
mov
mov
subb
lds
bound
out
aad
xlat
out
lods
pop
xchg
mov
mov
lret
movsb
idivl
pop
lods
jno
fisubs
bound
sti
shrl
jae,pn
add
adc
push
jno
inc
push
or
adc
loop
sub
call
je
jo
push
mov
jbe
cmp
fcom
jnp
popf
mov
cmp
pushf
cwtl
pusha
test
dec
pop
jae
out
ret
aaa
adc
aaa
adcb
pop
push
xchg
in
adc
pop
xlat
jbe
push
push
sahf
xchg
imul
push
subl
pop
mov
pop
inc
hlt
les
dec
jmp
ret
mov
lock
orb
jo
jns
lahf
int
and
sarl
push
divb
mov
push
xor
xchg
inc
je
les
xchg
popf
cmpsl
mov
lret
das
test
cmpsb
dec
xchg
insl
push
divl
pop
cld
push
or
mov
loopne
mov
xchg
pop
cli
into
push
adc
fiaddl
xor
aas
jb
es
dec
and
je
cld
pop
sbb
and
and
inc
sub
fs
mov
mov
sub
jnp
daa
mov
sbb
pop
and
pushf
jae
lea
mov
sahf
add
scas
fs
subl
jae
fistpll
pop
sbb
mov
lods
adc
xchg
jb
pusha
lahf
repnz
fimuls
dec
mov
xchg
xor
bnd
rorl
pop
cwtl
testl
int
pop
mov
and
push
or
add
cld
jb
push
jmp
jnp
fadds
hlt
cs
jge
loop
xlat
push
sub
loop
or
bound
and
add
aad
inc
dec
test
inc
xchg
push
scas
inc
in
push
lods
lds
inc
jmp
push
shrl
mov
fsts
pop
add
and
stos
mov
mov
test
cmp
jge
popa
enter
mov
cmc
ljmp
bound
jb
sti
push
adc
aam
pusha
fiaddl
jnp
mov
ds
add
mov
orl
imul
aam
testl
gs
sub
jb
mov
out
pop
pushf
fs
jnp
jns
cmpsb
out
xorl
jp
mov
inc
dec
pop
add
fsubrl
mov
int3
aaa
ret
or
xor
test
add
jle
mov
incb
or
shrb
inc
mov
cmp
icebp
xchg
nop
push
cmp
lcall
inc
jbe
call
push
dec
dec
xchg
call
iret
aam
sub
mov
add
cs
loopne
xchg
cli
or
cltd
popf
dec
pop
cmp
les
sti
in
std
shlb
fdivr
jo
repz
pop
lcall
aam
or
cmp
cmpsl
push
xchg
inc
not
mov
xlat
or
mov
sti
pop
mov
and
mov
movsl
jl
aaa
xor
fs
test
shl
jp
aam
xchg
insb
xor
movsl
dec
into
mov
scas
pop
nop
shrb
shll
iret
dec
in
mov
addb
mov
aaa
or
sbb
in
adc
dec
hlt
push
and
pop
cmpl
mov
mov
and
and
sahf
jl
adc
cmp
push
cmp
les
mov
jp
lahf
jno
mov
push
xor
stc
cmp
pop
cwtl
mov
add
cmp
pop
jae
inc
mov
sub
sbb
lds
xchg
bound
inc
popf
cmp
stc
jae
jne
adc
dec
or
adc
in
adc
jne
cmpsb
inc
sbb
cmp
shl
mov
jae
shr
arpl
fdivs
lods
sub
shll
inc
cltd
mov
jne
shl
ret
lods
stos
lret
dec
cmp
ror
or
mov
or
xchg
xor
inc
stos
and
out
in
addr16
enter
out
dec
inc
cmp
das
push
shlb
cmp
and
inc
or
shlb
cs
dec
enter
stos
xor
mov
shr
xchg
xor
pop
sub
push
daa
inc
inc
sarl
mov
sub
insb
sbb
loopne
andb
push
repnz
rcll
adc
cwtl
jmp
test
push
and
mov
xchg
inc
std
cmp
xlat
fists
mov
cmpsl
jle
push
arpl
mov
pop
mov
xor
je
test
outsl
fimuls
das
inc
jne
mov
pop
decb
dec
mov
movsb
xor
vucomisd
loop
lock
sti
std
addr16
dec
aad
test
mov
das
push
decb
and
js
and
test
push
inc
jg
movsl
ljmp
xchg
jl
xchg
subl
xchg
jno
or
shl
std
adc
xor
lock
aam
dec
scas
cltd
jbe
scas
icebp
sti
cltd
dec
sub
sub
shll
fcompl
xor
cmc
out
ds
dec
daa
lea
out
addr16
or
dec
xor
and
pop
jecxz
xchg
inc
cmp
in
aas
insb
add
mov
push
loop
jl
subl
inc
popf
stc
push
fmull
pop
imul
in
push
push
shll
add
cli
mov
mov
pop
sbb
add
inc
stos
mov
jbe
pop
mov
xor
push
ficompl
jns
shrb
xchg
jnp
xor
data16
adc
dec
rcrl
xor
into
dec
repz
cld
andb
idivl
pusha
pop
imul
sahf
xchg
je
mov
dec
inc
dec
out
scas
pop
out
adc
addb
add
les
push
mov
cmp
arpl
int3
mov
or
imul
or
aad
addr16
mov
stos
and
mov
pop
or
and
sub
push
orl
sub
cmp
mov
rclb
dec
incl
or
sbb
shlb
mov
jb
mov
test
pushf
out
ljmp
outsl
lahf
lea
dec
adc
dec
daa
mov
pop
sub
pop
and
test
cmp
not
rol
and
fstl
subl
mov
in
jo
adcb
or
les
dec
mov
movsl
jge
cwtl
rclb
pop
sub
imul
mov
dec
dec
ret
adc
cli
xor
loop
fidivl
out
dec
mov
pop
mov
cltd
cmp
mov
insb
das
xor
jbe
mov
add
inc
test
pop
fnsave
sbb
lds
push
insb
das
imul
out
add
xor
dec
xor
or
or
int
loopne
lahf
mov
sbb
inc
mov
pusha
in
icebp
scas
pop
pop
pusha
cs
test
pop
jecxz
mov
pop
subb
cwtl
in
mov
sbb
in
jecxz
push
mov
xor
sti
push
xchg
cld
dec
push
xor
mov
push
sbb
dec
jge
sub
dec
shlb
aaa
les
sub
inc
in
test
pop
mov
dec
mov
push
dec
int
sbb
mov
sar
lock
or
test
test
popf
sti
lahf
fiaddl
pop
movsb
arpl
mov
xchg
xchg
adc
testl
adc
push
cwtl
bound
push
cwtl
pop
or
xor
daa
mov
push
pop
dec
mov
fcmovne
cmp
pop
push
icebp
mov
js
mov
ret
rcr
jns
fdecstp
loop
jle
mov
cmp
pop
fmuls
pop
mov
sti
xorl
sbb
dec
ret
repz
xor
shr
and
loop
jne
pop
out
xchg
adc
inc
ja
cmpsb
inc
cmpsl
nop
or
lock
ret
dec
int3
movsb
movsb
cs
sub
bound
ret
cmp
lods
mov
aaa
lds
jbe
cmpsb
dec
int
push
lret
pop
imul
out
dec
jle
out
sarb
sub
ret
bound
cmp
les
sti
lock
sti
popa
test
cmpsl
xlat
and
lods
xchg
pusha
adc
add
dec
nop
ja
mov
dec
mov
push
in
and
inc
std
mov
cmp
mulb
fistpll
xchg
fisttpll
pop
mov
mov
jl
iret
out
mov
fildl
cld
sub
push
jnp
insl
and
icebp
int
pop
push
dec
add
or
xor
cmp
mov
mov
bound
add
xor
int
jb
lods
sti
ret
scas
add
test
inc
daa
bound
sub
fmull
cltd
test
mov
sbb
xor
jb
push
dec
outsl
mov
mov
jge
jbe
adc
das
sbb
loopne
les
popf
fcom
nop
popf
aaa
inc
leave
jno
nop
and
cmp
fistpl
addr16
push
int
jno
lds
cmpsl
and
sbb
mov
mov
jnp
ss
push
pusha
addb
mov
faddl
push
cmp
movsl
inc
pop
testl
repz
enter
mov
test
loop
inc
mov
xor
rcrb
stos
push
or
pusha
imul
push
cmp
dec
sub
mov
stc
outsb
jecxz
sbb
dec
mov
and
jo
pop
fwait
call
inc
mov
pusha
cmpsb
jg
jmp
mov
xor
mov
jnp
pop
mov
and
aas
push
push
inc
jb
mov
mov
jle
xchg
stos
loopne
insl
aaa
cli
out
pop
or
or
mov
daa
add
jge
sbb
cmp
push
fxch
cmp
push
mov
adc
call
sbb
aad
movsb
push
xchg
jmp
fnstsw
aas
push
js
xchg
ficoml
fs
in
test
stos
xchg
movsb
mov
ret
inc
sub
push
pop
popa
fwait
stc
insl
mov
clc
add
lcall
pop
das
or
jno
les
cltd
sbb
xchg
mov
addl
mov
cmpsb
add
fldt
mov
cmovle
movsb
push
push
jp
mov
test
fsubrl
adc
sub
or
mov
xchg
sbb
hlt
lret
sub
pop
loop
xlat
hlt
push
adc
xor
in
aaa
xor
movsl
push
xor
dec
jb
push
add
lock
pop
addl
sahf
lea
shll
dec
mov
in
mov
fwait
inc
push
cwtl
sub
add
and
cmc
fs
lods
lods
fdivrs
das
movsl
rcrl
pop
out
add
int3
aas
lods
aad
int
xchg
adc
jbe
push
filds
nop
test
cs
insl
mov
pop
dec
jp
cmp
popf
cld
into
int3
jns
lcall
les
fildl
mov
xchg
pop
pop
sbb
sbb
daa
dec
pop
jbe
xor
cmp
pop
inc
sbb
pop
push
xor
pop
mov
xchg
jns
jmp
dec
mov
xchg
aaa
xchg
movsb
hlt
movb
or
jl
mov
dec
or
xor
in
or
fidivrs
into
mov
cmp
roll
lea
cmc
incb
xchg
test
push
imul
inc
jle
or
xor
mov
xor
jg
push
or
lret
and
dec
xor
cmpb
jne
jp
repz
repnz
mov
or
sub
mov
xchg
lahf
jmp
pop
ljmp
fnsave
cltd
sar
icebp
popa
scas
push
rclb
aaa
pop
inc
je
xlat
dec
inc
jge
ds
fs
cmc
xchg
push
imul
mov
lahf
sbb
sbb
cwtl
lea
cmp
mov
fcompl
lahf
cltd
push
cmpsb
cmpsb
cmpsl
adcb
and
or
hlt
loop
dec
xchg
cmp
cmp
into
adc
aaa
sbb
mov
aam
cmp
rep
sbb
into
lret
test
into
int
jae
sub
sahf
cmpsl
addr16
clc
loopne
imul
inc
pop
pop
ljmp
rcrb
lock
push
and
cmc
das
jecxz
dec
test
imull
push
or
push
mov
cmp
gs
adc
inc
lods
add
mov
add
into
sub
aaa
arpl
ja
jo
mov
std
jl
sbb
dec
insl
jae
sbb
xor
sti
mov
lock
jl
push
lods
in
cmp
rcrl
jns
mov
call
adc
mov
cmp
sbb
sub
push
rcrl
and
cmp
test
lock
xlat
push
loope
in
and
dec
xor
sbb
and
loopne
lock
stos
push
test
and
fwait
ss
pop
sahf
icebp
je
xchg
pop
int3
sub
sub
dec
in
iret
aam
imulb
ror
xchg
mov
fcomp
mov
neg
lret
sub
xor
sub
add
and
aaa
out
inc
cmpsb
mov
aam
mov
mov
shrl
inc
test
add
adc
xchg
in
fcos
int
jne
fisttps
pushf
cmp
push
push
sub
jnp
ss
xor
dec
cwtl
jp
mov
pop
jb
inc
sbb
fucomi
stos
xor
nop
push
jns
jmp
pusha
push
push
hlt
cmp
fistl
sub
fldt
lret
pop
mov
xor
or
sub
ljmp
sbb
inc
jecxz
sub
adc
jg
imulb
daa
and
xor
add
cmpsb
dec
mov
clc
out
push
and
add
mov
xchg
xchg
cmp
adc
xchg
mov
out
add
icebp
outsb
mov
and
push
sbb
outsl
pop
gs
es
jle
bound
dec
inc
repnz
imul
lods
lret
jmp
inc
inc
addl
and
leave
cmp
or
aaa
sbb
inc
popa
clc
std
inc
pop
xlat
int3
roll
andl
shlb
stos
mov
in
add
and
xchg
and
fcomps
leave
lcall
lret
aad
mov
insl
enter
in
cmp
stc
lahf
fidivl
jns
dec
mov
into
xorl
repnz
fucomip
add
jecxz
rolb
jns
bound
out
push
push
pop
int
mov
and
mov
fldl
or
popa
jecxz
data16
jmp
arpl
or
out
cmp
sahf
sub
sbb
push
cmc
ljmp
stc
jle
push
andb
int3
inc
and
lahf
adc
loope
test
ja
sub
pop
and
cwtl
lahf
cmpl
inc
shl
and
lcall
xor
pushf
ljmp
ret
mov
xchg
lods
jns
aaa
push
jo
cld
fimull
ljmp
lods
fiaddl
push
push
shr
or
divb
jge
mov
or
icebp
inc
ficompl
loopne
add
mov
aad
out
xchg
and
and
mov
andl
je
push
fisttpl
sbb
mov
call
xchg
add
mov
jo
push
jae
xor
cli
call
into
inc
mov
and
insl
dec
outsl
push
lock
mov
andb
mov
mov
cmp
xchg
js
int
cmovnp
ss
mov
cs
mov
mov
pop
outsl
or
test
les
mov
stos
lret
movsb
push
js
jecxz
mov
fst
int3
sbb
pop
jecxz
mov
sub
xchg
push
test
flds
fdivl
mov
data16
imul
hlt
aad
push
mov
insb
adc
lcall
mov
push
and
sbb
stos
jnp
nop
mov
out
cltd
push
or
aam
pop
push
daa
insb
popaw
xor
dec
mov
or
mov
or
notl
pop
addr16
add
mov
rep
pop
jl
mov
popf
inc
push
cmp
lock
mov
or
out
testb
jle
adc
xchg
repz
test
or
loope
dec
addr16
xor
xor
push
cmp
loope
jno
push
adc
pop
insb
sub
or
in
adc
cwtl
mov
sbbl
dec
clc
jbe
testb
jb
mov
mov
sub
cmp
mov
sub
sub
mull
test
icebp
mov
ror
jne
sbb
adcl
rcrb
or
out
push
scas
leave
outsl
sub
push
int
dec
mov
inc
jmp
lret
shrl
daa
mov
imul
ror
xor
push
movsb
out
rcrb
xchg
xor
aam
cmc
fstpt
cmc
aas
stos
dec
repz
mov
movups
outsl
or
dec
add
xchg
aas
or
jae
sti
xchg
lret
in
cmp
leave
andl
pop
jl
outsl
sub
xor
jp
lret
daa
enter
jne
push
push
daa
test
outsl
adc
lcall
sahf
push
pop
movsb
push
adc
mov
xchg
sub
bound
repnz
je
stos
pop
push
out
arpl
mov
sbb
call
inc
pop
push
dec
int3
loop
dec
push
adc
movhlps
loope
rorb
lock
out
or
xchg
push
push
sarb
out
xchg
pop
push
repnz
out
mov
mov
test
ret
std
adc
mov
outsl
jmp
fdivrs
inc
adc
pop
shll
sub
add
mov
mov
mov
push
inc
pop
outsb
inc
add
or
in
cmpsl
enter
pop
mov
xor
test
fiaddl
inc
mov
into
mov
fmuls
cmp
or
sbb
xchg
and
nop
and
pop
insb
cmp
outsl
cltd
push
bound
scas
cmp
testl
xor
incl
les
push
cmp
lods
dec
mov
or
movsb
dec
cmc
cwtl
sbb
incl
jg
leave
mov
pushf
jp
xchg
jae
das
xchg
adc
out
lds
or
mov
loop
cmp
icebp
adc
jns
cld
idiv
dec
dec
mov
fsubrl
pop
dec
aam
popa
popf
into
xchg
inc
in
mov
iret
push
add
jb
inc
rcrb
sub
xchg
adc
sub
into
out
pop
lahf
sbb
adc
lret
jle
aas
fdivrs
xor
rcll
fdivrp
adc
mov
mov
sub
scas
cmpsb
or
cld
fldcw
stos
in
pusha
fcoml
adc
not
push
sub
pop
fs
loope
mov
call
inc
or
push
pop
jno
fwait
pop
scas
test
lds
ljmp
fs
jae
add
lods
mov
push
xor
pop
les
pop
dec
out
jle
dec
push
int
mov
ljmp
test
fs
push
mov
inc
sbbb
imul
mov
in
js
push
lret
icebp
xchg
shrl
ljmp
lods
bound
push
lahf
scas
xchg
cli
push
xchg
or
pop
pop
das
int3
shll
addr16
xchg
add
mov
and
mov
adc
jns
dec
push
gs
sarl
scas
rcr
test
inc
mov
insl
and
xor
out
dec
es
xlat
ds
fldcw
iret
add
cltd
ss
in
lahf
jo
cmp
add
lods
popa
xchg
cmpsb
nop
sahf
fstpl
out
ss
loop
arpl
xchg
faddl
addr16
inc
aas
cmpsb
or
mov
test
cmpsl
inc
mov
cmp
lahf
sti
jo
mov
add
pop
add
pushf
shlb
addr16
std
push
in
adc
pop
in
shlb
xor
lcall
loopne
stc
adc
in
and
pop
pop
in
mov
jbe
mov
mov
fsubrl
xor
dec
int
lret
sti
cli
das
shl
pusha
pop
stc
xor
out
mov
cmp
inc
push
add
jnp
and
cmp
stc
cmp
pop
and
add
jae
sbb
test
and
sbb
icebp
les
jle
outsl
loope
xor
xor
mov
pushf
lret
int
xchg
out
fwait
into
xchg
or
adc
insl
xlat
test
adc
cli
xlat
ja
clc
xor
push
lods
lahf
jne
daa
adc
xchg
mov
out
jge
or
jo
xor
cmp
mov
dec
test
test
push
mov
and
cli
xchg
lea
and
pop
mov
add
lret
xchg
cmp
adc
mov
lret
inc
and
xor
loopne
or
ss
cmp
cmp
jb
test
mov
out
popa
pushf
mov
test
xor
lods
lock
rcll
and
cmp
pop
add
mov
ljmp
sub
fcmovnu
sbb
fistl
add
je
cltd
push
outsl
mov
sbb
mov
adc
rorb
insl
mov
adc
fidivl
sub
jmp
xor
outsb
fwait
test
cs
sarl
sbb
sbb
push
mov
xchg
scas
jmp
xor
or
pop
pushf
lcall
jns
bound
sbb
xchg
inc
movsb
mov
cltd
jle
int
jmp
movsl
pop
jecxz
enter
nop
or
cmp
mov
mov
dec
or
fwait
add
rclb
jl
xor
fldcw
fwait
lret
cwtl
inc
js
in
in
cmp
push
pop
or
mov
mov
aam
out
mov
lahf
sub
jb
call
movsb
scas
mov
fucomi
pop
sub
dec
jge
xchg
pop
mov
push
push
adc
mov
addb
ss
pushf
adcb
lods
ficomps
les
jle
xor
out
fldenv
mov
lods
xchg
mov
inc
mov
xor
sbb
cmp
stc
js
cmc
lods
out
adc
mov
jl
movsb
mov
out
aam
lret
negl
bnd
inc
loop
sti
push
leave
fwait
xor
lahf
mov
cmpsb
mov
ror
xor
enter
aam
cli
sbb
pop
inc
divl
or
add
out
cmpsl
inc
inc
sub
in
mov
fwait
cld
daa
cmp
shl
push
icebp
mov
jno
push
cld
fwait
es
push
repz
imul
mov
push
xor
cli
pop
cmp
sbb
sar
idivl
add
int3
inc
stos
enter
mov
xchg
lock
cmp
mov
mov
in
lcall
loop
or
jno
rclb
push
nop
repnz
rolb
mov
cmpsb
clc
popa
lret
call
xor
jmp
mov
stc
xor
iret
and
or
cs
xor
xor
enter
movsb
jne
sbb
xlat
mov
cmpl
insb
sbb
pushf
popa
fdivrl
loopne
fstpl
ror
mov
xorb
xlat
add
repz
out
sub
lret
mov
mov
out
sarb
sti
mov
mov
push
movsb
jb
shrl
fbld
gs
sub
rorl
push
jno
mov
stos
movl
mov
in
sti
rcl
and
pop
lret
clc
mov
pop
mov
jecxz
cmp
stos
movsb
sti
out
test
hlt
mov
cmpsl
jl
pop
sbb
jns
aaa
mov
js
and
sub
push
movsb
movsl
cmp
xchg
xchg
pop
lods
jns
sub
hlt
mov
mov
sbb
or
std
mov
int
scas
jg
out
and
popf
push
mov
push
inc
push
lods
fs
ds
fstpl
pop
inc
jno
pop
insl
or
cld
ljmp
stos
adc
loope
or
sub
mov
sbb
push
push
jnp
sub
mov
addr16
push
adc
cmp
rorl
sbb
stc
mov
mov
add
jl
mov
lahf
shr
loop
adc
mov
adc
lock
pusha
data16
mov
push
push
jg
adc
cmp
es
ficomps
push
sbb
xchg
mov
xor
adc
in
mov
int3
dec
jmp
and
cmpsb
lods
aas
je
mov
mov
dec
data16
cmp
add
jo
xor
loope
lahf
sub
repz
rsm
aam
ret
dec
shrb
in
jbe
cmp
adc
stos
or
aaa
mov
adc
sbb
jnp
jns
int3
enter
xor
xor
mov
and
pop
inc
clc
and
into
cmpsb
popf
push
sarb
inc
inc
insb
jg
mov
push
add
rcr
loop
jmp
rclb
adc
push
xor
sub
lods
cwtl
aam
add
sbbb
insb
lea
xor
cld
or
imul
adc
dec
mov
and
push
lahf
imul
or
jp
ja
ss
jmp
inc
nop
mov
add
mov
adc
outsl
sbb
popf
movsb
sbb
je
punpckhdq
cltd
add
push
mov
arpl
push
mov
ret
repz
test
pusha
in
lahf
xchg
fnstsw
or
inc
and
outsl
clc
out
in
xor
in
xlat
stos
add
push
mov
call
inc
cs
or
pusha
fwait
es
fstpt
out
cmpsl
push
add
xor
jno
into
xor
sub
icebp
pop
bnd
mov
fcom
pop
cmpsl
jg
es
stc
movsl
xor
lods
ret
ljmp
sti
jbe
rol
jo
pop
jbe
add
pop
mov
sbb
ret
nop
pop
cmc
mov
fs
arpl
aaa
push
nopl
dec
retw
stos
mov
mov
clc
and
icebp
lcall
outsl
ucomiss
sub
jno
stos
mov
and
cs
mov
dec
ret
fbld
pop
mov
add
dec
stos
fdivrs
cmp
icebp
dec
jne
repnz
popf
dec
and
cmp
mov
movsl
mov
jp
fcoml
fwait
jns
loopne
dec
insl
loope,pt
ret
mov
cmp
lret
dec
xor
adc
sub
cmc
add
sbb
xor
pop
cmp
shl
sbb
adc
leave
push
pop
ja
xchg
adc
xchg
aad
cld
push
movsb
fidivs
aam
sub
inc
ret
pop
jge
dec
pushf
pop
dec
int3
out
jl
mov
int3
outsb
inc
or
movsb
dec
mov
inc
and
sbb
dec
cli
pop
xchg
sub
add
or
sub
gs
push
insb
popa
cmp
fadds
clc
dec
mov
xchg
or
pop
je
xchg
aad
insb
cltd
sti
sbb
test
outsb
xchg
sub
es
dec
mov
mov
mov
push
jmp
lret
push
cmp
and
popa
mov
mov
xor
dec
sti
mov
fcoml
je
mov
inc
pop
outsl
mov
mov
repz
cmp
out
mov
nop
mov
int
dec
adc
mov
fwait
adc
sbb
mov
cmp
xor
ret
xchg
inc
es
popf
mov
outsl
test
aad
fadd
jne
decl
sub
dec
mov
loop
mov
jnp
fbstp
add
pusha
adc
xchg
pop
shrb
xlat
xorl
gs
push
sbb
or
arpl
pop
lahf
mov
test
cld
repnz
enter
xor
iret
or
aaa
mov
push
fimuls
xor
fildl
mov
pushf
insl
fwait
cmc
push
fmul
dec
cmp
imul
shrb
push
dec
inc
mov
inc
lods
dec
sub
aam
push
fistps
aad
pop
and
mov
cmc
ljmp
mov
cmpb
in
ss
pop
xchg
pop
cmp
outsb
or
out
movsb
ljmp
xor
mov
add
pusha
adc
cmpsb
lock
outsl
mov
jmp
cmpsl
in
js
flds
push
ds
jae
mov
daa
adc
dec
mov
push
enter
das
mov
jge
lret
aad
cmp
sub
popf
subb
aam
lds
sub
rcrl
pop
or
and
dec
pop
fsubrs
sti
mov
xor
pop
cltd
aam
sbb
pusha
pop
pop
imul
es
imul
jne
adc
pop
push
icebp
ljmp
insl
mov
push
push
xchg
sub
orl
fwait
roll
adc
inc
lret
add
inc
lds
pop
inc
pop
xchg
mov
dec
push
jbe
sti
or
dec
cmp
and
call
pop
fwait
push
lods
std
stos
xchg
fisubrl
mov
cld
lods
ss
subl
mov
mov
mov
or
inc
fs
imul
lock
inc
lock
pop
repnz
imulb
adc
dec
ja
jle
loope
or
stc
nop
movsl
aad
es
add
adc
repz
mov
insl
imul
fisubs
hlt
fwait
mov
rolb
cmpsl
shlb
jle
or
mov
inc
out
pop
stos
mov
xor
aaa
cmp
ljmp
arpl
mov
add
dec
shlb
rol
les
in
dec
mov
cmp
or
aam
loopne
rcrb
jnp
mov
mov
push
arpl
pusha
out
mov
jnp
ret
mov
cmp
sti
out
push
and
and
rcrb
roll
mov
dec
nop
sub
mov
push
out
loope
add
jle
aam
inc
jge
roll
sub
add
dec
pop
or
cmp
add
jmp
push
test
jns
out
loop
gs
pop
xchg
clc
pop
lret
jns
fs
das
mov
inc
cmovb
test
lock
mul
sub
fldt
mov
and
arpl
les
cmp
sahf
mov
xchg
mov
mov
xchg
enter
adc
mov
test
idivl
enter
adc
and
imul
nop
jo
adc
xlat
and
stc
or
or
sub
sub
pop
sub
adc
sbbb
call
sub
pop
enter
mov
std
popf
fildll
lock
enter
pusha
and
loope
xchg
jmp
repnz
push
pop
ss
add
lock
fistpll
icebp
gs
rep
notl
mul
sub
xor
mov
jae
nop
sarl
std
mov
popa
and
sub
lret
and
mov
aas
mov
insb
jb
divl
xchg
int3
dec
ret
xchg
loop
stc
and
jmp
pop
lods
repnz
leave
inc
mov
dec
mov
mov
inc
roll
xchg
or
fidivs
cmpb
or
cmpb
cmpsb
stos
loop
pop
push
das
je
pop
and
xorb
fldcw
xor
pop
ficoml
mov
cwtl
test
cs
mov
cltd
jg
mov
loope
jno
inc
sbb
dec
std
and
cmp
call
xchg
or
jmp
stc
dec
pop
movsl
xchg
adc
sbbl
rcrl
mov
sbb
cmc
out
push
sub
jns
xor
and
out
in
loop
dec
adc
idiv
pop
jae
dec
push
cmp
push
addr16
push
push
cmpsl
test
mov
mov
icebp
lahf
mov
pop
push
pop
push
push
cmp
sub
jb
mov
inc
lods
out
cmc
sub
nop
jne
xor
xchg
cltd
pop
or
jmp
jg
add
hlt
roll
insb
sbb
jo
pop
mov
aaa
jbe
cmc
jmp
js
xchg
mov
ror
sub
shl
xor
je
cmpl
popf
movsb
or
lods
pop
in
test
dec
push
mov
enter
jmp
ja
jbe
adc
outsb
fdivrs
push
fimull
xchg
pop
inc
mov
adcl
enter
pop
popa
mov
and
and
lret
xchg
aam
dec
mov
pushw
sub
jae
loop
mov
inc
push
inc
mov
or
mov
mov
lea
pop
int
ret
add
inc
mov
pop
push
rorb
and
jns
push
mov
gs
lret
mov
and
inc
ja
movl
mov
or
test
mov
or
jbe
sub
xchg
aaa
ret
mov
scas
or
mov
add
jmp
leave
lret
loopne
in
xlat
jne
push
movsl
popa
dec
mov
jns
mov
es
test
ret
int3
leave
sub
cmp
fwait
pop
adc
jns
xchg
je
movsb
mov
arpl
in
sub
push
or
adc
sbb
sbb
jecxz
cld
adcb
loop
hlt
sub
test
fdivrs
out
mov
push
mov
jbe
enter
dec
sahf
xor
fldt
lcall
pop
and
int3
add
xchg
int
mov
inc
call
or
flds
sbb
xor
pop
and
add
aad
cs
mov
ljmp
add
push
filds
test
popa
push
fisubl
hlt
and
nop
enter
sarl
ds
dec
daa
wbinvd
xor
stos
scas
xlat
mov
cmc
xchg
pop
pushf
cwtl
jnp
pop
mov
add
inc
jnp
mov
int3
inc
jle
xchg
les
outsb
inc
pop
or
jo
enter
mov
fistps
mov
jecxz
add
mov
adc
mov
mov
sbb
dec
out
andb
test
ficoms
xchg
sbb
dec
pop
popa
and
shlb
inc
bound
jb
xor
inc
jnp
sub
sbb
insb
lret
jae
inc
jl
shl
mov
cwtl
mov
push
or
sbb
into
inc
lea
mov
lahf
in
mov
dec
xor
and
ret
cli
or
aaa
test
lods
cwtl
fs
cmpl
pop
pop
inc
cwtl
pcmpgtw
adc
jg
dec
in
fistpl
or
mov
inc
jmp
lret
lock
adc
out
dec
mov
mov
mov
loope
or
add
in
xchg
in
imul
subl
dec
les
jg
inc
jge
push
nop
mov
in
hlt
ror
push
stc
fidivrl
and
orl
stos
mov
inc
out
mov
loopne
shrl
faddl
jecxz
imul
push
pushf
ljmp
inc
and
fidivs
shll
jno
ret
add
xchg
or
push
jmp
push
mov
inc
pop
shrl
test
push
add
push
cmp
das
inc
shrl
mov
jg
decb
pop
fcoml
clc
inc
mov
arpl
filds
or
xor
aad
fwait
test
sahf
sbb
xor
jbe
in
cli
outsb
sti
shlb
pop
inc
scas
psrlw
mov
ret
adc
adc
loopne
dec
ficompl
dec
imul
xchg
out
jno
rcrb
pop
das
orl
sti
pushf
imul
push
fdivrp
pop
dec
sbb
das
iret
sbb
xchg
flds
xchg
imul
cmp
push
mov
popf
imul
arpl
mov
push
jge
inc
dec
insl
mov
dec
cmpsl
mov
mov
mov
sub
ja
shrl
mov
clc
jno
fbld
idivb
sub
jae
mov
sub
inc
xchg
sbb
outsb
cmpsb
mov
add
pop
jle
pushf
jmp
out
sti
clc
data16
lahf
sbb
mov
stc
lea
jb
xor
loope
inc
cmpsb
push
insb
pop
xchg
dec
ret
mov
mov
mov
mov
cmp
fmull
or
movsl
add
enter
jmp
outsb
sub
mov
and
fidivrl
movsb
imulb
pop
pop
pop
cli
xchg
ret
test
inc
push
mov
out
cmc
mov
pop
mov
jmp
jge
out
and
daa
int3
movsb
pop
mov
pop
mov
and
xor
in
jge
or
cmpsb
jp
mov
jp
inc
sub
loope
fwait
les
inc
int3
scas
outsl
or
fwait
popa
das
test
jecxz
push
pop
pop
addr16
xor
xchg
lret
mov
xchg
std
mov
jbe
xor
xchg
add
ret
pop
and
xor
popa
jg
pop
push
les
jmp
shrb
imul
pop
xchg
xlat
or
arpl
mov
inc
test
ja
dec
bound
inc
imul
or
addb
ret
mov
out
dec
lods
imul
jle
stos
inc
shr
scas
icebp
iret
sbb
and
push
sahf
mov
jmp
xor
add
dec
in
xor
cli
inc
iret
aas
pop
insb
std
jecxz
or
mov
adc
sbb
rol
inc
push
int3
sbb
lret
ljmp
mov
sub
out
mov
jecxz
test
adc
jo
ds
xchg
outsl
fcomps
mov
daa
test
jne
dec
mov
imul
and
mov
pushf
inc
in
imul
sahf
mov
lods
aam
xchg
lret
ficoml
push
sbb
pop
cmp
rep
jmp
sbb
add
sbb
lret
dec
xchg
popf
push
and
aad
push
mov
seta
and
ds
test
and
push
test
rclb
mov
ljmp
xor
dec
addr16
adc
dec
xchg
dec
vmaxss
pop
dec
outsl
stos
sub
lods
xor
lret
jle
dec
sarl
pop
cwtl
into
xchg
test
or
shlb
jge
stos
rcrb
mov
outsw
push
leave
xor
popa
cmp
into
mov
jne
out
into
repz
mov
dec
mov
lret
ret
xchg
pop
insl
sbb
decl
orl
jle
inc
fidivrs
in
leave
fwait
sbb
cmp
jbe
scas
mov
push
std
ja
sub
or
and
roll
test
scas
fnstcw
and
cld
push
inc
popa
sub
fildl
data16
sub
inc
jne
movsb
add
and
mov
dec
and
sub
mov
mov
fcompl
scas
xchg
int
cmpsl
sub
imul
scas
pop
mov
adc
sti
sbb
test
testl
push
sbb
insb
mov
iret
xor
sbb
mov
insl
adc
mov
leave
xlat
push
cmp
cld
nop
push
stos
ret
scas
xchg
test
fwait
mov
fcoml
dec
mov
shl
or
testl
add
cmc
jle
cmp
movmskps
ret
or
cmp
push
sbb
out
push
jae
cli
imul
sarl
movsb
sub
cli
mov
add
mov
cld
push
and
les
or
jae
cs
add
les
push
sti
push
push
or
stos
js
test
or
xchg
jo
pop
sbb
mov
lcall
orl
mov
inc
ja
mov
ljmp
lock
mov
sbb
fadd
and
je
pop
iret
pop
jb
dec
inc
outsb
loop
jle
cmpsb
mov
push
hlt
xchg
inc
and
into
inc
mov
pop
or
icebp
aam
loope
cmp
jno
pop
ja
fiadds
jecxz
mov
xchg
xor
cld
mov
and
dec
cmp
insl
push
push
dec
sub
xadd
xchg
dec
cs
add
jle
xchg
cmpsl
pushf
lret
jl
iret
mov
push
jle
cmp
jle
shll
adc
ret
jnp
arpl
sbb
aam
arpl
orb
test
and
sbb
ror
ss
cmp
jne
pop
dec
push
xlat
sub
mov
xchg
cmp
loopne
js
sbbl
fiadds
add
push
jge
into
icebp
lds
lods
popa
mov
ljmp
push
test
loopne
arpl
out
jecxz
loope
in
out
jg
jb
fmuls
outsb
mov
fstps
add
movsl
cmp
rclb
sub
cmp
inc
push
mov
push
sbb
jl
divb
inc
fisttps
inc
lods
mov
jg
mov
push
repnz
mov
aas
nop
out
je
adc
popf
cmp
cmp
push
push
sbb
or
dec
adc
cwtl
test
fidivl
gs
xor
rolb
loope
pop
push
mov
fwait
or
das
int
jmp
data16
clc
dec
mov
scas
dec
roll
dec
inc
and
mov
mov
sahf
jo
pop
dec
inc
fs
or
pop
adc
or
cmp
sub
push
icebp
inc
repnz
adc
inc
add
mov
and
push
cmp
push
shlb
mov
push
jns
fidivrs
outsb
ffreep
and
mov
cwtl
sub
in
mov
sbb
lock
jl
pop
nop
mov
imul
cmp
or
fldcw
mov
test
nop
or
push
hlt
sub
xorl
ss
hlt
in
cmp
ss
clc
xchg
sub
test
add
pop
outsb
pop
clc
ficoml
repnz
imul
adc
shr
xchg
xchg
or
mov
cmp
fistps
mov
xchg
mov
test
imul
lea
add
cmp
mov
lods
inc
in
mov
push
cmp
lahf
pop
adc
dec
lret
push
mov
push
xor
pop
add
sbb
xlat
lret
loope
es
loop
adc
jae
outsl
add
inc
cmp
mov
jne
jmp
mov
imul
stos
lea
stos
xor
and
daa
cmp
fldcw
cwtl
jb
jo
clc
negl
and
mov
sbb
ljmp
jno
lret
ret
pop
hlt
mov
call
sub
aam
xchg
mov
dec
in
cmp
jae
les
lods
inc
jnp
enter
ret
mov
push
sub
lds
adc
sub
adc
adc
mov
xchg
or
or
movl
fildll
mul
xlat
pusha
mov
ss
mov
jge
lret
ja
inc
dec
mov
popa
mov
pop
pop
popl
ljmp
lods
jno
ficoms
test
mov
jbe
ss
add
dec
inc
bound
pop
jbe
loopne
jbe
sbb
imul
ret
fiadds
popl
push
push
int
push
in
rcll
add
outsb
movsb
loope
or
aad
cmp
and
clc
rorb
or
popa
idivb
sbb
mov
jl
xchg
sub
mov
sbb
out
int
mov
aad
mov
lret
scas
rorb
pusha
xor
adc
adc
jbe
les
and
cs
sahf
pop
xor
mov
cmpb
pavgw
inc
mov
pop
test
les
sbb
fstps
sbb
dec
adc
lcall
unpckhps
rcrl
pop
inc
sahf
pop
das
pop
inc
lahf
jmp
loope
jo
pop
pop
mov
add
pop
in
loopne
movsl
mov
push
and
dec
push
out
aas
mov
or
ljmp
lea
push
out
add
test
adc
test
popf
cmc
add
lds
into
add
rcrb
xchg
ljmp
cmovo
sub
loopne
ljmp
xchg
iret
or
push
stos
or
cmp
xchg
xor
lea
incl
jmp
mov
mov
and
push
out
push
pushf
iret
mov
dec
inc
call
push
nop
cmp
mov
movsl
cmp
mov
add
lcall
test
push
arpl
ljmp
in
and
fildl
mov
and
inc
push
cld
mov
ljmp
es
mull
xchg
sub
xor
dec
cmp
cmp
pop
fcmovb
pushf
jl
xor
jne
cmp
lret
mov
fstpt
push
scas
xchg
push
inc
int3
mov
movsl
ss
lret
pusha
inc
leave
mov
xchg
inc
add
adc
idivb
mov
popf
cmp
adc
scas
jbe
push
or
dec
lods
cmpsl
mov
icebp
in
add
xchg
xlat
sbb
and
mov
iret
mov
fsubrl
pop
xchg
add
pusha
mov
aam
xor
fwait
inc
bound
movl
and
insb
testl
mov
push
sub
or
int
jae
add
adc
sarl
mov
jne
add
add
test
movsb
orl
sbb
xor
pop
mov
pop
nop
jmp
xchg
cmp
jae
or
cmp
icebp
jnp
lock
mov
mov
push
inc
pushf
ds
shlb
sahf
sub
mov
testl
and
mov
insb
mov
sub
daa
loop
in
cmc
mulb
add
nop
out
cltd
inc
inc
mov
and
imul
cwtl
scas
dec
inc
mov
cltd
bound
mov
and
ret
enter
xchg
in
mov
lock
fists
out
inc
pop
test
add
imul
pop
lret
and
inc
pop
ljmp
mov
sbb
or
loopne
enter
dec
lret
lahf
mov
lds
cmc
pop
imul
test
cmp
mov
sub
iret
fdivrl
mov
fsubl
stos
jae
sbb
inc
add
mov
cmp
dec
movsl
aam
sbb
loopne
in
mov
mov
ljmp
mov
or
sub
out
bound
mov
pop
pop
cli
lret
mov
pop
out
sbb
iret
popf
sbbb
cltd
mov
mov
sahf
jmp
and
outsb
push
je
xchg
inc
rcr
lcall
xchg
ljmp
xchg
adc
rorl
stos
mov
cmp
xchg
cltd
xor
mov
loope
dec
cltd
adc
movsb
dec
clc
dec
lcall
cmp
pop
mov
std
pushl
push
rcrl
test
in
rorb
in
push
push
and
push
add
mov
mov
or
adc
dec
push
movsl
cmp
jbe
subl
stos
mov
scas
xchg
mov
aas
rsqrtps
mov
mov
jae
pop
xor
jno
push
push
cmp
xor
mov
imul
xor
sbb
xchg
in
pop
xchg
xchg
popf
mul
cmpsb
fsubs
push
enter
lods
inc
sarb
xchg
mov
mov
pop
mov
loope
push
lods
bound
dec
aam
adc
pushl
out
push
xor
jnp
scas
push
das
xchg
add
dec
dec
jmp
fcomps
sub
pop
jg
pop
gs
cmp
jle
mov
mov
inc
clc
or
orb
adc
mov
jbe
and
jmp
in
mov
cmp
stos
mov
fmull
pop
mov
lea
shlb
test
or
xor
les
mov
cmp
push
push
pop
or
enter
sahf
mov
fmull
movsl
push
or
sub
cmp
and
jp
lahf
pop
aad
aam
cmp
xlat
jl
bound
fdivrs
mov
rcrb
mov
in
or
pusha
pop
sti
sbb
mov
into
adc
add
sbb
clc
lock
int3
aaa
repnz
sub
sbb
pop
jp
sbb
out
xchg
aas
adc
fucomip
sbb
icebp
addr16
sahf
and
sbb
mov
sub
sbb
gs
aas
cmp
add
call
inc
jmp
lret
je
xchg
pop
cmp
jnp
imul
push
inc
lahf
mov
lds
mov
imul
mov
insb
js
repnz
push
xor
fnsetpm(287
out
bound
xor
ficoms
rcr
jo
xchg
ljmp
inc
push
arpl
mov
sub
xor
dec
mov
popf
fwait
ds
rolb
notl
enter
push
sub
mov
cmpb
lahf
xchg
cmpsb
xchg
int
sbb
dec
xor
lock
mov
outsb
inc
hlt
fwait
inc
cmp
dec
sbb
adc
push
fstps
aad
xchg
imulb
int3
arpl
xor
ljmp
mov
fucomi
pusha
mov
push
jno
ret
dec
out
or
cmpsb
cwtl
dec
adc
pusha
pop
jnp
add
jbe
or
jecxz
jmp
in
test
or
sbb
pop
xor
or
int3
sbb
mov
lds
sti
shrl
imul
sbb
cmp
ret
xlat
aam
mov
adc
mov
je
dec
jns
push
mov
das
gs
sbb
cs
push
pminsw
cwtl
ret
ss
sar
or
int3
int
imul
add
jg
push
lock
or
scas
scas
jno
pop
adc
xor
stc
adc
imul
std
add
cmpl
fdivs
adc
lds
repnz
mov
xor
push
icebp
rolb
aaa
adc
out
cmp
mov
mov
sbb
xchg
dec
pop
popa
cmpsb
cmc
imul
fwait
or
adc
scas
sbb
loop
test
mov
nop
in
push
scas
and
adc
ret
sti
ds
rorl
in
jns
notl
cltd
cmpsl
shll
adc
mov
cmp
cltd
repz
or
adc
xor
and
int
in
ret
cmp
inc
addb
popf
add
pop
out
sbb
mov
mov
mov
scas
and
xchg
cmp
repnz
and
add
cmpsl
inc
inc
sahf
jnp
lods
ja
or
jmp
push
shlb
mov
roll
and
or
lock
jbe
negb
push
jmp
fisubrl
fwait
das
int
loopne
aad
cmpsb
pushf
imul
lret
sbb
xchg
mov
sti
dec
shl
rorl
bound
testl
int3
xchg
sbb
cmp
mov
jnp
in
movsl
cs
fcoml
jecxz
loop
xor
xor
push
cmpsl
mov
dec
push
sahf
js
cmp
sub
or
mov
outsl
pusha
push
or
mov
pop
daa
jno
jg
gs
loope
addr16
inc
sbb
sub
push
sbb
div
sbb
pushf
dec
push
dec
xchg
pusha
ret
lods
pop
mov
stos
xchg
mov
mov
jg
aas
mov
loopne
shll
outsl
aam
and
popf
sahf
xlat
jne
out
sbb
mov
mov
xchg
test
scas
loopne
sub
jmp
adc
scas
sbb
stos
cmp
fidivrs
daa
sti
fstps
rcll
in
push
mov
xor
aad
out
leave
or
cld
lret
or
ljmp
jnp
mov
add
loope
dec
push
aas
mov
mov
pop
das
mov
mov
hlt
or
leave
xor
xchg
fwait
cmpsb
or
test
mov
fwait
out
pop
movsl
cltd
pop
pop
test
int3
inc
inc
mov
cmp
dec
or
mov
sarl
in
dec
jle
fbld
inc
xchg
xchg
dec
rol
in
jle
mov
mov
stos
sbb
out
enter
inc
pop
fsts
cmp
fs
int3
lock
inc
dec
add
lea
mov
fadds
daa
mov
xor
pop
gs
mov
pop
inc
fwait
orl
mov
xor
ret
inc
repz
pop
adc
rcl
enter
test
incb
je
sbb
jp
inc
lahf
insl
xchg
cmpsl
stos
mov
mov
fucomp
gs
loop
arpl
pop
add
in
nop
inc
jge
add
xor
das
cmp
sahf
adc
imul
push
xor
je
xor
in
cmp
xchg
mov
scas
imul
pushf
daa
cwtl
push
rorb
fidivrs
lret
xor
rcrl
sbb
ljmp
mov
mov
pop
xor
push
sub
lcall
lods
push
daa
mov
mov
adc
fabs
xor
js
int3
data16
and
jmp
adc
inc
pushf
bound
jle
push
push
lret
ja
in
mov
cli
negb
call
sub
xor
jne
imulb
adc
jns
pop
cmpsb
jns
xchg
mov
daa
popf
inc
cli
sbbb
pop
mov
stc
jmp
lret
mov
sahf
test
pop
aas
mov
addr16
push
sbb
xchg
jns
push
xchg
js
int
or
xchg
mov
mov
gs
adc
pop
mov
xor
sarb
mov
movsb
ss
and
repnz
xchg
cmp
out
or
in
mov
mov
push
insb
fsub
jg
sbb
push
adc
dec
leave
add
mov
es
rclb
xor
push
dec
mov
mov
out
cmpsl
mov
daa
test
repnz
dec
ds
xor
adc
lahf
jno
add
ljmpw
sub
push
lret
outsb
out
sti
lret
add
sbb
and
movsb
cmp
daa
addr16
fsubrp
aas
mov
mov
test
test
push
add
in
adc
lcall
arpl
jne
popa
lea
push
scas
js
loopne
rcl
fbstp
jp
xchg
aad
rcll
cmp
shrl
fildl
lahf
sub
or
popa
push
imul
test
mov
adc
mov
sub
adc
sahf
aad
xchg
je
adc
push
cs
dec
cli
add
fimuls
lret
xor
leave
bound
rcll
aas
xchg
repz
mov
popa
retw
mov
out
mov
sub
dec
cs
sbb
cmp
repnz
insb
jge
lahf
out
and
fisttps
in
imul
jp
fiadds
sti
and
add
sbb
scas
call
adc
aam
jp
ljmp
mov
mov
std
or
mov
cs
mov
add
lods
pop
adc
cli
xchg
arpl
out
jmp
mov
jo
jb
adc
jl
imul
in
adc
test
cmp
subl
cltd
mov
shlb
imul
or
mov
mov
push
mov
insb
popf
sub
xchg
jb
mov
dec
sahf
mov
bound
push
or
sti
push
push
xchg
icebp
xor
sbb
loop
lcall
inc
enter
inc
dec
ljmp
in
flds
fnsave
mov
out
in
clc
xor
mul
push
xchg
or
lds
in
hlt
mov
jp
mov
movsl
xchg
mov
or
cli
inc
iret
sahf
pop
fcompl
pusha
sarb
xor
sti
push
jo
sarb
xor
out
add
push
push
loopne
adc
test
les
test
add
jecxz
cmpsb
pop
nop
bound
add
push
in
sub
xchg
push
mov
mov
xor
lock
or
add
fnsave
imul
jecxz
call
push
pop
outsl
dec
cmp
stos
fs
sbb
iret
into
pop
add
jo
push
imul
in
mov
fcomp
mov
jne
add
gs
les
dec
adc
pop
insb
inc
jnp
popf
push
xchg
mov
addl
jne
loop
cmpsb
sbb
aaa
pop
int3
mov
stos
dec
call
inc
mov
mov
popa
fdivs
lock
loop
lods
shrl
push
mov
fwait
mov
dec
call
or
fnstcw
divl
mov
hlt
addl
pop
xor
addl
loope
pop
jns
pop
fists
dec
sbb
adc
cltd
jno
mov
xor
push
jecxz
adc
or
mov
mov
jns
gs
jmp
mov
sarl
push
adc
fidivl
mov
sub
pop
cmp
mov
imul
mov
or
xchg
sbb
adc
ret
xor
pop
insl
dec
sbbl
sahf
mov
fcmovnu
out
incb
andl
mov
fcmovnbe
jns
and
add
das
xchg
push
jp
inc
iret
loope
xchg
inc
stos
ret
int
or
lds
jge
xor
and
mulb
adc
outsb
test
int3
aaa
fcmovnbe
and
push
pop
andb
pop
in
mov
jo,pt
pop
in
cli
stos
in
pop
sub
jne
fsubs
loop
pop
or
sbb
std
xchg
push
lret
out
fcomps
pushf
mov
mov
fwait
adc
push
lods
ss
inc
test
int
loopne
in
dec
imul
xlat
and
or
fsubl
push
lret
sahf
jne
clc
out
sbb
xor
sub
cmp
sahf
fidivrl
insl
fsubs
and
mov
mov
dec
bound
arpl
jae
pavgw
ss
orl
test
jae
cmpl
dec
jnp
stos
and
mov
sbb
sbb
cmp
cli
mov
ret
ss
bound
sbb
scas
mov
shrl
pop
int
adcb
ret
ror
mov
adc
arpl
popf
std
xchg
rcl
aas
das
inc
inc
imulb
inc
or
dec
or
stos
lcall
rorl
xchg
out
pop
fwait
pop
and
or
adc
in
sub
or
xor
push
mov
ffreep
movsl
lret
scas
outsl
adc
out
inc
in
and
lods
ja
lock
pop
ret
loope
lahf
adc
in
scas
push
mov
sbb
aam
mov
and
mov
xor
mov
xor
mov
push
pop
add
imul
and
test
rcll
and
push
sbb
jecxz
add
adc
and
loop
add
aad
xor
pop
adc
js
out
ds
inc
mov
call
cli
jl
pop
movsb
std
pop
add
in
adc
pusha
aam
add
cmp
or
lea
mov
add
sti
jbe
mov
dec
xor
or
hlt
enter
xchg
jmp
jl
cmpsb
stos
frstor
int3
and
adc
inc
stos
fidivl
fnsave
xabort
addl
sbb
stos
das
jno
lcall
jle
xor
mov
xor
pop
jns
aam
and
xchg
ja
cltd
inc
popa
daa
push
sbb
lods
fidivrl
sub
pop
iret
or
fwait
cmp
ja
jns
cmp
jno
cld
fistl
push
adc
out
cli
pop
fs
loopne
pop
enter
jge
in
mov
inc
push
jb
lea
pop
ret
mov
mov
mov
mov
outsb
push
das
pushf
fstpt
das
shr
sbbb
push
je
insl
push
movb
inc
incl
jo
mov
mov
cmp
adc
dec
loope
ficoms
xchg
fnstenv
jb
jo
je
imul
jno
cmp
mov
popf
jge
push
cmpsl
cmp
xor
fwait
pop
xchg
ljmp
push
mov
and
pop
stc
gs
cmp
in
lahf
pop
sub
add
fdivrl
shrl
jne
dec
mov
dec
mov
dec
pop
lods
jp
mov
aad
das
dec
jb
cmpsb
ret
pusha
push
xchg
test
fcoms
lcall
jne
in
and
outsl
stos
dec
fstp
mov
pop
adc
sbb
loopne
stc
cmp
arpl
mov
mov
pop
lods
dec
inc
insl
xor
adc
nop
xor
xchg
into
mov
arpl
cmp
push
sbb
and
and
lock
cmp
fcoms
sbb
shl
jecxz
divb
dec
mov
xchg
adc
clc
inc
test
fwait
dec
xchg
fists
ja
shrl
pop
cmp
je
jg
repz
mov
pop
push
mov
test
ss
fists
ds
jp
cmc
push
fwait
xchg
dec
flds
decb
call
cmp
or
jnp
in
faddl
sub
or
roll
fwait
mov
pop
mov
int3
add
es
repnz
imul
inc
mov
mov
and
pop
aas
repnz
repnz
push
movhps
insl
cmp
cmp
jns
add
pop
test
mov
lds
mov
sub
cmp
xchg
inc
jbe
sarb
adc
lahf
cld
adc
leave
mov
mov
mov
pop
testl
jl
cmp
lret
enter
lret
pop
adc
loop,pt
xlat
jb
psubsw
jle
xor
jle
bound
outsb
enter
cmp
sbb
sahf
xor
pop
popa
pop
shl
adcl
lcall
outsl
mov
lret
inc
or
fdivrs
mov
loope
in
xor
dec
sub
lret
adc
test
rorb
xchg
mov
xchg
jbe
scas
sahf
add
xor
lods
pop
mov
inc
pusha
xchg
push
mov
sub
hlt
sub
aas
xor
xchg
out
fs
fcomps
fidivl
sbb
mov
call
rcr
cmpsb
mov
cli
pop
and
inc
cmpsb
xchg
dec
cwtl
mov
rcll
cmp
std
push
enter
dec
loopne
jno
stc
xchg
rcll
mov
sub
or
aas
adc
jne
mov
call
in
pushf
pushl
push
add
into
imul
cmp
push
or
popf
imul
loopne
stos
sub
hlt
inc
adc
or
jg
xchg
in
lret
ror
jnp
pop
mov
jge
jae
inc
movsl
daa
or
test
jb
mov
arpl
mov
push
ljmp
sbb
sbb
xor
adc
mov
test
jae
xor
daa
lods
ljmp
pop
imul
mov
ds
adc
cmp
cmp
stos
les
inc
mov
rcll
flds
fiadds
cmpb
cmpsl
push
fimuls
imull
jmp
cmc
cwtl
inc
mov
xor
test
scas
cs
jp
sub
add
iret
repnz
xchg
xor
and
imul
mov
cld
mov
add
xchg
jne
jmp
mov
decl
sbb
je
enter
push
jb
shl
outsl
and
scas
dec
or
cli
adc
mov
call
mov
fsub
pop
inc
arpl
aam
lock
outsl
xchg
lret
adcb
adc
push
jnp
lds
faddl
jecxz
mov
mov
bound
inc
and
mov
lods
xchg
and
push
fstps
stos
loopne
dec
push
lahf
lea
mov
les
add
sahf
das
adc
inc
lea
push
test
aaa
or
adc
shrl
int
add
outsl
fisubs
fistpl
jecxz
sbb
insb
in
xor
stos
jno
xchg
lods
in
mov
push
test
adc
mov
imul
ds
push
sarb
jp
dec
test
mov
jno
std
mov
cmp
sub
cltd
ds
adc
push
inc
cmp
add
xchg
inc
in
enter
ds
mov
por
adc
adc
stc
cmpsl
add
xor
test
scas
sbb
xchg
leave
xor
inc
mov
mov
lds
rclb
scas
push
lcall
fdiv
arpl
adc
sahf
mov
cmc
jo
enter
sub
inc
insb
cld
sub
call
pop
or
xlat
lahf
ja
mov
cmc
loope
lret
in
adc
inc
test
lds
sub
pop
or
por
mov
xor
sbb
stos
adc
pop
mov
mov
lods
and
mov
les
xor
loopne
loop
dec
lods
push
out
or
add
cmpsl
inc
push
xchg
pop
dec
mov
dec
es
mov
adc
hlt
push
push
push
popf
inc
frstor
mov
xor
jne
cmp
lock
mov
stos
dec
sub
mov
sub
mov
rcrl
ljmp
push
mov
push
pop
test
movsb
mov
imul
sub
sub
subl
cltd
ret
sbb
push
add
push
and
addr16
sub
jns
imul
lcall
push
lcall
hlt
cwtl
jl
roll
jge
leave
outsl
lock
xlat
or
sbb
fisubl
cmp
cltd
nop
shr
fdivs
adc
cli
ret
leave
je
mov
popf
cmp
sahf
sbb
insl
fcmovb
jmp
test
movsl
push
stc
mov
enter
push
stos
and
pop
shrl
mov
fs
out
mov
sub
mov
mov
cld
shlb
jns
shrb
xlat
hlt
clc
in
stos
xor
adc
mov
or
push
bound
mov
into
leave
adc
fs
pop
mov
and
adc
mov
jge
jge
loop
scas
dec
or
enter
aaa
js
mov
imul
lock
je
mov
add
mov
call
sub
arpl
and
cmp
idivb
pop
int3
add
jno
ss
and
pop
mov
inc
jbe
mov
xchg
addr16
and
je
pop
ret
loop
popf
ja
sbb
loope
pop
lods
adc
aam
imul
mov
lret
xor
add
adc
or
pop
fstl
imul
pop
sbb
mov
push
fimull
stc
cwtl
jns
jb
mov
inc
in
adc
or
sahf
lahf
jns
jg
fists
sub
adc
mov
mov
mov
sub
adc
dec
add
or
push
mov
adc
mov
movsl
arpl
and
mov
sbb
push
outsl
and
fsubrl
iret
push
inc
stc
mov
sahf
inc
inc
insb
repnz
xchg
std
stos
or
dec
lock
mov
or
inc
repnz
aaa
mov
cmp
int3
rol
inc
push
cmp
movsl
pop
movsl
and
lods
imul
xchg
jp
push
lcall
jbe
sub
movsl
rcll
fwait
jae
orl
loope
pushf
stc
inc
adc
shlb
ljmp
add
cs
mov
dec
push
add
push
adc
imul
ss
lcall
leave
int3
das
mov
and
pushf
jmp
mov
je
xor
lahf
adc
mov
popf
ficoml
add
push
jecxz
mov
lock
cmc
inc
push
inc
clc
lods
jae
xor
out
sbb
mov
dec
ret
lahf
jne
xor
pop
test
inc
shlb
inc
add
jge
cmp
lret
stos
dec
mov
inc
adc
mov
cmpsb
jno
sahf
bound
pop
dec
lea
mov
xchg
test
xchg
data16
add
jnp
or
inc
adc
stos
jge
out
popf
and
insl
or
js
xor
in
or
sub
xchg
dec
insl
test
inc
imull
ret
xor
ja
call
leave
lahf
mov
outsb
es
rcll
jecxz
je
repz
insl
sbb
loopne
in
ret
mov
out
jl
in
cmp
cmpsl
mov
daa
sub
out
adc
add
push
dec
repnz
fisubs
bound
xchg
loop
mov
sti
cmpsl
mov
enter
ds
push
mov
jbe
mov
sub
dec
ret
loop
inc
ja
mov
add
mov
inc
dec
enter
push
repz
and
fcmovne
jecxz
frstor
outsb
mov
out
push
stos
jo
addr16
fstl
cmp
ret
xchg
sbb
pop
popa
and
jnp
xchg
pop
mov
call
push
testb
sbb
mov
sub
mov
push
mov
add
sub
subl
jae
fcmovne
ljmp
mov
das
and
jne
pusha
clc
cmp
aas
lahf
es
push
push
faddl
andl
and
cmp
adc
dec
scas
push
add
push
fs
push
aad
loop
pop
lds
dec
inc
aas
jne
push
nop
inc
jno
fsubr
xchg
mov
ss
dec
mov
jne
mov
mov
xchg
mov
xchg
stos
xor
cmpsb
xchg
mov
sub
or
insb
add
mov
inc
aaa
adc
lea
int3
inc
push
cmp
mov
dec
jno
fisubrl
or
addr16
jle
shlb
xchg
ja
daa
sub
pop
push
inc
arpl
cld
subb
out
sbb
mov
imul
sbb
jns
jle
push
stos
xchg
jns
inc
test
imul
jl
jno
cmp
cli
in
jmp
lods
push
repnz
xlat
testb
push
lods
ljmp
xchg
sub
mov
or
jecxz
pop
test
mov
test
jns
jmp
ljmp
dec
dec
mov
cltd
lret
jnp
jne
cld
pop
push
aas
in
sub
adc
pop
pop
cltd
in
ljmp
jl
loopne
hlt
out
loop
movsb
sbb
push
fs
jae
xchg
mov
js
adc
lahf
pop
cli
punpckhbw
jg
lods
jns
loope
pop
stos
pop
mov
xchg
dec
mov
jnp
dec
ljmp
fstl
xorl
ret
into
pop
in
adc
dec
mov
dec
sbb
jl
ljmp
pop
sbb
mov
pop
jmp
movsb
or
stos
out
outsl
inc
xor
inc
jbe
sbb
jmp
adc
fabs
pusha
cmc
adc
push
sbb
and
jae
fcomi
shlb
adc
inc
jae
adc
and
add
dec
pop
adc
mov
add
int3
sbbb
mov
adc
call
fildl
sbb
fnsave
xchg
or
adc
pause
ja
into
dec
ja
insb
es
cmp
dec
rorl
pop
add
inc
push
push
mov
pushf
or
mov
jnp
and
pop
mov
mov
sub
sub
xchg
lea
inc
xchg
int
xor
push
jne,pn
addr16
pop
or
movsb
loop
ret
push
and
fs
push
add
pop
or
imul
aas
xchg
xchg
clc
jne
push
loop
arpl
fcmovnb
movsb
sbb
and
icebp
xlat
add
dec
daa
loop
fisttpl
scas
popf
sti
test
ljmp
mov
rolb
std
insb
xor
ljmp
push
push
loope
lea
mov
orb
vmovdqu
icebp
popa
stos
pop
ret
sahf
addb
and
xor
rcrl
hlt
es
scas
mov
add
add
mov
adc
cmp
cltd
outsl
aas
je
mov
push
xchg
pushf
and
push
into
xor
movsb
hlt
cmp
jno
sbb
dec
jmp
insl
div
dec
clc
jp
or
mov
orl
sub
pop
adc
adc
jmp
repz
mov
mov
cmp
movsb
push
xchg
adc
icebp
lods
xchg
adc
into
jecxz
in
mov
dec
rolb
mov
iret
std
sti
out
and
push
adc
pop
and
sbb
or
add
jle
out
shl
enter
jmp
pcmpeqd
pop
dec
imul
loop
stc
movsb
mov
in
je
xchg
je
lahf
push
imul
cmp
andl
mov
jno
out
push
mov
iret
jns
shl
jnp
dec
in
mov
add
mov
fnstsw
je
mov
rcr
jno,pn
cmp
xchg
pusha
pusha
mov
inc
data16
and
rcr
loopne
mov
mov
scas
sbb
mov
xchg
or
pop
jg
cld
sub
pop
xchg
pop
push
or
push
cmp
mov
pop
add
xchg
subb
mov
movsb
mov
neg
add
pop
cmp
sar
or
xor
loop
mov
lds
ret
rcrb
pop
insb
and
pop
push
sahf
add
sbbb
scas
and
push
js
jno
jne
mov
insl
std
outsl
popf
and
adc
cmc
mov
xor
fisttps
lds
xor
test
cli
sub
jl
add
imul
loope
ljmp
shl
adc
adc
insb
aas
push
push
mov
insl
lock
sbb
and
mov
aas
mov
sbb
and
push
pop
push
sbb
adc
shrl
inc
js
cwtl
mov
push
into
push
and
subl
mov
aad
mov
xchg
push
add
xchg
adcb
leavew
pop
rolb
call
out
and
into
jae
and
in
pop
mov
and
push
sbb
jnp
imul
jae
push
pop
into
in
pop
scas
push
int
lcall
in
adc
inc
mov
or
cld
mov
xor
aaa
push
stc
sub
call
aas
leave
or
ficoml
imul
push
std
notl
sti
rcll
cmp
fidivl
xchg
addr16
add
and
add
out
or
ljmp
icebp
fisubs
pusha
sub
fisubrl
sub
xchg
das
int
jp
ret
into
or
add
jns
jne
subb
cmc
repnz
mov
fidivl
dec
insl
sub
sub
lcall
stc
test
or
pop
cmp
push
adc
fmulp
mov
arpl
cmp
jnp
pop
xchg
sbb
push
mov
sbb
mov
or
shll
xlat
ds
loop
pop
xor
ficoml
aaa
pushf
sbb
je
cmpsb
dec
int
ficoml
movsb
inc
sub
sahf
sub
ret
arpl
sbb
adc
movsb
mov
sub
mov
sbb
lods
sub
mov
int
in
jg
stos
and
jmp
iret
cmp
mov
aas
inc
in
push
lcall
jle
xor
push
fcompl
push
lret
dec
int3
in
pop
divl
inc
test
or
mov
push
cmp
test
pop
repz
mov
das
jnp
inc
xchg
cwtl
cmp
push
push
lret
fidivs
test
test
ja
insl
scas
xchg
insl
mov
lds
rcrl
push
fwait
xchg
xchg
mov
imul
lahf
sbb
movsb
pop
out
jmp
pop
xchg
pop
inc
stos
into
lret
pop
cmp
mov
int
cs
adcl
adc
orl
out
imul
xchg
stos
inc
test
mov
sbb
jle
inc
shr
pop
sub
sub
adc
sbb
push
push
hlt
mov
add
jbe
jmp
jne
cmc
inc
cmp
popf
or
es
sbb
in
pop
inc
mov
cltd
pop
mov
loop
aaa
scas
mov
daa
insb
mov
ret
jmp
jno
outsb
or
gs
subb
scas
lds
fwait
sti
outsl
dec
mov
in
ja
rcrl
adc
inc
out
out
fsub
jl
lods
js
fildll
or
mov
mov
fnstsw
sbb
mov
mov
pop
cs
jmp
das
push
jg
aas
sahf
ds
cmp
xchg
dec
stc
je
test
test
add
mov
jle
sbb
cld
ljmp
xchg
adc
rorl
mov
test
mov
add
pop
mov
out
mov
shl
sbb
test
shll
lock
iret
es
jbe
out
adc
or
pop
mov
rcll
sub
dec
xor
jb
out
dec
les
incl
mov
cli
jb
pop
lret
xchg
cmpsl
xchg
mov
add
into
jg
xchg
push
inc
stos
jnp
in
cli
pop
loop
mov
sbb
xchg
sbb
ds
test
add
jno
aad
test
mov
push
xor
bound
xchg
cli
popf
sbb
mov
mov
push
and
add
sbb
ror
inc
add
push
jno
xor
xor
sarl
repnz
mov
cli
pop
adc
push
popf
mov
xchg
jbe
push
push
jecxz
int3
fmulp
mov
das
pop
mov
mov
jg
cmp
add
stos
xor
sub
imul
arpl
data16
ret
fldlg2
xchg
xor
sbb
rorb
clc
jae
arpl
mov
imul
adc
pop
lods
push
xor
mov
pushl
arpl
ficompl
sub
mov
cmp
fwait
lods
nop
inc
inc
mov
ret
ss
incb
mov
lret
push
popf
push
roll
sbb
cmp
cs
push
lcall
or
fldenv
inc
lods
pop
inc
cld
fwait
jae
xlat
jns
or
pop
ret
mov
sub
stos
jmp
fisubl
mov
es
cmpsl
xor
lds
in
adc
inc
scas
test
xor
mov
daa
mov
dec
pop
xchg
or
insb
inc
cmp
rol
pop
adc
pop
lahf
xor
insb
fldl
cltd
jbe
push
xchg
fsubrl
add
test
push
pop
jp
mov
jb
add
push
lret
call
cwtl
enter
in
jns
push
cltd
mov
and
cs
and
push
stc
leave
imul
fbstp
mov
add
jg
ja
xchg
add
mov
xor
lods
inc
jg
add
mov
fmuls
mov
mov
sbb
adc
ss
in
scas
scas
sub
or
repz
movsl
mov
fsubrl
xchg
cwtl
call
xlat
out
and
pop
stos
dec
lock
mov
lret
mov
movsl
push
and
aas
divl
lret
stos
aas
fnstcw
fwait
cmc
jle
sbb
pop
jo
ret
sarb
mov
dec
sti
lahf
pushf
and
stos
pop
outsb
or
pop
mov
jns
fsubrl
xchg
mov
mov
mov
dec
mov
fstpt
mov
loop
mov
adc
scas
xchg
jnp
negb
daa
mov
mov
pop
ret
pop
xchg
ss
jl
stc
ret
pop
mov
out
inc
nop
mov
imul
cmp
fimuls
xchg
nop
iret
inc
hlt
xchg
repnz
dec
add
jle
jmp
cmc
push
pop
and
add
sub
jo
int3
in
adc
jb
stos
push
and
pop
xchg
lcall
lds
dec
dec
mov
in
lock
in
js
test
out
cli
imulb
dec
xchg
outsl
jns
dec
or
xchg
scas
inc
imul
jne
cmp
test
loopne
stc
jle
aaa
stos
xchg
pop
xchg
adc
xchg
mov
lahf
enter
mov
jp
rclb
testl
jb
gs
mov
cwtl
pop
lods
cmp
pop
clc
outsb
jmp
jg
jle
lret
push
adc
sbb
icebp
inc
divl
fs
cmpsl
mov
or
ljmp
subl
push
mov
cmpsl
mov
out
push
lahf
jp
push
pop
sbb
outsl
pop
loopne
inc
lcall
ret
adc
cld
or
leave
xchg
and
jns
mov
jecxz
jae
sub
inc
ret
mov
inc
adc
fmul
sub
pop
pusha
lret
hlt
jae
mov
adc
loope
jmp
rcr
inc
sub
lods
xor
fistl
repz
pop
scas
inc
dec
aam
lods
xchg
cld
cmp
mov
fdiv
cmp
jg
pop
into
push
and
jmp
imul
fs
or
inc
lds
xchg
jmp
push
mov
xchg
xchg
lret
jnp
mov
cmp
lods
xchg
ljmp
hlt
cmpsl
aas
icebp
bnd
push
add
sub
mov
dec
rorl
push
sbb
cmpsl
push
adc
jecxz
movsl
lret
test
into
iret
xor
xor
fnstcw
mov
sub
mov
xor
mov
xchg
cltd
or
push
icebp
pop
pop
arpl
dec
out
push
jmp
pop
push
mov
test
add
out
push
lock
mov
repz
int3
mov
fisttpll
pop
xchg
fs
mov
lret
pop
sub
or
and
rol
and
and
fcmovb
out
sub
adc
aaa
cmc
pop
cmp
fildl
out
repz
jl
ret
fwait
jo
imul
sbb
sti
push
add
mov
add
stc
test
imull
push
sbb
addr16
out
jb
xchg
mov
push
pandn
add
xchg
pop
fists
and
sti
jg
in
bound
out
stos
movsb
js
mov
mov
sub
mov
pusha
pushf
int
jle
imul
fdivs
pop
dec
sbbl
addl
xchg
pop
lea
cmp
adc
xchg
lods
adc
sbb
sti
mov
pop
leave
les
fs
iret
add
xchg
das
or
jmp
lock
adc
dec
dec
cmpl
push
push
lock
mov
loopne
mov
jo
sbb
and
pop
popf
pop
jno
jmp
rorl
or
adc
push
inc
aam
loope
cmpsl
icebp
sbb
xchg
sbb
lock
or
push
std
clc
dec
arpl
hlt
loop
xchg
nop
xor
enter
outsl
fsubrl
pop
jne
fidivrl
xchg
push
data16
push
cmpsb
scas
xor
mov
lahf
jle
push
aad
xchg
je
xchg
clc
add
xor
in
call
cli
lret
adc
inc
mov
into
jae
mov
xchg
adc
pop
divl
mov
and
incl
mov
jne
jp
mov
mov
xor
inc
lods
cmp
jmp
sub
int3
mov
iret
fldenv
mov
int
lods
jb
adc
loope
mov
pop
push
test
pop
outsb
mov
scas
or
push
mov
xlat
pushf
mov
push
sbb
xor
push
aaa
cmp
sbb
push
repnz
pusha
mov
and
adc
adc
and
cs
fwait
out
es
push
jp
xchg
push
dec
dec
repnz
data16
or
fsubrl
cmpsb
fcompl
jb
stc
in
enter
enter
ljmp
mov
lret
xchg
test
dec
cmc
ds
popa
cmpb
xlat
xor
int3
push
pop
push
mov
in
fucomp
and
xor
dec
inc
es
jmp
movsb
sbb
or
lahf
mov
inc
mov
repz
mov
lds
xor
cmpsb
fdivs
add
pop
mov
call
pop
mov
repz
iret
pop
mov
ds
add
adc
aas
lods
es
cmpsb
je
call
loope
jb
out
enter
addr16
aad
xchg
sub
mov
push
imul
or
dec
pop
les
pop
fistpll
push
int
nop
sbb
jnp
or
adcl
inc
or
mov
mov
cmc
push
mov
pop
mov
dec
test
mov
imulb
pop
mov
lret
dec
mov
rclb
rcrl
inc
mov
jl
les
addr16
fidivs
or
cmp
jmp
mov
imul
bound
pop
mov
mov
out
dec
sbb
movsl
or
cmp
je
stc
pop
pop
fs
sbb
leave
fcoms
xchg
dec
xchg
pushl
add
mov
ret
dec
aad
pop
dec
dec
loopne
xor
adc
push
outsl
mov
movsb
add
roll
aaa
into
and
inc
inc
mov
mov
push
xchg
ficoml
jge
fwait
sub
pushf
inc
and
pop
cmp
mov
nop
fisttps
push
cs
mov
jecxz
sub
xchg
pop
adc
loope
hlt
mov
es
mov
dec
xchg
enter
ret
sub
mov
andb
repnz
fiaddl
pop
jnp
movsl
or
mov
loop
and
cmp
cmp
mov
inc
cmp
add
dec
pop
popf
inc
jg
movsb
rolb
jne
test
insl
mov
fidivl
pop
adc
lods
addr16
fbstp
pop
push
xchg
ss
pushf
add
fwait
mov
data16
in
push
inc
xor
cli
xchg
insb
mov
mov
or
out
das
xor
cmp
pop
and
dec
or
adc
pop
adc
jno
push
push
cmpsb
cld
jae
adc
push
test
lret
mov
out
xor
jnp
loop
xor
cmp
sub
popa
mov
and
sub
pop
stc
pop
sahf
out
pop
repnz
xchg
cmc
test
out
cltd
lods
xlat
shlb
pop
mov
pop
adc
inc
and
and
sbb
jns
pushf
test
push
mov
rcrb
imul
push
xchg
loop
jmp
data16
and
jb
mov
mov
out
lcall
fiaddl
mov
jno
scas
push
stos
mov
pop
test
adc
xchg
adc
repz
bound
in
popa
jne
xor
lcall
out
pop
add
or
in
je
fiadds
mov
je
add
add
ss
and
sbb
adc
xchg
ljmp
or
call
dec
or
fbld
mov
pop
mov
ljmp
dec
aaa
mov
push
sarb
push
lcall
insb
adc
cmp
xchg
pop
mov
pop
ss
mov
and
mov
imul
jp
jge
fsubrs
mov
fldln2
mov
stc
loopne
jbe
cmp
loope
push
maxps
int
sub
ret
inc
dec
inc
adc
cmp
pop
add
daa
adc
js
pop
mov
scas
cmc
mov
fildl
cs
pop
mov
push
mov
gs
mov
lea
mov
gs
push
push
add
jmp
pop
shl
clc
inc
jae
daa
aad
jl
push
push
jne
pop
mov
ficompl
jno
jns
push
adc
pop
ja
test
jecxz
out
icebp
gs
addr16
sub
mov
mov
stc
or
stos
fisttpl
and
mov
xor
fwait
xlat
mov
ss
es
or
jmp
add
enter
pop
psubusb
fstl
loopne
mov
push
cmpl
div
inc
ljmp
push
sbb
xchg
xor
hlt
shr
dec
push
sub
arpl
dec
pop
cmp
and
inc
dec
cmp
mov
sbb
sub
adc
mov
jnp
loope
aam
dec
in
add
inc
lods
test
call
cmp
out
retw
mov
inc
cli
cmp
sahf
add
aas
adc
pop
imul
cltd
aam
pushf
sbb
scas
cmpsb
daa
lock
mov
push
mov
jns
dec
lods
lock
mov
sbb
fmuls
and
pusha
fiadds
dec
pop
loop
shlb
dec
stc
dec
mov
adc
daa
movsb
xchg
cmp
jmp
repnz
loope
mov
cs
outsb
pushf
jb
inc
lret
dec
lret
fldl2e
mov
cwtl
bound
hlt
je
sub
xchg
inc
sub
scas
pop
jo
sbb
xor
gs
bnd
mov
or
dec
dec
cwtl
pop
jnp
xchg
icebp
jmp
aad
jne
push
out
sarb
sbb
ret
push
pusha
repz
pop
mov
notl
cld
in
cwtl
push
add
sbb
incl
and
int3
call
or
xchg
push
and
cmpsl
mov
fdivr
mov
cli
sub
popf
filds
push
das
fcomps
mov
mov
shrl
negb
inc
int
lods
cmp
jne
mov
jg
scas
adc
stos
out
mov
mov
sti
cmp
inc
insl
mov
jg
pop
scas
adc
inc
shll
or
loop
nop
and
mov
rol
jbe
inc
stos
adc
mov
imul
mov
ss
cmp
andps
sbb
fucom
bound
arpl
mov
mov
mov
xor
rcrb
repnz
jb
pop
sub
pusha
imul
in
inc
push
adc
shlb
or
stc
hlt
idivl
repnz
dec
iret
sbb
popl
in
lret
fcmovnu
xor
daa
inc
pusha
test
pop
jnp
push
aam
lcall
fsts
jb
fmulp
pop
cli
jg
into
mov
adc
dec
push
gs
mov
repz
xor
incl
out
pop
xchg
scas
pop
pop
call
jge
sbb
loop
bound
outsb
mov
test
push
pop
xchg
mov
or
pop
dec
sub
mov
out
push
cmp
cmp
push
mov
jae,pn
nop
push
out
cmp
xchg
popa
leave
movl
mov
mov
adcb
das
repnz
std
inc
popf
ja
dec
rclb
fstl
fcmovnb
fisttpll
and
movsl
aaa
mov
dec
lock
lret
push
testb
push
cltd
test
inc
jbe
xchg
add
sub
mov
daa
and
push
and
sub
xor
rorb
das
fisubrl
jne
sbb
sbb
mov
ljmp
lcall
pop
rorb
sarl
roll
pop
enter
cwtl
lret
jb
rclb
jo
pushw
push
lahf
xor
push
and
orl
scas
dec
pop
test
ret
push
xchg
xchg
mov
pusha
jg
adc
sbbl
pop
xchg
jmp
sbb
cmc
loope
in
stos
icebp
daa
xor
cmp
inc
roll
hlt
test
scas
xor
aas
stos
jo,pn
roll
loop
pusha
xchg
adc
icebp
dec
ljmp
mov
lock
leave
mov
jmp
aas
pop
pushl
or
testl
fwait
or
mov
sub
cmpsb
pusha
mov
sbb
push
stos
push
adc
in
je
movsb
inc
decl
dec
lods
cmpb
jns
jl
xchg
das
push
in
roll
cld
and
shrb
dec
sti
adc
in
lret
push
sarb
sarb
xlat
push
hlt
jae
push
xchg
loopne
les
xlat
add
rcrl
mov
adc
push
aaa
nop
or
adc
dec
mov
lret
and
xchg
mov
loopne
addb
ljmp
xchg
dec
test
adcb
xchg
mov
subl
mov
pop
in
mov
and
jae
and
mov
pop
sub
cmp
xchg
sbb
das
ja
pop
jbe
hlt
or
ja
xor
iret
xlat
sub
jnp
pop
fnstsw
and
lahf
inc
hlt
lods
loopne
push
imul
sbb
stos
pop
pop
mov
xchg
lock
repnz
into
push
sub
jns
cmp
sub
clc
mov
mov
mov
add
jle
mov
pop
aam
xchg
insl
inc
or
and
icebp
and
cmc
mov
mov
inc
inc
adc
mov
inc
or
in
ret
push
rcl
fistps
cmp
add
jmp
bound
aaa
add
std
js
inc
fwait
enter
out
addb
inc
data16
stos
pop
mov
test
popf
adc
stos
fucomip
scas
jmp
sub
lock
xchg
xchg
adc
sub
arpl
push
aaa
adc
sub
mov
faddl
scas
sbb
popa
pop
adc
mov
add
lahf
jle
jb
push
sub
jb
mov
adc
jno
cmp
vpxor
lahf
dec
sub
or
in
xchg
push
lcall
jo
sbb
iret
sbb
fcmovnb
bound
and
dec
int
fstp
jnp
mov
cmpsb
fbld
lret
or
jl
or
cmp
push
cltd
mov
fcoml
cmp
out
dec
sbb
jecxz
pop
mov
push
stos
add
cmp
xchg
stc
lcall
push
mov
fidivl
adc
hlt
and
jle
loope
sbb
sub
lcall
xchg
outsl
xor
lock
loop
cmp
mov
dec
cld
lods
aas
sub
clc
push
xchg
xchg
pop
test
stos
test
shll
inc
mov
sbb
xchg
outsl
inc
jae
fadd
mov
pusha
sub
addr16
push
adc
aad
push
int
es
inc
pop
insl
jg
push
je
fsubrl
sub
lds
out
nop
lret
fsubl
mov
inc
pop
mov
stos
in
call
shlb
adc
jl
hlt
or
inc
mov
adc
xchg
fmuls
imul
ret
pmulhuw
mov
pop
pop
movl
add
mov
jo
lock
fidivs
hlt
popf
cs
or
shll
or
xchg
and
or
xchg
jae
mov
lret
xchg
data16
push
loop
arpl
insb
dec
dec
fs
test
insb
cmp
jb
push
fiadds
xchg
gs
fldl
or
mov
xlat
dec
pop
add
cltd
arpl
push
in
scas
or
or
add
push
pop
push
jbe
ljmp
gs
lods
mov
fisttpll
push
inc
xchg
dec
lahf
xor
loope
push
imul
and
cmpsb
das
mov
rcll
push
outsb
push
push
jno
sarl
lods
call
mov
dec
mov
cmp
mov
adc
fidivrs
adc
adc
test
arpl
inc
mov
inc
hlt
out
data16
imul
mov
mov
cmp
hlt
mov
cltd
add
pop
inc
clc
xchg
mov
xchg
lods
mov
pop
sahf
mov
xor
push
scas
push
test
imul
ds
sbb
fwait
jp
jmp
and
dec
and
xchg
aam
imul
jle
aam
mov
and
and
clc
dec
test
test
jbe
jae
cmc
adc
dec
daa
mov
xorl
push
orb
dec
adc
push
imull
in
dec
fcmovbe
imul
frstor
push
dec
fs
xchg
pop
rcrb
sub
pop
push
push
ret
add
in
lods
imul
push
jmp
inc
fidivl
inc
cli
ret
mov
pop
imul
shll
test
repz
movsb
lahf
fsub
jae
pushf
push
push
int3
int3
jge
push
rol
fidivl
cli
mov
cli
pop
stos
das
jnp
push
inc
adcb
jecxz
dec
add
arpl
xchg
inc
xor
outsb
std
inc
das
lods
pop
into
jns
lret
sti
jge
sbb
dec
pop
dec
or
js
aaa
ss
call
sbb
lret
ret
fstp
cmp
jl
lds
push
les
lret
jno
pushf
es
shrb
call
jne
xor
xchg
fsubs
nop
sbb
xor
ds
mov
inc
push
mov
xor
mov
pop
aad
mov
push
push
ja
cld
icebp
test
push
adc
jnp
out
rcrl
aas
loopne
outsl
pop
or
ss
cmpsl
xor
and
sbb
in
pop
push
xchg
mov
or
pop
andb
lds
inc
mov
inc
sbb
adc
pushf
pop
jmp
jno
test
imul
insl
int3
test
jmp
push
inc
std
fwait
int3
inc
dec
dec
int
dec
mov
push
nop
pop
arpl
push
mov
leave
push
popf
xchg
push
cld
xchg
mov
test
loopne
jl
loop
mov
xorb
lds
pop
or
adc
jmp
dec
rorb
push
loopne
flds
cmp
enter
sub
ds
mov
push
cmp
loop
mov
xor
mov
mov
adcl
imul
and
xchg
xchg
sar
mov
adc
dec
cmp
cmpsl
pop
shrb
xchg
dec
dec
cltd
daa
outsl
out
sub
shl
mov
icebp
fadds
outsb
and
shlb
push
ljmp
xor
lahf
jmp
ja
ljmp
arpl
movsl
insl
push
xchg
sbb
fstpt
pop
pop
xchg
repz
inc
xor
movsb
push
inc
jae
in
push
push
mov
add
add
jae
clc
xchg
adc
das
test
or
pop
js
sub
pop
dec
test
push
shrb
lods
xchg
inc
cwtl
xor
ss
sbb
jp
repnz
cmp
pop
int3
aam
test
jae
and
adc
xchg
les
lock
cltd
cmc
cmp
jnp
jg
mov
xor
xchg
dec
aad
roll
data16
dec
dec
pop
or
addb
dec
lods
sbb
adc
add
dec
or
xchg
mov
enter
es
sub
push
cmp
mov
mov
and
pusha
jecxz
jmp
sahf
pop
fs
xchg
fists
dec
lcall
data16
aam
add
pop
les
adc
mov
mov
mov
sub
lcall
mov
pop
out
daa
push
in
lret
jle
pop
data16
mov
loope
mov
push
rol
push
inc
in
repz
enter
aad
pop
and
dec
inc
and
jne
or
orl
je
mov
mov
aaa
xor
fcoms
or
pop
stc
cmp
cmp
xchg
mov
nop
add
hlt
mov
mov
sahf
test
cs
adc
or
lahf
movsb
cmp
adc
adc
dec
sub
dec
inc
push
add
or
dec
push
in
inc
out
jecxz
scas
jge
aas
cmp
cmp
pop
addr16
mov
xchg
outsl
jno
mov
xlat
clc
out
sbb
fidivrs
sbb
jle
dec
popf
outsl
mov
adc
jp
hlt
or
pop
sub
fldt
xor
jae
or
es
pop
icebp
pop
stos
fnstcw
push
xchg
fisttpl
lahf
out
sub
iret
in
lods
mov
mov
stos
jae
mov
aam
cmc
sub
mov
icebp
aam
dec
jp
jle
mov
stos
sub
cmp
pop
cmc
aaa
ljmp
mov
hlt
mov
out
scas
sbb
js
cmpsl
mov
adc
out
ret
mov
mov
push
andb
add
xchg
or
pop
mov
fimuls
fs
adc
scas
movsl
pop
add
cmp
test
push
loop
jae
xor
loopne
sub
or
popf
mov
movsl
loop
pop
cld
mov
gs
push
pop
jmp
stc
mov
jle
shll
pop
mov
push
popf
popf
jge
mov
fdivr
inc
adcl
xchg
adc
jmp
sbb
jecxz
pop
dec
xchg
jle
push
in
push
push
adc
rcll
movsl
repz
aad
push
mov
inc
sub
cmp
std
mov
addr16
sub
nop
sbb
push
test
les
sub
out
sub
das
pop
push
das
lds
push
add
in
sbb
movsl
dec
pop
jb
and
lods
add
push
sahf
lock
xor
movsl
inc
lret
je
andb
scas
enter
lods
sub
mov
dec
divb
cli
movsb
stc
push
inc
arpl
jb
pop
mov
inc
out
xorb
or
xchg
xor
dec
push
dec
inc
pop
pop
mov
mov
push
test
sahf
loop
adc
mov
pusha
jmp
ret
sbb
inc
clc
pop
fwait
xor
shll
jp
insl
push
int3
lahf
into
daa
in
jbe
in
movsb
lods
lock
mov
dec
dec
js
lods
cmpb
xlat
push
mov
jmp
lea
stc
push
adc
jge
jnp
cmc
lods
jecxz
imul
repz
incl
sbb
icebp
or
aam
pushf
cmpsl
pop
jge
fsubrs
shrb
jg
icebp
fcmovnb
sbb
or
xchg
or
sub
sub
and
mov
dec
dec
mov
cmp
nop
jmp
mov
sub
pop
loop
dec
inc
les
lock
repnz
aam
std
mov
pop
cmp
sbbb
inc
data16
cmp
jg
adc
sub
adc
or
ret
into
push
xchg
or
push
sbb
push
jge
sahf
cmp
xchg
lods
int
jbe
pop
sbb
call
in
adc
or
mov
mov
mov
popa
xchg
xlat
mov
cmp
cmp
dec
cltd
fdiv
in
aaa
inc
mov
pop
inc
sahf
lock
lock
lret
xchg
sub
into
arpl
adc
xchg
xchg
es
loopne
cmp
sub
loopne
and
mov
jns
sbb
or
rcl
xlat
or
add
in
mov
call
mov
aaa
fstpt
xchg
stc
out
xlat
xchg
fsubs
faddl
inc
mov
fucomi
js
cmc
and
das
sbb
or
movsl
fadd
xor
popf
sub
loope
and
sub
sub
xchg
movsl
adc
add
mov
leave
jp
subb
insl
ror
ret
xchg
pop
aad
sahf
xchg
cli
jge
dec
stc
test
and
scas
aaa
jle
xchg
into
push
insl
jecxz
xchg
and
or
mov
out
mov
inc
or
mov
clc
adc
daa
cs
xor
pop
aam
sbb
popf
and
push
lods
stc
push
inc
and
mov
jno
sub
mulb
sub
push
not
orb
je
int
lcall
lahf
sti
mov
add
cmc
mov
adc
popa
adc
aam
inc
call
movsb
les
iret
inc
faddl
mov
jp
ret
inc
xchg
push
shlb
xchg
jle
inc
notl
dec
jne
or
cltd
add
lds
call
adc
and
in
inc
push
popf
push
mov
cmp
sahf
jae
adc
jmp
mov
mov
push
add
repnz
clc
push
lret
das
dec
int3
xor
dec
ljmp
stos
outsl
pop
cmp
push
loop
pop
mov
adc
mov
or
adc
lcall
pop
or
xlat
lahf
lret
in
xchg
pop
dec
shl
dec
push
shll
xor
mov
les
inc
add
pop
jmp
and
dec
adc
cmp
cld
lods
jmp
loope
or
mov
std
push
ja
in
adc
push
xrelease
mov
cmc
push
popf
sub
notl
sub
fidivl
push
test
push
outsb
shr
push
xchg
sub
sbb
and
icebp
add
sbb
and
xchg
hlt
mov
jb
sub
dec
ret
mov
mov
cmp
cmc
pop
push
dec
fadd
dec
scas
xchg
lock
inc
xorl
xchg
mov
pusha
iret
mov
jg
ds
out
mov
decl
pop
jno
sbb
jg
or
xchg
cmp
mov
and
jl
outsb
lock
mov
es
inc
xorb
sahf
mov
icebp
clc
push
xor
pop
push
cmpb
jmp
dec
sub
inc
mov
loop
mov
imul
out
and
pop
in
push
dec
data16
mov
jmp
ljmp
jns
add
cmp
addr16
rorb
dec
pop
insl
in
and
cmpsb
outsl
es
out
xchg
stos
ss
cs
ja
es
mov
dec
cld
sub
out
imul
push
fldt
daa
or
dec
push
sub
test
imul
xor
mov
cmpsl
adc
test
jnp
pusha
lret
push
repnz
lret
or
pop
dec
push
push
mov
daa
mov
xor
add
jmp
push
sti
arpl
pop
imul
mov
jecxz
xchg
insl
mov
popa
add
movsb
loope
das
loope
push
fdivrl
pop
xchg
mov
inc
pop
in
adc
mov
cmp
in
add
or
dec
pop
jo
inc
xor
or
sarb
push
cwtl
push
movlhps
rcrl
addr16
clc
into
iret
jp
into
xor
andps
pop
fildll
loope
dec
addl
lea
mov
rorb
mov
xchg
cmc
xchg
in
into
push
xchg
fisubs
cs
mov
jne
xor
jle
pop
adc
pop
mov
mov
dec
pop
push
sub
fabs
xor
dec
ss
pop
adc
push
lods
sub
aas
in
sbb
ja
shll
pop
pop
sub
test
mov
fwait
jp
push
rcl
adc
hlt
xchg
int3
jno
mov
adc
mov
push
or
imul
push
stc
insb
pusha
mov
add
fsubrl
mov
cli
pop
push
mov
lcall
mov
jns
outsb
adcl
jge
add
arpl
subb
hlt
cs
sbb
aaa
xor
aam
clc
ret
push
gs
jne
xor
fisttpl
dec
lea
js
mov
push
inc
test
int
int3
in
sub
movsb
movsl
sub
cmp
push
pusha
and
sbb
aas
js
aas
in
fsts
jp
sarb
clc
sub
cmc
je
push
ss
fcomip
arpl
je
sub
popf
fsts
mov
pop
iret
pcmpgtb
dec
movsl
mov
jp
flds
jmp
add
es
data16
es
insl
imul
mov
sub
mov
arpl
outsl
cmpsb
sbbl
in
fldl
sub
lahf
sbb
push
dec
push
inc
cmp
or
sub
pop
sti
jo
ficoml
popf
ja
xchg
int3
cltd
xlat
mov
xor
loope
ja
sub
jns
and
dec
daa
xchg
pop
xlat
cmpsb
adc
adc
sahf
das
pop
mov
inc
addl
push
test
add
jno
hlt
jbe
ret
dec
sub
orl
jecxz
mov
push
pop
cmp
xlat
test
dec
or
inc
cmc
dec
xchg
sbb
int
iret
mov
inc
jecxz
push
add
enter
and
mov
xor
jmp
jg
loop
push
push
cmp
jl
push
insl
sub
frstor
mov
pop
dec
imulb
arpl
jno
cmp
loope
xchg
mov
mov
xor
test
sbb
mov
pop
jbe,pt
push
and
inc
xchg
lret
or
lds
dec
or
xor
push
jecxz
pop
mov
mov
xor
scas
fiaddl
aam
add
stc
mov
jge
cmpsb
shll
mov
xor
or
in
mov
pop
xchg
ss
data16
push
add
ss
test
test
push
mov
mov
add
inc
sub
dec
outsb
cltd
cmp
pop
sbb
dec
test
test
push
adc
jecxz
push
pop
mov
insl
arpl
sub
imul
mov
ss
ljmp
jecxz
push
daa
push
pop
dec
divb
cmp
and
aad
movsb
idivl
mov
sub
xor
mov
notl
xor
xchg
adc
mov
dec
dec
aad
pop
push
dec
rclb
mov
test
dec
shrl
mov
jle
inc
int3
mov
inc
or
and
dec
mov
test
cmpsb
xchg
fcmovb
cmpsb
pop
mov
push
int
cmp
mov
std
pop
xor
leave
bound
cmpsl
into
pop
fists
leave
cmpsl
push
sbb
or
mov
in
std
popa
cmp
mov
sahf
call
dec
iret
icebp
lret
mov
stos
test
cmpsb
data16
push
or
mov
or
cli
mov
add
adc
fisttps
mov
cmp
jmp
adc
test
dec
cmpsb
sub
lock
sbb
jns
or
xor
cli
xchg
out
outsb
pop
push
push
scas
lock
xchg
clts
push
pop
fnsave
mov
int3
cmp
mov
cmp
mov
ja
adc
pop
cld
neg
sub
les
mov
lea
fiadds
mov
add
pop
clc
jnp
xchg
push
mov
mov
lea
sbb
popf
test
insl
push
out
xchg
cmp
inc
daa
or
mov
int
mov
and
or
pop
pop
mov
fdivr
out
or
mov
push
jno
jbe
dec
lahf
repz
mov
cmp
jbe
fidivrs
adc
and
lods
xlat
neg
fldenv
es
xor
mov
or
int3
iret
mov
repnz
cmp
xor
test
inc
mov
test
mov
push
lahf
cmp
cmc
pop
and
add
adc
lret
push
test
fsubrl
sub
xlat
push
filds
mov
add
mov
int3
add
cwtl
aas
jo
shll
adc
inc
pop
jns
add
cmpsb
dec
ss
mov
dec
add
push
push
cmpsl
or
adc
into
add
fadd
sub
inc
jo
out
movsb
pop
inc
dec
mov
ljmp
jne
jns
test
ss
shrl
loop
mov
popf
cltd
add
adc
scas
dec
lcall
pop
mov
data16
ljmp
dec
xchg
push
jno
int
dec
push
pop
pop
imul
pop
lret
pop
push
aas
popa
sub
and
ret
xchg
leave
dec
pop
lods
imul
add
leave
cmp
mov
adc
ret
sub
mov
sti
xor
fsubrs
ss
les
fldl
jl
out
mov
adcl
push
inc
jg
shlb
inc
lods
lahf
inc
xchg
cmc
iret
inc
mov
dec
imul
scas
push
add
insb
adc
cld
jl
dec
out
xchg
sbb
push
or
ljmp
sub
cmp
cltd
mov
or
push
inc
mov
xchg
sbb
xchg
daa
roll
sahf
pop
jb
iret
lods
jecxz
pop
shrb
xor
xchg
mov
addr16
out
push
lock
sbb
out
jmp
push
outsl
cmp
cli
enter
fs
popa
sub
icebp
cmp
rcrl
mov
push
jle
rorb
out
enter
pop
jno
int
inc
daa
mov
repz
dec
out
mov
sub
cmovb
lods
sbb
mov
add
nop
bound
test
cli
shrl
sarl
div
and
ja
ss
sub
and
js
pop
ljmp
dec
xlat
sti
push
dec
xchg
mov
inc
hlt
jo
jp
add
adc
loope
pop
sub
hlt
xchg
pop
cmp
movsl
icebp
mov
repz
lcall
adc
mov
jmp
adc
leave
push
loop
lahf
push
repnz
mov
add
mov
rorb
cld
es
mov
cltd
mov
pop
jb
dec
out
ret
nop
jmp
add
fisubrs
fs
minps
les
pop
aaa
fdiv
jnp
sub
lock
sbb
jo
jp
jmp
adc
rcrl
das
ficoml
jo
inc
mov
daa
ret
js
mov
iret
mov
gs
jbe
mov
jl
sub
adc
sbb
xchg
js
dec
pop
add
mov
add
dec
js
sub
rclb
cld
dec
inc
mov
sti
jg
mov
repz
cmpl
pop
mov
adc
adc
dec
pushf
push
lret
idivb
push
jae
add
jnp
push
int
ljmp
stos
sub
iret
xchg
xchg
push
inc
out
dec
vmovdqa
inc
cmp
fcomps
scas
dec
cwtl
popf
loope
mov
inc
push
popf
and
fs
push
sbb
push
jb
ret
int3
adc
notb
adc
daa
inc
mov
in
mov
orl
ret
out
mov
sbb
mov
add
pop
sub
xchg
dec
xor
jns
out
loop
nop
sub
push
loopne
loopne
lods
add
xor
jl
xchg
push
ds
fistl
adc
int3
cli
outsl
xchg
or
pusha
outsl
stc
cmc
out
or
or
add
jno
gs
aas
and
lret
pop
xor
adc
or
pop
mov
mov
fadds
add
inc
mov
sub
jp
cmp
or
cmp
imulb
repnz
jg
fbld
popa
mov
fwait
fs
mov
test
dec
movsl
pop
imul
xor
filds
push
jl
add
mov
in
sahf
mov
jle
sbb
push
dec
in
scas
test
mov
mov
popf
jno
fcmovu
incb
test
into
lahf
out
addr16
outsb
sbb
int
loop
sbbl
push
xchg
adc
fldcw
pop
dec
das
fwait
adcb
jb
ljmp
loope
mov
or
daa
dec
lcall
std
imul
push
insb
and
pop
or
adc
mov
mov
dec
insb
xor
xor
mov
xor
out
mov
sbb
lret
sbb
scas
andl
test
push
lock
addr16
cli
xlat
lcall
mov
test
xchg
dec
das
cmp
pop
push
xlat
les
inc
aad
add
fwait
outsl
fisttps
mov
aad
xor
fsubl
jns
cltd
mov
fisubrs
push
insl
push
dec
mov
mov
jne
adc
loope
data16
dec
cmpsl
ficomps
add
dec
dec
xor
test
insl
jo
add
mov
fstp
fwait
in
adcb
lea
jae
mul
daa
dec
iret
mov
jg
push
push
vfnmadd213pd
out
mov
jmp
dec
sarb
shlb
in
imul
lods
les
int3
cmp
xor
sub
iret
movl
inc
rcrl
or
jo
xchg
jle
inc
insb
mov
test
jg
sbb
xor
xor
cmp
mov
data16
inc
sub
cmpsb
sarl
ljmp
mov
cmp
addr16
mov
js
or
leave
mov
cmp
jp
mov
and
ss
sarl
mov
mov
dec
jb
movsl
pop
frstor
jg
add
push
push
dec
sbb
and
jb
fsubp
jle
cmpsb
lcall
jge
cmpsb
loop
lock
xchg
cmp
sbb
xor
cmp
and
fdivl
idivl
out
scas
cmpsl
movsb
notl
sbb
sti
lock
xor
gs
mov
gs
ljmp
dec
insb
mov
scas
int3
mov
add
sti
dec
aas
push
in
push
aas
cmp
pop
dec
mov
notb
roll
xchg
aad
not
and
stc
push
cmp
cmc
xor
cmp
ljmp
fldt
or
mov
dec
inc
sub
insb
dec
cwtl
lds
mov
sbb
mov
gs
pushf
pop
sti
movsl
push
dec
xor
popa
or
xchg
jecxz
leave
icebp
cwtl
into
mov
sbb
cli
sbb
icebp
and
mov
shlb
das
jl
cwtl
test
mov
jno
daa
in
mov
stos
fiaddl
mov
fisubrl
shrb
ret
daa
sbb
cltd
loope
mov
movsb
into
push
push
andl
icebp
repnz
inc
imul
adc
das
int
loop
mov
sub
hlt
insb
inc
inc
lcall
inc
xor
lahf
js
mov
loop
and
iret
sbb
mov
add
cmp
xchg
mov
outsb
lret
faddl
scas
jae
jne
addb
mov
sbb
cltd
cwtl
and
inc
insl
and
jnp
iret
sbb
cwtl
nop
lock
add
jne
add
jno
dec
pushl
mov
int
inc
push
push
mov
test
ljmp
jno
adc
mov
inc
sbb
sti
out
pop
sub
std
add
decb
icebp
or
movsl
mov
xlat
repnz
xor
jb
ds
mul
mov
sub
jo
fdivp
cmp
pushl
lret
mov
pop
lahf
rcrl
lods
in
mov
cwtl
push
cmpsb
out
js
cmp
cli
movsl
decl
in
negl
scas
lahf
ss
lods
in
jle
xor
jae
fbstp
and
xchg
mov
and
mov
lods
sub
ss
inc
pop
push
shlb
inc
fisttps
enter
loop
or
test
sbb
shrb
imul
xchg
inc
jle
sbb
in
ret
mov
pop
jmp
or
insb
insb
hlt
pop
push
in
pusha
inc
loop
cmp
cmp
addl
imulb
or
std
icebp
repz
jp
sub
xlat
rorl
mov
xor
aas
inc
mov
inc
xor
mov
fsubrp
jo
mov
in
sub
mov
adc
adc
inc
inc
addr16
pop
cmp
jb
popa
loopne,pt
xorl
sub
xor
pop
das
jne
push
jge
lods
pop
pop
cmpsl
jle
dec
pusha
add
in
dec
scas
int
sub
push
pop
jmp
scas
mov
rolb
mov
inc
pop
divl
out
rcl
sahf
xor
mov
push
ljmp
pop
jb
jp
int3
dec
cmp
mov
cmp
push
les
xor
rcrl
stc
stos
inc
stos
je
jmp
cmp
aad
shrb
cmpsl
cwtl
fsubrp
scas
xor
add
mov
lahf
bound
fldcw
xchg
push
sti
movb
and
jo
mov
jne
popa
or
hlt
mov
mov
test
or
and
leave
cmp
arpl
sbb
sti
mov
lcall
cltd
aam
add
divl
ds
add
push
mov
xor
jmp
push
fcomp
xor
push
inc
jmp
xor
lret
jg
mov
fwait
jge
sbb
scas
lods
dec
mov
mov
or
in
pop
jp
mov
or
loop
adc
aad
sbb
shll
mov
cmpb
addr16
int
add
xlat
lods
stos
sbb
in
stos
lds
sub
and
lret
and
js
shlb
inc
xchg
inc
push
sahf
movl
mov
or
icebp
je
mov
nop
fidivrl
adc
aam
insl
dec
adc
pop
jp
addr16
mov
das
jae,pt
xor
adc
sub
bound
cmp
xchg
jae
add
movsl
dec
pop
pop
xchg
pop
aaa
clc
and
adc
cmp
hlt
repnz
add
sbb
sub
in
cltd
pop
sub
jge
xchg
jecxz
adc
jo
xchg
test
jg
pop
in
jne
inc
mov
out
xchg
mov
jns
push
dec
aas
loopne
cmc
mov
fdiv
cli
sub
sti
sub
ret
and
push
gs
mov
adc
stos
sub
pushf
push
icebp
mov
xorb
repz
aam
pop
push
loopne
mov
cmpsb
sub
in
bound
cmp
ret
pop
incl
mov
cld
aam
ret
cmpsb
sub
mov
xchg
scas
push
rorb
mulb
pop
cwtl
daa
xor
push
lock
push
lods
pushf
scas
and
insl
adc
cwtl
sahf
pop
jnp
mov
cmpsl
in
nop
push
scas
mov
push
pusha
sub
test
mov
scas
mov
adc
int3
movsb
iret
es
repz
mov
loop
les
jns
jnp
mov
fdivp
out
dec
xchg
ret
das
mov
inc
pop
repnz
sub
lods
sbb
xchg
into
gs
sbb
cmpsb
push
dec
cmp
mov
jae
test
jge
out
mov
mov
xor
bound
and
cmp
loope
sarl
lret
into
inc
cli
hlt
enter
and
idiv
pop
mov
xor
mov
cmc
data16
arpl
notb
jg
jb
mov
repnz
adc
cli
loope
push
mov
decl
push
rorl
dec
daa
out
popf
cltd
inc
out
popf
popa
mov
inc
push
stc
mov
insl
mov
lret
dec
xor
push
inc
std
fs
jb
jns
pop
mov
movsl
sub
cld
loopne
fs
adc
leave
mov
adc
divb
aaa
mov
and
mov
inc
cmp
lock
mov
cld
inc
call
mov
rcll
daa
xor
sub
jl
xchg
and
cmp
js
test
xchg
rcrl
sub
sub
xor
mov
ret
push
pop
or
push
addps
fmuls
pop
inc
or
subb
out
ljmp
data16
mov
pusha
cli
das
stos
push
rclb
or
pop
inc
jnp
cmp
push
jnp
lahf
dec
outsl
imul
xor
inc
pop
scas
cmc
outsl
or
pop
sti
pop
dec
rolb
pop
dec
mov
sbb
movsb
jg
in
cmp
out
xor
subl
sbb
cmp
mov
test
xlat
in
fcompl
and
sbb
outsl
dec
and
xchg
mov
iret
push
xchg
andb
cltd
adc
xor
sbb
push
icebp
int3
pop
adc
xchg
adc
xor
pop
shl
dec
mov
sarl
inc
jp
mov
fld
xchg
pop
sahf
das
das
dec
gs
add
clc
cli
cmpsb
lret
shr
pop
loopne
lods
mov
outsb
out
adc
xchg
cmp
into
in
dec
xchg
mov
clc
int3
xor
adcl
and
nop
jecxz
cmc
cmp
cltd
or
or
dec
add
jo
cmpsb
lcall
cld
mov
pop
scas
add
lea
enter
push
insb
mov
ja
cmpsl
jecxz
jmp
push
into
xor
push
pusha
adc
ja
mov
lea
mov
sbb
outsl
frstor
gs
call
loopne
fs
mov
and
mov
inc
ja
fildl
out
rclb
push
or
mov
das
call
jp
and
lcall
dec
stos
in
imul
push
xchg
rolb
xor
and
pop
cmp
inc
mov
or
in
std
addb
cmc
sbb
xchg
inc
sbb
add
daa
xor
or
push
nop
mov
pop
adc
movsl
xchg
pop
js
leave
adc
out
imul
jns
push
lea
je
jmp
xchg
popa
xor
xchg
popf
pop
iret
lds
jecxz
xchg
icebp
sbb
sub
aas
push
mov
adc
sub
jle
sub
jl
aad
outsl
les
push
push
and
push
iret
push
push
in
sub
movsb
pop
pop
js
inc
rolb
add
ret
xor
cmp
or
or
lret
adc
pop
sbb
aas
jl
dec
aas
addl
data16
mov
fucomip
repz
xchg
or
push
cmp
sbb
jne
pushf
mov
fucomp
test
or
and
push
pop
mov
add
out
or
sub
pop
jecxz
jg
mov
pop
sbb
mov
sbb
lret
rcll
inc
pop
xchg
dec
popf
xor
dec
pop
jmp
fildll
mov
test
popa
and
xchg
mov
popa
aaa
or
arpl
and
dec
jecxz
push
cs
jo
xlat
mov
jo
sub
bound
jb
mov
ss
shrb
cs
and
mov
les
dec
cmp
mov
mov
sti
push
mov
jecxz
insl
repz
sbb
fldl
cmp
jae,pn
scas
ss
ficoms
cmpsb
call
imul
push
push
sbb
sbb
aad
cmp
pop
xchg
cmp
mov
test
std
icebp
out
push
andl
movntps
ja
pop
adc
fwait
jl
fs
mov
mov
adc
iret
int
add
dec
adc
add
into
sub
jbe
xor
xor
gs
aam
pop
add
adc
sahf
mov
clc
add
pop
and
sub
imul
cmp
outsb
sub
and
cmpsb
sbb
or
stos
mov
xchg
pusha
loope
pusha
int
push
and
push
lcall
push
pusha
repz
jle
sub
inc
mov
scas
jnp
push
mov
or
jecxz
cmpsl
xchg
into
mov
mov
mov
clc
dec
or
push
sub
fs
cli
fucomip
jbe
inc
popa
cwtl
repnz
inc
call
movsl
outsb
adc
mov
sbb
fnsave
ja
xlat
jmp
inc
cmp
rcll
dec
out
inc
or
mov
inc
lret
xor
mov
add
sti
shlb
push
gs
out
inc
sarb
stos
dec
in
stc
lock
inc
aas
push
fcmove
int3
pop
pusha
pop
int3
lods
dec
in
jns
mov
out
pushf
pop
mov
lret
ret
sub
icebp
mov
cli
cmp
sub
lcall
pop
out
rcr
jno
sti
imul
mov
loop
out
rcr
andb
xor
out
addb
clc
aam
push
es
int3
xchg
roll
or
and
int
mov
xchg
mov
mov
adc
sub
je
cltd
pop
inc
push
cmp
xor
out
pop
lods
insl
outsw
push
cmp
sub
sar
scas
inc
lret
push
jne
mov
cmp
mov
sbb
lods
cmp
pop
pusha
adc
dec
icebp
mov
inc
mov
pop
mov
lds
push
into
jae
mov
push
div
jecxz
arpl
sahf
mov
or
lahf
fdivrs
fsubs
jp
int3
inc
cltd
std
mov
or
test
inc
pop
cmpsb
nop
lret
sub
loope
jge
aam
ret
mov
pop
imul
movsl
or
adc
stc
cltd
cmp
outsb
sbb
sub
and
mov
dec
or
push
ret
popf
js
push
xor
jbe
or
pop
xchg
xchg
adcl
push
inc
jle
xchg
and
sbb
stc
je
in
mov
nop
stos
inc
mov
mov
dec
aas
psubsw
inc
jo
xchg
or
in
pop
das
push
scas
sub
sbb
add
enter
adc
mov
popf
inc
push
cs
sbb
or
es
aaa
push
setae
push
iret
sahf
movd
and
and
fmul
lret
push
jnp
add
xor
inc
test
xor
lock
jo
call
cmc
adc
mov
mov
cmpsl
and
pop
push
or
jge
push
sbb
pop
mov
hlt
cmpsb
sub
jmp
mov
outsb
pop
fnstcw
mov
inc
inc
jle
jge
repz
pushf
add
mov
dec
fcomip
inc
add
test
sti
popa
test
sub
cmp
cmpsb
push
out
arpl
into
ss
adc
sbb
bound
mov
hlt
pop
or
add
pop
push
sub
insb
dec
rcl
sbb
and
jecxz
shl
flds
inc
stos
imul
cmp
imul
shlb
rcrb
jp
jo
dec
mov
out
fidivrs
jbe
push
clc
dec
hlt
outsl
add
inc
jecxz
sti
sti
adc
mov
pop
andl
cli
xlat
cmp
fs
mov
add
cli
xor
mov
popa
cmp
call
aaa
imul
daa
push
mov
in
adc
mov
mov
adcb
gs
mov
sbb
in
or
iret
es
pop
fildll
mov
add
cs
negl
mov
sub
test
or
popf
sub
scas
arpl
fstpt
test
mov
daa
jae
lret
jae
xchg
pop
mov
mov
cltd
decb
or
dec
int3
or
aam
push
mov
xor
sub
cli
mov
cmp
loope
movsb
lret
arpl
pop
jle
lds
movsl
mov
rorl
xchg
mov
sti
sub
lret
cmp
jg
gs
mov
ja
mov
sbb
mov
mov
lea
adcb
cmp
push
sub
out
enter
es
shr
cmp
xorl
xchg
or
xchg
cmp
scas
rcl
push
push
popf
iret
push
inc
gs
filds
ret
dec
cltd
jae
and
mov
repz
loopne
mov
sub
xchg
jle
jg
ret
aas
pop
std
nop
pop
mov
lss
xchg
sbb
out
mov
jecxz
push
push
mov
insl
icebp
shr
mov
mov
call
mov
sub
mov
sbb
jbe
addl
mov
mov
jge
mov
adc
sub
jo
daa
cmpsl
or
push
jb
pop
test
xlat
fldt
inc
add
aam
or
jecxz
jno
cmp
xor
out
cmp
pop
lret
dec
adc
mov
repz
mov
add
adc
enter
cmp
sub
subb
shrl
push
and
pop
xor
sub
testb
pushf
sbb
push
fistps
sar
int
mov
cmpsl
repnz
in
pop
leave
fnstcw
or
ss
ja
cmc
test
adc
paddw
xchg
in
inc
hlt
bound
out
pop
push
jo
fs
fisttps
push
adc
push
ljmp
pop
in
or
or
adc
rorl
sub
cmp
dec
and
push
gs
adc
and
and
in
jb
out
mov
cmp
xlat
out
flds
lods
push
iret
jle
inc
loopne
jge
test
test
push
push
adc
dec
dec
andl
fisttpll
icebp
les
inc
daa
jo
push
mov
je
inc
mov
pop
hlt
ror
daa
loopne
add
fwait
cmp
and
mov
xor
mov
sbb
xchg
sub
dec
adc
imul
and
es
add
dec
xlat
aam
pop
inc
loop
xor
adc
jge
jne
lahf
cmp
in
scas
aaa
sbb
adc
xor
pop
add
and
jg
pushf
mov
lret
jb
jmp
mov
fldenv
in
mov
or
out
not
in
adc
push
mov
outsl
sub
lcall
lcall
jne
stc
test
divl
lcall
ret
fwait
mov
jae
jno
insl
int3
push
mov
push
inc
or
jmp
mov
xchg
or
int
outsl
std
mov
mov
dec
mov
test
shlb
mov
rcl
ljmp
in
cmpsb
add
xor
and
dec
mov
insb
mov
xor
sbb
xor
jp
pop
jb
jo
add
and
cmp
mov
sbb
and
aad
and
mov
loope
adc
out
push
mov
sub
and
imul
in
lret
rcl
addr16
add
addr16
sarb
and
cs
dec
repnz
scas
mov
add
subb
adc
or
popf
sub
or
jns
daa
xor
mov
out
pop
scas
in
addr16
adc
jmp
out
loope
loop
fistps
hlt
daa
mov
adc
xchg
icebp
les
push
inc
adc
pop
inc
mov
cmp
call
push
or
sahf
pop
sahf
in
rorb
cmp
mov
loope
lods
adc
pop
sub
filds
iret
xor
stos
clc
aaa
add
sub
inc
sub
mov
jne
ja
ds
pop
push
clc
nopl
fldt
and
call
mov
xchg
xor
push
add
jns
test
sub
lea
lock
test
and
jbe
cmp
inc
dec
shrb
cmc
out
push
cmpsl
jo
mov
das
in
xchg
inc
jae
sbb
lds
getsec
js
stos
and
and
lods
mov
cs
repnz
sub
push
xor
jecxz
in
out
xchg
les
mov
lret
mov
pop
jae
lahf
loopne
cmpsl
xchg
cs
and
mov
repz
cmp
mov
cmp
sub
rcll
loope
cmp
testb
dec
inc
pop
in
pop
mov
push
in
add
je
aam
pop
and
jne
add
pop
jl
xchg
test
stos
mov
cli
adc
fnsave
xchg
das
mov
pushf
fwait
stc
sahf
stc
es
and
pop
pop
or
lret
testb
sbb
cltd
shrl
loop
mov
cmp
test
test
jae
loope
lods
icebp
aaa
aaa
push
push
mov
mull
sbb
sub
popf
pop
fidivrl
loop
xchg
pop
stos
out
test
cmp
mov
lods
xor
rcrb
push
mov
and
sti
cld
pop
push
in
add
in
adc
rolb
jne
lods
popa
pop
sub
outsb
or
outsb
ljmp
outsb
test
outsb
clc
push
testl
insl
movsb
iret
in
cmpsl
fcmovnu
push
inc
jge
xor
dec
gs
xchg
add
gs
fstpt
jnp
jno
andb
push
xchg
jmp
sub
cmpb
pop
out
loop
insb
in
inc
pop
out
ds
xchg
std
add
mov
decb
inc
movsb
imul
xchg
and
std
loop
push
fildll
mov
adc
jge
sti
add
xlat
enter
jne
mov
lahf
adc
loop
or
push
push
mov
xchg
adc
sbb
ja
inc
jle
das
out
dec
mov
jb
loop
pop
sbb
mov
xchg
push
inc
ret
dec
jno
pop
sub
push
mov
mov
nop
pop
ss
pop
push
imul
adc
jl,pn
and
cmp
outsl
je
shr
inc
dec
and
mov
xchg
cmp
inc
push
mov
out
add
in
cmp
scas
test
imul
add
dec
repnz
pusha
sar
adc
in
mov
ret
aas
push
and
pop
jmp
adc
cmpsb
out
push
pop
in
cmp
dec
push
jg
bound
sbb
inc
dec
popf
inc
mov
ja
inc
cmc
sbb
or
rcrb
and
outsb
mov
inc
sub
dec
testl
mov
cwtl
mov
jne
and
cli
mov
push
pop
fdecstp
lahf
xchg
sub
jne
repz
sub
ss
pop
je
nop
leave
iret
cltd
dec
cmp
xchg
pop
mov
mov
jne
lcall
pop
pusha
sbb
outsl
and
imul
sub
stc
cltd
mov
out
dec
xchg
fs
add
dec
loope
jae
or
cmp
js
cmpl
subl
xchg
shll
mov
lds
test
icebp
jbe
pop
cltd
add
stc
call
cwtl
movsb
add
out
add
cmc
xor
bound
cmc
xor
out
xchg
jae
test
hlt
insb
xlat
jge
adc
mov
or
gs
inc
mov
or
xchg
mov
lret
in
call
arpl
mov
adc
sar
lret
out
addr16
mov
ja
je
mov
mov
and
lret
mov
add
dec
pop
and
repnz
mov
sub
pop
rep
inc
and
movsl
pop
sbb
getsec
popf
xchg
ret
pusha
daa
hlt
loope
and
imul
movsb
mov
aad
or
push
movntq
out
sub
rolb
dec
cmp
stos
aad
pop
mov
inc
iret
push
dec
frstor
in
xchg
ficoms
push
not
fcmove
ret
push
shl
mov
fbstp
mov
jg
sahf
fwait
orl
or
call
std
fidivrl
jl
cld
f2xm1
sub
push
jg
test
mov
lcall
jne
jb
adc
ret
dec
aad
sbb
fs
jmp
clc
jle
test
in
dec
inc
lods
inc
cmp
xchg
jp
cmp
xor
jbe
mov
pop
adc
jle
es
leave
sub
add
std
pop
mov
into
das
or
mov
mov
lods
jp
cmp
add
xlat
sbbb
int
into
lock
push
jnp
add
cmpsb
jmp
xchg
jge
test
or
inc
mov
mov
into
enter
test
or
sti
gs
aad
push
xchg
pop
adc
pop
or
pop
sbb
scas
push
std
push
fwait
outsb
mov
testl
cmpsb
xlat
jbe
mov
cmpsb
enter
jmp
mov
outsl
add
or
adc
mov
mov
filds
mov
xlat
shll
fcmovne
inc
pushl
sub
jecxz
lock
test
sub
cmp
divl
jmpw
mov
push
test
sub
sbb
pop
and
lods
test
cmp
mov
dec
imul
jb
xor
pusha
inc
fnstsw
cmc
enter
pop
sar
or
inc
stos
lahf
dec
mov
roll
add
ficoml
add
mov
pop
cmp
sbb
jge
sbb
or
cmp
lahf
fimull
aam
pop
mov
and
push
and
daa
mov
lret
mov
lea
sbb
punpckldq
cmp
popf
imul
xlat
jbe
stos
inc
addb
push
out
lds
sbb
mov
push
stos
lahf
and
or
pmullw
and
add
and
dec
sub
stos
cmp
sti
loope
pop
adc
lds
in
mov
int
sub
aaa
out
mov
cwtl
sbb
adc
push
cmp
dec
icebp
stc
sub
jmp
inc
push
xchg
sub
aam
hlt
add
das
adc
inc
mov
stc
cld
sub
mov
mov
cltd
adc
sub
ficomps
stos
ljmp
lock
cmp
ret
xorb
mov
repnz
jle
mov
sub
daa
mov
outsl
aas
sbb
push
push
int
pop
push
sbb
loop
mulb
sub
int
mov
mov
adc
sub
xor
negl
aas
cs
mov
mov
mov
pop
mov
pusha
jo
mov
sub
fnstsw
xchg
inc
cmc
test
pop
xchg
sub
out
pop
pusha
push
xchg
loopne
pushf
pop
lods
daa
mov
adc
bound
adc
in
push
test
adc
fbstp
cli
pop
mov
sub
cmc
lock
scas
push
and
daa
jmp
aam
adc
fisttpl
in
ret
cmp
es
fwait
daa
ret
iret
mov
jmp
mov
pop
adc
mov
mov
adc
mov
adc
iret
xchg
mov
jno
xchg
pop
arpl
sarl
lcall
leave
test
and
lcall
scas
adc
aas
mov
outsb
mov
jo
lods
scas
outsb
addl
xor
imull
or
test
dec
or
push
sahf
mov
adc
bnd
outsb
lds
fwait
movsl
lcall
sbb
jne
cmp
mov
xor
mov
rcrl
xor
icebp
nop
loopne
jbe
outsb
jbe
sub
popf
xor
push
pop
xchg
push
pop
cmc
sub
inc
imul
jno,pt
test
jge
imul
xchg
and
add
lahf
inc
sbb
das
mov
xlat
pop
mov
mov
xchg
lcall
imul
adc
rcl
adc
mov
rol
mov
leave
sahf
lcall
imulb
jno
inc
cs
pop
sti
sbb
leave
push
es
fs
std
rorb
mov
mov
and
divb
fnstcw
lods
ds
xor
fsubs
lods
dec
in
leave
cwtl
inc
sti
mov
sub
andl
sbb
ret
mov
jmp
imul
adc
dec
in
cmp
call
pop
sub
lret
inc
adc
test
jne
jo
es
inc
sbb
mov
in
sbb
aam
inc
fidivrs
cli
and
iret
in
jmp
ljmpw
and
xchg
adc
xor
mov
lds
lahf
push
mov
and
pop
xchg
or
and
ret
push
inc
adc
clc
cwtl
sbb
inc
jl
roll
inc
std
shl
mov
jg
cwtl
jbe
mov
cmp
add
mov
fiadds
inc
cmc
dec
in
adc
sahf
push
cmpsb
outsb
das
cmc
cld
pop
push
adc
dec
addps
daa
int
mov
mov
test
mov
mov
pop
frstor
pop
mov
jne
sbbb
testb
jge
dec
je
mov
and
push
and
stos
scas
repz
mov
xor
fcompl
mov
jp
out
mov
test
mov
in
bound
mov
leave
test
inc
jns
or
in
std
or
adc
mov
pop
push
repz
mov
mov
mov
or
inc
fildll
jnp
push
pusha
push
imul
or
data16
lds
add
jb
out
movsb
lcall
xchg
roll
shl
gs
cmp
inc
lret
pop
icebp
xor
add
cmp
stos
fnstcw
sub
lods
pop
mov
jo
mov
outsl
pusha
jmp
js
pop
test
lahf
lds
dec
xor
jne
cmpsl
or
movaps
add
and
sub
and
iret
dec
pop
sarl
call
mov
xor
add
cmp
mov
es
adc
cmp
jb
cld
adc
pop
ud2
cmc
in
pop
pop
into
fnsave
andl
es
mov
lahf
mov
mov
add
sub
pop
pop
push
aaa
or
scas
jp
arpl
bound
push
cwtl
arpl
xchg
ror
dec
sub
iret
jge
bound
scas
roll
testl
out
sarl
jbe
add
push
dec
cmpl
repz
inc
jo
pop
pop
push
movsl
pop
out
adc
data16
pop
test
cmc
scas
dec
pop
or
mov
loop
or
shl
loop
test
xchg
imul
data16
adc
cltd
in
stos
sub
push
enter
sbb
xchg
xchg
push
mov
inc
mov
and
xchg
lret
mov
mov
repz
fprem
sub
pop
sbb
movsb
or
and
sbb
ds
or
sub
inc
push
mov
pop
mov
adc
mov
rclb
and
nop
arpl
pushf
insb
shll
in
in
mov
mov
sarb
push
mov
mov
dec
enter
inc
call
std
jg
xor
jnp
ds
outsb
mov
push
or
lock
xchg
cmp
into
insl
sub
fwait
ret
jbe
ret
pop
rcrb
xor
mov
mov
lcall
sbb
inc
inc
orl
pop
cmp
nop
xchg
sub
inc
xlat
arpl
js
xor
adc
lretw
add
jae
fstpt
ret
outsb
push
sbb
aas
jp
inc
push
adc
cmp
in
ret
jmp
lods
jp
sahf
test
lcall
xchg
cmpsl
cmpsb
mov
inc
xchg
shll
or
insb
fldenv
mov
xor
cmp
dec
and
pop
fxch
bound
cmp
inc
or
jno
pop
lods
sbb
repz
stc
decb
testb
fsubl
mov
aam
push
sub
jae
out
data16
out
lret
ds
icebp
jbe
loope
xlat
cmp
addr16
out
jmp
dec
jmp
fcmovb
int
add
movsb
mov
mov
shrl
rcr
mov
movsl
inc
jo
sbb
sbb
or
mov
pop
rclb
ret
jbe
mov
mov
xor
shrb
push
call
sbb
cmc
xchg
cmp
aam
xchg
dec
arpl
fstpt
aaa
pusha
or
int
push
lahf
mov
cs
mov
stc
pop
sbb
addr16
js
sub
stos
sbb
les
data16
sti
lret
lods
mov
mov
mov
stos
cmp
das
and
add
xlat
ljmp
push
mov
sub
mov
cmp
mov
inc
scas
insb
rcrl
stc
test
mov
mov
push
xor
lahf
or
out
mull
sbb
aaa
mov
jmp
mov
mov
jbe
lahf
push
pop
mov
push
xor
mov
sbb
ficoml
mov
les
test
add
jmp
xchg
mov
arpl
sub
mov
jb
flds
dec
push
mov
loopne
jno
mov
jbe
jecxz
inc
fsubl
fcmovnu
add
cmpsb
xchg
fisubl
aam
jb
call
fs
mov
mov
mov
mov
sbb
adc
jl,pt
rcl
push
push
inc
insl
ljmp
inc
shll
enter
xlat
stos
or
lea
rclb
push
mov
jmp
jno
mov
or
into
pop
or
loope
push
xchg
adc
call
jb
cmc
aas
cltd
mov
cmp
daa
lret
dec
and
sub
mov
mov
mov
movsbl
cmp
jno
ss
cmp
dec
mov
pop
sub
decb
sub
mov
jb
dec
int3
jno
fs
xorl
out
cmp
dec
ljmp
jp
mov
sub
adc
cmp
cli
jbe
ljmp
adc
and
mov
and
cmp
xchg
loopne
cs
cmp
pop
mov
ret
jge
std
adc
push
jb
enter
mov
in
scas
outsl
inc
and
shrl
leave
sar
jg
pop
mov
xchg
jb
adc
aad
mov
inc
mulb
or
pop
sbb
dec
and
cmpsb
xchg
fldcw
and
jnp
and
pop
xor
cmp
adc
cmp
add
imul
push
sbb
mov
xor
vmovq
mov
add
xchg
scas
out
cmp
cmp
xchg
test
mov
xor
hlt
sbb
cli
jbe
jp
mov
push
enter
int3
pusha
xchg
addr16
and
cltd
ds
lods
cli
shrb
pushf
lcall
popa
jb
int3
mov
jno
ret
mov
test
xchg
loop
mov
fstl
je
enter
call
in
cmpsl
xor
mov
dec
arpl
mov
mov
in
sbb
pushf
mov
test
fwait
cltd
inc
outsb
stos
jle
push
mov
sub
call
out
push
sbb
lea
add
andb
or
jb
or
inc
sbb
in
or
cltd
push
dec
popa
xor
mov
jp
rcrl
mov
add
mov
insb
mov
cmc
push
mov
pop
rolb
sub
pop
fadds
or
shr
mov
push
es
push
dec
cltd
mov
loope
mov
or
sub
int3
movsl
pushf
fstp
adc
lret
pop
out
xchg
andl
cli
cmp
shrl
jae
sbb
mov
sub
xchg
jmp
cmpsb
inc
or
inc
popa
jb
mov
inc
push
xor
iret
in
rep
push
aam
push
addr16
cmc
push
lea
pop
xchg
pop
into
xchg
adc
jge
mov
xor
adc
jb
pop
in
test
or
sub
dec
cmp
mov
jg
out
cld
aaa
pop
inc
lret
mov
mov
mov
adc
sbb
stos
das
jg
jae
notb
inc
mov
icebp
mov
mov
loopne
pop
inc
mov
mov
cmp
push
cld
push
push
pop
inc
mov
aad
shll
movb
loopne
xchg
or
jae
push
xor
pop
add
add
into
push
cmp
out
jecxz
add
push
loopne
ficoms
mov
arpl
imul
insb
jge
push
insb
mov
push
js
push
cmp
inc
out
push
scas
adc
int3
int3
mov
jo
mov
push
dec
gs
xchg
jno
insb
stos
clc
jne
xchg
fwait
mov
into
fstl
aas
arpl
nop
mov
inc
cmp
pop
adc
int3
dec
ret
pop
rcr
shll
movsl
pop
jecxz
xor
ds
sbb
cmp
lret
iret
sub
je
mov
jbe
adc
mov
fidivrl
fisttpl
in
dec
or
pop
xchg
xchg
out
add
jbe
add
dec
xchg
inc
jmp
jp
mov
cmp
mov
xor
mov
dec
sub
push
sbb
xlat
rcr
push
sbb
jecxz
pushf
push
scas
mov
push
sbb
adc
push
jae
xchg
dec
sbb
insl
adc
xorl
push
push
ret
sub
dec
push
mov
fstpt
mov
data16
outsb
fisttps
and
xor
xor
inc
sub
in
cld
in
lock
pop
dec
add
das
jnp
add
push
aad
inc
in
aaa
sahf
popa
adc
mov
adc
jp
pop
sbb
and
push
shrb
inc
stos
fs
add
ja
xchg
cmp
clc
mov
push
std
out
pop
dec
les
int
sub
inc
dec
jge
scas
push
mov
jl
or
jo
inc
cmp
pushl
xor
push
loopnew
add
mov
cmp
xchg
popf
outsl
mov
dec
dec
xor
mov
test
cmp
pop
push
daa
subb
mov
push
xorl
xor
data16
jns
fmuls
jo
out
scas
es
cwtl
mov
dec
shlb
xchg
call
add
orl
hlt
lods
fwait
push
ss
add
or
lret
out
repz
aam
dec
dec
mov
hlt
in
test
dec
lcall
pushf
stos
lds
adc
jge
aam
sub
insb
ret
push
cltd
cmp
mov
nop
test
aaa
cltd
ret
out
sbb
push
std
ds
jnp
xchg
push
fmull
jne
shrl
shl
iret
xor
cwtl
shll
mov
push
cld
jge
lock
test
subb
and
leave
pop
and
mov
sub
outsb
das
mov
loope
cmc
test
mov
gs
scas
xlat
ret
into
scas
adc
xchg
mov
into
clc
call
insl
mov
push
jl
fstpl
add
adc
cmpl
inc
dec
sbb
imul
or
cwtl
mov
push
inc
add
jno
lret
and
sahf
pop
mov
fwait
call
loop
adc
cli
gs
jbe
enter
push
jae
or
lcall
dec
lods
mov
jecxz
cmp
test
outsl
pop
inc
add
faddp
mov
xor
or
cmp
loopne
dec
outsb
sbb
inc
sti
shrl
add
aam
fidivrl
xchg
pop
pop
in
in
call
jmp
aas
xor
mov
call
inc
fstl
enter
lea
sbb
icebp
pop
jl
dec
int3
leave
push
push
ret
lret
or
shlb
and
mov
jo
adc
lds
imul
xchg
shl
xchg
fstpl
into
pop
pop
sbb
xchg
or
pop
jo
jmp
xor
pop
hlt
sbb
push
jae
das
add
xchg
jno
lcall
arpl
inc
lret
subl
out
jo
and
shrd
push
dec
fcom
inc
insl
and
xchg
ja
in
aam
adc
pop
popa
aas
push
movb
add
icebp
int3
jb
or
sbb
out
test
movsl
sbb
mov
enter
jg
lahf
shll
add
cmpsb
jbe
dec
leave
incb
fcmove
shrl
daa
pop
je
imul
push
test
mov
add
adc
pop
sbb
inc
lcall
sti
sbb
adc
and
repz
icebp
inc
ja
or
jb
push
push
mov
icebp
xchg
xchg
loop
cmpsb
mov
sub
out
xchg
mov
aad
cld
jne
test
jg
xchg
pop
jmp
inc
mov
push
cli
leave
adc
es
sbb
int
adc
add
push
lds
out
fildll
push
jge
or
pop
sarb
aad
xchg
shrb
ret
mov
inc
mov
jns
pusha
push
push
es
es
mov
push
adc
aad
cmc
or
movsl
arpl
mov
or
and
andl
cmpsl
dec
test
or
sub
or
push
repz
sbb
xchg
arpl
fnstsw
pop
rcrl
std
fldpi
dec
sub
scas
mov
ljmp
fs
test
jne
in
repnz
dec
xor
pop
and
jo
ret
loopne
and
jo
sub
rclb
test
les
sbb
addl
inc
or
dec
push
mov
jle
pop
inc
sub
jg
fcoms
inc
and
pop
dec
jecxz
jmp
bound
sarl
and
fucomi
or
cli
inc
inc
out
cld
lock
popa
push
adc
cmp
test
out
inc
jns
or
add
mov
cmp
loope
or
sub
neg
or
out
and
scas
pop
adc
mov
ret
xchg
clc
cmpsb
pop
adc
test
int
in
xchg
add
or
or
push
mov
repz
add
lock
out
pop
adc
scas
jg
icebp
mov
fadds
dec
push
xchg
rolb
or
sbb
add
mov
aam
sub
fdivs
lods
popf
mov
pop
push
sub
mov
adc
jbe
pop
call
pop
insl
fnsave
iret
sub
les
push
mov
xchg
stos
pop
scas
pop
xor
lret
adc
adc
ret
cli
les
int
stc
add
shl
xchg
cmpsb
push
je
cmp
push
adc
cmp
mov
lcall
outsl
clc
adc
pop
pop
xor
pop
mov
in
adc
aas
in
les
xchg
mov
mov
jae
movb
mov
inc
ret
mov
dec
mov
push
nop
fwait
dec
pop
xor
inc
and
fwait
pusha
push
out
cmp
lcall
push
popf
cltd
arpl
fldcw
stos
sbbl
pop
daa
ret
arpl
sub
incb
inc
adc
aam
fstps
pop
mov
fldl
push
mov
andb
mov
mov
jp
std
dec
iret
movsl
sarb
sbb
pop
cs
dec
imul
fadds
into
ss
xchg
dec
or
add
fimull
jae
cltd
cmp
es
adc
out
mov
and
mov
into
in
notl
andb
je
inc
insb
cmp
mov
mov
call
cld
jle
icebp
push
jmp
lds
xor
notl
cwtl
inc
mov
rorb
mov
adc
jno
mov
adc
pusha
and
popa
movsl
sbb
mov
ljmp
cmp
leave
push
rolb
das
js
call
dec
lock
cmc
in
jno
stc
push
dec
mov
std
jl
pop
sub
aad
insb
jg
add
or
outsl
pop
in
add
sub
int3
aaa
inc
push
aam
or
stos
push
and
pop
cmpsl
pushf
cmp
es
xchg
sub
mov
xchg
loop
inc
dec
mov
jecxz
inc
add
shr
fcoml
jle
pop
stos
dec
add
adc
xchg
repz
xchg
mov
adc
add
sbb
int
imul
jns
jecxz
sub
xchg
rcrb
lods
cs
or
dec
push
jl
pushf
jmp
jbe
mov
jg
adc
mov
into
sub
test
xchg
sub
insb
icebp
fisttpll
call
and
fdiv
sbb
sub
fwait
dec
mov
push
arpl
or
add
addb
xchg
int3
nop
roll
xchg
add
xchg
in
adc
outsb
fisubl
gs
stos
xchg
nop
push
out
jecxz
nop
lds
ja
inc
mov
cmp
adc
and
jp
cmp
cmp
and
or
xor
pop
jbe
test
inc
popa
fidivrs
shll
ss
stc
xchg
push
mov
arpl
popf
mov
pop
push
sbb
movsb
mov
fsin
test
adc
push
jae
inc
cmp
cli
stos
lds
pop
add
mov
add
lret
mov
jle
xchg
shlb
xor
lret
cmp
pop
shrl
in
cmp
pop
out
adc
sbb
add
mov
roll
fidivs
xor
add
xlat
sub
cmp
xchg
sbb
add
cwtl
adc
out
adc
icebp
xchg
ds
add
ret
xor
icebp
xchg
sbb
fsubr
push
jge
pop
jns
enter
sub
adc
push
adc
pushf
sahf
in
pop
cmp
jl
lea
dec
cld
call
jbe
xchg
je
fcompl
adc
sti
mov
divb
test
xlat
arpl
arpl
push
sub
sbb
sbbl
pop
inc
mov
and
xor
mov
mov
out
xchg
jb
in
loopne
addr16
popa
lahf
xchg
stc
dec
push
clc
std
adc
dec
test
mov
stos
test
mov
inc
push
lods
ss
cmp
rcl
and
xchg
leave
jg
aad
cli
fldl
enter
data16
and
jno
sbb
scas
dec
add
fs
out
outsl
popa
out
xor
jp
inc
es
imul
in
cmp
inc
pop
rorl
jle
sarl
ss
daa
adc
cmpsb
xlat
sub
stos
shrb
mov
pop
inc
or
lahf
iret
mov
daa
hlt
push
test
fnstenv
mov
and
mov
dec
add
fiaddl
mov
pop
cmp
cmp
mov
xchg
sarb
jecxz
lret
jbe
mov
dec
inc
ret
pop
dec
out
cmp
and
or
adc
or
hlt
in
sar
push
sbb
jecxz
jne
imulb
les
insl
lds
scas
test
stos
or
imul
and
les
icebp
lods
imul
mov
cmp
frstor
int
data16
rol
push
sbb
lret
adc
lcall
mov
repz
ja
aaa
hlt
imul
std
jmp
push
jns
pop
cmp
fdivrl
xchg
mov
sbb
or
ret
cmpsl
out
jle
push
out
xor
cs
lret
xchg
addr16
imul
movsl
mov
xchg
sahf
mov
pop
or
rcpps
lods
imul
outsb
xor
adc
or
cmp
test
ljmp
outsl
jmp
loope
push
or
inc
xchg
pop
ret
mov
xchg
test
pop
and
pop
mulb
fistps
cld
lea
or
inc
loop
dec
mov
sbb
fnstsw
jl
xchg
sbb
lods
xor
sarb
xor
fiaddl
push
xrelease
ret
jle
dec
add
mov
cmp
mov
xchg
sbb
add
fs
inc
mov
fxch
repnz
jmp
cmpsb
sub
xor
cmp
ffreep
das
stos
cmp
iret
pop
pop
jae
jg
xlat
scas
or
iret
sub
pop
or
movsb
pop
xchg
jge
xor
fcmovnb
xor
xchg
fwait
mov
mov
jle
pop
andl
pop
xchg
andb
cli
arpl
movsl
mov
aad
mov
lods
test
adc
aaa
xchg
cwtl
or
insl
outsb
mov
mov
mov
fisttpll
fwait
aad
and
mov
lret
cmp
cmp
push
sarl
cs
xor
cmp
jle
jb
cmp
sub
shrl
pusha
and
outsb
movsb
or
cmp
dec
mov
pop
mov
xor
jmp
push
fdecstp
mov
sbb
dec
xchg
fwait
mov
clc
inc
imul
push
jae
aad
xor
popa
pop
cwtl
xchg
add
jl
xor
shr
mov
int
test
stos
xchg
jg
das
lret
jno
aaa
pop
mov
add
lods
lahf
out
cli
sub
inc
jg
das
js
mov
lods
negb
mov
or
adc
mov
movsb
scas
es
roll
aad
adc
xor
lds
pop
test
push
sbb
push
icebp
push
cmpsl
fstps
arpl
and
gs
rsqrtps
mov
aad
jno
sub
xchg
mov
sub
lds
lcall
cs
vphaddubw
and
mov
add
fcmovnbe
and
or
adc
or
jnp
insl
out
into
cmp
mov
mov
inc
sub
das
rclb
shlb
cmp
jb
adc
orb
xchg
test
xchg
rcrb
sti
call
mov
clc
mov
sar
mov
pop
xchg
test
out
or
sbb
lahf
xchg
xchg
and
sbb
test
fsubp
test
fwait
jne
ljmp
std
test
sbbb
and
cmp
stos
enter
and
fs
idivb
lcall
jecxz
data16
inc
mov
xor
lret
jmp
push
pop
lds
mov
xorl
fwait
mov
xchg
ja
and
adc
sub
jo
sub
xor
lods
fxam
call
out
and
aam
ds
movsl
bnd
cmp
stc
rcrl
rcr
mov
icebp
mov
push
inc
xchg
xchg
into
mov
cmp
iret
mov
cmp
pop
iret
iret
cltd
mov
ds
cs
pusha
idivb
ljmp
stos
xorb
mov
push
inc
fcompl
jo
movb
shl
sub
call
les
inc
inc
fldcw
mov
or
lahf
sbb
adc
lods
push
pusha
roll
mov
cmp
sbbb
push
inc
ss
fwait
hlt
outsl
in
pop
les
loope
pop
push
out
lods
shl
dec
dec
mov
in
push
gs
ret
jo
fs
pop
addb
fsubs
iret
bound
dec
push
sbb
mov
mov
in
dec
mov
cmp
adc
adc
aad
pop
cmc
inc
mov
or
cs
push
into
pop
xchg
addr16
loopne
jb
data16
pop
adc
xchg
pop
push
daa
pop
lea
dec
push
and
imul
arpl
push
jb
push
and
mov
xor
mov
es
cmp
lcall
push
xchg
test
push
xor
push
test
jno
and
adc
mov
loopne
push
cmp
je
outsl
repnz
imul
adc
je
test
dec
dec
push
out
repnz
jo
cmpsl
xchg
or
nop
lds
dec
ficoms
lret
aaa
scas
outsb
mov
mov
test
mov
aaa
dec
add
pop
mov
inc
fistpll
inc
aad
repnz
clc
sub
ret
and
gs
out
push
mov
in
shlb
je
inc
mov
adc
cmp
push
jae
scas
lds
inc
ja
push
mov
jae
jp
test
mov
xchg
stos
bound
cmp
fsubr
mov
xor
xchg
jmp
sbb
fnstcw
in
rcrl
movsl
shl
outsb
int
cli
rolb
mov
add
lock
jge
sub
cmp
shlb
cmpsb
sub
push
push
mov
lret
xor
inc
jb
scas
scas
jmp
mov
add
adc
jecxz
push
cmpsl
mov
and
shl
cli
std
jecxz
sub
loop
ficoml
adc
cmc
add
jo
adc
and
dec
cmp
fstl
lret
ja
daa
add
cmp
dec
out
and
lret
adcl
push
sbb
jle
cld
sub
dec
xchg
mov
adc
jecxz
mov
cmpb
jl
adc
ret
xor
adc
cmp
out
ss
inc
rorb
test
int3
mov
int
push
xchg
mov
popa
cmp
xor
out
ljmp
leave
mov
push
orl
inc
jecxz
icebp
mov
movsl
push
add
xchg
mov
dec
dec
inc
mov
adc
fs
jl
fs
xchg
out
insb
and
ds
lods
int3
fisubl
mov
add
inc
add
daa
xor
dec
adc
add
orb
ds
mov
cmpsl
dec
enter
sbb
mov
das
data16
pop
cs
arpl
mov
mov
fdivrs
mov
dec
and
pop
pop
and
das
xor
cmp
jo
aad
mov
jnp
mov
mov
push
cmp
jle
fnstcw
stos
jno
aas
add
lods
and
push
gs
add
add
iret
cwtl
adc
mov
xor
cmc
imul
notb
sub
dec
jl
std
sbb
popa
aad
xor
push
pop
or
push
out
xlat
sub
lret
test
ds
push
dec
cmp
cltd
dec
enter
xchg
fstpl
cmpb
repnz
inc
pop
mov
inc
jecxz
mov
inc
inc
inc
adc
dec
ficoms
xchg
scas
xchg
mov
sbb
cld
push
jb
sub
cs
nop
mov
xchg
jb
mov
xor
jnp
or
hlt
sarl
bound
push
mov
xor
icebp
clc
sub
add
pop
cmp
gs
sbb
or
sahf
pop
insl
mov
lds
fsubr
pushl
in
int3
dec
mov
inc
jae
mov
test
add
mov
cmpsb
jecxz
jae
inc
push
mov
scas
scas
sub
bound
push
int3
sub
push
lock
daa
mov
or
xchg
push
imul
mov
andb
mov
push
xchg
xor
cmp
ss
inc
notl
mov
cwtl
insb
aaa
in
add
ds
rolb
dec
pop
xlat
cmpl
leave
ljmp
pop
push
jg
cmp
jmp
decl
fldl
popf
xchg
outsb
shlb
in
pop
js
mov
lret
mov
mov
add
xor
call
ja
scas
and
in
sub
inc
out
mov
xlat
jp
xor
test
arpl
sarb
push
mov
pushf
jl
scas
cmp
inc
andl
lock
and
shlb
add
dec
repnz
scas
add
flds
jns
movsb
sbb
push
xor
mov
fldt
pop
outsb
cmp
push
fcmove
xchg
pop
and
lock
xlat
rcrl
inc
push
fistpll
jno
sbb
jnp
cmp
pmulhw
stos
and
xor
xchg
push
mov
int3
filds
and
fisubs
or
insb
out
data16
inc
int3
sub
data16
push
add
fwait
sub
in
gs
or
mov
cli
xor
mov
cmp
sub
sub
mov
push
jge
and
mov
imul
test
lock
test
or
push
sti
xchg
out
push
sbb
sti
sbbb
xchg
cmp
test
test
dec
mov
mov
inc
cmp
inc
add
in
jnp
push
pop
jae
xchg
ficomps
or
pop
or
mov
dec
adcl
ljmp
mov
sbb
add
outsb
rorl
xor
lods
test
pop
aaa
fucompp
add
jl
es
dec
scas
inc
arpl
push
loopne
or
rcrl
cld
adc
scas
imul
jns
call
xchg
fldl
sub
jns
clc
out
pushf
xchg
aam
mov
leave
pushf
sbb
pop
inc
sbb
pushf
cli
adc
fwait
movl
cmovl
ret
frndint
mov
jne
push
notb
cmp
fwait
jae
icebp
test
xlat
jl
out
das
sbb
cmp
das
nop
fsubs
cli
push
loop
enter
call
in
es
clc
adc
sti
jmp
fwait
clc
clc
sarl
cs
or
jg
test
cwtl
pop
ret
mov
cmp
cmp
mov
cmp
rclb
cmp
cmpsl
movsb
xor
push
jne
pop
clc
jl
sbb
sub
pop
sbb
cmpl
push
std
jne
push
outsl
hlt
rcrl
mov
inc
int3
xor
cmc
mov
cmpsl
jp
sub
pushf
jge
sub
sahf
mov
cwtl
fnstcw
jmp
jmp
cmp
jg
sub
mov
push
stc
je
sub
lds
bound
js
cmp
sarb
or
dec
sbb
lods
addr16
cwtl
js
dec
imul
dec
jl
inc
jl
adc
sbb
scas
inc
cmpb
pop
inc
into
movb
jecxz
mov
mov
in
pop
insl
nop
or
mov
in
cmp
test
mov
push
fbstp
xchg
xchg
jns
addr16
testl
mov
cmp
data16
dec
mov
xchg
lock
mov
stos
or
jg
jecxz
mov
cwtl
xchg
ss
inc
xor
mov
sahf
push
pop
push
fwait
and
arpl
xchg
inc
xchg
push
lret
test
mov
xor
stc
or
inc
and
push
or
push
lret
arpl
cltd
roll
pop
in
mov
fistpll
adc
jg
into
jp
sub
aad
jle
call
ret
das
ja
dec
cwtl
mov
fiaddl
mov
cmpsb
aas
mov
movb
dec
scas
and
dec
iret
cmp
cwtl
call
add
pop
test
xchg
mov
and
scas
ds
les
stc
jo
fisubrs
push
mov
adc
cmp
sti
mov
ret
cmpl
mov
xor
test
mov
loopne
adc
push
inc
mov
mov
in
scas
and
sub
or
sub
negb
ficoms
test
sub
inc
push
or
mov
out
add
mov
mov
or
jae
in
mov
add
out
shrl
ret
and
lock
das
mov
push
sub
mov
loopne
fisttpl
inc
or
hlt
out
mov
aam
movsb
xlat
ret
xor
nop
sbb
icebp
push
or
shll
xchg
adc
dec
jb
xor
push
out
cmc
and
mov
repnz
cs
ljmp
popf
hlt
test
arpl
push
leave
lods
shlb
mov
add
lcall
incl
jmp
insl
rorb
jp
lahf
insl
and
inc
es
movsb
add
and
imul
adc
xchg
pand
loop
sub
shrl
lcall
and
adc
in
fisubrs
pop
push
mov
and
int
jo
popf
mov
lret
divl
mov
out
arpl
mov
idivl
sbb
ret
jg
xchg
movsb
pop
adc
mov
pop
les
push
sbb
mov
mov
lds
out
mov
mov
cmpsb
mov
xor
push
ret
into
and
push
jno
and
xchg
cmp
pop
xor
jno
fsubp
ljmp
int
mov
xchg
jl
aaa
jbe
add
xor
shlb
xchg
rcll
and
fidivl
cwtl
icebp
pop
lds
cmp
mov
dec
daa
and
push
inc
andl
sub
pop
leave
adc
xchg
mov
lret
cmpsl
push
shl
es
or
mov
push
inc
mov
and
xor
ds
mov
int
in
inc
sbbl
in
insb
push
aas
enter
sbb
inc
jb
xchg
and
mov
mov
pop
fdivrl
jbe
push
mov
data16
testb
sbb
aaa
cmpsb
or
repnz
mov
inc
scas
add
cwtl
mov
xor
daa
pop
mov
mov
cli
jbe
sbb
mov
add
adc
lea
adc
push
dec
pop
loope
inc
sbb
sbb
test
mov
mov
rep
fistpl
in
daa
loope
pop
jo
nop
lods
mov
mov
lock
adc
sbb
ret
imul
dec
inc
pop
fcoml
jno
ret
and
adc
sub
adc
out
add
mov
jge
ret
pop
daa
rclb
cmpsl
mov
inc
xor
inc
push
cwtl
push
push
push
cmp
and
pop
mov
in
inc
repnz
sbb
sbb
mov
rorb
push
pop
mov
scas
mov
rcl
sbb
mov
aam
sbb
or
pop
mov
movsb
lock
stc
icebp
cltd
pop
inc
fistps
push
pop
mov
xchg
xchg
lods
push
cmpsl
out
jo
stc
add
push
dec
sbb
xor
repnz
rcll
lods
scas
xchg
sbb
incl
outsl
mov
inc
cli
in
and
daa
push
inc
or
sbb
mov
fs
shl
repnz
shrb
cmp
enter
cmc
mov
sub
data16
dec
inc
insl
cmpsl
xchg
mov
fisttpll
jg
and
and
lcall
pop
addr16
jle
out
mov
out
in
gs
add
scas
in
cmp
pop
xlat
push
cs
test
mov
repz
jb
out
push
mov
mov
insl
in
popf
cmpsl
std
lea
adc
daa
arpl
push
xchg
xor
repz
pop
lret
das
mov
inc
dec
sub
mov
sbb
cltd
or
sbb
jbe
ljmp
lahf
std
fnsave
mov
mov
push
cmovb
into
popf
in
xchg
je
pop
out
xchg
cld
scas
daa
insb
aas
call
fidivl
data16
fsubrl
pop
xchg
or
sbb
test
rcll
insb
fsubrs
pop
push
mull
loopne
xchg
push
imul
out
xchg
or
xchg
xchg
dec
cli
in
ds
idivb
jns
ja
cmpsb
and
xor
inc
insl
pop
and
xchg
xor
sub
mov
outsl
adc
pop
xchg
mov
out
imul
and
jbe
push
fwait
cmp
loopne
jmp
lods
dec
fnstsw
dec
mov
dec
push
mov
loop
les
cmp
js
addr16
or
pop
loop
pop
mov
insb
fisttpl
pop
mov
cld
lods
ficomps
cwtl
jns
movsl
jmp
and
jg
jo
pop
jbe
cli
sahf
mov
cmp
adcb
push
sub
xor
mov
lahf
imul
cltd
int3
add
jae
adc
out
imul
clc
iret
pop
pop
movsl
out
fs
fstpl
mov
movsb
aam
mov
sbb
loop
push
and
pop
pop
ja
adc
shrl
add
in
dec
inc
das
mov
sahf
mov
and
jmp
sbbb
sub
pusha
xor
inc
shrl
add
mov
lods
out
sbb
std
movsb
adcl
jge
popf
inc
push
stos
les
imul
and
in
es
pop
psrlq
loopne
aas
repz
push
neg
outsl
cwtl
cmp
jbe
add
outsb
jae
roll
into
in
mov
int
push
dec
movsl
je
scas
inc
cmpsl
xor
inc
pop
adc
jl
or
pop
les
mov
fucomp
outsb
and
mov
stc
sbb
xlat
sbb
inc
in
sbb
xchg
pop
dec
psrld
faddl
test
rcll
fcoml
inc
call
insl
lea
loop
subl
icebp
xchg
leave
lret
jne
mov
jl
pusha
push
pop
sarb
mov
jae
xchg
jl
xor
jb
xchg
add
dec
mov
lcall
mov
cmp
bound
jge
in
add
mov
shlb
dec
cmpsb
fcoml
iret
call
ds
sbb
mov
loop
xchg
inc
bound
out
in
xchg
fmull
fistpll
movsb
jnp
addr16
imul
popf
fstp
fcomi
mov
xor
jae
sub
inc
sub
pop
pop
sub
sbb
lds
cmp
stc
cwtl
dec
lock
adc
rcr
int
dec
movsl
hlt
lret
pop
outsb
gs
pop
jg
mov
pop
fsubrl
subb
loope
jns
cmp
sbb
mov
imul
stc
int3
test
jnp
adc
and
add
loopne
cmp
inc
mov
add
stos
or
std
fucom
lock
cwtl
and
jne
add
xchg
xlat
jo
cmp
shrl
inc
pop
mov
mov
movsb
cmp
mov
jne
jecxz
lret
imul
lret
mov
outsb
outsb
cmc
add
mov
imul
fwait
scas
push
dec
loope
fadds
mov
dec
jl
inc
ljmp
xor
mov
add
mov
loop
leave
ja
lds
ljmp
xor
cmpsl
mov
inc
leave
fwait
inc
push
inc
cli
popf
mov
sub
inc
movsb
les
bound
mov
imul
mov
loope
mov
cs
mov
xchg
inc
xchg
mov
repnz
mov
insl
xchg
insl
hlt
push
xchg
jp
xchg
adc
scas
sbb
push
xor
pop
inc
pop
popa
stc
xor
push
lret
jb
cmpsb
leave
jmp
ds
cmp
and
mov
jmp
int
jns
scas
aad
push
andb
adc
jg
add
mov
jp
push
addr16
adc
pop
pop
cld
mov
mov
add
outsb
sub
loopne
rorb
mov
ds
dec
arpl
jae
lock
xlat
ret
call
jns
and
popf
sbb
sub
jns
sub
lods
add
ljmp
lret
int3
loope
cmp
add
mov
or
shrl
cmp
push
and
mov
nop
and
adc
inc
or
cltd
loope
out
shlb
jle
repnz
enter
jg
aas
call
out
xchg
xchg
sbb
mov
and
xorb
sahf
xchg
mov
lods
mov
lock
mov
jle
mov
dec
in
jl
cmpsl
lea
push
mov
mov
leave
arpl
orb
jle
mov
loope
mov
lods
jg
add
or
frstor
loop
mov
jns
sbb
add
mov
mov
aas
lds
cld
add
mov
dec
lret
fcoms
in
mov
mov
and
push
outsl
lcall
popa
arpl
std
imul
push
rolb
rolb
lods
jae
fwait
lods
outsl
je
pop
xlat
adc
pop
std
rcrl
jne
cltd
xor
stos
mov
and
fnsave
xorb
and
add
out
enter
sub
test
lods
lods
call
push
mov
icebp
push
inc
frstor
sub
fildl
xor
adc
inc
add
xorl
sub
daa
pop
loop
test
sbb
dec
mov
push
xor
xchg
lods
es
in
push
push
jl
mov
pushf
pop
out
or
ret
cld
dec
dec
lcall
cmp
sti
jno
in
xchg
jne
mov
mov
mov
pop
and
mov
sarl
sub
or
cmp
in
data16
jge
inc
mov
and
sbb
push
gs
lea
dec
leave
mov
dec
lock
ja
loop
mov
xor
dec
in
lret
inc
dec
add
clc
pop
mov
scas
xor
mov
jmp
pop
dec
ret
inc
imul
mov
aaa
jnp
js,pt
pop
nop
dec
idivb
scas
push
cmp
dec
andl
add
cmp
jns
jns
out
stos
pop
push
mov
and
out
or
loope
in
movsl
add
adc
ret
mov
mov
mov
xchg
inc
or
xor
and
scas
das
andb
cmp
push
leave
gs
lea
scas
sarl
nop
xor
iret
jle
lret
or
dec
jp
lods
pop
push
pop
fcmove
xorb
rcrb
xor
or
xchg
fcmovnb
stc
xchg
cwtl
push
jb
pop
adcl
daa
loopne
jecxz
dec
jecxz
dec
fldcw
lret
lods
sarb
add
pusha
loopne
ret
push
ret
pop
xchg
ja,pn
call
jns
and
xor
mov
mov
inc
data16
mov
shl
dec
pop
add
cmc
test
iret
xor
adc
jge
sub
add
iret
xor
dec
stos
lock
mov
andb
jno
inc
jecxz
fildl
dec
sub
xor
mov
add
mov
mov
mov
insb
pop
rep
mov
std
inc
jge
adc
pop
in
adc
out
and
ja
clc
inc
ds
adc
xchg
lods
call
stos
imul
jb
push
ds
rol
or
xchg
or
dec
sub
js
adc
leave
mov
sbb
adc
sub
xchg
jmp
fimull
cmpb
adc
sub
push
sldt
imul
loopne
jo
sub
dec
ficoms
push
into
adc
cmp
les
data16
in
sahf
or
sbb
cmp
cld
aam
gs
ljmp
adc
cmpsb
testl
stc
push
repnz
scas
inc
lods
mov
call
iret
mov
cltd
test
lea
pop
pushf
pop
cmp
adc
adc
out
mov
xchg
add
shlb
cld
outsb
xchg
std
jbe
fcmove
lea
negl
sub
out
aaa
or
dec
sahf
roll
dec
mov
rcll
or
or
je
mov
nop
sbb
sahf
ret
loope
and
mov
es
call
pop
xchg
mov
add
pop
and
cmpsl
imul
repz
mov
push
rcrb
fstpt
cmp
dec
roll
cld
scas
mov
hlt
imul
jns
rclb
xlat
sbbl
pop
mov
addl
sub
adc
mov
int
mov
add
adc
in
jne
popf
sub
mul
xchg
push
shl
arpl
popf
pop
lods
jno
out
rcl
or
out
lods
lods
sub
push
stc
sub
mov
jmp
fsub
ret
in
push
cmpsl
or
sti
enter
xchg
sahf
push
inc
popf
pop
push
movsl
sahf
mov
je
shll
add
divl
mov
push
push
inc
cs
icebp
add
pop
cwtl
cmp
or
cmp
cmpsl
mov
pop
or
sbb
pop
jnp
aaa
mov
cmp
mov
cwtl
pushf
fdivl
adc
fstpl
xor
mov
repz
xor
and
in
sbb
jg
dec
in
jmp
fwait
jecxz
inc
in
push
and
jbe
enter
sti
repnz
jo
shlb
clc
pop
nop
xchg
je
icebp
sbbb
add
xchg
aaa
addr16
sbb
daa
or
addl
push
lret
or
sbb
and
pop
xor
push
jne
mov
mov
fdivrp
les
movsl
sbb
push
mov
mov
and
push
stos
and
jg
add
adc
dec
xchg
cmp
dec
addr16
rcrl
js
in
jb
mov
jns
sbb
fsqrt
dec
push
jb
push
xchg
mov
fcmovbe
sbb
int
ljmp
sub
lods
cmp
inc
into
pop
test
or
push
gs
std
insb
aad
dec
dec
push
lds
pop
inc
imulb
jne
cmpsb
sbb
pop
inc
jge
mov
aam
cmp
jns
mov
cltd
push
mov
sub
mov
mulb
ljmp
fmuls
mov
mov
jo
roll
lcall
into
push
js
test
int
call
sbb
inc
mov
mov
cmpsl
fld
faddl
pop
cli
int
aas
mov
push
orl
adc
clc
adc
mov
xor
mov
jle
inc
sbb
into
jno
test
xchg
pop
scas
add
sub
pop
pop
shll
cmp
add
sarb
sub
sub
cmpsl
mov
mov
fists
sbb
notb
and
or
aam
adc
lcall
lock
adc
test
xor
int3
mov
outsb
mov
pop
mov
vpaddq
mov
ficoms
cmp
test
mov
inc
mov
ss
or
or
stos
sbb
jno
mov
ss
shrl
shll
or
loopne,pn
jmp
adcb
popf
push
mov
int3
out
in
out
push
sti
and
clc
lcall
icebp
xor
outsl
mov
jno
push
fnstsw
je
xchg
jbe
out
jno
test
cli
or
bound
cmp
cmpsb
jl
rcrb
lods
xorb
and
jecxz
adc
rcrb
push
imul
xlat
jnp
mov
mov
popf
mov
lret
out
push
test
push
mov
and
addr16
push
push
sbb
push
or
out
inc
out
lret
xchg
mov
lcall
repz
repnz
adc
xor
xchg
and
mov
add
cli
cli
sub
push
enter
cmc
and
inc
aaa
or
loop
int
push
insb
sub
push
mov
xor
add
rcrl
mov
pop
movsb
xor
cwtl
outsb
pop
addr16
out
jbe
pop
jno
aas
inc
test
dec
or
test
pop
fidivrs
inc
cs
jp
out
cmp
in
jl
mov
mov
sti
xchg
imul
shlb
jb
and
outsl
add
mov
fiaddl
jo
cmp
sarl
cld
cmp
and
adc
gs
cld
sbb
cmp
out
mov
xor
mov
mov
int
ret
adcb
out
xor
xchg
ljmp
mov
cwtl
leave
jns
mov
cwtl
mov
iret
sub
push
test
and
and
dec
xor
sbb
add
rolb
ret
mov
aas
or
call
mov
and
ljmp
adc
or
aam
and
xor
xchg
inc
mov
mov
cwtl
test
pop
stos
or
movsl
ret
mov
fnstsw
push
mov
lock
jo
imul
cmpsb
mov
movsb
ds
mov
mov
stos
scas
mulb
jo
out
or
lret
outsl
jmp
lds
add
cmp
jns
add
loop
inc
lds
data16
mov
dec
add
clc
mov
xor
add
mov
jge
movsb
pop
ja
daa
jg
sub
cmc
add
imul
mov
in
repz
cmc
cltd
sbb
mov
ljmp
jmp
in
xchg
fcmovu
or
sub
faddl
mov
stos
mov
xchg
aam
lahf
sbb
mov
test
jb
bound
popf
dec
sub
mov
and
outsb
add
call
insl
and
ror
stos
adc
mov
sahf
nop
lock
cwtl
mov
aaa
pushf
cs
dec
divl
bound
lea
fcmove
cs
push
and
nop
sub
aad
mov
adc
jne
imul
pop
cmp
cmp
fs
stc
or
jno
aas
cli
xchg
mov
mov
repnz
sbbl
add
mov
daa
mov
test
cwtl
lods
aaa
daa
pop
mov
add
das
mov
mov
jb
cmc
mov
lcall
inc
pusha
xchg
sub
lods
mov
aad
sub
lea
incl
xchg
in
dec
scas
aam
mov
push
cmp
and
add
idiv
es
loopne
xor
fnstenv
icebp
dec
mov
imul
mov
lret
add
mov
push
sbb
dec
addr16
sub
sbb
sub
add
mov
sbb
bound
and
pop
dec
inc
psubq
iret
push
ftst
inc
or
dec
pmulhuw
ja
sub
mov
insb
sub
out
mov
cs
rcrl
pop
or
jecxz
or
test
push
loop
inc
xchg
add
mov
push
push
mov
push
and
jb
mov
hlt
pop
iret
int
dec
mov
popa
fldl
mov
pushl
sbb
xchg
and
dec
xor
mov
loopne
xor
rcrb
scas
and
icebp
loopne
pusha
or
arpl
andb
sub
adc
mov
inc
sarb
add
inc
jp
pop
ja
add
shll
xchg
mov
inc
mov
ja
push
pop
or
pop
push
and
sub
out
push
mov
add
stos
inc
aam
xchg
xor
dec
inc
clc
imul
in
pusha
fstl
or
sbb
aas
inc
or
mov
jns
jecxz
ud0
inc
imulb
mov
cli
cmp
imul
adc
es
pop
adc
xor
addr16
fsubrl
push
mov
loope
stos
negl
xchg
sbb
sti
pop
loop
dec
mov
fstps
popa
aad
or
and
pop
pop
add
add
ret
push
adc
push
loopne
dec
arpl
fsub
jno
outsl
mov
lock
jmp
mov
hlt
lods
loopne
mov
ss
and
mov
arpl
dec
xlat
lret
jle
mov
xor
adc
jl
ret
jge
mov
push
mov
adc
mov
scas
xor
sbb
cmp
cmpsb
add
sub
fstps
test
lods
jo
int
push
mov
out
pop
mov
fcmovnb
mov
cmp
icebp
xchg
sub
pop
out
sub
pop
mov
xchg
jo
sar
lahf
imul
adc
gs
push
cmp
or
outsb
sbb
xchg
out
mov
ja
mov
inc
sarl
mov
into
push
mov
test
mov
leave
xchg
fildl
add
jle
test
pop
mov
adc
in
cwtl
mov
mulb
sub
push
add
cmp
dec
out
cmc
enter
dec
dec
xchg
add
cmpsl
cli
rorb
call
xchg
adc
pop
mov
cmp
out
jb
dec
stc
push
sbb
iret
lret
fiaddl
mov
push
fcoms
mov
clc
and
pop
jle
dec
out
sbb
inc
cltd
or
gs
fsubl
negb
test
and
cmp
mov
out
lock
sbb
insl
mov
inc
loop
repz
sub
sub
jnp
push
aas
mov
test
sbb
frstor
in
in
pusha
xchg
mov
xchg
sbb
and
mov
inc
mov
shrb
jae
xor
test
inc
sub
cmpsl
in
lds
mov
ret
ss
xor
aad
je
cs
adc
lds
jecxz
insl
sbb
gs
adc
jp
movsb
rcll
testl
movsb
cli
test
int3
sub
aaa
std
and
and
inc
mov
sbb
inc
adc
pop
sysenter
xchg
ds
add
pop
scas
jbe
mov
shrl
push
arpl
pop
inc
lea
add
aaa
out
or
pushl
jo
insb
adcl
sbb
jle
in
sub
cwtl
xchg
sub
inc
movsl
enter
and
loop
mov
in
sub
add
out
pop
out
xchg
or
dec
mov
stos
cmc
push
or
push
or
xor
test
adc
lods
jo
arpl
mov
cs
push
mov
je
lret
inc
cltd
es
dec
loopne
adc
add
fcmovnu
cmc
cmc
pusha
adc
aaa
lcall
mov
cmp
and
sarl
jmp
adc
push
jmp
mov
jl
lret
ja
gs
jbe
clc
pop
push
xor
and
in
bound
cmp
and
mov
mov
fidivrl
pop
add
stos
pop
pop
stc
movsb
out
cmpsb
jp
adc
iret
cmp
mov
shl
icebp
fnsave
loopne
rcrl
pop
lock
sti
and
fisubl
jbe
jb,pn
pop
into
out
lahf
pop
and
pop
lock
stc
scas
test
scas
mov
or
sbb
lods
and
push
dec
test
pop
jle
es
cltd
sarl
jl
add
mov
add
xchg
pop
cmc
cmp
push
push
aaa
scas
stos
mov
out
testl
hlt
shl
insl
push
addr16
sahf
push
jle
jge
insb
in
mov
iret
mov
jnp
push
and
jp
adcl
lods
movsl
ja
mov
dec
xor
fnstsw
xor
jle
lret
in
pop
in
shlb
pop
cli
out
add
mov
pusha
jg
popa
pop
fldl
dec
jbe
dec
add
imul
aad
lret
mov
movsb
mov
shlb
stos
dec
push
xchg
call
inc
rcrl
dec
shlb
int3
inc
mov
testb
pop
stos
mov
nop
fistl
or
adc
sbbl
dec
test
jae
out
add
jg
cmp
sub
shrb
movsb
stos
outsb
aad
movsb
inc
sub
enter
push
div
sub
push
idivl
jge
pop
xchg
xor
scas
sub
jge
nop
fmull
enter
xor
in
adc
cmp
mov
lcall
pop
xor
fstl
jnp
xor
jmp
xor
cmc
andb
add
fstpl
jns
mov
aas
add
sbb
iret
jae
jnp
pop
call
pop
jge
aam
or
mov
cwtl
into
mov
popf
push
aas
sub
sub
pop
push
pop
loopne
scas
mov
pop
lds
out
movsb
aaa
fidivs
xchg
out
fcmovb
push
mov
aas
mov
pop
xor
mov
into
cmpsb
fdivs
out
dec
outsl
lods
mov
int
pop
das
xchg
in
aaa
int
imul
add
movsb
or
or
inc
dec
les
xor
outsl
pop
orl
dec
incb
mov
popa
push
push
mov
out
adc
push
add
stc
ds
lods
daa
cmc
out
dec
mov
mov
push
popa
ds
int
aam
mov
in
std
jp
popf
inc
insb
jns
pop
leave
sbb
mov
add
iret
lock
mov
xchg
pop
movsl
in
repnz
fstpt
mov
mov
dec
xor
ret
test
sbb
inc
movsl
test
adc
sarb
sbb
inc
cmp
js
mov
xor
pop
sub
jnp
lods
inc
jae
pop
negl
xchg
push
and
adc
adc
loopne
cmp
xor
lods
test
mov
push
ret
mov
mov
std
push
sbb
loopne
mov
sub
enter
add
les
pop
jl
dec
mov
sbb
ja
push
arpl
mov
pop
jle
mov
sbb
add
adc
mov
popa
out
repnz
fiadds
xchg
sub
cli
pusha
into
sub
hlt
and
inc
dec
inc
fisttpl
pop
xchg
jmp
add
loopne
jnp
movsb
stos
mov
pop
or
aad
inc
push
cmp
fdivp
sbb
xor
adc
shrb
and
shlb
ds
push
out
in
mov
and
push
inc
jb
jns
hlt
pop
jno
enter
sub
in
lcall
cmpl
cmpsb
into
lret
push
sub
mov
mov
adc
roll
sahf
out
pop
sub
xrelease
inc
inc
shll
loope
and
repnz
test
sar
sub
popa
pop
sarl
jb
sub
sysexit
mov
jmp
and
and
in
sbbb
xchg
loop
pop
mov
lods
mov
mov
mov
sub
xor
jmp
in
mov
imul
mov
inc
stos
outsb
pop
stos
mov
add
adc
jle
fiadds
sub
and
enter
push
clc
sbb
push
flds
xor
cmp
push
enter
fisubl
loopne
and
leave
sahf
cwtl
mov
cmp
dec
sbb
xor
mov
sarb
pop
and
mov
xchg
cld
cld
mov
jo
lods
mov
xor
adc
pop
sbb
repz
jnp
mov
mov
or
shlb
add
jg
mov
call
pop
lods
mov
and
in
loopne
adc
fucom
mov
dec
dec
fcom
xor
push
test
into
mov
and
push
jecxz
pop
sub
pushf
stos
sub
lea
incb
andb
lods
bound
outsl
push
jp
dec
sub
lahf
add
pop
adc
cmp
inc
and
mov
insl
cli
aaa
popa
fstps
adc
in
pop
js
adc
cltd
fmulp
jp
pop
pop
jb
xor
nop
push
test
sub
sub
fisubs
scas
sub
add
push
dec
outsb
jo
pop
mov
sbb
js
pop
in
lahf
or
das
mov
and
adc
lahf
data16
jb
mov
int
jmp
fildll
out
xchg
or
movsl
sub
jno
loope
iret
nop
mov
imul
cmp
inc
aas
js
and
mov
stos
cmp
mov
jmp
mov
push
mov
int
cmp
or
repz
clc
fadds
add
imul
cmc
lea
popf
xchg
jns
test
movsb
int3
add
xchg
or
push
fisubs
mov
aad
xor
mov
aam
mov
and
push
imul
in
sbb
mov
test
insl
mov
pop
aaa
adc
fisttpl
fnstenv
jp
sub
hlt
loopne
popf
cltd
dec
dec
test
loop
or
clc
test
test
popa
lret
push
sub
dec
iret
aam
lcall
lods
sub
sbb
std
push
and
and
adc
add
jo
lret
push
pop
les
pop
and
test
mov
movsl
sahf
cmc
fisubrl
dec
xor
push
push
insb
gs
jbe
or
icebp
and
cmpsl
cmp
jmp
ret
mov
xchg
shl
push
inc
not
test
addr16
or
das
out
cld
gs
leave
pushf
inc
lcall
xchg
dec
push
lds
adc
sub
fwait
add
pop
js
dec
loopne
popa
imul
mov
mov
cmpsl
outsb
or
std
inc
and
jb
lods
shll
fbstp
aaa
mov
inc
xlat
fnstenv
sub
stos
mov
test
fsubr
test
adc
imul
cld
mov
mov
dec
mov
fiadds
je
and
dec
hlt
push
sbb
lret
inc
jge
aas
pop
js
sbbl
lret
mov
lret
sbb
mov
enter
and
out
test
xchg
sub
add
hlt
ds
xor
jae
cmpsl
xor
jae
cli
xchg
in
fidivs
imul
mov
fisttpl
sub
adc
mov
bound
leave
inc
sbb
dec
jle
mov
xchg
lds
movsl
xchg
aaa
repnz
add
and
test
call
sub
insl
sbb
add
xchg
xchg
inc
pop
lods
iret
jecxz
cwtl
push
mov
mov
fidivrs
aas
jbe
ret
popa
fildl
in
mov
inc
mov
lret
rolb
cmpsl
mov
mov
pop
pop
sarb
icebp
loop
js
int3
jl
cltd
sub
imul
push
dec
outsl
sbb
pop
or
mov
js
lahf
lcall
jg
push
adc
pop
inc
idivl
orb
dec
inc
mov
test
int3
inc
fisttps
and
push
and
mov
test
insl
xchg
xchg
xchg
je
xor
sbb
and
cmp
or
xchg
insb
or
adc
sti
leave
sub
cmp
mov
insl
pop
pop
pop
addr16
fldl
movsl
ljmp
leave
adc
jo
inc
mov
jo
subb
mov
or
sub
repnz
jmp
stc
sti
jmp
fildll
or
sahf
sti
outsl
rolb
cmp
jae
mov
and
sbb
lcall
ss
cs
pop
test
pop
clc
shl
stos
push
push
xchg
ds
stos
push
sbb
push
enter
dec
jno
xchg
pop
dec
mulb
pop
xchg
test
fwait
test
lret
cli
cmp
mov
mov
and
mov
xor
je
jp
outsl
pop
ja
mov
or
das
lock
sbb
fidivrl
aaa
fninit
or
rcll
repnz
xchg
repnz
push
xor
sub
jnp
and
xchg
inc
add
fildl
mov
in
jg
jbe
sahf
mov
add
mulb
pop
and
ret
scas
jl
sub
add
movsb
loope
pop
mov
mov
fisttps
stc
cmc
mov
andl
mov
shr
cwtl
lret
dec
and
stos
lcall
pop
mov
outsb
pop
lods
jnp
movsl
or
scas
push
pop
add
cmc
movsl
adc
jmp
arpl
xchg
mov
mov
int
mov
fwait
out
dec
jb
pcmpgtd
jo
int
add
push
ss
adc
push
test
faddl
pop
js
add
pop
sbb
mov
loopne
ds
mov
cmp
inc
xchg
dec
sahf
push
push
cmp
cmp
pushf
mov
lahf
cmp
mov
and
fnstenv
xchg
hlt
scas
cmpsb
cmp
and
std
test
shl
aaa
mov
les
popa
push
in
popa
add
mov
push
addr16
mov
loopne
sarb
xchg
repnz
mov
jl
bnd
cwtl
jae
mov
dec
mov
rclb
mov
aam
jns
xchg
add
cwtl
xchg
repnz
flds
cmp
inc
iret
jbe
int
push
test
or
mov
scas
and
ss
pushl
aas
ljmp
mov
ror
into
inc
adc
mov
loop
call
jmp
sbb
clc
gs
dec
pop
mov
mov
mov
jns
xchg
data16
call
mov
lcall
mov
data16
hlt
sbb
pop
sub
insb
sbb
repz
sub
pop
rclb
sbb
mov
and
mov
pusha
scas
js
jae
test
xor
mov
aas
xor
jo
movsl
movsb
loope
rolb
sbb
gs
inc
popf
sbb
movsb
int3
add
or
add
adc
das
jne
fs
pop
cmc
dec
sub
std
xchg
xchg
mov
dec
stc
push
stos
sbb
xor
dec
dec
mov
fisubs
fwait
or
xchg
and
mov
xor
xchg
push
ret
jle
fwait
ss
adc
fmull
cmpsb
xchg
das
shll
and
hlt
mov
lea
sub
cmp
addr16
out
sbb
loop
add
sbb
sbb
push
dec
enter
push
mulb
sub
cmc
scas
push
cmc
and
mov
pop
jle
jb
pcmpgtw
fldt
sbb
icebp
in
and
cltd
xchg
lahf
mov
in
hlt
pusha
sub
push
das
movsl
push
daa
cmpl
mov
sbb
dec
subb
pop
pushf
pop
stos
test
inc
int3
cmpsb
pop
or
test
inc
pop
loopne
movsl
pop
or
cmp
lds
xlat
or
cmc
push
mov
ret
hlt
aam
ljmp
notb
adc
sub
test
jno
mov
rol
scas
out
les
push
imull
jns
push
fs
ljmp
mov
lods
icebp
lods
inc
xchg
stos
xor
jge
push
add
test
shlb
inc
pop
shll
xchg
mov
cltd
mov
pop
cmp
sbb
shr
subl
add
movsb
mov
sbb
iret
cmp
dec
push
or
xchg
mov
pop
call
xchg
inc
clc
aad
and
fisubs
leave
xchg
inc
fwait
pop
shl
or
test
jns
dec
rcr
fdivl
cmp
pandn
xor
icebp
and
movsb
sbb
lcall
push
pop
lods
pushl
orb
push
mov
cmc
imul
out
les
sbb
dec
loop
es
sti
les
mov
pop
ja
fcoms
cmpsb
jo
xchg
adc
in
mov
sbb
fs
insb
push
and
outsl
mov
mov
fs
dec
mov
lods
cltd
rcrb
pusha
outsb
int
or
cmc
outsl
or
int
loope
scas
ror
xor
push
leave
or
lcall
xchg
mov
sbb
data16
dec
or
jns
movsb
push
iret
add
and
div
movl
lahf
push
mov
sub
loop
adcb
cltd
js
push
xchg
mov
inc
sub
ret
ljmp
mov
mov
sub
push
subb
xchg
aaa
in
adc
popa
lock
out
pop
add
inc
sub
push
in
sahf
and
xchg
push
movsb
ljmp
repnz
xor
loope
ljmp
lcall
mov
adc
pop
or
fildl
movsb
dec
insb
xchg
dec
xchg
fs
cli
xchg
sbb
fimuls
adc
nop
mov
ss
addr16
inc
lret
cmpsb
mov
jp
leave
xchg
arpl
mov
es
xchg
lods
dec
in
lods
mov
and
rcr
dec
push
outsb
adc
lret
jle
mov
push
fcom
mov
inc
xor
pop
pushf
rcr
hlt
negl
test
xchg
stos
lods
scas
sbb
pop
mov
bound
ffree
enter
loop
or
dec
mov
jo
dec
dec
mov
xchg
in
mov
and
inc
xchg
lea
flds
insl
push
cmp
jns
cmp
add
cltd
icebp
pop
xchg
int3
xchg
fwait
xchg
std
div
inc
mov
adc
xor
imul
sub
sbb
pop
jne
xor
sub
movsb
lock
add
cmp
dec
inc
stos
iret
mov
shlb
inc
ljmp
inc
xor
jno
roll
inc
ror
sbb
lea
xor
inc
push
fisttps
mov
dec
xor
jle
mov
or
cmp
jmp
lds
test
adc
stc
jge
pop
imul
add
mov
movsl
jge
xchg
sbb
out
jl
mov
sub
std
mov
mov
or
lret
adc
mov
sbb
mov
pop
dec
push
jl
mov
dec
dec
hlt
jae
je
add
pop
out
arpl
adc
lahf
out
es
gs
push
popa
and
adc
lret
mov
mov
inc
jnp
cltd
pop
lods
push
add
pop
nop
dec
addb
xchg
daa
push
aas
movsl
cmpsl
shr
sbb
push
outsb
aam
fistpl
aaa
xchg
push
fsubl
roll
and
movlps
fwait
jg
outsb
test
mov
sub
xlat
cmpsb
dec
xor
mov
repz
test
sarb
and
movsb
add
fs
inc
mov
pushf
cmp
out
cmp
stc
cmp
ljmp
out
gs
leave
sti
arpl
cmp
mov
imul
in
pop
mov
out
mov
dec
mov
dec
imul
sub
stos
mov
xor
jo
dec
cmc
push
and
daa
adc
or
mov
rorl
hlt
xorl
cmp
mov
fwait
and
xchg
and
mov
ret
and
movsb
push
rorl
lods
push
push
mov
aaa
es
call
cmp
into
fnstsw
inc
ljmp
dec
dec
cmp
std
cltd
subl
cli
dec
fisubl
insb
and
push
xchg
sbb
jle
test
outsl
jne
int3
xlat
cmp
jp
repz
mov
arpl
fildl
xor
fildl
add
lock
addr16
and
rolb
jp
in
test
and
adc
sub
cmp
scas
or
sbb
mov
xor
test
cld
nop
pop
push
data16
leave
dec
test
leave
jnp,pn
in
clc
popf
out
movsb
cmpsl
movl
or
mov
mov
xchg
push
push
cmp
js
repz
inc
xlat
test
int3
shll
add
repz
push
sbb
fnstenv
xlat
sbb
pop
adc
and
mov
aad
ret
push
int
mov
inc
adc
mov
stos
movsb
mov
or
loop
xor
jno
test
gs
and
std
rolb
aad
out
inc
jae
cmc
test
cmp
sub
push
mov
inc
mov
fsubrl
in
jge
xor
dec
inc
neg
xor
insb
test
xor
in
neg
test
dec
adc
adc
addb
jp
mov
and
mov
aad
mov
lea
jecxz
mov
jne
jno
mov
arpl
movl
stos
mov
je
xor
mov
sub
test
jp
cmp
aam
pop
adc
sub
adc
dec
adc
inc
fwait
in
xchg
mov
xor
js
sbb
pop
jmp
ret
sbbb
push
jl
fmul
or
push
cmpsl
push
and
push
push
add
or
push
fwait
movsl
into
cmp
jno
repnz
or
fprem
int
add
dec
sbb
add
fisubs
jg
mov
repnz
or
dec
ds
rorl
lcall
inc
mov
movsl
or
push
pop
mov
ss
jg
mov
imul
das
icebp
fidivs
mov
adc
repnz
cmp
and
xchg
add
mov
cwtl
mov
fadds
call
pop
lret
es
adc
xchg
addb
sarb
in
push
sub
into
imulb
and
lock
push
dec
jbe
outsl
inc
mov
jg
xchg
out
mov
and
mov
out
dec
cltd
pop
adc
pop
mov
adc
imul
pop
and
adc
les
xor
xchg
rcrb
pop
pop
dec
shlb
inc
mov
pop
mov
xchg
daa
jg
rorb
inc
jb
outsb
add
insb
dec
les
sbb
out
lret
fdivr
and
cmp
cmp
sub
cld
sub
pop
pusha
add
adcb
std
jo
or
idivb
scas
int
mov
nop
pop
in
mov
dec
sub
mov
movsl
dec
dec
scas
call
mov
dec
mov
sub
cmp
cmp
xchg
sub
xor
stc
sbb
jl
push
in
popa
jbe
mov
adc
pop
adc
lock
jg
icebp
mov
push
adc
cmc
push
mov
lahf
outsl
adc
xor
mov
push
jecxz
jl
inc
cmp
psubw
shl
jecxz
data16
out
out
ja
adc
or
mov
mov
xchg
push
lahf
lret
shll
outsl
jmp
daa
dec
jo
lret
adc
jl
sub
mov
out
fldenv
icebp
and
icebp
std
jg
cmpsl
pop
jg
mov
jbe
bound
inc
push
cmc
in
sbb
adc
stos
mov
lret
add
test
mov
in
push
mov
fldt
fisubl
push
adc
jecxz
loopne
shlb
and
adc
xchg
cmpsb
std
cmp
jae
push
jp
or
loopne
jmp
jl
and
push
push
mov
dec
scas
push
enter
test
in
hlt
lcall
dec
xchg
xchg
mov
pushf
ja
ljmp
into
push
push
aas
sub
inc
mov
scas
mov
in
hlt
mov
mull
sub
repz
mov
and
pop
xlat
mov
inc
js
fistpll
sub
xor
inc
jae
cmpsb
ret
in
inc
xchg
sbb
and
and
xchg
cmp
add
jne
shlb
insl
push
add
aas
out
pop
mov
loop
push
push
sub
jecxz
xchg
dec
adc
sarb
pavgw
scas
arpl
cmpsb
mov
inc
je
jl
and
cmpsl
push
rol
mov
adc
mov
bswap
loop
lret
xor
loopne
stos
mov
in
and
push
mov
push
cli
inc
inc
scas
mov
das
sbb
xchg
cmp
xor
mov
sbb
push
call
and
cld
jl
dec
pop
adcl
lret
inc
or
mov
fsubl
pop
add
mov
ror
in
xchg
jl
cs
pushf
and
jmp
jge
mov
pusha
mov
xchg
les
inc
dec
icebp
flds
and
jbe
mov
or
sbb
ss
repz
fwait
enter
ds
not
add
cmp
adc
inc
cmp
daa
out
neg
aad
sahf
dec
sbb
imul
lret
cmp
test
js
aam
pop
pop
mov
cwtl
inc
mov
xor
jns
out
movsl
dec
mov
mov
xchg
mov
in
test
or
pushf
scas
push
sbb
test
lahf
loopne
inc
gs
lret
iret
ret
add
push
mov
xor
or
mov
sub
mov
ljmp
xchg
xor
movsl
or
push
lcall
or
icebp
mov
inc
jl
popa
mov
jbe
cmp
std
aas
imul
xor
aad
cmp
mov
xorl
hlt
mov
lea
jge
out
push
arpl
mov
popa
sub
or
xchg
call
xor
shrb
inc
pop
lds
fsubr
shlb
out
sbb
insb
lods
or
test
sbb
cli
ja
xlat
and
lock
test
int
push
cmp
pop
push
cmp
mov
xchg
lret
pop
mov
imul
dec
xor
add
gs
mov
gs
pop
lds
xor
jbe
outsl
xchg
sti
movsb
ss
xor
scas
std
jmp
mov
enter
stc
test
push
or
loop
pop
adc
cli
pushf
sbbl
or
iret
push
jp
jo
mov
ljmp
js
orl
ret
push
cpuid
adc
mov
add
mov
dec
mov
cmp
jno
and
test
jge
sbb
insb
or
xor
and
btc
fildll
xor
xlat
mov
lods
and
pop
pop
jae
sahf
orl
fwait
shlb
testb
mov
pop
jecxz
mov
and
je
sbb
imul
enter
pop
mov
les
or
mov
dec
cmpsl
cmpsl
ficompl
popa
or
mov
pop
dec
cmpl
adc
mov
push
xchg
cmpsl
bound
sahf
popa
cmpsl
xchg
addr16
push
add
xlat
mov
pop
mov
mov
sbb
xchg
in
or
popa
sub
jmp
pop
mov
push
nop
xchg
shrl
mov
push
pop
fwait
adc
xor
inc
pushl
cmpsl
jge
jns
add
add
sar
xor
shrl
dec
pop
inc
adc
sub
xchg
rolb
push
add
cltd
fucomip
cld
mov
rcr
sarb
lods
cwtl
push
xchg
in
xchg
bound
leave
lea
pop
sahf
add
mov
mov
movsb
sub
aam
ret
nop
add
sahf
jp
cmp
lock
cmp
and
sbb
addr16
pop
call
jecxz
in
pop
mov
or
push
inc
or
ret
pop
push
popf
das
arpl
pop
cld
mov
or
in
in
jb
mov
pop
loopne
out
dec
inc
out
out
xor
out
movsb
cmc
icebp
in
and
je
lret
rol
mov
jns
and
test
lcall
lods
xor
mov
mov
inc
xor
int3
push
push
pop
mov
cmp
stos
in
leave
lcall
in
leave
fisubl
inc
repz
mov
testb
mov
or
sbb
clc
loope
cmp
jecxz
sub
jne
test
mov
or
pushf
lcall
xor
arpl
gs
jg
fisttps
inc
lea
or
iret
aaa
fisubl
adc
sbb
aaa
mov
mov
mov
push
pop
mov
imul
std
inc
sub
or
out
dec
das
inc
pop
cld
push
jnp
imul
sub
insb
in
xor
sti
neg
pop
outsb
shrb
out
jecxz
sbb
test
ds
mov
insb
test
jmp
dec
jl
stos
jl
mov
or
xchg
ds
out
mov
stc
icebp
cld
push
adc
sub
daa
fcomps
ds
addr16
or
les
add
loop
push
cwtl
popa
notl
xor
cld
roll
adc
sbb
or
nop
cli
test
andl
scas
orps
jl
sbb
and
arpl
and
outsl
aas
add
dec
push
nop
push
or
cli
imul
int3
into
adc
scas
inc
push
int
jg
mov
add
loopne
inc
sub
loop
les
faddl
and
add
mov
inc
es
nop
out
jl
inc
stos
out
dec
lahf
aaa
push
pusha
push
pop
lock
lds
xor
adc
pusha
insb
lret
mov
jo
sub
pop
xor
fdiv
lahf
aas
pop
das
push
push
es
sub
mov
jno
xchg
enter
outsb
push
mov
xor
in
jg
fldenv
dec
insl
out
push
xlat
out
or
std
lret
mov
xlat
jne
mov
subb
cmp
aam
mov
mov
out
cmc
shrl
out
pushf
xchg
push
out
jbe
out
mov
sbb
jge
adc
cmpsl
push
leave
ficoms
or
out
xchg
mov
sarb
fucom
mov
mov
adc
insl
in
cmp
jp
movsb
mov
gs
ljmp
cs
loopne
leave
adc
cmp
fdivrl
jnp
das
add
jae
sbbb
jne
cli
sub
dec
out
ret
mov
leave
add
pop
or
adc
shll
sbb
jb
cmpsl
cwtl
daa
fbld
jne
iret
out
fmull
mov
lret
in
sub
xor
dec
and
mov
inc
xchg
pusha
and
cmpsl
iret
push
rorb
fiaddl
loop
jo
out
pop
jle
hlt
lods
add
cltd
in
push
cmpsl
push
loope
fxch
pop
repnz
jns
jns
add
adc
lods
xchg
lret
or
arpl
push
xchg
rcrb
pop
insl
push
dec
in
sbb
repnz
add
test
pop
cli
or
out
leave
push
mov
push
adc
sub
adc
sbb
lret
xlat
sbb
scas
mov
cmp
adc
jbe
mov
mov
sbb
mov
jmp
addr16
and
mov
sbb
mov
jb
fwait
adc
lock
pop
inc
cmp
cmc
jp
rorb
mov
and
add
call
xchg
lcall
xchg
sbb
mov
lock
insb
mov
loope
lods
xor
add
jecxz
or
jo
inc
pop
ljmp
push
inc
in
in
jle
out
push
fistl
cmp
push
push
test
hlt
movsl
fmuls
or
push
xchg
pusha
push
xor
repz
push
fcomps
lret
rep
adc
lcall
adcb
push
add
add
xor
sar
and
leave
arpl
mov
cmp
iret
jge
in
push
shll
inc
dec
movsb
stos
call
std
add
loop,pn
pop
xchg
pop
fwait
sbb
jecxz
lock
leave
mov
mov
or
into
adc
je
dec
inc
mov
leave
repz
mov
inc
inc
fidivrs
loop
into
fldcw
in
add
add
sarb
cmp
faddl
or
xor
mov
iret
dec
mov
xor
imul
add
pop
xchg
mov
mulb
rclb
jecxz
in
adc
repz
dec
adc
jge
sub
les
aad
mov
cmpsl
xchg
push
mov
data16
mov
call
cld
dec
cmp
and
clc
dec
sbb
nop
cmp
sbb
jge
mov
adc
or
int3
lea
mov
sub
or
push
push
or
dec
roll
fidivrs
jg
loope
add
xor
cmc
xchg
jnp
add
or
jmp
clc
adc
jecxz,pt
and
push
das
jge
pop
hlt
cmp
or
adc
jecxz
repz
pop
out
mov
rclb
and
mov
pusha
inc
lret
jne
cmp
into
jns
inc
pop
leave
xchg
jbe
test
pop
movsl
je
sbb
mov
lods
lahf
aad
jo
pop
pop
inc
lock
insl
xchg
das
cmp
fdivp
push
outsl
mov
dec
cwtl
add
cmp
out
vhaddps
jmp
outsb
cld
scas
ds
mov
xor
mov
adc
lods
sbb
or
or
cmc
ficompl
mov
mov
sbb
call
orb
out
mov
xor
fists
js
or
or
cmc
push
test
sub
push
xchg
les
outsb
sub
xchg
add
mov
into
xchg
inc
lcall
out
in
cmpl
mov
push
sub
push
inc
jge
fnstsw
jno
dec
push
test
adc
aad
xchg
add
and
mov
call
mov
cld
push
mov
aas
xchg
aas
fstpl
sub
push
sub
pusha
xor
push
inc
sub
and
movsl
sub
inc
mov
insl
in
sub
fdivrl
jne
aad
movsb
cmpsl
push
adc
in
pop
ds
aad
inc
inc
outsb
neg
rclb
xor
inc
xlat
cmp
fistpl
test
fs
xor
cmpsb
enter
nop
and
data16
or
daa
mov
cli
cmc
int3
je
xchg
jne
andl
int
adc
call
push
jp
loope
lock
js
into
hlt
inc
or
mov
aas
subl
inc
or
mov
xor
cmp
jp
xchg
push
in
stos
pop
mov
lods
scas
lods
jge
in
loope
mov
mov
pop
test
cs
in
add
adc
dec
push
xchg
mov
outsl
jo
daa
bound
xlat
adc
sub
into
nop
sbb
sub
testl
jo
fidivrl
nop
pop
in
mov
dec
testl
inc
rcl
and
adc
lea
push
rorl
std
outsl
sti
adc
cmc
add
sub
lahf
adc
xchg
lcall
jp
scas
xchg
add
loop
jae
pop
push
push
jmp
ficomps
pop
push
cmp
popf
add
jno
dec
xorl
sub
cld
pusha
add
or
mov
mov
or
ret
cmp
mov
inc
out
jp
mov
push
aam
mov
inc
outsb
mov
push
sub
mov
sar
mov
pop
add
sub
repnz
daa
lds
loopne
xchg
cltd
jmp
repz
add
shrl
dec
addb
icebp
sbb
add
out
andb
and
test
sub
inc
mov
mov
cwtl
mov
fistpl
data16
mov
fbstp
dec
jl
add
clc
mov
popa
mov
fimuls
push
mov
fstps
out
mov
push
aas
andl
dec
sub
cli
in
nop
mov
push
or
add
cli
cli
sti
adc
mov
fnstcw
add
mov
push
sahf
sbb
jne
in
testb
xor
pop
lods
arpl
ficoml
insl
adc
insl
orl
pop
pushf
setnp
pmaxsw
bound
mov
and
loopne
mov
cmp
das
das
inc
cmp
fsubrl
cmpsb
pop
ficompl
bound
cwtl
inc
inc
and
insb
rcl
add
ja
or
dec
mov
pop
mov
adc
lret
aad
dec
daa
jns
je
cmp
mov
mov
rcl
and
rolb
outsb
test
arpl
xor
or
and
xor
mov
call
les
bound
dec
add
cs
imul
aad
sbb
add
jg
cwtl
into
xor
scas
add
push
repz
daa
sub
popf
push
cmc
xlat
push
adc
adc
test
mov
aad
gs
cmc
outsb
inc
xor
or
inc
inc
jae
pop
push
cmp
test
adc
loop
inc
push
lds
adc
ds
pop
scas
inc
sub
adc
clc
adc
movsb
jbe
lock
rolb
pop
nop
shl
lods
pushf
or
xor
cmp
cwtl
pop
adc
push
sbb
cmc
and
inc
popa
dec
shll
je
mov
repz
rclb
les
or
lds
inc
jae
xchg
icebp
js
xor
xlat
loope
lahf
repnz
rcll
push
mov
clc
pusha
pop
insl
mov
fimull
stos
jo,pt
pop
or
jne
fdivr
pop
mov
and
addb
sub
fstp
mov
mov
cmc
les
mov
sti
xchg
fwait
xchg
sub
xor
push
divb
jnp
cmp
scas
idivb
fneni(8087
sub
popf
sbb
and
dec
or
push
jg
ret
xor
jnp
push
out
hlt
aad
test
adc
add
mov
sub
or
dec
lods
mov
push
sbb
cmpsl
cmpsl
repz
sbb
jnp
jbe
cmc
cmp
jns
cmp
outsb
sub
scas
or
push
sub
and
rorl
int
ja
fdivl
in
mov
or
lds
imul
mov
ss
or
xchg
mov
les
jl
xor
sub
cmp
jg
mov
or
pop
outsb
xorb
sti
ds
pop
mov
mov
xor
frstor
stc
insb
sbb
mov
dec
scas
hlt
je
shl
jl
rol
icebp
stc
jb
shrl
test
clc
cli
lcall
push
into
dec
test
mov
pop
lods
int3
fistps
sub
into
lret
pop
dec
xchg
mov
test
jl
bound
dec
pop
cmpsl
out
mov
pop
sbb
lods
call
cmc
ret
xor
pushf
sub
test
add
shll
push
cwtl
jge
add
jb
fmuls
gs
xor
dec
repnz
in
lahf
and
test
and
cmp
xchg
cmp
mov
push
adc
jns
notb
in
dec
push
mov
sbb
xchg
nop
cmovg
mov
mov
sbb
inc
jg
add
jmp
push
ds
repz
adcb
sahf
adcl
int3
fs
in
cmp
cwtl
hlt
movsl
leave
and
sbb
mov
inc
imul
lret
cmp
std
pop
inc
sbb
push
push
mov
xchg
fiaddl
in
insl
or
imul
fistl
dec
inc
mov
sbb
dec
push
imul
jmp
pushf
pop
fs
push
push
inc
lock
sub
dec
clc
and
push
and
test
lods
xor
bound
xor
mov
jg
or
movsb
fs
dec
mov
arpl
cs
dec
adc
int
push
xchg
popf
cmp
fistpl
daa
out
and
adc
divb
int3
jecxz
push
shrw
push
cli
les
leave
jbe
in
adc
or
ss
repnz
test
rolb
lret
jge
ss
xchg
jmp
add
xchg
inc
pop
fisttps
push
jle
push
jmp
icebp
xlat
inc
add
push
imul
and
xchg
cmp
shl
jmp
out
fists
xor
cli
and
sub
sahf
sbb
out
ret
subl
push
cs
or
jecxz
push
mov
lods
inc
test
and
push
rcrb
ret
mov
dec
outsl
mov
data16
les
scas
insb
mov
pop
add
enter
test
call
or
sub
fistpl
adc
andb
iret
lods
inc
pop
pop
dec
xchg
xchg
rol
lods
mov
add
mov
sbb
in
aas
xchg
push
les
pop
subl
and
insb
mov
adc
mov
add
xor
insl
jo
mov
cld
pop
inc
fs
jecxz
call
data16
mov
insb
ror
jae
pop
dec
lret
hlt
test
test
stos
jp
insb
nop
inc
push
popf
das
sub
das
sti
scas
scas
stos
xchg
cmp
cwtl
inc
mov
or
xchg
cmp
fsubrs
add
mov
data16
out
addl
sub
cmp
call
pop
pop
aam
mov
jge
fs
test
imul
movsb
test
add
push
insl
arpl
fldt
xchg
or
hlt
mov
cld
push
cmpsb
inc
xchg
pop
xor
and
dec
in
sahf
mov
adc
adc
das
jge
sub
je
enter
adc
dec
cvtps2pd
mov
ljmp
rcr
arpl
testl
bnd
or
lret
dec
pop
rcrb
mov
addr16
sbb
int3
aas
mov
hlt
sbb
inc
mov
mov
cmp
push
push
enter
dec
movb
mov
std
mov
jno
mov
fnclex
imul
sti
leave
pop
xor
testl
or
sub
gs
aas
and
xlat
fcmovnu
insb
jo
sub
mov
outsl
adc
ss
mov
xor
fdivl
imul
jnp
add
mov
mov
mull
imul
lcall
outsb
mull
repz
in
mov
dec
imul
jb
sub
test
jmp
cld
inc
dec
out
out
flds
cmpsb
lahf
dec
dec
iret
dec
and
push
in
sarl
push
sub
xchg
push
subb
and
fnstsw
cmp
movsb
je
leave
and
fbld
jmp
xor
outsl
dec
lcall
sub
outsb
in
push
mov
push
jl
ret
or
cmc
push
popa
movsl
int3
adc
mov
jg
or
scas
jmp
stos
out
mov
sub
aad
lds
adc
xor
rol
pop
jae
xor
mov
call
add
lods
jle
add
mov
fimuls
loope
movsb
or
add
push
dec
fbld
lock
xor
bound
out
pop
mov
cmpb
dec
lahf
fsts
shl
repnz
push
cmp
cmp
test
scas
loope
dec
sbbl
pop
loopne
and
repnz
jbe
or
push
or
add
sub
mov
mov
xor
insb
pop
data16
clc
jno
fnstsw
xchg
fbld
clc
mov
cmp
mov
js
mov
lret
daa
mov
dec
lods
or
jns
lock
xchg
in
inc
popf
and
mov
and
icebp
stc
lret
repz
cmc
fnstenv
add
testb
mov
fistl
into
sbb
test
mov
orb
inc
or
ja
divl
gs
pop
fildll
fcompl
loope
popf
cmp
cmp
pop
xchg
xor
jmp
pop
rorb
mov
fnsave
or
dec
or
outsl
push
popa
bound
lods
dec
out
mov
dec
mov
dec
xchg
xchg
mov
xchg
daa
stos
xor
jne
mov
adc
sahf
loopne
repnz
imul
jge
enter
jmp
sbb
add
mov
pop
and
mov
in
lret
mov
and
mov
out
adc
push
or
sub
imul
arpl
data16
or
mov
push
call
jo
popa
jae
aas
inc
pop
gs
addr16
in
addr16
insb
out
in
mov
ljmp
fcoms
mov
adc
pop
push
movl
jb
in
lret
push
and
sub
stos
loope
add
jmp
insl
sahf
popf
and
mov
push
mov
loop
sbb
push
jne
mov
out
es
andl
aas
adc
push
xchg
sbb
sbb
xor
inc
jg
inc
fisttpl
mov
or
mov
imul
sbb
clc
es
dec
nop
jns
lods
adc
jne
push
push
test
out
adc
ficoms
sbb
pushf
repnz
jae
jns
aaa
or
jns
cld
rcr
popf
fmuls
lds
fdivl
mov
xchg
adcb
loope
bound
dec
push
adc
test
pop
xchg
inc
int
dec
pop
mov
xchg
sbb
mov
cltd
lods
cmp
xchg
push
and
ror
inc
xor
push
scas
cmp
outsb
pop
dec
cmpsl
fsubl
fucom
cmp
fstps
lea
mov
insw
aad
push
add
sbb
xchg
fwait
and
xor
sahf
jb
or
popf
jne
inc
inc
rcrb
incl
push
mov
hlt
repz
icebp
mov
in
imul
idivb
popa
aas
bound
sub
add
jecxz
mov
cmp
dec
in
decb
clc
jl
or
out
fdiv
std
mov
add
inc
stc
enter
sbb
adc
cmp
jmp
inc
fstpt
ljmp
mov
idivb
fs
mov
push
or
xor
dec
cmc
xor
mov
call
in
cmpsb
fsubs
push
insl
test
inc
jg
mov
scas
iret
sub
add
jge
jbe
jo,pn
mov
mov
sbbb
mov
jo
addr16
sbb
inc
and
mov
icebp
fsubrs
cmp
addl
jge
subl
mov
and
loop
fnstenv
movsl
or
das
mov
and
mov
mov
lock
push
int3
in
jp
ss
sub
cs
das
cld
xchg
inc
xor
adc
cwtl
lcall
push
dec
add
insl
enter
cltd
les
jb
shr
ja
push
sbbb
lcall
cmpsl
or
f2xm1
pop
shll
cmp
lock
roll
pop
fiaddl
mov
jmp
sbb
cltd
inc
mov
push
loope
mov
sub
popf
fidivs
mov
cmp
fistpll
icebp
mov
lret
loopne
mov
ds
ret
inc
lcall
fnsave
mov
pushf
pop
pop
push
cmp
ret
test
cs
les
xchg
lcall
push
xchg
cmp
std
push
cmp
stc
arpl
in
xor
enter
inc
fwait
jmp
sbb
mov
stos
aas
xor
add
loope
insl
ret
pop
add
dec
mov
inc
rclb
jecxz
dec
dec
adc
test
inc
push
mov
xchg
cli
cmpsl
fsubr
sub
adc
add
lods
sti
mov
cmp
stos
rcl
jnp
cmp
std
cwtl
fisubrs
inc
fwait
pop
scas
aas
lret
enter
out
jno
lcall
pop
mov
adc
fwait
xlat
dec
imul
jp
mov
aas
das
lahf
pop
out
subw
sbb
dec
aam
sbb
out
mov
xchg
js
cmp
cmp
pusha
cmp
and
test
or
bnd
add
sub
pop
sbb
int3
rcrb
ss
loopne
xchg
ficoml
add
loopne
jbe
mov
clc
adc
es
addl
iret
lea
xchg
movsb
xor
pop
cltd
sub
sub
pushf
scas
mov
icebp
mul
ss
rol
hlt
mov
ret
lret
xor
pop
jmp
jge
aam
sti
xchg
sbb
cmp
xor
xlat
int3
ret
xchg
mov
ret
jns
sbb
icebp
push
sub
and
out
fs
aaa
and
ret
fs
pop
xor
cwtl
jge
and
insl
imul
dec
push
orl
aaa
divb
jns
imul
je
mov
and
mov
adc
shr
adc
sub
cmp
cmp
int
cld
aam
mov
loopne
repz
dec
push
push
icebp
xchg
incl
inc
mov
lahf
mov
push
cld
test
xchg
mov
bound
pop
or
in
stc
adc
lret
sbb
test
test
xchg
lcall
push
in
pusha
pop
fidivrs
jb
and
sub
inc
inc
std
insl
lods
and
mov
arpl
in
rorb
rcrb
nop
das
xlat
fnstcw
pop
xchg
dec
subl
filds
push
add
cmp
mov
stos
outsb
jl
pop
xchg
or
jnp
dec
push
in
aam
jmp
ss
jns
outsl
rolb
daa
cmp
scas
fdivl
mov
int3
enter
hlt
sbb
call
pop
push
inc
lock
pusha
imul
fstpt
push
and
cmpsl
scas
stos
push
mov
mov
cmpb
fisttps
xchg
cli
inc
outsb
mov
cmp
je
mov
incb
rol
popa
movsb
insb
sbb
int3
mov
stos
jbe
test
sub
mov
fildl
push
test
adc
in
or
scas
call
es
bound
cmpsl
clc
xorb
in
and
test
xchg
aam
xor
and
cmp
lock
js
aam
adc
lahf
fucom
push
fmuls
fsubrl
pop
cs
pushf
dec
xor
out
push
aad
pop
pop
mov
dec
mov
xlat
jbe,pn
out
pop
xchg
stos
cmp
sbb
or
xchg
xchg
adc
dec
fstps
aam
aam
imul
mov
aam
add
fbld
test
and
xchg
or
jbe
jmp
sub
repz
dec
or
shrl
pop
push
and
rorb
mov
mov
jae
add
or
fmull
shrb
in
pop
mov
stos
cli
movhps
sub
pop
push
pushf
into
cld
mov
push
push
out
shrb
xor
inc
xchg
imul
push
sub
cwtl
inc
jge
mov
xchg
clc
mov
faddl
pop
fwait
enter
aaa
out
lret
pop
lahf
aaa
aas
push
nop
mov
mov
sar
insl
shr
pushf
test
jne
sbb
ja
mov
icebp
mov
dec
push
popa
bswap
andb
push
dec
sbb
imul
add
sbb
jmp
sbb
xor
mov
lcall
and
loopne
xchg
rcrb
lock
data16
xlat
loopne
sar
add
std
inc
fidivrs
sbb
jmp
mov
aas
pop
sbb
adc
push
in
and
jle
cmpsl
int3
and
mov
jb
mov
lock
cmp
sti
inc
mov
jmp
scas
jmp
jne
ljmp
aad
adc
cmc
push
inc
jmp
mov
nop
cwtl
pop
scas
dec
jg
cmp
idivl
inc
xor
aam
insb
outsl
repz
les
mov
fs
pop
pusha
outsl
jns
stos
add
jg
sti
ja
in
or
popa
adc
jae
and
mov
fmull
adc
dec
insl
inc
daa
jns
pop
mov
add
adc
lret
xor
pop
and
cmp
cwtl
in
jge
fwait
cmc
test
jno
out
mov
and
fimuls
fists
cmp
adc
cli
push
in
in
aam
decl
aam
out
mov
and
sub
push
rcr
jl
cwtl
jg
cmp
rcrl
in
fldl
push
in
push
negl
sub
inc
lea
pop
xchg
and
outsb
jecxz
je
add
mov
ljmp
jecxz
sbb
xchg
orl
sbb
loope
pop
clc
daa
cmp
xchg
enter
mov
sysenter
insb
or
out
adc
sti
adc
xor
addr16
jl
xchg
inc
adc
lcall
mov
adc
mov
bound
mov
adc
mov
out
andl
enter
out
mov
add
call
xorl
subb
pop
mov
pusha
mov
sbb
push
inc
pop
leave
xchg
scas
cmp
jbe
ss
mov
negl
cmpsl
ja
mov
jno
add
addr16
adc
out
mov
pop
pop
lods
pop
stc
or
push
stos
mov
leave
ret
les
test
fwait
mov
lods
test
aaa
and
jbe
adc
sbb
dec
cmp
clc
push
in
sbb
test
int3
jg
xlat
push
out
cltd
mov
out
inc
pusha
jnp
push
push
jo
pop
mov
cli
xchg
jno
mov
stc
xchg
jne
and
lds
test
mov
and
ret
sbb
imul
leave
and
mov
dec
or
and
adc
stc
pusha
mov
scas
cmp
ljmp
lret
jne
hlt
adc
mov
mov
or
imul
nop
popa
cmp
movsb
scas
lahf
mov
mov
bound
mov
mov
inc
test
jb
dec
xchg
sub
into
push
xchg
jns
cmp
inc
jmp
jmp
adc
xchg
ljmp
xor
iret
jecxz
and
or
cmc
push
fdivp
add
mov
jns
into
fmulp
cmp
ljmp
jge
jp
or
pop
dec
push
and
adc
xor
or
push
dec
cli
xor
mov
mov
ds
nop
mov
mov
imul
js
add
je
inc
mov
mov
mov
and
repz
mov
mov
insl
pop
sarb
inc
xor
sbb
insb
fnstenv
loop
mov
jg
lahf
fimull
adc
cmp
lods
movsl
add
leave
jle
outsl
mov
pop
pop
lahf
inc
les
bound
je
mov
fdivp
outsb
push
or
stos
push
hlt
push
cltd
xchg
push
scas
mov
pop
scas
pop
hlt
sub
xlat
mov
insb
ret
sub
push
mov
push
add
pop
loop
lret
mov
out
leave
mov
jle
jno
pop
andb
mov
mov
sar
ret
in
push
out
out
std
jmp
dec
cmpsb
in
cld
jnp
xor
je
dec
lahf
sub
icebp
sbb
fstl
cli
pusha
inc
ret
and
mov
stc
cmp
jge
int3
adc
or
jnp
stos
shlb
movsb
mov
shr
aas
stos
mov
jo
pop
fnop
cmc
dec
xor
sbb
and
call
pop
movsl
inc
xor
xchg
decb
and
ret
jge
jmp
jo
inc
and
sbb
out
xchg
roll
or
arpl
mov
add
out
pushl
test
test
push
sbb
inc
jnp
adc
inc
cmp
cmpb
pusha
cltd
mov
cmp
ret
mov
mov
fcmovne
mov
jnp
push
pop
stos
repnz
jmp
or
mov
dec
imul
pop
pop
out
and
pop
cmp
shlb
test
in
mov
push
xchg
xchg
leave
scas
jl
mov
out
dec
cld
sbb
xor
jo
mov
cld
ljmp
outsl
out
cmp
xor
scas
adc
sub
cmpsb
jbe
out
pop
cwtl
push
test
and
das
push
rorl
pop
add
scas
ss
sbb
add
sub
or
push
sub
insb
pushf
mov
jnp
jo
into
jbe
test
jbe
jecxz
iret
or
lret
aas
xor
pop
stos
icebp
sub
movl
std
rcrb
icebp
mov
std
call
xor
push
jae
and
lcall
xchg
xchg
inc
lret
ds
test
sub
loopne
sub
sub
sbb
scas
adc
mov
mov
repnz
add
popf
mov
add
adcl
or
adc
push
imul
adc
shrl
and
inc
jne
jnp
clc
jns
mov
mov
mov
test
xchg
push
pop
js
notb
adc
push
mov
pop
sub
mov
cmc
test
pushf
push
push
fs
mov
mov
jb
outsb
test
xchg
and
jp
sbb
sti
mov
ljmp
imul
loopne
or
and
sbb
rcll
and
or
and
pop
push
mov
pop
push
ss
sbb
sub
or
or
mov
ret
shlb
push
mov
in
add
xchg
jo
inc
jmp
jo
arpl
and
and
int3
sbb
popa
push
bound
pop
dec
push
enter
jp
cmp
ja
cmp
pusha
loop
cli
les
pop
pop
xchg
inc
mov
sbb
call
mov
mov
cmp
stos
inc
fidivrl
mov
lcall
or
cmp
fistl
scas
std
push
into
xor
fcoml
add
dec
imul
pop
pop
test
test
out
pop
add
test
fistpl
push
insb
aam
lock
dec
into
push
adc
lds
std
xor
inc
scas
mov
mov
shll
jecxz
pusha
lcall
jb
dec
xchg
pop
smsw
xor
xchg
hlt
pop
push
and
xor
repz
xor
stos
ds
pcmpgtb
shlb
push
pop
inc
dec
nop
xor
std
mov
mov
jne
lods
test
add
mov
cli
ret
pop
cmp
cli
icebp
das
jmp
cmp
dec
add
jne
lock
jecxz
mov
imul
stc
jl
dec
arpl
mov
jo
and
aam
xchg
gs
imul
mov
jne
mov
icebp
ret
xor
xchg
jp
mov
mov
mov
or
jne
jo
mov
xchg
mov
sti
stos
into
sbbl
push
cmpsb
shrb
sub
xor
dec
daa
stos
cld
insl
push
icebp
shlb
gs
sub
cmp
jb
pop
mov
jecxz
icebp
out
in
jb
lret
les
push
add
and
lea
pop
das
cmpsb
xor
les
je
in
aad
mov
pop
mov
test
insl
jno
or
cmp
push
pop
pusha
testl
sahf
test
mov
pop
pop
pushf
js
insb
jbe
mov
cs
and
xor
shll
xchg
addr16
jnp
addr16
mov
push
in
lods
les
mov
arpl
sub
and
incl
xchg
mov
ret
xlat
test
cmc
in
mov
xchg
clc
imul
out
dec
shrl
xchg
jmp
xchg
lahf
cmp
stc
std
mov
jbe
mov
or
mov
data16
mov
mov
aaa
stos
push
inc
ljmp
or
lret
movsl
push
dec
xchg
add
lcall
lcall
repnz
hlt
in
roll
movsl
inc
jl
lock
cld
or
cltd
sub
fdivr
xlat
jle
mov
dec
push
mov
into
jbe
jl
push
in
fninit
fwait
test
push
and
je
das
sub
das
in
hlt
outsb
in
lods
pop
insl
aad
cmpsl
or
push
jnp
ret
scas
aas
and
fadds
add
jo
leave
das
fstpt
std
pop
push
stos
fstps
mov
imul
pop
sbb
sub
adc
mov
add
xchg
push
mov
hlt
mov
dec
inc
cs
out
clc
fcmove
mov
xorb
and
movl
push
and
jl
shrl
repnz
and
mov
imul
out
addb
arpl
jge
mov
push
push
lods
insl
jecxz
and
loope
jb
inc
push
mov
pop
lock
mov
test
movsb
bound
lods
cmc
xor
xchg
addr16
lcall
xchg
in
cld
push
fcoml
shlb
inc
lds
xor
call
adc
in
aam
xor
jge
test
out
xor
jecxz
mov
cmp
loopne
push
and
sbb
loope
or
popfw
push
sahf
shrb
aad
stos
clc
inc
jle
fists
mov
push
cmpsl
xchg
xchg
push
leave
jg
arpl
mov
insb
lcall
in
inc
mov
and
add
pop
inc
ss
adc
xor
cmc
clc
jo
push
je
stos
mov
xchg
jb
inc
lea
mov
inc
lds
rolb
mov
test
or
cmpsb
inc
insl
test
mov
lahf
hlt
out
cld
imull
and
in
aad
sbbl
stc
outsb
jb
xchg
loopne
rcll
movsb
js
push
in
jmp
mov
pop
or
dec
sbb
out
or
call
pop
rcll
mov
lea
add
mov
mov
subb
ret
xchg
rcl
dec
xor
inc
repz
arpl
cld
lcall
dec
out
cmp
lcall
fisttpl
ljmp
adc
push
pop
cmp
dec
pop
imul
cmp
call
add
cwtl
in
sarb
shl
pop
out
bound
shrl
popf
pop
test
scas
push
inc
jno
and
xchg
js
mov
test
cltd
les
in
pusha
repz
pop
push
pusha
outsl
lahf
enter
xchg
jge
or
test
mov
into
loope,pt
jno
push
in
pop
bound
in
bound
mov
popa
das
mov
xchg
insb
sub
mov
clc
adc
adc
test
push
bound
shlb
fimull
test
cwtl
jge
ljmp
rorb
enter
mov
or
push
std
xlat
dec
rep
test
mov
jb
or
rcrb
out
cmp
rcrl
add
rcrb
lahf
daa
lea
sbb
push
push
sbb
push
nop
push
pop
mov
add
imul
pop
sarb
inc
cld
outsl
jge
aaa
push
cmp
push
jae
lods
push
push
xor
scas
lahf
out
loope
lret
inc
pop
stos
lret
mov
enter
fwait
sub
in
push
xchg
sti
xchg
mov
pusha
mov
mov
add
and
and
out
jne
cld
test
aad
aaa
aas
and
xchg
push
or
inc
pushf
adc
shll
sbb
clc
movsl
adcl
and
ret
rcll
lods
push
outsl
in
mov
rorb
mov
loop
adc
inc
pop
xchg
adc
mov
fistpll
jno
cwtl
scas
or
and
test
clc
scas
dec
faddl
mov
xor
imul
rol
pushf
mov
push
dec
cwtl
cmpsb
int
ficoms
jne
js
xor
sub
push
in
xor
gs
roll
fwait
js
sub
jnp
sbb
cli
data16
imul
cltd
arpl
jmp
jbe
movsl
movsb
into
dec
enter
hlt
mov
fsub
dec
and
test
and
scas
add
sbb
dec
dec
lods
cmp
dec
lock
xlat
adcl
out
hlt
outsl
push
ss
and
insb
sub
aas
adc
outsl
mov
mov
jae
xor
xchg
and
clc
xchg
pop
and
movl
cld
popa
sahf
aam
mov
mov
sub
push
mov
out
movsl
test
cli
mov
fildl
stos
test
jb
in
sbb
stos
test
fdivs
mov
rcrl
cmp
pop
iret
ljmp
xchg
ret
and
push
clc
test
out
inc
inc
aaa
dec
dec
clc
cmpsl
pop
das
lock
xchg
cmp
pop
sti
icebp
loopne
inc
bound
xor
push
pop
loopne
jno
in
out
and
mov
add
xlat
ret
xor
pop
outsl
shlb
aam
ret
cmp
shl
and
inc
orb
test
arpl
mov
fnstcw
adcl
das
cltd
test
ljmp
jns
mov
adc
jo
jnp
xor
ja
aam
pop
stos
and
mov
xchg
mov
stos
in
rcll
lahf
adc
jmp
loope
repnz
mov
and
loope
push
and
je
data16
sub
mov
ret
cmp
or
mov
cmp
xchg
pop
add
xlat
outsb
lods
lahf
movsl
enter
sub
jb
jb
cmpsb
iret
ja
xchg
mov
mov
push
jae
das
adc
adc
push
or
push
loope
mov
mov
fidivl
fsub
mov
sarl
xchg
hlt
iret
xor
xorb
adc
cwtl
push
lret
fcoml
jge
xor
dec
test
movl
imul
dec
xchg
testl
lock
andb
push
out
cmp
xor
testb
lahf
lock
popa
std
mov
cmp
jbe
mov
call
aas
lret
imul
inc
cmp
inc
cmp
pop
dec
mov
dec
xorl
push
les
mov
test
int
cmp
sub
pop
jmp
and
shrb
inc
or
cmp
out
loop
dec
xor
hlt
mov
mov
mov
pusha
jp
adc
inc
loope
cld
push
sahf
icebp
adc
es
inc
xchg
in
push
mov
cli
mov
mov
jle
pop
xchg
test
mov
test
addb
jecxz
imul
fcompl
jecxz
outsl
cmpsl
sahf
dec
or
clc
mov
push
mov
pop
lret
hlt
xchg
and
rcll
js
lcall
mov
jp
fdiv
mov
je
add
dec
nop
gs
jae
js
xchg
pushf
or
data16
jle
out
pop
push
jno
popa
or
insb
imul
pop
rorl
pop
je
cmp
mov
fidivs
or
jle
int
lods
in
aaa
clc
mov
xchg
testl
xor
xchg
fcompl
push
push
out
sbb
xchg
cmpsb
jp
adc
cmp
leave
pop
je
rorl
in
scas
dec
lahf
pop
add
xchg
test
ja
icebp
jmp
push
lcall
mov
sub
andb
int3
mov
and
xor
xor
orl
lock
jecxz
and
sbb
dec
sbb
xchg
push
cmp
xorb
push
movsb
inc
sub
jl
clc
mov
out
test
xchg
mov
std
dec
movsb
mov
push
jae
mov
sub
xor
orb
jno
xchg
add
cmp
imul
ficoml
ds
mov
xchg
cmp
in
jp
cmp
clc
fcoms
aas
pop
loopne
int
cmp
test
shlb
ja
adc
js
sarl
mov
pop
dec
and
idivb
test
loopne
pushf
inc
push
sti
push
ret
sub
pop
jo
sbb
in
mov
gs
mov
mov
xlat
comiss
in
sbb
xor
cltd
lods
xchg
or
inc
pop
xchg
xchg
ror
shlb
popf
jns
pop
pop
dec
or
sti
cmc
int
xor
mov
sbbl
gs
pop
pop
sub
scas
cmp
test
call
jmp
ds
outsb
xchg
mov
mov
call
jmp
insl
shr
rcr
je
call
xlat
das
icebp
push
xor
sbb
sti
iret
sbb
sub
push
jmp
push
fisubs
mov
loop
xchg
push
ret
xor
in
outsl
jb
push
pushf
stc
mov
inc
loope
popa
fwait
in
sarb
repnz
jbe
in
jecxz
pop
aaa
cltd
inc
add
jne,pn
and
inc
imul
xor
add
subl
adc
imul
fists
and
cmp
outsb
sti
int3
or
jecxz
rcll
or
xchg
push
push
mov
testb
out
sbb
lret
fisttpl
mov
mov
lret
mov
mov
mov
out
fsubl
testb
sbb
xchg
jno
push
mov
mov
add
pop
daa
mov
and
push
xor
mov
add
dec
gs
jns
xor
test
lahf
cmp
sub
arpl
push
cmpsl
jno
jl
add
jae
mov
pop
pop
mov
mov
mov
std
dec
insl
pop
lock
imul
das
ss
mov
lds
aaa
out
pop
sbbl
lods
mov
lcall
xorb
aam
mov
mov
mov
scas
iret
scas
repnz
inc
or
cmp
test
cmp
movsl
inc
cld
dec
fdivrl
fwait
cwtl
pop
fildl
test
jo
fisttpll
das
jecxz
mov
pop
lea
cmpsb
enter
sbb
ja
lcall
std
mov
jle
test
pop
xchg
pop
xorb
push
cmp
pop
mov
jecxz
cwtl
les
pop
jl
sub
or
fnstsw
and
aad
adc
fidivrs
and
cs
mov
mov
out
shll
jne
ds
add
xor
in
jmp
cli
dec
cmpb
and
bound
lea
cmpsl
sub
in
sbb
or
push
sub
lret
shl
insl
outsw
out
mov
aaa
aam
sub
fs
cli
insb
cmpsl
lret
rorb
add
arpl
rolb
xchg
and
mov
aaa
push
pop
xchg
add
mov
jg
cli
pop
and
xor
xchg
mov
out
xor
and
sbb
rcrb
push
pop
pop
movb
and
sbb
lods
repnz
add
xor
in
inc
icebp
mov
fbld
push
inc
arpl
xchg
popf
sbb
cmp
in
daa
je
xchg
out
in
std
mov
pop
lahf
jne
pop
gs
ret
aaa
and
pop
jle
pop
out
std
jmp
dec
aaa
fabs
cmp
cmpsb
inc
pusha
enter
adc
outsl
mov
add
inc
sub
mov
dec
or
cmp
xor
sub
xor
mov
and
xchg
or
sub
sub
inc
lahf
mov
cmc
loope
jb
divl
cli
mov
loop
push
sti
pushf
daa
test
fldt
cld
mov
xchg
sbb
clc
mov
ljmp
dec
mov
push
xchg
adcb
sbb
add
xor
pop
adc
imul
insl
cmp
sahf
loop
stc
in
mov
push
rcrb
pushf
cmpl
add
cmpsb
fiadds
das
cltd
cli
ljmp
push
aad
pushf
inc
adc
popa
sbb
mov
scas
testb
mov
ss
cld
mov
je
addb
add
xor
lret
aam
xor
jns
sbb
ss
adc
aam
sbb
lock
or
pop
int3
fisubs
popf
ret
iret
addr16
sub
pop
cli
add
arpl
xchg
divb
sub
hlt
stc
loope
into
jp
sbb
push
mov
inc
enter
lock
adc
cmp
movsl
fmul
xor
out
int3
mov
cli
pop
adc
lret
pop
lahf
xchg
stos
pop
call
mov
lods
movsb
data16
or
dec
daa
cmpsl
xor
sub
xchg
bound
int3
push
cmp
mov
fucomip
dec
mov
mov
push
sbb
imul
shrl
fs
dec
aad
sub
lods
adc
xchg
add
insb
and
push
lock
rol
fdivrl
shl
mov
adc
adc
and
mov
sbb
push
pushf
mov
xchg
imul
and
sub
cmpsl
sbb
lods
inc
xchg
mov
xchg
fnstenv
push
xor
xlat
loope
push
adc
sbb
mov
test
aad
jb
cmpsb
cli
movl
shrl
mov
jmp
sub
mov
dec
inc
jl
jae
cli
filds
and
jg
out
cmp
sbb
sbb
jno,pt
mov
and
hlt
pop
movsb
lods
ds
lds
mov
mov
lahf
mov
and
mov
mov
icebp
push
pop
mov
inc
pop
inc
jmp
push
out
xchg
sarb
fstl
cmp
fs
scas
dec
cmp
dec
jno
pop
in
jo
inc
ljmp
mov
pop
push
pusha
inc
and
mov
ret
sbb
aam
lcall
push
xchg
aaa
jo
imulb
add
test
lea
xor
lock
out
mov
les
pop
sbb
testl
getsec
insl
xlat
enter
repz
lea
daa
les
cli
push
mov
jns
pop
xchg
and
ljmp
fidivrs
movsb
sub
test
stc
fwait
sbb
and
pop
shll
loopne
jmp
or
mov
xchg
ja
outsb
mov
push
movsl
sbb
mov
sbb
test
movsb
push
dec
scas
hlt
sbbl
lds
jge
fnstsw
lock
jo
mov
jmp
inc
inc
cmpsb
mov
push
daa
stos
mov
in
setne
cmpsb
movsb
xor
ret
in
pop
xor
unpcklps
jge
jne
outsb
loopne
div
icebp
adc
add
shrd
inc
add
push
loopne
pop
imull
sub
inc
in
or
ficoml
shlb
inc
fcomi
pop
mov
shlb
mov
sub
stos
gs
mov
rcrb
cmpsl
ret
imul
xchg
and
rcrb
imul
popa
ret
jne
mov
add
aaa
xor
out
push
cli
iret
push
and
mov
xchg
fcmovnbe
mov
in
push
dec
pusha
insl
add
jnp
mov
jno
cmp
cmp
add
lret
inc
xchg
js
imull
shrl
daa
sbb
scas
lods
addr16
cltd
outsl
inc
sbb
inc
add
jnp
aad
fisubrs
inc
jg
popa
sbb
das
mov
lcall
int3
add
test
pop
clc
in
mov
push
lods
in
inc
dec
pop
fnsave
shll
sbbl
cmp
mov
and
in
imul
adc
jo
insl
out
cltd
cmp
adc
int3
or
in
aad
insb
jg
loopne
inc
and
cli
inc
add
or
invd
jns
adc
xchg
sti
xor
mov
inc
push
mov
push
jb
nopl
push
push
sub
jbe
mov
lds
xchg
mov
inc
mov
inc
subb
fsubrl
je
in
addr16
and
pop
xor
pop
sbb
xorb
push
sub
aaa
mov
xlat
test
fcoms
mov
arpl
xorl
lds
notl
jp
nop
sbb
pushf
inc
sti
or
add
adc
repnz
jbe
sbb
out
mov
sbb
shl
xor
inc
inc
add
rorb
scas
xor
mov
adc
push
push
push
push
sbb
cltd
fldl
call
cmpsb
leave
mov
dec
or
push
push
adc
xchg
adc
sub
out
mov
xor
out
sahf
cmp
jae
cmp
repnz
movsb
iret
pop
mov
mov
xlat
adc
pop
dec
push
or
and
mov
pop
dec
imul
rorl
xor
push
jp
scas
jo
jge
fcmovne
mov
xor
sub
and
xor
mov
loope
decb
aas
insb
ss
lds
mov
jbe
sysenter
sbb
cld
xor
sbb
int
das
sub
cmp
xor
mov
rcll
imul
mov
js
push
push
mov
imulb
mov
cmp
das
xor
add
pop
ljmp
pop
jmp
mov
icebp
inc
and
xlat
testl
cli
insb
out
sar
negl
fldenv
pop
cwtl
jl
loope,pt
push
lea
push
cwtl
push
push
pop
xchg
in
inc
shrl
cli
xor
mov
mov
call
xor
scas
call
ljmp
je
scas
test
shl
dec
dec
divl
xchg
jne
leave
mov
jno
jmp
lret
mov
mov
push
mov
cmp
inc
and
mov
inc
mov
arpl
mov
leave
xchg
ljmp
arpl
sahf
je
data16
aas
push
fadds
push
and
sub
mov
inc
mov
dec
xchg
adc
mov
call
adc
sub
in
xor
mov
scas
xlat
inc
cmp
lea
mov
mov
add
or
les
mov
xor
xchg
push
mov
xor
mov
add
cmpsb
xor
fmuls
mov
in
imul
xchg
out
inc
repz
dec
xchg
add
xchg
icebp
push
loope
mov
adc
iret
adc
cmpsl
dec
cwtl
imul
pop
mov
mov
push
aad
push
cwtl
loop
pushf
xorl
stos
mov
pop
outsl
mov
mov
pop
mov
push
data16
add
inc
hlt
jnp
mov
adc
scas
out
std
dec
outsb
mov
daa
rcrl
cltd
imul
hlt
inc
aas
incl
cmpsb
sahf
lods
int3
rep
mov
adc
xorl
sub
cs
fisubrs
cmp
pushf
filds
fidivrs
sub
repz
std
inc
jno
mov
inc
imul
cmp
popa
imul
add
std
sub
notb
stc
imul
mov
movsb
clc
lods
pop
and
jp
mov
xor
sti
mulb
stos
mov
addl
mov
mov
sbb
rcr
add
cwtl
cmp
test
and
insb
ljmp
cmp
inc
mov
les
mov
fxam
xchg
movsb
sti
mov
fwait
stos
jge
repz
dec
pop
cmp
movsb
imul
push
mov
push
xor
stos
aam
decb
fdivl
xor
push
sub
cltd
dec
xor
xchg
dec
push
wrmsr
in
loope
xchg
push
mov
insl
cmp
add
sub
cmc
ljmp
dec
sub
imul
mov
aam
xor
cld
add
or
fimull
cmpsb
cmp
push
add
sbb
jbe
inc
add
les
or
stos
iret
int
aad
inc
pop
ljmp
and
add
pop
or
xor
icebp
das
leave
xchg
xchg
imul
or
dec
inc
jle
scas
sarl
repnz
cmp
pop
cld
addr16
mov
sbb
pop
pop
sbb
or
stos
sti
sbb
pusha
fdivs
mov
jecxz
testb
imul
and
movsl
imul
sbb
jecxz
int3
dec
xchg
mov
push
pop
pop
add
push
mov
jle
push
jae
pusha
cltd
cli
gs
mov
cltd
mov
gs
jmp
or
out
adc
push
out
push
xchg
inc
jl
xchg
push
add
and
in
and
scas
cltd
or
ja
dec
dec
push
lret
or
aad
sbb
xor
gs
ss
icebp
fstps
xor
hlt
and
stc
cmp
int3
xchg
clc
push
inc
adcl
sbb
cmp
data16
int3
sahf
mov
cmpsb
xor
addr16
mov
jb
inc
add
nop
mov
stos
xlat
std
mov
jb
and
into
sti
idivl
fwait
stos
mov
lods
subb
fnstcw
es
lret
dec
fidivrl
jp
lahf
mov
push
movsl
dec
dec
jnp
in
add
lock
or
mov
or
cmp
push
scas
jbe
lret
lods
inc
jmp
es
add
fs
push
pop
sarb
mov
and
cmp
je
daa
inc
jl
and
push
sbbl
enter
lcall
cli
jle
pushf
mov
inc
cmp
pusha
sub
push
pop
je
push
adc
xor
mov
sbb
inc
or
mov
mov
push
push
pop
lcall
pop
or
sti
out
push
and
sbb
test
outsb
mov
jp
lods
or
sub
lods
lock
pop
push
cmp
repz
adc
pop
cmc
adc
mov
xchg
js
jp
jbe
sub
or
xor
aas
nop
mov
rolb
add
xchg
std
mov
shrl
or
fs
gs
cmp
js
pop
cmpsb
mov
inc
xchg
popf
sbb
jae
insl
lret
dec
clc
cmp
or
jmp
xchg
ljmp
sub
lods
push
and
sbb
mov
cmp
movsb
xlat
cmp
and
xchg
xchg
in
test
repnz
mov
push
mov
pop
cli
andb
test
mov
sub
mov
inc
sti
inc
or
dec
incb
mov
jnp
jb
fmull
lret
sbb
inc
insb
fmul
scas
fisubl
insl
add
mov
xchg
dec
push
or
jae
out
mov
hlt
inc
pop
call
sbb
mov
sub
pusha
pop
sbb
stos
rsqrtps
xchg
jo
fcoms
xchg
ret
mov
lods
xlat
ja
sub
mov
subb
out
mov
mov
out
mov
push
mov
addr16
mov
adc
cmp
test
xor
leave
dec
pop
in
and
mov
inc
outsb
in
push
sbb
frstor
push
rolb
rorb
out
jg
arpl
sub
fmuls
sub
ss
fwait
insl
sbb
imul
xor
xlat
sarb
mov
mov
inc
pop
leave
sahf
aad
xchg
and
and
and
or
and
cmp
outsl
int3
cmpsl
test
xchg
jo
mov
aaa
push
movsb
loopne
sbb
sbb
rcl
lods
or
push
jb
gs
cwtl
sbb
jecxz
lds
push
and
or
lret
sub
jecxz
and
popf
stos
xchg
popf
xor
pop
fs
mov
nop
rorl
aam
and
mov
in
outsb
mov
sub
cmp
and
test
xchg
rorb
enter
push
mov
pop
or
xchg
loopne
add
out
dec
push
jmp
ret
movsl
fdivrl
mov
aam
pop
lds
inc
pop
fwait
cmp
jnp
punpcklwd
lock
sarl
data16
dec
xor
sbb
clc
inc
repz
pop
repnz
mov
dec
pushf
ret
pop
push
dec
push
jno
or
mov
fs
test
shlb
lea
addr16
fs
test
lea
popl
test
jb
imul
fucom
or
lret
std
imul
adc
cmp
in
das
jbe
subl
sub
jmp
out
cmpsl
sahf
std
enter
pushf
push
ja
addl
cmpsl
mov
loop
ja
pop
pop
push
mov
lock
push
andl
xor
pop
push
jae
sub
mov
dec
or
stos
cmp
cmp
sub
shl
shrb
jbe
or
jo
xor
dec
cs
loope
dec
mov
adc
pushw
cmp
out
insb
add
dec
mov
inc
repz
outsl
add
push
ret
arpl
pmullw
xchg
push
mov
leave
add
sub
test
aad
and
divl
aaa
mov
pop
fdivp
mov
mov
sbb
outsl
pusha
nop
adcb
sbb
pop
daa
push
dec
mov
movsl
mov
loopne
lds
hlt
jb
xchg
sub
ret
fbld
xchg
pop
inc
xor
ret
push
add
xor
mov
stos
in
lods
push
xchg
xor
cmp
pop
xchg
lods
xlat
xchg
call
or
xchg
adc
mov
sub
outsl
xchg
cmp
jno
ja
push
test
fisttps
test
xchg
mov
push
xor
or
cmpsb
add
loopne
repnz
popf
mov
xor
in
mov
xchg
sbb
ret
ret
test
ficoms
jbe
jae
movb
stos
mov
std
fsts
mov
inc
and
out
mov
push
push
lock
xchg
into
mov
ret
cmp
xchg
push
cmc
add
test
decb
lods
or
jno
sub
mov
jg
ret
les
sub
into
dec
int3
xor
push
bound
fwait
xorl
popf
bound
and
dec
mov
loop
je
imul
cs
test
push
leave
ljmp
xchg
je
fidivl
inc
in
orb
fwait
sub
mov
or
roll
sahf
shll
fnsave
aam
add
sub
je
jl
xchg
lock
pop
mov
sbb
cld
push
scas
push
lret
cmp
cmp
jg
popa
cwtl
pop
cmpsl
jp
cmp
das
outsl
xchg
scas
xor
std
out
sbb
in
pop
inc
cmp
jb
in
push
stos
xchg
xor
sbb
cmpsb
movsl
nop
aam
adc
pop
rcr
xlat
adc
mov
dec
sub
and
out
mov
lock
ss
ja
in
adc
and
mov
inc
push
mov
in
jle
cmp
xor
ds
push
scas
repz
inc
inc
dec
pushf
dec
popa
jns
adc
mov
sbb
inc
lea
mov
movaps
dec
dec
inc
jecxz
adc
adc
sbb
mov
lret
xchg
dec
mov
jo
mov
lcall
lret
pop
push
sub
sub
sbb
mov
in
stos
pop
cmp
insl
stos
mov
and
and
cmp
dec
stc
rcr
sbb
cmp
sub
inc
cmp
in
nop
mov
sti
ja
xor
xor
mov
pushf
push
cmp
xlat
xchg
shrl
adc
push
mov
mov
lds
dec
xor
jbe
xlat
jnp
adc
push
xchg
stos
inc
or
push
out
shlb
jp
mov
push
in
fmuls
jns
cmp
fiadds
xchg
loopne
xchg
mov
ret
pop
fidivl
cmp
stos
dec
pushl
mov
fisubl
xchg
cmp
bound
jb
sub
insl
aad
xchg
lods
es
cmp
mov
inc
mov
xchg
and
dec
movsl
loope
hlt
movsb
icebp
xchg
xor
movsb
pop
mov
cmp
xchg
cmp
cmp
jae
lods
scas
fiadds
leave
ljmp
mov
ret
shrb
out
aad
mov
jnp
push
or
dec
roll
mov
mov
nop
dec
cmp
insb
loop
ret
cld
dec
mov
cmp
mov
mov
or
shll
repz
xchg
push
movsl
push
sbb
jl
divb
movsl
movsb
jp
in
jecxz
adc
insb
nop
rorb
stos
mov
repz
push
shl
out
pop
add
cmpsl
cmp
insb
cmpsb
mov
ret
sub
sub
jns
cmp
iret
mov
mov
std
das
lea
or
jo
sub
dec
mov
mov
push
test
movsl
outsb
adc
jp
push
arpl
push
and
dec
xchg
jb
xchg
int3
mov
mov
dec
cmp
lods
cmp
sbb
cltd
jbe
adc
sub
dec
fisubs
ljmp
call
aaa
dec
pushf
mov
and
scas
insl
cmpsb
daa
inc
or
ja
inc
jns
aas
adc
inc
xchg
inc
push
jo
and
aad
or
dec
aaa
notb
imul
jno
fdivs
ss
shrb
data16
insl
mov
pop
mov
test
decb
add
jecxz
push
cmpsb
inc
add
push
leave
loopne
xchg
cmp
mov
mov
inc
jg
add
sub
nop
push
outsb
cmc
ja
imul
mov
mov
cmp
push
popf
inc
xchg
test
jbe
clc
cmc
movsl
cmp
inc
in
jg
test
inc
adc
loopne
jae
lock
xor
scas
sarb
and
mov
and
frstor
push
cmc
dec
pop
mov
jg
int
sahf
lods
ljmp
cmp
pop
es
mov
add
out
call
or
sub
fidivrl
dec
jae
subb
es
cmp
mov
mov
sbb
mov
lods
xchg
repnz
rclb
fld1
cmp
push
pop
and
shlb
cmp
in
pop
stos
cmp
nop
push
and
ds
mov
nop
xor
pop
adc
jns
es
call
pop
fisttpll
aas
and
psadbw
and
dec
insb
out
lea
inc
add
cmp
lock
ficoml
clc
lock
iret
dec
or
pop
pushf
push
pop
lds
cwtl
mov
insl
arpl
in
and
pushf
jmp
fildl
outsb
pusha
mov
scas
out
push
pop
adc
leave
loope
cmp
fldcw
dec
mov
pusha
int3
push
out
push
pop
xor
cmp
fidivrs
add
rcll
popa
sbb
test
adc
cli
inc
inc
push
das
in
divl
xchg
dec
lods
mov
adc
pop
inc
mov
add
xor
add
or
push
sub
jle
xor
lret
ljmp
cmp
cmpsb
popf
scas
mov
les
call
jl
in
xlat
jo
loope
jp
mov
mov
xchg
daa
popa
daa
out
insl
test
push
xor
push
popa
cltd
and
mov
pop
pop
out
push
divb
or
ret
mov
and
into
jae
push
mov
arpl
sub
jns
insb
ljmp
sub
adc
or
sub
mov
js
fwait
sub
lcall
imul
pushf
ljmp
adc
inc
andb
jp
xor
inc
and
insb
mov
cmp
in
stos
xlat
fidivs
fstpl
pop
sahf
stos
into
and
xchg
push
in
jno
stos
sbb
jmp
icebp
mov
jns
sti
movsb
lahf
jb
pop
cwtl
jno
cli
sub
sub
incb
out
jp
inc
push
add
and
lds
fxch
inc
insb
add
inc
aad
sbbl
fistpll
jne
mov
mov
int3
lret
lock
hlt
ss
xchg
push
jl
inc
mov
add
fwait
cmp
xchg
out
push
pop
sbbl
cmp
push
mov
sub
imul
daa
in
hlt
mov
add
push
cmp
arpl
mov
cli
inc
dec
fnsave
push
bound
dec
xchg
cmp
push
in
xchg
gs
fcomp
and
cld
clc
adc
inc
cmp
scas
dec
idivb
add
insb
xchg
xchg
mov
push
test
dec
or
andb
sbb
jo
enter
jo
sub
movsl
pop
call
fst
jno
sub
or
imull
add
dec
mov
jp
ds
adc
mov
leave
test
loopne
mov
xor
mov
lahf
lea
icebp
out
mov
sbb
or
arpl
push
push
dec
or
loop
repnz
es
inc
addr16
imul
lods
shl
scas
dec
movb
jns
xor
pop
push
sub
mov
mov
and
xchg
lahf
les
xor
jb
mov
gs
push
lret
icebp
insb
mov
or
and
clc
mov
xor
add
sbb
fmulp
icebp
xchg
add
inc
mov
loope
gs
pop
or
jne
cmc
mov
sahf
int3
pop
mov
pop
mov
cmp
xchg
xchg
inc
adc
fcomps
and
leave
fbstp
push
ljmp
cmpsl
cld
not
shr
cmpsl
cli
push
jp
mov
test
cmc
dec
roll
mov
pop
dec
lret
push
mov
add
cmp
xor
ret
cwtl
add
jo
inc
out
rclb
test
addr16
sbb
in
inc
xor
jmp
sub
je
adc
and
sub
loopne
ficomps
nop
lcall
fwait
mov
and
dec
xor
in
lods
repz
dec
cltd
mov
je
jnp
add
jo
and
jecxz
push
push
and
pop
pop
mov
rclb
pop
lret
ds
push
es
sbb
stc
xchg
mov
adc
rorl
rorl
mov
cmpsb
loop
jo
stc
sub
mov
decl
aam
cld
jnp
mov
repnz
cmp
mov
repz
inc
push
orl
jo
pusha
popa
cltd
sub
pop
add
mov
outsl
xchg
sub
loope
jne
test
rcrl
stc
inc
mov
into
mov
nop
xchg
and
inc
cmp
fildl
imul
outsb
movsl
jecxz
xchg
popa
xlat
mov
jle
mov
insb
mov
and
gs
js
out
lds
cmp
gs
pop
pop
das
cwtl
lret
jecxz
pop
in
js
push
shll
inc
shr
cmc
cmp
mov
push
adc
inc
fldl
xchg
jns
out
mov
call
bound
sub
outsb
je
pop
sub
dec
and
mov
popf
sbb
movsb
inc
fcoml
inc
rcrb
das
pop
leave
jb
push
testb
cltd
sbb
cmpsl
ds
lea
subb
ffree
in
aam
xor
mov
dec
loop
mov
push
fwait
adc
mov
pop
insl
or
mov
enterw
test
test
inc
shrl
addl
or
shrb
ret
in
popf
mov
cli
dec
and
ds
lds
fisttpl
rcrl
pop
jbe
aas
loopne
inc
cld
lret
xchg
dec
sbb
pop
fcmove
shl
xchg
xor
pop
and
jecxz
push
jns
lret
movsl
mov
cmp
ljmp
aam
mov
jl
test
push
and
or
nop
in
outsl
fsubrl
xor
mov
xor
stos
pop
sti
cmp
adc
loop
fisubs
in
scas
clc
test
addr16
movsb
imul
adc
xchg
cmp
pop
inc
insb
mov
cwtl
shrb
cmp
stos
mov
adc
outsb
fmulp
pusha
lods
xor
pop
cmc
sub
repnz
or
popa
out
sub
daa
push
push
roll
sub
mov
std
xrelease
lods
insb
and
jnp
incl
aaa
jecxz
push
int
ret
or
lahf
inc
popf
push
shll
jo
mov
lea
push
fmuls
cmp
or
inc
dec
cmp
adc
adc
mov
pop
push
jns
iret
jg
mov
cmc
and
push
jge
scas
mov
lock
ror
xchg
ss
imul
in
ds
bound
leave
dec
jecxz
dec
adc
mov
lds
sub
outsl
xor
cld
sahf
dec
xchg
cmpsl
mov
mov
repz
fistl
jae
mov
sbb
movsb
add
insl
movsb
les
ds
out
sub
call
push
sbb
shr
daa
scas
inc
xor
inc
cmp
mov
ret
insb
and
xchg
jle
inc
sti
cmp
push
das
cltd
mov
sub
mov
jae
ss
xchg
mov
mov
sub
shl
mov
bound
mov
fldt
lret
xorl
icebp
out
push
inc
inc
sahf
out
scas
xchg
and
jne
popf
inc
mov
add
and
pop
dec
push
push
dec
dec
xchg
push
push
xchg
inc
xchg
push
dec
jb
jmp
sbb
pusha
adc
popf
jne
push
aaa
lret
int3
jl
xor
dec
sub
shlb
mov
and
loop
in
jnp
mov
adc
cmp
sub
push
mov
rcll
jmp
push
xchg
testl
hlt
or
xchg
mov
out
mov
in
mov
bnd
fnsave
rorl
cltd
in
pop
out
lret
dec
jmp
cmp
xchg
cmp
pop
imul
or
arpl
mov
movsl
xor
inc
or
popf
sub
cs
cwtl
outsl
sti
les
movsl
xchg
sub
jecxz
jecxz
inc
jl
inc
add
lock
movsl
cmp
pop
outsb
cmp
xchg
out
push
jmp
loopne
xchg
dec
and
mov
negl
mov
cmp
or
es
adc
add
shrb
pop
pop
out
loop
pusha
inc
xchg
and
mov
sahf
shlb
mov
jmp
scas
loopne
xchg
cltd
mov
or
clc
fwait
mov
pop
sub
jo
ljmp
xor
inc
movsb
cmpsb
xor
cwtl
outsl
dec
arpl
por
sbb
outsl
and
fsubl
cmpsl
jno
pop
loopne
inc
test
aaa
adc
stc
adc
nop
mov
loope
xor
pop
xor
inc
push
adc
cs
mov
fwait
outsb
mov
lret
xchg
int
push
xor
scas
scas
push
xor
inc
dec
ret
cwtl
xlat
mov
and
push
pushf
push
lods
or
dec
in
pop
sub
mov
icebp
mov
lea
lret
cmp
xor
jno
xchg
mov
ret
push
loop
adc
test
shrl
adc
push
test
popa
arpl
sarb
in
jb
stos
insb
cwtl
add
outsb
mov
jle
rclb
add
das
in
dec
test
mov
or
loope
iret
inc
out
test
ds
dec
adc
push
mov
inc
adc
and
jae
push
scas
push
cmpsl
cli
stc
imul
xchg
dec
iret
jno
inc
cmpsl
mov
mov
mov
mov
push
jb
mov
out
ret
mov
jb
cmc
xor
mov
je
mov
mov
outsb
mov
nop
sbb
and
lea
cwtl
scas
add
orl
and
pop
adc
push
xchg
mov
icebp
gs
pop
adc
pop
inc
pop
jno
and
adc
shrb
bound
sub
mov
pop
jl
push
gs
xchg
jns
pushf
cltd
add
sub
xlat
mov
push
or
daa
dec
nop
cmpsl
and
loope
enter
aam
clc
inc
fildll
pop
leave
stc
jl
inc
test
ds
jb
pop
sbbl
fwait
push
sbb
insl
add
sub
cmp
mov
mov
mov
movsl
and
aad
out
fld
lret
mov
ret
lods
xlat
pop
or
pop
push
xchg
insb
roll
jne
scas
mov
dec
xchg
aam
imul
xchg
jns
fnstenv
arpl
mov
mov
or
push
push
mov
test
push
pop
inc
lods
sbb
jmp
imul
xor
inc
mov
jb
push
fsubp
pop
sbb
mov
dec
fidivrl
xor
mov
jecxz
push
cmc
add
push
cmpsl
ljmp
dec
mov
daa
cmp
pop
outsb
mov
inc
or
cmp
lock
dec
test
mov
inc
and
nop
enter
jp
int
in
dec
push
xchg
in
shll
add
or
lods
pop
outsl
jo
ds
push
push
fsubrs
lret
adc
loope
push
xchg
fmull
push
test
iret
dec
pop
xchg
dec
repnz
cmp
jne
sbb
aaa
sub
cmpl
insb
push
adc
fwait
mov
jge
sbb
jns
sbb
push
into
xchg
rcll
fiaddl
cli
jg
iretw
ss
lahf
insl
xor
aad
mov
adc
jno
and
xor
into
es
adc
cwtl
addr16
mov
dec
scas
movsl
jl
shlb
sub
rcrl
not
les
in
push
out
daa
jnp
sub
bound
rol
mov
xor
cmp
jmp
sub
inc
adc
mov
xor
jb
xchg
pop
xchg
mov
xor
notl
int
out
and
mov
mov
loope
mov
or
imul
push
pop
call
xchg
mov
lods
sub
arpl
push
bsf
mov
jl
adc
lahf
or
jb
ljmp
jno
idiv
sti
mov
call
movsl
stos
xor
out
aam
lret
or
jle
leave
dec
push
ss
mov
outsb
shlb
sub
sub
jg
jb
mov
cmp
sbb
leave
sbb
pop
fadd
mov
mov
jecxz
shr
mov
jmp
jmp
inc
outsb
in
div
cld
sbb
pop
xchg
fs
sub
cmp
jnp
lock
cld
mov
sub
cmp
sbbl
fs
repnz
ja
mov
push
pop
out
cs
outsb
add
and
inc
push
and
cwtl
leave
addr16
or
jne
mov
cli
and
push
sti
dec
push
pop
insl
adcl
jns
mov
notb
xchg
mov
jno
cmpsl
mov
mov
mov
add
cltd
xlat
mov
outsl
dec
push
lods
push
dec
jae
xchg
ret
push
sub
jp
popa
mov
faddl
mov
lret
in
dec
dec
notb
int
push
popa
pusha
mov
sbb
dec
bound
cmpb
jge
push
negb
scas
sub
call
pop
cld
aam
jge
mov
fs
adcl
test
lods
inc
test
push
int3
jb
xchg
ficompl
ret
rolb
push
mov
fsubr
lret
cmp
adc
and
or
inc
push
mov
outsl
std
and
int3
scas
pop
jo
mov
jl
dec
xchg
sub
jb
pop
sarl
push
test
jno
int3
test
les
jo
add
or
pop
jo
ds
push
xor
cmp
cmp
cmp
stos
call
sub
or
jl
xchg
pop
jb,pt
dec
or
mov
adc
dec
mov
cwtl
push
sahf
cmp
orb
sahf
mov
push
lcall
testl
mov
or
xlat
cmc
shlb
lods
adc
or
call
jmp
bswap
add
in
ficomps
xor
scas
fs
adc
mov
js
adc
sbb
push
fisttpll
in
mov
adc
inc
add
cmc
dec
scas
mov
push
repz
das
popf
push
jp
cltd
mov
enter
movsb
sbb
addb
mov
xchg
lea
push
jb
dec
add
cmp
pushf
add
xchg
jecxz
inc
ret
sbb
xor
sub
inc
jle
ret
mov
jo
jecxz
popf
push
lret
mov
outsl
push
fldenv
je
out
add
mov
mov
sub
imul
popf
fwait
lret
xchg
sub
aaa
pop
sbb
outsb
sahf
add
int3
aad
sbbl
fstps
les
jmp
fiaddl
pusha
test
xchg
movq
mov
test
hlt
popa
dec
enter
push
push
movsl
les
inc
pop
and
adc
sub
rcrb
sub
bound
imul
adc
dec
sub
arpl
cmp
xchg
into
je
mov
mov
mov
fnstcw
lret
inc
repnz
insl
popf
popa
inc
mov
mov
xlat
cmp
or
mov
sbb
and
dec
inc
sbb
push
rcll
xchg
sarl
stc
fiaddl
or
outsb
and
fsts
jbe
data16
adc
xchg
and
js
mov
gs
jg
pushf
in
jnp
loop
or
or
xchg
inc
in
inc
xchg
out
dec
xchg
cs
test
nop
or
notl
ss
adc
push
mov
sbb
js
add
mov
add
int
fdivs
mov
cmp
test
lcall
sub
lea
jb
in
call
push
fadds
ficompl
jecxz
push
cmp
out
cmp
inc
sub
sbb
mov
push
aas
pop
lds
xchg
sti
cmp
addr16
addl
lea
and
int
arpl
pop
xchg
repz
ja
lret
cmp
icebp
mov
jle
cmpsl
in
cmp
js
cmp
popf
sub
rolb
mov
xchg
data16
add
or
xor
dec
out
xchg
mov
testb
int
sub
pop
lods
test
mov
ja
lea
fs
cmpsl
ret
call
call
dec
ror
loop
jnp
incb
and
jnp
pop
std
cmp
xchg
loop
push
pop
add
jmp
popa
dec
or
jl
adc
inc
ds
mov
in
lret
mov
aaa
pop
test
lods
sub
scas
jno
push
inc
loope
mov
std
hlt
je
xor
add
or
shrl
enter
fidivrl
repz
cwtl
ret
mov
xchg
fdivs
addr16
call
stos
es
xchg
and
inc
jae
pop
jg
popa
sbb
jge
xor
int
add
pop
inc
ror
pop
in
cmp
loopne
push
pop
mov
and
imull
in
psubsw
xor
mov
into
sbbb
imul
rorb
pop
push
xor
xorb
sub
xorl
pop
aaa
mov
push
pop
jl
hlt
jbe
adc
fisttpll
adc
ja
push
adc
mov
or
adc
ja
inc
jb
cmp
dec
push
loopew
movsl
adc
rcr
int3
and
mov
push
pop
test
in
jecxz
lcall
or
adc
mov
adc
mov
cltd
cmpsb
lea
and
pop
andb
int
dec
mov
icebp
mov
ja
addr16
mov
cwtl
add
jl
adc
test
int
pop
stos
or
arpl
lds
subb
mov
bound
cmp
cmpsb
cli
xlat
add
or
hlt
xor
shrl
sub
imul
jg
data16
idivl
push
imul
add
in
or
hlt
mov
and
cs
aas
jns
dec
shr
mov
push
testb
notl
xchg
sub
imul
fcmovbe
and
jge
jns
sbb
mov
or
push
shrl
push
inc
mov
jo,pn
sbb
mov
dec
sbb
pusha
pop
push
inc
nop
xor
test
jb
push
jmp
cmp
mov
loope
jmp
xor
mov
sbb
inc
push
mov
push
adc
cmp
lea
cmp
sub
call
comiss
inc
adc
test
jno
addl
out
jo
sahf
dec
jg
ret
jns
cmpsl
imul
push
leave
mov
mov
add
cmc
std
mov
in
push
dec
ds
es
test
fcomi
outsb
outsb
jle
mov
push
mov
cli
sahf
sbb
cld
dec
adc
and
cmp
cli
lahf
cmpsb
inc
xor
cmp
inc
xchg
ret
inc
mov
cmpsl
ror
xchg
and
mov
out
cltd
hlt
inc
dec
sarb
bound
fwait
stc
xor
pop
lahf
jns
or
mov
sbb
sub
and
out
cmp
out
sub
push
faddl
xor
mov
cli
loopne
sub
inc
test
divb
pop
roll
movsl
adc
test
mov
lret
mov
in
das
stos
adc
xor
lea
ret
push
sahf
fs
sarl
fstpl
add
shlb
test
jae
ret
pop
cs
popa
bound
in
push
xor
out
push
ljmp
mov
mov
mov
scas
push
jae
add
jge
mov
idivl
jb
dec
fwait
add
or
iret
sub
xchg
dec
daa
fwait
in
repz
push
fs
and
nop
mov
lods
pop
and
or
or
or
fs
mov
pusha
sti
mov
pusha
cwtl
lcall
mov
add
rorl
test
mov
inc
rcr
xchg
sbb
jb
orl
lock
popa
ffreep
pop
adcb
loope
repz
xor
lret
xlat
addr16
adc
or
and
xor
stc
iret
sub
push
mov
inc
repnz
pop
push
xor
fisubrs
out
jg
push
pop
dec
sub
adc
test
and
cmpsl
cmp
sbb
push
shll
adc
push
idivb
jmp
sbb
mov
dec
xchg
or
clc
sbb
cmp
stc
int
inc
xchg
mov
or
in
enter
ret
hlt
jmp
jg,pn
push
or
fidivs
mov
pop
fwait
rclb
divl
imul
push
out
imul
loopne
mov
in
dec
sbb
movsl
or
ret
push
orl
and
adc
pop
xor
les
testb
into
adc
sbb
and
hlt
xor
lock
inc
jb
or
sub
pushf
std
dec
dec
adc
shlb
sub
xchg
aam
jnp
pop
dec
enter
imul
and
lods
adc
pusha
out
xor
cmp
lahf
push
and
es
jae
leave
std
cmp
mov
stos
rcrb
mov
xor
push
mov
js
xchg
inc
xchg
lcall
dec
jne
pop
outsl
jne
dec
and
repz
es
pop
scas
aam
mov
push
mov
mov
stc
stos
dec
xchg
popf
mov
add
sbb
iret
lods
jne
or
and
rclb
mov
adc
cmp
out
adc
pop
and
or
int
jbe
mov
das
mov
iret
gs
stc
lcall
jg
adc
inc
std
fcomp
fisubrl
lfs
mov
mov
addr16
repz
mov
pop
int
movsb
xor
fistpll
push
fidivrl
mov
xchg
adc
or
add
fldl
cli
fcoms
dec
pop
inc
int
out
fs
repz
lea
mov
xchg
mov
rcrb
and
jecxz
out
mov
popf
mov
cmp
xchg
cmp
push
pop
push
cli
scas
pop
add
sti
loop
and
pop
fnstcw
jb
adc
jno
std
js
gs
ljmp
gs
push
jmp
ss
lret
mov
cmp
mov
fisubl
std
addr16
cmpsl
dec
or
shlb
movsb
out
sahf
out
shll
and
xor
js
aam
push
in
das
stos
cmpsb
xchg
lret
in
inc
sub
mov
cmc
data16
mov
xor
jbe
xor
popa
xor
cmp
scas
pop
pop
jnp
inc
int
push
mov
fidivrs
ljmp
add
das
cmp
mov
add
jno
jo
orb
mov
dec
add
sbb
nop
mov
pop
sarb
dec
jnp
fbstp
shll
cmp
adcb
or
jecxz
jns
cld
mov
sub
mov
daa
lcall
lods
popf
pop
cmp
jle
fnstcw
dec
in
sub
subl
aad
loop
jno
fcomip
mov
xchg
fcomip
xor
sub
add
popa
enter
mov
xor
rol
insl
movsl
hlt
test
test
shrb
rcrb
es
xchg
repnz
adc
sub
pop
pushf
int3
lahf
dec
imul
ret
pop
dec
aaa
cmpsl
add
nop
sarb
push
sub
jge
inc
fstpl
xor
out
sbb
xlat
js
xchg
lret
dec
data16
dec
mov
push
mov
mov
popf
lret
cmc
or
leave
test
and
imul
test
stos
divl
scas
dec
mov
cmp
hlt
xchg
mov
lret
movsl
sub
lret
int
or
add
jno
or
enter
or
sub
out
xchg
cli
add
xchg
jne
pop
sub
test
fwait
jge
add
jg
sub
mov
pop
cmpsl
fwait
pop
loopne
loope
mov
sbb
in
dec
cmc
sbb
mov
mov
adc
and
add
sbb
cld
fbld
mov
imul
or
adc
lods
nop
inc
out
pop
sbb
mov
adc
jns
jmp
ret
jne
cmpl
pop
and
pavgw
mov
inc
fiaddl
iret
outsl
sub
mov
gs
sbb
lcall
pushl
mov
add
ja
je
lahf
jae
dec
scas
int3
xor
and
hlt
and
hlt
dec
cmpsb
lock
jbe
dec
pusha
pop
cmp
dec
fucomip
test
mov
xchg
imul
mov
arpl
rol
mov
sbb
push
faddl
ljmp
inc
in
sub
stc
les
add
sub
push
imul
cs
mov
movsl
outsl
mov
lock
push
jae
add
mov
or
mov
xchg
mov
mov
sbb
jp
pushf
data16
add
and
xchg
push
push
lcall
mov
pop
stc
stos
add
into
xchg
ljmp
shll
shll
test
lret
out
pop
int3
sub
mov
mov
ljmp
test
adc
add
outsl
test
lret
sub
fnstsw
jno
jo
jns
movsl
les
cmpsl
xor
mov
sbb
iret
movsb
ja
push
into
and
stos
lods
aad
jb
test
cmp
mov
sbb
lods
imul
mov
push
repnz
in
xchg
pop
sub
jmp
pop
xor
and
mov
xor
dec
fs
xchg
iret
sbb
inc
daa
jb
push
out
and
jecxz
popa
inc
lahf
xlat
push
add
inc
push
cwtl
mov
aaa
adcl
pop
pop
xchg
inc
jne
mov
js
cli
and
lea
adc
fldcw
ficoms
pushf
dec
pusha
arpl
test
cmpsb
jae
xchg
push
xchg
or
mov
mov
imul
xor
outsl
int
fidivs
cmp
mov
jno
push
inc
add
adc
push
sbbl
lock
jo
fidivs
mov
pop
aam
jle
pop
push
cmp
fs
add
scas
push
push
mov
mov
adc
pop
js
popa
aas
icebp
loopne
bound
sahf
repnz
mov
vunpcklps
jns
notl
enter
fsubp
out
or
sub
adc
mov
mov
push
lcall
sbb
add
rcrb
push
scas
pop
jae
clc
mov
dec
xor
jae
push
out
pop
das
adc
add
push
std
inc
and
push
xchg
cmp
cmp
adc
fstpt
or
xor
push
orb
gs
lea
dec
es
jno
dec
jno
stos
popa
fbstp
or
xchg
pusha
insb
xor
gs
orl
outsb
test
add
sbb
xchg
push
mov
out
loope
pop
shrb
popf
pop
stos
ret
jno
cmpsl
add
movsb
push
sbb
inc
es
xchg
xchg
xor
inc
sahf
test
popf
dec
hlt
adc
cltd
fsts
fldenv
pop
push
int
xchg
cmp
push
xchg
loop
gs
lcall
xor
repz
movsl
rcrl
mov
cmc
xchg
pop
rolb
jns
repnz
xchg
sub
and
sbb
xchg
cld
mov
or
pop
push
lahf
popa
adc
fdivrs
negl
popf
xor
jo
clc
stos
add
pop
adc
fnsave
ret
pand
push
sub
loop
fcoms
sbb
push
dec
inc
sti
mov
jg
lret
add
ds
pop
adc
popa
jb
add
test
push
xor
imul
xchg
shrl
shrl
dec
lea
jl
cld
stc
mov
in
rcll
aaa
shlb
sar
xchg
dec
add
dec
cmpb
rorl
dec
sbb
dec
inc
leave
std
push
push
push
dec
inc
in
inc
mov
sbb
xor
pop
shlb
hlt
lret
insl
sahf
repnz
and
jp
leave
and
nop
xorl
sub
out
es
and
cmp
filds
stos
mov
adc
add
insb
iret
jnp
sub
or
or
add
inc
dec
jnp
xchg
in
imul
mov
ja
aas
pop
leave
stc
adc
lock
test
xor
faddp
mov
mov
and
and
mov
dec
jl
divl
sub
hlt
pushf
test
or
xchg
std
push
testb
mov
jne
imul
mov
test
mov
addr16
cmp
xchg
ficoms
push
xor
mov
sub
les
fwait
test
or
jmp
xchg
into
mov
out
int
or
mov
jmp
jnp
cmp
add
pop
push
mov
mov
adc
decb
xor
fldcw
inc
sbb
xor
fs
mov
stc
das
pop
ret
jecxz
xchg
mov
or
out
scas
call
loop
stc
or
or
imul
aad
imul
lods
sub
and
cmp
push
pop
rclb
adc
les
scas
cmp
push
pop
pop
mov
sarb
ljmp
out
fcomps
push
pusha
les
std
jp
dec
loopne
mov
mov
cs
mov
cmovp
sub
push
nop
pop
cmp
cmp
add
dec
or
mov
xchg
adc
add
xchg
loope
aaa
mov
jmp
movl
pushf
cmp
insb
xor
and
sub
xchg
cltd
dec
arpl
fsubr
mov
pop
incl
mov
adc
ja
jno
popf
popa
push
nop
int3
xchg
ret
sub
ja
add
insl
in
icebp
cmp
mov
in
scas
push
pop
pop
gs
mov
popa
mov
xorl
push
out
ljmp
sti
mov
outsb
sbb
xchg
jmp
push
xchg
divb
arpl
rolb
cmpsb
and
sahf
push
jle
jle
aad
push
mov
inc
std
sbb
cmp
mov
or
shll
stos
das
adc
in
insl
add
lds
cmp
lret
pop
xchg
push
fcmovnb
scas
lods
or
in
xchg
mov
inc
sbb
cmp
es
lods
cmp
ret
mov
insb
xchg
stc
jl
fsubs
pusha
mov
shrb
cmp
pmullw
inc
fldenv
pop
cld
pop
or
mov
lea
or
icebp
movsb
and
out
dec
xchg
shl
lods
mov
adc
imul
pop
jae
rorb
pop
jae
lea
cmp
aad
incl
add
cmp
pusha
in
into
cmp
lret
mov
pop
aas
aad
push
inc
adc
jb
outsl
and
repz
daa
cli
inc
imul
add
adc
mov
aam
mov
add
test
fstpt
fcomip
test
imul
dec
lea
inc
dec
adc
negb
ljmp
arpl
pop
test
lods
pushf
nop
ja
leave
subb
fsubrs
xor
pop
adc
xchg
rolb
out
and
scas
imul
mov
popl
es
push
mov
fld
clc
sub
push
sub
lcall
jno
adc
ja
sub
jle
movsb
lods
or
rcr
dec
pop
addr16
jle
call
xchg
mov
and
es
stos
cmpsl
adc
ljmp
cmp
mov
jo
int3
dec
cwtl
rolb
jmp
mov
scas
dec
push
or
dec
xchg
iret
cld
pop
mov
xchg
cld
test
xor
pop
fbstp
insl
jl
int3
scas
and
in
in
int3
ret
xchg
es
cltd
ret
cmpsl
stos
sbb
xchg
adcb
sahf
aas
enter
and
nop
je
in
pop
pop
inc
and
test
xchg
imul
movsl
dec
adc
lahf
dec
fwait
cli
mov
jae
fistl
popf
mov
xchg
pop
int
dec
jnp
sub
es
xor
add
sbb
or
clc
bound
xor
push
xchg
das
dec
insl
inc
mov
repnz
in
pushf
adc
ljmp
sti
jle
jge
pop
cmp
bound
dec
js
lret
inc
or
enter
xchg
xchg
mov
jmp
pop
in
xchg
mov
out
js
sub
add
mov
mov
mov
je
testb
lret
sarl
and
sti
or
insb
in
mov
sub
pop
into
push
adc
adc
cmovns
add
jecxz
and
imul
mov
jo
sbbl
out
lock
mov
cmc
int
push
cmpb
inc
or
xchg
jle
or
shrb
xor
sti
sbb
in
sub
cmc
cmp
das
pop
imul
imul
mov
mov
or
ret
ss
aad
and
in
rclb
insb
push
mov
inc
xchg
and
imul
mov
mov
pop
xchg
jmp
mov
add
int
sbbl
sbbb
lcall
xor
add
sub
ljmp
scas
fwait
jp
dec
daa
cmp
pop
adc
jecxz
fwait
xor
repnz
in
add
mov
jmp
rcrb
jle
inc
xchg
xor
lret
enter
in
fistpl
mov
adc
and
fld
pop
lods
out
pop
xor
lret
insb
mov
pop
ret
adc
and
js
jp
jmp
push
mov
and
and
mov
or
insb
call
cmpsb
pop
lock
xor
jnp
stos
xlat
movl
call
das
inc
mov
cmp
dec
lret
add
push
adc
dec
jge
cmp
jnp
push
xchg
cmp
or
in
pop
gs
bound
push
fisttpl
dec
mov
pop
fimuls
cwtl
dec
cmp
je
jae
pop
sub
out
jl
mov
jecxz
fldenv
and
hlt
push
xchg
es
cld
insl
mov
jae
repnz
jecxz
notl
enter
xchg
std
orb
call
clc
fs
repnz
dec
mov
xor
mov
pop
scas
test
xor
test
out
shlb
jnp
addb
mov
test
jl
in
popa
and
aas
repnz
sbb
inc
popa
je
xchg
xor
jmp
imul
call
mov
pop
sbb
pusha
fs
ljmp
int
outsb
bnd
inc
jno
ja
cmp
aad
mov
sbb
sub
sbb
jno
jae
sbb
scas
neg
push
ret
push
loop
ret
jp
das
int
add
jae
jmp
pop
fsubr
jns
mov
pop
decb
insb
test
or
jbe
mov
in
int
inc
outsb
es
inc
xor
cmpsb
mov
and
push
mov
cmp
in
dec
sti
sub
mov
aad
push
xlat
mov
push
testl
cmp
push
mov
push
sbb
testl
inc
jns
cs
aam
jno
mov
xchg
pop
in
stos
push
insb
cmpsb
mov
or
xor
aam
add
mov
add
pop
and
pusha
xchg
mov
dec
adc
and
mov
mov
roll
jp
cli
xchg
leave
into
push
ja
push
inc
push
addl
pop
cmpsl
stos
xor
int3
jecxz
cltd
rcl
cwtl
lcall
inc
or
dec
movsb
scas
mov
and
and
xchg
addb
imul
lock
repz
fiadds
inc
adc
mov
loop
mov
mov
data16
ss
fdiv
out
push
sbb
add
movsl
xchg
jecxz
les
loop
mov
shrb
cmp
cmpsb
or
aaa
mov
popf
mov
xor
fmull
inc
imul
push
test
pop
mov
pushf
sbb
lea
fdivrp
stos
aad
xchg
adc
dec
je
mov
rcll
inc
xchg
or
fdivrl
out
jle
xor
push
cwtl
xor
and
mov
pop
outsb
je
je
in
aad
les
xchg
loop
and
insb
mov
in
inc
jbe
and
jae
mov
pushf
imul
popa
cmpsl
push
sbb
mov
push
fnstsw
adc
or
mov
cltd
bound
ja
and
cmp
rclb
mov
stos
jno
jne
push
int
and
xor
pop
int3
pop
ljmp
or
in
mov
sarb
mov
mov
cs
xor
adc
outsl
push
mov
mov
dec
std
lods
fistpll
push
sbb
xchg
mov
lahf
mov
cmp
cli
scas
jmp
lea
in
mov
mov
push
xchg
fs
add
popl
cld
fistps
outsb
ret
fcmovb
movl
xchg
imul
dec
test
and
sbb
sub
scas
aaa
out
cmpsb
mov
inc
lds
push
push
xorb
pop
int3
push
roll
imul
imul
jg
push
mov
fwait
pop
mov
jmp
jo
fstpl
fwait
test
dec
test
push
mov
fadd
mov
outsl
dec
mov
xor
xchg
xchg
dec
jg
inc
jge
mov
adc
lahf
icebp
lds
jmp
pop
sbb
mov
pcmpeqd
sti
pop
lahf
mov
sub
pop
pop
orl
push
hlt
shl
aaa
add
push
xchg
mov
mov
pop
adc
enter
adc
xchg
xor
lea
lods
mov
adcb
or
inc
int
push
add
mov
jbe
dec
pusha
sub
xchg
pop
mov
push
fisttpll
lods
in
imul
push
clc
pop
inc
rclb
dec
sbb
or
fstl
bound
and
jb
xor
pop
test
jns
jbe
or
outsl
pop
dec
mov
add
and
in
or
mov
addb
or
or
mov
xchg
and
and
lea
pop
jmp
inc
or
ret
ljmp
out
sub
jb
or
push
pop
cmpsl
mov
inc
xor
rcll
push
notl
mov
cmpsl
push
ljmp
push
ljmp
movsb
pushf
cmp
or
cmc
fwait
sbb
out
test
mov
push
ret
jbe
sbb
pop
popa
movsb
mov
inc
ret
clc
or
mov
mov
mov
cmp
loope
cmpsl
das
sbb
test
inc
push
add
mov
fsts
jb
xor
xor
pop
mov
out
adc
cmc
aam
sub
imul
insb
mov
in
sub
roll
ss
sbb
out
nop
flds
mov
xor
in
lods
mov
loop
lret
aam
lahf
cmp
mov
lret
xchg
dec
daa
sub
xchg
pop
lahf
das
mov
repnz
or
fidivrs
dec
popa
and
xchg
dec
cmp
iret
mov
dec
jp
lds
shlb
ret
popf
and
and
jmp
jecxz
int
jb
aad
sub
push
pop
int3
hlt
pushf
faddl
push
xor
in
push
aaa
jne
inc
xchg
add
mov
jle
sahf
pop
mov
pop
pop
pop
inc
ret
cmp
jo
xlat
test
jb
adc
and
stos
push
sbb
dec
mov
call
int
jge
dec
pushf
aam
aad
call
ret
movsb
dec
aas
cmp
into
and
jl
or
or
mov
int3
fcompp
jle
jmp
lcall
dec
movsb
mov
sub
lods
mov
xchg
and
stc
popl
add
mov
jmp
mov
xchg
dec
aam
jl
cmp
push
enter
adc
jno
std
repnz
sbb
aam
cmpsb
hlt
push
invd
cmp
stc
push
nop
lcall
repz
lods
out
popf
jno
and
xchg
xlat
out
hlt
xchg
cmpsb
or
aad
insl
cmpsl
and
xlat
pop
xchg
inc
sbb
imul
inc
clc
xchg
gs
cmp
add
dec
out
stc
add
sbb
aas
mov
dec
push
sti
jns
shll
testb
add
aaa
fbstp
xlat
ret
jl
mov
rolb
insl
in
adc
aam
out
add
sub
lds
ljmp
pop
and
xor
imul
test
mov
popa
push
in
inc
arpl
test
dec
in
cmc
pop
daa
jmp
scas
sbb
std
cltd
or
stc
jl
outsb
push
mov
pop
add
xor
test
adc
mov
mov
or
xor
inc
cmp
push
xchg
lods
scas
push
xlat
mov
jb
popa
int3
mov
fildl
in
xchg
sarb
icebp
jle
pop
outsb
addb
outsb
movsl
inc
mov
push
rcll
inc
aaa
push
add
mov
shr
xchg
jmp
inc
xorb
jg
push
sub
cli
repz
or
das
fsubr
or
int3
bound
sbb
pop
mov
movsb
lods
pop
ja
add
sti
add
int
sub
es
fildl
and
shl
imul
test
pop
fmuls
pop
and
mov
movsl
imul
add
mov
je
pop
out
imul
inc
sub
adc
mov
pusha
bound
lds
movsb
out
jg
xchg
fisubs
jne
push
xchg
sbb
jl
shll
in
sbb
sbb
push
sbb
add
rclb
lret
imul
xor
mov
popa
js
in
dec
xchg
xchg
pop
cld
lret
or
pusha
fchs
xlat
inc
cmp
jne
sub
mov
jb
mov
lock
push
nop
bound
aam
mov
enterw
stos
ljmp
dec
mov
iret
enter
push
in
xchg
sbb
out
xchg
inc
lods
inc
sub
cs
imul
dec
popf
imul
pop
add
int3
inc
xchg
push
cmp
mov
sub
dec
dec
icebp
lcall
adc
pop
mov
dec
mov
insl
pop
scas
jmp
pop
adc
xchg
mov
fnsave
adcb
jae
lock
arpl
mov
sbb
aad
jae
cmpsl
imul
and
push
out
testb
push
call
lret
push
mov
std
mov
cltd
repnz
cmpsl
adc
mov
push
xor
lcall
es
mov
push
les
test
aam
jmp
dec
fcmovne
ret
jne
xchg
fcomps
out
push
pop
addr16
in
xor
sbb
int
test
or
mov
arpl
and
fnsave
sahf
mov
or
in
mov
clc
lret
or
ret
push
rcr
mov
cmpsl
or
cli
sub
mov
out
stos
mov
inc
adc
push
pop
mov
sbb
mov
idiv
cmp
push
popf
fs
shl
pop
jle
in
loop
jbe
mov
lret
pop
jb
shlb
mov
cmpsb
push
inc
inc
xchg
mov
ja
push
mov
mov
call
sete
push
xchg
mov
xchg
pop
lret
es
inc
xor
insl
into
in
ret
add
xor
or
jno
xor
jno
mov
in
out
xor
sbb
mov
mov
inc
aam
mov
mov
and
ret
mov
xchg
sahf
shl
xchg
adc
or
addl
add
enter
lahf
nop
sbbb
test
cmp
data16
lcall
sarb
mov
and
test
jae
mov
cltd
addl
data16
sahf
push
mov
leave
mov
inc
mov
adc
push
es
orl
mov
inc
adc
and
call
loop
fwait
add
mov
xor
pop
and
pop
pop
sub
pop
out
scas
out
xor
sub
xchg
push
adc
and
mov
push
xchg
cltd
fldl
inc
cmp
fwait
inc
lea
jecxz
mov
les
jo
lods
xor
push
xor
xchg
adc
push
xor
addr16
ret
jmp
sbb
cmp
dec
jl
or
scas
out
adc
and
imul
pop
push
cmc
dec
pop
shlb
stos
pushf
testl
bndstx
mov
ja
in
test
add
cmp
fmull
stos
punpckldq
outsl
push
in
mov
mov
adc
pushf
stos
push
gs
sub
add
xchg
sbb
fwait
xchg
pop
inc
data16
mov
inc
icebp
sub
dec
sahf
dec
leave
movsl
mov
and
jbe
mov
cmpsb
cmp
push
xor
xchg
dec
xchg
mov
leave
add
jae
add
aaa
movb
inc
lret
test
scas
mov
fwait
dec
pop
and
popl
ds
mov
xor
test
and
jne
jge
loop
shlb
and
pushf
repz
rcl
shrl
fs
cld
imul
in
mov
pop
push
pop
in
jnp
fwait
into
xor
mov
pop
orl
xchg
jmp
mov
shrl
loopne
add
fdivrl
lret
imul
pusha
sub
dec
dec
dec
test
xchg
add
sub
ss
jne
push
push
pop
idiv
aad
inc
es
jl
fcmovb
fldcw
ret
std
jecxz
cwtl
xor
cs
fucomi
mov
cs
in
out
or
pop
pushf
adc
cltd
imul
or
fbstp
sbb
das
out
lret
pop
pop
push
and
sarl
push
cmp
jg
insb
push
add
fbstp
mov
lods
fcmovu
xchg
jno
or
mov
add
sti
movsl
sub
daa
sbb
push
out
pop
rcrl
mov
push
inc
imul
or
and
movsl
and
movups
sbb
ret
lret
shll
xchg
jge
imull
int
bnd
pusha
ret
inc
cmp
cmpsb
mov
push
xlat
movsb
iret
std
inc
sbb
out
dec
jp
rcr
repz
popf
push
movsb
idivl
inc
sbb
or
imul
dec
inc
cmp
in
xor
inc
out
pop
mov
inc
sub
mov
sbb
mov
loop
sbb
cmpsb
fcomps
test
fcomip
es
stc
dec
iret
xlat
or
shll
jns
push
adc
inc
sbb
push
sarl
dec
pop
sub
cmp
jb
int3
and
pop
sbb
pop
loop
sub
shlb
enter
bound
xor
ret
xchg
data16
loopne
mov
sub
das
xchg
pop
jne
ret
sub
fistps
testl
fnsave
popf
pop
mov
adc
push
je
jne
shlb
push
mov
test
xchg
jns
add
stc
pop
nop
orb
je
insb
loopne
aad
out
lods
mov
out
out
and
fdivl
mov
push
mov
movsl
bound
rcrl
fisubrs
push
pop
jnp
cmp
aam
ljmp
jle
mov
jle
adc
lock
test
mov
andl
stos
fldl
and
pop
lea
data16
lahf
push
push
mov
in
lock
sahf
aam
int3
add
adc
adc
push
lret
je
lcall
xor
cmp
fmuls
and
mov
mov
jne
push
std
fmul
adc
jmp
fucom
sub
push
inc
push
pop
or
add
and
cli
xor
sbb
push
iret
dec
mov
push
mov
pushl
shlb
loope
sti
in
repz
pop
inc
es
push
sti
jmp
xchg
jbe
test
popf
mov
cli
out
aas
mov
adcl
out
jb
inc
xor
loope
rcr
push
add
cli
mov
outsb
mov
lds
xchg
inc
push
rcll
loope
imul
jg
jne
push
into
pop
nop
mov
out
add
xor
mov
cwtl
lds
in
movsl
test
lret
or
daa
mov
and
or
sbbl
ret
push
fbstp
or
addb
cmp
test
mov
xchg
mov
jecxz
test
push
call
lcall
jl
out
in
pop
movsl
mov
sub
in
jno
femms
in
xorb
mov
adc
mov
outsl
jle
mov
popa
iret
sub
or
mov
sub
cs
adc
sub
das
jae
cmpb
jmp
xchg
adc
jg
insb
mov
xor
mov
sbb
in
dec
dec
push
add
jge
dec
xchg
or
push
cmp
add
mov
les
push
ficoml
pop
std
ret
xchg
insb
in
pushf
push
fucomi
jns
lods
mov
data16
and
push
mov
fistpl
xchg
fcmovne
es
int
outsl
or
pop
gs
inc
inc
cltd
xchg
jno
popf
mov
sub
pop
jge
out
fstl
jnp
int3
mov
test
stos
pop
xlat
in
mov
bound
sarb
pop
or
repnz
adc
inc
insb
dec
dec
ja
lret
or
add
add
and
pop
add
jle
mov
out
enter
lret
rcrl
int
or
mov
mov
jae
insl
rcll
aaa
dec
scas
mov
jmp
dec
test
dec
movsl
inc
jecxz
inc
dec
scas
aam
mov
mov
adc
cmp
push
mov
xor
pop
shr
repz
into
test
pop
xor
sbb
inc
and
or
inc
jg
mov
sti
daa
sub
fmul
scas
hlt
lock
inc
ret
sbb
xchg
mov
add
shlb
fs
jmp
call
jb
lods
scas
ja
jl
jp
or
mov
push
or
and
or
gs
ffreep
push
inc
jbe
push
out
adc
hlt
testl
mov
sub
inc
mov
ror
test
fildl
sub
push
push
push
popf
arpl
scas
lret
mov
mov
lea
out
dec
mov
add
leave
or
je
jae
lcall
xor
pop
jle
les
loopne
loope
aam
xchg
and
add
aad
mov
gs
or
xchg
cmp
fstps
popa
ss
and
cmc
or
int
cltd
pop
stc
divb
loop
cltd
jmp
lahf
jno
add
in
pop
lahf
push
addr16
and
in
fcompl
dec
fidivl
pusha
fwait
scas
lods
push
stc
push
hlt
adc
adc
call
fs
test
je
in
dec
mov
pop
in
pop
and
jae
loope
aad
fbld
cs
mov
movsb
xor
js
test
fbstp
jno
mov
inc
outsl
daa
mov
sbb
adc
and
mov
pushf
subb
mov
fnstsw
mov
push
cmpsb
jmp
outsb
sub
insb
inc
pop
stc
xor
out
adc
inc
test
mov
xchg
sub
mov
push
jae
adcl
push
repnz
jbe
ficoms
adc
lds
clc
lods
mov
push
movsb
jge
cs
fcmovb
adc
in
outsb
je
rcll
lock
cmpsb
and
pop
cltd
pop
xor
je
scas
int3
sbb
lahf
int3
pop
sbb
loope
out
jo
sub
xchg
jno
rorb
int
lcall
pop
enter
je
push
inc
jmp
sbb
adc
shrb
gs
sbb
mov
aaa
sbb
pop
and
cltd
inc
add
fsubrl
push
adc
ljmp
dec
cmp
sub
push
push
movsl
sub
jp
fdivrs
sbb
pop
sbb
mov
and
jecxz
pop
clc
push
hlt
out
mov
or
dec
ret
mov
fsubrp
mov
in
mov
and
cmpsb
adc
sbb
outsb
les
jo
outsl
test
out
or
leave
insb
imul
pop
in
bound
xchg
dec
or
add
dec
out
pop
inc
cld
int
and
cwtl
dec
mov
jmp
push
inc
and
jmp
sub
jle
pusha
ds
cmp
fdivs
jmp
mov
sbb
add
xor
adc
aad
and
push
pop
mov
push
popl
int3
adc
push
fwait
or
dec
lods
in
and
sub
aad
adc
mov
ja
lods
and
xor
cld
test
jle
and
sub
push
inc
stos
pop
nop
in
jne
pop
pop
mov
imulb
mov
leave
cvtdq2ps
push
fbld
dec
mov
pushf
push
dec
cld
cmp
movsl
cmc
fs
test
js
lret
inc
sahf
insb
adc
jecxz
std
out
push
pushf
nop
xor
jle
xlat
mov
daa
xor
imul
mov
jne
sbb
mov
sub
mov
fimull
and
jnp
push
pop
sbb
mov
xlat
int
jg
mov
mov
sahf
pop
sbb
xorl
fistpll
pushf
fistps
sti
loop
ds
testl
clc
cltd
iret
pusha
jb
sahf
outsl
mov
cmc
in
dec
xor
sti
xchg
popf
out
mov
and
mov
ret
or
lahf
xchg
mov
fwait
cwtl
jbe
adc
mov
dec
jmp
sub
jne
mov
jge
movsb
ret
push
out
adc
and
fwait
mov
adc
aad
or
mov
jno
das
cmpsb
mov
xlat
ss
cli
push
xchg
inc
jle
pop
inc
subl
inc
pop
cmp
call
in
fmull
les
inc
xchg
loop
push
repz
aad
mov
xchg
sub
lcall
xchg
clc
mov
jmp
or
jl
fucomi
and
xor
and
push
pushf
mov
jo
or
rolb
fildl
cli
adc
or
mov
in
bound
call
cmp
test
add
ds
dec
xlat
aaa
mov
outsl
adc
sub
fiadds
mov
jle
push
jo
xor
pop
rcrb
adc
push
pop
pop
cld
pushf
mov
outsb
xor
or
pop
imul
je
leave
loop
inc
fadds
sub
mov
into
imul
dec
push
insl
mov
fs
out
ja
insl
mov
idivb
fdecstp
xchg
cmp
pusha
imul
cmpsb
sbb
add
outsl
imul
aas
lea
pop
rolb
or
outsl
pop
xchg
icebp
push
fimuls
push
shrl
je
scas
shr
jbe
mov
or
sbb
jp
cmp
cmp
stos
xchg
jecxz
jp
push
rorl
mov
mov
jb
xlat
dec
pop
gs
mov
sub
xor
mov
sub
or
pop
or
fidivrl
xchg
jmp
in
ret
jae
or
adc
inc
or
repnz
repnz
notl
addr16
aam
cmp
cmpsb
pop
or
cmp
jb
xchg
aad
pop
stc
mov
mov
mov
jle
adc
call
repz
vmovdqa
ret
mov
sbb
fldt
cmp
mov
cmp
leave
pop
pusha
scas
scas
mov
aaa
movsl
dec
outsb
push
jbe
sbb
loop
aaa
outsl
sarb
ret
scas
pop
nop
call
fcoms
cmp
aas
and
xchg
fcoms
sub
ficompl
loopne
mov
or
or
cmp
xor
jae
mov
rol
jecxz
hlt
fwait
imul
movsb
ja
pop
adc
int
orb
sbb
sub
shrb
dec
mov
fsubrl
ljmp
test
cld
mov
pop
call
and
adc
mov
jge
jae
adc
push
cld
inc
into
xchg
xchg
movsl
mov
xor
aas
arpl
push
add
in
pop
inc
mov
scas
mov
out
dec
xlat
rcr
nop
push
sbb
jg
xor
xchg
cmpsb
jne
push
andb
push
es
add
mov
mov
lock
in
sub
stos
pop
mov
fstpt
repz
cmp
jmp
push
in
lcall
les
iret
push
adc
fs
mov
aas
repnz
jae
cmp
mov
icebp
aas
int3
push
add
mov
or
clc
fsub
mov
loope
rclb
mov
mov
and
test
lea
cmp
sub
leave
pop
pop
mov
int3
aam
push
mov
ss
jmp
and
mov
adc
data16
xchg
out
cmp
push
fbld
xchg
es
xor
mov
cmpsb
push
notb
nop
add
mov
mov
dec
cmpsb
or
out
jmp
xor
jae
enter
or
mov
jb
and
stos
les
inc
and
dec
mov
dec
sub
and
out
xchg
inc
and
jge
xor
and
test
pusha
ljmp
xor
mov
adc
xchg
daa
aaa
shll
mull
inc
jns
dec
es
fiadds
test
shll
lock
dec
outsb
and
bound
js
pop
sti
into
mov
or
outsl
repnz
shlb
sti
mov
out
call
xor
adcb
jmp
inc
jmp
in
fs
in
popa
cmp
cld
loope
int
inc
pop
mov
je
xchg
sti
inc
xor
and
mov
mov
daa
xlat
cmpsb
fisttpll
dec
rorb
push
aad
enter
or
sbb
lcall
sub
movsl
lods
jo
jl
or
jb
cmc
cmc
mov
and
mov
cwtl
sbb
sbb
xor
pop
xor
in
sbb
les
mov
into
lods
mov
push
xchg
or
push
mov
cmp
push
xchg
push
outsl
pop
pop
stc
adc
pop
push
inc
arpl
pop
ds
or
ja
daa
ja
mov
movsl
data16
inc
aas
enter
fcomps
loopne
repnz
or
lock
sbb
push
mov
das
cmp
xchg
imulb
out
imulb
dec
mov
loop
daa
xchg
mov
movhps
mov
mov
inc
and
xchg
xchg
imul
push
push
repz
and
std
je
mov
fnstenv
xor
xor
insl
pop
pop
push
out
mov
pusha
out
jp
xchg
or
outsb
scas
pop
outsb
mov
test
lret
push
push
mov
push
cli
stc
inc
les
movsl
test
test
inc
jmp
ja
push
fildl
mov
in
popa
pop
aam
and
dec
jge
sbbl
cmp
les
notb
js
enter
xor
dec
daa
insb
out
testl
cmpsb
fmulp
inc
loopne
jb
sti
pop
pop
ds
xor
fstpl
out
xchg
repz
mov
sub
push
gs
faddl
xor
or
cmpsb
cmp
dec
clc
enter
fsubr
pop
fmul
jmp
das
add
shrl
push
pop
dec
repnz
int3
dec
sub
xchg
xor
cmc
xchg
lods
loopne
lcall
movsb
sbb
adc
insb
xor
loope
lods
scas
lahf
imull
in
sub
cmp
orb
mov
popf
sti
daa
int
mov
push
xorl
sti
xchg
mov
or
xchg
inc
scas
ja
hlt
push
rcl
dec
and
fstpt
cmpsl
jmp
or
xchg
stc
int
mov
cmp
loop
jmp
mov
or
mov
stos
mov
sub
es
push
push
addr16
popf
jl
xchg
push
lods
call
dec
outsl
mov
mov
icebp
adc
sub
adc
mov
sub
adc
xchg
shr
idivb
jbe
cltd
xor
jmp
fcmovb
repnz
jmp
movsb
jb
insb
out
dec
jnp
push
sub
lahf
nop
push
or
lds
lret
rcrl
inc
je
nop
cmp
jp
movsb
xchg
jg
inc
ficomps
sbb
add
xor
or
das
push
scas
andb
and
es
sub
mov
iret
cmp
std
dec
xor
jp
mov
adc
loope
ljmp
dec
jl
ja
test
ds
push
sub
mov
js
xor
mov
mov
cmp
fstps
mov
shl
and
mov
and
mov
cmp
in
mov
adcl
fs
fs
rclb
sub
inc
add
mov
imul
add
jnp
mov
sub
push
pusha
or
dec
lret
push
sub
loopne
bound
clc
mov
sbb
and
out
jb
loope
add
shll
fisttpl
mov
leave
and
pop
add
pushf
dec
pop
xchg
flds
imul
cmp
leave
popa
in
add
mov
repz
add
jge
lock
mov
inc
addl
decl
dec
pop
fdivl
inc
mov
icebp
shl
clc
clc
cs
lods
mov
mov
subb
mov
mov
xchg
data16
fsubl
mov
les
insb
push
or
lcall
out
repnz
out
arpl
xchg
sbb
iret
mov
jge
cmp
jns
clc
stos
gs
mov
xchg
and
ja
inc
out
jae
or
dec
dec
or
loop
jecxz
lock
push
pop
aas
add
mov
das
mov
sbb
filds
lcall
dec
adc
sub
cmp
shl
sbb
shll
inc
mov
std
dec
push
xor
stc
cmp
xor
cmp
ret
push
mov
iret
ljmp
js
add
out
pushf
scas
adc
xor
mov
shrl
clc
fistl
loope
cmpsl
pop
inc
or
shll
add
cs
jl
or
aam
cmpsl
loope
mov
xchg
ret
and
scas
lods
xchg
lcall
jns
incl
test
push
mov
jecxz
adc
rolb
scas
jg
push
std
daa
mov
xchg
lds
pop
xchg
or
outsl
mov
and
sub
dec
mov
jge
mov
daa
push
mov
jecxz
fucomip
rorb
mov
test
sbb
cmp
pop
xchg
fnstcw
and
mov
loope
adc
popa
leave
pop
add
gs
cli
mov
lods
insb
sahf
mov
xchg
and
cmpsl
xchg
into
xchg
fnstcw
adc
shr
dec
loope
iret
roll
cmpb
pop
add
pop
and
enter
xchg
pop
and
adc
jns
and
cld
cld
movsl
lea
push
xchg
mov
cs
xor
and
or
cwtl
inc
movsb
stos
push
and
xchg
mov
mov
dec
outsb
call
xor
mov
jo
insb
cmp
and
jnp,pn
inc
xchg
jns
or
jb
jbe
adc
jb
mov
sbb
mov
sbb
cmp
xor
movsl
outsb
test
call
fbld
out
scas
loope
sub
stos
cmpsb
sbb
scas
and
mov
inc
or
in
jge
repnz
jecxz
add
addr16
mov
add
mov
scas
xor
xor
movsl
inc
mov
fadd
push
lock
xor
daa
pop
mov
loopne
dec
cmc
push
mov
add
testl
stos
sbb
inc
lods
addb
jae
outsb
popa
mov
push
js
clc
mov
cmp
shrl
adc
in
xor
bound
outsb
test
stos
mov
aam
outsl
fldt
ret
ret
fwait
add
xor
push
adc
jne
insl
pop
xor
xor
xlat
std
test
push
cmpb
lods
and
push
inc
lret
sbb
adc
sbb
mov
dec
pop
pop
adc
push
gs
push
add
pop
mov
or
ret
ficompl
or
nop
popa
scas
push
mov
jnp
in
out
adc
lds
js
cmc
andb
sbb
movsb
adc
add
inc
out
fbstp
inc
mov
push
pop
stos
pushf
out
in
sti
popa
sarl
aaa
cli
xor
dec
mov
push
ret
ret
es
xor
and
dec
imul
xchg
lret
aas
push
add
outsb
mov
cmp
cmpsb
sub
adc
pop
xchg
out
int3
das
jmp
icebp
insb
ret
push
dec
dec
mov
movsl
faddl
out
sbb
adc
stos
mov
int3
js
dec
sub
sub
inc
arpl
add
stc
mov
cmp
stos
mov
xchg
out
std
ret
outsb
sub
movb
xor
aas
mov
xchg
dec
dec
leave
lcall
sub
gs
xchg
in
icebp
aaa
push
ret
sbb
and
cwtl
mov
adc
lret
scas
fstl
adc
or
or
out
add
inc
out
jp
out
sbb
add
xchg
in
push
jmp
jl
int3
je
aad
pusha
lea
repnz
cwtl
push
test
push
push
std
ds
rorb
enter
cmp
sti
call
loop
xor
popf
andb
sahf
scas
mov
or
gs
mov
lret
imul
and
add
mov
out
mov
xchg
adc
repz
lods
or
in
jbe
and
pop
gs
sub
inc
inc
popl
daa
pop
pushf
nop
les
stc
fldt
rep
das
fiadds
xchg
es
sbb
and
and
hlt
inc
test
ljmp
cmp
fstpt
loopne
mov
xchg
and
pusha
dec
add
test
pop
dec
fst
cmp
jae
push
call
sbb
xor
adc
add
adc
in
push
xor
popf
insl
jns
or
xor
call
xchg
icebp
push
adc
cmpsl
inc
mov
es
or
mov
and
in
push
mulb
jp
jno
ja
nop
in
sbb
add
push
dec
repnz
in
pop
movsb
icebp
leave
test
jbe
cmp
mov
rcrb
sub
es
jp
adc
mov
xor
cmp
cmc
xchg
push
std
call
in
mov
xchg
fadds
gs
fdivs
push
test
xor
sahf
and
and
pusha
dec
or
icebp
cmc
or
lahf
xlat
sbb
enter
jae
icebp
sub
out
jmp
pop
mov
add
sub
or
xorb
inc
in
xor
sbb
inc
subl
shll
imul
cli
ret
popa
popa
mov
push
in
lods
inc
jb
ret
andl
test
push
cltd
insb
cmp
and
xchg
ljmp
cwtl
xchg
pop
out
mov
inc
idivl
inc
rcr
sub
xchg
cli
mov
pop
les
aaa
pop
mov
cld
inc
dec
int
and
movsb
out
xchg
in
mov
jns
pushl
lock
loop
jle
subl
dec
stc
pop
mov
mov
adc
inc
test
cwtl
sti
or
dec
jg
lods
jmp
pop
jmp
lret
js
icebp
inc
or
inc
jg
mov
mov
push
xor
cltd
pop
shl
push
ja
cwtl
mov
xchg
cmpl
add
lea
inc
fwait
xchg
fmull
mov
xor
add
cmp
mov
mov
or
int3
loop
mov
xchg
jg
mov
leave
cld
and
jl
sbb
and
ljmp
and
scas
in
sub
cmpsb
clc
clc
push
or
inc
sbb
pop
push
add
push
ja
xlat
pusha
je
mov
sti
ficompl
pop
jle
sbb
test
scas
lret
mov
sub
push
test
add
jg
fmull
adc
arpl
mov
push
mov
rorb
mov
adc
gs
dec
jae
lds
sarl
repz
gs
push
mov
add
mov
pop
push
mov
cmpsb
xor
sbb
int3
pop
dec
ret
push
je
sar
in
mov
jecxz
mull
repz
sub
scas
mov
xchg
mov
dec
jl
sbb
xchg
in
ret
xchg
mov
jbe
adc
dec
aam
add
adc
cltd
push
xor
dec
dec
subb
int3
test
xchg
pop
cmc
cmp
mov
and
inc
repz
cmp
cmp
push
nop
shll
shl
inc
jo
in
add
push
cmpsb
push
xorb
xchg
dec
pop
jo
xchg
xchg
enter
test
out
add
int
sub
lods
lret
add
mov
aam
inc
fsubl
jle
sahf
sub
push
jle
push
push
xorb
clc
xor
add
inc
push
fsts
dec
xor
std
mov
and
imul
inc
and
test
gs
add
mov
js
dec
ret
movsl
cmp
cmp
jo
ds
pusha
insb
ja
mov
sub
mov
mov
xor
and
fdivl
bound
cmc
pop
lock
mov
rcll
ret
push
cld
imul
leave
sbb
leave
sbb
addb
mov
inc
idivb
dec
mov
shrl
pop
adc
cmpsb
popa
mull
and
mov
xchg
inc
push
sub
push
ficomps
pushf
mov
pushf
add
lcall
popa
mov
pushl
push
cmp
imul
and
push
jecxz
out
or
mov
push
adc
aam
ret
sbb
lods
fimull
popf
aaa
lcall
and
sub
inc
mov
lahf
xchg
orb
cmp
jecxz
push
mov
xor
jg
cmpsl
jecxz
fdivrl
lret
pop
fadd
sbb
fisubrs
test
pop
push
or
lods
mov
cltd
fwait
andl
iret
insl
xchg
leave
call
dec
lds
adc
xor
dec
clc
mov
or
lret
jne
aad
mov
sub
inc
call
fsubr
fcoml
out
lea
xorb
xchg
adc
inc
popf
lcall
je
or
mov
dec
cltd
inc
orb
les
mov
lock
xchg
out
stos
mov
and
lock
addr16
test
stos
lahf
xor
das
push
movsb
pop
rcl
mov
jle
in
sbb
arpl
stc
mull
lret
or
js
enter
xor
inc
fimull
test
imulb
sbb
arpl
mov
ds
pushf
addr16
sbb
add
dec
cwtl
pop
xor
jns
jp
xlat
dec
pop
ljmp
loopne
ret
mov
pop
sarl
fwait
push
cld
fildl
or
adc
push
xor
test
xchg
jl
cmc
push
cmpsb
icebp
mov
dec
fiadds
mov
jnp
int3
add
mov
nop
lock
sbb
and
stos
sbb
lahf
clc
cs
aas
in
cmp
mov
pop
inc
icebp
insl
popl
lods
inc
dec
ret
mov
push
pushf
fxam
jp
lock
jl
or
dec
push
mov
loop
mov
or
dec
imul
pop
add
sub
jno
lret
hlt
shll
jl
or
ss
call
rcrb
out
cmc
adc
clc
filds
xor
jp
adc
and
cmc
call
push
adc
and
xchg
stc
inc
adc
lret
out
sti
or
inc
jge
std
shll
and
movsb
btr
xor
inc
test
out
mov
jnp
aaa
out
out
and
mov
stc
mov
jecxz
gs
push
test
in
iret
mov
fcmovu
bound
mov
sbb
xchg
arpl
es
sbb
test
test
fsubrl
jne
mov
outsl
sarb
loop
push
sub
loopne
cmc
repz
fiaddl
sbb
mov
imul
pop
movsl
mov
js
adc
add
push
xchg
sarb
push
lahf
inc
fdivrs
call
push
ja
enter
inc
adc
dec
stc
aad
mov
pop
jb
sub
dec
pabsb
sarb
push
add
fisubrs
es
jb
jge
sub
adc
xchg
push
sub
flds
rolb
and
aad
orb
or
test
movsb
bound
movsb
push
into
insb
sub
fs
int3
and
sub
adc
std
inc
and
ds
sbb
xor
lock
inc
bound
out
pop
sahf
daa
or
mov
fistpll
xchg
in
push
repnz
sbb
push
xor
jle
idivb
pop
jno
rcrb
xchg
popf
testb
in
sbb
out
add
fstl
nop
cmpl
adc
push
jnp
gs
or
popf
sub
push
add
dec
fwait
dec
sarl
mov
imul
mov
pop
cmpsb
lret
stos
aaa
and
push
or
daa
pop
sbb
push
ja
ljmp
cwtl
jne
in
mov
data16
jbe
and
in
mov
adc
int3
push
imul
cmp
leave
mov
jge
dec
sub
in
ss
and
or
dec
repnz
pop
jno
mov
scas
push
jns
cmpsb
jo
je
fisubrl
in
mov
push
lea
jo
pushl
popf
cltd
cltd
insb
jne
enter
push
push
rcrb
and
jb
add
xchg
push
popl
cmpsl
cld
push
push
cld
or
adc
pusha
arpl
ljmp
xor
test
adc
jnp
ret
dec
sbb
rorb
add
pop
xchg
cmc
sti
or
pop
adc
mov
cli
adc
sub
pusha
pop
and
dec
cmpsb
mov
mov
add
cmc
push
mov
jne
push
or
dec
mov
jecxz
mov
cmpsb
xor
iret
sub
xorl
push
fwait
out
push
frstor
jbe
and
pusha
insl
mov
stos
rorl
mov
scas
mov
jmp
inc
and
jo
imul
gs
cmp
movsb
insb
shrb
push
iret
sbb
sbb
orb
mov
push
test
ja
dec
jp
scas
cmp
adc
mov
jno
dec
lret
int
call
jle
jo
sbb
lods
out
adc
movsb
repz
call
cld
or
enter
movsl
and
imul
mov
clc
fs
push
lods
arpl
mov
cmp
sub
divb
sbb
sub
mov
push
xchg
xchg
or
xchg
xor
rorl
punpckhbw
mov
sbb
mov
xchg
addb
int
ficoms
out
xlat
enter
cli
mov
and
or
add
xchg
and
scas
push
sub
std
jmp
jp
cmp
dec
scas
mov
insl
imul
mov
push
jns
movsl
add
push
fadds
inc
test
and
push
lock
push
movsl
decl
push
and
pushf
lods
fwait
mov
jne
out
push
or
not
stc
leave
mov
cmp
lret
mov
scas
xor
push
jae
and
pop
pop
sub
subl
mov
or
adcb
cmp
lods
ljmp
stos
sub
fsubrp
loope
mov
out
inc
stc
mov
sbb
sbb
ret
pop
mov
sub
push
sub
cmp
add
mov
jp
xor
icebp
std
mov
sbb
and
fsubl
mov
cwtl
mov
sarb
fildl
repnz
out
je
adc
push
mov
push
rol
movsb
int
scas
dec
sbb
cmp
pop
or
lret
or
xor
gs
in
inc
jg
test
scas
xlat
out
mov
cmp
les
imul
popa
cmp
jno
out
in
out
pop
fs
subb
push
sub
sbb
imul
fsubs
adc
out
stos
add
scas
rcll
aas
jecxz
adcl
mov
shrb
cmp
jge
push
push
pop
adc
adc
sbb
shll
sbb
xlat
pop
ljmp
imul
push
push
cltd
inc
pop
bound
je
lock
xor
in
data16
lea
mov
scas
ret
mov
std
je
lret
mov
add
sbb
adc
jne
clc
cmp
mov
xor
sub
clc
loope
insl
or
sub
clc
add
adc
mov
gs
mov
mov
lcall
sbb
inc
mov
inc
lcall
inc
mov
scas
daa
xchg
out
ret
mov
push
insl
lret
in
pop
in
jns
jg
dec
push
mov
iret
push
or
mov
jecxz
inc
fisubrl
sbb
fdivrp
lret
mov
push
mov
sahf
cmpsb
mov
inc
lock
push
add
roll
inc
lahf
aas
mov
ret
repnz
push
pop
push
mov
and
push
lock
cmp
addr16
in
lds
movsl
xorl
pop
xchg
pop
or
or
push
add
fisttpl
inc
shl
pusha
lret
adc
stos
aas
inc
and
cmp
dec
push
cmp
test
push
xor
repz
mov
cmp
in
push
mov
sbb
gs
insb
iret
stc
out
push
cmpsb
std
sub
lods
mov
out
std
rorb
les
and
xchg
icebp
shlb
in
je
orl
jmp
jge
sub
sbb
stos
hlt
mov
inc
inc
pop
mov
dec
mov
jg
xor
pop
dec
fstpl
add
icebp
xchg
lret
test
jmp
test
mov
mov
jo
fnstcw
xor
lahf
aaa
push
jl
cmp
inc
mov
mov
dec
sub
xchg
adc
or
insb
bound
sbb
dec
push
mov
and
in
add
lods
movsb
jl
mov
or
push
push
jbe
mov
popa
subl
outsl
outsl
xchg
inc
mov
jnp
jmp
popa
les
sub
push
iret
mov
out
xchg
cld
and
adc
adcb
sub
mov
popa
pushf
mov
or
mov
or
lret
repz
and
inc
adc
xchg
mov
sub
test
xchg
mov
repz
xchg
negl
mov
ds
loope
in
in
js
mov
inc
arpl
xchg
dec
and
jo
mov
imull
dec
xor
sbb
in
fcomi
xchg
out
stc
or
adc
aam
out
or
cmp
xor
cmp
adc
in
movsl
rolb
jmp
adc
in
cmp
outsl
and
mov
aad
rorl
data16
jmp
into
out
mov
mov
imul
xchg
addr16
test
jo
adc
or
push
into
es
add
and
mov
add
ret
out
fwait
lock
push
movsl
adc
es
mov
xchg
pop
mov
cmpsb
add
in
mov
out
xchg
stos
dec
lret
shlb
popf
xor
iret
ljmp
shlb
aad
scas
loop
mov
mov
int3
xlat
das
jg
lea
imul
ss
or
jmp
outsl
fwait
ljmp
in
push
pushf
add
mov
fldt
loopne
mov
sub
adcb
mov
mov
je
and
sbb
call
mov
lret
jl
or
fbstp
mov
movsl
scas
xor
jno
mov
sub
mov
test
xlat
adc
shlb
push
jmp
cmp
xor
mov
nop
xchg
push
jg
adc
lods
je
lcall
daa
pop
idivl
icebp
movsb
in
mov
les
rol
mov
es
xchg
in
mov
and
add
push
js
cmp
jg
movsl
pusha
dec
lea
inc
sbb
pop
xchg
xlat
aas
push
push
mov
outsl
loop
inc
xlat
stc
leave
or
push
and
xchg
dec
fsubrs
push
int3
or
pop
cmpsb
ds
cmpl
fmull
insb
mov
add
fwait
popf
pop
jns
cli
leave
leave
xchg
iret
pop
in
rol
js
mov
outsb
xchg
push
sbb
adc
and
mov
jnp
int3
or
das
adc
sub
enter
js
ja
ret
push
insb
lret
popa
mov
test
cld
sbb
into
or
xor
adc
ret
cmp
ja
addr16
or
gs
iret
test
xchg
repz
mov
iret
std
pop
push
sbb
ss
fcom
jae
lds
adc
mov
test
dec
sub
pop
cmp
inc
sbb
push
sbb
or
pop
test
ja
push
jns
push
lds
jle
rcl
mov
push
or
aaa
mov
repnz
dec
movsl
adc
fucomp
pushf
fucomip
cmp
lahf
jbe
in
aad
pusha
jg
call
in
pop
loopne
pop
in
popa
ja
aaa
div
jbe
clc
leave
outsb
jle
shrb
xlat
adc
xor
xchg
cmpsb
sahf
mov
push
sub
lcall
clc
pop
mov
loope
jnp
dec
ret
out
mov
jne
lods
ds
loopne
mov
adc
lods
inc
pop
mov
movsb
dec
jg,pn
mov
cmp
mov
mov
outsl
stc
xor
mov
lods
add
inc
aad
cmp
add
int3
push
pop
inc
lea
jge
outsl
cmp
stc
int3
xor
sbb
xchg
adc
roll
mov
mov
das
dec
bound
xor
jmp
add
cld
mov
addr16
pop
ja
sahf
les
sbb
dec
fbstp
pop
lcall
jae
jg
lods
or
jns
fsubl
pop
jb
dec
jo
loope
insb
mov
testb
sahf
ret
xchg
out
mov
shll
sbb
movsb
pop
dec
mov
add
cmc
pop
push
arpl
loopne
lods
in
inc
arpl
xchg
xchg
jne
loopne
add
or
xor
dec
pop
push
int
in
lds
sahf
test
mov
push
gs
jecxz
test
ja
rep
cld
enter
mov
lods
xlat
lock
mov
lcall
fs
cmp
inc
cmp
hlt
mov
mov
xchg
xor
jle
adc
dec
adc
add
pop
and
sbbl
sar
sbb
xor
jmp
sub
and
push
out
lods
sub
pop
pusha
out
or
inc
lods
testb
or
jecxz
add
mov
call
and
or
sub
push
lock
xor
sbb
or
or
mulb
mov
stos
stos
mov
pushf
adc
and
mov
pop
cld
mov
sub
int3
push
aaa
insb
pop
dec
xor
icebp
push
rorl
jecxz
je
aaa
movsl
pop
jns
cmp
add
or
and
mov
xor
mov
inc
je
push
or
dec
push
aad
int3
mov
jne
addb
pop
jb
rclb
jnp
aad
or
bound
cld
imul
mov
sti
cmp
pop
pop
stos
loopne
cmpsb
shrb
cli
nop
rorb
push
pop
dec
push
jne
xchg
sbb
sub
add
mov
das
inc
pop
jno
fdivrs
xchg
shrd
push
mov
mov
and
daa
xchg
ljmp
xchg
rcrb
inc
cmp
and
add
inc
adc
mov
push
ficomps
xor
xor
repnz
loopne
mov
out
testl
bound
cli
lahf
pop
mov
cmc
loopne
push
adc
test
push
push
mov
pop
jmp
subb
loope
mov
cmpsl
rcrb
jle
test
and
mov
lret
mov
into
fs
out
sti
cmp
es
insb
fildll
mov
bound
pushf
outsb
into
pop
fcmovnu
mov
xor
cmpsb
inc
push
mov
movsb
jbe
leave
pop
sub
loope
xor
leave
test
sub
mov
xchg
mov
subb
stos
xchg
mov
out
sbbb
inc
cmpsl
rorl
push
add
nop
out
pop
sbb
dec
inc
and
cs
sbb
xor
ja
add
jno
fsubrp
arpl
cmp
lcall
dec
aad
add
fisttps
push
jle
inc
xchg
sahf
inc
dec
sbb
loopne
pop
fwait
loope
scas
inc
mov
xlat
lods
xchg
movsl
push
stos
fistpl
shlb
rcrl
hlt
sarl
icebp
decb
pop
sti
into
inc
jmp
dec
dec
sarb
or
dec
dec
jo
roll
inc
movsb
das
mov
nop
jg
adc
pushf
int3
aaa
mov
int
sub
daa
and
add
inc
lds
adc
mov
jl
push
idivb
fists
xor
in
add
mov
ljmp
fistpll
cltd
mov
outsl
fwait
inc
jle
pextrw
mov
lcall
xchg
xchg
or
fldenv
std
stos
pop
in
jge
les
pop
jle
mov
or
ja
push
adc
inc
divb
sub
clc
stc
shl
je
sbb
jg
je
scas
jecxz
mov
fs
daa
aaa
les
test
inc
rcll
imul
ret
pop
jl
ljmp
or
aam
sbb
and
pop
and
mov
out
mov
scas
fdivr
lods
in
dec
sbb
mov
xchg
pop
subb
cmp
mov
shrl
into
push
xchg
jns
bound
lock
inc
and
ja
jecxz
fwait
scas
popf
push
and
aad
dec
sub
ja
sahf
inc
sbb
xor
sub
xchg
mov
hlt
cmp
xchg
mov
pop
and
das
inc
inc
orl
sbb
or
and
lods
inc
inc
mov
lcall
cmp
dec
inc
jnp
or
add
adc
test
out
scas
cmp
daa
xchg
pop
mov
jle
pop
enter
outsb
push
mov
jno
jns
add
aad
xchg
dec
or
xor
sub
lahf
std
loop,pt
pop
stos
push
xor
jnp
insl
add
sbbl
mov
fidivrl
ret
aas
mov
fs
enter
xchg
push
jae
dec
xchg
sbb
sbb
cmp
adc
inc
loop
out
movsb
jno
je
sub
pop
lock
xchg
dec
dec
cmp
lods
jmp
or
stos
jecxz
dec
dec
fcoms
pop
mov
in
stos
stos
lods
mov
lret
sub
lahf
mov
push
push
pop
pop
xchg
jne
adc
and
xor
bound
sbb
push
test
dec
mov
sbbl
icebp
repnz
std
sub
gs
jmp
sti
pop
js
inc
es
push
mov
out
push
push
mov
jmp
in
inc
lock
out
cmp
in
push
jnp
mov
mov
iret
xchg
pop
movsl
nop
jp
push
pop
ds
in
repnz
imul
sarl
shlb
jae
sti
cwtl
lock
inc
scas
out
xchg
inc
loope
sub
add
push
push
stos
insl
popf
not
daa
negl
pop
sarl
xchg
xchg
dec
test
int
xorl
adc
into
bound
cmpl
lods
mov
shrl
pop
add
or
lods
cs
mov
sbb
ja
hlt
xchg
inc
subl
or
pop
sbb
orl
xchg
pop
cmpb
jb
sub
ret
mov
xor
xor
out
int
stc
inc
push
sti
pop
std
fistpl
in
addr16
sub
ja
push
inc
cs
sub
sbb
les
cmp
xchg
sub
jne
test
xchg
jmp
mov
loope
add
or
idiv
stos
inc
mov
and
fwait
adc
ds
gs
dec
loope
test
out
aad
fildll
cmp
fbld
inc
aaa
add
adc
pop
movsb
dec
inc
cmp
sub
jmp
ljmp
jo
emms
jmp
int
sti
or
sub
push
add
push
loop
popa
bnd
xor
xchg
sbb
testb
pop
xorb
xor
fistpl
lods
inc
push
push
jmp
add
clc
sub
aaa
into
xchg
std
icebp
fs
fidivl
xor
mov
mov
or
shll
addr16
or
xor
dec
enter
mov
sub
in
rolb
jnp
mov
ja
ss
mov
or
movd
push
sbb
clc
dec
mov
test
clc
xchg
scas
imul
mov
push
push
mov
xor
push
xchg
mov
xchg
jge
aam
out
add
xchg
daa
mov
inc
pop
xor
iret
mov
popa
daa
inc
mov
add
cmc
push
pusha
mov
jnp
xchg
and
ret
jl
popa
mov
notl
xchg
push
out
arpl
dec
sub
lea
nop
xor
int3
sbb
push
out
hlt
mov
xor
adc
enter
pusha
xor
loope
mov
or
push
jmp
rorb
popf
daa
or
pop
in
popf
xor
and
outsl
jge
subl
mov
and
outsb
cld
pop
mov
or
jl
push
aaa
pop
loope
mov
sbb
nop
out
jns
test
cld
popf
insb
pop
dec
stos
lock
add
enter
inc
enter
dec
jg
ljmp
add
pop
add
inc
stos
outsl
xor
pslld
and
cmp
cmp
mov
jecxz
lret
hlt
jecxz
data16
fimull
cltd
fistl
pop
push
mov
sub
mov
xlat
data16
jne
mov
mov
pop
decl
std
push
int3
push
push
sbb
xor
or
sbb
and
cmpsl
fdivs
call
sub
mov
arpl
add
testb
xchg
lahf
loopne
dec
in
cltd
dec
mov
jo
xchg
insl
and
inc
call
fsubs
add
movsb
pop
lcall
and
rcr
xor
data16
inc
insb
mov
ret
or
lock
nop
pop
popf
jecxz
mov
mov
jp
ret
jbe
fidivl
xor
mov
ljmp
mov
adc
pushf
push
data16
movsl
cli
fldcw
jbe
cmp
pop
shl
popa
jbe
aaa
mov
adc
cmp
inc
orl
xchg
cmp
sub
jno
mulb
push
dec
xchg
push
jl
and
fs
dec
mov
dec
mov
mov
movsl
mov
aaa
pop
mov
inc
cmpl
or
cmpsl
test
data16
inc
pop
ret
push
dec
mov
rclb
push
pop
xor
outsb
in
fdivrp
mov
adc
mov
and
insb
mov
cltd
divl
pop
xchg
enter
dec
jp
jnp
jns
sbb
mov
out
add
xor
inc
fcoml
add
popf
movsl
fldcw
lock
inc
jmp
mov
adc
and
ljmp
rolb
dec
jns
pop
push
pop
test
dec
push
inc
xor
dec
lahf
dec
pop
and
mov
cmc
add
leave
nop
in
inc
outsb
andl
fcmovnbe
mov
mov
jle
out
popl
mov
pop
out
push
sub
pop
pop
push
pushf
imul
sub
arpl
cmp
fisttpll
push
aad
jo
dec
push
adc
lea
test
pop
icebp
cwtl
outsl
dec
aad
inc
or
or
sbb
or
sbb
jp
inc
xor
jo
stc
sbb
pop
push
jae,pt
push
and
loope
data16
ffreep
pop
or
cmpsb
nop
sahf
push
xchg
outsl
xchg
xchg
jl
mov
and
xchg
cmpsl
call
xorb
dec
popf
call
sti
dec
xchg
adc
xor
movsl
adcb
push
mov
and
ds
and
stc
jns
xchg
mov
sti
adc
mov
into
shrl
jle
fcmovb
push
notrack
daa
sbb
icebp
inc
mov
pop
bound
xlat
xlat
out
sub
outsb
sbb
idivl
push
and
ljmp
mov
hlt
push
push
mov
push
sbb
scas
cmc
repz
enter
je
leave
insl
add
mov
sub
pushf
test
mov
mov
loop
cltd
jmp
mov
gs
push
mov
popf
leave
decl
inc
inc
pop
cmpsl
jp
call
xchg
inc
adc
icebp
mov
mov
and
sbb
and
or
and
insb
sahf
fs
dec
mov
ret
inc
leave
sti
and
out
jo
or
cli
inc
sub
dec
les
aaa
inc
push
and
lret
data16
cmp
bound
push
push
push
repnz
fistps
cld
xchg
rol
inc
push
xchg
mov
fisubs
jno
ds
aas
mov
stc
and
xorb
xorl
fnop
sub
cmp
mov
bound
mov
test
and
cld
sub
ror
lahf
out
mov
in
out
into
push
xor
jns
rol
mov
mov
sbb
xchg
scas
mov
xchg
stos
test
gs
mov
stos
adc
or
test
ja
ret
fisubl
lret
stos
xchg
push
out
lret
and
inc
out
xor
mov
push
inc
sub
pop
pushf
lock
mov
lods
push
push
ds
cmp
xchg
mov
inc
ljmp
cmc
inc
and
cmp
mov
inc
insl
jnp
call
popf
inc
ljmp
push
and
cmp
movsb
or
xor
pop
xchg
pop
adc
fsubl
jne
insl
push
pop
mov
rcll
mov
mov
pushf
insl
into
cltd
mov
jmp
push
sbb
push
sub
dec
outsl
inc
sbb
fsts
call
test
lea
into
jns
pop
stc
filds
mov
push
aaa
adc
jbe
jl
imul
push
jne
and
or
jb
mov
sbb
and
xor
icebp
das
push
test
mov
test
sub
mov
scas
scas
jno
scas
clc
les
jnp
fsub
pop
aam
aad
fisubs
test
mov
xor
ret
cmpsl
ficompl
push
mov
lods
sbb
mov
out
or
out
inc
lods
out
jle
push
enter
fsts
and
sti
xor
cs
inc
cmpsl
icebp
mov
imul
mov
jl
loopne
test
lods
dec
js,pn
lods
test
ret
add
inc
adc
jbe
stos
mov
and
mov
pop
pusha
rcl
lcall
mov
xchg
sub
lods
repz
jo
xor
lcall
std
pop
and
push
xchg
jne
xchg
iret
mov
mov
clc
fistps
cmp
cmp
pop
xchg
xor
push
ficoms
fimuls
mov
and
lea
nopl
xor
shrl
jge
mov
sar
test
add
push
dec
jl
sahf
sbb
repz
lret
push
syscall
jmp
dec
fwait
xor
lahf
jmp
mov
roll
inc
decb
mov
sub
fnsave
outsb
mov
bound
dec
data16
in
shlb
call
push
mov
faddl
out
scas
or
jae
lahf
push
push
and
adc
incl
lods
sub
jno
mov
dec
pusha
or
pop
inc
in
nop
sti
or
or
xchg
imul
ds
lods
jnp
sub
jb
aad
push
imul
sbb
pop
fidivrl
add
mov
mov
adc
stos
lea
xchg
test
or
bound
outsb
push
sub
mov
adc
int
inc
sub
lock
jbe
dec
std
loope
pop
insb
sti
xchg
xor
mov
js
adc
stc
dec
xor
mov
sub
test
out
stos
mulb
pop
je
jne
test
out
xlat
aad
mov
pop
outsb
and
and
xor
cs
cmp
in
lods
std
and
cli
shr
mov
mov
shrb
cltd
add
subl
push
pop
lcall
sub
cwtl
jle
or
pop
hlt
inc
stc
jg
pop
inc
adc
sbb
cmp
push
cmp
inc
cmp
lahf
sub
push
scas
add
cld
int
or
ficoms
shrb
fucomp
pop
test
out
adc
ljmp
pusha
cmp
adc
lahf
test
dec
aaa
mov
rorb
cltd
pop
mov
push
jmp
jo
or
xchg
cmpsl
add
or
inc
jo
daa
pop
push
xchg
inc
mov
adc
push
lock
rcr
bound
je
mov
daa
lods
sbb
xchg
adc
dec
inc
out
in
xor
push
in
iret
roll
test
mov
aad
inc
inc
pop
out
adc
mov
sub
imull
pop
mov
test
frstor
pop
inc
push
insb
mov
out
mov
cmp
imul
add
pop
rorb
jo
jne
bound
sbb
xchg
rcrl
es
les
hlt
testl
xor
mov
scas
shll
sahf
test
mov
sbbb
lock
xchg
jb
mov
daa
jmp
and
jae
inc
jbe
loopne
adc
xchg
adc
neg
repz
sub
out
lock
sti
lds
fmuls
xchg
push
popf
mov
push
rol
jl
repz
push
out
push
lods
add
sbb
ljmp
stc
push
mov
hlt
cmp
add
loope
imul
repz
cmp
add
pop
sbb
in
and
fs
dec
adc
adc
in
push
les
xchg
iret
mov
imul
in
sub
mov
repnz
fwait
add
daa
inc
dec
sahf
sti
stos
daa
lds
and
inc
lahf
xchg
xor
sub
lcall
or
cmp
fildl
mov
bound
dec
add
and
lret
into
pop
xor
sub
sbb
pop
fcoml
fwait
cmc
mov
push
icebp
loopne
aad
scas
arpl
ja
mov
jnp
inc
cltd
and
xchg
mov
fucomip
dec
cmpsl
jns
inc
rclb
mov
mov
or
ss
shlb
jnp
hlt
fnstsw
test
mov
mov
lods
xor
sarb
sbb
insl
adcl
pop
rorl
int3
pop
dec
out
scas
mov
mov
fmull
outsb
fwait
mov
inc
and
lock
pop
in
sahf
adc
push
je
jbe
sbb
stos
cmp
nop
xor
lahf
mov
fcomp
stos
outsl
jmp
fmuls
subb
mov
cmp
es
seta
rolb
imul
jle
sub
jge
ja
jbe
jb
repz
sbb
rcrb
in
sti
dec
cmp
mov
xor
adc
sti
cmpsl
scas
xor
shll
pop
cmp
mov
fwait
arpl
jns
nop
scas
jns
inc
in
rcl
xor
xor
lret
cmpb
and
cmpsb
cmp
xchg
mov
lds
cmp
cmp
rcll
test
and
repz
les
pushf
sti
lret
decb
push
rcrb
out
pop
sub
jecxz
xchg
fs
mov
fs
add
sbb
outsl
out
add
sbb
cmp
popa
add
push
xchg
sub
push
fmull
adc
lcall
sbb
or
inc
lods
and
bound
stc
xchg
hlt
test
push
popl
xor
aam
lods
lahf
fucomip
xor
imul
cmpsl
inc
scas
xor
push
movsb
inc
jb
aad
sub
test
clc
mov
adc
xchg
fdivs
xor
add
add
push
inc
inc
ficomps
mov
mov
push
sub
dec
insl
jmp
pop
mov
ds
sahf
push
jge
pop
lock
iret
mov
sbb
mov
mov
ljmp
sub
adc
cmp
jnp
pop
jp
xchg
lods
xchg
fsubs
jl
push
aam
outsb
imul
test
lds
jmp
fstpt
jg
pop
shlw
fwait
testl
xchg
xor
loopne
lcall
pop
shlb
gs
or
inc
leave
ja
push
sti
or
dec
in
in
adc
in
mov
mov
mov
jecxz
jp
iret
inc
add
jae
pop
movsl
movsl
aas
inc
std
cwtl
sub
fsubrp
xchg
out
rclb
cmc
lret
add
shlb
jno
lods
pop
jbe
inc
je
imul
push
int
lcall
std
imul
jnp
fs
test
pop
inc
fisubrs
sbb
scas
out
mov
xor
pop
jmp
arpl
int
push
jnp
mov
or
jbe
ficompl
jne
sahf
xchg
mov
add
test
popa
or
ds
jle
push
and
sbb
jmp
or
leave
cltd
mov
inc
xchg
add
pusha
inc
push
clc
xchg
cmp
out
mov
xor
lret
stc
and
test
in
pop
push
addr16
sub
xchg
pop
push
sbb
fs
call
mov
xchg
xchg
mov
das
pop
mov
push
jmp
in
leave
pusha
adc
cmp
push
fsubl
push
mov
int3
ficompl
outsl
dec
xlat
and
jge
cwtl
mov
jae
dec
pop
test
mov
popa
js
jg
mov
jns
or
mov
std
jno
clc
or
lcall
and
push
adc
xchg
insb
pmulhw
dec
dec
aad
mov
sub
es
into
hlt
lds
das
jno
popf
icebp
iret
xor
leave
mov
in
mov
xlat
stos
ret
gs
inc
jnp
sti
icebp
dec
fistpll
stos
xchg
dec
sub
dec
xchg
fldenv
jmp
mov
pop
fdivrl
andl
pop
xor
push
sub
sub
inc
nop
or
sbb
cmpb
cmpsl
jo
dec
stos
or
sub
arpl
repz
xchg
lret
andl
pop
fisubrl
push
inc
daa
sbb
rolb
and
add
rorl
mov
dec
dec
jp
fwait
jg
mov
fcoml
fsts
or
sub
loopne
out
jge
dec
das
mov
sbb
jne
jno
mov
mov
iret
fmull
testb
xor
or
fdivl
jmp
repz
sub
xor
or
mov
inc
cld
loopne
xchg
adc
xor
xor
and
pushf
push
jle
outsl
dec
xlat
imul
dec
and
imul
imul
jnp
ss
cmp
inc
jg
decl
inc
sub
arpl
inc
test
push
xchg
xor
pop
aas
out
nop
push
pop
mov
dec
inc
imul
loop
push
pop
mov
js
xor
test
fsts
inc
xchg
loop
out
adc
mov
dec
repnz
repnz
aam
and
xchg
sub
cmp
loop
pop
iret
xchg
sbb
int3
dec
loope
js
fmuls
lret
jg
ret
cmpsl
and
fisubrs
sbb
leave
push
cmp
mov
andb
xor
inc
xor
push
jmp
inc
lods
sbb
andl
popf
les
lods
sub
aaa
in
or
ljmp
inc
shlb
aam
cmp
inc
imul
int
sub
mov
fbld
leave
add
add
iret
sub
jb
cmp
mov
and
lahf
push
sbb
cmp
mov
fadds
lods
push
push
scas
add
je
repnz
adc
cltd
jl
mov
repnz
popa
sub
mov
jecxz
lret
aaa
mov
sub
mov
les
ds
ds
out
push
std
lahf
data16
jns
loope
xlat
xchg
outsb
and
shr
dec
in
pop
fbld
jno
mov
dec
nop
push
push
mov
xor
orb
add
cli
sbb
xor
aad
mov
and
movsb
xchg
icebp
stos
or
in
sbb
jb
test
and
xchg
xlat
add
mov
jg
inc
pop
adc
sbbl
insb
xor
popf
inc
insb
clc
mov
xchg
into
sbb
cmp
jbe
xchg
jmp
hlt
jnp
cltd
cld
lcall
lods
push
rolb
loope
inc
lret
aad
jp
cmpsb
push
mov
out
dec
cmp
shrd
and
add
roll
inc
and
or
daa
aad
in
clc
pop
inc
dec
sub
xchg
test
mov
sbb
subb
inc
stos
xor
sbb
cmp
jg
cmp
adcb
rcrl
clc
push
lods
jg
out
jecxz
xchg
ret
int
cld
lock
iret
test
shll
mov
loop
xor
adc
clc
xchg
mov
sub
call
or
sub
xlat
xchg
jbe
mov
dec
pop
nop
mov
xchg
adc
sbb
xlat
and
xorb
add
inc
add
cmp
or
or
push
add
shrl
into
lods
ja
outsb
aad
and
xchg
popf
jbe
sbb
xor
in
adc
xchg
decl
pop
cld
add
ds
sahf
jmp
int
mov
and
add
adc
mov
ljmp
outsb
aas
not
mov
pop
and
lcall
adc
jo
mov
push
push
test
xlat
fisubrl
mov
mov
mov
xchg
int3
imull
sti
cmovge
and
dec
sbb
scas
dec
addr16
lods
inc
and
jns
cli
pop
sbb
and
mov
dec
fisubs
mov
sbb
rcll
mov
mov
inc
mov
inc
aam
jo
fsubp
test
cmp
inc
loop
jmp
subb
push
loope
stc
push
jns
cwtl
icebp
jg
or
aam
xchg
mov
push
pop
cwtl
jns
xor
and
or
mov
xchg
insb
jl
jns
lahf
inc
in
pushf
imul
mov
cmpl
loope
scas
push
push
cmp
mov
movsl
loopne
mov
jae
stos
adc
insl
xor
and
ljmp
out
dec
dec
gs
ret
xor
push
pop
sti
popa
int3
lods
add
xchg
adcl
xbegin
aaa
les
dec
xor
inc
pop
loop
mov
and
jb
das
jp
lahf
or
daa
jmp
pop
adc
jne
cmpsl
mov
jbe
inc
cmpsl
pusha
xor
cmc
mov
fmul
lds
faddp
push
xchg
rclb
jp
out
nop
inc
pop
adc
push
mov
adc
fcoms
enter
ret
mov
lret
outsb
cltd
xchg
repnz
test
xor
cmp
ja
leave
inc
mov
add
jg
aad
nop
and
fwait
adc
popa
scas
push
pop
xor
lods
adc
xchg
sbb
out
dec
push
ret
les
cld
fwait
mov
mov
popf
movl
jne
aad
loopne
mov
dec
jno
jnp
mov
push
mov
push
pop
cmc
adc
jns
push
das
mov
cld
popf
call
rorl
xor
shll
add
mov
push
push
insb
or
cld
arpl
rol
fstps
stos
inc
stos
ret
cli
xchg
mov
sbb
mov
roll
xor
into
rcrb
sub
jno
in
cmp
stos
out
enter
mov
jo
adc
sub
mov
lret
mov
xorb
cltd
shrl
push
movl
lds
out
sub
sbb
sbb
mov
shlb
inc
push
sub
mov
out
adc
es
popa
jns
loop
movsl
sub
mov
das
inc
cmpsb
stos
push
mov
pop
int
xchg
movsl
sub
sub
scas
xchg
mov
sub
pop
testb
add
or
jae
loopne
das
and
xor
stos
and
clc
push
mov
pop
out
push
pop
and
mov
fdivrs
test
in
aad
push
testb
add
sbb
sub
sub
insb
and
jge
pop
add
repz
vmread
dec
js
cmp
test
pop
sahf
popf
pop
dec
in
inc
loopne
in
loope
ljmp
shrl
ret
lods
xchg
add
push
loopne
push
inc
rclb
daa
in
jle
das
cli
inc
movsl
sub
xchg
jae
cwtl
jl
and
imul
mov
shl
fsin
cmp
shlb
pusha
sbb
jmp
cli
add
ss
sub
jl
and
mov
inc
mov
je
aaa
sub
lds
lods
into
add
add
mov
sub
xlat
mov
rorl
inc
mov
adc
jae
pop
movsb
cmp
xor
push
mov
xchg
xchg
pop
in
pop
xor
cmpb
mov
xor
jae
mov
push
fisttpl
cmp
jl
popf
jmp
in
xchg
sub
imul
xchg
pop
mov
sahf
jno
pop
hlt
add
fisubl
jnp
xchg
cwtl
mulb
push
dec
pop
adc
jge
pop
or
pop
fs
pop
gs
scas
and
loop
mov
jge
aad
mov
jae
movsb
dec
xor
mov
mov
andl
andl
imulb
mov
test
xchg
inc
ja
arpl
xchg
dec
sbb
sub
aam
pop
jg
pop
xchg
mov
or
imulb
in
test
scas
cmp
mull
pop
dec
xchg
dec
cltd
sbb
dec
mov
loopw
rol
dec
xchg
sub
roll
xchg
inc
lahf
int3
inc
out
paddb
mov
xlat
add
adc
mov
cwtl
gs
mov
add
repnz
mov
push
and
adc
dec
add
jb
jmp
pop
orl
lret
mov
fists
or
sub
sub
into
pop
cltd
xchg
outsl
int
call
es
popa
pop
jg
in
pushf
data16
aaa
add
dec
nop
cmp
push
dec
aad
imul
push
andb
scas
xor
and
ret
jnp
ja,pt
jg
lea
imul
test
dec
sbb
scas
addr16
and
pop
push
mov
dec
mov
mov
jne
lea
pushf
leave
jae
sub
jle
xorb
and
mov
push
das
outsl
sub
clc
and
lods
xchg
fnstcw
xchg
outsb
push
nop
orb
or
jns
loopne
stos
imul
fdivrl
shlb
lds
push
inc
cbtw
mov
repz
inc
cmpsb
aam
test
or
leave
mov
pop
rcrb
lcall
clc
dec
dec
sub
mov
jne
mov
xchg
cltd
dec
xor
pusha
add
in
push
pop
out
loopne
idivb
inc
cmp
jl
xchg
aas
adcb
jns
jle
adc
in
cmp
push
adcl
add
adc
pop
aaa
push
xchg
btc
pop
inc
mov
push
arpl
sub
incl
cmp
cltd
pop
into
jl
fld
lfs
lcall
fs
mov
mov
mov
notb
mov
push
jg
int3
not
push
xor
sarl
loopne
jno
xor
add
push
dec
int
in
inc
jmp
xchg
push
cmp
lret
adc
lds
xchg
mov
mov
inc
fdivrp
mov
outsb
xor
adc
fidivrs
in
lea
push
aam
fisttpl
pop
ljmp
in
cli
xchg
adc
lods
in
ja
xchg
add
in
mov
push
enter
addr16
fdiv
iret
dec
xchg
bound
xchg
xchg
push
jne
jp
inc
out
add
push
pop
push
roll
fildl
sbb
stc
dec
das
adc
mov
cmp
and
rcll
fwait
cmp
inc
int
pop
je
push
sub
xchg
sbb
pop
sub
lcall
mov
pop
sbb
mov
sub
data16
in
jb
cmp
jo
popa
pop
nop
insl
sahf
pop
cmp
and
rcrl
inc
xor
mov
inc
jb
pop
sbb
mov
xlat
mov
mov
adc
out
cmp
push
or
lods
dec
aas
pusha
xchg
xchg
and
pop
das
lods
or
push
popa
stos
rorb
cmp
repz
lcall
sahf
test
cwtl
cmp
aam
xor
sub
js
mov
addb
sarl
adc
out
inc
sbbl
sbb
lock
int3
push
add
loope
sbb
loope
cmp
out
fstl
hlt
push
xlat
inc
pusha
test
daa
cmp
mov
cmc
xchg
pop
lods
sub
add
push
sub
pop
inc
add
sub
adc
arpl
adc
jne
and
mov
fsub
sub
shll
frstor
mov
xchg
ret
or
insl
cmc
jno
push
pushf
shlb
pop
xor
push
mov
cmc
dec
ljmp
fwait
xchg
dec
test
lret
das
cmp
inc
ret
clc
mov
jne
mov
mov
scas
mov
push
outsb
icebp
repnz
cmpsb
out
or
clc
popa
lcall
or
and
shlb
or
iret
jo
xchg
xchg
dec
push
gs
jmp
add
cmp
stos
shl
dec
nop
xchg
sti
inc
sub
stc
shlb
adc
cmpsl
pop
add
inc
pop
lds
inc
outsl
bound
stos
cwtl
mov
push
xor
push
pop
repz
out
pop
sbb
and
mov
lret
scas
in
nopl
fldl
int3
sbb
js
mov
add
xchg
bound
or
imul
mov
or
test
fucomi
lret
xor
loope
pop
ljmp
xchg
fchs
loope
fs
xchg
imul
hlt
in
xchg
subl
orl
add
sub
movsl
popf
push
aas
cmpsl
xor
mov
jb
mov
sbb
imul
sbb
inc
inc
jb
or
jmp
mov
push
dec
jno
sahf
popl
or
mov
dec
std
nop
es
adc
fildll
dec
push
mov
adc
call
adc
stc
jmp
out
mov
mov
or
pop
out
xor
xchg
or
push
mov
jl
movsl
mov
movsl
out
stos
scas
test
test
orb
adc
fs
mov
nop
mov
imul
pushf
sub
rcll
adc
repnz
add
mov
pop
fsubr
push
lds
in
xchg
add
lret
jl
adc
pop
lock
inc
je
jne
xchg
xor
aas
sub
xor
pop
dec
dec
dec
mov
inc
ja
cltd
adc
fisttps
mov
out
inc
addr16
inc
push
imull
xor
sub
lret
pushl
jecxz
mov
xor
push
jnp
orl
popa
fisubl
stc
outsl
jmp
xchg
jns
and
cli
pop
lock
minps
addr16
sub
adc
daa
mov
lea
movsl
jne
mov
cmp
mov
mov
scas
shlb
jns
and
add
test
test
mov
and
lret
idiv
sahf
or
add
hlt
cmp
inc
mov
or
pop
mov
in
push
jmp
and
xchg
into
fwait
addl
pusha
xor
fcmovnbe
xchg
pop
jne
test
inc
arpl
inc
pop
xchg
cmp
push
nop
and
dec
ja
jns
or
mov
push
ds
leave
cwtl
mov
inc
je
mov
outsb
dec
lahf
ror
xchg
imul
outsl
push
add
sbb
jbe
mov
cli
add
hlt
cwtl
xchg
pop
movsl
testl
dec
ja
xor
jecxz
in
jg
jge
sbb
pushf
add
cmp
jb
inc
pop
mov
xchg
enter
inc
addr16
mov
fmul
mov
loop
inc
cs
sub
cwtl
jp
or
ds
loopne
sbb
pop
int
pop
sub
or
test
or
xor
mov
inc
cmpsl
sub
xlat
mov
shrl
xchg
jp
sbb
fisubl
scas
aas
divb
jle
sarl
inc
sbb
inc
lcall
push
push
jb
repz
daa
divb
lret
or
subb
les
cmpsl
push
adc
sub
add
packsswb
lods
adc
xorb
sbbb
push
out
sub
fldl2e
or
mov
call
test
mov
int3
fcoml
add
rorb
clc
fildll
pop
aam
sbb
and
cmp
out
cmp
clc
mov
cmp
loope
inc
subl
xor
push
popl
mov
dec
push
push
and
movsl
add
push
bound
pusha
movb
push
aam
js
aam
dec
lret
sub
push
notl
jo
sbbl
shl
sub
mov
pop
mov
ds
jmp
mov
imul
jg
mov
fisttps
adcl
jecxz
cmp
jnp
mov
or
jae
in
sbb
xchg
es
in
mov
or
call
mov
out
push
fwait
dec
mov
test
fisubl
cli
inc
pop
add
fwait
push
or
aas
testl
inc
dec
xchg
iret
push
pushf
les
cmpsb
decl
fdivrs
cmpsb
mov
sub
ss
mov
test
aaa
mov
out
mov
test
loop
inc
adc
pop
stc
cmp
pop
dec
insb
add
xchg
sti
vpcomq
std
jnp
push
sub
lods
jno
pop
inc
dec
mov
mov
sarb
inc
scas
js
test
sbb
outsb
inc
lahf
call
stos
inc
in
dec
in
je
sbb
xor
jmp
outsl
fwait
push
cs
test
add
mov
int
sbb
shll
icebp
cmp
push
cmp
mov
fcoml
dec
shll
jb
mov
jb
jo
jno
rol
mov
lret
arpl
pop
cmp
adc
xchg
push
pop
int
sar
aaa
sbb
pop
sti
mov
mov
xchg
inc
jmp
xchg
insb
out
jno
inc
icebp
sub
cmp
mov
lds
lods
daa
xchg
imul
imull
aad
jle
sub
cmp
pop
hlt
mov
lret
fnstcw
xor
scas
push
xchg
sub
testb
sti
repz
stc
add
jp
lods
inc
push
push
pop
test
insb
sbb
xor
fdivs
ljmp
lods
mov
ds
cmp
imul
stos
mov
jb
xor
int
dec
bound
movsl
push
adc
aam
add
mov
xor
in
xchg
pop
mov
and
bound
hlt
roll
popa
divl
xor
mov
pushf
lea
add
lret
push
mov
and
mov
dec
mov
loop
mov
in
mov
xchg
lret
in
dec
scas
test
bound
ficompl
dec
into
incb
sub
pushf
inc
push
or
shlb
addr16
sbb
rcrb
aad
cld
ds
pop
cmp
lcall
rep
sbb
push
cltd
fmuls
cmp
sbb
cli
and
fidivrl
adc
inc
fincstp
shrb
enter
fdivl
hlt
push
notl
test
testb
xchg
mov
sbb
mov
sub
das
add
iret
and
fldenv
pop
add
test
sub
xor
ret
in
mov
mov
add
cmc
jno
mov
movsl
and
stos
mov
outsl
andb
push
jo
mov
mov
ficoms
inc
mov
lds
mov
or
mov
mov
or
push
mov
xor
dec
fsubrl
cs
clc
jmp
fdivrl
int
mov
xchg
cmpsl
push
push
mov
sub
mov
inc
mov
aas
flds
mov
pop
mov
testl
daa
movb
das
jnp
jne
rorb
adc
xchg
dec
stos
add
pop
mov
les
add
out
xbegin
xchg
xor
into
ficomps
cli
cwtl
into
jmp
mov
dec
lahf
test
sbb
dec
adc
ds
std
xchg
dec
mov
sbb
mov
pop
fstpl
addr16
sub
test
jb
pop
xchg
ljmp
mov
dec
and
xor
ficoms
ficoms
sub
and
pop
or
dec
scas
sub
std
push
and
push
fcmove
mov
pusha
lods
imul
imul
outsb
inc
adc
stos
add
adc
xorl
dec
add
xlat
or
cmp
sbb
test
leave
pop
jecxz
icebp
push
and
imul
lods
cmc
addr16
xor
lods
daa
shll
or
inc
mov
mov
pop
dec
cmpsl
push
orb
mov
mov
fcomip
stos
xchg
mov
inc
add
sahf
add
push
lea
pop
pusha
adc
mov
adc
pop
sub
xchg
rolb
inc
push
into
xor
stc
lahf
cmp
out
push
push
add
cmpsl
cmp
jecxz
repnz
cwtl
push
call
loopne
shr
lea
rorl
pop
add
xor
out
adc
push
and
imul
shrl
and
daa
push
bound
mov
mov
bound
cmpb
mov
outsl
out
sbb
mov
inc
jbe
xorb
sub
sbb
jae
mov
cmp
in
or
std
jle
inc
xchg
div
pop
mov
adc
push
ret
cltd
test
xchg
cmp
testl
cmp
movsb
dec
lcall
mov
add
mov
jo
dec
loop
jae
pop
mov
jge
cmc
lods
shlb
roll
xchg
call
adc
inc
xor
sbb
cli
in
push
and
sahf
pushf
hlt
pop
xor
sbb
mov
mov
adc
adc
aas
aas
stos
pop
scas
sarb
jge
pop
shlb
js
xchg
jle
fsubr
add
aas
push
sbb
inc
mov
mov
pop
sar
xor
cmc
outsb
xor
in
loopne
xchg
lcall
loope
lods
adcb
mov
fcmovb
and
ret
ss
mov
lret
roll
sbb
ljmp
jl
iret
mov
xchg
adc
jne
out
aaa
gs
and
scas
mov
add
mul
fnop
pop
test
cmp
inc
and
andl
ret
iret
adc
jl
push
fcomi
inc
lock
mov
cmp
addr16
movsb
mov
scas
aam
in
addr16
or
das
mov
stc
sbb
push
ret
mov
out
cmpsl
jno
pop
inc
mov
xchg
cmc
or
cmp
int
push
or
nop
fdivr
into
add
mov
add
aaa
or
mov
out
test
aad
mov
loope
pushf
stos
hlt
pushf
jnp
cmp
jecxz
cmp
getsec
jp
sahf
jb
cmp
dec
maskmovq
imull
stos
xchg
pop
jge
sub
iret
insb
jns
out
mov
push
or
in
sti
adc
mov
scas
adc
pop
push
jecxz
sbb
jg
dec
xor
cli
nop
dec
pop
dec
or
stos
pop
sub
icebp
jle
imul
fdivr
mov
dec
aaa
ret
jbe
insl
rolb
xchg
stos
int3
add
push
loop
cmp
xchg
adc
sbb
add
sahf
call
int
leave
lods
push
popa
jno
ret
push
aad
mov
fsub
das
pop
push
mov
in
lahf
jl
mov
xchg
pop
push
cld
mov
fisubl
dec
loope
push
arpl
dec
jecxz
sub
cwtl
fistpl
les
jno
sbb
mov
pop
lods
cli
pushf
fs
rcl
dec
jo
data16
scas
and
push
pop
or
out
les
std
pusha
int
je
movsl
add
mov
xlat
loopne
or
cli
hlt
push
inc
and
lds
imul
pop
pop
repz
js
adc
stc
inc
or
dec
dec
mov
lret
jp
orl
out
mov
dec
cltd
daa
pop
out
push
jo
xor
sbb
jg
pop
dec
jnp
iret
jmp
mov
mov
sbb
push
out
js
inc
mov
lahf
add
mov
sysenter
jecxz
addr16
out
mov
cmp
sbb
rcrb
jecxz
adc
fadds
mov
sbb
push
insb
pop
pop
movb
push
and
loop
in
lds
jmp
mov
jnp
sub
fsubrs
pop
push
push
push
inc
mov
imull
push
pop
ret
or
inc
jl
mov
cmp
sti
mov
cli
daa
clc
pop
mov
pop
mov
test
fisubrs
pop
repz
scas
mov
lods
mov
adc
testb
popa
or
pop
out
scas
fstl
push
push
push
gs
push
mov
daa
inc
lods
shll
scas
mov
hlt
or
jmp
dec
pop
adc
scas
fcoms
gs
div
mov
cli
aas
mov
adc
iret
enter
xchg
out
leave
and
sahf
jg
inc
out
cld
js
mov
rorl
xlat
cmc
hlt
insb
push
add
push
lcall
mov
stc
gs
pop
sub
enter
mov
hlt
mov
push
dec
outsl
movb
scas
inc
stc
inc
pop
or
fstpl
ljmp
dec
xor
out
pop
sbb
fnstcw
xchg
pop
mov
repz
pop
inc
aad
inc
and
jbe
notl
sbb
das
fists
ds
mov
xor
fstpt
cmpsb
inc
dec
lret
and
cmp
jp
adc
ljmp
sahf
cwtl
jne
ja
mov
cmc
xchg
jns
imul
fcompl
ret
cmp
inc
int3
testb
lahf
or
repz
and
pop
xchg
mov
ljmp
cltd
push
in
xchg
pop
jo
inc
mov
arpl
lods
push
hlt
outsl
sbb
xchg
push
xchg
sbb
fwait
add
daa
cmpsl
xor
jecxz
xor
subb
or
pop
shr
fbld
dec
inc
and
out
dec
add
push
mov
inc
mov
sub
les
cwtl
js
mov
out
jl
mov
jno
cmpsl
cmp
sub
rclb
out
lods
int
xchg
xchg
jb
mov
dec
out
pop
or
sub
or
adcb
aas
dec
in
fadds
negb
jo
push
and
xchg
sbb
out
xchg
ja
mov
xor
popa
jg
push
pop
and
inc
add
add
jmp
in
sub
sub
sub
lods
in
aam
inc
iret
jmp
cltd
les
insb
and
leave
dec
iret
push
aas
mov
das
mov
js
or
and
adc
push
mov
cmp
or
aas
call
jecxz
and
int
test
mov
xchg
cmp
fs
repnz
mov
js
adc
mov
xor
repnz
xlat
sbb
cmp
push
lock
dec
mov
mov
mov
pop
in
mov
xlat
out
or
lods
push
jmp
cmp
cmp
movsb
mov
jo
dec
ficompl
pushf
fiaddl
in
jmp
loopne
mov
or
in
inc
in
lock
es
cwtl
jb,pt
and
add
mov
movsb
sub
lcall
adc
mov
lea
push
xchg
orl
scas
das
sbb
adc
jg
mov
xchg
inc
popa
rol
movsl
loopne
js
mov
add
gs
std
mov
cmp
pop
cmpsb
pop
pop
mov
testb
gs
aaa
mov
std
fs
cmp
dec
xor
negl
xchg
insb
sub
push
imul
push
scas
xchg
xor
add
icebp
adc
ret
sub
adc
scas
cmp
les
mov
andb
push
leave
cmp
pop
jne
cmp
loop
add
andb
iret
lods
cld
or
sbb
aad
je
shlb
mov
add
lahf
in
rcrb
lea
subl
les
int3
xchg
or
insl
in
stos
jnp
xor
sbb
cmpsb
je
addr16
mov
es
or
and
test
pop
into
add
aad
sahf
dec
fyl2xp1
lods
in
aad
inc
inc
add
xor
cmp
sbb
clc
aas
xlat
jecxz
xchg
lahf
inc
pop
jbe
lock
lods
push
pop
je
sarl
mov
stc
xor
or
mov
cwtl
mov
cmp
lcall
inc
jns
pop
jle
mov
cmp
inc
hlt
fmull
inc
sti
mov
jae
push
pop
xchg
mov
cli
pop
repnz
test
and
subb
popf
xor
cmc
out
icebp
stos
cmp
icebp
sbb
sub
push
mov
out
orb
out
adc
push
add
cmp
or
stc
add
xchg
iret
adcb
mov
mov
jno
jne
es
orl
lock
jmp
notb
cwtl
mov
loop
test
add
cmp
fnsave
xchg
je
addr16
test
cmp
mov
inc
call
adc
jmp
add
pop
pop
xchg
push
pop
push
insl
and
or
xchg
sti
clc
and
mov
cmp
cli
fldt
push
lock
fs
in
nop
aaa
push
es
jecxz
int
js
f2xm1
jo
js
jg
cmp
data16
aaa
xor
jle
ret
xor
out
xor
aad
sbb
ret
and
mov
cmp
or
popa
xchg
jae
lret
lds
sahf
pop
mov
imul
mov
sti
sti
in
gs
sar
mov
sub
sbb
inc
aas
test
adc
insb
jb
sarb
sbb
and
jecxz
cli
inc
aas
das
lret
cmc
and
aam
add
mov
sub
cmp
and
iret
dec
mov
mov
mov
lds
mov
cltd
mov
ficompl
inc
gs
pop
jo
inc
cmpsl
loop
imull
sub
and
cmpsb
add
inc
push
enter
jnp
int3
sbb
add
gs
dec
mov
lds
sbb
adc
add
call
jge
xor
std
mov
data16
fidivrl
test
xor
adc
fists
iret
aad
pop
insb
out
insb
ret
sarl
cs
addl
mov
daa
push
push
jge
imul
mulb
and
sbb
inc
mov
dec
xchg
gs
mov
sti
xchg
lret
add
mov
sysret
ja
mov
loop
fs
fiaddl
jge
adc
push
in
xorb
insb
nop
adc
sahf
arpl
loopne
jbe
or
mov
orl
movsb
cmp
test
dec
out
sub
push
sub
adc
loope
and
pop
jl
negl
aad
rorl
sub
nop
dec
jne
out
sbb
mov
sahf
jge
mov
movsb
pop
or
xlat
xchg
inc
fwait
popf
mov
push
jge
xchg
cmp
into
pop
inc
sub
mov
dec
xor
icebp
push
mov
imulb
cmp
dec
enter
cmpsl
vshufps
adc
and
repnz
dec
inc
lea
mov
add
stos
jle
cmp
insl
nop
cmpsl
mov
mov
or
xor
jge
cs
xchg
test
inc
jl
inc
ret
out
sub
and
sub
repz
nop
cmpsb
pop
mov
push
xchg
int
jmp
cwtl
repnz
call
leave
dec
adc
cmp
repz
mov
add
shrb
cli
shrb
call
incl
data16
mov
lods
push
xor
out
mov
add
fiaddl
cmpsl
data16
movsl
icebp
xor
into
les
jl
subl
mov
sub
xor
xchg
inc
mov
add
sub
int3
in
jge
pop
sarb
mov
nop
adc
sbb
ds
or
shlb
ds
push
inc
adc
insb
lods
ljmp
nop
lds
push
jge
jge
aam
sbbl
ljmp
jno
push
ljmp
sbb
sub
or
mov
xor
sub
loopne
in
adc
jnp
mov
jne
push
aas
or
daa
scas
or
pop
enter
dec
or
sarl
push
cmp
call
jbe
dec
mov
pop
sub
aaa
gs
pop
mov
mov
push
push
in
inc
out
loope
push
mov
jge
pushf
fiaddl
pop
ret
xor
push
pusha
pop
mov
mov
adcl
pop
in
loope
out
jecxz
mov
mov
and
out
jne
pop
xchg
or
sbbl
cli
dec
jbe
lea
hlt
adc
xor
pop
arpl
pop
scas
repz
dec
push
das
push
lods
fisubrl
iret
int
jnp
neg
add
dec
pop
fidivrs
xor
inc
pop
adc
or
dec
fisubrs
lea
icebp
inc
test
xor
dec
mov
and
ja
xor
and
sub
cmpsl
push
jbe
jp
sahf
add
jmp
inc
push
mov
sbb
fistl
out
push
mov
mov
adc
stos
or
mov
test
out
dec
xchg
not
sub
imul
or
or
dec
arpl
incl
add
testb
mov
mov
shrl
subl
mov
outsl
sar
dec
cmpsl
pop
mov
daa
add
loopne
out
icebp
cs
fcoml
inc
rcl
clc
and
push
inc
cmp
fistpll
sahf
shrb
je
push
sub
notl
pop
ds
test
fisttpll
adc
ja
int
xchg
popa
push
mov
inc
pusha
test
cmpsb
push
pop
loopne
pop
and
cmp
out
mov
in
in
cwtl
inc
mov
jno
scas
clc
push
push
in
mov
lea
aas
outsl
subb
mov
cmp
and
xorb
mov
push
stos
scas
mov
mov
lret
sub
inc
mov
cmpb
jl
sub
mov
lock
addr16
ja
lds
cli
daa
aad
stos
in
loope
pop
or
outsb
cmc
lea
inc
xor
pop
push
push
and
sahf
cmpsb
lea
imul
addb
mov
subl
inc
dec
outsb
imul
add
or
xor
xchg
cmpsb
add
xchg
cmp
jge
jns
bound
pop
or
add
add
sub
or
int3
and
iret
adc
sarl
test
les
dec
clc
sub
std
in
xchg
imul
pop
mov
mov
aad
push
repz
mov
mov
pop
dec
mov
stos
dec
adc
fwait
jb
popf
das
sbb
xor
std
jl
int
pop
fdivp
xchg
addr16
xchg
fnstenv
xchg
mov
nop
and
les
js
mov
lock
mov
outsl
lret
add
insb
or
leave
inc
push
imul
cli
movsl
icebp
inc
dec
addr16
xlat
sbb
cld
cmp
in
std
pusha
out
jle
rcrl
inc
pop
cmp
out
inc
pop
fisubl
pop
push
sbb
mov
fimull
mov
clc
cmpl
sub
icebp
mov
rorl
xor
push
in
popa
jbe
out
mov
lea
fsts
loope
fcomp
test
test
mov
test
inc
xorb
dec
mov
jmp
sbb
xchg
daa
imulb
loop
arpl
and
cwtl
adc
lahf
insl
mov
arpl
int
insl
mov
adc
movsl
imul
push
adc
testl
int3
push
inc
test
mov
sub
and
ljmp
pop
out
pop
adc
sbb
fwait
ss
jne
dec
pop
decb
jp
jbe
xor
sahf
out
cmp
mov
xchg
cmp
out
shr
fdivrl
incl
xchg
sub
sub
and
dec
jno
in
in
mov
push
lret
test
cmpsb
sbb
pop
cmpsl
js
in
pop
stc
pop
adc
mov
in
xchg
sub
pop
mov
hlt
ret
enter
xchg
jl
mov
cmp
or
aam
and
pushf
aam
call
xchg
cvtpi2ps
jae
mov
jl
cs
pop
mov
mov
and
push
mov
daa
dec
jp
xchg
dec
jl
out
xchg
mov
and
sub
dec
into
cld
dec
cld
shll
xor
les
shr
xchg
sbb
sbb
jo
or
bound
fs
orl
sti
push
mov
inc
jmp
add
mov
fistps
dec
lcall
xchg
pusha
xlat
std
sbb
dec
stos
pcmpeqd
jle
shrb
xor
lods
xor
out
dec
sahf
dec
push
xchg
pop
inc
arpl
push
cmp
add
sub
add
and
pop
daa
sti
jae
pop
jmp
pop
adc
lea
xchg
jmp
insl
call
inc
or
push
pop
fdivl
repz
filds
mov
mov
jno
ret
scas
push
xor
and
pusha
adc
movsb
mov
mov
lock
mov
cmpb
xchg
lret
inc
dec
das
adc
inc
push
jmp
aaa
adc
inc
inc
fdivr
lods
mov
inc
je
insb
inc
and
ret
xchg
pop
mov
xor
push
imul
mov
and
jo
lods
xor
loopne
jl
imul
sbb
pusha
or
mov
xor
mov
sbb
xor
scas
add
outsb
mov
mov
xchg
addr16
in
das
rolb
xchg
push
jbe
cltd
inc
dec
aaa
cmp
pop
and
xchg
xor
scas
js
sub
add
xor
mov
push
mov
dec
push
or
inc
mov
jbe
xchg
mov
jae
xchg
cmp
pop
xchg
imul
out
daa
or
pop
jg
xor
and
hlt
xchg
imul
repz
les
push
xor
adc
into
add
adc
inc
push
pop
lea
mov
idivb
mov
adc
mov
mov
or
js
push
popa
jb
inc
or
imul
push
aaa
out
into
js
cld
int3
add
add
push
scas
xchg
push
jp
adc
adc
push
in
into
xchg
adc
xchg
clc
aam
movsb
mov
lret
pop
pop
out
out
adc
mov
push
mov
push
dec
mov
daa
dec
es
test
lcall
lock
scas
push
test
jl
into
scas
xor
push
ret
das
aas
in
xchg
jnp
scas
je
scas
shlb
test
nop
xchg
testb
lcall
mov
inc
repnz
ja
mov
adc
rcl
inc
lods
popa
inc
enter
in
xor
pop
or
outsl
xor
jb
aas
js
in
adc
xchg
test
js
mov
cwtl
xchg
sub
ret
and
xchg
mov
xor
cli
jp
imul
call
jmp
in
out
and
test
aaa
daa
mov
mov
jns
cmc
rcrl
shr
xchg
psadbw
and
jge
call
ud2
aad
call
xchg
popw
inc
push
enter
dec
sub
fldt
jo
inc
pop
adc
pop
xor
lret
arpl
test
cmpsl
mov
rep
sbb
lods
test
rcl
adc
dec
mov
mov
cmp
pop
subb
mov
in
xor
push
xchg
mov
pop
ffree
bound
popf
or
dec
jp
stc
movsb
sahf
sub
adc
je
inc
or
lods
inc
or
sahf
faddl
arpl
ss
orb
outsb
mov
mov
jle
xor
adc
or
movsb
fwait
sub
ljmp
cli
test
or
aaa
mov
adc
add
sarb
xchg
pop
je
or
mov
xor
sub
shr
sub
jmp
xor
push
jl
lahf
movsl
adc
xor
pop
mov
cmp
push
dec
mov
mov
fsts
mov
fistpl
adc
pushf
mov
icebp
mov
mov
pop
xor
inc
popa
orl
mov
jb
mov
or
enter
mov
sbb
ds
out
sub
cmpsb
dec
lcall
push
sub
clc
dec
dec
or
xor
sti
js
in
dec
cmc
cwtl
mov
jmp
and
mov
sbb
aaa
mov
mov
mov
jo
mov
sub
shll
sub
cmc
movsb
int
jbe
out
adc
in
push
cmp
jnp
ja
rcl
nop
mov
leave
repz
push
sub
cld
or
or
add
out
enter
xor
push
jp
mov
mov
jmp
addr16
or
push
and
cmc
rcr
jno
mov
rcrb
push
sub
rorl
imul
fwait
or
enter
flds
or
leave
mov
cmc
pop
push
inc
inc
jmp
dec
in
aas
cmp
inc
pop
add
pusha
js
jle
repz
dec
js
inc
jne
int
lcall
cmpsl
and
mov
sbb
add
stos
sub
into
pushf
jmp
xor
push
mov
popa
icebp
popa
xor
sahf
lea
popa
shlb
icebp
inc
data16
enter
shlb
rcrb
push
xchg
push
jb
data16
je
pop
out
adc
or
sub
test
int
mov
mov
xor
sbb
bound
xor
pop
pop
iret
sub
daa
fucomp
in
movups
pop
inc
mov
mov
mov
shl
ss
cli
inc
mov
into
rolb
mov
sbb
sub
or
xor
outsb
into
mov
and
rcrb
movsl
cmp
jg
and
jp
pushf
jmp
adc
insl
int3
dec
pop
xor
gs
fdivrs
mov
jne
cmc
lea
ret
jle
xchg
shrb
xor
jo
mov
pop
insl
mov
sub
stos
inc
jge
nop
sbbl
sti
test
sbb
dec
or
jb
inc
shlb
jnp
insl
test
sbb
lds
mov
loope
sub
mov
inc
dec
cmp
loop
push
jno
movsl
aaa
icebp
cwtl
call
dec
lret
jnp
xchg
shlb
scas
cmc
rclb
pop
popa
icebp
push
test
inc
dec
adc
add
jmp
mov
xor
adc
stc
cmp
pop
pop
jb
xor
push
scas
dec
dec
leave
inc
dec
pop
inc
imul
pop
loop
fsubl
ss
and
cmpsl
sarl
cmp
in
inc
rcll
jmp
push
dec
sub
and
sahf
jae
pusha
inc
inc
jno
pop
mov
pop
ss
xchg
push
cmpsl
jp
out
mov
pop
ret
inc
adc
cmpsl
movsl
lcall
push
test
ficoml
xor
shrb
sbb
gs
cmp
xchg
sub
cmp
dec
add
rolb
out
outsl
inc
sbb
test
add
call
int
addr16
pushf
inc
fcoms
push
movsl
add
ds
clc
or
adc
sub
gs
xor
fstps
aaa
enter
mov
cld
pop
inc
lea
cwtl
inc
cmp
out
mov
lea
fsubs
call
cmp
clc
out
push
add
ds
xor
out
cs
mov
push
fistl
pop
jae
cmp
dec
pop
pop
notb
daa
scas
cmc
inc
rcrb
shlb
add
daa
test
mov
cld
mov
jg
lods
das
push
or
pop
fnstenv
pop
std
mov
test
insb
das
or
mov
lock
mov
push
shr
rorl
mov
xchg
push
xor
mov
popf
in
add
push
jbe
pop
push
adc
out
je
dec
arpl
cmp
pop
add
sbbb
or
jns
sbb
mov
shrb
inc
sbb
ds
shrb
jb
es
cmpsb
adc
idivb
jae
push
aaa
or
dec
xchg
inc
dec
push
push
std
cld
dec
dec
je
and
inc
add
sub
pop
mov
adc
dec
inc
or
fldcw
fsubrs
fs
gs
sub
or
enter
daa
xchg
lret
jno
ret
xor
sbb
daa
leave
sub
stc
mov
imul
or
es
push
je
inc
pop
into
or
stos
xor
cmpsb
fimull
or
aam
add
or
or
pop
adc
icebp
dec
mov
repz
add
mov
pop
dec
scas
in
fstl
loop
and
jge
fmull
leave
xor
sbb
jg
xchg
sbb
fcoms
inc
scas
lcall
shrb
pop
mov
popa
out
xchg
and
xchg
xor
xchg
mov
pusha
push
xchg
je
push
mov
sub
out
sbb
int3
outsb
loope
aas
test
call
sub
pop
jg
hlt
push
or
xor
mov
cmpl
loope
push
shlb
inc
cmp
mov
push
push
cs
popa
repz
jle
add
arpl
pushf
fs
add
xor
adc
mov
repz
imul
push
aam
cld
in
jg
and
aaa
cmpb
imul
push
mov
mov
pop
jne
mov
xor
xor
std
and
jge
idivb
fcompl
dec
sbb
adc
cmp
rol
cld
jno
gs
ss
lds
cmp
jne
lds
rorb
jge
sub
push
or
jo
mov
xor
mov
icebp
xor
pushf
inc
out
sahf
js
add
int
outsl
push
xor
dec
pop
fstps
jg
aas
repnz
jnp
out
dec
out
add
add
rorl
jmp
fst
stc
scas
cld
decb
lret
enter
ss
fwait
cmp
loope
shrl
out
adc
sub
and
sub
in
dec
push
cltd
pop
loop
cltd
mov
jnp
aam
js
ja
xor
mov
xchg
cmpsb
in
jge
cmpps
lea
stc
mov
pop
xlat
in
cmp
insb
scas
test
mov
movsb
jno
fwait
ljmp
mov
pop
imul
inc
xchg
push
pop
mov
out
es
imul
xor
xchg
pop
repnz
inc
repnz
jae
ja
or
lods
push
stos
hlt
jnp
outsl
cmp
sbb
sti
jge
push
jno
stc
in
cmpsb
xchg
mov
movsl
xor
adc
cli
pop
adc
inc
add
icebp
push
add
and
cs
pop
xor
push
xchg
add
fcmovnu
in
cmp
jecxz
dec
adc
cmp
scas
or
sti
lcall
sub
pop
scas
jle
xorl
addr16
dec
dec
dec
add
lret
ret
into
jne
push
jmp
xchg
ja
addr16
addr16
sub
jns
mov
inc
pop
bound
into
inc
mov
insb
aad
xchg
orl
lahf
mov
cmpsl
mov
xchg
std
lods
push
and
cmpsb
dec
ds
jo
mov
cld
cmpsb
subb
int
cli
callw
or
xor
mov
mov
jge
push
cmp
mov
es
or
movsl
dec
in
push
idivl
xor
dec
pop
jnp
aad
mov
addr16
jge
and
test
out
fwait
pop
push
mov
into
push
add
ljmp
sbb
outsl
insl
sti
pushf
popa
pop
dec
mov
cs
stos
decb
lretw
xchg
xchg
pop
je
aas
int3
pop
popf
faddl
inc
and
or
sbb
cmp
push
jecxz
dec
out
aas
sub
pop
mov
pop
cmp
dec
pushf
sbb
cmp
and
push
addr16
xor
test
xor
pop
cmp
or
pop
in
call
mov
sbb
mov
sub
mov
mov
test
lds
mov
pop
mov
fstpt
cmpsl
test
mov
icebp
icebp
popa
mov
or
cs
mov
xchg
push
jmp
out
fisttpll
imul
cld
add
mov
cs
add
xlat
lock
repz
clc
insb
mov
push
test
aas
leave
push
pop
xor
stos
out
je
xchg
sbb
rclb
cmp
cmpsl
in
cwtl
pop
scas
out
jo
mov
cli
mov
inc
movsl
sub
xchg
arpl
sbb
sub
test
lock
pop
jb
popa
rorb
jecxz
push
inc
je
mov
in
aas
mov
jg
shl
jmp
push
in
popa
popa
push
lahf
mov
fucomi
jae
xchg
rorl
insl
sbb
adc
mov
xor
xor
icebp
aam
inc
aas
test
mov
push
fcoms
addr16
mov
imul
or
mov
js
push
idiv
cmpsb
imul
in
popf
push
call
stos
cmp
fistps
mov
and
xchg
pusha
inc
insl
aam
les
dec
jle
mov
in
sbb
fdivrs
and
inc
jno
push
test
imul
sahf
cmp
pop
hlt
mull
pop
push
popf
jp
xchg
mov
lahf
shlb
jb
dec
jne
aam
pop
or
stos
xor
lahf
pop
je
sbb
push
sbb
ret
cmp
jp
sub
pop
cli
in
cmp
cmpsl
loop
mov
repz
pop
pop
jae
in
lcall
cld
mov
and
lods
movsl
pop
cmp
ss
cmp
addr16
mov
add
jae
pop
sub
cmp
xor
lock
adc
mov
xor
decl
inc
or
jnp
mov
mov
inc
push
mov
call
push
enter
mov
add
fs
jmp
mov
add
ja
lods
add
bound
movsb
push
mov
in
in
int3
stos
and
pop
mov
xor
insl
pop
or
dec
or
xchg
inc
push
sub
push
scas
inc
jg
dec
inc
popf
and
movsb
pop
push
and
jno
mov
xchg
btr
jne
or
push
ret
aam
imul
repnz
add
lea
call
ret
mov
insl
test
sub
adc
xor
scas
sbb
jbe
push
pusha
scas
adc
xchg
std
in
movsb
rclb
pop
pop
imul
push
xor
out
xchg
out
outsb
test
das
mov
clc
sbb
fucomip
mov
mov
leave
pop
inc
and
stos
and
jne
dec
aas
out
sahf
gs
iret
ja
test
scas
insb
dec
inc
test
cmpsl
clc
lret
imull
mov
jecxz
add
cmp
sub
pop
jle
pop
ret
cld
pminsw
jno
adc
or
xorl
pusha
loopne
and
xor
mov
sahf
imul
mov
scas
xchg
fsubrl
negl
mov
mov
dec
sub
pushf
or
push
push
and
push
lea
ret
ja
xor
mov
inc
out
and
push
cs
xchg
icebp
gs
push
inc
add
fmul
test
cmp
in
fisttpll
mov
loopne
push
adc
jne
dec
dec
xchg
leave
mov
scas
js
push
insb
dec
pop
dec
dec
push
cmp
int
movsb
fwait
fwait
pop
repnz
pop
mov
sub
xor
outsl
gs
imul
and
jl
pop
lahf
incl
mov
pop
cs
pop
mov
mov
arpl
cmp
jp
je
sbb
fldcw
mov
jle
pop
xchg
sbb
faddp
xchg
test
or
xor
mov
adc
ret
jnp
pop
xor
mov
andb
inc
or
lods
lock
xor
movsl
in
lret
test
leave
xchg
mov
or
out
xchg
out
arpl
out
cmpsl
fldcw
adc
ret
cmp
in
stc
and
pop
es
push
xchg
dec
jb
roll
data16
mov
or
sbb
jnp
mov
cli
lahf
testb
leave
adc
stc
cmp
call
lods
mov
loope
clc
xchg
sub
add
cmpsb
mov
stos
bsr
lods
xchg
and
loop
jae
inc
adc
shrl
mov
jg
dec
mov
stos
or
dec
aaa
or
mov
fmuls
and
fcmovb
ja,pn
and
stos
outsb
lods
push
movsb
mov
mov
iret
gs
loope
int
xchg
dec
mov
cwtl
stc
mov
pop
sbb
ret
stos
mov
fwait
rol
out
ret
jmp
dec
dec
push
sahf
push
das
push
fwait
stos
loopne
ja
sub
xchg
and
sub
mov
mov
jnp
mov
xchg
jmp
jecxz
ret
push
ret
movsl
mov
pop
jno
or
outsl
shr
mov
and
push
outsl
pop
sbb
mov
test
cmp
and
xchg
les
repnz
mov
jbe
cmp
jbe
and
fcoms
xchg
mov
mov
mov
sarb
and
in
in
jbe
clc
jp
int
out
adc
addr16
lods
rclb
dec
mov
fists
xchg
sub
popf
push
jp
dec
inc
hlt
pop
adc
adc
clc
ret
icebp
out
mov
addl
test
cmc
push
pusha
sar
adc
daa
mov
loop
push
inc
sbb
out
ret
jae
ds
cltd
das
mov
jp
xor
pop
rorl
ds
out
rcr
inc
sarb
adc
dec
mov
ret
pop
mov
repnz
sbb
rorl
sub
scas
out
mov
addr16
inc
mov
notl
inc
lock
nop
inc
mov
popw
or
mov
test
gs
mov
or
shl
scas
cmp
xor
cli
xlat
bnd
shl
clc
jg
jl
mov
dec
mov
outsb
fbstp
adc
test
fisttpl
push
out
popa
lds
cwtl
cwtl
xchg
xor
push
push
out
pushf
nop
mov
xchg
fcomip
lods
imul
pop
testl
test
xchg
inc
xchg
sahf
mov
mov
inc
jbe
fistpl
sbb
fiaddl
jp
cmp
dec
cmpsb
or
sub
and
pop
repnz
adc
add
loopne
scas
sbb
add
and
and
xchg
insb
xchg
stc
stos
pop
xlat
push
pop
in
sbb
lods
sbb
icebp
aaa
xchg
xor
addl
outsl
mov
fdivrs
push
or
and
in
jne
xchg
outsl
scas
jg
dec
fildll
sbb
adc
mov
cs
in
or
and
fsubl
mov
fs
cmp
fs
repnz
jns
inc
fldl
fwait
mov
aad
pushl
dec
dec
loope
xchg
aad
mov
sub
xlat
shll
je
jne
mov
push
popa
arpl
decl
pop
cwtl
xor
cli
imul
push
shlb
daa
adc
out
or
adcb
rcrl
xchg
repnz
xor
rcrl
mov
xor
mov
imul
mov
jg
mov
mov
shlb
mov
cld
jmp
insb
xor
sbb
sbb
data16
xchg
or
sbb
mov
jnp
cs
mov
int3
cmp
jle
sbb
loope
dec
jae
sti
mov
inc
aam
xchg
inc
stos
std
popf
orb
aas
rolb
and
mov
shrl
ja
js
pop
movsl
dec
testl
lahf
outsl
mov
and
mov
sub
jo
add
inc
stos
sub
cli
or
rorl
pop
mov
lock
test
or
and
sbb
mov
montmul
cmpsb
push
outsl
imul
xchg
imul
repz
mov
inc
ret
lods
popa
dec
loop
mov
cs
sub
pop
or
cs
sbb
unpckhps
mov
rcrb
fdivrl
xchg
sub
ret
lret
sarl
adc
test
xchg
mov
mov
push
xchg
jmp
sub
out
mov
pop
dec
in
cmp
test
ja
cld
inc
jle
stos
in
adc
decl
in
popf
add
xor
repz
imul
clc
adc
mov
cmpsl
xchg
rcrb
sub
xchg
and
into
or
leave
lret
decl
das
mov
adc
nop
xor
mov
add
popf
cmp
xchg
pop
add
sub
sub
inc
push
popf
push
dec
pusha
xchg
call
fnclex
mov
ljmp
test
loopne
adc
movsb
fcmovbe
push
pop
out
roll
push
sbb
movl
scas
cli
js
mov
rcr
cmc
xchg
add
inc
jle
sub
xchg
jg
nop
ja
sub
or
add
outsl
xor
pop
out
push
lds
lock
fnsave
dec
call
pop
test
fidivrs
loopne
cmp
jge
mov
xchg
leave
leave
sbb
in
xchg
cmp
cmp
or
mov
add
inc
arpl
jns
mov
adc
add
sub
stos
cmpsb
cmpsb
mov
jmp
and
cmc
xchg
fildl
or
pop
xchg
mov
ljmp
pop
clc
clc
mov
adc
gs
jb
and
cmpsb
lock
lock
sti
push
mov
mov
jne
and
mov
mov
and
xchg
cmc
fdivrl
popa
mov
pop
cmp
fidivrl
sub
xchg
jns
push
out
sub
int
add
xor
in
sub
push
xor
pop
stc
lds
add
mov
int
test
cmc
cmc
mov
dec
pop
mov
aam
or
add
xor
or
gs
jo
das
gs
add
xchg
pusha
pop
push
leave
sbb
loop
cmp
pop
jae
lcall
inc
add
mov
leave
pop
data16
pop
mov
sub
mov
push
mov
arpl
jo
xor
mov
insl
in
addr16
mov
inc
mov
iret
sbb
in
jecxz
inc
adc
orb
mov
es
dec
mov
cmc
xchg
fdivrs
cmpsl
push
push
and
push
pop
divb
xor
lock
repz
lock
mov
dec
in
dec
inc
inc
shrb
ljmp
mov
or
sbb
pop
pop
lds
pop
pop
test
mov
gs
mov
sbb
pop
xor
dec
xchg
fnsave
aad
add
test
ljmp
jnp
mov
or
inc
fildl
dec
out
add
pop
push
outsb
and
inc
mov
loop
push
pusha
es
fisttpl
jnp
cmpsb
sub
or
push
popa
test
sarb
sbb
es
out
or
jge
imul
cmpsb
adc
test
cmp
nop
es
stos
pop
addr16
out
inc
push
test
and
smsw
icebp
out
lock
and
cmpsb
xchg
mov
loope
lods
or
dec
pop
into
xor
mov
les
loopne
adc
mov
and
inc
add
jns
insb
out
sbb
jecxz
cmc
test
xchg
fldl
cmpsb
in
dec
insb
push
sub
outsl
mov
insl
inc
cmp
rcrl
jg
and
or
mov
sub
cmp
mov
dec
sti
xor
cmpsb
in
enter
sub
loope
imul
mov
cmpsl
or
jbe
pop
sub
iret
sub
jg
ret
adc
clc
inc
push
push
jae
jo
lods
jne
cld
roll
xchg
mov
mov
mov
std
adc
mov
pop
or
cmpsb
push
jmp
mov
xchg
add
imul
and
or
andl
int3
outsl
dec
mov
pop
aaa
fnstenv
mov
arpl
inc
push
out
stc
fs
stos
sbb
and
ja
cmp
popf
mov
and
scas
pop
ja
or
push
stc
jg
sbb
mov
pushf
pop
or
cmp
subb
enter
push
nop
lcall
loope
cmp
jo
int
adc
in
dec
jns
xchg
je
dec
addb
sarl
pusha
or
fwait
es
insl
in
sahf
subb
mov
xor
rorl
jmp
xchg
dec
push
cmp
mov
scas
and
cmp
je
or
push
jmp
mov
inc
add
push
sbb
cltd
jae
insb
jbe
push
adc
aaa
insb
imul
inc
aad
push
imul
cltd
outsb
mov
jns
sub
adc
sahf
cmp
xchg
dec
mov
jp
lahf
push
and
adc
pop
dec
xor
and
add
cmpl
adc
stc
dec
iret
lret
adc
into
pop
or
insl
stos
xchg
out
fdivrp
or
in
mov
inc
pop
sbb
or
or
sahf
jbe
mov
xchg
test
rcrl
ss
lods
das
shll
add
jo
inc
and
fldt
das
dec
frstor
test
pop
jmp
mov
pop
pop
xlat
rorl
rcr
fbstp
dec
mov
pop
mov
dec
and
fwait
inc
xchg
cmp
adc
sbb
lret
xchg
xchg
sar
add
clc
adc
pushf
mov
addb
fildll
jecxz
movsl
and
adc
and
popf
fistl
add
pop
repz
inc
sub
out
adc
cmp
adc
loope
cmp
mov
xorl
lahf
ljmp
leave
stos
fdiv
rcll
pop
xchg
shl
push
xor
cmp
push
jnp
mov
cmovl
inc
scas
sub
xchg
aas
loop
dec
test
add
or
mov
repz
lds
bound
gs
lret
xchg
loope
inc
push
pushf
lods
adc
adc
cmpsl
and
cmp
inc
jb
shlb
dec
push
add
mov
xchg
add
push
fs
cltd
jno
pusha
inc
les
js
add
push
mov
orb
daa
mov
inc
push
inc
fcomps
arpl
repz
push
sub
or
mov
iret
adc
lock
mov
mov
xor
mov
aas
cmp
mov
fwait
dec
xor
xchg
mov
push
push
ljmp
sbb
mov
outsb
insl
imul
mov
rclb
test
test
and
dec
int3
lock
xchg
in
arpl
adc
repnz
dec
xchg
jecxz
jae
mov
and
cs
fldenv
jns,pn
push
jae
lret
rorl
test
inc
ret
cmc
in
push
dec
mov
sbb
test
mov
and
xchg
js
mov
or
das
or
fcomip
aam
in
scas
sub
or
mov
das
mov
or
add
in
or
jb
mov
loope
cltd
fsubrs
jo
orb
mov
in
cmp
int
rolb
repnz
sub
out
mov
andl
lods
fisubrs
popf
lahf
cmp
dec
push
adc
jmp
in
movsb
push
aam
add
call
out
mov
jmp
pop
add
inc
outsl
pop
movsl
out
mov
pop
mov
or
pop
ret
dec
dec
enter
sub
jecxz
adc
mov
test
std
lea
sbb
movsb
es
mov
jns
pop
out
sub
sub
mov
lret
jne
add
int
inc
fadd
out
shll
ret
inc
sti
dec
dec
dec
cmp
outsb
shlb
das
shlb
pusha
nop
jmp
repnz
jo
or
fldt
repz
out
icebp
movsb
scas
gs
jecxz
pop
scas
pop
xchg
cmp
mov
out
loope
xor
mov
inc
scas
push
and
movsb
std
mov
into
pmulhuw
add
in
aam
push
push
outsl
repz
add
out
xor
and
iret
and
xor
jp
fstpl
and
es
xchg
push
cltd
shlb
int3
outsb
inc
sub
jecxz
mov
cmp
call
inc
test
bound
fsubrs
mov
pop
out
dec
jecxz
sar
mov
mov
aas
std
movsb
aas
or
shr
xor
pop
jecxz
push
inc
jg
in
mov
cmp
inc
loope
pop
cltd
mov
dec
and
dec
cli
inc
fists
push
push
jge
jmp
push
addb
rcrb
scas
dec
mov
notb
cmovns
adc
movsb
lods
inc
add
sub
sub
add
dec
loop
jne
xchg
mov
mov
fsub
outsl
jbe
cwtl
bound
icebp
sbb
lahf
jg
gs
cld
cld
negb
push
icebp
adc
int
jge
cli
jo
jge
hlt
jg
shlb
clc
cmpsl
jno
repnz
rclb
and
push
loopne
jg
cmp
push
decl
into
and
xlat
and
and
jns
mov
pusha
inc
pop
dec
jp
cltd
push
sub
jecxz
outsb
call
jo
or
push
loopne
jmp
loop
mov
fs
dec
shrb
dec
outsl
jg
test
ret
rolb
dec
xor
xor
dec
push
orl
rorl
xchg
shl
adc
sbb
mov
cmpsb
and
lds
popf
dec
int3
add
dec
shlb
xor
jg
clc
ret
sbb
xorl
adc
xor
mov
mov
sub
xlat
je
xor
pop
adc
mov
movsl
rorb
out
addb
insb
sub
pushf
leave
mov
push
scas
out
aad
or
outsl
outsb
push
outsb
mov
clc
adc
rcrb
push
movsl
leave
pop
inc
fbld
mov
jb
in
outsl
lds
mov
cmpsb
lds
xchg
pop
jb
arpl
rcll
pop
nop
popa
inc
jg
xchg
pusha
push
hlt
sti
mov
inc
in
sub
les
add
fldcw
adc
enter
push
mov
push
ret
mov
jnp
xchg
aam
lods
sub
xchg
sbb
iret
fidivs
loope
xlat
push
adc
cmp
outsl
pop
mov
sti
mov
jns
stos
sub
stos
dec
push
jae
mov
sahf
cmp
loop
leave
xor
sbb
xchg
or
aas
stos
addb
inc
mov
jg
push
pop
or
fwait
xchg
xchg
jnp
imul
out
lret
cmp
xchg
or
or
fstl
inc
stos
and
nop
divb
fmul
xor
shll
jno
enter
pop
push
dec
wrmsr
in
xlat
aas
cmp
xchg
mov
movb
fdivrp
push
pushf
arpl
out
mov
adc
jbe
stos
and
call
test
adc
jbe
rcl
push
loope
mov
cmp
in
jmp
mov
add
mov
cld
or
sub
xor
test
adc
shl
inc
shll
or
jl
in
xor
push
lcall
shlb
ss
test
fisttps
xchg
adc
adcb
ljmp
jns
repz
test
jno
sbb
ds
add
insb
adc
jmp
lahf
or
movl
insl
add
shlb
jb
jns
mov
das
shll
repnz
xor
add
aas
iret
loope
xlat
rcll
push
adc
xchg
mov
les
lock
add
popf
sub
jg
dec
inc
loope
add
pop
fnstenv
add
mov
push
sbb
mov
inc
or
mov
rcll
xchg
push
loop
xchg
aaa
xor
out
stos
loop
arpl
insl
aas
enter
int
push
out
test
pop
push
ja
test
push
repnz
add
dec
scas
xchg
and
dec
inc
sbb
pop
pop
lock
popf
sbb
mov
es
mov
dec
cmp
loop
fs
out
mov
jns
mov
ficompl
cs
neg
insl
adcl
and
cld
pushf
popf
scas
out
in
jle
jp
jg
jno
jae
imul
iret
xchg
adc
ret
add
sub
add
inc
cmp
lods
int3
cmp
jg
xchg
pop
fcmovb
mov
add
sbb
push
mov
fsubrl
ret
add
mov
mov
cmpb
popa
mov
jle
push
hlt
jp
xchg
and
les
jns
xchg
je
or
dec
add
daa
push
scas
mov
inc
jno
sahf
jl
outsb
xchg
and
xchg
fsubrl
mov
mov
fldcw
addr16
push
mov
fcompl
ret
ss
sbb
dec
scas
pop
outsl
leave
imul
imul
subl
fcoms
xchg
dec
mov
cld
movsl
imul
and
js
dec
sti
xor
sti
lahf
je
nop
jb
inc
incl
sbb
and
add
jle
sbb
lcall
mov
cmc
push
lods
repz
test
adc
test
fidivrl
xchg
jecxz
add
fs
sub
xor
test
jns
js
lret
rorb
adc
mov
pop
jmp
sahf
dec
loopne
sbb
lret
div
lcall
dec
ror
and
cmp
push
mov
push
cwtl
and
ficoml
out
adcb
lock
push
shrb
push
adc
dec
mov
or
lret
push
sub
outsl
jne
in
imul
jl
jg
lea
cmc
not
outsl
lods
cld
or
dec
push
ljmp
xor
arpl
xchg
mov
pushf
out
lcall
pop
sub
cli
in
dec
sub
sbb
mov
sub
or
ljmp
aas
mov
add
sub
inc
fnstenv
mov
pushf
enter
iret
mov
inc
addr16
push
xchg
fisubl
push
push
addr16
cmp
mov
stos
aam
xchg
sub
xchg
or
into
inc
pop
addl
fnsave
loopne
fsubrs
cmp
sbb
mov
insb
test
or
inc
or
mov
je
and
jno
push
mov
imul
jns
cmp
ret
aas
pop
leave
dec
pop
test
xor
movsl
enter
mov
mov
pushf
out
cltd
lds
mov
dec
sub
jne
dec
cmp
shll
loop
arpl
sbb
mov
popa
adc
or
sti
imul
add
pop
inc
cmp
mov
sbb
adc
sbb
scas
lock
mov
cltd
mov
cmp
rcrl
xchg
outsl
mov
in
sbb
xchg
jo
xor
xor
lock
xor
jl
imul
popa
cwtl
cmc
rorl
cmp
test
ljmp
lea
or
mov
cltd
cltd
decl
test
ret
mov
xchg
xor
fwait
cld
fisubs
data16
inc
iret
cwtl
push
mov
mov
push
movsl
jp
mov
sub
int3
dec
and
pop
jno
stc
sbb
test
fdivl
inc
lret
pop
loop
in
jge
pop
add
fsubr
inc
das
sub
ret
clc
add
into
cwtl
aas
lods
pushf
iret
mov
sbb
or
and
nop
xchg
fbstp
pop
adc
inc
dec
insb
aad
or
inc
enter
pop
icebp
std
push
pop
sahf
insl
enter
cmpsl
int
mov
jns
test
iret
je
test
xor
mov
push
mov
into
or
sbb
mov
xor
sbb
adc
into
sub
aas
xor
mov
or
je
psrlq
mov
outsl
fsub
shlb
xor
mov
cltd
mov
into
dec
xchg
jae
scas
cmpsb
jge
int3
daa
dec
xor
daa
or
mov
ja
dec
scas
xor
inc
mov
jne
pop
inc
sahf
cmp
jg
xchg
inc
pop
daa
stc
push
xchg
xor
movsb
int3
xadd
cmc
jl
fcmovnb
pop
ss
dec
clc
sti
packsswb
outsl
sbb
mov
mulb
adc
xor
xchg
ds
xor
pop
add
mov
jo
push
mov
xor
jecxz
pushf
es
fdivrs
mov
adc
push
add
push
inc
testb
sbb
adc
clc
psubusb
mov
jl
loop
push
aas
sbb
cmp
shrl
movsl
xor
stos
sahf
cmp
xor
adc
sbb
push
sub
jo
hlt
pop
sti
dec
or
lret
sbb
sbb
jnp
shr
mov
outsb
mov
out
fdivrl
dec
sbb
push
push
in
jmpw
mov
and
jp
xor
xchg
mov
xor
mov
sbb
or
inc
sbb
xor
es
stos
es
jns
sub
in
mov
add
ja
out
push
dec
xor
add
dec
loope
test
stc
pop
xchg
and
mov
ret
rcll
cmp
popa
jle
cwtl
bound
ficoms
mov
xchg
xchg
faddl
dec
and
int
xor
std
dec
scas
jge
mov
std
xchg
pushf
mov
in
cwtl
mov
cwtl
and
mov
mov
rclb
lods
in
pop
jne
pop
inc
add
mov
mov
mov
popa
mov
dec
sbbl
scas
cmc
cmp
jno
cltd
test
inc
adc
cmp
push
std
test
mov
mov
push
mov
sbbb
push
mov
add
inc
repnz
inc
imul
loope
cmp
gs
push
sub
xor
jmp
rep
test
mov
pop
mov
imul
inc
dec
incb
sbb
mov
clc
mov
aaa
mov
push
push
lods
pop
scas
xchg
fcoml
sub
popa
pop
rcll
es
neg
xchg
mov
lahf
xlat
jecxz
mov
xor
adc
add
mov
dec
fistl
notl
cmp
ret
sub
sbb
outsl
or
xchg
jge
add
sub
cmpsb
cld
out
push
shrb
xor
dec
stos
mov
out
jne
ss
negl
jno
dec
in
dec
xor
xchg
stc
add
imul
pop
push
ds
imul
fsts
xchg
out
push
pusha
dec
pop
push
pop
push
jl
fstpl
cwtl
fisubl
xor
mov
imul
sbb
shrl
push
adc
inc
xor
in
imul
xchg
leave
adc
dec
lret
daa
aam
ret
fcomip
cmpsb
dec
bound
rcrl
mov
cmp
dec
push
sarb
and
test
shlb
pop
or
inc
in
add
push
pop
sub
fisubrl
xchg
push
push
mov
xchg
imul
fidivrl
sbb
push
xchg
nop
bound
out
mov
cmp
shr
mov
push
ret
movsl
jge
pop
inc
cmpb
push
sbb
add
or
mov
dec
mov
mov
insb
adc
xlat
and
pop
push
mov
or
mov
xchg
test
jmp
lds
push
sub
bnd
fistps
cmp
pop
jg
mov
stos
dec
dec
into
xor
outsb
adc
arpl
int
fsubrs
adc
dec
inc
enter
insb
add
lea
subl
pop
arpl
mov
fcomp
jb
es
hlt
pushf
loope
mov
ret
adc
mov
jl
add
xor
mov
sbb
mov
or
xchg
or
je
into
pop
adc
test
mov
mov
sbb
testb
fldl2t
sub
jae
lret
dec
je
aaa
das
mov
or
mov
jp
in
pop
insl
bound
add
cmp
jg
out
pop
xor
sbb
fs
int
sbb
in
cmc
lret
or
out
push
ja
in
sbb
negb
movsl
pop
jp
jbe
fisubrs
sbb
and
clc
inc
cli
aaa
iret
mov
pop
jmp
mov
repz
dec
cli
adc
inc
sub
push
dec
pop
adc
adc
insl
xchg
das
xor
mov
cli
push
cmp
and
into
dec
aaa
mov
dec
mov
inc
jge
outsl
inc
out
pop
imul
cmpsb
repz
inc
aad
xchg
rep
sahf
push
cmp
sub
jb
pop
push
gs
xor
stc
fdivl
loop
or
inc
xchg
mov
push
imul
fidivrl
arpl
mov
pop
xchg
pop
and
lret
nop
xchg
test
or
fsubs
mov
in
and
imul
stos
int3
and
or
sub
addr16
icebp
mov
mov
loop
add
into
dec
and
test
test
mov
xor
sahf
add
data16
rcl
mov
sub
mov
aad
in
mov
xchg
dec
push
push
vpsubusb
dec
mov
or
push
call
out
mov
xor
sbb
test
and
add
jecxz
pop
dec
cmp
xor
sub
or
or
mov
dec
jecxz
push
sbb
fstl
add
jg
pop
repnz
jno
std
aas
stc
mov
xor
pop
insl
movsl
push
xor
add
cmpl
aaa
inc
mov
in
ror
xchg
ss
add
stos
ret
mov
loope
mov
sahf
mov
push
xchg
jl
leave
push
ja
mov
inc
insb
jbe
dec
xchg
push
inc
mov
into
lcall
push
cmp
ss
sub
lock
into
cmpsl
loopne
mov
cmp
in
push
int3
cld
and
test
stos
inc
pusha
xor
mov
leave
adc
out
es
int3
cli
or
repnz
pop
shlb
dec
cmpl
adc
outsb
in
mov
aad
into
mov
add
xor
aas
roll
loopne
dec
ficoms
rep
loopne
mov
cli
inc
and
cwtl
mulb
adc
js
sarb
jge
sti
pushf
setle
into
aad
push
mov
mov
cld
out
rcl
mov
adcb
shll
mov
jnp
imul
mov
lods
shr
std
cmc
popa
lahf
inc
mov
mov
jp
faddl
lds
dec
fisttpl
stos
daa
mov
outsb
aas
sub
fmul
mov
pushf
test
imul
out
fisttps
roll
in
jmp
hlt
bound
adc
scas
push
lcall
addr16
push
jae
aam
xor
movsb
mov
int3
hlt
mov
cltd
popf
adc
push
movsb
cmp
xlat
mov
sub
mov
push
push
pop
movb
pop
das
les
or
test
out
or
popf
ss
mov
pop
gs
addr16
clc
cmp
aam
jl
adc
sub
iret
dec
nop
xchg
loop
inc
xlat
lret
adc
and
fsubp
add
or
imul
mov
mov
xor
sarb
jl
fcmovu
cmp
test
and
sti
test
inc
out
dec
pop
push
sahf
xorb
outsb
ds
inc
pop
icebp
add
sbb
xchg
xor
insl
aad
xor
adc
sbb
sub
rclb
sbb
inc
pusha
mov
insl
pop
fs
xor
mulb
arpl
sbb
dec
ficoms
cltd
fisubl
adc
call
mov
push
and
push
loope
adc
hlt
xchg
xor
into
jo
mov
mov
jo
push
xor
dec
mov
les
imul
jmp
sbb
sub
inc
aaa
jl
icebp
mov
std
inc
pop
or
ss
and
push
mov
ror
xchg
cmpsl
dec
pop
push
mov
cmp
rclb
pop
lea
push
add
jle
cmp
bound
dec
sub
movsl
popf
inc
insb
jecxz
jg
inc
mov
mov
mov
mov
out
in
sbb
ret
mov
xor
loope
ret
pusha
sbb
test
mov
or
push
sub
rcr
sbb
and
push
lods
fs
idivl
mov
or
pop
jle
pop
add
outsb
xor
mov
cmp
pop
mov
cmp
fadds
test
jns
push
or
mov
lret
jnp
adc
inc
xor
mull
and
fisubrs
cmp
lret
out
cmp
sub
call
or
push
test
sbb
outsb
xchg
add
dec
sahf
std
sub
rcll
inc
pop
ss
jb
mov
adc
push
data16
or
js
scas
je
and
and
add
nop
jle
je
hlt
in
in
add
jp
shl
insb
mov
repnz
sbb
sbb
rcll
sbb
sbb
or
dec
es
jne
inc
repnz
out
dec
filds
push
add
daa
xor
testb
test
xor
xchg
xor
je
xor
jl
sub
movsl
mov
mov
cwtl
ljmp
xchg
sarl
inc
add
lret
push
fwait
cs
jae
inc
xorb
xchg
inc
loop
cmp
ds
cli
jne
mov
setbe
es
dec
mov
cmp
dec
scas
mov
fistpll
js
mov
fwait
icebp
add
sahf
fisttpl
enter
mov
jl,pn
fwait
xor
movsb
adc
jbe
mov
das
nop
shll
mov
test
mov
mov
dec
fdivrs
rcrb
sub
push
cli
dec
hlt
mov
test
mov
or
adc
xchg
cmp
or
pop
cwtl
jl
cmpsl
inc
dec
push
and
lods
cs
enter
jb
sub
xchg
push
test
and
jne
cmp
decl
sbb
fldcw
adc
push
popa
mov
xor
jmp
or
jo
xor
push
enter
lret
sub
in
xor
and
lcall
push
push
sbb
mov
lock
push
inc
mov
repz
ret
or
or
addr16
mov
in
fidivs
mov
jecxz
mov
fisttpll
movb
sub
xchg
nop
dec
and
xchg
fistl
lock
inc
sub
jmp
mov
es
jo
jno
pop
xor
jmp
popf
jmp
push
je
push
icebp
sbb
add
push
fmulp
ficoml
lahf
cmpsl
inc
stc
sbb
jbe
repnz
rcr
loop
rcl
jno
push
enter
rorb
xor
lods
mov
add
jg
mov
xchg
jl
adcl
test
xchg
sbb
pop
push
mov
pop
jbe
ret
add
repz
xor
lret
mov
xchg
mov
adc
sbb
ljmp
xchg
xchg
pop
mov
adc
popa
mov
sub
nopl
icebp
jmp
add
pop
ret
sbb
adc
in
xchg
rcr
adc
rorb
xchg
int3
std
lret
push
mov
imull
movb
mov
mov
into
add
ret
std
or
adc
into
and
stos
shlb
sub
xor
aas
mov
jge
push
mov
aam
xchg
fildl
push
or
movsb
test
jg
mov
int3
test
jge
inc
push
cmp
cmp
daa
out
jns
inc
popl
sub
mov
cmc
add
mov
lods
cwtl
jmp
test
jmp
xor
fisttps
mov
mov
sub
les
inc
mov
ret
and
cld
sub
push
pop
adc
xchg
out
loopne
lds
cmp
loop
into
out
aaa
pop
sbbl
mov
xchg
fists
mov
outsl
movsb
in
cmpsb
repz
iret
cs
out
mov
xor
mov
test
push
mov
rclb
mov
in
inc
es
fstps
and
inc
pop
jns
mov
dec
lds
rcll
ja
sti
jmp
mov
fmulp
cmpsl
push
lds
push
pop
jns
ljmp
push
cld
in
in
adc
pop
movsl
lret
loope
dec
iret
and
add
pop
or
pop
mov
push
mov
push
into
push
out
mov
pusha
cmp
xchg
dec
inc
add
lret
jbe
cmp
call
negb
mov
imul
jg
pusha
dec
sti
pop
jp
shrb
addl
cmp
mov
add
adc
sub
add
hlt
lahf
jne
mov
ret
pop
loope
imul
lret
outsl
notb
inc
xrelease
outsl
fdiv
and
pop
xor
test
mov
movsb
dec
pop
es
cmpsb
sahf
cmp
cld
mov
mov
gs
add
pop
jp
loop
dec
rcl
cmp
mov
push
mov
test
cld
daa
sub
sahf
repnz
add
mov
cli
and
push
xorl
or
lods
sub
scas
dec
push
hlt
or
stc
sbb
and
scas
sbb
mov
imul
clc
div
insl
xchg
mov
hlt
push
jle
rcll
fidivrl
push
pop
ret
push
cmpb
inc
mov
sbb
ljmp
cmp
sarb
xlat
loope
sub
xchg
rol
inc
cld
ret
iret
push
test
adc
inc
sar
mov
test
imul
lock
iret
add
and
mov
mov
je
add
inc
outsb
xor
adc
movsl
in
es
adc
fidivs
loop
pop
fucomi
nop
lods
les
das
mov
add
and
mov
mov
mov
movsb
add
sub
lcall
xchg
add
push
in
lret
push
pop
scas
push
push
cmp
jno
mov
jg
lret
jb
fsubrl
jbe
cmp
cmp
xor
adc
mov
dec
fistps
stos
sbb
mov
test
sahf
dec
sti
xor
and
testl
jge
sub
jb
pop
jecxz
cli
push
jecxz
mov
push
orl
cld
into
and
cltd
mov
xchg
push
mov
test
and
divl
mov
fstl
das
pop
lahf
mov
clc
mov
imul
das
or
cmp
fcoml
mov
imul
aad
and
xchg
mov
repz
xlat
cmpsl
and
dec
call
pop
cmp
or
les
lret
cmc
mov
adc
rcrl
lret
cmp
xor
cmc
adc
aad
call
leave
jne
popl
mov
mov
xlat
ss
jge
jecxz
aaa
jmp
jbe
mov
ret
cmc
lods
xchg
sahf
lea
pop
loope
xor
test
and
cmpsb
std
insl
jecxz
ljmp
setns
mov
xchg
fidivl
hlt
sbb
push
insb
mov
mov
and
xor
adc
xchg
dec
jle
in
imul
aam
movsl
mov
jmp
mov
and
jb
add
jl
and
shrl
ja
sub
fcomp
fs
or
cmp
inc
pop
push
out
popf
xor
inc
push
mov
and
adc
xchg
pop
add
rcl
jg
and
stc
fnstcw
ss
gs
jae
mov
out
lret
xor
push
sbb
dec
int
jmp
aas
pop
mov
cmp
orl
xchg
sub
dec
xor
bound
pushf
inc
push
shll
insb
dec
adc
sahf
ret
sbb
sti
lock
lods
in
xchg
jmp
sbb
and
add
push
mov
out
nop
mov
repz
mov
sub
pop
das
mov
rolb
out
mov
push
inc
cmp
xor
outsl
pop
push
orb
lock
xor
addr16
jo
xchg
cmp
mov
mov
daa
mov
jmp
jmp
pop
xchg
in
inc
movsb
mov
lahf
arpl
jns
mov
fimull
fildl
lock
cmp
je
or
push
test
jnp
in
fiaddl
mov
and
push
lcall
sbb
pop
pop
and
lock
sbb
pop
ja
xchg
decl
cmp
dec
sarl
les
jmp
push
or
cmp
mov
mov
pop
mov
mov
cltd
add
add
outsl
mov
mov
aad
xchg
mov
push
data16
push
dec
mov
add
scas
cmpsb
cmp
rcpps
cld
pop
jae
xor
movsb
or
shlb
jno
adc
popaw
cltd
fdivl
push
push
pop
fsubrl
xor
xchg
call
inc
sub
shrb
cwtl
sub
andb
rcrb
jmp
or
cmp
cmp
int
mov
xor
idivl
inc
jb
subl
mov
cmc
mov
rclb
and
xchg
out
int3
push
imul
inc
scas
divb
dec
add
movl
or
int3
dec
dec
sahf
xchg
mov
nop
les
cmp
scas
loop
push
cmp
in
and
les
dec
nop
fisubl
and
repnz
push
sub
rcrb
sti
xor
sti
cmp
jp
cmp
aas
and
iret
dec
xchg
push
lock
rorb
jb
dec
pop
or
rcrl
cmp
push
or
jb
mov
mov
pop
sahf
test
push
add
pop
fsts
mov
in
sbb
dec
aaa
lcall
les
fst
nop
fs
or
mov
lcall
xor
push
ds
add
sub
sarb
je
pop
pop
lea
lahf
in
mov
xor
sub
repz
rcrb
adc
aam
lea
mov
xor
iret
je
stc
push
xchg
in
jae
jnp
fists
jno,pt
mov
push
push
movsb
in
sub
mov
push
pop
mov
rorl
add
mov
and
sbb
cmp
xor
mov
adc
or
xor
xor
mov
movsl
gs
cwtl
and
jbe
ds
ret
ds
testb
test
mov
push
mov
jge
xchg
lcall
and
jae
repz
pop
movsl
and
push
xchg
jb
repnz
out
mov
cmp
push
leave
cli
xor
dec
ds
fiadds
lret
jns
sub
pop
test
mov
or
push
cmc
inc
cltd
in
push
in
xor
add
xchg
sub
adc
inc
push
shll
or
sbb
sub
and
leave
aaa
mov
adc
sub
lahf
ret
mov
cltd
call
mov
sbb
into
add
mov
mov
imul
push
push
fs
mov
push
and
cli
xchg
sub
imul
inc
jns
rclb
int3
int3
cmp
cmpsl
lea
popf
outsb
cmpl
imul
mov
mov
push
in
das
push
push
cwtl
iret
insl
stos
scas
cmp
cmc
iret
inc
faddl
and
jno
dec
lods
add
jno
sbb
in
push
cwtl
sub
cmpsl
data16
push
das
clc
arpl
mov
xor
test
iret
repz
stos
cs
rorl
inc
add
ds
iret
mov
and
push
pop
std
push
cmp
nop
enter
or
les
and
mov
inc
cs
aam
mov
scas
decl
aad
ss
icebp
sbb
mov
dec
repnz
mov
or
adc
lcall
popf
pop
sar
nop
outsl
movsl
fisubl
mov
js
out
sub
mov
cmp
ja
arpl
movb
mov
outsb
test
lret
add
cmp
mov
sbb
sbb
add
ds
adc
jg
popf
aas
ds
ret
sahf
daa
fbstp
aam
fmul
insb
cs
xor
shrb
ret
xchg
add
cld
push
sub
push
not
dec
mov
out
cltd
aas
cmpsl
cmpl
mov
pop
and
dec
adc
stos
je
xor
sub
fiadds
loope
xor
movsb
pusha
pop
mov
iret
or
mov
fs
out
add
ja
outsl
xor
xor
inc
sbbb
xor
mov
xchg
cmp
jp
jmp
sub
ljmp
testb
xchg
movsl
stos
add
jo
fists
cmp
out
or
cmc
add
in
aam
inc
lcall
pop
inc
sub
mov
imul
jnp
cmp
jl
into
mov
mulb
add
or
lods
testb
scas
mov
imul
mov
push
mov
push
jp
dec
inc
dec
jmp
mov
popf
jmp
adc
xlat
add
in
and
mov
shlb
and
fimuls
lahf
cmpsb
lret
push
pop
dec
mov
push
adc
jnp
adc
jl
push
stos
xchg
pop
enter
push
cs
sub
je
lahf
clc
or
aad
xchg
fbstp
push
mov
jns
mov
cmp
in
cli
fidivrl
jl
mov
sbb
inc
clc
mov
cltd
mov
int3
mov
push
cmc
mov
jecxz
jae
outsl
mov
cmp
mov
jle
xchg
dec
adc
mov
cmpsl
xchg
sti
cmp
outsl
and
call
push
add
mov
insl
hlt
xchg
pop
ret
inc
mov
out
rolb
jb
dec
xchg
popa
out
adc
insl
jne
out
mov
repz
in
sbb
mov
shll
lods
scas
outsb
lds
push
stc
out
les
loope
repz
leave
pop
sbb
mov
and
lcall
rcrb
xchg
mov
jp
mov
outsl
test
sbb
cmp
aad
sbb
sbb
push
adc
push
fcompl
mov
outsl
dec
lret
fisttpl
aas
pop
jg,pt
ss
fisttps
repz
fld
cmpsb
fldl
xchg
lock
std
mov
sbb
test
mov
and
lret
aam
into
stc
lret
xchg
xchg
mov
xor
es
shrl
adc
push
cmpsl
mov
sti
loop
cs
cmp
lahf
rcrl
cli
call
repnz
aam
inc
mov
pop
shlb
cmc
mov
cmpsb
push
jbe
mov
cli
sbb
mov
test
pop
imul
cmp
dec
jb
push
test
std
stos
out
xchg
pusha
dec
cmp
xchg
mov
frstor
xor
xor
xor
inc
fsub
push
loopnew
shl
push
sbb
mov
push
jnp
rcrb
pushl
stos
cltd
mov
fistps
aad
jne
mov
dec
mov
mov
add
inc
sub
mov
test
fs
inc
cmp
push
shlb
dec
in
mov
push
loope
lock
loope
daa
jmp
std
push
cwtl
sub
fnstcw
pop
cmpsl
mov
adcl
xchg
rol
mov
dec
repnz
cwtl
sbb
jmp
sbb
fdivl
xchg
jb
lock
inc
andl
out
not
jp
lods
push
sbb
les
cmpl
inc
xor
out
sub
call
push
inc
in
mov
mov
push
cwtl
jb
mov
int
jmp
sbb
and
testb
shrl
pop
inc
in
jno
cmp
lea
ljmp
sbb
inc
or
mov
dec
jmp
hlt
cltd
mov
adc
ret
push
add
sti
dec
push
pop
icebp
cmc
dec
mov
cmp
out
ret
push
mov
sub
and
dec
pop
popf
loope
cmpsl
pop
into
sub
pusha
xor
adc
cmp
bound
push
pushf
inc
in
push
cs
mov
stos
lret
aad
mov
out
jle
cli
test
arpl
or
add
mov
xchg
lods
jb
daa
push
push
idivb
popa
addr16
stos
xor
popf
mov
gs
scas
sahf
cli
dec
insb
or
test
stc
in
insb
sub
insb
divb
jno
fsubrs
mov
loope
adc
faddp
repnz
leave
fbld
xor
cmp
lret
xchg
xchg
stc
cmpsb
cmpsl
inc
xchg
jne
out
ljmp
cmp
es
repz
aas
call
cmp
and
into
xchg
mov
fisubrl
sbb
mov
or
ficompl
or
out
sub
xchg
pusha
xor
andb
jno
push
push
cltd
jbe
add
stos
pop
dec
push
repz
out
dec
stos
mov
xchg
fwait
sub
mov
adc
lret
enter
stos
xor
and
cmp
adc
lidtl
push
or
xchg
and
movsl
gs
and
mov
ficoms
pop
ret
xor
iret
pop
cmpsb
xlat
repz
cmpsl
sarl
or
pop
stos
cmp
popl
cmp
aas
fs
jl
sub
in
mov
sub
xor
jne
and
insl
addl
inc
dec
pushf
cli
lcall
jno
cs
cmp
cld
mov
push
insb
mov
mov
stos
addb
insl
ss
xchg
popf
pop
push
jcxz
jmp
cs
outsl
jae
movsl
stc
mov
mov
add
push
mov
pop
jle
inc
int3
jmp
in
shll
cmp
movsb
je
popa
jl
call
arpl
dec
xor
mov
test
sbbl
adc
fdivrs
adc
jle
and
jmp
hlt
insl
xchg
scas
sub
loop
or
cmp
add
mov
jbe
outsb
dec
xchg
dec
fisttps
cmp
jne
mov
fisubl
mov
inc
enter
shrb
jmp
pop
cmp
inc
mov
mov
jg
test
aaa
push
outsl
jns
add
popf
sub
adc
dec
pop
hlt
mov
ljmp
cmp
cmp
icebp
push
jb
cmpsl
lcall
adc
repnz
mulb
or
pop
lock
pop
lds
pop
aaa
movsl
pushl
gs
rcrl
icebp
pop
iret
add
cld
or
jg
test
mov
jle
jmp
mov
xor
outsb
repz
fiadds
ds
pop
sub
push
mov
pusha
dec
sar
lret
in
inc
int
jae
or
mov
xchg
roll
xchg
inc
fcoml
jbe
cmc
cmp
ss
lods
jbe
sahf
sbb
jmp
jb
mov
je
xchg
dec
test
xchg
dec
ljmp
adc
or
add
mov
jne
mov
ss
nop
cmp
cli
repz
and
in
inc
call
jo
fsts
mov
xchg
mov
gs
lcall
mov
outsb
or
mov
hlt
mov
dec
add
loop
aas
shlb
out
xchg
dec
sub
sbb
cs
shrb
sub
and
neg
scas
inc
mov
push
cmpsl
jle
out
push
out
and
shl
mov
shrl
daa
daa
jb
aas
mov
pop
mov
sbb
lds
fdivs
stos
mov
adc
fs
loop
push
fnstsw
mov
push
lods
div
pop
and
lods
mov
adc
mov
push
sub
lods
or
std
in
cwtl
fistps
lods
xor
cmp
icebp
incl
nop
adc
mov
and
cmp
shrb
dec
jge
xchg
inc
gs
lret
adc
lds
xchg
mov
add
sti
in
je
orb
into
loope
lods
repz
jmp
lea
pop
or
call
adc
das
clc
test
andl
pusha
mov
add
mov
icebp
dec
fisttpll
push
repz
lods
adc
test
sub
fnstcw
xchg
cwtl
inc
push
pop
xor
scas
cmp
frstor
in
push
lea
cmp
stc
push
and
fs
and
iret
fsubrl
mov
mov
mov
movsb
cmp
inc
out
scas
xchg
sahf
sbb
mov
adc
mov
sbb
lock
jmp
mul
xchg
movsb
and
je
inc
inc
iret
lods
loope
xor
add
mov
scas
sahf
dec
inc
in
sarl
test
inc
scas
loope
clc
push
inc
fsts
lcall
jl
xor
in
adc
jmp
daa
mov
push
sbb
jle
push
and
cmp
xchg
xchg
mov
pop
mov
push
add
and
sti
jae
jno
pop
int3
out
dec
sub
popa
jns
sbb
sbb
in
mov
rolb
mov
jno
push
push
push
cwtl
test
mov
aam
xor
and
ljmp
mov
xchg
sub
aas
adc
addl
pop
xchg
xchg
test
in
inc
gs
pop
outsl
jge
shl
mov
cmp
and
cmp
mov
and
mov
push
push
movsl
mov
sub
pushf
lret
dec
into
ja
popa
fwait
out
push
outsl
mov
push
add
pop
add
xchg
int3
xor
stc
std
push
or
dec
rcl
mov
sub
notb
mov
inc
jo
cmp
pop
ror
dec
sahf
mov
imul
call
or
add
mov
adc
mov
xchg
jno
push
je
mov
into
sti
dec
sbbb
dec
and
pop
stos
push
cmp
mov
inc
pushf
jg
cld
cmp
fs
repnz
shrl
nop
aas
fldt
shll
sub
and
lods
outsb
xchg
mov
jp
fcmovnb
jns
xchg
insb
or
sub
ret
aad
sbb
aam
and
inc
rolb
sti
adc
and
mov
andb
mov
fcoml
ds
popa
or
gs
sbb
jp
dec
insb
pusha
push
movl
sbb
xorb
sub
iret
imul
js
fldt
mov
in
dec
push
jne
cmpsw
mov
jnp
inc
jecxz
jp
pop
sti
enter
stos
and
xchg
imul
jmp
mov
inc
mov
movsb
mov
in
cs
sub
out
movsb
jge
outsb
adc
mov
int3
pop
faddl
hlt
pop
push
jmp
mov
mov
xchg
pop
mov
ret
cmpsb
jp
insl
pop
cs
and
mov
jae
pop
push
out
stc
sbb
or
xor
pop
insb
aam
repnz
cmc
das
mov
ret
jae
jnp
les
imul
xchg
stos
repz
leave
imul
adcb
and
inc
inc
outsb
bound
sub
jp
cmp
sub
inc
jne
notb
and
mov
leave
aad
movsb
or
rorb
dec
test
popl
call
lahf
loopne
das
pop
les
jne
mov
rorb
out
push
in
xor
les
call
mov
in
jmp
test
subl
mov
mulb
aam
dec
mov
jmp
mov
lcall
pop
aad
out
xchg
idiv
ret
sub
divl
mov
cmc
sbb
sbb
in
xlat
into
dec
fsubrp
mov
sbb
mov
es
adc
std
xor
push
or
or
add
inc
and
sub
push
out
adc
mov
mov
xor
push
jmp
mov
arpl
nop
fldt
rolb
push
test
cs
or
mov
add
jb
cwtl
jne
or
out
push
adc
dec
icebp
mov
mov
inc
lahf
gs
rol
mov
add
stc
and
lds
cmc
dec
sbbl
shl
xchg
in
fwait
mov
inc
and
dec
leave
mov
xchg
mov
push
jmp
mov
jnp
fwait
dec
cmpsb
push
mov
adc
xchg
repnz
insl
mov
sbb
dec
push
shr
xor
sbb
out
sbb
xor
cmpsl
jne
in
inc
sti
add
jg
dec
ja
ja
fs
xor
cltd
lahf
adc
pop
cmp
fildl
addr16
mov
ss
pop
and
jbe
sub
lds
fisubl
or
iret
out
add
dec
and
push
pop
sbb
dec
jmp
xchg
js
inc
adc
aaa
adc
rcrb
add
enter
cli
cmp
pop
sub
sub
dec
je
ljmp
jbe
test
push
pop
flds
aam
xchg
pop
clc
sbb
xor
dec
jb
lock
cmp
mov
mov
pop
sbb
add
push
loopne
sub
push
rolb
rolb
test
loopne
movsl
popa
outsl
xchg
ret
fwait
aas
and
mov
into
mov
xchg
mov
daa
cmpsb
into
mov
jnp
addr16
inc
mov
dec
push
mov
arpl
adc
lock
mov
fldl
mov
add
mov
sub
pop
nop
push
xor
cmp
test
pop
jp
or
aas
stos
add
adc
dec
std
shrl
cmc
pop
leave
test
pop
cmp
pop
popf
mov
cmpsl
xor
into
test
sbb
sbb
bound
in
sti
test
out
push
stos
pop
dec
shlb
jge
add
sub
add
xorl
or
sbb
xor
dec
cmp
loopne
xor
lret
sbb
imul
lret
in
mov
push
dec
shll
popf
dec
scas
pushf
fistpl
iret
xor
push
xor
push
dec
lods
jmp
loopne
push
add
fdivs
and
xchg
inc
call
cmp
jecxz
mov
jb
mov
and
cmpsl
mov
dec
adc
xchg
ds
fsubr
outsl
mov
scas
mov
arpl
and
into
test
sub
insb
pop
arpl
lahf
mov
lret
fisttpl
mov
movsb
pop
clc
adc
jle
sbb
sub
add
jne
enter
sbb
inc
and
mov
les
mov
shr
or
ljmp
stos
and
mov
in
add
push
les
fld
or
jmp
xchg
add
jge
xchg
xor
push
in
dec
daa
pop
add
call
in
mov
and
icebp
jnp
aad
bound
sbb
test
push
push
add
cmpsl
je
mov
dec
push
aam
add
movsb
inc
add
test
jg
sbb
mov
outsb
push
dec
out
nop
push
mov
stc
addl
outsl
lcall
icebp
ret
inc
sahf
dec
ret
sahf
test
pop
jbe
xchg
cmp
adc
inc
stc
incb
add
mov
sbb
pop
jmp
insl
std
in
jbe
and
cmp
rcll
xor
out
cld
pop
lods
push
rcll
push
and
sti
push
arpl
cwtl
add
subl
pop
test
inc
scas
adc
jbe
test
add
divl
xor
xor
cwtl
repnz
rclb
fimuls
into
inc
iret
dec
fldl
push
and
fistl
pop
sub
iret
mov
es
insl
scas
leave
call
dec
sti
cmp
mov
sbb
adc
and
dec
push
loop
inc
scas
inc
mov
outsb
nop
std
push
aas
sbb
imul
addb
fnstsw
adc
push
inc
cli
sbb
pop
lods
jp
inc
rorl
and
xlat
push
mov
loopne
sub
mov
ss
lods
and
aaa
mov
aas
adc
repz
lods
gs
mov
add
sbb
add
lds
or
mov
inc
lea
mov
lahf
mov
jge
or
lods
stos
pop
pushf
icebp
popf
cli
or
push
and
je
mov
test
in
and
push
and
add
je
in
shll
sbb
xor
je
pop
sti
dec
pop
mov
sub
or
imul
push
jmp
lock
xor
or
fildl
add
xchg
stos
repz
pop
fbstp
stos
sahf
fisttps
push
in
adc
sarb
test
push
repz
push
rolb
or
mov
orl
je
out
xor
and
pop
lahf
push
aaa
icebp
xchg
js
jb
xlat
sarl
and
mov
sub
inc
repnz
lcall
mov
dec
inc
andb
movsb
pop
xchg
dec
ficoml
in
lods
cmp
lcall
dec
push
mov
xlat
push
jb
cld
pop
adc
push
ja
dec
xchg
ret
std
repnz
pop
push
xchg
mov
add
pop
add
jle
sub
insl
mov
test
in
and
adc
sbb
sub
or
cmpsb
lds
mov
pop
iret
and
imul
js
mov
fucomp
mov
pop
ret
mov
je
fwait
push
adc
xchg
xchg
xchg
in
ret
mov
mov
push
rclb
mov
sahf
mov
sub
mov
fnstcw
and
jae
cmp
and
mov
jge
cmpsl
mov
inc
add
dec
and
sbb
movsb
mov
mov
push
fists
inc
add
dec
xor
test
shl
stos
push
mov
mov
jo
jae
push
sbb
mov
push
mov
dec
add
pop
inc
dec
cmpsl
xchg
or
xchg
add
iret
push
ds
lret
sti
mov
xor
ficoml
dec
mov
mov
test
mov
in
daa
mov
jle
mov
dec
fs
aam
xor
push
in
sub
test
mov
jb
data16
xorl
loop
xchg
jmp
pop
mov
push
clc
fbstp
adc
cmp
pop
and
addr16
push
lods
pop
pop
xor
repnz
repnz
xchg
into
push
jo
in
cmp
cltd
inc
lea
aaa
cmp
pop
cmp
ss
enter
jb
repnz
adc
adc
sub
int
loop
cli
cmp
mov
xchg
es
jae
cli
xchg
pop
aad
sbb
mov
pop
out
imul
cmp
enter
pop
cmp
sti
jl
aas
das
jb
scas
outsb
int
dec
pop
repz
mov
inc
inc
loope
adc
dec
outsl
inc
loop
in
mov
jo
xchg
mov
and
cltd
ror
xor
fdivp
and
jle
mov
jns
sbb
loop
lahf
rolb
push
xchg
adc
mov
scas
mov
call
cs
cmp
cmp
push
fistpl
ffreep
shll
adc
lds
movsl
pop
dec
bound
mov
dec
pushf
repz
cmovb
mov
jle
popf
cld
je
adc
shlb
les
pop
out
fcoml
cmp
cmp
ret
loopne
mov
ret
push
lret
push
and
xor
add
cmp
sub
mov
sbb
add
insl
insl
cs
out
adc
xchg
sub
pop
pop
shll
jnp
fmuls
xchg
inc
add
lcall
fnsave
inc
xchg
jl
test
adc
mov
outsl
or
out
mov
or
mov
push
fiaddl
dec
lret
into
sarb
xor
push
xchg
adc
jns
jne
cwtl
mov
ljmp
incl
and
push
gs
filds
mov
nop
mov
add
clc
aam
and
ret
mov
or
int3
in
ljmp
iret
fmull
and
jbe
push
lods
push
neg
sub
cld
cmp
repnz
jbe
dec
scas
flds
test
popf
pop
int
cld
mov
xchg
and
test
and
and
push
pop
mov
sub
lret
lret
cmove
jne
xlat
mov
push
adc
nop
nop
pop
push
pop
xlat
push
jmp
hlt
icebp
arpl
pop
mov
push
fcoml
mov
push
push
cmc
pop
pop
push
push
mov
insl
push
cmp
jecxz
cmp
jns
inc
mov
push
xor
cmp
cmc
mov
rcr
pop
or
lods
xorl
notb
xchg
in
lahf
adc
test
cmp
xor
fbld
loope
pop
jnp
call
mov
sub
pop
fnsave
add
lahf
or
andb
pop
jno
jbe
mov
mov
sub
scas
mov
fmull
cmp
add
push
fnstcw
dec
gs
xbegin
lds
xchg
push
push
call
aam
and
jge
mov
jle
push
iret
cmp
pop
jp
fbstp
xchg
or
sbb
orl
and
xchg
cs
test
pop
sbb
lds
or
sbb
in
xor
ret
or
inc
insl
addr16
add
fsubr
in
dec
rol
xor
and
sbbb
ret
daa
cs
pop
pop
test
mov
or
mov
cmp
or
mov
inc
dec
dec
test
pop
data16
test
lods
add
in
fsubl
test
push
pop
rolb
jg
add
js
fbstp
jno
cmpsb
jb
insl
add
stc
mov
sub
push
pusha
jecxz
hlt
adc
outsl
negb
out
push
sarb
adc
pop
push
adc
add
mov
push
mov
into
jle
xchg
loopne
sbb
and
xchg
adcl
jmp
sub
pop
xchg
sbb
movsl
ret
xor
in
xchg
xchg
add
arpl
and
xchg
lret
adc
mov
dec
fs
stos
xlat
mov
pop
fisubrl
dec
mov
inc
popa
fucomp
testb
js
insb
adc
push
jmp
stc
jg
cmpsb
fs
jo
sub
jmp
ss
lret
inc
mov
mov
mov
icebp
adc
in
mov
fsubs
inc
jo
int3
out
or
pop
pop
cwtl
pushf
xchg
and
mov
dec
xchg
dec
mov
nop
repz
push
iret
mov
arpl
push
xlat
inc
nop
push
ret
fcmovu
hlt
jo
stos
int
mov
loope
mov
call
xor
insl
call
stc
stos
adcb
jae
enter
cmp
push
mov
fistpll
jp
mov
or
jnp
movsl
lods
jns
jmp
fcompl
lret
ret
pushf
mov
nop
mov
push
mov
or
scas
dec
out
scas
xchg
dec
xchg
add
int
imul
lahf
stos
pop
inc
test
sbb
dec
cmp
mov
imul
lds
push
mov
negl
xor
sub
pop
les
mov
push
je
or
xor
xchg
lret
imul
ds
pop
xchg
sub
aam
mov
pop
inc
mov
testl
nop
into
dec
push
jecxz
jo
cmp
push
imul
mov
ljmp
fidivrl
ror
repz
and
push
adc
ja
xchg
and
adc
jno
xor
mov
dec
insb
hlt
inc
xor
mov
movsl
sub
lds
fcompl
xchg
push
movsb
sub
mov
adc
aas
mov
mov
pop
or
add
fs
imul
lret
dec
add
mov
xchg
sbb
out
in
aad
mov
mov
inc
push
sbb
push
pop
add
pop
jle
stc
loope
and
int3
push
inc
adc
rorb
ja
insl
mulb
lahf
sahf
push
mov
xor
movsl
jno
inc
andl
jg
and
adc
mov
ret
in
jo
in
nop
mov
out
sub
subb
fildl
lret
jae
negb
es
outsb
inc
jge
ret
add
inc
lret
sahf
pop
in
xor
in
jle
dec
and
dec
sub
lahf
insl
pop
cmp
pop
in
xchg
popf
mov
mov
testl
jne
dec
pop
mov
mov
pop
outsb
mov
pusha
andb
cwtl
push
ret
pop
cld
fmull
cld
and
mov
std
mov
lahf
ret
sub
es
mov
repz
push
sub
jecxz
in
cmp
lret
addl
inc
popf
sbb
xchg
dec
scas
pop
aad
pop
cmp
xor
fstp
cmpsw
mov
sbb
xchg
mov
lods
jns
mov
push
stos
mov
call
aad
inc
repnz
add
popa
das
mov
mov
je
insl
aad
popl
push
mov
mov
test
pusha
ss
mov
aaa
rcr
mov
test
push
sub
ret
lahf
ret
xor
push
stos
sbb
add
lcall
negl
pop
nop
mov
loopne
sbb
ja
dec
lods
ja
dec
ljmp
rcll
in
stos
mov
dec
sub
das
mov
aad
pop
out
inc
bndstx
pusha
inc
pusha
sub
mov
aad
stos
lret
mov
rcrl
push
lods
pop
pop
mov
xchg
sbb
leave
call
fcmovne
xlat
lock
mov
test
flds
stos
pusha
or
les
and
lahf
and
jg
inc
mov
cld
add
lea
add
aad
push
mov
mov
rolb
subb
decb
jl
addb
or
ja
xchg
mov
hlt
rdmsr
stos
in
sbb
xor
cmp
sti
es
lea
ret
cmp
sub
ljmp
lods
push
ret
addr16
jmp
push
mov
jae
clc
dec
icebp
cmp
push
stos
xchg
sbb
mov
cmpl
sti
orl
mov
xchg
test
dec
out
mov
pop
les
xchg
lea
push
jno
ficoml
add
xchg
fs
xor
mov
cli
dec
fldl
loope
icebp
cli
fists
push
imul
adc
fs
pop
js
fisubrs
mov
pop
sarb
negl
jbe
ficoml
dec
sti
lods
push
jg
adc
imul
pop
xchg
mov
arpl
mov
lret
test
rorb
cltd
jno
mov
cld
imul
pop
jae
sub
mov
mov
xchg
jb
add
aaa
movsb
pop
stc
jae
ret
or
les
adc
inc
lahf
xorb
ret
out
imul
lock
test
push
mov
rcll
data16
xor
pop
cmc
xchg
jb
sub
lret
push
inc
test
repnz
movsb
lods
popa
daa
dec
lret
pop
dec
fwait
and
idivb
mov
insl
xor
outsl
adc
scas
pusha
xor
sti
sbb
roll
icebp
jp
and
jae
dec
ljmp
xchg
int3
inc
inc
cmp
sbb
je
mov
neg
imul
pushf
arpl
cltd
xchg
hlt
repz
lea
xchg
cld
in
mov
mov
aas
test
out
icebp
mov
shrl
ljmp
stos
lcall
lcall
pop
push
hlt
xor
jge
push
add
pop
std
and
dec
pop
fidivs
xchg
xor
clc
es
fadds
rcrl
aas
outsb
out
jae
cmp
dec
cld
sbb
loope,pt
adc
cmc
out
fidivs
imul
cld
mov
pop
leave
or
pop
loop
std
mov
lahf
cmp
push
mov
not
cmp
mov
mov
sub
lea
roll
dec
stc
loope
aaa
out
pop
lahf
adc
rcr
add
repz
xor
insb
jnp
adc
mov
jno
sbb
scas
pop
push
xor
in
mov
pop
adc
mov
fnsave
mov
shr
xchg
mov
pop
outsb
dec
sub
mov
pop
and
sub
cmpl
repz
push
clc
imul
cmp
add
sbb
cmc
scas
pushf
xchg
adc
jle
pop
or
stos
in
xchg
pop
mov
and
test
mov
lods
mov
int
xchg
sbb
pop
pop
ljmp
int
pop
out
mov
cld
lds
xor
dec
mov
jp
mov
nop
xchg
rcrb
xor
push
fwait
mov
xchg
icebp
pop
pop
mov
add
mov
gs
mov
imul
push
push
in
xor
push
xor
dec
dec
push
push
inc
ret
dec
mov
mov
shrl
sti
scas
dec
mov
mov
mov
mov
stos
clc
sub
das
roll
stos
lcall
shrl
loopne
lock
xor
and
mov
mov
jnp
shrb
push
icebp
dec
dec
cli
out
xchg
mov
dec
pop
shrl
mov
lods
loop
inc
jp
in
scas
stos
bound
pusha
out
push
addr16
cs
push
lods
push
fnstsw
notl
inc
xchg
test
popa
push
movsb
fnstcw
push
cltd
adc
insb
cmpsl
in
out
jecxz
xchg
mov
stc
pop
pusha
mov
jmp
dec
imul
mov
push
cltd
not
fsubl
mov
add
enter
jae
mov
shl
jae
or
cmp
sarb
cmp
jmp
fadds
in
mov
or
dec
icebp
fisubl
pop
out
xchg
dec
cmp
nop
imul
fbstp
daa
bound
jbe
pop
mov
xchg
cs
out
inc
or
xchg
cmp
jns
mov
push
jns
dec
pop
jae
cmpsb
sub
aas
enter
xchg
jmp
sbb
andb
mov
cmp
mov
clc
fldt
sbb
pinsrw
push
into
cmpsb
xchg
loope
movsl
cmp
cmp
scas
mov
cli
xchg
sarl
and
push
shll
fadds
shl
mov
stc
jae
aad
mov
jns
insl
adc
xor
pcmpgtd
inc
push
add
cld
or
and
iret
mov
icebp
xor
fstp
pushf
shlb
jecxz
icebp
xor
add
cltd
imul
clc
mov
je
fdivr
sbb
jp
adc
cmp
xchg
iret
test
inc
sbb
xor
jle
mov
xchg
pop
cmp
mov
pop
xor
add
fldt
mov
sbb
xchg
or
mov
test
lret
int
test
lods
jo
lods
stc
into
xorl
push
movsl
incl
jnp
movsl
dec
ja
inc
bound
or
xchg
aad
out
out
adc
loopne
lods
cmpl
push
cltd
sbb
dec
mov
mov
jmp
lcall
lcall
sahf
lret
mov
mov
cmp
mov
pop
jne
lret
cmpl
push
daa
push
movsl
aam
inc
test
das
bnd
mov
lahf
hlt
sub
sbb
adc
sbb
stos
sbb
and
mov
stos
mov
add
mov
add
out
js
inc
and
or
imul
jne
push
dec
bound
mov
in
fs
pop
sub
cmp
popf
jae
add
xlat
jae
jne
fiaddl
mov
sub
mov
insb
cld
cltd
out
bound
fadds
add
lahf
int
leave
inc
dec
push
mov
mov
mov
pop
outsb
jmp
pop
xchg
sbb
mov
xor
dec
xchg
outsl
push
ret
fs
xor
cs
add
into
fs
add
andl
adc
rclb
popa
and
outsb
jnp
mov
sbb
cwtl
aad
subb
jo
mov
pop
jl
clc
lcall
jp
pop
in
sbb
rcrb
dec
xchg
jge
add
push
fucomip
fcmovne
cmp
mov
jnp
mov
xchg
sahf
push
int
adc
mov
jbe
add
xchg
fdivp
or
xor
adc
outsb
je
scas
notb
dec
push
fs
push
inc
pop
repnz
icebp
mull
sbb
pop
test
call
outsb
jmp
push
dec
sub
cmpb
push
cmp
cmpsb
mov
cmpb
repnz
pop
pop
shl
sbb
ret
sbb
std
add
inc
outsl
sub
ss
mov
mov
jecxz
jnp
pushf
push
jp
push
mov
test
scas
aas
mov
mov
insb
jle
pusha
xor
sbb
je
out
fcmovnb
sbb
rcrl
imul
into
fisubrs
lcall
xor
fmuls
jnp
sub
sbb
mov
jbe
xlat
ljmp
frstor
scas
stos
jne
xchg
push
dec
jnp
xlat
in
movsb
jecxz
mov
sub
insl
sbb
mov
out
lret
inc
int3
dec
sbb
out
rorl
inc
loope
scas
push
cmp
pop
imul
jp
mov
repz
out
aas
movsl
or
icebp
pushf
mov
leave
icebp
sbb
sqrtps
pop
lahf
dec
into
xchg
into
mov
cmpsb
push
jae
out
aas
pop
lea
clc
cmp
cmc
mov
push
mov
es
mov
cmc
shl
outsb
mov
xchg
fists
cmpsb
inc
mov
dec
out
mov
fs
stos
stos
addl
cmp
jnp
dec
scas
push
movsl
in
rorb
mov
jb
mov
pushf
lahf
test
pop
mov
sbbb
adc
fildl
xor
mov
push
mov
xchg
imull
fbstp
sbb
dec
icebp
scas
sub
or
cmpsb
scas
fbld
push
pop
add
sbb
ss
scas
jp
sub
out
daa
mov
push
add
jmp
xchg
psadbw
mov
push
jo,pt
sub
dec
push
andl
scas
or
and
sbb
pop
mov
add
dec
stos
fs
push
in
je
xor
push
cmp
movsb
mov
push
mov
ret
push
subb
fisttpl
push
push
aas
push
mov
das
cmp
in
shlb
xchg
xchg
imul
arpl
mov
push
mov
enter
je
push
pop
jb
repnz
add
xchg
jp
sub
ret
pop
push
jae
and
mov
enter
mov
mov
adc
daa
out
inc
mov
outsb
stc
rolb
ljmp
popf
cmp
push
ja
dec
cmpsb
je
add
test
mov
add
mov
inc
jp
fisubrs
in
mov
rorb
rcrl
mov
mov
push
jno
mov
xorl
stos
movsb
popf
repz
jmp
dec
test
lret
insb
jecxz
pop
pop
cmp
jns
inc
or
adc
cli
pushl
mov
mov
fidivrs
sub
fmul
bound
in
enter
imul
pop
mov
lea
loop
data16
pop
add
cmpsb
xor
pusha
loop
aas
mov
and
test
nop
pop
gs
dec
div
ljmp
add
cmp
dec
sub
testl
jo
hlt
into
aad
std
xchg
cmp
into
ljmp
fcmovnb
insl
push
pusha
inc
test
aam
inc
adc
jb
pop
mov
arpl
cmp
cmc
addr16
mov
das
lcall
add
push
sarb
fs
cld
cwtl
sub
sbb
data16
jg
mov
and
adcl
dec
or
adc
inc
ja
dec
lcall
mov
test
stos
xchg
push
jge
notl
mov
aaa
insb
add
fdivrl
dec
sahf
and
and
stos
xor
int3
in
aam
lds
loop
mov
iret
das
sub
jge
mov
sub
mov
xor
sub
sub
pop
sahf
adc
pop
or
cmc
adc
mov
lea
push
je
lods
lods
mov
xchg
dec
test
xchg
pop
push
mov
jb
fwait
in
into
mov
cs
pop
sbb
mov
push
repz
movsb
jne
sub
push
mov
pop
sbbl
adc
out
lcall
xchg
js
clc
and
inc
dec
pop
mov
ret
cmp
adc
push
inc
xor
push
mov
pop
pop
sbb
dec
cmpsb
xchg
lcall
and
adc
int
imull
jno
loopne
cmp
repnz
mov
nop
mov
and
inc
mov
js
stos
push
andl
or
xorb
pop
xchg
mov
ds
add
out
shlb
sub
push
aad
xchg
int
dec
inc
mov
mov
mov
push
mov
cld
sbbl
mov
and
lods
inc
call
cwtl
sbb
inc
dec
fs
mov
push
aad
ja
fcom
sub
sbb
lods
dec
adc
out
subl
je
mov
cwtl
shll
jp
lret
push
sbb
mov
pushf
or
loop
adc
inc
pusha
mov
adc
int
lods
inc
jnp
mov
sub
lahf
dec
stc
push
out
cmp
mov
mov
dec
mov
mov
or
xor
aas
add
xchg
enter
and
mov
push
cmp
iret
jbe
cs
sbb
fnstcw
xor
mov
adc
test
jmp
push
and
jb
ja
pushl
cld
or
roll
dec
fsubr
or
movsl
sub
adcb
mov
jne
ret
push
mov
or
jmp
arpl
mov
test
in
push
mov
and
xor
mov
xor
loop
xchg
mov
fnstcw
scas
and
ret
add
add
into
fistpll
aaa
lea
fmull
fsubs
or
inc
mov
scas
xor
movsb
mov
xchg
into
jae
pop
or
xor
dec
ret
test
cmp
imul
mov
mov
icebp
mov
incl
push
in
jmp
pop
add
xor
xchg
pop
fsts
daa
adc
lods
ret
sub
cmpsl
push
dec
iret
cld
sbb
inc
repnz
jle
lock
fwait
adc
pop
xor
or
mov
jb
insl
add
ret
insl
mov
adc
cwtl
sti
lret
and
push
lods
xchg
push
pop
inc
inc
repnz
in
jne
pop
cwtl
imul
pushf
ret
aaa
leave
addr16
test
push
jno
xchg
and
rclb
int
lret
int
mov
sbb
int
outsl
rcl
pushf
push
scas
adc
add
jecxz
orb
add
lock
cmpsb
cmp
jb
mov
lret
adc
xor
rolb
addl
movsl
add
insb
addb
dec
repz
repz
mov
or
cltd
push
xor
mov
cmpsb
inc
cmp
adc
xor
sbb
jb
mov
jmp
xchg
bsf
and
std
mov
add
test
pop
rolb
cs
lahf
jle
sahf
or
xchg
loopne
clc
adc
into
repnz
lea
sahf
push
jge
adc
add
dec
jp
dec
xor
packssdw
xchg
lahf
xchg
out
xchg
arpl
fwait
dec
mov
adc
stos
insl
add
lods
sub
push
das
adc
addr16
sbb
mov
mov
mov
scas
adc
pop
mov
rcrb
inc
cwtl
or
cltd
scas
cmpsb
pop
cmp
add
push
sub
mov
push
jno
mov
and
nop
sub
loope
inc
imul
and
rorb
push
punpckldq
sub
pop
gs
dec
mov
jae
xorps
lahf
cld
push
roll
test
mov
icebp
cld
loop
imul
clc
add
imul
ror
popf
adc
cwtl
ljmp
cmpsb
loop
mov
movsl
sti
push
mov
pusha
mov
sti
sahf
xchg
data16
jecxz
xor
mov
nop
pushf
sbb
push
loope
lods
xor
cltd
mov
adc
cmpsb
inc
xor
add
dec
cmp
cmpsb
arpl
lcall
imul
out
leave
pop
lcall
xchg
and
push
pop
rcll
cmpsb
adc
in
sbb
add
xorl
je
popf
jb
xchg
sub
jl
adc
repnz
inc
push
cmpsl
push
xchg
fistl
stc
and
loop
or
mov
jg
insb
ret
leave
lds
mov
jle
scas
add
jmp
movsl
lahf
rcr
fnstenv
pop
mov
iret
decl
into
mov
outsb
fidivl
mov
push
das
or
inc
mov
xchg
add
insl
test
sbb
mov
mov
imul
jle
ljmp
enterw
movsb
jne
insb
adc
adc
add
sbb
push
int
jnp
in
addr16
push
inc
std
add
pop
mov
inc
adc
dec
cmp
push
and
leave
jmp
mov
fwait
sub
add
jmp
outsb
enter
sarb
cmc
mov
adc
repz
pop
enter
popf
sub
jecxz
inc
bound
push
cmp
pop
xor
out
popa
ss
aad
out
inc
and
sub
jb
call
add
and
aas
adc
mov
sub
cmpsb
dec
stos
adc
cmpsb
xchg
cmp
sub
mov
incl
mov
push
or
cmpsb
sub
sarl
scas
ja
mov
xchg
stc
mov
push
sbbl
xchg
sti
lahf
push
out
push
lods
out
lods
in
mov
lahf
xchg
fcompl
jg
jne
out
lahf
sbb
dec
es
mov
pop
dec
ljmp
daa
pushf
shrl
push
sbb
cwtl
testb
les
push
sbb
push
lock
jmp
hlt
les
mov
ret
es
push
mov
jmp
cmp
shl
sahf
jmp
call
fisttps
adc
data16
xor
repz
push
mov
mov
sahf
dec
or
and
shl
adc
mov
jle
cmp
shrl
dec
adc
push
cs
lea
inc
mov
dec
ss
pushf
or
arpl
clc
cmp
sbbl
mov
jp
inc
xlat
lods
xor
sbb
mov
outsl
inc
ret
xor
bound
rolb
movsl
jp
mov
aaa
out
mov
xchg
dec
sbb
jne
in
ds
std
sbb
das
call
cwtl
dec
sub
jmp
jns
rorb
mov
xor
divb
out
aaa
and
cmpsl
jp
and
mov
and
mov
adc
outsl
push
and
lret
test
xchg
or
test
inc
fidivrs
push
fadd
insl
xor
lods
shrb
adc
lods
sub
enter
push
daa
aaa
xchg
ja
aaa
jp
fadd
push
insb
out
lret
cmp
cmp
stos
inc
lret
mov
mov
push
mov
mov
sub
inc
or
sub
lea
jg
les
xchg
lods
lods
push
sbb
ret
jmp
jge
imul
gs
inc
push
xchg
repnz
inc
fcomps
jg
sbb
sub
jne
sub
cmp
lods
test
jecxz
mov
inc
outsb
and
mov
enter
mov
hlt
mov
pop
mov
mov
adc
xchg
and
sbb
nop
dec
mov
sarl
add
mov
push
stos
jmp
dec
jl
jns
xchg
xchg
fimuls
sub
enter
loopne
push
shl
ljmp
jmp
jg
mov
out
pop
xor
rep
add
cmp
aaa
lods
add
icebp
sub
sub
outsl
inc
xchg
shr
pusha
fwait
add
ss
or
pop
mov
mov
das
push
push
pop
xchg
xchg
imull
mov
mov
psrld
mov
leave
add
fbstp
imul
rcrl
stos
sub
or
je
sti
or
neg
and
cmp
ret
mov
add
outsb
aaa
add
inc
aam
dec
inc
mov
sti
lods
pop
rorb
imul
xor
cmpsl
pop
test
cltd
nop
ret
stos
mov
fisttpll
icebp
aas
insl
lock
push
faddp
fwait
pop
mov
dec
xchg
pushf
push
iret
xchg
out
cs
ss
mov
mov
test
cmp
mov
cltd
cmp
sahf
inc
sti
sbb
push
xor
cs
pop
xchg
push
adc
xlat
inc
or
push
into
xor
jb
xor
mov
or
adc
mov
dec
push
mov
scas
daa
loopne
lcall
mov
ret
dec
mov
pop
pop
fcompl
jecxz
fistps
negb
in
in
fs
sub
pop
movsb
ficomps
divl
lds
xorb
ljmp
push
mov
push
pcmpeqd
lcall
adc
xchg
cwtl
jge
lahf
mov
fbld
cmp
jmp
pop
aas
or
test
sbb
mov
xorl
stos
sbbb
xchg
leave
pop
dec
mov
xor
jle
int3
bound
pop
push
inc
push
inc
cmc
pop
mov
scas
out
dec
mov
push
pop
nop
cwtl
pop
push
cltd
add
enter
pop
xchg
pop
mov
cld
movsb
mov
ja
mov
pop
xchg
out
push
pop
add
xchg
lds
gs
aad
xor
mov
mov
notb
xor
sahf
aad
add
out
sahf
test
dec
jnp
test
mov
pop
jae
fnstcw
test
pop
cmpsb
fbstp
xchg
das
mov
xor
xlat
mov
push
movb
ja
push
dec
jge
and
mov
sar
imul
dec
mov
push
leave
or
and
cli
loope
adc
cmp
jg
jns
es
dec
xor
mov
sbb
nop
scas
xchg
mov
lock
rol
stos
test
cli
fisubrl
sti
fmul
xor
popa
sbb
inc
mov
loope
jle
paddq
outsb
mov
jg
xlat
add
adc
xor
nop
inc
push
add
inc
cmpsl
insb
fnstcw
ss
push
adc
lret
dec
jb
mov
xchg
inc
je
in
inc
cli
dec
arpl
cmpsl
fcoml
push
pop
insb
fldt
lock
outsl
loop
inc
mov
aaa
ret
cltd
jnp
mov
mov
sti
dec
and
cmp
sub
aas
imul
scas
ss
cltd
popf
inc
mov
pusha
xor
aad
xchg
sbb
dec
popf
ja
sbb
mov
into
mov
ficoml
push
and
jo
loope
push
das
std
rclb
adc
add
in
jp
enter
rcrb
popl
mov
jg
cwtl
or
pusha
stc
cltd
cmc
xchg
add
xchg
or
lahf
out
sub
je
mov
push
scas
dec
test
or
shlb
sub
xchg
mov
push
sub
std
ret
sbb
cltd
sarb
hlt
stos
mov
cli
pop
adc
mov
out
mov
cmp
mov
sub
mov
push
push
ret
xchg
outsl
hlt
test
inc
shrl
es
mov
inc
fcomps
ja
jle
dec
push
aaa
and
ss
or
aam
push
xchg
fwait
push
sub
out
mov
push
dec
shl
push
mov
push
mov
sub
in
sbb
call
fisttpll
lock
orl
imul
pop
loop
mov
xor
jmp
inc
mov
std
stc
notl
mov
pop
add
inc
or
adc
jge
movsb
xchg
add
inc
fisttpl
sbb
mov
mov
push
jnp
fstpt
jg
testl
adc
cmp
lea
loope
loop
pusha
push
enter
push
cwtl
fldenv
dec
out
jae
cmp
movb
lods
mov
lcall
movsb
mov
pop
test
adc
int3
pop
jge
and
js
imul
int
mov
mov
cmp
dec
adc
bound
sub
rorl
ljmp
loopne
mov
inc
mov
aaa
and
pop
xchg
fisttpl
adc
or
popa
xor
push
add
fwait
pop
fwait
mov
stos
lcall
jmp
push
sbb
push
mov
repnz
fnstcw
ljmp
scas
cli
out
mov
mov
stos
fsubrs
dec
nop
sub
negl
mov
dec
adc
je
inc
cmp
pop
mov
mov
pop
fcmove
xchg
out
lret
mov
pop
pushf
xor
adc
cli
xchg
cwtl
in
in
enter
push
dec
in
mov
sub
clc
out
mov
in
inc
lret
xor
inc
cltd
jmp
fnstenv
fidivl
push
scas
xchg
call
cs
loope
pop
add
faddl
xor
adc
outsl
sub
gs
mov
mov
adc
pop
test
and
inc
jecxz
frstor
jns
sar
ss
jmp
fwait
js
sub
pop
mov
lds
add
sbb
stc
jno
ja
mov
or
push
adc
das
mov
push
push
hlt
push
xor
and
shrb
loop
jge
pop
sbb
ja
xchg
xor
jno
add
or
jae
imul
out
in
and
sub
sub
scas
inc
addr16
dec
rcll
mov
add
or
mov
mov
faddl
ret
mov
mov
jl
std
mov
adc
mov
sbb
xchg
add
fdivp
aas
jl
mov
xor
repz
shll
hlt
es
fsqrt
ret
imull
in
xchg
sahf
add
call
or
xchg
dec
fcoms
aad
pop
fwait
mov
adc
cmp
loope
fadd
popa
adc
scas
xor
mov
fistpl
jl
repz
sbb
cwtl
mov
cwtl
jnp
sbb
data16
test
in
add
mov
inc
adc
mov
or
and
movsl
xchg
out
test
pop
jne
or
das
xchg
je
jb
cwtl
xchg
les
adc
rclb
js
js
in
add
out
sti
aad
ljmp
or
lret
scas
cmc
in
push
dec
in
xchg
xor
ljmp
pop
dec
enter
pusha
outsb
or
fsubs
dec
fidivl
pop
lods
mov
repz
jecxz
add
mov
loopne
jmp
loopne
sub
stos
mov
repnz
jo
mov
outsl
cmp
aas
loopne
jg
add
dec
pop
mov
mov
mov
sub
jo
es
into
sbb
mov
out
adc
stos
int
cltd
sti
andb
fdivrs
cwtl
ret
inc
lahf
ret
inc
je
loop
sub
pop
jnp
cmp
out
cmc
sub
jne
imul
icebp
fcomps
call
js
data16
negl
sbbl
ja
xchg
cmc
test
in
js
mov
loopne
and
adc
out
cld
adc
push
sbb
stos
js
cwtl
inc
filds
add
push
adc
push
mov
inc
dec
ds
add
push
cs
in
stos
aad
jecxz
outsl
cmpsl
dec
aas
pusha
mov
lcall
fidivl
jl
sbb
pusha
ror
mov
ja
nop
lret
popa
inc
mov
push
cmc
sub
loope
jmp
or
sub
les
sub
adc
xchg
or
out
or
iret
repz
sti
add
hlt
sbb
popa
push
add
in
adcl
arpl
jge
repz
xchg
xchg
popf
sbb
cli
cs
sahf
mov
inc
push
inc
xchg
mov
xchg
out
icebp
std
xchg
adc
movsl
mov
popa
fisttps
push
sub
repz
cwtl
dec
lock
jb
lods
sbb
pushf
jecxz
sarb
mov
shr
movsl
leavew
mov
and
xchg
scas
je
addr16
fs
mov
xchg
lahf
and
push
dec
icebp
inc
shrl
stos
popa
sub
lods
lcall
js
inc
push
pusha
fs
cmp
xor
pop
sbb
or
jo
orb
lock
les
mov
inc
mov
and
xchg
aam
inc
cwtl
add
pop
ret
pop
or
push
xor
fsubs
jl
xchg
sbb
jg
popa
fcmovbe
stos
addl
adc
inc
inc
out
scas
jne
mov
xor
or
adc
popa
push
or
and
aam
and
xor
and
movsb
fs
movsb
inc
xchg
sahf
sub
mov
jno
movsb
into
jne
mov
or
popa
jge
add
gs
test
lock
repnz
mov
inc
bound
inc
xchg
testb
or
mov
dec
cs
mov
rorb
shlb
sub
xor
pop
cs
jecxz
aaa
sub
fs
mov
pop
in
mov
mov
pop
push
mov
add
test
mov
push
mov
test
sub
call
pop
shrb
icebp
and
call
icebp
ret
mov
push
xor
jecxz
xor
aas
in
push
xchg
xlat
cmp
or
fnstsw
adc
test
jbe
outsb
pushf
mov
push
push
mov
dec
jecxz
cmp
ffreep
repz
lret
scas
jge
arpl
jno
test
push
int3
repz
stc
mov
inc
pop
add
pop
mov
lock
xchg
pop
cmc
arpl
mov
xchg
xchg
xlat
push
mov
push
add
mov
mov
or
jns
scas
sbb
xor
add
ja
int3
xchg
ret
cmp
adc
sub
cli
lret
js
jbe
into
xchg
out
fsubl
ret
mov
int3
cmp
adc
pop
adc
aad
or
push
sub
push
fmuls
or
out
or
jnp
aaa
and
dec
mov
sbb
ds
mov
jmp
sbb
push
or
scas
ljmp
insb
clc
jge
jb
int
sub
jge
cli
movsl
fprem1
sub
popa
cwtl
fsubl
add
ficomps
mov
fidivrl
cmp
call
js
scas
test
std
push
cmp
ror
dec
pop
mov
cmp
fdivrs
jmp
cmp
sub
xor
mov
int
mov
testl
ds
pop
dec
cld
mov
rclb
imul
dec
js
mov
clc
jae
pop
dec
in
dec
cld
mov
jbe
data16
xchg
orl
cltd
subb
mov
adc
ljmp
sbb
clc
sti
shlb
xlat
pop
jo
out
cmp
ror
pop
das
xchg
les
add
add
mov
js
aaa
sbb
loope
push
cmp
aad
cmpsb
sub
sbb
std
fidivrs
jnp
aas
or
jle
or
xor
xchg
push
sub
pop
fldln2
stos
cmp
push
sbb
sbb
adc
pop
mov
xchg
loop
mov
ja
icebp
ret
xor
cwtl
aad
ret
int
xchg
jle
lods
xchg
jb
mov
mov
loope
xchg
cli
mov
and
xchg
xchg
shr
pop
dec
aam
push
fidivrs
aas
jo
or
fidivl
mov
loopne
mov
decb
mov
fmull
mov
enter
pushf
cmp
pop
faddl
shll
sub
mov
dec
cmc
add
sub
shrl
push
cmp
shlb
lods
xchg
pop
cmpsb
adc
int
push
xchg
ret
mov
fnstcw
push
pop
jg
shl
orl
int3
xchg
pop
jl
and
rcl
xchg
xor
icebp
push
cli
arpl
mov
pop
mov
xlat
add
aaa
add
stos
mov
insl
insb
add
movsb
mov
sbb
dec
cmp
sub
sub
fwait
test
jg
out
adc
mov
std
mov
insl
mov
pop
adc
push
jg
imul
sahf
sub
jmp
sar
add
push
mov
mov
xor
mov
clc
out
je
fisubrs
add
std
fs
cs
adc
jnp
sti
mov
inc
cmp
push
lods
inc
mov
jno
shll
dec
ljmp
lret
sbb
jb
push
stc
aaa
sub
pop
std
fwait
call
lods
pop
lods
test
popf
cmp
int3
xlat
mov
ret
test
js
inc
mov
cmp
or
aam
data16
lds
cmp
mov
insl
bswap
out
ja
movsl
mov
hlt
mov
sub
movsl
and
outsl
mov
stos
mov
push
or
and
jle
dec
into
push
ljmp
pop
mov
pushf
sub
inc
adc
ljmp
mov
sub
sete
mov
mov
inc
mov
mov
mov
or
xchg
rorb
ss
push
sbb
das
pop
in
dec
cld
insl
mov
mov
sbb
lea
sbb
xorl
mov
sbb
nop
sahf
aas
test
adc
add
test
push
pop
push
and
fisubs
dec
pop
jmp
push
sbb
in
cld
xorl
push
call
idiv
push
cmpsl
ds
inc
pop
shl
aad
mov
jae
outsl
adc
lea
mov
aas
ds
rolb
or
scas
mov
sahf
test
xchg
ret
mov
mov
sbbb
push
sahf
out
shlb
xchg
ss
push
xor
inc
mov
dec
push
pop
xchg
mov
loop
in
arpl
out
xchg
rcr
mov
lds
sbb
mov
pop
mov
mov
add
fcompl
xchg
dec
xor
mov
inc
fcoms
xchg
ljmp
dec
stos
push
mov
xor
cmp
call
scas
inc
popa
inc
or
or
jecxz
push
and
test
das
add
in
sub
dec
test
and
mov
pushf
js
aam
aaa
call
add
test
xor
dec
test
pop
xorb
inc
and
mov
sub
xorl
jno
incb
setns
scas
flds
movsb
repz
add
leave
jle
fstp
lahf
test
mov
mov
aad
loopne
inc
and
fidivl
ret
dec
faddl
dec
in
addl
push
xlat
vpsraw
sbb
add
int
xchg
and
jbe
xor
lret
leave
add
out
or
lea
rclb
sub
cmpsl
mov
in
dec
pop
lods
dec
xor
sbb
mov
mov
sub
out
fwait
ret
pand
orl
add
imul
ljmp
dec
int
nop
inc
data16
and
repz
fbld
or
mov
xchg
mov
ret
dec
dec
pop
in
orb
pop
data16
mov
out
jl
js
pushf
cmp
pop
fnstenv
jo
cs
xchg
aaa
cmp
and
xor
or
rolb
mov
pushf
movsb
push
adc
into
ljmp
stos
mov
adc
repnz
or
push
scas
lock
lock
clc
jo
sbb
mov
and
in
lcall
add
lret
je
or
cmpsb
and
mov
jmp
adc
pop
das
imul
sbb
inc
lret
push
add
loop
mov
add
mov
in
xor
push
fiaddl
add
sub
mov
adc
cmp
dec
pop
sbb
push
mov
sub
fsts
out
jp
sub
sbb
leave
push
push
addb
add
inc
cmp
in
add
pusha
les
cltd
aam
pop
in
mov
in
clc
inc
mov
fnstsw
enter
jae
adc
cmp
pop
sub
mov
dec
jo
mov
cltd
xchg
sub
ljmp
mov
add
and
xchg
xor
xchg
add
iret
dec
pop
add
lret
int3
xchg
xchg
jecxz
cmp
mov
stos
sub
push
push
push
incl
imul
push
aad
fiaddl
shl
stos
fisubrl
popf
and
fs
lahf
xor
jbe
xor
cmp
jl
out
cmp
outsb
jl
add
lods
add
mov
cmp
mov
dec
leave
add
cmpsb
lods
scas
cmpl
add
sahf
ret
pushf
and
push
pop
add
mov
cmpsb
sti
in
sbb
test
lahf
cltd
cmp
int
mov
mov
dec
pop
bound
not
stos
adc
jbe
cld
scas
inc
cmc
inc
mov
push
sbb
pop
gs
arpl
mov
jb
add
js
aam
adc
and
xor
and
push
mov
scas
sbb
sbb
enter
mov
jp
aas
test
mov
popa
pop
hlt
lret
cmp
out
mov
sbb
out
mov
cmpsb
cmpsl
mov
pop
dec
pop
mov
pop
mov
test
fldenv
inc
add
out
mov
cmp
cmc
push
imul
iret
test
sub
lds
das
push
push
mov
push
lret
push
add
dec
push
lods
lret
aas
ret
lods
rorb
and
and
out
cs
mov
jg
lahf
add
jno
dec
loop
or
mov
aam
dec
aam
adc
sub
pop
loop
mov
pop
out
inc
nop
inc
in
lock
jnp
adc
xor
jnp
dec
gs
icebp
add
lret
into
mov
imul
cmp
cli
push
jp
inc
movsb
fs
shlb
loope
xor
xchg
js
push
test
faddl
sub
aas
cmpsb
bound
into
ljmp
xchg
cmp
mov
data16
hlt
stos
aad
out
into
pop
rcrb
jno
adc
jo
repnz
das
xchg
fnstsw
add
add
push
scas
mov
add
out
insl
xchg
test
outsb
cmp
ret
popa
pop
pop
aad
iret
outsb
mov
xchg
cwtl
js
mov
test
jle
xor
ret
lock
sbb
aas
out
push
outsb
lods
push
jno
add
and
callw
dec
dec
lods
or
inc
fwait
cmpb
inc
jp
adc
jecxz
fadd
pop
or
in
xchg
filds
mov
imul
mov
add
outsl
pop
arpl
cmp
xchg
movsb
ja
out
and
fistps
mov
inc
mov
fs
icebp
jb
and
hlt
mov
or
adc
xor
cmpsb
mov
cmp
divb
cli
jmp
push
fsubrl
imulb
mov
sbb
jnp
lret
je
fldt
subb
aas
sbbb
das
icebp
push
jnp
adc
in
adc
xchg
jns
or
jg
mov
dec
push
sbb
dec
out
outsl
and
mov
jecxz
mov
dec
hlt
xor
imul
jns
sbb
adc
adcl
add
xchg
mov
push
add
fildll
divb
lock
add
cwtl
dec
cli
xchg
or
lock
clc
and
sarb
or
fisubs
and
ror
insb
sahf
push
mov
jge
mov
xchg
xchg
ja
adc
push
fstps
fdiv
lods
inc
and
mov
in
sbb
loop
test
dec
or
add
mov
in
aad
shl
mov
ja
or
xchg
imul
jns
test
dec
sbb
test
sbb
xchg
cs
add
lret
out
loope
jae
jae
cmc
push
mov
jne
jae
out
scas
in
and
nop
movsb
adc
jecxz
adc
in
pop
fcmovb
out
push
ret
stos
cmpsb
pop
add
jmp
push
sub
sti
je
dec
aaa
subb
arpl
cmp
dec
in
xchg
or
mov
push
inc
loope
insb
stc
pop
lds
pop
xchg
jle
outsl
mov
jae
or
ja
sub
test
inc
test
aam
lea
mov
add
fbld
insb
add
xchg
int
cwtl
inc
addl
fbstp
lds
dec
aaa
jge
shl
and
jl
pushf
fsubl
inc
cs
aas
xchg
std
cmp
mov
pop
sbb
clc
mov
inc
bound
pop
or
inc
sbb
cld
cmpsl
push
xchg
or
pop
pop
adc
add
in
cmp
mov
lea
gs
loopne
in
or
insl
add
cmp
es
fwait
pop
packssdw
push
aaa
fdivl
inc
push
addr16
orb
push
sub
sbb
push
or
jl
pop
or
inc
das
ret
pop
orb
mov
popa
inc
int
mov
loopne
mov
int
lret
sub
hlt
add
push
dec
jecxz
stc
lret
imul
movsl
imul
pop
leave
jle
ss
sub
sub
or
pop
mov
shll
sub
mov
dec
xor
mov
jno
adc
scas
aad
loopne
xorb
add
sarb
and
repz
sbb
add
cli
pop
add
cmc
inc
iret
adc
fs
in
mov
xor
xchg
sbb
gs
repz
sbb
in
or
fwait
popf
dec
ljmp
or
push
sbb
pop
adc
das
loope
or
aas
sbb
and
add
and
xorb
jno
inc
in
popa
mov
sbb
add
dec
das
xlat
jnp
mov
inc
stos
sbb
out
xchg
out
arpl
xchg
into
fcoms
stos
ror
lea
sub
into
mov
lock
sub
mov
sbb
cmp
adc
pop
ljmp
clc
daa
dec
pop
or
push
pop
js
addl
jbe
jmp
call
addr16
inc
inc
shlb
push
out
loope
jmp
sbb
cwtl
jo
mov
xchg
sarb
inc
mov
jnp
out
add
scas
mov
push
mov
mov
xchg
ljmp
add
addr16
je
rcl
in
test
pushf
stos
and
xchg
push
xchg
fistl
addr16
cmpsl
fcmovnu
sti
mov
in
cmc
pop
sub
lcall
xor
sbb
fmuls
push
mov
push
sti
cmp
pop
insl
aam
mov
fwait
imul
sbbb
xchg
cmp
bswap
jecxz
sub
test
insb
sbb
addr16
add
adc
imul
cmpsw
shll
daa
enter
sbb
hlt
xchg
call
xlat
mov
cmc
aas
loop
movsl
jg
cmp
js
addr16
stc
or
std
clc
out
or
xchg
sbbl
insb
inc
stos
je
mov
dec
and
mov
adc
inc
lcall
add
lock
cmp
or
and
std
mov
jae
sahf
jge
sub
jecxz
sbb
stos
arpl
xchg
xchg
add
jnp
or
arpl
add
push
mov
dec
xor
pushf
cmp
rcll
xor
jg
rolb
xor
xor
jb
dec
dec
movsb
sar
insl
sbb
add
sub
movsb
and
xorl
jg
inc
dec
ud0
cmpsl
pop
addr16
adc
stos
adc
mov
leave
imul
xchg
mov
add
cmp
xchg
pop
leave
jge
repnz
int3
lods
sti
test
into
shlb
cmp
clc
pop
into
adc
rep
inc
sbb
das
fisttps
loop
cld
push
mov
insl
sub
fadd
out
xorl
movl
push
sbb
adc
lock
add
inc
inc
add
jp
cmpsl
int3
cmc
xchg
ds
sar
in
mov
add
int3
push
loopne
cli
xor
push
mov
mov
dec
xlat
imul
add
shrl
dec
jo
xchg
cld
aaa
add
add
mov
mov
mov
sar
mov
pop
test
mov
in
pop
ss
cltd
push
in
jmp
mov
inc
orb
jns
inc
addr16
cmc
nop
jmp
insl
insb
aas
scas
mov
adc
sbb
in
inc
inc
and
mov
inc
adc
and
push
pop
mov
push
imul
or
pop
subl
pop
insl
lahf
push
pop
test
inc
lods
sub
lea
jmp
movsb
inc
push
in
int
ss
add
mov
push
cltd
imulb
or
push
sahf
add
add
bound
fcmovb
dec
test
leave
cmp
xor
adc
negb
outsl
adc
xchg
shll
shlb
and
mov
cli
dec
push
lds
addr16
int3
jle
sub
adc
pop
jp
sub
imul
sbb
popf
adc
add
push
shl
call
js
xlat
lock
repnz
fisttpl
xchg
je
mov
cltd
jbe
cmp
push
adc
sbb
dec
ret
loope
jmp
dec
in
sbb
pop
test
outsl
dec
push
mov
xchg
scas
dec
jle
pop
or
fdiv
mov
jle
xlat
call
lret
jg
inc
push
mov
fbstp
sbb
jl
incb
mov
mov
push
arpl
cmpb
js
cmp
mov
cmp
shrl
fwait
movsb
dec
cs
hlt
leave
out
psubw
push
addr16
mov
sub
shrb
cmpsl
pop
lret
jge
inc
cmp
xlat
lea
mov
cwtl
jbe
push
test
les
xchg
stc
sbb
push
xlat
adc
adc
jbe,pn
mov
inc
aad
test
jne
pop
and
dec
push
int3
nop
add
outsl
sub
call
cmp
dec
out
or
dec
or
jbe
jp
push
insb
insb
hlt
scas
adc
sub
arpl
enter
mov
lds
dec
fs
cltd
add
push
push
mov
sbb
or
mov
jl
addr16
pop
sub
mov
push
pop
js
mov
mov
mov
lods
add
aas
aas
rorb
ja
pop
adc
leave
cmpsl
daa
sti
sub
das
sub
aad
push
dec
inc
lds
inc
push
cltd
add
ds
daa
cld
push
push
pop
push
fdivrl
in
sub
cmpsb
pop
add
cmp
arpl
lock
push
push
xlat
fs
cmpsb
push
pop
mov
or
out
dec
mov
mov
stc
pop
add
iret
mov
mov
cmp
rcr
xor
scas
cld
push
stos
xor
outsl
push
andb
icebp
or
bound
bound
nop
jae
and
fildll
fstpl
incb
and
push
xor
je
dec
or
popf
sbb
fstpt
popa
fcoml
stos
xor
mov
ds
lcall
les
fnstsw
add
pop
fldt
sbb
icebp
mov
std
jl
mov
push
repnz
imulb
test
cmpl
fwait
cmpsb
popa
inc
scas
mov
push
xor
mov
sti
int3
mov
int3
jecxz
adc
adc
jmp
mov
scas
les
jge
mov
fsubrl
mov
and
imul
jne
in
ffree
int3
ret
pop
insl
mov
bound
xor
aam
sti
enter
inc
sbb
pusha
jge
jae
xor
xchg
sbb
jne
push
xchg
arpl
mov
scas
dec
jge,pn
xchg
stos
sti
out
inc
dec
inc
es
cmpsl
dec
hlt
repnz
and
into
and
enter
dec
sbb
ljmp
jmp
repnz
int
sub
cmp
int3
mov
dec
or
mov
fs
mov
and
out
fcmovnbe
add
lret
sub
rolb
mov
in
xchg
mov
pop
pusha
sbb
aam
cwtl
push
ds
leave
push
sbb
add
test
mov
sahf
imul
xchg
inc
and
aad
jnp
adc
out
scas
test
adc
mov
test
mov
test
inc
lods
mov
into
sub
xchg
dec
lea
xor
mov
sbbb
lret
lods
inc
mov
mov
jle
pop
repz
fwait
xchg
sub
dec
cmp
pop
lahf
jae
jl
movsl
mov
lock
sbb
popa
dec
adc
adc
testb
cld
mov
push
lds
repnz
cwtl
add
push
and
scas
jae
sti
cs
jle
lcall
arpl
dec
push
or
gs
out
push
add
lea
xchg
jle
int
and
fimull
insl
sbbl
xor
mov
jne
sti
cli
fildll
mov
dec
lret
pop
icebp
enter
in
jg
mov
mov
aas
sbb
cmpsl
jge
mov
mov
cmp
jbe
popf
cwtl
outsl
lar
divl
push
xchg
ja
mov
mov
stc
imul
sar
int3
mov
xor
xchg
cli
fsub
add
add
dec
xorb
mov
aam
adc
cltd
lahf
imul
enter
mov
dec
inc
dec
cmp
int3
stos
add
xor
rcrb
jne
push
ss
roll
loopne
xchg
pop
jnp
jg
fildll
push
mov
sub
cmp
sarl
jb
sbbl
outsl
and
mov
lock
aaa
lret
ljmp
mov
out
mov
or
decl
inc
and
xor
jmp
lods
or
call
cmpsl
dec
pop
ss
in
popa
push
mov
mov
sub
cmp
jge
mov
shr
sub
sub
stc
mov
sbb
sub
das
lcall
or
ljmp
jmp
loope
inc
jns
push
stc
mov
mov
ja
push
out
mov
sbb
adc
dec
scas
daa
enter
or
jecxz
cmp
mov
loopne
mov
nop
adc
cli
sahf
in
xchg
ret
scas
sbb
adcl
dec
jbe
inc
and
dec
mov
loopne
and
pop
push
fildl
dec
cmpsb
lds
inc
push
insl
enter
inc
xchg
jle
mov
lret
and
mov
mov
cmc
push
mov
in
xchg
jecxz
mov
push
inc
push
add
loop
xchg
les
push
xchg
mov
nop
or
repz
mov
lahf
mov
xchg
cld
cmp
adc
ss
std
loop
pop
por
fcoms
sub
and
mov
rorl
cld
frstor
pop
sub
es
and
add
test
mov
ja
and
xlat
inc
iret
je
mov
shr
inc
std
xchg
rcll
sub
mov
mov
and
lods
mov
fs
or
insl
lret
popa
scas
mov
rcrl
pop
mov
jp
push
scas
mov
xor
mov
lock
js
add
in
push
xchg
andb
or
pop
test
cmpsl
int3
cwtl
mov
xor
cmpsl
jae
mov
mov
mov
popf
insb
scas
cmpsl
inc
cmp
pop
push
into
lds
push
popf
inc
sub
push
cmpsb
pop
add
push
sti
stos
gs
sahf
addl
xchg
sbb
sbb
outsb
mov
mov
mov
mov
test
movsl
mov
loope
fnstsw
data16
pop
dec
xor
repnz
je
mov
xchg
ds
sbb
popf
pop
dec
jecxz
sub
fstpl
fcompl
mov
and
insl
cmpl
jmp
pop
push
aaa
mov
pop
orl
mov
pop
ds
fstps
mov
inc
cmc
sbb
or
mov
popa
xchg
xor
fwait
jg
imul
adc
jge
fsubrp
pop
bound
jno
mov
cli
loope
xlat
aas
adc
cmp
rcll
or
cmc
mov
in
jg
in
stos
push
shrl
dec
jle
pop
movsl
insl
test
add
outsl
lcall
or
cmp
xor
mov
int
cwtl
dec
sub
ret
jo
sbb
push
test
out
and
gs
ljmp
fwait
adc
pop
testl
or
lods
movsb
sub
jp
icebp
lea
mov
dec
or
ja
cmpsb
inc
call
mov
sub
sbb
rorl
addr16
adc
cmc
jl
push
pushl
inc
test
mov
mov
je
jne
in
or
stos
and
jae
int3
clc
sub
sub
adc
dec
in
test
outsb
sub
ja
pop
icebp
push
aas
mov
repnz
inc
sub
sbb
pushf
das
scas
lea
sub
es
pop
mov
js
rcrb
insl
jb
adc
dec
push
push
dec
cmpl
adc
cld
add
call
sub
lods
dec
mov
das
xor
hlt
adc
fldcw
pop
sbb
pop
adc
lret
loope
mov
cmpb
push
sbb
mov
mov
push
pop
and
jg
pop
nop
and
inc
pop
roll
adc
subl
movsl
in
outsb
or
ret
sbb
sub
fistpll
dec
insl
push
cmpsb
loop
jle
in
or
or
js
dec
mov
in
imul
mov
push
in
test
sbb
or
mov
xor
jo
jle
xorb
out
arpl
and
out
adc
dec
push
xlat
lret
and
dec
rclb
into
pop
mov
fldt
add
fidivl
cli
sbb
ret
lcall
rorb
pop
pop
sahf
add
popa
dec
loop
aas
fwait
andb
push
in
stos
cld
mov
cmpb
lret
mov
push
fs
jg
cmp
das
jnp
and
rcr
mov
stc
enter
dec
adc
xor
and
pop
add
mov
mov
pop
and
pop
into
dec
out
mov
outsb
es
cwtl
aad
xchg
arpl
aaa
mov
cmpsb
mov
ss
fiadds
dec
arpl
and
add
inc
and
sbb
cmc
imul
lds
insl
aas
cld
ret
mov
notb
les
cmpsb
stos
cmp
test
cmp
out
push
inc
imul
aam
into
aad
cmc
ja
pop
int
lock
add
ja
imul
jbe
dec
xchg
negl
dec
movsl
xor
cmp
das
adc
push
mov
ret
subl
pop
push
mov
xchg
sub
mov
add
sbb
mov
ja
inc
js
push
xorb
addr16
push
sbb
test
lcall
mov
push
stc
jbe
cmpsl
imulb
push
and
movsl
xor
adcl
inc
mov
aad
mov
add
rcr
cmp
xchg
and
sti
xchg
cmove
lahf
add
push
cltd
xchg
cmp
pop
movsb
loope
adc
cld
ficoml
in
lea
rcrb
inc
jbe
jb
cld
into
in
lahf
xor
and
and
cmp
idivb
pop
fstps
addr16
add
mov
pop
movsl
sbb
dec
xor
push
xor
fmuls
scas
aaa
cli
pop
mov
pop
adc
leave
cwtl
and
shlb
leave
and
fs
pop
hlt
nop
stc
adc
xchg
and
enter
arpl
aam
inc
mov
cmp
lcall
imul
dec
pop
or
test
sarl
mov
int
cmpsb
mov
in
adc
inc
jmp
testl
aam
inc
inc
mov
or
cmp
ja
test
mov
sub
cs
cmp
stc
sub
push
mov
or
lcall
sub
push
push
inc
jb
adc
in
xor
xchg
mov
addr16
dec
je
push
imul
xor
cs
into
and
int
jb
es
add
aaa
mov
pop
adc
mov
xor
rcll
mov
mov
movsl
sub
movsl
inc
ljmp
ljmp
inc
fstpl
int3
out
fcoml
jb
aaa
push
push
ss
into
or
ret
mov
call
hlt
imul
xchg
mov
dec
jge
pop
in
aam
cmp
cmp
fimull
fimull
and
mull
fsub
or
lea
or
mov
lea
dec
xor
inc
insb
out
ffree
fstpl
add
mov
les
jle
outsb
xor
repz
cmpsb
outsb
mov
popa
addl
fidivs
icebp
mov
daa
mov
js
push
test
popa
mov
sbb
push
mov
aaa
or
in
nopl
pop
ss
in
shll
in
stos
sbb
mov
out
ja
cmp
push
popa
jl
xchg
lret
outsl
add
sub
in
cmp
xor
dec
jecxz
pop
and
adc
rolb
sar
scas
stos
adc
jns
push
cmp
sbb
les
cmp
or
subl
or
pop
addr16
dec
fs
loop
jl
mov
pop
sbb
sahf
popa
test
stos
loope
imul
or
jmp
sahf
or
inc
popf
movb
std
push
and
dec
jge
stos
cmp
mov
imul
dec
inc
inc
jmp
adc
test
inc
sub
and
pop
mov
pop
out
repz
jp
cmp
pusha
not
jl
mov
lahf
cmp
iret
pop
dec
out
cli
sub
in
in
mov
shr
add
adc
dec
test
mov
ds
lcall
movsl
pop
cmc
pop
call
add
xchg
stc
push
pop
push
fistpll
xchg
call
cmp
jb
or
mov
es
mov
xchg
sti
xorl
fistps
cmc
mov
les
adc
lods
cli
add
rorl
inc
imul
mov
into
adc
dec
inc
dec
rorl
mov
int
in
popa
and
mov
cli
fdivl
sub
jb
cmc
out
jecxz
ljmp
retw
fwait
mov
clc
sub
push
test
adc
popf
out
mov
sub
ja
popa
sub
loopne
add
inc
xchg
dec
cmp
cmc
fiaddl
and
fcomps
out
cmp
cmc
push
int3
out
jne
bsf
loopne
fidivrs
shll
mov
rolb
inc
test
test
in
and
cs
test
js
rcrl
mov
mov
fists
jae
inc
cmc
adc
fwait
push
dec
cmp
push
aaa
faddl
cmp
and
mov
inc
in
mov
mov
neg
or
cmp
pop
sti
dec
hlt
hlt
xor
adc
ljmp
push
jmp
xlat
sub
ljmp
movsb
mov
movsl
mov
aam
dec
je
stc
jecxz
push
insl
les
js
daa
xlat
pop
mov
xchg
cld
inc
xor
cmpsl
jne
testl
aas
mov
rol
inc
in
fxam
xor
push
and
pop
cmp
lods
test
in
mov
pusha
xor
jo
sbb
cmpsb
or
cmp
ja
mov
clc
clc
mov
dec
data16
lock
ss
add
call
or
mov
daa
aas
sarl
testb
ja
out
std
aas
xchg
das
scas
pop
aas
sub
sbb
or
cmp
mov
and
testb
addr16
movsl
in
lock
push
xor
sbb
xlat
or
sub
leave
xor
jae
mov
pop
xchg
lahf
and
ret
mov
and
dec
lods
cld
ss
push
xlat
xchg
sbb
add
sub
mov
nop
stos
jns
call
dec
je
in
push
or
adc
jae
rol
or
pushf
push
xor
lock
pop
cmp
dec
jae
mov
mov
or
rcll
push
in
or
dec
xchg
mov
inc
push
pop
daa
mov
in
aaa
xorl
xchg
sub
xlat
roll
pusha
xor
out
jg
dec
es
lret
mov
shll
je
cwtl
xchg
stc
xchg
sbb
imul
sub
movsb
cmpsl
mov
mov
cmpsb
xchg
scas
sahf
in
mov
mov
xor
leave
sti
outsl
sub
popf
stos
insb
mov
xchg
jp
cltd
mov
cmp
into
stc
xchg
test
push
add
mov
pusha
clc
fnsave
push
mov
sahf
mov
lock
std
and
notl
sub
add
movsb
lea
sbb
daa
adc
imul
fstps
lds
bound
loope
push
and
dec
test
mov
xchg
dec
ror
add
mov
fdivr
rcrb
pop
lret
rclb
inc
or
sti
fadd
int
shl
jae
call
pusha
sbbl
lods
xor
shr
sahf
loop
mov
popf
sbb
daa
dec
shrb
sub
fadd
ret
fwait
cmp
mov
jns
xchg
adc
lcall
jecxz
sbb
scas
cmp
mov
dec
sub
jmp
andb
fldt
fiaddl
scas
cmp
push
loopne
popf
mov
fildl
xlat
or
negl
sarl
in
pusha
or
sub
mov
jno
test
lods
or
shl
fmuls
mov
mov
inc
or
mov
mov
mov
adc
ja
and
mov
cmp
or
mov
inc
and
jg
call
mov
add
push
xor
xchg
rolb
jmp
loop
imul
in
imul
and
adc
fcmovu
daa
imul
inc
int
add
inc
popf
xchg
lret
mov
pop
out
adc
jge
shrl
outsb
or
aad
gs
xor
dec
pusha
addb
cmp
sti
sbb
adc
arpl
and
dec
insb
and
ret
and
cltd
mov
xchg
aaa
and
xchg
sub
out
insl
dec
adc
adc
pop
mov
icebp
jge
adc
push
sarb
aad
in
sbb
push
and
shl
outsb
popa
add
scas
int3
adc
mov
test
icebp
fiaddl
scas
push
push
movsb
mov
sub
jb
push
sub
inc
sub
addl
inc
outsb
xchg
xor
es
add
divl
pop
push
test
cmp
sub
jbe
in
imul
jmp
push
lea
int3
cmp
cwtl
xchg
popf
int3
push
mov
shr
outsl
lahf
mov
pusha
cmpsl
push
mov
dec
mov
or
push
mov
inc
jnp
lret
leave
sub
cli
jmp
sbb
jl
add
dec
jg
fidivl
push
xchg
adc
and
loopne
jle
push
mov
jp
out
cmp
rcrb
cmpsl
fscale
cli
jp
xchg
movsb
cwtl
xor
loope
push
hlt
pop
pusha
and
inc
mov
mov
fimull
pop
add
add
xchg
adc
popa
xorb
xorb
ror
add
add
dec
shrl
fldt
add
xchg
imul
or
or
cmc
mov
jnp
xor
test
rolb
das
movsb
bnd
test
insb
mov
cmpsb
cmp
mov
xor
or
mov
push
stos
outsb
roll
jmp
or
mov
fildl
jp
mov
sarl
and
push
push
outsb
or
mov
jae
pop
dec
and
call
outsb
mov
mov
scas
xchg
xchg
sub
or
arpl
cmp
aas
popa
xchg
daa
sti
call
stos
sub
mov
fldcw
stos
xchg
xor
mov
in
sbb
fnstcw
inc
mov
outsb
mov
xor
aaa
mov
inc
and
inc
adc
xchg
enter
test
mov
lods
jp
fisubl
fnstsw
cmp
or
cltd
stos
in
mov
or
mov
shll
icebp
add
cld
mov
mov
jbe
lahf
nop
and
and
push
sub
std
aas
fcmovu
dec
mov
cmpsb
push
bound
sub
mov
aam
sbb
jne
mov
cli
xchg
xor
xchg
adc
and
mov
mov
test
inc
mov
mov
sub
push
bswap
cli
lds
pusha
loopne
pop
sbb
shrb
idivb
pop
pop
mov
popf
jno
cmpsb
sub
scas
xchg
inc
test
leave
or
and
mov
add
inc
sarl
jbe
cmp
jb
lock
jne
rolb
movq
inc
dec
and
jbe
ds
or
idivl
fstpl
enter
inc
pop
es
loop
in
inc
daa
mov
xor
mov
aad
cmp
sbb
inc
or
mov
outsb
data16
pop
inc
inc
pop
jne
xchg
push
iret
lret
cmc
jg
lea
xlat
test
rorb
jmp
add
scas
or
int
ret
je
mov
xchg
out
lock
mov
or
add
sub
add
aas
push
push
faddl
pop
cmp
shr
mov
test
mov
xchg
sub
out
popf
cmpsl
enter
push
dec
mov
out
jmp
xlat
pop
add
aad
mov
pop
jle
xchg
cltd
cmpsl
sahf
xchg
jge
sahf
std
sbb
inc
xor
jb
inc
and
mov
xor
add
xchg
add
push
push
dec
lock
or
dec
in
xchg
cmpsl
jno
int
das
and
outsl
and
pop
enter
add
cmc
sub
orb
stos
fildl
xor
cmp
push
xor
lret
pop
inc
mov
in
sub
out
or
mov
xor
lret
in
mov
mov
jl
enter
xor
mov
ss
inc
insl
mov
je
sbb
inc
fwait
int
test
lds
fcomps
mov
sahf
jecxz
push
bswap
and
outsb
inc
repnz
mov
testb
insl
mov
jno
push
out
iret
sarl
mov
adc
test
cs
mov
xchg
ret
int3
fidivrs
push
stos
mov
sbb
add
pusha
push
dec
jns
sub
adc
nop
call
dec
fs
int3
pop
cmc
pop
push
sub
out
sub
jns
int3
pushf
cwtl
xor
mov
cld
xchg
loopne
pop
sbb
and
jae
and
pop
mov
pop
inc
or
sub
movb
xchg
cmpl
les
xor
ljmp
frstor
movsl
xchg
adc
ds
subb
cmp
sub
test
mov
adc
adc
jl
rcll
sub
mov
sbb
daa
daa
fldl
jo
push
mov
mov
lods
pop
aas
and
aad
sub
or
mov
sub
inc
dec
jno
sbb
adc
mov
and
lods
jnp
adc
pop
iret
aas
ljmp
lea
inc
popa
lret
js
xor
movsb
mov
sub
xchg
repnz
subl
movsb
jmp
shl
or
aad
aad
ljmp
lock
outsb
cli
inc
adc
stc
cld
push
movsl
shlb
cmp
mov
xchg
jb
aad
push
dec
mov
jmp
mov
pop
or
roll
xchg
addr16
in
jl
mov
js
bnd
or
inc
mov
not
aas
inc
xor
mov
xchg
iret
xchg
sbb
pop
push
in
push
aam
xor
adc
add
jns
xor
sti
in
lcall
dec
sbb
inc
test
std
mov
pop
add
mov
mov
icebp
iret
xchg
xlat
xchg
and
push
hlt
jl
dec
lods
jl
pop
stc
cld
mov
adc
movl
push
add
leave
dec
divl
faddl
add
aas
sub
lock
arpl
stos
pusha
fisubs
test
ds
mov
loopne
mov
shll
ds
xchg
cli
mov
lret
test
xor
xchg
stos
insb
lahf
jbe
sbb
ljmp
sbb
jl
adc
cld
fsubr
xor
pusha
gs
mov
ja
std
aaa
add
xchg
lret
movsb
mov
adc
lods
aad
push
pop
push
xchg
jno
sbb
stc
fs
in
xor
outsb
dec
js
dec
xorl
xorl
or
fisubrl
es
sub
xchg
in
cli
or
mov
add
jecxz
xor
xchg
push
pop
mov
jno
xchg
and
adc
stc
jle
negb
rclb
outsb
jp
ss
cmpsb
inc
xlat
imul
ja
repz
and
cmp
mov
fwait
das
into
out
sbb
mov
xchg
bound
fbld
int3
cmp
jae
cs
or
inc
popf
push
sahf
imul
subl
jo
aam
adc
and
pop
aad
xor
testb
stos
mov
and
mov
pop
cmp
jnp
pop
push
or
test
push
and
sti
mov
mov
sub
shrl
ja
leave
arpl
jbe
in
sbb
loopne
bound
in
push
jmp
pop
cmp
ret
jo
cli
sub
push
push
cmp
ret
in
adc
std
fstpl
cmpsl
out
lret
cmp
cmp
in
popf
enter
push
pusha
fs
mov
push
les
data16
mov
ljmp
mov
adc
pusha
pop
je
shrb
dec
pop
cs
insl
dec
and
push
or
icebp
ret
cmpsb
and
arpl
adc
fnsave
adc
outsl
sbb
dec
aad
out
and
adc
jmp
pusha
outsb
mov
jnp
sbb
sub
sbb
pop
push
or
shl
ret
sti
mov
test
sti
dec
imul
mov
inc
xorb
les
inc
scas
ficomps
cld
addr16
push
fs
data16
sbb
movb
dec
enter
shlb
bound
out
int3
dec
xlat
sbb
or
out
std
cmpsb
or
xchg
inc
out
ret
int3
push
es
pop
jmp
adc
fs
jnp
push
je,pn
loopne
sub
pop
subb
arpl
cmp
lcall
inc
mov
pop
or
mov
imul
adcl
jl
nop
mov
es
frstor
int3
or
mov
add
ja
loop
and
push
xchg
cmp
sbb
mov
or
test
push
das
shll
or
push
sbb
pop
inc
fdivrp
or
inc
cmpb
loop,pn
xchg
sbb
xchg
xchg
call
adc
push
sarb
mov
mov
sub
mov
call
int
add
cltd
or
jge
lods
jg
imul
pop
xchg
jge
rolb
xor
sub
mov
push
cmp
jae
dec
jnp
mov
mov
pop
sbb
lahf
fsubrl
jo
mov
sbb
or
push
jge
cmp
add
das
push
mov
mov
push
repnz
jo
decb
stc
aas
cmpsl
fidivs
inc
mov
inc
fwait
mov
sahf
and
jl
adc
add
filds
int
pop
sub
cmp
shll
jbe
int
repnz
ffree
repz
into
arpl
andb
test
shlb
pushf
inc
repnz
fidivrl
clc
scas
bound
push
sub
xor
cld
rolb
outsl
gs
inc
xor
mov
lahf
nop
cmpsb
ds
cltd
or
fdivs
ret
es
sbb
cmpsl
andl
pop
imul
push
lahf
les
ss
shlb
xor
add
sahf
iret
add
or
mov
add
mov
lods
iret
cmp
xor
add
mov
or
adc
xchg
aad
stos
lds
movsl
push
popa
insb
or
dec
shrb
xor
clc
sbb
loope
outsb
push
mov
or
aaa
xchg
mov
mov
push
sbb
clc
out
dec
mov
repnz
icebp
ljmp
pushf
cmp
insb
and
adc
dec
jo
inc
arpl
sub
sub
mov
cwtl
mulb
mov
lret
jecxz
push
inc
stc
xchg
xchg
xchg
adc
inc
push
mov
cmpsl
xor
call
inc
mov
push
jecxz
cmpsb
dec
rorl
sarl
xchg
inc
push
lods
cmc
addb
imul
jp
adc
mov
inc
mov
fsubrp
insl
cmc
xchg
movsb
cmp
movsl
cmp
mov
test
inc
rcll
mov
pushf
xor
pushf
mull
lds
cli
daa
push
and
fsubrl
mov
out
and
out
xor
mov
bound
imul
mov
in
ret
jecxz
repz
add
push
je
out
xor
cmp
push
sbb
mov
movb
in
mov
mov
mov
sbb
stos
mov
pop
or
pop
fstpl
jnp
mov
movsb
add
xchg
lahf
out
jo
add
mov
fiaddl
cmpsl
jns
pop
sub
add
pop
add
jno
test
mov
mov
or
gs
jnp
lahf
inc
cmc
pop
push
pop
bound
add
mov
inc
icebp
in
xchg
add
sarb
sbb
push
mov
aam
jno
inc
lds
std
leave
xorl
pop
inc
repnz
dec
fscale
mov
aam
push
lret
inc
lods
cmp
add
movsl
clc
aam
testb
loop
in
imul
mov
sub
pusha
ljmp
inc
mov
cmpsb
jns
add
push
jne
lahf
cmp
loope
or
sub
sub
cmp
cld
mov
jp
dec
das
outsl
dec
lds
filds
fistpll
ja
out
inc
fwait
adc
jg
xchg
mov
mov
lret
es
rorb
frstor
xor
lret
xor
ret
add
or
into
cmp
adc
enter
out
sbb
mov
xchg
pop
sahf
xlat
xchg
mov
xor
in
mov
int3
int3
adc
adc
adc
ds
adc
shr
stos
ja
jmp
ss
leave
jg
insb
push
jmp
fsubrl
jae
movsb
cmpsl
or
xlat
std
and
popf
out
call
cli
pop
mov
mulb
stc
cmpsb
ljmp
movsb
popf
mov
jns
mov
or
lcall
sub
and
sbb
mov
jmp
mov
mov
inc
inc
pop
jns
mov
add
xor
mov
and
popa
xor
jge
mov
ret
push
jmp
mov
mov
hlt
mov
jb
pop
jbe
adc
and
es
sbb
into
sub
sbb
add
loop
pop
dec
pop
js
mov
ds
jo
clc
jbe
test
movsb
or
cmp
push
shr
lahf
jne
popa
lods
pop
aaa
js
fs
mov
jo
iret
out
cld
outsl
jo
push
pop
xchg
cmp
imul
mov
cld
les
and
fidivl
in
ja
push
addr16
leave
int3
jae
stc
cmp
shlb
inc
adc
xor
rolb
aaa
daa
test
mov
outsl
sub
addr16
pop
insl
or
das
sahf
pop
int3
mov
jmp
and
xor
movsl
cwtl
sub
sbb
inc
sub
and
xor
push
push
gs
repnz
pop
ret
adc
or
add
movsb
popf
movsl
cmp
daa
mov
inc
sub
dec
xor
dec
jns
inc
ror
pop
xchg
add
jmp
in
mov
lea
xchg
push
stos
mov
push
cli
pop
fldenv
mov
mov
jo
js
rorb
dec
dec
sbbb
push
add
mov
push
inc
sbb
popa
cli
mov
adcb
mov
jle
in
jge
dec
pop
xchg
lods
cli
test
arpl
mov
mov
push
sti
lahf
push
pop
or
movsl
out
mov
add
cmp
std
or
jb
push
mov
dec
cmpsb
add
inc
jo
pop
mov
mov
cmp
cmpsb
adc
push
gs
jge
mov
enter
or
cmp
mov
loopne
pop
outsb
sub
pop
push
push
adcl
scas
lret
iret
and
mov
andl
rclb
jno
sub
loop
rclb
inc
mov
insb
les
rcrl
dec
test
xchg
ljmp
dec
sub
lods
ret
and
ret
jl
dec
jecxz
pop
sub
scas
movsl
clc
loope
mov
dec
popa
ss
push
adc
add
cld
shrd
xchg
cwtl
and
dec
inc
jo
dec
xchg
xchg
push
cmp
and
call
into
leave
cltd
scas
inc
iret
test
leave
fcoms
adc
ds
mov
pop
xchg
jb
popa
ja
ljmp
cli
insl
sbb
sbb
leave
push
add
add
mov
out
mov
push
push
push
roll
mov
ja
dec
mov
out
xchg
xchg
ljmp
push
ljmp
stos
or
cmp
test
outsb
fcoms
pop
jmp
push
inc
mov
cld
enter
dec
push
adc
sub
aad
leave
mov
mov
ret
push
cwtl
pop
jg
sub
test
push
test
sti
push
inc
jmp
push
dec
jnp
sbb
push
xor
push
daa
dec
dec
cmp
cld
pop
iret
cmp
add
and
sbb
ja
lea
or
add
inc
sbb
xchg
or
aam
out
fidivrs
in
stos
arpl
fistl
mov
repz
int
test
in
adc
xorb
stos
xlat
mov
add
adcl
sbb
aaa
mov
out
adc
pop
pop
push
mov
inc
dec
stos
fstp
sub
jmp
flds
mov
pop
pop
daa
cmpsb
into
adc
sbb
or
and
inc
sbb
test
fisubrl
or
ss
sbb
mov
fsts
test
movsl
and
add
or
ss
mov
jnp
mov
loope
inc
pop
mov
lods
cld
rcr
pop
push
xchg
xchg
and
push
test
pop
rcl
and
jg
mov
xchg
mov
mov
sub
cmovae
js
inc
jg
inc
roll
imul
call
je
xlat
je
ds
insl
xlat
pop
mov
dec
cld
xchg
iret
fmul
inc
pushf
xor
push
loop
mov
pop
nop
movsl
adc
xchg
fstpt
stos
sub
arpl
mov
loope
lret
loopne
or
sub
stos
out
je
mov
std
sbb
adc
cld
or
rorb
pop
pop
pop
shlb
and
mov
insl
sbb
rclb
jns
fiadds
lret
jnp
cwtl
pop
gs
sub
dec
nop
cmp
fwait
jl
lods
and
shrb
cld
stos
adc
and
push
inc
and
jns
imul
cmp
fidivs
scas
testb
ljmp
shrd
or
mov
push
xorb
cmp
out
mov
xorps
fcomps
das
movsl
add
ljmp
popl
aas
pop
mov
sarb
fistpll
mov
pop
setno
fsubrl
add
xchg
lret
jp
cld
sahf
adc
sub
inc
xlat
les
mov
sub
lea
xchg
mov
xchg
les
test
adc
in
out
outsl
movsl
mov
cmp
xor
add
mov
shrb
pop
xor
adc
repz
lcall
lret
cmpl
scas
jns
ds
repnz
and
dec
insb
mov
stos
xor
stos
push
push
daa
addl
push
inc
adc
dec
sbb
push
mov
mov
mov
gs
faddp
pusha
xor
js
into
jnp
repz
sbb
xor
jnp
repnz
pop
int
aas
lods
xor
push
in
nop
cmpsb
xchg
sarb
inc
incl
sub
ss
ja
lret
mov
lea
loop
aas
insl
or
mov
push
cmp
jae
movhps
mov
or
mov
pop
xor
out
sbb
sub
test
popf
dec
jp
mov
sbb
les
jl
movsl
imul
jae
imul
sbb
test
inc
xchg
test
imul
aam
scas
into
jp
pop
fisubrl
imul
daa
cmp
pop
and
mov
cmpl
fcmovne
iret
or
push
out
sbb
add
in
inc
jnp
xor
push
jmp
int
mov
cltd
out
arpl
sub
push
sub
in
iret
mov
adc
adc
fstl
cmpsb
push
add
pop
dec
outsl
add
loope
mov
cmp
inc
jbe
cmovbe
mov
cmpb
outsl
jmp
jno
lret
lret
dec
shll
mov
je
cmpsb
jp
mov
stos
insb
lahf
outsb
xchg
and
lcall
insb
pop
ja
push
xor
loope
and
ljmp
addl
mov
xor
pop
add
fidivs
pop
cmp
mov
push
or
nop
mov
cmpl
mov
add
test
inc
or
rcll
push
and
dec
divl
xor
lods
je
shl
or
fsubrs
push
pusha
sahf
aam
and
fidivrs
mov
cli
xchg
add
cmp
mov
cli
dec
stos
ja
test
stos
shrb
notl
push
inc
cmpsl
aaa
idivl
xchg
or
data16
xor
dec
push
stos
dec
xchg
jns
jp
jns
pop
xor
mov
inc
subb
rol
lods
mov
cmp
push
cld
jge
pop
into
cmpsl
mov
and
daa
in
push
cwtl
push
mov
fcoms
dec
push
mov
xor
out
cmp
fucomp
or
jge
and
inc
mov
push
scas
mov
xor
popl
movb
loopne
repz
dec
jb
lods
in
fcomps
cmp
cwtl
sti
daa
out
or
mov
lret
ss
das
stc
fwait
jno
and
clc
mov
mov
scas
clc
aad
sti
insl
jbe
pop
jne
pop
jge
cmp
repz
stos
decl
orl
and
jp
bound
js
jmp
mov
rcrb
mov
sub
and
jle
lret
sub
sub
dec
lret
roll
lret
shlb
bound
das
les
nopl
and
mov
aas
push
xchg
lahf
jge
adc
jne
xchg
fwait
mov
stc
mov
mov
std
push
iret
sbb
jb
testb
mov
outsl
ror
mov
int
aas
add
outsl
sbb
sbb
jmp
cli
mov
push
cld
push
push
in
sbb
test
lret
ja
aam
or
pop
pop
pop
or
imul
clc
cld
and
popl
clc
test
sbb
add
mov
popl
cld
inc
das
mov
adc
mov
xor
jne
rcl
xor
or
jg
sbb
and
xchg
mov
inc
rcrb
mov
dec
sub
add
xchg
xchg
jmp
das
setae
mov
nop
lcall
into
mov
pop
pop
cmpl
pusha
lock
mov
mov
pop
jecxz
xchg
inc
mov
mov
mov
add
add
gs
mov
lea
push
mov
xchg
fcmovb
xchg
xor
shrb
popa
dec
pop
sub
dec
mov
sarb
cmp
fdivl
xor
xor
xchg
mov
call
outsb
enter
inc
in
ret
aaa
out
and
shll
ljmp
cmp
fistl
popf
mov
mov
mov
mov
mov
sarb
and
lcall
push
mov
adc
repnz
ja
ds
and
aad
repz
std
sub
push
sti
pop
adc
adc
xor
lret
sbb
arpl
sbb
ret
out
dec
jnp
enter
adc
push
jo
addr16
out
icebp
sbb
pop
out
mov
hlt
lcall
jl
xchg
mov
mov
mov
cmpsb
test
fnstenv
lret
arpl
les
or
into
add
cli
push
enter
mov
out
ret
push
sbb
cmp
push
clc
sub
lret
out
out
arpl
inc
jo
pop
jmp
repnz
stos
test
and
xchg
dec
sbb
insb
es
enter
jge
insl
es
push
mov
inc
sub
inc
push
mov
inc
xchg
lock
add
out
or
xor
jne
pop
jo
push
test
xchg
outsl
add
in
and
add
mov
xchg
ret
mov
ljmp
int
cmp
dec
fistl
daa
pushf
mov
sub
mov
sarl
cmpsl
push
mov
mov
test
lret
xor
xchg
xor
mov
mov
pop
mov
add
testl
aas
out
iret
and
inc
ljmp
and
clc
stos
shll
or
xchg
fcom
jnp
add
push
mov
push
and
inc
ss
cwtl
push
fisubl
nop
fstpt
pop
push
incb
rsm
add
or
xchg
sub
inc
mov
sub
out
pop
and
xor
jns
ret
and
addl
sbb
add
cmpsl
cs
icebp
faddl
pop
pop
jmp
orl
fdivrs
ret
xchg
aad
sbb
in
imul
xor
cli
push
out
lock
xor
mov
cmp
and
dec
or
sar
mov
pop
jae
xchg
ficoms
cli
dec
lea
out
push
xor
jge
add
ret
xchg
cwtl
mov
cli
or
cmpsl
fidivl
rcrb
jnp
pop
cmp
adc
pusha
dec
push
inc
mov
das
fmul
mov
or
or
sbb
inc
pop
nop
or
ret
cmp
jge
in
cmp
bound
stos
lret
lahf
inc
jae
push
or
add
mov
sub
enter
ljmp
jl
loop
ret
jbe
test
sbb
adc
lcall
xor
outsb
and
lret
pop
cwtl
std
pushf
scas
inc
bound
jmp
ret
push
adc
lret
lods
imul
dec
sub
arpl
xor
jno
pop
orb
fwait
cmp
lret
fcmovu
sub
pop
aad
mov
add
add
lahf
xchg
xchg
xchg
in
cmp
dec
int3
mov
imul
pop
lods
mov
outsl
pusha
je
mov
idivb
ljmp
mov
mov
popa
sbb
jbe
test
outsl
ja
arpl
mov
jns
imul
lret
pop
mov
cmpl
repz
movsb
mov
mov
pushf
push
adc
xchg
adc
andl
rorl
rorl
mov
xor
or
sahf
dec
nop
mov
inc
mov
inc
divb
inc
mov
adc
sbb
repz
pop
movsb
adc
pop
push
mov
sti
in
cwtl
dec
fmulp
aam
jge
mov
sbb
lahf
loope
lods
jnp
pushf
mov
sbbb
pop
lahf
lea
jnp
xlat
jmp
test
addl
repnz
cltd
jo
xlat
out
ret
push
mov
clc
push
sub
ss
into
cmp
mov
mov
push
adc
cwtl
jne
jo
cmpsl
mov
dec
mov
sub
sbb
jo
cmp
jb
push
aaa
out
mov
jno
sbb
and
movsb
repz
mov
cmp
addr16
lahf
sarb
or
outsl
fsubl
daa
mov
pop
push
out
cmp
shlb
scas
leave
insl
bound
mov
jne
jecxz,pt
cmpsb
inc
stos
out
pop
xchg
jmp
add
sbb
es
sarb
js
repnz
push
mov
pusha
mov
scas
data16
cmpsb
pop
and
or
sbb
fdiv
test
out
sbb
dec
fcomi
cmpsb
mov
adc
daa
pushfw
mov
push
cmp
cmp
jo
call
pop
add
lods
ret
mov
repz
sub
sbb
add
sbb
adc
sarl
daa
add
add
bound
arpl
and
cld
mov
or
sub
sbb
add
mov
jge
movsl
mov
and
out
fisttpl
jae
pop
dec
push
or
orb
leave
xorb
add
adc
dec
push
inc
adcb
sub
insl
sbb
xor
xor
jl
or
dec
or
xor
scas
mov
test
insb
xchg
shlb
jg
xor
adc
ret
cmp
adc
movsl
clc
or
xor
sub
mov
int
or
or
mov
cmpsb
adc
rolb
sub
add
jle
outsb
dec
in
scas
or
xchg
fsubl
jnp,pt
out
xchg
xchg
push
or
xchg
xor
loopne
icebp
mov
ret
enter
mov
pop
fldcw
mov
cwtl
ljmp
in
in
cmp
pop
sbb
adc
mov
jg
adcb
cmp
adc
inc
push
jbe
mov
inc
ja
mov
mov
int
add
les
je
jecxz
pusha
out
popf
inc
xor
mov
pop
add
sub
cs
pop
fdivl
sub
cltd
add
stos
ficomps
popa
dec
sub
push
xchg
cmp
popf
inc
cwtl
stos
mov
dec
sarb
sbb
inc
jo
test
lcall
xchg
loopne
pusha
loop
test
xor
inc
stos
test
imul
pop
or
pop
loopne
rclb
dec
add
and
cmp
imul
mov
add
test
mov
fnstcw
pop
and
hlt
stos
push
and
inc
inc
mov
test
jmp
mov
in
mov
xchg
mov
pop
stos
jmp
call
cltd
std
or
sbb
mov
dec
adc
in
cs
xchg
mov
add
inc
aaa
clc
aam
xchg
sbb
cwtl
dec
pop
outsl
stc
and
cmpsl
cmp
mov
adc
sub
sbb
cmp
and
jp
push
push
stc
les
add
cmp
leave
stos
adc
lods
aad
jne
popa
loop
xchg
stc
add
loopw
xchg
insb
mov
jo
cmp
dec
out
inc
cmp
mov
sub
addr16
push
pop
dec
repz
pop
cmp
insl
loope
rcr
pop
int
sarl
push
jl
lock
cs
daa
mov
lret
cs
inc
iret
sti
mov
shlb
cmp
add
sbb
in
pushf
xchg
imul
jae
js
out
add
sahf
ljmp
dec
push
aaa
push
mov
ds
fcmovnu
jb
and
mov
es
in
push
sub
repz
mov
mov
rcl
fstps
inc
inc
mov
mov
jne
adc
sub
adc
lcall
aas
sbb
int
and
leave
imulb
dec
ficomps
mov
inc
jno
loope
jge
mov
enter
push
jg
sub
xlat
pop
jae
add
mov
cmp
dec
mov
adc
dec
jns
pop
adc
pop
shrb
mov
stos
push
xor
rorl
cs
and
iret
push
cli
mov
imul
aas
dec
push
jl
shr
loopne
jae
jle
imul
mov
rorl
mov
cmp
arpl
insl
add
push
xchg
lods
cld
mov
jle
xor
arpl
lea
push
fucomip
xorb
xchg
jo
arpl
add
out
sub
int3
es
mov
aaa
mov
mov
aad
jae
xchg
push
and
js
pop
pop
xchg
addr16
js
jo
cmc
xchg
fildl
push
cwtl
lcall
gs
cmpsb
std
je
testb
mov
cwtl
mov
dec
or
sub
cmp
popa
inc
cmp
push
aad
rcll
lret
mov
jne
push
xor
rolb
add
xchg
xchg
les
jg
xchg
mulb
dec
jmp
push
jbe
inc
lahf
fsubrl
jge
adcb
std
jo
pop
shlb
fsubrs
aas
pop
mov
jnp
jmp
xchg
aaa
cmpsl
out
mov
cmp
adc
hlt
imul
push
push
je
mov
pop
rcr
loope
mov
sub
mov
cmp
inc
and
jle
sti
mov
pop
jo
fidivrl
or
dec
test
test
jne
mov
cvtpi2ps
dec
jle
jo
jnp,pt
jmp
xchg
add
inc
test
or
jle
cmp
xchg
mov
add
xor
pushf
inc
cmp
mov
xor
pop
nop
test
adc
dec
rcll
jae
jecxz
lea
lock
sbb
adc
test
pop
push
push
fsts
xor
shrl
repnz
dec
fimuls
mov
or
cmp
sub
fs
ja
pop
mov
adc
aas
and
rcll
fwait
aad
icebp
das
push
ficoms
repnz
mov
mov
xlat
add
push
and
movsb
jge
pop
mov
jmp
lods
or
adc
orl
addr16
ljmp
outsb
mov
je
push
adc
daa
sbb
lret
leave
jg
rolb
out
pusha
or
cmp
inc
or
jge
lahf
jl
mov
cmp
xchg
adc
cmp
push
lea
imul
es
push
insl
mov
cmp
push
push
add
xor
stc
js
loopne
stos
push
pop
jne
xchg
mov
or
xchg
call
push
fs
mov
or
in
aaa
int3
imul
mov
xorl
xchg
pmullw
test
jno
outsl
mov
bound
fstpt
xlat
cld
orl
ja
jno
gs
dec
cli
rcl
add
add
pop
sub
xchg
push
dec
imul
jae
cmpsl
xor
std
xor
add
inc
xor
stc
std
aaa
mov
ror
mov
cmc
ss
add
adc
add
les
or
sbb
xchg
sub
test
bound
ret
fcompl
pop
add
ret
jb
mov
into
out
fbld
outsb
and
xor
inc
sbbb
push
dec
push
xor
mov
jmp
aam
std
or
movlps
js
popf
xchg
or
xor
out
pop
inc
cmpsl
arpl
jp
or
lock
ljmp
das
dec
orl
mov
push
jo
add
dec
pop
lret
loopne
ficoml
cwtl
call
sbb
mov
stos
push
aam
cli
xchg
adc
out
movsb
xchg
jae
push
dec
arpl
insb
lods
cmpsl
cmp
clc
out
jge
or
pop
xor
xor
and
jge
jbe
test
subb
stos
aas
pop
sbb
sub
ret
push
mov
fs
or
test
or
cmpl
sbb
push
inc
mov
xlat
ljmp
adc
inc
scas
test
lods
je
aaa
inc
ds
inc
mov
shl
loopne
ror
es
lods
xor
insb
sub
or
sub
rcrb
mov
xor
incb
cmp
aaa
stos
dec
push
push
push
es
into
mov
sbb
adc
test
sbb
and
xchg
es
imul
and
ret
andl
xor
lds
push
ss
out
stc
nop
filds
sub
mov
cmp
jno
out
bound
mov
ret
mov
lods
adc
imul
jns
xchg
mov
add
insl
push
mov
movsl
sub
test
xchg
lods
dec
jp
sub
mov
add
xchg
or
insl
es
andb
adc
out
ffreep
mov
mov
push
das
jb
adc
pop
mov
add
cld
xchg
add
std
call
pop
mov
jl
sub
xchg
sbb
push
fdivs
mov
lret
add
cld
fnstcw
addl
das
jl
les
shll
cltd
mov
stc
in
in
push
iret
icebp
insb
std
add
lods
or
arpl
iret
pop
es
adc
in
dec
and
pop
jmp
outsl
xor
repz
fdivr
mov
sub
adc
aaa
hlt
push
ret
dec
aam
mov
pop
std
pusha
ljmp
cmp
subb
push
incb
out
testb
shrl
lahf
mov
jb
and
out
leave
sub
mov
and
mull
cltd
mov
dec
out
insb
push
pushf
cltd
mov
jmp
cmp
jecxz
sbb
pop
jb
dec
add
or
mov
xchg
gs
add
sbb
xor
fwait
add
outsl
gs
imul
mov
xchg
xor
xchg
int
inc
fisubrl
pop
dec
xor
gs
sahf
sbb
in
incb
shrb
packuswb
sbb
bound
xchg
sahf
cmp
ja
imul
add
mov
call
or
out
mov
mov
adc
mov
pop
lods
pusha
dec
cmpl
rolb
or
xchg
mov
repnz
enter
out
aam
and
jo
jmp
outsl
and
cmc
pop
xchg
test
dec
push
ja
cwtl
sub
test
call
xlat
push
mov
pop
xor
sbb
call
adc
movsl
jl
jmp
cmpsl
sbb
int3
repnz
and
push
ret
lea
pop
aad
stos
mov
adc
out
mov
insl
sti
in
mov
out
adc
pop
or
pop
pop
das
jl
aam
in
sub
mov
cmp
fsubp
xchg
dec
test
rcr
loop
adc
insb
test
cwtl
test
hlt
sub
push
xchg
fidivs
dec
dec
xchg
adc
add
and
inc
leave
dec
enter
mull
fsubp
pushf
cmpsb
pop
push
mull
xor
out
cli
scas
mov
imul
cli
lcall
mov
cltd
fldl
sub
scas
out
xor
jecxz
jge
icebp
mov
stos
and
jne
cmpsl
xor
clc
shr
mov
jle
dec
inc
sbb
aaa
pop
popa
sub
or
jle
inc
insl
addr16
cmp
inc
outsl
ds
mov
in
jno
fbstp
push
movsl
adc
call
push
dec
mov
cmp
popa
fiadds
add
cltd
sahf
xchg
pop
insb
push
in
dec
xlat
push
xchg
sti
xor
sbbb
popa
adc
dec
inc
mov
pop
mov
cmp
mov
inc
push
cmp
sub
nop
xchg
or
cmp
xor
lret
mov
sti
lods
add
test
cmp
push
fs
xchg
rolb
xchg
or
stc
stos
push
fwait
mov
adc
mov
in
dec
jmp
es
inc
in
mov
stc
mov
decl
push
lds
adc
sahf
decl
arpl
inc
jb
mov
mov
outsl
loop
mov
sbb
enter
adc
arpl
mov
es
and
mov
add
xor
mov
lock
push
mov
jae
sti
add
loope
sub
jge
mov
jbe
sub
lods
mov
dec
ret
or
out
scas
loop
jmp
enter
xor
sbb
sahf
mov
insb
negb
jbe
cmp
jmp
jno
pushf
xchg
push
mov
sbb
test
dec
xchg
or
inc
enter
imul
and
mov
fstl
and
jmp
hlt
aaa
pop
mov
jecxz
int3
in
and
rcr
pusha
push
test
xchg
jb
push
shrb
pop
mov
lods
test
mov
test
mov
push
hlt
pop
cmp
clc
sub
cmp
jl
mov
hlt
jae
mov
xor
out
or
jge
xor
pusha
mov
ret
xchg
ljmp
scas
dec
add
cmp
xor
dec
movsl
pop
in
xchg
cmp
lcall
jp
xchg
out
inc
popa
push
add
test
rolb
xchg
sub
mov
sub
jmp
es
xchg
mov
mov
outsb
sbb
clc
clc
into
fimuls
pop
mov
test
and
mov
js
in
or
or
adc
out
or
cmp
loopne
inc
dec
pop
icebp
or
and
mov
cmc
stc
ja
xlat
imul
insb
in
pushf
pushf
icebp
cmp
mov
dec
test
movsb
out
bound
sbb
add
mov
mov
mov
mov
jo
push
pop
es
ret
or
cmp
mov
sbb
addr16
and
pop
xor
xor
lret
iret
xlat
out
out
xchg
imul
dec
lret
add
inc
fisubrs
scas
dec
loope
mov
addr16
sbb
jecxz
jecxz
sub
inc
mov
and
daa
jle
push
mov
inc
mov
fisubrl
aaa
mov
mov
andl
cmp
dec
pop
mov
adc
cmp
xor
cli
ljmp
mov
mov
insl
inc
dec
dec
jmp
insb
inc
push
pop
icebp
cmp
adc
lock
pop
fldt
out
cli
cltd
pop
mov
shll
adc
fsubl
negb
pop
jecxz
popa
sub
push
mov
xor
cmp
idivl
mov
lret
out
push
int
pop
xor
iret
inc
sbb
stc
jae
sub
or
stos
dec
cmp
xor
dec
test
or
jge
pop
pusha
in
push
mov
sbbb
cmp
mov
das
fsubs
scas
cs
adc
mov
testb
jne
js
stc
mov
sub
mov
cld
leave
lock
movsl
mov
mov
sbb
aad
lock
pushf
inc
fsubr
fucomp
inc
push
push
jp
fisubrs
mov
mov
das
adc
or
mov
addr16
push
jno,pn
push
jno
mov
xchg
jbe
jmp
ljmp
mov
lcall
dec
or
inc
je
daa
xchg
lahf
test
pop
loopne
cmpb
fcmovu
add
lods
mov
in
aaa
pop
pop
sbb
mov
outsl
inc
mov
pushf
and
jmp
and
jnp
sahf
std
mov
out
mov
fwait
add
adc
jbe
out
lock
mov
lret
cwtl
stos
fmul
xor
jb
sbb
xchg
je
and
int3
adc
sub
jae
push
icebp
test
inc
lock
cltd
jne
pop
insl
cmp
aam
or
ret
sbb
dec
int
mov
insb
or
lock
nop
in
mov
dec
fisttps
jecxz
decb
push
andl
cli
push
add
xchg
jmp
sub
pop
jnp
out
arpl
inc
push
adc
aas
es
popf
mov
test
dec
xchg
or
mov
sbb
jbe
scas
fbstp
sbb
lods
mov
xchg
adc
ja
shrb
sbb
push
push
mov
dec
and
push
mov
cmp
js
aam
insl
test
shld
inc
jmp
scas
add
push
cltd
outsl
hlt
or
inc
es
iret
clc
andb
cmp
fldenv
loopne
stos
loop
jecxz
or
fucomi
je
inc
test
pop
cmp
cmp
add
popf
insb
je
mov
outsl
or
movsb
mov
dec
and
sarl
movsb
pushf
add
lret
loope
push
dec
mov
testb
stos
dec
cs
dec
mov
std
jns
dec
outsb
fcomi
cmpsb
sub
mov
adc
jl
jno
dec
sub
ret
add
cli
nop
sub
cmp
cmp
adc
std
sub
nop
roll
jecxz
jnp
sub
sub
popf
or
inc
cmp
out
js
inc
pop
icebp
in
int
cld
icebp
xchg
pop
std
gs
adc
rclb
cwtl
dec
lcall
jae
pop
loope
sub
pop
mov
rolb
sub
mov
push
insb
std
mov
fwait
test
and
out
mov
mov
lret
les
rol
cmp
ret
loope
dec
sahf
push
sub
insb
shl
aam
rorl
jne
fisttps
xor
cwtl
loope
iret
xchg
rorl
add
add
xchg
xor
sub
aaa
popf
daa
je
loop
and
fiaddl
xlat
aas
cld
loop
lods
or
fimull
mov
enter
icebp
ja
aas
and
push
jp
jo
lock
dec
insl
cld
bound
in
push
adc
sub
iret
jb
inc
mov
je
jp
mov
fxch
push
rcl
cli
stos
insb
outsb
pop
jl,pt
jge
rol
fstps
lahf
jg
ds
insb
mul
mov
idivl
std
cmpsb
and
jl
cmp
push
xchg
inc
push
mov
cmc
jne
cs
lods
pop
mov
scas
cwtl
dec
pushf
xor
aam
xor
dec
sub
cli
mov
jl
and
and
pop
or
adc
cwtl
test
fisubl
xchg
mov
mov
mov
ret
lock
or
cltd
inc
lret
outsl
inc
std
out
cmp
mov
das
or
scas
fidivl
fwait
xor
sub
mov
lods
adc
sub
cmc
inc
dec
cld
invd
movsl
aaa
dec
push
jle
out
pop
loopne
enter
mov
fcmove
subb
push
or
inc
sti
push
ds
dec
lea
fmulp
lcall
pop
ja
cmp
ja
lcall
xchg
mov
dec
mov
movsb
cmp
mov
int3
mov
xor
xlat
arpl
iret
aad
mov
loop
mov
dec
sbb
dec
in
rorl
push
addr16
mov
sub
adc
and
cli
call
popa
js
lcall
cmp
pop
fists
inc
mov
iret
scas
xor
ja
inc
arpl
mov
cmp
popf
xor
repz
add
arpl
mov
shrl
aaa
and
jmp
out
cltd
mov
and
les
pop
incl
push
mov
loope
pop
xchg
pop
ljmp
scas
sub
daa
add
adc
ja
xchg
lcall
idivb
and
sbb
sub
test
stos
adc
std
jnp
mov
push
in
out
stc
pop
addr16
fisttpl
ret
pop
xchg
push
xorl
dec
adc
cld
stos
or
cmc
push
jge
fiaddl
xor
xor
addr16
lds
jg
adc
dec
gs
push
jmp
jp
out
data16
sub
add
jnp
dec
rorb
inc
dec
xchg
inc
mov
or
add
mov
push
jo,pn
push
cltd
fidivl
dec
mov
inc
inc
cmc
ret
insl
mov
inc
inc
push
gs
cmp
js
aad
pop
or
add
add
xor
mov
sub
bound
xchg
xchg
jge
push
je
add
mov
mov
pop
push
dec
out
sbb
sub
or
out
cmc
xor
add
popa
xor
and
out
call
pop
call
push
fcmovb
lods
lock
push
das
xor
mov
out
push
ljmp
data16
mov
jmp
ljmp
lds
xlat
or
icebp
mov
out
into
mov
sub
cmp
enter
jge
xor
xchg
icebp
mov
pop
enter
mov
push
imulb
push
jno
mov
repz
scas
pop
ja
push
jae
into
mov
cmpsb
mov
loop
sub
aam
stos
sub
popa
cld
lds
das
mov
jecxz
dec
ret
push
dec
add
lds
xor
dec
or
popa
xchg
test
repnz
xor
sbb
push
aas
mov
cmp
test
ret
outsl
push
ss
xchg
mov
push
mov
sub
popa
cli
inc
sub
das
push
stos
push
xchg
cmpsb
or
jo
mov
call
mov
aas
fldl
nop
push
test
fdivrs
and
pop
scas
loope
sar
lret
jle
jle
movsl
xchg
test
cmpsl
fdivs
add
scas
andb
loop
repz
ffreep
jnp
out
jo
push
mov
shlb
and
and
sub
jne
aas
add
xor
cs
cmp
mov
std
in
leave
es
add
jle
xlat
xchg
lods
xchg
cwtl
sub
mov
xor
outsl
inc
pop
mov
pusha
daa
mov
test
out
xchg
mov
jnp
test
sbb
sarl
ror
add
jle
xor
movsb
sub
lcall
and
jecxz
sbb
add
fs
cli
ret
dec
and
rorl
out
pop
sub
add
sbb
jle
xchg
mov
pop
ljmp
mov
xchg
cld
sbb
xchg
sarb
mov
or
pop
xor
pushf
call
ljmp
xchg
enter
or
xor
test
cmpsl
pop
sbb
sbb
or
push
testl
add
fwait
rcr
lds
push
jmp
sub
mov
test
popa
push
cmpsb
daa
xor
xchg
std
cmp
mov
pop
in
mov
jns
push
mov
add
or
sbb
stos
icebp
adc
cmpsl
inc
ror
gs
ljmp
int
pop
stc
fidivs
mov
add
orb
jae
mov
jecxz
addr16
into
and
mov
in
jg
push
xor
fimull
xor
dec
movsb
shlb
pop
push
fdivrl
push
divb
fisubrl
or
dec
adc
int
ret
test
jne
push
mov
jle
push
nop
fildl
lahf
mov
mov
cwtl
cmp
pushf
xchg
sti
and
sbbb
mov
dec
jnp
mov
imul
mov
mov
dec
leave
data16
dec
and
push
mov
std
lods
out
xor
jae
sar
shlb
push
dec
inc
sub
mov
mov
mov
lock
add
or
lret
push
pop
test
sahf
pusha
loopne
pop
or
lahf
loop
js
lods
add
and
mov
mov
ret
test
test
mov
aam
mov
mov
push
fnstcw
adc
test
scas
cld
cmp
test
push
ss
sbb
mov
pop
add
xchg
outsb
repnz
dec
ret
leave
cld
jae
mov
enter
jns
lods
adc
ret
fcomp
dec
add
xchg
add
mov
cmp
pop
inc
push
loopne
les
icebp
sbb
orl
or
sub
and
cmp
shll
aas
xchg
aam
fdiv
xchg
xchg
sub
dec
inc
out
mov
jno
pop
inc
jge
cmp
push
aad
loope
pop
imul
mov
cmp
mov
dec
aam
cmp
cli
lahf
cmp
jl
inc
xor
xchg
sub
xchg
in
push
xchg
je
pop
repz
loop
cmpsl
les
push
sub
imulb
loope
sub
add
push
mov
push
mov
sub
mov
out
or
xchg
xor
push
adc
jb
lcall
cmp
pusha
sub
mov
xchg
pop
xor
rcr
sub
cld
jl,pt
movsb
aaa
mov
xor
jbe
fwait
addb
add
sti
mov
adc
jge
filds
int3
cltd
pushl
cld
mov
cmp
into
int3
adc
loop
jp
dec
mov
cmp
movsl
push
jo
add
or
stos
jl
or
lods
mov
mov
add
cmp
sbb
or
repz
add
and
data16
add
insl
aaa
mov
pushl
pop
js
cltd
repz
in
cmp
scas
jmp
and
lock
aas
movsb
and
cmp
pop
lret
pop
jmp
dec
jecxz
jmp
dec
jmp
mov
add
out
mov
jae
cmp
lock
or
insb
pushf
or
jnp
mov
es
inc
into
bound
dec
mov
sarl
mov
inc
sub
xchg
fisttpl
cmp
adc
repz
cs
inc
cmp
xchg
jmp
stos
push
pop
sbbl
xchg
call
jp
jae
xor
fisubrl
and
aam
sub
std
fdivp
rcrl
gs
mov
jecxz
xor
aad
jbe
dec
das
xchg
outsl
cmp
inc
adc
inc
ja
sbb
cs
gs
and
sbb
and
inc
xor
and
cwtl
inc
lds
lret
test
pop
jmp
xchg
mov
out
pushf
negl
mov
out
repnz
sbb
imul
dec
sbb
xchg
stos
adc
in
mov
sub
es
pop
add
lahf
pop
add
and
or
int
sarb
test
mov
fidivrs
out
push
cmp
adc
sub
je
and
xor
nop
int3
out
lret
insb
aad
pop
mov
sub
and
xor
out
dec
popa
jmp
xor
cmp
push
mov
inc
arpl
mov
cwtl
movsb
adc
xchg
repnz
mov
xchg
sub
inc
mov
ja
cmpsl
stos
int
adc
cs
jae
sub
pop
jp
popf
ret
xor
ljmp
dec
xor
xor
sub
inc
mov
dec
lahf
and
sbb
es
sub
filds
jbe
loope
idivb
mov
shll
aaa
xor
dec
add
xchg
shll
jno
cmpsl
push
lods
je
mov
mov
inc
lret
lcall
loop
cld
xchg
xchg
jecxz
xchg
fwait
mov
leave
mov
jae
fdivrs
andb
out
xor
loope
mov
cli
insb
mov
pop
inc
xor
jae
es
aaa
in
jp
sti
lock
icebp
mov
cld
jmp
adc
mov
pop
dec
xor
mov
insl
pop
jle
add
xchg
outsl
leave
pop
adc
cmp
jmp
stos
out
lods
mov
js
xchg
jno
add
cld
and
jle
cs
inc
mov
mov
mov
xor
mov
push
movsb
push
fsubrl
in
adc
pop
repz
roll
icebp
imul
inc
nop
pop
iret
rol
test
jle
fcomi
sbb
into
loop
inc
mov
add
xor
ja
negb
loop
jo
adc
add
lods
push
sti
add
lock
dec
inc
jae
fs
out
aad
add
jp
cmp
in
stc
xor
adc
lea
out
mov
jle
stos
out
mov
clc
aam
nop
adc
push
mov
repnz
ss
sbb
push
or
push
iret
rcrb
and
inc
sub
jne
mov
and
test
leave
idiv
cli
xchg
mov
and
rclb
rcrb
lcall
adc
lahf
jae
pushf
dec
mov
in
inc
int
cmp
jno
into
pop
mov
pop
fdiv
or
sub
mov
mov
xlat
into
sarl
repz
mov
sub
xor
std
aaa
das
mov
xchg
sbb
mov
or
pop
test
mov
xchg
insb
pusha
jle
dec
sbb
fists
jp
mov
push
out
test
mov
xchg
loopne
adc
rorb
add
pop
lret
xchg
das
ss
or
mov
xor
imull
stos
push
sbbl
jae
push
outsl
xor
mov
dec
push
cli
mov
adc
insb
popa
imul
insb
and
adc
sbbl
pop
movsb
and
and
push
xor
mov
sub
cwtl
ss
gs
and
loope
fs
jmp
mov
xchg
addr16
cs
sub
xor
aas
jb
aad
mov
outsl
stos
ret
dec
fstpt
pop
jbe
loop
sub
stos
or
push
das
popa
cmpsl
icebp
push
mov
aad
repnz
test
pushf
icebp
pop
mov
aam
inc
push
mov
jmp
ljmp
lahf
ja
add
mov
push
nop
test
sbb
inc
xchg
jmp
mov
lock
shl
push
jl
adc
mov
cs
lcall
pop
rcl
sbb
fcompl
add
dec
adc
jae
dec
aam
add
jnp
cmp
iret
mov
jne
pop
and
les
sbb
xchg
iret
mov
adc
add
addps
in
fnstcw
add
out
add
fnsave
xorb
mov
jb
xchg
movsl
jmp
mov
xchg
mov
ret
mov
cmp
pushf
int
popa
sbb
pop
xor
dec
jg
inc
push
ljmp
push
fcmovbe
push
jl
dec
jnp
sahf
test
add
mov
and
lcall
jle
pop
mov
sbbb
test
jecxz
lret
and
jmp
inc
cld
mov
sub
test
je
fisubrs
filds
sub
popa
cmpl
mov
aaa
jno
dec
fnstsw
mov
movsb
pushf
shll
xor
sub
pop
enter
aad
jns
daa
sbb
out
jo
cltd
les
fcompl
mov
in
addl
mov
push
cmpsb
or
mov
cmp
push
add
ljmp
rcrl
pushf
arpl
pop
and
cli
inc
cli
mov
insl
in
sub
inc
add
push
push
outsb
or
leave
push
sahf
cmp
mov
mov
pop
fwait
lahf
pop
outsb
cmpsl
sahf
leave
aam
xor
stos
cmp
xchg
xor
push
cmp
out
xor
xchg
sbb
les
das
les
sahf
mov
std
rorb
and
subl
fstpl
loopne
fimull
frstor
popf
xchg
mov
cmp
xchg
mov
and
ss
pusha
out
js
sbb
jl
push
arpl
pop
jmp
lods
fisttpll
xor
xor
sub
xchg
add
and
xor
test
lock
inc
dec
sbb
mov
push
popf
mov
data16
inc
dec
and
xlat
push
bnd
test
dec
out
push
xchg
adcb
rorl
or
pop
loope,pn
xor
loope
jle
js
mov
orb
jmp
ret
fsubrl
fldenv
fadds
in
cmp
add
bound
loopne
lds
adc
aad
pop
fildl
std
mov
es
xor
cld
test
stos
insb
out
pop
orb
push
loope
push
and
jno
lcall
adc
cmc
add
sub
pusha
sub
sbb
cmp
cmp
js
lock
mov
outsb
movsb
dec
xor
mov
sbb
mov
shl
imul
push
popf
cli
push
rorl
repnz
and
mov
lds
hlt
out
test
push
mov
mov
jecxz
outsb
mov
mov
add
cmpsl
ja
pusha
mov
fdivrl
mov
repz
add
xor
leave
and
in
inc
das
fld
xchg
sub
xorb
cmpsb
inc
repnz
scas
pop
jbe
test
fdivrp
mov
push
push
mov
test
jnp
push
andl
cmpsl
lds
in
fnsave
pop
inc
jb
cmp
decl
outsl
push
pop
mov
scas
mov
cwtl
in
sbb
test
iret
subl
adc
sub
stos
xchg
dec
arpl
push
pop
leave
add
pop
loopne
loopne
dec
outsl
test
outsb
mov
clc
sbb
fildl
movsl
js
mov
mov
sbb
adc
jbe
js
ror
jmp
test
cld
je
mov
sub
jge
imul
popf
mov
cmp
imul
sti
test
xchg
push
pop
sub
aam
mov
sbb
or
mov
jbe
stos
lock
outsb
stos
mov
outsl
adc
out
leave
fnstcw
popf
jge
push
xchg
mov
lret
mov
jl
imul
aam
cmp
pop
addr16
mov
cmp
test
and
push
pop
fisttpl
jne
clc
dec
mov
scas
pusha
xchg
lahf
lods
cmc
repz
mov
dec
mov
test
in
mov
xor
out
push
or
cmpb
adc
cld
push
arpl
int
mov
jle
add
inc
jecxz
ljmp
je
mov
out
loopne
cmp
es
xchg
loope
or
test
dec
mov
push
xchg
rcrb
ret
add
fwait
pop
aad
xchg
in
pop
mov
jl
or
fldenv
inc
fdivrs
hlt
data16
mov
pop
mov
arpl
std
cmpl
lea
iret
pop
movsb
xchg
and
mov
mov
stos
std
jae
cmp
outsb
add
jge
sbb
ljmp
xchg
or
cld
test
or
daa
mov
fcmovb
pusha
gs
push
and
or
sbb
scas
imul
lods
mov
adc
fisttps
scas
sub
mov
rcll
mov
push
push
scas
shlb
insb
test
iret
sbb
sbbl
sahf
cs
xorb
jl
xor
add
sub
lahf
mov
push
xlat
out
and
aas
cli
pop
nop
mov
clc
mov
jle
xchg
nop
push
cmc
lcall
jo
repz
in
or
ret
mov
inc
cld
mov
sub
bound
and
push
leave
out
inc
adc
loope
in
inc
out
dec
iret
sub
sahf
xchg
aas
xacquire
jno
push
sbbb
mov
insl
sub
push
mov
inc
fwait
push
adc
aaa
lret
xor
or
cmc
add
or
cmpsb
dec
xchg
popa
in
pop
fbstp
jge
in
sahf
dec
mov
filds
out
je
jge
leave
sbb
leave
imul
push
sub
pop
jmp
das
xlat
stos
scas
dec
jb
push
scas
cmpsl
loop
xlat
movsb
fcmovu
or
insb
mov
aad
xchg
sub
xor
adc
js
fisttpll
fdivrl
in
insb
in
les
cmp
sub
jno
mov
lea
rcll
out
xor
das
leave
mov
xor
les
add
lock
fcoml
shrl
mov
aad
movsb
adc
jmp
aaa
dec
loopne
pusha
dec
dec
shll
and
cs
mov
or
fs
mov
adc
das
adc
stc
mov
testl
jmp
xor
scas
fbstp
std
daa
jg
loope
into
mov
in
adc
xor
lds
pop
shrb
mov
nop
cmp
jmp
loopne
or
repz
insl
mov
jmp
mov
in
mov
popa
incl
movsl
ljmp
test
mov
test
shlb
pop
jg
mov
int3
or
sbb
test
test
test
icebp
loopne
js
shll
inc
lcall
aad
int
fnstcw
mov
sbb
loope
sub
mov
dec
mov
mov
std
test
pop
jo
adc
rolb
adc
mov
jmp
outsb
rclb
sbb
decb
push
int3
orl
outsl
xchg
xchg
popa
pop
sub
mov
adc
xchg
push
jp
negl
inc
dec
shlb
sub
lds
push
inc
or
es
repz
dec
inc
fisubs
dec
cmc
insl
rclb
bound
popf
add
mov
pop
sub
xchg
mov
dec
push
sbb
data16
or
pusha
jb
jecxz
add
adc
dec
test
cmp
mov
lret
sbb
cli
lcall
fcompl
cli
inc
jo
shr
push
pop
adc
jae
sbb
fisubrs
in
stc
in
mov
imulb
lea
clc
fcmovbe
jb
rcrb
std
cmc
push
dec
jl
xchg
cmp
xor
mov
leave
mov
aaa
xchg
adc
and
popa
lret
das
jne
mov
and
and
call
pop
jg
dec
bound
lods
test
push
dec
addl
clc
sub
mov
mov
jbe
ss
jb
out
imul
add
sub
mov
testl
scas
fistpll
movsb
adc
sbb
mov
lret
into
pop
aas
sbb
les
mov
mov
push
mov
cmpsl
jle
pop
mov
mov
int3
outsb
mov
xor
int3
data16
and
lsl
rcrb
insl
aas
stos
ja
jns
jle
pcmpgtw
dec
test
ss
daa
ja
repz
rol
add
or
xchg
push
notl
sbb
popa
out
xor
xchg
lret
shll
packssdw
fwait
mov
dec
cmpb
nop
cwtl
std
cmp
ds
jbe
xchg
and
popf
fildl
sub
jno
sub
jmp
aas
fdivrp
jmp
cwtl
sbb
repnz
gs
testl
mov
sub
jne
imul
dec
inc
and
mov
jns
cmp
out
add
fstpt
fwait
pause
stos
inc
xchg
stos
push
scas
cld
pop
mov
shrl
sti
xchg
push
es
leave
call
push
mov
rolb
in
insb
ss
cld
mov
jg
pop
in
popa
or
push
push
jecxz
in
movsl
cmc
add
sbb
pop
dec
mov
push
dec
mov
cmp
in
fidivs
add
and
jl
fs
lahf
mov
neg
pop
shll
mov
inc
push
pop
sbb
ret
frstor
mov
jb
mov
test
imul
testb
push
test
push
in
or
xchg
ss
dec
mov
jno
jno
in
cli
int3
lods
xchg
mov
std
mov
adc
repz
shrl
testl
jle
add
add
movsl
mov
mov
mov
push
mov
mov
mov
scas
or
adc
lahf
fwait
sahf
ss
and
pop
sbb
jmp
mov
loope
stc
jl
shll
pop
adc
add
and
jbe
mov
shll
aad
mov
add
inc
pop
fcmovnu
imul
sarl
fidivrs
cmp
pop
sbb
out
push
out
xchg
sub
push
sbb
and
pmullw
sub
aad
xchg
stos
push
dec
lcall
pop
jge
xchg
jmp
repnz
mov
cld
rcl
mov
add
xchg
inc
sbb
ret
fwait
cmp
cwtl
repz
mov
std
bound
in
cmp
jle
sub
lock
mov
sub
ljmp
cld
pop
pop
test
dec
cmp
sahf
cli
inc
mov
lret
scas
mov
ds
jne
hlt
lret
dec
dec
jl
idiv
les
cs
ds
hlt
sbb
lods
lahf
sahf
fwait
mov
pop
das
out
xor
xor
mov
ja
outsb
pop
sub
out
mov
mov
movsb
pop
mov
fcmove
and
leave
fidivs
cmpsl
jb
mov
and
outsb
xor
popf
enter
int
adc
loopne
xor
adc
mov
aaa
out
enter
int3
mov
pop
pop
push
leave
rorl
mov
jecxz
icebp
and
ss
inc
jo
inc
ss
sub
enter
sub
clc
popf
or
mov
loope
cmp
mov
pop
inc
sti
test
dec
push
mov
push
insl
cwtl
enter
push
push
adcl
jmp
lret
inc
into
pop
add
mov
stos
mov
and
cli
les
addb
jnp
cwtl
mov
out
stos
sub
scas
cmc
xor
xorb
ret
imul
cmp
shl
rcr
adc
adc
jecxz
loopne
cmpsb
pop
mov
inc
mov
ret
or
imul
push
cmp
in
loopne
mov
mov
sub
mov
idiv
cmp
ss
clc
dec
arpl
nop
or
mov
aad
testl
add
mov
mov
mov
les
mov
jmp
mov
in
or
inc
mov
pop
pop
xchg
out
scas
push
stc
push
scas
mov
mov
jb
jmp
dec
lcall
scas
ret
sub
cmp
bound
cli
xchg
in
ficoms
push
adc
repz
js
or
movsb
int3
jl
in
insl
lods
ror
xlat
lret
pushf
sub
negb
mov
or
adc
mov
mov
test
adc
mov
cmp
xor
subb
lret
les
xor
mov
sub
call
adc
jmp
cmp
stc
add
ds
fs
aad
mov
lods
sub
add
and
mov
pusha
sub
cvtdq2ps
out
cmp
cmp
sbb
and
loope
gs
popf
iret
jo
add
xor
popa
sbb
push
mov
jge
dec
movb
movsb
decl
aam
or
subl
mov
sbb
fisubs
pusha
ret
push
lock
xor
shlb
cmpb
mov
in
rcr
xchg
fbstp
aas
repz
mov
aaa
mov
inc
mov
and
icebp
test
subb
inc
mov
jge
jnp
mov
je
loope
je
ds
pmulhuw
icebp
cs
icebp
leave
push
mov
xor
int
orl
push
add
pusha
pop
fiadds
test
dec
mov
punpcklbw
leave
mov
outsb
push
jp
mov
cmp
jae
sbb
mov
les
sub
inc
dec
mov
sbb
adc
mov
test
bound
dec
arpl
mov
add
cmc
fiadds
fisttps
out
fucomi
xchg
loope
ficoml
jo
sub
sbb
push
pop
pop
lahf
xchg
in
pop
push
cmp
mov
cmpsl
out
arpl
mov
adc
lret
push
leave
jecxz
int3
sub
cmovp
insl
mov
xchg
scas
mov
fstp
jecxz
int3
inc
sbb
dec
stos
in
lods
inc
std
pop
inc
sahf
xor
stos
shll
icebp
scas
and
dec
jle
pop
js
jae
inc
test
aaa
lds
add
sbb
push
jns
sbb
push
andl
push
repnz
adc
pop
and
es
pop
dec
inc
sarb
aam
cmp
ljmp
insb
and
and
jg
popf
loop
jmp
int3
into
je
or
movsl
in
pop
in
aad
aas
inc
sarl
sub
and
lea
mov
jne
cs
in
jbe
ds
jbe
call
cmp
in
and
or
cwtl
in
xor
jmp
movsl
push
std
jae
sub
addl
aaa
mov
inc
sahf
sub
lahf
popa
aaa
popf
and
fsubrp
fnsave
lahf
cltd
push
cmpsb
xor
pop
sbb
fsubs
xchg
int3
hlt
dec
out
int3
rcr
mull
push
inc
test
sub
mov
push
xchg
lcall
and
daa
xor
lods
push
test
adc
sbb
sbb
ror
add
jnp
rorb
test
sbb
call
leave
call
jecxz
mov
dec
cmp
push
xlat
bound
add
and
pop
movsl
push
and
in
add
nop
repz
jg
and
add
xchg
subl
dec
mov
enter
inc
pop
sub
int
mov
arpl
mov
sahf
sbb
lahf
out
lret
push
lods
out
sbb
mov
or
mov
loopne
jmp
or
mov
sbbb
leave
dec
and
cmpsl
in
movsb
loopne
cmpsb
jb
sbb
sahf
loope
scas
int
pop
int3
cmp
mov
mov
mov
push
test
jnp
cmp
mov
mov
gs
mov
sbb
js
sbbl
insb
mov
mov
or
sub
pusha
jle
jae
insl
sub
push
dec
cmp
out
jns
xchg
cmp
dec
mov
mov
add
dec
leave
aad
jo
loop
sub
loopne
jae
xchg
or
sbb
adc
cmp
repz
aam
add
add
xor
jecxz
mov
mov
movsl
push
lret
jg
mov
mov
add
mov
dec
arpl
adc
pusha
daa
or
fwait
es
jl
rcl
roll
add
and
jo
mov
imul
sub
and
out
sub
out
inc
bound
orl
inc
ds
push
xchg
jo
mov
in
jb
xor
cmp
popf
push
adc
aaa
mov
stos
cwtl
lods
jl
enter
stos
lret
inc
cmp
rclb
imul
inc
sbb
out
xchg
inc
mov
push
mov
push
mov
and
rclb
mov
jecxz
adc
imul
scas
and
jns
sbb
sub
dec
mov
cs
pop
jae
xchg
aas
les
popf
mov
xor
jo
push
cld
add
pop
imul
xchg
dec
mov
push
push
xchg
mov
xchg
rclb
loope
mov
call
or
sahf
insb
rcl
inc
cmp
pop
mov
inc
add
pop
cs
loopne
push
push
insl
inc
loop
cli
jns
jae
ds
arpl
add
cmp
dec
adc
or
fs
jo
int
or
pop
fs
bound
loope
into
jbe
stc
add
lods
rcrb
pop
icebp
notl
mov
xor
mov
inc
enter
jle
mov
push
hlt
lea
out
je
sbb
rolb
push
imulb
lcall
dec
add
adc
outsb
pop
sbb
dec
je
xchg
mov
imul
xchg
insl
and
or
jg
test
ret
jl
cld
pop
jp
rcll
xchg
cld
stos
push
dec
mov
arpl
ljmp
xor
jge
pushf
adc
mov
cmpsb
icebp
ja
sub
cmp
cmc
out
lahf
lret
mov
addr16
jbe
mov
jecxz
ss
sbb
bound
rolb
call
cmp
sbbl
xchg
test
nopl
pusha
xchg
cmp
or
ja
cmc
icebp
shlb
fdivr
addr16
xor
std
mov
pop
jecxz
mov
in
sbb
xor
clc
rclb
pop
xchg
cwtl
jns
not
adcl
pop
outsl
adc
cmc
mov
das
in
je
fildll
or
jb,pt
into
push
enter
pushf
sub
xor
lods
subb
inc
cmp
imul
xchg
fwait
xchg
testb
lahf
push
mov
mov
negb
add
ficomps
push
imul
pop
pusha
dec
rclb
add
rol
xor
in
or
xor
insl
xchg
xorl
pop
xor
outsb
pop
jnp
push
jl
aaa
mov
ret
sub
mov
dec
and
mov
clc
pop
jae
lret
push
mov
or
scas
fmul
test
xchg
xchg
addr16
or
mov
aaa
bound
aad
ds
in
mov
lahf
xor
pusha
scas
aaa
test
inc
adc
sbb
cs
in
mov
pop
addr16
arpl
fdivrs
lods
flds
imul
or
ds
fsubrl
push
dec
push
shlb
mov
inc
shll
adc
in
lods
icebp
mov
jne
sahf
shlb
pavgb
mov
mov
jnp
repnz
adc
push
add
jmp
push
adcl
mov
mov
add
mov
ret
fiadds
andb
xor
inc
dec
jmp
bound
pusha
std
stc
test
in
repz
ds
mov
adc
cli
call
push
xor
gs
hlt
jne
cmp
sbb
fstpl
ja
std
arpl
push
ficompl
mov
inc
test
ret
pop
fisubl
inc
jae,pt
popf
loop
int3
mov
in
aaa
cwtl
popf
mov
lret
cld
test
pop
lahf
cld
das
nop
nop
outsb
jno
lds
sti
jno
mov
imul
and
test
test
inc
sub
add
je
sbb
imulb
pop
outsl
cmp
lea
stos
sbb
test
and
popa
jecxz
adc
mov
adc
stc
ljmp
test
arpl
xchg
and
jl
sarb
iret
push
int3
push
pusha
adc
cwtl
fidivrl
stos
rcl
fsubrl
adc
push
mov
pop
stc
mov
and
cmpsb
ljmp
stos
popa
out
stos
out
out
and
mov
arpl
sub
popf
mov
pop
ds
sbb
movsl
adc
rolb
pusha
mov
divl
xchg
jnp
mov
add
lds
into
mul
test
outsl
in
cltd
adc
xchg
push
iret
mov
xchg
cli
xor
lahf
or
pop
arpl
or
orb
and
mov
inc
int
test
fbld
popa
cmp
ret
mov
xor
dec
pop
rorb
sbb
pushf
jle
cli
mov
ss
lret
call
and
sbb
in
jne
ss
xchg
das
pop
push
std
add
lea
repz
lahf
mov
stos
test
mov
pop
pop
fwait
add
cmc
xor
push
cmc
sub
lds
insb
lcall
daa
fisttpl
jns
jne
jae
sti
std
pop
lock
adc
popf
xor
push
fstpt
adc
jle
lock
add
inc
popf
sti
jae
sub
popf
jp
xor
lret
test
enter
stos
pop
into
mov
test
fistpl
out
shlb
pop
ds
mov
mov
xor
mov
and
mov
cld
or
mov
aam
loope
cmp
or
sbb
pcmpgtw
mov
mov
jp
add
fistpl
fisttpll
push
in
pusha
xchg
call
push
ror
mov
das
mov
cli
push
or
ret
jae
aas
mov
jne
and
xchg
test
mov
cs
lret
movsl
int3
pop
rolb
mov
sti
test
push
adc
rol
mov
inc
push
scas
mov
leave
adc
cs
aad
mov
inc
mov
dec
lea
pop
cmp
dec
movsb
mov
shll
add
dec
xor
int
mov
xor
dec
push
in
pop
mov
pop
cmc
cmp
adc
mov
leave
sbb
sub
cli
aam
xor
roll
push
repz
aam
mov
sub
lret
jge
outsl
jle
xor
xchg
test
les
dec
and
cmp
push
dec
pop
and
icebp
push
aad
pop
aaa
rcrl
rcrl
dec
int
sub
xchg
push
push
cmp
or
jae
fadds
and
pop
add
xchg
lahf
pop
xor
sahf
stos
loop
cltd
cmp
or
ja
xor
imulb
mov
lcall
stc
push
lret
mull
xchg
jmp
out
data16
sub
loop
and
in
mull
lret
adc
scas
jp
enter
jnp
test
cmp
hlt
sub
rclb
sahf
enter
or
sub
pusha
movsl
add
jne
jmp
jo
in
mul
mov
test
out
pop
flds
inc
mov
ret
jo
cmp
outsl
out
loop
fadd
sahf
jnp
notl
mov
out
roll
pop
testl
pushf
mov
data16
orb
rep
add
fwait
loope
and
or
cld
in
pop
bound
push
sub
ljmp
mov
daa
rcrl
outsb
xor
xchg
sbb
add
insl
movsb
mov
inc
pop
nop
and
xchg
ja
out
divl
inc
add
addr16
mov
or
mov
fld
call
repnz
jnp
pop
hlt
push
loop
fldenv
jne
add
sub
jp
mov
mov
jecxz
adcl
xor
leave
jp
popf
leave
or
or
andl
movd
shrl
adc
cmp
sbb
inc
push
lds
inc
addr16
pop
xlat
lods
dec
test
adc
out
lock
and
mov
call
xor
andb
movsl
call
filds
nop
fnsave
or
xchg
adc
fdivrl
repnz
shll
mov
xor
loopne
fs
push
pop
mov
lods
jnp
cmc
cmp
inc
adc
stc
inc
inc
leave
jbe
ljmp
jne
dec
das
inc
ljmp
fimull
lahf
dec
outsl
enter
inc
sub
rorl
fdivs
cld
sbb
in
jno
fwait
add
stc
orl
mov
mov
sbb
adc
pop
fs
push
mov
outsb
in
cmp
mov
mov
aam
lret
dec
pop
aam
jp
test
pop
movsb
repz
into
shl
sub
mov
jecxz
jns
jg
call
ss
outsb
mov
movsl
cmpsb
divb
fstl
imul
and
sub
add
sbb
pusha
cld
mov
mov
sbb
inc
aam
mov
popf
shl
es
sbb
xchg
adc
jnp
adc
fbld
mov
subps
sub
inc
xchg
sub
xor
pop
aad
push
cli
lods
add
jge
inc
adc
in
mov
or
cmp
ja
xchg
inc
rolb
dec
cmp
push
cmp
roll
and
cltd
jp
mov
nop
imul
fcmove
je
imulb
inc
fstpt
imul
jge
jmp
sahf
imul
popf
loop
dec
loopne
or
cmp
dec
mov
scas
icebp
lock
rcrl
adcl
bnd
jno
out
mov
rorb
push
pop
and
adc
inc
jae
add
xchg
sub
mov
lds
or
in
mov
insl
call
pop
popa
xchg
sub
cmp
imul
xchg
push
outsb
cmpsl
jbe
insl
nop
sub
sarb
push
xor
push
mov
pushf
in
stos
mov
inc
sarl
push
xchg
push
and
fidivrl
push
pop
add
shll
cmp
andb
cli
xor
sbb
out
loope
adc
lahf
into
loope
xor
xchg
adc
jb
mov
push
adc
push
ljmp
outsl
or
imul
ds
cltd
pop
bswap
or
jmp
mov
sub
push
cmp
pop
xor
data16
cmpsl
adc
shrl
mov
push
add
xchg
shll
mov
pop
sti
push
faddl
jae,pt
ljmp
ja
xchg
cmp
mov
add
test
aam
insl
mov
push
scas
xchg
xor
lds
std
mov
iret
fimuls
mov
add
sti
inc
jo
lahf
aam
mov
mov
xor
dec
outsl
push
xchg
sarb
fs
aad
pusha
xor
outsb
pop
popa
in
fdivrs
mov
xchg
xor
xor
rcrl
faddl
mov
clc
and
push
insb
pop
hlt
hlt
js
pop
cld
iret
loopne
cmp
fnstsw
and
mov
and
imul
mov
fcmovbe
mov
out
jbe
js
push
cld
pushf
mov
or
lods
xchg
cmp
inc
jmp
pop
mov
dec
jns
lret
sbb
mov
fimuls
xchg
enter
icebp
ljmpw
jbe
repz
dec
shll
jge
inc
enter
lods
fwait
inc
fwait
push
push
push
push
subl
pop
mov
mov
outsl
xchg
adc
lret
sbb
jo
push
subb
mov
cmpsl
sarb
data16
and
decl
xor
jg
jle
cmp
push
fisubrs
mov
int
push
imul
out
in
loop
vmwrite
mov
xor
push
dec
and
ss
rolb
mov
pushf
enter
pop
outsl
xlat
bound
push
xor
add
cmp
pop
jno
rorl
mov
xchg
fs
mov
ja
stc
stos
ret
aam
xor
xor
repnz
fmuls
cmp
das
sub
aam
cltd
cwtl
xor
movsb
xchg
call
ret
fsts
mov
into
xchg
mov
shlb
xor
add
add
test
xor
inc
scas
adc
test
insl
jnp
adc
mov
lea
cmpsb
or
sbb
sarl
je
lds
sti
lods
jno
sbb
sti
loopne
pop
dec
pusha
pop
dec
inc
bound
icebp
pop
movsl
adc
and
sti
xchg
cmp
into
push
cmp
push
in
cltd
hlt
cmp
es
dec
rol
xchg
movsl
stos
movsl
call
loopne
rorl
or
and
add
popa
leave
popa
cld
lds
neg
fldl
nop
push
inc
scas
orb
xlat
dec
shlb
divb
mov
lahf
mov
mov
in
cmp
inc
inc
aaa
aam
xchg
push
cmp
sbb
test
outsb
adc
xchg
mov
inc
stos
aad
fnstcw
xor
inc
mov
and
test
mov
xor
call
lcall
mov
add
sub
lods
adcl
lock
xchg
inc
cs
sbb
jg
arpl
mov
sub
mov
jno
andl
or
jecxz
pop
mov
pop
mov
call
cmp
paddsw
outsl
mov
mov
xchg
jl
mov
rol
mov
adc
scas
cmp
into
pop
sub
xlat
mov
mov
add
mov
mov
xchg
stc
sub
push
lahf
stos
mov
test
ljmp
ret
adc
mov
mov
add
fmull
sub
mov
pop
iret
out
push
mov
insb
out
inc
fidivrl
inc
xchg
negl
dec
icebp
dec
push
lret
cmp
xchg
out
nop
cmp
repz
xlat
dec
out
adc
leave
filds
nop
dec
sbb
inc
xchg
jecxz
pop
jmp
push
push
jl
or
ret
push
icebp
shll
dec
test
pop
mov
adc
sbb
loop
jecxz
pop
sub
lahf
mov
cltd
xadd
out
mov
push
cmpsl
stc
adc
dec
cmp
mov
jb
ror
aaa
jecxz
pop
jne
mov
movsb
movl
out
push
mov
stc
cmp
or
dec
xchg
sbb
mov
mov
fucom
jle
push
inc
add
ja
gs
jne
push
dec
outsl
cmpsb
js
push
in
lcall
dec
xor
insb
push
lret
ds
jl
lret
push
sub
js
call
test
sbb
mov
movsb
xchg
mov
mov
mov
pop
and
mov
sbb
aas
xchg
cmp
cwtl
pushf
mov
and
mov
xchg
int
adc
push
inc
arpl
aad
xchg
sbb
sarb
addl
xchg
dec
int
sahf
fcoml
fildll
scas
cmp
mov
adc
jl
incl
mov
mov
sahf
rcrb
xor
and
and
in
fnstenv
jns
lahf
sahf
rol
cs
add
nop
adc
sbb
test
dec
repnz
xor
ret
fildl
jns
xchg
pop
dec
nop
adc
popf
mov
push
mov
mov
mov
mov
mov
pop
xor
mov
icebp
pop
push
push
cmp
xchg
adc
xor
sbb
popa
int3
lods
loope
imul
or
test
clc
or
xor
and
add
cmpsl
pop
mov
sbbl
sahf
arpl
push
cltd
push
lods
mov
call
cmp
sbb
int
cmc
sub
mov
movsb
add
repnz
xchg
lods
ss
mov
clc
fistps
sbb
in
mov
mov
icebp
fldln2
or
mov
iret
xor
sbb
pop
arpl
mov
out
dec
sbb
jo
dec
pop
push
sub
jle
xorl
push
je
fildl
gs
in
js
ret
xor
and
fcmovnbe
cs
sbb
lods
movsb
scas
mov
stc
fs
hlt
dec
roll
mov
xchg
cmpl
pop
jns
inc
mov
arpl
loope
sub
mov
inc
mov
mov
jmp
je
gs
push
test
sbb
mov
test
mov
fldenv
jmp
clc
stos
xor
divb
movsl
fcomps
jl
movsl
daa
jl
jp
push
sarb
dec
int3
push
cs
cmpsl
pop
loop
or
lods
ret
stos
imul
cmpsl
sub
in
int3
adc
xchg
mov
or
inc
int
add
inc
into
mul
push
sarb
pop
xchg
dec
out
mov
idivl
jecxz
xchg
or
dec
rep
mov
in
mov
mov
cs
fcoms
repnz
int3
cmpsl
pop
mov
shlb
sub
xchg
push
push
sbb
dec
cs
mov
jl
sbb
test
aad
cwtl
push
mov
inc
test
out
imul
shr
arpl
lret
call
mov
fisubrl
mov
jbe
xchg
cmp
pop
push
or
aad
test
xchg
cwtl
adc
and
mov
dec
mov
std
or
inc
add
push
mov
adc
adc
or
mov
aaa
les
into
lret
sub
lods
gs
ror
push
mov
dec
push
pop
mov
std
cmp
and
add
adc
mov
adc
mov
mov
bound
incb
mov
cmp
fstpt
into
in
xor
and
repnz
rcl
mov
std
dec
adc
daa
aad
add
test
dec
cmp
bnd
jmp
inc
mov
or
or
inc
jae
out
and
in
pop
ljmp
dec
jno
loopne
scas
add
dec
mov
cmpsb
loop
and
out
insb
shlb
push
mov
js
xchg
pop
ror
popf
pusha
aad
cmc
jbe
es
jo
ficompl
insl
aam
mov
cmpsb
ljmp
shlb
sti
add
jae
cmp
gs
mov
into
mov
out
lea
push
jecxz
outsl
mov
stos
inc
push
pop
dec
pop
gs
inc
mov
and
negb
cmp
js
in
movl
and
loope
sbb
mov
cwtl
lret
pusha
sahf
test
idivb
fdivrp
frstor
push
orl
orl
cli
stos
loope
stc
add
sbb
mov
stc
aam
loope
loopne
fcmovbe
dec
loop
cwtl
sbb
adc
repz
xchg
xchg
push
ds
call
push
cli
das
insb
mov
pop
gs
hlt
outsl
mov
mov
test
fnstsw
mov
roll
and
fisttpl
lcall
shr
adc
dec
cld
add
sub
out
das
sahf
mulb
push
scas
nop
mov
xor
jg
les
loop
lret
sbb
push
test
stc
cmp
sub
inc
jbe
loopne
inc
sbb
or
test
das
or
sbb
xchg
sbb
jge
xchg
stos
rcll
cmc
das
jl
cmp
jno
and
xlat
ja
ds
or
adc
jecxz
dec
insl
popf
or
add
pop
out
or
sbb
ficompl
xor
imul
in
fdivrp
xchg
into
dec
ja
out
and
hlt
or
in
jp
push
mov
repz
lea
sbb
pop
in
lahf
test
js
test
iret
mov
mov
sub
jecxz
mov
inc
aad
shll
cmc
dec
jg
lcall
adc
push
cwtl
sbb
and
jo
inc
push
and
xchg
leave
push
adc
xor
daa
pop
inc
add
and
pushl
xor
imul
push
adc
or
cmp
addl
lods
xchg
mov
outsb
inc
jl
sub
test
mov
jnp
out
jg
dec
xchg
jo
cmpps
hlt
adc
fwait
repz
xor
call
out
and
xor
in
aaa
or
lea
dec
jo
jmp
dec
add
orb
fwait
in
push
cmpsl
iret
jp
xchg
adc
jbe
mov
pop
ljmp
mov
cld
pop
int3
int
insl
xchg
pop
shll
jge
popf
lahf
cmp
cmp
pop
mov
js
out
sbb
pop
fiadds
cmpsb
inc
inc
pushf
or
sbb
pop
jns
leave
xor
fldcw
or
and
sub
in
xchg
lret
sbb
test
mov
fs
adc
fs
or
imul
pop
test
mov
dec
orl
scas
test
lahf
sbb
fadds
mov
sub
sbb
push
call
add
sbb
and
pop
or
jge
sbb
push
inc
push
dec
out
xor
sbb
test
dec
jle
fsubrl
add
cmpb
and
mov
movsb
adc
fwait
xor
jl
movsb
add
jecxz
lea
imul
inc
xchg
jns
scas
fnsave
cli
pop
fidivrl
aas
pop
push
mov
repnz
hlt
mov
xorl
jmp
pop
enter
xchg
cli
rolb
cmpsl
push
mov
sbb
lods
call
fisttps
outsl
adcb
adc
xor
push
fildll
je
add
mov
daa
push
xor
lods
dec
rcll
xor
outsl
fwait
adc
xchg
sub
out
cmp
ficomps
aam
cwtl
or
fildll
inc
push
out
jg
shlb
and
sbb
pop
int3
mov
cld
and
pop
test
mov
ss
sahf
das
pop
lock
mov
xchg
repz
and
int
sub
rolb
xorl
fdivl
xor
fs
daa
sub
ja
and
lcall
inc
fdiv
xchg
sub
out
andb
and
xchg
inc
sbb
xor
or
mov
jns
sbb
subb
xchg
popl
mov
or
xorl
xchg
clc
dec
lock
das
or
stc
jmp
mov
jmp
push
imul
inc
push
in
fmuls
xchg
rolb
enter
fidivl
fsubrl
add
insl
pop
push
out
call
mov
lret
or
cwtl
jnp
insb
jecxz
out
cmp
xlat
mov
mov
pop
repnz
stc
subl
fidivrl
adc
jle
pop
stos
xor
lcall
or
sub
lea
movsb
ret
jnp
movsl
mov
push
mov
mov
movsb
in
iret
or
push
mov
inc
lret
in
insl
sbb
sbb
enter
cmc
mov
jge
jge
xchg
mov
or
jns
mov
mov
pop
add
test
or
shlb
mov
xchg
cmp
cmp
cmp
movsb
repnz
inc
mov
pop
aam
xchg
xchg
mov
fildl
aam
scas
xchg
loope
data16
xor
hlt
or
out
test
sub
adc
les
cmp
and
push
les
rcr
xor
sub
ja
mov
add
les
xor
push
ret
xor
lea
repz
sbb
je
cmp
jle
push
fistpl
add
push
shlb
imul
inc
push
mov
and
fdivp
sti
rcl
loopne
and
xchg
lahf
cmpsl
sbb
mov
into
and
cltd
mov
inc
cli
jne
orl
mov
int
xor
out
ja
test
outsl
mov
push
or
cld
sbb
pushf
push
mov
stos
in
sbb
idiv
loop
inc
mov
lret
insb
push
jge
cli
cmp
cmp
stos
jl
rcrl
loopne
push
xchg
orb
pusha
popf
gs
int
ja
iret
popa
sti
sbb
test
push
into
mov
aas
call
sahf
test
cwtl
fildll
fsubr
das
inc
aam
lret
popf
icebp
sub
or
or
or
dec
adc
adc
mov
insb
xor
in
scas
ljmp
mov
sub
mov
stos
jge
stc
addr16
sub
loop
cmp
add
sbb
jbe
adc
rolb
mov
insb
es
sub
push
sub
xchg
dec
xor
sarl
sbb
sbb
mov
xor
outsl
stc
out
and
sahf
pop
pop
pop
pop
inc
aam
jbe
adc
push
xchg
and
mov
mov
in
adc
movsl
int
popf
and
and
pop
js
vpsubsb
and
gs
test
ret
rorl
adc
or
pop
pop
cwtl
dec
mov
pop
sbb
or
pop
pushf
les
arpl
lods
sbbb
xor
imulb
sub
mov
aam
int3
and
in
mul
push
clc
sub
inc
fsts
add
jge
enter
dec
mov
adc
packssdw
sub
sub
ret
cmc
mov
pop
fs
sub
in
mov
or
adc
dec
cmp
pop
jecxz
xchg
dec
sub
push
push
add
loopne
pushf
icebp
lods
inc
fists
jb
xchg
sub
pmaxub
nop
jecxz
mov
cmpsb
cs
sub
add
inc
xchg
fs
lret
test
pop
or
sub
or
rolb
lea
mov
sbb
dec
in
xchg
xchg
pop
ljmp
int
push
mov
rorb
push
test
xchg
mov
mov
in
shlb
sub
fldz
and
aam
push
sub
pop
mov
mov
icebp
mov
mov
ss
icebp
mov
in
js
fdivrp
enter
xchg
add
xor
aas
push
mov
mov
les
adc
inc
lret
movsb
lret
push
or
pop
push
das
and
cmp
or
popf
push
in
mov
cmp
jbe
mov
ret
xor
push
mov
jp
add
ss
jns
jns
jecxz
cmp
aam
repz
jge
fwait
mov
push
inc
xchg
fiadds
mov
add
frstor
pop
mov
mov
loope
int3
loopne
or
les
sub
cmc
pop
jp
nop
testl
ds
cmp
call
cmpsl
in
fcompl
stos
mov
std
adc
scas
lcall
fildll
or
lods
adc
test
neg
shrl
js
out
sahf
pop
push
cmp
int3
scas
pop
cmc
xlat
in
lea
lret
push
mov
scas
jle
sbbb
xchg
cmpsl
jmp
pop
add
mov
or
cmp
add
mov
xor
mov
imul
movsb
push
ds
int
gs
enter
mov
sub
jmp
add
pop
mov
call
movsb
dec
jns
xchg
push
add
add
and
lods
xchg
push
or
imul
jnp
in
mov
addr16
xchg
xchg
call
push
inc
cwtl
mov
cmc
mov
repz
add
lods
adc
das
cmpsl
ret
push
push
std
insb
aad
jmp
push
scas
push
or
mov
bound
clc
xchg
adcb
cs
sarl
int
fwait
mov
xchg
fsubrs
or
jge
sub
repnz
pushf
fbld
test
xchg
shr
sub
inc
xchg
cmpsl
xor
icebp
xchg
js
mov
jl
addr16
jecxz
pop
fcom
pop
push
jg
ss
add
or
sbb
cs
adc
xchg
and
mov
xor
mov
push
pusha
sub
mov
mov
pop
sbb
jae
jb
repnz
mov
push
call
lret
xchg
pop
jne
arpl
fwait
mov
add
lds
shl
or
lods
out
cltd
push
js
cmc
lret
or
mov
push
test
loope
lods
dec
xchg
popf
sbb
pop
push
or
mov
cmpsb
je
mov
insl
ret
pop
fiaddl
scas
popf
or
cwtl
out
mov
icebp
mov
cmp
daa
jle
jecxz
dec
aaa
push
lock
mov
pop
sbb
mov
cmp
jo
insb
mov
test
cmp
inc
les
jg
in
je
insb
adc
iret
mov
sub
jecxz
enter
mov
decl
ss
push
stos
out
int
movsl
test
daa
sub
cld
adc
push
cltd
mov
ljmp
mov
cmp
cs
xchg
out
loopne
pop
imul
push
xor
cmp
mov
pop
lret
push
cmc
divl
fildll
dec
sarl
xlat
mov
mov
mov
inc
inc
test
mov
es
fldcw
or
jl
jbe
or
xlat
aad
pusha
popf
sbb
sbb
push
pop
push
pusha
pop
aam
aaa
popa
jl
add
adc
into
adc
fbstp
addl
pop
repz
pop
jo
adc
gs
in
cld
push
pop
gs
lret
ljmp
dec
cmpsl
cwtl
cmp
mov
push
xor
int
loope
push
sbb
pop
adc
jecxz
jg
cmc
leave
xchg
jno
test
or
jnp
add
push
xchg
fadds
or
mov
push
data16
stos
rdmsr
aad
lea
in
jge
xchg
movhps
int
loop
fs
cmp
mov
subl
lret
out
sub
enter
push
roll
dec
adc
inc
push
decb
fsubs
xchg
inc
cwtl
int
inc
push
sub
dec
pop
inc
pop
bound
cmc
cs
lods
jmp
mov
out
loop
lea
xor
pop
mov
movq
xor
mov
movsl
lret
cmp
aaa
add
mov
cmpsl
lret
mov
push
push
ror
mov
loopne
mov
shrl
xor
sbb
outsb
mov
push
push
sbb
sbb
cmp
addr16
mov
jl
adc
jge
mov
outsl
jae
int3
mov
adc
stos
js
pusha
push
shlb
mov
lahf
cmp
push
pop
imul
push
sbb
pop
or
and
cli
jne
push
inc
cmp
pop
aam
fdivrp
sub
adc
out
mov
add
enter
fstpt
stc
add
add
stos
inc
je
loope
mov
mov
mov
push
mov
jl
adc
push
mov
hlt
push
loop
popf
jbe
fdivs
sub
imul
imul
sarl
movsb
jmp
add
cld
push
insl
pop
jbe
rclb
orb
sbb
push
sub
frstor
xor
inc
aas
pop
sbbb
in
scas
inc
ss
cli
fnsave
xchg
inc
pop
shl
call
and
rcrb
pusha
dec
in
popa
clc
and
jge
add
int3
addb
sbb
lods
xor
jb
fs
jae
out
xor
jle
pusha
roll
dec
push
imul
ds
dec
pop
jne
jp
dec
mov
add
sbb
adc
jno
xchg
mov
loope
xor
mov
add
and
int
sbb
xor
xchg
loop
sub
jp
sub
sub
movsl
xor
daa
pop
cmpsl
jb
test
push
or
gs
mov
add
and
mov
add
jnp
dec
jb
mull
mov
outsb
push
sub
out
sahf
sahf
pop
out
mov
push
test
dec
xor
push
imul
mov
sub
fsubl
jmp
jle
mov
inc
repz
incb
shrb
adc
call
adc
mov
jecxz
fcmovu
mov
int3
imulb
xchg
sbb
pop
and
mov
mov
mov
xchg
in
rorl
cmp
xchg
es
js
ljmp
jmp
pop
dec
aad
iret
shl
mov
std
mov
adc
into
call
sub
xchg
les
add
hlt
cmpsb
adc
xchg
iret
cmp
mov
jle
cmpsl
push
pop
popf
jnp
fdivl
lcall
adc
imul
and
dec
adc
pop
mov
js
movsb
sbb
sahf
in
inc
test
add
pop
inc
mov
xchg
icebp
loop
adcb
push
in
aam
sbb
mov
or
xor
sub
push
mov
cltd
pop
mov
xorl
int3
outsl
cmp
push
inc
mov
inc
or
fnstenv
insl
cmp
dec
xor
add
int
fs
movsb
dec
dec
dec
xor
xchg
mov
cmp
cmp
mov
lahf
sahf
or
fs
fwait
scas
cmc
arpl
cmpsb
mov
xchg
and
mov
jecxz
insb
outsb
js
mov
add
cs
pop
cmp
rcl
xchg
cmp
imul
sub
mov
mov
jl
xchg
jmp
rorl
cmp
sub
adc
lock
out
imul
mov
jne
push
jae
or
lods
mov
or
subb
dec
inc
adc
inc
inc
jl
mov
sub
lds
fwait
call
jg
mov
pushf
add
or
mov
repz
sub
pushf
adc
push
cwtl
adc
sbb
scas
cli
add
pop
mov
dec
sub
inc
lods
in
aaa
rcl
sbb
and
mov
lock
jbe
jne
lock
cld
pop
add
cmpsl
jae
adc
cmp
sbb
adc
sti
adc
shll
sub
cwtl
enter
ret
repz
cmp
leave
cmp
dec
or
popf
psubd
mov
or
push
bound
gs
or
cltd
imul
or
aad
subl
mov
fcmovb
pop
mov
in
push
jb
add
jmp
add
add
stos
pop
pop
lret
movsb
stos
bound
leave
dec
lods
jecxz
stos
adc
and
push
cmp
pop
aaa
xor
jmp
fstl
cs
and
dec
xchg
dec
out
dec
inc
jo
into
frstor
je
inc
loope
enter
call
mov
pushf
add
mov
xor
aas
jge
mov
cwtl
out
lods
adc
aad
dec
push
mov
fwait
gs
in
push
jne
in
shl
call
das
pop
dec
nop
daa
xchg
cmpsb
outsb
mov
mov
adc
sbb
int
daa
mov
outsb
decl
scas
je
adc
pusha
bound
bound
cld
clc
adc
mov
dec
and
adc
sarb
xchg
int3
outsl
and
dec
push
pop
mov
aad
pop
cltd
cwtl
sub
jl
scas
ret
out
inc
pop
xor
cmpsb
jne
rdmsr
stc
pop
xchg
push
cwtl
hlt
lods
adc
roll
add
push
dec
cmp
jo
call
and
cmp
xor
xor
jae
adc
repnz
ljmp
inc
int
push
jne
rolb
sbb
imul
pop
push
inc
xor
xchg
xchg
jmp
mov
imul
adc
mov
sbb
pop
jnp
dec
adc
rol
mov
pop
cli
mov
rcr
mov
lret
imul
pop
pop
lock
or
sub
mov
adc
xchg
movsl
push
cmp
inc
sub
lods
orb
or
mov
xchg
test
int
fiadds
push
arpl
iret
jle
xchg
dec
repnz
sbb
add
hlt
int
sub
fidivrl
out
in
mov
repz
imul
and
das
mov
outsb
mov
xor
test
idivb
loopne
xor
xor
xlat
pop
jae
stc
gs
jb
push
adc
jecxz
dec
rcr
test
out
jb
inc
mov
sub
mov
test
data16
sahf
addb
pusha
pop
pop
stos
add
adc
in
dec
pop
xlat
mov
push
sub
or
lcall
inc
repnz
mov
les
dec
das
rclb
jp
add
sub
inc
push
cmp
push
movl
ljmp
test
jno
mov
jns
adc
add
dec
jmp
adc
add
lock
stos
dec
imul
pop
jmp
push
jno
push
divl
insl
mov
das
rep
mov
cmp
mov
fimull
sahf
inc
mov
addr16
pop
andl
mov
pop
jno
inc
push
inc
mov
lahf
xchg
cs
xchg
scas
inc
call
jl
or
out
cmp
leave
xlat
fmull
inc
pop
xchg
roll
rcrl
cmp
bt
in
add
inc
xchg
loop
or
mov
cmp
or
dec
enter
sub
jle
data16
dec
leave
fsubp
icebp
mov
ficoml
mov
mov
mov
sbb
mov
std
sbb
sbb
lods
mov
ja
adc
mov
or
iret
fwait
aas
mov
xchg
adc
jl
pop
in
aad
xchg
gs
mov
jmp
inc
jns
mov
arpl
sbbb
adc
dec
sti
loopne
adc
xchg
jbe
fmull
roll
mov
jno
imul
dec
inc
or
stos
stos
dec
inc
cmp
mov
data16
aas
add
popf
xor
shlb
mov
nop
leave
pop
imul
mov
ds
cwtl
in
test
dec
inc
into
xorb
dec
fdivrl
adcb
jbe
mov
ss
lods
cmpb
mov
and
mov
mov
jo
roll
movsb
mov
stos
jmp
mov
or
add
imul
inc
movsl
mov
pop
mov
mov
cmp
leave
or
pop
add
mov
shll
dec
xor
icebp
lahf
jmp
fdivl
xchg
pop
push
icebp
cli
lret
lret
or
and
cwtl
inc
mov
aas
out
jle
push
add
lods
cltd
das
jecxz
pop
dec
xor
insl
je
or
shlb
push
and
add
cli
subl
or
cwtl
xchg
xchg
mov
xor
sbbl
xor
mov
mov
inc
adc
xchg
jne
mov
ret
jecxz
in
insl
inc
push
in
and
lcall
xchg
jle
pop
lds
cmp
inc
pop
in
add
jmp
ret
push
mov
jle
aam
sub
jmp
into
push
inc
imul
push
cwtl
mov
pop
outsb
mov
je
ljmp
mov
lock
mov
mov
jmp
fisubs
jmp
dec
outsb
inc
std
push
shrb
clc
cmp
mov
xchg
inc
push
dec
negb
arpl
xchg
sbb
mov
adc
fsubs
jno
add
cmp
cmp
pusha
xorb
loopne
sub
negl
stos
mov
jge
push
insb
imul
cmpsl
or
in
daa
stos
sbb
jg
add
ss
push
pop
lock
dec
jne
clc
pop
xor
inc
lret
scas
scas
fnstcw
jno
push
into
add
dec
gs
cmc
pop
data16
outsl
mov
dec
idivb
jle
xor
adc
xor
sbb
das
sahf
clc
lahf
in
and
rcr
nop
icebp
xor
pop
and
sub
lds
push
cmp
fsubrs
ds
mov
out
xor
xor
stc
mov
movsb
sti
leave
rcll
std
test
cmc
cmpsb
sub
or
ljmp
push
fidivrs
rorl
and
flds
les
jnp
add
hlt
lret
push
xor
lret
xor
gs
cmovnp
mov
daa
bound
sti
shl
dec
bound
int3
adc
add
pushf
ljmp
adc
and
out
dec
in
push
or
push
push
dec
sbb
mov
out
sbb
pop
pop
je
lret
or
mov
pop
sub
inc
test
test
aad
test
repz
mov
pop
test
dec
sbb
push
jne
adc
sahf
incl
sbb
mov
inc
mov
inc
cld
leave
push
aas
pop
cmp
enter
fcompl
es
outsb
jae
jnp
es
aas
mov
or
fmull
popa
add
dec
decb
ss
jns
outsl
push
xchg
int
jne
lret
and
mov
dec
fs
jg
push
adc
push
aaa
daa
and
inc
mov
xor
add
push
psubsb
push
push
dec
push
imull
cmp
cmp
ljmp
pop
or
adc
inc
aam
int
or
mov
ljmp
mov
icebp
repz
in
ds
dec
xchg
mov
or
add
popf
andl
cmp
push
fs
or
inc
gs
jns
sbb
jnp
or
cmp
dec
adc
cli
adc
xchg
cmp
test
and
cmp
ss
fildl
inc
jno
mov
lret
add
clc
add
xor
inc
jecxz
cmp
push
cmp
or
das
pop
aas
jae
test
popf
lcall
call
fisttpl
clc
cmp
xchg
movsb
push
inc
fwait
pop
mov
mov
rcll
push
mov
mov
jmp
out
fcoml
add
add
lahf
fcomps
sahf
xlat
fistps
cli
fsubrl
push
out
cmp
xchg
lret
fwait
mov
ss
and
inc
pop
popaw
das
cmp
cmp
gs
scas
xchg
sub
pop
mov
pop
sarl
push
insl
adc
or
daa
scas
mov
pop
add
aaa
jle
add
mov
enter
pop
sub
xlat
lahf
ja
aas
and
ret
pushf
jne
sbb
fbld
xchg
test
inc
mov
outsb
std
sbb
fwait
push
aam
jge
pop
inc
pusha
jl
lods
sbb
pop
xor
mov
ds
push
cmp
xor
xor
push
dec
xchg
xchg
pop
jbe
popf
fisttpll
aad
ds
scas
rcrl
test
push
inc
jns
enter
cli
adcb
icebp
icebp
cmp
test
fistpl
and
pop
jg
mov
pop
sub
jne
cld
jo
mov
adc
sbb
xchg
cmp
fadd
push
jg
push
test
push
jmp
mov
ja
movsl
cltd
inc
inc
jnp
popa
test
shr
filds
ljmp
je
jmp
ss
cltd
das
sub
lahf
push
pop
ret
adc
insl
dec
mov
cmp
and
hlt
jl
ja
test
xor
lods
adc
push
mov
roll
sbb
outsb
push
clc
cmp
pop
mov
das
popa
in
pop
aas
cs
mov
lock
mov
pop
das
cld
mov
mov
leave
push
icebp
and
mov
dec
mov
xchg
stos
jp
inc
insb
cmp
sub
mov
xchg
lret
xor
and
xchg
loopne
push
mov
lock
mov
jnp
mov
jbe
loopne
mov
cmp
iret
pop
lahf
sub
cmp
sub
push
push
and
fistps
inc
testb
sahf
fadds
outsb
fs
sub
ja
dec
cmp
aad
dec
and
and
repnz
clc
dec
and
divb
hlt
inc
xlat
inc
or
leave
nop
sub
in
mov
inc
stc
mov
subl
push
lret
enter
movsl
jns
xchg
es
stos
pop
cmp
jle
je
js
sub
cli
adc
sub
std
xchg
xchg
loope
popf
xor
lods
aaa
repz
xchg
dec
pop
loopne
fs
dec
jmp
fcompl
push
mov
in
dec
jb
push
pushf
loope
push
mov
fbstp
bound
cmpsl
imul
or
out
xchg
fwait
mov
mov
xchg
push
fxch
fstps
and
add
rcll
sbb
or
jno
mov
jg
push
cltd
push
arpl
call
pop
das
loop
rclb
in
cmp
mov
push
xchg
inc
pop
pop
or
into
test
cmp
push
into
mov
push
cmp
mov
out
cmp
aam
mov
push
lret
and
adc
fwait
jbe
pop
add
popf
mov
push
pushf
daa
popf
loope
in
je
aaa
sbb
insl
sbb
fmull
aas
cmc
pop
repz
int
lcall
mov
jge
js
xor
bound
mov
pop
enter
inc
push
imul
cmp
pop
rclb
js
mov
inc
mov
pop
out
roll
leave
lods
stos
adc
jns
shll
mov
test
test
jge
dec
xchg
adc
inc
and
lods
std
mov
arpl
xor
sti
push
mov
inc
jns
xor
test
or
sbbb
or
iret
mov
mov
pop
inc
and
jno
movsl
or
sub
and
add
lods
nop
jbe
repz
das
xor
lds
xor
pop
lds
xchg
lods
xchg
imul
jl
notb
loop
mov
imul
int3
loope
add
hlt
or
push
sub
add
inc
daa
aaa
xor
jns
sbb
inc
sbb
cltd
sbb
or
adc
sti
push
in
shr
xchg
out
sub
repnz
jl
mov
and
mov
lret
fmuls
xor
inc
cmp
dec
loop
mov
or
mov
mov
scas
ds
inc
repnz
iret
and
addb
xchg
fadds
lods
bound
ja
or
push
popf
fisubrl
jnp
lret
fidivs
dec
sub
movsl
dec
xchg
jbe
xor
pushf
sbb
xchg
xchg
lret
adc
cmpsb
out
adc
adc
sbb
or
inc
mov
rcl
enter
pop
aad
dec
outsl
sub
jno
fcmovnb
xor
dec
xchg
adc
loop
cmpsb
sub
mov
sub
inc
jl
mov
cmp
test
jb
sti
movsb
aam
sbb
or
push
push
jnp
pop
cmc
imul
mov
jmp
xlat
push
stos
inc
sub
sub
or
fwait
orl
les
xor
nop
or
mov
dec
sub
lds
hlt
lods
fdiv
sbb
or
mov
lds
xchg
cmpsb
add
mov
inc
fucom
test
push
popf
rcll
frstor
test
xor
clc
imulb
icebp
mov
pop
cltd
sub
adc
sbb
aad
fcom
push
xor
mov
sub
or
les
fwait
pop
lods
iret
mov
imul
data16
test
push
cmp
out
out
push
js
ljmp
jns
ret
ja
sbb
cltd
mov
in
pop
test
mov
sbb
jno
lahf
push
repz
imul
in
sbb
cli
and
sbb
nop
fisubrs
add
mov
inc
xor
dec
push
push
fisttpll
jne
repz
xor
ja
xchg
and
add
iret
enter
add
inc
pushf
dec
stc
cmp
sbb
inc
ret
sbb
cmpl
add
inc
inc
jne
and
push
into
dec
jne
xor
xor
mov
inc
pop
mov
ss
xor
popa
aam
loopne
stos
mov
mov
xor
es
jno
dec
repz
adc
adc
inc
lock
aam
dec
cmp
cli
aaa
mov
out
adc
jns
shrl
and
pop
xlat
xor
out
aam
sub
sbb
mov
ret
fmul
int3
xor
aam
add
sbb
fdivs
sub
mov
inc
jns
and
xchg
inc
jno
lahf
enter
and
or
imul
leave
aaa
gs
lea
lds
int
jae
mov
inc
push
test
mov
out
adc
call
push
aaa
and
cs
das
clc
jo
push
mov
xor
cmp
pop
mov
stc
fwait
movsb
fbld
data16
cld
jp
mov
and
xor
iret
je
pop
mov
inc
imul
out
xor
fcmovu
fs
mov
or
insl
pop
fs
out
inc
pop
or
and
cwtl
repz
cltd
jle
inc
out
push
xchg
sbbb
out
push
testb
ja
rolb
dec
movsl
mov
push
int
jge
into
test
push
lds
shl
pop
and
leave
lods
sub
mov
or
mov
out
fld
cmpsb
stos
stc
orl
push
push
xchg
call
dec
cmpsl
ret
jo
sarb
jge
jb
jmp
pop
mov
mov
sub
leave
sar
add
sbb
mov
sbb
dec
sbb
test
orb
enter
andl
sbb
lods
rcll
lods
mov
add
mov
dec
jmp
mov
dec
adc
scas
dec
dec
cwtl
scas
pusha
pop
stos
mov
orl
aad
ret
mov
mov
in
pop
ds
addr16
pusha
fcomps
jo
inc
push
xchg
cmpb
sti
clc
loop
dec
xor
jle
imul
fcoms
pop
push
push
sbb
dec
outsl
nop
sub
js
cmp
mov
daa
cmpsl
adc
jge
mov
sub
mov
shrb
jle
out
sbb
sbb
lcall
inc
xor
sti
jg
popf
dec
ret
dec
cmp
push
cmp
xlat
push
hlt
lcall
imul
sbb
test
mov
rclb
jl
cmp
sti
lret
inc
imul
jns
or
sub
arpl
fld1
or
mov
popf
pop
or
cmp
jo
in
pop
sub
dec
sub
aas
jmp
push
leave
lock
add
pop
push
out
imul
mov
add
ror
xor
leave
sbb
pop
push
sti
fsts
fwait
mov
rorl
into
dec
fbstp
test
les
and
pop
xlat
pop
cmp
leave
popf
inc
pop
mov
add
je
lcall
imul
test
les
js
arpl
inc
jmp
es
addr16
xor
sub
mov
shll
sbb
lret
pop
ljmp
jb
jo
and
sbbl
es
fcompl
adc
push
outsb
loop
daa
enter
adc
cmc
fdiv
je
sbb
cmp
mov
add
push
test
push
sbb
lock
testb
dec
mov
enter
xorl
pop
data16
adcb
inc
adc
add
mov
rcll
js
inc
xchg
ljmp
psrlw
push
xor
and
push
mov
rorb
sbb
jbe
cmp
cs
adc
pop
std
mov
inc
pushf
js
fstpt
lret
insb
jg
mov
sbb
insl
mov
add
pop
sub
inc
js
sti
pop
push
rcrb
scas
xchg
mov
pusha
add
cmpsb
orl
push
jp
xor
adc
mov
aas
inc
fs
repnz
das
mov
mov
das
dec
fdivrs
jmp
pop
in
ljmp
push
adc
imul
add
mov
or
sub
pop
ficompl
dec
stos
pop
aad
add
outsb
inc
into
leave
sub
pop
or
and
outsl
lock
aad
je
cltd
js
mov
push
clc
or
mov
push
push
push
xchg
adc
jno
mov
lahf
mov
push
rcl
fistps
iret
dec
or
xchg
cli
sbb
loope
add
pop
pushf
push
insb
fdivp
add
mov
lods
mov
sbb
pop
aaa
test
xor
push
and
cmpb
xchg
push
fsave
cmp
add
lcall
dec
test
mov
pusha
fldcw
mov
inc
inc
in
fwait
lret
repnz
aas
pop
repz
push
imul
or
in
fbld
imul
cwtl
cmpsb
sbb
outsl
xchg
mov
out
lret
xchg
pop
add
or
xchg
shll
mov
orb
and
jb
push
jne
shlb
incb
push
xchg
add
xor
xor
and
add
aaa
ja
fwait
aaa
icebp
xchg
sbb
lods
mov
lock
sbb
sbb
loopne
scas
xor
mov
dec
lods
or
insb
push
pushf
sub
mov
add
mov
cli
stc
mov
inc
pop
in
lret
and
sbb
push
aad
inc
mov
fstps
repz
sbb
pop
cmpsl
in
repz
push
lods
xchg
jecxz
xchg
push
ret
je
add
lods
mov
ret
and
out
fidivs
push
add
scas
push
pop
mov
xchg
jne
ja
jg
fadd
shrl
pop
mov
inc
push
add
and
stos
inc
pop
fcoms
sbb
adc
in
test
sbbl
mov
leave
add
adc
xchg
mov
jg
cmp
or
sbb
outsb
jg
jg
pop
fnstsw
repz
inc
and
xchg
sbb
in
mov
ds
fdiv
arpl
lahf
dec
xchg
aaa
je
push
scas
and
xor
sbb
mov
inc
incl
sbb
lods
dec
rcll
lods
cmp
imul
lcall
es
movsb
loopne
cld
pop
in
xor
mov
repnz
clc
pop
js
mov
jge
lods
jnp
mov
aad
jae
adc
pop
pop
movsl
add
hlt
sub
ret
ds
jmp
pop
sbb
inc
call
xlat
fcmovnbe
addr16
mov
shl
into
pop
jne
call
inc
adcl
mov
call
pop
add
je
mov
or
out
pop
push
cmpl
add
out
push
lock
mov
enter
aam
xchg
clc
scas
mov
dec
out
dec
loope
dec
ss
xchg
xchg
pop
mov
mov
adc
idivb
jle
fnstcw
push
rclb
inc
inc
inc
cmp
or
sbbl
loop
shll
out
jecxz
push
insb
xchg
inc
out
mov
mov
jmp
xchg
mov
fidivl
popf
lods
scas
pop
nop
and
cmpsl
pushf
es
jmp
ret
inc
fists
out
mov
push
arpl
mov
cmpsb
inc
addl
mov
nop
int
nop
rcl
xchg
or
gs
xor
mov
push
mov
dec
dec
push
or
pop
mov
mov
jae
frstor
scas
fsts
lock
sub
mov
jns
push
xchg
xchg
in
pop
in
addr16
out
mov
adc
lret
jecxz
xor
dec
lfs
jae
shll
dec
inc
sbb
cld
rcrb
inc
pop
mov
sbb
cld
jg
xor
scas
sub
aas
add
adc
cmp
int
jl
loope
mov
xchg
ret
mov
inc
inc
sbb
cld
repz
je
adc
fnstcw
pop
jno
mov
out
xor
stos
test
dec
popa
xchg
pop
test
xor
xchg
jl
aad
or
scas
xor
mov
fbstp
pop
scas
lahf
cmp
lahf
aaa
mov
add
ret
or
fcmovnu
fldt
mov
popa
pop
xor
or
lods
aad
pop
sbb
xchg
mov
pop
and
bound
sbb
in
das
mov
jl
lcall
rcll
xchg
jnp
gs
jbe
dec
sbb
ja
rcrb
into
jnp
sti
fistpl
push
inc
shl
lret
push
sbb
and
fisttpl
sti
ljmp
lahf
add
xchg
xchg
cmp
mov
imul
inc
inc
std
das
lea
adc
dec
cmp
sub
fwait
push
jnp
jb
xlat
stos
nop
mov
lods
pop
scas
je
dec
into
fadds
lods
shll
decb
mov
psllw
aad
xchg
mov
insb
or
ljmp
adc
inc
lods
or
aaa
and
push
fdivrs
adcl
dec
xor
cmp
sbb
xor
pop
nop
into
sahf
jnp
mov
mov
popa
insl
in
imul
arpl
pusha
jmp
pop
xor
aam
movsb
xchg
rcll
mov
in
sub
es
mov
dec
jnp
dec
xor
fstl
fistps
lcall
mov
orl
push
mov
mov
adc
cs
std
inc
dec
pop
mov
iret
gs
imul
xchg
sti
js
inc
notb
and
mov
mov
mov
cmp
jne
add
cmpl
loope
cmpl
mov
aad
adc
fs
push
fstpt
push
stc
scas
sbb
inc
ss
or
fcmovnu
repz
xchg
or
xchg
jmp
pop
add
pop
mov
push
rorb
xor
and
xor
xor
cli
jmp
ret
or
test
pop
mov
testb
ret
xchg
push
cwtl
cwtl
mov
pop
inc
repz
or
mov
jge
jne
movsl
mov
stc
leave
addr16
jns
mov
push
dec
sti
mov
cwtl
sete
or
xchg
stc
sbb
dec
or
jbe
jle
push
mov
sub
mov
mov
xchg
andb
jbe
pop
lahf
lret
iret
clc
in
xchg
ror
mov
lods
mov
cmp
mov
sahf
inc
hlt
pushf
das
leave
sub
cmp
arpl
das
into
enter
jns
push
lret
out
popf
test
xor
daa
std
adc
dec
xor
lods
out
fisttpl
lcall
pop
cltd
daa
enter
sbbb
push
push
imul
lods
and
rcr
popa
jno
inc
xor
pop
mov
mov
jb
cltd
sahf
blci
push
lret
dec
mov
outsb
mov
mov
push
into
pop
stos
mov
outsb
and
pop
inc
pusha
pop
push
mov
lods
sti
and
pop
inc
dec
adc
outsl
jg
rolb
inc
out
mov
shll
add
out
shrl
and
mov
lods
dec
sbb
insb
subb
or
mov
mov
mov
ja
dec
orl
das
push
mov
lds
imul
push
shl
inc
imul
sub
adc
jae
int
sti
inc
loop
fdivl
mov
cli
testl
or
push
mov
mov
dec
popf
and
leave
aaa
test
push
cmovns
inc
ja
lret
lcall
jecxz
push
xchg
out
jae
arpl
jbe
rcrb
aam
test
test
cwtl
rcrb
test
and
push
fldcw
in
imul
shrb
sbb
aas
in
sub
mov
mov
stos
fiaddl
cli
push
add
add
inc
fs
insb
pop
lods
in
lret
push
daa
in
inc
lret
xlat
cmpsl
sbb
pop
stos
lret
mov
fchs
arpl
roll
cli
clc
std
push
lea
cmp
sahf
fistps
xor
and
sahf
sbb
mov
jge
imul
out
lret
cli
int
lds
sbb
into
sbb
ja
cmp
decb
or
movsb
jmp
mov
cmp
enter
arpl
or
push
fcompl
xor
mov
out
jbe
int3
ljmp
push
xor
iret
fcmovbe
lea
movsl
into
mov
dec
nop
dec
mov
sub
adc
and
push
adc
daa
stos
out
lock
mov
pop
jnp
cmp
loopne
mov
xchg
sti
jg
jl
daa
cmpsb
xor
mov
lods
dec
icebp
or
and
jecxz
or
mov
ror
cld
mov
stos
mov
adc
cli
sub
insb
cmp
mov
stos
test
pop
in
fstl
xchg
mov
test
mov
push
or
and
xchg
cmp
mov
repnz
push
push
and
fimuls
push
jl
push
jge
add
cli
pop
xchg
sub
jmp
aad
scas
clc
xchg
test
fs
xor
dec
insl
jge
stc
mov
sub
jp
out
mov
mov
lods
mov
cmc
orb
fwait
in
fcomps
clc
xorb
lret
and
or
jno
adc
dec
mov
nop
jb
add
pop
insb
std
xchg
mov
adc
test
adc
fs
inc
mov
sbb
repz
jmp
and
jno
sub
jle
mov
pushf
cltd
pop
and
lds
scas
insb
xor
xor
in
add
lret
xor
mov
sub
out
xchg
repnz
sbb
or
mov
pop
sahf
sti
test
aas
je
lret
add
dec
pushf
xchg
pop
int
pop
mov
cmpl
mov
pusha
clc
lret
pop
cli
adc
push
bound
sarb
sub
icebp
gs
adc
scas
pop
nop
xor
int3
fidivl
dec
ficoms
into
jmp
scas
lods
jae
mov
divb
ret
jle
jecxz
mov
out
pop
sub
clc
mov
and
mov
sbb
sbb
push
stos
xlat
and
clc
and
mov
nop
ficoml
mov
mov
stc
daa
mov
cli
pop
cmp
sbb
or
dec
mov
insb
outsl
ret
pop
jno
popl
test
pop
in
clc
mov
hlt
lea
repnz
adc
cmp
je
insl
push
loop
loopne
xlat
lock
jno
xor
or
insb
fisubrl
add
mov
cld
pop
sahf
cmp
stc
sbb
icebp
mov
dec
or
fcoms
sbb
mov
test
popa
jb
cmpsb
inc
sub
sbb
lret
aaa
jb
push
and
mov
adc
into
arpl
in
xor
ljmp
loop
mov
sbb
push
jp
mov
xchg
aad
or
pop
dec
jno
fs
xchg
dec
aad
loop
cld
inc
xor
sub
jne
in
sbb
popa
popf
out
inc
hlt
jbe
mov
inc
scas
cli
nop
in
aaa
popa
daa
cmp
in
inc
stos
test
xchg
sub
stos
sbb
imul
jno
xchg
mov
mov
and
mov
fbstp
testl
gs
xorb
mov
mov
sbb
shll
or
sub
std
aam
push
xrelease
js
xor
fldpi
push
cmc
pop
imul
lods
sbb
jp
jnp
or
mov
or
leave
incl
aad
ds
bound
mov
push
addr16
test
xor
dec
push
and
mov
orb
adc
clc
and
repz
lahf
arpl
mov
sub
xor
push
jb
xor
outsl
lds
mov
fistpll
mov
mov
out
sub
sbb
in
pop
mov
adc
enter
pop
rcl
cmp
adc
lods
test
inc
pop
jae
xchg
repz
or
or
cwtl
push
ljmp
out
iret
outsl
dec
cmp
inc
scas
xchg
decb
mov
pop
outsb
daa
std
inc
daa
pop
jne
dec
imulb
stos
dec
imul
scas
movsb
cs
mov
mov
mov
out
or
cmp
ljmp
adcl
stos
subb
xchg
rol
xlat
lods
aaa
mov
andl
ud1
repz
xchg
cmp
in
les
gs
push
mov
mov
add
insb
pop
lds
pop
aaa
lret
fcomi
push
jb
dec
mov
loop
cltd
imul
xor
out
subb
sbb
sub
scas
adc
call
repnz
or
out
sub
sbb
dec
or
mov
insb
jns
fwait
xchg
sbb
les
jne
in
sti
cmp
loopne
sub
pop
imul
and
leave
jp
loop
cld
sahf
imul
test
je
jae
xor
jmp
pop
dec
scas
in
xchg
push
push
and
xor
lds
test
fucom
jb
out
nop
xor
cltd
xchg
int
jge
das
jnp
add
xchg
inc
mov
out
cs
imul
or
clts
fadds
mov
jmp
aam
adcb
ljmp
jbe
rolb
lock
adc
cmp
repz
rolb
aaa
pop
sbbl
shll
addb
pop
je
xlat
pop
and
xor
pop
add
and
insl
push
decb
in
lock
jle
mov
ret
inc
sarb
lods
aam
enter
mov
ds
das
stos
xchg
jnp
lds
lcall
ret
lea
repz
push
pop
push
rol
cmpsl
sub
incb
fs
dec
fcmovne
js
or
test
push
inc
rdmsr
and
jp
pop
sbbl
mov
popa
out
mov
xchg
ja
lock
call
sbb
xchg
ret
mov
rclb
push
push
das
xchg
mov
cmp
jno
data16
pop
sub
add
mov
ret
mov
cmc
es
push
inc
fimuls
dec
sbb
pushf
movsl
fstpt
cmp
pop
cmp
hlt
je
mov
xor
inc
out
pop
xchg
mov
test
add
stos
adc
fwait
iret
outsl
js
aaa
icebp
lcall
sbb
jnp
fwait
sbb
inc
dec
popa
mov
enter
cmp
rolb
mov
dec
loopne
enter
or
ja
mov
mov
gs
loope
lods
xor
and
sbb
dec
sub
out
mov
jno
cmp
fstps
sbb
lods
test
xchg
cltd
jo
mov
mov
push
movsl
lret
pushf
test
mov
imul
push
jmp
and
repz
jl
dec
cs
mov
jle
sbb
pushw
jae
inc
orl
mov
lea
xchg
jbe
int
pusha
out
mov
mov
mov
sbb
cwtl
xchg
fisubs
mov
adcb
test
jns
ret
sub
in
push
cmp
lcall
fwait
jmp
push
cmp
inc
push
and
ja
dec
sub
out
xor
outsb
xchg
adc
dec
outsb
and
fidivrs
loopne
test
xchg
dec
lock
mov
and
mov
leave
jnp
icebp
cmp
dec
sahf
and
fnsave
lock
cld
push
push
loope
push
inc
jle
scas
out
enter
mov
decl
ret
int3
loope
test
pop
lock
push
mov
pusha
add
rcrb
and
subb
push
add
lods
sbb
inc
jae
push
pop
sub
or
sbb
sub
add
adc
sbb
or
repnz
inc
lods
inc
icebp
ja
scas
adc
push
pushf
popl
mov
xchg
jne
sarb
stc
stos
lea
pop
mov
dec
fwait
cmpsl
addr16
and
fistpll
or
or
lock
jns
sub
fbstp
cmc
mov
mov
or
sub
mov
out
lods
aas
inc
sarl
cmp
in
or
test
or
arpl
cmp
push
call
mov
add
push
cmp
jmp
xchg
and
gs
stos
xor
pop
push
and
stc
xor
call
adcl
cwtl
mov
pop
mov
xchg
jo
cmp
fistpl
push
fnstcw
adc
repnz
rcll
or
push
rorb
int3
imul
jle
flds
or
ja
leave
pop
outsl
imul
pop
xor
lds
xchg
es
test
jmp
imul
mov
pop
into
jmp
fistps
xor
inc
mov
push
mov
int
xor
sbb
add
fstpt
ja
adc
ss
sarl
mov
mov
addl
jl
jo
and
pop
add
das
mov
lea
cmp
sbb
test
cmove
and
sbb
cs
fldt
call
lock
inc
mov
cli
je
in
dec
psrad
adc
sbb
adc
mov
into
popf
test
push
pop
and
dec
lcall
dec
jge
out
push
adc
adc
cmp
leave
sub
adc
jo
add
lods
pop
loopne
cltd
pop
imull
fdivrl
incl
movsb
and
idiv
sub
xchg
test
mov
insl
cs
jg
mov
jmp
pushf
int
subb
sbb
sub
test
sbb
lds
sti
sbbb
inc
jnp
cld
cmp
pushf
sahf
imull
add
scas
sbb
mov
adc
popa
cmp
test
xor
mov
jae
stos
adc
pop
loop
ret
lods
cmp
dec
jge
fidivl
in
vandpd
nop
xchg
out
sbb
roll
push
out
lock
mov
repz
scas
das
pop
aas
shl
fsub
xchg
out
cwtl
xchg
mov
push
inc
out
das
iret
push
out
sti
stc
movb
and
int
cmp
pop
lcall
xchg
loop
sub
sub
inc
std
sbb
add
jl
xchg
dec
mov
jge
sbb
test
dec
fisttps
push
int
int
sub
sarb
addr16
xlat
xchg
mov
jp
fwait
jg
fcompl
mov
mov
or
les
or
daa
test
cmpl
int
inc
inc
inc
fwait
lahf
in
popa
jp
dec
incb
pushf
loopne
ds
inc
jge
fistl
add
repz
pop
pop
or
shl
or
push
lret
cmp
push
scas
sub
jg
inc
jg
enter
sub
in
lret
das
lock
adc
sub
push
leave
dec
or
fst
dec
sbb
add
lret
cwtl
ja
push
mov
xor
add
xchg
pop
mov
repz
xorl
push
orb
push
repz
lret
or
fwait
push
cmp
lds
jne
push
lahf
cmp
cmpsb
std
bound
jg
fwait
xchg
push
enter
das
push
dec
or
jle
ljmp
enter
popf
lahf
lds
jns
cwtl
loope
jp
or
pop
or
adc
or
adc
shlb
lods
jge
xchg
sbb
mov
jp
sub
dec
inc
cmpsb
cmp
cmp
outsb
dec
loop
jnp
cmp
andb
cld
inc
inc
dec
and
mov
loop
mov
cmp
pop
fldpi
push
cmp
xor
pop
push
insb
cmp
dec
and
cmp
add
lret
mov
add
and
cmpl
imul
je
out
mov
jae
iret
xor
xor
js
inc
lret
push
test
xor
int
lahf
inc
adc
xor
or
cmp
push
lahf
inc
add
sub
mov
repz
pop
push
stos
aaa
repz
or
add
add
int
cmp
rcrl
std
outsl
ret
dec
stos
je
scas
iret
pop
fdivrl
stos
or
cmc
push
push
icebp
and
fildll
imul
shlb
ss
sbbb
in
imul
cmc
sub
mov
in
sbb
mov
iret
push
test
int3
push
leave
aas
imul
mov
jo
in
stos
cld
and
imul
daa
mov
push
inc
fisubl
add
pop
sbb
lahf
inc
push
lahf
or
jmp
xchg
movsb
jge
or
push
sti
jecxz
mov
jecxz
sbb
in
test
fwait
dec
cmp
sub
ret
std
and
mov
mov
cmp
mov
sarl
inc
sahf
cmp
sbb
sbb
xor
mov
testl
jmp
xchg
std
and
push
enter
xor
mov
ljmp
ljmp
insl
mov
mov
lret
in
out
adc
inc
xor
xlat
cmpsl
mov
mov
fcomps
shll
lock
test
je
sub
xor
push
xor
cmp
add
xchg
sub
jmp
jecxz
lods
add
jno
sahf
dec
xor
pop
idivb
cmpsl
fcomps
push
imul
lcall
pushl
pop
mov
std
xor
gs
aaa
clc
pop
inc
jmp
inc
sub
and
cld
in
divl
nop
popa
push
push
mov
sarb
sbb
push
sub
jp
fiadds
shlb
ret
out
lods
lods
orb
cltd
cltd
push
sub
cmp
std
mov
jb
or
mov
mov
int3
add
cmpb
cmp
cwtl
jnp
mov
loop
gs
xchg
sbb
or
stc
xor
addr16
scas
push
test
out
or
out
sub
out
cltd
jns
pop
xchg
inc
insl
pop
dec
cmp
cmp
or
scas
mov
sbb
inc
popf
js
xchg
cmp
mov
jle
loope
movsl
int3
xchg
mov
and
mov
stos
outsb
fsts
adc
insb
lahf
sbb
add
sar
sub
dec
cmp
push
cld
imul
jmp
loop
jno
dec
sub
arpl
jp
dec
cmp
jmp
pop
negb
xchg
mov
js
inc
cmp
jo
sub
das
insl
add
jmp
pop
inc
sbb
adcb
push
xchg
in
adc
or
xchg
push
int
push
jl
xchg
add
sub
js
mov
add
orb
add
dec
adc
xchg
outsb
out
inc
shlb
sub
cld
jbe
icebp
xchg
test
out
popa
outsl
mov
xlat
mov
sahf
fiadds
lahf
xchg
scas
sub
dec
xor
and
inc
das
ljmp
add
inc
enter
inc
cmp
scas
dec
adcb
xchg
add
add
adc
mov
aam
cli
insl
jne
push
addr16
stos
adc
mov
lods
cmpsl
pop
lods
lahf
mov
adc
push
mov
mov
cmp
jle
xchg
inc
cmp
fadd
mov
adc
lret
add
mov
scas
shrl
jne
js
mov
pusha
or
pop
xor
mov
add
pusha
push
mov
xchg
mov
pop
dec
call
out
in
scas
xlat
mov
mov
push
mov
or
push
add
js
leave
idivl
cwtl
mov
sbb
jmp
stc
xchg
sub
movb
stos
push
sbb
adc
cmp
add
adc
movsl
test
xrelease
imul
call
jecxz
leave
dec
cltd
xor
loop
dec
jle
divl
insb
in
push
dec
popf
bnd
push
scas
mov
outsb
jae
jns
mov
mov
push
mov
dec
adc
mov
push
ret
sti
mov
and
mov
xchg
stc
subl
dec
jbe
push
cmpsl
pop
out
push
xor
add
pop
mov
xchg
jg
or
lahf
xchg
or
loope
jnp
inc
sub
push
movsb
enter
and
xorl
das
adc
ret
les
outsl
in
or
pop
outsb
fnsave
lea
mov
and
add
jle
stc
xchg
xor
mov
aad
hlt
xor
jno
pop
xchg
ljmp
cli
adc
pop
int3
cli
mov
test
mov
inc
rcl
dec
fdivl
out
cli
inc
loope
ljmp
push
push
mov
out
addr16
xchg
sahf
shlb
push
bound
mov
cld
bnd
mov
pushw
nop
rcl
imul
sbb
mov
mov
mov
mov
add
mov
mov
mov
push
xchg
push
cmpsb
sti
xor
cmpsl
aad
or
mov
push
pop
inc
adc
lret
and
xchg
jle
iret
imul
mov
adc
cmpl
and
lret
loope
jbe
push
mov
cli
mov
movsl
mov
pop
inc
repz
ficomps
outsl
adc
cs
xor
out
loope
cmp
xchg
outsb
adc
jb
ja
xor
cwtl
std
inc
jae
lcall
push
push
jae
jmp
stc
mov
xchg
lods
and
push
inc
mov
nop
in
xchg
cli
mov
xorb
pop
into
push
shrb
leave
inc
cmp
mov
cmpsb
rcr
xor
divb
mov
mov
aam
xlat
ss
sub
repz
add
mov
push
ds
sbb
jb
xchg
jp
in
testl
add
pop
test
mov
scas
fnstsw
pop
fs
mov
int
aad
mov
mov
dec
cmp
lret
lods
stos
lods
jmp
or
push
jle
hlt
xchg
test
std
pop
xor
cmp
int3
sub
push
cmc
sub
fs
loope
jne
jle
sub
cwtl
mov
stos
test
icebp
stc
jge
mov
dec
pop
imul
mov
jne
xor
sub
arpl
mov
insl
aam
push
pop
mov
mov
pop
and
push
cwtl
sbb
scas
repnz
nop
dec
jbe
jne
adc
test
lret
mov
jle
out
call
je
push
lret
cmp
cmc
add
inc
or
repnz
lock
pop
in
mov
xchg
icebp
pop
mov
cmpl
inc
mov
jp
mov
iret
or
push
jge
add
cltd
jmp
inc
mov
orl
sarb
xor
cmp
xchg
adc
sub
popa
jl
xchg
jp
out
iret
mov
or
notw
outsl
out
push
insb
bound
push
icebp
dec
stc
jae
js
push
and
push
inc
lcall
arpl
adc
mov
xor
pop
xor
dec
loop
mov
enter
out
and
pop
sbb
adc
sti
outsl
add
xlat
mov
cmpl
mov
pop
adc
add
sbb
or
outsl
sarl
add
adc
testb
sbb
fistps
xchg
scas
jge
imul
rclb
movb
int
flds
mov
mov
notl
sbb
test
or
mov
sub
shlb
push
enter
and
mov
mov
repz
mov
sbb
aaa
pop
aam
mov
fimuls
pop
stc
sbb
pusha
mov
in
cwtl
ret
stc
inc
cmp
adc
inc
pop
mov
pop
int
push
add
add
add
std
rclb
dec
outsb
dec
std
sub
in
cmpsb
xlat
dec
into
mov
inc
fnstcw
xor
bound
mov
dec
mov
std
lret
xor
mov
ss
jns
jne
jo
mov
aam
push
clc
sbb
pop
out
push
mov
adc
fildll
sbb
push
adc
jmp
and
and
sbbl
ds
push
daa
lods
pop
ds
or
std
pop
mov
test
fs
or
and
and
cmp
out
popl
add
repz
mov
jl
inc
aad
aas
insl
and
push
lret
out
lds
adc
loopne
lods
loope
pop
lea
adc
cmc
fmulp
mov
scas
sub
push
divb
mov
pop
cwtl
into
rcll
adc
insb
dec
push
xlat
xchg
mov
divb
outsl
or
into
add
adc
mov
jp
or
lret
and
inc
and
and
adc
push
in
and
mov
cmp
and
and
mov
jno
aaa
gs
testb
in
test
mov
out
add
mov
test
adc
in
mov
in
mov
mov
jg
or
inc
sub
dec
js
cltd
xchg
pop
adc
in
xor
sbb
dec
pop
out
push
arpl
jne
les
xor
movb
pop
leave
dec
cmp
jno
fucom
das
into
out
xchg
stos
adc
pop
iret
js,pt
out
inc
jle
decb
pop
jb
andb
rorl
push
test
pop
arpl
or
mov
in
or
out
clc
push
inc
mov
push
lods
jp
pop
js
push
arpl
adc
imul
stos
and
cmp
fisubl
mov
test
hlt
push
lock
and
push
dec
addb
addr16
call
aas
loop
xchg
sbb
mov
xchg
adc
in
mov
xchg
idivb
movsl
out
rcll
arpl
and
dec
mov
test
jmp
fs
cmpsb
inc
aad
jno
jne
xor
mov
test
enter
pop
inc
mov
shr
xchg
jg
aaa
cltd
addr16
sub
xlat
pop
inc
stos
clc
xchg
push
frstor
arpl
enter
aas
popa
outsb
xchg
lods
addl
bound
fbld
jb
pop
idivb
mov
int3
xlat
or
xor
popa
push
das
dec
lahf
sub
xchg
jnp
and
mov
lret
pop
lods
sar
lret
fnsave
inc
and
icebp
cmp
or
jns
testl
add
pop
rolb
mov
cmp
push
rcrl
jmp
rolb
push
faddl
int
dec
je
add
lods
dec
arpl
and
cmp
das
lock
cmpsl
adc
or
dec
xor
out
cwtl
fucomp
push
aad
add
iret
lahf
and
push
mov
xor
jmp
xchg
jno
or
sbb
je
in
adc
sub
mov
push
sbbl
xlat
push
in
nop
and
cmp
dec
addr16
test
sub
inc
xor
sub
out
ss
enter
inc
sbb
addb
insl
or
push
mov
outsl
lea
sbb
mov
pop
add
or
mov
sbb
and
jmp
inc
and
push
mov
xor
pop
dec
jnp
inc
fs
mov
loopne
outsb
jl
hlt
test
pop
fnstcw
jmp
shrb
or
dec
sub
mov
orl
push
call
lock
loop
push
lret
ja
outsb
sahf
jg
loop
add
mov
int
out
xor
sub
shrl
or
sbb
outsb
cmp
or
sub
jbe
pop
stos
xor
mov
sub
notb
xor
fsubrs
and
mov
mov
xchg
mov
popf
and
icebp
and
mov
push
loopne
or
adc
jle
xchg
mov
scas
push
xchg
aad
aaa
popf
imul
shll
ds
or
pop
fstl
pop
push
push
outsb
pop
out
or
clc
aaa
std
xchg
data16
mov
test
xor
xchg
inc
loopne
xchg
xchg
pop
sbb
or
mov
or
sbb
pop
aam
sub
fs
bound
mov
mov
xchg
mov
xchg
decl
dec
lcall
jge
add
js
out
pop
cmp
push
mov
loopne
mov
inc
pop
sbb
push
mov
aas
sbb
mov
mov
xchg
xchg
arpl
mov
cs
aad
inc
pop
mov
xchg
jge
popa
xor
stc
sahf
shrl
sbb
mov
and
cmp
jmp
sub
xchg
push
mov
sub
jp
daa
cli
lret
mov
add
lret
jle
lret
push
jmp
mov
dec
sbb
mov
adcb
loopne
shr
arpl
cmp
insl
mov
dec
dec
nop
cmp
push
inc
push
mov
mov
inc
je
lahf
inc
mov
mov
aam
add
push
xor
into
div
insb
xchg
and
dec
mov
or
push
or
sbb
aas
shrl
dec
pop
lahf
daa
pop
sub
pop
loop
mov
rcll
mov
push
mov
je
mov
mov
fistl
dec
shl
pop
sbbb
add
push
xchg
incl
xchg
mov
int
sub
test
in
cmp
xchg
fsub
pop
sub
inc
adc
xchg
pop
jecxz
mov
xor
jge
add
mull
andb
lea
inc
and
call
das
cmp
movsl
sbb
mov
mov
movsb
lods
lret
stos
mov
int3
lcall
shll
xchg
push
aas
push
adc
xchg
add
pop
fs
popa
sbb
fidivs
in
dec
push
popf
cmp
jle
sub
cmp
xchg
jecxz
lret
mov
movsl
adc
xor
fdivr
jle
movsb
push
dec
add
jae
add
stos
xor
jns
xor
mov
in
mov
fimull
or
xchg
or
pusha
test
or
and
sub
sbb
ja
imul
mov
push
add
dec
cwtl
mov
mov
sti
sbb
daa
mov
int3
cld
outsl
dec
push
hlt
paddq
test
push
cmp
fnstenv
and
decb
mov
bound
fs
mov
sub
call
mov
mov
shrb
mov
sub
sahf
movsb
pop
out
pop
scas
jne
jl
insb
xchg
xor
xor
inc
pop
jle
imul
pop
mov
imul
sub
ret
rcrb
jecxz
test
mov
fdivr
sbb
out
movb
mov
mov
inc
mov
shrb
and
loopne
jnp
movsl
pushl
push
inc
pop
xor
lds
xor
mov
aam
lds
cltd
stos
and
sti
aas
xor
std
loope
cmp
sti
test
pop
fs
mov
test
sbb
xchg
add
inc
lods
jp
dec
cmp
test
ds
mov
pusha
jb
and
adcl
iret
std
and
aas
daa
xor
cmpsb
and
sub
in
sub
rcll
insb
or
ss
cmp
je
lcall
jno
inc
lds
pop
lahf
and
or
push
ja
push
loop
jno
rorb
inc
sarw
aaa
mov
xchg
cmp
notb
dec
inc
mov
and
mov
add
sbb
sti
pop
mov
cwtl
aas
add
jg
negl
push
lret
out
data16
xchg
lods
iret
add
push
lcall
stc
out
ret
xchg
inc
sbb
jb
or
pop
inc
test
movsl
mov
sbb
and
jb
bound
movsb
push
popa
xchg
lods
loop
movsl
mov
out
les
cmp
jae
sbb
cmp
fwait
jmp
mov
js
out
pop
lcall
pushf
fsubrl
pmulhw
sub
dec
ret
jp
mov
inc
pushf
cli
cltd
cmp
jcxz
mov
notb
sub
cmpsl
or
mov
flds
out
add
push
dec
jp
xor
in
int3
jns
mov
fs
shrb
sub
jbe
xor
stos
mov
mov
and
xorl
mov
inc
adc
cmp
fs
mov
lcall
iret
push
jecxz
data16
dec
and
add
cmp
les
add
xchg
xor
fcomp
testl
das
sub
shlb
add
xchg
movsb
outsl
inc
ds
inc
in
jne
das
aas
into
test
outsb
adc
mov
loope
rorl
xor
movsl
lahf
cld
xchg
jb
out
test
dec
sub
mov
cld
lret
and
sbbb
aam
cltd
mov
inc
jnp
aas
in
test
push
sar
pop
stc
mov
mov
test
loope
cmp
pop
jbe
push
adc
pop
cmp
jp
insl
lods
shlb
and
mov
and
stc
adc
push
mov
or
mov
cli
mulb
movsl
or
fisubs
push
xlat
dec
xchg
pop
jmp
add
mov
out
pop
js
xor
sub
dec
sbb
and
fstl
inc
dec
mov
roll
inc
sbb
dec
stos
aas
popa
mulb
jo
js
add
insb
mov
mov
int
xor
sub
hlt
mov
push
pop
jno
pushl
clc
push
or
jnp
jge
sbb
adc
sub
sub
adc
repnz
ljmp
ja
xchg
aad
stos
mov
sti
and
xor
and
icebp
lret
cmc
js
lods
xor
push
idivb
fwait
rcll
vpsubb
call
out
sarb
mov
scas
xchg
test
movsb
aas
test
dec
mov
mov
jb
pop
pop
push
dec
xchg
cmpsl
mov
fidivl
push
out
mov
cwtl
repz
ja
insl
repnz
push
cmp
pop
mov
add
add
in
push
test
fnsave
mov
sub
fdivrl
std
cld
push
cmp
fidivs
les
ja
mov
ds
fnstenv
mov
inc
mov
mov
jne
cmp
sub
add
in
xchg
mov
add
adc
and
pushf
mov
xchg
xchg
pop
notb
xchg
imul
mov
lcall
cmp
int
and
jae
ja
addr16
sub
popa
les
lods
mov
pop
xchg
or
lahf
enter
push
enter
dec
lds
sbbl
push
jne
sahf
cmp
mov
and
test
stos
xchg
dec
mov
in
mov
dec
push
mov
pop
push
sub
imul
push
in
and
pcmpeqb
mov
xchg
cltd
sub
fbstp
xchg
aad
pop
rcll
fimuls
ja
je
in
mov
testl
cli
xchg
aam
add
aaa
popf
dec
mov
rorl
movsl
shlb
add
mov
mov
pop
add
ljmp
lods
mov
cmc
test
jo
in
jmp
jecxz
and
or
dec
shll
test
and
adc
int
adc
das
movsl
js
jge
mov
jmp
push
mov
in
shlb
andb
addl
dec
aam
ret
clc
hlt
push
cmpsl
sarb
cmc
xchg
inc
sti
pop
or
jg
dec
jo
fidivrs
inc
repnz
pop
andl
cmp
adc
mov
sub
ret
subl
sub
orl
cmp
daa
cmp
lahf
nop
fdivr
mov
adc
stc
aad
sti
jge
gs
mov
aaa
lods
pop
ficoml
jp
aam
movsb
and
inc
cli
xchg
ficoms
fisubs
aas
sub
jg
cmp
lds
std
pop
sete
repnz
push
inc
movsl
push
add
repnz
roll
loop
sbb
nop
insl
aaa
stc
mov
lods
dec
dec
dec
addr16
add
arpl
jle
mov
ret
xchg
mov
leave
mov
pusha
lcall
sub
sti
repz
jle
in
loop
mov
adc
mov
adcb
mov
adc
dec
jg
icebp
cs
repnz
subl
xor
pop
jp
mov
mov
mov
sbb
push
data16
xchg
cld
inc
cli
lcall
and
pop
cwtl
xor
xor
inc
lret
dec
out
cmp
lret
pop
add
aam
dec
mov
lcall
sbb
mov
xchg
cmp
pop
xor
jmp
insb
inc
shll
lock
xchg
pop
rclb
jecxz
clc
cmpsw
xorl
cmp
sub
xchg
cmpsl
push
mov
mov
mov
aaa
inc
sbb
cmpl
or
aam
roll
ret
xchg
push
and
jmp
prefetcht1
and
jecxz
arpl
or
mov
mov
xor
lock
test
xlat
out
icebp
mov
hlt
leave
adc
imul
hlt
loop
stc
into
push
and
cld
js
cs
jo
pusha
scas
pop
test
mov
sbb
cmp
mov
test
test
cmp
push
cmp
fdivp
mov
notb
pop
cmpsb
push
test
push
inc
inc
inc
lret
pop
adc
imulb
mov
movsl
fwait
mov
mov
mov
call
mov
icebp
jbe
mov
out
cwtl
sbb
xchg
cmpsb
jle
mov
stos
mov
mov
aas
xchg
cmpb
xchg
xchg
cmp
mov
movsb
cld
testl
stos
pop
add
push
or
jo
data16
or
arpl
mov
inc
call
bound
test
enter
push
das
divb
cmp
sbb
pop
ja
push
sbb
adc
aad
xchg
cmp
lods
popa
fisttps
pop
mov
or
cmpsl
add
in
jecxz
loopne
mov
scas
inc
adc
dec
imulb
push
loop
dec
pop
gs
lea
jl
and
jo
fbstp
scas
into
pop
push
sahf
loopne
hlt
xchg
jb
mov
cmp
inc
pushf
add
repnz
jns
stos
pop
jbe
fnstcw
jle
dec
sbb
mov
jb
push
xchg
pop
mov
test
mov
or
mov
loopne
cmp
sbb
leave
cmp
dec
or
fists
push
pop
lret
fs
scas
sbb
test
jecxz
popa
notb
test
add
and
outsl
les
imul
cwtl
mov
into
mov
cmpsl
repnz
add
xorl
jbe
xchg
mov
mov
mov
jno
inc
enter
lcall
call
mov
cmp
cmp
xor
mov
add
call
jg
adc
mov
push
xchg
adc
mov
xchg
cltd
sub
je
mov
and
mov
in
jns
mov
inc
jbe
or
sbb
jp
fldenv
je
nop
push
das
jg
jge
in
jno
mov
jne
addr16
jno
mov
xor
cmp
sbb
in
or
cmpsl
ss
adc
in
std
scas
rol
cmpsb
inc
dec
test
sub
xor
fadds
into
or
mov
dec
insb
cmpsl
push
movsb
push
ret
sbb
paddusw
adc
pop
test
rol
test
lea
test
pop
data16
dec
ss
cmp
mov
clc
stos
test
outsb
mov
mov
sahf
mov
negb
dec
or
mov
mov
arpl
mov
sbb
xchg
jecxz
xchg
mov
and
sahf
stos
mov
pop
xor
data16
or
pop
rclb
jmp
inc
decb
ljmpw
rcl
addr16
popa
pop
xor
inc
insl
bound
cmp
fidivrs
mov
inc
pshufw
and
jmp
mov
pop
xchg
in
repz
lcall
fldenv
movsb
sub
jno
mov
mov
mov
cld
out
xchg
mov
push
add
nop
push
rcll
push
popf
imul
jb
jne
jecxz
pop
and
push
add
nop
and
sub
cmc
mov
inc
jae
fldt
gs
xchg
stos
lock
std
xor
mov
mov
clc
fmull
jns
pop
test
das
inc
loop
stos
dec
pop
add
ficoms
push
fs
adc
int3
movsl
iret
dec
es
inc
push
aas
cmpsl
out
lods
cli
dec
add
push
sub
pop
mov
fldenv
xchg
and
or
insb
clc
cmpsl
sti
test
popa
inc
pop
inc
push
pop
filds
mul
andb
pop
popa
xchg
sub
adc
dec
fstl
icebp
or
test
mov
xlat
sub
cmp
and
lds
add
rolb
add
fmull
xchg
mov
jns
xor
sub
mov
jecxz
add
jne
push
ret
xor
adc
lock
jmp
lock
cld
sti
fwait
and
cmp
out
inc
mov
xor
jae
xchg
push
dec
sahf
mov
mov
jnp
pop
jecxz
inc
out
adc
call
out
sahf
and
dec
mov
push
push
lret
dec
adc
xchg
mov
rcr
pop
addl
cld
arpl
addb
inc
or
pop
jmp
jae
les
sbb
push
std
xor
push
and
icebp
lods
push
cmp
fwait
ds
jecxz
and
inc
mov
jecxz
xchg
mov
dec
mov
or
popf
subl
icebp
pop
movsl
cmp
dec
fxam
test
fcmovnu
loopne
mov
push
adc
clc
jmp
dec
lea
jbe
push
dec
ret
lret
sbb
lock
and
adc
push
out
push
xor
xor
xor
and
jmp
repz
int
enter
sub
stos
iret
pop
adcb
mov
das
jmp
adc
cmp
in
loope
std
or
mov
cmp
mov
pop
cwtl
clc
jo
loop
sti
rorl
push
sub
cs
add
sub
jns
jmp
push
gs
inc
ftst
add
sahf
xchg
mov
adc
add
nop
push
mov
and
add
mov
pop
push
adc
test
mov
sbb
popf
and
sub
xor
fidivrs
sub
jge
cmp
xor
jg
stos
or
fisubl
ss
es
es
mov
mov
pop
pusha
lock
cltd
mov
mov
fcmovnbe
dec
jo
mov
outsb
mov
mov
sbbb
shl
sub
dec
add
pop
mov
loopne
sub
cmp
jno
mov
pusha
int
stc
js
jno
mov
out
mov
or
lahf
nop
je
imul
adc
pop
add
stos
jge
xor
popl
stos
mov
repnz
mov
pop
and
add
pop
dec
pushf
movsb
mov
xchg
out
or
cmpsl
add
mov
lods
lods
jns
mov
pop
mov
dec
cmp
std
sahf
into
outsl
jle
icebp
cmp
fadd
mov
shr
ret
imul
push
and
aaa
push
fcoml
js
cmc
jns
rolb
js
arpl
xchg
data16
lret
pop
ds
mov
ret
or
mov
stos
or
inc
repz
mov
fimull
cmpl
je
flds
push
mov
jnp
xchg
ret
fs
dec
or
adc
stos
jno
cli
cmpsb
mov
das
test
xchg
lcall
daa
xchg
push
pop
outsl
ljmp
decl
fwait
aam
adc
cmp
idivb
adc
adc
push
push
pop
mov
int
jnp
mov
inc
cmp
inc
inc
std
lcall
mov
inc
and
dec
cmp
adc
stos
mov
int3
lods
adc
ljmp
pop
or
sub
sbb
lods
xor
popa
popa
and
push
jp
xor
cmp
ss
pop
out
or
push
push
iret
adc
ds
loopne
das
adc
fstl
sarb
sbb
mov
fst
jp
xchg
pushw
test
test
fsubr
adc
mov
pop
in
fidivrl
or
xor
mov
cwtl
pop
aam
lret
fsubp
repz
jle
jnp
rorl
lods
ds
fidivrl
push
inc
push
jg
mov
mov
inc
call
repz
imul
mov
mov
int
add
je
out
test
gs
testb
dec
lock
fimull
push
mov
daa
add
ret
adc
mov
mov
pop
mov
jae
inc
mov
add
mulb
nop
mov
aam
int3
jns
sahf
out
add
adc
shlb
lds
dec
adc
cmp
mov
jp
fsubrs
addr16
add
into
sub
jp
outsl
je
xchg
mov
lret
jmp
add
jmp
aam
pushf
ss
cmp
pop
insb
push
sub
or
hlt
pop
inc
cmp
dec
outsl
mov
in
int3
sub
xlat
fst
cltd
dec
mov
mov
mov
mov
mov
int
jno
xchg
test
outsb
push
popa
sahf
mov
cmp
mov
popf
jg
push
popf
xchg
rolb
test
and
push
or
cld
cmpl
shlb
les
out
pcmpeqb
and
in
adc
adcb
lret
lods
in
in
adc
dec
mov
cmpsl
test
sub
aad
jmp
mov
rcr
fistpl
fldcw
mov
pushf
enter
popa
cmp
test
add
fmuls
mov
lahf
inc
mov
stos
pusha
pop
lret
sbb
xlat
push
sbb
pop
pop
pop
mov
ret
pop
imul
mov
sub
aaa
sub
lds
inc
add
in
dec
mov
mov
nop
lods
cmpsl
fstps
decb
mov
pop
or
scas
dec
push
scas
out
mov
repz
test
test
add
fmull
into
pushf
add
adc
je
stos
iret
add
mov
push
fadd
jo
push
inc
sbb
inc
bound
mov
test
push
mov
pop
cld
out
leave
xor
adc
loope
imul
ja
daa
dec
sti
dec
push
out
or
jle
fdivr
imul
jg
ja
fnstcw
aas
icebp
jecxz
in
mov
es
enter
js
cmpsb
or
or
jne
aad
ss
push
mov
imul
mov
aaa
cltd
loop
fstpt
movsl
test
sbb
movb
data16
mov
cli
stc
in
fistpll
xchg
or
sbb
add
lcall
jg
push
clc
jp
mov
cmp
mov
mov
push
dec
push
mov
cmp
aas
and
es
ljmp
sub
repz
pusha
outsl
fcomps
inc
dec
xor
es
arpl
inc
sbb
leave
pushf
shrb
imul
jb
add
fnstcw
push
add
mov
mov
mov
loopne
cmc
in
or
mov
mov
adc
repnz
inc
iret
loop
dec
into
mov
aas
add
bound
shll
int3
int3
adc
mov
mov
mov
test
cmpsb
adc
pop
inc
loop
adc
sbb
add
push
test
pushf
mov
or
pop
mov
neg
movsb
and
fistps
mov
mov
nop
mov
sub
lret
in
aas
insb
jecxz
xchg
sti
loope
cwtl
push
sti
int
add
push
inc
jb
insb
jecxz
pop
leave
xchg
lret
adc
push
push
push
inc
aam
sbb
mov
xchg
xchg
dec
mov
jnp
dec
shlb
lods
pop
aam
and
push
xchg
out
pop
mov
neg
add
add
aad
push
and
xor
ja
adc
fcompl
bound
aaa
bound
inc
xchg
jno
sub
xchg
jne
cmpsb
shr
sub
mov
inc
lock
cmpsl
scas
jmp
cmp
daa
imulb
out
sbb
pop
mov
aam
pop
frstor
pusha
and
bound
mov
mov
dec
loop
mov
dec
push
dec
stos
fwait
iret
movsl
pushf
sbb
sbb
test
sub
and
sub
shl
adc
pushf
xchg
push
adc
fildll
adc
jno
fisttps
cmpsl
pop
jbe
fprem
mov
stos
sub
iret
loopne
xor
xor
mov
in
xchg
fstps
cmp
nop
mov
push
xor
shlb
fcomps
cmp
jmp
les
and
jne
push
push
lods
test
and
mov
sbb
lahf
push
add
inc
out
dec
mov
daa
lea
popf
test
mov
push
divb
aad
mov
mov
adc
xchg
push
adc
xchg
cmpsb
jae
cmp
push
push
shlb
nop
inc
inc
cld
data16
ret
mov
outsl
movsl
xor
fstps
dec
aaa
mov
sub
dec
jmp
rcrl
lahf
hlt
popa
scas
mov
clc
jbe
ret
lret
inc
cmp
shr
addb
push
cld
fcomps
sbb
xor
cmpl
mov
arpl
mov
lahf
mov
inc
stos
lret
jmp
sbb
pop
dec
pop
sub
cmc
inc
fldenv
adc
lret
popa
call
insb
push
jns
test
aam
jle
pop
inc
rcll
scas
sub
mov
adc
das
adc
dec
or
or
outsb
subl
stos
sub
jl
cmp
push
iret
in
pop
loopne
es
aam
lret
mov
push
inc
dec
jno
xchg
dec
sahf
push
inc
gs
or
scas
aad
out
jmp
xor
push
sbb
popf
stc
lcall
sub
es
push
jnp
mov
stos
add
test
in
cmp
lahf
push
outsb
shrb
jg
add
lods
sub
arpl
repz
mov
loop
pop
xor
sbb
out
das
dec
mov
pop
mov
out
add
rclb
lods
add
mov
insl
push
or
jl
stos
sbb
push
pop
push
hlt
sub
mov
push
in
mov
inc
fsubrp
sub
movsb
bound
cmc
lods
cmp
outsb
inc
mov
xchg
bound
movsl
mov
out
sbb
shll
jnp
shlb
push
cmp
dec
mov
add
inc
outsl
cmp
add
mov
add
xchg
scas
test
xor
dec
ficoml
das
aaa
xchg
mov
push
push
shrb
daa
sub
int3
push
mov
adc
test
mov
repz
aam
enter
jg
rcrb
push
lea
mov
loop
in
mov
lcall
push
lock
dec
push
push
xchg
fcoml
sbb
bnd
push
xchg
mov
mov
jle
nop
outsb
push
jle
loopne
rcll
sbb
mov
mov
enter
in
xchg
loop
nop
std
mov
data16
test
push
pop
xor
inc
adc
inc
dec
xor
dec
pop
nop
cmp
pop
test
jl
jge
int3
xor
test
jp
out
aad
jae
add
enter
pop
sbb
inc
gs
pop
ds
mov
es
push
xchg
clc
pop
int
sbb
add
inc
scas
sbb
daa
mov
mov
xchg
ja
pusha
inc
test
aaa
mov
pop
mov
dec
fsts
aas
pop
in
lods
stos
inc
data16
jmp
mov
push
iret
mov
fsubl
cmpsl
mov
push
fnstsw
inc
mov
aaa
sbb
mov
mov
out
inc
popa
into
jle
rorb
mov
inc
adc
enter
mov
aas
fdivp
inc
sbb
and
pop
mov
add
rcrb
scas
fildl
inc
es
cmp
enter
loop
sbb
push
mov
mov
and
pop
push
cmc
in
lahf
xor
ror
aam
adc
push
lret
gs
pop
movsl
stos
push
pop
mov
fwait
and
fistps
add
mov
jg
mov
push
pop
movsl
adc
dec
shrl
icebp
mov
xor
outsb
adc
aad
sub
test
sub
decb
mov
lods
jecxz
mov
aas
xchg
sub
or
outsl
xlat
mov
inc
lock
in
into
js
and
loope
xchg
inc
fwait
mov
mov
fs
shrb
inc
mov
and
scas
xchg
xor
rclb
cmp
inc
icebp
xlat
or
ja
ss
out
and
loopne
inc
pop
inc
sbb
iret
push
test
push
test
and
push
xchg
incl
es
in
or
rcl
or
mov
jns
push
insb
mov
rorl
movsb
icebp
and
int
test
dec
jno,pt
jnp
mov
jns
and
mov
outsl
mov
dec
arpl
movsl
mov
jbe
dec
or
lahf
lcall
mov
jbe
mov
jmp
cmp
lret
loop
lods
jl
repnz
and
lret
cld
arpl
outsl
lea
popf
jb
fnstsw
pop
or
int
fcmovbe
and
mov
jno,pn
sbb
xchg
fstps
cmp
aaa
inc
in
aaa
xchg
mov
dec
xchg
jns
push
sbb
xorl
scas
fs
push
outsl
jp
ss
or
jae
adc
dec
xor
mov
sbb
movsb
push
stc
lretw
lea
das
fisubl
clc
call
jnp
mov
inc
cmp
outsl
out
cmp
push
jns
push
div
outsl
and
adc
mov
jo
lds
aam
mov
ret
in
push
out
mov
inc
and
gs
fld
and
and
xchg
cmp
push
test
xchg
call
sarb
mov
ror
popa
frstor
push
jge
arpl
jnp
mov
lcall
test
into
test
icebp
gs
les
rcr
push
fucom
jge
pop
imul
repnz
jmp
jp
mov
imul
mov
rcl
sahf
jns
dec
dec
imul
push
mov
jl
pop
rcrb
lcall
out
or
enter
test
pop
gs
mov
movsl
sarl
cmp
mov
sub
shll
imul
shlb
fcoml
fisttpll
enter
cld
sub
sub
shlb
test
dec
sbb
loop
push
mov
add
fcomip
stos
ffreep
jecxz
mov
lods
arpl
dec
xor
int3
add
pushf
pop
push
push
fwait
inc
aam
in
inc
out
mov
sbb
push
sahf
std
pop
outsl
in
inc
cmp
add
cmpsb
push
add
ror
js
data16
push
popf
mov
push
mov
cmp
xchg
pop
cmp
hlt
xor
fidivrl
mov
repz
mov
shr
sahf
into
pop
xchg
jecxz
repz
push
stos
jno
inc
cmpsb
xchg
xchg
mov
pushf
jle
cmp
mov
shll
je
jae
jno
sub
inc
mov
cmpb
push
repz
dec
jb
add
jg
and
add
add
pop
adc
ret
in
inc
das
or
cmc
movsb
pop
lods
mov
fmull
scas
imul
pop
lahf
jnp
xor
dec
add
push
int3
xchg
imul
push
jecxz
loopne
aaa
dec
repz
pop
sti
jge
int
pop
jae
xor
bsr
cli
pop
arpl
sbbl
push
sub
sbbb
add
sahf
sub
bound
xor
push
ret
mov
or
cwtl
xchg
aaa
and
inc
inc
adc
das
push
stos
jl
ljmp
xchg
movsl
out
jl
or
jecxz
out
stos
jbe
movsb
cli
sbb
aad
int3
push
push
ret
leave
inc
and
or
pop
jmp
sub
cmp
aaa
pop
jle
and
insb
test
sbb
pop
xor
xchg
int3
hlt
call
jle
adc
push
fwait
mov
pop
sahf
ja
jns
inc
xchg
enter
mov
or
xchg
fisttpll
add
outsb
jo
scas
orb
ret
int3
sti
lcall
inc
sub
andb
stc
and
imul
xchg
cmpsl
mov
cmp
cmp
or
lods
push
sahf
stc
rcll
repz
dec
faddl
jp
cwtl
int3
cli
shrb
or
push
cld
sub
lods
xchg
pop
shlb
shrl
jns
push
movsb
jg
pop
out
rol
rcll
pusha
pop
pop
adc
mov
dec
push
inc
scas
push
sbbl
xchg
int
lods
inc
cmp
jp
pop
in
out
cmc
clc
or
test
jle,pn
mov
xor
xor
mov
pop
xor
testl
shll
dec
mov
es
pop
cmpb
cltd
in
lods
jp
adc
xchg
push
lods
imul
cmp
jo
xchg
nop
imul
xor
push
mov
shl
sub
setl
int
mov
xchg
dec
hlt
lock
mov
adc
mov
dec
pusha
inc
mov
leave
sbb
lcall
mov
push
cvtps2pd
mov
sub
aam
repnz
leave
enter
dec
bound
xchg
xor
aas
sar
popa
rclb
mov
in
scas
sbb
sub
and
ret
jp
loop
push
and
hlt
fucomi
jge
outsl
or
cmp
cli
sbb
dec
lret
loope
push
mov
or
lcall
frstor
lock
cs
loopne
adc
add
push
out
pusha
xor
pop
add
iret
push
adcl
movsb
add
subb
cmc
push
push
nop
push
into
cmpsb
jne
std
scas
xchg
xchg
mov
mov
adc
or
movsb
sbb
xorb
inc
sti
push
sbb
xchg
popf
jno
inc
jmp
test
pop
pop
push
cwtl
mov
loop
jg
xlat
adc
mov
in
fistpl
pusha
mov
lret
in
popf
loope
call
pop
cmp
mov
pop
scas
pop
push
sbb
addr16
sarl
hlt
test
sub
cmc
dec
dec
mov
lret
push
sub
addr16
push
pop
push
pop
adc
inc
gs
rolb
in
mov
int3
dec
sub
ja
and
ss
leave
nop
aad
inc
push
fisubrl
jae
fucomi
lahf
pusha
fcmove
je
push
mov
cmp
mov
rcrb
sbb
sub
jg
push
in
xchg
sub
pop
ret
mov
imul
aas
lcall
and
lods
stos
cmp
lods
popl
or
sysret
cmp
lahf
stos
jnp
mov
and
add
int3
cmpsl
je
push
and
subb
fcompl
or
mov
fadds
fcmovnbe
clc
stos
stos
ljmp
dec
mov
enter
jge
aas
fbstp
stc
bound
lods
ja
jbe
call
lods
lods
into
das
push
add
es
ficoms
push
cmp
or
nop
mov
mov
mov
or
imull
out
shll
pushl
fcompl
out
and
and
rorl
std
mov
addb
insl
sub
ss
sub
push
xor
or
push
mov
xchg
out
loop
lcall
adcb
stc
mov
pop
jmp
int3
stc
cld
or
add
pop
jns
dec
mov
jns
cmpl
mov
push
dec
mov
or
dec
mov
movsb
cmpsl
xor
sbb
jecxz
dec
push
cmp
int3
fnstsw
mov
xlat
sar
sahf
test
roll
pusha
mov
out
adc
enter
sub
das
sbb
xchg
sub
in
sahf
cli
jns
sub
gs
shll
lock
mov
pop
pusha
adc
movsl
es
fidivrs
dec
pusha
insl
icebp
inc
xor
movsl
push
push
inc
adc
cmp
cmp
xor
sub
mov
dec
jns
js
in
mov
movsl
sti
mov
cltd
inc
test
imul
xor
mov
jmp
icebp
movsl
loopne
xchg
pushf
jns
mov
in
aad
jmp
push
out
mov
cmp
xor
in
cmpsb
ror
aas
flds
sub
into
cltd
xchg
jns
adc
sbb
hlt
fwait
adc
fisubl
call
dec
enter
push
jl
dec
ret
xchg
into
mov
imul
pushf
dec
mov
iret
dec
jbe
cmp
xchg
nop
les
gs
mov
push
imul
fldenv
dec
push
js
xor
ret
dec
sahf
in
arpl
roll
jecxz
jecxz
fstps
aas
mov
repnz
pop
xor
imul
out
lods
out
push
add
sub
cwtl
jno
jb
nop
fmul
lods
xor
mov
dec
jmp
les
mov
mov
mov
inc
cmp
cmp
jnp
lock
pop
push
call
es
xchg
sbb
push
cmp
fidivl
icebp
insl
in
imul
push
loope
mov
xchg
aaa
inc
mov
push
mov
popa
xchg
nop
mov
mov
addr16
shr
repnz
sub
hlt
sub
or
or
or
loop
dec
scas
icebp
rclb
mov
or
sbb
lret
in
mov
int3
mov
xchg
pushf
enter
mov
out
in
sti
mov
push
test
dec
sbb
ja
sahf
push
or
lahf
mov
mov
fmul
dec
adc
sbb
jbe
pushf
jbe
push
dec
jge
js
xchg
xchg
sahf
add
loope
icebp
cltd
push
xchg
gs
add
mov
mov
xor
add
and
add
add
xor
enter
mov
lcall
mov
push
cmc
inc
mov
mov
cmpb
xchg
push
les
xor
sub
int3
stc
test
mov
xchg
push
xor
lahf
push
and
imul
scas
add
fsts
mov
inc
arpl
fcomps
lea
sub
sbb
lods
mov
out
cmp
jle
gs
mov
cwtl
jbe
push
push
and
in
in
add
in
sbb
test
rcrb
xor
imul
cli
sahf
push
fisubrs
cli
jae
stos
sub
mov
in
out
mov
push
and
mov
mov
adc
lahf
lods
fcompl
out
lock
or
sti
inc
mov
pop
mov
out
aaa
or
stos
gs
pop
push
push
daa
ret
je
inc
dec
pop
or
mov
hlt
jne
call
cltd
adc
neg
lahf
push
and
cltd
mov
leave
and
fs
xlat
pushf
imul
pop
jp
flds
xor
rorl
aaa
mov
pop
lsl
into
std
popa
pop
inc
xchg
dec
movsb
sbb
sahf
cmpsb
and
hlt
sub
mov
sbb
adc
add
mov
scas
imul
mov
bswap
imul
call
and
fwait
mov
outsb
out
idiv
adc
mov
arpl
mov
mov
sbb
sbb
sub
popa
insl
fdivs
mov
je
cmp
add
mov
stos
loope
mov
ds
sbb
loop
shll
sub
xor
inc
mov
add
pop
dec
sbb
jnp
scas
ds
outsl
idivl
xchg
dec
mov
sub
xor
jne
add
jnp
dec
sub
addr16
insb
movsb
pop
pop
repz
pop
or
add
ret
mov
icebp
stc
js
in
mov
scas
dec
leave
arpl
inc
fincstp
insb
test
lret
add
mov
push
lods
shll
xchg
dec
cs
not
push
outsl
sbb
lcall
cmp
xchg
mov
mov
lock
cwtl
lock
sub
add
popa
lods
lea
test
lahf
rolb
push
or
out
pushf
cmc
mov
push
pop
je
sahf
sub
cmp
pop
mov
cwtl
jno
lret
cmpsl
out
inc
pop
dec
mov
or
jp
lahf
push
and
test
xchg
das
out
leave
ja
movsl
ljmp
stos
adc
cmpsb
fsubrs
inc
loop
jl
pop
mov
or
push
inc
out
inc
mov
pop
addr16
aam
int
inc
fsubrl
xchg
jo
jo
mov
int
mov
sbb
dec
je
fcomps
out
fistps
push
gs
mov
and
aas
jg
jmp
outsl
mov
xchg
cltd
pusha
pop
add
pop
int3
mov
jmp
call
add
xchg
rep
pop
or
push
or
xor
dec
xchg
jae
jno
inc
scas
push
dec
mov
mov
mov
mov
pop
mov
std
loope
out
cli
aaa
jb
pop
in
xor
ret
roll
push
clc
test
inc
sub
jg
aas
loopne
cs
nop
inc
xchg
lods
stos
pop
cli
popf
push
dec
std
adc
lods
and
jbe
inc
sbbl
aad
sbb
cmp
into
xor
dec
sub
fs
push
fstpt
xchg
aas
push
out
cmp
out
dec
push
and
fldcw
pop
dec
and
push
push
jne
mov
push
jge
shll
ret
mov
mov
out
xchg
mov
rcr
ja
fnsave
lret
mov
jo
inc
clc
mov
sti
jge
repz
pop
or
xor
pop
adc
test
cli
dec
lret
rcr
add
popa
push
cmovge
insl
jp
mov
dec
sub
out
data16
frstor
fwait
mov
mov
add
bound
testb
pop
repz
insl
mov
mov
mov
test
in
aas
xchg
jp
push
je
push
rolb
xchg
stos
mov
loop
jns
in
cmp
cmpsb
and
fisubrl
ret
cmp
jbe
xor
and
std
pop
loop
std
push
test
sub
add
call
cmp
xor
cmpsl
test
push
dec
fisttpll
stos
addb
shlb
enter
loope
pop
in
add
inc
nop
lcall
sbb
cld
shrl
ret
or
sub
dec
add
enter
sti
lods
mulb
mov
pusha
pushf
push
push
inc
add
push
imul
and
push
xor
xchg
popa
xor
hlt
int3
imul
cltd
inc
adc
in
cwtl
cmpsb
mov
mov
jecxz
sbb
fadd
sarl
notb
mov
pop
divb
mov
sub
aas
push
xchg
adc
stos
ja
pop
mov
jl
icebp
xor
pushf
iret
stos
rorl
ja
or
mov
mov
add
and
add
fsts
push
fisttpll
add
fs
cmp
fwait
push
subb
mov
sahf
mov
fstl
andb
xor
dec
sub
pop
sti
xor
ret
push
fs
xchg
and
xchg
mov
dec
nop
test
cmp
aam
add
inc
int
and
push
jno
dec
into
ljmp
rcrb
cli
dec
aaa
xor
mov
rclb
mov
cmpb
jmp
push
push
cmp
jle
adc
rcll
in
sub
sub
icebp
inc
inc
xor
or
lock
sbb
repnz
int
xor
bound
push
and
sbb
adc
andl
sarb
movsb
jecxz
xor
lock
mov
pop
pop
test
fcmovnbe
pop
cmpsb
imul
add
jp
pop
adc
repz
testb
in
clc
xor
jle
popa
mov
xchg
pop
cmp
rclb
inc
subl
addl
and
int
scas
scas
fcompl
loope
test
xchg
into
cld
cwtl
or
rorb
sub
cmp
inc
and
aad
jb
lock
inc
jbe
mov
inc
mov
loope
mul
jl
gs
xlat
and
test
adc
leave
insl
bound
adc
jl
jp
mov
call
sbb
cmp
dec
repz
je
sbb
xchg
outsl
fstps
push
jl
inc
stos
xlat
cmpsb
lods
jb
mov
bnd
aad
pop
icebp
and
test
fidivl
xor
and
sti
and
lret
pop
test
ror
test
jge
adc
inc
jb
lods
out
inc
xor
mov
icebp
fsubrl
mov
cmp
call
shlb
imull
es
outsb
test
jns
inc
testl
outsl
bound
popf
mov
sbb
inc
pusha
out
fcoml
in
inc
cli
call
jg
mov
pop
les
call
dec
lcall
xor
pop
hlt
push
lcall
xchg
jle
nop
sti
jbe
out
out
add
xchg
ds
push
mov
shrl
xor
adc
into
and
or
pushf
xor
mov
xor
pop
mov
xor
sarb
sti
mov
push
sub
adc
or
and
pusha
jle
sub
nop
jns
push
les
movsb
mov
insb
pop
jecxz
jge
xorb
sahf
mov
in
enter
sbb
fsts
cmpb
add
out
fcomp
inc
cmpsl
dec
mov
in
scas
adc
decl
push
and
cmpsb
pop
pop
jno
xchg
xchg
lcall
sbb
loope
repz
in
inc
out
adc
in
test
popf
fsubs
sbb
push
fstps
divb
out
fcoml
or
jne
mov
mov
sbb
and
shll
in
jle
into
aas
mov
frndint
jmp
push
lods
ljmp
cmpsl
testb
jb
cmp
ljmp
popf
inc
out
bound
mov
cmc
cmp
sbb
pop
lods
jae
jno
push
add
mov
cmp
jnp
dec
xchg
iret
dec
push
and
cwtl
rcll
lock
imul
adc
insl
xchg
ljmp
mov
push
rorl
cmpsb
mov
adc
xbegin
push
aam
movsl
sub
popf
mov
fnstsw
add
lcall
xchg
and
push
push
cmp
ffreep
push
les
cmpsl
jp
add
pop
cs
fbstp
and
jae
adc
test
daa
iret
int3
mov
cli
test
lret
pop
shll
push
mov
mov
or
aad
pop
sub
gs
xchg
or
push
cmpsl
xchg
pushf
pop
aas
mov
outsb
lret
jl
addr16
mov
inc
cmc
inc
outsb
adc
add
push
or
adc
mov
jne
inc
frstor
lods
mul
mov
pop
fisttps
cld
mov
push
pop
mov
insl
ret
adc
stos
imul
sahf
sbb
movsl
push
xorb
jo
mov
push
or
dec
into
sbb
and
jno
or
mov
pop
cmp
add
sbb
leave
test
mov
ss
daa
mov
mov
ret
fwait
xchg
push
lret
mov
mov
scas
jp
es
inc
mov
inc
jmp
incl
nop
scas
call
mov
fldl
scas
rcrb
cmc
jge
jb
fisttpll
out
add
push
add
adc
push
insl
clc
mov
loope
push
jne
jbe
pop
nop
sub
jp
mov
jns
sub
les
xchg
loopne
sub
add
and
pop
mov
mov
and
fsubs
test
mov
push
into
and
xor
bound
pop
mov
mov
fstpt
test
leave
pop
out
fsubrl
push
movsl
push
das
int3
cmp
sbb
in
mov
adc
test
idivb
jle
and
pop
jb
pop
das
cmp
sbb
pop
scas
sbb
mov
ficoms
sub
adc
jno
inc
divb
cwtl
jbe
divl
sahf
out
jne
dec
fwait
adc
aas
and
std
push
push
dec
xchg
hlt
inc
pop
rolb
cmp
pop
sti
mov
fmuls
cmp
nop
in
push
ds
adc
xor
lret
dec
push
mov
insl
mov
outsl
gs
testb
mov
inc
adc
xor
mull
loope
cltd
xlat
jmp
add
xchg
dec
fst
rcr
insb
in
das
cmpb
cld
adc
mov
es
leave
jae
ds
add
dec
mov
add
test
add
ret
fdivl
mov
jp
fisubrl
mov
add
push
mov
fdivp
xor
jb
inc
aam
in
xor
imul
in
jmp
movsl
daa
lret
inc
add
roll
or
inc
xchg
pop
inc
xor
sahf
outsb
rcl
and
bound
jbe
fdivrp
adc
or
jg
jp
mov
jle
and
cmpsl
pop
out
inc
test
sub
or
fcoms
mov
add
cmp
dec
hlt
sti
pop
dec
loop
and
inc
inc
inc
pusha
inc
pushf
push
mov
movsl
or
lret
cmpsb
add
add
sbb
mov
pusha
out
pushf
in
or
aaa
mov
jbe
and
adc
test
pushf
mov
out
add
sbb
add
pop
mov
cmpsl
mov
je
std
sbb
push
imul
bound
imul
gs
ret
ret
xchg
lds
push
cmp
and
shll
xchg
inc
scas
fidivrl
push
or
insb
xchg
loop
mov
mov
es
mov
lea
pop
cmp
loope
ret
rcrl
scas
movsb
ljmp
daa
sub
lods
add
mov
xchg
jns
into
lea
lods
mov
xlat
das
aas
or
es
jg
rcrl
dec
in
mov
sbb
push
pushf
lcall
scas
jl
test
mov
sub
fwait
push
mov
js
lcall
and
add
pop
or
cmpsb
push
loop
std
notl
and
inc
clc
imul
insl
pop
and
out
es
jl
mov
dec
mov
mov
out
or
lahf
xlat
mov
adc
nop
push
aas
pop
stc
jl
xchg
bnd
xchg
xor
pop
push
mov
add
movsb
sbb
aad
stos
loopne
mov
repz
pop
push
das
das
and
loopne
fisttpll
shll
xchg
or
sbb
cs
dec
dec
dec
aas
sub
xor
jns
sarb
pop
push
fucomip
sub
push
arpl
cmpsl
push
mov
xor
inc
cmpsb
jl
scas
or
gs
sub
jb
shrb
out
arpl
push
aas
out
fdivrs
cmc
sub
lcall
and
cmp
dec
lcall
loopne
ss
js
arpl
jl
jo
add
pop
cld
rolb
iret
xchg
cli
fcmovb
xchg
adc
jl
adc
leave
add
aas
cmp
or
pop
and
insl
sbb
cmp
ret
sti
inc
pop
mov
into
adc
icebp
fidivrl
pop
and
stos
stc
mov
dec
jne
cmp
inc
sbb
sub
adc
jg
cmc
jp
pop
fucomp
lret
pop
movsb
jb
mov
sbb
int
mov
rcr
xorb
mov
stc
dec
leave
pop
ficomps
imul
sub
xor
insb
fwait
inc
and
inc
mov
cli
inc
sbb
sar
dec
adc
mov
jle
or
jecxz
fidivl
adc
mov
jg
call
xchg
mov
faddl
cmp
lahf
xor
dec
xchg
movsl
pop
dec
xchg
shlb
jns
push
inc
adc
sbb
dec
xor
lahf
outsb
add
fsts
ret
pop
cwtl
xor
test
cmp
adc
add
fdiv
jb
sub
adc
iret
xchg
push
mov
cmp
xchg
dec
cld
and
adc
test
xchg
int
or
push
jmp
dec
pop
aad
mov
xchg
into
mov
sahf
or
xchg
clc
and
imul
js
iret
mov
lock
push
movsb
mov
sub
jns
lods
imul
cs
sahf
mov
les
out
dec
scas
xchg
ss
enter
sbb
pop
aas
imul
cmp
lods
hlt
mov
pop
xchg
decb
in
sti
add
mov
cmpsb
in
scas
iret
aas
adc
cmp
int3
les
bound
lods
or
pop
lcall
add
cld
cwtl
scas
mov
rorb
roll
jno
pop
jne
pop
pusha
or
lea
pusha
ds
lret
add
lret
ret
ja
xchg
jecxz
mov
xor
xchg
push
and
sahf
call
hlt
inc
aas
xor
bound
push
pop
mov
push
pop
sbbl
cmpb
mov
nop
mov
repz
imul
stos
cmp
and
push
loop
or
add
movb
lods
add
xor
lret
xor
pop
sub
cmp
sub
adc
cltd
pop
mov
mov
pop
stc
rorl
enter
xchg
hlt
outsl
adc
aas
das
repnz
fisttpll
out
sbb
jp
mov
xor
or
lods
mov
cmpsl
aas
cli
loop
pop
aam
pop
imulb
inc
in
fmull
or
jno
mov
jmp
movsb
mov
inc
inc
inc
movsl
xor
mov
and
or
add
xchg
jle
adc
ljmp
add
mov
xor
loope
jle
or
pop
mov
mov
jns
ror
fcmovb
mov
or
xor
jae
dec
pop
cmp
xchg
inc
insb
mov
jmp
pushf
xchg
imul
push
mov
rdmsr
imul
pop
into
icebp
add
es
js
mov
jmp
push
mov
mov
cmpsb
jb
and
inc
stc
loopne
jle
repz
cmpsb
sub
cmp
pop
sub
outsb
das
fistpl
inc
ljmp
addr16
repnz
dec
push
pop
movsl
loope
sbb
sub
out
push
lods
mov
ja
icebp
mov
in
jo
and
xchg
xchg
movsb
or
and
test
xor
push
push
fnstcw
lods
sti
cmp
rolb
fcoms
cmp
lahf
mov
std
adc
cmp
jecxz
push
and
orb
jo
fdivl
out
mov
fldt
rorl
mov
rcll
mov
insl
push
pop
push
negl
bound
aaa
pop
sub
mov
cmp
jecxz
leave
lahf
lahf
and
adc
jb
gs
ds
cld
xchg
int
sub
sahf
shrl
xor
fiaddl
jmp
mov
fbld
sub
mov
pop
inc
fdivs
dec
enter
jno
pop
add
lahf
xor
push
scas
ljmp
push
push
cltd
pop
add
jmp
outsb
mov
popa
lods
fistl
sarb
inc
mov
sarb
push
xchg
xchg
dec
pop
jmp
insl
stos
inc
aas
addr16
push
clc
inc
xor
push
icebp
nop
lret
roll
xor
mov
lahf
mov
in
mov
fldenv
ret
push
fsubs
cmp
mov
cwtl
add
xor
sub
lock
or
mov
dec
stos
into
mov
mov
lea
and
and
xlat
sbb
mov
or
loopne
jbe
pop
push
fmull
add
in
mov
sub
bound
sub
inc
inc
and
nop
adc
adc
inc
ffree
xchg
xor
pop
cmpsb
in
cmp
sub
add
int3
adc
aaa
jno
pop
mov
orl
ret
push
jns
push
pop
push
in
lret
add
ljmp
enter
adc
jecxz
mov
jno
fmull
inc
es
mov
push
jge
in
xchg
cld
xor
out
fcoms
sub
lods
pop
cmp
mov
cmp
mov
ja
je
or
fstl
rcll
in
cmp
cmp
mov
outsb
int
les
repz
xchg
daa
mov
hlt
dec
cmp
aas
mov
cmp
pop
fsub
inc
mov
lds
stos
mov
loopne,pn
mulb
add
mov
out
pop
imul
int
jmp
xor
mov
out
repnz
xchg
adc
or
stos
cmp
pop
cmpsb
decl
inc
std
std
sbb
mov
sti
fimull
je
repz
daa
sub
or
pop
add
lods
test
dec
out
sub
jg
mov
add
dec
sbb
rclb
inc
sbb
lock
add
pop
pop
mov
add
scas
pop
mov
int
cmp
push
sbbl
sub
or
or
cli
or
push
cmp
shll
add
in
push
mov
jne
mov
sbb
pop
rclb
xchg
inc
pop
leave
sbb
dec
push
dec
adc
cmp
dec
out
outsl
or
out
std
push
mov
dec
jmp
xlat
movsb
or
sbb
ljmp
cmc
mov
nop
aad
jbe
or
adc
push
daa
add
fidivrl
fchs
cmp
dec
pop
xchg
repz
push
mov
imul
xor
inc
in
js
xchg
shl
sahf
mov
out
dec
xchg
lock
adc
push
sub
dec
xchg
andb
mov
add
lock
ss
mov
dec
jne
pop
loop
ficoml
xor
lret
xor
cwtl
popa
xchg
cmp
add
nop
push
filds
sbb
and
xchg
and
cltd
dec
push
lds
mov
or
push
dec
mov
mov
and
insl
icebp
popa
cli
aam
out
out
cli
adc
push
dec
lahf
mov
mov
sub
xchg
cmp
filds
cwtl
outsl
aaa
aad
and
adc
xchg
lret
repz
pusha
cmp
xor
jecxz
jno
cmp
ret
seta
mov
xchg
jp
inc
adc
iret
pop
lcall
pushf
fwait
push
lcall
hlt
cltd
clc
push
ss
sbb
mov
testb
iret
psrlq
sub
push
xchg
jecxz
aas
or
les
push
sbb
or
das
jbe
lds
cmp
and
lods
jle
dec
mov
or
out
cmp
stc
jge
aaa
mov
dec
inc
clc
pop
inc
add
cmpsl
or
xchg
lcall
imul
sub
push
sub
sbb
jne
fsubr
dec
es
ret
mov
xchg
sbb
add
scas
jo
and
push
jmp
xor
fldt
pop
push
hlt
or
sbb
fisubrs
in
and
mov
rol
dec
adcl
inc
call
test
jecxz
cmp
loope
push
push
daa
push
inc
or
into
and
das
and
cld
inc
mov
mov
ljmp
or
rorb
fistpll
mov
and
lds
mov
pushf
pop
xor
and
xor
push
sub
popa
cmp
in
rcll
shll
aam
push
sub
mov
sub
in
push
xchg
addr16
and
jle
repnz
stos
gs
sub
jae
loope
fcmovnbe
lahf
and
mov
cmp
outsl
in
das
sub
xchg
bound
mov
rorb
jns
movsl
repnz
popa
lds
pop
and
scas
hlt
and
push
xchg
inc
int
cld
idivb
call
out
leave
in
lret
aam
cs
roll
test
pusha
sbb
mov
sbb
fisubrl
mov
and
sub
inc
shrb
insl
ficoms
push
push
inc
fcoml
pop
mov
sbb
or
outsl
add
sub
arpl
test
xor
xor
aad
aas
insb
test
xor
in
lahf
lods
push
adc
lods
mov
sub
mov
mov
or
pop
mov
cli
push
mov
lods
push
enter
je
lea
lcall
xchg
inc
sahf
add
ficoml
dec
mov
lret
fiaddl
jp
dec
cmp
cmp
cmp
jecxz
inc
das
xchg
adc
fnsave
adc
cmp
outsl
inc
addr16
outsl
ljmp
jbe
cld
cld
sub
jg
cli
xchg
xchg
inc
int3
pop
scas
test
adc
add
xchg
jbe
jb
pop
jl
arpl
or
in
ds
mov
xchg
ljmp
dec
and
mov
loopne
sbb
pop
adc
arpl
icebp
cmp
repnz
movsl
pop
push
bnd
pop
fnstcw
stos
nop
sbb
add
pop
xchg
xor
lcall
inc
mov
adc
mov
popa
lcall
jle
inc
out
shll
jae
insb
pusha
add
popa
add
cmpl
fstps
inc
popf
inc
cmpsl
es
cmp
shll
orb
js
sbb
pop
sub
push
sub
cli
sahf
icebp
adc
xchg
push
rol
nop
add
add
in
inc
sub
jns
add
pop
xor
adc
out
icebp
testb
orb
scas
pop
jnp
xor
inc
in
jae
or
inc
cmp
es
sbb
sbb
into
cwtl
in
push
xor
in
aad
add
lahf
dec
arpl
push
dec
std
cld
imul
je
pop
imul
movsb
adc
fnsave
add
add
mov
popa
out
xchg
int
shrl
cli
ja
cmpsl
mov
leave
rorl
ss
pop
fadd
decb
in
ja
mov
divl
sub
dec
push
int
lods
push
mov
iret
imul
fisttpl
pushf
sub
fcoml
add
aaa
es
lods
jge
cwtl
enter
jmp
mov
jge
xlat
jne
jle
pop
call
mov
ja
clc
cwtl
ds
stc
sbb
sbb
and
popf
inc
addl
testb
lea
pop
and
jo
bt
xchg
out
push
sub
movsb
in
mov
ss
mov
mov
pop
shl
movsb
jne
jne
adc
push
mov
loop
test
mov
jge
mov
mov
nop
lret
mov
imul
inc
mov
cli
in
ret
adc
jns
enter
scas
or
pop
add
test
xlat
sub
pop
xchg
dec
stos
clc
cmpsb
lahf
lods
test
mov
mov
nop
sub
sub
fbld
inc
enter
mov
movsb
mov
out
insb
pop
push
inc
inc
sub
dec
mov
sbb
ficomps
cmp
movsl
repnz
fwait
xchg
mov
xchg
subl
xchg
lret
test
pushf
sarb
jo
jge
and
pusha
inc
jo
cltd
sbb
aam
fistps
sti
inc
push
negb
jp
jp
xchg
jno
cmpsl
mov
xor
or
adc
imul
daa
xchg
cmp
cld
xor
jp
and
jnp
gs
jp
inc
popa
je
mov
jmp
cmpsl
fadds
aaa
cmp
xor
popa
daa
cmp
aad
movsb
ret
fstpl
cltd
sahf
in
inc
repz
pushf
rcll
out
outsb
mov
andb
dec
call
lret
adc
cmp
inc
ret
and
sub
mov
or
jo
pop
adc
insl
inc
push
pushf
xor
jecxz
add
mov
iret
enter
add
pop
aam
cmp
aaa
xchg
icebp
das
xor
enter
dec
xlat
xchg
dec
jecxz
or
rorl
aas
fistl
das
fcoml
out
adc
push
jno
cmp
push
arpl
or
int
clc
pop
mov
lods
push
insl
std
push
sub
scas
stos
or
gs
xchg
mov
sub
dec
pop
mov
shlb
pop
fwait
jnp
stos
jge
sbb
push
adc
orl
shrb
push
in
pop
insb
pop
push
in
adc
cmpsb
ds
xchg
cli
out
mov
shll
dec
in
jb
or
xor
js
leave
repz
dec
or
rorb
in
add
enter
and
ds
add
les
and
les
cmp
pop
test
and
stos
aam
insl
data16
adc
fdivrl
rcll
and
push
xor
dec
mov
jl
test
out
lods
aam
pop
add
adc
cld
iret
mov
les
pop
adc
push
aas
mov
push
aam
jno
mov
jmp
inc
lret
imul
cwtl
cwtl
dec
xlat
aam
into
loopne
adc
icebp
xchg
xor
adc
pop
sub
jmp
fadds
jmp
pop
and
jae
xor
mov
mov
or
push
and
icebp
jmp
fwait
js
repz
or
and
cmpsl
sub
lock
adc
loopne
cmp
dec
push
sbb
shrb
aas
mov
mov
movsb
or
xchg
lock
inc
xchg
or
xchg
test
in
gs
test
std
xlat
cmpb
aaa
cltd
jg
and
fcompl
fisttpll
xchg
arpl
pop
inc
dec
sub
popa
pop
push
imul
sahf
pop
add
fnsave
sub
out
jb
fiaddl
pop
rorb
inc
mov
in
je
lea
pop
jmp
xlat
add
dec
jmp
popa
jns
dec
out
pop
or
pop
in
iret
es
aaa
addr16
ficoms
push
push
xchg
out
mov
or
fucomi
xchg
or
sbb
insl
insl
in
int
pop
cmp
out
sub
sbb
push
inc
mov
shlb
inc
and
sub
adc
inc
and
aad
or
stc
mov
sub
jne
cmpsb
out
inc
int3
aas
xchg
fdecstp
jle
jb
push
cmp
seto
push
xor
bound
pop
loope
pushf
dec
fisubs
paddw
inc
sti
inc
scas
push
test
adc
fsubrl
push
or
pop
sbb
js
repnz
jge
bound
mov
xor
jge
pop
ja
push
aam
stc
mov
xor
mov
mov
pusha
aam
jo
lock
inc
dec
fdivrs
lret
adc
add
mov
and
sub
inc
xchg
lret
and
adc
jnp
cmp
sbbl
jl
mov
or
dec
sub
and
mov
lea
int3
pop
cli
stos
jb
fistpl
divl
mov
scas
in
in
xchg
neg
pop
or
xchg
or
mov
lock
movb
sub
fchs
and
in
call
sbb
or
das
pop
xor
int3
xchg
popa
pop
movsb
adc
xchg
mov
outsb
das
push
mov
pop
scas
imul
mov
xorb
in
lock
sbb
pop
dec
add
ret
pop
pop
shll
pushf
mov
mul
int3
lock
sbb
loope
sub
fnstcw
jge
jo
mov
lret
push
xchg
mov
or
loope
push
shrl
xchg
and
sti
sub
cs
sub
je
sbb
sbb
adc
sbb
xor
in
lret
loop
mov
test
call
cmp
js
inc
mov
push
xchg
shrb
inc
test
add
stc
sbb
shll
jl
call
in
xchg
insl
bound
movsl
lahf
mov
sbb
cmp
jnp
dec
adc
jl
icebp
xor
mov
dec
sbb
test
mov
fistpl
xor
inc
xchg
in
subb
mov
stos
push
filds
cmpsl
mov
xchg
dec
add
pop
sub
pop
inc
je
nop
jg
mov
loopne
inc
imul
dec
mov
rorl
add
cmp
or
add
pop
ss
out
pop
cmpl
js
hlt
jmp
data16
test
loop
outsl
pusha
mov
pushf
out
gs
inc
or
out
iret
jmp
sbb
lret
mov
pop
lahf
and
shll
cs
cli
lret
popa
inc
mov
ss
and
out
add
xchg
xor
aaa
push
fisttps
movsb
out
lods
add
daa
sub
cmpsl
inc
cltd
loope
and
lods
ror
mov
lret
clc
and
pop
hlt
add
fs
pop
push
and
or
nop
cmp
ss
or
repnz
out
out
add
sahf
mov
mov
mov
in
fistl
mov
das
cltd
xchg
ror
xchg
push
push
dec
dec
inc
lret
mov
xlat
pop
xchg
aad
sub
aad
cmpsl
push
dec
cmp
loope
arpl
int
sbb
in
movsl
sub
rep
movsb
or
fmul
clc
test
pcmpgtb
test
or
xchg
pop
jecxz
or
sub
test
xchg
dec
sub
nop
retw
mov
inc
jle
mov
in
aas
add
xor
mov
sub
inc
xor
int3
out
xor
jp
idivl
pop
je
dec
jns
movw
xchg
jo
or
hlt
jl
push
cmp
mov
rorb
aam
push
add
and
or
pop
repz
pop
ja
and
push
cmp
xor
fld
mov
popa
jg
je
pop
push
lcall
aaa
adc
cld
push
cmp
sbb
cltd
enter
rol
movsl
jle
mov
lds
xchg
test
mov
testb
mov
divb
xchg
dec
xor
cmp
sub
mov
lret
push
daa
subl
sbb
out
repz
dec
pop
xor
mov
push
ret
jnp
pop
lds
inc
jne
mov
popa
lds
xchg
xor
jp
mov
pushf
add
mov
xchg
imul
inc
jns
sub
sar
or
std
lods
jp
test
pop
shl
ds
je
insb
je
mov
pop
dec
int
jnp
insl
mov
out
ret
icebp
lret
orl
sub
popf
insl
and
jl
lret
push
out
cmpsb
in
adc
leave
xchg
or
push
test
repz
xor
mov
sub
stc
icebp
or
jg
ret
mov
mov
adc
int3
push
jg
sar
add
sbb
imul
jnp
mov
add
leave
call
pop
incb
cltd
shll
cmp
js
add
movsb
lea
cmp
mov
psubw
rcll
add
or
xchg
outsb
cmp
jae
or
dec
sbb
rcl
jl
enter
jbe
or
in
jnp
shll
stc
mov
xchg
rcrl
sbb
in
add
rcrb
pop
fcmovnb
sbbb
roll
and
out
out
call
pop
add
mov
aam
addr16
cmc
sbb
sahf
lods
jle
or
pop
aam
rcll
adc
frstor
jle
outsb
mov
pop
jnp
fdiv
mov
int
into
inc
fldt
sub
aas
aad
jg
mov
enter
xlat
push
xlat
pop
pop
rcl
xchg
movsb
mull
cmpsb
popf
insb
ljmp
pop
das
shlb
sahf
xchg
std
scas
stos
push
sub
insb
push
dec
xlat
or
fwait
outsl
ret
dec
or
jmp
mov
add
mov
sub
outsb
and
stos
jmp
add
pusha
movsl
aas
popa
lods
pop
daa
ss
sub
cmp
lret
jle
xchg
push
mov
and
scas
stos
dec
scas
xrelease
data16
push
dec
xor
xchg
cmpsl
fs
adc
adc
mov
int
in
mov
mov
insl
mov
xlat
test
cmp
xchg
mov
lods
pusha
testl
mov
shr
sbb
or
xchg
or
les
jp
in
mov
out
fcomps
fisubl
jo
scas
pop
push
lahf
icebp
sti
xlat
iret
mov
mov
je
jecxz
adc
or
xor
rclb
xchg
push
mov
pusha
mov
push
and
push
imul
sub
cld
js
popa
lods
xor
repz
outsl
outsb
xchg
adc
and
add
imul
inc
add
adc
sbb
addb
jmp
cmc
enter
push
push
es
sahf
add
pop
jae
mov
arpl
inc
out
mov
es
repnz
aaa
push
dec
in
xchg
mov
fisubs
es
pop
sbb
cmp
xchg
lods
sbb
xchg
xchg
ss
cmp
ljmp
scas
mov
scas
int3
and
shrb
jnp
jne
cmpsl
sub
mov
pop
in
pop
mov
adc
bound
mov
inc
jno
push
adc
pop
jns
mov
jb
xor
xchg
and
mov
stos
or
out
lods
cs
jge
jmp
jp
xor
pop
cld
call
dec
sbb
cmpsl
pop
mov
push
mov
dec
pusha
or
mov
arpl
xlat
or
sub
imul
dec
dec
out
mov
fisubrl
or
xor
test
in
and
push
mov
and
es
sub
push
jecxz
jo
arpl
lea
stos
fistpl
add
daa
les
dec
inc
push
sub
es
sub
cld
and
mov
jge
mov
lea
mov
inc
inc
xor
dec
sub
icebp
bound
je,pt
stos
test
push
mov
cli
and
or
cmp
pop
adc
push
sub
and
mov
lea
cmpl
scas
push
push
ds
cmp
pop
mov
add
aaa
daa
rcl
push
xchg
fsub
jbe
hlt
loop
dec
mov
push
pop
insl
outsl
test
push
xchg
dec
push
sbb
loop
fwait
inc
cli
fcoml
jle
mov
stc
jo
lds
test
jne
ds
jg
mov
lods
rcr
and
and
or
and
std
mov
cmpsl
mov
and
aas
lock
into
mov
test
dec
jb
xor
pop
es
jmp
push
cmp
cmp
aas
add
add
inc
mov
dec
sub
cmc
pop
mov
jg
das
je
addr16
adc
movsl
cli
stos
fsubrs
xchg
das
pop
jp
mov
mov
cli
and
lods
cmc
call
xlat
clc
inc
mov
sub
imulb
mov
adc
jmp
out
xor
jg
outsb
pop
mov
and
lret
mov
xchg
shr
jno
sub
push
cmp
fldt
out
sahf
pushf
repnz
sar
jl
and
lea
cs
jno
testl
sti
orl
out
shlb
mov
arpl
adc
jbe
int3
in
push
imul
sbb
inc
sbb
adc
push
dec
jecxz
nop
push
data16
cmp
rcrl
push
push
adc
cmp
out
bnd
push
test
sbb
sti
stos
pop
insb
xor
shrb
inc
mov
push
xchg
dec
adc
scas
sub
sub
popa
push
inc
cmp
cmc
leave
xor
jnp
add
rclb
mov
lcall
ja
scas
push
fsubs
sbbb
dec
pop
fwait
push
fnstenv
adc
in
testb
mov
ret
push
bound
fidivs
mov
inc
push
gs
inc
push
jl
and
sti
fsub
int
cmp
jae
out
testb
hlt
loope
pop
or
inc
mov
mov
or
jae
loope
outsl
movsb
fisubl
fwait
in
mov
fisubl
cmc
xchg
clc
xchg
js
mov
mov
mov
xchg
jo
xchg
fdivrs
callw
push
dec
call
adc
cs
xchg
das
adc
js
mov
dec
pop
stos
lock
pop
adc
pop
std
aam
ja
mov
insl
dec
lahf
sahf
adc
xchg
outsb
mov
jb
and
daa
sbb
hlt
mov
loop
jp
mov
std
sbb
adc
jno
sub
ficoms
pusha
sahf
pop
sarl
fdivl
cmp
outsl
cwtl
stos
sti
loop
push
loopne
adc
mov
imul
insl
lret
je
push
adc
mov
push
cmpl
cmpsb
rclb
orl
xor
jo
lods
loopne
xor
push
lds
mov
mov
dec
fisttps
cmpsb
movsl
inc
inc
cmpsb
xor
nop
sub
dec
pop
push
lahf
stos
in
cmp
lds
sub
rcrl
popa
sbb
push
mov
idivb
mov
cmpsl
jle
das
adc
pop
ss
test
sbb
negl
adc
mov
push
jp
sti
and
jb
xchg
pop
shrb
adc
jns
out
mov
loop
movsb
cltd
in
loopne
push
push
lock
jns
call
aaa
dec
mov
cwtl
outsb
cmc
stos
jbe
je
mov
jo
mov
jbe
out
push
jno
push
call
movsb
jnp
adc
lret
mov
inc
mov
popa
add
jge
mov
imul
in
xor
fs
mov
ljmp
xchg
xor
lret
xor
mov
fistps
out
sahf
outsl
push
sub
adc
aad
test
xchg
push
sbbb
rolb
push
sbb
or
jae
ret
add
xchg
pop
xchg
movsb
sbb
dec
adc
xchg
xor
and
pushf
push
mov
adc
sbb
outsl
cmp
lret
sbb
mov
aas
mov
loopne
loop
cmp
mov
movsb
mov
and
movsl
push
cltd
mov
notl
jbe
mov
jno
outsb
aas
jae
stos
fcompl
lahf
push
outsl
and
adc
ss
and
mov
jecxz
push
loopne
gs
dec
aaa
lcall
outsl
xor
sub
add
or
imul
je
push
jle
inc
movsb
loop
mov
mov
lods
push
sbb
lods
lods
repz
or
gs
fsubr
push
and
movl
mov
push
mov
das
fisubrs
aas
out
xchg
loope
mov
xlat
push
nop
adc
push
cmp
mov
ja
imul
out
mov
or
shrl
xchg
bound
cmp
push
pop
call
and
inc
test
push
cltd
jno
test
dec
das
mov
and
nop
cli
sbbl
not
call
inc
add
es
nopl
adc
or
jo
xorl
mov
or
into
xchg
ja
ret
jl
aad
xor
mulb
adc
cmp
adc
pop
test
inc
loop
xchg
test
fs
dec
push
test
mov
sti
mov
xor
and
fs
and
imul
scas
adc
aam
push
fmuls
mov
and
cmpsl
loopne
push
and
es
aad
xor
push
fnsave
ds
mov
fistpll
inc
pop
pop
ficoml
xchg
sbb
dec
repz
movsb
pop
leave
fwait
es
scas
mov
inc
pop
mov
mov
jnp
xor
loope
push
cmp
push
clc
push
xchg
sahf
ljmp
lret
das
cmp
out
push
pop
adc
stos
repz
add
les
inc
fwait
add
stos
pop
xor
jne
divl
mov
dec
adc
pop
imul
daa
jmp
push
ds
jg,pn
pushf
jp
dec
mov
mov
mov
mov
inc
jmp
mov
xchg
das
jp
inc
orb
inc
or
jae
push
js
mov
push
rolb
ljmp
std
repnz
aam
psubd
test
xchg
movsb
jno
or
scas
in
jnp
and
mov
mov
mov
mov
test
addb
sbb
jg
mov
cmpsl
js
push
add
xchg
scas
cld
ret
cmc
arpl
mov
lret
mov
repz
in
movsl
and
lods
dec
ret
xchg
cmp
lcall
bound
and
xor
pop
mov
shrl
cmp
mov
enter
sarb
outsb
shll
out
adc
dec
push
into
mov
cmpsl
dec
into
add
cmp
push
push
ljmp
pop
lcall
pop
loopne
sbb
sar
mov
aaa
mov
movsb
sub
cmp
or
int
fidivrl
dec
sbb
mov
test
or
push
imul
inc
xor
xchg
inc
arpl
mov
test
and
and
sub
gs
inc
push
fisubrl
mov
mov
es
adc
scas
jne
mov
test
icebp
jo
dec
mov
sbb
pop
jb
mov
cli
loope
add
icebp
outsb
push
hlt
fdivl
ja
iret
or
inc
int3
pop
fildll
cli
mov
mulb
push
aas
mov
in
cmp
sub
nop
jbe
jo
adc
mov
imul
xlat
shrl
mov
and
jne
ffree
fmuls
xchg
sub
outsl
jl
into
shrb
movsl
cmp
push
clc
xor
xchg
iret
xor
das
dec
ljmp
xchg
lret
mul
pop
mov
cmp
arpl
test
movsb
push
push
mov
outsl
xor
dec
xchg
xchg
aaa
movsb
cs
fldcw
sub
add
cmp
pop
test
stc
shlb
and
lods
iret
pushf
cmp
or
mov
and
dec
in
outsl
rcll
mov
dec
mov
or
leave
jnp
fdivrs
subb
call
test
xor
sbb
cmpsb
mov
inc
test
adc
jae
ds
nop
dec
cmp
test
jmp
adc
mov
xchg
sti
mov
scas
addl
fistps
lret
xor
in
movsb
aam
in
cmp
dec
int3
dec
jl
lret
mov
test
jnp
push
mov
push
int3
mov
xchg
cmp
inc
pop
mov
mov
insb
xor
jge
dec
in
inc
jo
mov
insb
call
and
mov
rcll
pushf
sub
xor
jno
xchg
sbb
fdivs
xchg
jne
shll
jecxz
aaa
pop
stc
xchg
lcall
jecxz
and
push
lahf
outsb
dec
sub
int3
add
push
xchg
push
mov
sti
cmp
jge
push
js
subl
pushf
jb
mov
push
aam
adc
inc
outsl
jnp
fyl2x
add
lret
add
cwtl
ljmp
movsl
add
shlb
fwait
lock
lahf
int
cli
pushf
in
mov
aad
mov
fstpl
mov
cmp
insl
inc
mov
xchg
xchg
ljmp
jle
mov
push
ss
and
int
inc
and
jg
mov
mov
cmp
push
dec
daa
cld
push
icebp
mov
fwait
xchg
xor
les
lods
inc
adc
stos
and
jne
or
sbb
pop
rorl
outsl
cmpb
or
cltd
fidivl
jmp
scas
in
xchg
lret
sbb
ds
mov
std
add
nop
lret
rorl
hlt
jno
ss
jecxz
jno
inc
mov
icebp
stos
fimull
ds
xchg
sbb
inc
jmp
inc
jne
es
aaa
mov
push
mov
call
fistl
push
pop
clc
data16
xchg
push
mov
pop
dec
stos
ficoms
mov
gs
rclb
add
dec
push
hlt
daa
popa
push
shlb
jg
adc
mulb
sub
adc
xor
lcall
lret
xchg
out
aad
sbb
sub
mov
inc
bnd
and
mov
fidivrs
and
add
jno
cld
pusha
jecxz
inc
vmptrld
lret
out
and
mov
jne
in
fnstenv
pop
pop
mov
add
fcoms
add
pop
push
les
loop
xor
loope
pop
and
fisubl
push
or
jnp
dec
and
fstps
les
cltd
mov
sub
pop
cmp
or
cld
mov
js
movsb
or
lahf
jo
dec
jnp
fcmovb
jne
movsl
ja
sbb
xor
fmul
sbb
pop
inc
xchg
pop
outsl
pop
movsl
or
js
gs
sbb
sbb
je
pop
mov
inc
hlt
leave
mov
aaa
fstps
jl
xchg
call
xchg
cmp
fbstp
xorb
out
mov
ss
mov
sbbb
xlat
dec
je
or
pusha
mov
sub
lcall
xor
xor
fstpl
push
js
push
leave
xor
adc
jb
fbstp
inc
or
mov
push
pop
mov
outsl
std
xor
sbb
fadds
or
and
inc
dec
int3
xorl
and
jb
lcall
scas
pop
inc
or
in
mov
and
push
movsl
fistps
fsubp
popf
out
loop
inc
add
rorb
ds
push
pop
jns
push
pop
cld
xor
jns
dec
lret
cmp
sarl
add
add
mov
lret
mov
mov
add
out
js
pushf
inc
jge
scas
lcall
dec
cmp
inc
push
dec
loope
lcall
push
sbb
int
test
cmpb
cwtl
jae
insb
pop
fwait
lods
sbb
sub
sub
add
dec
mov
sub
jb,pt
lea
add
in
mov
jp
push
shrb
mov
sbb
outsb
sbb
stos
mov
int3
cli
std
sub
pop
ljmp
sub
mov
mov
cmp
push
push
mov
call
hlt
sbbl
into
faddl
pop
jne
inc
ret
cmpsb
add
or
adc
push
sub
mov
mov
aad
in
jg
mulb
inc
std
ret
mov
loope
sbb
scas
out
lock
adc
mov
rorl
inc
mov
loop
neg
jb
inc
or
cltd
adc
leave
pop
and
xor
mov
mov
cmp
lods
dec
popf
xchg
jnp
cmpsl
cli
mov
lea
out
mov
ja
std
xchg
lea
imul
mov
sti
stos
push
outsb
xor
fidivs
sarb
xor
or
lock
inc
into
push
fdivs
or
lods
mov
into
lock
out
idivb
inc
ret
ja
mov
and
sti
enter
adc
sahf
fdivrl
aam
lea
or
lods
lock
js
sub
and
push
and
movsl
scas
lret
test
mov
mov
or
shlb
daa
sbb
push
in
mov
jb
or
inc
pop
cwtl
lret
ss
outsl
push
enter
inc
adc
iret
adc
cmc
inc
jns
sbb
sub
ja
dec
pop
lahf
xchg
and
inc
fildl
rclb
scas
jne
add
cmc
es
pop
fadd
addl
shlb
rolb
jbe
icebp
fs
imul
sub
loope
clc
inc
stos
push
and
stc
in
nop
mulps
fs
movsb
push
xlat
dec
adc
push
jle
loop
out
shlb
insl
xchg
add
push
mov
leave
jo
push
inc
loopne
fcoms
jp
xchg
mov
jbe
pop
push
mov
stos
imul
adc
mov
mov
bound
shrl
sub
pop
jnp
xchg
adc
aas
ljmp
out
int3
ficompl
lcall
push
inc
xor
lds
aaa
pop
outsl
fcompl
leave
les
aam
test
pop
mov
imul
out
jo
pop
sbb
icebp
call
push
orl
lds
stos
je
lock
fcompl
das
adc
or
fdiv
clc
mov
push
clc
dec
jecxz
jecxz
and
cmp
fidivs
movl
inc
push
pop
jb
sub
fidivl
es
movsl
ss
rolb
fldl
scas
sub
into
test
lea
int3
jae
mov
or
loopne
cli
adc
cmp
inc
jns
arpl
rorl
add
out
adc
out
push
cmpsb
test
or
loopne
mov
push
les
inc
push
jle
test
fwait
xor
test
cmp
and
enter
mov
xorb
inc
pop
push
insl
in
lea
fwait
pop
pop
push
mov
pop
out
inc
push
test
jns
sub
add
mov
shll
sub
cmp
pop
mov
inc
dec
mov
jmp
out
xor
imul
cmp
flds
sbb
decl
jg
test
mov
jb
lcall
pop
pusha
and
sub
mov
lods
int
test
jge
into
jge
test
sahf
out
jae
dec
aam
das
add
sbb
mov
divb
repnz
mov
pop
xchg
jne
popa
jp
mov
sbb
jae
pop
xlat
jno
lret
call
add
movsb
popa
insb
ss
mov
xchg
xchg
add
sbb
mov
and
psrlw
xor
inc
gs
getsec
jecxz
loop
mov
das
or
fdivr
add
in
cli
jmp
sub
in
setnp
imul
rorb
sub
dec
mov
inc
xchg
sub
inc
lds
mov
or
mov
xchg
pop
cmp
pop
repz
mov
loope
and
pushf
inc
sti
into
mov
clc
jbe
lea
and
je
lret
popf
push
scas
adc
outsb
add
ljmp
lods
aam
push
pop
rorl
mov
mov
cmp
xchg
mov
cmpsl
enter
sub
and
mov
jns
mov
sbb
lcall
scas
shll
lcall
ret
and
jbe
stc
fadd
xchg
cmp
jg
or
push
pop
inc
seta
das
fdivs
dec
ds
data16
jecxz
inc
or
mov
sub
inc
popa
aad
dec
sub
push
add
sub
sub
or
mov
es
and
sbb
jb
and
jle
sbb
inc
lods
inc
dec
push
scas
xlat
mov
std
and
rep
std
mov
ljmp
decl
out
sub
pop
xor
cmpsb
dec
fcomps
xchg
scas
jmp
add
aad
pop
xor
and
add
test
repnz
in
fs
xlat
adc
add
pop
adc
pop
imul
add
std
or
or
and
jp
pop
mov
push
sbb
pushf
imul
fwait
pop
xor
dec
mov
sbb
imul
cmc
jg
xchg
pushf
push
fdivrl
inc
loopne
sub
ret
fldt
jge
sub
js
mov
decb
stos
repz
mov
popf
jb
xor
mov
or
sub
and
fs
jne
mov
and
jmp
icebp
xor
leave
xchg
push
ret
mov
mov
inc
outsl
gs
mov
adc
mov
fdivl
sub
mov
jle
mov
jne
out
int
test
incl
sbb
shrl
jmp
aam
ret
or
bnd
stc
sahf
fadd
mov
enter
ja
ljmp
fdivrs
test
and
push
cmp
pop
out
mov
mov
mov
imul
mov
notb
stos
pop
push
subl
cmp
je
out
imul
pop
aad
adc
cmc
ljmp
mov
xchg
sbb
insb
cmp
ficompl
jle
push
addr16
das
adc
sbb
jnp
lock
sbb
add
stos
adc
xchg
sbb
xchg
inc
into
hlt
lahf
outsl
xchg
repnz
add
cmpsb
cmp
lahf
out
testb
imul
data16
shlb
movsb
or
es
push
inc
lcall
jae
fists
pop
mov
je
adc
in
add
scas
in
shll
push
inc
in
xchg
ret
out
data16
mov
mov
push
jb
sbb
int3
cmp
int3
push
nop
and
xchg
mov
xchg
add
arpl
dec
push
mov
inc
test
dec
jmp
xchg
out
push
adc
dec
cs
or
mov
push
push
arpl
dec
sub
push
cmc
sbb
iret
test
loop
out
mov
mov
adc
mov
loopne
mov
xor
mov
stos
add
xor
fisttps
add
dec
or
or
xor
dec
pushf
insb
xor
mov
cmp
movb
cltd
push
mov
cmp
icebp
pop
lret
mov
push
xchg
mov
mov
fstl
cmp
push
imul
lret
sbb
js
ficoml
push
cli
cltd
cmpb
dec
sub
push
or
mov
fiadds
fisubl
rcrb
adc
das
add
lods
pop
in
ja
in
xor
cmp
sbbl
jo
jl
dec
xchg
mov
pop
mov
push
inc
xorb
outsb
insb
div
out
stc
lret
stos
cli
test
mov
fiadds
hlt
adc
fisubl
in
jns
mov
fiaddl
stos
xor
add
pop
imul
mov
cmp
add
jl
mov
lock
fcompp
cmp
clc
xchg
add
imul
bound
push
mov
pop
mov
stc
je
or
add
push
pop
jp
lcall
mov
jbe
fidivrl
jb
outsl
lea
xchg
mov
dec
pusha
sbb
movsb
pop
mov
out
xchg
mov
pop
push
and
add
push
mov
pop
mov
push
imul
arpl
inc
and
or
pop
popa
test
dec
jp
mov
ss
cld
enter
test
loopne
sbb
jb
mov
pop
sbb
stos
xchg
test
add
in
mov
xlat
dec
rcl
je
adc
in
lahf
dec
call
loopne
sub
lock
mov
mov
dec
into
cmpsl
mov
ficoms
push
mov
adc
daa
lea
clc
add
mov
sbb
call
lcall
push
cmp
imulb
popa
mov
xchg
iret
xchg
lds
aam
push
pop
and
dec
fsubrs
push
or
aas
xchg
arpl
ret
mov
fisubrl
push
and
pop
fnstcw
mov
pop
mov
push
ffree
test
xchg
pop
dec
loop
fnstenv
jle
xor
push
outsb
or
add
lods
mov
fmuls
lods
push
scas
xor
xor
pop
xchg
or
into
sysenter
mov
push
les
sarl
jne
sub
lret
arpl
xchg
and
mov
dec
xor
test
test
daa
pop
aad
stos
rcr
jbe
push
sub
ret
push
cmp
into
adc
push
push
dec
ljmp
pop
lcall
inc
sarb
orl
or
jecxz
test
notl
mulb
in
xor
dec
fsubs
push
rorl
sbb
sub
pusha
xchg
in
enter
aam
pop
or
into
jo
leave
movsb
sub
adc
cmpb
sbb
and
or
pop
out
mov
ja
rorb
popa
int3
lds
cs
jp
sub
int
mov
cld
mov
ret
push
and
pop
add
test
mov
ret
mov
inc
add
mov
cli
jne
mov
std
xchg
push
jecxz
fs
sahf
je
jb
aas
std
mov
jb
pop
inc
mov
sbb
lods
cltd
sub
jg
mov
or
loopne
in
insl
dec
and
test
pop
mov
inc
std
mov
addb
ret
neg
icebp
divl
icebp
and
fdivr
xorl
lods
jo
add
cs
loop
adc
inc
add
imul
inc
mov
mulb
sbb
mov
cs
fs
mov
xlat
mov
pop
xor
test
xchg
inc
popf
mov
das
or
jnp
mov
cmp
outsl
jo
leave
outsl
test
test
out
in
shl
jns
cmpsl
push
pop
cmp
fists
cltd
xchg
fs
pop
and
aad
sub
and
mov
xor
push
test
mov
sahf
pop
sbbb
fstpt
pop
pop
incl
es
cmp
mov
sbb
inc
addl
adc
out
xor
fwait
pop
ret
jne
arpl
lret
inc
cltd
push
sbb
lods
movsl
inc
inc
sub
aad
data16
mov
dec
data16
xchg
mov
xchg
adc
mov
push
xchg
loop
dec
cli
mov
lahf
adc
imul
cmp
rcr
pop
dec
repz
jg
adc
jnp
enter
rcrl
mov
and
imul
mov
add
inc
loop
pusha
inc
rcrl
js
sub
aas
call
into
outsl
xchg
mov
orl
mov
ret
pop
push
xor
fisubl
iret
mov
inc
movl
mov
xchg
sub
xchg
lret
or
jle
pop
jb
inc
dec
adc
aaa
jmp
data16
mov
inc
cmp
mov
clc
icebp
dec
mov
es
pop
push
in
inc
ret
pop
test
jmp
adc
pusha
push
outsb
push
push
loopne
pop
les
cmc
sahf
xchg
mov
xchg
sub
aam
cmp
aad
and
pop
jmp
sbb
sti
mov
not
out
mov
fisubs
lcall
leave
out
adc
xchg
test
daa
cmp
pop
add
mov
sbb
push
into
ljmp
fstpl
push
sahf
ds
orb
sbb
loopne
movsb
or
jp
xchg
ret
add
inc
int
imul
in
test
jecxz
mov
sbb
negl
es
arpl
in
nop
adc
sub
ja
lret
cs
add
cmp
lods
imulb
clc
mov
das
and
aaa
mov
repnz
shlb
dec
xchg
repnz
mov
test
jns
push
aas
xchg
mov
bound
and
xchg
mov
fisubs
sbb
add
push
and
cmp
and
and
mov
popa
cmp
aaa
sub
fs
mov
mov
ret
or
sbb
inc
cmp
mov
mov
fistps
stos
jo
les
pushf
imul
fiadds
sbb
bound
cmc
cmp
mov
mov
or
push
xorl
into
aas
stos
out
mov
push
jecxz
push
jne
cmp
xor
jmp
mov
jmp
ret
in
push
xor
cld
jp
jmp
cmp
pop
fstl
fisubl
loopne
mov
lods
jb
lcall
dec
mov
or
ja
add
rcrb
fadds
je
sub
push
push
and
out
ret
push
not
ljmp
ret
or
pop
int3
pop
or
inc
imulb
and
xchg
or
pop
mov
cmp
shrl
adc
cmp
popf
mov
xchg
repz
sbb
jmp
clc
repnz
cmpsl
xchg
dec
out
stc
mov
mov
mov
sub
mov
lods
dec
pop
add
addw
adc
sub
les
mov
jb
push
test
es
cmp
gs
xor
xchg
pusha
jge
rorb
cmp
mov
bound
cmpsb
xor
mov
les
outsb
add
cmpsb
insb
push
lods
sub
xor
dec
ja
negb
adc
or
pop
inc
mov
mov
inc
adc
loopne
je
mov
fnsave
mov
andb
cmp
mov
ds
mov
outsb
and
mov
sub
dec
sub
and
mov
mov
adc
add
stos
imul
lea
fcomps
inc
push
loope
add
cwtl
jle
cltd
in
nop
mov
mov
push
mov
ror
jns
or
adc
add
pop
sti
jle
mov
aas
loopne
sahf
out
pop
cltd
pop
inc
das
dec
popa
jmp
daa
sbb
cmp
sbb
pop
rcr
pop
imul
lret
in
cmp
shr
icebp
insl
gs
mov
popf
cmc
pushl
jae
mov
les
mov
inc
mov
add
addr16
cmpsl
cli
rcll
lods
pause
pushl
mov
mov
imul
out
mov
and
lods
loope
stos
hlt
jae
xchg
test
pop
in
in
repnz
push
data16
add
sar
dec
lds
lret
js
in
lahf
out
fiaddl
add
test
mov
daa
not
or
insb
xchg
adc
inc
pop
out
bound
loopne
pop
add
std
mov
add
lea
xchg
mov
dec
cltd
xchg
and
arpl
push
cmp
pop
push
lds
rcl
out
nop
or
aaa
pop
imul
adc
leave
bswap
shr
cmpsl
dec
inc
inc
push
je
movsb
cmpsb
sub
jnp
and
and
and
sti
out
testb
jmp
sub
cmp
dec
mov
shrl
scas
fwait
aaa
in
stc
xchg
pop
inc
cs
insl
sbb
dec
ljmp
out
int3
fsubrp
push
mov
cs
movsl
sbb
jbe
mov
enter
inc
push
jnp
push
das
cli
sarb
mov
add
adc
les
bound
pop
loop
js
imul
incl
mov
push
lahf
aas
push
test
addl
push
sbb
push
and
push
mov
xor
jae
mov
mov
inc
cmpsl
mov
aas
mov
add
mov
cmp
ror
cmp
addb
out
and
dec
hlt
sbb
adc
lds
and
jp
dec
jb
mov
pop
mov
jmp
flds
fadds
push
xor
cwtl
mov
xchg
adc
sbb
popf
cmc
pop
push
stc
loopne
popa
xchg
mov
int3
mov
xchg
xor
int
imul
jmp
mov
cmp
push
int3
jns
arpl
mov
sahf
and
outsb
pop
push
or
jns
insb
out
cmp
mov
shll
mov
pusha
notl
xor
xor
jo
std
fs
bound
mov
pop
bound
ret
lcall
jae
fbld
push
sbb
jae
sub
test
cli
data16
shll
inc
sti
mov
mov
add
adc
into
jmp
adc
dec
fnsetpm(287
lea
sbb
popl
fldenv
lcall
es
or
scas
and
sub
and
push
arpl
shlb
mov
cmp
mov
loopne
add
lds
cmpsl
movsb
test
push
sbb
inc
shll
popf
xlat
push
data16
mov
jge
stos
inc
mov
mov
dec
mov
lret
scas
xchg
pushf
jmp
adc
xadd
sti
sarl
mov
dec
insl
icebp
int
jae
lea
push
xchg
cmp
mov
xorl
scas
pop
scas
xchg
jecxz
mov
mov
test
stos
mov
push
xor
dec
xchg
std
cmpsb
icebp
mov
std
add
jns
inc
loopne
decl
int3
aam
jo
and
aas
pop
aam
out
mov
jecxz
push
jmp
je
dec
stos
aas
mov
push
mov
add
jg
sub
pop
jg
or
test
push
push
dec
test
inc
les
rol
or
insb
in
testb
mov
add
inc
add
dec
jmp
mov
dec
cs
test
pop
in
js
enter
int3
inc
ret
dec
orb
add
insl
mov
test
aam
inc
call
push
ss
jecxz
dec
xchg
aam
sub
inc
push
addb
adc
lods
clc
cmp
mov
rorl
cmp
xchg
inc
fdivs
xchg
and
pop
fiaddl
decb
sub
lods
pushf
pop
js
pop
in
xchg
sbb
fstpt
dec
jge
stos
into
push
xor
jmp
jo
cs
imul
mov
inc
nop
xor
ja
dec
and
sub
push
dec
pop
outsb
aad
mov
popa
pop
mov
mov
outsl
inc
outsl
iret
fs
pusha
stos
add
or
bound
dec
inc
test
int3
or
lcall
dec
roll
out
xchg
xchg
sbb
adc
sbb
in
ss
xor
jl
mov
or
cmp
lock
pop
outsb
mov
imull
mov
arpl
jae
add
sbb
aam
sahf
jmp
xchg
add
lcall
adc
jp
repnz
inc
aaa
js
test
jge
addl
pop
leave
jns
sub
sarb
and
loop
fdivl
cmp
inc
sub
inc
in
mov
ljmp
add
cmc
push
mov
jecxz
jp
xor
test
inc
je
pop
add
jb
fldcw
addr16
fsubrs
xor
cmp
outsb
push
fsubr
mov
jb
adcb
fwait
or
jb
out
cld
aaa
jns
add
push
add
push
inc
pusha
adc
fistl
or
sub
dec
add
mov
jb
es
outsb
mov
cld
iret
sbb
jne
icebp
dec
jno
jnp
add
pushf
dec
lods
std
je
add
pusha
xor
test
mov
pop
stos
in
pop
lahf
iret
rcll
rcrl
in
clc
xchg
xchg
test
dec
movsl
in
iret
jmp
pop
cltd
rorl
js
mov
enter
ss
dec
fisubrl
xlat
pop
jno
les
mov
jae
lock
xchg
imulb
lahf
lahf
ja
ds
sahf
add
cmpsb
cmc
push
and
adc
aam
call
pop
pop
test
jb
in
push
xor
xor
xchg
xchg
push
xchg
popa
inc
cs
shlb
outsb
adc
js
pop
adc
inc
sbb
adc
push
mov
dec
aaa
aam
inc
pop
adc
inc
sub
es
inc
pop
inc
mov
and
mov
mov
outsb
jne
nop
cmp
adcl
and
or
xchg
adc
pusha
push
sti
inc
pushf
xchg
int3
xchg
in
call
insb
inc
jecxz
fs
jns
mov
lods
stc
inc
sbb
adc
xor
mov
and
push
lds
lods
add
dec
push
in
cmp
fisubs
test
aas
mov
sbb
ficoms
leave
jmp
mov
pushw
dec
or
lods
das
enter
insb
push
fwait
jne
xchg
test
adcl
movb
cmp
imul
lcall
xchg
and
jg
scas
mov
mov
jno
mov
push
adc
push
lea
in
movsl
inc
sahf
mov
pop
xchg
inc
in
lock
clc
sub
push
and
jae
dec
jb
jno
mov
dec
call
jno
jnp
add
and
dec
xor
mov
cmp
mov
dec
pop
add
fildll
cmp
les
cli
add
sub
ja
xor
test
mov
into
xchg
fwait
test
je
adc
fimuls
sbbl
ljmp
lock
test
jns
fidivrs
imul
add
gs
cli
fistpl
adc
pop
pop
enter
pop
dec
in
scas
fidivl
inc
sbb
sbb
test
dec
and
fisttpll
ljmp
fwait
xchg
mov
dec
dec
inc
add
sbb
jle
mov
mov
sbb
pop
cmpsl
nop
iret
mov
aas
fdivs
dec
mov
fbld
push
mov
add
movsl
out
sub
mov
insb
movsl
cmpsb
push
xor
loope
pop
push
test
aad
pop
or
std
mov
hlt
pop
push
nop
cmpsl
pop
lahf
jbe
jg
lds
jb
hlt
mov
adc
aas
fdiv
mov
fdivs
in
push
fisubs
pushf
adc
or
mov
inc
test
loop
or
pop
jmp
push
inc
add
lcall
mov
or
cmpsb
arpl
push
pop
daa
push
sub
add
jmp
and
mov
cmp
scas
test
aad
test
sbb
popf
fsubrl
mov
mov
out
or
aam
das
mov
out
bswap
pop
jle
andb
dec
jne
leave
stos
pop
int
fwait
push
add
sub
out
aam
jmp
dec
mov
sbb
loopne
mov
fs
outsl
cmp
inc
or
les
sbb
sbb
pushf
outsb
jmp
shr
pop
mov
add
pushf
cli
into
cmp
aad
ljmp
inc
cwtl
pop
loopne
cmpsb
out
or
push
push
test
jo
push
mov
fs
sahf
in
push
cld
fisttpll
jnp
jle
adc
sti
sub
mov
jbe
sbb
mov
divb
and
inc
jno
and
and
mov
das
test
enter
dec
and
popa
imul
jecxz
mov
arpl
daa
dec
inc
out
adc
lods
xchg
cld
daa
cmp
and
add
scas
mov
fists
cltd
cmpsl
in
mov
orl
mov
cld
fisubl
je
dec
sbb
in
mov
dec
cmp
loopne
pop
pop
mov
cmp
in
sbb
or
ja
fwait
gs
fsubs
jne
gs
repnz
or
leave
leave
addl
xchg
mov
and
outsb
fisubrs
add
test
xchg
orb
rolb
xor
pop
hlt
adc
pop
push
push
mov
imul
fcmovbe
push
int3
mov
mul
out
jnp
inc
add
stos
inc
mov
mov
dec
dec
xor
push
adc
mov
aam
mov
xchg
cmp
mov
mov
and
in
mov
or
inc
das
or
inc
outsl
and
sbb
mov
push
cli
or
mov
mov
lds
cmp
dec
int
inc
cmpsl
mov
jp
int
or
jnp
iret
icebp
sub
shl
fldt
sarl
add
mov
adcb
mov
push
cld
insb
push
ss
cmc
and
orb
inc
pop
sbb
lods
in
sub
inc
sti
adc
into
inc
xchg
dec
inc
push
ss
jnp
sub
pop
pop
cs
jae
mov
push
xor
adc
pop
mov
pop
in
out
xlat
or
adc
aad
xor
push
xchg
or
push
hlt
adc
ds
aam
subb
jl
jnp
movntq
cmpsl
idiv
cmp
jns
cltd
scas
jnp
in
push
nop
xlat
sahf
fbstp
fmull
xlat
add
popa
cmp
lret
js
lock
jns
out
xchg
test
testb
mov
in
fsubr
dec
pop
mov
add
push
mov
cld
pop
mov
mov
in
orl
icebp
ss
jbe
shll
jp
loopne
or
lret
add
xor
xlat
sub
movsl
int3
fistl
fnstenv
lock
push
repz
mov
lahf
sub
test
repnz
and
jp
fnsave
jnp
ljmp
mov
add
xor
or
adc
inc
mov
sub
lods
xor
vpaddq
ljmp
mov
mov
add
mov
jge
adc
mov
jae
mov
je
sbb
jge
xchg
adc
mov
jns
mov
and
dec
xor
mov
mov
int3
sar
xor
and
mov
dec
dec
pop
dec
push
shr
add
sub
movsb
rorb
cmpsb
popf
push
push
pop
push
pop
out
mov
jp
scas
jno
add
dec
inc
cs
cli
pop
pop
cwtl
orb
aaa
imulb
jle
jge
bound
push
mov
lock
lods
decb
mov
push
jnp
pop
inc
leave
outsb
mov
xor
pop
aam
push
xchg
add
or
daa
inc
jns
cmp
sbb
xchg
jnp
xchg
cltd
mov
imul
mov
push
push
les
mov
jo
jle
or
fs
lods
arpl
les
std
and
push
push
aam
hlt
das
outsl
sub
inc
lret
mov
mov
dec
shll
out
lods
in
sbb
shlb
sub
jbe
fists
cmp
and
pop
test
dec
adc
lods
cld
cs
adc
outsb
in
je
adc
cmp
mov
add
daa
inc
or
push
fisubrs
xor
out
lret
movsl
xor
mov
cli
je
test
imul
inc
pop
cmp
push
shrb
or
outsl
xchg
ja
mov
nop
push
lcall
movsl
gs
adcl
push
into
int
add
adc
xor
cs
cli
out
sets
repnz
and
int3
shlb
or
test
xchg
enter
xchg
ret
inc
je
test
out
or
adc
jge
and
jmp
negb
sub
aas
add
xor
dec
jb
jb
stos
mov
mov
scas
fidivl
push
imul
popa
xor
cmp
sbbb
imul
out
leave
cmp
push
push
mulb
cmp
xchg
cmp
gs
pushf
mov
sub
idivl
mov
aaa
movsl
das
das
jne
add
xor
jb
ret
sbb
mov
ds
sti
xchg
mov
push
and
cwtl
dec
jb
fimuls
scas
and
ss
jge
movzbl
sahf
shlb
sbb
and
mov
or
mov
jmp
paddusw
clc
and
jmp
popa
out
push
cmc
test
dec
sub
fisubrl
dec
push
movsl
mov
addr16
mov
daa
fsubs
add
mov
add
je
rcrb
notb
adc
xchg
push
aaa
ds
shrb
imul
pop
xchg
add
adc
movsl
inc
hlt
pop
aad
cmpsb
dec
ss
jmp
xchg
mov
cli
aaa
lret
dec
test
aam
mov
push
cmp
cmp
movsb
jge
add
mov
into
jmp
dec
mov
xor
push
and
sbb
stos
sub
mov
xor
mov
mov
and
icebp
js
push
sub
fcoms
imul
imul
js
sub
inc
adc
or
sub
mov
dec
xchg
gs
cmp
add
rclb
cmp
pop
lock
cmpb
cmc
push
addb
mov
pop
mov
xor
lds
xor
cli
inc
xor
imul
adc
or
push
push
mov
and
jno
rcrl
cmc
fists
and
adc
daa
adc
daa
out
aaa
rol
stos
pop
shll
mov
xchg
sub
jae
xlat
xchg
iret
jg
sub
add
scas
xor
lahf
pop
cltd
cmp
mov
push
loop
in
clc
popf
fistpll
and
push
pop
cli
in
stos
inc
push
pop
jecxz
jecxz
das
out
sahf
jne
xchg
idivl
shl
fstpl
mov
add
ss
adc
xchg
lds
cwtl
fimull
cli
insl
mov
in
aas
cmp
pop
mov
push
jb
add
jnp
hlt
xchg
adcb
xor
test
mov
fdivrs
push
add
es
orb
jno
xchg
sub
into
stos
sbb
mov
jbe
jge
adc
pusha
mov
cmp
mov
stos
call
jmp
or
test
mov
lock
push
loopne
mov
jecxz
lea
std
xchg
mov
cmp
cmp
outsb
push
add
popf
popf
rol
test
gs
xor
mov
mov
leave
sub
andb
clc
movsl
mov
notb
xlat
scas
addr16
or
add
scas
sub
mov
repnz
push
xor
fstpl
sbb
lds
testl
arpl
mov
aas
dec
push
xchg
hlt
enter
ljmp
or
lret
outsl
lret
push
xor
out
ds
cli
add
pop
adcb
cmc
mov
clc
cmc
inc
dec
jne
sub
pop
adc
int
das
cmp
lock
repnz
ljmp
xlat
shr
es
jb
idivl
add
push
jge
or
jl
jo
xchg
pop
xchg
cli
push
jge
or
repz
popa
je
cmp
add
cmp
arpl
bound
xchg
out
sub
fcomip
ss
xor
jmp
dec
mov
in
adc
out
movq
xchg
xor
int
or
cld
jmp
cmp
dec
lcall
lcall
inc
imul
add
ret
daa
jns
sub
rcrb
adc
mov
pop
dec
push
mov
cmp
pop
pop
pop
lds
or
push
movlhps
ret
xlat
lret
loop
or
std
loopne
out
aas
int
lret
xlat
and
push
lret
clc
fsubp
rcl
ss
test
addr16
xchg
inc
into
int
adc
jp
setle
jo
fmuls
dec
xchg
push
or
mov
in
pushw
stos
mov
in
ret
out
adc
cmp
arpl
mov
out
xor
cmpsl
pop
sbb
mov
mov
cmpsb
fmull
bound
imul
push
jle
mov
jns
pop
sbb
gs
repz
xor
dec
ja
cmpsb
jge
inc
mov
fisubs
insl
repz
sub
ret
dec
mov
fsubrl
sarl
xchg
add
xlat
cmp
loop
mov
xor
pop
mov
movsl
xchg
loopne
paddd
test
and
lahf
movsl
jl
jle
and
xor
inc
movsl
fstl
jno
and
lods
mov
sub
and
mov
pop
fimull
xor
jp
pop
or
cld
push
xchg
imul
imul
mov
pop
push
sti
dec
jp
jge
insb
hlt
xchg
push
jmp
pop
sub
xchg
pop
pop
out
ret
adc
pop
test
mov
fldenv
mov
xor
xlat
dec
dec
xchg
dec
push
daa
inc
fsts
push
in
pop
loope
mov
sbb
jle
mov
add
fldpi
or
lea
lods
push
cmp
outsb
jnp
fistpll
idivl
test
xchg
shll
mov
adcl
adc
aam
in
loope
arpl
idivb
mov
xchg
pop
sbb
cmpsb
pop
sti
sti
pop
cmpb
lea
push
and
fwait
mov
mov
mov
cwtl
std
sbb
mov
das
sub
mov
shl
cltd
jns
and
dec
cld
xchg
and
sub
pop
xchg
inc
push
nop
add
jns
rcrl
shll
lods
xchg
dec
jne
adc
outsb
jo
testl
fistpll
rclb
xor
mov
popa
decl
mov
sub
arpl
or
or
sbb
orb
mov
jmp
into
cltd
lock
scas
add
add
arpl
imul
or
lret
xchg
cs
lock
fcoms
mull
insl
shrl
pop
aas
bound
fadd
dec
pushf
xchg
lock
fsts
in
sarl
andb
adc
cmp
rcl
sub
out
jb
ret
pop
sub
rorb
ret
pop
xor
push
cli
in
push
loopne
test
cmc
out
jns
mov
push
ret
cltd
mov
rclb
stos
and
je
pop
sub
add
cmp
mov
pop
or
add
jecxz
fstl
push
push
lret
xor
sbb
aad
inc
xchg
inc
hlt
mov
or
add
add
fwait
push
push
notb
or
xchg
mov
cmpsl
test
mov
add
dec
lods
or
bound
shr
sub
cmp
icebp
je
adc
push
lcall
loopne
pop
repz
lret
out
cs
pop
imull
int3
lea
sarb
add
out
addr16
shll
loopne
xchg
and
sub
fwait
pop
xchg
push
push
mov
insb
add
mov
lret
xor
xchg
leave
bound
rolb
sti
adc
jmp
pop
mov
imul
adc
jmp
icebp
clc
mov
pop
je
js
lds
and
sub
xlat
mov
subb
loope
daa
data16
cmp
loop
bound
test
jmp
cltd
and
out
imull
lea
ljmp
xor
fnstcw
and
dec
mov
gs
nop
mov
xchg
xor
stc
cwtl
mov
scas
cmc
insl
or
inc
out
fistpll
lea
mull
xchg
cmp
ror
push
movsl
jg
cmc
dec
pop
xorb
imul
pop
iret
mov
mov
sbb
cld
stos
iret
inc
lock
inc
pop
dec
cmpsb
lahf
push
clc
inc
or
scas
dec
fwait
cwtl
inc
popf
push
fwait
call
sbb
dec
jmp
dec
pop
je
jmp
xor
push
ja
cmp
mov
xchg
sub
testl
pop
mov
icebp
jo
jge
mov
mov
test
mov
call
js
push
mov
sti
and
xor
ret
call
or
cmc
mov
dec
sbb
sbb
loop
adc
lock
jl
test
mov
out
push
test
je
xchg
ret
or
push
movsb
mov
call
cmpsb
pop
sub
mov
insb
dec
insb
or
js
xorl
fabs
pop
inc
cli
push
int
inc
xchg
pop
add
stos
std
mov
lret
cmp
sahf
pop
lcall
hlt
pop
pop
xlat
cmp
inc
xchg
sbb
pop
xor
xor
lock
in
pop
popf
inc
dec
add
into
aam
call
mov
add
lret
adc
addl
inc
jle
xor
jg
mov
cmp
js
out
lret
lss
rcl
outsb
sbb
jno
xor
mov
push
lods
ljmp
test
int
fcmovnu
add
mov
xor
lods
stos
stos
cld
and
dec
cmp
push
jb
xchg
or
cltd
add
movsb
add
cmp
xchg
jns
enter
sbb
out
nop
pop
push
cld
mov
xchg
inc
mov
in
cmp
sbb
outsb
ljmp
test
jg
and
cmp
notl
add
sbb
xchg
fstpl
mov
sbb
fwait
popf
push
dec
fmul
xchg
and
xor
jmp
inc
ret
inc
stos
fstpt
mov
mov
pop
in
sbb
jp
or
sbb
dec
push
push
pop
addr16
adc
mov
loopne
xchg
mov
out
out
fstpl
lcall
or
mov
xchg
dec
sbb
cmp
rcll
and
mov
mov
or
dec
cmpsl
lock
add
int3
mov
lock
and
lea
cld
mov
mov
call
xchg
dec
int3
push
adc
je
xchg
dec
dec
or
out
jns
lret
xchg
lods
cmpsb
dec
leave
sub
xor
sbb
sbb
mov
push
xor
dec
imul
aaa
mov
jp
sub
jge
clc
mov
sub
sub
subl
mov
cmpsl
sub
xchg
and
and
cmp
or
cmp
aad
add
mov
adc
cmp
pop
test
pop
movsl
sub
dec
push
mov
insb
sarl
mov
scas
add
dec
arpl
and
out
cmpxchg8b
lret
je
int3
lcall
jb
scas
daa
cmp
xchg
rorl
arpl
jno
mov
popa
idiv
std
out
jmp
lret
jno
xlat
jecxz
adc
or
and
add
mov
mov
fnstenv
shr
or
jle
or
mov
stos
xchg
adc
bound
hlt
jmp
dec
cmp
out
xor
adc
in
push
test
inc
orb
sahf
mov
inc
jmp
mov
int
mov
xor
orl
xchg
xchg
mov
cmp
pop
imul
call
out
xchg
cmp
mov
mov
ds
dec
pop
ret
sub
ret
adcl
daa
jae
push
gs
scas
movsl
in
cmp
adc
leave
scas
ret
popf
daa
jb
push
pushf
js
addr16
ljmp
and
stos
leave
ljmp
js
rorl
mov
je
jmp
push
mov
lods
inc
cld
add
std
cmp
in
rcrl
jnp
mov
pop
addl
ja
fcompl
inc
push
inc
xchg
pop
out
or
and
cmp
shrl
jne
scas
push
fldcw
and
jle
lcall
cmpl
lret
daa
mov
jmp
jecxz
add
sub
xor
xchg
js
nop
inc
shrl
push
lret
cli
lahf
mov
cmpl
cmc
xchg
inc
movsb
icebp
dec
xor
dec
add
popf
mov
outsb
mov
cltd
adc
enter
adc
daa
iret
call
or
xchg
das
data16
xor
sahf
das
xchg
mov
movsb
out
daa
xor
bound
cs
push
pop
push
sub
cli
or
and
xchg
add
pop
push
mov
sbb
cmp
jg
jl
sar
stos
xor
movsb
aas
inc
mov
sarl
pop
fs
mov
fists
lods
in
pop
jmp
outsb
repnz
bound
cmp
push
pop
sbb
lea
pop
idiv
inc
sub
sbb
lcall
jmp
jae
mov
sub
clc
jmp
push
popa
xor
cmpsl
push
dec
mov
stos
rorl
xchg
adc
fwait
in
int3
sbb
mov
lock
lret
stos
push
xor
adc
loope
arpl
adc
mov
ret
orb
ja
cmp
jbe
xchg
pop
xchg
push
sub
scas
xchg
sub
sti
lret
icebp
les
mov
loop
dec
push
push
mov
jl
jmp
mov
idivl
andb
and
or
ljmp
ds
adc
push
cs
fsubrl
adc
sahf
test
push
insb
in
lods
cs
dec
jl
mov
sbb
sbb
jp
push
adc
js
arpl
sbb
insl
pop
push
inc
pop
rcll
and
adc
dec
jg
leave
lcall
dec
int
and
test
add
mov
mov
push
scas
adcb
adc
mov
adc
sub
mov
cmp
xor
adc
sbb
pop
inc
cmp
or
call
and
jg
gs
push
fsubs
negl
in
and
movsb
stos
and
mov
mov
adc
cmp
sub
or
out
and
shlb
jg
movsb
jg
pop
lds
addps
aad
xchg
push
cwtl
nop
and
ror
pop
pop
pop
xor
or
enter
enter
fwait
insl
push
mov
pusha
inc
or
mov
movsl
cs
nop
out
mulb
jns
mov
add
in
ret
and
mov
fwait
and
push
test
repnz
outsb
mov
cmpb
shll
repz
lods
add
enter
in
lods
mov
lahf
mov
adc
mov
pop
pop
mov
iret
ja
and
mov
jo
and
icebp
int3
and
lods
pusha
adc
bound
jmp
ret
out
xchg
sbb
je
mov
lods
lahf
add
hlt
int
js
pop
inc
in
ss
int3
loope
pop
push
rorb
sbb
dec
pop
pop
stc
or
add
push
loop
inc
insl
dec
pushf
sbb
and
nop
jge
stos
pusha
inc
je
cvttps2pi
add
and
test
movsb
es
xor
inc
mov
ret
in
shl
adcl
not
and
fs
cld
push
xchg
daa
or
pop
mov
inc
cmc
cmp
jp
lret
sub
cmp
cli
and
mov
icebp
mov
sub
push
jo
nop
adc
pop
sbb
mov
sub
xchg
data16
mov
loope
std
mov
data16
sbb
mulb
pop
stos
imul
aad
dec
push
add
loopne
mov
dec
movsb
sub
adc
mov
lds
or
or
or
cwtl
sbb
rol
fimull
jmp
xchg
adc
lods
pop
fld
ja
xchg
fwait
lcall
popa
notl
fs
jae
xor
mov
rcll
pop
outsl
mov
fildl
push
push
or
or
xchg
xor
loop
adc
sbb
mov
outsl
fsubs
sub
or
jnp
scas
mov
pop
xchg
fs
stos
pop
or
xorl
stc
mov
mov
mov
dec
or
add
popa
add
test
jns
xor
movsb
loopne
arpl
out
in
test
inc
xor
imul
jge
mov
push
mov
adc
or
dec
lds
mov
push
movsb
and
mov
icebp
sahf
mov
push
daa
cltd
nop
sub
and
dec
int3
mov
cmp
jns
test
push
or
xchg
inc
or
mov
cmp
xchg
or
cmp
inc
ret
mov
cwtl
jno
fs
push
jae
and
lods
lods
rclb
sbb
mov
inc
inc
int
sub
ss
icebp
pop
repnz
adc
sbb
cli
fnsave
cmc
and
call
gs
mulb
ret
inc
add
leave
in
fisubl
mov
pop
mov
sarl
lods
inc
call
xchg
or
jge
das
fs
jne
and
xor
fdivr
sbb
or
jmp
dec
gs
add
clc
lahf
jb
and
mov
roll
sahf
out
out
into
in
jne
add
pop
cmp
xchg
fwait
sbb
sbb
insl
push
cmpsb
or
scas
enter
fistpl
out
mov
jnp
int
lods
mov
std
fcompl
aad
shrl
pop
test
dec
sbb
and
sbb
movsl
fistps
sub
mov
sub
addr16
inc
imul
fimull
mov
mov
inc
dec
xchg
push
pop
in
or
leave
jp
push
inc
sahf
jmp
mov
mov
fwait
neg
adc
ret
and
add
xchg
dec
mov
mov
pop
mov
outsl
jle
or
mov
enter
xchg
repz
and
testl
lahf
sub
cwtl
jg
push
pop
iret
jmp
add
xchg
cmp
hlt
daa
sbbl
cmpsl
test
icebp
cmp
cmp
mov
enter
add
mov
xor
lahf
pusha
ret
inc
sbb
aad
xchg
dec
rcrb
dec
popa
clc
aas
mov
mov
adcb
xor
dec
pop
addl
mov
cmp
ret
ret
cld
imul
add
cmp
jle
xorl
cltd
dec
sbb
mov
xchg
std
mov
fwait
mov
pop
mov
fwait
dec
cltd
mov
push
mov
daa
mov
jg
insb
jge
jne
fnstsw
aad
fistps
jle
xchg
mov
out
push
mov
das
in
xchg
scas
push
int3
mov
pop
scas
nop
or
lods
xlat
idiv
cmpl
cmp
jno
xchg
shrb
repnz
ficompl
stos
push
out
mov
mov
leave
js
call
mov
push
jno
sub
sbbb
aas
sub
dec
adc
call
sahf
insb
imul
jns
icebp
push
cltd
in
sbb
jecxz
add
test
mov
add
xchg
mov
shl
test
enter
mov
dec
cmp
jp
and
fwait
mov
dec
aas
cmp
aad
les
push
test
fiadds
mov
in
loopne
scas
stos
xchg
fdivr
and
data16
pop
mov
cld
ja
adc
subl
inc
movsb
sub
pop
popa
loope
add
adcl
mov
push
push
adc
jmp
dec
and
cmc
or
mov
mov
adc
aam
rcll
adc
in
and
in
jb
das
push
out
dec
aas
inc
lret
in
lea
orb
sbb
add
dec
cmp
insl
pop
fidivs
rcrl
cmp
dec
into
adc
inc
fisubs
xchg
push
je
cmp
mov
std
sbb
push
dec
test
shrl
jecxz
push
dec
in
arpl
jbe
mov
xchg
nop
mov
mov
and
mov
dec
fwait
dec
pop
aad
and
test
aad
cmpsb
shrl
push
push
fwait
ret
xorl
push
xchg
pop
hlt
push
pop
xor
and
imul
lahf
filds
push
jnp
ss
xchg
js
sbb
mov
xchg
mov
adc
dec
and
in
fidivrs
int3
data16
mov
inc
ret
mov
outsl
dec
and
mov
inc
aas
icebp
sarl
dec
sbb
fimull
xor
jb
xor
inc
shrl
or
push
xor
stc
pop
or
adc
mov
fbstp
aad
xor
xor
je
cld
jecxz
inc
fwait
xor
out
rorl
push
mov
data16
or
cld
sub
fldpi
repnz
pusha
shrl
orl
pop
aas
fistpll
mov
sbb
sbb
pop
scas
and
leave
lods
punpcklbw
dec
imul
bound
jae
xchg
shl
fdivl
sbb
cmovl
in
xor
sub
fnsave
imul
pop
sub
pop
cltd
xorb
cmpsb
out
mov
out
sub
inc
and
push
jns
dec
sbb
ss
and
pop
jb
xor
xchg
data16
out
inc
add
jecxz
dec
xlat
dec
aas
out
test
jo
inc
lds
push
ds
sarl
in
popa
mov
insl
dec
dec
adc
aam
mov
iret
nop
xor
int
push
stos
xorl
test
or
aaa
mov
add
int3
cmc
push
push
xor
mov
popf
in
cltd
ss
int
cltd
pop
fsubrl
push
insl
mov
cmp
xorb
mov
xor
sub
or
and
popa
addb
cs
dec
ds
sbb
mov
inc
stos
cmp
mov
repz
sub
or
mov
mov
add
pushf
in
data16
rcrb
lret
adc
xchg
cltd
imul
hlt
sahf
pop
dec
ret
rcrl
mov
sub
flds
push
or
sbb
andb
out
sbb
push
cmpsl
mov
adc
mov
gs
dec
jle
jmp
add
inc
sub
movsb
mov
xchg
fs
hlt
pop
scas
or
dec
into
or
push
mov
sti
cwtl
cs
pop
add
fdivrl
pop
xor
sahf
movhps
pop
and
push
push
icebp
xchg
jb
mov
sahf
mov
mov
lret
or
sub
add
mov
cmpsl
dec
repnz
rcll
jb
in
ret
bound
test
adc
in
lahf
fdivp
pop
in
or
stc
es
int3
dec
jnp
adc
mov
leave
movsl
mov
inc
and
cmp
imulb
push
dec
pop
daa
mov
addr16
call
pop
testb
es
lret
clc
push
daa
add
ret
xor
ss
in
shll
mov
mov
and
or
lcall
in
insb
fbld
les
lods
daa
xchg
adc
mov
pop
xor
cs
aas
notb
out
mov
mov
pop
lahf
shll
stc
mov
fisttpl
xor
add
sbb
mov
sbb
sbb
scas
in
rcrl
loope
ds
lret
pop
sbb
pop
mov
cld
dec
sbb
and
ret
in
inc
mov
sarb
fdivrs
daa
das
push
orb
sbb
std
mov
loop
cmp
movsb
testl
inc
pop
test
pop
enter
das
push
fldenv
popa
add
std
add
xor
and
inc
movsl
inc
insb
and
loop
les
jno
movsb
inc
lods
lahf
pop
inc
cmp
pushf
mov
sbb
test
sti
sub
pop
dec
mov
enter
mov
sahf
in
and
ljmp
ficoms
mov
lahf
jge
sub
xor
sbb
dec
test
movsb
in
nop
ljmp
dec
stc
in
jl
xor
sub
iret
cmp
test
xor
mov
and
out
insl
cli
xchg
inc
aaa
imul
es
ja
pop
fwait
in
cmc
jmp
xchg
fisubrl
jno
in
sub
add
xchg
sbb
ljmp
mov
int3
mov
insl
cltd
and
lret
insb
inc
xchg
pop
xor
mov
ficoml
add
out
or
aaa
in
mov
mov
mov
pop
mov
in
loopne
mov
dec
xor
lds
mov
inc
out
cltd
icebp
adcb
jb
push
mov
mov
pusha
div
mov
mov
push
addr16
xchg
inc
jne
jmp
scas
sbb
jno
and
gs
test
shr
ja
push
dec
cli
fbstp
xchg
mov
push
xchg
int
xbegin
cmp
sub
fnstenv
ret
cwtl
insl
adc
push
xchg
in
or
cmp
sbb
xorb
mov
sbb
add
ret
pop
stc
cli
dec
jno
das
push
rorb
push
mov
add
test
rcrl
cmp
vandnps
adc
mov
sub
jecxz
cmp
loopne
je
jnp
dec
pop
js
push
lahf
jle
push
push
jg
pop
mov
xchg
mov
enter
mov
enter
mov
jnp
sub
scas
xlat
push
into
in
icebp
adc
pop
xor
xchg
dec
mov
frstor
out
sub
sbb
xchg
or
mov
and
mov
jo
and
dec
dec
sbb
repz
mov
jno
sbb
adc
cmp
daa
push
or
cld
or
sbb
mov
frstor
aaa
or
sub
dec
nopl
push
or
xchg
cmpsb
xor
decb
insb
arpl
pop
mov
add
test
in
cmp
or
inc
lahf
dec
dec
je
scas
bound
and
mov
fsubrl
xchg
add
aam
xchg
fcoms
aaa
mulb
sub
jecxz
pop
xor
data16
push
movsb
lods
jbe
ds
sbb
pop
mov
push
and
push
mov
add
xchg
repnz
mov
push
lds
out
outsb
flds
push
fwait
out
shlb
lods
jbe
push
inc
and
push
out
cmc
lret
dec
jnp
sub
dec
call
cmpsl
inc
pop
es
psubb
shlb
cli
jle
jo
nop
pop
mov
add
aad
adc
pop
xor
or
enter
push
or
xor
ss
in
or
stos
jl
outsl
mov
movsl
ficompl
lcall
jne
jbe
push
mov
imul
pop
ss
dec
jo
jp
push
aas
inc
leave
sub
cwtl
shrl
pop
mov
or
xchg
loope
cmpsb
pop
xchg
fcom
pop
cltd
adc
mov
out
sub
cld
das
pop
mov
push
pop
sub
push
add
dec
insl
dec
pop
mov
fs
add
dec
fdivrp
pop
pop
add
mov
fwait
adc
in
or
xor
fsubl
out
mov
and
icebp
sahf
test
cmp
data16
cmp
jne
into
pushf
add
lcall
cmp
shrl
aaa
dec
int3
xor
xchg
or
clc
bound
je
inc
adc
loope
mov
shrl
sub
repz
iret
add
mov
inc
pop
fstps
mov
test
les
es
lea
in
mov
add
push
rcll
mov
scas
fstpt
add
add
mov
inc
enter
push
js
sub
ja
test
fists
push
xor
mul
test
popf
sub
or
cwtl
lahf
inc
mov
lret
inc
push
andl
jns
and
outsb
mov
mov
mov
test
jle
sub
sbb
ljmp
lds
dec
mov
sbb
inc
lods
cltd
mov
sbb
hlt
sti
repnz
mov
popf
fwait
arpl
aas
cmp
sbb
jae
in
sub
sbb
loop
or
jmp
or
mov
mov
xor
movsb
in
or
lock
shrl
fcompl
xor
insl
mov
out
lods
sub
mov
sahf
sbb
fistpll
xchg
stc
xchg
adcl
and
mov
fistpl
ror
cld
scas
pop
lods
gs
inc
push
lods
dec
or
mov
push
aad
xchg
sbb
sub
add
xchg
adc
pop
rcrb
shrb
cmp
mov
arpl
or
stos
aas
rol
mov
sbb
addr16
ss
inc
jae
mov
or
inc
movb
and
dec
mov
adc
aaa
into
out
imul
push
or
js
mov
mulb
xor
pop
jo
sbb
push
je
mov
inc
rcr
cmpsl
popf
pusha
out
loopne
aas
sbb
push
cmpsl
movsb
or
and
outsl
mov
jnp
jnp
insb
adc
sbb
mov
mov
push
jns,pt
mov
xchg
sbb
pop
sub
adc
lock
lock
lcall
ljmp
pop
imul
jecxz
cs
repz
pop
nop
popf
ljmp
int
rep
inc
sbb
fdivr
stos
pop
ret
imul
xchg
imul
pushf
pop
mov
push
mov
scas
mov
mov
mov
int
or
lods
adc
cmp
int3
dec
xchg
sbb
and
mov
lock
addl
or
fistps
mov
push
loope
sti
jns
sbb
xorl
loopne
push
je
pop
arpl
test
cmc
bound
cltd
push
enter
jp
mov
rcll
push
sub
lods
divl
into
sbb
xor
lock
sbb
inc
addr16
mov
and
add
ret
xchg
gs
cvtps2pd
repnz
lds
mov
out
cs
cmp
icebp
insb
add
in
lret
mov
popa
mov
into
sarl
push
add
add
jne
pop
xchg
cmp
push
sahf
mov
mov
in
cli
xchg
push
jmp
cmpsb
inc
loopne
inc
sub
or
lret
xor
inc
out
or
mov
ja
mov
sub
jl,pt
sub
jb
outsl
jmp
mov
sti
negl
push
pop
je
hlt
push
out
jne
adc
test
fdivr
xor
push
imul
test
cmp
aaa
sbb
loop
out
loop
clc
cwtl
and
movsb
xor
loopne
pop
outsl
les
aad
mov
push
dec
outsl
jnp
mov
loopne
mov
movb
add
stos
es
jecxz
int3
mov
push
jb
pushf
sub
stos
and
scas
icebp
repz
outsl
mov
icebp
sbb
jno
out
cmp
mov
add
push
pop
movsl
mov
adc
pop
fcmovne
mov
mov
out
pop
and
sbbl
inc
xor
push
and
mov
sbb
int3
or
adc
aam
arpl
mov
lds
mov
repz
sub
movsb
xor
sub
inc
es
xchg
jg
adc
jae
stos
add
mov
into
int3
lahf
rclb
loopne
hlt
push
push
insl
lods
loop
jne
fldenv
jo
sahf
sahf
cmp
sub
pop
out
cmc
or
mov
ficomps
jne
and
jo
sbb
popa
push
or
or
mov
ljmp
sub
mov
mov
mov
and
ret
fistpl
mov
leave
sahf
inc
pop
sbb
and
ss
lea
ljmp
pop
cltd
int
stos
adc
std
adc
pop
inc
outsl
sbb
nop
andb
out
insb
pop
push
loop
iret
sbb
shll
fisubrl
xor
mov
push
jge
fs
lds
jns
in
sub
jmp
call
out
test
leave
loope
testl
xchg
enter
fildll
insb
clc
insl
cmp
fs
roll
xchg
xchg
shl
rdpmc
pop
adc
nop
and
and
mov
stos
jbe
jbe
insb
inc
cmpsl
daa
stos
fcomps
subl
mov
popf
cli
imul
cmc
out
push
cmpsl
and
jge
pop
cmp
xchg
jge
mov
stos
pop
adc
and
scas
jne
pop
int
outsl
ljmp
or
push
shlb
in
mov
adc
movsl
mov
notb
pop
and
sub
loop
iret
ss
mov
es
lods
andb
sbb
and
inc
sbb
adc
cmp
stos
push
mov
das
sub
into
cld
nop
mov
pusha
daa
inc
add
add
push
lahf
xor
xchg
stos
push
cmpsb
add
push
push
mov
push
hlt
lods
iret
sahf
mov
fidivrs
hlt
mov
xchg
daa
mov
std
dec
in
fadd
cmpsb
jae
fsubl
xor
cwtl
push
fbld
sub
addb
cmpsb
test
xchg
sub
mov
neg
call
rorb
sub
mov
daa
ret
pop
or
mov
xchg
add
mov
shrb
mov
loop
adc
or
xor
xchg
jle
rolb
jb
dec
cs
imul
mov
das
icebp
cmp
shl
rcrb
mov
jg
in
lds
ljmp
je
ja
cmp
aas
movsb
or
insl
push
mov
or
adc
add
sbb
or
and
push
test
push
lds
mov
bound
push
stos
ja
out
es
mov
int3
enter
dec
fwait
push
push
add
pushf
fisubrl
lods
xchg
cwtl
fildll
sbb
jae
mov
inc
idiv
and
test
push
adc
pop
pop
jnp
pop
lcall
or
pushf
je
pop
mov
lods
inc
mov
xor
loopne
mov
insl
sarb
sbb
fdivp
fucomip
pop
fsubrs
cmp
jno
jecxz
push
je
inc
pushf
add
mov
sbb
std
mov
adc
hlt
lods
and
js
sarb
inc
movsb
and
iret
outsb
mov
repz
xor
inc
sub
mov
enter
aad
pop
lret
cld
pusha
inc
stos
sub
dec
jo
or
pop
xchg
popa
push
jae
mov
jp
imul
cld
imul
push
add
jmp
jecxz
lahf
pop
inc
mov
mov
sub
mov
jge
jb,pn
xor
scas
push
sub
mov
sahf
jb
adc
int3
lahf
aam
pop
clc
mov
fldenv
sbb
jmp
sub
mov
pop
loop
aaa
mov
cmp
inc
mov
in
push
add
jle
inc
add
fldcw
push
outsb
imulb
xor
or
in
jmp
inc
lods
inc
or
mov
mov
mov
inc
add
dec
jl
pop
pop
loopne
jne
cmp
aam
stos
cmp
fs
out
xor
sar
rorl
nop
push
out
pop
mov
mov
inc
jge
stos
cwtl
mov
fmul
inc
call
ret
jmp
mov
lea
mov
lods
frstor
add
jg
push
pop
shrd
out
adc
cmp
test
dec
add
mov
in
push
das
fwait
dec
push
pop
clc
pop
jno
mov
repnz
jp
inc
add
adc
stos
rclb
das
fcomi
or
mov
scas
cmpsb
mov
insl
fs
in
sub
mov
lods
lret
jnp
insb
shrl
mov
aad
gs
fsub
stos
popa
push
xchg
movsb
push
clc
sbb
jge
or
pop
shll
dec
adc
push
les
imul
pop
pop
mov
pop
dec
xor
fwait
iret
cwtl
push
test
mov
mov
aad
int
and
jne
movsl
ds
sub
lea
mov
sbb
lods
mov
das
insl
mov
inc
lcall
push
or
and
pop
fldpi
movsb
xchg
xor
stos
pop
outsb
cmp
arpl
mov
mov
mov
rcll
pop
mov
cmp
lret
mov
push
pop
stc
fidivs
mov
dec
xor
jns
mull
or
dec
fiadds
xlat
ja
inc
ret
out
cmp
dec
aas
ds
jl
xchg
stos
push
jle
xor
mov
mov
in
loopne
movsb
cmp
repnz
ret
xlat
imull
pop
cmp
lods
pop
popf
imul
sub
xchg
faddl
mov
in
mov
rorb
pop
ss
pop
test
loope
scas
sub
cmpsl
dec
ret
enter
popa
scas
outsl
jmp
mov
fxch
test
cli
dec
jmpw
mov
cmp
stos
lock
cmpsl
lods
insb
lea
cmp
or
adc
sbb
mov
sub
mov
dec
sbb
or
popf
sti
jge
pop
lods
push
enter
shr
xor
sub
pop
sbb
clc
cmp
lcall
int3
shlb
sbb
adc
push
cmp
cli
outsl
cmp
mov
js
inc
outsb
fstp
out
stc
jbe
repz
cli
sti
ja
neg
mov
push
sbb
add
xor
push
pop
sar
incl
and
cmpsb
decb
cmp
adc
jl
mov
adc
mov
inc
add
push
mov
sub
arpl
or
pop
sbb
push
mov
jge
sbb
mov
in
outsb
shll
pop
and
test
add
les
movsb
lods
add
leave
push
rcll
gs
xchg
out
sub
inc
fcmovne
popf
push
cwtl
dec
mov
lock
jo
pusha
frstor
and
xlat
lahf
in
and
sbb
xor
mov
sbb
inc
icebp
xor
jae
and
and
cmpsb
vpunpckhdq
mov
mov
and
sub
cli
je
addr16
jns
daa
cmp
insl
mov
add
mov
rorb
mov
repz
fcoms
jne
loopne
pop
fs
cld
test
jle
les
clc
push
cmp
pop
mov
or
or
cmp
xor
jmp
lds
and
fidivrl
sbb
pop
das
scas
push
and
popa
mov
repz
push
imul
ja
dec
cmp
mov
out
iret
or
shlb
push
ficoml
sbbl
fmul
push
adc
jne
ret
jp
dec
decb
enter
pop
cmp
xor
or
sub
adcl
or
cltd
fldcw
roll
pop
push
inc
jge
out
push
xchg
mov
sbb
jmp
adcl
xor
pop
and
xor
outsb
fidivl
mov
mov
mov
and
or
or
rorb
rolb
pop
ret
test
adc
loope
shl
pop
cli
xchg
cmpl
movsb
inc
mov
gs
push
fnstsw
sub
inc
inc
in
mov
call
push
stc
fnstcw
sbb
add
loop
mov
sub
push
mov
or
and
xchg
pushf
xchg
sbb
xor
mov
xor
jg
inc
or
rol
imul
or
xorb
sbb
mov
test
lret
cmp
ror
in
cmp
sbb
mov
mov
shrb
and
jns
loop
in
mov
mov
in
xchg
jns
inc
bound
sbb
jo
out
movsl
push
or
in
mov
fsubrs
sbb
jp
jno
push
movsb
js
jne
jge
sbb
adc
cli
cwtl
int
and
fwait
xorb
cld
sbb
jb
loop
sub
add
or
movsl
inc
push
dec
cmp
or
push
add
negb
fwait
icebp
mov
iret
idiv
mov
jae
pop
sbb
inc
push
mov
cmp
mov
cwtl
test
xchg
lahf
stc
fsubp
xchg
jno
pop
ds
xchg
jmp
aad
mov
push
enter
test
adc
dec
mov
ret
iret
pusha
ja
inc
and
fsubs
xor
ret
inc
push
insl
cs
movsl
negb
out
xor
sbb
mov
xor
cmpsb
inc
pop
leave
adc
or
dec
cmp
lea
or
jns
lods
jl
xchg
mov
and
cs
gs
std
or
mov
inc
inc
je
sbb
movsl
movsl
cs
idiv
inc
les
push
mov
jae
cld
loope
adc
xchg
cmpsb
mov
sbb
outsl
jg
mov
shrl
push
outsl
inc
pop
mov
mov
fs
ss
mov
in
sub
rcrl
push
fcomip
cld
add
jle
in
mov
jnp
adc
dec
ds
sub
mov
mov
scas
out
mov
lods
pop
repnz
jecxz
sbb
xor
adc
mov
int3
mov
sub
test
xor
lods
lcall
mov
out
push
enter
xchg
lret
sub
or
in
xchg
mov
ja
mov
ds
cmpsb
jge
xor
push
mov
fsubrl
ja,pt
data16
pop
jge
cmp
mull
sbb
cwtl
imul
fwait
imul
add
hlt
aas
out
push
sbb
xchg
cmp
mov
outsb
call
out
fnsave
fistps
inc
jle
hlt
jbe
out
test
push
mov
orb
xchg
mov
icebp
cmp
mov
push
cs
mov
fsubr
mov
cmp
sbbl
and
jns
pop
pusha
mov
lods
notl
ljmp
inc
pop
cmpsl
repnz
push
push
sub
movsb
xchg
xor
popa
adcb
sbb
push
imul
hlt
fs
xchg
cmpb
and
mov
repz
mov
xor
shrb
testl
andb
scas
xor
arpl
in
test
loop
test
test
lds
jne
mov
push
cmpsl
and
dec
xor
inc
test
stc
sbb
mov
add
jo
loopne
ja
pop
pusha
sub
idivl
xchg
xchg
iret
hlt
push
sti
movsl
adc
into
adc
sub
hlt
je
popf
int
lret
pop
in
std
call
les
add
mov
pop
sbb
sahf
or
inc
std
int
dec
sbb
xlat
imul
xchg
gs
xor
jae
test
das
out
mov
pop
push
mov
shll
xchg
js
push
lds
adcb
mov
push
sbb
jbe
les
pop
mov
and
outsb
jno
xchg
mov
dec
jo
jo
js
int
inc
inc
cmp
mov
mov
sub
xchg
sbb
add
shll
mov
add
pop
mov
movsl
xchg
mov
sarb
xchg
lcall
inc
lds
add
in
dec
mov
and
lods
ds
lods
outsl
rcll
pop
mov
iret
mov
and
mov
ror
mov
mov
mov
insb
jp
mov
mov
mov
sbb
cmp
leave
xor
dec
loope
push
mov
shrb
dec
icebp
push
out
xor
xchg
fdiv
xchg
cmpb
jg
rolb
lret
jns
pop
add
sbb
mov
lock
in
or
inc
adc
jp
sahf
jecxz
mov
jns
push
push
jns
push
rcrb
add
push
inc
popa
ds
cmp
cs
xchg
fcomp
rol
aaa
push
mov
push
call
xlat
sub
adc
into
enter
andb
mov
incl
mov
enter
mov
lock
movsb
fs
rcrb
push
lods
addr16
and
aas
dec
js
add
pop
test
add
fmul
pop
or
xchg
fildll
stc
std
inc
lcall
std
iret
iret
mov
je
or
shlb
lods
jno
bound
jg
mov
mov
mov
mov
pop
movsb
fwait
cwtl
stc
loope
or
stos
mov
add
pop
mov
and
cmp
outsb
xchg
inc
inc
sbb
je
pusha
lret
mov
int
and
xchg
add
cli
ds
push
dec
or
sbb
add
jnp
push
mov
add
sahf
xor
adc
adc
mov
hlt
adc
cmp
dec
js
or
sahf
inc
lcall
or
adc
je
leave
loop
fisubs
stc
dec
and
or
push
add
pop
jnp
or
ret
jo
xchg
repz
or
mov
and
ret
sarb
push
scas
loopne
push
mov
jg
fisttpl
js
bound
xchg
lcall
or
repz
cmpl
mov
es
test
call
or
iret
mov
pop
adc
pushf
sbb
loope
and
and
jo
push
aas
push
ret
iret
stos
mov
add
cwtl
cmp
pop
fcmovu
inc
push
mov
lcall
or
aaa
scas
xor
jnp
clc
lods
rcrb
cmp
push
addr16
jbe
enter
sub
in
fists
push
mov
fidivrl
adc
addl
scas
or
add
mov
cwtl
xor
adc
jge
scas
sbb
ficoms
out
ret
mov
inc
stc
jne
jle
cltd
movsl
ds
mov
pop
pop
mov
mov
insl
inc
sti
cmp
imul
inc
out
pop
sbb
ljmp
push
hlt
gs
cli
xor
shr
fcomps
jns
stos
sahf
jg
xchg
mov
jp
rcll
daa
cmp
mov
xor
lock
add
pop
and
xor
jnp
push
mov
hlt
mov
add
imul
jne
ret
iret
dec
jns
push
xchg
lcall
pusha
int
mov
in
movsb
pop
cmovge
cmp
into
jae
mov
jecxz
arpl
or
adc
loope
push
adc
jnp
mov
jb
jle
cld
stc
mov
cmpsb
push
imul
inc
adc
or
xchg
mov
gs
mov
enter
mov
cmp
lret
sub
jno
jg
dec
mov
data16
pop
sbb
clc
add
stc
jnp
pop
or
test
and
sbb
add
imul
sahf
pop
test
pop
inc
push
push
repz
arpl
mov
hlt
cmp
inc
push
scas
sbb
cltd
leave
cmp
mov
pop
cs
mov
sub
hlt
pop
shr
jle
js
imul
fcmove
jl
jns
cmp
and
fsubrl
in
cmpsb
pop
into
add
cmp
lea
mov
lods
xchg
ret
xor
jae
pop
in
mov
and
jbe
imul
pop
mov
outsl
cmp
inc
sahf
lods
pop
push
xchg
sub
stos
stos
inc
mov
add
hlt
out
push
cs
popa
aad
dec
and
mov
mov
dec
fdivrp
mov
push
sub
adc
xlat
jo
mov
in
cmp
imul
push
fwait
test
hlt
outsb
lock
cmp
pop
insl
in
sti
or
push
rcll
dec
movsb
mov
out
ljmp
aas
aam
jne
cmp
clc
add
sub
xchg
inc
inc
mov
mov
insl
cmp
repz
jbe
lock
cmp
out
pusha
nop
dec
loop
cwtl
jb
fisttpll
in
adc
test
xchg
sbbb
xchg
inc
mov
adc
call
std
adc
js
aam
bound
push
and
add
adcb
xchg
int
loope
jge
je
and
xor
lock
lock
push
int
push
sbb
adc
and
dec
sbb
jecxz
inc
dec
aas
imul
movsl
fs
cmpl
out
stos
push
or
xchg
cmp
in
int
pop
dec
repz
les
mov
sbb
jl
out
and
into
push
xchg
mov
xchg
push
out
fwait
pop
mov
fs
dec
inc
in
fsub
pop
dec
aam
mov
clc
add
xchg
mov
dec
xor
xchg
push
cmp
sahf
fmuls
lahf
std
sahf
fdivl
and
sub
pop
pusha
imul
push
scas
cmp
fistpl
xor
rol
mov
sbb
out
mov
jne
sarb
std
rol
and
imul
or
testb
mov
xchg
imul
mov
ds
push
add
in
cmp
jae
pop
imul
jecxz
xchg
inc
and
bswap
cmp
sub
int3
push
mov
sub
out
call
test
lret
dec
movsl
movsb
sbb
test
lret
xor
scas
cltd
xor
dec
sub
cmpsl
dec
push
mov
mov
pusha
mov
cmpb
in
clc
popf
test
adc
movsl
dec
lahf
xor
push
push
outsl
xchg
xlat
repnz
gs
ja
test
daa
push
pop
les
outsl
mov
int3
leave
cmp
inc
xor
in
loope
cmp
sbb
stc
cmp
cmp
repz
pusha
adc
jne,pt
push
cmp
dec
in
ss
mov
jae
push
push
adcb
push
dec
push
stos
decb
repnz
push
test
sbb
hlt
mov
xchg
jmp
xchg
lea
addr16
jg
cwtl
sbb
jecxz
rcr
fs
pusha
inc
cmpb
stc
pop
sbb
xchg
add
test
mov
pop
jbe
and
mov
jb
inc
and
push
cli
cmpsb
jecxz,pt
fldt
insb
mov
dec
mov
orl
sub
mov
cmpsb
jmp
cmp
in
mov
push
sub
jne
xor
test
int
dec
dec
push
insl
es
lods
adc
lock
lret
outsb
or
repnz
and
sbb
inc
loopne
adc
dec
cld
stos
dec
sub
cmp
repz
cmp
bound
push
xor
mov
int3
dec
mov
sub
jne,pn
jno
and
test
pause
ret
shlb
stc
jl
mov
pop
enter
ljmp
ret
pushf
add
xchg
adc
sub
gs
repnz
mov
scas
inc
insl
sbb
bound
call
xchg
bound
lcall
sub
xchg
and
mov
or
ret
jge
out
and
adc
dec
std
sub
pop
or
mov
mov
sub
imul
int
ds
fiadds
rol
aad
in
mov
xchg
sub
pusha
fdivl
push
out
int
xchg
xor
xorb
sbb
jo
imul
push
sub
loopne
lock
bnd
test
push
sub
sahf
js
and
xorb
push
xchg
sti
pop
xlat
add
jne
sbb
movsb
addr16
sub
fsubp
pop
mov
xor
push
xchg
mov
pop
sahf
mov
push
mov
popf
inc
mov
mov
clc
mov
mov
push
inc
fimull
jno
mull
lds
lods
pop
or
out
aad
movsb
cmpsb
fcom
rclb
jne
or
dec
jnp
jne
fidivrs
mov
push
in
or
add
cmp
dec
hlt
sub
mov
jo
inc
or
dec
shll
rcrl
mov
mov
fcomps
aaa
pop
ds
cmp
cltd
mov
dec
xor
pop
inc
and
aam
jp
mov
mov
push
pushf
jge
addb
cmpsb
fldcw
inc
and
lods
scas
pop
push
clc
xchg
xor
imul
imul
push
push
les
cltd
repz
adc
and
jmp
mov
popf
jns
sub
dec
cmp
sub
xchg
les
or
aad
test
jbe
push
sub
in
sub
insl
fisubs
add
sub
cmc
test
mov
jo
xlat
test
xor
mov
pop
shll
mov
leave
aam
int3
fmul
mov
orl
cmp
fldt
fistpl
sahf
xor
cmp
scas
sbb
add
push
and
pop
push
fidivrs
test
pop
and
add
and
or
push
push
in
add
sbb
inc
inc
xor
std
cmpsb
dec
cmc
inc
inc
adc
mov
pusha
adc
ja
je
dec
int
stc
cmp
add
lcall
and
inc
mov
sub
mov
std
xor
sub
pop
jno
xor
out
int3
data16
adc
out
jne
aad
mov
icebp
jmp
arpl
subb
pusha
jo
daa
cli
in
fistpl
cpuid
mov
cmpsb
in
ret
or
add
fwait
mov
stos
dec
jl
mov
pop
je
cli
mov
rcrb
ss
in
shl
test
fsubrp
mov
lea
inc
jo
or
adc
jne
or
lea
xchg
push
scas
inc
imul
and
lgs
rclb
mov
push
mov
loop
nop
inc
loope
daa
dec
xlat
loopne
lods
dec
add
in
cmp
inc
jnp
and
aam
add
mov
loop
repnz
imul
and
mov
mov
cli
out
mov
loop
cli
add
movsb
adc
pop
jne
jg
xchg
xchg
pop
inc
jl
in
xor
xchg
sti
pusha
std
xor
in
insl
aad
cmpsb
test
outsb
pop
fdivrl
fwait
lods
add
add
aad
mov
outsb
popf
popa
out
negb
stc
sub
add
and
cwtl
fstl
mov
jmp
hlt
mov
mov
rclb
movsl
scas
adc
or
decl
outsb
sub
dec
cmpsb
xor
iret
mov
jg
cld
enter
fwait
dec
mov
insb
mov
lret
and
outsl
cmp
jge
or
popa
out
sbb
loop
enter
and
popf
imul
shll
out
aam
sub
lods
adcl
xorl
cli
mov
jecxz
les
or
lock
mov
jno
in
ja
xchg
hlt
bound
jecxz
and
sbbl
aas
js
inc
sahf
mov
mov
inc
dec
insb
jno
es
jp
testb
lods
in
cwtl
push
insb
in
insb
cmpb
arpl
aaa
inc
inc
shrb
fisubl
dec
dec
push
leave
lahf
fs
jne
insl
push
test
xchg
pop
pop
fidivs
fbld
push
lret
jbe
int3
jp
jp
pop
or
inc
jmp
add
push
adc
sub
sub
mov
or
jmp
and
lea
fcomps
cs
xlat
adc
lods
shlb
mov
adc
iret
iret
outsb
pslld
fadd
rcr
inc
xchg
popa
fsubs
pop
or
jns
sbbb
cmp
rcrb
jo
pop
aaa
scas
std
imul
fisubrs
xchg
mov
xlat
daa
test
shll
popa
dec
dec
add
cwtl
jp
and
movsb
and
inc
sub
sbb
hlt
addr16
clc
xor
mov
xor
push
xlat
mov
dec
daa
lods
fcomps
roll
jge
out
push
cmp
inc
xor
jno
ret
dec
sbb
cld
xorb
lods
jne
insl
mov
lds
lret
push
jl
out
clc
lret
pushf
jle
into
es
rcrb
loop
pop
fwait
dec
pop
mov
inc
xchg
push
das
inc
pop
bound
xor
je
xchg
sbb
fdivrs
out
inc
in
mov
or
aaa
xchg
inc
pop
arpl
or
add
mov
mov
fstps
das
push
cs
bnd
push
out
or
std
ljmp
mov
bound
push
cmp
fwait
test
xchg
jne
ffreep
ljmp
mov
mull
lahf
ds
cmp
repnz
imul
mov
push
inc
jp
adc
jecxz
push
lret
aaa
stos
and
mov
xchg
test
inc
orl
stos
mov
fisubrl
shl
jp
out
or
iret
cwtl
pop
test
jns
out
sbb
ret
jne
sti
movsb
pop
cmpsb
add
jp
out
repnz
popa
cvtps2pi
mov
jmp
inc
cmpsb
in
call
fs
xor
in
jl
pop
addr16
inc
mov
movsl
adc
xchg
loope
xor
dec
dec
nop
shlb
rol
push
out
js
mov
outsl
pop
pop
xor
iret
test
insl
addr16
cltd
inc
test
dec
in
movsb
xchg
mov
mov
add
ljmp
mov
mov
inc
mov
lods
jbe
xchg
call
cmp
add
add
ret
sub
xchg
ljmp
pop
and
imul
inc
bound
push
cmc
fldcw
adc
xor
fs
dec
dec
imul
movsb
push
pop
and
icebp
imul
das
out
imul
add
shlb
mov
mov
out
push
dec
loop
lgs
push
in
xchg
mov
lcall
push
sar
lock
sbb
dec
dec
hlt
mov
movsl
lods
xchg
inc
aad
xlat
aas
adc
insb
adc
push
add
js
cmc
push
mov
adc
jbe
into
inc
sub
sarl
lds
cmpsl
and
cwtl
insb
jnp
lods
cmp
cli
in
inc
push
sub
popf
jo
xchg
xchg
mov
jecxz
dec
push
sbb
adc
push
xchg
aas
push
lea
imul
sahf
mov
jecxz
adc
cmpsb
mov
jne
jns
lock
lret
lods
iret
loopne
mov
ret
inc
fsub
ret
and
outsl
scas
dec
cmc
push
in
fstl
cmp
addr16
ret
mov
incb
sbb
enter
or
fincstp
lret
mov
adc
xchg
pop
out
xor
cmpsl
jp
push
inc
int
xor
sbb
lcall
cltd
cmp
bound
add
lahf
cmp
pop
dec
pusha
icebp
inc
movsl
out
cli
stc
ljmp
lahf
push
mov
outsl
out
mov
pop
sahf
add
fs
jno
pop
xchg
sub
test
cmp
adc
add
insb
cmc
mov
pushf
jmp
loop
push
push
or
dec
icebp
lahf
xchg
imull
cmp
ficompl
test
push
lock
push
mov
sub
push
jbe
inc
insb
test
cs
push
mov
xor
mov
add
repnz
imul
dec
stos
stos
outsb
mov
jno
or
sahf
sub
add
dec
lcall
jge
sub
imul
push
sub
lret
adc
sbb
out
push
mov
inc
sbb
test
shll
repz
pop
add
or
ret
test
cmpsb
ret
cmpsb
mov
push
and
mov
mov
adc
ja
das
push
lods
test
addr16
out
add
sti
xchg
out
pop
xor
jns
jg
aam
jp
mov
dec
xchg
push
add
cmc
dec
rorl
cli
pop
fmulp
xchg
push
mov
push
adcl
jnp
jne
ucomiss
jmp
xchg
jne
in
adc
sbb
push
or
sar
push
fsubrl
in
push
cmp
daa
enter
ljmp
push
mov
push
cmp
repz
pop
shrb
cmp
outsb
test
and
les
and
sub
push
or
and
dec
push
div
lea
bound
mov
adc
roll
cmp
in
mov
cmp
neg
ds
sbb
ljmp
inc
xor
xchg
or
or
pop
dec
xor
sub
out
stos
int
mov
push
xchg
cmp
or
in
cmpsl
xchg
jo
sub
aaa
or
jbe
xor
and
adc
adc
mov
das
shr
inc
aas
xor
cmp
jecxz
test
scas
movsl
mov
mov
adc
inc
jne
push
roll
nop
rolb
dec
rolb
enter
repz
fstl
pop
xchg
call
add
mov
mov
inc
push
mov
testb
ficoml
stos
aas
jns
pushf
scas
test
in
mov
loope
ret
add
mov
aas
xchg
jb
fsubr
shrb
dec
and
sarb
jno
das
inc
mov
cmp
push
and
xchg
push
movsb
jle
mov
std
xchg
adc
pop
mov
out
mov
setnp
rcl
mov
loop
repnz
js
or
repnz
pop
xchg
xor
sub
sub
xchg
stos
mov
xchg
or
mov
inc
push
mov
pop
push
mov
addr16
ja
movsl
jbe
jl
cmpsl
cmpl
stc
inc
pop
aaa
daa
mov
popf
popf
add
dec
int
adc
mov
rcrl
inc
int3
xor
test
xor
stos
inc
pop
dec
push
out
sub
mov
xor
mov
and
push
lret
sarb
jbe
test
adc
lret
js
hlt
sub
ret
lcall
lcall
or
loopne
mov
in
push
add
pop
jmp
pop
addl
stc
std
sti
cmpsb
cmp
repnz
gs
je
subl
dec
lret
or
mov
sbb
test
or
adc
testl
test
xor
pop
inc
mov
les
cwtl
push
movsb
mov
mov
xor
mov
mov
cmc
lahf
ljmp
jp
jg
mov
mov
xchg
or
jl
into
xor
outsb
loopew
or
lahf
jnp
cmp
stos
push
lret
int3
xchg
fildll
adc
jmp
orb
mov
test
test
pop
aam
xchg
jmp
or
and
add
fdivs
mov
sub
sbb
shrb
mov
pop
aas
jo
repnz
in
sbb
outsb
iret
mov
in
pop
rcll
add
fnop
mov
shlb
xchg
push
dec
add
stos
adc
loopne
push
in
daa
cld
aad
mov
lods
int
mov
lds
cmp
push
add
lret
pop
xchg
imul
in
pop
ss
sbb
or
jp
adc
test
hlt
adc
cwtl
stos
jle
jl
cs
mov
mov
or
push
dec
cmpsl
pushf
ja
sub
inc
jno
insb
lret
aam
and
jge
addr16
inc
pop
es
sbb
jno
add
leave
popa
mov
sub
cld
adc
lods
sbb
push
movsbl
movsb
add
or
lcall
insb
lea
fldt
and
hlt
mov
mov
shl
xchg
inc
cltd
xchg
mov
add
dec
ljmp
js
das
or
and
inc
cli
pop
push
sbb
or
inc
loop
test
lcall
bound
inc
fcomi
xchg
jge
sub
cmp
jl
call
and
sbb
lods
cmp
cmpsl
imul
loopne
ja,pt
jge
fidivl
push
sbb
jb
jno
mov
inc
fldenv
sbb
mov
mov
or
fmuls
dec
cwtl
push
xor
sub
push
pop
xor
xor
aas
add
out
jecxz
sbb
dec
loopne
jb
sti
xorb
ret
lods
sbb
dec
cli
push
xchg
aad
cmpsl
or
inc
mov
mov
rcl
lret
sub
add
mov
les
lcall
insb
lret
jne
ret
cltd
js
or
int3
cli
inc
imul
mov
or
out
dec
jbe
jmp
dec
outsb
xor
mov
xchg
stc
mov
das
cmpb
jle
jo
std
inc
pop
out
sar
mov
mov
pop
scas
adcl
jno
push
inc
rcll
lds
lods
loope
mov
and
lahf
xchg
and
and
inc
cmp
fisubrl
daa
cmpsl
mov
pop
iret
inc
sbb
push
push
jecxz
das
mov
jecxz
jb
xchg
std
or
pop
xor
push
into
mov
lea
mov
jmp
pop
into
pop
pop
mov
xor
xchg
insb
and
bound
push
aad
aam
adc
lcall
sub
xor
xor
ja
and
rol
stos
xor
stc
les
aam
fmull
mov
jns
cmpsl
cs
jp
push
bnd
into
hlt
in
sbb
aaa
dec
cmp
jecxz
mov
js
sub
sbb
push
pop
filds
jle
xchg
xchg
push
mov
fdivr
adc
push
imulb
ret
jle
scas
pusha
sbb
pop
push
and
arpl
out
fadds
mov
dec
rcrb
ljmp
fldenv
leave
cmc
push
push
test
rolb
rorl
imul
jae
lret
add
clc
cmp
test
xchg
es
fadds
sbb
jne
mov
jae
add
repnz
jb
int3
inc
leave
popf
int
push
test
sti
mov
sub
das
cwtl
mov
cmpsb
mov
mov
test
hlt
xchg
cld
dec
dec
add
xchg
jmp
scas
test
jge
insl
jno
push
pop
sub
pop
xchg
data16
jmp
mov
mov
pop
mov
scas
sbb
rcll
popa
orb
push
push
dec
sbb
push
cmp
fdivl
push
lock
xor
loope
arpl
mov
lock
fimuls
pop
xchg
jne
jns
fstl
sarb
scas
mov
inc
testb
aam
jge
ja
push
or
cmp
mov
rol
lret
adc
sbb
push
mov
mov
cmp
mov
pop
adc
das
in
sarl
xchg
adc
sub
jae
pop
inc
push
push
cs
mov
fisttpl
cmp
cmpsl
inc
xchg
sub
xor
loope
sbb
pop
push
leave
loope
dec
dec
out
xor
cli
cld
lret
ret
in
mov
rcrb
inc
dec
add
dec
sbb
xor
js
int3
mov
dec
outsl
mov
push
insb
inc
adc
ds
mov
cld
loop
jae
cli
fsubrp
jmp
shll
xchg
and
and
cltd
in
loope
imul
mov
movsl
je
mov
add
xor
clc
out
mov
dec
pop
xchg
scas
mov
icebp
fbstp
lods
cmp
jae
sbb
scas
sbb
aad
and
xor
sbb
into
addr16
jl
repz
out
jns
xchg
dec
sbb
or
mov
jmp
insl
aaa
movsb
in
adc
or
pop
sbb
push
add
fisubl
call
push
mov
adc
shrb
imul
ss
repnz
mov
sub
cmpsl
imul
lahf
negb
in
shr
aas
lret
sub
sbb
mov
mov
mov
mov
iret
leave
fidivs
mov
pop
and
and
add
mov
insb
es
daa
dec
pop
pusha
jne
xchg
int
movsl
and
rcll
mov
icebp
xor
repnz
xor
dec
popf
cmpsb
adc
or
and
pusha
add
movsl
enter
push
loope
sahf
loope
add
adc
sbb
aaa
jb
cltd
fwait
dec
dec
sbb
js
sub
sbb
jbe,pn
push
loope
outsb
sub
test
adcb
cmc
sbb
adc
mov
test
lea
into
sub
in
in
mov
lret
jmp
out
mov
pop
add
rclb
test
aas
inc
mov
daa
jo
cmpsb
ljmp
in
add
xchg
iret
mov
stc
and
bound
aas
mov
fwait
xor
xchg
pop
popa
xor
or
ljmp
int3
xchg
mov
cbtw
ret
push
sub
insb
inc
dec
fwait
imul
xor
das
push
dec
mov
sahf
aad
je
mov
xchg
mov
mov
or
adc
push
push
imul
xchg
int3
push
push
sub
pushf
sub
jecxz
push
sbb
les
ljmp
sub
mov
shrl
int
fldt
mov
into
sbb
aaa
push
hlt
fsubrl
jmp
add
and
lea
or
pusha
inc
or
mov
add
je
push
jno
fwait
xchg
clc
mov
sbb
insl
cltd
xor
loop
std
pop
cwtl
jbe
or
push
cs
cmp
jle
jecxz
sub
push
ds
sarb
rclb
outsl
movsl
data16
lahf
or
mov
adc
xchg
push
dec
dec
cwtl
xchg
enter
or
into
int
shll
fdiv
movsl
adc
push
jmp
adc
test
fcoms
mov
rcl
mulps
dec
cmpsl
xchg
loop
xchg
lds
xor
cmp
sar
push
fwait
xchg
mov
dec
adc
xor
cld
add
repz
roll
jo
push
aad
test
cmp
pop
popf
cmc
rcrb
and
cwtl
xchg
pushf
or
es
rcr
mov
insl
lock
arpl
leave
mov
push
cmpsl
sub
aaa
sahf
fnstsw
jmp
xchg
push
jbe,pt
and
adc
xchg
mov
xor
test
mov
ds
mov
test
xor
xor
addr16
adc
add
jl
ljmp
mov
or
pop
pop
cld
push
mov
cwtl
inc
dec
xor
lock
mov
adc
rorb
mov
sub
lock
mov
mov
add
xor
xor
dec
das
add
fstl
sub
pop
scas
add
loopne
shlb
ret
push
pusha
push
fbld
sbb
mov
pop
insb
nop
or
cmpsb
mov
dec
mov
iret
dec
scas
fsubrs
add
xor
inc
test
jb
in
sub
cli
mov
mov
loopne
push
mov
movsl
pop
cld
js
push
xor
ljmp
mov
imul
sbb
bound
sbb
adc
sub
std
orl
subl
pop
out
cmp
daa
in
xchg
mov
std
adc
loop
in
iret
mov
jp
pop
test
test
mov
xor
test
in
filds
dec
outsb
lcall
adc
add
xchg
sbb
inc
jle
lcall
roll
adc
mov
sub
arpl
add
frstor
scas
mov
xchg
shll
jne
movsl
imul
xchg
pop
jl
sub
push
jge
or
sbb
in
jmp
pop
xor
icebp
xchg
mov
aaa
scas
cmp
adc
out
jmp
push
pop
xor
and
add
test
mov
ljmp
fcomps
mov
mov
les
mov
stos
sbb
inc
xchg
pop
add
xchg
enter
push
cmp
pusha
pusha
cmp
jne
minps
das
out
jno
jecxz
adc
fs
push
int
or
icebp
mov
jae
pop
out
jae
in
jp
repnz
push
mov
cltd
push
bound
in
lea
xor
dec
xor
mov
test
add
jl
gs
mov
loopne
dec
cli
pop
push
pop
xlat
jns
adc
cld
cmpsb
jns
popf
popf
mov
push
loope
out
inc
xor
mov
jge
jno
addr16
std
das
xchg
add
cmpsl
cltd
shl
adc
scas
lret
dec
dec
mov
repz
jae
std
push
iret
cs
dec
or
imul
stos
enter
fisubrl
cmp
bound
inc
data16
push
push
inc
cmp
mov
aaa
cmp
inc
mov
repz
push
je
test
add
ja
lcall
push
mov
nop
test
inc
insl
jge
ljmp
aas
xchg
ss
cmp
fsub
cmp
filds
jge
pusha
ret
imul
xchg
les
je
jecxz
rol
shlb
cmpb
test
mov
in
sti
adc
xlat
mov
int
data16
sub
subps
sub
les
mov
jb
lahf
adc
push
push
xchg
imul
loop
jb
outsl
jb
ret
push
lock
adc
lsl
push
adc
mov
jae
add
call
testb
inc
mov
push
xchg
adc
inc
imul
xor
stos
xlat
push
rcrb
mov
cld
pop
lock
dec
imul
jge
popf
fcomip
sbb
mov
mov
ror
cmp
dec
iret
lahf
pop
fiadds
fcomi
bound
jae
pop
push
daa
clc
add
insl
jmp
sbb
xor
adc
cwtl
cmp
xchg
repz
jge
cli
push
cli
sub
xor
sahf
ror
loop
jg
jno
lcall
sbb
push
shr
jmp
add
mov
xor
cmp
cltd
or
cmpsl
in
cmpl
xor
in
popf
mov
push
sub
push
jne
pop
mov
or
jbe
dec
jl
enter
jmp
test
nop
sti
push
fsubr
stc
lret
or
lcall
dec
mov
inc
cmp
xor
pop
add
ds
lret
cmp
pushf
jo
popa
push
xor
cmpsl
ljmp
lds
roll
adc
dec
xor
add
stos
ucomiss
pop
js
loopne
sbb
push
test
dec
lcall
sub
fnstenv
or
mov
cs
xchg
mov
addl
ret
mov
xor
or
in
outsb
daa
shll
ds
mov
das
xlat
call
add
cmpsb
sbb
push
fwait
rclb
roll
lcall
dec
pushf
cwtl
pusha
xor
cmpsb
jge
in
adc
fldcw
sub
iret
jecxz
lcall
sbbb
lods
fidivrl
loop
enter
push
jge
mov
lcall
cmp
jp
test
cmpb
xchg
pushf
pushl
jnp
mov
jle
cmp
jp
jo
cmp
lods
jno
scas
push
push
push
mov
xor
rolb
pop
pop
fwait
dec
pmaxub
dec
cmp
das
mov
mov
out
dec
add
sbb
jne
lods
in
jge
jne
or
int3
shll
int3
scas
lahf
pop
pop
add
pop
loopne
dec
mov
test
and
sub
nop
sub
inc
xor
lds
dec
int3
mov
ja
jge
mov
mov
cmp
jo
lcallw
or
inc
sbb
fwait
stos
pop
inc
adcb
fildl
je
mul
loopne
push
or
ja
shr
rorl
pop
rcll
fdiv
in
mov
jo
daa
xor
cli
shl
jl
fsts
inc
aaa
jecxz
mov
int3
clc
add
pop
fadds
jl
mov
lods
outsl
mov
inc
pop
mov
sub
push
out
mov
sti
cmp
sbbl
cmp
sbb
inc
push
in
mov
and
xchg
push
das
sbb
aaa
or
lcall
mov
shll
pop
cmpsb
lret
int3
jge
mov
push
inc
into
vprotq
lret
loope
lock
and
lss
mov
divl
jmp
test
cs
daa
fwait
push
fucomp
pop
faddp
int
je
fdivrs
jns
ficoml
in
mov
and
inc
cmp
push
xchg
aaa
sub
cld
shl
shlb
loop
dec
mov
cmpsl
mov
lods
inc
push
clc
dec
pop
lds
dec
and
int3
jae
sbb
jo
and
scas
mov
xor
sahf
out
daa
mov
stc
sbb
inc
cwtl
je
shll
push
in
push
mov
stc
sbb
xor
add
jae
shlb
xor
xor
mov
mov
cmpsl
cs
pusha
in
pop
inc
cli
cmp
jg
clc
rcl
lret
test
iret
jle
add
push
mov
jbe
stos
xchg
mov
push
in
mov
popf
xor
into
icebp
jl
push
nop
xchg
js
xor
or
jg
adc
insb
cmp
fldenv
enter
adc
jecxz
inc
lcall
cltd
mov
stc
add
dec
pop
ret
xor
ds
fcomp
je
cmp
mov
xchg
jmp
add
or
testb
and
test
imul
movsb
xchg
mov
into
jbe
jo
or
ss
ffree
lahf
mov
call
incl
sub
fucomip
push
sbb
mov
loope
add
sarb
adc
adcl
enter
mov
xor
sub
int
jmp
lock
xchg
pushf
and
rorb
jmp
pop
mov
add
mov
push
movsb
mov
add
xlat
out
adc
jb
rorl
mov
ret
std
mov
mov
adcb
rep
rcll
cld
filds
sub
lret
gs
out
xlat
xchg
mulb
xor
stc
in
mov
or
mov
mov
sti
xchg
loopne
mov
in
add
test
push
push
or
pop
or
xchg
outsb
push
lods
das
fimuls
inc
xchg
sahf
cmpsl
sbb
sub
xor
stos
mov
rorl
sbb
addl
cmp
repnz
dec
mov
and
cmc
bnd
repz
arpl
jecxz
jmp
cmp
icebp
pop
imul
push
scas
mov
mov
and
outsl
aas
lret
pop
xchg
stc
jg
push
fisubrl
jg
test
cmp
adc
dec
mov
ret
pop
je
add
sbbl
cmpsl
sbb
push
and
imul
fildll
xchg
lock
xor
xor
push
cs
push
out
mov
fldt
fidivrl
daa
lods
inc
inc
cmpsl
sub
aaa
dec
or
mov
mov
xcrypt-ctr
cmpsl
pop
pop
jmp
mov
and
jo
inc
icebp
pop
sbb
lret
jp
sbbb
adc
call
ja
push
dec
rolb
ret
add
cmp
xchg
arpl
fistpll
fstpt
pop
jo
cs
movsw
fistpll
sub
popa
repnz
fimull
daa
xchg
fs
fmuls
pop
dec
sub
push
mov
jne
push
adc
mov
mov
lock
sti
testb
rclb
or
rorl
aam
and
dec
xor
test
ret
lds
daa
mov
pop
sbb
and
and
inc
in
xchg
xor
gs
dec
out
popa
repnz
sub
push
gs
ljmp
inc
cmp
into
icebp
js
add
or
dec
jbe
imul
cmp
jle
mov
out
aad
aad
out
insl
popa
mov
out
lret
push
gs
xchg
sub
mov
and
and
mov
xchg
dec
and
imul
inc
into
test
test
fisubl
cmc
into
dec
push
jo
cmpsl
pop
xor
cmc
inc
jb
adc
inc
sbb
std
pop
cld
or
sar
sbb
repnz
xchg
pop
dec
lret
adc
fiadds
push
xchg
xchg
lods
cwtl
and
mov
aam
jbe
xor
addl
lcall
push
loopne
div
mov
daa
sbb
jle
mov
xchg
or
pop
and
in
push
into
adc
fcompl
adc
mov
aaa
aad
sbb
mov
push
inc
fisubs
pushf
imul
sub
dec
repnz
out
xor
out
mov
jge
ret
les
popa
push
sub
jge
adc
mov
testb
rolb
sbb
sbb
xchg
fbld
test
mov
mov
mov
in
les
fdivrs
bound
mov
push
sub
mov
stos
mov
mov
pusha
cmc
jmp
imul
jbe
mov
out
popf
orl
outsl
aad
inc
jo
pop
push
mov
and
jnp
out
xor
and
and
ficoml
je
sbb
or
popa
sbb
mov
xlat
decb
pop
pop
test
pop
pop
dec
call
fisubs
mov
adc
enter
sub
mov
jge
ds
fcompl
xchg
or
mov
mov
es
and
inc
test
and
fs
pop
adc
sbb
jp
jbe
repnz
popa
dec
xchg
daa
fisubl
aaa
xor
mov
popf
jecxz,pn
aaa
add
out
out
fmull
add
out
jmp
adc
fisubs
mov
and
call
and
sbb
cmp
push
andb
fsubs
and
imul
loope,pt
push
js
das
mov
out
scas
mov
and
jmp
in
mov
mov
dec
dec
adc
aaa
dec
add
arpl
imul
cltd
pop
push
pop
push
ret
pop
xor
bound
or
inc
or
push
mov
in
nop
loop
loopne
pop
jbe
mov
pop
shll
int
inc
jp
mov
hlt
xchg
out
mov
lds
in
lods
pop
in
in
adc
enter
and
loopne
xlat
arpl
pop
inc
popa
gs
ds
mov
cmp
repnz
mov
insl
sub
cli
inc
push
pop
lods
mov
out
cmp
and
pop
dec
sbb
jle
cwtl
data16
aaa
and
arpl
xchg
divb
js
adc
rcrl
ja
mov
cwtl
iret
out
das
rcrl
lahf
cmp
mov
add
mov
lret
jg
mov
adcb
js
lods
inc
pop
popa
nop
mov
pop
daa
test
mov
xchg
ds
xor
and
loop
out
cmc
outsl
testb
mov
adc
ss
push
mov
adc
movntq
push
rol
sub
movsb
divl
rcrl
fs
push
std
mov
fdiv
xchg
addb
sub
mov
and
xor
cwtl
lret
push
shl
pop
mov
sarb
push
addr16
leave
xchg
jae
sbbb
imul
stos
mull
repnz
sbb
xor
xorb
adc
sbb
cwtl
jbe
mov
fwait
add
fwait
push
pop
jns
clc
or
and
or
push
inc
movsl
cmpl
insl
sbb
mov
mov
pop
jge
leave
cltd
adc
mov
lretw
test
dec
jg
loop
stos
lret
cmp
pop
push
arpl
shll
enter
dec
jge
out
dec
mov
or
bnd
pop
outsb
stos
dec
jns
les
out
icebp
fxam
insl
fsubs
jns
jmp
negl
adc
jns
pushf
and
fsubrs
leave
xchg
sbb
jge
mov
add
xchg
fisubrs
mov
std
ds
std
dec
mov
data16
lods
mov
scas
xchg
mov
sub
mov
mov
sub
loopne
insb
gs
xor
mov
pusha
popa
pop
test
pop
mov
call
jl
js
lods
nop
jecxz
lods
and
sub
cmpsb
fs
pushf
or
jl
mov
fld
test
shll
jle
sub
sbb
mov
and
in
out
inc
xchg
push
pop
jns
mov
cmp
mov
scas
out
mov
fimull
cltd
pusha
xchg
call
push
dec
fdivrl
imul
mov
sbb
shl
push
idivb
inc
and
ret
cltd
pop
pop
jo
sub
inc
int
pop
add
int3
es
jbe
iret
lods
mov
mov
pusha
jo
cwtl
cwtl
mov
push
push
andb
xor
sub
outsb
cli
push
stos
pop
lods
pop
fldcw
daa
mov
jl
xor
pop
lret
jbe
xor
dec
xor
test
ffreep
cmpsb
in
dec
pop
in
dec
push
adc
push
aas
aad
push
mov
cmp
add
test
pop
leave
adc
mov
stos
mov
aaa
pop
jae
xchg
mov
push
daa
inc
fisttps
fistpl
pop
mov
push
sub
je
movsl
subb
cli
addr16
inc
call
js
and
mov
loop
inc
ret
xchg
psrad
sub
sbb
inc
and
test
int3
in
ds
mov
mov
ds
lds
sub
push
cld
rcrb
lcall
fsubl
jmp
xor
push
sub
bound
scas
jno
push
pop
scas
push
sbb
add
hlt
push
xor
mov
dec
sub
iret
add
jle
in
rcrb
aas
rclb
scas
mov
lock
add
les
inc
jp
and
jo
in
je
mov
shrb
xor
mov
cmp
xchg
sub
aad
pop
stc
and
cmp
icebp
sbbl
sbb
pop
icebp
mov
arpl
pop
cltd
leave
or
mov
inc
outsl
mov
aaa
or
pop
xchg
in
fistpl
das
or
sahf
cld
imul
inc
fwait
ret
mov
test
pop
movsl
test
mov
out
loope,pt
mov
aas
xor
test
jo
test
imul
dec
sub
jl
jno
add
scas
shlb
jb
loope
pop
add
push
cltd
mov
ljmp
mov
adcl
adc
push
sbb
mov
iret
imul
push
in
or
pop
sbb
xchg
enter
loop
add
push
in
pop
aas
xchg
dec
inc
clc
nop
dec
fwait
shr
sub
dec
sbb
dec
pop
addl
iret
arpl
xor
and
mov
mov
dec
sub
cmp
xchg
popf
aaa
lods
mov
push
test
aas
jecxz
out
cmp
in
mov
jmp
cmpl
rcrb
dec
or
arpl
lret
inc
fwait
insl
movsl
inc
mov
ret
inc
sub
fchs
lret
lret
xchg
jl
cltd
shl
test
insb
dec
push
xchg
cmp
and
stos
xor
hlt
test
sbb
cli
inc
sbb
push
inc
xor
sbb
mov
jle
lret
sub
inc
or
mov
lret
addb
cmp
adc
testb
jne
aas
fwait
mov
imul
cmp
repnz
and
stos
push
rcl
insb
mov
and
cmpsb
aas
cmp
stos
ror
jno
sub
mov
mov
int3
fisubrl
int3
cmp
mov
fwait
and
mov
mov
fldt
in
sahf
cld
notw
pushf
nop
mov
sbb
cltd
mov
jne
lret
stc
mov
push
push
repnz
and
mov
adc
outsl
ljmp
std
mov
lcall
loope
stos
rorl
sahf
mov
mov
push
mov
stc
fwait
xor
push
sbb
pushf
out
add
adc
inc
mov
pop
mov
and
and
nop
hlt
add
and
sahf
and
xchg
rcr
repnz
clc
lahf
jne
lock
mov
movsb
lds
lods
or
scas
dec
leave
daa
jge
stos
ficomps
repz
xchg
push
sub
adc
inc
mov
mov
movsl
es
inc
xchg
sub
test
mov
inc
push
jo
aad
adcb
hlt
ja
sub
orl
faddl
lock
sub
aam
and
insb
jno
jge
fs
jl
and
fwait
inc
jnp
movsl
adc
ret
enter
les
loop
popf
mov
test
mov
mov
mov
jge
cmp
lods
mov
jg
popa
and
jnp
mov
lea
ss
jp
xchg
out
test
mov
je
push
and
adc
pop
test
xor
xor
add
cmc
imul
shrb
je
mov
enter
rcrb
add
mov
sar
sahf
outsl
ret
or
bound
sbb
arpl
test
add
dec
clc
out
dec
add
adc
scas
sbb
lahf
popa
gs
jae
xchg
push
mov
arpl
jp
mov
daa
jbe
lret
push
jecxz
stc
xor
cs
mov
pop
or
xchg
test
jge
push
inc
mov
enter
add
jge
push
xor
mov
xchg
inc
shlb
mov
int
pop
aam
mov
adc
mov
test
jmp
idivb
adc
gs
test
add
in
xor
jle
insl
sbb
adc
insl
dec
or
pushf
jge
xchg
cmp
mov
call
fsubs
pop
fs
push
xchg
mov
mov
push
clc
aad
ljmp
adc
mov
pop
lds
jne
cmp
mov
jbe
sub
mov
jb
loopne
scas
loop
es
je
inc
sub
adc
das
push
out
arpl
movsb
xlat
icebp
out
iret
mov
loop
aaa
ds
push
and
xchg
mov
dec
inc
aaa
divb
cmp
cmp
dec
inc
push
mov
mov
inc
mov
jle
pop
xor
call
pop
pop
push
or
idivb
in
jno
push
inc
xor
sbb
ss
jl
subb
dec
pop
pushl
add
ja
fsubs
mov
jle
inc
mov
cmp
call
add
out
jp
in
inc
adc
lcall
dec
add
cmp
and
mov
push
add
jle
xchg
sbb
daa
add
jecxz
add
dec
xchg
in
mov
rol
js
insb
and
arpl
shlb
outsb
adc
xchg
dec
mov
shlb
mov
mov
lds
jecxz
repz
xor
in
xchg
sbb
pop
push
add
outsl
xchg
fwait
jno
mov
fwait
bound
bound
loopne
jno
mov
out
cmp
adc
shlb
xrstor
test
rorb
aas
mov
pop
addr16
jns
push
or
arpl
dec
aad
push
aas
or
and
loopne
xchg
mov
rorb
push
mov
or
int3
or
sbb
scas
aaa
sub
fadd
jl
aam
dec
mov
aad
fdiv
stc
jge
adcl
add
xor
lcall
fs
and
push
xor
cli
in
pop
mov
nop
ljmp
sbb
adc
inc
fcomps
js
ljmp
aam
int
push
push
out
test
add
jno
cltd
cli
movl
and
mov
fisubs
pop
push
out
insl
int3
adc
and
pop
sub
sbb
pop
or
adc
sbb
jno
test
mov
cltd
dec
addl
ljmp
mov
pop
xor
add
popf
daa
sbb
xchg
push
popa
pop
mov
rorb
scas
jbe
out
sar
push
sub
shr
lods
pop
lcall
inc
pop
int
or
in
insl
iret
stos
fmull
xchg
push
repnz
popf
mov
test
out
mov
sbb
jno
mov
aas
fmulp
into
cmp
fsubs
sbb
push
repnz
pop
inc
fsubrs
push
mov
stos
lcall
xchg
jnp
xchg
push
ljmp
es
xor
mov
jbe
push
outsl
push
sbb
enter
or
mov
and
call
push
and
cmpsl
pop
mov
insl
jb
test
jnp
scas
pusha
pop
cmp
sbb
adc
inc
jg
in
pop
aad
int
loopne,pn
mov
movsl
movsb
popa
fadd
or
loope
mov
orl
add
sbb
insb
fidivs
cmp
out
mov
mov
xor
and
je
add
dec
repnz
push
fstpl
add
adc
popa
or
out
mov
adc
jno
xchg
mov
fists
adc
xchg
lret
popf
sahf
mov
jno
xor
or
sbb
mov
sbb
std
enter
scas
mov
push
pusha
jmp
sub
dec
xchg
lock
test
lret
loope
cld
or
inc
cmp
idivl
or
push
fiaddl
call
loopne
pop
orb
not
cmp
addb
test
sbb
repz
shlb
mov
push
in
xchg
cmp
xor
repz
lret
push
mov
aas
or
lods
repz
sub
nop
in
dec
inc
xchg
lret
inc
call
jns
cmc
lret
stos
out
cmp
leave
aas
test
mov
loope
stos
push
enter
loopne
xchg
mov
lret
loope
jae
cmp
push
in
pop
aam
sub
mov
jne
pusha
stos
test
xor
lahf
insl
push
bound
mov
sub
sub
in
aas
and
xchg
stos
pop
and
inc
cmpsb
int3
fs
jae
stos
ja
out
or
in
jne
and
cmp
cmpl
sahf
mov
testb
sbb
sub
aas
or
dec
dec
loop
mov
cs
aas
pop
filds
jno
mov
aas
pop
outsb
mov
mov
adc
les
and
pop
pop
iret
dec
push
lods
jmp
sti
mov
sbb
mov
inc
push
jg
xchg
fnsave
xor
ds
movsl
and
hlt
xlat
xchg
add
das
xchg
jb
dec
les
lods
jge
xchg
mov
or
cmpsb
cmc
out
jmp
xor
sbb
sbb
sti
xchg
shll
add
sub
or
jbe
mov
cmp
das
lret
addr16
xchg
and
sbb
sti
lret
in
lret
sub
jmp
insl
or
xchg
cs
xorl
andb
dec
jo
int
pop
mov
popa
lods
movsl
js
ljmp
ja
jg
mov
sub
pop
or
js
push
out
lahf
lahf
push
imul
mov
mov
fsubs
sbb
shlb
xchg
mov
idivb
js
push
cmp
pop
push
call
roll
scas
mov
cmp
mov
fwait
push
mov
mov
xchg
outsb
out
or
lret
fnstenv
dec
xlat
mov
pop
adc
or
sbb
arpl
icebp
mov
sub
jne
push
bound
push
mov
mov
xchg
and
stc
push
data16
dec
aaa
mov
cmp
mov
pop
out
mov
pop
fwait
add
xchg
inc
fs
mov
popf
not
test
mov
sub
mov
mov
jbe
or
mov
inc
xchg
test
test
jecxz
cmp
iret
shlb
fmull
jg
loopne
cmpsl
ret
pushf
cmp
or
vaddsd
ret
and
xchg
testl
pushf
mov
scas
outsb
lea
rep
or
xlat
ficoml
mov
and
dec
push
or
jnp
push
inc
and
js
or
sbb
mov
test
cltd
xchg
dec
jmp
mov
push
and
pop
mov
dec
leave
and
popf
fadds
lods
mov
mov
mov
and
incb
push
js
inc
popa
movsl
lret
push
int3
inc
lea
out
dec
jns
out
add
clc
jecxz
mov
sbb
jg
xor
push
sahf
pusha
mov
lods
pop
xor
das
pop
inc
data16
sbb
xor
mov
dec
mov
ret
pusha
adc
inc
ljmp
pusha
out
mov
scas
push
ss
adc
sbb
into
mov
mov
cwtl
repz
pop
cs
pop
rolb
addr16
in
mov
xchg
scas
loope
dec
or
mulb
adc
ret
inc
rcrl
pop
or
push
stos
mov
xchg
jno
pop
adc
lock
push
jns
fcoms
aam
fwait
and
ret
icebp
push
mov
clc
imul
fadds
mov
dec
fsubl
dec
mov
insl
aas
sbb
mov
mov
insb
imul
sbb
sub
cmp
xchg
aas
aam
and
or
stc
mov
dec
cmpsb
loop
sbb
xor
rcrl
xor
xor
dec
or
mov
cwtl
push
hlt
sub
pop
repz
xchg
sub
xchg
ror
mov
jl
aad
push
je
adcl
pop
pop
gs
jle
pop
fcoml
or
in
mov
jne
and
fcom
popf
push
cli
clc
push
repnz
fldenv
sbb
pop
outsl
mov
xchg
loop
mov
push
loope
jmp
push
int3
popf
test
xchg
push
adc
push
jno
out
sbb
jne
outsb
addb
test
popa
dec
adc
pop
cmp
mov
nop
addr16
out
add
or
insl
pop
adc
mov
shlb
add
xchg
lods
mov
int
aaa
xchg
je
push
sub
repz
push
push
jnp
push
pop
jno
jns,pt
testb
lods
sarl
sbb
ficoms
aas
pop
cmpsl
push
sub
nop
pop
cmp
mov
sbb
add
jecxz
fisttps
adc
std
pop
xor
and
mov
sbb
fidivrs
dec
push
and
cli
inc
inc
dec
pop
repnz
out
cmpsl
jbe
inc
xor
or
add
les
jp
mov
push
mov
icebp
inc
mov
mov
push
ret
stos
push
xchg
sbb
xchg
iret
jmp
test
push
jle
es
pop
fs
ds
cmc
cmp
inc
push
subl
push
dec
jp
lods
xchg
iret
outsl
cmp
inc
test
fwait
popa
xchg
loop
ja
shlb
addl
xchg
xchg
push
sub
jl
xchg
aam
push
sbb
pop
mov
cmc
dec
xchg
push
jp
test
cmp
sub
mov
mov
mov
dec
push
outsl
sub
testb
xlat
into
pop
jge
jbe
je
test
movsb
add
insb
out
aam
inc
test
mov
push
or
out
push
cmp
pop
shrl
je
sbb
fxch
sti
aaa
pop
or
aam
in
cld
mov
lds
cld
mov
add
gs
imul
inc
and
push
bnd
subb
cltd
adc
cmp
das
xchg
les
mov
insb
aad
movsl
sti
sbb
rcll
inc
inc
sbb
aaa
and
pop
sar
sbb
int3
mov
frstor
test
insl
fisubs
mov
dec
pop
mov
movsl
cmp
push
dec
out
flds
loope
shrb
lret
pop
pop
jnp
mov
jo
xchg
or
push
sahf
sbb
xchg
mov
jmp
xor
andl
xchg
ret
insb
push
lcall
inc
sbb
cs
loopne
sbb
pop
add
mov
jl,pt
add
popf
pop
lods
mov
adc
js
jle
in
ret
ds
xlat
sub
mov
mov
fdivp
dec
push
pusha
out
sbb
jmp
cmp
imul
rcrb
cs
xchg
testl
das
jbe
cmpsl
add
sub
sarb
loope
pushf
inc
ffree
push
push
jbe
aas
dec
push
fwait
or
mov
pop
or
xchg
mov
push
inc
mov
popa
stc
std
mov
sbb
or
pop
or
and
iret
fiaddl
push
sbb
push
mov
repnz
xchg
push
lret
aam
xchg
add
lcall
lret
sub
push
test
ljmp
insl
and
mul
out
adcl
cmc
ljmp
mov
lods
out
xor
cmp
or
lret
negl
push
mov
enter
add
adc
enter
adc
lea
fisttpll
xchg
cmp
insl
and
xchg
lods
adc
and
out
dec
cld
mov
sbb
jmp
pop
aaa
mov
out
jne
push
jne
adc
in
jge
insb
xchg
or
sub
adc
addr16
andl
inc
push
cltd
xlat
sbb
cwtl
pop
cs
pop
ret
call
or
push
mov
inc
icebp
and
in
xor
inc
out
scas
lar
iret
push
or
push
sub
push
ret
stos
rclb
nop
inc
outsb
lods
push
xor
pop
sub
dec
sbb
mov
add
xchg
imul
rclb
xchg
xor
popl
sub
stos
push
and
imul
push
cmp
aam
fistps
add
xchg
ja
cli
arpl
test
dec
jae
pop
jnp
sbb
xchg
out
cmpsb
movsb
or
dec
fdivp
cmc
xchg
ret
std
jne
xor
into
pop
cmp
and
xor
xchg
and
lgs
xchg
pop
jno
nopl
les
jbe,pn
and
sbb
js
xor
mov
mov
cmp
xor
or
jne
mov
pushf
xchg
insb
out
test
mov
pop
popf
ds
cmc
and
push
and
out
jmp
jo
das
arpl
ljmp
out
sub
fidivrs
arpl
xor
xchg
mov
pop
cld
push
cwtl
mov
stos
adc
cmp
test
pop
inc
cs
cmp
iret
pop
dec
jge
scas
inc
xlat
jg
jbe
and
fistps
cli
sbb
push
or
mov
inc
lret
repz
add
in
xor
xor
divl
push
scas
jp
fwait
xorb
jb
and
lret
mov
idivb
fwait
jns
inc
loop
pushf
ret
fcompl
lret
adc
mov
cli
js
out
xchg
es
out
cmp
icebp
inc
push
and
xchg
test
sbb
sahf
roll
movsl
loop
cmp
add
mov
xor
pop
cwtl
inc
dec
inc
insl
in
into
jae
cmp
mov
test
sbb
mov
push
mulb
jo
push
pusha
insl
inc
pushw
pop
cmpsl
lret
dec
test
adc
or
pop
stos
fs
out
fwait
xchg
arpl
xchg
insb
fs
xor
imul
xchg
jge
lds
scas
fstpl
push
mov
js
pushl
mov
mov
hlt
pop
aaa
dec
jae
or
ja
stc
xchg
xchg
insb
lods
daa
cmp
scas
out
jg
inc
out
pop
or
jg
sub
mov
shrb
mov
adc
xor
frstor
add
or
jae
sub
sub
inc
mov
int3
lret
mov
std
adc
jp
rep
pop
jmp
test
inc
arpl
cld
xchg
loop
mov
pop
mov
xchg
xor
jmp
fwait
in
jne
push
lahf
push
pop
andb
mov
pop
test
scas
jae
push
xchg
repnz
dec
mov
aad
jecxz
sbb
xor
sbb
test
dec
jp
mov
inc
adc
and
jae
adc
xchg
inc
push
test
xchg
leave
insb
xchg
dec
lcall
mov
push
addr16
mov
or
cli
sbbl
xchg
pop
or
pop
sub
cmp
rcl
test
std
add
add
and
int
mov
out
sti
movsl
xchg
xor
or
stos
cwtl
add
mov
ds
mov
adc
jo
mov
in
and
pop
add
cmp
lods
aaa
xchg
mov
inc
cmp
mov
pop
lahf
adc
pushf
push
js
orl
int
add
push
or
popa
mov
mov
xor
add
aas
mov
pop
or
cltd
test
andl
fistps
fidivrl
or
leave
and
imulb
dec
jp
fwait
int
pop
jnp
jno
stos
mov
daa
pop
cld
push
mov
shlb
mov
mov
add
jle
jne
cltd
inc
js
xor
sbb
jmp
ret
mov
mov
or
pop
cmpsb
cmp
loope
loop
mov
cmp
inc
test
shlb
shll
lds
jp
sbb
cmp
pop
adc
mov
test
aad
or
cmp
mov
stc
xlat
cmp
jo
xchg
dec
dec
pop
ja
loope
jge
sub
xor
nop
mov
dec
faddl
in
into
out
loopne
mov
repz
pop
add
adc
bound
inc
jbe
xorl
lock
ss
stos
fldenv
pop
inc
mov
mov
fcmovnb
or
sub
mov
inc
into
push
add
packuswb
pop
add
je
adc
inc
adc
or
gs
cmp
adc
xchg
cmc
mov
add
decl
aas
mov
mov
out
jecxz,pn
dec
cmc
and
loopne
scas
shr
pop
sbb
xchg
mov
adc
cwtl
adc
fwait
jmp
and
loop
jecxz
cmp
stc
in
adc
jp
out
pop
js
xor
mov
or
and
push
jg
xchg
ret
inc
sub
dec
cld
mov
fsubl
stos
mov
inc
addr16
das
sub
pop
test
sub
jge
sub
aas
fnsave
mov
xchg
mov
or
lcall
aam
xorl
lret
sbb
mov
jne
cmp
pop
cmpsl
divl
sarl
push
cmc
cmp
out
ret
lods
push
enter
sbb
out
leave
xor
mov
cld
jmp
and
or
cmp
clc
and
mov
lcall
std
jns
ficoml
mov
adc
and
xor
mov
sbb
xor
or
xchg
jle
fcoml
fs
mov
std
int
xchg
js
push
adc
fcmovnu
in
xchg
pop
ljmp
mov
in
pop
cmp
lods
inc
xor
and
mov
add
movsl
fidivl
sarl
mov
fimuls
adc
xorl
push
popa
scas
mov
cltd
cs
xchg
mov
mov
mov
cmpsb
outsb
fimuls
xor
jbe
inc
jnp
fdivrs
mov
rcr
bswap
jnp
or
cld
mov
adc
jae
push
xchg
add
mov
pop
xor
cmpsl
lock
inc
scas
and
sub
sbb
cld
mov
mov
push
pusha
push
mov
xor
cmpl
fimuls
aaa
cmova
data16
pushf
aad
hlt
popf
push
sbb
stos
leave
dec
jne
and
js
or
movsb
aam
pop
jg
jmp
daa
scas
outsb
jp
rcr
adc
or
int
scas
or
sbb
aaa
add
arpl
and
popf
pop
sub
jp
jp
ret
mov
xor
leave
out
clc
out
bound
pop
add
cmp
inc
out
sub
inc
lea
xor
out
inc
mov
sbb
jo
call
mov
adc
lods
testb
adc
mov
push
xor
sbb
aaa
mov
mov
cli
cmpsl
xor
sub
adc
fistps
in
out
add
cmpsb
mov
mov
in
mov
jno
andb
add
cmp
sub
jmp
adc
lcall
in
call
adc
push
stos
das
aas
inc
lahf
stos
jle
cmpsl
mov
adc
jecxz
push
mov
adcl
popl
fstpl
popa
push
push
jmp
cld
lret
jg
mov
pushf
es
rcrl
mov
je
xor
scas
cmp
idivl
cmovnp
inc
dec
leave
les
loop
xchg
jb
call
es
int3
das
lds
jl
sub
clc
fsubrs
sbb
xchg
shlb
jne
ljmp
fcomps
dec
aad
cmp
inc
mov
jo
outsb
repz
ret
ror
adc
mov
iret
ja
dec
add
das
adc
inc
jo
inc
pusha
call
ss
mov
xor
ret
adc
xchg
cmp
int
jno
mov
jge
bswap
imul
adc
mov
scas
or
pop
sub
in
std
dec
push
mov
fwait
push
xor
cli
mov
aam
outsl
mov
adc
loope
repz
inc
or
and
outsl
dec
xor
sbb
les
dec
addr16
mov
outsl
mov
cmp
pushf
jg
jge
lods
cwtl
jle
sub
jecxz
ljmp
jno
fwait
pop
inc
out
xlat
mov
and
cmp
int3
adc
iret
dec
fchs
rorb
lea
popf
int
push
fucomi
lods
jecxz
lods
inc
jbe
in
rorb
test
push
js
ljmp
pusha
mov
mov
mov
adc
xor
ror
jae
push
and
shll
mov
rclb
mov
sbb
lcall
mov
mov
lret
add
push
lret
in
test
or
in
adc
inc
nop
xchg
ss
outsl
popa
mov
mov
push
mov
lods
dec
adc
cltd
jne
inc
mov
in
shrl
outsb
xchg
popf
int
adc
scas
ja
cmp
push
int
jo
and
fdivr
popf
sub
cmpsb
int3
cmc
mov
popf
call
inc
push
jl
jmp
in
pop
or
mov
out
cmp
sub
inc
sub
movsb
mov
gs
popf
adc
adc
jae
test
adc
or
xchg
pop
push
clc
cmp
sbb
pop
sub
mov
mov
loopne
xchg
adcl
sti
scas
xlat
add
enter
xchg
out
cltd
lds
inc
mov
mov
and
pop
psubsw
scas
xchg
std
repz
movsb
sub
sbb
xlat
mov
mov
fwait
test
dec
pop
int3
ja
adc
jmp
add
push
add
mov
je
add
mov
xor
sbb
adc
and
leave
sub
jl
push
notb
mov
adc
mov
fsubl
stos
fisubrs
mov
test
inc
pop
ror
int3
push
sbb
dec
je
es
mov
or
roll
leave
jnp
aaa
mov
shll
and
movsl
scas
inc
repnz
aad
test
lahf
fidivrs
adc
in
aam
outsb
call
adc
gs
jo
ss
repnz
jnp
sbb
sbb
das
add
lahf
mov
lods
les
sub
cmp
lcall
loope
out
daa
dec
popf
mov
sahf
adc
pop
mov
fisubl
mov
inc
cmp
mov
leave
je
or
addr16
addr16
out
mov
dec
fs
das
and
push
push
sbb
jge
stc
xchg
push
aad
mov
rolb
insb
jl
cwtl
and
pop
hlt
scas
std
jl
aam
mov
jg
mov
loop
mov
sub
jle
add
push
das
gs
jo,pt
push
push
sbb
mov
xchg
sub
or
mov
pushw
iret
cmc
cmpsb
out
pop
add
inc
cmp
adc
jns
push
and
mov
idiv
mov
enter
lcall
loop
cmp
aam
std
int3
les
mov
imul
popf
inc
je
out
sbb
rcl
imul
mov
repz
fistpll
cmp
dec
aas
adc
divb
fadds
int
cmp
adc
mov
fisubrl
shll
jecxz
mov
out
andl
ds
mov
jne
cmp
cld
bswap
dec
dec
icebp
mov
mov
jp
jp
pop
leave
inc
out
sahf
jge
and
or
inc
mov
dec
cld
stos
sbb
shrb
jo
es
adc
mov
frstor
xchg
jp
dec
loop
xchg
std
shrl
mov
push
cmp
out
lock
outsb
push
mov
dec
mov
xchg
call
xchg
lock
mov
sbb
dec
push
mov
jp
ss
je
or
jmp
fists
pop
je
stc
mov
mov
mov
negb
mov
loopne
stc
repnz
ja
mov
xor
lcall
dec
ds
loopne
jp
xchg
in
data16
nop
into
jp
pushf
xor
pushf
cmp
imulb
and
scas
and
pop
fmuls
arpl
lea
ds
mov
jnp
pop
out
mov
into
loopne
xchg
sbb
outsl
add
fwait
sub
repnz
mov
xchg
cmovp
jno
shlb
cmc
loop
dec
xor
xor
inc
ret
add
pushf
outsl
shl
push
pusha
fucomi
popf
inc
cmp
arpl
jecxz
js
pushf
insl
fbld
cmp
sti
cmpl
mov
jg
add
adc
inc
inc
sub
fbstp
andb
push
call
and
inc
lahf
sub
mov
je
jp
fs
jne
or
mov
pop
imul
clc
aas
dec
stc
hlt
enter
xor
imul
out
das
dec
lahf
ljmp
shll
xorb
jo
das
in
lock
push
jae
loop
mov
xor
push
mov
je
je
pusha
mov
mov
dec
xor
cltd
add
aam
jp
cmp
xor
adc
mov
add
dec
dec
sub
popf
out
push
scas
bnd
gs
mov
jle
xor
vcvtsi2ssl
mov
stc
test
mov
dec
lahf
xchg
ret
je
xchg
push
mov
ljmp
in
pushf
lret
pop
out
sub
lds
jo
fwait
cmpsb
loopne
sub
xchg
data16
inc
je
pop
cmpsb
sbb
xor
pop
std
fsqrt
adcb
sbb
add
insb
imul
in
scas
mul
sub
pop
negb
cmp
mov
ds
jl
sub
mov
push
test
cld
jae
psrlw
enter
jmp
lods
arpl
leave
adc
inc
mov
xchg
movsl
cmpl
add
mov
andb
imul
xor
and
ret
inc
gs
mov
in
or
out
push
repz
fwait
rcl
and
stos
in
shrb
cmc
gs
jmp
int3
pop
mov
enter
loop
fldt
jbe
mov
push
pop
jle
push
mov
imul
jl
jo
push
jo
and
jmp
sbb
adc
jmp
imul
pop
push
aas
jp
ficoml
cmc
outsb
fisubs
or
dec
push
add
lret
mov
jp
jno
dec
pop
jno
fdivp
inc
xchg
push
fcoml
mov
mov
pop
stos
cmc
cmp
test
sar
inc
stos
jns
dec
adc
dec
jne
ret
and
and
stc
add
imulb
dec
xor
mov
sbb
xor
xor
arpl
fwait
jecxz
fxch
scas
js
sub
lock
int3
sub
pop
int3
stos
data16
and
jecxz
pop
je
dec
pop
mov
stos
push
pop
mov
mov
test
xor
hlt
fs
push
sbb
ss
xchg
mov
pop
push
inc
repnz
out
ljmp
scas
sahf
clc
inc
or
aaa
sub
pop
mov
xor
mov
shll
and
and
inc
not
fwait
pusha
xor
cld
jne
sti
stc
shlb
leave
mov
and
pop
sub
fdiv
subl
pusha
ja
cmp
xor
fldpi
test
aad
add
pop
adc
and
sahf
jp
aad
pop
mov
cmp
je
xchg
call
mov
inc
push
lret
sub
fcompl
cwtl
lahf
fsubl
rorl
idiv
dec
ds
xchg
pusha
push
shlb
mul
inc
lods
sub
arpl
imul
push
jae
rclb
sub
mov
push
mov
xor
insb
lods
js
and
push
push
sarb
mov
test
aad
mov
ja
mov
bnd
pop
shll
cmp
je
out
push
fisttpl
or
push
ret
push
push
fs
xor
mov
sub
xor
shlb
mov
aam
jb
test
adc
jo
addr16
cmpsl
dec
xor
mov
add
movsl
jno
div
cmp
mov
fiaddl
out
out
sub
mov
lock
ret
xor
fwait
xchg
add
shrl
repnz
pop
jne
xor
test
xchg
cmp
ja
jbe
mov
sub
sub
xchg
pop
sub
jne
jecxz
inc
cmpsb
fiaddl
xchg
sti
negb
cld
cli
mov
fimull
push
fstpt
and
push
sub
test
icebp
nop
test
dec
outsb
insb
or
xchg
push
xchg
xor
shrb
push
jnp
dec
inc
ss
or
jnp
pop
insb
adc
dec
cmp
fistpll
popa
sub
push
mov
adc
data16
arpl
xlat
adc
xor
sbb
dec
pop
mov
mov
out
inc
cli
iret
rcrl
lret
mov
pusha
in
sti
sbb
ljmp
hlt
mov
pushf
fimuls
mov
fcmovbe
cmc
sahf
jge
and
mov
loop
jne
daa
int
ror
adc
fdivrl
imul
shlb
jge
hlt
fwait
aas
fiadds
xchg
push
xchg
out
das
out
cmp
jmp
and
and
adc
dec
xchg
fbld
sub
mov
iret
push
dec
andb
ret
jbe
lahf
stc
mov
cmp
xor
iret
popa
filds
inc
imul
arpl
mov
mov
push
or
xchg
test
iret
fsubrs
jle
stos
outsb
adc
lcall
mov
ljmp
xor
sbb
repnz
outsb
jb
cmp
mov
int
stos
les
pusha
sub
jecxz
mov
xor
subb
xor
scas
loop
out
push
lds
scas
xor
xorl
and
xchg
mov
ljmp
add
xor
xchg
push
sbb
shll
push
call
add
add
scas
arpl
ret
lret
dec
xchg
jle
lea
gs
and
loope
loopne
negl
add
inc
aaa
add
add
imul
mov
into
and
mov
dec
insl
in
lods
das
rcrb
cmp
push
mov
jge
roll
fwait
mov
cmp
cmpsl
mov
dec
lods
mov
mov
ret
xor
push
jns
clc
ret
sbbb
jo
mov
xchg
stos
and
lods
cmp
movsl
pop
jbe
and
popf
cmp
xor
sub
dec
pop
sahf
xor
mov
in
in
int
sbb
in
inc
cmp
mov
bound
jecxz
sbb
insb
adc
xchg
xor
leave
fwait
cltd
ret
lock
adc
push
repnz
ss
sbb
test
es
xor
hlt
aam
ss
mov
rolb
mov
dec
pop
sbb
xchg
cmpl
pop
sarb
xor
cmp
cwtl
stos
imul
sbb
ficompl
cmp
xor
adc
dec
out
orl
popf
mov
dec
xchg
pushf
addr16
xchg
inc
pop
mov
sbb
test
and
dec
subl
jae
push
arpl
mov
cmpsb
inc
cmp
mov
iret
rclb
dec
cmp
ja
pop
rorl
mov
lds
icebp
rorb
loope
xor
scas
mov
sub
mov
adc
inc
dec
inc
or
fs
mov
jae
call
outsb
cld
push
fistps
jle
xor
addl
cmp
mov
sbb
into
jne
jl
jbe
lods
ret
xor
mov
pop
ss
out
rclb
adc
stc
ss
dec
push
jno
mov
scas
mov
loop
aaa
dec
lret
add
lahf
mov
jns
insb
mov
in
sub
dec
outsl
push
popl
dec
or
mov
mov
mov
fsubrl
push
mov
in
ss
jge
or
xchg
faddl
mov
shll
cmc
and
xchg
hlt
add
arpl
mov
sbb
or
adc
loope
jp
mov
imull
dec
imul
pop
fildl
pop
mov
xchg
cmp
pop
pop
mov
outsb
mov
jne
sbb
mov
mov
cli
sbb
icebp
shr
outsl
or
cli
insb
push
push
or
in
and
cmp
cld
sarl
push
mov
inc
sub
test
push
jbe
xchg
fmul
mov
or
lds
sbb
xlat
movsl
out
pop
and
sub
push
shlb
repz
pop
cmpsl
push
mov
push
loopne
mov
and
mov
xor
adc
addb
pop
fst
stos
pop
mov
sbb
jns
pop
fadd
or
js
inc
cld
fs
fwait
xchg
mov
leave
subl
test
xor
push
mov
mov
mov
add
push
xor
lcall
xor
mov
out
jbe
jb
mov
mov
xchg
jmp
sub
fists
mov
push
leave
push
sbb
lret
adc
js
aam
popa
pushf
mov
jb
addr16
mov
pop
sahf
mov
lds
cli
xor
jb
outsb
inc
dec
in
sub
add
daa
in
lahf
or
jae
cmpsl
push
fwait
sub
jge
lea
aas
cli
outsl
pop
repnz
lods
mov
jnp
enter
pop
fisubs
jecxz
into
aad
test
mov
sbb
test
pop
popa
mov
or
scas
shll
sbb
popf
adc
and
sahf
test
stos
or
mov
jo
repnz
jno
pop
int3
test
subl
sbb
sahf
leave
fadd
pop
movsl
adc
pushf
inc
in
lods
in
hlt
pop
popf
mov
pop
repnz
push
pop
dec
cmp
arpl
sahf
les
sysexit
mov
fistps
mov
xorb
ffree
movsb
pop
and
shrl
pop
popf
jmp
xchg
into
sub
stos
sbb
mov
sub
inc
jp
push
pop
or
lret
mov
int
les
popf
ffreep
lcall
ret
insl
inc
mov
cmp
pusha
lcall
xchg
jno
ret
jp
mov
inc
sbb
cltd
adcb
outsb
cmp
cmp
ljmp
arpl
nop
push
xor
loop
lds
inc
add
lret
push
lahf
add
sbb
into
cmp
adc
aas
das
je
dec
out
mov
fsubs
add
push
test
dec
adc
xlat
je
add
lods
push
add
jbe
jno
sub
fildll
test
sbb
sub
or
sub
xchg
lcall
pop
fsubrp
jbe
add
cmpsb
mov
scas
jp,pt
pop
adcb
sbb
or
arpl
out
pop
sbb
xchg
mov
cmp
sti
js
mov
mov
xor
aaa
xchg
xor
mov
aas
jecxz
xor
cltd
stos
roll
fidivrs
dec
imul
cmpsb
or
push
cwtl
repz
pop
ss
inc
pusha
sub
or
fidivrs
int
out
xchg
pop
movsb
out
pop
out
out
dec
cld
stos
sbb
insb
stos
std
in
fidivl
inc
mov
out
daa
sbb
mov
int3
and
movsb
jmp
cli
sbb
and
inc
rcll
clc
rcrb
sub
addr16
lods
add
sbb
or
dec
popf
mov
stos
arpl
popf
inc
jne
fldl
cwtl
mov
shrl
xchg
ds
jmp
mov
pop
lret
aaa
cmp
and
mov
icebp
ret
sbb
adc
xor
iret
arpl
enter
sbb
xchg
mov
push
stc
mov
popf
xor
sub
std
push
lcall
test
stos
lods
sarl
ffreep
sub
dec
jg
adc
cld
daa
jo
jmp
adc
push
je
jg
cwtl
jl
inc
inc
aas
and
cmp
stc
cld
fiadds
mov
pop
push
and
push
jg
ljmp
pop
inc
inc
add
cmpsb
xchg
insb
inc
mov
mov
scas
pop
stc
sbb
jg
mov
mov
or
jo
mov
fs
jo
mov
lret
popf
jb
sub
clc
push
mov
mov
scas
fsubrs
xor
pop
xor
out
pop
xchg
cmc
pop
mov
inc
mov
sub
jb
xchg
cmpl
dec
xor
add
pop
cmp
adc
stos
xchg
ds
push
or
mov
push
dec
insl
adc
push
mov
or
hlt
icebp
sbb
sub
jge
shlb
and
mov
negl
adc
int3
int3
mulb
lcall
imul
mov
or
cmpsb
cld
fcmovu
les
cmp
cmpsl
mov
xchg
or
add
sahf
leave
xchg
jg
adc
add
cld
sub
and
and
inc
mov
dec
mov
loop
dec
cmp
adc
pop
fsts
push
sbb
push
sub
outsb
xor
in
movsb
in
subb
push
lods
or
inc
push
jecxz
popa
iret
mov
inc
fists
sahf
cmp
cmp
insl
mov
sbbb
xchg
scas
push
cmp
mov
clc
mov
hlt
call
mov
orl
push
mov
inc
cmp
xor
pop
lahf
cmp
jns
inc
and
jne
repnz
stos
and
pop
cmp
jbe
xchg
in
jo
insb
cmp
xor
out
sub
loop
fdiv
enter
jnp
push
out
into
mov
bound
lods
fdivr
sub
push
mov
cmpsl
fnsave
fdiv
popa
jb
stos
push
xchg
dec
inc
out
pop
stc
or
jne
out
movsl
roll
ljmp
mov
cmovo
xchg
ja
sub
std
xchg
inc
test
xor
cltd
jne
out
out
ja
adc
cli
aaa
dec
lods
adc
mov
jnp
jmp
dec
cmp
ficoms
sbbl
fbstp
mov
push
loope
out
jecxz
sub
jb
cmp
cmp
adc
or
pop
out
jae
dec
in
ljmp
shl
mov
rorl
mov
lcall
in
mov
cld
lahf
adc
sarl
push
lods
je
sub
cld
and
out
xchg
lret
icebp
jp
add
fistps
sub
addr16
jmp
or
and
jmp
and
int3
and
xor
mov
push
pop
mov
cmp
mov
insb
in
insb
out
das
repz
xchg
jmp
adc
enter
push
cmp
cld
dec
outsb
inc
pop
cmp
mov
fisubrl
aad
mov
dec
adc
dec
push
pop
test
push
or
mov
pusha
xlat
and
nop
jo
pop
pop
out
subl
mov
sbb
pop
adc
jecxz
inc
pusha
clc
pop
xchg
xlat
rorb
xchg
lds
movb
and
test
mov
mov
mov
call
or
xchg
lret
add
rcrl
out
fisubl
lods
lds
pop
mov
test
fldl
cmp
push
cmc
cmp
mov
inc
xlat
mov
pop
or
mov
jbe
fnstenv
add
jnp
or
fs
xchg
cwtl
jle
imul
mov
adc
pop
in
fstpl
mov
repz
jge
cmpxchg
hlt
xor
loopne
xchg
jle
pop
mov
loopne
loop
daa
dec
lods
cmpsl
scas
cmp
ja
cmp
fsubs
jmp
cmc
popf
add
fisttps
mov
stos
sub
lret
dec
adc
cmp
lds
xlat
shr
mov
fsts
shl
mov
mov
xchg
push
mov
sub
mov
fnop
in
mov
sub
push
test
movsb
out
jge
sub
xchg
jge
add
out
pop
inc
push
jle
icebp
cmp
rolb
mov
outsl
xlat
push
jl
lret
cmp
inc
imulb
dec
shl
jns
nop
mov
and
push
shl
int
sbb
pop
dec
pop
sbb
es
repnz
rorl
jle
add
fistl
push
shll
lods
sarb
pop
fwait
dec
or
push
and
aam
cwtl
and
jmp
ljmp
inc
movsl
xchg
outsl
out
jae
dec
fcom
sbb
add
pusha
hlt
ss
fidivs
xor
neg
cmp
bound
pop
imul
jno
hlt
sbb
sub
mov
add
xor
test
test
dec
jnp
popa
pop
into
mov
xchg
std
pop
stos
xchg
scas
push
movsl
cs
pop
loopne
adc
fmul
not
pop
pmulhuw
mov
mov
cmp
ss
mov
imul
scas
add
or
adc
sub
cwtl
xchg
jmp
cwtl
or
out
sti
pop
adc
pop
push
pusha
mov
cmp
xor
dec
jp
mull
in
push
data16
stos
inc
out
sbb
test
shll
dec
push
mov
jl
dec
data16
xor
stc
sub
jge
psubw
test
bound
mov
std
dec
cld
insb
dec
test
setb
xor
mov
insl
cmp
std
sbb
mov
icebp
jle
std
mov
cmp
sti
or
cltd
xchg
out
stos
xor
jge
in
data16
loop
lds
jb
dec
dec
stos
leave
jns
xchg
insl
std
cmp
ja
enter
es
int
cwtl
dec
scas
pop
pop
push
jge
adc
test
pop
cmp
cwtl
sbb
add
test
add
add
fcoms
or
pop
push
jge
out
add
repnz
test
in
push
push
int
out
int
movsl
aad
fistpll
fnstenv
xchg
sbb
xchg
adc
pop
cmc
in
cmp
push
and
push
sub
aaa
fbld
sbb
mov
cmp
push
fcoml
mov
xchg
gs
sbb
add
xlat
adc
shl
sub
insl
mov
int
ja
lods
enter
fldenv
popf
cmp
lods
jp
lds
pop
sub
leave
adc
sbbl
dec
aad
dec
cli
inc
sub
pop
jns
mov
sbb
andl
pushf
xchg
cmc
shl
pop
lea
lock
xorb
int3
xchg
mull
jmp
dec
fdivl
shrl
xor
es
loope
data16
ss
pop
pop
dec
xchg
or
push
movl
mov
rclb
mov
ret
icebp
divb
popa
dec
sub
mov
xor
mov
jnp
sub
adc
inc
sbb
mov
mov
das
push
sub
and
adc
mov
mov
xor
inc
cltd
ficoms
jecxz
or
dec
xor
repz
test
out
xchg
and
mov
inc
mov
stos
mov
mov
pop
jnp
and
js
arpl
and
and
data16
push
leave
dec
outsb
mov
aaa
orl
fwait
push
jno
int
test
adc
jnp
inc
mov
in
jbe
enter
dec
cltd
inc
cs
loopne
add
out
inc
jae
loop
loopne
incl
mov
loop
mov
mov
orb
dec
xchg
xchg
enter
lcall
pop
lea
push
add
push
clc
mov
adc
loope
cmp
lret
ret
in
in
in
push
or
xchg
jge
jae
xchg
sub
mov
mov
loopne
jge
mov
sarb
pop
lret
stc
mov
in
push
xor
xor
out
in
pop
adc
pop
xor
fidivs
or
and
mov
fdivrs
fmuls
pusha
sub
xor
adc
mov
nop
sbb
mov
pop
add
out
cmpsb
push
sbbb
aaa
or
pusha
addr16
push
gs
push
stc
int3
fistl
std
inc
inc
xor
call
or
sub
add
inc
inc
adc
pop
out
sti
icebp
pop
dec
xchg
pop
repz
cwtl
pop
ja
mov
hlt
and
rorl
popf
dec
xchg
test
repz
push
stc
dec
fdivr
cld
xor
or
push
push
call
mov
hlt
sbb
fidivrl
sub
clc
adc
out
or
cmp
repz
rorb
and
sub
fildll
rclb
inc
sbb
int
dec
mov
dec
fistl
scas
mov
pop
xchg
fcoml
inc
lods
pusha
fiaddl
int3
adc
push
dec
sti
adc
jno
xlat
add
outsb
hlt
jae
in
mov
inc
add
cld
mov
in
inc
cs
outsl
inc
inc
pop
adc
popf
repz
and
pusha
pop
push
mov
mov
js
add
ret
adc
ret
xchg
dec
jmp
scas
xor
add
insl
cmpsl
cltd
dec
cs
ds
aad
dec
pop
addr16
sti
push
adc
test
xchg
out
aad
fcoml
aad
mov
aaa
fnstsw
mov
push
mov
into
push
stos
jge
rcr
mov
mov
add
cld
outsb
aas
out
hlt
xor
repz
inc
sub
add
cmpsl
mov
cmc
nop
lahf
out
ja
push
pop
repz
push
dec
popf
shl
cli
cmp
stc
lea
adc
jp
outsb
loopne
in
jae
mov
inc
jae
ss
daa
fimuls
incb
shlb
pop
jne
fldt
and
cmp
outsb
fstl
push
mov
inc
inc
fidivl
in
ret
and
cmc
roll
imul
ret
xchg
repz
stos
jnp
leave
pop
mov
insl
jp
mov
push
cltd
rorl
dec
cmpsb
add
shl
push
xor
aam
pop
out
mov
mov
mov
jne
sub
sub
xchg
je
movsb
mov
hlt
js
mov
jae
fsubs
pop
les
xor
adc
jns
mov
bound
mov
in
aad
xor
lret
jno
ljmp
mov
jb
jl
out
jo
adc
jmp
fpatan
push
mov
ds
cmp
cmp
xlat
fadds
das
movsb
adc
sbb
outsb
es
sarb
add
xchg
jl
lret
clc
stos
jl
cmp
pop
mov
sub
xor
pusha
cmpsl
pop
imul
in
and
pop
shrl
das
xor
mov
sbb
sub
push
sbb
jno
nop
test
es
sub
and
out
imul
ficompl
mov
mov
std
daa
cmp
js
inc
push
add
subb
jle
jmp
shrb
xchg
push
adc
jl
xchg
repnz
pop
dec
js
cs
popa
mov
jge
push
xlat
inc
jno
push
cmp
pop
lds
inc
or
add
sub
repz
inc
faddl
mov
fmull
jmp
loopne
loope
dec
mov
out
jle
cmp
mov
sub
inc
add
dec
hlt
inc
mov
sub
xor
lahf
push
push
movsl
iret
mov
pushf
jp
inc
jecxz
stos
aam
mov
mulb
inc
hlt
sbb
and
mov
mov
jae
call
sbb
and
push
ds
push
test
xchg
sub
daa
and
lret
out
cmpsl
inc
bound
dec
mov
sbb
mov
inc
xor
popf
mov
sub
add
loopne
jnp
mov
sub
add
or
add
or
mov
and
push
and
test
mov
bound
mov
mov
subl
fnstsw
sbb
sbb
ret
roll
sbb
sti
add
sub
mov
push
xchg
int
or
scas
rcrb
js
int
dec
dec
push
xor
push
mov
mov
loop
lret
lea
xchg
rorb
add
loopne
xor
lods
ror
jne
mov
inc
iret
cltd
sub
mov
sbb
push
add
cltd
pushf
mov
cmpsl
jp
or
fnstenv
ljmp
ja
hlt
adc
arpl
cmp
pop
call
shrl
test
xchg
jbe
jae
and
fs
mov
lods
lds
dec
or
in
push
xor
lret
sbb
pop
cmp
cmp
clc
jne
pop
scas
int3
pop
nop
addr16
insl
dec
flds
xor
fcmovb
cli
sub
inc
out
or
mov
jmp
xchg
stc
or
fs
rcll
imul
sub
sub
cmpb
xor
je
mov
das
mov
out
dec
and
rcl
inc
faddl
aam
fisubl
cld
push
xchg
mov
jbe
mov
add
and
mov
xchg
cmpsl
push
addr16
add
sub
xchg
cmpsb
insl
pop
inc
cmp
add
xchg
pop
inc
rolb
pop
orl
cwtl
adc
cs
aam
inc
sbb
mov
in
repnz
cmpsl
jns
cmp
ljmp
lods
in
push
mov
or
sbb
xchg
ret
pop
jp
lcall
lods
lret
negl
inc
push
daa
push
pop
jge
and
cltd
jns
jo
mov
cmpsb
data16
pop
mov
loop
xchg
xchg
sbb
std
insl
push
dec
jns
lahf
push
push
sti
mov
jno
out
out
int
subl
loop
lds
dec
sbb
stos
cld
mov
enter
in
xchg
negl
cli
ret
and
dec
mov
stos
aad
add
sub
and
jle
mov
mov
xchg
outsb
test
adc
jmp
pop
jno
adc
cmp
orl
jp
and
outsl
and
outsb
or
in
xor
cmc
in
or
sbb
popa
sbb
cwtl
cmpsb
out
shl
enter
fisubrl
and
test
mov
push
mov
std
pop
sar
mov
lods
push
pop
jne
test
mov
dec
sbb
in
jo
fadds
push
jp
xchg
push
mov
loopne
shrl
or
inc
push
dec
nop
mov
and
scas
fnstsw
cmp
adc
or
mov
jg
pop
add
and
popa
hlt
dec
pop
test
sbb
sub
or
inc
xor
mov
pop
mov
inc
stc
sbb
jmp
sub
cmp
scas
adc
hlt
jg
xchg
pop
outsl
mov
push
or
or
sbb
pop
ds
mov
push
cmp
dec
repnz
gs
sub
xchg
push
xchg
outsl
shrb
lcall
popf
push
push
pop
call
sbb
pop
jl
push
clts
and
or
mov
pop
push
cmovp
xor
add
push
das
mov
jmp
xor
jno
ja
cmp
or
cltd
test
pop
cmp
lret
aaa
add
mov
cwtl
loop
outsl
add
add
mov
inc
in
test
lea
jge
in
sub
sbb
rcrb
sbb
vhsubpd
aaa
push
subl
mov
shl
lret
inc
loop
outsl
out
jmp
mov
and
mulps
sbb
mov
or
lods
push
aaa
push
jns
ret
and
mov
shl
sbb
aad
cmpb
popf
loop
out
dec
dec
les
pop
push
dec
imul
sbb
xor
gs
jmp
mov
dec
cmpsb
scas
mov
xor
sarb
jge
mov
adcb
cmp
add
je
dec
repnz
sbbb
popa
shlb
push
pusha
push
and
push
xor
sbb
arpl
cmp
cmp
inc
in
mov
push
sbb
adc
call
dec
testb
cmp
inc
out
mov
lea
mov
arpl
mov
push
lods
cmpsl
sub
xchg
push
cld
jg
mov
rorl
and
fisttpll
push
movsl
fsubrp
pop
mov
pop
inc
aas
repz
lea
add
jge
jno
push
xchg
add
dec
addr16
mov
clc
inc
and
enter
jp
andl
aas
mov
insb
jecxz
cwtl
jl,pn
mov
adc
jmp
aam
loope
into
stos
push
xor
dec
cli
push
push
lret
xor
sub
mov
inc
xchg
push
sahf
in
int3
out
pop
jo
xorb
decl
xor
lods
add
js
xor
dec
cmpsb
outsb
jecxz
stos
mov
mov
enter
test
mov
mov
ja
pop
andb
sbb
dec
repz
xor
xor
mov
inc
or
lods
push
popa
push
sbb
pop
jno
iret
xchg
push
pop
mov
sub
or
loop
movsb
hlt
lret
pop
sub
and
jns
stc
xor
call
lcall
lret
rdtsc
lret
shll
pop
jmp
shlb
mov
faddp
dec
sbb
adc
ficoml
push
xor
cmpsl
idivb
in
adc
xchg
mov
repnz
test
bound
jae
les
or
cld
aaa
jg
std
dec
xchg
daa
or
xchg
pop
repz
mov
push
jno
mov
xor
ds
jb
loop
pop
push
mov
cmpsl
pop
inc
imull
jmp
xchg
add
and
pop
xchg
fwait
data16
int
fidivrl
ss
lret
out
test
mov
pop
mov
pop
fistl
jmp
dec
add
xor
pop
mov
dec
mov
mov
mov
mov
leave
sahf
mov
push
rcrb
inc
cld
lods
mov
test
fcmovbe
stos
inc
inc
pop
int3
cs
idivb
out
nop
cli
jno
jnp
sbb
jp
xor
sbb
pop
ljmp
loop
dec
add
mov
ds
lret
dec
xchg
add
mov
add
pop
leave
test
lcall
enter
inc
and
repnz
jbe
neg
fisubrs
insb
stos
dec
push
dec
loope
cmp
adc
jo
xor
mov
stos
mov
das
fs
in
pop
mov
mov
sbb
pop
je
daa
movsl
je
movsl
imul
les
in
rcrb
insb
sbb
loopne
shlb
in
aas
push
out
jae
mov
adc
shr
enter
or
lret
dec
ficoml
in
sub
mov
leave
fdivs
ds
cmp
cmp
xor
xor
fs
xor
push
rcrb
test
cmpsb
das
stos
ja
adc
push
inc
adc
sar
out
add
je
jmp
xor
add
lret
gs
cmp
mov
or
push
adc
movsl
sarb
push
xlat
push
imul
mov
hlt
mov
in
shlb
cmp
xchg
into
loopne
mov
add
add
xor
mov
cmp
scas
movsb
pushf
arpl
mov
imull
out
or
jle
lock
ret
inc
in
icebp
sub
test
mov
dec
jl
or
out
dec
ljmp
adc
stos
sahf
loopne
pop
jbe
cmp
nop
sub
jns
lret
jl
mov
dec
jb
pop
mov
push
dec
dec
sub
or
ss
dec
pop
jbe
xchg
outsb
inc
imul
fsts
add
adc
call
test
jmp
or
mov
loopne
dec
orl
xchg
mov
adc
pop
data16
sub
inc
sub
mov
cmp
out
lods
add
daa
out
xchg
clc
cli
cmpsb
in
push
xchg
mov
push
or
xor
or
jb
mov
mov
xchg
outsl
cmp
cmp
jo
notb
dec
push
ret
push
mov
mov
mov
out
jl
shll
shlb
rolb
xchg
test
fadds
inc
stos
test
push
fwait
rclb
xchg
inc
cmp
sub
cmp
mov
mov
je
adc
mov
push
jnp
sub
push
outsb
mov
outsb
sub
lds
inc
pop
jg
lret
xchg
cmpsb
in
fdivrl
aad
je
icebp
sbb
dec
lahf
das
xor
mov
or
or
ret
jge
sbb
fidivs
cmpl
mov
out
sbb
idivl
add
jmp
xor
jge
mov
mov
sar
ficoms
cmp
aam
inc
dec
pop
arpl
lea
adc
out
loope
lahf
pop
inc
dec
push
add
xor
in
jmp
adc
dec
call
loop
adc
imul
addl
mov
push
xlat
int3
xchg
dec
inc
xor
xchg
repz
fistpll
xor
push
int3
or
xchg
inc
dec
iret
lock
cmc
jbe
popa
popa
mov
dec
stos
jp
xchg
sbb
push
or
out
push
jbe
lods
testl
mov
pop
shlb
fimuls
movsb
mov
jbe
lods
in
mov
push
lock
sbb
adc
jp
sbb
ljmp
insb
pop
push
addl
adc
pop
popf
cmp
xchg
fsub
fistpl
inc
adc
inc
nop
mov
fsts
sti
xor
and
out
nop
xchg
or
inc
imul
push
cmpsl
cmp
jne
in
cli
mov
aas
cs
leave
outsl
bound
or
insl
push
into
cmpsb
mov
jecxz
add
popa
dec
cld
cmpsl
movsb
cld
mov
call
mov
xor
dec
fists
cmpsl
scas
mov
aad
test
mov
dec
add
pop
dec
inc
xchg
and
shl
bound
pop
inc
test
jno
or
addr16
outsb
mov
test
ljmp
stos
adc
enter
jmp
stos
add
or
adc
inc
sub
jecxz
adc
pop
pop
fldl
out
xor
insl
sbb
jmp
cvtpi2ps
aas
pushf
mov
roll
mov
std
jnp
sti
fcmovne
xchg
and
jno
mov
imul
push
fildll
xor
shl
or
cmp
jl
fimuls
sbb
push
cmp
xor
xchg
or
out
pop
and
sub
xor
adc
pushf
imul
mov
push
mov
push
iret
jmp
mov
jmp
sbb
fidivrs
imul
aad
dec
out
xor
std
pop
mov
pushf
adc
in
cli
jmp
pop
mov
or
sbbb
repnz
inc
loop
sub
xor
in
movsl
dec
out
arpl
test
fwait
or
scas
mov
das
test
add
ret
cltd
les
push
scas
dec
mov
fcoml
dec
dec
jo
xchg
test
jbe
ljmp
push
sub
into
leave
repz
dec
cmpsl
call
cmp
xor
sbb
clc
lock
xchg
sub
rclb
sub
mov
repz
clc
popf
xchg
notl
push
std
ja
push
mov
minps
push
jbe
les
push
fisttpl
pop
scas
mov
and
rorl
mov
out
inc
xchg
jp
sbb
push
jo
xor
sbb
sarb
les
push
lahf
inc
std
loope
xor
pop
sub
outsb
popa
add
inc
stos
aaa
fs
xchg
pop
xlat
pop
aam
sub
mov
insb
xor
push
ljmp
pop
pop
lods
lods
icebp
loopne
rcrl
add
sub
outsl
jno
mov
sub
divl
test
or
bound
ja
jnp
movsl
jmp
stos
lahf
xchg
cld
inc
jno
xchg
subb
iret
ss
lret
into
lret
pop
pop
mov
data16
cmpsb
cltd
in
pop
repnz
cmp
xor
lea
cltd
cltd
sub
cmp
xchg
fdiv
xchg
mov
leave
sub
pop
imul
fists
cld
cmp
add
jecxz
ret
ret
shlb
sub
cmc
sbb
xchg
lods
xor
out
xchg
jl
push
lods
cmp
idivl
roll
mov
mov
divb
push
mov
ljmp
rclb
adc
enter
orl
mov
outsl
xchg
out
pop
fsubs
loope
adcb
test
enter
push
cmp
mov
ljmp
push
sahf
or
fistpll
js
or
ja
test
pusha
jle
push
xor
or
mov
pop
or
push
movsb
or
and
cmp
xor
push
mov
ds
popa
or
fisttps
leave
aas
sti
add
mov
imul
pushf
add
rorl
out
mov
or
and
hlt
pusha
rsqrtps
sbb
sbb
sbb
pusha
jp
push
in
imul
stos
and
pop
xchg
add
mov
jl
insb
pop
imul
jecxz
lods
mov
clc
dec
int
cmp
mov
mov
shlb
je
lcall
sbb
aam
cld
fdivl
test
pop
in
pop
cli
ret
dec
or
mov
out
dec
cs
xor
sub
test
outsb
cmp
les
or
push
add
loop
and
jae
lahf
frstor
sbb
jbe
subb
test
cmp
ja
out
lret
adc
enter
dec
pop
adc
lock
mov
mov
outsl
pop
jecxz
aas
mov
jge
lock
cmp
dec
cmovns
scas
adc
sti
int
je
loopne
mov
loope
je
sub
mov
push
jmp
outsb
push
lods
inc
repz
fdivs
pop
adc
dec
mov
mov
je
mov
jns
out
and
cmc
test
mov
gs
cmp
orb
mov
repnz
out
sbb
inc
mov
and
or
xor
and
sbb
sbb
mov
sbb
mov
jae
and
inc
inc
stc
in
lods
xchg
ficoml
sbbb
fsubl
faddp
xor
fs
adc
adc
jg
insb
int
shr
repnz
lcall
dec
popf
dec
sbb
push
ficompl
test
bound
dec
es
mov
fisubrs
fmul
stc
adc
sarl
sbb
insb
test
in
lret
add
mov
les
pushf
repnz
adc
xchg
sti
xor
test
push
enter
clc
and
cmp
xchg
sbb
pop
sub
aaa
mov
jns
inc
iret
cwtl
inc
xchg
mov
daa
push
inc
bound
divb
mov
shr
lods
inc
push
aaa
je
push
pop
add
fwait
mov
stos
sahf
push
pop
jae
aam
push
mov
cmp
popf
lds
jo
jle
jle
and
pop
inc
out
cmp
cmpsb
or
lock
push
and
ret
xchg
stos
mov
shl
lods
mov
mov
stos
outsl
jge
sub
inc
dec
repnz
cmpsl
repz
push
mov
and
xlat
sbb
gs
xchg
cmp
dec
xor
and
ret
adc
dec
mov
fbstp
mov
mov
sbb
arpl
in
pusha
enter
lods
lret
dec
mov
mov
mov
push
mov
lods
xor
mov
std
loope
lods
fdivp
jg
ja
pusha
cli
mov
rcl
scas
out
sub
cmp
or
decl
push
ss
clc
mov
test
push
xor
adc
xchg
cmp
lcall
nop
daa
push
jnp
jno
lret
inc
pop
lret
jmp
sbbl
call
push
mov
pop
xorb
rol
mov
jns
add
dec
test
push
mov
stos
cltd
dec
xor
adc
jnp
repz
jmp
xor
movsl
dec
inc
mov
ficomps
xchg
popa
insl
popf
adc
fnsave
andb
push
icebp
and
pop
addr16
dec
mov
lret
xchg
clc
cld
or
mov
fisttps
mov
lret
lods
lods
fcomps
shlb
inc
adc
lahf
in
inc
xchg
cmpsl
repz
xchg
fsubr
xchg
in
adc
push
test
or
dec
sub
jl
cmp
fadd
push
pop
mov
arpl
stos
or
es
xchg
sub
andb
movsb
xchg
push
jb
cmp
push
xor
xor
xchg
cmp
push
gs
pop
push
clc
movsb
add
leave
adc
aad
push
jle
lcall
fdivrp
pushf
ss
fstpl
jb
sbb
cltd
mov
pop
jo
and
inc
jbe
ja
mov
insl
imul
jmp
sahf
insl
jmp
cld
fcmovnb
movsb
stc
shrb
mov
sbb
call
test
loopne
cmpsb
dec
mov
cmp
push
std
aad
sbb
lods
and
jp
xchg
cs
movb
dec
xor
out
push
xor
roll
js
stos
and
testb
jns
rorb
jl
loope,pt
shl
aad
gs
subb
jecxz
es
pop
push
sbb
inc
push
jnp
lds
mov
inc
dec
insb
sub
sarb
stos
lods
leave
add
pop
mov
xchg
mov
pushl
jmp
push
outsl
les
mov
jl
mov
sbbl
fcmovnbe
push
sbb
xchg
daa
xor
jb
dec
sub
repz
lahf
pushf
out
add
shlb
ss
test
sub
push
das
ljmp
push
pop
jns
xchg
mov
mov
jp
adc
stos
loopne
xor
fldcw
in
sub
insb
push
push
in
pop
dec
aas
pusha
mov
mov
outsl
xor
jg
pop
and
adc
jmp
in
fiadds
xlat
mov
movsl
push
fisubl
adc
fimull
test
std
dec
sub
loop
mov
pop
stos
inc
and
inc
sbb
insb
jb
or
mov
enter
gs
nop
dec
ja
or
mov
lods
push
xchg
testl
je
test
hlt
sub
sub
add
fstl
test
sub
nop
movl
shlb
jp
loopne
xchg
mov
push
sub
sub
and
push
add
lret
ret
jle
dec
ret
dec
adc
scas
in
adc
adc
jno
mov
mov
jbe
dec
and
pop
mov
out
mov
adc
jmp
pop
popf
cmp
outsb
mov
sbb
out
inc
xchg
loope
outsl
in
imul
add
aad
insl
mov
enter
out
cmpl
or
out
and
and
sub
mov
rclb
ret
pop
shl
fildll
adc
dec
and
dec
ret
mov
adc
xchg
nop
repz
sarl
mov
mov
sub
lds
lret
cmp
inc
cmp
popf
mov
xchg
xchg
mov
jg
repz
pop
xchg
shll
cmp
inc
jb
push
mov
push
mov
les
mov
pop
pop
add
subl
test
ljmp
adc
scas
lcall
iret
mov
mov
and
popf
sahf
mov
jle
xchg
lcall
mov
lahf
sbb
mov
inc
or
enter
arpl
mov
jbe
fldcw
adc
in
cmp
dec
or
dec
or
xchg
fs
dec
mov
push
jge
adc
ljmp
leave
adc
inc
dec
cmpl
jns
outsb
mov
sub
in
movsb
lret
mov
pop
inc
xchg
fadds
fiadds
mov
sbb
iret
cmp
cmp
pop
fcomi
cmp
cltd
iret
std
and
cmp
sub
iret
jle
ss
mov
daa
mov
icebp
xchg
xor
fincstp
je
clc
clc
dec
in
and
aaa
and
lea
test
arpl
xchg
mov
daa
and
mov
pop
in
loop
imul
jbe
out
je
jmp
pop
stos
dec
movb
xorl
in
iret
push
xchg
int
dec
mov
mov
pop
rcr
mov
outsl
cmp
or
fucom
mov
mov
inc
jl
lock
int
imul
jmp
mov
mov
pop
jne
test
adc
into
push
scas
xchg
aas
and
dec
dec
aas
test
push
fnstsw
test
cmp
leave
cmp
push
outsl
aad
sbb
jbe
pop
lea
jecxz
stos
mov
stos
lock
mov
adc
or
mov
repnz
cmp
sti
push
pop
add
nop
cmp
mov
leave
pusha
movsl
imul
subb
push
jle
dec
cmp
inc
pop
in
jne
fstpt
imulb
imul
add
lods
int3
leave
comiss
rol
and
pop
pop
pop
mov
cld
rcrb
mov
cltd
and
js
jg
adc
ret
lock
or
ret
stos
sub
fstpt
or
mov
and
iret
into
out
dec
es
outsl
jecxz
xor
outsl
dec
ss
push
adc
lcall
cmp
push
dec
mov
cmp
inc
push
jbe
enter
xor
jg
dec
sub
sub
orl
jecxz
scas
sub
pop
xchg
jecxz
add
add
mov
fucomp
jo
jl
outsb
sub
push
mov
roll
test
not
and
mov
mov
xlat
shlb
imul
test
ret
push
xor
pop
repz
movsl
xchg
and
add
scas
ret
mov
inc
mov
fstps
fldt
cmpb
or
pushf
xlat
jl
jnp
ds
adc
sub
gs
test
pop
adc
jns
sahf
mov
hlt
imul
and
inc
push
clc
xor
pop
loop
in
jns
lea
and
enter
adc
xor
aam
ja
loopne
mov
mov
jno
in
mov
cmpsb
add
mov
movl
mov
inc
scas
inc
outsb
cmp
push
jmp
sub
movsl
xor
inc
insl
into
mov
xchg
lods
mov
stos
stos
and
xchg
out
inc
ret
xor
pop
lods
testb
mov
loope
std
pop
or
adcl
sahf
aad
mov
pushl
push
ljmp
andb
fwait
push
add
sub
icebp
dec
cmp
sub
jp
or
xor
loop
enter
sub
popf
loop
in
mov
dec
adc
push
add
ror
cld
and
cli
loope
dec
stos
ret
xchg
fwait
adc
ja
loop
in
fisubrl
js
cmpsb
cmpsb
stc
xchg
incl
repz
and
add
outsl
mov
int
mov
add
push
adc
push
cmpsb
stos
xchg
aam
lea
push
and
or
pop
ss
add
out
push
push
aad
insl
lods
add
jnp
jbe
adc
cmpb
arpl
dec
sub
je
cld
mov
ret
adc
data16
das
dec
jl
gs
jnp
dec
mov
lret
test
sbb
cmp
arpl
lods
iret
cmp
push
das
mov
stc
iret
mov
lods
iret
jb
jne
loopne
jno
pop
pop
js
lret
les
inc
icebp
test
xor
push
xor
pop
cwtl
loope
mov
sbb
xor
movsl
pop
inc
orl
pop
mov
sbb
ret
cli
lds
pushf
cmpsl
fxch
movsl
lock
push
mov
fcomip
push
dec
jo
jmp
adc
add
sub
jae
ss
out
pop
cltd
adc
mov
outsb
fwait
pop
inc
into
in
movl
daa
sbbb
out
inc
xor
mov
test
out
jne
dec
xor
xchg
jecxz
xorl
rcll
outsl
jb
aaa
jns
ja
lods
filds
test
xchg
jle
cmp
jb
mov
jge
push
loopne
adc
into
cmp
adc
jle
shrl
xor
push
ret
inc
or
sbb
cmp
mov
inc
mov
pop
sti
xchg
mov
iret
sbb
mov
mov
add
or
xchg
cmpsb
testl
mov
int
sbb
popa
mov
dec
sbb
xchg
xlat
loope
imul
data16
adcl
pop
push
push
and
je
in
xchg
mov
inc
es
and
mov
cmpsl
sarb
adc
cwtl
iret
push
pushf
aad
in
pop
scas
push
sbb
jbe
adc
js
lods
mov
andl
ret
mov
and
mov
data16
jecxz
lods
mov
xlat
repz
leave
aam
inc
stos
pop
mov
adc
inc
pop
mov
jo
pusha
in
or
repnz
adc
in
decl
shl
jns
scas
jge
xchg
push
adc
cmp
inc
fbstp
push
test
bound
cmc
xor
or
rolb
pusha
into
and
clc
xchg
mov
adc
test
pop
push
jp
sti
shll
out
xchg
aad
subb
insb
sub
pop
lcall
dec
pusha
mov
sub
pop
loop
mov
mov
gs
fwait
sti
mov
push
push
notl
cmpsb
out
and
fcomi
repnz
add
jmp
or
scas
shll
out
insb
daa
xor
stc
movsb
jne
xor
out
lods
xchg
es
inc
rcll
xor
repz
mov
mov
arpl
xchg
jb
jae
xchg
ljmp
xchg
scas
loope
pop
mov
out
mov
pushf
xchg
cld
pop
jmp
outsl
fcmovb
xchg
mov
adc
sbb
xor
daa
push
out
js
loope
cmpsl
mov
out
jno
into
add
sti
pop
aam
scas
lahf
fisubl
test
cmc
cli
daa
cmp
in
popa
sbb
sarl
cmp
xchg
mov
xor
dec
jns
cli
mov
adc
xchg
cmp
mov
and
mov
ret
loope
sub
mov
clc
xchg
insb
xorl
mov
lods
mov
push
and
or
inc
mov
je
or
push
fsub
nop
ljmp
loop
or
outsb
sbb
mov
push
lret
iret
cmp
sbb
mov
and
mov
sahf
pop
inc
cmp
mull
outsb
push
adc
sub
sar
sbb
lds
lahf
ficompl
mov
lcall
aaa
inc
xchg
xchg
and
adc
loope
loop
xchg
xchg
pop
mov
ffreep
out
imul
mov
cli
shlb
jo
jl
cmp
cmp
inc
lret
adc
mov
and
jl
cmp
push
dec
mov
mov
mov
ds
cmc
mov
fcoms
fmulp
lock
mov
scas
fdivl
dec
fsubr
pop
add
ja
dec
jnp
js
loop
orb
sub
jbe
aad
fldl
or
mov
dec
test
ds
test
mov
xchg
fxch
dec
mov
sbb
xchg
mov
jnp
jl
lret
xchg
call
jge
mov
sub
mov
mov
xchg
or
lcall
and
sub
dec
scas
lods
inc
mov
bound
and
insl
fdivrs
sub
xchg
inc
decb
mov
and
fldl
xor
rcrl
dec
cmc
sbb
icebp
sbb
stos
icebp
int
js
decb
push
jno
scas
cmpsl
pusha
mov
fnstsw
int
mov
xor
xor
mov
daa
inc
inc
test
cltd
adc
add
jle
xchg
mov
jno
cltd
mov
in
jmp
sub
out
xchg
pop
mov
cmp
add
insl
leave
ljmp
jo
icebp
pop
mov
cmp
mov
daa
fldt
mov
xchg
ja
sub
inc
adc
faddp
bound
push
jg
lods
xchg
cs
mov
outsb
pusha
push
xchg
aaa
pop
push
mov
push
push
xchg
xor
loopne
jle
dec
fsubs
in
push
call
mull
and
mov
adc
notl
inc
aam
xchg
xlat
xchg
les
sarl
xchg
ss
sbb
add
dec
out
sti
inc
push
scas
mov
add
stos
add
cld
rolb
sbb
out
or
in
sbb
fmuls
int3
cli
push
and
iret
lcall
inc
dec
pop
inc
pop
xor
addr16
mov
inc
cs
inc
dec
sbb
dec
stos
jno
movsl
or
pop
mov
pop
jnp
popa
mov
lea
inc
mov
lods
out
sets
cli
aaa
jg
mov
cli
imulb
ja
lahf
dec
inc
movsl
outsl
cmp
mov
enter
add
stc
inc
aad
jno
mov
add
or
xor
daa
xchg
cmp
pop
clc
out
out
lret
jle
dec
pop
nop
jge
imul
push
mov
dec
jge
mov
push
roll
jmp
lods
xchg
inc
lods
notb
and
dec
xor
cmp
stos
rol
pop
pop
lods
daa
mov
mov
push
aaa
subb
scas
lods
cli
mov
push
xor
xchg
aaa
decl
pop
mov
popf
hlt
pushf
mov
pop
roll
adc
fucomi
mov
cmp
push
mov
mov
mov
push
sub
push
adcb
sti
or
jl
mov
and
adc
sbb
cltd
int
xchg
pop
pop
inc
test
xor
cli
sub
pushf
ja
test
push
mov
frstor
mov
add
fucomip
and
negb
jno
adc
fs
out
mov
and
mov
les
inc
cli
pop
push
mov
ljmp
mov
pop
fwait
xchg
dec
int3
mov
push
push
ror
sub
xchg
xchg
fdivrs
push
cld
pop
xchg
stos
mov
jg
popa
sbb
jno
mov
int
pop
xchg
rcr
lock
add
cs
jnp
xlat
cmp
inc
xlat
js
mov
aas
std
popf
call
xchg
pop
or
lods
into
je
das
cli
or
rcrl
aas
jne
out
sti
repz
cmp
stc
lods
jg
pop
pop
push
or
push
enter
rcl
sub
aaa
push
repnz
sbb
insb
adc
mov
add
mov
negl
repnz
push
scas
sbb
sub
sbbl
jnp
fnstsw
jne
dec
mov
mov
nop
jge
mov
inc
adc
and
jle
les
divb
data16
cwtl
gs
icebp
xchg
inc
mov
jb
pusha
mov
push
int
cmp
into
mov
test
mov
xchg
mov
fisubs
fildll
xor
xchg
int
xchg
aam
sbb
sbb
mov
and
mov
dec
push
cmp
por
sbb
push
movsb
add
cs
leave
stos
adc
shrb
xor
scas
fistpll
pop
xor
dec
mov
xchg
data16
inc
jge
and
mov
sbb
lret
mov
add
in
movsb
sbb
push
inc
mov
lea
lock
xchg
mov
or
out
movsb
add
inc
xorl
fisubrl
or
fnsave
jecxz
call
xchg
nop
out
je
lahf
fwait
xor
push
dec
out
sahf
call
mov
sarl
push
adc
aaa
mov
test
add
and
cwtl
sbbl
jno
and
adc
lret
cli
cwtl
movsl
push
int
scas
and
cmpsb
stos
clc
shlb
les
scas
mov
lods
cmp
rolb
adc
add
insl
pop
dec
cmp
sub
xchg
push
jmp
outsl
mov
stc
ret
jge
or
scas
push
subl
jno
clc
icebp
mov
sub
cmp
call
mov
sysexit
or
dec
out
jle,pn
or
dec
stos
mul
bound
mov
es
andl
cwtl
jae
cs
dec
push
mov
push
sub
pop
dec
xor
pop
add
daa
das
loop
jb
cli
ret
movhps
push
pop
data16
cmp
dec
cmpl
push
xor
add
adc
js
push
pop
cmp
outsl
jnp
jge
mov
frstor
test
add
shlb
es
xchg
outsl
mov
sub
mov
or
push
fdivs
cmp
or
in
leave
bound
xor
jo
push
repnz
stos
sub
pop
and
xor
cltd
push
loope
add
and
xchg
sahf
push
cwtl
loop
je
and
or
out
xchg
dec
jge
dec
xchg
add
xor
cmp
dec
popa
jne
xchg
inc
ret
push
mov
mov
mov
cwtl
mov
scas
pop
ret
das
dec
jmp
outsb
xchg
js
pop
cld
aaa
pop
sti
cmpsl
pop
das
push
mov
imul
std
test
dec
stc
xchg
test
imul
push
shrl
insb
xchg
pop
int3
xchg
or
mov
outsb
jg
iret
mov
movsl
scas
and
push
adc
or
out
mov
fsubr
dec
jae
scas
jb
clc
and
or
lret
aaa
dec
dec
jmp
push
jo
inc
inc
adc
lods
jl
sbb
ret
and
ret
shll
xor
inc
add
add
jle
dec
mov
xor
push
push
sub
mov
inc
cld
fldenv
cmp
ret
hlt
jnp
mov
jbe
sub
push
into
fisubl
and
mov
adcl
dec
mov
or
pop
leave
fwait
mov
fs
push
jo
adc
jae
sbb
mov
das
add
mov
or
mov
test
mov
push
and
outsl
lea
pop
adc
out
das
add
xlat
push
push
les
imul
jl
scas
cmpsl
stos
loop
js
jbe
push
loop
out
aad
pop
imul
fildl
cmc
cmp
push
jb
xchg
pop
mov
mov
or
fwait
bound
or
pusha
jno
in
add
cwtl
xor
inc
outsb
dec
cmpb
imul
jno
int3
es
lahf
mov
leave
lods
jae
pop
dec
fiaddl
xchg
xchg
xchg
incl
jle
xchg
lahf
adc
or
mov
sahf
outsb
jle
lods
arpl
insb
jno
pushf
and
cs
push
jo
pop
and
daa
fcompl
dec
cmp
mov
subl
mov
adc
inc
out
stos
cmp
jne
lods
pop
pushf
mov
dec
lods
sti
sahf
add
inc
mov
nop
ds
sub
mov
popa
cwtl
jb
rclb
in
int
out
sub
inc
xchg
cld
lock
cmp
inc
add
xchg
nop
xchg
dec
pop
imulb
xchg
lock
cmp
push
mov
mov
xor
pop
hlt
testl
and
stc
out
imul
mov
rcrb
popf
pop
cltd
mov
inc
inc
sub
outsl
out
inc
dec
dec
fs
enter
int3
dec
or
mov
sbb
xchg
mov
mov
das
xchg
adc
int
aaa
in
mov
cmp
mov
std
sub
stos
mov
out
sar
es
inc
fisubs
add
int3
into
mov
out
fisubrl
pop
iret
es
adc
sub
jmp
je
dec
pop
push
arpl
push
std
and
pop
rcr
sbb
add
mov
and
scas
lock
mov
insb
xchg
shrb
jge
outsb
cmp
adc
call
fildl
mov
push
call
popf
aam
out
loope
push
jae
sbb
loop
fbstp
xor
aas
ficompl
ljmp
stos
and
inc
pop
add
cld
dec
icebp
lret
jnp
icebp
lret
je
clc
pop
push
inc
imulb
and
js
in
mov
shr
xlat
out
pop
sbb
stc
and
push
mov
xchg
imul
or
cmp
cmp
lock
add
mov
call
push
inc
in
rclb
xor
stos
pushf
out
les
arpl
call
loope
inc
jmp
mov
xor
lret
jae
fst
or
orl
and
fs
push
mov
stc
xorl
iret
scas
ret
add
mov
fildll
push
ror
bound
jle
pop
dec
adc
aaa
loop
adc
lea
inc
cld
adc
mov
xchg
stos
xchg
cmp
sub
sbb
adc
xchg
and
pop
lahf
mov
insl
jb
aaa
aad
pop
inc
scas
aad
sbb
or
clc
int3
sub
mov
icebp
sbb
cld
pop
or
push
ljmp
sub
adc
xorl
xchg
add
dec
mov
xor
push
popa
inc
inc
add
movsb
rcll
jo
loope
sub
adcb
push
ficoms
faddp
shll
mov
dec
je
hlt
stos
xor
popf
ljmp
cmp
jne
lret
mov
popa
scas
inc
dec
lea
rcr
enter
jne
aaa
in
pop
xchg
xchg
out
xor
jno
push
dec
jb
dec
popf
cwtl
cmc
sbb
and
in
int
arpl
xchg
push
cmpl
inc
fadds
shrl
outsb
mov
sbb
gs
cltd
or
xchg
std
cmp
outsl
inc
adc
test
std
lret
dec
xor
or
test
lods
fcoms
movsb
adc
or
es
inc
testl
adc
dec
inc
pop
mov
and
adc
sub
outsb
mov
arpl
pop
daa
repz
sahf
in
aam
movsl
mov
mov
push
aas
js
insl
nop
out
ret
dec
inc
in
lods
jne
flds
ja
popf
enter
aad
hlt
xor
jle
jge
xor
xor
and
mov
push
idiv
inc
lods
in
cltd
push
sub
lds
and
mov
xor
or
sbb
cmc
das
test
test
adc
adc
jmp
arpl
in
movsl
jae
xchg
loope
add
dec
cmpsb
gs
leave
push
sub
xchg
stos
or
sar
aaa
daa
sahf
pop
fcompl
call
shlb
or
dec
jne
adc
je
scas
orb
mov
popf
test
stos
mov
rcll
mov
shlb
and
rorl
inc
std
rorb
stos
or
jmp
outsb
add
cmp
sbb
test
xchg
lds
push
test
dec
popf
inc
sbb
in
push
pop
pop
sub
cmpsb
sarb
out
cmp
scas
jae
or
stc
cmp
inc
xchg
aas
cltd
jle
mov
or
in
mov
pop
mov
ja
or
hlt
add
out
xchg
adc
mov
popf
jno
or
mov
inc
push
jmp
pop
ss
loope
push
call
scas
pop
js
aas
mov
inc
test
cmp
cmp
mov
lcall
or
push
fwait
popa
lods
roll
jmp
xchg
push
idivl
adc
sbb
imul
jno
in
shl
sti
dec
popf
pop
movsb
sbb
shlb
ja
scas
clc
cmp
sbb
ret
into
dec
out
bound
sub
je
jge
cwtl
or
test
movsl
lods
mov
sub
sbb
sbb
out
xor
fs
sub
or
or
push
sub
xchg
ret
scas
mov
loopne
cmpsb
rcrl
test
adc
dec
lods
jmp
push
scas
fisubs
add
stos
add
in
stos
out
push
push
xchg
adc
sahf
push
add
pop
xchg
or
ret
icebp
pop
push
cmp
xor
xchg
scas
mov
data16
aam
ja
cltd
imulb
or
push
movsl
insl
sub
jno
shr
or
in
xor
sub
add
jb
testb
call
mov
lcall
ljmp
or
push
mov
cmpsl
nop
subb
mov
and
pusha
adc
cmc
cmp
xchg
aam
push
xor
cli
imul
das
sti
fincstp
pop
das
xchg
leave
clc
insl
int3
xchg
fildl
xchg
rorb
outsb
xor
jg
mov
cmp
in
mov
fstpl
mov
xchg
push
mov
stc
cmpsl
xchg
lock
pop
data16
mov
les
fldt
call
divl
pushf
aaa
jmp
imul
sbb
clc
pop
mov
lret
aaa
mov
jnp
mov
inc
imul
stos
fmull
xor
inc
xor
jnp
pop
in
test
inc
insl
add
mov
shr
xchg
and
sub
mov
ret
shll
pop
pop
out
lret
lea
je
and
pushf
dec
icebp
xchg
stc
sub
jmp
sub
mov
push
pushf
xlat
cmpsb
out
adc
xadd
sbb
or
in
pop
int3
dec
mov
fsubr
xchg
cli
aad
hlt
sahf
push
sub
sbb
jg
xor
cmpsb
out
clc
out
imul
loopne
xlat
jp
arpl
push
jge
push
or
mov
mov
cmp
in
dec
in
into
add
sub
mov
in
mov
out
cmp
cmc
cltd
add
cmp
lods
es
lods
xor
sub
sub
movsb
adc
cmp
or
cli
sti
or
std
les
inc
inc
inc
in
cltd
adc
movsb
sahf
icebp
enter
xchg
or
mov
jnp
push
mov
jle
xor
int3
addr16
jle
stc
sub
imul
dec
inc
jge
pop
movsb
movsb
das
mov
adc
add
je
je
mov
jb
into
cs
mov
xchg
call
add
sarb
idivl
test
pusha
cmp
lock
or
dec
stc
scas
repz
jae
aam
outsb
repz
mov
cwtl
adc
lods
adc
cwtl
mov
sbb
pop
jno
add
into
ds
inc
das
test
dec
xor
dec
clc
hlt
push
or
shlb
pop
cmp
hlt
dec
inc
cld
cmp
push
int3
sbb
xor
push
out
sbb
jle
dec
cmp
ja
mov
and
sti
inc
add
inc
loope
iret
aas
xchg
out
mov
mov
cli
push
or
je
xor
aad
js
shl
fisubrl
sbb
out
xchg
mov
or
fimuls
into
stos
leave
cmc
insl
xchg
pop
sub
xchg
scas
mov
test
pop
xor
icebp
jge
pop
sti
iret
pushf
jno
jecxz
sub
in
jo
or
cmp
inc
push
jo
cmp
cmpsl
or
jle
mov
sbb
les
inc
fdivrp
out
cmpsb
lahf
jns
lods
jne
stos
divb
xor
mov
and
call
xor
into
add
scas
inc
xor
adc
lret
push
pop
subb
or
fdivrp
push
addr16
ja
test
call
push
pop
rcr
mov
add
mov
cmp
push
std
dec
and
cmpsb
jge
xor
sti
sbb
dec
rorb
lahf
add
cmpsb
push
push
dec
rolb
xor
adc
int3
cwtl
add
movsb
or
fcmovb
add
xchg
jmp
cltd
into
mov
addr16
test
mov
mov
xchg
lcall
cmp
mov
xor
xchg
orb
cmp
mov
inc
imul
and
lods
repz
popa
mov
mov
jb
mov
and
adc
and
or
lods
xchg
nop
or
jl
mov
mov
jne
and
pop
jle
pop
mov
xorb
cltd
std
outsl
es
xorb
cmp
insl
sbb
shr
dec
out
push
add
jl
jnp
fdivr
pusha
bound
adc
das
jns
fcmovnbe
mov
sbb
outsb
jle
xchg
fwait
push
and
fsubl
outsl
into
dec
sahf
jge
das
pop
add
mov
jnp
jbe
xchg
cli
fdivl
bound
mov
ja
test
mov
arpl
dec
outsb
sahf
sar
jp
mov
mov
sti
inc
add
or
stos
sarb
mov
std
mov
push
sub
inc
mov
sub
xchg
lods
outsl
jne
dec
push
sbb
loope
inc
scas
jg
sub
int
jnp
pusha
cwtl
in
add
mov
pop
push
add
insl
jg
pop
inc
notb
xor
stos
pop
ja
mov
inc
inc
pusha
inc
stos
jb
out
sbb
dec
icebp
in
jae
jle
jle
imul
mov
subl
or
mov
xchg
sti
dec
mov
jmp
push
mov
xor
mov
scas
jge
sbb
jmp
xchg
mov
add
movsl
shlb
sarb
call
dec
ja
icebp
lods
rcl
ret
shl
lcall
cwtl
scas
or
jne
jns
or
jnp
jp
pop
xchg
andb
cltd
cld
rcll
stc
ja
test
imul
jl
shll
sbb
in
dec
push
adc
aas
stos
lods
insl
pop
inc
jo
aas
sbb
adcb
ffreep
or
xchg
jle
and
enter
xor
add
add
xchg
and
out
mov
sbb
push
pop
mov
and
aaa
psadbw
jbe
jl
fisttpll
es
sarb
cs
jg
push
or
movsb
jnp
adc
push
add
cmp
pop
divl
xchg
imul
mov
xchg
mov
dec
jb
jmp
fs
ret
lret
xor
or
jns
xchg
push
mov
lock
jb
adc
adc
inc
in
mov
das
cmp
or
enter
hlt
mov
insb
sub
sbb
jp
aad
arpl
lods
decb
jo
xchg
in
xchg
sti
test
mov
sti
cld
xchg
add
cmp
xchg
mov
je
mov
jmp
movsb
pop
int3
mov
inc
sbb
dec
ja
and
mov
in
inc
mov
popl
xor
gs
dec
mov
xchg
sub
mov
add
jbe
push
mov
mov
jo
testl
stos
xor
mov
sbb
repnz
inc
jecxz
push
mov
sbb
sbb
cmp
ficompl
xchg
and
sbb
pop
lahf
fwait
stos
jmp
cmc
jbe
xchg
mov
mov
or
pop
test
bound
pop
mov
push
push
push
shrb
sub
lret
pushf
das
lret
add
fdivrp
std
ja
and
push
adc
iret
xchg
int3
fwait
dec
mov
fcoms
scas
negl
aam
cmc
jp
imul
xor
pop
jo
mov
sti
sbb
cmp
mov
mov
or
fmull
nop
cld
add
push
jmp
test
js
loopne
or
mov
sbb
xchg
outsl
popf
push
mull
call
inc
test
ret
fcoml
xchg
sar
frstor
sub
add
incl
and
out
or
ret
inc
push
xorl
and
mov
mov
frstor
jmp
add
cmc
fadds
lahf
in
adc
and
jne
jge
cmpsl
cmp
mov
lods
sbb
push
rcrl
push
ds
loopne
setle
test
loope
xor
scas
mov
push
enter
mov
mov
fisttps
mov
lods
dec
aad
dec
xchg
out
popa
lcall
scas
mov
and
mov
and
inc
mov
inc
int
out
mov
lret
test
iret
jecxz
push
mov
lock
enter
add
rorl
cmp
loop
call
test
test
jo
xchg
jo
dec
pop
dec
out
jae
inc
dec
and
out
in
test
int
dec
fistl
jae
xchg
inc
sbbl
lock
in
or
and
scas
testl
scas
xor
loop
lea
das
shl
pop
dec
inc
pop
iret
pop
mov
notl
fisttpl
pushf
leave
mov
xchg
and
imul
leave
xchg
insb
sbb
mov
or
fwait
or
into
roll
push
sub
nop
adcb
jae
pushl
pop
dec
mov
push
xor
xchg
iret
push
insl
insl
jo
outsl
inc
inc
push
xlat
jne
inc
pop
jmp
pop
jge
jp
sub
sarb
xchg
lcall
sub
loopne
call
jmp
jae
xchg
or
mov
aaa
rcr
loopne
push
or
shrl
pusha
loopne
out
adc
adc
cltd
add
pop
std
pop
test
fdivrs
xchg
mov
call
pop
pop
test
pop
push
xchg
xlat
jle
mov
imul
imul
dec
out
out
cmpsb
adc
adc
out
mov
and
xlat
popf
out
ret
scas
jo
fcoms
push
mov
mov
fistps
dec
xor
xchg
add
push
cmpsb
scas
ljmp
xor
aad
shl
aas
clc
into
jecxz
cwtl
xchg
and
icebp
mov
dec
mov
jp
pushf
stos
dec
mov
jle
jl
loop
jl
push
rcrb
mov
stc
cmp
jg
mov
int
jmp
cmpsb
or
mov
and
push
jle
push
in
mov
sub
daa
push
cwtl
popa
adc
pusha
cmp
inc
xlat
ret
aam
rcrl
aas
adc
push
lock
add
push
outsb
movsl
xor
pop
dec
repnz
add
mov
hlt
jae
out
ss
aad
and
in
sub
cs
jne
mov
test
adcb
and
xlat
cli
sub
pushf
clc
pop
or
movsl
cs
mov
mov
movsb
sbbb
xchg
push
lahf
or
lcall
cltd
push
cli
or
sahf
pop
mov
dec
push
push
cli
int
cwtl
xchg
in
xchg
ljmp
test
add
pop
mov
popf
int
mov
cld
in
cmp
jmp
push
push
pop
ret
jmp
test
js
push
dec
das
pop
lock
loope
shl
and
cmpsl
push
push
jo
push
jge
dec
xor
dec
jo
leave
shll
scas
movsb
les
les
fldl2e
aas
adc
aas
dec
gs
pop
xchg
cmp
push
pop
push
mov
sub
sub
jb
mov
and
repz
out
pop
xchg
lret
gs
popa
adc
dec
and
and
stos
sub
and
andb
xor
aad
pop
out
les
cmp
mov
sbb
aad
inc
subl
mov
arpl
push
fsubr
cmpl
push
bound
outsb
cmpl
roll
cmp
jg
inc
mov
sub
out
inc
add
sahf
aam
nop
in
scas
mov
mov
sbb
jnp
pop
sub
pop
fstpl
sub
sahf
les
mov
cwtl
into
add
scas
movsb
lcall
push
push
mov
lock
popf
xor
fbld
jecxz
pop
mov
jb
dec
sub
mov
stos
sub
lods
sbb
mov
in
xor
mov
cmp
popa
inc
inc
nop
jp
ret
ljmp
test
push
daa
jno
cwtl
shlb
mov
mov
scas
mov
aaa
dec
or
adc
jecxz
rcrl
scas
xor
mov
call
push
cmpsl
xor
lret
mov
mov
shlb
jne
mov
out
icebp
and
les
xchg
rcr
cltd
ficoml
adc
out
jge
push
xor
jb
or
mov
mov
andb
test
add
ror
sub
cmc
jns
sub
lret
inc
notl
test
mov
and
inc
xor
pop
cmpsb
xor
mov
adc
daa
test
mov
addr16
xchg
fsubrl
mov
sbb
ret
daa
std
or
ret
cmc
push
in
stc
pop
xchg
xor
pusha
ljmp
faddl
push
into
mov
push
jne
dec
les
insl
mov
sub
sbb
dec
fsub
ja
negb
push
loopne
sbb
cli
pop
in
in
movsl
mov
and
jp
mov
mov
lods
ja
add
or
push
xor
imul
jb
cmp
and
lock
jl
sub
data16
push
sbb
or
sub
jb
cmp
les
push
lret
dec
mov
xchg
push
xchg
icebp
lods
ja
shl
add
stos
mov
sbb
xor
jnp
mov
cld
and
inc
inc
hlt
pop
vmwrite
xchg
icebp
hlt
test
lock
or
lods
cmp
pop
cmpsb
inc
call
fwait
scas
sti
xor
inc
mov
js
adc
call
xlat
jb
aad
in
aad
xor
clc
add
xor
cmp
sahf
mov
add
mov
aaa
stos
mov
idivb
mov
bound
dec
test
dec
xchg
out
dec
ret
nop
xchg
call
inc
xor
adc
push
sbb
cmpb
ret
push
mov
add
aad
xchg
rcl
xchg
dec
inc
out
cmp
mov
movsl
lods
sahf
jnp
lea
stos
mov
lods
test
cmp
fcoml
daa
mov
mov
insl
rcll
push
ret
into
xor
pop
mov
adc
push
mov
outsl
dec
cmc
daa
add
cmc
sub
ss
dec
mov
testl
mov
dec
pop
adc
inc
hlt
cli
pusha
mov
stc
rep
mov
mov
aaa
sub
lret
ds
mov
pop
scas
mov
mov
aam
mov
adc
fidivs
adc
mov
pop
or
js
roll
inc
adc
pop
sub
mov
mov
mov
mov
and
mov
lds
or
in
in
out
xor
leave
hlt
lret
push
sub
jbe
popf
es
fs
aaa
repnz
dec
jg
adc
xchg
jge
mov
iret
fcomps
filds
jge
inc
inc
cmpsl
mov
pushf
sbb
dec
pop
popf
and
adc
jnp
cmp
out
pop
mov
push
insb
jmp
lahf
sbb
call
pushf
xchg
adc
push
inc
mov
xchg
mov
insl
jmp
es
std
clc
cmp
leave
jne
xchg
sub
lcall
sbb
imul
mov
sahf
cwtl
and
js
xchg
push
push
and
cs
xchg
inc
leave
xchg
and
add
sti
cmpsl
loop
call
sbb
jo
rcrb
xchg
daa
outsb
iret
fdiv
fadds
xchg
or
inc
push
mov
imul
xchg
lret
dec
fstpl
sub
xchg
mov
es
cmp
mov
pop
inc
sbb
test
inc
icebp
mov
test
ret
jb
push
jnp
sbb
loop,pn
lods
sbb
test
cmp
sbb
mov
mov
dec
loopne
inc
fwait
and
mov
jecxz
sbb
mov
sbb
pop
mov
ret
push
es
call
arpl
sub
jle
paddsw
in
and
ret
les
je
fcoms
mov
cmpsb
enter
rclb
sbb
cmp
dec
mulb
into
jmp
inc
aas
stc
sbbb
pusha
and
inc
popa
mov
movsb
lods
subb
xchg
inc
stc
inc
mov
or
lret
int3
adc
mov
add
mov
lock
pop
xchg
out
cmp
xchg
shr
xlat
mov
sub
mov
jle
inc
lcall
push
ljmp
lods
xchg
jae
xchg
sti
jns
pop
sub
mov
pop
dec
xchg
nop
fneni(8087
out
jb
xor
fisubrs
stos
aaa
mov
gs
insb
jno
rol
mov
jae
push
inc
loopne
cmpsb
lahf
sbb
xchg
call
jnp
out
push
hlt
or
mov
popf
inc
fwait
negl
cmp
jae
into
lods
lcall
and
sub
xchg
ljmp
test
aad
mov
repnz
loope
jmp
insl
sbb
int3
fcmovnbe
dec
fsubs
mov
fwait
shl
and
scas
stos
mov
in
stos
mov
inc
orb
mov
fisubrl
cmp
mov
cwtl
test
in
add
inc
out
lahf
xchg
outsb
pop
or
or
sbb
or
out
das
repnz
mov
pushf
cli
sti
mov
add
jne
mov
or
mov
or
sbb
push
ss
dec
inc
adcl
mov
mov
add
sbb
jl
pop
test
and
mov
push
dec
add
cld
sub
sbb
out
cmp
cmpsl
mov
cmpsl
xchg
fidivs
rorb
enter
rclb
fcoms
loope
mov
insl
xor
adc
insl
inc
adc
divl
sahf
and
gs
cmp
pop
lahf
mov
dec
and
and
push
js
sbb
pushf
pop
fdivp
mov
pop
stos
mov
movsbl
lds
inc
js
test
xchg
lcall
in
aaa
call
roll
or
inc
or
inc
inc
lahf
rorb
decb
incb
js
in
and
cmpsl
xchg
jg
addl
into
and
cmp
pop
lret
mov
add
pop
ljmp
mov
push
and
scas
dec
inc
addr16
loopne
adc
loopne
push
sbb
in
andb
adc
jbe
jnp
xor
mov
cmc
sbbb
aas
inc
inc
mov
clc
xchg
mov
mov
mov
mov
mov
adc
and
push
fwait
pop
push
movb
cltd
stc
insb
mov
mov
jo
jle
mov
jle
mov
mov
mov
dec
lods
xor
or
ss
mov
xlat
mov
sub
add
mov
sbb
test
shll
sbb
out
or
scas
nopl
jo
lcall
nop
xchg
jl
insb
adc
mulb
ret
lock
xchg
sub
xchg
loop
sahf
daa
mov
pop
mov
ljmp
jno
cmp
test
cmpsl
cmp
add
or
pop
mov
les
cmpsl
or
jle
iret
mov
jne
sub
jp
adc
imul
rol
inc
out
rcr
out
scas
mov
mov
aaa
or
insl
push
aas
inc
out
arpl
cmc
popf
jno
jg
int3
dec
jbe
and
lahf
jmp
fwait
mov
gs
mov
rcrl
or
sub
add
xchg
test
mov
nop
ja
pop
pop
push
subb
mov
inc
sub
ljmp
jle,pn
dec
stc
ljmp
xor
pushf
sti
adc
jge
jns
into
push
andl
ja
dec
mov
shl
fdivs
add
test
or
add
fdivl
lds
mull
push
leave
test
lret
dec
in
lock
lds
mov
fldcw
mov
pop
lret
sbb
scas
leave
js
dec
ljmp
cmc
loope
cwtl
lods
pop
lods
mov
jo
mov
adc
sub
cmp
pop
aas
out
mov
test
mov
int3
ror
jmp
in
jmp
mov
aam
mov
cs
inc
int3
inc
xchg
xchg
imul
iret
cmp
clc
mov
movsb
es
add
cmp
sbb
cmp
mov
fimull
sbb
pop
test
jbe
jne
jl
andl
adc
fisttpl
mov
jb
imul
daa
jg
jb
sahf
add
in
mov
dec
into
cmp
paddusw
mov
xorl
cs
addb
pop
mov
push
cmp
jg
cmp
in
jns
dec
mov
mov
loopne
in
sub
inc
dec
push
mov
cs
negl
or
mov
mov
jbe
cld
es
pop
mov
test
cltd
dec
jg
mov
pop
xchg
dec
out
mov
ds
aam
mov
mov
push
scas
mov
dec
add
int
frstor
xor
not
xor
loopne
ds
dec
aas
mov
mov
or
add
and
cmp
cld
sbb
repnz
or
lcall
int3
mov
int
out
inc
call
adc
fs
push
inc
jmp
cltd
xor
mov
cs
jmp
test
andb
mov
dec
cwtl
mov
call
sub
adc
xor
scas
arpl
cs
divl
pop
xor
movsl
add
mov
ficoms
push
push
addr16
fldenv
dec
imul
rcll
jbe
add
push
in
cmpsb
inc
lods
add
scas
cmc
pop
lock
bound
loop
inc
dec
pop
loope
jns
ja
pop
fdivl
cmp
dec
jnp
add
pop
xor
std
xlat
and
fldenv
addr16
cmp
fcmovnu
cmpsl
pop
test
in
xchg
or
jne
rclb
mov
mov
pop
jb
jne
mov
test
mov
stos
inc
lretw
loope
repz
mov
mov
jg
dec
ret
fs
loope
mov
mov
dec
xchg
out
mov
mov
mov
and
jl
lds
push
and
mov
add
pusha
inc
cmp
pop
lahf
mov
jno
test
fadd
sbb
mov
cmp
adc
and
stos
cs
movsl
xchg
push
xor
into
les
jbe
fstl
xor
leave
mov
fs
addr16
and
sbb
loope
adc
out
lahf
xchg
fisubl
jne
mov
mov
mov
and
pop
mov
pop
and
test
test
clc
jmp
pushl
cmp
mov
xor
popf
clc
dec
adc
xor
add
test
pop
or
pop
out
adc
loop
push
push
loope
sbbb
mov
aaa
sarb
add
sahf
cmp
shrl
mov
cltd
insb
cmp
loop
push
fsubrs
pop
pusha
js
push
sbb
add
adc
sbbb
jns
dec
stos
insl
lret
jge
movsb
cld
mov
std
xlat
lahf
rcll
dec
sub
movsl
imul
int
rcr
cmp
jno
adc
adc
shrb
dec
mov
cli
push
dec
in
out
lods
cltd
das
daa
popa
es
xor
shll
or
push
or
xorl
jnp
push
sbb
lret
out
lea
xchg
gs
ds
or
ret
daa
std
jnp
lcall
cmpsl
ror
mov
add
xor
sbb
inc
notb
js
mov
sbb
pop
mov
mov
cld
xchg
ljmp
bound
loope
push
fwait
out
add
fadd
pop
gs
add
in
xchg
pop
scas
and
sub
push
aam
mov
mov
inc
leave
js
adc
imul
stos
jecxz
or
movsb
sub
mov
sbb
imul
push
les
cmp
jb
push
mov
sub
sub
pop
inc
push
imul
aas
cmp
jg
push
jo
pop
lret
adc
push
ja
sti
lods
add
rcrl
push
mov
arpl
add
xor
mov
xchg
add
int
xchg
and
js
push
xor
mul
xorb
xor
fdivrl
mov
stos
and
push
sub
dec
shr
cmc
shl
sub
xchg
or
and
cmp
imul
fmull
rcrl
sub
xchg
aad
xchg
ret
mov
out
insb
or
rol
js
fisttpl
dec
icebp
jae
je
leave
dec
in
xchg
inc
hlt
cmc
pop
fwait
pop
test
xor
mov
fwait
pushf
sbb
rol
lods
dec
push
jl
sbb
push
mov
lahf
pop
sbb
lods
sbb
aas
mov
test
in
or
pop
fisubl
pop
xchg
out
bound
push
clc
sub
in
jno
pop
mov
add
push
ret
cmp
dec
mov
sub
mov
jge
outsb
dec
ss
mov
into
pop
out
mov
xlat
dec
adc
push
jno
outsl
and
pushf
or
cmpsl
sub
or
jns
cmp
and
movsl
inc
adc
inc
sub
test
cltd
ror
jecxz
pusha
xchg
pop
mov
mov
pop
push
popf
inc
sbb
jecxz
pop
std
fbld
or
jbe
jo
popf
out
dec
dec
xlat
inc
mov
movq
int
repnz
xor
loop
in
lcall
int
pop
pop
push
cwtd
pusha
xchg
dec
fsubp
in
lods
sub
jle
int3
push
sbb
pop
repz
pop
stos
dec
out
dec
jmp
sub
xor
push
adc
adc
dec
dec
int
add
cmp
mov
loopne
jg
pop
lea
mov
lea
cs
ljmp
ficompl
je
jo
aas
ja
outsl
out
or
in
into
cmp
pop
hlt
or
cmp
fidivs
clc
test
ds
les
testl
int
popa
xor
inc
push
cmpsb
xchg
aam
jbe
jnp
cmp
hlt
test
aam
outsb
scas
and
addr16
lods
push
into
pop
xchg
sub
aam
fst
movl
adc
aas
inc
lds
stc
into
clc
test
int
pushl
dec
clc
mov
add
clc
sar
test
xchg
pusha
mov
test
push
cmpsb
adc
mov
cmp
pop
fnstenv
sub
out
xor
and
shrl
jo
cmp
into
mov
mov
inc
nopl
dec
jmp
in
mov
mov
aad
sub
xchg
shrl
xlat
pop
loope
loopne
xor
xor
jge
je
sbb
push
data16
mov
movsl
sbb
xchg
aas
fimuls
mov
jne
ss
outsl
add
dec
sahf
sarl
push
mov
or
xchg
jge
sub
or
mov
sbb
and
mov
mov
jmp
push
cmp
sbb
test
jg
aas
ss
xchg
loope
dec
adc
pop
jbe
adc
sub
mov
lock
mov
mov
rcrb
sahf
outsl
push
or
in
adc
or
stc
cmp
push
inc
in
fidivl
jae
sub
mov
push
jbe
cs
fistpll
hlt
sub
sbb
enter
loope
cltd
pop
fcompl
jl
jmp
call
inc
mov
incb
or
in
jge
pop
and
rclb
pop
fsubs
inc
push
mov
rcr
test
mov
adc
sbb
and
dec
mov
mov
flds
enter
or
sub
andl
push
pop
je
icebp
mov
push
inc
dec
pop
jno
lcall
testl
mov
outsb
out
xchg
sbb
mulb
fstps
aas
hlt
mov
mov
adc
sti
bound
roll
mov
add
xor
orb
cli
and
mov
push
adc
push
push
and
mov
jmp
sub
mov
insb
adc
loopne
jns
scas
fdivs
mov
mov
nop
mov
outsb
cmp
lret
xor
adc
int
out
sarb
cs
in
fs
mov
or
int3
fisubs
xchg
xchg
mov
xor
insl
cltd
leave
inc
enter
cmp
inc
cltd
xlat
jae
mov
das
sarb
inc
insl
loope
mov
test
and
aaa
cs
or
jne
inc
add
shrb
push
fdivl
add
pop
dec
and
cmpsl
xor
xor
std
scas
and
xchg
and
lea
mov
ret
xor
shl
sub
in
fisubl
pop
mov
inc
leave
sub
je
jb
arpl
sbb
outsl
lahf
test
and
xchg
out
push
jbe
xchg
jae
sahf
pop
dec
adc
movsb
mov
movsb
push
sbb
push
cltd
mov
incb
scas
nop
pop
cmc
repz
xchg
shll
orl
jg
ficomps
and
adcl
shlb
stos
mov
cld
iret
sti
into
dec
xchg
ret
adc
bound
sbb
cmp
mov
sbb
xchg
mov
pop
jne
mov
push
jg
out
push
fs
push
xchg
mov
js
xor
or
fidivl
aas
sbb
scas
cmpsb
add
out
daa
and
into
mov
lods
mov
int3
and
sbb
repnz
incl
dec
lock
xor
push
mov
jno
inc
mul
mov
mov
sti
out
or
sbb
loopne
cmpsb
or
mov
inc
xchg
insb
and
xchg
stos
out
dec
in
jle
mov
dec
aaa
push
inc
cmp
in
imul
movsl
xchg
push
sbb
rclb
mov
insl
sub
shufps
test
out
pop
les
mov
xor
xchg
int3
mov
sbb
adc
inc
adc
cld
fidivrl
mov
into
imul
testb
add
add
leave
stc
inc
jle
jmp
test
jb
cs
add
jno
adc
cli
cmpsl
sbb
rcl
mov
push
insb
lcall
in
mov
push
outsb
lret
in
sub
sub
mov
jle
pop
adc
hlt
rcll
push
rolb
or
aaa
add
inc
loop
es
xchg
push
repnz
nop
mov
mov
pop
dec
ss
sbb
adc
gs
sbb
pop
mov
push
test
std
inc
insb
push
inc
push
lock
scas
imul
psubb
nop
push
adc
leave
bound
lock
push
cmpsb
xchg
xchg
cmp
mov
add
jne
mov
dec
push
push
repz
add
pushf
cmp
icebp
mov
adc
push
into
add
ss
mov
adc
push
sar
fs
ficomps
outsb
js
ret
and
sbb
cmp
fdivrs
push
mov
dec
pop
adc
sbb
mov
inc
lock
mov
inc
leave
pop
outsl
jb
and
inc
loopne
sbb
and
test
push
int3
jae
adc
xchg
rcrl
dec
sub
sti
cld
decb
add
inc
xchg
int3
mov
push
arpl
xor
jl
jg
mov
js
sarb
es
push
outsb
in
sahf
in
mov
in
cmp
add
pop
xor
sbb
pop
clc
imul
jb
das
sbb
pop
pop
xor
sub
dec
cmp
in
and
cmc
dec
out
sbb
loop
out
int
inc
xchg
mov
sbb
inc
push
inc
mov
sarb
imul
or
cwtl
movsbl
test
pop
pop
mov
int3
sub
pop
cmp
cmp
into
aaa
ret
jge
out
add
jmp
sub
inc
shrl
adc
add
sbb
push
mov
push
arpl
mov
pop
imul
pop
adc
xchg
add
jbe
mov
cltd
orb
gs
es
sbb
adc
dec
inc
es
sbb
testl
aas
into
shlb
jo
hlt
lea
loop
repnz
adcl
jle
pop
loopne
and
push
dec
shrl
add
pop
jnp
mov
jle
xchg
jae
popa
inc
adc
scas
arpl
jg
shll
mov
sarl
dec
dec
dec
jl
sbb
add
dec
push
fwait
addl
pop
repnz
pop
ja
cs
testl
insb
lret
mov
rcrl
mov
dec
sbb
hlt
fdivl
add
cmp
add
gs
lret
daa
lea
mov
repz
addr16
mov
adc
adc
push
test
frstor
xor
sub
popf
mov
mov
or
or
fmull
push
loop
shr
mov
loopne
mov
std
and
xchg
inc
push
iret
jns
lock
popa
loop
loop
mov
aas
mov
cwtl
sub
fcmove
subl
cmp
xchg
nop
xchg
pop
out
pop
popf
loope
out
aas
sbb
xor
in
imul
xchg
shll
loop
sub
adc
mov
jecxz
fs
sub
frstor
popf
cltd
std
into
sub
es
mov
mov
cmpsl
das
jnp
jmp
adc
pop
shrl
lock
inc
int
push
mov
mov
cli
fists
mov
jl
mov
popa
das
fdivrs
inc
and
sub
popaw
pop
jecxz
mov
mov
repnz
push
xor
xor
cs
sbb
test
roll
jbe
sti
inc
lret
popf
in
jle
loop
sbb
pushf
add
jecxz
pop
stos
push
xchg
jne
mov
imul
pushf
arpl
mov
sbb
mov
mov
jno
xchg
mov
inc
outsb
das
stos
mov
pop
orb
mov
arpl
movsl
sub
mov
adc
lock
mov
xchg
mov
sbb
pop
mov
push
inc
jg
sub
fisubs
andl
mov
out
xor
push
ret
ficoml
or
dec
je
orl
jle
jle
outsb
mov
lret
pop
out
sbb
cs
les
add
xor
jbe
pop
add
pop
pop
xchg
adc
inc
jecxz
cli
cmp
xchg
sbbb
adc
mov
cmpsb
into
sub
lret
ljmp
in
test
push
dec
in
fisubrl
mov
and
xor
js
or
into
aad
add
ror
push
push
adc
inc
jl
lock
and
movsb
add
movsl
dec
leave
xlat
and
ret
sti
adc
mov
subl
movsl
call
jge
dec
rcrb
pop
in
nop
xor
lcall
lea
aam
mov
inc
enter
lahf
les
es
lock
cltd
ja
push
aad
imul
add
mov
ficompl
arpl
xchg
sti
dec
es
pop
mov
push
aad
repnz
push
jns
mov
cmp
loope
inc
or
push
movsl
das
ja
fsts
ss
lret
xor
jmp
ja
out
stc
pop
jno
std
sbb
adc
xchg
enter
adc
fisubs
imul
lahf
xlat
pop
xchg
pop
icebp
hlt
cltd
clc
inc
sbb
aad
icebp
movaps
mov
sub
rcl
les
in
or
pop
dec
pop
jae
out
jb
idivl
cmpsb
push
xchg
lds
pop
scas
xor
dec
pop
xor
jl
fiadds
xchg
inc
dec
aaa
test
out
xchg
ja
add
add
xlat
jb
out
shll
cmp
or
aas
fs
sti
mov
inc
bound
pop
in
dec
mulb
pop
mov
cmpsl
jmp
ret
nop
mov
xor
add
pusha
inc
xchg
in
and
jns
pop
popf
xor
jmp
out
or
cmp
mov
out
gs
loope
popf
inc
xchg
sub
pop
inc
lods
inc
inc
enter
out
pop
jae
popf
fidivl
dec
cwtl
jmp
jo
addb
nop
ret
sbb
push
pusha
fildl
adc
or
cmc
dec
cmp
mov
fisttps
lret
das
testl
dec
xchg
xchg
xchg
pop
sbb
push
or
mov
scas
out
cmp
lahf
sbb
push
adc
jg
in
xchg
outsl
in
cwtl
xor
adc
add
je
cmp
xor
out
adc
stos
imul
pushf
rorl
shlb
in
add
fxam
xor
pop
xor
jmp
pop
clc
mov
loop
in
jle
mov
xlat
in
shll
icebp
lds
jge
or
mov
insl
cmc
fwait
mov
jnp
xchg
outsl
out
cs
xor
aam
mov
lret
push
sbb
sbb
sub
ret
lahf
movsl
xchg
cs
fwait
jl
lcall
sbb
repz
push
jns
sahf
push
mov
add
mov
mov
fiadds
dec
or
lds
sub
or
mov
pop
scas
das
sbb
mov
dec
insl
jl
aas
add
mov
dec
in
xlat
shlb
or
js
sbb
lcall
inc
insb
hlt
popf
ljmp
into
in
pop
pop
popl
jno
dec
push
ret
push
ljmp
out
into
mov
jne
or
xchg
in
leave
fdivrl
pop
jl
add
add
sbb
dec
mov
jns
lods
cld
ret
shll
fs
ret
jb
jp
sub
loopne
fs
std
mov
mov
dec
pop
and
lret
mov
push
adc
out
and
mov
xlat
pop
imul
cmp
jb
dec
mov
cmp
ss
mov
testb
cli
push
insb
test
push
push
les
pop
mov
inc
xor
cmpsb
pop
mov
ret
lods
clc
cmp
fucomi
aas
shlb
jo
cs
or
sti
pop
aad
add
imul
mov
ror
out
push
xchg
push
popl
mov
sub
xchg
sbb
iret
push
lods
pusha
aam
sbb
and
movsb
fdivs
data16
icebp
popf
mov
add
jbe,pn
xor
leave
mov
sub
jge
shr
pop
ss
jge
cmc
das
mov
mov
sub
mov
or
add
jmp
arpl
push
jne
mov
push
push
sbb
in
ds
sbb
xchg
lds
bnd
sbb
mov
xchg
int
pop
inc
popf
xor
mov
xchg
ljmp
int
add
sbb
mov
xchg
push
lods
mov
push
cmp
and
outsb
imul
mov
fidivrs
pushf
clc
movsl
cmp
leave
mov
add
shrl
add
frstor
or
or
adc
leave
gs
inc
outsl
loop
xchg
sahf
in
fstpl
fldt
mov
arpl
out
push
mov
jbe
stc
js
add
xchg
cmc
in
pusha
flds
enter
push
jne
jbe
lods
and
ret
push
fs
dec
push
jae
push
pop
dec
inc
adc
inc
hlt
mov
mov
fnsave
iret
pop
mov
xor
aam
ret
fcmovnu
aas
cmp
push
mov
jge
push
push
dec
aas
mov
data16
xchg
jmp
movsl
add
orb
xor
imul
dec
inc
dec
jg
cmp
js
sub
call
mov
mov
push
xor
pop
xchg
fwait
popf
je
jae
mov
mov
es
sbb
cltd
mov
leave
mov
int
test
int3
pop
cli
push
testb
stc
sub
mov
cmc
mov
jns,pn
xlat
outsl
pop
insb
jb
mov
scas
movsb
loopne
jo
popf
jle
or
shll
push
popf
cmp
xor
fildl
fistl
ja
xchg
push
push
jbe
stos
ja
jle
xchg
das
pop
mov
xor
addr16
inc
test
outsb
cmp
jnp
cld
xchg
mov
adc
test
dec
stos
fwait
or
push
mov
inc
loope
dec
push
or
aam
dec
sub
inc
add
push
push
pop
cwtl
out
push
aaa
imul
xor
insb
ficoms
sub
cltd
pop
or
add
repnz
out
daa
test
neg
imul
in
test
push
fisubrs
cs
aad
or
push
xor
mov
ret
les
sti
cwtd
aad
cld
cmpl
cmp
pcmpgtw
xchg
mov
les
sbb
popa
int
pop
jmp
sbb
jmp
scas
repnz
nop
nop
popf
and
adc
stos
adc
jne
or
in
cltd
in
ret
push
xchg
fildll
xchg
mov
and
sbb
mov
enter
push
sub
popa
sahf
mov
ret
je
hlt
fdivrl
inc
add
je
pop
sti
stos
xchg
or
aas
je
push
jmp
cmpsl
lahf
lds
lods
cmp
adc
adc
sub
cmc
xchg
popf
loope
or
cmp
sbb
inc
in
mull
adcb
push
nop
clc
paddd
leave
xchg
cmp
mov
pop
pop
test
mov
mov
stos
cmpb
lret
jb
mov
jo
sbb
and
test
test
xchg
les
cmc
popf
ds
call
inc
shll
lods
and
cmp
jp
daa
testb
jns
mov
andps
int3
mov
into
sbb
cmpsl
adc
nop
inc
add
push
repnz
sbb
jnp
aas
lcall
xchg
ficoml
lods
adc
jge
sub
hlt
out
add
inc
push
int3
cli
fnstcw
jg
inc
data16
cs
sahf
jmp
and
add
movsb
dec
mov
jecxz
mov
imulb
push
ret
jecxz
push
test
hlt
sbb
movsl
sub
adc
mov
dec
cmp
clc
shrl
mov
clc
sub
mov
icebp
xchg
out
xor
and
test
pop
jp
push
mov
pop
mov
add
scas
enter
fcompl
inc
mov
fstpl
push
mov
add
add
or
mov
sbb
add
outsl
dec
mov
add
jecxz
jp
test
test
movsb
add
in
in
lcall
inc
faddl
into
lods
jmp
push
jp
pop
pop
lock
pop
pop
cld
sbb
icebp
aad
int
aaa
pop
into
stos
cmp
int
lea
stc
js
jg
inc
mov
jbe
stos
pop
mov
sbb
jno
push
jns
addr16
mov
outsl
or
lea
dec
gs
inc
mov
insb
mov
daa
call
jp
insl
in
test
dec
loope
push
xor
add
cmc
lret
sbb
dec
cmpsl
ds
adc
leave
sub
add
mov
movl
bnd
repnz
mov
out
cmp
lods
xor
pop
repz
fstl
insl
jecxz
dec
aad
pop
cmp
cld
sub
lea
out
jae
dec
mov
addb
mul
daa
or
andb
inc
lock
icebp
push
loopne
fs
xchg
das
enter
mov
mov
mov
fxch
add
jns
outsb
lcall
dec
stos
push
arpl
icebp
sbb
addl
cmp
xor
adc
inc
rclb
jl
out
subl
xchg
fcoms
jg
rorb
push
arpl
jns
dec
aas
jge
cmp
xor
les
ds
in
push
hlt
clc
xlat
add
rcrb
mov
dec
bound
call
sub
dec
jns
fstpl
lret
lea
jbe
jne
mov
mov
call
mov
fidivl
push
out
xchg
and
popa
pushf
mov
test
das
ss
mov
es
sarl
sub
dec
inc
jo
outsl
mov
ficoms
jmp
insb
xchg
xchg
add
jl
sub
ficoms
sbb
cltd
out
sbb
jl
outsb
push
jp
pushl
sub
mov
xchg
or
repnz
rcll
outsb
daa
hlt
jbe
scas
pop
jbe
and
jne
and
shll
and
dec
cld
adc
testl
lods
cmp
mov
mov
hlt
or
xor
lods
movsb
ret
jb
adc
clc
jns
jle
out
cwtl
mov
add
push
jae
lahf
push
push
cmpsl
sub
testl
cs
stos
aad
jg
cmpsb
inc
xchg
adc
mov
add
fdivrs
push
lock
shrl
js
addr16
scas
or
lahf
arpl
in
inc
mov
inc
mov
maxps
inc
jge
and
jno
and
addl
xchg
push
js
sbb
loope
mov
inc
daa
fstpl
xor
pushf
xchg
aam
cmp
incb
mov
dec
lahf
dec
mov
popf
fdivrs
shl
push
aad
into
fwait
addl
sbb
jb
dec
jnp
negl
jg
pop
hlt
dec
mov
rclb
iret
or
cmp
je
mov
dec
push
lea
shr
cmp
and
sti
repnz
mov
inc
or
push
lret
ret
add
or
pop
jae
cmp
mov
lods
out
jbe
jl
idivb
andps
aaa
test
pop
testb
jle
and
aam
push
and
jo
out
pop
jb
jb
push
push
ds
jb,pt
outsl
mov
pop
add
divb
adc
cmpsl
sub
adc
dec
push
fdivs
jo
inc
in
mov
shlb
jnp
hlt
mov
loop
clc
scas
mov
dec
out
leave
out
jne
mov
pop
in
cmp
lahf
test
and
cmp
push
iret
dec
sahf
mov
adcl
add
inc
cmp
jp
sbb
xchg
dec
shr
iret
sbb
push
xchg
mov
xchg
ja
cwtl
inc
push
aad
inc
das
sub
or
pop
mov
and
divb
dec
pop
popa
sub
adc
out
jb
pop
add
dec
push
dec
addb
scas
pop
and
jmp
test
sbb
loop
cmp
sub
ljmp
pop
inc
push
dec
or
out
jae
fdivr
cmc
or
shrb
sti
addb
mov
ret
divb
shl
cld
or
xchg
pop
jnp
or
into
cmp
outsl
inc
cmpsl
and
aam
ss
icebp
lret
enter
shl
ss
jg
add
ljmp
adc
pushl
dec
sbb
decl
sub
pop
scas
es
inc
jns
stos
lods
and
mov
and
mulb
aaa
sub
jno
xor
cmp
mov
fistpl
mov
test
incl
push
push
pop
cli
xlat
negl
mov
cmp
pop
and
mov
inc
adc
adc
jbe
jbe
or
ficoml
inc
stos
pusha
or
mov
js
push
sbb
sub
xor
jmp
pop
inc
sub
outsb
lea
adc
into
test
lret
mov
lods
repnz
push
pop
ljmp
fiadds
or
xchg
inc
lea
pop
dec
mov
mov
mov
scas
icebp
or
lock
rorl
add
cmp
or
test
jl
out
in
sub
imul
and
mov
ljmp
aad
xor
pop
and
fldl
sub
cmp
dec
sti
jno
or
mov
or
insl
mov
lods
xchg
mov
inc
mov
xchg
or
bound
cmpb
xor
xchg
mov
loop
jge
jmp
gs
out
icebp
lahf
cmpsl
add
je
testb
xchg
bound
jo
jge
fcoms
sbb
repnz
cltd
sub
cvtps2pd
jo
sbb
test
stc
or
xchg
popf
sbb
enter
mov
sbb
cmpsl
je
icebp
out
sbb
and
mov
scas
push
rcll
icebp
adc
mov
pop
gs
out
push
daa
sbb
clc
scas
clc
jmp
xchg
pop
shrb
into
mov
cs
adc
jecxz
dec
ds
mov
outsb
out
stc
cli
shr
sbb
or
push
nop
enter
push
cmp
data16
lods
jecxz
stos
in
rcrl
lods
das
fildl
je
data16
inc
aad
loope
mov
xchg
repnz
shl
imul
lods
cmp
mov
pop
sbb
loopne
fdiv
dec
test
xchg
insb
mov
pushf
jp
sub
adc
xor
and
lea
loopne
inc
ret
lret
dec
ds
jmp
push
addb
dec
movsb
add
loope
xor
pusha
sbb
lods
mov
mov
ret
cmpsb
xchg
mov
ret
push
mov
daa
xchg
sub
outsl
sbb
cld
jmp
loope
jno
adc
xchg
xchg
push
inc
cmp
add
xlat
jnp
xor
and
icebp
subb
incl
lret
push
popf
ds
or
adc
cmpsb
pusha
lret
push
repnz
jbe
mov
test
cmp
mov
cld
mov
ret
nop
sarb
lds
jb
test
loope
cmpsb
jmpw
sbb
and
cmp
pop
loop
pushf
cmp
das
pop
das
into
cli
shlb
push
pushf
add
or
es
add
clc
xchg
sti
cltd
stos
xchg
add
gs
shl
push
xchg
fdivr
xchg
into
add
mov
cmp
pop
ja
xlat
and
or
rclb
das
mov
jecxz
jp
ds
es
iret
orl
inc
sbb
lret
sti
lahf
inc
bound
pusha
cmp
dec
xchg
adc
cmpsb
mov
flds
or
mov
leave
outsl
test
movzwl
out
adc
or
xor
addr16
sub
incb
xor
or
sti
adc
add
repz
imul
shl
stos
xor
iret
gs
out
lods
lcall
outsl
or
std
jge
std
fsubrs
pusha
sbb
movsb
ficoml
lcall
dec
cmpsb
dec
daa
adc
aad
cmp
pop
icebp
sub
cmp
sti
adc
mov
ss
scas
sub
lcall
mov
mov
and
ret
loopew
push
lcall
insl
les
pusha
adc
sahf
push
loopne
sub
cltd
jmp
push
dec
iret
and
cld
adc
test
mov
and
inc
mov
jns
and
sbb
aas
aad
movb
movsl
das
inc
cmp
xlat
mov
add
cs
or
mov
icebp
dec
shlb
pushf
xor
xchg
add
mov
pushf
jp
es
pop
fwait
in
ss
insl
lcall
testb
xchg
in
das
shlb
mov
mov
enter
mov
cmp
sti
add
xchg
loope
xor
inc
cmp
and
mov
pushf
jl
in
jp
sub
lahf
ljmp
aad
push
or
sbb
xchg
das
ds
mov
jb
sti
xchg
outsb
cmp
push
and
fs
adc
mov
jnp
mov
test
ret
sub
fdivl
loope
mov
pop
out
mov
sub
cmpsl
push
xlat
lcall
mov
ds
aam
test
jne
inc
aad
cmp
out
pop
loop
dec
and
push
xlat
add
fsubrs
inc
pusha
push
movsb
stos
std
push
decl
cmp
adcb
ds
jne
pusha
or
dec
test
imul
push
clc
and
push
into
sub
pop
arpl
fisttps
inc
in
cmp
je
pop
xchg
xchg
es
ds
shlb
dec
fcmovnbe
xor
enter
rcrb
nop
fwait
addl
inc
stc
sti
sbb
push
push
adcb
mov
popf
les
sti
nop
mov
and
jge
fdivrp
add
xor
sub
scas
sti
mov
sbb
insb
and
xchg
adc
shlb
icebp
imul
mov
mov
jl
mov
pop
xor
pop
test
sbb
xchg
ffreep
mov
ljmp
data16
call
adc
fdivs
aas
pop
push
shll
lods
mov
sbb
movsl
pushl
xor
cmp
jmp
jl
call
orl
mov
dec
cmc
inc
mov
nop
xchg
xchg
lods
lea
sbb
ret
das
push
mov
shll
int
xor
lock
jo
and
mov
or
aaa
stos
inc
push
fidivl
lea
outsb
mov
mov
sti
xlat
mov
inc
and
and
xchg
and
enter
pop
insb
push
sbb
notl
movsb
dec
xorb
push
std
jne
sub
jns
jg
popf
mov
cmpsb
into
movsb
mov
fcom
push
out
pushf
cld
sbb
out
xchg
in
sub
lcall
popf
in
push
pop
orl
mov
adc
xor
into
stc
xchg
dec
or
inc
ret
xchg
pop
push
insb
mov
jb
mov
ja
xchg
addr16
mov
cld
sti
push
lret
dec
jnp
gs
xor
inc
aaa
mov
and
popf
rclb
subl
mov
sub
xlat
test
jge
xor
xor
mov
popa
pop
lods
jecxz
lcall
xlat
loope
pop
jb
mov
lret
popf
ficomps
mov
test
std
les
pop
cli
sbb
scas
repnz
insl
leave
push
stos
pop
stc
cmp
and
fcmovnbe
jne
fmulp
mov
inc
jo
sbb
push
mov
ljmp
clc
pop
iret
lods
aaa
jg
mov
js
repz
lret
das
and
aas
in
mov
mov
loopne
fsubrs
adc
pusha
mov
push
fldl
out
pusha
fcmovu
lidtl
sub
in
xor
sahf
mov
rcrl
idivb
mov
cmp
dec
dec
out
sub
cmp
mov
mov
fistpll
sub
pop
ds
andb
jg
dec
repnz
call
mov
js
jae
sub
roll
scas
mov
sbb
flds
xchg
ss
sarb
repz
popf
lret
inc
mov
aaa
loop
mov
pop
iret
std
xchg
jae
arpl
jl
mov
mov
in
cmp
xor
lahf
inc
adc
movsl
bound
dec
add
out
fnsave
mov
mov
inc
pop
jno
test
mov
add
jno
adc
jb
adc
fsubrs
outsl
jecxz
xchg
bound
jnp
or
jmp
imul
xor
popf
scas
sbb
stc
or
aam
xor
stos
or
icebp
cwtl
mov
adc
popf
adc
mov
add
frstor
add
daa
daa
negl
adc
adc
mov
es
pop
rdmsr
jnp
ja
sbb
mov
int3
jmp
dec
js
test
popf
sahf
cmp
pop
xchg
data16
jmp
aad
mov
testl
jbe
sub
lret
mov
fwait
jno
lods
mov
iret
orl
shrb
push
aas
in
fdivrs
in
shl
addr16
cmp
pop
xchg
scas
movsb
out
ss
pop
inc
mov
aas
push
mov
xor
mov
bound
xchg
adc
in
xor
cmp
arpl
mov
push
ljmp
in
jne
sub
gs
xor
in
aam
and
jnp
inc
xchg
sbbb
adc
xchg
mov
and
xor
jp
fimull
orl
icebp
aad
nop
jbe
fsts
adc
and
leave
mov
jno
les
xor
mov
pop
mov
out
mov
adc
jae
les
sbb
stos
adc
xchg
int3
ljmp
or
xchg
arpl
lea
push
fwait
mov
mov
das
or
jbe
pop
hlt
or
mov
inc
sysexit
frstor
gs
mov
clc
pusha
mov
inc
aam
add
xor
adc
push
mov
jmp
int
out
pushf
or
sbb
inc
push
mov
mov
stc
movsl
push
mov
in
in
jne
and
outsl
or
daa
and
leave
cmc
pop
scas
iret
pop
fbld
xchg
push
enter
divb
mov
lock
cmp
or
nop
loop
ss
sbb
and
dec
cmp
ret
ds
dec
repnz
push
mov
inc
mov
sub
iret
add
add
jmp
or
sub
in
push
rcll
mov
fnsave
jmp
jns
sub
cmp
aas
aam
aaa
mov
jne
jle
jne
cmpb
xor
push
enter
orb
popa
adc
das
inc
pop
and
mov
insl
cmp
enter
mov
fistpll
pop
cmpl
push
loop
mov
ja
rorb
mov
adc
out
push
outsl
fsubrl
scas
pop
data16
add
push
lret
mov
mov
rorb
rcrb
dec
sbb
pop
lock
push
jae
jmp
daa
outsl
push
xor
punpckldq
push
mov
xorb
fildll
jle
pop
movsl
rol
xor
lea
mov
mov
insb
and
stc
out
stc
rcl
mov
mov
jns
and
hlt
jecxz
xchg
movsl
mov
in
xchg
inc
cmpsl
scas
jnp
mov
adc
mov
or
cmpsl
inc
negl
int
or
into
xlat
outsl
rcl
pop
pusha
pop
push
adc
jmp
push
xor
fiadds
xor
jne
sti
out
nop
andl
sub
adc
jle
pushf
test
fnstsw
xchg
mov
inc
sbb
bound
cld
mov
in
mov
loopne
jg
mov
popf
scas
dec
test
and
repnz
pop
sti
in
cwtl
jg
pop
mov
or
fdecstp
sbb
dec
adc
xchg
scas
fidivs
or
lea
es
into
add
pop
lods
test
popa
mov
rorl
loopne
or
xchg
pop
adc
inc
adc
loope
dec
pop
dec
pop
int
sbb
test
lahf
fnsave
repz
out
push
arpl
fisttpll
jnp
stc
shl
iret
cld
mov
and
iret
push
xchg
cmp
nop
ss
data16
mov
push
andb
loopne
adc
mov
cltd
pop
mov
pop
mov
mov
or
pop
or
xor
jmp
pushf
mov
les
int3
out
ret
adcl
hlt
je
leave
rcrb
mov
and
xor
cmp
lret
push
sti
sti
mov
mov
xor
out
hlt
jb
dec
out
mov
jne
dec
ja
xor
call
cli
and
sub
jecxz
pop
jmp
xlat
xchg
lds
js
int
mov
out
cmpsb
loopne
xor
stos
aam
mov
scas
mov
push
sahf
cmp
xor
repz
sbb
xchg
fdivp
or
or
sbb
imul
or
fcmove
test
fiadds
add
adc
push
dec
aad
and
jmp
in
popf
loopne
test
jbe
test
or
mov
mov
out
and
gs
xor
dec
xchg
dec
dec
mov
in
dec
lahf
test
lea
ficomps
rorb
ficompl
jbe
jns
aas
rorl
in
mov
push
push
fs
sarl
mov
rcrb
fsubr
mov
and
and
inc
call
fwait
push
adc
insl
push
in
ficomps
insl
bound
push
mov
pop
movb
push
cs
cmpsb
mov
stc
mov
cmpsb
jbe
cli
push
pop
xor
enter
popf
mov
popf
sub
adc
lds
cld
daa
dec
lret
int3
imul
push
pop
push
mov
add
sbb
add
push
push
sbb
adc
mov
loop
ljmpw
mov
or
inc
add
xor
imul
inc
shlb
push
repz
jg
sbb
iret
out
icebp
scas
sbb
sbb
shl
loop
or
jmp
in
mov
push
jo
or
imul
push
mov
jge
xchg
psubusb
sub
hlt
insl
add
xor
cmc
xor
outsb
dec
cli
cmpsl
push
addr16
sub
mov
test
jle
loop
mov
ret
jg
push
cmpsb
dec
adc
popa
jp
xchg
hlt
pop
bound
xchg
fadds
lds
push
add
mov
jae
loopne
in
out
inc
pop
mov
jb
mov
lret
mov
loopne
daa
repnz
mov
stos
hlt
scas
lcall
fcoms
jae
xor
shlb
sahf
push
loop
subl
sarb
mov
mov
scas
push
call
sub
scas
pop
push
hlt
push
push
in
lret
adc
loop
sub
xor
mov
push
or
or
sub
push
mov
jmp
xchg
or
add
pop
and
cs
xor
xchg
scas
push
xchg
add
jne
pop
inc
ds
sbb
jbe
mov
out
fwait
lods
cmpsl
xor
pop
aaa
sahf
mov
mov
icebp
jnp
ljmp
scas
popa
xor
stos
cmpsb
push
mov
rcrl
pop
pop
into
mov
pushf
xor
mov
xchg
xor
lock
dec
inc
and
lods
mov
dec
sbbl
hlt
pusha
mov
jnp
mov
clc
xorl
cwtl
into
pop
mov
ja
xor
cmp
inc
cmovnp
xchg
dec
adc
dec
bswap
je
xor
out
cmp
dec
std
rorb
test
sbb
iret
gs
das
xchg
mov
mov
sbb
roll
ret
stos
mov
addb
sti
jmp
repnz
dec
xchg
out
pop
mov
jmp
and
inc
xor
ljmp
or
call
xchg
inc
mov
xchg
movsl
and
fstp
call
sarb
mov
ds
icebp
aad
xchg
fcoml
fists
add
cmpsl
and
mov
aas
add
sub
inc
bound
jl
out
mov
je
inc
fimull
pop
addr16
insb
xor
lea
jl
orb
push
sbb
mov
cltd
and
test
stos
cmp
jb
add
stos
mov
or
jns
adc
shlb
ret
mov
push
fisubs
imul
mov
ret
dec
adc
in
push
mov
clc
je
lods
int
call
imull
dec
jl
in
pop
ja
mov
loope
ss
daa
div
dec
mov
adc
jp
push
jo
xor
mov
stos
cmp
or
stos
cmp
xor
dec
sbb
add
lret
and
xor
iret
aaa
and
push
mov
hlt
subl
mov
and
mov
out
bnd
ljmp
xlat
out
popf
ret
dec
dec
and
notb
mov
in
clc
fidivrl
dec
imul
pop
xor
mov
rorl
mov
sub
xor
js
inc
lods
push
call
sub
inc
adc
cli
mov
mov
sbb
test
lods
cmp
or
stc
push
in
fwait
push
adc
leave
dec
lahf
mov
das
ja
mov
dec
mov
jl
das
roll
call
xchg
jg
dec
out
xchg
xchg
jno
pop
pushf
inc
mov
mov
les
sarl
or
enter
xor
das
ss
out
jg
gs
aas
pop
sub
cmp
mov
xor
sub
and
leave
sti
sbb
movsl
std
xor
jmp
ds
aaa
or
insb
fiadds
mov
lock
pop
leave
jns
jecxz
orb
imul
sbb
cltd
out
xchg
dec
ret
sbb
xor
xor
nop
imul
jae
inc
loopne
push
lods
push
push
clc
or
dec
sub
movsl
inc
cmpb
ljmp
adc
or
cmp
icebp
or
popa
aam
push
fs
mov
in
mov
jb
pop
mov
nop
movsl
adc
popf
addb
jge
jae
pop
aam
sub
mov
clc
sub
inc
fdivrp
and
mov
push
insl
mov
fnstsw
rcrl
cmpsl
repnz
mov
push
push
scas
cmc
lret
repnz
mov
inc
push
jl
subl
iret
cld
push
das
push
push
cmp
out
dec
imul
jp
out
js
or
test
cltd
mov
test
pop
fiaddl
in
sub
hlt
lds
loop
mov
mov
iret
xor
mov
stos
cwtl
xchg
pop
mov
adc
dec
pusha
gs
outsl
in
sbb
stos
jno
rcll
fstpt
insl
les
loop
fistpll
ljmp
inc
dec
inc
int3
lods
fistpll
in
das
test
movsb
add
iret
xchg
in
jp
in
mul
dec
add
xchg
or
les
fwait
cwtl
fistps
xor
cld
jo
xchg
xchg
cmc
into
mov
add
cmp
cmp
mov
aad
cmpsl
and
mov
sbb
cmp
into
pop
es
and
sbb
adc
and
or
push
inc
adc
loope
mov
andb
sbb
jb
gs
das
fcmovne
sub
push
and
push
es
add
xor
adc
dec
sbbb
stc
popf
xchg
ret
inc
popa
lock
xor
movsl
fdivrl
or
ljmp
mov
xchg
repz
dec
xor
push
push
dec
int3
aam
push
xor
lcall
jmp
sbb
ret
mov
or
xlat
repz
mov
xor
mov
sahf
in
xor
movsl
jmp
lock
rcll
and
es
nop
mov
ss
movsl
pop
js
gs
out
cmp
rcrb
aad
loopne
push
lret
cwtl
leave
aad
gs
fdivs
jno
out
mov
jecxz
ror
insl
loope
insb
bound
mov
mov
pop
int3
lret
hlt
lret
outsb
xchg
jns
inc
xchg
lcall
jne
pop
jo
xchg
fidivs
or
adc
in
mov
dec
push
pop
int
or
fildl
mov
arpl
cwtl
inc
data16
sbb
and
popa
xorb
push
sbb
fwait
push
sub
jno
das
jle
scas
cld
jns
rorb
lea
push
outsl
mov
dec
shrl
or
inc
js
inc
cs
js
dec
xchg
add
stc
into
push
jb
and
addr16
pop
adc
pop
xchg
cmp
dec
data16
fwait
adc
dec
push
test
or
adc
mov
xchg
adc
cmp
jmp
std
mov
sub
push
fimull
out
ret
push
mov
jne
cli
and
sahf
xchg
sub
pop
int
adc
dec
push
jp
sub
cmpb
mov
xor
add
sbb
sbb
insl
mov
in
aas
sub
push
and
iret
mov
cmpb
lret
fstl
repz
loopne
or
mov
jo,pt
cmc
jle
jmp
jmp
lret
push
adc
mov
ja
in
adc
xor
lret
push
jg
or
mov
out
and
dec
push
rcrl
shll
loope
or
rorb
push
cmp
ljmp
jmp
dec
sbb
add
iret
jns
mov
ss
loopne
jb
addr16
xchg
pop
cmp
inc
fdivrl
sahf
push
aas
pop
das
xor
xchg
push
fwait
outsb
inc
rol
xchg
xchg
mov
jp
js
xchg
movsb
xlat
sub
bound
das
mov
pop
or
push
adc
cmpsb
and
inc
repnz
xor
sbb
cmp
scas
or
hlt
sbb
or
or
aam
lahf
mov
fnstsw
fsubl
dec
scas
jo
ljmp
mov
movsl
lret
dec
fimull
mov
jmp
mov
fbstp
jnp
inc
add
in
jle
insb
xchg
cmp
jge
rsm
and
pop
out
movsb
test
inc
dec
pop
inc
cld
icebp
xchg
push
enter
jbe
cmp
shrl
ss
sub
jmp
lahf
xchg
jecxz
roll
out
sub
fdivr
cmp
movsb
push
int3
adc
cmp
mov
push
js
test
hlt
mov
dec
addl
xor
xchg
jmp
and
cs
gs
mov
inc
push
stc
sub
add
out
shl
push
mov
xor
inc
rcll
mov
negl
dec
add
jns
jae
pop
add
aas
mov
shrb
les
subb
popf
mov
sub
jmp
loopne
cmp
push
pop
lret
shl
rcrb
ljmp
sbb
not
aam
mov
pusha
pushf
cwtl
lcall
jns
pusha
mov
dec
ja
pop
add
jnp
movsb
dec
loopne
ret
enter
add
inc
xchg
pop
imull
sub
ss
dec
or
shlb
and
jl
inc
push
sub
insb
int
je
xor
cmp
orb
fdivrp
xchg
hlt
sarb
pop
add
mov
ljmp
xor
inc
jmp
xchg
jne
mov
rorb
adc
cmp
scas
and
mov
outsb
arpl
sbb
xchg
mov
cmp
xor
mov
cmp
or
cmp
jmp
xor
sub
rcrl
and
xchg
outsb
cld
jp
test
shl
aam
sbb
arpl
adc
test
pop
out
and
shrb
cltd
test
mov
int
test
dec
add
loopne
je
pop
mov
decl
lahf
xor
jno
test
dec
lahf
lds
cmc
xchg
fcompl
push
shlb
and
sub
aas
jle
movsl
xor
cmp
iret
into
push
or
insb
and
cmc
jmp
sbb
push
cmp
roll
mov
mov
sub
mov
mov
cmpsl
lock
push
sub
sub
leave
push
mov
jle
out
test
jmp
inc
andb
sti
dec
jle
aas
cmp
or
sub
adcb
xchg
cmc
pop
iret
call
inc
in
pop
push
inc
nop
fbstp
mov
mov
addr16
sub
call
lret
xchg
xchg
int
push
repz
push
xchg
outsb
mov
iret
fadd
mov
aaa
pop
jmp
loop
stos
mov
dec
sub
in
stos
mov
push
xchg
adc
pop
sbb
repz
divl
je
roll
in
jbe
xor
movsb
jge
mov
insb
pop
fists
add
add
ljmp
lcall
in
adc
daa
pop
inc
mov
imul
jno
mov
les
leave
pushf
lds
bound
dec
sbb
and
mov
inc
mov
mov
fists
jge
jb
xor
cmpsb
aad
or
mov
in
sub
push
leave
sar
icebp
jle
mov
cmp
iret
faddl
out
cmp
sub
addl
insb
ljmp
add
jmp
jns
inc
rol
aas
cmp
daa
out
lret
lret
arpl
stc
mov
cmp
cmc
jle
xor
clc
aaa
scas
mov
cltd
mov
ja
iret
cmpsl
out
inc
outsb
lock
push
popf
mov
in
scas
mov
xor
rclb
add
inc
jne
in
je
inc
stos
movsl
out
mov
xchg
sub
sbb
adc
cmpsl
inc
sub
mov
jae
mov
or
out
test
pop
rcll
push
es
cmp
mov
aaa
or
std
mov
imul
jl
rorl
inc
incb
pop
pop
xchg
xlat
stos
daa
xchg
pop
cs
cltd
and
cltd
cmp
sbb
fmul
xchg
std
add
pop
xor
iret
out
mov
mov
sbb
xor
pop
ror
add
scas
sub
ljmp
add
fs
insb
and
xor
adc
cmp
addr16
sti
lods
cmp
repnz
ss
loopne
es
jne
mov
or
dec
lahf
dec
daa
ja
xchg
xor
inc
into
in
cltd
pushf
lods
imul
fisubl
cltd
sub
xlat
jae
cmc
pop
fwait
aam
dec
xlat
iret
stos
lods
int3
nop
ret
cmp
cmp
sbb
lock
pushf
insb
sahf
xor
call
outsl
pop
push
cmp
fidivs
test
sti
jmp
mov
jmp
sub
repnz
mov
call
cli
sub
loop
dec
int3
mov
jns
mov
jp
movsb
sub
jmp
lret
int
jp
inc
mov
pop
outsb
je
in
int3
sub
pop
in
daa
push
imul
jmp
and
push
cltd
add
sub
out
cmpsb
dec
jmp
push
and
xor
dec
movsl
bound
push
aam
sbbb
mov
outsl
fwait
mov
sub
fisubs
lds
push
dec
fildl
loop
aas
rol
and
jnp
test
scas
cmp
xor
dec
and
clc
dec
jecxz
cmp
push
pop
fisubrl
or
repz
adc
dec
and
stos
nop
mov
xchg
iret
lods
mov
orl
popa
cmp
mov
scas
ja
das
fsubrl
dec
add
cmpsl
fists
or
hlt
inc
jmp
push
xor
out
adc
movsl
mov
pop
nop
and
aas
xchg
lret
in
sti
mov
and
mov
sbb
sub
mov
inc
test
push
and
sbb
pop
or
xchg
pop
or
xchg
adc
xchg
xor
icebp
bound
div
sub
scas
call
pop
mov
aad
cli
es
and
inc
repz
icebp
xchg
jg
mov
mov
push
fimuls
stos
mov
cltd
mov
add
dec
lea
jns
adc
mov
and
gs
mov
rcl
push
inc
jmp
xchg
add
jns
mov
dec
sbb
xor
stos
mov
arpl
ficoms
int
in
xchg
clc
sbb
and
js
push
xor
xchg
xor
loope
pop
lods
popa
shlb
imul
mov
jecxz
outsb
xor
mov
adc
imul
mov
idivb
in
test
pop
pop
jne
pop
iret
mov
inc
cli
xchg
dec
push
in
hlt
out
and
sti
mov
sbb
lods
mov
xchg
outsl
cs
xor
xchg
scas
push
fidivs
mov
lods
mov
test
xchg
fnstcw
push
aas
mov
mov
into
and
mov
stos
fwait
mov
aaa
add
pushf
add
xor
jo
cli
xor
mov
xchg
cld
mov
iret
jg
jb
test
decl
xlat
test
xor
sbb
test
xor
cltd
jnp
sub
rcrb
sbb
push
std
adc
and
lds
jae
push
adc
mov
cmp
inc
sbb
lods
mov
sub
sub
popl
sub
gs
add
aad
out
sub
mov
push
fmuls
add
mov
cs
insb
cmpsb
xchg
cs
ret
xchg
and
or
mov
mov
test
push
jno
mov
mov
lods
aas
js
dec
lahf
shl
xchg
negb
rolb
inc
jmp
std
ffree
xor
shrb
add
jae
adc
inc
out
mov
cmpsb
sub
mov
out
adc
outsb
lret
loop
pop
sbb
dec
mov
sti
xor
push
pop
sahf
cmp
aad
ljmp
scas
mov
icebp
mov
sub
clc
push
push
in
clc
outsl
adc
out
sub
dec
ficoms
dec
out
dec
popf
add
test
jns
jnp
cmpsb
sbb
je
lds
mov
bsr
jl
push
lret
clc
push
inc
cmp
sahf
xlat
pop
mov
jecxz
sahf
inc
add
add
daa
xor
add
clc
adc
pop
and
lock
loop
fiaddl
push
xchg
leave
mov
inc
mov
std
addl
imul
loop
out
imul
pop
xchg
xchg
imul
inc
out
and
and
mov
xor
mov
jp
add
cli
adc
xor
mov
mov
dec
jle
pop
insb
fidivrl
mov
push
sub
mov
xor
fmuls
aas
xchg
sub
dec
dec
outsb
mov
sub
addr16
or
dec
push
repz
fs
add
xor
or
sbb
inc
popf
lock
or
icebp
push
jb
add
mov
sbb
xchg
popa
les
pop
mov
sbb
mov
mov
test
push
jg
push
jge
jp
cmp
gs
je
xor
ds
inc
adc
mov
xor
int
sahf
sub
jecxz
pop
mov
cld
add
pop
dec
add
sbb
fldcw
mov
cmp
dec
loope
popf
cli
xor
and
inc
mov
fisttpl
cmp
data16
sub
bound
pop
mov
test
inc
fsubrl
popf
adc
jle
ret
lret
repz
inc
push
dec
add
jmp
mov
push
int
sub
cpuid
cmp
sub
test
dec
and
cmp
mov
mov
dec
fmuls
cmp
lahf
pop
out
flds
int
mov
pusha
xor
push
cmp
adc
add
add
mov
rcrl
push
push
outsb
sbb
mov
ds
ja
mov
movsb
int3
out
xor
xor
addr16
mov
cs
cmpsb
cmpsb
out
xor
popa
jnp
iret
pusha
out
lock
pop
lds
push
out
jge
subl
cmpsl
and
mov
out
js
cmc
fistpl
enter
lock
bound
xor
pop
movsl
out
test
outsl
in
push
test
js
mov
shrl
imul
add
rcll
insl
sub
jmp
ret
jle
or
dec
orb
mov
lret
mov
xor
jb
pop
pop
and
xchg
lea
fisttpl
adc
fs
outsb
addr16
dec
jle
pop
fwait
into
stos
sbb
out
push
push
dec
push
jp
lods
adc
out
addr16
repnz
cmpsb
adc
test
fadd
test
cmpsl
mov
shrd
mov
bound
jo
mov
pop
xor
js
and
xor
mov
adc
leave
test
cmpsl
test
cmp
fisttpll
adc
and
jge
mulb
je
inc
ljmp
in
aas
xor
cmp
and
test
lret
or
pop
arpl
and
je
movsb
in
jmp
ds
mov
mov
cmovb
mov
jns
lret
jmp
adc
xchg
push
out
jl
popf
adc
leave
sbb
jne
and
ret
movsl
mov
push
ljmp
inc
int3
test
les
je
ficoms
xchg
jmp
out
mov
sbb
aaa
orb
xchg
scas
dec
lahf
pop
ss
cmpsb
fdivl
shl
inc
mov
inc
loopne
or
xchg
sub
mov
xchg
jb
movsb
ljmp
and
call
pushf
ljmp
add
cmpsb
orl
test
into
ret
mov
mov
dec
add
cmpb
in
stc
aad
sub
insl
in
lea
lods
xchg
stos
and
insl
mov
mov
es
lds
mov
test
je
mov
in
push
shll
lods
ret
inc
sti
lock
in
in
fldl
mov
rcl
jmp
mov
push
cli
data16
rcll
push
xorb
xlat
out
sub
out
mov
out
and
fst
mov
mov
push
cmpsl
clc
mov
dec
ljmp
and
cmc
jmp
inc
and
xlat
cmp
fcomps
ss
xchg
nop
and
push
scas
enter
into
add
adc
sbb
adc
lret
into
jecxz
push
lcall
inc
int
push
mov
xchg
and
xchg
adc
jbe
aas
xchg
xorl
mov
fsubr
test
inc
push
cli
outsb
out
push
and
mov
and
pop
mov
insl
lods
fisttpl
adc
xlat
add
add
inc
cld
mov
jmp
fimuls
pcmpeqw
pop
mov
fmulp
addr16
xor
andl
sbb
jns
daa
add
test
dec
pusha
xor
aam
mov
je
mov
xchg
xor
loop
dec
movsl
cmp
xchg
push
inc
call
sar
in
xchg
adc
cltd
sub
or
rcrl
pop
sub
icebp
sbb
or
out
out
cld
aaa
mov
inc
lods
push
out
adc
nop
and
sahf
jae
mov
cmp
les
sbb
add
addr16
cwtl
in
push
or
xchg
clc
jnp
mov
push
pop
and
ss
je
movsl
ds
mov
ja
xchg
dec
or
fsubs
aas
test
xchg
xchg
push
push
sbb
pop
mov
repz
rol
out
out
xor
into
int
cmc
pop
lret
bound
fcoml
inc
pop
bound
sbbl
mov
jnp
inc
mov
add
push
and
jge
sub
out
mov
xchg
sti
xlat
les
lods
dec
adc
repnz
jae
cmpsl
jb
inc
or
inc
call
or
xchg
push
dec
or
mov
js
xchg
xorl
shlb
nop
test
les
sub
jne
cmp
mov
sbb
idivb
xchg
mov
adc
adc
jmp
add
orl
xor
sub
mov
stc
fnstenv
out
in
mov
cmpsb
lret
fwait
rorl
add
imul
adc
and
dec
fildll
inc
or
fsubp
lock
test
test
add
inc
xchg
lret
inc
popa
push
pop
into
testl
pop
push
xchg
hlt
cwtl
aam
sub
hlt
ss
or
ret
dec
into
out
in
inc
gs
adc
outsb
cltd
xor
sar
fdivrl
in
test
in
aam
xor
mov
jae
dec
mov
xor
pop
cmp
lods
sub
mov
jg
xor
lret
xchg
insl
stos
xchg
dec
fstp
gs
cli
dec
add
jecxz
loope
jne
add
outsb
cmc
jp
cmpsl
call
int3
pop
jb
ret
jmp
js
popf
daa
test
jb
jne
adc
pop
dec
sahf
mov
adc
sbb
pop
cmc
icebp
lods
sahf
dec
test
scas
shlb
aas
pop
jae
sbb
call
mov
mov
inc
cmpl
jg
push
cwtl
nop
jno
test
rcrb
fisubrl
push
divl
inc
xor
mov
inc
int3
xor
clc
jg
push
loopne
es
jle
js
dec
repnz
mov
dec
dec
add
mov
xchg
sbb
fldl
mov
xchg
add
scas
enter
dec
cmc
arpl
nop
shr
cwtl
mov
hlt
cwtl
adc
cmpsl
adc
push
cmp
sbb
shr
cs
mov
mov
inc
adc
and
lret
scas
mov
rcll
xchg
mov
xchg
inc
push
or
sub
mov
jle
outsl
ss
dec
pop
lahf
and
adc
arpl
xor
out
cmp
sti
or
dec
sbb
dec
xchg
aas
sbb
mov
add
in
loopne
xchg
in
mov
call
mov
sbb
push
pop
and
ss
outsl
jno
mov
pusha
push
dec
mov
lods
clc
popf
inc
fcoms
into
push
loopne
cltd
call
test
xor
arpl
lds
sbb
jge
adc
sub
out
js
cwtl
inc
dec
push
cmpsl
notl
dec
daa
push
aas
push
mov
pop
dec
inc
and
pop
lahf
mov
xorl
ret
cld
jmp
rcr
sbb
pop
daa
stc
lods
dec
sbb
cmp
aaa
cwtl
cmc
xorb
push
push
xchg
btc
jp
mov
loopne
lods
dec
jae
test
cmp
or
les
adc
and
fimuls
lahf
mov
adc
bound
rolb
arpl
add
aaa
shl
loopne
fwait
orb
bound
jp
sub
movsl
dec
mov
ljmp
adc
cwtl
mov
fcom
ljmp
pop
movsb
sub
mov
sbb
arpl
mov
idivb
adc
iret
jmp
sbb
jno
das
icebp
xchg
shll
sbb
xchg
test
cmp
mov
mov
sbb
ss
and
jmp
mov
inc
aaa
loop
push
lods
into
pop
imul
mov
pushf
mov
in
cmp
test
pop
movsb
adc
mov
push
xchg
call
sbb
xchg
adc
fcomps
in
mov
faddl
jno
or
aas
pop
std
add
movd
js,pt
in
and
popf
xchg
ret
jecxz
mov
roll
ficoms
xlat
jg
shrb
pop
pop
adc
test
inc
jge
push
insl
inc
in
or
push
fldcw
aaa
push
sti
jb
shlb
mov
movsl
mov
pop
daa
push
mov
pop
jg
ret
or
ss
pop
in
scas
ret
mov
out
dec
loop
pop
mov
int3
bound
xchg
leave
ds
daa
pop
shrb
pop
nop
cmp
pop
ljmp
and
fstpl
in
sbb
jl
nop
insb
mov
add
add
ja
push
xchg
call
scas
add
mov
push
xchg
push
push
sub
shll
mov
pop
and
mov
jb
aas
xor
mov
xchg
sub
mov
mov
xchg
fwait
shll
in
adc
jle
adcl
xchg
xchg
mov
das
jmp
ja
cmpsb
dec
xchg
adc
fnsave
inc
lock
aas
orl
jbe
jge
test
jae,pt
push
lcall
out
mov
lahf
cld
stc
jmp
or
fisubl
dec
iret
stos
leave
sub
cmp
mov
push
xchg
fcoml
or
push
push
es
xchg
repnz
insb
out
sbb
repz
cmc
add
inc
lahf
in
cmp
inc
add
cmp
add
jle
pop
das
lods
in
int3
push
into
cmc
call
mov
nop
xlat
push
mov
scas
xor
negb
push
nop
aad
xchg
int3
and
lahf
add
push
cmc
mov
adc
outsl
xor
add
xchg
into
mov
int
std
insb
je
mov
idivl
pop
fisubl
rorb
dec
sub
push
int3
inc
dec
out
add
aad
enter
cmpsb
aas
sub
sarl
test
cmp
sub
xor
rorb
push
cs
push
ret
jmp
clc
inc
adc
or
and
aam
fwait
aaa
push
loop
shll
mov
xchg
xchg
subb
pushf
fucom
in
call
mov
inc
inc
mov
dec
in
jl
jle
pop
push
add
out
mov
dec
fs
dec
cmp
js
loopne
push
repz
daa
add
and
jo
xor
dec
xchg
jle
pushf
mov
popf
pusha
ret
out
mov
out
jl
xor
jge
mov
mov
jle
mov
pop
nop
xchg
or
rcrb
orl
test
es
push
mov
jmp
or
sub
lahf
cmp
lock
xchg
xlat
sbb
imul
dec
fsubrs
insl
push
sub
xchg
xor
into
fistpll
adc
push
and
fdivrl
test
jmp
mov
mov
push
xor
dec
cmp
jmp
movsb
mov
jg
sbb
inc
jle
lds
mov
mov
in
push
inc
cs
dec
xadd
xor
pop
sub
test
sbb
or
jmp
dec
js
jecxz
in
xor
scas
sbb
test
cmp
push
fs
fwait
dec
out
mov
add
and
xchg
pop
cmc
pop
repnz
push
sub
je
push
jmp
sub
inc
and
mov
aam
push
sub
stos
sbbb
cmp
popa
xor
mov
jl
cmp
imul
out
fmull
dec
mov
scas
and
shlb
sbb
xor
adc
pop
mov
xchg
xchg
push
push
outsb
xchg
mov
and
lcall
adcb
push
sbb
int
fwait
lea
mov
sub
imul
jae
jo
aad
negb
shll
jnp
or
dec
sahf
adc
in
add
les
ficomps
scas
mov
ja
int
repz
xor
out
rcr
ss
pushf
mov
xor
sbb
cmp
mulb
rolb
xor
inc
loopw
imul
xchg
jae
scas
lret
es
fwait
cmp
inc
adc
ret
xlat
fcmovu
ja
aas
in
mov
lds
ret
scas
push
mov
addb
aad
mov
shll
mov
into
leave
sbb
mov
dec
mov
es
addr16
sbb
pop
out
leave
mov
pop
sub
push
sbb
cmp
and
sbb
ret
cmp
int3
out
push
add
aaa
rol
pop
xchg
nop
xchg
jl
imul
mov
sbb
inc
pop
cmpsl
sbb
dec
aad
pop
mov
jle
or
adc
scas
test
mov
or
jnp
cwtl
mov
dec
lret
add
xchg
fwait
lahf
add
or
mov
rcrb
into
lds
xchg
or
jge
jge,pn
push
or
xchg
xchg
loop
sbb
sbb
test
out
stos
hlt
daa
in
lahf
xchg
lahf
adc
inc
xchg
sub
cltd
out
incb
imul
cld
mov
adc
or
stos
mov
sbb
add
jl
inc
adc
mov
insb
sub
push
xchg
idivb
pop
add
cld
mov
mov
mov
mov
imul
pop
inc
jae
push
jb
add
fnsave
cmp
arpl
lret
inc
push
push
mov
cmpsb
aam
adc
les
xor
jo
shrl
push
dec
mov
and
pop
cmp
mov
inc
pop
pop
cwtl
jecxz
mov
push
push
mov
inc
jb
enter
mov
idivb
adc
bound
cmpsl
sbb
add
ss
jbe
call
xor
pop
std
insb
cwtl
and
js
dec
push
dec
repnz
cmp
jg
mov
mov
out
lret
fcmovb
call
hlt
xchg
loopne
fcoms
or
dec
sbb
jns
mov
mov
xor
loop
loopne
mov
subl
nop
shlb
inc
sti
mov
xorb
jb
into
lahf
pop
jae
and
push
imul
mov
fwait
stc
imulb
stos
lods
jg
and
decb
outsl
xchg
ds
xchg
jb
pop
pop
adc
or
dec
mov
insb
inc
fimuls
push
mov
stos
or
ret
les
bound
push
jb
mov
cmp
mov
push
hlt
pop
ljmp
sbb
mov
decb
mov
aaa
repnz
sarl
or
test
mov
leave
cmp
int
insb
ja
mov
daa
mov
pop
pop
loop
insb
cmp
mov
andl
stc
scas
inc
ret
sbb
hlt
sbb
dec
aas
pusha
xchg
movsl
rcrb
daa
jp
sub
mov
das
push
inc
cwtl
add
cmc
adc
lcall
fcompl
aaa
mov
sbb
push
lret
mov
mov
mov
jae
adcb
jnp
push
jb
fs
into
jns
int
pop
xchg
leave
dec
cmp
es
jmp
push
jecxz
ret
push
pop
adc
dec
cwtl
mov
int
iret
insb
jg
cli
push
mov
jae
sbb
add
mov
pop
adc
mov
movsl
xchg
cmp
add
dec
fwait
sub
je
mov
mov
jbe
orb
dec
and
mov
rorl
lods
mov
cwtl
repz
adc
push
mov
inc
xchg
xlat
push
pop
mov
icebp
push
xchg
mov
inc
loopw
cmpsl
pop
mov
adc
rcll
mov
jle
ds
mov
dec
test
mov
push
xchg
sbb
out
pop
and
out
mov
sti
cmp
insl
dec
fwait
aad
add
cmp
mov
daa
xor
loop
inc
pop
es
orl
jno
mov
imul
sub
fdivrl
and
mov
inc
sbb
pop
hlt
mov
mul
inc
cmp
jnp
xchg
push
mov
cld
pop
mov
pusha
or
sub
push
mov
stc
push
xlat
sub
pop
push
fistps
inc
sbb
lret
adcl
jecxz
xor
movsb
and
daa
xor
lcall
xor
ja
dec
mov
pushf
cwtl
fldl
cmp
sbb
mov
add
je
mov
jmp
push
cmpsl
or
cmp
pop
fsts
imul
shlb
mov
adc
dec
adc
mov
jo
pop
jb
sbb
addr16
xchg
insb
les
std
ja
add
arpl
and
mov
les
and
das
movsl
test
jl
inc
fsubrl
ret
jecxz
inc
or
orb
xor
data16
out
push
sub
roll
adc
and
sahf
xchg
bound
or
inc
cmp
mov
scas
pop
jmp
aaa
aaa
js
xchg
and
inc
test
sahf
mov
loopne
sbb
les
jecxz
xchg
lds
loop
and
cmp
sbbb
xor
and
js
push
mov
xor
icebp
sub
jp
cmpsl
stos
adc
push
nop
and
mov
fdivl
daa
add
sbb
jp
out
test
shrl
inc
stos
pop
inc
pusha
imul
xchg
scas
je
push
xchg
aad
dec
into
into
fidivs
adc
arpl
loope
inc
inc
lahf
cmp
inc
insl
js
cmc
sti
test
or
shl
pop
jecxz
rorb
sbb
xchg
sbb
nop
sub
subb
aas
pop
mov
fldenv
test
xchg
inc
loopne
xor
int3
ss
and
pop
or
lods
int
or
lods
dec
cmp
adc
add
jecxz
jnp
add
pop
stos
pushf
mov
xor
icebp
ret
and
sub
pusha
pop
push
push
into
scas
xchg
mov
inc
pop
roll
dec
dec
movsl
add
xchg
mov
int
mov
and
je
or
outsl
push
inc
fstps
loopne
dec
in
xor
mov
pop
xchg
roll
orl
imul
xchg
pushf
pop
mov
lea
sub
insb
sbb
test
in
mov
cmpsb
jb
into
mov
inc
pop
out
sti
jg
sub
or
inc
ret
jnp
push
cmpl
push
out
dec
pop
pop
es
jnp
lret
jo
dec
fidivs
out
aad
js
clc
xlat
add
lock
enter
gs
inc
fildl
mov
mov
call
repz
cmp
jbe
sub
sub
sarl
dec
xchg
scas
cmp
push
mov
in
out
cmp
dec
ja
dec
sti
cmp
inc
mov
nop
iret
pop
and
push
andl
push
clc
cli
out
xor
jg
lret
jecxz
les
cli
inc
mov
mov
dec
imul
jnp
out
dec
mov
sub
mov
lock
push
scas
sbb
mov
pop
jns
mov
mov
ja
add
mov
push
bound
cmp
cs
ret
jmp
pushfw
xor
mov
or
dec
and
popa
out
adc
das
decb
push
xlat
ja
ret
sbbb
mov
jbe
adcl
and
mov
cs
fldl
pushf
dec
push
orb
xchg
test
test
ds
or
fwait
arpl
sbb
sub
pop
out
cmp
push
or
jne
xchg
jge
mov
push
xor
in
adc
dec
or
lods
cmp
dec
daa
aad
std
sbbb
sti
out
mov
adc
stc
out
fcomps
int3
cmp
jo
jmp
mov
push
pop
out
shll
pop
push
repnz
sbb
int
mov
add
cmp
jns
int3
lods
bound
rcll
fcomps
cmp
inc
std
pop
outsb
sub
push
fadd
dec
icebp
incb
lahf
and
jnp
aas
cmpsb
and
mov
lcall
mov
sarb
mul
xor
out
jecxz
in
mov
lret
int3
sbb
sub
mov
ret
xor
mov
add
aad
mov
aam
xor
mov
fcoms
push
push
pushf
push
fdivl
mov
lcall
cmp
ss
outsb
aaa
inc
mov
pop
or
aaa
daa
inc
lahf
xchg
sbb
cmp
mov
mov
loop
add
mov
test
out
test
mov
dec
hlt
adc
add
fidivl
lret
fbld
mov
mov
lods
ja
out
add
insb
test
mov
std
cld
or
insb
stos
fimuls
pop
test
vmwrite
xlat
xchg
dec
adc
add
cmp
push
xchg
and
xchg
or
sub
lea
insb
jo
cmp
imul
hlt
sub
hlt
adcl
sub
clc
sbb
mov
in
xor
cld
push
lods
repnz
ret
ljmp
push
mov
push
pop
sbb
sbb
xor
outsb
dec
shl
adc
pop
int
lods
cld
loope
jle
pop
fdivrs
sbb
scas
cmp
inc
rclb
decl
jg
subl
mov
lret
mov
mov
mov
outsb
insl
jno
repnz
mov
insl
jbe
mov
daa
mov
movsb
adc
push
pushf
inc
jno
or
in
dec
mov
adc
mov
test
popa
inc
mov
mov
inc
xchg
test
push
pop
and
pop
movsb
push
movsl
cmp
push
into
popf
and
dec
movsb
test
jge
add
and
mov
cld
cld
fwait
hlt
out
push
pop
sbb
sub
and
jg
repz
pop
pop
in
fmul
adc
negb
jno
addr16
mov
or
pop
aad
pop
daa
ficoms
sbb
jge
lcall
ljmp
cld
mov
les
add
sbb
sbb
pop
test
icebp
add
jno
jge
mov
mov
pop
das
xchg
jmp
icebp
push
fxch
sbb
dec
or
inc
cmc
orl
mov
and
pop
das
lds
loope
testl
outsl
cmpsb
sub
mov
and
in
pop
jne
push
add
pop
inc
in
jnp
sbb
scas
arpl
outsb
mov
mov
fisubl
and
lret
stc
xchg
sub
push
lds
popf
mov
or
fwait
loop
mov
outsb
shll
out
jb
sub
xchg
cltd
mulb
mov
pop
fstpl
sbb
adc
dec
subb
fisttpll
jne
movb
jecxz
data16
dec
jg
repz
repnz
push
test
jecxz
roll
sub
ret
xchg
and
lock
ss
leave
sarl
int
inc
stc
mov
lock
loop
ljmp
mov
dec
mov
or
stos
cmp
lock
sub
addr16
pusha
pop
pop
pop
bound
push
int3
testl
push
cmp
jg
xor
push
pop
or
mov
cs
dec
out
or
jp
mov
mov
cmc
jno
out
sahf
out
or
lods
divl
or
mov
bound
fs
adc
jmp
jbe
dec
mov
insb
mov
pop
xchg
imul
stos
push
push
es
fidivrs
mov
fimull
ljmp
xor
pusha
push
mov
mov
push
xchg
stos
inc
xor
daa
mov
cli
pop
je
inc
popf
faddp
lods
int3
or
inc
cmc
mov
or
mov
mov
mov
sub
pop
cmp
inc
xchg
loope
fisubs
push
mov
sbb
ret
cmp
in
lret
rol
lcall
ljmp
mov
xchg
das
pop
and
arpl
adc
mov
popf
pop
sbb
jae
inc
orb
inc
test
mov
data16
into
out
xlat
sbb
jmp
clc
adc
jbe
js
add
cwtl
cmp
xor
jno
cmp
and
xchg
ljmp
sbb
dec
in
fimuls
mov
es
loop
jns
test
std
or
sbb
cwtl
or
les
in
outsb
sub
jb
clc
push
pushf
and
xchg
jmp
sarb
ror
jge
loop
jo
pop
xchg
xchg
add
dec
xchg
xchg
sbb
rolb
pop
test
jae
ja
cltd
jae
dec
test
cmpsb
outsl
mov
push
stos
cmpsl
lds
in
cs
mov
sbb
lcall
add
dec
fsubrp
sub
dec
dec
or
ja
flds
or
mov
pop
sub
fists
aas
enter
stc
add
scas
loopne
cs
fdivs
adc
in
popa
jno
mov
sbb
in
pushf
and
xor
pop
jp
ret
and
lret
sub
xchg
nop
adc
and
js
pusha
mov
mov
adc
pop
lret
lds
rcrl
inc
lret
sub
pop
mov
xor
test
add
cmp
test
sarl
cmpsl
rcl
mov
mov
push
cmpsl
inc
stos
test
xchg
outsb
xchg
repnz
shll
dec
push
pushf
xchg
shlb
out
les
sarl
aad
popa
mov
andl
leave
popa
daa
xor
clc
enter
sub
or
mov
sbb
outsl
dec
mov
sbb
lcall
popa
add
in
or
cmp
out
add
dec
jle
es
pop
push
adc
jno
sub
daa
mov
aam
inc
pop
rcrl
andl
ja
push
test
cli
xchg
fdivl
inc
sub
lock
sbb
fcoms
inc
int3
cwtl
sbb
imul
je
cli
pop
sbb
push
jmp
push
je
mov
dec
imul
pop
nop
sub
repz
in
cmp
xchg
out
insb
fmull
sbbb
iret
cmpsb
cmc
leave
cmpsb
cli
lcall
dec
lcall
and
in
xchg
xchg
addr16
inc
nop/reserved
xchg
bnd
arpl
hlt
aad
inc
xchg
fdivrs
mov
cld
and
stos
xchg
in
jle
xchg
and
inc
lea
jle
pop
in
mov
sbb
fyl2xp1
fsubl
mov
mov
clc
cli
rcrb
cwtl
sub
cmp
adc
add
sti
daa
push
dec
or
loope
ss
je
sbb
jp
movsb
bound
inc
pop
adc
xor
jge
pop
out
fwait
sbb
enter
aaa
fwait
addr16
mov
faddl
clc
arpl
mov
pop
insl
iret
out
mov
mov
call
in
sbb
in
push
jg
cwtl
mov
and
bound
or
push
das
mov
xchg
cli
out
movsbl
jne
fnstenv
fdiv
shrb
cmp
scas
daa
add
loop
pop
push
adc
mov
outsl
jb
pop
dec
ds
enter
and
xor
mov
inc
fdivs
mov
addb
or
jo
and
mov
add
int3
inc
in
loope
push
lcall
sbb
in
sbb
ja
addr16
lahf
pop
xor
pop
push
push
outsb
jns
jno
cmp
jb
call
mov
stos
pushf
push
mov
repz
ret
xor
push
xchg
dec
mov
jb
mov
data16
jl
sbb
int3
sbb
push
adc
push
and
inc
dec
stc
inc
std
add
in
orl
jle
stos
lea
les
xor
cli
adc
loop
lret
jnp
push
movsb
lret
jecxz
jbe
mov
shlb
dec
pop
lea
rep
push
or
push
add
sub
test
mov
or
test
out
fisubrs
xchg
adc
mov
push
or
das
into
cld
mov
xor
push
sbb
mov
je
pop
pop
outsb
sbb
mov
out
inc
adc
xlat
xchg
icebp
adc
es
in
mov
and
decb
mov
xchg
fadd
adc
dec
sbb
aaa
scas
bound
or
in
int
lret
pop
push
xchg
mov
cmp
jl
sbb
adc
insb
adc
icebp
fnsave
mov
or
sbb
inc
jmp
xchg
fwait
xchg
jae
test
sbb
out
fwait
mov
mov
add
fdivl
push
call
pop
xchg
jle
lret
rolb
jl
and
jns
pusha
rcrb
mov
imul
mov
mov
xor
or
pop
clc
lcall
mov
pop
pop
pop
add
xor
inc
sbb
scas
or
mov
sub
jl
inc
and
jbe
xchg
xor
push
push
push
and
stc
dec
insb
push
add
call
std
pop
pop
lcall
icebp
enter
pop
lret
lcall
stos
jecxz
in
lods
out
scas
xor
ja
lret
aam
fwait
sbb
lods
mov
xchg
inc
dec
add
lcall
inc
mov
in
sub
mov
xchg
adc
dec
call
sub
adc
in
hlt
mov
fldt
repz
adc
insb
pop
mov
leave
ds
and
mov
push
pop
cld
rcrb
out
inc
test
in
es
imul
sub
xor
pop
and
pop
xor
aam
cmp
adc
rorl
icebp
subb
pushf
jle
mov
stos
cmpl
mov
jnp
repnz
inc
jp
or
ss
cli
adc
fdivrl
pushf
add
dec
jb
ss
add
mov
iret
cmp
loope
xchg
test
dec
imul
outsl
movsl
ja
out
clc
jae
and
ret
movsb
xor
lret
cmp
cmp
dec
imul
sarl
mov
and
sarb
and
xor
xor
jno
fdivrl
lock
addr16
dec
lods
int
jmp
xchg
arpl
cld
outsb
std
mov
xchg
push
in
mov
adc
cmpsl
pop
mov
push
popf
xor
sbb
push
ss
out
iret
jmp
inc
fcomi
int
jp
data16
pop
out
jg
rorb
aam
dec
inc
in
xor
popf
lds
inc
loop
mov
jp
inc
xchg
push
push
pop
loop
mov
pop
test
mov
mov
sbb
jae
imul
ljmp
repz
or
lea
jmp
cmp
pop
ljmp
scas
mov
icebp
es
shll
aaa
inc
inc
fidivs
push
repnz
inc
adc
xchg
rorb
adc
jmp
mov
adc
inc
mov
mov
addr16
lret
lods
xor
adc
sub
vmread
add
sbb
mov
xor
and
mov
mov
stos
test
ljmp
jecxz
stos
mov
leave
pop
cmpsl
sub
loop
jne
out
jnp
filds
sahf
pop
out
in
notb
adc
cli
sub
enter
jle
dec
lds
scas
sahf
sbb
lret
xchg
int
das
xor
jle
lods
clc
idivb
mov
xchg
and
loope
jnp
mov
std
pop
test
pushf
fidivrs
sub
ljmp
jb
push
mov
sti
xchg
scas
shrl
adc
adc
lea
jns
or
shll
and
lds
cld
in
sub
xchg
loope
loopne
int3
outsb
sub
lods
not
jnp
inc
push
mov
or
repnz
addb
cmpsb
out
sbb
aaa
shlb
aas
mov
std
adc
test
inc
sbb
xor
push
and
xor
sti
xor
fwait
jl
cmc
cmp
cmc
rolb
xchg
lcall
notl
mov
out
xor
sbb
jmp
inc
push
sti
sbb
jnp
jge
xor
addr16
or
add
insb
cmp
sbb
scas
enter
mov
idiv
and
xorb
aad
cmp
call
aaa
js
mov
adc
inc
fcomi
inc
and
and
sub
inc
cmp
cli
ss
pop
pop
pusha
inc
fstps
cmpsl
jb
xor
stc
lds
jmp
cmp
test
mov
ret
stos
movsb
jne
inc
iret
out
pop
shll
insl
cmp
mov
movsb
push
stc
sti
cs
int
insl
dec
mov
or
dec
mov
jno
repnz
scas
jg
adc
gs
imul
mov
adc
mov
cmp
jle
das
xchg
push
mov
xchg
stos
mov
jmp
subl
and
pusha
int3
aas
inc
mov
push
dec
mov
sub
fadds
jle
clc
loop
inc
xchg
add
cli
movsl
dec
dec
imulb
cmp
push
push
fists
cwtl
scas
gs
mov
inc
dec
into
mov
cmpsb
fsubs
movsl
inc
lea
push
pop
and
and
add
rolb
lahf
sbb
push
loop
jecxz
cld
frstor
sub
ror
dec
fnstcw
fadds
push
stc
push
sub
dec
movsl
clc
push
test
mov
cmp
mov
mov
aaa
lods
and
into
icebp
in
insl
ret
testb
call
test
popa
test
stos
into
pop
push
out
je
rorb
shll
ljmp
fdivs
lods
jo
insl
nop
out
cmc
cmp
xchg
mov
fldlg2
xchg
outsb
add
push
test
mov
cmp
fs
scas
stc
loopne
mov
leave
movsl
push
testb
jno
mov
sarb
std
stos
lret
pop
fdivl
cmp
pop
add
inc
addl
lahf
adc
jno
sar
cmp
mov
test
sbb
or
push
adc
sbb
xchg
cmp
clc
pop
and
pushf
xchg
cmc
in
sbb
pop
jp
dec
jo
stc
mov
sub
call
test
clc
xchg
mov
cmp
sub
shl
pop
rorb
push
fwait
nop
jmp
aaa
call
loopne
cmp
fsubs
insl
std
mov
shr
push
jb
jns
pop
popa
xchg
gs
adc
je
lods
aaa
xor
mov
adc
pushw
popf
inc
pop
lret
and
leave
test
ret
push
add
idivb
sbbb
js
cmpsb
adc
xchg
push
js
insl
dec
sarb
fdivrs
inc
lds
add
mov
xchg
mov
mov
dec
xor
jne
push
fcos
or
cld
popa
gs
pop
rcrb
sbb
bound
in
adc
lahf
adc
sbb
or
loopne
pop
push
inc
mov
mov
add
sbb
cltd
mov
sbb
shrb
call
adc
scas
or
movsb
and
nop
xor
or
mov
mov
js
mov
dec
mov
adc
repz
jnp
inc
cmc
rolb
ljmp
adc
arpl
dec
cmp
adc
and
mov
rolb
sbb
test
xchg
inc
xor
cld
inc
jno
lock
and
mov
movsl
jge
xchg
cmp
dec
les
scas
push
outsb
push
sub
xchg
fmulp
pusha
push
mov
cmp
and
stos
andb
jae
cld
inc
xorb
shl
mov
aas
fbstp
pop
mov
icebp
stos
cs
enter
gs
pop
jnp
inc
sbb
push
outsl
movsb
push
or
clc
cltd
mov
fisttpl
ss
and
lret
adc
inc
sub
hlt
outsb
repnz
rclb
adc
mov
je
push
push
stos
push
jp
xchg
adc
mov
jmp
scas
adc
cli
leave
popf
pop
bound
mov
cmp
imulb
insl
xchg
inc
add
bnd
adc
mov
dec
dec
adc
dec
adcl
pusha
inc
cmc
fcomp
cmp
sbb
mov
jmp
mov
pop
push
inc
push
sub
shll
sub
push
outsb
inc
aaa
es
outsb
lcall
lret
int3
clc
jne
sub
aaa
test
jae
cmpsb
dec
jecxz
adc
push
cltd
xchg
pusha
mov
mov
jns
sub
push
sub
in
jne
shll
movsl
sub
mov
fcmovbe
mov
adc
sbb
outsl
scas
scas
mov
push
mov
nop
adc
sub
sbb
test
out
jmp
loop
push
sub
nop
mov
int3
mov
mov
sahf
or
insb
fidivs
loope
shll
inc
sti
adc
clc
jnp
lods
pusha
je
dec
push
mov
lock
outsb
push
cld
adc
jnp
hlt
add
lock
jae
loope
mov
cmpsb
pop
mov
mov
inc
xor
push
xlat
fdivrp
fisubs
push
xchg
mov
sbb
gs
dec
loop
or
push
aas
in
cwtl
pusha
enter
inc
push
ds
jl
rcl
rolb
or
jl
mov
mov
xchg
cmp
push
test
jo
orl
ds
cmpsl
push
mov
inc
cmpsl
xchg
add
or
dec
ffreep
adcl
push
out
mov
cltd
daa
xor
sbb
nop
divb
pop
cwtl
in
mov
cmpsb
daa
cmpsb
and
mov
mov
mov
xlat
and
lcall
sahf
inc
fdivrs
jmp
pop
in
cltd
dec
int3
add
mov
mov
add
push
in
stos
sub
sub
push
stos
inc
push
pop
daa
aas
ja
pop
rep
cmp
push
test
cwtl
xchg
cmp
std
push
xchg
push
fstl
rorl
xor
xchg
cwtl
sbb
sub
cmp
ss
lock
jl
xchg
loope
aaa
icebp
sub
sub
mov
shr
lds
sbb
mov
popa
imul
cmpsb
inc
pop
sbb
sub
push
push
cltd
xchg
les
out
pop
loope
aam
cltd
testb
lret
pop
pop
cmc
repnz
add
mov
and
xchg
repnz
xchg
lcall
fildll
cld
rorb
stc
xchg
iret
push
pop
loope
imul
in
daa
xor
call
popf
rcrl
cmp
add
aaa
movsl
lock
daa
mov
popa
arpl
adc
pusha
fcompl
into
sub
xchg
mov
repnz
push
mov
or
xor
xor
push
int3
pop
stos
pop
pop
insb
jmp
pushf
fisubrs
fdivl
inc
shl
dec
cmp
inc
iret
fsubl
sbb
out
mov
jae
mov
lret
jge
gs
ja
xchg
ss
inc
lea
mov
in
mov
adc
mov
pop
or
pop
push
cmp
xacquire
sti
mov
add
sbb
and
mov
jmp
je
es
jbe
sub
pop
mov
xchg
or
xlat
rcr
pushw
in
rorl
cmc
cld
fsubl
shlb
and
jp
lret
xlat
jp
sahf
pop
sbb
cmc
cmc
sub
xchg
dec
fstpl
syscall
add
push
rcll
scas
ds
xchg
rorl
mov
xor
pop
cs
mov
fidivrl
sub
cltd
pushl
push
enter
mov
or
sbb
repnz
sbb
addb
popa
inc
loopne
sar
setp
stos
push
push
leave
mov
dec
sub
and
outsl
pop
jae
sbb
scas
imul
cmp
mov
scas
inc
mov
dec
repnz
and
push
jl
movsl
mov
orb
inc
xor
ds
int
push
adc
cmp
pushf
pusha
xchg
push
or
fwait
push
xchg
mov
fcmovu
das
lods
mov
or
cmp
or
add
popf
jge
xor
mov
bound
and
cmp
adc
out
sub
outsl
jne
mulb
fucomi
cmp
mov
cmovb
es
or
repz
scas
dec
mov
mov
stos
adc
push
dec
pop
loope
lret
sub
jnp
aad
aad
inc
test
sahf
mov
cmp
aad
out
pusha
mov
mov
pop
test
and
inc
mov
mov
movsl
mov
jne
adc
jnp
fucomip
inc
stos
aam
ret
push
lret
outsl
xlat
jp
js
mov
push
imul
aam
je
out
mov
data16
imul
mov
mov
into
fisttpll
lret
stos
aam
in
mov
mov
adc
pop
movsl
popl
ret
out
jae
sbb
test
mov
das
mov
mov
or
stos
sub
cmpsl
stc
add
rol
icebp
das
inc
fisttpl
dec
cmp
fcomi
arpl
in
push
jno
inc
push
lea
sub
popa
dec
cmp
imul
dec
pop
inc
in
jp
out
jns
or
mov
jl
movsb
shlb
dec
sbb
insl
jb
out
mov
xor
pop
or
and
dec
stos
ror
or
insl
out
insb
nop
rcrl
push
mov
push
orb
xlat
adc
xchg
pop
or
dec
add
cmp
loop
in
inc
ljmp
lock
mov
jne
cwtl
cwtl
hlt
out
pop
cwtl
push
sub
daa
add
dec
and
lock
ret
pop
and
ljmp
insb
xlat
add
rol
push
mov
jl
inc
sbb
pusha
icebp
push
sub
repnz
mov
xlat
rsm
cs
call
push
into
std
pushl
and
neg
mov
lock
xor
or
pop
xchg
cmpsl
fisttps
in
inc
retw
test
js
dec
mov
rorl
daa
fwait
cli
outsb
js
jl
andb
mov
aad
scas
add
pusha
lods
dec
daa
lods
dec
mov
std
xchg
xor
out
dec
jns
and
and
jge
push
pop
arpl
fsubl
stos
push
scas
jb
sbb
imul
sbb
in
push
xor
outsb
jae
cmpsl
rcll
jns
scas
dec
test
std
cwtl
iret
imul
pop
add
pushf
and
xchg
adc
xchg
repnz
xorl
cmc
les
repnz
mov
icebp
test
cli
adc
pop
lahf
std
movsl
pusha
daa
adc
and
int
pop
je
and
push
mov
jmp
and
sub
mov
mov
icebp
sti
arpl
das
push
xor
inc
rolb
into
and
aad
sub
sbb
cmp
or
dec
or
and
or
xchg
push
cmp
enter
xchg
je
jbe
out
add
mov
jns
inc
sbb
and
or
xor
jo
enter
in
imul
aad
xchg
pop
mov
in
cli
lret
test
test
addr16
lods
iret
mov
xchg
stc
in
mov
mov
lea
pop
or
push
movsl
aas
or
mov
mov
mov
sub
scas
int
repnz
or
lods
or
sbb
pop
pandn
xchg
lea
and
int
divl
out
mov
seto
sbb
add
movsl
into
dec
repnz
sarb
cwtl
sub
cld
aas
cmp
adc
fcoms
or
xchg
clc
adc
inc
nop
lock
mov
ljmp
fnstcw
stos
jecxz
sub
pop
xchg
xchg
loopne
cmp
mov
add
sub
rolb
int
ds
jns
scas
in
dec
push
imul
stos
adc
es
xchg
mov
inc
xchg
fdivrp
out
orl
ss
jl
psubq
pop
mov
inc
push
sets
popa
addr16
cmp
sub
fwait
hlt
outsl
cmp
mov
pusha
ja
pop
jnp
idivb
add
fst
call
and
add
push
mov
in
fs
fisubl
bound
inc
test
ret
mov
test
into
cmp
sub
jae
mov
popa
or
lret
loop
add
mov
pop
mov
cs
dec
int
mov
hlt
imul
jl
mov
cmp
dec
pop
inc
cltd
js
aaa
pop
enter
add
loope
out
movsb
cwtl
pop
jns
cmp
mov
rclb
icebp
adc
outsb
dec
jbe
and
pusha
test
stos
cmp
add
push
scas
int3
bound
icebp
movsb
inc
add
sti
sub
or
sbb
fwait
cmpsl
push
ret
cmpsb
mov
add
test
cmpsb
dec
adc
inc
inc
aam
mov
mov
cmpsb
test
jl
jge
push
mov
inc
incb
ss
arpl
pushf
fwait
jl
lcall
fistl
aam
ds
jnp
lcall
std
mov
cmp
int3
add
ret
lock
sarb
push
sub
add
aam
and
aad
xchg
mov
xchg
mov
rolb
add
mov
sbb
and
in
or
push
movzwl
js
sub
xor
sbb
xor
add
cmp
adc
loope
mov
mov
addr16
test
in
in
movsb
pusha
and
ror
sub
xchg
in
inc
out
icebp
push
push
lea
push
hlt
pop
xchg
mov
jmp
fcmovb
aas
pop
ljmp
in
enter
repnz
push
push
push
js
mov
pusha
inc
xor
ret
shl
and
in
scas
add
ret
mov
mov
or
ficoms
sbb
pop
dec
mov
and
and
cli
lds
pop
jle
lcall
xorl
in
sbb
movsl
and
or
and
push
or
add
test
lods
sub
xchg
rcrb
rcll
sub
mov
sub
movsb
xor
add
mov
jno
insl
pop
push
sti
sbb
pop
pop
jns
rclb
jb
xchg
std
push
clc
lds
loopne
push
dec
call
insl
inc
jp
pop
xchg
push
push
cmp
xor
xor
call
popf
call
inc
mov
lret
mov
or
in
repnz
pushf
jno
idiv
sbb
cmp
incl
mov
ja
xchg
das
pop
xor
subb
xor
xor
enter
lods
into
shrb
and
gs
std
add
mov
push
mov
push
jae
inc
ljmp
mov
mov
sti
pop
mov
adcb
add
mov
pop
adc
push
cwtl
cmp
flds
push
rcr
outsl
cld
dec
int
ss
cmp
jo
rcll
in
iret
fstps
pop
jp
out
enter
out
dec
dec
enter
out
dec
int3
inc
jbe
or
stos
xorb
push
addr16
add
sub
adc
pop
dec
inc
lods
pop
sub
mov
inc
sbb
cmpsb
stos
push
das
sub
pop
out
inc
sub
stc
aam
xor
stos
and
icebp
cmp
pop
loop
outsl
inc
dec
jns
mov
xchg
and
dec
adc
in
mov
fnstsw
add
sbbl
imull
imul
out
fs
ja
or
push
lcall
xlat
jle
sahf
stos
push
jbe
push
adc
push
or
dec
pop
shrl
mov
lahf
cmp
test
xor
inc
jb
or
jge
ret
pusha
ret
cmc
je
loop
testb
ljmp
pop
sahf
std
lret
movsl
dec
lock
xor
cmp
xor
push
jne
lods
pop
push
lcall
xchg
and
jae
stos
jns
pop
sbb
and
lcall
movsl
and
sbb
in
iret
pop
movsb
cmpsl
or
cmpsb
loope
dec
jmp
ss
stc
hlt
popf
or
lahf
stos
test
dec
loop
sbb
and
sub
push
in
sub
out
and
and
flds
mov
mov
sbb
stos
and
andb
out
aad
sarl
add
add
sub
mov
push
sti
cmpsb
push
mov
test
pop
add
xchg
jg
inc
dec
cmp
dec
push
sti
movsl
scas
inc
ret
in
jne
push
in
cld
mov
rcll
aad
pop
xchg
push
dec
mov
pop
das
les
sub
lret
xor
sbb
add
add
je
loop
repz
ss
mov
out
dec
imul
mov
lods
and
sar
jmp
lock
or
lret
nop
push
and
mov
sub
cmp
loop
sub
test
dec
or
sbb
xchg
pop
push
mov
xchg
fisubrl
sub
inc
xchg
dec
mov
in
jle
int3
sbb
jp
adc
out
sub
inc
sahf
adc
jle
fidivrl
inc
out
in
inc
das
or
das
jl
sub
and
mov
or
jecxz
push
add
jns
add
mov
and
xor
xchg
hlt
adc
adc
pop
sub
and
cmp
adc
mov
les
sbb
adc
xchg
and
faddl
fnstenv
pop
fiadds
out
shl
aaa
sbb
fstl
inc
aaa
lret
lds
jg
out
pushf
jo
mov
jl
or
sbb
xchg
jmp
scas
insb
xadd
outsl
push
repz
sti
cmp
inc
rcll
lret
fs
dec
inc
mov
repnz
jnp
decb
cmp
pop
fdecstp
sbbl
rorl
jmp
pop
pop
movsb
pop
xchg
mov
mov
mov
aam
mov
push
pop
and
ljmp
push
push
jl
push
mov
subb
imul
dec
hlt
outsb
stos
mov
insb
incl
xchg
xor
in
arpl
or
les
out
or
mov
sub
xlat
ret
sbb
loope
imul
sbb
push
nop
inc
stos
xchg
sti
xor
pop
jbe
cmc
xchg
addr16
lret
rcl
mov
fwait
lret
clc
mov
xchg
push
cmpsl
push
mov
push
or
jge
or
mov
call
sub
imul
lods
adc
insb
inc
mov
push
test
and
out
out
cmp
sub
stos
mov
mov
std
mov
mov
lret
xor
call
or
or
push
xor
lods
and
inc
dec
mov
mov
add
sub
ss
dec
ja
mov
rclb
in
iret
inc
adc
jns
xchg
dec
sbb
push
xor
mov
in
and
sbb
iret
xor
fadds
fwait
and
jge
fs
xchg
in
js
and
int3
ds
mov
arpl
add
scas
inc
mov
push
mov
lcall
aad
daa
nop
mov
xor
outsb
sub
cmp
rcrl
iret
cli
clc
and
sub
or
icebp
and
aaa
inc
cmpsl
push
sbb
rcrb
cmpsb
inc
dec
incb
test
push
or
ss
fs
ljmp
jmp
ljmp
mov
push
cmp
mov
sub
pop
xchg
lret
or
movsl
fstpt
or
jno
inc
pushf
add
iret
and
cmp
cmp
push
inc
add
lods
add
push
ror
mov
fs
add
addr16
test
jnp
xchg
sub
aas
xor
arpl
xor
lret
stos
push
and
inc
pop
aad
out
imul
pop
dec
daa
call
sub
xchg
jns
jno
aaa
sti
aas
ss
dec
xorb
fistpll
adc
xor
add
dec
stc
sub
stc
cmp
and
cli
dec
xor
test
lds
lods
int3
sub
mov
jg
sbb
sahf
mov
add
aad
and
sbb
mov
sahf
rcrb
pushf
dec
pop
mov
cmp
push
xor
mov
popa
cmpsl
testl
pushf
aaa
gs
cmp
jnp
mov
std
xlat
orl
fldcw
mov
nop
es
jb
or
je
inc
cmc
push
jp
pop
jne
inc
add
and
shlb
aas
lods
or
xchg
adcb
gs
adc
les
push
movsb
fisubl
push
movsl
xlat
ds
mov
push
xchg
cltd
imul
adc
adc
and
enter
nop
jecxz
rclb
jne
imul
adc
in
jb
jge
xlat
imul
adc
outsl
lcall
pop
stc
loopne
jo
stc
xor
or
and
cmp
fidivl
iret
adc
and
jb
sahf
mov
jg
jae
mov
sub
mov
mov
in
inc
lods
mov
mov
movl
ljmp
lcall
data16
loop
push
jbe
or
mov
mov
pop
sbb
mov
bound
fsubr
inc
pop
sub
push
addr16
insl
push
popf
inc
xor
and
arpl
sbb
jnp
jns
jmp
inc
jg
ljmp
dec
sub
pop
daa
gs
lds
jns
pop
mov
mov
movsb
push
fsubrl
mov
inc
idiv
pop
mov
lods
xor
add
xor
jmp
or
ja
add
pop
xor
pop
gs
jae
ds
leave
lods
lods
cmp
test
test
sti
outsb
xchg
adcl
jbe
dec
jae
rcll
call
mov
aam
ljmp
or
test
movsl
popa
lods
jp
adc
leave
int
adc
repz
sti
push
mov
test
insl
jno
mov
sbb
jne
xor
or
in
fisttps
movsl
inc
mov
nop
mov
gs
imul
mov
xchg
jo
or
mov
bound
mov
jle
cmpsl
aas
scas
jns
xchg
es
add
popa
cli
mov
dec
pop
in
cmp
gs
or
jp
mov
popa
jl
cmp
cmp
and
or
inc
and
clc
mov
xor
mov
mov
sbb
sub
addr16
push
or
lret
in
add
push
sub
div
cmp
fidivl
jnp
and
dec
dec
adc
inc
dec
mov
ljmp
mov
movsl
pop
mov
stos
push
dec
cmpsb
sub
fsin
mov
test
dec
sbb
out
mov
inc
xchg
aaa
mov
repnz
ret
mov
xor
sub
mov
shll
iret
and
das
and
cmpsl
or
xchg
jl
xchg
or
int
inc
in
pushf
cld
or
rolb
int
sahf
pop
inc
out
dec
lret
xor
sbb
aad
orb
pusha
cmp
add
cmc
scas
shlb
fidivl
scas
mov
cmp
es
cli
push
leave
ljmp
xor
shlb
nop
popf
addr16
push
or
cld
nop
pop
mov
mov
mov
lret
pop
imul
gs
xchg
adc
stos
push
and
mov
add
rcrl
pop
aaa
js
pusha
mov
fnstenv
sub
xlat
int
in
mov
jge
xor
jmp
mov
cli
in
jae
lods
outsl
lock
gs
sbb
and
sub
cmpb
xor
repz
rcl
dec
and
test
out
add
push
loope
cmp
push
fucomp
xchg
ljmp
and
aaa
stos
jl
pop
pop
cmpsl
pop
add
mov
mov
leave
mov
cli
or
mov
mov
cli
sub
stos
pop
inc
xor
sbb
sub
in
jo
shll
sub
cmp
dec
push
adc
je
stc
bound
icebp
dec
stos
addr16
daa
mov
jno
mov
loope
ljmp
cmp
cmp
mov
and
push
mov
insb
mov
sahf
mov
jae
jmp
mov
and
cld
cwtl
push
fucomip
pop
jmp
sbb
sbb
mov
enter
mov
add
imul
xchg
aad
xchg
jb
mov
insl
sub
ds
push
pop
or
sti
in
xchg
xor
fmul
aaa
mov
xor
je
inc
adc
jmp
into
cmc
movsb
sub
push
inc
xor
mov
mov
pop
gs
mov
out
pop
jne
imul
jp
mov
arpl
loopne
aad
xlat
adc
sbb
and
daa
and
xchg
and
add
add
pop
mov
push
cmp
or
cmp
ljmp
idiv
rolb
mov
add
pop
add
movsb
jge
xchg
sub
xor
sub
sbbb
cs
xchg
push
sbb
sti
pop
jae
inc
popf
lret
cmpsl
or
push
hlt
idivl
lcall
mov
and
mov
cs
push
sbb
mov
pop
jmp
notb
sbb
loope
out
xchg
aas
jnp
incl
cmp
xchg
pop
lahf
arpl
ja
shll
movsl
notb
fsubl
add
test
fnop
int3
jns
fcoms
cmp
mov
sti
mov
and
ret
scas
aad
cwtl
cmp
cs
enter
cmp
in
mov
bound
pop
and
mov
into
mov
or
add
xchg
xchg
std
stc
loopne
lods
orl
sbb
add
sbb
pop
loop
mov
ficoms
hlt
imul
rolb
jno
xchg
insb
in
lea
ficompl
jecxz
cs
push
enter
pop
add
mov
dec
inc
out
sahf
mov
or
dec
xchg
fimull
pop
xchg
fcoms
movsl
lahf
cmp
pop
add
dec
xor
cmp
xor
cwtl
loop
std
xor
cmpsl
add
pop
xlat
sbb
and
js
xchg
xor
out
mov
or
leave
jne
jno
mov
shrl
in
mov
jmp
test
pop
inc
hlt
xchg
hlt
xlat
in
iret
test
or
adc
fisttps
dec
cmp
cwtl
popa
mov
sub
pusha
pop
cmpsl
push
inc
fxch
pop
xor
mov
stc
xchg
jg
push
pop
dec
lock
adc
jle
mov
loop
and
mov
ljmp
pop
sahf
lahf
js
sub
xor
pop
jp
mov
inc
sbb
daa
outsb
dec
jb
or
mov
mov
insl
mov
call
cs
faddl
push
rcll
shr
insb
dec
cmp
sbb
dec
cs
add
push
outsb
ja
adc
jne
jbe
mov
movsb
mov
test
aaa
mov
aaa
arpl
add
inc
sub
push
insl
mov
aas
pop
pop
jne
loop
xchg
xchg
fcomps
sbbl
inc
mov
in
jmp
add
pop
and
or
arpl
les
outsb
nop
sahf
leave
sti
push
and
pop
xor
jbe
leave
lahf
push
jbe
es
mov
icebp
outsb
adc
xor
xchg
dec
scas
sahf
sbb
or
loop
arpl
imul
in
sbb
push
sbb
mov
out
mov
xchg
rcrb
lds
xchg
adc
add
test
add
xor
mov
push
test
jb
hlt
mov
insb
leave
jmp
or
lahf
inc
and
std
in
pop
mov
shl
inc
repz
bound
sub
and
test
dec
pushf
aas
push
xchg
test
lods
ljmp
push
aaa
mov
clc
nop
xchg
inc
pop
es
push
test
jne
mov
push
lea
inc
jmp
push
pushf
subb
mov
mov
inc
aam
lock
je
cld
push
xor
and
fldcw
ret
jne
lods
je
int3
sub
add
cmp
or
dec
mov
mov
cltd
add
addr16
loop
frstor
and
cmpsl
sbb
push
lea
jge
sbbb
dec
xor
inc
cmp
fdivrp
ja
mov
psubw
repnz
aas
xor
lods
decl
sub
jge
fwait
jmp
lahf
xchg
pop
mov
popf
inc
movlps
jle
or
jp
in
stc
outsb
mov
orb
mov
sub
or
inc
mov
fs
and
movsb
out
or
cmp
jle
cld
sbb
add
pop
ret
sub
pushf
pop
adc
and
daa
xchg
inc
sarb
mov
lds
xchg
or
lcall
jp
or
mov
aam
lgs
dec
adc
mov
cmc
insb
jecxz
pop
adc
into
sbbl
fstps
jno
and
xor
imul
inc
jge
push
fdivl
push
jb
sbb
test
mov
pop
add
adc
adc
and
xchg
hlt
fdivr
or
pop
lock
xchg
lahf
lcall
cmpl
cmp
addr16
jno
pop
add
sub
int3
jg
inc
mov
aaa
je,pn
aas
mov
inc
loope
pop
inc
sub
cmpsb
fsub
lcall
aad
in
hlt
icebp
aam
lock
dec
aad
enter
stos
and
jno
jl
mov
shlb
lods
add
lds
imul
movsb
pop
inc
jb
fucomp
mov
sbb
pop
sbb
mov
xor
mov
xorl
mov
test
fisubrs
pop
decl
mov
loopne
std
lret
jmp
daa
ret
lods
call
gs
add
insb
dec
divb
imul
or
xor
mov
arpl
or
mov
in
inc
xchg
ljmp
popa
or
repz
mov
xchg
xor
test
push
inc
into
mov
or
jmp
aad
je
xchg
jnp
mov
jge
inc
cld
dec
or
push
arpl
inc
and
fmul
test
push
xor
push
push
mov
rolb
scas
mov
jmp
lods
test
rcll
add
enter
sbb
push
pop
mov
pop
push
call
addr16
push
or
add
js
lcall
popf
jl
sub
out
pop
xchg
adc
pop
lret
in
ret
adc
mov
mov
je
pop
shlb
test
xchg
push
and
pusha
in
rcl
mov
fbstp
hlt
mov
cmp
shlb
hlt
inc
out
sub
rcrb
shrb
imul
enter
and
cmp
les
inc
mov
addr16
mov
mov
das
insb
adc
xchg
inc
mov
or
jb
mov
ret
repnz
ja
push
sub
mov
adc
jns
and
mov
mov
mov
popa
sub
lods
in
mov
xor
sub
add
mulb
mov
push
xor
cli
enter
jae
js
stos
and
les
js
mov
push
adc
push
mov
cmpsl
mov
sub
movl
mov
je
jg
nop
lods
mov
cmp
sub
mov
push
xchg
mov
std
push
sub
scas
repz
add
xchg
sub
adc
push
ds
push
in
cmpsl
fs
jae
mov
fidivrs
xchg
ljmp
jne
cld
and
mov
jecxz
or
sub
pusha
dec
inc
mov
pop
xchg
pop
jbe
sbb
aad
pop
pop
in
pop
pop
sub
icebp
ret
icebp
fwait
ret
mov
sbb
into
mov
nop
inc
xor
inc
shrl
mov
stc
jnp
inc
lds
cmp
cmpsb
mov
cmp
popf
iret
out
cld
mov
test
lods
cmp
icebp
loop
ficompl
std
add
arpl
add
repnz
lock
hlt
les
or
sti
mov
inc
adcl
je
cs
into
maxps
mov
pop
add
mov
mov
inc
sti
xor
dec
sbb
push
insl
push
jmp
aaa
mov
mov
jnp
mov
inc
inc
sbb
push
mov
and
push
fistpll
arpl
mov
fldt
push
ficomps
or
cmp
lods
push
out
or
cmp
mov
fdivrp
loope
add
cmp
mov
repz
jbe
ss
mov
lcall
iret
xor
or
or
pop
test
in
out
adc
xlat
sbb
fnsetpm(287
mov
lcall
mov
ja
rcll
pushw
repz
push
adc
lcall
into
dec
or
cmp
insl
xchg
fldl
pop
pop
adc
sbb
popa
popa
mov
mov
dec
mov
pop
imul
mov
mov
aaa
jno
push
call
cmp
or
movsl
jp
mov
dec
jb
add
fstpt
dec
mov
xchg
mov
movl
jnp
bound
push
add
dec
fwait
mov
pop
mov
push
dec
mov
or
mov
lahf
pop
outsb
movl
icebp
adc
pop
push
enter
mov
rclb
sub
rol
mov
mov
mov
push
aad
cli
sub
or
fidivl
outsl
jnp
addb
fiadds
jle
xor
mov
les
jecxz
les
dec
js
or
addr16
int3
aaa
dec
cmp
je
movsb
sub
lret
rcll
push
jb
pop
stos
loope
das
push
out
pop
pusha
jle
inc
cld
mov
dec
data16
and
push
hlt
adc
jp
lock
push
xchg
sbb
insl
and
xor
jno
int3
pusha
mov
mul
jno
call
push
mov
jp
lds
sub
imul
frndint
je
inc
lock
cwtl
add
das
cmp
push
pop
ljmp
and
in
lods
movsl
loopne
addb
mov
pop
movsl
test
mov
inc
pop
jge
cwtl
sub
inc
out
dec
mov
dec
and
jle
hlt
cmpsb
sbb
aad
jle
in
jnp
xor
fmull
push
gs
stos
xchg
mov
add
movsl
xor
inc
out
addr16
jecxz
arpl
lea
mov
push
jle
push
lods
pop
sbb
nop
and
pop
add
cmp
je
negb
add
cmp
outsl
popa
jle
mov
inc
sbb
mov
sbb
push
dec
cmp
in
jle
push
arpl
cmpsl
mov
lods
call
mov
jl
sub
jmp
add
into
fcmovne
mov
cmpsl
inc
inc
out
fsubr
imul
adc
pushf
ror
jg
push
in
sub
int3
movsl
out
inc
cmp
test
jae
xchg
mov
movsl
or
pop
xchg
adc
es
mov
ret
push
lds
add
cmp
xlat
xlat
cli
jns
push
outsl
dec
sub
xchg
testl
inc
dec
jle
pop
pop
pop
leave
inc
out
dec
push
mov
stos
push
add
in
add
pop
sbb
pushf
mov
fsubl
mov
es
mov
dec
sub
negb
mov
inc
push
add
fwait
test
fldl
sub
add
fdivs
lods
in
mov
dec
or
ss
push
adc
mov
xchg
loopne
xor
fisttpl
or
xchg
ret
cmp
jecxz
mov
fwait
xchg
pop
mov
mov
sahf
mov
push
mov
mov
out
fcompl
sub
dec
shll
jge
shr
iret
outsb
inc
mov
mov
into
jl
in
mov
test
mov
push
push
and
push
inc
addb
ss
add
mov
cmp
inc
pusha
movsl
pusha
push
mov
inc
popa
stos
notb
movsb
mov
ss
push
out
xor
cmp
cltd
dec
mov
jge
mov
das
sbb
jae
and
lahf
jo
addl
or
lock
ret
cmp
jae
add
insl
loop
mov
or
shlb
xor
leave
jbe
jmp
fwait
adc
imul
inc
pop
xchg
stos
inc
dec
inc
cmc
cli
xor
js
leave
lret
clc
inc
xchg
jp
mov
in
pop
mov
adc
jl
into
mov
cmp
inc
push
popf
inc
mov
or
push
lahf
mov
mov
xor
js
stos
dec
xchg
jnp
fwait
cmp
jns
mov
jl
ss
add
mov
push
in
cmpl
arpl
in
jnp
outsl
add
int
mov
lret
ud1
or
mov
test
stos
and
arpl
mov
push
clc
loopne
push
fldt
mov
dec
dec
hlt
cli
aaa
jno
mov
pop
cltd
adc
push
outsb
dec
cmp
push
iret
lods
pop
ljmp
xor
ja
pop
jecxz
pop
push
or
mov
ja
cli
out
inc
mov
notb
bnd
mov
insl
cwtl
sbb
insl
dec
ja
jns
adc
dec
test
pop
xchg
leave
aas
cltd
xchg
pop
dec
lret
out
inc
hlt
and
call
test
jle
movsldup
xchg
cmp
push
popf
add
sbb
cmpsl
push
and
pushf
ss
mov
and
xchg
and
pop
add
psubw
loope
xor
stos
std
xchg
adc
hlt
add
sbb
push
jmp
inc
and
pop
push
xor
add
push
leave
lret
fstl
je
stc
dec
inc
cs
fcomp
out
push
sti
push
xchg
jp
xor
imul
in
insb
ljmp
dec
pop
int3
pop
dec
dec
cmpsl
push
js
mov
iret
xlat
into
loope
cmpsb
pop
cltd
scas
fcmovne
or
loopne
adc
test
cmovns
jbe
push
adc
pop
mov
mov
ficoms
ja
outsl
fsubrs
nop
into
ret
clc
pcmpeqb
pop
dec
movsb
xor
loop
cld
icebp
rclb
add
lahf
or
repnz
call
jl
dec
ja
dec
test
mov
test
ret
mov
sub
ljmp
fs
aas
js
mov
les
dec
test
pop
ljmp
mov
push
fucomp
lcall
pop
push
movsb
or
mov
das
imull
mov
sbb
sub
cmp
inc
dec
je
xor
pop
stos
fisubrs
cwtl
jl
inc
add
test
lds
dec
jp
cli
popa
int
xlat
repz
in
mov
push
call
push
shll
rcr
rorl
jle
fs
push
sub
ljmp
dec
mov
jge
mov
or
ret
mov
lea
xor
xor
pop
lock
mov
sbb
jnp
cmpsl
push
aam
imul
adc
jne
push
or
gs
and
and
jno
pop
push
mulb
mov
nop
addr16
iret
dec
sbb
and
cmpsb
mov
cmpsb
stc
adc
into
mov
xor
fsubrl
sbb
aaa
or
std
call
jmp
xor
push
aas
xchg
mov
cmp
add
jno
jne
sahf
sbb
and
fwait
outsl
cs
je
nop
std
fimuls
add
pop
sub
clc
sub
idivl
pop
xor
lcall
jg
cmp
dec
imul
or
mov
idiv
mov
or
and
nop
mov
jp
inc
clc
fwait
sub
push
xchg
pop
out
or
loopne
ss
push
fwait
sub
ret
imul
cs
and
cltd
jge
jmp
cld
and
xor
xchg
cmp
pop
mov
sub
mov
testb
cltd
mov
pop
cmp
inc
cmpsl
and
scas
cs
dec
icebp
pop
jns
add
jbe
test
mov
insl
imulb
sub
cmp
mov
inc
add
aam
xor
sbbb
idiv
mull
pushf
jmp
fistps
scas
adc
mov
jecxz
mov
mov
mov
pop
mov
mov
xor
jg
mov
rolb
icebp
push
shll
and
cli
pop
nop
or
call
int
jle
jbe
sti
add
dec
shrl
jl
popa
into
sti
arpl
lahf
mov
imul
mov
push
int
push
or
mov
insb
xchg
mov
fiaddl
cmpsl
cmp
cld
inc
adc
in
lods
or
mov
xchg
mov
in
pushf
adc
dec
sub
fwait
std
and
and
adc
test
cmp
push
xor
mov
pop
jge
push
insl
pop
pop
test
mov
mov
jno
mov
test
sarb
sub
andb
sbb
xchg
aad
rep
jge
cwtl
decl
into
xchg
sub
mov
or
or
xor
sbb
pop
jnp
lods
shrb
cmc
jb
push
js
cmp
pop
mov
mov
and
or
mov
cld
insl
jmp
iret
push
insl
cmp
cmp
aas
leave
jno
dec
sbb
mov
aas
add
or
xchg
imul
rclb
mov
dec
push
adc
faddl
out
push
sub
bound
and
mov
pop
imul
in
lea
loope
fdivrp
dec
jo
nop
outsb
jl
repz
test
add
adc
xor
adc
mov
jl
mov
mov
adc
jecxz
xchg
cld
add
jno
jecxz
mov
dec
fwait
jecxz
aaa
out
jb
push
lahf
les
mov
inc
sub
dec
imul
scas
mov
test
inc
mov
insl
pop
mov
shrb
mov
lds
adc
jecxz
or
and
sti
loop
inc
and
enter
ror
add
cmp
or
incl
adc
hlt
scas
aam
mov
adc
xchg
into
leave
adc
push
mov
pop
dec
aad
in
lret
mov
jp
mov
add
or
arpl
and
sti
lret
jae
dec
nop
in
sub
lods
jo
mov
cmpb
mov
jno
rcrl
inc
popf
xor
jne
mov
jecxz
pop
jns
inc
cmpsb
lcall
jge
popf
sbb
xor
popa
sub
mov
imul
iret
cltd
shlb
cld
das
add
xor
addr16
jns
sbb
sub
sbb
cld
out
pop
fcompl
adc
dec
inc
rol
xor
rclb
cmpsb
repz
xchg
bound
push
pop
bswap
jecxz
pop
rcr
or
xchg
mov
sbb
ret
dec
jle
sub
or
rclb
call
and
xor
lods
aam
mov
arpl
fldt
xor
pop
sub
out
mov
hlt
mov
data16
xchg
test
inc
mov
pop
lea
mov
in
xchg
loop
xchg
push
daa
xchg
data16
pop
xchg
inc
repz
cld
jno
dec
sbb
nop
pop
mov
pop
dec
jge
push
leave
xlat
pusha
mov
pop
mov
out
pop
cmp
jg
pop
rcll
call
and
movsb
int
lret
adc
jns
lret
test
mov
mov
ja
sarb
ret
lahf
testl
pop
push
push
push
lret
inc
add
jns
in
mov
adc
or
mov
rcll
inc
jmp
xor
dec
adc
and
mov
mov
mov
andl
es
sub
pusha
int3
mov
add
push
jno
cmpsl
xor
adc
iret
mov
lods
test
mov
call
xor
test
int
pop
xchg
lcall
or
scas
pop
js
leave
out
inc
ret
sbb
mov
mov
lods
xor
mov
push
inc
jge
out
je
out
inc
dec
dec
cmc
icebp
pushf
sbb
mov
mov
or
xchg
and
xorl
pop
add
fldt
mov
cmp
cltd
in
stos
and
jns
int
jl
repz
jecxz
xor
repz
loopne
mov
mov
add
inc
push
scas
push
in
sub
and
push
xchg
dec
ret
shll
xor
adc
filds
jecxz
mov
nop
pop
into
adcl
ja
sbb
and
rcrb
lods
pop
repnz
aaa
push
mov
arpl
xorb
and
rorl
cs
xor
mov
mov
js
hlt
lahf
or
lods
test
dec
add
mov
sarl
add
icebp
lret
popf
loop
sbb
mov
pushf
and
sbb
xchg
test
add
arpl
mov
scas
loop
cltd
sti
push
scas
dec
sub
inc
rorl
jge
sub
jmp
loop
or
andl
roll
xor
je
aas
mov
dec
pop
insl
mov
ds
outsl
or
bound
test
sub
push
or
repnz
lods
push
xor
imul
inc
divl
andb
and
cmc
xchg
fldcw
dec
repz
dec
cmp
shll
xlat
jne
jns
and
push
ljmp
lods
repz
testl
addr16
out
mov
jp
ret
inc
cmp
popa
lods
add
xor
jb
loop
scas
in
aaa
push
shll
pushl
sub
in
jecxz
jp
leave
push
cs
inc
add
lret
fisubrl
nop
pop
popa
movsl
nop
dec
jecxz
std
xchg
inc
mov
test
fs
add
dec
cmp
fstl
mov
out
inc
dec
shll
mov
mov
lds
sbb
xchg
int
shrl
ret
add
pop
add
gs
test
mov
ror
mov
sahf
cmp
cmc
adc
repnz
dec
pop
jl
jb
pop
insb
mov
inc
cs
gs
pop
mov
popa
cmp
jo
push
adc
mov
sbb
jge
dec
xchg
fs
aad
mov
jb
mov
inc
fsts
dec
xor
andb
cmp
enter
inc
adcb
pop
pop
cmp
push
cmovge
stc
xor
jecxz
stos
mov
and
adc
test
aad
jecxz
and
shlb
lret
inc
js
jo
imul
xchg
inc
fwait
or
imul
push
ror
fwait
jg
hlt
cltd
xchg
pop
and
fbld
test
mov
je
loop
xchg
fisubrl
pop
dec
or
loopne
inc
xor
dec
cmp
and
adc
inc
sub
out
push
mov
xchg
movsb
cmp
in
stos
sahf
aam
jae
in
mov
aad
xor
in
gs
test
outsb
test
jnp
lds
lock
mov
jecxz
aad
scas
aaa
idivb
js
hlt
xchg
popa
xor
lock
inc
leave
cltd
iret
dec
inc
jnp
lods
aas
scas
push
insl
jg
icebp
pop
mov
and
or
pop
mov
outsb
add
mov
xor
into
cs
mov
add
add
xor
pushf
rcrl
jns
stos
repnz
andl
and
jnp
xchg
jg
popa
pop
add
push
mov
leave
mov
mov
push
stos
sub
xorl
mov
pop
push
or
inc
push
das
gs
cmovno
mov
sbb
sub
or
xlat
mov
bound
icebp
lods
xor
adc
push
and
imul
in
in
and
sbb
mov
aad
iret
mov
and
adc
arpl
stc
pop
jp
ss
lds
je
mov
ret
pop
jns
jo
mov
movsl
mov
repnz
push
call
insl
cli
and
aas
lods
das
or
add
int
fidivl
ret
leave
jmp
xchg
insb
add
xchg
cmp
inc
loop
adc
int3
push
lret
sahf
lret
jecxz
xor
push
or
out
test
in
cmp
mov
arpl
stc
push
fidivrs
lcall
sbb
mov
mov
dec
je
inc
mov
sti
mov
iret
cwtl
out
mov
cmc
dec
ljmp
fdivl
pop
push
jb
sbb
mov
scas
and
arpl
pop
fsubs
scas
das
jp
test
mov
loop
jl
out
sbb
pop
fsubrl
jne
gs
or
adc
les
mov
pop
jnp
and
sub
sbb
xchg
inc
push
imul
inc
ja
and
fdivr
ficomps
pop
jg
in
stos
pop
aas
pop
repz
pop
add
cmp
add
add
push
inc
inc
pushf
push
pop
inc
mov
push
int3
sub
cmp
cli
pop
cmp
lcall
sbb
fildll
xor
add
pop
aam
jge
cmp
pop
pop
pop
or
mov
gs
lock
movsl
push
stc
xlat
loopne
cli
push
cmp
aaa
cmp
pop
ljmp
xor
cmp
out
ds
sub
pop
mov
stos
pop
cmp
jnp
push
jae
xorb
lret
push
lahf
or
ds
cmp
arpl
cmp
xchg
lea
dec
aam
jb
fldenv
js
dec
fisttpll
sete
mov
fwait
push
mov
cli
inc
test
sbb
lods
repz
rcr
mov
sub
inc
pop
popa
mov
rorb
dec
jae
das
xor
ss
lea
mov
imul
rol
pop
pop
mov
inc
int
pop
rcr
loopne
out
or
mov
punpcklbw
fbstp
push
jmp
mov
ja
hlt
xchg
push
ficoms
outsl
std
and
fnstenv
sub
push
into
fcoms
add
or
push
push
roll
push
repz
mov
hlt
jge
or
imul
ja
filds
pushf
cltd
aaa
imul
xchg
jge
rclb
jg
icebp
jl
xor
dec
pop
mov
roll
inc
mov
mul
fadds
sub
xchg
and
imul
aam
imul
jnp
or
xchg
jb
xorl
repz
arpl
mov
insl
or
aam
in
clc
xchg
jae
fisubl
stc
insl
fstpl
js
fldenv
xchg
xlat
js
inc
jecxz
mov
xor
sub
loope
stos
in
sub
jle
xor
test
jo
rorb
inc
or
jnp
dec
insl
jmp
shr
fimull
mov
pop
std
lret
mov
xlat
xor
shl
aas
enter
cmc
and
stos
jmp
jne
mov
add
sti
fists
in
jno
jb
mov
sub
pop
nop
sbbb
jns
pop
les
mov
fsubs
outsl
out
sub
and
xchg
je
push
aas
jne
and
call
imul
or
lea
inc
mov
add
jecxz
sti
inc
les
add
out
icebp
xchg
movsb
mov
pop
out
and
out
mov
stos
xchg
stc
jns
insb
ret
ds
xchg
fwait
cmp
gs
and
shll
out
scas
jns
add
mov
movsl
jnp
mov
jae
jne
inc
cmpsb
xchg
adc
jecxz
add
mov
enter
xchg
pop
sahf
imul
ss
jle
push
rcr
push
insb
sahf
xchg
cwtl
test
out
jge
das
mov
mov
insl
gs
pop
fisubrs
or
mov
shr
mov
mov
dec
cltd
out
movsl
mov
cmp
mov
pushf
rcrb
xor
xchg
repz
fdivrs
xor
lds
cwtl
dec
push
sub
mov
daa
fcmove
add
loopne
cmpl
dec
mov
push
cmp
leave
mov
jp
jl
mov
stos
cli
aaa
js
je
mov
xchg
xchg
dec
push
push
cwtl
outsl
xchg
dec
mov
xlat
or
lds
out
pusha
enter
fwait
inc
or
scas
dec
mov
jnp
test
lret
call
jp
in
aaa
push
mov
mov
dec
shrb
lahf
dec
mov
lret
negb
int3
pop
mov
xor
mov
stos
pop
or
fimuls
xchg
dec
in
out
repnz
int3
xchg
inc
xchg
pusha
mov
les
xchg
and
or
push
xchg
jl
sub
xchg
xchg
aam
and
loope
int3
sahf
stos
dec
in
add
aam
sbb
xchg
das
push
popa
xor
stc
sub
push
ja
inc
mov
lahf
pop
sbb
dec
sbb
push
mov
loope
es
aas
not
add
fsts
push
in
pop
mov
mov
and
cwtl
sbb
stc
outsl
push
adc
mov
jecxz
and
in
adc
inc
pop
lret
cwtl
mul
cmp
jno
pop
mov
mov
in
pop
dec
imul
xor
insl
mov
mov
inc
das
cmpsb
or
push
mov
test
sbb
cmp
adc
inc
aas
xchg
mov
into
lods
push
mov
and
arpl
pop
stos
cmp
dec
inc
mov
dec
cld
jb
cmp
bound
fldcw
xor
jns
dec
lock
dec
icebp
scas
xor
sbb
jo
lret
lcall
test
testb
int
and
cli
aam
lea
ds
sbb
mov
je
mov
mov
test
jg
pop
inc
mov
mov
shrl
movsl
inc
aam
mov
inc
in
add
dec
nop
es
fidivrl
fldenv
in
ljmp
in
push
test
fucom
jecxz
lods
call
shl
pop
pop
arpl
jmp
inc
mov
xorl
and
mov
push
dec
mov
or
loopne
movmskps
std
sub
or
cli
jmp
je
push
dec
adc
cmpb
int
fprem1
and
repz
adc
imul
push
ja
cs
add
adc
pop
data16
dec
arpl
mov
repnz
insl
mov
in
rcll
imul
ljmp
leave
pop
sarb
test
insb
gs
test
les
fisttps
pop
mov
xor
cmp
ss
mov
mov
jae
popf
inc
loopne
sbb
loop
insb
aas
in
ljmp
add
rcll
into
dec
mov
stc
jne
sub
adc
mov
push
mov
and
fistpl
sbb
add
mov
cmp
jns
aas
ret
push
inc
call
cmp
adcl
dec
xchg
jb
stos
push
hlt
mov
arpl
int3
call
call
mov
pop
ds
in
clc
mov
bnd
notb
xor
jl
or
mov
lcall
cmpsl
in
fwait
orb
pop
sub
mov
jmp
xor
mov
outsb
sub
lahf
add
and
mov
inc
jg
popf
mov
out
lods
jg
scas
inc
adc
mov
pop
inc
mov
test
add
cs
in
cld
mov
rcll
xchg
cmpsb
ds
cmp
les
outsb
das
cmp
or
sub
cwtl
popa
and
xchg
jbe
push
mov
js
lret
cmpsb
adc
imul
mov
pop
es
in
mov
sti
jae
sahf
iret
movsb
or
cld
or
mov
call
xorb
addr16
outsl
out
test
cs
adc
ja
popf
mov
push
test
imul
adc
mov
stos
daa
js
xor
fsubr
xchg
pop
push
xchg
scas
jo
mov
or
std
enter
sub
inc
into
or
lods
movsb
xchg
xchg
pop
add
imul
xchg
mov
outsb
cmp
push
mov
xor
fwait
test
xchg
cmc
orl
fs
mov
xor
repnz
mov
shlb
push
in
jl
dec
jbe
xchg
adc
dec
fdivrl
adc
mov
or
push
inc
stos
pop
movsl
sub
sub
mov
ljmp
inc
mov
cmp
push
adc
dec
not
dec
xlat
inc
dec
jno
repz
xchg
loopne
adc
out
or
nop
jle
or
mov
mov
mov
sbb
mov
insb
int
scas
nop
add
xchg
test
bound
mov
sbb
sarb
mov
mov
jae
jp
test
mov
dec
push
xor
mov
or
push
test
or
pop
adcb
scas
std
cmp
repz
into
push
enter
push
mov
imul
imul
fnstsw
jp
ret
cld
jne
adc
aas
mov
shr
cwtl
cwtl
adc
shlb
js
js
orl
push
lea
dec
sahf
flds
xchg
or
sbb
daa
xchg
lret
lret
aaa
jns
jno
loopne
scas
jle
xchg
mov
repz
mov
push
pop
xchg
mov
xor
jnp
iret
jmp
cmpsb
push
mov
addb
leave
sar
jl
sub
mov
mov
imul
pop
lods
add
adc
mov
bnd
gs
pop
test
dec
fwait
mov
pop
dec
adc
testb
inc
cld
xchg
sbb
movsb
jl
push
add
pop
stos
aaa
jo
mov
jnp
push
push
test
mov
push
pop
lock
inc
insb
imul
negb
lahf
int3
fisttps
lret
push
lret
fmul
xchg
movsl
rorb
fs
inc
add
rorl
imul
dec
mov
psubb
in
sbb
mov
sbb
pop
dec
shlb
push
fcomps
and
in
and
push
mov
clc
ret
sarb
or
cmp
adc
push
fbstp
lds
mov
xchg
mov
push
ljmp
movsl
jmp
adc
mov
adc
pop
insl
push
fs
jno
imul
testl
pop
pusha
insb
and
loop
out
lahf
pop
stc
inc
inc
pop
sub
inc
sbb
adc
adc
daa
icebp
or
loop
mov
clc
mov
sbb
bsr
push
inc
xchg
insl
imul
cmp
jno
xchg
jbe
and
pop
mov
loope
mov
mov
pop
mov
pop
icebp
es
out
lods
popf
lock
fiadds
call
je
fisubl
dec
mov
xchg
ja
fs
ss
mov
add
aas
nop
mov
out
jns
xor
ja
xor
pop
mov
jge
sbbl
aad
in
sti
xchg
xchg
or
daa
mov
sahf
add
mov
push
xchg
xchg
dec
pusha
mov
test
popa
fbld
sarb
and
inc
imul
or
push
pusha
mov
mov
mov
fistpl
imul
call
dec
cmp
mov
mov
jle
jle
out
or
cld
jmp
or
and
jno
cmc
lret
jmp
mov
stc
stos
sbb
adc
mov
mov
adc
lahf
xchg
mov
sub
jo
push
mov
jne
mov
out
mov
mov
xlat
jecxz
fstpl
subb
mov
scas
mov
push
sbb
jecxz
cmp
push
dec
push
mov
inc
mov
pop
movsl
in
jno
mov
pop
lods
and
orl
fwait
sub
jecxz
dec
in
push
add
mov
cmp
hlt
test
stos
repnz
and
sub
push
push
xchg
add
sub
dec
movsl
cmc
loop
pop
jae
iret
das
mov
imul
add
ja
fists
cwtl
sbb
call
cmpsb
mov
repz
imul
pusha
push
add
pusha
ja
push
enter
push
or
iret
inc
loop
add
nop
pop
mov
setge
dec
and
aad
xor
push
data16
aad
mov
push
sarl
test
adc
dec
and
insb
das
cmp
jg
not
aaa
cwtl
jecxz
out
daa
push
neg
scas
xchg
fisttps
gs
dec
data16
lret
sbb
mov
ret
or
popf
divb
mov
push
cmp
xacquire
mov
mov
or
repz
push
bnd
and
insb
push
inc
xchg
js
fbld
pop
mov
fstpl
mov
cmp
daa
in
inc
mov
ljmp
and
push
nop
dec
push
in
into
test
and
jne
es
mov
sub
push
push
mov
cltd
inc
in
stos
mov
test
leave
pop
inc
inc
xchg
push
sbb
popf
pop
enter
push
and
cmp
cmpl
fdivrl
lods
xor
or
lcall
sbb
jo
inc
push
add
aad
pop
flds
fisttps
je
out
pop
pusha
addr16
mov
mov
inc
fcomip
aas
packsswb
dec
adc
adc
test
lds
mov
out
sahf
pop
jb
loopne
int3
push
or
std
dec
dec
sbb
jne
mov
dec
pop
xchg
push
ljmp
rcl
jne
sbb
inc
inc
sahf
adc
movsb
scas
pop
sub
push
bound
jmp
inc
outsl
addr16
fldt
dec
and
test
data16
cmpl
leave
ja
call
and
sub
jbe
pop
push
dec
jne
xchg
xor
cwtl
sti
inc
dec
jl
call
dec
mov
xchg
insb
sbb
scas
out
repnz
inc
xchg
out
mov
xchg
jnp
push
mov
in
dec
pop
imul
mov
test
jle
fstpt
mov
mov
sbb
test
jno
movsb
sbb
mov
mov
loope
push
cmpsl
adc
in
xor
hlt
cmp
out
lds
enter
test
in
mov
neg
loop
loop
loop
adc
xor
cmpsb
int
mov
jmp
popa
lock
loop
cmp
fstps
test
and
into
lcall
cmp
jmp
cltd
jns
scas
shrb
mov
add
movl
ret
cmc
add
pop
dec
xchg
mov
cmp
outsl
add
into
mov
push
aad
movsb
and
test
in
setge
sbb
in
or
push
lock
outsb
push
subl
dec
dec
jmp
push
mov
hlt
or
xor
int
sbb
jle
dec
mov
shl
imul
and
fs
aas
into
inc
mov
and
movaps
hlt
mov
mov
xchg
cmpsl
push
cli
fsubrl
sarb
push
cmp
mov
lods
cli
in
xchg
ret
fcomp
arpl
mov
call
rcrl
or
push
les
jg
jnp
shrb
jno
pop
hlt
out
pop
int3
sbb
sub
pop
inc
mov
in
mov
pop
imul
divb
outsl
or
out
insl
shl
into
cmp
inc
adc
jnp,pn
popa
insl
xchg
popf
mov
popa
outsl
adc
and
cwtl
lcall
fmulp
pop
lock
or
ljmp
pushf
aam
sub
mov
nop
mov
mov
sahf
mov
aam
test
mov
shrb
and
xchg
shl
out
and
jno
aaa
mov
fdivrl
add
mov
pop
mov
int3
sub
ficoml
jno
shll
rorb
xor
push
lret
add
or
divb
adc
test
dec
sahf
pop
in
jo
adc
jl
pop
jp
xchg
sub
inc
ja
in
inc
or
xlat
dec
xor
iret
ds
fsubs
pop
xchg
jge
push
and
pop
imul
mov
pop
inc
outsb
xor
sbb
divl
mov
bound
insb
mov
sub
push
lcall
ss
xchg
mov
xchg
aas
cwtl
push
loop
jae
push
mov
sahf
frstor
adc
ja
stos
sbb
mov
mov
pop
jo
or
add
sub
jp
dec
jl
push
push
mov
mov
xor
rol
cmp
cmp
cld
cwtl
xchg
dec
test
push
scas
clc
test
mov
sub
out
add
rclb
jle
in
sub
aad
adc
sub
mov
mov
fistpll
cmp
out
jno
pmuludq
jle
push
aaa
xor
scas
dec
mov
lret
mov
jg
or
pop
dec
lods
sbb
add
inc
sbb
cmp
sarb
lods
jbe
lock
inc
aam
jmp
or
stc
or
rcl
out
test
iret
data16
xor
add
or
fnstcw
dec
idiv
mov
inc
fldl
in
mov
cmp
cmp
push
cmpsb
dec
mov
jg
test
xor
adc
loope
std
sbb
and
stc
clc
loope
and
xor
mov
push
push
xchg
push
mov
cmpl
pop
je
push
adcl
loopne
xor
adc
jns
mov
xlat
mov
js
xor
mov
loope
inc
cmpsb
hlt
xor
push
dec
negl
gs
or
aaa
adc
rclb
xchg
cld
sbb
dec
and
bound
xor
pop
dec
push
cmovnp
stc
loope
in
sub
dec
mov
lods
aas
xchg
jmp
xor
cmpsl
movsl
jbe
cs
insl
sub
fmuls
outsb
sub
js
mov
loope
pusha
cmc
hlt
mov
push
xchg
inc
push
ret
cli
ds
xchg
push
or
xchg
add
inc
cltd
pop
in
mov
ss
out
mov
les
repz
lcall
stc
xchg
lret
jp
pop
add
mov
out
fnstenv
leave
cmp
nop
leave
lahf
movsb
dec
inc
stos
insb
mov
xchg
ss
gs
mov
ret
mov
and
lret
lock
jb
mov
cmpsb
add
sub
pop
adc
nop
add
fdivrl
std
dec
add
popf
mov
pusha
out
jne
add
fcmovb
mov
mov
clc
xchg
pop
cmp
icebp
and
pop
adc
ds
adc
pop
outsb
aad
outsl
and
pop
aas
testl
mov
fldenv
loop
out
sbbl
pop
xor
cmp
stos
mov
fldenv
popf
clc
shl
mov
xchg
jb
cmp
inc
xor
repnz
sbb
adc
cmp
out
inc
dec
xor
pop
push
adc
out
cmpsb
dec
push
hlt
js
pop
mov
push
mov
or
push
jnp
xchg
jp
pop
mov
clc
push
dec
loopne
inc
sbb
sub
mov
jg
int
or
xchg
cld
jb
iret
test
pop
add
mov
fabs
sub
xor
insl
pop
or
mov
enter
stc
push
in
pop
inc
test
xor
movsb
es
mov
mov
stos
cltd
mov
outsl
dec
or
icebp
sub
mov
movsb
inc
or
jae
adc
mov
test
into
mov
mov
in
fldcw
adc
sbb
js
push
scas
insb
cmp
push
mov
mov
sarl
fstl
push
push
and
mov
les
cmp
add
jge
fidivrl
std
in
sub
lret
mov
lahf
jp
clc
mov
dec
push
push
xor
aas
mov
stos
mov
dec
sarl
sub
ret
cmp
inc
int3
std
and
mov
fbstp
push
enter
mov
sub
cmp
xor
sets
scas
mov
mov
mov
push
mov
pop
cmp
and
mov
lahf
mov
lret
addb
mov
mov
and
lret
pop
jns
imul
xchg
ss
dec
fstpl
int
ret
jbe
dec
pop
divb
int
aam
sarb
cmp
adc
out
cmp
push
pop
shll
push
mov
xchg
cmc
ss
sbb
adc
add
mov
push
sbb
lret
mov
mov
adcl
xor
or
mov
mov
xchg
mov
aas
mov
cmp
xchg
dec
pop
push
lea
sub
scas
nop
dec
xor
movsl
loopne
test
or
and
cltd
cmp
aam
mov
mov
pop
adc
fisubrs
mov
lahf
mov
pop
arpl
push
and
dec
inc
inc
sahf
out
not
and
xor
adc
inc
cwtl
iret
sub
push
outsl
pusha
inc
inc
cmpsb
cwtl
stos
mov
out
aad
sub
adc
mov
sub
inc
pop
xorl
or
fistps
mov
insl
inc
cmpsb
mull
enter
dec
in
xchg
fdivl
divb
ret
mov
mov
sbb
out
jmp
inc
pushf
mov
adc
fxch
or
push
mov
fwait
jl
cmc
pop
test
lahf
aaa
fidivrl
xchg
sbb
lods
testb
int3
jecxz
inc
dec
jnp
inc
adc
add
mov
xchg
jmp
and
iret
iret
outsl
inc
xor
mov
repz
into
nop
ret
inc
cld
mov
pop
jg
push
ret
pop
addr16
mov
add
gs
sbb
cld
fs
into
in
lcall
in
dec
jmp
sub
fldcw
and
andl
push
dec
mov
imul
lret
insl
aam
cld
dec
loop
or
inc
lret
lahf
mov
lret
mov
add
jg
mov
cmp
arpl
mov
pop
lret
and
loope
adc
or
jb
enter
sbb
fs
cli
inc
cli
lds
or
dec
iret
jbe
add
das
sbb
mov
scas
cmp
aas
push
inc
lds
and
jnp
mov
mov
cltd
jne
jecxz
inc
hlt
scas
adc
xor
je
sbb
lret
xchg
int3
cmpl
pop
pop
xor
adc
ror
adc
mov
subl
outsb
xor
xchg
cmp
shlb
adc
sti
pop
mov
pusha
es
stc
jle
les
sub
data16
je
mov
push
push
jne
push
lods
sti
sub
and
js
stos
aas
pop
add
cmpsb
cld
cmp
and
arpl
add
rolb
out
mov
addr16
jge
dec
mov
mov
lret
lds
push
rcll
mov
fwait
mov
ja
pop
stc
mov
or
mov
ljmp
iret
mov
repnz
inc
jge
out
xor
shrb
dec
mov
stc
xor
inc
push
imulb
incb
adc
decl
stos
sub
stos
jo
adc
fsubs
iret
jmp
filds
pushf
sub
dec
pushf
xlat
jnp
xchg
movsb
add
in
jb
ret
mov
shlb
add
xchg
dec
or
cmpsb
aaa
jnp
ret
aam
movsl
cmp
js
pop
sub
xor
ljmp
jb
mov
and
sahf
mov
cmp
int3
and
sbb
mov
and
lods
les
push
sbb
or
mov
dec
or
cmp
fistpll
lock
inc
sbbb
shl
push
fadd
fmull
xor
lea
iret
mov
xlat
xchg
out
loop
int3
pushf
sub
mov
xchg
inc
sbb
lret
pop
push
loope
pop
mov
jle
in
push
les
mov
sbb
ret
icebp
cmp
in
adc
xchg
cmp
cmpl
add
mov
aam
mov
dec
cmpsl
sahf
sbb
fwait
iret
mov
rcr
mov
xor
mov
out
cmpsb
sti
jp
jae
js
mov
lcall
mov
mov
and
mov
xchg
dec
lods
imul
sub
decb
ret
clc
mov
xlat
pop
lcall
in
clc
in
jne
data16
repz
xlat
push
ror
inc
dec
push
test
lret
pop
dec
lds
adc
in
add
push
aas
dec
sbb
pop
or
out
inc
xor
inc
out
or
stc
xchg
ficomps
push
out
xlat
cmpsl
ret
xchg
dec
xlat
xor
sbb
ds
lcall
aas
cmc
add
sbb
push
cwtl
mov
test
fwait
mov
les
cltd
push
jbe
out
or
das
mov
inc
movsb
in
add
push
xor
dec
iret
cmp
fsts
loopne
lret
fwait
lods
mov
jns
mov
ss
dec
js
adc
arpl
cmp
dec
insl
push
jo
cwtl
dec
or
les
pop
sub
dec
jb
dec
or
sub
add
xchg
xchg
cmpsb
cmp
daa
xchg
sarl
lea
jo
int
neg
outsl
mov
lea
lahf
test
das
and
ret
push
mov
inc
repz
in
push
push
sbb
sbb
int
sub
shlb
adc
lahf
jl
or
push
cmp
aam
shrb
xchg
mov
jecxz
sbb
pop
mov
pusha
mov
cmp
pop
jmp
int3
sarl
xor
mov
jle
loopne
out
inc
add
push
fildll
icebp
mov
call
add
outsl
push
repnz
mov
fistps
sbb
je
ja
xchg
sahf
mov
ds
mov
sub
xor
mov
xchg
std
dec
inc
int
push
or
cld
adc
cli
push
xchg
cli
pushl
sbbb
xor
or
shrl
fnstenv
push
inc
lods
push
repnz
xchg
mov
stc
xchg
push
sarl
pop
jnp
jne
sub
inc
mov
int
lret
mov
mov
mov
rcrl
jno
inc
jl
jbe
daa
jne
lock
push
sti
xchg
js
pop
xor
addr16
mov
pop
xor
daa
pop
lahf
mov
rcll
cmc
inc
jb
lret
push
add
mov
bound
and
xchg
pop
stos
shlb
aas
fmuls
nop
inc
sub
out
or
test
jg
push
sub
loopne
add
scas
mov
cmp
aad
leave
adc
imul
mov
cmc
pop
sub
or
lea
dec
lcall
jl
aaa
xchg
push
mov
push
fisttpl
push
or
push
sbbb
hlt
add
imul
push
loopne
and
push
sub
add
ss
aad
add
push
movsl
xchg
xorl
adc
call
cmp
xchg
bnd
pop
insb
cld
xlat
and
shrb
inc
aaa
dec
popa
cwtl
lea
xchg
enter
jp
ss
pop
inc
sub
mov
scas
and
cli
xchg
jns
inc
push
push
dec
mov
cmp
lea
lcall
inc
mov
mov
jb
idiv
mov
cmp
push
pushf
incb
adc
divl
jmp
dec
lcall
mov
add
add
add
arpl
lock
cli
ficomps
push
aas
ss
call
lret
lret
lea
cmpsb
test
paddw
sbb
loope
aas
jl
in
orl
fadds
dec
pop
dec
mov
into
aaa
nop
dec
mov
cwtl
pop
xor
mov
mov
sub
ret
sbb
mov
mov
std
add
out
enter
je
sbb
pop
sahf
xor
cmpl
xor
mov
lock
xchg
popa
xor
std
fisubs
in
test
sub
sar
jo
sbb
sub
fisubs
fs
scas
iret
mov
push
sbb
xorb
stc
insl
dec
xchg
pushf
jge
in
das
addb
mov
ss
in
aam
mov
lahf
mov
sbb
aas
rcr
jae
jb
cltd
repz
insb
dec
cmp
mov
rol
fwait
lahf
sti
push
jae
pusha
push
dec
mov
out
mov
popa
icebp
fsubrp
lahf
inc
imul
stc
pop
repz
jbe
insb
outsb
jo
jle
jnp
iret
push
fcoml
rorl
imul
jmp
int
nop
pop
cmp
adc
cwtl
in
xchg
adc
scas
lds
inc
testb
push
cmp
pushf
xorb
addb
inc
mov
sub
mov
jge
pop
pop
lds
and
mov
pop
fwait
sub
mov
test
mov
iret
xor
arpl
adc
lahf
or
fcmovnb
add
mov
shll
jbe
test
aam
jl
push
int3
popw
mov
aad
lock
data16
daa
xchg
inc
cwtl
sbb
clc
xchg
lods
ret
cmp
gs
sub
loop
adc
jg
sbb
pusha
gs
and
mov
outsb
sub
or
arpl
cwtl
or
outsb
mov
mov
rcrb
mov
ret
xchg
out
bound
cmp
or
inc
pop
fwait
outsl
xor
cmp
inc
mov
fs
rcrb
xchg
mov
adc
push
pop
out
sbb
test
xchg
mov
jbe
mov
out
mov
cmc
ret
mov
mov
cmp
insl
cmp
js
mov
pop
lret
inc
insl
push
dec
pusha
and
xor
rcrl
stos
xchg
mov
jnp
mov
aam
cmp
pop
or
in
or
adc
cmp
out
adc
xchg
aaa
sub
jmp
cmp
mov
and
sbb
es
es
pop
mov
sbb
or
mov
pushf
mov
xlat
addl
bound
xchg
leave
loope
cmp
imul
push
fmuls
rcll
jmp
jecxz
cmpsl
loop
lods
andl
lods
fldt
loope
pop
push
push
xchg
clc
inc
hlt
pop
popa
iret
movsb
mov
lods
lcall
or
xor
scas
pop
mov
cmp
ficoms
cmp
mov
mov
cwtl
xchg
stc
hlt
test
or
mov
add
push
mov
lret
ret
je
fldt
mov
scas
mov
pop
mov
push
jbe
dec
out
xor
aam
adc
xor
scas
jg
rorb
mov
lock
or
sbb
pop
imul
and
mov
lcall
mov
aaa
cmp
or
xor
xchg
lcall
ret
outsb
test
and
jg
xchg
mov
mov
das
hlt
dec
mov
loope
daa
add
sub
stos
push
mov
jb
and
jns,pt
shrb
data16
adc
lods
cmp
push
sti
add
inc
icebp
sub
mov
add
pop
inc
pop
pusha
movb
dec
xchg
sahf
adc
dec
push
jne
inc
xchg
adc
stos
dec
cmc
icebp
lods
mov
sub
ret
or
push
lret
test
mov
pop
and
stos
cmpl
add
adc
add
adc
mov
and
inc
out
cltd
jne
aad
and
pusha
push
or
into
aas
das
stos
xor
xchg
scas
call
imul
in
jae
inc
imul
push
shlb
and
mov
jbe
cmp
push
rclb
scas
push
mov
mov
cmpsl
dec
sub
cli
cwtl
pushl
inc
fs
xchg
mov
popa
dec
scas
inc
sub
push
xchg
sbb
sub
decl
push
neg
add
mov
inc
xchg
movsb
xor
sub
push
das
scas
jl
push
cld
fwait
push
out
test
cmpsb
loope
inc
mov
push
dec
add
adc
mov
sbb
dec
je
push
or
out
mov
jg
sbb
jbe
nop
xchg
jmp
ficomps
imul
andb
mov
sti
mov
test
inc
cs
xor
and
xchg
pop
notl
cltd
mov
push
lock
mov
sarl
jb
pushf
xor
ds
or
dec
into
mov
dec
add
mov
aam
bound
aaa
outsl
xchg
sub
pop
cmpsb
mov
aas
xor
and
call
pop
movsb
clc
and
xchg
imul
lods
or
fimull
adc
inc
mov
mov
insb
cmpsb
stos
ss
and
adc
gs
and
mul
in
inc
movsl
out
xor
imulb
in
mov
scas
popa
dec
sbb
aam
xor
add
add
xor
addb
jae
inc
imul
ja
dec
adc
lea
icebp
pop
or
adc
std
mov
add
leave
mov
imul
in
push
jg
pop
mov
loopne
dec
pop
mov
std
fldcw
jge
daa
jns
lahf
add
ret
popf
add
movsb
pop
inc
dec
cmpsb
ja
cs
jmp
rcrl
pop
mov
and
cmp
push
cs
data16
fisubrl
pop
add
and
dec
lret
jae
lret
out
lcall
repnz
mov
test
jg
pop
fisttpl
jbe
push
out
xchg
jbe
mov
xor
push
arpl
fs
cmpsl
fldenv
jecxz
mov
xchg
pop
xlat
add
shll
int
fistpl
cmp
mov
bound
lods
setbe
add
fwait
roll
in
mov
xlat
decl
add
jb
jg
dec
insl
pushf
cmp
dec
push
int
mov
xor
add
cltd
and
jb
jne
pop
fwait
sub
mov
lds
and
sarb
push
adc
outsb
aaa
sbb
jns
push
xchg
adc
pop
push
mov
call
xchg
imul
sub
cmpsb
stc
pop
jbe
rcl
push
rorb
outsl
xchg
adc
es
pop
clc
ss
jmp
fs
pusha
test
cmp
mov
pop
lret
cmc
xchg
push
repz
cs
sbb
jp
xor
inc
imul
mov
xchg
movb
pop
clc
mov
pop
daa
mov
loope
cmp
pop
outsl
rolb
inc
jae
xchg
cmp
std
mov
adc
xchg
push
int
adc
adc
xchg
xchg
mov
adc
loopne
shr
roll
jmp
lock
pop
scas
jmp
lcall
mov
and
add
sti
scas
fmull
mov
ret
jg
pop
sbb
xor
push
cmp
xor
or
push
mov
add
or
fisttps
inc
adc
inc
xchg
push
fnstenv
jno
daa
xor
or
aas
inc
sbb
mov
add
adc
mov
mov
sbb
popf
cmpsl
jle
and
jmp
dec
pop
test
pop
jns
nop
push
in
out
fsubl
xlat
adc
adc
std
inc
adc
sbb
add
les
pop
jb
mov
and
inc
xchg
pop
aas
dec
fldl
mov
pushf
inc
jnp
cltd
xchg
push
fstps
dec
icebp
imul
fdivrl
movsl
mov
mov
mov
and
pop
lods
push
adc
sbb
dec
sub
clc
in
pop
out
sub
pop
xor
ljmp
push
stos
push
cmpsb
jge
push
shll
xchg
fmuls
xor
jbe
push
daa
jl
iret
cmp
xor
stc
xchg
cmpsb
mov
fists
mov
sub
push
loopne
popf
pop
jmp
jno
or
adc
scas
test
adc
push
add
push
mov
cmp
xchg
xor
stos
dec
mov
xor
cltd
push
and
and
pop
mov
and
sub
std
add
loop
jno
mov
jmp
xchg
imul
roll
push
mov
lods
mov
jbe
hlt
push
dec
push
shrb
cmc
xchg
movsl
dec
mov
movb
stos
icebp
fs
lret
push
pop
cmp
sub
push
pop
in
addb
sub
mov
inc
jo
sub
jo
cmp
outsl
mov
and
pop
aam
call
jmp
mov
cmp
sbb
push
and
mov
iret
gs
lds
and
mov
adc
push
adc
fstl
mov
enter
adc
push
lds
fcompl
push
loop
mov
out
sub
shlb
rorl
cmp
cmc
arpl
pop
inc
in
insb
daa
xor
pop
mov
xor
sbb
fsts
mov
loope
popa
jg
mov
jne
sbb
stc
gs
jle
lret
lret
sbb
jg
sub
stos
loope
int3
lea
inc
sbb
cli
lods
or
imul
jmp
movsb
fdivp
adc
xchg
push
add
in
or
je
xchg
mov
out
sub
mov
add
xor
ja
push
xchg
pop
and
mov
repnz
cmp
in
and
sub
mov
mov
mov
sub
mov
push
xchg
mov
jbe
js
mov
adc
jg
ja
pop
lret
mov
push
faddl
sbb
xor
adc
pop
bound
fbstp
dec
lds
xchg
xor
out
add
popf
movsb
adc
inc
popa
xchg
push
into
pop
cmpsb
or
push
lods
scas
cmc
inc
sbb
add
jnp
fildl
mov
movsl
and
in
movsb
movsb
sahf
or
lea
sub
xor
icebp
mov
lods
lods
pushf
sbb
or
imul
imul
rcll
scas
xlat
out
xor
sahf
gs
sub
iret
fcomip
iret
andb
es
pop
mov
sbb
sbb
mov
cld
ds
mov
stos
repz
mov
out
push
sub
and
shll
stc
sbb
loope
mov
push
add
mov
jns
aad
add
mov
outsl
mov
inc
out
mov
mov
and
inc
filds
test
inc
push
in
sbb
std
mov
push
les
in
imul
sub
push
mov
js
mov
lock
iret
mov
mulb
xlat
adc
ja
lock
in
or
jns
xchg
and
push
adc
aad
addr16
push
and
lock
lds
pusha
dec
inc
and
insl
int
imul
mov
jne
test
cwtl
add
push
fwait
adc
pop
in
push
ds
xchg
xlat
testl
xchg
sbb
pop
xor
mov
outsl
jl
dec
dec
pop
addb
ds
incl
popf
sbb
lret
push
repnz
mov
sarl
frstpm(287
jl
cli
cmpsb
pop
andb
in
push
sub
cmp
adc
cli
sub
push
stc
lock
mov
cwtl
ficomps
xchg
mov
and
jnp
movsl
mov
or
movsb
scas
rcr
jmp
or
mov
insb
mov
dec
pop
sahf
int
into
sbb
test
mov
hlt
xchg
pop
jae
cmp
out
mov
inc
popf
dec
sbb
mov
jnp
pop
or
or
xor
aam
jb
cmp
push
paddusb
pop
or
mov
inc
add
jbe
pop
sub
push
shll
mov
mov
cmp
cmp
sub
aas
sbb
push
dec
dec
pushf
add
testl
dec
adc
fwait
call
sbb
rcrb
int
icebp
popf
cmpsb
or
fcmove
jge
pop
fstps
mov
pusha
aam
call
inc
into
mov
xchg
aaa
ds
mov
sub
mov
add
xorb
add
xchg
xchg
push
ljmp
jae
sub
jb
mov
popa
ficoml
das
pop
and
xor
icebp
jbe
leave
lret
add
cmc
add
add
sub
inc
sub
aam
lret
mov
jmp
xchg
push
scas
lock
cmp
fistpl
lea
mov
mov
gs
adc
enter
jae
dec
xlat
aaa
pop
pop
out
mov
jp
mov
rorl
nop
pop
inc
pusha
stos
inc
jns
mov
jl
fnstenv
ret
fnstcw
push
stc
xor
pop
pop
ret
ja
or
mov
mov
arpl
seta
addr16
call
dec
shl
xchg
lcall
pushf
mov
xor
pop
dec
xchg
cli
or
out
ss
mov
and
lods
js
xchg
mov
jmp
scas
sahf
pop
mov
in
adc
shlb
les
sub
inc
mov
push
shrl
ja
iret
sub
cld
cmp
mov
xchg
loopne
sub
and
mov
mov
fs
iret
testl
cli
push
nop
push
mov
push
lds
shrl
cmc
pop
mov
sbbl
mov
les
push
cltd
mov
sub
push
xor
mov
daa
mov
scas
push
lret
add
mov
jno
jp
aas
jle
pop
push
jl
imul
inc
inc
or
pushl
ljmp
outsb
dec
push
sub
jmp
mov
sub
mov
stc
or
outsb
loope
or
cmp
je
fisubrl
push
mov
inc
pushf
int3
int3
je
ret
inc
jo
cmpsb
or
xorl
stos
jmp
sub
dec
or
in
dec
push
stos
ss
arpl
dec
adc
add
or
adc
nop
outsl
sbb
pop
ss
stos
ja
jno
and
ljmp
inc
frstor
xor
and
mov
push
lods
pushf
sub
cwtl
sahf
cmp
shlb
mov
adc
dec
mov
idiv
sbb
rorb
es
les
push
lock
inc
outsb
mov
js
clc
push
mov
inc
xchg
sbb
xchg
xchg
mov
cmp
and
ffreep
xor
dec
test
clc
out
pop
and
loope
xchg
add
lretw
scas
push
jp
inc
sbb
ret
jo
mov
mov
insb
mov
clc
sub
mov
add
xchg
in
enter
and
xchg
push
mov
ret
jle
add
jge
sub
stos
in
jmp
das
mov
xchg
insl
cmp
xchg
stos
out
cmp
movsb
mov
or
cmp
lcall
outsl
sub
rcr
pop
sub
stos
sub
xor
dec
mov
push
out
xor
fsubl
xchg
icebp
dec
int3
js
arpl
bound
popf
pop
sub
cld
fadd
inc
mov
in
pop
pushf
xchg
jae
pop
sbb
sbb
xchg
sbb
imul
jno
xchg
pop
outsl
sbb
mov
cltd
iret
mov
pop
sarb
or
pushf
les
imul
dec
and
or
icebp
movsl
mov
repz
daa
out
pop
movsb
out
mov
lods
dec
call
xchg
adc
mov
adc
mov
jl
mov
jns
fwait
stc
movsb
out
inc
xchg
les
stc
jae
sbb
cmp
mov
lahf
xchg
test
fchs
imul
mov
stos
mov
sub
dec
cltd
cmpsb
xchg
xchg
insb
aaa
lock
dec
push
sbb
xchg
leave
fsubs
dec
xchg
icebp
enter
loopne
or
addr16
push
aad
pop
sub
data16
das
rcrl
adc
daa
rcr
xchg
add
xchg
loop
xchg
mov
jl
leave
xchg
jge
cmp
xchg
sbb
lods
pop
xchg
cmpsb
sub
or
lea
dec
shr
prefetch
and
pusha
pmaxub
xchg
xor
test
ret
sbb
mov
aas
sbb
or
dec
push
push
add
mov
fistpl
test
and
adc
test
mov
fistpll
je
push
dec
sbb
mov
pop
cmpsl
scas
sub
xchg
or
jae
cs
sub
aam
test
and
loope
loope
aam
out
inc
sbb
pop
mov
pop
movsl
lret
aad
das
mov
out
pop
cltd
push
jmp
mov
mov
jbe
imul
gs
movsl
sub
stos
gs
loopne
shll
pop
xor
xchg
clc
daa
pop
ret
sub
cmp
ret
mov
pop
stos
test
ja
push
in
cmp
xchg
mov
pmulhuw
mov
call
jnp
and
pop
xchg
add
fidivl
rcrl
daa
inc
mov
xchg
out
push
cmp
aaa
or
mov
mov
dec
inc
ds
jnp
xlat
addl
cmp
dec
jmp
xchg
mov
and
int
or
push
rclb
cld
mov
xchg
pop
or
aaa
mov
int
lahf
dec
aam
pop
mov
mov
es
mov
pop
xchg
inc
ja
mov
insl
dec
jp
fs
loopne
inc
insl
out
xor
aas
cmc
shlb
pop
push
mov
cltd
add
add
jp
mov
mov
and
outsb
sub
jmp
dec
pusha
mov
push
rep
mov
mov
pushw
add
inc
sub
pop
cmp
dec
dec
in
out
stos
sbb
add
shl
xchg
adc
bts
inc
cld
aaa
dec
lock
out
insb
mov
mov
pop
jmp
pushf
sar
dec
push
xchg
sahf
xchg
stos
xchg
xor
lcall
xchg
cld
or
shr
cs
add
pop
into
outsb
inc
testl
jmp
out
in
bnd
push
inc
cmpsl
insl
add
fisttps
inc
xchg
faddl
out
cmpsl
and
pop
or
out
ret
cmc
jno
cmp
cmp
adc
jecxz
test
xchg
pop
lea
cmc
push
mov
stos
outsb
and
xchg
pop
cld
mov
in
and
dec
fwait
das
pusha
call
cmp
fistpll
ljmp
int
call
cmp
sahf
push
pop
cmp
adc
test
push
jbe
fadds
add
mov
pushf
jnp
mov
aad
ret
or
push
sbb
test
push
daa
mov
mov
jl
lret
or
mov
cs
lret
mov
sbb
and
repnz
mov
sbb
cli
mov
mov
movsl
jmp
dec
jp
pushf
test
clc
aaa
jl
cmc
test
mov
test
mov
addr16
out
inc
jnp
inc
jb
and
lret
mov
add
push
aad
xchg
mov
push
and
mov
and
xchg
popf
inc
neg
jnp
nop
aas
push
mov
push
mov
mov
fwait
loop
sub
dec
cld
or
mov
push
dec
movsl
inc
fsubl
sbb
cmp
fwait
loop
jecxz
mov
insl
inc
daa
or
sti
add
add
pop
and
into
or
xchg
sub
mov
adc
test
es
loopne
jno
cmp
arpl
fisubrl
imul
add
add
xlat
add
int
or
jb
mov
cmp
pop
xchg
jmp
and
or
push
push
clc
fs
mov
add
jbe
sbb
mov
mov
nop
nop
add
out
stos
push
and
xor
sub
imul
xor
xor
xor
jmp
add
into
imul
inc
sbb
add
mov
jne
mov
and
or
out
cmp
andl
or
into
mov
pushf
pop
mov
push
push
leave
cmp
jecxz
enter
mov
call
pop
mov
subb
fldcw
repnz
es
fisttpll
leave
inc
add
movsl
clc
adcb
fisubs
pop
mov
push
xor
maskmovq
mull
out
or
mov
mov
sbbl
mov
out
lods
fimull
cmpb
lret
ljmp
out
mov
movsb
mov
mov
lret
and
mov
pop
sub
add
sub
into
shlb
cmp
test
fcom
ret
mov
rclb
pop
lock
icebp
lahf
shll
sub
ficoms
sahf
jge
adc
jge
lods
imul
jl
lods
lock
lods
pop
ret
or
iret
test
scas
sbb
ss
mov
jecxz
ds
push
pop
xor
or
pop
stos
pusha
ds
cld
inc
test
test
shll
jno
and
and
inc
inc
int
add
insb
shll
lock
cmc
insl
mov
lds
bound
fpatan
xor
popa
rorl
xor
sbb
adc
scas
cmp
gs
pusha
ret
pop
mov
das
int
mov
test
fstpt
out
add
icebp
and
mov
fcos
pop
iret
xchg
popf
aam
daa
sbb
mov
loope
dec
inc
ljmp
pop
lea
scas
fisubrs
out
fbld
in
fstp
adc
push
xor
lahf
in
scas
jge
mov
jo
out
cmp
in
mov
push
aam
adc
jne
mov
pop
outsb
jl
xlat
mov
or
mull
imul
fnstcw
out
push
mov
dec
imul
cltd
mov
addl
sbb
pop
loopne
pusha
ljmp
mov
shl
add
and
insb
push
pop
ret
outsb
mov
mov
dec
jg
sahf
or
fs
lea
outsb
pop
sbb
dec
sbb
lea
sahf
cli
jns
sbb
xlat
sbb
xor
pop
xchg
push
cmpsb
mov
jmp
jmp
adc
adc
jo
movsbl
shll
push
mov
insl
stos
inc
in
or
xor
mov
xor
test
jecxz
xchg
notl
mov
cli
test
push
sbb
test
sahf
rcr
stc
dec
cli
cwtl
mov
mov
pushf
out
lods
pusha
pusha
ret
xor
or
cwtl
lods
ror
xor
mov
out
adc
pcmpgtd
adc
add
pop
ljmp
or
mov
mov
xchg
push
arpl
xor
ret
and
out
ret
leave
push
pop
divl
jl
sti
arpl
int3
rol
sub
jae
sub
dec
or
imul
mov
mov
add
sahf
data16
dec
jmp
outsl
adc
movsl
mov
sub
lock
mov
sbb
or
adc
in
popf
adc
shl
in
mov
enter
ds
clc
aas
sbb
mov
xchg
mov
sbb
pop
aad
xor
outsb
mov
dec
lea
and
loop
call
mov
add
jbe
dec
enter
fidivs
in
mov
rcl
cmc
inc
mov
jb
scas
ds
sarl
leave
test
pop
std
push
loop
pop
out
cli
nop
inc
xchg
ja
cli
nop
sbb
cmp
notb
sbb
mov
sub
sti
sti
jno
sbb
test
mov
mov
sub
jo
fcomps
pop
fimuls
lods
mov
fildll
daa
test
imul
int
add
fisttpll
sbb
imul
and
jl
mov
jb
mov
jp
mov
push
dec
fadds
inc
test
jmp
mov
xchg
mov
mov
jle
mov
lds
adc
pop
inc
lods
ss
mov
mov
pop
aam
mov
int
dec
jp
out
aad
adc
push
cwtl
ljmp
ds
pushl
inc
popa
sub
xchg
jp
push
stc
jb
ja
cmc
fcos
jp
xchg
mov
insl
or
sbb
mov
sbb
adc
int3
or
mov
sub
loop
push
or
xchg
mov
jno
xor
arpl
mov
dec
aas
cmp
jmp
adc
add
xchg
xor
or
das
xor
lock
das
pop
fdivrp
ss
jg
push
pop
dec
fadd
scas
test
adc
filds
stc
sub
popf
jmp
cli
mov
sub
xchg
and
lock
ljmp
test
add
fs
data16
stc
adc
popa
sbb
xchg
mov
jecxz
push
iret
out
aam
mov
mov
mov
push
jecxz
pop
aaa
xchg
jge
mov
lock
mov
sub
lret
mov
repz
aaa
jmp
adc
subl
loop
aas
mov
in
xlat
mov
push
rcrl
adc
in
mov
push
jg
add
maskmovq
testl
adc
jno
pop
stc
jle
ret
inc
in
cmc
push
stc
testl
aad
sbb
movsl
cld
and
sub
mov
lea
jns
adc
shr
insb
movsl
dec
push
fisubrs
adc
es
inc
shufps
pusha
sbb
insb
movsl
scas
shlb
fwait
pop
cmpsl
xchg
call
jmp
iret
dec
dec
pop
int3
sbb
and
data16
insb
cmpsb
mov
cwtl
imul
and
aaa
bound
insb
pop
or
movsb
or
pop
pop
jne
mov
mov
nop
out
stos
mov
push
mov
in
repnz
dec
cmpsl
dec
push
sbb
into
cmp
mov
jae
mov
pop
ljmp
shlb
jbe
cmp
movsb
or
sar
jo
sahf
data16
mov
pop
gs
inc
inc
jno
ds
movsl
inc
xrelease
test
mov
pop
scas
and
add
cltd
faddp
xor
aam
jle
lds
jo
xor
jbe
sbb
shlb
cs
ficoms
mov
xor
les
gs
add
lods
in
mov
fsts
xor
and
daa
outsl
insl
in
push
andl
cli
mov
fdivp
xchg
insb
push
inc
addr16
rcrb
ja
xchg
mov
aam
movsl
loope
mov
mov
jmp
fisubl
push
out
adc
xor
jb
push
stc
daa
xchg
mov
inc
fcmovbe
push
jg
push
push
jns
push
dec
push
imul
repnz
js
dec
pop
in
cmc
jg
cwtl
out
xor
lahf
insl
push
push
xchg
xor
xchg
sub
popa
xor
sbb
out
and
mov
call
es
and
jbe
cmpsb
in
jnp
popf
mov
aas
outsb
pop
adc
jae
mov
lods
pop
cltd
or
and
mov
and
pop
push
and
cmp
mov
std
dec
pushf
lods
inc
ret
popf
xchg
subb
inc
inc
or
xchg
sbb
xor
xchg
pushf
dec
or
add
jp
pop
dec
sub
sahf
xor
dec
xchg
cmpsl
cmp
inc
fildll
mov
mov
fwait
sbb
sbb
inc
mov
in
je
pop
sbb
and
cli
mov
xor
idivl
daa
aaa
inc
dec
add
adc
add
enter
pop
pop
ret
xor
pop
ret
sbb
and
push
lahf
addr16
adc
bound
adc
inc
test
clc
in
das
add
mul
adc
test
int3
mov
xor
mov
push
mulb
pop
call
push
lret
dec
push
mov
mov
jmp
inc
sbbl
rcrl
aas
jmp
outsb
push
sub
push
jae
imul
dec
loope
push
es
and
jo
mov
addr16
fidivs
sub
cwtl
dec
idivl
pushf
out
fwait
es
out
adc
cmpsb
push
addr16
and
call
sub
xorl
test
jo
mov
lea
leave
push
and
sub
push
sbb
inc
jnp
cld
xchg
fcompl
adc
rorb
jns
cmp
sbb
out
lret
jge
dec
dec
aam
sarl
pop
pop
mov
incl
stos
into
fisttpl
imul
xchg
enter
lods
cmc
push
jnp
pop
sbb
mov
in
dec
xchg
xlat
lea
mov
adc
cmp
jae
jle
lock
push
jno
stc
pop
jl
fildll
mov
pop
filds
mov
imulb
or
es
repnz
popl
fs
insl
jbe
adc
divl
ret
dec
lods
jge
dec
push
test
ja
push
fstl
fmull
pop
mov
jge
in
dec
pop
add
cmp
dec
je
dec
xchg
adc
sbb
loope
lgs
xchg
mov
mov
cwtl
daa
mov
cmp
inc
ret
fwait
inc
test
add
int
mov
cmp
int
xchg
xor
mov
outsl
inc
xchg
lahf
xor
es
mov
je
jne
push
jle
mov
pop
xchg
push
jge
inc
dec
jp
adcl
add
enter
dec
or
or
ja
nop
clc
adc
mov
mov
push
fsubp
aaa
mov
testl
ret
cmc
inc
insb
xor
mov
cwtl
pop
outsl
insl
dec
xchg
xchg
fistpl
mov
les
icebp
cmp
shl
out
cmpsl
inc
fisttps
popa
insl
cmp
in
outsl
into
lods
daa
sub
or
lcall
or
inc
push
or
adc
outsb
fistpll
jp
cmp
or
and
mov
clc
shrb
gs
imul
jbe
pusha
sub
xchg
xor
out
data16
in
stos
sub
das
mov
and
lret
and
dec
inc
fscale
cmp
inc
out
dec
adc
pusha
jp
jecxz
push
fidivrl
jg
mov
jmp
fldenv
xchg
sbb
sbb
cmp
xor
adc
mov
adc
xor
cmp
or
jg
adc
jne
cmpsb
mov
ljmp
jmp
jbe
mov
iret
xor
sub
inc
loopne
dec
mov
aam
xor
and
pusha
imul
mov
frstor
jl
stos
cld
das
xor
dec
adc
xor
fwait
loopne
push
iret
aas
adc
xchg
fwait
lods
lret
jle
sti
aaa
lret
lods
jmp
pop
call
inc
js
fbstp
push
lcall
gs
jp
ss
lock
inc
outsl
sub
test
pop
inc
dec
add
shrl
xor
int3
xor
push
ljmp
jecxz
js
and
fsubs
jp
aas
add
jae
pop
push
faddp
fstl
cltd
notl
add
cmpsb
cmp
mov
sbb
lods
mov
xchg
iret
or
mov
sarl
cmp
xor
inc
nop
dec
int3
inc
xchg
adc
test
push
lahf
and
pop
aam
xchg
pop
push
xchg
cmp
bound
mov
adc
lds
pop
mov
test
xchg
push
push
dec
cmp
test
int3
pop
fistpl
insb
push
outsb
fsubl
rorl
or
jg
iret
in
ja
push
data16
push
into
cmp
push
jg
je
xchg
sub
and
sub
push
push
inc
sub
pushf
mov
sub
lods
sbb
pop
dec
adc
mov
fmul
fbld
stc
inc
shll
les
inc
cmpsl
adc
mov
pop
xchg
dec
ret
es
cltd
hlt
push
mov
mov
push
dec
mov
imul
popf
fisttpl
xchg
or
es
add
fdivr
shll
cmpsb
movsb
in
xor
jp
jmp
aaa
ja
sub
sahf
outsb
mov
inc
xor
loop
adc
rorb
mov
or
jp
adc
popf
sub
cmp
add
mov
std
and
int3
and
xor
or
shr
sar
iret
mov
cltd
push
test
add
lea
add
xchg
cmpsb
out
push
and
jmp
dec
dec
sarl
testb
mov
stos
xor
scas
mov
sub
lahf
inc
js
test
popa
jp
outsb
pop
pop
popf
cmpsl
cwtl
inc
pusha
daa
mov
in
push
add
test
stos
inc
call
and
push
aas
dec
xchg
pop
outsl
or
pusha
into
sub
cmpsb
xchg
dec
aaa
or
mov
xor
rcrl
pop
mov
hlt
fidivrl
push
movsb
bound
out
sub
repz
sub
adc
icebp
jecxz
inc
in
adc
cmpsb
pop
and
mov
xor
loope
dec
scas
mov
mov
mov
stc
inc
add
in
or
mov
rep
insb
pop
add
xchg
xchg
cmpsb
movsl
jne
add
push
pop
cwtl
ljmp
jle
xor
sub
cmp
mov
or
dec
dec
xchg
pop
test
cmp
jno
mov
mov
movl
dec
sbb
cs
pop
add
xor
mov
fs
movsb
enter
shll
mov
sbb
ret
xchg
xchg
sbb
xchg
xchg
mov
mov
jne
repz
ret
jp
cmpsl
add
rorl
cmp
push
cmp
nop
jle
pop
add
stos
push
ret
dec
xchg
clc
call
sti
imul
cmpsl
iret
hlt
mov
insb
inc
push
lods
fsubrs
cs
push
test
in
mov
push
adc
xchg
xchg
jne
pop
add
xchg
pop
sarl
ljmp
mov
clc
lock
sbb
stos
rol
aas
and
cmpsl
int3
xor
and
xchg
in
push
loope
sub
and
hlt
inc
test
fidivrl
icebp
lods
push
movsb
inc
pop
jne
push
sub
sti
fsubr
mov
pop
push
cmp
in
dec
xchg
add
adc
into
mov
lcall
dec
pop
aaa
lret
adc
adc
popf
ret
ja
ds
lcall
mov
jne
xchg
out
repz
out
test
jg
loope
aas
in
shr
and
push
or
es
movsb
add
xchg
jbe
adc
or
icebp
out
push
mov
andl
mov
or
cmp
fdivs
cmpsb
mov
aas
push
out
mov
test
into
xor
loope
gs
mov
dec
sbb
sbb
and
sub
fimull
mov
lahf
cmp
xor
out
addr16
pop
sti
stc
push
and
rclb
push
insb
mov
or
xchg
sub
sbb
cmp
xor
jbe
pop
jg
insl
or
ss
mov
enter
aad
loope
inc
or
cli
addr16
xchg
push
ret
aaa
dec
push
push
dec
fistps
insl
adc
les
mov
int
sub
lods
mov
xor
xchg
xchg
fdivl
xchg
insb
shll
xchg
adc
push
sub
es
imul
into
mov
insl
ss
or
hlt
jecxz
cltd
fcmove
xor
sti
loop
pop
popa
in
mov
lret
push
sub
aas
mov
loop
test
mov
sub
gs
dec
jmp
add
js
imul
fwait
sub
lret
jle
cmp
add
dec
xchg
adc
xor
out
fldt
lahf
ss
gs
mov
jge
jo
sbbl
pop
mov
or
test
pop
enter
add
mov
ss
lahf
cwtl
sub
and
mov
outsb
inc
push
test
inc
mov
fwait
xchg
push
xor
addr16
cmc
mov
jmp
shlb
lret
outsl
lahf
bound
sti
cwtl
dec
xchg
sahf
mov
push
cwtl
xchg
out
test
pop
hlt
pop
mov
xchg
lds
das
ret
or
testl
into
mov
and
jae
mov
xchg
add
fs
ljmp
shlb
arpl
ljmp
lea
test
sbb
dec
and
mov
push
add
pop
int3
xor
mov
int3
sub
loop
or
iret
fcompl
inc
ss
dec
mov
je
sub
sub
cmp
aad
daa
xorb
sbb
loop
into
push
fstl
out
cmovl
hlt
addr16
popf
dec
push
cmpsb
mov
mov
leave
adc
out
dec
mov
mov
int
dec
in
adc
jle
or
mov
ret
mov
lahf
sub
sub
cmp
jmp
jns
arpl
mov
mov
std
jp
jmp
mov
rorb
mov
mov
sub
leave
add
sub
lock
push
adc
adc
pop
mov
mov
std
xchg
aas
loope
mov
mov
inc
jno
xchg
mov
std
mov
inc
and
pushf
in
and
mov
ds
jl
shlb
stc
inc
sbb
mov
jle
ja
mov
aaa
jo
leave
cmp
pop
adc
mov
ret
inc
push
outsb
jno
aas
or
dec
mov
cs
push
in
loope
adc
fstl
hlt
sar
daa
and
repnz
mov
sub
je
mov
adc
add
inc
fwait
jne
push
ds
arpl
jns
loope
dec
aaa
mov
outsl
pushf
lods
test
adc
arpl
push
xchg
push
push
fisttps
sub
xor
and
push
out
das
cmpsb
test
mov
ljmp
lahf
fdiv
dec
dec
pop
push
arpl
or
outsb
or
push
mov
aam
lods
adc
xchg
ret
js
clc
add
xchg
pop
mov
mov
sbb
iret
sub
adc
sub
fnstenv
dec
mov
imull
push
int
xchg
pop
or
test
movsb
cmpsb
mov
cs
out
mov
dec
js
nop
jp
jnp
out
mov
jno
adc
or
sti
pop
ja
pop
cmp
mov
cli
loop
xor
xor
pop
aaa
insl
or
sub
cs
and
xchg
loop
mov
aaa
pop
sarb
add
xor
xlat
push
dec
jae
js
mov
cmp
lret
push
mov
mov
add
scas
pop
int
es
sahf
arpl
iret
jmp
mov
inc
and
in
dec
adc
fistpll
repnz
imul
sub
dec
dec
push
sarl
sbb
test
cmp
loopne
inc
movsl
push
lods
push
ja
xchg
pop
push
mov
fdivrs
shl
pop
sbb
dec
sub
fnstsw
lods
cmp
add
xor
imul
notb
pop
int
mov
xchg
pop
popa
adc
mov
pop
and
fidivs
mov
xchg
clc
je
cmpsl
and
fs
jo
and
inc
mov
in
out
insb
decb
mov
jo
jo
cmp
pop
sub
imul
mov
cmp
jg
mov
cwtl
clc
lock
cmp
mov
test
add
movsb
lcall
or
sarb
or
fcmovnu
inc
pop
inc
bound
mov
xor
dec
imul
add
or
adc
add
adc
test
or
pop
add
inc
cld
dec
ror
out
popa
and
inc
adc
loopne
mov
es
test
lret
test
mov
int3
inc
cli
inc
daa
jl
rolb
test
mov
int3
jl
sahf
cmp
jbe
jns
push
mov
push
insb
mov
xchg
pop
jmp
inc
mov
pop
push
push
inc
hlt
inc
push
dec
and
js
add
ljmp
movsl
sub
fcomp
lret
adc
hlt
pop
jbe
lock
cmp
inc
pop
adc
jbe
xchg
adc
pop
and
and
jle
iret
je
adc
add
pop
stos
jl
mov
mulb
mov
and
cli
shll
mov
dec
enter
cwtl
out
bound
jmp
daa
jmp
mov
inc
stos
test
pop
mov
pop
jge
dec
push
dec
sub
lea
mov
dec
mov
or
cmpsl
mov
aas
push
mov
aad
xlat
sub
cs
mov
push
mov
mov
cmp
jecxz
mov
daa
inc
inc
repnz
rcrl
sbb
js
fdivrl
cmc
rclb
scas
sti
sbb
imul
add
and
lahf
jge
out
adc
fstpl
jbe
mov
jo
pop
in
out
scas
sub
inc
enter
flds
lods
pop
mov
inc
jle
inc
inc
push
test
mov
dec
push
fidivl
negl
xchg
ljmp
cmpsb
xorl
sbb
push
es
inc
push
xor
cmp
dec
std
scas
jno
pop
mov
push
or
leave
xlat
loope
orb
mov
mov
sbb
xor
fmul
jg
lret
jnp
xor
adc
mov
rcll
mov
icebp
cld
iret
ds
dec
bound
lret
sub
pop
outsb
aad
lahf
pop
mov
mov
cmpb
lods
sbbb
gs
aas
mov
mov
jbe
cmc
pusha
xchg
aad
adc
sti
and
mov
enter
insl
sub
mov
sub
aad
loope
in
repz
cmp
jge
and
int
gs
push
xor
testb
jp
xor
xchg
enter
rcr
jg
xchg
insl
ror
jns
cld
out
sbb
outsl
in
inc
mov
push
mov
inc
shlb
fistl
jle
arpl
sahf
mul
inc
mov
dec
ja
je
add
fisubrl
inc
dec
stc
fsubrl
cwtl
and
inc
sbb
xchg
fdivs
dec
ret
outsl
test
ret
cwtl
enter
rorl
out
sub
cltd
xor
push
sbb
or
add
jb
adc
scas
fs
imul
or
mov
outsb
pusha
lods
jmp
gs
dec
pop
test
push
data16
out
sahf
aas
enter
ret
std
jle
insb
rcrb
loope
and
fstpl
std
dec
lret
cld
shll
push
cmpsb
aaa
notb
sub
shrl
enter
mov
aad
inc
add
cmp
pop
add
push
push
mov
idivb
add
dec
clc
fistpll
xlat
add
and
xchg
adc
sbb
stos
xor
push
pop
adc
pop
mov
fisubl
fistpl
xchg
adcb
xor
inc
pushf
push
mov
and
imul
jecxz
and
inc
cmp
in
sub
cmp
les
xchg
xchg
push
stc
push
aas
cld
mov
xchg
ds
std
pop
dec
gs
into
idivl
jle
cmp
xchg
mov
pop
cmp
popa
xor
out
scas
xor
out
int
jl
add
cmp
mov
pop
scas
adc
icebp
jle
out
jp
leave
fstps
aad
sub
mov
push
xor
mov
stos
jne
add
xor
mov
jne
adc
sarl
sub
pop
push
xlat
aaa
inc
mov
jecxz
add
test
xor
aaa
and
pusha
push
cld
js
popa
outsb
jne
pop
push
pop
mov
mov
ljmp
iret
jo
aam
nop
outsb
push
cmp
fmul
pop
movsl
mov
pop
xchg
cmp
mov
stc
push
cmp
stos
pop
pushf
fwait
xor
adc
jge
adcl
mov
cmp
ja
movsb
shld
jne
lret
fimull
pop
sti
and
int
adc
inc
fnsave
adc
jnp
pop
iret
cli
lret
xchg
add
cmp
dec
lcall
aam
dec
pop
jns
lcall
cld
sbb
jg
je
inc
stos
mov
stos
ds
mov
hlt
clc
fsubs
rcrl
sar
push
nop
xor
mov
mov
mov
jecxz
fwait
sub
jb
xchg
cli
xchg
cmp
push
test
pushf
pop
ret
dec
clc
das
push
stos
repnz
pop
ret
xor
or
mov
imul
cmc
jge
pop
cwtl
mov
sbb
imul
inc
mov
sbb
add
lahf
or
xor
dec
dec
insb
push
push
dec
loop
mov
or
loop
clc
pop
stos
cmp
into
fcmovne
xor
push
enter
mov
sbb
clc
and
sub
and
pop
push
sahf
and
sbb
cmp
cmpsb
xchg
out
mov
inc
push
xchg
sahf
cmp
mov
mov
pop
popa
gs
scas
cmp
loopne
aad
pop
push
sub
in
sub
pusha
out
repnz
dec
shrb
in
cld
sbb
jecxz
jle
dec
xlat
pop
pop
ss
add
sbb
fwait
jno
popa
mov
mov
jnp
loope
imul
lea
scas
insb
fcomip
and
mov
dec
outsb
stc
aas
call
mov
decl
bound
orl
add
out
and
xchg
fcomi
sub
rcrb
xor
ffree
aad
nop
loope
cmp
rcrb
mov
sbb
xchg
push
sbb
push
pop
js
clc
movsb
mov
inc
test
int3
push
into
sbb
scas
and
or
xchg
lock
xchg
fdivrl
out
push
enter
enter
and
inc
imul
dec
aaa
pop
xchg
loop
mov
jbe
push
mov
dec
and
mov
pop
ret
ds
les
fisttps
je
je
fidivrl
xchg
aam
xchg
xchg
mov
mov
xchg
loop
vdivps
sbb
xor
push
cli
roll
cmp
add
jbe
ret
fs
xor
imul
adc
in
push
jecxz
adc
sbb
mov
adc
dec
lock
add
nop
aad
inc
scas
idivl
insl
cli
and
stos
xchg
stos
push
sub
loopne
mov
pop
xor
cs
popf
mov
and
sti
in
lods
push
cmp
ret
stos
stos
clc
jnp
faddl
dec
sti
lret
sbb
inc
out
mov
test
xor
imull
cmp
and
mov
shrb
pushf
xchg
fstpt
ffree
cmpsl
repz
aaa
ss
xor
movsb
jle
cmp
inc
pop
lahf
addb
pop
jp
mov
sbb
test
push
icebp
inc
xchg
int
sbb
cmpsl
in
add
sub
adc
aas
xchg
clc
mov
xor
fiaddl
mov
stc
or
icebp
dec
bound
push
mov
pop
xchg
mov
pop
push
or
dec
sbbl
repnz
inc
in
cmp
hlt
dec
fdivrl
jp
aad
or
sbb
ret
jmp
sbb
ja
scas
jne
jle
pop
popa
fst
lcall
jns
lret
cmp
in
outsl
lret
pop
sub
sahf
or
dec
std
test
inc
je
ljmp
jle
mov
mov
sub
push
jbe
sbb
pop
xor
jg
or
mov
mov
data16
jnp
sbbl
mov
mov
mov
pop
movsb
in
pop
mov
in
mov
push
push
shrl
xor
cmp
faddl
pop
js
inc
dec
xchg
lods
faddp
imul
out
lret
inc
push
xchg
lods
or
lods
mov
ret
pop
jae
adc
add
mov
pop
push
test
stos
cmp
icebp
add
mov
or
stc
hlt
mov
js
push
enter
jno
cwtl
lds
mov
inc
xchg
movsl
xor
xchg
dec
cld
je
iret
movsl
or
cmp
lret
xor
push
dec
fwait
cmp
xchg
xchg
push
mov
es
cmpsl
fchs
fucomip
stc
mov
out
xchg
idivl
push
outsb
cmpsl
mov
out
mov
cmp
pop
in
inc
xchg
xor
stc
cmpsl
imul
add
mov
push
stos
or
popa
lds
ja
mov
hlt
mov
cli
sahf
pop
jb
mov
mov
popf
mov
mov
or
jae
inc
popf
loopne
mov
push
ljmp
psubb
and
movsl
or
push
xchg
cltd
adc
mov
mov
shl
aaa
mov
adcl
and
pop
ficoms
ja
sub
lret
mov
sahf
dec
mov
xor
pop
test
pop
dec
ret
iret
ret
mov
dec
imul
ja
fwait
vmwrite
cs
movl
je
jo
sbb
xor
mov
xor
mov
stos
mov
mov
push
push
mov
movsb
sarl
cmp
movsl
fisubs
jmp
inc
cmc
test
sbb
xchg
xadd
mov
gs
test
mov
sbb
fnstsw
lcall
inc
mov
lock
mov
lret
push
bound
cmp
dec
flds
cmpsb
ffreep
xor
rorl
cli
jo
rorl
mov
pop
dec
out
scas
xor
frstor
jg
inc
add
cmpsl
adc
test
pop
mov
aad
and
arpl
pop
lods
arpl
cmovo
gs
ss
imul
popf
jmp
mov
rcl
out
dec
and
lcall
arpl
sahf
or
aad
and
push
jns
inc
jo
in
push
shl
in
and
xor
test
call
jne
cmp
lock
sahf
das
sahf
adc
cmpb
lahf
cmp
xor
jae
xor
test
sub
mov
mov
pop
inc
sub
ds
je
out
into
pop
xchg
sub
jnp
fcos
lret
jl
jge
in
fistps
fmulp
sub
int3
xchg
lahf
adc
inc
or
sarl
mov
mov
sbbb
mov
popl
hlt
sbb
nop
add
rclb
xchg
js
xchg
adc
mov
bound
cli
int3
lea
insb
add
or
mov
xchg
or
sub
in
test
add
dec
ud1
jl
xor
add
js
cmp
mov
lret
mov
lcall
cmp
jb
xchg
xor
jne
push
sub
mov
mov
and
hlt
insb
out
xor
sbb
and
pop
sub
shll
add
sub
mov
nop
shlb
or
inc
out
mov
cmc
enter
xchg
lock
xlat
scas
insl
dec
mov
fistps
adc
aad
push
insb
push
push
xor
mov
cltd
popa
xor
pop
adc
stos
push
cmpsl
mov
cltd
cmpb
jmp
fisubrl
mov
xchg
aam
mov
je
testb
int
repz
sub
dec
pop
hlt
dec
mov
pop
mov
xor
ret
sarl
adc
inc
sbb
and
sub
jmp
adc
and
dec
xchg
test
sub
dec
and
icebp
cmp
imul
dec
jne
sbb
inc
xchg
mov
sub
or
inc
out
mov
add
je
pusha
add
push
int3
sbb
cwtl
call
aad
ljmp
mov
dec
punpckhbw
sub
sbb
adc
lea
sahf
rorl
lret
sbb
shlb
mov
fstps
mov
sub
jbe
xor
rorb
call
inc
out
outsb
aad
mov
out
xchg
dec
idivb
lods
aam
std
sbb
rclb
gs
filds
hlt
mov
fistpll
cmpb
movsl
fs
add
pusha
cmp
scas
xchg
jg
add
fwait
add
pop
mov
js
les
jbe
aad
pop
repz
pop
adc
mov
test
inc
scas
cmp
sbb
enter
inc
push
push
fs
loop
add
arpl
add
dec
aam
mov
add
mov
std
lret
movsb
sbb
push
fucomi
cmp
adc
stc
insl
xchg
push
jl
jae
and
notb
icebp
loope
in
sbb
dec
inc
iret
xorl
lcall
aam
decl
adc
adc
loopne
mov
imull
aam
scas
es
scas
jg
cltd
mov
ss
pushf
out
inc
out
lock
cwtl
mov
test
in
add
or
jb
pop
stos
push
lods
test
mov
lods
shlb
jecxz
std
repz
jp
push
leave
enter
or
sub
add
fsubrs
sbbl
jge
ficomps
cmp
inc
adc
test
into
xchg
cld
inc
enter
jp
sbb
ret
shll
push
pushf
fldl
mov
dec
loop
jbe
pop
adcl
int
cwtl
dec
adc
cmpsb
add
jg,pn
out
dec
and
scas
popf
add
sbb
xchg
clc
add
rorb
dec
jp
xor
inc
repnz
popa
mov
or
sub
jbe,pn
inc
fdivrl
lcall
lea
movsl
negb
xorb
cmp
and
je
sbb
rcll
movntq
es
lret
lea
pop
clc
xchg
fsubrl
and
addb
mov
in
adc
mov
lds
sahf
pop
mov
lods
int
lcall
push
push
dec
scas
push
dec
push
sahf
lds
imul
iret
jmp
xchg
sub
xchg
mov
mov
es
iret
cld
jp
movsb
and
jns
mov
popf
cmp
add
out
and
inc
fisttps
imul
rorb
clc
and
fidivrs
adc
xor
xchg
int3
push
js
out
into
ret
cld
mov
inc
or
cmpb
jecxz
lea
enter
dec
jecxz
cmpsl
fsubrp
jl
xchg
xlat
rcrb
rolb
cmp
xchg
inc
xchg
pop
out
mov
ret
and
lcall
mov
sti
arpl
pop
shll
mov
out
dec
mov
setb
adc
xchg
js
mov
add
sahf
addr16
xor
and
scas
rep
and
andb
pop
stc
test
push
add
jne
fnstenv
imul
les
pop
test
sbb
xor
push
inc
dec
imul
add
adc
fdiv
addr16
cvtps2pi
icebp
jb
das
pop
sbb
sbb
dec
xchg
push
jle
fwait
mov
in
das
sbb
test
jl
lahf
lods
or
add
jno
imul
test
pop
inc
stos
sahf
dec
divb
in
mov
sub
ret
cmp
addb
pop
and
aaa
mov
divb
in
movsb
outsb
bound
add
cmpsb
pop
sbb
je
lret
dec
mov
ds
fcmovne
mov
mov
int3
add
data16
inc
insb
or
in
clc
jbe
fsubs
jecxz
outsb
divl
or
and
pop
cmp
fdivp
inc
jmp
dec
arpl
cmp
adc
ss
clc
mov
test
mov
xorb
aas
fidivrs
inc
mov
ljmp
out
addr16
xor
lret
dec
arpl
jl
pop
jo
lea
lahf
lcall
leave
loop
cltd
lock
fimull
stc
mov
push
sub
add
xchg
mov
fidivrl
mov
lea
push
dec
stc
cwtl
incl
shrb
xchg
jns
test
or
fs
adc
add
mov
in
cmpb
pop
in
out
dec
test
shrl
aad
icebp
adc
mov
xchg
sub
inc
out
xchg
sub
lcall
pop
pop
jne
pop
stc
sbb
cld
stos
mov
loope
sbb
mov
cmp
and
popa
cltd
and
mov
mov
lahf
ds
pop
cmp
jmp
insb
std
imul
xor
rcrl
shrl
mov
pop
shlb
xor
std
dec
adc
sarl
xor
mov
cmpb
sbb
andl
ret
and
imul
addl
inc
ret
sub
movsb
pop
int
sarb
jbe
add
inc
jmp
int
icebp
or
xchg
mov
lret
or
jge
popf
push
mov
in
scas
mov
mov
mov
imulb
enter
aas
sti
jns
sahf
jg
mov
fisubrl
cwtl
jmp
add
sbb
push
mov
sub
divb
mov
jge
mov
pop
stos
mov
pushf
xchg
mov
in
je
jne
xchg
push
std
mov
loop
inc
hlt
fcoms
mov
sbb
outsl
xor
dec
cltd
xorl
cmp
mov
sbb
stc
xchg
xchg
gs
pusha
or
pushf
sti
mov
xchg
xchg
jnp
filds
sbb
fwait
cwtl
sub
adc
fsubr
sbb
movsl
imul
mov
add
jge
mov
ja
stos
inc
and
cmpsb
jmp
addr16
push
adc
cli
or
mov
pshufw
iret
push
mov
inc
dec
xchg
flds
ja
out
push
in
out
sbb
lods
add
add
jbe
jmp
xchg
or
inc
stos
adc
jnp
enter
std
push
jbe
fstpt
enter
insl
xor
adc
pop
test
adc
sub
xor
push
icebp
mov
and
addr16
or
mov
in
aad
fisubrs
lcall
cmpsl
je
shrb
cmp
das
pop
mov
popa
aam
mov
push
lret
mov
fwait
std
cmpsb
out
test
popl
inc
dec
or
mov
pop
xchg
sub
fs
das
data16
mov
test
out
adc
stos
xchg
lock
dec
cltd
notb
mov
jno
jmp
and
out
xlat
pop
and
push
rcrl
in
into
lret
lret
mov
in
xor
shll
jb
mov
mov
rcrl
jle
cmp
test
pop
push
or
imul
rcpps
scas
or
je
and
or
ret
adcl
mov
push
cmp
push
sbb
popf
ret
pcmpeqd
add
xchg
iret
jmp
hlt
cs
xor
ja
test
or
addr16
pop
test
cmp
mov
xor
clc
dec
lahf
ljmp
fidivl
jbe
or
das
ja
es
dec
mov
idivb
or
ds
lret
ljmp
mov
mov
stc
jecxz
jl
xor
mov
cli
xchg
push
loopne
iret
jb
pop
cmp
adc
or
xor
in
push
inc
clc
xchg
add
mov
push
inc
mov
mov
jl
jns
test
xchg
out
sti
xor
lods
cli
sbb
pushf
test
sbb
mov
cmpsb
sub
stc
fs
push
adc
jo
loop
mov
cmp
fdivrs
out
movsl
popa
cli
pop
movl
in
sub
add
jnp
cmp
sahf
in
jecxz
out
repz
addr16
inc
xor
xchg
stos
stos
xlat
jle
jnp
and
dec
leave
out
jbe
inc
inc
dec
fists
dec
inc
cmp
push
push
arpl
jnp
outsb
xchg
sub
lret
pop
xorl
add
xchg
sbb
dec
movsl
cmove
popf
std
pushl
popf
push
jp
jge
jne
lret
sub
push
test
jbe
add
lds
dec
jo
jp
inc
das
xchg
add
insb
ljmp
xchg
xor
mov
hlt
push
incb
mov
push
mov
xchg
enter
xchg
adc
push
mov
xchg
or
jle
push
xor
or
inc
les
push
xor
pop
and
sub
sbb
aas
data16
mov
xchg
movsb
xchg
insl
out
or
fs
pop
scas
sub
incb
or
aad
test
mov
ss
inc
xor
imul
or
dec
scas
enter
out
and
int3
imul
hlt
mov
hlt
cmp
sbb
fdivs
cwtl
xor
iret
cmp
xchg
sti
dec
lods
adc
ret
sarb
sub
dec
pushf
mov
xor
inc
sbb
mov
sti
pop
jmp
mov
mov
cmpsb
into
cmpl
mov
xchg
or
sbbl
fnsave
cs
subl
or
sbb
hlt
aam
jne
push
fldcw
lret
and
jnp
int
cli
adc
popa
divl
stc
adc
mov
into
test
shll
add
inc
ss
into
pop
add
mov
cld
fcom
js
mov
jecxz
dec
pop
jns
mov
mov
hlt
pop
fucom
lods
pop
xchg
dec
mov
xor
mov
mov
loope
cwtl
pop
das
mov
pop
iret
mov
cmp
mov
movsb
ljmp
mov
imul
js
push
push
and
stos
pop
xchg
repz
hlt
xor
and
mov
push
daa
out
cmp
repnz
bound
test
sahf
xchg
int
in
test
dec
pushf
push
insb
loope
pop
aas
dec
cmpsl
je
jae
xchg
out
pusha
or
rorl
shll
dec
or
hlt
add
pop
addb
int3
push
mov
movsb
jp
and
icebp
inc
dec
xchg
pop
mov
in
ljmp
adc
test
aam
add
sbb
xchg
scas
imul
fimuls
std
call
inc
dec
rcl
popf
inc
mov
roll
jp
repz
push
lods
test
xor
idivl
dec
sub
pop
push
dec
ja
pop
add
push
mov
cmpsb
shll
add
dec
fs
rclb
mov
mov
xchg
repnz
repz
cmp
sub
sarb
test
addb
mov
in
pusha
mov
mov
jmp
adc
stc
add
ret
fldln2
dec
cmpsb
sub
pop
pop
jle
andb
rorb
js
lods
xlat
pop
repz
mov
movsl
mov
xchg
ret
xor
mov
arpl
ficoms
mov
insl
mov
cmpsb
inc
lea
or
jbe
jg
cli
enter
pop
xor
xlat
outsl
repnz
mov
dec
cwtl
stos
xchg
jecxz
int
jne
mov
or
icebp
dec
pop
je
cs
push
test
cwtl
mov
or
or
into
mov
ret
rorl
call
out
add
ret
and
sub
inc
jno
adc
jns
lahf
pop
adc
add
pop
out
repnz
sub
sbb
mov
mov
scas
add
stos
and
sbb
in
xlat
aas
xor
push
pop
jl
aaa
adc
push
jmp
shlb
fwait
inc
pop
push
push
pushf
loop
xchg
out
sub
sbb
data16
jae
mov
in
repz
jns
ret
pop
lret
inc
xchg
stos
ss
jne
cmp
dec
pop
and
sub
jo
cltd
or
add
out
lcall
xchg
popf
inc
andb
loope
lret
lcall
aaa
fisttpl
dec
insb
xchg
dec
pop
shrb
decb
lret
ja
insb
mov
or
in
xchg
pop
mov
arpl
mov
lods
mov
popf
shll
adc
push
rcrb
cmp
xor
sbb
shrl
aas
insb
mov
push
loope
dec
cmp
aas
xor
outsb
mov
jnp
sbb
sbb
adc
and
ja
dec
fdivr
pop
inc
xchg
punpckhwd
adc
addr16
adc
lock
sub
loop
out
xchg
cltd
inc
ljmp
mov
insb
out
lods
bound
stos
jno
sub
mov
sbbl
fstpl
mov
ret
xchg
push
xchg
test
dec
out
pushf
shl
in
xchg
js
pop
jmp
rorb
mov
cmp
mov
dec
imul
inc
adc
or
xchg
push
jmp
mov
pusha
cli
jmp
fisttpll
mov
loope
aam
push
sbb
jecxz
mov
rolb
icebp
add
pop
lds
js
out
dec
arpl
shrl
xchg
mov
and
or
cmp
imul
add
xorb
sbb
insl
mov
out
or
hlt
bound
rclb
ret
push
ds
pop
shrl
xchg
push
xchg
mov
and
test
mov
shrb
lret
out
jo
push
sahf
add
cmp
mov
add
fiadds
movsl
jnp
test
out
clc
jno
sar
dec
adc
incb
ret
and
adc
xchg
jge
sti
addr16
mov
paddw
rclb
sbb
push
test
int
xchg
and
jle
jns
jg
and
js
inc
stos
jecxz
xor
sub
jmp
popa
mov
into
cli
inc
addr16
or
call
fldl
popf
xchg
push
cmc
xchg
jnp
xchg
je
iret
or
or
pusha
jge
adc
loopne
test
push
pop
push
bndstx
add
push
popf
shrl
mov
scas
mov
cmp
ficomps
ror
sahf
dec
pop
cltd
cmp
or
sub
jno
and
in
jb
lret
mov
lock
out
les
mov
cmpsl
ljmp
xchg
pop
cmp
adc
xchg
mov
pop
dec
lahf
idiv
subl
jg
stc
sbb
mov
xor
cmp
or
out
mov
lock
pop
xchg
jl
mov
mov
xchg
add
pusha
repz
rcrb
adc
xor
xchg
xchg
repz
shrb
into
xchg
inc
cld
cld
inc
lahf
sbb
jnp
mov
push
mov
and
aaa
cmp
xor
aad
mov
xor
mov
mov
arpl
sub
nop
inc
jo
xor
inc
jmp
mov
in
in
jmp
fs
cmpl
mov
lret
mov
or
ljmp
ret
pusha
insl
sub
mov
inc
cld
ljmp
or
push
ret
insl
dec
cmpsl
add
mov
pop
mov
xchg
xchg
cmp
ja
and
jg
jp
xchg
mov
jmp
jl
out
test
test
lods
mov
loopne
test
jne
test
negl
xchg
lods
pop
adc
mov
shl
pop
fdivrp
adc
mov
push
sub
mov
notb
pop
sbb
sbb
pushf
gs
int3
in
scas
lahf
lahf
fwait
lea
push
notl
push
mov
mov
mov
xlat
or
or
inc
mov
pop
add
push
or
inc
mov
and
stos
xchg
sbb
lea
mov
cmp
ss
int3
jl
cld
inc
fists
mov
pusha
and
subl
std
xor
or
and
into
out
jb
cmp
dec
fnstcw
adc
int3
lea
dec
popa
mov
dec
repz
lods
sbbb
fucomip
in
in
pushl
loop
push
cmp
dec
ret
daa
rcl
stos
jmp
add
sub
cmp
das
xor
std
jmp
and
lcall
xchg
fs
mov
ss
popf
dec
push
cmp
lds
push
aaa
fldl
rclb
inc
and
js
add
lods
push
pop
mov
pop
push
dec
push
fsubs
ljmp
iret
sub
adc
xor
dec
dec
inc
and
mov
pop
outsl
cli
xlat
mov
or
add
out
popa
or
insb
and
pop
add
es
cwtl
mov
cmpxchg
rclb
pushf
dec
lods
cmp
add
lahf
or
cmp
add
ds
mov
or
xor
xor
jo
cltd
sahf
pushf
lock
push
lret
xchg
in
or
dec
mov
mov
outsl
jp
cmpsl
imul
mov
cmc
aad
in
push
push
into
sti
sub
iret
scas
test
push
xor
imul
aaa
imul
jnp
test
data16
or
sahf
jae
mov
push
xor
or
fisubrs
ss
imul
mov
sahf
cld
cmp
stc
pop
push
push
sub
lods
mov
lcall
arpl
movsl
xchg
or
test
loope
dec
lret
lahf
pop
pusha
les
inc
out
pushf
outsl
rcl
mov
je
lcall
cmp
popa
mov
movsb
pop
testl
adc
test
outsb
mov
inc
adc
dec
movsb
lret
add
out
test
pushf
sub
jmp
or
repnz
sarb
mov
sti
jno
dec
push
push
movl
sbbb
pop
or
and
add
stc
adc
cltd
pop
xchg
rorb
sub
mov
xlat
stos
pop
mov
push
xor
repnz
loopne
pop
movsl
mov
loope
gs
leave
sub
js
fwait
sub
jp
jl
or
mov
arpl
int3
lock
or
xor
movsl
cmp
ja
push
movl
clts
es
push
ja
xor
fcmove
sbb
push
dec
and
mov
or
outsl
xchg
ret
sahf
dec
push
and
mov
int3
aad
push
in
dec
and
movsb
adc
test
in
adc
add
enter
lock
ss
xor
or
repz
popa
mov
leave
orb
jle
sbb
in
sbb
mov
movd
pop
repz
and
shrl
sti
add
jecxz
xchg
in
mov
out
outsl
icebp
fldenv
or
int3
mov
outsb
das
lret
add
cs
lcall
insl
les
add
pop
bound
lcall
sub
sbb
cmp
xchg
push
fldt
jnp
cmp
push
inc
je
lods
pusha
mov
inc
clc
testb
xchg
cmp
ret
mov
into
pop
rolb
out
jl
incl
push
sti
mov
jmp
mov
imul
enter
jnp
mov
or
stc
sbb
aas
xchg
arpl
mov
fwait
dec
mov
mov
les
push
bound
out
or
push
rcrb
xor
neg
lret
sarb
cmc
jno
scas
gs
and
jl
jl
nop
scas
sti
push
lock
cmp
stos
fwait
sbb
adc
adc
jmp
or
pop
hlt
dec
je
and
addr16
jl
sarb
dec
push
stos
inc
mov
mov
shrl
lds
movsb
mov
inc
inc
test
jb
mov
out
pop
ss
xchg
sahf
sub
test
xchg
pop
inc
jle
outsl
mov
aas
and
cmp
cmc
cmpsl
lcall
xchg
mov
inc
imul
add
shr
test
add
inc
jae
jecxz
push
sbb
xor
shl
pop
add
mov
dec
aas
inc
std
push
jmp
mov
arpl
jle
jg
push
mov
mov
hlt
cmp
or
adc
mov
popa
aad
jb
pushf
mov
inc
mov
or
daa
lods
addr16
xchg
addr16
and
movsl
sbb
jp
xchg
or
mov
jo
sbb
iret
int
push
sub
in
adc
fs
or
adc
rorb
scas
push
push
and
mov
xchg
dec
bound
mov
andl
mov
or
cld
or
push
arpl
and
mov
andl
xlat
aam
pop
sub
add
mov
lock
mov
pushf
and
cli
add
adc
dec
or
dec
dec
popf
pop
xchg
in
jmp
aam
dec
imul
adc
mov
out
iret
inc
stc
cmp
push
mov
adc
into
out
out
push
jle
xlat
rcrl
pop
dec
cld
insb
jg
out
dec
stos
jge
jae
and
out
jl
imul
cmp
sbb
cmc
aam
imul
pop
cmpsl
push
cmp
cmpsl
xchg
sbb
xchg
insl
push
ljmp
and
data16
push
mov
xor
dec
loopne
sub
fs
add
xor
cmpsb
rol
movswl
mov
mov
out
addr16
jno
add
mov
mov
movsb
add
cs
sbb
sahf
xchg
sahf
sti
lahf
repz
pop
xor
jle
push
sbb
out
dec
arpl
cmp
int3
aaa
or
sub
adc
lahf
std
sbb
and
clc
push
subl
mov
mov
mov
dec
cmp
sahf
adcl
sub
and
movsl
add
aad
adc
mov
repnz
loop
lods
push
mov
add
inc
adc
pushf
xchg
push
add
xchg
mov
sbb
int
xor
xor
fidivrs
gs
inc
mov
mov
mov
pop
rcr
push
jl
out
insb
mov
inc
fwait
mov
xchg
and
cmp
mov
xchg
mov
jl
sbb
insl
arpl
mov
popf
push
pop
add
adc
xchg
or
mov
jl
addl
mov
jmp
sar
xor
pushl
dec
mov
xchg
lret
push
xorb
repnz
adc
pop
sub
mov
pop
lods
imul
ja
cmpsl
mov
sets
jb
or
outsb
inc
push
sbb
mov
aas
ja
jnp
cmp
leave
pop
inc
insb
cwtl
lahf
jmp
pusha
inc
mov
and
js
push
adc
push
iret
popf
dec
movsl
jns
scas
inc
sub
sbb
mov
jne
pop
jo
push
xchg
cmp
mov
sar
pop
jmp
loopne
aam
push
repnz
sbb
xchg
outsl
repz
xchg
fisubl
in
pop
lret
jecxz
fnstsw
push
jge
push
xlat
dec
decl
aas
mov
ja
or
mov
and
in
shrb
lret
cs
add
cmp
dec
aas
cmp
outsb
sub
movsb
dec
push
sarl
adc
cwtl
jecxz
or
add
jg
stos
dec
movsl
xchg
ljmp
es
mov
test
push
lea
aaa
sub
scas
push
pusha
mov
or
gs
mov
cli
mov
mov
mov
adc
mov
jg
mov
test
in
mov
sub
mov
dec
or
imul
push
dec
xchg
fisttpll
stos
pusha
sbb
jmp
xchg
xorl
push
cmp
xchg
or
add
inc
xchg
inc
iretw
hlt
fwait
adc
pop
jg
out
scas
adc
shrb
test
sub
adc
cmp
mov
cs
clc
out
fs
mov
rol
inc
test
lock
cmc
dec
les
sahf
insl
sbb
aam
imul
sahf
mov
xchg
pop
fsubl
iret
lcall
pop
or
nop
mov
xchg
push
mov
dec
pop
repnz
in
movhps
testb
aam
dec
test
out
xor
sub
cmp
mov
add
xor
ficoml
les
lahf
mov
inc
and
adc
rorl
icebp
out
pop
push
pop
out
xlat
ficomps
or
push
push
subl
pop
jle
lock
push
inc
sub
bound
ljmp
fwait
mov
pusha
dec
adc
negl
pop
xchg
push
sbb
xchg
dec
test
fwait
jbe
xchg
or
jae
xor
dec
dec
push
popa
arpl
cmp
add
push
imul
flds
int3
pop
cli
push
popa
cmc
decl
fiaddl
cmc
jg
sbb
jne
mov
xor
in
testb
jge
lock
or
sahf
push
xchg
aam
mov
mov
mov
pushf
clc
outsb
rcrb
push
sarl
lahf
xor
sub
popf
xor
addb
and
jg
dec
mov
repz
cmpsb
loop
ret
in
inc
cltd
jae
ret
cmp
mov
push
push
pop
fwait
adc
mov
pop
lods
push
nop
fcoms
lds
hlt
pop
in
movsl
push
scas
mov
mov
pop
popf
xor
incl
cwtl
je
xor
and
inc
dec
enter
popa
and
xchg
mov
add
mov
jg
or
sbb
cmpsb
int
xchg
aad
scas
and
in
xchg
jg
push
or
fisttps
mov
mov
dec
fs
rolb
inc
lahf
mov
cmp
or
ss
inc
dec
xchg
lea
xlat
pushl
xorb
flds
je
lcall
mov
dec
pop
cmp
ret
push
mov
cs
insb
js
stc
dec
pop
fiaddl
mov
inc
mov
cmp
inc
outsb
into
movb
fsts
pop
stc
mov
push
dec
dec
dec
xor
inc
mov
cmp
jp
xchg
sub
push
mov
ret
fadds
push
dec
or
loopne
xlat
lahf
or
adc
push
rcrl
cli
jp
add
mov
fcoms
shlb
lods
or
repz
push
xchg
fisttpl
lahf
xchg
xor
cmp
bound
lock
xor
mov
sbb
add
shl
adc
in
fiaddl
push
ficoms
sbb
mov
push
xchg
and
jnp
sbb
push
and
negl
mov
cmp
mov
jp
push
insl
das
adc
sbb
mov
and
mov
add
mov
sub
lock
ja
cmp
loope
xchg
pop
adc
lods
ror
iret
dec
idivl
mov
fsubrl
dec
cmp
mov
stc
call
or
add
or
mov
outsl
mov
repz
jge
loop
scas
pop
mov
aam
clc
lcall
add
in
movsl
xorb
out
dec
and
popf
and
pop
mov
push
mov
sbb
idivl
jns
jb
push
cmp
into
fcompl
xchg
cmc
lods
inc
test
loop
or
ss
jl
or
jb
fs
cmpsb
loopne
pop
xchg
adc
push
jns
pop
cli
inc
pop
aam
and
aad
add
int
repnz
scas
jo
outsb
sub
sbb
dec
jle
mov
iret
cmp
cld
test
push
pop
daa
jnp
mov
cmp
pop
mov
mov
imul
mov
cmpl
inc
sub
sub
dec
out
addb
popf
or
shr
shrl
cmp
push
out
clc
xchg
jno
or
cltd
dec
jecxz
ds
or
mov
ljmp
lret
add
ret
mov
sub
scas
inc
jle
out
lcall
into
and
shrl
push
mov
mov
sub
sbb
pushl
push
mov
dec
push
sbb
dec
mov
jmp
jnp
imul
cmpsb
mov
xor
test
adc
ret
sbb
lods
call
stos
arpl
popf
inc
jmp
and
js
stc
push
fdiv
xchg
lret
dec
push
lods
mov
imul
inc
addr16
ret
and
cmp
mov
mov
mov
inc
mov
pop
pop
out
push
shll
pop
data16
cmp
mov
into
pop
xor
sub
cmp
pop
mov
cmp
inc
test
es
stos
pop
lock
xchg
insb
cmp
lret
xchg
hlt
pop
fs
push
and
mov
out
das
es
mov
inc
and
pushf
call
je
insl
loopne
in
dec
sbb
inc
iret
inc
lds
push
popf
cmc
in
sub
loope
mov
mov
jns
dec
ljmp
cmp
loop
push
push
jp
test
fmuls
faddp
jbe
call
push
xlat
jp
aas
in
push
shr
adc
jl
paddd
adc
enter
push
fwait
ret
mov
movsb
xor
popa
jns
jnp
cmp
pop
scas
je
in
xchg
cld
lret
loopne
clc
aam
mov
mov
daa
add
cltd
movsl
mov
insl
push
pop
mov
push
stos
jnp
dec
out
fildll
adc
cmc
cmpsl
push
cmp
or
mov
sbb
add
stos
sti
xor
std
sbb
pop
mov
adc
pop
cmpsl
loop
or
das
mov
call
rcrl
sub
stos
gs
decb
cs
cmpsb
mov
cmp
pop
dec
cld
pop
adc
cli
mov
or
push
flds
add
mov
xor
cltd
cmp
inc
sub
daa
ljmp
cmc
mov
adc
push
sbb
dec
mov
jbe
jnp
add
mov
sbb
jle
pop
adc
cmp
or
lret
call
mov
mov
pop
jb
xor
jl
mov
inc
jp
addb
fldcw
mov
adcl
lea
jnp
popa
fwait
fs
xor
repnz
aaa
dec
jnp
scas
insb
mov
xor
sbb
ljmp
sub
fldcw
push
ss
lea
jns
mov
jbe
or
jecxz
out
std
cmp
jae
pop
push
push
push
lahf
es
data16
pop
mov
pusha
cltd
lcall
push
pop
aad
mov
mov
pop
mov
push
adc
ss
bswap
fcmovbe
pop
jb
pop
push
lcall
mov
loop
jg
enter
outsl
mov
cmp
test
and
mov
or
dec
jg
cmp
jge
dec
jb
or
or
bound
add
jb
xchg
jno
push
inc
push
repnz
pop
sti
jmp
ljmp
push
clc
jae
xchg
xchg
cs
mov
mov
sub
out
test
mov
mov
jnp
push
adc
mov
aaa
cltd
mov
add
xor
cs
ljmp
sub
pop
fnsave
int3
pop
push
cmp
or
xor
insl
cs
flds
cmp
cmp
xor
adc
sub
add
repnz
rcrb
jo
pop
push
aas
or
ss
inc
notb
sub
fs
fsubl
add
adc
jns
sbb
xchg
test
mov
mov
out
es
adcb
mov
xor
idiv
mov
cmp
xchg
cmpsl
es
or
cmp
xchg
inc
test
dec
outsb
data16
pop
jno
mov
out
mov
adc
sbb
clc
jmp
lret
inc
rorb
int
sbb
icebp
scas
jbe
mov
cmpsl
jl
sub
jo
cs
sbb
sbb
iret
idivb
mov
cmp
movsl
dec
adc
and
rcll
push
pusha
daa
int3
add
inc
cmpsl
xchg
dec
mov
mov
nop
xchg
sub
enter
rclb
fbld
mov
add
dec
out
fwait
int3
sub
mov
subb
jmp
mov
enter
ja
dec
cmpsb
jecxz
sub
gs
scas
fs
mov
pop
cmp
inc
push
sub
mov
cs
orb
xor
nop
ds
xchg
or
fdivrs
aad
sar
jne
in
aas
jecxz
lret
loope
cmp
mov
fwait
xchg
loopne
test
std
lret
pop
cmovns
mov
repnz
pop
add
inc
out
push
lods
testl
fidivl
mov
fs
pop
test
pop
outsl
adcl
shl
cmp
add
gs
push
inc
sub
or
jno
cmpsb
into
mov
xchg
mov
inc
clc
lcall
sbb
test
in
stos
jo
cmp
movsl
scas
push
lret
arpl
rol
cs
jnp
lret
dec
adc
out
mov
gs
aas
add
add
pop
cmpsl
fimuls
outsl
cli
setns
adc
stos
jge
sbbb
outsl
xchg
stc
in
cmpsl
es
jb
sbb
push
gs
inc
add
imul
inc
jge
pop
movsb
ficomps
into
adc
out
mov
inc
fldcw
dec
xchg
sbbb
mov
das
inc
mov
adc
xchg
push
pop
push
out
adc
jp
xchg
mov
mov
ljmp
popl
fistpl
int
outsb
mov
pmullw
sbb
cmp
and
dec
jnp
pop
xor
adc
popaw
jbe
in
sbb
lea
sub
jo
cld
fldcw
cmp
ror
clc
int3
add
mov
push
add
orl
cmp
or
sub
jno
jmp
mov
arpl
insl
cld
mov
pop
dec
dec
inc
bound
das
aad
xchg
and
mov
test
xorb
subl
hlt
add
xchg
aam
jns
sbb
mov
fcomps
mov
inc
fildll
xor
push
fdivrl
pushf
mov
push
inc
jmp
and
pop
idiv
inc
mov
sbb
mov
pusha
shlb
push
imul
fists
mov
ljmp
push
xor
and
jge
xor
and
aam
arpl
into
adc
add
pushf
lahf
inc
fnstsw
inc
mov
xchg
xor
dec
ss
stc
lcall
or
pop
repnz
rol
push
mov
push
xor
stc
push
xchg
adc
mov
xor
jp
push
int
xlat
daa
out
push
push
and
es
ds
repz
lds
aaa
pop
inc
fwait
pop
jne
sbb
mov
push
cmpsl
push
rcl
jne
mov
shll
hlt
mov
out
add
sbb
push
cmp
inc
pop
lds
pop
lock
lret
inc
add
cmp
push
mov
sub
push
pop
inc
std
rcrb
pop
add
addr16
inc
insl
sarb
lret
iret
addr16
ret
aaa
sahf
les
imul
out
test
testl
push
cli
add
das
push
gs
xchg
inc
test
test
push
shlb
sti
popa
movsl
add
pop
cmp
push
sbbb
leave
std
out
pop
lods
mov
mov
subb
mov
xor
jb
mov
cltd
dec
dec
imul
lods
cmp
lahf
daa
ja
add
or
mov
repz
les
push
or
adc
xchg
fisubl
sub
ret
repnz
add
loopne
cmp
xor
mov
adc
dec
out
sahf
inc
xor
or
mov
cmp
xor
lock
pop
insb
mov
scas
adc
adc
imul
std
or
add
ja
xor
fimuls
dec
xor
xor
out
movsl
in
out
mov
or
mov
scas
add
or
rsm
and
es
fbstp
mov
cmp
rorb
gs
pop
jae
push
cld
icebp
in
negl
fisubl
jmp
test
les
xchg
cli
js
inc
jnp
mov
mov
pop
sub
test
dec
dec
inc
enter
mov
mov
mov
lds
xchg
and
push
shrb
ljmp
rcrb
jb
or
xchg
sub
mov
mov
ja
icebp
lds
mov
addr16
stos
ds
fld
lea
push
add
outsb
dec
inc
lea
push
push
fwait
ds
int3
dec
or
jge
pop
popf
mov
xor
push
push
sub
cmp
push
mov
push
mov
adc
scas
mov
mov
fnstsw
mov
dec
mov
cmpsl
xor
sub
inc
cmp
js
xchg
xchg
push
cmc
pop
insb
je
dec
dec
xchg
push
dec
mov
shll
out
lret
out
xchg
xor
mov
sub
cmpsl
divb
pushf
jge
shl
mov
xchg
pop
cmp
aaa
mov
negl
pop
scas
push
in
ljmp
add
jae
std
lds
mov
lods
jecxz
push
inc
lods
dec
pop
insb
sbb
sub
add
or
stc
sbbl
jecxz
jno
test
cltd
inc
fiadds
cli
mov
int
xchg
push
inc
xchg
icebp
leave
out
cmpps
xor
push
idivl
movsb
mov
testb
js
jecxz
nop
outsb
in
pop
sub
cmp
lds
test
sub
inc
stos
decb
es
xlat
cmpsl
jg
cmp
xor
test
ja
pop
sub
outsl
add
clc
fnstcw
ret
repz
xor
fildl
aaa
aam
sub
jp
pop
repnz
out
insb
jns
cmp
push
lods
loope
sbb
or
addr16
mov
xor
cltd
push
adc
mov
push
fisttps
dec
pop
xchg
adc
stos
iret
movsl
jbe
arpl
fptan
test
inc
insl
jo
push
mov
popa
loop
repz
xchg
mov
add
jbe
dec
mov
jae
in
daa
loope
js
and
mov
dec
ds
and
in
shlb
sub
jecxz
mov
xchg
inc
jb
popfw
loope
jp
loope
mov
dec
mov
test
sub
lock
sbb
movl
insb
jae
int
int
in
nop
add
inc
mov
dec
sub
mov
int
cmp
and
xchg
int3
sub
outsb
sbb
or
shrl
repz
fstpt
mulb
movsb
std
out
inc
int3
push
push
mov
jbe
mov
sub
hlt
jns
xchg
cli
mov
arpl
push
or
jmp
in
push
ss
inc
jo
xorl
xchg
std
ja
movsb
cltd
xchg
pop
addb
out
loopne
cmpsl
sub
jl
cmp
inc
lds
int3
loopne
cmp
int3
repz
pop
jno
or
ret
or
iret
addr16
sbbb
mov
shr
mov
add
push
mov
addr16
pop
leave
xchg
orl
push
cmpb
icebp
and
leave
cli
pop
mov
loope
pop
repz
xchg
aaa
lock
dec
sbb
ljmp
adc
jmp
inc
in
and
leave
mull
xchg
sub
clc
push
sarb
fimull
cmpsb
int3
xchg
pop
lcall
scas
sarl
sub
aad
testl
popa
lock
jo
lods
pop
pusha
sub
lahf
repz
test
jp
inc
cli
cmp
fwait
imul
hlt
fists
or
pop
stc
and
enter
xorps
jb
movsl
in
sub
or
addl
cmp
jno
pushf
add
adc
add
roll
or
je
mov
cmpsb
mov
mov
pop
push
mov
or
sahf
inc
xor
aas
mov
jecxz
addr16
shll
jns
jl
add
rolb
mov
sbb
loope
and
pop
xor
add
mov
cmp
and
sti
or
repz
push
mov
rcrb
into
mov
movsb
outsl
jae
xchg
mov
push
jne
xor
jbe
xor
sarb
out
xor
rclb
je
and
or
sti
mov
or
or
mov
dec
xor
mov
mov
adc
fnstenv
lea
inc
loopne
cmpsb
sub
xchg
jnp
push
mov
mov
addr16
cli
lret
imul
mov
aas
push
sbb
jl
orb
push
cmp
add
pop
jl
ret
das
fs
call
push
inc
mov
cmpsb
iret
rcrl
mov
rcrl
xchg
sub
into
mov
pop
les
jge
sbb
test
and
out
loope
jecxz
inc
mov
mov
fistpl
jns
add
lcall
inc
ljmp
scas
divl
pop
es
xor
je
lret
adc
je
dec
adcb
cmp
out
in
push
mov
pop
xor
dec
inc
loopne
std
or
adc
xchg
ds
stos
sarb
dec
sbb
shlb
add
and
ret
xlat
cltd
xchg
adc
nop
bound
enter
bound
pop
je
dec
mov
mov
gs
ret
dec
test
testl
test
lahf
in
icebp
add
pushf
inc
xor
mov
inc
xchg
mov
fidivs
inc
xchg
fmuls
test
add
ss
jp
frstor
pop
inc
pop
pop
mov
pop
int
fdivrl
sbb
adc
sar
pmulhw
iret
xchg
xor
xor
outsb
imul
mov
fildll
push
and
jg
mov
out
add
ror
andl
mov
aaa
push
out
inc
idiv
adc
pushf
cmp
or
push
sbb
in
inc
loopne
push
mov
jg
inc
jbe
out
mov
bound
clc
cmpsl
cmp
mov
imul
push
das
repnz
push
loope
sahf
push
cs
mov
rcr
mov
cmp
mov
std
pop
dec
xor
mov
pop
idivl
test
orl
stos
mov
stos
or
call
xor
and
and
mov
sbb
lods
inc
jle
sub
insb
jnp
std
aaa
pop
pop
test
ret
jnp
sbb
loopne
out
add
jno
and
cmp
push
hlt
idivl
jno
or
pop
and
shll
or
dec
mov
mov
shll
sub
test
stc
jecxz
pop
mov
sub
push
dec
ret
adc
jno
mov
push
stc
aad
inc
jne
orb
sub
cltd
mov
adc
subl
mov
and
into
test
push
rorb
sub
test
shl
lea
adc
sub
outsb
in
xor
push
sti
push
add
mov
pop
and
mov
push
mov
pop
int3
mov
fsubrl
rorb
xchg
mov
jg
andl
mov
leave
and
mov
and
push
sbb
add
es
dec
jmp
mov
jns
fisubl
rorb
jecxz
lea
cmp
aaa
sub
repz
sub
jg
jl
mov
orb
mov
cltd
scas
aaa
in
cs
push
out
cli
pushf
out
sbb
scas
lahf
inc
xchg
and
xchg
fcomps
lret
mov
xchg
imul
in
fldl
jo
outsl
lods
xchg
cmp
xor
in
ret
lcall
cmp
les
inc
xor
adc
dec
or
or
mov
decb
fnstsw
add
sub
mov
xchg
jno
stc
jp
xor
incl
fstpt
lods
xor
sub
mov
in
lret
add
arpl
jle
pop
aam
mov
stc
jp
jo
cmp
imul
mov
inc
mov
out
out
jo
xor
test
jne
scas
sub
dec
jns
add
or
ja
daa
push
mov
cmpsl
cmp
seta
inc
clc
jp
adc
pop
pushf
sbb
mov
jmp
jo
stc
ss
rcll
jne
lret
lret
xchg
add
stos
cmpps
cmp
aad
adc
cmp
lret
fwait
add
mov
and
inc
fxsave
fistl
xor
outsl
rcll
xor
mov
in
es
cmp
daa
call
out
fistl
jns
es
inc
push
dec
mov
sarl
adc
shlb
sbb
sbb
fwait
push
or
jmp
xor
xchg
aam
sbb
sub
test
push
sbb
jae
ds
xchg
jp
push
adc
repnz
pop
ss
int3
lret
fnstcw
dec
aas
sbb
mov
mov
aad
and
mov
in
mov
adc
dec
jmp
jecxz
aad
imul
cmpsb
out
les
pop
xlat
cmpsb
push
loopne
pop
icebp
dec
stos
adc
stos
sub
and
jge
cmpsb
inc
sub
jle
je
jb
jno
push
out
cli
or
and
popa
ret
mov
int3
leave
xchg
or
or
xlat
mov
mov
push
pop
fbld
mov
cmp
adc
mov
adc
lcall
pop
push
cld
sbb
loopne
mov
fnsave
movsl
aam
ficompl
jbe
jno
or
jg
nop
ljmp
cmp
inc
std
xchg
push
push
movsb
pop
lahf
lds
jne
push
jle
iret
popf
dec
push
in
mov
adc
js
outsl
and
jae
loope
or
les
insb
and
adc
mov
mov
inc
mov
and
leave
shlb
fcomip
leave
ss
add
add
mov
cmp
jle
das
xchg
jb
insb
sbb
aas
push
sbb
popf
ficomps
pop
test
dec
pop
fadds
sub
jb
les
ror
lods
dec
cmp
lret
test
imul
js
jge
and
dec
shlb
inc
adc
dec
gs
pop
jno
fwait
imul
adc
lahf
cmp
in
adc
xchg
call
pop
pop
mov
mov
dec
xchg
mov
push
jae
in
outsl
push
push
dec
insl
repz
cmp
jle
mov
adc
out
pushf
jge
in
fidivrs
enter
or
mov
iret
dec
adc
xor
int3
dec
int3
jno
fstpt
dec
push
pop
insb
movsl
rcr
and
outsl
mov
cmp
mov
pop
imul
movsb
push
dec
test
and
dec
std
and
mov
inc
cmp
or
out
fisubl
mov
imul
sub
cmpsb
cli
rolb
rcr
hlt
ret
push
inc
push
imul
push
pop
ds
xor
stos
pop
call
or
rorb
sbbl
cmp
les
inc
ljmp
movsb
mov
lock
movsb
push
test
and
pop
xchg
or
push
and
dec
mov
fimuls
xor
sbb
insl
jg
fisttps
mov
test
mov
mov
loop
inc
sar
mov
loope
mov
int3
loop
jo
mov
cmc
add
ljmp
mov
fsubr
test
mov
xchg
xor
jle
cmpsl
pop
je
loop
stos
cmc
lret
mov
je
and
mov
fstps
fnstsw
insb
repz
pop
aas
gs
cmpsl
fsubr
fcomp
sbb
sbb
out
or
add
adc
nop
pop
add
subb
loopne
sbb
mov
nop
scas
and
mov
mov
mov
clc
clc
shlb
and
sbb
insl
xchg
xor
popa
popa
mulb
divb
testl
inc
repz
jb
inc
lock
test
mull
pop
mov
mov
into
out
and
jo
sbb
inc
and
mov
mov
push
aad
mov
sbb
push
mov
lret
jge
push
imul
pop
test
mov
jnp
loop
xorb
test
push
pushf
stos
jne
inc
sbb
call
cmpsl
movsb
pop
or
fistpl
fbstp
mov
scas
das
cmp
dec
and
and
subl
pop
mov
repnz
mov
jge
daa
mov
adc
fwait
xor
or
int3
shrb
mov
aad
pop
mov
and
mov
jae
loop
xchg
jl
mov
mov
push
pusha
sub
xchg
jbe
add
and
pusha
adc
inc
xchg
add
pop
cmp
cmp
mov
sahf
adcb
or
jno
lret
push
mov
pop
scas
fidivrs
jb
ds
clc
js
fstpt
cli
lods
xor
into
gs
imul
ret
sub
stos
test
xor
xchg
pop
mov
jns
fistl
or
ja
movsl
mov
jae
loope
cmc
data16
dec
xor
mov
jmp
sbb
out
bound
insl
out
mov
jmp
sub
gs
xchg
inc
xor
and
mov
out
xor
mov
mov
sub
movl
pop
add
pop
jmp
push
dec
add
roll
popf
xor
xor
xor
cmp
jle
lods
iret
mov
cmp
ret
je
or
xor
aaa
iret
in
and
frstor
or
push
or
clc
lahf
and
addr16
icebp
jge
sub
jl
leave
jno
add
xorb
xchg
shl
pop
push
test
dec
mov
inc
cmp
into
cmpsl
dec
jmp
repnz
mov
pop
sti
out
xchg
call
lds
push
es
sub
into
sbb
sub
xlat
jg
push
adc
xor
out
shlb
jp
jmp
pop
cmpsl
cmp
leave
or
inc
mov
sahf
adc
inc
or
inc
inc
fcompl
movsb
popa
orb
jmp
or
sbb
je
adc
les
jp
imul
pop
or
dec
cmpsl
jg,pn
jns
jp
imul
xchg
sub
ret
sub
fldl
jo
sub
ss
repz
cmp
and
in
jl
lcall
lods
jmp
out
dec
or
leave
mov
mov
iret
call
push
jbe
mov
mov
ljmp
and
mov
xchg
lcall
rcr
cmp
leave
subb
xor
pop
adc
xchg
into
mov
pop
cmp
add
mov
pop
jg
dec
stos
std
std
in
mov
sub
inc
xor
lds
sbb
xchg
lret
mov
xor
or
xchg
andb
pop
js
mov
cld
int
cld
lea
clc
xlat
xchg
or
int
xor
shll
es
out
lods
icebp
insb
gs
mov
ja
stos
rcll
lock
lcall
adc
rorl
iret
lods
ret
mov
inc
out
push
cmpsb
pop
dec
mov
outsb
jae
mov
or
stos
in
stos
xchg
inc
and
movsb
das
push
push
push
mov
pusha
and
ret
xlat
ret
sub
xchg
sti
push
push
sub
lret
sbb
fstl
pop
pop
into
adc
mov
jns
xchg
sub
stos
ss
push
dec
mov
xlat
mov
inc
inc
pushf
mov
mov
rcll
dec
aas
adc
inc
mov
out
neg
xchg
or
push
cmp
sub
fiaddl
xchg
sbb
loope
xor
xchg
xchg
xchg
cmp
dec
fs
sub
pop
das
mull
dec
push
nop
add
sub
cmp
sbb
imul
daa
pop
or
lahf
stos
in
decl
lahf
mov
push
lret
cmp
ljmp
aam
fisttpll
sbb
movsb
mov
or
insl
inc
pop
mov
jo
out
int
mov
xchg
cs
xor
jg
js
mov
in
loopne
mov
ss
inc
lods
xchg
ss
jl
push
cmp
sub
push
orl
dec
push
fbld
add
in
sub
cmp
sti
cmp
jns
sub
test
jge
mov
cmp
xchg
in
fnstenv
or
into
ret
subl
adc
xor
leave
jne
xor
mov
shll
sbb
scas
add
out
clc
xor
jl
mov
sub
ret
shl
xlat
pop
in
xchg
les
pop
ss
mov
dec
ret
xlat
bound
lcall
jns
out
xor
jecxz
sub
out
and
in
loop
aas
out
cmpb
sub
mov
jb
or
push
xchg
or
push
dec
arpl
mov
aaa
mov
cmpsb
lahf
mov
cld
orb
sub
into
xchg
mov
mov
xor
ljmp
mov
inc
daa
addl
mov
or
loopne
push
dec
idivb
mov
cld
cli
les
aam
cmpsb
sbb
adc
outsb
pushf
arpl
loopne
je
adc
aas
adc
cltd
fsubrl
rorl
cmp
push
or
stos
outsl
ljmp
mov
sbb
aas
jne
imul
pop
xchg
push
jns
or
arpl
xor
dec
adc
and
pop
adc
cmp
cmp
inc
test
loopne
mov
shl
pop
sub
aad
enter
jae
jge
push
cs
xchg
xchg
lods
xchg
cmp
int3
xor
popa
loop
mov
or
stc
mov
stos
and
pushf
loop
mov
outsb
push
popf
mov
sub
rorl
jnp
dec
mov
mov
inc
or
sbb
dec
fisubrl
xchg
pop
push
pop
test
xlat
dec
dec
mov
push
cmc
cmpsb
testb
fisttpll
bound
inc
lret
mov
fisubs
mov
jns
mov
cmp
push
jg
fistpll
sub
faddl
push
adc
and
sub
dec
int
adc
xor
int
sbb
hlt
pop
sbb
cmp
adc
aad
push
inc
divl
insb
int
ret
cmp
xchg
les
popa
incl
or
jge
sub
push
or
out
push
lock
mov
xlat
push
je
and
ljmp
sbb
cli
int
push
ja
push
push
sbb
loopne
pop
push
pop
icebp
jle
mov
pop
jne
or
and
dec
jmp
in
xchg
pop
mov
jmp
jl
ds
push
xchg
lea
jns
popa
push
fs
dec
dec
in
outsl
int
nop
sti
aad
test
daa
add
mov
add
inc
or
jo
add
je
sahf
cvttps2pi
mov
enter
insl
xor
inc
lret
and
jno
jbe
insb
sub
xchg
sub
sarb
dec
jae
pop
sbb
adc
inc
fstpt
mov
aas
loopne
out
test
push
push
cmp
pop
adc
sub
idivl
mov
fadd
add
cmp
enter
stc
mov
adc
into
lret
xchg
scas
ret
dec
lcall
sti
lret
adc
cmp
or
clc
and
mov
insb
daa
cmpsl
lahf
sar
pusha
pop
cli
mov
sbb
idivl
mov
imul
xor
push
cmp
push
jns
test
pop
movsb
enter
and
popf
andl
mov
xchg
push
insl
test
push
icebp
popf
pop
scas
jnp
into
es
out
mov
cmp
popa
out
mov
and
std
sbb
mov
sahf
xor
call
add
lret
je
bound
push
lret
pop
push
push
adc
adc
pop
adc
sub
in
aam
mov
sti
and
int
jmp
aam
cmpsb
lret
lcall
push
add
or
sbb
push
dec
dec
lea
sub
mov
sti
lods
dec
pusha
stos
mov
or
loop
or
or
shll
call
mov
sub
push
or
mov
jo
sub
mov
ss
push
js
stos
lods
dec
rcll
aad
mov
pop
inc
or
sahf
push
and
jmp
xchg
jmp
mov
lods
lods
mov
and
xlat
jmp
scas
push
cmpsl
add
rcll
cmpl
xchg
xabort
push
adc
decl
mov
sub
or
push
xlat
sub
push
mov
mov
xchg
sub
adc
mov
fs
dec
lods
add
mov
adc
sub
xchg
pop
jae
cmc
dec
call
loopne
or
dec
shll
cs
mov
js
pop
rcl
add
sbb
sbb
mov
xor
jo
push
loope
mov
adc
or
outsb
or
xchg
cmp
inc
fisttps
orl
push
xor
fs
fstpt
aad
mov
imul
push
push
outsl
scas
sub
mov
pop
pop
cli
xchg
mov
movsb
lods
sub
leave
les
enter
mov
iret
into
mov
jmp
icebp
xor
add
pop
rcrl
mov
sbb
enter
outsb
cmp
adcb
js
out
add
fisubrs
xchg
out
mov
dec
add
repnz
mov
push
adc
sbb
pop
pop
or
movsl
out
push
lcall
stos
jb
and
in
nop
add
arpl
stos
push
aam
xor
loope
jae
push
pop
fimuls
adc
pop
movsb
sub
aam
loope
xchg
dec
sbb
mov
test
gs
subl
inc
sub
rcr
cmp
popf
and
aad
clc
mov
adc
cmc
das
sarb
dec
callw
idiv
xchg
lcall
mov
popf
jg
test
xchg
mov
push
das
fbld
pop
xor
cmp
gs
leave
roll
ljmp
inc
out
cmpb
xchg
push
dec
test
add
push
and
sub
insl
push
xchg
shrb
lds
or
add
mov
xor
push
lcall
outsb
dec
pop
jle
mov
sahf
cltd
fcoml
xchg
add
loop
jecxz
xchg
mov
inc
push
adc
repz
fsts
ja
je
mov
mov
jne
pop
sahf
mov
and
push
xchg
scas
mov
push
jo
sub
into
data16
std
ss
pop
pop
mov
adc
out
or
cs
xor
arpl
movsl
sub
jne
not
aad
inc
cmc
sahf
fdivrl
pop
pop
jo
push
enter
push
cmp
xlat
adc
rclb
into
dec
mov
mov
sub
imul
fwait
inc
xchg
pop
inc
fldenv
cmpsl
dec
xchg
lahf
xor
out
jb
scas
jg
into
jno
xchg
les
rorb
or
ficoml
dec
neg
cld
test
ret
adc
xchg
sub
mov
jno
in
mov
cmpsl
sub
cld
dec
dec
rcrb
fadd
lret
rolb
inc
or
dec
outsl
or
dec
mov
iret
shll
inc
clc
add
push
xchg
jecxz
adc
adc
lea
shlb
popf
daa
xor
add
cmp
std
movzbl
loope
adc
cs
imul
scas
pop
mov
inc
repz
and
cmp
adc
xor
or
out
popf
cmp
rorb
cld
lods
aas
lret
jne
ffreep
pop
dec
ja
push
mov
addr16
or
ficomps
mov
fsubrl
add
mov
xchg
and
mov
loop
adc
test
jae
push
insb
adc
jns
push
push
enter
inc
dec
in
push
outsl
test
push
test
clc
jae
mul
xchg
mov
arpl
pop
fildll
std
insl
jle
mov
testb
cmc
cmp
push
jle
pusha
movsb
xchg
mov
push
stos
iret
in
mov
push
sbb
fcomps
push
js
mov
pop
in
mov
loop
popf
cmp
mov
sub
pop
shll
cmp
sbb
xchg
sub
pop
movsl
mov
xor
fdivrs
je
and
xchg
jl
outsl
in
aam
icebp
jb
ljmp
je
shll
js
mov
sbb
pop
loopne
mov
push
inc
stos
ds
jg
pop
inc
in
fninit
cwtl
sub
cld
xchg
lds
les
sub
jns
or
ljmp
and
xchg
shll
pmaddwd
adc
xchg
adc
daa
pop
addr16
push
das
out
and
aam
adc
out
fimull
loope
dec
int3
clc
rol
cld
lds
stos
std
mov
sti
leave
xorb
cltd
or
push
push
test
pop
mov
and
call
sbb
outsl
aaa
cmp
repz
xlat
cmc
clc
ret
dec
pop
test
mov
dec
inc
icebp
pop
nop
std
or
scas
je
xchg
andb
jno
push
dec
test
popf
mov
jo
or
jl
out
adc
pushf
sub
pop
adc
bound
dec
call
test
pop
add
mov
add
inc
in
add
sbb
and
jge
popf
inc
mov
aad
pop
mov
xor
cmpsl
adc
popa
movsl
inc
mov
dec
mov
adc
gs
push
or
xchg
repz
adc
pop
push
cmp
mov
mov
out
popf
jp
enter
mov
stos
xor
lcall
add
cmpsl
lock
loopne
into
fistpl
shrl
cmpsl
cmp
push
subl
imul
repnz
adc
sub
pushf
push
les
in
xor
mov
mov
scas
das
lds
shl
aas
pushf
jecxz
dec
xor
imul
inc
jmp
push
cld
ja
jge
test
ret
xor
or
xchg
mov
stc
std
or
daa
xchg
inc
subl
cltd
ss
lock
cmp
aad
dec
sub
popf
loop
cmp
mov
pusha
sbb
lods
cmp
dec
or
ss
rorb
addr16
cmpsl
movsl
pusha
jg
push
inc
sti
jmp
adc
aam
lret
nop
stos
inc
mov
into
mov
repz
mov
dec
fcom
out
inc
push
dec
cmp
jbe
subl
sbb
jno
cwtl
sbb
cmp
ljmp
lds
add
xlat
jns
xor
cmp
cmp
dec
fmuls
sahf
inc
or
aaa
icebp
shlb
or
mov
sub
shrl
jo
push
sub
lret
add
jae
jle
sub
scas
mov
scas
movsl
xor
sti
xchg
lret
arpl
cmp
dec
movsl
xchg
cwtl
leave
lcall
ss
loope
inc
fistpl
mov
pop
stos
hlt
jnp
xchg
test
dec
and
sub
xchg
jno
movsl
std
or
or
add
cmc
es
pop
push
xorl
adc
lret
mov
adc
cmp
add
clc
repnz
outsb
add
push
mov
shrb
mov
fidivl
jo
shl
and
ja
cli
sub
aad
lods
lcall
jg
aas
dec
mov
fcomps
icebp
into
jnp
pushl
imul
dec
popa
jb
and
xlat
inc
mov
mov
xchg
cmp
loop
movb
xor
cmp
mov
and
cmp
sbb
add
mov
push
fisttpl
lds
sub
mov
aaa
cltd
inc
rcl
xchg
inc
lcall
sub
jecxz
xchg
jnp
movsl
pop
test
ret
xor
dec
fstps
in
test
cltd
mov
sub
out
pop
xor
daa
les
sahf
inc
lods
mov
mov
and
xchg
test
xor
and
mov
push
adc
loope
addb
sti
mov
shrb
sub
or
sub
scas
test
hlt
test
or
pushf
js
or
test
aaa
movsl
xchg
mov
loop
mov
cmp
in
sbbl
movsl
call
mov
popa
loope
stos
mov
mov
js
loopne
cmp
push
movsl
movsl
pop
add
notb
into
enter
shrb
mov
movsb
insb
mov
pop
in
ret
mov
pop
popa
xchg
fimuls
jae
lret
inc
cltd
fbld
mov
in
es
fdivrl
sub
ret
mull
daa
das
cmp
inc
daa
stos
dec
mov
sub
jecxz
mov
sbb
iret
mov
mov
pop
mov
mov
in
fcompl
adc
push
rcr
loopne
gs
xchg
jl
inc
jb
mov
pop
and
mulb
hlt
adc
aam
loopne
mov
jp
dec
mov
and
or
testl
mov
mov
dec
pop
jns
dec
mov
add
adc
mov
jp
loop
sets
pop
insl
ds
mov
popa
lds
and
xchg
xchg
inc
leave
and
push
cli
jmp
inc
xor
iret
pop
sub
hlt
cmp
pop
push
sub
xchg
enter
dec
xchg
fistl
aas
das
mov
mov
pop
cmp
xor
cli
push
jmp
xchg
and
gs
cwtl
pop
dec
dec
mov
jecxz
dec
mov
push
pop
ret
inc
dec
xchg
jb
or
pop
xchg
mov
push
add
mov
mov
arpl
mov
test
fnstenv
divl
into
movsl
js
adc
aas
xor
stos
stc
lods
xchg
push
mov
out
mov
pop
bound
pop
lds
insb
push
cltd
loope
dec
dec
or
push
sub
or
jns
aaa
lods
cmp
rolb
and
push
sub
mov
shl
pop
stc
ds
fiaddl
in
cmp
dec
add
ljmp
jns
xchg
imul
cltd
xor
mov
test
jne
xchg
lahf
sti
dec
cmp
mov
notl
lcall
dec
xchg
je
aas
inc
fidivl
sti
ljmp
add
ljmp
inc
shlb
nop
lods
ljmp
or
xor
icebp
xor
fnstcw
push
add
imul
fldt
ret
sahf
push
dec
push
movsb
iret
roll
push
sbb
fbstp
mov
cli
or
pop
rcr
arpl
popa
js
rcrl
xchg
inc
adc
je
mov
push
push
out
mov
jmp
test
xchg
pop
adc
jecxz
test
leave
repz
dec
clc
fstl
or
jp
bound
sahf
ss
stos
mov
rorb
mov
xchg
mov
lock
lods
dec
mov
inc
inc
scas
pop
jae
push
sub
je
ss
cmp
pop
and
outsb
xchg
cs
jecxz
mov
pushf
std
icebp
mov
or
ficomps
movsb
xor
xchg
jle
cmpb
rorb
negl
inc
dec
nop
mov
movsl
sahf
push
mov
xor
icebp
enter
xchg
jmp
push
outsb
push
push
cmp
pop
flds
fs
lds
jnp
push
jo
leave
jl
cli
imul
lods
mov
pop
sbb
xor
arpl
lcall
xchg
mov
stc
fimuls
or
xchg
inc
cli
dec
aas
jmp
inc
pop
out
scas
cltd
xchg
pop
mov
pushf
jmp
jmp
jmp
push
cmp
xor
jne
push
movsl
push
inc
push
stos
fsubp
adcb
sbb
jl
jg
jnp
or
and
push
dec
or
sub
stos
fistl
xor
pop
inc
in
aad
inc
imul
pusha
dec
mov
mov
mov
sti
inc
or
insl
jmp
insb
lret
dec
jb
rolb
into
loopne
dec
lea
inc
rclb
mov
push
mov
inc
push
hlt
fs
push
inc
out
inc
or
push
insb
mov
pop
lret
mov
mov
lahf
ret
sbb
push
adcl
mov
xor
jp
jns
xor
mov
call
fcoml
inc
fists
sub
or
cmp
jp
mov
sahf
mov
push
dec
mov
fdivrs
cmp
push
loopne
addb
sub
inc
sbb
mov
dec
in
cs
subl
or
fidivrs
dec
mov
icebp
insl
inc
mov
out
icebp
xor
mov
inc
inc
fisubs
test
imul
lahf
dec
push
mov
cmp
fstl
rcll
xchg
jb
adc
pop
out
adc
adc
add
clc
add
arpl
insb
in
mov
inc
insl
mov
sbb
xor
or
fadd
inc
in
dec
dec
cmp
cmpsl
je
push
inc
stc
aad
pop
insl
sbb
int
adc
or
cmp
pop
cmp
and
repnz
jp
pop
push
iret
fmuls
pop
arpl
jb
repnz
lods
xor
sbb
aad
int
nop
iret
push
jae
sti
push
scas
push
jl
push
cmc
divl
int
hlt
mov
xor
mov
add
lret
push
pop
rclb
ds
cli
xchg
mov
fwait
cmp
and
outsb
mov
cltd
jge
pop
dec
adc
aam
popf
sti
adc
fsts
outsl
lods
sbb
scas
fstl
inc
push
jo
hlt
and
xchg
scas
push
adc
aas
sarl
jle
out
movsb
bound
jg
or
mov
bound
loop
adc
clc
stos
iret
mov
sbbl
repnz
mov
xor
sarl
cs
mov
push
xchg
xlat
movl
pop
mov
out
cmpsl
ret
mov
xchg
shll
nop
mov
xchg
rclb
loop
or
dec
fidivrs
into
in
cmp
test
adc
pop
out
hlt
ret
inc
add
sub
xor
dec
dec
dec
aam
xor
or
stc
aas
rorb
xor
in
enter
xchg
das
jae
sub
cld
push
lods
outsb
outsl
movsl
pop
push
hlt
into
bound
sub
and
jle
add
leave
adc
stos
xchg
xor
cmp
and
xchg
jb
mov
jns
jg
mov
mov
jo
fimuls
insb
ret
in
and
in
jae
stos
jo
pop
and
cwtl
movsb
push
rep
mov
sub
fcmove
frstor
mov
xchg
push
push
int3
jl
mov
movsb
aaa
shl
punpckhdq
push
outsl
test
add
dec
imul
add
lahf
test
aas
push
push
ljmp
jnp
or
lahf
pop
test
shlb
mov
imul
or
mov
adc
ret
mov
int3
test
stc
es
xchg
fcomip
dec
mov
js
mov
test
arpl
mov
in
out
nop
addr16
movsb
mov
je
fisubs
test
jo
aad
jl
out
addb
aad
imul
jno
in
into
mov
adc
xor
or
inc
xchg
and
lods
jge
sbb
outsl
xor
push
inc
adcl
adc
in
ret
adc
test
arpl
mov
jb
ljmp
repz
js
sbb
fiaddl
aaa
cmc
shrb
inc
add
sbb
ret
xor
dec
out
pusha
mov
push
fwait
hlt
fisubrl
lods
inc
test
les
push
hlt
inc
in
dec
idivl
shlb
test
inc
in
stos
in
jae
jbe
addr16
mov
icebp
mov
pusha
or
adc
iret
loopne
je
inc
jmp
inc
xor
pop
loop
xlat
fisubrl
push
sbb
mov
loope
stc
lret
fwait
xor
pop
adc
mov
call
jno
sub
cmpsb
sbb
sti
aam
test
test
cld
mov
stc
scas
inc
push
mov
adc
sub
mov
push
mov
xchg
and
cmpsb
and
or
enter
fcoms
clc
loopne
jno
inc
and
stc
or
stos
fdivrs
int3
push
push
jns
xor
push
push
mov
push
xor
pop
bound
mov
das
push
sub
fcomi
in
pop
jb
stc
fisttps
ds
pop
aaa
mov
movl
adc
lock
stc
in
mov
push
out
enter
sbb
xor
mov
push
test
test
es
dec
or
repnz
inc
dec
in
lret
sub
dec
pop
enter
data16
shrl
sbb
and
push
jo
loop
ror
or
std
or
mov
leave
sbbl
ret
jbe
xchg
add
xor
bound
inc
arpl
ljmp
cmp
faddl
imul
hlt
inc
xchg
mov
add
sub
sahf
push
out
dec
fimull
lret
in
or
aas
mov
push
and
fs
fadd
xor
jo
jg
jle
pop
popa
ret
jmp
jbe
mov
imul
out
push
adc
pop
loop
sub
test
mov
in
add
outsb
lds
xchg
adc
nop
dec
shrb
inc
mov
jmp
ljmp
nop
mov
mov
dec
mov
add
orl
pop
insb
push
add
mov
int3
aam
pop
stc
imul
loope
stos
and
ror
adc
rcll
sbb
sbb
std
pop
fldcw
cmpsl
mov
jno
mov
mov
inc
sub
xchg
dec
lret
xor
push
test
cmpsb
testl
mov
into
and
psubusw
or
cmp
mov
cmp
test
lahf
movsl
lods
jp
in
rcrl
imulb
enter
mov
pop
xor
push
das
rcrb
sarb
arpl
jo
jb
loope
or
inc
loop
fs
mov
xchg
mov
push
adc
fisubl
pop
cmpsb
nop
inc
sbb
sahf
stc
clc
dec
mov
add
or
xor
adc
popa
mov
es
mov
cmc
sbb
cmpb
dec
jecxz
adc
mov
jns
mov
adc
rclb
ds
cmpsb
sbb
xor
jge
ds
mov
shr
cltd
or
idivb
cmp
jne
push
dec
fisttpl
or
test
mov
outsb
jle
sbb
xchg
imul
cmpsb
pop
cmc
adc
popa
ficompl
sbb
xchg
pop
pusha
sbb
xor
dec
or
mov
push
cmp
fiaddl
mov
pop
fiaddl
pop
out
test
push
fwait
cs
jo
add
out
flds
jnp
pop
daa
cmp
xchg
push
cmp
xchg
lret
sbb
adc
es
lods
fwait
int
mov
mov
andl
pop
inc
test
es
ja
cld
idivb
js
push
mov
out
jo
outsb
ss
push
jbe
cmp
adc
jl
xor
das
rolb
loopne
jmp
mov
dec
rcll
ljmp
fadds
jle
lods
or
lds
mov
pushl
js
mov
push
scas
scas
jnp
shrl
cmp
jp
mov
or
out
mov
int3
sub
lcall
xchg
or
adc
dec
xchg
sub
mov
mov
push
adc
sbb
std
sub
jp
cld
xchg
negb
sbb
mulb
ja
ljmp
in
gs
ljmp
insl
xor
mov
pop
lock
pop
or
sub
roll
lret
pop
ja
push
mov
mov
iret
inc
cmp
push
adc
xchg
cmpsl
jge
aas
jmp
jecxz
pop
cli
out
xlat
mov
mov
insb
push
inc
mov
mov
pop
or
mov
jge
aad
fcomip
push
fdivl
cmp
int3
lods
and
inc
push
hlt
fcompl
pop
movsb
xor
and
and
ja
sbb
xchg
pop
pop
test
xchg
add
movsb
outsb
lahf
and
rorl
js
int3
and
aad
pusha
xchg
or
pop
mov
jo
enter
and
xchg
xor
push
xchg
call
jle
outsb
movsl
shr
cmp
inc
inc
sub
jle
and
loop
ret
enter
outsl
add
clc
adc
call
insb
mov
fdivl
sbb
jne
ret
lock
fld
jl
add
outsl
test
sub
mov
roll
lret
ja
loope
enter
sbb
js
xchg
rclb
in
nop
in
add
xchg
lret
hlt
cwtl
pop
std
out
add
lcall
call
xchg
gs
xor
mov
add
and
sub
rcrb
or
sub
scas
lods
sahf
pop
dec
sahf
fs
popa
mov
and
loope
pop
pushf
repz
dec
test
pop
dec
pusha
cmp
sbb
cmp
adc
push
cmp
adc
push
neg
icebp
jp
jae
xor
cmp
dec
ja
cltd
cmpsl
cmp
pushf
jge
stc
add
orb
sub
popa
lret
gs
leave
dec
data16
adc
dec
imul
cmc
fisttpll
lret
dec
stos
ret
cmp
addl
cmp
xor
rcll
test
stos
je
jne
je
mov
aas
ret
js
fstl
mov
mov
test
xchg
mov
cld
xchg
mov
xlat
int3
inc
cmpsb
mov
mov
adc
lods
insb
cmc
rorl
rcr
cmc
call
cmp
int
dec
xchg
je
or
pop
inc
mov
fistpl
pop
fstpl
mov
ss
andl
mov
inc
aaa
ja
aam
push
pop
rcrb
jnp
dec
xor
cmc
fs
cmp
out
adc
inc
jo
pop
xor
and
cmp
rorl
and
add
add
ds
dec
mov
sahf
lcall
pushf
inc
jp
cmp
cmp
ret
mov
shl
shlb
lret
xor
xchg
loop
scas
xchg
hlt
pop
jmp
in
mov
ret
sbbl
push
loope
int3
adc
pop
daa
in
or
xchg
call
stos
jle
cmp
in
je
jo
pop
and
orb
fcompl
sub
inc
nop
push
xor
sbb
pop
xchg
dec
cmpsl
test
cmpsb
add
or
fsubr
mov
sbb
mov
or
sbb
and
xor
out
out
test
mov
stc
lds
fcmovne
das
ljmp
mov
sub
xchg
pushf
push
out
test
xchg
xor
movsl
idivb
jp
scas
sbb
xchg
adc
jl
add
pusha
stos
popf
sti
inc
data16
pop
or
leave
sbb
icebp
nop
imull
lret
dec
jne
sahf
mov
hlt
sub
fisubs
arpl
pop
mov
clc
test
dec
aas
and
or
jle
pop
inc
pop
pushf
outsb
jle
aas
add
nop
out
pop
jecxz
mov
cmpsl
sbb
jbe
jb
xchg
sub
push
das
and
and
insl
sarl
cmc
sub
cmp
mov
xor
push
shrb
xor
negl
stos
es
push
sub
and
cli
mov
daa
dec
gs
add
pop
mov
ds
xor
fisubs
cmp
pushf
mov
mov
loop
mov
in
ds
inc
lret
adc
inc
xchg
sbb
cltd
xlat
xchg
fiaddl
xchg
jae
mov
rcrb
push
push
lds
outsl
stos
mov
lret
call
add
adc
cmp
adc
mov
cltd
lock
push
pop
add
xlat
mov
pushf
bswap
or
mov
mov
fbstp
es
fucom
pusha
xor
ljmp
pop
sbb
sbb
inc
cmpsb
cmc
xchg
les
popf
xchg
int3
addl
mov
movsb
adc
les
pop
and
dec
mov
xor
lcall
clc
add
filds
test
push
jl
dec
adc
pop
clc
jge
xchg
or
mov
pop
inc
sbb
ds
sbb
sbb
test
jl
cmc
dec
dec
lock
mov
and
push
mov
lahf
jge
pop
add
pop
mov
pop
outsb
push
cmpsb
psubw
rcll
jecxz
mov
sbb
adc
lods
or
aam
dec
cmp
adc
dec
pop
pop
and
xchg
ret
xorb
push
push
addb
xchg
jmp
push
roll
enter
lcall
and
add
out
daa
xorl
je
mov
notb
jg
rolb
loopne
mov
lods
fisttps
xor
adc
cmp
mov
xchg
sub
push
sub
inc
dec
push
into
xor
stc
in
add
jo
or
shlb
push
xchg
inc
mov
arpl
outsl
pop
mov
sbb
add
sbb
mov
push
pop
cmp
adc
sbb
and
idivl
int3
pushl
xchg
sub
stos
sbb
adc
sbb
mov
xchg
cmp
pop
push
jp
sub
sbb
out
jecxz
sbb
call
aaa
cmp
mov
repz
outsb
jno
mov
and
sbb
sbb
in
mov
sub
outsl
lret
add
int3
test
ja
xchg
repz
rolb
jl
and
addr16
push
and
mov
ds
test
ljmp
push
stos
sar
xor
jle
subl
roll
pop
mov
lret
das
jge
loope
or
and
test
cmp
fs
sub
mov
sahf
adc
xor
outsb
push
shlb
xchg
sar
xor
xchg
loopne
sbb
mov
cmp
mov
xor
ja
je
dec
enter
outsl
cmp
iret
mov
mov
pusha
xor
aas
cmp
cmp
out
stc
pop
ds
aam
mov
ja
pop
pusha
xor
jge
sub
cli
pop
rcl
sbb
scas
sub
xor
setb
popa
fwait
test
stos
out
sarb
aam
xchg
idivb
mov
pushl
jo
nop
inc
mov
arpl
in
sar
or
stos
andb
pop
popa
clc
sub
outsb
call
dec
div
add
pop
imul
cs
cmp
rcrl
mov
add
mov
mov
movsl
mov
scas
lret
jo
or
or
xchg
or
jae
cmp
pop
out
xchg
test
out
jmp
inc
mov
xor
gs
lahf
sbb
sarl
ds
or
mov
pushf
mov
dec
cmp
push
mov
jge
cmpsb
mov
aam
test
movsl
imul
cmpsl
sbb
inc
pop
daa
call
and
je
pop
mov
or
and
or
orl
cmp
popa
xchg
lods
hlt
popa
inc
in
sti
aas
jbe,pn
mov
cmp
jg
cltd
jmp
jne
pop
sarb
push
xchg
mov
aam
fsubs
fwait
mov
das
in
ret
inc
pop
hlt
mov
push
stos
xor
mov
mov
push
xor
xchg
es
lock
ffreep
jns
pusha
inc
repz
adc
jae
xchg
pop
addr16
dec
enter
xor
sub
xchg
mov
pop
adc
inc
cmp
pop
and
cs
lds
and
cmp
pop
dec
jb
addr16
cli
aaa
add
or
pop
lea
sahf
in
dec
inc
clc
adc
xchg
imul
aam
adc
mov
mov
push
sub
inc
out
clc
and
inc
in
cmp
dec
push
xchg
mov
lds
adc
nop
xor
lods
inc
popa
xor
fidivrl
loope
xchg
sahf
rol
leave
stos
mov
pusha
ret
hlt
ds
cmpsl
mov
bound
push
and
hlt
dec
adc
pop
sbb
xchg
cmc
dec
dec
ja
jbe
lods
mov
adc
pushf
imul
pushf
aaa
ud0
add
dec
ss
sbb
dec
fildl
fstp
and
aaa
inc
repnz
dec
adc
mov
bound
jge
dec
xchg
imul
adc
sub
add
or
inc
in
aam
pop
mov
div
js
xchg
cmp
test
call
enter
push
lods
shrl
clc
punpcklbw
mov
xchg
add
je
loopne
sbb
fcomip
pop
and
scas
imul
jne
imul
ds
mov
cmp
push
pop
imul
sub
rcr
sbb
pop
fwait
scas
iret
xor
iret
daa
lahf
fstpt
sub
and
adc
mov
sub
data16
repz
push
xchg
mov
aas
arpl
xchg
pop
or
inc
pop
cmp
jg
insl
les
movb
shr
cmpsl
call
or
sbb
cmpb
inc
aas
out
nop
jnp
pushf
push
rorb
inc
sbbl
sub
pop
xchg
mov
popa
divb
xchg
fdivrp
arpl
aad
cmpb
out
inc
xor
lret
icebp
bound
ljmp
and
add
dec
xor
cmc
loop
push
jle
cmp
xor
jo
mov
pop
call
ja
jge
imulb
mov
or
stc
push
push
test
out
test
test
dec
inc
les
fldl
testl
cmpsb
testl
adc
xchg
js
push
jp
mov
sub
or
pop
cmpsb
ret
pop
inc
jecxz
lods
aam
arpl
jl
xchg
shr
jb
pop
sbbl
jmp
inc
pop
sbb
or
jp
mov
and
repnz
mov
xor
js
jno
mov
icebp
mov
jae
es
testl
pop
dec
je
push
dec
aam
mov
or
inc
pusha
fildll
ja,pt
je
lock
inc
sub
mov
mov
lods
xor
mov
cld
gs
pushf
mov
dec
mov
cld
mov
fwait
or
outsl
aad
xor
jbe
stos
ss
lahf
adc
dec
rcrb
cmpsb
rorl
stc
ljmp
rep
xor
in
je
adc
into
scas
lock
or
xor
aad
aam
or
popf
in
mov
dec
xchg
cltd
je
adc
scas
fldlg2
cmp
addl
push
in
add
mov
fwait
mov
mov
addr16
lahf
push
cmpsl
add
arpl
jbe
arpl
jns
xchg
scas
dec
add
sbb
xor
daa
dec
data16
push
lea
lret
in
or
mov
cmp
push
and
mov
adc
dec
pop
dec
adc
enter
sub
enter
dec
cmc
mov
inc
or
sub
cltd
pusha
int
xchg
sbb
and
sub
pop
jl
jecxz,pt
pop
jg
add
in
adc
xchg
cmpsb
mov
mov
jnp
jg
lcall
mov
ret
rcl
ja
int
sbb
scas
leave
out
fstpt
sbb
js
and
push
fwait
movsb
in
stos
cwtl
fmuls
sbb
dec
jo
pop
shll
std
mov
ds
iret
and
movsl
mov
aam
sub
int3
nop
leave
aas
outsl
sbb
xor
psubusb
push
fs
push
mul
lret
mov
jo
dec
cmovbe
mov
xlat
jae
xchg
cmp
dec
sbb
popf
hlt
popf
aad
mov
mov
cmovb
ds
dec
add
fsubs
jle
fmull
sub
pop
adc
sbb
stos
jno
mov
mov
mov
mov
lahf
scas
pusha
loope
inc
test
jbe
pop
clc
outsl
mov
xchg
pop
lcall
xchg
sahf
sbbl
dec
imul
push
mov
mov
dec
and
inc
xor
pop
sub
mov
xchg
aam
push
jno
mov
cmp
out
sub
fbld
ljmp
cmc
cld
mov
lret
jno
nop
iret
pop
dec
repnz
sub
mov
rcll
flds
ret
or
mov
push
scas
push
pop
call
dec
lds
and
jne
fmull
sub
sahf
sub
fwait
in
lea
in
mov
ljmp
jne
cld
inc
das
cltd
or
in
jmp
or
push
les
mov
xchg
sub
cmpsb
pop
or
shlb
loopne
push
jge
lret
push
mov
ss
fimuls
sub
cmp
mov
adc
xor
xchg
and
dec
mov
aaa
or
arpl
add
add
notb
ret
test
call
js
push
and
sub
sti
out
pop
push
jnp
out
dec
div
test
repz
jno
xor
hlt
pusha
mov
int
test
popf
cmp
negl
fs
sub
mov
mov
pop
int3
xchg
cmp
pusha
test
jno
mov
repnz
inc
xor
xchg
and
paddsb
shlb
call
out
push
xchg
fsubr
xor
outsl
leave
push
sub
lods
mov
lods
mov
les
inc
les
or
int3
push
push
popa
push
and
lds
mov
lret
rorb
test
adc
aam
push
je
rorl
cwtl
sbb
push
cwtl
mov
scas
fwait
out
je
inc
in
dec
sub
or
ds
aam
mov
and
push
jnp
int
dec
push
jl
mov
pop
pop
and
xchg
add
aad
nop
lret
pop
inc
adc
add
and
aaa
int3
fisttpll
nop
jo
aas
inc
adc
mov
cmc
pushl
sub
sbb
movsl
aaa
fcoms
mov
icebp
jns
int3
sbb
mov
fnstenv
mov
mov
cwtl
jb
jp
sahf
dec
scas
cmp
leave
sub
in
mov
stos
jne
stos
pop
push
adc
sbb
sbb
loope
inc
push
je
add
pop
outsb
je
mov
mov
inc
jns
push
mov
inc
cmp
out
outsb
adc
inc
dec
mov
adc
into
test
andb
cmp
jne
stos
dec
cltd
add
cmp
mov
fnsave
imulb
jne
mov
repz
notb
or
or
sub
imul
lahf
push
test
push
bound
push
cmpsl
jp
imul
enter
dec
nop
addl
jmp
pushf
sbb
mov
outsl
and
jbe
and
pop
sub
je
sbb
je
std
decl
nop
sti
test
cmc
sbb
jnp
sub
cmp
mov
ficoms
fldenv
mov
inc
adc
sti
jge
adc
sbb
sbb
dec
idiv
aad
rcl
and
mov
mov
xlat
pop
inc
jl
pop
mov
jb
mov
sub
cmpsl
or
nop
push
gs
in
xchg
push
pop
lret
cmp
push
subl
gs
mov
lods
pop
lods
pop
movsl
mov
das
and
cmp
xchg
dec
adc
pop
jno
into
movsl
das
in
mov
popf
or
into
dec
jno
inc
ds
adc
dec
dec
mov
mov
xchg
push
pop
fwait
pop
and
lahf
inc
cmpsl
jl
insb
adc
repnz
pop
sbb
add
rclb
imul
ret
jb
out
mov
setno
jmp
outsl
adc
jmp
stc
or
inc
fistl
pusha
mov
lret
cmp
ficoml
xor
adc
mov
mov
add
lret
insl
lcall
add
loopne
pop
pop
dec
push
mov
sub
jge
xchg
mov
jb
pop
sub
xchg
sub
outsb
cmp
cmp
sbb
test
mov
push
into
push
xchg
xchg
cltd
fs
into
ret
popa
adcb
jmp
sub
cmp
int
lahf
ret
cmpsb
faddl
lcall
dec
xchg
cltd
divb
fstp
push
pushf
lahf
push
cmp
arpl
jg
aam
gs
inc
stc
push
or
and
in
xchg
adc
aad
sub
push
dec
lds
mov
and
mov
add
sub
jbe
fwait
sbb
push
xchg
lods
sbbb
inc
pop
xor
jbe
das
cmp
js
push
pop
testb
out
test
sub
cltd
test
mov
in
adc
repz
mov
xchg
cmp
lcall
fisubrl
and
sbb
or
fld
push
push
jecxz
imul
dec
xchg
in
xor
ret
mov
cwtl
and
arpl
jg
inc
rcrl
cmp
std
mov
mov
mov
fadd
pop
jnp
out
sub
push
inc
nop
sub
test
jecxz
leave
mov
aas
xchg
es
inc
movsb
mov
adc
lods
push
sbb
lahf
sbb
mov
out
jmp
in
inc
sbb
mov
cwtl
cmp
cmp
rcrb
jbe
mov
mov
mov
cmp
out
sub
idivl
pop
es
pop
xchg
sbb
dec
lret
push
ret
add
popl
out
sarl
scas
out
das
or
dec
lret
popf
icebp
bound
xchg
lret
ficoms
int
pop
sub
pop
lahf
loopne
popf
addr16
push
je
fcompl
or
out
pop
aam
fucom
push
insl
xchg
mov
out
or
lret
aam
leave
xor
add
add
in
outsb
les
repnz
bnd
push
xor
insl
or
fmul
lods
sub
add
cmp
mov
mov
jb
mov
or
sub
daa
xlat
mov
insb
out
jno
repz
in
mov
jmp
adc
addb
leave
push
sbb
mov
pop
bound
sbb
jg
push
mov
repnz
rolb
dec
aam
push
xchg
into
test
dec
pop
insl
inc
arpl
jae
mov
addr16
lret
int3
pop
arpl
and
ret
jl
mov
ja
sbb
jp
stc
out
jg
mov
fwait
lock
movsb
cmp
push
mov
jae
popa
or
rclb
ljmp
sbb
add
add
cli
push
hlt
arpl
jno
enter
fucomi
icebp
icebp
and
outsl
call
test
inc
lds
push
imul
or
mov
test
sbb
mov
addl
jecxz
out
shl
sub
pushf
arpl
rcrb
cmp
ljmp
pop
sub
cwtl
daa
sub
mov
and
push
xlat
jb
loope
mov
dec
or
outsb
ret
pop
jae
add
mov
pushf
cwtl
and
pop
fists
mov
dec
scas
sbb
fsubp
mov
mov
cmpl
cmpsb
cmp
daa
outsl
aaa
mov
ja
jl
cmpsb
push
sub
sbb
add
arpl
ret
addr16
pop
notl
xor
adc
jecxz
inc
pushf
cmp
xor
lds
iret
and
push
jl
pop
cmpb
leave
xchg
in
daa
sbb
push
leave
dec
insl
stos
lods
adc
sub
sbb
in
arpl
push
movsl
jecxz
add
mov
jmp
ret
loop
pop
push
js
xor
les
stc
xchg
imul
pop
out
mov
orl
add
les
xor
mov
mov
int3
inc
mov
mov
jno
mov
jns
inc
outsb
sarl
ficoms
jae
roll
jp
mov
addb
add
jnp
add
inc
pusha
xchg
mov
push
jge
xor
sbb
cmc
jno
das
flds
insb
hlt
lret
jb
imul
inc
test
adc
hlt
call
inc
aam
mov
or
lret
mov
adc
setae
and
std
es
dec
stc
test
cmpsb
jb
int3
mov
xchg
sbb
jge
iret
mov
mov
sub
jg
xor
out
sbb
iret
push
or
push
data16
inc
lahf
mov
out
xchg
inc
rolb
pop
mov
add
notl
aas
pop
imul
test
cmpsl
cli
or
xor
push
into
and
jle
sub
xor
sub
repnz
in
dec
dec
fsub
repz
pop
add
pop
sbb
lods
call
xchg
bound
push
inc
cmpsb
dec
out
jnp
adc
mov
xlat
enter
scas
ss
ret
cltd
pop
fsubrs
out
and
xchg
or
mov
notb
xor
mov
fstps
push
pop
rcrl
push
fsub
inc
ss
pop
lret
fucomip
mov
cltd
hlt
fs
sbb
jp
es
jge
push
sbb
int3
xchg
pop
mov
inc
orl
or
mov
xchg
sbb
icebp
mov
mov
mov
dec
mov
sbb
inc
mov
cmp
and
inc
test
pop
push
jne
fildll
enter
sahf
outsl
imul
sub
fs
daa
aam
popa
sbb
sar
je
mov
repnz
cmp
pop
out
lods
adc
or
ds
jg
lahf
sub
mov
rcrb
repz
fstps
pushf
enter
lret
cmp
mulb
int3
mov
in
les
and
push
add
xchg
sub
insb
leave
mov
lods
cmp
inc
ss
sbb
jns
sbb
lock
mov
js
jmp
cwtl
sti
adc
popa
jg
cmp
jno
popf
es
mov
loopne
loop
pop
jno
repz
into
cld
push
ja
in
lds
jne
add
stos
incl
lock
add
push
in
xchg
push
inc
sbb
idiv
jge
dec
or
int3
rorb
das
mov
sbb
mov
push
lret
stc
fcoms
mov
jl
adc
xor
adc
imul
mov
or
lcall
xchg
inc
xor
in
lods
jae
lock
mov
test
gs
cvtpi2ps
mov
pop
sub
inc
out
xchg
inc
dec
cwtl
out
sbb
mov
pop
fbld
mov
loop
add
ret
sbb
loopne
mov
cmp
xchg
sbb
in
stc
push
aas
scas
enter
push
adc
fcoml
das
sarb
scas
mov
jo
dec
lods
push
loopne
enter
unpcklps
mov
mov
out
pop
pop
push
aas
das
fistps
sub
jae
and
or
cmc
add
mov
stos
sub
add
inc
and
in
xchg
adc
jo
lcall
jp
inc
pop
ss
xchg
xlat
cld
or
push
shrb
pop
fistpl
and
int3
sub
in
and
outsl
push
dec
in
mov
pushf
add
lahf
sbb
jns
out
and
cmp
or
fistps
lret
gs
mov
cltd
jne
loope
popa
push
and
adc
cld
add
push
mov
push
jb
pusha
lods
movsl
out
jns
cli
hlt
inc
adc
push
fnsave
rclw
jno
adc
push
sbb
cmp
ret
loopne
adc
iret
pop
cli
out
xchg
les
mov
int3
lods
cs
in
cmpsb
jle
nop
mov
jo
mov
cltd
xchg
pop
and
dec
xchg
and
xorb
movaps
adc
xlat
outsb
and
pop
pop
mov
jmp
push
lods
or
xchg
xor
test
or
dec
iret
jno
mov
push
xchg
lods
cmp
aad
push
jmp
pop
mov
sub
xor
and
xchg
scas
or
les
mov
xlat
add
mov
stos
dec
jbe
ljmp
cmp
roll
or
nop
out
mov
xor
jg
xor
sub
or
scas
add
jmp
lret
jne
fists
lret
lcall
pop
and
jne
rcr
es
mov
lea
popf
add
inc
cmp
scas
push
cmp
lea
data16
ret
mov
gs
inc
dec
repnz
sbb
mov
pop
sbb
rcr
cmc
popa
push
je
xor
fs
push
bound
ljmp
xchg
insl
xchg
xchg
mov
jne
dec
jns
test
or
rorl
fnstcw
aaa
mov
repnz
dec
xor
test
cmpsl
adc
in
gs
out
mov
xchg
sbb
ds
xchg
adc
inc
inc
dec
pop
and
cmpsb
sub
out
fists
mov
sbb
fwait
out
into
jmp
mov
mov
imul
incl
gs
sub
jmp
mov
fisubs
sub
mov
aaa
clc
enter
out
inc
sub
repz
in
scas
out
adc
sahf
push
jecxz
and
sub
add
sub
inc
and
sub
pop
shll
fcompl
adc
lret
and
sbb
xor
xlat
and
imul
or
dec
and
sarb
mov
mov
pusha
add
sbbb
jo
int
mov
into
cltd
xor
rcrl
clc
into
lret
jbe
mov
xchg
sub
leave
pop
mov
inc
xor
sbb
inc
sarb
je
sub
xchg
xchg
popf
ja
adc
push
mov
enter
out
hlt
cltd
test
and
mov
jns
xor
adc
ret
insb
mov
int3
cltd
sub
sahf
out
jge
push
jae
iret
out
gs
aam
dec
pop
xchg
insb
out
pop
insb
push
bound
cmp
popf
inc
test
add
icebp
dec
lcall
sub
xchg
std
push
dec
mov
pop
imul
xor
loop
sub
xchg
mov
enter
out
subb
cmp
pop
pop
test
imul
fisttpll
xchg
je
test
vmovupd
pushf
sub
push
sub
lods
fcompl
xor
push
sbb
xor
pop
popf
xchg
ret
das
lods
inc
sti
mov
jnp
dec
pushf
clc
or
sbb
fs
repnz
or
stos
out
xchg
cmp
jbe
xchg
inc
insl
fimull
pop
add
dec
inc
mov
movsl
xor
out
or
sub
dec
enter
lea
sbb
sub
shlb
inc
push
dec
mov
sub
cld
xchg
int
inc
aam
xchg
jbe
xchg
sub
inc
or
imull
xor
cmp
loope
add
add
add
punpckhwd
mov
dec
test
gs
jne
nop
dec
add
mov
cld
mov
lret
jno
daa
dec
mov
js
push
mov
adc
push
sbb
xor
and
sbb
cmpl
pop
nop
std
imull
call
in
imul
xchg
orb
fstpl
loope
testb
iret
cs
rclb
lcall
pop
lret
push
xchg
push
out
dec
cli
pop
mov
rcl
sahf
cmp
roll
mov
dec
or
mov
lahf
mov
sub
lcall
jns
pop
jmp
pop
clc
cld
negb
mov
sbb
stc
lea
add
ret
pusha
iret
push
imul
sbb
cmp
int3
popl
pop
fdivrl
cld
ljmp
and
in
movsb
cltd
adc
xor
xchg
int
lret
mov
ret
sub
fcmove
dec
push
dec
pop
dec
adc
cmp
adc
mov
push
dec
xchg
fcoms
mov
daa
rorl
bound
test
pushf
enter
lock
fidivrl
addr16
xchg
xor
ds
fdiv
mov
stc
pop
scas
stc
cmpsl
dec
repz
mov
dec
mov
lret
pop
popf
adc
adc
push
addl
fldenv
lods
push
sub
insb
insl
in
test
and
adc
mov
pop
test
iret
data16
mov
dec
push
xlat
cs
and
xlat
jmp
adc
xchg
and
add
push
gs
loop
or
and
leave
out
js
stos
fs
lea
rorb
addl
push
ss
sti
push
push
leave
sbb
pop
fistps
jp
sbb
divb
sbb
stos
leave
jecxz
xor
nop
dec
cli
push
push
mov
aaa
rcrb
xlat
pop
out
sub
xor
mov
cwtl
cli
jmp
dec
inc
pop
mov
imull
pop
mov
das
dec
fldz
mov
sbb
div
mov
insl
mov
dec
sahf
add
test
and
or
mov
and
lods
mov
aas
sub
xchg
arpl
cltd
fsubrl
stos
inc
enter
pop
jp
sbb
sbb
shll
mov
cmp
mov
loope
jae
sti
inc
inc
jl
inc
out
sarb
lea
mov
mov
in
jno
sbb
xchg
lcall
xchg
inc
pop
inc
xchg
fldcw
push
aam
iret
fsubp
xor
xor
lea
fisttpll
pop
mov
stc
dec
pusha
mov
iret
mov
in
or
inc
cltd
cmp
repnz
pushf
das
dec
dec
ret
jno
xchg
repnz
icebp
xchg
or
fdivr
inc
aad
cmp
test
push
outsb
pusha
pop
mull
sub
push
xor
ret
addr16
mov
cmp
sti
in
add
push
dec
add
rep
repz
jbe
fildl
inc
adc
fcoms
sub
push
pop
cmp
lahf
gs
into
sahf
sub
adc
sbb
cmp
pop
xchg
rorl
ja
dec
pop
out
lods
push
cmpl
testb
out
loopne
fdivl
nop
mov
sub
jae
fadd
cmc
pop
push
lcall
or
vmovaps
pusha
push
movsb
push
adc
test
xlat
push
or
cwtl
pop
popa
cmc
mov
es
andl
and
xlat
push
fldcw
pop
and
mov
test
decb
cmp
fbstp
xor
popf
mov
mov
xchg
push
mov
jne
idivl
jmp
pushf
movsl
clc
sub
fcomps
test
cwtl
pop
xor
xor
and
out
sbb
cmpsb
cmp
push
push
jle
jno
fistpll
inc
adc
mov
xchg
xchg
adc
shrb
add
daa
out
push
push
nop
hlt
add
mov
cwtl
enter
jle
dec
loope
dec
aas
sti
lock
xor
xor
mov
and
xchg
adc
leave
test
add
bound
test
mov
aas
ljmp
daa
roll
in
adc
ret
pop
stos
leave
dec
js
mov
stc
int
or
mov
sub
pop
mov
jle
ss
jmp
mov
into
nop
nop
shll
ja
sub
xlat
test
jae
andb
cmp
xchg
mov
push
add
pop
aaa
in
push
repnz
insl
outsl
fldcw
cld
xchg
adc
shlb
imul
sub
ret
sahf
xor
mov
mov
jle
rcr
add
jbe
push
mov
xchg
pop
lea
out
mov
jno
rorl
aas
xor
pop
xchg
test
sarl
mov
push
adc
jge
cmp
mov
sbb
ljmp
pop
mov
cmp
mov
loopne
jb
dec
inc
xor
lods
mov
xor
mov
pop
add
imul
sbb
pop
dec
jns
loope
mov
lock
adc
imul
mov
in
ret
push
clc
cmp
cmc
pop
mov
dec
into
test
push
roll
rol
xor
cld
jmp
xchg
or
xor
inc
ret
int3
sub
push
ret
sbb
fnsave
aam
rcll
xor
xor
cmp
add
xchg
imul
ljmp
add
enter
cmpb
ss
jne
mov
ficomps
mov
sbb
scas
addr16
js
fwait
stos
inc
out
sbb
ret
lret
pop
ret
out
pop
push
jbe
adc
pop
xor
sbb
push
cltd
rclb
iret
xchg
aam
imul
mov
hlt
mov
sub
cmpsb
outsb
rcl
bound
and
scas
ljmp
sbb
pop
push
dec
popf
mov
popa
test
mov
insl
pop
mov
in
call
das
ljmp
aas
push
lock
test
sahf
movsl
lcall
imul
cwtl
shrb
xchg
out
jmp
mov
mov
push
subl
dec
ss
push
scas
orl
bound
dec
nop
push
ret
call
sbb
inc
dec
les
sbb
fldl
fistpll
cltd
mov
cmpsl
xor
cmp
and
pop
js
dec
shl
and
jmp
lcall
or
imul
fsubs
xor
loop
sub
out
call
push
icebp
xor
cmpsl
lret
mov
pop
pop
int3
push
cwtl
loope
test
cs
ret
fmull
adc
rcr
btc
leave
dec
enter
jp
repz
sbb
cmp
sub
movsb
xchg
aaa
xchg
sahf
add
mov
imul
testb
mov
sahf
push
int
mov
loopne
nop
mov
mov
xchg
or
pop
sbb
into
mov
add
mov
inc
xchg
std
jb
jmp
push
pop
jg
dec
cmpsb
fsubl
insb
sbb
xor
xor
test
shrb
adcl
pop
xchg
xchg
fcompl
inc
mov
loope
loop
enter
xchg
loopne
jle
popf
test
out
xor
imul
jne
mov
mov
push
mov
inc
in
imul
faddl
jg
lret
pop
not
dec
xor
ds
fisubs
mov
aam
or
nop
cmpsb
mov
ret
mov
repnz
xchg
scas
data16
popa
call
clc
push
ja
push
adc
mov
into
mov
push
sbb
pop
cmp
mov
fwait
or
in
add
add
lret
jmp
cld
dec
mov
mov
xor
adc
or
jne
movsb
lds
xchg
mov
movsl
or
out
arpl
js
jno
imul
jmp
mov
fnstenv
sbb
push
inc
adc
dec
push
enter
push
es
int3
pusha
mov
pop
sbb
out
ds
mov
xchg
sbb
cli
call
sub
add
loop
aam
mov
cwtl
adc
adc
es
popf
adc
jle
or
mov
or
sbb
cli
gs
and
out
mov
insl
mov
data16
adcl
jae
js
push
push
mov
jp
in
lea
lods
fmul
jae
in
jmp
divl
pop
sub
lock
jmp
dec
and
icebp
adc
scas
push
pop
mov
xor
movsl
jb
and
popf
out
ret
pop
test
xor
pop
lret
std
mov
push
or
or
xor
jge
scas
daa
push
enter
cli
mov
imul
jns
add
add
jg
mov
and
adc
inc
cmp
mov
std
insb
mov
bound
data16
test
insl
jnp
sahf
stc
fstps
pop
mov
mov
and
inc
test
dec
test
push
push
rcl
pushw
xchg
or
adc
mov
cmp
lods
cmc
and
ljmp
scas
popf
out
call
lods
inc
fdivl
je
imul
vpmacsdd
and
scas
loope
insb
xor
push
stos
push
dec
xchg
mulb
push
sbb
fistps
jno
lods
lcall
rclb
dec
pop
inc
std
cmpsl
pop
mov
out
iret
test
imul
dec
fdivrs
push
push
sub
ljmp
jmp
push
cmp
mov
pop
stos
lds
push
or
jae
dec
testl
enter
or
cld
nop
lret
fmull
mov
hlt
mov
push
mov
repz
inc
sbb
lret
cwtl
aas
or
add
inc
sbb
cmpsb
push
lret
enter
push
mov
cmp
cmp
hlt
mov
push
fisubl
lcall
adc
mov
mov
repnz
sar
fwait
insb
sbb
scas
jnp
pop
int3
andb
mov
imul
pop
loopne
sub
pop
das
fwait
cmpsb
ja
jmp
and
into
cltd
popa
push
and
mov
ja
ljmp
dec
xor
xor
stc
adc
lahf
dec
jg
es
fwait
pop
sub
bound
and
in
dec
jmp
push
sbb
ljmp
dec
inc
fcmovnb
cmp
repnz
sub
push
mov
scas
cmpb
push
gs
imul
xor
shll
bound
mov
mov
pop
mov
cmp
sbb
int
mov
adc
jne
adc
mov
mov
cmp
test
inc
inc
mov
popf
sar
nop
mov
rorl
cld
lret
add
add
sub
pop
cmpsl
stos
jmp
outsl
jno
mov
xor
shll
xchg
je
enter
jae
xlat
push
std
dec
leave
aaa
sti
sub
sbb
sbb
hlt
movsl
lret
ficompl
cmp
imul
jmp
jmp
sub
test
add
xor
dec
sub
shrl
js
in
fsubs
push
cmp
in
xchg
leave
shrb
repnz
lods
mov
shll
and
lods
sub
jo
push
inc
xor
dec
stc
push
inc
jmp
mov
gs
push
push
pop
or
testl
adc
aam
mov
jp
cmp
adc
add
jl
rcrb
fwait
mov
add
mov
std
mov
aaa
mov
leave
inc
call
jns
mov
jge
inc
jbe
and
out
push
add
jmp
mov
or
jecxz
jbe
lret
movsb
pop
in
imul
jp
jle
std
enter
leave
cmp
or
cmp
pop
icebp
push
js
pslld
shll
mov
ds
sbb
fisttps
cmpsl
scas
sub
div
mov
mov
cmp
mov
lret
repz
cmp
call
lcall
fdivrl
andb
dec
cmp
lods
dec
fstpt
mov
push
idivb
xchg
inc
mov
push
push
jmp
testl
jbe
dec
repnz
aad
repnz
or
imul
test
shll
inc
xor
pop
int
movl
cli
push
mov
mov
or
test
das
fiaddl
decl
pop
add
out
in
test
movsl
aaa
push
dec
sbb
mov
push
jo
dec
adc
shlb
mov
or
add
or
notb
lods
enter
aas
adc
bound
in
jo
xchg
mov
dec
mov
sub
cmpsl
inc
pop
test
movl
icebp
pusha
shrb
cli
cmp
inc
cli
jns
adc
out
mov
dec
fisubl
jae
mov
fsubr
xchg
mov
xchg
adc
dec
nop
inc
jno
mov
xchg
insb
mov
push
xchg
jmp
iret
aaa
jge
fwait
push
cmp
push
inc
mov
mov
std
pop
jp
or
call
add
xchg
popa
subl
lods
jl
cmp
lods
xor
jb
fwait
out
inc
pop
adc
mov
lret
int3
insb
imul
into
ret
testb
and
cmp
aad
and
and
jg
mov
mov
pushf
ljmp
pop
sub
outsb
mov
jbe
add
divb
movsl
or
mov
xor
dec
cmp
lods
fwait
lret
pop
cmp
lret
push
xchg
pusha
or
pop
cmp
push
shl
ds
pop
inc
sub
bswap
or
or
pop
in
cmc
cmovne
inc
mull
cli
sarl
xchg
std
pop
faddl
xlat
insl
dec
dec
lea
std
inc
push
push
dec
out
stc
stc
adc
or
in
scas
fsts
aas
fisubrs
lods
bound
mov
mov
mov
lods
xchg
lahf
enter
push
and
jg
test
hlt
popa
or
xor
sbb
aad
ds
aad
ljmp
mov
scas
insl
sbb
xlat
scas
jecxz
or
inc
lods
mov
cmp
cmc
shll
mov
mov
sub
scas
test
mov
fdivr
pop
outsl
jns
mov
arpl
inc
push
cwtl
sub
lcall
inc
icebp
lds
rolb
lret
mov
test
push
cwtl
xchg
push
xor
or
push
scas
dec
pushf
add
out
xchg
jge
add
jp
jp
inc
loopne
repz
or
scas
push
sbb
fmuls
dec
incl
leave
arpl
fwait
or
inc
icebp
xchg
fsubs
and
mov
pushf
in
aas
mov
cmc
xchg
sbb
add
mov
hlt
cmp
dec
test
jae
xor
pop
adc
outsb
cmp
xchg
mov
mov
adc
fwait
lock
loope
ds
jbe
hlt
jmp
loop
push
jns
jp
cltd
sahf
iret
xor
js
sub
xlat
leave
mov
iret
imul
repnz
imul
rolb
sarl
fs
dec
xchg
cmp
adc
cmc
adc
mov
push
and
sub
mov
addr16
bound
int
dec
mov
jge
ds
ljmp
sahf
into
dec
dec
test
cs
dec
push
repz
aaa
rcrl
stos
stos
pop
fwait
adc
cmpb
mov
jp,pn
sub
fildll
in
jecxz
sub
lcall
sbb
fidivrs
ja
xchg
jl
movsb
xchg
push
call
jg
inc
dec
xor
mov
and
add
push
cmp
mov
mov
pop
ret
dec
popf
pop
jns
mov
jns
scas
adc
scas
add
jbe
mov
xchg
out
add
or
and
lods
mov
pop
add
jae
lds
notb
es
jmp
mov
imul
cli
insb
push
cmp
dec
xchg
xor
xor
cli
adc
shl
mov
orl
pop
lds
stc
or
cwtl
mov
arpl
cmp
lret
sahf
push
pop
test
pop
ds
dec
sub
jp
xchg
adc
in
sbb
clc
xor
mov
mov
and
inc
loop
xor
pop
and
loopne
pop
mov
mov
rcll
int
adc
inc
cli
jo
cmpl
outsb
shl
jno
test
push
mov
sbb
shrb
inc
mov
repnz
push
scas
cmp
dec
push
test
popf
gs
mov
lret
push
sub
pop
jg
mov
mov
dec
pop
or
insl
pusha
push
scas
or
jne
cmp
movsb
mov
stos
and
mov
loope
xchg
mov
loopne
dec
lods
mov
aaa
in
sbb
add
add
mov
out
xchg
aam
dec
mov
xlat
inc
js
cld
jae
sub
cmp
mov
and
xchg
adc
sbb
repnz
inc
push
cltd
shrl
push
xor
push
out
xchg
pop
pushf
fmul
bound
or
cltd
or
daa
xchg
push
jp
lcall
out
pop
sbb
stos
mov
stos
aad
rcr
lea
lods
repnz
mov
mov
lock
sbb
js
mov
int3
dec
movsb
adc
orl
aad
sub
ret
and
xchg
repnz
mov
cmp
stos
out
call
andl
inc
mov
xor
xchg
stos
or
fwait
adc
addl
ja
mov
cld
mov
andl
inc
leave
fstpt
bound
and
sbb
lcall
mov
roll
lahf
sub
std
cmp
inc
nop
add
dec
mov
sahf
repz
add
fisttpl
mov
ret
lret
xor
xor
out
sahf
jnp
and
int
ds
mov
outsb
int3
fstpl
dec
lcall
lock
push
or
in
sbb
cmp
out
or
ljmp
inc
ja
inc
and
pop
in
push
cmp
xchg
push
and
pop
stos
cwtl
fdivl
les
pop
mov
lock
mov
push
adc
imul
imul
lret
aas
adc
ret
pop
fs
aas
mov
pusha
lahf
ret
stc
mov
push
add
in
stc
mov
fldenv
inc
or
in
shll
push
insl
xchg
dec
push
jno
cwtl
fldt
icebp
cs
mov
lock
leave
test
ret
mov
adc
repz
mov
std
pop
and
pushf
int
adc
adc
sbb
int
add
mov
xchg
jl
mov
add
sub
sub
fdivs
and
cmpsl
pop
and
aam
dec
sub
mov
iret
mov
rcll
shll
in
subl
adc
sbb
into
mov
xor
repz
cmp
pop
testb
subb
xchg
fidivrl
insl
sbb
and
fcom
xlat
rclb
clc
jns
test
outsb
cmp
add
pop
mov
bound
cli
dec
mov
add
mov
shr
push
pop
mov
into
and
cmc
push
mov
divb
pop
cmpl
dec
mov
and
dec
sbb
sbb
rorl
mov
iret
cli
mov
fcoml
sarl
adc
adc
sub
xchg
popa
add
sarb
ss
jle
aad
dec
and
dec
imul
icebp
mov
sub
outsb
test
lods
inc
inc
cmp
mov
xor
repnz
outsl
jo
fwait
mov
push
pop
push
mov
in
pop
movsl
xor
loope
in
lret
inc
arpl
enter
inc
fwait
pop
mov
outsb
push
jge
jne
popa
inc
add
xchg
enter
pusha
lcall
inc
aad
xchg
xchg
sbb
jne
popf
pop
ss
push
mov
lock
or
xor
and
cwtl
cmp
mov
jp
imul
in
xchg
push
sub
stos
scas
ret
and
push
jo
dec
push
shl
imul
dec
movsl
in
sbb
or
jecxz
in
inc
add
dec
cmp
fs
mov
in
out
pop
xchg
dec
and
xor
pop
xchg
gs
mov
xor
dec
inc
sbb
inc
dec
and
sbb
aam
mov
in
mov
xchg
pushl
or
bound
mov
andb
dec
add
or
xlat
aas
add
inc
mov
subb
xor
ss
mov
roll
adc
sub
ret
stos
shlb
fdivl
in
sbb
jg
dec
arpl
or
xor
push
xchg
sbbl
dec
mov
sub
fnstsw
cli
out
in
or
pop
pop
sbb
pop
out
mov
pop
dec
mov
inc
inc
mov
mov
pusha
or
imulb
mov
fsubl
sti
cs
jecxz
mov
das
pop
ljmp
lock
test
sbb
xor
mov
push
dec
test
add
mov
mov
push
push
xchg
out
and
dec
outsb
jge
push
dec
cmpsb
lcall
or
push
cmpsl
or
in
shrl
lods
sub
out
jbe
dec
sbb
rcll
jnp
mov
pop
jns
das
sbb
or
shll
imul
nop
and
daa
shr
pop
xor
lahf
add
mov
dec
add
mov
fidivrs
push
lahf
mov
les
xchg
in
movsl
mov
jnp
and
pop
mov
push
rolb
aas
lods
es
adc
ss
pop
int
add
pop
jg
push
es
pop
rcr
dec
cmp
lret
mov
fsubrl
ja
sbb
sub
jae
scas
or
sarl
lret
or
fisubrl
mov
scas
mov
mov
repz
out
js
pop
insb
insb
mov
call
sub
ss
or
cmp
inc
call
push
dec
xchg
aam
xor
mov
cld
push
fucomi
xchg
inc
mov
mov
sbb
push
cmovp
sti
inc
inc
and
popa
sub
lahf
test
sub
test
push
ljmp
sbb
push
xor
shld
adc
loopne
sbb
out
or
movsb
dec
cwtl
or
hlt
sub
pcmpgtd
jmp
xchg
call
add
data16
js
cmp
outsl
pop
pminub
sub
cld
pop
and
fwait
sub
jmp
hlt
xor
js
stos
adc
int
ret
sbb
push
cmp
pop
sbb
mov
nop
add
add
inc
xor
out
cmp
je
test
or
stos
sbb
jno
out
or
xor
in
or
mov
or
subb
call
mov
xchg
loopne
pop
insl
in
push
add
lock
hlt
ss
insb
mov
bound
les
in
out
cwtl
mov
inc
aaa
sarb
rcr
in
mov
sub
stos
xchg
popf
bound
lods
testl
stc
and
int
jnp
pop
inc
adc
lahf
popf
mov
dec
out
pop
or
hlt
stos
out
sub
adc
f2xm1
jge
adc
pop
into
dec
sahf
mov
and
push
call
sbb
repnz
jo
std
bound
pop
push
into
mov
adc
cmc
je
test
mov
stos
xor
cwtl
cmp
in
addr16
xchg
mov
mov
in
scas
cmp
jbe
int3
sarl
es
filds
cld
add
repnz
test
arpl
pop
rclb
jb
ret
dec
int
dec
in
enter
fcompl
xor
das
sbb
test
out
rclb
sbb
jb
out
cmp
js
daa
call
cmp
fsubrl
pop
in
adcl
out
lods
push
xor
jb
imul
xchg
or
lods
xor
and
call
addb
and
negb
push
dec
pop
lahf
stos
jno
roll
out
daa
imulb
shlb
dec
and
xchg
shlb
xor
pop
les
push
fwait
les
or
add
das
dec
cld
sub
sbb
sbb
cmp
sub
pushf
xchg
std
push
in
popf
pop
popa
sub
xchg
xor
push
aas
in
andl
cmp
jnp
sbbb
and
arpl
dec
movsl
bound
adc
sub
cld
nop
fidivrl
jae
xor
mov
arpl
cld
dec
cmc
push
push
test
rcrb
cmc
dec
cmp
test
jne
jp
movsb
mov
mov
cmp
cmp
lds
mov
shll
mov
enter
cmp
enter
mov
push
xlat
mov
xor
mov
in
adc
add
jns
fsts
lret
add
cmp
inc
pop
xchg
mov
cltd
pop
cmp
sarl
add
stc
iret
test
or
mov
leave
sub
jbe
xchg
push
into
jecxz
rclb
dec
or
loop
mov
fstpl
aaa
aaa
cltd
lock
lods
idiv
ja
mov
mov
cltd
lods
dec
adc
or
testl
adc
xor
fbld
and
mov
sub
xchg
arpl
mov
out
rcrb
subb
sbb
mov
fisttpll
xor
shll
xor
insl
xchg
divb
pusha
pop
cs
movsl
mov
pop
inc
lods
jno
adc
call
jp
sbb
push
push
dec
push
xchg
add
roll
insb
std
xchg
pop
out
int
dec
pop
sarl
and
mov
jl
lods
test
adc
xor
xchg
jmp
and
mov
divb
push
mov
test
orl
lret
out
inc
lock
jp
push
push
jno
lods
mov
out
into
imul
mov
js
jmp
loopne
jo
into
subb
mov
inc
ret
add
dec
stos
mov
test
dec
dec
and
mov
and
test
popa
mov
stc
fsubr
sub
jno
add
push
jg
lahf
or
push
or
sahf
stos
pop
xor
int
mov
mov
sub
or
lahf
xorb
mov
arpl
push
rorl
lock
push
xor
fmul
or
rorb
push
push
cmp
xchg
pushf
xchg
in
in
add
and
popa
inc
stos
mov
cmp
add
dec
xchg
push
out
mul
sbb
lods
loope
push
lret
repz
xchg
add
fs
dec
inc
test
mov
sbb
movsb
stc
daa
add
xor
stos
fmulp
push
sbb
cmp
stc
mov
inc
or
inc
add
mov
cltd
into
jne
inc
or
xlat
jmp
cmpsl
mov
adc
and
js
sbb
push
jle
add
mov
cmp
in
jmp
inc
xchg
mov
xchg
pushf
dec
cmp
rcrl
and
jb
sbb
loopne
in
ret
mov
call
lcall
fimuls
pop
pushf
dec
lahf
stc
in
mov
mov
idivb
mov
mov
and
mov
pop
in
test
rcl
and
xor
dec
andb
gs
jnp
in
sbb
push
mov
stos
fsubr
stos
sbb
xor
push
fs
ret
sti
mul
push
lret
das
repz
out
inc
add
pusha
xchg
and
shrb
pop
add
sub
add
push
adc
or
fdivs
in
push
popf
out
add
imul
roll
cmp
mov
pop
jno
sub
in
xchg
push
sub
std
rolb
add
ror
sbb
inc
push
and
adc
loopne
add
pop
out
cmp
sbb
pop
stc
adc
and
ret
mov
aad
sbb
repz
push
testb
mov
or
adc
push
cld
jne
jb
std
xchg
pop
mov
mov
imul
add
lods
inc
stos
vunpckhps
cwtl
adc
jmp
push
outsl
pop
dec
mov
cmp
push
out
repnz
sub
inc
xor
sbb
mov
pushf
outsb
shrl
icebp
test
cmpsb
lods
addr16
inc
data16
mov
mov
ds
out
cs
in
pop
mov
iret
ret
push
scas
sbbl
add
cmpsl
inc
iret
mov
aad
popf
xchg
mov
ss
sti
movsl
imul
push
mov
adc
out
add
mov
add
and
adc
loopne
push
cmp
mov
arpl
sub
adc
pop
ffreep
lcall
cmp
enter
lret
shr
gs
scas
in
clc
mov
lret
and
and
xor
mov
or
inc
pop
loop
ds
out
scas
js
push
dec
bound
push
inc
and
adc
push
jge
lahf
cmpb
pop
and
sub
ljmp
push
add
xor
sar
cli
mov
push
sbb
xlat
lahf
and
shlb
mov
lods
sbb
inc
sbb
xchg
mov
pop
pmulhuw
adc
mov
mov
add
imulb
xlat
push
xchg
nop
xchg
les
cltd
jno
inc
or
adc
roll
ds
jge
cltd
std
mov
xrelease
dec
sub
jnp
rcl
sbb
scas
pop
jns
test
divl
pop
add
popa
cmpsb
lcall
movsl
inc
mov
adc
popa
test
scas
data16
into
insb
insb
in
push
pop
adc
adc
fcoml
mov
ljmp
mov
adc
lock
adcb
adc
add
int3
mov
sub
dec
aad
pop
mov
popa
mov
dec
push
repz
lea
cmp
jns
test
addl
rcrb
rorb
or
fldcw
fcmovbe
inc
jg
push
lcall
in
push
sbb
push
sbb
xor
add
or
xchg
cmp
je
test
inc
mov
adc
lcall
xchg
pop
lds
mov
cmp
cli
mov
out
add
jle
fistl
jbe
popa
xor
mov
loopne
mov
cmc
add
jge
mov
jno
rol
ret
clc
hlt
xchg
mov
push
jns
mov
cltd
add
ret
flds
das
jae
sub
mov
into
test
and
xor
sbb
dec
and
xor
cmp
lahf
push
add
xlat
in
adc
fcoms
push
adc
mov
push
call
repz
xchg
cmp
mov
in
push
loopne
bound
sub
call
pop
popa
cmp
push
mov
add
icebp
fldcw
cs
fld1
lods
shll
sbb
addl
xchg
pop
lock
mov
push
push
push
sbb
push
int3
push
aas
mov
inc
mov
sbb
sub
repz
jl
xor
stos
push
xchg
shll
jb
cmpb
cwtl
push
mov
mov
inc
aam
enter
jg
and
add
aad
rcrb
mov
xchg
mov
mov
and
sub
sub
aad
pop
imul
fwait
shl
stc
popa
fistpll
ret
repz
push
imul
rclb
sbb
stos
es
cmp
arpl
or
cltd
cwtl
in
jae
in
dec
and
adc
add
insl
or
pop
fldl
data16
loope
shrl
pop
inc
in
scas
push
lock
nop
cmp
cmpsl
int3
adcb
in
and
pop
pop
dec
xchg
mov
xor
jg
loope
add
inc
push
loope
fcomip
sahf
sub
out
loope
pop
arpl
icebp
cmpsb
sti
lods
enter
lds
push
rorl
add
mov
cmp
test
pop
lcall
pop
inc
add
pusha
cmp
dec
repnz
js
fcoms
adc
sbb
lret
or
inc
and
mov
insb
push
push
cmp
fdiv
pop
lcall
xor
push
sbb
jne
mov
push
subl
repnz
dec
das
lret
stos
mov
arpl
pop
ds
push
and
adc
in
or
mov
scas
pop
add
jp
test
insb
sbb
cmpsl
repz
mov
or
push
cmp
popf
cmp
test
stos
mov
jl,pt
ret
pop
cmp
pop
stos
jmp
pop
jmp
rcll
notb
es
push
imul
adc
mov
movsl
cmp
movsb
cmp
push
fdivs
pop
idivb
in
push
pop
jo
inc
out
pop
or
inc
mov
bound
mov
mov
je
dec
ds
jmp
dec
in
dec
imul
es
ds
insb
or
adc
int3
mov
mov
in
add
xor
adc
mov
fstpt
jp
loopne
pop
das
xorl
bound
mov
sbb
pop
jge
out
je
adc
mov
movsl
test
loop
test
vcvtsd2ss
les
lret
inc
stos
sub
aam
dec
xor
push
sbb
repnz
out
lods
and
sbb
mov
and
ror
loope
sub
int3
fdivs
and
les
mov
or
pop
xor
insl
sub
cs
mov
imul
subb
test
jnp
pop
xchg
je
pushf
adc
and
ret
or
mov
aad
fnstsw
outsb
xchg
pop
or
aaa
xchg
inc
jle
or
mov
dec
push
mov
sub
and
pushf
sbb
add
sub
pop
in
fsubrs
call
xor
jl
jns
mov
je
loope
adc
xor
mov
data16
mov
pop
dec
dec
das
sub
arpl
leave
xor
push
add
mov
sub
inc
sbb
lea
repnz
lods
outsl
push
loope
push
pop
lods
lock
fwait
insl
jmp
xchg
out
inc
jecxz
pop
hlt
hlt
repnz
push
std
stc
test
aad
pop
push
ret
dec
pop
mov
sahf
or
popa
push
xchg
test
add
mov
pop
inc
pop
stc
cltd
popf
clc
arpl
push
jns
or
call
mov
adc
and
pop
mov
cmp
sti
pusha
mov
sbb
add
sbb
lock
push
pop
ds
sub
xchg
adc
cmpsb
push
adc
and
xor
js
xchg
addr16
sbb
and
clc
clc
xor
wrmsr
outsl
cmp
ret
pop
sbb
pop
stc
aas
mov
jae
jge
ficompl
hlt
push
push
clc
fwait
inc
and
push
shl
push
mov
lock
push
mov
pop
or
js
lret
rcll
pop
stc
xor
sbb
push
adc
add
fisttps
mov
pusha
loopne
call
dec
xor
loopne
pop
aam
adc
inc
cmpsb
add
pop
xchg
shl
arpl
icebp
and
cmpsl
div
adc
cmovnp
fldenv
movsl
lock
push
iret
movsb
mov
mov
pop
out
sarl
sahf
adc
pop
xor
cmp
incl
mov
roll
and
addr16
jne
iret
mov
mov
notb
inc
arpl
mov
movsb
xchg
pop
sahf
out
in
pop
cmpsb
fiadds
lods
iret
sbb
outsb
push
cwtl
dec
jmp
clc
mov
stos
ljmp
xor
ljmp
mov
xchg
int
cmp
mov
adc
aas
xor
xor
ret
xor
bound
filds
xchg
shll
adc
int3
hlt
test
xlat
sub
push
and
and
jne
in
jns
ja,pn
ljmp
xor
inc
stos
ja
imul
imulb
pop
stos
push
fsubrs
push
aad
mov
sub
lods
dec
gs
mov
lds
ja
adc
imul
dec
insl
jae
pop
dec
or
loope
push
cld
xchg
adc
cwtl
pushf
std
sbb
daa
pop
mov
or
or
das
test
sub
adc
stos
imul
mov
loop
dec
cmpsb
rcrb
cmp
sbb
inc
sub
jb
das
imul
insb
in
outsb
movsb
int3
arpl
lods
jcxz
pop
hlt
es
push
and
shrl
aad
cltd
outsl
or
iret
jae
lahf
test
xorb
in
lds
xlat
pop
push
testl
test
pop
pop
shrb
lods
and
pop
shrl
adc
adc
in
push
fstpt
mov
popa
and
test
add
leave
shlb
sbb
mov
and
cmp
or
add
dec
lods
mov
f2xm1
aas
insl
adc
jp
mov
xor
repz
lret
lahf
push
xor
lock
ret
and
adc
sub
and
cli
fisubrs
rcrb
out
xchg
xor
inc
xor
cld
xchg
mov
icebp
sbb
es
adc
repnz
lret
push
cmp
jo
push
in
cli
out
lods
aas
cmp
loope
cmp
jbe
cmp
mov
ret
pop
lret
stos
pusha
mov
fsubrl
add
pop
and
rolb
sbb
lods
imul
aaa
xor
cmp
mov
pop
adc
fs
xor
xchg
stc
insb
ret
or
mov
rcll
icebp
and
dec
dec
jg,pn
pop
lods
cmp
mov
xor
and
gs
jg
pop
js
dec
int
xor
outsb
nop
call
push
in
jb
push
mov
pop
xchg
and
sbb
jne
mov
stos
inc
mov
hlt
jns
sbb
adc
mov
subl
ds
jg
lret
push
pop
push
imul
leave
mov
adc
sbb
push
outsb
adc
aad
lods
dec
es
fsin
out
scas
gs
inc
inc
lock
hlt
push
movsb
arpl
aad
jl
in
pop
fsubrs
insb
adc
mov
test
push
cmp
subb
out
rcrb
outsl
lret
or
cmp
mov
inc
and
dec
mov
xchg
aad
mov
fnstcw
or
push
cmp
xchg
sub
rolb
mov
shlb
aam
orb
stc
xchg
das
mov
pop
push
xor
xchg
loopne
cmp
insl
mov
adc
call
xchg
push
push
xchg
inc
fwait
neg
jnp
clc
lret
dec
push
xor
mov
popf
xchg
push
sbb
dec
mov
imul
pop
lods
push
es
pop
xor
or
add
mov
or
inc
fldenv
pop
fsubrl
inc
add
xchg
add
mov
cmc
sbb
stc
test
mov
jbe
pop
xchg
mov
or
add
clc
sahf
mov
scas
jmp
push
test
dec
stos
aas
lea
cmpsb
hlt
xchg
sbb
xchg
jge
xor
xor
xlat
filds
xchg
pop
lods
xchg
adc
and
sbb
jo
cmp
std
jns
test
mov
or
push
fmull
xchg
adc
jnp
push
sbb
inc
aas
mov
jl
mov
push
push
xchg
xor
inc
lods
or
xchg
loop
push
mov
femms
cmp
or
lahf
push
jecxz
mov
cmp
pop
xchg
xchg
sbb
lret
push
sub
icebp
adc
jbe
cwtl
pop
test
dec
decl
inc
and
inc
ror
inc
dec
or
mov
xchg
fsqrt
push
icebp
loop
insb
and
loopne
in
iretw
das
jbe
inc
lahf
jnp
jmp
cmpsl
aad
and
ds
pop
aad
sahf
pop
frstor
leave
pop
jp
cmp
mov
inc
xchg
push
and
shrb
insb
aad
repnz
cmp
test
xchg
hlt
dec
fsubrs
fdivrp
mov
jmp
mov
mov
mov
inc
sub
scas
adc
fsubrl
movl
scas
shlb
dec
in
and
dec
repz
insb
pop
pop
insl
imul
cld
lock
or
inc
das
mov
ds
lods
dec
or
sbb
xor
and
mov
dec
lahf
or
addl
mov
insl
jecxz
mov
cli
cmovns
push
xchg
daa
out
int3
fs
into
jg
les
jno
mull
mov
fcmovnbe
dec
mov
xchg
aas
popa
fcoms
fisubrs
cmp
mov
inc
jmp
xor
andl
jl
stc
push
inc
sub
outsb
add
mov
xor
enter
aam
orb
ss
mov
iret
mov
fwait
sbb
bound
jp
ljmp
repz
sbb
mov
add
loopne
and
xor
enter
addb
daa
das
test
hlt
cmc
arpl
pop
or
mov
pushf
pcmpgtw
mov
enter
mov
sub
lock
fistl
push
push
lahf
popa
push
daa
pusha
inc
mov
add
addb
aam
in
push
cmp
inc
push
stc
clc
xor
imul
pop
test
mov
jne
sbb
mov
dec
lahf
pop
xchg
pop
hlt
jnp
lahf
push
jo
popf
mov
out
push
xor
out
jmp
mov
jnp
int
lret
pushf
and
xor
clc
fsubrs
inc
push
lods
ja
out
gs
pop
inc
stos
xchg
mov
dec
cmp
and
mov
es
or
sahf
cmp
stos
or
cli
and
scas
scas
ja
add
orb
add
aas
mov
dec
inc
mov
pop
push
out
adc
roll
and
push
mov
divb
loopne
add
loope
dec
sub
xorb
test
movsb
mov
push
sub
mov
popf
inc
adc
push
lret
inc
push
mov
and
sbb
mov
dec
jg
out
icebp
xor
mov
pop
sub
imull
in
daa
dec
push
ret
cmp
pop
mov
mov
mov
cld
inc
cmpsb
rep
push
inc
cmpsl
xlat
dec
sbb
add
dec
push
mov
divl
mov
pusha
sub
mov
js
ficomps
add
iret
nop
mov
sub
inc
pop
aaa
shll
aam
jno
mov
dec
adc
push
adc
mov
test
addr16
dec
mov
out
fwait
push
out
mov
loop
jg
sbb
flds
int
in
jbe
cli
xor
mov
jg,pt
push
cmp
lock
add
mov
sbb
jmp
outsb
int3
outsl
inc
movsb
dec
sarl
push
cmc
mov
addr16
and
mov
aaa
test
incb
mov
fdivrl
mov
xchg
xchg
push
pop
daa
js
lock
jbe
rclb
adc
repz
pop
inc
xchg
mov
xchg
aas
mov
dec
mov
pop
pop
clc
jne
inc
nop
stos
je
push
lret
push
in
test
mov
xor
jnp
mov
rcrl
mov
scas
filds
xchg
dec
fstpt
gs
sbb
jmp
push
in
into
pusha
xchg
dec
dec
into
inc
jne
jno
inc
call
mov
fimuls
test
mov
mov
jnp
dec
push
aas
mov
mov
je
pusha
insb
jp
mov
push
mov
jns
mov
dec
aas
stos
in
leave
push
pop
out
fcoms
rcl
lahf
out
sub
inc
mov
insl
cmpsb
or
push
add
mov
addr16
ficompl
push
sti
lret
rcrl
add
out
pushf
lds
jo
movsb
jbe
sub
addr16
add
push
je
das
arpl
add
mov
addr16
insl
jb
jne
mov
mov
aas
xchg
adc
and
or
xchg
ja
lods
mov
inc
data16
adc
mov
aaa
push
pop
sbb
sbb
das
leave
inc
jne
test
in
mov
fucomi
jp
inc
add
addr16
mov
scas
inc
fisttpl
lods
arpl
lret
out
xchg
jnp
outsb
push
into
or
push
sahf
stos
lret
jo,pn
ret
scas
mov
and
fsubr
fneni(8087
aad
cmp
push
cmpsl
xlat
mov
aas
xchg
sub
fwait
inc
and
pushf
jle
js
in
push
sub
mov
cli
bound
sbb
ljmp
notl
inc
test
in
lock
xor
mov
mov
mov
inc
rolb
inc
daa
orb
cmp
cmc
inc
xor
fnsave
mov
bound
mov
push
push
mov
push
leave
repnz
fadds
mov
and
xchg
imul
push
and
and
test
mov
popf
cli
jne
outsb
mov
and
sbb
inc
jge
push
cmpsb
and
cmpsb
rorb
notl
mov
push
fwait
in
xchg
mov
push
push
mov
fs
lods
xchg
sbb
shll
rcr
pop
pop
popa
push
ds
push
into
scas
loope
stos
and
mov
addl
dec
xchg
xor
pop
mov
scas
ret
pop
pop
data16
adc
cltd
pop
xchg
add
mov
scas
sub
pop
dec
push
dec
inc
cmp
push
sub
adc
mov
testb
adcb
push
inc
mov
sbb
pop
scas
sbb
xor
das
shrb
xor
stos
stc
mov
frstor
fwait
subl
cmp
flds
js
mov
cltd
xlat
lds
mull
pop
fidivrl
mov
ds
outsb
out
inc
dec
xlat
sbb
test
jae
xorl
lea
jnp
lock
cmpsl
icebp
xor
je
and
movsb
sub
test
call
ja
and
xchg
je
push
sub
pop
inc
sub
cmc
pop
inc
jp
xchg
insl
mov
lods
xor
inc
out
mov
iret
or
inc
lea
push
sub
and
js
pop
and
mov
sbb
mov
icebp
lret
or
fwait
hlt
in
lret
movsb
les
icebp
mov
push
cmp
addb
jge
gs
pop
mov
mov
ret
shrb
mov
cmp
dec
mov
lods
xchg
aam
decb
sbb
mov
fst
sbb
incl
negl
mov
push
pop
stos
shll
jbe
sub
out
stc
mov
xor
jle
sub
lret
lock
lret
mov
imul
push
xchg
into
mov
sbb
or
jns
xlat
shrb
mov
repz
fidivs
and
outsl
xchg
arpl
dec
push
xchg
out
pop
and
scas
cld
push
and
pop
dec
hlt
rcr
cmpsl
aas
or
imul
js
cmp
mov
fisubrl
jne
cmp
fsubs
xchg
push
cwtl
dec
xchg
pop
jae
mov
mov
sub
in
fistps
lret
popf
jg
dec
lcall
inc
popf
call
add
mov
dec
adc
xchg
inc
in
and
out
or
push
push
dec
mov
int
out
ljmp
jl
adc
or
gs
lahf
mov
inc
test
ss
test
lods
xchg
cmpsl
mov
pop
out
decb
cwtl
pop
fwait
adc
dec
nop
xchg
xor
addl
mov
adc
bnd
adc
mov
jns
jns
jns
inc
sbb
lret
aad
adc
jg
cmp
mov
cld
xchg
f2xm1
icebp
loop,pt
cmpsb
ret
movsl
adc
imul
jbe
out
jecxz
xor
call
je
and
xchg
dec
and
mov
or
movsb
in
pop
xchg
popa
cmpl
dec
ja
xor
inc
push
jle
out
jle
and
ja
push
inc
ret
out
arpl
mov
stos
jno
sub
scas
inc
fiaddl
sub
or
mov
call
mov
shrb
push
and
test
mov
mov
das
cmp
shlb
mov
inc
in
repnz
pop
icebp
add
scas
and
pop
ret
call
lret
cmpsb
rolb
shlb
mov
adc
rcrb
and
sbb
lret
xchg
mov
mov
roll
push
loopne
inc
adc
cltd
iret
dec
adc
add
hlt
mov
pop
jnp
dec
push
test
fcmovnb
dec
xor
or
push
loope
cmp
dec
push
sbb
out
mov
int
aad
mov
mov
rorb
and
add
aad
xchg
mov
stos
pop
and
xchg
hlt
xchg
test
mov
mov
cmp
cmpsl
lods
or
add
pop
sbb
insb
ja
push
ret
push
xchg
pop
out
mov
cmc
mov
dec
mov
push
out
jnp
add
sbb
ret
sbb
inc
arpl
pop
inc
call
popf
ja
push
xchg
mov
or
xchg
pop
in
mov
xchg
das
jno
xor
cwtl
jl
aam
and
jg
rolb
jbe
bound
xchg
inc
clc
xchg
out
imul
lret
adc
insb
aad
add
jno
fmuls
add
cmp
loop
js
in
cmp
xor
fnstenv
ljmp
dec
test
mov
push
pop
and
ret
into
add
and
push
sub
iret
call
pop
and
ja
das
mov
mov
and
push
out
ss
push
pop
jae
pop
cmp
loope
xchg
mov
loop
add
mov
cmp
pmaxsw
inc
icebp
xchg
lock
adc
jo
in
add
or
mov
xchg
mov
test
fidivl
or
test
sub
sahf
lret
dec
loop
fdivrl
dec
int
pop
lods
push
in
test
cmp
test
sub
aam
or
xchg
fisubl
mov
jo
inc
jb
shlb
fnclex
mov
adc
sub
fstps
clc
sub
cmp
and
jae
mov
mov
into
dec
jns
xchg
loopne,pt
and
inc
jmp
test
repz
dec
push
mov
pop
lret
imul
test
test
das
push
push
sub
pop
adc
clc
pop
xchg
cmp
xchg
push
sbb
loop
imul
mov
push
cmp
xorl
scas
cmp
sub
inc
adc
adc
leave
fwait
inc
cmp
cmp
test
popf
push
add
int3
dec
push
in
push
mov
or
or
ds
loop
sub
movsl
aas
pop
push
rcrb
mov
pop
data16
add
sti
push
xchg
push
push
xchg
adc
arpl
sbb
out
out
test
mov
push
sarl
xorl
lahf
incb
call
xchg
out
gs
push
cmp
insl
and
mov
sub
daa
and
out
in
popf
test
cmpsl
fiadds
test
out
lcall
imul
pop
sbbb
jp
cwtl
and
sub
out
fucompp
lods
sahf
dec
pop
push
cmpsb
das
dec
outsl
and
in
roll
repz
mov
mov
cwtl
xchg
xchg
pop
xor
loope
lahf
mov
mov
stos
push
int3
or
in
pop
aaa
loope
sub
mov
or
cwtl
adc
mov
mov
mov
xor
jmp
arpl
sub
mov
sbb
push
sub
sahf
mov
jne
insl
leave
jne
add
dec
inc
test
cmp
and
ficoml
or
leave
ret
pusha
les
enter
xchg
cmp
insb
data16
pop
testb
push
test
ja
dec
cs
out
cmpsl
jecxz
jns
dec
mov
gs
sbbb
or
push
cltd
nop
cltd
popa
scas
shl
ficomps
jge
sub
imull
cmp
dec
stos
repnz
imul
jb
jle
outsl
repz
fldenv
xchg
xchg
dec
ret
xor
sub
fldcw
out
dec
sbb
in
movsb
xor
or
inc
dec
and
xchg
xor
mov
aas
mov
dec
or
dec
jl
mov
iret
xchg
mov
loope
cld
pop
and
cwtl
lods
cmp
cltd
pop
iret
jae
mov
rorb
ljmp
ja
in
jbe
ljmp
mov
aaa
mov
xor
sub
jl
push
mov
add
lea
xor
cmovp
xchg
clc
xchg
aam
adc
int3
out
mov
inc
sti
add
outsl
outsb
dec
push
adc
cmp
test
movsb
mov
dec
mov
imul
shrl
enter
push
in
fsts
add
mov
icebp
cmp
jg
mov
ljmp
into
xor
movsb
ss
jo
push
xor
jb
arpl
and
sbb
aam
cli
cli
out
jmp
mov
inc
inc
mov
and
fsubr
ret
push
jecxz
push
ret
rclb
dec
inc
mull
fwait
adcb
rorb
insl
movsb
or
pop
inc
dec
sbb
mov
pop
mov
pop
jae
es
push
mov
jno
js
rorl
and
pushf
cmp
push
mov
and
dec
je
add
aaa
cmpsb
stos
mov
adc
or
mov
cmpsl
sbbb
adc
lea
mov
lods
fsubp
xor
pop
and
filds
jp
repnz
pop
cltd
adc
das
mov
scas
and
jnp
sbb
stos
jl
stos
outsb
jl
in
data16
repnz
imul
jl
jno
or
xchg
cltd
lods
lods
or
pop
cmp
adc
dec
add
ret
and
in
add
repz
popf
push
mov
test
fucom
fisubrs
aaa
lcall
push
lock
in
push
ja
push
jmp
cltd
addl
cmp
jmp
nop
jle
push
mov
xchg
repnz
pop
das
stos
push
add
dec
cmpsb
pop
jle
fnstcw
lcall
das
pusha
jne
pop
hlt
pop
leave
aam
push
aaa
jbe
xor
and
in
test
ret
fimull
repnz
enter
pop
lods
aam
cmp
in
cli
out
xchg
mov
clc
xor
sbb
out
lods
xor
loope
and
pusha
into
dec
inc
mov
fwait
adc
loopne
push
icebp
adc
rolb
scas
inc
push
cwtl
mov
jecxz
rcll
in
xor
mov
sbb
fwait
das
in
xchg
loopne
sub
mov
mov
jl
ret
mov
jl
lcall
pop
mov
sub
cmp
sbb
mov
xchg
loop
cmp
mov
pop
jecxz
sarl
xor
push
std
cmp
inc
add
lahf
xchg
cld
inc
adc
inc
xor
movsl
cwtl
jge
cmp
or
popa
mov
or
outsl
pusha
iret
inc
adc
rcr
into
in
pop
daa
repnz
jne
iret
stos
mov
mov
add
jp
out
outsb
inc
test
out
mov
sbb
mov
ss
sahf
jg
sbb
jle
or
ja
in
movsl
sbb
call
mov
jmp
jmp
cmpsb
jg
dec
mov
loop
fistps
jbe
out
adc
mov
push
fsub
pop
mov
pop
xchg
out
aad
sbb
mov
jne
lea
mov
pop
sti
cmp
cmp
mov
and
mov
stos
xor
sbb
outsl
out
dec
out
pusha
rcr
ja
fwait
cltd
pop
scas
shlb
mov
sbb
adc
mov
mov
jns
lods
rcr
loope
dec
sbb
jae
dec
sub
outsl
shl
int3
loope
jnp
hlt
push
mov
push
in
jo
push
sahf
inc
inc
pop
mov
pop
xchg
push
mov
mov
xchg
pop
int3
loop
pop
dec
aaa
and
or
jno
inc
or
incl
rolb
into
xlat
ret
jne
xchg
xchg
mov
pop
pushf
dec
stc
push
pop
insl
imul
fstps
dec
adcl
push
insl
or
or
inc
sbb
sarb
out
movsb
add
icebp
xchg
add
xor
push
dec
dec
ror
xchg
repnz
scas
or
jns
hlt
mov
mov
clc
inc
scas
in
aaa
and
inc
mul
jo
sub
orb
xor
les
aaa
push
in
into
andb
mov
mov
ret
scas
xchg
jnp
orl
roll
insl
xorb
or
sub
aam
idivl
xchg
push
and
out
inc
ret
ljmp
mov
xor
pusha
xor
sbb
xcrypt-ofb
cmpsl
stos
jnp
test
sbb
fnstsw
or
xchg
push
ret
rorl
pop
xor
pop
gs
dec
and
jle
dec
mov
imull
fwait
inc
mov
dec
push
inc
fwait
sbb
xor
xor
stc
sbb
or
cmpsb
push
hlt
outsl
dec
sub
js
push
ss
arpl
mov
clc
aas
inc
pop
xor
and
xchg
fisubrl
and
ja
push
ja
cmp
inc
adc
add
in
pop
cmpb
mov
mov
xchg
and
push
pop
frstor
dec
popf
clc
push
pop
mov
adc
or
or
or
sub
cmp
mov
scas
adc
pop
je
jnp
xchg
call
orb
mov
cmpb
call
addb
xor
subl
jns
out
es
pop
mov
mov
cmpsb
loope
mov
xchg
lods
loopne
xlat
hlt
int3
lahf
ret
and
xchg
jne
or
fmull
aad
inc
rolb
in
sahf
popf
mov
mov
scas
dec
mov
push
outsb
xchg
scas
popfw
outsb
push
jb
sbb
test
inc
inc
pop
popf
xor
repz
xchg
jnp
push
jmp
psubw
cli
scas
adc
dec
insb
fsubr
and
xchg
sbb
pop
ljmp
test
stos
cmp
fdivrl
mov
push
xor
out
call
sbb
push
aaa
mov
adc
and
pop
xchg
xchg
sbb
or
add
mov
push
mov
pop
add
imul
lret
push
add
xchg
dec
std
out
outsb
arpl
sub
pop
adc
add
mov
iret
rcl
sub
push
mov
jno
daa
adc
into
cmp
popf
flds
or
dec
mov
jle
stos
sahf
push
or
xor
xchg
cmp
adc
adc
sbb
add
xchg
loopne
lods
testb
movsb
sarl
fisttps
mov
mov
mov
outsl
pop
jnp
loopne
cmc
into
mov
pop
clc
cmpsl
or
and
jno
popa
test
or
pop
xor
mov
or
cmpsl
push
add
les
lock
dec
xor
and
out
mov
subl
outsl
mov
jae
sbb
push
test
cltd
xor
cmp
dec
pop
out
adc
inc
jnp
xchg
pop
mov
sahf
sub
addl
mov
cmpsl
mov
dec
inc
loope
or
jb
pop
xor
mov
sub
cwtl
mulps
and
mov
popf
stos
xor
outsl
sbb
and
outsl
popf
scas
pusha
ror
jns
sti
sbb
inc
les
test
mov
cmp
int3
loopne
and
xor
sub
insl
fs
adc
add
dec
adc
mov
mov
mov
jg
xchg
out
stc
data16
sub
mov
pushf
outsl
lahf
push
xor
psubq
pop
repnz
rorb
push
ror
or
stc
cmpsl
or
add
test
cmp
js
mov
mov
add
jno
gs
pushf
leave
mov
sub
mov
aaa
lods
arpl
or
pushl
inc
insb
mov
test
jbe
mov
inc
aad
into
dec
out
outsb
or
mov
xchg
in
mov
shll
xor
and
andl
push
dec
and
jno
xchg
xchg
add
mov
fldt
ficoml
movsl
shl
aaa
data16
adc
or
bound
sbb
mov
cmp
mov
addr16
fldcw
cli
adcl
cli
pop
inc
mov
rcl
lods
add
cmp
jg
xchg
xchg
sub
sbb
or
insl
decl
push
add
sub
daa
push
push
cmp
inc
mov
jb
mov
cltd
fcomps
add
cwtl
pop
sbb
inc
in
jb
inc
out
jbe
fists
xorb
and
jmp
push
xchg
addr16
cmp
sbb
inc
bound
dec
lcall
mov
push
pop
call
pop
sub
imul
rcl
pop
push
arpl
pop
movsl
inc
das
scas
pop
cmp
mov
mov
add
and
dec
lahf
je
jnp
cmp
push
push
cmp
repz
push
jl
popa
les
xchg
xchg
daa
stc
or
ficoms
or
or
cmp
pop
inc
push
dec
add
ja
jecxz
jmp
lods
mov
es
inc
pop
xchg
push
xchg
test
jge
xchg
pop
mov
out
cld
xchg
sub
inc
dec
insl
push
pop
fwait
stc
lahf
push
gs
push
rclb
sub
cltd
fmul
insl
push
mov
jmp
jo
cmp
pop
jecxz
sbb
loop
xchg
inc
inc
lret
sub
push
jmp
lahf
cmpsl
test
shrl
adc
cwtl
loop
jbe
cmpb
cmpb
add
inc
lock
fiadds
repz
cmpl
loopne
jp
xor
push
mov
fiaddl
pop
sbb
andl
mov
and
add
pop
mov
loopne
cmp
stos
jae
mov
add
out
outsb
into
imull
out
mov
popf
gs
adc
lods
mov
and
mov
call
inc
cli
xor
adc
mov
mov
test
xchg
gs
sub
and
aas
pop
xchg
mov
push
or
xor
adcl
mov
stos
push
ja
pop
jns
dec
lods
push
hlt
xor
loop
mov
pop
iret
pusha
mov
fwait
jne
jo
pop
sbb
imul
dec
je
scas
jno
xor
clc
and
push
cmpsb
repnz
fisubs
xor
filds
mov
adc
fadd
in
enter
mov
stos
mov
push
in
popa
jbe
cld
mov
jae
mov
lahf
incl
xchg
outsl
mov
inc
into
sar
push
imul
fdivs
dec
in
jecxz
adc
inc
sub
das
push
out
aaa
rol
rorl
popa
push
jp
mov
stc
iret
enter
xchg
mov
mov
sub
mov
jmp
jmp
push
mov
aad
pop
in
jnp
loope
or
imulb
rorl
bound
inc
jns
sub
in
adc
mov
jge
xchg
int
inc
and
jmp
enter
ja
rcl
dec
dec
push
arpl
mov
inc
cld
dec
inc
or
ss
and
mov
mov
je
popf
or
test
popf
lcall
inc
jecxz
cmp
fidivl
testl
nop
jmp
dec
imul
je
push
mov
sub
ds
mov
pusha
es
shrl
mov
and
ljmp
sarb
xor
imul
mov
and
pop
push
cmp
nop
add
out
outsb
cmpb
insb
std
or
mov
push
jns,pn
mov
movsb
and
sub
inc
mov
mov
ret
dec
into
lock
aad
sbb
orps
out
mov
outsl
popf
xor
scas
das
in
pop
jnp
addb
enter
insb
xchg
movsl
add
scas
gs
pavgb
das
stc
adc
sub
sti
imul
push
mov
cmp
sbb
push
sbb
add
iret
xchg
push
jl
push
inc
mov
ror
xor
ljmp
movsb
pop
sbb
push
ds
mov
mov
and
in
push
addr16
shl
mov
jbe
or
test
mov
rcrl
lcall
jb
mov
mov
ds
repz
xchg
ja
rcrl
xor
inc
std
std
mov
ret
cmp
xchg
sub
or
jbe
rclb
dec
pusha
sarb
scas
mov
bnd
sbb
fcomp
outsb
arpl
add
pop
inc
xchg
mov
in
inc
mov
inc
or
repz
mov
xorps
jne
in
jo
into
sub
stc
push
add
dec
push
jo
mov
xchg
adc
xchg
push
das
negl
jae
mov
add
bound
repnz
mov
dec
repz
lods
pop
cmp
outsb
es
popf
ja
sub
adc
in
movsb
ljmp
sbb
test
fwait
cmp
mov
or
jecxz
rcll
pop
xor
push
jns
jmp
pushf
or
and
mov
mov
xor
push
jne
stos
fistps
iret
cwtl
test
dec
push
dec
adc
dec
pop
aas
push
lret
push
push
or
mov
xlat
dec
mov
int
ret
je
pop
cmp
jmp
pop
or
jo
xchg
ja
inc
testl
lods
arpl
shrb
enter
inc
xchg
bound
mov
into
leave
or
mov
sbb
repnz
push
pop
add
inc
mov
fildll
imul
push
rorl
or
push
pop
les
and
popa
fs
pusha
mov
in
pop
xchg
jecxz
leave
mov
sub
leave
add
outsl
pop
mov
mov
push
push
out
fmuls
mov
dec
outsl
pop
clc
lcall
sbb
js
add
inc
sti
xor
std
push
cli
mov
outsb
adc
and
aaa
inc
xor
inc
cmp
push
ret
lock
pop
xlat
jle
ljmp
cli
int3
push
pusha
outsb
dec
inc
rcl
mov
sarb
lods
xlat
pop
cmc
nop
sub
mov
arpl
pop
repz
aad
or
inc
orb
in
adc
cmp
xchg
aas
cltd
xor
push
xchg
fsubl
or
jmp
in
test
or
cmpb
xchg
pusha
mov
repnz
pop
dec
stc
adc
jb
mov
imul
dec
add
cwtl
int3
bound
mov
sbb
mov
arpl
sub
jle
test
fwait
and
and
out
test
xchg
jo
jbe
pusha
mov
jle
push
cwtl
mov
or
or
sarl
xlat
mov
xchg
adc
inc
rclb
aam
scas
and
xchg
je
test
popa
sub
out
mov
or
xchg
jmp
fildll
jecxz
lds
sbb
mov
jl
mov
or
stos
out
lds
xor
push
inc
je
dec
or
sub
imul
jnp
or
xlat
stc
es
dec
xchg
mov
popa
jg
fstp
aam
addl
lods
pusha
push
jo
and
xor
fldcw
dec
jecxz
fprem
mov
mov
and
pop
cmp
adc
shll
cs
enter
int3
and
pop
jle
and
lcall
push
inc
jno
jl
out
ja
mov
pushf
cli
shl
imul
jmp
fldcw
sahf
clc
jmp
xor
pop
dec
pusha
dec
xor
enter
sub
lods
sub
jmp
jbe
std
lret
mov
sbb
aaa
ljmp
mov
xchg
push
sbb
adc
adc
sbb
inc
mov
mov
fimull
outsl
aad
lock
in
or
pop
das
inc
mov
xlat
xchg
daa
pop
scas
cmp
cmp
cmc
dec
sbb
jmp
adc
or
test
adc
and
outsb
out
addr16
gs
fs
jp
sti
pop
sbb
cmp
inc
adc
mov
call
mov
xchg
pop
stos
out
imul
insl
fisttpl
or
fsubrl
imul
js
and
jb
in
fs
ds
out
sbb
call
xor
insl
jo
repnz
int
leave
push
sub
out
mov
xchg
addl
cmp
mulb
jge
addb
rorb
sti
scas
insl
fwait
idivl
and
or
stos
pop
inc
movsb
and
cmpsl
xor
movsb
cmp
fxch
nop
pop
sbb
arpl
and
sbb
dec
xchg
out
sub
mov
pop
mov
fsubrl
and
pop
xorl
cli
xchg
add
lret
push
pop
in
lahf
in
push
push
cmpsl
movsb
imul
mov
cmpsl
cmp
clc
pop
fiadds
fimuls
jle
sbb
stos
and
push
shrb
ret
adc
out
ret
sub
loope
lcall
cmp
ret
adcl
jns
mov
sub
sbb
xor
lahf
mov
int
cwtl
je
les
sarb
out
or
fldt
push
mov
adc
or
inc
dec
xchg
jp
stos
lods
stos
aas
jno
xorb
xor
and
imul
in
fwait
rcll
cmp
or
inc
cltd
pop
loopne
data16
das
call
pop
js
mov
cmpsb
fwait
inc
xchg
dec
pop
mov
pop
popa
ljmp
loopne
adc
aam
dec
jecxz
push
pop
popa
push
cmp
cmp
mov
repnz
loope
push
or
xor
cltd
pop
add
push
mov
jl
inc
outsb
jne
or
insl
push
jnp
imull
cmp
aaa
sub
gs
bound
push
cltd
iret
inc
orl
inc
xchg
daa
mov
scas
fucomip
rcrb
push
sub
mov
sbb
loop
jne
daa
addr16
push
add
cmpsl
mov
adc
cs
push
cli
and
xlat
test
mov
ret
mov
shl
push
movb
loop
cld
test
lret
loop
movsl
jbe
adc
out
push
inc
imul
in
mov
mov
mov
or
std
stos
lods
push
push
push
mov
cwtl
xor
in
movsb
fs
pusha
xchg
lods
push
pop
ret
push
mov
push
pushl
pop
cld
push
lods
call
lock
insl
sbb
cmp
dec
add
dec
and
into
fdivr
imul
into
test
in
fsts
adc
adc
aas
repnz
ret
and
nop
sbb
ficoms
clc
xchg
push
xlat
loopne
iret
dec
or
mov
pop
mov
test
xchg
daa
and
push
jbe
push
lahf
pop
and
fiadds
inc
out
mov
inc
mov
nop
inc
pop
add
sbb
cltd
addb
jno
fiaddl
xor
sub
adc
lods
out
imul
loop
and
mov
mov
mov
adc
dec
sub
rorl
mov
popf
stos
ja
test
push
inc
mov
mov
push
mov
repz
leave
xor
and
xchg
sar
in
repz
scas
sbb
inc
popa
jl
or
cmp
fnstsw
pop
cmp
inc
pop
cltd
shll
pop
xor
adc
outsb
adc
stc
sbb
addl
jmp
repz
jno
inc
arpl
jnp
hlt
aaa
leave
inc
aaa
aaa
lea
cmpb
lods
cmp
add
or
in
mov
inc
pushf
jo
aaa
mov
push
gs
inc
ljmp
lock
popa
fcomps
sbb
nop
sbb
sbb
je
mov
xor
rclb
sti
pop
or
repz
icebp
mov
test
mov
data16
mov
test
push
add
push
dec
into
xchg
imul
lcall
fmulp
int3
xor
cld
mov
in
add
xchg
stc
sbbl
out
and
cli
push
ja
repz
and
and
cmp
int3
cwtl
or
outsb
loop
aam
add
pusha
mov
and
in
cmp
addr16
arpl
icebp
fstpt
mov
cmp
test
push
push
ds
mov
mov
xor
mov
sarl
push
adc
mov
sub
int
or
fidivrl
xor
jnp
ja
xchg
push
std
fistl
addb
roll
cmp
lret
add
add
and
push
outsl
sub
push
push
gs
jg
lret
inc
and
imul
push
shl
decb
xor
cmpsl
mov
sub
dec
jl
pop
inc
jne
xchg
adc
xchg
sbb
aas
and
jmp
jmp
adc
ret
inc
jge
cmc
adc
jne
aas
or
mov
pushl
ja
ljmp
jo
adc
sbb
fcomp
ds
xchg
jb
mov
push
sti
or
in
adc
jp
sbb
rol
xor
mov
int3
jge
pop
jmp
lods
xchg
push
in
xchg
xchg
inc
out
das
pop
dec
mov
jae
push
orb
cmp
mov
sub
insb
inc
testb
test
adcb
mov
fsubrl
les
cli
xor
inc
pop
movsb
outsl
popf
jae
mov
add
ljmp
xchg
push
cmp
int
mov
and
adc
sub
aad
dec
test
syscall
push
xchg
jge
cmpsb
lods
cltd
std
inc
lods
ja
add
and
inc
mov
into
mov
sub
cli
std
inc
cli
in
test
xchg
push
inc
pop
call
sbb
scas
inc
push
jp
push
mov
push
jmp
pop
in
negl
ljmp
push
mov
inc
out
mov
mov
mov
add
adc
std
fst
pushf
add
adc
cmp
mov
mov
lods
xlat
or
retw
imul
or
mov
or
fldcw
pushf
popa
jmp
lcall
pop
scas
popf
in
aam
xchg
std
mov
int3
sbb
lret
das
jo
sbb
xor
push
int
aam
int3
sbb
scas
fmul
xor
sub
or
fmull
shl
pop
sub
adc
stos
mov
and
enter
scas
xor
mov
lds
mov
lods
pop
cmp
cmp
mov
iret
push
mov
or
cltd
call
or
mov
aas
or
test
cltd
add
test
jg
stos
and
jae
dec
sub
sub
push
mov
jo
in
xor
pop
fcmove
xchg
fsubs
or
mov
mov
nop
popf
or
gs
push
pop
jb
pop
jb
and
mov
or
or
lret
xchg
mov
fwait
and
jbe
and
or
adc
pop
xchg
sbb
mov
popa
int
ret
jp
inc
sbb
movsb
xor
lahf
push
push
dec
adc
scas
cwtl
ja
fidivl
pushf
adc
sbb
jmp
xchg
ljmp
jb
call
into
pop
inc
cmp
sub
shrb
xor
sahf
dec
sub
cmp
inc
ss
arpl
or
mov
mov
rolb
clc
mov
dec
jge
mov
out
ja
push
or
pop
cmp
enter
fmuls
ret
test
popa
imul
fildl
je
mov
imul
data16
and
xchg
or
test
push
popl
sub
stos
inc
and
cmp
pop
insl
addr16
repnz
xor
adc
jbe
push
ljmp
push
xchg
mov
and
imul
test
sti
rcrl
mov
test
inc
add
xchg
hlt
idiv
mov
int3
xlat
daa
fstps
mov
add
dec
data16
jno
arpl
add
movsb
jns
repnz
dec
stc
insb
mov
jnp
in
loop
ret
or
mov
std
imul
hlt
mov
cmp
jae
hlt
fstl
jae
fs
push
xor
pop
xchg
pop
xchg
inc
loope
sbb
and
arpl
sub
sub
gs
roll
testb
adc
push
dec
and
in
mov
cwtd
push
fiaddl
cmp
cmp
dec
mov
fsubs
rcrb
xchg
mov
add
daa
aas
imul
mov
inc
push
xchg
sub
fwait
mov
insb
pop
sbb
repz
pop
popa
loope
ret
mov
hlt
push
das
mov
lea
data16
inc
dec
jmp
ret
icebp
cmc
rclb
pop
jle
sub
or
pushf
dec
fsubrp
push
lods
jae
jecxz
cmp
dec
dec
jne
iret
in
stos
sbb
mov
jbe
andb
mov
push
loopne
dec
jecxz
adc
in
ja
cli
and
mov
xchg
mov
roll
scas
or
mov
mov
sub
cltd
mov
add
adc
dec
mov
dec
or
in
insl
mov
in
mov
mov
dec
cld
inc
test
sbb
in
sub
sar
dec
sub
inc
mov
out
mov
pop
das
stos
sub
mov
mov
and
pop
stc
sahf
roll
sahf
sbb
ret
lret
cltd
lock
nop
pop
hlt
push
pop
xchg
pop
popf
lea
inc
pop
cmp
jp
loopne
shlb
nop
pshufw
pop
jp
popf
loop
lahf
adc
and
fwait
push
in
fisttpl
nop
gs
mov
push
xor
adc
mov
test
mov
scas
pop
repz
fdivr
jmp
xor
xchg
dec
cmpsl
insb
add
lds
mov
data16
lods
test
mov
ljmp
jmp
ja
daa
pop
xchg
mov
jle
cli
jg
loope
bound
xchg
sarb
xor
or
aaa
cmp
lahf
mov
jg
pop
sbb
pop
ret
leave
push
std
popa
fbstp
dec
xchg
or
aas
cli
fwait
sahf
sldt
or
sahf
push
cmp
mov
mov
adc
test
pop
or
xor
mov
addl
and
leave
lcall
mov
jle
inc
nop
xchg
insl
daa
xchg
jo
jae
mov
add
and
jg
nop
das
mov
jmp
jle
adc
in
adc
jl
hlt
jg
push
pop
cld
pcmpgtb
leave
stc
and
mov
jnp
add
and
xor
lahf
and
lea
ret
mov
sbb
popf
incb
xor
xor
std
xchg
popa
sub
rcrb
imul
or
pop
enter
mov
pop
mov
xchg
pop
shl
movsb
add
insl
repz
mov
shll
dec
mov
pop
loope
dec
xchg
xchg
push
sahf
insl
push
or
xchg
cmpb
loop
popa
push
lret
jae
loop
jae
dec
inc
bound
lds
add
cwtl
jecxz
inc
inc
sti
cmc
mov
cmp
int3
mov
jo
pop
lret
aam
cmpsb
push
imul
push
mov
inc
or
adc
add
adc
in
pushf
insl
mov
stc
cmp
cmc
push
fdivrl
mov
cmc
dec
add
jo
leave
iret
clc
jne
inc
sbb
lea
xlat
inc
mov
inc
or
in
mov
lret
clc
iret
cld
dec
sbb
out
add
mov
mov
sbbb
aad
pusha
fdivp
popa
sbb
test
lret
sub
mov
push
pop
sub
push
pop
inc
mov
mov
mov
xor
fstpt
loopne
leave
jns
mov
jecxz
ss
inc
jl
aam
pop
dec
lods
ss
movsl
add
or
and
jmp
loop
gs
repnz
mov
jae
insl
aam
lcall
pop
add
mov
cmp
adc
lcall
xor
push
dec
lods
mov
mov
dec
push
outsb
rolb
ficoms
and
ss
out
mov
leave
push
sarb
adc
outsb
adc
popa
jle
lea
push
mov
add
addr16
popa
ret
sub
dec
mov
sub
sub
jp
push
xchg
aas
stc
inc
ds
push
jno
and
test
loop
das
ds
jae
xor
adc
repnz
js
cld
xchg
cmp
popf
xchg
clc
ds
jo
sbb
ror
inc
mov
into
cmc
sub
into
jae
xchg
mov
sbb
mov
add
jmp
cwtl
add
xchg
xor
in
xor
push
mov
std
ja
rcll
ja
xchg
xor
push
push
add
or
sbb
scas
cmpb
cs
popf
sbb
mov
xchg
hlt
lods
mov
jbe
icebp
enter
jmpw
test
sbb
clc
jbe
test
push
sub
lret
cmpsb
enter
xchg
xlat
shlb
rcrb
jg
nop
xor
adc
add
jnp
sub
xchg
mov
jbe
into
mov
mov
clc
and
pusha
lahf
fs
jle
iret
sbb
int
mov
imul
aam
lds
test
sub
test
mov
sahf
mov
cltd
iret
push
or
insb
or
pop
mov
inc
dec
in
aam
mov
imul
clc
imul
sbb
rorl
cltd
mov
icebp
mov
das
pop
ss
push
nop
mov
jne
mov
fwait
js
rcrl
pusha
test
aam
jl
pop
mov
xchg
xchg
in
repz
mov
cmp
je
insl
push
xlat
cwtl
mov
cmc
sbb
rcr
icebp
mov
dec
les
jge
sbb
fsubs
orb
xchg
out
out
xor
nop
inc
jg
sub
xchg
cmpsl
cmp
jp
and
popf
notb
lods
bound
imul
pop
mov
jg
pop
sbb
jno
jae
xor
sub
in
fs
aam
ja
rorl
push
inc
or
xor
mov
data16
loope
mov
adc
cli
aam
jae
pop
cmp
inc
shlb
push
arpl
pop
ror
lock
cmp
imul
fwait
pminub
cmp
pop
push
data16
fcoml
xor
sbbl
xchg
dec
mov
push
sub
inc
faddl
xlat
outsb
ror
xchg
outsb
inc
fisttpll
mov
cld
cmpsb
je
inc
pop
mov
sbb
adcl
xor
adc
popf
xlat
mov
ds
fnsave
mov
jno
test
jb
jg
and
es
fiadds
push
ss
ja
ror
cmp
pop
scas
adc
pop
cmc
and
dec
lahf
xbegin
push
mov
inc
xchg
add
inc
jmp
insb
mov
imul
and
and
sbb
out
int
cmpsb
pop
stos
test
or
dec
xor
imul
cmc
xchg
pop
push
mov
fstl
das
pop
mov
add
ljmpw
mov
in
and
or
lcall
stc
mov
push
test
cli
mov
cmp
ss
xchg
ret
inc
jae
sbb
jg
in
call
iret
mov
mov
roll
and
imul
jbe
mov
jl
sbb
stc
imul
cltd
mov
and
pop
in
adc
insb
mov
out
sub
cmpsb
jecxz
xchg
ret
dec
and
dec
xor
daa
hlt
mov
mov
fs
cltd
xchg
imul
pop
divl
out
ja
push
jmp
cld
shrb
or
or
dec
sbb
fnsave
movsl
sub
lea
enter
cmp
scas
mov
daa
dec
outsl
dec
out
lock
mov
stos
pop
xchg
popf
jp
aaa
mov
add
pushf
jbe
jae
xor
ljmp
adc
jge
repz
mov
mov
jae
movsb
cmp
lock
mov
lds
clc
shlb
loopne
adc
cmpsl
stos
lret
mov
out
pop
in
shll
test
jg
scas
adc
and
mov
int3
mov
pop
test
gs
pop
cld
pop
push
lds
rolb
movsl
test
push
pop
sub
scas
pop
fdivrs
mov
repnz
je
fwait
mull
andb
fcoms
or
pusha
jp
mov
sub
mov
shrl
mov
out
mov
mov
push
stc
pop
incb
dec
xor
repnz
mov
test
mov
sub
sub
pop
js
movsl
divb
call
mov
sbb
ja
lret
push
xor
filds
dec
mov
movsl
xchg
and
sbb
mov
xchg
jmp
mov
jnp
xor
jns
push
repnz
xchg
cli
popf
ret
loop
stos
fwait
cmovbe
xchg
inc
dec
js
sbb
movsb
test
pop
ret
mov
adc
sub
sbb
sbb
imul
inc
ss
nop
pusha
sub
push
pusha
jle
lds
les
jle
or
shr
test
xor
xchg
lock
lods
ss
inc
xor
cli
mov
and
sahf
xor
dec
xchg
push
mov
addb
lret
and
dec
out
les
add
insl
adcl
stos
pusha
movsb
dec
out
dec
enter
aad
jl
xchg
xor
data16
pop
push
test
stos
xchg
scas
jmp
dec
inc
mov
cli
mov
xor
mov
pusha
clc
add
sbbb
shrl
test
mov
dec
inc
lds
jecxz
lcall
movsl
add
inc
xchg
add
xchg
sarl
loopne
in
lock
sbb
sub
mov
push
subl
jmp
adc
ret
stc
dec
push
inc
jge
lock
scas
push
mov
mov
nop
jmp
repz
hlt
mov
mov
lea
aas
cs
xchg
xor
ds
cld
aas
mov
out
repz
movsl
xchg
int
sub
inc
mov
inc
adc
xchg
jns
arpl
dec
lcall
pop
fnstenv
xor
and
jle
test
sub
pop
das
test
cld
cmc
mov
inc
out
add
aaa
sarl
dec
in
push
sub
sbb
andb
shl
cltd
and
fildl
or
and
in
and
xchg
fidivl
imul
mov
sub
or
repz
mov
inc
jp
inc
pop
movsl
cld
xchg
pop
es
cmpsl
sbb
repnz
push
add
jne
adc
dec
aad
xor
xorl
pusha
add
and
das
jp
repnz
bound
jne
mov
cmpsb
sub
fldcw
fistl
xor
mov
mov
imul
pop
or
lods
vshufps
shll
cltd
outsl
xchg
fisubrl
scas
sbb
scas
fnsave
icebp
test
stos
inc
popa
rorb
dec
aad
and
orb
sar
movb
cld
inc
es
pop
test
pop
or
lock
outsb
rcrb
inc
je
test
sub
dec
cmp
bound
and
and
sbb
scas
lea
dec
loope
std
pop
xchg
mov
out
mov
int
in
inc
shlb
fwait
insb
add
push
mov
and
ret
insb
xchg
les
sub
scas
loop
add
add
imul
fs
push
cltd
cmp
and
xchg
xchg
scas
lea
cmpsl
scas
or
iret
icebp
lahf
xchg
push
cmp
pop
add
bound
das
daa
rorl
daa
lods
jg
push
fs
aam
stos
jnp
out
xor
mov
ja
sub
fwait
int3
dec
inc
les
xchg
sbb
lcall
sahf
xchg
lods
insl
cmpl
stc
stos
sbb
dec
div
sbb
and
and
shld
cmpsl
cmc
cld
or
out
mov
es
outsb
adc
lcall
es
out
jl
aas
adc
adc
xchg
std
mov
mov
out
data16
or
mov
sub
movsb
mov
jns,pt
cmp
mov
and
inc
jb
aas
fs
aad
scas
gs
ret
jmp
out
std
out
hlt
push
push
enter
nop
jns
xchg
pop
sub
push
sar
sub
adc
lock
inc
jb
int
out
sub
adc
ljmp
jl
outsb
xchg
data16
les
outsb
lods
fnstsw
add
jne
shll
mov
mov
mov
adc
es
data16
repnz
shll
xchg
mov
pop
loopne
into
es
mov
xlat
push
lock
cmp
test
out
mov
fldl
xchg
repnz
mov
data16
jp
xor
fisubrs
mov
cmp
je
das
in
sub
jp
jp
shlb
dec
or
ret
pushf
fcomps
in
cld
cmp
iret
fcompl
push
xor
push
jne
cmp
or
push
popf
repnz
push
mov
out
movsl
imul
scas
mov
incl
pop
cmp
pop
subl
dec
sbb
or
add
shr
bound
lret
pushf
insl
pop
adc
insl
add
test
subl
mulb
pop
clc
dec
or
clc
inc
xchg
aad
dec
or
fiaddl
in
hlt
divb
mov
push
sub
aaa
mov
stc
fcmovne
mov
fistps
test
out
xor
insl
cwtl
test
add
push
xchg
jecxz
std
insl
pop
inc
cs
fildll
addr16
xor
lock
push
cmc
loope
adc
mov
and
mov
pop
repz
in
in
std
mov
push
dec
and
jb
jno
sub
add
xor
mov
in
and
adc
pushf
ror
jmp
neg
clc
sub
aaa
or
or
sbb
outsb
jns
jns
popa
adc
pop
dec
pop
js
inc
lahf
or
or
lea
pop
adc
mov
dec
add
clc
and
inc
pop
push
clc
std
fidivrl
mov
mov
and
cwtl
cltd
fnsave
adc
jecxz
xlat
cmp
stos
rcll
or
stc
mov
rcrb
fidivrl
loop
call
and
in
sub
or
fwait
sbb
les
jo
clc
push
movsb
push
mov
ret
or
dec
pop
ss
insl
cmp
jmp
adcb
jl
out
jne
cli
or
sub
jecxz
cltd
xor
sbb
pop
or
xor
mov
repz
pop
shrb
sub
xchg
xchg
mov
push
je
xor
int
ret
pop
mov
mov
mov
adc
xchg
sub
pop
xor
subb
or
jno
subl
add
cmc
pop
hlt
leave
nop
mov
sbb
out
pop
inc
pusha
repz
sub
icebp
rcrb
xor
push
xchg
push
lods
idivb
mov
jns
cltd
mov
pop
dec
lahf
sub
pop
ja
fsubr
nop
cmpsb
mov
call
mov
add
sbb
pushf
imul
inc
clc
aam
test
xor
rcrl
or
lahf
cmp
mov
out
lea
adc
stos
int3
mov
imul
loop
stc
cli
jo
dec
jg
in
xor
cs
lods
xchg
je
add
dec
scas
xchg
add
outsl
sbb
push
es
roll
and
sub
scas
sahf
outsl
and
orb
fsubl
jnp
sahf
lea
cwtl
push
popf
push
mov
scas
pop
mov
mov
pop
mov
and
add
jp
fisttps
mov
pusha
pop
jno
cmp
xchg
dec
mov
bound
push
dec
dec
gs
push
xchg
and
pop
jl
iret
jecxz
jne
sahf
and
in
nop
mov
test
inc
xlat
pop
outsl
imul
lret
inc
enter
mov
push
add
fcom
jo
inc
dec
or
cmp
lods
mov
pop
sbb
mov
adc
mov
pop
push
adc
fildl
cmp
fcoml
repnz
lods
mov
xchg
inc
out
popf
xor
pusha
xchg
jge
sarb
xor
daa
sahf
icebp
ficompl
push
rcrb
adc
or
pop
out
sarl
sbb
in
lea
cmpsl
icebp
mov
in
lds
adc
sub
das
jle
mov
or
cmpsl
fwait
jge
dec
enter
adc
je
in
jb
addr16
lret
ds
inc
test
aad
nop
shll
and
ficoms
sbb
jg
sub
js
fs
scas
pop
mov
push
shlb
imul
in
xchg
adc
lcall
std
out
shr
mov
or
adc
arpl
or
xorl
lahf
pushf
push
push
xchg
dec
xor
lahf
outsl
repnz
lods
repnz
loop
jbe
mov
add
repz
pop
outsb
nop
jno
jge
add
dec
sub
fimuls
in
push
sbb
scas
rcll
out
repz
adcb
cmp
cmp
or
push
adc
test
loop
call
subl
push
mov
nop
cmp
mov
nop
rorb
out
icebp
mov
push
dec
lods
aam
lret
or
push
sbb
repnz
mov
pop
mov
pop
mov
cmp
mov
leave
pop
dec
sbb
adc
fmul
cmp
repnz
lahf
cmc
shlb
jns
sahf
mov
gs
popa
mov
out
repz
dec
inc
fcomps
scas
sbb
push
push
fsubs
frstor
mov
pop
enter
outsl
out
test
jb
fcompl
sbb
push
sub
cltd
jge
adc
mov
icebp
rcrb
es
fs
or
add
aam
and
xchg
push
and
andb
xlat
fwait
andb
arpl
mov
xchg
mov
add
xlat
mov
add
incl
sbb
sub
mov
push
mov
fptan
lahf
dec
or
jne
cld
xchg
rolb
cmp
popa
adc
cs
xchg
pusha
loopne
lcall
mov
sub
dec
add
shll
int
test
pop
jno
dec
or
dec
int3
adc
add
hlt
jmp
cmp
inc
push
out
loop
mov
int3
ljmp
mov
pop
cmp
repnz
push
dec
cmp
mov
inc
mov
out
lahf
sbb
mov
adc
or
shrl
jbe
mov
ss
pop
jno
xchg
loop
fists
mov
pop
or
ret
dec
out
enter
outsl
pop
leave
adc
adc
enter
or
or
mov
pop
out
sub
fwait
mov
or
test
sbb
jo
sub
jp
push
clc
scas
sbb
mov
shll
xchg
std
data16
or
jae
mov
xlat
loop
and
push
aaa
mov
gs
dec
outsl
outsl
sbb
repnz
jmp
jg
test
adc
mov
mov
out
push
dec
xchg
cmp
dec
repnz
add
push
daa
mov
mov
mov
xor
xor
inc
xchg
rorl
mov
mov
xor
and
adc
push
pop
or
sub
add
mov
push
fucomp
dec
xchg
push
pop
lods
bound
jb
pusha
mov
dec
push
dec
mov
lock
les
mov
and
xchg
mov
jle
push
mov
jbe
fwait
jmp
call
inc
adc
test
daa
ret
mov
xor
aas
push
push
lahf
jb
loope
fdivrs
jecxz
add
insl
fs
sub
mov
dec
loopne
jae
js
pop
pop
xlat
xor
jp
jno
mov
mov
inc
pop
adc
inc
arpl
into
add
cmp
mov
push
and
sbb
or
mov
lea
sbb
scas
les
mov
xor
cmp
je
sti
repnz
sbb
shrb
cli
mov
jnp
lods
sbb
call
and
cmp
arpl
iret
lds
gs
in
or
mov
push
jbe
in
mov
mov
icebp
mov
lds
dec
add
leave
dec
adc
push
dec
jne
stc
dec
int
ret
push
lods
mov
pop
and
lods
push
cmp
sti
and
shl
fidivrl
out
mov
pop
imul
pop
push
movsb
cwtl
repnz
in
rolb
adc
mov
cmp
out
jae
mov
and
iret
shl
repz
nop
sbb
or
inc
xor
mov
pop
xchg
cld
cli
xchg
mov
jp
stos
sub
pop
mov
sub
stos
add
ror
and
push
add
mov
rcrb
je
andb
mov
xchg
test
push
scas
mov
das
lods
mov
jmp
aas
addl
sbb
popf
stos
aad
int3
jno
cmpsb
cmp
arpl
inc
xor
sub
mov
push
or
rolb
lods
lret
mov
and
test
jle
sti
cwtl
jb
xchg
xchg
xor
add
inc
mov
pop
sbbl
or
pop
fnstcw
aam
mov
xchg
jp
dec
repnz
ja
test
pop
popf
daa
xchg
cmpsb
jno
adcl
jle
dec
fdivrs
push
lret
movsb
test
or
xor
and
out
jge
xor
hlt
insb
mov
dec
subl
imul
jns
lahf
pop
push
into
jno
mov
icebp
jecxz
adc
push
stos
scas
jge
fnstcw
jnp
stos
add
add
mov
cmpsb
sbb
int3
sbb
lcall
decb
test
call
dec
imul
dec
pop
mov
add
xor
mov
aaa
jecxz
cmovae
jno
addl
in
and
cmpsb
push
les
aad
in
flds
fisttpl
inc
add
mov
or
dec
pop
or
xor
out
jb
cmp
push
sbb
sbb
dec
push
inc
stos
gs
and
push
aaa
pushf
pop
xchg
clc
shlb
cltd
jb
call
pusha
imul
sbb
adc
inc
int3
orb
arpl
pop
mov
mov
gs
or
mov
out
add
push
sbb
jae
in
cmp
leave
arpl
mov
int
mov
fisubrl
cmp
inc
sbb
xchg
repz
fwait
push
mov
lcall
pushf
add
add
sbb
mov
pop
outsb
sbb
rclb
xchg
mov
movsb
test
inc
pop
ss
jo
lcall
ret
and
xchg
add
dec
xor
jecxz
pop
adc
jge
and
data16
bound
mov
lret
insl
jae
mov
cmpsl
mov
sbb
das
mov
dec
add
xchg
jne
jecxz
adc
std
cmpsl
pushf
test
xor
pop
sbb
inc
mov
lcall
push
mov
xor
xor
lcall
adc
pop
pop
xchg
pop
cs
xchg
stos
jae
xchg
push
cli
or
inc
insb
ret
mov
lods
out
sbb
cwtl
in
cmp
xchg
pop
cltd
lahf
inc
and
inc
cmp
subb
clc
and
and
int
inc
adc
mov
cmc
ja
mov
fwait
lods
mov
fisttpll
inc
decb
repz
jmp
mov
les
lea
rolb
mov
lcall
iret
sub
iret
xor
rorb
ret
push
add
sub
pop
xchg
pushl
jge
cwtl
and
or
xchg
jl
divl
lock
mov
add
jo
nop
jp
cmc
iret
cmp
popf
dec
in
jg
jp
and
mov
lret
es
jmp
inc
xor
iret
pop
xchg
sbb
hlt
push
add
in
leave
and
mov
mov
mov
and
fisttpll
mov
call
shlb
push
xchg
xchg
xlat
pop
lret
sub
dec
cli
out
jmp
in
cmp
inc
xor
dec
cmp
out
sub
fs
imul
push
enter
sub
fimuls
ret
and
sbb
shrb
sbb
movsb
pop
add
inc
pop
push
shlb
mov
mov
sub
fsubr
ja
or
scas
sbb
push
sub
mov
jne
les
mov
arpl
sub
adc
test
sub
repz
pop
and
test
ss
test
into
xchg
aas
test
xchg
clc
scas
sub
dec
dec
fcompl
xchg
xchg
cld
lods
sbb
ljmp
sbb
mov
sbb
pop
adc
idivl
inc
xchg
das
mov
cld
pop
sahf
push
test
dec
repnz
jge
sbb
pusha
lcall
iret
jne
mov
cwtl
jl
ficompl
lcall
ljmp
xor
bswap
dec
sub
sub
mov
push
cld
ret
mov
or
in
ret
xlat
pusha
or
inc
jnp
sbb
mov
or
lods
mov
push
adc
xchg
movsb
xchg
std
popa
add
fwait
in
jnp
test
or
xchg
out
lcall
inc
out
push
orl
daa
mov
mov
lods
lret
jge
sub
push
cmpsl
test
add
iret
or
push
xorb
mov
fcoml
xchg
das
jmp
fildl
test
test
out
jl
pop
cmp
jl
xchg
cmp
mov
jne
mov
mov
das
test
ss
pop
ss
mov
jmp
sub
sbb
mov
out
push
mov
cmovs
adc
loop
ror
sbb
add
mov
adc
jbe
in
sbb
adc
or
push
sbb
push
je
sbb
test
outsb
sbb
add
sub
push
bound
addb
test
fstps
ja
xchg
xchg
pushf
mov
and
pushf
pop
in
cmp
imul
imul
inc
insl
pop
insb
sbbb
sahf
in
mov
xor
fisubl
add
push
mov
ja
aas
repz
dec
sub
adc
push
les
jns
mov
dec
fistps
mov
lcall
push
mov
in
int
mov
aad
adc
lahf
push
adc
mov
adc
mov
add
inc
scas
add
sub
pop
aad
jnp
sub
cmp
cmpsl
push
sub
jae
es
add
mov
in
mov
add
adc
push
cmp
test
test
into
adc
fsub
mov
lds
mov
jne
into
inc
shll
mov
inc
imul
mov
cmpxchg
ret
dec
imul
push
mov
jb
out
stos
out
and
andb
sti
jge
inc
clc
jno
ss
rcr
rcrl
add
cs
mov
jo
mov
sbb
hlt
mov
cmc
cmp
and
stos
sub
or
leave
mov
sub
lods
push
inc
add
mov
or
dec
push
sub
add
push
es
dec
lds
mov
aaa
cmp
dec
ljmp
push
nop
fcomps
out
push
loop
mov
movsb
mov
and
lds
in
cmpsb
adc
xor
pop
cli
roll
mov
fs
sub
xchg
imul
clc
xor
pop
lods
decl
sahf
cmp
sarb
dec
int
xlat
lods
lcall
lods
cmpl
mov
fsubrl
stos
cmp
or
divb
das
inc
data16
ficoms
dec
jle
lahf
push
xlat
jb
out
mov
mov
jmp
insl
dec
add
pop
lcall
pop
sub
repnz
outsl
ret
mov
je
hlt
xchg
xchg
pop
jb
or
mov
or
push
dec
scas
xchg
pusha
and
or
aad
fisubl
sbb
enter
les
leave
dec
cmpsl
inc
call
cld
jecxz
inc
inc
jne
xor
popl
stc
dec
loope
cmpsl
sub
sub
lods
or
adc
repnz
daa
jl
xchg
lcall
mov
aaa
inc
outsl
lods
or
xor
sbb
fbstp
lods
lock
int
mov
or
jo
lock
and
cld
push
mov
adc
daa
imul
popa
cmc
cs
test
mov
pop
xchg
imul
cli
pop
test
adcb
jp
xor
and
mov
lcall
mov
fwait
lahf
sbb
or
and
mov
add
push
fsubrl
and
mov
cmp
nop
outsb
testl
sub
sub
jg
daa
jg
push
por
jne
cmp
jg
test
adc
cmpsb
xchg
in
pop
ds
clc
ljmp
jbe
outsb
push
mov
scas
mov
mov
xor
into
aad
mov
jl
loopne
sbb
mov
pop
jno
imul
dec
or
frstor
sub
or
cltd
dec
jle
outsb
test
inc
mov
push
xchg
rcr
aad
sti
push
pop
mov
cmp
fstl
dec
dec
push
add
adc
nop
cltd
jnp
cmpsl
or
sub
sarb
mov
or
or
rorb
jnp
shl
jae
mov
call
xchg
xchg
ljmp
jmp
or
pusha
pop
adc
xor
pusha
mov
iret
repz
scas
dec
xchg
arpl
mov
test
inc
mov
xchg
xor
and
xchg
lret
pushf
mov
out
push
dec
lret
lret
out
pop
add
rcrl
sub
in
dec
pop
mov
dec
jnp
add
jmp
addl
aaa
fs
aad
in
pop
int3
call
stos
out
ja
iret
mov
push
loop
lcall
in
jmp
dec
arpl
pusha
outsl
add
or
rclb
pop
dec
insl
jmp
jno
sub
fwait
enter
repnz
repnz
xor
daa
or
adc
ret
ljmp
cmp
cltd
enter
xor
cli
sbb
cmp
inc
arpl
lcall
pmaxub
mov
or
pusha
sub
inc
mov
test
or
pop
mov
adc
bnd
les
cmc
dec
and
fmuls
sub
sti
cs
pusha
out
cld
js
lea
iret
sahf
nopl
inc
xor
mov
sbb
sbb
popa
std
mov
aam
dec
xchg
xor
lods
xor
jmp
dec
add
pop
mov
mov
out
insb
mov
fisttps
lock
mov
or
mov
add
dec
xchg
add
sbb
hlt
aaa
int
xor
sbb
aam
fwait
add
cmp
jo
insb
imul
sub
mov
cmpsl
jb
pop
fwait
push
dec
jecxz
rorb
jg
ds
adc
xchg
mov
enter
mov
scas
fwait
pop
insb
ljmp
addb
lret
xor
sub
inc
cmp
sbbl
aaa
icebp
and
inc
add
or
adc
ss
adc
dec
stc
repnz
mov
and
lock
into
dec
jmp
sub
lods
jmp
mov
xchg
test
mov
loopne
das
scas
xorb
jmp
cmpl
rolb
cmp
push
cmpl
push
stos
push
dec
mov
pop
sub
mov
cmpl
mov
push
dec
push
lds
ljmp
rol
rcrl
add
outsl
insb
push
xor
inc
jp
inc
les
mov
mov
inc
cmp
fwait
sahf
push
add
dec
dec
mov
mov
jae
ds
adc
inc
push
out
fisttps
mov
aas
xor
sbb
popl
dec
mov
cmp
mov
scas
push
dec
mov
sbb
mov
cmp
lods
sti
hlt
jecxz
dec
je
pop
and
sub
or
aas
popf
xchg
cmp
sub
push
mov
xchg
xchg
jle
xchg
aam
call
repz
pop
sarl
xchg
cmp
aaa
mov
jle
in
add
inc
sub
push
loopne
lcall
dec
pusha
repz
dec
sahf
imul
sub
inc
popf
jecxz
scas
lret
and
and
mov
or
add
pop
pop
insl
ret
cmp
jle
xchg
add
inc
sub
sbb
cmp
pop
xor
inc
xor
sub
ja
dec
push
push
sub
fndisi(8087
popa
push
push
bound
xchg
movsb
or
push
jg
fwait
test
cmp
insl
fiaddl
mov
inc
out
cmp
fadd
jle
and
mov
jno
xchg
mov
lcall
insl
mov
cs
or
and
lock
or
adc
adcb
xchg
iret
nop
jo
loop
xchg
ret
mov
cli
jp
fdivs
daa
ret
imul
jmp
mov
mov
jl
or
pop
push
and
jno
xchg
mov
and
mov
mov
jmp
int
call
adc
push
fbstp
cmp
out
nop
pop
je,pn
or
jl
je
dec
pusha
je
mov
push
mov
mov
flds
fidivs
lcall
shrl
cmp
mov
pop
sbb
out
iret
inc
ficomps
cmc
or
or
dec
mov
ds
sub
mov
jmp
jnp
addb
mov
add
outsb
sub
cwtl
in
adc
or
in
jmp
inc
xor
cmpsl
and
mov
pop
push
aas
repnz
mov
hlt
sub
das
dec
aam
sub
inc
dec
loop
pop
aad
clc
add
adc
jns
nop
pop
aaa
cmpsl
mov
ljmp
cmp
lret
inc
pop
ret
in
sbb
mov
idivl
int
xor
mov
ret
std
or
pop
aaa
cmpsb
stc
pop
lock
call
sub
call
pop
mov
mov
sbb
mov
in
out
pop
sbb
rcr
push
divl
insl
xchg
fldenv
xchg
xor
dec
sub
jl
bound
daa
rclb
mov
cli
dec
lock
rclb
cmc
dec
mov
cld
and
mov
cmp
lcall
out
sbb
out
scas
ja
mov
fdivl
out
loopne
aad
dec
adcb
test
hlt
in
stos
jg
aam
mov
test
mov
push
icebp
mov
cmp
stos
xlat
adc
xor
cli
push
jmp
pop
jbe
pop
repnz
mov
or
sub
mov
push
adc
sub
addr16
scas
jmp
into
lret
add
dec
arpl
xchg
dec
mov
shr
push
in
cmpsb
inc
add
xchg
pop
nop
mov
imul
inc
shlb
inc
adc
sub
scas
xchg
inc
das
mov
addr16
je
mov
mov
je
inc
push
and
or
out
out
lahf
sarb
adc
sarl
fdivrl
cltd
out
dec
add
xchg
dec
jns
pop
add
clc
inc
xor
sbb
push
inc
xchg
mov
test
je
push
pop
jne
or
addr16
sub
sbb
xchg
xchg
outsl
mov
push
mov
mov
lea
int
and
mov
xchg
pushf
push
sub
jb
dec
scas
out
das
movsb
sub
icebp
jbe
inc
out
mov
xor
sbb
add
lds
pop
out
push
cwtl
push
push
movsl
std
js
sbb
add
arpl
xor
popa
pusha
je
aam
shll
pop
in
in
adc
xor
hlt
adc
clc
inc
or
int3
push
inc
aam
jbe
xlat
imull
mov
jnp
jp
iret
imul
shrl
sarl
mov
inc
xlat
insb
lret
test
jge
push
adc
jno
jp
cli
adc
jecxz
ds
popa
sbb
in
scas
xchg
sub
stos
sub
jb
mov
cmc
add
push
or
inc
adc
push
cmp
pusha
mov
mov
in
mov
fiaddl
inc
sahf
mov
dec
inc
push
add
cmp
bound
or
pop
out
xor
xor
fdivrs
sub
and
xor
out
aam
ret
movsb
ljmp
mov
jae
or
jae
inc
push
in
add
cmc
test
jg
lock
ss
dec
hlt
jns
xchg
push
xchg
ret
jl
hlt
adc
test
xchg
lret
xchg
add
inc
scas
mov
and
pop
out
in
pop
out
push
dec
lret
adc
push
dec
xchg
mov
lret
sbb
xor
test
mov
mov
mov
dec
out
jl
sarb
movb
por
scas
inc
shlb
icebp
fcomps
std
push
jnp
xchg
dec
cmp
ljmp
loope
xor
adc
mov
push
arpl
mov
add
sbb
arpl
outsb
movsl
push
mov
jmp
stos
cli
rcl
mov
xchg
shl
lahf
mov
sbb
lret
adc
lea
test
test
call
xchg
popf
push
jno
sar
clc
sbb
je
jg
sbb
add
push
nop
ret
enter
aam
das
aas
add
and
jecxz
jo
mov
mov
xor
jge
cltd
loop
push
lods
pop
xorl
insb
push
sbb
cmpsb
or
aaa
xor
sahf
ss
mov
xchg
xor
adc
sbb
mov
insb
push
xchg
jecxz
mov
sti
cmp
int
push
cmp
cmp
aaa
push
adc
out
jnp
test
or
lahf
cmc
sub
fsts
call
out
push
pop
loopne
dec
bound
mov
nop
or
sbb
out
rep
adc
popl
jmp
jle
sti
cmp
gs
ja
pop
bound
cmp
jno
adcl
popa
jg
and
dec
or
jno
out
mov
lods
outsb
daa
dec
sbb
push
inc
xor
mov
and
cld
adc
fnstcw
sub
mov
pop
jg
sbb
movsb
pusha
int3
negb
dec
clc
arpl
cmpsb
mov
add
xchg
lcall
testl
jno
lea
adc
lret
add
pop
mov
adc
adc
clc
addr16
sub
cmp
or
push
jmp
cmp
jno
aad
rcll
jbe
je
aad
in
outsb
fbstp
imul
mov
push
shl
xor
out
nop
sbb
add
std
sub
out
lea
test
popa
xchg
dec
andl
fimuls
push
incb
adc
or
xchg
push
pop
pop
addr16
lods
ret
push
jle
xor
push
fdiv
ficoms
fprem1
push
enter
jns
je
mov
and
mov
dec
test
fnstenv
or
in
mov
ret
into
js
lea
mov
or
lahf
cmp
inc
adc
inc
inc
xchg
push
dec
mov
out
sbb
int3
jl
pop
in
jnp
jl
dec
fcmovb
xor
sbb
lret
jp
fdivrp
inc
stos
pop
jae
cmp
fstps
xchg
bound
sbb
cld
lcall
in
jns
cmp
xchg
das
adc
in
mov
sub
jge
pop
test
or
mov
pop
fistl
inc
imul
add
xchg
aad
push
movsb
mov
dec
out
shl
repnz
add
adc
popf
outsb
pusha
cld
mov
in
neg
sbb
sti
cmc
xchg
sub
outsl
lods
sub
popa
cmp
and
loop
cmp
aad
aaa
dec
mov
pop
mov
nop
and
inc
mov
es
shll
xchg
push
mov
dec
repz
addl
cmpsb
sbb
dec
outsl
daa
sbb
bound
shrb
jne
fsubr
sbb
mov
jmp
cmp
sub
inc
push
mov
sbb
mov
adc
jmp
jle
dec
aas
sbbb
shlb
push
pop
enter
fstp
jmp
scas
pop
jg
in
xchg
mov
mov
inc
js
shrb
fisubs
or
enter
popf
adc
xor
stc
into
push
add
or
inc
push
push
les
jp
and
add
mov
movsl
int3
jp
xor
call
sub
orb
insl
sub
insl
hlt
test
xchg
adc
or
pop
pop
lret
push
cmpsb
and
push
adc
rcrb
xchg
shll
repz
hlt
iret
sbb
push
aam
jns
fwait
mov
mov
jmp
xchg
pop
leave
sub
into
rcr
mov
out
and
pop
hlt
testb
sbb
jecxz
dec
ja
out
cmp
mov
jge
sub
arpl
add
push
mov
inc
pop
das
inc
pop
aaa
imul
adc
jp
fwait
add
mov
or
lret
dec
int
xchg
and
bound
ljmp
xchg
into
inc
lock
xchg
mov
mov
fwait
js
mov
xchg
int3
sbb
jns
fcompl
enter
or
rorb
adc
imul
add
insb
mov
or
lea
or
enter
xor
push
jo
divps
sub
cmp
mov
cltd
in
mov
fisubs
aam
aas
sbb
jae
adc
push
pushf
inc
xor
test
cs
or
xor
and
arpl
lea
js
into
arpl
mov
mov
div
sub
xchg
sbb
fisubs
int
and
adc
aas
adc
mov
test
xor
repnz
jae
clc
fstpl
cmp
movsl
push
inc
repz
mov
or
imul
call
pop
jl
xchg
ss
mov
mov
das
pop
insl
and
cmpl
das
mov
data16
aad
sub
int
call
gs
xlat
ret
sbb
js
mov
neg
or
fbstp
leave
les
gs
jno
std
imul
push
dec
int3
xor
push
push
add
sbb
jne
sub
jmp
and
leave
xchg
test
fistps
std
xchg
andb
cmp
sub
sbb
es
xchg
xorb
push
xor
lea
enter
adc
fisttps
xchg
jno
shll
aad
repnz
pop
shrb
fidivrs
jnp
push
in
stc
push
sub
adc
or
insl
push
sbb
xchg
push
pop
xor
das
dec
rclb
in
jae
push
js
jns
jmp
int
cmp
fs
add
add
fnstenv
shl
fs
rcr
aaa
movb
ss
clts
mov
inc
push
gs
inc
sub
pop
pusha
mov
lcall
cmpsb
js
push
scas
cmpsl
rorb
sub
loopne
into
inc
sarb
sahf
out
fstl
push
mov
jg
adc
arpl
sarb
xor
in
popf
xchg
jb
lods
int3
push
adc
inc
add
dec
dec
addr16
xchg
xlat
mov
imul
ret
push
jbe
dec
ss
cli
jo
imulb
pop
rcrb
outsl
push
fsts
out
push
and
xchg
gs
and
lret
add
push
repnz
test
mov
cmc
out
lcall
sub
int
int3
ss
dec
mov
cwtl
mov
std
popf
push
std
jb
xchg
inc
fwait
inc
xor
jp
shrl
xorb
loope
inc
les
and
shlb
add
mov
mov
loopne
imul
cmp
fbstp
cmpsb
xor
lods
out
push
inc
sub
lea
popf
pop
cmp
fnstenv
xchg
hlt
jae
vmovaps
push
mov
cmc
lods
outsb
adc
push
and
xchg
insl
adc
cld
jge
rcll
inc
cmpsb
or
xlat
ret
sub
mov
jns
dec
dec
inc
sbb
inc
leave
jbe
loope
dec
push
jo
mov
test
add
int3
or
adc
lcall
not
leave
add
cmc
push
mov
adc
andl
pushf
loop
sbb
aaa
and
mov
adc
and
jne
mov
hlt
fldenv
add
pop
je
add
cmp
test
xchg
mov
push
idivb
mov
fisubrs
push
subl
jns
popa
test
pop
ret
jbe
ret
jmp
sbbl
mov
push
and
cmp
loop
mov
xor
movsb
jne
jo
adc
dec
and
sub
cld
pop
ret
cmp
lahf
aas
jle
jb
loope
cmc
xchg
and
dec
repnz
sub
lret
mov
sahf
adc
int
imul
xchg
jecxz
mov
test
hlt
aas
or
mov
rcrl
jae
hlt
hlt
inc
inc
hlt
xchg
ds
cmpsb
gs
push
mov
ds
inc
pop
adc
sbb
add
mov
xchg
mov
in
cmpsl
cmp
test
movsb
fildll
push
xchg
clc
add
xlat
add
outsl
stos
enter
sub
or
icebp
mov
aas
int3
cmp
aaa
dec
adc
push
fistpl
add
sbb
mov
xchg
push
xor
dec
iret
or
pop
cmpsl
ret
adc
xchg
mov
mov
ds
jg
in
mov
fwait
pop
popf
clc
mov
in
fildl
test
sub
and
and
out
jb
adc
aas
mov
fdivp
inc
daa
add
mov
mov
jb
mov
cmc
or
cltd
adc
in
icebp
xchg
clc
sub
pop
ret
out
sub
loopne
hlt
dec
in
mov
shll
mov
outsb
outsl
cmp
mov
mov
xor
int3
mov
or
cmp
ja
mov
adc
inc
gs
jns
fsubrp
into
mov
cmovg
and
inc
nop
fidivl
pushf
xchg
ret
fistl
lds
pop
mov
pusha
push
pop
mov
cmp
push
mov
jmp
pop
add
add
xchg
aas
cli
adc
scas
cmp
aad
jbe
push
movsb
fadds
adc
mov
imul
push
test
mov
bound
or
mov
mov
int
cli
sub
push
xor
cmp
pushf
mov
cmp
adcb
push
dec
xor
sbb
ja
and
fimull
cmp
cmpsb
and
sbb
stos
dec
outsl
inc
pop
je
mov
scas
dec
add
jbe
fbld
jno
rorb
enter
pop
into
lods
gs
sub
repz
mov
fs
outsb
jp
pop
testb
adc
ss
nop
dec
test
add
xchg
mov
xchg
pop
test
sub
addr16
mov
js
outsl
sbb
jmp
ds
imul
cwtl
push
xchg
mov
bound
cs
adc
xor
sahf
aam
popa
lock
shl
and
and
xchg
mov
repnz
jo
add
pusha
rclb
sub
push
lahf
push
mov
aad
jecxz
cmp
cltd
ja
push
xor
subb
outsl
sbb
int
xor
or
inc
mov
mov
cmp
sub
mov
aam
fwait
leave
ja
mov
popa
mov
inc
jle
sbb
lcall
and
jmp
cmpsb
jns
inc
pop
lcall
add
rcr
sbbb
mov
lods
xchg
arpl
mov
rorb
mov
addr16
or
dec
int
in
and
sbb
sbb
mov
cwtl
arpl
ret
dec
and
push
mov
and
cmp
jl
push
mov
testb
jge
aam
lcall
push
rorl
fistps
jnp
js
loope
sahf
in
gs
push
mov
pushf
clc
and
dec
push
push
divb
or
popa
aaa
mov
mov
add
push
comiss
popf
aam
lcall
addr16
mov
fnstenv
pop
movsl
iret
jnp
loopne
inc
movsl
test
push
inc
jae
jno
adc
pop
push
outsl
test
jmp
dec
sbb
mov
xor
lret
in
cld
pop
imul
inc
mov
icebp
lret
mov
cmpsl
inc
jmp
inc
out
push
pop
push
lods
loopne
mov
inc
xchg
stc
ljmp
rolb
sub
xchg
xchg
mov
inc
pop
sbb
imull
dec
test
cmp
out
aaa
cmp
inc
add
pop
pop
fs
pop
sub
dec
and
stos
sti
push
decl
mov
or
das
insb
sub
jmp
pop
mov
xor
out
or
ds
data16
cs
and
jno
icebp
adc
adc
push
insl
adc
mov
lahf
inc
cmp
ss
pusha
mov
xor
dec
enter
sub
movsb
dec
in
add
outsl
xchg
shl
in
push
or
and
std
out
dec
inc
inc
jp
out
fmul
ss
cmp
xor
pop
cmp
sbb
je
orb
xor
lahf
cmp
les
fsubrl
sbbl
push
push
ja
out
push
jne
mov
or
xchg
imul
push
cwtl
push
sarb
sbb
fisubrl
adc
dec
pop
xlat
inc
push
adc
cmp
adcl
shl
iret
sbb
push
fisubs
add
nop
inc
les
mov
mov
cmp
pop
or
fcompl
add
fwait
lahf
out
inc
dec
rclb
fwait
ret
inc
repz
out
fucomip
jo
cmpsl
pop
jl
cmp
test
sbb
adc
leave
add
or
mov
test
cmp
dec
std
mov
dec
dec
iret
dec
add
jno
xor
or
stc
outsb
aam
jp
stos
dec
or
xchg
mov
loop
xchg
inc
jno
push
dec
or
test
sub
iret
repnz
idivl
test
cs
mov
mov
push
fwait
push
pushf
push
pushf
popf
lret
pop
cwtl
jmp
data16
shlb
sub
pop
pop
push
es
lock
mov
out
mov
jmp
loop
out
sub
mov
lea
imul
les
fs
rorb
icebp
inc
testb
rcll
cmpsl
cld
mov
in
fsubrs
cltd
jg
aam
out
and
push
and
ficoml
sbb
dec
fisttps
inc
lea
xor
dec
xor
das
jne
insb
fistpl
mov
fisubl
xchg
ja
sub
dec
xor
push
jg
add
push
ret
mov
or
mov
cmpsl
push
push
lds
xlat
inc
push
out
fwait
sti
das
shll
sub
adc
inc
loope
xchg
add
push
inc
es
loopne
mov
pop
push
sahf
leave
das
xchg
pushf
pop
sub
outsb
jne
gs
xor
stc
fisubs
cmp
add
and
push
shl
lds
out
push
sub
stc
sub
out
push
push
mov
cli
xor
mov
push
jb
in
jnp
test
push
fildl
ss
mov
cmpsl
pop
push
sub
popf
sti
iret
popa
pop
xor
dec
xor
rcll
ja
pop
mov
jg
push
fwait
or
cmp
pop
into
cli
nop
jno
adc
enter
push
lds
in
dec
inc
les
cmpl
or
daa
add
and
lret
push
sub
stos
les
sbbb
mov
push
fcompl
add
ljmp
sbb
outsb
int
pop
iret
jno
mov
fisttps
add
mov
xchg
add
dec
fwait
pop
pushf
test
js
fcomps
stos
inc
insb
das
in
dec
je
or
or
add
push
lret
adc
imul
jl
xchg
test
push
cltd
imul
mov
mov
jbe
mov
aad
fbld
adc
push
mov
adc
push
dec
cltd
int3
add
js
sbb
pushf
aam
push
out
inc
fdivl
into
aam
mov
or
mov
data16
mov
data16
iret
inc
shll
adc
xchg
data16
push
push
fistl
mov
test
and
mov
sti
iret
mov
mov
pushf
cmp
aad
into
test
xchg
test
xchg
add
mov
pop
rcll
xor
add
and
push
jnp
mov
mov
shl
out
dec
fildll
mov
xor
lahf
bound
mov
addb
scas
pop
sbb
lea
and
lods
notl
in
lods
stos
sbb
out
mov
fwait
mov
loopne
nop
ficoms
add
cmp
out
es
adc
lret
addr16
hlt
andl
mov
dec
inc
imul
dec
stos
cmp
cld
out
cmp
jge
and
addl
xchg
push
sbb
fcoml
push
into
les
ljmp
cmp
lcall
dec
mov
in
add
push
lret
mov
xchg
inc
add
adc
lahf
sbb
inc
nop
insl
fwait
in
fcmovnbe
xchg
jae
sub
cltd
mov
data16
mov
sub
sti
rcll
dec
or
sub
int3
fwait
int
jne
lcall
dec
js
cwtl
lret
aam
push
add
push
sbb
pop
xchg
scas
cmp
adcb
cmc
or
jbe
push
cmpsl
sbbb
mov
idiv
xchg
outsl
add
ss
stos
sti
movsl
scas
mov
dec
mov
cld
stos
orb
xchg
mov
aaa
push
fcomps
test
test
or
cmp
outsl
xor
out
pop
or
push
inc
dec
push
out
filds
jno
je
test
xor
push
xchg
insb
mov
pop
jp
fstpl
cmp
sti
popa
xor
cmpsl
les
mov
daa
mov
mov
stos
jno
hlt
ror
mov
pop
xlat
push
shlb
movsl
add
rol
jg
bound
push
adc
or
mov
push
adc
outsb
sub
xor
stc
test
iret
inc
adc
jge
test
mov
test
push
xchg
leave
pop
fxch
bound
stc
int
or
out
adc
out
cmp
and
das
sub
fimull
cs
loope
push
adc
xchg
js
lcall
mov
sbb
mov
push
pop
shrb
jbe
pusha
add
fcompl
addl
lea
mov
rclb
lock
jecxz
int
pop
xchg
jno,pn
pop
push
push
add
adc
pop
and
or
jbe
mov
ret
mov
xchg
les
aaa
loopne
xchg
add
js
sbb
cmp
cmp
popf
popa
push
je
psubusb
pushf
mov
ljmp
and
and
mov
pushl
gs
movsb
test
xlat
jno
pushf
jle
std
push
and
mov
and
aad
jno
fwait
xchg
es
lahf
lock
pop
dec
jg
pop
mov
dec
icebp
sub
push
je
rcrl
xchg
sbb
flds
arpl
addr16
mov
bswap
mov
imul
push
pop
dec
inc
push
loope
add
or
insl
int
add
stos
and
cmp
xor
lret
cmp
mov
push
cli
sub
push
mov
cmpsl
lahf
push
nop
stos
lcall
aas
push
push
clc
scas
push
pop
inc
mov
outsb
push
pop
std
add
inc
fidivs
sub
sbb
repz
lods
mov
push
and
pop
fwait
adc
jecxz
inc
test
lds
push
fs
sub
cli
cmpsb
mov
int3
pop
pop
in
popf
jg
pushf
push
xor
push
mov
sti
pop
in
popa
push
pop
jb
xor
es
mov
mov
out
loope
pop
mov
inc
add
in
cmp
mov
movsl
imul
sub
jae
mov
add
jg
mov
leave
loope
test
cmp
es
sub
in
cmp
lock
das
cmc
in
push
ret
stc
sti
imul
cld
mov
xchg
and
cli
mov
cmp
aad
and
mov
pop
jg
shll
mov
adc
xorb
mov
push
and
fnsave
dec
sbb
imul
leave
push
and
je
dec
icebp
out
in
pusha
jno
rclb
hlt
fdivs
inc
mov
mov
shlb
mov
and
aam
or
in
add
and
test
ret
and
pop
or
decb
mov
data16
adc
outsb
les
or
push
cmc
mov
lods
add
in
nop
mov
sbb
pop
xchg
pop
mov
ss
jne
push
xor
and
mov
xchg
jp
cltd
lcall
pop
xor
cmp
add
into
sub
mov
jle
test
mov
lahf
mov
push
cmpb
ret
push
test
maskmovq
negl
jle
xchg
sub
add
push
fstps
adcl
pop
test
sbb
sbbl
dec
pop
mov
sub
pop
jnp
push
mov
dec
push
je
inc
mov
data16
sbb
mov
mov
mov
push
fwait
ds
jge
or
sbb
popa
inc
xor
jg
testl
jecxz
or
pop
cmp
std
fdivrl
aas
jg
daa
jle
pop
xchg
bswap
or
popa
sub
mov
xor
bound
cli
lret
or
dec
xor
pop
push
int
cmp
pop
or
push
inc
lea
cmpsb
cmpsl
mov
adc
sub
int3
dec
decb
cli
stos
fwait
iret
mov
es
sub
dec
mov
mov
push
test
add
fsubl
loop
mov
mov
sbb
loop
jae
mov
pop
out
fsts
shll
adc
lahf
popa
sbb
cld
shrl
mov
insb
sub
repnz
mov
pop
and
scas
adc
fistpl
inc
mov
add
push
jnp
in
fptan
adc
scas
cmp
and
call
mov
push
movsl
pop
hlt
in
xchg
add
ja
cmp
popl
sbbb
cmp
sarb
add
sbb
inc
cmc
push
jl
cmp
stos
add
dec
in
std
hlt
jmp
jne
cmp
and
aaa
jns
push
cs
adc
outsb
in
incl
insb
js
aad
jg
inc
cwtl
mov
inc
sahf
mov
ljmp
imul
mov
mov
sub
loopne
xor
push
iret
sbb
inc
add
inc
movsb
push
flds
test
lock
fdiv
pusha
adc
pop
add
dec
outsl
xlat
jecxz
sahf
in
outsb
lods
test
push
and
jp
mov
xchg
mov
add
jb
pop
int3
enter
aas
divb
hlt
addr16
add
nop
stos
push
mov
mov
fildl
daa
arpl
add
popf
sub
call
cld
int3
insb
arpl
adc
mov
lock
push
jno
lea
fsubr
loopne
cmp
jge
scas
addr16
fistpll
xchg
pop
lock
xchg
cmp
xchg
or
mov
mov
jmp
jge
inc
jp
inc
ss
mov
push
dec
stos
jmp
push
je
mov
test
pop
int
jmp
push
mov
leave
lds
dec
jecxz
jge
mov
push
popa
jns
cmp
sbb
outsb
cmp
inc
adc
lods
mov
ficomps
sbb
cmp
cmp
xor
jp
sub
mov
xchg
mulb
out
test
mov
ja
mov
fld
mov
pop
push
cli
cmpsl
mov
xchg
mov
clc
xchg
mov
call
mov
sub
and
cltd
jnp
jge
add
xor
mov
pushf
sbb
mov
mov
mov
int
lds
adc
rep
sub
add
lds
xchg
addb
mov
xchg
cmp
stos
loopne
jnp
dec
mov
push
ret
dec
jmp
mov
inc
push
adc
mov
sti
jp
loopne
ds
es
xchg
cltd
pop
outsl
in
jne
xchg
outsl
mov
stos
fsub
ljmp
int3
pop
pop
in
pop
push
sarl
repnz
add
aaa
loop
faddl
jmp
data16
in
jle
test
cwtl
ret
and
rorl
add
fst
ja
mov
shll
dec
pushf
jo
imul
pop
cltd
mov
rcl
mov
inc
outsb
pop
inc
cmp
mov
ret
jne
mov
pusha
std
cmp
push
mov
loop
fisubl
fmul
hlt
arpl
lahf
jae
clc
push
js
xor
push
dec
xor
test
sub
dec
and
push
jge
mov
addb
out
int3
ss
aas
push
sub
bound
adc
outsl
test
and
aas
mov
push
stc
jno
das
icebp
sub
shll
mov
lret
dec
mov
xchg
sbb
xor
int3
lds
pop
out
mov
or
sahf
daa
test
jp
or
jne
sahf
out
xchg
add
rol
jb
ss
xor
enter
push
xchg
lahf
imul
aaa
repnz
sahf
cs
cmp
outsl
sahf
addr16
push
cmp
fcmovne
inc
sbb
xchg
lahf
outsb
in
or
add
pop
sub
nop
outsb
push
imul
outsl
xchg
imul
loopne
addl
and
std
and
test
or
into
inc
push
pop
roll
inc
or
add
and
push
inc
cmpsl
lock
int
das
int
popf
mov
mov
pop
call
and
pusha
data16
cmpsb
cmp
and
inc
sbb
int
or
or
rcl
cs
les
rolb
clc
mov
icebp
adc
scas
inc
into
xor
aam
or
jns
cwtl
lods
fs
popa
or
call
mov
nop
imul
pop
iret
xor
mov
pop
in
xor
loope
loope
pop
dec
mov
jp
test
loope
push
xchg
dec
xor
cmpsb
sbb
insl
dec
mov
dec
dec
jl
scas
sub
aad
test
sar
inc
or
loopne
lock
icebp
scas
push
lods
push
js
lahf
mov
cmp
es
lods
dec
pushf
rorl
nop
ret
fsubrl
cmp
adc
iret
cmp
insb
addb
inc
testb
mov
lahf
dec
cwtl
dec
and
andl
negb
loopew
in
pop
out
adc
clc
pop
mov
sbb
adc
sub
fbstp
jnp
sbb
pop
enter
jno
stos
icebp
mov
mov
movsl
pop
inc
pop
mov
fcomps
sub
sub
mov
sbb
mov
cmp
sub
adcb
pop
shrb
add
lods
lahf
pop
sbb
outsl
push
jle
mov
cmp
or
stos
arpl
imul
orb
push
iret
sti
mov
popf
pop
sbb
movsb
lds
push
cmp
leave
loop
jmp
xchg
xor
xlat
jo
test
dec
movsb
mov
jo
mov
or
in
xchg
dec
sti
ljmp
jle
or
jne
enter
mov
lea
rcll
push
insl
jo
js
xor
xchg
pop
stos
mov
lret
sbb
sub
ljmp
cmp
lret
xchg
lods
ljmp
pop
jecxz
bound
sub
mov
and
sub
mov
inc
into
cmp
in
enter
mov
stos
mov
dec
scas
mov
lock
add
test
cmp
pop
mov
sub
daa
cwtl
push
inc
popf
ss
push
stos
loope
out
addb
and
rcrl
and
mov
or
dec
inc
insb
hlt
mov
popf
ds
arpl
add
fisttpll
fiadds
and
movb
push
push
adc
ficoml
mov
cmp
mov
mov
jae
and
cmp
cmp
dec
mov
aam
pop
ja
push
pop
mov
loop
mov
stos
jno
dec
xchg
ds
adc
sbb
aaa
sbb
jo
outsb
insb
inc
scas
jne
push
imul
sub
add
sub
pop
orb
out
scas
or
stos
jb
or
add
cmpsb
lock
jge
in
mov
sbb
mov
out
xor
loopne
inc
cmc
lea
push
cwtl
jl
cmp
fnsave
pop
jnp
mov
fsubrs
add
mov
pop
mov
and
mov
pop
and
negb
jmp
jecxz
pushf
push
scas
sbb
mov
cmp
scas
adc
xchg
jge
xor
inc
aaa
adc
or
sarb
pop
into
outsl
push
fisttpl
mov
shll
sti
xchg
sahf
or
cmp
xor
mov
dec
stc
rcrl
mov
jno
xchg
cwtl
or
pushf
or
fstpt
or
and
push
popf
popf
mov
ja
push
lea
call
jb
in
out
sub
mov
addr16
xchg
aam
cmp
stos
cmp
faddl
xlat
xor
mov
sbb
mov
push
or
popa
xor
ja
add
sub
insb
mov
or
icebp
sub
cmpsb
in
cmpsb
xchg
sbb
xchg
in
pop
dec
leave
rcll
fiadds
lret
jl
in
out
f2xm1
xchg
dec
jle
je
leave
inc
mov
ss
cmp
dec
ss
add
add
xchg
popf
aad
stos
pop
push
xor
and
jne
mov
cmp
test
cmp
inc
jecxz
and
out
mov
xchg
sbb
mov
jp,pn
das
arpl
push
andl
and
lock
jge
pop
pop
mov
jae
xor
stos
fidivrs
imul
xchg
jbe
popa
fnstenv
inc
loope
aas
in
sbb
jge
mov
jp
cmp
and
pop
int
subl
int
loop
rcrl
into
insb
mov
testl
fsubr
fs
mov
hlt
std
xchg
dec
fimuls
in
aam
fdivrl
pusha
xor
aaa
push
push
cmc
movsb
in
ret
mov
xchg
movsl
leave
mov
aam
outsb
rorb
add
mov
sub
dec
xchg
adc
mov
outsb
stos
dec
ja
in
ljmp
mov
daa
fldl
insb
add
mov
pop
lret
cmc
xchg
sbbb
fcmovbe
add
push
fldl
popf
pop
mov
xchg
test
out
movsb
jo
dec
xor
movsl
int
jnp
adc
aas
xorb
jmp
push
imul
push
mov
sbb
mov
das
mov
xor
push
and
bswap
jle
das
push
push
sbb
inc
lcall
jle
addb
icebp
jae
xchg
jmp
mov
cmpsb
mov
das
mov
cmpsl
das
arpl
mov
dec
je
into
sub
rclb
jg
jnp
into
xor
cmp
jl
or
lock
mull
das
ds
rcrb
das
mov
push
in
pushf
adc
jae
sti
and
mov
push
jecxz
mov
xor
xlat
sub
leave
and
fstl
mov
fs
jb
icebp
push
sbb
jg
data16
adc
jmp
dec
cld
stos
mov
fisttps
mov
or
lods
or
pop
out
inc
xor
loope,pt
xchg
mov
sub
nop
js
insl
lahf
icebp
jecxz
adc
xchg
push
mov
jge
inc
leave
in
cmp
imul
xor
in
fcompl
jo
mov
arpl
dec
push
ljmp
in
call
add
shr
or
pop
hlt
repnz
cmp
and
out
sti
popf
out
fwait
sub
sub
daa
imul
scas
and
nop
push
push
scas
and
je
mov
and
sbb
je
and
scas
iret
fsubrs
jle
or
pushaw
les
rorl
xor
sbb
sub
fsubrs
jb
sbb
xchg
xchg
movsb
icebp
sub
jno
jnp
push
addr16
popf
int
outsl
add
mov
sbb
stos
lea
mov
xchg
imul
int
add
imul
mov
repnz
scas
pop
jne
imull
add
fbstp
pop
addl
or
cltd
lret
hlt
xchg
pusha
sbb
lea
xchg
aas
sub
outsb
stos
mov
lahf
mov
les
xor
in
push
jg
clc
out
mov
or
and
xchg
cmp
mov
pop
pop
lds
fadds
jns
mov
test
xchg
cld
int3
int3
orps
and
xchg
sub
jns
lret
lods
xor
int
jp
pushf
dec
cmp
ret
ss
or
ret
lret
cld
je
call
loopne
xchg
lods
sbb
insl
ja
jae
enter
sub
push
mov
xchg
pop
inc
push
lcall
das
cli
push
xchg
gs
mov
xorl
sub
scas
dec
pop
aaa
and
jo
jmp
outsl
ja
adcl
icebp
mov
jnp
test
shll
jmp
push
arpl
fdivs
inc
ret
mov
jo
mov
pusha
pop
bound
xchg
ret
cmp
xchg
insl
fistl
jmp
push
movsb
cmpsl
add
pop
fnstsw
dec
push
mov
xchg
push
push
xchg
mov
in
sbb
dec
int3
shlb
loope
in
fwait
or
fwait
add
xchg
mov
loope
xchg
pop
push
aam
ljmp
rcll
jle
or
and
mov
cmpb
sbb
sub
sub
jp
sub
cmc
and
inc
fbstp
xchg
xchg
dec
fwait
je
pop
and
daa
outsl
stc
sti
mov
daa
and
insl
cmc
mov
sahf
sbb
jl
jecxz
mov
loopne
pop
repnz
ss
or
push
sbb
sub
fwait
into
lcall
popf
or
push
mov
push
add
xchg
or
imul
add
aam
jae
jbe
scas
jb
out
sbb
or
fsubl
mov
mov
add
mov
inc
mov
xor
enter
arpl
cltd
xor
fstpl
mov
testb
cltd
mov
shrb
adc
mov
sbb
out
ds
insl
arpl
shlb
mov
and
pop
jmp
mov
push
cmpsb
icebp
outsl
or
orb
dec
pop
out
push
or
out
and
or
addr16
orl
jmp
push
pop
jbe
xchg
movsb
dec
das
aas
and
jge
push
xchg
int
std
movsl
fxch
sbb
popa
jne
inc
out
mov
pushf
cmp
es
test
imul
push
in
push
or
sbb
imul
inc
jp
sbb
sahf
aam
pop
hlt
sub
ja
mov
popf
scas
cli
xor
or
in
cmpsl
loope
and
mov
sahf
lcall
mov
sahf
mov
ljmp
pand
sub
push
mov
xor
mov
fbld
xchg
add
adc
lds
push
das
mov
iret
mov
jnp
lods
jbe
mov
gs
stos
mov
cwtl
cmpsl
add
enter
stos
shrb
xor
lcall
jne
negb
or
popf
int
xchg
and
push
jle
sahf
sbb
lock
sbb
not
int
xor
aaa
cmp
xchg
adc
dec
inc
lods
fildl
fs
cwtl
inc
xor
sbb
xchg
cmp
iret
jl
add
mov
adc
lahf
mov
jl
jnp
mov
test
or
and
dec
inc
and
mov
fldt
imul
sti
mov
cmp
iret
std
push
sbbb
rcrb
or
and
or
mov
jp
pop
ficompl
gs
icebp
sub
fisubs
loopne
imul
mov
add
arpl
stos
xor
cmp
sub
push
loope
add
enter
stc
xchg
addr16
out
or
ljmp
cmp
or
data16
insl
mov
mov
mov
mov
ljmp
xlat
add
jmp
cmpsb
mov
cmp
cwtl
outsb
mov
aam
mov
repz
push
xchg
out
xchg
sbb
push
call
outsl
xor
addr16
sarb
jo
leave
xchg
cmp
les
sub
pop
sub
mov
sbb
insb
cltd
aam
mov
sahf
dec
mov
fldl
pop
adc
sbb
mov
in
es
sub
aad
pop
outsl
stc
mov
xor
jp
adc
cmp
cmp
pop
jbe
es
adc
add
decl
rolb
dec
shll
aad
mov
pushf
xor
clc
mov
dec
jmp
repnz
pop
pop
mov
test
movsb
cmp
push
sub
je
mov
imul
mov
sets
jno
aam
and
pop
fwait
test
dec
aam
in
aam
fcompl
jge
jle
out
rcrl
add
xchg
push
pop
out
fs
mov
push
fmull
das
inc
mov
es
mov
outsb
addr16
inc
xchg
lock
and
jae
pop
add
sub
push
adc
data16
js
or
sarl
test
mov
xor
pop
fcmovnb
repz
nop
xor
push
sub
mov
addl
dec
in
lods
add
xor
lods
mov
movsb
dec
cmp
dec
pop
pop
push
stos
aam
push
movsb
xlat
mov
xchg
add
sbb
imul
inc
call
int
xchg
sub
addl
sub
int3
lret
adc
dec
push
lahf
jno
add
mov
xchg
pop
les
out
aam
mov
movl
imul
cmpsl
sbb
repz
sub
xchg
filds
pop
clc
adc
rol
fmuls
xchg
mov
push
mov
push
ds
cs
mov
fsts
dec
loopne
outsb
nop
push
test
call
enter
mov
popa
out
mov
xor
pop
push
rol
inc
jg
loop
mov
aam
cli
jle
test
bnd
jmp
mov
ret
pop
mov
jno
scas
dec
sub
or
shlb
add
imul
mov
ret
int
aad
loope
mov
sub
ret
xchg
es
enter
adc
rclb
call
ljmp
and
rorb
ss
pushf
add
pop
push
mov
sbb
enter
bound
icebp
inc
test
test
mov
sub
jl
sbb
fisubrl
gs
inc
push
mov
ja
out
shl
pop
push
fistl
cwtl
fisttpl
mov
push
adc
mov
sbb
jb
ja
jp
movsl
add
aam
add
jnp
negb
inc
je
xor
pop
or
cmp
hlt
or
xchg
and
dec
pop
mov
call
outsb
adc
sahf
jo
pop
movsl
loope
je
repnz
add
cli
mov
xchg
pusha
daa
or
mov
ljmp
dec
sbb
repnz
mov
dec
movsb
insb
mov
pusha
push
pop
sbbl
pop
sub
jl
dec
test
inc
jnp
imul
dec
mov
cmpsb
mov
jp
xor
mov
out
and
xlat
dec
mov
pop
repz
pop
lahf
shl
sbb
test
int3
cmp
xlat
imul
pop
add
adc
mov
cmp
sarb
cmpsl
or
shrl
dec
mov
movsl
cli
xor
mov
rclb
mov
rorb
add
popa
test
inc
movsb
add
jmp
adc
add
loop
or
or
and
sub
inc
inc
gs
lret
call
inc
shrl
mov
and
mov
andb
jle
cmp
shrl
addr16
adc
mov
jp
enter
jmp
mov
fiaddl
pop
outsb
repnz
jno
sub
aam
bnd
mov
orb
sbb
lret
cmpsb
lds
loopne
xchg
jg
mov
fnstenv
or
aam
mov
loope
mov
push
scas
lahf
pop
ds
enter
ja
or
xchg
shr
movsl
imul
aas
adc
stos
sub
sar
dec
cltd
adc
out
leave
mov
daa
repz
sbb
int
adc
pop
cmpsb
push
or
mov
ror
mov
in
testl
std
movlps
sub
das
adc
idivl
test
adc
or
ficomps
dec
mov
daa
mov
mov
sbb
outsb
jne
jae
pusha
lcall
data16
test
dec
pop
inc
and
lods
jnp
fs
push
addr16
mov
and
cwtl
hlt
dec
outsb
adc
lret
cmpb
ss
xchg
js
pop
sahf
adc
mov
sub
mov
lods
sub
lea
pusha
mov
sbb
inc
ret
lods
stos
insb
out
pop
mov
sub
or
inc
pop
xorl
inc
add
lods
fisubl
lahf
or
cmp
sahf
mov
sbb
adc
sar
xlat
rclb
test
jns
insb
mov
jae
add
pop
das
sbb
es
shl
cmp
adc
outsb
sub
xchg
fwait
mov
inc
xchg
mov
adc
sub
std
in
mov
adcb
dec
sbb
jge
lds
outsb
adc
mov
adcb
pushf
movsb
js
dec
notl
nop
pop
int
adc
notb
or
mov
xlat
jno
pop
jmp
push
sbb
sub
fisubrs
je
fisubs
or
xor
or
call
mov
inc
jns
mov
or
xchg
bswap
mov
push
loopne
sbb
stc
mov
dec
in
sbb
pop
jns
pop
aaa
xor
lods
mov
push
outsb
mov
mov
inc
aaa
mov
insl
dec
or
je
xorl
pop
dec
lods
aas
fcmovnb
sub
xchg
mov
mov
mov
fnstenv
shlb
les
inc
sahf
mov
jmp
cmpsl
push
divl
mov
and
in
and
ljmp
in
dec
pop
ljmp
xchg
addr16
mov
imul
jle
xchg
mov
inc
lahf
xchg
imul
and
or
ret
das
es
fs
jge
int3
lea
int3
mov
inc
movsb
cmp
mov
in
push
sub
aam
movsl
into
out
shl
jno
xor
sahf
pop
or
xchg
ss
shll
mov
mov
fnstsw
mov
out
adc
sbb
ror
xchg
pop
push
pop
mul
cli
jmp
lret
fstpt
cld
rorl
fcoml
movsb
ja
mov
shrl
cs
lcall
jnp
mov
cltd
lahf
data16
icebp
dec
mov
fbld
lcall
push
rcrb
jb
data16
outsb
xor
mulb
add
mov
xchg
pushf
es
or
pop
mov
and
sbb
jae
jno
dec
lahf
jo
add
fadds
sub
xor
xor
xchg
xor
xchg
push
ret
testb
sub
xchg
push
xor
mov
imulb
iret
fldcw
lret
add
xchg
sub
xchg
adc
inc
aam
inc
ds
cmpl
sbb
divb
and
dec
call
pop
and
jle
push
subl
imul
out
imul
dec
ljmp
aas
xor
push
int
adc
icebp
mov
fidivrl
pop
shll
dec
lcall
ret
and
sbb
in
aam
outsb
movsl
dec
dec
push
sbb
nop
popf
jbe
popf
mov
mov
sbb
std
or
mov
fisttpl
stos
dec
dec
js
sub
sti
mov
mov
sbb
movsb
adc
ljmp
fimull
push
fstpt
clc
shlb
add
sbb
jle
cld
sub
bound
push
stc
and
push
mov
out
mov
inc
sub
sub
in
sbb
sub
dec
mov
mov
mov
sarl
sub
cwtl
call
das
sahf
add
cmp
pop
pop
arpl
adc
pop
fldcw
jecxz
push
mov
jns
stc
add
mov
icebp
pop
inc
mov
sbbl
inc
and
sbb
enter
scas
repnz
xchg
sub
sub
push
lret
mov
fisubs
int
jno
mov
test
push
pop
out
ret
enter
movsb
push
fstl
sub
push
mov
ljmp
scas
mov
aas
push
jae
inc
jp
sub
jge
mov
cmp
jle
es
mov
mov
mov
xchg
xchg
testl
pop
inc
fisttpll
movsb
aad
add
cmp
ja
adc
pop
test
sbb
fcmovu
adcb
mov
jb
push
in
pushf
cltd
clc
and
add
popa
rcr
xchg
movsl
add
mov
adc
jge
push
mov
pop
mov
leave
dec
jae
js
sbb
mov
outsb
scas
xor
iret
jno
stos
shll
mov
loope
pop
xchg
std
ret
mov
icebp
push
jg
mov
inc
push
jle
lock
je,pt
or
inc
ljmp
sub
repz
and
sti
jmp
jne
pop
das
jae
out
cmp
repz
popa
jge
not
lods
imul
jb
fdivrl
cmp
mov
jnp
stos
mov
xor
fcmove
sbb
gs
lods
aam
mov
ret
fildl
stos
mov
leave
fdivr
jmp
in
push
xor
add
lds
jae
aad
in
mov
cmp
stos
rolb
inc
outsb
xor
mov
mov
cmp
aas
mov
mov
sbb
test
inc
ss
mov
jb
push
fistps
test
lods
sarb
cld
mov
call
stc
mov
pop
pop
xor
push
lret
pop
in
out
push
repnz
xor
ficoml
xor
push
and
lret
add
int
mov
xchg
cmp
bound
gs
mov
add
adc
shrb
pop
in
sbb
dec
outsb
pop
xchg
pop
mov
sti
dec
push
aas
in
jno
gs
push
and
push
and
jnp
push
insl
mov
clc
das
sub
mov
xchg
xchg
lahf
inc
cli
test
lock
sarl
and
in
addr16
aad
stos
xchg
in
test
xchg
imul
cmp
int3
mov
mov
paddsw
inc
jne
xor
fnstenv
sbb
xor
pop
mov
les
in
test
dec
jp
xchg
add
sbb
leave
and
fcmovnbe
loope
setnp
and
pop
aam
stos
pop
scas
xchg
std
ret
stos
jbe
dec
leave
mov
adc
cli
flds
loope
pop
push
jbe
cmp
sub
cltd
sbb
push
pop
mov
jo
mov
scas
movsl
in
and
fdivp
sahf
std
jecxz
out
lock
dec
shlb
sub
lahf
jbe
xor
test
rcrl
ds
sbb
shrl
shrb
wbinvd
xorb
into
or
aam
movsl
jp
mov
repnz
fcmovu
movsb
cmp
push
int3
push
sahf
mov
add
clc
push
outsl
fiadds
cli
jle
pop
push
fimuls
filds
sbb
mov
or
sbb
div
pop
in
cmovnp
inc
mov
xor
inc
iret
loop
lods
fwait
jo
mov
stos
popf
or
dec
std
popa
push
clc
popa
push
push
js
cltd
out
dec
mov
icebp
mov
mov
jne
imul
call
jge
cltd
dec
mov
call
sub
fidivl
loopne
xchg
jnp
sti
push
pop
stc
jbe
sub
mov
jp
jbe
xchg
rolb
inc
mov
sub
int
pop
ftst
dec
aaa
dec
pop
cs
mov
popa
cmp
lods
lret
add
jecxz
addr16
ret
jae
sub
push
dec
fisubl
or
ffree
mov
stc
mov
push
addl
add
je
sbb
mov
fwait
adc
xchg
stos
or
pop
aam
jmp
jae
dec
or
push
pop
adc
pushf
pop
dec
jae
or
mov
fmull
pop
aam
xor
call
stos
fcoms
jecxz
or
test
sub
add
mov
and
fldenv
imul
je
push
imul
sub
mov
loope
add
clc
movsl
clc
inc
jb
nop
sub
fstp
xchg
mov
push
inc
shrl
test
xchg
cmp
sub
xor
cli
dec
push
mov
dec
data16
notb
mov
dec
push
les
out
add
mov
adc
push
nop
mov
mov
pop
out
mov
addl
adc
cmpsb
mov
das
cwtl
es
jmp
aaa
xchg
xor
and
dec
dec
xor
ljmp
jmp
cmp
in
out
mov
xlat
or
arpl
pop
mov
out
icebp
bound
test
push
or
nop
addr16
iret
add
or
movsl
cmpsl
adcl
sbb
add
push
lahf
aad
jb
inc
lods
xchg
lds
add
rol
cmp
mov
inc
test
pop
fdivrp
fstpl
add
enter
xchg
std
or
pop
ficoml
dec
repnz
pop
loopne
rcl
popf
sarl
or
sbb
or
xchg
clc
scas
sbb
dec
loopne
inc
lret
lret
subw
sti
jmp
xlat
int
test
xchg
inc
outsb
loopne
push
fs
cmpsl
xor
loop
imul
inc
inc
insb
mulb
insl
data16
xchg
sub
pop
mov
inc
sub
sbb
jmp
in
out
mov
mov
pop
test
aas
inc
enter
mov
pop
call
shrl
push
xchg
push
jb
idivl
sti
cmpl
push
mull
addl
imull
add
xchg
outsb
mov
rolb
push
fidivl
dec
insl
ja
fsts
mov
jp
shrb
clc
adc
jmp
movsb
cld
push
loope
addr16
sub
mov
sub
mov
pop
nop
bound
sub
dec
fistpl
xadd
push
push
loop
repz
int3
ss
adc
shr
xchg
cld
push
mov
das
fstpl
in
shlb
test
cmp
push
push
icebp
cmp
mov
pop
pop
clc
in
insl
pop
das
fistl
jp
push
outsb
popf
stos
imull
sub
cmpsb
jge
lret
cmp
add
add
pop
ret
pop
gs
mov
clc
js
mov
cltd
fdivrl
fidivrs
icebp
outsb
sub
inc
xor
sub
jae
lods
xor
jp
mov
inc
hlt
ds
ss
jp
sbb
or
push
icebp
fistpll
push
dec
fists
mov
aam
jns
ljmp
add
mov
lea
mov
movsb
outsl
cld
ret
sub
icebp
xchg
mov
dec
jmp
inc
adc
inc
push
xor
popf
inc
sahf
out
dec
aam
sar
xchg
sbb
jge
mov
xchg
cmp
je
push
mov
outsl
rcrl
ja
out
jle
adc
gs
inc
fisubs
mov
lret
fstp
mov
lods
popf
leave
mov
mov
repnz
xor
pop
lods
inc
mov
shrb
lds
ror
push
aas
scas
shll
repnz
subb
add
nop
mov
mov
xor
scas
jmp
add
or
outsb
pop
dec
inc
push
push
mov
std
dec
or
or
repz
test
mov
nop
dec
test
inc
fstl
sbb
test
adcl
rdmsr
daa
ds
mov
mov
jl
dec
jbe
mov
xor
cwtl
leave
pushf
pop
movsl
dec
xor
jae
dec
sub
or
and
cmp
pushf
fidivrs
jns
pop
jns
or
adc
cwtl
ret
mov
mov
daa
lahf
adc
jns
inc
stos
mov
sbb
fnstsw
cmpsl
scas
push
out
pusha
xchg
and
mov
sbb
call
jo
out
push
jge
clc
dec
fsubrp
pushf
push
cli
fnstsw
sbb
sahf
loope
addr16
push
es
rol
push
mov
ljmp
rcrl
lods
es
mov
cwtl
clc
ret
into
dec
sub
mov
dec
iret
cli
shrl
lret
jp
test
cs
pop
push
shrl
push
dec
hlt
or
pop
adc
pusha
sub
inc
cmp
cmp
cmc
imul
push
into
fcmovnb
cmp
repz
xchg
adc
lcall
jmp
pop
jno
jmp
sbb
mov
cs
inc
add
lahf
mov
add
xchg
das
sahf
sub
jno
push
clc
cmp
clc
testb
xor
negb
mov
cli
dec
mov
scas
xor
enter
icebp
pop
pop
popf
adc
fisubrs
mov
sub
jno
pop
xchg
fstps
add
scas
pop
je
fs
cmp
sti
call
add
and
jecxz
jmp
sub
xchg
dec
or
repnz
mov
sbbb
pop
sub
add
mov
fisubl
stos
out
xchg
mov
loopne
adc
sub
or
jle
js
jnp
lock
push
jecxz
add
ret
aaa
xlat
sub
jnp
lret
mov
xchg
ss
clc
das
add
dec
fwait
xor
imul
cltd
in
cmpl
rcl
arpl
inc
in
aaa
leave
mov
cmp
icebp
gs
add
inc
xor
lldt
vpsubusb
and
push
test
sti
fidivrl
push
lock
sbb
cli
aaa
xor
jno
mov
fldenv
adc
pop
or
movsb
aas
xchg
sbb
sub
idivb
mov
sub
cmc
or
test
push
out
in
cmp
inc
dec
fwait
ja
add
ljmp
push
sbb
xor
mov
adc
test
cli
dec
push
lcall
mov
dec
mov
dec
sub
jne
aaa
out
bound
fadds
mov
xlat
inc
nop
dec
in
je
sub
dec
mov
mov
mov
mov
push
adc
xlat
pop
test
mov
sbb
test
add
adc
xchg
ljmp
jmp
loope
scas
outsb
push
push
or
cmc
xchg
adc
and
push
jbe
jno
jnp
out
lods
jo
adc
pop
cltd
or
sbb
mov
pop
push
push
lock
sbb
sub
adc
imul
adc
ja
mov
mov
dec
sbb
jg
movsb
mov
lock
popf
insb
lcall
adc
add
int3
mov
daa
xlat
fstpt
mov
in
rclb
mov
arpl
jo
mov
imul
pop
sub
sar
dec
mov
mov
jmp
mull
fwait
jp
int3
push
jae
xor
sub
scas
add
cmpsl
and
or
fs
aam
cmpsl
cmp
jmp
add
out
dec
loop
pop
jno
mov
fnsave
and
sbb
enter
cmpsb
inc
xor
add
mov
cmp
sar
cmpsl
lcall
sub
push
cmp
rcll
jae
decl
dec
dec
ss
jno
bound
test
sub
movsl
jnp
outsb
pop
mov
or
cmp
push
iret
xchg
cli
xchg
andb
inc
inc
xchg
mov
out
mov
les
cmpsb
pushf
dec
test
aaa
sbb
xchg
mov
pop
shrb
dec
mov
pop
outsl
inc
push
mov
adc
xchg
cmp
ds
jnp
push
cltd
add
cmp
dec
xchg
das
pop
or
cmpsb
mov
stos
sub
or
inc
push
mov
std
mov
cmp
or
mov
push
sbb
sbb
or
inc
ss
in
imul
dec
repz
ret
push
out
push
nop
sub
cmp
stc
das
sub
adc
out
push
push
stos
jae
jge
cwtl
xchg
addb
cltd
xchg
dec
xor
aas
push
ret
js
sub
adcb
loope
mov
xor
loope
mov
cltd
sub
insl
loop
arpl
inc
icebp
add
add
pop
addl
aas
cmpsb
xchg
jle
sarl
mov
pop
sti
stc
sbb
cli
loope
push
icebp
dec
aas
pop
jmp
mov
dec
cltd
sub
inc
push
inc
sub
lret
xor
negl
jo
jb
jne
popl
dec
lahf
pusha
inc
popa
push
inc
mov
adc
xchg
js
xor
inc
pushf
cmc
jle
and
sub
test
outsl
mov
aaa
and
mov
lods
pop
inc
jl
roll
in
xchg
lods
fcomi
cmp
sbbl
shr
pop
mov
jno
aam
adc
pop
mov
subl
xchg
lds
jmp
pop
push
int3
popa
xor
xor
gs
lret
pop
loopne
push
xchg
in
sub
xlat
mov
jns
hlt
xor
jo
xchg
cmp
lock
xchg
cmp
fucomip
ss
and
dec
mov
cli
mov
jae
shll
jo
pop
roll
adc
stos
mov
cmp
std
stos
mov
push
mov
jno
xchg
mov
cmp
icebp
imul
jp
cmp
pop
sbbb
js
iret
cmpsl
and
push
clc
fnstcw
aam
repnz
iret
hlt
rol
adc
enter
mov
jne
jl
mov
loop
push
mov
ljmp
and
shr
cmp
cmc
push
jno
pop
pop
sub
sti
and
cmp
inc
pop
mov
es
xor
inc
dec
or
and
cmc
xchg
pop
and
fdivs
repz
hlt
and
jne
and
push
fwait
mov
div
cmp
dec
sub
fistpll
scas
cs
pusha
add
mov
cmp
icebp
add
loope
push
out
aad
mov
mov
je
ret
mov
jbe
imul
pushf
jns
dec
cmp
jbe
adc
imul
mov
lods
ja
and
inc
mulb
or
mov
jg
movsb
inc
stos
popl
lahf
inc
fsubr
in
mov
xchg
inc
push
pusha
imul
mov
outsl
pushf
mov
inc
loopne
insb
and
pop
mov
mov
ds
adc
mov
inc
xchg
add
mov
fisubs
xor
repz
jge
push
divb
mov
aam
sub
sahf
inc
xchg
shlb
xorb
inc
inc
mov
mov
mov
repnz
jbe
hlt
mov
jbe
psubw
fimull
gs
in
sahf
out
add
je
fistpll
sbb
ficoms
mov
test
cmpl
mov
mov
stos
lcall
xor
aas
inc
or
shll
jae
xchg
outsb
mov
mov
arpl
fs
fnsave
mov
jp
rcll
nop
push
pop
out
fwait
in
sbb
and
ror
and
fnstsw
xor
add
cld
repz
inc
mov
inc
ret
dec
imul
jne
push
xchg
sbb
mov
cmpsb
push
addr16
dec
xchg
adc
ds
lds
jne
pop
dec
xchg
movsl
add
push
jl
loopne
push
ror
test
sbb
xor
pop
cmp
pusha
leave
arpl
out
sbbl
jge
or
loop
adc
pop
mov
mov
xchg
dec
mov
ffreep
sbb
jns
cld
addr16
xchg
das
insb
mov
loop
push
and
outsb
es
aad
add
add
mov
dec
not
loope
mov
pop
push
xchg
push
cltd
xchg
mov
jle
scas
mov
or
hlt
mov
add
lea
ret
cmpsl
test
mov
sub
imul
sub
xchg
dec
add
jo
sub
mov
push
imul
fisttps
out
js
pop
push
mov
mov
mov
inc
fsubrs
jno
aaa
pop
xchg
add
sub
and
xor
pop
fistps
cmp
mov
push
push
push
sarl
jl
pop
or
call
pop
jmp
xorl
pushf
jb
leave
xlat
adc
imul
cmp
add
push
mov
arpl
pusha
pop
sbb
lea
mov
js
mov
ss
les
icebp
je
loopne
xlat
dec
dec
sbb
outsb
xor
movsb
adc
mov
push
cmp
add
add
js
jne
adc
jmp
pushw
pop
int3
dec
into
movsl
aad
and
adc
int3
negb
ffreep
lret
mov
and
nop
inc
sti
in
mov
xor
sahf
add
mov
xor
sub
aam
mov
test
cmp
popa
nop
out
mov
cmp
outsb
cli
adc
repnz
loopne
inc
xor
lahf
jns
addr16
dec
lcall
pop
test
pop
rcrb
push
xor
stos
mov
xor
jno
fisubl
xchg
fcomp
and
in
enter
orb
popl
scas
jnp
idivl
xchg
dec
or
dec
popa
xor
pop
inc
xlat
xchg
or
outsb
enter
dec
inc
xlat
jne
in
sahf
pop
orl
leave
mov
xchg
xchg
adc
mov
mov
cmpsl
adc
test
dec
pop
and
and
mov
sub
movsb
sub
xchg
nop
sbb
add
jb
lods
sub
inc
and
jb
mov
mov
test
js
mov
pop
sbb
xor
sbb
int
or
mov
xor
inc
shlb
push
sysenter
jae
popf
xor
stos
idivb
adc
cmpsb
popf
xor
jge
push
fistl
ror
enter
mov
cmp
cmc
test
xchg
cmpsb
pop
fisubrs
jl
pushf
pop
fadds
mov
cltd
daa
inc
and
aad
jnp
lret
dec
pop
jg
dec
cs
jb
popa
cmpsb
mov
and
jge
xchg
pop
test
or
dec
iret
cmp
and
jle
fbstp
sub
into
push
push
and
jae
mov
push
lock
jp
mov
and
ret
adc
sub
les
hlt
stc
push
jb
pop
ds
loop
dec
scas
repnz
ss
std
cmp
test
jmp
xchg
cmp
stos
mov
and
jae
cmpsb
mov
stos
decb
into
shr
jns
push
int
mov
pop
push
outsl
xor
int3
or
xor
aas
mov
cmp
pop
xchg
add
jnp
cwtl
inc
xor
pop
pushf
imul
sbb
in
jo
or
loope
fstl
out
dec
mov
xchg
shll
test
and
ds
pop
test
push
out
leave
popf
rcll
cltd
sbb
jmp
and
adc
push
lret
sahf
dec
int3
imul
and
in
jl
mov
lock
jge
neg
cmp
push
adc
fwait
mov
add
fucomi
out
pop
out
notl
call
es
cmp
dec
mov
mulb
sbb
ret
stos
push
loope
inc
adc
cmpsb
aad
in
faddl
call
push
push
mov
dec
inc
fs
adc
mov
mov
je
fildll
pop
sbb
push
lahf
cld
xor
es
decl
cmp
stc
sbb
mov
testb
sub
in
repnz
fdivrs
pop
sbb
roll
xor
jg
mov
push
xchg
push
jmp
or
mov
dec
andb
ret
cmp
test
ret
lcall
mov
daa
mov
outsl
sub
and
xchg
xchg
adc
mov
push
sbb
sub
pop
cmpsb
pop
andb
pop
lods
mov
mov
scas
std
inc
push
call
sbb
ja
cli
nop
jl
sub
loope
inc
pop
pop
fcomps
pop
mov
mov
je
out
jmp
jo
les
jno
xor
mov
adc
outsl
rorl
mov
pop
scas
cltd
pop
jecxz
cmc
add
adc
dec
adc
adc
add
sahf
inc
out
adc
les
adc
mov
out
fnstsw
sub
sbb
and
loope
mov
cmp
pop
pop
fldl
pop
mov
leave
cmp
clc
movsb
les
shlb
imul
xchg
cmp
scas
pop
cs
imul
mov
xor
xchg
mov
sub
dec
pop
add
push
arpl
mov
out
call
mov
sbb
cmpsb
or
cmpsb
dec
push
addb
lock
in
mov
xchg
mov
add
aaa
xchg
dec
xchg
cmp
jne
ds
adc
cmp
lods
je
dec
mov
sbb
sahf
mov
jbe
pushf
dec
ds
insb
adc
sbb
out
lahf
shl
shlb
das
add
pop
dec
sbb
or
sbb
push
cs
out
push
ret
stos
cmpsb
arpl
pop
in
mov
outsb
sub
sti
lahf
test
je
imul
xchg
fidivrl
aam
mov
push
push
inc
dec
jp
xchg
jl
xchg
out
imul
push
jae
stos
jmp
xor
neg
ljmp
loope
outsb
mov
inc
push
jno
jg
pop
fstl
xchg
mov
mov
movsb
sbb
xchg
call
xchg
pop
pop
xchg
pushf
ljmp
xchg
insl
and
or
lcall
xor
cmp
push
scas
jle
and
push
xchg
push
mulb
fadd
push
cld
shlb
outsl
and
out
arpl
mov
xchg
sbb
stos
or
mov
add
aam
inc
aad
dec
lret
out
in
loope
xchg
jo
push
fldenv
fists
ljmp
push
lea
sbb
or
rcll
pushf
xchg
dec
scas
stc
push
add
mov
stos
jae
pop
and
jecxz
sti
jb
pop
sub
jge
cli
es
mov
pop
jle
cmp
add
inc
jmp
imull
ss
loope
cmp
mov
mov
dec
repnz
add
sbb
cli
frstor
push
jg
mov
popa
daa
sub
jne
daa
pop
scas
push
repnz
ljmp
out
iret
sbb
and
loope
es
jne
out
lock
xchg
pop
movsb
mov
ss
dec
std
jg
and
in
test
les
sahf
fsts
add
jae
push
imul
js
pop
jno
or
js
test
add
movsl
popf
and
xor
jae
pop
jnp
cmp
and
fbld
mov
jge
out
mov
dec
scas
cmp
mov
adc
add
mov
rcrb
hlt
int3
ss
arpl
inc
pushf
add
repnz
sahf
xor
sar
cmc
mov
cltd
push
cli
js
mov
pushf
pushf
aaa
cmp
dec
xchg
mov
in
inc
cmc
sub
adcl
ficoml
es
addr16
mov
popf
ds
fwait
stos
out
sub
sahf
outsb
mov
jmp
jg
stos
div
lcall
inc
push
cmpsb
xchg
dec
stos
repnz
test
popw
mov
idivl
inc
and
cmp
pop
or
mov
jmp
ret
insb
popf
xor
sub
clc
ja
jg
dec
mov
fdivr
test
push
enter
or
sbb
in
ss
out
xchg
lods
mov
inc
clc
das
cli
mov
orl
loope
repnz
or
enter
ret
jne
push
cmp
sub
ja
mov
insb
mov
dec
xor
addr16
and
mov
shll
xchg
mov
dec
adc
jb
aaa
push
sbb
in
lret
xor
jmp
cli
push
inc
add
cmpsb
sysret
addr16
or
push
sub
xchg
mov
cs
mov
lea
or
cs
xchg
mov
xchg
mov
add
data16
sbb
popa
dec
pushf
add
dec
push
cmp
push
hlt
stos
or
mov
ljmp
arpl
add
xchg
pop
stos
or
call
pop
lea
dec
pop
jno
mov
lret
and
decl
push
mov
loope
scas
clc
ss
add
in
xor
or
sbb
push
xchg
out
std
cwtl
add
ja
dec
push
fs
imul
or
or
adc
inc
arpl
push
popa
pop
add
mov
push
int3
imul
inc
test
jl
and
pop
xor
loope
sub
pop
sub
dec
add
xchg
pop
xchg
add
push
mov
aas
or
rol
cmp
cmpsl
decl
mov
adc
dec
cmp
jle
pop
cmp
repnz
xchg
jnp
mov
mov
dec
clc
push
call
pop
leave
fxch
or
inc
rcll
nop
jbe
fcoms
nop
push
adc
jmp
outsb
jb
sub
rol
mov
pop
je
mov
inc
xchg
pop
gs
loope
lods
aas
adc
out
push
rorb
outsl
popf
jp
movsl
daa
sbb
jbe
adc
je
addr16
dec
add
shlb
fld
aaa
and
adc
mov
popf
mov
in
aas
out
frstor
lret
adc
push
push
mov
or
insl
xchg
ljmp
gs
dec
outsb
add
test
dec
stos
cltd
or
es
testl
mov
xchg
xor
adc
lcall
or
in
sti
addr16
xchg
loop
adcl
fstp
mov
sub
fsts
mov
adc
pop
repnz
or
mov
icebp
pop
in
or
arpl
push
pop
scas
addr16
mov
insb
call
jno
ds
es
jnp
or
inc
rorl
fstps
jo
pop
addr16
mov
faddl
push
js
or
rcrb
mov
mov
call
dec
imul
pop
mov
cmp
pop
xchg
outsb
sbb
push
mov
xor
sti
insb
cmc
and
hlt
mov
test
push
in
aas
sbb
jae
lea
aaa
test
call
mov
pushf
lret
inc
xchg
fsubrs
jmp
pop
aas
std
add
into
iret
stos
dec
movsl
gs
cs
pop
mov
icebp
sbb
add
push
dec
inc
xchg
adc
aad
xor
cmp
nop
cmp
les
xchg
fnstsw
arpl
mov
repnz
or
ljmp
dec
test
inc
or
mov
and
daa
add
test
pop
mov
xchg
jo
daa
or
lock
dec
xorb
xchg
pop
subb
sub
sub
fwait
test
pushf
in
repnz
movsl
aam
push
cmp
out
jne
mov
cld
fimuls
adc
gs
sub
cmp
xchg
cmp
fnsave
je
sahf
dec
push
adc
pop
jne
inc
int
mulb
pop
imul
ljmp
out
xor
and
cmp
jecxz
shr
mov
sbb
ljmp
jnp
sbb
push
inc
repz
mov
add
cld
push
loopew
add
roll
movsl
pop
push
xchg
mov
dec
jo
cmp
xchg
ficoms
xchg
push
add
pushf
repz
push
push
add
pop
imul
push
nop
bound
mov
mov
inc
mov
arpl
sub
ret
aad
mov
or
cmp
arpl
mov
leave
insl
cmp
cli
jecxz
jg
jle
and
mov
ret
movsb
popf
lret
rcrl
mov
loopne
inc
in
cmp
push
sbb
inc
mov
pop
jb
div
mov
xchg
fcompp
jbe
cmp
aad
aas
scas
or
xchg
or
loopne,pt
xor
push
pop
dec
aaa
lret
add
push
mov
adc
mov
aaa
idivl
repz
push
xchg
ds
add
or
cld
fst
movsb
stos
incl
mov
cwtl
mov
push
fwait
ljmp
dec
ret
cmp
pushf
fnsave
mov
xchg
imul
pop
movsl
adc
jae
and
xor
jp
mov
sbb
pop
lock
and
xchg
stos
sub
mov
sub
inc
mov
in
inc
lods
or
and
mov
in
sub
mov
ds
inc
xchg
arpl
push
push
call
out
xchg
pushf
fwait
pop
loopne
repz
push
xchg
in
and
iret
out
pop
sbb
dec
stc
sbb
mov
ja
push
sbb
repz
xor
out
push
or
ja
sbb
and
les
shrb
imul
rorb
call
ss
je
jl
data16
mov
subb
sub
xor
mov
out
test
fcomi
push
cs
dec
mov
xchg
mov
and
cmc
mov
loopne
add
js
test
shlb
jns
xchg
jnp
xor
outsl
jns
mov
cltd
stos
lods
add
movb
lods
push
shl
test
sub
inc
pop
cmpsb
jae
cmc
movsb
jge
jo
pop
jne
dec
int
mov
jnp
jle
flds
leave
orl
mov
cmp
pop
aad
adc
cmp
inc
mov
int3
and
push
rcrb
int
inc
ret
movsb
mov
jge
cmpsl
mov
mov
push
xchg
add
mov
shlb
mov
sub
cli
pop
cmp
fstps
mov
fists
aas
xor
jb
inc
push
lods
add
pop
adc
cwtl
adc
inc
cmp
scas
mov
imul
cmp
pop
xchg
dec
pop
push
sub
sbb
xor
pop
jg
dec
and
jle
xchg
pop
xlat
inc
adc
addl
mov
mov
in
fists
test
or
addr16
xchg
adc
scas
in
cmpsl
add
xor
add
stos
movsb
jae
outsb
shl
fdiv
in
dec
jp
test
jp
mov
sar
xchg
shlb
push
popa
pushf
sub
xor
mov
mov
scas
lods
jg
xchg
or
cmp
push
cmp
aas
lock
fidivs
add
push
jge
pop
insl
mov
xor
xchg
sahf
xor
dec
mov
mov
mov
mov
xchg
pop
cmpsb
push
lods
sbb
dec
pop
leave
and
int
pop
jp
jle
jge
and
mov
jmp
mov
lret
adc
cmp
sub
pop
sar
insl
cmp
jne
xchg
shrl
sbb
adc
repz
fcomps
subb
mov
in
aas
cmc
test
push
xchg
pop
dec
orl
hlt
adc
xor
jmp
das
xchg
xor
fwait
icebp
outsl
push
dec
xchg
add
mov
dec
xlat
fists
mov
adc
xchg
dec
and
mov
mov
addr16
dec
movsb
mov
rcl
and
xchg
repnz
in
push
sbb
xchg
shll
jae
xchg
into
movsl
dec
add
jg
popa
icebp
mov
out
out
sub
pop
gs
push
fadds
iret
out
sbb
lds
test
jmp
mov
jbe
inc
ret
xchg
stc
jnp
std
aad
sub
jae
cmp
push
pushl
inc
and
or
push
addr16
cmpsb
adc
aaa
jl
bswap
jle
and
filds
std
imul
push
xor
push
push
inc
pop
dec
mov
jns
xor
movsb
stc
imul
mov
adc
xchg
das
sahf
mov
outsb
imul
pusha
add
jl
xorb
add
sub
inc
sbb
icebp
xchg
inc
outsb
adc
inc
sbb
mov
sub
les
inc
sahf
mov
in
test
rcrl
jecxz
and
lock
out
fs
clc
and
inc
xorb
xchg
pop
mov
cmp
lods
xor
pop
out
inc
dec
jp
xchg
and
sbb
in
in
mov
icebp
sub
ja
insl
jmp
jns
xor
lahf
rcr
mov
bound
lods
aas
push
pusha
daa
arpl
inc
arpl
out
cmp
sub
int
pop
and
ficoml
dec
mov
sub
sbb
mov
lea
adc
dec
push
inc
or
mov
fimuls
in
mov
pushf
sbb
xor
aas
mov
dec
cmp
lahf
out
push
mov
aad
xor
sub
btr
xchg
xor
jp
cmpsl
fucomi
into
jae
xchg
lock
pop
or
dec
sarb
cmp
inc
in
jns
push
cmp
pop
push
jecxz
lahf
pop
pusha
sub
inc
cld
inc
arpl
aaa
int
lock
add
in
inc
dec
pop
cmpsb
dec
lea
negb
add
aam
jecxz
xor
push
xchg
aaa
js
std
ljmp
push
or
xchg
scas
fs
loop
mov
cmp
fs
out
stos
adc
imul
repnz
pop
test
lcall
call
or
inc
or
or
and
or
sahf
dec
das
and
lods
mov
push
pop
fisubrl
xor
pop
mov
cmp
bound
push
jle
mov
dec
jae
test
cmp
pop
jmp
bound
aad
pusha
sbb
in
dec
popf
hlt
xor
and
sbb
mov
data16
pop
and
xchg
sbb
scas
arpl
je
bound
push
shl
mov
test
jo
lock
sub
pop
fsubrp
jle
cmp
insl
mov
xchg
out
lret
es
in
dec
inc
cmpsl
loope
sbb
sbb
jmp
outsl
les
jle
dec
ds
pop
add
inc
add
sbb
xor
in
mov
mov
cwtl
les
pop
jl
and
jecxz
in
shlb
push
adc
jb
xchg
dec
outsb
sbb
xchg
ds
cmp
imulb
adc
adc
add
outsl
daa
mov
mov
pushf
xchg
ret
clc
ds
or
jnp
cmp
cmp
jecxz
in
mov
sbb
pop
jge
loopne
mov
sbbl
mov
and
es
push
cmp
push
inc
push
adc
push
lods
mov
pop
pop
stc
xor
mov
push
aam
add
imul
dec
or
aaa
and
test
je
pop
es
sbb
test
lock
jmp
xor
arpl
jae
and
aas
test
test
mov
sbb
lods
in
push
xor
mov
or
repnz
sahf
inc
ret
add
add
shll
sub
sahf
cwtl
cwtl
xchg
mov
rorb
push
mov
bound
in
addr16
addr16
mov
jge
xor
fsubrl
js
pop
cmp
ret
jg
int3
cmp
call
pushf
pop
clc
inc
xorl
mov
dec
fwait
getsec
or
jecxz
push
dec
jno
lcall
hlt
jecxz
adc
and
mov
inc
fisubs
sarb
es
jg
pusha
popf
rol
dec
lock
cmp
push
cli
mov
in
ror
adc
test
jae
push
xchg
out
pop
leave
or
fisubl
popa
xlat
xchg
ljmp
fstl
push
sub
cmp
push
inc
movsl
mov
lahf
inc
in
stc
repnz
push
test
jg
dec
xchg
lock
push
inc
mov
mov
daa
loopne,pt
add
inc
jne
imul
xchg
fs
icebp
and
lea
sub
cmp
inc
ret
repnz
mov
out
fistpll
out
sub
ds
cmp
test
adc
loope
ja
inc
push
inc
pop
dec
rcrl
sahf
xchg
in
jl
and
daa
ret
gs
mov
xchg
xchg
insb
daa
movsl
stc
add
ret
pop
fs
imul
shrb
rcll
pop
not
jge,pn
pop
loope
aad
jecxz
cmp
mov
shll
aaa
xchg
test
popf
scas
xchg
mov
jno
loop
test
jbe
cmpsb
imul
sbbl
rol
push
dec
mov
mov
adc
test
rcr
in
shrl
xor
lret
daa
lock
adc
cmp
rorl
dec
and
ficoms
pop
jecxz
xchg
cwtl
testl
dec
xchg
in
jmp
dec
push
in
mov
pusha
lods
mov
mov
mov
stos
sbb
lods
fwait
inc
adc
mov
xchg
into
aam
lcall
mov
mov
cmpsb
andnps
es
and
and
addr16
into
std
mov
dec
outsl
sbb
test
movsb
enter
out
loope
xor
xchg
or
lds
xchg
inc
push
xlat
mov
push
mov
mov
sahf
xchg
enter
lods
jbe
sbb
pop
cltd
leave
inc
xor
ljmp
shlb
lahf
mov
or
mov
push
dec
insl
orl
pushf
jae
xchg
and
push
mov
faddp
cmp
push
sbb
dec
cmc
jl
push
lret
icebp
shrb
push
push
add
mov
cmp
jnp
push
xchg
ss
loop
xchg
inc
mov
lcall
inc
cmp
mov
shll
je
rol
jmp
aam
adc
je
xor
std
lods
pop
cmp
pop
in
lods
dec
leave
data16
arpl
jl
test
adc
mov
ljmp
in
sahf
rol
adc
jp
pop
cmp
adc
sub
add
adc
outsb
push
mov
loope
out
inc
mov
mov
imul
or
stos
lret
mov
or
popa
lds
pop
push
ffreep
xor
mov
leave
mov
cmp
inc
sarl
adc
dec
neg
sbb
dec
mov
jns
orb
jp
jg
test
xchg
dec
call
es
jmp
enter
mov
dec
cmp
sti
stos
fnstsw
popa
jb
sbb
dec
notb
mov
in
ficoml
mov
lods
arpl
push
aam
add
inc
iret
jle
test
mov
push
pop
pop
test
xchg
inc
int
std
or
xor
int3
pushf
fldt
fdivr
fisttpll
inc
pop
xchg
in
in
jb
std
das
pop
inc
push
push
test
push
jge
les
popa
jle
ds
jnp
movsl
out
test
cs
pop
jnp
mov
cmpsl
aas
daa
xlat
pop
enter
into
mov
xchg
add
pop
out
mov
dec
xor
in
mov
jns
ja
jle
inc
call
cmp
adc
sub
inc
les
mov
aam
out
xchg
xchg
test
in
xchg
ret
sub
ret
cmp
sbb
pop
addl
cli
scas
lret
xchg
fdivr
or
loope
mov
jne,pt
shll
sub
imul
sbb
push
pop
add
xchg
mov
mov
xchg
cmp
repnz
xor
sub
shrl
xor
daa
ljmp
aas
repz
push
inc
lea
lods
fwait
les
mov
adc
daa
sahf
mov
mov
cmc
pop
adc
inc
cmp
fcmove
xchg
sbb
cld
jmp
stos
jg
fisttpll
shrl
hlt
mov
dec
mov
test
jno
sub
mov
xchg
pop
xor
xchg
cli
inc
sahf
xor
fstl
lret
cmp
inc
sbb
adc
pushf
fistpl
mov
mov
repz
mov
push
repnz
loopne
fsub
pop
sub
dec
pop
cmpsl
cmp
inc
mov
push
cmpsl
fwait
movsl
dec
push
xchg
cwtl
fsub
out
jae
hlt
sbb
gs
sarb
and
push
inc
movsl
sub
or
fstpt
sub
lock
xchg
scas
inc
jp
out
mov
or
loopne
sub
cltd
je
xor
add
cmc
fildl
cmp
xchg
ds
movsb
jno
sub
pop
sub
cmp
mov
mov
adc
inc
es
test
and
dec
pop
xor
cmp
cwtl
loopne
mov
movsl
rorb
fs
xchg
call
out
mov
and
rcll
xor
std
jno
cmp
fidivl
subl
mov
or
xor
movsl
push
push
test
sbb
push
dec
xlat
insb
rcrl
jo
leave
xor
outsl
sbb
cmp
xchg
jl
xor
mov
add
repnz
cwtl
cld
lock
shrb
mov
enter
imul
inc
outsl
mov
xor
sbb
sub
std
xchg
cld
and
jae
test
push
pushf
push
cmp
mov
enter
insl
jae
or
data16
ds
cltd
es
sbb
loop
push
sbb
mov
aam
xlat
bound
push
aaa
mov
sub
test
inc
pop
out
mov
inc
cmc
sub
std
sbb
mov
rorb
sbb
jle
nop
in
mov
aam
out
pop
cmp
inc
imul
sbbl
push
pop
imul
aam
bound
jo
mov
mov
xchg
test
push
mov
dec
ljmp
les
pop
inc
ret
dec
jmp
rcr
ret
das
xchg
fisubs
cmc
cmp
repnz
push
pop
xor
addr16
mov
dec
or
test
roll
mov
imul
orl
dec
add
add
jo
mov
jb
mov
push
flds
and
mov
popa
push
or
and
dec
movsl
test
into
pop
push
mov
lcall
push
jnp
jbe
pop
pop
pop
scas
aas
push
jl
rcll
cmp
sbb
xchg
minss
repnz
aas
fwait
cmp
popf
popf
pop
cltd
test
fmuls
cltd
adc
aas
inc
rcrb
adc
out
xor
and
and
scas
cwtl
cmp
cmp
cmpsl
fmull
addr16
jae
push
ret
dec
movsb
xchg
xor
mov
lock
inc
repnz
mov
cli
imul
push
into
add
les
hlt
out
fldenv
pop
xchg
int3
imul
jge
popf
push
jmp
pop
or
push
add
xor
jl
ljmp
mov
in
loope
adc
jae
xor
push
cmp
cli
in
push
lret
cmp
stos
mov
bound
in
aam
mov
mov
and
cs
xor
push
aad
dec
ljmp
fdivs
push
mov
cltd
or
mov
mov
jg
sub
dec
fiadds
shlb
ds
nop
es
jle
mov
pop
es
mov
jge
in
push
mov
sti
mov
enter
aaa
dec
mov
mov
test
shll
sub
insb
cmpsb
mov
cmp
sti
or
in
cmp
xchg
cmpsl
mov
pushf
jp
or
inc
ljmp
inc
xchg
pop
lock
rolb
mov
sti
sbb
test
xchg
icebp
scas
gs
xchg
stos
cmp
lea
ja
dec
push
push
test
insl
ja
mov
push
sbbl
xchg
arpl
jmp
sub
iret
addr16
mov
push
mov
dec
in
adc
and
test
xchg
mov
or
stos
shrb
xor
rolb
mov
jmp
ja
mov
inc
mov
and
scas
fstps
cwtl
orl
ja
mov
inc
mov
mov
mov
ret
pcmpgtb
xlat
les
pop
adc
leave
prefetch
adc
cli
ljmp
or
mov
addl
out
mov
fstp
in
fnsave
fnstcw
or
push
pop
xor
scas
pop
in
mov
or
sub
ljmp
mov
loopne
xchg
adc
jmp
xchg
jne
icebp
fiaddl
and
ja
repz
adc
int
dec
int
fcomps
sub
mov
ret
daa
mov
shll
arpl
mov
sub
pop
lods
mov
shlb
cli
adc
jno
and
fldt
push
mov
sarl
mov
xor
aam
push
in
push
mov
test
dec
mov
lea
or
sub
bound
shrb
pop
int3
or
xchg
pushf
mov
test
aas
dec
out
imul
cltd
push
xchg
pushw
fwait
test
sub
popa
mov
ficoml
dec
mov
xchg
add
movsl
push
les
in
aaa
pop
adc
cmp
mov
test
lahf
pop
push
cmp
iret
dec
movsb
or
push
or
xchg
mov
in
xchg
sub
sbb
push
add
lahf
or
xlat
fwait
jbe
xchg
lahf
add
pop
sbb
or
lret
lret
xor
adc
incl
fsubrs
mov
aam
inc
and
test
pop
cltd
vpcmpgtq
pushf
push
sbb
lea
lods
pop
adc
jo
mov
int
mov
sbb
xor
lock
lods
jg
outsl
lods
push
cwtl
mov
je
mov
scas
cmc
cmpsb
aad
loop
push
call
scas
je
mov
mov
jl
cmp
call
sahf
xchg
outsb
inc
aad
push
push
and
adc
out
mov
add
mov
out
daa
into
lret
imul
popf
and
or
faddl
and
cmp
mov
inc
dec
lahf
adc
int
push
push
lahf
stc
push
mov
dec
jae
scas
sub
popfw
addr16
mov
push
into
leave
pusha
rorb
int3
loop
fstpt
pusha
jno
adc
aad
rcrl
cmp
or
adc
mov
into
stos
xchg
xchg
or
pop
popf
lods
mov
add
jo
cmpl
and
sbbl
push
fstpt
icebp
sahf
lahf
aaa
or
mov
add
icebp
lret
push
imul
popf
pop
push
push
test
or
pushf
dec
mov
jecxz
jp
adc
icebp
test
inc
and
or
pop
jmp
mov
lcall
sbb
mov
push
jmp
lds
pop
and
orb
ret
mov
out
mov
push
push
fwait
clc
cmp
iret
pop
and
mov
shlw
enter
jns
add
and
jo
mov
mov
popf
jp
xor
and
in
adc
xchg
sbbl
xchg
or
pcmpgtd
xor
pop
jp
cltd
out
ret
daa
sub
jp
sub
fs
ret
jl
and
out
popa
inc
insb
ds
or
pop
xchg
xchg
jle
loope
xchg
push
popf
aas
inc
sub
push
enter
mov
or
shl
pop
adc
or
or
dec
mov
js
std
mov
cltd
enter
cmp
mov
and
mov
sbbl
jmp
test
xchg
div
xorl
in
xchg
test
fstl
jo
adc
outsb
jmp
xlat
mov
xchg
cmpsb
sbb
adc
outsl
inc
jno
mov
lcall
fwait
aaa
mov
call
push
inc
call
outsl
pop
outsl
cmpsb
jb
shll
in
cmp
and
mov
fcmovnb
cmp
jg
xchg
inc
daa
dec
stc
test
dec
clc
and
pop
in
test
sbb
cmpsb
fimuls
aad
or
int
rcrl
les
jne
sbb
mov
dec
dec
fstps
dec
or
data16
cmp
cmp
jmp
mov
aad
push
scas
sbb
inc
fsubl
push
jno
dec
pop
mov
or
pop
dec
andl
mov
iret
mov
mov
aaa
or
pop
mov
loopne
add
popl
sbb
mov
sahf
and
test
mov
bound
pop
push
mov
jo
call
pop
mov
in
incb
mov
divl
es
or
mov
popf
test
dec
loope
stos
jo
cmp
dec
xchg
cmp
mov
hlt
mov
frstor
out
dec
or
cmp
fsubr
xor
dec
xchg
mov
mov
stos
mov
xor
cmc
mov
xchg
mov
mov
rclb
sbb
adc
mov
inc
pusha
or
xchg
int3
push
pop
adc
mov
out
leave
outsl
xor
cmpsl
adc
ret
dec
in
popf
cmp
loopne
sbb
xlat
add
in
xchg
xchg
mov
xor
aaa
xchg
xchg
xor
add
lods
mov
pop
pop
sbb
adc
xor
fstpl
dec
repnz
mov
xchg
gs
jg
push
adcb
ja
mov
testl
fucomip
std
nop
pop
fsts
mov
stc
xchg
fisubs
jecxz
mov
inc
mov
or
xchg
ret
lods
jae
lcall
outsl
inc
pop
push
fs
dec
cs
sbb
add
stos
arpl
mov
in
dec
addr16
pop
outsb
lods
rorb
push
sbb
pop
popf
test
xor
jge
or
repz
xor
xor
fimuls
cmp
pop
mov
jb
cmp
adc
sbbl
call
xor
inc
or
or
and
mov
inc
pop
xlat
adc
mov
adc
int3
fistpl
sbb
cmp
out
movsb
mov
rcl
loop
mov
mov
jge
and
or
mov
orl
aas
das
rcrb
mov
fmuls
mov
icebp
or
pop
or
idivb
mov
daa
faddl
add
jae
push
xchg
and
mov
adc
bnd
call
pusha
mov
lret
push
into
cwtl
cmp
cwtl
test
popa
mov
decl
cs
cmp
stc
sub
lods
je
mov
sbb
or
aam
imul
lea
dec
ret
inc
jg
sbb
inc
sub
mov
lcall
pushf
fisttpll
mov
hlt
loope
out
sbb
sar
mov
mov
repz
pop
or
jo
in
and
cmp
and
fldenv
repz
mov
push
dec
add
bound
pop
or
push
ret
jge
popa
movsl
and
pop
sub
jae
xor
add
or
pop
mov
inc
sbb
sub
xchg
nop
mov
adc
xor
mov
cli
jmp
sub
pop
pop
mov
cmpsl
loop
into
jmp
shll
sub
arpl
outsl
es
out
or
hlt
jns
cwtl
out
mov
cmpsb
push
or
push
add
lret
pop
int3
pop
push
loopne
pop
jb
outsb
jns
adc
or
fwait
lret
cmpsl
movsl
mov
negl
dec
and
leave
shlb
inc
sbb
xchg
scas
nop
mov
jge
xchg
popa
pusha
and
lret
mov
andl
jl
and
mov
das
fisttpll
or
loope
push
loop
push
fmuls
lds
jge
ja
sahf
adc
jle
sahf
in
jb
pushf
sub
outsl
pop
adc
aaa
stos
subb
fnstcw
inc
in
push
dec
cmpsl
push
test
hlt
cmpsl
push
daa
imul
push
cmp
test
movsb
scas
xchg
icebp
mov
push
mov
push
lret
mov
mov
call
and
mov
std
in
lock
xor
push
outsb
sti
cmc
pop
aad
in
xor
inc
lret
sbb
es
in
ror
les
jo
push
bound
and
push
mov
dec
shl
pop
out
or
rcll
les
outsb
jp
icebp
push
repz
fdivl
fs
stc
fistpll
sbb
pop
pop
dec
sub
fwait
pop
sub
cmpsl
enter
out
xchg
jmp
mov
subl
pusha
cli
jb
cld
xchg
ret
jns
fmulp
xchg
add
cmp
cmp
cwtl
xor
lcall
mov
aam
jl
add
arpl
adc
in
xor
sbb
test
push
mov
jg
sbb
out
subb
lods
iret
dec
cmpsl
cmc
dec
movsl
jo
sbb
insb
les
orl
stos
and
push
mov
or
mov
mov
loope
ds
loope
adc
test
mov
push
sub
call
xchg
jmp
push
ret
pop
popa
testb
jae
push
push
or
inc
dec
or
pop
pop
ljmp
out
add
and
pop
shrl
lcall
and
fmul
int3
jb
sbbl
adc
push
push
loop
mov
jg
dec
test
ss
idivl
xor
mov
push
insb
test
or
inc
xchg
incl
jge
mov
mov
test
fs
ss
cmp
aas
inc
jbe
pushf
pop
push
jmp
jp
pop
xchg
push
shl
xor
aad
jnp
in
ficoms
mov
loop
jbe
mov
test
dec
call
test
imul
inc
sbb
mov
mov
cmp
push
push
xor
mov
pop
lds
pop
nop
data16
dec
jns
pop
dec
sbb
shlb
push
mov
mov
negb
rcrl
jnp
and
pop
fs
ret
mov
mov
xchg
add
jle
sub
and
stos
std
push
in
pop
movsb
mov
fisttpll
movsb
pop
js
lods
push
jae
pushf
sahf
jae
mov
stos
movsl
dec
xorb
jno
xchg
dec
mov
lock
add
jb
and
push
mov
jb
cmc
cmp
mov
mov
enter
pop
inc
push
test
imul
in
xor
ja
inc
push
flds
cmp
push
pop
jl
fdivp
dec
or
mov
jno
mov
pop
cld
cmp
lds
addb
lahf
lock
js
cmp
dec
push
les
pop
mov
pop
scas
pop
pop
pop
out
popf
scas
hlt
add
mov
jae
stos
aad
jg
lea
mov
js
jmp
ss
push
subb
dec
xor
sbb
movsb
fadd
lcall
xor
inc
or
cmp
push
gs
mov
or
sti
lds
xchg
push
jne
in
shl
mov
inc
aad
pushf
adc
mov
cwtl
mov
push
scas
add
test
inc
and
shufps
inc
jge
dec
mov
pushf
mov
push
xchg
fwait
shlb
push
mov
cli
dec
out
mov
pop
sbb
add
aam
xchg
stc
adc
out
das
push
fimuls
mov
and
dec
in
jl
in
mov
cli
jb
addr16
push
repnz
outsl
sti
int3
repnz
inc
mov
or
sbb
movsl
sub
cmpsb
std
fisttpll
xor
xor
push
push
or
pop
icebp
fxch
and
jo
int3
mov
jle
pop
lcall
dec
cld
popf
pop
jl
in
pop
cmpb
movsb
xchg
frstor
xchg
push
insl
cmp
and
clc
cmp
lret
insb
imul
push
lea
dec
jns
in
fs
int
push
pusha
insb
scas
fwait
into
add
jns
paddd
pop
push
add
push
aam
mov
fbld
sbb
pop
dec
xor
cmp
lods
inc
adc
fs
ret
cmpb
movsl
andb
shrl
js
cltd
push
jecxz
and
hlt
mov
mov
pop
subb
pop
stos
popf
mov
in
in
popf
inc
xchg
rcr
push
test
xor
fsubr
arpl
mov
jae
cli
adc
das
jg
les
dec
les
and
jle
push
mov
or
pushf
pop
lcall
add
or
cmp
rolb
pop
std
xor
push
sbb
movl
jmp
test
cmc
nop
adc
sbb
js
mov
dec
sub
sbb
mov
jmp
lods
pop
mov
test
jae
sbb
test
sub
orl
mov
mov
jl
iret
sbb
adc
mov
stos
sub
dec
cmp
xlat
fnstcw
sub
fcompl
dec
dec
mov
cld
sub
les
leave
les
jp
mov
jns
xchg
rcrl
jne
mov
or
inc
out
cmpsb
pop
lret
xchg
iret
mov
cli
aad
int3
inc
or
test
dec
mov
mov
fwait
mov
push
hlt
inc
or
imul
push
fbstp
fimuls
jne
jbe
mov
rcl
add
jnp
xor
movsb
mov
popf
push
sub
sbb
icebp
sub
sub
push
lcall
jmp
ret
cmp
xlat
lds
pop
jl
dec
das
pushf
mov
hlt
cmp
mov
or
mov
shl
cs
xlat
ret
test
xor
loop
mov
call
shrl
sti
aad
dec
cmp
pop
pop
and
inc
mov
scas
rcl
sub
cmp
add
paddq
sbb
insb
xchg
jecxz
pop
adc
imul
aas
inc
mov
cwtl
in
mov
mov
lret
je
dec
clc
pop
xchg
xchg
out
sub
add
imul
mov
icebp
lret
mov
adc
fcom
xchg
cmpsl
dec
lcall
mov
xchg
pop
push
jecxz
ljmp
jnp
fs
ja
jae
orb
push
sbb
xchg
bnd
sbb
outsl
pop
mov
and
cmpb
ja
sbb
mov
pop
sub
out
cmc
and
adc
sbb
je
leave
sbb
add
fsts
fisubrl
pop
adc
outsb
ss
shlb
movsl
stos
mov
pop
and
pop
xchg
pop
test
fwait
std
or
lds
jns
mov
pop
sub
adc
mov
or
int
pop
sbb
add
mov
sbb
sarb
fisubs
notb
push
push
repnz
sub
out
adc
xorb
sub
xchg
or
enter
push
pusha
mov
js
jg
shl
push
outsl
dec
lods
shlb
jnp
mov
iret
sbb
in
fsubs
mov
sbb
iret
dec
cltd
sbb
daa
mov
rcl
xchg
adc
cmp
xchg
or
jecxz
cli
jb
int
mov
push
pop
data16
and
in
jmp
lock
jmp
dec
jle
and
bound
ret
sbb
mov
jl
ljmp
fnstenv
cmpl
jns
adc
out
mov
mov
sbb
mov
push
scas
sti
pop
jnp
orl
fnstsw
jmp
cmp
call
and
inc
pop
sub
loop
pop
clc
loop
into
ja
mov
push
iret
dec
push
adc
inc
icebp
mov
sbb
lret
stos
aad
sahf
fbld
jecxz
hlt
inc
in
bswap
jnp
push
sbb
and
mov
cmp
aaa
js
fucomi
xchg
add
mov
fwait
stos
dec
adc
sbb
inc
gs
cli
xor
fstpt
add
arpl
sbb
inc
xchg
mov
vmread
mov
mov
xchg
inc
in
cmpsl
mov
loope
sub
sbb
xchg
in
aam
cs
loopne
push
mov
fs
cmpsb
pop
cltd
inc
push
outsb
sbbb
cs
and
jecxz
pmuludq
inc
dec
nop
push
mov
xchg
popl
xchg
pusha
adc
dec
xchg
ret
push
jbe
cltd
imul
test
jno
mov
cld
ret
add
in
lret
mov
fcmovnb
pusha
cmpsb
cmpsb
cmp
dec
xor
les
data16
dec
repnz
lret
mov
mov
pop
sbb
mov
imul
outsl
fwait
stos
outsl
xchg
sti
xor
mov
push
xchg
sbb
dec
jo
shlb
and
and
incb
xor
fdivr
movsl
mov
push
das
aad
sbb
dec
cmp
pop
or
in
xlat
sub
std
lds
scas
sbb
jl
shrb
or
icebp
cmc
add
test
jmp
fstps
xchg
das
adc
jno
fistl
call
xchg
out
notb
xchg
mov
adc
inc
iret
imul
loope
mov
jge
mov
adc
sbb
dec
mov
inc
mov
add
mov
xor
imul
call
mov
nop
repz
dec
mov
scas
dec
mov
js
cmc
xchg
lahf
jmp
mov
loop
pop
mov
sti
lret
mov
push
lods
ljmp
or
mov
push
movsl
cmp
pop
aas
stos
arpl
icebp
mov
xchg
cmp
lock
aam
rcr
push
mov
out
lcall
sub
and
sbb
into
add
ja
or
jl
mov
int3
fidivl
xor
jecxz
jbe
roll
and
js
popf
popa
add
nop
pop
clc
and
in
loopne
pop
lods
inc
cmp
and
dec
cltd
xor
std
mov
sbb
jg
jmp
xchg
pop
jmp
out
xor
cmp
jnp
adc
push
stc
xchg
out
pop
dec
bound
mov
repz
stc
inc
rcrl
stos
movsb
cltd
sub
push
fidivrl
roll
mov
rep
xchg
mov
sbb
insb
aam
jns
mov
dec
pop
lods
loopne
cld
lea
inc
nop
repz
bound
movsb
aaa
mov
icebp
lods
push
loope
leave
sbb
add
dec
dec
add
add
mov
or
test
xchg
sub
inc
jp
in
mov
test
add
push
ud0
into
mulb
lea
cmp
add
sub
sbb
mov
outsb
outsl
lcall
lods
mov
push
pop
scas
inc
xlat
jne
sub
add
sbb
and
cmp
mov
cmovns
add
pop
mov
ja
pop
sti
mov
sahf
scas
call
arpl
xchg
sarb
in
or
add
stos
cld
into
inc
out
mov
scas
add
inc
roll
jl,pt
ret
test
sub
and
mov
fwait
sbb
cltd
jnp
inc
movsl
outsl
mov
cmpsl
jle
xor
and
xchg
in
out
dec
dec
iret
mov
jp
jo
arpl
dec
xchg
adc
push
cmp
add
cmc
adc
mov
xchg
dec
xchg
mov
hlt
daa
push
mov
subl
dec
pushf
inc
add
call
cld
cltd
aas
rorl
push
sbb
add
inc
adc
cmp
scas
andl
dec
enter
test
sbb
cmp
mov
adc
js
pop
mov
and
out
sub
jne
mov
lret
sub
shrl
pusha
and
sbb
fisubrl
or
arpl
movsl
fwait
dec
cmpsb
frstor
push
adc
inc
aam
mov
and
mov
fdivr
inc
cmc
enter
push
xchg
push
jno
add
xchg
mov
sahf
xchg
cltd
std
fldcw
mov
jmp
xchg
pop
push
adc
test
xor
sbb
repz
test
mov
ljmp
mov
xor
and
lock
test
test
call
cmpsl
inc
cmp
imul
out
mov
pop
enter
inc
into
mov
ljmp
pop
pop
shrl
js
cmp
in
push
jle
mov
mov
in
dec
dec
call
mov
xchg
mov
mov
lcall
pushl
scas
cmp
mov
xor
xlat
movb
mov
push
push
inc
iret
movsl
out
lret
cltd
in
pop
mov
xor
sbb
int
or
pop
insb
das
xor
lcall
js
movsb
inc
repz
inc
inc
cli
jmp
dec
dec
cmp
xchg
fdiv
hlt
stos
mov
pop
mov
lods
das
mov
or
xor
popf
cmp
test
addr16
xchg
or
mov
test
jo
in
or
movsl
imul
inc
out
mov
out
cli
lock
leave
inc
pop
cltd
fmull
shrl
in
ret
inc
add
mov
inc
mov
jb
cli
hlt
call
cmpsb
rorl
push
push
rorl
int3
hlt
dec
aam
and
xchg
dec
cli
loope
pop
push
push
mov
or
mov
lea
xchg
inc
inc
inc
stos
jb
push
pop
jg
insb
andb
test
inc
jne
xchg
sti
push
aas
lret
mov
jne
mov
jo
pop
popf
jo
fwait
mov
pop
stos
or
push
cmpsb
jae
imul
mov
es
insl
into
sahf
repz
stos
lahf
mov
clc
add
xor
stc
mov
call
out
lret
addr16
cmc
lods
out
cmp
inc
lea
push
cmp
push
cwtl
jb
push
pop
mov
into
ficoml
adc
sub
mov
fcomps
adc
lds
mov
aas
js
dec
jbe
cs
dec
outsb
mov
daa
cli
adc
js
negb
or
or
in
jmp
jo
fucomp
cmp
test
iret
out
sti
mov
dec
fsubr
jne
lcall
je
cmp
or
push
test
mov
js
mov
lcall
or
addr16
mov
push
loopne
outsl
loopne
jecxz
fsqrt
jge
or
and
insl
mov
mov
les
mov
and
mov
sub
cltd
xor
sar
mov
xchg
add
cli
sub
rorl
and
ficoms
adc
ja
push
push
bound
outsb
xchg
adc
push
in
xor
fmul
mov
and
and
cltd
clc
mov
dec
nop
and
inc
in
insb
pop
in
je
movlps
cmp
shlb
mov
stc
push
mov
mov
aas
fidivl
movsl
pop
pop
xlat
out
shlb
ret
cli
or
adc
fwait
aam
push
sbb
inc
aas
dec
dec
pop
mov
sub
js
mov
push
sub
mov
inc
gs
mov
mov
cmp
mov
mov
fistpl
sahf
or
js
into
add
mov
jmp
dec
push
enter
loopne
je
jge
sbb
mov
movq
cmpsb
inc
dec
mov
out
xchg
add
lcall
inc
mov
std
das
and
push
cmp
cli
pusha
mov
cmp
lods
bound
jns
xor
addb
jecxz
insb
jg
js
cwtl
jg
xlat
dec
push
daa
pcmpgtw
push
xchg
xor
ljmp
idiv
idivb
dec
movsl
aad
cmp
cmp
cmc
je
or
loope
jl
outsl
adc
testb
sbb
pop
dec
mov
xchg
sbb
push
outsb
fsubrl
mov
add
xorl
pop
dec
sbb
imul
inc
mov
or
mov
rcrl
jecxz
sub
pop
xor
xchg
mov
loopne
roll
scas
mov
mov
xchg
add
xchg
jl
mov
mov
addr16
dec
call
popa
cmp
or
sbb
lahf
or
dec
mov
jle
inc
xor
idivl
out
mov
mov
jecxz
xchg
je
mov
mov
adc
imul
sbb
cmpsb
inc
fnstsw
loopne
fwait
or
mov
mov
sub
imul
lret
mov
mov
js
dec
push
pop
scas
ret
dec
mov
mov
xchg
or
loopne
lods
push
push
aas
out
rorl
push
pop
rolb
dec
push
cltd
jmp
rcl
mov
aam
call
cld
repz
aad
sbb
add
mov
ljmp
fistps
sbb
fisubl
sbb
sbb
das
mov
push
notl
jno
jnp
xchg
mov
das
mov
push
adc
nop
xlat
ds
dec
adc
pmullw
enter
jecxz
adc
adc
or
push
or
or
jne
dec
xchg
sbb
test
xchg
adc
adc
cmp
cmp
testl
xchg
ss
sbb
push
aas
pop
or
fidivrs
ret
aaa
mov
mov
fsubl
sub
aas
mov
mov
cmc
iretw
adc
int
out
call
outsb
add
push
data16
ficoml
enter
add
xor
mov
arpl
sbb
adc
inc
shl
pop
xor
insl
xor
cmc
xor
sarl
loope
xchg
push
loop
jmp
mov
mov
enter
out
jbe
stos
addr16
xchg
es
jno
xchg
mov
or
inc
popf
jecxz
add
roll
mov
daa
xchg
pop
jmp
loop
es
adc
into
pusha
mov
pop
ficompl
outsb
push
ret
sbb
inc
inc
sbb
or
lret
push
js
pop
aaa
sti
ljmp
stos
movsl
imul
xchg
inc
adc
roll
in
cmp
popa
push
or
loopne
sbb
dec
pop
icebp
loope
push
lea
in
or
cmp
mov
jo
loopne
outsb
rcrl
out
iret
into
pushf
bound
sbb
mov
adc
outsb
inc
pop
add
add
push
int3
cmpsl
loop
insb
and
gs
lods
xchg
fiaddl
std
and
in
inc
xorl
or
lds
sahf
outsb
add
adc
xor
sarb
addr16
out
or
dec
das
cmp
std
bound
mov
movsl
out
xor
loope
pop
xchg
inc
out
push
push
loope
or
out
mov
pop
rolb
sbb
cmp
jne
ficompl
add
sbb
mov
jp
addr16
sub
push
inc
cld
jge
mov
into
mov
add
jno
push
ja
sahf
test
imul
mov
push
mov
pop
mov
movsb
sbb
pop
leave
cmp
sub
jns
xchg
adc
outsl
inc
pusha
aaa
cltd
mov
lods
cs
rcrl
movsl
ljmp
or
icebp
js
fs
mov
clc
ret
lret
mov
xchg
add
in
jmp
cmp
jo
mov
test
cmp
les
sub
loopne
cmp
mull
xchg
pop
dec
and
mov
adc
dec
subb
lea
mov
and
mov
or
dec
add
xor
and
stc
in
inc
cmpsb
bound
add
rcrb
out
movsb
nop
pop
dec
mov
jp
mov
out
mov
mov
leave
nop
int
lret
mov
js
scas
jl
in
xchg
xor
scas
fsubl
pop
fldcw
cmpsb
add
cmpsl
outsb
out
cmp
pop
iret
mov
mov
outsl
mov
fucom
add
dec
inc
out
fstpl
xchg
inc
mov
jle
sbb
lods
push
lock
sbbb
lods
cwtl
dec
or
je
in
in
fwait
in
mov
mov
scas
notb
out
and
cmp
inc
cmc
lret
popa
hlt
push
rcrl
leave
jmp
cltd
fiadds
mov
lock
movsl
je
xchg
jg
cwtl
mov
sub
xchg
mov
xchg
outsl
push
adcl
xor
repnz
xor
outsl
xchg
cmp
gs
out
sbb
bound
pop
cmp
les
dec
push
adc
and
js
fs
cmc
shrb
jo
popf
icebp
inc
jne
cmp
outsl
mov
add
repnz
stos
mov
lods
outsl
cmp
lods
xchg
ljmp
ja
negb
pop
sub
push
add
repnz
and
add
lahf
sbb
in
into
dec
xor
std
push
mov
sub
adc
mov
idivb
inc
push
or
insl
push
pop
add
loopne
pop
jmp
mov
out
dec
xchg
push
lret
adc
mov
mov
mov
jae
and
movsb
out
adc
add
dec
pushf
in
inc
mov
add
inc
sub
dec
test
scas
jp
or
nop
xchg
pop
push
mov
mov
clc
addr16
movb
mov
fsts
mov
lods
inc
mov
icebp
pop
ds
int3
push
scas
sub
js
clc
mov
dec
dec
mov
pop
dec
sbb
jg
fwait
or
sub
lods
cwtl
mov
int
pop
sub
test
stos
movsb
andb
sbb
pop
popf
push
cmp
xchg
inc
cmc
in
jae
mov
lcall
or
lret
push
sub
xchg
xchg
and
iret
dec
int
push
ficomps
push
inc
and
push
cltd
test
arpl
cmp
xor
dec
in
stos
and
stc
sahf
repnz
pop
mov
sbb
xchg
dec
push
movsb
test
add
xor
roll
ja
pop
daa
mov
mov
and
aad
push
or
mov
mov
jle
add
outsb
sub
lret
xor
cld
mov
pop
imul
lahf
mov
lret
jbe
mov
in
adc
inc
ja
jle
sahf
sbb
push
pmaxsw
ja
hlt
mov
adc
xchg
sub
mov
push
in
fwait
add
adc
and
fwait
and
jge
insl
mov
jmp
jmp
inc
lds
daa
xor
pop
dec
cld
es
push
inc
sub
mov
push
inc
xor
leave
outsl
cmc
push
and
movsl
mov
sub
xchg
mov
inc
sub
mov
add
cmpsb
roll
cmpsb
inc
add
les
adc
cmc
ljmp
ret
add
idivb
sub
arpl
xor
push
mov
adc
jbe
mov
jb
test
loop
push
dec
xchg
adc
pop
and
inc
ficompl
jae
xchg
scas
movsb
xlat
pop
test
mov
sub
icebp
shlb
sbb
cs
psrld
hlt
push
adc
mov
jno
notb
outsb
scas
insb
xchg
push
jo
je
ja
mov
arpl
test
movsl
loop
stc
dec
test
jne
jge
xchg
mov
pop
sbb
cmp
es
popa
cmc
test
jb,pt
lea
ds
outsl
mov
cmpsb
addr16
shl
insb
leave
mov
inc
repz
adc
fs
jp
sarb
jge
arpl
stos
and
in
stc
fdivrp
adc
pushf
ss
pop
mov
mov
aam
or
mov
or
decb
out
clc
dec
lret
mov
mov
lret
sbb
mov
and
mov
sub
stos
cwtl
data16
ret
shrb
jb
lods
sub
scas
std
out
and
pusha
hlt
out
and
fnstcw
xchg
bound
dec
dec
xlat
pop
ds
hlt
add
and
sti
stc
clc
clc
rcll
inc
in
cwtl
outsl
sti
jnp
rcrb
push
std
test
jmp
data16
inc
stos
push
in
xchg
je
lods
pop
push
inc
pop
outsb
sub
xchg
fsubrl
cmpsl
xchg
add
push
pop
sbb
mov
aad
xor
push
notb
xchg
push
out
movsb
pop
push
sub
gs
shlb
mov
jl
mov
jnp
dec
nop
inc
cmpsl
fnstenv
rorb
cmpsb
mov
mov
sar
outsb
sbb
adc
ja
aad
into
cmp
xor
push
sub
jae
sbb
adc
nop
add
lahf
sahf
pop
ret
pushf
and
frstor
test
dec
mov
xchg
icebp
push
aam
mov
fiaddl
and
dec
inc
add
or
in
cltd
mov
imul
es
sbb
push
stos
fistpll
pop
lcall
iret
jmp
les
lods
stc
lds
jmp
out
push
sbb
imul
adc
pushf
or
out
fcomps
popf
xchg
push
dec
mov
pushf
es
mov
pop
test
test
fdivp
outsb
inc
shlb
int
pop
and
jmp
mov
sub
mov
movsl
insb
int
out
mov
pop
mov
out
mov
dec
xor
push
popf
out
subl
loope
in
push
mov
mov
sub
insb
adc
pop
scas
dec
fstps
push
adc
jp
mov
sbb
push
sub
add
push
imul
xor
test
mov
popa
and
sub
mov
lcall
push
sarb
dec
sbb
mov
pop
mov
mov
xor
fsubs
lea
push
outsl
test
loopne
adc
clc
add
mov
sbb
add
push
adc
imul
std
push
or
jo
repnz
outsb
xor
xchg
dec
loope
xorb
les
call
sbb
or
cmovbe
push
es
icebp
mov
jl
fidivrl
mov
cmp
hlt
enter
mov
sbb
sub
adc
cltd
pop
lods
in
cmp
aad
mov
filds
mov
or
add
lcall
sub
into
jns
adc
jle
push
add
jns
std
dec
push
adcl
jae
or
inc
mov
test
cli
cmpsb
imul
into
and
pop
inc
shrb
imul
in
add
pop
repz
inc
cmp
and
jae
inc
sub
cmc
leave
jecxz
aam
sahf
mov
sahf
or
inc
jp
pop
sbb
or
add
pop
dec
dec
outsb
test
sar
aas
adc
xchg
xor
sbb
sbb
push
xor
in
scas
push
rclb
sbb
mov
jmp
push
or
stos
jns
das
mov
mov
enter
mov
push
cmp
in
sbb
ficoms
loopne
scas
sbb
int3
in
cmpsb
mov
xor
jnp
push
into
iret
enter
cmp
mov
xchg
scas
xchg
popf
fisubl
xor
push
push
or
push
and
gs
imul
shll
addr16
icebp
cmp
lods
mov
je
sub
push
dec
in
sbb
in
mov
ret
mov
mov
xchg
ret
test
cmp
imul
test
push
dec
or
ret
lret
xchg
fsubr
lock
call
daa
inc
inc
mov
negb
xchg
outsb
sahf
stc
or
dec
jbe
dec
mul
fidivl
xor
dec
and
faddl
cld
int
mov
test
jge
ja
pop
push
loop
insb
mov
arpl
cwtl
mov
imul
or
sub
xor
mov
xor
add
or
mov
js
mov
adc
pop
push
iret
mov
int
fs
fsubl
mov
mov
jae
andb
push
ljmp
adc
or
mov
push
jg
sahf
mov
xor
mov
cmpsl
inc
dec
pop
xorb
rorl
sbb
adc
xor
mov
mov
notl
xchg
mov
or
clc
mov
xchg
adc
outsb
add
daa
outsl
test
xchg
test
jns
shl
subl
inc
cmp
psllq
mov
icebp
es
dec
test
test
lcall
insb
imul
jae
test
in
clc
pop
cmp
pop
dec
arpl
inc
sbb
sbb
dec
add
das
xchg
sbb
es
pop
in
rcl
inc
inc
xchg
cltd
adc
and
and
and
jo
lods
sarb
jge
lods
test
fildl
nop
fldcw
sub
xor
push
jge
lea
out
rorb
or
mov
add
jns
and
add
outsb
scas
rcll
lahf
scas
push
pop
ss
decl
das
cmp
cmp
xor
and
ret
rorl
movsl
sarb
imul
sbb
jns
std
jae
ljmp
push
jo
or
lcall
jg
mov
inc
push
popl
adc
push
pop
fs
das
out
xor
cld
test
scas
imul
pop
testb
rol
mov
cmc
aad
mov
lea
jne
int3
mov
push
daa
and
push
roll
int3
loopne
adc
push
in
into
repz
ret
cmpsl
lcall
pop
jg
and
push
xchg
decb
movsb
popf
sub
mov
inc
sbb
xchg
jle
dec
mov
push
dec
ret
cmpsl
adc
aam
in
or
inc
xor
outsb
insl
leave
outsb
add
sub
arpl
add
mov
jmp
pop
and
sbb
ds
ficoml
and
xorb
outsb
push
jno
adc
mov
cmp
push
mov
aas
int3
pop
ds
and
addr16
pop
negb
idiv
pop
sbb
fincstp
sub
ja
push
xchg
mov
mov
loopne
mov
lods
add
cmp
inc
fsubs
and
stos
or
xchg
flds
dec
jecxz
sbb
push
jg
mov
xchg
sub
push
rcr
fmul
fwait
or
or
in
rcrb
push
std
jnp
fsubp
mov
push
movsb
mov
pop
lods
jb
dec
cmp
add
imul
push
lods
jns
mov
movsl
pop
add
das
sbbl
xchg
push
mov
xor
inc
ja
jge
or
pop
filds
or
les
frstor
push
dec
js
test
cmc
xchg
stos
repz
jno
pop
scas
lods
jle
cltd
fisttpl
add
movsb
imul
cltd
stc
loopne
orb
pop
std
ljmp
addl
push
cmp
arpl
xchg
rcrb
xchg
imul
mov
insl
dec
xor
inc
mov
mov
mov
mov
add
cmp
loop
daa
mov
sbb
dec
pushf
inc
cwtl
cwtl
adc
hlt
sbb
mov
sbb
movsl
jle
xchg
aad
cwtl
sub
sbb
aam
mov
xor
mov
imul
cmpsb
adc
push
or
dec
push
out
popf
stos
mov
sti
loopne
jbe
adc
push
or
sbb
inc
loop
mov
mov
out
cmc
sub
mov
hlt
pop
inc
dec
fistl
in
fcoms
sbbb
xor
aaa
fsubs
xor
into
and
push
inc
adc
push
lea
pop
int3
pop
jbe
pop
push
add
jae
pop
mov
fwait
push
sub
or
fimuls
inc
movsb
pop
std
ret
inc
jecxz
loopne
addr16
jle
cmpsb
xchg
and
les
int
sub
mov
adc
mov
jns
xor
mov
loope
inc
mov
xchg
jmp
adc
gs
adc
dec
pop
fwait
push
cmpsb
andl
popf
lret
xor
pop
popa
loop
lret
inc
jp
pop
into
mov
inc
je
mov
inc
popa
aad
push
and
call
loopne
lds
dec
lcall
lret
aad
jecxz
sub
jl
jae
shll
xchg
ds
iret
jp
mov
dec
jl
jle
test
mov
mov
mov
mov
ja
out
and
dec
kmovw
add
mov
sub
test
xor
mulb
mov
adc
mov
pop
insb
aaa
adc
push
sbb
scas
test
icebp
mov
unpcklps
dec
mov
sbb
aaa
sub
pop
jo
xor
sbb
or
sbb
jp
push
jnp
mov
jge
aaa
xorl
daa
cmp
pop
sbb
movsl
push
daa
mov
or
daa
pop
push
inc
scas
out
xchg
ss
mov
lret
insb
rorb
mov
xlat
add
outsb
cs
icebp
nop
mov
xor
mov
lcall
pop
jp
rclb
aas
das
scas
inc
bound
mov
sub
mov
loop
gs
adc
inc
test
inc
xorl
sarb
hlt
fsubs
fisubs
mov
insl
outsb
inc
xor
fwait
inc
ja
push
jmp
cmp
pop
sub
jns
adc
test
lret
push
dec
pop
mov
mov
pop
sqrtps
aad
mov
add
inc
mov
inc
mov
cld
pop
mov
hlt
stos
mov
dec
hlt
std
int3
cmp
imul
outsl
enter
inc
xor
push
inc
cmp
movsl
fimull
cmp
xchg
add
and
dec
sbb
push
jno
insl
xchg
xchg
inc
xchg
cmp
lea
ret
aam
nop
inc
sbb
stc
mov
test
push
or
mov
xchg
repz
jle
ja
lods
lods
lea
adc
mov
je
sub
mov
int3
cmp
mov
push
add
pop
fstpt
add
cmpsl
fiadds
add
ret
jno
incl
mov
or
adc
push
iret
or
loop
loop
shlb
sbb
incl
mov
xchg
pop
ds
and
stos
mov
shrl
popa
push
ja
pop
jne
xor
cwtl
call
push
xor
mov
inc
adc
push
inc
aaa
shrb
int3
push
movsl
mov
lock
in
push
das
mov
fdivrp
aam
int3
push
les
icebp
cmp
add
dec
out
cld
divb
mov
jmp
loop
std
mov
push
movsl
out
inc
push
lds
inc
scas
pusha
inc
fbstp
int3
jmp
xchg
xor
int
xchg
insl
push
xor
sbb
mov
xchg
mov
and
lret
loope
ret
sbbl
jns
or
inc
aas
popf
inc
lods
cmc
lods
jmp
out
test
add
xchg
mov
push
mov
pop
sub
mov
test
dec
dec
sahf
das
leave
shlb
mov
int3
rorb
or
xchg
cmc
mov
push
scas
jns
fidivrl
les
push
inc
cmc
popf
bound
dec
mov
sub
dec
cmp
fs
sahf
cmp
repnz
mov
mov
push
repz
adc
test
test
int
mov
mov
and
ss
xor
sbb
mov
mov
push
scas
call
nop
mov
out
add
mov
adc
adc
pop
add
int3
ret
out
out
shll
mov
fadds
xor
fcompl
adc
pop
ljmp
inc
out
mov
dec
aas
arpl
jno
cmp
xor
push
aam
lahf
mov
cmpsl
insl
cmp
test
ret
imul
mov
sbb
and
inc
fs
shlb
push
aaa
leave
pop
mov
push
mov
in
add
fld1
cli
sbb
clc
shl
into
jno
shr
inc
les
daa
div
cmpsl
dec
sahf
and
test
jg
mov
fcomip
adc
aad
and
inc
inc
bound
out
jge
and
inc
add
popf
fdivr
xor
out
mov
fwait
std
imulb
shlb
sub
je
leave
sbb
sarl
jmp
mov
int3
and
or
shrl
and
pop
cmp
outsl
pop
test
aas
psadbw
ds
int3
xlat
clc
push
fistpll
inc
aad
inc
mov
out
repz
aam
repz
jo
add
pop
xor
xchg
inc
push
stos
sbb
inc
pop
test
xor
imul
xor
in
fisttpll
pushf
jne
leave
adc
mov
loope
cmpsl
jmp
sbb
mov
es
cmp
cmp
sbb
stos
outsl
dec
dec
inc
fdivl
int3
cmp
pop
cmpsl
arpl
push
ret
mov
stc
xchg
ret
fwait
pop
imul
jmp
stos
mov
jecxz
sti
jne
sbb
fidivrs
mov
nop
push
add
push
das
lcall
push
dec
out
cmp
mov
loope
push
test
inc
and
adc
fdivl
jo
in
adc
xor
scas
ss
aam
mov
mov
push
dec
and
inc
dec
stos
fisttpl
loope
ja
add
jbe
pop
scas
xor
pop
scas
std
loope
jno
fldz
jmp
push
xchg
or
push
lcall
sub
mov
mov
gs
mov
jle
jae
repnz
inc
push
fisubrs
jmp
cltd
cmp
pop
arpl
in
filds
fisttpll
jg
mov
jecxz
loopne
stos
or
mov
or
pop
and
clc
sbb
lret
xlat
push
mov
lods
mov
xor
rclb
mov
pop
aas
outsl
push
or
pop
stos
push
jo
sub
adc
push
pop
out
mov
xchg
cmpsb
ja
fucomi
mov
adc
in
nop
loope
xchg
mov
enter
push
mov
or
mov
push
sub
test
mov
pop
fld
cmpsb
data16
inc
pop
icebp
insb
faddp
repz
cmp
jecxz
mov
aam
lahf
sarb
sbb
ss
jnp
clc
dec
sub
or
js
test
xchg
mov
push
cmp
dec
xchg
fcompl
sub
pop
nop
xlat
nop
mov
psrlq
mov
add
stos
pop
mov
or
mov
mov
mov
pushf
lcall
sub
inc
out
test
push
xor
adc
in
test
mov
pop
mov
jno
pusha
jnp
mov
jl
cmp
cmpsl
cs
cli
push
notb
int3
lock
mov
dec
enter
inc
je
lods
inc
push
lea
jmp
in
push
ds
stos
jmp
xchg
xor
nop
sub
test
je
sbb
mov
rclb
push
fcomp
mov
xchg
pop
sbb
sets
inc
loop
lds
sbb
ss
cmp
pop
adc
dec
dec
push
pop
das
stos
imul
in
or
mov
push
xor
jl
into
jnp
jne
movsl
testb
dec
nop
outsb
jno
mov
sub
bnd
pusha
dec
add
mov
es
movsb
mov
arpl
dec
mov
repz
mov
add
lock
xor
add
das
insl
adc
mov
ret
into
mov
mov
xor
jnp
xchg
or
sub
loopne
inc
fnstcw
push
mov
xchg
cmpl
js
fsts
out
jmp
in
xchg
movsl
xchg
popl
stos
pop
dec
mov
test
cli
xchg
insl
jg
xor
test
mov
out
or
add
daa
scas
sbb
cmp
loope
sub
or
xchg
mulb
mov
pop
data16
inc
mov
pop
and
outsl
inc
popf
pop
pop
ret
pop
inc
and
mov
inc
jbe
movsb
sbb
pop
push
jge
fsave
rcl
popa
lods
mov
cmp
aam
cmp
mov
sub
add
and
loopne
cltd
or
sbb
cmc
dec
sahf
es
in
js
or
nop
pop
fwait
sub
scas
jmp
mov
jbe
nop
movsl
pop
lret
incb
or
pop
xchg
stc
orl
sbb
mov
cltd
sub
test
cmp
in
and
cld
inc
sahf
mov
cmpb
xchg
stos
jbe
and
lock
inc
push
xchg
daa
mov
inc
cmp
xor
and
les
ds
stc
mov
into
dec
dec
xor
cmpsb
imul
fcoms
out
xchg
sbb
aad
push
ret
push
int3
in
mov
testl
mov
in
add
loope
or
add
or
adc
mov
mov
jns
popf
xorl
jnp
ljmp
rorl
push
jg
dec
adc
das
sti
cwtl
and
jp
pop
ljmp
mov
xor
mov
cmc
ret
loop
sbbl
pushf
cmpsb
dec
lods
in
xchg
mov
jle
or
loopne
pop
dec
jle
xor
fcompl
adc
insb
iret
cmp
mov
insl
scas
xchg
and
out
adc
jecxz
out
mov
sbb
mov
cltd
push
dec
lahf
adc
sub
mov
das
mov
jns
jns
gs
lea
inc
mov
mov
js
pusha
lods
scas
mov
xchg
cs
pop
loopne
fistps
mov
sub
or
loop
nop
sarb
es
xlat
iret
cmp
or
push
ds
sub
fwait
pop
loopne
fisttpl
addb
jbe
subb
xlat
sar
adc
mov
and
sti
mov
dec
xchg
dec
inc
mov
cmpsl
hlt
sbb
push
insl
xor
lahf
pusha
aad
pop
cld
loopne
outsl
cltd
add
jo
mov
dec
cs
mov
mov
sub
add
pop
ret
jl
cmpl
jg
mov
and
sahf
dec
movsl
in
stos
add
pushf
cmp
sti
sub
mov
push
ljmp
sti
cmp
dec
lret
pop
pop
adc
inc
outsb
leave
ljmp
sti
cmpsl
jmp
ja
cli
test
pop
inc
fmull
les
mov
inc
push
mov
xor
ret
iret
outsb
das
dec
daa
divl
aaa
mov
lahf
xlat
and
les
or
leave
jnp
pop
xchg
out
mov
adc
faddl
int3
jmp
pop
adc
and
xchg
cmpb
mov
cmp
in
loopne
add
shl
xchg
cs
js
jno
loopne
cs
xlat
sti
std
call
mov
out
lret
shrl
flds
push
xchg
push
add
xabort
sbb
or
push
pop
sbb
psadbw
xor
loope
fistpl
adc
shl
or
cmp
push
sar
int3
push
dec
lock
lock
cmpsb
jp
lea
gs
push
push
jg
dec
cwtl
mov
stc
clc
fs
mov
nop
mov
xor
lock
outsb
mov
ja
std
sbb
gs
sbb
add
mov
popl
lret
mov
icebp
rcrl
mov
xor
int3
out
or
insl
xchg
xor
mov
js
mov
sbb
int
xor
xlat
jae
push
pop
or
adcb
mov
out
cmc
mov
cmp
enter
push
push
loop
or
cmp
sub
mov
mov
mov
movl
xor
sbb
inc
loopne
dec
loopne
push
push
leave
inc
jle
test
adc
ljmp
xchg
cli
and
mov
sub
sbb
lcall
mov
or
jg
call
xlat
out
pop
sbb
dec
cmp
mov
sub
pop
adc
mov
shrb
mov
add
dec
mov
mov
push
mov
pop
fcmovb
push
aam
jg
mov
fsubr
clc
out
cmp
enter
mov
idivl
push
sbb
shr
mov
sub
sbb
notb
pop
and
mov
cltd
jg
mov
dec
aam
pop
bswap
cli
cmp
outsb
jecxz
mov
pop
inc
xchg
push
sub
rolb
lret
pop
call
in
out
push
popa
js
insb
aam
or
jnp
pusha
or
mov
jnp
adc
pusha
icebp
push
in
xor
lret
in
shll
dec
mov
jo
sub
out
jae
sbb
aaa
jnp
enter
mov
xchg
pop
aas
push
push
fistpll
insb
xchg
pop
ret
pop
mov
jbe
xor
add
jne
cmc
push
lret
call
lahf
sub
mov
icebp
sbb
setp
daa
adc
dec
and
pushf
pop
jg
imul
mov
and
mov
sbb
shrl
mov
mov
fsubrs
mov
cld
mov
loope
loope
repz
add
pop
std
fwait
int
fwait
mov
fildll
cs
sbb
fiaddl
sbb
push
jo
outsl
adcb
imull
inc
bound
pop
clc
sbb
xor
or
jl
jne
dec
xchg
dec
mov
fistpll
mov
cmp
flds
mov
xlat
pop
cmp
dec
xor
mov
add
cmp
or
add
movsl
scas
mov
adc
push
in
or
mov
pop
sub
sub
test
and
out
xor
or
mov
clc
dec
jb
imul
xor
inc
movsl
mov
add
movsl
loope
xchg
jno
adc
sub
jbe
es
inc
jae
mov
xor
jbe
and
fs
hlt
fisubrs
fs
cmp
inc
inc
xorb
jmp
pop
shll
push
and
or
sbb
add
xor
jecxz
pop
in
sub
mov
rorb
inc
jmp
pusha
sti
int
aas
xchg
je
add
pop
jecxz
scas
push
shrl
lahf
fistps
jg
jge
icebp
rclb
sub
icebp
cmpsl
inc
and
lock
cltd
add
cmp
xchg
mov
adc
pop
inc
adc
and
ss
dec
jae
outsl
iret
xor
mov
lret
fdivl
jns
xchg
dec
sbb
push
repz
jmp
and
pop
push
lds
mov
push
xor
pop
outsl
sbb
divl
stos
call
xchg
pop
pop
xchg
sbb
lret
stos
add
xlat
xchg
pusha
stos
inc
mov
dec
jns
call
in
xor
clc
mov
hlt
adcb
xchg
adc
adc
out
pop
jl
aaa
cmp
cmc
test
int3
pop
adc
insl
sub
lahf
insb
add
adc
loopne
nop
fs
adc
or
cmp
sbb
pop
test
ficomps
aaa
mov
or
cwtl
push
jg
mov
repnz
add
push
stos
adcb
ret
push
lds
pop
subl
aas
loop
mov
lahf
daa
outsb
je
sti
or
out
xlat
xchg
xchg
aaa
xchg
or
mov
mov
xchg
pop
mov
fnsave
xor
int
icebp
add
jno
or
sub
adc
negb
inc
lods
out
hlt
out
mov
xor
pop
dec
ret
leave
pop
xor
lret
cmp
mov
adc
rcrl
stos
leave
pop
sbb
sub
ffreep
push
sub
add
inc
jg
ficompl
aam
jns
pushf
imul
clc
iret
addl
clc
xchg
mov
lods
lahf
mov
mov
repnz
push
jo
mov
pop
mov
imul
adc
dec
mov
mov
je
mov
pop
adc
std
or
lds
lds
fcomip
test
inc
aam
ret
jle
jo
repz
aad
pop
mov
xchg
rcrb
scas
xlat
cmp
dec
adc
mov
mov
push
insl
fnstcw
aad
sar
mov
pop
out
jae
lret
popa
inc
fmull
fsts
pop
in
outsb
scas
iret
push
sbb
mov
jb
sub
sub
nop
mov
mov
loope
push
mov
cmpsl
cmp
into
lods
scas
push
fisttpl
sbb
mov
or
mov
jbe
mov
fsub
pop
pop
fs
inc
and
xor
repnz
leave
xchg
adcl
in
xchg
jmp
adc
push
aam
and
cwtl
cmp
mov
test
lock
inc
mov
jo
cs
or
push
sbb
aad
aad
sub
dec
nop
xlat
sbb
mov
dec
jo
jno
mov
std
shrl
adc
fdivs
or
cli
jno
fnstenv
pop
xchg
inc
pop
aad
and
cmp
cmp
xchg
jl
call
sti
add
lret
lcall
xor
pop
mov
mov
mov
add
lods
iret
lock
stos
into
in
mov
stos
mov
add
stos
pop
lds
or
mov
and
xor
inc
pop
addb
les
call
adcl
data16
rcrl
arpl
cs
inc
in
jb
mov
aad
aam
inc
lds
fstp
cmpsl
mov
adc
inc
arpl
mov
and
jg
insb
nop
dec
ljmp
and
adc
or
rcr
mov
add
mov
out
es
xor
xor
repnz
iret
mov
pushw
dec
sbb
adc
test
outsb
fldenv
sub
je
daa
dec
into
arpl
cmp
inc
in
push
dec
and
rol
sub
cmc
xchg
int
test
cmc
fnstsw
in
lret
pop
push
das
lock
push
xor
cld
sti
pop
pusha
ret
sub
aad
jge
int
sbb
cli
xor
test
jmp
push
pusha
sub
push
lahf
dec
test
mov
mov
xor
adc
lock
jne
das
ljmp
jmp
mov
fimuls
mov
mov
in
lahf
xchg
add
sub
xlat
or
or
pop
add
cltd
stos
jp,pn
sbb
loope
and
and
add
lds
or
sbb
cli
or
into
scas
adc
ds
mov
ret
sub
and
jl
rorb
and
cmpsb
cli
push
xor
pop
jns
jb
sti
pop
pusha
int3
push
mov
repz
push
dec
mov
hlt
xchg
mov
in
pop
xlat
es
inc
cltd
les
lea
aam
cmpb
dec
mov
shrl
jp
adc
pop
pop
loopne
int3
xor
in
sbb
pusha
xor
cwtl
into
mov
add
shrl
sbb
scas
repz
jl
jmp
pop
int
pop
jbe
hlt
jo
test
xchg
int3
adc
mov
cs
cmc
xchg
push
ss
iret
in
push
mov
xchg
jmp
push
sbb
pop
sbb
pop
push
sbb
cmpsl
push
cli
dec
adc
lods
sbb
out
leave
xor
fwait
dec
iret
mov
test
xor
inc
sbb
mov
ja
shl
pop
mov
iret
sbb
push
fadds
inc
sbb
inc
mov
std
mov
jl
cmp
cmpsl
cmp
pop
inc
jp
fistpl
xlat
rorb
in
xchg
addr16
fsubr
pop
inc
nop
or
movl
mov
pop
sbb
dec
xchg
sub
fs
push
pushf
pop
aad
and
dec
jno
mov
sbb
cmp
fwait
pop
test
shr
add
popa
leave
and
pop
cli
ret
fstpt
pop
or
mov
pop
insb
ret
mov
jp
sub
or
into
xor
cwtl
repnz
pop
inc
iret
push
sbb
and
aam
hlt
cmpsl
mov
or
push
sub
xchg
fistl
das
loope
fisttpll
or
nop
adc
int3
iret
stos
ss
sar
call
or
je
and
cmp
xor
sub
push
add
push
xchg
sub
fstps
pop
jle
je
jnp
lods
cmp
pop
xor
icebp
pop
loopne
mov
push
cwtl
xchg
ffreep
lock
mov
and
aad
pop
decb
std
push
jecxz
lret
mov
push
test
out
scas
movlps
pop
xchg
or
sahf
jne
and
inc
adc
das
ret
fwait
cmp
push
int3
jecxz
jle
lahf
in
and
fidivrl
sbb
lods
sub
jb
fisttps
ja
je
sbb
jmp
movsb
xchg
add
lea
shlb
nop
sub
mov
cltd
decl
or
mov
push
mov
rorl
fistpll
out
movsl
jl
adc
dec
lods
repz
jnp
loope
cli
dec
fs
mov
rcrl
movsl
jmp
pop
inc
sub
testl
or
xor
or
orb
leave
out
sahf
inc
testb
enter
and
jae
xchg
or
and
inc
rcrl
mov
cltd
mov
lea
mov
std
mov
fisubl
repz
mov
filds
jo
test
and
clc
cmp
mov
jo
add
mov
fcomps
xlat
pop
mov
inc
lock
sbb
outsb
fiaddl
push
xchg
or
mov
jns
pop
and
xchg
sbb
mov
pop
jl
sub
add
push
ret
in
add
push
insl
mov
into
mov
jl
sbb
into
repnz
mov
out
call
add
daa
mov
inc
jae
xor
int
adc
push
arpl
mov
ds
fdivrs
outsb
xlat
insl
loop
test
pop
cltd
ror
xor
je
aas
jp
pop
mov
cmp
lcall
imul
cmp
aas
in
inc
imul
cmp
xor
shlb
pop
adc
jbe
pop
aas
roll
int
sub
or
sbb
fbld
jp
mov
aad
cmc
ret
lahf
fadd
aas
add
addr16
cs
imul
and
lret
je
repz
jne
test
adc
cld
aaa
dec
or
ror
or
aas
xchg
sub
mov
cmp
pop
xchg
inc
js
jno
dec
xchg
ds
stos
mov
pop
xor
test
pop
insb
cmp
shl
shrl
cmc
ret
scas
jns
mov
mov
lock
pop
out
imul
test
fs
into
inc
lcall
das
dec
dec
jne
xchg
push
sbb
mov
jg
pushf
push
pop
cli
push
into
xchg
sbb
mov
sub
mov
xchg
sbb
cmp
mov
sti
addr16
and
insl
cmpsl
lret
cld
xlat
dec
and
xor
popa
pop
rclb
push
movsb
enter
gs
cmpsl
jl
and
sbb
mov
inc
sub
add
sahf
pop
fdivrl
fwait
mov
je
dec
fldcw
sbb
loope
push
pushf
pop
and
fwait
sbbb
daa
lds
outsl
fsubrl
loope
mov
jmp
in
jp
mov
add
xor
aaa
add
sbb
andb
xor
movsl
lods
fimuls
faddl
sub
add
mov
movsb
xchg
in
pop
loope
xchg
sahf
jmp
sub
into
lods
cltd
add
adc
out
sbb
test
dec
ds
sub
mov
pop
mov
push
cmp
test
icebp
and
dec
rorb
mov
inc
repz
xchg
mov
dec
test
adc
and
mov
test
loopne
sub
add
loop
inc
pop
xchg
loope
ret
clc
repz
xlat
pop
adc
add
mov
in
test
mov
movsl
or
imul
sub
dec
imull
fisttpl
insl
insb
jno
inc
dec
xchg
add
loopne
sub
aas
cmpb
inc
dec
xchg
sbb
push
pop
mov
mov
jmp
repz
les
sahf
push
js
push
or
enter
inc
add
and
mov
push
scas
sub
stos
aaa
mov
mov
ss
pop
insl
push
lret
mov
mov
mov
gs
pop
cld
cmp
mov
sbb
inc
cmc
into
push
jmp
adc
cli
mov
and
inc
adcb
iret
in
aaa
mov
sub
test
mov
ficompl
or
movsl
lock
mov
mov
popf
mov
imul
es
inc
and
adc
cmp
mov
ficompl
movsl
jle
mov
mov
sarl
inc
and
gs
mov
mov
jb
aad
cmpsb
mov
jp
dec
jecxz
dec
and
shll
stos
pop
xchg
push
cmp
in
int
and
jl
cmp
rcrl
inc
add
stc
insb
je
mov
addr16
inc
shll
addl
addr16
jge
mov
xchg
and
jmp
sub
les
mov
inc
int
aam
test
and
cmc
mov
jge
mov
xchg
and
and
inc
lods
mov
jge
nop
or
fs
test
daa
inc
mov
outsb
in
dec
in
sahf
repnz
mov
and
add
mov
mov
ds
cmc
adc
mov
xor
and
jne
lea
dec
aad
data16
mov
adc
mov
mov
daa
shlb
popa
cmc
cmc
imul
inc
sti
repnz
sbb
or
xchg
push
jp
pop
and
out
pop
icebp
or
mov
jl
aas
loopne
sbb
mov
in
faddp
or
and
sbb
mov
push
gs
sbb
loopne
bound
add
push
lcall
call
and
dec
push
dec
mov
mov
ljmp
rolb
data16
xor
xchg
xchg
xchg
iret
icebp
mov
xchg
stos
mov
hlt
fldt
or
jne
dec
loope
jecxz
ror
rcrl
inc
jo
mov
sbb
stos
iret
jbe
mov
in
enter
pop
sub
stos
sub
sub
dec
push
adc
mov
mov
test
cltd
or
pusha
jbe
arpl
std
xor
or
add
in
adc
add
divb
aas
es
adc
inc
cs
mov
mov
sti
jl
add
das
xchg
sub
mov
xor
stos
popf
popf
inc
aad
sbb
mov
in
add
movsb
stos
lahf
xchg
push
insl
loope
jge
jge
movsb
fs
and
or
out
call
pop
fnstcw
jnp
pop
push
xlat
cmc
iret
lahf
aaa
sub
iret
je
inc
mov
lahf
sub
jp
and
in
mov
adc
outsb
cmc
mov
cmovl
icebp
dec
ret
cmp
and
shrb
push
gs
int
in
sbb
and
sbb
ret
notb
pop
cmc
inc
scas
xor
xchg
jbe
mov
shlb
mov
mov
dec
idivl
movsb
dec
push
mov
xor
test
cmc
add
addr16
test
repnz
lret
testb
cmp
adc
insb
rclb
push
jmp
andb
sbb
out
in
sbb
lcall
xor
cmp
cmp
xchg
mov
fsubl
and
daa
roll
jbe
jo
sbbl
sub
add
or
xchg
gs
mov
loope
mov
and
push
ljmp
inc
imul
scas
loop
adc
and
jnp
aam
sbb
sti
pop
jnp
and
leave
add
inc
cmp
std
out
sbb
dec
popa
stos
xchg
inc
fucom
adcb
jae
jno
test
mov
inc
sbb
sub
in
pusha
jbe
pslld
push
add
lods
leave
sbb
imul
push
push
sbbb
test
push
add
imul
inc
mov
arpl
mov
cmp
adc
mulb
jmp
outsb
push
push
sbb
sub
or
movsl
loope
and
cmp
inc
outsl
xchg
adc
repnz
xchg
mov
cld
sbb
into
lods
sahf
mov
and
jg
sbb
add
push
cld
adc
mov
dec
xor
sbb
in
aam
mov
cmpsl
inc
sbb
insb
int3
dec
or
sbb
adc
mov
in
aam
insl
rol
pop
jmp
adc
stos
outsl
add
mov
into
jl
stos
ret
outsb
orb
push
loopne
idivl
inc
out
out
xlat
cmp
jae
xchg
pop
and
mov
mov
xor
sbb
lcall
movsb
stos
testb
pop
mov
je
push
mov
mov
cmp
testb
cmc
jae
sar
cmp
ss
add
popa
ljmp
popf
push
dec
mov
cmp
loop
sbb
adc
orl
add
in
and
in
inc
adcb
xchg
pop
loop
sub
pop
filds
jecxz
mov
push
adc
shll
jl
in
enter
mov
sbb
jmp
cmp
adc
popf
xchg
ds
loopne
into
sub
xor
loopne
push
xor
fisubrl
sub
imul
pop
pop
inc
dec
mov
fadds
cltd
scas
pop
and
dec
data16
pop
xchg
pop
aam
inc
bound
pushf
clc
insb
je
lds
lcall
inc
mov
sub
and
sbb
repz
fildl
loopne
js
jp
dec
stos
or
jg
inc
inc
fsubl
dec
shlb
cli
loop
mov
mov
jnp
lock
shrb
sbbb
filds
shrl
sub
mov
push
js
lock
inc
movsb
fnstenv
pop
test
fisubl
rclb
faddl
aad
ss
or
push
or
int
roll
test
pop
mov
outsl
add
dec
xchg
cmc
push
jmp
xchg
outsb
adc
sub
movntq
or
movsl
pop
mov
insb
daa
lret
mov
fisubrs
lea
dec
pop
cmpsb
loope
xchg
and
data16
in
fcom
ffree
sarl
mov
xor
sti
sahf
es
sub
or
push
addr16
push
test
fisttpll
xchg
pop
fidivrl
dec
adc
pop
cmpsl
adc
mov
pop
sbb
mov
add
test
fwait
xor
mov
jo
into
jns
rorb
pop
xchg
sbb
cmp
jmp
loope
dec
push
dec
add
fistpl
and
int
lret
inc
imul
mov
xor
popa
cmp
mov
mov
mov
adc
loopne
fisttpl
push
and
dec
push
loop
int
mov
xchg
int
mov
mov
pop
popf
or
and
scas
xor
std
xlat
movsb
rorl
mov
fldcw
clc
lcall
mov
sahf
sbb
push
inc
adc
fwait
popf
push
inc
cmp
sub
stos
xchg
adc
ja
repz
test
call
adc
xchg
xor
aaa
jno
inc
pop
push
ficomps
add
ja
test
addr16
out
inc
xchg
push
inc
sub
outsb
or
test
in
cs
les
mov
push
push
pushf
mov
sub
jmp
pop
jbe
movsb
push
stos
sub
fcom
arpl
mov
fcmovnu
das
dec
push
inc
push
inc
loope
jl
sbb
pop
lods
sbb
mov
inc
mov
int
outsl
mov
adc
add
fldenv
rcrb
sar
fnstcw
out
xor
out
add
mov
sti
test
cmpsb
adc
ds
mov
dec
add
rclb
repnz
imul
jbe
das
mov
test
xor
xorb
xchg
out
cmp
jg
mov
out
mov
popf
ds
movsl
jae
push
scas
add
dec
mov
ret
andb
out
test
aaa
icebp
hlt
es
xor
adc
arpl
mov
jnp
xchg
or
shlb
mov
decl
pop
les
test
push
mov
fs
mov
jecxz
push
loop
mov
mov
icebp
fdivrs
aad
jo
outsb
pop
push
jne
int
jge
jp
iret
pop
jge
notb
and
pusha
bound
pop
into
in
sbb
popl
or
sti
mov
push
std
dec
test
stos
mov
aaa
dec
mov
sub
cmp
jo
sarb
pop
xchg
add
dec
cltd
dec
jo
ss
rcrb
add
aaa
cli
insl
in
scas
insl
jno
call
xchg
mov
and
xor
bound
sti
push
cmp
lret
fidivl
xchg
sbb
mov
pop
inc
loopne
orl
aas
sub
sarb
fs
mov
stos
pop
jle
loopne
sbb
lcall
adc
dec
mov
fildll
orb
or
lahf
mov
loop
or
xchg
and
mov
mov
scas
jnp
xchg
sub
mov
aaa
pushf
adc
decb
stos
lea
flds
lcall
int
insl
outsb
fadds
adc
xchg
fsubs
cmpsb
mov
fimuls
jge
jg
or
and
and
lcall
outsl
es
mov
xchg
decl
ljmp
jo
or
sahf
jo
xlat
mov
push
xchg
push
jo
fildl
mov
inc
jp
mov
jae
push
jbe
mov
out
enter
jle
mov
xor
adc
repnz
push
sbb
sbb
idivb
hlt
jecxz
mov
repnz
mov
bound
popf
outsb
jnp
or
shlb
mov
sbb
xor
lock
mov
imul
je
mov
test
enter
push
lods
fwait
xchg
subb
shlb
pop
xchg
jge
cmp
cwtl
aam
mov
inc
mov
enter
mov
xchg
jb
sub
push
mov
mov
out
lods
cmp
push
or
in
xor
add
sbb
xchg
lahf
scas
mov
mov
pusha
mov
pop
pop
mov
dec
adc
dec
call
dec
mov
push
cmpsl
xchg
aam
sbb
scas
scas
mov
jmp
iret
subb
jmp
pop
xchg
jo
mov
loope
int
cltd
bnd
mov
adc
cwtl
push
adc
out
dec
outsl
and
sbb
jae
out
and
mov
out
in
movsl
pushl
frstors
add
pop
pusha
shll
push
push
jns
cmc
mov
mov
jmp
and
adc
and
jmp
sti
mov
cli
sbb
rcrb
sarb
loopne
ss
ja
pop
add
pop
movl
push
cmp
push
ljmp
adc
insl
je
inc
loopne
mov
sub
push
ljmp
jo
lcall
xor
out
inc
adc
subl
pop
ja
cmp
push
in
fidivl
adc
scas
adc
sub
xor
sahf
pop
jno
test
cwtl
inc
cmp
outsl
lahf
xor
aas
pop
jg
inc
dec
in
int
add
inc
cmp
imul
fsubrs
and
jg
push
mov
adcl
out
mulb
xchg
jge
outsl
rcl
nop
out
aaa
xchg
int
jl
gs
daa
jmp
add
jmp
test
js
jmp
jnp
mov
pop
clc
sbb
mov
inc
fs
imul
or
fsubr
dec
cmp
clc
mov
cli
cld
fisubl
cli
inc
and
cwtl
mov
and
add
fs
mov
jae
lret
into
popa
adc
pop
in
xchg
pop
lods
dec
fisubrl
jg
call
lcall
mov
in
inc
ds
dec
bound
sub
loopne
notb
ljmp
cld
test
stos
outsb
insl
scas
jecxz
xchg
dec
subl
xor
mov
sub
mov
adc
test
stos
pop
sbb
pop
dec
test
push
adc
cmc
dec
adc
mov
sbb
sar
push
das
sub
pop
ds
xchg
andl
mov
mov
xchg
mov
test
adcb
in
into
out
mov
jl
scas
aaa
jb
pop
push
cwtl
dec
mov
pop
jmp
xchg
and
and
add
divl
mov
test
imul
add
mov
add
mov
mov
or
push
adc
jno
xchg
pop
ss
loopne
adcb
push
popf
mov
xchg
or
in
aad
lret
pop
scas
pop
pop
scas
jg
pusha
jbe
iret
xchg
daa
fcompl
movsb
cmp
mov
dec
aas
add
pop
loop
mov
and
lcall
xor
jbe
popf
aaa
cmp
dec
and
add
into
popf
jecxz
divb
or
sub
pusha
mov
push
lret
mov
lret
push
jge
fnsave
inc
ds
outsb
push
fprem
fiadds
dec
pushf
movl
std
adc
adc
push
xchg
xor
cmp
lahf
mov
call
pop
movsl
call
shr
xor
mov
mov
cmpsb
loopne
mov
dec
inc
rcrb
aad
fsubl
mov
pop
mov
dec
jae
adc
std
shll
jle
inc
sbb
sub
leave
repnz
ja
imul
aas
aas
jmp
bound
gs
scas
pushf
ret
push
jge
in
or
into
adc
push
fldt
and
xor
int3
cwtl
lds
sub
cltd
outsb
sarb
inc
jmp
mov
jl
aad
ja
int
xchg
jb
stos
sbb
jge
adc
inc
lldt
mov
fsts
push
add
fnsave
adc
sahf
dec
xchg
aaa
lret
js
push
jg
cmp
xlat
pop
outsb
adc
xor
and
ljmp
imul
test
mov
cwtl
in
xchg
push
js
sub
mov
or
mov
add
fwait
push
int3
test
adc
xor
fwait
inc
or
cwtl
push
push
add
je
inc
adc
add
add
dec
testl
adc
mov
adc
es
pop
js
xchg
gs
mov
mov
inc
ljmp
int
ret
hlt
push
ss
aas
sub
out
xchg
bnd
nop
imul
stos
pop
outsl
xlat
imul
ret
and
pusha
enter
xor
inc
xchg
ret
mov
ljmp
sub
sbb
es
imull
jbe
cmc
push
cld
push
pop
scas
iret
shrl
fnstcw
imul
nop
in
frstor
jb
test
int3
clc
das
dec
cmpsl
aam
adc
ret
push
mov
mov
sub
test
lahf
nop
xor
popf
lock
cld
mov
sarl
jecxz
outsl
cmp
xchg
loope
outsb
inc
lret
mov
pop
aaa
jle
jmp
xchg
jo
nop
jecxz
dec
mov
leave
sub
in
push
daa
cmp
out
lock
out
icebp
pushf
call
and
adc
fisttpll
pusha
add
add
rorl
sahf
out
loop
leave
push
xchg
in
test
cwtl
cmp
inc
mov
xlat
je
ja
cmp
rclb
add
mov
sub
sbbb
or
push
inc
cwtl
xor
mov
xchg
sti
inc
gs
movsl
cmp
or
dec
jae
daa
das
sbb
cltd
add
mov
je
sub
das
shlb
pushl
divl
sub
inc
shlb
ds
xchg
sbb
add
cwtl
int3
movsb
fadds
pop
mov
mov
jb
mov
lret
push
faddl
daa
cli
inc
sub
pop
lock
in
and
test
jnp
jecxz
addb
pop
and
test
mov
adc
int
xor
insl
test
lods
imul
push
add
mov
pop
push
pop
sbb
push
fidivs
ja
mov
sub
out
or
sbb
and
mov
dec
inc
dec
jb
or
fcoml
xor
popa
loope
mov
sub
xor
int3
dec
sub
jp
adc
in
test
cmp
out
cmp
cmpsl
mov
sub
lea
clc
sub
ficoml
push
adc
xchg
insb
mov
out
adc
leave
pop
pop
pop
adc
adc
xchg
rolb
lods
push
sbb
adc
push
push
push
adc
jo
out
mov
xchg
cmp
sub
cmp
outsb
pop
test
outsb
add
pushf
fcoms
shll
mov
test
sti
fildl
test
fcmovu
popa
dec
aad
xorb
insl
and
push
sarb
sbb
insb
xor
aam
adc
sbb
xchg
jle
sbb
stc
mov
int3
popa
mov
cmp
in
jmp
xchg
push
scas
and
subb
cmpsb
mov
mov
lock
ja
cmpsl
mov
xchg
aaa
nop
in
inc
xchg
sub
push
xchg
jle
pop
xchg
call
iret
mov
mov
fdivr
mov
test
add
loope
lret
adc
outsb
jmp
cwtl
jne
sub
cmp
adc
movsb
mov
popf
and
mov
pop
adc
repz
jbe
sbb
xlat
jbe
mov
incl
and
imul
or
repz
gs
insl
dec
push
push
inc
xchg
scas
mov
mov
push
addr16
jmp
or
sub
pop
loopne
mov
fcompl
xchg
xchg
sub
dec
push
pusha
outsb
xchg
shlb
sbb
lods
jl
xor
nop
js
add
push
xor
cmp
imul
dec
mov
pop
ret
lret
or
sti
mov
pop
add
les
into
push
add
lahf
cmpsl
into
cld
mov
lods
cld
fs
loopne
cmpsl
arpl
test
lock
xor
or
call
mov
mov
or
loope
dec
sub
clc
clc
sbb
push
xchg
shrb
sbb
cmp
aas
shrb
add
idivb
pop
push
jae
test
popa
sarl
jo
jns
lock
popf
or
xor
cmp
xchg
jae
cmp
sub
dec
cmpsb
rorb
sbb
aas
sahf
insb
xchg
push
dec
test
push
cwtl
lds
xchg
xchg
push
cli
adc
stc
xlat
cmp
mov
mov
push
jmp
dec
pop
loopne
rcrl
movsl
jnp
xchg
mov
mov
pop
icebp
lcall
mov
stos
jae
pop
cs
fnstenv
xor
loop
jmp
daa
mov
xchg
mov
inc
pop
fldenv
icebp
adc
adc
sbb
cld
push
stc
stos
cmp
jbe
outsl
in
mov
cmp
adc
iret
dec
or
ljmp
and
pop
mov
cmc
repnz
out
inc
scas
idivl
insb
mov
ficoms
or
sbb
dec
adc
fdivrs
push
out
xlat
subb
sub
in
cmpsl
jp
ss
cld
call
fiaddl
jno
into
mov
sbb
pop
lret
pop
sub
mov
inc
popf
mov
mov
cmp
push
leave
lret
mov
in
test
daa
pop
mov
addr16
ffreep
adc
stos
add
mov
xor
test
pop
or
sub
sub
push
dec
out
xor
and
and
test
cmpsl
cli
inc
and
in
mov
add
fiadds
scas
mov
jnp
cmp
jno
fdivrl
dec
add
mov
mov
pop
inc
pop
inc
mov
push
adc
lods
adc
add
rcr
fiadds
pop
inc
add
jle
mov
pop
inc
mov
shrb
inc
mov
out
lcall
jl
pop
sbb
incb
icebp
pop
fdivr
xchg
sub
xchg
jns
pop
jae
lock
fs
cld
into
and
push
sub
lcall
jb
out
push
cld
add
sub
je
push
mov
inc
inc
xlat
and
aaa
inc
cmc
jecxz
mov
in
mov
mov
dec
stos
testl
test
sub
movsl
fsubr
aas
cmp
fildll
ficoms
sahf
lock
cmp
jg
pop
jbe
mov
mov
insb
cs
fsts
and
pop
setne
inc
lret
jno
xchg
loop
fsubr
or
test
or
shl
push
sub
add
lcall
mov
adc
mov
cmc
xchg
mov
ja
fisttps
clc
fistpl
mov
push
ljmp
pushf
jmp
or
div
into
ds
clc
jo
mov
sbb
rcr
jle
push
scas
fsubs
and
scas
add
xorl
stc
daa
inc
jle
notb
fnstcw
add
push
scas
xor
mov
shr
cmp
cmpsl
loop
out
mov
add
push
nop
add
sahf
push
movl
push
push
jmp
rol
jle
repnz
test
xchg
in
iret
add
jp
loop
jbe
add
add
mov
out
data16
roll
add
sahf
cmp
mov
dec
add
cmp
add
cmp
mov
and
insl
ds
in
std
or
fldt
jp
mov
mov
fadd
jbe
shrd
shll
jo
ret
orl
jb
sbbl
rorb
pop
mov
and
lcall
lcall
and
mov
xor
lods
xchg
insl
xor
adc
ds
push
push
adc
mov
hlt
add
call
pop
dec
xchg
xchg
jae
mov
lock
mov
inc
cltd
lret
cmpsl
scas
dec
je
push
test
stc
mov
push
jne
and
cltd
adc
ljmp
mov
push
repnz
mov
push
mov
int
nop
inc
les
jecxz
ds
sbb
jl
adc
das
push
jge
xchg
cltd
test
scas
push
mov
push
adc
cmp
loopne
mov
dec
rolb
add
andl
jge
jno
lahf
xor
cmpsb
inc
push
inc
ret
mov
and
enter
dec
mov
pushf
insb
jo
dec
cmp
cmp
inc
mov
sahf
fnstenv
sti
lock
out
testb
pop
sub
push
xchg
test
mov
push
cmp
adc
pop
dec
cmpsb
xchg
cmpl
insb
push
xchg
xchg
repnz
or
mul
cmp
stc
mov
sub
xor
mov
lods
in
stc
dec
xchg
mov
push
sub
fdivrs
and
mov
divb
in
and
mov
pop
daa
cs
arpl
mov
shrl
loop
mov
call
pop
lcall
movsl
pop
sbb
mov
mov
cld
xor
inc
sbb
cwtl
es
dec
fists
cmp
insb
icebp
push
inc
sub
dec
xor
leave
xchg
lds
out
mov
push
das
push
jge
nop
bound
cmpsb
pusha
jno
jecxz
xor
ja
ret
daa
out
jo
imul
adc
mov
in
inc
cltd
push
ss
orl
lea
pop
and
adc
stos
add
pop
repz
xor
and
and
jb
je
cmpsb
mov
scas
pop
hlt
popf
sub
pop
pop
push
mov
loopne
mov
sbb
mov
mov
divl
xorb
jp
enter
mov
mov
pop
mov
push
xchg
aad
xchg
daa
out
cmp
jb
xchg
jecxz
or
cltd
cld
rcrb
inc
inc
or
pop
add
jp
and
mov
arpl
push
inc
iret
mov
sub
mov
dec
pop
lret
adcl
mov
clc
xchg
jl
nop
je
andb
mov
mov
and
addb
mov
scas
mov
ljmp
sbb
jg
fcompl
and
add
sti
push
idivb
in
fwait
out
gs
jecxz
cmpsl
cmpsl
jge
testb
and
mov
ficoml
inc
sbb
je
adc
sbb
mov
sbb
sub
xor
daa
scas
aas
ljmp
jns
adc
repz
inc
push
es
loope
mov
mov
aad
or
test
add
adc
pusha
xor
shlb
or
push
dec
std
out
cmp
cmp
add
push
pop
clc
aad
adc
jno
mov
pop
sbb
jge
or
test
popf
xlat
lods
repz
inc
std
adc
clc
shl
pop
dec
and
push
cmpsl
stos
lock
mov
xchg
cld
repnz
mov
add
fildl
lret
sahf
loop
sub
scas
jmp
insb
pushw
lret
into
movsl
mov
mov
xchg
bound
push
std
push
je
enter
lods
cmpb
add
mov
add
dec
lods
in
jns
mov
mov
ficomps
inc
mov
cmpl
sahf
scas
iret
cmpl
aad
sbb
add
sub
push
jo
sahf
imull
notl
dec
sahf
xchg
push
popa
pop
add
lock
jb
addr16
pop
lock
adc
inc
fmul
xchg
out
addr16
fnstenv
fwait
add
xlat
push
stos
dec
jge
and
mov
and
out
and
ljmp
push
jb
rcll
or
movsl
mov
jnp
xchg
repz
mov
inc
sub
leavew
xchg
mov
cmc
imul
call
lret
aaa
adc
pop
xor
add
pop
inc
popa
cmc
xchg
push
inc
inc
repnz
nop
movsl
jne
inc
dec
sbb
iret
hlt
lret
adc
push
push
xchg
inc
dec
lods
mov
js
and
stc
aaa
outsl
mov
int3
push
cmp
xchg
xchg
xchg
cmp
fsubrl
mov
and
mov
aas
loop
mov
xor
mov
pop
insl
push
ficomps
cltd
push
push
sub
push
lds
xchg
lock
shlb
pop
xchg
pop
xor
mov
mov
mov
ret
mov
or
fiadds
decl
cmpsb
jge
in
add
pop
pop
in
or
xchg
sbb
push
sub
dec
lcall
rolb
mov
sar
idiv
rolb
ret
push
addl
repnz
cmp
adc
mov
xchg
movsb
pusha
pop
mov
aad
lret
loope
fs
dec
xlat
mov
in
cmp
pop
mov
stc
les
stos
xor
sub
cmc
pop
jl
mov
js
or
jp
adc
mov
mov
sahf
mov
ret
pop
add
cmpb
test
mov
push
in
scas
fs
lods
mov
sub
addl
aam
addr16
cmp
sub
mov
dec
adc
nop
sti
pusha
inc
in
int
or
pop
je
sbb
lods
adcb
insl
xor
dec
sbb
push
pop
mov
sarb
js
aad
inc
add
iret
cmpsb
xor
push
icebp
mov
testb
jp
push
mov
in
ret
inc
orl
dec
outsl
xorb
sbb
jg
bound
cwtl
xor
lcall
fldenv
daa
sahf
popa
mov
sbb
or
inc
movsb
lock
inc
lcallw
fnsave
out
pop
cld
or
jl
gs
cltd
in
aas
jmp
mov
push
xor
jmp
and
cmpsl
call
stos
shrl
imul
ret
movsb
and
xor
les
ret
inc
xchg
push
int3
sbb
pusha
or
arpl
fbld
ret
outsb
inc
negb
inc
cmc
nop
fmul
and
adc
or
mov
lcall
push
enter
out
aad
jp
pusha
adc
mov
not
cmp
out
push
sarl
pop
mov
outsl
sbb
outsl
repnz
aam
xlat
dec
daa
or
int
loopne
pop
fcomip
cmp
orl
mov
mov
aaa
and
xchg
xor
ficomps
addr16
dec
add
push
call
push
clc
sub
mov
movsl
movsb
mov
addr16
lds
das
ret
mov
mov
jae
adc
cmp
les
xchg
dec
dec
xchg
out
pop
and
inc
test
and
rorl
je
inc
push
mov
jne
add
rolb
pop
outsl
pusha
sbb
sbb
pop
mov
aas
adc
fcomps
cltd
add
iret
pushf
sahf
test
xor
mov
dec
ret
fwait
push
push
inc
pop
roll
in
mov
ljmp
into
mov
xor
sub
xor
pop
fidivrs
xor
mov
cmp
in
enter
in
das
mov
aaa
cmc
daa
mov
out
jge
pop
ljmp
xchg
movsb
add
cmp
sbb
gs
add
aam
inc
jle
mov
sahf
adc
cs
pop
mov
xor
add
xchg
sahf
in
sub
lods
jmp
in
aaa
sbb
pop
mov
sbb
popf
fcomps
adcl
adc
scas
insb
mov
addr16
fucomip
sub
in
cld
xchg
inc
addr16
mov
adc
pop
hlt
xchg
mov
test
inc
sub
pushf
sbbl
dec
je
call
jecxz
in
pop
pop
pop
pushf
push
loope
pusha
dec
xchg
leave
adc
ds
jg
push
jae
rcrl
add
push
xor
stos
fs
addl
or
lea
into
ds
or
lahf
pop
outsb
in
adc
pusha
adc
lods
jmp
cmp
jle
addps
dec
xor
imul
and
jge
jbe
pusha
inc
loopne
pop
pop
sbb
push
push
sub
inc
inc
cmp
xlat
pusha
adc
aam
mov
and
cmp
pushf
dec
pop
jnp
imul
aaa
aad
lods
addr16
aas
sub
repnz
sub
aaa
test
out
fs
xchg
popa
xchg
pop
mov
xlat
or
inc
push
fsubl
push
and
scas
std
mov
pop
testb
mov
addl
cwtl
inc
or
mov
nop
outsl
push
xor
in
stc
xchg
fsubrp
xor
jbe
sub
aaa
scas
pop
pushaw
sbb
idiv
xor
fcompl
divb
inc
leave
daa
loop
aaa
cmp
loop
mov
jb
or
test
paddw
stc
loop
pop
add
and
mov
jb
sbb
ja
sub
scas
xlat
push
popa
push
mov
leave
sbb
sarb
orl
aam
orl
add
imul
pushf
cmp
addb
lea
je
inc
cmp
cmp
cs
lea
sub
xor
jle
jp
sbb
push
stc
sbb
xchg
mov
mov
mov
out
mov
inc
jle
pop
push
in
in
mov
mov
rol
dec
jne
in
mov
call
jno
xchg
ficomps
pop
ret
into
cld
push
nop
aas
sub
cmpsb
cmp
popf
dec
push
adc
mov
jns
pusha
xor
push
icebp
jb
shlb
outsl
lods
ljmp
push
mov
cmp
lret
out
sbb
in
jecxz
fcmovne
mov
xlat
mov
pop
mov
mov
adc
sub
lds
pop
rclb
push
sbb
ret
add
xchg
stos
into
sub
popl
loopne
rorb
cmc
push
jne
bound
or
mov
ss
jb
mov
cld
subl
and
sub
rcr
jo
repz
test
jp
mov
pushf
push
cld
loopne
xor
std
test
in
mov
in
jno
pusha
fimull
insb
sbb
sub
in
mov
daa
movsl
or
clc
inc
push
aaa
nop
mov
gs
xchg
sub
adc
xor
imul
inc
cmpsl
and
add
push
pop
les
enter
lds
xchg
rcrb
dec
mov
pop
xchg
dec
ficoml
out
jae
push
outsb
jge
push
ret
mov
sub
xchg
fidivrl
mov
or
ret
jp
cmp
pop
sub
or
movsl
pop
or
xor
gs
inc
int3
aad
adcl
out
call
inc
or
dec
cmp
and
jns
pop
divb
xchg
push
out
cmp
cmp
push
cmp
sbb
es
xor
sbb
pushf
mov
test
xor
outsl
sbb
jne
inc
pop
cmp
pop
pushf
repz
bound
movl
ljmp
or
jl
adc
inc
and
popa
lahf
xchg
add
dec
rclb
lock
test
aaa
div
dec
fldenv
xor
and
jne
xchg
mov
mov
test
jge
bound
mov
sbb
clc
arpl
mov
cmpsb
xor
lcall
fsubrs
xchg
icebp
and
pop
or
negl
push
xchg
aam
jmp
ja
cmp
in
scas
insb
addb
lods
aaa
fs
xchg
lods
mov
lret
pop
nop
adc
mov
icebp
sbb
mov
loope
mov
mov
sub
test
movsl
les
or
pop
and
cmp
mov
or
dec
and
cwtd
ja
cwtl
inc
push
mov
lahf
or
test
es
and
mov
shlb
mov
fisubrs
sub
xchg
jno
xchg
repnz
call
loopne
imul
inc
lcall
cmp
aam
cld
sub
pop
push
loopne
or
xchg
lds
js
xor
aas
cmp
jne
xchg
cmc
lods
in
popa
les
xchg
xlat
data16
adc
jecxz
or
mov
jb
aad
cwtl
sbb
shl
pop
sub
dec
sahf
imul
ret
push
outsl
sti
cmp
popf
cld
lea
stos
mov
push
mov
cmp
add
lea
push
pop
add
gs
pop
das
xor
cmp
inc
ret
inc
cld
loopne
es
fstl
sbb
in
adc
inc
lock
out
sbb
and
mov
ss
ficomps
lock
rcrb
repnz
mov
pop
fisubrs
xchg
lods
sub
movsb
lret
into
pusha
ljmp
cmpsb
lods
gs
pusha
es
sti
inc
push
ret
xchg
test
nop
xchg
pop
cs
mov
and
shrl
add
xchg
ljmp
sub
dec
xor
dec
mov
and
into
xchg
sub
push
xor
fisubrs
in
and
push
mov
dec
leave
sbb
xchg
int
iret
outsb
inc
aad
pop
inc
dec
subl
add
xlat
sahf
pop
int
xchg
lret
xchg
add
hlt
pop
xor
jmp
xchg
test
push
mov
xchg
cs
add
add
mul
sub
mov
mov
ds
xorb
lock
lret
mov
cmp
adc
and
mov
jle
sub
inc
bound
fisubl
mov
xchg
xchg
jbe
xchg
mov
mov
mov
or
xor
mov
mov
mov
lock
pusha
into
xor
xor
enter
pop
inc
int3
adc
mov
push
mov
lahf
push
add
or
pop
test
xor
daa
negb
cmp
pop
add
and
nop
icebp
adc
out
lahf
jecxz
push
xchg
or
pop
iret
mov
insl
repnz
pop
pop
addl
bound
icebp
or
mul
sub
sbb
outsl
data16
incb
std
shl
inc
or
jae
sbb
dec
xor
loop
movzwl
push
push
dec
xchg
aad
or
leave
adc
jnp
sub
pushf
ljmp
sbb
push
je
jae
xchg
ljmp
add
and
sub
ljmp
push
imul
insl
adc
psubsb
andl
mov
adc
push
movsl
adc
jge
jp
sti
jno
fcos
pop
popf
out
arpl
sbb
xchg
popf
mov
xorb
int
mov
mov
inc
add
bound
xor
popa
sub
jl
js
push
add
fsubl
jp
fcomp
mov
jb
sbb
jno
fwait
cmp
jnp
cmpsb
lods
loope
testb
jl
adc
mov
rclb
xor
fcoms
test
je
loopne
outsb
pop
mull
loope
jmp
arpl
adc
xchg
and
push
adc
cmp
je
mov
fmuls
jg
mov
inc
movsl
into
xlat
shll
push
mov
inc
push
out
dec
xchg
jg
jl
jo
stos
orb
or
cmp
sbb
popa
xor
xchg
xchg
add
test
stos
rcrl
mov
loopne
xchg
hlt
cli
push
fwait
mov
pushf
stos
stos
pop
cmp
stos
sub
fstpt
iret
jle,pn
out
pop
mov
inc
mov
loope
out
inc
xchg
pop
pop
or
mov
fcoml
lock
into
clc
sub
out
lahf
int
subl
fwait
or
xchg
xor
xchg
cmpsb
fcoml
in
adc
popf
scas
neg
aad
leave
mov
inc
fidivl
insb
inc
jge
mov
jb
loope
xor
int3
adc
lds
push
subl
sbb
fisubrs
sbb
popa
mov
xchg
test
fdiv
mov
sbb
mov
add
push
fisubrs
mov
inc
leave
lds
cmpsl
dec
dec
aam
rcl
nop
jmp
jnp
mov
mov
leave
mov
mov
or
pop
stc
mov
shl
jo
popa
jne
pop
sub
in
xchg
cmp
imul
pop
adc
jg
outsb
lea
imul
push
daa
aaa
data16
xorl
mov
repz
dec
cs
fdivrl
clc
sbb
lcall
inc
cmpsl
pusha
push
sub
inc
decl
mov
sti
lock
mov
clc
mov
shl
pop
popa
xor
pop
cmc
pushf
jns
mov
dec
call
pop
jle
mov
pop
xchg
mov
sti
adc
addr16
test
cmpsl
lret
test
xor
jnp
adc
and
loopne
push
mov
add
cmp
pop
scas
out
sub
jb
pop
inc
push
cld
mov
push
std
cld
mov
inc
pop
scas
pop
std
jg
jae
out
je
xchg
stc
cltd
sub
cmpsb
add
inc
mov
pop
jae
std
jns
lahf
xor
push
mov
outsb
in
xchg
out
inc
inc
sbb
repnz
mov
das
mov
jge
sbb
aam
push
inc
insb
jnp
incl
cmp
insl
icebp
div
notb
pop
sub
aad
adc
les
pop
pop
call
and
loopne
pusha
or
mov
add
sarb
push
jbe
icebp
push
aaa
inc
in
mov
add
adc
mov
jl
sbbb
xor
mov
loop
lret
aad
sbb
rcrb
or
xchg
into
inc
or
mov
lds
cmc
mov
nop
cmpsl
push
mov
clc
mov
xor
xor
ds
fistpll
cmpsl
sbb
and
mov
out
mov
add
in
mov
push
ficomps
dec
sbb
adc
imul
add
or
test
cwtl
jle
cmp
popf
int3
pop
lods
test
arpl
ljmp
and
push
add
pop
addl
xor
jbe
das
in
jae
stos
scas
stos
arpl
mov
in
and
pextrw
jb
lret
mov
jmp
mov
addr16
mov
adc
and
mov
pop
add
jbe
lret
add
aam
sub
int
jne
ljmp
mov
neg
test
ss
add
repz
adc
cltd
xchg
jge
out
cltd
pop
mov
pop
jp
hlt
push
loope
leave
xor
or
loope
or
cmc
mov
cld
mov
jbe
mov
xor
pop
dec
cmp
jns
mov
ffreep
repnz
jno
std
push
sti
mov
lock
dec
dec
cmp
jo
mov
inc
cmpsb
not
mov
ja
jecxz
mov
sbb
push
iret
or
loop
xor
push
mov
lods
inc
aad
mov
test
test
jo
les
dec
ljmp
out
and
jge
cmp
push
divb
stos
dec
push
inc
or
aaa
cwtl
jg
jge
aaa
cli
inc
pop
test
faddl
xchg
addr16
mov
push
cmp
lret
call
out
and
adc
fidivl
fmul
or
cmc
jmp
out
cmc
dec
jge
hlt
inc
push
lods
sbb
shrl
imul
lret
push
push
ds
pop
test
cld
stos
xor
stos
test
insb
pop
mov
mov
pop
inc
jne
sbb
les
mov
lahf
push
dec
shrb
mov
fildl
aaa
insb
pop
stos
pop
fdivrl
daa
inc
stc
sbb
mov
scas
aad
inc
loopne
xor
adc
jne
js
aas
dec
push
rclb
mov
add
push
rcll
lds
xchg
gs
and
sbb
aad
and
inc
in
xor
pusha
stos
lds
push
daa
jle
pop
sub
mov
rclb
leave
cmp
fisttpl
aad
insl
je
das
or
movsb
mov
add
sbb
inc
sbb
mov
shll
jecxz
sbb
arpl
mov
jl
lret
cli
shlb
loopne
inc
sti
xchg
cld
aaa
aas
cld
ljmp
inc
pop
and
mov
sub
pop
jmp
sbb
lret
xchg
loope
ficoms
xchg
cltd
imul
enter
dec
imul
test
dec
sahf
or
sbb
pop
push
mov
punpckhbw
mov
fmuls
cmp
lcall
lock
lahf
sub
mov
adc
dec
loopne
sub
stc
cmp
or
mov
mov
mov
cmp
push
push
aas
testb
mov
pop
jge
pop
pusha
mov
adc
aaa
repz
lret
jne
daa
pop
lret
adc
push
jge
jle
ss
lahf
jge
mov
outsl
push
jno
ljmp
stc
popa
fdiv
cwtl
lds
in
repnz
loopne
fldt
test
mov
stos
lods
pop
fdivr
mov
adc
xchg
in
xor
mov
fsubs
mov
mov
mov
push
imul
pop
imul
sub
adc
lret
fmulp
mov
cmpsb
lcall
xchg
lock
ret
call
jae
nop
xchg
xor
lea
mov
nop
dec
mov
in
mov
push
xor
fistpll
xchg
fsubr
xchg
cmp
dec
and
in
sub
aas
pop
dec
movsb
rcrl
cmp
xchg
push
cmp
pushf
mov
xor
dec
out
xchg
or
enter
daa
xchg
pop
insl
movsb
or
leave
cwtl
sbb
cmpsl
std
gs
push
mov
out
xchg
test
cwtl
dec
loop
fldl
insb
hlt
enter
push
mov
ss
fistpll
dec
out
cmpsb
es
das
divl
aas
dec
cmc
into
push
cmc
dec
add
stos
out
out
push
insl
frstor
xor
xor
cmp
jno
xchg
lcall
xor
cmovnp
insl
insl
add
sbb
and
jp
arpl
test
jge
inc
dec
cmc
xchg
lret
pop
xchg
cs
js
xor
out
cmp
inc
or
mov
ret
cs
loope
cmpsb
jbe
pop
or
mov
rorb
pop
cmp
or
dec
fstpl
jnp
dec
testl
call
cmpsb
imul
ljmp
fwait
xor
stc
mov
push
xchg
mov
aas
jbe
fidivrl
sbb
jne
js
cmpsl
push
scas
nop
scas
ret
mov
subl
cmp
movsb
rcll
mov
mov
sub
xchg
sbbl
imul
stos
pop
jnp
and
mov
bound
push
in
out
inc
sarl
rcrl
xchg
je
stos
scas
cld
cmc
adcl
and
jns
push
pusha
into
lret
je
pinsrw
imul
test
cmp
jae
sti
jmp
mov
mov
xor
cmpsl
imul
xchg
pop
addb
fs
jns
inc
or
push
dec
shrl
lret
gs
cld
cs
xchg
fwait
sbb
sti
shrl
sub
inc
add
and
and
jo
aaa
mov
push
push
pop
push
xchg
loopne
call
lret
roll
hlt
fimull
movb
add
cmpsl
pop
sbb
int3
test
icebp
pop
mov
push
dec
sub
xor
dec
clc
lock
out
dec
or
push
dec
and
or
mov
cltd
scas
jbe
mov
add
push
popf
xor
fcmovne
in
jo
lret
mov
mov
push
ljmp
decl
mov
adc
cmp
outsl
movsl
inc
mov
rcll
lea
adc
cmp
ljmp
jns
and
inc
jecxz
mov
test
insb
mov
add
cli
aaa
push
mov
jb
jb
xor
adc
psllq
adc
aaa
xchg
or
xchg
popl
mov
jmp
out
push
add
pushf
bound
adc
mov
xchg
pop
push
movb
loop
mov
mov
mov
rclb
xchg
mov
nop
xor
aas
xor
push
jl
aas
xor
mov
xor
xor
mov
xchg
or
jne
xor
cmp
sbb
and
popf
lods
mov
inc
jle
das
fldenv
nop
stos
loope
jne
imul
insl
jmp
push
out
leave
or
xchg
inc
cmpsl
mov
outsb
les
lods
addl
pop
idivl
push
push
mov
jb
fisubs
and
xor
sub
xchg
dec
xchg
aad
jnp
outsl
xchg
popf
ret
add
lds
mov
cmp
inc
pop
xchg
leavew
jg
je
inc
inc
in
lods
insb
sahf
sub
adc
loopne
inc
in
outsb
and
jle
jne
mov
pop
and
xchg
cmp
xor
ljmp
icebp
jmp
cwtl
cmpsb
or
cmc
dec
in
fsub
out
xor
leave
test
or
pop
out
adc
movsb
daa
pop
pop
inc
sti
test
sbb
lods
es
xchg
xchg
mov
xchg
ljmp
sbb
outsl
pop
xchg
sbb
jae
jl
pop
aaa
inc
push
outsl
nop
sbb
jmp
add
mov
pop
cmp
push
loopne
loop
and
jp
mov
sbb
ja
jns
mov
dec
or
mov
into
mov
pop
pop
pop
js
leave
cmp
bound
cmp
inc
cltd
pop
aas
fcoms
pushf
xor
pop
or
sarl
imul
mov
test
les
inc
frstor
cs
in
add
addr16
nop
adc
call
sbb
and
or
mull
jb
or
mov
into
sub
push
out
xchg
pusha
aas
bound
and
pop
mov
add
or
mov
bound
shrl
mov
or
fistpl
xor
push
or
mov
popf
insb
and
pop
cmpsb
jg
mov
mov
xor
add
into
adc
mov
addl
cmp
mov
pop
jp
cmp
jbe
adc
nop
or
xchg
repz
xchg
jge
fimuls
push
mov
mov
xor
mov
lahf
sub
ja
mov
inc
xor
es
leave
es
mov
int
push
inc
fcomip
lcall
in
push
mov
dec
out
jns
cltd
mov
mov
jmp
lock
gs
add
sbb
testl
fmuls
sbb
dec
dec
clc
fmul
or
mov
add
arpl
loopne
and
or
scas
pop
sub
sbb
pop
jno
js
add
or
dec
xchg
mov
jecxz
nop
pop
cmc
adc
fmull
and
mov
or
cmpsl
mov
add
cltd
dec
daa
out
mov
xor
inc
xor
and
pop
jg
movsb
stos
push
add
into
in
std
aad
and
sub
mov
in
xor
ret
xlat
push
fs
lds
and
or
incl
not
pop
mov
adc
mov
jmp
fwait
mov
xchg
jg
xchg
inc
mov
adc
push
test
push
daa
mov
adc
or
mov
in
mulb
jno
dec
sbb
movsl
mov
fs
out
and
ja
test
inc
cmpsb
mov
push
daa
sub
aad
pop
pop
fwait
rep
test
jl
add
inc
outsb
sbb
test
test
stos
ret
call
repz
xor
ficomps
ret
mov
jecxz
fistps
sub
sbb
lret
scas
mov
jle
and
sbb
adc
pushf
mov
jle
cmpsl
adc
scas
push
stc
inc
xchg
adc
lods
jne
dec
pcmpgtw
sbb
or
pop
aas
mov
scas
bound
xor
jnp
push
pop
inc
bound
sti
in
setl
push
insb
idivb
lds
mov
cltd
andl
pop
mov
test
minps
xchg
das
sub
test
inc
pop
mov
jg
xchg
cmp
repz
sahf
aaa
fstp
mov
out
in
and
push
test
in
movsl
xor
nop
arpl
cwtl
icebp
push
fstl
scas
mulb
sub
lahf
cmpsb
lcall
dec
aad
push
icebp
lret
xchg
hlt
mov
jns
roll
cmp
and
out
fmull
xchg
push
mov
inc
fiaddl
mov
jo
add
mov
xchg
push
sbb
mov
ds
gs
sub
sub
pop
pop
mov
bnd
leave
sub
jle
pop
sarl
push
xchg
jl
pop
rep
and
std
adc
cmp
pusha
dec
insl
cmp
callw
or
ret
cld
ret
fstpl
testb
lods
push
imull
ljmp
insl
popa
clc
fcoms
add
push
xor
loop
jg
mov
pushf
int
lret
push
mov
inc
fs
xchg
adc
or
mov
movsb
inc
adc
mov
cltd
outsb
sahf
sub
dec
cmpsl
cltd
mov
in
test
in
stos
xchg
and
jns
rol
or
xor
cld
and
scas
stc
stos
fidivrl
push
rorb
fsubrl
or
dec
insl
in
push
in
test
push
or
testl
subl
paddd
push
fwait
cmc
xchg
popf
push
pop
dec
data16
scas
dec
scas
jg
mov
jnp
cmp
mov
je
clc
sbb
cmp
adc
mov
mov
sbbb
jb
mov
rcrl
and
imul
rolb
jg
enter
sahf
add
push
cwtl
jge
subl
push
mov
adc
dec
mov
cli
ja
rclb
es
ljmp
repnz
and
sbb
pop
dec
mov
xchg
adc
jns
mov
flds
std
lods
jle
iret
cli
in
dec
push
clc
mov
mov
push
xchg
inc
or
shr
fs
adc
insb
aad
push
inc
icebp
cmc
rolb
stos
push
mov
daa
mov
sub
movsb
mov
out
ret
lea
mov
add
aad
xorl
or
ror
fst
ja
jl
aaa
repz
stos
sub
jge
gs
lock
data16
cmp
outsl
mov
xor
aas
mov
out
test
stos
es
xchg
jbe
arpl
cltd
pop
mov
or
xchg
and
push
cmp
jg
mov
out
rcl
fsub
adc
lret
int
jge
mov
dec
fistps
inc
rolb
in
mov
stos
xchg
and
lods
add
pop
jae
movsl
rcrl
and
ret
cmp
push
or
clc
push
jecxz
outsb
adc
and
mov
ret
rorb
sbbb
mov
xchg
xor
xchg
fisttpl
dec
sarl
fnstenv
dec
insb
jg
rol
pop
cli
sahf
cmp
push
mov
sbb
cmp
xor
nop
mov
js
in
sbb
aas
xchg
pushf
scas
movsl
add
fdivs
in
ret
dec
xchg
or
push
xor
pop
cmpsl
shrl
dec
test
cwtl
mov
fwait
mov
push
rolb
lret
nop
xchg
jae
repz
mov
jbe
sbb
mov
scas
ja
rcrl
sub
nop
mov
lahf
popa
pop
jge
sub
pop
pop
je
dec
mov
jp
sbb
je
inc
fwait
rolb
les
pop
push
ljmp
mov
les
mov
inc
sbb
sti
mov
test
push
mov
mov
lods
cwtl
int
cltd
push
and
pop
cwtl
ret
gs
or
clc
push
movsl
loope
test
jg
cmp
repnz
pop
jecxz
vorps
test
pop
aam
xchg
imul
sub
movsl
and
es
or
or
cmp
mov
pop
dec
add
jnp
jl
test
jge
bound
add
sbb
xchg
or
iret
fcomip
andl
xor
push
fildl
xchg
pop
ja
pop
and
pcmpgtd
dec
pop
lds
cltd
adc
mov
jmp
icebp
mov
jb
scas
fistpll
push
jl
lret
mov
mov
mov
call
xor
popa
insb
cwtl
push
mov
iret
fcompl
into
aas
stos
enterw
lahf
rcrb
cmp
ret
mov
mov
adc
mov
add
orl
aad
lods
lahf
lods
sub
in
repz
call
xchg
fwait
jg
cmpsb
add
rcl
outsb
imul
jecxz
repz
enter
mov
aad
mov
loop
fcomps
sub
mov
je
cmpl
dec
or
addr16
pop
aam
cs
repz
les
sbb
std
in
jnp
jmp
sub
xor
insb
pop
daa
scas
dec
mov
mov
push
jge
pop
push
aad
xchg
pop
cmp
fnstsw
cmp
xor
stos
xchg
cmpsb
repnz
xlat
push
push
sbb
out
sub
xor
pop
daa
inc
mov
xchg
add
in
repz
xchg
call
sbb
push
cwtl
icebp
add
and
pop
push
scas
ja
insb
mov
idivb
sbb
ret
inc
xchg
pop
mov
push
push
loop
imull
lock
push
xor
cmp
hlt
xchg
icebp
test
rolb
addb
mov
sbbl
or
pushl
mov
mov
js
cmp
flds
push
jno
pop
inc
clc
adc
pop
loopne
icebp
ljmp
pop
dec
aad
push
mov
cltd
sub
ret
mov
mov
jne
test
mov
mov
lahf
divl
jl
cmp
in
pop
mov
jb
mov
cmp
adc
dec
sbb
stos
ffreep
outsb
pop
fwait
cwtl
sbb
mov
mov
cmp
mov
push
call
or
daa
pop
jecxz
jp
sub
cmp
rolb
imul
mov
popf
lret
into
cmp
sbb
jno
ficompl
test
insl
dec
loopne
xchg
mov
dec
inc
push
int
sbb
lcall
or
adc
push
stos
xlat
jmp
fstpl
mov
fucomi
mov
pusha
and
xchg
mov
test
push
test
sbb
xchg
push
lcall
and
cmp
xor
xor
jmp
call
cmp
in
jmp
loope
cltd
or
sti
inc
fwait
inc
push
push
dec
jle
icebp
aad
jge
pop
ss
and
sahf
inc
popf
push
fucom
push
or
jae
push
lret
lea
test
lahf
nop
dec
popa
inc
shll
xor
xor
fimull
xor
cwtl
jp
pop
fnstsw
sbb
imul
icebp
fwait
test
mov
inc
or
cmpl
inc
lahf
sbb
dec
mov
stc
dec
cmpsb
and
pop
and
ljmp
imul
mov
push
cmp
std
dec
push
lret
lcall
cs
fistl
inc
stos
stos
push
mov
push
out
push
jl
mov
sbb
xor
aas
xchg
aaa
imul
mov
sbb
mov
addr16
testl
mov
mov
aad
es
sub
jb
call
mov
test
int
adc
push
pop
xchg
adc
sub
fisttpll
pop
mov
fsubrl
add
aad
jg
dec
in
in
stos
mov
arpl
sbb
leave
adc
insl
xor
sub
mov
decb
fwait
mov
push
dec
sbb
jecxz
and
arpl
mov
lea
sti
mov
ds
sub
cmp
cmpsl
sbb
sub
and
mov
xchg
jge
stos
cltd
mov
rep
mov
add
int3
inc
imul
sub
sub
mov
arpl
lsl
mov
mov
push
stc
repnz
push
dec
mov
nop
pop
out
mov
xor
dec
xchg
arpl
xchg
and
cmp
iret
or
js
dec
shl
lds
fwait
mov
add
xchg
les
dec
dec
outsb
adc
aas
cmc
pop
push
jmp
jmp
ret
cwtl
pop
out
push
and
cmpsl
les
mov
or
ret
gs
jns
loope
stos
xor
pusha
add
lahf
jnp
sbb
daa
test
jmp
lahf
push
jo
jae
adc
xchg
sub
aas
mov
in
stc
jb
outsl
sbb
lret
lret
stos
call
inc
aaa
cwtl
or
roll
dec
jecxz
push
stc
pop
fstl
xchg
cld
and
inc
mov
adc
pop
xchg
pop
clc
pop
stos
inc
adc
fcomps
iret
ds
sbb
mov
sub
cmovae
jmp
mov
js
sbb
add
xlat
xchg
mov
push
inc
sbb
and
sub
mov
jmp
add
stc
scas
and
fdivrl
pop
mov
pop
pusha
repnz
repz
lret
xchg
inc
inc
dec
add
jo
popf
jge
outsl
xor
in
push
pop
and
inc
push
mov
and
ljmp
clc
or
xchg
out
xchg
push
std
and
inc
stc
aaa
push
add
add
mov
xchg
mov
and
and
cmp
cmp
xchg
mov
push
inc
imul
in
xchg
stos
lcall
mov
or
mov
add
push
movsl
repz
push
adc
aam
fstpl
mov
int3
imul
xchg
repnz
sub
lods
mov
pop
pop
nop
mov
imul
or
mov
in
xchg
bound
enter
inc
push
imul
out
addr16
mov
pushf
sub
hlt
cltd
fld
sub
popf
stos
xor
xor
mull
inc
xchg
lret
mov
push
out
jmp
aam
inc
sub
jns
js
sub
inc
mov
cmpb
enter
bound
icebp
dec
sub
rcrl
xchg
fcompl
inc
cld
aam
inc
dec
shl
adc
notl
mov
push
adc
sub
mov
imul
and
jle
mov
aad
adc
test
and
mov
mov
aam
pop
bnd
push
pusha
outsb
pop
mov
inc
pop
addr16
inc
inc
mov
call
sahf
lcall
dec
es
push
mov
insl
adc
shll
sti
mov
dec
loop
rcll
mov
repnz
dec
push
outsl
cmc
push
xchg
cwtl
xlat
mov
fisubrl
fldenv
mov
xchg
inc
clc
adc
xchg
shlb
cmp
fnsave
sub
std
xchg
xchg
mov
or
pop
dec
sbb
int
cli
push
outsb
inc
ja
enter
jne
or
inc
push
test
lock
mov
cmc
fistps
push
inc
sbb
pop
add
bound
mov
sbb
adc
iret
pop
push
mov
cltd
cmp
dec
pop
and
iret
lock
stos
lahf
scas
add
pop
jne
xor
cmc
pop
pop
js
sbb
scas
bound
cmp
rclb
repnz
mov
notb
lds
cmp
imul
dec
mov
mov
inc
mov
leave
xchg
adc
add
mov
lods
mov
pop
cwtl
test
fdivl
cmpsl
or
sarb
xor
cwtl
aaa
icebp
sbb
pop
mov
out
push
inc
fdivrl
loope
and
or
push
cmp
cltd
shl
dec
add
sub
fsubrs
in
in
mov
test
outsl
iret
fists
ret
arpl
sub
xchg
bound
pop
movsl
mov
aaa
jmp
dec
push
pop
xor
sub
cmpsb
cs
jns
cmp
arpl
sbb
xor
inc
sbb
inc
add
xchg
les
hlt
push
pop
push
mov
hlt
mov
push
xchg
fstpl
add
dec
and
insl
mov
loope
cmp
imulb
xor
mov
repz
push
pop
mov
and
clc
pop
js
cmp
out
nop
fimuls
sbb
adc
je
push
or
insl
pop
aam
fmuls
in
jl
bound
or
mov
addr16
movsl
jge
adc
inc
lea
imul
call
jnp
push
mul
int
cld
jecxz
xor
fnstenv
inc
popa
mov
daa
movd
pop
pushf
push
inc
mov
movb
mov
mov
jle
push
dec
push
cld
dec
nopl
jb
in
daa
xchg
loopne
iret
mov
test
or
jo
lret
cmp
jge
pop
pop
and
lret
cmp
pop
nop
xchg
scas
sbb
stc
pusha
mov
jbe
insb
xlat
lods
enter
xchg
mov
add
sbb
cmp
call
addr16
or
mov
jbe
rorb
push
insl
nop
cmpsb
push
test
aad
icebp
lock
mov
mov
xchg
bound
pop
rcrl
popa
add
pop
and
xchg
enter
popa
cld
inc
adc
mov
arpl
mov
mov
add
pop
mov
jbe
fsubs
pop
cmp
jmp
cld
out
ljmp
out
dec
cltd
mov
xchg
inc
mov
pop
lea
in
jle
mov
pop
and
sub
dec
xor
mov
push
sbb
pusha
std
data16
jecxz
incb
mov
sbb
movsl
cli
push
out
cld
int
mov
and
mov
les
push
sbb
xor
jp
rorb
cmp
pop
adc
and
xorb
repnz
leave
addl
rorb
sbb
bound
imul
push
rcll
and
push
dec
repz
popa
push
ficoms
test
mov
mov
incb
cmpsb
ret
mov
pop
push
xchg
adc
adc
jnp
clc
mov
stos
xor
pusha
ss
out
mov
dec
add
xchg
mov
mov
push
mov
subb
jbe
adcb
and
dec
cmc
inc
sbbb
mov
and
gs
mov
sbb
fcomi
out
das
lea
dec
inc
push
pop
cmp
orl
jl
and
sbb
pop
inc
mov
jmp
cmp
lods
jne
xchg
mov
int
fdivr
cmc
imul
stc
loopne
and
mov
lods
jb
or
es
sti
inc
in
mov
add
notb
fisubrs
ss
outsl
ja
inc
push
dec
dec
out
aad
lods
push
or
stc
outsb
adc
jp
loopne
sbb
sbb
adc
add
xchg
ja
push
out
les
sarb
jle
push
sub
fs
pop
jge
repz
lret
scas
jb
outsl
cmp
cmc
mov
cli
out
imul
add
daa
xchg
inc
xorl
cmp
js
int
test
xor
fwait
and
mov
or
and
iret
mov
lret
std
sti
jp
pusha
addr16
dec
addr16
loop
xorb
ljmp
xchg
inc
inc
fwait
and
flds
adc
push
out
js
out
ja
mov
addr16
lret
mov
inc
js
push
pop
cltd
jo
fwait
lea
cmpsb
push
insl
xchg
popf
repz
ja
push
mov
sti
mov
outsb
sbb
push
and
popa
xchg
aas
movsb
jl
xlat
pop
cmp
and
enter
test
jmp
jnp
in
ss
cmp
adc
fwait
dec
add
outsb
lcall
das
mov
hlt
push
rcrb
cmp
das
mov
or
push
les
stc
push
dec
lods
mov
push
jecxz
xor
pop
mov
rcr
cmpsb
int3
push
add
int
jns
notb
mov
sub
repnz
stos
push
sti
scas
fcmove
test
jae
cmp
in
mov
stos
stos
out
mov
mul
lock
sbb
rcr
xor
pop
fistl
iret
pop
add
sahf
into
loop
popw
cmpl
dec
hlt
xchg
fcomp
pop
mov
insl
adc
xchg
in
faddp
dec
pop
imul
mov
cmpsb
fwait
arpl
iret
mov
mov
cmp
test
ljmp
rolb
xchg
pushf
sbb
loopne
inc
fdivrs
inc
cwtl
xchg
ljmp
sub
mov
add
pop
adc
mov
ds
stos
adc
mov
cmpsb
outsb
std
ljmp
fs
add
inc
mov
or
push
pop
jae
or
sub
inc
sub
sub
xor
cmc
lds
or
push
lods
in
in
lods
mov
enter
xor
or
es
jns
icebp
pop
lahf
fdiv
adc
mulb
lret
dec
pop
mov
cmpsb
les
cmp
inc
mov
dec
jnp
icebp
push
dec
cmp
data16
out
js
xchg
jle
dec
add
pop
dec
test
dec
xlat
fcmovnu
xchg
jle,pn
or
insb
sub
imul
push
aaa
fwait
movsl
mov
jb
cmp
fldcw
mov
mov
ficompl
or
test
mov
mov
sub
mov
xor
inc
js
jmp
lods
in
cltd
xor
dec
icebp
mov
cmp
cli
and
push
push
push
es
gs
dec
imul
popa
add
sub
pop
push
pop
mov
mov
xor
outsb
ret
sahf
outsl
jmp
xor
mov
adcl
adc
mov
js
insb
aas
fs
out
cmp
dec
mov
test
jmp
xlat
imul
lds
xchg
add
lods
stos
push
jae
stos
jne
sub
outsl
ret
inc
inc
inc
es
sub
mov
adc
pop
insl
push
rorb
xlat
das
lods
test
movsl
fcoml
mov
rcrb
add
cwtl
mov
jae
sub
jae
jb
gs
cmp
sbb
and
lock
push
popa
mov
adc
out
push
stc
push
jl
lahf
pop
lds
cmpsl
cmp
pop
inc
xor
ret
testl
ds
mov
push
testl
jnp
mov
xchg
arpl
fs
js
cmp
mov
jbe
movsb
rcl
pop
jl
mov
adc
xlat
sti
test
addb
xchg
repz
sbb
push
pop
insb
repnz
fbstp
fidivrl
mov
jle
inc
or
push
out
lods
mov
ljmp
inc
jnp
push
sbb
jb
pop
gs
mov
es
xor
out
cmp
xor
jne
xor
popf
cli
sub
pop
fs
dec
xlat
add
adc
fucomi
lds
jo
lods
jnp
insl
and
daa
stos
xchg
xchg
gs
add
xchg
adc
aam
add
scas
pop
outsl
jb
or
adc
push
arpl
jo
jb
jo
jno
je
mov
or
leave
add
adc
popa
and
repnz
xor
fnsave
xlat
mov
push
scas
mov
add
or
gs
jge
insl
xor
cmp
pop
icebp
xorl
pop
test
add
seta
out
adc
gs
mov
cmpsb
add
inc
xor
xchg
subl
stos
xchg
cmp
nop
test
testb
dec
pop
pop
and
push
es
jne
push
int3
push
js
scas
insl
pop
aam
adc
cmp
or
pushf
mov
add
adc
pop
in
mov
mov
adc
mov
jnp
popa
add
lahf
add
inc
lret
lret
sbb
mov
and
sti
test
hlt
test
adc
and
scas
sbb
inc
in
jno
insb
rcrl
inc
xor
mov
mov
imul
and
add
and
sub
movsb
inc
mov
pop
mov
dec
jbe
or
outsl
int3
lods
xchg
and
lcall
xor
lcall
jl
and
sub
adc
int
push
xchg
pop
cmp
in
dec
xor
and
add
and
nop
lahf
cli
into
jg
and
repz
xor
or
lds
inc
rcrb
push
orb
pop
outsb
popa
sbb
std
loope
sarb
mov
jnp
mov
and
call
in
sub
mov
push
cmp
dec
scas
cmpsl
outsb
push
inc
lds
jns
mov
or
ds
repnz
jne
push
aam
jecxz
in
dec
cmpsl
les
movsl
in
jbe
jno
mov
js
and
sbbb
adc
pop
xor
fsubl
jbe
mov
pop
sti
fcmovnbe
mov
add
ja
add
hlt
loopne
mov
mov
and
pop
adc
ljmp
clc
in
and
mov
shrl
adc
jne
mov
movsb
test
mov
adc
sub
cmp
test
cmp
jmp
mov
ret
sbb
daa
xchg
inc
mov
lcall
mov
out
xchg
ud0
mov
mov
lock
mov
test
mov
mov
mov
or
adc
jbe
xchg
sub
push
adc
mov
aad
cwtl
stos
jo
xchg
je
jnp
divl
cmpsl
sub
imul
pop
jnp
sbb
cmp
jmp
cmc
loopne
add
jb
fcmovnu
mov
xor
rorl
icebp
cli
adc
ss
push
add
loopne
daa
sub
sbb
jg
les
data16
mov
or
pop
xchg
lods
fwait
scas
cmp
jo
pop
mov
cmp
jl
xchg
add
jne
ret
in
xchg
int
divl
mov
sub
dec
into
xor
dec
and
mov
mov
jg
repz
into
adc
sub
adc
out
mov
jo
js
jb
sub
popf
fldl2t
xor
dec
dec
xchg
imul
adc
jmp
cmp
jae
test
lea
jb
xchg
arpl
incb
sbb
sbb
into
js
ret
pop
andl
inc
movsb
mov
fdivrl
mov
push
ljmp
mov
jecxz
inc
push
gs
mov
sub
clc
xor
pop
or
adc
fcmove
add
sbb
nop
sub
sbb
fstps
iret
mov
mov
add
nop
push
mov
adc
outsb
pop
xor
jmp
imul
out
pop
xchg
insl
pop
push
inc
inc
loope
sbb
or
insl
les
cli
dec
xor
or
in
ret
mov
stos
cmpsl
sub
rorl
xchg
ss
pop
stc
stos
js
mov
cmp
xchg
mov
out
jle
push
popf
insl
jo
or
and
jl
shrb
jo
cmp
dec
mov
cmpsl
jecxz
mov
xchg
add
adcl
mov
push
imull
cld
lods
insb
add
nop
xchg
les
pop
sarb
push
fisubrl
or
pushf
iret
mov
push
dec
sbb
add
mov
fbstp
scas
int
sbb
push
sbb
sbb
cmp
shlb
xor
sub
ljmp
cmp
lea
inc
rcrl
faddl
jne
rorb
jne
hlt
test
jbe
mov
sub
jbe
add
insl
or
add
xor
icebp
imul
incl
add
aad
mov
out
jo
clc
sub
into
xor
and
inc
dec
lret
add
mov
fstl
jmp
add
pop
insb
cmp
int
jle
xorb
imul
stos
out
inc
xchg
push
dec
gs
lock
loope
push
fcmovu
pop
jne
pusha
mov
repz
push
mov
leave
jecxz
pop
pop
inc
iret
jns,pn
fiaddl
adc
stos
push
loope
pop
ret
fdivr
cli
sub
scas
cld
sub
mov
lret
dec
out
rol
cli
rol
and
and
insl
pop
outsl
dec
pop
push
inc
adc
fldl
push
mov
xor
rol
mov
lods
or
mov
lea
cs
pop
xor
jmp
jecxz
adc
jmp
pop
cmp
add
insl
icebp
out
popf
out
test
mov
jae
dec
mov
or
loop
dec
or
gs
outsl
cs
subl
mov
clc
push
jns
push
jge
loope
ret
xchg
push
cwtl
jge
je
dec
pop
mov
lahf
mov
adc
js
aad
pusha
and
rclb
mov
sahf
push
cwtl
jno
shll
cmp
jo
dec
add
call
and
xchg
adc
or
push
ret
das
lret
fldenv
aas
adc
jae
imul
mov
pop
cmp
icebp
imul
fmul
ss
adc
fdiv
xchg
dec
or
int3
je
add
push
xor
sti
pop
in
mov
lea
jle
repz
cmp
stc
rcrb
out
aaa
jae
push
pop
sbb
into
aam
adc
mov
jmp
jmp
sbb
ret
mov
inc
aam
mov
pusha
push
std
jns
push
mov
add
pop
icebp
mov
cmp
fcmovnu
xchg
xchg
pop
cld
repz
dec
or
jne
pushf
xor
mov
and
pushf
repz
inc
xchg
cli
jp
cmpsl
mov
js
adc
or
incl
popf
pop
cmp
rorb
mov
icebp
fimuls
out
cs
mov
pop
arpl
cmp
dec
outsl
imul
jmp
cmp
dec
push
js
jle
and
mov
cmp
mov
outsb
stos
xor
mov
sub
stos
or
jnp
jo
xor
hlt
lods
out
aas
xor
jecxz
sbb
mov
dec
dec
pop
arpl
mov
dec
dec
pushf
shlb
mov
jnp
test
xchg
stos
jae
out
push
ja
fldt
lods
in
inc
addr16
xchg
mov
and
daa
sbb
scas
and
adc
xchg
shlb
dec
rol
add
aad
or
lret
dec
mov
xor
cmp
fdiv
cltd
mov
inc
aad
lods
mov
push
adc
addl
arpl
stos
dec
jle
pop
sbb
rcl
popf
xor
fwait
scas
ror
sub
mov
sub
add
or
lea
inc
inc
bound
or
sysenter
push
and
mov
mov
sahf
stos
pushf
jle
rolb
mov
pop
jnp
repnz
addr16
pop
add
cli
test
push
mov
add
xor
mov
mov
sbbl
orb
arpl
movsb
rcll
in
cltd
ss
sbb
jo
cli
fnstenv
mov
mov
fisubrs
int
pusha
dec
mov
jnp
fisubl
mov
add
push
and
mov
dec
jb
add
xor
push
daa
ljmp
ja
lret
add
pop
or
aam
rol
aam
movsb
stos
iret
cmp
push
test
icebp
ja
push
jmp
and
test
pop
enter
xchg
jbe
in
inc
push
outsl
mov
dec
insb
jne
test
mov
rep
add
test
cmp
push
push
mov
mov
and
dec
aam
cwtl
pop
stos
js
sub
xorl
bound
test
idivl
cltd
fidivrl
mov
rcll
and
jmp
faddl
enter
mov
jle
sahf
imul
mov
sub
inc
clc
or
sub
push
jg
pusha
test
andl
sti
or
loopne
and
mov
jnp
xor
enter
popf
ret
in
out
xchg
inc
mov
cltd
adc
and
push
jae
mov
mov
push
testl
pushl
mov
push
fnstenv
inc
jecxz
out
pop
jmp
jno
sub
callw
mov
xchg
shrl
xlat
sbb
out
inc
sbb
inc
add
fwait
mov
pop
je
or
sub
dec
push
sub
jge
in
fisubl
ja
mov
push
mov
mov
iret
sub
pop
gs
cmp
rol
out
iret
sbb
mov
test
fwait
das
jg
pop
cmp
sbb
mov
leave
xor
fs
or
dec
neg
sbbl
jb
add
jle
cmpb
aas
dec
jp
out
inc
clc
sbb
mov
lods
jge
mov
sti
and
pop
dec
popa
dec
pop
lods
mov
test
les
cmc
pop
or
mov
jmp
push
sub
xchg
mov
test
adc
sbb
inc
push
outsb
push
pop
out
and
pop
into
push
or
sub
pop
in
out
int3
adc
pop
pop
fstpl
mov
cmp
andl
in
and
cmp
mov
adc
xorb
pop
jecxz
inc
push
dec
jge
mov
mov
mov
inc
inc
leave
mov
cmp
xchg
leave
insb
test
and
adc
stos
dec
mov
mov
inc
cmp
cltd
lret
dec
loope
ds
lahf
lods
add
mov
or
cs
icebp
mov
mov
enter
sbb
push
outsb
lret
sbb
ss
push
mov
inc
addr16
arpl
push
xchg
iret
lock
jg
je
dec
mov
or
pop
popa
cltd
pushf
mov
test
mov
mov
push
inc
dec
loope
repz
rorb
sub
cmc
pushf
loopne
xor
xchg
lcall
dec
pop
int3
xchg
mov
test
fscale
loope
mov
stos
mov
or
jg
adc
sub
cwtl
sti
movsl
nop
cmp
add
dec
xchg
shlb
lods
dec
sbb
push
xchg
lea
adc
or
movl
mov
clc
adcl
rcl
mov
sub
cmpl
adc
and
push
mov
int
mov
xor
shl
push
in
sub
mov
and
lock
mov
out
daa
cmp
pop
lret
adc
xchg
mov
add
aad
push
pop
mov
xchg
aad
push
xchg
mov
or
sbb
sub
ret
mov
ret
in
shll
jnp
xor
mov
push
or
push
pop
das
test
add
lock
jno
push
or
mov
ret
xchg
lea
jp
push
mov
sub
fwait
iret
inc
xor
mov
inc
sahf
inc
xor
lds
data16
mov
loopne
shrl
aaa
jg
sbb
cmp
mov
inc
mov
es
arpl
add
dec
jae
addr16
jne
pop
push
mov
stos
add
sahf
cwtl
cmpxchg8b
test
cmpsb
and
xorl
mov
xor
xchg
scas
lods
sub
popf
in
fidivs
add
movsl
cmp
movsb
mov
pop
lods
or
sbb
sarl
ss
push
addr16
int
cmpsl
jmp
lcall
repz
add
sar
call
xchg
jno
fld
imul
shl
mov
int3
das
jno
inc
jl
movsb
out
nop
in
sti
or
mov
popf
sbb
lahf
push
loop
jmp
cmp
sub
inc
int3
jg
pop
ret
in
fidivl
ss
mov
jbe
adc
ret
mov
sbb
jl
je
lahf
filds
imul
jae
xor
test
les
stos
pop
aad
or
roll
adc
mov
mov
sub
adc
push
stos
pusha
subl
mov
test
mov
mov
lock
xchg
push
mov
sub
or
mov
mov
lcall
jnp
mov
push
pop
or
les
pop
ret
sti
cmpsl
xor
pop
addl
leave
je
mov
dec
pop
inc
dec
sub
jo
hlt
mov
repnz
rcr
add
movsl
nop
xor
jg
xchg
ret
xlat
push
inc
inc
in
js
in
cld
push
cmpsb
repz
in
dec
addb
repz
aam
or
dec
les
cmp
mov
outsb
insb
std
or
dec
sbb
sahf
xchg
xchg
daa
sbb
jmp
das
inc
adc
xorl
int3
push
int3
outsb
sbb
cmpsl
rol
dec
jecxz
sbb
lods
mov
fstps
scas
pop
jbe
aas
repz
jg
push
mov
adc
mov
cmc
ljmp
dec
inc
xor
mov
test
adc
push
and
jb
jl
ja
je
push
jns
jge
movl
enter
imul
lods
les
mov
test
shrl
jne
out
jb
adc
push
mov
or
lret
lret
ss
cmp
jg
mov
roll
stos
mov
push
xchg
push
mov
cld
mov
sahf
out
daa
dec
jecxz
cltd
call
ret
inc
and
add
shlb
xor
out
mov
jnp
mov
adcb
push
aaa
mov
gs
sbb
pop
pop
jmp
lea
add
mov
and
cmp
in
xchg
movsl
pushf
popf
mov
jl
int3
inc
aas
lahf
mov
leave
fbld
adc
push
psrld
xor
cmp
push
pushf
mov
adc
xor
push
cmp
shl
mov
outsl
outsb
sub
ja
arpl
mov
or
inc
dec
jne
cmp
jl
jno
es
or
push
sub
ljmp
xchg
dec
fwait
std
pop
mov
pop
scas
xchg
xor
icebp
add
aam
idivl
xchg
imul
cmpsw
stc
mov
lea
sub
mov
daa
aad
bound
rolb
stc
jne
mov
and
fwait
imul
push
dec
or
arpl
fsubrs
mov
xor
push
xor
mov
xor
je
lcall
mov
xchg
adc
in
mov
mov
insl
jo
fs
outsl
outsl
xchg
stc
ret
inc
inc
sub
pop
push
mov
std
adc
dec
lahf
mov
xchg
mov
sub
ja
add
jmp
adc
testl
aaa
icebp
frstor
adcl
mov
mov
rorb
dec
mov
xchg
cmpsb
aad
pop
push
pop
ss
dec
clc
xchg
cmpsl
and
fsubrs
add
movsb
xchg
data16
shr
rol
sbb
and
outsb
pop
cmpsb
add
mov
mov
data16
lret
push
push
test
push
std
lret
adc
mov
mov
push
repnz
push
int
inc
mov
push
out
test
jp
dec
xchg
pop
inc
jle
and
imul
add
test
push
test
std
cmp
xor
scas
xchg
dec
xchg
stc
mov
xchg
sbb
jmp
std
pop
adc
lahf
ficomps
cld
sti
jb
push
cld
xor
sub
pop
into
fsubrl
and
sbb
lret
out
cmp
xchg
jle
push
aaa
arpl
jmp
jbe
mov
ja
xor
outsl
mov
jecxz
xchg
lock
jg
push
gs
and
je
pop
in
mov
mov
mov
mov
int
xchg
lods
call
sbb
cmpsb
das
in
mov
insb
mov
test
int
stc
jae
cmp
mov
mov
xor
pop
dec
imul
and
je
fcompl
loopne
inc
xor
and
inc
aaa
js
cld
lea
and
jns
pusha
xchg
movsb
mov
pop
push
arpl
cwtl
wrmsr
mov
cmp
and
lods
lcall
mov
addr16
inc
mov
mov
sub
rclb
sarl
or
cmp
dec
xchg
repz
lret
divl
out
fiadds
sub
lahf
subb
mov
int
sahf
jmp
ja
popf
bound
jo
cltd
push
jl
jmp
lahf
sti
movsl
fldl
push
shrl
xor
je
in
pop
dec
inc
sub
scas
add
cmp
pop
push
mov
mov
mov
int3
popf
iret
mov
subb
mov
dec
data16
add
mov
shll
and
mulb
sbb
pop
cmp
push
divl
stos
xor
andl
lea
dec
fisubrl
xor
rcrb
adc
pop
push
popa
push
inc
cwtl
mov
dec
enter
out
cwtl
loope
sahf
sahf
sbb
es
xorl
mov
sbb
hlt
push
sbb
sbb
mov
scas
in
sbb
mov
fstl
lea
pop
adc
xlat
iret
mov
or
jp
mov
dec
testl
into
xor
lret
sbb
push
lock
push
xchg
rolb
dec
xchg
cmp
or
xor
sbb
or
cmc
loopne,pt
push
test
andb
out
jmp
push
mov
lods
rorl
out
cmp
mov
cmpxchg
gs
add
xlat
inc
mov
and
std
hlt
rcr
arpl
jae
fldl
push
jmp
or
movsl
movl
inc
loop
loopne
xor
or
out
in
stos
and
adc
outsl
sarl
test
enter
push
pop
frstor
mov
cmp
cmc
add
shll
popf
dec
ss
xor
enter
test
fldenv
idivb
adcl
mov
jnp
cltd
mov
add
aaa
dec
test
paddq
pop
into
imul
ror
cmp
jp
mov
xor
dec
xor
nop
jns
push
fdivl
adc
out
jmp
pop
stc
movsl
adc
mov
jmp
cmpsb
ljmp
daa
jecxz
pop
into
popa
mov
sub
push
xor
xchg
daa
insb
mov
mov
inc
cwtl
jle
das
add
ficoml
orb
clc
stos
jmp
sbb
jge
pop
popa
ret
ret
add
test
or
lcall
mov
xor
and
test
clc
and
jns
push
fildl
xor
mov
cmpsl
inc
add
mov
push
xlat
decb
pop
ja
clc
add
clc
push
sbb
test
ds
xchg
adc
jle
pop
push
insb
and
mov
test
icebp
int3
fsub
mov
scas
jae
inc
xchg
scas
and
repz
push
push
sarl
xor
sub
ffreep
add
repnz
out
add
outsb
push
pop
inc
pop
mov
sub
enter
and
loop
repz
mov
dec
sbb
ret
sub
imul
jnp
stc
pop
push
stc
jmp
xor
sbbl
sub
add
arpl
arpl
add
xchg
jbe
lock
sti
cmpsb
or
insl
sbb
test
jecxz
frstor
jg
fistps
roll
xor
loope
sbb
popf
ret
inc
lods
js
xchg
xor
insl
jo
fsubrp
xchg
in
add
shrl
adc
aaa
push
xorl
adc
lret
jno
xchg
pop
ljmp
test
outsl
mov
fnstenv
mov
mov
insb
rol
and
and
sub
lret
fbstp
je
jns
ret
test
dec
pushf
aaa
fiaddl
iret
fwait
jb
add
push
clc
mov
push
cmp
push
and
fsts
adc
fwait
gs
push
popf
jno
mov
sbb
xchg
js
addr16
push
fists
jo
lds
and
push
pop
inc
adc
sub
test
stos
std
je
dec
insl
scas
add
cmp
mov
jmp
sub
lahf
cld
sbbl
lock
xor
test
out
pop
xor
ret
lret
push
paddsb
mov
insb
rol
pop
mov
notl
push
lds
xor
fdivrs
xor
pop
ljmp
ja
add
incl
loop
mov
jmp
or
call
aam
scas
lea
ret
cmp
faddl
test
repz
push
adc
push
leave
inc
mov
add
repnz
xchg
jae
fiadds
in
fiadds
jp
jg
push
or
nop
cmp
xor
repz
mov
mov
mov
adc
movsl
arpl
pop
push
cmp
std
imul
fs
rcl
in
cmp
rorb
sub
cmc
push
decl
push
jnp
lret
cmc
lcall
les
and
mov
ljmp
out
sahf
decb
int
push
pop
add
scas
xchg
addr16
xor
dec
pop
inc
es
lds
mov
and
clc
xor
mov
les
or
cld
ljmp
mov
jnp
rorb
nop
loopne
ds
fsubrp
mov
ss
and
dec
cmp
cmc
mov
loope
ficoms
mov
cmp
loopne
mov
inc
xor
leave
adc
mov
pop
sbb
roll
cs
jno
xor
std
int3
call
cmc
dec
sub
adc
inc
popa
sub
je
mov
pop
inc
fs
das
push
xchg
cmp
lods
cmp
pushf
mov
jb
xchg
jns
pop
popa
or
push
inc
ljmp
jae
addr16
repnz
push
ret
mov
push
mov
sub
pop
sbb
mov
pop
and
lods
add
sbb
pushf
jg
aam
jmp
mov
mov
push
jmp
rcrb
mov
stc
mov
mov
push
bound
add
jmp
outsl
and
adc
cmp
aaa
inc
rcrl
and
jge
sub
loopne
je
push
cmp
test
adc
scas
xor
sti
push
data16
jecxz
cmp
dec
nop
clc
push
xchg
push
fistl
aad
xchg
jns
adc
xchg
or
jmp
or
xchg
js
and
fildl
ss
xchg
rclb
mov
cmp
or
and
aad
sbb
inc
lock
mov
or
mov
mov
decb
cmp
fisttpll
test
leave
xor
xor
cmc
sub
out
cmp
clc
jecxz
arpl
pop
jnp
mov
cltd
jmp
xlat
shll
movsb
ficompl
movsl
dec
pop
sbb
cmp
xchg
dec
fistps
test
fsubr
dec
fsubr
jp
ss
pop
insb
mov
sub
arpl
and
test
mov
sbb
push
test
outsb
dec
pop
loopne
dec
xor
test
pop
out
scas
popa
pop
cmp
mov
cmpsb
les
outsb
shll
and
jle
movsb
mov
mov
xchg
js
xchg
pop
cwtl
imul
sbb
add
aas
mov
shll
xor
out
movsb
adc
mov
pop
and
int
adc
sub
and
adc
sub
mov
sbb
jns
lods
stos
adc
out
push
mov
fbstp
loopne
push
add
sahf
neg
dec
and
mov
xor
negb
enter
dec
mov
mov
xchg
push
loope
out
and
xor
clc
xchg
or
xor
xor
mov
jmp
testl
inc
pop
inc
mov
adc
mov
rcrb
mov
fidivrl
jmp
jl
pushf
xchg
js
mov
out
js
in
xlat
popa
cltd
sti
xor
cmp
push
sarb
scas
jo
pop
in
pusha
pop
xor
data16
inc
jne
sbb
rol
das
cld
sarb
int
in
fdivp
or
repz
dec
lcall
test
outsl
stos
pusha
jae
mov
cmp
pop
dec
pusha
popf
mov
push
lods
mov
sub
jns
push
jo
mov
dec
lods
adc
es
add
add
pop
adc
jb
insl
mov
dec
sti
insb
es
cmp
fisubs
push
cli
rcrl
ljmp
or
mov
arpl
mov
aaa
fistpl
addr16
sahf
cmpsl
or
xor
pop
aam
fs
jae
pop
inc
rolb
add
lcall
pop
push
xor
mov
xor
shl
cmova
ret
fs
aam
outsl
test
or
xchg
jmp
mov
dec
mov
int3
lock
fistl
pop
pop
or
ja
sbb
ljmp
nop
inc
mov
sbb
dec
fbstp
test
notb
cmp
in
test
and
push
daa
pop
mov
in
cli
add
test
mov
in
adc
mov
inc
and
xchg
inc
add
aaa
jg
imul
rorl
shlb
shld
jnp
lret
gs
cmp
push
xchg
and
div
inc
mov
std
insl
das
insb
xor
mov
loope
pop
jge
jb
das
negl
ret
imul
cmc
mov
and
mov
push
push
jp
nop
pushl
movsb
sbb
and
lea
cwtl
push
or
jge
stos
les
imul
mov
ret
add
flds
nop
bnd
fwait
and
js
jne
int3
rolb
outsl
push
jp
fs
int
mov
mov
out
dec
cwtl
cmpl
mov
aam
xchg
add
pop
loop
mov
mov
and
cmp
mov
imul
mov
repnz
jae
ja
js
into
decl
cmp
aad
jle
jge
and
add
aas
mov
pop
xlat
adc
sub
xlat
bound
hlt
push
mov
sub
xor
ret
lods
or
mov
jg
cmp
push
rol
inc
pop
mov
mov
fcompl
scas
sub
dec
aas
jbe
aaa
stc
mov
int
xchg
xor
lock
fnstenv
fldcw
popa
fstpt
rcll
mov
incb
sub
sub
mov
sub
jne
pop
sbb
inc
lods
sti
jbe
stos
mov
mov
fiadds
and
jmp
movsb
dec
lods
sub
pop
fdivr
imul
ret
or
dec
in
sbb
and
call
inc
clc
fists
inc
ja
lahf
sarb
lahf
popf
imul
pop
jge
rcl
nop
or
add
aaa
dec
lcall
sarl
repz
test
push
addb
mov
mov
pop
jns
push
pop
push
push
push
pop
es
push
cmc
push
pusha
add
and
jmp
pop
les
add
es
rcrb
mov
jnp
ljmp
fdivr
loope
imul
fs
inc
roll
mov
leave
lret
mov
pop
rcrl
pop
lods
movsl
out
adc
enter
test
mov
ss
sbb
into
xlat
not
or
std
cli
mov
popf
cld
jge
jecxz
and
mov
add
in
dec
cmc
stc
push
add
movsl
int
sub
inc
filds
mov
jb
aad
jle
inc
movsl
aad
pop
popa
or
add
stc
test
test
cmpsb
mov
rcr
or
adc
push
sbb
in
mov
mov
aas
outsl
cli
aam
mov
int
sbb
xchg
dec
sbb
out
adc
jl
mov
mov
lret
sbb
lods
lds
ret
flds
adc
dec
stos
arpl
cwtl
pop
push
cmp
int3
cld
or
frstor
test
and
sub
leave
arpl
mov
pop
hlt
in
and
cld
pop
xchg
xchg
xchg
jl
leave
xchg
push
cmc
std
and
inc
shll
rcr
enterw
jmp
pop
jae
xor
paddsw
sbb
popa
inc
inc
lcall
outsl
mov
cmpsb
cmp
in
jnp
jae
cld
and
stos
dec
mov
outsl
pop
push
xor
mov
stos
sbb
ljmp
shlb
idiv
and
subl
xchg
sub
loop
imul
rcl
rolb
inc
repz
rcl
add
hlt
adc
xchg
and
and
shlb
mov
pop
lods
push
mov
inc
push
jno
sub
ret
jmp
scas
jg
cmp
cmpsl
lock
dec
sbb
stos
or
shrb
cmp
push
mov
lret
push
jp
notl
mov
mov
lcall
jb
scas
ja
aam
lds
fstpl
std
ffreep
arpl
pushf
lret
lahf
lods
andl
ja
icebp
cmp
or
ljmp
inc
shrl
insb
test
gs
out
aam
lahf
hlt
ljmp
dec
lret
jne
adc
and
jp
adc
and
dec
cli
lret
sbb
scas
scas
dec
cmp
int3
int3
sbb
mov
mov
push
lea
addb
call
adc
push
or
arpl
mov
imull
daa
mulb
pop
adc
push
adc
sub
mov
popa
adc
enter
clc
fcoml
lret
sti
outsb
sub
push
scas
cmpl
fstpt
aad
push
in
test
pop
xlat
push
dec
pcmpeqw
xchg
cmpsl
jecxz
sub
or
mov
pop
into
mov
jmp
sub
pop
push
loop
inc
iret
mov
fcompl
push
stos
mov
ret
push
sub
stos
testl
jg
xlat
xor
push
les
sbb
mov
or
adc
inc
and
ljmp
add
cmp
sahf
jge
mov
dec
jmp
out
mov
jno
adc
jnp
icebp
sbb
sbb
lahf
or
push
hlt
nop
ds
mov
mov
ds
imul
and
ret
out
xchg
rcll
addr16
add
adc
push
and
mov
cmp
and
pop
jmp
or
movsl
push
mov
imul
pop
add
std
ja
push
sub
cmpb
test
js
cmp
pop
jl
movsl
es
pusha
adc
ror
fcomp
add
jg
pusha
sti
arpl
test
mov
push
sbbl
mov
mov
cmp
leave
sub
cltd
jno
leave
and
mov
insl
sbb
test
xchg
xchg
push
movsb
in
je
ljmp
test
movsl
xchg
out
lods
push
dec
fdivs
inc
adc
dec
inc
mov
push
push
in
lret
xchg
jnp
jp
mov
sub
outsl
test
mov
or
xchg
mov
push
dec
lret
data16
cmp
xchg
lods
add
mov
in
dec
push
cmp
cmp
loope
popa
cwtl
es
or
pushf
mov
sub
inc
dec
cli
imul
int3
in
test
mov
fdivrl
sbb
shll
fmul
stos
mov
pop
mov
jg
cmp
fiaddl
inc
mov
in
ljmp
mov
js
adc
sbb
mov
pop
mov
adc
scas
sbb
add
in
or
orb
sub
repz
jo
mov
pop
push
xor
scas
hlt
out
mov
cmp
xchg
js
sti
add
push
mov
cmp
loope
out
inc
test
sub
mov
pop
fdiv
inc
mov
xchg
in
jb
xchg
mov
repnz
and
mov
mov
insl
add
mov
xor
xchg
xlat
iret
dec
out
dec
aam
scas
adc
push
test
mov
test
jne
and
cmc
popa
add
sub
icebp
imul
ret
test
inc
mov
and
push
imul
test
subb
xor
sarl
outsl
pop
orl
sub
sub
icebp
pop
sbb
push
pushf
mov
add
shrb
lods
inc
das
bound
or
sbb
js
pop
ret
jbe
repz
fcom
push
inc
pop
bound
pop
lea
cmpsb
je
push
js
fimuls
pop
fisttpl
inc
mov
scas
ret
dec
icebp
jno
nop
mov
and
adc
mov
outsb
imul
xor
inc
cmpl
sarl
sub
out
sub
push
push
faddl
iret
xor
jb
adc
jmp
ffree
repz
and
add
pop
out
ret
js
cli
int
aas
aad
ficomps
push
jle
test
mov
xchg
push
test
jl
scas
pop
loop
jecxz
push
aad
imull
popf
or
pop
mov
imul
daa
fmuls
push
ret
dec
daa
fwait
push
fcomi
lods
and
push
fiadds
fsubs
nop
hlt
mov
fimull
pop
mov
adc
dec
mov
pop
popf
mov
movsl
jb
xchg
add
loopne
add
cld
mov
jne
push
and
in
pmaxub
lahf
sub
add
sub
push
jb
loopne
ficomps
cmpsl
aaa
aaa
mov
and
xchg
lret
dec
bound
or
mov
push
sub
mov
dec
fmul
inc
mov
lds
out
mov
adc
sub
fsub
ret
mov
jg
jno
push
cmpsl
jge
jge
roll
jge
mov
pushf
jmp
imul
pop
jo
aad
cmp
push
cmp
adc
outsl
fdivr
mov
inc
out
inc
inc
data16
loop
and
int
xchg
cld
and
inc
cmpsl
add
fildll
jg
xor
aaa
push
jno
mov
xchg
cli
test
sub
xor
stos
ja
enter
iret
movsl
adc
mov
lret
pushf
jp
xchg
jno
outsb
mov
lahf
insl
mov
lret
ss
push
mov
mov
outsb
mov
or
adc
pop
cmp
out
push
lret
sarb
sub
aas
in
sar
sub
jne
jl
add
test
das
fistps
xchg
popa
test
push
or
inc
mov
shr
push
divl
inc
loop
ss
pop
dec
xchg
inc
mov
jp
mov
inc
stos
and
insb
pop
cld
mov
cmp
cmp
mov
jns
movsb
icebp
pushf
or
add
dec
outsl
sbb
jp
or
call
lahf
or
imul
adc
in
xor
movsl
push
cli
sti
hlt
lock
push
xchg
and
outsl
jecxz
adc
add
cmp
inc
push
xchg
call
cmp
leave
add
mov
adc
pop
xlat
repz
xor
mov
xchg
pop
idivb
insb
mov
xchg
hlt
xor
ret
jno
flds
xor
popf
cs
int
pop
mov
or
xchg
sti
mov
adc
push
cli
sbbl
cmp
hlt
sub
mov
lahf
mov
mov
mov
jb
cs
js
andb
add
outsb
xchg
out
lods
orl
sbb
outsb
test
fidivl
jmp
nop
sbb
cmp
xchg
fnstsw
sub
push
cltd
xor
mov
fstpt
mov
inc
outsb
das
dec
xor
lret
or
add
pop
scas
lea
hlt
inc
and
lea
out
aaa
inc
mov
hlt
stc
sub
jno
out
mov
cmp
pushf
add
pop
cmp
mov
inc
repz
jae
jb
mov
cmp
fcoml
xor
xchg
lods
test
jnp
pop
sahf
dec
xchg
mov
sbb
inc
repnz
cs
lahf
xchg
shll
sti
pop
lcall
lret
push
ret
pop
push
iret
loop
add
xorb
adc
inc
push
pop
jl
add
xchg
add
sub
aas
idivb
or
or
jge
out
mov
in
push
ds
lret
cwtl
pusha
addr16
xor
pop
adc
cmp
testb
popa
pop
jo
daa
mov
add
inc
push
gs
sti
nop
and
rcll
dec
in
out
js,pt
sub
cltd
mov
rclb
cmp
pop
mov
out
push
pop
shlb
scas
andl
pop
clc
fbld
jmp
rorb
or
data16
loope
jmp
mov
fnstsw
data16
or
iret
inc
sub
imull
xchg
xchg
movl
iret
or
xor
orb
cmp
mov
or
adc
subb
insl
addl
xor
lret
jg
push
dec
ljmp
inc
adc
and
and
sbb
ret
stc
mov
call
andb
cmp
mov
xchg
dec
cmp
daa
notb
jge
lock
jae
or
sub
cld
cwtl
mov
mov
mov
push
ret
out
sbb
or
je
enter
std
lahf
call
push
stc
pop
add
mov
xchg
sahf
dec
hlt
test
ljmp
or
adc
pop
mov
insb
subl
xchg
add
mov
xchg
scas
dec
data16
test
fucomip
and
aaa
out
aas
ljmp
stos
aad
fld
jle
lods
punpcklbw
adc
pop
mov
dec
lods
mov
mov
aaa
sub
mov
ds
mov
inc
movsb
aad
cmp
xchg
adc
mov
or
aad
mov
daa
nop
test
scas
call
shll
pop
xor
mov
inc
rclb
jg
std
data16
fs
out
addr16
fcompl
and
pop
dec
pop
xchg
and
pop
enter
push
out
or
jne
xor
pop
clc
mov
aaa
andl
mov
fnstsw
mov
adc
outsl
push
stc
adc
call
and
lret
and
cmp
jae
dec
arpl
cmp
into
add
sub
sbb
fcmove
mov
lcall
lahf
mov
dec
pusha
addb
dec
ja
enter
aad
cli
sub
cmp
fldenv
jmp
jmp
and
sbb
cmpsb
mov
xor
cmp
jns
dec
shll
jns
jle
ljmp
pop
outsl
jno
pop
addps
loope
cmpsl
loope
shl
sub
lret
mov
fucomi
insl
push
in
js
ss
mov
inc
cmp
les
clc
xchg
pop
test
repnz
cli
and
adc
shll
insl
es
es
xchg
mov
xchg
mov
sub
leave
sbb
inc
sbb
mov
push
adc
fsubp
out
aam
push
xchg
stos
out
mov
ljmp
or
imul
cmp
lock
push
sub
sar
fimuls
fstpl
push
or
ret
sub
add
pop
dec
out
leave
fnstenv
test
pop
int3
aam
aad
flds
icebp
pop
xor
arpl
xchg
and
xor
sbb
xchg
and
mov
pusha
push
sub
mov
xchg
adc
dec
icebp
aas
push
ljmp
in
adc
test
pop
fucomip
xchg
inc
in
add
mov
ret
cmc
fidivrl
pop
cmp
push
int
dec
in
mov
cmpsl
clc
adc
mov
lahf
mov
fnstenv
in
push
sbb
in
imul
fildl
enter
adc
adc
fcoml
xlat
pop
mov
in
mov
in
mov
enter
int3
dec
or
fadd
mov
push
stc
jns
mov
mov
scas
jns
std
int3
int
dec
add
and
andb
stos
fnstsw
inc
dec
cltd
jle
rcl
daa
das
xchg
and
cmp
pop
aaa
push
push
xchg
fstpl
frstor
outsb
int
stos
cld
adc
mov
loope
stos
pop
aad
in
lret
xlat
push
fldcw
cld
cld
mov
orb
pop
mov
ficompl
ret
fcompl
cmp
cmp
adcl
mov
inc
xor
rcrb
flds
ljmp
into
pop
ja
shlb
add
bound
addr16
aad
dec
mov
sub
insl
push
mov
fcompl
roll
mov
popf
stc
mov
mov
mov
hlt
xchg
out
imul
rcrb
add
jo
mov
fwait
ja
mov
mov
sbb
je
idivb
int
jns
inc
lret
rorb
inc
shll
stc
mov
shll
xchg
push
in
jmp
addr16
xchg
mov
xchg
xchg
jo
ret
insb
ss
jl
lea
xchg
mov
mov
jns
adc
jge
sub
in
push
pop
inc
mov
dec
inc
pushf
and
in
cmp
dec
add
jp
movl
xchg
insb
xor
xor
add
sub
dec
sub
aam
mov
int
adc
daa
nop
mov
xor
push
sbb
fwait
in
sti
insl
push
push
xchg
in
js
fiadds
dec
or
dec
sub
push
inc
push
stc
shrl
fcomip
sub
lods
jno
mov
xlat
sub
call
notb
cmp
adc
xchg
xor
xlat
xchg
nop
movsl
mov
inc
mov
mov
data16
out
scas
pop
mov
cmc
test
cmp
daa
test
mov
dec
mov
data16
popf
mov
pop
jae
stos
push
pop
sbb
call
or
sub
mov
insb
jg
adc
pop
cmpl
mov
lock
insl
movsl
sub
shll
xchg
pop
push
outsl
sti
aam
sub
repnz
imulb
mov
shll
aaa
xor
push
push
xchg
lods
pop
sub
xor
shll
cmc
fs
sbb
xor
inc
cmp
int3
jns
in
adcl
mov
stc
test
and
mov
jmp
inc
and
mov
add
add
adc
aaa
mov
mull
fnstcw
add
icebp
dec
xchg
xchg
or
adc
adc
jo
imul
xlat
xor
into
inc
loopne
inc
inc
sbb
push
aam
mulb
adc
pop
mov
jg
push
and
enter
and
in
mov
inc
pop
gs
insl
mov
mov
insb
nop
xchg
into
pop
push
sub
mov
xchg
adc
mov
cmp
jp
dec
test
pop
lea
jnp
std
or
mov
xchg
mov
cli
fs
and
dec
jbe
cltd
mov
rcll
or
pop
rorl
fwait
out
add
push
mov
mov
aas
jmp
push
in
add
mov
mov
sarl
mov
outsb
icebp
jecxz
push
cmc
out
out
fbld
mov
mov
and
inc
and
les
cmpsb
pop
ja
dec
cs
pop
inc
test
add
inc
push
popf
dec
cmpsl
pop
adc
mov
lahf
in
jmp
das
or
pop
orl
movb
and
daa
push
jge
mov
jmp
sub
test
jg
call
inc
inc
lahf
xor
in
das
sub
rorl
mov
xchg
sub
sbb
push
mov
mov
xchg
sbb
dec
cmpsb
dec
js
aad
faddl
mov
fcmovnb
inc
mov
repnz
lret
rcrl
or
cmp
inc
notl
inc
les
ljmp
stos
mov
add
mov
mull
out
sbb
dec
cli
insl
sub
scas
gs
scas
data16
xor
mov
and
imul
call
jmp
pop
sbb
pop
xor
xchg
popa
int
in
sbb
in
in
repz
mov
inc
les
jne
shll
jg
and
aad
dec
es
mov
testb
pop
mov
loope
push
adc
pop
movsb
rorl
add
or
scas
jmp
mov
shrl
pop
inc
pop
jnp
inc
int3
fadd
push
scas
fbld
out
and
movsl
scas
mov
fxch
es
pop
jmp
and
and
pop
mov
mov
aaa
fcoms
loop
pushf
je
int3
addr16
or
cmpsb
hlt
inc
dec
jnp
mov
not
jns
mov
data16
sub
sti
std
inc
pop
popa
fwait
loop
sub
and
rorl
ljmp
cmpb
inc
lods
scas
je
push
jae
cmpsb
inc
mov
pop
jb
add
jns
xor
scas
repnz
jp
push
mov
sub
addr16
cmpsb
insb
mov
test
dec
pop
stos
cmpsl
mov
dec
fcoml
pop
cmp
inc
js
add
adcl
inc
jp
aas
ds
pop
mov
jg
ret
xchg
adc
jbe
nop
xchg
mov
push
stos
mov
adc
pusha
adc
outsb
adc
les
push
popa
jno
test
das
mov
sub
push
divl
pop
adc
adcb
cmp
adc
arpl
xchg
int
mov
loopne
fimuls
dec
adc
lock
aas
inc
and
inc
ficoms
mov
fadds
inc
scas
inc
test
jns
xchg
mov
add
ss
ret
pop
or
sbb
cmp
lea
imul
cmpsl
jnp
jge
push
decb
loop
inc
push
xor
std
hlt
mov
ret
pop
cmp
adc
and
xchg
jb
push
into
cmp
rorl
lock
push
push
push
pop
mov
or
xor
push
popa
fistpl
das
aad
jae
lahf
shl
dec
fidivs
movsl
push
outsl
mov
notl
or
and
xchg
mov
mov
xchg
pop
ffree
lahf
push
mov
dec
ljmp
out
fcomps
mov
in
sub
dec
fiadds
mov
push
in
sub
bound
cmp
jmp
mov
inc
lret
sub
pop
inc
scas
mov
sbb
int3
test
pop
mov
cmp
mov
icebp
ret
mov
push
ljmp
mov
or
insl
xor
movsl
mov
jge
clc
lods
in
xchg
loopne
mov
pop
pusha
push
jb
data16
cld
aaa
les
pop
dec
add
les
in
adc
imulb
popf
stos
aaa
insb
mov
jo
xchg
pop
pop
incb
sub
out
mov
cmp
push
inc
xchg
les
cmpsb
pop
mov
les
cmpl
push
ljmp
xorl
mov
iret
pop
aam
popf
inc
inc
imul
test
mov
imul
and
cs
lcall
sbb
aaa
fwait
test
scas
in
pop
xlat
dec
shlb
adc
adc
cld
jmp
pop
add
push
test
in
popf
mov
sbb
push
sarb
mov
insl
mov
mov
mov
inc
xlat
jne
insb
cmp
and
btr
fsubrp
mov
mov
adc
in
ficompl
lock
jbe
gs
ret
jne
loopne
enter
sarl
xchg
lcall
jp
rol
push
pop
ljmp
xchg
sbb
in
and
movsb
test
pop
out
mov
cmp
aam
inc
negb
arpl
sub
imul
outsb
mov
sbb
inc
inc
pop
mov
mov
pop
fmul
stc
popf
sbb
push
imul
test
jo
jne
je
in
jg
nop
sbb
add
stc
add
adc
call
and
adc
inc
push
xchg
jge
out
sub
jecxz
ljmp
scas
dec
push
mov
push
mov
stos
movsb
int3
fcompl
scas
xchg
push
rorb
loopne
sbb
scas
fsts
js
pushl
jl
icebp
adc
icebp
addr16
sar
dec
aas
adc
xchg
xor
jg
sub
mov
adc
mov
sub
hlt
cmp
jns
loope
xchg
les
addr16
xlat
inc
fbld
push
icebp
mov
xchg
test
sti
push
cmpsl
cs
and
push
jp
mov
sbb
cltd
push
enter
fistpll
ds
hlt
andl
sub
or
add
pop
cmp
pusha
aaa
mov
mov
push
cmp
inc
or
insb
outsb
xor
and
adcl
push
daa
pop
inc
inc
xor
insb
repz
jge
push
into
mov
xchg
lods
xchg
push
inc
and
mov
jns
dec
cmpsb
lea
jp
adc
cli
mov
and
ja
sbb
mov
pop
xchg
sbb
add
mov
cli
ret
jae
jmp
aad
notb
imulb
and
adc
loopne
test
nop
int3
push
cli
int
in
mov
push
xchg
lcall
dec
enter
fbld
or
lods
repnz
inc
cmpsb
gs
js
loop
jle
rcrb
adc
cmpsb
shl
inc
movsb
inc
adcb
add
das
cld
push
xchg
sti
in
mov
push
shlb
or
dec
insb
pop
mov
jnp
xchg
push
or
pop
aad
testb
stc
filds
stos
mov
lds
inc
pop
lret
js
add
jge
adc
xor
inc
adc
ja
xor
pop
fisubs
and
pop
shl
sahf
gs
add
je
iret
sub
dec
xchg
push
notl
dec
mov
repz
cmpsb
popa
repnz
mov
jp
push
pop
mov
cmc
cmp
repz
shrb
ds
fwait
sub
popa
and
adc
pop
pop
mov
aad
popf
dec
stc
scas
nop
xchg
adc
xchg
sbb
ret
lock
divb
clc
push
and
mov
and
loope
mov
push
fldl
xor
jp
pop
cmp
pmulhuw
dec
push
cs
jbe
dec
test
and
push
adc
or
jb
push
dec
shrl
ja
aas
jno
insb
int
repnz
ds
mov
aaa
sub
and
fldt
mov
movl
xor
mov
test
push
push
xor
aad
loope
xor
or
lods
fs
loop
and
lcall
pop
js
add
lods
ss
fs
movsl
clc
cmpsl
mov
mov
xchg
icebp
icebp
lea
loop
add
cwtl
jl
mov
or
add
xchg
cmpsl
das
jecxz
test
inc
and
mov
pop
dec
mov
rol
scas
pop
sub
or
push
push
inc
in
jg
add
mov
into
pop
cmp
inc
mov
out
out
stos
arpl
push
add
cmc
cltd
cli
and
jb
push
mov
pop
int
sub
sub
push
popf
mov
push
inc
cmpsb
cli
cmp
sub
mov
cmp
in
cmp
ret
xor
out
jmp
add
mov
dec
pop
stos
repz
rcrb
adc
std
push
pop
mov
aam
or
sbb
jnp
mov
sbb
cld
sbb
pusha
inc
leave
dec
cwtl
dec
inc
rcrl
cmp
or
pop
or
mov
addb
rolb
ljmp
andb
xchg
ret
das
stc
pop
adc
mov
test
push
pusha
push
and
movsl
pop
nop
out
xlat
cld
daa
mov
sub
clc
pop
xor
aaa
jge
xchg
or
push
dec
cmp
mov
jo
push
jmp
std
stc
mov
sub
xchg
adc
push
add
jb
ficoms
mov
inc
dec
setns
rolb
lods
sbb
push
inc
mov
movsb
stos
push
movsb
jecxz
and
in
bound
cmc
inc
stc
lret
cld
leave
push
push
mov
aam
jge
push
or
sub
cmp
and
leave
push
and
and
movsb
in
sti
cld
jmp
cwtl
inc
nop
sbb
fs
xchg
fldt
out
sbb
mov
or
inc
test
pop
rcrl
std
int3
xor
push
adc
pop
arpl
mov
cld
jno
popf
xchg
cmc
mov
push
jo
or
cmp
cmp
xor
xchg
into
mov
sbb
out
jecxz
das
inc
sbb
push
pop
mov
nop
ja
dec
pop
shrb
test
fld1
hlt
jge
mov
hlt
fcompl
lods
daa
mov
jnp
adc
cwtl
lock
mov
jo
es
inc
inc
fimuls
je
mov
push
adc
pop
fwait
bound
jecxz
and
repnz
push
mov
xor
jmp
mov
stos
mov
clc
pop
lods
subl
out
sbb
faddl
mov
sbb
enter
add
adc
sub
mov
cwtl
in
add
aam
dec
stos
in
call
pop
ja
or
sbb
js
gs
adc
inc
pop
bnd
mov
push
mov
push
mov
aam
loop
or
je
xor
ret
sti
mov
rclb
call
push
pop
sbb
frndint
adc
bound
rol
push
pop
out
inc
in
pop
ss
cmp
pop
mov
adc
test
movb
cmp
loop
dec
adc
mov
mov
loopne
rorl
in
sub
adc
repnz
jg
stos
sti
pop
je
fildll
jnp
sub
aaa
cltd
insb
dec
popf
dec
xchg
sbb
mov
and
pop
adc
push
xor
inc
inc
pop
rorb
xor
sub
repz
sbb
pop
or
scas
outsb
and
xchg
mov
cltd
push
data16
mulb
hlt
divl
test
pusha
push
xchg
xchg
pop
and
fwait
mov
push
out
icebp
pop
lahf
popa
aaa
rcrb
xchg
mov
out
push
sub
movsl
js
movsl
inc
and
iret
cmp
or
inc
lret
and
fists
dec
add
sbb
sbb
cmpsl
cld
aad
mov
xchg
cmc
jmp
xor
mov
inc
push
mov
testb
add
gs
add
sbb
mov
sbb
icebp
cs
mov
into
mov
data16
scas
fsts
insl
imul
cwtl
mov
dec
jmp
lods
pop
sbb
mov
mov
or
rorb
mov
rcl
inc
sbb
sbb
push
ds
pop
ret
into
mov
jp
gs
cmp
mov
mov
movsb
imul
push
xlat
or
stc
ds
popf
and
adc
sub
push
iret
inc
sbb
adc
cmpsl
repnz
jg
pop
imul
les
xchg
mov
lcall
and
fcmovb
cmp
mov
mov
repnz
jns
nop
adc
dec
lods
aad
sti
je,pt
adc
aad
jbe
xor
lds
lret
xchg
das
bound
arpl
cmp
fiadds
dec
add
mull
or
add
shlb
add
jg
add
and
pushf
mov
dec
movsl
aaa
inc
negl
xchg
jp
adc
cmp
enter
das
xlat
daa
nop
mov
cmpl
nop
loop
dec
out
ret
ds
push
pop
repz
push
push
xchg
xor
xchg
cld
cld
adc
sbb
xchg
dec
add
orb
in
popa
inc
inc
mov
das
cmp
pop
dec
test
scas
lret
jle,pn
popf
dec
lret
scas
xchg
out
cmp
mov
mov
pop
add
mov
fcomps
testl
adc
push
lds
add
pop
sub
cmpsb
or
stos
repnz
sub
jae
cmp
nop
enter
adc
cli
jne
xchg
xor
push
or
lock
jp
jno
addb
mov
mov
push
aam
sbb
stos
xchg
jo
outsb
mov
or
add
sub
popa
sarl
ljmp
cs
loope
mov
jg
ljmp
add
daa
mov
mov
fsub
mov
gs
pop
int3
pop
adc
pushf
dec
lret
pushf
adc
mov
jns
or
lret
mov
pop
fldt
fidivs
dec
sbb
pop
movsl
jnp
adc
sub
push
sti
or
cmp
int3
mov
adc
std
push
bound
dec
cmp
cmp
push
les
imul
mov
mov
pushf
out
jmp
loope
ljmp
push
xchg
test
add
test
dec
sarl
jbe
cltd
out
std
mov
aaa
jle
cwtl
popf
or
xor
push
outsl
mov
or
mul
fcomip
xchg
test
pop
rolb
inc
fisubrl
xor
test
mov
aas
inc
fwait
push
out
outsb
sahf
push
add
shrl
cmp
sbb
sbb
test
mov
test
fdiv
sub
cmpsb
in
call
flds
inc
and
or
pop
pop
push
cli
aad
inc
fstps
jnp
sbb
insl
jne
add
cli
or
js
or
and
sub
jle
mov
test
and
clc
xchg
mov
cmp
aad
mov
push
jmp
test
inc
adc
fldenv
pop
pop
sbb
push
xchg
jns
sub
jo
negb
in
jne
insl
ss
ljmp
inc
xor
jnp
jae
sbb
sbb
pop
fistl
or
mov
loope
std
add
nop
dec
jp
xchg
popf
fcoms
ret
hlt
sbb
cmpl
cwtl
mov
xchg
add
jp
loopne
fldenv
pop
test
add
int
push
mov
mov
pop
lods
push
jae
xor
sub
pop
add
insb
xchg
imul
dec
pop
xchg
imul
ret
call
repz
xlat
cmp
je
mov
call
mov
dec
add
shlb
xlat
fs
xchg
mov
ror
push
add
xchg
add
xchg
pop
test
jle
test
mov
iret
stos
je
dec
sbb
mov
inc
mov
hlt
jbe
dec
rcr
pop
gs
test
adcb
orb
fwait
push
fmulp
hlt
jno
loope
roll
mov
out
mov
stc
test
test
aaa
shrl
fiaddl
xor
fcomip
aad
adc
lret
xchg
mov
fidivrl
outsl
aad
shrl
addr16
fiadds
add
cli
call
mov
push
inc
push
movsl
ficomps
cld
movzbl
push
mov
push
dec
cmp
or
lret
fsubrp
push
push
in
adc
js
sub
lods
or
xchg
loope
jne
adc
dec
shrd
add
inc
dec
dec
pop
sahf
scas
or
dec
push
mov
jp
push
out
pop
popa
sbb
imul
ja
fisttpl
dec
sub
mov
adc
outsl
xlat
mov
repnz
and
add
xchg
xchg
or
sub
push
out
test
data16
das
cmp
mov
or
fwait
les
dec
push
sbb
out
clc
inc
xor
jnp
shrl
inc
out
fsub
pop
sub
mov
jne
ret
pop
jp
call
mov
fs
or
cmp
push
pop
push
fbstp
scas
pop
sub
aas
dec
mov
not
adc
mov
cmpsw
sub
sbb
cmpsl
push
je
cmp
hlt
lret
fimuls
flds
inc
pop
fcmovnbe
jmp
test
mov
jl
sbb
cmc
and
cmc
xor
mov
inc
push
hlt
js
in
lea
lret
fimull
call
mov
stos
adc
cmp
repz
push
int
cmc
fs
cmp
or
loopne
sbb
lock
insb
inc
mov
rclb
lahf
mov
pop
ljmp
sbb
or
dec
in
ljmp
cmp
add
sbb
cltd
pop
mov
mov
clc
xchg
outsl
shll
sbb
lret
jnp
xchg
icebp
push
stc
mov
sti
fwait
fwait
subb
jo
movl
gs
or
fwait
add
and
mov
rcr
call
mov
pop
mov
sbb
mov
push
ss
pop
nop
mov
xchg
or
into
fiaddl
fstpl
rcrb
fisubrl
jp
adc
jp
push
lock
jle
bound
xchg
adc
mov
movsl
outsl
ja
sub
mov
push
and
or
cmpsb
lahf
pcmpgtb
cs
dec
fimull
outsl
fisubrl
hlt
jb
fimuls
push
int
xchg
push
xchg
add
jns
mov
xchg
fisubl
inc
insb
loopne
inc
dec
lcall
jno
mov
cmp
inc
outsb
add
popf
push
mov
adc
cmp
mov
cld
xor
or
jl
jo
mov
std
jnp
push
mov
imul
movsb
sbb
mov
cmp
ret
push
push
test
iret
xor
dec
or
inc
sbb
mov
mov
inc
das
fadds
or
xlat
mov
icebp
adc
sub
and
in
dec
cli
xor
pop
push
popa
imul
outsl
shlb
push
push
ret
stos
add
popf
adc
sarl
sahf
test
insb
jbe
stos
ss
mov
push
aad
add
hlt
xor
cmp
push
bound
push
test
std
insl
bound
subl
rcrb
mov
xchg
push
push
movsb
add
sarl
xchg
push
rorb
fcoml
pop
popf
cmpsb
xchg
mov
jne
mov
add
mov
cmp
push
mov
jg
insl
fsubl
aad
ja
push
xchg
dec
in
inc
and
or
out
mov
inc
cs
or
cltd
pop
pop
cmpsb
add
sbb
pop
mov
mov
pop
cld
and
xchg
pop
mov
pop
out
aad
mov
xor
adcb
mov
int3
mov
ret
and
dec
ret
test
lea
lods
stos
ss
or
sbb
int3
mov
cmc
jae
and
sbb
cmp
arpl
push
mov
rolb
sahf
mov
pop
push
mov
or
xchg
xor
cmp
xlat
dec
xchg
xor
push
les
sahf
rsm
push
fwait
and
jg
inc
pop
nop
inc
out
mov
inc
xchg
repnz
cmp
inc
inc
sbb
test
ret
push
dec
inc
in
test
xchg
inc
mull
sbb
mov
pop
lret
jmp
lcall
mov
aas
stos
in
call
rcr
cmp
pop
push
aas
xor
enter
ret
cmp
jmp
fstl
push
enter
sub
mov
cmpsb
adc
mov
nop
push
pop
push
adc
ljmp
add
les
push
pop
add
push
loope
pop
fwait
sub
imul
adc
jle
or
dec
push
dec
outsl
xchg
cmp
clc
or
xor
sbb
sub
sbbl
cmpsl
or
shll
mov
xor
mov
jg
adc
inc
adc
cld
hlt
or
mov
les
inc
ret
adc
sbb
xchg
jge
pop
jo
sub
mov
aam
incb
std
mov
jle
es
xchg
cltd
mov
inc
mov
mov
mov
push
xor
aaa
rcrl
pop
sbb
fstl
push
adcl
and
push
mov
and
cli
lahf
ret
sahf
mov
cs
fmuls
mov
inc
inc
pusha
cltd
dec
std
cmc
mov
and
dec
mov
movsb
xor
xchg
xchg
and
cmp
lea
mov
mov
cli
jo
mov
pop
push
jb
movsb
xor
sbb
xchg
faddl
xor
cmp
push
addr16
add
ror
inc
repnz
mov
jb
pop
add
imul
xchg
cmp
aas
iret
xlat
mov
push
inc
add
clc
aas
pop
push
jne
sbb
mov
rcrb
adc
inc
ret
mov
outsl
sbb
scas
jo
and
lock
aas
inc
dec
lret
pushf
sbb
bound
xor
xor
push
insb
std
jle
test
pop
adc
clc
xchg
mov
dec
imul
jg
fisttpll
jl
lods
stc
pop
loop
test
cltd
enter
jmp
cmp
xchg
sub
cmp
int3
sub
fdivrs
leave
cs
cs
mov
mov
push
push
or
idiv
lret
test
xchg
imul
push
jno
mov
mov
stc
jge
push
int
cmp
mov
inc
cltd
popf
orl
test
jg
rcrb
and
test
hlt
push
into
sub
jne
and
cli
in
xchg
int
and
in
mov
fbstp
cmp
leave
emms
fcomps
pop
repz
jle
cmc
test
xor
pop
xor
sub
or
stos
test
xchg
cwtl
sbb
jp
pop
sbb
lret
sub
imul
cmpsb
scas
jae
pushl
mov
loopw
in
lret
ret
sbb
cmp
pop
dec
hlt
sbb
mov
ss
pop
ret
out
lods
pop
sbb
mov
inc
xlat
inc
shrl
and
pop
adc
movsl
mov
icebp
and
add
leave
cmp
jae
in
into
adc
sub
xor
icebp
jb
mov
idiv
lret
xchg
cli
push
aaa
xchg
sub
push
push
xchg
pop
push
testl
mov
std
sbb
test
add
mov
in
jbe
cwtl
xchg
inc
data16
mov
cmp
mov
jo
scas
popw
and
popf
jo
inc
jp
cmp
cld
hlt
mov
pop
aas
add
out
mov
out
sarl
rolb
inc
jecxz
jmp
sbb
aas
adc
mov
xor
push
add
cmp
and
je
aam
lods
test
sub
mov
mov
mov
stc
in
call
test
pop
mov
int3
shll
das
adc
loope
sbb
inc
cmc
mov
testb
iret
mov
jb
imul
mov
mov
mov
js
loop
cld
sub
push
js
cmp
push
mov
imulb
mov
pop
sbb
dec
jl
nop
jge
stos
inc
dec
lods
nop
add
in
or
pop
jecxz
loopne
xlat
add
sub
shlb
mov
mov
lahf
inc
mov
or
clc
sbb
js
xchg
mov
add
sahf
xchg
xchg
cmp
test
xor
mov
bound
call
addb
aas
ljmp
insl
fisttpl
lds
pop
pop
scas
mov
stc
jno
dec
sub
push
sbb
outsl
jl
imulb
adc
jb
sub
fcmovu
ficomps
push
rcrl
lret
fisubrl
dec
jbe
test
pop
pop
int
dec
fs
jns
sbbl
push
and
out
fdivrl
into
push
jl
mov
call
jmp
jge
pushf
cmc
dec
mov
cmp
idivb
testb
xchg
cmp
cld
push
out
movsl
xor
scas
xchg
leave
add
add
jae
pusha
stc
cs
enter
mov
pop
mov
popf
iret
cwtl
lods
add
push
jns
jbe
jns
sahf
sub
or
dec
movsl
jmp
and
outsb
xchg
pop
movsb
mov
cmp
xor
xchg
stc
jns
adc
mov
rol
mov
or
dec
shll
aam
xchg
iret
ret
cmp
add
xchg
push
xchg
mov
lock
cmp
cmp
das
mov
pusha
into
bound
mov
loopne
dec
sub
xchg
pop
adc
jge
aaa
add
push
cmp
pop
pushf
pop
mov
jmp
mov
inc
adc
xor
fistps
jae
mov
mov
and
cmpsl
insb
jmp
lds
mov
sahf
sbb
add
daa
sahf
sub
mov
ss
xchg
jns
mov
dec
inc
pusha
in
mov
push
imul
xlat
test
push
fisubs
mov
imul
repz
mov
xchg
out
push
lods
mov
mov
imul
sbb
ljmp
xlat
add
jno
imul
out
jl
stos
in
and
repnz
jae
ss
mov
mov
mov
push
adc
daa
push
cmc
push
dec
mov
xor
repnz
loop
cmp
out
pop
mov
mov
lret
faddl
pop
shrb
pushf
xor
test
ljmp
mov
cmp
call
incb
inc
xchg
or
and
pushf
movl
movsb
mov
mov
push
sbb
and
hlt
push
rolb
cmp
repz
cmp
cmp
cltd
test
sub
pop
mov
inc
adcl
cmp
inc
das
xor
popf
repz
jg
dec
out
jl
inc
daa
das
das
push
and
into
imul
dec
test
push
jmp
push
jne
xchg
mov
jmp
jle
outsl
add
push
mov
dec
cmp
lods
iret
xor
push
mov
inc
iret
sub
adc
cmpl
fsub
aas
inc
add
out
dec
sub
psrad
cli
scas
cmpsl
loopne
xchg
and
sbb
or
mov
jne
ljmp
and
xchg
and
xchg
repz
out
xchg
xchg
dec
push
mull
cli
xchg
out
sti
cmp
cmp
xor
out
iret
cmp
addb
xorb
cmp
aaa
push
xor
loop
icebp
mov
mov
rorl
jnp
lret
mov
sti
sti
mov
cwtl
adcb
ds
rorb
call
popa
pop
popa
sub
sbb
nop
pop
stc
push
movsl
jne
pop
or
sahf
fsts
push
inc
mov
ds
xchg
mov
pop
js
pop
jg
push
adc
loope
fdivs
fisttpl
icebp
mov
lods
mov
inc
jo
xchg
jmp
pusha
lret
pop
mov
sub
fbstp
imul
rolb
mov
cmc
lret
inc
dec
push
push
mov
lahf
into
lea
pop
pop
loopne
mov
jnp
imul
jo
mov
pop
test
xor
sub
xor
hlt
mov
in
insl
in
popf
push
nop
or
lret
fidivs
data16
mov
xchg
push
aas
push
dec
jno
pop
nop
and
xor
mov
push
add
pop
jbe
repnz
lret
cs
xor
add
sbb
mov
inc
out
and
imul
lea
repz
ja
out
dec
and
add
cmp
aam
dec
popf
pushf
inc
jae
ljmp
mov
int
push
cmp
jge
or
loope
movsl
xchg
pop
inc
ds
shr
adc
int
inc
stos
push
out
ljmp
push
cmpb
int
mov
cmp
jl
adc
pop
mov
mov
mov
xor
mov
pop
or
pop
mov
xor
repz
test
enter
jp
shll
mov
inc
pusha
mov
or
testl
int3
sbb
lods
add
ret
jbe
nop
enter
push
inc
shl
nop
out
push
adc
xor
dec
fwait
mov
push
inc
pushf
outsl
push
jne
sbb
out
ds
pop
sub
nop
push
ja
jle
loope
icebp
xacquire
je
repz
sbb
sbb
test
dec
pop
enter
ja
movsb
dec
subb
popf
aad
mov
aam
and
imul
add
mov
dec
add
push
push
mov
fcomps
pop
aam
scas
divl
ret
xchg
fmull
shr
sub
jg
inc
sbb
sbb
mov
ja
cld
mov
mov
or
popa
icebp
mov
int3
jns
int
call
cltd
push
test
and
cli
nop
jo
mov
cmp
imul
aaa
xor
mov
jbe
in
fsubrl
aad
xchg
mov
inc
pop
fcoml
pop
and
ds
imul
push
daa
loopne
or
xchg
ficoml
and
std
xchg
mov
pusha
in
jno
test
int3
push
mov
enter
sub
lcall
out
sub
ret
test
fwait
jle
inc
jb
xchg
xor
in
add
cmp
jg
pop
xchg
adc
cmp
push
jle
adc
rorb
xchg
cmp
cs
push
out
rcll
out
xchg
xor
movsl
push
icebp
sub
popf
dec
cli
rcr
shl
inc
cld
dec
mov
push
imul
stc
pop
cmp
aas
cltd
xor
icebp
ficompl
or
addr16
push
pop
das
xorl
lcall
jle
push
xor
shlb
xchg
mov
fwait
aas
and
pop
je
xchg
jns
mov
adc
inc
xor
sub
mov
clc
jge
and
repz
mov
dec
sub
fcmovnb
sub
inc
or
xor
pop
shl
sub
cli
lea
ret
cmp
mov
jnp
rcll
cmp
push
sar
and
popa
xchg
loopne
push
cmpsb
xor
pusha
push
sbb
xchg
lods
lret
sub
iret
leave
xor
xchg
clc
cmpsl
mov
cmpsb
scas
in
divl
and
loopne
jno
notl
sbb
ljmp
stos
add
mov
out
mov
hlt
cld
inc
mov
dec
push
mov
and
xchg
push
repz
add
sbb
push
xchg
add
sbb
enter
pop
sbb
out
mov
inc
dec
ret
xlat
dec
inc
jmp
sbb
or
mov
scas
xor
sub
xor
clc
xchg
cmp
cmp
adc
jo
sbb
xor
sti
pop
aaa
jnp
jns
push
jno
insl
push
mov
jbe
lds
push
negb
in
push
popa
or
mov
mov
add
shlb
sub
movsb
jmp
fimuls
int3
out
cmc
dec
and
xchg
mov
cmc
imul
cmp
xchg
inc
or
jb
pop
testb
mov
inc
stos
mov
test
jge
pushf
jnp
dec
sti
sbb
cmp
mov
in
push
lcall
dec
dec
js
pop
lea
test
pop
mov
jge
mov
outsl
mov
fs
inc
iret
sahf
and
shrl
push
jg
mov
xor
adc
outsb
push
xchg
xchg
rclb
and
mov
add
aas
push
jb
cs
add
push
push
or
out
cmp
push
mov
sub
mov
test
xor
jge
lock
pop
jno
cs
push
shlb
pop
adc
jle
jns
push
std
cmp
fnstsw
cmp
sub
test
and
mov
push
in
push
lret
out
inc
mov
fmul
pop
dec
dec
and
test
test
loop
xor
test
xchg
je
sbb
inc
push
lcall
mov
in
push
lret
lods
leave
repnz
adc
and
mov
sub
or
push
adc
frstor
mov
jl
notl
xor
ret
addr16
dec
xchg
dec
mov
fcoml
sbb
and
cli
popf
cs
dec
ret
lock
mov
fwait
adc
imulb
das
push
add
jo
push
push
adc
add
inc
icebp
cmp
rcl
xchg
sub
pop
cmp
mov
xor
cltd
int
fmul
inc
loope
mov
adc
add
addr16
pop
in
rolb
and
sbb
mov
dec
and
sarl
mov
pop
adc
mov
mov
jg
cmp
sub
fstpl
mov
xor
fwait
aas
xchg
mov
pop
mov
mov
movsl
push
rcll
rorl
stos
cmp
adc
mov
push
inc
aad
jecxz
adc
sbb
repz
js
test
or
adc
ss
scas
xchg
ret
add
ja
rcr
adc
jmp
rorb
mov
shl
lods
pushf
xchg
ja
pop
ja
loopne
or
mov
aad
pop
in
into
jg
mov
loopne
xchg
sub
xor
cmp
iret
mov
pop
ljmp
loop
les
test
aad
inc
inc
rolb
cmc
ret
mov
iret
xchg
stos
outsl
insl
lock
or
pushf
into
fmull
sti
in
dec
les
or
dec
push
call
inc
jbe
sar
ljmp
frstor
cmp
out
outsl
into
or
sbb
xor
insb
iret
psubsw
mov
out
sub
js
lret
in
dec
mov
mov
jb
jo
outsb
xchg
aad
xor
xor
aad
ss
icebp
mov
sbb
jecxz
popf
lods
ret
es
repz
pop
cmc
mov
sbb
xor
mov
test
adc
sbb
aam
push
push
movsl
jle
xlat
jge
push
and
xchg
dec
sti
and
xorl
jae
ja
loopne
cs
jne
mov
dec
lock
jecxz
mov
xchg
loop
pushf
in
js
outsl
aas
sbb
sbb
push
mov
or
les
pop
std
lret
mov
push
nop
cmpsl
dec
inc
push
add
cmpsb
pop
inc
pop
sbb
cwtl
cs
pusha
popf
pushf
xor
in
cmp
mov
xorb
xchg
push
inc
adc
repz
mov
sbb
adc
or
repz
pop
mov
pop
jae
and
sub
out
rcrb
loopne
repnz
push
out
adc
das
add
call
or
mov
mov
cmc
mov
out
xor
cld
lods
int
push
and
jge
sbb
cld
jge
aam
sub
xor
scas
push
mov
por
lcall
jecxz
out
or
nop
stos
out
jno
or
xchg
bound
lret
or
adc
mov
pusha
push
pop
divl
mov
mov
lods
rorb
sbb
enter
xor
scas
cmpl
rclb
mov
scas
and
repnz
cli
scas
cld
pop
mov
dec
cltd
mov
adc
stos
mov
enter
add
lret
push
mov
lret
sbb
jno
sbb
cmp
iret
sbb
push
pusha
lods
pop
and
shll
xchg
jno
movsl
out
xor
rorb
dec
arpl
xchg
mov
ficoms
mov
xchg
dec
in
pushl
test
test
mov
xor
cmp
aam
cmp
mov
lea
mov
dec
clc
inc
xor
ror
mov
movsl
inc
jmp
jmp
xchg
std
cmp
jne
xor
push
adc
in
pusha
inc
mov
pop
push
add
ret
sub
pop
xchg
ret
mov
jo
mov
lods
cli
xlat
fisubrl
icebp
jmp
das
hlt
push
fistpll
cmp
jp
outsb
out
cmpsb
add
xlat
out
int
jae
in
data16
push
push
push
fsubrl
negb
dec
push
push
std
push
pop
lcall
fcmovne
scas
cmpsb
fcoml
jmp
xchg
sbb
jmp
adc
push
movsl
aam
or
sbb
daa
mov
insb
dec
mov
sbb
icebp
lods
mov
cmpsb
jp
lock
adc
xor
mov
adc
data16
add
test
sbb
sarb
popf
xor
fldt
addr16
sbb
jmp
xchg
pop
notb
xchg
out
js
stc
jnp
and
hlt
dec
daa
nop
push
jns
test
lds
arpl
dec
ljmp
enter
lcall
test
sti
nop
daa
notl
pusha
aad
xchg
pop
roll
push
daa
repz
cmp
bswap
lahf
cvttps2pi
mov
cmp
cs
fcompl
packssdw
das
into
mov
imul
xchg
jbe
pop
and
pop
push
movsl
xor
pushl
mov
push
fisttpl
nop
jle
mov
cld
jmp
xchg
stos
and
aas
push
pop
pushf
insl
xor
ret
xchg
mov
xor
aam
xchg
xor
sbb
sub
cli
decb
sbb
stos
fldt
ret
bound
or
lods
cmp
aaa
push
es
aas
std
aam
mov
adc
sarl
sub
ja
and
xchg
aas
jns
imull
out
movsl
mov
and
sbb
mov
fstpl
movl
adc
fnstcw
rcr
fisubl
mov
ljmp
add
loopne
push
mov
fildl
ljmp
faddp
fdivr
imul
xchg
sbb
jecxz
inc
cmpsl
sub
add
jmp
mov
addr16
aam
lahf
xchg
sub
or
pop
clc
ja
mov
movl
and
sub
cmpsb
sahf
xchg
and
scas
imul
ret
or
jg
dec
gs
mov
data16
and
movsb
push
jnp
testl
and
sbbb
stos
jl
mov
cmpsb
xor
add
push
jge
push
push
ret
add
or
adc
mov
xchg
gs
leave
or
cmp
fidivl
int
xchg
roll
or
push
test
xchg
and
dec
in
push
push
cs
mov
and
sub
inc
xchg
push
or
and
ss
test
cmp
popf
cli
mov
pop
shld
mov
pop
mov
hlt
testl
mov
mov
mov
imul
test
add
jno
inc
cmp
cmp
test
and
cs
cli
pop
int3
rorb
xor
sub
pop
fs
add
testl
sti
enter
dec
and
jne
pop
into
scas
jns
cmp
ret
cmp
loopne
and
jae
xlat
mov
in
rcll
push
sub
mov
das
mov
filds
arpl
arpl
ds
repnz
jge
pop
lcall
dec
popf
je
cld
push
pop
mov
in
push
js
int3
sahf
sbb
push
cmp
cmp
pop
mov
and
outsl
popa
push
or
call
sub
push
add
add
cmp
jle
mov
jmp
test
fwait
add
xchg
add
pop
fcmovne
inc
outsb
dec
jae
jne
fwait
out
imul
adc
mov
fistl
jecxz
pop
lahf
mov
dec
push
test
fsubs
sbb
test
push
and
pop
adc
mov
or
sahf
sbb
and
push
out
add
lds
pop
push
sub
mov
or
insl
inc
frstor
cmpsb
mov
popa
and
or
js
adc
mov
xchg
and
jb
dec
xor
cmp
ds
sub
mov
dec
addr16
decb
loope
cmpsl
xor
or
xor
fstpt
stos
popa
scas
push
out
push
jae
sbb
xchg
or
and
outsl
inc
lahf
test
mov
pop
mov
es
xchg
leave
pop
rolb
enter
jle
push
push
or
cmpb
or
adc
jmp
mov
cmp
stos
pop
mov
je
pop
and
push
das
pop
mov
je
and
shrb
jmp
sub
pop
fmulp
or
roll
sub
iret
ror
ja
jmp
dec
mov
pop
orb
xlat
inc
fildl
rcll
pusha
es
xor
add
pop
fiadds
mov
xchg
outsb
paddsb
dec
out
imul
mov
cmp
and
sub
or
subb
push
mov
mov
es
push
jge
dec
or
sarb
sbb
mov
popa
dec
popf
adc
push
ror
lock
inc
testb
or
and
int
stc
inc
or
pop
fbstp
aam
pop
dec
xchg
dec
das
popa
pusha
scas
lods
loope
test
mov
lock
mov
add
jmp
jns
pop
nopl
dec
movsl
push
mov
inc
ss
sbb
daa
loope
andl
daa
xchg
fists
dec
push
int3
mov
adc
xchg
and
jmp
cltd
ret
or
sbb
mov
or
ljmp
stos
push
pop
mov
lret
add
ljmp
mov
mov
ljmp
cmp
mov
cmp
in
jmp
adcl
cmp
sub
pop
cmp
std
in
jbe
insl
xchg
dec
add
pop
into
pop
mov
mov
in
jnp
xchg
fwait
add
jno
es
sbbb
mov
push
lret
stos
mov
dec
insl
push
xor
gs
je
add
daa
xchg
ja
and
lods
cmp
mov
rol
xor
add
or
cmp
loope
popf
cmp
xchg
call
xor
in
cmp
dec
push
jle
lods
mov
sbb
imul
ss
pushf
pop
scas
jnp
mov
les
cmp
mov
cli
pop
mull
movsb
movsl
mov
nop
cmp
aaa
call
inc
push
inc
lods
xor
shlb
dec
push
adc
das
ja
and
imul
adc
mov
and
in
std
loop
stc
ljmp
cwtl
sbb
sbbb
std
fs
call
scas
xchg
pop
cmpb
enter
adc
ret
dec
into
mov
test
aam
and
or
mov
outsb
movsl
add
sub
lods
sbb
int3
fidivrl
iret
es
push
sbb
popa
xlat
jp
xchg
cmp
movsl
push
idivb
or
sub
repnz
cs
ja
mov
push
cld
pop
lret
lahf
das
inc
ss
dec
push
je,pt
jp
and
adc
shr
roll
dec
cmp
fsub
push
iret
and
test
xor
pop
inc
mov
test
scas
or
cmp
pop
pop
mov
adc
mov
mov
orb
ret
outsl
inc
dec
mov
in
sti
and
imull
lds
bound
pusha
mov
negb
rolb
add
mov
fs
mov
movsl
and
xchg
xor
aaa
sti
sbb
inc
sbb
push
sub
adc
popa
mov
mov
adc
sbb
dec
or
rsqrtps
xor
and
pushf
test
jns
xchg
mov
mov
cltd
insl
pusha
arpl
sahf
stc
xor
in
cmc
push
jbe
xor
cmp
jnp
arpl
mov
and
ret
mov
add
push
push
mov
icebp
jmp
push
popf
bound
adc
push
in
push
in
out
cmp
cmp
test
prefetchw
fcmovb
push
imul
imul
cmp
sbb
adc
sub
ds
inc
ficompl
fbld
fwait
outsl
adc
leave
and
loopne
sub
sti
sub
aad
push
push
into
pop
out
dec
sti
mov
int
cmp
js
or
push
scas
call
or
mov
xchg
inc
pop
movswl
test
test
je
dec
call
fwait
cmp
icebp
mov
sub
mov
jnp
mov
sub
movsl
add
jno
inc
loop
xchg
adc
test
in
lods
ds
push
inc
scas
stos
mov
inc
jnp
ret
add
inc
push
ljmp
loope
adc
ljmp
fcomp
or
arpl
mov
mov
out
lds
fisttps
and
sub
pop
hlt
je
cmp
lods
and
jne
ret
loopne
repz
jmp
lods
adc
jp
xchg
mov
inc
inc
mov
scas
flds
jle
mov
inc
icebp
popa
mov
popf
lahf
fcoml
push
inc
mov
sbb
ss
out
cmp
push
das
pop
jo
shll
xchg
fidivrs
clc
pop
mov
adc
stos
lret
pusha
andb
push
push
fwait
mov
stc
mov
fistl
jns
scas
les
repnz
dec
cli
mov
cltd
loope
addr16
movsb
inc
std
cmp
push
aam
push
lret
mov
out
jae
mov
adc
jns
pop
fsubrl
push
cmp
test
cwtl
push
std
in
out
jg,pn
call
fdivr
inc
sbb
pushf
stc
inc
ljmp
dec
mov
mov
jmp
push
push
jle
add
cmpsb
inc
mov
insb
and
sub
decl
sbbl
mov
pop
lcall
sbb
movsl
add
lock
fsub
fcmove
sbb
xor
imul
add
add
lret
or
dec
aad
mov
jbe
lcall
lret
insb
std
js
lahf
lock
out
adc
mov
stc
ret
imul
xor
jb
jnp
add
lcall
scas
push
sub
cmp
loope
js
adc
imul
xchg
push
icebp
pop
dec
js
cs
daa
cmp
xorb
sbb
mov
add
mov
jge
dec
bound
jge
xchg
pop
inc
fdiv
push
mov
loop
lds
rcr
mov
cmp
cmp
subb
inc
test
lret
nop
into
pop
sub
mov
sub
addr16
jl
dec
xor
mov
mov
xchg
test
mov
test
inc
sub
xor
mov
leave
or
repnz
pusha
xlat
cmpsb
and
sub
jecxz
push
mov
pop
sbb
call
out
cli
jnp
pop
and
jmp
pusha
jmp
enter
leave
cwtl
push
or
and
mov
frstpm(287
jae
in
shll
push
add
ret
test
mov
repnz
hlt
cmp
sub
lds
jno
mov
jae
push
lahf
movsl
dec
adc
xor
and
mov
stos
pushf
and
push
mov
rclb
int
out
inc
test
mov
cmp
xchg
add
hlt
sbb
aad
sbb
pop
add
les
push
stc
cmp
icebp
ret
aam
repnz
push
mov
dec
mov
outsl
xor
pushf
dec
push
dec
pop
test
insb
cmp
inc
enter
int3
lock
push
scas
xor
je
adc
cmpsb
sbb
pushf
dec
xchg
sub
rclb
mov
enter
stos
imul
jp,pt
iret
pop
adc
adc
inc
cmp
rcl
arpl
ret
push
arpl
add
jo
mov
loopne
cmp
xor
loop
mov
jo
jp
arpl
std
shl
push
xor
ss
xchg
fcomps
push
mov
xchg
icebp
cld
imul
cli
push
call
fwait
mov
dec
adc
cld
or
pop
fsts
inc
mov
jmp
insl
dec
outsl
mov
mov
inc
stc
test
stc
dec
nop
push
ja
mov
scas
nop
jp
xor
popf
or
mov
mov
xor
jecxz
adc
sbb
inc
imul
pcmpeqd
leave
repz
pop
and
mov
add
mov
fimuls
ja
js
cmp
imul
jno
mov
icebp
sbb
sbb
mov
mov
xchg
movntq
cli
cmc
xlat
gs
mov
mov
fildll
sbb
jecxz
aas
and
pushf
pop
gs
inc
sub
sbb
rclb
movsb
ds
sub
stc
loop
add
cs
mov
cltd
subb
fmul
call
mov
push
xchg
mov
dec
aam
mov
or
lods
lea
ljmp
mov
inc
mov
ja
js
dec
ret
popa
add
loope
or
sub
fadd
in
fdivrp
jne
pop
xlat
fsubrp
add
out
pop
adc
push
bound
jae
cmpsl
or
pop
pop
addr16
jp
and
mov
iret
in
pushf
adc
lret
push
mov
mov
icebp
dec
ficoms
movsl
int3
sbb
lret
ja
pop
testl
int
das
int3
mov
fmulp
je
or
pusha
rclb
mov
shrl
out
fldcw
mov
hlt
xor
rclb
sub
or
loope
lock
or
push
dec
add
or
push
adc
inc
xchg
xchg
sub
fadds
popa
sub
or
movb
inc
sarl
je
mov
insb
jg
insl
stos
push
jns
insb
xchg
leave
jmp
xchg
scas
ror
int
fidivrl
sub
xor
jne
mov
sbb
dec
adc
pop
mov
lahf
sub
cmp
dec
loop
out
dec
loopne
out
insl
mov
pop
push
in
cmp
fwait
mov
hlt
mov
scas
cmp
aad
rcrl
cmp
jle
push
outsb
nop
sbb
popa
lahf
xchg
ds
and
xchg
sbb
fistl
push
cmp
test
ret
test
out
sbb
push
es
push
clc
mov
inc
sub
cs
xorl
ror
pusha
pop
jne
xchg
leave
dec
call
sbb
xchg
inc
and
adc
fidivl
mov
and
fmul
pop
sbb
ss
addr16
mov
xchg
ds
in
dec
push
xchg
fs
or
sub
push
sub
je
ss
mov
cmp
jg
mov
mov
inc
dec
loopne
sbb
loope
dec
mov
adc
jbe
push
out
mov
ror
sbb
adc
sub
mov
cmp
mov
test
fistl
and
mov
mov
push
mov
xchg
movsb
xor
dec
inc
inc
jno
mov
mov
jb
mov
ds
mov
sarb
push
cmpsl
int3
lock
lock
xor
stos
icebp
stos
xor
xchg
jmp
add
sub
sahf
sbb
int
mov
mov
sbbb
lahf
mov
inc
lcall
lds
or
stos
mov
cmp
pop
sti
cltd
mov
cmp
jecxz
xor
out
inc
cmp
push
out
test
xor
xchg
sarl
push
mov
or
pushf
popa
sub
iret
fnstcw
or
push
xor
push
jl
push
orb
imul
push
push
jbe
data16
das
xchg
adc
leave
scas
es
jg
jge
push
jl
mov
lcall
pop
pop
insl
and
jne
icebp
out
mov
xchg
stos
xchg
mov
leave
scas
jg
outsl
insb
jmp
adc
cld
dec
js
pop
loop
mov
aam
popa
addr16
sbb
pop
test
popf
loopne
cmp
dec
pop
fcomps
cmp
fsts
das
mov
xor
hlt
loop
js
push
fcomps
ds
out
xor
divps
sbb
jno
mov
sub
jno
stos
into
loop
mov
movsb
xchg
ja
adc
sahf
adc
push
push
adc
rorb
mov
xor
mov
cltd
cmp
in
add
adc
push
jge
push
pusha
adc
push
push
fsubl
xchg
lock
repz
rcll
inc
in
add
sbb
cmp
push
imul
test
mov
mov
xchg
mov
lcall
pop
inc
mov
scas
inc
arpl
xchg
mov
push
xchg
adc
leave
and
xor
sub
pop
jae
aad
les
movsb
sub
jmp
les
clc
mov
sbb
mov
xchg
je
xchg
aas
push
aas
lahf
or
mov
jle
push
fsts
jecxz
dec
shlb
adcb
cmc
sub
fldenv
pop
jnp
fcmovnb
fisubrl
jge
repz
jge
outsb
out
push
pop
inc
mov
adc
ror
dec
mov
jmp
cli
lcall
inc
pop
insb
mov
push
sahf
aam
xlat
pusha
and
test
pop
and
es
orl
loopne
and
sub
gs
scas
or
in
leave
push
fcomi
push
rorb
bound
mov
xchg
cmpl
jno
cli
mov
sbb
dec
int
rclb
jmp
push
pop
cmpsb
cmp
iret
or
inc
jae
cltd
gs
and
arpl
cmp
mov
je
mov
push
or
mov
gs
mov
xor
inc
mov
das
dec
push
test
insl
sbb
repz
ret
pop
push
and
pop
scas
js
addr16
loopne
add
push
dec
jge
push
add
mov
daa
shr
xchg
push
js
js
pop
sbb
jb
jmp
rolb
je
xor
shlb
arpl
inc
not
jo
adcl
dec
nop
push
sub
ret
jg
movsb
pop
shrb
sub
jle
enter
iret
ret
inc
movsl
scas
add
scas
rolb
pop
hlt
cs
xchg
jmp
pusha
add
test
test
popa
push
add
mov
mov
jnp
jge
adc
mov
xor
inc
fsubrl
cmpsb
jb
cld
cmp
push
lcall
mov
pop
leave
div
arpl
mov
lahf
jno
test
lock
rolb
and
xchg
sub
ja
dec
push
fwait
rcll
dec
xchg
ja
push
sub
lret
sbb
push
cltd
adc
mov
xchg
dec
adc
test
arpl
pop
rol
ret
test
stos
xorb
pop
icebp
add
mov
adc
inc
dec
cmp
sbb
es
jns
sbbl
add
sbb
cmc
jl
cmp
les
arpl
icebp
clc
fildl
rcr
imul
add
xchg
aam
data16
lock
sub
stc
addb
or
push
dec
sbb
inc
scas
push
cmp
add
mov
shll
mov
shlb
dec
dec
mov
sub
roll
sbb
mov
ficoml
lret
jle
and
pop
and
push
add
sub
lods
jl
pop
sar
and
mov
cwtl
into
fsts
mov
or
lcall
xchg
aaa
fs
inc
out
rolb
mov
push
cmp
sbbl
les
cs
fists
movb
inc
xor
xchg
adc
jbe
arpl
push
xor
lahf
pop
cld
shrb
jb
xchg
cmpsb
int
lcall
iret
mov
cli
lret
inc
sub
jmp
mov
int
ficompl
cmc
sti
ret
or
mov
sub
cltd
mov
dec
outsl
pushf
and
out
adc
sbb
dec
cmp
push
adc
cmp
mov
jge
mov
dec
faddl
je
out
loopne
cs
xchg
imulb
call
lds
cld
xchg
and
stos
orl
sub
sub
pop
in
mov
lret
sbbl
sqrtps
push
push
stc
xchg
xlat
mov
shrl
mov
mov
arpl
js
mov
jno
js
adc
cmp
mov
repnz
daa
test
adc
mov
sti
inc
pop
leave
imulb
push
pop
ret
and
jmp
mov
jae
adc
stc
and
jle
addr16
mov
mov
mov
test
mov
pop
ljmp
push
mov
cmpsb
cli
daa
adc
out
jns
call
mov
testb
adc
js
in
lods
ljmp
in
and
mov
cmp
push
dec
push
mov
jp
mov
outsb
fs
jmp
mov
cmpsl
pop
inc
pop
ret
pop
in
loop
dec
shlb
push
dec
imul
xchg
fwait
mov
ljmp
stc
jg
jecxz
or
and
jge
sbb
mov
cmp
in
lret
imul
jl
pop
das
push
inc
push
sub
scas
jmp
sub
dec
xor
xchg
loopne
push
and
ja
mov
bound
popa
aaa
mov
cmp
into
mov
imul
mov
fwait
jp
ss
cmp
rorb
inc
stc
add
adc
scas
inc
hlt
jne
push
xchg
imul
pop
push
mov
sbb
and
cwtl
lcall
loopne
jae
pop
jmp
or
fnstsw
andl
incb
add
flds
xor
mov
rorl
sub
dec
and
insb
fidivrl
testb
jbe
sti
lret
fisubs
jmp
shlb
ficoml
push
icebp
je
or
rolb
mov
ja
cmp
stos
inc
popf
insb
push
les
ljmp
fisttps
xlat
aam
clc
cmp
push
jbe
pop
arpl
cwtl
jb
inc
sub
mov
out
sbb
or
and
xor
int3
adc
jnp
pop
call
jbe
aas
insl
es
ja
mov
mull
fstps
out
jmp
imul
dec
dec
lcall
jo
cmp
adc
outsl
insl
mov
xchg
jnp
sbbl
inc
decb
dec
jns
and
aaa
movb
and
mov
or
dec
loope
icebp
in
sahf
mov
inc
cmpsl
rcrl
fst
mov
dec
push
aad
jb
mov
sub
push
shlb
data16
mov
push
mov
in
pop
xchg
lcall
pushf
add
add
rcll
adc
cld
dec
mov
sub
cmp
scas
fcoms
bound
fdivrl
pop
pop
jbe
in
jecxz
jp
int
xchg
push
cmc
xchg
adc
mov
lock
fadds
dec
mov
adc
lds
push
out
std
es
lret
lahf
and
mov
pusha
ja
mov
ret
call
jne
xchg
inc
xchg
lret
arpl
inc
aas
and
roll
sahf
cmp
mov
ljmp
negb
imul
shlb
mov
les
jne
sbb
jns
shrl
into
int3
std
inc
arpl
ret
cmp
cmp
rcl
add
sub
add
cmp
xor
mov
adc
fistpl
insl
push
sbb
stc
ljmp
stos
push
cmp
push
adc
fs
fnsetpm(287
sub
add
mov
test
clc
mov
pop
in
cli
rcrl
push
mov
iret
out
push
dec
jp
jae
mov
pop
adc
jle
mov
cli
jl
stc
lahf
xor
mov
pop
xchg
inc
mov
pop
add
gs
subl
pop
jmp
ljmp
sbbl
andb
sub
int3
loope
jb
add
loopne
lods
ss
sub
insb
fistpl
sub
enter
bnd
pop
les
call
ds
faddl
sub
idiv
push
sti
mov
add
mov
arpl
movsl
and
scas
icebp
mov
mov
mov
stos
cwtl
stc
stc
icebp
cmp
cmp
aam
test
or
sbb
fiaddl
or
mov
push
jmp
lahf
inc
dec
and
adc
add
pop
sbb
aaa
sti
cmp
mov
push
xor
fildl
pop
shrl
test
fildll
xor
ss
loopne
sub
cmc
jnp
pop
lcall
or
and
movsb
mov
lods
jo
pusha
lds
rcrb
jno
rorb
fsubs
out
movsb
xchg
repnz
cmp
sub
cmp
add
and
imul
and
push
call
lods
adc
sbbb
das
lahf
inc
jl
lret
xchg
icebp
sbb
or
insl
in
push
daa
mov
or
inc
repnz
in
sti
xchg
rcrb
int
mov
test
nop
push
rorb
sbb
inc
scas
or
xchg
push
mov
dec
insb
imul
addl
cs
popf
push
jb
mov
pop
xchg
dec
dec
ds
das
xlat
sub
lds
jg
outsb
add
aam
int
out
lea
push
decl
fidivl
cmp
adcb
inc
and
int3
cmp
ret
and
je
sbb
adc
xor
std
outsl
and
mov
mov
jb
mov
sti
int3
push
xor
and
jge
mov
mull
fnsave
cmc
je
lock
lret
test
orb
sbb
and
fildll
sub
mov
ljmp
xchg
xchg
add
lock
sub
jge
or
cmpsb
adc
push
mov
cmpb
cmp
xchg
mov
mov
pop
insb
sub
mov
es
cmp
sub
mov
dec
add
jne
cmp
xor
call
andb
pop
ss
sub
mov
gs
sub
es
and
ja
pop
push
add
pop
scas
pop
cwtd
and
ret
add
push
xchg
sub
loopne
and
push
add
pop
jmp
lcall
pusha
test
sahf
adc
mov
notb
push
imul
inc
xor
xor
ss
std
mov
inc
xor
jge
sub
push
add
adc
insb
mov
fs
es
cld
mov
insl
fnop
imul
add
and
mov
mov
jp
jns
aaa
rorl
dec
push
xchg
pop
shll
cmc
pop
add
inc
and
add
inc
push
jbe
lahf
movsl
xchg
jb
sub
shl
dec
xchg
repnz
xor
mov
push
fisubrs
fstl
mov
add
xchg
adc
inc
jne
and
mov
hlt
add
and
sbb
out
icebp
repnz
push
and
sarb
insb
mov
lods
lret
stc
sbb
es
je
aad
xchg
hlt
sub
jge
xor
sbb
test
jbe
xchg
push
jno,pt
sub
in
rol
xchg
nop
sbbl
add
ja
repz
jg
js
fiadds
sbb
ja
in
inc
xchg
pop
pushf
mov
add
dec
shrb
mov
xchg
lds
lret
or
inc
lret
loopne
pop
mov
add
iret
insb
jnp
add
mov
push
pop
adc
nop
nop
push
sub
aam
cmp
es
jl,pt
jecxz
cmp
sub
mov
imul
jo
pop
add
add
out
mov
push
xchg
cli
add
scas
lret
jl
push
or
xchg
into
inc
add
or
cld
inc
lock
fiadds
loop
imul
mov
jl
cmp
mov
mov
rorl
inc
movsb
xchg
cmp
jmp
punpcklbw
fs
mov
fstl
mov
mov
sbb
jno
call
xchg
adc
xchg
add
adc
aaa
clc
lcall
dec
cli
xor
jg
out
mov
mov
mov
mov
and
add
aaa
and
and
lock
mov
aam
or
ja
mov
xor
ds
ret
js
or
imul
xor
in
stc
mov
int
pop
shll
call
dec
subb
jne
and
fcmovnb
cwtl
and
rcl
lock
cld
xchg
xor
in
cmpsb
filds
scas
mull
push
shrb
inc
cmp
cli
sahf
imul
push
sahf
push
push
ss
push
mov
fldt
mov
dec
inc
aas
iret
cmpsb
imul
cmpsl
jo
sub
imul
mov
cmp
outsb
addl
das
xlat
jp
out
push
movsl
xchg
in
cmc
scas
lcall
adc
cmc
mov
sbb
mov
fcos
pop
xor
in
loope
int3
pop
loopne
shr
mov
bnd
cmpl
imul
pushf
sti
jb
mov
cmp
adc
pushf
sbb
adc
cmp
mov
cmp
or
sub
arpl
movsb
fcoms
and
es
shrb
insb
xchg
fldl
fstpl
fwait
and
loope
push
aam
push
push
xlat
lods
pop
call
sbb
push
adc
into
xor
xor
push
in
hlt
ss
out
test
daa
push
jge
iret
repz
bound
cmp
cld
cmp
jp
mov
cltd
push
imul
pop
mov
or
cmp
xor
cld
ljmp
cltd
dec
pusha
std
lret
jno
outsl
ret
sti
pop
mov
lcall
dec
iret
mov
jge
lret
mov
dec
out
aaa
adc
sub
mov
mov
sbb
pop
cmpb
call
mov
sti
xchg
push
cmp
int3
pop
lret
je
cs
popf
lods
stos
sub
lcall
pop
ljmp
lret
adc
xor
je
xor
push
pop
mov
test
inc
cmpsl
push
xor
divb
subl
mov
or
add
jae
movsb
jmp
push
cmp
mov
pop
pushf
add
add
cmpsl
sarb
adc
xor
mov
mov
mov
test
cltd
mov
fstps
fidivrl
scas
adc
lcall
ja
mov
mov
push
and
add
sbb
out
sub
pusha
movsb
movsl
int3
sbbl
out
mov
jno
movsl
pop
pop
les
cmp
push
push
pop
shlb
clc
lret
aam
xchg
pop
mov
and
scas
xor
xchg
jnp
cmp
inc
rolb
mov
inc
cwtl
sub
sub
xor
push
lahf
stc
enter
xchg
add
push
cwtl
cwtl
test
mov
xor
icebp
popa
xchg
loopne
add
fisubrs
mov
jbe
push
and
into
jnp
lea
jle
or
and
mov
pop
call
or
or
icebp
sti
sbb
imul
in
pop
mov
mov
or
rorl
push
sbb
lds
jge
xchg
in
cmpsb
xor
adc
sbb
or
das
push
mov
mov
mov
or
push
or
inc
pop
fidivrl
lcall
mov
push
jecxz
xchg
lret
orb
cld
rcl
xor
mov
ret
cmp
mov
in
les
and
stos
push
jno
mov
jnp
fcomip
out
xor
cmp
loope
dec
repnz
sub
repnz
leave
sbb
sub
or
test
inc
adc
inc
sbb
loop,pt
fs
sub
cs
lret
sbb
jno
nop
adc
in
xor
adc
popf
movsb
mov
clc
bound
out
lahf
mov
cmp
aaa
jge
mov
dec
pop
dec
js
loop
subb
jmp
sub
mov
ja
inc
mov
jecxz
stos
pop
jo
xchg
add
jns
lods
add
pop
push
dec
xchg
jl
sahf
insb
dec
pop
int
mov
push
int
mov
xchg
cwtl
mov
sbb
xor
sahf
out
lcall
shll
xchg
fstl
adc
push
pop
fadds
sbb
ret
xor
iret
or
sbb
movsl
sub
mov
lea
and
mov
enter
jae
sbb
shll
call
shll
xor
pop
fstpt
dec
dec
insb
fcoms
dec
sub
arpl
cld
fnstsw
rorl
adc
pop
mov
cmpsb
loop
xchg
imul
dec
cmp
mov
xor
loope
test
in
push
cmpsb
and
arpl
xchg
jecxz
and
xchg
mov
ret
xor
adc
repz
insl
pcmpgtw
add
into
sbb
pop
sahf
les
sub
icebp
data16
dec
mov
pop
mov
mov
mov
mov
sub
jge
repnz
adc
add
mov
int3
xchg
adc
cli
mov
jae
add
jnp
mov
jbe
push
push
icebp
movsl
popf
outsl
cs
test
inc
fucomp
mov
hlt
fisubrl
sub
stc
mov
pop
arpl
xlat
cmp
add
xchg
xchg
inc
popf
rcr
fsubl
sub
sub
shr
enter
cmpsl
sub
sub
push
pushf
sbb
test
in
out
mov
ror
adc
cmp
mov
and
jmp
loop
push
cmp
lret
cld
fstpl
and
jb
sub
outsl
jp
pop
ffreep
jmp
pop
jo
xor
pop
scas
sbb
ret
mov
sbb
cmc
pop
inc
imul
inc
lret
pop
jmp
cmp
jp
pushf
testb
xchg
adc
jl
xor
fcomip
sbb
adc
cmp
cmp
push
jl
mov
in
lds
mov
mov
pop
movsb
dec
adc
and
scas
add
mov
cmp
mov
dec
jae
inc
or
pop
jae
dec
loop
push
sub
scas
inc
push
test
into
inc
pop
or
jns
add
std
or
fldcw
loopne
aam
mov
lock
clc
add
rcr
and
xchg
mov
push
test
mov
cmp
into
jns
roll
sbb
or
frstor
sub
sti
sbb
mov
mov
les
sbbl
and
and
pop
add
mov
repnz
sub
pop
mov
or
lock
inc
jmp
inc
addr16
or
mov
add
enter
sbb
sub
push
or
scas
jmp
enter
pop
test
and
jno
mov
fcmovnbe
sti
pop
sbb
inc
cmpsl
jge
xor
hlt
pop
pop
pushl
and
inc
stc
je
xor
or
mov
sub
and
jecxz
outsl
pop
cli
aaa
pop
sub
ficompl
xor
and
mov
or
xchg
imul
or
out
mov
jo
mov
pop
jge
popa
push
and
les
adc
aas
das
lds
daa
js
jo
dec
push
pop
roll
dec
ljmp
arpl
and
stc
dec
je
xchg
mov
jp
lahf
or
or
in
push
pop
cmp
pop
push
push
stos
lock
jno
sub
fildll
das
mov
leave
shrl
divb
mov
push
mov
mov
adc
xchg
cmpsl
and
rolb
inc
or
imul
ret
and
fdivrs
pop
inc
or
aas
dec
dec
lahf
rclb
mov
imul
or
cmp
xlat
repz
idivw
push
sub
jne
sbb
push
pop
inc
push
sar
cltd
stos
shll
cld
inc
aam
fldcw
out
jg
xchg
xchg
stc
hlt
in
sbb
sarl
mov
out
gs
lds
dec
bound
jmp
repz
js
out
sbb
aad
dec
cli
add
mov
jno
xor
pop
js
and
xor
cmp
dec
sub
jmp
fldcw
pop
adc
adc
mov
aas
fdivrl
pushl
js
adc
movl
sbb
push
scas
sub
ja
mov
test
pop
dec
inc
fidivs
dec
dec
xor
outsl
mov
push
movsl
nop
stos
push
xchg
ja
loopne
jno
pop
leave
push
mov
push
cmc
and
push
arpl
out
xor
iret
xchg
mov
es
mov
bound
push
jle
or
push
je
jecxz
adc
lret
or
sbb
mov
jecxz
das
in
cltd
inc
inc
scas
out
bound
pop
inc
mov
mov
mov
jbe
loopne
sub
insl
aad
popf
in
xchg
pop
sbb
push
jl
repnz
stos
lret
xchg
xchg
jns
mov
loop
movb
mov
mov
outsl
mov
in
mov
adc
push
cmc
cli
ficomps
mov
nop
clc
pop
sbb
mov
fistpll
push
sub
jo
mov
adc
inc
jecxz
mov
push
inc
scas
mov
and
stos
out
in
mul
and
pop
mov
mov
inc
dec
das
pop
jo
mov
lods
jl
jne
dec
repz
sbb
ret
das
mov
xor
adc
mov
add
cmp
out
in
sbb
or
add
fcom
jmp
xorb
cmp
inc
rclb
push
leave
rclb
pusha
xchg
pop
sbb
rorl
adc
scas
scas
mov
pushf
inc
lret
mov
cmp
ss
mov
lret
add
rcr
ficompl
pop
push
sub
stos
out
or
leave
adcb
clc
aas
dec
insl
mov
dec
test
cmpsl
stos
push
aaa
loopne
mov
jnp
test
inc
adcl
rolb
andb
jecxz
ds
push
mov
cmpsb
adc
adcl
push
dec
dec
lsl
cmp
lcall
lcall
or
imul
push
dec
mov
jmp
inc
sub
add
sbb
lahf
out
ss
cld
and
std
ljmp
in
dec
leave
data16
or
lds
mov
inc
fs
andl
lret
fcomp
das
dec
dec
mov
mov
push
popf
push
outsb
leave
push
mov
push
mov
popf
leave
imul
dec
push
cwtl
and
push
into
jl
mov
aad
push
leave
inc
popl
xchg
rol
inc
adc
pop
cmpsl
mov
pop
bnd
ja
mov
fwait
sub
dec
mov
popf
pushl
or
or
fs
je
or
daa
inc
jmp
xor
movsb
xchg
lds
in
jo
dec
push
pusha
test
push
pop
daa
xor
lds
inc
mov
push
mov
cmpsl
cmp
popa
cmp
dec
push
int3
dec
jge
cs
ds
push
adcl
xchg
mov
adc
idivl
stc
jp
cli
clc
jge
cmp
adc
imul
jge
and
aaa
testb
mov
lret
pop
xor
sbb
jae
cmp
cmpsb
icebp
sub
sbb
inc
add
pop
mov
mov
cmpsb
push
cwtl
jle
lret
sbb
insl
xchg
sub
mov
daa
push
or
adc
xlat
push
das
push
or
loope
pop
sahf
add
mov
push
das
lds
fwait
push
jl
xor
scas
xlat
mov
jbe
ljmp
cmp
push
aaa
stos
gs
mov
push
pop
ret
mov
cld
and
lods
imul
xchg
pop
or
and
cmp
xchg
bnd
mov
popf
inc
pop
fmuls
cli
jl
or
loope
outsb
ljmp
adc
inc
add
nop
pop
adc
mov
fistpl
push
fwait
mov
in
push
mov
xchg
sbb
adc
into
mov
jecxz
rcrb
push
jg
les
cld
sub
fsts
es
jbe
pushl
jns
out
lret
jmp
cmpsb
fisubs
or
sub
rolb
rcrl
or
push
or
sbb
jmp
push
in
subl
not
aas
pop
in
hlt
lock
adc
sub
iret
lcall
faddl
jmp
mov
js
lea
gs
xchg
or
cli
dec
sub
das
addr16
push
pop
push
mov
call
xor
sub
xchg
leave
daa
xchg
aaa
imul
cli
mov
lods
jp
cmc
dec
mov
popf
mov
cli
pop
in
ret
data16
imul
push
xchg
das
xchg
push
fnstenv
out
es
dec
inc
cwtl
adc
dec
ret
adc
stos
call
in
mov
scas
mov
clc
pop
nop
mov
sbb
sbb
xlat
in
loopne
arpl
test
popl
jae
inc
cmp
push
mov
mov
adc
das
hlt
les
lods
cmp
fdivl
pop
mov
and
mov
xchg
adc
xchg
xor
pushf
mov
mov
inc
insb
daa
sub
repnz
orl
jae
mov
or
sbb
and
mov
dec
leave
xor
mov
lods
sub
or
xchg
cltd
orl
addb
and
mov
or
in
filds
xchg
out
andl
fdivrp
adc
cmp
repz
mov
adc
fnstsw
xor
push
or
cmp
cltd
cmp
jl
push
xor
mov
push
adc
xchg
sbb
jle
jae
ficoms
rcll
push
out
mov
fldl
xchg
pop
test
xor
sub
addr16
inc
cmp
mov
sbbl
or
lcall
pop
jae
jmp
popa
dec
in
daa
sbbb
sbb
into
decl
test
xchg
cwtl
mov
sbb
inc
mov
xchg
mov
outsl
ss
push
rcr
jl
roll
or
jmp
push
and
mov
push
cmovs
fxch
cmp
xor
push
lahf
inc
xor
and
clc
xor
sub
das
pop
mov
in
mov
stos
jmp
jp
pop
data16
xchg
bnd
jnp
mov
neg
xlat
sub
cmp
or
dec
xor
xchg
and
testb
inc
insl
and
pop
dec
data16
sti
sbb
xor
fdivrl
add
inc
in
enter
mov
in
add
cmp
stos
mov
and
mov
fadds
fldcw
xchg
pop
or
lods
fldpi
test
dec
xchg
lret
shrl
cmp
cmp
daa
filds
test
jg
insl
dec
or
lock
jp
pop
push
and
pop
aas
ror
xor
or
arpl
enter
jl
sub
mov
push
add
mov
gs
and
sbb
cmc
and
dec
imul
hlt
and
pop
rcr
mov
mov
push
lcall
lahf
push
mov
jmp
adc
sbb
mov
mov
sbbl
lcall
mov
mov
pop
mov
aad
leave
pop
sbb
mov
pop
negl
xchg
in
outsl
cmp
or
mov
fmuls
mov
nop
jo
xor
mov
and
inc
xchg
sbb
dec
jns
mov
icebp
xchg
out
sbb
arpl
pusha
mov
xchg
repz
ret
ret
loop
pusha
pusha
outsb
cwtl
clc
rep
ja
jnp
jle
and
repz
inc
mov
mov
pop
and
repnz
pop
sbb
loopne
jo
push
clc
sub
fsts
sarl
int3
sbb
and
jne
jg
subl
scas
je
psllw
mov
push
in
std
ds
jmp
push
sbb
adc
lods
pop
mov
andl
pop
fstpt
mov
imul
inc
adc
mov
inc
jno
int
inc
sub
mov
in
mov
push
inc
bound
in
insb
jo
mov
das
xor
inc
push
sbb
sar
xor
outsb
into
subb
or
lahf
mov
call
pop
fsub
and
repz
aas
jmp
adc
fcoms
dec
negb
fdivr
xor
mov
incb
mov
cmp
inc
mov
loopne
repnz
mov
divb
xchg
sbb
cs
std
push
enter
mov
push
sti
in
jle
ljmp
cmp
xor
stos
in
in
fsubrs
or
xchg
or
lahf
jecxz
or
cs
jns
mov
jnp
inc
mov
out
and
or
mov
add
mov
push
xchg
out
out
data16
pusha
xlat
xor
mov
and
or
sbb
mov
pop
cmp
jmp
mov
negb
push
or
lea
out
test
lcall
repz
divl
push
mov
rol
stos
ljmp
adcb
out
mov
pusha
scas
rcl
into
jns
test
call
in
inc
stos
xlat
xchg
sub
inc
lea
ss
popa
sub
ljmp
or
jb
pop
imul
and
add
adc
out
stc
lret
lret
sub
cmp
leave
dec
cwtl
popa
mov
out
push
xchg
jecxz
jne
call
es
adc
outsb
xchg
popf
xchg
std
add
jmp
jb
outsl
jne
push
push
insb
jno
jmp
sub
inc
hlt
insb
iret
je
mov
push
inc
mov
mov
inc
push
fdivs
jbe
jmp
ret
in
leave
adc
lods
inc
out
movl
add
scas
mov
dec
or
arpl
ret
shrb
dec
add
cmp
std
test
push
mov
int
ret
test
mov
sbb
cmp
mov
push
aaa
pop
loope
scas
idivb
jp
rcll
lods
scas
jnp
les
ljmp
mov
add
ljmp
adc
xor
faddl
adc
push
add
repnz
movsl
das
xor
test
push
push
aaa
jne
jb
add
pop
and
test
or
cmp
movsl
sti
jmp
xlat
imul
lahf
daa
in
adc
jne
inc
in
imul
dec
cmp
inc
sub
fiadds
int
in
sbbl
das
pop
insb
sbb
pop
jns
loope
push
std
repz
or
sbb
leave
mov
nop
clc
lock
jns
popa
arpl
outsb
sbb
popa
pop
sbb
test
and
xor
sbb
outsl
mov
or
mov
add
movl
nopl
scas
filds
and
adc
sbb
jecxz
xchg
fsubs
jbe
pop
and
push
dec
add
jbe
sahf
js
fistps
adc
add
stos
xchg
or
mov
push
and
push
xchg
insl
or
imul
jp
jno
popf
mov
jae
pop
leave
jns
sub
insl
lahf
push
or
cmp
jle
mov
scas
in
sarb
mov
shrb
mov
mov
dec
jae
push
mov
stos
mov
mov
mov
movsl
sbb
dec
cmp
data16
mov
mov
add
cld
pop
out
mov
shl
enter
and
into
and
sti
or
lock
jnp
adc
lret
dec
scas
dec
aaa
into
and
mov
test
loop
mov
xchg
ret
adc
sbb
ret
inc
js
gs
lods
dec
add
ds
mov
and
mov
aaa
add
addr16
cs
fbstp
xor
roll
mov
pop
aaa
push
jne
out
cmpsb
lods
dec
ret
or
xchg
out
cwtl
fsubrs
cld
mov
into
loope
es
adc
jb
leave
or
add
push
mov
xor
jne
sbb
aad
dec
roll
sbb
ljmp
mov
cmp
je
jbe
push
push
sub
push
inc
and
rcl
and
dec
pop
sbb
adc
dec
sub
or
cmp
ljmp
jbe
movsb
lcall
test
mov
lods
cli
jbe
cmp
cmc
and
mov
insb
and
lds
inc
stc
mov
test
xor
xchg
sahf
clc
ror
cld
cmp
test
shl
lods
mov
jge
loopne
in
and
aas
mov
test
imul
fsubrs
cmp
in
imul
cmp
mov
cmp
pop
add
or
subb
loopne
insb
fimuls
adc
bndldx
push
push
xlat
movsb
lods
mov
dec
fnstenv
and
jbe
rcrb
mov
jp
add
cltd
sbb
xchg
dec
divb
adc
jo
cld
dec
push
cmp
sti
nop
jbe
testl
jno
inc
pop
rorl
pushf
repz
popf
pop
mov
sub
mov
shll
add
adc
mov
lock
jmp
cmp
cmpsb
adc
fbld
sbb
mov
xor
adc
pop
mov
loop
lods
fidivrs
jg
inc
frstor
sbb
in
into
pop
xchg
rolb
pop
test
xchg
jecxz
pop
movsb
mov
push
in
cmpsl
dec
mov
mov
dec
cld
cmp
xor
xor
mov
test
or
repnz
jg
cltd
arpl
fcompl
mov
pop
shrb
cmpsb
iret
push
movsl
fnstcw
adc
xchg
lcall
cmpsl
jmp
rcl
movsbl
lock
aas
adc
insb
jl
mov
pop
mov
clc
aas
push
popa
xchg
in
add
xchg
repnz
dec
cmp
lret
jmp
mov
inc
ja
mov
test
push
push
mov
nop
pop
jno
dec
adc
aas
and
mov
shr
rorl
mov
out
data16
test
aam
repnz
rep
add
call
mov
notb
inc
ss
mov
js
push
lcall
div
sbb
adc
lcall
xchg
stc
iret
dec
cmpsb
sahf
ja
and
pop
sbbw
dec
mov
loope
nop
push
movsb
outsl
adc
push
stos
scas
in
ljmp
add
push
cmp
push
mov
insb
mov
jnp
call
xchg
add
sbb
push
cld
mov
imul
mov
mov
inc
mov
test
psubsb
sub
movb
mov
lods
fildll
jle
mov
push
sub
fs
pop
out
jecxz
hlt
mov
or
std
popa
lods
test
in
mov
dec
sub
in
and
icebp
pop
ret
shrl
cmpb
cltd
mov
adc
and
sub
mov
and
xchg
pop
imul
jnp
out
pop
cmc
sti
clc
xchg
fcompl
sbb
cwtl
inc
inc
test
popf
or
jg
and
fnstenv
dec
mov
scas
lahf
icebp
flds
cmc
xchg
fs
out
mov
test
sub
cmp
pushf
pusha
jb
mov
in
xchg
ret
fcompp
dec
lods
int
push
arpl
out
dec
inc
addr16
in
inc
cmpb
cmpsb
in
adcl
or
mov
xlat
dec
cmpsb
adc
sbb
ret
stos
and
mov
stos
xor
sub
or
cmpsb
inc
mov
lahf
in
pusha
call
btc
ror
mov
enter
sub
mov
inc
mov
popa
push
hlt
cld
sub
xchg
cmpl
in
dec
dec
es
push
push
dec
mov
mov
stos
cmp
orl
clc
push
out
dec
sbbl
addb
jo
xor
testl
jp
pop
stc
sub
jmp
cmp
sti
mov
flds
cmc
inc
pop
jne
pushf
mov
ret
jne
adc
cmpsb
out
mov
cmp
sub
cs
lcall
in
push
xchg
mov
xor
aam
cmpsb
jg
dec
jae
mov
jg
lret
pop
fwait
mov
ds
mov
push
cli
cmp
sub
xor
cmp
aas
ss
sub
jae
dec
inc
xchg
pop
add
push
sbb
jnp
mov
adc
push
push
sbb
or
sbb
mov
inc
fsubrl
push
jp
popf
mov
push
rolb
push
fwait
sbb
xor
push
dec
mull
dec
ja
xlat
push
push
ljmp
or
xchg
jl
fdiv
ljmp
cmp
shll
push
int3
std
dec
push
cmp
andl
pop
push
mov
arpl
idivb
cmp
movsl
sub
dec
jnp
push
push
fimull
fnstenv
jae
stos
pop
xchg
pusha
incl
push
or
pop
mov
push
lods
in
icebp
outsb
or
cmp
sbb
test
hlt
clc
out
in
mov
aam
push
push
imul
pop
and
aaa
pop
and
or
inc
cmp
test
ljmp
xor
mov
lock
jno
out
movsb
nop
dec
jns
cmp
mov
and
mov
cwtl
mov
movsb
push
sub
in
inc
imul
push
push
subps
ljmp
or
push
nop
iret
cmc
mov
pushf
popf
mov
cmp
lret
aas
xor
hlt
outsb
in
mov
gs
jmp
lcall
jb
cltd
adc
mov
sub
jo
scas
sub
xchg
jmp
xchg
dec
les
xor
fidivl
in
jle
int
lds
out
sbb
jo
icebp
sbb
movsl
lds
xchg
je
nop
enter
popa
jg
pop
in
xchg
scas
call
mov
add
dec
nop
sub
xor
push
dec
pop
pop
movb
inc
shrl
jp
repnz
movsb
push
xchg
lds
cwtl
filds
test
aam
pop
ds
and
add
rcrb
add
clc
pop
and
cmpsl
scas
adc
ret
pop
lock
cmpsl
sub
sbb
leave
mov
fcmove
or
rcrl
int
inc
sub
ss
sub
lea
push
push
scas
xchg
pop
xor
jns
or
inc
sbb
jo
adc
pusha
jg
xchg
pop
ja
lods
mov
int
dec
dec
pop
repnz
or
into
les
push
adc
or
out
xchg
enter
adc
sub
cmp
xchg
shlb
in
xchg
mov
dec
sbb
add
outsl
add
jne
add
and
out
cld
sbbl
leave
aad
and
or
sbb
sub
mov
mov
xchg
adc
addr16
jge
xlat
nop
in
lds
stos
inc
nop
sysret
fidivrl
dec
or
fwait
or
out
add
loop
out
push
xor
dec
xor
mov
icebp
and
adc
jns
xchg
movd
cld
fldcw
cmp
orl
mov
ficoml
inc
test
cmp
lds
mul
and
testb
push
inc
repz
out
sbb
push
ret
out
mov
push
iret
pop
mov
lds
hlt
insl
shll
jmp
xchg
daa
jbe
or
sub
into
js
shlb
addr16
imul
jmp
aam
enter
mov
shlb
mov
ss
imul
popf
sbb
cmpsl
jg
cmp
in
add
push
mov
jecxz
aad
fsts
sarb
int
sub
mov
pop
or
clc
loope
cs
mov
imul
xchg
push
inc
or
mov
mov
pop
mov
cld
xchg
in
call
ror
in
shl
mov
xchg
fistl
mov
pushf
cwtl
mov
add
xor
pop
scas
lea
jne
push
mov
addb
mov
cli
dec
mov
pop
cwtl
sub
ss
ljmp
popa
sahf
push
ss
and
fisubrl
inc
push
jns
fisttpl
inc
pop
inc
fwait
and
nop
leave
dec
lods
in
imul
ljmp
sbb
or
inc
push
std
shll
bound
push
sub
imul
call
cwtl
divl
lahf
and
fwait
xchg
jb
arpl
push
fstpl
push
xor
jecxz
int
stos
and
inc
mov
mov
push
fidivrs
in
les
sbb
push
xchg
das
stc
sar
fmul
fcoml
dec
mov
test
dec
fucomi
nop
add
movsb
pop
rcrl
jmp
add
jle
addr16
cmp
fsub
cmp
or
leave
or
int3
cmp
sub
mov
adc
and
mov
cmpsl
inc
jmp
lods
jle
iret
sub
gs
loop
inc
mov
cs
shrl
or
jbe
icebp
daa
sti
fdivs
int3
lods
mov
push
mov
mov
sbb
pop
cmp
mov
sub
int3
sub
xchg
loope
pop
mov
aam
cld
int3
aas
scas
ljmp
xchg
mov
jl
cltd
clc
bound
iret
in
cld
sti
or
xor
mov
es
xchg
or
aas
mov
cmpsb
inc
pusha
fs
gs
jno
sbb
mov
mov
sbb
sarb
lods
out
ljmp
into
pop
stc
out
lods
cmp
outsb
mov
out
dec
sti
pop
mov
movsl
xor
add
in
push
inc
push
jl
clc
int3
pop
jb,pt
or
fcom
cmp
lret
push
xor
sahf
test
insb
std
mov
lret
movsl
push
sub
or
pusha
add
cltd
negb
mov
mov
scas
inc
cmc
mov
outsl
aas
cwtl
inc
aaa
clc
insl
call
cld
mov
fdivs
and
sbb
pop
xor
inc
push
out
mov
jl
and
inc
fsub
mov
push
jp
cmp
addb
ljmp
dec
sub
cmpsb
jbe
mov
movsb
add
repz
js
add
push
clc
pop
add
outsl
mov
lret
sti
pop
jno
push
jb
lret
inc
loope
cmpsb
dec
pop
addr16
xchg
lret
xchg
or
dec
sub
outsl
pop
mov
lahf
fwait
popa
cli
lcall
dec
pop
jg
mov
pop
add
push
out
mov
push
sbb
jnp
ljmp
sub
add
pop
adc
imul
loope
or
dec
xor
nop
cwtl
push
sub
dec
pusha
loopne
in
shrl
int
jns
mov
push
ja
cwtl
sarl
add
in
dec
arpl
push
jae
and
xor
repnz
out
or
adcl
insb
jle
jle
cmp
dec
cmc
mov
dec
mov
lock
mov
lods
inc
cmpsb
sahf
rorl
clc
push
xchg
enter
stos
cs
jbe
and
mov
adc
in
mov
adc
ds
popf
popf
rolb
fdivrl
imul
cwtl
bound
xchg
inc
out
std
mov
lcall
popa
pushf
popf
cmp
xchg
jns
or
stos
xchg
faddp
cld
push
mov
xchg
imull
jne
jo
les
int
cli
add
daa
jbe
push
xor
sub
or
movsl
fildll
jge
jae
mov
adc
lds
aaa
sub
push
and
andb
aam
xchg
xor
pop
divb
insb
arpl
push
mov
popf
xlat
inc
mov
pop
aaa
dec
and
pop
jecxz
jge
arpl
inc
fbld
mov
adc
mov
out
adc
mov
jmp
mov
int3
sbb
adcl
ds
fbstp
repz
inc
pop
inc
and
mov
pushf
addb
pop
and
inc
mov
leave
sub
cmp
lea
imul
cli
imul
pusha
les
inc
push
add
mov
aad
jae
dec
push
dec
mov
mov
push
mov
or
lret
jae
xchg
shlb
repz
pop
sarb
pusha
popa
stos
ja
aaa
sbb
push
icebp
mov
adc
testl
jne
daa
cld
mov
mov
loop
bound
shrl
mov
sub
mov
fcmovnbe
inc
mov
ss
lcall
lcall
mov
aaa
pop
hlt
adc
cs
cmc
adcl
and
mov
in
and
iret
pop
insl
ret
inc
pusha
xchg
jb
ja
sbb
nop
not
in
out
nop
mov
cmp
or
sub
mov
xchg
cltd
fscale
arpl
test
dec
aam
lret
mov
in
mull
cmp
mov
mov
stc
fbld
aad
mov
subl
roll
mov
jno
mov
shrb
loopne
push
xor
ss
lock
adc
push
jae
jno
and
fsubl
pop
lret
enter
xchg
movsl
test
jge
sbb
mov
cmp
fisttpll
cmp
jecxz
mov
cld
lods
mov
mov
cmp
int3
cltd
pop
adc
ret
pop
pop
das
or
jns
daa
repnz
movsl
adc
lret
or
inc
mov
lret
cmp
xchg
cld
pop
clc
jecxz
pop
mov
das
rclb
jge
arpl
ljmp
push
stc
rcl
outsl
mov
xor
push
or
cmpsl
xchg
jbe
call
cli
push
mov
and
fistl
sahf
dec
test
mov
stos
mov
sbb
nop
mov
cmp
mov
popf
lret
sahf
cmp
ret
dec
sahf
test
mov
lcall
cltd
mov
add
pop
clc
arpl
sbb
mov
jno
mov
les
inc
inc
adc
add
roll
push
sub
or
stc
imul
fisubs
sbb
sbb
arpl
mov
pushf
nop
aam
aaa
es
xor
push
nop
enter
pop
push
mov
lds
adc
dec
dec
inc
pop
out
cmp
insb
dec
mov
cmpsb
popf
or
jne
xor
fisttpl
leave
pushf
xor
add
imul
int
mov
cwtl
xchg
jae
adc
jl
lret
jbe
stos
jp
xor
mov
or
imul
add
lock
das
mov
mov
inc
mov
fs
sub
jp
inc
cmp
sbb
sub
xchg
mov
xchg
push
scas
popf
hlt
loopne
dec
cmpsb
ret
mov
outsb
movsb
push
mov
mov
dec
out
jno
ja
lock
cld
jmp
test
jnp
xor
pop
cmp
mov
pop
mov
icebp
loop
or
sub
icebp
push
jmp
cmp
or
adcb
and
dec
inc
roll
jne
push
mov
sub
out
int
mov
repz
xor
cltd
push
in
dec
test
jno
and
cld
sbb
sbb
fldl
ror
push
hlt
inc
xor
adc
stos
pushf
mov
test
gs
push
sbb
in
pushf
mov
call
and
cltd
imul
push
push
orl
push
sub
mov
mov
imul
cmp
mov
cmp
mov
jbe
test
fimuls
or
test
jle
scas
or
mov
dec
out
push
sub
lea
arpl
fistps
jmp
jg
and
les
fiaddl
mov
and
stc
mov
jmp
mov
sbb
daa
lcall
mov
adcl
inc
mulb
in
sbb
andb
and
inc
rorb
scas
icebp
aad
stos
ret
movsl
mov
jge
cli
inc
es
out
les
dec
cmp
push
stos
mov
sbb
cltd
mov
dec
sbb
stos
and
cmp
cld
fwait
out
ja
shl
gs
cmpsl
xor
std
pushf
pop
testl
adc
inc
mov
out
in
jbe
and
mov
add
loope
aas
sbb
cld
dec
fistpll
dec
cmp
aad
mov
repz
sti
and
enter
ror
mov
xchg
stc
mov
icebp
cmp
jecxz
imul
fistl
movsl
fisttpl
mov
js
out
mov
adcb
cmp
movl
mov
iret
mov
daa
lods
mov
pop
and
insl
es
aas
push
mov
sbb
je
ret
xor
cli
fidivs
idivb
cmp
mov
fsubrl
ret
cmp
push
inc
cmp
cmp
and
test
cmp
xchg
add
adcb
cmp
daa
jmp
cmp
out
imul
roll
sbb
stos
add
int3
xor
sbb
sbb
mov
xor
and
je
test
jmp
lret
and
popf
sbb
sbb
stc
arpl
or
stc
stc
fisttps
mov
icebp
clc
mov
cmpsb
stos
addr16
or
aad
xlat
rcll
rol
scas
movsb
int
les
push
aaa
lock
adcb
jae
cld
mov
ja
mov
das
and
dec
iret
stos
clc
mov
cmpsb
out
inc
cmpsb
inc
mov
add
jbe
cltd
mov
iret
jl
dec
dec
jne
add
inc
push
mov
add
xchg
repz
or
flds
jo
int3
mov
inc
lahf
dec
jg
jbe
cli
insb
push
sub
mov
mov
les
stc
sub
roll
dec
imul
nop
mov
mov
pop
push
fsubs
sbb
dec
jp
std
cmpsb
cmp
cltd
jp
push
loop
xchg
mov
rcrl
out
jl
aas
adc
dec
pop
inc
push
cli
pusha
unpcklps
mov
jmp
dec
addr16
xchg
rcl
shlb
ss
push
adc
fcmovbe
pushf
jne
pop
or
push
cmc
sahf
xor
adc
out
jno
jmp
cwtl
sub
arpl
jns
outsl
cmp
push
aaa
lret
or
mov
cmp
jbe
sub
mov
cmp
cmp
bound
pop
sub
movsl
dec
lahf
xchg
and
lods
orl
ljmp
aaa
pusha
jmp
frstor
mov
jbe
adc
xorb
ja
mov
pop
cmpsb
fists
xor
sbb
icebp
push
popa
imul
popf
int3
push
ret
data16
and
inc
xchg
mov
sub
ficoms
and
xor
dec
pop
mov
les
and
pop
iret
pop
cs
test
outsl
repnz
fs
nop
mov
dec
cs
outsb
mov
popf
sbb
jnp
xor
addl
jno
pop
flds
xchg
jecxz
sti
mov
ficoml
push
cs
and
mov
vmovaps
outsb
mov
fs
scas
jg
outsl
sub
bound
std
adc
imul
add
mov
jns
and
jns
mov
xor
push
jl
cwtl
mov
enter
inc
or
push
xchg
ja
push
mov
pop
dec
xor
xchg
scas
sbb
jp
mov
push
popf
xor
adc
into
push
mov
test
push
jb
stos
cmpsl
imul
lods
repnz
fs
xor
cwtl
sbb
mov
xor
push
sti
adc
insb
cmc
lods
jno
push
enter
fimull
out
fwait
das
scas
imul
repnz
scas
mov
fwait
push
and
in
cmp
movsb
jp
test
enter
mov
fcmovu
iret
mov
jl
sbb
fsqrt
sub
stc
std
hlt
lea
in
ljmp
mov
ret
lods
mov
sbb
mov
push
dec
cmp
clc
xor
sti
mov
or
add
jecxz
sub
lcall
fsubr
mov
inc
testl
mov
stc
cmp
add
push
sub
adc
lock
aam
int3
stos
jo
jbe
js
mov
out
imul
mov
and
sbb
or
cmp
mov
loope
add
shll
movsl
cwtl
repnz
movsb
hlt
mov
and
pop
cmp
fadd
pop
mov
jg
lret
mov
arpl
in
xor
push
adc
add
push
stc
cltd
jnp
lret
out
dec
ljmp
push
ljmp
imul
rcl
xchg
jp
jle
inc
clc
aam
pop
push
repz
or
xchg
into
addr16
sahf
mov
lock
test
mov
popf
inc
pop
subl
cmp
scas
out
or
xor
pop
jg
and
add
gs
repnz
in
xchg
lock
fimull
xor
test
std
lcall
and
cli
pop
enter
aam
and
sub
inc
outsb
mov
cmp
xor
in
stos
pop
dec
adc
adc
inc
cmpsb
mov
out
pop
pop
pop
lret
insb
pop
fsubr
mov
add
cli
dec
pushf
jb
test
in
and
es
mov
aas
movb
hlt
cmp
fidivrs
or
inc
mov
push
pop
sbb
and
fcomp
xchg
sbb
rcrl
pop
cmpsl
imul
idiv
xchg
jno
sub
mov
adc
loopne
inc
xlat
mov
out
mov
adc
dec
push
jecxz
xor
cltd
mov
jecxz
add
mov
dec
outsl
ret
mov
dec
sbb
fcompl
sbb
dec
push
loope
lea
pusha
test
test
rcr
ljmp
push
popf
les
stos
icebp
inc
pop
lock
pop
dec
mov
pop
sti
lods
sbb
lahf
pop
sub
aad
gs
cld
and
mov
imul
outsl
adc
les
mov
adc
pop
ja
inc
sub
stos
clc
sub
sbbb
pop
loopne
lods
out
mov
ret
cld
pop
add
lcall
mov
inc
fdivs
aas
shlb
push
mov
jnp
dec
test
ja
out
pop
iret
stos
or
dec
push
dec
mov
push
or
adc
scas
xlat
fucomp
stc
sub
mov
incb
sub
push
jne
mov
mov
cmpsl
and
and
js
inc
out
lods
subb
and
sub
jmp
stos
ret
xlat
jmp
clc
xor
and
adc
inc
inc
dec
push
lret
mov
aaa
pop
xchg
scas
push
rcrl
lret
jmp
int
push
shl
jmp
cmp
mov
push
xchg
sub
movsb
and
sbb
lcall
push
cmp
jge
mull
mov
inc
mov
mov
mov
and
or
jg
mov
iret
push
sarl
xchg
call
mov
movsl
jae
mov
fnstsw
in
testb
scas
outsb
pop
push
push
mov
popf
mov
push
lret
and
sti
out
ucomiss
data16
xchg
in
mov
test
push
ds
jl
mov
out
mov
pop
and
pusha
jae
sbb
ret
shll
fistpl
movsb
lea
pop
in
push
leave
jecxz
mov
mov
fs
inc
loop
mov
test
fldenv
or
imul
pop
ja
and
test
sbb
mov
pop
loopne
sub
js
ja
push
imul
dec
or
cmp
pop
adc
data16
gs
sub
push
adc
push
jns
mov
cltd
push
dec
into
insl
ja
mov
xchg
mov
inc
int
lahf
inc
inc
sub
pop
pop
xchg
mov
sub
sub
cltd
mov
mov
inc
push
adc
push
cltd
dec
pop
pop
push
add
shl
jp
or
popf
inc
nop
dec
and
xchg
icebp
mov
cli
sbb
push
pop
dec
sbb
xchg
in
push
mov
dec
pushf
aad
xchg
shll
pop
jns
and
dec
les
jecxz
roll
fwait
xor
hlt
jne
icebp
ss
jno
or
adc
aam
jo
cmpsb
xor
pusha
mov
ret
mov
cltd
incl
fildl
fistps
adc
lcall
je
jbe
inc
add
in
imulb
cmpsb
fs
jmp
ficomps
sbb
adc
push
jl
mov
jns
jge
pop
mov
ret
jne
mov
hlt
adc
ror
test
mov
mov
or
loope
jb
sub
insl
cmpsl
clc
int
iret
loop
pop
pop
xchg
jp
lret
push
sahf
in
cmpsl
and
outsl
mov
cli
sahf
and
sbb
stc
xchg
movsb
adc
cmp
adc
and
lock
data16
into
mov
inc
pushf
and
aam
stos
int3
pop
adc
cmp
in
pushf
rol
mov
cli
cmp
xor
mov
fmull
dec
mov
daa
mov
mov
mov
sbbl
inc
xor
gs
jp
xchg
jmp
fldt
sub
mov
or
jle
stos
out
adc
inc
testb
jmp
sub
inc
mov
iret
add
adc
das
rcrl
nop
dec
mov
push
lahf
or
inc
inc
cld
pop
dec
pop
xor
or
ljmp
mov
fcoml
hlt
repnz
fwait
or
sub
into
mov
fisttpl
lock
push
aas
popf
or
jo
pop
jl
outsl
jne
loop
add
lcall
jmp
fidivrs
out
adc
add
push
sub
and
int3
cmp
mov
ss
aam
sub
adc
test
pop
adc
cli
pop
lea
popf
add
sti
into
orb
lods
dec
xchg
sarl
jbe
pusha
aam
pop
sbb
fmuls
lods
loopne
fstpl
out
sbb
sbbb
mov
xchg
adc
mov
sub
mov
clc
clc
dec
es
push
pop
cmc
and
adc
movsl
adc
je
pop
ret
mov
sarb
push
jl
fcoml
fisubrl
aas
push
loope
mov
sbb
aaa
ret
mov
lock
fstp
jnp
xorb
vpavgw
sbb
mov
pop
add
or
push
pop
mov
xchg
dec
add
pop
dec
stos
lock
in
leave
in
ds
enter
jmp
jp
push
dec
lahf
mov
or
jbe
insl
ds
jecxz
fwait
ret
repz
test
bound
decb
mov
insl
clc
or
and
popa
into
enter
jp
nop
addl
lds
jbe
or
ljmp
add
push
iret
xchg
push
sub
mov
mov
xchg
inc
push
pop
pop
testb
insb
xor
xor
test
es
xchg
cmp
lods
std
fsts
sub
movsb
pop
js
loope
jo
js
repz
notl
hlt
mov
mov
cmp
pusha
in
fistl
clc
repz
popa
pop
sub
mov
stos
clc
add
push
popa
xchg
test
flds
bound
mov
pop
loopne
sub
cmp
mov
push
cltd
loope
add
rcrl
add
out
dec
out
movsl
mov
inc
jg
pop
dec
fildl
xchg
clc
mov
loopne
jle
mov
push
mov
push
rorl
mov
xchg
cmpb
mov
mov
mov
inc
xchg
jl
jg
stos
dec
adc
pop
sub
repz
and
cmpsl
call
in
mov
mov
loopne
cs
sub
arpl
push
in
clc
lahf
sbb
mov
inc
test
xlat
xor
lods
pop
cmp
dec
js
pop
mov
call
inc
cmp
and
daa
pop
fnsave
jle
xor
xchg
rcl
imul
hlt
add
push
xchg
cwtl
inc
xchg
jp
ret
roll
dec
push
and
mov
xchg
push
push
lahf
cltd
daa
in
mov
jp
dec
jle
mov
mov
mov
lock
repz
subb
je
insl
mov
push
fiadds
adc
loop
or
lods
xor
cwtl
mov
je
into
inc
ljmp
mov
fwait
push
int
push
cmp
sbb
cld
loopne
cmpsb
mov
jp
cld
inc
ret
aam
xlat
mov
pop
int3
push
daa
cmp
ret
sub
test
pop
or
mov
aas
ds
jg
xor
adc
ja
jp
jg
jecxz
sub
fldt
add
popf
in
dec
mov
mov
push
sbb
dec
loope
shl
fisubs
orb
or
push
sub
pusha
outsb
xchg
mov
mov
cmc
movsl
roll
popa
push
clc
xor
in
adc
jno
fdivrl
hlt
xchg
imulb
adc
pop
sti
in
mov
xor
insl
lcall
lret
mov
aaa
sbb
test
dec
scas
inc
popf
push
mov
lahf
adc
les
and
iret
dec
into
sbb
inc
in
push
lret
int
jge
xchg
sbb
mov
in
pop
into
adc
mov
dec
cld
mov
xchg
repnz
xchg
mov
clc
es
fld1
push
jbe
jmp
aas
and
ret
fs
mov
mov
or
cs
scas
xchg
jp
ljmp
push
mov
adc
negb
pop
push
xor
or
jnp
je
fbld
jnp
pop
and
test
xchg
mov
sbb
and
out
pop
mov
cmpsb
lahf
jo
jb
lds
inc
inc
out
inc
cmp
lret
fcompl
mov
mov
ljmp
fs
sub
mov
sbb
adc
imul
out
jge
add
dec
in
out
jne
in
enter
xor
cli
rcll
lds
shlb
fst
mov
xor
sub
fadd
mov
mov
repnz
scas
aas
lahf
sub
pusha
jmp
in
xchg
xlat
test
int
sub
push
sub
xchg
cmp
adc
push
arpl
stos
or
sub
inc
ret
scas
jmp
xor
mov
mov
push
stos
push
mov
push
lcall
scas
mov
pusha
fiaddl
enter
sbb
iret
push
in
jg
fldt
pop
xor
xchg
mov
or
lods
sbb
shl
jne
mov
mov
jmp
push
adc
push
pop
shll
jns
cltd
cltd
mov
nop
and
lcall
sti
mov
negb
mov
shr
dec
cltd
out
push
popf
push
add
gs
mov
xor
rolb
mov
das
pop
adc
fimull
addr16
iret
push
mov
or
sub
inc
cld
sub
cli
push
sbb
lret
pop
push
test
cmc
es
mov
insb
fildll
add
test
push
xchg
and
pushf
pushf
lds
sbb
aas
cmp
lds
lods
test
out
dec
push
mov
jle
mov
xorb
inc
das
mov
and
lahf
cmpsb
loopne
outsb
xchg
pop
fildll
dec
pop
test
dec
add
insl
jne
or
insl
xchg
cmp
or
push
jnp
pop
xchg
cmp
cmp
lahf
mov
xlat
jae
push
add
pop
pusha
test
mov
pop
push
fstpt
sbb
push
lcall
lods
cmc
pop
or
add
arpl
test
in
dec
pusha
xor
sub
add
adc
mov
xchg
xorb
loope
popf
daa
cmp
das
and
cmpsb
push
xlat
adc
sti
or
movsb
hlt
fdivl
pop
push
jns
testl
adc
adc
pop
mov
pop
adc
jb
mov
cmp
das
in
mov
cmp
jmp
inc
dec
sbb
mov
lea
pop
pusha
inc
dec
ret
rorb
das
into
frstor
cld
mov
sub
pop
and
data16
lock
xchg
in
sub
mov
pop
icebp
push
jmp
adc
pop
mov
loopne
pop
aas
cs
xor
xor
call
or
sbb
push
xchg
add
mov
loope
in
prefetcht2
and
adcb
loopne
jg
cmpsb
in
popa
dec
cmp
add
ror
aaa
dec
mov
shll
insb
bnd
cmpsl
testb
adc
fimull
outsl
fsubr
mov
pop
pop
imul
mov
mov
rorl
insl
push
lea
orb
mov
mov
xchg
or
cmpsl
out
mov
ficomps
incb
push
sbb
bound
mov
mov
std
arpl
xchg
leave
and
in
cwtl
scas
mov
icebp
icebp
and
cmc
and
cmp
xorb
daa
ja
xor
rol
mov
clc
jno
movsl
inc
ljmp
js
in
or
notl
js
arpl
push
lcall
mov
or
imul
push
ljmp
dec
mov
ds
sbb
ss
sbb
out
outsb
push
mov
jp
xor
daa
jmp
jecxz
ret
sbb
sub
sbb
popf
mov
push
cmp
div
pusha
xor
movsl
popa
lods
xchg
mov
popf
out
ja
out
sub
lock
xchg
pusha
push
cwtl
jmp
fwait
jl
push
xchg
push
xchg
mov
mov
cmp
jb
pop
pusha
push
es
mov
and
mov
inc
cmp
outsb
mov
lret
mov
incb
adc
jl
adc
mov
movsb
or
mov
push
enter
xchg
inc
test
aas
jns
scas
movsb
xor
pop
inc
jecxz
dec
push
mov
lret
cltd
pop
aas
cs
dec
fs
mov
inc
call
pop
fwait
int3
lock
scas
out
jno
push
xchg
cld
mov
insl
mov
cmp
add
pop
mov
js
cmpsl
jnp
clc
jl,pn
inc
jecxz
mov
mov
ds
jbe
in
or
mov
mov
dec
xlat
jmp
lret
out
add
jo
mov
adc
fiadds
cmp
je
pop
int3
mov
mov
or
jnp
loop
pop
pop
mov
mov
lret
out
and
out
xchg
or
sbb
mov
lods
xchg
pop
cltd
lret
xchg
aaa
push
loopne
mov
popa
imul
fwait
sbb
fimuls
fstpt
lock
sti
out
ret
out
xchg
jo
or
es
jbe
inc
dec
dec
lods
ud0
adc
sub
add
mov
mov
in
mov
push
adcb
jb
push
lret
lret
jmp
xchg
clc
push
inc
das
xor
rorb
sarl
mov
lret
scas
inc
arpl
push
rcrl
push
jmp
ss
das
mov
jo
pop
outsl
mov
push
mov
stos
sbb
pop
xchg
cmp
insb
js
push
xor
les
ljmp
test
lret
inc
cmpl
cli
xchg
fprem
inc
mov
flds
cmp
ret
adc
mov
mov
cmp
scas
xorb
cld
xchg
sbb
lods
aad
pop
cmpsl
jecxz
mov
jb
ss
mov
push
int3
sti
or
inc
xor
add
clc
rorl
push
enter
faddl
inc
lret
push
dec
xchg
dec
push
loopne
adc
in
mov
or
jecxz
push
pop
rclb
mov
aaa
insl
or
and
mov
dec
xlat
adc
bound
jnp
psubb
and
sub
icebp
ljmp
jle
jl
cmp
cmp
and
xlat
out
mov
loop
xor
add
sub
hlt
or
lret
nop
ret
aas
push
cmp
sub
dec
inc
loopne
push
xchg
jnp
cmpsl
lret
pop
jecxz
stc
leave
xor
push
cld
mov
in
mov
push
mov
mov
jg
jmp
lea
add
mov
repnz
sbb
jo
mov
inc
and
xchg
or
dec
push
mov
popa
icebp
jns
add
je
xor
in
imul
jle
daa
in
les
pop
cwtl
loope
sarb
sub
shl
dec
push
iret
movsb
stc
enter
js
fstl
sub
pop
punpcklwd
je
outsb
push
std
mov
aaa
jg
cld
fcmovu
or
inc
addl
out
in
inc
push
lcall
in
fcmovbe
lock
jl
cmp
add
mov
ja
in
cwtl
xor
dec
mov
imul
mov
js
shll
es
in
xor
dec
movsb
and
mov
pop
int
mov
mov
add
lret
cmp
sahf
jbe
shrl
add
push
test
hlt
je
fisttps
push
adc
cld
mov
push
dec
addr16
push
mov
test
imul
fidivl
roll
or
inc
aad
in
sahf
lret
mov
mov
mov
sub
pop
stos
mov
mov
cld
dec
adc
push
xor
movsb
adc
lcall
fwait
xor
xchg
cmp
mov
and
inc
leave
es
iret
fs
dec
lock
dec
jno
jo
mov
or
dec
xchg
lods
fs
cwtl
pop
scas
sbb
cmp
pop
lret
add
mov
mov
sub
stos
leave
pop
jb
inc
sub
out
cwtl
xorl
imul
adcl
fs
and
sub
sbb
pop
mov
mov
mov
mov
lea
inc
sbb
cmp
outsb
aas
sbb
xchg
adc
ret
imul
je
and
sahf
movsb
lret
pop
rorb
jnp
add
push
loopne
rep
mov
push
inc
push
adc
pop
pop
outsl
inc
sub
pop
and
xchg
icebp
fstpl
add
das
decb
mov
fistl
xchg
cmp
pop
pop
aaa
and
outsl
enter
cmp
sub
mov
add
push
or
popa
and
popf
xchg
rorl
add
jne
lret
fisubrl
jb
adc
scas
fsts
jae
xor
arpl
mov
test
pop
and
gs
cmp
cmp
cwtl
bound
cli
xchg
test
mov
in
lods
mov
mov
jb
andb
addb
and
mov
dec
sub
xor
jmp
ss
test
and
push
mov
enter
xor
jecxz
dec
jle
or
in
pop
and
ds
pop
add
or
push
data16
orb
inc
fdivl
xor
sub
aas
mov
push
xchg
rclb
outsl
cld
add
dec
cmp
js
shll
hlt
cmp
imul
icebp
aaa
clc
push
adc
cmp
xchg
aam
inc
test
xchg
sbb
decb
popa
rcr
xchg
sub
adc
add
mov
xchg
punpcklwd
push
push
mov
xor
addr16
jne
adc
lahf
adc
xor
xlat
dec
inc
lret
insl
fstps
add
repz
add
scas
sub
loopne
ja
jne
iret
mov
lahf
push
pop
jge
loopne
xchg
call
mov
adc
and
and
sbb
enter
js
inc
sub
popa
loop
cltd
xchg
insb
add
xor
inc
stos
shll
ret
push
pop
adc
add
movsl
jb
xor
lret
gs
addr16
shr
xchg
push
and
in
insl
pop
adc
mov
push
stc
sub
inc
push
push
dec
mov
and
inc
push
mov
mov
insl
rolb
inc
repnz
daa
call
in
rcr
ja
xchg
andb
xchg
lods
pusha
pop
cmp
cltd
lfs
dec
and
pop
mov
xchg
add
add
mov
jae
sub
mov
mov
sub
mov
out
or
xchg
or
jmp
testl
adc
pop
cmpsl
mov
aam
xchg
dec
clc
icebp
mov
je
shll
lds
rcl
aad
sar
scas
imul
or
push
adc
mov
cmc
jg
inc
inc
push
mov
and
movsl
push
cmpsl
bound
xor
inc
sub
testl
mov
inc
ret
mov
add
int
jl
dec
in
int
pop
pop
cmp
dec
pop
mov
imul
imul
inc
or
jp
and
inc
xlat
pop
cmc
push
leave
dec
push
stc
xchg
ljmp
cmp
cmp
sbb
fdiv
aad
or
and
xchg
push
sub
xor
push
lods
lods
xchg
gs
add
mov
mov
das
cwtl
push
sbb
movb
inc
aas
xchg
dec
add
imul
fsubs
lcall
inc
fidivrl
dec
lcall
pop
pop
and
xchg
ljmp
jns
xchg
out
dec
les
hlt
setg
fildll
push
mov
sbb
mov
int
pop
mov
pop
inc
test
cltd
ficompl
or
js
xlat
push
adc
add
sub
mov
loopne
loop
lea
inc
sub
movsl
js
mov
loopne
test
popl
rep
loop
cltd
popf
movsb
mov
or
les
movsb
and
or
loope
fwait
in
jne
xchg
or
in
sub
leave
cld
jmp
sbb
imul
nop
xchg
test
pusha
bound
mov
mov
shll
or
div
nop
sbb
jp
lods
in
sbb
mov
int3
cld
push
xchg
jle
jg
pusha
fldln2
mov
dec
fdivs
mov
jge
adc
adc
sub
cmc
pop
fsubp
neg
stc
fildll
pop
mov
push
dec
push
mov
notb
mov
xchg
xor
stc
cwtl
jl
or
xchg
adc
shlb
add
push
cmpsb
jno
insb
adc
inc
jns
dec
sbb
pop
xchg
jne
xor
and
ds
push
mov
rolb
aad
stos
pushf
scas
pusha
ss
loope
or
dec
add
mov
repz
add
gs
scas
inc
or
dec
or
sti
call
ficompl
fcoml
lock
push
cmpb
jmp
rorl
xchg
inc
std
cmc
fisttps
je
shl
mov
ret
shrb
xor
xor
loop
xchg
vprotq
clc
mov
push
xchg
sub
lods
push
adc
pop
jmp
fnstsw
xlat
sbb
cli
cs
ret
adc
or
mov
lea
cmpsb
push
xor
push
jno
inc
fadds
out
adc
rorb
cmp
adc
sbb
or
cmp
clc
clc
add
pop
scas
add
addb
dec
pushf
js
jg
rorb
dec
in
jl
sbb
roll
fistpl
mov
pop
out
pushf
dec
in
out
xchg
xor
insb
mov
jbe
js
sub
inc
pop
decb
movsl
lcall
rep
inc
jmp
mov
outsb
mov
mov
jo
jne
sub
push
cmpsb
jb
outsb
out
pop
sbb
push
push
outsb
into
inc
mov
popa
mov
jl
lahf
inc
adc
js
aaa
mov
in
nop
fcomps
pop
in
jmp
fdivl
nop
push
jmp
fldl
aas
popa
xor
cs
and
pop
xor
sub
pop
xor
xchg
and
repz
movsl
cli
xor
sub
das
mov
outsl
aas
fsubr
lods
mov
sbb
cmp
mov
cmpsb
jbe
stos
mov
push
sbb
pusha
push
fcom
aad
pop
ds
xchg
cltd
xor
push
das
jle
loope
in
mov
repnz
cli
ljmp
aas
cmpsb
dec
cmp
jl
dec
insl
aad
cmc
ret
push
ret
mov
inc
shrb
scas
and
add
xchg
jb
ja,pt
int3
aam
mov
mov
js
adc
sti
mov
or
cld
fs
daa
mov
xlat
test
and
adc
psubsw
sub
xor
dec
stos
stos
addb
ljmp
push
jle
pop
or
mov
iret
cwtl
push
dec
pop
xchg
pusha
stos
nop
mov
dec
repz
or
stos
ret
out
push
aaa
clc
sarl
popf
and
mov
pop
jmp
jno
mov
scas
mov
int3
and
cmp
jno
sbb
sub
xchg
cltd
mov
and
adc
shlb
movsl
xchg
mov
in
xchg
pop
outsb
rcr
orl
mov
inc
movsl
ja
dec
std
mov
test
pop
lret
daa
xlat
xor
sbb
ret
shrb
dec
sbb
fsts
xor
adc
inc
mov
dec
inc
adc
pushf
es
adc
jg
call
sub
test
inc
xor
dec
cmpsb
jb
sti
jns
je
xor
dec
inc
and
divl
mov
lret
or
jge
movsb
gs
lods
daa
jge
icebp
mov
xchg
and
repnz
jg
repnz
out
cmc
mov
mov
mov
loopne
sti
pop
test
sbb
push
popa
sahf
out
popa
cli
cmp
gs
mov
xchg
addr16
xor
test
inc
test
in
fcomps
pushw
mov
test
jb
adc
cmp
dec
cltd
imul
popa
ret
inc
xchg
stos
push
sbb
imull
mov
and
mov
inc
bound
xchg
push
sub
xchg
sti
scas
cs
push
cwtl
shrb
xchg
push
xchg
push
and
cmp
rclb
inc
jne
sbb
cmp
cltd
fldl
es
rorl
stc
or
and
mov
cmp
mov
daa
mov
out
or
loope
cmpsb
mov
lea
mov
mov
mov
add
jp
mov
aaa
sbb
rorw
jae
sbbb
jl
repnz
fwait
out
mov
and
enter
pop
dec
cmc
or
fdivr
cmc
push
adcl
ret
adcb
pop
insb
rorl
dec
xor
imul
sub
loop
pop
sbb
push
mov
arpl
popa
rolb
inc
repnz
pop
push
xchg
xchg
and
sti
popa
test
jo
stos
test
adc
jno
pop
test
xor
movsl
add
stc
loop
push
popf
popf
sbb
jnp
cmp
push
jo
icebp
ljmp
arpl
jno
mov
jae
mov
test
jle
adc
sarw
in
dec
mov
cmp
inc
scas
inc
mov
pop
xchg
popf
ret
mov
cmp
push
repnz
fsubrp
xor
stos
stc
lret
aas
popf
jp
dec
jl
xchg
outsb
xor
fdivrs
mov
dec
popa
mov
lea
xchg
mov
icebp
cmp
cmpsl
or
andl
jl
push
or
cli
lcall
in
xchg
aam
add
mov
fs
in
mov
adc
imul
and
rorb
mov
sbb
cs
inc
les
pop
jbe
ds
jne
or
inc
push
dec
in
and
pop
xor
and
jae
leave
shl
sahf
inc
ret
jl
adc
mov
lds
mov
jno
and
mov
pushf
and
mov
hlt
jmp
out
jns
add
cli
and
outsl
and
xor
shll
mov
mov
addl
lods
inc
add
aas
jl
int
jl
push
jecxz
mov
mov
xchg
andl
dec
push
aaa
lret
cltd
fs
cli
jne
gs
push
jo
mov
mov
or
insb
int
and
push
push
hlt
popf
cmc
scas
shrb
out
xor
cld
mov
xchg
xor
and
cli
cmc
shrl
pop
ret
cmp
mov
adc
insb
jecxz
enter
xchg
or
adc
notl
out
rcrb
bound
aaa
jmp
in
jecxz
adc
pop
sbb
or
ja
mov
or
and
mov
dec
pop
inc
mov
or
lods
inc
mov
xchg
cltd
mov
pusha
test
repz
mov
jo
push
test
out
jp
and
and
mov
mov
sub
cs
stos
fadds
addr16
push
jo
in
insl
xchg
dec
pop
xchg
jl
out
push
inc
and
push
movsb
inc
adc
mov
jp
scas
push
sbb
or
scas
sahf
add
roll
ljmp
push
mov
or
cmp
xchg
lods
push
adc
scas
stos
scas
jp
xchg
sub
jge
mov
scas
repz
ljmp
mov
movsl
rolb
movsl
jns
push
loopne
pop
insl
test
jnp
imul
incb
xorl
pop
nop
lret
pusha
out
xchg
sub
pop
xchg
xor
xor
adc
push
out
mov
je
xchg
in
and
push
inc
pop
repz
jne
jo
sar
sti
movsb
mov
jmp
mov
scas
loopne
mov
dec
or
ret
movl
repz
aaa
mov
adc
shr
lods
inc
or
shlb
sbb
and
pusha
push
out
jno
jb
mov
xlat
test
sub
test
filds
dec
mov
sbb
stos
lods
iret
nop
cltd
mov
inc
xor
inc
mov
and
jno
mov
sbb
mov
jno
dec
pop
test
and
ljmp
in
adc
cmc
xchg
ret
ret
sbb
negl
add
popa
xor
int3
pop
mov
sbb
call
mov
test
in
adcl
stos
insb
js
adc
pop
movsb
insb
hlt
pop
stos
xchg
add
xchg
insb
xchg
lret
mov
rcrl
xchg
pop
inc
call
out
mov
int
clc
ret
test
fcompl
mov
pop
pusha
mov
icebp
fdivl
inc
jle
sub
shlb
pop
inc
icebp
stos
pop
mov
ret
repnz
enter
dec
push
ret
mov
iret
jge
lret
adc
mov
nop
dec
pop
inc
dec
repnz
les
fidivs
and
sbb
or
xchg
out
imul
decl
out
in
in
xor
lods
andb
mov
mov
push
mov
pop
out
leave
imul
lea
adc
dec
mov
xchg
mov
mov
test
xchg
mov
adc
test
stc
jae
sub
mov
pop
xchg
loop
inc
int3
fwait
cmp
jge
aad
sbb
out
test
pop
test
push
test
das
daa
pop
je
mov
sbb
jmp
inc
sub
nop
orl
adc
adc
adc
adc
call
loope
adc
inc
pop
fcoml
loop
mov
test
gs
adcb
inc
sub
imul
cmp
cmpsl
or
cli
clc
fistpll
fdivl
and
mov
jo
cld
inc
jmp
test
sub
dec
cmpb
cs
into
cwtl
arpl
iret
pop
cmpsb
sbb
xchg
xchg
lds
xor
or
icebp
iret
in
mov
in
mov
out
ror
fisubrs
jl
adc
push
and
inc
cwtl
mov
out
repz
inc
rorb
leave
cmp
push
inc
xlat
mov
fisttpll
mov
dec
jns
popf
pop
stc
leave
imul
ror
aas
mov
jp
xor
outsb
mov
fists
jle
dec
add
jp,pn
pop
jae
dec
lods
repnz
pushf
mov
shll
in
mov
pop
xchg
es
cmpsb
aas
rclb
mov
hlt
lods
mov
loop
xor
cmpsb
xor
stc
adc
testb
and
cli
push
sbb
sbbl
call
jne
repnz
out
sub
mov
movsl
test
lcall
mov
test
and
mov
lcall
leave
loop
hlt
into
sub
pop
repz
popf
push
pop
jno
fwait
lods
enter
cli
jmp
push
out
mov
enter
and
dec
or
lds
insb
ss
loope
repnz
test
stc
push
push
xor
inc
cmp
stc
dec
insb
push
pop
test
insb
push
xchg
adc
sub
jmp
cmp
popf
aaa
mov
fcmovnb
and
pop
dec
pop
inc
lret
addl
mov
jle
bound
mov
jns
dec
push
fisubs
enter
mov
jb
fwait
stc
pop
inc
clc
lock
cli
stc
popa
cmpsl
pop
jnp
call
cmp
sub
icebp
sti
add
pop
xor
jb
fbld
jle
mov
inc
pop
std
ror
in
rcl
ret
xchg
xor
hlt
mov
jmp
adc
ss
fstpl
jno
sub
js
jno
and
fs
cmp
jbe
fs
clc
mov
cmpsl
adc
xor
mov
mov
mov
mov
fs
test
std
ss
frstor
popf
xchg
ss
mov
in
xor
xchg
aaa
fldcw
jl
xor
out
and
sub
pop
in
in
cmp
xchg
insb
outsl
aad
xor
or
aad
stc
imul
lods
gs
hlt
push
repnz
mov
pop
xor
or
xor
and
loop
mov
popf
mov
xor
in
adc
push
mov
adc
mov
push
rolb
dec
test
shl
out
jne
and
lret
jb
call
out
dec
repnz
push
sbb
add
daa
sub
pop
sbb
fucomip
addr16
xor
sub
dec
jle
sub
shld
addr16
stos
push
js
test
push
cmp
cmp
cmp
es
pop
jge
lods
sub
push
cmpsl
sbb
aaa
push
pop
pop
jl
jb
cmpsl
les
mov
mov
cmc
xchg
pop
lret
dec
adc
fcompl
mov
ljmp
xor
fiadds
aam
icebp
out
mov
repnz
jbe
shlb
aam
add
push
jg
inc
adc
fwait
enter
pop
test
ja
loope
push
iret
jns
sbb
cmp
fadds
push
addr16
cltd
mov
cmp
in
mov
mov
lods
pop
call
sahf
std
mov
rcrl
xchg
push
or
xchg
aam
inc
jecxz
cmp
xchg
mov
adc
repz
lea
jecxz
test
popa
xor
push
mov
dec
pop
jbe
add
enter
xor
jg
xor
popa
pop
aad
rcrb
pop
sub
cmovp
iret
push
jo
and
mov
inc
sub
test
cmp
icebp
sub
fucompp
lock
in
stos
xlat
aaa
cwtl
insb
jp
clc
nop
xor
fldt
inc
in
pop
scas
gs
insl
fucomi
sbb
lret
push
xchg
bound
or
lds
push
and
ds
xor
jg
lret
stos
pop
gs
inc
push
jno
mov
jmp
jmp
push
mov
push
inc
outsl
sub
push
xor
jmp
ljmp
cmp
test
or
out
int
add
repnz
dec
cmpsl
inc
sti
bound
inc
orl
push
fld
mov
lahf
lahf
cmp
enter
hlt
call
mov
add
sbb
fdivrs
dec
sub
loop
mul
inc
in
das
rcl
test
shll
bound
adc
xor
mov
mov
mov
mov
fs
xorl
icebp
lock
into
fsub
sahf
and
and
xchg
rcrl
adc
fisubl
cmp
dec
out
frstor
xor
add
jl
lds
pop
lea
cmpsb
jecxz
add
pop
js
cmp
sub
add
or
xchg
mov
outsl
push
fs
imull
push
jmp
andl
loopne
xor
and
mov
xchg
arpl
or
ret
xchg
negb
stos
pop
adc
push
mov
inc
sarb
in
andb
xchg
outsl
mov
push
shll
add
sub
xchg
imul
push
xchg
pop
mov
add
mov
xor
push
sbb
inc
mov
popf
pop
pop
rcrl
push
sbb
cmp
mov
imul
lret
push
mov
push
mov
sbb
pushf
outsl
negl
push
mov
cld
pop
push
pop
mov
pop
insb
stos
sbb
push
adc
in
jg
aam
dec
xor
out
cmpl
cs
adc
cmc
not
test
add
lock
push
shll
mov
inc
bound
aad
fidivl
and
xor
cmp
stc
lds
jmp
and
push
dec
xchg
shr
push
mov
fcoml
stc
insl
iret
fcoms
cwtl
push
dec
inc
sub
mov
imulb
mov
stos
pop
idiv
les
nop
xchg
xchg
fsts
adc
iret
push
mov
mov
adc
sbb
stos
add
adc
das
pop
aaa
sti
es
ds
adc
sub
mov
jmp
in
inc
movsl
scas
and
or
and
cmc
dec
ljmp
jno
cltd
jp
int3
xor
jno
sub
mov
pop
adc
ficoms
cmp
sbb
fbstp
mov
into
adc
push
popa
mov
mov
pop
mov
in
aam
imul
mov
mov
flds
into
fistpll
inc
cmp
xor
test
xchg
fcmovne
cmpsl
icebp
es
push
add
push
jae
cmpsb
shlb
mov
sub
push
hlt
inc
jae
repz
pop
cmc
mov
dec
fcoms
fiaddl
sahf
adc
pusha
outsl
adc
jp
out
jg
mov
aas
sti
insl
stc
enter
in
mov
je
fstp
pop
lcall
iret
lock
jne
pop
inc
mov
popf
mov
jecxz
leave
fiaddl
lcall
xor
xchg
xchg
in
stc
ja
jle
dec
push
add
int
dec
fiaddl
rolb
xchg
fistpl
sub
pushf
and
cmc
sbb
repnz
cmp
pop
clc
clc
loopne
add
movsb
and
aaa
iret
or
jno
icebp
or
inc
adcb
mov
nop
jne
and
pop
sbb
std
sbb
ljmp
mov
popa
xorl
mov
scas
fidivs
and
xchg
lcall
push
jbe
pop
add
sub
xchg
jo
aam
pusha
cmp
mov
nop
xor
movsl
arpl
fimuls
adc
andb
jle
pop
xor
pop
aas
adc
add
mov
sub
mov
push
and
jl
add
movsb
xchg
and
xchg
rclb
es
ja
xchg
push
jns
mov
lret
fs
aaa
sbb
add
cmpsl
icebp
mov
sbb
dec
and
xchg
mov
add
mov
mov
loopne
inc
xchg
test
nop
repz
fistpl
xor
jp
mov
lcall
clc
cltd
aam
adc
mov
insb
sbb
pop
cld
cmp
mov
data16
test
jge
movsb
sbb
push
daa
and
mov
or
mov
ret
add
inc
stos
cmc
xchg
out
bound
adc
cmp
sbb
inc
sbb
js
mov
xor
jecxz
faddp
cs
into
inc
xchg
jns
push
scas
jge
std
jne
or
out
adc
sub
mov
ror
inc
adc
cmp
jnp
jnp
xor
jl
push
outsl
jbe
dec
dec
push
inc
out
in
or
or
cltd
mov
ja
pop
stos
ljmp
imul
cmp
jmp
sub
test
mov
inc
jmp
imul
subl
cmp
insb
sub
ret
je
cmp
push
loop
cmp
decb
mov
pop
shr
inc
add
xchg
jp
dec
pop
imul
cli
push
stc
push
movsl
mov
sub
mov
inc
out
mov
loopne
inc
inc
stc
loopne
mov
dec
cltd
and
add
or
loopne
in
lcall
addb
or
sti
leave
out
in
and
jo
sub
jl
cmc
pop
add
or
pusha
aam
add
ret
mov
lcall
jno
les
pop
ficomps
sub
pop
clc
mov
loope
sbb
mov
xchg
imul
bound
xor
sbb
inc
mov
ss
dec
cwtl
ds
and
ljmp
into
cmpsl
lret
ljmp
hlt
mov
sar
pop
cmc
in
cmpsl
fdivl
mov
movsl
fstpt
mov
mov
gs
insb
inc
lods
into
mov
pop
std
add
or
lock
ds
xor
iret
lods
pop
fstpl
cs
in
mov
clc
sbb
test
dec
loop
outsb
mov
mov
jns
imul
inc
sbb
mov
out
rorl
into
js
push
adc
rclb
xlat
rorl
mov
sbb
in
cmp
mov
pop
repz
out
sbb
cs
cli
lcall
cmpsb
or
je
fsubl
push
and
dec
mov
sub
stc
ret
fsub
jb
data16
sahf
push
pop
ret
ret
mov
push
pop
jmp
cmp
mov
mov
pop
lock
sbb
mov
stos
rolb
arpl
loope
xchg
out
arpl
lods
jb
in
sub
mov
sbb
xchg
in
test
je
jnp
pop
ja
jae
adc
nop
add
pop
aad
jle
orl
mov
cmp
adc
or
mov
andb
pop
aaa
push
pop
cmp
cmc
add
int3
mov
xor
mov
cmpsb
imul
leave
add
lods
dec
call
sbb
fsubr
sub
jecxz
daa
idivl
mov
mov
pop
dec
lods
sbb
xchg
or
cmp
ror
ret
aaa
mov
out
mov
mov
dec
ss
jecxz
sub
fbld
hlt
inc
jp
arpl
mov
jae
int
subb
ljmp
imul
cmc
xor
daa
push
scas
pushf
sti
call
jno
sub
cmp
mov
addl
ret
or
inc
out
popf
fwait
mov
inc
adc
and
mov
shll
or
jb
cwtl
xchg
adc
inc
xor
call
inc
or
xor
leave
push
fmull
push
add
mov
cmc
andb
sbb
jmp
fcoml
call
pop
movsl
cld
lods
mov
inc
jmp
arpl
xor
mov
fwait
mov
fisttps
pop
jle
je
adc
dec
stos
outsb
mov
movsb
pushf
bound
jl
mov
ss
mov
add
push
push
and
mov
mov
pop
jnp
fistpl
sbb
dec
iret
outsl
dec
sub
sub
sbb
xchg
out
xor
stc
inc
leave
adc
pop
sbb
fmull
sub
or
fistl
sbb
sbb
dec
pop
ficoms
jecxz
dec
lahf
adc
dec
mov
and
repnz
fdivr
xor
mov
fwait
adc
pushl
ret
fisttps
dec
pop
mov
das
fidivs
imul
inc
je
imul
sub
jg
fisubs
stos
shr
subl
pop
adc
pusha
ss
xor
shll
jns
cwtl
xor
and
int3
jecxz
dec
mov
adc
jnp
adc
andl
jne
aas
iret
sub
sub
mov
ds
xorb
mov
mov
mov
sbb
lret
cltd
repnz
push
xchg
test
insl
daa
push
insl
xlat
xchg
sub
pop
add
adc
jmp
add
mov
push
sbb
sub
add
fs
add
bound
fcoml
std
cmovae
clc
pop
jge
sub
pusha
inc
mov
aaa
int3
xor
loopne
sarb
repnz
je
pop
push
out
in
cmp
or
call
mov
mov
xorl
or
inc
add
in
stos
add
cmpsb
mov
jmp
mov
movsb
push
lock
or
mov
les
sbb
xor
jmp
mov
push
movsb
ja
add
and
cmpsb
push
ljmp
loopne
or
out
push
and
shlb
ss
jae
out
inc
push
lahf
fiaddl
fcmovnbe
cmp
popf
dec
push
js
test
loopne
pop
sti
es
cmpsb
fstp
ror
das
fcmovbe
fmull
je
maxps
int3
pop
add
shlb
jno
xor
pop
and
es
sahf
stos
out
push
inc
and
mov
dec
in
cmpsl
pushf
enter
mov
dec
cmpsl
mov
mov
mov
es
leave
adcl
outsl
test
pop
mov
les
insb
lock
divb
sub
push
sbb
sti
push
xor
dec
mov
xchg
je
xchg
inc
aam
lock
mov
lds
lds
xor
sbb
inc
pop
pop
pop
insb
dec
sbbb
mov
sub
or
insb
adc
jle
push
sbb
push
cli
inc
fcoms
pop
adc
aad
in
add
pop
mov
in
into
pop
jle
gs
decl
jbe
pop
test
pop
mov
mov
test
add
jo
loopne
rolb
das
sti
inc
push
or
mov
cmp
test
inc
in
mulps
cmpsb
test
mov
sbb
jbe
jno
sub
mov
inc
repnz
je
mov
in
sbb
daa
sbb
sub
enter
mov
push
mov
lods
popa
mov
adc
in
les
and
hlt
lock
dec
das
lret
sarb
jp
pop
incl
jmp
mov
xor
xor
pop
xor
jle
sub
adc
outsb
add
std
push
call
stos
loop
adc
nop
or
mov
push
pop
jle
insb
push
hlt
mov
lret
adc
aas
adc
and
lret
jp
dec
lods
cmp
mov
add
push
jnp
lcall
mov
push
lea
adc
lock
dec
push
shl
sbb
ret
xor
gs
mov
test
dec
fwait
mov
add
insb
mov
mov
adc
test
mov
loope
xchg
imul
addr16
mov
mov
mov
or
dec
jne
push
mov
or
enter
repnz
cwtl
icebp
cwtl
xchg
aaa
inc
scas
jno
push
ljmp
jl
mov
jg
imulb
mov
or
aaa
popf
xor
aaa
sbb
sbb
pop
inc
cmp
sti
jmp
outsl
inc
ret
cmpsb
or
out
pop
add
or
push
cmc
fadd
xchg
cmpsl
push
lods
fs
xchg
mov
and
push
cmp
cmpsl
xor
add
dec
insb
cmpsl
mov
mov
fists
mov
pop
mov
jecxz
test
adc
xchg
ret
cmp
stos
or
sbb
dec
lods
jbe
clc
mov
pop
hlt
jge
test
mov
jecxz
lods
inc
or
push
loope
add
dec
push
out
pop
pop
or
es
jo
cmpsl
icebp
ss
aas
jns
push
cs
xor
imul
pushf
pop
or
sbb
cs
mov
test
jns
adc
lea
add
dec
mov
sarl
sub
out
sahf
jae
mov
xchg
gs
mov
mov
gs
adc
mov
pop
xor
push
in
repz
inc
mov
in
xlat
cwtl
fninit
pop
cmp
aas
push
js
cld
aas
and
cmp
inc
lret
sbb
jecxz
adc
mov
cmc
and
outsl
push
mov
js
and
data16
jle
enter
in
cs
popa
lea
insl
cltd
jp
icebp
jmp
mov
xlat
pop
stc
or
dec
aad
jmp
and
jae
cmp
jecxz
fbld
adc
mov
aam
pop
sub
adc
test
push
cmp
cmpsl
mov
sub
sbb
shrl
mov
stos
dec
pop
mov
xor
rcrl
inc
arpl
dec
mov
mov
pushf
adc
xchg
push
xchg
bnd
xor
sbb
dec
xchg
add
sarb
lret
data16
icebp
inc
outsl
or
inc
mov
test
xchg
js
pop
pop
ret
lds
lods
movsl
dec
pop
movsb
pop
enter
fstl
jnp
loope
orb
fdivrs
or
das
pop
push
test
aad
mov
arpl
into
push
push
or
int3
and
xor
xchg
adc
jns
popa
pop
movsb
xchg
and
rol
dec
imul
lods
mov
dec
mov
ret
mov
sub
shlb
inc
js
shlb
rorl
addr16
sbb
cmpsl
mov
jl
pop
lret
inc
inc
fwait
push
outsl
sbb
int
and
les
and
push
sbb
or
sub
adc
lahf
fs
cmpsb
xor
orb
cltd
icebp
dec
dec
sbb
cmp
mov
pop
fnsave
mov
and
lahf
arpl
cmpl
mov
xchg
adc
icebp
les
xor
cmp
fs
mov
insl
sub
jle
jo
lcall
pop
mov
test
xchg
out
sub
pop
xor
int3
adc
push
xchg
dec
subb
outsl
ds
es
testl
rcrb
push
lret
ss
sti
iret
mov
mov
mov
mov
pop
mov
pushf
cmpsb
inc
bound
daa
movsb
popa
or
adc
jns
dec
xchg
and
lret
sub
add
fs
dec
pop
insb
jle
xor
int
xchg
jnp
push
mov
push
or
dec
inc
and
cmp
pop
or
pop
es
fiadds
fmull
sbb
xor
data16
insb
mov
sub
mov
cwtl
shrl
call
ja
xchg
xchg
jmp
loop
add
jb
xor
cmp
sub
mov
xor
test
mov
shr
mov
sbbl
add
sub
sbb
jo
in
mov
mov
addr16
out
fbld
and
fstpt
push
pop
popf
setno
push
mov
in
sbb
cs
leave
lret
inc
into
mov
push
dec
mov
test
inc
jno
dec
nop
loop
xchg
jl
pop
mov
mov
adc
out
imul
dec
jae
out
adcb
inc
push
lcall
enter
sub
adc
sbb
das
popf
pop
add
cmp
jo
add
imul
sbbl
pop
les
pusha
inc
lock
push
jp
fidivs
dec
push
push
and
or
mov
out
test
mov
sub
ret
adc
mov
pushw
xor
loopne
js
inc
mov
nop
pop
mov
sbb
sti
shlb
fiaddl
aam
xchg
sub
jne
fcmovnbe
push
inc
cli
sbb
scas
idiv
arpl
pop
daa
xor
adc
inc
lahf
shll
xbegin
adc
es
popf
in
push
flds
std
dec
je
sbb
js
rclb
push
scas
les
out
pop
test
sbb
aaa
sub
xor
mov
pop
testb
xor
outsb
xchg
mov
push
icebp
in
daa
fwait
and
jl
orb
push
arpl
dec
clc
or
mov
dec
repz
dec
jecxz
mov
jmp
adc
sub
mov
adc
xchg
and
mov
std
push
in
imul
xlat
ljmp
sbb
jge
sbb
std
inc
hlt
out
push
leave
pusha
lea
sub
sbb
pop
mov
push
scas
jno
shll
ljmp
imul
out
in
sbb
mov
sahf
cmp
or
sarb
cmp
test
nop
loope
cld
pop
xchg
pop
cmp
nop
sub
fdivrs
in
and
ret
popa
sbb
imul
mov
sub
mov
fldt
idivb
insl
repnz
push
sbb
enter
adc
dec
test
int
pop
int3
pusha
jb
cwtl
jmp
shll
and
mov
pop
pop
lods
pop
stos
jnp
hlt
leave
mov
push
mov
jo
sbb
push
les
ret
fildl
sub
ret
mov
sar
push
push
lcall
cmp
mov
pop
test
mov
dec
imul
xor
add
fsub
xchg
xor
arpl
ret
stos
jge
and
jno
cmp
addr16
ret
fs
mov
adc
das
inc
leave
shlb
sarb
in
ficomps
rcll
sub
pop
and
xor
mov
xor
sbb
jmp
sub
loop
loope
in
lea
mov
mov
mov
into
inc
sub
aad
mov
ficoml
xlat
mov
mov
jbe
ficoms
inc
in
ljmp
mov
in
movsl
stos
call
push
cld
ss
add
je
push
pop
cld
mulb
call
adc
test
xor
pusha
lret
cmpsl
jmp
fisubl
push
sub
cmp
out
pop
out
pop
imul
dec
aad
iret
mov
aad
bound
mov
pop
cmp
push
pop
lret
jno
repnz
sub
sbb
inc
mov
movsb
lret
inc
dec
ljmp
js
jbe
mov
fiadds
or
nop
lock
fldl
push
cmpl
aam
add
nop
out
pusha
fcom
mov
cmp
outsl
xchg
xchg
ljmp
test
sub
cmp
xchg
jl
fsubr
cmc
in
dec
loope
je
or
mov
push
andl
test
repnz
test
ret
push
scas
cmp
dec
and
enter
sti
push
lahf
scas
mov
push
imull
push
xor
dec
or
dec
add
stc
pop
jns
dec
cmp
jp
test
enter
aad
lahf
out
jno
arpl
mov
xor
aas
jne
sti
mov
sbb
cmc
outsw
cmp
sarb
dec
inc
pop
sbb
mov
push
mov
aaa
pop
paddb
add
repz
inc
push
rorb
je
mov
orb
mov
sub
cltd
outsb
and
idivb
inc
in
roll
nop
pop
ret
dec
enter
push
or
add
sbb
out
icebp
ds
out
mov
pop
push
push
jns
cmp
mov
sbb
push
fidivl
adc
cmp
and
mov
push
decl
xor
and
lods
sti
mov
sar
jmp
cmp
add
and
dec
pop
stc
insb
loope
clc
mov
dec
mov
lcall
inc
jo
hlt
in
mov
or
jno
push
push
popa
fs
clc
dec
leave
dec
ja
test
js
je
mov
testl
int3
mov
sbb
fwait
idivl
dec
cmp
jge
pop
cmpsb
xchg
pop
ficoms
cmp
stos
pop
rclb
lret
sbb
cmpsl
lds
inc
ja
jle
mov
push
testl
adc
test
scas
sarb
xchg
pop
xchg
call
mov
inc
cltd
std
push
leave
imul
add
loop
mov
or
push
nop
jp
push
fcmovu
movsl
sub
pop
js
lea
jl
xlat
push
cmpsb
test
mov
cld
adc
testl
or
xor
nop
gs
nop
repnz
out
xchg
cmc
les
aas
mov
cmc
dec
pop
repz
mov
jmp
bound
pop
dec
and
add
insb
pop
add
mov
popa
stos
mov
push
jns
push
pop
inc
mov
jno
push
adc
fstl
addb
jne
mov
push
hlt
adc
push
jno
arpl
ss
out
inc
sbb
popa
mov
dec
test
push
adc
pop
daa
daa
leave
add
jne
cmp
lods
mov
sub
stos
cmp
inc
cld
mov
mov
mov
jge
mov
and
pop
arpl
pop
dec
repz
or
ficomps
inc
pop
cmp
push
mov
xor
xor
xor
lods
xor
iret
and
xor
cmpsb
mov
sub
push
sub
add
ret
pop
es
in
inc
inc
repnz
dec
dec
popa
enter
inc
hlt
cmp
add
sarb
push
add
test
rcll
xlat
nop
inc
ret
push
mov
mov
xchg
or
rcrl
faddp
xchg
xchg
ficompl
addb
add
sub
inc
gs
pop
cmp
mov
fildll
jg
dec
mov
pushf
into
pop
pop
and
mov
sti
outsl
testb
or
hlt
aas
pop
sbb
xor
out
ret
fldt
popf
pop
or
daa
bound
ja
mov
ficompl
outsb
jne
push
hlt
rolb
lret
push
div
lret
jg
fs
cmp
leave
lahf
xchg
xchg
bound
mov
in
dec
fdivr
mov
xchg
mov
aas
hlt
sar
dec
leave
jne
mov
mov
xor
insb
fistps
xlat
aaa
aad
mov
mov
mov
cltd
jno
mov
dec
int
sub
je
sbb
push
loop
loop
scas
stc
mov
sbb
inc
insb
sub
nop
mov
push
lcall
frstor
jae
dec
call
decl
jbe
iret
decl
out
arpl
std
mov
jns
lock
lock
data16
inc
movsl
and
cmp
mov
lds
dec
stc
hlt
add
rolb
pusha
jl
mov
add
in
mov
call
sbb
or
jecxz
stos
push
mov
daa
sbb
bound
mov
add
cmpl
call
outsl
jle
call
and
pop
stos
adc
nop
fwait
mov
mov
test
pop
lock
add
jle
scas
fs
out
aas
xor
repz
pop
lods
lret
call
adc
js
jne
pop
popa
aad
gs
in
pop
adc
testl
test
jge
aas
movsb
cmpsl
add
out
subb
mov
cmp
push
insb
aaa
jne
cmp
aaa
sbb
loop
add
addr16
and
pop
xchg
loopne
jecxz
mov
mov
push
or
mov
cmp
incb
xor
pusha
enter
outsl
daa
call
les
or
jb
mov
lret
cltd
outsl
daa
js
addr16
pop
call
mov
xor
jbe
jno
xchg
jne
outsl
fadds
sahf
xor
adc
mov
int3
clc
loope
shrb
and
fucomip
out
or
lods
and
add
hlt
push
jp
shl
je
out
jnp
sub
and
mov
rclb
dec
dec
ficoml
cmp
lods
fwait
sub
loopne
push
sbb
and
pop
push
pop
and
movsb
xchg
arpl
pusha
aaa
loop
mov
insl
mov
stos
pushf
pop
enter
dec
add
dec
pop
fdivr
rcrl
scas
jnp
enter
inc
and
xchg
iret
insl
mov
clc
mov
stos
stos
out
push
mov
pop
sbb
shll
sarl
adc
mov
lret
pop
or
mov
les
mov
aas
bound
std
aam
fmull
dec
push
jne
fadd
xor
cli
mov
adc
or
push
sarl
add
outsb
call
mov
pop
add
das
mov
ror
cmpsb
xchg
mov
sub
int3
je,pt
add
jb
cmpsb
pop
fcmovnbe
sbb
aas
cmpb
shll
cli
mov
cmc
and
xchg
adc
jo
imul
jl
xchg
cmp
pop
scas
xchg
xchg
sti
int3
outsl
call
jp
mov
sub
cli
pop
dec
jns
daa
loopne
cmp
sbb
sub
inc
cltd
testl
xchg
cmp
pop
or
aaa
pop
mov
adc
daa
mov
into
lds
out
aam
pop
jp
pop
aaa
xchg
cwtl
add
addl
fcmovb
pop
call
lret
jge
push
jecxz
fdiv
mov
int3
push
add
cld
int3
ror
adc
scas
inc
mov
cmpsb
test
popa
inc
shlb
xor
push
aas
jg
aam
push
pop
and
xchg
adc
pop
lock
ja
stc
jo
mov
or
cwtl
sahf
stos
or
mov
and
push
mov
rorl
orl
jg
xchg
jo
iret
fistpl
xor
xchg
mulb
jno
test
cmp
test
pushf
test
ret
adc
ljmp
xchg
cld
push
sub
pop
orb
mov
cmpsb
lods
lret
cmp
je
cmp
popa
fdecstp
rcl
in
cmpsb
inc
repz
shlb
cld
add
aaa
sbb
test
xlat
pop
in
jmp
mov
mov
test
pushf
adc
and
test
ret
push
arpl
arpl
out
or
inc
push
inc
aam
mov
hlt
cmpl
test
iret
imul
loop
adc
sarl
leave
sahf
xchg
std
mov
lret
clc
or
adc
cs
dec
sub
sub
mov
inc
inc
or
cmpsl
aaa
adc
dec
xchg
enter
cmp
scas
cmp
jp
in
xchg
fcmovnbe
xlat
nop
in
mov
add
int3
imul
add
dec
cmp
lods
in
xchg
cmp
mov
inc
push
fisubrl
pop
push
notb
and
inc
jp
int
cwtl
mov
insl
notl
mov
dec
mov
mov
int3
jb
mov
lret
dec
hlt
leave
int3
or
push
mov
mov
lcall
lea
adc
fmuls
std
mov
rclb
pop
and
shlb
rolb
fwait
mov
adc
adc
inc
shrl
rolb
jg
enter
nop
test
hlt
mov
lret
fs
dec
dec
mov
aaa
roll
mov
dec
lock
in
out
fsubl
add
pop
mov
mov
mov
pop
xchg
mov
cmp
mov
sahf
fidivl
push
mov
lods
jg
pop
dec
addl
xchg
fptan
cmp
mov
sarb
jg
inc
in
out
mov
mov
pop
jno
cld
in
outsl
or
dec
sti
adc
in
inc
or
movsl
push
xchg
enter
aam
insb
cmp
fdivs
lret
jmp
inc
adc
testb
and
add
shl
std
lahf
or
pop
cmp
and
or
test
fisubl
sbb
push
sbb
inc
sub
pop
push
adc
or
fs
bound
imul
dec
mov
jnp
imul
push
movsb
jbe
mov
je
xchg
fwait
in
jbe
in
negb
push
jecxz
shl
jecxz
dec
ljmp
mov
in
xor
mov
lods
mov
lods
ret
mov
pop
fs
sub
dec
push
inc
xlat
or
cmpl
sbbl
and
or
push
adc
jo
push
arpl
das
push
out
or
ss
aaa
sbb
jns
fidivs
rep
aad
out
inc
mov
push
imul
sbb
cld
arpl
cmp
dec
test
mov
lea
mov
and
jle
add
xorl
mov
pop
and
pop
mov
jg
xor
add
inc
cltd
push
sarb
add
xchg
inc
clc
cmp
sub
add
push
in
mov
add
cli
mov
push
daa
adc
movsb
and
mov
inc
call
jl
fwait
xchg
pop
xchg
std
rorb
dec
or
cmpl
xor
test
add
inc
vcvtpd2psy
cmpsl
sub
and
in
enter
in
mov
imul
sub
dec
sbb
mov
inc
lods
xor
int
xor
inc
xchg
les
mov
daa
pusha
and
inc
imull
aas
mov
ss
xor
imul
scas
xor
insb
add
or
pop
sub
dec
mov
cmp
sub
data16
ljmp
mov
or
add
mov
mov
mov
or
and
pop
and
mov
adc
mov
in
inc
sbb
sbb
pushf
dec
out
jb
subb
mov
mov
mov
cmpsl
je
dec
sbbb
adc
scas
call
xchg
pop
stc
sub
loop
mov
pop
sbb
ss
call
iret
push
and
xor
and
stos
adc
sbb
lret
dec
int
mov
inc
daa
pop
es
shll
adc
xchg
scas
adc
lods
movsb
and
mov
xor
imul
aam
dec
inc
adc
pop
in
sahf
add
mov
inc
cmp
pop
mov
lret
cmpsl
shl
scas
imul
mov
adc
cmp
rolb
push
pop
imul
mov
lret
stc
dec
push
bound
mov
fsubrs
cli
fisubrl
sbb
repz
mov
add
sbb
imul
das
cmp
dec
mov
sub
dec
flds
xchg
ss
hlt
call
jno
mov
test
inc
addr16
sbb
flds
hlt
push
fstpt
and
add
test
es
movsl
insb
jge
dec
rcpps
pop
fwait
repnz
out
mov
push
sti
sub
pop
lea
lods
cmc
sbb
cltd
or
xor
and
decl
pop
fdiv
jle
pushf
adc
inc
push
sahf
clc
xlat
sbb
icebp
imul
pop
push
inc
add
sbb
cli
mov
popa
in
sti
xor
mov
jns
loop
or
push
nop
add
cmc
test
sahf
and
mov
add
ret
loope
xor
or
sub
or
aam
jge
jbe
mov
lock
stos
loopne
pop
inc
mov
adc
imul
dec
dec
in
push
out
jne
xchg
add
les
fimuls
sub
sub
cmc
jbe
test
pop
cmpsb
pusha
std
add
stc
mov
addr16
inc
or
fldt
inc
and
shrb
sbb
jg
lret
pop
sahf
js
imul
out
sub
sub
push
xchg
inc
lods
stos
mov
push
sbb
icebp
or
lods
sbb
mov
shl
push
pop
cmpl
mov
cmp
movntps
pop
and
push
add
mov
or
shrl
aas
dec
pop
inc
cli
movsb
outsb
bound
out
mov
mov
xchg
jb
xchg
mov
ret
lods
movb
add
ljmp
fldenv
arpl
and
stc
lock
mov
push
movsl
lahf
inc
pushf
cld
or
daa
or
inc
loop
xchg
subb
inc
shrb
imul
ja
ss
mov
inc
dec
push
xchg
add
and
loope
sbbb
mov
outsl
mov
lahf
fwait
xchg
lea
hlt
inc
mov
sub
rcll
mov
scas
sahf
mov
insb
add
push
adcb
push
add
adc
mov
cld
xor
lahf
mov
or
rol
lock
imul
push
sbb
sub
mov
jecxz
in
sti
imul
loopne
mov
mov
mov
adc
fs
inc
sahf
sbb
test
pop
fisubrs
mov
xor
sbb
or
fcom
pusha
ljmp
mov
jnp
stc
das
adc
inc
pop
jg
adc
int3
int
adc
je
mov
or
xchg
xor
lods
movsl
push
sti
xchg
iret
orb
icebp
pushf
pop
popa
enter
mov
push
pop
xchg
faddl
popa
pop
add
ss
sarb
cmpsl
sbb
negb
inc
fnstcw
std
and
xor
aam
adc
mov
and
and
sti
outsl
out
jmp
cmp
lds
adc
movsl
fcompl
sub
jne
pop
sub
mov
push
or
add
arpl
fmul
fucomip
dec
outsl
push
fistl
test
loope
push
and
jb
dec
adc
xchg
lock
das
ja
inc
sbb
out
outsb
mov
rorl
pop
popa
lahf
ss
mov
lods
in
scas
jb
stc
pop
pop
push
and
adc
aaa
test
push
cmp
sub
sti
sbb
add
or
fmull
sahf
xchg
mov
jo
push
xor
movsb
in
insl
push
mov
ds
loop
dec
pusha
xchg
xchg
inc
fsin
aaa
out
movsl
ja
shlb
jp
movsl
pop
sbb
fs
cmp
enter
xor
mov
ror
or
int3
and
add
es
sub
mov
cmp
adc
mov
je
jo
sbb
je
sub
int
jp
scas
fidivrl
nop
sub
mul
fwait
in
shlb
mov
xchg
sahf
lcall
mov
pop
and
xor
les
mov
cmp
leave
orl
sub
test
shlb
and
fucom
jo
jno
fcompl
mov
adc
jle
add
push
mov
out
jle
pop
pop
shll
pusha
out
xchg
push
mov
sub
xor
xchg
sub
mov
xor
add
dec
gs
inc
jg
mov
xor
mov
xchg
je
and
push
inc
int
ss
imul
adc
dec
mov
lea
xchg
push
xchg
mov
adc
mov
sub
mov
fwait
enter
outsl
cld
jne
xchg
addr16
sbb
sub
aam
xchg
insl
jnp
adc
test
mov
cwtl
xchg
xor
add
pushf
jle
pop
cmp
lods
xchg
or
lret
mov
push
add
cmp
iret
xchg
fwait
mov
jo
inc
stos
sbb
push
inc
adc
pop
mov
ret
stos
out
in
rcr
sub
push
sub
pop
sar
adc
mov
dec
cs
test
xchg
push
mov
and
inc
xchg
popf
dec
iret
inc
inc
pushf
notl
seta
ficoml
jnp
es
jge
scas
movsl
clc
cld
movsb
xchg
repz
cmp
movsb
jne
xorb
jp
adc
push
in
out
mov
stos
loope
jge
cmp
int
int
data16
cmpsb
and
adc
sbb
flds
jne
icebp
lods
push
mov
mov
iret
cltd
sbb
int
test
sbb
dec
shrb
mov
pushf
mov
movsl
sahf
mov
cwtl
addr16
lods
inc
addl
cwtl
adc
fistpl
fwait
xchg
dec
arpl
mov
xchg
sbb
scas
jbe
mov
xchg
jbe
addb
mov
stos
inc
mov
andb
imul
push
ljmp
aam
xchg
mov
adcl
das
pop
mov
add
enter
jge
and
cmp
hlt
push
in
fwait
stc
in
aas
dec
fsubs
rol
push
add
adc
ficoms
ja
add
xlat
push
xor
sub
fisubs
jmp
jo
sub
push
push
xlat
add
or
adc
xchg
mov
in
lock
mov
fisttps
mov
mov
mov
pop
cwtl
sub
mov
or
xchg
cwtl
repz
push
xlat
aas
fwait
movsl
push
les
xor
add
outsl
xchg
int
cmc
fidivs
orl
test
xchg
sbbl
aad
pusha
cmpsb
cmp
loope
cwtl
mov
xchg
mov
jl
jmp
mov
dec
outsb
out
pushf
insl
ds
cmc
add
dec
stos
push
aas
inc
pop
gs
cmp
adc
call
xchg
adc
lret
sbb
sti
les
loope,pt
or
jnp
repz
or
cs
dec
pop
sbb
testb
das
dec
out
add
cltd
int
mov
ret
push
xor
sub
scas
and
push
sub
out
std
xchg
dec
push
aas
daa
pop
mul
cmp
cmp
shll
or
insl
jns
js
enter
pop
scas
ret
lahf
sub
mov
sub
dec
mov
ja
out
lds
sbb
js
mov
xchg
sub
rclb
jl,pt
sub
sbb
in
mov
xchg
std
mov
mov
cmp
or
lret
cltd
daa
in
addb
sbb
scas
inc
mov
fwait
rcll
fbld
gs
out
pop
arpl
push
pop
cmpsl
add
inc
scas
out
mov
pop
pop
push
xchg
rcrl
js
xor
dec
or
mov
or
or
fs
jb
je
jmp
add
cmp
stos
cmp
out
xchg
popf
dec
xchg
and
arpl
pusha
jl
fbstp
cmp
hlt
cltd
icebp
mov
scas
pop
imul
inc
leave
adc
imul
push
aam
inc
fcmovne
insb
lods
stos
dec
mov
je
hlt
and
cmp
aas
scas
ret
leave
cmpsb
sbb
xor
xorl
test
mov
inc
mov
fadds
jb
jmp
cs
dec
jecxz
inc
xor
lcall
insb
xor
inc
les
push
pop
lock
addl
movsl
pop
push
mov
pop
arpl
jl
dec
nop
or
scas
aad
test
cltd
and
mov
or
mov
int3
hlt
mov
inc
mov
cmp
mov
mov
xor
ffreep
ds
mov
lcall
xchg
roll
and
clc
gs
sub
dec
or
add
jne
push
les
jg
sbb
call
adc
mov
or
pop
sub
adc
dec
mov
jns
push
les
dec
scas
stos
out
xchg
mov
das
loopne
lods
lret
shll
pop
pop
sub
lods
lods
fisubl
cmp
xchg
add
pop
ss
sbb
mov
roll
into
jb
movsl
pop
and
fcmovbe
xchg
aam
cmp
adc
jmp
add
arpl
jns
stos
fistl
push
cmc
in
lcall
mov
hlt
adc
cwtl
or
fs
pushf
in
sub
mov
call
insb
jmp
sbb
out
mov
or
out
ljmp
adc
xchg
lahf
sub
pop
pusha
fisttps
aaa
mov
jp
mov
test
imul
cpuid
test
dec
pop
mov
sub
and
push
imul
jp
mov
dec
cmpsl
pop
xchg
aaa
shl
repz
sbb
xor
pop
cmp
and
andl
daa
sbb
cmp
or
adc
adc
xor
imul
or
out
popf
sbb
aad
pop
sub
rcrl
in
lea
inc
aad
out
fstl
icebp
shrl
js
and
aaa
inc
stos
test
jb
in
xchg
jle
xor
or
negb
out
sub
dec
pop
push
pop
imul
cmc
sahf
push
mov
jg
mov
and
dec
jg
pop
cli
call
andl
sbb
adc
inc
je
andb
dec
mov
jmp
cmp
dec
into
mov
dec
or
fwait
jle
mov
shl
icebp
cs
imul
rorb
mov
divl
dec
push
jae
insb
lods
xor
add
xchg
mov
xor
jp
xchg
jae
in
pop
nop
popf
scas
and
xor
xchg
mov
aam
mov
daa
lret
outsb
inc
jl
repnz
xchg
push
enter
add
fnstsw
pop
xchg
pop
sarl
inc
dec
test
add
pop
mov
sub
jne
adc
pop
sbb
enter
shrl
std
inc
fisttps
inc
popl
jae
jp
push
out
xchg
xorb
sti
mov
repnz
dec
xchg
jb
mov
mov
sub
mov
lcall
vmpsadbw
cmpl
mov
cmp
dec
sar
iret
push
jbe
sbb
ja
notb
imul
test
sbb
mov
lcall
mov
xor
std
daa
lods
imul
mov
lret
orl
mov
dec
xchg
bound
xchg
cld
jp
stos
mov
cld
mov
lss
cmp
fs
dec
movsl
adc
insb
cmp
dec
mov
into
popa
mov
mov
into
repnz
rcrl
dec
daa
sub
rorb
inc
fldt
jne
sbb
imul
fists
mov
push
out
xlat
in
test
jbe
fmuls
or
dec
adc
ja
fstpt
lock
shrb
push
dec
test
push
sbb
adc
test
jg
push
and
ret
mov
fdivrs
mov
popw
adc
outsb
dec
inc
out
scas
loopne
loopne
pop
popl
movsb
in
in
movsl
mov
jl
bound
mov
jle
aaa
and
push
add
jge
cmp
cmpsl
mov
pop
inc
add
fcoml
aam
outsl
repnz
jl
aad
pop
pusha
test
mov
daa
dec
daa
faddp
cmp
ss
add
inc
pop
xchg
sbb
xchg
dec
xor
dec
mov
jmp
cltd
jno
adc
mov
mov
mov
mov
inc
sbb
cmpsl
xchg
in
shll
pop
or
outsl
mov
movb
dec
sub
pop
into
sbb
sti
pop
push
scas
mov
push
sub
pushf
pop
lret
ljmp
add
lock
enter
inc
sbb
and
popf
aas
xchg
xlat
das
out
dec
bound
sbb
push
mov
mov
hlt
jae
mov
out
ss
adc
nop
aam
movsb
mov
push
aaa
add
mov
jbe
in
sbb
sub
gs
push
xor
rcll
xorl
xchg
rolb
lds
out
pop
stc
call
mov
ljmp
scas
stc
cmp
xchg
jmp
lds
bound
jmp
shlb
sbb
das
jns
adc
mov
insl
and
lcall
mov
pop
pop
cmp
inc
pop
push
cmp
iretw
xchg
ss
jo
dec
cmpsl
test
dec
xchg
int3
mov
out
daa
pop
and
pusha
sahf
movsl
loop
lods
aaa
mov
mov
jnp
out
mov
pop
lret
mov
and
jl
or
xchg
or
cmpsl
inc
jl
je
sbb
inc
mov
and
sarl
jl
mov
and
mov
mov
pop
mov
mov
insl
and
sti
mov
stos
sub
sbb
shr
jae
shlb
pop
mov
push
push
bound
ret
cmp
frstor
fstl
dec
ficomps
lods
jo
or
xchg
mov
dec
jmp
scas
jl
mov
jne
inc
inc
pusha
ds
inc
in
shll
rol
inc
cmp
nop
sbbb
push
push
shlb
mov
lahf
dec
add
into
sub
dec
test
aam
add
xchg
adc
pop
stos
or
pop
xchg
mov
fadd
mov
sbb
inc
pusha
scas
test
gs
test
loopne
jge
in
jmp
mov
and
xchg
cmpsb
rorb
mov
mov
adc
cmp
cwtl
mov
push
push
sbb
sub
rorb
in
aad
outsl
loopne
shrb
inc
xchg
mov
dec
call
and
push
sub
jns
jns
pushf
in
scas
cmp
shrl
mov
add
rcrl
xlat
lret
mov
pop
and
xchg
add
adc
imul
cmpsl
popa
lock
test
nop
push
fnstsw
aad
sbb
push
mov
mov
jp
push
arpl
pop
lock
orb
das
dec
cmp
push
inc
jno
js
test
pop
outsl
cmp
sub
cmc
fadds
je
push
lahf
js
mov
xor
dec
add
lret
clc
stc
dec
je
push
or
pusha
push
test
sub
jl
pop
int3
mov
inc
inc
mov
insl
out
lahf
push
aaa
or
lods
or
popa
jne
out
jge
jmp
sub
adc
push
mov
jmp
int3
push
rorl
mov
lret
mov
mov
pop
out
into
out
xor
fstp
subb
adc
sub
mov
xchg
lret
lret
xlat
jne
or
adc
ja
xchg
dec
jg
or
out
inc
pop
mov
sub
popa
jnp
aas
xchg
and
mov
icebp
xchg
dec
xor
cmp
sar
add
leave
test
arpl
dec
les
jno
and
adc
mov
and
and
pop
in
bnd
xor
jle
stc
mov
cmp
or
fwait
inc
xlat
pop
and
and
fcmovb
addl
mov
and
pop
dec
adc
push
lods
sbb
mov
iret
in
cli
out
jg
dec
inc
jno
dec
adc
mov
or
les
int
push
add
sbbl
das
rcrb
push
shrb
pop
sbb
push
adc
out
test
push
mov
jle
mov
dec
mov
ss
cltd
ja
test
lods
xchg
cwtl
shrl
ja
xor
shll
jg
add
adc
sub
lret
testl
or
idivb
loop
rorb
or
notb
sub
lods
cltd
sbbl
lods
jecxz
mov
xchg
mov
jns
adc
dec
ficoml
dec
jmp
mov
in
adc
dec
xor
and
mov
push
xchg
shrb
mov
aas
mov
mov
and
scas
insl
fidivs
stos
or
loopne
jns
fwait
pop
sbb
and
in
std
outsb
push
sbb
mov
loope
andl
jg
sub
push
jg
push
mov
sbb
adc
lock
sbb
stos
rorl
mov
sbb
dec
mov
or
sub
shrb
aaa
js
loop
dec
dec
push
imul
inc
in
dec
dec
jns
jmp
cmc
in
adc
stos
lea
fstpl
pop
and
adc
aam
mov
mov
hlt
clc
pop
stos
movsb
repnz
lcall
push
jo
xchg
push
jecxz
add
pop
or
pop
xlat
outsb
imul
xor
sub
dec
inc
push
mov
jmp
arpl
fwait
mov
das
iret
gs
mov
andb
cmp
add
cmp
cli
sbb
repnz
adcb
cmp
in
test
imul
jecxz
pop
sub
cmp
pop
testb
mov
test
testl
or
aam
jl
mov
fidivs
int3
dec
push
xchg
test
sarl
mov
sub
inc
aad
mov
mov
scas
subb
xchg
loopne
andb
sbb
push
and
loope
notb
cltd
decl
repz
movsb
push
hlt
dec
adc
inc
mov
outsl
adc
mov
cli
and
lds
dec
lea
cs
call
sub
inc
mov
mov
outsl
mov
imul
mov
inc
inc
and
push
push
cmp
out
fstpl
push
enter
fs
scas
rclb
xchg
pop
mov
rcll
push
adc
in
stc
cmp
xor
lret
test
pusha
sub
ss
les
mov
mov
fldl
fs
sbb
xchg
sub
daa
loopne
dec
and
fldenv
stos
stos
add
pop
les
or
jb
push
xchg
add
mov
mov
mov
mov
cmp
pop
push
jno
jg
xchg
inc
repnz
jae
xchg
insl
icebp
and
mov
jmp
sub
mov
adc
xchg
xor
es
sub
in
popa
cld
jbe
mov
lods
ljmp
or
lea
or
fisttpl
in
xchg
mov
data16
fdivrl
xchg
insl
cmp
xchg
mov
mov
sbb
insb
add
sbb
out
mov
mov
xor
in
insb
lock
cmpsb
mov
out
stos
adc
xchg
xor
adc
adc
aad
popa
aam
call
enter
stc
es
push
push
gs
adc
movsb
push
enter
std
jo
and
xor
push
ds
dec
jg
add
orb
pop
icebp
int
and
ljmp
and
xor
cmp
cmpsl
push
sarl
adcl
data16
imul
lods
inc
cmpsb
fldcw
pop
pusha
xchg
jg
jl
and
adc
call
dec
aam
xorb
push
leave
mov
cld
or
sbb
rorl
and
sbb
cmp
adc
inc
pop
ffree
ljmp
sub
loopne
dec
testb
std
pop
add
stos
shlb
mov
fadd
loope
lds
imul
xlat
roll
lods
mov
out
stc
inc
mov
fsubrl
mov
mov
jp
add
in
hlt
and
je
pusha
inc
andl
rcrb
cld
lods
sar
notl
jle
add
cmp
lret
mov
cmc
dec
je
xchg
sbb
sub
xlat
and
mov
and
cmp
mov
xchg
mov
jl
dec
adc
imul
and
xchg
cli
testb
pop
in
jnp
jae
rorl
insl
mov
inc
fisubrl
mov
aad
or
sbb
mov
addr16
hlt
mov
mov
addr16
insb
aas
nop
shl
adcl
xor
push
or
test
nop
lods
aaa
movsb
cmpsb
jbe
scas
or
add
mov
mov
test
dec
xor
test
or
ror
sub
imul
and
xor
jg
mov
outsb
fisttpl
mov
je
xchg
test
test
xlat
cltd
fwait
add
pop
movsb
int
cltd
jl
inc
adc
inc
mul
mov
jo
insl
in
incb
xchg
loopne
sbb
dec
lcall
mov
shl
idiv
jle
or
lds
aas
daa
loope
mov
pop
sbb
adc
mov
test
hlt
xchg
pop
pusha
ficomps
push
mov
sbb
sbb
out
mov
pop
pop
jns
inc
inc
std
pop
jg
ljmp
dec
in
or
out
fwait
cmp
sub
in
sbb
int
sahf
into
test
ja
sbb
inc
sbb
push
movsl
mov
dec
mov
jl
mov
jno
xor
or
clc
jl
ss
adc
pop
push
cltd
js
sahf
pushf
shr
stos
inc
cmc
xor
mov
xchg
sbb
lcall
leave
mov
test
add
sub
sbb
mov
sub
mov
divl
pop
orb
xor
adc
xchg
jecxz
xchg
aaa
and
inc
lock
ret
loope
cmp
loop
adc
lahf
cmp
dec
sbb
orb
pushw
jge
cmp
iret
js
stos
nop
xchg
lock
mov
xchg
xchg
push
aaa
hlt
loopne
or
daa
arpl
xchg
sahf
into
inc
push
pop
push
push
icebp
int3
test
data16
lea
mov
hlt
into
inc
lahf
cmp
addl
aam
sub
cmp
dec
and
sahf
adc
cld
cmp
push
or
das
out
clc
mov
ror
sahf
ret
lea
lods
fcmovne
add
xchg
cmpsb
pop
and
dec
and
mov
js
add
add
loop
cmc
mov
mov
jg
add
aam
loopne
cmpsl
jl
jge
das
jbe
cs
jns
sub
scas
sbb
andl
push
mov
lahf
push
enter
jp
test
xor
sbb
repnz
repnz
jnp
xor
out
cmc
clc
stos
scas
pop
in
sub
popa
js
je
adc
mov
push
int
popa
nop
lock
popa
js
repz
nopl
or
fimuls
popa
mov
cli
xchg
icebp
stos
cmpsl
out
xor
imul
xor
sub
fistps
stos
adc
adc
repnz
mov
pop
cli
pop
fmulp
mov
test
cltd
sbb
add
and
push
mov
xchg
scas
and
push
ja
jnp
cmpb
fwait
mull
scas
test
insl
int
jmp
sub
pop
lret
call
add
mov
cs
pop
mov
test
inc
mov
add
sub
or
and
and
cmpsl
xor
mov
dec
push
dec
into
fsubrs
mov
xchg
mov
sub
loope
xor
mov
and
cwtl
mov
pop
shr
jge
mov
jo
in
out
sarb
mov
adc
adc
push
notl
sub
cmc
mov
fstpt
repz
int
pop
leave
lods
pop
cmp
xor
stos
jle
in
cmc
jecxz
test
mov
adc
leave
fwait
pop
dec
jmp
push
sbb
mov
sbb
fistl
mov
int
clc
or
fistl
pop
lret
scas
add
stos
sbb
and
mov
xchg
add
push
cmp
mov
dec
insl
xchg
cmp
inc
push
adc
sbb
int
inc
orl
cmpsb
sti
mov
cmp
roll
jp
loope
add
rcl
or
mov
shll
jmp
xchg
xchg
xlat
push
lahf
insl
mov
pop
cmp
mov
xchg
lahf
scas
stos
rcr
inc
insb
push
fdivrp
arpl
int3
sbb
fsin
insb
pop
sbb
cmp
out
nop
inc
sub
push
add
popf
adc
sbb
jbe
mov
sub
lcall
push
rorl
cmc
stos
lods
jge
lods
iret
mov
mov
pop
test
dec
lods
mov
addr16
scas
in
dec
arpl
leave
add
cs
shrl
cli
ret
stos
mov
dec
fs
insb
mov
popf
jp
and
out
or
lret
mov
cli
decl
push
aas
dec
mov
pusha
out
push
inc
xchg
or
pop
aaa
shlb
sbb
int3
repnz
cmpsl
xchg
pop
sbbb
mov
fdivl
pop
mov
mov
pop
in
es
gs
out
mov
jl
rol
into
jb
xlat
rolb
add
sub
ficoml
push
push
rcl
sbb
movsl
mov
dec
pusha
pop
cwtl
dec
pop
or
or
dec
sti
mov
mov
std
packsswb
inc
mov
popa
and
push
shll
std
cmp
shll
out
dec
aad
xor
pmulhw
inc
ljmp
lret
adc
mov
mov
addb
sahf
inc
ja
cmp
sub
jle
ret
mov
xchg
out
xlat
movsb
repnz
icebp
movsl
dec
sbb
inc
sbb
mov
mov
stos
loop
or
and
ljmp
mov
xchg
mov
gs
pop
js
mov
aam
loop
outsl
xor
mov
dec
mov
lods
add
sub
sbb
scas
xchg
int3
push
cmp
jle
daa
js
mov
scas
jle
daa
leave
leave
cmp
inc
or
nop
xor
jle
out
sbb
sub
add
shlb
insl
in
mov
into
dec
pushf
mov
inc
mov
cmpsb
sahf
push
inc
adc
xchg
sub
xchg
outsl
cmp
cmp
fnsave
fbld
xchg
sbb
push
xor
xor
jmp
call
aas
fnsave
add
nop
nop
in
ja
mov
sbb
lahf
add
lock
jg
divl
std
nop
push
jbe
pop
pop
daa
mov
aaa
ss
push
or
push
pop
ss
inc
xor
out
fstpl
and
dec
data16
jge
daa
aaa
shrl
lea
out
lods
loope
js
scas
inc
adc
add
fsubs
dec
in
data16
and
sub
sbb
fisubs
outsl
dec
iret
sbb
pop
arpl
pop
je
xor
mov
aam
cmp
jle
or
xor
pop
shlb
jne
lods
cmp
push
mov
pop
pop
data16
cmp
les
and
cmpsl
mov
cmc
jae
sti
dec
pop
sbb
add
ds
cmp
fadds
rcrb
fwait
sub
ret
popa
test
sbb
inc
rclb
and
clc
sbb
dec
aam
jbe
arpl
mov
add
pop
flds
pusha
mov
adc
int
mov
pop
or
push
inc
push
jae
js
xchg
sub
repz
jl
mov
xchg
jo
scas
cmp
mov
push
scas
xchg
and
sbb
xchg
stos
sub
lds
xchg
enter
dec
je
mov
repnz
jno
shl
mov
iret
mov
incb
das
mov
xor
jbe
dec
cld
ret
inc
stos
es
adc
cwtl
fbld
ror
mov
dec
push
jb
insl
ljmp
sub
int3
incl
xchg
jg
jnp
push
or
fsubs
xchg
mov
mov
jne,pt
sub
mov
jno
js
insb
push
xchg
lret
nop
push
ret
xor
aam
xchg
pop
fwait
xchg
rclb
sbb
cmp
and
sti
adc
xchg
xchg
jg
inc
push
mov
int3
out
mov
sahf
jbe
dec
nop
fwait
jg
jg
fcompl
cmp
int3
pop
cwtl
mov
ret
add
xchg
out
and
and
inc
inc
arpl
in
subb
lcall
insl
mov
mov
mov
jno
cmp
imul
in
add
addr16
xchg
mov
inc
adc
out
scas
test
push
inc
adc
out
in
frstpm(287
not
enter
jmp
or
enter
push
xor
sbb
adc
out
into
xchg
inc
xor
adc
fmul
xchg
adc
dec
mov
outsb
add
adc
jp
dec
or
fistps
add
in
scas
cmpsl
sahf
fs
dec
hlt
sbb
and
stos
push
inc
add
pop
dec
cli
popa
subl
shll
aam
dec
pop
pushf
lret
xor
mov
in
test
sbb
movsb
pop
arpl
mov
jge
adc
mov
adc
mov
outsb
jns
push
dec
mov
jl
xor
adc
test
scas
stos
push
aad
sbb
lea
jmp
sub
fisttpll
pop
fsubrs
repz
in
and
orl
faddl
test
mov
add
arpl
out
or
dec
mov
pop
mov
push
jge
mov
int
cld
mov
fcoms
test
int3
repnz
nop
lds
xlat
xor
pop
lock
orl
mov
mov
adc
xor
push
cmp
mov
mov
cmp
lahf
fcoms
ds
mov
test
ja
and
jmp
jae
incl
rep
inc
mov
pop
xchg
addr16
outsl
sbb
scas
add
lock
mov
xchg
insl
xor
and
fcompl
inc
mov
sahf
mov
jns
inc
pop
fisttps
and
add
outsb
mov
inc
cmp
add
daa
popf
cld
js
out
xchg
add
cmp
icebp
outsl
push
xor
push
xlat
xchg
jae
dec
cmpsl
fsubrs
js
das
dec
jne
cs
repnz
adcb
roll
fs
int3
mov
es
int
into
jnp
mov
add
push
aaa
sti
pop
idivb
in
sbb
xchg
sub
movsb
cmc
mov
sbb
pop
pop
sbb
adc
paddsb
cmpsl
shlb
cli
jae
mov
test
add
adcl
mov
pop
lock
jb
sbb
out
add
dec
mov
sub
fcomi
outsl
lods
add
std
adc
in
repnz
pushf
pop
mov
fdivrs
jmp
mov
xchg
fisubs
xchg
into
inc
call
jbe
rcrb
xchg
cmp
sub
jnp
lahf
add
mov
fnsave
test
cs
xchg
cmp
push
mov
inc
in
jecxz
inc
scas
jb
repz
shr
popf
sub
mov
xlat
lcall
or
cwtl
sar
cltd
cmp
outsl
cmpsl
or
dec
lret
pushf
test
notl
ds
jb
add
and
leave
pop
ljmp
mov
push
je
aad
add
xorl
cmpl
xchg
das
cwtl
push
insb
push
in
pushf
inc
mul
push
repnz
scas
mov
xlat
mov
pusha
dec
repz
inc
ljmp
ds
pop
jne
addr16
cld
push
dec
mov
dec
lds
lahf
subl
iret
inc
icebp
mov
pop
push
les
xchg
fcomi
or
mov
arpl
cmc
lea
loopne
rorb
jo
cmpsb
cmpl
sub
mov
pop
mov
pop
or
rcrl
xor
lahf
popa
test
cmpsb
aas
stos
cmp
insb
mov
pop
cmp
sub
lret
cmp
jp
ljmp
icebp
popf
and
xor
ja
fstp
dec
or
jg
xchg
loope
ljmpw
add
jl
sahf
negl
or
xchg
jo
jbe
dec
add
fucom
mov
inc
rolb
inc
sbb
pop
sub
in
push
jne
cmp
adc
xchg
jb
lret
pop
mov
daa
lret
daa
pop
scas
jne
fidivl
mov
cmp
aas
rclb
add
nop
jbe
pop
enter
dec
lods
mov
mov
mov
sub
cmpsl
jb
lcall
leave
pop
xor
push
xchg
scas
daa
jle,pn
mov
stc
cwtl
scas
fnstsw
and
push
mov
push
push
pop
and
jb
ss
push
inc
iret
cmpl
aam
adc
scas
das
aad
mov
pop
inc
repnz
rcl
call
mov
shrb
shlb
mov
daa
ss
pusha
in
scas
mov
or
mov
sarb
out
hlt
hlt
xchg
mov
mov
push
sarl
pusha
ja
mov
xor
fdivrs
xchg
mov
mov
add
aam
cmp
pop
lock
push
call
dec
mov
cmp
lcall
fcomp
and
fdivrp
cmc
inc
or
xor
adc
stos
mov
xor
jne
std
lret
int3
adc
mov
jno
mov
cltd
sbb
fildll
mov
dec
jo
cltd
or
or
xchg
jge
icebp
ficompl
xchg
xchg
jno
sbb
xchg
adc
jnp
push
js
inc
cmpsl
jns
mov
jno
fwait
xor
pop
mov
push
sbb
adc
rorb
rorb
cmpsb
ja
roll
hlt
out
lcall
jecxz
push
fwait
cmpsl
pop
pop
add
pop
mov
inc
fs
adc
inc
push
adc
call
jo
adc
add
push
mov
sbb
cmc
and
jl
push
add
jbe
xor
stos
jb
xchg
jns
inc
xchg
pop
xchg
xchg
shll
jmp
aaa
aas
mov
mov
sbb
pop
mov
adc
dec
adc
sahf
pop
mov
shl
test
fstpl
test
lret
dec
adc
sahf
jmp
pop
scas
repnz
idivl
lahf
ds
pop
mov
std
pop
cli
xchg
dec
dec
test
ret
sbb
inc
push
frstor
pop
lods
ds
rol
add
insl
stos
cwtl
insl
push
cs
push
int3
pop
js
nop
movsl
movsb
xlat
and
stos
xor
pop
imul
jl
lahf
xor
xchg
xchg
outsb
je
test
in
incl
dec
jg
xlat
dec
fidivrl
add
ss
cmc
add
arpl
jmp
addr16
shrl
sbb
in
push
push
mov
js
adc
sbbl
mov
scas
mov
scas
pop
push
out
adc
push
xchg
mov
sbb
mov
pop
mov
scas
ljmp
push
pop
push
les
jo
fwait
rcrb
mov
mov
fwait
xor
aad
or
jecxz
xor
xchg
ret
jnp
bound
mov
adc
enter
jne
imul
cltd
inc
add
inc
je
out
std
adcl
mov
out
add
pop
mov
inc
shll
stc
shll
int3
aaa
clc
movsb
imul
popf
push
out
jp
push
mov
jb
mov
hlt
hlt
ret
popf
xor
pop
adc
dec
jge
mov
xor
gs
xlat
xchg
mov
mov
push
fbld
jle
lock
enter
out
jns
pusha
sbb
call
xchg
int
jnp
dec
inc
loop
push
mov
cwtl
test
pop
mov
cmp
frstor
inc
pop
xor
insb
addb
out
jp
or
xchg
cwtl
jne
fs
mov
xorl
sbb
cmp
push
data16
pusha
mov
jne
mov
cmp
lahf
jae
sub
pushf
rol
inc
pop
xor
cltd
xchg
cmc
adc
sub
imul
rcl
push
jp
jno
or
fmull
dec
sbb
test
in
loop
fs
loop
cld
fcompp
xor
push
cmp
xorl
incb
jmp
mov
outsl
mov
xchg
imul
sub
cltd
lret
out
insb
int
movsl
push
mov
cs
data16
mov
push
push
cltd
movsb
push
inc
fs
jno
or
pop
dec
xchg
ror
into
movsl
faddl
pop
repnz
cmp
add
pop
dec
cs
mov
popf
imul
mov
fstp
outsb
inc
or
dec
ficoms
repz
push
mov
xchg
outsl
scas
sbb
test
repz
scas
push
cltd
cmc
rorl
fwait
cs
pop
lock
inc
jns
push
push
and
or
push
ljmp
xor
in
dec
jl
les
ret
shll
xchg
in
jb
outsl
ret
int
lods
out
mov
ds
and
fcmovu
jae
cmp
push
xchg
adc
pop
jle
paddusb
in
adc
lcall
scas
scas
mov
test
adc
cltd
stc
mov
test
cmp
nop
pop
sub
shrb
sbb
dec
sub
jp
jne
fnstcw
cld
cld
out
icebp
aad
cmpb
scas
rolb
repz
adc
xorl
ret
jl
orb
add
sub
pop
cli
jle
mov
popf
bound
fidivl
stc
in
jns
arpl
sar
adc
mov
sub
xor
mov
mov
ljmp
cmp
cs
decb
mov
lcall
lahf
ficompl
cmp
cmc
adcl
ret
cmc
push
int
xor
jl
icebp
mov
xor
dec
inc
jns
cmp
dec
push
add
adc
lahf
in
dec
out
clc
xchg
shlb
sub
xor
sbb
xchg
div
sti
add
cmp
add
daa
out
imul
xchg
sub
xor
dec
jns
lahf
adc
and
jmp
sbb
mov
das
sub
dec
icebp
out
mov
xor
cmp
test
pop
mov
mov
cmpsl
add
xor
cmpsl
movsl
xchg
mov
mov
mov
in
addb
push
out
xchg
repnz
inc
out
or
jb
sbb
popf
cmpsl
inc
cmp
mov
pop
mov
lock
mov
rolb
sbb
andl
cwtl
jo
xchg
inc
xadd
xor
pop
stc
loopne
pop
movsb
in
pop
adc
lret
arpl
into
xchg
mov
xchg
inc
sbb
mov
stos
call
jne
push
clc
popa
cmp
fsubr
fcmove
fnstcw
cli
and
clc
sarb
or
dec
add
test
notl
mov
or
sbb
push
push
pop
out
xor
lret
out
xchg
cmp
iret
pop
and
pop
jg
xor
dec
aaa
je
lret
dec
into
xor
repz
inc
jo
fidivs
ss
test
mov
psubusb
daa
mov
xchg
mov
mov
jbe
aas
stos
das
pop
inc
in
fidivs
arpl
push
or
dec
mov
hlt
into
jecxz
mov
xor
loope
cmp
sub
pushf
call
jle
pop
or
xchg
sub
test
clc
fidivs
addl
cmpsl
mov
and
clc
push
jno
loopne
jns
mov
shlb
cwtl
icebp
loopne
jbe
bound
insl
mov
cmp
inc
push
xchg
add
daa
dec
mov
pop
mov
xor
xor
pop
push
dec
orb
int
fiaddl
fsubrl
xor
xor
mov
xchg
test
cli
into
fimull
jno
push
jns
fs
ds
inc
dec
or
mov
fistpl
jno
inc
and
and
xchg
mov
push
in
int
imul
pusha
aaa
inc
test
lea
xor
lods
cld
lods
add
rorl
or
add
std
mov
or
inc
add
ds
push
xlat
popf
ljmp
sub
cmpl
es
fwait
clc
flds
out
dec
mov
iret
pop
repz
inc
outsb
push
cli
sbb
and
ficoml
out
xchg
pop
ret
das
pop
fsubrl
fmulp
adc
clc
nop
loop
dec
xchg
cmpsl
jge
jmp
outsb
addr16
xchg
adc
pop
adc
xchg
test
add
leave
mov
adc
mov
loop
loope
add
inc
xchg
mov
pop
add
xchg
push
sub
xchg
mov
cmpl
xor
ljmp
xchg
lret
mov
cmp
stc
shlb
pop
into
inc
stos
add
int3
lock
stos
xor
cmp
lods
mov
mov
lds
mov
test
mov
sbbb
in
dec
mov
mov
lods
js
adc
mov
repz
jns
and
mov
rcll
leave
stc
or
xchg
add
and
jae
test
cmc
out
and
int3
in
sub
jno
test
cmpsl
push
add
push
mov
jae
in
cmp
mov
dec
xor
idivl
or
inc
in
mov
jno
mov
out
cwtl
fistpl
outsb
xchg
fistl
in
pushf
dec
pop
push
rcrl
jne
mov
int
jne
rcrb
out
fwait
jg
push
and
cmpl
sub
das
iret
inc
mov
xchg
jp
pop
pusha
pop
xchg
mov
push
xchg
adc
stos
aad
inc
dec
push
mov
jg
cmpsl
mov
in
pop
sub
xchg
and
out
mov
pop
cmp
mov
movsl
enter
adc
andl
pop
sahf
rcrl
xchg
push
add
les
mov
icebp
and
orb
ja
jb
lock
ret
sbb
call
jo
mov
aad
and
dec
or
cli
inc
xor
jb
ds
mov
sub
hlt
popf
inc
jecxz
das
fcomps
adc
pushf
data16
dec
leave
cli
cs
push
into
xor
aam
inc
or
dec
scas
mov
daa
push
pop
int
and
sbb
sub
add
aaa
mov
lods
mov
nop
push
pop
push
sbb
xor
adc
inc
das
mov
sbb
push
lret
sbb
scas
xor
ja
sti
mov
fwait
imul
sub
out
inc
push
sub
inc
and
mov
fcompl
adc
jg
xchg
sub
das
add
repz
scas
push
push
in
adc
test
mov
cmpl
cmp
mov
sbb
mov
loopne
cmc
add
xor
popa
push
aam
mov
jns
sub
rorb
repnz
cli
sbb
out
jmp
xchg
lods
insl
jbe
das
stos
sarb
lock
or
pop
imull
mov
sbb
or
fcoms
push
fistl
stc
fs
std
cmc
lods
out
pushf
pop
imul
add
andl
and
xor
bound
add
dec
push
ficoms
inc
sub
push
int3
sbb
loop
push
int
call
inc
mov
push
pop
adcl
mov
and
pushf
hlt
add
mov
jp
fs
xor
test
lahf
lret
loopne
and
jnp
adc
clc
pop
cmp
dec
fmulp
bound
outsl
jbe
sarb
popf
stos
inc
jecxz
popl
mov
les
xchg
sbb
movsb
mov
shll
xchg
mov
scas
dec
adc
icebp
jne
and
push
pop
and
cltd
outsl
adc
iret
and
xchg
lods
ja
test
popf
inc
in
fidivl
sbb
sub
xor
jg
popa
aaa
addr16
test
and
call
cltd
xlat
ss
inc
cmpsl
xor
mov
mov
out
push
ja
mov
dec
inc
idivb
fisubrs
sbb
mov
testl
ss
mov
mov
mov
gs
in
or
mov
lea
in
mov
popf
jnp
rcrl
enter
iret
cmp
mov
fidivrs
add
jle
scas
jmp
int
mov
fwait
sbb
or
js
fidivs
in
addr16
cmp
push
sbb
sub
gs
sub
cmpsl
sahf
sbb
xchg
cmp
dec
sbb
lahf
iret
addr16
cmc
or
jnp
push
xchg
loop
mov
or
testl
ret
bound
jb
fiadds
or
fsts
pop
inc
sti
xchg
cmpsb
sbb
mov
push
pop
mov
mov
and
dec
push
icebp
push
ds
imul
test
sahf
dec
adc
test
xchg
dec
mov
lods
pop
movzwl
scas
mov
addr16
insb
sbb
inc
fdivrp
pop
mov
sbb
loop
lock
js
fwait
into
in
rcll
fsubrs
jb
nop
xlat
pop
movsb
push
pop
mov
mov
or
mov
and
inc
out
arpl
mov
in
jmp
js
jge
mov
cmp
out
stos
mov
mov
jno
mov
or
mov
mov
sub
mov
push
pop
xchg
jae
in
adc
mov
jle
test
xor
adc
pop
push
push
adc
popl
jo
ss
pop
das
ret
clc
pop
aas
loop
push
jns
mov
adc
dec
ret
aam
jb
popf
test
nop
sarb
sub
jne
mov
mov
div
lods
jns
cmpsb
ss
jle
out
and
add
sub
mov
cs
add
cltd
and
mov
ret
adc
xor
dec
js
pop
mov
push
aas
loopne
push
mov
sbb
xchg
adc
leave
dec
and
mov
std
add
mov
jle
adc
mov
and
mov
lods
jp
repnz
cmp
aas
in
mov
add
pop
pop
in
push
icebp
and
mov
popf
int3
jmp
sbbl
jl
and
mov
xor
mov
dec
pop
insl
push
cmpsl
sahf
lret
pop
repnz
inc
shr
aad
int
or
test
fnstcw
sub
movsb
mov
add
cmpsb
xchg
cmp
test
mov
scas
push
mov
not
dec
cmpsl
sub
inc
test
and
mov
or
ja
les
stos
and
xor
lcall
pop
dec
dec
ret
mov
xchg
mov
lock
sub
push
loopne
push
aad
imul
adc
pushf
cmp
popl
jp
sahf
mov
ds
js
pop
cltd
hlt
sub
sub
sbb
ss
mov
mov
or
lea
aas
pop
pop
je
pushf
xchg
sbb
jg
or
xor
xchg
enter
test
push
std
mov
sub
ja
push
or
popa
std
push
test
jae
cmp
cmp
jae
mov
outsl
cmp
insl
inc
out
pop
or
dec
addl
mov
adc
xor
outsl
inc
xchg
mov
in
mov
xchg
inc
test
repnz
adc
loop
les
jl
std
adc
xlat
les
mov
push
xchg
arpl
cli
sbb
insb
loopne
push
xchg
adc
cmpsl
outsl
popa
test
dec
inc
mov
sub
pop
jbe
fnstsw
sahf
jp
stos
nop
das
xlat
and
leave
cmpsl
mov
mov
add
adc
and
sub
aaa
iret
lods
mov
mov
cmc
rolb
cmc
xorb
out
push
sbb
dec
imul
out
sbb
adc
add
leave
and
sti
subb
ljmp
lret
int3
mov
sbb
icebp
mov
lahf
pop
in
jns
inc
xorl
jl
push
inc
pop
push
stos
cmp
xchg
js
in
les
aad
mov
cmp
lret
mov
andb
cs
pop
sbb
fdivr
add
xor
popa
test
cmp
aam
cmp
sar
in
mov
cs
jmp
mov
cmp
cld
xchg
mov
daa
mov
lret
pop
push
adc
push
inc
repnz
sbb
mov
repz
cmpsl
add
cmp
inc
out
sub
push
add
jns
rcrl
cmp
jmp
je
cli
xchg
fisttps
xchg
sbb
mov
mov
jno
pop
scas
xchg
xchg
push
adc
test
cmp
subb
and
popf
test
mov
lods
int3
lret
pop
popa
imul
in
nop
xor
in
mov
fwait
sub
xor
loope
int
cltd
mov
int
aad
sub
adc
push
int3
repz
iret
pop
xchg
iret
and
outsl
in
aad
jmp
and
fists
mov
es
push
nop
shl
arpl
jg
ss
movsb
lods
push
push
insl
cmp
shlb
inc
stos
cmp
jp
outsl
imul
outsb
leave
inc
ljmp
xor
aaa
inc
pop
lcall
adc
rclb
push
lcall
test
ret
and
mov
adc
pushf
or
imul
cmp
stos
sbb
js
insl
out
jl
rcll
ja
cmp
iret
lahf
sarl
aad
cltd
rcrb
fisttps
xor
cwtl
cmpsl
pushf
sbbb
mov
mov
outsb
dec
xlat
xor
cmp
bound
fwait
xchg
repnz
mov
or
enter
loopne
fwait
stos
mov
data16
idiv
sbb
fldt
and
int
mov
jle
filds
mov
cmpsb
inc
xchg
push
jo
stc
xchg
cmc
in
pusha
jle
ret
jmp
and
adc
jp
ljmp
cmp
adc
test
and
out
pop
jge
push
or
js
jmp
test
sbbl
ja
or
mov
xchg
add
stc
mov
inc
cld
sub
iret
cmp
dec
pop
mov
out
clc
push
jbe
test
or
rcll
xchg
cmpsb
outsl
add
aad
mov
sub
mov
cmp
sub
mov
sbb
lods
xchg
shll
push
mov
into
mov
push
and
inc
push
inc
sub
push
xor
cmp
aas
orl
dec
sbb
and
cs
loopne
add
jo
cmc
imul
push
sub
pop
add
pop
push
leave
daa
lcall
test
mov
ja
mov
xchg
jecxz
adc
mov
call
inc
mov
outsl
or
cmp
and
lock
sarb
add
stc
in
int3
das
mov
pop
jmp
inc
icebp
addr16
sbb
xor
push
push
and
lahf
mov
add
fcompl
pop
in
les
stc
jg
push
or
sbb
insl
push
adc
pop
sbb
and
daa
leave
sahf
inc
mov
mov
aad
and
push
lock
bound
add
and
or
adc
arpl
mov
mov
cmp
jmp
pop
stos
mov
fmuls
pop
test
and
lgs
icebp
push
jmp
xor
xor
pop
addb
out
mov
fidivrl
push
ds
lea
cmpb
in
fstps
in
test
mov
testl
mov
xchg
push
ret
jge
push
in
mov
jne
into
iret
push
imul
sbb
lret
pusha
bound
push
jae
fcmovne
fstpt
ret
pop
adc
push
aaa
pop
xchg
or
into
mov
das
push
sti
mov
test
cmp
cmp
rcrb
dec
data16
inc
aaa
lds
lahf
and
add
nop
mov
stc
pop
aas
push
mov
pop
aas
test
mov
cmp
pop
sarl
push
xor
adc
inc
or
pop
jecxz
xor
push
insb
push
jle
xchg
xlat
ret
xlat
jl
jns
mov
xchg
rclb
sbb
inc
ljmp
nop
aam
movsb
sbb
inc
jg
fisttpll
jnp
pop
xor
jg
in
outsl
test
dec
sub
sbb
out
pop
inc
fcoms
or
mov
aas
fidivrs
in
mov
sbb
or
in
fwait
rclb
fildl
sub
or
xchg
call
cmc
rcrl
and
jae
jmp
mov
inc
mov
jbe
mov
adc
stc
mov
negb
pop
stos
pop
fstl
push
andb
pusha
je
mov
mov
insl
int3
rolb
mov
dec
or
pop
xlat
lret
or
push
inc
sub
loope
pushl
int3
mov
aam
fcomps
xchg
dec
jb
and
loop
mov
loop
je
push
insb
add
mov
xor
pusha
jp
mov
popa
outsl
call
or
xchg
lods
fs
inc
sub
adc
xor
out
and
iret
xchg
xchg
dec
arpl
ret
pop
lea
ret
mov
aad
jmp
in
push
mov
add
jl
mov
data16
jp
and
add
or
cld
mov
or
testl
sub
stos
scas
mov
negl
ljmp
inc
out
mov
dec
push
leave
xor
es
insl
jnp
stos
pop
repz
dec
push
dec
lock
inc
dec
pop
jge
aad
mov
arpl
pop
sub
jmp
xchg
sub
mul
xor
jge
mov
pop
and
es
mov
dec
dec
dec
jno
loop
arpl
les
mov
sub
xor
mov
and
imul
in
pushf
ret
mov
stc
stc
dec
sti
or
and
fcompl
sub
notb
cmp
std
leave
call
imul
or
jbe
jmp
cmp
dec
incb
jo
mov
jle
outsb
stos
or
sub
mov
lret
mov
loope
pop
xchg
jp
insb
repnz
jp
and
cmp
ficompl
cmp
in
dec
iret
jo
int3
stos
dec
sub
shr
push
xchg
jl
add
gs
or
or
add
xchg
in
call
pop
mov
pop
and
daa
cmp
lcall
das
gs
test
cs
ja
leave
test
movsb
sub
push
jnp
cwtl
loopne
push
xor
or
mov
popf
fcoml
lahf
bound
repnz
orl
inc
popa
cmp
adc
push
insb
push
sub
sbb
and
xchg
dec
fcompl
and
cs
jae
es
mov
cmp
xchg
mov
je
mov
sti
jnp
xchg
in
or
pop
mov
loopne
fisttpl
cmp
push
sub
sub
imul
mov
pop
repz
aam
xorl
jbe
test
mov
cwtl
sub
cmp
clc
push
aas
decl
jno
jns
adc
pop
sahf
mov
jae
mov
sbb
or
jle
adc
adc
outsb
nop
ret
jo
mov
add
iret
xchg
fstps
in
mov
sub
xlat
xor
imul
ret
int3
divl
test
push
roll
push
jns
pushf
mov
mov
xorl
dec
das
add
jp
les
inc
dec
or
mov
fsub
jnp
das
pop
adc
mov
ja
jmp
push
cli
mov
mov
aad
leave
ljmp
mov
push
add
mov
cmc
rol
imulb
or
mov
pop
jle
push
loop
mov
add
rorl
rolb
fldcw
leave
fildl
es
sub
fidivrl
mov
xor
sub
out
fxch
shll
test
xor
inc
and
push
les
jg
mov
in
in
mov
rol
popl
xor
adc
push
pop
pop
xor
in
lcall
mov
add
jne
xchg
mov
test
sbb
outsl
fists
sbb
or
xor
push
cmc
sub
mov
sub
notb
adc
cmp
cmpsb
push
dec
in
dec
pop
popa
daa
sub
lret
mov
and
imul
lret
movsl
popa
mov
idivl
or
push
mov
jmp
push
sahf
jmp
cmpl
popl
adc
push
cld
push
inc
or
jbe
cmp
fildll
inc
inc
dec
arpl
out
lock
in
sbb
cwtl
test
mov
fldl
and
cmp
popf
sub
pop
ja
insl
outsb
int
and
mov
sub
add
jle
js
dec
addr16
sahf
or
in
hlt
jo
int3
adc
popa
stos
fnsave
mov
in
iret
jp
aam
std
movsb
mov
movsl
repnz
pop
lock
jecxz
mov
notl
xchg
andb
jge
pop
pop
jno
jg
dec
pop
leave
sub
rcrl
mov
or
in
in
mov
movsb
mov
popa
test
mov
pusha
sbb
lcall
test
sbb
fs
xor
jno
adc
out
shll
mov
jbe
inc
dec
test
push
pop
cmp
sub
add
or
xor
lods
inc
inc
xor
fs
repnz
movsb
add
pop
or
mov
sub
lret
xchg
rolb
dec
mov
dec
xor
out
xor
push
in
cwtl
mov
jnp
jb
pop
mov
sbb
pop
inc
mov
stc
sbb
inc
outsl
js
ret
nop
jnp
mov
cwtl
xchg
fs
daa
popf
insl
jle
push
push
jge
sti
js
loop
mov
cmc
mov
out
adc
lods
test
pop
xchg
push
jns
out
loopne
jne
and
push
cmp
clc
push
lds
pop
push
int3
ss
lods
xchg
xchg
das
stc
and
lods
fs
cli
popa
mov
repnz
fsubrl
hlt
sbb
mov
lea
sub
jne
xchg
inc
xor
ljmp
pusha
out
les
pop
sahf
in
and
push
jle
xchg
mov
in
mov
and
mov
les
sub
mov
cwtl
xchg
mov
cmp
inc
sbb
sbb
nop
scas
inc
cmp
xchg
and
outsb
jmp
adc
cmp
int
push
out
xchg
imul
sub
inc
enter
and
add
mov
icebp
test
sarl
in
inc
mov
addb
sbb
mov
ss
mov
cld
sub
jno
sbb
push
lds
mov
imulb
mov
out
inc
movsb
xlat
push
xorb
shlb
add
insl
dec
and
lock
je
imul
and
mov
inc
lret
adc
pop
jle
outsb
lret
add
sbb
outsb
and
sbb
mov
sar
mov
outsb
or
inc
push
mov
push
dec
jp
cmc
ja
mov
push
and
lods
jg
ror
cltd
add
mov
pop
loop
mov
add
hlt
into
mov
mov
dec
jmp
gs
rcrl
fiaddl
negl
mov
fs
ja
and
add
cmp
push
cmp
sub
pushf
fs
jmp
roll
or
cmpsb
dec
xorb
cmpsl
xor
cli
dec
leave
push
mov
cwtl
subb
mov
ljmp
jmp
mov
jle
ret
mov
jmp
jmp
mov
int
jo
inc
js
push
sbb
mov
cld
and
jg
lea
sbbl
or
dec
daa
arpl
jge
and
pop
rclb
lahf
ficomps
xchg
lahf
call
mov
fdivl
int
mov
mov
pushf
fldlg2
inc
dec
push
mov
insb
adc
js
js
outsl
adcb
fidivs
das
lods
push
adc
xchg
fldcw
push
push
popa
sbb
rcll
mov
cmp
lcall
out
repnz
rolb
dec
imul
mov
inc
inc
cmpb
push
icebp
and
push
stc
sbbl
dec
lret
popa
fmulp
inc
jp
inc
dec
push
mov
or
cs
bound
mov
jb
ja
push
cli
push
test
out
popa
and
cmp
mov
fcomps
test
jmp
mov
push
pusha
sub
push
aaa
jl
sub
xchg
xor
adc
push
addr16
test
notl
in
xchg
in
cmp
stos
dec
stc
push
cmp
lret
sub
fucomi
push
pop
hlt
sub
fldl
adc
lds
xchg
sahf
jbe
jno
btr
mov
and
daa
inc
sub
loopne
pushf
fisttps
sbb
pusha
in
test
mov
inc
mov
clc
inc
sbb
je
or
mov
fmuls
loope
jbe
xchg
add
mov
pop
pop
popf
mov
daa
pop
xchg
lods
pop
outsb
out
inc
inc
inc
std
mov
push
mov
out
xchg
xchg
mov
pop
int
add
xchg
loopne
adc
or
in
add
dec
sbb
jns
xchg
xor
dec
xchg
cmp
or
lahf
sbb
psrld
in
mov
pop
pop
rcrl
dec
mov
scas
or
jg
icebp
ljmp
leave
das
push
xor
pop
scas
cs
xor
cld
mov
mov
stc
sub
mov
dec
mov
cmp
lahf
cmp
xor
into
sub
cmp
bound
adc
shr
sub
lea
xlat
xor
mov
test
cwtl
imul
fs
es
pop
rorl
loope
ret
outsl
add
sbb
aam
cwtl
out
in
mov
call
js
cmp
adc
sbb
cmpsl
cltd
sub
roll
and
add
xor
or
push
mov
mov
jl
imul
in
ret
into
test
negl
shlb
push
enter
test
add
xor
dec
je
fstpt
fwait
push
fcoms
xchg
scas
call
stos
stc
or
add
sbb
xchg
jae
in
pusha
xor
sub
lock
aaa
dec
add
pop
jge
jle
loop
adc
cmc
addr16
inc
add
mov
std
and
mov
xchg
inc
inc
out
sub
jge
flds
xor
mov
and
xchg
ss
rol
lret
pushw
lods
mov
in
push
lahf
sbb
sub
out
xor
pop
xor
mov
pop
bound
pop
or
stc
mov
fsubrp
mov
mov
jbe
insl
lods
scas
push
pushf
and
add
inc
sbb
mov
sub
dec
jle
adc
enter
sbb
pop
xlat
jle
enter
xor
or
cvtpi2ps
sub
or
xor
xchg
xor
cltd
stc
or
add
aad
test
fiaddl
adc
mov
cwtl
jae
in
test
rol
out
sbb
dec
push
call
fwait
push
mov
lods
mov
roll
jae
aaa
fwait
lea
jne
mov
push
into
add
push
leave
push
mov
or
pushf
out
add
dec
mov
sbb
jne
les
in
ret
clc
jl
mov
testl
jp
cltd
not
mov
imul
sbb
in
or
cli
scas
xchg
into
push
pop
movsl
xor
inc
pusha
pop
nop
clc
inc
mov
or
mov
lea
inc
jb
xlat
push
jo
jbe
in
dec
ud1
sbb
xlat
and
clc
cmp
clc
inc
flds
mov
clc
mov
and
mov
icebp
xor
insb
and
lret
jns
sti
sub
cwtl
lea
inc
rcl
dec
or
int3
push
and
movsb
repnz
and
or
push
icebp
scas
outsl
xchg
ss
xchg
test
loopne
imul
hlt
scas
cli
les
clc
inc
inc
aas
popa
mov
iret
and
in
cmpsb
mov
jmp
dec
mov
push
in
imul
bound
mov
mov
adc
cld
sbb
shrb
enter
cwtl
shrl
lea
loop
aas
xchg
cmp
addr16
cmp
inc
rol
push
mov
xor
cmpsb
xor
xchg
pop
lret
mov
sub
lods
dec
cmp
in
xor
out
xor
dec
jne
lods
jl
movb
jmp
mov
loope
mov
xlat
push
or
push
adc
mov
lahf
outsl
stos
add
test
neg
adc
lods
push
rorl
dec
sub
and
scas
dec
roll
pop
inc
jbe
xchg
cmp
call
jbe
xor
sahf
xor
push
cmp
push
pop
icebp
mov
sbb
jmp
in
sub
repnz
data16
imul
pop
clc
in
fbld
fs
mov
out
ds
jb
insl
mov
pop
enter
xor
jne
lret
mov
js
lahf
movsl
in
mov
sub
cld
mov
adcl
cmp
pop
adc
andb
mov
sbb
add
lods
mov
xchg
xor
mov
gs
mov
ljmp
mov
and
jo
mov
xor
mov
lods
lahf
sbb
cmp
xor
mov
mov
xchg
popa
cmp
loope,pn
sbb
or
pop
jns
sahf
add
push
testb
pop
mov
push
lds
or
mov
into
pop
mov
imul
dec
mov
std
in
xchg
aas
jno
fwait
aaa
fnstsw
dec
bnd
cmp
xlat
inc
jnp
sbb
mov
fistpl
sti
loopne
push
inc
in
sub
mov
stos
fists
jb
loope
add
jnp
fisubs
dec
xchg
push
mov
cli
mov
ds
xor
in
cmp
add
mulb
lret
out
xchg
popa
mov
jno
or
adc
sarl
and
push
push
jns
dec
cmp
lcall
movsl
shrb
jp
pop
xchg
cli
inc
enter
das
mov
in
std
in
jl
test
push
sbb
int3
sahf
hlt
xlat
or
stos
pop
jecxz
lods
lods
stos
jmp
pop
pushf
cmpsl
cmp
pop
imul
iret
fiaddl
and
push
arpl
icebp
xor
cmpsl
ljmp
mov
insl
popa
fstl
mov
lock
lock
roll
push
pop
dec
fwait
push
cmove
ror
enter
movsl
divb
or
or
jno
cmpsb
mov
push
fistpll
adc
inc
daa
mov
add
xchg
lret
push
xor
jl
jg
cwtl
andb
or
push
in
in
push
adc
mov
decb
psllw
jp
cmpb
gs
sbb
in
jb
xor
or
and
dec
popf
loopne
push
mov
lods
divb
stc
xor
xchg
ss
int
pop
ret
lret
and
dec
or
sbb
mov
rorl
fwait
cmpsl
push
push
mov
cmpsb
lret
lahf
jmp
int3
ljmp
cmp
aad
lds
ret
jo
test
nop
popa
fucomp
cmpsl
lret
xchg
stos
cli
mov
rcrb
iret
insl
mov
adc
dec
in
das
push
push
mov
dec
sbb
hlt
clc
stc
add
out
movsb
pop
mov
inc
xchg
jb
adc
sub
jg
sti
mov
cmpl
cmp
mov
arpl
sub
lahf
fidivrl
jge
fbstp
enter
fmulp
sahf
rcll
inc
cmp
inc
mov
and
adc
rclb
data16
fcomps
mov
lock
movsb
xchg
or
jo
lret
inc
loope
cmc
pop
test
pushf
sub
test
rorl
addl
push
fnstcw
pop
shll
fidivs
push
mov
dec
or
and
cltd
or
jne
shll
cmp
pop
push
insb
aaa
mov
xor
push
jmp
repz
loop
mov
lcall
sbb
xchg
dec
and
ds
add
cli
inc
mov
adc
pop
lods
aad
je
gs
stc
lret
sbb
out
inc
mov
sub
push
jge
xor
mov
outsl
fcomps
cmc
mov
xchg
sarl
fisubs
sahf
jecxz
mov
jno
pop
xchg
xlat
fsubr
pop
xor
pop
int3
add
jge
pop
nop
enter
aam
pmaxsw
xor
repnz
rorb
mov
andb
jb
stos
cltd
test
push
push
pop
push
push
aas
xchg
mov
xchg
dec
leave
sar
stc
js
aas
test
cmp
xchg
nop
pushf
scas
adc
or
lahf
pop
mov
pop
jl
lods
mov
push
adc
loope
xor
cmp
sub
pop
imul
sbb
clc
pop
call
enter
sahf
jae
mov
and
or
sbb
scas
inc
xchg
out
fnstenv
shlb
or
push
cli
jnp
addr16
cmp
jbe
fs
mov
mov
mov
pavgb
in
insb
xchg
stos
mov
push
stos
sub
ja
in
into
sbb
test
push
sub
cmp
push
mov
sub
std
xchg
ja
inc
lds
std
insb
jle
dec
rcr
push
xor
sbb
lahf
rcll
mov
shrb
jae
cmp
xchg
mov
cmp
xor
faddl
mov
insl
push
icebp
or
rcr
lahf
divl
mov
mov
jl
lds
inc
or
adc
pop
repz
push
push
call
and
pop
sub
jge
xchg
and
icebp
jl
test
outsb
mov
fwait
dec
and
cwtl
stc
lods
fdivrs
in
xacquire
push
imul
rorb
lods
mov
push
bound
movsl
out
aad
aam
lds
pushf
or
push
add
cltd
int
jle
addb
imul
jno
loope
push
and
and
xor
mov
and
xor
mov
mov
aam
xchg
jecxz
int
jl
xchg
cmp
jecxz
insl
or
out
lret
das
mov
pop
xor
push
and
xchg
sub
inc
or
mov
out
lret
inc
int3
add
popf
adc
rolb
jbe
int3
insl
jne
nop
scas
inc
mov
scas
pop
dec
jmp
fcmovb
xor
ljmp
cmpsl
es
mov
jecxz
fisubrl
outsl
int
repz
movsl
push
imul
ret
cmpsb
cmp
or
jne
js
sbb
subb
pop
movsl
xchg
mov
mov
and
stos
in
adc
push
jo
fs
fcmovnu
xchg
mov
pop
mov
shrb
movsb
out
daa
cmp
sbb
out
rorb
pop
dec
call
mov
and
or
inc
dec
aaa
mov
cwtl
mov
inc
out
test
sub
rorl
mov
hlt
pop
movsb
leave
mov
fs
and
push
xor
fwait
stos
xchg
fcoml
push
cmp
stc
imul
lods
cmp
jae
out
stc
aas
rorb
lea
jecxz
rorb
mov
mov
cmp
lahf
lret
ror
xor
jno
subl
adc
fcoml
aaa
cmp
xchg
inc
push
ret
pop
out
xchg
jo
pop
dec
ret
icebp
sbb
or
imul
inc
push
inc
cmc
ljmp
movsb
ss
mov
cwtl
pusha
bound
sub
divl
jae
jmp
pop
dec
test
hlt
daa
add
push
jmp
jg
cmp
aas
leave
cmpsl
pushf
jle
testl
fwait
lds
fyl2xp1
out
dec
or
or
aam
mov
pop
mov
and
mov
aam
lods
inc
leave
nop
sbb
xor
setae
sub
sti
xor
adcb
inc
mov
test
mov
in
sub
ds
outsl
stos
sbb
sbb
cmp
sti
cmpsl
adc
fnstenv
in
lds
jb
cmp
or
aad
fadds
push
cltd
jne
sahf
icebp
jg
pop
jg
add
sbb
loop
adc
fldcw
jg
jb
fwait
lea
cmp
dec
xchg
repz
imul
adc
mov
adc
dec
rdpmc
push
and
mov
mov
mov
xorb
out
or
in
pop
jnp
xlat
xlat
cmp
stos
sub
mov
movsb
fiaddl
shlb
mov
jno
inc
xchg
iret
insl
xchg
dec
roll
xor
stc
xchg
xor
sub
mov
daa
mov
sub
pop
push
sub
fdecstp
rcrb
mov
mov
sub
lock
sub
fisubrl
xor
shl
dec
mov
mov
mov
loope
fsubr
out
mov
sbb
or
mov
in
mov
jmp
lods
lds
xchg
add
lahf
add
lods
out
and
clc
cld
repnz
or
sub
nop
rorb
mov
test
adc
jg
fxam
push
mov
inc
fisttps
pop
mov
rclb
ds
call
push
inc
jnp
push
in
popf
and
lea
adc
out
mov
dec
stos
mov
sub
inc
mov
add
sub
cmp
sahf
shrb
es
in
sbb
jnp
aas
mov
dec
or
lea
jno
int3
repnz
adc
inc
push
fildll
mov
mov
andb
xor
movsl
sub
and
mov
std
sub
sbb
push
outsl
inc
fsubrl
adc
out
push
jl
or
cmc
cmpsl
push
insl
pop
xchg
ss
push
cwtl
inc
xor
sub
jmp
xchg
sub
stos
jge
pop
jl
sub
add
add
sbb
shlb
adcb
cmp
iret
and
jge
das
lahf
fsubrp
sti
lods
pop
push
cmpsl
loop
push
xor
and
xchg
loope
mov
ds
daa
in
pop
cmp
pusha
stc
pop
in
sbb
inc
ficomps
jecxz
movb
fwait
cwtl
shrb
dec
cmpsb
sub
xor
sbb
fistps
xor
pop
or
push
movsb
sub
insl
mov
fcomip
lret
jne
dec
fwait
mov
into
xadd
xchg
inc
pop
in
sub
sub
adc
fbstp
push
sbbl
or
insb
cmpsl
add
sub
lret
mov
js
aad
cmp
arpl
shl
arpl
sub
pop
ffreep
aas
xor
aaa
hlt
out
cmp
mov
sbb
cld
mov
xchg
dec
push
arpl
add
sbb
sub
mov
pop
adc
scas
stos
sbb
dec
test
js
and
mov
stos
xchg
push
iret
and
int
pop
mov
movsb
ljmp
xchg
cmp
jmp
xchg
add
call
jns
cmpsl
repz
pop
bound
jmp
lahf
or
lock
ret
sahf
sbb
and
pop
fcmovbe
lods
in
lock
pop
fisttps
add
stc
out
int
in
cmpsb
push
ret
sbb
fstpl
addr16
scas
xchg
popf
repnz
xchg
jg
std
fcompl
jl
rolb
js
imul
in
sti
or
sbb
call
out
loope
sub
dec
pop
push
xchg
sbb
icebp
mov
cs
push
pop
rcrb
ljmp
jnp
js
jne,pn
in
cmpsb
pusha
sub
in
mov
lret
push
mov
sahf
lods
test
cmp
mov
add
push
lahf
lcall
sub
adc
cmp
jno
sarl
in
neg
jmp
cmp
loop
inc
data16
repz
push
pusha
fnstenv
pushf
xlat
movsb
push
insl
das
mov
lods
lret
outsl
xor
aaa
mov
sbb
pushf
and
leave
pop
pop
push
sub
lock
fst
cmp
adc
jl
xchg
mov
ficoms
into
loopne
mov
mov
in
lcall
loop
aas
test
mov
inc
pop
push
ja
jmp
jmp
sbb
sbb
outsb
rclb
mov
aad
push
push
hlt
outsb
cs
fsubs
scas
and
pop
pop
sbb
or
popa
jnp
sahf
fbstp
sti
lds
adc
dec
cld
push
inc
push
sbb
cli
stc
sbb
popa
es
sub
and
mov
in
lret
sahf
jae
inc
inc
adcl
ja
or
pushf
cmp
ljmp
adc
adc
adc
ja
stos
adc
mov
mov
pop
push
pop
or
push
lret
jl
das
mov
inc
mov
inc
xlat
xor
jo
enter
sti
into
dec
sbb
pushf
jnp
fsubs
pop
jo
in
jo
enter
insb
inc
call
lock
push
mov
mov
in
mov
lahf
pop
aam
call
push
and
out
das
jnp
nop
outsb
ret
mov
pusha
bound
jb
dec
mov
in
arpl
mov
hlt
int3
xchg
fnsave
je
lea
xchg
aas
dec
mov
pop
test
sahf
in
out
sbb
sub
sbb
or
mov
xchg
aaa
popa
in
mov
out
gs
xchg
pop
in
inc
popf
outsb
or
add
insl
or
pop
mov
lret
out
sub
test
lcall
stos
cwtl
rorb
cmpsl
sbb
or
out
lret
add
cmpsb
dec
cmp
inc
cmc
inc
pop
cmp
fs
pop
and
jns
xor
sub
and
adc
sbb
and
mov
idivb
add
push
mov
in
iret
lret
mov
sti
enter
cmp
outsl
xchg
jecxz
rorl
push
into
es
jg
inc
sub
sub
jle
xor
sti
stos
test
sub
sbb
aam
call
ret
aam
push
gs
lcall
insl
int
push
scas
push
dec
imul
lret
mov
leave
leave
iret
inc
pop
or
outsl
push
in
dec
ja
cmpsl
pop
xchg
and
xor
xchg
or
and
loope
and
mov
mov
arpl
inc
add
sti
popf
fsubrs
jg
cmpsl
js
xor
pop
mov
test
sbb
test
and
aam
aaa
pop
xchg
xchg
cmp
mov
aam
and
pop
sbb
pop
aas
and
sub
lcall
in
decb
inc
stc
in
xchg
ret
jmp
mov
mov
xor
and
mov
mov
mov
addl
push
movl
sbb
outsb
sti
int3
sub
call
adc
fistl
mov
in
orb
aaa
ret
pop
xchg
outsb
push
lock
dec
xlat
inc
mov
mov
clc
mov
xchg
call
repz
add
jmp
push
xchg
mov
movsb
enter
push
fiaddl
sti
mov
xor
lods
out
movsl
outsl
daa
mov
jle
inc
jp
sub
or
dec
not
in
insl
mov
mov
or
sub
pop
into
cmpsl
dec
mov
cli
inc
push
call
mov
leave
cs
sub
cli
rep
mov
loope
mov
or
xor
dec
push
mov
rcll
xchg
jne
mov
aaa
cmc
mov
test
jbe
les
lahf
cli
lret
and
js
sbb
out
psrlw
xor
pop
lods
xchg
mov
lods
les
cmp
ljmp
sahf
adc
lods
sbb
imul
cli
insb
xlat
pop
mov
fisubrl
daa
inc
add
inc
lcall
xor
sub
fcoml
and
pop
push
cmp
ucomiss
or
sbb
or
insb
push
popf
shll
shlb
xchg
ljmp
sub
lock
inc
pop
das
insl
lret
mov
outsl
aas
and
dec
mov
std
out
in
andl
pop
int3
nop
popa
dec
call
loope
jb
cmp
push
in
ret
cmp
mov
pop
cmp
sub
mov
test
push
outsl
dec
jne
xchg
mov
xchg
and
and
leave
arpl
pop
push
fimuls
icebp
ret
sub
pop
adc
dec
leave
xor
fadd
mov
out
push
and
je
xchg
sbb
int3
mov
pop
addr16
adc
ret
aaa
cmc
iret
mov
addr16
xlat
icebp
ss
jb
pop
jecxz
jecxz
push
push
xchg
fcmovu
int3
mov
test
xchg
iret
mov
mov
mov
fisubs
test
sbb
jne
add
inc
ss
jb
inc
pop
sbb
push
test
xchg
inc
jmp
mov
ficomps
icebp
pop
jo
test
cmp
jmp
or
std
mov
cld
push
cmp
mov
aas
sahf
mov
imul
xor
xlat
jns
mov
fsubs
cmpsl
jae
push
lahf
sub
mov
popa
mov
pop
add
push
shrb
fcmovb
lods
pushf
addr16
insl
out
mov
popf
aam
cltd
xor
repz
pop
dec
jns
mov
shll
push
sub
lcall
and
insb
adc
xor
stos
xor
sahf
adc
mov
int3
inc
sbb
je
jb
mov
rcrl
add
xor
adc
xchg
push
sub
pusha
cli
jle
xor
fidivrs
push
insl
mov
add
push
out
inc
dec
clc
out
dec
icebp
fnstsw
mov
jo
mov
aam
push
iret
test
decl
adc
sbb
lret
aad
packssdw
mov
add
mov
cli
cmp
or
jbe
jle
pop
or
insb
pop
adc
jb
cmp
loopne
jnp
add
and
mov
dec
cmp
pop
inc
mov
stc
inc
and
xchg
outsl
dec
mov
xor
or
enter
repz
dec
call
mov
dec
inc
movsb
into
fdivl
cmp
xor
sub
xacquire
test
out
mov
push
lods
jae
adc
mov
data16
arpl
jo
sub
cmpsl
jp
icebp
out
mov
repz
inc
lds
aas
and
sub
or
sub
jmp
mov
js
mov
movl
outsb
std
add
push
add
stos
dec
out
push
mov
mov
jns
and
ret
outsl
imull
push
sub
ljmp
xor
jo
or
shrl
pop
jmp
bound
es
mov
mov
add
lds
xor
pop
ret
pop
nop
jnp
cmc
xor
popf
movsl
inc
dec
sbbl
sub
mov
cmp
in
inc
jnp
imul
mov
fcoml
orb
insb
sub
cld
sub
mov
push
sub
ja
scas
add
lock
sar
mov
inc
jbe
mov
sbb
lahf
push
push
and
lods
mov
fisubl
outsl
lods
outsl
sbb
or
xchg
negb
andb
ja
test
mov
test
testb
out
loop
leave
and
mov
pop
add
pop
fcmovu
loope
fistpll
jno
rorb
jae
jae
test
mov
and
mov
leave
pop
or
mov
cwtl
push
xchg
popf
int3
mov
lea
fldt
xchg
cmp
cmpb
insb
xchg
out
sbb
mov
sub
mov
and
ja
and
pop
mov
out
leave
repnz
sbb
xchg
rcll
ficomps
repnz
mov
out
movsl
bound
adc
add
dec
mov
add
xor
lock
fidivrl
cwtl
jae
scas
or
dec
aas
xchg
xor
imul
int3
repnz
aaa
insl
outsl
cltd
xor
mov
int3
add
xor
stos
mov
xor
or
inc
lcall
incb
out
call
ret
in
cmp
cs
xor
adcb
pop
std
mov
xor
jne
mov
xchg
pusha
jg
imul
or
push
push
mov
andl
xorl
scas
dec
jno
jmp
lret
fistpl
and
sbb
inc
xlat
in
jne
pop
jmp
das
call
jne
xchg
sbb
inc
sub
outsb
pop
ss
cmp
jmp
xchg
ljmp
dec
add
push
mov
dec
xlat
dec
mov
mov
outsl
notl
in
xor
push
add
push
pop
imul
add
mov
adc
aaa
stos
sbb
jl
aaa
test
pop
insb
imul
pop
sub
xchg
cmp
movsl
negl
aad
fst
cmp
adc
xchg
loop
inc
jae
jae
push
mov
mov
inc
mov
mov
popa
cmp
or
pop
jbe
pop
outsb
xor
xor
call
outsb
sbb
xlat
xchg
int
scas
outsb
xor
sbb
push
lea
xchg
sbb
fldcw
lahf
jl
xchg
sbb
mov
push
scas
insl
xlat
or
add
fbstp
cmp
inc
xor
std
push
sub
xchg
inc
mov
push
repnz
push
fldt
push
add
ljmp
sub
mov
pop
mov
or
sbb
mov
iret
cli
int3
pop
xor
ret
push
clc
cmpsl
mov
push
in
mov
dec
jmp
movsl
adc
mov
push
pop
cmc
push
lea
and
test
rcrb
outsb
and
adc
mov
mov
out
adc
and
add
adc
mov
lret
inc
xor
dec
push
lret
add
out
in
clc
sub
cmpsl
sbb
sub
mov
js
inc
xchg
xchg
data16
sub
loop
jmp
lcall
ja
cli
pop
loopne
int3
xlat
and
inc
fwait
adc
dec
jmp
js
ljmp
ret
loopne
leave
dec
stos
push
add
add
mov
mov
in
loopne
jne
test
lods
sub
lahf
fdivrs
adc
jg
fs
es
test
sahf
or
pop
data16
sub
fnstcw
stc
out
js
enter
movsl
cmp
or
imul
pop
pop
hlt
push
test
jl
add
inc
push
pop
outsb
pop
mov
push
adc
mov
dec
mov
sub
icebp
xor
mov
fstpl
jg
dec
sub
stc
pop
mov
enter
sub
sub
ror
pushf
sahf
mov
push
mov
ficoml
lods
pop
aad
xchg
or
incb
sahf
xor
mov
xor
repz
inc
push
ja
jns
or
or
jl
pop
xchg
out
pop
xchg
mov
sub
stos
cmpsb
andb
cmp
mov
and
and
data16
insb
add
and
adc
adc
in
cmp
dec
jge
insb
test
stos
push
stc
and
or
fdivrs
inc
pop
rorl
fwait
mov
icebp
push
fbld
jnp
inc
sub
push
add
arpl
pop
push
sbb
dec
je
fstpl
dec
out
divb
ret
and
jge
repnz
js
cmp
sahf
jl
loopne
pop
cltd
mov
adc
or
xchg
testl
jno
nop
sbb
add
pop
sbb
in
jg
pop
add
loopne
cwtl
lods
stos
pop
scas
aad
cmp
push
inc
out
sbb
adcb
pop
aas
or
xor
pop
cmp
mov
xorl
adc
xor
or
or
add
mov
les
and
lret
jnp
loope
pop
mov
adc
jae
ret
loopne
loop
pop
loop
mov
fs
cmc
mov
testl
lcall
push
out
inc
mov
cmpsb
mov
dec
shlb
pop
fdivr
insl
dec
lods
icebp
out
mov
dec
mov
xor
mov
jp
mov
xchg
lods
into
add
sbb
push
jo
scas
jp
fdivs
mov
fistpl
cltd
ret
pop
sbb
sub
cs
mov
test
pop
clc
pop
pop
push
push
cmp
pop
aas
imul
frstor
leave
cwtl
or
loope
sbb
and
and
out
xchg
test
mov
pusha
nop
xchg
jge
ficoms
mov
popf
idivl
int
lds
and
mov
adc
and
push
test
adc
jno
pop
sub
or
cmp
fs
add
call
aad
cld
xor
adc
and
cmp
push
mov
int3
jb
ss
insb
scas
dec
dec
and
addr16
sahf
mov
push
jle
mov
pop
push
push
cmp
outsl
inc
and
lahf
sub
push
movsb
xor
xor
lods
pop
cmp
adc
jp
mov
inc
hlt
dec
inc
sarl
bnd
jne
or
jo,pn
enter
mov
imul
movsl
bound
push
fistl
es
mov
pop
jmp
out
pushl
test
outsl
lds
mov
dec
xlat
push
adc
mov
adc
stc
sub
sarl
jne
jmp
mov
add
addr16
out
into
or
imulb
addr16
pop
sti
xchg
add
shll
push
cmp
out
mov
insl
js
xchg
rol
jo
or
xchg
scas
xchg
jno
jns
fnstcw
fcoms
imul
adc
mov
jnp
and
sub
fiadds
and
adc
pinsrw
xchg
xor
add
aas
into
rcll
iret
jns
lods
dec
or
out
or
mov
inc
dec
pop
xchg
leave
movsb
add
movsb
dec
int
sbb
subl
pop
cwtl
push
idivl
shll
inc
jge
cli
in
pusha
pop
ror
cmp
or
push
mov
rcr
lret
cli
js
and
scas
sar
jae
pop
lods
mov
fdivr
insl
cmp
inc
inc
hlt
in
andl
test
addr16
sbb
fadd
jae
imul
sbb
mov
stos
mov
jecxz
jb
mov
inc
cmpsb
xchg
scas
scas
addl
cmc
dec
adc
ljmp
push
outsb
test
fildl
mov
pop
pop
jle
sub
stos
les
stos
clc
jbe
iret
aam
out
out
daa
sbb
das
int3
cmp
jp
sub
push
das
xor
jge
dec
jmp
sarl
and
add
dec
push
or
pop
xchg
cs
inc
mov
add
ljmp
movsb
push
mov
pop
cmp
mov
std
ret
imul
test
pushl
and
jo
mov
imul
cmp
mov
adc
dec
popf
push
inc
enter
jns
inc
lds
push
nop
sahf
fildl
inc
cmp
lock
push
adc
cmp
imul
lret
mov
sub
sahf
mov
dec
mov
lods
int3
rcll
or
pop
out
dec
sub
push
sbb
arpl
adc
out
repnz
cmp
sbbl
dec
mov
xchg
adc
mov
movsl
in
xchg
or
xor
ret
sbb
and
add
or
dec
mov
lods
ss
icebp
sti
fisubs
mov
loope
push
les
js
iret
and
dec
mov
ficomps
xor
cmp
out
xor
cmp
xchg
test
and
dec
push
xchg
aad
sbb
jmp
mov
mov
fwait
ret
and
sub
dec
mov
pop
stos
lock
mov
push
pushf
shrb
push
scas
scas
dec
fisubl
rcll
sarb
cmpsl
mov
push
add
inc
push
arpl
cltd
inc
je
sahf
aaa
aas
lea
mov
or
jnp
cmp
jnp
inc
lahf
push
jmp
adc
js
cmpsb
xchg
cmp
dec
cli
or
ljmp
aam
outsl
mov
xchg
cltd
or
repz
ds
outsl
and
bts
aaa
rcrb
adc
cmp
stc
sbb
adc
jl
shrl
ret
jl
lea
mov
shll
dec
imul
out
lea
fs
push
lods
std
and
je
repz
inc
aad
fistpl
ret
inc
xor
xchg
push
pop
das
scas
adcb
push
inc
ds
sti
add
sti
fdivrs
movsl
push
pop
push
push
push
es
in
mov
pop
std
pop
jnp
mov
das
jecxz
je
testb
or
jp
pusha
or
insl
sub
sbbb
insb
cld
or
push
cmpsb
mov
int3
and
daa
js
push
rolb
add
test
aad
das
or
xlat
push
in
sub
cwtl
in
sbb
jl
pop
cmp
add
imulb
mov
jp
movsb
xchg
xor
sahf
sub
xor
das
es
add
fidivs
mov
rol
sahf
cmp
dec
and
push
popa
arpl
jge
push
cltd
pop
xor
ds
out
test
cmp
jg
popa
sub
aad
lcall
daa
inc
sub
incl
pop
out
and
cmp
ficomps
les
push
pop
mov
xor
scas
imul
or
pop
push
out
ja
cmp
cmp
lock
add
insb
sub
iret
outsl
jne
xor
pop
iret
cmovb
pop
insb
mov
xchg
lcall
call
xor
mov
pop
movsb
lods
and
xor
ja
pop
int
sub
adc
inc
jle
jns
mov
xor
xchg
dec
cmp
enter
cmpl
sbb
int3
mov
fmuls
xchg
adc
fs
jg
jbe
into
loopne
mov
pop
add
mov
and
add
sbb
mov
test
aaa
adc
shrb
pop
hlt
add
nop
jmp
roll
push
fstps
add
lret
nop
inc
or
call
push
in
add
or
incb
leave
sbb
test
xchg
sub
mov
push
dec
jg
scas
inc
and
mov
pop
xabort
inc
inc
sub
sbb
jp
cmp
jmp
or
call
xor
inc
sub
cwtl
shlb
aad
push
xchg
out
pushf
jns
jg
or
cli
bound
rcl
rorl
pop
shll
scas
cmp
xorb
add
test
jmp
in
rcl
add
iret
aas
mov
addr16
sti
mov
in
and
mov
pop
xchg
sbb
sub
xchg
into
fadds
or
stos
adc
popa
or
jp
xor
aaa
inc
push
inc
adc
data16
push
ret
push
dec
fcmovnb
or
iret
cmp
imul
or
sbb
xrelease
sub
xor
je
cmp
pop
je
int3
scas
push
data16
sub
inc
lret
pop
xchg
or
adc
and
or
mov
mov
cmp
cmp
lea
sbb
lahf
sbb
sub
jo
and
loope
neg
push
mov
aaa
pop
lea
sbb
push
push
test
adc
cltd
pusha
xor
mov
push
into
loope
cmpb
dec
call
jg
cmp
mov
adc
mov
inc
shrl
mov
sub
cmp
cmp
fnstcw
jb
and
scas
jne
mov
adc
pop
pop
in
sbb
loopne
sbb
push
inc
mov
push
fildl
cld
scas
aam
or
enter
dec
enter
xchg
data16
fadds
jl
push
stos
xchg
inc
sub
xor
in
sub
pushfw
xor
outsb
cmpsl
scas
ja
add
or
or
mov
rcr
repz
roll
stos
ret
sti
mov
jne
cmp
jecxz
xchg
mov
xor
sub
pusha
add
test
sbb
mov
push
pusha
push
inc
jg
pop
mov
ds
pushf
arpl
aam
ret
in
insl
rclb
mov
ds
lods
lahf
push
push
or
inc
imul
mov
jl
sbb
fistl
insb
dec
jne
and
cmp
iret
rorb
into
mov
mov
int
dec
pop
pop
scas
xor
mov
stos
popa
loopne
sahf
aaa
jecxz
bound
stos
or
mov
loope
xchg
cmp
sbb
xor
cmpl
enterw
sbbb
pop
je
test
pop
adc
ret
push
nop
nop
data16
cwtl
inc
jl
fistl
lcall
rclb
mov
xor
cmp
clc
subb
and
dec
int
sbbl
jae
jle
mov
xlat
jns
into
ret
mov
sbb
lahf
addb
xchg
repnz
dec
pcmpeqd
mov
cli
popa
aaa
in
rorb
adc
js
mov
aas
imul
enter
repz
das
inc
and
scas
dec
enter
fimuls
shll
call
sahf
adc
ljmp
fisttpl
xchg
jg
rolb
inc
jbe
xor
pop
push
je
or
je
mov
push
pop
lods
das
xchg
xor
cli
xor
dec
in
cmpsb
mov
cld
cli
hlt
mov
jmp
sar
cmpsl
or
push
cmp
nop
test
je
mov
pusha
lret
pop
pop
push
or
adc
xor
push
cmp
leave
xor
cmp
into
lret
adc
pop
call
sub
cmp
dec
shrl
mov
pop
add
shll
jns
cmpsl
cld
push
ja
flds
or
imul
loop
pushf
push
ss
fsubl
adc
jno
lea
ret
dec
add
jmp
dec
push
jge
arpl
lcall
push
shlb
and
xor
sbb
hlt
les
jne
xlat
push
adcl
pop
fnstcw
imul
cmp
loop
sub
or
shlb
test
and
mov
cmp
sahf
jmp
xchg
in
inc
mov
dec
jg
inc
mov
imul
push
cmp
pop
adc
fcmovbe
push
adc
arpl
fs
pusha
pop
inc
add
pop
fdivs
test
jecxz
mov
mov
ja
mov
mov
mov
dec
sbb
jbe
inc
aaa
rcl
fmull
mulb
fcomps
enter
jne
sbb
std
repz
daa
gs
hlt
adc
aas
out
mov
dec
and
stos
inc
pop
out
adc
ret
mov
stos
hlt
pop
xchg
data16
cmc
int
test
add
pop
scas
in
mov
xor
sbb
pop
xlat
ret
adc
sub
cmpsl
jo
pop
mov
mov
lret
push
out
sub
js
test
pop
les
push
cmp
ja
adc
inc
sbb
iret
insl
push
adc
mov
ret
dec
loop
lods
jno
mov
cmp
cli
mov
mov
int
in
push
sub
add
xchg
inc
sub
jne
clc
lret
ja
jge
pop
popf
add
or
push
adc
pop
jecxz
xor
jmp
inc
jbe
sub
push
mov
push
movsl
pushw
pop
push
or
int3
mov
sarl
movsb
fisubl
cli
mov
daa
ss
or
jbe
or
fsubrl
adc
adc
dec
add
dec
cmp
sarb
fwait
jl
jno
or
call
push
adc
mov
mov
int3
loopne
push
loopne
faddp
les
push
in
mov
sbb
sbb
jae
sbbb
dec
jl
sub
sbb
inc
out
mov
add
and
testb
xor
sbb
push
mov
or
and
testb
in
cltd
ret
adc
sbb
insb
jecxz
jne
andl
ss
shr
scas
cmp
in
jmp
dec
push
jnp
into
out
pop
push
iret
push
xor
je
test
xchg
mov
test
mov
or
xchg
rorb
inc
mov
rcl
push
aad
or
push
mov
addr16
mov
fldcw
mov
sti
add
inc
jns
int3
lods
pop
shll
ljmp
call
sbbb
add
and
shlb
xor
pop
dec
scas
xchg
aaa
scas
and
ds
mov
cmpsb
mov
mov
or
insb
xor
fidivs
pop
dec
fbld
jno
rcll
test
xlat
xchg
enter
popa
ret
test
cmp
fadd
mov
mov
jnp
sub
adc
inc
in
sti
mov
mov
cmpsl
jmp
mov
fs
int3
lcall
pop
xchg
jp
pusha
clc
out
lea
cmpsb
and
sarl
pop
sahf
pop
xor
bound
lock
std
dec
xor
jle
cld
out
jp
sahf
scas
cmp
push
lds
scas
fwait
stos
shl
push
sahf
or
mov
fwait
mov
mov
cmp
mov
jae
rcr
push
dec
ret
ds
pop
std
mov
xchg
dec
jg
jae
cmp
and
cld
test
lcall
sbb
stos
cmc
mov
sahf
push
aad
mov
loopne
add
stos
js
je
in
inc
jne
xor
shrl
xor
mov
or
lea
cmpsb
sbb
push
dec
cmp
jecxz
ja
decl
xor
cmp
imul
dec
lcall
mov
js
sbb
xchg
cmp
pop
adc
mov
out
rolb
inc
adc
inc
roll
gs
push
aas
push
divb
mov
shrb
cli
mov
jb
mov
jb
popa
dec
cmp
fisttps
call
fisttps
loope
movsl
aas
in
ds
sub
mov
push
mov
das
dec
das
pop
push
sbb
rol
bound
sbb
insl
jle
mov
adc
das
xlat
movsl
popf
mov
int
dec
xlat
pop
dec
aam
or
cld
popf
jecxz
hlt
push
outsb
push
test
loope
inc
sahf
cmpsl
inc
das
fwait
lcall
cmpsl
inc
push
cmp
out
loopne
pop
push
mov
hlt
push
push
push
mov
in
cmpl
inc
stos
addr16
shl
cmp
add
es
pop
jecxz
fnsave
xor
pop
scas
push
or
jmp
mov
mov
mov
rolb
jecxz
pop
pop
movsl
js
idiv
push
or
daa
mov
fnstcw
mov
inc
lahf
xor
mov
sub
dec
jecxz
test
addr16
pop
in
fildl
call
inc
push
mov
sub
movsl
mov
inc
outsb
js
pop
cld
clc
dec
mov
xchg
ret
icebp
std
jbe
xchg
jp
das
outsb
inc
lods
sub
push
out
adc
sbb
lock
and
jnp
mov
and
xor
rcll
pop
add
fistl
lahf
adc
sbb
rcrl
je
mov
jne
sarb
arpl
cmp
xor
lret
fldt
and
fisubl
cmp
pop
dec
lds
cltd
push
jecxz
add
add
in
or
sub
mov
icebp
in
inc
leave
lret
hlt
test
add
cmpl
clc
ret
xchg
stos
sbb
int
mov
jae
andl
dec
push
scas
xchg
das
push
mov
orb
fnstcw
mov
mov
and
lods
fidivl
xchg
icebp
pop
iret
leave
xor
adc
icebp
mov
xchg
lea
fnsave
jg
jns
dec
shll
and
cli
mov
jnp
mov
xchg
push
fmuls
xor
add
xchg
inc
mov
sarb
test
dec
adc
sub
out
mov
jo
add
stos
stc
stos
xchg
movsl
jne
push
adc
cmp
cltd
test
rcll
sbb
xchg
out
cmp
dec
out
adc
shl
sub
inc
loope
jb
dec
repnz
cmp
sub
dec
pushf
repz
loope
dec
stos
and
adc
jbe
pop
rcrl
cmpsb
lds
pop
and
aas
testb
call
sbb
xchg
dec
das
mov
fcomps
sbbl
pop
or
hlt
cmp
inc
jg
jo
mov
dec
pop
aam
jmp
rol
leave
jnp
insl
insb
cmpsb
imul
xchg
sbb
arpl
outsl
out
cwtl
push
popa
pop
lods
inc
aas
lods
mov
popa
sbb
or
inc
inc
xchg
cmpsl
int3
sbb
xor
rolb
dec
fdivrs
movsb
clc
rcrl
sbb
pop
movsb
insl
icebp
push
fisttpll
cmp
cmc
and
xchg
stc
or
xor
xor
xchg
xchg
ret
sub
mov
or
insb
popa
mov
roll
out
mov
inc
pop
fucompp
adc
cli
shrl
and
xchg
fucomip
in
add
shr
lea
cmpb
inc
xchg
out
pop
add
out
cli
push
cltd
cmc
push
add
or
mov
jbe
add
iret
pop
or
mov
add
popf
xchg
xlat
mov
js
repz
inc
push
dec
sub
sub
leave
sub
test
lock
mov
cmp
fwait
and
mov
shl
and
sbb
xchg
mov
mov
dec
js
fs
rolb
iret
shl
lock
popa
sbbl
andb
mov
cs
cmp
push
dec
adc
fstl
loop
fcoms
cmp
enter
test
adc
and
push
or
movsb
jecxz
mov
in
jb
mov
sub
out
xchg
out
jecxz
sbb
jmp
pop
mov
jecxz
cmp
lcall
lret
sbb
dec
xor
nop
or
out
add
outsb
jbe
add
pusha
fwait
xor
movsb
lock
push
sar
ds
fdivrl
xchg
lds
jl
pop
lock
pop
push
ret
imul
adc
mov
addr16
mov
sar
add
icebp
mov
cmp
cmp
mulb
cli
mov
repnz
daa
shll
and
mov
push
and
not
mov
mov
je
call
mov
outsb
add
sti
jg
push
leave
sti
jae
out
push
ficoml
push
dec
popa
rorb
popf
out
dec
mov
jbe
inc
pusha
aam
jl
repnz
and
jno
xor
jle
cmpsl
mov
inc
andl
or
push
test
push
and
mov
pop
hlt
pop
in
fisttps
cwtl
dec
inc
movb
push
xor
fnstenv
ret
imul
inc
jle
jg
mov
test
mov
lcall
push
jb
out
inc
lret
cmc
push
addr16
int3
jmp
sbb
mov
shlb
and
pop
lcall
in
jbe
fisubl
sti
pop
xorl
push
jae
roll
push
pop
xchg
insl
shll
sbb
lret
add
mov
out
daa
std
clc
xchg
push
mov
mov
xchg
cmp
or
pusha
xchg
mov
and
outsb
inc
ret
sbb
std
jl
xchg
mov
hlt
cld
xor
fstpt
sbb
mov
pop
div
insl
and
push
jb
mov
xor
ljmp
and
sbb
cwtl
push
inc
movsb
pusha
sbb
stc
push
stos
aad
xchg
cmpl
enter
mov
lds
fistpl
stos
cmpsl
lds
xchg
shlb
iret
sbb
inc
pop
call
call
addb
pop
in
stc
movsl
lret
inc
mov
add
mov
mov
sub
and
mov
in
orl
jne
sbb
add
jnp
pusha
in
push
stc
ret
inc
out
imul
fwait
cmp
cwtl
sub
jae
cmp
scas
insb
dec
xchg
xchg
and
movsl
adc
pop
cltd
popa
add
fwait
add
xlat
arpl
test
add
and
pop
mul
aaa
shll
cmpsl
sti
ja
inc
out
dec
gs
call
jecxz
negb
pop
cltd
pop
jb
stc
fs
in
je
fbstp
mov
repnz
popf
ficomps
arpl
ror
or
jnp
xor
gs
outsl
mov
add
cmc
inc
lods
call
fildll
outsl
sub
or
clc
shlb
in
cwtl
stos
mov
adc
in
push
stos
call
adc
sub
cmp
pushf
dec
shlb
adc
arpl
jb
jle
dec
pop
int3
push
fmuls
stos
js
aas
xor
adc
cmp
hlt
add
jbe
mov
pop
shr
fwait
jle
je
rcr
rorb
push
pop
dec
cmpsb
xor
dec
stos
movsb
sbb
cli
jb
xorl
in
int
stos
es
dec
mov
stos
ffreep
mov
and
mov
std
lock
mov
cmpsl
idivl
data16
fisttps
lcall
decb
repnz
xor
xchg
int
mov
mov
jl
mov
xchg
cmp
xchg
xlat
imul
call
fisubrs
pop
outsl
mov
and
dec
imulb
sub
dec
into
mov
call
sarl
xchg
jmp
cltd
in
jno
cwtl
popf
lahf
xchg
xor
jae
inc
jno
pop
mov
aam
sbb
stos
ss
iret
mov
lret
nop
mov
add
xor
or
jmp
shrl
stos
pop
shrl
xchg
aam
push
cmp
iret
adc
pop
cld
push
jl
cs
mov
and
fdiv
xchg
lcall
mov
les
push
sbb
adc
jo
dec
out
cmpb
ret
mov
mov
loopne
icebp
jno
test
dec
sbb
mov
faddl
aam
push
jno
push
xchg
enter
and
mov
aas
cmp
pop
push
icebp
cmp
addr16
mov
push
popa
cli
fstl
inc
cmp
repz
loope
xor
imul
repz
inc
fs
sbb
dec
inc
jb
pop
and
fcoms
pop
dec
test
cwtd
cmpsl
inc
int3
cmp
dec
pop
mov
add
rolb
or
lret
or
push
add
mov
out
ss
in
scas
push
xabort
pop
jl
ljmp
ja
outsb
xlat
pusha
loop
ffree
inc
inc
adc
out
push
mov
aad
ret
pop
adc
xor
shrd
sbb
stos
jb
push
pushf
shll
pusha
mov
jo
jbe
lahf
xchg
push
cwtl
push
stos
adc
fs
outsl
push
cmc
imul
repz
nop
sbb
lcall
xchg
les
xor
fildll
cmp
xchg
add
and
pusha
stos
jp
ljmp
push
sbb
jmp
scas
or
stos
add
daa
outsb
test
hlt
xor
push
jae
and
xchg
cli
xorb
sti
js
test
lods
sub
adc
and
int3
pop
fildl
adc
scas
test
push
dec
push
cmp
push
jle
lock
lcall
mov
push
pop
iret
scas
push
mov
jmp
add
add
addb
cmp
xorb
adc
mov
push
cmp
inc
test
push
mov
fistps
sbb
stos
js
std
imul
int
cmp
movsl
cs
push
fiaddl
fisubs
ficoms
pop
mov
test
and
mov
cmp
add
push
fidivrs
dec
adc
sbb
rep
mov
sub
loop
lahf
lret
fldl
inc
rolb
and
pushf
push
sahf
push
pop
mov
aam
jle
or
mov
fs
and
xor
cmp
test
pop
jge
adc
in
xchg
loope
dec
inc
imul
scas
or
movsl
cmpb
and
sar
fbstp
jns
jecxz
fsub
and
std
test
and
call
mov
sbb
xor
not
xor
adc
hlt
dec
mov
test
push
aam
stos
xchg
out
jecxz
pop
stc
dec
xchg
xchg
jb
and
fwait
call
loope
push
rorb
push
mov
icebp
xabort
xlat
les
or
cli
cmc
mov
icebp
dec
outsb
inc
mov
iret
jbe
mov
sub
xor
pop
rcr
cli
and
imul
cmpsl
inc
mov
jns
xor
inc
pop
xchg
dec
and
out
loope
shrb
cmpb
cltd
out
test
mov
cmp
insb
push
dec
cwtl
mov
push
in
pop
ljmp
adc
xor
mov
inc
movb
out
je
mov
mov
jbe
pop
cltd
or
stos
xor
lods
jno
xor
mov
xor
cltd
adc
mov
notl
cmpsb
xchg
pusha
cmpsb
dec
int
popf
adcb
mov
cmpsl
jl
mov
mov
mov
pop
xor
fsubp
mov
aas
loopne
lds
xchg
aad
jno
leave
pushl
jge
push
daa
repz
popa
mov
mov
cmovge
mov
xlat
and
jbe
xlat
pop
push
jne
repnz
pop
rol
sti
imul
ret
shl
dec
loopne
daa
inc
stc
jo
repz
push
leave
mov
clc
loop
xchg
lds
loop
inc
popa
les
pop
or
lds
es
popa
sub
das
pop
pusha
nop
pop
jmp
push
mov
cmpl
sbb
push
or
jne
rcr
add
test
xlat
inc
sub
sbb
loopne
rcrb
les
pop
push
or
insb
inc
add
cld
ljmp
filds
dec
fldenv
mov
ljmp
cs
dec
xchg
fwait
or
push
add
jp
adc
push
fsubr
pusha
fdivr
pop
rorb
stos
dec
or
pop
xlat
in
sub
push
pop
pop
and
jle
cli
inc
add
sbb
jne
sbb
mov
fsubr
addr16
leave
and
cmp
lods
lcall
adcb
jp
dec
cmpsl
frstor
or
decl
clc
add
in
in
sub
sub
push
rcl
mov
adc
lods
adc
dec
xchg
pop
rorb
mov
movsl
or
add
sarl
lret
ficomps
dec
dec
shlb
inc
rolb
aas
ja
sbb
xlat
mov
imul
sbb
cwtl
xchg
lock
pop
cmp
inc
lods
mov
ja
jl
mov
pop
stos
mov
sbb
dec
sahf
adc
ds
inc
jp,pn
ret
cmpsb
inc
sahf
add
push
roll
js
xchg
arpl
xchg
inc
push
movsl
aam
orb
xchg
out
dec
cld
push
jo
fistl
mov
gs
out
nop
inc
out
push
sub
test
jmp
push
sahf
jnp
idivl
shl
pop
out
into
xor
setbe
nop
rolb
jnp
fdivp
ss
add
push
mov
mov
daa
ljmp
in
mov
and
leave
adc
sahf
mov
inc
call
repz
aad
fwait
or
jnp
test
or
push
dec
repnz
aas
data16
cmp
out
sbb
adc
push
mov
sub
andl
sbb
or
shr
xchg
push
mov
or
lahf
pop
aad
push
and
pop
add
pop
sub
loope
cmpb
aaa
int
aas
out
insb
push
mov
outsb
pushf
mov
add
jb
ljmp
mov
push
std
xchg
mov
dec
xor
jge
mov
push
jns
sbb
jnp
push
fcomi
adc
push
sbb
or
inc
adc
lea
jge
leave
ss
adc
jae
dec
xor
jae
and
cwtl
sbb
dec
mov
mov
je
cmp
sub
insb
sti
inc
mov
dec
and
sbb
pop
jge
jmp
sbb
or
movsl
dec
jnp
cmp
sub
lds
rorl
inc
pop
xchg
std
cmpsb
iret
decb
insb
xor
popf
js
in
addl
mov
lods
pop
push
test
testb
sub
ret
scas
es
lret
test
mov
and
sti
push
nop
mov
leave
add
mov
push
and
movsb
jmp
xchg
xchg
lds
sti
mov
xchg
ret
rcrl
and
cmp
adc
aaa
sti
xor
add
cli
push
in
mov
ss
mov
pop
enter
in
jge
jl
mov
mov
test
push
divb
gs
add
push
xor
cmc
movsb
or
adc
pop
sbb
mov
fsub
mov
push
or
mov
loop
orl
aas
jmp
mov
lds
sub
jno
mov
lret
push
jne
xchg
xor
pop
mov
mov
fld
xchg
insb
push
mov
xchg
rcrb
js
int3
sbb
jmp
sarl
sbb
xor
sub
xchg
rcrb
dec
lods
adc
cmc
sbb
inc
shll
jo
popf
jp
sub
cmp
push
sbb
mov
lahf
push
or
iret
je
sbb
dec
lods
pop
insl
adc
add
call
aas
enter
int
xchg
sbb
xchg
sbb
loopne
inc
push
mov
mov
sbb
mov
out
jne
fstps
push
xor
and
dec
adc
mov
jg
enter
out
orl
rcrl
pop
ret
jne
aam
push
xor
add
push
mov
cltd
push
mov
dec
inc
out
call
imul
xor
and
loop
inc
idivl
cmp
frstor
les
push
mov
ficoml
and
cmp
sub
sahf
inc
shrb
cmpsb
outsl
jge
xlat
sbb
mov
lea
push
ljmp
cmp
aaa
mov
or
js
jl
add
pop
fnstsw
push
sub
loope
jp
ljmp
mov
jmp
es
mov
fcoml
test
dec
in
nop
xor
pop
fnsave
inc
mov
mov
fimull
add
mov
cmp
mov
bound
push
mov
test
fnstcw
inc
leavew
lea
dec
mov
inc
out
push
lret
mov
jl
loopne
xchg
sbb
pop
pop
inc
fwait
xchg
rorb
jp
lret
sbb
adc
out
out
mov
popa
or
push
lea
or
sub
sub
cmpsb
sbbb
scas
mov
lds
mov
leave
shrl
pop
jne
fidivl
lret
mov
inc
and
jbe
lods
shll
and
mov
sbb
in
sahf
jg
and
jl
icebp
sti
arpl
test
inc
ds
aam
insb
fcmovb
dec
dec
or
je
rolb
imul
dec
mov
sub
ss
out
xlat
mov
stc
bound
aam
mov
outsl
xor
mov
dec
push
jg
xlat
in
std
push
push
sbb
mov
test
mov
mov
into
lods
daa
dec
push
loopne
enter
lds
aam
mov
sbb
cmp
jnp
pusha
call
hlt
adc
add
hlt
adc
push
adc
xorb
pop
repnz
xchg
xchg
xchg
fnstcw
rol
xchg
jne
cmp
xchg
push
ret
mov
test
cmp
sbb
fcmovu
inc
jle
popa
mov
jp
mov
mov
pushw
loop
imul
pop
inc
pop
and
fadds
orl
xchg
shl
insl
ret
dec
leave
xlat
push
inc
mov
hlt
sahf
push
dec
ds
or
and
vsqrtss
adc
xchg
fmuls
idivb
sbb
fidivs
jge
xchg
dec
mov
pop
pop
loopne
bound
mov
mov
cltd
sub
repz
leave
cltd
add
sahf
adc
add
mov
popa
addb
out
scas
mov
jecxz
xchg
pop
movsb
adcb
and
xor
mov
lds
push
push
shl
mov
lahf
push
dec
sarl
sahf
inc
xor
scas
pop
sub
aaa
inc
xchg
pop
lods
mov
dec
in
or
and
dec
int
push
xchg
and
mov
ds
dec
repnz
mov
shlb
dec
les
in
sub
xor
or
movsl
jnp
js
inc
xchg
xchg
out
or
jo
mov
js
pushl
pop
dec
pop
jo
fcomps
sub
lret
lret
and
scas
movsl
sbb
movsl
pop
mov
sbb
dec
mov
mov
xor
xchg
mov
das
add
and
xchg
ss
or
cmp
add
mov
and
repz
xor
ret
std
xchg
cmp
and
addl
xchg
pop
and
or
dec
xchg
dec
mov
es
jp
test
jno
dec
add
pushw
inc
ja
iret
lcall
fnstsw
push
pop
outsb
loope
xchg
jno
cmpb
dec
in
xchg
jge
cmp
into
shlb
call
fisubs
arpl
jb
jnp
fcomi
fdivrl
pop
gs
cs
movl
jmp
mov
xchg
push
adc
lea
pop
push
add
pop
lods
push
inc
inc
hlt
cld
scas
xchg
aam
inc
cltd
jmp
inc
icebp
scas
jg
mov
sub
push
and
outsb
pushl
xor
out
inc
pushf
cld
add
es
inc
sbb
sbb
sbb
xlat
in
add
arpl
inc
int3
addb
ljmp
cli
sbb
daa
mov
aam
daa
inc
jle
xor
stos
sbb
orl
popf
in
call
test
repz
addr16
popf
push
out
cwtl
rolb
mov
lahf
ja
mov
add
cs
inc
movsb
aas
aad
ret
cmp
out
inc
cmp
jne
cltd
lods
or
xor
loope
shll
hlt
sub
dec
and
popa
mov
aaa
mov
push
dec
sahf
mov
push
into
adc
pop
pop
fsts
notb
add
pusha
repnz
rcrl
sub
cld
lahf
lock
in
mov
push
outsb
shl
push
stos
mov
fdivrl
test
jae
lret
scas
and
notb
sbb
in
jle
loopne
out
sbb
xor
pop
mov
movsl
mov
dec
pop
bound
jmp
adc
cmp
mov
bound
into
popa
jl
xlat
xchg
push
cld
jbe
aaa
ss
dec
imul
sub
jge
or
lahf
mov
scas
mov
mov
mov
mov
xchg
ss
mov
push
add
sbb
mov
push
lods
mov
int
jae
jb
mov
mov
hlt
pushf
sub
dec
repnz
mov
int
lods
mov
pop
jg
stc
lds
xchg
lock
aad
jae
dec
or
shl
pop
dec
or
jle
pusha
add
stos
pop
sbb
insb
stos
rolb
dec
xchg
fwait
sbb
xorb
rcrb
adc
jg
imul
sbb
std
ret
shr
mov
out
repz
sbb
or
and
xorl
cmp
jb
cwtl
into
popf
sbbb
cltd
pop
iret
cmpsl
xor
mov
pop
mov
dec
hlt
sbb
push
pop
jae
xor
ss
inc
lret
rorb
push
fs
adc
mov
mov
enter
popf
jge
in
orb
sub
xor
aaa
jbe
dec
xchg
in
cmp
cmpsb
cmpsl
insl
aas
xor
fisubrs
dec
inc
inc
mov
add
mov
sbb
push
jecxz
mov
in
xchg
bound
fnstenv
test
aas
adc
mov
inc
jno
sbb
loopne
sub
mov
movsb
scas
loop
shlb
jg
mov
jge
jns
out
inc
add
push
scas
dec
rcl
cmpsb
iret
inc
lock
mov
xor
repz
int3
clc
cltd
xchg
test
popf
fcomi
pop
hlt
sahf
rcll
and
add
stc
repz
cmp
enter
sbb
mov
aam
outsl
mov
cld
cmp
lods
jmp
shll
mov
jg
cmp
sbb
test
jnp
jne
popa
inc
pop
xor
pushf
jg
xlat
inc
sarl
imul
mov
mov
mov
inc
xchg
sub
popf
out
aaa
popa
fcomps
jecxz
pop
loop
or
pusha
pop
fucom
xchg
adc
inc
arpl
stos
cmp
mov
jmp
fnstcw
push
fdivl
adc
test
ret
lds
incb
jo
cmpsb
notl
mov
jb
je
insl
iret
push
xchg
mov
jle
push
mov
cmpsl
pop
adc
pop
push
and
mov
stc
sbb
pop
lock
fstps
movsl
jbe
ljmp
cltd
out
push
outsb
lea
test
dec
jne
aaa
lret
pop
popa
push
jl
mov
loopne
pop
xchg
mov
and
addr16
dec
aas
sahf
addr16
xchg
dec
push
fists
out
fcoml
popf
in
les
add
rol
mov
out
pop
mov
incb
dec
lahf
sbb
and
add
pop
xchg
mov
pop
jo
int
aad
lds
ljmp
enter
nop
ret
pop
outsb
pop
repnz
dec
lcall
xchg
in
cmc
add
add
dec
mov
pop
mov
cmp
xor
inc
aas
inc
mov
sub
sbb
push
jmp
cltd
icebp
in
mov
pop
mov
shlb
inc
dec
outsb
add
jne
negb
and
sub
sbb
mov
sbb
mov
test
cld
jb
imul
mov
rclb
popa
mov
lahf
mov
push
cmp
mov
jnp
xchg
int
ret
inc
lods
or
pop
rcr
pop
mov
mov
jg
frstor
insl
cs
fwait
or
cmp
add
inc
jno
loop
aaa
adc
inc
test
mov
stos
jo
faddl
fiadds
or
push
cmp
out
sbb
and
xchg
sbb
push
cld
ja
sbb
cmp
mov
scas
lods
xchg
stc
jmp
sahf
pop
je
sahf
cwtl
fmuls
ret
xchg
sub
cld
jns
inc
imul
jno
push
inc
sbb
xchg
mov
push
sub
mov
add
cmpl
inc
ficomps
mov
fucomi
jo
fldcw
or
cmp
mov
jle
jp
testb
fistl
xchg
push
inc
pop
mov
mov
jne
scas
sub
outsl
test
jns
rorl
pop
pop
andb
pop
rclb
mov
bound
ds
and
lcall
push
push
scas
pop
sbb
cltd
js
pop
test
frstor
cmp
addr16
ret
lods
push
push
add
cli
mov
popf
test
mov
xor
and
mov
fmull
mov
in
cli
addl
js
inc
ret
xor
out
xchg
aaa
iret
shll
jmp
cmpsb
inc
jge
sahf
mov
aam
xchg
cld
scas
movsb
fwait
inc
mov
sti
xlat
inc
lock
in
imul
addr16
mov
mov
pop
sub
aas
pop
mov
mov
xchg
dec
mov
and
shrl
pop
cmp
sub
xorl
jle
sub
sbb
out
xchg
xor
xchg
aaa
orb
adc
dec
ret
dec
mov
pop
adc
stc
jmp
adc
cld
inc
push
xor
call
mov
or
mov
jnp
clc
pushf
std
loop
fldt
test
mov
int
xchg
popa
or
cmp
shrb
loop
jae
cli
xchg
cmpsl
pop
insb
dec
xchg
push
push
sar
xor
enter
dec
iret
add
mov
cltd
shrb
pop
out
cmp
mov
add
outsl
xchg
cli
shlb
ja
or
sbb
lock
std
insl
movsl
popa
mov
push
mov
aas
mov
cmp
xor
out
xor
test
inc
mov
cmp
lea
stos
mov
mov
int3
push
or
or
push
push
or
xor
pop
xchg
jl
ss
je
mov
aad
ret
sbb
mov
push
or
and
dec
loope
fsubs
xchg
xchg
sub
and
sahf
loopne
pop
movsb
outsl
lcall
aaa
in
or
or
icebp
ficoms
in
mov
cmp
cli
and
adc
pop
pop
stc
out
loopne
ret
popf
je
loopne
mov
jo
sub
adc
inc
shr
dec
out
stos
test
std
mov
cmpsl
test
inc
sahf
cmc
ret
jecxz
sub
ret
fstpl
inc
inc
test
aaa
mov
cmc
xchg
lret
pop
shlb
jge
fists
push
dec
aaa
and
inc
mov
jnp
mov
mov
pop
cmpsl
inc
mov
push
scas
rcrl
pop
push
out
fsubs
xchg
loopne
sbb
mov
dec
cmp
dec
les
test
lock
andl
loop
in
outsb
loopne
int3
jb
sarw
lods
mov
imul
outsb
mov
mov
mov
popa
lock
in
cmp
mov
lcall
sahf
cmp
pop
mov
nop
push
aas
mov
in
enter
dec
push
sbb
or
fcomps
add
jp
pop
xchg
push
jae
push
xchg
jecxz
rcrl
mov
movl
jns
mov
and
outsb
out
out
dec
and
test
dec
mov
jecxz
adc
je
fisttpl
out
ljmp
inc
out
lods
mov
fcompl
or
push
sbb
pop
cmp
mov
int
bound
push
pop
lret
mov
cmp
push
test
cltd
sahf
cltd
push
daa
or
rcr
jl
popa
stc
popa
push
pushf
cwtl
shll
icebp
subb
jge
fisubl
notb
add
rol
cmp
cld
inc
aas
xchg
mov
xchg
xor
push
icebp
xor
sbb
jl
clc
sub
xchg
mov
sub
jmp
dec
jne
mov
sbb
ja
nop
addr16
xchg
jmp
stc
adc
aas
sub
mov
push
push
xchg
pushf
sbb
and
in
roll
shrb
pop
stos
and
js
enter
out
out
xchg
out
icebp
jmp
pop
repz
mov
iret
dec
leave
dec
adc
mov
mov
mov
scas
mov
cmpsl
pop
or
and
sahf
das
inc
mov
jo
mov
xchg
xchg
les
outsb
clc
les
xchg
pop
dec
inc
mov
push
orl
push
jp
push
push
lahf
mov
aam
inc
rclb
lret
das
bound
mov
insb
cmp
mov
push
or
sbb
rcrl
mov
and
jle
test
and
out
clc
shl
xchg
loopne
cmp
cmpsb
call
mov
jge
fwait
mov
xor
adc
cmp
iret
xor
jp
xor
fbld
icebp
arpl
pop
scas
push
out
xchg
test
xor
in
and
xor
push
std
pop
out
sbb
xchg
out
rcrb
std
repnz
fucomip
dec
mov
daa
jge
pop
mov
adc
call
jl
jb
loope
dec
mov
add
mov
inc
outsb
cmc
dec
or
lea
push
sarb
sbb
cmp
sbb
les
nop
adc
gs
push
clc
dec
lea
pop
inc
movsl
rolb
and
fyl2x
nop
inc
cmp
int
fcmovne
aad
jae
fcomi
scas
sub
mov
adc
cmpsl
fstps
fbstp
inc
lods
pop
enter
push
popa
dec
push
mov
jns
sub
int3
push
mov
iret
orl
pop
in
das
pop
cmc
stos
push
mov
mov
popf
outsl
cmp
adc
lret
xchg
xchg
pop
sub
shr
xchg
and
sub
lret
inc
xchg
insb
sub
mov
push
xchg
cmp
push
sbb
jl
rcr
mov
adc
jg
loopne
daa
popf
lea
fs
jle
and
lret
aaa
sar
cli
insl
xor
bnd
subl
xchg
xorw
and
or
push
lea
and
mov
and
enter
jge
insb
fwait
mov
sub
push
ss
and
xorl
push
xchg
and
test
push
mov
xor
sbb
cld
pop
rcr
dec
pop
mov
cli
out
cmpsb
stos
test
pop
inc
jns
pop
pop
pop
fmul
xor
insl
out
push
add
out
movsl
xchg
loope
lcall
scas
or
in
enter
das
mov
das
insb
cmp
inc
mov
sbb
add
push
shlb
pop
cld
fs
out
mov
pop
xor
mov
cmp
addl
jmp
mov
cmp
push
add
int
sbb
jno
mov
pop
outsb
push
sub
mov
jne
or
mov
mov
jne
mov
cmp
imul
ljmp
mov
mov
into
mov
addr16
cld
mov
sti
xlat
rcll
inc
pop
push
xor
scas
jl
fstl
pusha
enter
mov
cld
jge
cmp
dec
add
jns
mov
pop
jle
dec
pushf
outsb
ret
std
pop
lret
out
je
push
imul
push
xor
stc
ret
decl
sub
jbe
sub
inc
and
call
sub
filds
rorl
nop
mov
push
inc
sub
sbb
test
sub
minps
jne
lods
outsl
cli
push
add
cld
xchg
ror
xor
leave
ds
jg
loop
mov
mov
or
stos
fwait
inc
cwtl
out
loope
sub
mov
cwtl
lods
icebp
add
test
test
push
push
jp
stos
jl
popf
sub
sub
pop
jg
inc
xorl
cmp
lods
sarl
pop
cmpsb
jnp
push
out
clc
call
int
cmp
ds
pop
mov
std
xchg
cmp
mov
fcomp
xchg
arpl
cmp
pop
les
leavew
dec
dec
push
std
jg
loopne
nop
dec
push
inc
jle
sub
mov
sbb
popf
dec
or
jb
adc
mov
or
adc
cld
incl
lods
pop
mov
pusha
jg
jns
cmpsb
mov
in
outsl
lcall
loopne
mov
mov
xchg
and
sbb
pop
das
add
sbb
sub
or
movsb
dec
inc
arpl
and
std
pop
ror
pop
mov
test
and
pop
dec
popa
push
js
sbb
leave
push
out
xor
or
rol
mov
cmpsl
adc
cltd
cli
cmp
in
sbb
sbb
and
insb
shrl
movsl
in
mov
mov
in
mov
xor
pop
or
iret
arpl
inc
xchg
je
pop
xor
nopl
data16
pop
pop
sbb
das
aam
cmp
pop
rol
rclb
xchg
lods
jecxz
cwtl
lds
test
mov
nop
scas
cmp
cs
jp
out
mov
mov
push
lock
repz
dec
movsl
clc
push
push
adc
testl
mov
xchg
test
or
and
jae
ss
inc
repz
adc
push
cmp
mov
lds
std
mov
es
cmc
add
and
lret
fwait
mov
sti
add
bt
push
shrd
out
pop
push
sub
sbb
nop
bound
and
add
cltd
xchg
mov
dec
stc
pop
jo
sub
push
fimull
gs
fucomip
es
xlat
les
clc
fisubl
sbb
and
out
in
jo
xor
fldt
xchg
pop
mov
std
xchg
cmp
or
adc
xor
lods
cmpsb
sbb
sbb
inc
jmp
adc
mov
push
add
sub
popf
out
stos
out
out
mov
es
mov
les
sub
inc
add
cmp
and
jbe
push
adc
jbe
jg
jo
filds
ljmp
cltd
add
dec
outsb
out
das
in
popa
mov
dec
fisttpll
imul
stos
mov
lods
mov
add
mov
inc
test
mov
and
imul
loope
add
mov
lahf
inc
mov
fsubl
loope
lahf
xchg
xor
hlt
mov
repnz
sahf
pop
xor
jecxz
jmp
adc
out
mov
xchg
repz
pop
cmp
movsb
push
and
cmp
mov
cltd
nop
outsb
mov
mov
insl
pop
fimuls
cwtl
ror
and
push
push
rcr
xchg
adc
mov
jb
xor
push
dec
cmp
ds
into
leave
popf
mov
enter
in
push
loop
pop
lea
dec
xor
push
test
jne
or
lds
into
cmp
loop
shr
jno
add
mov
pop
jns
cs
and
in
or
sbb
test
mov
loope
or
jnp
dec
sbb
add
cmp
mov
sbb
and
lods
das
xchg
mov
aas
fmull
sarl
adc
dec
xlat
cltd
push
dec
add
call
xchg
or
sbb
xor
add
xchg
clc
pop
mov
addr16
movsb
gs
movsl
mov
cmp
push
add
imul
sub
arpl
sub
sbb
leave
sti
gs
xchg
xchg
scas
push
pop
stos
movsb
add
inc
push
std
push
xchg
xor
in
pop
jmp
push
iret
xlat
movsl
cmpsb
movsl
cld
mov
pop
scas
ja
sub
mov
fsubr
and
call
cwtl
movsb
fidivrl
adc
jge
out
sbb
inc
shlb
jge
jp
sub
lock
movsl
adc
lahf
xor
stos
in
mov
sub
adc
and
les
mov
jecxz
cmc
js
clc
lock
xchg
rclb
sub
mov
inc
test
insb
adc
ja
loop
fidivrl
enter
push
xchg
mov
or
imul
add
mov
pop
mov
jno
pop
mov
pop
icebp
insb
aaa
sub
and
repnz
jno
ljmp
fldenv
jns
jl
lcall
mov
frstor
ret
sbb
out
adc
xchg
arpl
xor
mov
jge
out
add
or
shll
xchg
pop
hlt
sbb
sbb
jae
jo
clc
and
xchg
sub
dec
adc
rorl
xor
mov
sbbl
sub
or
cmp
pop
call
mov
sbb
mov
mov
dec
js
loopne
sbb
fmull
js
leave
push
in
xor
mov
xor
add
pop
push
or
out
popa
imul
push
mov
arpl
mov
dec
data16
and
inc
mov
movsl
les
push
xor
ret
jmp
lods
dec
xor
inc
mov
mov
cmp
push
cmpsl
loope
lds
movsl
sub
cmp
stos
adc
ja
or
xlat
add
jb
dec
fdivr
ret
outsb
in
and
test
xor
jge
and
sahf
pop
adc
fidivl
cmp
mov
daa
sbb
shl
sti
fistpll
xchg
jo
inc
repnz
xchg
pop
lea
repnz
aaa
loopne
or
xchg
push
sahf
push
fs
mov
fistps
aas
sar
in
xor
dec
aas
adc
movsb
xchg
adc
adc
ret
roll
gs
push
jb
add
pop
add
test
mov
push
mov
mov
inc
push
mov
ljmp
lock
push
aad
sar
push
lods
add
jb
sbb
dec
mov
dec
mov
push
xchg
fisubl
test
adc
loop
add
testb
add
mov
xor
fdivr
insl
inc
xchg
out
jb
jge
push
sbb
adc
xchg
dec
gs
dec
ja
add
nop
movsb
sarb
ja
call
mov
mov
scas
jmp
jmp
xor
dec
fistps
lretw
jl
ss
jae
xchg
mov
xchg
pop
inc
popf
xchg
outsl
sbb
insl
lods
lret
mov
cmp
xor
pop
and
mul
or
xor
xor
sbb
repnz
imul
xchg
xchg
mov
sarb
jo
and
adc
jg
xchg
cmp
bound
int3
stc
mov
mov
dec
cwtl
std
test
rcrl
and
inc
mov
es
retw
xor
ret
out
jnp
repnz
rcll
xor
push
fbstp
ret
fneni(8087
or
add
sub
push
mov
jl
ljmp
inc
cltd
xchg
jge
repz
addr16
dec
fwait
sbb
xorb
sub
xchg
test
insl
movsl
pop
into
daa
shrl
jne
dec
in
imul
xor
clc
das
in
mov
loope
lea
das
lods
addb
lret
dec
cli
xchg
and
movsl
adcb
int
std
pop
mov
sub
jae
fsubl
inc
test
fstpl
in
mov
or
or
outsb
or
das
or
lock
and
ja
out
lods
popf
jg
mov
adc
aaa
lods
mov
jmp
cmp
outsb
jnp
pop
mov
cld
push
cmpsb
mov
aas
dec
lock
mov
pop
cltd
mov
jbe
loope
mov
push
stos
dec
sub
out
jnp
popf
ja
sbb
fildl
fcmovne
push
outsl
scas
loope
shlb
mov
or
andb
scas
lahf
jp
aad
clc
es
sbb
pop
cltd
pop
lods
arpl
pop
add
imulb
aam
movsb
fisttpl
sbbb
xlat
sub
jnp
or
mov
jo
les
sub
mov
inc
push
jecxz
mov
movsl
lahf
aad
xchg
icebp
loopne
cmc
imul
std
push
js
pop
shrb
sub
dec
shlb
and
and
out
or
mov
mov
pop
bound
int3
aas
jne
movsb
int
sub
in
mov
int3
cwtl
push
push
xor
test
lahf
lock
or
aas
scas
jge
in
out
sbb
mov
or
lret
andb
dec
sub
mov
jecxz
cmp
xchg
inc
lret
popa
sub
repz
and
sub
xor
lret
sub
push
dec
xchg
aad
mov
xchg
testl
mov
lea
sti
sub
subl
mov
into
xor
xorl
ret
pop
clc
xor
ret
and
sbb
mov
sbb
cld
int3
sar
ds
andb
mov
sub
mov
cmp
out
in
call
lods
inc
fists
pop
int
add
add
mov
adc
jecxz
inc
sbb
pushf
cmp
dec
push
mov
pop
jnp
pop
dec
adc
loop
std
inc
dec
popa
leave
inc
arpl
fwait
add
and
ja
loope
jge
add
push
push
lret
and
arpl
mov
xor
sub
sub
repz
clc
cmp
push
adc
lret
xor
add
clc
pop
mov
enter
iret
inc
lahf
out
cmpsl
dec
ficoms
daa
repnz
pusha
mov
push
pushf
xorl
dec
into
ret
jns
push
jl
sub
and
icebp
mov
xchg
sti
pop
mov
iret
and
add
pop
push
pextrw
push
gs
adc
mov
dec
mov
popa
icebp
ja
bound
loop
je
into
mov
adc
mov
xchg
daa
sub
mov
mov
outsb
mov
jo
insl
cmp
inc
mov
cs
xlat
xor
shll
test
sub
fcoms
jecxz
std
push
testl
xchg
sbb
mov
jmp
out
popf
insb
mov
int3
adc
cmpsl
jno
jge
pop
int3
xchg
mov
enter
nop
cmp
gs
lret
lret
xchg
out
or
sbb
adc
xor
outsl
inc
mov
or
arpl
mov
xchg
jl
jo
jo
sbb
out
cli
jmp
dec
dec
mov
xchg
mov
mov
in
lds
mov
push
test
mov
add
or
fwait
into
enter
iret
movsb
cmp
xchg
dec
jle
rorl
push
ss
out
cmp
and
in
fidivrl
mov
jae
pop
add
in
or
std
mov
push
cmp
sti
mov
push
fadds
aaa
stos
pop
mov
arpl
outsb
rorl
mov
xchg
test
lret
mov
js
pop
mov
or
and
fcmovnb
dec
pop
inc
in
xchg
je
adc
mov
pop
adc
int
fisttpl
cli
popa
inc
mov
pushf
stos
test
lret
push
aam
dec
or
fcomps
mov
add
xchg
je
addb
imul
fisubrl
and
adc
xchg
jl
clc
dec
mov
xor
pop
andb
stos
int3
sub
push
jg
pop
fidivrl
cmpsb
subl
cwtl
popf
xor
jl
out
popa
test
imul
insl
insl
call
pop
push
sahf
and
aad
scas
ja
test
hlt
popa
mull
dec
arpl
aas
inc
std
ror
dec
and
sub
les
lods
jne
ja
mov
movl
xor
or
sub
shlb
js
iret
or
inc
fstp
lock
mov
pop
fbstp
adc
lods
and
andb
mov
mov
xor
movsb
jne
repz
pop
xchg
fidivl
inc
jo
pop
fidivs
dec
mov
in
sbb
jp
jle
sub
and
out
sub
push
es
cltd
ds
jno
dec
lahf
push
in
push
xor
pusha
outsb
hlt
sub
test
pop
fwait
add
subl
je
aaa
fs
mov
pushf
mov
testb
xchg
ror
inc
add
inc
dec
mov
add
pop
mov
sub
push
mov
xchg
lcall
add
out
push
pop
test
pushf
pop
lahf
xchg
sub
clc
std
mov
and
mov
inc
out
bound
std
lcall
insb
jae
out
or
mov
inc
movsb
aaa
sbb
and
push
sahf
inc
sar
jo
test
lock
xlat
gs
push
divl
scas
jmp
xor
dec
or
lods
ds
or
jne
lods
jo
popa
add
mov
adc
jecxz
dec
xor
repnz
adcb
popa
pop
fcomps
cld
sar
jae
inc
scas
dec
js
mov
fwait
fists
scas
sub
dec
je
or
xchg
inc
add
out
cli
adc
and
sub
xlat
stc
movsb
sub
push
repnz
sub
add
cmc
cmp
in
fcmovnbe
hlt
stc
stos
movsb
mov
xor
cmpsl
lea
insl
xlat
sbb
scas
inc
adc
call
mov
lahf
lcall
jno
mov
adc
std
cmp
rclb
xchg
push
push
and
in
push
and
gs
lds
mov
dec
dec
test
ja
mov
loope
mov
and
and
sahf
pop
stos
loopne
out
pop
push
jne
cmp
fimuls
sub
push
add
loop
repz
jle
mov
outsb
sbb
inc
outsb
loopne
jge
xor
fdivr
out
movb
je
enter
mov
xchg
lahf
inc
clc
pop
push
jnp
xor
and
negb
inc
or
test
cmp
jmp
inc
aam
cs
int
and
clc
mov
or
mov
scas
adcb
fiaddl
repz
cmp
iret
mov
psubusb
inc
xchg
dec
lahf
test
in
sub
jae
mov
adc
adc
sub
push
aas
mov
sub
xor
stc
mov
or
push
mov
mov
or
jo
fs
pop
inc
and
adc
xor
pop
push
shrl
popf
nop
es
cmp
mov
inc
jno
mull
and
test
jmp
shlb
mov
in
popa
mov
test
addr16
hlt
sbb
pop
jne
and
sbb
pop
insl
jo
hlt
inc
fstl
dec
sub
or
adc
jae
and
dec
mov
mov
addr16
aas
jmp
loope
xchg
mov
ds
jle
add
and
arpl
or
inc
push
push
jnp
sub
push
sub
mov
pop
or
add
mov
xlat
dec
stc
mov
fisubs
mov
mov
std
fsts
int3
lods
pop
movsl
and
loope
sub
cmp
push
dec
jno
jnp
pop
mov
fadd
pop
xor
outsl
inc
mov
out
addr16
in
jecxz
and
inc
orl
movsl
sub
mov
pop
xor
jb
and
nop
fstpt
es
lcall
jae
mov
inc
dec
jae
mov
and
test
push
mov
mov
nop
pushf
ds
aam
fistpl
js
jp
mov
in
test
aas
insb
dec
xor
mov
ret
int
jne
aas
adc
cs
mov
mov
fdivl
jbe
add
scas
mov
xor
jae
sti
sti
addr16
pop
aas
jl
cltd
iret
lods
inc
nop
ljmp
mov
mov
inc
imul
repz
cmpsl
ljmp
loopne
cmp
cltd
xlat
or
sub
popf
xor
xor
lods
dec
mov
mov
and
outsl
insl
xor
xchg
je
inc
std
sbb
and
push
and
mov
cmp
jge
sbb
jl
test
dec
test
inc
sub
mov
mov
and
mov
adc
or
test
stos
js
ja
jno
in
bound
push
hlt
and
mov
jno
sub
gs
pop
in
dec
in
mov
sbb
sahf
pop
lahf
adcl
inc
xchg
loope
imul
xor
sbb
test
add
dec
clc
outsl
or
mov
mov
in
push
hlt
in
stos
addl
jo
scas
movsl
mov
rol
or
add
adc
int3
or
pop
adc
pusha
mov
add
push
adc
loop
cmp
out
jge
std
addr16
sub
neg
loop
daa
clts
shr
ja
into
ret
loop
dec
fnstenv
xorb
xchg
hlt
or
loopne
jne
sub
push
ss
pop
mov
mov
mov
cmpsb
imul
stc
test
outsb
and
scas
dec
mov
sub
dec
imul
inc
shll
aam
xorb
xlat
pop
push
inc
icebp
mov
fcomps
out
ss
insl
daa
mov
dec
cmpsb
out
jecxz
or
inc
jle
fdivs
loop
inc
dec
stos
cmp
popa
hlt
lea
stc
and
in
arpl
mov
cmpsb
std
ljmp
or
push
xor
test
call
pop
ss
mov
pop
ficoml
push
inc
adc
dec
jno
cmpsl
fdivl
adc
dec
repz
push
shlb
mov
adc
cmp
jbe
inc
push
mov
data16
xchg
lock
arpl
add
rorl
stos
mov
xor
or
mov
cmp
adc
in
sbb
rol
dec
lock
inc
subl
sbb
xchg
jge
call
daa
sub
or
movsl
pushf
out
fcoms
mov
cli
mov
ror
mov
xor
jne
xchg
mov
cmp
add
sar
sub
dec
std
inc
or
lahf
popa
aam
aad
pusha
into
and
ret
or
rcr
mov
adcl
inc
testl
fldt
sub
loopne
xchg
out
adc
ja
add
sbb
push
and
jns
lahf
xchg
mov
outsb
cmp
inc
or
inc
xor
cli
mov
push
loopne
mov
pushf
fmull
gs
push
dec
jns
dec
mov
adc
jb
in
xchg
and
add
mov
jno
sarb
insb
inc
xchg
cmpsl
pop
xchg
fs
cmp
andb
addr16
movsl
or
test
mov
stos
shr
adc
add
js
jmp
lds
test
mov
xchg
dec
cmp
sbb
dec
pcmpgtd
or
ja
push
test
stos
sub
push
popa
sbb
mov
dec
or
std
jecxz
subl
push
xor
adc
aas
adc
das
or
push
sbb
cmpsl
add
cmc
cli
pusha
sbb
mov
gs
push
cli
sti
sub
xchg
mov
or
rorb
push
insl
ficomps
jecxz
adc
pop
pop
das
adc
daa
mov
in
insl
cmp
xor
call
cld
mov
adc
imul
andb
pop
dec
mov
int
mov
dec
xor
lret
xchg
out
rorb
and
and
aaa
dec
loopne
in
out
outsl
dec
fsubrl
aaa
xchg
mov
and
adc
icebp
popa
xchg
repnz
es
lock
data16
lcall
pop
cld
imul
push
add
jecxz
mov
dec
insl
sti
cmp
sahf
mov
cld
xor
mov
fildl
mov
stc
push
add
push
inc
inc
sbb
insl
adc
push
inc
or
addr16
ret
pop
stos
adc
adc
nop
test
cmpsl
int
pusha
add
jb
je
cwtl
pop
jp
scas
repz
push
dec
mov
jbe
je
adc
rclb
rorb
mov
and
outsb
sbb
cltd
jecxz
adc
jge
divl
inc
es
inc
addr16
xor
adc
ret
shrb
add
push
movsl
or
popa
mov
int3
andb
hlt
js
mov
inc
mov
jno
imull
hlt
adc
xchg
insl
push
mov
add
insl
jecxz
pop
sbb
or
and
inc
filds
lods
xor
push
popa
inc
in
icebp
test
movsl
lock
pop
or
lcall
addr16
cld
aaa
iret
and
and
clc
loope
sub
aaa
addr16
stos
or
jbe
in
xor
mov
test
adc
into
or
xchg
pop
jbe
pop
imul
cs
push
dec
xchg
lea
outsl
xor
movsl
jmp
push
popa
xchg
push
lods
int3
sbb
repz
scas
push
sti
add
mov
iret
mov
insb
ds
aas
xchg
aas
sub
pusha
inc
jo
xor
lahf
je
mov
adc
mov
pusha
jmp
mov
icebp
pop
adcl
insl
fadds
cmp
and
xchg
movsl
add
scas
fdivrp
imulb
sbb
adc
popa
xchg
inc
pop
and
or
jle
int
adc
adc
or
add
psadbw
aas
xor
in
ljmp
out
popa
imul
pop
dec
inc
mov
test
sub
push
mov
mov
sbb
jb
and
shrl
lods
mov
fmulp
xor
pop
sbb
fs
mov
mov
call
stc
and
jmp
add
lock
xor
sahf
lods
roll
jge
cmp
aaa
sbb
into
in
lret
movsl
cmc
cld
pop
mov
push
and
sbb
js
inc
mov
call
jbe
lock
test
shlb
scas
outsl
inc
notl
rcrl
jne
addr16
mov
mov
lahf
push
jbe
xorl
mov
pop
fdivl
pop
mov
and
push
add
mov
xchg
pop
xor
and
loop
push
mov
movsb
jp
or
mov
mov
inc
and
sti
or
jnp
popa
jecxz
inc
sbb
push
pop
cmp
cmpsl
stos
ljmp
push
pop
dec
pop
mov
xchg
inc
repz
test
inc
cmp
dec
ljmp
or
mov
mov
mov
test
and
dec
mov
pop
loop
mov
cmc
xchg
mov
push
jl
sbb
or
push
push
jle
into
lds
fs
sbb
ret
test
popf
mov
mov
push
repz
imul
cmc
std
pop
dec
sub
xor
ficoml
addb
mov
stc
add
xchg
add
add
mov
mov
xchg
mov
cmp
ret
xchg
mov
addb
popa
gs
inc
adc
push
into
mov
jp
adc
arpl
sbb
std
push
out
movsl
fidivrs
jnp
cmp
inc
dec
and
mov
push
jg
mov
push
adc
and
sub
mov
xor
push
sbb
pop
les
lds
test
test
bound
or
inc
pop
sub
pop
nop
out
add
stos
imul
and
adc
xor
jmp
arpl
mov
lods
mov
lret
xor
adc
in
mov
add
leave
mov
jge
mov
enter
and
test
loopne
add
imul
jp
movsl
in
fsubrs
cli
mov
fwait
in
stc
int
fldt
and
mov
ret
push
sub
and
xor
xchg
xlat
lods
ret
fdivrl
xlat
cmp
shll
cmp
jge
cmp
jnp
cs
push
imul
cld
out
mov
arpl
lds
jecxz
and
push
bound
outsl
cltd
sbb
ret
sub
cmpsb
mov
imulb
jp
fdiv
push
push
popl
imul
dec
add
repnz
xor
idiv
decl
jne
aam
outsl
enter
adc
push
sbb
lock
daa
iret
mov
mov
scas
add
lea
aaa
sub
pop
xchg
push
push
xor
or
shl
imull
xor
in
int3
insb
cmp
sbb
out
push
cmc
loope
mov
push
or
sbb
pop
pop
inc
xlat
loop
je
dec
xor
mov
jmp
ja
jbe
outsb
sbb
push
mov
pop
cmp
orl
nop
inc
lcall
add
or
xchg
jl
dec
repnz
fsts
popa
and
movl
cltd
ret
sub
xchg
in
aaa
test
jle
jb
mov
es
mov
jo
push
pop
cmpsb
xor
pop
andb
sub
push
mul
rcll
cmpsb
cmp
lcall
add
inc
sub
mov
mov
jle
sbb
shlb
jne
ja
inc
stc
fsubs
sbb
roll
hlt
xchg
mov
sub
frstor
mov
mov
push
mov
lea
icebp
xchg
bound
gs
adc
push
mov
clc
or
jne
jmp
jnp
mov
mov
cmpsl
sahf
inc
push
cmp
rclb
jl
call
out
pop
xchg
sbb
cmc
xor
pop
inc
in
rcll
insb
sbb
hlt
enter
cmp
xor
jae
ja
scas
mov
jecxz
loope
dec
sahf
fidivs
sbb
fists
faddl
in
xor
mov
jecxz
push
sbb
pop
rol
xchg
out
jb
mov
cmpsl
inc
xchg
test
and
or
leave
insb
or
xchg
jmp
mov
add
push
cmp
loope
push
sub
daa
js
pop
mov
push
iret
fpatan
roll
dec
mov
inc
loope
cli
dec
mov
xchg
dec
mov
pop
sub
push
pop
add
jge
sbb
stc
xor
nop
stc
cmp
addr16
ret
dec
or
mov
sub
fdivs
sbb
jecxz
pop
xchg
nop
push
outsb
cld
lret
mov
cmp
call
and
or
fiadds
int
or
or
mov
rolb
pop
pop
sbb
or
or
adc
mov
or
repnz
mov
ds
clc
xchg
jecxz
mov
lds
test
notl
xchg
into
fimull
jb
dec
mov
fwait
mov
sub
sub
cmpsl
jae
xchg
loopne
or
addr16
jne
fidivs
shrb
and
rcr
inc
pusha
mov
mov
shlb
push
push
mov
push
ja
mov
cmpl
mov
dec
ficoml
and
mov
lea
jb
xchg
or
int
clc
pop
je
test
test
mov
popa
lret
xor
sbb
push
adc
test
aaa
cmpsl
dec
fimuls
daa
mov
emms
xlat
in
or
iret
aam
add
movsl
mov
and
jle
xchg
or
pop
sarb
mov
xchg
mov
sbb
xor
adc
lahf
pop
inc
sbbb
xor
xor
jp
call
pop
std
push
cli
sahf
jge
jbe
mov
jecxz
in
sub
push
sub
add
imul
xchg
out
shrb
aad
push
add
lods
leave
or
mov
stos
dec
push
mov
mov
icebp
sub
jg
mov
inc
movsb
adc
imul
push
out
cmp
push
int
add
push
sbb
mov
sub
cmp
or
push
enter
das
xchg
movb
imul
jne
sbb
sbb
das
loope
mov
orl
fcoml
push
push
xchg
fsubrl
ss
inc
sub
xor
inc
popa
andl
jmp
cmpb
subl
push
mov
scas
ss
aam
inc
shll
mov
les
push
cli
icebp
cmp
int
mov
rolb
cmp
movsl
cmpsb
popf
fiaddl
dec
pop
mov
fidivrs
iret
loop
in
hlt
inc
mov
sub
cmp
add
roll
lds
je
icebp
mov
loopne
movsl
jecxz
cmpsb
push
mov
sbb
pop
xchg
inc
jnp
xchg
repz
nop
cmp
movsl
jo
aas
dec
cli
rol
mov
fsubrs
lods
nop
mov
cmc
xor
mov
aad
sarl
sub
xor
xor
xlat
xchg
stc
add
add
scas
inc
xchg
fistpl
push
push
jne
out
push
lods
xchg
inc
and
fdivl
sub
mov
pop
outsb
aad
loopne
pop
pop
lods
push
das
sbb
fprem
push
ja
sbb
add
call
adc
bound
jnp
in
xor
jecxz
aam
adc
xchg
mov
shrb
lea
aaa
cltd
adc
cwtl
xor
and
mov
sbb
fbld
dec
dec
pop
dec
cmp
test
and
sbb
idivl
inc
mov
in
enter
sbb
and
dec
cli
mov
repz
xchg
shll
adc
imul
sbb
inc
filds
sub
pushf
mov
sub
pop
out
add
pop
test
subb
ss
pop
pop
insb
ret
addr16
pop
pop
scas
mov
pop
and
lcall
add
mov
or
adc
inc
bound
nop
pop
sbb
jmp
shlb
mov
ret
dec
loopne
push
fiadds
fbstp
jmp
repz
test
and
repz
or
stc
xor
daa
jecxz
cmp
out
js
add
pop
std
cmp
ja
aam
and
imul
xor
aaa
leave
sbbl
subl
fisubrl
int3
movsb
sbb
das
xchg
add
jge
dec
lea
jae
mov
stmxcsr
or
test
mov
pop
loopne
addl
mov
fidivrl
mov
aam
inc
xor
paddq
sti
in
push
xchg
idivl
pop
fidivrs
inc
andb
sub
test
mov
or
inc
std
xor
push
dec
jg
mov
aad
dec
jle
add
sahf
rol
sub
clc
add
shlb
and
inc
or
in
or
and
xor
int3
xlat
lods
insl
add
adc
mov
xchg
pop
out
dec
cmp
add
popl
enter
adc
repnz
inc
mov
and
push
pmuludq
mov
out
addr16
sbb
sbbl
push
lds
mov
sub
dec
fs
pop
xor
lock
pop
lahf
bound
or
inc
push
mov
mov
lcall
dec
pushf
pop
push
sub
inc
dec
inc
out
daa
add
and
test
cmp
lret
popa
bound
fildl
inc
popa
sti
add
adc
out
das
xor
sub
mov
and
aas
push
xchg
xlat
fsubs
cwtl
push
out
inc
call
adc
sub
sbb
or
arpl
add
out
add
scas
or
fdivr
mov
xchg
loope
cltd
inc
fisttps
mov
and
mov
xor
out
cmp
pop
cmp
adc
xlat
or
rorb
xchg
mov
pop
mov
cmp
pop
pushf
hlt
sbb
sub
xlat
pop
lods
xchg
lea
insl
dec
movsl
stos
sub
jnp
fldenv
push
in
scas
fidivrs
dec
daa
jo
pop
adc
add
pop
fbstp
lret
data16
dec
mov
gs
mov
mov
mov
and
mov
mov
sbb
ds
aam
aam
xor
pop
rcrb
or
je
rorl
popa
mov
fsubl
inc
jae
cmpsb
lret
jecxz
out
mov
pushf
aad
shlb
jecxz
push
xchg
inc
test
dec
shl
adc
imul
out
mov
or
stos
pop
sbb
cmp
rol
or
dec
cs
scas
jle
dec
cmp
aas
pop
and
sbb
and
fisubl
push
xchg
push
lahf
mov
aad
sub
mov
xchg
outsb
js
mov
je
dec
inc
pop
js
out
aaa
cltd
loopne
out
fstpt
popf
test
je
jno
lret
and
lret
ret
or
xchg
std
mov
and
push
das
notb
cli
test
in
testb
xlat
hlt
lods
mov
fimull
and
test
lcall
repz
das
jae
push
pusha
mov
jns
shrl
aas
jle
cmp
lret
xlat
mov
jb
xchg
jae
sbb
mov
cld
push
cmc
adcb
add
or
and
or
jnp
adc
pop
xchg
out
mov
cmpsl
cwtl
mov
or
push
and
adc
pop
pop
mov
in
push
ds
arpl
jg
adc
cs
add
jg,pn
in
ret
mov
push
cmpsl
call
sar
dec
dec
inc
push
arpl
xchg
mov
inc
jns
loop
jmp
fmulp
scas
out
mov
push
mov
ss
mov
inc
orl
mov
push
and
orl
mov
xchg
sbb
xchg
mov
scas
loopne
gs
push
inc
push
mov
xor
mov
lods
xchg
loopne
adc
divl
inc
int3
xchg
jp
dec
icebp
mov
sbb
idivl
mov
jecxz
ljmp
xor
lock
pusha
lahf
and
rorl
enter
mov
hlt
in
popf
orb
and
cmpsb
adc
pop
xlat
and
xor
jl
decb
in
sbb
mov
xor
cmpb
inc
jl
sti
xchg
sahf
aas
lahf
dec
jmp
add
jg
rorb
scas
out
call
push
dec
test
dec
xchg
mov
call
jo
jge
xor
fmulp
sub
push
dec
inc
pop
xchg
sub
popa
adc
mov
pop
fisubrs
mov
ss
pxor
cmp
adc
inc
fisubl
sbbl
cmp
lods
mov
sti
aam
cmp
or
xchg
push
cmpsl
xor
fdivr
push
mov
test
xchg
pushl
jg
shrl
sub
and
mov
cmp
sbb
sbb
sub
std
push
pop
insl
push
into
xor
add
push
dec
rorl
pop
fsubrl
xchg
push
pusha
fstp
or
data16
mov
in
aaa
inc
popf
inc
out
ja
in
cmp
jge
xchg
or
nop
push
push
cmp
xchg
into
int3
mov
outsl
mov
pop
sub
ret
aas
mov
lahf
les
inc
push
shrl
jmp
pop
jmp
push
in
dec
xor
pop
mov
adc
inc
in
or
lods
int3
in
ds
mov
in
add
rcrb
int
scas
push
popf
pop
hlt
mov
fldl
out
cmc
aaa
add
push
fistpl
push
fisttpll
cmp
fisubrl
sbb
dec
fucomip
or
imul
jl
es
sbbl
mov
popf
cmp
mov
pop
mov
inc
and
orl
test
das
adc
sbb
mov
xor
mov
inc
ret
mov
cmp
jge
stos
mov
inc
push
aad
sub
adcb
dec
icebp
insb
imul
addr16
das
jp
in
push
enter
aam
jo
or
cmp
or
and
lret
xchg
and
cwtl
sar
test
jge
data16
sub
enter
xor
mov
addb
adc
xor
sbb
xchg
push
push
leave
cmp
pop
outsl
roll
orl
pop
cmp
test
mov
int3
stos
fldenv
dec
insb
clc
and
pop
add
in
in
pop
sub
cmp
ljmp
mov
cmp
call
mov
adc
addr16
cmp
leave
mov
xchg
outsl
fisttpl
cmp
fucomp
or
fistpl
xor
dec
call
daa
pop
push
frstor
sub
rcrl
dec
add
push
nop
jge
sar
cmpsb
lds
loopne
sbb
mov
int3
cmp
cmc
pop
mov
test
xchg
dec
adc
xor
adc
adc
push
xor
jge
scas
mov
push
cmc
out
push
movsb
push
lret
out
push
dec
movl
mov
push
fisubrl
lret
fists
lahf
loopne
stos
pop
xchg
dec
add
lods
icebp
sub
lock
js
dec
cld
pop
shlb
lock
or
out
mov
sub
ljmp
push
or
pushf
stc
pusha
scas
lea
sub
or
cmp
scas
lahf
jecxz
es
sub
outsl
jns
add
inc
adc
shrb
mov
mov
and
cmpsb
lds
sbb
push
sbb
pushf
stc
mov
add
lea
cs
cmp
mov
into
ds
xor
mov
pop
mov
hlt
cmpb
dec
cld
push
shll
xchg
jns
sub
xchg
push
sbb
faddp
mov
call
push
mov
xor
ret
pop
fistpl
push
sarb
cwtl
sub
jp
and
rcr
or
inc
jmp
in
stos
inc
shl
pop
push
int
mov
ljmp
jmp
das
mov
mov
adcl
imull
sbb
xor
imul
xor
sbb
sbb
jp
xor
and
xor
mov
add
dec
cld
jo
adc
push
dec
jmp
and
leave
adc
jmp
mov
push
jno
loop
dec
and
cmpl
mov
adc
add
adc
in
push
dec
lret
cmp
rorl
inc
cs
jns
or
loopne
cmp
mov
ds
imul
mov
loope
pusha
xchg
push
cmp
push
sub
lcall
mov
push
cmp
mov
lds
out
mov
or
mov
pop
fs
lret
sub
and
mov
stc
fistpl
cltd
daa
inc
sub
bound
mov
push
in
add
mov
insl
sub
rcr
ficoml
rcrl
jb
outsl
xorl
nop
pop
scas
sub
push
lods
or
jle
lea
mov
repnz
dec
sbb
fistps
mov
in
stc
lea
clc
xor
je
and
pop
enter
cmp
test
jle
out
sbb
cltd
hlt
sbb
movsb
inc
mov
pop
ljmp
xchg
pop
jmp
in
popf
sub
push
shrl
stos
cmpsb
rcll
inc
add
dec
fs
dec
mov
jp
mov
mov
jg
scas
xchg
add
inc
adc
movsl
lahf
mov
xor
adc
das
lods
aad
out
sbb
sti
lcall
mov
jbe
popa
scas
nop
push
int
add
enter
popf
dec
cmpsl
int3
jno
imul
xor
push
and
lods
mov
pusha
jmp
mov
push
or
aad
pop
in
ds
jnp
pop
push
les
jnp
dec
clc
pop
std
push
xor
dec
mov
jl
mov
cmp
aam
dec
or
mov
mov
xlat
jns
xor
add
push
cmpsl
pop
pop
jb
push
popa
aad
push
dec
jnp
pusha
or
mov
hlt
test
xchg
loop
aam
mov
repz
push
mov
addb
and
sub
cmpl
out
mov
pusha
and
aaa
push
pusha
mov
jmp
aas
sbb
iret
cmp
into
mov
mov
xor
xor
popf
add
lock
rcl
repz
jo
out
inc
daa
rorb
or
mov
out
push
sub
ret
inc
fs
inc
pop
sbb
jmp
sarl
or
push
xor
in
mov
pushf
xchg
adc
inc
std
jecxz
fsub
loop
mov
fwait
and
daa
lcall
repz
repnz
das
push
pusha
xchg
dec
pop
pop
push
mov
xor
mov
jle
cwtl
xchg
jne
jmp
jge
inc
inc
sub
ds
ret
jle
cmp
jns
xchg
cmpl
cmp
cmpsl
test
xchg
shlb
jl
add
mov
mov
ret
add
loopne
mov
xchg
lret
hlt
jp
adc
pusha
sub
xor
lahf
stos
gs
pushf
xor
mov
rolb
and
sub
jae
lds
mov
lret
mov
sbb
nop/reserved
push
clc
and
ds
dec
cmp
cmpsl
jg
inc
adc
cwtl
or
ficoml
flds
inc
jo
add
lahf
adc
pushf
add
fdivrs
addl
orl
pusha
testb
push
out
mov
push
in
mov
inc
stos
lcall
cmp
adc
test
xchg
loopne
or
push
outsb
add
sub
gs
lea
stos
inc
fisubrl
les
dec
insl
mov
jae
cmpsb
push
dec
add
mov
fcoml
cmp
bound
dec
dec
jbe
shlb
pop
cmpsb
sub
and
mov
shl
push
mov
mov
jbe
fwait
sbb
jg
sbb
pushf
aas
lods
stos
dec
rcr
aam
movsb
mov
adc
call
pop
in
rcrl
or
outsb
aad
mov
adc
xchg
sbb
imul
cmp
in
pop
dec
mov
inc
movb
push
lret
out
dec
movl
cmp
sub
jb
aad
sbb
cmp
lahf
push
in
cmpsb
push
pushf
xor
jle
mov
adc
xor
ljmp
jle
cmp
jecxz
or
sbb
xchg
or
mov
aam
dec
in
jp
ss
scas
jecxz
mov
cmp
mov
or
add
jl
add
inc
pop
xor
xchg
xchg
addl
push
xor
jp
cmp
push
pop
cmp
jle
add
jns
inc
push
xor
xorb
hlt
lret
leave
fwait
push
push
stos
lea
xchg
adc
nop
inc
mov
dec
pop
stc
and
cmp
lret
outsl
aaa
xchg
push
mov
mov
fdivrs
lods
xor
and
addb
in
or
ja
xchg
enter
cld
fwait
das
repnz
cs
pushf
xchg
ds
pop
scas
push
pushf
frstor
test
test
add
cld
cmp
lcall
xor
push
dec
adcb
xchg
testb
stos
xor
dec
repz
pop
xchg
sbb
mov
mov
test
add
inc
sbb
cli
dec
sbb
stos
mov
inc
lock
in
stc
sub
stc
sahf
dec
sbb
out
js
cwtl
loopne
cmp
aam
sbb
roll
push
mov
mov
stos
sub
insl
out
arpl
cmp
mov
aaa
or
jmp
test
jb
stos
sarl
fistpl
int
cmpsl
inc
adc
testb
mov
mov
test
dec
push
test
sub
and
aaa
mov
pushw
cmpsl
xor
scas
sub
sahf
sbb
fidivrl
and
add
subl
push
push
cs
pop
cmp
pusha
ss
bt
addb
cli
adc
fstl
inc
xchg
pop
cmpsb
push
xor
in
test
cmpsb
xchg
popa
out
mov
sub
mov
sahf
lods
adc
icebp
inc
dec
nop
xor
in
xor
insb
sbb
leave
lcall
mov
mov
dec
cmp
sub
es
xor
movsb
lods
int
test
inc
dec
xchg
lret
sub
mov
jg
or
dec
mov
scas
xchg
cmpl
push
xchg
orb
jg
sbb
mov
mov
aaa
out
test
xor
pop
dec
fwait
jnp
xchg
sub
mov
pop
mov
xlat
sub
and
inc
inc
mov
pop
xchg
mov
aad
and
inc
scas
gs
mov
jo
ret
jno
sbbl
and
sbb
push
push
aas
lods
and
and
mov
push
aas
idivb
or
push
adcb
idiv
lds
popf
mov
xor
test
out
xor
ret
jmp
mov
push
push
inc
movsl
out
xor
pop
xchg
test
dec
and
add
cli
addr16
outsl
mov
push
orl
push
xor
jl
and
nop
dec
pop
pop
mov
sbb
sub
jp
adc
pop
std
cld
adc
xchg
jecxz
xchg
test
int3
jl
aas
adc
xchg
dec
incl
sub
pop
xor
mov
pop
lock
dec
fcompl
xchg
lcall
and
ret
adc
xorl
sarb
movsb
mov
jg
ja
inc
jbe
mov
and
sbb
lret
cltd
dec
cmp
dec
xchg
push
mov
test
and
xlat
aaa
dec
or
cmpsl
arpl
xlat
test
js
gs
aad
mov
nop
ret
aad
insb
xor
cmp
or
imul
push
testb
js
xchg
sti
adc
fimull
mov
out
lret
scas
jae
mov
je
pop
fnstcw
addl
mov
xor
mov
sbb
jle
pushf
aad
int
loop
imul
fldcw
adc
push
out
push
xlat
dec
add
cwtl
adc
out
ret
arpl
stos
cmc
in
jmp
sub
mov
xchg
int
mov
int3
sub
jnp
sub
dec
push
push
rolb
jnp
shrl
sbbb
dec
jp
and
sarl
mov
jp
les
xor
rcrb
dec
sbb
aam
sub
mov
iret
and
ret
mov
cmp
xchg
push
push
mov
pop
adc
sub
sbb
fcom
dec
or
in
adc
sarb
test
xchg
data16
push
std
pop
cmp
add
icebp
inc
pusha
jmp
lods
popa
mov
rorl
jne
inc
xlat
xchg
pop
mov
sub
or
mov
xchg
test
mov
inc
cmpsb
fdivl
out
sub
push
bound
mov
pop
addr16
mov
push
rcrl
cltd
sub
sub
add
fisttpll
fsubrl
sbb
jns
mov
nop
bound
xchg
fs
in
fidivrs
add
push
scas
test
xor
popf
dec
loopne
jne
out
pop
xchg
push
ljmp
xchg
ror
ds
mov
daa
fldl
sahf
fldenv
lret
movsb
lahf
pushf
leave
int3
mov
xchg
outsl
jge
loop
clc
inc
dec
push
mov
fmuls
mov
arpl
jl
sti
jl
int
mov
faddl
and
sub
add
mov
pop
mov
lahf
fs
mov
iret
pop
fnstsw
xchg
cltd
xor
adc
or
iret
out
je
fsubs
jmp
das
shl
fwait
sbb
push
cltd
push
add
jle
xor
ret
jmp
jns
fldl
pop
sub
cmpsl
adc
jecxz
call
dec
test
xchg
mov
int3
jnp
xchg
sub
fldenv
mov
pusha
and
jecxz
ss
loopew
adc
push
jae
mov
sub
jle
idivb
mov
aas
leave
mov
xchg
popf
mov
jae
js
mov
dec
push
dec
std
lock
lock
xchg
aaa
arpl
pop
push
ficompl
pop
xchg
mov
into
cli
loope,pn
cwtl
jcxz
xchg
sbb
nop
mov
xor
xor
push
or
jle
pop
pop
cli
xor
outsl
xor
lahf
ficomps
cld
and
or
lret
outsb
stos
and
cmp
ja
mov
fwait
lock
pop
pop
enter
popf
sbb
dec
or
dec
mov
push
aam
mov
notl
leave
ja
xchg
and
lss
xchg
push
cmp
push
push
and
sub
xor
popa
fs
jmp
push
imul
cmp
popf
add
inc
pusha
add
jmp
outsb
xchg
sbb
cld
jg
movsl
popf
lock
and
hlt
dec
sahf
fildll
add
lcall
sbb
fdivrs
lods
nop
ret
sub
inc
dec
and
adc
push
push
fisttps
das
pop
or
out
jl
out
jle
cmp
fcmovbe
shl
sub
sub
xchg
pop
les
sbb
cld
into
push
lahf
xor
decb
sub
inc
xchg
mov
inc
daa
lret
loop
clc
cmp
mov
inc
insl
bound
mov
sub
mov
daa
mov
lahf
xchg
fidivrs
push
inc
jnp
adc
sti
cs
arpl
add
push
cmpsl
mov
cltd
das
cltd
int3
scas
icebp
sub
inc
inc
fwait
mov
clc
adc
movsb
jo
or
and
or
mov
stos
cld
cld
repz
jmp
pop
or
or
addl
jno
lds
inc
adc
imul
andb
fimull
mov
jo
jno
jno
xchg
out
stc
jb
push
push
mov
push
les
mov
jbe
shl
jle
sbb
movb
or
insb
dec
inc
outsl
sbb
std
or
mov
dec
adc
dec
in
or
maskmovq
imull
adc
nop
into
lods
push
xor
adc
xchg
add
xchg
lds
data16
aaa
push
bound
cli
popl
pop
adc
cmpb
loope
push
divl
mov
mov
xor
loopne
cmp
push
xchg
xor
scas
mov
pop
stos
mov
push
mov
out
pop
inc
mov
movsl
lock
in
xchg
jge
adc
push
pusha
into
add
loopne
repnz
cs
adc
mov
lahf
mov
jmp
loop
adc
add
or
ret
inc
pop
xchg
add
cmp
add
test
in
sahf
test
inc
js
js
sti
test
mov
sbb
cmpsl
push
in
gs
addb
paddd
testl
dec
sub
mov
sub
imul
aad
or
push
inc
mov
and
mov
int
fs
fistpl
int
add
imul
sub
fldenv
and
sbb
xchg
pop
dec
push
shl
mov
pop
pop
jb
inc
insl
xor
ret
sub
mov
mov
mov
jno
sbb
les
inc
mov
gs
fiaddl
jne
data16
in
int
sub
push
inc
mov
mov
pop
jne
or
adc
ret
xchg
testb
data16
mov
inc
xor
jmp
lods
xor
push
mov
xchg
fnstcw
cmp
or
daa
pop
xor
pusha
test
jno
clc
insl
loopne
sar
inc
rep
xor
sub
xchg
clc
daa
or
in
out
imul
scas
mov
cld
aas
add
mov
nop
out
sub
adc
iret
in
cwtl
push
in
push
or
pop
push
sub
cmpsb
pop
lcall
and
cmp
pop
sbb
test
movsb
jno
push
out
jle
pop
sub
jp
xchg
ds
push
jno
jle
jmp
push
repnz
lret
mov
outsb
lds
xor
pop
jnp
les
test
pop
mov
rcr
add
std
sbb
inc
pushf
mov
adc
sbbl
repnz
jecxz
mov
scas
jnp
add
xchg
push
into
mov
jl
testb
inc
push
pop
adc
fcompl
cmp
fcomps
test
lcall
sub
cmp
shll
mov
and
mov
ror
add
pop
fs
nop
mov
adc
lret
enter
aad
or
popa
daa
jbe
or
xor
mov
pop
push
test
xchg
inc
pop
mov
fldl
pop
js
mov
fwait
jle
shll
xchg
std
aaa
adc
and
xchg
sbb
scas
mov
and
inc
fiadds
add
jns
clc
xchg
jl
jle
repz
clc
mov
xorb
loope
test
addr16
jp
iret
push
sarl
stos
test
or
test
out
mov
push
sbb
pop
push
dec
orb
mov
test
mov
aad
stos
push
add
adc
aad
dec
test
sbb
inc
mov
dec
fiaddl
push
jbe
loopne
push
pushf
cmp
incb
push
pop
and
adc
ja
stos
mov
popa
cmc
movsl
popf
les
pop
mov
dec
sub
fstpt
cmp
mov
loop
xchg
inc
adc
in
push
xor
jecxz
les
or
dec
bound
jl
sub
mov
and
insb
int3
out
mov
adc
cmp
xor
pop
js
push
fildll
adc
mov
lods
xor
cmp
push
rcll
je
ds
aaa
es
lcall
or
mov
jle
dec
clc
lahf
sbb
lcall
inc
pop
stos
and
test
jmp
enter
outsb
or
mov
sub
mov
popa
xchg
fcomps
cld
xlat
subb
add
dec
push
cmp
pop
push
leave
adc
push
mov
sub
in
aam
je
push
add
inc
loop
sarl
cmp
sub
into
clc
dec
mov
mov
sub
leave
fiadds
int3
cmp
shll
sub
hlt
mov
pop
inc
sbb
daa
push
cmc
xor
pop
xor
aaa
fldl
jne
or
adc
push
xor
mov
and
scas
fprem
xchg
dec
push
and
orl
adc
stos
sub
add
jb
inc
imul
lret
outsl
dec
adc
cmp
in
adc
mov
iret
sub
pop
jno
in
push
jne
inc
daa
mov
mov
sub
jecxz
andl
hlt
inc
test
pop
xor
push
stos
jb
ljmp
pop
sahf
ja
rcrb
jbe
mov
pop
fisubs
mov
in
int
cmpsl
outsl
popa
pop
mov
aas
sbb
push
ret
and
push
mov
xor
je
test
jge
shr
scas
inc
fiadds
scas
pop
jg
pop
test
or
or
ret
loope
aam
popa
je
mov
inc
dec
dec
xchg
push
addr16
aaa
jae,pt
jmp
or
jmp
add
mov
adc
and
bound
inc
and
or
jle
scas
xor
or
movsl
daa
adc
or
ficoms
insl
lea
pop
mov
jmp
push
push
jecxz
in
xlat
xor
jge
movsb
add
fsubl
jno
xor
sub
mov
adc
xor
xor
inc
mov
pusha
xor
xchg
adc
xchg
mov
cmp
hlt
in
rcrl
pop
js
dec
fists
inc
test
cmp
jmp
sub
mov
scas
fisubrl
adc
adc
std
lods
lock
pop
jns
adc
push
ret
add
mov
mov
cwtl
jnp
sbbl
mov
xor
mov
or
dec
psrad
movsb
jae
test
aaa
push
sbb
cmp
jbe
dec
cltd
sub
cmpsl
push
mov
mov
mov
jl
cmpsb
rcll
fcompl
cmp
push
sub
xchg
inc
pop
push
and
scas
fcoms
push
jmp
lahf
cltd
subl
clc
je
sub
negl
or
sbb
sub
sub
ret
orb
les
push
outsb
pushf
and
pop
inc
mov
xor
lods
jne
jmp
fisttpl
cmc
dec
mov
not
insl
jno
repz
iret
rolb
cmpsl
lret
cld
inc
lret
xor
aas
pop
cwtl
mov
or
pop
cs
push
bound
fstl
push
rcrl
and
cwtl
mov
test
ror
ja
out
mov
push
mov
outsl
dec
loopne
pop
jb
mov
test
jo
cli
or
sbb
and
stc
rorb
mov
test
jbe
mov
cmp
or
mov
rolb
push
ljmp
jae
inc
test
fisttps
mov
sub
pop
jb
adc
repnz
inc
mov
scas
dec
fwait
js
fwait
inc
jecxz
jge
lahf
inc
sbb
pop
stos
movsl
iret
int3
xor
pop
clc
jb
mov
in
fiaddl
test
mov
es
dec
dec
cmp
sub
arpl
xor
cmp
sarb
pop
pop
bound
subl
sub
xchg
adc
jg
lods
popf
test
lahf
cwtl
outsl
ret
jecxz
dec
inc
mov
das
and
andl
sub
lret
pop
adc
dec
int3
or
push
fidivrs
mov
fildll
push
push
dec
aad
mov
mov
xor
lahf
xor
insb
mov
cmp
jmp
lret
jbe
fwait
push
xor
inc
xor
fistpll
dec
mov
jp
sti
rcrl
leave
mov
and
shrl
dec
ja
pop
scas
ret
jno
ror
xchg
cmpsl
shrl
jecxz
jo
and
sarb
or
push
mov
dec
test
add
mov
sbb
sarb
lods
jle
imul
pop
mov
sbb
dec
dec
roll
fcompl
cmpsl
es
add
and
jae
mov
adc
pop
dec
test
loop
mov
insl
les
ret
add
push
xchg
int3
pop
cmp
clc
hlt
dec
in
jecxz
mov
ficomps
adc
out
fs
rcrl
xor
sbb
and
mov
push
in
fadds
lret
sarb
or
je
inc
mov
ss
pop
push
inc
adc
addl
movlps
repnz
popf
mov
fpatan
imul
push
lock
inc
jg
rol
fisubrs
lods
inc
add
or
into
inc
cld
stos
jae
les
enter
xor
pop
sub
jbe
add
gs
test
in
out
mov
outsl
adc
jnp
lcall
andl
mov
aam
out
in
inc
xchg
lock
lods
sbb
mov
push
int
mov
fcomps
bound
sub
and
and
lcall
iret
and
imul
insl
jns
or
das
jns
mov
stos
js
mov
mov
mov
pop
lods
pop
sub
call
ret
stos
inc
and
testl
sub
shl
stc
sbb
jnp
cwtl
aas
add
ljmp
xor
push
ljmp
xchg
cmp
dec
shrl
mov
inc
push
sbb
dec
bound
call
mov
adc
fdivrl
push
pushf
xor
jmp
pop
cmp
outsl
add
lahf
mov
cmp
int
or
cmp
fstpt
repz
je
xchg
cmp
jo
or
hlt
mov
test
fimuls
ss
aas
xor
xchg
add
aaa
or
test
fdiv
dec
cltd
cwtl
push
stos
repnz
mov
xchg
mov
mov
stos
loope
je
xchg
cmp
cmpb
xlat
mov
test
jnp
fcompl
mov
dec
jns
inc
out
and
add
cmc
dec
frstor
and
clc
xchg
jbe
add
pop
inc
add
xchg
movd
cmp
aam
pop
js
xor
out
imul
or
inc
faddl
pusha
and
dec
ret
gs
mov
leave
loop
pushf
loop
insl
shlb
insl
dec
push
rcr
fwait
and
add
repnz
adc
pop
repz
dec
rolb
adc
and
cmp
stos
xchg
data16
lret
insb
insl
arpl
mov
popf
xchg
cmp
cmpb
and
dec
out
jl
addr16
ljmp
push
clc
rclb
dec
push
or
fdivl
adc
aaa
pop
cmpsl
xchg
jae
xchg
push
or
aaa
in
push
sbb
push
mov
pop
int3
xor
adc
rclb
insb
int
mov
shrl
adc
xchg
push
adc
out
xchg
inc
mov
jne
div
cwtl
clc
lret
dec
pop
ljmp
or
jne
movl
sub
inc
outsb
movsl
sbbb
cwtl
gs
mov
xor
popa
lds
push
fldl
and
adc
lods
ret
or
fwait
mov
push
xlat
pop
loopne
or
add
rolb
dec
mov
inc
rcrb
hlt
xlat
fldenv
jne
pop
pop
bound
out
popa
sbb
std
movsl
mov
hlt
dec
jbe
je
mov
hlt
xchg
aad
push
inc
rolb
cmp
sub
cmp
mov
sahf
push
rol
push
loope
or
pop
adc
int
fdivrl
inc
xchg
push
fld
sbb
mov
rcl
mov
aam
push
addr16
add
add
fstl
push
sbb
jg
jmp
clc
jns
push
jp
add
mov
sbb
jl
in
jge
jne
adc
aas
rorb
xor
dec
iret
jg
rcrl
mov
mov
lret
mov
xchg
repz
repnz
fwait
les
ret
mov
jg
aad
inc
leave
lret
sbb
cmp
xchg
icebp
jbe
jg
push
mov
push
test
dec
pop
xchg
rcr
imul
jmp
out
insb
mov
mov
dec
pop
xchg
dec
mov
mov
lock
pusha
adc
pop
xor
imul
lods
fiadds
and
sbb
or
testl
and
add
add
fildl
mov
xor
xchg
xchg
dec
in
fsubrl
xor
insl
dec
dec
mov
mov
xchg
and
sahf
mov
les
in
std
gs
inc
in
mov
and
xor
inc
sub
loop
mov
and
jbe
in
xor
push
xchg
divl
xor
lret
xchg
push
hlt
mov
aas
jae
pop
lret
xor
pop
cmpsl
out
pop
es
pop
out
mov
mov
dec
fimuls
mov
pop
inc
imul
jns
js
lds
fwait
cmpsb
adc
mov
outsl
cmp
cmpsb
popa
mov
jle
arpl
stos
fsubrs
jg
mov
je
repz
decb
push
stc
adc
xchg
adc
setnp
movsb
inc
xor
loope
fs
nop
sub
scas
adc
ret
and
lds
stos
mov
add
fwait
or
xchg
roll
cmp
xchg
jns
jecxz
pop
insb
mov
out
mov
test
dec
push
lock
cmp
mov
cmpsl
nop
adc
mov
mov
cmp
sub
outsl
jge
dec
aaa
hlt
imul
das
xchg
inc
pop
loope
test
cmpb
dec
lods
mov
inc
dec
and
stos
rcll
sub
in
mov
jb
add
or
pop
fwait
cmp
aam
and
int
jae
xor
iret
jbe
pusha
inc
xchg
sysexit
aad
cmp
cltd
imul
jle
aad
ss
sti
mov
imul
pop
ret
inc
sarb
jp
inc
in
dec
int
adc
call
sub
ja
adc
popf
std
push
mov
fdiv
jae
dec
ficoml
arpl
xor
addr16
xchg
push
aam
adcb
hlt
mov
push
lret
push
lock
ljmp
cmp
lods
int3
push
das
or
in
sbb
push
xor
xor
inc
add
aaa
xchg
rorb
push
lock
xlat
mov
shrb
int
leave
data16
repz
add
lcall
int
xlat
notb
out
sarl
push
xchg
test
js
push
stos
adc
jg
xor
mov
call
or
xor
dec
lret
dec
dec
or
imul
inc
push
push
mov
lea
dec
or
jp
test
push
pushf
in
dec
shrb
rep
insl
loop
popa
or
je
and
cmc
pop
add
ret
loop
pop
inc
popf
jbe
and
out
push
sbbl
push
fdivl
pcmpeqw
inc
lahf
cmp
push
sub
push
out
nop
fdivl
nop
lcall
std
xchg
mov
loope
and
in
push
das
cld
xor
andl
inc
in
int
aam
adc
jecxz
adc
mov
subb
inc
repnz
loop
dec
sbb
or
or
add
idivb
mov
mov
mov
negb
iret
pop
push
jle
icebp
out
dec
and
sub
int3
icebp
xchg
out
mov
xchg
sbb
fists
jnp
cmovnp
jnp
jbe
jge
adc
lea
out
ror
out
clc
movsl
mov
or
xor
and
mov
inc
push
inc
test
add
sub
pop
sbb
xor
mov
or
outsl
mov
aam
dec
jge
mov
pop
iret
xchg
pusha
das
hlt
mov
mov
into
or
push
imul
mov
fmuls
adc
icebp
lcall
or
inc
cmp
sub
int3
cmp
mov
loope
lods
or
cld
push
jnp
ret
mov
xchg
push
adc
fistpll
xor
cmp
pop
repnz
rorb
xchg
xchg
pop
sub
ficomps
pushf
fisubl
loopne
stos
jo
stos
push
xor
inc
inc
lahf
sbb
xchg
mov
jp
iret
scas
rclb
mov
sbb
push
jg
xchg
adc
insb
xor
sub
xor
sbb
call
cmp
mov
imul
aaa
dec
inc
and
pusha
js
daa
int
xchg
stos
ljmp
mov
push
cltd
mov
dec
sbb
pop
mov
loope
inc
dec
sub
lods
jg
mov
jg
and
sbb
jecxz
lods
out
es
fsubrl
cltd
or
loope
in
dec
cmp
jb
dec
pushf
lds
ror
dec
and
call
stc
lcall
stc
jecxz
iret
and
int
pop
jge
or
adc
or
push
push
mov
ja
pop
ljmp
int3
jecxz,pn
repnz
cmpsb
xor
test
ficoms
int
sar
sti
fidivrs
push
into
insl
ljmp
xchg
int3
popf
in
cld
rorb
sbb
mov
mov
jge
mov
push
and
and
jecxz
adc
insl
loopne
cmp
ss
gs
cli
shll
xchg
add
cmp
mov
je
inc
cmpsb
mov
es
lret
leave
fcomi
subb
cmp
sbb
sbb
sub
mov
imul
dec
scas
and
jge
jae
out
repnz
xchg
ss
cmp
cli
out
imul
push
or
subl
mov
push
bound
cld
dec
lret
divb
nop
adc
rclb
pop
lock
cld
add
hlt
push
xchg
pop
imul
lds
mov
sub
push
lcall
ljmp
popl
dec
inc
scas
mov
jg
repnz
pusha
cmp
aad
adc
pop
mov
mov
add
adc
pop
dec
stos
add
or
ljmp
xchg
push
xor
sub
mov
std
mov
sbb
mov
jb
adc
test
inc
sbb
mov
in
mov
or
fwait
mov
push
icebp
stos
xchg
ljmp
popf
cmp
and
xchg
mov
loopne
xchg
jg
jge
cmpsl
cmp
adc
lds
dec
add
xchg
pop
lds
ror
sbb
addr16
nop
dec
cmp
inc
ret
sahf
ljmp
push
mov
push
and
jg
mov
jge
inc
scas
fsubs
test
repz
out
mov
or
stc
cmc
xchg
push
mov
jbe
imul
push
jle
shrb
std
enter
in
xorb
test
and
xchg
scas
sub
fsubrs
test
mov
mov
mov
insb
dec
int
sbb
arpl
push
shl
xor
cli
sbb
sub
adc
out
sub
int
adc
pop
sub
xchg
jecxz
adcb
repz
jp
add
lods
das
mov
fsubl
xchg
xlat
movsbl
pop
mov
mov
push
xor
xchg
mov
shrl
mov
mov
stos
in
ficoml
test
fcomp
xor
adc
lret
std
loopne
jmp
dec
mov
in
js
push
call
sub
xchg
cmp
sub
push
out
push
jge
add
mov
sub
and
pop
inc
xchg
fisttpl
rclb
jns
xchg
nop
mov
mov
cmc
sbb
push
idivl
lahf
xor
lods
push
cmp
mov
sbb
icebp
subl
cld
xchg
pusha
in
push
dec
addr16
into
test
cwtl
cmc
or
jae
leave
xor
fisttpll
call
dec
ret
inc
data16
iret
movsl
sbb
or
xchg
pop
push
lahf
sti
dec
sbb
inc
mov
and
push
push
fsubrl
pop
dec
dec
outsl
mov
scas
scas
jmp
in
cli
loope
daa
mov
addl
dec
and
mov
inc
and
mov
pop
cld
mov
dec
mov
stos
pop
and
cmp
jns
push
and
imul
daa
push
inc
push
insl
sub
into
insb
fcmovu
addr16
cld
pop
inc
adc
bound
stos
dec
test
fs
adc
mov
shrl
fsubr
loopne
test
shl
xchg
push
ret
shll
or
testl
pusha
dec
fcmovbe
sub
mov
jle
mov
xchg
push
jge
jle
jno
jecxz
repnz
rcll
dec
mov
call
push
loopne
gs
fsts
in
int3
rcrl
jge
lea
cli
repz
shlb
dec
lock
sub
mov
data16
jl
inc
ret
sbb
mov
testb
inc
lea
test
and
push
mov
ret
adcb
xor
or
cmp
push
lock
in
sbb
test
into
xor
xchg
inc
rolb
rcr
fsub
fnstenv
or
inc
pop
hlt
imul
cmp
test
or
das
lods
dec
inc
mov
push
xchg
adc
xchg
lods
repnz
or
mov
mov
sub
push
aam
adc
mov
stos
cmpsl
roll
mov
jge
push
rolb
push
xchg
mov
clc
scas
pop
rcrl
jbe
adc
jno
test
jle
and
test
rorl
push
sbb
repz
subb
inc
cmpsb
inc
push
pop
js
rolb
scas
stos
mov
subl
int
cmp
aad
jnp
mov
pop
imul
rclb
lahf
inc
subps
ret
jecxz
test
popf
sbb
lret
iret
insl
inc
fld
mov
fcmovnb
and
push
cs
dec
xchg
in
orb
ficoms
test
adc
sbb
fsubs
in
movsb
rcll
xchg
push
jne
inc
aas
jbe
inc
jp
adc
pop
adc
mov
inc
movsb
popf
andb
int
orb
jle
movsb
mov
add
xchg
fdivrl
adc
mov
fisubs
pop
cmp
leave
andb
inc
popa
jnp
aad
xchg
fistl
cmp
je
mov
cmp
xchg
and
mov
in
adc
add
mov
scas
pop
outsl
mov
mov
fs
addr16
nop
lods
mov
dec
adc
lods
imul
adc
mulb
cltd
mov
add
xchg
ss
rorl
sub
mov
in
mov
adc
mov
pop
xor
xor
movsl
addl
out
push
mov
mov
dec
fsubs
pop
daa
int3
push
pusha
lods
jp
cmp
push
cs
es
mov
xchg
shr
mov
adc
aam
shr
xor
fsub
les
arpl
or
fistps
jno
cmp
add
or
test
pusha
add
jae
out
das
mov
sub
xchg
ds
outsl
mov
cmp
ss
lods
fs
mov
aad
aas
mov
xor
bound
bound
or
ret
push
pop
mov
xchg
ret
scas
cmp
mov
cmp
addl
je
and
popf
pop
adc
cmpsl
pop
aad
jnp
aam
pop
leave
xchg
xchg
test
mov
das
jge
push
clc
mov
mov
mov
shlb
pusha
xchg
icebp
imul
pop
in
vmread
xchg
loopne
cld
enter
hlt
scas
imul
inc
loop
or
aam
and
mov
ljmp
ljmp
push
mov
out
fsubrl
mov
adc
push
mov
xorb
jl
pushf
sarl
out
in
or
sbb
xlat
add
jbe
dec
in
and
scas
or
ficomps
dec
xchg
outsb
fisttpl
lock
popf
mov
shl
pop
ljmp
es
mov
mov
jo
ss
add
mov
sub
mov
hlt
xchg
int3
mov
add
sti
popa
clc
enter
mov
mov
cld
lret
mov
out
mov
inc
xchg
and
lea
es
repnz
push
jp
sbb
lcall
mov
lea
ret
ljmp
cmp
cmp
rclb
popa
icebp
ljmp
pop
into
pop
gs
cmp
xchg
xchg
inc
sbb
repz
fs
call
pop
mov
push
dec
into
jmp
out
add
mov
movsl
xorb
mov
bound
pop
imul
iret
mov
pop
repnz
popa
push
das
clc
ret
es
pop
cs
nop
jge
xchg
sar
cmp
dec
and
imul
test
jle
dec
mov
push
aaa
add
outsb
jns
sahf
sbb
sbb
call
clc
data16
fwait
nop
call
sbb
into
hlt
jle
adc
pop
cmp
lds
mov
orl
shll
adc
and
mov
or
lods
ret
gs
sub
movsb
pushf
sub
daa
or
divb
cmc
adc
fidivs
sbb
fsts
cmp
sbb
in
arpl
add
cs
xchg
pop
sub
aaa
cmp
movsb
mov
mov
sbb
sbb
mov
call
mov
or
mov
sub
lcall
rol
adc
dec
shrb
add
cs
jns
xor
xchg
or
push
push
dec
in
lds
mov
imul
mov
cs
inc
mov
in
gs
loop
inc
cmp
push
rorl
popf
popa
into
adc
loope
mov
ja
out
adc
push
sbb
je
pop
lods
dec
scas
lock
clc
aas
and
cmpsl
in
pushf
pop
adc
cmp
jo
hlt
dec
lock
scas
jnp
pop
jne
mov
mov
addr16
mov
popf
shlb
or
test
std
xor
negl
scas
xchg
jae
xchg
pop
or
cmpsl
and
sbb
jns
dec
and
cs
adc
repz
mov
dec
cltd
aam
push
jno
loopne
int
lock
popa
mov
jb
push
icebp
inc
mov
xor
xor
sub
push
leave
sbb
dec
jno
sbb
or
std
and
ljmp
inc
jbe
jg
fsubrs
fnstsw
xchg
inc
loop
inc
aam
mov
sbb
in
push
xchg
int
sti
insb
pop
popa
dec
pop
hlt
in
mov
mov
inc
divb
ss
ficomps
movsb
mov
add
add
mov
testl
shlb
lret
sub
pop
mov
or
xor
jb
pop
cwtl
test
and
lds
pusha
jmp
std
dec
cli
mov
jmp
xchg
cwtl
test
jo
leave
shll
mov
addr16
div
xchg
and
pop
test
shll
adc
mov
subb
call
hlt
nop
call
pusha
push
out
out
loop
xchg
jb
and
and
cmp
push
mov
cs
jle
or
scas
mov
or
push
mov
aam
xchg
aad
sarl
pop
test
imul
fs
lret
sti
sub
sbb
lcall
lahf
xchg
fisttpl
dec
test
jb
ret
das
sbb
sub
add
cmp
xchg
push
imul
das
mov
or
scas
mov
fldt
add
dec
pop
into
call
push
loope
enter
out
call
push
sbb
test
rcll
push
fistps
mov
sbb
jae
fldl
cltd
inc
jns
sub
sbb
movsl
fists
cmp
mov
sub
sub
cwtl
xlat
jp
aad
pop
mov
or
jl
mov
cmp
push
xchg
popa
mov
loop
pop
xchg
insb
lea
mov
mov
adc
js
sti
stos
leave
mov
lcall
sub
pop
mov
mov
lahf
cmc
insl
add
xor
cli
push
shlb
lock
or
cmp
movl
push
js
and
out
and
cmp
dec
gs
xchg
ret
test
gs
lcall
push
rolb
mov
in
xor
jns
nop
mov
imul
jb
sub
mov
pop
outsl
adc
lock
popa
lods
push
pop
insl
lret
repnz
fldz
push
filds
icebp
popf
xchg
and
fdivrl
add
xchg
call
or
sbb
cmpsb
in
push
jg
sbb
jle
les
xchg
sbb
mov
xchg
cwtl
add
leave
insb
loop
cmpsb
fsubrp
dec
dec
popf
xchg
imul
sub
push
addr16
add
lods
mov
pushf
in
imul
out
xorl
adc
mov
xchg
push
jg
mov
cwtl
hlt
inc
add
mov
fwait
xchg
out
cmp
jp
cs
shl
mov
push
jp
or
xor
ret
aam
leave
push
mov
loope
es
outsb
loope
data16
lea
call
mov
sarb
mov
inc
testl
fsubl
push
inc
mov
xor
js
mov
iret
ret
jge
or
mov
psubusw
repz
repnz
or
and
push
pop
testb
push
iret
test
pop
dec
inc
mov
pushf
jne,pt
addr16
fwait
jo
push
xlat
adc
and
aam
xor
xor
pushf
xchg
stos
fwait
scas
cmp
sub
cmp
adc
cwtl
and
cmp
push
and
xchg
jns
mov
jmp
lret
and
mov
ret
push
repz
lds
nop
xchg
adc
xchg
subl
xlat
insb
stos
scas
sti
cmp
daa
inc
sbb
lock
out
arpl
insl
inc
pop
ret
mov
xor
mov
mov
sbb
jmp
mov
xorl
xor
push
and
shl
dec
movsl
daa
cltd
jmp
sbb
sub
cmpsl
movsb
test
mov
jp
mov
js
jbe
pop
mov
test
testb
aas
inc
in
pusha
lcall
in
fwait
adc
push
jl
imul
push
fistpl
sbb
clc
mov
xchg
sahf
sub
fs
rolb
jbe
xor
fcomi
stc
push
adc
pushf
pusha
jp
sbb
mov
iret
add
stc
xchg
movsb
and
pop
shll
fadds
cmpl
ret
jp
add
shl
mov
jg
repnz
pushf
add
js
sahf
shl
ret
add
jae
aam
in
fs
jg
lds
dec
leave
loope
icebp
stos
and
adc
xor
pop
je
xchg
xchg
loope
sub
inc
xchg
jne
loop
or
outsl
push
out
xor
or
pushf
xchg
rcll
mov
das
cli
sbb
push
push
cmpsb
imul
mov
das
cmp
or
xchg
pop
mov
ja
insl
std
cmp
jno
xchg
sub
pop
mov
fistpl
dec
mov
adc
lods
outsb
jmp
in
push
sbb
lods
rorb
and
pop
jge
xor
shl
in
test
lds
jecxz
mov
andb
repnz
pop
xlat
adc
cld
lret
nop
lea
mov
in
test
jb
mov
cmp
test
mov
mov
xor
xchg
mov
sbb
ret
jecxz
imul
or
inc
xchg
jg
adc
shll
xchg
pushf
mov
sub
mov
cmp
sub
inc
mov
pop
and
jecxz
or
je
xchg
sub
sti
mov
jo
inc
xchg
stos
out
pop
scas
mov
fimuls
push
test
pop
in
jge
cmc
mov
sbb
or
mov
mov
inc
jae
shrl
mov
xor
loope
and
xchg
xor
lcall
js
mov
push
jae
nop
popa
ret
push
mov
pop
dec
pop
mov
xlat
repz
hlt
ljmp
mov
lret
nop
aad
adc
movsb
adcl
out
mov
nop
cmp
inc
dec
xor
stc
cwtl
jge
inc
test
sbbl
dec
mov
nop
in
into
push
pusha
insl
xchg
icebp
lahf
push
jecxz
dec
cmpsb
das
mov
or
cs
jo
mov
lods
fists
cmpsb
adc
mov
test
aas
pop
and
repz
or
inc
jae
arpl
mov
dec
hlt
add
or
or
sub
aaa
sub
nop
decl
es
cmc
jge
vpsllq
push
push
adc
push
and
xor
pop
push
jae
or
push
xor
dec
cmp
pushf
test
aam
fmulp
push
cmp
ret
ror
add
sub
and
push
and
inc
adc
in
test
sbb
stos
fcoml
push
sub
xchg
xchg
aas
add
sbb
push
loop
test
ficoml
pop
mov
loope
xchg
rorl
loopne
add
mov
cmp
inc
mov
stos
sbb
aad
or
cltd
xor
jmp
dec
dec
icebp
sbb
adc
push
inc
test
mov
lahf
add
ja
add
insl
lret
sbb
xchg
sbb
mov
xor
and
ds
test
shl
jne
mov
scas
xchg
and
jmp
mov
sbb
adc
mov
ja
inc
mov
inc
push
notl
mov
pop
sub
xchg
pop
out
mov
sbb
std
sub
dec
std
pop
mov
or
mov
lret
push
and
fistpl
aaa
mov
xchg
cld
cmp
fnsave
inc
cmp
aaa
test
movsl
and
scas
push
ljmp
addb
roll
mov
mov
stos
inc
in
pop
int
mov
repnz
pop
out
repnz
mov
push
jle
and
or
jle
outsl
sub
jno
push
adc
adc
sahf
sub
inc
jnp
mov
sbb
xor
adc
sub
cs
test
sbb
nop
stos
or
roll
enter
mov
and
push
loop
jbe
cwtl
cmp
ja
push
jge
sarl
out
and
push
xor
push
push
xchg
mov
inc
push
mov
test
popf
test
mov
arpl
jo
fistl
pop
testl
loopne
pop
and
pop
loopne
sbb
test
icebp
cltd
fstl
push
mov
dec
push
icebp
or
int
int3
retw
adc
loop
ss
insl
add
les
inc
sub
popa
add
inc
cmc
pop
push
mov
in
repnz
xchg
jecxz
add
push
pop
push
and
inc
mov
jecxz
sti
orl
loopne
sub
jg
jb
cmp
out
dec
push
inc
xor
nop
gs
jns
scas
movsl
call
jmp
jmp
inc
and
xor
in
cli
lret
cmc
push
das
cmp
pushf
mov
add
add
pop
lock
jb
sbb
dec
mov
ret
lods
cmp
pushf
imul
shrb
pop
push
sub
sbb
mov
clc
jge
fwait
sub
ss
movsl
rcrl
std
lods
xor
out
stos
pop
add
leave
mov
adc
sbb
mov
cmp
push
and
movsl
adc
jl
cmp
and
jns
jo
push
stos
jmp
lods
test
mov
lods
ret
shl
fwait
xor
rorb
jbe
cmp
inc
into
jmp
add
sub
in
out
sti
xlat
je
adc
out
icebp
adc
daa
push
in
push
fmull
sub
lcall
loopne
dec
dec
sbb
jmp
call
add
idivb
cmp
imul
mov
sbb
iret
xor
mov
adc
aad
mov
and
cs
into
fadds
xchg
lea
aam
fs
pop
sbb
pop
je
pop
xlat
pop
sti
jne
clc
lods
stos
imul
mov
mov
in
add
movsb
pop
int3
inc
sbb
ss
ror
call
icebp
fistpll
pop
ds
and
roll
fldcw
je
inc
icebp
nop
xchg
int3
push
ds
jo
out
ret
mull
cli
cmp
dec
mov
icebp
popf
jo
sub
jmp
ljmp
call
push
aad
lods
push
rcll
sti
aam
vpmaxub
roll
int
fisttps
jne
sub
outsb
push
mov
mov
andb
jl
icebp
iret
insl
mov
dec
adc
sbb
xchg
sbb
aad
movsb
nopl
outsl
int
cs
int3
jns
shl
add
xlat
and
pop
pop
data16
or
or
pop
inc
mov
xor
out
inc
pop
sarb
aas
cs
xchg
xchg
lcall
stos
addr16
mov
cld
or
pop
daa
mov
xorl
loop
data16
or
lods
sub
mov
push
rcrb
iret
ret
lcall
inc
push
mov
cwtl
mov
sarl
push
mov
ja
testl
addb
mov
daa
xchg
jb
mov
or
fld
nop
or
cmp
scas
add
mov
mov
mov
test
roll
lods
and
jno
push
ficoml
sub
and
add
in
mov
scas
fistpll
dec
lcall
aad
clc
cs
xlat
jle
inc
pushf
jnp
outsb
ss
pop
lods
shll
inc
inc
xchg
pop
jg
xchg
adc
cli
sahf
jbe
adc
les
int3
adc
rcl
movsl
nop
mov
adc
jns
or
rcrb
sarl
or
jge
push
sub
in
clc
sub
or
mov
cli
mov
sub
fdiv
cmpsb
inc
jmp
js
mov
je
js
xlat
loop
mov
test
mov
or
push
popa
rclb
mov
push
cwtl
inc
out
loop
lret
adc
sbbl
cmpl
ret
adcl
fcomip
mov
push
xlat
loopne
or
iret
cmp
and
xchg
stc
outsb
popa
xor
sbb
mov
icebp
test
mov
into
rcr
or
push
call
es
inc
pop
pusha
ljmp
loopne
jg
aaa
mov
mov
clc
sbb
mov
inc
insl
rolb
adc
cs
mov
cmp
push
cli
cmp
popa
pop
sbb
dec
mov
imul
sbb
push
in
or
inc
fs
fucom
mov
aam
sbb
dec
xor
test
jnp
sub
xor
jle
lods
push
sub
sbb
mov
sub
sbb
fcompl
push
adc
fiadds
rorl
and
sbbl
sti
cmp
mov
mov
lret
pop
adc
sbb
push
sbb
jmp
pop
shrl
dec
or
insb
cmp
dec
or
inc
jmp
pusha
xchg
cltd
mov
xor
xlat
jbe
call
inc
mov
jo
jnp
lock
insl
jp
pushf
and
dec
xor
rcrb
pop
push
jbe
sti
imul
insl
in
stos
cmc
adc
jo
xor
lods
lea
inc
ljmp
rorb
xchg
imul
fbstp
xorl
sti
rolb
inc
scas
loop
std
jp
jo
xlat
outsb
jmp
mov
xchg
cld
daa
and
xor
mov
pop
sbb
jbe
loop
jle
gs
and
mov
testb
fcmove
sub
adc
mov
inc
sub
add
rcrl
rcrb
mov
ljmp
addr16
push
stos
imul
jb
repz
mov
sbb
lret
jge
cmp
loopne
cmp
fcompl
push
insl
popa
xchg
jno
or
pop
js
testb
jo
fwait
xor
jae
neg
int
xor
xor
inc
insb
lock
xchg
jb
mov
add
pop
and
testl
sub
ja
or
add
ds
jae
mov
cmp
ret
mov
lods
push
outsl
arpl
fwait
lcall
jne
in
dec
shr
testb
loope
push
test
inc
and
or
scas
xchg
nop
lcall
jmp
jp
das
jmp
cmp
aam
outsl
mov
in
dec
or
sti
jp
rorl
sbb
fmul
inc
outsb
bound
fnstcw
rcr
push
mov
xor
sbb
lods
push
out
shrl
scas
and
rcr
ret
mov
dec
jle
cmp
or
push
push
inc
cmp
push
imul
lock
xchg
ret
pop
jbe
inc
clc
lods
insb
icebp
jne
addr16
inc
xlat
mov
pushf
shll
mov
mov
loope
aam
rol
andl
mov
mov
je
fcompl
std
out
pop
fstpl
pop
xchg
loop
jns
inc
ds
xor
xchg
sub
mov
jge
mov
jo
push
lret
mov
mov
imul
inc
rol
adcb
and
imul
cld
sbb
inc
bound
ss
mov
mov
sbb
mov
inc
fldcw
fmul
sbb
push
add
in
sub
ds
rol
pop
loope
push
call
adc
aam
es
xchg
les
ficoml
stos
xchg
cwtl
cmp
and
clc
xchg
int3
dec
rcrl
outsb
in
push
xor
es
lret
jae
sub
mov
in
jo
inc
call
pop
aaa
mov
rorl
aad
mov
insb
xor
pop
push
int
aaa
xor
test
inc
jnp
stc
ficoml
lret
in
dec
pop
inc
push
mov
jecxz
xlat
mov
inc
subl
addr16
inc
xchg
add
bound
add
inc
out
filds
sub
inc
or
insb
mov
int
mov
sbb
loope
cli
clc
push
insl
cwtl
sbb
pop
lret
rcrb
ret
sbb
outsl
mov
push
int
icebp
mov
mov
mov
test
test
sub
fsubrl
sub
jae
and
xchg
insl
call
pop
jbe
jge
dec
or
xlat
adc
bound
pop
fstpl
mov
movsb
sub
scas
imul
push
pop
arpl
mov
les
mov
push
lret
mov
inc
test
repnz
cmp
mov
xlat
addr16
xchg
stos
sbb
fwait
or
lcall
mov
ljmp
repz
adc
loope
into
push
shr
daa
sub
cs
pop
mov
int3
push
sub
je
movsl
fs
in
pop
shl
add
out
mov
movsb
in
pop
mov
iret
cmp
xor
xchg
xchg
xchg
sub
ret
outsl
mov
xchg
or
std
add
lret
call
xchg
movl
test
sbb
daa
sbb
shl
call
into
call
jge
mov
sbb
fnstenv
xchg
mov
ljmp
outsl
sar
stos
iret
cmp
jo
mov
or
mov
pop
mov
enter
or
xor
shlb
mov
aad
lock
jb
mov
pushf
out
lea
jg
shll
out
add
or
decl
mov
js
fwait
sub
add
mov
repnz
fcoml
loope
scas
or
inc
sbbb
shll
ret
or
or
pop
lods
pop
pop
dec
cli
jns
or
in
pop
jb
fiaddl
sti
cmp
clc
push
pop
sub
shl
test
popf
cmp
push
dec
std
pop
or
adc
sahf
cs
pop
jecxz
outsb
or
outsl
adc
hlt
setae
add
mov
cmp
cmp
lea
imul
inc
les
xorb
hlt
sbbl
out
pop
rcl
pop
sbb
xor
push
push
loopne
jg
or
sbb
call
iret
xchg
add
dec
clc
jae
inc
or
xor
ret
shlb
aaa
push
enter
dec
data16
test
inc
jb
add
mov
iret
stc
sub
adc
out
cli
and
ret
mov
mov
in
jmp
enter
call
divl
jo
or
inc
sti
movsl
push
add
mov
jmp
jp
addr16
jno
int
dec
je
sbb
or
mov
int3
lea
imul
subl
imul
scas
mov
sti
inc
pop
mov
mov
enter
xchg
loop
mov
add
jmp
repnz
xchg
mov
pop
adc
push
loop
rclb
mov
add
je
mov
sub
popa
stos
scas
cs
mov
aam
add
bnd
rorb
outsl
out
rcll
cli
hlt
or
sub
fs
ljmp
in
inc
test
xchg
lcall
cld
or
push
leave
loopne
push
ja
push
int
pop
xor
adc
push
movsb
mov
jne
pop
int
dec
cs
scas
movb
xchg
xor
push
stc
xchg
push
mov
xor
mov
pop
out
jle
mov
mov
sbb
rcl
scas
xchg
es
mov
lcall
mov
push
andb
sbb
scas
sub
lds
or
repnz
dec
pop
or
jnp
stos
cmp
xchg
sbb
xor
jo
jge
adc
mov
mov
lds
jae
aad
insl
lods
fstl
ss
sub
andl
lock
mov
pushf
addr16
roll
bound
jns
repz
ljmp
movsb
or
ja
std
jnp
bound
cs
lods
cltd
lods
insb
outsl
pop
call
mov
iret
cwtl
and
xchg
xor
mov
aad
dec
inc
mov
xlat
loop
mov
mov
xchg
and
mov
xchg
xchg
fbld
push
xor
outsb
push
cmpsb
and
iret
hlt
into
sub
std
in
add
mov
push
fstpl
sti
repz
test
out
rclb
test
dec
out
fisubrs
imul
inc
cmc
dec
mov
clc
in
sbb
mov
add
cmp
inc
out
popl
test
out
movsl
imul
mov
pop
lahf
clc
xor
cmp
das
xor
adc
adc
stos
shll
xor
adc
les
je
add
fildll
sbb
and
and
cmpb
jnp
lret
ds
lahf
std
std
cld
mov
mov
loop
leave
jns
mov
and
push
scas
rclb
stos
jb
hlt
push
aaa
test
cli
loopne
sub
cld
mov
scas
in
xchg
pop
sub
aas
in
mov
pusha
sbb
mov
xchg
mov
int
outsl
std
test
jbe
sahf
js
int3
repz
pushf
xor
inc
pop
jp
inc
lods
test
mov
cmp
std
loop
cwtl
std
std
mov
or
and
insb
mov
push
inc
or
repnz
dec
inc
inc
and
stc
jp
xor
push
loop
popa
xchg
mov
mov
adc
and
sub
scas
xchg
inc
aas
fwait
pop
jmp
ror
mov
ja
arpl
clc
inc
ja
testb
jge
xor
insb
cmpsb
imul
mov
push
xchg
and
adc
hlt
aam
xor
lret
pushf
out
leave
adc
xchg
fbld
lods
jg
and
mov
xchg
mov
outsb
push
aam
and
aas
inc
je
pop
push
test
mov
aad
xchg
push
addr16
in
iret
sub
adc
js
mov
jle
mov
jmp
clc
dec
push
inc
call
mov
test
shrl
les
xor
push
outsl
inc
xchg
sbb
push
xchg
dec
sarb
pop
mov
lods
inc
xor
loop
sahf
je
dec
in
and
hlt
clc
int
xchg
cmp
arpl
push
mov
lcall
mov
cmp
mov
fmull
inc
enter
data16
pop
cs
push
fidivrs
cmp
xor
ret
in
pop
dec
adc
inc
push
jge
bound
pop
jns
jbe
hlt
mov
mov
out
inc
mov
inc
scas
lret
mov
adc
xlat
ss
lods
imul
out
mov
sub
mov
pop
jl
mov
mov
pop
leave
dec
add
cmpsl
incb
js
or
cmc
jo
pop
jl
arpl
mov
jb
bound
jb
sbb
stos
dec
out
push
pop
xchg
xor
clc
sarb
push
test
mov
pop
cmp
leave
jno
mov
dec
cmc
insb
jl
or
test
outsb
ss
movsl
dec
insb
add
mov
dec
ja
in
push
and
push
leave
sbb
jno
aaa
nop
xor
jg
or
push
cmp
mov
add
push
test
xchg
and
out
sbb
inc
and
xchg
fdivrs
inc
mov
clc
ret
hlt
fnsave
pop
mov
add
lods
cs
nop
sbb
bound
lea
or
je
mov
mov
and
or
add
into
lock
movb
dec
les
je
sbb
lea
ffree
ficoml
jle
pushf
push
sub
ss
mov
adc
movsb
mov
sarb
jmp
jnp
xchg
lea
lcall
jl
inc
sub
add
sbb
movsb
in
xchg
test
enter
cmp
inc
push
push
int3
push
loop
sub
ja
lret
push
sti
mov
cs
leave
inc
stos
sbb
jmp
mov
mov
cmp
lret
jb
std
push
and
int
ljmp
je
fwait
push
mov
int3
xorb
xchg
leave
mov
loop
sub
jl
cmp
lods
jl
fildll
into
push
sub
leave
pop
cs
xor
push
call
xchg
xor
and
pop
rorb
adc
ljmp
or
mov
rclb
int
pop
inc
mov
or
mov
mov
loop
js
inc
mov
vrcpss
and
mov
shl
mov
es
jnp
nop
or
add
xor
xchg
cmc
mov
mov
pop
inc
pop
xor
cmc
adc
sbb
add
leave
int
xchg
in
inc
movsl
shlb
js
cmc
les
mov
cmp
push
mov
sub
loopne
decb
or
cmpsl
imul
jl
pop
lret
aad
add
cmc
outsl
pop
imul
push
sahf
loope
sub
cmp
scas
add
xchg
adc
gs
add
les
xchg
incl
repz
xchg
jmp
xlat
xor
aas
mov
xor
inc
sub
jl
cmpsb
dec
sub
in
jb
push
cmp
and
jg
stos
xor
mov
pop
pusha
std
push
aad
inc
mov
sub
cmp
jmp
aad
sub
push
das
int3
aas
pop
adc
aaa
inc
es
lret
jns
loope
fstpt
mov
inc
sbb
sub
mov
test
pop
mov
lahf
sbb
clc
hlt
sub
inc
rcrl
mov
leave
jb
cli
mov
pushf
sbb
jns
repz
and
dec
inc
popa
mov
push
jecxz
pop
jecxz
push
sub
repz
fs
fistpll
sub
js
fadd
hlt
xlat
add
repz
fmull
cltd
mov
or
addr16
cwtl
scas
nop
mov
test
mov
out
sub
mov
pop
push
push
fmuls
punpckhbw
test
jmp
jno
inc
mov
add
sbb
jnp
and
repz
xor
sbb
lds
jmp
shr
jl
in
xor
insb
jne
sarb
jg
sarl
xor
mov
push
inc
pusha
out
or
stos
fwait
xchg
mov
sti
dec
js
jp
lea
dec
xlat
movsl
inc
push
call
add
fucomip
ret
or
cmp
or
add
cmp
mov
adc
xchg
pop
sub
lods
push
shll
push
nop
idivb
lock
cmp
jb
adc
xchg
cltd
inc
or
lahf
cld
push
inc
sbb
pop
dec
xor
mov
addr16
xor
ja
ja
js
fnstsw
xor
div
lea
jge
mov
xchg
std
mov
sbb
xchg
pushf
push
je
aaa
sbbl
inc
mov
aas
aad
lret
xor
test
pushf
fisubl
out
xchg
imul
cmc
pop
popa
xor
or
xor
sbb
in
in
cmp
gs
mov
addr16
xchg
mov
cmp
adc
stos
rol
dec
or
ret
mov
mov
xchg
insb
outsl
and
mov
cmp
stos
jl
nop
lret
sub
or
lcall
ja
sub
ficompl
ds
mov
out
outsb
gs
pushf
scas
enter
pop
xlat
adc
mov
xchg
jmp
lods
and
push
and
jl
dec
adc
jle
in
lea
out
mov
sub
je
fwait
js
push
fstpt
cs
fstpl
std
push
and
mull
push
loope
fwait
xor
mov
mov
bound
xor
ror
stos
int3
popf
cmp
sbb
jecxz
cmp
mov
addr16
fnsave
and
lahf
aam
dec
xchg
sti
and
mov
repz
mov
dec
xlat
dec
lcall
mov
mov
push
sub
adc
test
cld
or
mov
iret
dec
lcall
rclb
outsb
shrl
cmp
int3
pop
push
insb
daa
inc
sbb
lds
and
jno
es
dec
jo
jmp
loope
push
xchg
jl
out
das
jo
push
cmp
addl
mov
js
xchg
jo
dec
addr16
dec
andb
leave
and
xor
das
inc
jp
push
mov
movsb
inc
shl
jl
push
inc
add
or
and
xor
mov
inc
cmp
movsb
clc
mov
hlt
pop
jmp
mov
std
subl
add
xchg
cld
mov
mov
adc
pop
sbb
pushf
sbb
pusha
jmp
jmp
jmp
jmp
mov
ja
inc
lds
mov
cmpsb
push
pushf
sub
loopne
out
sarl
out
or
icebp
aam
data16
das
decb
jge
popf
mov
ret
outsb
fs
test
xchg
or
out
cltd
arpl
jne
gs
mov
fdivl
pop
push
jmp
lahf
dec
rcll
mov
lds
lret
loope
icebp
dec
hlt
push
in
jb
xchg
leave
push
adc
cli
mov
test
xchg
fsts
jbe
inc
push
and
mov
xchg
push
mov
shr
jae
sarb
push
pop
xor
aas
jne
pop
xor
pop
add
ss
mov
sarl
lds
add
in
xchg
adc
mov
mov
ds
jne
andl
icebp
inc
sub
push
jb
test
inc
cwtl
stos
repnz
inc
and
cs
or
mov
loopne
pop
out
nop
test
jb
fsubr
jnp
adc
adc
or
xor
nop
xchg
mov
lods
jl
outsl
push
aas
mov
xchg
addr16
stos
and
push
pop
add
add
xchg
jg
adc
or
push
push
cmp
inc
xchg
xlat
push
imul
out
push
mov
jmp
pop
incb
add
inc
fs
sbb
push
ret
rcll
inc
ja
fists
inc
fisubl
fs
cwtl
lock
fcomip
add
add
fcoml
xor
sub
sub
push
test
les
aaa
mov
pop
dec
dec
mov
lods
test
gs
lock
stos
push
adc
xor
and
in
or
lret
outsb
popa
mov
jae
mov
in
xor
pop
dec
or
hlt
fsubl
pop
adcb
ss
clc
cli
xor
xchg
sub
or
loopne
push
sub
xchg
push
fisubrs
sbb
je
test
and
inc
repz
lahf
ds
sti
jnp
movsl
insb
dec
jp
jns
sbb
add
adc
pop
pop
scas
fadds
mov
dec
push
outsb
popa
fstpt
pop
push
in
lcall
es
xchg
add
lea
and
jae
sarl
imul
inc
push
loopne
inc
nop
inc
mov
lods
in
sbb
ret
mov
mov
mov
xlat
in
repnz
push
or
add
dec
inc
mov
loope
ret
pop
lea
in
xchg
aam
jne
out
mov
jbe
int3
pop
jecxz
in
leave
push
inc
movsb
inc
jbe
xor
test
jo
pop
test
or
push
mov
mov
sarb
addr16
mov
into
and
inc
jns
scas
pop
xor
xchg
sub
pop
pop
cmc
sti
xor
add
push
and
in
fidivs
scas
in
adc
dec
mov
inc
jle
subb
andl
pop
inc
mov
aas
in
loopne
xchg
hlt
mov
into
scas
cmpsb
xor
xchg
and
pusha
outsl
pop
sub
or
push
cs
iret
pop
leave
dec
in
retw
in
repz
sar
mov
jno
ljmp
and
xlat
cmp
mov
mov
adc
push
in
ja
mov
add
subl
lret
dec
les
rolb
cmp
inc
hlt
out
iret
fidivrl
dec
sub
into
xchg
cli
inc
jmp
fidivrs
ss
ljmp
pop
test
dec
js
fucomi
insb
arpl
and
popf
faddl
jb
jb
cmp
lret
push
daa
into
or
out
iret
pop
lret
mov
jno
dec
mov
pop
stos
sub
cmp
cmpsb
in
add
pop
movsb
mov
xchg
lock
outsl
mov
pop
bound
sahf
aaa
push
call
out
xor
xchg
mov
ret
lret
fs
add
sahf
stos
sbb
clc
test
roll
mov
inc
pop
inc
and
xchg
pop
jns
pop
testl
xor
shl
jbe
out
in
stos
or
movsl
push
mov
int
movsl
mov
lahf
rclb
testb
inc
test
adc
pushw
clc
sbb
mov
aad
jne
jae
lods
jae
add
adc
call
clc
push
pop
inc
insb
adc
mov
insl
aaa
ret
clc
inc
or
inc
xchg
daa
loopne
popf
icebp
icebp
enter
push
cmpsb
call
rorb
lock
pop
scas
test
jmp
jnp
cmp
cmp
pop
nop
cmp
mov
jecxz
jne
shrb
loopne
ret
jle
pop
xor
bound
scas
jmp
xor
icebp
push
scas
cmpsl
fisttps
mov
loop
cwtl
stos
sahf
loopne
leave
jge
pop
bound
fdivs
in
loope
jb
pop
repz
or
movsb
lods
sbb
lock
cmp
imul
loope
sbb
int3
push
in
or
jl
cmc
gs
jbe
fldl
cmc
and
lods
xchg
or
mov
mov
call
xchg
rolb
jnp
scas
pusha
mov
xchg
xlat
sbbb
xor
gs
mov
mov
push
adc
adc
cmp
in
leave
jg
test
test
inc
xor
jl
add
sub
loopne
int
sub
call
or
daa
jecxz
insb
sbb
lds
shrl
sahf
rsqrtps
dec
inc
fdivs
xchg
xchg
sbb
dec
sub
cmp
push
jg
add
cmp
jp
inc
out
push
daa
jne
add
cmc
es
rcrb
out
movsl
arpl
sub
pop
addr16
clc
xchg
je
shll
mov
fsts
add
xor
pop
xchg
push
xor
stos
push
sti
mov
inc
shlb
and
neg
pop
fidivl
adc
sub
pop
xor
rclb
movsl
fdivr
xor
mov
mov
aaa
xlat
divl
outsb
fidivrs
cwtl
pushf
cmc
push
test
nop
jmp
mov
inc
loopne
shrb
clc
pop
jns
mov
sbb
push
sarb
pop
mov
test
sahf
enter
inc
add
xchg
lea
fwait
sbb
arpl
cmc
imul
movsb
imul
std
outsl
push
loope
outsb
std
outsl
sub
ds
pop
or
loope
ljmp
xchg
mov
test
jecxz
mov
rcrb
mov
out
pop
xchg
leave
dec
fcmovnb
mov
adc
pop
in
adc
xor
mov
dec
stos
lods
xchg
ds
jge
aam
inc
data16
cmc
inc
int3
enter
dec
mov
push
inc
mov
out
inc
jbe
jecxz
setb
add
pushf
sbb
shrl
or
xchg
stc
push
aas
cmp
dec
inc
dec
cltd
cmp
std
and
mov
sbb
jne
in
push
fst
out
add
push
js
and
aad
scas
insb
ljmp
test
call
iret
scas
pop
mov
and
loopne
out
inc
push
xor
push
fcomps
ds
js
dec
or
sti
push
push
mov
lds
inc
cmp
cmc
or
fucomi
js
aad
xchg
sbb
je
add
lods
mov
lds
add
cwtl
xlat
add
add
jno
out
ja,pt
pop
mov
sub
lret
dec
dec
outsl
mov
cmc
mov
movhps
sarl
push
push
mov
inc
mov
or
mov
add
and
test
xor
push
daa
movsb
push
int
mov
xchg
push
or
xchg
xor
jl
cwtl
mov
mov
enter
jno
jle
jae
dec
dec
adcl
mov
mov
ljmp
dec
mov
scas
ds
cmp
pop
repnz
sub
jmp
xor
rclb
ret
sbb
cwtl
das
mov
imul
out
xor
and
sub
adc
or
mov
std
push
repnz
test
jnp
inc
aad
jbe
adc
cli
std
jb
mov
jecxz
sbb
popf
sub
ficomps
test
jae
std
ds
inc
xor
sbb
push
pusha
mov
xor
leave
mov
xor
lcall
add
jb
and
test
mov
scas
mov
and
push
fs
dec
lret
enter
fimuls
fs
jo
sbb
je
mov
enter
mov
xchg
repnz
je
xchg
aaa
push
cli
dec
loop
dec
dec
or
bound
sub
pop
mov
nop
mov
iret
push
sub
xchg
outsl
mov
in
test
cmp
rorl
fimull
lahf
fwait
jne
mov
mov
outsl
aad
jecxz
adc
lods
cmp
sub
std
and
stos
and
sbb
stos
stos
ss
xor
adc
sub
xchg
jecxz
add
shll
push
ret
stos
mov
pop
cmc
pop
sub
loope
xor
sti
dec
hlt
mov
sub
sub
add
push
scas
mov
inc
dec
mov
sbb
stos
iret
mov
in
xchg
sbb
jnp
xchg
dec
pusha
mov
mov
pop
iret
mov
cmp
clc
je
fiadds
jp
aad
outsl
mov
xchg
pop
sub
es
pop
jl
shrl
insl
dec
in
data16
inc
adc
and
jge
jne
repz
arpl
xor
and
rorl
inc
enter
xchg
aaa
push
mov
or
clc
sbb
xchg
add
stos
repz
pop
pusha
mov
sbb
aam
xchg
fadds
cwtl
sub
mov
pop
add
mov
outsl
andb
out
sbb
xlat
in
fisttps
mov
les
pop
popf
leave
or
int
call
cmpl
loopne
incb
sbb
test
jns
inc
mov
bound
inc
movsl
mov
xor
or
loop
push
int3
dec
icebp
dec
and
fldl
test
jge
xor
jecxz
mov
pop
pop
es
mov
movsl
jns
std
ret
cmp
add
loope
lds
adc
icebp
es
pop
in
mov
imul
dec
call
rcrb
js
sbb
or
jno
mov
lods
clc
cwtl
repnz
subl
xchg
aaa
dec
insb
mov
outsb
or
sbb
in
xlat
pushl
out
stc
jbe
mov
and
mov
jb
notl
pop
jns
cmp
popf
shl
adcl
xchg
lds
shl
subl
push
mov
mov
aam
xor
mov
mov
sbb
ljmp
add
jl
push
mov
sbb
call
xchg
imul
sti
fwait
rorl
jbe
xor
push
dec
cmp
mov
orl
push
or
mov
insb
xor
test
lahf
mov
sbb
sbb
fnclex
bound
sub
add
pop
in
insb
dec
add
lea
lret
ljmp
test
fistpll
xor
in
daa
sbb
lahf
add
cmp
dec
fnstenv
in
fwait
sub
sarb
dec
cmp
mov
jb
test
mov
data16
add
mov
fstps
mov
cmp
cmp
sub
aaa
scas
mov
js
or
outsl
inc
xchg
lock
fs
add
sbb
into
and
pushf
shlb
inc
leave
and
jns
jo
les
out
xor
dec
dec
fnstenv
sbb
add
xlat
rorl
xchg
xchg
xchg
scas
ss
jle
mov
jge
adc
subl
scas
mov
pshufw
rolb
push
es
cmpl
lret
mov
inc
push
les
stos
aas
push
popf
or
fdivl
sbb
push
adc
loope
sbb
mov
test
mov
cmpsl
sbb
bound
jns
int
or
jecxz
lds
adc
xchg
rolb
mov
jnp
roll
das
push
dec
mov
pop
xor
dec
cwtl
das
aas
stc
jo
xchg
shrl
and
mov
add
pop
orl
sub
sbb
enter
jmp
call
rorb
int
test
add
insb
xchg
push
cltd
repz
js
mov
inc
cmpsl
mov
out
nop
mov
pop
push
jp
popf
or
xlat
mov
mov
fwait
lret
mov
add
les
loope
sbb
adc
in
dec
adc
pushf
and
mov
std
andb
in
xor
mov
push
lcall
pop
xchg
ficomps
test
mov
mov
loope
inc
cli
mov
mov
and
cmp
inc
cld
ret
xchg
xchg
imul
mov
out
push
add
lea
cmpsl
and
out
gs
xchg
lods
cld
adc
nopl
mov
pushf
into
mov
push
jns
popa
sub
mov
cwtl
ja
xchg
sbb
scas
pusha
shlb
or
cmpsb
scas
pop
test
int
and
stos
sub
in
push
pushf
or
jecxz
xchg
sub
inc
push
and
xor
cmovo
mov
ja
jl
xor
inc
dec
add
or
fidivrl
dec
addl
jg
mov
cmp
lret
rcll
call
jecxz
fdivs
notb
or
mov
xchg
aaa
std
sub
in
js
mov
cltd
gs
loop
cwtl
je
lcall
jle
iret
loop
addr16
into
sub
cmp
int
cmp
hlt
cli
cmp
and
mov
dec
inc
pop
das
iret
movl
adc
stc
dec
pop
imul
repnz
dec
subb
adc
subb
iret
push
or
xchg
mov
add
shlb
cltd
or
icebp
jmp
add
sbb
push
call
lret
int3
imul
call
std
dec
out
in
pusha
xchg
xchg
lock
in
into
neg
mov
in
pop
int3
inc
mov
dec
stos
mov
les
or
push
inc
scas
lods
cs
push
and
loop
lret
adc
or
hlt
jle
adc
and
mov
mov
mov
cmp
fmul
negl
inc
add
mov
xchg
arpl
in
add
pop
add
push
lahf
pop
xchg
gs
push
xchg
xor
leave
push
sbb
or
adc
xchg
pushl
and
add
ret
out
jl
test
es
cmpsl
mov
inc
sahf
mov
fldcw
adcb
jae,pn
or
sbb
pop
inc
movl
outsl
add
sbb
sbb
inc
inc
jmp
pop
sub
leave
in
imul
test
adcb
mov
outsl
inc
push
xor
scas
icebp
into
dec
adc
ret
cltd
cmp
mov
cwtl
pop
fistpl
adc
ret
sub
xor
pop
dec
testl
or
out
adc
mov
ljmp
sub
push
and
int3
and
loopne
daa
fcmove
int
add
jo
and
mov
mov
out
and
int3
arpl
nop
test
dec
into
std
scas
cmp
fadds
sub
mov
outsl
add
subps
mov
xor
add
inc
std
je
jns
stos
jg
jne
fbstp
jo
lret
cmp
pop
es
mov
test
lret
or
inc
and
add
mov
insl
sti
pop
movsl
jne
add
cltd
cmc
cs
pop
sub
fimull
fwait
sbb
inc
aas
sbb
adc
ret
popf
mov
int
jnp
sub
pop
and
jle
daa
xor
andb
jns
mov
mov
push
loopne
mov
push
les
mov
cli
dec
push
mov
adc
rcll
lret
dec
mov
outsb
pop
clc
and
addr16
inc
outsb
inc
adc
push
inc
jne
out
sbb
or
lea
in
push
aaa
and
dec
fsubrl
int
jmp
and
mov
jo
lret
adc
pop
repnz
pop
xchg
sbb
popf
pop
mov
ja
jns
or
jnp
cmp
loope
in
fdivs
xor
mov
aaa
dec
pop
repz
adc
mov
hlt
inc
insb
imul
jns
add
lods
mov
imul
sub
lret
mov
pop
gs
mov
cs
lds
xchg
lds
inc
lods
cmp
sub
je
adc
xchg
lahf
cmp
inc
push
loope
xchg
scas
cmp
xchg
cwtl
fsubl
scas
out
stc
or
mov
imul
adc
jae
fstpt
adc
cmpsl
xchg
mov
je
mov
lea
clc
fcmovne
outsl
lcall
jno
movsb
sbb
sarb
test
sti
dec
jecxz
sarb
jle
inc
pop
xchg
push
xor
je
pop
pop
fadds
bound
aad
xchg
popf
sbb
xchg
xor
push
mov
call
cmpsb
popa
imul
in
leave
sbb
mov
or
ret
cmc
cld
pop
fidivs
sub
ret
pop
sub
xchg
clc
mov
cmc
test
sub
mov
out
xor
pushf
add
mov
mov
out
xlat
xor
or
test
hlt
aas
mov
rorl
out
pop
scas
loope
xchg
test
lods
addb
mov
scas
out
fisubrl
mov
in
jo
loop
xor
push
addr16
and
add
sub
les
jp
sbb
insb
jne
dec
ss
sahf
cld
imul
inc
pop
call
scas
jb
shl
divb
xchg
shlb
in
mov
jl
call
mov
mov
pavgb
iret
push
mov
sub
jnp
testb
test
aam
push
push
add
mov
mov
js
pop
fnstcw
mov
lret
sub
adc
enter
push
pop
mov
adc
icebp
and
ss
and
cltd
jbe
cmp
loope
jbe
xchg
mov
pop
inc
cmp
data16
lods
test
repz
push
pop
push
lret
sub
mov
sub
call
xor
pop
inc
and
xchg
int
movsl
pop
fs
in
int3
sbb
xor
add
mov
or
popa
std
call
lods
inc
adc
fwait
daa
lock
rcll
rolb
and
xor
cs
ja
mov
arpl
adc
inc
stc
leave
mov
lahf
movsb
push
and
je
and
insb
lods
jl
sahf
sub
adc
cmp
les
lods
jecxz
sbb
xchg
xor
lods
lcall
cli
mov
cmp
inc
test
adc
loope
cmpsb
sti
inc
sbb
jg
lret
mov
repnz
icebp
adc
pop
and
xor
int
pop
cmp
dec
dec
jo
sbb
inc
xchg
mov
fidivs
and
mov
or
xchg
lods
jecxz
jmp
pusha
cltd
mov
test
pop
imul
add
sahf
or
clc
push
call
jbe
iret
repnz
sub
push
xchg
jno
jns
cmpsb
or
push
stos
adc
cmp
and
dec
in
lods
popa
test
pop
jb
scas
iret
push
cmp
es
fisttpll
sub
popa
aaa
leave
push
in
imulb
pop
push
sbb
lcall
xchg
ja
adcl
clc
aaa
in
lcall
mov
out
jnp
sub
jle
xchg
shl
pop
scas
jns
dec
daa
mov
xlat
dec
cmp
jb
lock
subb
fstps
push
notl
or
adcb
test
arpl
xor
xor
push
sbb
mov
cmp
xor
mov
mov
push
push
mov
and
sahf
sub
out
mov
es
xchg
cli
call
stos
mov
cmp
push
les
loopne
or
sbb
test
sub
sbb
js
pop
inc
jg
mov
sub
dec
iret
mov
adc
sub
mov
inc
add
jp
mov
insl
movsl
fs
cmpsl
inc
les
jl
jmp
xchg
mov
std
cwtl
inc
inc
mov
cmp
add
jbe
test
mov
xchg
or
ljmp
aam
sub
sbb
jb
daa
xor
mov
adc
popa
icebp
pop
notl
pushf
lahf
jno
arpl
fsubp
enter
inc
inc
and
push
fidivrs
pop
je
and
fbld
or
fcmovbe
sahf
inc
mov
imul
stc
mov
inc
pushf
cmpsl
ljmp
dec
push
and
fildl
inc
inc
mov
stos
subb
dec
shl
repz
cltd
cs
cmp
lcall
clc
ret
ja
cltd
mov
and
mov
or
loop
xchg
xchg
inc
ror
mov
rorb
shlb
in
push
ret
adc
test
push
mov
mov
aas
inc
dec
ss
stc
les
outsl
push
cmp
pop
sub
or
negl
cwtl
jno
dec
fldenv
shll
cmpsb
loop
movsl
adc
jno
pop
pop
mulb
test
push
les
mov
lret
add
movsl
mov
test
jmp
sar
lcall
xor
les
jnp
xchg
cmpsb
fs
sbb
iret
sbb
jae
inc
shl
xor
cmpsl
sbb
sub
mov
push
jl
ficoms
jl
dec
shlb
or
mov
aad
mov
in
fisttpl
xchg
xchg
shlb
icebp
adc
imul
inc
js
gs
scas
pop
push
jge
loop
sbb
xchg
and
inc
push
imull
and
push
dec
dec
loopne
and
sub
lret
add
cmpl
mov
pop
push
fcoml
mov
xchg
gs
jge
cmp
push
sub
mov
lahf
or
sbb
jp
sub
jp
out
lods
pop
in
movsl
js
mov
jg
and
loop
orb
inc
ljmp
mov
rol
arpl
lods
cli
jae
push
adc
popf
xchg
repz
mov
adc
imul
ficompl
aas
test
test
push
cli
mov
sub
inc
shlb
fbstp
call
popf
jmp
push
into
mov
sub
mov
inc
lds
push
mov
push
pop
cmp
dec
es
inc
pop
decl
mov
push
into
adc
shll
fmuls
leave
jle
sub
sbb
cmp
or
loopne
loopne
sub
sbb
popa
push
ret
sub
adc
int
jge
xchg
sub
in
or
sub
fistpll
or
mov
pop
lds
pop
pop
leave
mov
lret
inc
cmp
dec
mov
pop
arpl
adc
loope
rorb
pusha
push
insb
push
imul
pushf
ljmp
sbb
lods
call
int
jecxz
jg
mov
dec
add
cmc
fwait
push
adc
xchg
xchg
and
xchg
mov
fwait
ljmp
jb
into
incb
xorl
pop
mov
or
push
fldt
mov
sub
loopne
rorl
shrb
cmc
outsl
and
imul
add
loopne
int
push
dec
xor
xor
jns
cmpl
mov
cld
push
in
push
fs
adc
mov
and
call
ljmp
cmp
xor
fmuls
leave
fildll
in
rorl
cmp
sar
shlb
lods
push
mov
lock
xor
add
sbb
push
sub
clc
imul
xchg
repz
cmpsb
adc
ds
repz
adc
adc
sub
scas
or
mov
inc
mov
or
fsub
leave
xchg
les
in
jnp
and
gs
incl
shld
js
jmp
push
inc
xchg
dec
cld
xchg
push
ret
adc
mov
sbb
pop
daa
sub
mov
in
inc
mov
imul
fistps
arpl
mov
push
inc
dec
inc
inc
dec
mov
enter
dec
pop
movsl
cmp
mov
arpl
mov
xor
jg
mov
add
pop
sbb
or
mov
cmc
ficoms
into
fsubl
or
jp
adc
jecxz
sbb
aas
cmc
jmp
fcompl
in
jae
adc
push
lahf
sub
leave
pop
out
add
inc
sbb
sub
mov
mov
mov
in
outsb
adc
roll
subb
fwait
dec
cmp
mov
divb
insb
es
lahf
inc
daa
cmc
pop
xchg
shll
xchg
popa
ja
in
ljmp
fildll
js
fldt
mov
dec
dec
sti
and
shl
inc
dec
ret
sbb
mov
sub
push
inc
xchg
iret
ljmp
cli
sub
sti
jecxz
mulb
dec
into
push
pop
pop
out
xchg
int3
out
fcomps
push
test
into
divl
rolb
aam
inc
lret
mov
sub
loopew
test
int
cmp
out
pop
lea
cmp
insb
sub
sti
mov
xchg
cltd
jle
cmpsb
icebp
fdivs
test
fs
rorb
mov
jecxz
jae
mov
test
sbb
sub
xchg
fisttpll
mov
jp
fdivr
bound
or
xchg
setp
jle
add
stos
icebp
fnsave
sub
xlat
mov
mov
sub
xchg
in
mov
push
pop
push
insb
cmpsl
and
cmp
xlat
mov
jle
or
out
cmpb
dec
sahf
int3
imul
sti
mov
adc
pop
testl
inc
out
data16
cmp
fists
and
in
and
xor
aad
movsl
mov
adc
xchg
xchg
shll
seto
cmpsl
je
adc
mov
xchg
fimuls
xchg
insl
inc
sti
jp
std
adc
in
push
cmp
ror
dec
push
mov
out
push
in
xchg
sbb
mov
lcall
inc
sbb
cmp
mov
jmp
aam
adc
bound
inc
pop
cs
xchg
jnp
mov
inc
push
adc
icebp
imul
or
sub
mov
inc
repnz
push
cmp
in
arpl
sbb
mov
cmp
lods
dec
mov
mov
fildll
xor
repnz
pusha
xchg
std
or
jnp
out
mov
je
gs
jmp
mov
lret
pop
or
jl
pop
pusha
in
mov
shrb
into
jno
call
dec
popa
test
xchg
fcomps
pop
add
xchg
mov
fisttps
repnz
mov
loope
int3
sarl
mov
outsl
les
mov
jno
push
dec
cmp
ja
sub
push
sub
andb
imul
shll
jae
outsb
mov
and
mov
aam
jl
mov
int3
xchg
popa
test
lret
and
ljmp
loope
add
mov
clc
fmuls
aaa
or
or
out
or
add
jns
lds
fcoms
pop
leave
mov
jge
scas
test
hlt
stc
in
pusha
add
pop
out
sbb
push
sbb
push
sbb
js
xorl
hlt
nop
cli
dec
pop
push
test
xor
mov
lock
fldt
fst
pop
pop
jno
daa
push
mov
or
push
aam
push
repz
mov
mov
cmp
mov
pusha
imul
dec
pop
cld
xor
lods
pushf
aas
mov
rolb
xchg
lds
loope
add
cwtl
xchg
push
aam
mov
ret
xchg
mov
sbb
xor
jb
fcompl
mov
std
push
dec
pushf
bound
aad
push
xrelease
and
rorb
pop
cmp
sub
test
adc
lret
sbb
in
fisttpl
dec
insl
dec
je
lcall
jle
cmpsl
jo
hlt
xchg
mov
fisttpl
and
int
in
sarb
xor
cmpb
or
add
lds
dec
fildll
out
cwtl
adc
adcb
pop
call
adc
iret
aaa
mov
sbb
cmpsb
into
and
ss
pop
call
enterw
mov
shlb
lret
rorb
arpl
in
pushl
add
jnp
mov
adcb
push
fistl
pop
sub
test
mov
fs
fs
icebp
in
jno
js
mov
push
shll
push
inc
dec
rolw
ficomps
pop
lcall
mov
mov
xchg
push
and
mov
mov
cwtl
popa
cltd
insb
test
pop
in
sub
popf
xchg
es
sub
or
dec
imul
add
or
arpl
sti
pushf
loope
outsb
mov
xchg
cmp
into
test
fstps
sar
dec
dec
xlat
pop
dec
and
arpl
xor
mov
add
aam
jmp
loop
jl
jl
cmovo
pushf
or
sarb
out
neg
cwtl
or
pop
and
ficompl
xor
mov
bswap
icebp
cmp
rcrl
mov
jns
sbb
push
jae
bound
mov
sub
int3
je
add
popf
pop
jle
lcall
xor
rolb
fwait
stos
mov
testl
dec
add
xor
imul
and
fwait
mov
out
sub
testb
ja
xor
adc
or
imul
rcr
fs
adc
sub
loope
push
je
sub
scas
add
push
mov
xchg
xlat
jg
out
bound
or
es
stos
jmp
jecxz
lret
inc
dec
sbb
fwait
cs
lea
xor
ljmp
sbb
cmp
sbb
jns
xchg
jno
add
pop
icebp
and
mov
cwtl
dec
push
in
xlat
sarl
mov
movsl
jecxz
and
cs
popa
repnz
fwait
add
adc
dec
xlat
rorb
aam
jmp
in
add
ja
cmp
lods
ret
cld
lcall
jg
out
sub
out
inc
lods
cwtl
jae
pop
out
push
test
cmpsb
data16
fs
mov
mov
xor
imul
mov
das
jbe
mov
mov
adcb
or
add
negl
jno
std
sbb
mov
push
fs
mov
jae,pn
mov
sub
sti
ret
imul
inc
xor
cmpsb
jnp
jbe
pop
xchg
sbb
inc
movsb
repnz
and
xchg
dec
mov
pop
fstpt
lahf
aaa
imul
jo
and
mov
das
push
sahf
jbe
push
lret
jnp
lock
jl
aad
lret
lret
and
jno
loopne
add
or
lret
mov
xor
aam
dec
stos
or
xchg
ja
xchg
shlb
jle
fwait
push
push
cmp
pop
xor
adc
xor
in
scas
test
push
or
test
js
pop
mov
test
lcall
insl
xchg
lahf
adc
ret
arpl
les
xchg
mov
sbb
jne
insl
int
lock
cmpsb
mov
fsubrp
xchg
enter
cmp
jmp
mov
sub
or
mov
negl
add
jae
push
js
mov
repz
imul
xchg
fimull
sbb
xchg
mov
out
cmp
or
ja
xchg
pop
mov
jg
lock
test
enter
in
cmp
add
inc
pslld
iret
sbb
and
out
mov
xchg
je
jp
iret
xor
cmp
add
dec
test
mov
jae
push
jmp
jge
test
xchg
dec
fs
loop
sahf
popf
jno
xchg
loopne
scas
or
pusha
fsubrp
adc
xlat
and
sbb
cltd
add
loop
inc
test
dec
and
inc
add
sbb
pop
mov
lret
dec
out
mov
sub
adc
cwtl
pop
not
add
lret
mov
pop
iret
cmp
xchg
pop
insl
cmc
ljmp
inc
popf
shlb
imul
lcall
pushw
add
es
popa
jne
sbb
or
cs
mov
scas
push
push
inc
and
xor
jnp
sub
xchg
sbb
dec
or
sbb
mov
xchg
fildl
xlat
jb
fnstcw
std
adc
push
lock
cmpsb
cs
adc
xchg
xor
sbb
movsb
pop
jne
mov
int3
add
andb
pop
xchg
sbbb
loopne
clc
adc
out
shrb
das
inc
add
clc
loope
jbe
loopne
adc
pusha
and
cltd
jg
inc
mov
cmpsl
jne
lds
mov
sbb
fcmovu
mov
jns
add
adc
out
mov
nop
xchg
xchg
or
jbe
inc
add
addr16
xchg
fldt
divl
ljmp
cwtl
cs
mov
or
fsts
or
sbb
ljmp
insb
mov
rcl
stos
sbbb
loopne
inc
add
mov
or
push
sbb
or
das
cld
xchg
pusha
mov
pop
push
sub
lods
mov
sahf
mov
dec
jge
push
sub
push
push
dec
hlt
inc
xor
push
fisubs
jb
cmp
add
push
adc
ja
inc
aas
popa
sub
rorl
pop
inc
or
mov
push
add
cld
and
cwtl
jle,pn
pop
iret
lret
push
cmp
lods
sub
jg
loope
aas
mov
push
stc
ja
adc
add
add
movsb
stos
ds
push
jnp
or
rorl
sbb
xor
mov
push
je
or
mov
cmc
leave
lcall
mov
push
fnstsw
mov
dec
push
in
lods
push
push
out
and
mov
add
adc
mov
cmp
xor
aam
in
imul
icebp
xchg
push
aaa
scas
adc
daa
cmpl
cmpsb
mov
iret
pop
into
and
lods
push
adcb
mov
jecxz
mov
clc
inc
rorb
test
adc
or
xor
sub
pop
fnsave
out
repnz
add
jp
out
movsb
pop
cld
push
es
cmp
idivb
dec
xchg
jg
out
mov
mov
movsl
jbe
cmpsl
xchg
or
out
cmp
or
pop
sbbl
pop
pushf
ds
and
mov
and
popf
bound
testl
mov
into
jae
popf
cmp
decl
and
loopne
popa
jl
mov
xor
mov
xchg
xor
testb
and
push
and
in
cmp
sub
pop
aas
imul
scas
and
sub
ljmp
lods
xor
adc
push
outsb
pop
nop
icebp
sahf
or
dec
testb
mov
addl
lcall
push
in
aad
clc
cltd
push
or
mov
shlb
push
mov
jl
mov
dec
pop
cli
ljmp
repnz
xchg
es
and
mov
cmp
aas
jb
add
into
push
sbb
sub
repz
lods
push
jbe
ja
xor
pop
das
je
xchg
xchg
enter
jno
pusha
pop
inc
nop
aad
or
leave
aas
imul
icebp
push
push
mov
rcl
cli
adc
aas
mov
aad
stos
push
and
adc
idivb
jg
jns
mov
pop
lods
lahf
adc
shlb
test
mov
cmp
xor
aad
mov
ss
mov
xchg
sbb
enter
xchg
pop
add
cwtl
jp
inc
adc
imul
mov
repz
lea
hlt
pop
push
jae
popa
sbb
cmpsl
fisubs
lds
xor
pop
mov
stos
xorl
in
inc
jmp
jne
shll
in
mov
pop
pop
lret
call
popa
movsb
mov
xchg
add
mov
imul
pop
mov
xchg
ljmp
mov
inc
mov
sbb
out
mov
pop
mov
jnp
pop
pop
push
mov
mov
js
push
shlb
in
push
js
insb
pop
mov
mov
data16
mov
and
adc
shll
data16
adc
das
lret
xor
repnz
pop
dec
andl
dec
fbstp
cmp
mov
popf
add
add
jl
aas
lret
hlt
ret
scas
sarb
jg
xchg
mov
imul
outsl
cmp
xchg
cmp
sbb
sbb
shrl
cmpb
xchg
inc
dec
repnz
jg
cli
xor
add
movsb
pop
push
out
cmpsl
mov
test
xor
or
shrl
sub
ljmp
int3
mov
movsl
mov
inc
imul
sbb
sub
mov
call
jbe
test
ss
cmp
test
into
lds
cmp
mov
jns
mov
mov
repnz
mov
jmp
lock
out
cmp
arpl
xchg
std
push
or
mov
sub
push
push
pushl
scas
lahf
rorb
sbb
cmc
jmp
xchg
cmc
jl
jae
das
bound
cli
sbb
pop
insb
or
mov
fmul
adc
push
call
push
into
out
mov
dec
dec
into
nop
sub
push
xchg
jne
or
clc
icebp
ficoms
addr16
out
mov
cli
sbb
jns
cltd
loope
dec
stos
jne
jnp
sub
push
pop
cld
xor
jb
das
sub
jns
fimull
xorb
ss
orb
movsl
lock
xchg
pop
add
cmpsl
jne
adc
popa
ljmp
cmp
sub
stc
jmp
xchg
mov
jae
scas
add
aaa
mov
daa
loop
imul
push
stc
mov
push
cmp
lds
inc
lret
stos
aad
xchg
xor
mov
loop
daa
je
out
inc
imul
imul
xorl
loopne
cmp
mov
pushf
icebp
sbb
jecxz
inc
imul
xor
adc
loopne
cmp
mov
sub
jno
mov
shll
ds
aad
jne
mov
xchg
imul
je
bound
inc
in
xchg
bound
xlat
aaa
pop
mov
mov
call
pop
cmp
xchg
add
popf
test
fildl
lea
inc
mov
stos
mov
neg
xor
gs
in
mov
daa
loope
push
in
js
mov
cmp
ljmp
fwait
loope
mov
and
lods
repnz
mov
in
push
cmpsb
mov
add
cs
daa
test
in
xor
mov
incb
or
ret
cmp
rorb
and
ljmp
push
lock
lea
push
popa
sub
push
out
cmp
push
cmp
pop
cmp
xchg
xchg
pop
gs
jnp
inc
in
pop
fistpl
inc
leave
out
sub
data16
cmpsb
push
repnz
in
addr16
sbb
jle
int3
lock
rcll
nop
push
cmp
adcb
add
jo
jo
add
in
and
cmp
sub
lods
pop
push
xor
hlt
xchg
lcall
xlat
jp
test
sbb
cwtl
aad
loope
clc
cmp
fidivrl
mov
xchg
nop
sub
pop
pop
bound
scas
mov
pop
lea
mov
mov
dec
inc
hlt
pushf
jmp
call
bound
loop
repz
mov
mov
ret
loope
aad
mov
leave
jne
sub
and
mov
data16
int3
mov
jne
sbb
mov
repz
test
cltd
cmp
test
add
or
xlat
mov
je
adcb
int
scas
scas
lcall
and
mov
dec
cmp
mov
sbb
mov
jecxz
sub
lock
mov
push
test
scas
mov
test
fcmovbe
adc
push
push
es
andl
push
inc
je
stos
scas
inc
cmp
lahf
fistpl
sar
fstpl
mov
fidivs
push
adc
loopne
aad
cmpsb
xchg
inc
or
mov
dec
sub
cmp
pushf
pop
and
out
inc
mov
mull
mov
ret
rcl
sub
aad
aam
fucomp
movsb
and
xchg
mov
lock
pop
sbb
sti
xor
cld
test
divl
mov
xchg
cwtl
repnz
inc
ret
xor
mov
popa
pop
dec
push
mov
out
imul
add
push
nop
andb
adc
jg
outsl
inc
push
cmp
in
pop
fisubrs
popf
ds
pop
popa
or
dec
cmpsb
sub
mov
call
sub
ds
and
xlat
insb
adc
push
adc
inc
fnstcw
add
jns
mov
and
ljmp
out
mov
or
push
das
arpl
mov
and
dec
iret
enter
and
stos
insb
xchg
push
adc
adc
test
or
xor
pop
mov
mov
add
mov
push
ljmp
sub
cmpsb
jno
out
fbstp
addr16
dec
mov
mull
faddp
enter
ret
sbb
ds
jl
push
push
sub
fs
inc
je
cmp
in
pop
pushf
cmp
pushf
les
stc
dec
mov
pop
adc
push
imul
pop
inc
mov
or
sub
fdivs
pop
mov
lcall
dec
ficompl
and
adc
les
jmp
jns
push
cli
aas
inc
mov
sti
fadds
cmpsl
mov
cmp
out
out
xchg
dec
pop
mov
jno
shl
mov
dec
inc
cmp
add
ret
aas
std
cmovp
das
xor
pop
fnsave
xlat
add
push
mov
xor
xchg
jp
or
pop
cmpsb
adc
dec
add
push
push
test
push
test
iret
inc
inc
cmpsb
leave
push
push
imulb
mov
jmp
idivl
sbb
rcrb
pop
xchg
int3
inc
ja
sbb
sbb
mov
inc
aam
pop
pop
pop
cmp
adc
pop
scas
push
cmp
mov
cmp
mov
inc
rcll
jecxz
xchg
adc
ljmp
popf
int
jae
adc
pop
sbb
das
jbe
mov
aas
pop
lcall
inc
or
sub
or
in
cli
in
gs
loop
loop
lock
loope
and
data16
sbb
xchg
std
icebp
and
or
mov
ret
adc
addb
js
xchg
jbe
fdivrs
icebp
cld
mov
jg
inc
sub
jge
cmc
insl
loopne
cmp
sahf
fcoml
pop
adc
sub
xor
pop
cld
fisubrl
gs
pop
rorl
jno
daa
stc
or
loop
iret
sbb
loope
sbb
sbb
adc
pop
push
push
push
jnp
clc
mov
inc
mov
jl
adc
ds
rclb
push
and
shlb
mov
jmp
push
addr16
shr
mov
adcl
mov
decb
test
test
add
enter
lret
pop
repnz
cmp
stos
fsub
mov
push
jp
aas
adc
mov
sub
jp
imul
cwtl
cmp
adc
add
repz
or
pop
dec
xor
jmp
sahf
mov
aam
movsl
out
fwait
pop
pusha
sub
mov
jl
pop
push
int
lds
shr
stos
xor
mov
pop
loopne
mov
jmp
push
xchg
and
add
xor
jbe
inc
orb
cld
add
in
stos
testl
push
dec
out
or
pop
sbb
or
push
jne
sub
or
cld
into
test
frstpm(287
decl
mov
bound
rolb
jmp
push
shrb
int
xor
push
adc
sub
sbb
std
sub
jo
pop
xchg
push
inc
and
jno
pop
push
cmpsb
sbbl
push
push
outsb
fldenv
fistps
sub
incb
xor
push
sbb
movsb
xor
notb
dec
lock
push
mov
fnstsw
sub
out
scas
pusha
xchg
ficoms
ljmp
xchg
scas
push
jo
push
fsubr
test
push
push
xchg
push
pop
or
data16
xchg
xor
sub
iret
cwtl
pop
add
and
int
dec
pushf
negl
push
sub
mov
jae
test
pop
out
jb
aaa
and
inc
into
cmp
stc
cmp
andb
inc
adc
outsl
int3
inc
out
sub
arpl
outsl
cli
mov
inc
fchs
loope
mov
mov
out
idivl
mov
test
dec
cltd
clc
sbb
jle
scas
loop
push
pusha
pop
ja
scas
jo
jl
push
out
subb
pop
pop
sub
adc
test
sbb
sub
sub
jl
add
int
mov
sub
and
inc
xor
push
or
movsl
sbb
xchg
aam
adc
jbe
inc
mov
xchg
xorb
test
repz
mov
insl
push
mov
jp
adc
fwait
cwtl
test
pop
test
sbb
sub
test
mov
movsb
scas
out
mov
addr16
out
jae
push
lret
not
jmp
jne
mov
mov
sarb
jae
cli
jmp
mov
mov
lds
pop
push
sahf
jne
mov
insb
test
fcoms
popf
pop
mov
xorl
je
xchg
fstps
or
pop
push
inc
pushf
cltd
fs
lcall
jmp
fdivr
sbb
jb
push
test
es
sbb
shl
xor
cld
jge
dec
dec
sbb
add
dec
out
addr16
stos
jmp
sbbb
xchg
stc
out
imul
mov
lret
push
mov
mov
dec
mov
fsubl
or
jns
jge
xchg
popaw
xlat
xor
jnp
std
scas
aam
push
inc
loopne
in
out
mov
cld
push
popl
jne
cmp
fisubs
repz
or
mov
pop
fs
cs
enter
adcl
sbb
enter
sub
repz
add
push
icebp
and
repnz
mov
xchg
xchg
lods
pusha
repnz
cld
and
outsl
je
or
dec
or
cmp
aam
jae
pop
sbb
adc
or
xchg
dec
jns
xor
lods
jne
test
lcall
mov
jno
jns
es
mov
cwtl
fadds
mov
out
mov
mov
stos
sub
movsb
mov
adc
jle
sub
stc
aaa
into
or
scas
inc
xor
sub
pop
add
mov
inc
or
mov
movsb
ds
mov
outsl
sahf
adc
std
fnstsw
pop
jg
push
addl
stos
mov
icebp
dec
add
xor
push
cmp
xor
xchg
mov
mov
or
scas
aam
adc
push
dec
xor
sub
xlat
outsb
mov
xchg
add
fimuls
sti
cmpsl
ficoms
sti
and
clc
dec
popa
mov
jns
fwait
jae
or
cltd
ss
mov
inc
fs
sbb
lods
lods
fdivr
jno
or
imul
mov
sbb
cwtl
mov
sbb
mov
dec
ss
xchg
cmp
aaa
fs
push
in
in
rcrl
or
mov
push
cmp
ret
jo
insl
addl
mov
add
push
pop
jno
cmpsl
xor
or
xchg
pop
imul
and
addb
jp
in
cmc
mov
fsubr
enter
loop
mov
xchg
dec
add
cmp
xor
movl
xor
cwtl
jne
leave
inc
push
mov
fsts
std
mov
cmpsl
roll
subb
aam
jmp
stc
daa
mov
xor
test
outsb
jo
pop
push
push
mov
add
cwtl
cmp
mov
das
pop
movsl
mov
inc
insb
mov
mov
xchg
push
jl
mov
mov
rcrb
xchg
jle
mov
insb
xor
ljmp
mov
cli
mov
or
bound
lock
pop
test
mov
mov
dec
aam
jge
xor
fmul
testb
cwtl
fwait
lods
push
sub
outsb
movsb
outsl
or
repnz
add
pop
int
mov
in
repz
adc
fisubrs
daa
adc
mov
dec
xor
pop
jbe
leave
cltd
in
testl
adc
testl
and
ja
iret
scas
mov
sub
scas
out
fistpl
imul
js
mov
fisubl
push
mov
fldt
cs
mov
out
inc
pop
movsl
in
xor
les
sbb
js
push
mov
outsl
mov
mov
dec
nop
mov
cmp
inc
jno
adc
cmp
scas
or
push
test
pop
inc
mov
push
xchg
test
sbb
jae
push
jnp
sbb
sbb
push
ss
insb
dec
mov
jge
add
sahf
mul
inc
lcall
sbb
xchg
sub
mov
add
in
jmp
fstl
ret
or
dec
jb
faddl
sub
lcall
pushf
sub
int
lock
into
xor
sets
xor
cmp
dec
sub
sub
pop
sub
adc
add
ja
lahf
leave
in
insb
outsl
scas
cmpsl
dec
cmp
jecxz
je
add
insb
lcall
xor
imul
adc
fldl
nop
int
scas
xor
out
xchg
nop
adc
add
mov
dec
adc
adc
scas
cmp
fs
jecxz
sbb
test
mov
inc
push
shrb
inc
jb
imul
int3
cmp
lea
mov
pop
lock
mov
mov
notb
jmp
push
jns
add
add
in
push
pushf
jp
add
xchg
cmp
xor
gs
mov
xchg
jle
ja
jbe
daa
divl
lods
inc
stos
loop
nop
jns
lret
in
mov
insl
cmpsb
cmp
adc
inc
rcll
xor
sbb
dec
cmc
lret
push
pop
aaa
loope
xchg
jo
fisubrs
inc
and
xchg
out
out
cmpsl
or
push
xor
xchg
jle
adc
cld
xor
push
lods
mov
loop
jo
mov
xchg
mov
dec
cmp
pusha
add
push
mov
cmc
cwtl
inc
mov
and
pushl
in
jp
int
mov
xor
shll
xchg
sbb
sub
lahf
xchg
lods
mov
dec
and
inc
dec
ret
and
test
outsb
aam
lock
push
mov
ret
fwait
push
stos
add
int3
out
push
inc
cmp
push
data16
sti
jp
jp
jp
pop
ja
push
sbb
sub
lahf
outsb
jne
movsl
inc
fwait
push
sbb
pop
and
cltd
jl
mov
popa
cs
and
loope
and
jl
in
dec
add
decb
pop
dec
aad
xor
push
ret
clc
xor
mov
jmp
jmp
jg
sub
cmp
mov
jp
jecxz
pop
fmuls
movsb
adc
jge
lret
jl
xchg
dec
dec
mov
pushf
dec
and
popf
jae
or
shrb
mov
cmp
mov
mov
ds
add
mov
adc
add
or
xor
mov
aas
mov
sub
xchg
pop
dec
bound
xor
xor
test
and
sbb
jbe
scas
into
sub
sub
push
sti
aad
dec
pop
push
mov
adc
leave
xor
ret
mov
imul
pop
stos
js
daa
cmp
ds
lcall
xchg
push
popa
cli
cmpsl
adc
pop
xchg
fstpl
dec
push
pop
add
sbb
or
pop
add
mov
dec
clc
pop
cmpsb
add
adc
clc
push
mov
xchg
out
call
xor
int3
ret
les
clc
dec
push
repz
incb
shl
dec
mov
cli
mul
xor
xchg
les
add
cmpsl
cmpsb
negl
and
inc
xchg
daa
add
jmp
mov
es
test
inc
or
out
bnd
arpl
pop
je
add
sbb
push
adc
xchg
or
jns
adc
cmp
push
mov
cmp
xlat
push
dec
std
inc
sarw
aad
insl
inc
je
ret
into
and
mov
mov
mov
or
dec
add
call
imul
cmp
inc
aas
lahf
and
cs
pusha
dec
push
xchg
cmpsb
insb
test
jp
out
push
xor
fldcw
loop
cmc
xor
xchg
pop
xor
push
xor
jb
subl
fstl
push
cmp
test
rcll
xchg
int
cld
mov
movsl
pop
cmpsl
aad
mov
leave
lock
sbb
add
stos
jb
jle
pusha
enter
ret
mov
enter
cmpsl
xchg
fiadds
loop
in
fists
mov
and
or
add
jb
xlat
xchg
fbstp
aaa
into
into
and
test
pop
enter
call
shl
add
push
sbb
outsb
int3
repz
icebp
outsl
add
das
push
pop
sbb
dec
sub
xchg
xlat
dec
inc
xor
xlat
in
lods
out
loopne
add
jl
stos
mov
adc
pop
shll
imul
push
fsubrl
sbb
and
and
jne
sbb
sbb
pop
test
imul
pop
imul
ja
cmp
push
aam
jge
inc
ljmp
sub
mov
pop
mov
imul
cld
out
fnsave
push
or
fwait
cmp
sbb
test
add
jmp
fdivs
ror
bound
xchg
mov
addr16
cmp
enter
std
sbb
add
insb
or
and
push
lcall
inc
dec
pop
add
loope
aam
push
add
xor
xor
shrl
mov
andb
inc
scas
test
leave
inc
adc
pmuludq
lcall
loop
mov
std
out
repz
stos
push
in
lods
xor
sti
jge
push
lret
filds
out
in
scas
sbb
jmp
int3
sti
mov
cmpsl
fsubrl
jb
or
rcll
pop
movl
inc
arpl
push
cmp
xor
mov
lods
xchg
xlat
pop
push
inc
pop
imul
xor
push
cmp
xor
add
sub
dec
fcmovbe
pop
dec
popf
cmpsl
sbb
mov
mov
fnsave
xchg
or
dec
insl
aaa
loopne
xchg
mov
cmp
dec
mov
out
dec
in
inc
ljmp
mov
movsb
xchg
cli
loop
lock
jne
pop
xor
arpl
movb
inc
mov
ficompl
adc
in
aaa
pop
test
leave
add
je
and
stc
in
jae
xor
addl
sahf
xchg
mov
cs
pop
or
sub
out
movsl
insb
shll
inc
inc
mov
lahf
adc
or
cltd
dec
mov
dec
stos
push
clc
jge
jmp
imul
add
jns
cmpsb
push
dec
fdivrl
or
ret
xchg
sarl
sub
xor
into
fnstcw
cwtl
pop
pop
pop
in
and
xchg
int
fldenv
mov
dec
test
xlat
shr
and
push
push
mov
mov
xchg
sbb
mov
rcll
mov
push
mov
ljmp
int3
mov
sbb
pop
jg
bound
cmpsb
mov
enter
faddl
xchg
xchg
std
dec
in
andb
sub
shlb
stos
xchg
cld
cli
stc
test
bswap
xchg
mov
bound
sub
dec
cli
clc
and
int
loope
push
cmc
jl
mov
jno
pop
mov
enter
pop
outsl
xor
lret
test
xchg
mov
push
jns
fwait
in
movsl
add
pop
add
mov
mul
pop
pop
add
push
inc
jo
push
or
in
adc
sub
xor
rorb
call
popf
dec
mov
xchg
and
popa
jle
push
adc
dec
jo
or
aad
pop
clc
xor
lahf
lahf
xchg
les
add
pop
mov
jle
js
test
mov
sbb
add
es
das
out
icebp
addr16
clc
xor
mov
mov
sub
out
sub
or
dec
cmpl
stc
xor
or
dec
pop
sti
jb
jp,pn
jecxz
mov
leave
stos
cmp
add
cli
movb
mov
adc
jno
int
inc
je
xor
pop
pop
outsl
mov
lods
cmp
inc
retw
push
mov
je
sti
or
mov
dec
enter
xchg
outsb
outsb
sub
faddl
xor
clc
mov
int
xchg
add
push
mov
jbe
fdivl
and
repnz
cld
and
mov
imul
pop
loope
aad
push
or
clc
inc
add
rclb
sbb
loope
xchg
pop
lock
cmc
cmp
in
jnp
pop
pusha
es
scas
mov
sbb
cltd
pop
sub
hlt
sahf
inc
pop
in
outsl
mov
add
cmp
pop
pop
push
or
dec
mov
scas
xchg
call
mov
rolb
cmpb
imul
adc
jns
sarl
imul
pop
insb
out
in
les
jmp
xchg
fbstp
daa
mov
jno
std
cmpsb
pop
sti
imul
mov
dec
popa
insb
shrb
mov
mov
jne
xchg
movsl
mov
sbb
mov
mov
sbb
imul
pop
mov
movsl
push
xchg
das
lods
push
pusha
bound
scas
sbb
sbbl
push
fnstsw
mov
mov
jmp
pop
jge
jle
pop
adc
and
clc
mov
cmc
movsl
mov
adcb
out
in
inc
out
adc
jge
xchg
daa
inc
push
insl
scas
add
push
mov
cli
mov
leave
in
push
sub
ljmp
fcompl
cmp
je
pop
xchg
jmp
add
in
jge
pushf
sbb
fs
pushf
push
enter
sahf
adc
xor
adc
jo
or
xchg
inc
stc
lock
leave
cmp
addr16
pushl
movsl
cmpsl
and
sbb
fisttpll
gs
out
xor
adc
sub
adcl
addr16
mov
jbe
shlb
movsl
sub
mov
inc
inc
std
jecxz
xlat
mov
lods
xchg
fidivrs
xor
in
or
enter
inc
sbb
popa
shlb
jae
mov
sbb
jp
and
aad
dec
imul
add
rcll
or
mov
fmuls
sbb
add
mov
inc
mov
cwtl
mov
es
andb
add
aad
jecxz
mov
xchg
mov
push
add
notb
mov
sarb
jmp
xlat
test
bound
aam
popf
cmp
add
int3
mov
mov
inc
aad
or
xor
sub
sbb
aas
cmc
sub
sti
cwtl
js
mov
outsb
pop
leave
shl
decb
outsl
pop
push
sti
cmp
icebp
and
xor
sti
jg
in
jnp
cltd
push
or
lea
jbe
outsb
sahf
adc
sbb
adc
stc
pop
mov
mov
cltd
test
fldcw
or
add
iret
or
je
push
xor
push
ret
ljmp
aam
cmp
xor
jbe
scas
jg
mov
cmp
xchg
in
loopne
push
cmp
addr16
and
xchg
popf
lea
out
imul
cmp
js
repz
dec
push
xor
xor
jmp
inc
push
imul
lcall
jae
bound
fimuls
jae
fcmove
add
cmp
pop
lock
or
int
sub
pop
cmc
imul
cmp
mov
mov
lea
andb
inc
imul
adc
test
jg
mov
lcall
out
xchg
jae
jne
addl
mov
xor
jmp
movsb
cmpsb
loopne
sbb
es
in
add
in
adc
dec
hlt
lret
imul
push
pop
sar
mov
and
inc
sbb
lcall
sub
cld
mov
cmc
sub
pop
pop
sti
dec
xor
popl
dec
cmp
adc
or
pushf
jbe
lock
loop
pushf
sub
out
int
les
inc
xchg
roll
add
lahf
stos
addr16
xor
and
xlat
popl
lds
hlt
or
push
mov
test
sbb
inc
out
dec
mov
or
pop
dec
pop
cwtl
or
loopne
push
imul
scas
add
pop
push
sbb
bound
popl
adc
mov
inc
mov
insb
out
sbb
test
out
ror
leave
inc
fcmovnb
pop
mov
lock
stc
outsl
xchg
loop
icebp
add
negb
xchg
push
xchg
out
jg
mov
xchg
inc
jno
lret
pushf
cmpsb
stos
inc
cmpsl
sub
and
leave
popa
dec
xchg
lock
inc
enter
jns
into
jns
clc
rclb
gs
dec
pushf
pop
js
fwait
outsl
push
mov
xor
mov
and
scas
or
cmp
sub
inc
orl
js
nop
xchg
orl
mov
and
adc
jmp
fimuls
mov
insl
adc
std
cli
movsl
dec
push
or
sbb
inc
gs
lret
or
xor
lods
inc
or
ja
loop
mov
nop
jge
mov
mov
xchg
loop
testl
push
pop
jecxz
sbb
inc
stos
xorl
inc
inc
sub
les
pop
inc
xorl
add
xchg
mov
adc
push
jno
cmp
sbb
arpl
inc
repnz
mov
addb
daa
dec
inc
imul
leave
cmc
xor
nop
mov
pop
sbb
fsubr
cmp
sub
mov
sub
in
xor
das
mov
xor
je
nop
nop
js
mov
daa
pop
imul
repz
push
adc
or
jmp
dec
ljmp
xchg
pop
jl
lods
inc
stc
je
or
shll
scas
aam
nop
jne
fdivr
xor
ret
aas
aam
inc
sub
bnd
sbb
inc
inc
xlat
incl
shrb
push
test
jp
push
mov
repnz
fdivrl
out
sahf
mov
jl
jmp
push
sbbl
dec
xchg
mov
das
cmp
dec
shl
shlb
xchg
jae
cmp
xor
and
mov
xor
add
xchg
adc
jo
mov
pop
and
xor
shr
xchg
inc
gs
imul
jp
mov
adc
cmp
push
mov
cmpsl
loope
xchg
sbb
in
cmp
fisttpll
imul
insb
dec
lds
lods
xchg
in
cs
pop
add
sti
pop
push
inc
sbb
inc
mov
and
inc
ret
pop
sub
imul
jae
jl
cmpl
fcomps
jg
sub
add
dec
loop
lods
mov
mov
or
pop
cmpsb
push
pop
insb
cmpsb
inc
pop
insb
test
ror
push
adc
ja
inc
mov
pop
sbb
addb
mov
pop
mov
ret
xor
cmp
lods
loop
or
lock
and
sub
in
mov
cmp
push
cmp
push
push
lods
out
xchg
stc
in
inc
jl
pusha
fidivrl
pusha
push
cld
pop
mov
cli
and
aaa
ja
mov
fcmove
int3
ror
pop
out
imul
outsl
hlt
stc
subl
and
xchg
mov
inc
jge
insl
jbe
aad
sub
xchg
pop
imul
mov
sub
sub
ja
xor
fwait
sbb
mov
fsts
xor
inc
mov
cwtl
shlb
push
repz
enter
dec
jecxz
push
push
xchg
mov
ljmp
cmpsb
and
add
sub
jne
dec
mov
pop
inc
fistps
lods
outsl
fwait
ja
inc
pushf
jg
jnp
inc
daa
dec
push
aas
sarl
mov
int3
bound
push
dec
push
sub
add
lds
cmp
inc
xor
jbe
into
movsb
and
into
jbe
add
and
fcompl
cmp
mov
push
mov
pop
push
outsb
add
dec
fimull
cmp
xchg
addr16
mov
pop
mov
test
cwtl
inc
mov
adc
pop
in
test
mov
cmpsb
jecxz
jg
xor
or
sbb
adc
testb
add
add
sahf
adc
lods
mov
sbb
clc
lods
idivb
iret
inc
jb
data16
stc
and
sub
aaa
xor
fldl
jmp
jg
jp
pop
dec
fwait
movsb
faddl
xorl
ja
and
pop
xor
add
mov
lock
xor
je
xlat
pop
cmpsl
sub
lahf
mov
jl
fstpt
adc
ret
adc
pop
xor
mov
sbb
pusha
sub
lret
rcrl
ret
inc
stc
adc
mov
sub
aam
ret
outsb
arpl
pop
mov
mov
xor
test
shrl
dec
adc
or
dec
inc
int3
iret
hlt
jge
shrl
pop
ds
stos
insb
sbb
hlt
stos
mov
subl
pushf
pop
pop
shll
push
mov
inc
xor
jns
mov
mov
jnp
rcl
repz
ss
cmp
stos
aas
sbb
ss
sti
iret
adc
test
pop
daa
cmp
in
mov
adc
fwait
add
lock
push
sbb
int
popf
pop
ret
test
xchg
mov
lods
sti
add
icebp
xchg
dec
daa
jae
ret
mov
call
mov
loop
push
cmp
les
xor
fsts
xor
dec
xorb
mov
sarb
cmpsl
sarl
cmpb
dec
lret
mov
cmpsb
das
cmp
add
xchg
dec
inc
jae
push
pop
lcall
and
mov
fldl
call
lea
cmp
push
movsl
mov
push
loopne
mov
sbb
pop
ljmp
push
enter
cmp
mov
push
or
mov
add
xor
and
mov
dec
stc
out
pop
sbb
jae
jne
jbe
fbld
mov
dec
outsl
stc
push
insb
gs
sbb
or
mov
and
ljmp
jo
jno
pop
ss
sbb
adc
mov
pop
lcall
sub
nop
inc
xlat
jnp
into
dec
incb
sub
mov
das
add
adc
lea
sbb
dec
or
or
into
push
xchg
mov
or
cltd
jmp
mov
mov
cwtl
sub
and
aam
lcall
push
push
sbb
fs
jb
fildl
cmp
loop
and
xor
icebp
clc
test
jns
mov
fs
push
jle
ss
lds
cmp
lock
dec
sar
pop
inc
in
adc
jnp
inc
in
pop
push
repnz
jo
ljmp
int
xchg
repnz
cmpsl
xor
push
packsswb
testl
int
pop
pop
icebp
dec
sub
pop
lret
xor
jns
and
repz
xchg
insl
cmc
aas
aas
adc
dec
ret
in
jae
mov
cmpsb
xchg
inc
push
sub
mov
pop
scas
adc
lds
fxch
lods
xor
mov
mov
mov
ret
adc
fistpll
adc
pop
aam
push
or
jle
into
add
or
jle
push
or
fcmovnb
std
outsb
push
inc
ficomps
aad
packsswb
and
push
dec
add
mov
add
fsubl
jp
lcall
je
jg
roll
shlb
rorb
aad
ret
fdivrs
sbb
mov
mov
push
xor
sbb
stos
out
popa
call
bound
addl
cmp
mov
sarb
ret
dec
fsubrp
addr16
and
mov
push
inc
cltd
dec
in
mov
jmp
repz
shll
lock
push
or
and
aam
cld
push
bnd
in
out
jns
xor
bound
add
loop
xchg
add
sbb
nop
jns
sbb
scas
int
adc
xorb
clc
mov
and
push
push
jb
xchg
in
cmpsb
inc
std
sbb
insb
xor
in
mov
push
cmc
sahf
pop
adc
in
in
pop
outsb
out
loope
lea
sbb
xor
mov
test
adc
add
jo
fucom
repnz
popf
mov
xchg
bnd
pop
fwait
rorb
mov
fldl
jae
xor
lahf
cmp
push
mov
int3
clc
xor
mov
xchg
shll
cltd
mov
adc
push
jae
xor
mov
or
aas
mov
adc
in
add
aam
and
js
sbb
insb
xchg
imul
cltd
xchg
lods
outsb
lcall
sbb
adcl
in
out
lods
sbb
jo
xchg
dec
pop
and
out
arpl
jo
js
xor
ljmp
mov
jns
mov
adc
xor
and
dec
int3
mov
movsl
loop
inc
addr16
orl
fsubs
cs
pop
ljmp
mov
sub
jecxz
jb
xchg
pop
xchg
add
ret
in
xchg
std
out
sub
cmp
mov
push
dec
jmp
or
xchg
mov
leave
push
mov
fisubrl
and
test
xchg
xorb
mov
dec
orl
rclb
orl
xchg
imul
mov
sahf
fmuls
in
das
je
and
pop
gs
sbb
cltd
js
cmp
movsl
adc
pop
pop
mov
jecxz
sahf
pusha
andb
aaa
out
lcall
add
arpl
xor
int
xor
loope,pt
dec
dec
jae
xor
push
lahf
divb
in
out
notl
mov
jecxz
adc
dec
mov
repnz
shll
data16
mov
jno
mov
add
andb
sarl
xchg
mov
movsl
jo
push
or
sbb
fsubl
daa
inc
mov
and
xor
addr16
jl
leave
aaa
das
cli
mov
push
in
sub
inc
cltd
jns
cli
inc
jns
lods
push
mov
xchg
out
push
mov
push
mov
mov
outsl
xor
fadds
sahf
sbb
mov
add
cmc
js
jo
add
push
and
outsb
adc
lcall
fstpt
xor
aaa
sahf
fnstenv
xor
push
mov
das
sbb
data16
xor
gs
loope
add
push
mov
pusha
adc
push
mov
scas
inc
shlb
add
xlat
jge
jecxz
mov
repnz
shl
mov
loop
in
xor
inc
dec
gs
in
sarb
pop
mov
push
xorb
mov
pop
movsb
aam
dec
jns
loope
mull
mov
scas
adc
cltd
jo
scas
lock
add
jns
addr16
xor
fdiv
jnp
and
xchg
push
or
and
mov
aad
rcrl
adc
mov
fs
dec
sbb
sbb
mov
scas
inc
mov
mov
shlb
and
jae
mov
inc
insb
xchg
cmpsb
lods
fimull
fistpll
pop
xor
inc
popa
push
dec
sbb
int3
pop
cmp
dec
out
xlat
out
mov
mov
outsb
or
push
in
decl
stos
repz
cmp
xchg
repnz
dec
or
jp
jno
jmp
incl
lret
jle
loop
sti
stos
dec
push
out
jmp
test
outsl
mov
sub
pop
pop
out
imul
mov
scas
adc
cmpsb
sbb
fbld
test
pop
mov
inc
inc
out
negb
out
fsubrl
push
inc
daa
add
cmpsl
add
js
lods
push
js
js
or
lea
xor
xchg
js
xchg
mov
les
and
mov
rcrb
out
imul
push
popf
cltd
lahf
sbbl
test
sbb
sbb
mov
mov
add
mov
mov
cltd
fimull
lods
mov
out
xchg
and
sub
mov
mov
popa
dec
das
or
pop
iret
and
fwait
sub
scas
cmp
jns
or
inc
inc
or
dec
inc
addl
mov
and
insl
xchg
faddl
mov
ret
add
shrb
cmp
scas
push
lock
add
cld
push
push
xor
or
gs
adc
push
gs
adc
add
push
sub
dec
and
xchg
dec
xor
lds
jo
int
sti
pop
push
fdivrp
cmp
vsqrtss
icebp
lea
xchg
xlat
dec
sahf
es
push
mov
xchg
daa
pop
adc
fcoml
pop
inc
lcall
jp
lods
sbb
jecxz
loop
pop
mov
xor
and
cmp
push
add
sahf
inc
sbb
xchg
loopne
add
pop
push
jecxz
repnz
popa
fisubl
icebp
imul
cmp
pop
and
xchg
repz
into
rorb
pop
sub
shll
fwait
out
cmpsb
mov
lea
push
add
or
and
rcl
push
inc
scas
stc
cs
and
push
insl
int3
sub
add
ret
aam
lds
inc
je
out
in
jecxz
adc
lods
jo
out
dec
and
dec
shrl
pop
dec
adc
cmp
cmp
pop
ds
dec
mov
mov
loopne
flds
ja
sahf
out
test
dec
stc
das
sub
sbb
ret
dec
and
ret
sbb
inc
pop
je
in
movsl
pop
jge
jns
sbb
leave
leave
popa
push
inc
sub
cmc
xor
aaa
xchg
xor
or
push
push
jge
pop
fs
shlb
fdivp
fdivrs
test
lds
in
adc
xchg
movsb
fdivrp
adc
dec
inc
cltd
arpl
jae
sbb
stc
sbb
mov
into
sub
pushl
int3
cmp
cltd
xchg
jne
sub
push
sbb
pop
add
lret
cld
xor
fcmovnbe
push
sti
mov
xor
and
ss
sub
push
adc
test
xchg
cld
shrb
test
fidivrs
arpl
ss
movsl
pop
or
jne
int
ja
jnp
lret
pop
fs
aad
lahf
adc
mov
into
pmulhw
out
out
jmp
mov
jo
inc
push
movsl
cmp
mov
or
inc
xor
lods
dec
or
inc
mov
call
fstpl
mov
dec
lret
pmaxub
divl
idiv
cmpsl
in
mov
push
ficomps
adc
fidivl
lcall
mov
mov
add
jo
mov
xchg
xlat
stos
ja
fdivrp
push
ljmp
imul
jmp
hlt
in
inc
mov
mov
sbb
pmullw
jbe
mov
add
fs
jbe
inc
je
or
gs
dec
and
and
outsl
push
xchg
mov
in
cmp
cmp
push
addr16
push
fucomi
xor
insl
pop
inc
fmull
cmpsb
push
xchg
shlb
nop
mov
test
insb
and
mov
inc
outsl
mov
push
xchg
cli
dec
cmpsb
insb
fst
adc
pop
cmp
in
je
arpl
mov
sbb
or
dec
pop
aam
dec
dec
lods
dec
sub
inc
push
shr
mov
or
mov
and
push
mov
jbe
push
sub
fldenv
test
xrelease
mov
outsb
in
dec
lock
int3
or
push
jmp
dec
cmp
popf
fdivs
inc
cli
pop
jp
jle
mov
lea
or
jb
mov
and
pop
sahf
repnz
pop
cmpsl
jo
and
mov
mov
mov
in
cmpsb
jl
inc
push
pushf
pop
jns
mov
jl
inc
and
or
gs
sub
fwait
sbb
js
mov
mov
inc
mov
pop
in
mov
in
push
xor
cmpsl
pop
mov
jp
sbb
dec
xor
rcl
cmc
imulb
std
jne
jle
in
xor
mov
into
pushl
lret
popf
jg
and
mov
xor
adc
mov
insl
pop
cmp
jns
imul
xchg
push
add
cmpsl
faddl
sti
mov
xor
test
mov
xchg
mov
dec
adc
rol
mov
push
loope
cs
clc
cmc
xchg
mov
ss
test
cmp
inc
popf
les
test
push
movsl
shr
ljmp
jge
push
insb
iret
mov
pop
nop
lcall
sbb
push
leave
ret
and
dec
mov
xor
fwait
cmp
pop
inc
ret
fcmovnb
or
jbe
je
loope
iret
insb
xchg
icebp
push
test
cs
arpl
push
xchg
in
sub
test
add
es
loopne
mov
bound
cs
adc
scas
dec
dec
std
sbb
data16
lret
or
incl
ds
imul
mov
jne
push
sahf
outsb
pop
pop
andl
mov
push
adc
sub
mov
lcall
push
pop
and
aam
daa
or
sub
testb
loope
jne
push
mov
mov
jmp
and
stos
sbb
mov
sub
add
cmp
xchg
in
ja
aam
mov
inc
aam
ss
dec
jp
imul
mov
dec
mov
push
in
aaa
cmp
arpl
xchg
adc
frstor
mov
popa
loop
mov
xor
mov
stos
popa
gs
jnp
jle
stc
jbe
fsubrl
shl
push
mov
mov
cmc
shrb
decl
bound
pushf
mov
push
dec
adc
mov
xor
cwtl
fmull
in
sbbb
mov
or
mov
test
ds
fildl
lretw
mov
push
popaw
movsl
call
or
pop
fidivrs
inc
fwait
out
push
pop
jecxz
lds
cwtl
decl
xchg
sbb
stc
jle
rcl
dec
mov
mov
int3
rcrb
push
cmp
xor
in
mov
pop
and
out
push
jae
cwtl
mov
adcl
jo
dec
sub
cmp
xchg
push
cld
dec
xchg
add
fwait
daa
addb
mov
faddl
mov
shlb
jbe
adc
mov
icebp
cmp
ds
dec
pop
mov
test
dec
jbe
sub
jns
dec
pop
cmova
fwait
cmpsb
inc
setle
jle
inc
ret
test
rcrb
repnz
dec
inc
mov
int
aas
nop
or
sbb
mov
insl
cmp
popa
xlat
push
fwait
stc
xchg
je
jne
cmp
stos
or
repnz
jns
int3
jo
lea
adc
popf
and
outsl
jge
adc
jne
daa
adc
adc
aaa
enter
xchg
and
sub
mov
pop
mov
leave
mov
pop
jo
shll
test
cli
fidivrs
iret
leave
lcall
data16
dec
sbb
out
outsl
test
mov
outsl
test
xadd
cmp
mull
sti
fbld
mov
shll
cmc
mov
pop
adc
mov
xchg
jnp
shll
xor
dec
call
and
mov
rolb
and
push
repnz
or
loopw
add
shrl
dec
xor
xchg
inc
mov
int3
xor
jp
pop
cmpsl
loopne
or
fcmovb
mov
mov
test
and
mov
addr16
pop
push
jmp
cmp
add
fwait
adc
xchg
dec
xchg
sub
pushf
xchg
dec
and
icebp
mov
dec
fwait
jp
ret
sub
mov
sbb
mov
mov
cs
in
inc
sbb
repz
enter
jno
test
scas
decb
lret
loope
roll
faddp
xchg
push
cs
rorb
xor
gs
mov
jl
fcom
and
fiadds
push
mov
fstpl
pop
dec
js
decb
mov
mov
pop
pop
sub
ss
sbb
adc
or
xchg
pop
pcmpgtw
fs
or
jne
hlt
mov
int
adc
xchg
shr
jecxz
add
sbbl
sbb
sbb
push
scas
mov
js
rorb
jecxz
test
movsl
test
mov
scas
lea
add
cmpsl
test
mov
fidivrl
xor
xchg
aam
jae
dec
mov
add
xchg
push
push
add
fiaddl
ret
scas
inc
xor
stos
xor
gs
sub
xchg
cmp
sbb
shlb
push
out
popf
mov
rcll
push
fs
shl
jg
xchg
lret
sbb
and
push
dec
jge
ret
jbe
and
inc
sbb
add
int
outsl
cmp
pop
cs
pop
cmpsl
scas
inc
les
push
mov
aam
in
shl
mov
movb
fistl
inc
lock
and
xchg
fldenv
cmpsb
sbb
add
mov
outsb
lock
add
repnz
std
test
xchg
pusha
fstps
loopne
sbb
jbe
data16
dec
es
hlt
cmp
testl
mov
xchg
iret
aam
mov
add
jnp
repnz
sub
mov
es
jno
mov
aam
adc
push
cld
fidivl
push
sahf
xchg
push
loopne
mov
arpl
add
stos
mov
data16
shl
or
inc
cmp
movsb
jge
aaa
enter
fcmovne
insl
leave
jge
cmp
sbb
repnz
cmp
xchg
incl
pop
jg
orb
inc
xchg
out
cwtl
or
jae
pop
add
stc
xchg
push
fs
push
jmp
stos
xor
fwait
lea
jp
in
push
std
xchg
sbb
fistl
add
les
dec
les
outsb
xchg
mov
popa
jg
pop
test
int3
fwait
idivl
push
mov
cmc
adc
jge
scas
call
cwtl
inc
push
fwait
jnp
jp
and
pop
sub
mov
dec
jmp
xchg
xchg
out
ljmp
cmp
iret
push
sbb
inc
jne
loopne
jle
mov
inc
push
push
aaa
and
push
jmp
jns
and
lret
add
subl
pop
pop
jle
test
mov
push
dec
xor
shll
rcll
xchg
xor
in
inc
rolb
in
or
mov
insl
inc
xchg
jnp
xchg
add
inc
pop
or
outsb
xor
inc
divl
into
orb
jne
loop
xchg
into
and
adc
rolb
push
mov
adc
mov
enter
cli
shrb
jns
aam
pushf
pop
push
push
cmpsb
xchg
sbb
loop
cmc
sbb
pop
int3
hlt
or
or
xor
add
js
in
xchg
mov
xchg
ljmp
adc
cmp
adc
xchg
cmp
repz
mov
push
jb
pop
xchg
push
rcrb
lea
popa
cmp
sbb
mov
dec
mov
cmp
jno
jb
loop
lret
loopne
or
cltd
pop
pop
sub
inc
shll
adc
mov
int
pop
push
call
xchg
mov
out
clc
jecxz
repz
dec
push
lods
mov
or
fidivrs
out
dec
mov
mov
subl
out
rcrb
ficompl
fmull
mov
and
orb
inc
adc
add
stos
cmc
xchg
sbb
cmpsl
test
mov
lock
add
fldl
sahf
icebp
movsb
movsl
push
cmpsl
fcomps
pop
std
ljmp
xlat
ret
test
pop
clc
mov
or
ja
push
mov
sub
fsubrs
movsb
adc
cmp
nop
inc
xchg
cmp
popa
das
jmp
scas
or
jno
and
jo
lahf
push
in
idivb
repz
mov
pop
adcb
mov
mov
inc
push
and
xchg
and
lret
testb
hlt
jae
adc
movsb
xchg
mov
inc
dec
sbb
out
loopne
jae
jb
mov
push
sti
ret
rcr
inc
push
add
incl
mov
sbb
or
push
or
add
jecxz
pop
cmp
icebp
fldt
sub
cmp
mov
roll
push
and
shl
out
pop
adc
mov
xor
adc
popf
dec
outsl
push
cmp
push
test
jno
push
shlb
cmpsl
xor
fdivr
adc
xchg
popa
outsl
or
mov
jno
fistps
cmp
clc
mov
in
out
mov
cwtl
sbb
jo
sti
fstps
inc
cmp
dec
stos
push
mov
dec
cli
inc
mov
fisubrs
shr
fcmovnbe
xor
sub
inc
pop
mov
pop
les
aad
mov
jne
shrl
xlat
cmp
pop
es
bound
sbb
push
sub
xchg
push
das
pop
sbb
rsqrtps
adc
leave
jae
cmpl
push
sub
dec
gs
or
jg
popf
mov
scas
lds
rcrl
mov
lcall
cmp
hlt
mov
in
testl
and
imul
adc
ljmp
xchg
mov
lods
lods
ror
add
lret
mov
mov
js
inc
ficomps
or
int
or
fsubp
ror
sub
test
das
mov
loop
push
test
into
mov
jle
stos
mov
out
leave
rcll
xor
or
imul
pop
add
sub
push
popa
loop
nop
mov
mov
fimull
pop
sub
stc
add
ret
in
cmp
inc
sub
inc
inc
ficomps
stos
adc
push
outsl
adc
or
enter
mov
imul
pop
dec
push
mov
in
dec
push
cli
ljmp
scas
dec
xor
cmp
push
out
pop
movsl
sub
inc
push
cli
inc
pop
sub
shlb
xchg
stc
adc
xchg
cmc
faddl
adc
fwait
pop
jle
xchg
daa
lea
sub
mov
and
dec
adc
call
mov
and
inc
and
mov
lods
cmp
test
push
cmp
sub
aas
fidivs
rcll
mov
adc
in
lea
jge
idivl
push
pop
fstpl
xchg
xadd
or
out
pop
fcmovnbe
mov
or
mov
aam
and
or
mov
inc
push
stos
psubusb
jmp
ss
cltd
out
and
inc
push
adc
cmp
outsl
fwait
std
popa
idivb
and
js
inc
add
adc
aam
xor
xlat
cld
jecxz
clc
pop
insl
gs
xor
jnp
mov
sub
sti
incl
jge
iret
xchg
rcrb
mov
and
cmc
mov
popa
cmp
mov
ret
scas
mov
faddp
sbb
sbb
dec
or
jo
subl
bound
push
shlb
cmp
sarl
orb
fidivl
cmp
inc
jno
sub
xchg
or
and
cmp
push
ja
xor
or
movsl
or
movsl
and
rcrb
sahf
mov
push
mov
dec
dec
pop
call
sbb
fidivs
subl
insl
cltd
dec
adc
stos
out
mov
es
mov
stos
jp
sti
loopne
into
adc
nop
fistps
jecxz
xchg
stc
pop
rorb
in
push
mov
mov
popf
std
xor
icebp
xchg
adc
mov
adc
stos
ja
sub
pop
scas
enter
pusha
mov
les
ss
jg
out
mov
jp
add
fldt
mov
or
xor
jbe
cmpsb
inc
stos
jle
sub
insb
xor
add
or
das
icebp
mov
in
jl
enter
mov
sbb
inc
adc
rcrl
mov
mov
or
je
mov
or
mov
xor
nop
add
or
inc
push
pop
jmp
add
inc
inc
cmc
adc
mov
fs
pop
mov
fstl
dec
or
mov
testb
mov
cli
mov
das
adcl
mov
mov
iret
loope
dec
inc
addr16
test
jnp,pt
add
enter
arpl
sbb
es
mov
cmp
fwait
pxor
out
adc
outsb
jb
ja
jmp
add
mov
cmp
mov
cs
cmp
outsb
push
mov
hlt
test
dec
inc
cmp
ss
lcall
subl
inc
cs
in
jp
inc
nop
jo
arpl
jmp
and
sahf
addr16
shrd
test
jg
std
fstps
and
insb
mov
cmp
or
bound
and
inc
outsl
imul
out
cld
faddl
mov
push
xchg
push
sub
push
ret
js
aaa
cmp
subb
js
and
in
and
leave
sbb
pop
insb
data16
loopne
mov
nop
loope
js
dec
jb
sbbb
xor
stos
sar
xor
movsb
cmc
int
dec
xor
dec
xchg
jl
mov
insb
hlt
jo
xchg
test
stc
dec
pop
sbb
pop
sub
jmp
pop
push
mov
icebp
add
imul
test
pop
rorl
or
push
adc
mov
jne
test
lods
cmc
mov
loopne
mov
andb
fcompl
stos
imul
outsl
vshufpd
pop
sub
or
int3
lock
bound
std
lock
lret
out
pop
mov
aad
ret
pusha
hlt
mov
mov
in
hlt
push
or
aaa
jle
mov
gs
loop
sahf
mov
push
pop
sbb
dec
push
and
lret
icebp
add
and
insl
cli
cmp
push
mov
cmp
pop
aaa
jbe
lock
mov
push
inc
mov
out
and
ret
js
jae
mov
nop
idivl
std
fcoml
sub
das
pop
or
aam
sbb
push
mov
test
push
sbb
movsb
add
push
inc
xchg
inc
pop
sarl
repnz
out
ret
mov
xchg
inc
mov
add
std
and
pop
or
pop
jge
inc
stos
ja
xor
cltd
inc
loope
inc
unpckhps
enter
mov
dec
xlat
pop
cs
fwait
jmp
jb
das
jb
rcl
es
jle
fidivrl
pop
test
mov
pop
ljmp
pop
push
jecxz
jae
icebp
in
lock
mov
ja
shlb
out
and
movsl
popl
pusha
cld
dec
pop
mov
sub
mov
add
or
sub
xchg
jo
inc
mov
lret
ja
cmc
inc
imul
mov
and
jg
pushf
mov
mov
hlt
adc
stos
stos
insl
or
xbegin
es
jge
stos
add
xchg
jle
jecxz
jmp
adc
or
cmp
addl
lret
fstpt
sub
jae
jg
cwtl
or
stos
sub
hlt
das
xlat
or
loopne
orb
fiadds
inc
push
and
jne
mov
testb
cmp
jbe
aad
ja
and
jb,pt
lcall
andb
nop
jp
xor
filds
mov
add
push
loop
xchg
les
xchg
cli
mov
pop
arpl
cmp
ss
les
sidtl
mov
imul
xchg
cmp
dec
lret
pop
push
mov
in
bound
repnz
jbe
rorb
mov
dec
mov
mov
sbb
fwait
jmp
lods
xorl
pop
xorl
pop
add
lds
sbb
arpl
xchg
mul
push
push
sar
dec
mov
mov
sbb
push
mov
mov
push
ja
into
sarb
mov
out
jecxz
cli
iret
sti
sbb
ret
and
xor
add
scas
popf
push
inc
imul
pop
pushf
pop
push
aad
out
push
ret
xlat
orb
in
out
mov
pop
daa
ljmp
scas
push
data16
xlat
rorb
negb
push
mov
shlb
out
rorb
sub
push
dec
test
inc
test
mov
mov
lods
fcmovbe
xchg
xor
cld
in
or
and
xor
and
les
push
and
pushf
mov
lret
movsl
out
push
stc
shrl
fistl
mov
xchg
loope
ljmp
sub
in
cli
pushaw
push
jae
in
and
imul
sub
popf
push
sahf
insb
jno
and
mov
ja
cltd
das
add
and
insb
out
daa
lcall
pusha
cmp
sarb
cmp
hlt
pusha
mov
ret
ret
scas
add
mov
sub
iret
imull
shlb
rorb
jecxz
inc
dec
or
lahf
mov
and
arpl
out
push
bound
pop
xor
jnp,pt
adc
aam
sbb
fsubp
cmp
outsb
sbb
jb
lret
dec
scas
pop
cmpsb
iret
push
sbb
dec
mov
stos
data16
pop
fistl
jno
mov
adc
test
bnd
jb
or
out
adc
setns
sbb
data16
mov
out
inc
mov
or
xchg
mov
push
pop
scas
int
pop
lds
or
adc
ja
pop
jo
std
loope
pusha
sti
and
repnz
jle
sub
or
mov
mov
sbb
insl
xchg
jp
insl
mov
int
sbb
sbb
pop
addb
lock
sub
dec
xor
repz
xor
pusha
in
in
int
xor
xor
push
dec
xchg
cwtl
orl
shld
cwtl
icebp
rolb
sub
sbb
ficompl
testb
jl
sub
xlat
add
jb
gs
leave
and
into
fimuls
inc
sub
add
xchg
pop
mov
xchg
ret
adc
sbb
in
aad
das
mov
or
and
xchg
jl
dec
push
sub
ja
pop
addr16
push
repz
push
mov
ljmp
add
leave
cmpsl
scas
sub
mov
popf
inc
loop
shll
push
pop
mov
xchg
ret
and
adc
mov
jmp
addr16
mov
inc
mov
inc
jl
add
fwait
mov
mov
mov
ds
movsl
push
sub
loop
jno
jmp
fstpl
loop
sti
sbb
lods
inc
inc
dec
repz
push
sahf
lock
testl
loopne
adc
in
test
shlb
lods
outsb
push
push
adc
or
fistps
pop
imull
inc
je
dec
add
pop
ret
movsl
call
jns
repnz
pop
and
jb
mov
in
imul
add
mov
pop
push
mov
push
inc
push
insl
jecxz
fxam
sti
fs
bound
mov
cmp
adc
cmp
pop
lret
out
dec
dec
jo
std
and
add
lea
lds
jbe
popf
push
ja
pop
lock
sub
push
dec
dec
pop
in
xchg
xchg
and
daa
ret
mov
or
ja
out
notb
pop
mov
pop
mov
ljmp
inc
mov
mov
and
aad
dec
jge
outsb
and
fwait
inc
push
and
dec
cli
adc
cmp
gs
pusha
fildl
dec
cwtl
shlb
aas
lds
cltd
mov
in
and
push
push
push
push
sub
sub
cmp
rcrl
or
mulb
jns
mov
or
aad
cli
adc
adc
into
mov
adc
in
loope
jae
jp
scas
cld
jno
pop
and
pushw
inc
das
inc
ljmp
mov
sub
les
jl
sbb
cmp
ja
cmp
sbb
sbb
std
scas
repnz
aam
mov
inc
mov
stos
in
vpunpcklbw
or
ja
insb
ja
mov
xchg
mov
adc
mov
mov
shr
push
adc
xor
jg
push
orb
lods
sar
rcl
sub
lods
jl,pn
xchg
lahf
dec
mov
call
cmpsl
mov
fcomp
push
mov
insw
pusha
lods
mov
movsl
out
sbb
js
inc
mov
push
push
ret
sub
fsubp
shr
mov
add
xor
jo
repz
pop
xlat
xchg
pushf
pusha
mov
cli
cs
pushf
mov
mov
inc
cmp
ja
xchg
xchg
xor
cmpsl
inc
sub
xor
jnp
les
mov
jp
int
popa
push
rcl
dec
mov
adc
and
addr16
mov
repz
inc
mov
add
pop
scas
gs
movsb
cmp
cmpsl
repz
add
lret
xor
jg
std
dec
adc
fcompl
sub
mov
dec
xor
loop
adc
cmp
xor
aas
jne
aad
leave
xchg
mov
fwait
nop
andl
adc
fwait
test
mov
jg
pop
pop
ret
xchg
xchg
xor
and
ja
mov
dec
cmp
dec
pop
fucomp
cmp
mov
mov
sub
and
out
add
leave
std
adc
aam
push
es
mov
int3
dec
dec
cli
das
mov
jmp
imul
sub
jge
ret
scas
dec
mov
lret
cmpsb
lods
data16
xchg
jns
test
pop
pop
outsb
test
inc
movsb
sub
mov
adc
lds
lahf
cli
push
jge
or
lods
test
loopne
mov
popf
cmp
sbb
and
cld
into
les
insl
jg
mov
decl
adc
ret
lea
push
inc
dec
xor
call
pop
pop
pop
xchg
or
popa
mov
add
idivl
pushf
outsl
dec
clc
jo
out
es
lock
xchg
jb,pt
and
ret
aaa
lcall
stc
dec
je
rclb
mov
jnp
mov
lea
or
or
xor
cmp
test
sub
lret
inc
jo
int3
sarb
mov
fildll
arpl
setns
jl
sub
adc
sub
mov
fstpt
jmp
cmpsb
cmp
cs
out
mov
xchg
push
jle
mov
fiadds
sbb
sbb
dec
pop
inc
pop
lea
ret
mov
dec
push
ja
aad
imull
dec
push
inc
push
mov
out
inc
mov
ja
std
movsb
push
aam
int
scas
bound
testb
xchg
xchg
jecxz
outsb
repz
xchg
sbb
add
pop
movsl
xchg
or
sar
sub
test
and
sti
lock
mov
mov
jnp
add
jl
je
dec
repnz
cwtl
fcoml
sbb
mov
cli
xchg
fbstp
int
addr16
lds
xchg
std
jo
cmp
loopne
jecxz
mov
push
les
divps
into
aaa
cmp
fxch
sbb
cli
cmp
or
pop
mov
lock
ret
scas
xchg
verr
rep
and
jge
loop
sarb
aad
lods
xchg
cmc
inc
dec
mov
lret
dec
sbb
stos
ret
mov
adc
push
pop
inc
jecxz
pcmpeqd
bswap
pushf
fnstsw
or
hlt
loop
arpl
mov
xor
shll
pop
jmp
mov
sarb
out
popf
sub
xchg
sub
xor
mov
int3
mov
scas
pop
nop
sbb
scas
xchg
pop
and
and
cs
out
aas
aad
add
stos
ss
insb
jnp
pop
mov
mov
js
adcb
shlb
subb
pop
addr16
cld
js
ret
cld
sbb
divb
adc
push
stc
sbbl
dec
jg
dec
jo
xchg
dec
lea
mov
push
and
int
xchg
in
fs
lret
div
dec
adcl
jae
stc
cltd
cmp
ret
aam
push
std
je
mov
adc
add
mov
enter
xchg
mov
jg
xchg
mov
and
aad
mov
mov
push
mov
xchg
test
jo
sub
stos
out
jecxz
cwtl
xchg
xchg
jbe
or
dec
add
fisttps
imul
ret
dec
cmc
ret
add
push
xor
test
mov
jp
dec
mov
and
pop
xchg
xchg
lahf
fidivrl
fdivrp
push
movsl
rol
lcall
in
push
push
in
mov
adc
mov
out
pop
popaw
mov
daa
cwtl
into
dec
jae
fs
add
push
and
mov
inc
mov
insl
sbb
imul
sbb
ds
sub
out
incb
xor
push
sub
gs
mov
out
pop
ljmp
movsl
mov
ficomps
fsubrs
cltd
pop
adc
adc
lcall
or
pop
scas
add
jmp
ss
dec
adc
and
inc
es
dec
inc
or
ret
into
insb
jge
cwtl
mov
repz
adc
sbb
add
add
arpl
loop
push
lret
xor
add
pushl
adc
jecxz
pop
jo
jg
sbb
dec
sbb
sarb
lret
cli
pop
jns
sub
xchg
les
dec
insb
and
lods
jbe
dec
out
sahf
loope
jecxz
mov
iret
test
stc
mov
jge
or
fs
in
inc
loopne
aad
push
pop
add
push
xchg
lahf
dec
mov
pop
insl
or
loope
fnstsw
inc
add
pusha
mov
das
push
bound
int
mov
mov
or
add
dec
jae
dec
sbb
mov
clc
dec
push
add
daa
jnp
andb
add
jb
adc
mov
test
push
cli
fildl
adc
xchg
add
xor
into
inc
cmpsb
add
data16
out
and
sti
ljmp
push
pop
ds
jge
fcomi
test
cmp
popa
sbbb
outsb
mov
cmovle
jns
out
outsb
add
push
jb
sbb
jb
test
mov
addb
push
sti
enter
out
push
pop
aas
int3
lods
shl
push
push
fdivr
loop
bound
shl
dec
lret
stc
mov
test
inc
fldenv
xchg
fdivs
outsl
loope
pop
loopne
mov
mov
xchg
cmp
add
shlb
dec
sub
mov
out
lods
inc
adc
aas
adc
incl
xor
sbb
pop
lahf
xlat
mov
pop
cmp
sbb
and
pop
sub
decl
jnp
xchg
sahf
negb
loopne
fnstenv
mov
add
mov
mov
mov
sub
lret
iret
add
xlat
pop
fnstenv
cld
mov
popf
sub
mov
push
aam
mov
jecxz
iret
les
mov
sub
mov
sbbb
je
pop
push
movsl
ds
and
mov
call
int3
clc
inc
xor
daa
sbb
xchg
mov
fsub
popa
inc
roll
and
test
scas
pushf
sti
or
incl
outsl
xor
pop
mov
sbb
cld
outsl
shrl
dec
orb
scas
dec
jae
int
mov
enter
loopne
jmp
out
test
hlt
adc
mov
scas
xchg
sbb
fwait
jle
push
cmpsb
sub
cmp
adc
jmp
jae
mov
mov
fcoms
shlb
jae
cs
rclb
jmp
xchg
das
fidivrl
mov
mov
das
and
js
enter
inc
or
lret
xchg
loope
leave
dec
lea
cmp
dec
rcrl
ja
pop
sbb
in
mov
push
pusha
lahf
insb
or
push
out
sbb
mov
or
fs
sub
test
mov
outsb
sar
pop
fs
and
clc
jno
mov
push
test
jge
fisubs
div
add
ret
xchg
repnz
in
popf
movsb
or
aad
adc
push
subb
xchg
insl
or
add
dec
fcmovnu
lea
leave
es
sub
das
or
out
repz
mov
aaa
push
aam
xor
dec
andb
lahf
xchg
dec
sub
mov
std
push
fcomps
lahf
xor
mov
movups
rorb
sub
xor
hlt
scas
jnp
xor
lcall
mov
icebp
inc
dec
inc
push
push
lock
or
pop
xor
inc
adc
mov
movb
cmp
dec
aas
dec
jne
add
aam
mov
cld
sub
scas
ret
lds
mov
xchg
stc
sbb
ds
jb
inc
cwtl
mov
inc
or
dec
repz
cmp
addr16
addr16
ljmp
xor
gs
inc
stos
mov
lea
outsl
rcl
jno
adc
daa
aaa
mov
ret
and
popa
inc
jae
in
or
stos
sbb
fdivrs
gs
sub
sbb
mov
adc
in
enter
push
mov
and
aas
dec
fwait
andl
push
xor
es
cwtl
fldenv
jno
dec
addr16
inc
daa
in
arpl
mov
loopne
call
imul
js
je
lret
jg
push
out
push
jg
push
out
xor
cmp
aas
pop
mov
add
inc
mov
xchg
mov
mov
mov
shl
dec
cltd
mov
je
sti
inc
cli
mov
imul
movsl
inc
fwait
mov
add
jo
mov
add
sbb
insl
arpl
cld
mov
stc
outsl
sahf
mov
imul
and
aam
jp
cmp
mov
sub
sub
push
in
and
cmp
jle
ffreep
dec
out
jecxz
xchg
lcall
sarb
add
in
insl
pop
dec
pop
xorl
and
cmp
js
add
int3
nop
cmp
pusha
lcall
arpl
add
in
lock
jns
pop
jmp
sti
dec
fidivrl
cs
in
aad
jp
lods
insl
andb
jl
scas
mov
stos
jo
mov
out
orb
or
cmpsl
jne
inc
les
scas
lock
push
ja
and
dec
testl
js
or
out
adc
cli
int3
in
jnp
jg
mov
faddl
or
inc
mov
mov
dec
fwait
mov
push
cmp
lcall
lea
pushf
popl
mov
inc
xchg
enter
insb
jno
mov
push
int
repz
dec
pop
push
cmp
lods
lret
cmp
push
dec
aad
movsl
add
inc
dec
shrl
jo
imul
dec
mov
push
push
jo
jl
daa
inc
into
jne
add
pop
push
adc
push
push
icebp
jp
mov
pop
push
das
mov
roll
xor
dec
lods
dec
mov
mov
cwtl
in
test
and
in
xchg
aas
iret
orb
fdivrs
inc
mov
pop
test
cmpsb
movsl
test
sti
mov
jno
ret
dec
repz
shlb
inc
faddl
jecxz
xor
lods
shlb
cmp
jae
and
sbb
std
pop
xchg
loope
mov
lods
adcb
call
fisubs
fwait
pop
imul
data16
aam
and
mov
mov
dec
test
repnz
and
dec
lret
xchg
sub
popf
inc
adc
mov
ljmp
pop
arpl
ljmp
and
jne
iret
test
mov
or
into
or
inc
sbb
test
divl
mov
outsl
aam
shrl
pop
in
jp
xchg
jno,pt
and
dec
ja
pop
xor
in
pop
call
push
sbb
out
dec
insb
add
fcompl
in
insl
lea
in
add
stos
lods
loope
inc
cmpb
jo
cmp
fldt
outsb
popa
adc
and
sbb
xlat
into
rcrb
push
lea
sub
jo
lret
pop
or
sbb
imul
xchg
hlt
out
clc
ss
mov
mov
xorb
mov
push
lcall
xchg
xor
inc
mov
push
lods
pop
scas
std
cmp
sub
and
in
inc
ret
movsbl
push
movsb
sbb
mov
inc
add
mov
pop
or
dec
daa
out
pusha
dec
pop
fcom
push
sbb
add
push
stos
jb
lock
adc
stos
and
ds
jmp
insb
jg
jmp
sbb
aam
mov
xchg
ret
and
xor
fildl
push
cld
fnstcw
jno
mov
inc
js
cmp
xchg
neg
cwtl
dec
xchg
pop
das
lret
rcrl
xchg
push
neg
jecxz
add
inc
arpl
cmp
repnz
fisttpll
popa
cmp
lret
dec
ret
repz
xchg
or
jb
add
out
jp
pop
loopne
rol
sbb
call
clc
sbb
inc
xchg
pushf
push
jg
push
ss
jne
fisubl
xchg
outsb
or
push
imul
and
push
fs
pop
fisubrs
sub
or
lods
sub
aas
mov
push
cld
dec
scas
test
push
daa
les
ret
push
xchg
lods
and
les
in
pop
out
stos
call
adc
stc
mov
push
hlt
mov
rcrb
lock
xor
repz
js
lahf
into
pop
out
adc
test
test
cmp
inc
pop
in
pusha
je
mov
xchg
adc
xor
sbb
or
insb
cmp
mov
gs
loope
mov
sbb
enter
or
or
jo
hlt
inc
jne
sub
cmc
cli
adc
call
inc
subb
cmp
sbb
test
imul
in
dec
pop
xlat
jne,pt
push
cmp
push
ljmp
and
jle
push
rcll
push
int
xor
adc
aas
roll
sbb
dec
repnz
push
fsubrp
cmp
es
pop
pushf
fcomi
xlat
scas
xchg
stos
movsb
aam
jne
inc
fsubrl
mov
mov
fstps
cmpsl
std
imul
mov
xor
jne
dec
js
and
stos
cmp
flds
nop
fs
push
aam
or
mov
push
movsl
gs
add
sub
shlb
mov
faddp
loop
push
xchg
mov
popf
or
pop
or
addr16
test
scas
fiaddl
popa
insl
js
and
mov
cmp
push
xlat
mov
in
mov
lods
mov
into
ret
loopne
mov
push
mov
jge
jns
movsl
mov
imul
mov
sub
or
xchg
push
mov
sub
sarb
mov
xchg
and
mov
jne
fdivr
gs
mov
sub
pop
fadds
dec
xchg
sbb
jge
insl
cmpsb
xor
and
clc
adc
scas
inc
scas
inc
sub
mov
aaa
jb
pop
jne
std
out
bound
jns
add
jnp
cltd
jmp
jno
stc
pop
call
jg
mov
pop
adc
xchg
mov
clc
mov
testb
mov
leave
shrb
js
sub
imul
popf
push
dec
jns
cmp
pop
mov
popf
push
push
jne
and
cld
jmp
das
sbbl
mov
and
sbb
daa
and
sbb
cli
pop
xor
jl
icebp
notb
adc
jbe
inc
xor
jg
push
daa
dec
into
add
int
shrb
mov
sbbl
xchg
sbb
inc
pop
mov
or
dec
test
add
repz
cmpsl
loope
fnstenv
fbld
xchg
pop
imul
out
jns
insl
cmp
or
jp
sbb
fnstenv
enter
insb
aad
shlb
push
or
mull
jmp
mov
jge
push
push
mov
jnp
push
push
or
pop
iret
mov
push
loope
in
xchg
sub
lock
cmp
js
popa
es
mov
mov
imulb
jb
lods
lahf
sbb
cmp
inc
fldenv
jno
hlt
ss
js
out
xor
xor
push
and
loop
mov
data16
test
in
push
jge
cmp
sbb
add
jb
sub
adc
ja
hlt
fnclex
jno
sub
and
sbb
pop
mov
clc
data16
xlat
test
sub
xorl
mov
add
jo
push
aas
into
fmull
mov
fsts
jae
in
mov
pop
mov
popf
jne
mov
imul
sub
in
in
ret
pop
out
push
test
fnstenv
int
outsb
push
xor
test
lcall
daa
leave
sbb
addr16
cmp
xor
mov
scas
push
and
and
dec
icebp
xor
sti
push
mov
movsl
push
inc
fsubl
push
jmp
push
bound
lcall
pop
xchg
lcall
roll
das
dec
fisttpl
ficomps
mov
add
jl
cmpl
and
scas
aaa
xor
and
or
int
into
mov
pop
adcb
aad
ljmp
mov
addr16
jns
or
adc
lret
push
xor
pop
sbb
add
mov
andb
push
xorl
sbb
mov
jg
adc
mov
jne
push
push
push
scas
pop
repnz
jbe
and
mov
cmp
stos
and
movsb
adcl
out
jle
lcall
lret
mov
into
enterw
lods
push
xor
stc
mov
or
adc
push
or
lcall
mov
dec
or
test
fs
mov
dec
stos
lods
sub
test
iret
jg
in
cmp
loopne,pt
cmpsb
stos
repz
mov
sub
inc
push
sub
data16
jne
cmpl
dec
xchg
decb
add
aaa
pop
pop
js
lahf
mov
sub
in
lcall
xchg
pop
pop
test
push
push
push
xchg
clc
mov
fidivrs
repz
emms
inc
ljmp
fcoml
jb
aas
add
push
rclb
and
lods
pop
and
xchg
mov
mov
mov
push
rolb
xchg
outsl
jge
pusha
fstpt
hlt
xlat
sbb
cwtl
subl
popa
push
cmp
mov
sbb
jns
subb
fs
xor
inc
adc
jecxz
out
sbb
dec
cli
daa
push
jl
in
rorb
dec
pushf
dec
std
arpl
sub
xor
xchg
aaa
in
add
inc
mov
out
pop
mov
pushf
dec
mov
or
dec
push
or
repz
jg
loope
pop
movsb
fdivr
stos
insb
push
mov
sub
shll
inc
insl
sbb
mov
jecxz
pop
cmc
enter
pop
pop
dec
leave
loope
inc
jl
pusha
pop
and
or
ds
inc
cmp
xchg
out
ds
xchg
mov
cmpsb
bound
cld
rcr
jnp
inc
adc
fwait
sub
arpl
xchg
xchg
scas
inc
cmp
rclb
mov
and
sarl
popf
mov
jno
lahf
mov
sub
push
xorb
in
ljmp
sbb
outsb
insl
mov
cmpsl
test
cwtl
xor
fcom
cs
mull
dec
shlb
in
dec
fdivl
fs
pop
adc
mov
faddl
cs
add
sbb
shr
sahf
pop
jmp
repnz
xor
roll
fld
call
xchg
dec
ss
mov
and
and
jecxz
sar
lods
into
jnp
and
sub
mov
dec
test
std
jl
lret
jno
test
outsb
pop
sbb
bound
shlb
add
jg
cs
adc
sbb
mov
int
xchg
cmp
jl
ret
and
dec
xchg
pop
insl
mov
inc
fsubs
movsb
mov
repz
test
mov
test
and
test
mov
out
xor
jecxz
mov
fcomps
movsb
xchg
dec
aaa
pop
pop
sub
rol
adc
jp
ja
cmp
dec
mov
pop
sub
jno
mov
dec
fs
push
xor
test
sub
and
or
ljmp
js
out
lods
jecxz
sbb
inc
sbb
inc
aas
sbb
cmc
add
xor
inc
or
js
inc
popa
and
arpl
es
push
inc
outsb
xor
call
enter
sub
outsb
lcall
sub
sub
outsb
dec
lea
roll
daa
mov
pop
sbb
lcall
loope
pop
and
xchg
idivb
xorb
lds
xchg
sahf
mov
jg
mov
mov
insb
dec
inc
pushl
aam
nop
sbb
andl
cmp
aad
rcl
pop
aad
mov
mov
pushf
aas
inc
lds
xor
lret
repz
cltd
pushf
ja
xor
push
xchg
adc
ljmp
and
sbb
cltd
and
jae
dec
cmpsl
lcall
pop
iret
mov
adc
and
pop
loop
cmc
out
in
popf
pop
imul
fchs
xor
clc
or
pushf
jle
cmp
in
loopne
rorb
cs
or
push
and
mov
stos
dec
mov
repz
lret
int
sub
cmpl
into
loopne
out
jmp
cmp
clc
cli
jmp
push
mov
xor
mov
xor
arpl
fmull
add
inc
insl
cmp
dec
test
jnp
push
jns
in
aas
mov
cs
inc
push
mov
jp
push
ror
jne
push
inc
shll
push
inc
pushf
cmc
int
pop
sbb
cmpsl
cmpsl
popf
enter
mov
mov
ret
or
ljmp
ja
fisttpl
imul
inc
or
mov
xchg
mov
push
or
jns
jb
xchg
xchg
testb
mov
shl
mov
add
add
aad
sbb
into
mov
xor
mov
test
repnz
mov
cmp
aaa
aas
clc
sbb
mov
pop
mov
adc
testl
xchg
push
push
pop
jb
aaa
aas
mov
es
jo
dec
pop
jecxz
jmp
mov
add
cli
mov
adc
loopne
push
push
imul
mov
into
fsubr
push
je
outsb
mov
call
shll
pop
shll
mov
mov
loopne
xor
sahf
xor
jns
push
repnz
pop
fnstenv
repz
add
int
mov
pop
adc
inc
inc
enter
in
shll
mov
xchg
ret
or
lahf
add
add
aaa
outsb
sbb
fnstenv
lret
fsubr
xor
outsl
cmp
std
out
push
mov
js
pop
adc
or
sub
int
out
test
xchg
outsb
aam
xor
jmp
cltd
push
pop
jmp
and
mov
outsb
ljmp
cmpsl
jne
call
insl
pop
js
movsb
mov
dec
rolb
shll
pop
xchg
pop
loope
scas
push
lret
cld
sub
and
sbb
sub
fwait
xor
push
das
mov
adc
inc
subb
push
stc
or
gs
jmp
addr16
dec
ficomps
ret
pop
in
jge
les
add
mov
in
sub
data16
daa
mov
adc
loop
jecxz
imul
jns
fidivrs
iret
sub
lret
cmpl
dec
fwait
stos
and
sbb
mov
push
jp
cmp
popf
jae
cld
js
pushf
mov
add
imul
or
inc
lret
insl
scas
lret
push
mov
xchg
adc
gs
or
push
scas
pop
mov
imul
pop
bound
xor
jnp
inc
jns
push
jbe
sbb
push
mov
das
cli
xchg
dec
xor
dec
jae
dec
jp
addr16
cli
sbb
mov
xchg
push
repz
jecxz
das
push
adc
mov
push
adc
and
daa
or
cmp
stos
sub
add
into
pop
pusha
fmul
xchg
test
fisubl
mov
jmp
aad
imul
push
imul
dec
popf
icebp
int3
rcrb
cld
imul
daa
daa
and
mov
repnz
stc
out
js
ror
push
ljmp
or
or
jl
popa
in
clc
xor
sti
sub
cs
fdivr
jae
sub
ret
pop
rorl
je
enter
test
stc
call
dec
sar
int
test
xchg
push
movsl
push
xor
dec
push
dec
inc
aad
aaa
cwtl
sbb
mov
push
mov
fimull
fistpll
dec
lahf
ret
lods
mov
repz
xchg
dec
adc
push
mov
mov
cli
inc
pop
test
ljmp
lret
and
aam
xchg
jae
mov
mov
xor
int
add
sbb
inc
iret
sbb
repnz
je
mov
pop
test
push
sub
movsb
lret
insl
loopne
vshufps
sarl
mov
and
mov
jle
jb
push
test
in
daa
decl
arpl
hlt
jb
aaa
jnp
rcl
jp
mov
adc
movl
fcmovnbe
pop
mov
dec
push
inc
pushf
mov
lahf
int
lods
orl
addl
sbb
xchg
repnz
std
je
cld
shlb
ret
jo
mov
mov
lahf
sbb
jg
pop
movsl
js
and
cmc
inc
mov
test
scas
cmp
ds
lret
lret
sub
xchg
int3
push
mov
sbb
lock
loopne
loop
loope
mov
ja
push
scas
arpl
in
or
mov
push
and
mov
adc
pop
lods
adc
bound
xorb
in
test
sti
in
aas
cld
jb
pop
mov
mov
sub
out
adcb
decl
jmp
pusha
lea
adc
xchg
aam
cmp
xchg
cld
loope
ret
rorl
jle
add
fdiv
lods
cmp
sub
lods
jbe
stos
popf
ljmp
dec
add
push
or
shlb
rcr
mov
jbe
out
mov
jae
xor
rolb
sbb
push
out
add
xchg
and
lea
xchg
scas
inc
cli
outsb
pop
in
or
int
outsb
hlt
lock
mov
mov
mov
pop
push
adc
daa
out
cmp
data16
pop
fs
sbb
or
hlt
sub
in
sub
and
xchg
push
push
lods
orb
in
adc
pop
cmp
sub
mov
fists
in
rclb
cmp
mov
lret
xchg
ss
sub
sbb
sbb
movsl
adc
xor
cmp
ss
xchg
cli
or
incl
add
xchg
xchg
cltd
clc
xchg
and
mov
add
imul
sbb
test
jmp
movsl
iret
iret
shll
cmp
stc
pop
dec
call
xchg
insb
outsb
jno
push
ret
sbbb
loope
lock
adc
fs
push
lea
popa
into
lcall
mov
enter
jle
dec
and
mov
xchg
jge
insb
xchg
stos
loopne
shll
cld
arpl
js
hlt
or
in
and
js
data16
fiadds
add
sub
cmc
lods
xchg
inc
and
js
mov
loop
sbb
cltd
inc
outsl
stos
adc
xor
leave
xor
in
xchg
ret
jno
ret
pop
pop
push
pusha
or
data16
mov
add
push
cmpl
sub
mov
dec
mov
fisubs
or
adc
push
cld
xlat
jle
clc
cmp
imul
xor
lret
pop
mov
sbbl
out
mov
push
xchg
add
mov
mov
faddl
stc
test
repnz
data16
adc
and
pop
lret
adc
inc
sahf
push
fidivrl
jne
ss
or
jmp
adc
mov
push
nop
imul
rolb
inc
aam
push
inc
repnz
push
jg
cmpsb
fcomi
mov
popa
dec
out
aad
in
pop
push
mov
push
mov
mov
arpl
sub
mov
emms
loope
xchg
jmp
dec
mov
mov
pop
dec
jns
aad
add
cli
andl
sbb
nop
out
sbb
fbld
lcall
and
mov
aaa
cmc
rcll
adc
xchg
pop
xor
mov
push
inc
adc
adc
xor
test
rorb
imul
movsb
imul
lret
cmc
jbe
fwait
insl
jne
shl
rorb
insl
int
inc
push
ds
std
xor
lret
dec
out
or
clc
les
cli
lretw
mov
ret
push
mov
or
ljmp
sub
adc
jo
jns
jmp
into
mov
bound
ret
push
test
add
sahf
mov
pop
sbb
add
inc
jb
mov
cmp
mov
and
lds
and
cli
lret
out
cld
add
inc
in
fstps
inc
mov
cmp
rorl
mov
fwait
and
adc
stc
pop
and
pop
dec
or
xchg
add
mov
inc
inc
adc
pop
add
jmp
add
fidivs
popf
xchg
jge
movsb
adc
sub
aaa
jl
pop
sbb
cwtl
xchg
test
push
push
cmc
xor
ret
dec
cmpsl
iret
sti
sahf
adc
test
mov
call
shrb
or
add
sbb
repz
cmp
sub
sbb
push
sbb
cmp
ljmp
lcall
sub
clc
test
mulb
sbb
icebp
cmp
jne
add
or
movsb
sahf
adc
or
es
xchg
jbe
lret
jnp
xlat
hlt
std
push
xor
sub
in
xchg
push
mov
mov
xchg
pop
stc
lret
or
push
mov
adcl
lahf
adc
mov
loopne
ret
push
stc
movsl
aam
clc
call
cmp
cmp
inc
sahf
adc
into
pop
push
shrb
adcb
idivl
rcr
repnz
mov
hlt
add
call
push
inc
loope
hlt
shrl
xchg
pop
pop
jle
out
popa
repz
int
leave
sbb
adc
or
rcll
int3
sbb
jne
inc
rcrb
mov
sub
lahf
push
lahf
rcl
add
xchg
cmp
pop
clc
repnz
pop
mov
fs
jae
cmpsb
lret
test
sti
sbb
push
cwtl
out
jns
and
xor
cwtl
pop
stos
mov
jl
jae
push
inc
add
pop
xchg
ja
sub
jno
add
test
popa
jl
fmuls
mov
stos
mov
pop
sub
cmp
movsb
jns
cs
mov
adc
cltd
aas
jle
dec
imul
js
ljmp
sahf
adc
movsl
or
xchg
sub
lcall
pop
xlat
lret
xchg
jecxz
cwtl
add
fisttpll
mov
or
iret
sub
icebp
sbb
rcll
mov
mov
cld
and
jne
add
mov
leave
mov
ja
add
insl
inc
and
outsb
lds
xor
inc
ds
addr16
shlb
and
loopne
repz
cwtl
ja
rcrb
bnd
and
adc
mov
hlt
shlb
fcoms
ja
fwait
je
and
sti
cmp
aas
loopne
sub
addb
xchg
pop
pop
and
fsubr
mov
sub
xor
call
adc
jg
cwtl
fldt
cld
repz
test
je
and
shlb
adc
js
mov
mov
sbb
sahf
add
push
mov
fldenv
push
test
sahf
repnz
jmp
sbb
pop
jno
mov
push
push
fidivl
or
cwtl
rorb
add
dec
cs
adc
xlat
jg
lret
in
pop
mov
adc
scas
divb
jmp
push
push
or
pop
leave
call
movsl
pusha
mov
mov
jl
outsb
push
lcall
icebp
cld
orb
mov
fdivr
mov
jo
or
incb
jae
loopne
int
mov
cli
cmp
nop
sub
iret
cmc
popf
mov
push
dec
adc
pop
out
and
and
out
mov
pop
movsl
pop
add
in
jnp
test
xchg
test
pop
repnz
xchg
sbb
outsb
arpl
repz
mov
jmp
aas
push
lods
flds
jle
lds
ljmp
call
pushf
fmull
xor
decb
push
cs
sahf
fistl
sti
js
inc
mov
imul
or
lahf
andl
movsl
add
int
push
xchg
nop
inc
xchg
sub
push
add
inc
sbb
adc
in
insl
inc
dec
push
ficoms
in
cmc
repz
aam
subl
cli
jmp
cmp
cwtl
jmp
rorl
imul
jno
pop
mov
lahf
mov
jo
enter
clc
add
lcall
sbb
pop
jg
leave
dec
add
dec
push
nop
imul
ja
iret
mov
int3
leave
adc
cmp
pushf
jp
cmp
pop
mov
add
adc
cmp
addr16
mov
dec
and
gs
mov
pop
fnstsw
and
add
mov
and
sbb
out
mov
adc
test
mov
push
mov
mov
insb
hlt
andl
lds
fstl
sbb
arpl
flds
lcall
imul
out
jmp
loop
add
cmc
add
sub
out
test
daa
mov
cltd
or
es
push
push
jecxz
fmull
cli
and
xchg
cmpsb
ret
sbb
fwait
pop
xchg
mov
fwait
out
sub
xchg
sbb
jecxz
pop
lea
mov
jmp
pop
xlat
mov
push
scas
dec
int
and
icebp
gs
imul
icebp
icebp
and
mov
adc
loopne
sub
xor
repnz
sub
lea
mov
xlat
jle
adc
int
or
jo
inc
or
leave
and
jg
mov
sbb
lds
insl
or
insl
xlat
dec
sub
mov
adc
iret
or
jmp
push
int
mov
pop
mov
add
pop
inc
xchg
push
jno
or
mov
nop
out
adc
mov
mov
sub
movsb
and
jecxz
push
dec
or
adc
popa
aad
inc
adc
xchg
push
dec
lret
add
dec
or
movl
fdivr
sub
sbb
push
loope
adc
fbld
sbb
fs
add
lods
test
aam
out
cmp
mov
hlt
sbb
push
int3
testb
insl
clc
in
adc
test
xchg
add
mov
mov
jbe,pn
adc
je
enter
roll
mov
mov
xchg
shlb
jae
inc
and
lcall
and
lret
xchg
dec
clc
dec
add
adc
arpl
adc
mov
insb
cwtl
mov
insl
sub
stc
call
lods
push
and
xchg
adc
adc
data16
pop
xchg
inc
int
ljmp
ret
mov
xor
mov
and
bound
fsubrp
pusha
cltd
in
stos
stos
dec
das
js
adc
int3
push
out
mov
jae
cmpsl
ret
cmc
lret
icebp
cli
sahf
ljmp
loopne
gs
add
jl
push
xchg
test
xor
lret
or
pop
loopne
popa
ficoms
push
in
ret
fsubrs
xchg
cmpsb
adc
fstpl
ja
out
sbb
or
fs
cmc
ds
jnp
gs
int
hlt
xorl
adc
data16
sub
push
movl
mov
jae
sbb
cmp
loop
mov
jae
iret
cmp
lock
add
mov
inc
inc
test
and
lods
repz
notl
pmaxub
clc
xlat
xlat
stos
cmovnp
in
xchg
xchg
mov
push
inc
inc
popf
lods
xchg
out
dec
repz
scas
jae
leave
cmp
xchg
pop
repz
and
xlat
push
push
les
stos
loope
imul
sar
bound
mov
shll
sbb
pop
push
clc
mov
inc
jnp
test
jp
rorl
adc
sbb
call
lea
and
mov
xor
cmp
or
pop
ficoms
clc
test
mov
loope
cmp
rorl
pop
jae
fsincos
mov
or
sahf
stos
mov
roll
into
sbb
mov
xor
das
dec
loope
xor
imul
loopne
imul
and
mov
jno
bound
nop
dec
sti
push
fldl
insb
pop
testl
dec
out
add
pop
mov
js
jg
jae
ss
pusha
xchg
cs
sub
push
sbb
and
es
out
clc
push
pop
mov
es
cmp
rcl
add
cwtl
push
sbb
stos
jl
add
in
push
aad
adc
jno
das
mov
psllq
and
jns
clc
push
ja
cmp
jmp
mov
pop
pushf
andb
movsl
add
or
cmp
add
and
cld
mov
mov
in
add
jl
pop
xchg
mov
mov
jb
loop
les
xchg
push
mov
pop
popa
jecxz
jo
in
gs
or
pusha
test
js
push
cmpsb
mov
cmp
sbb
aas
dec
jae
and
jbe
mov
lds
sub
out
dec
mov
add
mov
jge
jl,pt
add
mov
inc
rclb
fisubl
dec
repnz
ljmp
jo
and
push
call
imul
lret
dec
push
pop
jnp
dec
movsb
inc
in
lods
cmp
adc
sbb
sbb
fldl
arpl
inc
xchg
sarl
mov
cmpsl
scas
pop
mov
pop
inc
jno
repz
ja
pop
js
jge
mov
ret
pop
cs
push
test
pop
imul
pop
push
sub
mov
or
daa
rclb
dec
jb
cmp
ds
jnp
mov
cltd
ret
and
xor
pop
jns
jg
and
aas
xor
insl
sub
xchg
loope
in
sbb
mov
out
mov
inc
dec
inc
mov
dec
scas
es
insb
repnz
lds
es
and
popa
jbe
mov
test
mov
dec
ja
inc
push
or
shll
inc
mov
jmp
lea
xchg
in
hlt
mov
adc
xchg
inc
shlb
sub
pop
enter
push
xchg
rclb
sub
mov
mov
sub
adc
or
add
pop
pop
xchg
cmpsl
fisubrl
test
or
mov
push
sbb
xchg
mov
fadds
insb
inc
data16
lds
lahf
movsl
sub
sbb
lods
imul
jg
and
inc
xlat
loopne
outsb
dec
jge
loop
repnz
testl
arpl
mov
jns
mov
js
movsb
addl
inc
jns
push
dec
idivb
sarl
mov
insl
adc
addr16
sahf
mov
cwtl
cmp
pop
add
rcrb
adc
adc
sahf
out
dec
bound
lret
mov
lcall
and
inc
hlt
es
lret
test
mov
into
sub
mov
movb
jnp
call
clc
sub
mov
inc
dec
mov
les
jno
call
in
mov
inc
xlat
les
pop
ret
push
and
nop
out
ja
movsb
enter
testb
push
mov
or
loope
mov
mov
popa
lret
pushf
stc
adc
fwait
out
out
ljmp
fstps
aaa
arpl
sub
rcll
test
mov
mov
cmpsb
rclb
dec
popa
fistpl
xchg
push
std
inc
pushf
push
out
adc
xor
fsubrl
xchg
mov
loop
in
stc
lahf
mov
push
xchg
adc
sarb
add
shlb
scas
sti
cwtl
sub
call
pdep
mov
xchg
cld
std
adc
and
test
leave
and
les
sarb
insl
push
dec
and
and
push
rcll
mov
fildl
push
test
hlt
push
jg
fidivs
sti
jo
jo
inc
lods
pop
push
pop
pop
xchg
pop
into
fcoml
push
mov
adc
lea
xor
jmp
pop
orl
mov
adc
and
ljmp
out
pop
mov
bnd
jno
stos
push
mov
xchg
in
cmc
pop
pop
jle
inc
ss
not
push
jmp
stos
add
shll
fmul
mov
mov
shl
fiaddl
or
adc
inc
xchg
test
clc
cld
inc
and
into
mov
jge
fcoms
test
xor
push
xorl
pop
leave
in
and
shl
mov
mov
cmp
adc
daa
sahf
push
aas
mov
lea
mov
dec
mov
push
jg
dec
aas
pop
outsl
push
push
cwtl
pop
mov
in
sub
cmp
add
mov
jecxz
xlat
mov
fisubs
jae
int3
cmc
mov
xchg
mov
cmp
imul
popa
into
fcomi
dec
stos
jmp
adc
jle
mov
ficoms
test
dec
add
push
jo
mov
push
inc
sarl
ss
in
adc
stos
insl
sub
fnsave
push
and
cmp
push
dec
sub
out
xchg
insb
xlat
sbb
nop
xchg
subb
loop
scas
fidivl
cmc
scas
adc
gs
arpl
hlt
pop
push
inc
das
add
shl
icebp
pop
or
arpl
arpl
sahf
xchg
imul
stc
leave
jg
loope
xchg
fnstsw
mov
stos
add
jb,pn
shll
ss
or
jae
fstl
inc
mov
insl
pop
push
nop
lea
cmpsl
in
pop
add
xorl
fs
adc
cmp
xchg
jmp
test
jno
push
dec
cmpl
mov
mov
add
rorb
dec
push
sbb
push
into
mov
mov
add
xchg
push
cmp
in
mov
daa
std
jge
fwait
test
xor
lahf
fadd
sub
movsb
pusha
ja
xor
ja
das
es
mov
loopne
xor
addr16
ds
dec
imul
test
popf
fxch
stos
pop
stos
cmc
or
fsub
fs
dec
scas
dec
movsl
or
imul
xor
adc
pop
ss
jl
pop
dec
adc
lea
xchg
mov
lods
and
mov
push
or
mov
mov
adc
sbb
mov
jp
jl
in
and
sarl
sub
or
insb
mov
jae
push
adc
push
outsb
inc
jmp
sub
inc
mov
push
rcrl
inc
cmp
mov
inc
jo
sarl
hlt
adc
mov
push
cmc
add
icebp
in
out
shll
add
mov
sbb
out
in
repz
and
stos
push
shll
pop
sub
jge
cmpsb
add
xor
nop
and
into
or
sbb
xchg
mov
shr
pop
test
mov
jno
cvtps2pd
sbb
push
jb
jl
mov
pop
push
and
xor
sub
scas
lds
sbb
popa
or
call
and
xor
jae
jmp
cwtl
cmp
and
int3
mov
xchg
jae
jge
sub
lahf
or
adc
cmp
cmp
es
jne
out
or
push
inc
into
shll
or
std
mov
cmpsb
test
mov
cmpsb
inc
mov
mov
mov
jbe
les
js
jge
add
popf
pop
dec
sahf
adc
mov
mov
ffreep
leave
sarl
push
out
lcall
cld
or
xchg
mov
jecxz
or
fstl
scas
pop
jecxz
lahf
mov
dec
add
repz
fcomps
ja
arpl
out
fwait
insb
insb
shrl
dec
icebp
insb
iret
pop
pop
or
pusha
inc
push
fisttpl
cmp
sbbl
or
add
xchg
iret
stos
mov
scas
arpl
cmpsl
call
and
jmp
out
adc
adc
and
jge
xorl
xchg
rorl
or
xchg
adc
push
test
nop
mov
inc
xchg
insb
or
sti
insl
je
dec
mov
and
in
cld
pop
mov
pop
dec
mov
dec
push
adc
lret
lock
ret
sbb
xor
add
sub
mov
dec
pop
mov
or
dec
sub
rorl
push
pop
xchg
sub
mov
in
aas
and
add
add
in
daa
call
jo
std
add
testb
adc
cmp
sbbl
xor
xor
dec
xchg
pop
jp
mov
sub
or
dec
js
mov
das
sbb
loop
cwtl
push
jg
add
lret
fisubrl
sti
lret
mov
add
push
sbb
add
imul
andb
dec
les
aam
insb
not
push
and
aam
lret
stos
sbb
loope
push
icebp
xchg
test
mov
not
orl
movlps
insb
cmp
pop
dec
cmpsb
into
cmp
push
jg
cltd
loopne
mov
xor
sti
jno
pusha
jg
cmpsb
jae
rclb
cld
mov
shlb
add
jb
addl
divb
jae
test
popa
aam
xor
notl
sbb
xor
or
xor
jnp
adc
setge
in
xor
dec
push
inc
mov
lea
xchg
cld
mov
mov
pop
scas
xorb
arpl
lds
outsl
push
and
mov
sahf
pop
test
outsl
mov
add
push
pop
popaw
sub
ret
in
dec
scas
mov
shr
inc
out
movsb
pop
xchg
jbe
jle
fincstp
les
cmp
daa
mov
cmc
sbb
int
mov
out
stos
cmp
dec
scas
xor
xchg
xor
pop
enter
inc
in
mov
adc
and
mov
cs
jno
add
mov
cli
xchg
cmp
sbb
cltd
iret
test
enter
inc
push
inc
mov
shrl
addr16
or
push
icebp
mov
in
or
inc
adc
mov
mov
mov
add
repz
jb
jmp
insb
je
fcomp
cmc
mov
jmp
sbb
stc
shl
std
mov
sub
xlat
pop
inc
pop
ss
or
ja
lahf
fwait
popl
dec
cmp
into
or
pop
or
pop
xlat
push
push
mov
psubusb
icebp
cmp
push
pop
dec
mov
stos
movsl
xchg
sbb
or
gs
orl
shlb
adc
cmp
xchg
hlt
popf
mov
hlt
xchg
mov
xor
dec
push
lds
test
dec
daa
repnz
imul
loop
and
int3
clc
pop
mov
test
xchg
pop
cld
sbbb
test
jle
ret
jl
lds
mov
adc
or
jp
sub
lret
jno
stc
inc
xor
clc
lcall
pop
fsub
shlb
mov
jmp
hlt
xchg
imul
cwtl
fisubrs
lret
sbb
mov
cs
inc
adc
test
ja
dec
push
mov
inc
dec
xchg
and
nop
inc
enter
dec
adc
in
out
or
into
add
test
pop
add
sahf
push
inc
jl
popa
je
idiv
cmp
dec
lret
sahf
loop
mov
mov
push
mov
cmc
pop
dec
cmpsl
xchg
xor
xchg
cmp
add
push
negl
test
fdivrs
imul
adc
lret
fcmovnb
aad
stos
or
sub
mov
sub
xor
out
jecxz
cmp
jne
push
in
sub
jns
movsl
ds
cmp
and
call
orb
add
out
lcall
lds
cmpsl
pusha
cmp
xchg
xchg
sub
roll
push
add
push
iret
sti
or
sub
pop
cs
pusha
and
xor
sbbl
xor
add
outsb
xchg
inc
pop
jae
xchg
cmp
jg
sub
sbb
popa
cltd
adc
daa
je
lahf
adc
shl
inc
mov
or
xchg
dec
hlt
nop
rcrb
adc
fmuls
pop
loope
je
into
cmp
mov
aad
xchg
adc
push
into
and
insb
lret
pop
hlt
pop
or
add
lcall
test
aam
xchg
adc
js
inc
shl
sahf
loope
das
jo
push
or
xchg
std
xchg
xchg
add
cmp
int3
out
lea
sub
pop
add
pop
loop
push
or
je
mov
cmp
mov
jns
out
ficompl
xchg
pop
bound
cmpsb
lret
out
sbb
enter
mov
push
jle
fmul
dec
jo
xor
add
mov
adc
jne
xor
mov
cmpsl
pop
roll
outsl
pop
int3
mov
xchg
repz
dec
xlat
push
cli
dec
push
in
lret
cmpb
in
es
inc
filds
inc
loop
insb
ret
dec
inc
pop
js
mov
push
sub
sub
mov
dec
aad
test
jnp
out
aaa
paddsb
out
cmp
sub
and
call
xchg
xlat
xchg
nop
mov
push
aad
ja
mov
cmp
out
rep
and
xlat
adc
lea
ficoms
mov
lcall
incb
ljmp
xchg
out
loope
pop
dec
push
fsubrl
subb
bound
and
subb
das
mov
rcll
subl
mov
xor
xlat
jnp
incl
stos
sub
jae
sbb
jns
pop
jmp
adc
pop
xlat
cld
pusha
xchg
pop
movl
insl
in
ret
sub
sub
stos
adc
mov
jbe
lret
divl
ljmp
repnz
adc
data16
mov
aas
stc
inc
jmp
cmp
jecxz
mov
sbb
rorl
or
jnp
mov
lea
sbb
fwait
adc
aam
call
ja
dec
inc
xchg
enter
cmpl
pop
je
pop
sub
or
add
ljmp
in
dec
fisttps
in
insl
sbbb
jns
imul
rcrb
fldl
popa
std
push
faddl
adc
inc
push
sub
dec
xchg
mov
gs
mov
add
pop
cmp
pop
cld
inc
test
mov
imul
in
mov
xchg
cltd
adc
xchg
notb
xor
jnp
out
mov
pop
push
add
inc
sahf
push
shr
cmpsb
stos
add
sbb
cmp
mov
test
add
mov
arpl
or
dec
jle
ror
jbe
adc
rol
in
cmp
or
sbb
cmc
and
inc
dec
rcll
aad
movsl
add
mov
cld
and
pop
scas
ret
sub
xchg
sbb
add
fisubrl
les
pop
xchg
pop
cmpsb
jmp
mov
fs
fmuls
clc
ret
jb
mov
sbb
sahf
stos
cltd
jp
dec
sub
push
insl
dec
hlt
pminub
dec
or
and
xor
addr16
jo
pop
pop
dec
jnp
popl
push
and
lock
pop
inc
divb
pop
daa
cmpsb
cwtl
lds
stos
push
sub
dec
mov
adc
dec
mov
jecxz
mov
fidivs
test
cmp
mov
rorb
lea
cmc
mov
fisttps
loop
outsl
fdivl
jns
jbe
or
sbb
lock
aas
les
cli
scas
repz
jne
pusha
push
shll
lret
xchg
jp
pop
sbb
call
sbb
into
sbb
inc
dec
mov
addr16
in
fs
repnz
adc
lahf
stc
loope
and
out
not
or
mov
xchg
ficompl
push
jl
add
testb
inc
mov
push
lcall
xor
lahf
jb
xchg
loop
mov
jae
mov
xchg
addr16
cmpb
js
inc
inc
and
sarb
das
and
lret
add
xchg
xchg
dec
or
pop
mov
push
dec
pop
les
das
popa
pop
enter
cltd
cmp
xchg
push
xchg
pop
imulb
call
mov
filds
les
pop
dec
je
fs
loop
sub
fldt
mov
inc
test
ss
outsb
add
ds
add
add
clc
cmpl
cmp
push
int
dec
jg
hlt
cwtl
les
ret
mov
popa
das
xor
xor
stos
or
dec
ja
jb
and
mov
push
into
push
iret
enter
xor
push
add
sti
sub
test
pop
rcrl
cmc
xor
push
cwtl
or
cmpsb
xor
add
mov
addr16
push
xchg
movsb
sub
add
fwait
stos
jecxz
les
pop
ja
mov
pop
mov
and
lods
mov
dec
gs
adc
mov
jbe
lcall
arpl
bnd
bound
cmpsl
cmpl
jecxz
mov
and
cmp
inc
xor
sub
mulb
mov
shlb
inc
int
mov
or
sbb
shlb
shl
test
test
cmpsb
mov
outsl
ret
pop
movsl
dec
imul
out
cmpsl
or
jecxz
dec
loope
mov
lea
shr
bound
mov
addb
sbb
mov
in
dec
jle
jl
jns
imulb
pusha
std
sahf
mov
addr16
pop
push
inc
dec
ja
mov
and
xchg
pop
pop
jmp
negl
mov
mov
push
jns
adc
jb
jbe
cmp
lds
shrb
jge
pushf
call
gs
out
pop
ss
in
and
inc
jmp
cmp
adc
icebp
push
lahf
sbb
jl
lret
xchg
orl
jle
dec
adc
cmp
sahf
xchg
add
inc
mov
xor
xchg
pop
mov
mov
aad
idivb
cld
mov
push
pop
cmc
xchg
push
shll
sbb
enter
lods
push
add
lock
cli
or
movsl
sbb
cmpsb
jmp
movsl
mov
push
pop
mov
das
adcl
inc
test
and
mov
dec
lcall
push
push
cmp
mov
hlt
inc
hlt
je
std
inc
ret
fisttps
jbe
xchg
cltd
xchg
cmc
jl
call
cmp
add
call
xchg
loope
std
inc
lea
mov
inc
sahf
lea
xor
cld
mov
inc
subl
xlat
and
add
pusha
fdivl
pop
movsl
jle
push
mov
bound
jecxz
jmp
imul
fsubrs
stc
xchg
and
shr
inc
out
jb
fdivs
mov
xchg
push
jbe
cmp
movsl
mov
incl
add
pushf
sahf
aad
bound
pop
mov
outsb
add
cmp
lods
rcl
sahf
cmp
fistps
out
mov
xor
mov
aas
loopne
test
push
xchg
outsb
in
and
mov
sbb
push
xor
push
mov
outsb
and
pop
xor
add
ja
movsl
sub
xchg
cmpsb
mov
sbb
std
movsl
push
fistpll
adc
mov
add
mov
outsb
les
mov
mov
mov
rolb
loop
aaa
inc
lock
lret
pop
sbb
scas
mov
jne
jo
insl
dec
cmp
scas
xchg
jb
jne
xor
mov
or
and
push
mull
mov
inc
das
push
adc
lock
popw
repnz
es
dec
cltd
and
dec
add
dec
add
lods
xorb
pushf
cmpsl
shll
fnstcw
add
cmp
jmp
fs
xor
jle
rolb
mov
repnz
cmp
shlb
cmp
inc
jmp
pop
dec
fsubrs
cld
es
in
popf
mov
dec
inc
test
pop
fmuls
pop
sub
enter
pop
or
jbe
or
loope
dec
jns
popf
fbstp
cmpb
fisttpll
push
enter
mov
xor
pushf
stos
sbb
xchg
jge
pop
xor
sub
pusha
push
jno
daa
lds
sub
cmp
pop
repnz
mov
and
cmp
stos
add
xor
mov
and
pop
testl
jbe
cltd
push
mov
adc
invd
movsb
rorb
add
int3
pop
dec
and
cmpsl
sahf
sub
popf
and
outsl
pop
and
push
fdivrs
ret
push
fucom
insb
popa
in
jns
mov
cmp
dec
jmp
pushf
daa
lret
call
clc
inc
adc
adc
nop
inc
int3
mov
jg
mov
mov
lods
mov
fwait
inc
fs
mov
cmp
ljmp
mov
lods
negb
add
pusha
mov
pop
ret
adc
pop
pop
push
jp
lods
dec
mov
jle
insb
mov
inc
sub
jle
stos
adc
mov
mov
adc
js
xchg
call
mov
mov
jle
xor
xlat
popa
xchg
jmp
pop
pusha
lods
ficompl
lcall
inc
dec
push
and
sbb
mov
lock
pop
sbb
insb
inc
cltd
pop
lret
in
dec
jle
movsb
jl
add
jmp
push
jmp
lods
xchg
and
bound
adc
mov
jecxz
sbbl
xchg
add
out
pop
xchg
xor
pop
jp
mov
popa
fidivrs
ficoml
insl
sub
testl
mov
xor
dec
cltd
sbb
rcr
mov
icebp
push
pop
clc
pop
xchg
push
sub
sbb
push
fidivrl
and
sub
gs
sub
lods
xchg
filds
mov
adc
jmp
mov
jnp
sub
pushf
sub
fcmovnu
jne
mov
push
imull
movsl
imul
xchg
inc
daa
and
xor
lahf
push
inc
iret
xor
or
mov
popa
xchg
lahf
arpl
out
xchg
push
mov
mov
mov
jle
mov
jno
daa
pop
sbb
stc
jbe
xor
mov
test
enter
jecxz
movsb
add
stc
cmp
dec
in
sbb
pop
cmp
iret
add
pop
out
mov
pushf
js
xchg
and
pop
sbb
xchg
push
push
test
ja
icebp
jno
shr
mov
je
cmpsb
loopne
mov
push
jecxz
xchg
dec
sbb
imul
test
shl
imull
pop
adc
push
gs
push
inc
pop
scas
cmp
xor
push
inc
lret
push
orl
and
enter
cmp
sbb
or
mov
sti
mov
mov
subl
sbb
je
data16
call
xor
xor
test
mov
xchg
mov
sbb
jle
push
ror
outsl
mov
pop
or
pop
xchg
stc
jns
call
sub
mov
aam
ret
jecxz
lock
push
inc
dec
jne
fiaddl
inc
in
jp
adc
cwtl
and
mov
lea
push
push
mov
mov
mov
mov
pop
push
ss
shll
es
fldt
adc
scas
xorb
in
jmp
icebp
xchg
inc
cltd
cmp
lcall
pop
daa
call
mov
cwtl
xor
in
jno
jo
std
inc
xor
adc
stos
lcall
jb
out
sub
dec
test
fbstp
outsl
call
andps
aam
cmpb
stos
call
and
dec
fmull
stos
lock
add
mov
fcomps
xchg
jne
xchg
imul
addr16
insl
lock
stos
data16
repnz
sbb
std
lea
xor
mov
arpl
ja
pop
push
pop
sahf
inc
sub
xor
nopl
xor
xchg
push
pop
jecxz
lods
jns
jae
sar
mov
xor
ja
or
xchg
test
orl
cs
arpl
ljmp
dec
push
cmpsb
dec
test
jp
cmpsb
sbbl
push
mov
and
xchg
bound
cmp
test
mov
adc
subl
test
jle
cltd
dec
out
fildl
or
in
cld
push
loopne
out
sbb
sub
push
and
cmc
neg
pop
jecxz
filds
lcall
pop
shll
enter
pop
loop
dec
jb
or
addr16
std
lods
mov
adc
mov
or
mov
js
ss
jne
pop
jle
pop
imul
popa
notl
and
rclb
rorb
push
cmp
popf
pop
xlat
sbb
and
stc
adc
js
lret
test
xchg
adc
xchg
jl
bound
pushf
dec
mov
mov
stc
mov
mov
add
dec
std
fstpt
test
cmp
cmp
sbb
nop
inc
and
xchg
or
int3
adc
mov
iret
loop
add
inc
sbb
pop
enter
inc
inc
and
xor
cld
mov
mov
pop
pushw
add
in
xchg
and
mov
jg
pop
fstpl
inc
inc
loop
into
movsb
jnp
push
sbb
fcomps
jno
mov
fidivs
adc
sti
ffreep
adc
sti
adc
ja
aas
mov
pushf
in
out
lcall
incl
push
imul
push
test
lret
mov
mov
mov
add
repz
loop
hlt
jp
jb
test
fbld
lock
fwait
insl
int3
pop
adc
adc
and
adcl
ss
jo
adc
mov
xchg
xchg
aam
inc
pop
in
movsb
ds
jne
mov
inc
push
xchg
nop
and
push
mov
int3
jmp
inc
es
movsl
and
jae
mov
ret
push
or
ret
dec
sub
pop
sar
pop
fisubrs
mov
int
das
sarl
std
add
aas
mov
inc
stc
fmuls
ss
dec
hlt
jb
push
and
pop
arpl
fmull
mull
xchg
aaa
xlat
adc
int
rolb
xor
jns
in
bound
mov
insl
mov
xchg
subb
pop
sub
jno
sub
cs
jge
push
cli
mov
insb
out
jno
inc
hlt
negl
insl
test
xor
push
out
stos
mov
mov
jne
adcb
ror
idivb
scas
xchg
stos
in
xor
lcall
shrb
lcall
ret
shll
push
shrl
stos
push
dec
out
mov
fdivr
sbb
aas
or
jmp
dec
ja
or
mov
icebp
bnd
cmp
and
mov
fwait
loope
inc
aad
ficomps
cwtl
pop
jne
cmp
jae
lock
stos
and
sbb
outsb
test
xor
in
mov
inc
xchg
jecxz
sub
xchg
dec
sahf
mov
jle
pop
mov
dec
mov
cld
cwtl
inc
inc
xor
and
xor
movsl
push
test
mov
cmpsl
insb
les
add
arpl
cli
in
out
adc
outsb
push
inc
test
cmc
sbb
out
push
inc
icebp
int
enter
dec
jno
jg
and
mov
sub
xchg
mov
fwait
cmpsb
xchg
sbb
dec
push
sub
jmp
popa
cmp
leave
xor
jl
sub
test
push
dec
popa
aas
xchg
mov
dec
out
xor
iret
in
leave
mov
adc
jp
jne
push
cli
movsb
outsl
pop
adc
push
in
adc
std
lret
jge
sub
fldt
cwtl
sar
ds
jecxz
stos
daa
fimuls
insl
aas
jne
mov
mov
scas
ss
insl
aam
into
xor
pop
inc
xor
or
hlt
arpl
jne
push
and
mov
imul
insl
mov
das
dec
jo
inc
sbb
add
adcb
ret
arpl
adc
test
xchg
mov
lahf
sbb
dec
or
imull
mov
nop
mov
pop
sub
subb
lret
jne
xor
test
ret
xchg
xor
cmp
dec
hlt
lahf
jmp
inc
test
mov
jl
inc
jae
add
mov
fisttpl
shl
lods
sub
shl
adc
add
sub
mov
xchg
jg
fimuls
adc
jae
aaa
enter
dec
sub
iret
adc
mov
mov
adc
pop
nop
push
jo
mov
cld
xchg
adc
in
xchg
and
jno
push
stc
xchg
pop
inc
push
in
xor
mov
inc
dec
cmp
pop
loopne
or
pop
cmp
lods
pop
mov
scas
jne
in
xorb
pushf
addr16
popa
stos
inc
or
movsb
dec
jg
loope
out
mov
pop
adc
addr16
push
mov
aam
cmp
fwait
or
test
dec
aaa
rolb
mov
push
imul
fstpl
rclb
cmp
cltd
imul
cmp
xchg
sarl
pop
jae
dec
mov
aad
jbe
ljmp
and
in
add
xchg
cltd
sub
clc
jns
or
hlt
int3
xchg
in
fistpl
mov
inc
push
cmp
or
jae
push
add
push
sahf
out
inc
mov
lahf
shlb
stos
inc
out
sbb
or
cmp
scas
push
mov
and
aad
push
int3
mov
mov
jecxz
add
gs
cmpsb
jmp
out
push
aas
mov
call
scas
pop
insl
loope
dec
mov
pop
jb
add
sub
outsl
xor
incb
add
xchg
jg
data16
cmc
push
mov
cltd
add
test
int
sahf
push
rclb
or
cmc
xchg
cmp
stos
lcall
mov
loope
push
fisttps
fs
ds
outsb
dec
adc
aas
es
aam
jns
mov
and
negl
sbb
stos
xchg
cmp
or
in
push
and
push
mov
stos
jb
mov
cmp
xchg
rcrb
pop
pop
and
xchg
sti
jno
out
dec
adc
stc
xor
das
bound
mov
sbb
xor
mov
or
fwait
shll
das
rcrl
inc
push
les
neg
add
iret
adc
shll
mov
dec
push
movsb
dec
test
jg
jle
cmc
aad
sti
pop
mov
xor
idiv
out
xor
popf
inc
dec
cmp
aaa
sti
fs
cltd
mov
push
jb
fldt
movsb
fcmovnu
mov
inc
pop
leave
insl
cmp
js
pop
mov
push
ja
sahf
dec
aas
sbbl
xorb
gs
ret
add
fmulp
adc
in
mov
xor
rcrl
pusha
jae
inc
add
in
or
das
push
aaa
mov
mov
pop
cwtl
imul
sbb
in
out
mov
xchg
test
fldcw
inc
mov
xor
adc
or
fdivs
insb
cltd
repnz
jnp
movsb
and
cwtl
sbb
adc
mov
sub
int3
cli
sbb
cmpsl
inc
es
repnz
mov
outsl
js
test
dec
stos
add
ret
xor
or
repz
pop
stos
fcompl
lods
fstpt
cmpb
mov
lret
and
or
imul
movsb
and
sbb
push
add
mov
sbb
push
pop
or
cmpb
xchg
sub
outsb
adc
inc
jae
push
in
mov
add
mov
lret
pop
adc
mov
popa
jbe
jmp
inc
mov
mov
add
push
ret
test
jae
into
pop
sahf
xor
and
cmp
pop
mov
fcomps
clc
push
stc
cmc
mov
mov
cmp
lret
or
xchg
fwait
add
into
lret
mov
sbb
ja
adc
sbb
gs
inc
cwtl
dec
mov
fldl
outsl
mov
push
cmc
iret
xor
cmpsb
and
lahf
data16
test
xchg
es
cmp
or
ds
jle
faddp
jbe
and
out
lea
ja
mov
mov
xchg
loope
adc
jp
jns
fstpt
xchg
jo
int3
cmpsl
hlt
adc
inc
xchg
fnstcw
push
out
jb
xchg
enter
xchg
push
cmp
inc
jns
dec
lcall
sarl
int3
pop
xorb
sbb
sbb
std
shlb
cmp
mov
lds
mov
sbb
sbb
xor
sti
les
arpl
clc
pop
insb
mov
sbb
fucomi
pop
pop
pop
sbb
addl
sub
out
mov
fadds
jg
bound
jae
out
test
and
das
push
jl
in
push
rclb
shlb
pushf
arpl
xchg
sub
mov
arpl
add
inc
or
sbb
xor
aad
in
test
out
repz
cs
rcrl
subb
mov
jbe
imul
xor
jle
stos
sub
jmp
popf
add
adc
sub
scas
push
stc
cltd
and
mov
sub
lods
out
imul
jnp
mov
xchg
cmp
push
fstl
in
repz
jo
cli
push
adc
mov
ds
addr16
pusha
add
bound
cmp
es
push
mov
sub
out
pop
sub
xchg
mov
mov
out
adc
lahf
test
repz
sbb
setle
inc
sbbl
repz
cli
ret
sahf
mov
cmpsb
pusha
pop
pop
sbb
xchg
outsl
in
jle
ss
inc
adc
pop
dec
and
es
stc
sbb
shl
popf
or
adc
add
add
clc
jbe
mov
xchg
stc
xor
mov
in
cmp
movsb
cmp
shr
pushf
pop
inc
into
cwtl
cld
mov
shll
cmp
inc
sahf
bound
ss
mov
orb
sbb
fwait
push
jg
dec
lret
loopne
mov
rol
and
push
insl
inc
or
dec
sbb
lds
xor
push
stos
std
sub
imul
ret
aaa
pop
int3
cmpl
movsb
jecxz
std
rcrb
xor
fidivs
cmp
fldt
mov
out
add
add
ljmp
aas
sbb
inc
adc
pop
in
and
fld
xor
pop
fs
shl
call
pop
iret
xlat
dec
in
call
adc
mov
mov
lds
addr16
fisttpll
in
mov
pop
push
fdivrl
add
add
adc
push
cli
ss
out
adc
insb
out
shl
test
js
cmc
jge
inc
inc
pop
mov
rorl
ds
mov
das
sub
jmp
mov
or
test
mov
out
mov
mov
xor
adc
pushf
das
or
pop
mov
xchg
repnz
ljmp
adc
pop
in
jae
adcb
mov
push
adc
lahf
test
mov
push
in
inc
cmpsl
mov
pop
std
lods
fs
xchg
dec
pop
jae
cld
mov
repnz
adc
jmp
sahf
sbb
incl
pop
mov
mov
out
mov
jmp
pop
cmp
adc
and
pushf
mov
fdivl
nop
loop
sub
out
sub
mov
add
inc
cs
xlat
push
or
in
dec
mov
jge
jge
test
ret
outsl
sub
test
call
dec
jae
push
inc
shlb
sub
or
dec
mov
pop
fbstp
sub
call
mov
pop
fiaddl
adc
xlat
jle
add
or
loop
xor
out
dec
das
je
mov
lahf
mov
out
jecxz
jp
inc
mov
inc
lcall
mov
or
adc
xor
push
cli
insl
sbb
fstpl
sbb
in
mov
mov
cld
add
fcoml
idivb
mov
test
outsl
jg
add
push
movsl
pop
orb
mov
jo
pop
fsubr
out
cmc
sbb
pop
mov
and
fsubp
xor
and
cmp
add
pop
mov
cld
sti
mov
bound
or
dec
mov
test
xor
add
data16
shll
inc
movsl
loopne
mov
inc
mov
jmp
or
and
out
pop
mov
mov
add
inc
dec
xchg
addb
sbb
imul
push
mov
stc
out
xchg
mov
aam
push
or
inc
and
dec
into
adc
hlt
cmp
push
xor
cwtl
stos
shll
addb
imul
mov
out
cwtl
xor
in
in
cmp
inc
jl
cld
fimull
mov
pop
dec
mov
cwtl
clc
orb
add
mov
cmp
push
lcall
mov
insb
mov
pop
cmp
lock
fnstcw
cmc
dec
or
inc
mov
or
pushf
dec
jns
lds
es
and
shl
cld
jl
inc
xchg
fbld
notb
mov
fcoml
adc
xchg
movntps
pop
jb
test
mov
insl
jg
push
out
cld
aad
cwtl
mov
adc
out
pop
daa
je
push
fdivs
into
scas
cmc
adc
shll
jle
cs
scas
and
add
das
sbb
and
rorw
sbb
in
pop
or
loopne
or
dec
mov
cmp
sti
push
gs
push
add
jns
xlat
outsb
mov
xchg
jno
xchg
fs
sub
or
mov
dec
xor
and
and
lret
add
jo
and
test
cmpl
mov
inc
adc
test
dec
adc
pop
jmp
push
dec
ret
out
xchg
daa
std
xchg
xchg
xchg
inc
dec
xor
int3
int
ret
aaa
in
subl
sbb
pop
shlw
cmp
push
dec
test
pushf
jb
adc
mov
push
ljmp
icebp
mov
xor
sahf
dec
insb
pop
mov
jne
jge
ror
insb
dec
mov
and
adc
add
mov
repnz
popl
call
lock
dec
out
cmc
loope
sbb
dec
stc
and
xor
outsb
cmp
ja
testb
mov
mov
mov
inc
mov
push
push
inc
fistpll
jne
inc
push
fildll
jmp
adc
mov
and
xor
mov
sar
std
shl
jnp
arpl
sbb
pushf
jge
fsts
js
ss
xor
fstpl
out
shll
mov
es
out
movq
rclb
scas
aad
adc
ret
out
add
jg
and
add
jecxz
jae
pop
mov
adcl
loopne
scas
sub
mov
jbe
pusha
out
push
int
mov
lods
or
jle
mov
push
inc
push
sub
popf
xlat
movsb
dec
ror
xchg
jne
pop
cld
rcl
scas
sbb
movsl
into
lea
int
jne
lea
jnp
pushf
mov
fs
mov
dec
dec
hlt
or
add
mov
cmc
push
xor
iret
je
cmp
jmp
jb
sti
jbe
insb
loopw
dec
sub
push
aaa
mov
call
inc
scas
adc
mov
xor
add
xor
adc
out
loopne
es
sub
lds
add
sub
sbb
mov
jp
insl
push
leave
dec
jl
jp
or
lahf
xchg
add
lods
ret
or
push
jns
mov
fs
aam
add
pop
std
push
push
pop
push
fwait
adc
sbb
push
loopne
pop
test
jl
pop
push
add
int
jge
dec
test
loop
push
enter
xor
ror
nop
mov
fimuls
mov
lods
outsb
or
pop
adc
push
pop
into
insb
sbbl
in
out
pop
push
jns
ja
and
mov
jmp
stc
jo
lods
mov
cmp
sub
scas
inc
sbb
or
pop
loope
in
adcb
push
push
orb
repz
sub
mov
push
mov
jae
out
mov
cmpsl
pusha
add
add
ja
mov
and
stos
in
aam
jno
dec
xchg
subl
or
push
fisubl
cmp
inc
das
adc
push
adc
gs
xchg
cmp
popf
ss
or
dec
nop
icebp
enter
leave
bound
push
insl
sahf
mov
sub
arpl
pop
push
cmc
out
lahf
push
push
fsubp
xchg
in
push
mov
iret
jne
add
js
leave
pop
dec
sbb
or
inc
sub
std
add
sub
push
pop
insb
inc
rcrb
push
xor
xor
jge
enter
ja
ds
mov
loope
mov
mov
cltd
iretw
nop
mov
mov
mov
mov
sub
pop
mov
add
fsubrp
stos
test
mov
mov
sti
gs
mov
sbb
loope
mov
out
pushf
leave
and
test
xor
out
xchg
mov
movsb
cmpsb
xchg
out
out
imul
sbb
sbbl
xchg
inc
push
adcl
mov
call
cmpsb
sub
mov
sub
popa
and
lds
add
popa
ljmp
shrl
rcl
pop
push
adc
dec
stos
or
divl
add
cmp
xchg
jle
cmp
orl
lahf
imul
enter
mov
fdivrp
or
jg
dec
cmp
xchg
jecxz
xchg
xor
mov
insb
jecxz
xchg
jo
fdivrl
or
jbe
fistl
repz
jo
mov
dec
cltd
daa
jbe
jns
data16
in
lock
mulb
push
fadds
pushl
mov
pop
push
rclb
fdivs
lods
jo
rorl
mov
jno
inc
xchg
arpl
xchg
addr16
add
sti
add
cmp
adcl
push
adc
dec
mov
outsl
cmp
adc
or
call
mov
clc
ror
xchg
pusha
push
rcrl
adc
imul
fcoms
push
mov
dec
shlb
jmp
int
cmpsl
sub
leave
or
or
mov
scas
js
inc
mov
or
sub
imul
andps
push
mov
xlat
out
push
cwtl
jae
cli
dec
nop
ret
fldcw
in
adc
shlb
addl
shrb
dec
add
xor
push
inc
movsl
push
jb
mov
ret
cmc
pop
and
add
fprem1
pusha
and
mov
aam
frstpm(287
popf
and
dec
lret
cmp
xchg
int
mov
cmpb
sbb
enter
pop
out
and
and
sbb
lods
xlat
arpl
lret
add
mov
sub
inc
or
shrb
ja
push
rorl
aas
test
pop
ja
dec
mov
cmpsb
push
movsb
test
mov
cs
fucom
cmp
shrl
jns
and
in
sbb
or
lret
fisubs
and
sub
dec
aaa
sbb
cltd
push
push
xor
ss
mov
sbb
insl
lds
push
cs
cmp
scas
cmp
and
and
testl
cli
inc
push
lods
and
fisttpl
fwait
xchg
mov
pop
push
sarl
js
sbb
add
out
mov
mov
xchg
js
jg
push
stos
movl
jo
iret
pop
sub
xor
xchg
inc
mov
xchg
and
ret
and
adc
std
push
lcall
inc
in
lret
pop
insb
jle
adc
popa
mov
xchg
mov
xchg
mov
repnz
ds
pop
rclb
sahf
ss
inc
cmovb
push
inc
popa
imul
mov
xchg
enter
je
mov
xorb
jmp
mov
inc
nop
xchg
xchg
mov
and
movsb
inc
loopne
popa
mov
adc
mov
fsts
cmp
add
jecxz
push
cmc
dec
cld
mov
shlb
add
jmp
cmpsb
add
xorl
mov
lcall
mov
cmp
pop
dec
lea
jge
push
je
add
fsts
pop
cmpsl
jecxz,pn
imul
jmp
mov
xchg
cmc
mov
enter
or
sub
cs
mov
in
fistpll
cltd
ja
int3
push
push
je
rclb
sub
fs
ret
jecxz
mov
dec
dec
popa
push
outsl
rcrb
pop
roll
ss
sub
jg
pushl
mov
mov
mov
mov
repnz
pop
xor
push
jg
lret
dec
pop
dec
jo
adc
jl
xchg
pop
cmc
lahf
mov
adc
popa
outsl
test
push
jg
cltd
or
or
int
push
mov
enter
mov
decb
stos
pop
adc
adcb
insl
add
pop
jp
jnp
and
lcall
add
push
lret
xor
test
jo
and
lret
push
int
dec
cs
dec
out
in
call
xlat
movsl
stos
cld
push
int
or
push
adc
stos
mov
out
fcmovb
je
xchg
outsl
or
fnsave
fwait
pusha
fldcw
xchg
sbb
jg
ret
jge
stc
and
insl
inc
shrl
shl
push
mov
sub
mov
fwait
pop
inc
mov
sub
popa
dec
sub
mov
fdiv
push
dec
loop
dec
out
dec
je,pt
test
cli
lcall
cmc
and
fisubrl
lds
or
out
jl
test
mov
mov
mov
addb
test
xchg
cmp
pop
pop
shll
adc
cmp
lahf
inc
add
loopne
xchg
inc
imul
mov
call
pop
and
out
push
inc
lret
sahf
in
stc
int3
mov
cwtl
ja
bound
mov
inc
mov
push
das
jmp
xchg
fdivrs
lret
popf
cmp
cmc
jnp
ja
jmp
dec
mov
out
mov
jecxz
cmpsl
mov
jle
cltd
jg
and
mov
sub
sbb
cmp
fiadds
push
popa
hlt
loope
add
and
out
inc
push
push
mov
stos
or
pop
aaa
sar
inc
xor
jp
aam
adc
and
movsl
arpl
fiaddl
insb
loopne
call
das
push
imul
xor
mov
and
pop
inc
mov
xor
jb
cmp
lahf
ljmp
aaa
add
enter
sbb
aam
pop
out
xor
movsl
loope
in
sarl
mov
mov
sbb
das
scas
dec
popf
push
xchg
insb
mov
ja
in
mov
addr16
pop
dec
fs
daa
insl
and
dec
outsb
dec
addr16
cmp
mov
push
mov
mov
and
testb
xchg
add
sbb
stos
cmp
inc
push
mov
loope
rcrb
test
xchg
mov
ljmp
rcrl
sti
subl
out
mov
fstpl
cld
lcall
loop
mov
shrb
pop
imul
sbb
cltd
jns
popf
mov
lret
add
inc
adc
out
fcompl
fsubr
jb
lret
xchg
sbb
push
dec
mov
push
in
addr16
xor
hlt
adc
mov
into
dec
lahf
or
bnd
add
xor
mov
je
or
xor
xchg
test
out
push
sub
insb
bound
lods
mov
pop
sub
jp
cwtl
outsl
test
das
push
cmp
and
xchg
inc
subl
rcr
sub
cmpsl
addr16
xchg
je
push
lods
xchg
dec
arpl
nop
je
lock
sbb
insl
aam
push
pop
test
sbb
dec
push
sub
loopne
out
mov
test
adc
cmpsl
push
xlat
mov
push
add
dec
faddl
rol
int
xchg
fimuls
adc
lods
data16
fstl
or
cli
js
pusha
mov
js
xor
idivl
xor
add
stc
addr16
jb
jecxz
dec
adc
or
cs
enter
dec
fsubs
adc
cwtl
mov
cmp
je
sbb
ss
movsl
sbb
inc
adc
adc
maskmovq
negl
push
sbb
in
jno
mov
cmpl
scas
xchg
lret
push
ljmp
mov
pop
out
ret
fs
jmp
stc
inc
sti
inc
inc
sbb
mov
imul
pop
push
bound
scas
insl
call
shlb
ja
in
and
mov
cld
jp
lret
add
mov
sbb
lods
inc
xchg
mov
ficomps
jmp
in
fistl
insl
mov
sbb
test
repnz
inc
js
or
lahf
les
jbe
push
aaa
pop
fwait
jge
loop
shl
jecxz
popf
pop
movsb
push
mov
aaa
pop
mov
dec
jns
mov
scas
in
fsubr
pop
rclb
outsb
xchg
inc
push
mov
jno
or
sub
cmp
cld
jb
incb
roll
insl
mov
aaa
inc
jecxz
cwtl
lret
xchg
movsl
mov
jnp
add
dec
inc
aaa
lcall
xor
push
lds
cmpsb
test
cs
arpl
cmpsb
jp
push
out
enter
xor
je
mov
fstl
cmc
sbb
fwait
mov
push
jb
or
add
adc
fucomp
je
inc
call
inc
mov
mov
add
jns
test
aas
dec
pop
push
fsubs
jno
loop
adc
pop
cmpsl
xorb
fcoms
push
out
xchg
shrl
cmpl
xchg
dec
jle
iret
scas
maskmovq
jmp
repnz
and
fistps
sahf
and
sub
loopne
sti
mov
cld
dec
test
add
cs
adc
rcl
inc
push
jecxz
call
in
mov
sbb
mov
adc
jbe
pop
bound
sbb
movq
pop
or
gs
mov
jno
mov
lret
cwtl
xchg
mov
dec
pop
popa
adc
fs
aad
fidivrl
jnp
popf
xor
ljmp
mov
fidivrl
sbb
inc
sub
xchg
scas
cmp
cli
lods
xlat
sbb
sub
xchg
pop
jb
jo
imul
cmpsb
stos
and
pop
andb
or
in
jnp
je
mov
scas
xchg
xchg
xchg
or
addr16
scas
testb
pop
fwait
cwtl
fdivrs
mov
jp
mov
xor
leave
js
fists
dec
fs
dec
inc
cmc
dec
aam
daa
mov
cmc
sub
xlat
lcall
mov
jecxz
jae
neg
in
adc
ret
aaa
xor
arpl
lock
fisubrl
jge
xchg
into
cmpsb
in
adc
add
xor
mov
fs
xor
lock
mov
das
lret
sub
xor
dec
and
lcall
cli
test
stc
pop
mov
mov
data16
push
cs
jbe
mov
push
ja
mov
add
xchg
fs
cmc
xor
jge
jmp
inc
mov
and
js
lcall
stos
pinsrw
jae
in
sahf
lds
cmp
and
jns
js
iret
mov
aam
xor
ja
mov
or
mov
in
mov
dec
maskmovq
notl
push
dec
inc
mov
addr16
pop
hlt
cwtl
jb
sbb
jg
pop
or
adcb
inc
pop
sbb
je
dec
sub
hlt
std
imul
stc
mov
xchg
mov
add
in
pop
mov
or
adc
or
mov
ficoml
sti
test
adc
pusha
or
out
cs
movsb
add
mov
mov
rcr
mov
pop
ret
mov
les
xlat
cmc
jmp
xor
xchg
clc
out
js
push
fs
mov
clc
push
inc
outsl
cmp
ficoml
sbb
cmp
loop
add
mov
mov
xchg
cld
or
je
and
and
jnp
cmp
adc
mov
orl
das
pop
cmp
push
test
fcmovnu
lods
cmp
fisubl
mov
pusha
leave
pop
jle
or
pop
pop
jo
pop
ret
mov
inc
cli
hlt
mov
in
mov
setge
adcl
std
stos
mov
ljmp
test
insb
push
xor
sbb
stc
mov
sub
loopne
mov
loope
hlt
jge
sbb
inc
pop
pop
dec
jo,pn
mov
lret
lds
clc
mov
lds
mov
inc
je
pop
cwtl
mov
lods
mov
mov
test
lds
je
iret
push
push
clc
out
stos
pop
aam
xor
aas
add
insb
mov
outsl
les
pop
js
sub
inc
jp
or
xchg
aam
movsb
int
int
in
mov
mov
call
in
in
push
cmp
inc
test
mov
jg
cmp
out
cmp
sbb
mov
xchg
pop
jl
cmp
pop
pop
hlt
inc
dec
ret
cmc
inc
loope
jae
mov
push
add
icebp
repz
bound
scas
sahf
add
push
clc
test
and
dec
push
pop
pop
fcomip
daa
mov
inc
sarl
lds
xchg
mov
jg
or
pop
pop
pop
xchg
add
jge
test
xchg
negb
jmp
imul
arpl
sarl
cmp
push
mov
icebp
test
insl
lea
mov
popa
jo
inc
insb
ret
add
jne
inc
dec
scas
out
fs
pop
cmp
lock
adc
fildl
gs
clc
sbb
dec
stc
cmpsl
imul
xor
lahf
es
cmp
ds
mov
adc
aas
xor
insb
jecxz
clc
rcl
rorb
mov
mov
and
dec
add
jo
das
ret
push
in
push
sbb
popf
mov
scas
mov
and
adc
jne
and
test
in
sbb
xchg
imul
cwtl
xchg
daa
jne
mov
mov
push
hlt
std
push
leave
mov
fs
je
out
js
sub
cmp
roll
xor
jl
std
mov
jle
out
push
lahf
shll
jge
fs
loopne
aaa
xchg
add
movsl
mov
mov
insb
std
out
cld
add
adc
and
cmpsl
cmp
jp
test
arpl
lds
adc
pop
xorb
jp
mov
mov
pop
mov
ljmp
mov
dec
stos
or
push
xor
call
mov
and
js
cwtl
testl
or
fwait
lret
cmp
jmp
scas
add
add
and
gs
pop
fsubl
sub
lods
iret
movsl
stos
jecxz
les
out
call
stos
fistpll
fnstenv
fnsave
imul
push
imul
mov
popa
sbb
add
cmpsb
imul
and
in
add
jmp
dec
xchg
shll
out
out
dec
lret
or
jae
adc
jns
ret
sub
jle
les
nop
in
divl
ljmp
jb
sub
cmp
ja
stc
iret
fnsave
imul
into
in
subb
jg
add
xor
cli
dec
sub
das
xchg
cmc
cs
push
mov
sbb
xchg
mov
dec
and
call
fimull
mov
pminub
rcrl
arpl
or
inc
add
fidivs
imul
push
mov
jle
std
test
jl
lret
ret
loope
stc
sub
popf
scas
add
cmpsl
leave
iret
jnp
sbb
jns
arpl
faddp
addr16
mov
pop
push
inc
test
in
sarb
xchg
xchg
mov
push
and
fcmovnb
lods
push
xchg
mov
fistps
fnsave
jnp
imul
jae
add
aas
out
lds
and
insb
and
mov
call
jno
push
sub
pop
sti
adc
xor
push
ds
add
or
fdivrs
test
nop
lods
lock
sub
add
inc
in
inc
cltd
bound
or
or
and
jns
mov
ret
xchg
lods
es
push
fiadds
ret
mov
jb
mov
out
inc
rcll
int
cli
cltd
mov
outsb
jnp
mov
lret
cmp
jne
jnp
xor
adc
shlb
xchg
adc
repnz
jae
cmp
add
mov
inc
dec
or
sbb
scas
inc
pop
or
cmc
lret
cmpsl
adc
and
pop
aaa
rcll
mov
inc
xchg
mov
in
jbe
jb
mov
xor
out
inc
inc
mov
ret
adc
dec
nop
sbb
movsl
adc
stos
xchg
scas
mov
mov
leave
repz
dec
test
in
push
mov
xor
pop
into
xchg
and
mov
xorl
xlat
daa
sub
stc
fcoms
and
sbb
out
mov
mov
jno
push
insl
out
mov
ljmp
pop
dec
xor
pop
dec
into
and
cs
orl
cld
repnz
fistpl
adc
cmp
jmp
jle
add
push
or
cld
lahf
sub
ds
das
or
bound
inc
jne
dec
adc
std
test
sub
sub
iret
or
adcb
ret
jae
mov
add
lret
mov
xchg
iret
out
fs
data16
ret
add
and
or
or
mov
cmc
sbb
out
add
in
or
pusha
cmp
fldl2e
mov
mov
mov
xchg
insl
int3
pop
clc
add
cld
cmpsl
rcll
ficompl
in
inc
das
les
lock
xlat
repz
push
clc
daa
xchg
pop
cmp
xchg
das
xchg
aas
or
sbbl
ss
mov
sbb
shrl
in
jg
int3
mov
leave
cmp
gs
incl
jo
mov
xor
test
fisubrs
add
push
orl
faddl
mov
mov
rcrb
mov
push
lahf
push
xchg
jecxz
add
dec
icebp
sahf
dec
shl
cmc
sub
ds
popf
test
fs
dec
xchg
dec
psubusb
test
jl
pop
lret
fs
imul
sahf
sbbb
int
gs
addr16
fsubs
jbe
shlb
rorl
or
pop
push
or
dec
jmp
aas
push
inc
fnstenv
sub
xor
mov
xlat
adcb
scas
mov
lods
jecxz
aam
dec
fldcw
and
cmc
jnp
fwait
insb
push
mov
jle
mov
pop
pusha
fimull
enter
hlt
xor
sbb
or
xor
push
push
xor
insl
push
pop
xor
ret
testl
ret
adc
xor
inc
jnp
gs
fistl
stos
mov
inc
or
xchg
xlat
xchg
pop
call
sub
inc
insb
lahf
xor
fwait
dec
push
mov
cld
mov
sbb
cmp
xchg
jo
je
inc
sbb
repnz
ret
shr
ss
and
jmp
pop
sbbl
mov
int
and
cmpsb
clc
add
roll
sti
cld
dec
sahf
mov
or
adc
rcrb
dec
gs
pop
leave
aaa
jnp
sub
test
xchg
xor
loop
int
cmp
jb
add
movsb
in
sti
mov
shlb
inc
shll
xor
jp
popaw
out
lret
mov
stos
mov
and
inc
dec
adc
push
mov
add
mov
imul
mov
lock
imul
pop
sub
add
inc
xor
mov
jle
int
cmp
mov
notl
mov
repnz
mov
mov
movsb
cli
sbb
mov
out
dec
xchg
andb
popf
inc
mov
les
add
and
int
push
std
sbb
stos
inc
sbb
or
fs
loope
aam
sub
mov
lret
push
or
psubusb
mov
aam
mov
push
adc
mov
and
test
jbe
and
xchg
int3
push
or
test
loope
aas
lods
lds
xor
fidivrl
scas
ss
das
push
das
enter
pushf
fisubs
mov
out
mov
aas
sub
or
push
fbstp
sbb
cmp
push
xchg
xor
iret
rol
rclb
adc
mov
out
lods
mov
adc
sub
jmp
in
adc
stos
sub
pop
adc
dec
xchg
push
jae
jle
xor
inc
mov
cmc
or
sbbb
ljmp
xorb
jno
sbb
cs
aaa
in
pop
ss
jmp
jno
jne
xchg
lret
dec
ljmp
imul
xor
adc
out
nop
sub
adc
scas
adc
mov
cli
xor
jge
push
or
clc
das
out
lret
aad
or
sub
mov
mov
pop
mov
mov
repnz
jmp
mov
fs
popa
cmp
idivb
xchg
lahf
dec
adc
mov
or
dec
pop
lods
fimuls
mov
or
and
scas
shll
xchg
or
lret
inc
gs
adc
lret
jnp
sbb
push
insb
pushf
xchg
cmp
sub
jae
movsl
scas
fldenv
test
icebp
push
push
mov
cmp
scas
push
out
adc
xor
pop
dec
add
mov
into
movsb
fisubrl
insl
adcb
pop
or
jns
je
fistpll
mov
lds
cld
sub
addr16
xchg
adc
adc
add
push
mov
int3
bound
icebp
aam
adc
test
in
mov
into
leave
xlat
add
mov
push
xor
xchg
sbb
and
cmpl
dec
lods
stos
sbb
dec
mov
fmull
jg
lret
ss
int3
icebp
ds
clc
movsl
mov
push
inc
shr
jl
pushf
repz
mov
or
negl
add
test
mov
adc
stos
pop
test
or
addr16
aad
bound
ja
xchg
pop
test
aad
dec
cmp
jno
fwait
or
xchg
mov
test
pop
xor
aaa
push
or
test
dec
shrb
stos
fwait
jl
and
push
fldl
pop
addr16
pop
inc
and
xor
repz
xchg
jo
xchg
cli
test
loope
ds
add
daa
test
stos
das
js
shr
and
and
movsb
out
imul
xchg
testl
sbb
fs
test
mov
jo
sbb
sbb
mov
dec
repz
ss
xor
mov
push
sub
push
inc
push
shll
sub
mov
stc
cltd
outsb
mov
loopne
fs
out
call
mov
ss
mov
loopne
addr16
jne
rclb
push
lods
adc
loope
push
loope
ds
add
in
arpl
lods
dec
mov
outsl
mov
add
insl
cmp
sub
mov
dec
dec
dec
xor
aas
push
test
popa
mov
sub
fs
aas
mov
cli
jae
pop
ss
jns
pop
repnz
aad
jp
pop
les
and
push
imul
and
cmpsb
fs
xchg
add
dec
mov
pop
inc
or
dec
sahf
out
push
mov
cmpsl
fs
clc
dec
mov
rolb
push
jl
pop
mov
ss
test
dec
fdivl
call
in
mov
test
fnstsw
pop
aam
cmpsb
adcl
aam
mov
jnp
dec
dec
cmp
add
sbb
lods
jno
std
xchg
and
pop
movb
pop
dec
lahf
xor
pop
incl
or
jmp
add
and
mov
movsb
nop
lock
mov
cmp
mov
movsl
popf
adc
ret
lock
out
sbb
and
and
add
and
test
pop
outsl
sbb
pop
adc
xor
leave
rolb
dec
cwtl
fisttpl
icebp
ljmp
repnz
add
movsb
jbe
jbe
cmc
inc
test
sti
ret
mov
cmp
pop
jae
inc
push
jns
jle
gs
xor
pop
inc
lret
push
jmp
repnz
adc
loope
stos
mov
lods
cwtl
std
clc
in
movsl
inc
cmc
push
xor
out
mov
in
lds
xchg
call
cmp
movsl
outsb
xor
push
push
aas
loope
lds
pop
push
mov
or
jo
movsb
into
add
push
push
test
iret
adc
jge
nop
daa
rcl
arpl
mov
aad
sub
lock
and
int3
and
sahf
loop
subb
test
rolb
push
inc
add
pusha
xchg
jmp
hlt
cmpsb
stos
gs
push
inc
mov
sub
movl
push
fisubrl
movsl
test
and
ds
pop
pushf
jnp
shrl
test
push
adcb
push
outsl
aaa
dec
jns
cmp
imul
std
sbb
popf
cmp
daa
fs
push
dec
movq
pop
ljmp
bound
shrb
stc
adc
pop
jo
aaa
scas
out
cmp
and
mov
pop
int
lret
and
sahf
adc
inc
jle
je
dec
into
out
dec
jg
mov
or
lea
cmp
stc
cltd
add
je
lds
xor
fs
dec
inc
mov
and
lret
jecxz
out
std
daa
das
pushf
xor
inc
xor
stos
insb
mov
inc
insl
outsb
in
sbb
pop
rcrb
adc
sbb
lea
adc
jl
out
push
fisttpl
das
fs
outsb
xor
mov
test
arpl
cmp
sbb
sub
in
jecxz
mov
lds
and
add
lock
and
mov
cmc
mov
jmp
seta
aaa
push
lods
cmpsb
shll
sbb
daa
push
jns
out
push
mov
test
int
mov
decb
adc
mov
mov
outsl
add
jg
shr
ss
mov
scas
cmp
mov
xor
ret
fdivl
xor
xor
mov
pop
cmp
stc
cmpb
xorb
mov
leave
aas
fsubs
sbb
sub
cmpl
test
push
mov
or
adc
int3
loopne
aaa
notb
adc
call
inc
jge
mov
xchg
cmp
lods
icebp
ficoml
lods
pop
jmp
repz
lock
dec
loope
pop
iret
out
mov
xlat
outsb
outsl
imul
dec
lret
in
enter
ret
je
sub
loope
adc
sbb
dec
movsb
in
out
insb
adc
cltd
aaa
mov
hlt
fdivrs
and
push
ja
cli
adc
enter
push
mov
mov
mov
push
arpl
gs
mov
movsl
push
aad
jne
cmp
call
loop
call
inc
xchg
popa
imul
sahf
mov
push
or
mov
mov
fldenv
movzwl
xchg
outsb
jg
inc
js
cmp
cwtl
add
pop
push
jnp
out
sub
and
filds
mov
ffree
fisttps
out
inc
xchg
push
test
push
xchg
daa
hlt
cmp
inc
push
and
xchg
aad
popf
sub
mov
push
mov
xchg
fwait
lahf
cmp
mov
ja
mov
insl
cmp
push
push
jle
cmp
out
mov
push
rolb
jnp
and
xor
xlat
fidivrl
ror
sub
push
add
mov
je
push
sbb
mov
jg
cmpsl
cltd
xor
adc
cmpsb
repnz
out
and
push
mov
into
jae
jns
xchg
mov
xor
lea
outsl
adc
in
adc
push
cmpsb
push
repnz
jle
ret
jbe
loope
cmpsl
subb
and
gs
jle
test
mov
pop
xchg
push
pop
mov
dec
popa
cmp
pusha
jecxz
aam
daa
pop
or
dec
inc
test
ret
pop
mov
ret
cwtl
outsb
in
xor
les
mov
in
pop
inc
sbb
cmp
sub
mov
test
mov
ja
ss
and
push
into
xor
lahf
out
sbb
int3
xor
movsb
lock
push
bound
inc
mov
jmp
int3
lret
das
je
test
fcomip
mov
inc
in
aam
cltd
inc
pop
xchg
cmp
rclb
scas
andb
dec
sbb
jo
pop
xchg
aas
jge
movsb
push
shrl
add
pop
cmp
nop
inc
mov
sbb
repnz
and
cmc
ficoml
inc
cltd
outsl
cmp
or
jle
cs
or
pop
gs
in
xor
cld
lods
test
inc
cld
in
push
push
testb
movsl
pusha
das
mov
popa
add
adc
fstps
jg
out
push
xchg
jmp
or
out
and
loopne
jae
fisttps
orb
xchg
jns
inc
jne
add
adc
repz
enter
rol
push
call
test
pushf
into
pop
lahf
stos
das
fucom
lods
mov
cli
dec
cmp
in
xor
inc
inc
xor
fdivs
shrl
pop
sub
and
stos
xor
or
push
xor
aad
testl
mov
or
pop
mov
cmp
xor
fidivrl
sub
flds
jmp
imul
jns
cld
in
cmp
sbb
inc
add
test
xchg
movsl
or
xlat
push
repz
sbb
add
data16
push
and
sbbb
xor
lcall
rcrb
sub
mov
cwtl
mov
jge
out
je
imul
adc
ds
into
addb
push
gs
add
ds
inc
cltd
pop
repnz
sub
out
ds
sbb
fbstp
mov
shrl
das
lods
dec
repnz
movsb
mov
test
jg
pop
addr16
pop
mov
pop
dec
push
lds
push
in
loope
push
push
cmpsl
fisubs
nop
loopne
bnd
ja
dec
or
or
hlt
cmpsl
jae
mov
cltd
pop
jl
cs
clc
fistpll
int3
notl
lret
xor
jl
insb
cmpsl
daa
jp
scas
pop
lcall
adc
push
ret
mov
dec
adc
scas
sbb
je
lcall
arpl
cmpsl
insl
mov
in
or
movsb
jae
mov
inc
shlb
xor
jecxz
jle
leave
clc
test
test
out
les
jns
pop
pop
js
scas
and
push
cli
lds
flds
jns
push
shrl
loope
jne
fs
pop
test
fidivrs
pop
jl
test
inc
mov
shrb
sub
mov
fbstp
ret
adc
mov
push
pop
ret
inc
ds
out
or
or
outsb
jle
jns
jb
scas
cltd
sarb
mov
pop
out
sub
push
push
cmp
sub
mov
aas
data16
js
sbb
mov
lds
mov
pop
jbe
and
mov
test
or
ljmp
fidivl
test
setg
stos
inc
outsb
add
lahf
xchg
inc
or
add
jo
inc
add
fmull
xor
mov
mov
xor
lret
or
push
mov
iret
xor
stos
pusha
dec
fstpt
ljmp
mov
mov
lret
pop
out
jge
push
xor
xor
sbb
sub
sub
sub
add
pop
add
or
jg
ss
sbb
push
jmp
lret
mov
in
mov
cld
inc
rcrl
jb
insl
add
jnp
cmpsb
imul
sub
push
jne
cmp
enter
pop
les
ds
cmp
mov
push
xor
sub
sub
mov
mov
fstl
push
sub
aas
nop
push
imul
sub
mulb
add
shrb
gs
lahf
adc
inc
dec
rorl
mov
jnp
je
popa
imul
lds
outsl
and
loop
dec
loope
imul
rcrb
push
inc
mov
lock
lock
loop
jg
cmp
mov
out
dec
insl
pop
xchg
jbe
cmpsb
mov
hlt
xchg
cmp
sbb
push
add
mov
insb
add
subl
mov
push
xchg
cwtl
dec
rorb
sub
scas
shrb
loop
xchg
lods
sub
gs
jmp
adc
cltd
mov
xchg
xchg
cmp
loop
sti
pop
adc
dec
test
pop
test
adc
and
xchg
push
inc
xchg
mov
jmp
and
inc
adcb
int
xchg
inc
fwait
sub
mov
and
sbb
add
sti
sub
insl
jb
push
fisubrl
inc
cmp
or
cmp
inc
lock
aaa
xor
rcrl
xchg
mov
sbb
scas
test
int
dec
bound
popa
pop
inc
or
jmp
pop
in
hlt
push
out
lea
out
and
pop
push
bound
out
rol
fstl
addr16
popf
fcmovnu
fwait
push
stos
mov
and
mov
ja
out
and
insl
pusha
insb
sub
jp
idivl
dec
outsl
hlt
mov
mov
shl
ds
ret
lret
xchg
popf
adc
out
js
jmp
out
sbb
pop
icebp
inc
mov
inc
cmpl
sahf
movsl
fsubp
js
loop
lret
ds
and
lcall
sbb
and
xchg
xor
add
adc
scas
pop
cmp
call
add
sub
mov
mov
int
jae
jmp
testb
sbb
mov
adc
leave
xor
xchg
testl
xchg
ret
lods
sahf
jbe
mov
xchg
mov
mov
mov
movsb
sub
sub
movsb
jae
insl
aam
pop
cmpsl
mov
ret
mov
in
lods
test
or
cmp
adc
aam
notl
xchg
or
sbb
movsl
and
shlb
mov
xlat
mov
loop
add
jb
xor
fwait
test
call
pop
pop
pop
popa
loopne
xor
mov
scas
cmc
inc
fwait
lds
and
enter
addr16
jne
clc
sub
jno
fnstsw
xchg
aas
cmp
xchg
inc
aad
lret
and
fs
mov
ljmp
or
mov
test
adc
inc
push
mov
inc
test
insb
jnp
mov
mov
pop
nop
mov
adc
jns
in
out
dec
add
xor
imul
call
sbb
and
fisubl
push
fs
stos
xchg
jecxz
nop
jp
xchg
fdivs
mov
idiv
jb
les
mov
je
aaa
js
xchg
jg
test
xlat
pop
outsb
jp
loope
mov
cmc
dec
inc
adc
add
movsb
and
dec
lds
pause
push
sarl
aam
rorl
negb
jmp
and
idiv
xor
inc
insb
mov
int
adc
cmp
fmull
push
inc
xor
jns
mov
mov
jle
sbb
and
pop
xchg
or
inc
std
push
js
pop
inc
nop
or
pop
mov
pop
out
cmp
cwtl
lcall
lcall
inc
mov
test
loop
aam
sbb
inc
inc
or
cs
test
mov
fstpl
pop
xchg
outsb
xchg
adc
cmpsl
jns
xchg
lret
mov
sbbb
sbb
inc
cmpsl
int
mov
sti
sub
aaa
nop
out
int
or
iret
ret
ret
pusha
push
dec
mov
insl
fs
dec
test
lods
mov
int3
outsb
aam
push
inc
xchg
mov
jo
or
xor
shlb
adc
push
out
mov
and
roll
push
call
sbb
repz
xchg
jle
lods
shl
rolb
lahf
push
call
icebp
testb
and
stc
xchg
push
int3
in
scas
jbe
rcrl
cwtl
dec
insb
mov
shr
sub
mov
imul
cwtl
xor
mov
or
or
adc
jp
test
rolb
or
add
out
ljmp
push
lock
inc
cmp
push
xchg
mov
fisubs
loope
push
jnp
add
insl
fcomip
aam
mov
int3
dec
or
into
push
sbb
lods
cltd
xor
inc
push
mov
lahf
lcall
mov
fs
bound
js
lahf
ljmp
adc
mov
mov
xor
pusha
imul
dec
es
cmp
mov
int
or
mov
xor
dec
std
jo
xorl
xchg
xchg
rcrl
add
push
idivl
ds
sbb
fsubrp
jo
scas
js
mov
pop
xor
and
add
bound
xchg
mov
aam
sbb
xchg
das
lahf
jg
or
dec
dec
test
into
add
xchg
sub
ljmp
in
mov
clc
outsb
in
mov
push
sbb
popa
push
not
add
js
push
fstps
xor
mov
pusha
cmp
mov
fsubrl
insb
fndisi(8087
call
xchg
sub
mov
ja
lahf
push
jo
adc
fldl2e
clc
jmp
xchg
or
cmp
int3
out
nop
fadds
dec
out
xor
dec
adc
movsl
cmpsb
mov
inc
adc
inc
aad
jae
xadd
xchg
scas
adc
aam
push
mov
sbb
xor
push
cwtl
xor
test
test
pusha
add
xchg
jbe
mov
sbb
add
testb
xlat
mov
xor
mov
fisubl
xchg
dec
push
or
sbb
stos
scas
push
sub
inc
imul
adc
fildll
call
daa
lock
ret
inc
cs
and
sub
pop
scas
inc
cmp
push
int3
mov
std
fidivl
add
jecxz
mull
dec
ss
outsb
mov
push
in
inc
fnstcw
rorl
fstps
push
inc
das
aas
inc
sbb
testb
neg
xlat
rolb
gs
cmp
test
je
cmpsl
in
outsb
and
icebp
fsubs
add
mov
cld
and
mov
int
mov
sbb
fwait
insb
mov
pop
stos
pop
fs
or
adc
push
mov
sti
pcmpeqw
cs
cli
stos
lock
fsubrs
sti
pop
mov
subb
loop
mov
out
aam
pop
jle
jo
xor
cld
inc
lock
neg
cltd
lret
hlt
test
int3
or
mov
jno
out
push
sahf
mov
or
sbbb
dec
test
mov
out
stc
scas
sar
out
imul
jne
jp
loop
jmp
fisttpll
cmpsb
cmp
out
test
test
orb
lret
aad
jne
jl
insl
push
test
pop
xchg
or
push
stos
push
mov
and
das
push
adc
shrl
adc
mov
sub
int3
mov
nop
lods
and
insb
adc
orb
or
push
aam
loope
stos
dec
outsb
xchg
pusha
mov
shrl
aad
dec
std
ret
mov
pop
pop
testl
jno
jecxz
jbe
mov
and
int3
mov
xchg
in
mov
lock
ja
shlb
add
pop
inc
mov
hlt
adc
add
sbb
sub
pop
mov
outsb
mov
inc
rcrb
and
rol
rcll
xor
cmp
jnp
or
or
popf
push
cwtl
push
ljmp
mov
call
mov
and
cmpsl
in
adc
enter
mov
push
mov
mov
repz
bound
clc
xchg
je
mov
lods
push
pop
mov
loope
dec
mov
mov
xchg
sarb
mov
pop
dec
add
and
dec
sbb
inc
lods
or
test
xor
popfw
jl
test
mov
aas
jae
ret
out
movsb
sbbb
sbb
adc
test
pop
jl
jnp
cmpsl
loopne
imul
movb
sarl
sub
mov
ja
add
lods
jbe
dec
cmpsb
pop
js
jp
mov
jmp
or
andb
cltd
dec
sti
adc
pop
popa
xor
les
xor
mov
mov
imul
jg
xor
dec
iret
add
pop
stos
push
fwait
mov
xchg
nop
int3
inc
push
sub
xor
mov
fisubs
sbb
jl
mov
mov
push
lcall
clc
jno
push
mov
arpl
sahf
stos
stc
pop
fdivrl
sbb
fdivs
sahf
add
scas
nop/reserved
and
das
cmpsl
je
push
mov
dec
arpl
adc
mov
js
cmp
insl
mov
and
aad
scas
inc
sub
xchg
fmull
ljmp
mov
pusha
xchg
lock
inc
xchg
push
and
nop
jl
cmp
js
popa
insb
out
mov
enter
pop
jp
adc
cmp
stos
test
call
mov
push
mov
lea
bound
sbb
and
push
mov
jle
jmp
push
lods
jecxz
je
movsl
add
cmc
mov
push
push
xor
icebp
push
xchg
rcll
jge
cltd
aad
dec
dec
add
cmpl
xor
lret
mov
les
dec
or
mov
shll
cltd
ss
in
dec
fimuls
xchg
add
jg
dec
fs
fs
sbb
stos
push
scas
push
push
aaa
jae
pop
fadds
or
mov
shrl
ret
lods
xchg
movsb
insl
push
inc
push
xor
ss
sbb
lret
mov
mov
fisubl
mov
push
scas
mov
fldenv
mov
jg
adc
pop
repnz
lock
jmp
test
xor
out
addr16
cwtl
popf
iret
pop
mov
jmp
jb
inc
mov
les
push
add
addl
stos
ret
inc
pop
clc
push
xchg
push
xor
outsl
jl
imul
sbb
or
shll
jb
lds
fbld
ror
out
and
xor
xchg
push
push
jns
sub
test
inc
xchg
xchg
adc
js
in
xchg
sbb
lock
data16
jae
sub
sbb
pushf
pop
dec
push
dec
inc
jb
sbb
jp
add
xor
in
test
push
dec
inc
push
icebp
lods
or
cwtl
mov
mov
arpl
jp
nop
or
movsl
sbb
cltd
rol
daa
jecxz
jge
iret
inc
fidivs
add
inc
xchg
lahf
test
add
pop
xchg
jno
dec
and
daa
dec
mov
ss
test
push
cmp
call
mov
mov
adc
push
push
add
add
pop
sahf
int3
and
jmp
loopne
push
cmp
aad
mov
outsl
arpl
cmp
movsb
xchg
not
pop
add
lahf
mov
imul
je
decl
loopne
or
pop
mov
je
jle
std
sub
sub
sbb
std
jbe
pop
ja
jno
repz
push
add
push
dec
jae
popl
pslld
inc
jne
aad
stos
cli
pop
sar
cld
push
add
add
add
pop
inc
negl
mov
out
sbb
mov
rcl
sub
iret
insl
fld
ret
imul
xor
push
dec
iret
vaddss
add
mov
lods
pop
adc
je
jp
fiaddl
inc
rcll
jge
cld
lods
insl
enter
pop
and
rcrb
insb
and
inc
dec
shll
rorb
dec
inc
mov
mov
fsts
insb
cmc
outsb
mov
xchg
call
sbb
pop
inc
add
add
nop
sub
cld
notl
mov
mov
adc
pusha
mov
cmpsb
mov
les
andb
insb
xchg
dec
push
out
push
xchg
stc
mov
out
mov
jns
xchg
frstor
or
iret
mov
ljmp
pushf
pushf
repnz
gs
js
lods
stos
int
pop
dec
and
lahf
pop
fbstp
loope
test
lods
test
cli
in
jns
rorb
add
int
shr
call
stos
stos
daa
loop
push
hlt
and
notl
xchg
mov
fsubrs
or
jge
jle
pop
jmp
fwait
mov
les
pop
fnstcw
push
in
loope
xor
scas
outsb
mov
loop
push
pop
stc
out
mov
inc
popf
or
cmp
dec
xor
lock
jns
sti
mov
arpl
add
sub
sub
cmp
out
adc
xchg
or
sahf
out
movsl
or
pop
and
cmp
data16
lea
mov
cltd
sbb
xor
das
cltd
fdivrs
mov
or
or
add
lds
add
mov
dec
sub
cmp
and
add
sbb
xchg
stc
outsb
js
push
cwtl
mov
sub
xchg
cmc
repnz
data16
in
movsl
add
out
dec
inc
test
leave
fsubs
jmp
nop
jge
mov
or
rorb
mov
mov
xor
jne
shrd
fbstp
in
js
jae
adc
je
jb
pop
scas
adc
inc
test
js
push
add
jb
mov
testl
cld
mov
movsl
dec
clc
cs
mov
jle
dec
mov
sbb
sub
mov
mov
jecxz
inc
sbb
cmp
push
jge
cmpsb
imul
insl
andb
rcr
cmp
add
mov
xchg
mov
test
andl
popf
dec
jle
lea
ljmp
movsl
inc
pop
iret
xlat
popa
dec
in
inc
cmp
fdivr
jl
push
push
xor
pop
mov
cmp
ficoml
test
ja
out
scas
cmp
jo
jnp
mov
sbb
mov
sbb
shl
out
test
xchg
xor
xor
sub
lods
sbb
lods
mov
jno
inc
insl
data16
or
out
mov
std
aaa
dec
insb
mov
popa
xchg
loopne
stos
in
jecxz
stc
lret
shll
and
cmp
sahf
stos
xchg
int3
or
addr16
or
lods
rorl
push
mov
andl
xchg
das
call
ds
or
ljmp
rorl
cmp
fdiv
push
inc
adc
imul
sbb
cmp
fdivs
popf
sahf
insb
vcvtss2sd
mov
fistps
sbb
xchg
or
or
out
push
xchg
adc
add
out
jmp
jnp
push
vpavgb
inc
sub
enter
fidivrs
stos
into
es
lret
sbb
xor
xor
dec
xchg
ds
inc
loopne
jmp
subb
push
aaa
and
pop
push
shrl
jo
mov
mov
dec
jg
retw
into
pmullw
add
sbb
or
jp
sub
mov
sub
sbb
mov
push
cmpps
sbb
jmp
nop
cmp
cmp
aaa
xlat
push
jge
insb
push
enter
or
mov
push
jl
sub
mov
fstps
mov
xchg
xchg
pop
xchg
cltd
out
mov
hlt
inc
dec
pop
and
mov
stos
pop
lcall
xchg
in
push
sahf
mov
sti
out
jmp
pop
adc
xor
jb
mov
or
sbbb
test
in
leave
scas
outsb
mov
and
rep
loope
mov
nop
or
stos
fs
pop
push
cld
addr16
xchg
cmp
fadd
fs
pop
les
pop
cmp
jecxz
shrb
cmp
out
mov
mov
cld
notl
aas
dec
pop
cmp
mov
aam
dec
mov
push
data16
and
ret
ljmp
leave
aam
es
es
adc
int
mov
mov
cld
xor
gs
js
leave
adc
sub
mov
mov
inc
movups
jle
in
outsb
stc
sbb
ffree
jp
ret
mov
lea
ret
nop
mov
push
mov
and
cmpsb
inc
push
jl
std
mov
xor
push
cltd
jns
mov
sub
mov
cmpsl
rorb
lret
sbb
cmp
adc
push
jp
lock
andb
add
xchg
stc
aad
xchg
rcrl
jb
fimull
pop
jns
mov
mov
fstps
sti
cld
fnstsw
pop
divps
push
aad
test
cmp
push
push
mov
pop
push
and
sahf
lock
and
push
dec
jae
xor
add
mov
sbb
mov
fcmovbe
xor
jne
lcall
add
imul
dec
ret
ds
sbb
cmp
cmp
cmp
and
jo
loopne
mov
xlat
movsl
add
mov
add
push
fs
addr16
adc
negb
cmp
pushf
aaa
push
pop
xchg
dec
jbe
push
pushw
mov
pop
sarb
out
out
xchg
sbb
fdiv
mov
inc
ret
das
jae
pop
inc
leave
push
and
mov
ret
sbb
cs
mov
pop
xor
cmp
inc
sub
enter
xchg
cltd
lahf
hlt
sub
arpl
rol
sbb
jb
cli
xlat
into
xor
dec
iret
jp
sbb
and
or
outsb
or
fs
jg
cmp
movsb
dec
jmp
and
jle
adc
lods
shr
mov
popa
in
xchg
and
dec
sbb
dec
xor
xor
dec
and
lods
fnstcw
or
push
dec
cli
cmp
out
rol
mov
adc
je
cmp
cmp
jns
in
mov
xchg
add
stos
sbb
fcmovu
lret
pushf
xor
ret
imul
inc
pushf
ficoms
and
add
push
arpl
xchg
xor
dec
imul
inc
loop
das
xchg
inc
and
lock
addl
icebp
cmpsb
insb
sub
push
push
push
mov
jbe
mov
aaa
lods
sarb
pop
sub
cmp
mov
call
mov
shlb
stos
mov
inc
mov
jl
subb
loop
test
pusha
pop
mov
inc
mov
test
sub
mov
aas
sarl
test
jnp
jo
enter
mov
shlb
lea
and
xor
pusha
es
sbb
ljmp
and
test
sub
or
lahf
and
clc
cmc
pop
push
popa
or
xchg
sbb
mov
xor
mov
fadd
push
mov
mov
outsl
pop
jl
imul
push
lods
jg
push
push
xor
dec
xchg
pop
popf
in
lret
shl
push
sub
mov
mov
push
add
sbb
data16
iret
int3
divb
aam
scas
mov
adc
push
xor
pop
inc
mov
int
test
adcb
or
cmp
jecxz
sub
mov
in
mov
out
lahf
xor
test
adc
jmp
aad
jmp
popa
mov
sub
adc
xchg
in
test
lret
fistpll
inc
rorb
incb
or
lret
mov
sti
out
pop
sbb
ja
shrb
jp
pusha
cld
call
test
jmp
nop
out
xorb
and
test
add
jae
ret
rcll
jbe
jge
clc
mov
sbb
mov
push
cmpl
ret
fidivrl
mov
pop
pusha
jp
test
repnz
addr16
cmpsb
mov
xor
js
inc
adc
rep
decl
sbbb
outsb
cmp
add
push
popa
or
ret
cld
mov
push
pop
inc
xlat
lcall
and
sbb
mov
pushf
outsb
add
push
xchg
jns
jmp
inc
jns
js
mov
xchg
subb
push
inc
notl
sbb
aas
add
xchg
and
in
inc
mov
mov
stos
rorl
cmovno
sahf
cmpsb
adc
dec
bound
enter
shl
in
and
rcr
scas
sbb
loopne
or
es
cmpsb
lods
mov
aad
or
leave
in
or
loopne
pop
mov
jp
je
and
out
aas
icebp
in
adc
lock
jge
cltd
xchg
ljmp
lcall
lea
adc
push
lods
mov
or
mov
es
adc
xor
popf
icebp
pop
jecxz
inc
pop
mov
mov
adc
pop
or
push
push
fmull
pop
jp
ror
mov
push
lods
hlt
jle
xor
ret
cmp
clc
leave
unpcklps
sti
mov
xor
lods
and
push
xchg
das
inc
jae
push
notl
mov
mov
pop
cwtl
cmp
mov
add
fs
subb
adc
fistl
movsb
lcall
call
push
xchg
repz
mov
dec
fimuls
xlat
jl
ret
push
push
mov
fstps
outsl
adc
jbe
sbb
int3
inc
test
mov
leave
and
or
dec
push
mov
inc
push
jmp
cmpsl
les
xchg
dec
fldenv
dec
or
andl
dec
dec
fiaddl
mov
push
ljmp
xchg
fcmovnb
ds
mov
in
cltd
repnz
imul
inc
inc
cli
dec
lcall
add
xchg
add
out
adc
scas
xchg
xor
cltd
mov
pop
lods
scas
fcomp
and
pushf
prefetchnta
lds
rcll
cmp
mov
add
pop
push
inc
cmp
sbb
dec
dec
xlat
lock
push
pop
pop
repz
inc
mov
lea
dec
cmp
int3
inc
int3
test
addl
xor
and
mov
xor
mov
scas
mov
pop
mov
ss
ficompl
push
je
xor
lahf
in
push
mov
pop
nop
jae
loop
pop
cmpsl
inc
in
mov
test
pop
xchg
lret
mov
cwtl
mov
testl
push
outsl
leave
sbb
cmp
push
and
repz
fmuls
test
mov
addb
lods
dec
scas
into
in
out
scas
mov
xchg
insb
shr
or
lahf
sbb
aas
cmp
or
int3
push
sbb
pushf
ljmp
pop
pcmpgtd
in
scas
mov
aam
inc
mov
push
lods
mov
in
dec
scas
jg
pop
jg
and
andb
addr16
adc
inc
ret
mov
je
or
stos
jl
mov
mov
shlb
cmp
scas
imul
or
xchg
shl
cmc
push
ja
xlat
addb
ret
push
cmp
mul
jl
popl
cwtl
movsb
pop
cs
push
jo
jge
cltd
out
sbb
popa
pop
cmp
gs
pop
dec
mov
in
stos
fsubrp
pop
jae
imul
and
adc
cmp
dec
pop
int
in
dec
mov
loope
push
test
adc
addr16
push
mov
js
jo
xchg
lret
bound
cli
push
js
push
adc
std
and
push
adc
leave
jmp
gs
cmp
and
xor
jp
sbb
dec
icebp
dec
fwait
xchg
pop
std
sub
jne
mov
mov
push
xor
cmp
pop
addl
jecxz
cmpl
dec
rorb
gs
pop
xchg
and
outsb
pop
lcall
rolb
push
dec
sbb
dec
imul
lds
mov
imul
pusha
push
add
adc
push
jp
push
add
scas
fbstp
in
mov
push
sbb
stc
insl
push
pop
cmp
into
mov
aad
mov
push
out
and
shrl
mov
xorl
mov
fstpt
stos
push
add
das
sub
out
cltd
es
fistps
pop
or
js
insl
and
adc
nop
sbb
outsl
in
sbb
mov
xor
xchg
shlb
push
addl
divl
sbb
mov
sti
hlt
xorb
pop
stos
sub
dec
scas
lods
pop
or
fcoms
adc
jle
xor
das
and
adc
or
inc
stos
cmp
rcll
add
jge
cmp
pop
leave
mov
mov
shrb
xchg
idivl
xlat
imul
subl
pop
cli
add
outsl
dec
cmp
sbb
mov
dec
pop
dec
sbb
ds
adc
xor
xor
jmp
cmp
jg
push
add
jno
int3
mov
push
xor
dec
mov
sub
cmp
push
dec
xchg
outsl
dec
adc
xlat
jno
test
adc
and
sub
sub
adc
xchg
push
and
aaa
mov
push
jbe
xchg
jae
fistpll
and
jno
and
mov
inc
adc
repnz
leave
and
shrl
leave
bound
dec
mov
fldenv
pop
xchg
xor
cmpsl
adc
negl
scas
jbe
mov
int3
aam
sub
lea
cld
sub
outsb
sbbl
int
pop
ja
jbe
pop
cmpsl
mov
dec
xor
rorb
jnp
sahf
jbe
fimull
pop
and
xchg
mov
or
out
xor
or
rolb
movsl
hlt
sbb
and
sbb
pop
and
in
and
repz
push
sbb
mov
mov
sbb
shl
enter
sub
roll
cmc
sub
out
mov
and
cwtl
daa
pop
stc
fs
xchg
enter
cmpsb
mov
out
mov
cmp
mov
or
push
adc
enter
xchg
loopne,pn
btc
in
nop
lret
add
fcompl
sti
push
and
fidivrl
je
xchg
xchg
clc
inc
and
sub
insl
fnsetpm(287
cmpsb
and
mov
out
mov
xor
inc
dec
push
xchg
and
aam
lock
xchg
xchg
dec
rcll
jbe
pusha
int3
adc
ss
cmp
in
pavgw
aaa
push
leave
pop
dec
mov
adc
mov
aaa
cwtl
in
mov
call
jns
shrl
xor
mov
inc
shrb
xor
lret
push
addl
loopne
mov
inc
jns
out
push
push
mov
out
stos
repnz
sub
add
pop
inc
dec
lcall
fimull
shrl
mov
mov
ror
mov
inc
dec
sbb
hlt
inc
sub
sbb
push
or
loop
mov
xchg
push
pop
pop
pop
sbb
sbb
call
bound
dec
mov
and
pop
lret
and
stos
dec
jge
popa
xlat
scas
clc
pushf
mov
notb
ja
push
adc
adc
int
dec
shll
mov
jo
add
in
insl
and
mov
or
add
jns
rorl
add
mov
inc
and
lahf
xor
int3
sub
mov
inc
or
call
cli
das
jne
es
pop
in
adc
pop
mov
pop
jg
sub
xor
lcall
loop
addr16
lahf
cmpsb
hlt
push
push
enter
jo
mov
xor
psubq
add
xor
jge
mov
cmp
fwait
dec
cmpsb
fsubr
dec
pop
cmp
jecxz
hlt
lea
nop
dec
ficompl
ja
test
popa
mov
inc
in
addl
push
out
bnd
xor
adc
inc
gs
arpl
inc
mov
jno
stos
pop
push
addr16
sbb
adc
and
xchg
lcall
xor
jg
call
xorb
jnp
adc
int3
jge
xorl
mov
jae
xchg
sbb
inc
sub
sub
mov
popa
pushf
movsl
adc
push
xor
adc
ljmp
mov
and
stos
cmp
in
lea
out
pushf
fcmovnb
sub
es
push
jg
divl
test
sub
push
mov
es
mov
and
shl
ds
and
push
adc
cs
fmul
jmp
test
and
push
lret
inc
xchg
adc
xor
cltd
jecxz
xor
cld
inc
rcr
xor
or
push
into
push
pop
xchg
push
lds
frstor
cli
shll
das
pop
loop
and
pop
ja
and
popa
loopne
or
or
lret
icebp
ss
xchg
fwait
sar
aaa
push
mov
jmp
add
pop
call
pop
test
clc
lds
es
jg
mov
mov
insl
or
push
aam
or
fwait
cmc
call
incl
lret
pop
out
mov
int3
add
mov
test
std
lock
jle
xor
test
ja
and
pop
daa
mov
jl
fisubs
mov
xlat
in
mov
loop
cmpsl
xchg
sti
mov
insl
sarl
mov
lret
shlb
mov
mov
add
in
in
pushl
jecxz
sub
mov
inc
stos
or
roll
mov
iret
lret
lea
repz
insl
xchg
sub
rcll
push
sahf
sahf
popa
sub
push
into
dec
sbb
push
lock
mov
ja
push
inc
mov
hlt
lret
mov
aam
iret
xlat
xchg
mov
popa
add
mov
and
leave
inc
lret
jne
icebp
sbb
fs
add
repz
cmpsl
cmp
sub
aam
cmp
sbb
mov
cmp
adc
in
and
or
sub
sti
jo
and
scas
mov
aad
jg
iret
adc
lock
out
mov
lods
pusha
adc
inc
out
pop
jg
mov
push
sbb
sbb
cmp
scas
int
jl
pop
inc
push
das
sub
and
inc
js
lock
mov
xchg
sahf
cmp
pop
aam
jp
pushf
das
mulb
mov
enter
jmp
pop
sub
popf
mov
outsb
adc
repz
push
fadds
fisubl
aaa
icebp
rclb
xor
push
jne
xor
repz
ret
add
dec
add
pop
test
add
test
push
dec
stc
pushf
dec
stc
inc
mov
outsl
sbb
cmp
mov
sbb
mov
pop
cld
xchg
jno
sbb
sbbb
push
cld
or
add
push
mov
repz
js
addr16
out
add
in
inc
mov
test
push
loope
mov
xchg
loope
cmp
push
xchg
dec
ret
lret
rol
add
mov
cmp
pop
lret
data16
ljmp
test
mov
lahf
subb
mov
les
adc
arpl
and
jl
lret
shr
cmp
jp
inc
dec
cmp
lret
call
push
adc
outsl
dec
cmp
jns
xchg
mov
mov
jp
out
fnsave
adc
ret
xorl
mov
or
push
mov
push
clc
test
ja
push
stos
int
daa
jo
in
jo
adc
aaa
test
sbb
loopne
scas
in
cwtl
aaa
dec
mov
call
jb
push
cwtl
mov
fninit
nop
and
test
sbb
mov
inc
push
adc
daa
xor
aas
movsb
and
mov
jmp
adc
dec
xor
jecxz
les
lahf
pop
mov
xchg
fs
adc
enter
js
into
int3
adc
ficoml
mov
pop
xchg
or
fidivl
sub
mov
stc
and
xchg
adc
push
push
aaa
stc
mov
subb
popf
loope
out
dec
insb
push
loop
lahf
mov
push
jg
pop
mov
imul
mov
repnz
mov
mov
js
adc
adc
scas
mov
in
out
loopne
aam
daa
mov
jp
cld
repnz
mov
aad
xchg
roll
fdivrp
inc
test
mov
jg
sub
xchg
outsb
cmp
aad
lods
sub
mov
jae
mov
je
sub
addr16
jno
and
lahf
jmp
sub
fdivr
int
sbb
add
aad
mov
lods
loope
push
bound
js
jno
jmp
jl
imul
adc
ret
dec
jns
push
dec
pusha
jle
add
jle
cmc
lcall
dec
sub
stos
pop
add
repnz
in
dec
fidivs
jge
sbb
inc
imul
leave
int
mov
iret
iret
mov
cli
jecxz
lock
push
into
xor
mov
or
xchg
pop
inc
stos
pushf
adc
and
rcll
dec
lock
add
dec
aad
ficoml
sbb
mov
into
sbb
xchg
rolb
sub
pop
shl
xchg
add
push
mov
call
packsswb
pop
out
jo
shlb
mov
jne
es
aaa
in
mov
add
cld
cmc
mov
mov
adc
into
inc
ss
loopne
xor
aaa
jbe
je
mov
aas
push
mov
xchg
pop
js
cmpsb
in
cmc
push
pusha
adc
stc
popf
push
bound
dec
call
ret
movsl
jle
xor
dec
jb
jno
out
aas
out
mov
in
adc
adc
pop
sub
data16
sub
inc
pop
ds
dec
outsb
outsb
int
repz
and
scas
out
and
sub
xchg
stos
fists
jmp
dec
popf
fwait
jns
or
andb
xchg
flds
mov
push
in
push
cmc
test
sbb
icebp
mov
xchg
cmp
mov
push
andb
sbb
arpl
dec
sbb
inc
push
movsb
bound
fs
iret
movsb
sub
lods
cwtl
cld
xor
ja
sahf
or
je
fwait
stos
ret
outsl
xor
cmpsb
das
and
mov
cli
xor
or
jae
lret
dec
test
or
mov
adc
sub
mov
pop
or
sub
or
push
stc
mov
pop
popf
out
outsl
movsl
enter
rol
dec
jb
sti
xor
cmc
std
daa
cmp
and
add
pop
add
or
rorb
lock
dec
xor
shlb
mov
test
les
cmpl
sbb
shlb
test
pop
cmp
xchg
jge
and
jmp
xlat
or
cmc
ljmp
scas
pop
int
push
pop
in
fsubs
jno
xchg
in
cmp
fldenv
mov
sub
nop
les
pusha
daa
sub
push
xchg
cwtl
bound
std
xor
repz
jno
cmpsb
mov
or
cmp
fcom
jae
notb
pop
inc
popf
cli
or
push
sbb
mov
fadds
adc
lret
clc
mov
mov
cmp
jo
in
pushf
inc
aas
mov
mov
sbbl
mov
push
lea
pop
jecxz
ret
or
repz
xchg
dec
jnp
imul
jl
shr
push
lcall
dec
inc
int
adc
imul
jp
jge
mov
xlat
mov
ss
mov
inc
cmp
cmpl
ljmp
adc
push
inc
pop
xchg
add
ret
cmc
js
mov
sub
adc
jecxz
rclb
divl
add
jno
call
pop
push
xor
pop
in
jbe
pop
out
push
cmpb
iret
icebp
pop
push
or
hlt
loop
nop
push
jo
mov
dec
test
daa
add
lock
jns
adc
inc
add
cmp
sub
out
popf
rclb
mov
push
stos
gs
test
fmuls
push
push
sarb
or
iret
popa
es
mov
mulb
int
inc
lea
and
inc
sarl
out
rcrb
inc
mov
pop
or
jo
dec
sbb
sbb
loop
stc
cmc
outsl
gs
xchg
cwtl
dec
test
mov
popf
sub
jmp
sub
xchg
jno
into
and
pop
adc
pop
je
push
outsb
inc
fisubl
loop
jmp
jno
data16
into
jne
mov
mov
adcb
push
jbe
addl
jno
add
out
xchg
cs
pop
xchg
mov
sub
lea
int3
push
xchg
pop
lcall
mov
mov
mov
icebp
mov
push
add
lods
sub
push
inc
shlb
cs
fwait
enter
xchg
add
push
or
fistps
fstl
iret
lahf
adc
adc
repz
stos
pusha
insb
rclb
incb
negl
inc
aam
sbb
add
sub
xlat
cmp
jae
mov
repz
mov
cmp
jecxz
cmp
pop
fmul
ret
pop
aas
inc
dec
popf
in
addr16
fsubr
mov
jle
cmpsl
fcoml
cs
insl
aam
daa
ffree
xor
adc
mov
bound
ja
dec
and
push
addr16
mov
xor
out
xor
mov
inc
push
lcall
xor
or
mov
ret
pop
mov
adc
in
shrb
mov
nop
mov
insb
inc
testb
or
pop
ds
cmovns
sbb
cwtl
shrl
in
mov
jno
lret
out
sti
aaa
jg
push
pop
cltd
xchg
cmp
gs
aad
mov
mov
scas
jle
mov
cmc
dec
adc
sub
dec
cmovno
xor
xchg
or
in
inc
jbe
daa
and
call
fidivs
lods
adc
sbb
jo
sbbb
push
cmp
pop
and
jecxz
in
movl
clc
mov
and
push
je
stos
sub
sbb
mov
insl
imul
scas
scas
popf
add
xor
icebp
into
cmp
dec
jne
add
addr16
lods
or
popa
call
repz
mov
rcrb
push
aas
arpl
nop
lret
sahf
shlb
dec
mov
sub
mov
subl
fistpll
call
ss
sub
je
addr16
test
lods
or
mov
jp
mov
xchg
js
sbb
mov
mov
cs
push
sub
xor
push
test
cmpb
push
mov
aad
int
lcall
push
sti
mov
sbb
push
pop
sbb
mov
inc
test
xchg
lds
popf
mov
ficompl
push
enter
push
cltd
les
push
imul
and
fsubp
js
test
cltd
xchg
mov
mov
xor
bound
icebp
jno
fcom
mov
jae
loop
popf
jp
iret
jo
add
cltd
ret
les
scas
int3
push
pop
cmpsl
arpl
cltd
push
add
mov
add
fs
icebp
xchg
push
popf
push
add
inc
add
loopne
fs
sti
xor
sbb
dec
add
xor
mov
push
inc
adc
jl
add
lahf
adc
xor
dec
mov
and
jge
lcall
into
mov
enter
out
pop
cmc
sahf
or
or
or
sbb
mov
cmp
jle
xchg
scas
dec
adc
push
cmp
out
mov
cmp
xchg
cmp
mov
addr16
daa
xchg
pop
fisubl
lret
pop
bound
jbe
outsb
mov
call
lret
add
dec
and
fisubrl
mov
cltd
les
cld
out
add
xor
sbb
cmp
dec
mov
inc
dec
out
push
mov
sub
ret
mov
mov
push
jg
dec
fisubrs
roll
andb
sub
push
cmp
cwtl
jle
stos
mov
add
push
in
adc
fcoms
adc
cmp
xchg
in
ss
inc
ljmp
stc
sub
ljmp
adc
mov
fcompp
inc
imul
pop
pop
cli
stc
aas
pop
mov
in
fnstcw
addb
push
out
insb
scas
sub
add
mov
test
and
push
sbb
gs
jnp
in
mov
fstps
mov
cli
jg
ss
jmp
jle
xor
and
push
dec
push
dec
out
nop
repz
mov
out
cmp
jmp
inc
push
add
shlb
dec
stos
push
mov
add
jne
and
add
jl
fidivs
or
mov
sbb
push
push
in
cs
addr16
jmp
jl
mov
mov
push
sub
sbb
xchg
push
pop
mov
push
or
sub
insl
bound
vandnps
out
mov
push
jo
loop
orl
push
frstor
sub
sbb
fs
arpl
cwtl
cmp
nop
jae
dec
and
lcall
mov
push
add
loopne
es
scas
xorl
cli
rcr
rol
sub
push
xor
jl
xchg
loopne
sbb
in
ret
mull
mov
or
jno
jnp
dec
and
mov
add
fwait
rolb
push
pop
je
push
add
and
pushf
cwtl
rcr
ds
or
pop
add
sub
cld
lds
jmp
cmc
push
cli
pushf
sub
inc
scas
cmp
mov
scas
rcrb
or
pop
push
lods
fcomi
sbb
pop
stc
push
pop
add
mov
mov
mov
int3
sub
out
cmp
mov
repz
popa
sti
imull
pop
push
cmp
push
notl
shr
stc
into
iret
dec
in
rcrl
push
sbb
scas
or
mov
fcoms
cmp
test
jmp
mov
loope
sbb
adc
cmp
dec
mov
ficomps
sub
xlat
xlat
add
daa
mov
aam
aaa
js
ret
mov
adc
mov
pop
lods
fisubrs
cmp
testb
xor
xchg
xchg
bound
mov
dec
das
addr16
jae
cmp
cmpsb
xchg
pop
and
test
fadd
ret
pushf
jns
stos
add
xchg
push
add
into
aas
enter
fcmovu
xchg
inc
ud0
jg
lcall
cmp
inc
cs
pusha
mov
out
repnz
mov
cmp
into
pop
cli
mov
add
js
lret
cmp
pop
repz
in
mov
push
jge
cmc
xor
add
cmpsl
or
insl
cmp
jge
in
clc
enter
repnz
ret
lret
xlat
leave
cltd
gs
dec
pushf
mov
int3
int
pop
je
out
ljmp
fistpl
arpl
push
jle
jnp
push
popf
scas
and
jbe
jg
jl
sti
je
jecxz
in
jle
jmp
xchg
cmp
sahf
insl
loop
push
sbb
pop
in
test
out
out
add
sub
sub
cmpsl
mov
loop
inc
adc
data16
jne
xor
insb
adc
into
xlat
rol
push
push
fldl
int
pop
xlat
mov
xor
loopne
cmpsb
or
sub
pop
loope
sbb
jg
pop
mov
jp
xchg
rorl
faddp
test
mov
add
shrb
int3
loopne
push
enter
jmp
dec
lods
enter
loopne
clc
test
push
and
loop
mov
xchg
sbb
outsb
jge
pop
inc
xor
sub
fbld
scas
jle
imul
sarb
dec
test
cmp
sbb
sub
sbb
mov
xchg
fisttps
sub
sbb
sub
imul
repz
push
xchg
dec
ss
in
stos
aaa
xlat
cmp
mov
into
test
dec
stos
test
inc
push
jge
and
popa
int3
ss
adc
loope
push
mov
mov
inc
adc
mov
jns
xlat
js
test
xor
inc
xchg
sahf
cmp
mov
cmp
cmp
mov
test
mov
xchg
mov
arpl
rolb
jae
mov
mov
in
test
inc
dec
add
das
adc
out
movsl
dec
orb
pusha
imul
arpl
lcall
mov
out
mov
mov
jae
dec
mov
cwtl
xor
push
pusha
pop
ljmp
push
popf
sarl
negl
fbstp
pop
rol
in
or
loope
or
sti
inc
or
sbb
filds
adc
mov
scas
in
push
jl
mov
adc
mov
inc
clc
lahf
nop
movsl
addb
lahf
push
xor
cs
push
fmul
es
out
mov
push
pop
sub
mov
sub
imul
sbb
sbb
cmpsl
inc
add
int
pusha
rclb
adc
rorb
fstps
repz
rcrb
dec
mov
ret
subl
cli
mov
cmpsl
idivl
aad
mov
dec
cmp
andl
lahf
lods
ret
aam
pop
in
mov
jp
add
cmp
xor
int
adcl
test
mov
cmp
in
push
lret
sub
push
and
mov
nop
loop
mov
mov
repnz
add
leave
or
cmpsb
add
mov
cmp
pop
xchg
scas
out
jle
aaa
popa
imul
mov
add
push
xor
mov
cmp
xchg
xchg
xchg
jo
mov
hlt
dec
fidivl
jg
out
xchg
cmp
lods
adc
or
outsl
push
aam
sub
inc
xlat
fistpl
ja
pop
or
push
push
jo
mov
dec
inc
push
xchg
imul
je
xor
loop
in
inc
lea
test
cmpb
icebp
push
or
sbb
cs
out
pop
push
js
out
jne
inc
cld
push
jae
js
call
call
cmc
sub
fistps
pop
sar
xchg
inc
es
mov
jnp
icebp
cld
in
sub
shlb
lods
sub
lret
inc
adc
loop
jl
lret
jns
cmp
pop
mov
sub
xor
out
daa
xor
xor
lds
xor
int3
pop
in
out
mov
test
and
mov
xlat
das
pop
xor
loop
shrb
xchg
or
jnp
test
ss
xlat
sbb
xchg
popl
push
cli
inc
inc
mov
js
lds
in
mov
lock
sbb
push
push
sbb
push
das
repnz
fs
sbbl
out
ret
pop
repnz
jne
pop
pushl
push
push
xor
mov
insb
ljmp
fmuls
cltd
mov
aaa
pushf
add
sub
icebp
jmp
jge
jge
cmp
mov
push
push
into
std
lds
mov
test
push
jne
call
pop
filds
cmp
dec
or
adc
fwait
jmp
repnz
popa
scas
icebp
lret
wbinvd
mov
fcompl
sub
mov
lock
sarl
push
addr16
scas
repz
in
cmp
jns
push
lahf
sbbl
and
and
adc
out
sbb
pop
xchg
movsb
jb
adc
jp
lds
repz
jns
push
out
push
jg
cs
inc
es
dec
test
cli
lock
outsb
fcompl
mov
mov
out
mov
mov
xor
mov
jae
cmp
push
push
xor
inc
adc
sub
mov
add
jge
fnstcw
aad
jl
push
or
mov
cmpsl
aam
mov
pop
cmpsl
aam
daa
inc
cmpsb
shll
lahf
xchg
enter
and
sbb
xor
xchg
call
add
jle
leave
mov
jnp
lods
push
sub
dec
xchg
movsl
fimull
inc
ss
jno
sbb
sbb
shll
imul
mov
and
cmp
mov
clc
mov
mov
dec
xor
clc
dec
popa
imul
subl
fisubrs
sub
adc
test
push
mov
aaa
scas
sub
jo
mov
or
mov
rcl
pop
outsb
into
sub
pop
cmpsb
frstor
sub
lock
dec
cmp
popf
add
push
ficomps
or
mov
lahf
cmpsb
jnp
push
pop
xor
outsl
mov
sarb
adc
ds
fdivrl
mov
loopne
nop
and
fimuls
mov
pop
push
int3
outsb
mov
imul
pop
mov
sbb
pop
mov
shrl
push
jb
scas
push
inc
pushf
into
push
sar
aad
cmpsb
iret
dec
sbb
div
shlb
xchg
add
and
andl
push
pop
mov
cld
jmp
push
ljmp
pushf
out
scas
ss
shlb
mov
sarb
pop
je
fldcw
lcall
sub
add
shll
xor
insl
icebp
int
push
lods
aaa
mov
out
mov
ja
outsb
xor
push
inc
jae
test
imul
adc
pop
shl
push
fwait
aaa
mov
iret
inc
pcmpgtw
push
mov
push
test
mov
ja
fpatan
loop
push
ds
sub
loopne
jl
clc
dec
dec
stos
jo
fsubl
fcoms
mov
mov
cmpsb
shlb
push
sbb
addr16
add
ret
add
mov
mov
xchg
nop
jp
mov
lods
xor
add
and
rorl
das
dec
aas
mov
cmp
iret
pushf
fdivrs
add
pop
dec
mov
mov
das
xchg
inc
mov
fdivrs
popa
fiadds
push
aad
in
sbb
leave
stc
fisubrs
xor
jl
test
aaa
or
jb
push
pusha
lods
cmp
fidivs
in
mov
data16
out
xchg
insl
xchg
sbb
or
inc
push
fidivs
sarb
push
push
xor
xor
pop
jmp
dec
mov
add
shlb
call
mov
or
popf
aam
out
fs
adc
daa
popf
add
sub
cld
mov
pop
push
and
jae
xor
jg
mov
adc
fs
movsb
jb
pusha
imul
fmul
enter
fildl
das
mov
and
in
lods
sub
xor
or
push
mov
hlt
inc
cli
nop
fcoml
iret
sbb
xchg
adc
dec
sbb
loopne
jne
sub
test
fcoml
or
lahf
push
fisttpl
ret
arpl
ljmp
xor
ss
dec
push
mov
fisubs
or
pop
push
adc
pcmpgtb
cwtl
jl
or
cmp
sbb
pusha
loop
dec
movsl
enter
add
push
adcl
sbb
inc
test
or
in
mov
pop
cwtl
adc
jnp
xchg
adc
jmp
int3
pop
push
repz
rcl
es
jae
popf
out
repz
stos
adc
cmpsb
add
xchg
sub
repz
push
sbb
aaa
ficompl
mov
mov
outsb
push
mov
cmpsl
mov
mov
or
loop
out
dec
imul
sub
and
jbe
push
stc
jo
roll
push
jne
inc
push
mov
adc
popa
push
lret
inc
lds
xor
scas
push
es
push
xor
pop
lcall
aad
jb
fnstcw
mov
cmpsb
loopne
jmp
enter
test
mov
inc
sbb
inc
in
mov
pop
getsec
cmpsb
aam
push
xchg
xchg
loop
stos
xchg
mov
and
mov
xor
mov
pop
out
jl
or
jmp
cmp
jno
mov
jge
es
cs
and
xchg
roll
aaa
mov
push
insl
push
mov
shl
xor
popf
fldenv
and
push
rolb
arpl
out
fiadds
mov
pop
and
loope
mov
sbb
repz
mov
in
mov
fcomps
push
push
sbb
push
inc
imul
scas
cwtl
jo
jecxz
test
mov
or
test
test
stos
into
out
or
push
jl
stos
popf
std
pop
mov
push
dec
add
cmpsb
xlat
aas
mov
cld
pop
aaa
xor
sub
sub
xchg
adc
loope
sub
pop
outsl
push
adc
or
lcall
loop
gs
pusha
dec
imul
fcoml
out
fs
pop
sbb
push
mov
dec
dec
ficoms
xchg
cmpb
jo
push
push
imul
push
add
fucomi
mov
fstps
orl
xchg
jl
test
addr16
clc
xchg
add
sahf
aad
daa
mov
insb
fsubl
sub
cmp
repnz
pop
push
inc
push
in
sub
dec
cld
add
hlt
test
cmp
jbe
stos
ffreep
nop
jbe
push
shlb
xor
add
push
mov
jg
je
in
dec
mov
outsb
sti
pushf
add
sahf
and
cmpb
or
jmp
adc
mov
jle
xchg
cmpsb
xor
shrl
enter
sub
inc
fisubs
lds
pop
mov
mov
mov
mov
xor
ds
lcall
mov
cmp
xor
sbb
repz
ficoms
inc
pop
stos
pop
cli
scas
adc
jle
mov
cmc
in
cli
mov
dec
sarl
sbb
arpl
adc
sbb
and
jbe
rcrl
add
js,pt
pop
mov
inc
sub
movsl
cs
dec
xchg
push
inc
jmp
sub
xor
insb
adc
and
mov
push
leave
adc
testb
bound
into
imul
mov
lcall
inc
sbb
shlb
cld
jg
dec
sub
or
rorb
shrb
loope
sahf
into
jecxz
adc
or
dec
std
aam
int3
mov
dec
jmp
mov
hlt
pop
sbb
and
mov
pop
aad
fdivs
cmpsl
sbb
daa
sbb
mov
shl
adc
push
or
iret
mov
jo
jge
jbe
pop
xchg
cmpsb
cmp
sbb
cmp
es
sub
ds
mov
arpl
push
iret
push
sbb
outsl
test
pop
call
push
rorl
movsb
daa
xor
cmp
or
cmpsb
rorl
adc
dec
mov
out
push
in
shlb
push
testb
pop
nop
popa
mov
xor
jo
stc
out
mov
push
xchg
je
ja
xchg
daa
outsl
xorl
pop
shll
sbb
sub
pop
sbb
cmpb
dec
push
sub
mov
fnstenv
jno
imul
mov
data16
arpl
lret
inc
xor
sbb
ljmp
push
out
pop
iret
cwtl
sbb
fs
sarb
in
cmp
stos
std
jp
xchg
xlat
fwait
cmc
roll
xchg
add
push
mov
inc
pop
lds
cmp
pop
stos
jmp
push
jp
adc
jo
andb
mov
adc
sub
fisubl
shl
lock
push
push
push
push
jmp
xor
mov
inc
enter
cmc
scas
fisubrl
fisttpll
pop
jge
xor
push
lods
mov
push
inc
push
add
pushf
and
pop
xor
xchg
std
test
lcall
or
dec
and
and
in
mov
shl
repz
cmp
pushf
dec
lods
pop
cwtl
in
mov
and
sub
iret
dec
or
mov
ret
lods
bound
sbb
cmp
dec
in
xor
cmpb
je
inc
jmp
loope
pop
mov
mov
adc
lret
cmpsl
jb
bound
adc
sbb
rcll
shlb
push
lods
test
xor
filds
push
push
fcoml
ljmp
movsl
mov
sti
lds
movsl
jp
inc
scas
dec
movsl
es
mov
pop
pop
or
repnz
xor
int
and
int3
insl
popl
fmuls
enter
mov
andb
cli
faddl
jnp
pop
outsl
fcomps
testl
aam
test
lahf
sbb
jne
dec
in
mov
jns
stos
mov
paddsw
call
lock
dec
sub
push
jp
in
mov
cmp
lods
movsl
ja
or
push
xor
test
outsl
jecxz
nop
cmpsl
mov
inc
pop
mov
fidivs
mov
test
jmp
add
dec
movsb
test
inc
scas
jmp
sahf
shlb
push
cli
repnz
frstpm(287
mov
inc
ret
adc
sbb
mov
dec
ret
mov
es
mov
pop
enter
pop
xor
dec
mov
imul
and
xchg
leave
xchg
fwait
jns
sbbl
push
and
enter
aam
ret
fidivrs
add
xlat
push
or
ss
mov
rorb
add
jb
ja
sbb
je
mov
data16
mov
lcall
jp
push
stos
stos
adc
out
call
push
cmpsl
mov
dec
xchg
aaa
cmpsb
clc
outsl
jnp
inc
jge
push
jns
rorb
pop
xor
leave
gs
fsts
xchg
pop
mulb
add
jmp
mov
inc
rorb
adc
out
insl
cmp
daa
sar
and
ds
in
orl
mov
stc
bnd
push
xor
sub
imul
jle
out
movsl
adc
out
mov
and
les
lret
out
jo
push
cmpsl
scas
mov
psraw
popa
push
pusha
aas
jp,pt
divb
iret
add
js
or
sub
popf
inc
mov
fwait
lds
lahf
ljmp
inc
dec
sub
adc
test
and
or
data16
out
mov
and
test
int
scas
out
lret
mov
into
imull
in
insl
xchg
mov
jne
inc
lret
and
mov
arpl
mov
cli
leave
icebp
fdivl
scas
or
xor
add
mov
mov
jp
xor
sarb
out
adc
outsb
fbstp
outsb
shl
mov
in
imul
lea
mov
int3
dec
mov
scas
cmc
pop
outsb
sti
out
mov
imul
fidivl
or
xchg
mov
outsl
stos
fsubs
fdivrl
in
rol
mov
jg
in
imul
jge
bound
fcompl
ror
pop
pop
push
lahf
inc
js
imul
mov
sbb
sahf
mov
or
imul
dec
outsl
lds
inc
cwtl
adcb
aad
xchg
fiaddl
mov
dec
sahf
js
into
int
cmpsl
lret
ss
push
xchg
jle
inc
inc
frstor
ret
js
mov
nop
inc
lods
mull
jg
dec
cmc
jbe
mov
jbe
mov
pop
or
dec
rcrl
cmp
cmp
lock
xchg
push
cmp
jl
in
push
adc
mov
push
jge
xchg
mov
pushf
dec
lcall
xchg
xor
sbb
sub
ljmp
mov
add
xchg
adc
inc
cmp
add
bound
test
sbb
jmp
into
mov
cmc
and
sub
xchg
sti
sahf
jo
adc
mov
xchg
sti
sub
mov
testl
loopne
cmp
fmulp
rorl
daa
test
cmpsb
mov
mov
adc
mov
push
pop
gs
outsb
adc
push
lods
mov
addr16
out
pop
clc
lods
pop
icebp
and
loope
cmc
inc
shll
jbe
aas
out
gs
cli
stos
xchg
mov
adc
in
outsb
scas
lods
xchg
in
scas
jle
xchg
call
pop
mov
mov
push
jns
aas
ds
xor
divb
jae
xchg
imul
push
fsubrs
call
test
pop
int3
inc
pop
popl
cld
xchg
or
sbb
out
dec
fwait
in
ljmp
jle
xor
mov
mov
subb
or
inc
icebp
mov
scas
lea
shlb
out
sbb
mov
fidivs
aaa
mov
jae
dec
mov
leave
jecxz
push
hlt
xor
xor
sbb
repz
ret
das
xor
sbb
in
and
das
mov
mov
call
inc
or
adc
bound
push
sub
subl
pop
aam
sbb
stos
int
loopne
cli
je
gs
enter
fnstenv
fwait
rcrb
stc
out
dec
and
je
sbb
jge
inc
sbb
out
out
fcomip
testl
xor
jnp
lret
push
adc
adc
insl
insb
xchg
mov
daa
fidivrl
cmp
and
dec
nop
gs
out
xchg
pop
cmp
xchg
jl
sahf
mov
sbb
dec
inc
fcomp
pop
push
and
or
insb
int
lret
inc
imul
mov
dec
xchg
push
arpl
inc
mov
cmp
test
je
mov
jo
stc
xor
leave
fstpl
adc
ss
mov
bound
push
leave
jae
iret
je
xor
ljmp
popa
js
outsl
sahf
jns
sub
scas
jae
inc
xor
jbe
sbb
aas
lods
andb
in
jns
sahf
pop
mov
dec
jnp
and
sbb
fistps
cmpsb
adc
mov
imul
push
xbegin
dec
rcrl
mov
jecxz
rcll
and
pop
es
add
sub
jp
or
mov
jmp
popa
pusha
mov
je
in
fiadds
decl
sbb
stc
data16
add
mov
pusha
inc
mov
daa
jp
or
and
mov
push
data16
mov
je
mov
sbb
les
xchg
dec
xlat
dec
xchg
imul
cmpb
rolb
scas
xlat
aam
jg
push
mov
sub
pop
stos
icebp
push
pop
pop
pop
fucomp
dec
hlt
pop
push
mov
cmp
xchg
faddl
jp
lods
mov
push
mov
out
shlb
inc
mov
popf
mov
mov
fcoms
mov
add
adc
nop
or
push
das
inc
mov
mov
mov
jp
arpl
jl
test
lea
rolb
repnz
and
and
scas
dec
pop
xor
dec
pop
aad
mov
mov
jbe
sub
dec
in
ret
lcall
mov
cmp
pop
cld
xchg
lock
jge
fwait
mov
aas
in
insl
push
add
stos
subb
nop
test
stc
das
cmp
imul
add
mov
cmp
shrl
data16
and
pop
imul
in
mov
xor
sub
out
jecxz
popf
cmp
enter
lret
scas
decl
mov
leave
mov
loope
aam
xor
mov
jb
rorb
bnd
pushf
jmp
das
loope
stc
or
push
js,pn
xor
pop
in
loope
stos
mov
cs
cmc
mov
wbinvd
add
sbb
clc
cli
call
cmc
int3
or
in
test
rol
ds
fs
popa
or
dec
mov
xchg
mov
pusha
sbb
sbb
xor
fdivs
loop
mov
push
mov
jmp
idivl
std
addr16
lock
xchg
inc
push
mov
or
insb
jns
loopne
jp
fnop
mov
test
clc
jecxz
cli
adc
cmp
jbe
xchg
cmpsb
dec
jbe
addr16
adc
call
jle
ljmp
jo
mov
in
jbe
lret
or
mov
mov
inc
adc
and
std
test
adc
pop
sub
sbb
cld
pop
popa
outsl
inc
in
loopne
jge
sbb
int3
push
mov
test
adc
mov
mov
xchg
insb
outsl
push
push
pop
int
sub
xchg
push
pop
rcrb
mov
inc
hlt
jl
jae
rcrb
dec
sbb
mov
test
and
dec
dec
add
out
rorb
mov
clc
test
add
jno
xchg
shlb
in
imul
lods
orl
add
loop
int
rorb
cmp
jmp
dec
iret
in
outsb
adc
mov
call
fsubrs
dec
std
xor
sbb
push
sub
in
inc
test
or
imul
mov
adc
mov
cltd
mov
mov
cmp
mov
sbb
push
cwtl
arpl
cmp
cwtl
push
push
lea
pop
movb
xor
fiadds
scas
mov
cld
mov
push
lods
es
lret
xchg
cld
xchg
inc
push
outsb
add
and
aas
movsb
xchg
imul
mov
mov
into
push
sub
pop
sahf
xchg
adc
out
sbb
inc
jns
repz
push
pushf
jns
xchg
xor
test
xlat
sarl
nopl
pop
in
adc
mov
out
lret
cld
out
jp
xchg
inc
rcl
xchg
mov
inc
push
mov
incb
icebp
sub
mov
fisubl
pop
addr16
push
clc
adc
cmp
in
js
lods
sbb
mov
push
adc
ja
pop
inc
orb
pusha
mov
test
dec
lea
jp
mov
das
jge
pushf
push
xchg
or
push
mov
aam
jbe
mov
icebp
and
scas
mov
pop
insb
xchg
imul
xchg
rcr
sti
add
sar
test
sbb
cmp
and
and
pop
and
xchg
test
nop
mov
inc
imul
cmp
sahf
call
jnp
sub
shrl
and
lahf
les
cmp
lock
outsb
shr
lcall
and
sbb
dec
jge
ret
or
int3
sub
int
dec
xchg
repnz
inc
pop
test
pop
ret
cmp
jmp
push
ja
cwtl
push
dec
arpl
xchg
ret
mov
or
out
mov
xor
lret
and
jp
push
in
inc
das
out
cltd
inc
loop
inc
inc
shll
xrelease
sbb
movsb
cmp
cmp
pusha
adc
lods
dec
mov
or
lods
xor
fcoms
lret
clc
call
rorb
xor
mov
sbb
mov
cli
add
pop
inc
testb
mov
into
mov
call
push
lret
scas
mov
xor
in
test
xchg
cmp
adcb
lcall
sub
mov
sub
repz
inc
leave
pop
cwtl
push
cmp
xchg
aaa
xchg
movsl
push
push
push
push
mov
ror
cmp
or
mov
call
cmp
push
add
cmc
pop
iret
mov
xchg
scas
outsl
xor
or
cwtl
dec
rcrl
push
jns
add
xchg
xor
stc
mov
lds
icebp
cmp
fildll
xor
hlt
sbb
mov
push
cmpsb
ret
jb
or
xchg
lcall
adc
dec
insb
in
pop
in
mov
add
sub
jo
or
push
jnp
sbb
inc
or
icebp
dec
mov
lods
fcompl
and
xor
push
sahf
mov
js
dec
sbb
stc
shl
cmp
pop
bswap
add
mov
jp
or
fs
push
push
popa
loop
add
jae
add
fmuls
or
sub
push
cmc
jmp
or
cmc
adc
add
xchg
fdivrs
sub
mov
into
push
inc
aas
pop
and
sbb
mov
mov
jo
pop
subl
xor
jno
and
mov
xor
xor
pop
lahf
push
mov
inc
pop
cmpsb
popa
push
push
mov
push
test
imul
test
cmp
call
jge
mov
inc
push
bound
adc
int3
cmp
jecxz
daa
and
inc
pushf
jp
xlat
fsubrl
lods
cmp
adc
scas
sbb
iret
ja
ja
cmp
sbb
or
adc
add
xor
xchg
outsl
ja
jnp
pop
out
mov
cmp
shr
sub
shlb
stos
cmpsb
mov
mov
push
int3
add
aas
out
cmp
xchg
xor
or
add
adc
stos
sbb
bound
inc
jecxz
jo
movsb
outsb
iret
mov
sti
inc
in
arpl
outsb
mov
in
ret
and
sbb
mov
and
xor
dec
mov
out
in
movsb
mov
loopne
enter
inc
pop
push
mov
lcall
cld
popf
sbb
scas
bound
fldenv
add
cli
out
mov
cmpsb
jmp
leave
inc
jmp
push
nop
xor
push
test
pop
dec
push
repz
xor
dec
fmull
in
cmp
push
xchg
cwtl
aad
and
ret
mov
pop
and
xchg
stos
mov
aaa
xor
mov
out
fnstcw
cmp
cmpsl
movsb
xchg
lods
call
loope
and
out
xor
insl
stos
test
cmp
ltr
xchg
pop
xacquire
in
cmpsb
dec
das
xchg
jne
lahf
ljmp
pusha
fdivr
aaa
imul
out
fisubs
popa
or
mov
movsl
cli
adc
and
sbb
add
ret
lret
ja
lahf
movsb
xchg
push
lcall
xchg
push
pop
fsubr
int
fsubrs
imul
mov
or
das
jae
inc
xor
xchg
int3
fnstcw
mov
stc
add
rcl
scas
adc
pop
or
rcr
add
sti
jl
dec
ret
xchg
das
int
data16
movsb
pop
rcrb
sbb
inc
test
or
sti
stos
or
push
int3
daa
mov
arpl
and
pop
dec
gs
stc
adc
push
jbe
dec
cwtl
pop
dec
jmp
sub
insl
fidivrl
cmpsb
inc
push
adc
cli
add
pusha
or
imul
cmc
faddl
inc
gs
pusha
outsl
lods
rcl
adc
jg
fucom
and
sbb
js
push
mov
popf
dec
not
mov
mov
ss
jg
fcoms
jbe
fs
pop
or
pop
das
stos
in
ss
outsl
sub
lcall
push
outsl
jb
fists
jbe
addb
cmp
xor
bound
push
fists
mov
ss
cs
add
sub
data16
or
adc
jmp
test
jge
jmp
mov
dec
imul
cmpsl
cmc
and
xchg
sub
cli
jmp
and
std
add
test
push
adc
mulb
repnz
cmp
hlt
in
mov
jae
cmp
aas
and
sbb
pop
cmc
shll
ret
inc
inc
jle
mov
xor
andb
sbb
jae
or
cs
repnz
cmpsb
jb
mov
in
cmc
aas
stos
mov
in
sub
sub
xchg
daa
cld
xchg
stc
pop
fbld
les
sub
leave
into
test
imul
push
jns
sbb
lods
xchg
sbb
or
push
adcb
mov
into
xor
jp
stc
movsl
mov
aam
xchg
repz
movhlps
popa
cmp
inc
xchg
adc
pop
sahf
push
pop
imul
cs
imul
out
aas
and
adc
cmp
fcmovb
mov
out
mov
sub
cmp
push
seto
fsubl
sub
sub
lea
mov
adc
enter
cltd
aam
xor
mov
cld
fwait
cmp
jecxz
shrl
lock
data16
jecxz
test
popa
cmpsl
mov
movsl
sub
adc
fistpll
mov
mov
fisubrl
pushf
ds
inc
pushl
sub
es
dec
out
adc
popa
les
dec
xchg
mov
and
faddp
push
cltd
inc
jae
in
fcoms
jle
inc
xchg
and
mov
and
mov
push
sub
out
sub
and
pushf
icebp
cmp
mov
cld
into
pop
sub
sbb
sub
nop
add
push
lcall
ljmp
and
cld
mov
outsl
xor
xchg
pop
cmp
cltd
push
aas
lods
popf
inc
cmp
movsl
adc
xor
test
imull
sbb
push
out
stc
fisubl
jge
fdivs
push
or
in
outsl
es
stos
loope
push
ljmp
loopne
int3
sbb
scas
inc
mov
xor
push
mov
and
scas
test
cmpsl
aaa
mov
test
rorb
sub
sub
or
outsb
sti
pop
push
push
cli
fildll
std
lods
lcall
xchg
add
hlt
inc
pop
mov
inc
lret
lret
and
ret
or
cmp
mov
int3
push
dec
mov
imul
adc
sahf
or
cs
dec
xchg
sub
mov
jne
dec
mov
xchg
cmpl
inc
inc
insl
inc
dec
mov
or
popa
or
int3
push
loop
lds
shrb
fstps
pop
insl
jp
repz
pop
pushf
adc
lods
jne
outsb
cli
sti
test
cmp
scas
mov
not
push
xchg
pop
es
arpl
jns
or
cmp
xlat
test
repz
inc
dec
call
adc
xchg
sub
stos
mov
jae
sub
push
lea
cwtl
fisubrl
scas
mov
mov
test
aam
or
cwtl
shlb
lods
cmp
inc
adc
xor
lret
push
loop
ret
jge
mov
xlat
cli
mov
nopl
mov
aad
inc
lods
in
sub
sbb
mov
and
xor
xchg
cmp
or
pop
fmull
js
jmp
dec
adc
fcmovnu
pop
mov
ja
dec
inc
adc
sbb
push
push
inc
cmp
xlat
and
or
iret
xchg
into
jo
cmpsw
arpl
xchg
gs
sub
jno
jmp
add
xor
je
clc
imul
xlat
scas
and
outsb
cmp
mov
push
icebp
pop
sbb
mov
push
out
cwtl
mov
jl
mov
xor
movsl
push
lret
or
mov
push
aad
and
or
mov
mov
repnz
cld
inc
pop
push
pop
add
pusha
test
js
inc
sub
nop
mov
outsb
mul
aas
mov
fisubrs
flds
jnp
adc
or
sti
pminub
dec
cmpw
cmp
test
or
push
test
test
mov
cmp
or
fidivrl
dec
repz
add
pop
lea
adc
mov
adc
jae
inc
mov
xchg
mov
sbb
sahf
punpcklwd
push
lock
push
or
hlt
pop
sbb
pushf
and
lret
dec
fwait
sub
repz
dec
les
out
ss
xor
leave
mov
xchg
nop
lds
add
mov
and
lahf
pop
in
lahf
dec
adc
stos
stc
add
jecxz
and
jb
xchg
push
lahf
pop
sbb
ror
pop
cmp
or
fcompl
out
leave
pop
shr
push
inc
mov
jl
inc
push
xlat
xor
cmpsl
fcoms
cmp
jge
inc
jecxz
push
jle
cmp
test
out
fsubr
inc
mov
ljmp
mov
das
pop
and
jae
pushf
addr16
pop
push
popa
fldenv
cmp
sbb
call
addr16
fists
mov
cli
mov
mov
sub
fneni(8087
or
inc
inc
lahf
sub
xor
fiadds
aad
mov
sbbb
out
int
adc
test
xchg
mov
jl
push
xchg
xor
inc
push
and
lock
xchg
repnz
adc
out
out
push
cld
mov
sub
fdiv
lret
adc
jbe
jne
fadds
jb
or
nop
les
adc
int3
mov
push
xchg
jns
outsl
mov
inc
jb
js
dec
inc
and
lods
cmp
lock
xchg
enter
cmp
adc
push
xor
hlt
jae
rep
pop
lret
mov
xlat
pcmpeqb
cld
stos
ret
xchg
testl
dec
rcrl
xchg
les
xlat
adc
lahf
lret
jne
or
push
das
cmp
sahf
xor
xor
jns
sbb
push
data16
jecxz
pusha
cmpsb
jg
cmp
adc
push
push
repnz
int
adc
mov
inc
sub
dec
sub
mov
pusha
out
xchg
push
fsts
in
cmp
and
add
cmp
cmp
mov
imul
stos
jns
sarl
sbb
adc
arpl
outsb
jno
sbb
pop
enter
lret
or
out
je
mov
jb
add
sub
out
jmp
lods
mov
inc
cmp
jnp
or
jecxz
jno
negb
push
jge
push
inc
push
xor
out
mov
jo
and
cwtl
push
jo
cli
shlb
ja
cmpsb
in
sbb
test
rcrl
push
adc
stc
std
out
mov
clc
insl
stos
mov
mov
adc
shrb
sub
out
out
dec
mov
ljmp
pop
out
icebp
cld
cmp
nop
and
jg
mov
cmpb
mov
scas
out
sub
adc
jp
daa
ret
jns
nop
daa
fucomp
fwait
inc
jge
sbb
xchg
int3
popa
pop
adc
movsl
pop
mov
repz
pushf
pop
xchg
pop
mov
or
dec
push
pusha
adc
cmc
sbbb
push
fisubrs
mov
dec
pop
lret
in
mov
mov
pop
add
ficoml
inc
or
test
aam
stos
xor
sbb
jg
pushf
add
pop
pop
fimuls
mov
and
daa
fldt
mov
loopne
loop
mov
rclb
and
sub
add
hlt
das
push
fs
mov
lahf
loope
iret
outsl
cmp
jl
mov
nop
sub
loop
cltd
sbb
enter
xchg
sub
xor
mov
inc
xchg
lret
jo
sub
inc
mov
dec
sbb
inc
test
xor
xor
xchg
xlat
inc
adc
dec
jae
mov
test
ret
out
stos
jle
adc
in
addr16
inc
dec
jno
scas
jae
push
dec
ret
jl
lea
pop
mov
push
push
js
mov
out
jns
and
mov
mov
pop
call
sub
cmp
imul
out
mov
push
les
push
ljmp
imul
and
lods
jbe
push
test
lcall
in
xor
mov
pop
dec
cmp
dec
jno
rclb
jmp
push
and
lahf
sub
xor
or
mov
push
dec
aad
ds
idivb
cwtl
jle
xor
xchg
inc
mov
out
aad
cs
inc
sarb
div
fucomp
pop
rorl
mov
sub
add
xchg
adc
pop
out
test
jp
mov
stc
add
aaa
aaa
adc
ljmp
scas
fmulp
fcmovnu
cwtl
add
cmp
cmpsl
cmpsl
clc
inc
je
jbe
or
mov
rorl
xchg
dec
ja
scas
test
push
cs
mov
mov
inc
mov
cmpsl
shll
adc
sub
jg
sub
fld
test
pop
and
mov
inc
sbb
repnz
pop
cmc
in
hlt
pushf
scas
dec
dec
ja
rcr
shlb
sbb
jge
mov
push
jg
jno
testb
add
pushf
cli
shr
push
les
lcall
and
cmp
rorl
pop
cs
jg
xor
lock
pop
int3
pop
push
pop
lcall
mov
jl
outsl
cs
adc
sbb
cmpb
ficomps
push
pop
jbe
outsb
into
in
mov
bound
mov
adc
or
js
fsubr
or
push
adc
mov
xor
sbb
mov
lret
mov
push
rolb
es
xchg
jmp
lahf
push
call
fnsave
cmp
adc
push
and
aad
popf
or
cwtl
mov
in
clc
or
adc
mov
or
subb
and
sub
dec
movsb
pusha
push
lods
cmpsb
add
pop
daa
jnp
mov
pop
inc
push
aad
jbe
pop
pop
bound
fldenv
push
sar
cmp
mov
fsubs
push
mov
loop
dec
inc
gs
ss
adc
xchg
popa
aas
sti
add
adc
mov
ljmp
cmpb
xchg
adc
push
or
inc
cmpsb
push
add
xor
inc
cmp
pop
mov
rcrb
cmpsl
cwtl
jbe
mov
js
mov
pop
outsl
jp
xchg
imul
jns
jno
fimuls
mov
arpl
xchg
mov
inc
jb
into
sbb
js
cmc
push
dec
mov
popf
xor
mov
mov
shrb
inc
adc
adc
pop
bound
insl
test
out
pusha
sti
fldenv
into
and
adc
push
cltd
mov
jns
jg
mov
stos
js
mov
cwtl
jnp
dec
je
outsb
mov
les
or
leave
push
jp
dec
in
xor
rol
or
movsb
adc
add
sub
addr16
mov
xchg
xor
cmp
subb
sti
adc
or
mov
cmp
shll
sub
or
push
rcll
aas
ss
dec
cs
testb
xor
add
jns
pushl
xchg
sbb
les
hlt
jmp
mov
xor
fsubl
shl
imul
dec
and
xor
jne
sti
xchg
aas
inc
and
std
adcb
mov
push
cmp
or
in
std
ss
dec
jmp
jle
cmp
aad
mov
pusha
test
repnz
jo
jmp
xchg
xchg
lds
cmp
fsub
dec
lret
loop
inc
int3
iret
mov
cltd
mov
pop
aaa
pop
in
sahf
jl
cmp
mov
xchg
push
jmp
mov
lods
pusha
arpl
fdivrp
xchg
push
xor
data16
mov
int
divb
sub
in
dec
imul
sahf
xor
and
fdiv
mov
cmp
push
mov
adc
test
add
mov
adcl
fprem1
cmpsl
cmp
sbbb
out
add
cli
add
mov
sbb
jb
jne
lods
mov
jns
and
dec
shll
and
sbb
mov
jb
sbb
cmpsl
int3
pop
pop
jmp
std
aad
mov
xor
in
push
sbb
mov
cs
fistps
pop
cltd
test
jp
lret
mov
aaa
aas
pop
mov
add
xchg
mov
sahf
mov
sub
out
testb
icebp
mov
in
cs
nop
pop
pop
enter
insl
popf
loope
fcomps
out
inc
adc
test
mov
jmp
mov
loope
inc
inc
xchg
and
test
xlat
sarl
adc
or
push
subb
js
mov
pop
jnp
mov
rorb
sarl
mov
adc
mov
dec
fists
test
aad
dec
xchg
fs
sbb
lods
lea
cmpsl
jl
push
jl
aam
je
inc
cmpsb
shl
jmp
incb
insl
popa
pop
xchg
test
int3
js
jae
test
loopne
mov
hlt
xor
clc
std
cmc
mov
stos
addl
add
rorb
rol
push
mov
imul
push
clc
bound
jns
push
fs
cmp
push
push
sbb
mov
jl
leave
xor
jg
call
aad
shrl
jne
add
push
xlat
sahf
shrl
add
loopne
aaa
lret
out
dec
out
xchg
push
stc
lahf
jns
shll
mov
jmp
pop
cltd
insl
insb
jno
or
clc
out
cmp
jmp
stc
popa
stc
mov
jmp
fidivrl
or
inc
daa
adc
jnp
jbe
inc
add
popf
aad
scas
orb
divl
cmp
jae
xchg
daa
dec
cmp
test
leave
out
adc
or
mov
cmc
push
int3
sarb
cmpb
lods
add
inc
jmp
dec
out
ljmp
and
mov
sbb
lds
cmpsl
adc
sub
xor
cld
inc
stos
mov
pop
jg
out
data16
adc
enter
mov
pop
cld
jmp
push
out
lock
cli
sbb
stos
add
inc
popf
out
clc
mov
push
cwtl
pusha
in
push
ds
dec
or
sarl
repz
add
lret
and
je
das
insl
mov
in
mov
xchg
lods
movl
jne
and
and
push
ret
rolb
pusha
lock
sub
xor
sbb
popa
or
jge
inc
pop
repnz
mov
sbb
mov
shl
das
les
pusha
ss
add
mov
call
and
aad
fistl
loop
or
lea
test
sub
rcrl
push
push
pop
imul
int
hlt
aas
dec
mov
lds
sbb
js
cmp
pop
fs
sub
test
fistps
into
ljmp
adc
jp
out
ret
cltd
xchg
pushf
loop
mov
xchg
adc
test
jmp
xor
ss
fldl
rcr
imul
push
push
pop
loope
add
aaa
ja
add
dec
test
into
lcall
fsubl
hlt
sbb
js
mov
cmpl
jecxz
clc
cmp
in
mov
fcomps
cwtl
ficoml
out
outsb
cwtl
jmp
sbbl
aam
xchg
mov
dec
mov
cmp
bound
xor
mov
jne
js
pusha
ret
jle
cvttpd2dq
jae
cmp
imul
aas
push
sbb
add
or
rcrl
xchg
icebp
in
xor
ret
adc
cmp
fcmovu
data16
sub
mov
insl
out
out
mov
jmp
scas
sub
sub
xchg
repz
jg
lret
xor
call
inc
xchg
add
sbb
pusha
into
repnz
ljmp
stos
lods
mov
lock
or
sub
popa
jmp
xlat
cltd
imul
fldt
xchg
hlt
xchg
xor
cmp
fnstsw
aad
je
dec
cmc
movsl
stos
lcall
adc
cs
dec
cmpsl
ret
movsl
push
addb
adc
daa
xor
and
mov
push
add
sub
addl
push
adc
push
adc
int
int
out
daa
int
push
orb
push
subb
push
xchg
jns
leave
lret
fs
test
and
addl
sbb
jns
in
aas
inc
lock
cmp
addl
or
cmp
adc
xlat
jns
inc
dec
divb
push
push
daa
std
cmpsb
sub
enter
and
lods
jg
xor
cmp
dec
fwait
push
mov
inc
mov
xchg
mov
pop
jns
and
sub
mov
ljmp
hlt
repz
push
out
fnstcw
sbb
jmp
adc
ljmp
jmp
and
xor
jp
jnp
lahf
lock
ficomps
inc
pop
xchg
pop
xchg
insb
insb
pushf
flds
jb
jmp
out
lret
out
jp
jecxz
jge
jno
cld
xor
es
dec
pop
cmpl
stc
inc
push
sub
xchg
push
stc
shlb
mov
xor
jp
pop
jge
add
daa
in
xor
insb
sahf
cmp
inc
mov
sub
xchg
sub
loop
in
cwtl
push
jnp
cmp
and
and
cltd
fcomps
pop
cli
cmp
ja
cltd
ljmp
jne
decb
or
jb
push
mov
sub
js
mov
cmp
push
jg
pop
xchg
ljmp
sti
jecxz
sub
cmp
jmp
xchg
es
inc
outsb
mov
mov
fimull
sub
loop
test
mov
jb
pop
lods
inc
adc
xor
xchg
iret
sub
jnp
addr16
repz
ss
fstpt
js
pop
push
jmp
iret
or
sarl
xchg
shll
lock
adc
inc
ljmpw
mov
or
mov
mov
leave
shll
je
sub
jmp
testl
sbb
inc
fwait
je
push
push
loopne
jbe,pn
sub
push
data16
gs
cmp
icebp
xor
aam
sbb
jge
xor
lcall
cmp
jg
adc
or
xchg
and
or
idivl
adc
push
loope
pusha
insb
sbbl
mov
push
cmp
fs
ficoml
jbe
and
push
sbb
lods
int3
std
repz
mov
in
cmpsl
push
add
dec
jp
mov
sub
jge
popf
pop
sub
mov
data16
add
lods
into
lret
lret
popf
and
outsb
rcr
call
lcall
cmc
mov
insl
nop
cmc
rcr
outsl
jnp
push
mov
sub
popf
incl
cld
addr16
into
dec
fnstenv
cld
push
jecxz
test
adc
mov
push
aam
mov
fnsave
mov
loope
les
pop
pop
aaa
push
and
lahf
push
inc
cmp
outsb
rorl
jnp
inc
mov
push
je
push
push
sahf
js
insl
cmp
jmp
imul
dec
xchg
test
fnstenv
sbb
fucomi
pop
adc
inc
lock
mov
dec
test
std
test
aam
outsl
or
insb
enter
inc
sbb
or
pop
dec
das
or
push
mov
pop
sub
js
pop
cmp
loope
jecxz
sbb
dec
les
dec
push
inc
dec
mov
movsl
fstpt
mov
loope
adc
das
add
sarl
movsb
xchg
divb
and
pop
mov
jge
adc
mov
xlat
dec
fs
lret
js
sbb
mov
aad
fldl
inc
ja
push
int3
lods
mov
pop
sub
mov
mov
fldenv
push
mov
cmp
bound
cmp
aam
add
mov
pop
mov
out
movl
jb
push
mov
push
mov
loop
inc
stos
addb
out
fadds
cmpsl
mov
call
mov
xchg
sbb
cltd
push
aad
add
aad
sahf
mov
inc
mov
fwait
and
fs
shlb
pusha
pop
mov
xchg
mov
mov
std
jle
aas
xor
xor
cmp
sub
and
out
repz
ss
cmp
loop
bnd
jns
arpl
cli
push
lock
das
xor
xlat
mov
and
push
mov
out
pusha
dec
cmp
xor
xchg
fwait
test
js
divl
in
xor
lods
fs
fwait
xchg
mov
push
inc
clc
sbb
push
inc
in
push
das
dec
sub
dec
test
int
pop
dec
or
xchg
lods
fdivl
cs
les
sub
jmp
outsl
mov
xor
sub
mov
lcall
fistpl
push
push
rcrl
test
adc
addr16
sbbb
cli
or
jle
int3
mov
js
xor
jns
fisttpll
pop
nop
test
lahf
or
mov
insl
adc
or
mov
mov
inc
popa
iret
and
or
jae
andl
mov
lds
inc
xchg
inc
addb
dec
std
or
push
jmp
cmpsl
gs
jae
xchg
cld
xchg
mov
mov
icebp
xchg
in
addr16
jae
pop
push
test
loope
arpl
mov
sbb
pop
sub
xlat
mov
ss
cmc
pusha
xchg
lods
bound
cmp
das
or
mov
repz
arpl
jb
mov
push
sbb
push
scas
push
loopne
push
cmp
push
and
dec
mov
das
push
inc
add
rorl
sub
cwtl
adc
imul
setl
push
inc
mov
mov
scas
js
jb
lds
bound
ljmp
lret
xchg
ljmp
xor
push
sbb
pusha
mov
in
vxorps
adc
insb
xchg
add
jns
bound
pushf
aam
cltd
cmpsb
dec
or
enter
repnz
stos
xchg
cs
inc
insb
xor
jns
xchg
movsl
stc
mov
sbb
jg
negb
push
or
bound
int
outsb
pop
mov
ja
out
cmp
xor
pop
clc
cmp
sbb
ffreep
flds
daa
stos
jl
mov
jl
insl
scas
mov
mull
test
aas
repz
and
nop
out
adc
sub
pop
ds
addr16
push
jae
rclb
cmp
mov
ret
inc
sbb
icebp
sahf
jg
lret
pop
mov
push
test
ss
mov
add
test
jge
push
inc
test
mov
cmpsb
sub
ljmp
mov
jns
int
shrb
sahf
pop
out
xor
pop
mov
jl
fdivs
mov
sbb
adc
pop
push
mov
imul
sti
pop
in
jno
in
loop
push
lret
pop
bound
into
notl
dec
enter
or
xor
mov
or
ja
outsb
mov
stc
add
mov
fsubrl
cmpsl
adc
dec
stos
cmpsb
inc
adc
adc
fcomps
and
sub
fldenv
inc
mov
jmp
inc
xor
ds
imul
and
pop
je
movsb
scas
test
jecxz
sub
aas
push
push
fnstenv
out
cltd
cwtl
in
push
and
pusha
sbbb
pop
mov
push
add
mov
dec
sbb
pop
ljmp
pop
jmp
fs
mov
addr16
sbb
dec
pshufw
icebp
dec
addr16
mov
das
xchg
fsubrs
call
sahf
cld
dec
dec
shll
add
or
into
xlat
mov
jle
mov
xor
push
es
enter
lret
jae
inc
sub
sbb
or
push
clc
mov
repz
mov
mov
xor
and
mov
jns
sub
add
cmp
xchg
ret
pop
imul
rcll
rcpps
push
pop
mov
outsl
fst
mov
stos
ret
das
sbbl
and
mov
loope
inc
je
pop
sub
pop
fs
cmp
xor
xor
mov
dec
push
ret
lret
and
mov
xchg
dec
repz
pop
out
push
xchg
imul
fwait
cmpb
xchg
popa
mov
leave
cmpsl
imul
and
in
imul
shr
mov
popf
pop
scas
xor
in
cmpsl
dec
xchg
lods
mov
ds
je
mov
out
arpl
jbe
pop
insb
mov
lahf
push
mov
mov
out
and
dec
inc
scas
mov
scas
and
mov
push
mov
inc
stc
js
pop
in
cmpsl
mov
lock
mov
jmp
adc
jecxz
mov
lock
nop
cs
lods
fsubrs
dec
das
imul
gs
sbb
mov
insl
paddb
sub
sbb
adc
repnz
mov
and
sti
loop
in
xor
xchg
inc
jno
lret
rcrw
lods
repnz
cmp
aad
sub
lods
pop
ljmp
push
inc
jns
lahf
sbb
pop
popf
mov
inc
push
in
mov
push
repnz
mov
andl
xchg
je
divb
push
scas
cmpb
stc
test
push
push
pop
cld
test
cltd
imulb
jbe
dec
lock
addl
push
cmp
xchg
pop
hlt
sarb
pushf
inc
and
jne
pop
aas
out
cmpl
repnz
xlat
adc
sub
cs
fcomi
adc
aaa
insl
in
outsl
pop
sub
out
jg
sub
nop
rclb
sahf
mov
lea
loop
repz
cld
jg
shlb
mov
sbb
imul
or
fbld
mov
into
and
mov
cmp
out
cmp
wbinvd
push
mov
addb
dec
leave
sti
dec
cmp
subl
dec
xchg
jg
inc
ret
mov
sti
pop
jg
arpl
push
sbb
ds
lea
ds
jp
ret
leave
ds
rcrl
xor
fwait
jae
mov
push
orl
sub
mov
repz
sbb
ss
scas
mulb
xchg
inc
adc
bound
cli
fs
mov
mov
pop
pop
or
fstl
or
inc
lahf
je
mov
adc
sub
pushf
and
mov
pop
call
fdivs
push
push
jecxz
in
mov
andl
mov
jmp
stos
scas
ret
frstor
loop
insb
out
lcall
pop
cltd
cmp
mul
sbb
scas
fadds
push
leave
add
push
ja
leave
and
fstps
jnp
sub
push
mov
adc
inc
pusha
jne
lods
mov
mov
mov
out
dec
pop
ja
fsts
invd
jns
cmp
imul
outsl
sbb
scas
xchg
cmp
insl
mov
xchg
or
repnz
or
push
insl
push
les
pop
jae
xchg
mov
dec
call
les
enter
jmp
mov
loopne
sub
outsl
stc
shll
add
testl
roll
sbbb
imul
jle
test
add
imul
push
ret
lds
sbb
fldl
pop
jne
pop
or
inc
shl
push
ja
iret
mov
repnz
cmp
sub
test
mov
push
add
jne
pushf
arpl
dec
add
aam
arpl
fs
push
arpl
xchg
jmp
cmp
cmpb
push
outsl
imul
loope
scas
in
testb
repnz
and
cmp
xor
push
out
mov
je
mov
lds
lock
std
rorl
dec
mov
mov
mov
nop
out
xchg
mov
lods
out
lock
fwait
mov
loop
aas
scas
cmpsb
dec
jp
dec
mov
es
adc
mov
fnstcw
in
subl
dec
call
sub
sbb
xlat
cmc
cmc
xor
cli
int
fdivs
inc
mov
incb
jo
pop
xor
or
dec
inc
outsb
jns
cmpsl
dec
testl
stc
pop
lret
mov
aam
push
xchg
stos
les
shl
push
js
repz
movsl
adc
mov
or
sub
dec
xchg
push
addl
mov
aad
scas
adc
mov
fcompl
dec
jmp
sbb
push
in
pop
push
jnp
frstor
rclb
pop
cmpsl
add
test
pop
mov
iret
lea
or
cmpl
xor
cmc
sbb
adc
add
cmp
test
pop
adc
dec
int3
lret
pop
mov
push
pop
push
daa
int
pop
ret
cmpsb
in
push
pop
mov
sarl
dec
shl
jno
and
pop
popf
int3
nop
rcrb
add
js
lods
test
adc
mov
dec
pop
mov
repnz
push
popl
pop
fstl
cmp
add
adc
shrl
jo
mov
sahf
aas
xlat
and
dec
nop
mov
xorb
adc
inc
orb
bound
pop
dec
bound
mov
xlat
mov
pop
mov
test
lahf
push
movsb
inc
gs
adc
xchg
scas
xor
inc
aaa
sahf
add
sarl
pushf
push
pushf
push
fiadds
repnz
pushf
out
fmuls
lea
xchg
outsl
hlt
mov
repz
add
mov
fcmovb
lea
jbe
shrb
gs
pop
pop
sbb
pop
dec
sub
fwait
rcr
push
sbb
xor
cmpsb
push
pop
sbb
xor
xor
and
pop
sbb
dec
aaa
cs
loop
sub
sbb
pop
test
arpl
and
sub
xor
fisubrl
cmp
pop
pop
inc
jmp
sbb
out
mov
add
or
xchg
xchg
jnp
rcll
jbe
mov
jno
push
sbb
or
or
loop
dec
xorb
xchg
stos
cmp
push
mov
cmp
xchg
mov
stos
int3
addr16
lahf
stos
jp
push
jl
or
sahf
sarb
fdivrs
pop
adc
arpl
rolb
jmp
push
mov
fs
mov
ret
add
inc
aad
jne
lret
lock
push
or
jmp
pop
inc
sub
enter
test
pop
jbe
lret
push
jo
lock
hlt
rcrl
adc
mov
mov
inc
js
push
incl
and
push
adc
adc
insb
mov
adc
hlt
add
push
mov
add
push
adc
and
xchg
mov
jae
mov
lret
gs
add
dec
add
adc
aas
pop
jnp
lret
es
inc
addr16
mov
or
sbbb
aam
sub
mov
lods
fbstp
fs
pop
pop
xchg
lea
loop
insb
aad
pusha
mov
jg
or
sbb
jg
dec
jb
cmp
test
sahf
lods
scas
fdiv
cmpsb
sub
bound
and
je
pushf
ja
adc
pop
mov
inc
aas
pushl
negb
rorb
add
cmp
lock
in
insl
lock
xchg
fistpll
test
enter
inc
sbb
ljmp
fistpll
xchg
mov
add
fisubrl
mov
xchg
adc
add
inc
mov
or
adc
fistps
lret
sub
push
xorl
jae
out
dec
xor
lret
add
lahf
clc
fs
test
rcll
or
xor
lea
mov
cld
or
adc
cmp
jno
icebp
fildll
lret
bound
imul
xchg
hlt
test
fwait
jno
iret
or
push
lret
mov
out
pop
es
jmp
cmp
dec
lock
jg
mov
out
arpl
dec
xor
or
jae
movsl
ret
inc
sub
mov
cmp
pop
mov
int3
test
mov
cmp
imul
adc
sti
push
int
movsb
loope
jge
mov
imul
dec
cli
dec
and
aaa
dec
adc
popf
push
fmul
rcll
sub
adc
dec
sahf
idivl
sbb
dec
sbb
rclb
and
iret
ja
aas
mov
lods
mov
xor
cmp
mov
and
iret
das
cmp
jmp
jle
mov
push
sbb
scas
stc
jnp
mov
pop
dec
mov
aas
mov
inc
cmp
jbe
icebp
ja
mov
inc
fisubrs
stos
pop
xor
push
int
push
fidivrs
pop
pop
inc
dec
pop
inc
pop
xor
rcr
and
jns
in
and
sbb
and
fcmovnu
insb
sarl
xchg
stos
lret
add
mov
jb
inc
clc
or
fxch
mov
test
jmp
sub
je
test
ds
dec
fcos
out
mov
mov
add
lds
mov
gs
scas
insb
mov
jne
mov
pop
and
pop
jae
lahf
add
sbb
dec
push
sub
or
test
mov
lea
loop
lock
push
mov
loopne
bound
xor
sbb
out
sarl
lea
mov
inc
les
mov
mov
or
dec
pop
in
mov
push
sub
addr16
adcl
jae
cmpsb
inc
je
add
popa
cltd
notb
lahf
xor
fdivl
and
mov
mov
cmp
mov
mov
mov
inc
scas
mov
push
loop
mov
sbb
xchg
push
adc
std
sarl
mov
dec
mov
or
mov
push
add
movsb
pushf
xchg
push
xor
outsl
xor
daa
adc
int
jg
jmp
mov
lcall
pop
fs
cmp
jns
insl
movsl
out
push
adc
lds
ss
fmuls
add
sub
les
add
cmp
dec
sub
iret
das
pop
xor
push
bnd
or
adc
mov
xor
jae
or
add
scas
cmp
dec
out
jne
movsb
jne
into
out
sub
xchg
pop
mov
pop
lahf
adc
xor
cmp
dec
in
xchg
jo
xor
rclb
or
mov
and
rcr
dec
sti
jns
leave
inc
mov
sbb
jae
movsb
dec
sub
aam
xchg
pop
jmp
shll
cmc
lcall
aad
push
pop
or
jnp
and
cltd
pop
pushf
movsl
xor
sbb
lret
mov
arpl
stc
add
xor
xchg
dec
mov
call
adc
ljmp
stc
cs
fsubl
mov
push
push
mov
fisttpll
fistpl
xor
xor
das
lcall
fs
jno
clc
add
lcall
lods
icebp
cld
mov
in
sbb
nop
mov
loopne
sbb
cmp
cmp
outsb
sub
add
add
clc
vmovlps
inc
push
and
dec
dec
int3
xchg
xor
push
jp
jl
out
out
call
cwtl
inc
push
fdivrl
inc
mov
orb
das
mov
xchg
mov
sub
hlt
add
mov
fincstp
cwtl
lods
aam
negl
jecxz
inc
fsubp
insl
mov
push
push
cmp
cmpsl
or
pop
sbb
ror
outsb
or
jecxz
or
lds
roll
out
or
hlt
ret
and
xchg
mov
dec
mov
daa
add
jge
jge
mov
push
fimull
cmpsb
lock
scas
and
push
inc
inc
lds
jmp
outsl
sarb
scas
xchg
inc
dec
clc
mov
mov
stc
pop
or
cs
sub
out
xchg
aas
pop
call
cwtl
mov
adc
jns
les
jmp
das
outsb
icebp
les
mov
jbe
xchg
adc
push
fmull
mov
mov
test
roll
loop
push
stos
inc
mov
dec
cmpb
or
rclb
push
add
cmc
add
cltd
das
dec
popa
pop
jne
divl
sub
mov
loope
bound
xlat
push
sbb
popf
outsb
loop
loope
mov
push
xchg
sbb
add
pop
push
fsts
xchg
mov
je
xchg
xchg
lea
inc
in
aas
imul
inc
movsl
out
lds
or
sbb
xchg
loope
inc
dec
rolb
stos
inc
cmp
test
sbb
xor
or
inc
push
xor
js
fimuls
movsl
es
fisubl
fldcw
ljmp
popf
arpl
int
pop
out
jecxz
stos
sbb
sub
xchg
inc
fidivrl
inc
sarl
dec
movsb
pop
lds
push
outsl
dec
jle
jbe
in
popf
jl
push
inc
xchg
imul
jne
dec
lret
xchg
and
push
jae
sbb
pop
dec
cmp
inc
jmp
popa
push
cmp
xchg
mov
mov
or
fiaddl
icebp
mov
outsb
cmpsl
syscall
adc
inc
aaa
jns
jge
insl
shll
sub
xchg
ret
loop
dec
dec
cmpb
inc
inc
pusha
fwait
lahf
push
mov
cmp
push
mov
pusha
push
dec
pop
lds
xchg
push
inc
and
add
sub
str
adcl
pop
sub
enter
dec
push
xor
out
shlb
sbb
jns
xchg
jo
lret
mov
push
loopne
mov
mov
cmp
mov
mov
or
insb
or
in
xchg
xchg
push
push
jnp
loopne
enter
test
sti
fildll
fsubrs
add
sahf
fimull
xchg
sub
add
icebp
enter
sbb
dec
imul
std
stos
adc
test
in
shll
push
into
out
sbb
in
movsl
adc
adc
pop
mov
lds
and
push
loop
fildl
push
fs
ficoms
pop
ja
lret
dec
inc
mov
pop
sub
pop
xchg
pusha
mov
cmp
insl
in
cld
push
sub
shll
pop
jbe
data16
mov
xchg
push
adc
faddp
push
sub
adc
xor
mov
xchg
xchg
mov
pop
jae
xchg
scas
sarl
mov
sub
and
fs
dec
or
ds
iret
sbb
inc
rcrl
pop
in
adc
addr16
sub
pop
ljmp
sahf
and
xor
and
ja
adc
leave
lds
jmp
jg
or
out
insl
xlat
dec
push
cltd
jecxz
popf
cli
xchg
jae
push
movsl
fnstcw
cmpsl
aaa
xor
dec
lea
add
rcll
add
jge
sbb
push
add
mov
loope
out
add
inc
lods
icebp
movb
shl
negl
lret
cmpsb
inc
xchg
inc
pop
test
pop
cld
roll
insb
xchg
sahf
dec
aaa
pop
enter
jle
hlt
pop
sbb
inc
push
mov
push
daa
repnz
ja
cli
adc
imul
mov
dec
in
rcrb
nop
xor
mov
xor
mov
mov
aaa
bound
pop
dec
fsubs
shrl
pop
inc
aaa
iret
push
push
mov
dec
pusha
or
mov
adcb
mov
sub
pop
aaa
pop
int3
test
xchg
pop
insb
ret
and
mov
test
mov
or
repnz
mov
mov
in
adc
nop
mov
nop
mov
mov
push
dec
inc
jae
inc
aas
jmp
cli
pop
lret
jns
sub
push
pop
jmp
dec
mov
lcall
push
test
lock
inc
imul
sti
pop
lret
mov
je
imul
xbegin
add
hlt
ret
out
in
cwtl
jne
in
adc
pop
gs
xor
jns
inc
sub
mov
xor
mov
rcl
loope
jmp
pop
mov
dec
and
fists
insl
jg
sar
sub
icebp
cwtl
cmp
jecxz
cmpsl
ret
cmp
and
dec
push
mov
int3
dec
dec
shrl
popf
or
faddl
sub
sbb
ljmp
das
dec
add
fstpt
lcall
daa
and
out
sbb
test
inc
mov
adc
add
rorl
mov
xor
sbb
js
mov
lret
int3
cmpsl
lret
insl
mov
aad
insl
push
adc
test
sub
sub
mov
mov
repnz
mov
aam
fwait
addr16
sbb
mov
data16
sbb
mov
nop
pop
inc
testb
jnp
sbb
cld
jne
into
pop
out
jg
gs
mov
mov
fmull
iret
lods
or
iret
push
addb
lret
out
dec
ret
adc
xchg
orb
or
pop
mov
shrb
repz
sahf
popf
imul
lock
scas
rcl
shrb
push
and
jl
in
jle
pop
cmp
sbb
fdivs
xchg
fdivs
in
push
mov
outsb
outsb
push
test
out
aaa
loope
loope
mov
imul
lea
xor
popa
sub
pop
aam
cmp
mov
sbb
pop
lret
mov
cltd
or
sub
test
fwait
cld
sti
jmp
cmp
and
lcall
or
fwait
aam
xlat
out
add
mov
sahf
or
pop
adc
pop
mov
mov
shlb
rcr
fsubrl
insl
mov
mov
pop
push
movsl
decl
cmp
out
jl
movsb
shrb
mov
test
push
jle
sbb
fcompl
cmpsl
push
fmull
dec
inc
call
pop
cld
test
add
xor
sbb
popa
xorb
mov
dec
xchg
sub
push
xchg
xchg
and
inc
outsl
and
push
call
pop
cs
mov
fldcw
fildll
push
mov
pop
xlat
push
pusha
cmp
mov
ds
cmp
add
cmp
and
jns
mov
stos
sarl
dec
mov
push
stos
out
out
lods
iret
jo
jnp
jb
sbb
stos
push
jb
mov
mov
mov
jl,pt
push
cmp
lea
sub
sub
test
shll
push
test
dec
aam
mov
aas
add
loopne
fsubrp
push
adc
lds
adc
xlat
std
div
je
pop
popa
mov
cmpsb
jle
adc
and
pop
ss
mov
fcompl
test
and
stos
dec
dec
into
xchg
pop
call
cmp
lock
in
mov
xor
push
cmpsl
mov
and
dec
mov
xchg
xchg
xchg
xchg
gs
test
cmp
ss
les
sti
fsts
js
out
lcall
and
stos
inc
jle
dec
stc
xchg
imul
mov
or
aad
xchg
adc
shrl
or
es
pop
and
xor
adc
insb
ljmp
or
and
fdivrs
push
push
test
or
stos
sahf
gs
sahf
out
repnz
cmp
popa
test
cmpsb
xchg
sbb
ss
bswap
push
aas
mov
pop
in
int3
int3
scas
push
and
dec
outsl
movsl
xchg
mov
out
out
jle
es
mov
or
sub
adc
mov
fstps
push
or
push
pop
or
jl
shlb
leave
out
jl
or
xacquire
scas
add
dec
fsubr
cmp
mov
dec
pop
xchg
sbb
shl
xor
add
ret
push
imul
and
xor
or
xchg
inc
adc
movsb
cld
dec
push
or
adc
xchg
or
jl
dec
pushf
lock
fwait
cmp
jmp
add
push
cmpsl
add
popa
jno
call
lcall
xchg
dec
imul
leave
xchg
push
mov
decl
movsb
xor
lods
int
xor
xorb
shr
xchg
jecxz
xor
enter
inc
movsb
rorl
push
add
sbb
and
outsl
xchg
rol
jge
aas
test
es
ljmp
in
xor
cmp
inc
icebp
adc
cmc
lahf
mov
scas
mov
cmp
ret
das
sti
jb
aam
inc
and
inc
inc
outsb
pop
sahf
call
add
jne
xor
cmp
fisubrl
imul
add
jno
subb
lock
in
movsl
push
mov
or
je
xor
jg
add
cli
testb
xor
pop
adc
andb
out
and
mov
in
lcall
push
pop
xchg
lds
inc
xor
mov
sahf
shll
jecxz
jp
fs
dec
dec
loop,pt
out
dec
xlat
inc
push
sbb
and
push
insb
mov
test
sub
pop
mov
roll
inc
xor
test
and
mov
xchg
mov
fcmove
aad
pop
repnz
or
inc
xchg
leave
add
pop
cmp
outsb
cmp
sbb
push
mov
popa
scas
mov
mov
outsl
mov
push
ret
xor
xchg
adc
pusha
pop
div
adc
sahf
inc
cmp
hlt
add
cltd
dec
out
loop
dec
xchg
js
add
dec
jo
dec
xchg
mov
xor
xorl
pop
insl
insl
add
imul
dec
je
sub
mov
and
cmpsb
mov
or
push
fdivs
sub
pop
je
decl
lahf
je
scas
jl
or
mov
add
sarl
mov
mov
stos
data16
cs
repz
push
ljmp
int3
lcall
inc
fstpt
shl
cmpsb
mov
mov
data16
jo
cld
lock
dec
pop
cmp
sti
leave
pop
sbb
sub
aad
daa
mov
cli
repnz
jge
or
push
mov
sub
push
in
mov
adc
dec
cmp
push
pop
clc
push
fwait
insw
repnz
negl
rcrb
adc
mov
jns
inc
mov
stos
mov
and
and
xlat
movsb
mov
data16
fisttps
push
mov
pop
sub
gs
into
dec
jle
mov
pushf
or
mov
push
mov
and
pop
outsl
xchg
inc
push
pop
mulb
nop
xlat
shll
mov
leave
lahf
cwtl
insl
in
xchg
in
push
adc
mov
pop
and
loope
iret
cmp
inc
pop
push
pop
cmc
in
mov
adc
mov
mov
cmp
pop
pop
dec
inc
push
sbb
jne
fnstsw
inc
cs
mov
mov
enter
pop
pop
cmp
dec
loopne
movsl
shlb
adc
jle
mov
fmuls
inc
xchg
in
pop
adc
notb
inc
xchg
ret
sbb
js
fdivl
jmp
or
adc
jbe
push
loope
repnz
leave
addl
mov
call
jmp
cld
and
into
sub
jne
sub
stos
rorb
mov
shll
mov
inc
add
repnz
jmp
das
sub
sub
cmp
sbb
fdiv
sub
mov
mov
cmpl
jg
mov
inc
out
cltd
popa
sbb
insb
pop
imul
fldenv
repnz
push
sub
adc
adc
inc
and
aam
bound
mov
addb
jnp
xlat
lods
enter
inc
sbbb
mov
and
cmpsb
not
pop
repz
push
test
cld
shlb
popa
fsubs
mov
repz
leave
call
pop
or
mov
out
sbb
movsb
cltd
lcall
jb
loope
cmp
push
mov
fs
inc
lods
dec
jo
jno
mov
push
xor
xlat
nop
sbb
cltd
ret
les
jns
push
mov
cli
shll
sbb
inc
clc
or
leave
pop
jo
or
dec
inc
test
and
xchg
lahf
jp
aaa
lock
clc
out
or
jle
adc
mov
xchg
add
int3
daa
mov
dec
adcb
jb
and
mov
pop
arpl
mov
adc
addr16
pop
ja
add
sbb
and
clc
aaa
pop
push
dec
aaa
jne
sbb
lret
mov
test
xor
fidivrl
mov
lea
sti
mov
xlat
jne
lcall
aam
pop
decl
lods
add
push
jg
inc
jecxz
or
fisubl
jmp
xchg
sbb
shl
outsb
lds
and
out
adc
sbb
add
adc
lods
adc
or
out
sbb
or
es
mov
add
sub
pop
and
push
lods
and
dec
out
xchg
outsb
jge
push
fcomi
call
mov
dec
pusha
cmp
xor
xor
popf
sub
xor
out
sarl
lcall
sbb
fwait
in
push
pop
sub
inc
xchg
bnd
popa
popa
pop
rcll
test
inc
out
ds
ja
lods
xchg
imul
lahf
adc
or
popf
or
pop
jmp
and
dec
dec
ret
stos
sarb
cmp
lea
scas
adc
jg
adc
les
mov
imul
pop
or
push
aas
fiadds
int
sbb
jns
xor
jo
mov
imul
or
and
pusha
clc
cmp
enter
push
pushf
pusha
pop
dec
popa
push
push
mov
xor
adc
cmp
nop
lahf
sbbb
dec
fcompl
push
test
sub
gs
jle
and
loopne
daa
cwtl
mov
push
repnz
insb
subb
data16
add
lods
push
xor
xchg
and
stos
mov
fsubr
out
push
sbb
mov
hlt
xchg
inc
sahf
xor
mov
sti
mov
jo
or
into
adcb
lea
mov
dec
inc
xor
and
insb
adc
in
mov
call
les
sub
push
mov
or
ret
cmp
rorl
adc
jecxz
out
push
mov
test
xor
mov
mov
xor
fistps
pop
xchg
into
mov
and
cmp
jae
mov
jp
and
fisubrs
aad
fidivs
cmp
cmp
jns
mov
clc
sub
pop
insb
mov
jecxz
dec
mov
pop
mov
in
xchg
xchg
enter
mov
out
hlt
pop
cmp
xorb
jno
insl
ror
dec
lea
sbb
xor
push
inc
pop
xor
cmp
stos
lods
or
loope
dec
imulw
xor
roll
pop
sub
nop
add
fildll
stos
pop
fst
push
ret
mov
and
jb
aaa
adc
lds
adc
test
popa
cwtl
faddl
mov
std
xor
sbb
fisttpl
ljmp
jbe
cmp
push
sub
jo
js
hlt
test
stos
push
adc
jge
scas
cmpl
ret
mov
clc
add
stc
mov
stos
adc
add
or
xchg
or
mov
rorl
sbb
fisttps
sbb
ljmp
jle
das
jae
push
jmp
mov
inc
ja
not
push
stos
es
insb
sti
ror
shll
in
sbb
xchg
popf
fdiv
sbb
cltd
sub
jg
lds
inc
jge
xchg
mov
dec
ret
jne
lds
mov
push
fucomi
into
test
fsubr
dec
mov
shll
mov
lods
mov
fadds
in
or
dec
popa
dec
sbbb
adc
xchg
enter
insb
mov
test
fcmovbe
sub
mov
lods
xor
shrb
and
ds
push
jb
xchg
insb
add
adcb
lds
arpl
mov
lret
or
add
scas
lahf
push
inc
mov
sub
cmp
adc
ja
push
shll
ficomps
incl
pop
pop
xor
mov
pop
loop
sar
vrcpps
test
out
imul
adc
pop
fcmovb
dec
dec
popa
sti
pop
jns
fs
sub
mov
adc
mov
adcl
jge
jecxz
mov
inc
dec
jmp
xchg
in
rorl
insl
push
jnp
fisubrs
ds
out
sbb
shll
sbb
mov
cmp
scas
mov
pop
repnz
xor
add
add
add
mov
mov
sub
outsl
mov
sbb
iret
mov
xchg
nop
std
cmp
mov
dec
xor
ja
push
in
mov
mov
dec
push
ret
jnp
xor
or
test
mov
ljmp
data16
sub
call
lcall
roll
test
lret
jecxz
pop
pop
xchg
daa
mov
adc
je
fwait
push
pop
and
pusha
loop
dec
iret
xchg
negb
and
int3
les
push
xchg
add
pop
daa
mov
aas
jb
mov
xchg
into
adc
pop
push
cmp
or
inc
das
inc
and
mov
aad
sub
inc
sti
jne
adc
mov
and
shlb
jl
add
lahf
int3
cmpsl
lea
lret
xchg
inc
add
imul
adc
fsubrl
dec
sbb
jb
xchg
out
je
lret
bound
fidivl
ljmp
add
lret
xor
push
mov
pop
repz
call
std
adc
sbb
or
cmp
pop
in
out
shlb
push
jp
sbb
adc
mov
mov
out
xchg
xor
jg
ret
jl
sbb
xchg
push
adc
inc
sahf
nopl
lret
xor
dec
push
lea
pop
jo
jo
insb
je
mov
popf
xor
cmpl
sub
cmc
leave
sbb
hlt
repnz
jno
andl
cmpsb
stc
fsub
mov
xlat
sbbb
arpl
stos
shll
mov
xchg
mov
mov
and
stos
cli
js
sti
pushf
outsb
jb
and
mov
cwtl
lods
push
jle
sbb
mov
mov
push
or
sub
lret
ja
cmp
inc
test
das
push
sub
loop
mov
mov
push
fwait
xor
jne
lock
push
aam
leave
pop
mov
fsubl
aaa
sub
pop
pmaddwd
sub
pop
ljmp
push
imul
mov
mov
mov
jge
call
xchg
out
mov
pop
les
ror
push
addr16
mov
rcr
jecxz
mov
pushf
test
and
sub
fidivrs
add
mov
pop
mov
pop
add
mov
bound
divb
pop
popa
inc
int
pop
inc
insb
fdivrp
ss
aad
inc
dec
sbb
fsubp
xchg
sahf
testb
and
pop
mov
addr16
cmp
jnp
or
in
sahf
in
jnp
out
xchg
adc
dec
stc
fildll
test
mov
adc
imul
das
rcr
mov
xchg
sbb
or
sbb
pop
push
mov
pop
mov
mov
inc
adc
inc
sub
mov
adc
popa
cmp
cmp
addl
xor
loopne
negl
xchg
cwtl
lret
mov
shlb
push
jl
icebp
cmpsl
sub
test
jns
sub
jne
jo
fidivrl
cmp
fisubrs
gs
sbb
loop
inc
lea
mov
add
lahf
fwait
dec
in
popa
repnz
inc
mov
sbb
das
mov
jnp
hlt
mov
push
mov
pop
sub
call
cmp
sbb
adc
lret
jne
mov
popa
xchg
push
add
adc
pop
pop
push
mov
mov
and
jae
sub
jnp
mov
mov
or
mov
push
shr
int3
int
inc
cmp
cmp
mov
pop
push
in
les
pop
inc
roll
movb
daa
jg
das
cs
pop
int3
inc
negl
push
and
dec
pop
adc
mov
scas
movsb
lahf
cmp
mulb
push
and
adc
add
dec
mov
sti
mov
out
clc
sahf
adc
aas
cltd
jmp
test
push
bound
jmp
add
stos
and
lock
jbe
insl
inc
je
xchg
gs
mov
jmp
pop
scas
shlb
mov
push
sarl
cmc
add
inc
fildl
lods
outsb
or
pop
fdivrl
inc
ja
xchg
jecxz
add
jle
mov
and
mov
and
test
notb
xor
popf
adc
mov
cmpsb
popa
xor
pop
out
das
out
adc
ss
mov
bound
les
cltd
jmp
dec
ljmp
inc
inc
call
sbb
aam
mov
fstl
jno
movsb
std
fimuls
imul
js
cmc
mov
adc
pop
mov
adcl
clc
repz
mov
in
push
pop
pop
cmp
arpl
jg
push
pop
xor
or
push
mov
jg
mov
test
out
sbb
push
sbb
fcoml
stos
insb
xor
dec
xor
jmp
je
popf
arpl
cmp
xor
xor
scas
fsubrs
sub
mov
cs
shll
xchg
jmp
clc
jno
add
imul
les
das
lahf
mov
sub
cs
scas
adc
xor
push
cwtl
in
jmp
pop
dec
pop
out
pop
ds
aaa
push
mov
int
mov
xor
jno
sahf
outsl
jmp
ret
repnz
shll
ja
lea
fistps
adc
mov
dec
addr16
cmp
in
int
push
outsb
mov
repz
mov
inc
pop
ljmp
mov
lret
mov
aas
imul
mov
lock
mov
imul
int
fwait
mov
dec
push
xlat
ret
ja
mov
imul
push
in
pop
test
ret
out
loop
push
sbb
pop
pop
insb
or
pop
rcll
xor
push
xlat
and
hlt
les
or
xchg
test
bound
insl
es
clc
sub
mov
pop
xlat
lcall
push
xchg
outsl
mov
xchg
rorb
imul
loopne
dec
xchg
lret
xchg
push
inc
jge
sti
fistpl
lods
fdivs
std
pop
mov
mov
mov
popf
lret
cmp
inc
std
xor
fsubs
cmp
stos
push
lea
push
outsb
dec
sti
popa
xchg
jbe
ret
cwtl
sub
aaa
xchg
cs
cld
jns
cmpsb
daa
pop
push
into
adc
dec
int
adc
outsb
sub
push
sti
scas
xor
inc
mov
add
ds
popa
rcrb
dec
xlat
sub
into
in
mov
mov
mov
cli
lock
add
dec
orb
xor
jns
scas
mov
sbb
mov
lea
repnz
add
push
xlat
ja
dec
shlb
pop
push
movsl
mov
cli
xchg
pop
imul
inc
xchg
push
pop
xor
xor
aaa
pop
or
bnd
repz
repz
cmp
pusha
and
add
dec
add
sbb
push
sub
lcall
adc
out
push
call
push
sub
je
hlt
push
xor
es
sbb
adc
mov
fcompl
sub
mov
cmp
les
mov
loopne
movsl
jecxz
in
inc
pusha
mov
mov
inc
jns
cmpb
ja
into
jo
gs
push
pusha
add
pop
cmp
dec
and
int3
lods
cmc
popa
std
add
pop
mov
or
ret
adc
pusha
out
dec
pop
xor
mov
cwtl
loop
test
repz
fs
sbb
dec
int
sbb
or
lret
out
pop
pop
fnstcw
les
sbb
call
or
push
mov
cs
aad
aaa
movsb
push
aaa
lahf
mov
push
repnz
mov
push
mov
push
xchg
in
mov
test
jmp
xorl
xor
les
mov
call
cmp
cmp
pusha
xor
lods
rclb
nop
imul
idiv
enter
lcall
in
pop
in
mov
lret
ret
dec
clc
cmpsb
cmp
stc
fldt
or
test
stos
imul
int
push
xor
dec
lods
jns
aaa
dec
xor
xor
shlb
mov
xchg
lea
enter
xchg
in
out
and
mov
pop
imul
push
iret
fadd
outsl
clc
xchg
mov
insb
adc
xchg
add
add
jg
inc
lret
sahf
sbb
dec
repz
shlb
dec
dec
sub
pushf
xchg
pop
xchg
repz
and
pushf
nop
mov
push
adc
cmc
add
addr16
lcall
hlt
sbb
inc
adc
leave
mov
paddq
cmp
and
fbstp
push
cli
dec
in
mov
or
xchg
int3
addl
mov
or
out
mov
or
jb
adc
pop
out
and
insb
bound
shl
xlat
xor
sbb
inc
daa
sbbl
out
lock
pusha
std
inc
xchg
inc
xchg
dec
mov
leave
leave
pop
popa
dec
test
or
jb
xchg
add
imul
mov
cmp
xor
dec
jo
lock
jnp
insb
and
mov
jl
mov
call
cltd
dec
pop
in
and
jge
jns
add
inc
in
inc
push
sub
push
push
fisttpll
pop
daa
pop
sbb
popf
pushf
add
sub
nop
andl
fldenv
ja
add
xor
leave
jae
test
mov
sub
add
push
and
ds
jp
addl
xor
xchg
mov
adc
adc
jecxz
jo
int3
sbbl
popf
test
loop
mov
mov
cli
stos
testl
adc
xchg
mov
xchg
cmpsb
mov
ljmp
add
ror
in
jae
std
jno
lds
popf
add
and
sarb
clc
stc
mov
mov
rcrl
fs
mov
xchg
mov
scas
fwait
fwait
cmp
xchg
cli
push
repz
nop
mov
push
mov
sub
xchg
dec
mov
addr16
rcl
mov
popf
lods
divb
pop
lods
ja
test
bsr
and
pop
xchg
xor
pop
sti
mov
int3
rorl
sbb
push
ja
lcall
iret
shll
repnz
outsl
mov
lea
loopne
cmpsb
int3
inc
lock
jnp
pop
or
aam
mov
test
xor
sti
mov
xor
popa
mov
jae
or
dec
jbe
mov
cmp
lods
mov
or
add
imul
pushf
inc
std
js
test
cmp
dec
iret
rol
mov
arpl
leave
inc
mov
not
cmc
fistl
inc
insb
hlt
repnz
stos
sbb
es
stos
cs
sbb
out
fwait
aad
adc
je
lods
cmp
cmc
jle
dec
pop
jae
andb
arpl
xor
and
stos
push
jmp
out
dec
cmc
pusha
push
orl
leave
xlat
inc
mov
sub
inc
notb
xchg
xchg
aam
les
sbb
inc
cmp
add
ds
pop
push
sbbb
sbb
in
nop
imul
mov
jae
adc
pusha
aaa
dec
jmp
mov
mov
loope
mov
and
mov
lcall
mov
inc
sbb
jge
jnp
cli
scas
rcrb
cmp
pop
push
mov
cltd
push
rclb
add
mov
push
add
sbb
clc
inc
test
sbb
pop
cli
scas
lahf
push
dec
sub
pusha
jno
jg
loope
out
shld
pop
push
ret
inc
iret
lret
ja
test
inc
pop
or
imul
xchg
cmp
cmpsb
out
or
xchg
cmpsb
xchg
pushf
jle
scas
sar
dec
out
in
stos
inc
es
in
inc
lds
jne
daa
loop
mov
gs
sbb
lcall
stos
sub
aam
fidivrs
sbb
cmp
mov
sbb
bound
imul
and
inc
lret
lds
and
jb
inc
enter
std
outsl
dec
mov
and
xchg
push
jg
push
popf
inc
cmp
mov
mov
jb
xchg
adc
dec
pop
add
sub
add
mov
pop
sbb
outsl
cld
dec
in
repz
and
adc
mov
xchg
and
lea
pop
aad
xor
fistpl
mov
cmp
shll
adc
decl
push
xchg
sti
mov
test
add
leave
aad
xchg
les
mov
call
ds
shrl
push
gs
mov
imul
inc
cmp
cmp
loop
repnz
sub
push
lds
jmp
sbb
dec
mov
cmp
das
fs
es
daa
les
ds
fs
fsubrs
icebp
jp
jg
gs
or
bound
lds
enter
xor
mov
cmc
jmp
sahf
mov
lods
pusha
xchg
int
ljmp
sub
jl
outsb
fisubrl
and
in
popf
repnz
popf
and
shlb
stos
insb
les
sub
jbe
cmp
lods
int
mov
fs
icebp
cmpsl
sub
or
pusha
sub
inc
in
sarb
aaa
in
nop
sbb
mov
lea
sbb
adc
sub
outsl
adc
test
cs
add
xor
sbb
xchg
mov
inc
outsb
data16
inc
and
pop
ss
pop
faddl
jl
inc
xchg
mov
scas
fwait
mov
xor
roll
sbb
xor
movsb
aas
movsl
pop
hlt
mov
xchg
lock
imul
ret
xor
orb
fnsave
cmp
and
xor
mov
xchg
push
adc
imul
jnp
or
sbbl
add
mov
dec
outsl
xor
cmp
sarb
mov
push
shlb
repnz
xlat
or
mov
cld
mov
orb
fcoms
aaa
js
cmp
les
push
aaa
in
mov
pop
call
adc
jbe
test
popa
fdivs
jp
inc
mov
mov
inc
and
add
cmpsb
push
pop
fadd
js
test
push
lahf
cmp
push
clc
mov
mov
dec
fidivrl
dec
xchg
pop
push
bound
ds
jbe
or
mov
jmp
cld
sti
mov
dec
rcr
subb
sbb
push
subb
add
mov
jmp
fdivs
lods
push
push
movb
cmp
jne
leave
aad
jns
sub
mov
test
sub
cmp
gs
lods
sbb
cwtl
rcl
ret
aad
dec
mov
push
push
outsl
jge
xor
arpl
mov
test
popf
out
xchg
in
fsubp
inc
rep
push
mov
or
fs
adc
leave
ret
pop
push
adc
in
lock
xor
rcl
ret
xor
gs
push
add
test
mov
outsl
and
nop
ds
push
and
push
shrb
push
sti
cmp
fimuls
push
jg
mov
add
jns
repz
rcll
mov
std
cs
sub
xor
mov
das
inc
cmp
out
mov
in
insb
xchg
or
sahf
or
mov
jge
xchg
sub
mov
rorl
push
in
and
inc
ret
adc
sub
pop
or
into
sub
jge
jo
in
xchg
inc
nop
push
xor
icebp
push
shlb
lcall
fisttpl
jecxz
dec
movsl
rorl
stc
inc
lret
push
pop
es
and
fucomp
sbb
iret
ljmp
sub
inc
es
and
add
repz
push
out
scas
lcall
fisttpll
and
pop
pop
jg
lods
push
test
cmpsb
cmpsb
jno
sbb
sbb
add
jbe
xor
or
or
jmp
enter
aaa
pop
dec
cs
mov
mov
inc
push
lds
dec
lret
mov
scas
mov
adc
xchg
dec
and
test
fdivrs
push
jne
lds
testb
mov
outsl
in
cmp
mov
push
lret
push
mulb
movsb
inc
fnstenv
xor
nop
adc
jmp
daa
leave
imul
andl
lret
cmp
add
popa
rcrb
int3
push
sar
inc
sti
movsb
dec
jb
lods
push
push
divl
add
ljmp
mov
sub
loope
sbb
das
sbb
cmpsl
jp
lret
mov
in
adc
jecxz
xor
mov
in
pop
ja
xchg
leave
dec
jle
scas
cmpsb
subb
aas
iret
pusha
cltd
dec
inc
jno
popf
sbb
outsb
jno
mov
dec
add
test
mov
jmp
dec
movsl
std
fs
inc
mov
aam
pop
fadds
dec
arpl
xchg
mov
inc
cmpsl
arpl
xchg
cli
lret
xchg
loopne
pop
call
add
cmp
jle
and
or
fisubl
rep
leave
lret
pop
sub
sbb
mov
sbb
adc
xchg
rorb
sub
cmpsb
adc
ljmp
js
out
dec
pop
in
inc
or
insb
dec
fcos
scas
cmp
add
push
sbb
les
add
ds
iret
out
sub
je
push
pop
jns
push
adc
mov
in
dec
cmpsl
adc
push
mov
out
imul
outsb
adc
xchg
xlat
popf
adc
lahf
dec
cltd
cmp
mov
push
clc
and
testb
adc
add
sbb
nop
fnsave
leave
repnz
and
out
fistps
test
fs
mov
push
cmp
repnz
lods
and
ud0
add
ret
imul
ret
hlt
xlat
lea
lock
jbe
sahf
into
ss
cmpsl
mov
inc
jb
sub
add
dec
popf
cmp
icebp
pop
adc
fdivrs
in
xchg
rolb
mov
ja
lods
lcall
popa
push
mov
xchg
popa
push
pop
cld
jle
sbb
scas
out
notl
scas
mov
je
cli
je
adc
dec
push
jbe
adc
inc
scas
mov
cmp
scas
ljmp
xor
sbb
mov
mov
dec
sti
mov
dec
clc
call
dec
stos
lea
insb
mov
outsb
fistpl
add
adc
mov
and
jl
arpl
repz
sub
or
dec
rcll
sub
and
insl
int
push
int
jbe
cltd
push
ss
movsl
insb
fs
loope
push
push
xchg
mov
sub
mov
out
cltd
pop
xchg
out
sub
jp
mov
test
addr16
bound
imul
es
shlb
cli
movl
lock
addb
fmuls
pop
lret
lock
rclb
fcmovnbe
inc
pusha
xchg
add
jl
je
push
pop
in
nop
fs
pop
iret
push
loop
inc
sub
inc
testb
stc
jp
cwtl
scas
movsb
cltd
in
push
push
pop
scas
imul
mov
imul
mov
aaa
fiadds
mov
pop
mov
add
push
aad
jne
xor
fldcw
jne
cmp
dec
pusha
jmp
ds
es
ljmp
dec
sbb
push
jb
xchg
push
dec
int3
cwtl
test
xchg
or
mov
and
or
jge
or
adc
pop
lea
leave
add
jbe
and
stos
movsl
mov
xor
cmpsl
mov
push
push
aaa
call
call
and
mov
scas
ss
stc
mov
xchg
fs
js
jno
push
mov
and
cmp
push
add
cmp
push
jge
outsl
cltd
jb
add
mov
in
sbb
repnz
push
dec
pop
inc
mov
dec
jb
shlb
push
jl
inc
xlat
int3
das
mov
and
mov
cmp
rcrb
xor
pop
dec
rorb
pop
jbe
ret
push
out
inc
mov
roll
pop
adc
out
out
xor
or
fadds
hlt
pop
push
or
inc
dec
lods
jnp
sbb
xor
push
js
outsb
cmpsb
pop
movsl
mov
js
mov
movd
cwtl
popa
mov
pop
inc
mov
jnp
inc
cmp
xchg
pop
pop
pop
sbb
push
fldcw
int3
in
xchg
jecxz
lcall
ljmp
stos
daa
subb
adc
subl
sbb
add
xor
mov
ja
mov
pop
push
push
lret
mov
cmpsl
cwtl
jbe
sub
inc
xor
sarl
jb
in
leave
or
dec
and
mov
in
adcl
lcall
jg
bswap
shl
ss
cmc
or
dec
mov
cmp
in
push
pop
clc
pop
lcall
inc
mov
sub
xchg
addr16
ret
mov
test
daa
ret
push
pushf
fcoms
lds
xchg
loop
sbb
hlt
inc
icebp
push
incb
jecxz
in
mov
mov
push
repz
sub
jmp
mov
dec
jmp
cmp
int
or
mov
sbb
popa
or
js
pop
mov
and
sbb
pushf
iret
sbb
ret
out
dec
inc
sub
in
add
cmp
decl
push
scas
mov
adc
fbld
jb
shlb
lret
lret
push
lea
adc
loop
add
fwait
testb
inc
imull
loop
push
push
push
imul
mov
sbb
jl
test
adc
adc
add
bound
add
dec
mov
repz
mov
js
sub
adc
fcomps
mov
add
cld
lret
fwait
xorl
aas
inc
xorb
xor
pop
or
push
mov
fs
or
adc
in
pop
pusha
xlat
mov
add
mov
jb
jle
jle
repz
rorb
subb
adc
cmpb
xor
insb
jnp
stc
imul
sbb
je
sbbl
sub
xor
mov
mov
add
shrb
sub
jge
sbb
pop
pop
filds
arpl
sbb
das
sbb
ds
ret
push
cmp
push
jle
lret
xor
pop
popa
xor
adc
je
mov
push
mov
xor
jb
dec
mov
daa
int3
movsl
cmp
outsb
daa
sub
subl
and
mov
loope
or
add
mov
or
insb
inc
lret
mov
aam
rorl
mov
mov
shr
pop
loopne
mov
push
insb
arpl
xchg
xchg
push
jo
cmp
and
inc
mov
scas
cli
out
sahf
xchg
xlat
push
add
jae
jns
loopne
or
sub
daa
mov
stos
rol
add
jl
popa
outsl
lods
shlb
movsb
xor
cwtl
outsl
inc
das
js
cld
mov
cld
jns
in
mov
xor
arpl
push
setbe
jecxz
fstpt
aad
ret
pop
sub
dec
jb
cmp
out
mov
mov
and
jae
imul
adc
jbe
xlat
jb
clc
xchg
mov
sub
data16
sub
add
or
adc
push
in
arpl
ret
add
pop
mov
add
sbb
push
out
and
dec
test
sbb
jbe
mov
mov
lds
lret
ljmp
sub
sbb
sbbb
mov
loope
or
mov
scas
pop
xchg
es
jl
sbb
ret
mov
arpl
sarl
popa
push
imul
test
adc
filds
out
add
dec
fistpl
loopne
popf
mov
sub
or
inc
inc
xchg
pop
or
sahf
addr16
or
mov
or
add
int
sahf
pop
aas
pop
dec
mov
inc
push
in
int
mov
insl
mov
stos
fst
jmp
cmpl
jb
push
rolb
ficoms
cmp
jle
push
ds
loopne
ret
sub
xchg
bound
sub
push
jl
in
sbb
xchg
repz
sub
sub
push
std
jnp
es
or
bound
int
rorl
add
fadd
imul
mov
and
jg
notl
pop
mov
jmp
mov
push
and
jecxz
test
jbe
push
bsf
insl
popa
lret
dec
pop
cmpl
hlt
aas
xor
sbb
pop
cs
rclb
xor
insl
int
cltd
adc
xchg
fidivl
sub
add
or
jmp
fldenv
in
pop
or
gs
adc
or
fs
or
mov
inc
fsts
add
addr16
stc
adc
repnz
imul
shrb
fisttpll
nop
fwait
jno
je
cmp
nop
cmp
punpckhbw
mov
push
or
pop
push
mov
inc
fsubrl
fsubrs
movb
ds
or
jne
lods
data16
sbb
add
xor
cmp
loope
mov
fildl
adc
mov
sahf
sbb
and
push
or
xor
out
jno
fxch
pusha
dec
enter
es
int
mov
fisttpll
jle
push
icebp
and
test
and
in
push
ficoms
xchg
pop
inc
fidivrs
or
pop
fstps
push
xchg
hlt
mov
lock
pop
enter
sti
aam
addr16
stos
mov
test
xchg
out
and
popa
mov
and
sbb
pop
fiadds
rcr
xchg
out
sub
stos
fcmovnu
xor
test
cmp
mov
mov
pop
insl
jge
or
push
in
test
mov
jne
iret
xchg
or
dec
push
lods
mov
and
sarl
push
jnp
pushf
fidivs
dec
push
add
cmp
loopne
js
adc
mov
iret
je
testb
cmpsb
js
pop
ja
data16
push
orb
jae
sbb
bound
dec
add
add
out
test
in
movsb
imul
xor
enter
ja
push
inc
ljmp
test
ds
insl
dec
pop
or
xorb
movsl
fmulp
adc
cmc
enter
insb
jbe
ds
jae
insl
sub
mov
and
daa
aas
cld
mov
push
jno
jp
insb
sub
xor
popa
jge
fnstsw
imul
jne
into
xchg
push
pop
ret
cmp
loopne
xor
pop
lock
pusha
imul
sti
repz
out
jo
int3
repz
out
cmc
outsb
js
movsl
xor
dec
push
mov
dec
icebp
hlt
sub
add
dec
xchg
nop
push
mov
dec
mov
xchg
sbb
sub
inc
into
loop
in
inc
and
pop
sahf
adc
pusha
inc
and
adcl
pop
cmc
mov
shr
xchg
push
insb
xchg
cmp
in
mov
imul
dec
xchg
mov
je
stc
clc
test
add
imul
lahf
std
adc
stos
insl
insl
test
fucomip
pop
mov
push
inc
aad
jo
es
jne
or
add
push
scas
push
popf
aas
nop
repz
lahf
pop
cmp
push
scas
or
aam
notl
pop
lods
mov
popf
dec
xor
add
cmp
mov
push
jne
mov
popf
and
in
cmpsb
inc
imul
pusha
pop
cmp
mov
dec
leave
lret
bound
insb
enter
cmp
pop
outsl
sbb
fdivrl
inc
repz
dec
xchg
les
sub
xor
mov
stos
jle
mov
test
add
mov
fucom
adc
sti
mov
ljmp
mov
int
pop
push
std
cmp
inc
pop
adc
xchg
loopne
pop
filds
pop
in
jnp
dec
movsb
sub
mov
pop
push
mov
scas
pop
cmpsb
out
imul
push
cld
mull
xchg
mov
loopne
jp
out
adc
pop
cs
inc
xor
mov
clc
cmpsl
push
enter
inc
in
xor
mov
outsl
jmp
jmp
inc
insl
lahf
jp
push
add
pop
leave
and
stc
adc
test
sbb
xor
mov
div
adc
aas
and
inc
loopne
test
aas
movsb
insb
or
out
add
cld
pusha
shrl
push
fildl
push
and
and
mov
popa
jns
cmp
popl
cmp
jnp
test
mov
jbe
jno
add
mov
bnd
adc
push
fisubs
push
in
cltd
push
sub
inc
data16
dec
jo
movsb
cmc
push
mov
icebp
ss
or
mov
out
cli
xor
xchg
mulb
bound
and
and
push
stc
lcall
mov
mov
or
push
xchg
xchg
xlat
ss
imul
mulb
mov
jbe
adc
mov
mov
mov
xor
pop
popf
pop
test
inc
inc
xor
dec
lahf
sub
and
push
mov
divb
push
jge
mov
clc
outsl
ret
mov
fmuls
sbb
mov
cli
mov
add
push
cmpl
out
jns
mov
sub
loop
add
loop
test
sub
fstpl
push
hlt
stos
fwait
mov
ud0
fucom
or
xchg
sub
bound
add
cld
movsl
mov
mov
outsb
popf
push
mov
or
icebp
outsl
movsl
test
xchg
stos
jle
out
pop
push
dec
icebp
and
cmpb
and
xor
xor
inc
mov
insb
lods
or
stos
out
dec
inc
xchg
dec
imul
jmp
sarl
in
xchg
or
rcrl
mov
and
fcmovu
insb
mov
sbb
push
cwtl
pop
push
dec
push
mov
adc
push
ljmp
push
lods
push
shrl
sub
lret
in
jmp
leave
mov
mov
cld
add
addr16
popa
xchg
sbb
mov
mov
addr16
cmp
iret
loope
cmp
aam
fistpll
jbe
mov
sub
in
and
ret
sub
jecxz
sti
dec
movb
add
sub
popf
fldcw
adc
lods
xor
lods
xchg
cwtl
dec
filds
pop
filds
sbb
or
xchg
stos
dec
mov
aas
dec
js
or
in
push
lock
out
pop
pop
mov
add
fstl
shlb
call
sahf
xchg
xor
ss
jnp
and
negb
arpl
js
ret
sbbl
sti
sbb
jle
rclb
sbb
push
or
sub
movsl
test
xor
addb
mov
push
sbb
dec
mov
or
sbb
and
push
aam
cwtl
mov
lahf
les
jns
add
sub
mov
aas
cld
jo
scas
mov
dec
xchg
inc
jecxz
inc
idivb
dec
xchg
dec
andl
outsl
jo
ss
or
and
add
fs
push
das
and
push
xchg
xchg
aad
outsl
ss
mov
clc
call
int
cmp
sub
xchg
xor
in
in
daa
fwait
dec
push
dec
adc
mov
les
lods
pusha
out
dec
shll
rcl
jecxz
add
mov
jmp
call
rcrl
or
jmp
pop
cmpsl
fdiv
mov
jp
sbb
adc
xor
je
adc
sub
jae
mov
jne
cmp
in
cli
inc
mov
inc
push
mov
sbb
pusha
xchg
mulb
xor
mov
sahf
cmp
mov
lock
push
mul
out
mov
daa
jne
or
cmp
inc
pop
fstpl
into
test
jae
or
or
cld
jmp
adc
dec
sbbl
out
cmp
cwtl
roll
int
and
in
or
jge
add
std
dec
jg
or
sar
sub
mov
xchg
jmp
xchg
jne
jg
pusha
jg
bound
lods
int
fdiv
cmp
push
sti
mov
outsb
jecxz
aaa
xchg
pop
xor
stc
ja
in
fstl
xchg
adc
mov
jb
paddd
insl
lds
test
pop
addr16
adc
xchg
arpl
fwait
rclb
bsf
test
aaa
insl
sbb
sub
sbb
or
adc
repnz
inc
mov
popf
lds
inc
out
jbe
jge
mov
sub
cmpsl
es
arpl
push
mov
cmp
sub
push
popf
pop
shlb
and
packsswb
sbb
jno
inc
sub
pop
or
xchg
mov
mov
xchg
sbb
cmc
arpl
xchg
or
lods
push
cltd
ja
dec
jns
lds
mov
shlb
push
mov
sbb
cmc
add
and
scas
dec
repz
jo
or
xchg
and
push
push
xor
dec
mov
xchg
mov
sub
in
icebp
mov
ficompl
jne
cld
in
inc
pop
jne
sub
sti
push
sub
mov
vmread
nop
gs
aas
jmp
mov
push
gs
sbb
add
inc
insb
mov
pop
xor
mov
jns
push
outsb
sbb
inc
push
add
sahf
dec
sub
jne
decl
pusha
dec
mov
adc
cmp
ret
pusha
cmpl
and
aam
cmp
loopne
lds
xor
jg
sub
jb
lret
inc
hlt
cmp
push
push
cmp
test
fdivrl
pusha
or
lret
and
fsubr
lret
jae
ja
mov
movsb
xor
mov
out
mov
push
sbb
shlb
in
call
adc
dec
jp
roll
mov
lret
adc
sti
adc
je
faddl
mov
out
jmp
iret
bound
pop
int
pop
and
movb
push
or
in
and
sub
leave
mov
cmp
in
outsl
bound
cmp
mov
iret
sub
mov
cwtl
clc
daa
in
outsl
ret
mov
pop
mov
ds
popf
sbb
inc
stc
jae
sub
push
clc
out
pop
inc
xor
xchg
aas
stos
sbb
jne
scas
ds
push
iret
fs
jae
sub
dec
std
push
orb
loope
iret
mov
sahf
xlat
pop
jnp
neg
ja
js
ss
mov
dec
xchg
int
or
jle
fldl
mov
shll
sub
mov
insb
and
in
je
cmpsb
adc
fsubl
test
inc
sbb
pop
pop
jnp
cmp
inc
adc
cmp
pop
mov
jg
xchg
push
push
add
loopne
mov
ljmp
pop
push
mov
pop
dec
push
cmp
cmp
dec
sbb
ds
mov
imul
out
inc
in
es
paddusw
mov
sub
mov
iret
in
stos
xchg
sbb
jmp
inc
test
sub
inc
and
push
push
ret
pusha
push
dec
aas
das
mov
and
fdiv
or
adc
test
inc
cmp
pushf
push
inc
mov
shlb
adc
push
xor
or
add
dec
cmc
mov
sarb
mov
pop
sub
fnstcw
imul
ret
fsubl
in
mov
sbb
test
shlb
jle
cmp
cltd
xlat
das
repz
insl
jp
lret
mov
test
dec
leave
out
aad
or
test
bound
sti
jb
jno
jp
push
pop
and
mov
sbb
mov
push
mov
dec
addb
movsb
xor
repz
push
mov
inc
and
cmc
sbb
movsl
repnz
fs
aas
int
loop
scas
jecxz
add
addr16
sahf
outsl
sbb
dec
jge
test
ret
inc
adc
scas
mov
shlb
insl
pushf
xchg
dec
fisubrs
cmc
rcll
js
mov
mov
add
push
clc
nop
or
loop
sbb
adc
pop
in
jle
loop
mov
pop
cmp
jbe
mov
cmp
in
lods
add
pop
lock
test
jne
and
mov
pop
out
mov
insb
fstpl
insb
and
push
stc
xor
in
xchg
push
xchg
in
and
movsl
mov
lcall
fisubs
mov
scas
imul
jle
stc
xchg
loopne
mov
out
and
int3
scas
push
push
lock
jae
sbb
test
dec
lret
dec
adc
adc
jle
or
or
push
shl
fdivr
ss
ja
add
and
sti
push
enter
adc
push
rcrl
dec
dec
outsl
fdivs
aaa
or
inc
xor
and
call
icebp
into
subl
jl
cmpsl
lea
fwait
mov
in
fstpt
addr16
pop
popa
dec
icebp
outsb
shll
pop
xchg
je
push
cmp
xor
xorl
out
and
mov
aaa
ja
push
push
and
adc
or
jno
add
ret
add
mov
daa
inc
shrb
cld
fucomi
cmp
xor
mov
xchg
in
stc
sbb
jo
push
hlt
mov
mov
push
pop
cmp
mov
shlb
mov
ss
xor
xchg
add
mov
leave
cld
push
cmp
adc
mov
popl
mov
bnd
xchg
or
dec
mov
outsl
adc
jno
cmpb
inc
pop
jge
loope
mov
in
addr16
sub
push
mov
dec
cwtl
test
xchg
mov
fcoms
xor
add
pop
jmp
dec
add
cmc
popf
pop
inc
icebp
in
popl
rcl
test
adc
xor
mov
pop
out
sbb
enter
pop
fstpt
inc
inc
xchg
dec
xchg
cmc
adc
mov
xor
cwtl
js
daa
push
and
jecxz
sub
dec
sub
push
jb
shll
rorb
pop
popf
cmp
jg
xchg
pop
das
mov
out
push
lcall
sbb
popf
pop
push
in
mov
jnp
insl
cld
loop
cltd
insl
scas
push
outsb
jmp
imul
es
xor
xchg
mov
pop
pop
fcmovbe
out
mov
inc
sti
mov
call
mov
scas
rorb
xor
cmovne
cmp
push
out
pop
jae
jmp
dec
mov
cmp
repnz
stos
add
in
mov
push
rcll
out
pop
sbb
ss
es
scas
mov
scas
imul
push
fcompl
xor
out
das
leave
adc
push
mov
fistl
test
push
cld
xlat
sbb
sbb
call
xor
or
pop
call
cmpsl
jecxz
dec
mov
mov
mov
fs
lret
loope
addb
jmp
adc
fcoml
sarb
cmp
dec
popa
push
aas
adc
sub
pop
movsb
lahf
push
insl
cmpsl
int3
out
int3
stos
push
xorb
stos
lea
jo
out
outsb
rorl
sbb
xchg
ja
in
dec
frstor
mov
cmpsl
and
icebp
pop
ljmp
mov
adcl
jae
dec
ret
mov
incl
or
stos
out
or
insl
std
bsf
and
std
js
mov
out
movsb
loop
add
cmp
icebp
xor
and
lea
cltd
mov
add
inc
loope
test
mov
decl
add
add
mov
stos
fadd
rcrb
mov
enter
cmp
ret
xor
ror
test
sahf
adc
rorl
dec
sarl
and
push
mov
mov
sub
sahf
mov
mov
inc
cmp
js
out
addr16
mov
in
cwtl
roll
dec
cmp
popf
pusha
dec
jle
mov
dec
bndldx
xchg
add
cmpsl
cld
test
lds
stos
je
and
sub
jmp
imul
lods
ret
fnstenv
fimull
inc
ret
pop
stos
or
pop
sub
incb
add
xchg
cmp
imul
ja
sahf
std
xlat
nop
jg
aad
adcb
add
jo
mov
fcoms
cmp
decb
rorl
mov
sub
enter
jae
arpl
dec
in
pop
lahf
out
dec
xor
aas
xor
add
adc
mul
cmc
push
je
lcall
out
imul
and
sarl
xor
outsl
mov
xor
cltd
mov
pusha
imul
rcr
dec
scas
or
sub
jno
jge
dec
lds
cmc
jp
jp
div
dec
and
enter
jno
push
aas
inc
sbb
out
rcrl
or
idiv
adc
inc
push
data16
mov
mov
or
mov
pop
out
loop
adc
cli
push
prefetch
dec
out
xchg
pusha
out
in
nop
pop
pop
xchg
sbb
ja
push
and
jns
dec
push
lock
mov
xor
out
jmp
xor
arpl
push
ret
pop
gs
adcb
sahf
gs
nop
jbe
fimull
std
cmp
push
or
add
adc
loopne
adc
adc
cmp
bound
adc
push
in
pop
adc
cmc
pop
xchg
push
cwtl
or
mov
sarl
or
icebp
fisubl
mov
adc
fmull
push
adc
shlb
cmpsb
les
fdivrs
cld
cs
mov
xor
stos
imul
ret
sbb
mov
lds
xor
adcb
cld
and
pop
test
jb
lahf
mov
out
inc
add
mov
and
inc
iret
sbb
pop
inc
jo
enter
and
imul
call
xor
rcl
mov
daa
leave
bound
cmp
and
lds
in
mov
arpl
sbb
pop
leave
dec
inc
sbb
pop
dec
xchg
out
pop
xor
adc
insl
xchg
sbb
lea
ds
sub
xchg
mov
adc
arpl
ficompl
jmp
repnz
mov
pushf
cmp
inc
das
cli
fsubs
lea
mov
jbe
sub
sub
cmpsl
pop
bound
aas
xor
add
test
pop
push
dec
mov
scas
sbbl
cmp
pop
loope
shlb
inc
je
sbb
mov
fcmovnu
xlat
cmp
sbb
xchg
mov
icebp
rorl
mul
sbb
push
and
ja
jecxz,pt
push
dec
vcvtpd2psx
jg
cltd
imul
idivb
mov
inc
stos
add
inc
pop
mov
mov
pop
fldl
sti
mov
jo
mov
ds
cmp
inc
lock
sbb
into
out
cmp
test
out
inc
icebp
js
sbb
leave
xchg
inc
mov
ds
lods
mov
pop
mov
cltd
rol
filds
push
orb
sbb
sarb
dec
adc
rorl
cmp
mov
sub
dec
mov
into
adc
pop
pusha
pop
dec
cmp
cld
in
jp
cmpl
xlat
out
lret
jne
xor
call
sub
fisttpll
and
inc
inc
hlt
addb
mov
push
scas
pop
and
inc
pop
mov
in
adc
jmp
sti
lret
cmp
mov
fsts
add
pop
loopne
cld
ss
cmp
inc
or
cmp
and
jae
pushf
dec
in
jl
mov
cmp
loopne
lret
ds
test
leave
push
cli
add
cmp
insb
rol
movsl
add
mov
ret
or
sbb
test
adcl
sub
dec
fists
test
or
xchg
insl
pop
cmpl
mov
adc
xchg
iret
es
je
ret
into
mov
lcall
shr
into
sahf
jne
movl
fdivr
sbb
cs
aas
std
inc
nop
mov
push
xchg
rcll
movsb
adc
pop
mov
int3
pop
pushf
rcr
push
pop
cmpsb
cltd
pop
push
pop
mov
test
loope
xchg
scas
fldt
xchg
pop
xchg
das
adc
hlt
clc
mov
pop
das
add
fsub
push
and
lea
imul
jp
inc
arpl
xchg
bound
add
je
pop
adc
xor
imulb
or
adc
adc
add
icebp
cld
lock
lret
mov
dec
notb
xchg
repz
aad
outsb
dec
into
push
cli
bound
pop
mov
pop
cmp
push
jbe
sbb
adc
dec
ret
push
shr
sti
and
inc
sbb
fmull
xchg
jne
mov
add
leave
add
movsl
imul
mov
ret
xchg
les
dec
lret
iret
adc
pop
fdivp
subb
bound
mov
mov
cmpsl
sub
fadd
sub
daa
fxch
jb
lods
inc
adc
jl
sub
ret
push
jp
rcrb
out
xor
sbbb
jmp
and
mov
xchg
mov
sbb
cli
scas
or
mov
mov
dec
and
in
jns
and
vbroadcasti64x2
mov
jnp
jmp
xchg
ficomps
repz
mov
sahf
scas
mov
loope
dec
ret
mov
lods
rorl
mov
sub
sbb
sbb
or
incb
test
push
insl
ret
xor
cld
push
out
xor
xor
lahf
ja
jnp
popl
pusha
xor
and
or
jg
jns
push
dec
out
pusha
jl
lcall
inc
add
stc
test
lods
cltd
daa
mov
int3
pop
mov
pop
js
fcmovnbe
dec
int3
clc
or
lea
lock
mov
bound
out
loopne
xor
clc
mov
or
or
pop
in
mov
std
push
mov
add
lret
mov
mov
add
sbb
mov
pop
jmp
mov
and
fwait
lea
dec
das
adc
call
insl
in
inc
out
in
or
repz
adc
es
out
mov
and
je
and
mov
cs
inc
mov
pop
repz
cli
arpl
sub
iret
mov
adc
inc
stos
push
mov
push
push
cmpsl
ret
paddusw
pop
in
jmp
sbb
sbb
add
xor
out
and
loopne
lods
leave
mov
stc
mov
imul
pop
jecxz
mov
fistpll
sub
pop
push
push
mov
sbb
adc
mov
jno
lea
aas
jge
jns
mov
call
imul
xchg
aaa
cmp
pop
icebp
fwait
or
sti
pop
in
dec
push
xchg
cmp
fwait
repnz
jle
mov
rcrl
adc
add
and
lock
dec
push
xlat
xor
aaa
mov
adc
lods
popf
lcall
adc
add
dec
xor
mov
push
call
push
xchg
or
mov
xor
das
push
ljmp
xchg
sub
pop
mov
push
cmpb
clc
add
adc
mov
jne
jge
xchg
mov
push
lret
fwait
mov
xchg
out
and
cmpsb
dec
xchg
cmp
fwait
addr16
sti
xor
sbb
xor
mov
test
aas
idiv
cmp
or
testb
pop
outsl
xor
lcall
mov
adc
mov
loop
cmc
pop
lods
shr
scas
insl
movsb
scas
cltd
das
xchg
in
pop
lea
add
das
pusha
add
mov
ljmp
test
and
xor
cli
mov
push
flds
stos
loop
data16
rolb
into
enter
push
subb
scas
int
sbb
dec
leave
rcll
out
test
test
fildll
sub
dec
pop
lret
arpl
push
mov
movsb
or
test
test
or
jo
jg
push
sbb
clc
out
aaa
fcomip
cmpsl
aas
mov
loopne
in
pop
repz
fdiv
orl
ret
push
mov
dec
sub
cmp
sub
push
push
cmc
and
bound
inc
loopne,pn
fisubrs
fs
xchg
lods
das
push
push
pop
adc
icebp
lods
or
loopne
add
pop
mov
mov
sub
mov
xchg
cmp
sahf
sub
mov
adc
push
pop
jbe
cli
insb
imulb
pop
mov
sahf
lds
daa
mov
cmpsl
xor
into
pop
push
fadds
pusha
or
shll
inc
fildl
das
aam
int
adc
ljmp
bound
neg
push
dec
adc
dec
enter
xchg
xchg
or
mov
sbb
enter
jnp
dec
pop
out
mov
imul
sbb
jg
lcall
or
jno
ljmp
movsl
mov
iret
outsl
inc
mov
mov
loopne
jecxz
add
mov
jnp
add
icebp
mov
sub
cmpsb
cmp
lods
in
sbb
adc
int3
loope
insb
add
cbtw
and
lds
and
adc
mov
std
imul
test
push
fisttps
sub
loope
outsb
es
data16
lods
push
mov
mov
cwtl
adc
or
xchg
cmpsw
pop
popa
arpl
lret
xchg
addr16
cmp
cmp
test
aad
call
fdivrs
push
mov
daa
pop
clc
push
in
lds
aam
jo
repnz
push
jae
mov
loope
test
lcall
dec
mov
cltd
pop
test
mov
les
mov
scas
jmp
test
push
inc
dec
inc
push
stc
loopne
imul
dec
hlt
mov
sub
mov
outsb
pusha
dec
neg
jb
jl
jnp
push
adc
icebp
lret
ss
xchg
jno
mov
out
mov
mov
xchg
rcl
lock
mov
mov
cmpsl
cmp
mov
push
sbb
fwait
lret
cld
leave
decl
loopne
test
popf
push
flds
sbb
mov
adc
in
add
adc
aam
into
fists
sbb
xadd
sbb
sbb
lds
jo
push
xlat
stc
and
sub
outsb
push
lea
cmp
mov
and
cmpsl
dec
insb
scas
pop
jbe
xchg
inc
inc
xchg
cltd
xchg
cmpsb
jb
hlt
ja
adcb
inc
xchg
or
sbb
int
inc
call
stc
negb
addb
xor
cli
fwait
das
cltd
add
push
sbb
scas
push
dec
jle
sub
xor
lods
mov
pop
mov
cmpb
icebp
push
xor
movsl
cltd
loop
sbb
test
insb
sub
sbb
mov
pop
mov
aam
rcrb
pop
je
test
xchg
ss
push
pushf
cmp
idiv
loopne
dec
loope
es
add
mov
popa
add
adc
jle
in
push
mov
sbb
add
pushf
or
xchg
mov
inc
sbb
jp
pop
movsl
notb
mov
pop
je
sbb
cmp
mov
aas
pop
dec
lods
lds
sub
dec
call
dec
mov
cmp
fwait
std
arpl
cmp
cmc
dec
cmp
inc
jo
sbb
insl
add
test
push
inc
stc
and
push
in
mov
cmp
lea
adc
out
icebp
sbb
cld
sbb
inc
shrl
mov
jo
call
jo
test
fstl
and
mov
jns
loopne
cmp
sub
mov
pop
scas
aam
adc
out
push
into
es
lods
test
into
nop
je
jo
xchg
sbbb
mov
fs
fistpll
bound
mov
bound
xor
out
movsl
int3
nop
cltd
lret
mov
mov
ljmp
cmp
adc
addb
add
daa
xchg
jae
insb
popa
xchg
jno
aam
subl
sbb
adc
push
loopne
stos
cwtl
int
cmp
je
icebp
inc
pop
mov
cwtl
cmp
pop
push
and
jle
notl
add
xlat
jp
cmp
popa
mov
fdivs
or
outsl
push
dec
xchg
add
jmp
jne
xchg
inc
cmp
popa
sbb
inc
sub
pop
xchg
fwait
jno
rol
push
aaa
imul
mov
push
and
int3
add
push
xchg
cmc
insl
adc
sbbl
mov
arpl
and
pop
lds
dec
xor
adc
hlt
sbb
sub
pushf
or
sub
mov
sub
add
and
mov
mov
add
mov
adc
cmp
jg
repz
rclb
imul
arpl
adc
outsl
cmp
test
arpl
inc
mov
cmpsb
pop
enter
dec
cmpsl
stc
ficoml
jp
push
rol
ret
data16
lahf
lcall
mov
test
mov
out
notb
lcall
push
mov
loopne
sub
leave
add
mov
mov
jns
jmp
adc
aas
ret
push
out
mov
dec
clc
lret
sbb
shl
mull
shll
or
outsl
addb
xchg
cmpsb
scas
jno
iret
adc
popa
lods
popa
lock
xor
dec
xor
fildl
shll
xor
sti
cmp
mov
in
fldl
or
inc
leave
mov
lock
xchg
adc
out
je
mov
or
add
andl
add
jo
push
dec
add
data16
call
mov
aaa
sbb
cmp
rorl
push
scas
and
inc
sub
sbb
and
dec
or
xchg
addr16
jge
xor
adc
inc
hlt
mov
imul
mov
sbb
es
adc
out
jns
or
xor
stc
into
or
je
mov
pop
xchg
dec
sahf
ds
sub
cmp
in
pop
sbb
scas
gs
enter
test
cmp
jns
adc
pop
je
daa
mov
jbe
push
icebp
pop
hlt
subb
or
mov
out
nop
mov
enter
push
mov
bound
jg
pop
int3
cltd
ljmp
cmp
add
pop
out
and
insl
andb
mov
cmp
mov
mov
pushf
jae
xchg
sub
cmc
pop
fistps
ds
push
dec
repz
add
sub
aaa
addb
gs
cmp
faddl
add
mov
push
aas
vpandn
mov
out
push
inc
push
out
popa
or
into
pop
std
mov
xchg
int
rcrb
addl
sbb
neg
jle
sub
cmp
mov
repz
ljmp
xorb
cmpsl
mov
divb
xchg
mov
dec
int
mov
test
push
jbe
out
clc
cmc
cltd
xchg
mov
insl
repz
setae
add
sub
jg
nop
adc
sbb
lods
loop
dec
das
mov
push
notl
aam
push
mov
into
sub
jl
pop
cmpl
cmp
inc
outsb
push
inc
pop
jp
scas
cwtl
repz
mov
jp
lret
mov
ficomps
lret
mov
movsb
dec
cli
lds
das
mov
cmp
adc
sub
divl
les
mov
inc
stos
push
leave
fidivl
stos
pusha
lea
loopne
push
and
cmp
cmpsl
xchg
cltd
pop
les
fisubl
mov
addr16
jle
add
add
in
fistps
fs
lock
insb
push
add
icebp
fwait
arpl
jo
stos
mov
clc
clc
sbb
lods
cmpl
inc
add
repz
pusha
push
mov
test
popa
mov
add
inc
rorl
push
jbe
xlat
cld
sbb
in
int
mov
das
inc
xchg
dec
push
add
xchg
stos
or
mov
sbb
in
inc
mov
adc
fsqrt
jno
mov
xchg
mov
mov
pop
xchg
and
call
jp
xor
dec
pusha
ficoml
dec
popf
dec
repnz
xchg
sub
inc
outsl
outsb
and
sub
sbb
outsb
adc
inc
sub
cmpsb
gs
lret
inc
xchg
fisubl
into
scas
fidivs
mov
push
lods
dec
inc
dec
clc
addr16
call
pushf
jmp
es
sub
xchg
mov
ja
cmp
dec
sti
adc
sub
dec
in
mov
fistl
insl
aad
xchg
daa
ja
cli
mov
jmp
icebp
arpl
xchg
and
mov
adc
or
sbb
push
je
loope
into
xchg
inc
scas
pop
sbb
arpl
push
popa
mov
and
xor
data16
xchg
cmp
test
orl
test
insb
add
rorl
add
lods
push
mov
jns
sbb
mov
inc
xlat
sbb
sub
fisubrs
and
xchg
jo
sub
in
jno
dec
imull
stos
xchg
stos
mov
les
push
fwait
push
pop
inc
call
les
jg
mov
jns
sbb
jp
cli
sub
adc
mov
arpl
jo
repz
ds
mov
xlat
sbb
or
or
icebp
ret
mov
sub
out
cmpsl
shrl
pop
pop
xchg
sbb
out
jge
cmp
sahf
sub
lahf
inc
pop
fwait
inc
not
movsb
int3
mov
add
jmp
sbb
std
and
inc
push
mov
xor
or
pushf
or
stc
push
mov
adc
ficomps
dec
stos
add
rolb
xor
fcoml
xor
fimull
inc
push
test
les
and
clc
xchg
mov
xchg
sub
add
in
mov
pop
and
jb
xchg
jle
in
jae
pop
in
jbe
dec
jecxz
xchg
jmp
out
or
mov
pusha
into
inc
aas
icebp
rcrb
mov
jl
push
sbb
adc
jmp
lock
pop
clc
ja
pop
mov
sub
cltd
out
loop
movsl
insb
imul
pop
add
add
push
sub
xchg
lahf
inc
push
lods
and
mov
repnz
jge
loopne
aam
adc
pop
pop
outsb
and
dec
xchg
jo
push
pop
dec
test
ljmp
dec
mov
flds
imul
lahf
fwait
push
cmp
mov
pop
add
adc
xlat
pop
sti
xchg
int
xor
mov
dec
push
push
lahf
in
out
pusha
clc
pop
je
rorl
mov
jne
out
sbb
jmp
xchg
jbe
gs
mov
int
adc
cmp
push
loopne
lods
cmp
sahf
outsl
mov
mov
rcr
loop
dec
sahf
or
xor
mov
cs
push
xor
loop
push
jne
cmp
add
mov
imul
jp
adc
sub
jb
push
movsl
leave
shr
pop
jl
dec
imul
xor
jg
es
ror
lahf
scas
xor
fiaddl
es
test
popa
mov
mov
jbe
movb
or
adc
push
aam
rcl
lcall
outsb
adc
xor
and
add
and
push
lcall
adc
scas
repz
test
notb
or
jns
notl
add
xchg
jbe
mov
hlt
cmp
mov
ss
imul
push
jae
sub
out
icebp
mov
mov
lret
fsubrl
enter
cwtl
push
hlt
ret
scas
stos
adc
sbb
mov
sbb
add
js
out
sub
mov
cld
mov
lds
test
pop
fsubs
pop
xor
mov
cmp
push
addr16
add
stos
mov
nop
addb
inc
dec
sti
das
repz
xlat
sub
in
and
pop
pop
in
gs
sub
mov
das
mov
mov
pavgw
in
pop
div
cmp
leave
iret
shr
and
scas
xchg
pop
xchg
push
dec
mov
scas
mov
inc
je,pn
push
push
pop
or
and
bound
push
inc
and
xchg
pop
fbstp
adc
out
outsl
pextrw
sub
pushf
roll
jl
xchg
xchg
pusha
lea
test
insb
mov
mov
test
jns
pop
cld
imul
out
push
mov
pop
sub
adc
xchg
cmp
lret
cs
jnp
test
test
inc
push
xor
xor
mov
push
dec
ret
jo
frndint
dec
push
push
sub
gs
sbb
jl
mov
ret
inc
sub
nop
jnp
ds
jge
das
int3
or
lahf
mulb
and
and
xor
xor
adc
mov
lcall
movsb
jle
push
lods
scas
out
adc
cs
out
scas
pop
mov
lahf
lret
jle
shl
xchg
adc
or
psubsw
xchg
into
aam
push
xchg
xor
clc
ret
lsl
mov
iret
addb
push
adc
loopne
push
or
in
mov
sub
dec
jnp
xor
fbstp
cmc
loopne
cmp
add
fwait
sahf
xchg
adc
rorb
or
lret
lea
mov
out
push
jnp
sbb
int3
pop
roll
cmpsl
xchg
jne
cld
mov
mov
fldt
scas
xor
loop
out
dec
lret
jbe
jbe
popa
mov
fidivrl
pop
repnz
mov
fisubrs
dec
pushf
mov
mov
sub
pusha
pop
mov
insb
sahf
mov
jg
cs
xchg
test
inc
mov
cli
cmp
leave
sbb
dec
sub
rorl
sbb
in
imul
pop
cmp
sahf
xor
pusha
xor
in
mov
out
repz
xlat
out
mov
addr16
les
xor
xchg
jmp
xchg
or
cmpsb
jge
push
push
mov
sbb
add
iret
lahf
pop
or
lea
cmp
movsl
cltd
sti
in
mov
adc
std
mov
mov
xor
dec
ret
movsb
mov
mov
sub
sub
push
adc
mov
shlb
or
mov
push
xlat
sub
pop
cld
mov
lods
cltd
repz
mov
popa
mov
js
out
or
sbb
push
cmp
iret
mov
mov
nop
cmp
pop
test
not
bswap
push
lea
pushl
lea
call
pusha
movl
jmp
add
inc
jb
popa
je
inc
outsl
outsb
je
outsb
imul
add
inc
insb
outsl
bound
dec
outsl
arpl
mov
xchg
lea
mov
not
push
call
call
jae
fidivs
mov
jecxz
sbb
cmpsb
mov
outsl
fnstsw
or
addl
inc
xor
ret
or
ja
mov
ss
negl
mov
aad
mov
push
xor
mov
or
dec
mov
xor
sbb
hlt
cmp
mov
rolb
jns
mov
or
subb
lods
cmp
jp
scas
setg
and
lock
stos
loopne
lret
push
mov
xlat
dec
cmpxchg
add
xchg
test
jbe
cmp
sti
jmp
xchg
push
movb
testl
pop
sub
inc
pusha
leave
mov
divb
int
add
in
push
test
popa
mov
mov
xlat
mov
push
test
int3
decl
cmpsb
xor
push
add
js
icebp
push
lcall
popa
outsl
mov
stos
loopne
and
aaa
test
stos
daa
loopne
das
lahf
sbb
sub
jle
inc
xor
cmp
push
outsl
pop
imul
xchg
lret
adc
loopne
cltd
sbbb
stos
adc
loop
mov
out
and
xor
sbb
xchg
mov
add
sti
and
pop
insb
imul
mov
fsubrp
push
xchg
sahf
jle
mov
jmp
mov
test
xchg
ss
loopne
jle
or
dec
outsb
je
jb
outsl
arpl
fs
js
push
add
mov
call
shll
lret
dec
subb
sbb
rorb
cmpsb
subl
stos
shll
jp
cmp
pop
iret
xchg
leave
pop
jnp
pushf
adc
dec
pop
mov
daa
fbld
or
imul
jmp
repz
xchg
cltd
jbe
pop
aam
xchg
lret
ljmp
sbb
push
mov
mov
xor
call
mov
lods
aas
mov
and
adc
push
in
mov
dec
outsl
movsb
mov
mov
repnz
sbb
and
cld
fs
in
add
test
call
pop
popa
xchg
sbb
int
out
lds
adc
jg
xchg
xchg
subb
imulb
ljmp
add
dec
sbbl
jno
push
sub
xchg
test
sub
push
jg
sub
adc
stos
cltd
leave
xchg
jbe
mov
sub
xlat
sbb
mov
mov
dec
roll
jp
xor
faddl
jb
gs
jmp
pop
mov
pop
cmpsl
cmpl
add
fucomip
push
cmpsl
mov
dec
mov
cmpsb
outsl
cmp
and
imul
pop
push
xchg
cmpsb
sar
idivb
mov
add
dec
fwait
ret
int
cs
dec
and
cmp
dec
or
push
in
fadd
sub
lret
arpl
xor
pop
xchg
push
mov
push
ficomps
repnz
jbe
inc
xchg
dec
xchg
mov
imul
push
mov
ficoms
lds
push
pop
das
mov
push
jae
fsubp
lret
test
sahf
inc
outsb
cmp
fstpl
fdivl
das
in
or
repnz
cmc
adcb
push
std
add
xchg
xor
xchg
dec
add
xor
inc
jl
out
lods
jp
xchg
pop
sarb
movsl
in
dec
rcrb
cmp
xor
out
mov
fcmovbe
ds
fidivrl
call
jl
mov
scas
lds
insb
pop
sbb
xchg
aam
pushf
push
iret
dec
or
jl
cmp
call
aam
je
adcl
xchg
addr16
loop
mov
daa
repnz
fsubrp
add
push
test
dec
gs
mov
cs
aad
adc
inc
pop
test
jle
ret
xchg
repnz
cmp
dec
insb
or
mov
ds
or
inc
iret
addr16
jp
jno
insb
lret
int3
xchg
adc
xlat
jmp
fldt
xor
faddl
and
lahf
outsl
fninit
insl
cld
mov
je
lods
mov
orl
sbb
lret
push
and
inc
hlt
iret
ss
mov
inc
mov
xchg
mov
or
inc
jmp
cli
cltd
inc
mov
push
inc
lods
xor
add
adc
fidivrs
stc
dec
lods
out
mov
cmp
imul
cmpsb
pop
in
mov
arpl
lret
fs
ret
ficomps
and
aas
inc
outsl
repz
add
scas
lods
cwtl
pop
dec
pop
lret
outsb
inc
adc
xor
jecxz
pop
out
loop
insb
dec
int3
and
jae
les
dec
pop
out
mov
scas
enter
mov
or
cmp
jp
sub
cmc
and
call
in
pop
dec
scas
scas
xor
pop
pop
and
or
call
and
adc
inc
sub
hlt
xchg
aaa
mov
icebp
loop
stos
aad
lods
dec
enter
and
jmp
sub
sbb
adc
mov
push
push
fisubrs
sub
jne
or
add
sbb
mov
ljmp
cli
or
and
and
out
pop
and
loope
xchg
xor
or
repnz
jmp
outsl
rorb
and
call
inc
inc
je
lods
roll
pusha
jmp
jmp
pop
test
stc
or
negl
call
mov
mov
addr16
loope
and
jnp
ret
adc
pop
pop
push
xor
movw
daa
daa
mov
jnp
mov
fsubl
pushf
cwtl
sbb
negb
ds
jbe
push
jns
jmp
std
sub
std
lahf
fbstp
inc
int3
divb
cmc
pop
jae
insl
jb
movsl
jp
gs
scas
popa
rcrl
mov
xchg
xchg
mov
adc
sbb
dec
pusha
jp
xor
jl
xchg
out
scas
fisttpl
mov
inc
sbb
lahf
lret
xor
adc
jecxz
sti
int
insl
sub
insb
das
sbb
stos
lods
test
imul
jnp
and
addl
push
cmp
inc
inc
mov
inc
fsubl
xchg
test
lret
sub
fnstsw
push
nop
jl
pop
movsb
cld
xchg
and
mov
jp
incl
adcb
nop
cmp
clc
xlat
dec
es
mov
rolb
mov
mov
fdivs
pop
dec
xor
int3
mov
jl
test
mov
cltd
sub
dec
jmp
js
pushf
push
and
or
or
loop
jno
pop
push
xchg
out
rcr
gs
stc
cld
mov
push
ret
push
push
dec
pop
jmp
into
xor
dec
outsl
pop
dec
jmp
popa
sbb
fwait
sarl
imul
mov
inc
repz
mov
add
or
jo
sarb
mov
xchg
sub
jg
xor
dec
cmp
out
xor
shl
nop
je
pop
and
sbb
daa
xor
aam
fsts
xor
add
ret
and
adc
rcrb
shrb
xchg
fistl
pop
and
insl
xor
enter
lret
andb
mov
and
pop
jns
aad
in
fsubrp
test
fisttpll
ds
fdivs
pop
out
cs
stc
movsl
add
jl
mov
mov
enter
jecxz
mov
mov
mov
jmp
iret
inc
sbb
sbb
lahf
pmaxsw
xor
mov
sbb
push
cmp
ljmp
inc
jge
outsb
cmp
into
sti
dec
out
sbb
scas
push
cmpb
inc
aaa
jb
lods
xchg
ljmp
push
push
dec
push
int
xchg
pushf
in
and
insb
in
push
mov
or
xor
and
cmc
mov
sbb
test
aad
nop
shll
push
mov
jne
or
push
sub
cmp
aam
jge
addb
xchg
jmp
xchg
les
xchg
push
lret
bound
jge
push
push
mov
mov
clc
movsb
clc
add
mov
push
xchg
ficompl
pop
icebp
jge
jge
mov
add
xor
jmp
push
ljmp
dec
gs
xchg
insb
in
pop
fisttpl
add
mov
sbb
xor
mov
cmp
push
pop
andb
inc
sub
cmp
push
popa
sbb
in
push
loope
repz
xchg
sbb
xchg
push
in
int
adc
or
dec
ljmp
xor
test
jo
cmpsb
adc
fucomp
cld
daa
popa
shl
jecxz
and
adc
imul
sti
movsb
mov
lret
loop
add
mov
cmp
in
xchg
pop
add
in
jecxz
je
test
mov
dec
mov
mov
sbb
mov
adc
inc
dec
pop
popf
fldt
ss
xchg
into
xchg
push
and
and
lock
test
into
mov
and
xor
test
jmp
sbb
idiv
inc
push
add
int
cli
pop
push
mov
jnp
dec
fwait
insl
out
mov
bound
lods
mov
adc
fmull
stos
test
out
je
or
pop
dec
mov
sbbb
insb
push
test
arpl
jae
add
inc
or
xor
imul
or
cld
cmpb
aam
xchg
pop
ljmp
inc
jae
mov
repz
inc
jo
aad
aad
jae
xchg
xchg
xchg
mov
ja
popf
push
push
xor
add
push
mov
neg
pop
test
inc
rcll
push
lds
stc
jle
fcoml
or
mov
daa
jo
cmp
das
xlat
cmc
es
loopne
fs
dec
les
push
in
xchg
pop
fsubrs
call
mov
cmc
mov
jmp
ja
dec
in
xor
adc
inc
pop
and
dec
sbb
mov
push
aam
push
mov
jg
sub
out
or
push
push
shlb
jbe
mov
imul
jp
movsl
inc
push
pop
stc
lea
lds
loope
cmc
mov
cmp
pop
pop
scas
fxch
in
bound
add
sbbb
jb
loope
aad
lret
mov
popf
mov
pushf
adc
and
pop
ds
dec
adc
sbb
fisubl
dec
pop
push
xor
dec
push
addr16
es
pusha
cmpsb
and
out
push
inc
movsl
shr
test
arpl
je
xchg
and
mov
in
sub
divb
adc
movsb
hlt
test
jmp
imul
adcb
dec
fisttpl
jmp
pop
movsl
mov
testl
in
rcll
push
jb
xchg
and
outsb
pop
mov
cmp
icebp
sbb
and
jbe
daa
mov
mov
pop
mov
jp
mov
roll
and
fadds
inc
aad
sub
in
sbb
dec
dec
inc
xchg
mov
ret
mov
push
sub
out
mov
push
dec
mov
out
xlat
pop
dec
mov
sub
or
xchg
inc
inc
jb
mov
jns
clc
data16
fnstcw
jne
enterw
mov
push
jmp
test
cmpsl
outsl
pop
and
mov
jge
shll
mov
fld
dec
xor
lods
pop
rcrb
inc
push
loop
in
dec
fsts
decb
or
insl
lock
loopne
cmpsb
int
fistpll
movsb
xor
mov
rclb
scas
mov
arpl
and
jl
jl
jp
and
mov
inc
mov
mov
push
jg
shrl
adc
and
fistpl
aas
shr
jmp
dec
or
cmp
enter
das
adc
xor
outsb
popf
mov
and
adc
inc
xor
into
mul
popf
sub
fsts
dec
mov
xor
sbb
push
out
adc
push
push
pop
sbbb
repz
dec
lds
ja
pop
mov
in
fcoml
inc
mov
push
dec
dec
add
stos
repnz
push
ret
inc
inc
lret
not
mov
pop
dec
mov
inc
enter
and
js
and
xchg
xor
or
mov
out
jbe
sarb
scas
and
fwait
sub
ljmp
xorl
lahf
or
dec
lret
mov
push
xchg
sub
dec
mov
out
out
movsl
shl
adc
pusha
xor
sub
fdivrl
adc
loop
sbb
adc
mov
sbb
and
push
jne
into
xor
xor
repnz
push
jo
push
or
xchg
pusha
insl
ja
add
sub
leave
xor
xlat
jmp
and
les
and
ss
mov
imulb
mov
cmpsb
push
enter
psubusw
nop
test
pop
dec
imul
iret
xor
bswap
sti
addr16
dec
dec
std
mov
iret
adcb
scas
and
or
or
out
andl
iret
rep
fs
popf
sub
xor
mov
fdivrl
sub
sub
adc
add
mov
lods
xchg
decl
aam
or
xchg
dec
cmp
xchg
mov
daa
sahf
xor
pop
and
cs
push
cwtl
jmp
mov
or
mov
popf
outsl
nop
lods
jmp
xchg
xchg
xor
insb
shr
fbld
mov
add
mov
mov
leave
lcall
out
cli
mov
mov
ja
in
es
cmp
sub
push
fneni(8087
and
aas
pop
xchg
clc
cmp
pop
mov
pop
push
shll
mov
loope
jns
rcl
lock
xchg
lea
xchg
icebp
mov
pop
pop
fists
sbb
fdivr
pop
ljmp
in
popf
dec
mov
xchg
push
xchg
push
mov
testb
imul
int
lret
xor
out
cld
push
repnz
insb
mov
std
sahf
int
and
sbb
out
adc
jb
pop
or
dec
jle
cltd
jne
popf
add
leave
mov
rorl
add
clc
fdivr
lea
mov
dec
sub
sbb
and
les
out
xchg
cmc
aad
adc
lods
pop
push
and
mov
add
std
js,pt
jno
je
jnp
pushf
test
pop
rorl
push
xor
or
jae
inc
outsb
or
mov
iret
cmp
xlat
and
jnp
stc
jns
hlt
jne
push
mov
push
push
mov
cmp
test
mov
mov
pushf
xor
stc
addr16
shrb
mov
inc
pusha
adc
in
cmpsb
rep
inc
das
imul
mov
ret
mov
xchg
inc
jae
sbb
pusha
fucomp
inc
jns
stc
jp
jg
and
xor
pop
stc
or
mov
hlt
adc
cli
jne
xchg
or
jmp
jbe
lods
in
repz
sub
mov
mov
aas
call
jle
les
ret
out
lret
mov
aam
fldcw
cs
push
cmp
cvtpi2ps
mov
gs
js
jecxz
adc
xchg
arpl
imul
cld
jg
hlt
outsb
xchg
inc
xor
jno
cli
add
into
fwait
decl
mov
xor
movsl
rcll
cmpb
cmp
in
out
push
cs
mov
xchg
sub
cwtl
lea
mov
push
mov
fdivs
push
int3
pop
stc
push
imul
ja
xchg
sub
aaa
cmp
test
out
cltd
out
dec
out
cmp
stos
sub
pop
or
repz
fistpll
hlt
mov
dec
cmp
adc
adc
push
and
mov
adc
add
pop
mov
mov
adc
push
fmull
lods
push
mov
daa
out
jecxz
aas
into
dec
mov
ss
pop
stos
into
je
dec
into
test
js
xlat
xlat
inc
addr16
jnp
sbb
iret
popa
push
xor
mov
aam
sbb
mov
xor
inc
movsb
dec
xchg
roll
adc
jns
push
popf
xor
jle
mul
xchg
ret
push
pop
adc
push
push
insl
xor
xor
mov
pop
mov
jp
lods
je
lcall
push
daa
fs
in
xchg
daa
icebp
inc
cmpsl
sbb
loope
ret
aaa
sbb
popf
add
sarb
sahf
into
and
ja
mov
xchg
xchg
daa
xchg
sarb
xchg
cli
gs
add
inc
and
cmp
mov
or
loop
aam
sub
addr16
testb
xor
leave
mov
fcompl
sbb
cwtl
data16
push
pop
jbe
rolb
test
mov
push
sbb
inc
ljmp
mov
xchg
std
cltd
dec
je
lret
cmp
nop
stos
in
fildl
mov
sub
scas
add
mov
push
out
inc
imul
lahf
push
mov
jp
sbb
or
ficompl
nop
xor
mov
and
mov
sub
movsl
adc
paddb
lock
adc
js
dec
mov
insl
mov
jg
icebp
or
iret
sub
xchg
add
sub
aad
xor
loope
pop
mov
sbbb
jle
fwait
push
rolb
aam
clc
mov
je
shrb
inc
push
mov
cld
fisubrs
faddl
lock
ret
lret
nop
pop
and
xchg
xor
hlt
or
insb
cwtl
jmp
int3
and
lods
int3
mov
and
jmp
sbb
push
out
mov
lds
in
xchg
jnp
paddb
mov
cmpb
sbb
xchg
jmp
cmpsl
addb
xchg
mov
std
insb
inc
imul
cmp
outsl
xlat
mov
fldcw
sbb
data16
sbb
cwtl
je
ja
push
sbb
inc
clc
sti
mov
sub
dec
into
inc
lock
sbbb
mov
loop
jecxz
scas
inc
jmp
sbb
dec
aaa
andb
and
arpl
sahf
and
sub
adcb
or
pop
mov
cmp
pop
and
xchg
jo
int3
mov
ficoms
jb
or
xorl
push
push
cmpsl
cmp
fdivr
jle
icebp
xor
jae
push
dec
repnz
pop
cmp
or
adc
scas
es
pop
sbb
outsl
testl
mov
hlt
pop
int3
push
and
mov
pop
imul
dec
jbe
ja
dec
mov
arpl
cmpsb
add
push
adc
xor
in
mov
addr16
push
add
inc
sub
lds
pop
divb
jle
push
jle
mov
sbb
shlb
movb
or
dec
bound
jle
vpmuludq
stc
lds
js
or
jle
outsb
xor
push
or
sbb
movsb
repz
fucom
pop
jb
pop
mov
ja
mov
sub
lods
fsubrl
daa
sbbb
or
call
sbb
in
ss
mov
cmp
call
jae
cmp
mov
fmul
sti
jl
out
push
xor
insl
fbld
cmpsb
dec
lock
insb
int
cmpb
pop
lea
les
xchg
cbtw
sbb
cwtl
cli
jg
sbb
test
inc
and
add
mov
dec
mov
aas
ret
inc
add
addr16
stos
mov
push
jp
mov
int3
push
lock
mov
scas
sbb
pop
jne
push
repnz
mov
in
adc
outsl
sarl
lds
cmp
sub
adc
mov
test
xchg
xor
bound
aam
test
xchg
cmp
inc
jno
call
cmpsb
cli
pop
fcom
inc
test
lea
mov
sbb
sub
cwtl
jmp
jno
shlb
mov
adc
add
mov
cmp
mov
enter
gs
int3
enter
sbb
adc
ficomps
jae
and
xlat
dec
pushf
xor
es
push
ds
out
int
fbld
inc
adc
clc
bound
mov
lods
out
pusha
in
inc
ficoml
and
mov
cmp
pushf
sbb
inc
ret
jnp
stos
pop
sahf
test
and
icebp
clc
sbb
adc
enter
xchg
xor
sub
loopne
or
push
aas
cmc
add
lds
xchg
fs
pop
insl
imul
push
mov
aam
pop
in
or
jno
mov
mov
repnz
aaa
adc
pop
nop
bound
stos
xchg
xchg
sbb
in
pop
inc
insb
mov
push
imul
mov
fwait
cmpl
add
cmc
pop
hlt
in
dec
push
push
neg
dec
or
rcrl
in
mov
lods
adc
mov
fsubrl
ret
pop
xchg
dec
aas
mov
outsb
cwtl
pushl
hlt
lock
fsubrl
adc
sbbb
lahf
xchg
push
loope
cmpsl
adcl
or
mov
mov
call
out
xor
insl
insl
pop
outsb
cld
popf
test
push
and
add
ror
test
pop
lods
fldl
mov
aad
in
aas
fmulp
push
ret
cmpsb
daa
pop
out
je
or
xchg
std
jae
dec
in
ljmp
les
push
sub
jecxz
inc
loope
repz
test
cmpsl
or
add
xor
push
fwait
jno
mov
ja
inc
enter
scas
mov
mov
xchg
mov
je
sbb
lcall
sub
addl
repz
sbb
mov
les
lods
cltd
nop
pop
cli
adc
fidivl
sti
jg
xchg
loopne
sbb
mov
ljmp
dec
xor
push
aas
repz
aaa
mov
mov
and
ds
ss
sbb
dec
ficompl
pop
cwtl
mov
aas
ret
push
in
enter
xchg
inc
fwait
das
fcmovnbe
imul
mov
rclb
pop
fistpll
push
jp
mov
pop
and
stc
jge
add
mov
xor
aam
mov
xchg
popf
sar
and
cmp
push
gs
ja
add
dec
mov
xlat
in
mov
jp
sti
xchg
in
dec
test
mov
lea
das
sti
xchg
add
data16
xchg
pop
mov
clc
fmulp
inc
jno
xor
sbb
orb
mov
fisubl
push
stos
in
and
mov
or
loop
fwait
mov
out
fbstp
lds
dec
sub
sub
arpl
movsl
popa
mov
fmuls
dec
inc
imul
mov
mov
gs
cmp
pop
pop
lock
sbb
sbb
cmp
jnp
jl
adc
and
test
into
inc
push
mov
pop
xor
jecxz
popa
mov
movsb
xchg
test
hlt
lea
adc
xchg
stos
lds
insl
ja
aaa
in
fdivs
dec
dec
test
sub
jno
mov
mov
dec
lock
insl
dec
dec
fistpll
push
call
fld
data16
lcall
push
sbb
icebp
jp
xlat
scas
in
enter
mov
jecxz
mov
mov
inc
imul
adc
sbb
fists
add
stc
lods
cmc
enter
inc
imul
dec
xor
popa
pop
cmp
dec
out
lret
movsl
pop
stos
fildl
dec
push
enter
insl
rcrl
jg
jg
dec
push
push
sub
cmc
rclb
int
inc
lds
ja
push
mov
jo
jb
lret
mov
xor
mov
inc
jbe
xchg
in
mov
aaa
pop
or
icebp
mov
xor
inc
je
divl
cmpsl
es
push
std
dec
inc
sbb
imul
lods
mulb
loopne
ror
les
imul
adc
push
mov
gs
call
insb
aaa
xor
sbb
popf
adc
imul
fwait
rclb
and
mov
and
xchg
int3
push
imul
xchg
dec
fmull
negb
loope
and
movsb
loopne
into
dec
add
scas
repnz
jns
xchg
push
xchg
int
lods
addr16
imul
mov
and
lret
into
les
das
lods
cmc
lret
pop
test
jbe
cmp
loop
mov
mov
loopne
out
loope
test
xchg
frstor
daa
cwtl
scas
inc
inc
mov
test
lsl
and
aam
mov
mov
xor
es
sahf
mov
sub
out
mov
adc
mov
inc
lcall
jne
or
mov
sbb
push
cld
dec
out
mov
loopew
loopne
cmpsl
gs
dec
inc
or
repnz
movsb
pop
mov
test
mov
mov
and
xchg
movsb
mov
imul
les
insb
stos
daa
or
push
das
mov
push
add
xchg
mov
pushf
mov
shlb
lcall
insl
pushf
insl
ds
mov
popf
ljmp
in
cwtl
add
pop
stos
jg
loope
mov
sarl
cmp
ss
jle
ret
fcmovb
js
xchg
mov
xchg
cld
arpl
mov
push
out
push
push
dec
leave
or
xchg
inc
xor
mov
sub
fsubrl
cmpsl
mov
sub
cli
es
mov
adc
pop
sub
xchg
enter
std
xor
test
leave
nop
adc
jg
dec
aas
jmp
shlb
mov
push
jl
xor
push
push
sti
or
ret
pop
out
loop
jle
push
dec
cli
sbb
and
cmp
and
push
mov
xor
mov
test
mov
ret
bound
adc
dec
mov
push
mov
arpl
ja
mov
dec
jmp
nop
lret
sub
pop
mov
mov
lcall
leave
xchg
addr16
add
sub
and
fnstenv
pop
cmp
sub
sub
bswap
inc
xlat
jbe
mov
scas
or
mov
lods
sub
fs
imul
dec
jge
hlt
or
les
enter
aas
push
mov
mov
fsubs
ja
xchg
movsb
loop
in
call
mov
mov
xchg
mov
les
or
mov
cld
sbb
shll
mov
xchg
jno
dec
jmp
mov
imul
cmpsl
jle
jb
and
push
sub
in
fistpll
mov
xor
dec
sbb
stos
arpl
mov
jbe
sbb
lret
sahf
data16
inc
adc
xor
mov
rcrl
nop
int
fisubrl
sbb
sub
lret
cmpsl
ljmp
sbb
in
pop
jecxz
popf
pop
xor
les
adc
sub
adc
or
out
fildll
mov
and
cld
les
or
push
shl
fldl
sub
cmpsl
dec
push
test
inc
ret
and
icebp
popf
loope
mov
sbb
rcr
out
aad
adc
in
lret
mov
dec
out
pushf
xchg
mov
xchg
lock
imul
fiaddl
sub
mov
test
mov
sbb
cmp
int3
jno
out
mov
pop
pop
or
push
cwtl
sub
add
xchg
jge
add
jnp
xchg
out
iret
pusha
into
push
mov
adc
xchg
adc
mov
negl
pop
cmp
push
inc
mov
fldl
int
ss
add
test
in
shlb
jno
mov
or
adc
sbb
idivb
in
or
xchg
in
repnz
cmc
dec
sahf
test
jne
sbb
mov
inc
incb
scas
sub
jno
fnclex
adc
js
cmp
push
hlt
inc
or
nop
imul
sbb
outsl
jnp
out
popf
les
inc
push
es
pushl
mov
lret
cmp
mov
clc
out
subb
out
movsl
mov
in
or
pop
repz
jg
sub
mov
fcomps
jmp
ret
mov
sub
jmp
mov
push
rclb
push
and
pop
insl
int3
insl
push
test
jecxz
test
rol
jle
or
arpl
cltd
push
inc
push
mov
mov
adc
test
test
incl
shlb
lock
sub
pop
mov
outsb
or
test
sbb
ret
push
popa
pop
imul
inc
loopne
mov
cmp
lret
bound
mov
add
push
lahf
dec
mov
xchg
into
jge
cvtps2pd
or
test
xchg
cli
pusha
push
in
pushf
adc
pop
mov
dec
movsl
push
mov
add
lods
xor
shlb
push
lea
imul
fcoml
lods
aad
scas
inc
adc
cmp
dec
jle
jge
in
out
iret
pop
loopne
push
adc
scas
mov
jle
xchg
jne
aad
mov
mov
add
and
pusha
push
or
add
clc
popa
test
lea
sub
jno
add
lock
jecxz,pn
xor
les
jecxz
push
add
add
rolb
and
rcr
mov
mov
or
push
movsb
mov
test
add
outsl
lret
les
ss
ret
jl
insl
jnp
mov
sahf
lods
add
push
into
mov
xchg
je
les
ds
xor
rorb
xchg
sub
addl
xchg
and
sub
data16
popf
push
fidivrs
pop
insl
add
dec
jecxz
sub
inc
pushf
popf
into
xor
sub
pop
aaa
sub
out
test
ret
push
jns
xchg
push
jg
inc
xchg
lds
xchg
pop
mov
lds
neg
dec
dec
mov
adc
sub
pop
dec
or
pop
add
fcomip
adc
rorl
push
repnz
addr16
pop
inc
dec
js
add
popf
and
sbb
jbe
ja
sar
lods
sbb
lods
adc
pop
dec
rcll
mov
mov
push
pop
outsb
and
xlat
int
pop
movsb
inc
lea
mov
pop
rorb
fmulp
dec
and
jmp
rcr
ljmp
cltd
inc
test
mov
push
ret
pop
and
mov
pop
insl
ret
or
xor
movsl
dec
ret
mov
out
pop
pop
inc
cmpsb
jno
test
das
ljmp
mov
aad
fbld
loopne,pn
js
cltd
es
cmp
jbe
mov
fistpll
xchg
add
loopew
adc
jmp
sbb
and
ljmp
mov
pop
dec
xor
pop
push
clc
in
jmp
xor
xchg
in
mov
aaa
mov
lret
mov
inc
bound
mov
icebp
mov
insb
fidivs
push
cmpsl
imul
leave
adc
rcrb
sbb
outsl
dec
or
jno
out
mov
jle
roll
mov
pop
repz
jbe
pop
leave
push
sbb
mov
inc
sbb
fwait
push
addl
push
add
pop
rorl
ljmp
cwtl
aas
mov
arpl
fs
sbb
popf
adc
stc
testl
adc
jl
xchg
ret
lea
sbb
sbb
sub
cli
clc
push
scas
cmp
mov
mov
mov
jle
push
stos
fmuls
test
hlt
scas
enter
pop
jg
movsl
sub
faddl
mov
sti
fldz
cmp
loope
sub
adc
rcll
mov
and
jle
jmp
xor
dec
sub
cmpsl
in
and
add
xchg
mov
out
mov
sub
nop
subb
cli
mov
inc
imul
cmpsl
mov
ret
clc
call
in
sub
imul
and
pop
cmp
push
iret
sub
lret
jns
push
dec
jg
aam
clc
scas
outsl
inc
in
mov
jecxz
mov
ja
stc
loop
push
stos
mov
jge
ret
mov
je
xchg
jmp
sahf
xor
mov
pavgw
jmp
xchg
iret
push
sbb
push
add
cs
out
mov
push
cmp
pushf
out
cmpsb
and
out
adc
mov
arpl
mov
mov
iret
pop
lahf
ret
clc
push
nop
shrb
aas
subl
mov
ljmp
or
repz
add
sbb
cmc
mov
daa
push
outsl
movsb
int
int3
divb
push
push
jbe
and
out
dec
mov
mov
push
fldl
add
movsl
inc
rolb
insb
decl
jae
lds
push
push
add
sub
mov
mov
mov
and
push
add
sbb
jle
add
mov
dec
or
fildl
xchg
or
dec
je
adc
xchg
ss
xor
cwtl
add
push
std
jl
enter
gs
sub
cmpsl
notl
cli
scas
jae
daa
cld
push
divl
sub
fnstenv
sti
sub
lsl
push
in
add
jb
js
addr16
dec
push
ficoms
cld
jl
jne
inc
or
push
mov
add
add
sub
inc
sub
cmpsl
mov
cli
pop
dec
add
movsb
jg
jns
fsubr
cli
test
rcr
mov
les
sub
or
pusha
jmp
jnp
insb
pop
xor
pop
sbb
out
dec
insl
mov
mov
jecxz
sub
test
ret
imul
rcrb
mov
outsl
jbe
mov
sub
dec
mov
int3
pushf
or
jp
lcall
push
lods
adc
sbb
int
int
pusha
inc
mov
mov
and
adc
repz
out
fmulp
aas
test
decl
dec
ja
xchg
loop
jo
cltd
test
pop
xchg
insl
mov
lods
dec
and
aam
arpl
xor
lret
fistl
xor
xchg
pop
insl
xor
popa
lret
jp
lock
lcall
add
xchg
in
ss
inc
and
xor
arpl
js
dec
xor
in
dec
imul
push
stos
and
out
sti
aaa
cmpb
xor
jecxz
roll
das
out
mov
das
mov
dec
out
sbb
outsb
imul
cmp
pop
clc
mov
pop
jnp
push
leave
idivl
negb
outsl
loope
push
inc
insb
push
movl
mov
or
cli
arpl
imulb
lds
mov
sar
nop
nopl
loop
jge
xchg
pop
adc
pop
aad
imull
daa
lods
sub
sbb
sbb
scas
jge
rol
addr16
dec
jle
sbb
mov
dec
mov
mov
adc
lcall
je
jg
imul
nop
xor
add
jg
fs
cli
call
xchg
in
cmc
sbb
xchg
jp
ss
cmp
jns
sahf
cmp
mov
rolb
loopne
mov
je
sbb
shrl
imul
mull
mov
pop
dec
cmc
mov
xchg
adc
sub
inc
jle
addb
mov
lret
mov
dec
shl
xchg
pop
xchg
in
and
xor
jo
or
push
std
sub
popa
mov
pop
and
jb
std
pushf
insl
in
pop
lock
xchg
out
jecxz
lret
xchg
lret
pop
hlt
push
push
jecxz
ret
xchg
and
add
mov
fsubrl
setg
mov
fwait
pop
int3
cmp
pop
out
mov
dec
mov
jecxz
movsl
aaa
xor
xor
fidivrl
imul
inc
das
int3
ljmp
push
pop
pusha
and
dec
cmp
mov
in
add
in
test
outsl
push
or
sub
xor
cmp
xor
or
les
add
dec
pushf
or
iret
out
and
fwait
adc
push
cli
sub
mov
cwtl
rorl
fmuls
mov
subb
mull
jno
in
outsb
push
shrl
push
and
cmc
sbb
loopne
popa
cwtl
in
mov
or
ret
mov
cmp
loope
dec
bound
cmp
call
inc
daa
push
ret
sbb
fs
scas
inc
dec
mov
in
repz
fcmovbe
sub
jno
sub
adc
fcoms
pop
sbb
imul
push
or
xchg
hlt
test
push
mov
out
fisubrs
in
add
push
hlt
enter
fwait
test
push
ret
sub
pop
outsl
pop
or
mov
mov
jmp
ljmp
cli
add
and
hlt
sbb
in
jae
pop
mov
nop
mov
insl
addb
xchg
pop
jbe
stos
or
stc
jb
cmpl
jb
pop
sub
cmp
out
jbe
fstpl
jge
lea
clc
leave
iret
sub
add
fwait
ja
lods
aas
ss
mov
lret
fmul
cli
mov
xor
test
jbe
jmp
xchg
push
or
les
into
add
xchg
and
sub
fs
pop
rclb
jo
test
add
and
in
mov
push
aas
stos
and
mov
filds
arpl
gs
mov
sub
shlb
inc
sub
movl
mov
repnz
push
pop
movsb
fsts
in
stos
addr16
lret
in
push
test
dec
xchg
inc
xchg
xor
xlat
jg
insb
aas
xorl
rolb
outsb
ss
pop
inc
add
pusha
addl
repnz
ss
and
mov
sbb
mov
ficoms
into
dec
cltd
mov
out
jnp
and
orb
iret
lock
scas
mulb
pop
mov
insb
inc
leave
cmpsb
pop
pop
mov
mov
xchg
aad
out
xchg
mov
inc
repz
cmpsl
mov
pop
mov
pop
push
sahf
bound
add
sahf
out
jns
add
cwtl
fsubp
sub
out
xor
mov
aaa
pop
xchg
sti
in
push
call
mov
divl
movsb
xor
mov
adc
or
loope
push
xor
pop
inc
rcl
sbb
lds
inc
or
imul
mov
pop
mov
jae
add
mov
mov
cmpsl
jae
push
xchg
push
fnstenv
mov
loope
idivb
xor
adc
jns
xchg
push
insl
pop
sub
cmpsl
sbb
out
aad
xchg
xchg
pop
adcb
jg
pop
imul
adc
mov
jnp
jge
xor
sbb
lods
xchg
inc
push
loopne
out
not
enter
roll
jno
mov
gs
loope
call
repz
and
mov
push
sub
sbb
popl
and
mov
mov
fsts
jne
dec
xchg
icebp
shl
push
mov
rorb
inc
mov
jecxz
sbb
inc
jecxz
adc
lock
pop
mov
inc
outsl
push
xor
sbb
xor
mov
or
call
or
sub
xchg
cmp
mov
inc
scas
ret
clc
int3
dec
inc
ja
ss
or
rcpps
xor
dec
sbb
lds
shll
adc
sbb
lods
fildl
push
loopne
mov
sbb
scas
cmpsb
adc
psadbw
out
fistpll
or
cmp
jmp
sti
outsb
popf
adc
add
mov
ljmp
sarb
cwtl
fsubs
adc
or
sub
aam
int3
das
loopne
je
addr16
cli
out
outsl
dec
pushf
outsb
flds
pop
jl
stos
js
or
fstpt
daa
fmuls
pop
jl
outsl
or
enter
loope
cmp
mov
cmc
aas
jno
xchg
fwait
pop
movl
mov
adc
jp
mov
cmp
in
and
lcall
insl
push
ss
sbb
jae
mov
mov
movhps
insl
xorl
stos
xchg
mov
fistps
cmp
and
xchg
xchg
and
lea
in
xchg
pop
inc
jo
fstl
or
test
cwtl
mov
int3
stc
loope
jno
fisubs
rorl
mov
repz
in
scas
cmp
idivl
mov
insl
xchg
inc
rcrl
bound
and
add
data16
and
xlat
sbb
aaa
bound
je
adc
and
fwait
out
je
pop
ja
adcl
out
inc
jo
sarl
or
sti
push
aas
stc
pop
mov
pop
loope
inc
pushf
fwait
add
loop
daa
or
sub
dec
xchg
in
lods
push
out
test
fidivrs
outsl
iret
adcl
out
mov
in
inc
fcoms
push
ss
jl
dec
cmc
pop
jb
jmp
adc
js
jb
pop
push
popa
lods
sti
inc
push
into
jecxz
mov
sti
xor
xlat
sbb
int3
cmp
jne
ret
mov
jmp
pop
fildll
mov
rcll
sub
out
pop
mov
loope
je
lods
aam
push
mov
mov
stc
js,pt
cmp
int3
and
and
sbb
popa
xor
xchg
out
and
ret
adc
sub
cmp
xor
xchg
xchg
js
lret
add
jg
stos
adc
call
rorl
aad
xchg
sub
pop
pushf
lods
cmc
daa
imul
push
leave
xchg
and
aad
cmpsl
push
xor
imul
mov
into
daa
mov
push
stos
sub
push
aad
orb
fistl
gs
and
and
cwtl
dec
pop
jno
rcrb
pop
aaa
popa
mov
adc
loopne
cmpsl
xor
or
gs
je
hlt
add
scas
sahf
pop
dec
mull
idivl
mov
xor
lock
test
push
jne
lea
jnp
popa
repz
scas
mull
popa
out
jns
fwait
scas
cmc
mov
lods
cmpsb
dec
sbb
jne
hlt
add
mov
xchg
jp
push
fbstp
cli
inc
mov
xor
loopne
lcall
repnz
jnp
xchg
and
jbe
dec
mov
add
fcmovnu
shll
mov
xor
sbb
xor
rcrb
mov
pushf
dec
aad
pop
dec
add
fldl
js
pop
xlat
addr16
hlt
inc
into
icebp
pusha
lea
jge
gs
pop
hlt
loopne
pop
lahf
cld
rolb
sbb
cmp
inc
pop
add
cmp
clc
lea
sub
mov
lahf
mov
das
push
dec
lahf
jbe
subb
adc
xor
stos
out
jne
sbb
ja
sub
sbb
out
dec
mov
lahf
xor
fwait
dec
push
fbstp
inc
dec
jbe
insl
ss
lods
cmp
into
stos
stos
outsl
dec
adc
call
pop
pop
mov
loope
inc
sbb
mov
daa
out
push
bound
pushf
outsl
das
or
test
aad
stc
aaa
jmp
cmpsb
lret
movsl
xlat
add
je
xchg
in
mov
or
lods
dec
es
or
sbb
jle
call
and
sbb
cmp
add
and
out
and
push
js
subb
into
in
cmc
jnp
popf
jno
push
mov
jmp
jne
mov
pop
or
cmc
shl
dec
and
jl
pop
out
adc
cltd
in
int3
jg
les
fldt
sbb
ja
arpl
lcall
pop
stos
or
rolb
sub
ficoms
jp
rcr
and
push
das
xchg
pop
dec
aas
lods
dec
push
lea
int3
nop
jns
add
xchg
jae
negb
in
iret
jnp
mov
fiadds
aam
lock
loop
push
sarl
xchg
add
xchg
bound
rcl
push
and
jne
jle
jnp
xchg
sahf
jnp
ret
rol
adc
sbb
fcoms
movsb
int
jno
cmc
pop
add
xchg
or
sbb
adc
or
out
xchg
add
les
or
push
push
loop
dec
pop
call
ret
mov
out
xchg
xchg
rcrl
or
sbb
rolb
jge
jle
sti
and
xchg
mov
or
dec
shl
jl
xor
push
pop
push
mov
into
adc
sub
push
cmp
insl
mov
popa
aam
and
sbb
fdivrs
aaa
add
fbstp
sbb
inc
sbb
mov
fidivl
jne
pop
pop
sbb
mov
rolb
insl
into
setno
sbb
add
hlt
mov
lds
jnp
aam
mov
mov
imulb
pop
les
xchg
pop
into
mov
in
mov
or
mov
out
or
xchg
insl
scas
rcll
jno
xor
pop
in
insb
cld
leave
sbb
mov
ds
jnp
je
dec
popf
jns
out
daa
jecxz
push
xchg
push
xor
in
inc
aaa
iret
pop
sarl
jmp
lock
rolb
add
xchg
and
rorl
nop
xchg
call
mov
add
add
pushf
push
test
cmp
sub
mov
hlt
mov
push
cltd
ds
xor
adc
jmp
xchg
inc
sub
out
loopne
and
push
imul
adc
js
mov
testb
pop
lods
pop
dec
mov
push
xchg
imull
inc
sti
jo
in
xor
cwtl
mov
or
fwait
jne
aad
sub
outsl
ds
dec
ja
test
je
mov
jmp
adc
mov
jp
inc
and
hlt
les
mov
cmp
mov
cmp
mov
lret
imul
adc
add
daa
mov
adc
std
arpl
push
movb
cmpsb
add
inc
pop
hlt
or
fisttps
pop
xchg
je
jecxz
insb
xchg
ret
jo
aas
pop
lar
sub
sub
inc
insb
nop
cmp
push
mov
es
fwait
or
or
mov
adc
out
xor
or
in
jno
jne
jecxz
add
push
jo
pop
jecxz
mov
call
push
sub
das
mov
lds
mov
popa
jmp
dec
sbb
mov
mov
mov
out
and
pusha
cwtl
out
dec
das
daa
fs
mov
or
inc
loopne
sub
jmp
fcoml
xchg
scas
jle
and
je
cli
jp
push
fmuls
push
divb
movsb
and
mov
xor
lahf
inc
inc
pop
jae
sub
in
into
push
movsb
vminss
int
repnz
mov
in
add
clc
xor
les
ljmp
in
cmp
cs
stos
shrb
and
out
or
adc
stc
lock
in
jecxz
jne
xchg
aaa
adc
xor
mov
ja
enter
jnp
mov
scas
and
out
push
insb
sbb
jecxz
jmp
test
cmp
aam
xchg
cld
xchg
loope
mov
daa
add
mov
push
stc
inc
nopl
jle
add
lret
jb
mov
xchg
mov
push
ret
push
dec
cwtl
push
jo
xadd
fnstenv
mov
mov
pop
push
mov
xchg
mov
xchg
imul
test
aad
les
lock
sub
loop
push
jne
cmpsb
scas
pop
pop
and
push
mov
pushf
faddl
jl
dec
cwtl
popf
mov
pop
int3
lcall
jl
sahf
cs
insb
add
lcall
insl
mov
lcall
js
lcall
or
test
jbe
cs
ss
aaa
subl
rorl
das
loopne
inc
loopne
orb
jecxz
out
stos
mov
or
sbb
cld
filds
ss
loop
push
and
cmc
add
cld
add
and
add
lods
sbb
xchg
in
rorl
push
jno
pop
sbb
xorb
push
lock
lret
enter
ja
enter
fists
push
jg
jo
mov
and
imul
xor
adc
sub
xor
repnz
push
dec
icebp
or
lods
mov
imul
jl
and
jg
fnstsw
fisttps
lcall
roll
xchg
ljmp
mov
cs
mov
xchg
mov
pusha
fadd
loopne
cmp
fimuls
cmp
hlt
orb
mov
fwait
jns
jl
inc
sub
fistps
sub
push
mov
arpl
xor
push
add
add
mov
add
push
enter
push
scas
jg
idivb
std
mov
ficoml
xchg
pop
shlb
stos
dec
cmp
dec
inc
xchg
test
adc
cmp
insb
pop
out
mov
push
enter
xor
jmp
push
aad
int3
shlb
shrb
xchg
cmp
push
xor
adc
fildll
sahf
fidivs
sub
stos
int
add
lahf
mov
pop
cmc
dec
xchg
nop
outsl
xchg
bound
leave
mov
shlb
mov
inc
push
imul
rolb
xor
sbb
ret
cli
or
imul
out
sub
scas
sbb
sbb
sub
mov
adc
and
test
add
lcall
mov
mov
into
leave
scas
sti
std
cmp
mov
mov
or
stos
lods
test
xchg
lods
movsl
dec
rep
xor
mov
leave
rcll
data16
mov
mov
shlb
mov
stos
sbb
jo
add
jecxz
setnp
mov
inc
and
out
insb
cmovg
cmp
xor
movd
ljmp
jb
or
push
xchg
pop
xchg
ret
gs
xchg
test
mov
push
scas
cwtl
sbb
cli
aaa
mov
mov
jns
stos
jge
clc
dec
mov
mov
movsl
mov
cltd
add
sbb
cs
pop
data16
pop
cld
xchg
xchg
fsub
xor
fimuls
repz
mov
xor
test
movsb
imulb
adcb
out
fs
aam
loopne
in
popf
fidivs
js
push
testb
xor
cmpsl
fwait
push
mov
xor
jb
pushf
and
xor
or
dec
testb
jmp
test
dec
jecxz
out
add
call
cwtl
cmp
lret
xlat
cmc
cmp
dec
fsubrl
leave
cmc
and
inc
fiadds
lret
xor
and
aas
je
scas
mov
inc
cmpsl
adc
jp
sahf
xor
lods
int
mov
lods
adc
push
movsb
mov
call
xor
fsts
mov
pop
push
pop
add
push
mov
mov
cwtl
dec
pop
ds
cmp
push
mov
mov
scas
push
mov
push
dec
or
push
adc
dec
je
push
xchg
aad
ret
scas
mov
inc
dec
push
mov
push
add
and
push
inc
loopne
ds
insl
adc
lds
or
fwait
ret
gs
cmp
pop
pop
les
mov
jbe
out
cmc
jmp
sbb
xor
jnp
mov
mov
xchg
sub
cmp
mov
aaa
lret
adc
xor
out
or
cs
imul
mov
sti
notl
mov
stc
ljmp
sahf
icebp
inc
outsl
xor
mov
adc
jne
jecxz
pop
push
inc
hlt
cwtl
sbb
and
pop
xor
jge
add
jecxz
pshufw
mov
mov
repnz
or
lds
les
insl
pop
test
xchg
inc
addr16
outsb
xchg
mov
pop
movsb
mov
cltd
or
call
insl
or
sub
sbb
enter
push
add
inc
std
popa
adc
dec
out
jge
xor
pop
mov
movsb
fisubl
lods
sar
push
ja
test
and
fcmovb
cs
insl
fwait
and
leave
dec
lea
fsubp
enter
mov
push
pop
pop
scas
lock
xor
sub
add
push
mov
pusha
or
aad
lds
cwtl
sub
or
pop
push
sbb
xor
nop
lds
inc
nop
std
jmp
addr16
inc
outsb
clc
inc
lea
jnp
xor
pop
int
outsl
cli
loopne
mov
lods
outsl
push
lret
add
mov
push
push
sti
inc
mov
pop
movsl
fwait
xchg
cli
stos
sahf
xchg
jne
jb
out
mov
or
aam
push
and
adc
ret
xor
add
mov
jns
sub
out
int
aaa
mov
enter
loope
decb
mov
dec
push
test
and
and
insb
jo
xchg
enter
daa
cmp
push
sbb
push
gs
sbb
aam
hlt
pusha
push
push
mov
sahf
jp
jne
fldl
frstor
enter
out
fstl
movsb
adc
xor
test
ficoms
icebp
pop
mov
mov
pop
lods
mov
in
sub
dec
xchg
xlat
xor
xchg
push
es
push
insl
inc
jns
popaw
out
jnp
addb
es
and
xor
iret
mov
mov
add
scas
dec
shll
lret
lods
add
add
pushf
hlt
dec
mov
lds
aas
jns
cltd
push
mov
mov
inc
and
not
cmp
push
repz
or
xchg
jb
aam
enter
adc
lahf
mov
dec
mov
sub
js
xchg
bnd
notb
dec
stos
aas
jmp
mov
sti
sub
sbb
cmp
push
movsb
andb
mov
or
scas
mov
movsb
mov
fsts
daa
mov
pop
mov
iret
fwait
mov
enter
ret
loope
psubusw
push
scas
movsl
mov
movsb
adc
imul
xchg
ljmp
mov
dec
jl
sub
or
pushf
or
movsb
or
cmp
jl
jg
mov
mov
cwtl
div
aad
andb
adc
mov
xchg
pop
mov
in
dec
mov
add
push
xor
push
repz
jnp
jmp
and
test
or
divl
mov
clc
xchg
xchg
testl
sub
fisttps
in
clc
aam
test
or
jmp
cltd
clc
add
call
pop
popf
imulb
and
lds
xor
scas
js
ret
push
fisttpll
les
loopne
stc
mov
ss
dec
jmp
stos
vcvtps2dq
fmuls
xchg
sub
in
jnp
ret
mov
ljmp
das
sbb
adc
adc
popf
xor
sub
cmp
gs
mov
jg
ret
popa
jge
mov
push
cmpsl
into
cltd
cmp
sub
cmp
mov
mov
push
cmp
or
ss
stc
movsb
cmpsl
pop
stos
les
lock
imul
mov
cmpsb
les
cmp
xchg
mov
mov
fmull
test
or
mov
pop
push
filds
ljmp
pop
jns
xchg
adc
ss
jnp
lods
fstpt
fistpll
pop
icebp
pop
loope
mov
in
sub
ljmp
push
jecxz
scas
scas
mov
jns
cmp
mov
mov
movsl
dec
in
negl
loopne
xor
push
aam
loop
and
xchg
das
jo
pop
mov
adc
ret
insl
sbb
cmc
xchg
dec
sbb
xlat
out
hlt
in
scas
push
loopne
push
inc
cmpsl
les
rcrb
hlt
add
movsl
sbb
fidivl
scas
cwtl
xchg
xchg
and
rorb
jl
ss
or
nop
out
js
cmp
and
or
scas
add
movsl
movsb
in
mov
ljmp
jne
into
push
outsb
sbb
push
mov
cmp
sub
test
and
inc
or
jecxz
pusha
mull
stos
std
out
dec
pusha
notl
inc
lods
inc
lcall
mov
mov
xor
in
adc
ja
popf
mov
inc
dec
mov
xor
mov
bound
jns
fnsave
add
lds
in
sarl
push
jns
out
inc
loop
mov
sarb
ret
cmp
gs
or
or
and
negb
xchg
ficomps
out
inc
aaa
out
xchg
mov
loop
cmp
shlb
xchg
mov
mov
pop
jno
lock
popa
rorl
sbb
xor
sbb
popf
push
mov
jo
imul
adc
jl
loope
or
sbb
fucomi
adc
push
add
lods
out
add
dec
sub
push
cmpsb
xchg
lret
cmp
outsl
js
imul
add
hlt
jle
js
lds
dec
adc
and
pushf
enter
sub
cs
cltd
mov
pop
lcall
pop
lahf
scas
fadds
test
mov
or
icebp
push
pop
ss
mov
loope
arpl
int
mov
cs
sbb
icebp
iret
xchg
ret
sub
les
or
leave
loop
shll
ss
arpl
mov
push
dec
shll
jp
jo
push
sub
shll
xchg
fcoms
sbb
mov
mov
fs
mov
mov
js
bswap
push
jecxz
push
data16
repz
std
imul
out
xchg
jae
sbb
sub
xchg
cmp
jb
dec
dec
ds
mov
xor
pop
xchg
mov
dec
cmp
fs
pusha
pop
inc
mov
mov
sbb
dec
stos
imul
jbe
or
or
mov
inc
les
cltd
subb
sub
mov
fsubrs
cmp
sbb
scas
cmpsb
or
sub
mov
adc
aas
hlt
cmp
cmp
into
add
call
fmulp
andb
pop
bswap
adc
push
xchg
je
ljmp
seta
mov
inc
jnp
jmp
fsubrs
imulb
sub
push
movsb
in
test
mov
call
cmp
cmp
rcrl
daa
push
test
test
in
nop
mov
out
xor
jbe
or
push
icebp
lods
xor
push
aaa
xor
lods
in
and
sahf
out
and
nop
testb
pop
mov
mov
mov
mov
mov
cmpsl
pop
sti
fdiv
cmovg
pop
sub
jno
fnstsw
xchg
stc
xchg
sbb
mov
sti
icebp
arpl
pop
ffreep
mov
shrb
dec
sub
adc
sbb
inc
lret
sub
sti
push
and
das
xchg
or
lcall
stc
or
xchg
adc
jnp
out
aam
pop
call
repz
ret
inc
jle
push
pop
test
xor
jno
inc
cmp
mov
mov
jae
add
and
call
mov
and
mov
les
jo
and
mov
jb
hlt
fcmovne
or
xchg
and
fstl
out
out
mov
jge
xabort
jecxz
adc
jl
lds
mov
jle
xchg
mov
jg
push
in
pushf
adc
sub
fcomi
adc
mov
enter
stos
test
sahf
notl
push
leave
cli
in
pop
cltd
cmpsl
xchg
repz
inc
ljmp
movsl
push
xor
rorl
mov
jns
xchg
jle
xchg
adc
cltd
jg
movsl
test
orl
mov
pop
andb
inc
pop
cmp
nop
mov
pop
cmpsb
hlt
adc
stos
test
mov
push
ds
popf
mov
pop
outsb
movl
sub
hlt
leave
cmc
popf
jg
sub
loope
std
lods
lret
out
je
insl
xchg
incb
push
sti
jecxz
bound
clc
adc
cli
pop
test
clc
leave
imul
popf
jb
and
push
arpl
cmpb
push
lahf
dec
lods
lea
popa
xor
shr
lret
addb
mov
outsl
int3
cltd
mov
mov
movl
sbb
dec
xor
pop
bnd
arpl
sub
repnz
cmpsb
insb
push
pop
enter
mov
mov
xchg
loop
cmp
or
mov
icebp
push
pop
inc
shlb
jmp
push
pop
adc
cmp
clc
mov
ja
es
xchg
xchg
push
arpl
xor
movsb
int3
pop
ss
adc
mov
mov
cmpsb
addr16
mov
adc
or
push
jns
inc
mov
push
sub
cld
mov
mov
xor
movsb
cld
xor
sahf
aas
fadds
in
dec
cltd
cmpl
or
fldt
lcall
jp
sub
shll
mov
add
or
aas
mov
mov
xor
mov
test
decl
dec
in
push
aam
pop
outsl
ret
lret
dec
sbb
mov
leave
mov
inc
jmp
dec
dec
mov
lahf
xor
sub
subb
adc
out
mov
cltd
mov
jecxz
lods
push
fisttps
ficoml
or
in
outsl
les
push
movsb
insb
out
cmpsl
and
push
mov
rorl
push
cmpsl
mov
cmp
push
mov
xchg
imul
push
dec
insb
iret
or
jecxz
push
and
push
pusha
test
sub
shll
sbb
pop
xchg
lret
adc
out
fistps
sti
push
outsb
les
fstpt
rorl
lock
mov
sub
popa
fildl
fldenv
andl
push
into
xchg
inc
cli
lcall
jae
xchg
movsb
cmp
adc
adc
rcrb
mov
cmp
cmp
in
pop
iret
aaa
lahf
push
cmp
jo
xor
fdiv
cmp
sbb
data16
cmp
jmp
test
flds
jae
dec
pop
leave
jmp
stc
call
call
fmuls
lret
mov
mov
sub
dec
js
mov
pop
dec
lret
mov
je
and
dec
push
dec
mov
sub
dec
fsubr
sbb
call
insb
push
dec
clc
jg
jge
pop
sub
daa
push
cltd
push
mov
insb
mov
sub
repnz
jne,pt
xchg
push
xor
mov
das
xchg
std
add
into
shll
lods
loop
or
mov
leave
ja
cmc
cmp
fs
ficompl
or
or
jne
imul
insl
push
xchg
stos
ret
push
or
jno
orb
insb
pop
roll
add
out
cmp
cmc
js
popl
out
inc
mov
push
inc
mov
hlt
xchg
sahf
aad
xchg
sbb
sbb
mov
mov
adc
jle
push
inc
mov
cs
and
sbb
mulb
out
xchg
ret
sbb
inc
out
insb
stos
xchg
cmp
dec
gs
mov
pop
inc
push
sahf
imul
xor
nop
cmc
fcmovnbe
lret
cld
push
xchg
mov
push
cmp
repnz
aam
leave
jmp
jp
push
mov
ljmp
dec
push
imulb
lds
mov
xchg
sbb
or
jb
push
les
mov
mov
out
movsl
push
cltd
dec
jo
fisubrs
jecxz
adc
push
sub
in
xor
xor
insl
xchg
cmp
cmp
push
sbb
mov
cmp
ds
mov
shll
inc
fmul
adc
adc
int
inc
shrl
jp
sub
fimull
loop,pn
push
ds
gs
fs
inc
sub
adc
popa
int3
loop
xor
das
js
aad
push
dec
lea
mov
or
inc
mov
movsl
xor
push
push
xor
jae
push
rol
mov
mov
mov
in
jbe
jae
or
mov
xlat
mov
in
iret
sub
shll
inc
sub
aad
pop
xor
out
test
pop
sbb
filds
cmp
mov
cmp
inc
daa
mov
in
in
mov
push
repz
je
int
sub
mov
jge,pn
mov
xor
xchg
fs
pushf
xchg
push
jno
js
adc
push
sbb
xor
repnz
and
push
mov
std
dec
push
into
sub
mov
dec
outsl
add
jmp
std
nop
mov
outsl
cwtl
out
adc
xchg
out
sbbl
pop
outsb
cmp
jne
in
sub
add
bound
repnz
out
xlat
pop
clc
out
pop
stos
jae
jle
and
fucomi
mov
mov
inc
fmuls
fdivr
push
loopne
stos
cmp
fcoml
push
aas
stos
shll
sbb
loope
movsl
and
jnp
fnstsw
stos
adc
inc
gs
lea
aad
loop
repnz
call
inc
test
ret
mov
jnp
and
cmpsb
dec
stc
jno
and
ds
pushf
push
sub
and
movsl
enter
cmpsb
leave
sub
cmc
lahf
xor
jae
stos
push
push
push
sub
pop
xchg
ss
popa
fwait
inc
popf
notl
xchg
int3
dec
js
jle
outsb
popf
sbb
clc
out
pop
movsl
cmp
adc
insb
sbb
and
sbb
dec
popf
cmp
aam
ja
mov
stos
outsl
xchg
je
imul
dec
jbe
cwtl
jns
add
aad
icebp
sbb
or
stos
inc
mov
adc
sbbl
ljmp
cmp
cmp
sbb
sub
imul
add
repnz
hlt
add
xor
xor
test
dec
in
mov
or
cmc
xlat
push
stos
mov
push
out
push
aam
jae
cli
mov
rol
xchg
and
jge
add
xor
jg
dec
add
imul
out
dec
adc
dec
push
es
shrl
int
dec
icebp
or
pop
sub
imull
sbb
sbb
mov
cmc
rol
in
push
mov
and
xorb
sub
mov
dec
scas
mov
mov
ljmp
xchg
cmp
pop
mov
dec
inc
or
mov
sbb
testl
add
push
bound
xor
xchg
sbbb
xchg
int3
add
out
push
push
jne
mov
movsl
sub
out
inc
in
stc
int
int
push
pushl
sbb
loopne
sahf
xchg
mov
xor
xor
in
pop
int
jns
sub
adc
mov
repz
insl
shrl
cmp
inc
scas
fisubl
jne
mov
stos
test
repnz
adc
enter
fs
pop
mov
jnp
add
int3
cs
out
dec
pop
jl
dec
xor
sub
stos
std
add
popf
xor
mov
js
sbb
pop
ret
push
jo
mov
adc
fildll
add
int3
push
stos
stos
or
gs
inc
cmpsl
nop
psrad
and
ljmp
shrl
push
mov
cs
ret
hlt
mov
enter
mov
xlat
pop
cmp
push
push
pushf
lods
mov
aam
stos
cmp
into
jp
jecxz
fbld
mov
jge
push
cmp
dec
sbb
jp
xchg
mov
pop
subl
add
lods
ret
mov
out
ret
or
cltd
das
lods
jmp
sti
filds
mov
mov
fyl2xp1
in
in
fnsave
inc
pop
aam
ror
dec
mov
or
iret
pop
lret
loope
fs
addr16
pop
xchg
xchg
mov
lds
mov
orb
pop
cmp
stos
decl
and
lahf
push
adc
pop
test
mov
cmp
push
lahf
sub
pop
pop
addr16
aas
add
in
dec
adc
or
xchg
xchg
pop
push
push
in
dec
leave
fsubrs
lahf
iret
sbb
aaa
lds
xchg
and
aad
fcomps
stos
mov
popa
fs
xchg
lret
shrl
jne
adc
cmp
jge
int
and
inc
xchg
cltd
fstps
dec
imulb
dec
fisubs
sbb
imul
pop
out
mov
mov
aad
addr16
xchg
jg
icebp
negb
and
mov
and
fcoms
jne
verw
stc
shll
fs
xchg
mov
lea
inc
mov
dec
clc
mov
imul
test
stos
dec
cmp
icebp
bound
push
mov
rorl
and
cwtl
fsubrl
rorb
les
lret
jns
mov
pop
jge
ret
rolb
jle
icebp
shlb
inc
jns
dec
inc
aas
gs
cmc
xchg
repz
lods
pop
loopne
out
or
daa
movsb
lds
pop
mov
or
popf
test
aas
xor
nop
add
dec
pop
fdivs
mov
ds
lock
cmp
cmp
xchg
sub
and
jae
xlat
les
cmp
rep
adc
iret
outsb
testb
aam
test
lock
mov
push
inc
call
xor
xchg
shlb
adc
pop
test
xor
cwtl
pusha
push
jo
pop
adc
ja
pop
out
mov
pushl
data16
fwait
out
xchg
test
cltd
outsb
ret
inc
enter
or
scas
out
fwait
mov
mov
data16
shlb
inc
leave
fidivrs
mov
hlt
xor
sti
inc
sbb
or
fisttps
pop
hlt
outsl
jle
add
or
int
sbb
pushf
adc
jo
mov
sbb
add
mov
add
xor
adc
pop
stc
jp
jecxz
sub
xor
xchg
les
push
push
mov
push
insl
dec
out
adc
sti
adc
out
sub
das
pop
push
cltd
push
in
or
shll
fstl
loope
adc
adc
pop
sbb
das
aam
pushf
js
outsb
sbb
inc
test
mov
push
xor
sbb
andl
cwtl
xchg
test
mov
add
adc
test
cltd
std
movsb
mov
imul
push
and
je
inc
in
rol
cmp
outsl
pop
out
xchg
lahf
mov
lahf
adc
mov
push
xchg
mov
push
loopne
repnz
sbb
aas
movsb
xor
mov
jmp
lcall
xchg
addb
mov
repnz
les
in
dec
aaa
adc
mov
loop
rorl
sub
movsl
movsl
sbb
xor
fistpl
xorl
xor
jno
mov
mov
cmp
cmpsl
js
cmp
mov
jmp
int
shlb
loope
in
sti
mov
mov
out
jae
sub
and
insl
push
mov
and
and
cmp
leave
rol
aaa
push
jnp
pop
pop
inc
cmpsl
es
in
pop
cltd
pop
mov
pop
mov
ficoms
cmp
add
cwtl
xor
pop
test
lret
cltd
cmc
imul
sbb
inc
pop
inc
bound
dec
jle
xor
shlb
push
cli
push
test
xchg
jns
mov
lgs
subb
dec
push
and
xchg
lock
push
mov
add
sbb
dec
lret
jb
fwait
inc
pop
or
aam
addr16
je
test
mov
jne
or
jne
jns
pop
sbb
out
dec
and
icebp
mov
lock
lods
cmp
and
bnd
in
in
xchg
mov
or
cmp
pushf
lock
fcoms
testl
ret
test
gs
in
mov
cmp
out
xchg
push
xchg
pop
mov
fcompl
lret
and
mov
mov
enter
add
sti
and
dec
mov
insb
loop
and
je
subl
rcl
cmp
pop
xchg
push
pop
adc
sarl
push
sub
in
das
xor
inc
push
mov
push
pop
push
int
add
add
sub
dec
aas
sub
int3
dec
inc
cmp
lds
out
imul
lcall
into
stos
push
in
aaa
cli
xchg
add
xchg
push
pop
mov
or
jnp
decb
cmpsb
cmp
push
mov
jb
mov
dec
add
das
arpl
ljmp
dec
daa
icebp
stos
sbb
scas
pushf
mov
pop
js
jle
test
loopne
add
push
test
mov
out
iret
test
in
lods
dec
pop
ja
imul
inc
mov
in
pop
and
jns
and
sti
and
lock
fwait
je
lcall
jno
nop
je
add
lret
dec
sub
sbb
sub
pop
ror
ds
aas
sub
icebp
jg
sarb
sub
jg
or
and
mov
imul
sub
xor
mov
xchg
xchg
adc
movsb
add
cmp
and
movsb
xor
imul
ret
xor
xor
mov
push
mov
add
das
fsubl
data16
js
or
sub
inc
jae
ds
je
push
in
mov
fdivrp
lock
or
add
sbb
add
mov
lods
repnz
lret
in
insb
inc
enter
xchg
xor
ror
mov
sub
mov
or
pop
fsubp
dec
addr16
mov
orb
out
xchg
adc
mov
mov
mov
push
add
mov
adcl
stos
jne
fisubrl
jge
cmpsl
dec
add
shll
ljmp
add
test
dec
and
es
xchg
jp
sub
clc
inc
jo
fdivr
cmp
stos
daa
test
lock
ucomiss
sbb
inc
xchg
push
inc
je
push
sbb
adc
dec
sub
popf
or
ret
sbb
popa
fiaddl
jp
mov
adc
push
enter
call
and
pushf
add
in
push
mov
mov
xchg
xchg
scas
mov
sub
aad
cs
jl
pop
sbb
xor
rcrl
pusha
cmp
cmp
enter
bound
jo
or
sbb
loope
mov
adc
xchg
cld
sub
or
jae
pop
dec
push
pop
pop
insb
push
vpandn
movsb
cmp
pop
js
xchg
mov
scas
imul
movsl
xor
movsl
data16
stc
movsb
ds
iret
push
test
xchg
rcl
fistps
out
loop
out
mov
xlat
and
loopne
xor
fdiv
ja
loope
sahf
mov
imul
sub
cmpb
xchg
mov
mov
imulb
mov
test
daa
xchg
stos
cmp
das
jb
pusha
lock
xor
cmpsl
push
adc
stos
or
outsl
jecxz
xor
adc
push
in
adc
and
repz
pushf
push
mov
imul
icebp
icebp
fldenv
adc
lds
xor
add
sbb
and
jg
aas
jo
mov
jno
fisubl
sbb
mov
xchg
fs
fisttps
fisubl
inc
push
outsb
xor
rep
xchg
xchg
pop
mov
xor
pop
inc
loopne
incl
pop
cltd
ds
aas
pop
sahf
jle
cmp
jno
jl,pt
mov
xor
fwait
scas
movsl
orl
imul
sbbb
dec
pop
std
push
inc
mov
jle
add
mov
dec
ss
jns
mov
imul
xchg
pop
cmp
lret
push
mull
lods
push
jp
dec
mov
inc
cmp
ljmp
aad
rcll
repnz
pop
icebp
sub
aam
aas
pop
mov
xor
stos
jb
xor
das
movsb
add
insb
enter
hlt
xor
bound
and
fists
xchg
fwait
push
lods
push
xchg
or
mov
scas
jge
rcr
test
push
adc
xchg
push
adc
outsb
xor
jl
int
or
push
dec
dec
repnz
cmpb
jae
in
in
cmpsb
test
loopne
insl
daa
or
dec
mov
imul
jl
nop
test
rcrb
sub
dec
gs
hlt
push
cmp
nop
dec
icebp
add
inc
fdivrl
lret
stos
mov
push
loopne
test
and
jg
and
daa
mov
push
addb
and
lds
insb
inc
outsb
aad
loope
mov
or
cltd
insl
jmp
pop
popa
dec
jb
mov
pop
sub
std
mov
popa
xchg
sub
mov
daa
std
mov
xchg
std
push
lods
sub
cmp
popa
clc
jne
out
add
test
sub
out
arpl
dec
xchg
fstpl
pop
mov
dec
inc
rorb
stos
jg
jmp
push
sbb
sbb
mov
sbb
xchg
cmp
pop
mov
mov
adc
je
call
clc
inc
xchg
pop
mov
bound
xchg
mov
std
xchg
inc
aas
js
mov
adc
or
dec
cwtl
mov
cld
dec
gs
test
push
cmp
pop
ficoml
cmpsb
mov
cli
inc
and
je
mov
pop
jg
cmp
jmp
imul
test
pop
xchg
xchg
aad
mov
cltd
stc
popa
and
rcrl
outsb
std
cmpsl
xchg
mov
cmpsb
daa
stc
jne
pop
dec
xor
in
cld
dec
cmpsb
decl
sub
or
inc
jmp
sub
sub
or
orl
pop
popa
sub
pop
and
les
sarl
movsl
shl
xchg
xor
add
cmovg
push
xchg
je
dec
repz
jmp
lods
int
sbb
xchg
maskmovq
testl
inc
mov
xchg
jg
cmc
rcrb
push
pop
call
test
or
sbb
xor
xor
jmp
fdivr
mov
or
rep
xlat
ds
cmpsl
icebp
and
sub
xchg
sahf
icebp
and
or
jns
inc
outsb
xor
cs
fldl2t
mov
dec
xchg
addr16
shrl
pop
fimuls
add
xlat
repz
fiaddl
sub
cmp
pop
jge
leave
aad
mov
ss
dec
jmp
cli
cmp
flds
cmp
movsl
dec
push
pop
lods
xor
and
jmp
pop
addr16
daa
lock
divb
mov
xchg
mov
dec
mov
test
rcrb
mov
cmc
sub
pusha
sti
inc
mov
fs
push
aas
das
shlb
loop
dec
inc
dec
inc
jb
dec
scas
outsl
loope
mov
adc
lds
arpl
dec
test
fwait
bound
sbb
mov
movsl
mov
dec
popf
out
std
sub
pop
aam
daa
lds
cs
push
inc
jg
jne
pushf
jns
jno
and
pop
mov
dec
aam
dec
pop
or
pusha
sub
shlb
pop
cli
mov
bound
cmpsb
xor
pushf
mov
inc
inc
xor
add
jle
sbbb
push
add
xor
xchg
pop
mov
sub
ret
popa
negb
lea
mov
cmpsl
push
dec
jg
lds
jl
rcr
xorl
sub
loope
mov
imul
repnz
ljmp
and
mov
mov
int
adc
sbb
pop
cmpsl
into
push
push
mov
dec
xchg
out
add
jl
mov
int
loopne
mov
aaa
notl
aam
jb
imul
into
out
sbb
insl
lret
nop
outsb
sbb
stc
imul
cld
or
jmp
mov
mov
andl
add
ret
insb
sub
fmulp
xchg
sbb
pop
testl
fdivrs
into
and
int
push
mov
add
xchg
outsl
popa
popa
ja
cmp
mov
mov
push
xor
mov
dec
cmpsb
dec
jnp
and
fcomps
mov
push
inc
lods
mov
jmp
xchg
lret
pop
nop
insb
nop
dec
adc
sub
pop
mov
fs
movsb
jb
fbld
imul
rclb
or
and
push
mov
lcall
push
cli
and
pusha
sub
das
roll
das
and
xor
cmpsb
mov
rcrl
xchg
shl
leave
mov
push
mov
mov
cld
aaa
adc
mov
inc
sub
pop
dec
push
iret
or
mov
mov
js
test
lock
push
roll
xor
mov
fldt
fs
mov
sub
bound
dec
pop
jg
jmp
dec
jnp
add
pop
test
push
lods
ret
cmp
fldcw
pop
addr16
adc
or
leave
sar
fldenv
scas
cmp
xor
sub
jmp
mov
sahf
lret
mov
out
leave
mov
mov
outsb
inc
inc
repz
das
lea
or
and
xchg
inc
call
or
or
in
leave
xor
push
out
gs
clc
daa
pop
mov
lret
fistl
xchg
lock
jmp
js
pop
scas
lds
and
outsb
pushf
mov
mov
cmp
inc
add
rorl
jns
inc
cs
sbb
xchg
mov
ja
jle
test
mov
cmp
inc
daa
arpl
mov
nop
aaa
push
xor
inc
test
mov
in
mov
in
iret
sahf
cwtl
push
xor
mov
add
push
cmp
or
mov
loopne
xchg
fucomip
jns
cmp
pop
push
pop
inc
fbld
dec
sub
push
in
imul
gs
test
cs
pusha
ljmp
xor
mov
jnp
scas
push
push
cmpl
subb
xchg
test
ret
shlb
or
push
cwtl
cmp
mov
mov
scas
mov
mov
lret
pop
lods
pop
int3
insb
rorb
push
clc
xchg
sahf
jle
cmp
sub
test
pop
mov
or
mov
out
call
pop
jmp
cmp
js
dec
mov
and
iret
jns
jge
aaa
mov
stc
jne
lods
clc
jp
inc
cltd
es
int
inc
cmc
js
or
int3
test
jns
xchg
js
js
and
pop
push
mov
sub
adc
adc
push
pop
inc
jbe
js
push
sub
push
mov
std
xor
jo
in
mov
popa
pop
lods
pop
stc
mov
mov
sbbb
lods
stc
repnz
xchg
fadds
sub
mov
lea
loope
jne
push
xchg
sbb
mov
pop
gs
shl
jno
cmp
pop
adc
sub
adc
std
aaa
ss
xchg
mov
cmpl
jmp
pop
test
xor
stos
or
lahf
scas
into
and
sbbb
in
imul
jae
shl
scas
dec
or
inc
mov
loope
lcall
ljmp
fs
outsl
outsb
fwait
push
sbb
mov
mov
iret
mov
in
movl
and
push
sbb
dec
out
sbb
jae
add
jns
test
mov
int
add
dec
sub
dec
xor
cmp
fdiv
mov
mov
xor
fnstcw
dec
scas
mov
inc
rcl
ljmp
dec
jbe
mov
xor
mov
jnp
pop
stos
std
stos
lea
incl
orl
aaa
inc
addr16
arpl
add
cmpsl
add
xor
pop
mov
int
fadds
mov
out
mov
add
js
jp
cs
push
arpl
mov
sbb
sbb
sub
mov
jp
fisttps
mov
movl
mov
imul
jno
add
lea
adc
repz
xchg
cld
mov
cmp
in
pushf
inc
xchg
dec
lea
jle
push
fs
mov
ret
enter
scas
jne,pt
sub
xchg
popf
bound
ret
insl
ss
ror
test
push
mov
jge
test
lds
test
rclb
or
test
cs
jnp
mov
lret
mov
fucom
pop
and
fucomp
in
mov
lahf
shlb
aas
xchg
test
fnstsw
adc
jbe
enter
mov
js
dec
lret
out
xchg
lcall
mov
push
inc
inc
fistpll
lock
shl
mov
pop
imul
filds
cwtl
cmc
fwait
in
repz
and
clc
sarb
inc
sub
loope
xchg
push
push
add
fsubrs
jl
and
test
pop
cmpsb
cmpsb
insb
add
adc
xchg
cmp
mov
adc
cwtl
mov
adc
mov
push
xchg
push
push
push
aad
sub
push
mov
ds
addl
jno
sbb
sbb
sub
loop
push
push
jle
iret
or
xlat
jmp
xor
out
xchg
push
rorl
in
hlt
test
sub
daa
lds
jecxz
inc
out
out
fidivl
adc
test
es
cmpb
xchg
leave
test
xchg
adc
scas
into
fs
in
jmp
iret
mov
insl
into
cmp
cli
pop
xchg
inc
pop
cmp
loop
lea
mov
iret
pop
mov
xor
push
and
jge
int3
push
fistpll
repz
stos
mov
fiaddl
ds
mov
sbb
mov
rorl
jnp
popf
mov
inc
xor
pop
add
shrl
loop
shrb
lret
push
iret
inc
loop
mov
test
addb
pop
push
lods
mov
mov
popa
sbb
mov
in
pop
out
enter
lods
mov
leave
mov
outsb
arpl
insl
or
jne
mov
rcrl
dec
lea
or
pop
sbb
loope
icebp
mov
xor
je
jecxz
into
mov
xchg
je
dec
inc
outsb
fadd
popf
lock
mov
aas
push
jb
mov
push
push
pop
cli
adc
pop
fucom
inc
adc
mov
xchg
test
nop
into
icebp
leave
fldt
popa
ss
cmc
fs
das
jb
test
pop
push
add
ja
xlat
lea
les
sti
mov
sahf
sbb
mov
sbbb
cmp
push
push
xor
cli
cmp
pop
jo
negl
cmpsb
out
inc
dec
or
lret
decl
int3
lret
cmp
gs
mov
sbb
popl
pop
les
jb
fisubrl
mov
dec
pop
test
xor
dec
mov
and
stc
push
or
cli
hlt
add
pop
lea
call
cmp
ret
shll
cwtl
inc
enter
lds
nop
or
push
xorl
rorl
push
mov
sub
divb
jg
scas
pop
xchg
sub
sub
outsl
test
lahf
jb
inc
cld
push
std
jnp
cld
mov
not
cmp
and
mov
mov
insb
movsl
jp
cmp
mov
xchg
insl
push
je
jb
inc
xor
lret
rclb
fwait
clc
or
adc
fimuls
fsubr
sub
or
jge
popf
shl
int3
lock
xchg
cmp
mov
notl
loop
xlat
xchg
jecxz
xor
lock
test
ret
enter
call
cmp
imul
fistl
mov
ljmp
xor
inc
jns
loop
push
lds
loopne
mov
or
ret
in
xchg
and
push
mov
stos
pop
bound
pop
fisttpl
in
sbb
or
invlpg
jle
lods
sub
mov
scas
movsb
lods
fistl
outsb
pop
negl
pusha
pop
xchg
xorb
imul
lds
dec
inc
cmp
in
ja
jp
sub
js
cltd
cli
pusha
leave
push
inc
cmp
push
or
fimull
das
out
je
add
cmp
pop
cmp
jl
popf
mov
add
inc
movsb
iret
push
lea
mov
dec
fidivl
out
xor
mov
mov
loope
das
idivb
stc
push
jle
or
jae
int
cmc
xor
jnp
lea
cmp
push
es
mov
pop
rorb
pop
in
and
pop
fnstenv
push
jbe
adc
shrb
pop
sbb
fcmovb
in
add
xchg
movsl
cmc
call
xchg
rol
adc
push
stos
lds
movsl
xor
inc
clc
mov
inc
cmp
and
xor
and
fwait
lds
fadd
jecxz
cmp
pop
int
in
cli
lds
fisubrl
sarl
jnp
jl
xlat
stos
addb
sti
push
fstps
add
adc
dec
dec
gs
in
pop
jmp
sbb
sub
ss
std
mov
cmp
sbbb
movsb
mov
leave
push
pop
fld
jp
pop
adc
int3
inc
jmp
fildll
mov
fadd
jge
cltd
or
mov
adc
adc
xor
shlb
das
idiv
sbb
mov
outsl
cmpsl
sub
lds
mov
scas
cwtl
enter
xchg
sbb
mov
jp
or
lret
jnp
add
sub
lea
xchg
imul
ret
push
jnp
das
add
enter
sub
cmpsl
ficomps
pushf
jmp
inc
fs
inc
js
jns
add
sbb
sub
mov
cmp
stc
mov
jae
add
pop
mov
inc
xor
cmpb
sub
mov
ret
fwait
imul
add
add
xor
psubd
aad
stc
and
popl
in
or
adc
fisttpl
xlat
xchg
sbb
push
iret
cmc
mov
cli
push
loop
mov
shlb
leave
insl
out
out
xlat
sbb
es
push
jnp
es
aas
fldt
sub
add
cmp
mov
call
mov
outsb
mov
ret
scas
dec
jno
xor
sarl
loopne
inc
xchg
cmp
fwait
dec
jecxz
sbb
pushf
pusha
neg
xchg
push
rcrl
aaa
jg
hlt
hlt
out
and
cmpsb
push
shll
jl
aaa
jb
into
mov
subb
rorb
lahf
cmp
mov
xor
cltd
test
and
dec
aad
fidivrs
mov
mov
clc
jl
lock
fistps
sub
sti
cli
jge
lidtl
adc
pop
pop
dec
mov
push
lret
shrb
mov
cltd
es
popa
sbbb
and
fdivs
xchg
add
je
sti
aaa
xor
scas
mov
in
ficoms
cmp
mov
in
add
xchg
mov
xor
imul
sbb
daa
into
jle
repz
push
lcall
jno
mov
inc
lcall
xor
scas
xor
mov
mov
leave
mov
inc
xor
mov
jne
fidivrl
repz
or
add
add
jl
hlt
cmp
jge
daa
cmp
xabort
sti
enter
pusha
xor
pop
dec
xchg
int3
icebp
mov
xor
pop
in
ljmp
es
mov
je
jae
lret
add
jl
lret
sub
iret
ficomps
ret
cmp
into
dec
cmpl
mov
in
and
xor
push
ret
js
insb
fistps
push
xor
mov
and
test
hlt
dec
push
and
ret
gs
push
jae
xor
mov
out
pop
hlt
dec
cld
sbbb
sub
jnp
rcll
sti
xchg
add
adc
mov
sbb
cmp
jmp
test
push
sub
pusha
out
les
cmp
pop
or
rcrb
sbb
adc
xchg
fcmovne
les
mov
fisubrl
mov
mov
loopne
in
movsl
inc
lea
adc
stos
jbe
jp
mov
test
jno
loopne
inc
mov
insl
outsb
daa
pop
or
sub
lcall
nop
or
dec
dec
icebp
enter
push
sub
push
jle
cmp
test
mov
lds
fs
test
push
test
mov
int3
addl
and
xchg
ss
mov
dec
js
clts
outsl
mov
mov
jle
pop
mov
push
sbb
mov
fdivl
lcall
mov
mov
xorl
xor
push
fistl
fistpl
lret
sbb
xchg
push
cwtl
pusha
push
sub
jecxz
icebp
mov
xorl
imul
aaa
xchg
mov
pop
cld
jne
insb
mov
js
push
push
in
rorb
lds
mov
or
add
mov
pop
sub
dec
clc
lods
nop
stos
lods
outsb
dec
fdivs
pusha
and
mov
fnstcw
mov
mov
cmp
rcrb
mov
fwait
sub
cmp
popf
cmpsl
shlb
xlat
gs
mov
cmp
xor
inc
xchg
sub
or
add
jp
test
pushf
repz
push
cmp
mov
dec
adc
mov
sbb
dec
jmp
pop
fldcw
mov
push
cmp
jecxz
mov
adc
pusha
xchg
sbb
push
out
call
pusha
js
mov
pop
cli
loop
jmp
addb
mov
loopne
mov
aad
sbb
ljmp
mov
ds
mov
fdivs
test
andb
flds
dec
sub
pop
mov
xchg
mov
jo
out
pop
xchg
loopne
xchg
push
data16
stos
and
cli
shlb
out
cmp
lret
gs
xchg
insl
add
clc
dec
std
fisttpl
jbe
mov
mov
sub
cmpsl
inc
or
mov
lret
adc
mov
stc
popa
inc
push
xor
jno
mov
test
sbb
lret
pop
pusha
sub
pop
test
imul
mov
out
pop
in
mov
inc
sub
push
jg
xchg
and
dec
hlt
sbb
sarl
pop
rorb
das
add
shrb
mov
lds
pop
mov
cmpsb
into
jns
aas
jecxz
xor
imull
out
mov
cmpsl
pop
xlat
pop
push
imul
test
pop
or
leave
clc
pop
sub
pop
adcb
iret
stos
je
push
loopne
or
fs
lds
mov
jno
push
xor
add
xlat
sbb
nop
xchg
adc
add
aam
enter
add
fnstcw
addr16
into
xchg
cmpsb
cmc
stos
nop
xchg
loope
popf
inc
lahf
pushw
pop
lock
and
adc
xchg
xchg
jecxz
dec
xlat
sbb
sbb
xchg
insl
lods
mov
out
addr16
mov
clc
sub
jmp
lret
fnstsw
cltd
movsl
popf
aaa
ret
pop
movsb
xor
cld
into
aad
xor
and
xor
mov
jg
inc
xor
rolb
jge
cmp
pop
imul
pop
lods
jnp
fcompl
fisttpll
loop
mov
aad
adc
pop
inc
jo
push
mov
pop
jecxz
dec
inc
xchg
mov
fisttps
insb
xor
xor
xchg
and
and
shll
in
add
sub
mov
adc
jmp
push
jg
es
mov
std
pop
popf
flds
loope
int
aam
or
jmp
pop
mov
lahf
push
in
push
cmp
cmpsb
cli
pop
mov
jecxz
mov
pop
mov
dec
adc
push
xchg
xchg
pop
mov
jno
xchg
shlb
es
cmpsb
das
sub
inc
sbb
ds
push
test
filds
push
enter
mov
mov
xor
into
stc
pop
cmc
sbb
loop
mov
repz
psubq
test
insl
mov
rcr
dec
dec
jp
call
divb
lret
xor
push
inc
sbb
dec
cmp
cltd
arpl
jmp
arpl
scas
jmp
aam
dec
mov
jno
adc
mov
xlat
adc
cmp
pop
sub
cmpsb
mov
sti
rcll
insb
jno
in
pushf
shlb
add
cld
sub
mov
lock
pop
out
mov
imul
cmp
mov
nop
mov
mov
and
je
shrl
loopne
push
inc
fldcw
and
adc
lcall
fs
push
push
in
aas
mov
push
inc
cmc
scas
pushf
sub
inc
addr16
ljmp
or
cmp
add
in
fistps
xor
fcoml
adcl
cmp
lcall
in
pusha
es
frstor
test
dec
out
adc
mov
mov
jb
lret
int3
inc
out
aam
cmp
push
mov
push
cwtl
in
sub
xor
jmp
push
or
popa
decl
sbb
mov
pop
cmp
xor
loop
xchg
in
add
jne
push
inc
mov
insb
les
icebp
xchg
cmpsl
xchg
mov
lods
in
shll
int
fmul
mov
ss
jl
pop
cwtl
jle
orl
shlb
je
pop
dec
and
mov
or
and
or
push
or
ja
dec
sub
mov
mov
push
lds
stc
sbb
cmpsl
or
imul
nop
int
les
lock
icebp
xchg
pop
or
xor
repz
cli
cmpsb
mov
push
fs
xchg
call
mov
push
lods
jnp
fldenv
pop
mov
inc
dec
mov
push
inc
pop
jns
cltd
leave
out
mov
xchg
mov
in
movsl
insb
fistpll
inc
ja
jbe
pop
mov
xor
adc
test
mov
out
outsl
cmpsl
insb
scas
jl
fcmovu
pop
or
imul
movsl
and
mov
cmp
movsl
out
mov
jmp
dec
cmc
dec
iret
jo
jo
fistl
out
sbbb
jp
clc
sbb
sbbl
sbbl
aad
mov
daa
mov
call
mov
or
xchg
pop
xchg
sub
push
in
js
mov
rorb
xchg
and
lods
stos
test
aad
daa
das
ljmp
les
ds
xchg
rorb
dec
cmp
not
ljmp
mov
insl
dec
sub
push
test
mov
sbb
mov
fs
xor
jnp
sbb
xor
lock
iret
pop
aaa
rol
adc
out
mov
lcall
and
mov
cli
insb
jmp
jmp
push
sbb
mov
test
mov
pop
mov
stc
orl
jns
das
lock
mov
cwtl
dec
push
stc
ss
inc
inc
aam
cwtl
cmc
pop
xchg
stos
int
loope
mov
nop
lret
dec
ret
scas
out
dec
out
sub
pop
sub
pop
xchg
or
pop
repz
cmp
mov
pop
mov
sub
and
inc
lahf
push
dec
popa
mov
flds
in
scas
cmpsb
cmp
xchg
shl
aad
outsl
add
xor
shlb
ss
mov
cmp
lock
push
lock
cmp
fs
stos
adc
and
xor
repnz
xchg
mov
push
sbb
aad
decl
fdivrs
nop
jbe
arpl
inc
push
addr16
int
xchg
mov
xor
xor
mov
shll
nop
fs
pop
aad
cmp
repz
test
push
fmull
pop
jmp
mov
je
cld
mov
sbb
icebp
mov
sbb
mov
aad
xor
jecxz
cmp
mov
ds
push
mov
cmp
adcl
mov
mov
jle
sbb
mov
dec
xor
fucomi
ljmp
push
jbe
iret
mov
push
and
insl
sub
in
adc
std
mov
in
lret
pop
inc
push
sti
sahf
cmp
ja
pop
pop
jno
test
push
lret
addb
xchg
ficomps
mov
iret
ss
mov
lds
lret
repnz
in
jle
cmp
sbb
test
mov
xor
mov
rcr
movsl
xchg
mov
js,pt
data16
dec
and
iret
ss
movsl
fisubl
sbb
sti
pop
outsb
bound
gs
scas
jl
ljmp
cmp
mov
sbb
dec
push
call
xchg
scas
loopne
ret
repnz
das
or
mov
gs
mov
or
jne
popa
adc
inc
mov
push
pop
mov
and
loop
repnz
sub
sti
pop
sbb
clc
adcb
adc
popl
in
inc
push
leave
and
bnd
loopne
hlt
je
adc
shr
cmc
les
adc
fidivl
adc
mov
scas
jbe
cmpsl
je
sbb
popf
mov
mov
ja
repnz
jo
add
pop
add
test
mov
adc
int3
lods
mov
cltd
leave
jns
adcb
and
insb
enter
jle
repnz
cmp
pop
enter
jge
inc
cmpsl
sbb
push
add
ja
dec
sahf
stc
push
cli
or
pop
test
clc
iret
aad
or
inc
insb
test
and
in
repnz
xchg
ja
pop
cmp
movsb
pusha
sbb
push
test
pop
push
andl
insb
imul
andl
test
sbb
cli
sub
pop
inc
mov
dec
insl
cmp
lahf
mov
aad
loope
adc
push
xor
inc
mov
fs
add
mov
mov
js
mov
dec
popl
jns
dec
xor
cs
pop
shll
insl
jb
add
sarl
dec
and
sub
repnz
fcomps
les
lods
lahf
and
adc
pop
adc
or
jb
testl
jno
lods
sbb
pop
scas
push
repz
pusha
sub
loope
dec
push
and
cmp
nop
jno
mov
mov
jl
xor
adc
xor
push
mov
imul
cmpsl
add
mov
pop
mov
lds
movb
sub
cmc
xchg
add
popf
mov
mul
push
xchg
sbb
push
scas
adc
push
repz
or
stos
mov
mov
inc
call
add
dec
test
cwtl
ficompl
ret
inc
or
dec
xchg
lahf
add
aad
mov
jl
or
xorl
inc
xchg
popf
add
xor
je
lock
mov
addr16
stos
insl
cltd
pushf
mov
push
pop
shlb
cld
out
gs
in
dec
shll
lahf
jg
lret
dec
lea
clc
lods
ds
sub
cmp
lcall
mov
jnp
rolb
dec
sahf
outsb
lret
stos
clc
insb
pusha
mov
sbb
sbb
les
mov
std
cmpsl
dec
sbb
push
ret
adc
or
rorb
ret
addr16
mulb
ja
fs
lcall
jle
jno
mov
mov
ss
decl
int3
mov
sub
dec
push
sbb
mov
sub
cmp
imul
xor
sbb
je
mov
lcall
mov
xlat
mov
dec
fidivl
pop
divb
fistpl
outsl
sbb
ds
leave
cmp
add
cli
aad
inc
inc
mov
lret
cmp
adc
or
jecxz
ret
ret
shlb
pushf
cmc
jle
lods
and
fs
xor
je
call
add
cs
mov
push
movsl
mov
pandn
pusha
mov
rcll
cmp
dec
dec
xchg
push
xchg
int
mov
mov
pop
out
push
inc
push
test
push
je
xchg
in
cmc
mov
pop
cwtl
push
outsb
addr16
rclb
mov
cmpsb
mov
ror
cmpsl
fistpll
xchg
push
mov
push
ficoml
out
fcmovnb
mov
inc
sub
aaa
mov
push
push
adc
out
xchg
aam
aas
pop
xor
stc
jmp
jnp
mov
adc
dec
push
xchg
push
scas
addr16
cmp
pop
fstpt
xchg
push
lds
xchg
gs
aaa
mov
push
and
dec
dec
mov
mov
shll
sbb
call
shll
sahf
inc
jmp
or
mov
sub
dec
jnp
xchg
ds
push
push
out
pop
sub
ret
gs
xlat
int3
xchg
push
mov
adc
mov
cmp
dec
lcallw
and
and
jmp
out
inc
xchg
das
mov
pop
and
sub
leave
jg
or
pushf
xor
adc
sub
icebp
hlt
jle
cmp
or
and
pushf
add
and
popf
shl
outsb
add
cmp
lret
adc
cmp
xlat
mov
outsl
and
push
adc
inc
ja
in
jg
pop
adc
test
lahf
imulb
je
jmp
push
fs
sbbl
adc
add
clc
mov
popf
and
std
mov
lock
mov
or
fldenv
or
and
mov
push
lret
ret
pop
es
add
mov
sbb
push
or
mov
insl
sbb
jecxz
mov
dec
roll
xchg
xor
out
imul
test
ffreep
dec
mov
sbb
push
in
decl
cs
lock
sti
mov
push
mov
test
mov
stc
xchg
aas
ret
mov
fucomp
out
mov
shlb
fucomp
sbb
es
jp
dec
mov
dec
jecxz
mov
aaa
pop
push
out
sub
aad
ja
loop
hlt
outsl
mov
sbb
push
sbb
imul
xlat
sbb
les
push
sbb
sbb
ds
jecxz
mov
cmp
xchg
out
xor
adc
shl
pop
mov
lret
lret
scas
mov
sub
daa
and
pop
sbb
aad
stos
inc
inc
sub
mov
mov
out
mov
call
in
subb
popf
or
pushf
jae
cmp
mov
push
jbe
pop
leave
or
push
test
addb
scas
xlat
pop
rcr
xchg
xchg
lret
push
sub
pushf
jae
cmpsb
mov
jnp
movl
enter
cmp
push
pop
xchg
xchg
andb
pop
push
jp
xor
jne
xor
in
pop
movsl
jnp
dec
xlat
subb
lds
pop
lcall
les
sub
inc
or
cmp
push
or
int
mov
adc
xor
mov
lock
lods
out
jne
hlt
or
sub
pop
pushf
repz
xor
pop
imul
fsubl
fistl
and
out
dec
push
movsl
mov
or
cmpsb
js
ret
cld
les
cmpsl
pop
mul
adc
mov
fsubrs
test
push
lahf
or
mov
jle
jg
adc
out
and
sahf
inc
lret
imul
int
jl
inc
ss
imul
push
push
pop
test
test
fdivrl
jo
push
cmc
cmpsl
adc
negb
sub
cmp
xor
fld
dec
cwtl
cmp
sub
ljmp
push
loopne
inc
cmpsb
loope
inc
and
jnp
pop
dec
inc
loop
dec
rcll
loop
out
aas
push
mov
sub
adc
push
dec
dec
out
inc
sub
jg
jge
ret
ret
and
lret
mov
adc
inc
popa
and
xchg
popa
mov
in
xchg
xor
loope
mov
les
jae
arpl
jge
cmc
pusha
mov
and
push
dec
add
cmc
je
inc
in
ret
cmpl
out
dec
or
pusha
push
and
pop
add
push
inc
push
hlt
or
xor
and
or
repnz
daa
mov
inc
inc
inc
cmp
inc
mov
push
popf
mov
gs
jnp
pop
sbb
adc
pop
cmpsl
sbb
cli
mov
add
mov
mov
gs
ja
sub
push
sub
add
pop
mov
adc
sub
les
loop
cmp
or
rorb
stc
imul
fsubp
je
cmpsl
jecxz
fwait
pop
pop
jnp
rcr
add
inc
adc
add
mov
lds
loop
out
xor
and
in
lcall
les
or
mov
popa
cli
addr16
push
pop
sbb
data16
inc
mov
loopne
mov
pusha
jmp
ret
sub
mov
xchg
adc
xchg
mov
test
lods
sbb
inc
and
filds
aaa
inc
inc
rcrl
notb
popa
cltd
dec
imul
cmp
mov
in
cmpsb
call
movsb
ds
pop
movsb
pop
testb
mov
pop
shlb
fdivl
or
int
jo
cmp
lods
and
out
pusha
aad
fsubp
divl
adcb
push
outsl
push
pushf
aas
push
lds
push
push
aad
dec
movsb
sub
mov
xchg
adc
lahf
insb
stos
negl
or
mov
dec
inc
test
pop
mov
out
push
cmp
movsl
jo
jns
and
jb
adc
outsb
pop
and
adc
or
gs
cmp
popf
andb
jne
inc
xor
sub
sti
test
and
bswap
test
bound
arpl
ret
fmul
push
flds
mov
bound
push
and
jecxz
mov
out
mov
xor
jb
mov
sarl
ss
inc
and
mov
imul
in
sbb
jno
aad
sub
push
out
mov
cli
in
inc
pop
mov
icebp
mov
stc
repnz
adc
adc
test
shll
cvtps2pd
into
pop
loop
or
shlb
inc
aam
xor
and
and
jno
jmp
mov
lock
sub
gs
stos
xchg
call
mov
stos
andb
imul
or
jae
xor
mov
mov
lods
les
push
and
adc
mov
data16
push
jg
incb
cmc
pop
and
add
call
popf
lret
mov
or
mov
movsb
jnp
imul
dec
pop
sub
mov
aad
scas
jmp
inc
dec
mov
pop
jns
in
or
lods
dec
cmp
loop
mov
cwtl
pop
pop
lock
ret
fcmovnb
dec
aad
aam
mov
movb
pop
push
addr16
mov
inc
and
mov
popa
pop
fsub
aaa
dec
jb
lds
mov
loope
jnp
lret
lcall
lds
les
addr16
mov
mov
or
aam
inc
jbe
or
push
gs
mov
push
jae
shrb
sub
dec
sbb
mov
test
add
adc
sbbb
inc
loopne
pushf
dec
ja
inc
mov
in
mov
into
pop
mov
xor
jle
mov
std
shrb
shlb
decb
mov
cmpsl
cmpsb
div
arpl
fistps
repz
mov
scas
pop
ret
pop
shr
and
lea
inc
mov
out
xchg
das
addl
sti
pop
push
sbb
mov
bound
jo
in
push
and
push
push
int
xor
and
pop
mov
mov
jns
push
test
dec
add
out
ljmp
lea
dec
packssdw
in
insl
or
inc
xchg
sbb
fwait
pop
and
add
xor
dec
pop
pop
lds
ds
mov
cmp
ret
lods
mov
mov
stc
cs
shrl
cli
test
mov
addr16
add
pop
pop
dec
mov
lcall
push
push
cmp
fdivl
aas
out
imul
test
inc
test
inc
xor
sub
rorb
xchg
das
cmp
jmp
jecxz
mov
push
pop
mov
push
ret
dec
mov
popf
imul
add
addl
cli
stos
test
sbb
mov
mov
mov
jecxz
xchg
jle
dec
movsl
sbb
xchg
adc
mov
imul
cmp
js
mov
bound
push
pop
cmp
fcmovb
xorb
inc
xor
stos
jns
pushf
scas
or
jae
push
xchg
push
pop
and
pop
scas
call
arpl
repz
xlat
xchg
rolb
js
lret
shlb
push
jle
jne
sbb
dec
jecxz
inc
sub
popa
cmpb
jl
and
and
fiadds
xor
ja
dec
imul
push
rolb
cmp
and
sbb
cmp
push
jecxz
bound
jne
outsl
ds
das
add
push
not
out
xor
pushf
fldl
sub
sahf
mov
sbb
int
clc
jecxz
or
in
ljmp
loopne
lret
push
jmp
fwait
adc
in
icebp
fcoms
push
mov
mov
mov
or
js
fdivs
xor
lods
call
rorl
mov
fsubrs
out
mov
push
mov
sub
mov
imul
jb
jno
mov
inc
ljmp
into
rorb
mov
dec
jno
mov
mov
jae
mov
push
and
adc
push
push
mov
mov
mov
sbb
adc
xlat
jo
jbe
xor
pop
add
and
ja
sbb
pop
xchg
pop
shrl
lods
arpl
inc
je
ss
adc
data16
dec
inc
mov
ret
unpcklps
cltd
jge
cmovae
sahf
lods
xchg
cmc
movsl
pop
dec
push
aaa
sub
je
ret
add
ret
cli
aas
dec
cmc
push
inc
xchg
mov
dec
fdivs
add
sahf
adc
aaa
push
test
int
loopne
sahf
pop
and
scas
imul
sbb
pop
push
mov
sbb
lea
repnz
cmp
fisttps
clc
cmp
xchg
inc
outsb
std
in
psubusb
pusha
aad
and
xchg
cmpsl
stc
xchg
push
adc
sahf
jo
fstpl
sarb
cltd
mov
mov
pop
jne
jecxz
push
dec
push
cmpsb
add
mov
nop
in
loopne
movsl
ja
das
lret
les
xchg
insb
jle
dec
clc
pop
mov
or
cld
pop
xchg
jne
add
xor
dec
jae
loopne
inc
cmp
stos
pop
jle
sub
push
jmp
push
pop
sub
cmp
dec
mov
ds
shr
pop
jb
and
mov
jae
xor
sbbb
call
cmc
push
subl
sub
pop
imul
xor
call
pop
and
popf
repnz
mov
hlt
lds
and
dec
pop
inc
mov
mov
cmc
lock
or
sbb
and
mov
test
cmp
sub
fisubs
aaa
sbb
add
or
or
xchg
dec
out
loop
adc
enter
push
or
sub
or
pusha
shll
loopne
mov
cli
pop
mov
xor
add
out
mov
cmpsl
in
loopne
fwait
call
pop
addr16
orb
jne
push
pop
pop
movl
jl
mov
in
aaa
jmp
aad
ljmp
add
out
and
jo
int3
mov
clc
bound
xchg
xor
cmp
adc
jae
sub
sbb
out
ret
mov
pop
rcl
pop
mov
xor
push
aad
sbb
scas
fwait
jge
or
cwtl
aam
test
notb
and
adc
xchg
jnp
pop
push
add
xor
dec
ss
loope
and
cmpsb
cmpsl
sub
xchg
frstor
scas
push
mov
mov
cli
or
gs
out
bound
dec
jg
jo
or
dec
fsubr
inc
mov
nop
mov
mov
mov
pop
or
pushf
sbb
pushf
jbe
mov
inc
idivl
hlt
cltd
loopne
jne
ds
dec
aas
adcl
pop
push
hlt
fiaddl
mov
enter
sbb
add
pop
push
int3
cli
adc
cmp
std
dec
dec
adc
dec
pop
xor
test
jo
and
pop
mov
xchg
mov
pop
xchg
cltd
jno
aam
pop
adc
loopne
and
ret
stc
or
push
fs
mov
sub
ret
test
out
xchg
gs
xor
sub
and
cmc
xlat
pop
cmc
push
lcall
push
rorl
push
pop
push
not
lock
stos
xchg
jbe
leave
pop
inc
dec
fidivrl
xor
ret
or
aad
xchg
cli
lahf
je
fisubrl
rorl
mov
mov
test
loopne
mov
mov
addl
xchg
cmp
sub
jns
lret
sarb
add
std
add
or
xor
xor
xor
push
mov
js
jle
jecxz
out
mov
shrl
xchg
and
sti
and
sbb
push
and
push
scas
test
jecxz
xchg
push
xor
ret
mov
pop
repz
push
jle
cmp
mov
das
call
shll
jae
lods
mov
imul
fldcw
dec
clc
and
add
test
shl
adc
sbb
stos
lock
push
ss
gs
cmp
lds
xlat
push
lret
mov
cmp
aaa
add
into
sbb
push
das
filds
jae
cmc
mov
fucomp
das
dec
xor
push
test
out
jo
adc
or
jmp
pop
inc
or
mov
push
mov
and
test
xchg
mov
lahf
clc
stc
cmp
aaa
adc
jb
enter
movsl
repz
jle
cmp
xchg
xor
or
dec
cltd
push
adc
push
ljmp
repnz
xor
shll
pusha
and
lods
jnp
mov
popf
inc
lcall
clc
cmpb
inc
enter
iret
sub
rorl
xchg
icebp
hlt
add
jbe
mov
xor
adc
or
push
and
pusha
andl
push
adcb
pop
dec
sbb
mov
and
sbb
sbb
out
outsl
sub
ret
mov
xlat
cmc
cmp
in
out
sub
in
std
shll
fcmovbe
mov
mov
sbb
pop
add
push
gs
xchg
cmp
decb
jns
jns
mov
inc
inc
sahf
pop
dec
mov
pop
out
or
mov
sbb
mov
pop
decl
xchg
bound
popf
popa
ret
sub
call
add
sahf
adc
out
sbb
inc
les
xchg
outsb
dec
mov
pop
lret
and
shl
and
pop
fwait
cmp
popa
dec
cmp
repz
enter
sub
sti
rolb
jb
jmp
push
lods
loope
sbb
movsb
jg
jb
ds
push
ret
lods
adc
test
cmp
and
aam
or
pop
std
aas
mov
aad
insl
flds
jb
in
fstps
shl
pop
xorps
repz
cli
mov
xchg
xchg
or
jb
jne
shrl
into
test
sbb
jmp
push
xor
jne
repz
sub
fcmovnb
repnz
imul
cltd
xlat
push
mov
sbb
mov
in
sub
inc
add
mov
aaa
mov
hlt
cmp
dec
in
and
daa
push
clc
and
shrl
out
rorl
fsubs
incb
cmp
aad
int3
or
inc
lock
push
in
in
daa
mov
or
loopne
rolb
cmc
out
sbb
mov
adc
scas
xor
pop
push
mov
pop
sbbl
and
adc
xor
xchg
rorl
jmp
cmpsl
or
imull
lret
push
mov
sbb
push
fsubr
pop
add
push
cmpsl
bound
jle
jmp
push
jne
cmp
and
fld1
test
mov
es
popa
loopne
aaa
nop
cmpsb
sub
test
imulb
jbe
sub
sbb
inc
cmp
add
in
xor
test
fwait
cmp
sbb
adc
xchg
fsubrp
mov
add
in
ja
sbb
cmpsl
xchg
adc
loope
pop
and
xchg
inc
jmp
xor
pop
xorb
pop
enter
mov
adcb
popa
jns
shll
mov
stc
dec
pop
dec
inc
sbb
jle
cmpsb
insb
xorb
or
adc
dec
push
jbe
pop
mov
adc
sbb
scas
pop
movsb
arpl
jecxz
pop
pusha
out
ljmp
adc
push
stos
xchg
frstor
ret
inc
out
sub
lods
daa
movl
cmp
push
cwtl
sub
pop
xor
xchg
aad
lea
jl
shrl
add
jb
ret
xor
jb
imul
leave
fsubl
fcmove
daa
mov
call
popl
cltd
int3
clc
ret
cli
testl
in
cmpsb
pop
clc
repnz
xor
push
sbb
cmc
nop
push
cmp
movsb
xchg
in
inc
xor
mov
mov
jmp
pop
jecxz
dec
sbb
ret
cmp
aaa
sahf
ret
cmc
push
push
sbb
pop
jg
dec
out
fbstp
sub
mov
or
aam
mov
fnstsw
lods
push
dec
stos
jg
test
mov
jl
aas
dec
sbbb
ror
sahf
fdivl
xchg
cmpsl
xor
int
or
push
or
out
add
inc
cmp
mov
fcmovnbe
fdivrp
xchg
xchg
cld
cs
gs
dec
ljmp
sbb
sbb
frstor
xchg
pop
ljmp
xchg
mov
andb
aam
cmp
mov
int
sub
je
mov
fisttpll
scas
adcb
jle
movsl
loope
push
lods
jns
inc
test
bound
dec
outsb
push
and
mov
inc
mov
sub
into
xchg
jo
sarb
or
fcmovnb
outsl
fbstp
add
iret
push
into
dec
pop
mov
pop
dec
es
mov
or
xchg
call
mov
cmpsl
lods
dec
in
aas
cmp
inc
rcrb
gs
xchg
icebp
test
sbb
mov
mov
ja
cmp
dec
ss
mov
lea
cmp
in
sbb
ret
sbb
test
sti
dec
push
pushf
and
cmp
mov
clc
insb
fdivs
enter
out
cwtl
ljmp
popa
out
add
push
ljmp
mov
out
or
jae
in
xor
mov
lea
sbb
add
mov
and
mov
fisttpll
jl
or
pop
pop
movsl
sub
mov
inc
mov
repnz
xchg
dec
xchg
sbb
or
lods
cltd
mov
and
sub
test
in
dec
pop
dec
sub
sub
ja
andb
insl
pop
decl
aad
xor
jl
sbbl
push
or
push
add
mov
stos
andl
or
js
rcl
lcall
jecxz
jns
mov
sarl
xchg
das
add
idiv
xchg
xor
lar
mov
dec
and
ds
jo
sub
push
into
jb
out
pop
xchg
sbb
notb
jl
lcall
outsb
scas
cmpsb
shll
out
fldl
sbb
pop
mov
adc
jbe
jbe
repz
aam
outsl
je
inc
push
cmp
adc
jle
mov
stos
out
cmp
in
sub
mov
mov
enter
cmc
std
mov
xor
cmc
call
sbb
cmp
or
out
scas
push
and
je
bound
and
pop
fidivrs
xor
cmp
push
push
pushf
xchg
fcoml
pop
shll
repnz
cmp
pop
mov
pop
jecxz
out
repz
cmpsl
iret
hlt
clc
jle
call
arpl
pushf
adc
popa
ffree
in
fwait
or
sub
fisubrs
jne
sub
xchg
fxch
xchg
sti
pop
lds
pop
arpl
popa
mov
jge
sbb
dec
rcrl
push
repz
scas
and
les
sub
xor
mov
mov
jmp
and
dec
inc
icebp
psubsw
jae
pop
mov
dec
cmp
in
out
pop
add
rcrb
cmpsb
jecxz
outsb
xor
mov
aaa
mov
nop
and
mov
sub
mov
push
jmp
add
ja
js
scas
subl
iret
lock
push
xorb
mov
ss
jl
jne
push
sbb
cmpsb
pop
ret
sbb
pop
ljmp
xchg
out
inc
mov
shl
lock
inc
add
pop
sub
sbbl
dec
jnp
leavew
xchg
push
es
fwait
mov
mov
mov
sbb
xchg
push
jns
and
in
or
mov
pop
mov
add
mov
loop
shlb
mov
js
and
ds
clc
cwtl
dec
dec
movsb
sub
jle
insb
inc
adc
xchg
xor
cmp
inc
jp
cmp
ja
div
std
pop
lock
or
in
cltd
int3
outsl
push
add
add
sbb
mov
hlt
cmp
leave
leave
inc
icebp
lods
sub
fiadds
xchg
push
mov
xchg
mov
inc
add
dec
data16
loop
sbb
mov
xor
enter
cmp
jb
adc
add
lret
shr
dec
cmp
pusha
imul
push
or
icebp
push
add
dec
faddl
mov
mov
or
push
leave
dec
scas
mov
mov
into
ror
mov
out
in
mov
mov
lods
andb
jo
js,pt
or
insl
cmc
stc
mov
sbbb
cmc
adc
je
int3
arpl
jecxz
std
mov
push
or
in
cmp
cmp
push
mov
mov
push
add
sub
cmp
dec
cli
dec
in
and
xchg
int
scas
sbb
lods
pop
sbb
in
xchg
and
aad
dec
mov
test
adc
adc
add
arpl
testb
pop
dec
sub
jae
and
cltd
dec
mov
mov
imul
mov
sbb
dec
insb
pop
add
pop
mov
jl
out
jns
dec
cmc
enter
sub
pop
xor
dec
jg
loope
aas
fnstsw
xorl
mov
bound
sbb
popf
sbb
or
push
cld
leave
mov
lock
jmp
inc
leave
mov
aam
cmp
mov
xor
int
ss
mov
mov
adc
add
cmpsb
jp
les
scas
cmc
adc
push
ja
repnz
add
jbe
jmp
mov
sub
rclb
lock
fwait
addl
les
sbbl
xor
aad
lret
add
push
inc
shlb
adc
hlt
jmp
arpl
xchg
rclb
mull
out
jnp
cmp
repnz
sar
cmp
ljmp
data16
sbb
fdivrs
fidivrl
push
pop
addr16
xor
xchg
daa
jns
std
xor
clc
mov
arpl
jb
pop
pop
inc
push
outsl
mov
inc
pop
icebp
mov
cmp
inc
call
clc
pop
dec
jge
cwtl
xchg
sbb
pop
dec
or
push
jbe
adc
fistpl
push
or
lods
pushf
test
fs
ret
mov
xor
scas
and
xor
mov
adc
cld
jecxz
inc
enter
dec
adc
dec
push
fsubr
push
mov
jbe
add
test
hlt
out
jg
cmp
sahf
pusha
mov
mov
cwtl
jne
das
sbb
dec
mov
xor
mov
insl
test
arpl
dec
in
imulb
scas
mov
imul
and
jg
cld
rclb
inc
mov
out
lret
adc
xchg
stc
xchg
and
add
lods
push
push
aaa
xchg
mov
fldl
xor
adc
or
and
mov
mov
dec
mov
int
orl
lds
jmp
test
test
or
pop
adc
int3
xor
sbb
mov
lds
sbb
rep
xor
inc
xor
iret
and
pop
sbb
mov
xor
fiaddl
jne
fnsave
push
in
push
mov
add
sub
cmp
loop
jge
push
mov
mov
jns
push
movsl
sbb
repnz
fisttps
sbb
jae
fidivs
xlat
ret
jno
mov
add
mov
push
add
packuswb
xchg
daa
ret
mov
mov
bound
test
pop
pop
stos
fimuls
lahf
inc
or
test
sti
mov
aas
fisubrl
sti
xor
jno
mov
nop
notb
sub
cmp
fsubs
int
cmpsb
pop
jns
dec
mov
into
cli
outsl
and
sub
in
xchg
cmp
jl
test
push
pop
mov
in
lds
xor
mov
loop
push
and
flds
and
add
out
les
pop
dec
xlat
cmp
rorb
mov
arpl
add
push
xchg
dec
push
imul
mov
inc
inc
inc
jbe
lock
xchg
lcall
mov
ss
adc
inc
mov
jne
mov
mov
pop
hlt
nop
cmpsb
out
push
subb
fistl
test
mov
dec
loop
sahf
mov
push
mov
test
aad
daa
cmc
mov
and
jg
imul
jnp
les
test
fcmovne
clc
ficoms
push
cmp
xchg
rorb
lcall
cld
and
dec
loop
and
nop
in
js
xchg
xor
lods
andb
mov
in
not
pop
xchg
sbb
movsb
dec
les
push
xor
xor
call
mov
jge
mov
lock
lret
pop
pop
inc
lods
push
aaa
xchg
adc
popl
lods
sbb
popl
movsl
push
jo
sbb
pop
ret
popa
mov
cld
data16
pop
push
add
jp
push
out
xchg
inc
push
inc
pop
nop
out
sub
push
movb
sub
jp
fucom
pop
mov
mov
adc
pop
ss
outsl
pop
xchg
cmpsb
cmpsb
sbb
push
and
lret
sahf
adc
and
addr16
into
add
fs
in
movsl
push
dec
rcr
aad
fwait
mov
push
ja
sbb
shlb
mov
mov
and
push
cmp
cmp
test
addr16
pusha
cmp
adc
sub
mov
push
lds
ja
push
xorl
sar
lret
pop
in
jecxz
cmc
add
sub
or
leave
or
stos
testl
xchg
push
fwait
sarl
cs
mov
add
and
mov
mov
xor
outsl
push
xor
sub
inc
sbb
pop
jp
add
sti
repz
sub
cmp
imul
sbb
dec
arpl
stc
mov
pop
xor
adc
nop
stc
cltd
adc
testl
rcll
repnz
cmp
xchg
push
dec
movsl
sub
in
and
jmp
mov
and
push
scas
mov
mov
mov
xchg
push
sbbl
cwtl
xlat
xchg
sub
push
inc
es
cmp
xor
and
aam
lret
cmpsb
loopne
push
aam
mov
movsb
jp
or
loopne
ja
xor
shl
lock
or
pop
pop
icebp
ds
jp
push
xor
push
sub
fsubrl
dec
add
sbb
je
and
dec
pop
add
pop
stos
xchg
iret
jns
sbb
subb
mov
test
mov
mov
aaa
movsl
int3
sub
stos
int
mov
xor
or
vmovntps
xchg
mov
push
arpl
jecxz
mov
push
hlt
jbe
aam
lret
lock
iret
cmc
cwtl
mov
stos
mov
sub
xor
data16
push
scas
cltd
shrb
adc
push
inc
mov
mov
stc
sub
outsb
mov
cmp
push
sub
insb
xchg
jne
test
fwait
mov
ja
pop
inc
xor
movsl
mov
mov
push
mov
gs
dec
pop
rcrb
sbb
test
cmp
int3
fdivr
cmp
xchg
mov
pop
test
in
out
movsl
mov
push
popf
mov
mov
adc
icebp
dec
fcmovbe
jp
fsubrp
fldcw
mov
clc
dec
fildl
add
fistpll
nop
sbb
cmp
add
mov
or
in
jbe
xlat
mov
and
adc
shll
mov
repnz
sahf
cmp
sbb
mov
sbb
cmp
add
and
and
sbb
push
pop
xchg
cmpb
cmpsb
daa
pop
cmp
jns
mov
add
sbb
mov
or
idiv
pop
dec
test
repnz
sbb
push
clc
loopne
xor
push
or
or
and
rorl
pusha
lahf
sbb
xchg
das
int
xlat
jmp
mov
lahf
popa
movsl
jmp
xchg
mov
adc
dec
ljmp
imul
or
and
jmp
cmp
je
mov
xor
je
sub
adc
lds
dec
or
mov
ss
jbe
sub
aas
in
mov
mov
mov
mov
sub
cmc
cmp
push
dec
sbb
xor
sbb
hlt
lret
push
xlat
add
xlat
mov
xor
rcl
inc
out
stos
dec
movsl
in
popa
lcall
xchg
mov
jb
mov
inc
jmp
fs
popf
rcrb
cmp
les
push
sbb
or
lahf
mov
push
add
push
cmovbe
xchg
mov
loop
ss
mov
ja
sbb
cmp
cmpl
das
mov
popa
sahf
or
cltd
sahf
popa
adc
outsb
jmp
into
out
pop
cmpsb
inc
cmpsb
jge
push
push
mov
sub
sub
pop
sti
mov
mov
or
in
ljmp
xchg
or
push
loop
mov
out
sub
in
cli
insb
mov
in
lcall
push
and
sbb
cs
bound
push
nop
push
rorb
jg
adc
icebp
dec
add
int3
cmp
pop
xor
insb
lret
adc
cld
test
out
cmpsb
pushf
push
outsl
and
popf
mov
dec
cmp
sub
cmpsb
adc
mov
mov
add
and
jne
cmp
xor
pop
add
pop
xchg
push
inc
fstpl
mov
dec
sarb
cmp
jle
sarl
mov
test
movsl
scas
call
jae
repnz
inc
push
test
lods
sbb
daa
sbb
in
jmp
inc
movsl
mov
aas
mov
stos
enter
dec
rol
fstpl
nop
pop
mov
sysenter
push
add
test
sub
mov
fs
push
ret
and
xchg
out
adc
cmpsl
cmpsb
jae
mov
int
shll
xchg
aad
push
jle
push
xchg
sub
inc
shlb
js
mov
mov
fstpl
imul
stos
pop
add
push
fistps
jmp
xor
cs
stos
sbb
ror
adc
ja
jo
fimull
hlt
sbb
int
jecxz
pop
inc
adc
add
pop
js
fcos
pop
andl
insl
pop
pop
inc
jbe
sub
sbb
jg
or
mov
xchg
movb
or
pop
push
into
loop
jno
mov
movsl
push
xchg
dec
rcll
inc
dec
jecxz
vmread
sub
xor
jecxz
cmp
int
pop
dec
jne
sub
cmp
lock
cs
ja
test
dec
jnp
faddl
xor
mov
jl
cs
push
and
iret
jl
sbb
leave
aad
ret
push
ss
movsb
out
pushf
xlat
jbe
inc
int
jne
lcall
in
xor
cmp
add
xlat
jb
in
mov
inc
sbb
or
sbb
xchg
sub
fists
mov
mov
push
and
sbb
jl
and
pop
rcrl
mov
mov
mov
dec
adc
lods
sbb
js
lock
cmpsb
pop
cwtl
stc
mov
xchg
std
iret
xlat
std
mov
cmpsl
inc
mov
stc
pop
scas
mov
iret
pop
fdivp
xchg
add
mov
sar
or
arpl
call
adc
add
out
mov
dec
scas
rclb
adc
pop
imull
aad
repnz
sahf
sbb
and
mov
sub
pusha
out
jo
push
aam
fs
mov
fld
and
cmp
lret
in
into
ds
xchg
fnsave
inc
mov
clc
xchg
test
pop
mov
jmp
inc
jmp
mov
or
lcall
mov
xor
in
xchg
enter
test
mov
sbb
pop
push
or
insb
xor
cwtl
xchg
sahf
xor
ja
jmp
out
sbb
mov
int
pop
imul
or
aam
push
pop
add
ret
ret
int3
idivl
mov
push
jno
xchg
push
pop
and
in
jno
mov
dec
dec
roll
sbb
xor
jg
ja
sbb
mov
mov
mov
std
jne
dec
shl
and
sbbb
stos
les
xor
xchg
scas
in
xchg
ret
push
inc
cmp
outsb
jo
push
push
stos
stos
shrl
xor
jns
inc
or
adc
dec
xor
test
mov
push
push
ds
and
lret
aam
inc
push
sub
sbb
adc
jmp
sahf
jo
xchg
mov
adc
mov
and
adc
adc
rcll
jecxz
fimuls
jg
stc
loopne
and
dec
popf
adc
sub
mov
roll
mov
mov
inc
inc
out
sub
mov
jno
mov
enter
jle
cmp
fisubrl
xchg
and
shl
jns
push
or
mov
fwait
dec
lcall
push
mov
pminub
movsl
push
push
sti
arpl
cmp
not
xor
into
orb
orb
cmp
lret
inc
popf
lds
bound
std
push
push
mov
adc
pop
jmp
outsl
and
cmc
adc
aas
xchg
cmp
dec
add
and
flds
push
icebp
cwtl
pop
inc
dec
dec
xchg
push
pop
test
in
mov
das
leave
jnp
or
arpl
addl
cmp
xor
xchg
into
or
jecxz
pushf
lret
mov
fimuls
lcall
iret
pop
fs
xchg
xchg
test
adc
out
aas
aad
and
loop
xchg
or
pop
pop
and
inc
xlat
push
xchg
xor
jo
fmul
stos
fsts
push
mov
rol
stos
stc
bound
jl
aad
mov
repnz
dec
mov
daa
js
cmp
dec
ret
sub
add
call
pop
mov
pop
lret
sbb
xor
je
mov
ja
ret
xchg
fisttpll
sub
bound
mov
cmp
ja
add
cmp
push
cwtl
push
xlat
das
xchg
rclb
add
arpl
push
sahf
subb
xlat
ret
fstps
ss
xchg
cmp
ret
inc
and
mov
ds
int
insb
mov
rclb
std
push
scas
jg
pop
loopne
dec
cmp
sarb
call
adc
pop
aad
sub
mov
in
icebp
inc
mov
mov
shll
incl
push
mov
call
mov
mov
nop
loop
adc
push
jecxz
sahf
imul
mov
adc
lcall
int3
lock
std
frstor
jg
pop
lods
sub
add
xchg
ret
add
mov
mov
clc
mov
pop
xlat
jg
add
pop
add
bound
jno
sub
test
jb
mov
dec
mov
test
lds
out
repz
xchg
popf
jbe
cmpsb
in
xchg
xor
sub
arpl
fstpl
push
pop
mov
inc
cwtl
jnp
fsts
and
je
mov
xor
movsl
sbb
fwait
add
out
arpl
add
push
shlb
xor
ret
mov
lahf
ljmp
cmp
pop
add
sub
mov
stos
subb
push
mov
dec
xchg
add
fucomi
cmpl
rclb
mov
or
mov
cmp
xchg
arpl
out
mov
xchg
mov
jmp
jno
addr16
cld
es
mov
cmp
xchg
push
mov
leave
lret
and
movsl
imul
mov
negl
mov
movsb
icebp
adc
cli
repnz
mov
jle
add
jg
cli
cwtl
mov
rorb
push
jp
into
sbb
popa
roll
cmp
sub
push
sub
or
xor
mov
mov
xor
data16
push
rorb
dec
jecxz
ljmp
aas
iret
or
or
or
les
stos
lret
fisubrl
jmp
xor
jno
sub
bound
jmp
jle
add
repnz
jl
cmp
dec
movsb
pop
cmp
sbbl
movsb
push
sbb
fstps
mov
pusha
repnz
ret
push
add
insl
cmpsl
xchg
cld
movsl
das
cs
add
add
add
push
jo
outsb
mov
adc
leave
mov
jge
push
mov
test
jne
xchg
aad
lock
pushf
sbb
sti
enter
repnz
movsb
push
pop
xor
and
clc
lret
sbb
jmp
add
adc
aas
dec
fsubs
aas
lea
mov
je
cmc
mov
add
xchg
and
jecxz
pop
lods
fstps
jge
add
add
mov
dec
or
pop
es
mov
loop
jae
clc
xor
adc
sti
jno
push
push
aas
mov
imul
cmp
adcb
or
dec
ret
cmp
fmull
loop
cmp
push
ret
in
and
push
movsl
ljmp
mov
ffree
adc
mov
inc
cwtl
jg
xor
fwait
popa
pop
jl
adc
shlb
or
in
dec
push
and
mov
mov
out
andl
aad
and
into
out
sti
xor
xchg
dec
pop
jl
lods
lret
hlt
jb
sbb
dec
pushf
jl
nop
push
sbb
xlat
pop
pop
imul
mov
cmpsb
mov
add
inc
fisttps
inc
subb
inc
mov
or
dec
test
add
sar
imulb
jno
pop
push
call
xor
dec
nop
cmp
mov
xor
repnz
push
out
and
ret
daa
push
push
add
insb
sarl
arpl
add
jns
mov
jecxz
jl
aaa
mov
jnp
ss
sbb
mov
dec
gs
pop
mov
rclb
andl
mov
mov
jns
sbb
jns
jmp
aas
mov
rcl
jg
fbstp
or
and
xchg
fisttps
in
insl
add
stc
pop
and
jmp
sbb
dec
lret
mov
fidivs
fbld
push
xchg
inc
in
mov
mov
faddp
js
roll
fs
scas
addl
jle
xchg
or
loopne
mov
or
adcl
fistpll
mov
or
or
jne
inc
orb
scas
popaw
push
sub
jne
jle
mov
movsl
fnstcw
cmp
push
mov
ljmp
inc
rcl
call
dec
rcr
pop
lods
sahf
and
ds
in
lds
jmp
push
inc
add
mov
and
sbb
daa
out
flds
aas
cmp
mov
adc
stos
sbb
xchg
adc
js
and
cmpsl
in
inc
pop
cmp
aad
pop
fs
add
mov
aad
pop
or
scas
cwtl
mov
adcl
cmp
call
lret
fstps
fld
cmp
cmp
jb
imul
gs
inc
mov
and
xor
xor
jno
mov
loope
push
dec
rcll
sti
mov
jl
daa
mov
leave
dec
jmp
in
sub
or
mov
shl
dec
mov
cmp
dec
sub
ja
push
ficomps
popa
shlb
lds
enter
setb
movsl
jge
pop
fwait
mov
in
sbb
mov
pop
sub
xchg
inc
ret
fucom
das
icebp
mov
nop
mov
mulb
fstpt
xchg
sbb
jl
xchg
dec
jg
frstor
dec
xchg
jge
out
movsb
xchg
inc
test
sti
sti
jns
aam
mov
in
fidivs
shl
icebp
cmp
inc
mov
loopne
imul
push
pop
outsb
inc
xor
sub
mov
fnsave
inc
repz
rcll
mov
pop
cld
xor
jbe
adc
or
call
repnz
jmp
sbb
cmp
add
jb
inc
cld
dec
ret
mov
hlt
lods
xchg
jle
pop
int3
repz
jmp
gs
mov
add
mov
or
mov
push
in
mov
mov
cmc
mov
shlb
mov
sbb
leave
shl
and
mov
fistpll
fdivl
sbb
dec
imul
stos
mov
insb
pop
stos
lahf
mov
push
cld
xchg
lea
dec
mov
loop
pop
test
lea
pop
add
and
sbbb
pop
push
int
lea
test
jns
or
ja
mov
je
dec
xchg
fsubrl
sub
and
lock
bswap
jp
cmp
pop
shlb
movsb
int
fs
adc
mov
or
ss
add
pop
or
and
sub
xor
lods
loopne
sub
cld
jmp
fimull
mov
xchg
or
shll
jg
mov
cmp
scas
push
je
push
imulb
call
lock
pusha
mov
das
out
cwtl
pop
mov
bnd
bound
sub
int3
add
mov
lock
sahf
or
cmp
sub
mov
mov
mov
out
add
mov
mov
mov
fs
fidivrl
or
mov
lahf
into
adc
testl
adc
ror
mov
xchg
cmp
sbb
xchg
daa
mov
cwtl
push
movb
scas
cmp
sarb
jb
imul
test
fwait
mov
cmp
sub
jle
mov
mov
mov
shlb
roll
inc
mov
std
and
jg
fidivrs
lock
inc
inc
pop
add
in
mov
sbb
or
xor
cmp
sub
sbb
sbb
or
push
out
cld
xlat
je
cmpsl
sbb
dec
inc
dec
jne
aas
push
cmp
inc
push
push
scas
pop
lds
inc
push
je
cld
cwtl
dec
inc
push
mov
mov
mov
je
pop
out
pushf
cli
mov
jns
shll
mov
jmp
dec
lahf
shr
leave
imull
rcrl
ret
jb
xchg
xchg
pop
push
jnp
xchg
sub
les
pop
aam
jae
jb
jl
popa
gs
js
std
cmp
mov
pop
and
xchg
outsb
loope
ss
leave
xchg
pop
rcl
jmp
xchg
xor
push
pop
adc
mov
dec
xor
test
dec
sbb
push
enter
das
jecxz
jmp
xrelease
push
fbstp
out
loop
pop
and
cmc
rorl
pop
aad
jae
mov
dec
and
fsubl
add
xlat
xor
cwtl
inc
add
push
sub
jae
and
cmpsb
xchg
and
and
pop
test
xor
icebp
loopne
and
jmp
inc
out
nop
in
es
push
sbb
cmpsl
adc
mov
jg
cmp
or
xchg
adc
in
ja
sbb
stos
push
and
loop
sar
hlt
insb
js
lret
push
pop
sub
subb
sbb
ret
sub
ja
and
sub
lahf
pop
testl
stos
push
jg
mov
xor
aas
outsb
pop
pop
add
je
dec
jmp
sub
pop
inc
mov
leave
mov
jecxz
or
or
pop
push
pop
call
stos
cwtl
push
sub
jmp
mov
xlat
mov
inc
loop
inc
repnz
adc
enter
push
push
push
jae
dec
rcrl
ljmp
cmp
dec
loope
mov
jg
popa
inc
push
in
inc
andl
xor
or
xchg
rcl
pop
xchg
mov
das
pop
pop
out
pop
stos
stc
int3
push
call
mov
mov
aaa
in
fistpl
cwtl
gs
mov
lret
push
mov
sub
lods
push
movsb
sub
aad
popa
insl
in
je
lret
rclb
jmp
cld
adc
jnp
scas
in
pop
pop
cmpsb
mov
inc
mov
inc
out
shll
call
ja
jp
xchg
sbb
cmp
shrb
mov
popa
test
jmp
rcrl
dec
push
popa
lods
cld
dec
inc
incl
dec
addb
jb
lret
aas
ret
inc
mov
ljmp
pop
mov
jnp
out
mov
iret
mov
push
sbb
and
mov
lea
add
add
jmpw
push
leave
sub
cli
dec
aam
repz
xor
push
cmp
mov
mov
jp
iret
outsb
scas
scas
mov
shll
adc
and
inc
rorl
stos
in
ds
mov
sarl
mov
repnz
pop
inc
decl
paddd
inc
jecxz
pusha
pop
jg
mov
mov
loopne
data16
rcr
ficoms
inc
sar
lret
xlat
mov
in
push
pop
xchg
leave
mov
loop
nopl
push
sbb
subl
ret
rdmsr
add
in
outsl
es
outsb
push
and
outsl
dec
sub
mov
lock
cmp
insl
out
mov
nop
mov
and
iret
mov
popf
int
add
cmc
or
sbb
std
testl
jp
pop
adc
ret
stc
in
stos
xchg
mov
push
inc
sbb
mov
outsl
clc
add
mov
bound
pop
jno
ret
dec
dec
cmpsb
push
pop
xlat
and
xchg
jge
icebp
jae
rorl
jle
test
lods
call
or
shlb
repnz
mov
jg
sub
dec
es
add
shll
adc
sub
mov
in
cmp
mov
ljmp
xchg
xlat
add
pop
add
jnp
out
adc
xchg
pop
xchg
icebp
xor
sbb
adc
jnp
mov
arpl
dec
js
xchg
adc
out
or
test
dec
cmp
xor
mov
subb
sti
mov
jl
in
xlat
pop
jno
lcall
fadds
sub
int3
and
dec
xor
push
sarb
mov
pop
cld
aam
jl
imul
jle
leave
in
push
addr16
pop
xchg
sub
test
or
jo
jmp
lret
dec
cmp
cmp
stos
loopne
mov
and
insl
cltd
cmp
cpuid
cmp
inc
cmpsb
push
insb
into
mov
imull
mov
mov
dec
ljmp
mov
xchg
fistps
jle
sahf
sub
aam
fisttpll
push
mov
popa
aaa
dec
adc
add
jae
movsb
sbb
or
and
jg
inc
movsl
jo
imul
and
stc
andb
movups
jno
push
enter
clc
xor
outsb
subb
xchg
mov
push
pop
icebp
in
lret
out
mov
sub
adc
out
cmc
push
xchg
stc
push
xchg
leave
mov
or
ret
fldt
lods
xchg
pop
xchg
sbbl
mov
leave
sub
cmpsb
fdivl
jo
div
popa
xor
xor
loopne
mov
int3
test
das
sbb
mov
ret
xor
xchg
push
jne
test
pop
inc
push
ret
mov
sbb
push
xor
repz
pop
je
push
cmpsl
std
dec
vmovapd
sub
push
mov
xlat
mov
and
dec
sub
negb
hlt
mov
scas
mov
adc
and
imul
ss
out
jecxz
nop
lea
fidivrs
mov
sti
neg
sbb
and
adc
movsl
ud2
push
data16
xchg
shll
adc
lods
and
adc
xlat
insb
aaa
xor
divb
xor
imulb
push
scas
mov
pop
pop
dec
inc
mov
das
leave
test
mov
pop
dec
or
divb
aaa
mov
imul
jnp
mov
push
mov
xchg
es
jnp
jmp
ret
mov
lcall
and
je
cmpsl
icebp
mov
icebp
lods
in
sbb
test
stc
out
fistl
inc
add
mov
int3
rorb
aas
dec
and
push
gs
add
pop
lret
xor
adc
cs
adc
sti
outsb
add
mov
or
mov
sub
and
popa
fldpi
ss
jle
loopne
push
jecxz
andl
ds
sub
cmp
aam
ds
cli
or
push
bound
gs
push
cmpsl
jecxz
push
inc
adc
add
add
pop
mov
pop
mov
and
dec
fisubs
or
aam
pusha
imull
mov
stos
pop
push
fdivrs
mov
cs
in
imul
ficoms
shr
push
mov
xor
sbb
jge
dec
jnp
fnstcw
xchg
xchg
lods
hlt
mov
aas
ret
jb
lret
and
mov
cld
lahf
sub
add
rcrb
adc
andl
add
and
int3
xchg
scas
xchg
pop
adc
push
push
xor
pop
push
nop
ret
xchg
int3
inc
dec
cmpl
lock
pop
mov
inc
fmull
orb
pushf
jne
movsl
xchg
pop
filds
hlt
inc
in
dec
loope
loopnew
jnp
jle
mov
dec
adc
fimull
mov
inc
sbb
outsb
jno
test
imul
adc
fwait
cltd
sahf
push
fwait
jp
mov
or
mov
xor
scas
in
daa
sub
fmuls
xchg
sub
push
xor
aam
mov
pop
xor
scas
jmp
or
add
lret
dec
test
xchg
push
in
lahf
mov
mov
cli
push
mov
stos
fnstsw
scas
push
pop
aaa
ret
outsb
pop
addr16
cltd
js
lret
test
and
mov
sarb
clc
jp
mov
mov
push
adc
mov
ret
mov
ss
dec
ss
push
fisubl
and
adc
fisttps
add
mov
push
out
mov
iret
xlat
outsl
xchg
in
sub
mov
lahf
mov
add
jmp
dec
in
jmp
cmp
and
ficomps
lahf
filds
mov
pop
push
xchg
les
pop
xchg
scas
mov
sub
pop
push
xor
mov
inc
rcrl
lret
push
mov
insb
ds
sarl
fldcw
cs
shr
cmc
loopne
lret
sub
dec
cmpsb
cmc
jg
xor
ret
sbb
sub
push
xchg
andps
repnz
push
cld
sbb
or
xor
sahf
fisttpll
sub
pop
add
cmpsb
sbb
mov
sub
add
sub
jbe
push
pop
mov
mov
out
in
adc
arpl
fs
clc
push
nop
and
mov
icebp
xchg
and
jnp
inc
fsubrs
orl
jnp
int
stos
insl
mov
movaps
std
mov
stos
adc
outsl
adc
xor
ja
shrb
ss
arpl
lcall
or
mov
out
inc
movd
or
sti
lock
mov
jae
rorl
mov
inc
sub
pop
jbe
dec
rcl
fcomip
test
in
push
into
imul
or
outsl
add
jg
test
or
dec
out
fbstp
push
imul
test
je
sbb
add
cmp
or
cmpsl
sbb
dec
mov
cmpsb
loope
and
mov
and
mov
or
lea
ret
adc
xlat
jge
xchg
pusha
incb
jp
cmpsl
sub
jmp
mov
aad
leave
mov
outsl
stc
flds
pop
push
jo
cmp
nop
push
mov
popf
xchg
pop
lret
lea
dec
pop
pop
imul
mov
pop
jge
pop
xchg
lret
or
stos
negb
lock
into
jnp
sti
adc
lret
push
pop
mull
or
out
and
sub
dec
push
insl
inc
or
subb
imul
and
insl
cmpsl
aam
inc
aam
xor
sbb
call
xchg
sbb
rclb
jecxz
lods
mov
add
xor
in
dec
inc
push
popf
sub
sub
adc
dec
in
jno
lahf
fsubrl
aas
repnz
add
xchg
mov
ret
adc
push
jae
movsb
in
sub
shlb
xchg
push
jp
fstpt
addl
inc
inc
stos
sahf
aad
lret
sti
ss
cs
pop
sub
cmp
push
ljmp
inc
sbbl
test
mov
int
lahf
ja
lods
sbb
push
push
push
movsb
xor
fadds
lahf
push
fsubrp
mov
cmp
xchg
movsb
xchg
push
sbb
inc
pop
movsb
in
les
test
or
pop
and
cmp
mov
xor
mov
adc
or
ss
jl
in
pop
stc
ret
lea
dec
lock
jle
bound
adc
pop
in
gs
adc
mov
rcll
je
addr16
ja
and
pop
mov
sub
scas
call
test
push
cmpsb
leave
ja
fsubrl
or
lds
xchg
rcl
fmulp
push
movsb
xchg
jno
out
daa
adc
jnp
cmpl
cltd
out
dec
and
sarl
jb
imul
jle
xor
movsb
int3
int
pop
push
push
mov
insb
ja
into
cwtl
add
pop
xchg
pop
and
inc
sbb
jno
push
outsl
cmp
mov
scas
iret
ljmp
stos
lret
popa
xor
repnz
push
repz
cmp
adc
lods
pop
fisubl
pop
jae
fsubrl
mov
mov
cwtl
jb
dec
jmp
adc
into
addr16
inc
pop
pop
out
sar
cmp
mulb
fdivl
dec
jmp
push
jbe
popa
and
sbb
inc
cmpsb
movsb
mov
mov
and
popf
xchg
cltd
xlat
sub
dec
repnz
xchg
push
jns
cmc
xchg
sbb
add
lret
cmp
or
xchg
mov
jl
cmp
add
xchg
iret
leave
icebp
fs
popa
imul
inc
and
jns
jecxz
xchg
fwait
cmp
lds
into
stos
ds
xor
cmp
pop
movsb
and
mov
inc
inc
icebp
pop
fnsaves
sbb
mov
jl
imul
fs
bound
loope
xchg
adc
push
cmp
cmpsb
or
dec
jge
inc
and
aaa
iret
in
into
jbe
xor
dec
or
test
or
xchg
push
out
dec
adc
stos
imul
add
pop
ja
adc
popl
lea
adcl
adc
jmp
es
pushw
imul
mov
jmp
cli
hlt
jb
inc
push
stc
repz
ljmp
xor
jge
clc
cltd
dec
leave
dec
into
fstpt
jne
icebp
xor
insl
mov
repz
repnz
pop
push
nop
mov
sbb
sarl
shrb
outsb
pause
mov
rcrl
movzbl
cmpsl
xchg
jp
js
mov
stos
mov
mov
pushf
lea
jae
in
xchg
test
testb
ds
mov
pop
shrl
dec
mov
popa
jl
inc
pop
mov
rep
arpl
lret
dec
xchg
cs
imul
sahf
xor
je
rcrl
and
push
add
jbe
xchg
sbb
adc
int
addr16
out
mov
xchg
mov
and
rorl
jmp
xor
sbb
pop
cli
pop
movsb
fiadds
push
mov
xchg
int3
out
jo
cmpsb
xchg
mov
adc
aad
xor
pop
sbb
push
sub
sbb
shlb
xchg
xchg
inc
xlat
cwtl
sti
fnsave
push
xor
fsub
mov
jo
cld
jp
arpl
mov
insl
cld
mov
insb
or
push
pop
pop
mov
fs
push
push
lods
jmp
jmp
int
lcall
popa
mov
test
pop
daa
pop
xor
in
lcall
push
ds
push
mov
push
lock
cmc
aam
subb
js
mov
mov
aad
leave
sub
das
ficompl
xor
fs
pop
mulb
pop
cmp
cmp
sbbb
mov
inc
cwtl
das
cmp
aam
mov
and
ljmp
cmp
jl
sub
or
adc
cmpsl
outsl
dec
mov
mov
pop
or
push
notb
mov
adcb
sub
and
and
lret
outsb
fadd
add
lock
push
add
add
imul
xlat
in
bound
mov
xlat
mov
daa
mov
mov
inc
mov
icebp
sub
ja
icebp
cmpsb
fimull
loopne
gs
pop
or
push
stos
pminub
icebp
test
sub
ljmp
fmul
xchg
outsl
xchg
xchg
jge
xor
dec
or
jne
inc
ret
scas
or
sbb
or
and
movsb
push
ljmp
imul
dec
pop
sub
add
es
xor
jbe
and
aaa
pop
sub
lock
ss
jnp
test
cmpl
lahf
mov
fwait
dec
shrl
lret
cmc
fs
les
sub
loope
fldl
or
jb
shl
movsl
scas
xor
fdivr
rcr
aaa
insb
or
pop
adc
fwait
lret
sub
xchg
test
bound
les
add
cmp
out
dec
xchg
push
inc
pop
bound
add
push
mov
jnp
icebp
or
inc
pushf
adc
jl
insl
mov
lcall
mov
ljmp
xor
sbb
mov
pop
jmp
in
test
or
int3
lods
mov
jo
and
add
out
xor
movsl
jle
jmp
repnz
int
fs
outsl
in
inc
mov
dec
test
jecxz
lahf
mov
mov
outsb
jl
test
addl
cli
adc
lods
cmp
fsub
hlt
test
xor
sahf
cmp
leave
inc
or
dec
loop
mov
nop
pop
or
les
push
ret
add
push
mov
shlb
push
fistl
roll
ja
out
or
pop
aad
cmp
push
rcl
pop
fdivl
mov
mov
mov
xor
lods
popl
gs
sub
ror
std
gs
push
aam
jns
xchg
and
aas
dec
jns
xor
out
inc
rclb
fildl
mov
sub
imul
or
inc
mull
cmp
movsl
sbb
sar
mov
jmp
andb
xchg
sti
jne
jo
sbb
xor
shl
fistl
xchg
call
mov
push
pop
ret
addb
jns
mov
ret
and
adc
mov
dec
rcrb
dec
and
fwait
test
lods
mov
pusha
add
mov
push
pop
scas
mov
in
mov
neg
jns
push
mov
sub
cmp
sbb
dec
insb
ss
push
imull
andl
insl
jp
lahf
shll
bound
andl
cmc
push
cmp
aad
mov
rclb
xor
adc
inc
and
mov
mov
and
test
and
subb
jge
adc
sarb
push
adc
cmpsl
sbb
lret
sbb
bound
add
movsb
sahf
or
cmp
das
fsubr
inc
xchg
mov
adc
and
sahf
mov
in
cs
dec
dec
xchg
adc
mov
sbb
cmp
push
sahf
cmp
jo
jmp
addr16
pushf
mov
xor
adc
mov
mov
test
mov
lods
jne
cmp
or
xchg
xchg
cmpsl
pop
fisubl
mov
cld
push
dec
or
add
push
mov
mov
xor
in
dec
jae
ret
push
jb
shrl
shrb
jmp
push
fwait
mov
and
jne
ljmp
fisubs
mov
pop
cmp
adc
mov
add
cld
push
xchg
fisubrs
mov
jo
test
adc
out
shlb
enter
xchg
jle
das
rclb
loope
xchg
push
cmp
adc
stos
cmp
sub
popf
jbe
pop
je
pushf
sbb
jnp
lret
sarl
cmpsb
es
int3
pop
rcr
stos
inc
push
inc
mov
jnp
cmp
inc
scas
fsubs
jns
xor
inc
dec
nop
ficomps
dec
inc
sbb
loopne
stos
jb
inc
sub
addr16
mov
sub
sub
hlt
and
pop
mov
pop
inc
and
xlat
inc
pop
jp
jmp
push
fdivl
mov
sbb
jno
test
daa
xor
and
xor
or
sahf
test
movsl
sub
in
sub
cwtl
imul
jl
mov
leave
jecxz
mov
sahf
sub
cmp
rorl
cmp
stos
jno
mov
test
out
inc
outsl
push
shr
pop
stc
notl
jle
insl
mov
insb
pushw
and
jge
pop
push
inc
loopne
jge
movsl
pop
mov
int
out
and
pop
xchg
push
push
into
xchg
lcall
mov
popf
push
mov
or
mov
aas
bound
push
ds
scas
jmp
pop
and
inc
stos
dec
xchg
xor
test
push
inc
inc
cmpsb
sub
inc
jle
jns
xor
mov
push
inc
cmp
inc
push
push
adc
clc
fldenv
push
pop
or
inc
push
movsbl
cmp
sahf
data16
xchg
add
je
sub
into
add
shr
inc
es
aad
mov
cwtl
push
cwtl
xor
mov
dec
shlb
push
inc
or
pop
pop
push
lds
xchg
sbb
sbb
add
lret
imul
push
mov
push
xor
mov
and
xor
pop
sub
push
fisttpll
inc
divl
adcb
lods
icebp
pop
aaa
pop
mov
adcb
loop
test
xor
scas
in
jo
xchg
dec
dec
jp
xor
lds
xor
aaa
cmpsl
insl
mov
hlt
pop
mov
cmp
or
in
jo
clc
adc
test
xor
jmp
lds
xor
push
sbb
movl
adc
shll
popa
jp
aam
std
adc
cmp
mov
es
stos
in
xchg
pop
push
aas
imul
divb
jo
inc
out
adc
mov
imul
xchg
fs
push
sti
add
or
sub
orl
mov
or
inc
inc
setp
adc
sbb
daa
cmp
push
push
mov
lcall
sub
mov
dec
iret
add
sub
das
push
icebp
cmpsl
mov
or
pop
ret
adc
inc
ss
sbb
jecxz,pt
sbb
stos
rcr
jl
ret
popa
pop
aad
dec
sahf
add
outsl
mov
add
sbb
xor
daa
inc
and
int
jno
sarl
jno
cmpsb
shlb
jg
test
pop
lret
pop
adc
pushf
push
lret
dec
lds
and
pop
and
dec
cmpsb
cs
inc
pop
mov
call
outsb
sbb
mov
jns
cmp
jae
add
insl
xor
inc
add
and
stos
cmp
pop
leave
or
or
cld
in
xchg
pop
popf
xor
mov
pop
or
sbb
sub
push
je
sahf
sbb
xchg
rcr
mov
daa
mov
cmp
dec
xorb
xor
fs
andb
icebp
inc
callw
or
dec
inc
jmp
sbb
and
fmuls
sbb
and
sub
pop
fs
movsl
inc
jecxz
es
and
mov
jnp
push
sarb
adc
mov
or
pop
gs
adc
in
enter
jle
sub
stos
outsb
mov
pop
pushf
loope
pop
imul
sbb
pop
loop
loope
cli
and
jno
sub
jo
imul
jecxz
mov
lods
dec
out
mov
scas
lcall
aad
outsb
mov
cmp
roll
mov
clc
adc
xchg
jle
rcrl
mov
mov
cmpl
shrb
and
or
pop
rol
lcall
das
enter
repnz
xor
and
arpl
out
or
jnp
sysret
shlw
out
stc
enter
mov
nop
sbb
aas
jae
rcl
lahf
push
fsubrl
jmp
movsb
add
dec
mov
jno
mov
test
ds
fucomp
loope
mov
and
adc
mov
stos
dec
dec
inc
sbb
sbb
sbb
cmp
push
sub
pop
jno
icebp
fcompl
sar
jg
rclb
pop
xor
push
ds
inc
sbb
movb
push
sbb
mov
aam
clc
notl
inc
mov
ljmp
out
lret
sub
mov
pop
out
jnp
test
js
push
lcall
cmpsb
push
jbe
fdivl
cmp
out
push
stc
scas
insb
and
outsl
push
pop
iret
dec
ret
push
add
in
into
jmp
out
ffree
loope
outsb
xchg
scas
sbb
inc
loop
lgs
clc
ret
repz
cmp
sbb
xchg
adc
incl
ds
push
into
in
inc
inc
out
incl
mov
pop
push
add
pop
out
mov
pop
repz
cmp
cs
push
push
pushl
ret
lcall
push
pop
dec
movsb
movsl
test
loope
scas
xor
dec
pop
cmpsb
push
push
xor
jle
push
insl
notb
dec
cmp
jns
fsubs
data16
out
dec
rcrb
mov
std
mov
into
dec
jne
scas
aad
mov
imul
daa
int3
ja
outsl
in
mov
mov
xor
pop
lret
or
jbe
popa
sbb
loop
add
jle
aas
jb
mov
xor
adc
mov
mov
stos
adc
movsl
adc
push
adc
jecxz
iret
mov
mov
ljmp
lds
cmpsl
aam
std
arpl
push
shll
jl
or
lcall
push
mov
int
test
and
jae
rcr
aam
fimuls
cmp
ss
out
pop
jl
mov
sub
rcrl
stos
sub
in
cmp
mov
mov
aad
mov
dec
cmp
int3
mov
fsubrp
xor
movsl
mul
in
loopne
jb
test
add
push
sub
sub
loop
xlat
sar
add
xorl
xchg
cmpsl
inc
in
cmp
jmp
push
sub
adc
jns
push
dec
sub
or
lock
jmp
out
mov
outsl
in
leave
add
test
lods
sbb
sar
ret
in
test
faddl
jle
adc
repnz
xchg
inc
and
iret
pop
or
mov
loop
add
leave
inc
xor
pmulhw
adc
dec
xchg
aas
push
out
cmp
pop
in
and
add
jbe
jmp
dec
push
jmp
xchg
out
fdivp
sti
stos
xchg
lods
inc
and
lock
jb
jne
daa
push
int3
sub
imul
pop
mov
sub
jl
sbb
add
and
cld
mov
mov
push
jbe
roll
mov
sbb
inc
adc
sbb
mov
jnp
lods
pop
pop
push
mov
mov
cmp
imul
jl
test
jno
xchg
cmp
add
push
popf
imul
and
sti
inc
pop
mov
jne
stc
fistps
mov
dec
and
xor
sub
xlat
dec
iret
push
das
dec
mov
pop
push
fwait
xchg
das
iret
testb
pop
fisttpll
aaa
mov
icebp
jb
add
cwtl
push
test
and
pop
add
sbb
mov
cmpsb
sarb
outsl
jns
js
push
out
loopne
pop
xor
scas
inc
rolb
outsl
pop
dec
ret
popa
push
mov
insl
lcall
div
out
mov
mov
jge
aaa
icebp
lret
ret
mov
jmp
xchg
clc
aas
insl
inc
xchg
stos
add
mov
hlt
cld
cmp
sub
loop
dec
push
test
xchg
scas
jecxz
lret
mov
enter
xor
ljmp
stos
and
in
xchg
popa
or
scas
int3
jne
dec
dec
xchg
scas
fs
lret
jae
dec
cmpsb
add
lds
ds
bound
stos
iret
cmp
adc
nop
xchg
sarl
dec
loope
pop
rcl
cltd
loop
dec
jmp
pusha
mov
mov
outsl
push
ret
push
lods
shrl
dec
out
mov
je
in
ss
pop
inc
add
push
cs
fcoml
jbe
mov
xor
hlt
and
ja
repz
pusha
inc
pushf
cltd
mov
or
push
pop
cmpsl
pop
or
test
xchg
addl
insl
and
rcrl
add
pop
sbb
inc
add
ret
lock
add
mov
rolb
fldl
mov
jg
imul
inc
cli
inc
cli
and
pop
pop
xchg
add
jb
mov
push
pushf
pop
movsb
lea
out
jge
pushf
call
stos
cwtl
jge
btl
ret
ds
popf
xlat
test
addb
call
adc
mov
inc
std
pop
xchg
mov
movsb
test
mov
rolb
shl
cltd
sub
lcall
pop
push
stos
int3
mov
mov
mov
cli
insl
sbb
jp
fwait
aam
add
loop
in
daa
add
rolb
std
or
adc
jo
sub
sub
rclb
fidivrs
push
dec
adc
jg
inc
into
and
or
xchg
push
in
jb
bound
jl
pop
cld
ret
cmpsb
aad
test
test
loopne
in
xchg
out
mov
push
adc
popa
iret
and
incl
sbb
push
push
cmpsb
adc
mov
lcall
xor
dec
xor
xor
ret
std
fmull
push
dec
push
popf
add
mov
jmp
pop
testb
je
pop
mov
mov
sahf
dec
sub
dec
std
dec
test
stos
xchg
insl
loopne
xchg
xchg
js
dec
add
xchg
aas
xor
push
xor
inc
push
sub
rolb
pop
popf
or
mov
xlat
push
xchg
push
cmp
cltd
js
xchg
shrb
pop
jmp
loop
mov
push
jmp
fcoms
sbb
push
pusha
mov
mov
pusha
sub
shrl
push
in
ds
lock
mov
in
inc
jp
outsl
aas
jo
filds
sarl
inc
fadds
outsb
rorl
inc
call
add
gs
in
or
push
or
jno
rclb
xor
jg
mov
cltd
js
xacquire
bound
cmp
push
and
in
divb
stc
roll
cmp
cmp
loop
out
pop
lods
pop
and
mov
mov
xchg
gs
adc
mov
xor
outsl
dec
jp
data16
int
pop
das
push
sbb
je
outsl
es
mov
adc
fucom
and
jp
cmp
cmp
dec
testb
int
pop
mov
loope
dec
call
leave
leave
std
fcoms
sub
scas
lret
add
add
add
dec
mov
or
sub
add
outsb
push
clc
fucomip
cs
pop
jp
and
push
sub
test
mov
push
add
das
or
or
in
lret
lahf
pop
rorl
dec
jb
pop
ror
and
mov
outsb
xor
repnz
cmp
shll
cmp
lcall
xor
cs
mov
std
cmpsb
cld
test
je
mov
xchg
push
sbb
mov
cmp
loopne
rclb
ljmp
sub
inc
and
inc
addr16
mov
lret
fmuls
dec
stos
add
mov
ljmp
les
orl
lahf
aaa
mov
and
pop
outsb
lret
sbb
xchg
or
aad
xor
lea
mov
mov
sub
repz
add
xor
loopne
addr16
ret
popf
push
ror
add
mov
stc
fcmove
jg
push
xor
sub
in
inc
push
insb
mov
and
or
pushf
xchg
movsb
mov
ret
push
xchg
xor
out
cmp
xor
or
xchg
rcl
jmp
popf
lea
xchg
add
movsl
decl
in
push
jb
cmc
pop
and
call
fs
dec
pop
pop
fcoms
mov
xor
out
fidivs
pop
inc
dec
xor
ljmp
and
loope
jo
pop
inc
xor
mov
cld
rorl
cmp
push
dec
cmp
into
leave
cmp
lds
push
imul
and
out
or
scas
daa
cmp
jb
fistl
pop
int
mov
call
inc
mov
or
je
cmpsb
cltd
xorb
lods
mov
je
out
in
mov
cmp
movsl
sbb
imul
ja
xor
pusha
sbb
gs
pop
jmp
push
or
dec
lods
clc
mov
dec
cmp
push
fdivrs
popf
and
in
mov
jle
cmp
repnz
test
mov
testb
pop
daa
insl
xchg
push
xchg
add
xor
out
lea
pushl
mov
lahf
sbb
add
test
adc
cmp
pop
mov
fadds
dec
sub
pop
inc
jae
mov
test
notb
sarb
je
sbb
movsb
jns
int3
icebp
mov
mov
jge
cmp
imul
sub
leave
sub
mov
mov
xor
jnp
jbe
je
scas
mov
sub
jne
cmp
jno
aaa
xor
xor
and
scas
mov
jg
pop
ds
ret
xchg
pop
sti
push
stos
xor
outsb
dec
jge
mov
dec
mov
leave
aas
pop
loope
lds
loop
ret
sti
scas
js
dec
scas
ja
cmp
sub
aam
or
pop
js
lret
xor
mov
fwait
lahf
add
jle
dec
mov
scas
jmp
fildll
lea
xor
loope
dec
mov
mov
insl
mov
sbb
call
lock
cmpsb
into
push
pop
xchg
dec
cwtl
cwtl
inc
dec
sub
adc
daa
fstl
jge
lds
push
stos
call
stos
out
push
test
sub
jbe
cld
xchg
movsl
add
movl
rcrl
push
test
repz
pop
mov
adc
and
dec
mov
pop
std
push
sbb
mov
lret
iret
cmp
pusha
mov
popa
xor
xchg
enter
jp,pt
stc
outsb
cmp
dec
cmp
and
pop
in
call
shll
xchg
cmpb
xchg
jb
fmul
shlb
add
sub
add
push
xor
xor
mov
sub
and
fsts
mov
xchg
pop
mov
xor
addl
scas
adc
cltd
pop
outsb
mov
pop
cmp
shll
sbb
aad
in
movl
mov
add
mov
inc
xchg
add
jb
fidivrl
jle
cld
mov
sahf
into
pusha
in
ret
dec
dec
ds
or
negl
push
fs
stos
fists
mov
bound
test
pop
cmp
dec
andb
push
jne
out
xchg
xor
push
sub
mov
cmp
mov
lret
call
dec
roll
xchg
das
and
add
mov
shrl
pop
cmovs
in
out
mov
cli
fistpll
mov
xchg
pop
pop
fcomps
dec
xchg
mov
js
shrl
sbb
cmpsl
and
leave
or
or
lahf
gs
loopne
inc
inc
scas
in
sbb
push
ret
add
aaa
push
rclb
paddq
push
pop
shr
pop
mov
and
mov
xchg
dec
or
lods
or
pop
sub
out
fwait
push
sub
icebp
xchg
out
xor
out
sub
arpl
add
jne
lds
cmpsl
xor
sub
push
sbb
mov
lcall
cmpsb
hlt
aaa
dec
and
mov
ss
push
cmp
fmuls
mov
jge
in
aas
xchg
push
imul
in
notl
repz
pop
jnp
pop
incl
iret
or
scas
pop
shll
mov
movsl
sub
jnp
mov
inc
outsl
icebp
inc
ja
out
int
inc
leave
int3
jnp
fidivrl
test
into
dec
xor
testb
inc
nop
push
xor
or
jbe
inc
setne
xchg
xchg
arpl
jle
pop
test
hlt
inc
fsub
popa
sahf
xor
fdivs
fdivs
adc
iret
fdivs
mov
jl
inc
xor
out
jmp
or
push
fbstp
cmp
hlt
nop
mov
fiaddl
lret
push
mov
mov
arpl
adc
push
inc
bound
ret
mov
adc
mov
mov
push
imul
sub
cli
pop
test
mov
js
pop
jl
xchg
syscall
outsb
hlt
int3
cmpsl
clc
cmp
dec
nop
add
and
outsb
imul
fadds
push
fldl
cmpsb
pop
je
outsl
xchg
or
cmpsb
cmc
ss
mov
and
mov
pop
xchg
or
jmp
jbe
pop
and
dec
and
fmul
sub
test
pushf
pop
push
cmp
insl
test
sbb
sbbb
js
lcall
add
cmp
cltd
insl
add
pop
movsl
movsb
or
dec
ds
or
ds
cs
mov
pop
push
mov
and
pusha
mov
or
jns
push
inc
or
dec
xlat
pushf
adc
add
cmp
mov
in
fbld
cmp
cmp
movsb
subb
test
xchg
and
sbb
mov
out
mul
xchg
das
mov
cli
cmp
mov
mov
cmp
or
nop
mov
sub
int3
push
xchg
out
adc
cmp
cwtl
dec
mov
es
push
jl
sbb
rorb
mov
add
jle
int3
mov
mov
sbb
adc
push
jmp
pusha
cmp
mov
dec
mov
cmp
xchg
dec
aad
mov
sbb
cmp
xchg
test
mov
cmc
test
bound
loope
xchg
adcl
or
adc
push
mov
mov
into
test
mov
cld
mov
xchg
and
aaa
fbstp
outsl
adc
mov
xchg
test
stos
sbb
fcomip
pop
sub
popa
inc
les
mov
dec
leave
out
xor
arpl
mov
not
out
or
popa
fcmovb
cli
mov
xor
outsl
cld
pop
cmpsl
cmp
jp
scas
out
sub
das
lea
fs
loop
adc
stos
lea
ret
popa
jg
cs
mov
xchg
cmpsl
push
test
insl
stos
jb
loop
mov
pop
mov
xor
xchg
add
out
rcrl
outsb
inc
mov
dec
and
mov
stos
xor
add
leave
lds
and
jecxz
jmp
adcl
dec
fwait
dec
mov
add
add
push
adc
fstps
mov
mov
sbb
nop
sbb
xchg
inc
in
cmp
pop
mov
outsb
jmp
mov
cmp
and
cmpsl
mov
mov
mov
mov
out
xchg
outsl
add
cltd
gs
pop
add
sbb
lret
out
inc
adc
pop
shlb
lret
cmp
xchg
cmc
jge
mov
adc
int
xlat
push
adc
fldenv
sbb
mov
push
shl
jns
mov
lcall
jmp
mov
scas
call
dec
dec
xor
enter
lret
jle
ljmp
mov
cwtl
out
scas
mov
scas
pusha
mov
cmc
lahf
mov
sahf
int3
arpl
or
adc
xlat
ja
and
or
sub
insb
mov
sbb
pusha
add
xor
xor
mov
fcomip
cmp
nop
leave
lds
dec
and
insl
pop
lds
jne
cmp
arpl
test
lahf
push
int3
mov
pushf
or
aad
add
jge
je
xchg
xor
insb
jnp
cmc
pop
or
pop
testl
in
popf
popf
push
or
push
jb
pop
in
push
scas
arpl
sbb
ret
out
jecxz
negb
or
mov
out
insl
shl
dec
leave
sub
xchg
dec
subl
pusha
repz
clc
ds
mov
mov
inc
xchg
icebp
or
dec
dec
lahf
insb
add
jns
xchg
enter
mov
bound
add
xor
in
mov
or
add
ja
and
std
sub
pop
sub
add
sbb
stos
stos
ss
sti
and
lret
mov
icebp
lahf
test
movb
aas
xorb
sub
insb
and
push
mov
adc
xchg
es
fs
dec
push
sub
jbe
daa
out
mov
pop
shr
cwtl
mov
jecxz
pop
xchg
je
xor
cmpsl
enter
add
andl
jb
pop
test
int
out
gs
pop
loope
aam
call
scas
aaa
pushf
adc
rcl
cli
jnp
mov
mov
pop
xor
bound
int
dec
or
inc
fnsave
mov
inc
out
lock
addr16
pusha
jb
arpl
adc
push
outsl
fmuls
data16
push
lds
pop
in
loop
pop
lret
aad
xchg
ss
or
es
std
popa
fprem1
call
out
adcl
mov
mov
inc
lret
icebp
adc
test
pop
push
mov
mov
jo
sub
call
jl
mov
xchg
hlt
xchg
repz
ss
sarb
cwtl
or
adc
cmp
aas
dec
and
mov
cli
leave
sbb
jg
popf
sub
or
and
pop
sbb
or
sbb
cwtl
push
mov
sahf
test
mov
xlat
cmpsl
push
inc
xchg
inc
cltd
clc
add
sub
sahf
push
push
dec
test
push
pushf
sti
aaa
xor
inc
jle
lea
or
jge
jne
shr
loop
add
sbb
push
push
into
adc
adc
jns
pop
jo
and
int3
pusha
ret
rcrl
es
pop
mov
icebp
and
or
out
jmp
xchg
sub
loope
test
movb
and
mov
sub
jl
cmp
scas
inc
jns
or
arpl
and
xchg
jbe
sbb
lods
add
pop
loopne
adc
mul
mov
stos
mov
push
xchg
mov
jmp
les
mov
ret
loope
jmp
inc
ret
fisubrs
jno
stc
sahf
lcall
ret
fcmovne
mov
in
cmp
mov
adc
movsb
aam
into
push
xlat
movsl
sti
and
push
negl
fbstp
mov
mov
ret
inc
xorb
inc
jmp
dec
hlt
xchg
pop
shll
repz
icebp
push
dec
dec
imul
jne
adc
and
add
aam
outsl
ljmp
xorb
xchg
dec
std
adc
or
in
inc
mov
ds
ret
or
push
inc
pusha
roll
in
or
mov
jecxz
ficoms
mov
fcompl
jecxz
and
mov
cmpsb
test
mov
jmp
test
fsubrl
sarb
ja
add
push
insb
mov
xchg
jp
jo
jge
mov
sbb
and
test
shl
andl
push
mov
stos
add
popa
pop
in
pop
lock
lock
movd
into
xchg
adc
cmp
jecxz
pop
xchg
add
sub
loop
push
xlat
sbb
mov
call
push
sub
outsl
xchg
cmpl
rcll
xor
jo
xor
arpl
sbb
push
cmp
xlat
stos
int3
fldl
scas
aam
pop
mov
mov
mov
std
ss
sub
rcll
adc
mov
jmp
addr16
psllq
ljmp
bnd
mov
scas
xchg
mov
loop
adc
and
mov
mov
sub
xor
mov
push
fldpi
pop
mov
bound
mov
ficompl
js
dec
xchg
stc
ss
and
mov
cmc
repnz
mov
rolb
lds
rcrl
push
pop
icebp
mov
pop
sbb
mov
jno
pop
sub
out
ficomps
int
cmp
icebp
jp
or
push
rcl
loop
cld
mov
jmp
int
in
xor
mov
sub
add
dec
loop
jno
inc
daa
std
adc
pop
outsb
insl
div
xor
add
nop
xchg
xchg
jle
push
test
out
in
mov
or
mov
push
ffreep
outsb
gs
add
sub
test
dec
pop
sub
add
aaa
cmp
adc
and
jnp
cmp
dec
sbb
mov
insl
test
outsl
test
fists
test
into
ret
aaa
int
xlat
insl
ds
idiv
and
cmp
sbb
rol
adc
jae
mov
cmpsl
inc
push
cmp
gs
loope
imul
mov
fimuls
data16
lcall
mov
dec
shl
add
sbb
pop
lods
div
sbb
mov
leave
ss
mov
sarb
outsl
fs
test
lock
nop
mov
lahf
or
xchg
popa
bound
inc
enter
mov
int3
cmpsl
out
fdivrs
test
xor
xchg
mov
xor
insb
arpl
push
popa
or
clc
push
jge
cwtl
pop
imul
test
std
add
sbb
xchg
sarb
xchg
xchg
push
or
adc
movsb
aad
sbb
sub
js
loop
in
pop
fistl
pusha
cmc
sbb
or
repnz
xchg
ret
dec
lcall
mov
shlb
mov
adc
jmp
testl
adc
fistpl
sub
sub
mov
or
fwait
les
lret
int
sub
pushf
addr16
movsb
loopne
lret
xchg
cli
mov
sbb
cmc
sub
sbb
mov
rcrl
cmpsb
bound
test
stos
inc
mov
insb
pop
into
shlb
cs
cltd
xor
jl
mov
ror
fucom
sbb
cld
pushf
mov
loopne
subb
iret
push
pop
sbb
shlb
mov
repz
in
shrb
outsb
push
loopne
mov
xor
mov
inc
imul
push
inc
in
test
sub
pop
mov
dec
sub
add
push
ret
or
sti
ret
xor
adc
xor
pop
sub
in
cmp
cmc
clc
push
mov
ds
dec
scas
popa
mov
mov
stos
add
fimuls
fwait
sbb
ret
dec
shrl
mov
jae
xchg
or
add
jae
sbb
pop
fwait
mov
jecxz
pop
xlat
mov
lock
sbb
jns
insb
cmpsb
xchg
ret
popf
xor
inc
sarl
and
mov
mov
shl
sub
add
fldz
pop
ljmp
sub
cltd
std
and
fstpl
daa
push
lods
mov
dec
fwait
sti
xchg
enter
popa
jge
pushw
mov
push
mov
lcall
mov
jbe
inc
pop
and
and
mov
cmc
push
push
pop
inc
cmp
bound
lods
or
lret
jae
sahf
into
lods
cmpsl
subb
add
lcall
mov
xchg
jl
sarb
shrb
and
mov
ljmp
inc
movsl
int3
mov
loope
jo
xor
xchg
movsb
js
div
xorl
ljmp
sbb
and
je
cs
sbb
dec
popa
mov
rolb
loopne
inc
lods
mov
cmp
dec
stc
jo
pop
mov
add
xor
pop
mov
pop
test
test
push
push
and
pop
lock
mov
cli
mov
adc
xchg
xor
imul
stos
mov
arpl
mov
test
outsl
jecxz
mov
testb
test
fs
fbld
dec
popf
sbb
push
or
jbe
std
shr
and
jg
sbb
add
aad
adc
cmp
and
add
test
cmc
mov
cwtl
sub
jmp
mov
jb
stos
inc
insb
xchg
xchg
ret
pop
mov
cmp
mov
shrl
loop
lret
jg
sub
bound
push
add
xor
push
xor
add
fnstcw
test
adc
pop
neg
sbb
loop
mull
fsubrl
add
cmp
mov
add
push
dec
jno
dec
cmp
into
xor
add
sbb
ljmp
fnstsw
adc
sub
jle
mov
jns
mov
lods
movsb
mov
jb
push
sbb
add
insb
arpl
int
jmpw
inc
mov
iret
loop
out
imul
into
fbstp
iret
push
mul
dec
ja
sbb
faddl
ret
jle
jo
dec
movb
jg
das
or
mov
sarl
dec
fmull
je
sub
cmc
addr16
lods
arpl
pop
test
jb
fildl
repz
shr
int
shrl
and
orb
fildll
xchg
cmpb
mov
xor
sarl
repz
adc
icebp
test
mov
adc
or
add
arpl
in
stc
mov
push
arpl
push
jl
in
test
mov
nop
xchg
movsl
and
loope
pop
insb
dec
pop
pop
cmp
xor
repz
add
or
in
mov
pop
adc
mov
xor
int
fstpt
test
popa
shl
mov
cmovns
movsb
sub
lods
jg
or
std
decl
push
cmp
pop
mov
cmc
cmp
xchg
lods
insl
jecxz
lods
movsb
enter
inc
inc
ret
mov
push
sub
xor
jno
adc
jle
jb
imul
push
test
jmp
outsb
sub
mov
mov
add
pushf
xor
nop
lahf
jecxz
shlb
push
or
xor
sub
out
add
scas
jecxz
cmpsl
icebp
sbb
icebp
enter
call
mov
pop
adc
loopne,pn
in
xchg
pop
test
ljmp
jb
xor
adc
mov
lock
int
mov
fisubl
sbb
jge
jno
in
arpl
xchg
call
push
je
lods
ret
pop
sub
pop
outsl
sbb
repz
hlt
into
mov
pop
jmp
adc
in
outsb
and
jno
jg
fstp
pop
clc
in
xchg
mov
push
jbe
dec
pop
mov
cmp
outsl
das
insb
push
push
lcall
push
fwait
pusha
in
mov
cmpsl
push
xor
or
popf
adc
ljmp
and
sub
fwait
sbb
lea
gs
push
adc
jmp
repz
jns
cltd
sbb
push
jg
subl
arpl
cmp
dec
or
imul
adc
xchg
lcall
jg
mov
popa
jecxz
cmp
call
or
mov
mov
stos
std
jno
push
fidivrl
cmp
pushf
enter
adc
test
in
into
jo
xor
push
iret
arpl
out
lret
cmpsl
sarb
orl
sub
sub
sub
roll
and
add
mov
dec
pop
add
jne
cmc
aas
andb
or
dec
jne
fwait
scas
cmpsl
jnp
lock
stos
mov
xchg
pusha
out
daa
jbe
push
ljmp
cmp
push
xchg
mov
mov
sbb
jo
loopne
push
loopne
push
dec
xchg
cmp
repnz
add
pop
mov
jle
mov
sbb
jbe
addr16
cld
mov
xchg
push
jae
enter
fcomp
xchg
inc
mov
movb
xchg
xor
test
and
push
rcrl
jg
xchg
test
sub
cmp
aam
out
out
shrb
or
shl
xchg
mov
adc
jg
sbb
dec
or
lds
movsb
mov
inc
gs
in
jecxz
mov
xor
cmp
lock
cli
leavew
std
jbe
loope
jae
nop
inc
lahf
test
or
sub
mov
repnz
sahf
xchg
lcall
loopne
or
in
xor
sahf
push
aad
aaa
xchg
and
lea
imul
mov
in
mov
cwtl
ja
std
fs
insl
sbb
xchg
pop
ficomps
push
pop
add
outsl
push
sbb
push
mov
and
push
subb
arpl
in
jb
xchg
les
mov
out
xor
daa
in
cmpsb
pop
pop
cld
pop
outsb
push
shrb
or
add
xchg
push
int3
add
inc
push
cmp
mov
or
or
fdivrl
cli
inc
cmpsl
jecxz
test
add
adc
push
pushf
notb
gs
sbb
aad
add
fwait
jge
adc
push
stos
inc
stos
es
cmpsb
addr16
or
jae
addr16
cmc
push
dec
stc
xor
bound
mov
add
pop
out
sbb
jb
cmp
outsb
cmp
adc
inc
xchg
dec
lahf
mov
imul
repnz
push
lahf
loope
shrl
xchg
or
inc
int
or
push
xchg
lahf
sbb
mov
rorl
mov
jns
iret
jmp
mov
lods
call
sbb
sub
mov
mov
repz
lret
pop
lods
dec
add
add
dec
insl
push
test
mov
dec
addb
dec
test
push
push
scas
pusha
jge
adc
sar
pusha
out
popa
js
in
ljmp
xchg
mov
std
loopne
shr
xor
arpl
cmpb
clc
fmuls
test
pop
cmp
sub
dec
fdivl
ljmp
xchg
pushl
das
sti
mov
dec
inc
mov
pushf
sbb
pop
insl
iret
and
bound
add
cmp
sbb
fstpl
xchg
out
pushf
mov
jno
jae
mov
out
mulb
adc
and
insb
sub
cmpsl
fwait
ret
icebp
xchg
or
jnp
ficompl
pusha
adc
adc
mov
in
xchg
push
cmp
jne
movb
jns
insb
sarl
inc
jbe
and
rcrb
fistpl
sub
scas
push
icebp
int
xchg
loopne
adc
mov
outsl
clc
loop
lock
inc
fstp
cmpsl
adc
outsb
adc
xchg
mov
fiaddl
repz
ja
es
loop
fistpll
or
adcl
cmpsb
adc
ret
mov
pop
lahf
push
subb
aas
pop
mov
notl
shr
in
ss
loopne
dec
sub
jecxz
mov
push
mov
enter
cmc
sti
cmp
stos
test
xchg
je
loop
and
int
xchg
xchg
repz
pusha
or
cmp
xor
cmp
rcr
movsl
test
mov
les
sbb
call
jnp
into
xchg
lret
xchg
sbb
jbe
test
out
repz
iret
cmp
xor
lock
mov
sti
mov
pop
cwtl
push
icebp
enter
xchg
cmp
add
xor
pop
mov
push
movsb
psubd
cmp
ret
xchg
add
repz
inc
arpl
subb
and
add
loopne
dec
outsb
adc
jne
mov
rorb
test
push
scas
mov
and
popf
pop
jecxz
ret
push
cltd
adc
xlat
pop
dec
mov
sbb
push
fcom
mov
mov
dec
pop
push
push
or
sbb
and
sbb
idivl
ret
out
adc
dec
shrb
push
mov
dec
jecxz
adc
loope
pop
pop
nop
pop
xor
sub
push
repnz
insl
dec
fneni(8087
add
pushf
jecxz
jnp
jnp
sahf
push
sbb
mov
cmpsb
inc
cmp
mov
push
je
dec
aad
mov
inc
outsb
pop
lret
and
nop
pusha
inc
aam
cld
jmp
and
bound
xchg
pop
or
cs
xor
xchg
xchg
mov
xor
testb
mov
stos
sbb
ret
add
pop
jbe
pop
adc
popa
fiaddl
add
das
outsl
dec
popa
fwait
push
jg
jbe
icebp
out
cmp
popa
cld
jl
sub
idivb
das
jne
adc
dec
push
mov
std
and
push
cmp
push
sub
adc
lcall
mov
in
ja
xchg
lret
pop
mov
ss
dec
test
aaa
sbb
inc
xor
jmp
gs
mov
and
insb
inc
shl
insl
pop
inc
jnp
mov
outsl
ja
pop
push
adc
pop
cmp
jae
jmp
lods
mov
dec
insl
jbe
add
idivb
mov
sbb
fwait
std
or
or
movsl
decb
les
stos
ret
push
mov
inc
test
jb
out
insl
aad
mov
xor
or
std
xchg
dec
filds
adc
daa
lods
xor
addb
cmpsl
mov
mov
and
fwait
divl
sub
movsl
cli
or
dec
mov
dec
mov
js
fldenv
in
lcall
pop
sbb
mov
jg
dec
jp
add
and
xchg
fldlg2
jnp
mov
lods
xor
outsl
jp
pushf
mov
jns
add
jmp
pop
or
out
push
mov
sub
push
repnz
add
dec
sbb
inc
test
out
xchg
pop
sub
cmp
adc
push
cmp
ljmp
insb
lcall
fisubs
cmc
xchg
and
ss
mov
enter
xchg
xchg
push
fcmove
adc
fcmovne
xchg
lret
adc
push
popf
orl
xchg
and
push
popa
sbb
aaa
shl
ja
and
in
sar
adc
mov
sub
pop
dec
je
rcr
jbe
scas
jne
push
xlat
inc
lods
fcmovne
xor
enter
dec
pop
mov
cmpsb
out
inc
into
enter
pushf
push
or
add
pop
inc
or
out
sub
rcll
fcmovb
fs
or
mov
adc
or
in
or
adc
inc
scas
or
push
push
mov
cmp
insl
mov
xor
mov
sub
call
rcrb
iret
ss
sti
inc
mov
loop
mov
test
hlt
ja
mov
sbb
ret
into
and
rcl
xlat
hlt
mov
repz
or
pop
dec
xchg
cs
lea
movsl
pop
scas
mov
dec
push
jmp
xchg
jnp
sub
add
lods
and
pop
lea
cwtl
ljmp
test
shrl
mov
cmpsl
or
outsl
lret
push
iret
dec
push
daa
cwtl
or
push
int3
faddl
push
or
cwtl
iret
sbb
jbe
pop
xchg
pop
mov
mov
and
inc
mov
jnp
adc
out
mov
aas
mov
orb
mov
push
inc
jmp
icebp
ret
cld
shll
sbb
andl
fdivrl
push
xor
in
jmp
fbld
sti
fwait
les
mov
pop
in
or
movl
ss
lods
dec
int3
or
xor
jbe
out
ret
sahf
fwait
mov
jmp
es
adc
ss
pop
out
dec
adc
jnp
xlat
das
pop
outsb
repz
or
mov
int3
mov
cmpsl
in
and
dec
sahf
cmp
cwtl
push
lods
out
insb
lcall
loop
add
sarb
lods
ja
dec
outsl
imulb
xchg
pop
pop
sysret
aad
jmp
inc
fcoms
stos
or
adcl
fs
popa
mov
push
orb
dec
xchg
lock
mov
inc
jecxz
pop
jno
add
or
pop
jb
adc
mov
fcomps
loopne
testl
popa
xchg
scas
fstpt
ficompl
mov
cmpsb
push
cmp
jp
pop
jl
dec
lret
cmp
sub
add
jbe
and
xchg
fisttps
sbb
push
aas
inc
mov
xchg
scas
sub
in
cltd
cs
jb
pop
mov
mov
mov
push
mov
xor
das
xor
rcrb
and
mov
and
and
clc
jmp
rol
test
push
filds
add
mov
adc
jmpw
adc
sti
cmp
xlat
js
test
cmpsb
loope
iret
in
popf
and
pop
xor
pushf
mov
data16
sub
clc
repz
mov
adc
mov
or
test
jb
loop
movsb
sub
push
xchg
gs
inc
loopne
ja
imul
bound
push
pop
fiadds
sbbl
pop
loopne
inc
std
roll
fisttpll
loopne
stc
add
cltd
rorl
movsl
std
ffree
aad
lea
test
and
jg
ret
jbe
inc
rcrl
pop
adc
out
xor
xor
addr16
adcl
pop
in
mov
mov
scas
xchg
mov
mov
and
stos
test
lods
sub
into
pop
enter
aaa
dec
sub
imul
outsl
mov
dec
aaa
xlat
or
inc
ret
cmc
cwtl
inc
jl
inc
mov
in
fcmove
add
out
or
add
in
mov
out
pminsw
shlb
jl
hlt
dec
xor
pop
fisubrl
mov
movsl
jns
jmp
jl
dec
pop
sub
xchg
sub
add
aas
scas
pushf
fldenv
dec
dec
jbe
test
aaa
inc
xor
add
pop
push
push
sbb
mov
sarb
adc
adc
lods
rorb
cmpsb
pop
cmpsb
stos
or
mov
int
ja
idivb
adc
in
sahf
jnp
cli
icebp
cmpsl
test
push
sub
arpl
sbb
lret
pop
and
in
hlt
jg
fldl
or
lret
daa
fprem1
test
dec
mov
int3
cs
shl
ret
add
pop
in
incb
popf
out
hlt
and
hlt
inc
jo
push
pop
out
pushw
mov
push
pop
adc
mov
hlt
adc
pop
mov
push
call
outsb
sti
mov
int3
dec
xlat
dec
bnd
inc
into
sub
rcr
mov
icebp
push
dec
add
cmp
in
int
into
in
cmp
cmpsl
lret
push
and
mov
imul
cmpsb
adc
fiaddl
outsb
pop
outsb
mov
xor
mov
daa
jae
cld
lcall
aam
test
fistl
fmul
out
inc
loope
jo
imul
mov
sbb
sbb
in
es
pop
dec
je
push
mov
lods
es
mov
mov
fwait
popa
pop
ljmp
js
xor
data16
shrl
and
cld
insl
andb
rcr
mov
loope
lods
cli
xchg
aam
xchg
mov
jecxz
into
jecxz
aas
jecxz
inc
mov
imul
push
xorl
sbb
mov
jnp
arpl
arpl
data16
push
push
sbb
aad
push
and
movsl
pop
inc
xchg
lret
ret
lret
push
fs
dec
cmp
aaa
jne
cmpps
ljmp
bound
jmp
aad
and
lds
jmp
dec
cld
aas
mov
sti
dec
repz
fcom
jne
insb
fldt
scas
das
bound
aam
or
arpl
jecxz
push
dec
ljmp
mov
ret
cmp
inc
inc
je
mov
mov
jb
movsb
addb
bound
pop
cmc
test
xchg
icebp
ljmp
ret
mov
pusha
test
cltd
scas
fs
popl
and
shl
xor
or
sbb
push
push
push
jmp
or
and
pop
or
shll
icebp
mov
sub
dec
lds
into
pop
sub
ret
adc
in
mov
gs
iret
jnp
pop
or
dec
jmp
ss
stos
jae
int
sahf
jg
sub
pop
pop
mov
fmull
or
push
out
mov
xor
push
xor
ficoms
push
xor
xchg
adc
dec
adc
popf
jmp
jmp
cmp
inc
jmp
cmp
lret
in
sbb
inc
push
inc
jl
jnp
mov
pop
data16
push
mov
es
inc
rcll
lock
jge
mov
adc
jb
jl
xchg
jae
sub
jo
push
cltd
lea
aaa
jl
push
inc
jns
popf
int
sub
push
cs
xor
movsb
test
aad
in
mov
fwait
push
iret
clc
cmpl
lret
sbb
xor
jns
mov
arpl
xlat
int3
sub
jno
gs
stc
daa
or
addr16
sbb
fmull
sbb
daa
comiss
aad
mov
push
push
cmpsl
jg
xchg
insb
push
xlat
pusha
push
dec
aas
lret
imul
push
mov
mov
xchg
test
xchg
mov
jae
xchg
xchg
mov
xchg
mov
pop
aad
push
dec
mov
add
cmpsb
ret
jne
paddusw
js
movsl
jo
push
lea
mov
or
mov
jge
insb
ret
jbe
scas
insl
add
mov
jae
rcrl
out
xchg
sbb
xchg
mov
mov
lock
mov
sub
mov
cltd
lock
mov
cmpsl
and
xchg
repz
lahf
adc
sbb
xchg
mov
xlat
xchg
iret
cmpb
cs
sarb
pushf
adc
ds
xchg
push
jo
sbb
jp
ficoml
arpl
fadd
jge
and
sarb
push
adc
dec
inc
sub
jp
or
pop
xor
adc
aad
fstpl
ja
std
insb
jo
inc
outsl
sbb
adc
jae
cmc
mov
ljmp
mov
xor
dec
shl
lahf
mov
ficompl
dec
jmp
inc
lods
push
aaa
inc
aas
insl
test
or
cld
xchg
fwait
push
outsb
mov
insb
push
xchg
imul
loope
sub
mov
sub
mov
mov
jecxz
pop
xchg
mov
and
nop
insb
sbb
or
iret
mov
push
and
push
mov
mov
addr16
or
add
movsl
add
dec
mov
data16
insb
push
adc
mov
fimull
inc
xchg
aas
push
scas
jl
ret
cmpsb
pop
fldenv
jg
adc
out
cmpsb
mov
jl
ret
dec
in
cmp
les
stos
outsl
enter
adcl
test
aam
sbb
jecxz
jns
js
add
mov
inc
rorb
sldt
scas
cld
xchg
daa
mov
xor
bswap
popa
jne
xchg
dec
cmp
mull
sub
call
sbb
mov
push
xor
push
out
leave
sbb
xlat
mov
sti
stos
mov
push
mov
xor
pop
gs
mov
cmp
mov
cmpsb
addr16
dec
test
mov
inc
pop
mov
add
inc
sti
jle
iret
repz
lds
mov
sahf
jne
jb
xor
push
push
mov
and
adc
faddl
pop
xor
sbb
jle
ret
mov
ja
dec
nop
dec
fs
sub
push
nop
movsb
sbb
fsubs
mov
xor
sarb
dec
mov
fsubs
in
and
outsb
adc
testl
imul
subb
mov
push
aas
pop
je
testb
lods
xor
mov
shlb
rol
lock
rorl
and
jg
sub
ja
lds
leave
mov
add
xor
push
sub
addr16
cmpsl
std
sbb
pop
cmp
or
in
jbe
sub
push
lret
inc
adc
adc
je
addr16
add
int3
mov
or
lods
outsb
adc
fmul
and
movsb
aas
or
cmp
push
inc
lods
cmpsb
clc
dec
push
mov
popa
xlat
push
test
adc
std
inc
mov
mov
lock
jge
imul
and
popf
add
imul
sbbb
jae
fldcw
mov
adc
mov
in
addb
orb
push
jo
and
and
shll
inc
lahf
int
push
sbb
sub
dec
clc
jp
repnz
lea
mov
ret
in
pop
xor
push
push
cmpsl
or
insl
xlat
call
jp
stc
fdivs
into
push
pusha
fisttpll
push
push
aam
xor
add
cmp
jl
dec
inc
dec
mov
insl
xchg
and
repnz
add
jo
jbe
aas
lods
fdivrl
sbb
addl
lock
repz
jno
fadds
js
clc
dec
roll
rcrl
mov
inc
call
outsl
lock
adc
in
pop
xchg
addr16
push
xor
add
insb
xor
daa
fbld
lds
pop
fsts
and
cmpsl
mov
or
push
lcall
push
mov
mov
out
cs
loop
xlat
pop
mov
popf
mov
les
jo
push
jnp
pop
arpl
imul
fistl
sub
add
add
pop
test
fs
jmp
aas
mov
pop
sub
movsl
loop
mov
int
jl
imul
fxsave
gs
xchg
add
int
mov
cmp
jno
jno
insl
mov
push
arpl
mov
adc
pop
fsubrs
mov
cmp
fsubrl
xchg
adc
call
in
mov
adc
pop
cltd
outsl
lods
or
in
js
je
dec
dec
push
fisttpll
jl
mov
outsl
lds
out
out
push
adc
ret
shrb
stos
sub
mov
sahf
aas
or
fldcw
adc
mov
mov
lcall
or
add
cld
test
xchg
and
push
test
jg
in
add
mov
fildl
popf
mov
xchg
or
xor
ds
xchg
xor
jae
rcll
cltd
jns
bound
pop
in
loope
dec
lods
pop
pop
sbb
mov
mov
insb
fists
enter
dec
sbb
mov
sub
ret
xchg
mov
pop
inc
jecxz
test
repz
inc
insb
outsl
bound
push
outsb
insb
outsl
arpl
add
stc
stc
pusha
mov
push
xor
mov
stc
jmp
pushf
movl
pushf
movl
pusha
push
lea
jmp
sub
mov
pop
out
sbb
in
or
add
sub
lds
and
aas
loopne
jo
mov
imul
push
mov
orb
mov
push
js
lret
mov
adc
lods
and
cwtl
sub
push
and
mov
pusha
lea
jb
js
pusha
cmp
jmp
rorl
ds
xor
dec
std
jae
sysret
sub
subl
imul
mov
mov
roll
or
je
or
cld
pusha
inc
out
mov
call
push
xchg
jmp
push
popa
popf
inc
scas
xlat
mov
inc
ljmp
inc
mov
pusha
mov
enter
add
dec
lcall
pop
pushf
mov
or
mov
leave
sbb
push
or
xchg
enter
pushf
cld
xchg
clc
mov
es
cmp
jl
lea
movb
mov
pushf
pushf
lea
call
call
add
inc
gs
arpl
insb
insb
dec
outsb
outsw
add
inc
and
lea
jl
push
lea
ja
bt
sar
shl
add
shl
mov
cmp
bt
pusha
cmp
push
pushf
lea
jb
bt
call
add
push
popa
jb
popa
outsb
je
outsb
imul
movl
and
mov
sub
push
pushf
lea
jmp
add
dec
jae
imul
int
push
jmp
inc
gs
imul
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
add
push
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
push
movl
jmp
push
lock
std
std
test
xchg
popa
ss
ret
jbe
js
vmovdqu
mov
pop
scas
ss
ret
lea
sub
inc
mov
xor
aam
pop
iret
add
jmp
daa
adc
test
icebp
mov
aam
es
in
xchg
push
push
movsl
and
jo
mov
repz
enter
dec
mov
push
lea
jb
cmc
shrd
sub
daa
mov
test
sub
setno
mov
jmp
add
push
outsb
push
imul
outsl
outsl
imul
add
inc
jb
popa
je
push
outsb
add
add
jae
jb
dec
outsb
jne
je
insl
inc
add
stos
repz
mov
clc
cmpb
pusha
call
call
push
mov
jmp
rcll
push
mov
sti
negl
or
dec
testl
xchg
sarb
cwtl
adc
sbb
or
aaa
repz
jge
and
mov
push
outsb
imul
imul
or
in
adc
decl
xchg
jecxz
or
bsf
sub
shl
mov
adc
mov
pushf
test
add
xor
shl
shr
cmp
mov
sar
bswap
test
sbb
add
movsbw
not
lea
mov
call
pushf
pushf
lea
ja
bt
imul
pushf
add
pusha
pushf
lea
jmp
add
inc
gs
imul
js
push
add
add
je
arpl
gs
imul
add
inc
insb
testb
inc
and
or
scas
fstpl
jmp
lea
not
lea
jmp
add
movw
lea
jmp
add
inc
gs
je
imul
inc
js
add
add
jo
dec
insl
popa
addr16
lret
shl
ror
mov
stc
shr
cmc
cmp
mov
pushf
push
movb
lea
je
test
jmp
add
push
dec
inc
gs
popa
je
inc
jb
insl
dec
inc
dec
imul
push
add
inc
and
ficompl
ja
push
call
pusha
lea
jne
jg
pusha
movb
push
movsbw
lea
cwtl
mov
lahf
jmp
add
inc
gs
gs
inc
imul
movl
movb
pushl
jmp
test
sub
jmp
add
inc
jb
ja
outsl
arpl
push
arpl
add
jbe
inc
jb
je
arpl
push
arpl
outsb
arpl
pop
add
add
add
add
add
add
add
pop
add
pop
add
pop
add
add
add
add
pop
add
or
or
sbb
add
and
mov
lea
cmp
sti
je
int3
and
out
push
push
leave
lods
icebp
inc
adc
mov
ds
loopne
pop
cmp
push
arpl
cld
in
hlt
insb
cmpl
rolb
out
cmp
outsl
stc
daa
cmpsb
std
cld
rol
imul
and
lds
ds
xchg
add
addr16
and
iret
cmpsl
and
das
jb
rcrb
xchg
add
mov
pop
sbb
mov
stos
in
adcb
pushf
mov
sub
pushf
sbb
cwtl
aad
add
das
jns
ret
lret
xor
lahf
popf
jbe
jne,pn
cmpsl
dec
dec
push
push
ljmp
mov
in
lcall
in
in
and
adc
jb
add
jl
addr16
sbb
shr
cmp
push
cmp
push
cmp
inc
out
push
out
out
mov
adc
mov
call
fdivrl
inc
mov
sub
cmpsb
pop
adc
add
mov
pusha
mov
pop
cwtl
ljmp
out
and
frstor
inc
ret
lea
jp
lea
push
jl
xor
mov
pushf
dec
dec
icebp
mov
sti
lret
xor
test
sbb
adc
jnp
inc
dec
mov
cmp
push
mov
push
mov
xor
out
jne
push
inc
inc
andl
cwtl
popa
notb
cwtl
jp
xchg
pusha
fsubrs
sub
rcrb
pop
imul
and
pusha
sub
dec
shl
pop
jne
cmp
adc
lods
jnp
pop
lock
mov
enter
and
mov
in
imul
inc
pop
mov
imul
cwtl
mov
push
jl
dec
in
cmc
cmpsb
int
mov
or
push
push
shl
mov
or
aaa
fwait
xchg
sbbb
mov
dec
movb
cwtl
lods
outsb
cmp
dec
jp
addb
in
cs
jbe
js
notl
jmp
jl
dec
xchg
mov
xchg
mov
movsl
addl
imul
dec
mov
xor
jmp
push
bound
ret
push
push
lds
jg
js
pop
pop
xchg
adc
adc
mov
call
scas
fldz
rcr
stc
jge
xor
ret
sub
sti
dec
mov
xchg
ja
sti
jnp
addr16
std
enter
adc
sbb
lahf
popa
gs
fadds
and
xorl
jl
in
sbb
cmp
repz
scas
aad
xor
and
xor
inc
pop
aad
daa
and
jecxz
or
ret
lcall
stos
cmp
cmp
scas
fadds
mov
out
or
test
fwait
xchg
lahf
fisttpl
stos
push
and
or
push
repnz
movsl
dec
push
jp
addb
out
sub
xchg
dec
push
pusha
xor
cmpsl
mov
lock
in
clc
add
sbb
mov
iret
xor
test
mov
cmpsb
sarb
push
jnp
add
sbb
outsl
mov
pushf
icebp
mov
push
pushf
mov
push
addr16
sub
or
stos
rolb
cli
sbb
cmp
xor
push
int3
sub
pushf
shlb
pop
sahf
loopne
mov
lock
notb
clc
nop
push
movsb
sbb
mov
push
xchg
xchg
dec
imul
and
lcall
pop
cmc
dec
cmpsb
mov
xor
push
cmp
les
lret
adc
sub
fdivl
rol
push
enter
sbb
mov
mov
sub
lock
pop
inc
sbb
jno
ja
mov
xlat
cld
iret
xchg
mov
xchg
fidivs
mov
hlt
cmpb
mov
push
inc
pop
mov
in
cmp
call
add
lret
sub
sub
mov
sahf
dec
rorb
ljmp
test
andl
shlb
push
in
in
sub
adc
mov
add
mov
or
ret
dec
pushf
imul
addr16
out
repnz
xchg
stc
push
pusha
sbb
mov
inc
pushf
loop
xchg
cmp
add
cmp
mov
and
dec
out
ret
dec
repz
in
pop
js
les
xorb
adc
and
jno
je
dec
cmpsb
movsl
pushf
adc
xchg
pop
lods
fwait
mov
daa
lret
pop
adc
pop
sbb
jns
dec
mov
cld
jbe
repz
cltd
xor
ja
loop
imul
mov
stos
or
sti
push
mov
adc
shll
inc
xor
cmpsl
pop
cmp
mov
fcmovu
inc
ret
rorl
fisubl
xchg
int
rcrl
add
lea
imul
out
cmp
out
jno
stc
bound
adc
ret
shlb
fidivs
mov
bndldx
std
test
fstpl
in
ljmp
outsb
test
add
rclb
adc
test
shll
mov
shrl
inc
mov
jbe
lret
mov
adc
or
sqrtps
pop
pop
push
lds
inc
stc
in
mov
inc
inc
in
out
flds
aad
repnz
jmp
mov
xchg
ds
adc
in
jns
push
sub
pop
dec
xchg
repnz
or
aam
push
and
sarl
in
cs
pop
pusha
mov
pop
push
in
push
inc
sub
mov
shlb
lret
pushf
jecxz
jne
pop
xchg
inc
jg
pushf
inc
lcall
push
xchg
push
dec
cmpsl
enter
rorb
mov
mull
fst
notb
call
dec
sti
jne
insb
rolb
adc
pushf
mov
stc
and
inc
adc
sbb
push
mov
lret
stc
add
xchg
aam
push
pushf
xchg
dec
and
or
mov
outsl
add
ret
mov
lret
mov
lds
inc
outsl
das
mov
arpl
je
push
jmp
sbb
rorb
pop
sti
cmp
lods
into
enter
dec
xchg
mov
out
dec
dec
and
xor
jo
insl
mov
jae
sbb
stos
push
dec
push
shlb
sbb
fsubrs
sbb
lea
fcmovne
clc
cmpsb
lcall
cmp
aam
ret
pop
mov
aas
loopne
sbb
aas
push
pop
imul
and
jns
mov
clc
loope
in
and
or
xor
sbb
testl
xchg
adc
inc
mov
sbbl
xchg
and
lret
mov
mov
dec
imul
pop
flds
cs
sub
mov
pop
and
sbb
stos
ja
incb
xor
mov
jle
mov
shll
lret
add
cltd
cltd
jge
ja
mov
mov
pop
daa
inc
mov
addr16
daa
pop
lret
rcrb
out
jo,pt
jle
scas
fadds
jecxz
inc
fisubs
frstor
pop
inc
lods
cmc
sahf
pop
pop
fwait
pop
xor
sti
shlb
mov
pop
nop
out
and
sub
stc
int
stos
sub
add
sti
sub
jmp
sub
stos
dec
add
xchg
insb
push
aas
dec
push
cmp
xor
mov
cmp
adc
ficoml
cmpsb
imul
push
dec
dec
dec
out
xchg
inc
jge
lods
add
jbe
pop
xchg
mov
dec
jo
pop
jg
xorl
or
call
data16
xor
fisttps
pop
mov
jecxz
pusha
fiaddl
mov
loopne
fsubrp
test
dec
jae
fisttpl
jecxz
mov
push
aas
or
das
lret
push
inc
out
and
mov
jbe
dec
sub
or
int3
jnp
out
inc
aad
jle
and
jl
loop
fwait
sarl
lea
shll
mov
scas
int
xorb
fcompl
scas
imul
bound
out
mov
and
repz
aad
inc
dec
repz
hlt
das
int3
push
out
fucom
mov
dec
les
mov
xchg
lret
xchg
jno
cmp
mov
repnz
cmovg
out
subb
test
sub
pop
and
iret
cmp
lea
incb
shlb
jo
mov
div
sub
mov
sub
jbe
inc
mov
ficompl
mov
in
push
dec
fisubrs
add
test
fadds
ret
push
cmp
mov
scas
cmpsl
in
jp
lds
test
xor
out
pop
fldl
dec
add
in
aam
mov
imul
cwtl
push
push
std
sbb
or
pop
testb
out
call
loopne
fdivs
shrb
ret
push
xchg
xor
mov
mov
loope
fisttpl
repnz
or
push
jnp
push
jns
out
dec
inc
xor
fnstcw
adc
pop
pop
test
pop
or
mov
mov
mov
mov
int
lods
mov
ja
es
pushf
mov
or
sub
sub
lods
and
pop
xchg
in
push
mov
test
jl
push
push
aas
inc
aad
lret
lcall
jnp
xor
jae
aad
jno
jge
cmpsb
jmp
jg
dec
or
dec
pusha
pop
mov
aad
xchg
adc
cmp
pop
sbb
ljmp
stc
mov
jno
ljmp
mov
and
mov
xchg
cmpsl
das
mov
add
je
jmp
and
cmp
ret
call
jo
xchg
sub
mov
jmp
cmp
inc
xor
cmp
or
mov
mov
or
sub
scas
fbld
jae
dec
imul
add
fisubs
loope
sub
pop
cltd
adc
inc
nop
shll
jb
sbb
pop
mov
repz
sub
push
stos
mov
mov
mov
imul
push
adc
or
adc
subl
jno
xchg
idivb
cmpsl
push
cmp
jge
adc
xchg
or
orb
cmp
dec
push
rcrb
sbbb
aas
dec
jecxz
push
shr
jecxz
frstor
lea
insl
lods
jmp
adc
and
clc
mov
inc
mov
xchg
xor
mov
lret
jno
and
mov
jno
add
cld
lgs
add
stc
cmc
sub
cmp
jmp
not
mov
cwtl
cwtl
push
lea
pushf
jmp
and
cld
and
mov
call
sbb
pop
jo
leave
dec
rolb
shl
imul
inc
test
jns
dec
adc
mov
in
dec
jb
inc
scas
jne
aad
mov
hlt
xlat
ret
cmp
cmpsl
pop
aad
shrb
push
lahf
jne
lea
inc
jae
jo
imull
push
xchg
push
cltd
ds
mov
and
xor
sbb
mov
push
aaa
or
jle
ja
pushf
xor
mov
push
sbb
sbb
xorl
dec
out
movd
repnz
inc
test
fsubr
mov
pop
cld
xchg
imul
jmp
ds
mov
pushl
fisubrl
ja
fwait
jno
adc
test
rclb
les
out
mov
sub
into
sbb
sbb
xor
aaa
or
sub
push
scas
bound
out
jge
mov
fs
outsb
dec
aas
ds
cltd
xchg
cmpl
dec
cmc
into
sbb
sahf
add
aaa
or
sub
jle
add
sub
sbb
sbb
popa
pop
xchg
push
xor
daa
push
ds
dec
popf
cmp
mov
imul
clc
fstpt
mov
jge
pop
sbb
cmp
insl
aad
sbb
sbb
sub
push
cmp
pusha
bt
cmp
movb
lea
ja
not
pop
call
lea
je
cmc
clc
cmp
or
call
aam
shl
nop
loope
data16
cwtl
mov
repnz
aad
das
or
mov
mov
popa
push
pop
mov
mov
adc
mov
popf
sbb
xor
dec
sbb
jmp
sub
sahf
xor
xchg
xchg
nop
push
sbb
cmpxchg
popa
loopne
sbb
repz
mov
cmpsl
into
call
add
inc
gs
insb
popa
jae
dec
popa
insl
gs
add
lret
push
add
call
pop
bsf
mov
pushf
xor
cmp
test
repnz
mov
call
lea
jb
pushf
lea
jmp
add
push
outsb
jb
popa
insb
imul
arpl
cmp
call
mov
movzbl
add
mov
shrd
xor
jmp
mov
pushf
pushf
pushl
ret
test
pusha
mov
call
pusha
pushl
push
xchg
not
lea
jmp
bsf
mov
cmp
shl
pusha
push
call
cmc
or
movl
lea
je
jmp
add
dec
jae
outsl
outsl
insl
gs
and
incl
shl
stc
stc
mov
cmc
cmp
mov
movb
jmp
add
push
popa
gs
jb
popa
jns
gs
inc
outsl
jne
add
xchg
les
inc
and
pushf
pushl
movl
setg
jmp
mov
pusha
lods
pusha
ror
bt
cmc
add
test
xor
test
bt
push
test
sub
stc
cmp
setl
bswap
pushf
lea
pushf
jmp
lea
jae
pusha
mov
cwtl
test
pushf
movzbw
mov
mov
pushf
mov
btc
cmp
not
mov
jmp
xchg
nop
lcall
shll
dec
jne
fcmove
int
out
push
adc
fs
data16
jne
int
pop
pop
add
cld
push
and
test
xchg
sub
push
outsl
loopne
or
and
in
movsl
jge
outsb
pop
out
xchg
xor
call
add
sub
shlb
mov
test
mov
sub
fsts
movsbl
lea
lea
pop
mov
pushl
jmp
push
pusha
movw
pushl
popl
pushf
pusha
push
pushf
pushl
ret
pushf
jmp
mov
lea
lea
seta
movl
setp
bswap
lea
pushl
jmp
push
call
jae
add
call
jb
mov
shl
lea
call
add
pop
ret
add
inc
jb
popa
je
push
jb
arpl
jae
add
add
je
outsb
fs
inc
imul
and
pushf
call
add
inc
gs
imul
addr16
js
imul
gs
xor
cs
insb
add
sub
fs
jb
rol
movsbw
cmp
pusha
setae
mov
jmp
pushf
test
add
pusha
lea
jmp
jmp
jmp
pushl
lea
jne
jmp
push
movw
lea
jne
bts
mov
stc
jmp
mov
pushf
lea
jmp
pusha
movzwl
test
rcr
or
mov
pusha
mov
add
pushf
pushl
pushf
mov
movb
test
call
add
inc
jb
popa
je
push
imul
inc
add
add
outsl
bound
inc
insb
insb
outsl
arpl
push
call
add
inc
insb
outsl
jae
inc
insb
imul
add
add
inc
imul
jae
popa
addr16
add
enter
mov
add
add
inc
and
lcall
xor
fdivr
push
jmp
lea
ja
pushf
imul
clc
test
add
movb
push
lea
jmp
add
push
gs
arpl
push
arpl
add
jne
insb
push
arpl
add
je
gs
inc
js
outsb
je
outsl
imul
add
push
gs
gs
jae
inc
inc
add
mov
call
jmp
add
push
gs
arpl
insb
insb
push
popa
outsb
add
cmp
movb
pusha
call
add
push
popa
jbe
inc
inc
add
inc
and
jae
idivb
pushf
lea
jl
push
pushf
pushl
push
lea
jmp
add
inc
gs
outsl
jo
imul
std
sti
incl
add
imul
je
push
jb
imul
imul
inc
gs
gs
imul
lcall
and
ljmp
and
push
lea
je
bsf
stc
mov
rol
add
call
cmc
test
pushf
sub
stc
jmp
push
stos
mov
stos
es
mov
mov
in
pop
sbb
xchg
hlt
jg
mov
pusha
test
dec
mov
mov
xor
dec
inc
in
mov
sti
add
or
cmp
stc
push
jmp
and
and
sub
jl
leave
fistpll
enter
aam
sub
xor
mov
cmp
daa
into
jae
adc
or
aas
popw
jae
pushf
loop
fs
pop
and
rorw
push
inc
jb
ja
fs
jmp
add
lea
jne
call
pushf
bt
cmp
call
pusha
clc
cmp
cmc
cmp
pusha
pushf
pushf
pushf
sbb
jmp
pop
sub
sarb
popa
jnp
sbb
jl
mov
xor
cmp
fwait
lock
adc
into
imul
aaa
jmp
mov
and
cmpsl
cltd
cmpsl
inc
sub
push
fistpl
inc
lahf
inc
mov
cs
hlt
loop
cmpxchg
jo
jae
xor
mov
xchg
adc
mov
lret
fiadds
scas
sub
popf
ja
inc
mov
push
fisttpl
adc
or
in
insl
jecxz
or
loop
xor
arpl
icebp
sub
jg
add
inc
imul
jne
arpl
add
add
je
jns
inc
outsl
insb
outsl
jb
jb
jae
add
pop
add
xchg
add
pop
and
adc
dec
dec
adc
mov
loop
negl
arpl
test
jecxz
imul
xor
mov
pop
jb
inc
in
test
inc
test
dec
xchg
mov
inc
sbb
arpl
jo
jle
out
icebp
imul
mov
jnp
test
push
sbb
jmp
xchg
cld
dec
test
push
mov
fnsave
sbb
test
test
std
mov
loop
out
xor
in
push
stos
lahf
mov
insb
push
mov
mov
pop
xchg
stos
mov
test
inc
cmp
pop
mov
nop
inc
or
and
or
push
pop
mov
out
adc
dec
sbb
dec
dec
pushf
jne
out
xchg
repnz
push
cltd
je
jo
pop
or
stos
test
mov
ret
icebp
ja
out
loope
enter
frstor
mov
xchg
out
fwait
mov
movsb
cmp
idivl
aas
dec
scas
fcmovnu
mov
into
push
pop
and
pop
pop
testb
mov
dec
movb
pop
and
movsb
in
sbb
fnstenv
xchg
xor
mov
mov
or
flds
loope
xlat
rorb
pop
cmp
sub
jo
js
pushf
jne
mov
sti
dec
push
in
std
insl
inc
xor
sbb
dec
inc
pop
jmp
adc
xor
decl
mov
sub
lock
mov
cmpsl
ss
es
pop
mov
push
jecxz
mov
test
xchg
pop
nop
rcll
loopne
lahf
in
faddl
aaa
cmovnp
jno
sbb
jo
nop
sbb
xchg
xchg
rcll
mov
pop
std
sbb
xchg
cmc
test
push
loop
and
aas
jnp
lock
adc
aaa
and
iret
shld
cmp
out
jecxz
add
jo
xchg
fldcw
fsub
or
cli
nop
mov
shll
sarb
sbb
cmp
icebp
cs
loope
cmp
outsb
xchg
insl
add
lret
cmp
add
les
dec
jb
fdivl
push
xchg
or
sbb
jne
mov
outsl
inc
xchg
daa
sub
in
out
pop
adc
mov
rorb
pop
inc
adc
adc
int
rclb
pop
lock
in
sbb
pop
jno
ss
shll
sbb
cld
or
mov
in
sub
pop
dec
or
nop
mov
push
aam
xchg
push
repz
push
push
xor
stos
mov
sub
mov
lret
adc
cs
lret
cmp
insb
aad
pop
push
jo
in
or
outsb
in
inc
psllq
lods
mov
sub
lahf
pop
mov
push
inc
push
scas
loop
jmp
insb
out
addr16
shrl
or
jle
lret
pop
push
clc
mov
sbb
xor
les
or
pop
addr16
inc
add
pop
outsl
in
push
cmpsl
out
fwait
in
fstpl
sbb
jb
inc
ret
jne
pop
mov
push
popa
xchg
push
pop
repnz
sahf
push
iret
push
sbb
sbb
adc
mov
xor
into
xor
hlt
fs
inc
pop
filds
pushf
rorb
xchg
es
inc
cld
lret
mov
mov
out
loope
data16
inc
or
ds
iret
jge
ljmp
or
data16
idiv
lret
mov
xor
movl
jmp
jne
in
add
mov
dec
inc
pop
push
xlat
inc
xlat
xor
cmp
and
incl
shrb
jns
push
fisubl
push
cmp
in
pop
cwtl
es
sub
mov
xor
pop
add
bound
cltd
andb
xchg
fidivrs
xchg
jge
xchg
xchg
dec
adc
fstpl
adc
jb
jle
cmp
in
jg
jg
mov
enter
cmp
jo
mov
sbbl
fs
mov
jae
ljmp
inc
inc
loopne
clc
jae
mov
iret
sub
repz
fs
or
or
mov
mov
test
leave
sub
lcall
and
sub
add
cmpsl
aaa
mov
jge
mov
daa
loope
test
add
push
cwtl
cli
sti
add
out
lcall
xchg
add
aad
jns
ret
xchg
cmp
iret
xchg
in
test
and
cmp
xchg
pop
in
popf
adc
out
jno
aam
push
es
mov
in
or
int
data16
imul
xor
cmp
inc
add
cmp
lock
dec
test
aad
and
mov
int
mov
mov
sti
add
jp
and
fbld
rcr
adc
pop
adc
cs
cmpb
xchg
mov
inc
and
mov
push
movsl
fprem1
in
fs
push
inc
and
in
sbb
std
je
in
dec
pop
adc
aas
or
dec
pop
xchg
jmp
in
test
sbbb
stos
mov
jb
scas
je
push
xchg
jne
mov
jge
insb
sub
mov
lcall
xchg
sub
jg
stos
mov
dec
sub
pop
fcomp
rorl
lcall
cmp
bnd
or
stos
fwait
adc
aas
sub
pop
pop
xor
testl
inc
shlb
sbb
cs
mov
mov
pusha
cli
xchg
es
mov
inc
fistl
fidivs
adc
mov
mov
pop
pop
lods
rcll
loopne
mov
dec
fwait
mov
push
pop
push
cltd
push
and
loop
int3
inc
jne
lret
lret
movsl
and
in
inc
imul
add
and
std
push
pop
fstps
xor
mov
push
cld
lret
cmc
push
fcomps
dec
add
mov
xchg
sub
jl
in
ret
std
push
sub
sarl
push
lods
loopne
roll
lea
test
stc
push
dec
xchg
mov
orl
dec
inc
aaa
and
jge
lret
dec
or
out
test
mov
mulb
mov
and
les
push
pusha
das
icebp
movsl
les
insb
push
imul
or
and
and
inc
ss
jecxz
imul
std
insl
or
add
xchg
decl
icebp
repnz
mov
push
mov
mov
inc
pushf
fmul
fldcw
mov
pop
or
shll
jl
cmp
call
sahf
add
aaa
sbb
xchg
in
pop
mov
adc
cld
add
aaa
movsb
cli
xchg
daa
ret
sahf
popa
mov
and
insl
in
mov
mov
mov
movsl
jecxz
push
jnp
and
mov
movd
mov
and
cltd
cmp
shufps
push
adc
sub
mov
or
or
xchg
lcall
cmpsb
cmp
lea
sti
out
mov
sbb
sub
cltd
jbe
outsb
stc
push
mov
sti
icebp
mov
sbb
movsb
cmp
jb
data16
inc
in
dec
sub
xchg
inc
int3
leave
adc
sub
loop
dec
mov
test
mov
ficoms
jecxz
icebp
inc
test
sbb
inc
arpl
mov
stos
mov
fisttpll
push
xorb
nop
aad
testb
imul
mov
fmuls
lahf
sub
sarl
adc
xor
xchg
mov
cmc
dec
sub
repnz
in
ljmp
cmp
cmp
in
jmp
sub
pminsw
cmp
mov
pushf
fwait
repnz
xor
cmp
pop
popf
adc
mov
jmp
push
lret
daa
movsl
adc
xchg
lods
aas
pop
adc
repz
std
daa
push
nop
xor
out
sub
or
sti
icebp
test
mov
cmpsl
mov
rcrl
xor
and
ds
and
ret
jb
bound
movsb
mov
out
imul
or
inc
nop
add
ja
sahf
adc
and
xor
sbb
jg
cmp
or
in
scas
add
fucom
iret
add
inc
xchg
mov
pop
mov
push
lock
jl,pn
cmp
lahf
aad
loop
xchg
xchg
pop
pusha
mov
cmc
enter
rcl
ret
or
push
orl
push
inc
jae
push
inc
call
cmp
or
xchg
sub
icebp
sbb
mov
push
sbb
jnp
dec
cld
fsubrl
fcoml
aas
loop
pop
lods
jle
sbb
mov
es
lcall
aam
rol
lea
sbb
xorl
pushf
push
mov
insl
jl
jl
mov
xchg
mov
inc
cltd
adc
cltd
loope
out
add
pop
test
cmc
pop
rorl
sbb
adc
or
mov
out
sbb
add
xchg
jmp
dec
dec
nop
sbb
fisttps
cs
push
fdivr
mov
aam
mov
movsl
pushf
data16
mov
in
shr
xor
jno
sarl
dec
push
rcr
out
imul
push
in
fnstsw
pop
mov
rclb
inc
std
dec
lret
adc
jle
ljmp
mov
sub
or
scas
pop
je
cmp
call
pop
cld
mov
jle
dec
mov
outsb
mov
es
cs
ds
cmp
mov
ficompl
mov
inc
dec
add
push
add
inc
push
mov
mov
hlt
or
add
push
loop
jp
inc
xchg
cmpsl
psraw
mov
int3
xchg
lret
clc
nop
mov
aam
data16
jmp
mov
imul
xor
jbe
in
test
inc
xchg
cmp
shl
push
jnp
aad
dec
pop
lret
pusha
hlt
sub
aaa
orl
inc
or
inc
sahf
call
scas
or
sti
adc
or
in
xchg
fcmovnb
cmp
jle
lods
lock
ffreep
jle
add
sub
int
mov
out
repz
pop
ja
ret
insl
lret
leave
inc
dec
pop
daa
mov
jge
lods
shrb
out
cmp
repnz
ror
xor
cmp
xlat
cltd
daa
inc
sarl
sbb
outsl
or
enter
pop
pusha
aas
pop
out
out
mov
dec
rorl
shlb
sbb
and
subl
nop
mov
sub
fcompl
popa
lret
or
fdivrs
test
add
sub
sub
outsl
arpl
jp
data16
es
arpl
or
in
adc
ret
mov
push
mov
ljmp
ja
mov
inc
out
pop
int3
mov
sub
sbb
test
xchg
cltd
enter
dec
add
push
insl
pop
inc
dec
roll
add
call
pop
repz
leave
and
xchg
xchg
mov
sar
add
xchg
cld
mov
jno
mov
imul
loop
cmpsl
mov
mov
dec
fst
imul
xchg
cmp
movsl
jae
dec
cmp
bound
repz
jb
inc
mov
and
add
loope
insb
pop
mov
shll
shll
mov
lods
jecxz
jp
cmp
dec
movsl
ror
xchg
xchg
sub
addr16
js
mov
cltd
xor
imulb
dec
lret
ljmp
xor
cmpsb
hlt
enter
sti
fnsave
sub
mov
jae
imul
dec
jo
mov
dec
xchg
movsb
adc
push
test
xor
or
inc
inc
sub
mov
pop
sub
les
cld
xor
jmp
outsl
jle
dec
dec
sub
js
sti
mov
pop
and
shl
in
daa
pop
lods
rcrb
cltd
xor
iret
jbe
xor
push
mov
fwait
xor
fdivl
jns
inc
xchg
xor
and
pop
jo
add
add
xchg
or
mov
jo
mov
xchg
and
jbe,pn
inc
sbb
ds
sub
lret
daa
cld
pusha
aaa
add
popf
xorl
inc
jg
inc
xor
pop
lret
sbb
mov
repnz
adc
add
push
pusha
adc
sub
xchg
shll
call
jae
popf
mov
pop
loop
mov
pop
cmp
insl
sub
imul
incl
and
movsb
mulb
out
sbb
cltd
jecxz
mov
sub
repz
dec
in
push
sub
lods
jle
xchg
xchg
ret
pop
and
lcall
fwait
lcall
add
push
in
jl
push
fidivl
insl
or
or
sbb
adc
mov
cmpsb
xchg
sbb
mov
iret
mov
out
mov
and
xchg
push
adc
data16
stos
jmp
cmp
xor
adc
clc
pusha
andl
out
push
addr16
inc
xor
dec
or
rclb
fs
sbb
push
and
dec
mov
ss
enter
ret
fwait
clc
xor
xor
adcb
sbb
xchg
jno
mov
xchg
cmp
push
pop
jg
cmpsl
out
inc
test
mov
mov
fcompl
and
add
loop
in
aam
lret
cmp
notb
jb
pop
inc
clc
xor
ds
out
adc
mov
push
test
dec
pusha
inc
enter
loopne
sub
cmp
in
movsb
mov
sub
subb
dec
push
jmp
mov
bound
movsl
inc
ss
mov
in
imul
jbe
mov
std
aaa
test
mov
cli
fcomps
rcr
stc
or
push
out
sbb
xchg
inc
mov
mov
dec
outsb
inc
lret
cmp
pop
lods
mov
sub
xor
in
insl
js
icebp
cld
into
lods
fwait
test
loopne
xchg
subl
pop
push
dec
or
lret
add
inc
push
adc
sbb
ret
das
rcrl
cli
jmp
pushf
mov
mov
cmp
hlt
xor
movsb
lods
out
shl
dec
sbb
sub
inc
mov
je
mov
push
mov
cmc
sub
iret
add
lret
outsb
mov
pop
sub
int3
orl
mov
or
sti
cmp
rclb
cmp
sahf
int
dec
dec
punpcklbw
push
mov
cmp
jp
jns
mov
inc
adc
daa
loope
rcll
and
outsl
or
sub
pop
jp
sub
mov
dec
mov
loope
out
repnz
mov
shrl
push
in
rcll
inc
vandps
in
popa
mov
sbb
int
or
shlb
icebp
sub
lret
mov
cmc
adc
jl
pop
jns
mov
lcall
mov
jle
push
mov
dec
ja
cld
es
pop
lret
inc
inc
andl
lcall
fbld
cli
adc
or
out
sbb
aaa
addr16
inc
add
or
jnp
sbb
aam
or
popf
hlt
lret
call
iret
clc
dec
lret
mov
decb
inc
jns
pop
cs
pop
lods
fisubrs
test
push
add
lret
scas
in
stc
pop
ds
xor
shll
xor
pop
xchg
add
cmpsl
stc
dec
xchg
into
test
sub
and
jecxz
xchg
flds
inc
cmpsl
push
sti
enter
outsb
imul
mov
pause
aam
mov
fwait
dec
jns
adc
imul
mov
inc
inc
xchg
inc
xchg
mov
pop
xchg
mov
rcll
in
cmpsb
fs
jg
bound
xor
add
pop
xchg
pop
mov
movsl
dec
rcrl
xor
lahf
adc
lret
cltd
sbb
stos
mov
adc
repnz
arpl
inc
xor
icebp
xor
inc
xchg
test
push
ja
in
pop
movsb
andb
push
mov
xorb
mov
jnp
inc
push
lret
and
dec
xor
mov
lea
pop
xchg
sti
xchg
fmuls
add
jns
mov
popf
xchg
pop
mov
jecxz
cmc
lea
or
in
cwtl
or
fimuls
inc
clc
mov
adc
sahf
outsb
sbb
loope
or
mov
mov
mov
adc
call
out
sbb
leave
inc
sub
daa
insl
ljmp
pop
mov
xchg
rcl
and
nop
imul
dec
pop
push
testl
fiaddl
into
mov
fstps
flds
push
pop
das
into
jl
xlat
test
cmp
cmpsl
sbb
sub
lea
inc
xor
cld
or
xlat
cmp
fimull
clc
stos
aam
rcll
test
xor
dec
rcrb
idivl
loope
pusha
rep
addr16
mov
mov
push
xchg
rcrb
shll
sbb
xchg
sti
lods
push
jo
jno
add
scas
ret
inc
ret
lar
imul
jb
mov
add
lea
pusha
scas
out
or
push
pop
lods
imul
aam
and
mov
cmp
bound
mov
mov
test
adc
pop
xchg
xor
push
pop
int3
mov
cmc
push
pop
iret
adc
xlat
scas
mov
cmp
pop
enter
imul
cwtl
fisubs
add
ret
inc
xlat
sub
cld
lods
inc
mov
push
inc
insl
lcall
sub
sub
lea
adc
cli
mov
dec
xor
push
jl
lret
cmp
sbb
inc
xchg
or
inc
mov
push
mov
sti
popa
pop
stos
mov
lcall
aaa
push
int
sbb
sub
ja
fcomp
icebp
subb
mov
rcl
lahf
jnp
inc
cwtl
movsl
dec
jno
pop
cltd
bound
jg
or
mov
pop
dec
or
dec
xchg
adc
inc
push
jo
xchg
ret
test
test
xor
jo
sub
fxtract
std
mov
xchg
mov
xchg
xchg
in
add
push
outsl
in
xchg
sub
mov
arpl
jns
push
pop
stos
pop
bound
pop
repz
mov
test
fdivs
push
mov
out
jp
jno
mov
das
jno
xchg
add
sub
mov
push
add
ficoms
and
fimuls
push
lcall
pop
and
repnz
es
iret
lock
in
adc
dec
dec
mov
loope
arpl
jno
sbb
mov
dec
mov
popf
jmp
mov
aas
xor
jmp
sub
adc
imul
jge
or
jae
lock
test
les
js
fiadds
jp
aas
aad
xor
ja
or
out
pusha
jg
or
popf
cld
insl
outsl
mov
jge
scas
mov
mov
xchg
xchg
add
xchg
addl
ja
popa
cltd
xor
add
movsl
imul
loop
rol
mov
sbb
test
add
fisubrl
sti
clc
mov
cmp
repz
and
mov
rcr
pop
pop
push
inc
sbb
jg
jb
lret
pusha
mov
shl
ja
fstl
sarl
jg
xchg
mov
pop
or
sbb
stos
leave
jo
cmp
rcrb
shrb
fidivrs
lret
fninit
mov
out
in
push
mov
ja
pcmpeqd
and
push
ret
lcall
iret
jmp
sub
xor
addl
push
in
cmp
mov
and
in
sub
xor
push
in
add
pop
sbb
dec
dec
lods
sbb
imul
dec
sbb
sub
ja
xor
lods
fdivrs
arpl
pop
out
adc
clc
xor
imul
hlt
add
jmp
out
bound
dec
jne
adc
and
popa
lods
shll
out
push
enter
cmpsl
and
sub
ret
jl
cmp
jl
jmp
icebp
outsl
lahf
into
add
sbb
mov
push
fisubrs
mov
gs
xchg
fs
fwait
sub
mov
or
inc
aad
sbb
and
jbe
mov
push
cwtl
cmp
xchg
dec
mov
stc
popf
and
xchg
loop
clc
push
lea
leave
xchg
mul
pusha
jle
das
sub
ljmp
in
xor
arpl
dec
mov
scas
repnz
or
add
dec
mov
sbb
jns
loop
fcoms
cmp
rcl
idivl
mov
cwtl
xchg
movsb
mov
lcall
in
xchg
stos
adc
lcall
leave
jne
lods
xchg
pushl
les
pushf
cmp
in
inc
insl
inc
stos
scas
nop
je
xor
sub
jae
bnd
push
jp
imul
inc
imul
mov
cli
pop
bound
jle
jg
rorb
or
push
ljmp
push
xor
mov
pop
sbb
push
scas
mov
xchg
lahf
jo
outsb
mov
push
mov
arpl
pop
inc
sub
ja
mov
es
sahf
dec
loop
xor
mov
xor
repz
adc
pop
push
ret
dec
adc
in
pop
iret
jl
ret
jl
lods
or
cwtl
or
fisttps
cmp
rcrb
adc
fsubrs
and
gs
iret
stos
pop
clc
mov
push
cmp
enter
std
std
loope
loop
popa
popf
mov
and
std
adc
in
sub
inc
out
pop
or
dec
sbb
sub
loope
loop
mov
add
aam
add
out
mov
cmp
leave
and
cmc
lret
enter
pop
mov
mov
add
lea
inc
mov
mov
cltd
repnz
cmpb
lret
xchg
int
adc
cmpsb
or
cmp
and
lea
movsl
xor
gs
or
mov
cmpsb
push
shl
iret
insb
xor
or
add
loop
xor
imul
inc
loopne
lods
sub
rcrb
test
leave
add
xor
pop
test
ja
mull
stc
sbb
ss
popa
xor
in
imul
test
icebp
mov
enter
inc
push
fsubrs
push
mov
push
fldcw
mov
pop
jg
aas
mov
jne
cmpsl
inc
ja
pop
mov
cltd
ljmp
adc
and
pop
cmp
xor
sub
push
fdivrs
add
out
jl
out
adc
sarl
nop
sub
je
mov
jmp
xchg
jl
mov
xchg
and
xor
sbbb
pop
jmp
testb
movsl
jae
int3
lahf
push
aam
jns
sub
xchg
fdivl
adc
repz
and
dec
jge
dec
jbe
and
push
push
leave
xchg
inc
sbb
shl
mov
mov
jne,pt
pop
outsb
into
dec
jle
xchg
sbb
clc
jmp
jp
addr16
insb
rcrb
mov
shl
out
mov
mov
int
sub
enter
adc
jg
dec
daa
or
or
mov
sbb
rcrb
jns
dec
jg
fdivs
fwait
mov
call
adc
scas
push
repz
mov
testl
pop
clc
add
xor
mov
roll
les
or
push
dec
xor
adc
mov
adc
pop
lods
jae
loop
dec
mov
xchg
mov
cli
in
mov
ja
shll
sbb
adc
jle
mov
scas
cmpb
inc
mov
ja
into
mov
pop
das
cmp
dec
orb
fcomps
inc
dec
cmc
icebp
or
xor
in
dec
leave
sbb
fcompl
mov
call
jb
fsub
stos
adc
in
mov
mov
inc
mov
mov
jg
fimuls
ja
fldcw
mov
pop
pop
jnp
sub
dec
fistl
movsl
xor
stc
cmp
push
scas
pop
mov
mov
jbe
loopne
mov
add
mov
test
inc
inc
jb
mov
fs
pop
pop
cmp
mov
and
push
dec
das
adc
bound
xor
lcall
cmp
out
sub
fwait
xchg
sub
sub
pop
jecxz
mov
enter
dec
mov
xchg
mov
mov
sbb
inc
push
push
iret
and
pushf
cmp
ss
rcrb
ficompl
adc
imul
subb
into
push
jae
mov
ret
pop
data16
xor
mov
push
ret
mov
or
inc
and
jl
mul
sub
bound
and
cwtl
outsl
push
sub
hlt
cmp
cmp
mov
sbb
jmp
dec
mov
mov
xchg
mov
add
xor
sub
xchg
lret
xor
mov
les
bound
sti
jae
jge
shl
out
and
xor
pop
hlt
mov
idivl
and
adc
jae
dec
mov
xor
and
push
dec
mov
aas
inc
sahf
inc
cwtl
loopne
lea
sbb
push
push
rolb
pop
mov
mov
in
jo
sbb
inc
lcall
fnstenv
outsb
dec
cmc
cwtl
ret
pop
pushf
in
subl
fdivrl
idivl
and
rcrl
fs
xorb
cmp
out
inc
mov
lods
cmp
or
cmp
mov
or
sbb
repnz
sub
cmp
mov
mov
push
mov
jge
xlat
add
cmp
ljmp
call
push
pushl
sub
mov
mov
out
pop
pop
ret
mov
jno
mov
out
loop
pop
pushf
or
jmp
sbb
mov
dec
std
push
insl
clc
test
fwait
jp
les
inc
sbb
lods
push
or
push
add
rcll
jg
hlt
push
jge
sbb
adc
pop
adc
xchg
insb
pop
jl
mov
push
cmp
add
idiv
add
int
cmp
fwait
mov
subl
or
sbb
addb
mov
sarb
or
popa
ljmp
sti
lds
lret
dec
aaa
arpl
jns
jle
sbb
inc
mov
fsts
and
es
add
loop
subl
pushf
out
out
test
andl
fsubp
test
mov
xlat
arpl
ljmp
sub
and
out
scas
rcrl
pusha
or
lahf
lahf
repnz
fcmovb
mov
scas
sub
add
cmp
nop
out
or
adc
mov
addr16
lcall
int
jmp
cld
inc
popl
xchg
repnz
pop
xchg
add
fwait
sub
inc
push
lahf
and
jns
mov
scas
sbb
outsl
pop
clc
test
add
test
mul
test
ss
pop
aas
xor
cli
jmp
icebp
pop
paddb
xchg
pop
xchg
mov
in
jno
call
sub
imul
notl
cs
out
mov
sarb
andb
fcoml
fcmovnb
cmp
xor
mov
mov
es
adc
rclb
and
mull
leave
cmp
nop
cmpsb
in
div
js
dec
fsts
push
dec
xchg
daa
adc
loop
xlat
cld
push
daa
pop
add
pop
int3
adc
jns
xor
jae
xlat
sub
mov
mov
repz
and
ljmp
mov
fidivrl
int3
test
push
loop
rcrl
repz
inc
xchg
mov
out
scas
in
repnz
jge
pop
xor
andl
fsts
push
xchg
loop
mov
xchg
fidivrs
je
scas
xlat
fwait
sbb
lret
push
iret
mov
cltd
adc
jmp
pop
iret
ja
mov
out
rcrl
cmp
xor
inc
test
imul
inc
pop
mov
popa
xor
leave
stos
ret
push
add
std
pushf
mov
xorb
cwtl
inc
aam
xor
in
pop
sbb
cli
in
adc
or
or
xchg
xchg
fnsave
out
je
pop
outsl
mov
dec
rclb
mov
js
xor
movsb
or
xchg
sbb
jae
insb
adc
mov
cmp
inc
jmp
stc
hlt
inc
popa
pop
and
xlat
dec
push
pop
adc
addr16
movsl
cmpsl
stos
mov
mov
add
or
cmp
adc
cmp
lret
mov
lahf
xor
testl
sub
xlat
push
dec
popa
outsl
enter
hlt
xchg
push
in
mov
cmp
icebp
ds
mov
mul
into
push
insb
push
cli
aam
pop
cs
xchg
pop
fsub
loope
push
ljmp
pop
push
mov
inc
push
aam
hlt
jp
inc
jge
jnp
call
dec
or
out
push
ja
fnstenv
jbe
jbe
mov
mov
adc
bound
dec
orl
xchg
sbb
in
sub
xor
add
loopne
mov
jl
data16
push
outsb
mov
jns
and
xor
aas
pop
inc
ljmp
cwtl
stc
lret
jle
into
lods
adc
mov
lods
fiadds
in
or
subb
int3
mov
int3
inc
add
bound
mov
pop
cmp
popf
add
mov
or
adc
in
push
insl
jmp
outsb
std
call
pushf
push
fsubp
mov
push
pop
jg
cmpsb
or
or
xchg
mov
movsb
sbb
push
movsl
mov
jne
mov
add
icebp
aaa
sbb
stos
movsl
outsl
test
cltd
sar
dec
int
jns
lods
mov
sub
rcr
bound
jnp
adc
add
sbb
ffreep
stos
mulb
fs
fstpt
sub
imul
fldt
pop
cltd
fstpl
repz
inc
add
aas
dec
mov
aaa
not
andl
movsb
mov
cs
fmull
sahf
int3
xchg
loop
enter
pop
sbb
call
mov
jb
gs
mov
mov
pop
pushf
into
pop
jnp
scas
xchg
enter
inc
jmp
cmp
pusha
je
add
sbb
or
ret
adc
and
mov
es
les
push
push
insb
iret
stc
inc
adc
fnstenv
bswap
iret
pushf
xchg
dec
fisubrl
or
sub
mov
rclb
int
mov
pop
fxch
cmp
sbb
push
fidivl
rorb
pop
cmpsl
mov
sbb
rclb
dec
cmp
dec
in
add
jae
inc
lods
addr16
xor
inc
sub
mov
mov
ret
xor
add
sub
cmp
loop
adc
sub
out
cmpsl
sub
mov
in
mov
add
dec
sub
dec
adc
into
mov
jns
mov
enter
pop
and
lret
in
or
test
pusha
mov
iret
ja
sbb
add
jecxz
or
hlt
jecxz
inc
int
dec
xchg
popa
mov
add
pop
add
movzwl
sti
jecxz
pop
cmp
pop
xor
mov
sbb
in
push
popa
lods
lret
mov
mov
mov
sti
negl
add
rcrb
lcall
xor
or
pop
ja
cli
dec
mov
bound
pop
adc
flds
jno
cmpl
mov
roll
test
ds
std
je
inc
sahf
adc
fdiv
imul
xchg
hlt
lret
icebp
outsb
jne
and
cwtl
or
mov
gs
push
xchg
shlb
push
sub
mov
leave
jae
jg
insb
and
and
aas
jo
xchg
fwait
loope
dec
cmp
pop
inc
dec
insb
rclb
aas
pushf
cmpsl
inc
mov
mov
add
mov
cs
mov
xorb
std
mov
pop
iret
dec
aas
push
aam
ja
adc
mov
xlat
cmp
dec
mov
mov
push
xchg
push
or
or
xchg
mov
inc
jae
pop
cld
decb
xlat
subl
cmp
xchg
adc
dec
lret
jo
stc
mov
ja
inc
xchg
js
mov
xchg
shll
out
mov
fsubrs
sub
mov
push
sbb
dec
mov
add
out
add
std
jmp
mov
arpl
xorb
fsubl
mov
push
xorl
cmc
repnz
arpl
out
jg
lahf
vpshad
cmp
movsb
pop
cmp
push
fucom
cmc
pop
sub
adc
and
addr16
xchg
xor
jle
jae
add
jge
movsb
mov
lock
mov
out
out
ss
out
ds
mov
aad
dec
sub
jecxz
movsl
pop
mov
jmp
sarb
mov
fstpt
fs
mov
xor
mov
jp
icebp
imul
lds
sub
stos
test
add
dec
jne
je
inc
jns
gs
outsl
push
imul
call
add
inc
gs
outsl
jb
addr16
jne
fs
imul
add
gs
add
push
je
push
outsb
ja
outsb
add
pop
jmp
call
clc
add
mov
jmp
pusha
stc
cmp
pushl
call
lea
je
setg
mov
xchg
xchg
lea
lea
xchg
movzwl
mov
lea
jmp
lea
call
push
pushf
adc
pushf
lea
jb
call
add
inc
gs
imul
jb
popa
fs
jb
arpl
jae
add
ret
or
lea
lea
call
add
inc
jb
gs
imul
pushl
lea
ja
jmp
add
dec
imul
add
add
popa
addr16
imul
ja
cmpb
pushf
push
lea
jne
rcr
aas
xor
test
mov
adc
add
shr
setl
mov
pusha
test
test
pusha
lea
je
push
bt
sub
pushl
stc
cmp
pushf
pushf
push
lea
ja
bt
imul
cmp
add
pusha
push
lea
jmp
add
inc
gs
jb
jbe
push
jns
gs
add
add
je
outsb
jne
add
dec
gs
push
outsl
inc
push
mov
sub
pop
rorb
jo
fcmovnbe
stc
in
clc
or
and
stos
xchg
add
shlb
mov
outsl
shlb
sti
mov
ficoml
xchg
push
mov
sbb
fcompl
rcrl
call
add
out
push
xchg
pop
in
dec
out
or
dec
jl
xor
leave
cmp
inc
push
andw
push
xorb
pop
lret
les
mov
dec
mov
inc
dec
lret
cld
mov
mov
inc
xchg
inc
lret
in
inc
fcoms
pusha
sbb
mov
sub
fs
mov
sti
add
jbe
xchg
xchg
sti
cmp
inc
les
inc
mov
insl
sar
aad
adc
js
xchg
popa
fisttpll
sbb
fs
xor
push
or
push
outsb
push
rsm
cmp
pop
ret
mov
jle
jmp
out
pusha
je
sti
imul
popw
scas
outsl
ret
outsl
subb
ja
inc
repz
push
and
outsb
sbb
in
arpl
ja
and
add
lcall
pop
cli
dec
xchg
enter
cmp
mov
dec
lahf
shlb
dec
mov
inc
add
fs
add
lahf
jnp
jae
lcall
mov
fldl
inc
idivb
and
repnz
push
mov
test
sub
gs
and
pushf
movw
jmp
add
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
inc
imul
outsl
inc
outsl
jae
popa
je
push
imul
insb
outsl
bound
inc
imul
inc
add
repnz
movzwl
shl
bsr
mov
pushl
bt
add
stc
mov
test
test
mov
lea
je
test
push
add
pushf
pushf
lea
jmp
add
inc
gs
outsb
push
inc
imul
je
inc
outsb
je
imul
jmp
add
pushf
movb
pusha
pushf
lea
jmp
add
outsb
je
push
inc
jb
popa
je
push
outsl
insb
imul
pushf
jmp
mov
cmpsb
sub
and
addr16
repz
andps
jle
ljmp
xor
mov
mov
pop
adc
repnz
lods
and
inc
lcall
xor
lods
movsb
ds
adc
leave
addb
pop
pop
sub
inc
xor
ret
adc
xor
cmc
mov
or
shrb
mov
xchg
push
jo
add
aam
push
cli
and
movsl
js
inc
nop
inc
adc
jecxz
int3
mov
fnstcw
pushf
lret
je
mov
outsb
jae
jb
dec
outsb
jne
add
movb
lea
je
push
movzbw
lea
call
pushf
pusha
pushf
lea
jae
test
rcr
xchg
pop
call
add
dec
insl
popa
addr16
imul
je
add
pushf
mov
call
lea
mov
pusha
mov
mov
mov
seta
pusha
lods
push
clc
ror
push
cmc
add
push
xor
jmp
mov
movzbl
bsr
mov
stc
cmp
pusha
pusha
shr
push
jmp
add
inc
jb
popa
je
inc
imul
and
add
addb
rol
mov
stc
pusha
adc
not
xor
inc
mov
add
movzbw
test
add
xchg
add
call
jmp
pushf
call
add
dec
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
inc
add
add
addr16
insb
jne
push
adc
pop
add
mov
xor
or
pop
add
add
inc
pop
add
cltd
pop
add
repz
add
adc
add
adc
add
push
pop
add
pop
add
xor
add
dec
pop
add
pop
add
repz
aas
cmp
inc
cmpsl
pop
add
xchg
pop
add
pop
add
pop
add
sub
subb
sub
xor
mov
xor
add
icebp
pop
add
sub
fistps
pop
add
adc
add
cmp
mov
pop
add
add
add
xor
add
mov
add
add
add
test
add
cmp
clc
movsl
pop
add
add
add
sub
add
pop
add
add
add
mov
pop
add
cmpsl
pop
add
add
add
test
add
cmp
popa
and
jae
xor
add
add
add
add
add
pop
add
repz
add
mov
add
adc
add
dec
pop
add
pop
add
pop
add
add
hlt
xor
or
add
lahf
pop
add
pop
add
or
add
pop
add
sub
sbb
pop
add
pop
add
sysexit
add
cmp
mov
pop
add
fistps
mov
xor
xchg
pop
add
inc
pop
add
ficoms
inc
push
pop
add
pop
pop
add
xor
add
pop
add
sti
xor
sti
repz
add
xor
add
inc
pop
add
pop
add
xor
add
pop
add
fwait
pop
add
cmp
pop
stc
xor
inc
cmpsl
pop
add
xchg
pop
add
or
add
pop
add
adc
add
aas
pop
add
sbb
pop
add
das
pop
add
push
pop
add
xchg
pop
add
xor
xor
loopne
xor
add
adc
add
pop
add
cmc
pop
add
pop
add
sub
mov
pop
add
mov
pop
add
mov
xor
fwait
icebp
pop
add
add
and
pop
add
add
xor
mov
pop
add
add
add
xor
add
add
add
out
pop
add
cmp
xor
xor
add
mov
repz
pop
add
stc
xor
add
add
pop
add
adc
add
adc
add
repz
add
pop
xor
add
xchg
ds
xor
fistpl
ds
lods
pop
add
inc
pop
add
add
dec
pop
add
pop
add
pop
add
pop
xor
add
hlt
xor
cli
cltd
add
pop
add
pop
add
adc
add
add
or
add
pop
add
add
add
adc
add
mov
add
xor
add
mov
dec
fwait
pop
add
leave
pop
add
mov
pop
add
push
xor
add
inc
pop
add
add
pop
add
ds
add
xchg
pop
add
push
add
xor
je
xor
add
add
xor
jmp
pop
add
scas
pop
add
mov
xor
add
add
add
divb
and
dec
pop
add
lahf
pop
add
fwait
pop
add
add
cmc
xor
and
xor
add
xor
add
dec
pop
add
mov
jae
pop
add
pop
add
xor
add
add
add
cmp
lret
cmp
inc
xchg
add
pop
add
xor
add
add
pop
add
dec
pop
add
xor
pop
add
pop
add
cmp
in
xor
arpl
add
xor
add
clc
xor
add
xor
or
pop
add
clc
xor
pop
repz
add
cmp
stc
dec
pop
add
or
add
and
add
movsl
pop
add
pop
add
pop
add
scas
pop
add
push
pop
add
xor
mov
cmp
add
pop
xor
add
push
pop
add
xor
add
cltd
add
enter
sbb
pop
add
dec
pop
add
pop
add
pop
add
repnz
add
push
xor
add
fstpl
inc
and
cmpsb
sub
add
sbb
pop
add
rcrb
sysexit
add
xor
jle
xor
add
repz
add
and
add
cmc
pop
add
dec
pop
add
xor
add
movsb
pop
add
fistpl
mov
and
add
pop
add
pop
add
dec
pop
add
rcrb
mov
lahf
inc
pop
add
cmp
jmp
lods
pop
add
pop
pop
add
lcall
or
pop
add
pop
add
pop
add
pop
add
cmc
xor
repnz
add
add
dec
pop
add
cmpsl
pop
add
mov
mov
pop
add
xor
add
mov
add
pushf
pop
add
es
cwtl
or
add
inc
pop
add
rcrl
inc
pop
add
xchg
pop
add
or
add
lahf
pop
add
add
add
cmp
cltd
cmc
xor
or
ds
fistps
out
pop
add
xor
hlt
mov
pop
add
push
xor
add
or
pop
add
inc
pop
add
xor
add
or
add
xchg
add
fistps
mov
pop
add
mov
add
scas
pop
add
add
add
or
add
mov
add
pop
add
cmp
clc
xor
add
das
pop
add
add
add
add
add
cmp
cmpsb
lea
add
out
pop
add
xor
dec
xchg
add
pop
add
pop
add
add
add
pop
add
cld
xor
loope
xor
add
xor
jl
pop
add
adc
add
mov
add
fstpl
jae
pop
add
cmp
add
add
fisttps
pop
add
add
add
mov
or
pop
add
enter
and
pop
cld
xor
push
cmpsl
pop
add
mov
pop
add
xor
push
mov
pop
xor
mov
and
add
repnz
jbe
pop
add
mov
add
cmp
stos
adc
add
pop
add
icebp
xor
btc
add
add
mov
pop
add
dec
pop
add
add
add
fistps
sub
pop
add
pop
add
add
add
dec
pop
add
icebp
xor
out
pop
add
cltd
add
pop
add
dec
pop
add
pop
add
cld
xor
pop
sti
xor
insl
add
pop
add
adc
add
dec
pop
add
pop
add
pop
add
lea
ss
add
add
add
scas
pop
add
add
add
add
dec
pop
add
add
lods
pop
add
add
add
addb
push
jmp
mov
movsbw
pushf
mov
pushl
pusha
push
mov
call
push
xor
out
mov
pop
into
je
mov
and
imul
ret
xchg
jae
jle
jae
push
mov
inc
cwtl
hlt
pop
mov
gs
ja
jnp
mulb
mov
andb
pop
arpl
stos
lock
xor
mov
push
gs
mov
enter
adc
mov
dec
shrb
cs
cmp
push
mov
and
sbb
pop
lock
jmp
cld
pop
sti
lods
jno
mov
jge
call
add
shrb
in
div
jmp
add
pop
jo
mov
push
aaa
add
jae
lret
inc
mov
inc
stos
jbe
pop
test
fsubp
xchg
push
out
movsl
lret
mov
enter
ds
push
push
scas
push
jae
mov
int
sbb
or
jp
xlat
imul
or
sahf
mov
mov
xchg
fnstenv
pop
lods
nop
dec
test
aam
loope
cmpsl
sub
punpckhdq
push
outsb
psubd
or
ljmp
out
and
lock
fnstenv
mov
mov
mov
mov
dec
push
cmc
popf
mov
test
outsb
jl
dec
inc
mov
movsl
pop
into
sbb
add
fnsave
xchg
or
orl
bound
pusha
xor
push
push
lea
jb
jmp
mov
call
add
inc
gs
gs
dec
gs
imul
dec
outsb
data16
popa
je
push
arpl
mov
add
add
push
jns
push
gs
insb
insb
outsl
arpl
jb
outsb
addr16
outsb
add
add
je
outsl
jns
outsb
jne
add
inc
outsl
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
xchg
bnd
aam
outsb
cmovne
movsb
sbbb
cmc
or
test
mov
or
pushf
stc
mov
adc
aaa
xchg
notb
add
push
js
imul
sub
cmp
hlt
mov
lea
jbe
rcl
ror
shr
call
cmp
xchg
or
in
sahf
and
clc
adc
and
xor
and
sbb
pop
xchg
mov
xor
pushf
int
adc
popf
jae
fisubrs
xor
in
xchg
icebp
xlat
adc
sti
or
xchg
xor
add
xchg
mov
xchg
clc
xchg
ljmp
shrl
push
xchg
adc
push
scas
fbstp
pop
fdivrl
sub
das
add
jne
into
xor
fiadds
das
mov
or
addl
das
sub
inc
cmp
inc
push
or
lock
shll
sub
push
jb
jge
xchg
mov
int
adc
ss
sti
and
sahf
bound
cltd
cld
loop
mov
ret
adc
pop
cltd
aas
scas
push
inc
mov
push
std
jo
addl
adc
mov
cltd
scas
and
sub
xlat
push
pop
jg
fxch
xor
add
mov
mov
sub
sub
or
sub
dec
aaa
jbe
jle
into
lods
popf
hlt
fs
mov
aam
sub
jno
xchg
cmc
and
cmp
push
dec
fwait
cwtl
pop
adc
and
pop
aad
es
hlt
push
in
sub
gs
cmp
pop
and
dec
cmpb
add
cmpsb
flds
inc
mov
mov
xor
jo
loop
and
mov
adc
push
xlat
out
subl
adc
adcb
mov
icebp
push
push
insb
cltd
imul
rolb
aaa
xor
gs
pop
aad
hlt
lods
imul
test
div
addr16
pop
rclb
mov
leave
cmp
bnd
pop
bound
push
xchg
popf
mov
mov
add
leave
aaa
dec
enter
push
xchg
mov
ja
test
movsl
pop
add
jae
test
add
int3
xor
loop
push
dec
sbbb
or
or
mov
rorl
xor
sbbl
pushf
test
xchg
repz
sub
ret
lock
mov
jo
movzbl
jmp
add
inc
gs
popa
je
inc
outsl
jb
popa
je
add
add
je
jbe
je
dec
gs
outsl
popa
jb
dec
popa
jns
jne
add
fsubl
decl
xchg
jmp
inc
and
or
xorb
ret
push
lea
je
pushf
sub
cmp
pushl
cmp
jmp
ja
outsl
arpl
xor
fs
insb
add
add
gs
je
inc
outsl
insl
jo
je
bound
imul
dec
insl
popa
addr16
imul
addr16
outsb
je
jb
add
inc
insb
outsl
bound
inc
fs
je
insl
inc
add
inc
and
add
and
dec
dec
cltd
add
xor
jmp
add
dec
outsl
popa
fs
imul
add
mov
and
lea
jbe
test
pusha
movl
pusha
lea
je
call
add
push
gs
outsl
jb
inc
inc
add
test
enter
shld
dec
add
shrd
xor
pushf
sub
rcl
add
bsf
shr
stc
mov
add
jmp
add
push
gs
je
jbe
outsb
je
lea
je
pushf
test
stc
cmc
sub
clc
movl
cmp
jmp
lea
je
sar
add
call
add
push
dec
inc
jb
ja
gs
outsl
jb
outsl
insb
fs
add
test
and
add
pop
bsr
lea
mov
stc
test
rcl
add
pushf
bt
shl
sar
mov
pushf
test
lea
jae
pusha
lea
je
jmp
movzbl
stc
push
xadd
bts
lea
mov
and
sub
shr
pushf
sub
bts
jmp
lea
call
jmp
mov
mov
test
cmc
bt
test
call
lea
or
sar
mov
not
sub
sar
neg
not
pusha
add
mov
setp
push
rep
lea
pop
setl
mov
setb
movsbw
mov
push
call
ret
jmp
decl
das
inc
imul
mov
pop
lret
push
nop
imul
add
inc
fildl
fisttps
repnz
or
fwait
loop
ret
adc
mov
aam
rorb
cmp
dec
push
in
ljmp
mov
popf
nop
pop
out
jmp
incl
int
cmc
in
sahf
lea
loope
pop
jmp
lret
add
jmp
ret
inc
sbb
pushf
call
mov
cli
shlb
sub
cmp
sbb
mov
call
mov
lea
je
test
call
add
push
popa
gs
jb
popa
jns
jb
popa
je
add
sub
inc
stc
jbe
xchg
iret
sub
lahf
mov
ret
fnstcw
pushf
sub
ss
scas
push
mov
call
fwait
outsb
insb
xor
pop
lock
shrb
dec
in
sub
popa
fyl2x
sbb
popa
shll
cmp
pop
xchg
nop
testb
lea
adc
mov
jmp
dec
dec
pop
test
mov
jns
adc
mov
jne
insb
out
sub
cltd
sub
xchg
xchg
mov
inc
movsb
sbb
imul
out
push
fldt
jge
xchg
in
sub
dec
xchg
xchg
iret
sub
cmp
hlt
dec
data16
les
int3
mov
jb
pusha
xchg
fisubrl
pop
mov
adc
push
into
mov
xor
aaa
jb
bnd
mov
jae
cmpsl
or
adc
rcr
push
pop
push
jbe
or
sti
sbb
inc
movsl
jb
dec
je
jbe
xchg
dec
jno
sub
cltd
sbb
lock
xchg
xchg
mov
ret
xor
push
and
aaa
call
test
sub
inc
dec
ljmp
cmc
adc
push
fs
ret
cmc
arpl
push
push
cmp
xchg
xchg
and
or
xor
lods
test
cmpsl
xchg
sbb
pushf
pmaxsw
add
sbb
out
inc
mov
inc
loope
add
sub
rorb
lds
fxch
sub
jecxz
popa
sarb
mov
jl
loopne
dec
sub
lahf
ficoml
pushf
pushf
add
push
pusha
cmc
pushf
ror
movb
cmp
not
jmp
add
dec
insl
popa
addr16
imul
dec
arpl
push
imul
jmp
pushl
lea
call
push
jmp
add
inc
push
dec
gs
inc
add
add
push
jae
push
imul
arpl
add
dec
cld
call
push
jmp
test
jmp
add
push
gs
outsb
jne
je
insl
dec
outsb
outsw
inc
add
out
movb
push
mov
jmp
jmp
add
push
imul
jae
jne
arpl
mov
cmc
test
movw
pushf
mov
clc
jmp
add
inc
imul
outsl
dec
outsl
arpl
inc
imul
jmp
mov
jmp
add
inc
gs
jne
jb
outsb
je
push
dec
add
mov
jp
add
enter
mov
adc
add
adc
pop
not
pop
pushf
mov
mov
pusha
jmp
add
inc
gs
inc
push
add
iret
mov
lea
jne
movsbw
sub
movzbl
movzbw
cmp
mov
shr
add
inc
ror
add
pushf
test
shr
mov
pushl
call
add
inc
gs
imul
js
dec
outsb
addr16
push
add
shl
test
sub
test
movb
shl
stc
mov
stc
push
test
pushl
cmp
jmp
loopne
lods
ds
adc
jbe
mov
ret
inc
jns
mov
out
or
pop
jo
and
out
test
or
sub
fidivrl
aam
jae
sub
mov
cmp
cwtl
add
mov
push
int
ror
bound
jb
ds
orb
pusha
cltd
lret
test
or
into
jge
jnp
enter
test
sub
push
mov
test
iret
and
dec
adc
inc
sub
sub
pusha
ja
loope
or
jae
lods
vunpckhps
jle
dec
popf
cmc
arpl
xchg
mov
push
lods
lods
dec
dec
mov
and
sbb
addr16
je
fdivs
jo
push
or
es
cmp
sub
jnp
pop
nop
out
push
adc
outsb
in
cmp
and
ret
cmp
cmp
lret
sub
adc
daa
mov
jmp
out
mov
inc
sub
stos
into
inc
insl
aad
dec
push
outsb
add
cmp
into
inc
xor
sbb
mov
sbb
lock
outsb
imul
push
fldt
adc
jecxz
addr16
ljmp
mov
outsl
push
jge
out
in
int
mov
mov
int3
out
aam
lcall
pop
imul
inc
jb
popa
je
inc
jbe
outsb
je
add
xbegin
mov
pushl
pusha
test
call
add
test
mov
test
test
movl
lea
je
push
bt
stc
cmp
add
pushf
cmp
pushf
jmp
movb
movsbw
movzbw
jmp
xchg
push
mov
lea
mov
lea
mov
push
lea
call
call
inc
and
jne
addr16
push
gs
and
jne
and
outsb
outsb
imul
jns
jne
and
jae
gs
cs
jae
sub
jne
insb
outsl
popa
and
and
outsl
insl
and
insl
outsl
jb
and
and
jae
popa
jb
and
jne
and
outsl
addr16
insl
cs
add
rep
clc
aas
call
lea
ret
xchg
dec
jmp
call
push
push
mov
mov
mov
shl
lea
call
adc
sub
jne
mov
sub
pop
pop
ret
mov
push
jmp
mov
pusha
test
pusha
add
bt
cmc
movzwl
bts
stc
sar
shrd
mov
jmp
mov
pushf
pushl
ret
outsl
insb
gs
jne
xor
cs
insb
add
add
cli
sub
repnz
cld
and
popf
arpl
sub
mov
pop
fldt
mov
add
insl
lret
int3
mov
sub
and
sub
test
popf
test
cmp
call
push
lea
je
pusha
pusha
movzbl
bswap
lea
lea
call
clc
cmp
clc
xor
call
pushf
lea
jne
clc
bsf
mov
bt
cmp
pusha
push
call
add
dec
insl
popa
addr16
imul
addr16
outsl
jbe
add
add
je
popa
jb
outsb
je
add
push
gs
outsb
push
inc
imul
shl
jo
lea
call
lea
je
call
add
dec
outsl
popa
fs
jne
jae
jb
add
scas
add
add
mov
test
call
add
insb
jae
jb
jo
outsb
inc
add
add
je
imul
outsb
addr16
add
xchg
push
in
lea
je
bswap
movsbl
movsbw
push
mov
lea
call
add
dec
jae
jno
popa
insb
inc
push
dec
inc
add
add
je
imul
popa
arpl
outsb
je
lea
push
mov
mov
lea
jmp
add
inc
gs
jb
arpl
fs
jae
add
add
je
imul
mov
pop
and
decb
and
push
dec
push
xchg
leave
repz
pop
jns
mov
pop
adc
std
inc
movsb
aaa
pop
cmc
jno
mov
mov
jmp
test
fdivs
mov
dec
scas
dec
loopne
insl
lcall
fldcw
mov
jae
arpl
cmp
cmp
iret
cmp
addr16
pusha
jmp
sahf
mov
dec
fsubr
dec
mov
lret
pop
test
mov
mov
jl
pop
lds
movsb
xchg
pop
mov
int3
inc
in
and
or
stos
push
xchg
out
sub
fists
or
dec
mov
xlat
out
int
adc
and
aam
sbb
add
inc
add
pop
pop
sbb
cmp
jns
scas
or
rclb
mov
or
fwait
inc
lds
in
fwait
push
adc
mov
movsb
sub
int3
lods
push
jmp
add
dec
popa
jae
inc
insb
je
add
insb
jae
jb
insl
jo
add
mov
call
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
jg
lea
ret
incl
add
gs
insb
inc
js
arpl
gs
add
mov
and
add
stc
pushf
movb
mov
stc
test
jmp
add
dec
popa
jo
imul
imul
dec
gs
popa
addr16
outsl
js
add
add
loopne
add
xchg
push
inc
pushl
pushf
pushf
pusha
lea
jmp
add
inc
gs
outsb
push
inc
imul
imul
add
mov
call
add
pop
ret
neg
shl
mov
stc
pushf
pushl
cmp
sub
test
pushf
repnz
pushf
call
add
push
insb
jae
gs
popa
insb
jne
add
sar
mov
std
ljmp
inc
xorb
aam
pop
or
mov
insb
xchg
outsl
xchg
add
sub
das
adc
inc
lcall
adc
mov
mov
or
jne
inc
pop
das
xchg
in
loopne
mov
mov
in
test
fldz
andb
xchg
imulb
cwtl
pop
pop
add
out
jecxz
sti
jae
cmp
adc
in
inc
lods
and
popf
xor
mov
sub
jb
lret
pusha
pushf
jmp
add
inc
jb
popa
je
push
popa
insb
gs
gs
std
pop
add
movb
lea
jne
and
inc
push
sub
mov
sar
sub
cmp
lea
jmp
mov
movb
test
test
pusha
cmp
call
test
pushl
lea
jne
jmp
add
inc
insb
outsl
bound
dec
popa
outsb
fs
gs
xlat
rcr
rol
pushf
mov
mov
stc
call
ss
sub
cmpsl
movsb
mov
mov
jno
pop
cwtl
iret
loop
mov
inc
mov
push
dec
lods
icebp
inc
or
and
jb
or
out
mov
aas
test
js
mov
aaa
xlat
dec
std
and
pop
scas
mov
or
lret
sbb
into
inc
cmp
pop
dec
mov
and
adc
mov
inc
call
std
or
cmp
mov
aad
lcall
or
orl
push
sbb
xchg
repnz
push
movsb
adc
arpl
jge
add
push
gs
push
dec
outsl
arpl
add
add
je
outsl
jb
addr16
jne
fs
imul
movb
mov
pushf
movl
pushl
push
movl
pushf
pushl
pushf
lea
jmp
jmp
add
push
gs
arpl
insb
gs
gs
popf
pushf
movl
push
pusha
pusha
movl
push
lea
jmp
add
inc
gs
js
je
outsl
fs
push
add
add
je
gs
inc
outsl
insb
outsl
jb
add
inc
gs
inc
dec
inc
push
jb
arpl
xor
shrl
add
mov
sub
jb
mov
add
call
sub
jne
ret
bt
movzwl
lea
shl
ror
push
mov
call
test
pushf
call
push
mov
xchg
pushf
pushf
mov
jmp
add
dec
insb
gs
outsb
imul
add
xor
lock
call
add
inc
gs
outsb
jne
je
insl
dec
outsb
outsw
inc
add
lea
jne
pushf
mov
push
push
pusha
pushf
mov
pushf
call
add
inc
jb
popa
je
push
arpl
outsb
add
add
mov
movl
lea
jb
pushl
push
push
pushf
pushf
pushl
ret
add
inc
outsb
jne
push
imul
push
std
sub
add
insl
cli
test
mov
in
xlat
shll
adc
into
sub
jl
ret
orb
ja
pop
dec
jmp
adc
cltd
or
and
adc
xchg
call
jmp
pushf
cwtl
lea
jmp
lea
jne
push
movb
jmp
add
dec
data16
je
arpl
fs
ja
adc
push
push
bt
clc
sub
test
shl
call
mov
lea
ja
call
jmp
call
mov
bt
ror
sar
and
mov
shl
mov
clc
mov
pushf
cmp
stc
stc
xor
push
repnz
jmp
pushl
lea
je
bswap
push
lea
movzbw
movzbw
xchg
movsbl
movzwl
push
mov
pop
lea
bswap
push
call
lea
jb
call
sub
push
dec
jecxz
pop
dec
push
leave
mov
ror
push
sbb
mov
mov
aad
inc
sbb
les
inc
cmpsl
add
xorl
fldl
mov
push
aaa
flds
das
shll
cwtl
mov
pop
mov
mov
mov
xchg
mov
decl
int
push
jmp
daa
cmpsl
or
mov
cmpsl
inc
lcall
idiv
jns
and
inc
jo
cmp
cmc
lods
pop
xchg
imul
dec
sub
push
int3
push
insl
cli
pop
test
call
sbb
sbb
rcrl
jo
cmp
adc
push
mov
ss
int
daa
jns
xor
jno
sarb
push
jbe
xchg
inc
movsb
nop
xor
push
pop
mov
outsb
adc
fstps
push
adc
push
add
inc
gs
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
adc
jmp
call
add
inc
gs
outsb
jne
je
imul
and
call
not
bsf
rol
movsbl
add
clc
pop
das
pusha
aaa
aam
mov
call
mov
pusha
pusha
lea
jbe
cmc
add
sub
ror
xchg
stc
mov
lea
cmp
ror
mov
add
add
jmp
pusha
call
add
inc
insb
outsl
bound
push
gs
insb
insb
outsl
arpl
add
push
outsl
insb
jns
imul
in
test
cmp
movw
movb
jmp
add
dec
outsb
je
jb
arpl
arpl
pusha
pushf
pushl
popl
movb
pushl
ret
mov
bt
cmp
cmc
stc
sub
push
mov
push
stos
pusha
push
pushf
lea
jmp
lea
call
pusha
pushf
adc
push
movw
lea
jae
sar
shr
bswap
movsbw
pop
pushf
mov
test
call
pusha
call
or
push
lea
je
call
call
jmp
add
inc
gs
imul
je
movl
lea
jb
call
lea
jne
lea
call
add
inc
gs
outsl
arpl
add
mov
add
je
dec
inc
imul
jne
inc
imul
gs
imul
jmp
cmc
dec
sbb
mov
or
sbb
not
pusha
test
add
setno
setg
jmp
call
add
inc
outsl
dec
outsb
imul
add
xchg
rcrb
mov
bsf
add
add
adc
lea
mov
sar
and
pushf
mov
push
push
bt
repnz
movb
pusha
jmp
push
lea
jne
lahf
lea
btc
xor
setge
clc
mov
push
and
test
adc
add
shl
pushl
shr
setl
mov
cmp
pushf
test
mov
movb
call
xchg
jmp
call
pop
sbb
mov
dec
je
je
cmpl
sub
push
mov
setb
xlat
jecxz
outsb
cmp
data16
cmp
ficompl
or
cmpsb
rorb
fiaddl
mov
xchg
mov
stc
add
jb
lods
stos
les
hlt
addb
mov
jg
fstps
stos
addr16
jo
daa
mov
mov
mov
out
push
mov
movsl
out
mov
stos
add
jbe
xchg
mov
aad
sub
int
xchg
and
aad
push
mov
pop
test
addr16
mov
xchg
pop
jge
ja
outsb
loopne
repnz
cwtl
filds
fcoms
and
aas
into
js
loopne
mov
mov
call
push
pop
push
xchg
mov
pop
mov
push
shrb
push
std
inc
test
pop
out
mov
push
and
cmp
sahf
add
outsb
fdivrl
mov
test
add
stc
or
lods
aas
xchg
inc
out
mov
sbb
cmp
cltd
gs
pop
sbb
mov
xchg
xchg
in
negl
testb
xchg
mov
aaa
stos
aas
adc
pop
mov
dec
iret
mov
and
dec
movsb
and
icebp
pop
stos
fbstp
mov
int3
push
movsb
repz
dec
lret
dec
cmpsb
call
gs
jb
jo
add
add
je
imul
push
jo
arpl
add
call
mov
movb
mov
mov
movw
mov
movl
lea
jmp
add
addr16
gs
bound
popa
insl
add
add
inc
gs
jne
jae
jb
add
dec
jae
imul
popa
bound
add
add
je
jns
inc
outsl
insb
outsl
jb
cmc
or
pushf
lea
jne
shr
call
xchg
movsb
cli
add
gs
sub
nop
or
pop
fdiv
lds
in
lret
insb
hlt
jmp
xlat
add
adc
jbe
dec
aam
loop
push
outsl
and
lcall
ret
mov
popf
dec
in
sbb
cmp
in
push
loope
mov
sahf
sarb
sub
outsl
add
cs
pop
push
mov
jge
push
sub
and
inc
adc
sbb
repnz
mov
dec
or
cmpl
sbb
and
cmp
jns
dec
out
adc
pop
gs
ljmp
cmp
xchg
dec
sub
pop
and
add
push
push
inc
inc
insb
gs
outsb
jne
add
add
je
jb
jo
add
mov
adc
jge
lret
idivb
inc
lods
loopne
xor
dec
xchg
bound
gs
dec
mov
jbe
sbb
mov
mov
lock
sbb
push
xchg
cmp
dec
les
sti
shlb
push
mov
lcall
xchg
popa
and
xchg
notl
fs
and
and
loopne
jbe
insl
mov
inc
sub
stos
iret
push
fs
call
pushf
mov
lea
jne
pusha
mov
pusha
push
movb
lea
jmp
clc
cmp
cmc
or
push
jmp
add
push
push
outsb
outsl
ja
bswap
movsbw
mov
jmp
pushf
pushf
cmpb
jmp
pop
pushf
jmp
add
dec
outsl
popa
fs
imul
js
add
inc
pushl
lods
bt
ror
test
add
cmc
test
stc
xor
pushf
movb
stc
stc
sub
stc
cmp
lea
mov
mov
lea
pop
pop
mov
call
add
arpl
outsb
arpl
fs
jb
aam
mov
inc
and
jmp
push
adc
jmp
jmp
movl
cwtl
lea
pusha
movl
push
pushl
popl
pusha
pushl
ret
add
push
gs
insb
popa
jae
dec
outsl
outsb
addr16
add
add
outsb
dec
gs
jo
add
add
imul
add
dec
dec
or
push
pushl
lea
jmp
pushf
movl
push
pusha
pusha
lea
jmp
push
not
pushl
pushl
call
xchg
pushf
pushl
movl
pushf
push
pusha
movl
pushl
pushf
pushf
lea
jmp
movw
lea
call
call
mov
cmp
jmp
add
dec
outsl
jbe
push
outsl
inc
js
call
pop
aas
bts
adc
pop
aaa
shl
pop
shl
shld
adc
add
add
movsbw
jmp
add
push
gs
popa
jb
outsb
je
xchg
mov
xchg
lea
mov
pusha
filds
lea
popa
std
adc
test
add
push
imul
outsb
outsl
ja
gs
popa
addr16
add
outsl
mov
call
add
imul
fs
add
push
imul
insb
insb
outsl
arpl
push
push
push
mov
mov
xor
lea
call
lahf
adc
sahf
rcr
sub
jne
mov
pop
rol
pop
pop
ret
pushf
push
lea
ja
stc
stc
not
sub
push
lea
add
call
add
inc
gs
jb
jns
jne
jae
jb
add
push
gs
imul
gs
add
push
outsb
fs
gs
popa
addr16
add
sub
out
repnz
fstpl
addr16
mov
adc
bound
orl
push
or
mov
pusha
pop
rclb
xchg
outsl
aas
in
adc
aam
and
call
jecxz
xor
xchg
mov
jbe
ss
rclb
mov
shrb
mov
repnz
and
mov
out
adc
cmp
test
adc
xor
repz
es
mov
test
adc
into
jl
mov
sbb
mov
push
jne
shl
bts
mov
pusha
bt
add
clc
call
add
inc
gs
arpl
insb
insb
push
popa
outsb
add
sub
xchg
sahf
call
add
push
gs
ja
imul
lea
je
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
outsb
push
inc
imul
jb
add
inc
gs
gs
popa
addr16
outsl
jae
movb
cwtl
movsbw
jmp
add
inc
gs
imul
bound
gs
add
leave
pushf
pushf
movb
push
lea
pushf
pushf
pushl
push
lea
jmp
inc
push
pushf
lea
jmp
lea
jbe
shld
not
bts
sub
lea
bts
mov
rcl
bsr
mov
shrd
add
ror
shr
bts
btc
mov
bsr
add
jns
mov
mov
movsbw
mov
jmp
imul
int3
lret
aad
idiv
sbb
test
push
adc
or
aaa
gs
scas
ss
scas
test
cmp
dec
and
adc
mov
mov
inc
mov
mov
sarb
popf
add
sbb
xchg
out
sarl
cmp
fistps
pusha
scas
add
xchg
and
mov
ss
das
sahf
push
jp
dec
fldl
and
jb
xorb
cmp
aaa
pushf
lds
push
insl
in
or
and
mov
jbe
jae
outsl
pushf
add
jle
lahf
andb
mov
pop
lea
adc
sub
inc
out
je
pop
stc
scas
sahf
inc
mov
lods
arpl
xor
and
ss
fwait
in
pushf
fcompl
jge
jp
das
xchg
aaa
xchg
stos
inc
shrl
inc
scas
lret
out
pushl
add
pushl
clc
sub
jmp
repnz
call
movl
pushl
movw
pushf
pusha
movl
pushf
lea
jmp
pushl
pusha
jmp
lea
call
add
add
cwtl
xor
pop
setl
push
mov
cmc
lea
jno
pusha
cmp
jmp
add
push
dec
inc
gs
imul
add
add
fs
push
dec
jne
je
inc
jns
add
xor
dec
and
pushl
movb
pushl
ret
add
inc
insb
outsl
bound
inc
jb
add
bswap
pusha
not
mov
lahf
mov
movzbl
call
lahf
xchg
mov
arpl
mov
adc
mov
jmp
cmp
pop
cmp
pushf
sub
mov
out
inc
push
insb
mov
ret
sub
into
or
sbb
lods
xchg
push
mov
jecxz
xor
das
aas
or
pop
pushf
sbb
imul
outsb
subl
inc
push
test
add
jo
imul
gs
add
call
push
push
imul
and
jne
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
incl
bswap
bswap
movzbw
mov
pushf
setne
lea
call
pushf
movl
mov
seto
jmp
add
push
push
inc
inc
jae
outsb
arpl
insb
arpl
jg
add
in
cmpsl
bts
mov
rcl
sbb
sbb
shr
mov
rol
rcr
mov
clc
mov
jge
cmp
cmc
clc
add
bt
cmc
test
xor
pusha
sub
pusha
pushl
rol
test
jmp
mov
pushl
push
movw
jmp
pushf
jmp
add
push
push
inc
inc
popa
outsb
arpl
inc
jae
outsb
arpl
jno
gs
add
jae
sub
pop
xor
into
lret
into
pop
ds
mov
cmp
mov
pop
dec
out
aas
scas
sub
cld
jo
loopne
aas
js
jecxz
mov
or
stos
dec
and
cltd
daa
add
pop
dec
ret
pusha
cwtl
loope
jns
std
jno
es
mov
xor
sbb
mov
mov
fists
push
inc
ficoms
ds
dec
das
enter
fstpl
shr
into
nop
lahf
push
xor
dec
jae
add
mov
arpl
rclb
cmp
xor
jmp
push
push
fstl
push
insl
jmp
dec
mov
push
lcall
lds
mov
mov
jns
lea
out
push
xor
jecxz
int
in
test
ret
jp
adc
push
dec
jae
pop
mov
jge
and
or
pop
je
jge
inc
xchg
stos
add
push
gs
imul
hlt
lahf
sbb
mov
and
pop
pop
addl
mov
or
pop
in
dec
fucomip
lock
shlb
outsb
cli
inc
js
addl
pop
data16
jp
and
test
sbb
sbb
mov
popl
ds
jp
aaa
jge
add
xchg
insb
sub
mov
call
push
lcall
in
and
test
pushf
dec
add
cmp
dec
sub
inc
in
pop
pushf
pushf
lea
jb
xadd
aaa
das
test
movzbl
or
shr
btr
stc
movsbw
pusha
imul
movsbw
shr
neg
cmc
lea
bt
sub
rcl
mov
cmp
stc
mov
xchg
lea
xadd
mov
stc
mov
bt
cmp
stc
cmp
jmp
pusha
lea
jb
and
xor
bt
shl
cmp
pusha
mov
sbb
sete
pusha
lahf
movsbw
lea
lea
setns
mov
push
jmp
lea
jne
push
call
mov
lea
jmp
lea
jae
bswap
mov
not
lea
lea
jmp
call
ret
lret
xlat
mov
push
in
xor
insb
adcb
mov
insb
lods
lods
repnz
int
jge
pushf
jnp
add
imul
fwait
cmc
mov
lret
fwait
arpl
mov
pop
sub
in
outsl
push
xchg
cmp
roll
cmp
mov
aaa
adc
xor
out
mov
pop
lds
pop
out
test
xchg
xor
mov
mov
orb
in
ficomps
fcoml
cmc
add
jge
jmp
cld
bt
cmp
movzbw
mov
movzbw
lea
movsbw
lea
mov
call
movsbw
call
xor
sub
and
mov
mov
and
cli
psllw
mov
jp
xor
or
mov
mov
mov
or
and
ja
movsl
xor
fsts
jp
stc
push
jo
outsl
mov
mov
int3
cmp
mov
and
rcrl
push
push
pop
aaa
lds
inc
lds
mov
push
ja
ucomiss
dec
test
xchg
add
or
xor
insb
xchg
outsl
aas
jmp
cltd
ljmp
jno,pn
sub
cmp
out
dec
scas
sub
repz
ret
test
ret
push
movsb
mov
pop
repz
outsl
push
insl
in
lcall
xor
outsb
pop
add
stc
es
insb
int
mov
cmpsb
aam
push
movsl
mov
sti
add
call
push
cmpb
fbld
add
inc
mov
sub
out
push
cmp
add
add
pop
cmp
sbb
jb
sbb
jle
call
push
cmpb
and
xor
daa
mov
xchg
cmpb
mov
inc
xchg
sub
inc
mov
hlt
repz
xor
jo
mov
mov
fisttps
jge
das
movsb
test
mov
xchg
jo
js
mov
lret
out
addb
xor
lahf
push
inc
mov
fcmovnbe
sub
sub
mov
imul
adc
scas
dec
xor
loopne
jne
mov
cltd
xchg
push
mov
out
cmp
ss
add
xchg
fcoml
rolb
int
scas
xchg
das
aas
xorb
mov
mov
lock
in
lods
adc
jge
jmp
bt
call
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
add
outsl
bound
push
imul
imul
add
adc
in
scas
push
popa
dec
insb
sub
bnd
fisttps
addr16
inc
jmp
xchg
cli
sub
sub
mov
pushl
sbb
fmuls
mov
out
out
aam
lods
xorl
roll
dec
or
mov
xchg
iret
lret
pop
and
aas
fidivs
pop
adc
inc
fmull
not
push
pop
dec
jmp
mov
daa
ss
push
jmp
push
sub
popa
dec
mov
mov
push
cli
xor
enter
jle
inc
add
xorb
mov
aad
and
jns
xchg
fimull
aad
enter
shl
pop
ss
mov
int3
movsb
adc
imul
aas
cli
iret
in
popf
jle
xchg
sbb
adc
dec
in
mov
clc
mov
lods
and
jle
or
cmp
jmp
sbb
xchg
mov
mov
loope
xchg
jl
shll
in
mov
test
push
jle
rolb
dec
mov
xchg
cli
shrl
fsts
pop
push
addr16
push
outsl
push
loope
xor
nop
dec
and
sub
inc
mov
pop
jbe
jl,pn
cmp
dec
mov
out
lcall
sub
aad
insb
sbb
push
jnp
mov
das
in
nop
mov
adc
stos
mov
sbb
and
addl
or
sbb
xor
gs
out
sbb
mov
fidivl
mov
push
stos
xor
lds
popf
out
div
cmp
pop
cltd
or
dec
push
cmp
xchg
scas
add
in
scas
inc
fstpt
sbb
imul
push
icebp
jno
mov
adc
xchg
pop
lret
xchg
cwtl
mov
gs
wbinvd
sbb
mov
inc
xchg
movsb
test
push
ficompl
js
sbb
mov
or
push
adc
xlat
movsl
cmp
shrl
jl
pop
or
push
xorb
xchg
jb
sbb
dec
ret
mov
and
cmp
nop
xchg
push
cmpsb
mov
mov
dec
sub
mov
fs
sbb
xchg
jge
sub
shl
dec
mov
sub
scas
ljmp
insl
lock
sbb
xchg
in
pusha
mov
ljmp
and
jmp
icebp
xor
mov
mov
push
out
js
xor
adcl
subl
incl
push
mov
out
js
fimull
gs
repz
movsb
insb
les
add
shlb
cmp
cwtl
jmp
add
gs
jne
test
pop
addr16
and
sub
and
cmc
rcrb
xchg
dec
adc
adc
dec
cs
xchg
cwtl
push
iret
es
push
jecxz
jmp
mov
push
dec
dec
popa
popa
stos
scas
jecxz
mov
jns
out
repnz
lcall
imul
arpl
loop
sbb
ret
push
sbb
jo
xchg
xchg
pop
sbbl
mov
clc
rclb
inc
loop
das
xchg
mov
xor
in
push
fcoms
inc
out
ret
test
or
adcb
mov
in
rclb
scas
repnz
inc
jl
pop
cmp
xor
popa
or
and
push
in
nop
inc
cmp
jge
jne
pop
dec
insl
mov
cmp
jns
sbb
aaa
adc
in
fwait
jno
shrl
leave
cmp
mov
les
mov
and
pop
imul
mov
call
cmp
shl
fsubrs
cmp
dec
aaa
add
outsb
adc
push
jl
jmp
mov
jg
jns
ror
insb
jb
adc
add
pop
pop
or
xor
fiaddl
test
imul
cmp
dec
daa
mov
jp
mov
test
ja
add
ror
rcll
into
mov
pusha
xor
sub
inc
pop
lock
lret
mov
sar
pop
filds
jae
push
mov
aas
outsl
jae
sub
inc
jl
inc
dec
ja
mov
xor
and
xor
jle
sub
aaa
pushf
scas
into
jmp
fnstcw
les
pop
ret
pusha
ret
mov
lods
addr16
cwtl
push
fcomps
xor
add
xchg
sbb
loopne
pop
nop
pop
test
leave
mov
jle
xchg
push
sbb
shlb
mov
or
mov
in
cmpsb
xchg
jae
insl
xor
lcall
dec
mov
lret
out
push
inc
sbb
cmp
daa
in
mov
ljmp
push
dec
mov
fiaddl
sub
ss
add
into
push
cmpsl
mov
dec
movsb
xchg
cli
mov
sbb
shll
faddl
sbb
ds
dec
or
push
ret
dec
imul
cmp
lahf
inc
inc
sub
push
pushf
xchg
mov
mov
dec
pop
jae
inc
test
xchg
js
in
sysret
cltd
push
icebp
jb
sbb
cmp
pop
jo,pn
imul
les
lea
adc
ss
xor
or
and
jl
lods
stc
ds
lock
in
jmp
lods
jge
rorb
xchg
push
shr
jg
mov
jecxz
negl
push
out
mov
or
and
adc
jb
in
push
or
mov
inc
cmp
int3
push
jnp
sahf
repnz
into
push
push
and
cwtl
icebp
and
sbb
daa
or
test
pop
pop
or
push
test
std
es
sub
jg
cli
lds
inc
into
movsb
scas
cmpsb
sbb
stc
ret
or
leave
mov
jne
sahf
push
mov
push
mov
adc
std
inc
sbb
xchg
insl
fiaddl
pusha
xchg
sub
in
sbb
test
xchg
cmp
in
mov
add
mov
add
lcall
cld
sahf
call
xchg
inc
sbb
idiv
xchg
das
pushf
dec
mov
inc
test
inc
inc
xchg
es
scas
loopne
jbe
or
adc
popf
sbb
jge
test
shll
fldl
sub
push
mov
movsl
sub
test
lea
inc
xor
push
and
xchg
loopne
loopne
push
push
add
xlat
test
iret
jmp
sahf
mov
fistl
das
adc
jno
mov
sub
xchg
add
mov
xchg
push
outsb
rolb
mov
shlb
jp
in
xchg
xchg
lods
lods
push
jle
scas
cmc
ficoml
push
int3
pop
imulb
xchg
push
pushf
jns,pn
or
sub
xor
xor
mov
sbb
push
adc
dec
sub
jae
fidivrs
out
jae
push
dec
lds
jb
shrb
adc
or
push
jne
jbe
push
jbe
inc
mov
mov
bswap
cmpb
nop
mov
push
pop
push
inc
xor
dec
cmpsb
dec
add
or
scas
test
cli
pushf
and
sbb
jmp
leavew
jmp
mov
rolb
cltd
add
popa
push
scas
xchg
or
pop
inc
pop
inc
sub
mov
dec
loop
int3
push
data16
cmp
leave
sarb
jne
fistl
and
cmp
jo
rcll
aas
outsl
icebp
push
cli
out
ficoml
dec
data16
mov
mov
dec
in
movl
and
or
pop
push
xor
dec
scas
icebp
inc
adc
and
mov
pusha
lods
xor
loopne
or
xchg
out
sbb
xor
mov
mov
sbb
les
push
pusha
ds
sti
in
in
pop
movsb
in
push
clc
test
fbld
lock
loop
dec
or
inc
mov
mov
inc
ljmp
xor
ljmp
js
jge
push
into
xchg
mov
testl
jbe
inc
lret
push
jbe
scas
das
jmp
aad
mov
pop
scas
sub
push
sbb
test
jp
fsubrl
xchg
jp
xchg
push
jp
push
cli
sbb
enter
out
jae
jns
or
and
mov
out
ja
outsl
mov
movb
lret
sbb
out
inc
mov
adc
cmp
scas
mov
xchg
fisttps
bswap
inc
push
or
pop
addr16
xchg
ss
mov
jb
ret
sub
mov
shrb
enter
pop
xor
rol
jge
fsub
mov
mov
dec
clc
fwait
add
push
adc
mov
adc
call
pushf
adc
iret
and
mov
lock
arpl
popf
cmpsb
inc
push
sub
sub
fwait
and
xchg
loop
enter
gs
push
mov
in
sub
std
cwtl
data16
fwait
call
repnz
movsl
or
adc
mov
rcr
js
jno
jno
in
sbb
push
fsubp
push
dec
xor
es
rolb
lds
js
jne
mov
adc
inc
sub
stos
push
imul
sub
push
pop
lahf
popa
popf
scas
addb
retw
dec
leave
jecxz
push
pushw
mov
cmp
pop
out
mov
push
lcall
jge
cltd
icebp
xchg
insl
repz
lock
cmc
in
or
pop
imul
mov
jo
test
push
inc
in
popa
mov
lahf
pop
loopne
push
dec
mov
inc
sbb
cmp
testl
mov
sub
jg
push
int3
cmpsb
cmpsb
and
push
daa
testb
add
movsb
aam
mov
movsl
push
scas
and
mov
sub
and
jl
cmp
or
mov
test
es
or
loope
ret
xor
lods
push
add
cwtl
push
out
es
push
jmp
mov
cmc
cmp
adcb
and
inc
inc
jne
lret
and
inc
xor
clc
add
sbb
and
decl
gs
ljmp
les
cmc
cmp
adc
sbb
adc
mov
lods
xchg
pop
roll
mov
mov
std
out
and
fisubl
jnp
int
cmp
xor
fistpll
and
dec
inc
push
int3
popf
sbb
xorl
rcll
sbbb
out
out
mov
xor
out
hlt
and
aad
lcall
aad
in
out
bound
pop
or
ss
mov
call
push
xchg
mov
repnz
incl
mov
cli
or
les
push
cmpsb
and
test
in
es
push
rcrb
and
fisubrl
push
fs
xchg
pop
mov
xor
push
jb
mov
lds
pop
pop
cmp
out
call
xchg
lea
jle
out
xor
xchg
jne
rorb
iret
or
sub
bound
mov
and
cmc
push
mov
push
lret
fcompl
bound
mov
lods
pop
cmpl
push
add
jne
testb
inc
mov
jne
and
mov
add
je
out
arpl
lock
mov
add
mov
xor
fadd
fildll
lds
mov
into
add
dec
dec
aad
in
inc
sub
imul
mulb
popa
mov
cmp
sti
test
or
rorb
pop
add
fsubrl
xchg
inc
clc
push
push
jecxz
fldcw
popf
cmp
jb
jecxz
lock
leave
or
pop
or
mov
and
jbe
mov
popf
inc
sahf
in
add
popf
inc
sbb
cmp
push
lods
js
shl
push
std
mov
xchg
in
mulb
jle
repz
sub
pop
mov
sub
sub
mov
jno
add
dec
cmc
ficompl
push
int
inc
sub
ret
hlt
test
imul
out
addl
mov
orb
lea
nop
shll
add
je
rorl
pop
inc
mov
popf
xor
jp
jnp
xor
mov
lock
cmc
or
xor
negb
dec
test
fs
cmp
scas
stos
inc
in
inc
mov
insb
dec
push
sbb
add
lock
dec
cmp
negl
test
xchg
sub
sahf
hlt
add
and
aaa
in
daa
cltd
inc
add
adc
test
ret
sbb
mov
mov
loopne
jnp
sbb
sub
dec
rorb
xor
call
adc
in
cld
lods
adc
mov
cs
add
pop
xor
into
int3
sub
rclb
aam
mov
ret
mov
mov
or
addl
test
dec
in
xchg
cmp
push
dec
inc
pop
xchg
subl
fldt
cmc
and
out
jnp
imul
mov
inc
fcoml
jnp
cmpsb
add
xchg
int
test
outsb
out
adc
dec
std
sahf
sub
mov
or
push
test
ljmp
mov
cmp
sbb
and
cmp
sbb
movsb
stos
aad
sub
out
dec
fdivrs
loop
iret
push
imul
mov
das
jmp
loopne
repnz
jbe
cld
outsl
add
mov
cmp
push
xor
sub
or
cmp
leave
xor
pusha
jae
xor
mov
outsl
data16
jl
and
cmp
push
arpl
sarb
jns
jecxz
and
and
inc
lcall
out
in
sarl
dec
or
push
cltd
rorb
sbb
inc
xor
lret
iret
fwait
arpl
cld
add
hlt
sarb
lret
mov
adc
rolb
testl
fwait
jle
inc
xor
inc
xor
sbb
test
std
mov
push
lcall
imul
repz
adcb
fs
mov
adc
inc
jae
rol
je
sub
inc
mov
xchg
pop
push
test
cs
xchg
cmp
jmp
int
fsts
pusha
roll
test
jns
int3
add
sbb
popl
fildll
push
or
cld
lea
je
push
mov
ja
add
sti
movsb
pop
movsb
pop
mov
jnp
sbb
mov
pop
xchg
or
out
nop
mov
jp
pop
jnp
lret
jne
adc
daa
mov
jne
push
ret
and
pop
lret
sbb
xor
arpl
stos
jg
xchg
dec
jne
or
cltd
cmp
fwait
ss
fnsave
out
and
xchg
aad
jmp
cmc
mov
xchg
loopne
inc
sarl
dec
fcoml
dec
mov
xor
shlb
pop
lock
rolb
das
add
fiaddl
push
dec
sub
outsb
fidivrs
das
dec
adc
push
push
cmp
repnz
cmp
insl
jbe
or
lea
test
sahf
xchg
and
jbe
les
in
sub
lods
inc
mov
scas
fmull
xor
xor
jmp
out
jns
mov
inc
aas
int
sar
cmp
jle
cmp
pusha
pushf
cmp
pusha
loope
aad
cld
mov
push
mov
push
inc
sub
pop
cmp
xor
int
scas
push
sbb
and
int3
mov
add
adc
mov
jmp
daa
inc
fstpt
cltd
movsb
fwait
rcll
xchg
imul
sub
mov
das
arpl
mov
jno
fistps
push
dec
hlt
sub
jge
xor
adc
lock
push
mov
outsb
fistl
ror
xchg
lods
jle
stos
aas
lea
ljmp
or
inc
push
dec
or
xor
dec
dec
push
push
jg
jbe
and
mov
xchg
cmpsb
fucomip
sbb
or
jmp
pop
cli
cli
dec
fs
fsts
hlt
icebp
mov
in
mov
aad
cwtl
jp
pusha
imul
pop
or
sbb
fdivl
rorl
fdivl
les
pop
dec
sbb
mov
cmp
inc
outsl
into
xchg
add
xchg
aas
sub
loopne
cmp
imul
adc
xchg
imul
sbb
mov
xchg
out
into
scas
bound
mov
scas
xor
fimuls
pop
dec
lahf
mov
test
loope
popa
adc
fdiv
or
sbb
jge
dec
shll
aaa
dec
ret
mov
in
xor
push
xchg
enter
or
mov
mov
sbb
dec
sub
mov
sub
sub
jmp
loopne
push
cmpsb
arpl
jo
call
js
fincstp
sub
in
xchg
negl
rcll
iret
ret
xor
lcallw
xchg
cltd
icebp
arpl
fists
and
dec
mov
stc
mov
jle
jge
and
inc
mov
xchg
int
pop
leave
std
fidivs
push
mov
xchg
or
sbb
mov
xchg
cli
in
in
xchg
push
sti
das
scas
jmp
out
aam
add
movsb
test
je
cmpsb
cmp
das
rorl
cmp
sub
dec
add
inc
mov
adc
mov
lahf
int3
dec
movsl
jl
adc
mov
jmp
idivb
pop
push
cltd
scas
or
stos
dec
push
enter
jbe
jecxz
popa
inc
pop
js
and
aaa
movsb
and
mov
mov
cli
sahf
fs
add
pop
cmp
sub
in
sub
dec
int3
in
clc
outsl
sub
mov
fistl
fwait
jle
pop
dec
hlt
stc
fs
sbb
sub
push
xchg
fdivl
je
jne
xor
jae
mov
mov
sbb
inc
push
lods
or
xlat
push
inc
sub
fisttpl
dec
push
sub
fdivrl
xor
mov
pop
dec
fistps
fcoml
daa
mov
inc
pop
filds
jo
push
in
std
push
and
mov
fptan
mov
sarl
dec
mov
and
imul
push
adc
rcl
dec
mov
repnz
cmp
mov
mov
ret
jg
les
lahf
outsb
mov
int
adc
into
dec
mov
test
xchg
in
fsubrs
enter
dec
pop
subl
dec
cwtl
jo
cmp
cmp
xorl
xor
mov
sarl
mov
xchg
mov
lds
inc
je
mov
mov
ja
mov
sub
clc
mov
decl
xchg
cltd
out
jb
dec
adc
imul
clc
mov
push
dec
xchg
xor
jbe
scas
sub
je
leave
xchg
bound
push
ds
ljmp
xchg
mov
pop
cwtl
mov
stc
dec
mov
pop
cmc
dec
aad
jg
mov
ficompl
xchg
push
cmp
dec
enter
sub
sahf
pop
push
add
xchg
add
lcall
pop
and
adc
mov
popf
into
repz
push
mov
stos
aam
cmp
push
mov
ja
negl
and
in
movsb
lods
xchg
shl
cwtl
ret
daa
pop
lods
leave
mov
jns
xchg
push
sub
cmpb
pop
inc
mov
sbb
xchg
mov
lock
xchg
xor
add
shrb
sub
js
jo
fisubrl
cmpsl
mov
fs
jnp
iret
push
mov
cmpsl
mov
and
push
loopne
mov
rorb
nop
dec
pop
leave
adc
cwtl
pop
stc
jle
sbb
ficoms
pop
pop
or
sub
mov
nop
jnp
les
rolb
mov
pop
icebp
push
inc
fisubs
shll
mov
lret
cwtl
data16
push
data16
out
daa
jg
lret
sbb
sbb
je
inc
sahf
xchg
mov
mov
sub
push
data16
sub
bound
lock
cwtl
vsqrtps
nop
aam
jl
push
shrl
int
cmc
push
xchg
mov
sub
adc
xor
inc
mov
sbb
jns
das
lea
xor
pop
jmp
and
push
xchg
dec
into
mov
lret
pop
outsb
adc
inc
cli
add
or
pop
movsb
repnz
xor
xchg
xor
mov
iret
mov
jge
fists
je
in
fcmovb
jns
xor
mov
jbe
pushf
mov
push
add
sub
mov
jae
je
pushf
sti
mov
int
inc
fldl
mov
mov
test
jecxz
adc
jle
mov
jno,pn
sub
enter
fcmove
xor
pop
mov
jg
pop
or
sub
sbb
xor
cld
xchg
cmpsb
mov
mov
or
xor
jo,pt
cmc
mov
out
repz
cmc
cs
negl
mov
inc
pusha
jno
mov
pushf
xchg
push
call
mov
adc
aad
mov
dec
in
jecxz
stos
rclb
inc
xchg
cltd
xchg
ljmp
leave
pop
push
es
push
mov
mov
lahf
out
rcrb
inc
mov
add
loop
in
inc
cltd
in
rclb
cli
repnz
stc
mov
mov
cwtl
ret
push
leave
xchg
push
in
mov
out
iret
jge
faddp
push
mov
push
into
lods
out
ficompl
test
dec
jl
cmp
cmc
inc
push
ret
jg
cwtl
aaa
cmp
jecxz
test
xchg
test
stos
fldcw
gs
jae
dec
sbb
test
pop
mov
push
inc
sub
lahf
cmp
xchg
mov
add
test
or
hlt
mov
in
cmp
imul
cmpb
pop
ret
mov
inc
test
int
pop
adc
or
xchg
mov
call
add
inc
lds
mov
sub
stc
in
xchg
aaa
mov
xchg
outsb
daa
decl
repnz
sbb
adc
test
cvtpi2ps
lea
add
lahf
cwtl
lret
and
fisttps
cs
push
xchg
mov
imul
sub
sbb
pop
or
mov
xchg
jp
push
jae
xlat
adc
inc
std
jnp
push
outsl
dec
out
in
cltd
jne
xchg
jns
nop
cmp
shl
data16
inc
in
and
imul
and
sbb
jg
fisubs
mov
fwait
dec
jae
loopne
or
out
scas
xor
test
idivl
stos
lret
add
mov
add
jb
jb
sbb
xchg
jl
mov
pop
xor
test
pop
adc
xchg
mov
ret
insl
mov
sub
sarb
enter
mov
fsubl
sub
mov
inc
test
add
lahf
fwait
mov
aam
inc
out
mov
cs
stos
or
in
xchg
cli
fwait
stos
jl
test
adc
leave
inc
loopne
test
test
xchg
xchg
mov
cltd
icebp
ja
je
dec
mov
mov
repz
mov
scas
test
cmp
mov
jge
dec
in
lods
push
out
jg
int
loopne
inc
cmp
adcl
adc
lods
imul
mov
push
push
push
ret
or
adc
and
jbe
addr16
cld
fistpl
mov
inc
sub
jl
repz
fnsave
xorb
xor
add
push
scas
shlb
shlb
movsl
test
jbe
mov
xchg
fsubrl
jo
xchg
push
jnp
repnz
je
aas
int
push
jmp
or
outsl
mov
inc
or
xchg
dec
adc
jecxz
mov
cwtl
add
popa
rorl
mov
jne
dec
mov
popl
scas
add
sub
ljmp
sub
imul
iret
test
sub
ds
or
or
aas
push
in
cli
dec
sbb
outsl
xor
in
and
and
dec
mov
inc
jle
ja
mov
xor
sub
push
mov
cld
pop
push
loope
bound
push
push
shll
into
shll
cwtl
ljmp
mov
ljmp
imul
jmp
outsb
pop
pop
inc
fsubrl
loope
icebp
call
les
sbb
push
rclb
pop
pushf
repz
shlb
jns
add
adc
xchg
insl
out
aas
and
xor
mov
fdivr
sub
mov
popf
push
push
iret
xchg
pop
into
inc
nop
xchg
pusha
jo
mov
nop
nop
push
test
out
cmp
push
shl
xchg
inc
or
jg
ret
cli
sar
loop
insb
cmpsl
ja
sbb
imulb
cwtl
test
icebp
cmp
incl
aas
fnsave
sbb
int3
leave
mov
hlt
flds
sbb
mov
jne
mov
fisubrl
add
adc
mov
inc
test
loop
xchg
xchg
cmp
push
cmp
mov
pop
cmp
adcl
leave
stos
ljmp
jl
cmpsl
adc
addb
mov
outsb
mov
pop
sbb
std
cmp
popw
in
js
stos
lret
repnz
jo
and
std
jg
cmp
mov
cmpsl
add
mov
pushf
mov
std
stc
je
cs
fldcw
out
sbb
mov
sub
mov
cmp
jbe
mov
jns
lock
fwait
or
jl
sbb
cld
leave
in
es
jge
stos
adc
pushf
push
adc
push
add
scas
mov
loope
jb
out
outsl
cmp
jb
je
andl
push
movsb
out
mov
dec
andl
xchg
or
push
inc
rclb
inc
xor
sub
jo
and
ss
push
fsub
and
sbb
loope
enter
mov
jbe
lret
and
xchg
into
mov
dec
sarl
ret
stos
add
jg
add
cli
stc
sub
ja
jne
xor
mov
mov
insl
negb
xor
enter
out
es
pop
daa
or
aaa
adc
pop
mov
cmpb
lcall
mov
shll
mov
mov
outsb
cmc
and
xchg
pop
inc
sbb
imul
lahf
jl
js
push
mov
pusha
mov
pop
jl
lret
nop
xchg
fdivr
stc
cmp
xchg
imull
rorl
cld
sbb
mov
in
dec
jno
mov
mov
adc
test
and
dec
into
pop
sub
test
jl
xchg
icebp
idivb
es
inc
jns
mov
es
mov
outsl
cmpsl
cmpb
imul
jne
outsl
icebp
push
pop
sub
sbb
and
xlat
orb
push
sub
and
xor
sbb
inc
movsl
iret
mov
enter
adc
xchg
push
aam
je
imul
popa
jns
rcr
aaa
ss
or
imul
adc
adc
xor
inc
cmp
test
or
pop
sub
pop
pop
sti
mov
aam
bound
movups
jns
cmp
mov
fs
ret
sbb
inc
dec
sub
push
insl
es
sbbb
sub
add
cmp
sub
dec
les
in
ret
mov
aam
mov
pop
mov
xchg
push
mov
dec
lods
ror
rcrb
loopne
in
sbb
dec
cmp
mull
or
lahf
push
rcrb
xchg
mov
push
xor
xlat
cld
scas
or
jae
add
dec
sbb
push
push
xchg
mov
mov
cmc
stc
mov
cmp
mov
gs
inc
rorl
jp
adc
mov
pop
cli
stc
cmp
mov
test
cmovl
mov
f2xm1
xchg
push
outsl
add
add
aas
sub
pop
xchg
daa
into
rcrb
std
pop
or
xchg
dec
mov
call
fs
sub
sub
ds
outsb
and
dec
pop
jno
or
push
and
push
dec
cmp
push
sub
xchg
jae
std
icebp
addr16
sub
pop
adc
in
mov
ret
je
adc
je
aas
call
cmp
sbb
aas
mov
fdiv
into
test
mov
outsl
push
adc
mov
arpl
inc
jbe
cmc
data16
pop
cmc
mov
clc
sahf
leave
and
insl
filds
sbb
jnp
pop
lock
inc
lret
sbb
push
inc
mov
fbstp
lods
sbb
mov
lods
dec
aam
pop
mov
jmp
xor
or
sahf
jmp
and
lods
das
cli
mov
adc
scas
mov
sub
mov
sti
cs
dec
dec
jecxz
fs
out
mov
imul
ja
sub
mov
adc
arpl
dec
out
dec
jns
jmp
pop
push
mov
push
xor
cmc
iret
ret
in
fisttpll
mov
push
shlb
xchg
sub
pop
stc
fbstp
int3
jge
inc
add
shlb
sbb
jb
stos
loop
lahf
ss
popa
sbb
mov
ss
test
mov
jnp
jbe
mov
pop
and
push
lods
stc
addb
ljmp
pop
lcall
mov
xchg
jae
pop
mov
push
ror
jp
jno
popf
xchg
lret
lds
cs
pop
leave
xchg
sahf
mov
movsl
int3
cmc
repnz
jbe
mov
mov
push
cmp
mov
or
ja
mov
sub
cmp
xchg
sub
ficomps
bnd
jnp
xchg
mov
cmp
add
ljmp
or
fcmovb
loop
xlat
dec
arpl
pop
add
daa
jl
clc
push
mov
add
in
adc
nop
dec
into
out
pop
jge
sbb
scas
pop
repz
adc
lods
or
outsl
sahf
push
push
aad
cmc
movsl
imul
stos
es
int3
adc
inc
inc
xchg
fldcw
adc
mov
and
nop
dec
adc
mov
jecxz
sahf
ret
test
push
xchg
fwait
sahf
fisubl
incb
cmpl
add
into
inc
sub
xor
inc
stos
mov
pop
mov
sbb
cmp
add
sarb
cmp
inc
orl
jno
and
fistpll
push
stos
dec
lods
xor
fsubrs
adc
daa
je
jne
jmp
sub
add
sub
xchg
xchg
aam
sahf
clc
lds
test
cli
das
daa
insb
hlt
leave
or
inc
jge
popa
jno
add
mov
int
mov
pop
cltd
dec
xchg
imul
dec
jae
mov
mov
and
push
mov
xor
xor
jmp
loop
arpl
fistpll
in
lret
mov
test
je
or
add
push
in
rorl
out
jg
push
sub
hlt
mov
cs
mov
xorl
pop
leave
icebp
cmpsb
daa
xchg
aas
loopne
sub
nop
je
mov
int
xchg
push
inc
and
lods
out
sub
xor
insl
xor
fisttpl
pop
inc
fmul
popf
add
pop
cmp
xchg
jo
mov
sbb
mov
xchg
and
add
adc
cmp
fcoml
sbb
add
push
xor
mov
ret
jae
test
pop
cmp
xchg
arpl
or
rcrl
adc
or
pop
test
mov
pop
ss
inc
in
das
xchg
jae
add
popf
mov
in
mov
lret
popf
sub
cmc
push
cmpl
movlhps
add
push
adcl
jno
mov
shrb
incb
pop
addl
adc
xchg
jecxz
xchg
subl
scas
inc
addr16
add
xchg
arpl
jecxz
loopne
cwtl
pop
std
jb
lret
jo
mov
arpl
cmp
mov
je
push
inc
sub
into
jl
fs
cli
movnti
inc
fbld
fildll
loopne
mov
sbb
or
xchg
push
cmp
sarl
push
inc
jl
jp
subb
jns
insl
shl
pop
aas
jno
cmp
cmpsb
pop
pop
pop
cmp
and
jl
jnp
mov
outsb
inc
popa
arpl
addr16
ljmp
mov
xchg
sbb
xor
pop
cmp
mov
xor
adc
inc
fcmovnbe
fnsave
andl
cmp
bound
sarb
pop
cmp
jno
pop
in
in
xor
mov
pop
lret
scas
jnp
in
cltd
insl
fstpl
in
bound
inc
das
xchg
aaa
cmp
pop
xchg
lcall
xchg
cld
inc
cmp
mov
orl
mov
mov
push
inc
sbb
mov
pop
adc
mov
rcrb
loope
pusha
pop
inc
pmaxsw
std
mov
and
aaa
pop
cli
and
sbb
movsb
scas
mov
push
adc
jp
enter
daa
mov
pushf
mov
jp
lcall
push
testl
fs
mov
adc
pop
cmc
mov
sbb
mov
in
lahf
mov
lods
dec
out
jmp
lret
pop
shlb
addr16
sbb
push
mov
jmp
mov
jp
mov
or
sub
pushf
sahf
add
ljmp
add
push
aad
or
xchg
sub
and
jno
pop
sub
movl
and
fs
xchg
ret
mov
out
inc
scas
push
outsl
fcmovbe
xchg
mov
mov
sarl
jg
hlt
cltd
pop
in
jecxz
xchg
outsl
test
inc
ds
js
sbb
mov
ja
push
mov
movsl
popf
jne
sbbl
orl
sub
pop
nop
mov
rcrb
pop
xchg
add
stc
mov
add
inc
jg
sub
sbb
ja
add
jg
rolb
outsl
mov
mov
imulb
push
ja
loop
fnstcw
inc
push
cmc
pop
adc
enter
jae
cmp
fwait
jmp
xchg
lock
aam
lahf
sbb
rcll
mov
mov
mov
imul
cmp
sbb
adc
sti
mov
mov
loop
push
stos
ljmp
mov
outsb
mov
mov
sub
ljmp
cli
add
push
mov
add
rcrb
add
out
stos
test
add
inc
or
cmp
int3
bound
dec
fadds
repz
xchg
mov
xor
aad
pop
icebp
mov
and
cmp
idivb
jae
fldl2e
lock
adcb
lock
pop
mov
xor
cmpsb
stc
add
mov
popf
fs
outsl
arpl
int
sbb
cs
push
popf
dec
divl
xchg
out
cmp
sub
cmp
data16
jp
mov
adc
push
xlat
punpckhdq
jae
mov
xorb
jecxz
xor
dec
loop
sbb
jecxz
jmp
mov
mov
ljmp
test
or
fldt
push
xchg
xor
adc
icebp
or
cmp
bound
add
mov
push
inc
mov
pop
push
addb
jne
cmp
pop
add
subb
test
fdivs
cmpsb
rcrb
and
les
lods
es
dec
enter
mov
mov
das
mov
cld
pop
lock
aas
fdivrs
xor
xor
fwait
lret
push
arpl
popa
in
push
xchg
mov
mov
and
adc
dec
dec
jno
pushf
xor
xor
es
cmp
js
ret
test
int
mov
xchg
repnz
sub
aas
sbb
inc
inc
jne
xchg
fdiv
movsl
cltd
test
sbb
adc
mov
dec
fnstcw
in
fwait
add
cli
dec
xor
nop
dec
sub
insb
mov
aad
and
cltd
adc
cltd
pop
cmpb
es
test
gs
mov
jo
loopne
jbe
mov
lahf
lods
mov
or
mov
les
imul
pop
push
scas
lock
shll
sbb
fucomip
xor
mov
pop
cli
sub
test
cld
mov
and
jns
lods
and
shlb
int3
loop
pusha
add
sbb
and
dec
mov
pushf
cmpsl
call
aad
adc
xor
xchg
pop
jle
repnz
sub
fldt
cmpb
jp
sub
adc
push
lock
cmp
stos
scas
sarb
aas
in
mov
inc
js
cmc
lea
fstl
lds
cmp
mov
ja
ds
fwait
cmp
pop
cmp
mov
jb
test
gs
mov
loop
push
pop
scas
sbb
push
stos
incb
out
or
leave
pop
outsb
andnps
pusha
mov
daa
les
fnsave
sbb
rcr
bound
popa
test
cltd
jmp
push
mov
inc
mov
loope
negl
enter
fs
adc
pop
or
xlat
dec
push
daa
sbb
sbb
fprem
lcall
or
push
inc
imulb
fcoms
fsts
xchg
ss
subl
shr
mov
jp
mov
hlt
mov
sahf
mov
cmp
test
inc
in
dec
lods
lahf
out
and
mov
jnp
insl
cmpsb
push
dec
mov
scas
addr16
pop
imul
ja
jmp
lods
test
and
jns
in
pop
adc
fnstenv
mov
cmp
iret
repnz
out
or
push
mov
scas
shl
or
pushf
adc
dec
cmpsl
pop
sub
into
loop
xchg
dec
lea
mov
insb
sbb
push
mov
sbb
rorb
or
and
imul
xchg
test
rcrb
mov
or
sbb
pop
jnp
xchg
cltd
pop
int3
or
in
clc
dec
dec
cmpsl
sub
mov
mov
xorb
test
int
mov
std
jmp
in
mov
xchg
mov
xchg
xchg
aam
hlt
and
jecxz
insl
cmp
arpl
notb
pop
testb
hlt
insb
in
pop
aas
fcmove
iret
fs
shrb
adc
add
shr
fists
dec
fisubl
xor
xor
xor
jns
in
jmp
pop
cmp
xor
pop
lds
out
sub
ss
inc
jne
inc
mov
lahf
andb
fsubrs
testb
in
sbb
mov
or
ret
sar
ror
xor
cmp
fidivl
out
loopne
push
repnz
jge
push
into
and
xor
data16
mov
xchg
mov
or
int3
dec
xchg
adc
pushf
stc
popa
cwtl
or
test
je
movsl
icebp
fstps
push
in
mov
mov
loop
push
add
adc
xchg
inc
mov
jbe
loope
sbb
or
push
push
lahf
jge
sarl
xchg
inc
or
les
pop
lret
pop
clc
or
pop
lock
mov
cmp
inc
sbb
pop
xchg
mov
dec
sbb
arpl
repnz
cmp
dec
mov
mov
into
mov
jmp
jne
cmp
sbb
in
bound
inc
mov
dec
fistpl
xor
jb
fcomi
mov
and
test
pusha
add
fstps
js
sti
inc
lods
push
lahf
stc
push
pop
dec
jnp
adcb
jne
into
sbb
add
pop
jle
cmpsb
pop
hlt
sbb
jmp
std
cmp
aaa
inc
sbb
sti
add
sbb
out
sbb
add
stc
std
xchg
mov
ret
addb
sbb
xor
nop
mov
stos
fildl
cs
cld
scas
add
shll
sub
je
and
cmp
aad
push
int3
cld
sub
push
sbb
das
aas
xchg
mov
stc
mov
lock
mov
fpatan
out
and
push
les
insl
outsb
and
ljmp
pop
dec
mov
cmp
xor
fimuls
dec
pusha
pop
inc
jne
add
mov
jg
js
mov
or
xchg
add
adc
jmp
xor
jle
out
jne
pop
mov
frstpm(287
xchg
xor
jae
int3
movsb
lds
jle
sbb
loope
pop
xchg
addr16
pop
imul
shll
push
arpl
jmp
xchg
pushf
add
fwait
xchg
pop
push
and
inc
sub
mov
movsl
into
mov
mov
adc
xchg
push
xchg
fs
mov
test
mov
mov
mov
add
gs
out
mov
mov
ficoml
or
and
adc
lret
push
jmp
xor
inc
cli
nop
xor
and
xlat
or
test
push
es
dec
inc
loop
sahf
orl
out
sub
shld
pusha
rolb
std
inc
xchg
out
mov
cmp
mov
jnp
fwait
sub
adc
aad
lods
faddl
mov
movsb
int
test
lock
cmp
roll
jmp
inc
push
mov
lret
jp
add
push
adc
mov
out
je
shr
push
lret
inc
mov
std
in
xchg
pop
xchg
addl
mov
jl
jb
push
arpl
cmpsl
xchg
jbe
pop
fistpl
sbbl
mov
rcl
addr16
in
sbb
jbe
inc
mov
mov
aas
or
mov
dec
sub
dec
test
add
inc
popa
xchg
popf
push
or
mov
jb
fcoms
insb
add
pop
mov
xchg
jmp
lret
popa
sbb
mov
aas
xor
enter
fsubs
inc
dec
popa
gs
popa
xchg
into
int
mov
cld
loop
sbb
repnz
dec
sbb
push
adc
mov
mov
test
jae
inc
jbe
mov
xchg
iret
test
ret
and
dec
dec
jo
sub
popf
cmpxchg
pop
inc
shlb
xchg
mov
or
ror
hlt
xor
xchg
push
les
cmp
in
repnz
rcl
aam
rclb
shr
sahf
pop
pop
lcall
push
jbe
pop
adc
push
loop
sbb
sbb
pop
add
cmp
mov
rorl
arpl
inc
rcll
adc
mov
adc
ds
out
xor
mov
xor
mov
add
push
sub
mov
rorb
inc
mov
test
orb
pop
xor
mov
mov
mov
leave
popf
in
xchg
cmc
stc
ja
push
out
xchg
inc
jecxz
add
push
jbe
sbb
das
ljmp
push
dec
clc
xor
xlat
push
shl
mov
mov
out
fsubrl
std
cli
push
push
adc
mov
dec
xor
enter
add
xchg
mov
jle
ja
xor
daa
push
xor
dec
sarl
das
mov
or
cmpsl
push
ret
xchg
pop
push
mov
pop
iret
or
and
shll
mov
shlb
push
stos
push
jbe
add
aas
dec
mov
adc
pop
xchg
push
aaa
push
xlat
or
add
pop
cli
mov
test
sti
cmc
mov
push
jnp
test
mov
mov
cmp
xchg
shll
je
addr16
inc
nop
out
mov
push
fxch
adc
pop
dec
loopne
aaa
sub
pop
mov
ret
xchg
aas
fstpl
sub
sbb
pop
ss
pop
scas
fidivrl
or
inc
push
int
fldt
mov
mov
int3
pop
int3
cmc
movsb
add
mov
xor
in
loop
insb
jge
lods
in
lock
xchg
cmp
rcrl
push
inc
scas
mov
jg
enter
push
mov
mul
mov
xor
dec
repz
aam
jmp
or
jb
add
inc
lret
enter
push
into
mov
sub
imulb
es
andb
xor
jns
mov
jo
mov
repz
xor
movsb
aas
cmp
rolb
sahf
sub
xchg
pop
pop
mov
cli
out
mov
add
cmp
dec
xchg
lods
sub
dec
in
mov
outsb
xchg
xor
fimull
inc
stos
xchg
cmp
std
addr16
out
jne
add
lea
jne
lahf
pusha
setle
lea
movb
jmp
add
inc
gs
arpl
insb
insb
inc
popa
jb
outsb
outsw
add
add
jb
outsb
addr16
jb
insl
inc
dec
push
dec
inc
add
add
je
insb
imul
je
add
inc
gs
outsb
jne
je
insl
push
arpl
mov
stos
jae
sub
and
add
push
xor
add
mov
bound
mov
or
ret
fdivrl
out
das
jns
push
out
mov
sub
call
jno
out
std
add
je
and
mov
les
inc
mov
cmpsl
and
fsts
xor
inc
test
dec
xor
jl
scas
sbb
mov
not
shlb
pop
rcrl
dec
clc
sti
cmp
jbe
sahf
ljmp
dec
in
push
mov
sub
leave
lds
bswap
lea
mov
jmp
add
push
gs
imul
dec
jb
inc
js
add
push
push
jb
insb
insb
inc
popa
jb
movw
jmp
add
inc
imul
cmc
clc
bt
add
pushl
pushf
mov
lea
jmp
movzbw
mov
movzbl
not
pop
not
mov
movsbw
lea
rep
pushf
bswap
call
xor
orl
pop
cmp
cmp
and
xor
inc
mov
fldl
gs
test
jno
cmp
adc
in
imul
ret
xchg
push
lock
xchg
cmp
adcb
aam
out
xchg
mov
mov
or
mov
push
adc
lcall
test
push
popf
enter
pop
mov
sahf
jle
rolb
dec
mov
push
or
stos
cmpsl
or
pushf
dec
out
dec
nop
lcall
jnp
sub
bound
add
arpl
gs
arpl
je
lea
ja
sub
push
sar
sub
add
jle
sub
add
xor
test
btc
rcl
mov
clc
mov
setg
call
add
push
outsb
imul
imul
push
inc
add
mov
lea
call
call
add
dec
insl
popa
addr16
imul
inc
jb
addr16
in
inc
push
and
jne
fiaddl
add
fistpl
push
loopne
mov
std
jno
rcrl
xchg
fninit
inc
xlat
sub
xchg
pop
sbb
sbb
andb
sub
jns
btr
lock
xchg
cmp
out
xor
jo
sub
cmp
pop
add
add
push
inc
push
mov
js
add
in
das
lea
outsl
repnz
push
xchg
aam
pop
gs
gs
sbb
hlt
mov
loopne
fsts
pop
aas
dec
scas
jbe
out
stos
dec
add
pop
mov
jne
lods
mov
fcmovbe
mov
insb
fildll
jge
imul
cmpsl
aam
mov
xchg
xchg
movsb
decb
xchg
dec
xchg
mov
or
test
mov
mov
loop
jb
icebp
add
sub
inc
lret
xchg
adc
gs
inc
leave
pop
inc
mov
mov
jecxz
jnp
xchg
stc
ret
data16
lret
in
loopne
sarl
mov
mov
or
sub
testl
mov
hlt
or
icebp
inc
add
pop
xlat
dec
xor
pop
xchg
push
imul
add
mov
and
test
rolb
mov
out
xchg
lret
insl
pop
sbb
loopne
mov
xor
push
fadds
mov
mov
lcall
out
mov
or
lret
inc
and
or
xor
mov
stos
outsb
repnz
loopne
adc
lret
jne
mov
xor
std
cmp
xor
test
add
outsl
mov
shrl
inc
pop
stos
and
mov
xchg
not
inc
popf
gs
add
adc
and
aam
cmp
lret
bound
xchg
inc
in
sbb
pop
sub
nop
jmp
insl
popa
addr16
imul
addr16
push
insb
outsl
arpl
mov
xchg
movsbl
mov
not
bswap
mov
mov
pushf
movb
pushf
pusha
mov
bswap
not
lea
pop
pusha
pusha
pushl
pushl
ret
add
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
pusha
call
add
inc
gs
outsl
arpl
gs
outsb
outsw
inc
add
bt
xor
cmc
repnz
jmp
add
inc
gs
gs
inc
outsb
push
inc
imul
movl
call
movb
push
lea
jb
pushf
pusha
cmp
jmp
dec
ret
or
out
cld
xor
sub
imul
es
xor
push
pop
sub
cltd
hlt
xor
inc
out
mov
adc
cmp
push
repz
fwait
xchg
out
mov
sbb
sbb
repnz
cmp
lods
cmc
sbb
in
test
inc
mov
out
std
jno
mov
mov
stos
sti
mov
scas
jge
fidivs
in
dec
mov
lds
cmp
fcmovnbe
sbb
fsubrs
mov
jne
mov
ret
gs
jge
nop
jmp
out
add
test
pushl
popl
cmp
stc
cmp
pushf
pushf
pushl
lea
jl
ja
clc
clc
sub
dec
setae
sub
bsr
add
clc
movsbl
shld
neg
mov
shl
dec
mov
pushf
pusha
repnz
movb
movb
pusha
push
lea
jne
movzbw
call
stos
push
aaa
ftst
mov
repz
addr16
mov
pusha
cmc
cs
inc
icebp
pop
popa
mov
mov
add
mov
xchg
fsubrs
adc
addr16
imul
add
xchg
lcall
cmp
lods
sbb
sub
and
sbb
sub
cmpsb
stc
pop
sarb
test
mov
fnstenv
cmp
stc
or
cmp
add
insb
sbb
xor
arpl
stc
enter
push
fistps
xor
jne
lds
test
leave
out
insb
test
insl
test
mov
pop
insb
stc
enter
aas
or
lahf
sub
cmp
lock
dec
fsubrs
lods
lock
popf
imul
cmp
call
adc
out
push
push
cmp
xchg
mov
pop
push
lods
inc
cmpsb
add
std
stc
repz
aad
test
lcall
shll
mov
xchg
inc
jne
jmp
lea
call
call
call
mov
sbb
movsl
loope
mov
jnp
scas
pop
xor
jae
std
or
fisubs
flds
scas
sbb
popa
cmpsl
sbb
repnz
or
leave
xchg
and
es
frstor
mov
popf
add
hlt
aad
push
pushf
xlat
rol
cmpsb
pop
inc
mov
loop
sub
sti
pushf
xor
into
pop
pop
call
mov
cmpsl
push
add
inc
sub
mov
push
sbb
cmp
pop
rcrl
jge
sti
xchg
repz
push
jns
inc
insb
insb
outsl
arpl
jb
outsb
addr16
outsb
add
sbbb
test
call
xlat
sub
and
mov
mov
adc
movsl
aad
mov
fimull
pusha
adc
mov
jmp
idivl
pop
xor
sahf
xor
push
cld
test
lds
xchg
ljmp
push
stc
aaa
mov
jg
test
inc
adc
ror
out
push
jbe
in
cmp
jnp
dec
sub
mov
xlat
mov
or
fxch
cmp
shr
xor
stc
adc
fdiv
push
daa
xchg
sub
cwtl
push
jmp
add
cld
out
jge
mov
mov
ret
inc
push
pop
dec
dec
dec
add
sbb
jno
sbb
mov
nop
and
fildll
cltd
in
stos
movsb
cli
adc
outsl
clc
call
jno
mov
xor
push
aas
mov
punpckhwd
xchg
pop
add
mov
rorb
sarl
ret
loopne
daa
adc
imul
inc
mov
popf
dec
mov
add
xchg
mov
aam
pcmpeqw
mull
cmp
mov
adc
loope
mov
sbb
repz
ffreep
push
mov
lahf
out
test
mov
adc
jne
repnz
pop
sbb
pusha
cmp
dec
cmp
mov
dec
daa
fidivrl
stc
mov
pop
add
xchg
xor
outsb
jmp
repnz
test
mov
push
jmp
add
inc
push
ja
jb
jne
inc
add
out
mov
inc
gs
outsl
insl
jo
je
jb
popa
insl
gs
add
add
popa
bound
imul
rcrb
sbb
cli
cmp
lea
jnp
pushf
pushf
sbb
call
add
inc
jb
popa
je
inc
outsl
outsb
je
outsb
imul
call
add
addr16
outsl
jae
bound
popa
insl
add
lret
push
add
pushf
movl
cmp
jmp
push
movl
call
pop
mov
inc
sbb
push
jmp
lock
mov
sbb
aad
xchg
add
addl
mov
dec
and
mov
pop
dec
dec
into
mov
shll
movsb
mov
jb
xor
imul
insl
fsub
jle
pop
sub
fimull
mov
push
jg
les
adc
push
sub
pusha
in
in
mul
xchg
adc
repnz
push
jns
xorb
incb
lea
shrl
pop
cmp
or
popf
jns
fidivrl
mov
ja
pop
xor
stos
jmp
fs
sub
push
jns
lcall
cmc
roll
fwait
clc
cmpsl
inc
cmp
dec
pop
in
es
add
fildll
jl
xchg
inc
push
sub
bt
mov
bsr
mov
neg
add
inc
movw
shr
cmc
mov
btc
add
push
bswap
lea
movzbw
mov
call
pushf
cmc
shl
movw
lea
je
jmp
inc
outsb
cwtl
sbb
orl
cltd
lret
cmpsl
test
int3
aas
dec
lods
test
jmp
test
lea
test
repz
dec
sbb
fidivl
loope
pop
ret
sub
mov
sbb
jo
push
int
loopne
scas
sub
mov
pop
jno
sbb
and
loopne
xor
mov
sbb
test
jnp
or
outsl
jae
xor
mov
and
xor
mov
push
or
testb
xchg
out
inc
lds
sub
mov
not
mov
lea
jae
mov
lea
bswap
movsbw
pop
pushf
pushf
push
pusha
pushl
ret
movl
call
add
push
popa
imul
jo
imul
adc
andb
jmp
lods
add
jne
repnz
push
sbb
clc
push
ds
outsl
push
dec
sarb
cld
int3
aaa
mov
mov
mov
shr
adc
aam
sbb
mov
and
mov
test
sbb
test
push
insl
mov
pop
push
ja
jle
enter
mov
add
mov
mov
mov
clc
push
or
mov
cmp
sahf
int3
mov
pop
lret
dec
sub
or
add
insb
imul
push
mov
mov
movb
push
lea
jmp
mov
lea
call
jmp
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
lea
jne
rcr
mov
test
rol
dec
sub
sub
lea
cmc
mov
call
pushf
call
add
inc
gs
gs
outsl
popa
jb
push
je
je
add
out
fdivrl
lcall
sar
repz
mov
inc
lock
mov
loop
and
adc
adc
and
push
test
pop
in
and
mov
out
cs
adcl
sbb
mov
cli
add
sub
push
out
push
lock
sub
inc
loop
jg
mov
lods
pop
jbe
aam
add
sbb
mov
cmp
xor
sbb
pop
ret
sub
shlb
out
imul
mov
mov
testb
loopne
push
add
dec
mov
mov
add
andl
lock
lcall
fildl
pop
imul
jl
call
add
testl
movb
jl
jnp
add
push
outsb
jb
imul
popa
jae
inc
add
pop
xchg
cmc
sub
pop
xchg
lahf
lea
pop
jmp
add
inc
js
push
gs
dec
jne
inc
add
add
gs
je
push
je
gs
insl
dec
outsb
dec
inc
insb
outsl
bound
add
xchg
mov
mov
das
push
dec
or
shlb
mov
adc
imul
mov
out
push
icebp
xchg
add
popa
lcall
mov
jl
adcl
lea
jae
movsbw
jmp
add
inc
gs
je
dec
popa
outsb
fs
gs
je
add
fs
jne
mov
lahf
movsbw
pushf
mov
call
mov
test
repnz
jmp
pusha
call
pusha
lea
jae
stc
pushf
bt
bt
add
movb
mov
pushl
pushf
pushl
lea
jmp
lea
jne
aaa
shld
bts
sub
bswap
mov
shr
rcr
add
setnp
rol
test
mov
cmp
pusha
pushf
bt
test
push
jmp
push
pusha
lea
jne
sbb
shl
movsbw
mov
call
add
push
gs
je
gs
push
outsl
fs
add
popa
insl
gs
arpl
add
je
gs
je
je
add
pop
mov
xorl
xor
jnp
movsb
lods
xchg
add
stos
adc
fiadds
inc
nop
sub
mov
dec
mov
mov
inc
rclb
dec
dec
subl
arpl
fistps
mov
loop
cs
jns
or
mov
ficomps
out
push
addr16
test
mov
sbb
packuswb
pusha
gs
sub
fdivs
lret
cmp
rol
pushf
adc
scas
shrb
xchg
scas
mov
jle
scas
fwait
jne
adc
xor
roll
add
or
mov
dec
inc
push
ret
inc
sbb
cmpsb
popa
mov
incl
popw
cwtl
movsb
add
loopne
sbb
sub
sahf
lods
sbb
xchg
mov
sub
push
cmp
imul
lea
out
mov
movsl
test
mov
jmp
mov
ror
in
jns
testl
cs
cmp
imul
xor
and
stos
in
mov
lods
sbb
mov
adc
dec
xor
mov
stos
gs
mov
adc
mov
nop
or
jl
pop
sbb
add
push
dec
inc
gs
popa
insb
insb
outsl
arpl
adc
jmp
add
dec
jae
imul
jae
bound
xlat
push
sub
lock
cmp
insb
sub
pop
push
mov
xchg
cmp
and
pop
stos
test
aas
inc
pop
clc
shr
insb
rcll
xchg
inc
pop
jl
fcomi
sbb
cltd
hlt
jo
mov
pop
rol
push
cmp
sbb
rclb
or
inc
sub
dec
fucomp
dec
test
sti
dec
mov
cltd
dec
movsl
or
jl
jg
outsl
not
lods
push
dec
cmc
push
push
pushf
not
jmp
lea
jb
shr
bsf
cwtl
cmp
push
cwtl
pushf
mov
push
mov
pushf
call
movl
push
mov
pusha
push
lea
jmp
add
push
gs
jb
outsl
jb
outsl
fs
add
jo
jns
insb
imul
add
and
or
add
rcl
add
mov
mov
test
push
pusha
pushf
add
stc
push
mov
mov
call
push
movb
lea
jae
push
sub
bswap
bswap
pop
movzbw
lea
push
push
pushf
lea
call
xor
add
and
pop
call
add
inc
outsl
jb
popa
je
gs
popa
addr16
add
add
fs
je
push
imul
add
arpl
insb
add
adc
add
cli
cs
jmp
je
lds
imul
xchg
adc
insl
call
sbb
mov
fmul
loope
cmp
inc
xchg
dec
mov
in
mov
mov
roll
call
xchg
cwtl
nop
xor
jns
inc
mov
loopne
xlat
gs
arpl
gs
insb
adc
pusha
sbb
xchg
sbb
dec
jo
push
insl
pushf
add
mov
inc
adc
jns
sti
es
xchg
bound
cs
mov
pop
cmp
or
jp
xor
fs
test
mov
cld
and
pop
jp
lcall
and
adc
push
adc
inc
pop
sbbb
xchg
dec
mov
mov
jl
popa
xor
add
inc
gs
gs
dec
bound
arpl
gs
mov
add
push
push
mov
pushf
lea
jmp
cmp
test
pushf
mov
lea
je
stc
add
clc
test
cmc
cmp
jmp
lea
jb
pushf
test
cmp
pusha
pushl
lea
ja
cmp
add
stc
clc
push
test
or
pusha
pushf
lea
je
stc
cmp
cmp
call
add
inc
imul
inc
imul
or
mov
pusha
adc
movb
jmp
add
inc
gs
inc
dec
jb
inc
js
pushf
or
call
add
push
dec
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
outsl
arpl
imul
push
inc
inc
jae
outsb
arpl
je
gs
inc
jns
popa
insl
add
xchg
push
ljmp
fisubs
pusha
pushf
lea
jb
pusha
test
cmpb
pushf
call
add
inc
gs
jb
jns
imul
push
outsl
arpl
jne
and
je
jns
jo
imul
arpl
insb
and
je
bound
insb
outsl
arpl
gs
and
and
popa
insl
imul
and
jb
jb
and
and
jg
push
movl
push
movb
mov
pushf
pusha
pusha
pushl
ret
cmp
pop
add
and
shl
bound
or
sbb
imul
ret
das
add
jns
fldcw
mov
into
cltd
pushl
jl
mov
clc
push
mov
sub
outsb
fcoms
cmp
sub
repz
call
aas
test
sub
push
add
inc
gs
jns
je
insl
dec
outsb
outsw
add
add
insl
bound
gs
outsb
add
add
gs
je
inc
jb
jae
dec
outsb
imul
add
negb
mov
pushf
lea
jmp
pop
push
cmp
jmp
cld
add
mov
shl
sub
imul
cmp
ss
or
sub
jge
mov
pop
pushf
andb
ljmp
sahf
int3
scas
dec
rcrb
pop
and
jle
mov
mov
sub
movsl
ret
inc
mov
and
mov
test
pop
and
push
or
iret
mov
xor
into
aaa
mov
push
subl
sub
les
add
pushf
jmp
pop
mov
call
lea
jb
stc
test
cmp
jmp
add
dec
insl
popa
addr16
imul
inc
jb
addr16
jne
jae
jb
insl
popa
add
add
je
arpl
insb
insb
push
outsl
jae
add
inc
outsb
jne
inc
popa
insb
outsb
fs
jb
outsb
outsw
inc
add
pushf
call
cmc
cmc
test
cmp
not
not
lahf
lea
not
cwtl
mov
pushf
pushl
mov
call
inc
xchg
andb
or
hlt
cld
icebp
lret
in
or
inc
xor
jae
adc
xchg
aad
jns
test
pusha
sub
divl
mov
cld
mov
mov
push
popa
add
mov
push
jb
inc
lahf
gs
or
push
nop
stos
adc
mov
sub
jo,pn
sub
mov
loopne
call
adc
cmp
jb
clc
xorl
mov
mov
lret
leave
adc
push
enter
xchg
sub
adc
adc
or
and
xor
sub
daa
inc
imul
mov
mov
mov
shll
jne
out
inc
add
fwait
stos
jnp
in
jno
fisubrl
mov
cmp
xchg
sub
test
test
ror
push
stos
mov
jp
jg
jge
jb
popf
leave
mov
lods
mov
mov
and
sub
je
mov
popa
or
xchg
repz
inc
xor
pop
jo
int3
mov
rcl
jb
movsl
push
lods
mov
mov
clc
cmpsl
adc
adc
dec
pop
daa
jmp
pop
lods
xchg
cs
jb
mov
loope
movsl
lock
je
cmp
push
sti
dec
loope
jp
and
fwait
cmp
cmp
xor
xor
cmp
jl
aaa
push
xchg
add
push
outsl
jae
push
jne
je
gs
popa
add
add
addr16
insb
outsl
jae
dec
gs
jmp
outsl
ret
divl
loope
xor
hlt
hlt
or
pop
pop
dec
stos
mov
add
je
pop
xchg
xchg
dec
sub
pop
pop
rolb
dec
jge
in
out
pushf
and
leave
xlat
mov
xchg
and
mov
or
test
fnstsw
fcmovne
out
ds
les
insb
ret
jle
adc
mov
in
iret
dec
loope
push
dec
add
adc
in
inc
int
nop
pushf
mov
mov
adc
icebp
cmpsb
pop
and
repz
mov
mov
mov
sub
repz
mov
inc
clc
adc
lret
daa
sbb
repz
cwtl
push
dec
sbb
add
cmp
add
jne
adc
add
inc
and
repnz
push
sub
jecxz
lea
call
push
cmp
movw
jmp
movw
lea
jp
lea
pusha
pusha
movb
push
lea
jmp
add
push
imul
popa
jae
inc
add
imul
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
add
popa
addr16
imul
inc
jb
addr16
insl
popa
add
mov
pop
pushf
movw
pusha
pusha
pushl
ret
add
push
dec
inc
gs
gs
je
jo
outsl
insb
fs
call
cmc
cmc
pusha
mov
or
lea
jb
push
mov
movb
lea
jne
btc
sar
clc
shl
mov
pusha
bt
or
pushf
call
add
inc
gs
insb
imul
inc
popa
je
add
bt
rol
add
js
mov
jmp
add
inc
gs
gs
outsl
popa
jb
dec
popa
jns
jne
add
cmp
sbb
lock
insl
xchg
adc
std
ds
push
jmp
fs
scas
push
add
pop
mov
push
or
inc
and
or
das
pop
xchg
sbb
mov
mov
adcb
pop
hlt
je
pushf
mov
pushf
pushf
pushl
ret
lea
ja
stc
push
imul
test
add
movb
push
movb
lea
jmp
push
lea
jae
jmp
add
inc
gs
gs
outsl
popa
jb
push
jns
add
add
addr16
jne
jb
push
popa
insb
jne
inc
js
add
stos
dec
push
in
cli
push
psrlq
les
sti
sbb
xchg
lods
push
imul
dec
or
xchg
ss
sub
imul
shlb
aaa
test
and
mov
insb
add
jne
pushf
scas
cwtl
into
dec
in
loopne
aam
xor
lock
mov
std
pop
dec
and
pop
xchg
sbb
push
push
loopne
or
push
imul
dec
mov
cmpsb
add
into
pop
and
xchg
sarl
mov
insb
stc
jnp
mov
subb
jmp
int3
ss
in
lcall
jmp
sub
xchg
xchg
pop
cli
popa
pushf
out
ljmp
out
or
mov
xchg
push
adc
fsubr
lods
push
call
clc
push
sbb
mov
mov
or
clc
shl
fdivs
push
mov
shlb
lea
sbb
pop
out
aas
fiaddl
out
bt
push
aas
sub
pop
mov
push
insl
xchg
mov
scas
lret
stc
psubw
mov
cli
mov
cmpb
mov
in
xor
and
push
xchg
push
xchg
mov
pop
sbb
xchg
xchg
lcall
sarb
idivl
mov
movsl
testb
push
pop
roll
adc
jb
dec
sub
push
adc
add
je
arpl
insb
insb
dec
outsb
outsw
add
add
gs
outsl
add
test
jle
jmp
mov
int
test
btr
mov
pushf
pushf
add
clc
cmc
mov
stc
rcl
sar
mov
cmp
pusha
bt
cmp
jmp
add
inc
outsb
fs
popa
imul
fstpl
scas
movb
fwait
xchg
adcl
negb
sbb
aaa
push
pop
mov
call
dec
mov
icebp
xor
fchs
dec
jp
sbb
jge
out
stos
aad
das
push
roll
sbb
sbb
xchg
test
jmp
hlt
push
fs
sub
push
cmp
xor
cmp
iret
loope
jl
or
add
jge
cmpsl
mov
in
ret
sbb
mov
mov
mov
out
fsubl
mov
lea
test
fstl
push
cmp
push
lock
test
mov
and
pop
xchg
xchg
fldcw
stc
pop
mov
push
pop
fisttps
mov
cld
mov
inc
mov
into
jb
sub
or
dec
jno
inc
inc
and
sub
xor
and
fwait
and
mov
pushf
lea
jmp
repz
fwait
sub
es
sub
jo
int
stc
xor
pop
mov
in
cwtl
cmc
dec
test
flds
popf
or
and
or
rorl
aas
lret
lds
sub
cmp
adc
out
cmp
aad
pop
xchg
lods
mov
push
pop
xchg
icebp
lods
pop
jnp
push
pop
cmp
push
int
add
rorl
sbb
push
jle
mov
mov
fyl2xp1
push
rorl
ljmp
or
pushf
not
push
mov
pushf
add
call
add
inc
jb
popa
je
push
outsb
dec
outsb
imul
add
imul
jae
rep
not
movzbl
call
add
inc
gs
push
dec
outsb
outsw
add
pop
and
push
mov
call
pushl
pushf
push
lea
jb
das
push
daa
cmp
cwtl
mov
pushf
call
inc
sub
cmp
inc
push
test
out
dec
add
push
loopne
enter
jecxz
data16
and
add
cmpsb
add
fcompl
xchg
inc
push
stos
jns
adc
mov
xor
lcall
out
adcl
loop
in
pop
ficoms
fildl
rorb
shrl
jns,pn
pop
es
insb
rorl
ss
push
in
lea
sub
fdivl
mov
sub
inc
push
mov
mov
jns,pn
dec
cmp
divb
sub
fadds
add
je
outsb
jne
jmp
jmp
jae
gs
insb
xor
cs
insb
add
push
fsubp
incl
add
popa
addr16
imul
addr16
gs
jbe
add
add
popa
insb
imul
je
gs
xor
lea
je
cmp
pushf
cmp
pushl
lea
jne
pusha
inc
call
xchg
jmp
add
inc
outsl
jo
inc
outsb
push
inc
imul
jb
imul
insb
add
add
outsb
inc
insb
imul
add
add
je
insb
je
add
push
gs
jne
jb
outsb
je
imul
jns
add
ret
push
dec
add
in
cs
arpl
and
out
mov
add
aad
movsb
push
test
jge
in
shll
rclb
in
jecxz
divb
into
mov
sti
in
bound
int
out
and
push
out
sti
cwtl
fisttpl
push
shll
into
decl
jge
bound
adc
and
jmp
adc
in
push
xor
push
cmc
fwait
add
in
lcall
mov
outsb
out
ret
push
dec
adc
repz
loop
mov
mov
sbb
in
scas
dec
lods
mov
cmp
and
aad
cmc
add
adc
mov
jne
cmp
popa
sub
les
and
pop
cltd
push
mov
cli
inc
cmp
repnz
fwait
cs
dec
iret
and
nop
cmc
movsl
movaps
push
cmp
push
mov
lea
xor
cld
sub
mov
pop
and
out
push
insl
lea
repnz
cmp
movsb
push
test
stos
out
in
push
or
nop
sbb
ret
and
in
jp
inc
nop
push
push
mov
fildll
xchg
cli
orb
aam
aad
pop
and
cmp
jb
fbld
daa
mov
mov
iret
inc
mov
add
dec
mov
loopne
jl
nop
jmp
push
outsb
jne
je
insl
add
add
dec
arpl
imul
je
jns
je
insl
dec
outsb
jne
add
inc
push
js
inc
add
test
add
add
gs
or
dec
not
add
ror
not
mov
pop
ret
push
call
pushl
popl
mov
pushl
ret
sub
mov
mov
in
into
mov
cli
out
lds
addr16
push
bound
lahf
or
mov
rolb
mov
push
in
rorl
jno
mov
les
jl
mov
imul
jae
dec
popa
outsb
fs
gs
pusha
stc
stc
ror
clc
pushf
pusha
bt
add
pushf
pushf
movw
xor
push
call
add
inc
insb
imul
arpl
outsb
add
bt
mov
pushf
test
call
pushf
jmp
call
pushl
add
push
call
jmp
cld
pop
pop
js
push
jo
pslld
test
xchg
push
pop
movsl
xchg
stos
mov
bound
push
sti
mov
xchg
fisubrs
ss
cs
pop
insb
ffree
sbb
jle
mov
leave
inc
jge
out
in
and
cmpl
jne
mov
and
orl
xchg
cli
outsb
sbbb
cwtl
mov
les
addl
add
sub
repnz
movl
pushf
movb
pushl
popl
pushl
pushl
push
pushl
ret
pushf
lea
je
pusha
sub
bsr
bsf
stc
mov
pushl
shl
mov
or
jmp
outsb
mov
jle
into
sti
or
dec
adc
in
push
adc
adc
adc
mov
popa
sub
nop
vpacksswb
adc
mov
out
cmp
js
das
ret
loopne
or
adc
bound
mov
sub
es
out
mov
xor
push
xlat
inc
xchg
sarl
xor
inc
mov
sub
fucom
pusha
es
scas
adc
lea
cmc
lods
fcoml
incl
xchg
idivb
jl
xrelease
and
mov
jne
pushf
mov
mov
pushl
ret
outsl
movsl
mov
jnp
push
jp
lret
mov
ds
std
mov
mov
addr16
gs
in
xchg
mov
jns
push
or
mov
and
cmpsb
dec
pushf
mov
scas
icebp
jbe
fs
jl
test
movsb
add
inc
gs
inc
inc
js
pushf
sbb
pushf
mov
call
add
dec
outsb
imul
inc
insb
popa
je
inc
add
add
je
arpl
dec
outsb
outsw
add
add
add
movsbw
lea
movzwl
not
movw
lea
not
lea
pop
call
mov
pusha
movl
pusha
pushf
lea
jmp
add
push
push
outsb
gs
outsl
jo
jo
add
adc
pop
cmp
arpl
mov
mov
int
jp
rclb
cmpsl
adc
mov
add
iret
fisubl
out
dec
sbb
xchg
mov
mov
mov
adc
xor
icebp
push
or
sti
fistpl
sub
fisubrs
scas
les
jle
cltd
les
jne
fisttps
pop
push
cli
sahf
or
lods
cwtl
push
out
pusha
pop
xor
pusha
sub
imul
inc
push
jno
mov
jg
mov
lcall
or
xchg
xchg
sti
ja
out
enter
imul
cmpsl
das
in
out
les
mov
xchg
push
rorb
xchg
gs
dec
xchg
pop
mov
sbb
test
in
inc
daa
cmp
aas
out
mov
jl
cwtl
jne
loopne
cmpb
jle
cmp
test
shrl
jl
popf
fmull
pop
jo
push
insl
mov
pop
add
ljmp
jne
loopne
push
mov
sub
sbb
and
pop
inc
mov
aam
jge
mov
xchg
mov
xor
xor
inc
in
xor
lea
mov
xchg
pop
fists
sub
es
andb
loope
sub
and
lret
sbb
pop
jo
jl
jge
shr
and
decl
movsbl
mov
push
pusha
setb
mov
bswap
call
lea
ja
jmp
pushf
mov
call
add
dec
insl
popa
addr16
imul
dec
insl
popa
addr16
outsl
jne
je
pushf
pushl
jmp
push
call
sub
sub
mov
shr
sub
call
stc
pop
ret
loopne
out
and
mov
jecxz
sbb
cmp
pop
cmp
cltd
faddl
rol
add
jbe
insb
mov
movsl
inc
loopne
into
mov
sub
and
push
leave
inc
lea
add
lea
dec
mov
pop
adc
dec
fstpt
or
out
mov
adc
outsl
push
rcr
sti
popl
sbb
add
and
imul
mov
repz
push
in
and
outsb
sub
xchg
fcomps
lock
jmp
add
inc
gs
popa
jo
jne
add
mov
scas
push
mov
mov
cld
xor
xchg
sbb
insl
and
ljmp
int
testl
jp
popa
je
sub
repz
je
add
push
xor
push
mov
sbb
popa
cld
pusha
jp
cmp
in
cmp
mov
mull
nop
lcall
add
in
loope
nop
insl
jle
pop
cmp
loopne
insl
xchg
jo
gs
in
cs
xchg
xlat
mull
shll
dec
rcrb
leave
aaa
mov
push
fbld
sbb
pop
in
push
test
inc
jge
pop
bound
push
xchg
into
push
ret
sub
pop
clc
jo
cmpsb
call
push
pop
int3
lds
jge
dec
mov
mov
out
shlb
jo
sub
pop
cmc
pushf
setb
bswap
cwtl
pushl
push
lea
pusha
pushf
movw
lea
call
call
pop
push
dec
cli
jns
pop
push
sub
je
mov
add
out
cli
push
cmc
icebp
out
adc
mov
das
mov
nop
insb
mov
jecxz
add
jo
sarb
insl
lahf
xchg
je
fsubl
imul
rorb
xor
sub
adc
and
pushl
jecxz
mov
std
cmp
inc
pop
pushf
mov
mov
pop
xor
out
ret
das
adc
in
mov
pop
add
icebp
xor
ret
and
fiaddl
mov
xlat
inc
fiadds
in
cmp
push
bound
pop
int3
inc
lods
jl
mov
rcrb
popa
shrl
daa
in
sbb
add
push
xchg
stos
or
imul
int3
pop
lods
push
mov
dec
cmpsl
sbb
add
add
and
lret
mov
fmull
pusha
lds
sub
ret
sbb
pop
pushl
add
bt
pushf
pushf
pushf
xor
bt
sub
movl
bt
movl
cmp
cwtl
lea
lea
movzbw
movsbl
bswap
mov
jmp
add
dec
push
adc
fcmovne
testl
inc
pop
subl
stc
lea
xchg
repnz
xor
inc
clc
cltd
add
cwtl
js
xor
mov
sbb
mov
fidivrl
outsb
leave
movsl
jl
adc
scas
loopne
cli
lds
das
aaa
call
jl
ret
leave
sbb
xchg
cmc
pop
out
inc
insl
in
xor
adc
in
in
jo
scas
dec
cli
dec
sub
jg
or
repz
cmp
call
push
stc
mov
pop
sub
mov
cwtl
mov
push
lea
jmp
add
push
gs
jae
addr16
add
jge
decl
mov
jo
add
pop
scas
lods
test
jo
pop
pop
push
push
mov
xchg
leave
jbe
ret
jns
stos
sbb
push
add
cmp
sahf
mov
fidivrs
inc
sti
mov
cmpb
pop
cmp
dec
call
mov
stc
pop
cmp
cltd
and
lret
std
fstpl
call
imul
pushf
stc
scas
and
int3
test
jo
adc
decb
insl
jno
repnz
add
scas
fisttpl
nop
add
jl
outsb
or
mov
and
add
and
or
jb
mov
cmpl
push
fisubs
aam
push
lods
popf
scas
gs
xchg
inc
add
sahf
divl
cmp
sarl
test
out
arpl
ja
fcomps
xchg
fs
adc
popa
pop
into
pusha
lods
sbb
popa
or
loope
lds
inc
cmpsl
sbb
cmp
jno
fistl
dec
in
sub
jl
xor
aas
push
insl
sub
ljmp
dec
dec
jmp
sub
hlt
push
scas
mov
ss
push
dec
ss
jmp
jnp
cmc
cmc
jae
mov
rolb
push
adcb
imul
add
fists
sarb
jae
test
jp
pop
dec
push
sbb
int
aam
ljmp
sub
push
scas
cmp
add
pusha
call
add
dec
outsb
imul
inc
outsl
outsb
je
outsl
insb
jae
add
inc
gs
push
dec
outsl
arpl
gs
sbb
in
add
push
insb
jae
gs
popa
insb
jne
add
inc
or
add
mov
fs
call
jmp
or
xor
outsl
jle
sub
sub
xor
sbb
lret
into
imul
in
mov
mov
imul
xchg
scas
mov
xor
or
std
mov
ret
mov
mov
test
imul
inc
and
or
add
not
pop
pusha
push
lea
pusha
call
adc
cmp
das
pusha
adcl
mov
mov
inc
daa
and
test
jae
pop
mov
cmp
inc
cmp
dec
addr16
sbb
pop
cli
pop
jbe
push
xor
cltd
into
sarb
mov
rolb
mov
inc
mulb
add
ds
add
mov
xor
jp
in
test
setb
jl
ficomps
shrd
cmp
mov
jmp
add
inc
gs
insb
imul
mov
pushf
pushf
lea
je
setle
lea
pushf
pusha
jmp
pushf
mov
movb
movl
pushf
mov
movl
pushf
mov
mov
lea
jmp
add
inc
imul
je
imul
outsb
je
jb
jb
je
arpl
push
arpl
outsb
add
mov
cli
xor
cmp
es
movsl
mov
nop
push
ret
push
cmp
cmp
maxps
or
fstps
jns
mov
mov
ficomps
in
sti
pop
std
scas
sbb
ficompl
xchg
js
adc
shrb
loopne
cwtl
or
jb
push
lods
test
xchg
push
loop
in
test
stc
gs
test
inc
mov
outsl
pop
mov
lahf
repnz
out
fistps
cld
mov
xlat
dec
mov
les
and
or
add
jp
mov
out
lods
inc
stc
push
fldt
and
nop
cmc
movsl
push
mov
sbb
in
pop
lock
dec
call
fstps
dec
popa
push
insl
jle
jle
out
push
xchg
stc
pop
gs
jno
push
mov
test
dec
ror
xabort
test
dec
push
pop
imul
lahf
sbb
jo
movl
pop
jl
add
loop
gs
movsl
push
mov
xchg
inc
in
fldenv
popa
and
dec
xor
cmc
mov
call
add
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
imul
add
xchg
sbb
add
adc
pushf
ror
jmp
call
add
inc
gs
gs
inc
js
outsb
je
outsl
imul
inc
gs
gs
popa
insl
gs
gs
inc
add
mov
mov
int
add
push
out
je
xor
stos
push
dec
xchg
add
nop
in
repz
testl
add
negl
mov
fistps
lods
je
movsb
lods
sub
fdivrs
loope
jae
inc
mov
cmp
scas
hlt
jge
call
fs
test
movsb
pop
mov
mov
xchg
dec
idivb
xor
dec
lods
or
ds
sub
add
or
push
sbb
dec
mov
orl
rcrb
outsl
xchg
into
inc
lcall
bound
xor
test
adc
stc
pop
sub
push
test
xchg
or
test
mov
addl
hlt
popf
in
mov
mov
inc
mov
idivb
mov
mov
and
data16
jl
mov
inc
push
repnz
insl
jl
xor
dec
outsl
leave
idivb
cmp
bound
jg
xchg
xchg
cmpsl
stos
mov
adc
outsl
mov
add
pop
aas
or
jp
jg
or
test
adc
out
mov
data16
movsl
pop
pushf
cmp
int
and
jg
or
jl
adc
dec
outsb
jne
je
je
add
es
movb
call
lea
mov
mov
setne
lea
mov
pushf
pushf
movl
pushl
pusha
mov
pushf
mov
pushf
pushl
ret
add
inc
gs
imul
js
inc
add
bound
adc
mov
popa
jne
scas
jmp
mov
enter
rclb
add
leave
xor
imulb
push
in
mov
add
popf
ret
loop
and
or
push
lods
adc
xor
dec
negb
cmp
out
insl
lcall
aas
imul
test
and
dec
mov
or
jo
test
pushf
push
inc
jecxz
or
popa
rclb
dec
xchg
gs
je
inc
dec
inc
push
arpl
outsb
add
adcl
pushl
lea
call
pusha
call
add
inc
outsb
jne
push
push
push
imul
mov
movsbw
movsbl
movzbl
lods
bswap
dec
movsbl
shld
not
movsbw
not
adc
pop
add
clc
pushl
bt
ror
call
cmp
bt
sub
call
add
push
gs
imul
gs
xchg
jl
lcall
cmpl
fs
jmp
pusha
lea
call
adc
or
sbb
inc
pop
dec
xor
adc
jmp
fnstcw
sub
or
adc
sub
out
imul
sbb
dec
mov
test
fistpll
sbb
roll
dec
xchg
push
sarb
and
jns
and
clc
jl
cld
in
adc
add
push
push
fistl
push
xorb
pop
inc
idiv
ret
xchg
add
push
jl
in
mov
adc
ret
stc
movzwl
rol
mov
pusha
jmp
pusha
push
dec
in
std
in
loope
test
pop
mov
mov
in
push
and
aam
fwait
sbb
call
outsl
mov
inc
mov
fistl
adc
jo
fisubrs
pushf
add
and
xor
sub
stc
fsubrl
pop
sbb
xchg
adc
sarl
push
lahf
and
cli
scas
stc
push
shr
adc
in
mov
pop
arpl
mov
xchg
cmp
aaa
into
lcall
sbb
mov
add
sarl
cwtl
mov
cs
stos
sub
in
in
and
pushf
movb
dec
inc
mov
mov
push
add
fwait
test
movsl
mov
push
test
mov
movsl
push
inc
movsb
adc
inc
mov
dec
mov
sub
fcoms
mov
mov
sub
imulb
mov
cmp
jle
cmc
xchg
in
add
xchg
cmp
push
push
fiaddl
push
testl
and
sub
out
xor
inc
push
insl
js
inc
inc
nop
xor
cmp
rolb
cltd
jl
adc
dec
aaa
cmc
sbb
aam
push
aad
lds
jl
xor
outsb
repnz
int
mov
xor
or
and
ja
fdivs
loopne
dec
mov
xchg
lret
in
in
cmp
pop
mov
shll
loopne
aam
or
rcll
pushf
lea
je
push
sub
pusha
clc
cmp
pusha
lea
ja
jmp
pop
push
jo
push
or
xor
inc
sbb
sti
sbb
and
push
sbb
jne
pop
jg
ficomps
hlt
inc
hlt
jae
cs
rorl
xor
mov
fucomi
fwait
movsl
xchg
xchg
mov
ljmp
mov
addr16
inc
leave
sub
pop
movsb
add
enter
ret
das
in
dec
add
mov
and
jne
jmp
add
inc
gs
outsl
fs
gs
imul
add
and
decb
dec
add
push
int3
popa
sbb
xor
dec
mov
push
or
ficompl
pushf
adc
bound
test
adc
sub
arpl
xchg
jmp
sysexit
ds
jmp
add
cwtl
scas
push
push
cmp
fiaddl
cmpsl
fbld
or
adc
sbb
imul
test
mov
inc
outsl
lret
sahf
out
movsb
loopne
popa
leave
jb
or
push
sub
dec
fwait
gs
jo
jl
add
cmp
test
mov
add
stc
test
test
jmp
bswap
shr
sub
test
dec
shl
clc
mov
test
test
cmc
push
or
push
call
add
inc
gs
arpl
gs
bound
arpl
fdivr
movl
xor
cmp
call
add
push
push
inc
push
je
jb
jne
add
pushf
lea
jbe
sub
mov
rcl
and
mov
pushf
bt
add
pop
mov
stc
cmc
add
rol
movl
or
setno
rcl
sub
mov
test
stc
push
bt
cmp
movb
jmp
sbb
jb
pop
xchg
cmpsl
sbb
enter
dec
pop
push
addr16
mov
dec
sub
daa
orb
ds
and
xchg
sbb
fisttpll
sarl
mov
add
imul
mov
call
add
jo
mov
sub
fisubl
push
lea
ja
stc
push
movb
imul
cmp
cmp
push
add
mov
push
movw
lea
jmp
adc
mov
pushf
push
lea
jae
stc
neg
pushf
mov
rcl
lahf
add
mov
or
setp
not
mov
aam
cmp
seta
jmp
add
push
outsl
jae
dec
gs
popa
addr16
add
add
insl
outsl
jbe
push
jb
jo
add
add
je
popa
jae
inc
jb
outsl
jb
pusha
call
add
dec
jo
outsb
push
jb
arpl
jae
jmp
pusha
movl
pusha
mov
mov
pushf
pushl
pushl
ret
jmp
pushf
mov
lea
jb
jmp
add
inc
gs
imul
outsl
arpl
pushf
jmp
add
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
out
inc
shld
mov
xor
test
mov
test
test
repnz
pusha
call
add
push
popa
jb
popa
outsb
je
insb
gs
jb
add
inc
gs
jne
insb
push
popa
je
dec
popa
insl
gs
add
xor
adc
mov
pusha
movb
pushf
lea
jb
push
test
pusha
bt
xor
sub
jo
pusha
movb
test
test
pusha
mov
jmp
cmp
cmp
pushf
pushf
pusha
movl
lea
jmp
movb
mov
lea
jne
bsf
bsr
btc
or
mov
pusha
bt
pusha
add
call
add
push
push
jb
outsl
jb
add
push
gs
jbe
outsb
je
lea
call
pushf
mov
call
call
lea
jne
je
pushf
mov
movb
inc
push
pushf
pusha
movb
inc
pushf
push
movw
movl
lea
jmp
add
dec
insl
popa
addr16
imul
dec
arpl
push
imul
outsl
popa
fs
imul
add
arpl
gs
insb
imul
push
lea
ja
shl
xor
sub
neg
add
inc
mov
ror
test
mov
clc
bt
jmp
or
mov
push
shl
in
add
rcl
jmp
push
dec
mov
mov
jae
fwait
push
push
and
shrb
push
fcompl
lahf
test
adc
movsb
bound
fnsave
push
nop
mov
orb
ds
daa
sbbb
mov
ror
aad
push
sarl
cs
out
or
mov
pop
mov
xor
mov
add
out
push
ret
xor
pop
jne
cmp
loopne
and
xchg
jl
loopne
ror
push
rolb
dec
fstp
jle
hlt
mov
std
subl
mov
pop
or
nop
push
push
out
sub
cmp
sub
hlt
xchg
call
pop
xor
nop
pop
hlt
xchg
daa
fs
loopne
in
xor
dec
sbb
jp
inc
mov
and
cli
popa
js
fsts
loopne
inc
iret
js
sub
dec
cld
sub
add
insl
jno
xchg
xor
xor
cli
inc
jp
cmp
xor
inc
inc
and
xor
cmp
frstor
mov
dec
outsl
push
sub
into
mov
jno
mov
cmp
inc
movsb
push
xchg
out
mov
mov
push
mov
js
fldcw
pop
fistpll
jl
into
shrb
mov
push
sbb
not
mov
pushl
mov
lea
call
pushf
push
lea
jne
setnp
pushf
mov
movl
mov
pusha
lea
jmp
repnz
pushf
jmp
lea
pushf
pushf
push
pusha
lea
call
pusha
mov
pusha
adc
lea
jae
pushf
lea
jae
xadd
aas
pushf
bt
mov
aaa
mov
rcl
shl
aas
mov
bswap
rcr
dec
cmp
lea
pushf
movsbw
cwtl
mov
call
pushf
mov
not
lahf
movl
pushf
cwtl
lea
jmp
daa
mov
adc
pusha
bsf
inc
mov
clc
sub
jbe
add
push
jmp
adc
bts
mov
inc
ror
and
rcl
mov
call
shrd
jmp
lahf
pushf
lahf
mov
cwtl
movsbw
mov
jmp
pushf
lea
bswap
pushf
popl
rcr
bt
stc
bswap
mov
pushf
mov
not
rcr
pushl
popl
movzbw
movl
clc
lea
js
cmc
mov
pusha
ror
pushf
neg
jmp
pushf
test
cmc
add
movb
call
jmp
push
movl
bswap
call
jmp
movzbw
pusha
mov
pop
call
movsbw
mov
mov
mov
pusha
call
jmp
jmp
pushf
popl
pushl
pushf
jmp
mov
clc
ror
call
mov
pushf
pushf
pushf
movb
lea
jmp
mov
mov
and
pushf
mov
mov
pushf
popl
push
pushf
movb
pushl
popl
movb
mov
lea
jmp
lea
jne
adc
xorb
lea
call
mov
test
call
cmp
clc
clc
xchg
cmp
push
cmp
sub
push
call
btr
not
bt
mov
mov
btr
not
ror
add
btc
sub
neg
jmp
pushf
rcr
pushf
mov
bt
movsbw
push
ror
lea
pusha
bswap
pushl
popl
lea
movl
jmp
call
xchg
movzbl
push
mov
movsbw
not
mov
mov
pusha
setg
bswap
movzbw
mov
push
movsbw
xchg
call
movl
call
movb
pusha
pushl
mov
pushf
lea
jmp
jne
push
movzbw
push
bswap
movsbw
push
call
cmp
push
jge
cmc
pusha
sub
lea
js
pushf
mov
pushl
lea
jne
bt
cmc
call
call
xchg
lea
lea
call
pushl
popl
clc
movl
ror
btr
mov
pushf
stc
pusha
pushf
ror
stc
call
jmp
pusha
movb
jmp
stc
clc
stc
sub
jmp
dec
pusha
clc
stc
test
sub
test
bt
mov
cmp
cmc
sub
jmp
mov
push
mov
pushf
mov
call
push
mov
mov
push
pushl
ret
jmp
push
mov
xchg
pusha
pushf
mov
bswap
mov
lea
call
call
xchg
jmp
jmp
push
dec
shrd
sub
add
clc
not
bts
rol
movsbw
dec
not
rcr
sbb
dec
and
test
mov
bt
bt
cmc
pusha
add
pushf
call
mov
jmp
sub
mov
jmp
setg
aas
pusha
mov
pushf
pushl
movb
bswap
cmp
stc
cmp
add
test
pushf
call
pushf
movw
mov
pushf
pushf
push
push
lea
jmp
not
mov
pushf
pop
not
not
mov
movsbw
pushf
mov
jmp
add
jmp
pushf
pushf
mov
pusha
movb
mov
lea
jmp
pushl
popl
pushf
pusha
pushf
lea
jmp
lea
jne
test
mov
cmp
jmp
bt
jmp
mov
jmp
mov
pusha
pushf
movw
dec
cmp
test
add
call
btr
btc
shrd
adc
add
mov
movzbl
pushf
rol
sets
pushl
dec
inc
and
setg
mov
call
cmp
sub
test
push
cmp
stc
and
pushf
lea
jne
push
pusha
pushf
popl
call
mov
mov
mov
push
movb
lea
jmp
mov
pushf
pushf
popl
mov
pushl
popl
movb
lea
jmp
jmp
call
pushl
popl
push
push
pushl
pushf
lea
jmp
pop
jmp
sub
bt
cmc
shl
jmp
pushf
popl
pop
bts
mov
mov
movzbw
call
mov
call
neg
movl
inc
pushf
lea
jmp
neg
push
inc
pushf
push
movb
lea
jmp
pushf
popl
movw
pushl
popl
pusha
pushf
pushf
push
lea
jmp
jmp
pusha
mov
pushf
divl
call
movw
inc
movw
pushf
push
lea
jmp
pushf
popl
pushl
pushl
popl
movb
pushf
pushf
pushf
lea
jmp
bsf
mov
shld
mov
mov
movsbw
pushf
mov
call
jmp
pushf
popl
cmc
rol
push
ror
mov
bswap
mov
rcr
pop
pushl
popl
call
movzbw
movzbl
bswap
or
not
dec
sub
call
push
movzbw
lea
pushf
mov
push
lea
movw
call
call
push
xchg
movsbl
jmp
pushl
jmp
pusha
call
push
pushf
mov
movb
push
lea
jmp
pusha
call
pusha
shl
shld
mov
cmp
add
mov
mov
pushf
mov
pushl
mov
lea
jmp
shl
cbtw
mov
test
test
jmp
jmp
sar
mov
mov
not
inc
cmc
add
pushf
not
mov
call
pushf
popl
jmp
movzbw
push
mov
pop
mov
lea
movsbw
movsbl
mov
call
movb
inc
pushf
push
lea
jmp
jmp
pop
push
bswap
mov
call
inc
pushf
jmp
movb
pushf
mov
pushf
mov
push
mov
pushl
push
movb
lea
jnp
jne
btc
stc
btr
shl
mov
test
and
js
test
stc
cmp
pusha
pusha
pushf
call
lea
jne
shrd
btr
pushf
adc
xorb
lea
call
jmp
push
pushf
jmp
pushl
popl
push
lea
jmp
pop
bswap
pushf
popl
mov
clc
pushf
lea
mov
stc
bts
mov
lea
pushf
pushl
popl
jmp
xchg
pusha
mov
pushf
call
bswap
mov
movsbl
pushf
cmc
push
rcr
mov
mov
clc
rol
bts
push
cmc
pushl
ror
btr
bts
push
rcr
btr
mov
pusha
pusha
stc
pushf
ror
jmp
mov
movw
pusha
pushl
lea
jmp
jmp
mov
btc
call
call
push
jmp
jmp
add
pushl
not
dec
dec
bswap
setb
dec
shr
pusha
setl
xor
rcr
cmc
push
ror
dec
add
shl
rcr
or
mov
clc
bt
add
jmp
mov
push
lea
jmp
pushf
mov
pushf
push
pushf
lea
jmp
cmc
rcr
pop
mov
clc
bt
ror
bt
cmp
jmp
call
push
movb
mov
push
pusha
pushf
pushl
ret
bswap
mov
call
bswap
ror
shld
bsr
adc
sub
movzbw
lea
movzbl
call
pushf
pushl
popl
mov
pushf
push
lea
jmp
neg
not
inc
mov
cmc
jmp
not
movl
call
pushf
pushf
add
mov
mov
pushf
pushl
pushl
ret
stc
cmp
add
pusha
pushf
popl
jmp
call
push
pusha
xchg
call
call
bsr
btr
mov
dec
bsr
sub
mov
cmc
not
clc
push
cmp
not
jmp
pusha
stc
sub
call
mov
jmp
mov
add
call
and
sub
sub
stc
movzbl
call
pusha
pushl
popl
pushf
pushf
pushl
lea
jmp
movl
jmp
sub
pushl
mov
mov
mov
pushf
movb
lea
jmp
pushf
pushf
pushf
pushl
popl
pushl
push
mov
mov
lea
jmp
pushf
xor
clc
call
jmp
mov
mov
pushf
push
lea
jmp
add
btc
mov
bt
push
clc
and
movl
cmp
mov
pusha
lea
jne
adc
jmp
pushf
inc
push
pushf
lea
jmp
push
mov
mov
push
push
mov
pushf
mov
pushl
not
push
bswap
mov
pushl
pop
mov
jmp
jmp
push
test
push
add
push
pusha
mov
movw
lea
jmp
lea
movzbl
movzbl
pushf
pushf
mov
jmp
pushl
popl
push
mov
lea
jmp
movsbl
mov
pusha
pushl
pushf
mov
pushl
mov
push
mov
pushf
push
lea
jmp
pusha
push
mov
pushf
pushf
movl
pushf
popl
call
cmc
pushl
popl
lea
movl
stc
mov
push
jmp
clc
xchg
mov
bswap
mov
call
mov
jmp
pushf
pushf
push
xchg
bswap
mov
jmp
mov
jmp
pushf
mov
pusha
pushf
popl
movzbl
rol
jmp
clc
jmp
btc
btr
movl
rcl
not
lea
jge
mov
btr
ror
shrd
not
neg
not
pusha
xchg
inc
sub
cmc
inc
mov
rcr
clc
pushf
sub
not
bsr
mov
rcl
rol
mov
add
ror
add
setnp
sub
mov
inc
call
pusha
xchg
pop
movzbw
pop
mov
pop
pusha
push
pop
mov
movzbw
not
pushf
mov
pop
movw
pop
mov
movsbw
mov
jmp
inc
mov
push
pushl
pushf
lea
jmp
pushl
movb
pushl
popl
mov
push
lea
jmp
dec
test
test
sub
lea
ja
push
pusha
cbtw
mov
cwtl
pusha
dec
test
sub
mov
movw
push
pushl
mov
pushf
movb
mov
movw
lea
jmp
pusha
mov
not
bswap
pushl
mov
mov
push
pushl
pushf
mov
lea
mov
pushf
mov
pop
mov
push
mov
pop
pushf
popl
cmc
mov
btr
stc
mov
pop
pushl
popl
clc
pushf
bt
bswap
movl
ror
pusha
btr
btc
mov
pushf
ror
jmp
call
lea
jne
bts
mov
test
call
lea
jae
pushf
pusha
pushf
movb
call
movb
pushf
sub
jmp
pushf
pushf
call
mov
clc
clc
add
pushl
bt
stc
jmp
pushf
lea
js
pusha
pushl
popl
push
mov
lea
jmp
mov
pusha
jmp
mov
pushf
pushl
pushl
ret
bt
cmp
call
lea
mov
pusha
lea
js
push
lea
pushf
pusha
mov
pushl
push
lea
jmp
dec
add
jnp
pushf
add
cmc
add
call
pushf
mov
pushf
mov
pusha
lea
jmp
call
inc
push
lea
jmp
mov
mov
pusha
mov
pushf
lea
jmp
ror
bt
movw
pusha
clc
neg
pushl
call
pushf
ror
bt
stc
pushf
movw
neg
movw
jmp
pushf
jmp
jmp
movb
inc
pushl
lea
jmp
movl
pusha
pusha
jmp
btc
push
movsbw
rcl
movzbl
push
movzbl
pushl
pusha
lea
call
mov
pushl
popl
mov
mov
lea
jmp
mov
cmc
add
movb
call
movsbl
mov
mov
bswap
push
movsbl
pusha
not
mov
lea
js
pusha
pop
pushf
popl
movsbl
btr
push
rol
mov
btc
mov
pushf
mov
rcl
rcr
pushl
popl
btr
cmc
call
jmp
push
jmp
cwtl
bt
cmp
jmp
xor
add
aam
aaa
mov
cmc
test
clc
add
pushf
call
call
sub
bt
stc
cmp
bt
sub
pusha
mov
push
pushl
pushf
lea
jmp
xchg
cmp
bsf
mov
rol
sub
bsf
stc
mov
jns
cmc
cmc
bt
add
jg
pushf
pushf
pusha
mov
movb
pushf
pushf
lea
jmp
pushf
inc
mov
lea
jmp
push
movzbl
movsbw
push
call
bswap
mov
bswap
mov
pusha
pushl
movw
lea
pushf
call
lea
cpuid
jmp
mov
mov
push
pushl
ret
call
add
add
pushf
popl
bts
rcr
mov
pushf
mov
cmc
pushl
popl
ror
bts
rcl
movl
ror
mov
jmp
ror
push
movb
bt
call
jmp
ror
pushf
bt
test
neg
jmp
aad
adc
das
shr
mov
adc
mov
bt
add
pusha
mov
mov
pushl
movb
pusha
lea
jmp
not
movl
mov
rol
mov
clc
ror
push
cmp
cmp
neg
push
pushf
jmp
lea
jae
push
pusha
movb
pushf
pushf
pushl
ret
mov
jmp
neg
pusha
push
inc
movb
pushf
lea
jmp
neg
jmp
call
cmp
mov
pusha
call
not
pushf
sub
cmp
pusha
movb
and
jmp
test
popf
pushf
mov
pusha
push
lea
jmp
mov
movb
lea
jmp
jmp
sub
movb
stc
neg
push
lea
movl
mov
inc
bt
pusha
neg
cmc
cmc
stc
sub
call
mov
jmp
inc
pushf
pushl
movb
lea
jmp
pushf
call
cmp
or
mov
push
call
pushl
mov
push
lea
jmp
cmc
ror
shl
mov
cmp
call
pusha
pusha
stc
sub
sub
jl
stc
xchg
cmc
jmp
mov
movb
push
pushl
ret
lea
ja
mov
push
pushf
push
pushf
lea
jmp
cmp
pushf
pushl
popl
cmc
test
add
jmp
mov
movzbl
shl
bt
shl
call
push
rep
mov
mov
sar
mov
test
pushl
popf
pushf
lea
jmp
jmp
rcr
clc
mov
call
add
btr
bswap
mov
neg
shl
sub
adc
inc
xor
setne
shl
neg
movzbl
jmp
mov
mov
jmp
call
cmp
bt
movzww
push
xchg
stc
pusha
sub
cmp
lea
clc
clc
push
neg
pushl
pushf
pushf
pushf
inc
clc
test
neg
movb
cmp
cmc
cmc
sub
test
movb
jmp
mov
call
jmp
mov
pusha
mov
lea
jmp
bswap
bswap
dec
movzbw
rcr
push
pushl
sub
btr
shl
mov
stc
add
push
pushf
mov
pushf
pusha
lea
jmp
movw
inc
mov
lea
jmp
add
cmp
add
pushl
pusha
call
push
mov
lahf
mov
push
lea
ja
cpuid
jmp
add
jno
cmp
cmp
add
pusha
jmp
pusha
mov
movzbl
mov
movsbw
push
mov
jmp
rcr
shl
sbb
push
mov
clc
stc
add
mov
jmp
btc
mov
ror
shrd
mov
call
movl
movl
pushf
mov
push
call
jmp
rol
mov
mov
movsbl
btc
rol
pushl
popl
lea
bts
not
push
movl
ror
mov
clc
cmc
bt
jmp
push
pusha
push
pushl
popl
push
push
push
lea
jmp
jmp
pushf
jmp
pusha
mov
pushf
push
lea
jmp
pushl
popl
pushf
pusha
movb
movb
lea
jmp
pushf
mov
cmc
jmp
lea
mov
push
mov
movzbl
not
mov
bswap
mov
jmp
movsbw
pusha
mov
jmp
mov
pusha
pushl
pushf
lea
jmp
sub
call
pusha
push
jmp
pusha
pushf
pushf
xchg
pop
movzbl
mov
bswap
pushf
mov
pusha
movzbw
lea
mov
bswap
push
movsbw
mov
push
movsbw
movsbl
lea
mov
call
btc
daa
clc
dec
rdtsc
push
sub
movb
mov
call
cmp
add
jmp
inc
pushf
pushf
lea
jmp
pushl
movw
mov
mov
lea
jmp
dec
pushf
push
mov
pushf
lea
jmp
pushf
dec
movw
stc
xor
test
cmc
pushf
pushf
add
jmp
pushf
popl
pushf
movb
lea
jl
popl
pusha
movb
mov
pusha
lea
jmp
jmp
shl
mov
test
bt
sbb
mov
cmc
pushf
pusha
pusha
sub
bt
jmp
pushf
mov
pushl
cbtw
call
cmp
shr
pushf
call
not
push
mov
push
movw
lea
jmp
push
pusha
stc
movb
shr
jmp
cmc
neg
jmp
pusha
pushf
pusha
mov
mov
not
mov
push
jmp
pushf
xchg
movb
lea
jnp
pushf
movl
pushf
pusha
pushf
mov
mov
mov
mov
pushf
pushl
ret
not
call
pushf
neg
jmp
pushf
popl
lea
jae
pushf
pushl
popl
movw
pushl
mov
pusha
lea
jmp
call
mov
pushf
push
movb
pushf
popl
pushf
mov
pushl
popl
pushl
pushf
lea
jmp
pushf
mov
mov
pusha
lea
jmp
mov
mov
pusha
sar
sub
add
shl
mov
bsf
inc
mov
cmp
bt
jmp
lea
jne
bt
jmp
pusha
push
pushf
mov
pushf
pushf
lea
jmp
mov
bswap
not
mov
movw
mov
movzbw
bswap
mov
movsbl
mov
not
movzbw
bswap
not
pushf
popl
pushl
jmp
mov
mov
lea
jmp
push
mov
jmp
jmp
pushf
mov
dec
test
bt
stc
mov
stc
or
call
bt
notl
sar
mov
cmp
pushf
jmp
lea
inc
not
inc
xadd
shl
jmp
movsbw
mov
mov
push
pushl
movb
dec
stc
cmc
bt
add
jmp
mov
push
pushf
push
lea
jmp
lea
mov
bt
mov
ror
cmp
pushf
test
clc
neg
jmp
movb
lea
pushf
pushf
pusha
call
movsbw
mov
cmp
bt
add
jmp
adc
ror
xorb
movsbl
setp
bswap
lea
pop
pusha
pushf
lea
jmp
mov
pushf
pushl
movb
pushf
pushl
ret
call
test
sub
test
add
push
pushf
pushf
popl
call
shr
bts
movzww
test
bt
xchg
call
mov
pushf
mov
jmp
pushf
pushf
cwtl
pusha
dec
cmc
sub
push
pushf
movw
call
pusha
call
call
call
pusha
call
add
jmp
mov
pushf
jmp
mov
mov
mov
movb
lea
jmp
jmp
jmp
call
bsf
lea
pushf
pushf
cmp
call
xchg
mov
rcl
mov
stc
clc
pushf
cmc
add
jmp
pusha
xchg
bswap
bswap
not
mov
pusha
mov
movzbl
movsbw
bswap
mov
pushf
movsbw
mov
lea
mov
pop
call
pushf
popl
bswap
movsbw
mov
call
pushf
pushl
pushf
popl
pushf
jmp
call
mov
mov
movb
pushf
lea
jmp
pushf
mov
movzbw
bswap
movzbw
mov
pusha
mov
not
not
pop
mov
push
mov
not
mov
call
cmp
cmc
cmp
mov
push
sub
jmp
ror
inc
cmp
rcl
sub
mov
mov
push
movzbl
movsbw
call
and
jmp
xorb
movzbl
jmp
ror
mov
bt
jmp
mov
pushl
pushl
pushf
lea
jmp
pusha
pop
mov
mov
movsbl
mov
bswap
pushf
jmp
mov
call
push
not
cmp
mov
bt
call
push
push
mov
push
pushf
pushf
pushl
ret
sub
jo
pushl
pusha
add
cmp
pushl
pushl
popf
pushl
pushf
lea
jmp
inc
pusha
bsf
shl
movzbl
lea
clc
add
sub
not
inc
dec
neg
pusha
dec
movzbl
rcr
pushf
clc
sub
call
pushf
neg
cmc
rol
cmp
test
lea
call
clc
sub
jmp
pushl
popl
mov
lea
jmp
aaa
mov
bts
ror
xor
test
mov
neg
shl
push
mov
bt
stc
stc
test
add
push
jmp
pusha
push
push
jmp
pushl
bt
ror
jmp
jmp
lea
mov
mov
pop
movzbw
push
mov
movzbw
jmp
lea
cwtl
bsf
mov
shrd
mov
pusha
pusha
push
add
push
movb
lea
je
mov
pushf
lea
jmp
not
movw
mov
movsbw
pop
jmp
lea
jne
bt
stc
bt
xor
pusha
pusha
lea
jo
xchg
push
movl
pushf
call
mov
lea
movsbw
ror
bswap
pushl
popl
cmc
lea
movl
call
pushf
call
pusha
mov
jmp
push
pushf
pusha
mov
pushf
push
lea
jmp
mov
call
pushl
push
mov
mov
pushf
movb
lea
jmp
mov
pop
pushf
popl
bswap
mov
btr
cmc
mov
bt
pushl
popl
pusha
push
not
pop
movl
bswap
mov
cmc
bt
ror
stc
neg
call
mov
pushl
jmp
bt
push
sub
clc
bt
cmpl
pushf
mov
pushl
push
mov
push
pushf
pusha
mov
pushf
push
pushf
mov
pushf
push
lea
jnp
pushf
lea
jne
sbb
lea
btc
mov
call
lea
mov
not
mov
mov
movzbw
not
mov
movsbw
movzbw
pushf
pushf
pushf
popl
pop
btc
mov
btc
mov
lea
movsbl
jmp
stc
mov
bt
test
call
jmp
dec
mov
jns
or
mov
pusha
test
cmc
mov
add
jmp
pushl
mov
pusha
push
pushl
lea
jmp
sub
call
lea
and
rcl
cmp
not
bsr
shl
rcl
ror
xor
jmp
pushf
mov
pusha
pushf
lea
jmp
ror
mov
shl
add
mov
push
mov
jmp
jmp
pushf
dec
call
rcr
and
mov
bt
push
clc
sub
pushl
pushf
pushf
movb
mov
pushl
pusha
lea
jmp
jmp
pushf
pushf
mov
mov
push
jmp
stc
xor
pushf
pushf
pushf
xchg
push
call
bt
pushl
add
pushf
lea
jmp
movl
lea
jne
movsbw
xorb
not
bswap
pop
pushf
pushl
lea
jmp
jmp
pushf
jmp
push
lea
call
lea
bswap
movzbw
push
mov
pushf
mov
pushf
pusha
movb
mov
pushl
mov
pushf
pushf
lea
jmp
mov
mov
pushf
pusha
lea
jmp
rcr
aaa
shl
sbb
mov
call
pushl
popl
cmc
pop
pushf
movl
pusha
mov
mov
cmc
jmp
shrd
adc
mov
cltd
stc
lea
pop
and
push
adc
mov
or
mov
rdtsc
add
mov
std
xchg
rcr
adc
pushl
popf
bswap
mov
mov
not
mov
pusha
xchg
mov
call
sub
cmc
pushf
bt
lea
jg
shr
push
pusha
movw
jmp
jmp
call
cmp
adc
mov
add
mov
test
cmc
sub
push
cmp
pushf
cmc
shl
pushf
mov
pusha
jmp
cmp
sub
cmp
shr
pushl
pushf
mov
pushf
jmp
pushf
lea
ja
shl
neg
bsr
mov
lea
jmp
movzbl
call
shr
shl
mov
stc
stc
sub
call
setae
sub
rcl
btc
bts
xor
and
pushl
movb
neg
lea
ja
ror
rcl
bsr
push
shr
sub
jmp
mov
pop
pushl
lea
mov
movb
mov
pushf
pushl
ret
bt
movzbw
ror
sets
mov
or
mov
call
mov
push
not
push
movzbw
mov
lea
pushf
jmp
movw
and
cmc
test
cmp
mov
pusha
lea
jne
bt
xorb
movzbl
lea
pop
push
mov
lea
jmp
mov
mov
mov
mov
pushf
pusha
lea
jmp
inc
pushf
mov
lea
jmp
push
pushf
call
lea
jne
clc
stc
cmc
sub
jmp
movw
pushl
mov
movl
pusha
movw
lea
jmp
pushf
mov
pushf
movb
pushl
ret
pusha
lea
jne
jle
adc
bsr
bswap
mov
pushf
and
cmp
pusha
cmc
jmp
stc
sub
movzbl
push
cmc
sub
pushf
test
not
clc
bt
xor
pushf
call
movb
neg
call
bsr
adc
mov
sbb
mov
cmc
call
jmp
pushf
pushf
movb
xchg
pusha
movb
lea
jns
pushf
movl
pushf
call
xchg
pop
mov
mov
push
mov
inc
gs
in
mov
loopne
mov
sti
push
mov
es
mov
pop
jae
xchg
jge
mov
lret
xchg
xchg
jb
xchg
int
mov
es
mov
sti
push
mov
lcall
xchg
lods
jno
xchg
jl
mov
es
mov
js
mov
es
mov
sti
push
mov
pop
mov
lods
jno
xchg
mov
jl
xchg
inc
jb
xchg
shlb
dec
fs
sti
push
mov
shlb
js
mov
loopne
mov
sbb
xchg
adc
xchg
in
mov
pop
mov
sti
push
mov
lcall
xchg
sahf
jl
xchg
lods
jno
xchg
js
mov
lret
xchg
in
mov
sti
push
mov
arpl
xchg
pop
push
mov
js
mov
or
bound
xchg
and
push
mov
jge
mov
int
mov
es
mov
popa
push
mov
mov
mov
or
jb
xchg
sti
push
mov
or
xchg
xchg
pop
mov
in
mov
or
xchg
mov
xchg
push
mov
int
mov
sti
push
mov
shll
or
pop
mov
adc
mov
push
mov
cmp
push
mov
inc
gs
js
mov
stos
push
mov
sbb
xchg
lcall
xchg
mov
xchg
int3
push
mov
dec
fs
adc
mov
lret
xchg
pop
jae
xchg
sbb
xchg
mov
xchg
xchg
int3
push
mov
loopne
mov
popa
push
mov
xchg
jb
xchg
xchg
jb
xchg
js
mov
pop
push
mov
jne
mov
int3
push
mov
loopne
mov
pop
push
mov
pop
mov
jl
mov
dec
jne
xchg
lret
xchg
mov
xchg
int3
push
mov
and
jp
xchg
js
mov
sub
xchg
cmp
push
mov
int3
push
mov
int
mov
dec
jne
xchg
jne
mov
shll
pop
push
mov
lret
xchg
cmp
push
mov
xchg
pop
mov
inc
jb
xchg
int
mov
inc
gs
shlb
dec
jne
xchg
xchg
push
mov
int3
push
mov
cmp
pop
mov
adc
mov
xchg
push
mov
shlb
xchg
pop
mov
pop
push
mov
int3
push
mov
xchg
push
mov
gs
mov
loopne
mov
arpl
xchg
js
mov
in
mov
lcall
xchg
int3
push
mov
adc
xchg
xchg
push
mov
stos
push
mov
adc
mov
es
mov
gs
mov
lods
jno
xchg
int3
push
mov
adc
mov
mov
jp
xchg
sbb
xchg
loopne
mov
or
fs
int3
push
mov
adc
xchg
mov
pop
mov
adc
xchg
adc
mov
gs
mov
jl
mov
int3
push
mov
xor
loopne
mov
mov
popa
mov
jne
mov
inc
gs
dec
jne
xchg
int3
push
mov
or
xchg
shll
pop
jae
xchg
xchg
push
mov
jge
mov
sbb
xchg
loopne
mov
int3
push
mov
jge
mov
lcall
xchg
xchg
pop
push
mov
popa
push
mov
push
jb
xchg
int3
push
mov
lods
jno
xchg
jge
mov
es
mov
js
mov
popa
push
mov
lcall
xchg
int3
push
mov
in
mov
js
mov
cmp
push
mov
or
insl
mov
loopne
mov
sti
push
mov
shlb
in
mov
sub
xchg
lods
jno
xchg
js
mov
popa
push
mov
shlb
sti
push
mov
inc
gs
xchg
pop
mov
in
mov
jl
mov
mov
xchg
jne
mov
mov
push
mov
pop
push
mov
sbb
xchg
cmp
push
mov
mov
outsb
mov
mov
xchg
sti
push
mov
mov
xchg
lcall
xchg
adc
mov
lret
xchg
jl
mov
lcall
xchg
sahf
jl
xchg
sbb
xchg
xor
xchg
pop
mov
es
mov
dec
jne
xchg
xor
sti
push
mov
js
mov
push
push
push
jmp
sub
pushf
xchg
call
push
movl
inc
movb
mov
movw
lea
jmp
ror
jmp
jmp
mov
pushf
mov
bswap
pop
pushf
pusha
mov
jmp
lea
sar
push
not
sub
xor
sete
lahf
neg
lea
test
or
movsbw
and
sbb
pop
movsbw
sub
mov
not
mov
bswap
pushf
mov
pushf
popl
mov
call
dec
mov
clc
pusha
mov
pusha
pushf
call
push
push
movb
mov
movw
lea
jmp
bt
call
neg
jmp
pushf
pop
jmp
add
jmp
pusha
pusha
call
pushf
popl
call
ror
mov
bswap
btc
not
mov
btr
btr
call
jmp
shld
mov
call
lea
jns
push
movw
mov
push
pusha
pushf
pushf
lea
jmp
pushl
popl
mov
pushf
pushf
push
lea
jmp
bt
test
push
add
pushf
mov
mov
push
mov
pushf
lea
jmp
bswap
mov
jmp
shrd
pushl
pusha
pushl
mov
movw
jmp
inc
pushl
movb
lea
jmp
cmp
stc
neg
jmp
cmc
jmp
push
pushf
jmp
pusha
push
pushf
movl
movb
jmp
pusha
sub
test
push
mov
test
cmpl
call
mov
mov
lea
je
jmp
pushf
cmp
pushl
call
push
ror
clc
push
neg
movb
jmp
bt
sub
cmc
cmc
bt
clc
shl
push
jmp
pushf
popl
movb
jmp
sub
mov
mov
movb
mov
mov
movb
lea
jmp
cmc
stc
add
call
push
jmp
mov
pushl
pushl
ret
bswap
mov
push
pusha
lea
call
pushf
mov
movl
mov
mov
call
jmp
call
cld
call
mov
clc
stc
jmp
cmp
add
pushf
pushf
jmp
pushf
pusha
inc
mov
mov
stc
jmp
pushf
popl
push
bt
mov
mov
movzbw
rcr
mov
cmc
pushf
rcr
btc
pushl
popl
rcr
lea
cmc
movl
cmc
mov
bt
ror
pushf
neg
movb
jmp
