incb
inc
rcrl
jno
into
test
lods
adc
mov
incl
and
jne
push
in
test
inc
cmp
xor
and
ficomps
jmp
std
pop
sub
dec
popa
dec
mov
in
and
fiaddl
add
and
andb
and
popf
sub
lcall
stos
sahf
cmpl
iret
jno
pop
and
and
sbb
pop
out
repnz
inc
in
pushf
and
sti
aam
in
and
ja
cmp
cs
cwtl
and
lock
dec
cmpsb
cmp
xchg
jecxz
aas
mov
bound
sub
lret
jno
push
dec
in
jg
mov
es
cmp
dec
movsb
pop
popa
dec
shrb
push
out
out
xchg
push
shlb
jns
push
inc
jmp
mov
mov
lahf
mov
popa
js
sbb
ret
push
call
and
test
ljmp
dec
cld
bt
clc
push
pushf
cmp
jmp
lea
jne
pushf
pusha
call
pushl
pushfw
popw
bt
cmc
mov
clc
cmc
rol
stc
cmp
push
neg
pushf
mov
pushl
inc
call
neg
bt
stc
mov
bt
pushw
popfw
jmp
push
test
mov
ror
dec
add
ror
mov
push
clc
call
mov
call
jmp
cmpsb
std
test
push
stos
imul
mov
std
test
imul
mov
mov
xorb
cmpsb
std
test
imul
loopne
pushf
mov
pushf
lea
call
pusha
call
push
mov
mov
jmp
test
sub
jmp
lea
je
pushf
mov
movb
lea
jmp
pushf
lea
ja
push
push
bt
sub
or
add
add
setnp
mov
adc
sub
mov
mov
pusha
repnz
pusha
jmp
push
lock
std
std
mov
cmp
fnstenv
int
dec
popf
sub
pushf
mov
pop
ja
xor
push
pop
or
jge
imul
movsb
and
aam
pop
les
loop
daa
adc
test
popf
cwtl
rcl
js
sub
inc
ss
mov
xchg
push
jbe
xchg
cmc
mov
ds
iret
push
enter
mov
adc
add
add
push
cmp
add
add
and
cmp
add
add
outsl
cmp
cmp
test
std
sub
fildll
cmp
out
cmp
add
add
pusha
jmp
clc
neg
push
not
pusha
rol
jmp
jmp
in
repnz
push
shrb
clc
cld
push
aas
pop
sbb
push
pop
inc
andnps
inc
sti
inc
jle
pop
in
cmc
pop
loop
insb
not
lods
test
loop
xchg
pop
add
push
xor
shlb
imul
out
adc
cmpsb
jns
add
xchg
popa
mov
cmp
mov
jp
jp
xchg
cmp
adc
sub
lcall
fs
jae
jmp
push
pushf
jmp
movb
call
dec
mov
inc
not
mov
lea
pushf
lea
call
push
adc
jmp
jmp
inc
call
cmp
ret
mov
out
les
in
xchg
xor
shrb
push
sub
dec
cmpsb
rcrb
insl
je
sbb
cltd
mov
shll
inc
rorl
xchg
gs
popf
lret
aaa
lods
add
or
lcall
movl
and
not
pushf
lods
cmp
cmc
test
neg
pushf
bt
not
cmc
rol
jmp
inc
lds
ss
popf
push
jp
jle
bound
sub
pop
cmp
out
out
lods
es
mov
jmp
push
xchg
and
add
shrb
dec
mov
cltd
mov
mov
push
cmp
mov
in
imul
icebp
fmulp
jge
sti
pop
nop
mov
enter
xchg
ljmp
xchg
xchg
pop
sti
sbb
in
mov
loop
push
or
mov
pusha
mov
jb
roll
stos
jecxz
and
xchg
adc
stc
scas
push
jbe
sar
pop
jmp
adc
push
int
pop
fmul
popf
push
push
loope
leave
and
lods
and
mov
mov
cld
js
sbb
add
mov
fldl2e
dec
ficoms
jg
and
in
pop
cmp
jg
push
scas
out
push
mov
fdivp
in
pushf
push
sahf
jp
nop
mov
xchg
fsts
dec
out
jp
fs
pop
xor
fxch
outsb
pop
adc
cmpsb
dec
popa
out
cmpsl
mov
sbb
arpl
mov
lock
inc
sarl
jle
or
icebp
pushf
push
xor
add
jg
pushf
mov
push
jns
xor
sarl
in
xchg
xor
dec
ljmp
jg
dec
pop
xor
push
inc
ret
inc
fsubl
sarl
or
movsb
inc
mov
shrb
out
dec
sub
xchg
add
lea
jno
jge
dec
jbe
shll
mov
pop
and
lahf
xchg
fistl
push
roll
push
leave
push
lcall
mov
into
push
pop
sbb
repz
out
mov
mov
movsl
pushl
mov
hlt
cwtl
insl
pop
inc
adc
je
mov
cmp
jmp
andb
popa
dec
in
popa
mov
movb
add
outsl
jmp
push
cs
and
cmpsb
lcall
cwtl
repnz
out
idivb
ds
in
in
fwait
int
in
xchg
sarl
mov
or
jecxz
pop
scas
or
jns
pushf
sbb
leave
fcoml
imul
push
dec
imul
pop
iret
mov
sahf
cmp
sbb
movsb
jle
insb
nop
mov
data16
push
sub
inc
rclb
dec
hlt
outsb
fadds
push
in
dec
sbb
lock
enter
jo
jg
sbb
sbb
cmp
sbb
and
adc
insb
shrl
movsb
pop
mov
push
enter
test
shlb
cmc
mov
adc
cmpsl
aas
add
push
and
das
xchg
add
cmc
shl
inc
push
inc
adc
xor
sbb
and
adc
cs
sub
inc
sub
inc
and
test
stos
sbb
dec
mov
cmp
jecxz
add
mov
cmp
mov
movq
xchg
jl,pn
pop
andl
jb
movsb
pop
push
leave
popa
mov
aas
fwait
and
xor
insb
data16
scas
mov
mov
js
popa
cmpsl
sbb
pop
insb
out
cmpsl
pop
adc
fistl
push
out
pop
cmp
popa
negl
imul
push
negl
adc
cmp
jmp
push
lods
stc
jmp
call
pusha
pusha
movl
pushf
movl
movw
mov
lea
jmp
insb
in
stc
ja
and
les
loopne
int3
xchg
cld
pop
shrb
pushf
fwait
mov
cmp
pop
jecxz
and
adc
mov
xor
add
in
popf
shrb
adc
mov
movsl
mov
inc
insb
enter
mov
push
bnd
dec
rcl
test
neg
int
fdivp
push
inc
jmp
in
dec
push
push
push
dec
and
and
aam
cld
inc
call
jle
lcall
add
and
add
sub
jmp
enter
or
ja
inc
xor
ja
lds
aaa
mov
pop
icebp
mov
into
les
arpl
or
cmp
or
in
scas
sub
dec
loopne
dec
pop
mov
ja
mov
mov
sbb
and
xor
jle
xor
mov
gs
pop
imul
dec
fisttps
dec
sbb
and
iret
int
or
and
inc
add
add
mov
mov
arpl
push
jp
jbe
mulb
push
mov
pop
aad
push
push
fadds
adc
adc
add
ljmp
insl
cmp
pushf
into
xor
cmp
xchg
dec
pop
dec
push
mov
push
sbb
mov
sti
jne
sbb
mov
xchg
and
xor
mov
inc
sbb
push
adc
shlb
and
out
dec
sbb
or
mov
push
xor
mov
inc
ja
inc
icebp
sti
addr16
sub
fsubr
mov
fwait
or
xchg
popf
push
sbb
add
loopne
aam
in
adc
mov
sbb
cwtl
push
test
pushf
sbb
push
sub
mov
jmp
repz
sti
insl
addr16
int
mov
cmpb
dec
sbb
je
sbb
jge
inc
jno
cmpsl
lods
test
lods
ficomps
out
movsb
negb
mov
mov
movsl
mov
dec
jae
icebp
mov
lcall
in
mov
iret
sahf
adc
sbb
leave
cmpl
pop
ds
push
xchg
adc
ss
addr16
cmpsl
adc
mov
sbb
leave
cmp
mov
pushf
add
call
call
dec
and
cmp
inc
cmp
ds
pop
ss
out
push
in
out
mov
mov
add
cld
push
mov
mov
inc
leave
ja
sub
stos
jecxz
push
or
lret
divb
cmc
dec
mov
cmpsl
sbb
fucompp
outsl
leave
xlat
shlb
push
lcall
dec
imull
popa
fistl
jno
dec
sbb
cld
jl
pusha
clc
cmp
pushl
call
lods
lds
iret
das
and
nop
cli
test
mov
mov
test
mov
jmp
out
jb
ret
pushf
mov
and
push
inc
jmp
mov
inc
fisttpl
in
movhps
xchg
xchg
movzbl
add
ds
push
rclb
inc
ljmp
xor
jb
adc
jno
cmp
inc
stc
aam
nop
or
jo
cmp
cli
inc
inc
pop
dec
lock
std
adc
stos
inc
sbb
dec
push
test
iret
jne
out
lods
push
sbb
sbb
pusha
int
enter
adc
jne
std
mov
lds
push
imul
xor
jnp
fbld
in
pop
jecxz
dec
popw
mov
xor
sti
or
enter
ds
xor
test
jnp
push
ljmp
sar
sbbb
les
jb
jb
bound
data16
adc
push
jp
dec
xchg
pcmpgtd
push
push
test
stc
dec
stc
jae
adc
push
into
jb
pop
xchg
ret
popf
push
and
orb
mov
dec
idiv
push
mov
sar
cmpsb
jb
test
fdivs
xor
inc
xor
ud1
sub
xor
mov
fisubrl
fisubrs
fmul
mov
sti
mov
aas
movsl
pop
adc
xchg
inc
popa
dec
clc
dec
jg
shl
dec
inc
aas
sub
pop
mov
lea
mov
lcall
fwait
aad
and
jmp
or
jb
outsb
sub
push
or
jle
and
scas
lds
xor
addr16
jb
fiadds
sti
pop
leave
inc
push
fistpl
sub
outsb
pop
arpl
or
push
test
xchg
sti
mov
repnz
and
cli
inc
jl
push
out
push
pop
into
frstor
dec
into
pop
or
mov
sub
outsl
rorl
dec
pop
inc
dec
data16
add
movb
and
pusha
bt
movb
push
add
pushl
pushf
movb
mov
lea
jmp
mov
pusha
pushl
ret
cmc
cmp
call
pushf
jmp
mov
jle
mov
or
xlat
popf
mov
mov
and
into
movsb
fisubl
jmp
daa
mov
inc
dec
push
test
mov
push
or
push
rclb
scas
or
sub
icebp
jecxz
push
pop
or
adc
cmp
popa
cmpsl
adc
or
aaa
test
fwait
or
shrb
sarl
imul
push
out
lcall
dec
or
mov
mov
cmp
add
push
js
mov
add
nop
mov
repz
bound
jecxz
stc
out
movsl
iret
stc
js
and
dec
testb
fs
dec
inc
hlt
pop
shrl
and
jno
sub
lcall
iret
sub
jnp
sar
mov
clc
push
bt
call
lea
lea
mov
pushl
pusha
lea
jmp
mov
cmp
mov
rcrl
mov
popf
jle
loop
inc
jp
and
mov
insb
inc
out
in
xor
sbb
add
jb
push
push
icebp
or
cmp
adc
add
icebp
in
test
xor
ja
popa
cmpsl
adc
aad
out
sbb
movsb
lret
jl
inc
out
fs
js
insb
ficoml
dec
adc
lcall
jae
clc
clc
stc
add
call
lea
je
push
movb
pushf
movb
lea
jmp
dec
and
xchg
int
cmpsb
inc
or
sti
xlat
movsl
sti
mov
scas
and
adc
mov
pop
out
inc
dec
and
roll
sub
ljmp
add
push
jmp
mov
pop
sub
popa
cs
and
ja
mov
ret
cmpsl
adc
jb
stc
ja
inc
ret
mov
lret
pop
repnz
fidivrl
ljmp
dec
adc
sub
add
or
sbb
push
jp
pop
xor
sbb
mov
push
or
daa
push
mov
mov
loopne
pushf
push
std
rol
push
jno
inc
int3
cwtl
xor
stc
shl
addr16
xchg
ljmp
mov
loope
sti
enter
xchg
push
mov
inc
jecxz
cmpsl
adc
cmpl
hlt
dec
aam
jo
sahf
cld
push
pop
sarb
pop
les
jle
pop
lcall
fs
je
bt
sub
bt
bt
cmp
push
call
movzbl
stc
shr
add
pushf
stc
or
adc
mov
movb
or
movb
jmp
jmp
movsb
int
shrl
cli
aas
cltd
enter
cmp
pop
adc
pop
push
loop
lds
or
xorb
push
and
dec
ret
data16
jno
push
xchg
mov
inc
pop
push
ror
cmp
xchg
adc
dec
mov
dec
sub
vpshufd
out
jmp
in
mov
pop
insl
icebp
test
rcll
idivb
arpl
pop
int
jmp
jnp
ficoms
adc
mov
stos
in
fsub
cmc
jecxz
and
adc
add
scas
inc
add
jns
loope
jge
adc
jo
push
mov
mov
fcmove
fsubl
hlt
cmp
adc
fstpl
jmp
outsl
aad
nop
and
gs
lret
movsl
in
mov
fcmove
dec
les
adc
xlat
in
sub
lea
jae
cmp
call
or
sub
cmp
add
leave
add
in
xchg
pop
pop
repz
push
sub
xchg
aam
in
add
mov
pop
sbb
jg
dec
addr16
ljmp
cmpsb
cld
pop
mul
popa
std
stos
push
pop
cli
xchg
pop
sub
xchg
dec
ljmp
or
test
xchg
rcrl
sub
or
mov
imul
adc
mov
sahf
fwait
xor
rorl
xorl
xor
lcall
xchg
mov
aad
push
loop
aas
jge
jno
dec
adc
dec
daa
jge
mov
add
lock
cltd
xor
clc
shrl
pop
mov
mov
mov
inc
icebp
out
push
cmpsb
lock
xchg
dec
pop
out
dec
fidivs
lret
pop
lcall
pop
lock
incl
popf
out
adc
mov
into
movsb
loop
out
movsb
fiaddl
dec
or
mov
inc
int3
pop
adc
mov
repz
sti
arpl
xchg
push
sub
neg
int
inc
subb
aad
inc
jecxz
outsb
repnz
sbb
adcl
lcall
sbb
or
inc
out
imul
inc
jmp
leave
lcall
call
lock
or
jnp
fadds
in
jmp
inc
and
xor
mov
stc
loop
lods
call
out
ltr
inc
cmp
cmp
push
in
mov
rcrl
outsl
cmp
test
dec
loopne
test
sahf
inc
push
inc
fmuls
daa
or
xor
push
mov
mov
test
fidivrs
lods
adc
ljmp
fcmovne
pusha
jb
adc
sbb
out
clc
push
fidivrl
and
mov
fldcw
ret
cmp
mov
cmc
dec
fsts
pop
leave
push
rorl
lcall
inc
cmp
bound
sub
mov
lods
shlb
test
push
jbe
mov
rorb
jo
outsb
ljmp
push
int
arpl
dec
inc
adc
stos
test
and
in
xchg
es
testl
pop
dec
aas
dec
mov
popf
fisttpl
fmul
dec
push
fcmovu
push
cmp
or
or
adcl
fcmovnbe
push
fnstsw
imull
dec
lret
setne
in
xchg
jecxz
cs
cmpsl
rcrb
jle
negl
sub
lret
inc
cmp
inc
divb
sbb
cmp
shll
aaa
pop
cmp
mov
loope
or
psllw
arpl
dec
loop
fiadds
pop
into
dec
data16
adc
cmc
ljmp
nop
ficoml
dec
out
jl
dec
push
jne
xchg
cmp
xor
test
insb
data16
aad
adc
ljmp
cmpsb
clc
fs
dec
add
sub
add
scas
sub
push
push
pop
sub
adc
nop
data16
xor
jae
push
in
aad
mov
popf
push
data16
pop
jno
push
insb
ret
jle
push
fcompl
inc
fcomps
lcall
rol
clc
neg
push
jmp
pushl
lea
jne
movzbw
adc
mov
sub
sub
shld
cmp
rol
btc
mov
test
pusha
bt
sub
cmc
clc
pushl
popl
call
pusha
push
inc
lea
jb
pushf
pusha
lea
call
jmp
sahf
in
roll
pop
mov
cmp
dec
and
sub
or
xor
pushf
inc
fadds
and
repnz
cmpsb
sbb
pop
xchg
adcl
inc
mov
dec
out
jle
pop
adc
arpl
pusha
repz
or
xor
gs
les
mov
std
call
scas
push
mov
loopne
xchg
push
inc
aas
daa
test
dec
out
dec
insb
js
inc
lret
pop
negb
adc
mov
mov
sahf
push
jnp
inc
add
dec
xor
jae
jg
cmc
addb
push
inc
lea
scas
sub
xchg
pop
sub
ja
int3
bound
in
add
rcrl
pop
dec
insl
cmp
mov
hlt
pop
dec
int3
adc
cs
int
popa
cmpsl
or
ljmp
and
xchg
and
aas
mov
lcall
outsl
loope
cltd
xor
xchg
push
cmp
mov
ret
out
push
cmp
jmp
and
int
ja
daa
jns
jmp
fnstcw
cmc
sub
or
fisubl
mov
ret
pop
mov
leave
push
jmp
aas
cmp
add
cltd
dec
jmp
pop
cmp
aaa
pop
sahf
jmp
dec
std
mov
xor
inc
jmp
dec
cmp
jmp
aaa
cmp
loope
flds
ret
aam
cmp
jmp
sarl
xlat
loopne
cltd
inc
jmp
push
cmp
mov
ret
mov
xor
sub
mov
jbe
cmp
call
sub
mov
jmp
pop
cmp
stos
xor
test
ret
loopne
cmp
mov
ret
push
cli
cmp
jmp
fnstcw
aad
xor
loope
ret
mov
cmp
add
pop
in
call
int3
cmp
cmp
ret
mov
icebp
ret
rcll
mov
daa
cltd
testb
lea
aas
daa
sub
jmp
or
adc
xor
inc
jmp
cmp
xor
inc
jmp
push
cmp
jmp
mov
jmp
pushf
leave
pop
icebp
xchg
mov
mov
lock
or
push
out
xor
sar
xchg
pop
sub
add
mov
fwait
jmp
or
dec
mov
dec
dec
outsb
xchg
push
ss
xchg
sub
rcrl
out
mov
lcall
mov
xlat
jns
inc
dec
bound
sub
pop
push
mov
and
jne
std
mov
rcl
mov
call
cmpxchg
adc
add
lods
sub
out
mov
pusha
xchg
stos
fiaddl
xchg
je
stos
fists
aad
pushf
lea
jne
xor
sbb
xor
jmp
jmp
pop
jbe
data16
add
cmpsb
cmpsb
xchg
mov
out
testl
and
js
stc
inc
jb
jl
jbe
fnsave
hlt
jp
cmp
loope
ret
fcmovu
out
loop
push
lret
std
mull
orb
lret
push
in
jno
dec
negl
shrl
fstpt
add
ret
mov
idiv
bound
pusha
cltd
pop
int
adc
fmull
jb
mov
les
outsb
enter
shr
add
hlt
mov
in
dec
lock
dec
loopne
lcall
bt
cmp
pushf
jmp
out
xchg
scas
push
shll
mov
inc
adc
data16
cmp
sub
cmp
sti
pop
and
push
pop
adc
aad
jae
ret
insl
add
insb
inc
mov
mov
rcrb
fs
insl
mov
imul
popf
xchg
dec
iret
std
cmc
xor
aam
mov
sub
push
xlat
jno
push
ret
insl
sti
jno
insl
mov
rcrb
mov
and
cmpsl
lods
mov
cltd
xor
pop
jmp
adc
sbb
and
push
and
pop
or
outsl
iret
ss
adc
jl
stos
adc
sbb
inc
aam
dec
inc
rol
jge
and
pop
insb
sahf
or
mov
stc
jbe
out
sub
adc
into
sub
and
mov
mov
add
arpl
ja
sbb
ljmp
dec
testb
lcall
lock
fwait
into
mov
jmp
fdiv
push
ret
cwtl
sbb
xchg
sub
and
sub
bswap
scas
sbb
jno
jae
pop
imul
into
je
dec
insb
add
movsb
jnp
xchg
mov
sub
les
xor
jl
mov
push
mov
fucom
mov
or
mov
aas
mov
mov
movsb
jbe
in
test
inc
dec
aad
pop
mov
inc
push
push
addr16
orl
or
xlat
xorl
mov
call
xchg
xchg
xor
xchg
out
xor
cmp
rclb
push
cld
aad
xchg
int3
sub
call
jg
mov
xor
jb
ret
repz
push
mov
nop
inc
inc
clc
popf
and
out
mov
mov
pop
int
adc
push
sbb
paddq
test
sbb
mov
outsb
or
and
pop
arpl
test
pushf
pushf
push
lea
je
test
add
jmp
lea
call
cmp
pusha
jmp
push
jge
insl
filds
fcomi
test
xchg
ret
mov
or
inc
xchg
cld
aad
mov
or
ja
and
mov
stos
lahf
fwait
xor
push
pop
or
cmpsl
xor
sub
dec
pop
mov
dec
ja
je
jb
pusha
cmc
push
cmpb
call
call
seta
lods
push
pushf
call
add
dec
outsl
arpl
inc
jb
add
sarl
cmp
fisttps
out
decl
fwait
aaa
pop
pop
cmp
clc
shrl
clc
ret
ljmp
jbe
push
lea
xor
mov
loopne
cli
in
data16
cmpb
lds
lretw
shlb
mov
push
mov
or
adc
mov
xchg
fcmovnb
outsb
loopne
bound
pop
mov
and
aas
add
jmp
adc
cld
pop
sbb
dec
movl
sbb
fs
call
call
mov
pushf
add
pushf
bt
pusha
movb
movzwl
add
pusha
add
neg
inc
mov
clc
test
add
movb
mov
movb
test
jmp
add
setge
or
mov
clc
clc
push
cmpb
pusha
lea
jne
shr
rol
sub
bts
sbb
mov
not
shr
seta
add
clc
xor
shl
mov
cmp
stc
stc
test
pushf
lea
je
push
test
sub
pusha
cmc
clc
cmc
cmp
pushf
pushf
lea
ja
push
push
pushf
lea
jmp
mov
xchg
push
icebp
loopne
add
mov
addl
add
incl
push
in
push
imul
push
mov
jmp
xchg
jae
mulb
in
ret
inc
daa
dec
add
xchg
inc
mov
xchg
or
pushf
or
jnp
loopne
hlt
lea
loopne
mov
in
sub
test
lcall
mov
imul
ja
push
add
into
pop
lret
roll
pop
mov
inc
in
shrl
ret
push
inc
pop
gs
sbb
addl
add
ret
popa
xchg
mov
inc
add
scas
push
or
add
jno
fldenv
or
and
popf
inc
ja
cld
stos
mov
and
into
dec
mov
rolb
push
orb
lcall
loope
sti
imul
nop
nop
ret
jg
rcrb
inc
xchg
mov
or
int3
call
mov
mov
jmp
dec
popa
inc
or
add
mov
in
pop
xchg
mov
jle
mov
inc
mov
cmc
jo
shll
scas
add
and
mov
into
inc
mov
push
mov
sbb
into
negl
mov
push
shrb
mulb
sbb
gs
js
jl
loopne
add
inc
mov
xor
loopne
jnp
add
xor
inc
lods
cld
mov
enter
loopne
add
test
pop
mov
xor
jle
cs
outsb
lcall
test
jo
data16
push
hlt
mov
orb
mov
std
xchg
mov
mov
out
fwait
fst
popa
mov
mov
into
inc
stos
mov
out
sbbl
lock
subb
fdivrl
mov
push
xchg
or
addl
jne
push
ficoml
clc
pushf
dec
out
popa
pop
shl
push
dec
loope
xor
insl
add
daa
test
hlt
push
leave
aas
bound
mov
gs
and
jnp
jnp
aad
inc
lret
lahf
rcr
add
inc
and
mov
sbb
stos
cld
fimull
jne
idivl
mov
movl
popa
sub
fneni(8087
stos
dec
xor
sub
mov
adc
mov
sub
lret
enter
les
mov
adc
stos
mov
mov
test
xchg
inc
mov
mov
mov
pop
js
je
jmp
rcrb
mov
or
mov
fcoms
xchg
movsb
mov
scas
jns
les
in
fwait
rolb
mov
inc
jecxz
movl
adc
push
ljmp
inc
mov
leave
mov
imul
fwait
adc
call
rorb
and
add
nop
in
cwtl
sbb
mov
mov
xlat
dec
in
and
and
pop
int3
test
mov
daa
in
or
sahf
xchg
inc
xor
call
andb
dec
pop
aam
call
cwtl
movsb
fdivs
xchg
lods
or
fcmove
nop
or
out
lods
xchg
rclb
push
rorb
ljmp
dec
adcb
sbb
lcall
ljmp
push
cwtl
aam
fsubrp
cwtl
mov
cs
mov
xchg
nop
lcall
lret
clc
in
fsub
ljmp
and
mov
movsb
xlat
mov
mov
mov
mov
cwtl
and
dec
nop
ret
leave
int3
xchg
imul
int
ret
ret
mov
cltd
rol
fmulp
in
adc
hlt
movsb
mov
cmpsb
icebp
push
aam
int3
push
in
lret
leave
cltd
xchg
cmpsl
loop
mov
lret
mov
lcall
jp
mov
repz
testl
fiadds
loopne
inc
out
les
sub
lahf
push
push
jp
pop
ret
xchg
jmp
stos
add
sbb
mov
xor
or
sub
das
test
mov
popa
adc
mov
roll
cmp
jne
call
out
sbb
mov
cld
stos
sub
xchg
xor
inc
mov
add
roll
in
inc
arpl
xlat
adc
xchg
pop
rol
jle
xchg
xorb
inc
mov
mov
stos
test
or
test
iret
call
add
rclb
inc
popf
mov
mov
stos
jne
sbb
bound
pushf
dec
into
inc
inc
mov
dec
mov
mov
mov
roll
mov
add
arpl
xchg
test
lods
test
mov
mov
mov
out
sbb
dec
mov
hlt
mov
fdivrp
sarb
xchg
inc
cmpsl
cmp
test
adc
mov
dec
add
sti
arpl
mov
cld
into
inc
idiv
bnd
cmc
mov
aad
add
xchg
repnz
lea
cld
jne
scas
dec
mov
dec
jae
lock
imul
cmpsl
sub
push
call
xor
xchg
stc
andb
sub
dec
jecxz
dec
loope
in
inc
and
sti
adcl
fucomip
movsl
test
jl
push
xacquire
jmp
and
inc
into
hlt
inc
add
lea
inc
cmpsb
adc
mov
sub
or
mov
pop
adc
stc
add
gs
fxch
fcmovb
lcall
jecxz
ret
jae
or
std
sub
pop
jmp
xchg
test
xchg
les
mov
add
add
mov
dec
xor
mov
jnp
cwtl
adc
jmp
pop
pop
pushf
jne
jae
sub
adcl
mov
test
mov
mov
mov
shlb
sti
in
jge
add
in
bound
mov
sbbb
addl
or
test
shll
mov
dec
loopne
jno
les
jnp
rep
scas
sbbl
hlt
jle
jbe
jge
hlt
dec
cmpsb
ss
or
and
cmc
push
fsts
mov
notrack
add
nop
gs
pushf
clc
into
enter
popa
sbb
jecxz
cmp
xor
mov
lods
cmpsb
add
xor
push
push
mov
leave
add
imul
mov
inc
ljmp
insb
nop
mov
mov
jae
loope
inc
jb
mov
jnp
idivb
ljmp
test
in
mov
or
xorb
in
iret
xor
mov
and
fildll
mov
shlb
adc
mov
xor
xchg
shrb
stos
xchg
test
xlat
rol
cmpsl
mov
sbb
stos
shlb
jle
cmpb
mov
jne
xchg
stos
mov
imul
nop
push
mov
push
jne
daa
gs
jbe
push
xchg
into
stos
jbe
test
stos
inc
cld
sbb
mov
cmp
jne
xchg
jge
dec
out
loope
testb
lahf
hlt
and
add
loopne
mov
mov
popa
jmp
es
push
sbbl
movsl
jle
adc
cwtl
in
mov
xchg
xchg
shr
mov
stc
mov
sahf
jae
jmp
xchg
push
jg
inc
xchg
shl
out
jno
sbb
xchg
dec
mov
xchg
mov
scas
mov
movsb
int3
or
lret
jmp
cmpb
sub
aad
jle
push
je
mov
test
fisttpll
cmpsb
push
mov
mov
shrl
imul
loopne
rolb
inc
fstl
arpl
sbb
add
adc
xchg
jne
push
stc
add
add
test
push
andb
rcll
hlt
ljmp
in
inc
fisubrs
out
fld1
scas
jnp
xchg
arpl
les
xchg
outsb
shlb
lds
inc
hlt
mov
xor
test
popa
aaa
and
cs
std
xorl
cltd
dec
add
mov
cli
sub
or
mov
inc
out
je
mov
cmp
shll
cld
shlb
lret
push
add
fstps
imul
scas
lret
ret
bswap
jecxz
inc
sub
shrl
cld
xchg
lds
andl
cmpsb
pop
iret
gs
sub
es
fdivr
add
enter
fsubrs
add
xchg
adc
push
fwait
ljmp
sti
stos
sub
xchg
jnp
mov
lea
test
outsb
repnz
icebp
lea
ret
mov
sbb
mov
adc
inc
mov
mov
maxps
test
dec
sbb
xchg
or
repnz
sbb
inc
icebp
jge
sub
imul
cmpl
push
jo
push
add
inc
mov
std
or
add
fs
xchg
jns
je
cwtl
mov
cwtl
adc
sahf
sbbb
call
mov
push
adc
mov
xor
insb
push
mov
sbb
mov
mov
scas
jbe
out
xchg
ja
push
sbb
adc
sahf
loopne
jg
fsubrl
pop
popa
and
js
ret
ror
dec
leave
jmp
test
adc
add
inc
jne
std
aad
add
ss
int3
cmp
lds
sahf
jne
add
xchg
test
lret
jg
mov
mov
jle
mov
aad
loopne
push
clc
cltd
shl
jo
sbb
loope
daa
mov
add
sti
add
mov
xchg
inc
mov
adcl
or
hlt
in
adc
stos
inc
sub
inc
call
loopne
add
xchg
je
inc
popf
dec
jg
mov
popa
clc
dec
rol
mov
add
and
sbb
in
jle
fbstp
lret
cmp
mov
add
add
jp
add
test
stc
and
aam
mov
or
mov
cltd
ja
addr16
cmp
sarl
inc
aaa
jno
jg
xchg
pop
push
sub
aam
call
lock
dec
mov
fimull
ret
jbe
push
das
into
xchg
jne
outsl
rol
add
hlt
lds
push
fidivrl
inc
mov
ljmp
add
cwtl
xchg
jne
movsl
shlb
mov
jmp
ljmp
pop
pop
cmc
orb
dec
out
in
dec
leave
loopne
gs
popf
and
out
leave
mov
dec
icebp
scas
movsb
mov
int3
repnz
inc
push
aam
hlt
jle
stc
shlb
and
pop
jge
xor
dec
push
xchg
dec
cmpsb
jno
mov
repz
jg
mov
push
sub
add
inc
cmc
sub
dec
add
pushf
loopne
add
mov
jne
mov
mov
aam
test
jmp
shlb
hlt
faddl
push
sbb
add
adcl
push
jnp
jle
dec
inc
ficoml
outsb
rcrl
mov
lea
jmp
and
mov
aad
sbb
pop
push
jecxz
adc
xchg
loope
jnp
std
and
roll
jne
cld
int3
xchg
add
inc
idivb
loopne
fnstcw
jns
adcl
add
lret
push
sub
and
mov
xchg
into
mov
aas
jo
inc
fnstsw
hlt
and
cltd
cmpsb
mov
call
nop
aaa
mov
push
push
sti
out
or
stc
cld
in
repz
xchg
gs
popa
popa
sbb
fistps
dec
sub
sub
scas
stos
stos
or
mov
mov
jge
mov
jg
sub
jne
enter
clc
cmpsb
sub
jecxz
jo
sbb
adc
shll
shrb
jb
lock
jbe
outsb
sub
loop
imul
and
push
inc
jne
outsb
lods
mov
inc
test
movsl
test
xchg
inc
shrb
mov
and
bswap
add
shll
xor
mov
mov
cmp
xchg
xor
mov
int
std
call
and
mov
ss
push
push
scas
daa
inc
push
cmp
mov
mov
daa
mov
xorb
inc
cmpsb
pop
int
fildll
mov
rolb
stos
rcl
mov
sbb
int
sub
mov
mov
xchg
scas
dec
negb
lcall
cmc
test
incb
mov
cmpsb
mov
inc
jmp
movsb
mov
nop
lret
mov
test
sub
push
sti
sub
jl
movsb
iret
ja
fwait
inc
shl
cmpsl
stos
lods
sub
pop
hlt
lret
dec
push
outsl
aam
cli
xor
xchg
jae
je
imul
jne
cli
jb
imul
inc
or
inc
inc
popa
mov
pop
fstpt
std
mov
repz
mov
adc
pop
outsl
adc
add
mov
push
push
mov
cmpsb
orl
js
bound
cmp
stc
inc
xchg
mov
adc
inc
fprem1
or
xchg
in
int3
aad
cld
bound
cmp
xchg
fiaddl
lahf
subb
insb
loope,pn
test
add
icebp
xor
jmp
aad
mov
mov
push
dec
push
call
xchg
mov
jnp
inc
outsl
jmp
cmp
cli
jb
call
xorb
fildl
ss
pushf
stos
push
xchg
inc
test
cld
mov
fldl
test
push
bound
fs
or
push
mov
cmp
jge
inc
xchg
add
add
insl
pop
push
and
mov
mov
jecxz
inc
call
lods
leave
mov
dec
roll
out
xor
and
insb
mov
aam
inc
loope
subl
lret
sbb
sti
call
and
and
mov
scas
fists
pop
mov
mov
leave
test
ljmp
call
and
xor
push
addr16
lock
loop
mov
push
insb
pop
xchg
rcrl
fs
sub
sti
fidivrs
test
push
inc
jne
pop
mov
xor
mov
mov
mov
rcrl
mov
and
lods
decb
nop
push
sti
imul
fimull
test
pop
or
mov
arpl
mov
lret
outsl
mov
les
jecxz
mov
push
cmp
sbbl
mov
popf
lret
sub
addr16
pop
out
pop
lock
inc
xchg
xchg
clc
jmp
add
jno
pop
dec
bound
pop
subb
mov
push
pop
sub
inc
dec
sbb
repnz
ret
pop
cwtl
sti
insb
inc
dec
mov
dec
sub
daa
movsl
nop
cmpl
mov
pop
xchg
mov
fsin
mov
dec
lcall
int3
stos
sbb
nop
and
push
push
xchg
test
fdivrl
and
cmpsb
loopne
jge
add
jmp
cmpsl
push
adc
push
pop
add
dec
in
xor
outsb
mov
aaa
mull
scas
cmp
xchg
sub
popf
add
sbb
mov
sbb
add
xchg
js
je
xchg
xchg
jecxz
pushf
add
inc
lods
mov
mov
push
lret
into
in
lds
xchg
mov
hlt
daa
mov
add
or
lock
fistpl
or
sti
rorb
insl
test
jne
div
movl
lea
mov
arpl
out
shlb
icebp
sbb
inc
fistpl
pop
push
xor
jne
xchg
faddl
nop
out
add
inc
into
ret
mov
xor
je
in
mov
in
push
mov
aad
shll
push
insl
ret
das
xchg
popa
test
mov
stc
jne
daa
mov
in
gs
imul
add
push
mov
jne
add
add
or
mov
inc
add
cmpsb
rcrb
fisubs
pop
lods
inc
push
inc
dec
push
sub
out
ja
clc
call
add
sahf
pop
movsl
mov
cmc
add
mov
mov
mov
mov
sub
add
cmpl
pop
rcrb
jl
into
clc
push
mov
jge
iret
pushf
and
mov
enter
popa
mov
and
fdivrl
cmp
add
inc
fimull
and
inc
insl
xor
lods
in
fdivrl
aam
push
movsl
pop
or
xchg
sbb
filds
mov
jbe
xor
push
hlt
rol
popf
leave
int
nop
or
cwtl
fcmovnb
fildl
pop
pop
xorl
iret
test
rcrl
call
add
push
loop
sbb
jo
or
add
inc
imul
nop
roll
mov
pusha
pop
and
cwtl
xchg
and
movb
cmp
dec
push
stos
stos
lds
aaa
lods
cli
sbb
les
dec
filds
mov
in
dec
inc
stc
enter
mov
cltd
shld
aas
jmp
xor
outsb
dec
mov
inc
pop
test
xor
pop
sub
loop
fisttpl
rcll
pop
aad
roll
xor
xchg
loopne
push
repnz
je
xrelease
addb
popa
mov
push
out
or
sbb
shrb
mov
mov
mov
xor
push
xchg
push
movsl
sub
insl
sbb
jecxz
adc
xchg
sbb
lock
xor
xlat
rorl
mov
jne
xor
popf
in
adc
ret
iret
shll
repnz
cwtl
pop
push
out
testl
mov
pop
or
fldcw
mov
xor
add
adc
mov
add
and
add
push
inc
dec
adc
lret
das
bound
popf
mov
stos
add
into
pop
cli
push
mov
popf
inc
jmp
test
mov
or
mov
test
out
cmp
dec
xchg
push
xchg
test
mov
jne
insb
pop
or
dec
enter
inc
inc
push
pop
inc
xchg
insb
aam
xor
test
push
push
lea
mulb
push
pop
xchg
mov
mov
xchg
jp
inc
add
sbb
movsl
nop
xor
mov
sub
push
inc
push
in
in
adc
mov
xchg
test
test
dec
cmc
add
hlt
mov
push
and
in
test
jnp
mov
repnz
jl
enter
xorb
in
inc
or
mov
xor
and
loopne
addl
pop
int
jne
dec
xlat
push
and
xchg
push
or
es
inc
mov
and
xchg
mov
cmp
mov
sbb
mov
dec
sbbl
xchg
fs
hlt
imul
xchg
subb
push
pop
outsl
popf
sub
shrb
inc
push
das
push
leave
jl
hlt
cmp
ret
js
pop
dec
leave
or
jo
or
xchg
pop
mov
lock
or
jne
push
stos
test
xchg
das
aas
leave
mov
push
jmp
and
fcmovnb
push
mov
sbb
xchg
or
mov
out
push
hlt
test
push
sahf
and
subb
lret
dec
ljmp
mov
add
cmp
inc
inc
arpl
add
sub
xor
cwtl
addr16
dec
lea
and
das
loopne
adc
sub
sub
sub
xchg
xor
sbb
mov
cmpsb
fnstsw
adc
adc
xchg
dec
add
test
xor
cmpl
sub
clc
inc
add
xor
test
sbb
stos
hlt
aas
jl
je
and
mov
loopne
cmpb
push
add
lods
jne
lret
mov
inc
mov
subl
lds
or
mov
je
jns
fisttpl
nop
hlt
xchg
jbe
adc
js
loopne
popa
stos
mov
mov
out
mov
aas
bound
jo
mov
xchg
inc
jecxz
sbb
ljmp
aad
in
add
or
lods
frstor
mov
cli
or
push
fimull
push
pushl
jo
xchg
daa
sub
add
pop
int
mov
cltd
sub
iret
in
push
and
xlat
push
push
aam
jne
xchg
gs
jo
orb
cmp
mov
sub
fs
sub
inc
jecxz
jae
shl
mov
sbb
mov
add
cmpsl
mov
jge
add
mov
jne
leave
add
xor
ja
sub
mov
int
enter
adc
test
inc
in
mov
stos
lahf
xchg
test
sbb
movsb
mov
jne
loopne
les
test
int3
data16
enter
sub
xchg
adc
inc
mov
hlt
lods
sub
imul
test
mov
loopne
pushf
fimull
enter
cmpsb
outsb
mov
in
xor
sbb
daa
test
pop
pop
rol
sub
pushf
enter
xchg
push
xchg
jmp
mov
stos
lods
fcoml
pop
sub
pop
negl
cmc
cmc
add
mov
mov
inc
test
push
in
jecxz
xor
xchg
jmp
std
int
xchg
mov
xchg
push
xchg
loopne
addr16
mov
mov
loop
jns
adc
gs
int3
cmp
jl
mov
mov
mov
mov
repz
ss
inc
into
aam
xchg
or
in
and
ret
mov
test
repnz
and
inc
loope
into
repz
mov
ficompl
mov
add
add
sbb
inc
les
int3
cwtl
lods
aaa
mov
lret
add
push
in
fstp
fistpl
dec
arpl
imulb
out
enter
sub
mov
lahf
xchg
ret
mov
in
cmp
ret
loope
add
jne
xchg
aam
stos
leave
sub
add
pop
xor
mov
hlt
ljmp
add
pop
or
dec
mov
push
mov
mov
lcall
mov
mov
loope
mov
pop
lea
std
es
test
nop
push
push
shlb
adc
push
inc
xchg
enter
dec
loope
loopne
pop
jns
cs
out
rcl
sub
sti
inc
jmp
add
cmp
cwtl
ss
mov
fldt
enter
test
xchg
pop
and
mov
push
mov
mov
rcll
das
sarb
loope
push
es
inc
outsl
lcall
mov
aad
push
add
xor
pop
sub
test
out
xor
sahf
mov
add
pop
out
sub
jb
andb
jne
pop
or
enter
push
pushf
push
mov
es
bound
lret
loopne
js
call
lods
mov
leave
and
fcomps
nop
dec
pop
push
xor
jmp
mov
xchg
mov
call
xchg
test
xchg
rcrl
adc
std
add
xchg
mov
fiaddl
push
into
jl
enter
xor
stos
sbb
shrl
out
nop
xchg
dec
call
inc
jg
xlat
test
xchg
adc
mov
ret
and
and
or
sti
xor
adc
cmpsb
int3
fimuls
shll
test
stc
add
push
scas
xchg
mov
je
mov
loope
mov
lea
lea
in
adcl
mov
imul
xchg
xchg
jmp
mov
cmp
dec
mov
sbb
sbb
push
dec
int3
das
pop
xlat
cmpsl
jl
repnz
das
jmp
or
mov
stos
jne
andl
test
mov
aam
jg
lahf
or
mov
ret
fdivrp
nop
add
add
cmpsb
test
ffree
xchg
mov
shll
leave
or
sub
les
adc
dec
adc
leave
add
rep
shll
imul
in
jno
xchg
jecxz
paddsb
imul
in
jne
cld
cmpsl
or
dec
mov
ret
xchg
jg
jp
sub
pop
jnp
adc
call
lret
xor
ficoms
adc
hlt
cs
mov
addb
xchg
sbb
xchg
jg
mov
mov
inc
jp
mov
fnstsw
test
and
pop
push
inc
hlt
aad
jnp
hlt
xchg
out
push
cmp
inc
enter
add
sbb
push
xor
xor
ret
mov
gs
jo
cmp
jne
jg
stos
test
mov
fnsave
inc
cmpsl
lret
test
cmpsb
push
or
pop
mov
mov
iret
add
outsb
lret
add
test
test
call
cwtl
push
and
je
nop
sbb
and
fildl
lret
pop
push
xchg
add
rorb
lret
push
outsb
int3
add
out
hlt
push
mov
xchg
jne
daa
nop
xchg
push
rcll
call
test
in
push
mov
adcl
jp
jo
in
cwtl
cmp
loopne
pop
ds
daa
enter
push
or
addr16
int
mov
mov
stos
rorl
int3
lods
test
jnp
orl
cmp
push
mov
and
pop
and
mov
dec
test
sahf
lret
lods
dec
iret
and
arpl
and
lds
lods
hlt
xchg
stos
fstl
in
add
or
add
jne
xor
adc
and
inc
add
std
cli
loop
mov
mov
jp
leave
inc
add
std
fcomps
xor
aam
enter
aad
lds
push
xchg
ret
neg
into
es
aaa
mov
shll
int
stos
pop
mov
popf
jg
enter
test
mov
ret
mov
arpl
fs
popa
mov
aaa
mov
je
lret
sub
sub
and
sbb
xor
rolb
fscale
iret
stc
popf
mov
or
lret
mov
add
test
lods
or
je
inc
jg
inc
fnstsw
xchg
dec
sarl
pushf
add
xor
dec
fimull
and
mov
and
jne
xchg
push
mov
mov
and
jbe
cwtl
hlt
negb
dec
dec
mov
jb
loop
inc
into
outsl
xor
stos
mov
adc
incl
add
ds
popf
and
push
jl
inc
lods
fiaddl
into
imul
or
scas
jne
mov
cmpsl
sub
cmp
jo
and
mov
pusha
imul
push
icebp
ljmp
fisttps
sbb
stc
xchg
push
cmp
sti
ljmp
jne
push
dec
inc
shl
pop
pop
movsb
dec
sbbl
inc
inc
lods
gs
mov
popa
loope
mov
push
xchg
inc
dec
sbb
rcrl
adc
fcomi
les
add
mov
loopne
cmc
or
mov
push
popf
mov
addb
nop
xchg
push
les
mov
rol
pop
pop
std
test
cs
and
hlt
push
mov
xor
cwtl
mov
decl
lret
rcr
add
adc
mov
pushf
mov
cwtl
test
icebp
dec
sub
sbb
xor
aam
and
or
mov
mov
into
mov
push
adc
push
push
js
and
lret
pop
out
hlt
xchg
mov
in
or
lods
dec
mov
mov
out
test
and
ror
lcall
cwtl
sbb
hlt
dec
xor
jno
lret
incl
rolb
loope
xchg
or
sbb
outsb
and
cmpsl
or
xor
imulb
xchg
inc
ret
mov
mov
test
ljmp
ficomps
cwtl
leave
sub
ja
or
mov
repz
cmpsb
ljmp
push
mov
or
add
hlt
mov
adc
sub
insl
test
or
loopne
flds
pushf
out
lods
mov
sub
mov
cmp
add
orb
add
inc
pop
jno
in
mov
xor
inc
sub
into
icebp
orl
test
jns
aas
xor
jecxz
add
aaa
dec
lcall
mov
adc
loopne
sbb
cld
hlt
out
inc
sub
leave
imul
sub
inc
stc
dec
pop
mov
and
sarl
ret
sub
cltd
lcall
cmp
pop
bound
adc
cwtl
mov
fcomps
out
add
sub
hlt
mov
mov
mov
push
pusha
loope
loope
scas
dec
add
jp
scas
test
fmuls
dec
and
inc
stc
loope
lahf
leave
sbb
sub
lret
push
orb
sub
add
mov
xchg
pop
fistpl
cmp
mov
jle
xchg
xor
test
mov
mov
or
add
jne
adc
or
adc
subb
test
into
fdivl
in
xchg
sbb
pop
jecxz
call
shll
aaa
cmpsb
test
jle
dec
sahf
push
rorl
mov
or
jne
add
roll
pusha
ret
xor
cwtl
pop
enter
mov
cld
inc
fucomi
lods
mov
sahf
into
jmp
xchg
into
xor
xchg
jne
jecxz
stos
ds
and
test
jbe
and
dec
sub
out
mov
nop
mov
mov
or
jne
mov
push
add
and
xchg
mov
push
sub
ror
scas
shl
stos
movsb
in
into
xor
in
cld
sub
cmc
test
arpl
test
mov
and
adc
inc
mov
jae
cwtl
mov
adc
in
loopne
mov
sub
andl
ja
dec
and
popf
repnz
mov
push
in
ffree
jno
mov
test
sub
push
fmull
add
pop
clc
js
pusha
rcr
int3
repnz
popa
adc
xchg
pop
sub
xchg
hlt
cwtl
jp
pop
add
out
shlb
bound
daa
mov
push
repnz
hlt
fld
add
adc
jnp
fwait
scas
fs
mulb
fstpt
xlat
in
jo
dec
rol
sub
xchg
sub
pop
xor
arpl
cmp
mov
jnp
repz
mov
sbb
pop
in
push
fcoml
inc
sub
push
jmp
out
leave
and
inc
je
sbb
or
dec
xor
jo
test
sahf
mov
dec
pop
and
aad
mov
inc
lahf
cmp
inc
xchg
test
mov
mov
popf
pop
xor
xor
xchg
loopne
sub
lret
pushf
xorb
mov
add
mov
int3
out
sbb
xchg
or
les
sahf
mov
mov
mov
jns
hlt
mov
xchg
movsb
gs
lods
or
fwait
sub
pop
jbe
mov
push
add
int3
add
or
loope
xchg
cmpsl
fsub
xchg
enter
adc
pause
fsubr
cmpb
ljmp
lods
sbb
add
mov
cmpsb
in
xor
mov
imul
repz
sbbb
lods
mov
xchg
sbb
and
aam
mov
mov
dec
or
mov
mov
call
jne
sub
repz
add
lea
adc
dec
adc
mov
xchg
mov
shlb
das
mov
mov
pop
push
lcall
mov
or
xchg
push
dec
and
shlb
mov
enter
mov
shrl
sub
mov
jmp
inc
iret
adc
push
popa
notb
pop
xchg
mov
pop
mov
movsl
sbb
pushf
orb
mov
mov
movsb
ss
add
test
xchg
dec
cmp
out
dec
das
arpl
mov
gs
mov
lcall
push
iret
repnz
cmp
hlt
xchg
inc
mov
dec
shlb
inc
subb
and
int3
lods
fdiv
xor
jno
rcr
inc
xchg
cltd
and
lds
and
mov
lret
inc
mov
add
cmpsl
mov
loope
add
xor
mov
scas
repz
pop
xchg
shll
sub
xchg
sbb
scas
mov
fsubl
or
or
xlat
add
xor
xchg
movb
das
or
inc
mov
lea
hlt
mov
add
into
loopne
lret
adc
xchg
mov
cs
mov
imul
fnstcw
add
pop
or
inc
fnsave
mov
dec
gs
mov
dec
sbb
imulb
shrb
inc
mov
xchg
sub
ror
inc
xor
fucomip
ja
test
ret
rcl
jmp
hlt
fnsave
filds
test
imul
fdivr
cwtl
leave
dec
mov
outsl
test
pop
rolb
xchg
subb
mov
into
jecxz
mov
sbbl
xchg
and
mov
and
jl
inc
sub
scas
xchg
inc
andb
sub
dec
mov
std
jge
dec
pusha
shll
push
push
add
sub
pushf
hlt
push
mov
xchg
pop
decl
mov
mov
and
insl
sub
cmp
pusha
dec
sub
fwait
imul
jge
mov
pop
testl
sarb
sub
xchg
inc
lret
fdivrl
push
sub
and
fmull
ror
sbb
cld
xchg
add
hlt
jbe
and
and
or
pop
mov
call
scas
mov
mov
rclb
xchg
pop
jne
flds
mov
fistpll
push
movsl
mov
mov
mov
add
mov
or
xor
jmp
mov
lods
mov
aad
pop
decb
cli
and
mov
dec
imull
addr16
fidivl
insb
ljmp
dec
test
xor
aaa
mov
movsb
jg
fidivs
inc
xor
pop
cmp
jge
ret
jne
or
mov
xchg
lea
pusha
and
fisubrs
ffree
aam
int
push
test
das
fidivrs
add
ret
repnz
mov
sti
lret
int
fnstcw
hlt
and
dec
jnp
loop
cmp
jae
roll
fsubrs
daa
mov
dec
mov
pop
icebp
loopne
pusha
push
fbld
jne
repz
cmp
mov
pop
jae
add
cmc
jl
jg
fnsave
clc
mov
cmp
and
mov
adc
arpl
lock
mov
dec
xor
push
xchg
scas
inc
cmc
fiadds
scas
aas
fistl
mov
xor
pushf
fs
mov
jne
add
cmp
inc
movsl
push
push
mov
pop
dec
push
faddl
ret
jne
mov
add
mov
in
xchg
or
loopne
cmpsb
mov
pop
cmpsb
mov
rcrb
lock
call
inc
movsl
sahf
shlb
or
xor
mov
scas
jne
pop
inc
mov
mov
sub
das
xchg
leave
mov
cmp
fadds
cmp
sub
loop
push
mov
into
push
xchg
aad
mov
daa
dec
cmp
xchg
or
inc
outsb
jle
into
les
stc
into
loop
jmp
inc
sti
ljmp
andl
jae
aaa
negl
jns
incb
insl
test
inc
cmp
enter
mov
mov
sub
push
inc
jl
imul
xchg
and
mov
das
pop
add
mov
test
into
and
popa
mov
cwtl
in
dec
cli
in
cmpsl
subl
jne
add
mov
jmp
pop
cmpsl
and
das
xor
clc
into
xchg
out
push
push
or
adc
or
inc
sbb
andb
mov
scas
and
cmp
or
stos
inc
mov
xchg
inc
xor
inc
out
add
add
and
dec
mov
fldt
cmpsl
xor
pusha
add
and
pop
stos
inc
rol
add
sub
cli
into
stos
fnstenv
fs
or
mov
and
dec
clc
push
xchg
xor
nop
mov
stos
and
dec
out
jne
in
mov
fidivrl
enter
lds
or
dec
fcompl
test
adc
mov
jle
sbb
push
hlt
sti
push
and
xor
cmp
mov
mov
jle
inc
cmc
pop
rcrb
and
jbe
inc
push
add
or
pop
add
pop
cmc
hlt
xor
sbb
inc
mov
lea
mov
mov
mov
xchg
out
aam
iret
into
add
xchg
test
or
cmpsb
xor
dec
xor
xor
push
mov
xchg
cmp
std
xchg
lcall
test
add
pop
les
gs
int
push
fcomps
mov
mov
aam
push
sub
jecxz
mov
dec
in
ret
lcall
dec
adc
mov
test
push
cwtl
pop
mov
hlt
jb
or
call
dec
pop
aaa
cmp
cs
xchg
mov
xchg
lahf
mov
in
adc
popa
sub
push
xor
jge
ljmp
int
xor
lahf
add
sub
xor
xchg
imul
stos
cmp
insb
add
call
add
fwait
mov
pop
lods
mov
loope
loop
ret
shll
cwtl
scas
lods
mov
enter
nop
lret
mov
dec
enter
pop
push
pop
push
cmp
sub
xchg
jg
or
sbb
and
mov
ljmp
push
cli
mov
add
scas
loopne
movsb
out
fdivrs
lret
imul
cmp
cmpsb
adc
or
sti
je
in
mov
xchg
in
sub
fadds
loope
xchg
pop
mov
pop
ret
fimull
out
add
jg
mov
mov
shl
push
test
mov
mov
sbb
sub
addr16
cmp
or
hlt
ret
add
fimuls
and
pop
push
es
fadds
add
or
adc
mov
out
adc
rcrb
mov
mov
adcl
mov
mov
cmc
loope
leave
mov
mov
sbb
xchg
add
fadds
mov
sub
push
xchg
sub
sub
out
je
lods
imul
xchg
in
xchg
int3
or
dec
pop
inc
add
aas
or
or
xorb
pop
out
mov
jne
xchg
adc
mov
inc
pop
or
nop
addl
jmp
test
mov
and
xor
mov
sbb
insb
call
push
adc
mov
fbld
fisubs
jne
into
std
push
inc
cwtl
out
mov
or
lods
sub
lret
jl
dec
mov
in
add
iret
lahf
push
orl
int3
leavew
add
jne
cmp
xchg
add
das
adc
xor
data16
addl
scas
sahf
or
testb
stos
adc
enter
out
push
std
fldenv
mov
or
movsl
pop
movsl
mov
cmpsl
push
outsb
or
leave
loop
pushf
mov
jae
rcrb
sub
sub
aam
rorl
xor
push
test
ret
mov
sti
inc
sbb
lea
int3
pop
mov
mov
out
adc
popa
or
fadds
hlt
imul
mov
jne,pn
movsl
mov
add
test
cmpsb
fimuls
rolb
pop
repnz
cmpsl
and
out
push
xor
or
add
pop
xchg
icebp
imul
inc
hlt
push
daa
add
scas
jmp
test
shl
mov
mov
enter
pop
mov
rcr
mov
jg
popa
pop
and
inc
dec
test
test
sbb
arpl
cs
pop
idivb
imul
sub
xor
xchg
xchg
aad
call
js
add
int3
add
xchg
fdiv
pushf
movsl
test
or
jnp
lcall
test
cmp
inc
push
leave
sub
add
loope
rcrb
adc
into
enter
xor
ljmp
mov
ss
andb
rolb
sarl
adc
lods
rdtsc
inc
or
xor
sahf
add
xchg
push
dec
shrb
inc
mov
mov
pop
loopne
add
inc
pusha
in
adc
insl
push
dec
mov
xor
add
add
jne
xor
sbb
loope
setno
sub
or
test
pop
fwait
and
into
cmp
ret
hlt
and
or
xor
fcoml
jne
scas
mov
jmp
add
movsb
gs
fadds
dec
xor
mov
mov
inc
stos
mov
xor
add
fisttpll
ret
test
lret
jno
int3
dec
inc
jb
xchg
pop
std
mov
or
and
leave
cmpsb
mov
aaa
lods
ror
rcr
fdivrl
fmull
mov
mov
push
sub
pop
cs
and
jne
lds
cld
into
addr16
shrb
addl
mov
dec
lcall
push
or
or
xchg
mov
xor
xchg
pop
ficomps
scas
push
jae
sbb
mov
pop
sti
xor
movsb
jp
add
and
arpl
lret
dec
mov
test
push
dec
loop
ror
add
dec
fbld
loopne
jmp
hlt
mov
popf
jne
aad
pop
mov
ret
das
and
lea
inc
into
push
mov
cmp
mov
mov
mov
les
cmp
mov
push
or
xor
adc
icebp
into
adc
mov
ja
andl
iret
jb
inc
jg
xorb
or
mov
add
cmp
lds
xchg
inc
les
mull
jae
or
insl
les
mov
jg
lock
adc
subl
xchg
inc
adc
inc
imul
ret
lret
out
xchg
jne
sbb
or
pop
xchg
in
leave
stos
lret
jne
jge
adc
mov
push
cmpsb
ss
or
roll
and
stos
ds
adc
adcb
repnz
mov
push
stos
xchg
jb
int3
mov
inc
mov
enter
mov
add
sub
push
loope
or
pop
and
sbb
add
jne
sarb
add
mov
insb
adc
imul
and
add
sub
clc
or
test
enter
mov
push
push
leave
sbb
mov
jg
repz
rcrl
jp
cmp
sti
or
inc
fcompl
inc
xor
or
hlt
inc
sub
dec
rcll
in
xchg
or
lods
mov
mov
and
xor
enter
movsb
or
lods
sub
enter
mov
cmp
lods
fdivl
xchg
leave
mov
push
out
sar
lcall
dec
xlat
jno
sbb
jecxz
faddl
jne
xor
stos
mov
fsubrs
jmp
popf
insl
scas
mov
lcall
pushf
test
fsub
xor
add
xor
jp
out
movsl
stc
and
fsubrl
push
in
dec
cmc
outsl
add
fistl
cli
clc
fmull
sbb
mov
mov
mov
ljmp
fbld
mov
xchg
nop
mov
bound
xor
add
imul
sar
and
and
xchg
mov
mov
adc
mov
xchg
and
les
dec
aaa
push
stos
xchg
add
nop
push
inc
pop
or
cwtl
mov
mov
jle
push
imul
mov
rclb
cwtl
mov
mov
in
shll
inc
repz
add
mov
fisubrl
mov
pushl
aad
sub
adc
into
adc
pop
scas
je
mov
push
jl
pop
into
cmpsl
xchg
pusha
or
stos
daa
je
dec
xchg
and
stos
nop
add
pop
fnsave
adc
roll
clc
test
inc
hlt
inc
int
in
push
mov
and
data16
dec
and
imul
movsl
or
enter
inc
sarl
xchg
xchg
repz
add
jns
xchg
xor
pop
scas
ljmp
push
es
stos
rolb
lahf
add
sbb
sub
clc
pop
shrl
mov
ljmp
add
pop
loope
push
ret
mov
push
jmp
dec
out
les
mov
pop
bound
loop
loope
outsl
stos
jge
inc
adc
sbb
arpl
pop
push
fcomip
std
orl
out
push
inc
mov
inc
arpl
cld
mov
sub
cmp
mov
jbe
and
and
inc
icebp
cmp
ljmp
daa
mov
xchg
and
inc
mov
enter
clc
jno
jecxz
mov
mov
sti
jmp
add
or
insl
flds
mov
sti
loope
scas
jae
jle
mov
xor
in
inc
cmc
and
mov
push
xor
hlt
xchg
orl
or
loope
cmpsl
enter
test
xchg
daa
add
pusha
es
xchg
sub
lret
xlat
jl
enter
add
mov
xor
mov
jno
fs
add
xchg
ds
and
add
jb
mov
cwtl
xchg
sahf
sub
sbb
cmp
ljmp
ja
test
test
cwtl
hlt
or
das
jne
jl
xor
aad
das
add
inc
jb,pt
dec
add
sti
leave
mov
add
imul
inc
and
gs
mov
jecxz
ret
pop
icebp
cltd
mov
stos
in
pop
mov
xchg
pushf
sbb
mov
push
push
push
sbb
popa
or
inc
or
xor
sti
insb
and
sahf
pop
lock
mov
stos
jge
iret
pop
shll
add
test
inc
cmpsl
fucompp
imul
add
xchg
jo
call
lea
lcall
mov
stos
xchg
xchg
mov
sub
daa
lods
add
jne
xchg
sti
movsl
xchg
dec
popa
push
in
bswap
cmc
lock
lret
sub
push
push
cwtl
cmp
sub
je
lea
jno
sahf
repnz
sub
pushf
iret
add
fsubr
aaa
and
inc
adcl
xchg
push
stos
nop
in
movsl
cwtl
inc
movl
cmp
xor
inc
dec
push
mov
lods
call
lret
dec
add
inc
aaa
gs
cwtl
lock
adc
add
js
cld
xchg
addr16
js
and
push
jne
les
mov
ljmp
cmp
daa
icebp
leave
xor
jne
inc
fistps
add
lcall
jns
orb
adc
and
cwtl
jle
adc
jne
push
js
out
dec
sbb
pusha
clc
fistps
fs
mov
cmc
data16
xchg
mov
and
outsl
mov
test
das
jecxz
or
and
adc
loopne
in
les
jne
adc
nop
faddl
in
mov
stos
sbb
cltd
push
test
xchg
test
loope
lahf
cld
push
mov
jnp
rorb
daa
push
ja
jge
sbb
lcall
push
out
fcomps
ret
addr16
inc
xchg
jb
pop
cld
popa
mov
push
adc
inc
push
rolb
adc
scas
jae
hlt
inc
push
out
movsb
test
adc
pushf
testl
pusha
pop
push
add
mov
jge
sbb
clc
dec
pop
movsl
test
not
jmp
jecxz
shll
lea
std
es
xchg
mov
in
and
inc
lods
scas
icebp
add
test
das
xchg
sub
jge
jne
pop
add
sub
mull
test
mov
or
mov
jne
sbb
mov
push
fsqrt
mov
push
mov
cmp
pop
jne
mov
gs
pop
imul
mov
push
rcll
adc
loop
scas
adc
and
push
adc
cmpsl
jns
andl
cmpl
jae
add
cltd
cmp
push
adc
and
xor
cs
jmp
inc
imul
jmp
sbb
xchg
sub
idivb
std
mov
pop
inc
push
lock
test
jns
add
xchg
pop
sbb
xor
pop
pop
inc
in
pop
mov
cmpsl
sbb
mov
adcl
dec
stos
sti
test
push
nop
lret
xchg
add
pop
and
scas
or
int
stc
adc
inc
add
pop
jge
rolb
mov
inc
cmpsl
int3
shll
jne
add
and
lcall
adc
ret
hlt
mov
sub
inc
and
add
dec
lds
hlt
push
xor
and
mov
xchg
insl
pop
ljmp
mov
dec
sahf
pusha
mov
inc
add
xchg
xchg
cmpsb
rcrl
jecxz
cmp
push
loope
in
or
jno
adc
add
pop
pop
xor
xor
pop
jno
pop
cmp
mov
cwtl
scas
pop
lds
fdivrl
aaa
imul
out
int3
loop
sub
push
pop
mov
add
inc
xchg
fucomi
cmpsl
push
push
cltd
mov
in
ret
jne
xor
mov
test
cmp
inc
rorl
aam
mov
dec
in
jmp
pop
divb
loopne
mov
movsb
stos
jl
or
xchg
hlt
mov
xchg
rolb
sub
and
aad
fdivr
scas
add
mov
shrb
dec
adc
inc
ljmp
in
xchg
and
pop
ficomps
adc
daa
adc
xchg
lods
xchg
or
inc
xchg
sub
or
xchg
jnp
xchg
xchg
inc
mov
mov
mov
and
lods
xor
mov
ds
or
icebp
insb
leave
mov
sub
into
mov
and
xchg
clc
fstl
into
outsb
enter
scas
adc
mov
and
sahf
repnz
jecxz
enter
loopne
mov
cmpsb
xorl
cmp
subb
pop
rcll
subl
das
call
arpl
out
mov
push
mov
adc
xchg
f2xm1
pop
repz
and
ss
mov
shll
stos
jg
mov
add
int3
xchg
test
jbe
pop
and
mov
iret
push
adc
outsb
add
repnz
sahf
loope
cmp
mov
fdivrs
add
jae
adc
addr16
lcall
cmc
inc
xchg
out
rorb
std
mov
xchg
hlt
push
popf
shlb
add
mov
push
test
sbbl
push
cltd
and
push
sbb
dec
stos
inc
xor
test
push
cwtl
or
sbb
mov
jl
shrl
aaa
add
or
cmp
mov
and
mov
shrl
dec
shll
add
dec
out
cmpsl
ficoml
loopne
sub
movsb
mov
add
sarl
mov
hlt
add
addb
clc
jnp
cmp
or
mov
cmp
test
xchg
les
sub
add
popf
mov
nop
or
int3
mov
out
rolb
test
or
ja
cmpl
sti
dec
pop
inc
add
dec
loop
pushf
add
hlt
lret
shrb
mov
pop
sbb
jbe
fsubrl
dec
orl
test
mov
sub
ffree
dec
sub
jne
pop
testl
jb
add
xor
popa
scas
mov
cwtl
addr16
das
push
adc
frstor
jmp
mov
sub
mov
pop
inc
scas
les
insb
or
popf
pop
or
xchg
lock
orb
mov
hlt
das
popf
sbb
or
add
adc
subl
add
adc
xchg
sub
mov
icebp
test
lods
ss
lcall
inc
push
xchg
mov
mov
lret
cmp
loopne
push
mov
nop
inc
aam
sub
push
out
pushf
into
imul
sbb
hlt
ds
xchg
adc
aaa
int3
leave
setle
pop
cmpsl
inc
pop
out
shl
call
mov
mov
leave
add
cmp
push
ret
pop
fstl
call
or
mov
mov
jnp
inc
sbb
insl
xchg
pop
rcll
mov
iret
clc
or
xchg
xorl
mov
mov
mov
inc
inc
mov
cmp
hlt
cwtl
das
fmul
into
pop
mov
inc
sub
mov
es
aas
or
add
in
push
mov
imul
in
mov
mov
push
lret
mov
cmp
pusha
enter
mov
outsb
mov
imul
fcoml
cmp
nop
loope
dec
inc
les
repz
std
mov
sbb
mov
xchg
les
mov
pop
mov
dec
add
xor
iret
jae
movsl
int
sbb
jne
sbbl
test
cmp
fdivrl
int3
xchg
fcompl
inc
cmp
push
mov
popa
fsubrs
in
clc
or
das
adc
cwtl
nop
inc
or
jns
and
inc
repnz
test
jae
sbb
scas
cli
jl
pop
add
add
jnp
mov
fldl2e
cmp
loope
mov
adc
movsl
mov
andl
test
pop
mov
pop
cltd
fcomps
cmc
xchg
aaa
mov
push
adc
ret
pop
cmpsb
push
pop
loop
push
hlt
jo
test
jno
fcoml
test
out
xchg
inc
push
mov
popf
dec
cmp
push
mov
lods
xchg
mov
pop
testb
cmp
xchg
call
mov
jmp
mov
xchg
test
or
lods
in
hlt
xchg
stos
rorl
aam
jecxz
push
fwait
xchg
push
cld
out
add
pop
dec
lock
gs
adc
jge
bound
inc
and
iret
adc
mov
call
into
mov
cmp
sub
xor
arpl
jne
xorb
jecxz
out
bound
pop
adc
lock
pop
sbb
and
xchg
leave
cmp
dec
xor
hlt
lods
cmpsl
inc
dec
push
dec
inc
and
sarl
inc
inc
iret
or
sti
dec
subl
or
adc
sbb
jno
xchg
dec
int
mov
arpl
add
xchg
mov
mov
dec
xchg
jecxz
sti
or
pushf
jne
and
push
push
hlt
leave
fs
aam
mov
loop
das
add
pop
push
inc
jne
lods
inc
inc
mov
test
mov
mov
sbbb
jb
mov
jne
xor
ret
inc
xchg
mov
fdivs
sub
mov
push
or
add
mov
stos
jnp
cmp
sub
mov
mov
ds
imul
pop
mov
shll
inc
mov
rol
mul
lcall
mov
fidivrs
jle
into
or
enter
pop
or
das
jns
mov
xchg
hlt
xchg
xchg
sbb
cmc
imul
pop
mov
repnz
sbbb
add
out
in
mov
aas
inc
lret
arpl
xor
sbb
sti
add
pop
shll
cmp
mulb
fdiv
adc
mov
leave
push
movsb
pop
mov
movsb
cltd
cwtl
loopne
loope
ret
push
add
jno
pushf
mov
sbb
adc
sbb
and
jge
sbb
jle
enter
stos
push
jb
or
mov
xchg
lods
add
shlb
mov
int3
fdivr
stc
cmp
xchg
insl
inc
mov
testl
push
inc
push
pusha
fldt
cs
arpl
jae
push
call
cmpsl
mov
int3
ds
add
dec
pop
imul
dec
mov
pusha
fwait
jmp
pop
xchg
xlat
insb
lods
btc
fmull
xor
mov
rorb
adc
mov
pop
inc
add
ret
lea
jp
popa
adc
mov
out
jb
cmp
or
pop
add
repnz
hlt
mov
add
cmp
addb
push
mov
es
dec
pop
mov
out
cmp
dec
mov
or
add
fidivrl
icebp
test
dec
lods
inc
lcall
jne
leave
jno
mov
rcll
mov
add
or
lods
icebp
mov
loope
hlt
outsb
mov
mov
mov
cs
jns
fldenv
and
mov
mov
sahf
cmc
adc
sbb
push
stos
xor
dec
jno
cld
pop
mov
xorb
push
lret
insb
push
lods
in
sub
xor
lret
std
aaa
in
pop
mov
sahf
lods
add
mov
in
cmc
xorl
vpsrld
mov
or
mov
adc
enterw
fldenv
mov
incl
loopne
clc
cmpsb
pop
test
lcall
das
xchg
cmp
pusha
rcrb
pop
sbb
int3
jae
lcall
mov
push
loope
or
and
loop
sti
in
out
mov
add
add
sbbb
imul
lret
fcoml
inc
inc
mov
and
mov
jne
rcrl
roll
inc
mov
sub
mov
cmp
add
filds
es
iret
mov
or
andl
ret
sub
enter
scas
mov
fldl
inc
leave
sbb
or
sub
jbe
outsl
pop
mov
add
imul
lret
xor
and
xchg
mov
or
push
ret
lret
orl
push
mov
mov
nop
jne
ret
test
cmp
jns
pop
sbb
cmpb
jns
xchg
mov
jp
test
xlat
js
hlt
cmpsl
sbb
xchg
sub
cmp
xchg
jns
dec
add
imul
push
mov
shrl
test
in
add
adc
inc
pushf
jb
sub
add
nop
hlt
dec
les
jne
div
push
scas
push
fsubs
shll
cmc
pop
ljmp
pusha
push
xlat
mov
push
xor
cmpb
enter
mov
lds
dec
pop
ret
cltd
push
into
sub
lock
xor
sbb
fldcw
cmpsb
out
or
push
lea
and
inc
in
sti
insb
jne
popf
cmp
dec
fs
sub
and
add
xchg
and
clc
push
push
or
nop
xchg
testb
push
push
adc
dec
xor
sbb
xchg
outsl
adc
jp
adc
test
mov
mov
mov
gs
lahf
enter
mov
adc
cs
jne
push
call
add
push
push
mov
mov
mov
hlt
sbb
ja
cmp
pop
stos
inc
sub
dec
mov
sarl
jnp
cmp
fwait
push
call
xor
cmc
push
stos
enter
xor
je
fldcw
nop
sbb
ljmp
mov
mov
imulb
cmp
push
cmp
imul
call
mov
or
cmp
xchg
cmc
xchg
imul
imul
imul
fcom
ficoms
cmc
movsl
mov
cltd
rorl
sbb
jnp
xchg
cmpsl
pop
mov
mov
lret
jns
mov
cmp
cmp
adc
or
jmp
fdivrl
cltd
sbb
jmp
fsub
pop
push
jne
mov
xchg
jge
in
repnz
pop
xchg
nop
mov
or
push
pop
test
xor
mov
mov
or
hlt
aad
divb
and
das
xor
hlt
inc
sub
andb
test
divl
aad
enter
mov
dec
aam
sbb
test
in
fimull
sub
je
and
pop
push
push
mov
adc
pop
in
int
xor
mov
test
jnp
pop
xchg
mov
cmc
ja
inc
push
push
xchg
pop
cmpsb
mov
jo
dec
push
sbb
lahf
fimull
gs
les
mov
movsb
dec
xchg
add
jbe
jge
ret
insb
movsl
scas
call
jno
shrb
or
mov
mov
cmp
sti
jmp
push
sti
sub
dec
jp
inc
stos
fstl
mov
mov
scas
pop
and
or
rolb
das
push
mov
out
mov
jmp
mov
aam
mov
out
jge
es
out
je
pop
xchg
dec
pop
pop
pop
mov
lods
stos
adc
mov
dec
shrl
rclb
aas
cmp
mov
mov
inc
mov
jge
loope
mov
push
shll
cmp
mov
dec
test
fxch
scas
nop
imul
setl
xor
xlat
insl
lods
fmull
hlt
adc
sub
rclb
xchg
jg
into
pusha
cmpsl
inc
shlb
inc
int
dec
cmp
jmp
lods
ja
adc
inc
sbb
pop
push
push
mov
in
or
scas
and
shrb
or
in
xchg
mov
xchg
aam
mov
mov
addl
and
sarb
lods
sbb
pop
and
fdivrl
lock
mov
adc
in
jecxz
add
or
lods
rolb
or
cs
inc
xorl
xchg
sub
mov
rsm
add
adcl
mov
nop
stc
in
add
loopne
lds
mov
lahf
bound
mov
mov
rcr
xchg
test
pop
push
and
pop
xchg
icebp
out
adc
xor
mov
mov
push
imul
mov
and
pop
pop
xchg
or
addr16
test
test
aaa
xchg
inc
mov
mov
addl
lods
inc
addb
pop
jo
ret
xchg
paddusb
pop
adcb
or
mov
cwtl
push
cltd
adcl
dec
or
jno
nop
stc
pop
loopne
mov
mov
mov
jne
add
mov
popa
sub
dec
mov
push
pop
and
leave
lods
push
mov
cmp
mov
sub
cltd
enter
add
jl
and
push
imul
mov
jb
cmpsl
lret
addr16
mov
sbb
rcl
inc
out
into
sub
loop
stc
test
iret
es
popa
arpl
inc
and
cmp
leave
xchg
push
decb
jns
repz
lret
cld
pop
shlb
cmp
imul
dec
adc
pop
dec
mov
mov
pop
push
jl,pn
in
xchg
lret
lret
imul
push
and
nop
fiaddl
add
loopne
mov
shlb
dec
mov
test
testl
pusha
shll
and
and
xchg
loopne
fsubr
sbb
pop
cld
dec
pop
stos
xchg
mov
pop
enter
shr
xor
into
inc
inc
cwtl
stos
mov
mov
jo
jbe
sti
or
es
in
stc
mov
scas
shll
push
push
or
orl
sub
fidivrs
add
out
xor
mov
shrl
cwtl
dec
adc
fwait
cmp
andb
mov
das
test
add
out
pop
addb
xchg
cmpsl
xor
pushf
adc
jns
xor
adc
push
scas
out
or
jle
aam
sbb
fs
in
pop
xchg
push
outsb
jns
hlt
icebp
mov
push
mov
jg
scas
pop
mov
test
jnp
leave
into
mov
popa
cs
mov
sbb
mov
and
inc
mov
cmpsl
mov
add
pop
rcrb
cmp
hlt
ja
cs
and
sub
fdivrl
ret
lret
enter
fistl
subb
push
out
sbb
aas
sbb
push
pop
mov
pop
repnz
or
mov
jmp
push
cmp
mov
mov
xchg
sub
mov
add
sub
shrb
nop
sbb
inc
push
cld
pop
pop
mov
add
jmp
xchg
mov
sahf
call
repnz
jno
mov
js
jge
shlb
fbld
pop
jnp
les
not
inc
sahf
clc
sbb
xchg
xchg
shll
adc
jne
pop
cmp
ljmp
mov
xor
lcall
das
jge
jbe
jge
int3
in
enter
mov
mov
aaa
leave
pop
push
daa
xchg
adc
ret
into
dec
ret
pop
jbe
pop
push
std
or
test
into
push
push
jne
pop
add
xor
repz
dec
mov
in
mov
repnz
mov
sbb
shl
adc
inc
ret
adc
ret
and
sbb
xchg
clc
and
jns
addb
cli
xor
jns
jne
dec
insl
mov
cltd
push
or
dec
in
addr16
sti
sbb
mov
lock
pop
xchg
mov
fistl
cmpsb
pop
xchg
mov
fnstenv
add
mov
iret
negb
mov
xchg
loope
adc
mov
lea
jnp
mov
or
mov
jns
repz
shll
hlt
addb
idiv
fistl
or
and
lcall
mov
push
inc
jg
jns
pop
mov
push
stc
lret
clc
xlat
xor
mov
pop
push
subl
sahf
cmpsl
push
and
cmp
pop
sbb
inc
inc
add
adc
test
dec
mov
pop
movsl
leave
mov
jb
add
in
push
jnp
out
mov
xor
pusha
pop
bound
or
imul
clc
and
test
fcmovb
into
mov
sub
lea
mov
fcoml
scas
inc
andl
call
xor
xorl
fisubrs
xor
sub
sahf
iret
lods
movsl
shlb
mov
xchg
pop
fnstenv
dec
push
xor
push
xor
ret
frstor
in
aam
orl
popa
push
cwtl
pop
jp
arpl
dec
fs
adc
aad
pop
cmpsb
add
and
addb
popf
mov
test
out
cld
scas
pop
lcall
clc
mov
sub
push
or
adc
push
xor
cmpsb
add
ss
jae
fdivrs
xchg
or
adc
daa
or
and
jle
jne
int
xchg
sub
jmp
add
pop
fstl
mov
es
xor
inc
jl
inc
xchg
scas
xor
add
pop
xchg
pop
or
lahf
daa
das
hlt
dec
popf
add
lods
inc
test
inc
inc
sub
mov
flds
mov
aaa
in
or
and
inc
mov
inc
cwtl
dec
movsb
mov
inc
or
int
popf
in
and
jecxz
hlt
push
cld
mov
push
xor
jle
adc
mov
subb
repz
dec
dec
mov
sti
or
push
int3
adc
loope
imul
or
mov
inc
or
in
mov
addb
adc
push
mov
cmp
enter
xor
clc
arpl
out
enter
jns
shll
lret
es
imul
jne
jmp
out
xchg
mov
test
jmp
lret
repnz
test
call
pushl
hlt
insl
lret
stos
jbe
jo
add
pop
push
jl
orl
cmpsl
shll
pusha
mov
movsl
das
outsb
aas
dec
ja
decb
enter
dec
dec
push
jnp
jl
jmp
mov
xor
loop
enter
fnstcw
repnz
sbb
rcr
lods
cmp
xor
ret
fsubrl
jb
hlt
lock
lret
das
mov
out
xchg
mov
in
sub
notl
jmp
xor
adc
lods
lock
xor
mov
pusha
and
jle
add
test
sbb
movsb
pop
es
outsb
sbb
jne
shll
test
mov
add
push
pushf
push
pop
cmpsl
fiadds
outsb
js
clc
hlt
cmp
es
xchg
inc
cmpsb
adc
sbb
pop
fidivrs
sub
daa
cmp
or
adc
sub
adc
clc
ret
mov
dec
mov
mov
outsb
test
pop
adc
pop
aaa
jbe
xor
mov
testl
test
leave
rcrl
cmpsb
inc
nop
in
scas
jne
ret
add
insl
mov
fwait
repnz
shlb
out
dec
or
mov
out
lds
sub
sub
shlb
clc
roll
fildll
mul
cmpsb
cwtl
jge
cmpsb
jne
sbb
insb
les
xchg
pop
mov
xor
fsubrl
add
inc
cltd
dec
in
push
stos
jl
daa
sahf
orb
adc
shlb
pop
inc
or
sti
jne
iret
je
cmp
and
adc
stos
xchg
push
icebp
inc
aam
fadds
xchg
inc
pop
pop
mov
mov
mov
je
lods
and
loop
int3
mov
movsb
divb
les
sti
fstl
dec
and
fisttpll
or
jns
dec
mov
or
inc
jae
mov
into
into
xchg
mov
stos
jl
jo
mov
jle
or
out
enter
adc
dec
adc
movsb
push
mov
in
fiadds
xchg
add
movsl
aad
cli
xor
jne
in
xchg
enter
cmpsb
int3
add
in
inc
fdivl
xor
mov
popa
addb
test
dec
xor
lcall
pop
mov
jle
jge
ficoms
mov
dec
mov
push
loop
pop
sub
cmp
outsb
imul
dec
sti
xchg
and
xchg
jb
and
dec
lret
xchg
icebp
cld
sbb
dec
xchg
dec
mov
jnp
mov
adc
xchg
mov
mov
cmpsl
inc
dec
xchg
ja
test
das
cmpsb
push
fbstp
sti
adc
or
mov
adc
or
fucomip
lret
inc
arpl
pop
xor
test
mov
fstp
mov
add
xchg
outsl
pop
call
sahf
pop
cmpl
test
insb
and
test
xchg
scas
mov
mov
mov
dec
mov
aaa
loope
pushf
iret
mov
inc
outsl
addb
sub
mov
sub
xchg
ds
add
xor
xchg
xor
cmp
mov
sub
cli
loop
xchg
xor
pushf
scas
fisttps
and
loope
xor
add
das
and
insl
inc
imul
xor
xchg
mov
push
lahf
test
ljmp
mov
xchg
enter
int3
mov
mov
lret
rcl
leave
xor
int
es
mov
popf
pop
lds
int3
xchg
fiaddl
cwtl
sub
sub
xchg
cmp
xor
addl
jne
hlt
test
daa
or
mov
sbb
bound
xchg
xor
adc
fstl
mov
fabs
jmp
ljmp
mov
out
xor
ret
pop
inc
inc
int
or
daa
bound
fnsave
push
aad
mov
push
loopne
repnz
or
mov
scas
mov
icebp
jp
scas
insl
xchg
dec
adcb
repz
add
aas
mov
sbb
mov
mov
mov
mov
ret
pushf
xor
ret
mov
jne
fcmovnu
int3
push
loopne
dec
inc
add
fisubs
xchg
push
stos
ret
inc
cli
xor
cld
fwait
scas
outsb
cs
cltd
push
test
cmp
les
add
mov
pop
jecxz
push
jae
jne
insl
sub
or
nop
inc
mov
inc
or
pushf
xlat
lock
lret
test
dec
pop
mov
mov
sbb
addb
popa
ss
insl
jmp
sub
cmp
jl
push
fmull
in
mov
ja
out
aad
inc
int3
inc
daa
ljmp
lods
fcoml
rcrb
sub
cwtl
nop
sbbl
int3
sbb
cltd
jge
xchg
mov
and
mov
scas
cmp
repz
imul
add
pop
jle
in
loopne
cmpsl
sbb
pop
lock
fdivl
test
mov
push
test
es
insl
xchg
lret
cwtl
add
and
mov
xor
cmpsb
out
dec
call
fdivl
dec
stos
and
sbb
push
pop
add
inc
sbb
push
push
out
or
lret
hlt
test
inc
push
pushf
sti
and
push
xchg
or
push
dec
fmuls
and
mov
mov
decl
xlat
cmpb
subb
mov
sub
mov
test
cmpsl
cmc
mov
jp
das
push
xlat
jnp
adc
int
xor
movsb
mulb
sub
fbld
pop
mov
cmpsl
icebp
xor
pop
ffree
das
in
loope
stos
aas
mov
into
mov
fsubrl
fdivs
lock
sbb
mov
lock
mov
cli
and
mov
or
xlat
popf
arpl
stos
cmp
mov
or
cmp
flds
jns
xchg
je
add
loope
push
and
sub
sub
scas
clc
inc
loope
fwait
sbb
fcmovbe
cltd
hlt
xchg
dec
std
movsl
push
rolb
popf
or
jnp
std
imul
cmp
inc
mov
mov
hlt
imul
push
mov
enter
and
jne
sub
inc
mov
inc
mov
pop
rcrb
fdivrs
mov
test
fisubrl
pop
adc
cs
sbbl
inc
rcr
mov
loopne
mov
ret
clc
rclb
filds
les
push
add
mov
shrl
test
ret
daa
xchg
sub
pop
pop
fwait
rorl
ret
mov
add
and
add
sub
aas
adc
das
adc
adc
mov
fprem
add
daa
dec
repnz
repz
adc
jne
testl
dec
mov
sbb
loope
mov
push
push
cwtl
sti
mov
loop
sub
jns
into
push
add
dec
ja
sub
out
mov
xor
cmp
add
cmp
rcrb
mov
jns
pop
int
outsb
add
adc
mov
sub
mov
mov
cmpsb
jbe
or
jle
push
push
mov
sti
cmp
add
and
shll
aas
int3
add
jecxz
push
add
enter
add
push
push
je,pn
je
pop
int3
lahf
lds
movsl
adc
inc
aad
jg
popf
enter
mov
push
cld
mov
ret
les
enter
xchg
sbb
repnz
pop
jl
movsb
out
and
pop
xchg
or
xorb
arpl
xchg
les
mov
in
rorl
test
sub
inc
jo
xchg
addl
movsb
xchg
lcall
pop
insl
stos
nop
inc
xor
stos
push
xlat
hlt
in
mov
push
push
add
dec
jns
or
shlb
insl
mov
dec
pusha
cmc
mov
mov
inc
repz
push
mov
lods
fsubr
aaa
in
sarb
imul
ret
add
and
ljmp
inc
addb
ret
dec
dec
adc
test
xor
std
inc
movsl
mov
mov
cwtl
movsb
mov
int3
insb
cmpsl
and
pop
ror
cmp
push
test
enter
test
xchg
adc
rcrl
sub
fadds
les
loopne
gs
cmp
mov
xchg
and
push
enter
mov
cmp
fists
mov
cmp
inc
mov
push
lret
push
push
les
icebp
xchg
adc
repnz
stos
roll
outsb
xchg
cld
hlt
mov
cmp
adc
adc
mov
sub
repnz
xchg
mov
in
test
insl
pop
dec
pop
xor
inc
shrb
es
lahf
pop
and
aad
xchg
negb
addb
int
push
imul
sbb
cmc
ja
jmp
xorb
push
adc
xor
xor
add
cmc
loope
sub
test
test
fcmovu
xchg
dec
pushf
fistps
jmp
dec
adc
jns
or
lods
addl
or
jne
and
mov
outsl
xchg
or
clc
add
dec
cmpsb
cmpsb
push
mov
cmp
xchg
decl
adc
xorb
sbb
repz
insl
pop
add
dec
movsb
sub
or
pop
add
in
cli
les
push
insl
outsb
subl
push
testl
mov
jo
sub
cmp
dec
fstps
add
mov
scas
sbb
pop
loopne
mov
sbb
cmp
lcall
daa
dec
add
jbe
and
nop
xorb
fidivrs
or
imul
int3
mov
xchg
fdiv
jge
out
cmp
inc
jo
andb
add
cli
fistpl
decb
movsl
sub
pusha
xor
hlt
pop
push
movsl
movsb
int3
shll
notb
mov
out
lea
xor
xchg
popl
mov
inc
jecxz
xchg
pop
mov
dec
lods
sbb
inc
ja
clc
lret
add
dec
jb
addl
dec
inc
mov
xor
hlt
cmp
sub
sti
movsl
addl
push
adc
imul
xchg
arpl
sub
push
in
mov
arpl
xchg
jge
insb
xor
and
jne
cmp
loop
push
push
mov
xchg
sub
mov
xchg
je
wrmsr
pop
pop
push
cmp
test
in
mov
xchg
jno
mov
dec
shl
inc
hlt
out
aas
or
test
cmc
iret
sub
pop
imul
and
rcrl
or
mov
mov
jne
push
cltd
mov
roll
mov
add
add
mov
call
jne
or
insb
cmp
mov
add
add
sub
mov
pop
repz
movsb
xor
jne
rolb
xchg
cmpsl
jo
xchg
add
cmc
rcl
pusha
jno
and
out
ljmp
jno
ret
test
dec
xchg
and
jb
mov
mov
pop
cmp
mov
or
pop
rclb
jecxz
mov
enter
scas
push
fidivrl
jnp
inc
or
nop
movsb
data16
adc
dec
cmc
xor
jecxz
int3
mov
inc
stos
inc
sbb
sub
clc
sbb
adc
addl
popa
sarl
lcall
jne
movsl
call
xor
fstpl
mov
dec
and
sti
mov
jp
mov
rorb
or
mov
cmp
pop
cwtl
inc
stos
lahf
xchg
mov
stos
xchg
sub
stos
add
and
mov
je
mov
jg
addr16
loop
push
sub
mov
into
nop
or
addr16
les
mov
adc
add
dec
cmpsb
bound
test
adc
test
pushf
mov
test
cmpsb
loop
aas
icebp
movsb
jno
xor
test
jmp
add
enter
fcmovu
mov
shl
push
mov
je
xorb
sti
arpl
mov
or
icebp
mov
into
stos
xor
mov
mov
or
jl,pn
and
inc
jmp
mov
popa
adc
sbb
push
cmp
push
mov
rol
test
mov
mov
mov
enter
sbb
cli
xchg
stos
outsb
mov
mov
push
pop
add
stc
test
repz
sub
push
out
hlt
lret
in
mov
pop
lock
andl
roll
jnp
jo
sub
dec
loop
push
test
pop
mov
pop
mov
lcall
sub
test
push
ret
jne
mov
mov
test
pusha
nop
inc
or
dec
sarb
lret
cmp
rcll
rorl
jns
out
aad
test
scas
mov
adc
xor
dec
in
mov
test
lds
int
test
push
pop
icebp
lea
out
icebp
test
pop
cmp
stos
std
mov
lcall
es
fldl
enter
mov
lea
jae
inc
sub
inc
in
pop
xchg
add
add
ljmp
in
scas
jp
fldl
push
xor
push
daa
cltd
pop
les
gs
pop
pop
fidivl
push
cmpsl
rolb
jne
jg
nop
sar
in
rorb
ja
int3
inc
into
lods
adc
das
sub
xchg
out
test
addb
cmc
mov
sbb
les
xchg
mov
ja
fucomip
inc
dec
pusha
mov
mov
hlt
ja
test
pop
fabs
popf
rcrb
xchg
and
loopne
loopne
fcomps
into
xchg
fists
popa
add
xchg
repnz
dec
or
xor
mov
dec
outsl
mov
xchg
mov
in
mov
lahf
cmp
sub
cmp
mov
push
xchg
dec
enter
out
aaa
lret
sar
mov
sbb
and
fidivrl
push
enter
dec
xchg
ret
movb
ss
mov
fcompl
cmp
rep
dec
imul
cmp
xchg
nop
mov
push
add
lea
jmp
ret
push
jbe
pop
sbb
shrb
imul
and
push
scas
cmp
fildl
loopne
loop
pop
bnd
adc
pop
jne
or
mov
xchg
inc
mov
sbb
ret
das
mov
js
jno
mov
stos
push
mov
cmc
adc
popa
stos
sbb
adc
or
into
pop
jl
ss
jne
push
mov
pop
jb
bound
orl
lds
xlat
data16
mov
lods
insb
inc
rcrl
aas
mov
xor
jl
out
shlb
out
nop
hlt
sbb
cmp
or
xchg
shrb
adc
inc
inc
add
imull
mov
dec
xchg
adcb
les
pop
add
sub
pop
mov
movsl
adc
sbb
jno
scas
sbb
lahf
inc
aam
xor
aam
int3
into
pop
xor
jne
hlt
in
add
fmuls
xchg
xor
sub
mov
xchg
mov
add
xlat
stos
mov
sub
mov
sub
ljmp
cwtl
hlt
or
ret
and
inc
popf
in
loopne
out
nop
shll
push
and
mov
hlt
mov
gs
cmpb
pop
mov
cld
stos
mov
cmpb
or
xlat
adc
sub
int3
jp
shr
das
jecxz
cmpsb
inc
and
mov
mov
add
adcl
mov
int
pushf
or
int
loopne
bound
aad
and
mov
xchg
je
loopne
xchg
daa
mov
pop
cmp
in
stc
mov
hlt
std
dec
ficoml
xorb
sub
sbb
ja
inc
rcll
fistpll
cmpsl
ret
push
dec
std
ljmp
lret
add
cmp
movsl
and
mov
fldenv
les
mov
mov
test
shl
mov
lods
push
inc
or
hlt
mov
mov
sbb
mov
stos
notl
ret
mov
and
divb
cmc
fisubl
scas
xchg
xchg
pop
fs
push
ficomps
mov
and
xor
das
mov
in
inc
decb
cmpsl
push
loopne
xor
mov
lret
out
in
movsb
mov
sahf
adc
ljmp
push
ljmp
je
lods
pushf
popa
inc
adcl
out
sub
mov
fisttpll
ret
jg
sub
cltd
xchg
and
sbb
lods
inc
lret
mov
add
push
add
les
jbe
push
jmp
aad
test
aad
adc
stos
mov
mov
das
jecxz
mov
outsl
push
clc
lods
clc
nop
scas
or
dec
shrl
stos
pop
pop
outsb
nop
jp
xor
add
pop
outsl
es
or
mov
scas
fists
or
lcall
mov
lret
lret
xchg
add
call
sub
mov
mov
orl
test
inc
cmpsb
pop
idiv
push
test
adc
jle
ja
adc
sub
pop
sbb
pop
or
adcb
in
cmpsl
jne
add
pushf
pushl
pushf
int
pushf
mov
repnz
mov
mov
xchg
xor
mov
xor
fdivrp
lret
push
shlb
add
xor
pop
add
js
in
add
or
push
push
out
hlt
movsl
sbb
aas
xor
daa
push
cmpsb
lahf
movsw
sub
loopne
mov
xor
addr16
cmp
mov
es
in
ror
and
pop
in
ret
add
add
lea
arpl
xor
js
out
lret
adc
cmp
or
mov
mov
pop
jg
xchg
jbe
stos
movsb
leave
test
arpl
dec
outsl
cwtl
test
pop
xor
rcr
dec
hlt
fxch
cmp
fistl
and
clc
pop
xchg
mov
mov
mov
jge
es
add
mov
nop
xchg
and
fbld
mov
jae
xchg
jbe
in
adc
mov
lock
mov
mov
push
mov
clc
cwtl
jne
mov
popf
mov
fildl
jge
xor
or
jecxz
mov
test
movsb
mull
push
lods
lods
sti
add
inc
sbb
lret
popf
xor
outsb
test
mov
mov
add
xor
leave
mov
inc
push
xorl
insb
rcrb
inc
push
movsl
adc
test
cld
pop
bnd
loope
out
sub
icebp
pop
cmp
hlt
adc
enter
add
andb
lahf
shll
leave
jecxz
jle
stos
mov
cltd
imul
pop
mov
inc
inc
mov
scas
xchg
mov
cmp
mov
sub
and
insb
xor
dec
pop
inc
push
sub
add
mov
dec
js
test
xchg
mov
or
lcall
inc
mov
std
movsl
mov
pcmpeqw
repz
pop
pop
xchg
mov
rorb
out
stos
mov
xchg
sbbb
jl
inc
rclb
add
inc
pop
in
add
adc
mov
pop
pop
loopne
lods
or
pop
mov
mov
jmp
gs
stos
cmp
in
jg
aaa
cmpsb
adc
mov
mov
ror
test
mov
into
pusha
repz
mov
lock
test
test
hlt
mov
cmp
jne
in
rcrl
jmp
int3
and
arpl
pop
mov
outsl
cmpsl
test
fiadds
test
test
out
push
add
hlt
jp
add
dec
loopne
jne
fidivs
fsubp
inc
leave
and
mov
roll
std
xchg
xchg
popf
push
adc
popa
int3
into
or
enter
mov
mov
xchg
ret
or
push
xchg
sbb
enter
push
mov
xorl
out
hlt
movsl
popl
push
jbe
xchg
addr16
sub
sub
lods
or
clc
test
add
stc
or
inc
pause
sahf
mov
test
push
ret
pop
out
ss
vmovaps
bound
mov
pushf
push
aam
mov
movsl
mov
xchg
out
xorb
pop
xor
push
into
rcrb
out
fldcw
and
lahf
enter
jmp
nop
imulb
shlb
movsb
cltd
test
xchg
sbb
jbe
mov
in
push
mov
lods
or
pop
or
jnp
xor
cmpsb
jmp
int3
xchg
jns
pop
mov
mov
add
divl
rclb
ret
pop
movsl
hlt
sbb
xor
sub
scas
adc
mov
push
xchg
stc
xchg
dec
lods
pop
jg
dec
nop
nop
push
dec
clc
enter
call
pop
pusha
xchg
push
test
mov
cs
jne
test
in
pop
add
pop
lods
inc
movsl
stos
adc
jb
es
lret
data16
out
cmpl
mov
mov
mov
roll
movsb
jb
shl
scas
stos
fldl
pop
aad
imul
sbb
fwait
in
pmaxsw
xor
pop
fbld
jb
pop
push
nop
mov
pop
repz
repz
ror
xor
adc
mov
mov
push
mov
popa
loop
jmp
xchg
jns
iret
and
pusha
gs
shlb
insl
imul
fistpl
add
lds
mov
fimull
hlt
imul
lret
adc
fs
mov
and
movsl
in
lock
sub
mov
mov
cmp
mov
movsl
push
nop
jae
rcrl
fidivl
int
popf
mov
jo
addr16
xchg
push
jmp
rcrb
xorb
in
jmp
jle
std
hlt
lahf
sub
sub
jmp
in
adc
mov
xchg
adc
mov
cmp
adc
jo
mov
cmp
pop
lahf
sub
jg
loope
test
call
add
dec
test
cmpsb
and
clc
dec
and
adc
mov
push
cmpsl
das
lcall
sbbb
scas
mov
scas
clc
lea
mov
loope
imul
sub
scas
add
fldl
pop
or
movsl
cmpsl
test
outsl
add
cmpsl
or
lcall
add
dec
mov
xchg
dec
add
orb
and
lods
or
std
add
lret
and
lret
inc
ret
jmp
mov
xchg
cwtl
xor
adc
xchg
lock
dec
stc
adc
test
and
pop
mov
jne
movsl
add
stc
cmpsl
add
and
lods
inc
testl
push
jne
jb
sbb
inc
mov
lahf
cltd
or
inc
cmpsb
push
sti
mov
fists
call
sub
je
sbb
mov
iret
mov
mov
inc
xchg
cld
push
lods
loope
jne
cld
jo
sbb
call
bound
sbb
push
sbb
mov
lret
leave
sub
pop
xchg
mov
and
sub
sub
ret
add
sbb
ret
mov
add
clc
std
movsb
inc
add
pop
cld
imul
mov
dec
mov
test
push
adc
mov
pop
fwait
cs
xchg
outsb
sbb
jne
and
les
jle
xlat
dec
xchg
inc
test
mov
pusha
mov
in
mov
push
or
aad
rcrb
mov
add
mov
push
arpl
and
jbe
dec
lcall
orb
jg
add
inc
jmp
insb
push
scas
aam
cmpsb
inc
lret
loop
add
jne
cmpsl
adc
push
leave
hlt
addr16
mov
fsubrl
stc
cmpb
inc
into
push
add
fcoml
popf
xchg
addr16
out
loope
in
hlt
test
lods
loopne
pusha
push
mov
enter
mov
enter
xorl
cmc
mov
cmp
dec
xchg
push
mov
cmp
mov
add
jne
aas
mov
cwtl
inc
push
fdivrl
ja
mov
jge
jno
scas
test
iret
out
cmpsl
out
mov
or
fisubs
repz
add
aas
push
in
test
or
pusha
sbb
sarb
adc
cmpsb
clc
ret
xchg
negl
sarb
xor
push
sub
cwtl
or
jo
lcall
enter
mov
mov
nop
mov
inc
jne
jae
mov
sub
mov
push
add
adc
pop
mov
fidivrl
mov
add
xor
xchg
movsb
test
es
xor
les
adcl
dec
ret
arpl
dec
scas
cmp
add
scas
mov
jbe
lret
push
sti
jo
inc
out
or
lds
add
movsl
push
js
mov
sahf
daa
push
lods
adc
scas
sub
ds
xchg
sub
adc
sbb
lock
xchg
test
push
fildl
mov
lret
arpl
xchg
es
inc
sub
pop
pop
es
push
cmpsl
or
fld
pop
les
mov
mov
jle
nop
xor
jl
hlt
sar
adcl
mov
jmp
dec
lret
pop
sbb
pushf
repz
and
nop
cwtl
pop
add
inc
fstpt
push
in
in
repz
bound
leave
lret
cmpl
into
sub
js
adc
xor
mov
cmp
insl
fsubrl
add
faddl
sub
mov
push
fucompp
aad
sbb
cwtl
or
xor
mov
lea
jle
push
stos
add
fcoml
add
stc
add
cmpsb
push
push
xchg
sarl
call
add
add
jo
sti
pop
and
inc
inc
lret
aam
cltd
int3
mov
loopne
clc
scas
movsl
mov
pop
popa
daa
pop
mov
add
enter
mov
push
add
add
gs
nop
dec
push
or
pop
mov
add
lock
or
hlt
push
adc
enter
sub
jg
and
scas
jge
test
jno
jp
scas
ffreep
scas
loopne
xchg
jl
add
cltd
into
mov
add
out
rorb
repnz
bound
jg
pop
lret
mov
add
pop
scas
xchg
adc
hlt
pop
mov
fbld
cmpsb
jp
mov
iret
mov
jge
cmp
das
add
stos
cmp
xchg
ss
mov
hlt
mov
out
pop
pop
mov
fisubrs
setl
or
sub
in
fldenv
loop
mov
sub
stos
lods
out
mov
push
cmpsb
mov
in
and
mul
push
iret
jnp
lods
lea
enter
rcrb
nop
lcall
bound
push
add
inc
fs
sbb
cmp
push
js
pop
xor
cltd
repz
shrb
jge
adc
mov
in
into
mov
aad
sbb
out
dec
movsl
xchg
cmp
les
xchg
pop
xchg
outsb
xchg
dec
bound
ljmp
cli
xchg
xchg
cmp
sub
fstpt
inc
mov
or
add
cmp
stos
pushl
pushf
dec
push
sub
adc
outsb
pcmpeqw
push
jecxz
mov
leave
add
mov
mov
add
shll
test
in
pop
mov
or
nop
popa
arpl
fnstsw
cwtl
cmp
jns
scas
mov
xchg
jle
int3
gs
or
xor
jne
outsb
fstl
out
inc
sbb
test
stc
mov
dec
adc
mov
shlb
mov
mov
pop
lock
jmp
add
xchg
stos
xchg
ret
add
sahf
sub
test
jnp
xchg
dec
xor
jecxz
pop
and
out
and
pop
dec
adc
push
inc
mov
movsb
es
xor
push
gs
mov
in
das
fsubs
jb
xchg
rcrb
inc
lcall
fldcw
mov
hlt
xor
jno
push
mulb
jmp
mov
call
pop
rolb
jae
adc
mov
mov
rcr
mov
push
xlat
cwtl
lds
cmp
adc
lret
jg
adc
inc
data16
jno
add
andl
popa
mov
insb
pop
fisubrl
mov
add
cmpsb
lret
mov
dec
sub
jecxz
push
pusha
addb
pop
pop
sbb
or
fs
arpl
or
mov
aas
add
cwtl
popa
mov
ret
sub
and
jl
pop
enter
subl
cmp
adc
stos
mov
repz
cmp
xor
xchg
mov
mov
cmp
or
mov
push
icebp
rcrb
pop
divl
xor
push
or
daa
loop
sub
mov
mov
rcl
mov
push
ret
enter
push
movsl
outsb
xchg
repnz
xor
pop
or
cmp
std
xor
jecxz
movsl
pop
xlat
pop
icebp
scas
sbb
test
inc
pushf
adc
and
lret
add
push
setnp
js
loopne
push
sub
lea
jle
stos
pop
stc
pop
rorl
test
push
mov
and
scas
xchg
testl
repz
dec
fucom
sti
iret
jne
mov
outsl
adc
add
push
lds
adc
mov
sub
adc
cmpsl
insl
mov
jp
and
and
loop
adc
add
sbb
movsb
mov
adc
jl
movsl
sub
mov
mov
fwait
cwtl
cmpsb
mov
add
inc
mov
fucom
cmp
stos
xchg
test
popa
les
inc
xor
or
dec
clc
cli
addr16
lods
dec
dec
insl
push
fnstsw
pop
int3
lods
and
inc
shr
mov
dec
movsb
orl
jle
stc
and
cmp
in
mov
xor
push
add
cmp
xchg
xchg
cli
mov
cmp
push
test
jmp
adc
loop
inc
sarb
icebp
jecxz
inc
mov
movsl
shl
lea
pop
sbb
dec
sbb
popa
lock
sub
jno
into
stos
mov
push
mov
add
dec
jp
cmp
add
popf
jmp
push
aad
sbb
shlb
dec
cmpsl
or
sbb
aam
xchg
pop
mov
out
inc
lcall
nop
scas
sahf
cld
cmp
add
imul
cmpl
fildl
dec
shl
inc
jne
stos
mov
stc
dec
inc
leave
inc
mov
lods
inc
add
mov
into
fildll
mov
mov
dec
nop
stos
mov
push
mov
add
push
sub
addr16
cmpsb
imul
cs
adcl
scas
mov
sbb
mov
test
pop
sbb
cmp
sbb
fnstenv
push
xchg
hlt
mov
jge
stos
into
nop
imul
jecxz
xchg
mov
jecxz
push
fnstsw
fimuls
xor
adc
cmp
jp
cmpsb
pop
dec
jge
out
xor
inc
test
xchg
fsubrl
inc
lret
dec
mov
push
lea
or
jne
arpl
xchg
lods
adc
leave
mov
lods
cmc
push
scas
test
jecxz
test
mov
and
loopne
sahf
add
pop
fs
arpl
mov
es
lods
icebp
subl
sub
add
or
enter
aam
shl
in
jnp
mov
inc
mov
mov
mov
pushw
xor
add
cltd
lea
sarl
add
inc
movsb
nop
adc
push
and
aam
enter
pop
push
xchg
xor
add
mov
jne
add
or
lock
pop
sub
push
dec
test
dec
mov
mov
test
popa
repnz
jno
sbb
out
pop
lret
jl
mov
clc
mov
inc
js
ss
add
mov
hlt
fxch
lods
lock
push
cld
clc
call
sarb
mov
pop
lock
bound
xor
and
incb
jne
sbb
cmc
sub
mov
mov
mov
popa
rcrb
cmpsb
mov
faddl
push
and
mov
cmpsl
ret
mov
jle
call
jns
adc
sbb
push
or
insl
xchg
ljmp
cmp
or
test
and
or
jb
out
jmp
mov
stos
roll
jp
xchg
jl
sub
lods
enter
xor
fiaddl
test
test
icebp
xor
out
popa
int
sub
xchg
testl
fsubl
xchg
std
add
dec
lea
adc
mov
movl
add
test
cmpl
mov
test
xchg
pop
je
mov
std
xor
mov
add
xchg
jo
sbb
inc
rolb
push
push
mov
mov
xlat
das
sub
jbe
mov
mov
dec
and
xchg
push
mov
sub
movsl
inc
cli
mov
pop
imul
push
lods
sub
lahf
popa
inc
dec
push
xor
jmp
fisttps
cmpsl
int3
jg
or
aad
cmp
aam
sbb
xchg
into
decl
loopnew
hlt
push
jge
dec
in
cwtl
sub
pop
and
mov
cmpsb
mov
movsb
inc
hlt
pop
mov
lret
sub
sub
fdivs
add
pushf
shrb
sub
jae
fisubrs
cmp
int
pusha
push
pusha
mov
jnp
mov
sub
inc
add
sbb
dec
aaa
push
cmp
stos
into
cld
int3
push
sbb
push
int
or
sub
lock
pcmpeqb
out
xchg
pushf
outsb
fisubs
xor
and
adc
dec
insl
clc
mov
xchg
mov
sbbb
aad
ds
dec
mov
dec
inc
sub
test
shlb
arpl
xchg
or
mov
pop
aad
push
fstps
fwait
sub
das
js
jne
call
outsl
mov
cmpsl
iret
xchg
roll
mov
mov
ret
jne
xor
test
xchg
ret
add
push
repz
js
fs
rcrb
nop
sub
mov
inc
pop
imul
and
or
fists
sub
in
add
sbbl
add
aaa
or
xchg
shr
sub
mov
arpl
les
mov
adc
out
stos
hlt
pop
das
adc
filds
outsl
and
push
in
int
sub
inc
lcall
andl
inc
dec
loope
stos
xor
jecxz
lret
inc
es
or
push
cltd
cwtl
sahf
cs
leave
lods
add
in
fnstsw
and
rorb
loop
lret
sub
cmpsb
or
hlt
jno,pt
fsubrs
mov
mov
int3
cs
pop
mov
mov
push
imulb
into
movsl
or
pop
lcall
fstps
adc
jno
aas
iret
xorb
add
scas
add
sbb
mov
mov
push
add
cltd
ds
pop
pop
lahf
jmp
insb
test
mov
jae
mov
stos
hlt
call
jg
lahf
xchg
ds
cld
cmpsl
jl
and
push
rorl
or
push
fld
mov
mov
sbb
adc
pop
nop
xchg
out
inc
hlt
sub
pop
xchg
mov
push
jg
mov
fsts
xchg
je
pop
jae
mov
outsb
inc
mov
loope
sbb
cmpb
vunpcklps
fstpt
sbbb
out
xchg
in
fimuls
rcrb
jmp
jne
lret
nop
fdivrl
es
xchg
fstps
jg
xor
arpl
add
xor
dec
mov
push
xchg
pop
xchg
or
jb
rcl
rorb
inc
mov
adc
inc
jmp
loope
mov
jecxz
scas
fstpt
dec
mov
ljmp
mov
xchg
push
xorw
inc
dec
mov
fldenvs
inc
hlt
cmp
insb
cld
dec
fcomps
jge
push
cli
cmp
inc
pop
in
jmp
ljmp
xor
mov
sub
adc
hlt
cmpsl
jecxz
data16
push
fcompl
sub
xor
sub
push
mov
je
xchg
push
and
idivl
adc
lods
adc
jae
add
mov
sti
sub
in
lods
leave
insb
inc
insl
xor
inc
movsb
sub
mov
jne
mov
xlat
fs
pop
jno
push
test
inc
or
fdiv
shld
clc
in
jne
scas
or
xor
cmp
cmp
lret
arpl
mov
test
fimull
fists
push
fs
push
out
lea
nop
adc
pop
mov
insb
inc
movsl
add
cmpsl
rol
orl
jecxz
imul
shlb
or
into
push
movsb
push
adc
cmp
fiadds
aam
mov
neg
inc
andb
std
lcall
fdivs
fdivrl
pop
cli
jne
jl
add
pop
test
jb
adc
mov
jae
jle
loopne
or
dec
loop
fmull
sub
cmpsb
xchg
sub
push
ds
ss
mov
loope
mov
jo
aam
cmpl
in
into
mov
ja
clc
sbb
rol
fs
pop
add
hlt
add
adc
jbe
push
inc
sub
dec
mov
aam
xlat
xor
hlt
or
test
pusha
and
xor
fistl
push
and
xorb
xor
insb
iret
faddl
shlb
dec
push
fs
jne
test
and
lock
jle
shll
lea
lcall
dec
icebp
aad
shl
mov
outsb
test
stos
mov
loop
jle
lea
inc
jle
daa
pop
or
and
nop
and
dec
aaa
push
push
inc
xor
mov
dec
jge
add
in
aas
add
lahf
dec
mov
xchg
nop
das
cmp
lcall
add
or
in
jmp
xchg
gs
ficompl
mulb
jno
inc
mov
mov
cwtl
leave
rorl
inc
pop
jne
loopne
fldcw
ret
jno
mov
xor
sbb
xchg
pop
mov
add
xor
mov
cli
fisubs
pop
mov
sar
xchg
xchg
test
lods
int
sahf
or
jl
addr16
cwtl
movsb
mov
adc
add
movsb
loop
ffree
inc
xchg
gs
adc
lret
jecxz
sbb
es
push
adc
cmpsb
inc
or
sbb
mov
mov
and
cmpsl
out
jne
gs
ficompl
and
pop
mov
adcl
mov
push
scas
leave
inc
dec
cmpsl
sub
lods
test
pop
lahf
dec
push
sbb
push
popa
lods
repnz
jle
pop
lock
xchg
and
es
leave
mov
test
shlb
xchg
or
sbb
nop
push
jmp
imul
mov
lds
pop
hlt
inc
or
and
ror
shr
mov
rorb
sbb
dec
mov
mov
cltd
jne
sub
sti
mov
jmp
addb
jne
mov
clc
mov
mov
xor
in
sub
pop
sub
dec
mov
mov
jno
fstp
pop
and
sbb
jne
sbb
xchg
sbb
pop
and
cmp
inc
mov
lret
aaa
inc
mov
or
outsl
dec
xchg
mov
hlt
adc
shr
inc
mov
inc
push
in
jns
fmull
push
popf
and
mov
sub
adc
fnstsw
mov
loopne
dec
xchg
test
push
pop
mov
mov
push
mov
sub
mov
add
lods
pop
inc
xchg
test
movsl
repnz
test
mov
popl
popf
in
pop
lcall
jne
cmp
xchg
aad
aad
dec
call
lds
mov
add
out
add
rorl
les
adc
push
xor
inc
mov
outsl
mov
jne
fdivl
cs
lock
dec
inc
mov
adc
dec
fisubrs
stc
popa
push
out
mov
cmp
loopne
test
push
sbb
scas
call
lods
scas
bswap
sub
push
inc
mov
sub
xchg
outsb
push
in
rol
mov
add
stos
or
lahf
cltd
int
add
sub
xor
stos
cltd
pop
adc
jne
jmp
xchg
outsl
lret
pushf
cli
jle
adc
test
dec
out
mov
dec
lea
gs
inc
sub
mov
into
movsb
test
jp
mov
jne
add
mov
xchg
sbb
push
mov
dec
lcall
push
leave
push
mov
fsubr
mov
pop
insl
cmp
pop
nop
fildll
in
dec
push
loope
ret
or
lods
mov
es
pop
orl
dec
jae
adc
int3
xchg
adc
out
shlb
bound
rol
cs
pop
sbb
hlt
push
ret
pusha
in
pop
imull
xchg
pop
mov
sbb
xchg
enter
nop
lods
mov
mov
sub
or
mov
and
pop
inc
jae
xchg
aam
dec
pop
or
addl
push
add
jmp
jmp
sub
sbb
fsubrl
divl
icebp
shrl
fdiv
sbb
mov
popa
xor
mov
out
insl
mov
clc
sbb
das
xor
dec
movd
inc
jb
divl
inc
movsl
push
pop
sbb
mov
fdivs
fisubrs
popa
jns
adcl
and
inc
mov
xchg
nop
fucomip
jb
push
sti
ljmp
mov
movsb
sbb
dec
push
mov
fcmovbe
ss
mov
addl
sub
sub
cmpsb
push
xor
add
aas
cmpsb
cwtl
sub
add
inc
je
add
pushf
pushf
push
clc
cs
mov
mov
adc
out
mov
cld
pop
sahf
es
out
hlt
xchg
dec
xchg
incl
or
cltd
lahf
scas
mov
pop
test
sti
subb
push
mov
rcll
into
sub
rcl
dec
subl
cmp
lock
aad
pop
mov
and
movsl
push
fcompl
push
dec
test
enter
xorl
std
addr16
pop
inc
mov
stos
test
clc
inc
mov
sahf
cmp
xchg
movsl
gs
jo
xor
pushf
aas
push
sub
sub
ja
out
mov
cmpsb
xchg
cmp
xchg
aam
test
mov
daa
pop
xchg
repz
stos
pop
xorb
pusha
nop
cmp
jp
push
mov
enter
add
mov
sbb
cmp
ret
loopne
hlt
xchg
cmpsl
and
push
mov
js
pop
mov
jbe
std
insb
sub
cmc
loopne
mov
push
fs
dec
enter
fcoms
xor
ret
data16
roll
adcl
fwait
sbb
mov
cltd
fildll
cltd
hlt
push
aaa
push
jp
in
add
pop
mov
lods
push
push
push
sahf
xlat
add
int3
mov
test
test
or
push
scas
mov
push
or
or
in
lcall
inc
out
call
imul
ret
mov
aad
lods
std
jecxz
fstps
movsb
push
add
arpl
mov
xchg
inc
inc
dec
iret
push
ds
test
enter
loope
jl
jecxz
or
scas
or
inc
or
push
push
pop
lods
loopne
inc
dec
mov
add
xlat
push
scas
cs
add
fbld
and
data16
out
cld
rcrb
jge
adc
jnp
lret
sub
pop
sub
adcl
push
cmpb
add
dec
call
sub
xchg
pushf
sbb
xchg
cmpsb
jbe
mov
ljmp
add
repz
mov
sbb
loope
test
stos
pop
loop
les
mov
inc
mov
sub
jne
clc
sub
or
and
cmp
int
inc
pop
ss
dec
sbbb
xchg
mov
mov
push
nop
repnz
mov
test
dec
int
dec
std
push
mov
jl
add
fdivl
dec
inc
in
mov
push
adc
ret
movb
cmpsb
mov
dec
add
lret
adc
insl
xor
aam
push
push
out
inc
scas
dec
std
gs
sti
hlt
sub
dec
inc
scas
xchg
sti
out
hlt
shrl
xchg
pushf
jne
push
xchg
test
push
jge
inc
mov
aad
test
pop
inc
ret
dec
mov
ficompl
inc
mov
lods
pop
sbb
cmp
dec
xchg
jge
loop
inc
pusha
repnz
add
and
mov
fs
or
aad
sub
jns
enter
or
out
gs
cld
lahf
incb
lret
adc
stos
hlt
fisubl
dec
mov
inc
imul
mov
mov
loop
scas
mov
mov
lods
add
enter
jbe
adc
outsl
add
or
xlat
cwtl
inc
push
test
mov
add
pop
sub
add
push
mov
mov
and
mov
ss
jne
testb
ljmp
push
inc
popa
notb
xchg
inc
leave
nop
xchg
xchg
pop
int
pop
mov
mov
push
push
sti
inc
int
mov
movsb
push
adc
lods
mov
inc
nop
sub
outsb
push
push
adc
ficoms
sub
or
popa
mov
loop
test
jge
jmp
mov
in
mov
xchg
jnp
add
xchg
aad
xchg
lods
repz
pop
or
xor
mov
adc
mov
mov
int3
bound
jmp
lods
jnp
test
and
icebp
adc
jp
orb
or
adc
push
add
iret
cli
outsl
xor
inc
in
xchg
adc
aas
or
mov
xlat
inc
mov
nop
and
and
popa
mov
pop
addb
push
mov
push
lock
test
sbb
push
push
subb
cmc
jne
and
std
aad
push
test
add
mov
push
xchg
fiaddl
repz
test
jb
mov
icebp
xor
movsb
pop
inc
roll
and
jns
add
mov
xor
test
pop
mov
stos
and
mov
sub
repz
ret
mov
ret
pop
inc
dec
out
shlb
frstor
pop
jne
add
pop
xchg
mov
or
arpl
enter
int
mov
icebp
loope
sub
stos
pop
xlat
pushf
dec
or
stos
stos
fistps
ds
outsb
adc
add
mov
pop
lretw
jae
int
cmp
pop
mov
sub
dec
pop
push
dec
cli
jnp
or
arpl
lea
sbb
scas
pop
add
cmp
jmp
pop
push
in
test
orl
pop
mov
pop
jne
aas
or
add
mov
in
fldt
pop
mov
repnz
sbb
ljmp
out
push
xchg
call
hlt
scas
imul
push
pop
jns
or
icebp
mov
test
inc
cwtl
adc
hlt
mov
xchg
clc
jne
out
cmp
pusha
insl
xor
mov
scas
ja
mov
add
stc
je
imul
mov
jns
pop
cmp
pop
push
add
ss
shl
jno
popf
shlb
pop
inc
nop
outsb
js
xor
out
scas
in
and
mov
cmp
bound
add
push
rorb
lods
or
je
adc
push
mov
sub
or
sub
push
add
jmp
pop
out
enter
test
or
and
mov
jne
mov
cmpsl
shll
jmp
adcl
imul
mov
and
pop
dec
and
adc
mov
rorl
or
push
cwtl
in
adc
or
mov
insb
add
mov
js
xchg
ds
inc
scas
mov
add
enter
ret
dec
and
imul
ja
inc
push
sub
mov
push
or
or
stc
jno
sub
es
aas
lods
push
push
fwait
mov
mov
test
mov
pop
jnp
inc
mov
or
loop
jge
insl
clc
enter
enter
xor
inc
mov
fisubs
ljmp
inc
iret
aas
inc
push
lods
add
mov
mov
jecxz
or
sbb
in
in
jbe
sub
pop
dec
imul
cmp
mov
rcrb
dec
jb
aam
fs
jns
shlb
add
jns
mov
push
sbb
dec
pushf
add
hlt
adc
aad
cmp
iret
adcl
mov
add
scas
adc
dec
mov
cmp
xlat
and
cmpsl
fld1
xor
xchg
lret
add
repz
or
xor
fcomp
arpl
lock
mov
in
mov
mov
and
add
inc
mov
test
fnstsw
pop
pop
dec
popf
les
insl
mov
mov
sbb
xchg
add
mov
ret
add
and
mov
pop
gs
movsb
ds
inc
outsb
mov
sub
inc
addr16
mov
ret
sbb
mov
add
outsl
repnz
scas
cli
push
jae
js
rorb
imul
popa
cmp
pop
and
int3
xor
push
mov
mov
sub
popl
hlt
mov
add
flds
mov
add
loope
pop
pop
mov
adc
mov
sbb
out
pushf
cmp
fisttpll
faddl
dec
imull
mov
das
adc
out
sub
cs
mov
dec
roll
pop
loopne
and
or
insb
je
out
notb
mov
hlt
fistl
mov
shlb
sub
stc
aam
adcb
inc
cmp
cli
incl
cmp
lret
hlt
es
cld
inc
mov
adc
sub
movb
int3
insl
movsb
movsb
dec
sarl
scas
test
adc
inc
mov
dec
mov
fildll
shrb
push
mov
sub
sahf
inc
adc
xor
add
test
lods
rcr
lret
sbb
addl
add
and
cmc
sbb
jp
push
stc
sbb
movsb
scas
movb
call
jle,pn
mov
xchg
mov
fwait
adcl
inc
mov
ret
xchg
inc
movsl
jae
dec
cmp
iret
lods
inc
or
and
mov
inc
mov
rcrl
mov
pop
fildl
mov
mov
add
repnz
lcall
pop
mov
les
mov
out
test
int3
into
adc
dec
fxch
or
mov
mov
movsl
into
fldcw
imul
jne
mov
mov
sub
mov
hlt
addr16
in
rorl
cwtl
inc
shr
sbb
outsl
popa
mov
cwtl
sbb
es
mov
loopne
push
xor
mov
cmp
jmp
push
adc
sbbb
jnp
push
cmpb
jne
add
sbb
cmpsl
jmp
fimull
pop
not
jl
add
jle
or
divl
cmp
arpl
or
dec
adc
loopne
mov
xor
into
xor
mov
shlb
push
leave
mov
or
pushf
testl
pop
cwtl
xchg
out
ds
mov
xchg
loopne
fcoms
pop
or
mov
rorb
mov
orl
imul
cs
int3
in
test
movsb
insl
push
loop
add
sbb
mov
jb
aad
push
dec
mov
add
and
dec
lods
sbbb
fdivl
loope
add
cmp
stos
outsl
lods
jecxz
adc
mov
js
inc
or
sub
mov
iret
and
cwtl
sti
inc
jle
repnz
adc
rclb
sbb
sub
sahf
sub
inc
pop
div
hlt
addb
daa
and
sbb
fidivrl
jno
mov
adc
mov
mov
jnp
adc
lds
popf
mov
std
jno
pushf
push
xchg
pop
test
mov
inc
pop
into
xchg
es
mov
dec
nop
test
inc
or
pop
cmp
test
out
dec
xchg
push
xchg
sub
cmp
test
sub
addl
lods
cmpsb
in
xor
mov
xorl
mov
xchg
sub
xor
cmc
inc
and
mov
xchg
js
ret
and
or
les
jmp
hlt
ja
bnd
xchg
pop
hlt
enter
out
lds
jmp
dec
ret
faddp
pop
mov
push
insl
jns
add
rcrl
mov
sbb
sub
stos
pop
cs
outsl
pop
sbb
adc
mov
add
into
lods
xchg
dec
ja
adc
fstl
xchg
js
inc
adc
xor
or
jp
mov
xchg
jecxz
and
add
inc
dec
pusha
dec
jmp
iret
and
mov
test
imul
ret
xchg
dec
call
ss
pop
sub
jae
mov
orb
insb
fsubl
in
xchg
jo
add
add
mov
pop
or
aam
push
xchg
pop
cli
mov
push
bound
loopne
mov
cmp
stc
push
add
data16
cmpsb
inc
jb
aad
imul
pop
sub
ret
aam
add
mov
inc
or
es
jecxz
lods
les
sbb
or
add
out
mov
mov
out
inc
fisttpl
outsl
lds
mov
aaa
jg
xchg
cmp
std
dec
jns
mov
xchg
addb
push
xchg
js
mov
add
pop
addb
ljmp
xor
lock
pop
test
cmp
pop
inc
inc
sub
adc
jae
fimuls
adc
sbb
or
dec
pop
shrb
jbe
aam
clc
add
lcall
fidivrs
push
xchg
lahf
jne
movsl
jbe
jbe
test
push
insl
js
sahf
mov
rcrl
movsb
ljmp
push
push
into
push
mov
dec
sti
add
inc
add
or
xchg
mov
xlat
and
pop
add
sub
movsl
loop
fnstenv
rclb
cld
sub
inc
lds
cmpsl
add
xor
sbb
mov
inc
stos
pop
jg
jmp
and
test
mov
stos
jne
and
pop
inc
nop
jle
xor
pop
mov
pop
push
dec
add
sub
sub
jns
inc
outsb
cs
mov
mov
xchg
sub
xchg
cli
int3
push
imul
nop
inc
cs
cmpsl
jne
xorl
enter
enter
cmpsb
adc
cmc
adc
sub
pop
test
or
or
stos
and
mov
lds
xchg
ss
mov
xor
stos
and
inc
xchg
sti
cmpsb
xchg
mov
jecxz
hlt
jbe,pt
outsl
jecxz
loope
push
out
test
jno
aam
inc
fildll
lahf
loope
test
insb
mov
adcl
sar
enter
pushf
pop
add
in
hlt
pushf
or
mov
in
xchg
pop
xlat
sbbl
imul
jle
sub
js
out
rorl
repnz
popf
hlt
push
dec
lret
add
and
notb
inc
xchg
jle
mov
or
subl
lcall
add
and
jne
stos
cmp
cmp
enter
aas
jne
adc
xchg
cmc
lret
aam
mov
mov
jne
clts
sub
je
sbb
inc
pop
insl
mov
scas
cli
mov
shlb
add
lock
xlat
nop
xor
out
jne
fldenv
and
push
pusha
dec
inc
outsl
inc
dec
sbb
movsl
sub
dec
call
dec
mov
aad
test
mov
mov
jne
stos
xchg
mov
iret
and
and
mov
mov
cmp
pop
mov
leave
test
aam
mov
lods
mov
cmp
mov
cs
jge
mov
idiv
add
fdivp
cmp
adc
fldcw
cmpsb
cmpsl
add
push
cmpb
or
mov
pop
jb
mov
stos
in
dec
mov
into
xchg
mov
int
lock
test
dec
leave
jl
sub
pusha
sbb
stos
xor
inc
jne
xchg
in
adcb
orl
dec
xorl
jno
jmp
pop
pop
jne
or
ss
int
rcrb
lods
aam
lock
xchg
fnstsw
shrb
xchg
aaa
add
iret
loopne
mov
sahf
and
test
xchg
test
xlat
adc
and
sbb
mov
arpl
push
subl
add
repnz
push
clc
cmp
push
cmpsb
push
dec
ljmp
mov
xchg
xchg
flds
pop
xchg
mov
push
sub
xchg
orl
in
dec
pusha
mov
push
and
sahf
cs
stos
cli
mov
xor
cs
push
bound
push
ljmp
cmp
sbb
cmp
nop
test
dec
shlb
add
andl
sahf
jg
xor
mov
push
addr16
scas
inc
inc
loopne
jae
push
addb
push
sub
xor
call
or
mov
stc
push
addl
inc
ror
xor
mov
adc
xchg
inc
add
cld
xor
nop
mov
cwtl
mov
xchg
mov
cmp
out
fsubs
or
add
pop
push
cmpsl
mov
xor
mov
insl
insl
push
addb
shlb
in
and
cmc
inc
enter
mov
cmpsb
mov
stc
stos
jle
adcl
addb
lods
pusha
mov
pop
inc
inc
das
test
mov
or
andl
jle
pop
lods
or
cs
rcll
cmpsb
mov
dec
popf
push
lods
insb
les
xor
or
fldenv
hlt
push
jbe
dec
mov
test
adc
pop
push
addl
add
push
lea
mov
int3
sub
or
cwtl
inc
rolb
xor
push
enter
loopne
mov
or
sub
cmp
enter
out
jl
stc
dec
testb
mov
imul
or
inc
inc
jne
les
xchg
lahf
xor
jl
sti
mov
movsb
test
icebp
xor
mov
cli
es
push
push
adc
sti
ds
dec
repz
dec
jne
loop
add
mov
iret
ljmp
xchg
or
mov
pop
outsl
add
lods
insb
sub
shl
test
mov
data16
xor
fstpl
or
xchg
dec
mov
pop
mov
mov
mov
add
add
stos
sub
inc
sbb
or
mov
jp
stos
lahf
jne
in
std
jne
mov
push
or
mov
mov
nop
jle
mov
jle
xor
stos
jns
inc
mov
mov
and
call
mov
adc
xor
inc
mov
lock
clc
sarl
pop
jno
fxch
popa
daa
je
jae
in
mov
inc
xlat
out
inc
arpl
sbbl
daa
add
sub
and
rcrl
sahf
nop
jl
int
test
mov
fs
out
fwait
mov
sub
jb
push
sub
pop
mov
and
add
add
lahf
loopne
hlt
jo
sub
scas
pop
sub
mov
aam
jle
fimull
out
std
int
repz
xchg
sub
repnz
xchg
stos
jge
aas
pop
adc
aas
nop
or
orl
in
pushf
aad
movsl
sub
inc
xchg
nop
add
jg
popa
das
neg
xchg
fmul
shl
loop
dec
int
jbe
add
jb
sub
stos
imul
loopne
jbe
mov
pushw
mov
aam
jbe
dec
inc
push
mov
xchg
jp
add
pushf
mov
jo
dec
mov
sbb
lret
popa
imul
outsl
cmpsb
xor
pusha
es
inc
test
cmp
ss
fcoml
cs
xchg
mov
popa
xor
mov
add
mov
add
push
into
stos
hlt
push
inc
mov
loop
and
int3
aas
adc
imul
cmpsb
mov
cmp
mov
push
add
adc
lods
pusha
mov
out
or
and
outsb
jnp
nop
push
rorl
jecxz
in
inc
jge
push
push
and
sbbl
pop
adc
add
dec
ds
lret
add
inc
or
mov
js
push
sub
mov
int
jge
cmp
or
ja
repz
pop
add
lea
shll
mov
cmpsl
add
xlat
fwait
cltd
mov
dec
decb
mov
enter
les
dec
scas
stos
mov
mov
or
call
popl
xor
int3
movsl
sahf
fldl
ljmp
mov
or
mov
mov
movsl
dec
mov
mov
mov
jmp
movsl
mov
lock
jno
jo
dec
ret
mov
mov
mov
xchg
js
outsl
xor
dec
sahf
subl
lock
mov
frstor
sbb
mov
cld
test
into
xchg
orl
icebp
or
int3
ja
loopne
dec
xor
mov
hlt
cmp
adc
into
jge
add
inc
jnp
push
loope
mov
pop
xor
push
and
add
notl
loope
add
sub
lret
mov
das
push
test
xor
out
test
inc
mov
movsl
xor
out
jle
mov
incl
insl
leave
mov
pop
add
push
xor
or
mov
lret
insl
sbbl
inc
arpl
mov
hlt
int3
and
data16
cmpsb
es
xorb
inc
std
imul
jmp
cld
les
lds
jge
inc
in
xlat
out
aas
lahf
loope
mov
jae
xchg
xor
push
push
dec
adc
jecxz
popf
lods
mov
mov
lds
lcall
imul
pop
inc
hlt
ljmp
pusha
mov
and
lahf
les
or
mov
push
sti
jmp
jne
sbb
pop
xchg
sub
add
lds
es
rcrb
or
clc
test
jge
pushf
lock
sub
out
adc
inc
fldenv
or
ss
and
hlt
xlat
js,pt
ret
push
stos
xchg
icebp
jmp
or
mov
or
push
inc
insb
test
loopne
mov
inc
nop
mov
pop
jp
cmp
rcll
mov
roll
xchg
iret
orl
and
or
sub
insl
mov
out
vfrczpd
repz
lods
test
mov
rorb
mov
sahf
test
dec
sbbl
rclb
xchg
cwtl
gs
int3
xor
insb
inc
add
pop
mov
dec
dec
fsub
loopne
and
pop
and
inc
mov
push
add
shlb
rolb
scas
add
mov
cwtl
dec
stos
mov
mov
push
filds
pusha
mov
outsl
and
lea
mov
sub
push
outsb
mov
mov
pinsrw
fists
add
sti
adc
and
into
in
cmpsb
mov
and
mov
cmpb
lret
cmp
xchg
inc
movsl
aam
icebp
add
or
out
or
or
pop
add
je
add
lret
add
xor
gs
es
mov
mov
sbb
mulb
mov
fcoml
lods
jo
popa
sarb
push
mov
cmc
xchg
adc
fwait
push
stos
or
cmp
sub
push
lret
mov
cmp
sbb
sub
pop
enter
movsb
insl
movsl
hlt
or
and
hlt
scas
inc
jns
std
cmp
or
mov
or
and
test
addr16
pushf
adcb
mov
test
call
sub
std
xchg
in
xrelease
jne
cmp
cmp
lods
das
ljmp
test
ret
or
pusha
add
inc
xor
and
mov
popf
and
push
lods
ss
mov
pop
inc
loope
movsb
jg
hlt
fsubrl
mov
push
xchg
nop
leave
xor
in
rcrb
adc
xchg
aad
push
xlat
fisubs
mov
push
clts
inc
pusha
ss
fcoml
push
hlt
lret
in
push
jo
and
lahf
push
jo
dec
jge
imul
inc
jmp
les
movsb
adcl
mov
jns
dec
loope
or
hlt
sbb
scas
adc
pop
in
mov
push
push
push
lock
jl
sahf
int3
mov
iret
loop
mov
inc
cmpb
cmpsb
fldl
xchg
mov
add
jp
cmp
cmp
stc
sbb
stc
inc
rorl
pop
jmp
in
push
mov
out
mov
pop
and
inc
xorl
mov
fcmovnb
ror
rolb
fxtract
movsl
lret
loopne
mov
pop
xchg
dec
push
shl
pusha
loop
lock
jne
inc
mov
insb
xor
push
aas
stos
adc
sbb
and
xchg
mov
lea
imul
or
inc
adc
add
jmp
pop
add
out
in
sub
loope
sub
test
jne
repnz
push
mov
fstl
cmpsb
xchg
scas
rolb
dec
add
in
test
test
sti
mov
scas
fisttps
shll
loop
std
and
adc
cmp
movsl
fsubp
and
loopne
xor
pop
fadds
mov
pop
out
das
jecxz
push
and
adc
in
rorb
das
add
imul
out
orl
stos
mov
xchg
les
in
xchg
jmp
jno
adcl
cmp
ja
lods
enter
sub
sbb
nop
mov
imul
sub
mov
xlat
inc
inc
test
xchg
insb
notl
cmpsb
jne
jge
xchg
or
adc
mov
cmpl
xchg
or
fcomps
push
es
cmpsl
lock
out
nop
cmpsb
cwtl
dec
and
jns
push
out
and
jmp
dec
mov
lock
jne
dec
fmulp
lahf
push
sti
cmp
inc
add
lods
pop
test
out
mov
cmp
or
fcoml
gs
arpl
add
jmp
inc
xor
std
mov
call
mov
jmp
add
mov
sbb
lea
sarb
incl
mov
loope
inc
fisubrl
lahf
adc
sbb
inc
std
test
rorl
jne
cmp
adc
push
sub
stos
roll
sub
fucomip
aad
mov
pop
fildll
adc
cld
fcomps
or
or
cmp
xlat
mov
mov
mov
push
lods
aaa
rorb
cmp
dec
sub
cld
sbb
ret
hlt
mov
cmp
pop
mov
adc
pop
dec
and
mov
or
mov
lods
adc
test
ds
ljmp
nop
cli
sbb
inc
sti
sub
movsl
adcl
rol
xchg
sub
fidivrs
and
mov
mov
mov
sbb
dec
test
add
sbb
cmpsl
cmp
jae
nop
push
jno
les
sbb
jle
aam
mov
js
fsin
insb
inc
add
adc
xchg
pop
call
mov
pop
mov
leave
xchg
mull
sub
addr16
or
adc
test
or
insl
jge
es
add
push
movsl
and
in
shl
jne
rol
add
pusha
sahf
push
push
add
loop
xchg
loope
adc
inc
and
and
jb
jne
addl
loope
sbb
js
sub
or
xlat
jp
out
jmp
cmp
test
push
fisubs
mov
xchg
jae
popf
jnp
sbb
dec
push
shlb
push
imul
mov
push
or
sub
imul
and
pop
xchg
lods
aas
es
or
mov
jb
push
enter
and
fidivrs
popa
add
jl
pop
out
int
push
cld
aad
mov
stos
das
in
lods
sbb
pop
mov
jecxz
lds
xchg
mov
hlt
jne
cwtl
test
and
adc
push
adc
pushf
cmpsb
lcall
idivl
dec
and
inc
hlt
insl
and
into
subl
and
mov
lea
iret
scas
lea
outsl
ds
mov
jae
mov
cmpsb
clc
sbb
mov
orb
movsl
push
js
mov
xor
mov
rcr
dec
push
push
lock
clc
push
xor
jne
sbbl
or
arpl
add
pop
negl
dec
mov
shr
jge
stos
jb
mov
sub
mov
shl
inc
mov
stos
or
lea
notb
add
dec
jl
std
fidivl
jmp
pop
ds
and
hlt
out
sbb
sarl
scas
sbb
stos
sbb
adc
or
dec
cld
mov
clc
fbld
xchg
sub
pop
xor
in
and
xlat
in
arpl
out
jns
test
xchg
add
ret
cmpsl
or
fs
adcb
orb
adc
jne
aas
leave
dec
adc
shrl
fs
xlat
mov
stos
hlt
mov
mov
xor
out
mov
jmp
mov
xchg
pusha
test
adc
rcrl
hlt
add
loop
in
data16
scas
inc
and
icebp
cs
ret
aas
cmp
sbb
or
pusha
call
mov
sbb
cwtl
hlt
jno
faddl
lret
and
xlat
push
in
movsb
aad
jne
movsb
lods
jl
iret
adc
lds
div
mov
mov
mov
jne
cmc
incb
mov
add
mov
jle
xor
dec
adc
call
sub
insb
in
test
add
test
adc
leave
aaa
mov
imul
jns
add
sub
xchg
cld
mov
push
fmull
push
test
out
sbb
aam
push
xor
mov
das
sub
mov
out
ds
subb
sub
dec
adcb
dec
lret
stc
out
or
movsb
aad
mov
jne
adc
call
adc
cmp
pop
sbb
lret
jne
lods
popa
mov
insb
sub
xor
fistpl
dec
add
enter
subb
xor
js
mov
sarb
jo
cmpsl
shrl
adc
or
dec
add
mov
push
xorb
or
dec
or
dec
dec
icebp
xor
inc
push
lock
scas
not
pop
cmpl
outsb
push
scas
ss
mov
add
xchg
hlt
test
je
movsl
out
insl
fstl
in
xor
pop
lcall
add
inc
push
enter
jns
sbb
arpl
popl
pushf
add
xor
test
mov
test
add
inc
dec
pop
or
mov
data16
lods
aaa
sarl
sbb
or
outsb
subl
dec
mov
movsb
shl
xchg
fistpl
pusha
add
jbe
jle
incb
std
add
mov
sub
add
lea
hlt
or
stc
leave
movsl
mov
mov
enter
mov
push
cld
test
mov
add
cmp
dec
jge
icebp
incb
inc
aam
xor
es
push
leave
adc
sub
sub
dec
mov
jne
pop
xchg
or
mov
push
fdivl
enter
pusha
je
fldl
xor
in
sbb
test
add
call
clc
sub
cld
jns
lret
pop
movsb
dec
cmp
lods
sub
stos
sahf
negb
int
enter
mov
jns
sbb
insl
dec
flds
xchg
pop
pop
mov
and
movsl
ja
adc
in
mov
pop
and
dec
add
mov
dec
mul
jle
mov
sbb
std
test
scas
popa
add
int3
adc
xor
cmp
out
pop
mov
xor
mov
mov
fcomip
shll
mov
add
cld
lods
or
fcomp
and
in
jne
lods
mov
adc
push
or
in
push
dec
jb
xchg
or
rcrl
cmp
aad
in
rcrb
pushf
fcomps
adc
push
mov
add
inc
leave
les
dec
push
cvttps2pi
sti
xchg
cmpsb
rcll
das
cmp
fwait
cltd
rolb
mov
pop
pop
sti
mov
imul
xorb
lds
add
mov
out
in
inc
push
loopne
faddl
sbb
xchg
mov
bound
mov
and
jle
out
push
fisttpll
andl
xor
or
inc
rolb
add
push
cltd
mov
fnstsw
pop
mov
sbb
es
push
add
arpl
orl
hlt
adc
nop
flds
xchg
arpl
daa
inc
mov
fildll
inc
mov
frstor
inc
fsubp
movsl
rol
cmp
add
xchg
xor
cwtl
repnz
mov
add
push
fsubr
or
imul
mov
xchg
hlt
sub
orps
cmpsl
jnp
mov
popf
int3
ljmp
inc
mov
and
mov
inc
jle
loope
lods
mov
call
adc
jl
push
lods
mov
call
pop
xchg
call
and
imul
cwtl
jb
xorb
mov
push
pop
xor
imulb
xchg
dec
push
mov
inc
rcrb
into
dec
leave
mov
ja
add
scas
lcall
or
movsl
out
jg
jmp
cmp
sahf
adc
dec
jne
sub
dec
pop
sarb
pop
or
outsl
into
push
nop
mov
and
stc
inc
fcmovnbe
push
push
mov
mov
jbe
rcrl
lods
xlat
jno
pop
jns
add
sbb
cmp
movsb
lcall
add
outsl
cmp
lret
loopne
push
adc
mov
adc
dec
inc
or
and
stc
and
mov
pusha
rcll
mov
xor
shlb
hlt
mov
enter
divl
pushf
inc
xor
aas
cs
or
jge
ret
hlt
stc
mov
push
mov
push
jns
jp
push
insl
ljmp
push
mov
int
pushf
jmp
sti
mov
add
fstpt
popa
jg
xchg
rclb
pushf
xor
out
mov
pop
popa
jne
insl
mov
mov
in
lret
inc
insb
outsl
mov
add
inc
pop
icebp
je
in
mov
push
fsts
adc
dec
lret
vsubps
shrb
sbb
leave
pop
and
test
lretw
in
jecxz
je
ror
test
jmp
xor
mov
mov
cmp
lcall
das
mov
lods
jmp
xor
pushf
clc
mov
and
into
sub
jle
test
jne
add
stos
popa
xchg
mov
xorl
fwait
lahf
mov
movsl
mov
fdecstp
lret
pop
testl
js
movl
cwtl
push
sbb
cwtl
mov
xchg
cmp
sub
mov
cs
test
xchg
pushf
mov
fdivrp
pop
fstp
dec
in
enter
mov
sbb
push
pop
repnz
shrl
sub
jecxz
fstpl
add
daa
scas
jmp
adc
sbb
or
xchg
jne
mov
loopne
lcall
fwait
sub
inc
jne
inc
dec
cld
jne
push
hlt
inc
and
push
ljmp
stos
push
rolb
sub
into
sub
js
dec
xchg
xor
fwait
inc
xchg
pop
sub
lret
outsb
aad
jl
pop
push
sbbb
mov
push
adc
enter
xchg
push
ss
xchg
sbb
add
loope
mov
push
mov
in
sbb
xchg
cmp
loop
dec
scas
jb
mov
lret
sub
xchg
sti
cmp
add
add
dec
incl
jne
je
and
add
test
js
repnz
cld
adc
add
adc
jae
inc
mov
xor
lahf
or
fstl
addl
test
shlb
jns
sahf
aam
or
mov
pushf
enter
sbb
jge
mov
pusha
dec
inc
fidivl
rcrb
nop
stos
push
movsl
ja
xor
aaa
enter
test
gs
jne
mov
scas
pop
sub
mov
mov
pop
jecxz
inc
clc
in
shl
jb
imul
jae
icebp
mov
mov
jle
or
sub
adc
ds
loopne
dec
mov
adc
imul
test
inc
mov
testb
cmp
cmp
ss
rclb
imul
jge
dec
stos
cmp
jmp
and
rol
lods
xchg
stc
ja
lods
lcall
inc
jne
aad
xorb
jge
mov
cltd
lods
rolb
xchg
xchg
push
xchg
andl
hlt
shlb
mov
sub
push
int3
or
dec
mov
fldl
sub
stos
out
jle
out
icebp
xor
in
mov
dec
mov
mov
and
inc
push
inc
push
mov
test
xor
mov
rcll
fadd
add
inc
jmp
mov
sub
mov
shlb
or
repnz
cmp
cmp
cmp
push
cmp
mov
jno
mov
push
sub
inc
popa
aas
mov
pusha
nop
in
in
ficoms
or
sbbl
sub
sbb
and
popf
mov
hlt
jp
lret
pusha
test
movsb
dec
xchg
in
mov
jg
ret
sahf
es
dec
inc
xor
pusha
out
lods
pop
cld
sbbl
bsr
subl
jge
xchg
mov
rcrl
fcompl
jmp
fs
inc
lret
pusha
call
test
movsl
jne
dec
xchg
iret
inc
xchg
daa
loopne
jl
das
xchg
lcall
inc
mov
xor
ror
adc
sbb
mov
lahf
fcoml
lock
xchg
popa
pop
push
mov
call
sub
repnz
lret
fnstsw
popf
pop
cmp
mov
cmp
stos
aaa
subl
rcrb
ret
das
push
jmp
leave
xor
mov
inc
adc
pop
arpl
fsubl
mov
andl
in
imul
or
pop
lea
aas
xchg
add
mov
sub
fldcw
xor
dec
hlt
leave
stos
mov
mov
outsb
adc
fcmovu
adc
sub
xchg
mov
lods
sti
push
sbb
lret
push
js
adcl
subl
jo
shl
mov
xor
fcomps
std
pusha
ss
sub
lods
dec
lods
lret
stc
ljmp
dec
sub
sub
rcrb
mov
int3
jl
xchg
mov
push
dec
jecxz
rcr
dec
and
xor
inc
dec
mov
hlt
mov
cmc
xchg
pop
sub
add
add
insb
mov
adc
hlt
adc
push
jne
mov
fcmovb
mov
xlat
ret
and
test
mov
xchg
aam
push
test
sub
push
push
subl
mov
call
nop
jns
add
ss
scas
xchg
push
test
fwait
inc
xchg
mov
mov
or
pop
pop
insb
insl
mov
rcrb
test
adcl
in
das
iret
out
mov
sarl
inc
aam
pusha
movsb
pop
test
mov
mov
push
sbb
or
je
movl
arpl
movsb
mov
dec
push
or
pop
sub
mov
or
or
push
mov
fiaddl
cld
mov
add
mov
mov
mov
fucomip
scas
in
leave
sub
add
lahf
out
mov
push
add
xchg
mov
mov
sub
insb
jno
add
lock
repz
lret
call
shll
hlt
test
mov
into
xor
dec
iret
daa
popa
insl
add
jecxz
adc
lock
mov
popa
jne
fiadds
mov
adc
lods
mov
fildl
push
insl
xor
and
lock
mov
jl
xor
sbbb
fdivrl
add
js
jg
xchg
and
rorb
pop
test
adc
xor
ljmp
lock
mov
jne
mov
xlat
in
cltd
movsb
cmp
test
mov
in
jbe
fwait
push
aad
or
mov
mov
xchg
sub
mov
test
roll
mov
pop
or
push
cld
rcrb
mov
lahf
push
pop
cmpsb
push
cli
or
jmp
or
ret
xchg
mov
shll
adc
hlt
xor
mov
mov
cmc
adcl
popa
push
sub
sahf
lret
sub
jge
xchg
sbb
cltd
xchg
test
cmp
ds
inc
dec
rclb
push
popw
xor
push
sub
dec
aas
test
mov
icebp
in
xchg
xchg
hlt
push
popf
fisttpll
aad
in
mov
or
jne
cwtl
mov
mov
hlt
fsts
nop
add
daa
test
jp
sbb
arpl
pop
loopne
divb
into
add
cwtl
jne
mov
cs
dec
popl
xor
ret
loopne
rolb
xorb
sub
xor
movsb
push
fwait
aad
push
outsl
jmp
push
adc
nop
outsl
adc
cld
adc
or
sub
orl
and
xor
pop
mov
enter
cmp
fadds
sti
icebp
arpl
es
pushf
jmp
movsb
add
sub
lds
xor
fnstcw
mov
push
lods
pusha
jns
sbb
mov
mov
mov
test
lret
inc
int3
inc
div
jno
push
gs
imulb
push
decl
push
divps
ljmp
repz
push
es
inc
mov
or
in
jmp
cmp
add
sub
mov
into
lods
jo
xorl
push
mov
push
aad
inc
cmpsb
stos
mov
xchg
pop
push
jno
inc
popf
mov
loopne
mov
or
xchg
add
stos
push
xchg
adc
sbb
push
xor
movsb
enter
push
enter
subl
add
daa
mov
sbb
popf
mov
jp
pushf
adc
loope
mov
xorl
adc
fldcw
inc
mov
dec
sub
lods
jne
sub
stos
outsl
mov
ss
scas
sub
push
push
add
mov
ret
rcrl
and
loope
mov
mov
inc
ret
jl
add
jne
cmp
fs
cmp
xlat
mov
or
jnp
in
in
dec
test
jno
call
lock
mov
cmp
add
mov
jp
adc
sub
das
inc
ss
into
add
add
out
dec
add
cs
add
test
mov
test
cmpb
dec
stc
addr16
mov
adc
pop
out
or
jo
adcl
out
add
ret
rcl
insb
sub
test
pop
push
and
sbb
or
jmp
mov
test
xchg
pop
loope
outsb
and
int3
jge
push
xor
push
gs
dec
sbb
sub
outsb
sbb
jbe
add
test
xchg
inc
adc
clc
mov
mov
loope
inc
movsb
orl
jns
push
rcrb
test
dec
andl
cwtl
xchg
mov
push
loop
out
mov
jl
pop
push
jle
mov
int
or
inc
xor
inc
test
leave
imul
call
lods
pop
enter
adc
add
adc
xchg
cld
jo
jnp
dec
ss
aam
cwtl
iret
enter
sbb
ret
int
hlt
push
or
mov
pop
mov
xorb
lret
and
les
outsb
orl
imul
sub
sub
insl
mov
arpl
push
aam
out
lahf
gs
fptan
or
bound
inc
in
out
ja
jmp
jmp
sub
movsb
dec
cltd
sti
fldl
aam
dec
enter
pop
mov
jmp
addl
xchg
pushf
adc
add
xorl
aam
fmull
mov
es
mov
push
push
push
dec
xchg
push
in
cmp
mov
mov
add
xlat
cli
cmp
mov
imul
les
or
mov
arpl
jle
incl
cwtl
adc
andl
mov
ret
mov
dec
push
mov
mov
mov
and
xchg
out
pusha
into
icebp
ja
jb
lcall
lds
xchg
pop
pop
sbb
dec
test
dec
push
or
adc
jne
mov
in
cmp
lret
push
nop
fisubs
and
lcall
pop
cwtl
mov
or
mov
jmp
or
cs
test
pop
and
out
add
mov
and
add
movsl
test
cmpsl
mov
sbb
popa
add
fcoml
pop
cmp
mov
insb
arpl
add
pop
cmp
pop
pop
or
mov
dec
xchg
aaa
scas
add
nop
fistps
mov
scas
test
shl
sub
lea
stos
jmp
filds
fldt
dec
add
cmp
adc
inc
inc
push
fsubl
mov
xchg
pop
pop
test
push
xchg
hlt
or
add
add
bnd
testl
sar
add
scas
adcl
sub
rorl
in
pusha
movsb
hlt
mov
fadds
add
and
add
fcoms
sub
push
jnp
mov
test
jnp
cmpl
add
jb
ficomps
jnp
mov
cmp
sahf
xchg
in
es
iret
call
and
decl
enter
loope
mov
test
imul
pop
cwtl
pop
adcb
xchg
sub
mov
adc
sbb
hlt
inc
cli
ficoml
adc
dec
inc
sbb
cmp
push
sub
add
xor
clc
mov
dec
scas
and
jne
loop
add
dec
popa
pop
icebp
sub
and
pop
lods
orb
sbb
imul
push
xlat
jp
lea
loope
test
fadd
add
sbb
stos
rclb
sbb
dec
addb
adc
fs
dec
mov
jo
faddl
insl
cli
int3
cltd
pop
insl
fildl
and
in
mov
jmp
xor
fdivrl
or
test
jg
fidivrs
mov
test
or
test
sahf
xorb
divb
es
cwtl
mov
xor
out
into
sub
inc
and
inc
pop
dec
mov
or
cmp
out
movsb
rcr
or
loopne
leave
and
inc
scas
mov
into
xchg
jp
andb
push
mov
cmp
dec
add
cmp
cmpsb
sbbl
sub
xchg
addr16
lods
add
mov
xor
mov
xchg
mov
imul
imul
jne
gs
mov
mov
loop
iret
mov
std
inc
xchg
hlt
inc
test
sbb
loope
push
xchg
mov
adc
xor
inc
cmc
sub
call
cmpb
cld
cmp
push
mov
nop
xchg
adc
enter
pop
adc
xor
pop
ret
pop
cmp
xchg
sub
sbb
mov
push
movsl
ret
std
icebp
cs
into
fnsave
mov
add
mov
inc
dec
mov
hlt
fadd
jne
ljmp
sahf
mov
push
add
inc
and
add
enter
xor
sbb
jne
rcrb
enter
ret
cmp
dec
push
mov
outsb
call
xor
add
adc
adc
nop
jno
iret
or
outsb
add
in
out
repz
std
out
mov
repnz
pusha
fidivrs
lods
loope
fs
inc
mov
popa
add
sti
aad
gs
and
loop
dec
scas
cld
pop
mov
adc
dec
ficomps
test
xor
xchg
sub
push
add
push
in
mov
smsw
sub
stos
scas
and
adc
int
or
mov
aas
mov
add
add
movsb
lahf
pop
lds
ret
sub
sahf
mov
fst
loope
cmp
and
subb
jge
mov
test
fmull
xchg
daa
and
idivl
pop
pop
sub
inc
outsl
push
lea
jne
je
ljmp
add
push
fisubs
sbb
repnz
das
mov
jp
jno
cltd
sub
lock
xchg
xchg
sub
out
mov
mov
jg
mov
sub
pop
cmp
xchg
add
dec
mov
stos
imul
mov
inc
cmp
fmull
int
imul
push
enter
xchg
mov
jle
sub
leave
das
nop
inc
or
cmp
testb
mov
imul
sbb
mov
imul
cmpsl
jne
mov
inc
pusha
dec
pop
inc
out
mov
test
sub
ds
dec
add
jns
ret
lds
lcall
jns
jmp
and
into
fwait
cld
loop
pushf
jne
mov
shll
test
mov
push
movsl
push
loop
inc
push
cmp
fmul
sub
dec
stos
xchg
addb
stos
cltd
push
sub
push
lahf
pop
add
jle
fsubs
ret
jne
mov
or
shrb
jno
fisttps
into
pop
dec
nop
dec
bound
insl
fcom
test
jne
and
or
in
dec
dec
dec
push
enter
xchg
sub
insb
movsl
or
clc
call
adc
pop
repz
hlt
or
cmp
push
jge
loop
insl
enter
add
int
movsl
adc
aam
or
pop
in
test
out
xorb
gs
pop
xlat
lock
or
push
loopne
sbb
addr16
xchg
fdivp
out
mov
jmp
mov
and
mov
xchg
mov
hlt
mov
js
sbb
sub
pop
gs
xchg
or
cld
shlb
dec
mov
mov
xor
test
mov
rcll
sub
test
ret
xchg
xchg
dec
into
nop
sti
adc
jns
lods
mov
push
xchg
push
or
pop
sbb
sub
addr16
js
cmc
loopne
mov
int3
xchg
mov
addb
dec
jne
adc
xchg
outsl
or
xorb
xor
adc
pop
call
dec
inc
hlt
cwtl
add
mov
loope
xchg
adc
in
loop
add
hlt
insl
sahf
fdivs
inc
adc
add
mov
add
icebp
in
cmp
call
fimuls
jle
pop
fbstp
jns
pop
xchg
lea
repnz
adcb
inc
int3
adc
adc
jns
lock
insb
shll
and
cwtl
xchg
ja
ds
lods
push
or
scas
push
sub
sbb
mov
addb
lret
inc
lods
pop
xchg
cmc
mov
inc
jo
xchg
lods
push
fiaddl
js
daa
call
pop
or
push
loope
mov
xor
xorl
lods
in
xchg
jae
ds
hlt
out
mov
es
pop
jge
mov
std
cmpsb
test
mov
xchg
stos
mov
jg
arpl
jge
add
and
mov
cli
xor
sub
rcll
sub
dec
mov
inc
mov
xor
scas
aam
roll
cmp
sub
push
out
dec
mov
jnp
adc
hlt
pusha
out
pop
inc
lods
subb
cmp
addl
sub
xchg
je
xor
lret
addl
mov
mov
fcoml
mov
or
ret
out
push
push
add
pop
jo
pop
dec
arpl
sti
ss
pop
inc
add
enter
xchg
das
mov
hlt
push
sbb
movsl
mov
ret
insb
fwait
mov
mov
mov
lods
xor
sub
pop
mov
icebp
dec
mov
and
subb
call
test
or
push
icebp
jbe
pop
push
xor
jno
lahf
jns,pt
sbb
movsb
loop
mov
xchg
mov
add
inc
pop
mov
mov
push
jne
idivl
inc
ja
lock
xor
pushf
out
aas
jecxz
cmpsb
dec
out
into
pop
push
mov
cwtl
push
push
inc
lods
outsl
add
sbb
mov
xchg
xor
pop
sub
mov
add
or
fstpl
push
add
mov
pushf
add
outsl
sub
dec
cld
cmpsl
xor
xchg
pusha
push
sub
mov
push
lods
adc
inc
jne
jmp
and
xor
jne
jge
fisttpll
popa
mov
or
push
insb
cld
cmp
add
add
or
imul
jmp
hlt
push
les
mov
das
enter
mov
and
xor
xchg
cmc
andb
fdivp
and
sbb
jmp
pop
popf
dec
bound
cld
inc
mov
jmp
in
pusha
nop
xor
jno
pop
ds
hlt
push
add
or
cld
fldcw
jo
imul
leave
out
aam
lret
xchg
pop
adc
adc
das
mov
xor
int3
or
jecxz
cmp
add
inc
aad
push
add
hlt
push
cmp
xchg
loope
fcmovne
sbb
mov
pop
subl
add
in
add
and
insl
loop
das
jge
sbb
pop
pusha
jge
add
fcoml
mov
fldcw
xchg
xor
incb
mov
mov
or
aad
inc
sbb
lcall
shll
cmp
insb
mov
and
les
ja
pop
mov
mov
call
mov
popa
gs
rorl
pop
gs
loopne
icebp
outsb
ret
inc
movsb
jne
cli
adc
sub
cmp
aad
jnp
xchg
test
fs
into
sub
pushl
out
in
insb
sbb
adc
das
lods
jne
out
adc
xchg
leave
mov
xchg
or
test
movl
sarb
loope
jne
repnz
flds
sub
shrb
xor
or
add
cld
or
inc
xchg
daa
in
movsb
in
push
jne
mov
mov
dec
add
jmp
jne
mov
adc
popa
lcall
and
jb
mov
sbb
outsl
or
popf
repz
adc
cmpsb
xchg
stos
pop
icebp
sub
ljmp
fistpl
hlt
xchg
inc
pop
test
mov
sub
add
fbld
mov
pop
cli
push
adc
lcall
movsl
aad
mov
xchg
fildl
and
mov
ljmp
iret
repnz
orb
pop
xorb
xchg
cmp
xor
dec
rolb
fists
rorb
orb
and
pop
aam
mov
xchg
jge
lock
mov
jnp
testb
pop
sub
xor
pusha
test
sub
lds
inc
and
mov
js
or
xlat
test
cwtl
cli
mov
mov
push
pusha
sbb
add
push
hlt
lea
test
inc
fstl
cmc
mov
mov
lcall
push
testb
push
fwait
out
lods
sbb
mov
sbb
ja
mov
sahf
iret
gs
cmc
push
mov
ljmp
add
mov
in
mov
movsb
fisttps
scas
pop
nop
push
mov
lahf
addl
leave
cmp
sub
data16
enter
sbbb
dec
jle
push
or
xor
or
xchg
loope
out
sub
test
mov
or
fsts
lahf
jl
xor
mov
movsb
mov
jae
repnz
fimuls
or
add
subb
cmpb
add
aaa
add
dec
mov
cld
ffreep
fldt
add
mov
sbb
add
sbb
and
jno
jp
sbb
dec
xchg
push
add
test
sub
outsb
pop
sub
pop
pop
test
or
sub
repnz
pop
lods
pushf
sarb
imulb
movsb
loope
sbb
or
and
cmc
push
push
xchg
cltd
adc
out
sbb
mov
sub
sub
leave
mov
in
out
dec
xor
les
dec
ss
push
or
or
xchg
cld
outsl
mov
adc
mov
int3
loopne
rcrb
ret
test
dec
sub
cmp
sub
cmp
mov
or
dec
in
insl
ror
sub
push
imul
mov
lods
ret
add
lret
out
mov
rolb
stos
es
out
insb
dec
sub
pushf
test
cmp
cmpsl
lods
adc
and
aaa
jnp
inc
lret
adc
out
add
sbb
inc
and
loop
add
cli
or
mov
sub
inc
hlt
out
adc
lcall
into
add
stos
xchg
mov
push
mov
or
mov
cld
lds
stos
lret
mov
adc
mov
push
push
test
cmp
jnp
add
push
adc
mov
fadds
push
sub
roll
mov
mov
insb
sbb
xchg
ret
jmp
dec
or
xchg
jne
mov
dec
xorb
lahf
jne
sub
roll
or
jno
push
out
test
fcomi
fwait
mov
mov
pushf
adc
inc
test
pop
inc
lock
fiaddl
hlt
sub
test
insl
cmp
cltd
cmp
dec
call
pop
rorb
xchg
jnp
nop
addr16
sub
testl
dec
mov
pop
xchg
cmc
aas
gs
fildll
cwtl
scas
loope
fnsave
jge
mov
add
cwtl
jnp
sbb
test
enter
mov
inc
xchg
jle
inc
cmp
sbb
add
call
mov
dec
mov
lods
cmc
rclb
cld
int
add
or
call
movsb
xchg
xchg
push
sbb
cld
leave
adc
mov
rcl
adcb
push
imul
repnz
xchg
inc
jl
jo
add
cmp
popl
pop
sti
and
dec
rolb
lods
push
repz
movsl
repnz
jne
leave
push
outsl
rorl
cmpsb
into
add
leave
ffree
aas
ret
mov
mov
mov
test
sub
les
pushf
xchg
mov
sbb
inc
jbe
jb
es
xchg
in
sbbb
or
dec
ja
insb
decl
add
jnp
incb
pushf
push
inc
roll
inc
ret
ja
inc
or
dec
adc
push
pop
rolb
push
aaa
xchg
mov
es
pop
sti
out
jbe
aam
or
xchg
push
fadd
or
mov
push
xchg
dec
mov
jne
adc
enter
cltd
add
test
into
cmp
clc
add
in
ror
incl
das
push
xchg
push
rcll
inc
jb
adc
popf
push
add
test
mov
or
dec
xor
mov
sahf
inc
xchg
lea
je
xchg
test
in
pusha
dec
sbb
mov
mov
push
test
push
cmpsb
adc
mov
mov
sub
dec
test
lahf
mov
jno
fsubrp
jno
repz
sub
xchg
jne
scas
aas
loopne
mov
orb
xchg
lea
bound
jne
sbb
into
pop
aas
and
hlt
adc
xlat
sub
push
push
add
std
cltd
sub
repnz
xor
out
pop
loopne
xorl
dec
mov
jae
stos
jle
mov
push
pop
stos
cld
mov
ret
jne
add
dec
adc
stc
pop
loopne
hlt
mov
or
movsl
sub
fadd
loop
shr
xchg
das
xchg
adc
adc
mov
push
jle
xchg
mov
mov
add
inc
test
popa
nop
jne
xlat
test
lret
or
nop
das
in
inc
push
xor
jmp
hlt
dec
pop
pop
jp
adc
adc
cmp
jp
cmpsl
cltd
mov
mov
add
push
ljmp
fucomip
hlt
es
hlt
and
loope
fmuls
add
mov
sub
adc
movsb
sub
sub
xchg
add
jnp
out
dec
addr16
hlt
or
gs
fmul
ja
dec
cmpsl
xor
mov
ret
mov
cwtl
inc
gs
sarl
rsqrtps
add
movsb
adc
pop
iret
sbb
xchg
cwtl
cmpb
clc
jne
adc
hlt
jae
cmp
inc
mov
cs
das
mov
inc
adc
push
ss
pop
mov
dec
xchg
into
push
mov
rcll
test
pop
xor
mov
int
aas
ds
pop
cmpsl
inc
inc
push
frstor
inc
jb
daa
mov
in
or
das
pop
repz
mov
or
jns
mov
adc
in
dec
push
sub
int
jge
or
lahf
jnp
mov
iret
lret
mov
enter
das
sub
negl
push
imul
push
push
test
xlat
sub
inc
jne
jl
push
insb
mov
sar
xchg
push
test
and
push
movsl
mov
xchg
pusha
push
and
mov
and
mov
outsb
rclb
jmp
test
lret
in
sub
dec
sarl
es
subb
mov
push
adc
idivl
xor
mov
jp
push
add
xorps
jne
push
add
adc
mov
mov
mov
mov
orb
std
xchg
aam
lods
pop
in
mov
xchg
ficompl
daa
push
add
xchg
test
popf
sbb
in
jae
dec
ljmp
and
adcb
add
inc
mov
mov
mov
or
stos
xchg
or
pop
out
adc
test
jne
scas
lds
shlb
movsl
xchg
paddq
inc
hlt
pop
sub
xor
out
or
mov
xchg
jne
xchg
stos
mov
push
sbb
mov
dec
pop
js
sbb
xor
sub
xchg
jbe
cmp
lret
cmpsl
out
mov
xor
scas
mov
mov
es
dec
add
adc
add
pusha
jae
shlb
jecxz
adc
cmpsl
cmp
push
inc
mov
imul
lods
mov
movsb
popf
sbb
loopne
mov
inc
pop
imul
lods
fadds
sub
adc
push
clc
dec
loop
lods
jne
or
sub
and
imul
push
or
dec
sub
jl
stos
and
pusha
xchg
iret
movsl
sbb
test
mov
cmpsl
jbe
mov
stc
jmp
cld
dec
mov
add
decl
imul
jle
dec
lock
pop
lret
adc
mov
aas
push
pusha
sti
adc
add
xchg
or
inc
pop
les
or
mov
inc
jbe
mov
mov
pop
adc
ds
or
sbb
test
cs
xorb
repnz
pop
sahf
fldt
test
cltd
cmp
mov
or
inc
arpl
in
in
mov
dec
inc
shlb
mov
iret
lcall
mov
and
daa
mov
pusha
test
cld
repz
push
fisubs
pop
sub
xor
dec
sub
int3
lcall
cmp
add
arpl
cmpsb
pop
sub
cmpsb
jno
jnp
mov
mov
xchg
pop
test
hlt
mov
push
lock
jne
or
inc
loopne
mov
loop
fidivl
into
imul
ror
subl
inc
clc
add
movsl
and
xchg
inc
xchg
mov
outsb
push
cmc
xchg
inc
and
pop
cmp
cmp
dec
stos
js
mov
add
mov
sbb
sub
inc
cmpsl
jge
push
inc
sub
jbe
ret
inc
mov
call
movsl
stos
sub
xchg
fptan
or
inc
les
add
jecxz
xchg
ja
add
fmull
mov
and
pop
jb
mov
fstps
stos
stos
cmpsb
xlat
cmp
mov
mov
out
hlt
adc
subb
ret
add
pushf
mov
in
push
int3
sti
ljmp
add
mov
jae
pushf
sub
xorb
xchg
sub
dec
ret
rorb
jbe
enter
jbe
jb
xchg
jg
add
dec
popa
sub
pop
jne
int
and
notb
cmp
cmc
mov
stos
sbb
aaa
mov
cmp
inc
sub
mov
mov
mov
sub
push
add
push
call
lods
hlt
dec
scas
sub
jae
jns
push
test
push
jnp
pusha
or
xchg
mov
fs
mov
and
cwtl
sub
xchg
or
jbe
test
cmc
lds
test
lcall
sub
mov
enter
test
out
mov
mov
movsl
ret
jne
je
movsl
cli
xchg
cwtl
push
scas
add
mov
push
xchg
mov
lods
ret
clc
bound
outsb
mov
cli
fnstenv
lea
jne
mov
orb
test
xchg
and
jno
fmuls
xor
hlt
sbb
mov
xchg
jne
in
in
les
jbe
jmp
idivl
jbe
clc
ret
lods
mov
jg
xchg
lcall
sub
cmpsb
lahf
sti
cmpsl
or
stos
add
push
ret
mov
int
ret
inc
jp
mov
or
cmpl
xchg
dec
repnz
addl
lcall
andl
mov
test
mov
enter
outsl
cmp
push
pop
lods
inc
hlt
mov
jp
dec
mov
adc
aas
enter
movsl
adc
shrd
jg
push
mov
mov
or
adc
xchg
xchg
pushf
mov
or
call
in
loopne
jne
cmp
ret
test
adc
out
mov
jecxz
repnz
sbb
mov
insb
xchg
dec
aas
leave
movsl
call
test
stos
outsl
pop
xchg
dec
cmp
or
mov
xchg
or
pusha
les
int
jmp
clc
hlt
shlb
stos
pop
or
clc
dec
lea
nop
cld
fs
rorl
mov
fnsave
repnz
ss
push
outsl
mov
add
pop
hlt
add
int3
pushf
add
dec
sarb
scas
adc
and
jno
jge
les
jne
cmp
test
stos
mov
aas
dec
fisttpll
lcall
mov
xor
adc
bound
inc
add
xchg
shrl
mov
mov
jb
pusha
cld
popa
xchg
mov
leave
pop
xchg
sub
int
add
and
call
add
sbb
ja
jmp
jo
mov
fwait
in
push
in
insb
add
inc
pushf
in
iret
mov
out
push
movb
arpl
sub
das
jns
or
loop
push
out
rorb
cmc
push
mov
inc
xlat
testb
nop
mul
jne
xchg
dec
clc
cwtl
mov
out
push
inc
inc
rorl
clc
push
les
lcall
stc
shrl
fidivl
cld
ja
fldz
adc
out
hlt
xchg
dec
nop
jl
or
ffree
pop
cmpsb
push
mov
jne
and
sbb
es
icebp
or
add
or
jmp
out
sbb
lret
loope
cmp
popf
sbb
subl
shrb
ffree
nop
dec
jne
sub
pop
adc
out
fadds
mov
add
fimuls
mov
sbb
in
addb
mov
in
call
mov
sti
rcrl
or
push
jmp
int3
inc
shlb
xchg
mov
mov
sahf
fisubs
cli
mov
pop
lret
adc
fistl
sub
pusha
dec
dec
mov
dec
sub
jb
pop
mov
fldt
xchg
call
inc
mov
cmpsl
imul
add
push
les
xchg
adc
fidivs
sahf
in
sub
sub
cwtl
sbb
push
mov
mov
sub
sub
out
or
in
mov
lock
in
hlt
sbb
lret
lcall
push
fs
imul
rorb
xchg
pop
subb
inc
sbb
push
outsl
xchg
jmp
pop
mov
xchg
in
cmc
addr16
mov
jbe
repnz
jg
ret
pop
in
dec
mov
scas
out
xchg
xchg
stos
sub
leave
mov
je
mov
in
mov
sahf
hlt
insl
aam
dec
sub
push
mov
movsl
sbb
adc
lret
xchg
ljmp
jmp
in
jne
jns
cld
dec
pop
jbe
inc
sub
cmp
imul
cli
push
sbb
add
mov
or
dec
sub
popa
sub
shl
shrl
icebp
mov
icebp
inc
enter
aad
jne
ss
int3
jl
ret
outsl
popa
movsl
loopne
ljmp
dec
std
cli
adc
imul
daa
pop
pop
mov
or
shlb
test
lods
pop
mov
xlat
std
jbe
adc
lcall
lret
xor
aaa
outsl
hlt
sbb
mov
rcrb
hlt
gs
cwtl
push
pusha
fmull
jne
inc
mov
in
or
lock
mov
jbe
leave
sub
mov
test
insl
sbb
nop
mov
arpl
pop
jle
daa
push
inc
stc
scas
sub
insl
jl
mov
cld
push
jp
ljmp
out
ljmp
xor
fisubrs
int3
test
add
das
xchg
pop
and
repz
fisubrs
sub
adc
imul
and
lcall
xchg
dec
cmp
push
sub
xor
add
sbb
mov
cmp
push
jne
xchg
cmp
jnp
stos
pop
mov
xchg
pop
sbb
not
push
mov
or
pushf
mov
leave
out
ret
or
pop
rcl
movsl
jno
sbb
pop
mov
fists
fwait
sub
int3
jle
mov
dec
insb
popf
repz
sarb
push
pop
cmp
mov
mov
std
inc
add
pop
insl
gs
repnz
inc
sub
mov
mov
push
frstpm(287
popa
imul
xchg
movsl
les
test
out
sub
addb
orb
test
and
xor
loop
shlb
xchg
aaa
arpl
negl
and
jle
pop
aaa
roll
inc
data16
mov
sbb
sub
adc
stos
fldl
les
and
das
fdivp
dec
mov
pop
jmp
clc
pop
jmp
push
add
cmp
sar
stos
cmp
add
or
into
fdivrl
dec
out
inc
cmpsl
nop
jl
mov
xchg
cwtl
sbb
ss
xor
add
add
aam
push
push
imul
mov
jne
adc
pop
leave
test
les
sub
lock
sub
mov
stos
xor
scas
movsb
inc
addr16
xchg
inc
movsl
dec
mov
mov
arpl
ret
jmp
mov
pop
sbb
out
shlb
lods
xchg
outsl
xchg
fiaddl
sarb
jmp
xor
popa
lahf
ljmp
jne
sub
les
push
adc
out
icebp
mov
hlt
inc
inc
rorb
mov
sub
jge
inc
pop
or
leave
xchg
xchg
inc
repnz
aad
loope
mov
cwtl
neg
bound
inc
cld
daa
jo
mov
add
iret
push
outsl
adc
lods
xchg
frstor
jo
inc
mov
jne
push
hlt
stos
mov
mov
mov
xchg
leave
test
das
inc
inc
xchg
xor
jp
mov
push
pop
mov
mov
inc
imul
popa
shlb
andb
lea
pushf
jmp
fists
cmp
cmc
mov
xor
hlt
shll
test
je
fcmovu
mov
ret
xchg
sub
repnz
pop
jns
push
pop
push
add
movsl
sti
mov
shlb
jae
mov
push
and
sbb
lds
jo
sbbb
jnp
dec
or
jle
jp
sub
mov
inc
inc
mov
sti
repz
sbb
addb
push
rorl
cmp
add
cli
hlt
push
pop
movsl
jbe
fdivs
stos
sbb
sarl
xor
adc
movsl
dec
pop
sahf
add
mov
pop
fstps
out
mov
cmp
popa
xor
add
sar
fs
xor
ret
lods
mov
sti
call
mov
jne
or
cltd
pop
repnz
push
imul
jns
add
sbb
hlt
ret
loope
pop
jns
sub
hlt
imulb
lods
ljmp
mov
xor
hlt
repz
lahf
test
lea
or
push
mov
add
xor
out
outsb
xchg
adc
mov
push
mov
lcall
sub
jns
rclb
clc
inc
pusha
into
push
jne
mov
push
push
pop
xchg
lret
mov
push
arpl
stos
push
inc
loopne
or
fmull
cltd
lea
mov
push
pop
sub
loope
loopne
jo
dec
cmc
dec
and
xchg
hlt
cmp
push
lock
movb
orl
sbb
add
add
adc
push
jo
loop
imul
test
xchg
jp
jne
cmpsl
roll
rorb
dec
fsubrs
and
in
mov
addl
int
test
xor
adc
mov
add
test
cmp
mov
lds
mov
mov
and
je
sub
es
outsb
stos
mov
inc
push
mov
ja
jnp
push
push
dec
xchg
adc
add
shl
mov
dec
into
xor
pop
cmpsl
in
gs
sub
sub
mov
and
jl
clc
int
fnsave
xor
mov
push
fdivs
hlt
hlt
or
imul
inc
mov
add
loope
in
shlb
test
stos
fimull
loope
mov
std
subb
mov
mov
loope
pop
lods
test
jecxz
lret
mov
jb
adc
lret
jecxz
pop
popa
into
frstor
cmp
je
jo
jbe
jmp
push
jecxz
add
cmc
jmp
out
cs
cmpb
push
repz
sbbb
inc
pop
sahf
mov
lock
out
jl
push
rcl
insb
mov
ror
testl
push
jne
add
inc
mov
ret
xchg
je
pop
mov
xchg
mov
fidivrs
inc
sbb
xor
scas
fsubl
pop
sub
loope
hlt
add
bound
sub
dec
test
add
inc
addl
adc
call
enter
insl
mov
int
xor
test
xor
negb
rol
cli
dec
inc
out
in
cmpsb
loope
loop
and
jg
or
iret
pushf
cltd
test
adc
out
mov
cli
jecxz
iret
adc
cmc
inc
or
xchg
and
dec
adc
mov
test
fidivrl
loope
imulb
mov
xor
int3
int3
stos
fst
shll
add
jge
pop
mov
sub
or
pusha
popa
or
push
mov
push
sub
rolb
cmp
iret
push
xchg
cwtl
pop
jmp
test
imul
inc
pop
add
in
sub
sbb
lock
jne
adc
ljmp
inc
insl
fxch
adc
pop
sahf
out
int3
popa
insl
je
jecxz
xchg
xchg
push
pop
push
hlt
mov
test
xchg
pop
push
xor
push
sahf
std
xor
mov
ret
sarb
nop
test
jecxz
add
hlt
cld
sbb
pop
sbb
push
sbb
pushf
and
adc
int3
cmp
out
or
adc
adc
stc
push
js
push
mov
fucom
hlt
cmp
f2xm1
nop
stos
hlt
push
cmp
nop
adc
in
sub
in
cmp
jb
les
mov
mov
sub
pop
test
push
loopne
mov
dec
adc
jge
dec
pop
jae
popa
inc
in
adc
jl
push
out
addr16
push
bound
rorl
push
scas
mov
dec
jne
xor
jbe
add
mov
push
push
outsl
decl
hlt
jno
imul
sbb
xor
rcl
add
fiaddl
adc
gs
orb
out
cmpsl
cld
outsl
cld
sbb
jle
jbe
inc
int3
mov
mov
sub
icebp
pop
push
cli
rcll
es
aam
sar
sbb
inc
call
cmp
cmp
or
movsb
test
daa
lret
mov
in
sbb
mov
movsb
stos
xchg
mov
out
pcmpeqw
pop
rolb
mov
cmp
sub
aas
jecxz
dec
enter
cmpsl
sub
movsl
or
adc
push
fwait
mov
cmpsb
lahf
jmp
adcl
adc
adc
xchg
sub
add
cmp
cwtl
jbe
hlt
mov
sti
mov
xchg
sub
ret
pop
pop
incb
repnz
mov
out
jb
in
shlb
xchg
pusha
add
lcall
xchg
out
inc
mov
dec
sub
dec
mov
fbld
add
push
mov
adc
dec
lahf
aaa
daa
adc
jmp
sub
subb
les
loopne
pop
inc
inc
or
jmp
fnstsw
xlat
dec
xchg
mov
inc
inc
fisubrs
call
xor
push
cmp
stos
mov
cli
das
mov
shll
adc
int3
pop
test
enter
lea
cmp
addr16
pop
mov
jne
inc
movsb
jl
jne
xchg
cmp
or
stos
incb
addr16
pop
sbb
dec
dec
dec
cmp
aad
rol
sarl
mov
movsl
cmpsb
mul
arpl
jne
dec
cmp
jbe
test
inc
out
push
add
jmp
out
repz
jne
aad
jl
ljmp
xor
or
mov
es
lds
sbb
sub
into
mov
xor
jne
adc
adc
inc
inc
xchg
mov
rorb
or
sbb
test
pop
fcoms
sbbb
ret
dec
lock
insl
es
or
out
mov
andl
les
pop
icebp
xor
adc
int
outsl
mov
iret
add
sub
aas
mov
addb
fimull
int3
insl
dec
nop
sub
push
xchg
popf
imul
int3
and
xchg
sahf
sti
ljmp
xchg
lret
fscale
add
fs
or
mov
stos
pop
fs
adc
call
outsb
imul
fstl
insl
dec
mov
sub
push
xchg
gs
dec
sbb
or
pop
sbb
daa
cmp
fimull
sub
pushf
lods
mov
hlt
icebp
fisttps
jae
mov
jne
mov
add
leave
xchg
hlt
rcrl
xlat
int3
fmull
push
sub
push
inc
sarb
dec
cli
daa
movsb
hlt
jbe
add
or
cmpsb
mov
add
out
sbb
es
fcmovu
cld
lahf
subb
cmpsb
and
mov
lahf
jmp
or
outsb
sarl
jo
mov
jns
add
lahf
inc
sbb
mov
push
ffree
add
mov
aaa
dec
cmc
outsl
popf
shrb
mov
mov
adcb
sub
cmp
aam
or
les
sti
call
jbe
mov
adc
inc
jge
add
add
pop
mov
mov
sub
je
dec
dec
push
push
pop
jl
push
aad
pop
mov
xor
sub
pop
add
hlt
mov
xor
int
fiaddl
mov
cmpsl
mov
test
dec
ljmp
or
add
loop
jnp
out
mov
std
add
xchg
xor
inc
dec
test
pop
mov
mov
gs
lock
stc
cwtl
mov
lret
xchg
xor
outsl
mov
ljmp
fcoms
hlt
mov
pop
mov
sahf
inc
dec
je
enter
mov
leave
je
mov
mov
cwtl
fsub
into
dec
xor
sbb
rolb
loope
test
mov
in
stos
movb
subb
jl
sbb
jl
cmpsl
hlt
cltd
pusha
xchg
pop
xorl
mov
and
fstp
nop
dec
outsb
dec
test
sub
mov
mov
xchg
int3
movsb
int3
cmp
dec
loopne
shrl
dec
adc
and
dec
loop
jmp
mov
mov
add
inc
jmp
icebp
inc
stos
std
mov
mov
mov
adc
mov
or
fidivs
les
test
dec
aad
divl
mov
outsl
or
scas
stos
inc
inc
fsubrl
pop
mov
mov
xchg
cmp
sub
xor
or
and
divb
inc
lods
xchg
sbb
fldcw
dec
andl
cli
idivl
cwtl
or
scas
inc
sbbb
sbb
pusha
mov
ja
sbb
pusha
mov
js
mov
movsb
ret
and
xchg
test
jne
daa
push
cwtl
aam
dec
sbb
aam
sub
adc
mov
roll
cmp
mov
dec
mov
pop
xchg
leave
jnp
jbe
mov
insl
repnz
ja
ja
add
out
mov
jne
sub
fbstp
mov
jnp
pop
mov
inc
mov
enter
enter
dec
shl
outsl
loope
sub
cmp
orl
imul
mov
sbb
in
lret
in
cmp
inc
xor
enter
mov
and
stc
xor
fadds
adc
fdivr
or
sub
in
into
jg
xlat
mov
rorl
xor
xchg
ss
inc
scas
mov
inc
outsb
loopne
push
dec
jne
mov
xlat
sub
fistl
aad
stos
cmp
loope
jne
xchg
pop
mov
or
mov
je
cmp
lret
inc
jne
out
add
xchg
pusha
inc
xlat
ja
xchg
adc
mov
cs
adc
inc
out
push
cld
or
fnstsw
sti
pop
push
sbbb
iret
iret
loope
dec
out
es
cwtl
lret
sbb
mov
pop
xchg
mov
sub
dec
cmp
inc
test
xor
adc
ss
xchg
jo
and
lods
in
mov
lcall
add
cmp
hlt
push
pop
or
push
xorl
in
xchg
in
sub
inc
enter
add
mov
push
dec
pop
hlt
aad
ss
sbb
xchg
xor
stc
aad
push
les
jp
testl
dec
daa
mov
cmpsl
mov
mov
sbb
orb
fwait
add
repz
xor
and
cld
pop
loop
cmp
mov
sbb
repnz
les
push
adcl
sbb
sub
mov
push
test
filds
negl
cld
das
jmp
adc
sub
fisubrs
inc
mov
repnz
sbb
or
outsl
xchg
popf
mov
std
in
int
cmp
sbb
xchg
inc
nop
lods
dec
add
jns
fisttps
push
fstpl
sti
test
push
xor
loope
pop
pushf
test
cs
outsb
pop
cmc
loope
jnp
sbb
dec
cli
pop
or
lahf
sub
or
scas
mov
ret
es
lods
enter
pop
and
fadds
cs
bound
sbb
mov
pushf
cmp
fnstenv
test
icebp
xor
xor
sub
push
jo
or
jp
cmp
enter
fs
adc
bound
ret
cmpsb
or
cs
cmc
lods
pushf
add
add
imul
fists
push
sarl
add
lcall
sub
das
jo
ret
js
jb
push
mov
dec
mov
mov
cmp
sar
hlt
or
in
add
mov
sti
cmpsb
jmp
shrl
xchg
fldenv
out
lcall
inc
sarl
push
sub
out
in
push
int3
sub
mov
add
fists
jecxz
or
sub
ja
loopne
or
mov
pop
outsl
pop
in
ds
aas
add
adc
fdivl
fistl
cmp
xchg
loop
in
dec
sbb
cmp
xchg
repz
or
sub
stos
ss
divb
int
insl
mov
add
sbb
shrl
add
sub
inc
flds
cmp
lcall
or
mov
and
jg
imul
sbb
es
addr16
rcrb
fiadds
call
icebp
and
negl
add
cld
pop
push
ret
loope
cmp
imul
pop
aad
sti
push
push
cmp
ds
stc
pop
push
mov
and
lret
std
scas
repnz
cwtl
test
mov
sub
scas
popf
arpl
inc
ret
test
mov
fs
pop
lcall
in
pop
daa
lret
adc
inc
push
into
add
push
mov
fsubrp
lods
push
sub
shlb
mov
pop
scas
outsb
mov
daa
or
jo
jbe
push
cli
add
and
jnp
jb
pop
cmp
insl
inc
mov
enter
popa
push
mov
xor
sbb
dec
xchg
lcall
xor
xor
mov
nop
aaa
lds
mov
pop
dec
mov
ja
cs
fstpl
popf
dec
mov
movsl
xchg
and
aam
rclb
cmpsl
adc
sbb
sbb
das
pop
push
add
sub
xchg
sahf
in
cli
cmp
sub
cmpsb
mov
mov
cmp
pop
mov
adc
push
int3
sub
shrl
bound
pop
hlt
sub
insb
lods
les
add
sti
test
sahf
add
cmpsl
mov
daa
mov
int3
lods
fisubrl
movsl
and
popa
inc
fsubl
nop
inc
enter
jnp
test
inc
push
or
sbb
mov
jg
rolb
imul
mov
lea
mov
push
inc
lock
test
insb
in
mov
add
mov
stos
adc
push
ss
and
inc
push
pusha
push
in
add
fnstsw
out
addl
repz
pop
xor
stc
cmp
add
shlb
dec
xchg
mov
loope
xchg
inc
fadds
xor
cmpsb
sub
lret
lods
out
mov
dec
mov
jecxz
inc
mov
int
sbb
popa
sub
fldenv
fbstp
jmp
imul
ret
dec
rolb
jbe
pop
mov
mov
pop
inc
adcb
test
shll
hlt
pop
cmc
mov
add
sub
addr16
lods
loopne
sub
hlt
xor
add
cmpsl
cmp
lahf
addb
shr
icebp
sbb
subb
xchg
mov
mov
mov
outsl
shrb
pop
jo
sbb
pop
cmpl
xchg
test
xorb
stc
jl
ret
xor
mov
push
pop
mov
xchg
and
loop
sub
test
cld
mov
mov
mov
cmp
adc
push
jne
in
shlb
dec
inc
or
adc
jl
mov
jne
dec
add
cli
mov
aas
or
lds
into
mov
xor
adc
jecxz
jg
loop
xor
jae
cmp
gs
repnz
fists
pop
xlat
adc
ret
inc
push
pop
mov
imul
out
adc
rclb
mov
fildll
movsl
push
add
dec
pop
mov
repnz
xchg
rcr
icebp
lahf
adc
mov
and
sbb
js
jmp
and
mov
xor
inc
leave
sbb
negl
jmp
mov
sbb
out
xchg
popa
popa
push
adc
je
int
adc
jne
test
cmp
sbb
jb
pop
pop
mov
xchg
and
and
xor
push
mov
stos
loope
mov
daa
or
bound
test
sbb
sti
cwtl
std
ljmp
or
cmp
jne
jl
dec
or
mov
sahf
mov
push
dec
jb
inc
jno
addl
mov
orb
adc
jne
das
scas
add
dec
jecxz
cli
hlt
mov
jne
lds
or
das
push
stc
jnp
push
or
push
popa
sub
rol
arpl
adc
das
add
imul
inc
xchg
sbb
addl
fisttpl
push
add
out
fimuls
mul
jns
bound
or
shll
int3
sarl
jne
cmp
mov
bound
leave
popf
sbb
int3
addb
lret
iret
pop
gs
add
leave
xor
inc
jne
mov
mov
into
hlt
sahf
push
dec
aas
packuswb
sarl
clc
shrl
dec
addb
aaa
push
xor
and
ss
je
cld
cmp
ja
add
daa
xchg
sub
adc
fldcw
inc
mov
enter
js
stc
adc
pop
into
jecxz
or
xchg
inc
sub
push
pusha
mov
jbe
mov
into
or
popa
pop
rorb
call
xchg
or
cmc
cmpsb
inc
es
int3
in
scas
jb
test
clc
das
and
push
mov
adc
mov
pop
popf
or
imul
pushf
and
stos
sbb
cwtl
mov
aam
stos
push
icebp
int3
loopne
dec
xchg
push
pusha
push
fadd
int3
xchg
xchg
add
cltd
inc
sub
and
daa
inc
adc
shlb
subl
aas
pusha
stos
xlat
in
lret
or
mov
lea
pop
arpl
inc
xor
andb
cltd
cs
hlt
lods
cs
movsb
nop
sbb
jbe
sub
les
mov
xor
cmp
jbe
loop
add
xor
xchg
mov
cmpsl
pop
jne
retw
add
inc
mov
cmc
dec
ss
test
into
scas
inc
loop
pop
jp
or
push
test
loope
xchg
sbb
aaa
add
fnstenv
ljmp
das
stc
push
jb
sub
jp
pop
cmc
cltd
inc
or
xchg
icebp
popa
dec
gs
loop
push
or
pop
in
cmpsb
lock
xchg
ss
es
addr16
pop
xchg
or
adc
jmp
lds
je
ret
pop
mov
clc
fs
in
mov
rolb
xor
test
mov
sbb
pop
dec
xor
inc
cmpsb
loope
xchg
add
pop
scas
cmpsl
or
xor
movsl
scas
je
jbe
jmp
hlt
dec
add
or
int3
addr16
out
inc
lahf
es
mov
and
test
jmp
into
scas
cmp
nop
push
xchg
adc
std
addl
adc
mov
xchg
ds
pop
jne
xchg
pop
cld
stos
iret
mov
push
nop
imul
mov
adc
jns
or
mov
xor
xchg
andl
mov
and
setne
add
in
into
cwtl
cmpsl
jl
push
or
mov
sahf
les
rcll
scas
hlt
movsb
stos
jne
out
sub
pop
xchg
adc
test
lods
mov
jnp
mov
sbb
add
pop
xchg
mov
mov
xchg
outsb
adcl
lods
xchg
xchg
stos
sbb
insb
roll
test
scas
add
inc
mov
pusha
mov
icebp
clc
cmpsl
lret
arpl
mov
xlat
loop
sub
imul
hlt
pop
xchg
inc
xor
pop
mov
call
dec
pusha
rolb
mov
loope
sbb
sub
insl
fsqrt
xor
test
sub
add
xorb
push
ret
and
arpl
in
sub
gs
mov
outsb
rorl
sub
inc
mov
xor
sub
test
fdivrs
stos
pushf
cmp
popf
xor
pusha
movsl
ds
cld
clc
movsl
jb
popf
mov
scas
jge
cwtl
xchg
jne
jne
movsl
jo
add
sbb
jns
xchg
jns
mov
sub
loopne
jne
int
pop
lea
loopne
ds
sbb
dec
mov
out
sahf
jge
xchg
imul
pop
jl
mov
jmp
jno
outsl
xchg
add
cltd
xchg
push
stos
mov
cmc
and
mov
pop
cltd
jl
mov
icebp
mov
in
cwtl
pushf
adc
pushf
and
test
push
insl
mov
gs
xchg
xlat
das
cmpsb
sti
sahf
mov
je
xor
nop
add
aam
loopne
pop
mov
imul
or
adc
pop
mov
lock
rcrb
cld
shll
mov
jp
pop
adc
jne
hlt
xchg
daa
or
shrb
cmp
mov
sbb
push
subb
int3
or
pop
out
mov
jnp
jle
jmp
pop
nop
fmul
adc
fiadds
push
pushf
xchg
cmpsl
fbstp
adc
jnp
push
pop
xor
repnz
and
mov
negl
xchg
jnp
sbb
pop
int
loope
mov
push
push
adcb
dec
sbb
lods
into
adc
call
sbb
shll
mov
loopne
mov
cwtl
add
fdivl
cmc
sbb
les
dec
das
lret
pop
cwtl
andb
and
pop
add
int
sub
imul
inc
scas
sub
jae
roll
pushf
scas
clc
inc
jno
jg
mov
jmp
out
div
push
pusha
adc
icebp
movsl
bound
int3
mov
shrb
fisubs
nop
stos
mov
cmp
mov
leave
or
push
seto
xchg
dec
test
orb
mov
hlt
xchg
mov
adc
enter
mov
aas
mulb
mov
lret
hlt
loopne
dec
insb
or
mov
stos
inc
leave
gs
sarl
jge
dec
mov
push
fs
mov
mov
pop
insl
addr16
push
into
divb
lods
repz
xor
jle
dec
push
ret
or
loope
jl
cmp
xor
push
xchg
bound
jnp
in
mov
mov
inc
xchg
lods
cmpsb
mov
mov
test
sbb
cmpsl
fstps
inc
mov
inc
iret
aas
insb
cmp
jne
cs
popa
lret
inc
pop
imul
sub
mov
add
out
cmp
stos
test
mov
cltd
pusha
inc
scas
cmc
lret
stos
jl
or
jge
cld
sbbl
mov
mov
aad
add
jmp
xor
lea
xor
mov
in
sbb
mov
ficoms
shr
or
subl
ret
adc
sahf
xchg
in
mov
test
loop
test
xor
aam
pop
ret
or
push
cmp
add
and
cmc
es
xlat
mov
mov
loop
fcomi
mov
mov
ret
fstps
test
popa
inc
sti
push
and
mov
rolb
popa
add
popa
push
std
xchg
nop
jo
out
std
int3
push
lahf
fdiv
pop
mov
mov
adc
movsl
jb
aas
fwait
adc
push
xor
es
ret
cs
leave
cmp
movsl
dec
pop
xlat
out
ret
int3
clc
int3
or
mov
fisttps
sbb
sti
imul
adc
inc
mov
add
loopne
jne
aad
stc
jp
push
iret
xor
mov
push
out
add
pop
cwtl
movsb
mov
or
pop
inc
aam
xchg
mov
xor
sbb
rcrb
into
mov
movsl
pushf
mov
xchg
jle
mov
dec
notl
shl
xor
xorl
inc
sarl
mov
sub
les
and
pop
test
decl
jae
xchg
add
pop
jg
jne
lss
sub
rcl
pop
dec
rcll
and
call
jmp
out
adc
jnp
xchg
std
mov
hlt
cmc
leave
into
pop
add
or
cs
mov
mov
out
jns
sbb
ljmp
test
jbe
sub
fdivrl
mov
std
es
add
adc
test
mov
out
jmp
xchg
jmp
popf
mov
ret
pop
testl
dec
lcall
ret
arpl
aad
test
lcall
les
std
fldcw
jl
fnstsw
or
mov
cld
mov
pop
inc
inc
push
push
dec
add
out
shll
mov
popa
sbb
ret
nop
ror
pop
xlat
movsb
xchg
notl
testb
fistpll
pop
mov
sti
mov
push
fidivl
sahf
jmp
lods
dec
inc
addb
or
add
cmp
sbb
clc
test
das
xchg
add
repnz
int
jmp
jmp
mov
mov
or
negb
shlb
repz
or
in
mov
hlt
xchg
push
xchg
leave
inc
pop
pusha
clc
xchg
mov
hlt
aaa
out
clc
xchg
movsl
icebp
rorb
mov
and
xchg
add
jns
sbb
hlt
mov
push
fidivrs
ret
lods
loopne
adc
aam
lret
add
jmp
jp
cmpsb
sub
xchg
sbb
inc
mov
and
mov
pop
movsb
xchg
mov
inc
sbb
stos
sbb
roll
rolb
dec
cmpl
inc
cmp
data16
xchg
inc
loopne
addb
push
sbb
jg
adc
int
in
loope
and
in
mov
movsb
sbbb
adc
adc
inc
xchg
mov
or
mov
add
ret
mov
icebp
popa
lods
jecxz
xchg
mov
mov
mov
sub
jge
pop
loop
loope
lcall
inc
jns
inc
mov
jae
xchg
jbe
mov
test
jae
incb
daa
mov
cmpb
gs
sub
in
lock
adc
mov
cmpb
inc
pushf
mov
adc
or
cmp
push
ds
loopne
or
sub
imul
shlb
test
test
dec
loopne
jg
in
inc
jge
mov
xor
mov
pop
pop
add
aaa
jne
mov
dec
lods
sub
xchg
cld
sbb
leave
es
pushl
sub
or
gs
sub
sbb
xchg
out
fistps
ss
bound
jae
ss
xor
lahf
pop
inc
pop
into
jmp
testl
inc
cmc
mov
or
addr16
sbb
aaa
jp
push
push
aam
gs
out
int3
adc
mov
push
imul
mov
cmp
imul
sub
lds
pop
or
sbb
scas
inc
pop
mov
and
mov
mov
xchg
cmp
mov
sub
pop
mov
cmp
rcr
test
dec
icebp
or
or
je
push
std
pop
sti
iret
and
in
sub
cmc
jae
or
notl
xchg
mov
loop
shl
mov
inc
arpl
lock
pop
cwtl
pushf
ljmp
and
xchg
lods
xchg
cmpsl
jecxz
jle
dec
hlt
or
add
sub
hlt
mov
and
test
push
jge
mov
aam
scas
xor
dec
call
dec
sbb
add
mov
push
mov
xor
mov
sbb
les
xchg
mov
mov
xor
testl
and
pop
mov
xchg
xor
sub
fucompp
inc
mov
xchg
movhps
push
mov
adc
xchg
in
ficomps
cmc
add
jno
mov
or
push
mov
movsb
pushf
pop
jge
or
sbb
adc
ret
pushf
outsl
movsl
popa
dec
inc
cli
xchg
add
mov
dec
addb
adc
adc
sbb
mov
sub
in
mov
pop
aad
mov
popa
into
push
out
add
pop
lods
outsb
pusha
mov
mov
out
pop
int
cmpl
inc
dec
mov
sub
mov
int3
mov
daa
jnp
xchg
and
std
loop
adc
mov
jne
mov
loopne
addr16
stc
fdivrs
sbb
pop
mov
rcrl
add
lds
fldenv
std
loope
out
sub
pop
stos
ds
xor
xchg
jns
gs
xchg
fcmovnbe
mov
int3
inc
mov
add
mov
aas
jne
xchg
add
inc
enter
and
sti
pop
stos
mov
cmp
ss
xchg
stos
iret
fs
decl
shl
hlt
adc
pop
push
jmp
inc
jnp
insb
rcll
mov
mov
shlb
mov
add
xchg
push
gs
repnz
jnp
aaa
fndisi(8087
shlb
andb
push
sub
and
call
mov
data16
sub
or
test
shr
call
mov
out
pop
xchg
inc
lret
lods
stos
adc
push
hlt
arpl
jnp
scas
inc
leave
in
inc
pushf
jne
test
pop
pop
and
fcom
jne
pop
sbb
inc
in
jge
push
add
mov
jp
bound
jg
jmp
hlt
sbb
and
dec
arpl
in
xchg
jge
push
dec
std
xchg
lret
enter
mov
aas
push
in
jne
xchg
xchg
add
movsb
sub
cltd
shrl
mov
xchg
dec
loope
loope
mov
dec
push
out
mov
outsl
jne
lods
xchg
les
loope
mov
xchg
lods
test
fimuls
adc
cwtl
insl
jne
fxtract
add
sub
cmpsl
scas
xchg
in
mov
push
addb
ja
imul
dec
scas
xchg
lods
inc
les
aas
mov
sub
or
sub
sarb
sbb
mov
insb
push
lock
add
je
sar
lahf
outsl
push
mov
pop
mov
movsb
add
pop
stos
inc
jne
cld
call
lods
jge
add
add
repnz
mov
movb
inc
fs
std
fwait
jbe
and
xchg
jno
mov
add
sub
and
leave
fisubrs
xor
mov
sub
pop
into
xor
pop
sbb
popa
test
cmp
scas
aam
mov
xchg
nop
cltd
jne
xor
mov
test
sbb
sahf
dec
sub
mov
and
cmp
push
test
add
je
xchg
and
sahf
enter
in
inc
adc
lret
arpl
neg
dec
repz
sub
inc
addb
iret
mov
std
popf
call
ss
popa
cmp
cmpl
fnsave
cmpsb
inc
or
xchg
mov
mov
pop
mul
add
test
or
xchg
adc
scas
pushf
in
add
mov
mov
inc
jle
pop
popf
dec
dec
mov
push
sti
push
int
pop
mov
push
mov
fsubrs
inc
mov
push
fcmovb
inc
loope
mov
inc
enter
inc
dec
pop
ror
adc
push
mov
xchg
es
cmc
les
add
das
push
or
lahf
std
xchg
mov
rorb
cs
sub
shll
out
pushf
sbb
xchg
sahf
mov
pusha
add
add
out
fildl
xchg
pop
dec
cmp
or
stos
mov
test
sbb
push
push
hlt
lea
ret
sub
mov
sbbb
repz
in
in
inc
ret
push
mov
xchg
mov
roll
mov
scas
loope
sub
aad
dec
movsb
fwait
fwait
jmp
jle
fdivrs
sub
mov
or
mov
lds
jb
faddl
test
sbb
xchg
push
xorl
stos
out
shlb
shll
les
jp
sub
shld
mov
push
and
mov
movsl
or
and
and
enter
xchg
add
lods
lret
inc
pop
cmp
mov
loope
inc
pop
push
mov
sahf
nop
jmp
int3
orb
or
adc
pushf
mov
pop
mov
jae
xor
xor
pop
mov
jp
adc
addr16
out
cli
pop
xchg
incb
daa
jmp
cltd
adc
sahf
mov
mov
inc
jne
add
adc
out
or
or
fisubrs
jle
ja
repz
movsl
xor
dec
loopne
and
mov
movsl
pushf
cmc
loopne
inc
test
jecxz
pop
je
cmc
mov
andl
in
clc
cmpsl
mov
jb
daa
sub
aam
push
push
jne
mov
xchg
lret
mov
hlt
push
movsl
popf
fxch
or
sbb
pusha
mov
push
fwait
mov
cli
std
jne
aam
leave
hlt
xor
sub
xlat
dec
fidivs
repz
dec
pop
clc
scas
sbb
pop
aam
std
adc
mov
je
shrl
mov
movb
shrl
test
cwtl
jae
inc
or
fxch
movsl
lret
add
lcall
repnz
push
add
in
es
lods
inc
shlb
mov
add
xchg
mov
int3
dec
mov
or
push
cld
adc
pusha
mov
xchg
mov
mov
mov
mov
add
pop
xchg
das
or
movsb
push
xchg
xor
push
jp
mov
pop
xchg
sbb
jmp
adc
in
mov
push
xor
bsr
das
pop
fsubl
xorb
xchg
add
mov
push
xor
jl
in
jne
shl
js
mov
jns
dec
sub
fimuls
ret
mov
ja
mov
hlt
sbb
xchg
sahf
pushf
cmpsb
add
jge
xor
cld
mov
mov
cmp
mov
loope
test
mov
aas
insl
cltd
pop
dec
xchg
mov
mov
sbb
cli
push
xchg
sarl
jne
lods
or
add
es
mov
mov
add
leave
mov
cmpsl
pop
and
jne
mov
pusha
add
push
movsb
clc
fmull
dec
or
cltd
dec
cmp
or
push
and
aas
gs
test
push
int3
testb
sbb
mov
jns
pop
lea
les
xorb
enter
dec
loop
inc
or
movsl
inc
cld
int3
lods
hlt
push
movsl
fbld
fdivrl
dec
jne
sahf
cmp
inc
out
dec
lods
push
push
jae
push
clc
cltd
roll
movl
jmp
pop
push
dec
sbb
shl
cmpsl
mov
add
les
jne
arpl
push
not
jbe
jb
rolb
mov
dec
and
mov
or
popf
dec
jmp
das
adc
cmpsb
popf
movsl
xor
lds
inc
arpl
mul
or
data16
fs
jmp
js
imul
add
push
mov
pusha
ficompl
dec
and
stos
mov
outsl
or
mov
or
mov
into
negl
mov
mov
into
arpl
call
sbb
jbe
jmp
cs
push
aas
cmp
add
loope
or
pop
jmp
and
jbe
sahf
inc
test
mov
sbb
rcrl
not
hlt
lods
xor
out
xchg
outsl
fst
add
sarl
xor
jns
adc
or
or
test
push
test
in
rorb
dec
push
and
movl
cmp
cmpsb
ds
call
mov
mov
sub
sub
mov
in
dec
mov
and
inc
inc
sub
ljmp
mov
xchg
inc
scas
push
cltd
jge
mov
xor
ljmp
mov
ret
cmp
mov
sub
sub
lock
movsl
pop
push
sbb
cmp
nop
inc
mov
imul
sbb
sub
in
xchg
lret
mov
pop
jnp
sub
lret
loopne
xchg
rcr
movsl
mov
fcmovu
subl
in
ret
pop
mov
test
push
push
push
in
mov
mov
pop
add
sub
dec
popf
push
xor
mov
adc
mov
push
out
mov
mov
shl
shll
rcl
out
shlb
sub
push
cli
loopne
dec
sahf
fnstenv
cli
mov
cmpsb
pop
pop
outsl
mov
shlb
push
lods
add
push
das
repnz
les
test
jno
pop
cmp
out
pop
pop
mov
push
sub
js
pushf
sub
push
push
xor
sbb
lret
xchg
pop
pop
sti
jp
lret
mov
test
mov
add
xchg
mov
cmc
aam
movsl
aad
in
push
iret
jno
ficomps
push
sbb
cmpsl
adc
pop
fbld
cwtl
icebp
pop
test
adc
mov
cltd
inc
sti
sub
dec
jae
cmp
add
or
mov
hlt
mov
jno
arpl
mov
xchg
mov
cmpsl
aas
inc
inc
adcl
pop
repz
fistpl
ds
adcb
pop
movsb
sub
lret
jbe
aaa
pusha
int3
sub
sahf
add
jecxz
fistpll
movsb
out
mov
or
pop
adc
enter
xor
adc
repnz
push
stc
inc
movsl
aam
es
fisubl
xlat
add
hlt
lahf
test
pop
sub
adc
add
sbb
cmc
jl
mov
in
hlt
pop
cltd
dec
ret
pop
xchg
adc
stos
mov
test
out
cwtl
add
aam
leave
cmpsb
adc
aam
push
xor
fdivs
bnd
imul
pop
pop
dec
and
test
rorl
shrl
jbe
hlt
xor
jne
mov
js
int3
inc
mov
add
aas
adc
jns
jbe
pop
shrl
aas
xchg
dec
test
push
int3
push
movsb
into
add
xlat
cld
arpl
jns
xorl
mov
dec
lret
inc
clc
into
mov
push
rcll
sub
fwait
sub
cmp
jmp
bound
fildl
dec
mov
hlt
mov
cmpsb
shr
fildll
pop
jl
sbb
sub
lock
mov
nop
rorb
int3
sub
push
push
sub
mov
adc
or
ret
jmp
add
jo
inc
ret
idiv
gs
mov
add
int
jg
incl
lods
cmc
clc
sub
fucomip
inc
push
or
mov
pusha
fmull
mov
or
xchg
pop
mov
loope
das
sub
insb
mov
cld
repnz
fcoml
std
xchg
push
mov
cmp
ss
and
xchg
xchg
cs
shll
inc
dec
jno
repnz
pop
lea
push
mov
pushf
mov
test
sbb
jp
sub
cwtl
or
lods
xchg
inc
nop
imul
sbb
add
jns
mov
loopne
dec
loopne
iret
cmc
cmp
xor
int3
adc
push
push
test
int
in
jge
rcll
and
js
mov
jo
jecxz
nop
add
add
mov
icebp
fcoml
pop
xchg
add
testb
aad
xchg
sub
nop
shl
pop
cmp
jge
lret
orl
mov
cmp
mov
lods
cmp
sub
mov
enter
enter
into
fcoms
ja
adc
decl
movsb
cmpsb
outsl
lahf
fistps
pop
leave
jl
test
fstpl
sub
rcrl
jg
and
mov
lret
xchg
sbb
mov
push
xor
ss
aad
pop
sbb
ficomps
inc
mov
test
inc
push
in
fmull
xor
seto
or
mov
lcall
mov
sub
pop
loopne
sub
in
jae
jnp
mov
mov
or
mov
fstpt
push
mov
jnp
int3
out
inc
xchg
sbb
cmpsb
icebp
sub
inc
dec
test
sub
fldl
pop
dec
cmp
mov
call
iret
pop
orl
jecxz
xchg
stc
and
gs
insb
pop
push
into
orl
sub
or
add
test
sbb
rorl
cmpsb
mov
jnp
xor
push
push
mov
or
push
xorb
nop
ficomps
mov
or
inc
fdivs
mov
nop
pusha
add
lock
aas
outsl
shl
or
push
cmc
mov
js
cld
or
cmpsb
xchg
std
pop
mov
inc
outsl
test
fcmovb
ss
xchg
mov
test
test
and
mov
jo
jne
inc
imul
aaa
ds
mov
test
fildl
or
xchg
leave
lcall
and
adc
out
inc
hlt
mov
mov
mov
cmp
adc
and
leave
popa
shll
jecxz
pop
mov
iret
test
lret
pop
rclb
mov
mov
sbb
xchg
retw
add
sub
mov
lods
lcall
dec
movsl
sbbb
test
loopne
lret
add
pop
out
loope
sub
test
dec
cwtl
das
inc
cmpsl
push
insl
in
inc
and
orl
mov
jnp
add
test
jecxz
mov
cmp
and
in
pop
fdivl
roll
movsb
outsb
flds
out
imul
jo
xchg
fmul
addr16
xchg
mov
shrb
pop
mov
fnsave
stos
test
mov
hlt
push
das
xchg
shlb
xlat
outsb
fcompl
imul
mov
inc
adcb
gs
pop
sub
mov
jl
notl
fs
or
test
inc
xchg
gs
in
loope
aam
rorl
and
in
test
inc
sbb
push
pop
xor
pop
mov
pop
mov
pop
cmpb
sub
mov
add
sub
mov
xchg
cmp
pusha
sbb
and
ss
push
in
adc
cmp
pusha
pop
and
repz
call
adcb
in
add
pop
xchg
mov
outsl
out
push
jns
pop
test
xchg
xorb
enter
in
cltd
push
cmpb
call
mov
imul
shrl
mov
pop
nop
pop
scas
lock
pop
imul
into
adc
movsl
mov
add
xchg
ror
inc
lret
xorb
frstor
popa
lods
hlt
push
dec
sub
jb
call
inc
or
or
orb
fldcw
push
pop
jae
mov
adc
inc
dec
mov
fists
pusha
mov
es
sbb
lock
insb
loop
jae
scas
ljmp
testb
sbb
imulb
cmc
pop
in
jecxz
cwtl
or
icebp
push
inc
mov
gs
ret
pop
add
pop
inc
pop
daa
mov
arpl
jb
add
dec
int3
lods
sti
adcl
out
cmpsl
lret
xchg
ljmp
loopne
add
xchg
fst
cmpsl
loope
enter
loope
ljmp
mov
enter
lret
inc
repz
adc
mov
rcll
insb
push
inc
jg
push
xor
xchg
mov
mov
cld
cmp
inc
dec
imul
add
imul
jle
cld
ret
jo
lods
insb
adc
stos
loopne
jmp
inc
mov
mov
sub
jno
lahf
mov
sbb
push
into
cmpsb
xchg
out
in
jno
popa
ljmp
sub
dec
out
lds
or
pop
push
pop
jne
imul
xorl
outsl
fsubl
test
mov
cwtl
cld
jne
adc
in
stos
cmc
xor
addb
call
lret
loopne
cmc
mull
and
data16
adcb
mov
mov
subl
mov
aad
mov
cmp
into
mov
sbbl
fcomi
adcl
add
fsubrp
cmp
sub
fstl
add
mov
inc
push
leave
imul
pop
and
adc
shrl
call
test
pushf
add
imul
mov
mov
sub
inc
popa
enter
movsb
jmp
test
adc
add
cmp
lods
fcomip
pop
icebp
jge
pop
or
jne
fsubrs
lret
into
mov
and
icebp
pop
mov
jns
loopne
mov
pusha
mov
outsb
mov
pop
cltd
add
mov
shlb
dec
aas
fsubr
inc
jno
je
push
or
data16
popf
push
hlt
pop
sbb
ficompl
add
adc
rorb
lock
pop
shll
jns
mov
movsb
sub
aam
stc
mov
cmpxchg
test
push
mov
icebp
nop
scas
fstps
dec
imul
call
jmp
cli
dec
and
cwtl
xor
hlt
lahf
dec
cld
insb
es
daa
loop
add
sahf
mov
lret
ss
sub
fs
test
dec
outsb
icebp
jmp
pop
add
xchg
inc
dec
gs
add
neg
or
or
sbb
mov
add
ficoml
mov
movsl
ucomiss
mov
cmpsl
mov
shrb
pop
mov
adc
call
fst
in
jg
and
fsubp
dec
sub
pop
inc
or
sub
mov
cmp
jle
cmp
dec
ja
mov
adc
or
push
pop
mov
push
cmp
stos
cmp
cmpsl
xchg
mov
sti
push
xor
data16
xchg
movsb
mov
jne
sbb
es
adc
xchg
sbbb
fdivrs
iret
nop
addl
jnp
dec
movsb
bnd
lret
icebp
test
test
cwtl
pop
test
pcmpeqw
pop
ret
xchg
data16
or
out
sbb
sub
jbe
mov
jnp
mov
test
aad
sub
and
jbe
test
adc
cli
div
fs
subb
clc
mov
adc
mov
jns
rcr
xchg
inc
and
sub
mov
inc
scas
add
ljmp
in
jne
rclb
das
into
mov
enter
adc
cmp
mov
dec
es
stos
add
xchg
mov
mov
xchg
or
popf
lea
rorl
subl
inc
inc
insl
rclb
popf
inc
or
adc
into
pop
xchg
or
loop
test
js
test
add
sbb
ret
js
push
cmc
fidivrs
xor
pop
roll
xor
push
leave
push
mov
rolb
xchg
mov
xlat
mov
gs
push
adc
stc
adc
jno
add
movsl
inc
test
or
test
adc
stos
sti
enter
adc
sub
stc
stos
mov
stc
push
fcmovb
hlt
mov
test
sarb
nop
mov
xchg
mov
xlat
sbb
pushf
adc
jmp
push
repz
xor
movsl
mov
dec
or
add
adc
nop
sub
push
push
dec
mov
jle
pop
or
imul
mov
jg
sbb
insl
clc
jbe
cmpsl
add
fcomps
push
jbe
sub
cmpsb
push
pop
jmp
fnstcw
sbb
movsb
sub
idivl
jmp
mov
inc
dec
jns
sarb
push
push
sub
jmp
mov
aad
sbb
add
rcr
add
ss
icebp
sub
test
stos
xchg
stos
hlt
pop
xchg
dec
inc
cmp
push
test
dec
mov
fsubl
jl
push
mov
cmp
pop
pop
push
and
lds
jae
mov
inc
loop
aam
jmp
sarb
out
mov
push
sahf
test
xor
xchg
popf
or
outsl
bound
sti
inc
hlt
sub
pushl
jne
loope
sar
fsubl
mov
jne
pop
fcom
add
cltd
es
out
cmp
js
dec
pop
pop
cmp
gs
ret
flds
dec
jb
leave
test
cld
or
push
les
aad
mov
rcr
lods
testb
loope
imul
adc
hlt
mov
push
adc
add
sub
sbb
or
out
addr16
call
nop
lock
test
sbb
sub
mov
mov
add
filds
movsl
rcrb
mov
cmp
in
popa
push
data16
rorl
inc
dec
out
mov
fbld
sub
out
jo
xorb
push
fildl
push
subb
push
add
mov
fimull
in
jl
into
pop
mov
add
xor
push
ret
dec
sub
inc
jl
pop
sub
xchg
mulb
mov
imul
push
push
add
ss
js
pop
jb
sub
or
pop
push
cmp
divl
je
mov
mov
xchg
in
push
pop
rol
add
add
scas
pop
mov
scas
fbld
mov
dec
mov
insb
cli
mov
xchg
jo
sbb
cmp
cmp
cld
mov
orb
add
jne
and
jns
cld
push
pusha
mov
jne
or
rcrl
stos
fcompl
fcomps
xor
lods
xchg
enter
sti
ljmp
cmp
inc
cmp
cwtl
fdivs
hlt
pushf
jbe
lcall
mov
in
mov
xchg
std
fnstsw
call
dec
gs
les
or
fdivrl
push
cli
and
mov
mov
sahf
outsl
xor
loopne
in
out
addb
lret
sub
cmp
movsb
addr16
aas
movsl
jle
xchg
cmpb
scas
dec
cltd
adcb
pop
cmpsw
jo
icebp
fcomps
dec
sbb
xchg
adc
std
int3
xlat
aad
in
xor
sbb
mov
stos
cmp
es
int
push
jbe
sub
xchg
add
pop
dec
mov
out
std
into
fmull
xchg
jnp
add
mov
mov
fisttpll
mov
call
jo
test
adc
pop
pop
jmp
and
mov
inc
stos
imul
mov
test
push
outsl
nop
and
repnz
leave
mov
xor
insb
jo
aam
jno
add
jns
dec
test
jecxz
movsl
mov
mov
mov
mov
add
rcrl
mov
sahf
mov
movsl
mov
mov
dec
sub
sub
sar
mov
xchg
or
sub
fcomps
out
inc
pop
flds
add
sub
adc
test
sub
hlt
in
add
cwtl
pop
lcall
outsb
ror
mov
pop
shll
add
jnp
mov
aam
or
jmp
sbb
arpl
cwtl
mov
js
adc
pusha
loop
daa
mov
arpl
mov
or
adc
mov
iret
loopne
gs
and
or
loopne
lock
cld
push
adc
cmp
lods
add
fsubrl
loope
insl
inc
ret
nop
subl
push
xchg
shlb
mov
adc
cmpl
pop
stos
or
xchg
gs
lahf
push
or
sub
adc
lock
inc
lret
add
add
hlt
mov
jle
fldl
jb
test
push
test
cs
xor
adc
push
add
dec
xorb
and
xlat
mov
int3
out
lock
into
adc
xorb
xor
xorb
insb
leave
jne
or
sub
test
xor
add
mov
mov
mov
and
or
sub
pushf
fwait
in
in
sahf
sub
aam
xchg
push
in
lret
hlt
nop
das
int3
dec
mov
jecxz
daa
int
push
sti
insb
int3
ss
inc
inc
or
loopne
shr
enter
mov
fprem
fdivrl
aas
js
mov
push
sbb
pushf
dec
movsb
pop
xchg
call
push
and
fnstcw
add
lock
and
ss
mov
jp
leave
jne
fsubrs
imul
xor
cmpsb
or
out
enter
sub
xchg
stc
jbe
mov
aas
jp,pn
add
xor
frstor
mov
ret
mov
je
dec
push
out
sti
insb
xor
ljmp
aaa
movsb
inc
inc
jno
mov
add
cmp
in
int
scas
lds
xchg
dec
or
sub
add
mov
pop
popa
inc
negl
inc
adc
mov
sbb
jle
mov
enter
mov
sbb
or
push
mov
inc
fnstsw
jmp
or
jbe
sub
xchg
in
out
hlt
cs
nop
ret
pop
adcl
xchg
and
cltd
jne
jle
push
daa
test
mov
hlt
mov
pushf
stos
adc
add
lock
dec
xchg
neg
adc
outsb
mov
test
in
sahf
loopne
jno
xchg
int3
lods
inc
inc
sbb
mov
mov
add
dec
in
push
fadd
inc
mov
cld
mov
das
adc
mov
adc
cmpsb
sbb
sti
movl
sbb
inc
ror
or
mov
and
inc
pop
and
pop
jae
rcrl
inc
mov
scas
in
gs
mov
cmpsb
pushf
fcoms
xor
call
lods
inc
jmp
sub
shr
dec
sub
loopne
or
xorl
dec
stos
daa
pushf
xor
cli
sarb
add
subb
movsl
dec
xor
xor
dec
lret
cmc
into
jae
add
jne
insb
xchg
pop
push
or
mov
shrl
mov
out
cmpsl
stc
pop
xor
lds
call
shll
lcall
jbe
pop
mov
popf
pushf
adc
mov
inc
enter
gs
je
shll
jmp
cmp
dec
leave
or
push
inc
stos
insb
jne
nop
lahf
cld
lods
inc
loope
pop
inc
repz
inc
pop
int3
inc
add
xor
adc
inc
push
hlt
sti
int
movsl
and
sub
loop
sub
ret
sub
add
addl
test
sub
inc
pop
or
in
jno
push
aam
shll
outsl
out
pop
mov
sarb
xorl
push
adc
enter
or
adc
gs
int
adc
xor
ljmp
pop
push
inc
in
inc
lcall
cmp
xchg
movsl
xchg
hlt
test
lods
mov
add
jg
cmp
jg
hlt
xor
sti
mov
pop
mov
adc
add
adc
push
jnp
jecxz
add
cmp
xchg
outsl
xchg
sbb
leave
push
pop
mov
xchg
mov
add
mov
sub
fsubl
cmc
cwtl
cmp
xchg
mov
rorl
add
das
pop
or
xchg
hlt
sar
mov
and
test
rolb
dec
mov
dec
jge
loop
enter
dec
xlat
lock
or
xchg
dec
jb
inc
mov
mov
or
sbb
sbb
ds
jmp
dec
test
mov
out
mov
das
xchg
fmull
rcrb
mov
sbb
mov
inc
sti
hlt
or
ds
sbbb
inc
sub
xchg
sub
jmp
rolb
mov
dec
pop
xchg
jmp
sbb
cli
jmp
nop
cld
nop
sti
mov
or
aas
es
jne
imul
aas
pop
popf
ja
scas
cltd
cwtl
shlb
out
sbb
push
fs
push
push
popa
jp
mov
stos
aas
int
into
lods
faddl
out
gs
daa
inc
cmc
xchg
mov
test
outsb
hlt
imul
mov
mov
out
fmulp
movsb
pop
mov
jb
add
mov
or
test
loop
xorb
jmp
fcomps
mov
ss
fdivs
or
leave
into
insl
mov
les
pop
cltd
lahf
jg
leave
pop
test
das
jne
stc
imull
dec
imul
gs
inc
sbbl
sbb
mov
add
xchg
dec
aad
mov
mov
hlt
dec
xor
in
shlb
jle
call
les
mov
movsl
fcmovnu
inc
scas
adc
dec
cltd
test
arpl
addl
pop
mov
push
imul
adc
dec
nop
inc
jo
inc
sub
xchg
pop
out
sbb
orl
jg
add
gs
mulb
xchg
adc
or
push
fidivl
add
mov
jbe
test
sbb
roll
cmpsl
in
and
stc
sub
roll
add
jmp
ss
popf
add
addl
mov
ja
xor
jno
or
and
xchg
lock
and
es
movsb
repnz
sbbb
xor
aas
mov
mov
mov
push
mov
xorl
push
cmp
pop
or
aad
test
insb
mov
or
xorb
int
orb
mov
lds
outsb
pushf
mov
push
mov
les
lods
jecxz
lcall
out
mov
fbstp
fcompl
mov
sub
ds
lods
pusha
mov
mov
cmp
scas
adc
xchg
cwtl
sub
add
rorb
clc
pushf
fs
std
gs
xchg
ret
mov
or
jl
imul
and
xor
mov
idivb
mov
gs
enter
push
pop
xchg
or
fsubs
nop
or
xorb
and
push
or
scas
lcall
add
fwait
pushf
xor
adc
sub
in
test
leave
nop
xchg
or
enter
ds
mov
rolb
xchg
push
push
enterw
mov
test
je
call
dec
cs
mov
ret
add
jmp
sub
in
xchg
les
rolb
hlt
pop
mov
ljmp
nop
inc
xchg
adc
dec
out
mov
in
xor
rcll
mov
pop
or
mov
inc
xor
lods
inc
insl
or
lods
pop
mov
sub
xlat
sbb
or
enter
fcmove
or
xor
std
jp
xchg
mov
gs
and
xchg
ret
inc
shlb
rcll
mov
je
and
or
movsb
jno
add
arpl
push
es
std
movsb
mov
jns
ror
lret
fisubrl
jle
movsb
mov
in
std
xor
push
xor
addl
js
xchg
enter
sub
jecxz
cld
cld
sahf
add
sti
xchg
mov
cwtl
stc
xchg
daa
add
adc
sbb
mov
push
mov
sbb
add
call
pop
mov
or
lahf
push
jno
sub
mov
inc
divl
cmc
add
adc
mov
into
faddl
rcll
pop
pop
mov
mov
jmp
jle
or
andb
mov
pushf
scas
rolb
push
inc
insb
mov
mov
adc
lods
mov
mov
dec
pushf
add
sbb
push
pop
ds
lahf
scas
scas
popa
inc
sbb
shlb
lea
mov
bound
mov
push
scas
jmp
cmp
xchg
push
rcrl
sub
fcmovu
adc
push
imul
hlt
imul
test
in
mov
fisubs
adc
es
jl
hlt
xchg
and
or
sbb
aaa
mov
pop
test
out
aad
jp
push
adc
cmp
lods
scas
pop
popf
mov
sub
jns
add
sti
pop
fdivs
ret
test
in
pop
dec
fisttps
insl
lea
mov
xor
hlt
out
mov
xor
adcl
mov
pop
pop
add
fwait
lret
roll
imul
iret
mov
xor
xor
imul
jo
mov
mov
inc
in
stos
rclb
inc
pop
insl
jge
push
dec
mov
push
mov
ret
sbb
and
mov
scas
inc
pop
xor
inc
xor
fsubrl
pusha
repz
and
orb
aam
jo
mov
fmul
mov
mov
mull
or
push
xor
mov
cli
xchg
mov
es
aam
shr
pop
in
mov
or
stos
push
jl
daa
sub
jne
mov
fdivs
movsl
pop
das
jge
add
jmp
mov
pushf
pop
sbb
iret
push
popa
pop
in
testl
xor
inc
dec
jno
addr16
rorb
pop
xchg
mov
int3
sub
fdivp
lret
pushf
lock
push
loopne
jbe
movsl
fstps
sahf
pusha
push
dec
lods
daa
adc
sbb
stc
scas
mov
xchg
out
adc
or
mov
stos
fcmove
ret
push
lcall
rcrb
xorl
rcr
adc
pop
dec
enter
mov
mov
jecxz
icebp
xor
push
inc
mov
sti
andb
hlt
mov
jg
arpl
imul
jmp
mov
cmpsl
sbb
out
inc
adc
push
inc
gs
orb
pop
popa
xchg
sub
pop
incl
mov
inc
out
push
pop
cmp
call
mov
fwait
clc
or
fsubl
movsb
add
cwtl
decb
aaa
pop
into
call
es
mov
hlt
outsb
mov
nop
mov
mov
loope
mov
sarb
cs
xchg
sub
xchg
cmc
xchg
or
sbb
push
ret
jmp
enter
pop
arpl
mov
xchg
hlt
outsl
mov
mov
sbb
pushf
ljmp
in
add
cmpl
stos
hlt
inc
mov
xchg
jbe
shr
mov
mov
hlt
sub
insl
pop
cltd
lcall
mov
mov
int
dec
inc
lea
and
icebp
outsl
add
data16
repz
cmp
add
xor
jne
sbb
push
js
cmc
mov
int
inc
imul
and
les
or
neg
out
or
cmp
mov
add
sub
cmp
jo
mov
or
push
test
call
push
mov
xchg
lret
mov
or
push
data16
dec
xor
leave
or
add
push
ja
into
shrb
add
cld
mov
mov
enter
sti
movsl
andl
rorl
push
stc
mov
add
cmp
sbb
ret
lret
xchg
xchg
inc
push
adc
jmp
pushf
lods
or
fs
shlb
rclb
pop
movsl
incl
mov
fsts
and
add
test
inc
stc
adc
or
xchg
mov
add
lds
mov
cwtl
jg
scas
test
inc
loopne
mov
sub
arpl
inc
or
scas
dec
nop
fmul
push
mov
pop
loop
cmp
imul
aam
push
std
pop
repnz
inc
lds
adc
and
in
adc
test
push
movzwl
imul
test
mov
pusha
inc
push
test
outsl
dec
xor
jns
mov
imul
popl
test
cmovl
mov
cltd
cmp
lods
mov
cmp
cmpsl
stos
outsl
and
dec
mov
mov
fdivl
or
ss
push
mov
enter
sbbl
test
xlat
in
fdiv
nop
dec
fnstsw
in
mov
es
sahf
imul
aam
lret
cmp
scas
inc
icebp
fisttpl
mov
pop
dec
dec
sub
xor
lds
cwtl
xchg
sbb
inc
filds
and
jp
shlb
mov
jge
leave
push
adc
cltd
add
aad
dec
sbb
mov
movsb
dec
jne
adc
pusha
xor
aad
add
mov
stos
inc
add
fidivrl
cs
andb
pop
outsl
sbb
dec
inc
subb
mov
lret
cli
sbb
fsubrs
mov
mov
mov
push
xor
jae
repnz
and
pop
pop
sub
aam
dec
sbb
add
fcompl
ljmp
adc
divb
mov
cmpsb
mov
imull
shlb
or
stos
jne
std
aam
cmp
jns
lahf
pop
outsb
jo
sub
leave
jle
movsl
pop
dec
pop
in
add
ds
loop
cs
std
mov
xchg
int
cmp
ds
adc
js
aad
adc
rclb
out
pop
mov
push
les
adc
inc
sub
shrb
cwtl
mov
adc
and
jmp
in
das
test
rolb
and
push
adc
mov
sti
jmp
scas
mov
test
mov
push
mov
popf
xor
loope
outsl
mov
xor
je
mov
lea
scas
ret
fistpll
lret
push
mov
je
pop
sbb
das
loop
movsb
xchg
add
test
dec
fmuls
mov
add
das
and
cmpsl
jge
pop
cmp
les
into
arpl
out
cmp
xrelease
test
mov
xor
push
fldenv
xor
sbbl
adc
cs
xor
repz
test
add
mov
stos
inc
add
fcmovnb
test
push
rolb
mov
sub
sbbb
push
hlt
lods
lret
mov
das
enter
dec
repz
mov
das
inc
out
add
fisttpl
xor
jg
add
cmpb
jp
imul
and
mov
xor
sbb
cld
clc
add
inc
sub
sbb
push
inc
cwtl
jl
sub
std
int3
aaa
lahf
adcb
xor
enter
popa
mov
test
out
xorb
jnp
mov
adcl
mov
adc
mov
jle
jne
sbb
add
jne
sub
movb
xchg
add
and
sub
sub
adc
icebp
pop
dec
sbb
push
repz
leave
movl
mov
mov
add
repz
lods
adc
jae
clc
jp
or
test
out
mov
push
mov
subl
push
nop
test
mov
sub
xchg
add
jbe
aas
mov
xor
or
sub
imul
cs
inc
popa
cwtl
outsb
mov
test
bound
sti
adc
jge
movsb
lret
lods
js
add
xchg
jle
sahf
dec
fs
add
or
inc
int
hlt
mov
in
push
sub
fnsave
fcomps
test
ljmp
pop
in
mov
dec
ds
leave
pushf
push
push
js
xchg
adc
fbld
or
inc
add
mov
pushf
into
jb
aaa
insb
stc
ja
sbbl
xchg
xchg
testb
icebp
fcoml
push
add
hlt
sarb
jp
mov
rcrl
or
cmp
andl
es
sbb
mov
test
push
out
pop
hlt
cmp
add
push
bound
xorl
sub
mov
lea
xchg
iret
orb
fs
movsb
popf
mov
imul
mov
clc
sub
xor
rol
jnp
jnp
sbb
cmp
test
jle
pop
push
enter
test
and
sub
cmc
adc
rolb
stos
lods
xor
aam
cld
stos
pop
cmpsb
xchg
push
cmp
xchg
jp
sahf
outsl
cs
jp
sub
cltd
or
cmc
rcrb
inc
or
adc
cmp
int3
lds
test
sbb
dec
incl
popa
incl
test
lret
and
push
dec
movsb
ficomps
jns
test
shlb
jns
popl
cli
xor
pop
inc
pop
test
cmp
add
pop
pop
add
and
lret
push
cmovne
jo
sub
std
in
inc
xchg
push
or
lock
dec
inc
or
das
or
gs
xchg
push
shll
inc
gs
xorb
pop
ror
ljmp
testb
jne
scas
rclb
subl
dec
fs
mov
mov
add
scas
lds
in
shll
inc
pop
mov
out
fisttps
mov
mov
imul
mov
inc
addb
fsubl
mov
mov
sbb
pop
xor
cs
movsl
enter
insb
sub
repz
hlt
jne
lds
cs
leave
cmpb
and
in
adc
idivb
leave
jmp
cmp
mov
xor
mov
out
sar
jmp
and
and
js
out
in
jne
popf
scas
or
sbb
sub
out
mov
xorb
mov
aaa
les
rolb
cmpsl
cmp
inc
clc
xor
sbb
testl
movsb
push
lret
add
sub
push
dec
or
in
dec
clc
cld
mov
rolb
iret
mov
andl
add
int3
adc
cmp
std
popf
imul
jg
lret
sbb
jno
push
hlt
leave
repnz
jg
jmp
push
out
adc
xchg
mov
xor
jl
mov
cs
pop
outsb
dec
add
pop
and
cmpsb
subl
add
push
stos
nop
mov
jp
mov
out
stos
mov
out
dec
bound
les
adcb
fbld
jbe
inc
cmp
lret
fisubrs
cmpsb
jbe
sub
fldcw
xchg
pop
or
mov
mov
adc
sbb
or
idiv
cltd
add
daa
mov
xchg
nop
and
xchg
aad
add
int
addr16
test
sysret
bound
outsl
addl
es
add
jno
sti
shl
mov
push
fs
and
hlt
push
call
test
es
sub
shrb
and
leave
jo
repz
dec
int3
lcall
aam
dec
cwtl
pop
lods
push
fwait
mov
xchg
loope
mov
mov
xchg
cmp
mov
cld
fdivl
out
xchg
sub
push
sub
push
adcl
orb
in
mov
or
or
andl
mov
or
cld
xchg
test
jnp
pop
aam
push
push
push
adc
or
push
add
lret
hlt
int3
repz
enter
and
clc
out
sbbl
rcrl
cmp
addr16
jle
pop
jp
add
sar
jne
cmpsl
mov
lods
xlat
into
sub
pop
adc
imul
add
jne
push
cli
or
mov
jb
push
sub
fnsave
add
add
add
sub
dec
pop
push
xchg
jo
repz
test
loope
enter
shr
sti
pop
dec
fdivrl
add
inc
inc
jne
dec
cmpsl
jno
pop
cld
sarl
and
scas
mov
subb
lds
enter
mov
rorl
ss
cmc
jmp
fs
sub
adc
inc
inc
mov
mov
ficoml
sbb
push
mov
adc
xlat
pop
and
test
cmp
jbe
mov
mov
test
aam
shlb
test
add
das
and
sahf
dec
outsb
lods
lcall
enter
scas
sbb
gs
cltd
testl
out
or
js
lods
or
jge
and
mov
cltd
das
pusha
mov
les
fyl2x
mov
xchg
out
pop
popa
insl
mov
sbb
jp
shl
sbb
mov
jbe
jne
mov
xorb
cmpsl
push
mov
leave
push
cmp
rcll
add
jne
ret
pop
cmp
aam
and
in
stos
mov
jmp
pop
cwtl
pop
inc
test
and
inc
daa
push
das
sbb
divb
daa
pop
mov
mov
or
lret
in
dec
jne
xchg
stc
adc
movsb
test
frstor
pop
mov
fs
jne
add
and
sbb
jg
jnp
test
mov
and
pop
mov
add
rcr
test
mov
mov
insb
or
imul
push
out
movsb
hlt
sub
push
mov
cmp
xchg
std
cmpsl
add
sahf
sub
jno
sub
fs
adc
hlt
in
jne
ds
nop
lcall
mov
push
hlt
xchg
loopne
jne
adc
test
inc
mov
jnp
lcall
popa
jmp
addb
adc
cmp
jae
out
xchg
mov
inc
mov
mov
cs
cmc
je
adc
mov
or
push
or
imul
std
inc
movsl
daa
in
mov
inc
cmp
divb
ret
cmp
aad
shll
imul
shlb
loopne
insl
cmp
mov
mov
mov
push
mov
push
orl
mov
xchg
popa
or
dec
loope
fmull
stos
cmp
loop
add
in
xchg
es
inc
bound
mov
loope
xchg
and
hlt
xlat
jp
test
sub
sub
scas
mov
repz
mov
mov
enter
in
sub
jg
add
sbb
scas
sub
int3
or
xchg
push
cmp
in
test
cltd
jnp
stos
das
imull
enter
cltd
call
mov
push
loope
or
std
and
xor
pop
nop
add
mov
jno
int3
jecxz
loop
inc
inc
sub
sub
rclb
pop
out
push
jne
imul
test
or
fstps
fldenv
sbb
shl
xorl
fadds
push
outsl
loop
mov
cmp
rolb
icebp
popa
in
push
jmp
in
stc
leave
dec
sbb
add
cltd
lret
and
stos
pop
dec
cmpsb
inc
and
scas
inc
inc
sub
or
ja
or
dec
cltd
adcl
sub
adc
mov
lcall
in
or
pop
or
mov
mov
rorb
or
push
leave
cmc
in
into
ja,pn
adc
fsubl
add
xorl
lcall
subl
stc
push
je
fists
xchg
stos
pusha
nop
mov
jecxz
arpl
pop
fldenv
shr
clc
sbb
and
pusha
shll
dec
mulb
sahf
ja
jmp
mov
sbb
in
mov
dec
loopne
lcall
pop
mov
lcall
cmpsl
hlt
xchg
mov
jp
lahf
mov
stc
and
inc
sti
ja
mov
into
int3
scas
fmull
or
fcoms
mov
iret
call
sbb
pop
ljmp
lahf
jge
add
scas
xchg
addb
jle
jno
cwtl
in
jne
adc
mov
dec
rol
pop
test
scas
int3
mov
sbb
xchg
sub
mov
lcall
mov
xor
fistps
xor
addl
pop
or
aad
stos
jecxz
xchg
push
cli
ljmp
cli
adc
jo
ret
mov
add
insl
pop
and
pop
repnz
dec
shr
xchg
pop
cmpsl
xchg
js
in
in
ret
xor
jne
popa
and
stos
push
xor
mov
stos
dec
pusha
push
pop
arpl
sti
ret
sahf
cs
mov
jmp
cltd
test
push
es
mov
mov
inc
mov
insb
and
lock
pop
mov
add
sbb
ljmp
fxam
xchg
inc
adc
leave
xor
mov
mov
sti
clc
outsl
dec
add
mull
push
dec
add
ficompl
lret
add
jnp
loope
xchg
mov
pusha
aas
scas
out
and
loopne
mov
ret
iret
sub
push
sarb
jbe
lahf
pusha
sbb
loopne
arpl
push
jge
and
push
cld
mov
mov
cmp
fcoms
sub
shr
push
movsb
jnp
neg
test
jle
in
hlt
pop
inc
out
push
repnz
movsb
dec
adc
jp
bound
hlt
jle
imul
ss
outsl
sbb
jg,pn
or
ds
mov
and
jns
fst
push
rcrb
mov
mov
sarb
sahf
lods
xchg
pop
jo
mov
enter
sub
hlt
mov
xor
mov
loop
loopne
dec
cmp
sub
push
dec
add
leave
fcoml
pop
icebp
jmp
jne
lret
lods
fcompl
imulb
jmp
mov
sub
test
xor
in
add
inc
inc
cmp
push
sub
div
pop
cmp
add
or
fucomip
ljmp
test
lret
testl
jecxz
mov
push
std
or
insl
add
mov
imul
cmp
dec
add
repz
shll
sub
pop
shlb
push
clc
push
cmp
sahf
ret
sub
enter
xchg
sarb
xchg
xchg
cld
rcl
push
sub
inc
test
into
mov
shrl
pusha
pop
mov
and
push
cmc
enter
pusha
hlt
sbb
shlb
sbb
cmp
sbb
insl
repz
xor
lret
insl
lret
testl
mov
or
and
cmpsl
mov
imul
imul
jmp
mov
repz
enter
cwtl
fmull
jmp
jnp
fdivp
into
pop
pop
mov
gs
adc
les
loopne
stos
das
adc
mov
out
sbb
jns
sbb
gs
lahf
xor
mov
jbe
ss
dec
inc
cmpsl
cmpsb
mov
mov
jne
push
outsl
clc
cmpsb
leave
and
add
shl
xor
cltd
cld
or
ljmp
xchg
scas
fst
sbbl
fsubs
das
mov
pusha
mov
and
xchg
popf
fwait
lahf
jnp
lcall
into
and
lret
adc
inc
bound
rcrl
jae
gs
jne
and
xor
cli
mov
jl
shrl
push
push
and
xchg
sub
hlt
pop
in
je
lods
dec
inc
test
jno
cmpb
or
push
sub
sub
inc
or
or
hlt
push
or
mov
not
inc
mov
adc
adc
addb
add
fdivr
pop
hlt
xchg
insl
adc
pop
scas
sub
add
psllw
lret
mov
push
and
ljmp
aam
shlb
cmp
sbb
push
push
int3
xchg
outsb
adc
dec
popl
cltd
pop
in
jne
addb
xor
adc
mov
pop
repz
push
mov
xchg
jne
jg
lods
mov
dec
movsbl
or
ret
jne
jle
cltd
mov
test
ja
movsl
aam
out
xchg
xor
pop
jno
rcrl
cmp
or
xlat
test
dec
cmpb
mull
sarl
xlat
into
dec
cmp
cmp
scas
movsl
inc
ja
and
cs
pusha
adc
pop
gs
pop
mov
stos
test
sbb
insl
sbb
xchg
in
xlat
xor
nop
es
mov
xchg
mov
add
jecxz
mov
movsb
orb
add
or
es
xchg
stc
loopne
push
or
cmp
dec
add
clc
inc
xchg
inc
test
inc
jb
jo
xchg
mov
adc
rcrl
sub
out
and
inc
add
dec
fnstsw
lret
mov
add
jmp
dec
push
cmpsl
ja
xchg
out
push
mov
xor
sub
cmp
pop
adc
xchg
xchg
test
xchg
dec
mov
inc
hlt
mov
lea
add
xor
mov
outsl
or
xor
shrl
adc
jmp
mov
into
fldenv
enter
xchg
mov
enter
push
dec
aas
pop
mov
pop
stos
movsb
stc
ret
lods
call
sbbl
scas
dec
scas
rol
cmpsb
int3
inc
inc
in
subl
repz
adcl
movsb
xchg
loopne
clc
lahf
mov
dec
mov
mov
mov
mov
pop
mov
inc
outsl
push
jecxz
dec
cmp
jae
jg
into
inc
gs
lock
out
jle
mov
push
jo
xchg
mov
into
sarl
adc
fsts
fistl
ljmp
push
addl
sbb
lods
jmp
mov
mov
xchg
fdivs
dec
int3
out
aam
mov
pop
mov
sub
add
jecxz
xchg
add
mov
pop
xchg
inc
mov
pop
jle
push
orb
sub
setp
mov
cld
enter
mov
push
push
add
scas
xlat
mov
or
dec
add
test
cmp
fcmovnb
jne
rcrb
shlb
cltd
fsubrs
shrb
mov
inc
xchg
dec
arpl
pop
sub
clc
stos
push
xchg
and
or
stos
insl
mov
jae
cmc
shrl
movsl
mov
mov
test
mov
ret
jle
mov
mov
mov
xor
movsb
cmp
cmp
shrl
repnz
adc
sbb
fnstsw
movb
mov
inc
jle
jo
push
enter
pop
dec
adc
dec
test
add
sub
out
push
rol
xchg
das
xchg
jo
xchg
push
notl
sub
push
loope
and
or
mov
loopw
inc
dec
shll
lods
stos
insl
mov
mov
xchg
ret
sarb
andl
sbb
in
cmc
adc
adcb
movsl
loopne
fcompl
pushf
pop
lds
test
loope
cmp
mov
lahf
mov
ror
dec
repz
stc
inc
cld
out
enter
into
push
rorb
inc
mov
outsl
sub
lock
in
gs
or
xchg
and
jmp
xor
dec
pop
out
aaa
movsl
loop
mov
inc
movsl
fcoml
movsl
xchg
or
cmp
jecxz
sbbb
test
mov
lahf
pop
xchg
adc
xor
movsb
sub
dec
mov
ret
push
dec
mov
test
or
mov
push
out
push
iret
inc
jnp
les
clc
gs
pop
repz
or
push
mov
sub
imul
sbb
sub
push
adc
xlat
add
add
cld
mov
mov
mov
cli
or
pop
adc
xchg
sub
and
lods
hlt
xchg
dec
inc
std
jne
cmp
xchg
out
std
jmp
inc
dec
loop
nop
pop
push
fildl
mov
pop
mov
addb
and
mov
xor
cwtl
jne
aam
cmc
shll
aas
pushf
pop
xchg
stos
scas
aad
lods
lcall
fsubp
ret
add
mov
adc
test
pusha
movsb
lods
pop
mov
xchg
test
leave
xchg
jb
add
in
lret
roll
aas
ror
fisttpll
pop
outsb
xor
movsb
mov
mov
cltd
adc
fs
jb
xchg
test
dec
xor
js
lea
mov
cmpsb
and
xchg
sbb
iret
xor
loopne
sub
leave
insb
mov
jns
cwtl
mov
cmp
pop
dec
and
push
and
sbb
test
mov
leave
xchg
sub
add
jg
dec
fmull
dec
add
sub
add
insb
push
idivl
dec
jne
sbb
sti
push
add
mov
dec
out
nop
imul
in
aad
test
dec
js
rolb
adc
xchg
pop
mov
daa
or
or
jmp
pop
roll
enter
push
mov
hlt
lds
pop
arpl
data16
pop
stos
repz
jl
imulb
inc
mov
call
hlt
adc
jge
mov
push
loope
into
jg
sbb
flds
jae
sahf
cmp
cld
test
incl
sub
stos
jne
push
enter
andl
xchg
add
mov
xchg
lahf
sbb
pop
in
test
lret
mov
xchg
daa
push
in
loopne
mov
push
movsb
xchg
into
test
add
aas
cmp
sbb
addl
iret
mov
adc
bound
push
roll
mov
xchg
mov
xor
push
hlt
nop
insb
stos
lret
ret
xor
loopne
lods
fsubrl
xor
fsubs
mov
and
repz
sbb
out
cld
jne
filds
cwtl
xchg
adc
or
or
roll
mov
and
dec
pusha
mov
dec
mov
daa
and
mov
cmp
sub
cli
aad
test
jp
mov
fs
xor
stos
ja
push
push
lahf
test
jge
cwtl
mov
out
scas
dec
mov
inc
sti
icebp
inc
cmpsl
mov
inc
repnz
das
jl
pushf
mov
jae
inc
xchg
cwtl
inc
psubq
repnz
rclb
fs
push
pop
fildl
insb
ljmp
xlat
dec
int
inc
pusha
insb
pusha
stos
jmp
stos
clc
push
sahf
movsb
dec
jmp
adcb
mov
out
hlt
xchg
ljmp
into
mov
sbb
mov
mov
mov
inc
ljmp
mov
add
pop
push
pop
int
pop
mov
lock
nop
ret
aaa
add
ficoml
ret
mov
cld
sbb
loopne
mov
dec
xor
sub
insb
dec
stos
push
pop
mov
hlt
xor
dec
dec
faddl
les
dec
icebp
aas
cwtl
lock
in
xor
mov
mov
cltd
or
icebp
dec
push
lds
or
xchg
addb
ror
xlat
mov
sbb
hlt
xchg
movsl
cmpsb
dec
xchg
shl
mov
cld
lds
lret
in
xchg
push
push
sub
stc
decl
mov
neg
pop
subb
pusha
cmp
or
inc
cmpl
das
sbbl
pop
popl
sbb
or
sub
and
ret
nop
mov
stos
in
pushf
inc
test
ljmp
mov
pop
enter
dec
add
push
jne
subl
pop
mov
pop
push
xchg
lods
mov
and
lcall
and
repz
mov
lret
hlt
xchg
mov
movsl
fucom
loop
shlb
mov
jo
rol
mov
jae
pop
mulb
and
outsb
push
rol
repnz
mov
sub
or
cmp
bound
arpl
mov
lock
inc
pop
dec
test
jge
pop
test
jl
rorl
ds
sti
dec
sub
hlt
icebp
adc
mov
movsl
mov
addr16
pop
inc
pop
jle
stos
les
imul
test
and
das
push
mov
ret
nop
in
jne
testl
xor
mov
xor
lret
cs
mov
xor
pop
loop
jmp
daa
dec
das
push
lock
jne
inc
mov
dec
adc
imul
mov
cmp
lods
xchg
mov
ss
scas
jno
in
fsubl
cmpsl
mov
rorl
cwtl
divl
ror
mov
scas
push
movsb
lock
cs
cmpsl
bnd
jne
scas
adc
lret
insl
lods
sahf
push
add
adc
jne
xorb
loop
inc
push
dec
repnz
xchg
ljmp
nop
mov
mov
or
movsl
add
and
mov
fstl
sub
aam
and
lret
movsl
fstps
or
fdivr
test
pop
out
aas
ss
pop
shll
leave
rcr
dec
lods
dec
imul
push
mov
xchg
dec
sub
das
mov
imul
test
stc
lahf
movsl
xlat
xchg
push
pusha
pop
ret
andb
out
jne
nop
jmp
cltd
ja
add
mov
and
push
pop
mov
inc
pop
stos
outsl
sarb
sub
out
sub
pop
lret
aam
pop
mov
sbb
push
jne
inc
xchg
dec
bnd
and
into
mov
xor
rorb
jbe
pop
ja
xchg
inc
mov
dec
inc
jecxz
pop
and
adc
hlt
cld
push
std
mov
mov
popf
jb
sbbl
mov
or
inc
shl
enter
push
hlt
xchg
inc
lods
mov
ficoms
hlt
movsb
pop
mov
mov
xor
sbb
fucomip
fdivl
jne
jo
dec
insb
add
hlt
jg
int3
int3
lret
push
and
dec
and
cli
lods
inc
lahf
dec
daa
lret
xlat
cmc
cmc
dec
add
jle
and
cwtl
addb
xchg
xlat
sbb
inc
in
pop
je
mov
sbbb
jb
nop
mov
or
xlat
lods
fs
int3
hlt
jle
sub
rclb
xchg
xchg
mov
ds
hlt
mov
push
push
gs
ret
jo
mov
les
sarl
push
hlt
sbb
fwait
jne
mov
cmpsl
out
mov
and
pop
add
mov
add
outsb
add
pop
mov
shll
dec
mov
out
dec
sub
bound
getsec
adcb
dec
test
nop
outsl
add
mov
mov
adc
enter
rorb
je
or
std
imul
or
push
call
into
xchg
or
fists
cmp
or
jb
subl
add
add
lret
insb
cmp
mov
jb
loopne
in
fsubl
push
adc
jg
outsb
xchg
mov
adc
cmpsb
movsb
test
dec
in
adc
jecxz
pop
pop
dec
mov
ret
rorl
mov
mov
ja
cmpsl
stos
lret
lea
loop
pop
out
ljmp
dec
adc
jp
add
cmp
out
xchg
mov
push
sub
out
cmc
loope
add
sub
jmp
adc
mov
or
daa
xor
adc
sbb
cs
adc
frstor
data16
dec
push
mov
cmpsl
cs
jne
push
fiadds
jbe
pop
fmull
lods
xlat
cltd
cmp
enter
aam
sbb
inc
scas
popf
xlat
nop
aaa
pop
lods
or
and
stc
mov
lcall
mov
cld
pop
out
gs
call
in
push
sub
and
fcmovb
and
inc
rorb
pop
cmpsb
mov
les
xchg
pop
add
push
adc
push
mov
inc
ljmp
dec
cmpsl
shl
cmp
mov
fcoms
lahf
mov
pop
add
aad
or
jmp
outsl
sub
mov
sbbb
negl
mov
out
sti
cmpsl
mov
mov
fists
adcl
inc
ret
jmp
dec
loope
aaa
daa
or
jecxz
out
and
loopne
lds
add
std
mov
add
sbb
cmp
loopne
xor
rolb
mov
loop
call
jne
fdiv
mov
popa
stos
int3
xchg
mov
push
or
pop
push
outsl
cmp
mov
sub
jl
pop
sub
jno
sti
ljmp
xchg
outsl
mov
xor
fs
fadds
repnz
dec
mov
add
leave
stc
das
or
dec
push
aad
arpl
test
mov
adc
mov
add
mov
dec
or
mov
out
clc
jne
push
mov
shl
sub
xchg
subb
sub
adc
mov
adc
rolb
adc
adc
jb
sbb
hlt
dec
imul
push
daa
adc
or
scas
hlt
popa
jno
mov
shlb
pop
sbb
cwtl
std
cmpsl
leave
out
mov
aad
aam
test
mov
movsl
in
fists
mov
dec
outsl
or
push
clc
push
lods
fneni(8087
addr16
lret
cmpsb
cld
cwtl
popa
pop
jne
sbb
pop
xor
adc
mov
sbb
popa
mov
jecxz
call
mov
in
cmpsl
rcrl
pusha
rorb
push
arpl
lods
stos
pop
into
outsb
repnz
fidivrs
sbb
mov
icebp
add
cmpsb
inc
xchg
int3
mov
mov
fdivl
cmpsb
into
aam
sbb
nop
push
popa
pusha
gs
mov
mov
mov
aad
pop
mov
add
ds
mov
push
fmull
xchg
out
mov
das
imull
lahf
sub
pusha
xchg
std
sbb
cltd
addb
int3
lods
repz
imul
lds
xchg
pop
lods
addr16
ss
bnd
mov
pop
mov
jl
mov
hlt
dec
sub
stc
movsl
inc
inc
into
or
sub
jl
dec
mov
ds
cmp
xchg
mov
mov
es
stos
add
dec
repz
cltd
mov
or
adc
jne
pushf
stc
add
pop
hlt
mov
mov
pop
testb
shll
and
mov
js
adc
inc
test
jne
es
clc
sub
mov
sub
rcrb
sbb
mov
mov
int3
leave
pop
inc
xor
inc
repnz
adc
xchg
mov
cmp
sub
ljmp
test
leave
mov
pop
xchg
mov
scas
rorb
adc
popa
xor
sbb
mov
pop
das
jno
icebp
add
outsb
push
mov
andb
in
dec
push
push
fildll
movsb
loop
rcrb
call
sbb
inc
addb
mov
idivl
sarl
jl
push
cwtl
or
shlb
dec
sbbb
aad
andb
out
imul
mov
xor
imul
dec
insl
push
outsl
inc
ret
leave
dec
or
xchg
into
sub
pusha
leave
xchg
rcrl
pop
pop
les
rclb
pop
push
mov
add
xor
dec
push
popa
stos
ljmp
stos
dec
push
mov
mov
sahf
and
sub
sbb
out
inc
and
jne,pn
sbb
and
hlt
nop
jns
enter
addr16
outsl
test
mov
jmp
outsl
insl
cs
mov
xor
mov
movb
cmp
mov
xor
aas
mov
xchg
in
mov
push
or
add
push
push
mov
aas
mov
jecxz
dec
pop
scas
mov
push
xlat
sub
test
sbb
andl
adc
adc
shlb
es
xchg
dec
add
mov
mov
cld
mov
rorl
jp
pop
out
mov
jl
aam
pop
cwtl
enter
les
cs
adc
daa
inc
lds
jmp
and
inc
cmpsb
jne
lcall
filds
outsb
mov
add
faddl
popf
cwtl
in
rcrb
mov
pushf
mov
or
sahf
mov
test
test
ljmp
fsubrs
arpl
sbb
and
shll
sti
sti
cmpsl
sub
out
and
inc
int
in
scas
mov
popf
addr16
jmp
xor
lcall
xor
sub
iret
lahf
pop
stos
and
mov
push
pop
stos
shr
inc
xor
jecxz
pop
loopne
lds
pop
push
adc
jmp
and
push
outsl
or
cli
sti
call
insb
cmc
hlt
sub
ljmp
sub
ret
es
ljmp
push
xchg
adc
xchg
lds
dec
arpl
pop
test
adc
nop
lcall
mov
test
insb
clc
enter
test
hlt
mov
add
jne
mov
aas
notl
cmp
or
fdivl
fistps
ret
idivb
enter
adc
add
mov
aas
outsb
sub
call
loopne
mov
decb
scas
stos
into
nop
mov
ja
inc
loope
out
test
js
push
aad
jne
clc
cmp
aaa
add
daa
mov
sub
les
add
sbb
test
iret
pusha
les
notl
pop
inc
sub
jb
and
pop
inc
and
mov
adc
add
loope
cwtl
adc
fbld
roll
hlt
cwtl
push
das
sti
sbb
mov
pop
inc
pop
jl
mov
xchg
dec
lods
add
sub
or
inc
loope
cmp
lea
or
les
jge
mov
jmp
jne
and
clc
outsl
pop
addb
mov
fldcw
or
aaa
ss
cmc
lods
pop
mov
loopne
sub
fcompl
filds
cmpb
je
mov
push
xor
out
jbe
jbe
jle
push
pop
pop
roll
sub
jecxz
xchg
enter
test
jle
sub
fcoml
dec
inc
mov
pop
sub
lods
adc
jbe
jbe
adc
dec
xorb
push
aas
mov
rcrl
sti
stos
jb
and
out
xorl
in
push
jne
jge
xchg
aas
pushf
into
popf
stc
inc
leave
fmull
scas
pusha
sbb
std
int
pop
out
add
sub
jl
fbstp
sub
aaa
mov
xchg
sub
in
sbb
ret
jno
sbb
adcl
loopne
lods
enter
cmp
mov
jo
mov
loop
or
adc
stos
into
xlat
cld
cmp
in
pop
cmp
push
mov
addr16
jne
pushf
inc
hlt
std
and
mov
jp
pop
lods
jge
jnp
cmp
dec
mov
das
stos
aam
jle
push
push
or
enter
ret
insl
mov
mov
dec
mov
mov
insb
xorl
loope
shlb
push
cli
test
sub
fistl
ljmp
cltd
add
scas
shlb
xchg
pop
cmpsl
loopne
loope
mov
shl
jnp
neg
iret
and
aas
or
outsl
es
and
hlt
add
and
xchg
adc
stos
rcl
fadd
jp
icebp
add
aad
loop
xor
push
ficomps
xchg
sbb
dec
movsb
push
dec
scas
loopne
and
ror
and
stc
push
addr16
movsl
hlt
lea
push
cmp
add
jne
test
jle
xor
push
jne
ja
jge
mov
jbe
or
shrb
test
pop
aam
jl
pop
dec
into
test
lret
outsb
and
pusha
dec
inc
stc
sbb
add
push
add
dec
add
mov
imul
sub
std
sub
cpuid
jl
mov
push
jge
ret
addb
mov
pop
push
cmp
cmp
xchg
inc
ds
mov
fcmovu
subl
pop
test
and
push
adc
mov
mov
jp
xor
test
mov
and
sti
iret
test
mov
mov
mov
loopne
outsl
fcmovne
mov
add
xchg
pushf
and
mov
mov
pusha
popl
lods
xchg
mov
mov
adc
insb
cmpsb
add
jns
cld
inc
xchg
jbe
popa
shl
adc
jg
jmp
inc
sub
or
insb
ss
sub
sub
pusha
nop
repz
popa
adc
mov
dec
jno
int
mov
stos
ds
dec
pop
adc
insb
xchg
lds
xchg
cmc
lds
rorb
in
and
loope
enter
add
imul
mov
push
add
mov
enter
sub
pop
or
stos
jmp
and
or
stc
jp
mov
sub
shrb
repz
mov
adc
ds
jae
sub
dec
aas
jo
dec
ficoml
aaa
cmpsb
lret
add
mov
popa
rcr
inc
pop
xchg
pop
jecxz
xor
rorb
xchg
push
movsl
fisttpll
jne
les
loopne
xchg
dec
dec
push
icebp
lsl
shlb
or
lods
mov
jmp
add
add
inc
cli
ret
add
add
adc
and
call
int3
stc
dec
rep
sbb
aaa
or
into
inc
xchg
mov
mov
add
or
ret
mov
call
add
jne
mov
mov
push
jbe
lods
xorl
adc
add
loop
dec
iret
xchg
adc
pop
ljmp
jo
in
aas
mov
mov
test
jnp
cld
fisubl
cmp
or
adc
inc
loopne
dec
cmpsb
aas
sub
popf
add
inc
push
push
mov
clc
jle
movl
or
fadds
add
hlt
inc
push
pop
xchg
mov
mov
dec
fnstcw
mov
inc
mov
add
and
dec
and
xchg
mov
clc
pop
cld
pop
cmp
fsts
cltd
jg
cmp
xlat
in
mov
sub
jle
cmpsb
jno
iret
aaa
xor
pushl
add
sub
inc
ja
es
push
subpd
aam
stos
jno
xor
vandnps
pop
push
popa
addr16
push
pop
mov
out
sub
aas
pop
add
mov
push
mov
add
mov
aad
pushf
xor
pop
pop
sbb
mov
and
scas
pop
sub
fidivs
cwtl
shl
mov
pop
pop
movsb
ficompl
pushf
inc
inc
push
sbb
loop
xlat
mov
out
test
mov
mov
mov
subl
in
xor
shrl
addb
pop
push
cs
data16
bound
fstp
sbb
pushf
aam
testl
add
pop
mov
inc
ljmp
adc
cmpsb
sahf
test
lret
push
xorb
pop
pop
and
lods
movsl
test
stos
xchg
pop
hlt
aam
jno
jp
inc
daa
nop
lret
mov
in
pop
xchg
stos
jmp
jp
shrl
cmp
clc
dec
das
or
mov
fcoml
xchg
xchg
jp
in
add
and
stc
xchg
pop
push
push
cmp
adc
push
gs
sbb
add
mov
cmp
add
and
test
mov
dec
mov
pop
cmp
in
loop
lods
inc
pop
mov
push
mov
insb
mov
pop
fildl
aas
fs
loop
test
stos
pusha
in
xchg
mov
mov
cld
inc
outsl
aaa
adc
mov
xorl
and
imul
scas
hlt
pop
enter
push
push
hlt
sub
lahf
outsb
pop
subb
jg
jne
jnp
arpl
pop
call
scas
xlat
pop
pop
stos
ss
lock
scas
or
insb
in
or
mov
inc
shll
sub
rcrl
xchg
out
jne
ret
xchg
mov
fisttpl
pshufw
jmp
inc
pop
std
dec
call
test
sub
jae
dec
dec
push
add
ss
jne
dec
sbb
jnp
sub
mov
in
in
cmpsl
mov
mov
fsubl
sub
xchg
mov
add
fdivrl
es
icebp
xor
loopne
cld
lods
movsb
addb
add
std
sub
faddl
and
cmp
cli
push
push
insl
ljmp
in
push
jle
dec
pushf
iret
and
lods
mov
add
test
cmpsl
xchg
call
push
das
mov
dec
cmp
in
jb
mov
ljmp
cmc
call
lock
hlt
adc
enter
das
cmpsl
shll
sub
adc
pop
sbb
adc
scas
aas
repz
ret
fmul
sub
cmpl
jne
or
pop
test
mov
shr
add
sti
in
shlb
sbb
popl
xchg
add
shlb
pusha
xor
loope
in
scas
push
adc
fcoml
rcll
mov
jg
mov
xor
sti
push
test
hlt
and
bound
std
mov
dec
mov
mov
xlat
mov
aad
or
mov
es
add
mov
sub
lahf
xchg
push
shl
xchg
dec
xchg
push
loope
movsb
and
outsb
movsl
xor
mov
mov
fstp
sbb
mov
xlat
mov
pop
les
and
push
push
lret
ret
mov
xchg
mov
jne
xlat
mov
adc
pop
push
lret
imul
mov
mov
movzbl
scas
sbb
es
jge
inc
push
loope
mov
jo
rcrl
test
roll
testb
push
adc
sub
mov
ljmp
xor
mov
sbb
adc
adcl
jae
aad
mov
cltd
jmp
push
or
jns
or
dec
dec
jmp
pop
mov
mov
enter
sti
inc
xorl
xor
cmpsl
sub
add
std
aas
mov
push
xlat
xor
mov
xorb
and
jg
jge
xchg
outsl
andl
scas
sbb
mov
out
cli
push
push
xlat
pushf
push
inc
lret
jns
xchg
jg
popa
js
or
movsb
test
add
mov
inc
mov
sbb
adc
and
add
cmp
mov
aas
and
adc
and
adcl
movb
int
cmp
push
jg
xchg
les
cwtl
jle
cmc
mov
lods
mov
ss
or
and
jle
test
lret
lock
jl
xchg
lods
inc
mov
mov
inc
sti
xlat
nop
xor
outsl
dec
movsb
push
push
nop
scas
mov
aam
add
xor
movsl
or
sahf
loop
lcall
pop
mov
xor
lds
bound
push
jae
mov
xlat
repnz
pop
orl
fnstcw
jg
int3
sub
addl
pusha
push
in
xchg
pop
lods
add
repnz
insl
mov
outsl
gs
adc
cmp
mov
mov
je
sub
xchg
xchg
add
pushf
push
cld
insl
adc
jne
or
push
mov
mov
mov
xor
adc
pop
imul
mov
lret
add
ss
jl
sub
pop
repz
test
xchg
xchg
inc
pop
add
mov
cmc
scas
or
add
push
mov
lahf
sub
or
and
scas
xlat
mov
mov
hlt
repz
test
ret
ljmp
mov
adcl
cmc
sbb
stc
mov
push
dec
cmpsl
leave
call
xchg
jne
movsl
sub
das
std
mov
arpl
fldcw
pop
dec
jae
or
push
mov
or
das
cmpsb
hlt
mov
xor
out
push
scas
js
lahf
add
or
jae
jo
fsubrl
mov
xchg
fwait
out
movl
add
sub
and
test
xchg
xor
add
and
mov
dec
xchg
inc
push
pop
mov
adcl
std
enter
push
add
cld
add
hlt
addr16
xchg
or
insl
fimuls
sub
lods
int3
xchg
ljmp
in
mov
ja
inc
jge
les
inc
or
adc
popa
fsubrl
sub
out
sbb
imul
dec
fs
push
shll
hlt
sti
pop
ret
lret
pop
subb
insb
cmp
stos
inc
mov
fisubrl
jnp
mov
data16
movsl
inc
into
lret
fs
jnp
jbe
mov
xchg
shll
push
cmp
aaa
lods
sbb
push
mov
pop
fnstenv
xchg
mov
pusha
lods
add
and
fildll
sub
pop
mov
test
scas
hlt
inc
div
outsl
iret
ja
sahf
dec
and
mov
and
insl
inc
fnstenv
jmp
push
rcl
sarb
add
cmp
dec
cli
pusha
inc
add
pop
pop
or
inc
cmp
cli
rolb
cmp
dec
xchg
subb
in
and
mov
hlt
imul
lret
shl
inc
adc
imulb
mov
push
push
pop
jo
and
xchg
stos
and
mul
inc
push
sbb
setp
xchg
testb
into
push
in
test
mov
xchg
aam
ljmp
push
cmpsb
add
sub
mov
xor
xor
inc
mov
inc
sub
xchg
push
sub
jno
jb
mov
shll
pop
add
or
mov
sbb
out
lahf
lret
stos
xchg
es
pop
in
jb
and
call
cmp
inc
xor
jae
popf
dec
data16
and
testl
sbbb
aam
gs
fnsave
mov
and
sbb
pop
add
inc
mov
and
decl
mov
insb
mov
lret
mov
or
pop
jmp
push
mov
mov
add
cld
cwtl
stos
mov
loopne
xor
sarb
lret
inc
sahf
sti
insb
adc
dec
pop
adc
xchg
mov
pop
or
mov
xlat
xor
movsl
jne,pt
loop
lock
mov
inc
inc
cli
inc
ficoml
movlps
push
test
fcomps
leave
sbb
adc
mov
ret
jo
add
orl
jbe
cmp
es
lret
pusha
mov
mov
mov
pusha
test
arpl
std
sahf
mov
fdivr
loope
jecxz
in
xorl
hlt
cltd
dec
subl
mov
add
xchg
leave
enter
dec
add
sub
stc
pop
ret
jecxz
scas
pop
test
ds
stos
or
jb
xor
cld
pop
mov
dec
mov
popf
cmc
xchg
sbb
in
and
insb
dec
cmp
add
cli
add
aad
xor
je
in
ret
inc
mov
add
test
hlt
iret
xor
and
pusha
adc
cs
lret
pop
mov
or
xor
mov
fimuls
jle
mov
orl
imul
xchg
in
pusha
into
add
fsubl
and
xor
cld
outsl
bound
ret
mov
test
cs
stc
sbb
mov
or
pop
aad
repz
jo
xchg
fdivrs
pop
cmpsl
stos
mov
sbb
lcall
out
mov
dec
std
js
jne
pushf
mov
pop
sub
and
pop
fdivrl
daa
pop
aam
test
push
loope
imul
call
dec
pushl
shlb
xor
hlt
pop
adc
inc
cmp
popf
shlb
add
sub
lcall
jbe
jb
test
mov
add
mov
repnz
pop
sarb
pusha
ret
rcrb
mov
cwtl
subl
mov
push
int3
xchg
mov
mov
std
and
loopne
cmp
loope
lds
sub
testb
hlt
lahf
inc
push
add
or
pop
stos
ficompl
push
mov
jmp
lcall
dec
aad
push
cmpsb
mov
loop
push
mov
fdivs
push
repz
jle
jl
enter
loopne
xorb
pop
mov
or
xchg
cmp
sbb
fldt
aas
ds
mov
push
add
push
mov
stc
pusha
movsl
fwait
xor
int
sbb
cmpb
mov
popl
stos
adc
mov
inc
push
aad
lcall
pop
xchg
mov
xrelease
enter
push
and
test
les
stos
aas
cld
mov
bound
jne
out
inc
adc
hlt
ljmp
sub
mov
cmpsb
cmp
inc
mov
into
xor
test
loop
push
pop
loop
out
insl
jne
inc
cmpl
xlat
fdivs
dec
jge
pop
call
pop
pop
mov
sbb
daa
lods
cli
mov
ja
aad
imul
insl
pusha
fsubs
dec
lods
in
popa
movsl
add
inc
or
inc
adc
xor
fildl
add
rclb
cs
or
aaa
sub
mov
mov
xchg
adc
push
mov
cmp
test
cwtl
xlat
add
shlb
shll
pop
mov
cmpsl
rcrb
mov
divl
aad
xchg
aad
xor
cmp
in
inc
cwtl
xchg
add
mov
addr16
es
incl
inc
into
sub
jl
ljmp
hlt
scas
es
pop
adc
daa
mov
icebp
sub
adc
cmpl
sti
jmp
stos
leave
or
sub
leave
test
out
mov
or
and
inc
fcmovne
adc
mov
pop
xor
test
mov
andb
fnstsw
in
or
fsts
outsb
loopne
inc
inc
mov
in
pop
cmpsl
jge
jbe
sbb
push
pop
push
fsubrs
int3
and
pop
push
gs
enter
mov
jmp
xor
fcomi
stc
xchg
xorl
enter
lods
lcall
xlat
xchg
sbb
mov
pusha
and
and
icebp
add
xchg
test
ja
loop
sub
or
or
mov
ror
stos
cmpsb
lods
aad
out
ds
loope
xchg
rcrl
fsts
lods
lds
das
sarl
jle
or
popa
inc
add
fiadds
test
mov
mov
pop
xchg
mov
xor
cs
pop
call
out
sbb
arpl
pop
clc
in
add
je
sarl
out
jge
cmpsl
sbb
dec
mov
pop
test
iret
xchg
mov
adc
stos
leave
punpcklbw
or
push
inc
frstpm(287
cwtl
and
nop
test
mov
add
loop
cmp
arpl
push
jbe
dec
cmpsl
ffreep
add
test
sub
fld
out
adc
pop
add
out
lods
test
xor
ret
mov
mov
int
add
push
test
push
movsb
lret
sub
mov
inc
aad
repnz
js
dec
cld
cwtl
popf
xchg
sbb
adc
jnp
mov
jb
pop
jmp
loope
push
test
jae
insb
xor
stc
addr16
fnclex
scas
jg
cmpsl
adc
xor
popf
in
test
or
out
xchg
divb
push
push
add
int3
mov
fsubrl
inc
int
insl
movsb
lret
mov
loope
sbb
out
cmp
mov
mov
mov
inc
flds
lock
inc
lcall
jne
xchg
add
cmp
jno
cmc
push
mov
aad
into
movsb
mov
add
or
out
add
lcall
sub
mov
rclb
pop
xchg
add
rol
sbb
sbbb
cltd
jmp
enter
mov
or
add
dec
mov
dec
repz
mov
mov
shrl
scas
add
and
adc
sub
mov
dec
or
push
add
mov
fldt
pop
jp
inc
inc
jg
jecxz
nop
in
adcl
loop
mov
xchg
and
sbb
jmp
dec
cmc
mov
fmull
fadds
loop
sub
cwtl
jne
add
subb
inc
inc
lds
jns
fdivs
dec
rorb
sbb
mull
cmp
mov
imul
inc
pop
jmp
popa
and
stos
jmp
dec
stos
xor
push
dec
pop
stos
mov
les
push
ret
imul
loopne
gs
dec
mov
mov
call
dec
sub
data16
jae
cmp
dec
jge
push
add
adc
xor
cmpsb
es
repz
sub
jno
mov
iret
mov
ficompl
or
jae
cli
mov
clc
sub
or
xchg
sbb
aaa
pop
test
nop
cltd
jmp
or
aaa
mov
jne
or
test
xchg
enter
test
pop
mov
orl
jne
jns
enter
xor
or
out
stc
or
mov
lods
mov
cltd
dec
push
sti
push
stc
ret
fistps
out
filds
cmpsl
pop
mov
mov
movsl
xor
loopne
mov
cmp
stos
insb
cmp
hlt
xchg
xor
lcall
add
ljmp
ds
adcb
shll
popa
mov
enter
lret
test
inc
push
cmp
stc
gs
mov
push
sub
push
jmp
and
sarb
lods
mov
nop
jle
sahf
ror
push
into
loop
cmp
mov
push
adc
shlb
xor
loopne
ja
icebp
sbb
ror
and
js
or
inc
adc
test
inc
leave
roll
jp
clc
mov
mov
fadds
imul
dec
es
stc
in
cld
push
movsl
lds
int3
push
sbb
lock
mov
es
xchg
mov
push
mov
xchg
cs
bound
aas
int3
pop
gs
mov
call
jg
or
mov
fnsave
cltd
xchg
leave
std
in
shll
mov
push
movl
mov
mov
dec
sbb
fsubs
lock
loop
stc
inc
mov
xchg
cmpsl
in
roll
or
jl
lds
roll
or
and
cwtl
mov
or
jne
push
push
andl
jecxz
test
shlb
icebp
shr
hlt
rol
scas
or
push
mov
loopne
xor
xchg
mov
insb
fildll
bound
mov
xor
ficompl
push
stos
lods
enter
cs
jmp
sbb
dec
addl
jle
pushf
inc
pop
imul
mov
pusha
xlat
pushf
mov
sub
lds
mov
lock
dec
cmp
mov
hlt
cmc
mov
jmp
dec
out
fcmovb
sub
lahf
adc
dec
sbb
fcoms
nop
test
add
or
sub
push
add
cltd
xchg
lods
leave
adc
xchg
imul
add
mov
and
push
mov
adc
jge
jbe
mov
push
mov
test
jge
xchg
push
sbbl
in
cld
or
and
les
cmpsw
push
push
scas
mov
shl
into
loope
pop
xor
jns
subl
lods
sarb
inc
add
xor
les
shl
hlt
insb
jecxz
fisttpll
or
inc
jge
ljmp
dec
mov
add
cmc
xchg
pop
pop
adc
subb
and
dec
rcr
or
add
call
mov
inc
mov
mov
mov
jne
gs
lods
sbb
adc
or
sub
data16
test
cmp
js
es
pop
adc
jle
jmp
fildl
push
lcall
sub
mov
negb
leave
push
rclb
lock
pop
arpl
mov
adc
iret
push
cmp
int
inc
ljmp
push
cltd
arpl
push
aam
jne
hlt
mov
imul
js
mov
int
ljmp
mov
xorb
sbb
push
cltd
in
insl
loope
dec
inc
arpl
jl
mov
jg
ss
mov
add
loope
pop
jle
inc
ljmp
push
iret
and
imul
repz
enter
mov
jle
mov
mov
adc
mov
dec
sub
fdivrl
icebp
sub
cli
push
push
mov
test
cmpsb
add
push
fwait
and
rol
and
test
pushf
repnz
jno
jl
jne
xor
jge
fcompl
lret
mov
cltd
sbb
lds
xchg
gs
and
mov
test
nop
repnz
jle
jo
hlt
pop
pop
pusha
in
popf
nop
mov
or
pop
loope
imul
inc
sbb
dec
push
or
stos
cmp
mov
lret
cmp
scas
imul
sti
and
pop
inc
jae
lock
mov
loopne
inc
inc
sbb
mov
xor
xchg
push
jge
sbb
fimuls
pop
rol
add
rolb
inc
inc
outsl
sub
mov
addb
ja
or
sbb
dec
and
inc
mov
mov
adc
imul
das
mov
in
dec
pop
insl
mov
sub
in
cwtl
push
and
hlt
test
lods
add
inc
and
mov
hlt
jl
pop
enter
rolb
pop
sub
test
push
in
mov
xor
jne
xor
fsubs
and
jp
inc
int
push
xor
lret
sbb
xchg
sarb
and
xchg
sbb
xlat
lea
xorb
ja
jl
add
mov
and
dec
cmc
daa
sub
adc
mov
mov
decb
hlt
testb
es
notl
inc
movsb
sub
aas
repz
shrb
fisubrl
push
or
cld
hlt
movsl
aaa
pop
shlb
dec
jmp
pop
fcompl
add
sahf
and
inc
into
xchg
pop
cmp
orb
loop
cmp
cmc
aam
cld
test
mov
lea
das
or
out
sbb
add
mov
and
sub
fbstp
scas
cltd
bound
std
adc
in
or
in
jne
jecxz
add
cmpsl
leave
shll
sub
dec
inc
jno
mov
sub
ficomps
jne
adc
or
mov
dec
jae
mov
and
stos
stos
fcmovbe
jno
mov
and
dec
imul
sub
pop
leave
pushl
ja
insl
push
or
aad
ss
out
stos
out
jae
scas
mov
testl
xchg
push
fstpl
js
negb
and
xchg
pop
cmp
inc
out
inc
dec
mov
adc
frstor
mov
jne
sub
push
arpl
pop
push
adc
jg
into
pusha
xchg
push
jne
sti
hlt
mov
or
push
clc
mov
cmpsb
cmp
sbb
cwtl
lds
lods
imul
mov
lods
jle
adc
pop
sbb
movsb
shl
xor
addr16
fisttpl
jmp
sbb
jne
xchg
sub
mov
jbe
out
push
sub
enter
push
pop
and
jp
hlt
mov
mov
adc
test
add
push
pop
lahf
int
andb
fsubrl
xorl
adc
mov
jnp
dec
jmp
cmp
jns
lahf
loope
cs
mov
inc
or
mov
fisubs
test
aas
repnz
mov
add
push
stc
aas
daa
shll
mov
push
inc
nop
sarb
repnz
nop
ja
mov
stos
mov
js
sbb
lds
addr16
jl
pop
movsl
clc
adc
jns
roll
sub
xor
or
xchg
lret
jecxz
jne
adc
add
dec
pop
shl
mov
fcompl
sub
loopne
cmc
push
jnp
je
stc
aam
push
and
sahf
loop
insl
push
xchg
imul
sub
adc
inc
adcb
or
loope
fiadds
loopne
sbb
or
leave
dec
jge
mov
pop
hlt
and
jno
inc
push
ret
jp
andb
add
pop
mov
inc
add
stc
or
data16
dec
andb
and
push
mov
sbb
jne
push
rolb
pushf
in
jecxz
and
les
and
push
lods
jnp
jmp
out
hlt
dec
jmp
lods
push
leave
daa
sbb
ljmp
shrl
fisubl
imul
lods
adc
aam
mov
mov
int3
push
ficomps
or
jmp
hlt
or
push
outsl
notb
sti
cmpxchg
cld
pusha
or
and
mulb
loope
scas
sbb
insb
int
cmp
dec
jbe
mov
or
mov
xchg
fcoml
jmp
icebp
add
mov
adc
inc
pop
mov
cli
jge
adc
scas
scas
add
mov
lcall
fbld
repnz
int3
jl
in
xor
lea
inc
push
scas
pop
inc
mov
movsb
dec
out
sub
lods
jne
movzbl
es
or
jne
sub
jg
pop
rorl
popa
inc
cmpsb
add
cmp
mov
jne
cmpsl
cld
xchg
adc
rol
int
dec
lret
fistpll
imul
aas
lret
add
xchg
xchg
incl
stc
add
jmp
cwtl
call
add
or
test
fadds
daa
decb
pop
fistl
sub
push
adc
jl
imul
faddl
jbe
jae
and
jne
nop
outsl
mov
test
mov
and
dec
int
mov
jecxz
mov
push
lea
clc
add
mov
sbb
jge
jne
scas
mov
arpl
jo
sti
xchg
test
or
add
cli
notl
mov
sub
repz
aad
pusha
pop
ret
iret
lods
cli
add
xor
and
dec
sub
and
pop
jbe
cmc
clc
cmp
sub
mov
lods
add
jo
pop
int3
adc
dec
sti
insb
rcr
andl
push
loope
ss
stc
dec
movsl
xchg
pop
add
pusha
adc
sub
stos
in
mov
xchg
adc
stos
xchg
jbe
dec
xchg
sahf
mov
xor
xorb
mov
sbb
add
imul
or
clc
stos
mov
stos
mov
orb
push
call
cmp
xchg
movsb
adcb
fiadds
mov
in
je
or
cmpsl
mov
jne
and
xor
mov
sbb
in
out
lock
pop
leave
and
mov
mov
mov
add
push
nop
dec
xorb
cmp
hlt
pop
push
sar
xchg
mov
dec
mov
push
xchg
imul
xlat
stos
stos
in
cs
jg
inc
mov
stos
fs
lods
insb
aas
lods
adc
jecxz
or
xor
adc
push
hlt
cmp
inc
ss
lcall
mov
fiaddl
push
pop
test
stos
and
js
xchg
lret
inc
pop
push
loopne
enter
add
scas
or
test
mov
lret
mov
shlb
pop
insl
movsb
mov
hlt
dec
jb
or
add
push
mov
sub
jae
xchg
fisubrs
leave
lcall
ljmp
stos
fdivl
test
jmp
stc
fcomp
add
sbb
inc
add
pop
scas
out
ljmp
lret
inc
lret
lcall
adc
jns
push
test
ret
in
and
out
xlat
test
inc
addr16
fistps
ret
push
jge
inc
sarb
fldt
gs
jnp
stos
outsb
cmpsb
sbb
add
add
mov
mov
jl
adc
cli
jne
dec
cs
jns
lds
ffree
sub
movsb
into
xchg
or
test
mov
or
pop
mov
pop
dec
fldlg2
mov
cmpb
sub
push
clc
push
scas
mov
lcall
mov
test
pop
stos
jo
add
mov
pushf
mov
enter
les
add
pop
roll
mov
and
inc
call
repz
jge
out
sti
mov
aaa
repnz
dec
jo
rolb
jbe
hlt
cs
cmpl
ret
push
les
cmpsl
inc
pop
rolb
add
int3
loope
xor
test
fidivrs
cmpsb
xchg
jl
xchg
fwait
pop
pop
jmp
or
das
das
mov
jge
cmpsl
cltd
mov
movsl
sub
ss
xorl
andb
pusha
or
stc
int3
pop
int
or
push
insb
cwtl
dec
pop
push
mov
push
sti
lods
lock
jbe
fiaddl
pop
hlt
arpl
std
lret
in
inc
dec
jecxz
cmp
in
and
xor
hlt
sub
ljmp
mov
and
lret
jne
jg
ds
dec
cmp
jno
imul
mov
mov
jo
cmpsl
dec
insb
enter
sub
xor
jno
sbb
push
cmp
jbe
sti
loopne
insb
mov
cs
adc
inc
and
ret
cmp
movsb
out
and
and
sub
mov
xor
ja
sbb
mov
inc
daa
stc
add
or
jb
in
pusha
mov
push
es
in
pop
insb
cmp
xchg
fst
dec
or
ljmp
lods
cwtl
test
loopne
jl
into
fmull
inc
xlat
mov
jne
or
incl
or
pop
adc
nop
inc
xor
pusha
cmpsl
jg
dec
xorl
mov
gs
sub
jecxz
out
in
test
mov
dec
cmp
push
mov
mov
je
lds
outsl
loopne
in
mov
mov
mov
add
dec
jg
mov
les
js
mov
sbb
mov
jmp
sub
inc
pop
jo
sbb
scas
testb
xlat
pop
push
lock
sahf
push
pop
aam
or
dec
cli
sbb
adc
sar
xchg
nop
subb
lock
stos
pop
ss
push
rcpps
jae
push
sub
add
push
or
fwait
mov
test
lcall
sbbl
mov
or
mov
sub
mov
push
jecxz
pop
jecxz
ds
sbb
repz
inc
sbb
inc
mov
dec
lock
mov
pop
aas
sbb
jge
mov
mov
lea
cmp
xor
sahf
mov
or
movsb
mov
cmc
inc
out
add
adc
mov
push
in
es
inc
xor
jae
mov
jne
out
pop
xchg
lea
xchg
addr16
movsl
hlt
sbb
add
xchg
call
int3
fcoml
adc
insl
into
leave
sbbl
loop
testl
hlt
out
push
mov
pop
popa
jne
sub
xchg
repz
or
mov
pop
inc
xchg
gs
xor
mov
subb
mov
jmp
push
sbb
add
ds
push
jp
jp
ret
jne
dec
movb
mov
scas
stos
repnz
aam
rclb
frstor
mov
pop
xchg
inc
pop
inc
addl
stc
lahf
fcompp
loope
inc
or
out
movsl
push
mov
jno
int
jne
pop
mov
fcoms
or
cmpsb
xchg
subb
push
pushl
jp
add
cli
andb
push
jg
lods
std
add
and
cmp
add
jne
pop
shrb
aam
fsubl
cmpsb
jge
add
xchg
cmc
sbb
out
mov
js
ret
out
cs
pop
mov
and
pop
rcrb
stos
mov
mov
dec
mov
mov
dec
and
pop
mov
loopne
jecxz
testl
loop
xchg
faddl
out
add
jnp
pop
add
xor
or
sub
aam
jge
inc
add
sbb
aad
cmp
je
mov
mov
add
sbb
call
adc
test
dec
les
test
dec
add
xchg
scas
mov
push
iret
pop
push
data16
push
cmpsb
mov
or
aas
repnz
aas
adc
push
push
insb
loop
dec
pop
jae
std
jb
test
imul
adc
mov
hlt
lea
lock
lock
sti
add
pop
xorb
xor
mov
lret
adc
sbb
mov
rorb
push
xchg
push
movsb
stos
in
out
clc
pop
mov
imul
pop
stos
mov
sti
dec
orl
aas
add
adcl
xchg
cs
fdivl
iret
bound
lds
inc
rorb
test
cmpb
sub
inc
add
cmc
in
mov
xlat
imul
cmpsb
mov
out
stos
inc
aas
push
pop
roll
out
pop
divl
jle
dec
idiv
into
dec
mov
add
or
jl
mov
push
add
inc
ljmp
in
imul
pop
shrl
push
cmp
dec
mov
cmpsb
cltd
sub
js
pop
insb
jg
ficoms
mov
aad
dec
mov
push
and
jno
inc
cmp
ljmp
or
mov
loop
loope
dec
pop
nop
imull
lahf
add
cmp
and
iret
stos
cmp
lahf
push
mov
pop
sub
mov
repz
subb
inc
xchg
mov
imul
mov
decb
test
and
outsb
mov
cli
or
add
xor
sub
enter
cmp
in
addl
cmc
and
adc
sub
adc
cld
int
mov
xchg
sti
call
jmp
mov
mov
cltd
movsl
in
add
test
into
pop
mov
in
dec
fstps
test
pop
jns
adc
push
adcb
call
xchg
push
or
test
insl
jg
mov
js
jne
jne
or
cld
stos
push
fmull
lock
lods
testb
xchg
cmc
rcrb
out
jecxz
dec
sti
dec
pop
nop
ja
jne
or
pop
mov
inc
pop
movsl
fistps
rcll
icebp
mov
cmpsb
xchg
xorb
insl
lret
push
jno
fildl
cmp
xor
sub
xor
lock
sbb
movsl
and
xchg
pop
stos
add
sub
and
std
mov
test
inc
dec
mov
jb
sub
mov
jle
and
xor
push
cmc
xchg
iret
mov
shr
push
xchg
out
inc
inc
movsl
outsl
xor
popf
shlb
mov
cwtl
sti
inc
arpl
xor
call
and
sub
push
adc
test
fisttps
jp
add
mov
adc
popf
jp
pop
xchg
mov
movsl
or
push
divb
jb
fisubrs
or
push
insb
je
sub
mov
cmc
rcll
lea
pop
stos
mov
mov
xchg
xor
pushf
test
jl
fisttps
sub
fbstp
rcrb
cmpsl
and
fwait
jo
mov
pusha
mov
fnstenv
sub
mov
pushaw
inc
dec
jne
ret
jb
pusha
cli
movsl
in
cmp
xor
pop
sbb
cmp
mov
sub
into
pusha
sub
cmc
sub
mov
mov
dec
sbb
pop
popa
mov
scas
add
int
xor
push
mov
mov
fdivrl
sbb
adc
js
orl
mov
loope
sub
rcr
or
jp
les
hlt
inc
dec
out
jle
push
cmp
mov
pop
jne
inc
add
movsb
sub
push
shlb
ret
mov
mov
jg
or
jnp
test
jb
xor
test
mov
imul
popf
xor
dec
mov
inc
cmp
scas
mov
sub
mov
pop
cmp
icebp
fmul
push
inc
inc
mov
into
sub
je
ss
and
cmpsl
push
outsb
ret
imull
mov
sub
xor
inc
add
xchg
clc
mov
aad
lods
fucom
xchg
std
clc
cmpsb
add
adc
pop
mov
lock
enter
pushf
mov
adc
gs
inc
fcoml
jmp
nop
pop
outsb
hlt
mov
lret
inc
and
aad
pop
imul
fldcw
inc
push
sbb
scas
fwait
ret
icebp
int
das
pop
xchg
and
shll
mov
std
shll
ror
dec
pop
enter
add
adcl
jo
mov
cwtl
adc
in
test
mov
fdivrs
pop
movsl
movsb
lea
pop
flds
addl
mov
incl
or
fdivs
daa
xor
mov
in
fbstp
push
sbb
insb
enter
adcb
mov
mov
test
mov
jge
adc
js
dec
loop
sti
into
dec
sub
adcl
repnz
sbb
stc
add
sub
std
cli
or
jne
iret
gs
inc
lods
mov
js
mov
xor
dec
das
test
into
adc
pop
mov
lds
leave
popa
inc
popf
repz
xchg
inc
mov
or
push
mov
nop
inc
xabort
and
adc
mov
out
xor
lcall
pop
scas
sbb
mov
pavgb
ljmp
imul
jne
fimuls
outsl
inc
orb
hlt
fcmovu
xchg
mov
sub
sti
adc
sub
fs
ja
or
jno
test
pop
jmp
xor
mov
dec
std
pusha
push
nop
mov
cmp
mov
orb
pop
jne
int
hlt
movsl
scas
cwtl
cs
aaa
test
mov
or
inc
push
cmpsb
mov
popa
dec
dec
leave
sti
enter
jmp
mov
minps
imul
leave
inc
mov
std
int
push
addr16
call
sub
cmpsb
nop
or
add
or
inc
pop
xchg
sub
loop
outsl
dec
popa
repz
xchg
push
ret
pop
mov
mov
out
hlt
scas
xchg
xchg
dec
notl
in
shrb
inc
rcll
jno
jne
jl
pop
les
pop
cmpb
sbb
ljmp
call
fcmovnu
sbb
jp
jne
xor
push
arpl
xorb
jmp
mov
out
mov
cs
inc
and
jne
xorl
imul
mov
xlat
loop
fcompl
pop
pushf
xor
mov
mov
or
mov
cmpsl
sbb
pop
mov
les
enter
imul
scas
dec
test
xor
pusha
fcmovnb
movsl
call
mov
stos
sub
jne
pop
mov
mov
rclb
mov
pushf
scas
sub
loop
insl
jl
push
das
orl
sub
cmp
rcll
loopne
xlat
aas
sbbl
mov
sbb
push
das
imul
add
push
cmp
sub
pop
mov
icebp
iret
mov
add
fdiv
hlt
pop
dec
jmp
sub
in
ljmp
or
jne
lods
inc
dec
lods
cld
pop
shl
jae
cwtl
push
xchg
cwtl
dec
std
mov
aam
test
dec
shrl
push
inc
xchg
pusha
lock
jnp
mov
jnp
sahf
jmp
mov
mov
adc
xchg
and
cli
inc
jbe
das
pop
loopne
test
imul
push
ss
pop
cmpsb
rcr
jne
xchg
rolb
mov
xor
mov
int3
stos
and
cmp
aad
stos
movsl
popa
mov
adc
add
fistpll
daa
ret
sub
dec
and
or
push
mov
sbb
and
jmp
jno
out
pop
xchg
xchg
cwtl
scas
shlb
jge
outsb
adc
jg
mov
out
es
movsb
inc
push
xchg
cmp
jle
or
es
xchg
pusha
stos
push
mov
push
in
and
jp
mov
lock
cmp
push
xor
sbb
inc
movsb
mov
or
fnstsw
or
jns
jnp
mov
xor
xchg
mov
cld
xchg
and
shr
pop
leave
ljmp
mov
ds
add
leave
inc
nop
fmuls
fstl
shl
xchg
jl
mov
push
jp
xchg
int3
pusha
cmpb
inc
iret
or
loope
xor
pop
ret
jg
pop
and
mov
cwtl
add
xchg
mov
adc
mov
call
jecxz
stos
mov
leave
mov
jle
lret
mov
mov
jne
cwtl
jbe
dec
les
adc
shrl
loope
ja
mov
jl
mov
cmp
sarl
int3
movsb
push
shl
push
push
jl
mov
or
nop
aad
pop
insl
movsl
push
push
mov
lcall
push
imul
inc
sbb
add
adcl
shrb
adc
cli
andl
shll
jae
xchg
sbb
hlt
rcrb
dec
adcb
dec
mov
sbb
outsl
xor
rcl
pushf
jmp
les
mov
insb
data16
sahf
int3
sub
movsb
test
and
mov
xor
jnp
push
ds
outsl
test
dec
jns
add
js
xchg
mov
mov
stos
jle
xlat
jp
sub
enter
jno
ret
cs
add
or
enter
and
sub
lods
les
ror
push
cltd
movsb
jae
ret
rclb
inc
inc
pusha
cmp
ficoml
xchg
push
pop
mov
cmp
xor
add
scas
adc
mov
jl
lds
mov
hlt
or
jne
xor
jge
mov
mov
jo
mov
mov
shrb
or
sub
inc
lret
add
adc
mov
adc
test
jbe
mov
std
ds
andl
pushf
sbb
jecxz
pop
adc
shll
jbe
or
mov
jge
mov
pop
mov
lret
jne
leave
hlt
mov
ret
stos
mov
sbbb
imul
int3
dec
dec
lret
in
popa
lods
dec
mov
ret
icebp
out
scas
movsl
mov
adc
das
xchg
adc
add
pop
lahf
xchg
out
add
mov
inc
mov
fsubrl
test
incb
rorb
jmp
sub
inc
push
inc
or
fbstp
popf
push
insl
inc
add
mov
push
loop
ret
frstor
adc
push
jmp
and
test
inc
leave
jp
addl
sub
fidivrs
push
aas
sub
pushf
add
mov
iret
push
lahf
sub
ja
xchg
fidivs
dec
adcl
or
mov
jg
and
add
outsl
aaa
pop
cmpsl
sub
and
arpl
shll
xorb
xchg
mov
mov
ja,pt
adc
popa
jne
dec
mov
pop
sub
pop
sbb
ja
out
jle
jp
sahf
mov
popf
adc
int3
push
jl
sahf
xchg
hlt
adc
cmpsb
das
xchg
incb
jne
or
or
cmc
xor
dec
jl
cmpsb
xchg
mov
fidivs
xor
lods
fsubs
cmc
in
rolb
mov
lds
add
inc
mov
stos
mov
cmp
mov
fimuls
jne
fisttps
add
mov
aad
mov
mov
rol
sbb
out
add
mov
andl
inc
push
cmpsl
hlt
out
call
aam
cli
repnz
jnp
lahf
xchg
dec
test
into
jg
xor
scas
fisttpl
inc
loope
pushf
lods
mov
inc
pop
jp
adc
xchg
rorb
leave
test
stos
pop
test
lret
ror
add
lods
mov
jecxz
movsb
es
inc
aam
or
in
sub
cld
and
sub
cltd
sub
arpl
movsl
popa
push
repnz
xchg
filds
jno
aam
xor
add
xchg
xchg
sarb
hlt
nop
sahf
xchg
fst
xlat
es
pop
jns
ja
loopne
out
push
dec
add
in
sub
add
jne
jp
mov
lret
xchg
mov
ja
stc
out
sub
sarb
pop
pop
add
out
out
ja
dec
pop
sub
pop
mov
lret
jl
pop
out
sub
or
imul
mov
mov
aad
stos
adc
jnp
repnz
ds
sub
mov
mov
into
jb
mov
xlat
in
dec
cmpl
out
push
ds
mov
sub
inc
push
push
xchg
enter
adc
jbe
pop
mov
in
jo
pop
mov
scas
or
mov
and
shl
insb
movsl
add
movsb
les
inc
dec
xor
sbb
dec
pushf
test
out
xchg
and
cs
mov
pop
pop
cmpsl
xchg
stc
pop
push
pop
out
cmp
xor
xor
ds
test
dec
pop
cmp
test
and
jecxz
adc
xchg
outsl
xlat
cmpsb
inc
scas
dec
arpl
mov
xchg
push
xor
pop
hlt
cwtl
push
xchg
or
popa
sub
pop
push
out
les
fcoml
enter
or
cmpsb
clc
push
and
popa
fcoml
push
mov
add
inc
add
std
decb
mov
jo
aaa
xchg
push
outsl
lcall
sti
test
xor
roll
clc
adc
pop
and
stos
in
pusha
jg
sahf
mov
test
lahf
sahf
cmp
data16
inc
sub
movsl
test
xor
push
adc
aas
les
cltd
cli
arpl
adc
mov
sbb
enter
dec
pushf
loopne
in
mov
insl
jo
loope
jecxz
mov
iret
jecxz
iret
fmul
mov
scas
sti
lret
leave
xorl
addl
fmull
js
mov
and
test
pop
fildll
movb
leave
loope
mov
insb
mov
pop
pop
lods
jl
cmc
sbb
add
lock
ljmp
js
add
push
mov
xor
addr16
jno
adc
movsb
push
lods
xor
xchg
xchg
xchg
inc
mov
je
sarb
mov
push
or
xorb
orb
adc
cmp
push
leave
mov
pop
cmp
and
jge
mov
sub
clc
ss
add
cmc
ficoml
xchg
xorl
inc
or
test
mov
mov
sub
mov
jne,pn
dec
pop
fmuls
test
pop
lcall
sub
loope
cwtl
mov
add
xchg
movsl
sub
mov
adc
xor
lcall
movsb
xchg
repnz
fwait
adc
test
les
xorb
mov
fwait
lea
and
adc
popa
test
xchg
mov
test
adc
pop
dec
mov
xor
outsb
out
cld
stc
push
stos
shl
fimull
jl
inc
adc
loope
mov
popf
add
xchg
sub
xchg
jl
jne
ficoml
imul
dec
arpl
or
int3
inc
pop
mov
xlat
movsl
mov
test
jne
adc
add
cld
popa
mov
cmc
mov
add
jns
and
js
in
xchg
jg
out
inc
pusha
pop
adc
cmp
loopne
xor
mov
out
aam
insb
in
cmp
insb
lock
lds
pop
int3
lods
xor
cmpsb
gs
out
pop
lods
inc
lds
loope
dec
ljmp
sub
or
incl
hlt
loopne
xchg
call
icebp
and
jne
ret
pusha
test
lock
fstl
aam
repnz
jmp
stos
dec
add
jae
fsubs
lods
cmp
mov
jg
dec
inc
push
pop
scas
ja
pop
nop
leave
lcall
popf
icebp
xor
je
and
into
pop
nop
sub
sbb
cmpsl
adc
push
sub
xchg
pushf
inc
sub
stc
inc
push
cwtl
inc
fstl
lcall
xchg
push
loope
ffree
roll
mov
sub
jp
subl
xchg
mov
and
pop
jno
jmp
roll
imul
fwait
lea
int3
mov
cmpsl
fisubl
xchg
pop
lahf
and
out
cmp
aas
xchg
inc
xor
pop
push
cwtl
mov
jne
cmpsl
test
shlb
int
mov
or
push
push
inc
shrb
lret
movsb
mov
push
das
sub
lret
nop
loope
cltd
xchg
sub
or
xor
outsb
inc
push
mov
gs
jle
inc
incl
int
sahf
je
pop
push
jl
or
pop
nop
stos
enter
aad
daa
outsb
dec
sbbb
or
scas
or
add
clc
mov
cld
mov
test
mul
inc
insl
mov
mov
xor
mov
mov
test
pop
outsl
repz
test
adc
pop
mov
test
or
cmp
inc
insl
jno
vhaddpd
mov
push
scas
xor
mov
ss
or
xchg
rolb
jge
fnstenv
mov
int3
call
mov
lods
jne
mov
sub
ds
mov
sub
or
int
rorl
aas
shl
mov
aas
cwtl
lcall
inc
and
sub
xor
lret
rorb
or
hlt
loope
push
lcall
push
xor
repz
hlt
rclb
std
decl
mov
and
cmp
mov
repnz
lea
or
popa
test
and
je
cmp
push
xor
pop
shrb
add
xchg
push
cs
xor
mov
or
fcomip
jl
pop
xor
mov
jmp
push
sub
inc
jge
mov
push
repz
rorl
jne
out
int
inc
push
jns
rolb
jne
xchg
add
insb
mov
lret
hlt
les
xor
leave
pop
sub
cli
outsl
les
scas
cmpsb
gs
inc
popa
nop
movsb
mov
mov
mov
mov
data16
mov
cmpsb
pop
xchg
dec
fsqrt
aas
test
push
or
mov
lock
loopne
mov
in
sub
jnp
cmp
mov
xchg
aaa
add
jmp
and
cwtl
and
jns
mov
sahf
mov
mov
push
ret
frstor
mov
out
inc
sub
dec
ret
enter
test
cs
mov
into
stos
jle
lahf
pop
leave
call
fdivs
mov
jl
rol
mov
fiadds
mov
popa
adc
jb
cmc
mov
mov
in
ds
lret
ljmp
rcl
hlt
mov
scas
ds
arpl
sub
inc
fs
fsubrs
test
cmp
fcompl
mov
out
addl
ljmp
inc
sub
ret
nop
jne
pop
ja
in
lret
ficoml
sbbl
aad
mov
inc
ljmp
adc
std
push
shll
leave
mov
xchg
cmc
mov
jecxz
pop
subl
xchg
cmp
lods
fcoml
adc
fisttpll
sub
nop
xor
push
fimull
daa
mov
push
imul
testb
scas
sbb
fimuls
xchg
imulb
mov
outsl
insl
xor
hlt
or
cli
jae
adc
push
lods
lock
mov
push
scas
inc
mov
and
xchg
in
nop
test
mov
test
or
dec
outsb
arpl
add
lock
hlt
sbb
fdivr
sub
add
jb
pop
mov
sub
add
rcrb
out
daa
jge
jno
mov
xchg
inc
cmp
test
jg
test
inc
fildl
dec
jmp
mov
addr16
dec
int
xchg
idivl
ror
mov
fstl
adc
test
enter
and
insl
add
add
fwait
aad
stc
pop
cmpsb
int3
add
loopne
push
add
jne
fsubrl
push
ret
xchg
cwtl
into
fldl
xchg
sbb
outsl
push
aas
mov
and
in
inc
add
cld
cmp
or
lret
add
inc
inc
jbe,pn
dec
or
sub
jle
push
cmp
out
out
mov
sbb
movsl
test
lret
sahf
dec
js
sub
ljmp
rcl
enter
sti
jp
jne
les
push
add
test
inc
adc
lock
jg
inc
shlb
lcall
mov
cmp
inc
and
mov
push
sub
push
repnz
divb
test
cmpsb
xchg
cs
jmp
add
mov
test
pusha
sbb
push
cwtl
xchg
shrb
aam
cli
aaa
movsl
enter
jge
movsb
in
cmp
repnz
jne
add
cmp
out
lahf
and
xor
lds
cmpsb
enter
cmc
lods
sbb
add
and
hlt
pop
fcomip
push
out
sub
rcl
push
adcb
xchg
inc
pop
push
jae
subb
in
cmp
fs
add
mov
jg
negb
inc
movsl
mov
dec
cwtl
push
jp
rcrl
cmp
mov
dec
cwtl
jns
xor
pusha
sahf
inc
mov
js
mov
dec
loopne
adc
cmp
mov
mov
in
data16
inc
lea
mov
cmp
push
test
and
inc
ljmp
dec
push
adc
xchg
into
dec
negl
push
movsl
xor
adc
cmpsl
cli
pop
sbb
test
movsb
ret
sbb
les
or
xor
add
cmp
fidivl
mov
fldenv
sahf
inc
in
sub
std
add
xchg
jae
sbb
mov
rorb
jae
pop
xchg
adc
daa
push
xchg
xchg
aam
mov
test
sahf
pop
hlt
rcrl
fstl
cmp
rcll
dec
xorl
push
pop
mov
pop
adc
jecxz
rcrb
ror
add
aam
mov
repz
std
push
sbb
das
jecxz
scas
test
adc
fisttpll
lock
test
mov
jp
popa
test
je
enter
sbb
or
fwait
lock
scas
and
sub
push
inc
test
jns
xor
stc
add
xchg
mov
popa
bound
inc
pop
xchg
mov
mov
pop
rolb
icebp
mov
loopne
sbb
roll
fildll
pop
lret
sub
mov
mov
and
push
lods
out
pop
push
xor
mov
cmp
dec
cmp
inc
dec
punpcklbw
outsb
mov
int3
enter
les
popf
stos
insb
inc
add
loopne
cmc
scas
and
enter
sub
divl
outsl
mov
or
cmp
xchg
push
cwtl
xchg
fnsave
jl
sub
or
inc
pop
dec
pop
repnz
enter
mov
cwtl
sub
aaa
hlt
mov
call
mov
add
adc
out
sub
call
xchg
sub
fbstp
cmc
inc
mov
sbb
dec
in
hlt
jbe
js
pop
enter
xchg
inc
movsb
sti
jno
jmp
fstpl
push
repnz
mov
rorb
pop
adc
imul
jmp
out
mov
jne
fadds
ss
or
add
call
xchg
jno
pop
jp
sub
dec
fxch
lahf
rcr
scas
insl
in
dec
adcl
movsb
sub
popa
dec
jle
add
mov
loopne
stos
les
pop
shlb
gs
lahf
in
mov
adc
mov
sub
lods
outsb
sbb
jl
fcomip
imul
aas
cwtl
xchg
arpl
push
into
out
cmpsl
push
jmp
int3
das
lret
mov
mov
mov
mov
mov
jecxz
or
push
push
push
inc
cmp
insl
jp
xchg
ja
repnz
fildl
stc
cmp
jmp
xor
sbb
movb
adc
pop
xchg
les
dec
cwtl
mov
dec
adc
and
jp
jnp
push
jmp
or
or
mov
imul
push
lahf
movsl
lea
pusha
jge,pn
rcrb
enter
enter
movsl
cmp
inc
repz
bound
cmpsl
cmc
add
pop
arpl
and
mov
adc
xchg
and
imul
in
lods
ficoml
inc
sbb
push
inc
lcall
xlat
lcall
mov
popa
xchg
cltd
sub
or
add
sbb
dec
popa
add
push
mov
cmpb
sarl
cmp
int3
push
sub
dec
fcompl
mov
sbb
imul
fs
popf
test
adc
inc
or
outsl
mov
add
frstor
testl
ljmp
jne
xor
lcall
xor
stos
mov
jne
jne
xlat
add
nop
mov
hlt
inc
shrb
dec
fstpl
or
nop
loopne
xchg
jmp
cmp
imul
push
test
fildl
push
pop
jg
sub
cmpsl
enter
lahf
mov
hlt
mov
test
jle
and
rclb
rclb
cwtl
inc
xchg
sbb
mov
jle
xor
loopne
stos
push
hlt
test
adc
or
mov
jge
mov
adc
jle
dec
mov
add
outsl
xor
es
mov
mov
ds
xor
cmp
pop
aas
popa
hlt
adc
sub
cmp
adc
ja
and
pushf
xor
popf
inc
imul
aas
insb
ss
test
jecxz
lret
mov
pop
xchg
fidivrl
cmp
or
test
or
hlt
and
push
push
sahf
mov
jno
test
add
jbe
xchg
jne
sbb
add
scas
push
mov
add
das
lods
loopne
cmpsb
push
test
inc
fidivrl
push
loop
stos
xlat
icebp
mov
cli
out
mov
adc
pushf
cmp
dec
fadd
cmpsb
sub
cwtl
sub
rcll
hlt
sbb
std
push
or
add
lods
add
mov
lods
inc
pop
jmp
inc
repz
mov
inc
mov
in
adc
jno
mov
cmp
xchg
inc
mov
test
jmp
les
mov
add
add
add
pop
jns
hlt
mov
in
cwtl
push
in
popf
and
ds
test
dec
arpl
test
hlt
cmp
popf
mov
movsl
xchg
dec
dec
fbld
add
cmp
push
sub
les
mov
aas
and
mov
mov
dec
cmp
pop
xor
sbb
fisubs
add
ja
cmp
icebp
mov
ljmp
cmc
das
jge
js
xchg
enter
gs
push
test
popf
andl
out
dec
cmp
call
add
xchg
mov
mov
enter
sub
xchg
roll
arpl
xlat
rcll
into
mov
insl
pop
je
sar
jp
scas
notb
aaa
or
repz
dec
popf
add
test
imul
mov
dec
das
dec
scas
in
arpl
add
aam
pushf
mov
jcxz
dec
stos
fsubl
into
pop
mov
out
sbb
add
xchg
add
pop
mov
je
mov
add
mov
int3
or
in
push
cmpsb
push
enter
xchg
push
mov
or
flds
pusha
jns
adc
sbb
shlb
xchg
pop
movsl
mov
sub
push
or
pushf
js,pn
pcmpgtd
insb
mov
arpl
mov
adc
or
dec
cmp
lea
jns
cs
fldt
xor
scas
pusha
adc
aam
es
arpl
test
pop
fcmovnbe
inc
and
or
push
adc
cmpsl
ja
mov
pushf
cmc
ja,pn
inc
out
xchg
aaa
repnz
cli
mov
push
movsb
or
inc
ret
add
clc
adc
cmp
jmp
mov
out
and
in
sbb
movsl
xchg
orl
pusha
out
lcall
dec
jbe
pop
dec
fs
mov
add
aas
leave
movsb
mov
fxch
cltd
es
pop
jo
and
mov
xchg
movsb
mov
and
add
sbb
movsl
adc
fsub
loopne
out
es
mov
inc
leave
data16
push
xchg
ss
scas
movl
push
xor
iret
sbb
ljmp
inc
or
enter
xor
test
jle
mov
sbb
jb
jne
gs
out
inc
inc
mov
test
adc
adc
mov
test
mov
mov
push
mov
fiaddl
insb
out
xor
sbb
xlat
aad
push
push
hlt
call
je
mov
inc
les
mov
popf
testb
rcrl
pop
mov
jmp
and
les
ficomps
lods
in
cmc
adc
lock
sub
ficomps
mov
and
stos
push
push
cwtl
mov
inc
xchg
ret
lock
scas
jmp
and
lret
inc
mov
xchg
sub
mov
insl
cmp
cs
mov
push
adc
cmp
xor
hlt
pop
hlt
lods
mov
test
mov
add
testb
outsl
dec
mov
pop
test
mov
add
mov
push
push
mov
aad
sub
stos
pop
add
inc
lods
into
insl
push
stc
inc
es
call
jne
inc
jle
das
neg
xorb
subb
mov
orl
mov
test
loop
sub
arpl
push
aas
arpl
xchg
or
sahf
push
popl
inc
stc
in
lods
jecxz
sub
hlt
aad
mov
fcmovnb
or
mov
xchg
mov
inc
inc
sbb
push
push
pop
sarb
enter
mov
jg
sahf
xchg
add
mov
fadd
dec
test
repz
pop
push
xchg
xchg
xchg
es
test
pusha
xchg
mov
pusha
int3
out
in
dec
mov
inc
add
jle
mov
jge
mov
test
xor
cmp
adc
push
or
aas
and
jl
mov
mov
loopne
enter
in
adc
mov
fs
mov
leave
leave
sub
insb
imul
pushf
fldcw
test
or
xor
stc
or
pop
mov
xor
ss
lcall
andb
popa
hlt
adc
jg
sbb
movsl
xchg
in
lcall
mov
into
test
data16
sub
pop
jge
pop
xchg
loope
test
enter
xor
cmp
ret
push
shll
popa
mov
add
pop
out
dec
sub
andl
jmp
inc
dec
pushf
xchg
repnz
mov
jmp
mov
or
iret
mov
cli
cwtl
pop
es
inc
imul
les
inc
lret
or
mov
out
inc
cmp
sti
mov
and
clc
adc
sub
inc
enter
add
inc
mov
es
jno
stos
dec
repnz
mov
fdivl
sub
push
jnp
das
out
mov
jl
sbb
add
sahf
mov
mov
inc
divb
pop
or
dec
dec
mov
cmp
lcall
mov
test
mov
into
mov
inc
pop
jl
mov
out
std
jmp
or
mov
adc
aas
add
jns
mov
stc
or
pushf
scas
ja
pop
lock
imul
jmp
jae
adc
mov
repnz
fisubs
jle
loopne
dec
ja
jecxz
adc
int3
iret
scas
pop
scas
movsl
movsl
fcoml
stc
test
in
mov
mov
popf
add
popf
xchg
fsts
mov
je
cs
popl
jbe
repz
outsb
and
lods
fisttpll
adcb
and
ret
imul
sti
pop
dec
sbb
call
xchg
mov
pop
repnz
in
mov
hlt
cwtl
jae
mov
shll
movsb
mov
xchg
inc
into
mov
testb
sahf
inc
call
mov
shr
popl
pop
mov
and
fcomip
cmp
push
scas
clc
loopne
mov
and
pop
sub
and
dec
lret
dec
push
and
and
lock
call
cmc
into
xchg
push
cmp
jo
scas
enter
sub
lret
cmpsl
xor
imul
imul
out
mov
mov
lea
adc
add
iret
jo
test
test
dec
cmpsl
push
or
shll
and
pinsrw
outsl
movsl
adc
loope
lods
inc
mov
push
movl
outsb
stc
shrb
inc
jge
xor
mov
sub
mov
push
xchg
add
jne
aad
pop
in
mov
and
fdivs
cmp
mov
dec
cmpsl
or
lods
dec
movsl
inc
add
cmp
rclb
in
inc
mov
test
push
mov
add
mov
clc
inc
sbbl
hlt
sbb
movsb
adc
sub
outsl
push
addr16
lods
test
mov
aam
inc
mov
xlat
mov
pop
out
pop
mov
es
ret
mov
mov
jecxz
sub
pop
adc
stos
cmpsb
lods
roll
hlt
cmpsl
mov
fstp
mov
rol
dec
cmp
outsl
shrl
cmp
and
inc
shl
mov
xor
pop
std
and
stos
test
sub
adcl
rclb
jge
scas
shl
popa
or
sbb
lods
ljmp
shl
mov
xor
mov
leave
insl
pop
clc
sub
lcall
sub
adc
pushf
mov
es
addb
call
or
cli
fndisi(8087
or
lret
rcrl
push
sti
das
or
mov
hlt
fisubs
mov
push
test
mov
xor
cmp
in
hlt
jno
pop
cmpsl
add
push
gs
enter
imul
divb
inc
out
mov
mov
sbb
fldl
inc
out
dec
add
jo
cmp
fistpl
cmp
aad
divb
outsl
mov
adc
fidivl
aad
jp
ret
add
mov
add
adc
cmp
push
enter
pushf
and
mov
inc
stos
jl
rorl
add
adc
das
leave
sub
mov
cli
mov
mov
add
push
push
lcall
test
cmpsb
mov
or
jge
jmp
in
xchg
scas
sti
shl
pushf
hlt
into
xchg
add
xor
or
lahf
mov
push
jp
sbb
mov
pop
movsl
test
mov
add
in
pusha
ret
mov
cwtl
sbbb
les
enter
mov
das
inc
test
sub
or
popf
pushf
leave
test
add
in
insl
pop
xchg
loop
and
mov
cld
lret
fwait
dec
add
lds
cmp
fnstenv
das
and
repz
jle
mov
dec
scas
jbe
js
jns
cwtl
sbb
lods
jne
jae
out
xlat
test
sub
inc
shll
cli
xor
jne
cmp
rolb
dec
stos
repnz
jmp
sbbl
sbb
sub
xchg
mov
mov
jae
sbb
nop
fists
call
pusha
push
push
stos
cld
add
dec
stos
idivl
add
sub
sti
addb
jmp
xor
mov
cmc
flds
add
es
xchg
xchg
add
jo
push
sbb
xchg
mov
inc
test
pop
ret
xchg
sub
fstps
les
mov
jne
sbb
or
xor
xor
in
lret
cmp
mov
outsl
cmpsl
andb
shrb
inc
loopne
inc
and
in
xchg
enter
inc
shl
test
lock
push
out
add
mov
jo
dec
adc
pushf
fstl
lock
mov
sub
xor
push
fsubl
mov
mov
adc
add
inc
ficomps
inc
gs
pop
adc
ss
cli
mov
cmp
popa
pop
into
lahf
int3
inc
add
lods
adc
jnp
xor
add
pop
lret
mov
fadd
mov
hlt
cmp
mov
addl
bound
mov
scas
out
lea
jmp
stos
cli
sub
aad
es
adc
pop
les
pop
mov
mov
lods
push
faddl
rcrl
shlb
mov
test
ret
sbb
test
mov
lods
xchg
sub
adc
mov
cmp
bnd
nop
jge
add
xchg
fcompl
add
call
ret
hlt
popf
mov
inc
mov
mov
orb
inc
mov
jbe
dec
push
subb
test
pop
iret
adc
mov
std
rol
add
sub
ficomps
stc
dec
mov
cwtl
mov
dec
jmp
mov
adc
andl
xchg
add
sbb
xor
in
or
cld
or
xchg
cmpsb
inc
pop
cmp
push
mov
mov
lods
fdivrl
imulb
xchg
scas
add
xor
dec
sbb
mov
jnp
ss
xchg
mov
in
inc
sub
rol
popf
ret
push
les
enter
test
in
push
or
pop
sub
push
jp
push
int
lods
es
lods
leave
dec
call
or
shll
sbb
or
or
sbbb
ds
outsb
int3
out
xor
jne
and
push
arpl
mov
rorb
mov
inc
or
dec
aas
sbb
push
push
adc
sbb
adc
out
xor
mov
int3
and
and
add
sbb
lcall
stc
fadd
jle
outsb
xchg
jmp
dec
and
pop
jmp
addb
push
rolb
adc
lret
js
add
inc
adc
ret
popa
jne
mov
xor
mov
in
add
mov
push
rcll
cwtl
out
sub
add
pop
xor
dec
jns
push
sub
inc
data16
jl
jo
popa
cmp
dec
fst
or
pop
mov
and
mov
gs
sahf
sarb
mov
mov
fnstcw
xchg
inc
out
xlat
bound
pop
es
call
mov
dec
test
inc
test
ret
add
adc
cmp
out
gs
mov
nop
jp
jo
mov
mov
hlt
sbb
sub
jmp
jb
nop
fs
mov
mov
mov
push
loopne
fcmovne
lds
aad
orl
and
adc
cwtl
cmp
jne
adc
xchg
into
hlt
mov
pop
movsb
add
push
jns
inc
in
movsb
mov
xchg
or
mov
jecxz
xor
test
sub
stc
movsb
xor
xchg
out
sub
cmp
jb
jp
mov
mov
sbb
rcrb
push
scas
cltd
loop
inc
pop
daa
mov
mov
cmpl
test
pop
mov
and
jge
daa
nop
stos
loope
mov
pop
pop
icebp
jno
outsl
add
loop
vmwrite
jb
mov
push
dec
enter
test
clc
sub
sbb
or
cli
xor
pop
fstpt
dec
inc
add
or
cmpsb
pop
pushf
fs
aaa
pop
mov
dec
mov
lods
push
pusha
out
mov
into
inc
sbb
or
inc
lds
sub
push
dec
arpl
test
mov
pop
mov
insb
int
and
outsl
and
or
push
or
aam
gs
loope
repnz
xorb
jns
cmp
sarb
or
adc
hlt
jns
scas
pop
add
out
imul
adc
mov
xchg
shl
mov
mov
xchg
sub
bound
stc
xchg
test
push
in
inc
ja
mov
outsl
mov
test
adc
xchg
adc
lock
mov
pop
data16
mov
testb
or
in
push
aas
cs
push
stc
sub
jecxz
jle
aad
dec
jne
insl
fs
lcall
out
cmp
roll
mov
jle
jnp
fdivr
call
dec
int
fcom
out
test
mov
push
cmp
mov
int3
mov
das
xchg
sub
adc
sar
ljmp
and
pusha
in
pop
xchg
lcall
loop
mov
mov
mov
xor
rol
add
imul
lret
loop
xor
dec
addr16
cli
out
rorb
stos
add
sub
lahf
fucomi
mov
loope
rcrb
or
sbb
cmc
sbb
xlat
data16
andb
pusha
xchg
nop
sub
mov
into
pop
adc
xor
pop
and
daa
jb
hlt
fucomp
mov
mov
adc
out
shrb
mov
jbe
mov
or
inc
je
mov
sbb
xchg
js
mul
int3
pushf
ss
inc
or
cmp
add
int
or
pop
jnp
sbb
xchg
jg
adc
in
add
stos
add
cli
push
sbb
xor
int
mov
jle
xor
scas
mov
mov
divb
test
jge
cmpsb
cmpsl
and
test
shll
aad
mov
inc
fisttpll
repz
push
loop
add
mov
cmc
dec
and
adc
aam
cwtl
jns
test
inc
mov
mov
daa
add
jmp
std
inc
in
push
dec
scas
les
arpl
push
lea
scas
movsb
and
rclb
repz
xchg
ljmp
push
inc
jne
push
xchg
or
inc
push
divb
lret
enter
pushf
rcl
mov
inc
push
outsl
mov
shrb
sub
xor
or
movsl
mov
add
iret
cmp
xor
adc
or
jbe
cli
inc
pop
sub
cmp
outsb
cs
adc
jmp
pop
jbe
fs
mov
jne
cmc
or
jne
push
jnp
jle
in
in
mov
mov
call
add
test
dec
cltd
pop
xchg
data16
repnz
push
testb
popf
and
mov
fbld
int
enter
shlb
or
jae
pop
xchg
popf
rcrl
rcrb
dec
jne
in
or
mov
dec
stos
sti
mov
iret
mov
jle
jecxz
in
mov
enter
hlt
repnz
mov
das
xor
push
jl
mov
dec
push
in
fsubl
arpl
rorl
inc
shl
ret
shrb
int3
mov
xchg
jmp
test
jnp
push
les
or
mov
test
mov
xor
hlt
cmp
sahf
rorb
add
sub
in
cwtl
daa
xor
mov
mov
adc
ljmp
out
adc
push
adc
into
out
es
repnz
aad
mov
mov
insb
sub
rorb
test
pop
push
rorl
cmp
mov
call
nop
lahf
scas
sbb
xchg
das
mov
or
push
stos
ds
or
cmp
pop
inc
es
insl
cld
or
aad
pop
test
sub
or
mov
adc
mov
out
adc
cmp
jns
hlt
outsl
mov
jo
dec
cmpsl
jne
enter
sub
xchg
adc
fisttpl
jne
addl
cmp
add
rorl
loopne
movsb
ljmp
shlb
sub
nop
mov
cmc
pop
cmpsb
aas
push
out
cli
push
pop
enter
movsb
movsl
testl
mov
iret
xchg
mov
xchg
xor
mov
mov
in
xchg
or
push
adc
dec
xor
cwtl
xchg
stc
pop
lods
cwtl
add
mov
pop
int3
aad
ss
loop
sub
jno
push
inc
jnp
cmp
pop
inc
or
pop
aam
mov
xchg
dec
in
xchg
cmp
lds
outsl
shlb
jle
cs
mov
inc
ret
add
xlat
mov
mov
adc
mov
hlt
cld
lret
addb
ss
int3
mov
cld
cmpsl
jle
push
jo
ja
int
loop
xchg
popa
jecxz
fmul
insl
loope
jmp
subl
into
fcomip
lcall
shll
out
popl
jne
pushf
xchg
subl
pop
movsl
mov
popf
mov
or
jmp
imul
jno
fbstp
add
roll
jp
in
scas
cmc
movsl
test
insl
nop
outsb
jg
hlt
xchg
dec
cmpl
xchg
outsb
mov
mov
or
adc
jne
mov
xchg
lock
int3
cwtl
pop
je
out
mov
inc
inc
out
clc
mov
test
jne
mov
es
push
cmp
dec
outsb
mov
inc
sar
nop
push
push
ficomps
stos
jp
mov
mov
int3
push
xchg
int
cli
push
lahf
mov
sub
dec
cli
mov
pop
lret
sbb
outsl
dec
add
mov
andb
jo
xchg
icebp
pop
push
ret
aas
rorl
lret
sar
mov
jne
push
mov
scas
or
in
shll
andl
pop
int3
out
popa
rcr
jle
gs
xlat
popa
pop
mov
mov
dec
movsl
hlt
and
fcomip
sub
hlt
sub
ljmp
xor
xor
sbb
ljmp
in
addb
in
push
xor
mov
inc
enter
and
jl
mov
cmpsb
mov
out
test
test
int
fadds
mov
mov
or
aas
dec
mov
inc
mov
inc
rcll
mov
test
mov
rorb
fnstsw
pusha
nop
and
sbb
imul
mov
dec
xchg
in
fcoms
adc
push
adc
ljmp
lret
popf
outsl
fisttpll
push
ja
sbb
insl
push
add
hlt
mov
mov
out
xchg
dec
imul
nop
ja
xorl
insl
addr16
cli
push
inc
xor
xchg
cltd
mov
adc
dec
icebp
iret
sub
xor
test
xchg
dec
cld
clc
pop
sahf
into
in
dec
loope
add
push
outsb
mov
xor
inc
pop
pop
mov
cmp
sysexit
xchg
xchg
jne
movsl
ds
xor
and
push
int
mov
and
hlt
mov
aas
cmpb
repnz
xorb
repz
lock
add
and
xorb
orl
shll
rcll
out
push
fsubr
seta
push
stos
les
or
push
lods
push
lcall
ss
jae
outsl
jmp
sub
inc
leave
loop
scas
dec
jmp
faddl
ss
leave
mov
sbb
out
int3
gs
mov
negb
cmp
sbb
pop
xorb
mov
arpl
loop
enter
mov
arpl
inc
in
mov
mov
bound
test
jo
nop
shll
xor
fcmovu
xor
out
and
sbb
jne
cmpsb
mov
add
jne
pop
mov
cmp
and
xchg
lea
sbb
movsl
aam
add
jnp
pusha
aam
cmp
les
test
adc
or
filds
hlt
add
repz
xor
jo
in
dec
int3
jl
mov
insb
lea
mov
jg
inc
inc
xlat
repnz
fbld
icebp
sbb
jg
cmp
rcrb
inc
mov
jne
adc
mov
divl
adc
std
fisubs
outsb
enter
das
xchg
sbb
dec
mov
jl
jge
cmp
nop
adc
jb
pushf
bound
inc
adc
jne
mov
xlat
inc
mov
mov
cmp
fidivrs
enter
popa
push
int
mov
or
mov
pop
pusha
cwtl
jg
fdivl
xor
sub
pop
not
cmp
push
popf
pop
lods
inc
test
testb
mov
insb
adc
add
dec
sub
test
pop
xchg
inc
xchg
mov
xor
xor
push
popa
jne
xchg
mov
mov
movsl
mov
test
icebp
pushf
mov
leave
mov
sub
inc
jno
cltd
outsl
mov
ss
lods
pushf
lods
cmp
add
call
addl
mov
sti
adc
lret
xlat
pusha
mov
dec
push
or
add
dec
mov
jb
mov
add
pop
jns
pop
shlb
and
inc
dec
movsl
leave
mov
sub
stos
dec
sar
mov
sete
gs
cwtl
lret
daa
lods
sti
enter
sub
push
pop
mov
popa
or
fs
pop
jo
sti
loopne
in
mov
mov
cmc
data16
mov
fimull
mov
jne
inc
insb
mov
mov
out
mov
imul
and
xor
test
adc
push
insl
bound
cmpsl
and
ss
jns
subl
popa
xor
scas
dec
or
dec
movsb
sar
inc
sub
pop
dec
movsb
add
lahf
pop
jae
add
push
push
dec
sbbl
jp
fucomi
test
add
cs
sub
push
inc
and
sbb
sbb
xor
loopne
hlt
out
xchg
fiaddl
jg
jne
pop
movsl
hlt
adc
xchg
jbe
add
imul
daa
xorl
cwtl
push
lods
pop
mov
jle
aad
adcl
xorb
stos
push
std
repz
enter
add
jne
bound
jne
cmp
xor
mov
je
mov
bound
das
inc
cmpsl
push
push
out
test
jle
inc
mov
and
pop
ljmp
repz
sbb
scas
clc
pop
in
inc
xchg
push
sbb
ret
cltd
cmpsb
jl
stos
pusha
xchg
cmc
jl
jmp
enter
outsl
jne
inc
jmp
pop
shlb
inc
pushf
or
loope
dec
dec
and
xorb
loop
and
outsb
subb
pop
pop
loopne
mov
mov
outsl
jno
push
or
outsb
and
push
outsl
push
mov
cmp
push
jg
gs
xchg
loop
xlat
ret
lds
or
push
push
nop
mov
fldl2e
popl
mov
lds
out
lods
sbb
cmpsb
mov
pop
call
sbb
adc
les
mov
out
inc
incb
test
adc
pop
jns
ret
sub
cmp
lods
sub
push
adc
call
mov
aad
jns
pop
decl
mov
sub
leave
enter
add
push
cmp
add
subl
push
or
fdivrl
lret
xor
roll
insb
sub
pop
xlat
inc
inc
cs
xorb
add
std
out
xlat
xchg
fwait
enter
std
test
roll
pop
cmpsl
add
dec
scas
lret
mov
dec
cmpsb
mov
jge
fistps
mov
push
inc
in
mov
add
fisttps
movsl
pushf
js
mov
pop
jbe
mov
cmpl
mov
jge
pop
out
scas
test
rcrb
ret
popa
and
xor
pop
outsb
mov
dec
hlt
pop
out
subl
imul
mov
pop
mov
add
mov
data16
nop
cwtl
mov
movsb
or
stos
fimuls
jne
test
add
inc
rolb
mov
and
mov
xor
imulb
movsl
mov
dec
aaa
cmp
stc
push
mov
test
mov
scas
sahf
movsb
pop
push
inc
mov
nop
inc
cmc
mov
dec
pop
jae
std
mov
xchg
mov
lret
inc
xlat
add
mov
dec
fnsave
lds
pop
dec
loop
popf
jne
pop
add
dec
adc
dec
jmp
popa
inc
adc
aad
push
dec
and
inc
sbb
ret
mov
in
sahf
add
jne
mov
pop
push
movl
sbb
fisttpll
jns
lret
pusha
xlat
dec
dec
xlat
stos
push
sbb
js
push
fsubrl
add
xor
or
pop
pop
sti
shl
nop
pop
jmp
dec
xor
mov
xchg
cmc
notb
dec
jecxz
xor
push
sti
inc
add
jle
inc
jle
mov
int
push
xchg
shl
imul
dec
jg
cmpsb
mov
lods
jno
xchg
jle
push
inc
adc
sub
jmp
add
mov
dec
xlat
mov
pop
dec
push
outsl
xchg
lret
loopne
sub
hlt
iret
gs
mov
dec
adc
push
mov
pop
mull
mov
inc
rcr
decb
imull
or
es
out
test
inc
aad
mov
push
pop
xchg
push
pop
jecxz
movsb
mov
notb
xor
dec
mov
scas
lahf
mov
push
jmp
fildll
pop
insb
xorl
test
lcall
push
icebp
mov
inc
dec
add
xchg
and
mov
cmp
jne
addb
mov
mov
fnstcw
dec
add
cmp
scas
test
fistl
or
add
adc
int3
pop
arpl
lock
icebp
xchg
dec
in
jmp
lock
pop
in
dec
mov
add
aaa
sub
enter
adc
test
stos
shlb
daa
mov
add
aam
pushl
add
in
add
iret
add
inc
xor
ds
push
shr
pop
add
lret
dec
stos
dec
inc
pop
adc
clc
pop
rcrl
shlb
pop
jl
jnp
ret
adcb
andl
dec
xor
inc
mov
test
mov
movsb
push
mov
inc
test
fnsave
scas
push
jmp
xor
xor
clc
clc
fsubrs
jp
xchg
dec
pop
ljmp
add
test
pop
mov
in
pop
das
add
mov
lds
ret
inc
les
mov
adc
xchg
xor
mov
cmp
add
or
pop
sti
push
fstl
loope
push
xorb
and
inc
or
bound
das
xchg
xchg
add
int3
pop
pop
pop
mov
dec
and
cltd
sub
enter
push
lcall
add
sbb
mov
xchg
orl
adc
pop
mov
enter
lahf
mov
fistps
dec
fistpl
inc
or
cmp
push
lds
fisubrs
int
loop
gs
xor
xorl
shll
and
out
push
cs
cmp
cmp
dec
test
fisttps
int3
ret
adc
popf
mov
mov
test
loop
pop
pop
fimuls
lahf
sub
add
sub
mov
test
jbe
in
sbb
mull
mov
cli
pop
iret
pop
and
mov
rcl
out
jbe
xor
dec
ds
fstl
mov
or
xchg
mov
xorl
not
aaa
in
lea
fsubrp
dec
testl
dec
sahf
add
jmp
mov
dec
stos
mov
and
ss
jge
sahf
lret
fiaddl
filds
mov
loopne
es
mov
jne
push
xchg
leave
cmpsb
and
std
lods
popf
fcompl
cmp
test
sub
mov
jne
stc
cmp
nop
jnp
adcl
or
ret
xor
dec
sub
push
xchg
pop
xchg
inc
nop
ljmp
shlb
cltd
mov
dec
fs
xchg
cmp
or
sti
loope
xchg
flds
inc
andb
aad
leave
jns
es
push
stos
pop
out
adc
push
stc
mov
push
hlt
loopne
dec
cmpb
faddp
xor
mov
fisttpll
lahf
dec
xorb
inc
jnp
push
inc
inc
xor
lods
and
cwtl
repnz
dec
test
sbb
push
pop
in
daa
add
jno
adc
cs
pop
pop
stos
lahf
les
xchg
loop
les
les
xchg
sti
call
or
rorl
pop
shlb
inc
ret
stos
push
add
cmp
mov
je
ficomps
push
hlt
fmull
adc
pushf
or
dec
je
movsl
mov
jle
add
sub
out
add
call
filds
pop
loopne
jns
jbe
sbb
rolb
hlt
sub
pop
ds
mov
mov
negl
hlt
mov
enter
mov
ss
sub
jns
or
int3
fs
mov
ret
or
lahf
hlt
cmp
dec
add
sbb
imul
or
dec
es
imul
cwtl
mov
lods
jb
ja
test
sti
movsl
stc
xlat
gs
mov
jmp
in
mov
rcll
cmpsb
int
add
push
xchg
xor
mov
insl
repnz
xorb
add
cmp
lcall
in
ret
movsl
out
cmp
mov
fisttpl
push
rol
pop
lret
les
cmp
or
into
repz
push
inc
mov
xorb
mov
and
sahf
pop
fldenv
loop
mov
clc
pop
arpl
je
sahf
dec
sub
mov
loopne
lret
lds
push
cmp
xchg
lock
stos
pusha
jae
std
fadds
xchg
cmpsb
jb
sbb
cwtl
xor
or
mov
insb
push
adc
xor
dec
xchg
mov
jl
imul
movsl
push
lods
and
ss
inc
cmpsb
adc
mov
stos
mov
add
xor
cmpsb
mov
enter
dec
adc
cli
out
jg
rolb
cmpsb
xchg
cmpsl
dec
scas
in
sub
sbb
cltd
clc
jle
cmp
vunpcklpd
dec
stos
mov
orl
lds
ret
xorl
ja
dec
movl
hlt
bound
mov
mov
add
int
sub
mov
or
in
orb
loopne
sub
push
dec
fnstsw
mov
mov
mov
xchg
mov
inc
les
xor
test
mov
cs
and
sub
ret
adc
fsts
push
xor
fidivl
sub
xor
or
adc
sub
adc
adc
ret
adc
push
and
adc
mov
inc
mov
or
push
insb
jp
subb
pop
sbb
ret
cmc
mov
repz
jne
xchg
adc
pop
dec
push
gs
inc
and
inc
mov
mov
lods
mov
movsb
jo
leave
adc
rorl
jmp
ret
lret
enter
ja
xchg
sbb
push
jns
sahf
xchg
es
jne
sub
jne
or
xor
aas
xor
jae
add
leave
xor
mov
mov
dec
cs
mov
inc
in
sbb
leave
cmp
mov
es
cmp
ss
xor
push
fs
add
imul
imul
fnstenv
shlb
jb
add
stos
imul
or
fbstp
shll
pop
mov
fsts
sbb
or
insl
out
mov
stc
dec
xor
dec
and
pop
cmp
mov
jp
leave
lret
cmp
xor
push
lock
nop
xchg
stos
inc
dec
lret
cld
ret
xchg
dec
or
scas
into
fnsave
pop
mov
sbb
xor
add
imul
sub
addl
mov
jnp
add
popf
mov
in
adcl
cmp
and
jecxz
mov
andl
pop
aam
pop
or
mov
push
mov
mov
js
cltd
xor
push
add
xchg
ret
outsb
sub
fbstp
pop
int
xchg
push
push
jb
or
add
sbb
jmp
repnz
dec
cmp
pop
xchg
andl
inc
repnz
es
mov
push
jne
dec
mov
test
in
les
jecxz
lcall
in
adcl
add
faddl
or
sbb
jbe
outsl
aas
xor
hlt
mov
xorl
ljmp
repz
addl
adc
cmpsb
aaa
xor
pop
mov
lock
sub
dec
jnp
and
cmp
lea
stc
cmp
outsl
shr
pop
xchg
jne
movb
dec
xchg
shrb
push
test
lret
jne
sub
jns
shlb
dec
stc
test
cmp
mov
mov
xor
adc
call
xor
test
xchg
push
xchg
das
push
dec
mov
loopne
jne
out
add
sbb
ret
hlt
fwait
dec
lcall
or
movsb
or
in
rorl
push
xchg
add
mov
cmpl
or
js
into
das
hlt
cmp
adc
jmp
mov
enter
inc
lret
hlt
adc
iret
and
andb
cmc
fisttpll
hlt
repnz
pusha
out
jp
inc
and
clc
rorb
push
pop
adc
sbb
in
leave
mov
or
adc
pop
into
mov
mov
fistps
pushf
in
cmp
and
adc
cmc
insl
insb
pop
mov
jecxz
iret
scas
lock
inc
mov
mov
jge
xchg
mov
push
cltd
jp
das
out
push
mov
adc
call
outsb
inc
or
ss
add
xor
int
mov
js
stc
in
add
mov
lock
jns
xchg
xchg
dec
inc
nop
xor
pop
lret
pop
aad
repz
mov
sbb
shrb
bound
push
hlt
pop
shrl
mov
jne
lods
mov
and
sub
shl
dec
sbb
add
xor
sub
sub
out
push
sub
lods
in
subb
int
xchg
dec
xor
jne
cmp
scas
add
push
adcb
pop
imull
pop
scas
ja
mov
or
xchg
jbe
gs
push
inc
popf
fsts
mov
ret
into
shrl
and
mov
dec
mov
fiadds
mov
hlt
adc
addb
adc
rcl
push
inc
je
out
xor
lret
inc
adc
mov
in
cli
das
dec
cmp
pop
in
and
ffreep
mov
dec
inc
leave
pop
adcb
xor
cltd
inc
into
nop
mov
rep
fisubrl
subb
and
or
cli
stc
mov
fiaddl
pop
repnz
insb
jbe
std
pop
cli
jno
mov
mov
inc
mov
jnp
mov
push
ja
add
idivb
fnsetpm(287
dec
lods
ret
dec
add
rol
and
and
ds
lret
mov
mov
xchg
movsb
dec
loop
cmpsb
jg
xchg
das
mov
lods
cltd
sti
ss
pushf
sbb
add
jo
and
mov
inc
mov
cli
cs
fsubrl
mov
cmc
lret
bound
jg
adc
sti
jmp
xor
mov
popw
xor
scas
add
repnz
rol
jae
mov
out
shrl
jl
incl
inc
mov
in
jns
lahf
ss
mov
jb
data16
mov
pop
lcall
clc
sub
and
stc
pop
adc
mov
fs
mov
cmp
nop
or
js
mov
cmpsl
sahf
js
pop
inc
dec
stc
add
jne
xchg
xchg
cmp
and
adc
cltd
cmp
std
jmp
xchg
mov
xchg
jg
call
xchg
mov
pop
out
xorb
dec
outsl
mov
not
fidivrl
pop
inc
cli
mov
dec
repz
jne
push
cmpsl
mov
push
dec
insl
mov
fiadds
inc
lods
mov
sub
and
cmp
imul
push
fsubr
bound
ret
mov
lret
jb
nop
sbb
add
fldcw
cmp
fisttpll
jle
pop
lcall
jp
lret
push
icebp
push
sub
jne
mov
mov
jne
xor
fldt
inc
dec
popa
push
xchg
fdiv
push
iret
int
inc
into
dec
int
push
shr
push
mov
sub
lret
stc
jb
xchg
mov
sbb
and
jp
mov
pop
or
cli
insb
enter
int3
nop
cmpsl
stos
add
mov
dec
stos
fldenv
inc
dec
mov
add
jecxz
sub
mov
jl
sub
popa
sbb
or
into
gs
lahf
aam
stc
scas
cmp
xchg
test
adc
scas
das
xorl
pop
inc
pop
insl
adc
jne
pop
sahf
sub
xchg
aam
lret
sbb
jge
mov
jmp
aam
stos
mov
mov
jle
sbb
mov
out
push
mov
int3
jg
je
push
in
flds
aad
xchg
mov
and
popa
add
mov
or
movsb
push
dec
push
fisttps
fidivl
xchg
es
cwtl
mov
movsl
dec
dec
inc
shlb
lods
hlt
lret
test
inc
rorb
roll
subl
push
mov
mov
xor
mov
xlat
stc
mov
pop
hlt
xchg
popf
flds
mov
popf
mov
sub
cltd
scas
popa
adc
sbb
adc
das
cmp
iret
gs
sbb
inc
inc
inc
mov
xchg
push
adc
leave
arpl
movsb
mov
pop
or
fldt
pop
mov
outsl
mov
in
rol
push
adc
fistpl
shl
mov
sbb
int
inc
adc
dec
arpl
cmpb
call
int3
inc
enter
adc
inc
inc
aas
mov
sub
outsb
jge
test
aas
shll
push
leave
ret
outsb
lahf
pop
mov
mov
jg
or
adc
jge
faddl
xchg
popf
in
xchg
jne
dec
ss
inc
ficoml
nop
or
or
cs
fs
shl
js
lods
leave
notb
fwait
bound
into
sub
ljmp
sbb
repnz
sbb
or
xor
insb
adc
lcall
or
push
mov
lcall
test
hlt
std
mov
lock
int
scas
jbe
decl
icebp
arpl
sub
cmp
push
fmulp
xchg
imul
rol
push
adc
hlt
enter
ret
inc
add
mov
mov
jmp
addr16
xchg
sbb
sbb
xor
cld
jo
fsubrl
outsb
dec
xchg
mov
dec
cmp
add
dec
mov
cmc
into
sub
push
or
add
mov
subl
mov
sbb
xchg
popf
jns
pop
push
pop
fs
jg
xor
les
mov
xor
adc
and
das
ret
pusha
pop
dec
adc
ss
mov
xchg
call
or
std
cmp
dec
mov
call
xchg
std
pop
in
cmpsl
mov
mov
fdivr
push
movsl
push
mull
jge
add
jae
add
cmp
aaa
insb
push
or
ljmp
cld
pop
adc
mov
push
nop
dec
push
add
sub
fisubs
or
add
cmp
inc
mov
ss
mov
jae
inc
leave
pop
push
mov
andl
mov
test
es
jae
dec
push
xchg
pushf
hlt
in
add
mov
ror
mov
fnstcw
popa
orl
cmp
mov
push
lea
das
adc
lret
inc
xchg
pop
dec
idivb
insb
and
popa
imul
lcall
leave
pop
add
repnz
sub
jne
xchg
add
repz
jne
ds
fcoms
sbbl
fcomip
add
hlt
dec
mov
outsb
add
loope
xchg
mov
cwtl
jne
push
shrl
lods
xor
enter
xchg
mov
mov
sub
inc
mov
test
psllw
mov
jbe
enter
pusha
adc
enter
scas
addr16
lcall
inc
jle
decb
cmpsl
aad
add
movsl
cmp
inc
cmpsl
adc
push
sti
call
sub
mov
fdiv
cwtl
adc
pusha
inc
adc
adc
pop
dec
fildll
mov
pusha
enter
hlt
xchg
hlt
repz
stc
mov
das
loope
dec
enter
pop
nop
push
push
aam
xorb
roll
sarl
mov
fcmovb
xchg
pop
out
sub
cmc
pop
add
add
out
mov
out
lea
popa
lods
xchg
add
inc
cmpsb
and
imul
and
push
outsl
fstl
ss
idivb
aam
pushf
jb
out
dec
faddl
pop
gs
loop
jae
out
frstor
jne
ret
leave
mov
loopne
dec
jecxz
jle
and
and
syscall
pop
mov
and
insb
mov
flds
repz
popl
lock
adc
xchg
imul
rorb
jno
cmp
xchg
pop
fidivl
xchg
mov
dec
mov
in
insl
xor
lret
jle
call
mov
inc
push
cs
popf
mov
pop
imul
push
mov
cltd
pop
mov
stos
jae
mov
xorl
push
sub
inc
xchg
pop
sbb
leave
cwtl
mov
ds
mov
loope
test
mov
mov
xchg
aam
inc
insl
in
mov
and
cmp
movsb
jbe
mov
xor
jg
les
arpl
in
mov
lret
in
pop
xchg
xchg
mov
mov
mov
adc
dec
cmc
imul
cmp
arpl
mov
sub
hlt
scas
test
movsl
stos
cmp
push
aad
js
inc
mov
pop
mov
and
in
pop
xchg
push
jecxz
lahf
ror
adc
loop
nop
sbb
mov
or
fstl
loope
shl
stos
test
sub
das
or
pop
xchg
sahf
xchg
int
push
mov
and
in
and
xchg
xor
lahf
pusha
mov
andl
mov
outsl
fwait
mov
insl
jno
aam
rcrl
aas
jecxz
movsb
in
out
dec
ljmp
das
xchg
pop
mov
and
sbb
xlat
push
inc
mov
pop
pop
mov
sub
cmpsl
aad
jmp
loopne
push
mov
mov
or
inc
add
enter
and
nop
clc
lock
fsubl
push
push
cli
leave
xchg
std
in
sub
pop
mov
cmp
or
mov
shll
lahf
hlt
mov
lods
mov
adc
xlat
dec
cmpsl
test
hlt
cs
test
dec
fmul
cwtl
cmpsb
xor
rorl
popa
in
xor
pop
test
sbb
clc
xorb
cli
or
aam
sub
pop
sub
push
mov
test
add
dec
sub
mov
int
das
push
jae
div
nop
lods
fisttpll
mov
in
lds
sti
xor
cli
cmp
test
frstor
and
inc
jmp
test
movb
mov
xchg
add
neg
int
jne
incl
xchg
imul
jne
mov
xor
adc
push
mov
das
pushl
ss
insl
cli
add
mov
push
fwait
mov
scas
hlt
inc
jl
add
repnz
push
mov
push
mov
cmp
push
in
mov
pop
add
inc
push
shll
icebp
dec
in
shlb
push
inc
inc
sub
mov
jecxz
mov
loope
cmp
into
sbb
lea
jecxz
push
movsb
jg
enter
mov
pop
lret
addb
xchg
adc
mov
and
cmp
pushf
lea
out
jl
cmp
mov
pop
and
scas
jnp
sub
mov
dec
in
push
fwait
into
mov
sbb
hlt
inc
pop
mov
hlt
pusha
pop
push
int
add
mov
jne
jecxz
inc
push
das
sarl
jns
mov
out
movsb
mov
es
fs
pop
sbb
inc
imul
pusha
inc
test
push
xchg
xchg
cli
adc
push
cmp
sahf
out
mov
jns
movsl
les
in
sub
adc
out
xor
cmp
fldl
and
aam
push
jge
pop
scas
push
and
dec
pop
loopne
jne
sbbl
call
cwtl
mov
dec
lahf
arpl
enter
dec
daa
movsl
fwait
sti
ret
adc
lods
or
mov
test
enter
mov
andl
iret
dec
xchg
xchg
inc
dec
jns
dec
mov
in
inc
xor
lahf
insl
std
and
stos
jns
test
sarl
rcr
or
pop
push
hlt
ss
push
mov
lcall
rorl
dec
mov
adc
sbb
mov
aad
cmc
les
add
adc
hlt
test
cmc
das
stos
adc
scas
add
faddl
jne
sbb
push
push
mov
and
arpl
jg
imul
or
xchg
push
cmp
xor
sahf
jae
sub
xchg
ds
jl
adc
pop
lods
dec
jne
pop
gs
sbb
xor
lock
adc
adcl
mov
rorb
enter
out
push
mov
dec
aad
rcrl
inc
or
add
mov
test
mov
shl
cwtl
cmpl
les
adc
mov
imul
push
xchg
test
jge
lcall
iret
data16
jl
or
sarb
add
mov
mov
sahf
push
test
test
cmc
sbb
cli
icebp
fisubrs
jg
add
push
loope
mov
jl
sub
lret
jne
jae
loop
movsb
enter
add
loope
ret
imul
cltd
repz
add
xor
daa
inc
add
mov
inc
divb
pop
mov
lods
cmp
outsb
sbb
cli
xchg
jns
sbb
icebp
ja
mov
fwait
cmp
es
cli
jp
cs
inc
out
jmp
push
ds
sbb
mov
lods
xchg
stc
xor
leave
pop
lods
mov
ja
jbe
nop
vcomiss
add
scas
andb
out
decb
sbb
fcomip
insb
movsl
dec
sti
xchg
into
hlt
and
xchg
fbld
add
inc
inc
sbb
jne
sbb
jmp
ds
sbb
jne
out
and
jge
shrb
dec
nop
mov
jg
hlt
scas
cli
lret
mov
jge
push
dec
jns
nop
inc
or
addb
inc
repnz
jp
mov
imul
mov
cmp
or
addb
dec
test
pusha
mov
mov
cmpsl
stos
mov
mov
pop
cltd
adc
mov
arpl
stos
adc
pop
cmc
push
insb
jbe
sbb
lcall
pop
sbbl
mov
jnp
xchg
nop
pop
inc
ja
jp
es
dec
scas
lock
stos
pusha
insl
and
mull
fisttpl
xchg
mov
xlat
ffree
ds
jnp
rol
mov
mov
push
dec
cmc
shll
cld
movsb
fistl
jl
fistps
hlt
insl
sub
lds
fmull
fstps
push
test
repz
test
xchg
or
pop
mov
hlt
imul
ret
add
adc
jg
dec
jae
push
cmp
lea
or
push
mulb
out
lret
lcall
lret
negl
ss
sub
cld
cmc
add
adc
mov
cmc
lods
in
fucomi
cmpsl
xlat
pop
push
jmp
mov
or
pop
popf
add
xor
add
adc
mov
jne
ss
xor
subl
stc
xor
hlt
add
push
shll
xchg
outsl
cmpsl
add
mov
or
inc
pop
adc
loopne
jne
es
in
add
lahf
inc
inc
aas
imul
inc
je
mov
jne
adc
pop
stos
or
leave
aad
fxch
pop
in
mov
xchg
in
and
inc
ret
out
cmp
std
cmpsl
xchg
ljmp
fsin
inc
xchg
inc
pop
in
test
sbb
pop
or
ljmp
ss
movsl
mov
lods
xor
pushf
push
inc
ljmp
adc
mov
jne
dec
mov
mov
jne
fdivrl
add
jl
lds
cld
imul
adc
push
sub
jns
cli
mov
popa
mov
jb
cld
fidivs
repnz
jmp
or
call
or
lea
push
cs
xchg
test
xor
test
test
or
mov
pop
push
sbb
xchg
push
clc
or
faddl
mov
mov
shll
mov
cld
cmp
mov
jnp
in
loopne
jne
or
shlb
xchg
orl
jle
inc
xorb
mov
mov
adc
int
sbb
inc
adc
inc
mov
loop
or
pop
jnp
loope
sbbl
ljmp
dec
mov
ds
sbb
adc
mov
jg
inc
cmp
pop
xchg
test
push
push
mov
scas
jnp
or
sub
in
cmp
jge
popf
lret
mov
pop
pop
ret
ss
test
adc
mov
push
jbe
insl
scas
mov
inc
push
dec
loopne
popf
in
mov
repnz
inc
adc
xchg
push
testl
hlt
loope
loope
mov
sti
movsb
scas
xchg
jb
pop
push
imul
jne
movsl
fldt
dec
push
add
push
mov
add
out
xor
stc
test
sbb
mov
sub
int
push
push
dec
fists
pop
fadds
cwtl
xchg
daa
lea
xchg
unpcklps
loop
jle
idivb
add
mov
insl
movsl
jo,pn
test
dec
lcall
es
cmp
xchg
cmp
add
outsl
and
mov
dec
in
icebp
scas
test
fbld
cmc
out
mov
ds
clc
rcr
das
shl
xchg
jne
inc
sbb
clc
jle
rcrb
mov
int3
mov
mov
lds
test
mov
jle
jno
test
addl
mov
cmp
xchg
mov
xchg
lea
sub
push
nop
scas
push
jne
bnd
jne
push
inc
lcall
movsb
out
fwait
sbbb
mov
push
mov
push
sub
movsl
mov
shll
add
push
lods
in
inc
stos
pop
cmpsl
mov
cmp
pop
and
cltd
or
sarl
lea
push
sahf
pop
xchg
rcl
enter
pop
xchg
xor
pop
clc
mov
add
mov
scas
les
mov
in
add
inc
inc
jmp
iret
pop
mov
aad
pop
ret
int3
sarl
hlt
clc
lret
jecxz
aam
sti
andb
jg
xor
outsl
lret
pop
push
mov
in
xor
xchg
jbe
orb
fiadds
mov
cmp
pusha
adc
pop
hlt
push
mov
shrl
lea
mov
gs
leave
ja
xor
mov
data16
loop
mov
fisttps
jns
push
push
jo
push
sysexit
aad
dec
and
pop
add
add
popf
mov
movsb
or
or
jg
cmp
cmc
jmp
jae
inc
jecxz
fmulp
mov
adc
cmc
mov
cmpsl
mov
adcl
mov
scas
cld
mov
sub
or
xlat
nop
pop
jo
orl
xchg
in
fs
jo
jle
cmp
lods
sbb
dec
and
das
sbb
movsb
les
jp
inc
jmp
push
adc
hlt
into
xor
mov
dec
insl
xlat
hlt
lret
nop
mov
enter
mov
dec
fildll
call
loopne
movsl
dec
dec
mov
addr16
xchg
xor
shll
mov
imul
add
fildl
dec
std
test
sub
sbb
push
je
sbb
jle
mov
mov
into
or
jmp
imul
stos
sbb
orb
aad
imul
dec
testb
or
orl
les
mov
test
jle
cmp
inc
jne
test
arpl
cmp
or
mov
lods
hlt
je
mov
ja
or
repnz
shlb
jmp
or
lahf
and
or
fldcw
cli
xchg
aas
add
rolb
stos
addb
add
and
in
loopne
movsb
call
sub
nop
repnz
or
dec
or
dec
mov
jns
mov
xor
lods
fldenv
xchg
cmpsl
pop
or
mov
mov
xchg
xor
add
add
pop
fildl
fildll
pop
ljmp
adcb
imul
push
or
ret
and
pop
pop
sti
scas
popa
hlt
push
scas
mov
in
and
jne
sbb
xchg
mov
sub
add
repz
pop
jg
mov
ja
rolb
bound
pop
xor
loop
adc
push
xor
cltd
xchg
jne
xchg
cmpsl
mov
xlat
gs
aas
inc
dec
rcrl
loope
cmpsb
mov
test
dec
scas
sub
sbb
add
icebp
in
mov
into
mov
pop
mov
movsb
cmp
in
std
out
sbb
xor
sbbb
jae
std
in
or
das
and
in
jne
fsub
rcrb
xchg
xorb
xor
test
cmp
dec
insl
lret
cmc
xorl
subl
xchg
and
xlat
add
movsb
mov
test
push
sbbb
es
outsl
push
lcall
mov
mov
es
in
mov
ds
cmp
inc
add
test
stos
or
loop
ljmp
xchg
aas
sbb
and
push
cltd
aas
push
add
inc
das
nop
outsl
pop
mov
rolb
jmp
lods
sub
ss
lds
ret
jne
add
icebp
out
cwtl
mov
sub
add
xchg
sbb
xlat
adcl
mov
push
int3
pushf
add
jne
aaa
aam
sub
out
popa
pusha
arpl
and
icebp
mov
mov
adc
roll
loopne
push
into
sbb
adc
xchg
and
shl
std
xor
and
pusha
xchg
shrb
xorb
lret
push
adc
stos
adc
cwtl
mov
ret
or
sbb
jo
cwtl
lock
add
int
sahf
stc
sbbb
mov
xchg
xor
les
fistps
stos
mov
xor
mov
push
sub
cmp
xchg
sahf
mov
pcmpgtb
mov
je
enter
add
out
push
xchg
rcll
xor
repnz
subl
add
and
pusha
enter
cmp
jbe
orb
mov
in
test
add
pop
pop
popf
or
out
and
lcall
cld
sbb
pop
dec
adc
hlt
sbb
xchg
inc
cmp
sub
mov
adc
mov
lds
test
out
lcall
and
ror
lahf
and
cmpsb
test
leave
dec
xchg
sub
push
add
andl
inc
aaa
in
mov
add
jl
clc
fisubrl
pop
inc
pusha
inc
icebp
nop
jb
notl
and
cld
fsubrl
ljmp
inc
fcom
cmp
sub
in
jp
fistps
jne
or
mov
mov
cmp
scas
hlt
icebp
sbb
enter
sbbb
pop
push
push
and
divb
imul
cmp
cmp
adc
or
pop
ret
das
push
in
mov
lock
movsl
into
pusha
inc
ss
rclb
sub
stos
jne
les
pushf
inc
iret
and
push
rclb
inc
hlt
pop
das
das
popl
dec
outsl
or
js
adc
testl
xorl
sub
push
loop
mov
inc
loopne
dec
loope
es
fldl
adcb
cmp
push
add
in
cltd
ja
enter
hlt
repnz
sub
inc
lret
or
popf
jmp
ret
xchg
mov
xchg
pusha
sub
or
mov
and
icebp
out
add
cmp
fidivs
aas
mov
iret
add
pop
stos
lahf
loopne
dec
adc
jmp
push
pmulhuw
mov
addb
dec
xlat
dec
mov
inc
mov
test
cmp
mov
jmp
fmull
mov
movsl
test
cmp
or
mov
mov
sbb
cmc
pop
jle
ljmp
jecxz
hlt
orl
movsl
and
jae
lock
or
jae
adc
or
les
sti
xor
fistps
sbb
pop
int3
adcl
into
in
hlt
daa
xchg
sbb
mov
adc
xor
stc
repnz
dec
scas
test
dec
enter
mov
and
test
xor
ss
ret
pop
or
jmp
xchg
das
jae
pop
pop
nop
je
inc
jne
xchg
add
js
dec
iret
out
sub
sub
cmc
pusha
loope
loop
adc
mov
jb
aad
mov
leave
inc
mov
dec
or
push
mov
scas
stos
scas
inc
bnd
pop
cmp
xor
or
fisttps
pusha
stos
jp
jmp
repz
pop
xchg
test
lea
push
pop
out
cld
inc
rcr
fsubs
xor
push
push
push
xchg
lods
rclb
mov
es
and
incl
xchg
scas
fwait
ret
cmp
clc
out
leave
sahf
sub
aas
xchg
lea
push
push
scas
mov
or
push
mov
mov
sti
jo
arpl
inc
shll
cmpsl
inc
mov
cmpsb
pop
mov
jne
cs
out
adc
subl
mov
inc
mov
push
in
mov
jg
out
das
leave
mov
sub
loop
fstl
loop
jl
cmp
outsl
pop
xchg
cmpsb
xchg
jno
xchg
xchg
jmp
adc
orw
sbb
mov
in
xchg
cmc
pop
cmpsb
xor
jp
lea
ja
insb
sub
push
cltd
dec
fs
mov
and
iret
lea
ret
mov
jns
push
pop
or
xor
sub
pop
test
cmp
stc
add
cld
dec
es
out
inc
cmpsb
lods
xor
or
pop
mov
out
pop
xchg
cmpsl
push
jae
or
inc
sahf
push
lods
add
into
cld
pusha
mov
and
out
sub
push
test
jo
sub
imul
popa
pusha
sbb
dec
mov
lock
or
sbb
leave
mov
je
pop
cli
roll
jne
pushf
inc
loop
jae
or
clc
xchg
mov
jmp
push
add
xchg
outsb
int3
or
adc
pop
imul
fldt
and
mov
inc
out
xor
and
int
adc
bound
fiaddl
fldenv
arpl
movsl
movlps
mov
dec
shr
aad
or
pop
inc
or
lret
icebp
push
cli
add
xor
pushf
test
or
rorb
sub
and
test
pop
les
es
mov
or
inc
pop
pop
cmp
jp
repz
into
lods
stos
out
pop
mov
mov
inc
hlt
out
mov
sub
andb
rcll
dec
mov
rol
mov
aas
movsb
add
in
test
jne
fstl
std
nop
mov
mov
sbb
rcr
jo
lock
int3
into
cld
cmpsl
mov
nop
icebp
stos
sub
jb
cld
insb
inc
hlt
mov
js
test
int3
or
mov
mov
mov
and
loopne
mov
lret
adc
cli
shrl
cmp
cmp
adc
aaa
dec
xor
enter
aam
pop
jns
test
add
aam
cmpsb
xlat
jnp
aad
inc
aam
push
pusha
sub
cmc
addb
cwtl
aam
add
lea
add
shl
push
sbb
pop
shll
xchg
xchg
out
cmp
sub
mov
push
and
mov
bound
mov
fmull
lock
mov
fisubrs
negl
push
imul
addb
sbb
iret
xor
cmp
popf
fsubl
rolb
hlt
outsb
cwtl
addb
aaa
stc
dec
cmp
sti
mov
push
inc
loop
jbe
push
lret
dec
pop
test
lds
cld
xadd
pop
inc
cmc
in
shl
ljmp
xchg
mov
loopne
js
jo
mov
xchg
sub
xor
sbbb
dec
jne
pop
faddl
sub
dec
mov
xor
dec
das
mov
pop
mov
iret
hlt
or
insb
inc
xchg
mov
cs
std
jecxz
mov
mov
lds
cmp
mov
stos
hlt
movsb
insb
scas
and
jnp
mov
repz
mov
sub
push
lret
pop
push
pop
mov
push
cmp
lock
mov
test
push
mov
dec
repz
or
popa
pushf
test
cltd
aad
icebp
ret
xor
dec
adc
mov
test
push
jp
subb
lret
mov
stos
cmp
mov
xchg
mov
cmpsl
add
mov
fcmovne
lea
jp
adc
sarb
mov
and
add
xchg
cmp
shll
sbb
lahf
mov
pushf
pop
aad
mov
and
xlat
icebp
mov
mov
adc
ret
sti
adc
enter
cmp
icebp
add
mov
cmpl
adc
lds
ljmp
mov
or
pop
clc
jo
adc
ljmp
fs
dec
clc
ljmp
sbb
pop
sbbb
ffreep
or
subl
pop
icebp
jp
dec
pop
jp
push
push
dec
sub
sub
mov
std
mov
popf
ss
sbb
inc
mov
hlt
mov
or
pop
es
sar
in
ds
mov
mov
pop
xchg
test
mov
mov
popl
dec
dec
out
sub
mov
or
xor
stc
xchg
and
push
shll
mov
adcl
fldl
daa
int3
les
fisttpll
sti
subl
jne
into
pop
jno
hlt
or
out
ret
repnz
pop
inc
out
into
dec
inc
enter
and
push
mov
fsts
add
addr16
push
enter
sub
popf
out
push
sub
cli
outsl
std
inc
xchg
xor
andb
xchg
pop
cmp
mov
cmp
mov
xchg
test
orl
roll
cmp
popf
or
fdivp
gs
jnp
aaa
cmp
or
jp
scas
in
nop/reserved
mov
test
lods
add
insl
aam
outsb
mov
mov
ret
int
movsb
cmp
div
scas
movl
add
stos
es
rorl
sub
jbe
adc
jecxz
test
jmp
xchg
and
mov
test
scas
inc
ja
orl
loopne
mov
push
lret
xchg
sub
movsb
adc
test
pop
adc
dec
cmc
xor
cmpb
sbb
xor
pop
loope
sub
inc
hlt
imul
lods
mov
inc
xchg
pop
pusha
and
test
xchg
add
pushf
inc
jne
movsl
jp
cmp
rcrb
mov
xor
jnp
mov
cmc
adc
xor
es
lock
push
sbb
lock
or
and
mov
fs
sub
test
loop
pusha
cmpsl
sahf
scas
rcl
inc
dec
aad
jl
sahf
jle
movsl
mov
pop
scas
inc
sub
lcall
in
movsb
or
gs
xchg
mov
fistpll
adc
cmp
add
lock
shrd
xchg
adc
jne
add
mov
pop
mov
cs
jns
cmp
rcr
adc
lods
jb
bound
mov
push
out
nop
in
cmpsb
insb
xor
enter
ss
addb
dec
pop
mov
mov
inc
dec
mov
inc
jecxz
dec
int3
ss
pushf
es
leave
adc
test
and
icebp
fsubs
mov
mov
dec
adc
in
rclb
scas
mov
std
lds
ja
leave
jns
lahf
push
sub
mov
das
insb
ss
pop
jl
jmp
add
scas
test
jne
call
test
adc
pusha
in
mov
daa
jne
loop
mov
xor
mov
mov
shlb
cmp
jge
jne
mov
mov
xor
fildll
into
mov
jne
push
nop
or
mul
fisttps
sbb
jbe
push
into
stos
test
jne
cwtl
aad
sub
mov
stos
add
mov
jns
shlb
jo
dec
test
and
dec
adc
xor
call
jns
or
push
ret
sbb
mov
sub
inc
jmp
cmp
add
insl
ficoms
xor
inc
int3
leave
mov
into
cld
int3
stc
sub
sarb
cmpsb
cltd
jb
int3
fsubr
xchg
fdivp
mov
push
inc
or
int3
inc
ret
mov
or
jmp
movsl
jle
jne
stc
popa
mov
xor
xchg
bound
dec
ret
mov
mov
fnstenv
sub
push
cmp
je
inc
addb
lea
fisubrl
jne
sti
repz
xor
xchg
subl
bound
nop
xchg
ss
orl
bnd
sub
xor
mov
add
jge
inc
ss
js
ljmp
sahf
or
cmpb
adc
inc
lds
cmp
fst
fiadds
hlt
test
shlb
mov
adc
xor
fdivp
push
into
inc
lds
iret
pusha
sub
xchg
fldt
loop,pt
mov
mov
push
shrb
xlat
mov
je
loope
hlt
inc
sbb
pop
pop
imul
or
js
or
mov
and
arpl
data16
pop
cmp
imul
push
pop
es
rclb
inc
iret
mov
pop
sarl
jns
fadds
cld
jne
movsb
lods
mov
test
testb
or
iret
mov
inc
stc
in
out
icebp
mov
rolb
cwtl
mov
jno
daa
vcvttps2dq
mov
mov
fsts
mov
add
xchg
xlat
mov
hlt
lahf
imul
mov
data16
dec
push
mov
int3
dec
cmpsl
out
jns
mov
xchg
jle
je
hlt
outsb
adc
push
cmp
divl
push
rcr
lods
test
sub
mov
sub
pop
xchg
sbbl
outsl
xor
xchg
push
pushw
pusha
je
cwtl
mov
xor
xchg
fwait
in
xchg
das
pushf
jp
pop
jmp
mov
and
pop
inc
push
mov
inc
mov
push
or
hlt
jp
jne
repz
lock
lahf
imul
nop
add
sbb
mov
call
sbb
mov
nop
rolb
jno
int3
insl
testl
aam
cmp
jp
add
test
mov
adc
push
pusha
enter
or
das
cmp
xchg
cld
sbb
insl
imul
mov
cmpsb
shl
stos
test
pop
daa
leave
dec
adc
push
nop
popa
shl
push
pop
roll
mov
mov
stos
into
sub
out
push
mov
dec
arpl
mov
jnp
push
inc
xchg
adc
push
rcl
cli
lods
fmull
stos
push
out
int3
sub
or
add
cmp
dec
imul
cmpsb
inc
shlb
icebp
mov
pop
xor
js
mov
push
xchg
add
outsb
mov
cld
leave
scas
sub
test
test
out
call
mov
movsl
cs
aad
fsubs
mov
inc
lods
push
add
mov
and
test
test
int
mov
mov
int3
add
sbb
push
mov
jl
mov
adc
cwtl
cs
jge
test
hlt
scas
sub
mov
sbb
jne
ds
jne
mov
mov
test
mov
dec
outsl
sbb
pop
sub
sbb
mov
mov
mov
repnz
out
lods
xchg
fst
and
or
push
insb
add
orl
es
cmp
mov
test
hlt
scas
and
sahf
lods
outsl
pop
and
hlt
mov
add
mov
fiadds
cltd
mov
mov
cmp
pusha
out
xchg
push
pushf
mov
sahf
and
adc
fists
jb
jns
imul
pop
sahf
mov
xor
dec
icebp
fsubl
xchg
popa
hlt
push
pop
popf
pop
pop
sub
adc
stc
adc
mov
mov
adc
inc
xor
loope
xchg
mov
add
and
add
mov
sahf
xchg
xchg
lods
lret
pop
movsl
and
adc
ficoms
stos
cmp
add
and
test
xchg
jo
sahf
mov
or
adc
imul
pushw
ficompl
loope
or
push
mov
scas
movsb
and
sbb
lods
or
jno
mov
sahf
pop
test
scas
add
fldenv
push
sbb
add
nop
enter
les
jmp
shll
mov
and
mov
in
cmpsl
fcomps
mov
mov
xor
mov
mov
imul
jne
sub
mov
jno
cmp
xor
xchg
push
dec
aad
or
pusha
stos
sbb
push
push
pop
push
hlt
or
cmp
les
jnp
les
add
mov
imul
jmp
cld
push
loopne
leave
arpl
lods
loop
ret
or
xchg
xlat
inc
xor
ds
jle
jp
es
movsb
test
in
inc
add
mov
add
dec
push
movsb
adc
mov
jb
sub
pop
jno
mov
add
mov
cmp
jle
xchg
dec
mov
pop
sbb
mov
rcl
cmpsl
sahf
les
movsb
int3
out
cmpsb
adc
pop
out
jne
fildl
push
call
add
xchg
jbe
mov
stos
mov
sub
negb
arpl
fstps
add
lods
leave
cmpsb
fnsave
test
sub
les
xchg
jae
cli
push
call
mov
add
cmp
ja
imul
mov
clc
enter
leave
negl
jbe
or
iret
pop
int3
xchg
lcall
xchg
sbb
pop
cmp
stos
xchg
pop
xchg
xchg
std
lret
fstps
leave
push
jae
lcall
in
xor
add
fsubrl
or
or
inc
add
jnp
mov
fbld
andb
mov
cmp
sub
jo
inc
xor
jge
mov
movsb
cmpl
mov
incl
xchg
movsb
ss
sub
or
pushf
push
filds
xor
inc
int
iret
js
and
and
add
pop
inc
subb
push
adc
push
sarb
or
cmpsl
nop
jle
fisttps
icebp
mov
scas
xchg
int3
pop
mov
and
icebp
xchg
mov
mov
mov
loop
jle
insl
loopne
xchg
in
fwait
sarb
jb
jns
fists
enter
xor
scas
cmc
das
pop
xchg
lahf
cmp
je
in
mov
mov
mov
ret
int
fcomip
xor
sub
sub
xchg
or
int
dec
sub
dec
sub
lret
lret
mov
rorb
and
int
mov
mov
in
lret
pop
insb
filds
jne
es
loop
shl
in
loope
jns
cmpl
mov
mov
push
js
push
sahf
repz
hlt
mov
jmp
mov
pop
mov
out
mov
sub
inc
xchg
jae
test
imul
inc
mov
cmp
mov
mov
scas
add
aaa
sbb
jge
push
enter
inc
pop
cmpsl
in
mov
jmp
jmp
lock
shr
nop
mov
xorl
sbb
xchg
sti
sub
test
sub
ret
dec
test
xchg
nop
add
test
adc
mov
lret
popa
pop
lds
xlat
xchg
and
cmp
mov
test
lcall
ficomps
jo
lea
int
iret
cltd
add
push
fs
sub
pop
or
mov
mov
pop
jmp
jns
lret
popa
in
mov
popa
pop
mov
les
pop
hlt
shll
hlt
xor
insb
dec
fsts
das
mov
lcall
ds
movsb
and
add
pushf
push
mov
xor
inc
hlt
daa
jne
sbb
test
sti
nop
lahf
les
test
adc
pop
push
add
stos
jge
jmp
mov
push
rcrl
mov
into
jecxz
shrd
in
mov
or
ret
aad
jmp
or
dec
mov
pop
add
lahf
adc
push
jne
cwtl
adc
out
sub
add
jno
in
sub
xor
xchg
xchg
imul
ds
lahf
xlat
adc
mov
hlt
cwtl
repnz
js
movsb
mov
push
push
rorl
aad
sbb
push
movsb
cmp
fadd
or
jl
clc
pop
push
mov
and
das
inc
lods
adc
sub
ret
mov
cmc
pop
call
adc
and
pop
enter
shl
mov
jg
mov
sub
mov
add
faddl
mov
js
inc
xchg
loopne
xor
in
es
out
jp
jbe
das
loopne
cld
fnstsw
sub
xchg
repz
stos
cmp
jns
xchg
negl
daa
dec
fisttps
and
xor
inc
push
mov
mov
cmpsl
int
sbb
int3
addr16
test
pop
movsl
fimull
add
adc
mov
mov
sub
lret
cwtl
push
rolb
aaa
or
xchg
ds
jge
jp
lods
test
data16
mov
jbe
or
icebp
gs
hlt
inc
jne
push
imulb
addl
add
sbb
test
cwtl
mov
daa
xorl
cmpsl
int3
fldcw
sbb
adc
jno
loopne
ss
aad
aad
sarb
push
movsb
mov
daa
mov
push
in
sysexit
inc
xchg
xchg
cmc
add
inc
pusha
adc
mov
jb
sub
mov
sbb
xor
movb
dec
push
xchg
jne
popa
sub
cwtl
pop
or
add
aas
es
inc
mov
lahf
loope
dec
push
dec
xor
cmp
cmpsb
pop
cmpsl
adc
aas
add
jecxz
and
dec
out
pushl
mov
subl
xchg
int3
dec
int3
pop
jmp
add
pop
dec
ret
insl
and
adc
push
in
mov
push
or
cmp
xchg
or
or
push
mov
ss
push
subb
adc
cmp
adc
push
mov
adc
push
xchg
and
stos
pusha
cmp
es
fwait
bound
not
mov
cs
call
jae
mov
xor
xchg
loop
popf
inc
xchg
push
roll
jnp
in
hlt
cli
or
mov
test
mov
fstl
mov
test
popa
dec
addl
mov
ret
jmp
mov
xchg
arpl
sti
imul
add
std
fcmovnu
or
movsb
hlt
dec
mov
pop
es
ja
daa
pop
pop
xchg
test
add
out
and
sub
ljmp
imul
adc
add
mov
mov
adc
or
cmp
xor
mov
orl
lea
lods
test
sub
add
mov
hlt
arpl
or
sbb
xchg
jno
jge
cli
jbe
lods
add
or
mov
icebp
iret
or
int
pop
jns
mov
lret
sbb
xor
mov
mov
ret
mov
and
adc
push
adc
pushf
and
and
insl
bound
outsl
mov
shll
mov
test
mov
arpl
fdivrs
hlt
dec
mov
lock
dec
adc
mov
push
sub
enter
push
sub
push
mov
hlt
int
insb
mov
stos
ret
loop
jae
fwait
sbb
lods
cmp
arpl
lret
aaa
cli
fldenv
adc
sbb
jmp
enter
or
jnp
mov
inc
ljmp
xchg
fstpl
inc
nop
mov
or
sbb
sbb
mov
leave
mov
in
ja
adc
arpl
xchg
lea
lcall
pop
inc
test
sti
repnz
enter
or
mul
jne
add
stos
popf
ja
push
sbb
mov
cwtl
or
jno
add
pop
imul
push
movsl
sub
scas
das
cld
fld
test
imul
hlt
mov
adc
mov
mov
jmp
mov
cltd
inc
xchg
je
pushf
lret
xchg
xlat
xchg
fidivl
jne
pusha
inc
push
add
in
pop
mov
jns
aad
imul
inc
lret
adc
aam
mov
mov
xchg
inc
push
push
sub
hlt
mov
cmp
sbb
pop
push
enter
or
xor
mov
sar
cs
sti
test
movsl
ds
nop
outsb
pop
fbstp
sub
hlt
lahf
xchg
inc
sbb
or
inc
sub
adc
pushf
loopne
hlt
call
pop
push
mov
fistl
mov
fisttpll
xor
push
mov
fildll
aad
loopne
dec
mov
loopne
mov
popa
mov
adc
cmp
cmp
inc
and
cld
or
aam
xchg
shr
lcall
jne
pop
and
cwtl
test
sub
push
jp
shlb
leave
rorl
ds
data16
mov
cli
insb
shr
inc
add
xor
pusha
xchg
clc
cmpsl
fldl
inc
hlt
cmp
inc
xchg
xor
jle
outsb
xchg
ret
jne
sub
stos
insl
loop
sbb
negl
rolb
push
cmp
mov
popa
ljmp
fstl
sahf
scas
stos
sub
cmp
adc
test
jp
inc
ret
nop
fists
inc
or
mov
lret
enter
sti
jns
push
mov
sbb
cmp
and
add
or
adc
xor
add
into
mov
mov
les
loopne
mov
sub
hlt
cmpsb
test
cmp
jmp
push
cmpsb
add
or
sub
pop
push
or
shlb
mov
jecxz
xchg
shlb
xor
xchg
dec
push
or
cli
inc
mov
xchg
xchg
pop
fidivs
enter
loopne
push
push
xchg
loopne
ret
lock
lret
adc
pop
dec
fucom
jmp
adc
xor
mov
dec
cmpb
bound
or
into
js
pop
xchg
push
jbe
jne
popa
lret
repz
jl
sbb
loope
repz
jne
cmp
dec
mov
fcompl
cmpsl
lahf
adc
jecxz
stos
jns
mov
lcall
addr16
xlat
add
fstpt
mov
push
call
lcall
add
add
push
inc
mov
loop
loop
mov
jbe
mov
pop
fdivl
add
jae
or
clc
dec
enter
mov
andb
lea
add
sub
insl
jb,pt
mov
and
nop
stos
out
and
cmp
icebp
cwtl
repnz
hlt
add
mov
sub
js
sbb
lcall
shlb
push
iret
or
rorl
hlt
inc
sub
mov
repnz
sub
movsl
in
int
sahf
mov
adc
movsb
std
dec
jecxz
insl
cli
fdivs
mov
sub
out
rclb
aad
jl
mov
hlt
or
adc
mov
dec
jae
add
fwait
dec
fstpl
dec
idivl
hlt
xlat
mov
jne
ss
movl
mov
test
add
dec
fldl
jo
bnd
add
sub
mov
sbb
push
mov
add
mov
lret
sub
pop
stc
std
mov
pop
hlt
das
repz
xchg
mov
push
inc
imul
aad
movsb
cmpsl
cld
mov
inc
imulb
adcl
add
sbb
pop
cli
sub
loop
rol
les
add
lcall
pusha
jne
add
xor
mov
jne
xchg
rcll
les
aad
add
sbb
aad
push
xchg
inc
pop
jbe
jbe
lods
add
call
mov
cs
adc
test
testb
lock
pop
mov
in
enter
pop
xchg
loopne
and
jbe
dec
push
les
cli
ss
pop
sub
data16
cwtl
jmp
add
sub
movsl
mov
jl
ljmp
pop
sub
xchg
scas
mov
popa
mov
or
call
fldenv
inc
shll
or
adc
arpl
mov
imul
cld
or
jne
pop
outsl
in
sub
mov
ds
shrb
cmpsb
lret
push
clc
or
je
or
lcall
sub
mov
add
mov
movsb
cmp
mov
add
cltd
mov
lock
fs
sbb
jp
adc
inc
dec
iret
in
mov
xchg
jge
mov
sub
pop
xor
dec
add
push
sti
dec
lock
ljmp
sub
scas
add
add
mov
cli
mov
or
lea
push
pop
push
pop
push
mov
dec
mov
ljmp
ljmp
cmpsl
mov
pop
xchg
pop
or
addr16
out
aas
iret
loop
in
jmp
pop
cmpb
into
mov
mov
mov
loope
xor
mov
dec
adc
mov
add
jmp
or
inc
movsl
int3
dec
cli
and
test
push
sbb
pusha
in
addr16
in
leave
jae
jb
jecxz
dec
sbb
js
and
movsl
add
les
or
pop
or
or
lahf
mov
sub
adc
in
dec
cmp
pusha
outsb
test
call
scas
xchg
test
pop
test
pop
ror
push
in
mov
cld
and
push
adc
test
lea
shll
mov
pop
cmp
fsubrl
lods
hlt
cmpsl
sub
sti
xchg
push
push
ds
jecxz
test
lret
mov
inc
mov
fmuls
add
xchg
out
mov
mov
jle
or
hlt
aad
add
lret
rorb
or
mov
dec
push
sub
lcall
pop
dec
add
fs
in
sbb
mov
je
hlt
adc
cltd
leave
adc
pop
in
mov
push
pop
pop
mov
popf
andl
cmp
shlb
jno
sbb
mov
out
push
cmpsb
sbb
inc
dec
jecxz
movsl
movsb
jle
test
cmpsb
seta
xor
sub
out
addb
lods
pop
add
jmp
lea
loopne
cmp
add
adc
xor
enter
pusha
jp
cmp
add
das
push
jne
push
clc
int3
cmp
test
rclb
ret
daa
mov
out
scas
dec
in
cmpsl
pusha
pop
pop
mov
orl
or
dec
push
inc
xor
testl
ret
pusha
mov
jge
push
inc
out
xchg
xchg
rcl
repnz
pop
cltd
xchg
lcall
xchg
loope
imul
pop
mov
jae
jle
daa
xchg
mov
lods
call
jne
das
jne
lock
test
or
js
add
or
add
xchg
jp
ret
sbbl
movsb
cwtl
pushf
and
mov
lret
orl
pop
test
rolb
jne
lret
stos
cmpsl
xchg
push
sbb
sarb
jne
cmp
call
out
push
inc
pusha
mov
push
dec
jne
clc
popf
cli
cmp
add
mov
mov
pop
shld
mov
vxorps
jecxz
add
in
mov
xor
pusha
popa
scas
push
dec
pushf
jle
cmp
hlt
pop
push
mov
aam
cmp
sarl
call
dec
mov
or
push
xlat
cmc
inc
imul
push
mov
jns
xchg
jg
shl
fldenv
cld
cmp
mov
shl
test
mov
push
add
in
icebp
inc
es
adc
insl
mov
in
dec
cmpb
pusha
in
gs
pop
lock
cmp
lret
mov
xchg
cmp
jp
mov
cwtl
and
pop
sbb
cmp
jne
push
push
loope
aas
mov
call
aaa
xchg
ljmp
shl
sbb
aaa
rcll
movsb
or
pop
add
xor
push
std
clc
aam
xchg
jne
xor
cmc
adc
imul
hlt
add
mov
mov
pop
push
xchg
xchg
lcall
adc
mov
jne
ljmp
cmp
enter
inc
dec
push
in
and
mov
enter
mov
shll
pop
call
popa
cld
lods
mov
and
jecxz
int
cmc
inc
in
hlt
xchg
mov
iret
into
adcb
mov
fcompl
mov
hlt
mov
jp
jmp
gs
xor
insb
jle
adcl
call
jmp
ficoms
add
aam
inc
xor
mov
xchg
xchg
jno
push
es
orb
pop
mov
mov
cwtl
mov
out
inc
pop
fs
in
cmp
mov
aaa
push
xor
mov
in
xchg
push
outsl
orb
inc
mov
sub
insl
or
inc
mov
or
negl
scas
test
jg
aad
sub
push
jbe
mov
lcall
xchg
stos
inc
es
test
sbb
and
mov
data16
cmpsl
aad
hlt
imul
imul
cs
mov
enter
push
mov
imul
fsubl
icebp
pop
and
leave
bound
cmp
adc
insl
cltd
roll
mov
and
xor
out
sub
inc
add
shrb
adc
out
outsb
mov
lret
inc
mov
sub
mov
mov
mov
jne
mov
adc
pop
addr16
dec
mov
dec
shl
add
mov
cmp
fcmove
nop
test
pop
cmp
scas
mov
xchg
xchg
ret
dec
aaa
lret
mov
pop
mov
pop
xchg
das
faddl
jge
enter
pxor
std
test
int
xor
sub
xor
mov
push
sti
and
lret
cli
mov
lods
add
pop
push
mov
adc
mov
mov
cwtl
hlt
xchg
insb
push
sbb
icebp
insb
xchg
inc
pop
xlat
cmp
jne
push
jbe
jmp
push
pop
imul
adc
push
loope
xchg
mov
mov
pop
or
pop
cmp
push
lods
hlt
repz
cmp
push
pop
xchg
jmp
sbbl
pop
outsl
loop
mov
xor
enter
sub
cwtl
stos
pop
inc
into
sub
icebp
mov
cmpsl
push
mov
jo,pt
sub
jbe
sbbb
adcl
lcall
scas
and
add
in
jne
mov
aad
insl
xchg
push
test
push
push
rcl
inc
and
shlb
adc
cmp
xor
mov
mov
fcoml
sbb
or
nop
repnz
jge
inc
aad
ds
and
loopne
ret
mov
in
push
in
add
push
jl
pop
cmp
xor
cmc
enter
inc
outsl
or
pop
movsl
aad
negb
ret
push
mov
sub
pop
shl
pop
out
inc
push
mov
push
jb
aad
int3
cld
mov
xchg
xchg
jp
fldt
imul
jae
imull
add
mov
sub
in
hlt
stc
adc
dec
pop
cmpsb
jns
sbb
jge
sbb
sub
dec
jns
jno
insb
mov
add
mov
popf
fisubrl
les
jbe
mov
lock
xor
mov
mov
jp
push
aam
pop
pop
sub
inc
hlt
cmp
lds
mov
adc
xchg
aas
inc
pop
repz
or
das
adc
das
mov
dec
add
ja,pn
leave
dec
std
sub
cmp
lds
out
leave
add
or
jp
add
hlt
lds
xchg
pushf
jno
movsb
push
pusha
pusha
in
inc
inc
mov
or
mov
adc
jne
je
mov
gs
and
scas
fimull
jmp
xchg
pop
cwtl
test
mov
sub
sbb
pop
adc
flds
xor
adc
and
add
int3
xor
add
xchg
lcall
lods
test
lock
fmull
movsb
shl
mov
dec
push
imulb
test
pop
in
stos
stos
mov
cmpsb
or
repnz
add
fildll
inc
mov
sbb
xorb
mov
stos
and
jne
enter
dec
cmpsb
mov
movl
hlt
sbb
xchg
fstpl
xor
sahf
mov
sub
inc
int3
xor
js
outsb
inc
shll
inc
jnp
push
jecxz
xor
push
icebp
mov
dec
inc
xor
ljmp
subl
sarb
loopne
jae
mov
cmp
xchg
sbb
add
or
iret
mov
add
xchg
xchg
or
add
mov
pusha
mov
pop
js
jl
es
inc
scas
sahf
mov
or
mov
jbe
addl
les
dec
mov
test
shlb
fcoml
jmp
sarl
jg
push
das
lahf
xchg
lods
xor
mov
scas
jmp
iret
xlat
pop
outsb
dec
test
sbb
push
ljmp
sbb
or
push
and
dec
mov
fimuls
gs
dec
mov
push
lods
xor
aam
sub
push
mov
cmp
add
mov
mov
jge
js
add
pop
jg
jnp
fildl
mov
cmpl
lret
jg
push
hlt
imul
das
shlb
neg
sbb
in
loop
hlt
jl
mov
adc
fcmovbe
adc
leave
inc
cmp
incl
cs
mov
mov
stc
adc
outsl
nop
mov
lret
mov
repnz
rorb
in
lcall
pop
push
sahf
mov
bsr
das
add
je
or
mov
xor
in
ret
mov
xchg
arpl
aaa
mov
pusha
inc
add
jne
testl
inc
lcall
enter
stos
loop
adc
in
jne
push
cmpsl
in
mov
sub
clc
cld
bound
push
adc
std
sar
dec
test
pop
cmp
out
mov
jp
aad
mov
push
leave
pop
imul
mov
push
sub
imul
aas
inc
mov
adc
bound
add
sub
scas
dec
test
pop
sahf
pop
pop
aas
mov
and
iret
pop
rol
push
jmp
icebp
xchg
sti
les
xchg
dec
test
lods
ja
sub
jne
sbb
jecxz
mov
popf
out
pop
xchg
dec
inc
jecxz
mov
or
stc
push
enter
imul
bound
xchg
ljmp
adc
in
mov
mov
push
ret
jp
sbb
imul
inc
pushf
push
adc
jns
push
js
jb
mov
enter
aam
test
and
push
xchg
mov
push
test
sub
mov
jne
out
adc
mov
int
mov
cmpsl
adc
xchg
arpl
xor
stos
jmp
dec
aas
ljmp
idivl
push
inc
subl
sub
adc
ret
xor
pop
cmp
add
inc
push
sub
push
arpl
fiadds
cli
dec
jecxz
jne,pn
pushf
mov
daa
push
add
xchg
negb
or
testl
clc
shlb
jbe
lock
hlt
fwait
test
lahf
cwtl
push
in
fsub
sbb
sahf
je
sahf
mov
das
repnz
sub
pop
out
loop
dec
inc
mov
push
mov
or
loopne
jl
xor
mov
addl
xchg
std
shl
xchg
adc
nop
adc
mov
subb
insb
mov
or
jmp
inc
out
dec
lock
or
mov
push
fs
jne
fisttps
dec
dec
insl
std
inc
mov
jl
mov
insl
movb
push
dec
mov
cmc
xchg
mov
push
lcall
hlt
inc
pop
mov
inc
push
push
jb
pop
adc
or
rcl
jnp
insb
rorl
hlt
subl
in
jne
outsl
add
and
mov
hlt
adc
jno
inc
mov
dec
scas
lds
fistps
mov
dec
push
xor
and
or
fistps
imul
hlt
out
inc
jg
cltd
out
jbe
dec
imul
dec
mov
xor
shl
pusha
repnz
dec
sub
jmp
xorl
mov
loope
jle
adcl
pushf
daa
scas
xorb
out
or
jle
fsubrs
pop
test
pop
mov
adcb
test
mov
xorl
sub
aas
mov
xchg
jg
or
testb
fildl
xchg
xchg
test
sub
and
mov
dec
add
push
fists
sbb
lea
mov
jecxz
or
negb
repnz
sbb
aaa
adc
xor
mov
into
mov
popf
aam
dec
pop
jnp
out
das
fstp
sbb
repnz
mov
iret
jmp
jne
add
pop
jecxz
add
pop
and
and
fmuls
mov
mov
in
inc
xchg
in
ss
mov
fsts
dec
or
push
outsb
jne
es
mov
ss
fidivs
enter
jmp
mov
nop
in
test
fstpl
daa
pop
aam
rolb
sub
dec
cld
mov
xlat
pop
mov
jg
or
hlt
xchg
add
pop
mov
fsubrl
test
sbbb
aaa
dec
arpl
loopne
xor
sub
not
movl
lock
mov
jmp
inc
rorl
aad
pop
add
fidivrs
ds
pushf
pop
inc
movsl
inc
push
sub
hlt
and
lcall
pop
movsb
stos
iret
or
xchg
lcall
addb
mov
mov
mov
popa
ss
loope
fiaddl
add
ss
or
jmp
outsl
imul
daa
and
sub
mov
movsl
hlt
mov
xchg
aam
orl
inc
dec
xor
cmp
arpl
ss
mov
dec
sbb
pop
lret
push
adcl
ret
dec
push
imul
cmpsb
sub
mov
pop
adc
fldenv
or
lret
dec
xchg
les
mov
bnd
hlt
stos
adc
cwtl
inc
imul
jne
mov
lds
mov
pusha
pop
in
pop
add
cmp
mov
shlb
sub
push
cmc
push
aam
fadds
test
or
and
call
syscall
push
clc
sahf
push
enter
pop
sub
inc
gs
and
xchg
mov
cmc
pop
or
jae
inc
and
inc
lret
gs
cmpsb
cmp
mov
pop
sbb
les
mov
push
sarb
out
and
add
in
mov
pusha
or
inc
push
bound
push
and
jo
lods
dec
mov
ret
push
mov
nop
fiaddl
mov
dec
lods
cmp
mov
std
and
cmp
inc
test
pop
adc
pop
sub
es
pop
mov
mov
xchg
cmp
cmp
add
out
clc
mov
cwtl
pop
jbe
jo
sbb
jbe
hlt
inc
push
add
jp
xor
daa
mov
lcall
xorl
xor
imul
insb
mov
or
sbb
and
insl
cltd
adc
in
clc
xor
les
mov
cmp
sub
aam
dec
mov
jmp
into
pop
sahf
jecxz
jns
jmp
xchg
pop
push
loopne
dec
xorb
or
and
and
mov
pop
lods
jne
test
sbb
xor
push
nop
push
stos
gs
and
test
dec
xor
fsub
outsl
mov
inc
adc
test
inc
and
mov
pusha
sarl
cmpsb
inc
cmp
testb
leave
push
into
sub
jnp
adc
sub
sub
and
stc
adc
jbe
aam
popa
sbb
mov
jnp
es
push
ret
mov
mov
lret
push
add
les
push
lret
test
mov
push
mov
mov
lahf
shrl
hlt
sbb
mov
test
or
and
out
stos
lret
hlt
fld
rolb
cmc
cmp
or
mov
into
add
pop
xchg
out
pop
or
inc
xchg
jge
mov
mov
lods
das
lret
insl
jmp
and
jae
loop
xchg
pushf
pop
jge
sub
shll
arpl
test
push
and
sbbb
inc
test
add
add
fdivr
rcll
popa
mov
xchg
fadd
sahf
sahf
xor
sub
shll
sub
ficoml
xor
mov
xlat
push
jge
jmp
pop
test
mov
cmp
sti
jmp
leave
loope
mov
dec
push
push
int
inc
gs
sbb
ljmp
add
mov
popf
lret
loop
scas
jbe
mov
adc
lahf
mov
mov
adc
icebp
faddl
into
jmp
add
and
subl
popf
rcl
mov
insb
jle
scas
mov
jmp
push
out
cmp
push
xor
hlt
mov
addl
xchg
divl
jne
cmp
sti
sbb
mov
iret
dec
ret
cmp
test
and
lahf
inc
dec
or
and
aas
add
jbe
dec
push
push
sahf
inc
test
pop
jns
ret
movb
mov
stos
cmc
pop
push
test
and
cmp
mov
push
xor
pusha
stc
das
sbb
insb
pop
roll
lods
fcompl
das
dec
jno
jp
movsb
movsl
mov
jp
mov
dec
push
adc
cmpsl
sub
jp
pop
sub
mov
int
xorb
mov
mov
int3
je
sbbb
hlt
sbb
push
xchg
ss
mov
mov
push
out
addr16
dec
sub
test
dec
jecxz
sti
bound
cmp
sti
adc
pop
push
pusha
push
pop
insb
push
pusha
fdivp
imulb
int3
test
bound
movsb
fucompp
insl
dec
mov
push
inc
ror
pusha
mov
popl
cwtl
mov
mov
or
mov
popf
cli
les
imulb
addr16
das
sbb
mov
leave
pop
imul
daa
mov
dec
outsl
mov
cwtl
mov
or
call
scas
insl
movsb
jb
out
repz
pop
dec
push
push
out
jp
rolb
or
push
arpl
fldl
and
xchg
outsb
dec
push
fnstenv
leave
fsts
or
sub
xlat
cwtl
xchg
leave
mov
lret
and
inc
mov
jmp
popa
mov
in
push
xchg
jp
aam
xchg
dec
and
cmp
frstor
sub
stos
xchg
jbe
fcoms
jo
cmp
idivl
cmp
pop
loope
loopne
inc
xchg
mov
jmp
lods
std
jne
lea
xchg
das
xor
scas
push
out
mov
ljmp
popf
leave
cltd
inc
adc
scas
jne
ficomps
sbb
mov
xor
or
stos
or
aas
ds
test
jne
push
shl
popf
xchg
sbb
shll
or
rcr
cli
clc
jne
les
xchg
mov
fwait
adc
out
inc
ret
test
and
add
loopnew
pop
es
icebp
movsb
jle
popa
ret
sbbb
mov
lret
repz
adc
push
repz
sbb
test
push
pop
call
xchg
movsb
or
jg
dec
push
fs
insl
mov
int3
loopne
mov
fldl
mull
mov
cmpsb
add
std
pop
pop
mov
mov
or
lods
daa
ljmp
mov
mov
repnz
lcall
pop
movsb
or
pop
aaa
adc
or
pop
loopne
pusha
inc
inc
mov
xchg
mov
xor
hlt
mov
popa
dec
or
mov
insb
int3
inc
mov
push
lahf
cmp
add
inc
push
add
sub
je
xchg
sub
push
int
mov
push
das
ljmp
xor
mov
sbb
and
mov
insl
dec
fimuls
xlat
adc
mov
rolb
out
ret
rorl
adc
dec
orb
or
cltd
popf
inc
sub
fst
dec
ljmp
inc
and
stos
ds
aad
or
sub
test
aas
adc
mov
es
ss
in
dec
sbb
inc
or
frstor
jecxz
popf
sbb
ret
divb
adc
add
dec
jle
xchg
cwtl
inc
stos
mov
push
inc
leave
sbb
sub
inc
lcall
aaa
test
leave
cwtl
sub
mov
lds
fcoml
fisubs
popa
add
jne
lcall
cmp
adc
mov
leave
repnz
popa
adcb
push
mov
xchg
enter
arpl
ss
loopne
int
inc
sub
pop
mov
hlt
icebp
xchg
adc
sub
pop
jnp
leave
stos
push
dec
cwtl
jecxz
push
daa
cmc
repnz
inc
pop
sbb
xchg
pop
scas
dec
enter
xchg
pop
stos
adc
push
les
and
mov
jne
mov
leave
imul
lcall
push
mov
in
mov
cmp
test
clc
into
sbb
sub
push
filds
adc
mov
mov
addl
daa
and
mov
rcrl
imul
bound
movsb
sub
stc
inc
dec
jmp
in
xor
roll
hlt
loope
pushf
les
lcall
loope
shrl
xchg
xor
popf
cld
mov
or
mov
icebp
mov
stc
xchg
test
adc
add
adcl
fisubrs
jne
ret
xchg
inc
dec
lods
xchg
aad
mov
xchg
and
mov
test
mov
call
test
xchg
mov
push
add
lea
sub
mov
or
rorb
hlt
and
jl
cmp
inc
cmp
sar
into
fbld
fnstcw
cmpl
mov
mov
lea
addr16
nop
test
js,pt
push
loope
in
add
leave
xchg
fwait
or
lods
std
repz
hlt
fstp
add
mov
movsl
lcall
and
and
jmp
jne
popf
mov
adc
rorl
fdivrs
push
xchg
arpl
incb
push
adc
xorl
out
hlt
lcall
les
out
push
jne
js
subl
push
imul
loop
cmpsb
scas
inc
ror
movl
inc
add
mov
aaa
cltd
mov
dec
lret
and
out
rcll
cmp
inc
aam
mov
cmp
fidivrs
mov
aas
inc
lea
enter
pop
add
and
cmp
movsl
pop
sarb
mov
pop
mov
jne
sbb
or
push
add
add
jb
cmpsl
fisttpl
lock
inc
push
leave
adc
test
ret
fdivr
movsb
pusha
lock
cmp
test
js
icebp
cmc
pushf
dec
dec
adc
jmp
or
leave
or
fiadds
pop
dec
stos
and
out
xlat
enter
add
loope
jmp
rcrl
push
ret
hlt
ss
mov
imul
xchg
fidivs
ret
movsb
add
push
mov
idivb
into
das
test
scas
call
dec
pop
sub
imul
fxch
mov
rol
outsl
dec
cmp
or
aad
pop
mov
sbb
mov
loopne
test
jno
in
cmpsl
inc
es
add
add
scas
push
subb
fwait
xor
pop
push
test
pop
mov
pop
and
jae
ficoms
imul
nop
jo
adcb
pop
fmull
adc
rolb
enter
pop
fucomip
or
std
adc
mov
shlb
xchg
fsubr
sbb
dec
mov
mov
mov
imul
cmpl
adc
mov
cmc
enter
lret
sub
cwtl
fldl
std
andb
ret
scas
repz
hlt
lods
push
rclb
mulb
imul
popa
cmpsl
fstl
scas
orl
sbb
mov
and
adc
push
xchg
pop
cltd
outsl
andb
jbe
movsb
loop
aas
leave
mov
ficoml
dec
xor
rorl
sbb
out
pop
xor
repnz
pop
aam
shr
jb
pop
jp
add
loopne
shll
insb
or
popa
xchg
cld
ret
push
stc
pop
test
mov
mov
jg
div
cmpl
cmp
or
les
stos
inc
fistl
xor
std
xor
cmpb
push
jp
xchg
sbb
jl
subb
or
rep
roll
jnp
outsb
cli
sbb
js
jo
add
movsl
jne
int3
fadds
mov
ffreep
arpl
xor
filds
inc
dec
inc
jae
mov
or
lret
movsl
or
bound
adc
push
xor
subb
clc
sub
cmpsb
mov
das
cmp
iret
jnp
jo
call
add
ret
popa
push
fsubl
into
pop
mov
movsl
les
fidivs
in
cmp
push
mov
jp
es
pop
pop
sbb
arpl
pop
or
mov
pop
push
cmpl
hlt
movsl
ss
mov
xchg
mov
aaa
inc
sub
push
in
cs
nop
test
add
subb
push
fstps
mov
jo
push
mov
arpl
jbe
movups
and
add
xor
fwait
mov
adc
ds
fisubrs
daa
orl
fadd
jne
sbb
xchg
nop
add
push
shll
sbb
push
and
rolb
jecxz
add
mov
and
imul
pop
fwait
push
adc
sti
pop
cmpsl
xchg
mov
mov
mov
mov
scas
test
cmpsb
jbe
pushf
fnstsw
out
mov
lret
fdivrs
mov
in
or
addr16
fldcw
stc
pop
in
xor
push
add
jne
popf
cwtl
jl
sub
jge
dec
mov
xchg
pop
lea
xlat
add
cmpsb
in
shll
gs
xor
ret
iret
push
xor
mov
mov
add
mov
xchg
inc
lods
xchg
inc
out
inc
xchg
mov
mov
outsb
dec
rcl
ret
es
ds
sub
cmp
cld
lock
inc
jl
hlt
xor
sub
mov
mov
push
pop
push
push
jne
test
xchg
das
inc
aaa
push
mov
cltd
add
sub
jne
adc
mov
mov
mov
cld
in
dec
in
sub
mov
or
xchg
jnp
fwait
js
or
frstor
test
inc
push
and
js
and
sarl
mov
xor
je
fnsave
out
fimuls
and
sub
add
imul
adc
lods
and
pop
aaa
sub
push
pop
mov
mov
out
mov
sub
std
jns
enter
rcr
mov
push
arpl
or
jne
jle
fdivs
push
in
add
std
insl
dec
sbb
das
fcomi
jl
inc
mov
ret
cmp
pop
cli
inc
fsubl
mov
mov
cmpsb
cmc
pop
adc
mov
aad
cmp
cld
adc
xor
icebp
cmp
inc
divl
mov
push
pop
clc
ret
lock
pop
cmpsb
fistl
jae
rcl
and
xor
or
jae
jle
orb
test
xchg
xchg
or
pop
and
sahf
test
fucom
xorb
loopne
adc
lret
mov
ss
push
gs
pop
daa
push
adc
mov
test
cmp
push
int3
lods
sbb
add
xor
mov
lret
mov
pusha
mov
jp
push
xor
add
add
scas
and
popf
sarb
mov
js
enter
mov
dec
imul
ja
popa
sbb
and
push
dec
int3
nop
ja
or
idivl
dec
cmp
inc
xchg
xchg
sub
cmpb
mov
enter
mov
hlt
ljmp
dec
in
mov
pop
jge
xor
sbb
pusha
sbb
mov
sub
gs
add
lods
sub
jns
xchg
inc
frstor
test
imul
dec
sti
outsb
test
hlt
xchg
push
shrb
inc
add
mov
adc
xchg
sub
xchg
shlb
sbb
push
add
les
mov
xor
pop
stos
ret
mov
dec
xchg
das
loop
std
rcll
sbb
out
cwtl
ret
pop
cmc
call
movsl
push
scas
mov
xchg
insb
outsb
popa
test
addl
das
mov
fwait
jl
movsl
scas
icebp
inc
mov
push
test
jg
push
fistpl
jge
adc
and
add
int
and
ss
xor
xor
aas
les
mov
dec
mov
cmp
mov
subb
xchg
pop
hlt
bound
sub
in
leave
xlat
aas
mov
add
inc
stc
sub
jp,pt
scas
add
cmp
dec
popf
nop
xchg
aaa
pop
xor
jle
mov
jo
arpl
push
add
push
rorb
nop
lret
cli
inc
xchg
add
in
int3
xchg
test
sub
cli
inc
xor
shll
sbb
insl
rcl
sbb
sub
cmpsb
cmp
lret
lret
cmpsl
add
push
sub
popf
std
adc
bound
or
jle
out
in
mov
jp
repz
inc
mov
out
aam
outsb
sbb
hlt
cmp
aam
xorl
cmp
fucom
loope
dec
add
gs
xchg
jge
pop
dec
loop
cmp
add
mov
in
pusha
adc
je
adc
mov
orl
shlb
adc
push
jne
jno
ret
sti
jmp
add
sarl
out
lret
cmpl
fstp
jb
xchg
jbe
hlt
cmpsl
rorb
test
pop
push
cwtl
pandn
test
push
mov
dec
scas
in
mov
pop
jnp
in
push
pop
xchg
dec
adc
xor
faddl
into
fsts
mov
sub
std
or
xchg
and
adc
movsb
shll
push
test
rcll
pop
mov
push
xchg
xchg
push
pop
mov
fcomps
jecxz
das
inc
clc
xlat
out
xchg
popa
push
push
xchg
scas
xor
sahf
ficomps
into
imul
or
int3
push
popa
pop
sbb
loopne
lods
cmp
add
inc
mov
rorl
and
ds
fisubrl
jo
ljmp
add
sbb
jp
sub
or
rolb
sbb
ja
jno
sub
arpl
stc
test
lea
enter
pusha
mov
push
cmp
sub
pop
mov
mov
clc
inc
arpl
js
dec
push
test
inc
jne
and
push
ja
loope
cmp
sub
cli
enter
mov
mov
insl
mov
mov
out
pop
roll
fcomi
or
addr16
mov
rcr
cmpsb
sbb
push
hlt
jmp
and
mov
arpl
das
jecxz
add
or
pop
enter
sub
loopne
pop
xor
loop
call
xor
int3
popa
push
adc
cmpb
mov
sbb
xor
sbbb
and
xchg
inc
daa
sub
ljmp
pushf
add
into
mov
adc
pushf
pop
xchg
xor
test
shlb
repz
scas
cwtl
std
mov
cmpl
xchg
and
cmp
mov
sbb
faddl
hlt
mov
imul
hlt
inc
scas
jle
gs
pop
push
cwtl
inc
and
dec
repnz
xchg
js
sbb
jne
push
rcll
mov
clc
add
mov
aad
add
test
insl
lcall
and
cmpsb
sub
fs
in
fildll
loop
add
adc
sbb
jnp
aaa
ss
inc
gs
mov
mov
fs
cmp
sub
adc
cmp
dec
lahf
cmp
adc
mov
popf
sti
cmp
dec
push
or
ljmp
fimull
mov
decb
sahf
or
data16
add
mov
jno
dec
insb
push
mov
pop
push
push
jg
mov
mov
movsb
fdiv
sbb
and
popf
inc
icebp
aaa
ljmp
lret
hlt
sahf
xor
into
lock
push
not
lods
inc
inc
scas
xchg
gs
nop
sub
ret
cmc
pop
bound
cmc
push
sbb
fimull
sub
sbbl
mov
mov
mov
cmp
imul
enter
xorl
push
xlat
adcb
inc
adc
jne
lcall
inc
pop
inc
lret
sbb
cli
fiadds
xlat
push
hlt
data16
mov
sub
inc
lea
mul
jne
dec
inc
sbbb
les
insb
adc
insb
out
jns
fimuls
mov
sub
lret
loope
in
dec
sub
adc
pop
xchg
mov
sbb
add
rcll
xor
mov
push
repnz
pop
enter
pop
loop
jae
repnz
add
nop
pusha
dec
repz
out
fadds
hlt
inc
inc
add
mov
neg
mov
lahf
call
lahf
sti
popf
test
les
pop
shlb
add
loopne
mov
es
lock
test
inc
pop
cwtl
sbb
cmp
stc
jne
push
insl
scas
sub
mov
ds
loop
xchg
mov
out
es
mov
jns
fists
aas
shlb
sub
popf
xchg
cld
mov
inc
add
hlt
jmp
mov
je
dec
lahf
dec
and
sub
lea
loopne
or
cld
outsl
pop
cmp
xorb
leave
sub
cmpsl
fcmovnu
imulb
pop
add
add
lock
bound
movsl
adc
and
jge
xchg
inc
sub
in
mov
in
imul
divb
clc
xor
cs
out
hlt
sbb
mov
xlat
jecxz
roll
lahf
fsubl
cmpsb
or
push
pop
push
push
lea
mov
jne
iret
jnp
push
push
fldt
pushf
or
outsl
rcrl
fsubrl
xchg
mov
les
cwtl
mov
movsb
xchg
insb
jne
ret
inc
jge
mov
mov
xor
inc
hlt
jp
add
leave
mov
jecxz
dec
dec
daa
pop
sti
cmp
sub
mov
hlt
ret
cmp
test
jae
std
jno
clc
rorb
js
in
mov
mov
add
out
xchg
fcmovne
xchg
mov
mov
dec
mov
insl
jns
mov
jle
dec
mov
mov
cltd
jno
adc
mov
xor
or
mov
cmp
loope
inc
mov
cmp
jp
cmp
daa
pop
adc
pop
xchg
sbb
js
lods
out
aam
jo
hlt
jbe
movsl
xchg
rclb
das
iret
inc
mov
testb
xchg
sub
pop
out
lods
jne
or
xchg
sbb
mov
mov
fs
cmpsl
push
mov
push
sbb
das
into
pusha
jle
mov
jmp
push
jmp
stc
xor
mov
inc
loopne
jge
pop
aam
dec
pop
adc
aas
cmpsl
sub
jle
mov
test
add
fistpl
aas
xchg
addr16
xorl
cwtl
mov
jmp
movsb
xlat
gs
out
inc
mov
das
inc
stos
imul
add
jns
or
inc
mov
add
mov
sub
xchg
mov
xchg
xchg
loope,pt
cld
jg
mov
hlt
in
rorl
andb
or
in
or
jb
inc
add
pop
shrb
sub
insb
jp
mov
test
mov
rolb
dec
bswap
mov
hlt
adc
push
sub
or
push
inc
jbe
jne
push
cwtl
mov
decl
fdivr
push
stos
add
mov
mov
jmp
mov
cs
xchg
mov
add
xlat
sub
movsl
shrl
neg
cmp
aad
outsb
mov
imul
cwtl
imul
shrb
cli
jmp
fucomp
insb
pushf
in
mov
mov
adc
add
mov
xchg
mov
sub
mov
shl
fisubl
sti
inc
mov
jl
cltd
into
sahf
stc
movl
push
loope
mov
lods
xchg
sarb
mov
repz
movsl
test
nop
mov
xor
std
mov
test
sbb
jmp
loopne,pn
push
or
test
xchg
ss
inc
cld
lods
or
sub
jbe
sub
jne
loopne
frstor
inc
mov
fld
jo
mov
ret
dec
xor
dec
inc
imul
xor
aaa
lret
fisttpl
pushf
adc
test
mov
icebp
testb
mov
insl
jp
mov
and
dec
pop
imul
adc
shlb
ljmp
dec
dec
mov
pop
enter
xor
ja
mov
and
hlt
es
pop
aad
js
mov
mov
jge
sub
cmp
push
insb
movsb
test
fdiv
jne
sbb
dec
lret
inc
pop
fimuls
out
jne
pop
lret
lods
inc
shll
stos
test
imull
xchg
scas
adc
insb
mov
jo
ljmp
clc
xor
hlt
sbbl
adc
insb
nop
mov
cld
add
dec
lret
lods
xorb
xchg
xorb
gs
pop
mov
sub
insb
add
mov
mov
into
dec
mov
scas
push
stos
pop
add
hlt
imul
xlat
mov
fnstsw
das
pushf
or
sbb
pushf
inc
xchg
jg
dec
mov
add
sbb
adc
dec
repnz
push
out
or
add
repnz
jne
clc
orb
xchg
fnstenv
repnz
mov
ja
popf
hlt
lret
and
mov
ret
jae
inc
jp
orl
cmp
into
sub
and
adc
loop
aam
push
hlt
out
xchg
std
sarb
in
aas
inc
stos
xor
hlt
and
mov
loopew
into
push
test
mov
ficoms
fstl
add
inc
movsl
push
jmp
rorl
mov
rorl
sahf
fdivrl
xchg
daa
sub
sahf
enter
inc
subb
xchg
inc
add
jne
jge
adc
and
movsb
and
repnz
mov
repz
mov
enter
or
test
lea
mov
inc
jle
inc
hlt
imul
adc
aad
lods
push
test
mov
mov
outsl
ljmp
dec
loop
dec
xor
cli
jns
add
sarb
cmp
sub
ljmp
gs
xor
test
xlat
xchg
mov
push
mov
add
sbbb
pusha
xchg
mull
add
fildl
jp
or
into
in
or
adc
add
and
loop
movb
nop
sti
rcll
push
sub
mov
pop
mov
sahf
ljmp
cmp
andb
add
xor
std
jg
lcall
icebp
pop
xchg
mov
scas
jae
and
imul
xor
inc
mov
into
int3
pop
cmpsb
ss
ljmp
stos
pusha
and
int3
cmp
push
filds
mov
cmp
lcall
mov
popf
dec
mov
fiadds
pop
adc
cmp
gs
inc
imul
mov
fimuls
enter
xor
sbb
imul
cld
sbb
call
out
jae
add
sti
pop
sbb
int
and
mov
fiadds
mov
mov
test
push
pop
xchg
mov
push
hlt
loopne
fsubrp
lea
or
gs
fsubrs
push
jne
push
insb
and
mov
push
mov
xchg
rcrb
stc
pop
or
lods
ljmp
adc
ret
mov
lea
faddl
hlt
or
sub
pop
push
lret
adcb
dec
xchg
insl
hlt
test
mov
push
xchg
mov
clc
shr
add
hlt
fdivs
test
addr16
dec
stc
adc
shll
aam
pushf
add
lods
testb
sbb
loope
pop
jecxz
sbb
divb
hlt
push
fcomp
aas
add
and
pusha
subb
add
mov
lahf
gs
mov
lcall
and
xor
pop
jge
push
mov
adcb
sub
inc
bound
lods
dec
hlt
roll
mov
daa
popl
push
stos
je
inc
out
mov
je
or
nop
ret
dec
int
dec
test
aaa
aaa
stos
or
data16
mov
scas
test
add
jae
aam
inc
adc
les
fwait
loopne
adc
test
mov
outsb
inc
cwtl
jmp
imul
lock
adc
xchg
call
dec
lock
jmp
stc
dec
cmpsb
shlb
and
xchg
daa
pop
sbb
ret
jp
lds
in
xlat
lret
lcall
mov
lahf
mov
inc
nop
cmp
dec
dec
push
jge
adcb
cmp
aas
sub
mov
subb
loop
push
inc
xchg
enter
mov
pop
outsl
in
cld
push
std
lahf
mov
or
pop
in
mov
mov
js
mov
push
mov
inc
jecxz
pop
mov
mov
mov
xchg
enter
jne
push
out
fldenv
or
cmpsb
mov
inc
sahf
inc
dec
enter
cmpsb
xor
test
aam
lret
push
ret
jno
ret
out
mov
cmc
inc
arpl
out
scas
dec
insl
xchg
pop
popf
out
xchg
or
mov
hlt
mov
test
adc
xchg
in
mov
xor
dec
jbe
push
mov
cmp
shlb
fbld
or
loopne
iret
decl
dec
mov
pushf
mov
push
push
rclb
roll
mov
sbb
inc
mov
pop
adc
adc
pop
cmp
arpl
sbb
inc
mov
imul
lret
lea
xor
mov
ljmp
cmp
mov
mov
fdivp
lock
outsb
aad
xchg
inc
leave
jmp
mov
clc
push
js
into
add
out
fldenv
pop
xlat
mov
or
jno
mov
je
mov
mov
dec
hlt
dec
shlb
sub
adc
mov
add
mov
mov
inc
or
aad
jl
sub
outsl
and
pop
les
or
jg
std
les
movl
ljmp
inc
sub
or
aam
mov
sbb
inc
sbb
push
add
mov
inc
jno
pop
sub
xchg
sub
sbb
mov
mov
enter
cld
jge
nop
daa
xchg
hlt
mov
add
popl
mov
dec
mov
sbb
sub
cmp
cs
sub
inc
mov
testl
repz
cld
xor
scas
andb
mov
out
sub
mov
sub
jmp
lods
jle
fldenv
inc
dec
adc
jne
jmp
jns
xchg
sbbb
sbb
cmc
roll
mov
add
out
aas
adcl
mov
pop
mov
or
pop
movsb
or
push
pop
cs
stos
int3
aaa
xchg
shll
xchg
filds
xchg
loope
push
sub
jl
es
fidivs
stos
and
mov
add
dec
mov
add
popa
sbb
push
xor
sarb
adc
push
sub
lahf
lds
pop
sub
mov
inc
mov
nop
mov
and
add
inc
xor
repnz
lahf
ret
jb
mov
lret
lahf
mov
lret
js
popf
cmp
inc
int
push
mov
andl
lods
mov
les
add
sbb
sub
jg
dec
fsubrs
dec
mov
adc
imulb
cmp
into
inc
inc
cli
movl
movsl
jg
in
dec
xchg
rolb
or
test
mov
push
into
cmc
dec
cmp
cmp
mov
jg
cmp
es
jns
sti
mov
lcall
push
insb
loop
arpl
and
jno
xchg
int
add
xor
fsubrl
push
cwtl
insb
nop
mov
add
xor
mov
jo
ficoml
hlt
mov
jae
scas
test
push
outsl
leave
popf
rorl
cwtl
dec
mov
mov
cmpsl
add
cwtl
jmp
adc
inc
xor
push
inc
leave
daa
test
lret
inc
pop
popa
hlt
lret
movsl
andb
adc
mov
pushl
jae
pop
cmp
test
sub
mov
and
insl
repnz
adc
aam
cs
and
add
push
and
cmpb
or
lret
imul
leave
sahf
fisubl
mov
sub
inc
jne
rcrl
das
mov
gs
jo
push
rol
cmc
std
mov
push
enter
cmp
pop
pop
call
jno
adc
mov
jl
mov
xor
jecxz
push
sub
mov
cmp
dec
loop
lcall
jle
ret
int3
adc
mov
stos
inc
cmpsl
jge
cmp
rclb
jle
sub
icebp
xor
aam
sbbb
test
mov
scas
fisttpll
pushl
xchg
divb
jo
test
mov
dec
cmp
pop
mov
cmp
js
sub
out
shl
mov
dec
cmpl
jg
ss
idiv
xchg
xorl
insb
xchg
mov
jle
sub
cmpsl
dec
ret
popa
dec
xchg
mov
push
lock
fwait
hlt
inc
and
or
mov
xchg
push
inc
ret
jmp
daa
adc
idivb
sbb
pop
imul
ljmp
inc
shl
enter
mov
adc
and
fucomip
rcr
pushf
mov
int
mov
and
lret
pop
sbbl
mov
cmpsb
mov
mov
popa
dec
push
mov
dec
orb
xor
sarb
pop
leave
mov
loope
insb
pop
dec
and
mov
mov
mov
test
insb
push
cli
test
cld
fisubl
loope
jmp
out
stos
and
outsb
enter
dec
clc
mov
jno
inc
xor
sub
sub
popl
push
out
mov
ja
nop
push
push
add
cltd
scas
movsl
pop
shl
jo
fldenv
or
mov
jp
ret
hlt
daa
mov
mov
mov
jo
xchg
shlb
fistpl
add
push
cld
xor
xor
mov
push
cmp
xchg
hlt
fiadds
clc
adc
pop
inc
adc
xor
hlt
sbb
mov
xor
inc
fisubrs
in
int3
mov
mov
scas
xor
mov
xchg
dec
sbbl
mov
push
stc
push
sbb
daa
pushf
mov
stc
jg
push
mov
ja
in
xchg
mov
or
fistpl
add
sub
hlt
cmp
dec
rcll
pop
lahf
flds
cmc
mov
adc
js
idivb
fwait
jne
icebp
mov
fldl
or
pop
lea
pop
mov
rcr
push
sub
add
xchg
ja
sub
jbe
popa
push
roll
add
or
push
sbb
lock
stos
dec
mov
inc
int
lcall
mov
mov
inc
add
xchg
inc
pop
cmc
arpl
fmul
out
gs
mov
or
jecxz
in
hlt
ljmp
or
loopne
loope
xchg
and
fcoml
mov
xchg
and
mov
dec
mov
push
xchg
les
mov
jmp
lock
dec
sbb
addr16
inc
lret
stos
imul
adc
out
mov
gs
jno
addr16
pop
pop
mov
popa
xlat
dec
mov
orb
inc
addb
mov
addr16
fisttpl
sbb
sub
pop
enter
mov
mov
sbb
xor
and
inc
jne
test
dec
ljmp
adc
add
pushf
popl
sub
les
pusha
hlt
or
pop
imul
inc
call
dec
sbb
xchg
iret
add
add
inc
add
mov
sub
cmp
xchg
shll
xchg
jnp
lcall
int
adc
push
addb
daa
leave
arpl
das
sub
dec
sti
jmp
in
or
pop
nop
mov
or
or
cmpl
xchg
loop
mov
jge
jmp
ficoms
adc
dec
jl
lahf
mov
nop
movb
test
das
xchg
xor
or
insl
mov
jp
scas
ret
sbb
loopne
cwtl
and
dec
enter
in
gs
sub
xor
addr16
mov
xlat
dec
or
add
or
andl
cltd
mov
testb
loopne
nop
mov
jno
fimull
les
hlt
dec
dec
test
push
movsl
mov
fs
add
pusha
cwtl
cmpsb
jno
mov
or
cmp
jne
shl
aam
int
cwtl
outsl
lods
test
xchg
sub
movsb
cmp
sti
pop
pop
mov
enter
push
mov
cltd
hlt
out
aad
mov
hlt
fcmovnu
cmp
repz
dec
adc
test
fisubrl
fsub
pop
sub
sarl
int
add
inc
test
fbstp
push
inc
in
lods
add
mov
or
adc
add
icebp
inc
pop
test
ret
hlt
jmp
push
addb
dec
pop
test
lock
jno
dec
sub
popf
movsl
add
jnp
fld
xchg
call
mov
fwait
dec
xorb
cmp
xchg
gs
mov
pushw
fbld
jae
and
aam
loope
stc
or
pop
clc
stos
daa
js
int
pop
scas
push
push
lret
sub
xchg
jp
mov
cmp
andb
xorl
mov
mov
pop
lcall
sti
das
adc
push
test
nop
loopne
jg
in
test
out
inc
mov
or
shrl
shl
and
mov
lods
int3
cmpsb
pop
mov
lods
sub
jmp
adc
lods
and
mov
cmc
outsl
xchg
add
fs
hlt
jp
test
sub
cwtl
or
and
mov
adc
dec
lods
fwait
nop
inc
out
clc
xlat
lcall
hlt
fwait
lock
stos
not
cwtl
sbb
mov
movsl
jg
dec
cltd
stos
mov
ds
mov
test
in
add
dec
pop
dec
fcomi
jg
pusha
or
stos
rcrl
mov
mov
imul
out
mov
lds
xchg
mov
add
xchg
orb
sahf
or
sar
ljmp
xchg
dec
dec
add
pop
push
jle
xchg
and
pusha
pop
sub
dec
out
scas
jne
push
test
inc
cmpsl
rcrb
mov
adc
insb
mov
lret
ficomps
or
ret
inc
scas
xchg
mov
push
push
jae
seto
inc
mov
pop
in
xor
push
sbb
mov
push
cmc
adc
mov
scas
jp
push
fs
inc
dec
sbb
jbe
shll
jle
sub
mov
adc
xor
add
movsb
inc
mov
subb
hlt
adc
or
xchg
jne
xchg
je
sbb
test
loope
stc
insb
mov
jge
sbb
sti
subb
in
push
sub
movsl
jne
fs
test
cmp
jge
or
sub
test
pop
jb
shlb
add
mov
ficomps
shlb
je
xorb
sub
rclb
jnp
scas
ret
jmp
or
loopne
push
fsubl
sub
fadds
adc
adc
add
push
mov
imul
pop
xchg
pop
sbb
xor
into
icebp
adc
stos
mov
adc
movsl
mov
xchg
sub
fwait
add
cld
hlt
stc
insl
loop
sbb
add
popl
pop
mov
push
push
mov
xchg
in
sub
lea
pushf
push
xchg
insl
sarl
aas
dec
movups
xchg
das
dec
push
scas
out
loop
scas
orl
xchg
pop
mov
push
push
imul
xor
add
hlt
test
movsb
jno
xchg
push
daa
mov
pop
mov
sbb
loop
lock
test
test
mov
adc
sub
mov
xor
std
mov
lret
pop
push
std
enter
pop
cmpsl
imul
mov
nop
sti
lret
sub
adc
jmp
loope
cltd
imul
movsb
jecxz
mov
jecxz
jecxz
test
adc
rcr
dec
pop
jno
or
and
ds
push
mov
pop
mov
jnp
sub
or
pop
les
test
xorb
xorl
adc
repnz
js
out
das
xlat
inc
decb
jmp
shll
inc
add
mov
mov
or
xchg
dec
ss
ret
jne
fsubr
leave
fidivrs
out
xorb
pop
sarb
sbbl
mov
in
imul
stc
iret
flds
addr16
fildl
sbb
xor
cmpsb
sub
inc
push
jbe
fists
hlt
mov
mov
jp
pushf
loope
icebp
cmc
in
mov
add
ds
std
cmpsb
es
sub
jbe
push
es
mov
add
aam
repnz
test
push
add
rcrb
mov
pop
test
out
dec
dec
xor
dec
lock
cmp
sarl
ret
dec
mov
out
loope
test
lcall
push
lahf
or
sub
insb
mov
in
pushf
test
fdivrs
scas
jb
out
mov
aam
and
lahf
fcom
mov
test
dec
ljmp
aaa
cltd
jg
cmp
jne
push
xchg
inc
sbb
gs
fcoml
mov
lcall
out
rcl
jmp
lcall
pushl
icebp
incl
sbb
inc
jnp
jmp
mov
sbb
xchg
nop
push
enter
pop
frstor
xor
mov
jns
mov
cli
mov
or
fbstp
lahf
lods
bound
pop
mov
in
pushf
push
pop
lods
cltd
mov
mov
or
in
stos
adc
call
shll
mov
pop
orl
inc
adc
adc
imul
dec
or
sub
add
hlt
imul
xchg
mov
lods
or
mov
push
enter
loopne
lret
lods
sarb
fs
enter
in
pop
push
mov
sti
xorl
or
test
mov
dec
xor
mov
cmp
inc
bound
enter
dec
sub
inc
fndisi(8087
fcompl
mov
shll
add
add
jne
add
jae
jp
add
sub
clc
push
mov
add
add
sub
cwtl
xor
push
nop
lahf
adc
fsub
jne
andb
daa
jnp
hlt
lcall
add
ret
ficomps
aaa
or
cmp
rcrl
scas
push
pop
add
pusha
sub
jecxz
js
popa
pushf
sbb
mov
jne
jp
sbb
xchg
add
mov
sub
inc
mov
stc
add
push
dec
xor
inc
popa
pop
leave
push
pop
lods
add
and
pusha
jns
popf
mov
mov
inc
adc
xchg
popa
push
sub
sbb
lods
jne
cmp
sbb
jle
add
push
mov
cli
pusha
sbbl
sti
test
roll
loop
loopne
aas
sbb
add
outsb
test
adc
pusha
mov
jnp
add
into
popl
sbb
sub
push
imul
aaa
test
mov
sar
ret
hlt
addr16
loope
and
jns
nop
pop
mov
cltd
xchg
mov
out
dec
enter
jno
push
inc
cmpsb
xchg
cmp
xchg
lret
movsb
test
dec
out
dec
pop
scas
adc
pop
mov
dec
mov
int3
mov
jl
mov
imul
test
xchg
test
xchg
shlb
or
hlt
sbb
push
fcom
push
dec
nop
sub
ljmp
sub
or
aam
push
add
into
lret
rcll
xchg
fnstsw
sbb
movsb
or
icebp
inc
scas
jle
xor
mov
cld
negl
sub
mov
mov
jl
push
xchg
sbb
cmp
popa
mov
and
mov
fmull
cmp
xor
mov
xchg
jl
int3
sub
stos
inc
sub
dec
shrb
jmp
fldl
and
or
adc
xor
adc
rorb
jae
jae
mov
dec
shll
test
lret
lahf
cmp
movsl
cmpl
jne
pop
imul
inc
add
jae
clc
mov
stos
in
lret
mov
test
iret
ret
punpckhdq
cwtl
lods
mov
mov
cmpsl
adc
lret
or
and
cld
in
inc
insl
scas
nop
xchg
imul
fsubl
jne
test
arpl
xchg
add
fdivs
mov
jmp
cmp
out
stos
ficomps
les
cmp
add
cmp
xchg
scas
mov
mov
add
add
or
out
push
stos
bnd
cwtl
mov
lock
push
das
stos
mov
outsl
mov
scas
fldenv
push
andb
loopne
xor
icebp
push
adc
scas
cld
or
in
adcb
xchg
mov
cltd
inc
add
inc
jg
fs
and
dec
hlt
or
cmp
pop
outsl
xor
mov
loop
xchg
xchg
or
jne
orl
sub
hlt
inc
lock
in
jmp
in
hlt
fbstp
cmp
pop
movsb
in
add
repz
scas
mov
scas
mov
hlt
adc
test
repnz
jno
test
nop
nop
push
hlt
stos
cmp
fcoms
mov
xor
dec
test
mov
dec
hlt
sbb
loope
or
inc
iret
sahf
mov
out
inc
addr16
push
stos
xor
lods
jl
add
sbb
lahf
mov
jg
pop
popf
pop
or
rorb
xlat
add
or
loopne
pop
ljmp
xchg
jo
and
jge
sbb
test
sti
jmp
es
daa
data16
mov
fs
dec
aas
cwtl
xor
movsb
mov
gs
pop
xor
icebp
clc
xlat
bound
mov
sub
pop
push
cli
mov
sbb
mov
pop
adc
fdivs
push
mov
rorl
pop
and
ret
mov
sbb
sysret
jne
xor
xchg
and
jae
mov
xlat
cwtl
push
inc
aad
or
and
or
sbb
push
sub
pushl
cmpsb
test
mov
popa
mov
push
xchg
lods
imul
lods
jo
and
idiv
scas
arpl
aaa
mov
test
les
jne
rcl
hlt
lret
loop
dec
insb
cwtl
mov
mov
pop
inc
lcall
lods
inc
push
pusha
or
pop
and
scas
lret
add
loop
pop
and
shlb
and
enter
cmpsl
mov
out
add
mov
or
pusha
xchg
xlat
hlt
and
notl
pop
jns
mov
outsb
xor
sbb
jbe
jl
jne
cmpsb
cli
call
test
es
sbb
loope
sub
mov
mov
cmp
mov
mov
adc
fistpll
jns
popa
pop
in
icebp
and
jmp
pop
hlt
mov
dec
xchg
daa
outsl
mov
sti
add
addr16
cmc
std
daa
jge
xchg
cmp
or
pop
cltd
rclb
push
les
scas
xchg
or
lret
in
adc
outsb
scas
fmull
pop
mul
cmp
dec
mov
out
mov
mov
jle
fidivrs
leave
mov
shrb
xchg
cld
mov
mov
and
lahf
xchg
nop
enter
cmc
adc
sbb
add
jge
sbb
or
push
add
xchg
mov
add
arpl
inc
mov
pop
loopne
pusha
mov
mov
mov
xchg
icebp
mov
cltd
pop
insb
insb
out
adc
or
cmpsl
repnz
mov
or
add
test
dec
scas
mov
cs
insb
mov
jo
inc
aam
test
in
mov
mov
pusha
mov
mov
aam
jp
mov
test
inc
xchg
cmp
sub
pop
inc
loop
js
and
fistps
cmp
jne
mov
jnp
push
addr16
mov
rclb
adc
xor
pop
sub
pop
in
sbb
inc
jmp
into
in
xor
dec
push
rcrb
cwtl
cmp
fisubrl
xor
popa
mov
and
rcrb
xchg
jne
jno
pop
lods
imul
test
stc
stos
mov
and
mov
xchg
scas
imul
roll
hlt
negb
enter
fs
das
js
pop
das
nop
push
xchg
mov
inc
adc
es
sbbb
pop
aam
inc
leave
adc
fimull
xor
xchg
push
lret
xor
loop
sbbl
mov
in
scas
fstl
adc
inc
scas
or
cmpsl
lret
cmp
jl
jb
mov
inc
xchg
nop
sub
dec
repz
in
xchg
enter
push
frstor
movsb
mov
out
adc
push
jmp
mov
sbb
test
push
les
xchg
faddp
jae
add
hlt
cli
xlat
xchg
xchg
adc
popa
shrl
idivb
jmp
cmp
mov
stc
inc
leave
add
mov
adc
push
fiadds
hlt
or
cmp
pop
and
repnz
js
jecxz
enter
inc
dec
dec
shrb
or
pop
movsl
dec
sbb
fcoml
inc
adc
lahf
add
mov
add
mov
adc
mov
leave
inc
test
lret
ret
fdivrs
sub
sti
imul
fs
fstpt
push
jg
lret
mov
jge
shlb
dec
xchg
and
mov
push
mov
xchg
enter
mov
xchg
push
aad
loope
mov
push
outsl
dec
cmp
popa
push
mov
cmp
push
cmpsb
mov
and
mov
pop
stc
cld
subb
push
lret
rcrb
enter
add
dec
cwtl
jge
aas
xchg
fimuls
fisubrl
in
hlt
adc
call
add
sahf
loope
hlt
mov
xor
mov
in
sub
repnz
ret
test
xor
leave
sub
cmp
inc
rolb
xchg
cmc
xchg
movb
jmp
ja
cld
sbb
jmp
jae
mov
xchg
and
enter
push
mov
aaa
sti
arpl
mov
pop
push
adc
push
xchg
and
inc
enter
stos
adc
inc
mov
and
adc
insb
sbb
push
popf
mov
mov
jg
leave
cmpsb
inc
add
rclb
dec
or
jns
push
insb
repz
daa
nop
subb
sbb
out
jg
icebp
in
call
add
js
das
xor
or
xchg
xchg
xchg
adcb
je
movsl
stos
pop
push
and
push
rorb
test
pushf
rolb
add
pop
cltd
jl
cmp
cmpsl
inc
jns
cmp
rcll
ret
mov
lret
sbb
mov
adc
shll
jecxz
dec
cwtl
add
dec
jl
xchg
sub
mov
dec
test
out
or
popa
aas
enter
fnstcw
mov
mov
add
and
dec
and
loope
incb
jns
hlt
loopne
jo
add
push
cmp
and
push
cmp
add
xorl
mov
inc
sub
adc
incl
pop
xchg
aas
pop
push
out
jne
in
shll
mov
jno
out
cmp
test
xor
xchg
mov
mov
cli
fldt
arpl
xlat
sub
mov
icebp
gs
or
xor
cmp
add
dec
arpl
aad
mov
and
addr16
xchg
add
lret
mov
out
call
hlt
pop
xchg
inc
dec
into
movsb
add
test
popa
or
pop
xchg
xor
and
enter
call
sub
xorl
jecxz
xchg
cwtl
insb
sub
dec
pop
test
hlt
lea
mov
jb
das
pop
cltd
std
int
movsb
lea
in
outsb
and
cs
fidivs
xchg
sbb
sbb
or
jg
mov
pop
cld
daa
shrl
adc
hlt
mov
ds
xchg
test
mov
fwait
gs
jp,pt
xor
and
mov
dec
cmp
jg
sub
les
lcall
mov
dec
cmpsb
mov
fs
fimuls
sub
ret
into
jge
mov
mov
mov
jecxz
test
js
dec
fcmovu
push
push
test
jl
fucomip
xchg
dec
sarb
int
gs
inc
int3
jnp
fistpll
pushf
xchg
pushl
dec
popf
mov
push
popa
outsb
cmpsl
push
pop
dec
xchg
outsl
aam
outsb
lret
hlt
ret
mov
movsl
jbe
mov
push
add
xor
cmpsl
into
aam
shl
mov
in
inc
cwtl
test
int3
int3
push
dec
nop
test
jne
add
push
in
js
push
ja
inc
mov
test
call
xor
js
popf
jne
push
pusha
enter
push
push
and
aas
ljmp
sbb
jno
cld
hlt
and
push
data16
add
and
add
rorb
bound
mov
cld
xchg
leave
hlt
mov
out
js
mov
and
xor
mov
xchg
shl
fwait
push
loope
dec
ret
xor
push
xlat
loopne
xor
mov
jnp
jg
sub
add
pushl
les
add
movsb
cmp
cmp
jne
sbb
lods
cmp
dec
aas
sub
add
pop
ljmp
iret
mov
pop
sbb
xchg
ja
sub
daa
aaa
out
mov
pop
jns
sbb
gs
mov
mov
inc
ret
xchg
and
xchg
js
mov
or
mov
imul
adc
aad
pop
xor
sub
testb
jle
dec
push
inc
xor
xor
jge
xor
call
mov
shlb
scas
pop
decb
mov
mov
sbb
ss
loopne
pop
cmp
nop
inc
push
ljmp
push
cmpsl
das
aad
sub
push
adc
imul
push
add
icebp
into
sub
push
popa
push
insl
mov
ds
and
insl
aas
enter
xchg
pop
ret
jle
dec
jg
xchg
pop
xchg
divl
push
jg
xchg
pop
scas
pop
mov
movsl
sbb
jmp
mov
out
jge
pop
add
pop
pop
cltd
cmpsl
adcl
hlt
jo
nop
shl
xor
mov
pop
mov
test
adc
loopne
mov
jle
fsub
pop
push
jne
mov
mull
xorb
js
dec
push
movsb
loopne
cmc
and
xor
popa
lock
pop
fstl
jl
fisttps
jecxz
repz
test
jne
or
stos
or
sbb
dec
lahf
mov
mov
xor
leave
add
mov
push
xchg
sub
shl
fisttpll
scas
aaa
pop
shlb
sahf
mov
cmpb
mov
out
or
subl
and
xchg
xchg
add
adc
jge
add
cmc
flds
mov
dec
in
add
mov
inc
ficomps
mov
or
mov
adc
sub
in
xchg
xlat
mov
jbe
mov
mov
push
sarl
sbb
xchg
cmp
xchg
dec
add
jmp
outsb
mov
ror
inc
or
les
mov
mov
inc
add
hlt
pusha
and
and
jne
inc
hlt
pop
int3
test
mov
xorb
dec
sub
push
xor
repz
or
aad
hlt
das
push
clc
xor
fistps
add
mov
inc
sub
or
lods
jns
mov
cmpsl
lcall
or
lret
jne
adc
fs
push
insl
xchg
movsb
aaa
mov
jne
or
inc
loope
fdivrl
dec
in
or
or
inc
cmp
mov
into
es
xlat
mov
movsb
js
lods
dec
popa
mov
add
jo
pushf
ss
ud2
sub
push
lods
lock
loopne
push
and
mov
xchg
cmp
push
aaa
add
fidivs
or
mov
xchg
add
dec
jmp
ret
hlt
add
in
xor
call
cmp
rclb
aam
pop
and
inc
mov
gs
in
cmp
and
adc
test
loope
lret
ret
add
test
pop
loop
into
test
es
roll
pop
add
xchg
lcall
sub
mov
jne
inc
jmp
mov
mov
mov
cmp
adc
lcall
sbb
out
add
sub
push
lcall
lret
push
adc
add
hlt
pop
addr16
jne
push
cmp
push
cld
movsb
shl
push
jmp
fcomp
int
pop
mov
pop
push
mov
test
ret
in
or
arpl
setle
imul
fdiv
jne
movsl
xlat
push
xchg
rclb
adc
dec
mov
push
adc
out
mov
jge,pt
mov
lcall
or
aas
int3
scas
outsl
fbld
mov
or
testb
mov
mov
mov
push
ss
scas
xchg
into
inc
inc
pop
out
or
jle
sbb
mov
jle
flds
xchg
sub
test
sbbl
mov
in
jecxz
dec
hlt
xchg
sti
ljmp
into
int
mov
jl
sbb
mov
mov
cmpsb
push
xor
push
mov
mov
cmp
add
and
mov
cmp
clc
jne
repnz
cmpsb
and
pushf
arpl
lods
stos
cmc
xchg
xor
cmp
push
jl
mov
pop
jmp
scas
cmp
pusha
and
clc
pop
jno
xor
pop
repz
jne
pop
cs
jp
mov
fimull
xchg
jbe
dec
ret
add
push
adc
sti
mov
sub
stc
psubq
pop
sbb
xlat
outsb
imul
gs
addl
popf
jg
andl
push
iret
add
dec
inc
hlt
jmp
mov
cs
jle
popa
fstpl
fcmovnu
pop
push
cmp
inc
pop
sbb
sbb
mov
and
stos
fadd
mov
push
cmp
clc
scas
sub
mov
mov
es
sahf
mov
xlat
or
or
dec
loopne
cltd
inc
and
mov
mov
lcall
adc
jne
sub
mov
mov
mov
test
ret
mov
repz
cmpsb
lret
mov
jnp
mov
dec
aad
ds
fs
popf
test
push
mov
sbbb
mov
pop
mov
lahf
cmp
fists
xchg
or
std
test
out
lret
cld
ficompl
ret
add
nop
push
xorl
nop
mov
lahf
mov
mov
push
mov
or
jb
add
popa
jno
arpl
mov
sub
shll
fnsetpm(287
jns
pop
test
or
jne
imul
mov
dec
mov
ret
fucomip
int3
cmpsb
pusha
push
insl
insb
mov
fdivs
xlat
rorb
test
insl
add
and
mov
sub
imul
xor
movsb
arpl
or
pop
jp
xchg
inc
xchg
movsl
mov
jns,pn
btc
mov
fwait
sub
pop
iret
dec
dec
and
mov
push
cmp
dec
mov
test
test
mul
jmp
loopne
repz
pop
dec
pop
fcoml
or
fs
add
inc
int
xor
out
cmp
pop
cmp
or
inc
cmp
test
mov
dec
mov
add
mov
hlt
xchg
and
loop
movsl
lcall
dec
add
hlt
lahf
lods
loopne
fmull
inc
push
sbbl
and
cmpl
shll
movsb
out
fisubrl
lods
gs
add
nop
lret
mov
cmpsl
xor
sbb
jne
je
adc
ja
test
add
mov
sub
inc
sub
add
insl
sbb
std
shlb
sbb
push
or
push
mov
add
push
cwtl
sub
scas
xor
stos
js
push
dec
mov
mov
add
xor
rcr
xor
pushf
pusha
cmp
add
mov
lock
nop
shrb
jne
cmp
fucom
pop
adc
adc
ljmp
mov
in
mov
inc
push
das
sbb
push
repz
lahf
sub
adc
inc
mov
call
adc
mov
popf
dec
cs
lock
jnp
mov
cwtl
cmpsb
adc
aad
insb
cmpsl
and
outsb
cs
subl
and
test
mov
mov
dec
jge
xor
jne
push
aam
pusha
xchg
dec
aas
adc
mov
mov
test
pop
dec
subl
fcoms
mov
ss
inc
std
test
inc
icebp
mov
dec
dec
jg
xchg
xchg
cmpsl
sbbl
xor
xchg
or
dec
push
inc
mov
insl
data16
mov
inc
hlt
pop
test
xchg
jns
jbe
mov
scas
pop
mov
push
data16
cli
movsb
mov
pop
ljmp
add
int
sub
mov
fsubl
pushf
ret
fists
or
in
or
scas
inc
sti
cmp
inc
inc
jne
cmp
sti
inc
arpl
xchg
jp
jo
stos
jmp
xor
dec
or
pop
xchg
xchg
push
shlb
mov
lock
sub
mov
or
loopne
test
adc
cwtl
adc
int3
jecxz
sbb
insl
scas
psraw
jmp
es
or
mov
loop
adc
sub
and
cmp
push
push
sub
xlat
mov
jne
les
add
test
enter
into
pusha
add
shll
test
nop
mov
jae
dec
nop
add
xor
fldt
rolb
xchg
rcrb
add
adc
mov
pop
push
scas
into
inc
jb
out
mov
mov
mov
int3
jmp
adcb
sbb
mov
mov
add
ljmp
xor
les
jg
mov
xchg
cwtl
pop
cmpsl
out
cmp
xchg
je
push
xlat
mov
in
test
mov
push
mov
pop
test
jne
jo
pushl
test
enter
jb
push
ljmp
and
fs
shlb
cmp
jns
jne
pop
les
pop
cld
movsb
pop
mull
les
orb
std
jne
movsl
jmp
popf
addr16
aam
ror
or
stc
into
insl
cwtl
shl
sbbb
sub
lret
mov
and
sbb
sub
add
jl
or
push
das
add
sub
xor
sbb
sbb
enter
dec
rolb
movsb
sbb
adc
nop
ja
mov
mov
mov
add
jp
jne
push
mov
jae
xor
imul
pop
mov
into
lret
sbb
lock
jp
jo
or
fstl
mov
sub
ljmp
dec
push
imul
pop
int3
or
jne
and
mov
test
and
jo
sub
inc
xchg
cmpsb
or
fistl
enter
ds
push
xchg
mov
dec
sbb
inc
loop
or
flds
cmpsl
cmp
outsl
andb
push
clc
mov
mov
jmp
sbb
and
cmp
test
pop
cs
rolb
adc
xlat
lds
into
mov
mov
test
fcomi
das
sub
es
sub
push
adc
push
mov
add
dec
add
insl
cmp
sub
mov
add
mov
push
cwtl
adc
and
xchg
shll
addr16
repnz
add
cld
icebp
ljmp
xchg
mov
mov
mov
add
cmpsl
add
mov
pusha
pop
ljmp
jle
negl
xchg
js
cmp
or
sbb
or
adc
aas
inc
cwtl
cmpsl
fisttpl
imul
into
adc
xchg
pop
sahf
jne
mov
aas
jmp
scas
cmc
hlt
cmp
bound
push
jne
mov
movsl
inc
fst
shl
or
incl
inc
enter
add
dec
jge
xchg
insl
xchg
popf
in
cmpsb
inc
lock
fmull
or
icebp
jb
sub
push
fs
adc
push
mov
mov
ja
roll
in
out
in
cmpsl
imul
std
fidivs
mov
or
ss
test
movl
push
repz
mov
add
sub
test
sub
out
pusha
jecxz
mov
jg
loope
lods
sbb
idivl
fnstenv
sti
ljmp
mov
movsl
push
inc
les
test
pop
gs
xor
xchg
std
cmp
test
or
pop
insl
mov
leave
push
cmpsl
int3
outsl
and
dec
test
jmp
inc
jmp
addl
sub
push
notl
push
out
inc
sbb
jmp
loop
dec
jge
lret
jo
sbb
jge
pushf
jecxz
cmpsl
inc
xchg
insb
xchg
jge
jne
adc
frstor
hlt
icebp
data16
add
ret
xor
lods
inc
mov
aas
mov
pushf
scas
jae
add
pop
stc
push
lcall
bound
sti
pop
in
cmp
push
and
cmp
filds
nop
mov
xor
lahf
fstps
sahf
imul
ja
inc
or
push
nop
mov
in
fmull
mov
ret
es
scas
add
dec
loop
xchg
les
notl
sbb
fmuls
jne
outsb
test
inc
mov
hlt
mov
cwtl
mov
xor
ja
mov
pop
pop
mov
repz
int
int3
fstps
add
popa
outsl
xchg
xchg
out
xor
inc
xor
js
pop
loop
dec
mov
movb
enter
and
jp
and
mov
xor
ret
lods
xorb
lods
bound
and
aad
les
dec
dec
pop
or
movsb
push
testb
add
repz
mov
das
cmp
negl
pop
dec
lods
lea
mov
mov
mov
notb
jmp
popa
cs
sub
cld
add
adc
fistpll
bound
xorl
jl
les
sbb
cmpsl
pusha
mov
inc
fistpl
lock
lods
jne
stos
adc
mov
jge
mov
pop
add
ds
sub
xchg
aad
sbb
jge
gs
lahf
push
stos
mov
arpl
push
jp
cs
std
jns
fsub
and
lds
jecxz
sahf
xor
nop
iret
pop
mov
hlt
out
add
loop
cmc
mov
scas
lahf
adc
test
and
inc
jne
stos
cld
cmpsb
push
inc
mov
jecxz
push
mov
daa
out
loopne
into
push
pusha
loope
lock
nop
ret
int3
arpl
dec
xor
in
pop
jne
aam
xchg
negl
sub
adc
or
adcb
mov
cmpsl
enter
movsl
sahf
loope
bound
pop
mov
cmp
cmp
pop
jmp
cmp
ret
in
pop
inc
mov
push
imul
jne
and
fldcw
lock
add
or
mov
mov
jmp
js
cmp
shll
daa
repnz
mov
data16
or
lahf
mov
test
pop
xchg
inc
lret
sub
push
imulb
pop
jne
popa
dec
and
inc
inc
push
xchg
xorb
mov
and
push
push
fmuls
hlt
push
lret
les
adc
fldl
pop
mov
push
xchg
mov
pop
leave
dec
dec
dec
push
add
jo
enter
mov
cmp
mov
iret
dec
fst
dec
repnz
les
ret
nop
inc
out
push
cmp
mov
sub
iret
je
mov
rol
mov
jg
test
and
cmpsl
fdivrp
or
lock
lods
adc
push
jo
aam
sub
mov
pop
repz
or
ds
lret
and
pop
mov
mov
nop
mov
pop
pop
mov
loope
and
cmpb
mov
sahf
es
popa
ret
and
mov
repz
add
sub
test
mov
test
scas
mov
pop
pushf
cmp
jp
popf
fld
xor
std
inc
inc
mov
pop
hlt
or
ljmp
xor
mov
add
testb
clc
test
gs
leave
in
in
loopne
dec
lods
or
or
dec
divb
cli
sub
mov
ret
and
imul
push
sub
cmp
push
lods
mov
enter
test
iret
push
or
pop
cmp
mov
loop
mov
jl
int3
lret
mov
mov
popa
sbb
mov
rclb
push
in
inc
sahf
pop
sub
sbb
sahf
test
test
out
sub
dec
mov
sub
mov
mov
sub
mov
mov
and
fsubs
ret
sub
mov
jne
in
dec
adc
stos
sbb
pop
inc
sub
mov
imul
mov
lds
dec
stos
stos
dec
add
dec
enter
int3
jl
jb
mov
dec
mov
pop
xchg
push
or
idivb
sub
jae
test
lret
imul
hlt
add
pop
leave
test
add
and
add
mov
stos
xchg
sti
xor
jne
aam
dec
sub
je
jmp
and
movsb
xchg
mov
addr16
stos
aas
mov
mov
pop
hlt
jge
adc
xchg
jne
sub
lret
pushf
dec
or
ffree
cmp
pop
jle
jmp
inc
add
imul
shrl
sar
xchg
mov
xchg
jg
adc
add
repnz
enter
int3
xchg
test
sbbl
push
push
into
sbb
pusha
or
es
or
insl
mov
xor
cwtl
add
mov
shlb
mov
xchg
cld
adc
repnz
orb
sbb
std
add
lods
js
addl
mov
mov
inc
pop
addl
cwtl
clc
neg
mov
movsl
dec
fcoms
imul
roll
add
rorb
sub
cmp
sub
jo
xchg
ret
stos
pop
sbb
cmp
gs
int3
shll
outsb
stc
js
mov
call
lods
adc
mov
cmc
pushf
stos
sub
mov
lea
or
stc
mov
imul
cmpsl
fdivl
test
inc
and
cmp
mov
add
xchg
xchg
xchg
cmpsb
push
test
jne
lods
into
cmpsb
loopne
dec
js
call
mov
lods
flds
pop
lods
pop
xchg
fimuls
mov
das
arpl
andl
inc
stos
mov
add
cmpsb
bound
mov
decb
into
jne
mov
mov
sar
daa
and
hlt
inc
int3
add
or
orl
lcall
add
mov
movsl
out
repz
mov
out
cwtl
daa
lods
dec
xchg
and
dec
test
cmc
in
jge
pop
push
adcl
js
fsubr
inc
sub
lods
pop
jl
es
in
js
xchg
push
cmp
jne
add
xor
xchg
add
lahf
ret
test
sahf
out
xchg
push
repz
push
fcmovnb
sub
sbb
out
inc
scas
test
inc
sbb
dec
cmp
sbb
jns
dec
inc
cld
jne
sub
les
adc
mov
jp
xchg
in
mov
mov
dec
clc
jle
fcompl
scas
fs
les
mov
adc
cwtl
int3
movsb
sub
test
incl
cmp
mov
inc
fdivs
pusha
js
mov
push
cmp
push
std
push
ljmp
mov
pushf
jo
inc
dec
jno
or
mov
insb
sahf
and
mov
pop
outsb
inc
insl
ja
sbb
int
pop
inc
cltd
jge
out
adc
ror
mov
shlb
repz
in
mov
jmp
scas
arpl
add
cmp
rcl
jmp
imul
inc
jg
sbb
leave
xorl
pop
arpl
movsl
jno
jp
add
jmp
or
sbb
add
pushf
in
xchg
mov
insl
inc
adc
jl
mov
mov
popf
sbb
xchg
out
enter
mov
mov
testb
jne
shrb
xor
sti
pushf
push
hlt
leave
ja
and
testb
xchg
mov
pop
xor
jnp
xchg
fstpl
in
pop
or
cmc
xchg
sbb
add
mov
stc
jg
sub
mov
int
aam
jne
mov
rcll
mov
mov
pop
pop
add
fwait
adc
sub
sti
adc
arpl
int3
mov
fcoml
mov
mov
mov
ret
mov
mov
cli
cwtl
mov
pop
add
mov
lret
nop
cld
cwtl
leave
pop
jb
or
cmp
inc
push
imul
scas
test
fs
pusha
shlb
pop
hlt
push
popa
outsb
cmpsb
mov
loope
fisubrl
xorb
inc
mov
add
mov
mov
push
fs
xlat
xor
cli
ror
hlt
cwtl
push
pop
divb
popf
stc
sbb
imul
sti
les
aaa
push
shlb
cmp
addr16
enter
out
jmp
imul
inc
mov
and
xlat
aas
cwtl
mov
jg
mov
xor
arpl
fstps
pop
hlt
inc
jne
ja
pop
and
shrl
inc
or
add
sbb
imul
repz
in
jl
jmp
sbb
cmp
decb
jbe
cld
inc
subb
inc
xchg
xor
jne
loopne
call
push
cli
mov
mov
shll
jno
loope
adc
pop
mov
jae
orb
call
daa
and
xchg
std
mov
inc
mov
add
and
adc
sbb
ficompl
mov
mov
fstpl
out
mov
nop
out
mov
icebp
mov
dec
adc
out
cwtl
aas
cwtl
inc
push
imul
adc
sub
jne
aaa
sub
mov
xchg
sub
lret
sub
pop
ljmp
movsl
or
add
sub
cmpsl
ss
jp
lds
lds
mov
pop
sub
jo
jne
lods
lahf
and
nop
sahf
inc
push
jg
inc
mov
xchg
jno
inc
lahf
jno
push
repz
ja
dec
clc
jl
movsl
in
xor
push
mov
outsl
insb
jle
add
lods
mov
outsb
in
divb
stc
pop
cmp
inc
mov
mov
std
test
cmp
fs
add
lahf
adc
into
mov
push
scas
fpatan
out
sbb
inc
in
xor
fdivs
inc
mov
das
mov
dec
sbb
int3
lods
imul
mov
xor
mov
adc
pop
hlt
xchg
dec
mov
fisubl
scas
fisttps
outsl
jmp
and
and
add
iret
ret
inc
divl
popf
shl
inc
or
imul
jl
inc
mov
jno
jp
mov
inc
int
pop
push
pop
fcomps
push
xor
inc
test
cmc
pop
xchg
push
and
test
add
stos
dec
push
add
dec
enter
xor
mov
inc
xchg
dec
popf
mov
sbbl
cmpsl
cmp
int
jnp
insb
gs
sti
stos
sbb
imul
sub
insb
leave
jecxz
adc
xor
scas
adc
cwtl
dec
add
cwtl
int
addb
fisubs
stos
pop
repz
jo
mov
mov
mov
aad
push
add
addr16
jns
pop
adc
fnstenv
ljmp
jne
fs
pop
pop
jo
stos
jle
arpl
push
rolb
mov
fcom
pop
jmp
xchg
or
mov
pop
dec
stos
gs
out
inc
es
je
inc
mov
lock
fs
dec
add
mov
adc
adc
sub
aaa
pop
and
adc
bound
hlt
inc
xchg
out
dec
sub
push
fidivrl
mov
add
sbb
out
push
adc
sbb
mov
cmpsl
fisubrs
cmpb
cmpsl
lods
mov
int
lods
pop
sbb
xchg
mov
leave
jg
insb
fcomp
hlt
xchg
cmp
xchg
push
sub
cltd
syscall
pushf
pop
mov
mov
cwtl
popa
nop
sbb
adc
pop
loope
sub
jb
hlt
mov
pop
inc
xor
mov
scas
rcrl
add
in
sub
adc
hlt
xchg
ja
pop
ucomiss
stc
push
mov
ret
mov
mov
jbe
jmp
and
mov
pop
sbb
lods
mov
nop
sbb
rclb
aas
loopne
xlat
pop
jns
loopne
inc
fs
lcall
add
sbb
lcall
ja
bnd
ljmp
icebp
and
stos
dec
fnstcw
pop
add
pop
dec
and
or
scas
adc
cmc
jb
adc
imul
nop
mov
pop
pushf
fiaddl
mov
lock
ja
jo
cmpsl
inc
jmp
in
je
les
sbb
push
lcall
dec
scas
or
sbb
mov
sahf
xlat
enter
mov
cwtl
jne
std
fmull
popf
into
shlb
pusha
out
std
jge
out
sub
jne
movsl
aas
imul
sbb
outsl
stos
dec
xchg
loopne
xor
lahf
aam
jns
decb
jno
push
fidivrs
les
mov
test
and
loope
icebp
jb
in
sub
lods
insb
pop
js
pop
imul
call
mov
mov
out
test
inc
push
bnd
sbb
stc
and
cmp
push
adc
stos
cmp
repz
or
subb
and
adc
jne
inc
call
dec
xchg
jg
or
rorb
jne
rolb
mov
or
push
out
out
mov
mov
ja
test
test
repz
cmc
ret
xchg
aam
jg
push
cmp
xor
call
int3
ret
jne
jae
int
inc
rclb
cmp
xchg
lahf
and
dec
mov
inc
fcomip
stos
pop
inc
push
pushf
icebp
mov
rorb
rcll
leave
mov
xchg
call
cmp
cmp
dec
stos
pop
and
sub
sbb
push
jg
frstor
pop
idivb
jb
add
xor
and
and
stc
leave
jb
leave
les
xchg
jb
test
outsl
mov
pop
jne
imul
mov
xchg
mov
sub
scas
popa
mov
ss
aad
shrb
stc
test
jne
xchg
dec
lods
outsb
cmpsb
js
dec
bound
mov
mov
daa
mov
dec
test
xchg
xchg
xchg
mov
inc
add
in
xchg
mov
fisubl
inc
sarl
push
lock
jmp
sub
test
xorl
xlat
movsb
out
xor
stos
int3
test
push
inc
mov
add
mov
mov
mov
arpl
lds
pop
push
jbe
mov
notb
test
into
aam
jg
aam
fistl
mov
ljmp
stos
sub
loopne
mov
or
dec
lods
mov
sti
fcoml
cmp
jns
shll
icebp
subl
add
repnz
mov
scas
cmp
hlt
push
xor
xlat
icebp
fsubl
pusha
in
das
cmpsl
mov
test
mov
push
lret
clc
and
sub
jge
inc
sahf
xchg
sbb
addr16
push
inc
rcrb
mov
sub
mov
or
repnz
cmp
outsl
sbb
xor
fldt
fstpl
jp
add
push
fs
add
outsl
cli
mov
rolb
jl
mov
add
in
cmp
inc
xlat
sti
imul
fsub
fsubp
arpl
xor
or
mov
out
enter
xor
out
outsl
xchg
imulb
mov
adc
scas
mov
or
xchg
pop
pop
dec
mov
jno
mov
pop
cmp
cmpb
add
pop
roll
pop
fldcw
mov
pop
rorl
mov
test
dec
mov
inc
dec
insb
mov
pop
and
mov
sub
cmp
sub
inc
xchg
fnstsw
ffree
int3
mov
hlt
cmp
scas
in
jg
imul
mov
mov
arpl
inc
pop
ds
xchg
out
loope
push
sti
call
into
dec
pop
jmp
pop
mov
jno
xchg
call
xchg
bound
push
dec
lds
repnz
jnp
hlt
adc
push
pop
arpl
pusha
les
dec
imul
inc
dec
decl
pop
je
les
ret
xchg
cld
mov
add
jne,pn
push
jnp
sub
movsl
lcall
inc
xchg
mov
out
mov
adc
int
inc
inc
lcall
insl
fiaddl
loopne
lcall
aad
movsb
jne
sti
jp
sbb
lret
mov
and
mov
adcb
jecxz
and
pop
xor
inc
std
lods
movsl
xchg
fabs
or
test
in
lods
jnp
push
pop
jge
jecxz
add
scas
jnp
addl
pop
rol
test
sub
jl
jmp
imul
popf
xchg
lods
mov
jecxz
hlt
xor
mov
repnz
mov
loop
or
arpl
dec
out
add
pop
jb
adc
mov
leave
fistl
hlt
fnstenv
insl
loop
stos
add
arpl
cmp
add
in
movsl
cwtl
les
push
pop
xchg
xchg
mov
daa
mov
hlt
loope
test
repnz
stos
ljmp
insl
adc
jnp
jae
movsb
mov
lods
inc
mov
cwtl
xor
in
into
lods
mov
fistps
xchg
sub
cld
mov
inc
mov
rcl
lods
push
outsl
mov
daa
cld
cwtl
xchg
or
popf
xchg
aas
scas
sbb
scas
test
lret
dec
add
jns
xchg
adc
push
add
pop
mov
movsl
xor
test
fsubrl
and
mov
shl
dec
sbb
aaa
outsb
xchg
inc
mov
neg
jne
insl
and
and
fdivp
scas
cmp
cs
aam
pop
outsb
sahf
adc
outsl
mov
leave
ret
scas
rcrl
scas
add
bound
or
scas
push
and
lods
sbb
sbb
icebp
pushf
lods
aad
and
push
jb
add
test
pop
mov
std
push
and
cmpsb
hlt
jae
hlt
inc
les
sub
fbld
in
repz
add
push
fidivs
mov
mov
jl
push
imul
popa
inc
lods
push
cmpsl
fidivrl
aas
or
push
aad
fimuls
data16
cmp
mov
sub
or
into
stos
pop
cmp
out
push
mov
add
arpl
add
fsubl
push
lahf
outsb
lea
int3
repnz
dec
dec
inc
ljmp
out
cmp
fcmovb
mov
les
mov
cmp
ret
cmp
sub
js
mov
clc
roll
lods
mov
xchg
inc
adc
and
sub
jmp
xor
push
fdivl
fisubl
push
or
pop
punpckldq
je
mov
mov
xor
movsl
imul
lret
lret
movsl
inc
mov
mov
sti
mov
inc
stos
loopne
hlt
ljmp
das
mov
fwait
jg
iret
xor
movl
es
xor
shrb
xorl
addl
cmp
pop
aaa
dec
pop
mov
repnz
pop
hlt
stos
mov
push
xor
call
fwait
sbb
xchg
cwtl
stc
ficompl
movsl
test
jbe
rcll
xchg
inc
inc
negb
mov
jne
pop
das
cmp
mov
enter
mov
mov
fimull
fucomp
lock
jne
scas
cmp
sub
add
fnsave
stc
loop
dec
cmpsb
sub
fdivr
cmpsb
fcoml
fsts
mov
sahf
cmpsb
dec
push
gs
xchg
hlt
sbb
mov
mov
icebp
xchg
adcb
iret
cli
jne
scas
or
shrl
push
inc
aaa
mov
add
lret
enter
andb
ljmp
es
stc
cmpsl
xchg
loopne
and
test
dec
loopne
pop
or
lods
pop
cmpsb
inc
xchg
pop
int3
stos
xor
push
mov
adc
pop
mov
mov
dec
das
xor
sbb
pop
popa
inc
sub
hlt
push
sbb
sbb
int
cmc
mov
push
mov
pop
mov
loop
or
into
mov
push
pop
mov
mov
jl
mov
mov
dec
xlat
in
popf
add
cmp
pop
pop
loope
ja
das
andb
hlt
sub
test
add
push
push
stc
push
jne
mov
pop
xor
lods
ror
mov
mov
out
jmp
sub
into
sets
enter
hlt
sbb
mul
add
test
in
add
sub
mov
hlt
int3
sti
rclb
push
xchg
mov
mov
popa
push
ds
push
dec
stos
xor
iret
movsl
adc
in
repz
add
shrb
bound
sti
or
mov
in
xchg
and
sub
dec
pop
sbb
push
setg
pusha
jne
out
xchg
add
stos
dec
ljmp
arpl
insb
aad
pop
mov
pop
sbb
std
out
mov
adc
sub
push
incb
or
loopne
fdivrl
sbbl
testl
adc
aas
mov
mov
cmpsl
mov
lcall
dec
xor
jne
mov
mov
pop
rorl
mov
pusha
cmp
cld
cmp
pusha
or
pop
popa
push
clc
mov
add
lods
jmp
mov
hlt
pop
into
jnp
pop
adc
lcall
mov
test
aas
rcl
pop
sbb
leave
mov
jae
and
out
arpl
push
mov
lret
xchg
gs
xchg
pushf
arpl
sub
es
pop
stos
movsb
and
fwait
addb
adc
xlat
subb
inc
xchg
cmp
hlt
pusha
mov
jae
dec
jo
pop
rcrl
mov
dec
hlt
mov
enter
les
mov
pop
hlt
cld
dec
mov
adc
xor
sub
and
lods
std
mov
mov
stc
adc
or
lcall
sti
jnp
cmp
decl
aas
pop
rcrl
adc
sbb
mov
inc
es
aas
push
out
xchg
and
inc
sbb
xorb
xor
xlat
jae
cmc
dec
or
movsb
cld
scas
cmp
pop
cmp
add
sub
test
aas
out
add
mov
inc
mov
stos
divl
subl
xor
in
jge
or
jnp
gs
outsb
scas
lods
and
bound
lcall
add
dec
xchg
and
and
push
enter
mov
xor
push
lods
cmp
dec
or
ljmp
or
lcall
or
les
cs
sub
pop
neg
xchg
cli
or
psubb
pusha
or
or
mov
les
lock
cmp
dec
mov
into
cs
inc
bound
or
cmp
sub
out
cmpsb
mov
pop
std
cmpsb
add
inc
mov
cmp
push
xor
mov
ficompl
mov
adc
std
nop
cli
xor
mov
add
xchg
je
mov
pop
scas
repz
mov
xor
lcall
mov
nop
sbb
cmp
inc
add
adc
test
mov
add
cmp
sub
aas
mov
mov
xchg
das
mov
cmpsb
xchg
push
xchg
jne
add
jmp
pop
cmpsl
ds
jne
inc
mov
mov
jae
stc
imul
cltd
adc
add
int3
shll
enter
out
add
imul
xchg
into
push
sbb
mov
and
or
jae
inc
out
test
pop
fnstsw
or
fildl
xchg
add
mov
lods
rcll
xchg
jbe
push
cli
push
out
sbb
test
pushf
sbb
xor
aam
mov
int
mov
test
aas
cmc
sbb
out
jmp
cmp
shlb
hlt
movsb
dec
jmp
add
add
insl
inc
mov
repz
xlat
xor
dec
in
inc
lahf
daa
lock
mov
inc
mov
push
shr
xor
gs
imul
sbb
andb
loope
ret
xor
adc
in
inc
nop
add
leave
addl
pop
dec
imul
lahf
pop
push
inc
rolb
add
call
enter
scas
rcrb
sar
insl
iret
or
roll
cwtl
and
imul
fcomps
dec
aas
xor
jl
insb
dec
push
xchg
jnp
loopne
xchg
shrb
fimuls
out
outsb
dec
mov
mov
dec
movsl
out
stc
ret
movd
xor
push
ja
push
outsl
jecxz
pop
sub
push
push
or
mov
mov
lock
lods
mov
cmpsb
and
push
mov
loope
cmpl
xchg
cs
and
aad
movsb
xchg
push
dec
test
sub
fsts
mov
mov
les
int3
cli
lcall
jle
sbb
xchg
popa
ret
mov
cmpsl
mov
or
lahf
in
inc
mov
test
iret
fcmove
test
xchg
add
or
out
mov
pop
push
shrl
pushf
addr16
inc
rcl
stos
enter
mov
addr16
dec
pop
mov
push
jle
inc
sbb
lahf
or
xchg
xchg
jne
and
ja
js
test
add
ljmp
scas
mov
ljmp
fistpll
or
dec
push
in
dec
loopne
dec
data16
nop
int3
sbb
mov
inc
lahf
mov
imul
and
ds
outsb
stc
es
inc
jne
daa
add
outsl
mov
mov
adc
push
cwtl
test
sbb
xchg
sub
arpl
pop
mov
fdiv
xor
stos
push
out
cltd
in
enter
hlt
mov
add
ret
loopne
mov
gs
dec
cmp
pop
dec
inc
cmp
mov
sarb
test
idivb
sahf
adc
or
inc
cmpb
push
mov
test
loop
mov
sti
mov
cmc
nop
das
insl
daa
lea
fistl
aas
scas
inc
or
xchg
scas
pop
stos
movsb
rorb
lods
pop
dec
mulb
dec
lret
pushf
and
push
cmp
clc
add
mov
mov
cmp
fstpt
lods
shrb
cmpsb
xor
test
mov
mov
fs
shl
jle
cmp
fldcw
ret
out
jb
xchg
sti
ljmp
add
xorl
xchg
cli
pop
sbb
inc
push
mov
pop
push
dec
inc
mov
mov
xor
movsb
mov
sub
mov
mov
jg
ja
fnstenv
hlt
inc
pop
xlat
sub
adc
add
mov
or
mov
adc
pop
mov
adc
icebp
jmp
lock
xchg
pop
mov
jge
cmp
add
pop
movsb
dec
xchg
mov
in
vaddpd
or
dec
out
dec
les
add
int
mov
clc
dec
mov
jno
test
mov
push
test
or
pusha
pop
xchg
movb
jnp
test
push
out
rorb
push
mov
dec
jo
mov
sub
pop
push
cmp
sbb
lret
lahf
arpl
stos
loope
add
leave
mov
loope
test
mov
pop
and
xchg
jne
mov
movsb
out
cmp
or
jle
stos
mov
inc
loop
cmc
mov
std
call
and
inc
pop
cmp
icebp
xchg
loopne
imul
xlat
dec
ja
add
test
xchg
hlt
bswap
andl
cmp
fisubrs
sti
stos
and
mov
or
loop
dec
cmp
sti
xor
cwtl
sub
mov
imul
ds
gs
hlt
and
inc
cmp
xchg
fsubrs
std
mov
dec
repnz
pop
hlt
ja
push
cmp
add
jle
pop
or
call
push
dec
popf
idivb
push
out
xchg
xchg
ljmp
xor
xor
mov
insb
mov
jne
es
repz
rolb
ljmp
lock
ret
ret
mov
inc
sub
or
push
and
push
mov
and
outsb
cwtl
test
xchg
jbe
sbbl
out
xchg
mov
push
nop
shl
outsb
dec
jmp
movsb
sbb
cmp
ljmp
add
cmp
mov
into
into
cmpsb
sbb
adc
mov
mov
fimull
test
jae
sbb
lahf
cmp
insb
xor
push
xlat
and
int3
xchg
movsl
psubq
cld
adc
mov
ret
ds
mov
adc
int3
adc
jno
shlb
shlb
hlt
sub
or
pusha
repnz
dec
cs
inc
cltd
outsb
add
rorl
cwtl
lods
inc
pop
loop
dec
sub
and
ss
cmpsl
lret
fbstp
enter
std
jp
push
popa
push
lods
mov
add
fmul
hlt
xchg
adc
mov
mov
scas
mov
inc
sbb
das
aam
push
rcrl
nop
pop
loopne
mov
xchg
mov
std
pop
call
repnz
mov
and
mov
push
test
sbb
movsb
push
sub
sbb
shrl
cli
pop
cmpsb
mov
int3
hlt
pop
outsb
frstor
inc
inc
sti
cmp
push
adc
xchg
in
push
cmp
and
mov
mov
and
mov
mov
std
imul
dec
jecxz
js
sbb
movsl
sub
xor
addr16
mov
stos
adc
test
data16
fstps
cmpsl
jecxz
inc
pop
adc
mov
mov
das
scas
jge
cmpb
cmp
cld
mov
addl
pop
adcb
mov
lret
into
fld
push
cmpsb
pop
imul
sahf
cwtl
xchg
mov
lret
out
xor
iret
adc
cwtl
lods
popa
add
inc
dec
hlt
js
rclb
in
and
imul
adcb
movsb
movsl
gs
pop
dec
outsb
xor
sub
fdivp
push
pop
fldl
dec
xchg
dec
arpl
mov
enter
adc
mov
insb
repz
aaa
jo
pusha
jo
cmpl
push
cwtl
arpl
jbe
adc
mov
adc
lds
push
mov
add
fwait
pop
idivb
push
fistl
enter
jle
mov
mov
dec
loope
fsts
adc
or
aas
imul
in
xor
cwtl
ljmp
mov
pop
xchg
test
test
xchg
mov
pop
mov
cmpsb
dec
add
adc
nop
js
add
mov
xor
adc
ja
push
push
dec
dec
out
popf
fisttpl
hlt
fldenv
mov
inc
popa
aad
push
jl
jbe
and
jnp
cmp
les
xorl
lods
jo
jne
mov
ds
cs
mov
lods
sahf
bound
inc
mov
inc
mov
jnp
push
adc
adc
and
push
add
inc
dec
popf
adc
push
mov
xchg
sbb
hlt
sarb
sahf
lret
cmp
jne
cwtl
mov
dec
and
hlt
ret
pop
loop
jo
les
mov
nop
and
mov
ffree
inc
fsubl
sub
mov
mov
dec
call
aam
inc
fnstsw
movsl
aad
stos
push
enter
mov
leave
outsb
push
int3
in
cld
in
js,pt
sbb
pop
shll
stos
mov
daa
sbb
jne
adc
push
mov
lods
adc
lcall
xlat
inc
arpl
inc
addb
jae
xorl
add
inc
rolb
sbb
aas
test
xor
arpl
push
mov
stos
orb
aas
testb
es
cltd
sbb
stos
push
push
pop
mov
xor
cmp
mov
mov
add
mov
inc
js
lods
xchg
pushf
jge
test
pop
jns
adc
divb
jbe
mov
movsb
sbb
xchg
fists
mov
xor
xchg
loop
ds
dec
hlt
sbb
mov
dec
fnsave
pop
jae
mov
es
outsl
cwtl
sti
inc
movsl
mov
test
repz
test
xchg
mov
push
stc
cs
hlt
int
test
mov
xchg
sbb
orb
out
dec
mov
cli
movsl
jg
adc
sbbb
mov
mov
pop
mov
jecxz
stc
and
ja
js
test
hlt
fwait
test
jle
stos
repnz
cltd
pop
leave
dec
and
fs
cmp
arpl
push
test
push
cmp
divb
jge
hlt
push
or
outsl
adc
int3
and
inc
jae
mov
nop
lds
mov
lret
in
stos
dec
and
nop
xor
fucom
out
inc
pusha
push
shl
or
add
sbb
mov
arpl
jle
add
ljmp
mov
sti
add
aas
push
faddp
jg
inc
or
pusha
rcrl
xlat
mov
jge
xchg
icebp
and
test
rep
mov
mov
mul
call
and
test
dec
outsl
daa
popf
icebp
hlt
adc
push
popa
xchg
mov
push
cmp
and
pushf
xor
dec
mov
movsl
and
inc
add
lcall
movl
adc
test
lea
insl
popf
push
mov
outsl
stos
pop
jns
or
sbb
xor
sbb
jecxz
adc
cmc
andl
sbb
adc
jae
adc
test
dec
xchg
dec
and
les
test
xor
xchg
mov
pop
ss
loop
inc
adc
sahf
mov
inc
mov
iret
stos
xchg
pop
inc
pop
addr16
pop
mov
lcall
add
fstpl
jg
aas
dec
cmp
clc
das
jns,pn
jge
in
inc
add
mov
jg
or
jmp
test
and
shrb
lods
xchg
nop
mov
pop
adc
or
jno
shr
pop
test
xor
je
das
pop
rolb
add
jae
int
cli
cwtl
in
mov
mov
pop
mov
fmull
add
and
pop
push
lret
icebp
inc
cmp
lods
movsb
add
aad
ja
fs
pop
gs
test
mov
stos
js
xchg
add
mov
mov
sbb
fadds
adc
xchg
pusha
daa
push
test
pop
and
hlt
sbb
mov
pusha
mov
xor
adc
loope
rcrb
jne
das
and
stos
xchg
fxch
xor
jp
push
in
cmpsl
fucom
mov
rolb
stos
jne
ljmp
fbld
mov
fsub
mov
cltd
aad
mov
outsl
pop
lea
cli
and
movsl
fsubrl
hlt
or
stos
xchg
mov
pop
mov
dec
out
add
xor
mov
dec
fstpl
and
das
cmpsl
loop
rolb
enter
les
fsts
hlt
mov
jg
and
movsb
es
nop
or
sub
sub
push
sbb
loopne
hlt
lock
cmpsl
xchg
les
inc
movsl
pop
adcb
mov
xchg
jg
inc
popa
xchg
test
inc
hlt
add
or
scas
mov
nop
xchg
cltd
pushf
sub
lea
pop
cld
loope
lea
aas
insl
cs
cmp
adc
dec
fadds
pop
jo
push
mov
mov
in
pop
hlt
mulb
xor
xor
outsl
cmp
ds
inc
jne
gs
sbb
lcall
mov
inc
pop
jle
push
pop
xlat
add
inc
cwtl
dec
sti
mov
call
add
sub
push
xor
mov
adc
inc
jl
jne
sti
jl
movsb
cmpsl
outsb
pop
imul
fldt
subl
push
pushf
and
fsubs
cmpsl
cmp
mov
or
cmpsl
es
cwtl
fsubl
shrd
jmp
cmpsb
int
xchg
fcmovbe
pop
or
rcrb
push
jne
mov
ffree
cmp
repnz
mov
lock
scas
add
out
sti
sub
int
add
sbb
test
mov
push
enter
add
test
in
scas
or
sub
ror
inc
rclb
mull
pop
jnp
in
sub
mov
push
jle
jle
xor
scas
mov
push
pop
or
fnsave
into
pop
mov
shrl
jp
jmp
jae
sti
adc
les
jne
jb
aam
mov
into
sbb
hlt
stos
into
rolb
mov
cmp
stos
nop
into
dec
hlt
mov
cmp
inc
xlat
leave
push
shlb
or
gs
or
mov
jl
rorb
stos
cmp
test
xorb
or
pop
sub
mov
fbstp
movsb
call
xor
rcl
dec
sbb
fidivs
mov
inc
cmpsl
push
mov
mov
fldl
adc
sbb
imul
rcll
dec
bswap
dec
inc
jae
sbb
in
jnp
js
les
xchg
pop
cs
inc
push
ja
mov
ja
cs
orl
nop
test
push
cld
inc
jg
add
and
leave
cmp
hlt
sub
jmp
xor
dec
fldln2
nop
out
cmc
dec
adc
or
push
cwtl
sahf
and
mov
or
pop
xchg
pop
arpl
call
rolb
push
mov
test
xor
movsb
sub
add
addb
aam
push
pop
and
lods
iret
gs
outsb
lock
das
cmpsb
notl
add
mov
dec
mov
sub
cmp
sarb
xchg
xchg
cmpsl
cwtl
xor
nop
jno
mov
addb
mov
sub
pop
hlt
adc
ss
into
icebp
cs
test
fists
std
lods
loop
mov
xchg
pop
mov
stc
dec
jecxz
jg
xchg
les
mov
hlt
stc
inc
popf
loopne
loop
mov
xchg
mov
mov
test
int3
push
loopne
mov
or
enter
inc
or
std
add
mov
sub
lea
cld
add
add
sbb
inc
pop
cmpsl
xor
mov
sub
lods
imul
int3
sub
pop
aam
imul
stos
inc
inc
fs
sub
iret
cwtl
pop
push
sbb
nop
mov
dec
mov
cmpl
xchg
jmp
mov
mov
inc
hlt
rol
stos
adc
loope
xor
mov
mov
xchg
fsts
jg
sub
insl
mul
or
and
int
stos
pop
mov
aas
sahf
xor
lahf
hlt
addr16
into
imul
mov
pop
mov
loopne
mov
push
xorl
fucomip
decb
jnp
sti
fisttpl
adc
dec
and
aam
lahf
or
xor
nop
jae
adc
mov
mov
test
cltd
cwtl
fisttpl
lds
push
hlt
xchg
out
call
mov
or
aaa
sub
mov
pcmpeqd
mov
icebp
xchg
ja
mov
daa
jnp
fisubrl
jne
adc
sub
inc
test
mov
ds
mov
jmp
push
xchg
sbb
mov
into
cmp
xchg
jnp
dec
cmp
mov
aam
jo
test
imul
dec
clc
or
cmpl
mov
xor
pop
add
dec
loop
mov
ret
fmul
scas
or
sbb
jg
jmp
jmp
pusha
in
pushf
pop
mov
add
hlt
int
js
pop
sub
push
pusha
mov
repnz
jb
inc
add
fmull
or
imul
addl
mov
xor
mov
int
out
les
aam
xor
mov
popf
xchg
shlb
pusha
cli
jbe
popa
mov
inc
aam
adc
dec
and
dec
cli
mov
jae
imul
test
adc
mov
mov
cmp
cltd
in
add
pop
sti
push
andl
pop
mov
xchg
loope
fcoml
movsb
decl
stos
xor
mov
mov
adc
stos
les
add
sub
jle
adc
imul
add
xchg
mov
fldcw
int
xor
sub
aas
push
call
clc
sub
inc
fdivrs
add
mov
push
jno
mov
out
test
out
jne
jle
sbb
mov
pop
test
stc
xchg
lds
repz
dec
and
sub
cltd
jecxz
sub
fdivs
sbb
test
mov
nop
cld
lret
sub
pop
pop
xchg
test
pushf
cs
cltd
mov
and
dec
xchg
ficoml
movsl
aam
test
inc
and
jl
xchg
les
and
movsb
cld
sub
loope
rolb
imul
es
cmp
adc
stos
or
addl
mov
xchg
pop
or
push
sbb
inc
js
cld
fistpl
fiaddl
add
fadds
adc
xchg
lcall
xor
mov
pop
leave
test
jnp
sbb
mov
lret
push
sub
inc
mov
clc
scas
pushf
adc
rcrb
mov
imul
scas
test
rcrb
mov
sbb
add
sub
fld
les
daa
data16
subb
push
cmpsl
jmp
sbb
jae
sbb
cmp
fbstp
enter
pop
repnz
call
mov
or
dec
addl
fstl
xchg
or
mov
mov
gs
push
inc
jo
cmp
inc
movsb
test
stos
cs
or
fdivl
insb
mov
dec
cltd
es
notl
in
fadd
flds
xchg
in
enter
test
push
imul
cltd
adc
or
pop
loop
jbe
fidivs
pop
cwtl
adc
jge
sub
sub
out
adc
ror
jne
xor
xor
sbb
ja
xor
bound
jp
sub
push
cmc
add
inc
or
test
mov
mov
int3
hlt
inc
mov
xor
xchg
icebp
mov
mov
and
int3
jne
outsb
mov
scas
and
pop
xorl
xchg
scas
mov
add
pop
jg
xchg
sub
insb
jp
pop
hlt
mov
pop
sahf
inc
mov
add
rcrb
mov
jl
mov
scas
mov
fisubs
jge
xor
add
jne
sarb
hlt
sub
mov
or
data16
jl
cmp
dec
dec
repnz
dec
pop
bound
setl
daa
mov
xor
inc
push
test
pop
xchg
in
shrb
sub
sbbl
pushf
nop
mul
or
add
les
pop
adcb
and
sub
out
hlt
fdivrp
pop
sub
xlat
mov
pushf
pushf
mov
scas
pop
mov
sbb
sbb
pusha
in
adc
and
mov
or
add
aad
dec
fdivrs
dec
fisubrl
mov
add
decl
mov
popf
inc
dec
arpl
pop
loope
insl
incb
dec
popf
xchg
xor
cmp
push
cwtl
cmp
mov
add
add
insb
in
mov
mov
mov
es
and
mov
xchg
add
hlt
in
sarl
iret
jl
test
je
in
mov
insb
mov
enter
popa
xor
sbbb
adc
aam
insl
push
push
lock
cwtl
pop
sub
jle
mov
jb
cmp
push
cmp
stos
jmp
test
mov
hlt
sub
out
cwtl
pop
andl
sub
pop
fdivl
mov
xchg
mov
lods
call
testb
popf
lcall
and
mov
dec
loope
js
std
dec
into
ficomps
aad
jl
mov
loop
lods
movsb
cmp
inc
test
hlt
xor
pop
mov
fsubrl
pop
xchg
popa
dec
cmp
lahf
pop
and
fisubl
push
adc
inc
pop
gs
repnz
mov
mov
fldt
idiv
es
mov
pop
lahf
fnstenv
bound
out
sbb
out
adc
cmpsw
test
rol
xor
adc
push
cmp
push
mov
clc
lahf
popl
push
add
xor
stos
add
and
arpl
add
lods
fsubr
out
pusha
icebp
xor
xchg
push
mov
adc
xor
dec
stos
loope
notl
data16
lahf
loopne
or
cmc
imul
pop
xabort
push
pop
and
pop
push
pop
mov
in
jecxz
dec
fisttpll
adc
adc
inc
mov
push
bound
sahf
scas
std
sub
aad
jns
hlt
notb
cltd
xchg
es
jge
es
in
xchg
mov
adc
cmp
xor
repz
mov
xor
jle
mov
in
sub
mov
pop
or
jb
fmul
sub
adc
jo
popa
test
into
adc
pinsrw
inc
cmc
loopne
test
cld
lock
mov
sub
pop
pop
lods
subl
or
push
loope
in
lret
inc
imul
sbb
push
inc
and
scas
xchg
insl
pushf
into
pusha
or
mov
lods
adc
push
adc
les
into
jg
es
jmp
sub
pushf
jecxz
fisttpll
mov
jg
add
mov
cmp
js
mov
jb
addl
fldl
jne
out
cmp
push
jnp
add
jp
es
stos
push
jne
mov
pop
xor
test
rorb
jmp
insl
xor
or
or
push
sti
jnp
pop
pushf
lret
and
test
pop
enter
pop
lods
loopne
dec
in
daa
cltd
cmp
adc
int
enter
push
shll
or
pop
jmp
xor
mov
hlt
ja
xchg
dec
repz
adc
and
mov
xor
popf
pusha
adc
cli
mov
in
enter
loop
lods
jne
and
cmp
and
cmpsl
jb
xchg
add
test
testb
out
fisttpll
lret
push
mov
cmpsb
add
push
inc
dec
cwtl
mov
std
jp
fsubrl
dec
ljmp
rol
mov
mov
sub
push
cmpsb
mov
scas
mov
add
cs
pop
mov
dec
filds
dec
sbb
mov
xor
popa
add
pop
mov
jne
xchg
cmpb
dec
daa
add
dec
je
pop
cli
sar
push
pop
add
stos
loopne
push
stos
push
es
ret
mov
xchg
dec
mov
sub
mov
pop
pop
movsb
outsb
iret
mov
cltd
or
std
fcomip
sub
loope
js
jecxz
xor
mov
adc
popf
add
inc
int3
mov
ret
add
rol
cmp
int
nop
jp
pop
mov
test
cmpsb
inc
or
and
ret
fstl
pop
inc
add
stos
mov
fsub
mov
push
inc
aad
call
rcll
lds
push
nop
push
int3
jne
dec
int
popf
adc
xor
pusha
and
add
cmpsb
lahf
mov
dec
stc
rcll
lods
mov
dec
fxch
push
adc
jg
push
add
mov
ret
scas
stos
push
adc
cs
andb
orb
jbe
push
cmpsb
mov
sub
loop
inc
mov
sbb
jl
add
cmp
test
lahf
es
inc
push
add
mov
fdivrl
fisttps
xor
rolb
outsb
popf
inc
lcall
insb
jb
add
stc
mov
repnz
clc
mov
jg
cmp
mov
sub
into
fisttps
xchg
rorl
adcl
loopne
imul
sahf
xchg
icebp
gs
lock
test
push
movsb
jb
add
mov
lret
fmuls
dec
ljmp
addr16
xchg
packsswb
aam
add
es
add
ss
icebp
add
xchg
dec
mov
push
in
mov
cmpsb
out
adc
mov
pushl
pop
jp
cltd
jge
insl
mov
mov
inc
xor
push
aaa
xchg
sahf
dec
mov
insl
push
inc
mov
mov
sub
nop
mov
push
mov
pop
or
mov
scas
pop
jp
add
or
cmpsl
shl
xor
subl
mov
pop
inc
inc
inc
xor
roll
loope
insb
insl
loope
test
mov
jae
nop
mull
in
lods
sub
leave
popa
fnstenv
das
scas
sbb
clc
mov
bound
mov
dec
dec
mov
xor
xchg
mov
pusha
adc
jecxz
test
mov
mov
mov
test
pop
jns
int
cs
add
cmp
sub
push
arpl
stos
out
push
notb
data16
or
popw
clc
andl
inc
add
jmp
pop
mov
mov
insb
cmp
or
jne
imul
sub
mov
cli
ret
push
test
outsb
fistl
mov
inc
sub
sub
in
sbb
pop
pop
dec
inc
ds
in
inc
hlt
mov
lret
bound
ljmp
fldcw
mov
ds
push
add
add
dec
push
jns
mov
mov
fwait
cmp
lods
sbb
add
in
push
mov
rcll
cmp
push
loopne
shlb
test
xchg
and
sub
xor
xor
and
mov
add
out
aad
stos
jb
bnd
cltd
rcr
leave
cmc
mov
push
scas
mov
sbb
xchg
hlt
or
mov
popf
push
inc
loope
loopne
pop
outsb
pop
shll
dec
call
push
push
sub
pop
fwait
mov
mov
jp
lds
mov
push
scas
sub
hlt
mov
push
hlt
or
xchg
das
rcr
mov
add
push
aas
hlt
cmp
lds
or
xchg
rcrl
into
mov
rolb
dec
add
pop
push
mov
adc
or
inc
and
mov
push
pop
pop
aam
sbb
popa
gs
push
inc
jne
movsl
inc
js
fcompl
mov
jge
inc
jp
jle
lea
xor
into
sub
sub
mov
adc
sub
test
cwtl
and
jb
cmpsl
les
add
inc
adc
out
mov
popa
xchg
out
xchg
mov
push
test
cmp
cmc
sbb
insb
fsubrs
into
sub
sub
push
orl
cmpsl
adc
pushf
sub
jle
pop
mov
jne
sbb
xor
sub
push
mov
push
mov
fsubl
dec
cwtl
pop
adc
lahf
es
push
push
push
mov
lret
or
test
or
insl
xchg
lock
lcall
mov
jno
cwtl
and
je
sub
jno
test
cmpsl
pushf
inc
enter
fsubl
iret
insb
sub
add
adc
out
arpl
xor
cs
in
fs
push
fsubrl
and
loop
loopne
lea
fstp
int3
outsl
mov
sub
lock
gs
add
mov
mov
test
jecxz
roll
aam
cmc
mov
test
sbb
jl
xchg
repz
pop
scas
dec
lret
test
xchg
mov
jb
adcb
enter
push
js
sbb
push
jmp
test
pop
xor
movsb
mov
sarl
add
orl
push
pushf
inc
push
adc
sub
in
add
pusha
vmwrite
aam
sub
int3
sahf
shll
jg
das
and
imul
hlt
xor
mov
mov
pushf
fsubs
pusha
push
in
inc
cmp
filds
fadd
mov
add
dec
imul
pop
mov
jg
xchg
loope
leave
jmp
add
jbe
ds
js
push
les
shrl
pusha
loop
leave
loopne
mov
out
adc
jne
movsl
push
mov
out
and
call
xchg
hlt
nop
sbb
shlb
adc
arpl
outsb
andl
mov
lret
div
mov
xchg
sub
decb
add
jp
add
mov
push
pop
mov
or
mov
mov
mov
ss
std
popa
adc
push
pop
lret
xchg
fisubrl
pop
sbbl
loop
lods
inc
lds
jbe
mov
sbb
add
loop
jb
push
sbb
mov
mov
push
push
push
orb
sub
in
out
dec
push
subl
dec
cmc
mov
jp
or
int
xor
sub
mov
repz
pop
icebp
cs
adc
and
in
push
dec
fs
cmp
mov
lcall
bound
mov
add
sub
mov
pop
dec
add
fdivl
mov
xchg
or
push
xor
loopne
pop
fimuls
inc
pushf
sub
lcall
outsb
or
les
push
int
in
loopne
ds
ret
adc
fsub
jae
cltd
rcrl
loopne
js
xor
aam
loope
add
push
dec
testb
ljmp
rorl
adc
push
xchg
imul
mov
gs
movsb
jmp
movsb
shlb
cmc
movsl
mov
ss
pop
pushf
dec
cs
jl
div
ficoms
adcl
imul
jp
shll
sbbb
push
and
popa
lods
sbb
adc
nop
mov
pop
cmc
pop
out
and
dec
stc
mov
out
push
push
xor
hlt
stc
mov
insl
sahf
clc
mov
lahf
pop
sbb
stos
mov
test
xor
aaa
jl
sbb
mov
xor
dec
jecxz
leave
ljmp
pop
mov
pusha
lret
jmp
cld
cmpsl
or
xor
sbb
hlt
and
mov
pop
jne
push
xchg
xor
inc
cwtl
mov
push
pusha
sub
pusha
scas
lods
add
sub
lock
mov
mov
enter
scas
pop
mov
pop
pop
jne
shl
cmp
gs
mov
ljmp
add
mov
scas
popl
mov
cli
push
imul
subl
sbbl
cs
push
test
popf
add
or
cltd
pop
es
mov
sub
xchg
mov
jecxz
jns
lahf
or
sbb
fsubs
scas
jge
jmp
js
pop
lcall
in
xchg
adc
push
pop
insb
sub
mov
push
adc
jmp
loopne
cmp
mov
inc
pop
cli
pop
and
xorb
mov
pop
and
in
sbb
fsubr
pop
mov
pop
xor
lds
in
adc
mov
jae
mov
rcll
add
mov
js
or
aas
js
push
adc
mulb
jne
pop
and
dec
and
enter
adc
mov
jl
jne
adc
and
xor
lcall
cmc
mov
and
adc
xchg
jne
and
sbb
insl
xlat
and
shrl
sahf
das
mov
leave
fadds
pop
push
and
add
and
cltd
sbbl
push
pmuludq
ljmp
cmp
xor
popf
and
or
and
lods
xchg
mov
push
movsl
push
push
xor
or
fsubrs
fwait
add
jnp
aas
test
loope
lret
hlt
xchg
and
cld
sub
ljmp
and
repz
xchg
in
mov
data16
mov
jg,pn
shrl
out
stos
movsb
and
arpl
add
arpl
adc
xchg
test
pop
adc
inc
out
in
ret
lods
andl
repnz
fisubrl
inc
jecxz
xor
notb
ret
add
mov
je
or
jne
pop
jnp
adc
not
rolb
jp
sbb
fistps
cmp
iret
loop
mov
pop
cmp
test
jo
sbb
xchg
jg
lods
push
dec
mov
test
data16
pop
inc
addl
dec
cs
mov
pop
xor
xor
inc
mov
fstps
mov
into
push
add
fimuls
lret
pop
stos
in
add
bound
ss
lret
inc
inc
push
in
scas
shll
arpl
mov
adcl
aam
xchg
sub
mov
pop
sti
add
xor
das
dec
cli
jae
insb
dec
shr
popa
mov
xchg
mov
incb
add
jp
push
xchg
add
mov
mov
xchg
sbb
xchg
xlat
xchg
jecxz
cmpsl
int3
or
pop
xchg
lret
in
nop
cmp
xor
push
dec
cmp
add
ljmp
mov
testb
xchg
int3
dec
ss
into
add
adc
ja
in
adc
aam
mov
aaa
fists
xor
inc
push
push
mov
popf
adc
ret
mov
enter
subl
imul
repnz
mov
andb
or
or
mov
or
mov
cld
test
push
lods
or
cmpsb
ret
enter
mov
xchg
in
add
arpl
add
jo
pushf
daa
lds
fs
mov
mov
test
mov
add
pop
dec
mov
add
scas
mov
nop
jne
movsl
and
sbb
popl
xchg
test
jge
adc
fistps
ret
xor
or
jae
test
mov
test
icebp
xchg
jmp
movsb
adc
pop
xor
fdivrl
decb
incb
lcall
sbbl
pop
adc
mov
rorb
inc
inc
clc
sub
sbb
push
into
xor
cwtl
call
or
mov
lods
add
cld
cwtl
sbbl
push
cld
sub
jmp
jle
rolb
lea
inc
pusha
loope
test
roll
das
mov
loopne
rclb
fld
mov
or
adcb
cmp
popa
sbb
movsb
sub
cwtl
test
jno
jg
shlb
add
push
outsb
add
mov
in
push
pop
or
add
jecxz
cmpsl
ficomps
xchg
add
mov
xchg
jno
cs
jl
stc
cltd
sbb
xchg
sub
ss
sub
inc
cmpb
mov
shrb
stos
cs
std
bound
mov
clc
adc
mov
xor
aas
cmpsb
scas
rsqrtps
sub
ljmp
jl
fstl
pop
cmp
popa
mov
inc
mov
fstl
lds
cmpsl
scas
push
repnz
inc
add
je
clc
add
test
mov
das
xchg
imul
leave
or
hlt
xchg
call
xchg
or
nop
dec
mov
enter
xor
mov
pop
lds
jmp
xor
and
mov
into
fldl
xor
push
adc
inc
adc
hlt
subl
or
jg
cmp
mov
mov
adc
pop
and
mov
shlb
outsb
xchg
adc
dec
pushl
loopne
mov
sbb
shlb
cmpb
fsubl
sub
popf
jmp
lock
jno
rcrl
mov
mov
add
inc
in
add
shll
push
inc
pop
scas
mov
pop
scas
xorl
dec
pop
imul
loop
ja
cmpsl
test
sub
nop
xchg
dec
or
aam
gs
addr16
iret
mov
fstp
rorb
xchg
rcll
mov
adc
outsl
mov
lds
dec
sbbl
sbb
push
lret
sub
xor
scas
mov
push
loopne
cwtl
and
xor
jnp
cld
cmp
jo
lret
shrb
jb
lods
lea
mov
sarb
jb
mov
jo
or
dec
xchg
xchg
jl
cmp
mov
pop
test
dec
enter
mov
ja
cmpsl
add
ds
movl
jle
push
testl
scas
mov
pop
cmpsl
mov
inc
cltd
mov
sbb
mov
out
xor
gs
pop
movsl
mov
push
adcl
popf
sub
negl
scas
pop
jne
cs
js
jl
or
sbb
out
orb
test
das
add
push
ja
fistpl
rcl
push
cli
leave
mov
repz
notl
mov
pop
xor
ljmp
clc
fs
or
cmp
idivb
inc
mov
and
fstp
push
and
sub
jb
push
test
cs
or
or
jo
cld
jmp
dec
decl
pop
cmp
cmpsb
push
call
dec
xchg
and
leave
and
pusha
mov
and
out
nop
adc
xor
cltd
idiv
rcr
dec
sub
insl
in
addb
lret
fildll
jge
pusha
lods
xchg
and
mov
add
pop
outsl
jp
or
pop
cmp
xchg
or
shll
push
nop
xlat
testb
nop
sahf
sar
mov
xlat
mov
jp
or
jp
mov
jmp
jne
repnz
cli
bound
orl
mul
or
or
das
pop
mov
and
sahf
add
xor
and
lret
leave
and
pop
into
cmpsl
mov
mov
in
xchg
stos
dec
outsl
sbb
mov
ds
xor
das
add
sbb
jecxz
out
lea
jecxz
or
xor
jle
cwtl
cld
mov
adc
inc
mov
or
mov
dec
cmpsl
jne
mov
lret
sub
stc
xorb
inc
push
inc
sbb
fstp
divb
lret
xchg
dec
std
or
mov
mov
mov
movsl
test
icebp
mov
ret
rorl
fs
jmp
and
mov
dec
sub
test
fnop
call
rep
clc
pop
popf
in
adc
mov
call
sub
sub
sub
out
in
mov
mov
test
movsb
fadds
sub
cmpsb
xor
aaa
fidivs
lock
les
push
mov
out
cmp
outsb
mov
pop
test
pop
int3
gs
sbbl
sub
icebp
sub
adc
arpl
cmpsl
mov
mov
dec
push
pop
out
jg
xchg
inc
jne
pop
sub
inc
ficomps
jae
cmp
rcll
inc
cmp
lcall
ss
nop
nop
or
jmp
loopne
cmpl
fnstcw
add
sub
pop
cmp
flds
pop
jmp
add
das
lock
and
adc
hlt
aam
add
xchg
add
fwait
hlt
fdivs
adc
adc
mov
stc
mov
scas
or
cwtl
lds
sbbb
out
push
cmpsb
push
dec
or
or
js
fidivl
xchg
xchg
shll
repz
inc
dec
push
adc
lea
das
cmp
out
lds
fidivrs
xor
test
xlat
popa
fdivrl
mov
push
std
xor
adc
inc
outsb
addl
push
clc
mov
cmp
pop
iret
pushf
in
mov
cmc
pop
das
dec
out
call
aam
sbb
pop
inc
push
mov
sbb
inc
cwtl
xorb
xchg
in
mov
mov
sbb
dec
out
jbe
and
out
adc
cmpl
outsl
mov
add
nop
mov
dec
rorl
stos
repz
jmp
lret
lods
insl
add
xchg
sbb
dec
loope
icebp
sub
lock
sbb
test
jecxz
add
scas
xorb
dec
mov
mov
ret
jp
test
jecxz
into
xchg
hlt
insl
scas
inc
push
push
or
mov
cmp
ljmp
dec
imul
xchg
jne
mov
filds
and
cld
add
mov
in
adc
pusha
inc
cld
lret
movsl
pop
xor
and
dec
mov
inc
and
xor
sbb
rolb
cltd
ret
fucom
or
bound
mov
pop
cld
icebp
and
mov
rclb
orl
dec
ljmp
out
jne
jnp
arpl
push
test
sub
sbb
das
arpl
push
adc
inc
test
gs
imull
pop
in
call
out
mov
mov
inc
outsl
lret
ret
mov
dec
and
jb
cmpsb
shlb
nop
imul
iret
adc
in
addr16
addb
jbe
movsl
ret
fidivs
push
jg
mov
mov
mov
sbb
pop
in
jbe
cld
push
push
dec
jae
cmpsl
mov
mov
aad
negb
xor
jecxz
jbe
test
jge
adc
sub
add
dec
jmp
repnz
fnsave
inc
mov
es
ret
insb
inc
jge
inc
and
out
stc
add
mov
mov
jmp
fstl
jecxz
lods
nop
shlb
sti
sub
fisttps
inc
pop
cmp
dec
push
push
pop
inc
or
adc
popa
ficompl
std
add
mov
loope
inc
adc
nop
mov
aas
push
fstpt
cmc
repz
mov
outsb
push
jae
xchg
and
sti
push
popf
insl
aad
and
or
ret
mov
xchg
call
mov
push
push
in
into
xchg
mov
adc
xchg
enter
push
outsb
mov
adc
fs
or
es
popf
cmpsb
cmp
mov
xchg
xchg
jmp
out
cmp
xchg
sub
std
cwtl
ds
jo
pop
enter
cmp
rorb
add
mov
add
jle
scas
insl
loopne
ret
pop
es
push
stos
scas
sub
inc
push
ret
pop
in
mov
push
cmc
int3
xchg
push
lods
and
adc
pop
and
es
jno
inc
xorl
loopne
test
or
add
mov
ret
fists
sti
ljmp
dec
mov
cmc
jecxz
in
in
pushf
lods
add
sub
fnstsw
xor
dec
xor
fmull
cs
cmp
int
xchg
int3
test
dec
sbbb
mov
or
xchg
jb
rorl
cwtl
aaa
movsl
imul
mov
lcall
jle
in
mov
loop
inc
hlt
mov
loop
insl
repnz
pop
cmp
pop
scas
aam
movsl
mov
sub
mov
xchg
addb
movsb
lret
inc
bound
pop
add
jmp
subl
movsb
xchg
es
hlt
mov
fimull
pop
lcall
lods
inc
xor
xchg
add
ret
add
incb
jecxz
inc
test
xchg
fwait
js
mov
test
mov
lods
fld
mov
lods
repnz
dec
xchg
push
mov
xchg
push
movsb
xchg
leave
xchg
pop
adc
cmp
sbb
mov
cwtl
stc
xorb
inc
jp
hlt
dec
inc
pushf
sub
test
jmp
hlt
das
ds
or
inc
dec
shr
jge
test
add
sub
xchg
stos
movsl
and
and
fstl
rolb
andl
push
fbld
pushf
das
test
sub
daa
orb
rcr
sub
sbb
pop
pop
adc
inc
test
hlt
dec
mov
mov
xchg
push
or
xor
lret
loop
xor
aam
adc
mov
adc
aam
mov
dec
sub
mov
fdiv
jns
movsl
cmp
icebp
pushf
jns
mov
sub
add
loop
lock
jne
pop
mov
test
or
inc
pusha
test
loopne
xchg
ljmp
jecxz
cltd
xchg
xchg
cmpsl
xor
adc
inc
xchg
cli
jo
enter
adc
dec
pop
mov
cs
leave
outsb
mov
lcall
gs
and
pop
andb
jno
sub
lcall
pop
dec
xchg
mov
das
mov
xchg
cwtl
pop
mov
xorl
aas
dec
cmp
jne
sub
mov
js
dec
mov
or
push
lods
xor
xchg
cmpsb
push
pushf
int3
pop
rorl
or
push
ja
xchg
cmpsb
dec
add
adc
jbe
stos
add
mov
push
jp
add
in
or
xorb
ret
out
mov
in
dec
add
jo
adc
mov
mov
inc
dec
out
cld
adc
xor
inc
dec
inc
push
add
out
xor
mov
push
sub
jmp
aas
add
push
mov
pusha
cwtl
or
or
outsb
mulb
rolb
xor
pop
aas
movsl
add
scas
inc
shrl
inc
xchg
mov
or
int
mov
add
adc
test
pop
add
jle
mov
add
xor
xchg
pop
cmc
sarb
daa
pop
sti
pop
or
notb
push
ret
js
clts
and
roll
cmp
enter
jo
dec
jp
int3
scas
push
mov
push
cmp
call
jo
pop
or
mov
xor
mov
iret
loopne
enter
das
lds
test
or
and
lcall
je
loop
and
pop
xchg
cmp
push
jp
insb
adc
mull
hlt
inc
dec
lods
rclb
sub
rclb
jno
dec
fists
mov
movsb
cli
scas
dec
jae
lods
leave
xchg
fsts
jno
push
and
push
popf
lea
mov
fs
adc
jecxz
scas
ret
pusha
sbb
xor
popa
mov
fmuls
movsb
sbb
subl
gs
pop
xchg
jb
jne
ljmp
mov
imull
sti
in
leave
gs
sub
mov
std
xchg
rcll
sub
aas
or
xchg
jp
mov
popa
popa
xchg
and
mov
mov
mov
push
mov
xchg
andl
and
imul
jge
repz
jno
pop
lcall
push
push
jne
jmp
mov
scas
in
aam
xorl
lcall
push
ficomps
inc
or
loopne
shlb
fimull
xor
sub
movsl
xchg
and
fnstenv
les
add
adc
xchg
sbb
movsb
adc
xchg
test
out
push
or
shl
jno
push
push
negb
xchg
mov
ret
add
stos
cmpsb
stc
mov
std
add
pusha
dec
jo
insb
in
lds
loope
nop
dec
mov
popl
adc
nop
hlt
ds
mov
push
out
mov
dec
mov
sti
loop
jne
dec
popa
mov
cmp
sub
xor
addl
jl
inc
loopne
xlat
adc
jle
lahf
stc
or
mov
pusha
adc
sbb
adc
sti
pusha
jb
cmp
fwait
ja
cmp
pop
sub
push
push
sbb
ljmp
je
hlt
sub
scas
sahf
cmpsb
jg
push
sub
mov
inc
or
and
adc
lock
std
and
test
or
xlat
test
add
inc
fstpt
mov
sub
cs
xorb
ror
ja
vpmadcswd
sbb
and
cs
xchg
push
xor
dec
mov
dec
push
mov
inc
push
jbe
enter
inc
adc
cld
ret
ljmp
or
jne
mov
leave
dec
inc
es
loop
std
mov
sub
mov
ficoms
in
rcll
mov
pop
mov
and
or
cmp
xchg
loope
testb
lods
pop
pop
imul
loopne
xchg
sahf
and
inc
inc
pop
mov
push
inc
or
fs
daa
test
fwait
loopne
jmp
shll
test
mov
dec
jbe
cmpsl
push
mov
fsubrl
xor
add
jne
mov
enter
add
fidivs
cmpsl
in
sbb
xchg
push
add
or
das
jae
andb
int3
adc
rcll
push
fbld
cwtl
push
mov
inc
testb
ja
xor
repnz
push
mov
cmpsl
fnstcw
js
mov
test
adc
rolb
mov
jne
adc
push
adc
loope
scas
popf
loop
pop
jge
pushf
sub
xchg
adcb
lret
inc
jl
and
cli
test
mov
mov
imul
jg
pusha
loope
int
mov
xchg
shl
pop
addb
sbb
add
imul
mov
sbb
add
xorl
mov
lcall
inc
stc
add
fwait
das
mov
loopne
mov
imul
cmpb
sub
pop
push
xchg
negb
sbb
and
sbbb
mov
xchg
jecxz
inc
push
test
jae
imul
minps
sub
fcomps
mov
cmp
mov
aam
dec
and
js
add
adc
popa
inc
or
mov
mov
inc
and
inc
imul
mov
stos
xchg
sbb
loope
add
mov
jecxz
pop
add
stos
mov
dec
xchg
lock
xchg
mov
cmp
xlat
sbb
add
xchg
pop
hlt
call
lret
sbb
cmp
cli
mov
cmp
inc
mov
mov
mov
imul
test
jne
mov
mov
and
sub
mov
lahf
mov
jb
mov
cmp
push
xlat
xchg
ror
in
imul
xor
addr16
mov
testl
test
xchg
aam
mov
jg
add
aad
enter
and
adc
in
jmp
in
inc
rcrb
pushf
add
mov
dec
dec
add
sbb
xchg
sbb
jmp
push
sbb
repz
movsb
ret
xchg
test
push
mov
add
leave
and
sbb
jns
xor
stc
add
jp
and
cli
pusha
push
leave
popa
pop
mov
cmpsl
clc
test
popf
lds
les
roll
adc
movsl
add
sbb
lcall
rcrl
aad
cmp
in
lahf
pop
mov
lods
jo
xchg
out
and
out
lock
test
sbb
mov
xlat
push
mov
sbb
xchg
dec
es
insl
xchg
test
sbb
loopne
das
hlt
xchg
bound
mov
jbe
aam
clc
andl
push
cmp
sub
ret
sbbb
sub
xor
push
add
inc
push
aas
stc
jl
pop
aam
mov
jmp
inc
mov
shll
stos
test
pop
rorb
fcoml
sub
jecxz
cmp
pop
ja
mov
lods
les
ljmp
cwtl
jne
das
push
cmp
jg
xchg
dec
lret
aam
cmp
sbb
and
cmpsl
iret
cmc
add
fiadds
push
aam
fldt
mov
jne
xor
push
das
aam
lret
and
in
cli
loop
cmp
sbb
adc
aam
lret
jb
movsl
cmpsb
mov
pop
mov
sub
mov
ret
int3
adc
dec
sbbl
fsubl
xchg
jle
fidivrs
dec
mov
dec
das
cmp
adc
mov
mov
out
stc
fldl
push
les
cli
in
ret
lea
arpl
adc
addr16
lock
jne
out
popf
in
xchg
leave
sub
sahf
mov
push
push
add
jne
push
bound
adcl
mov
mov
mov
mov
add
movsl
pop
mulb
adc
repz
sbb
cmp
ret
leave
pop
enter
add
cmpl
cmpb
enter
adc
adc
shlb
lock
mov
and
dec
or
call
bound
xchg
mov
mov
lods
rcrl
mov
sbb
xchg
and
repz
loop
push
adc
mov
imul
xchg
cli
insb
add
and
test
out
dec
test
pop
mov
pop
and
add
cltd
stc
pop
jp
mov
mov
shlb
xchg
andl
sti
popa
jns
mov
jb
ret
aad
xchg
sub
int
xchg
add
je
cld
pusha
ss
movsb
lock
pop
mov
mov
stc
push
jg
adc
bound
shrl
ret
inc
data16
inc
jge
push
in
test
stc
lods
les
bound
mov
mov
cmp
ds
cli
outsl
arpl
stc
adc
pop
add
jne
xlat
shl
xchg
lods
aam
jno
xchg
inc
ret
movsl
mov
and
arpl
ja
lds
adc
xchg
imul
das
xchg
aaa
sub
fbstp
scas
jne
out
gs
inc
fistps
stos
sbbb
imul
movsl
lcall
scas
adc
and
outsl
lret
int3
loopne
inc
xchg
dec
add
xorl
xchg
dec
xor
or
hlt
push
jecxz
mov
cmpsb
push
enter
xchg
cmp
int3
fisttpl
sub
mov
xchg
add
loopne
xchg
push
mov
ds
adc
mov
sub
cmpsl
sbb
rcrb
mov
hlt
sub
push
test
loop
and
push
adc
out
rcrb
pushl
notb
test
lea
int
xchg
sahf
add
fsubl
push
cmp
and
hlt
push
and
data16
push
jne
adc
xor
repnz
xchg
sbb
addr16
push
inc
mov
xchg
xchg
adc
xorl
leave
xchg
add
mov
adc
dec
jmp
adc
cmpsl
adc
mov
adc
fbld
les
and
or
push
lods
stc
jns
les
jns
sbb
mov
call
cmp
inc
inc
sarl
inc
jne
fsubl
loop
or
jp
loope
cmp
mov
cwtl
das
cmp
aad
rcll
insb
mov
mov
jmp
sub
mov
int
jl
sub
jbe
fists
aam
mov
pop
iret
mov
dec
gs
inc
or
imul
pusha
cmp
push
mov
or
incb
pop
dec
ret
push
dec
push
rcrl
push
in
cmp
push
mov
mov
and
push
add
fiaddl
cmp
jle
pop
cwtl
mov
rolb
jnp
dec
jle
add
mov
and
pop
inc
pusha
pop
jne
test
inc
mov
in
lods
dec
imul
out
enter
mov
xchg
mov
xchg
mov
pusha
push
pop
test
flds
repnz
pop
pusha
or
mov
movsl
dec
aaa
lds
popf
pop
add
mov
sbb
xor
les
cmp
jnp
outsl
xor
lret
xorl
xchg
cwtl
xor
hlt
hlt
lds
mov
push
xchg
or
fisttpll
mov
fs
loop
in
mov
add
and
subl
mov
popa
cmp
daa
fists
enter
fmuls
mov
es
cmpsb
lahf
add
sbb
or
adc
mov
sub
sbb
inc
xlat
inc
mov
iret
out
hlt
sub
add
mov
cs
push
nop
push
jne
cmp
bound
fwait
pop
and
pop
cmp
scas
std
pop
scas
fs
test
inc
leave
pop
or
call
pop
adc
mov
sub
aas
inc
out
insl
xchg
push
call
fsubs
add
orl
stos
mov
mov
enter
stc
jmp
hlt
lcall
sbb
mov
in
gs
ja
xchg
clc
enter
loop
push
sbb
testb
cmp
mov
out
mov
int3
xchg
mov
push
out
js
cmc
dec
call
adc
fidivrl
loop
cs
gs
dec
ja
push
shll
jnp
ja
push
mov
lea
dec
subl
fnsave
xchg
pop
mov
mov
mov
inc
inc
and
stos
mov
mov
pop
dec
add
cmpl
push
dec
stc
and
pop
adc
test
mov
push
mov
add
sub
xchg
outsl
stc
loop
movsl
cltd
or
jge
add
dec
mov
push
mov
add
stc
or
aad
jmp
repnz
push
and
xchg
ret
fld
call
leave
scas
add
sub
mov
inc
shll
or
sub
mov
or
mov
enter
xchg
xchg
adc
div
xor
sub
imul
cwtl
adcl
pop
shl
les
addl
pop
xchg
out
movsl
pop
dec
mov
mov
vmovlps
and
loop
pop
mov
and
popa
lods
fsubl
pop
jbe
mov
arpl
jmp
mov
xchg
mov
mov
push
out
ret
jge
jbe
int
test
cs
cltd
add
imul
cmp
inc
push
insb
mov
lret
sbb
inc
mov
xchg
xchg
pop
and
movsb
mov
andb
add
fcmovnu
lods
xchg
lods
pusha
pop
inc
js
mov
fsubp
mov
ficoml
mov
xchg
rolb
mov
xchg
cmp
pop
repnz
rclb
jne
mov
stos
hlt
jmp
out
inc
add
sahf
mov
insl
shl
sbb
aad
lret
dec
pusha
pusha
loope
sub
inc
sahf
sti
pop
test
adc
mov
scas
jnp
lock
cli
add
pop
adc
mov
cmc
jle
pop
inc
dec
xchg
nop
mov
int3
pop
and
arpl
loopne
loop
lods
andl
popa
and
dec
mov
lock
in
std
call
out
test
rorl
pusha
loope
sbb
pop
cmpsb
xchg
sbb
insb
adcw
push
outsl
popf
xor
inc
ret
mov
mov
or
fucomip
xorl
add
int
call
inc
mov
aad
and
bound
jne
hlt
and
cltd
cmpsb
jp
call
fists
repnz
sti
les
pop
add
mov
aam
cmp
mov
adc
mov
xor
cmp
insb
mov
mov
cld
notl
popa
hlt
cmp
xchg
in
repz
dec
in
inc
cmpsb
cs
idivb
mov
inc
sahf
push
cmp
movsl
mov
test
inc
and
pop
mov
subl
outsl
cmpsl
int3
jno
in
ret
mov
inc
enter
cwtl
add
loop
jnp,pn
in
mov
mov
outsb
mov
sahf
test
sbb
pushf
outsb
cmpsl
scas
sbb
out
enter
xor
jae
cltd
push
jecxz
cli
fistl
push
out
xor
stos
adcb
cmp
in
jmp
push
xchg
test
jns
test
outsl
arpl
inc
xlat
call
mov
insl
dec
pusha
mov
pop
jmp
inc
jne
nop
testl
xchg
dec
std
je
popl
mov
dec
mov
pop
hlt
rcll
sub
outsl
movsl
cmp
add
lcall
mov
sub
or
fsts
pop
mov
shlb
cs
lcall
xchg
call
es
mov
idivb
inc
leave
mov
push
lods
lcall
lcall
cmpsl
mov
movsb
lcall
and
cmp
mov
pop
fidivs
es
aas
inc
leave
push
in
xor
xorl
inc
imul
jo
sub
inc
int3
loopne
sarl
sti
xchg
ret
test
mov
cmp
call
pop
out
loopne
mov
repz
inc
mov
sub
xlat
mov
xor
mov
fisttpll
push
push
ret
pop
adc
sti
lret
roll
mov
aas
mov
mov
pop
cld
sub
jg
enter
mov
orb
out
lret
lods
test
jle
inc
adc
push
sub
mov
sbb
mov
jl
mov
xchg
cmp
or
mov
mov
add
test
shlb
fldl
pop
add
sti
push
jl
xlat
gs
sub
and
xacquire
jl
cmp
mov
cmc
lds
or
lret
lea
mov
aad
jle
movsb
repnz
lret
fnstenv
mov
push
inc
fmul
scas
negl
sbb
frstor
hlt
movsl
lods
sbb
mov
mulb
inc
popa
popf
int3
cmpsl
addr16
xchg
pop
xchg
nopl
pop
inc
mov
movsb
es
dec
inc
rorl
popa
out
push
stos
push
aad
movsl
push
arpl
and
cwtl
cld
or
inc
inc
sbb
mov
xor
loopne
add
testb
inc
xchg
into
inc
cmpsl
jns
and
in
xchg
inc
js
mov
or
and
aas
out
cmc
lods
je
mov
test
pop
add
adc
cmp
adc
adc
mov
cltd
testl
test
hlt
mov
adc
mov
subl
dec
xorl
test
fwait
call
dec
add
ljmp
jmp
leave
push
dec
or
in
pushf
movsb
movsl
xchg
scas
sbb
adc
jnp
les
loopne
ljmp
movsl
ja
push
xchg
lods
push
shl
test
int3
out
sahf
outsl
mov
loopne
movsb
testb
inc
mov
mov
mov
leave
push
loopne
daa
adc
loop
sbb
and
adc
sub
push
jae
dec
and
fisttpl
lret
icebp
insb
and
mov
cmp
mov
pop
jge
push
mov
mov
or
add
mulb
cltd
mov
xorl
les
jbe
and
popa
addr16
xor
pop
in
insl
and
adcl
sbb
xchg
ljmp
lgs
and
sbb
sti
imul
xchg
cmpsb
jmp
mov
sub
ljmp
int3
addr16
nop
cs
sub
jb
add
sti
insb
add
mov
xor
daa
jl
pusha
sub
sub
xchg
xchg
xlat
pop
mov
mov
lea
fstl
lock
mov
and
mov
test
jmp
add
pop
je
into
sub
sub
jo
jmp
icebp
test
ja
sbb
adc
insb
lcall
sub
jl
stc
push
addr16
push
sub
out
xchg
mov
and
sarl
mov
push
mov
pop
dec
sub
push
nop
sub
hlt
add
cwtl
cltd
popf
les
jmp
dec
movsl
les
xor
add
jle
lods
pop
sub
mov
sahf
cmpsb
push
stos
arpl
inc
xchg
repz
inc
cwtl
push
mov
jae
jb
nop
jbe
lds
outsl
mov
jns
mov
nop
xor
lea
scas
sbb
jno
sbb
leave
or
test
out
xchg
add
insb
leave
in
popa
cmpsl
insb
aas
sub
popa
add
nop
lahf
imul
adc
subl
push
jl
dec
out
ljmp
jne
lret
rcrl
jne
loop,pn
mov
repz
adc
sarb
hlt
xchg
cmpsl
add
xor
andl
xchg
loopne
pop
dec
add
sbb
les
inc
sbb
in
aad
dec
inc
mov
fdivrl
dec
xor
ret
mov
insb
and
mov
cmp
add
stc
imul
nop
mov
xor
sahf
mov
inc
fldcw
mov
mov
arpl
xor
stos
cvtps2pd
sbb
flds
sti
mov
pop
xchg
js
lds
push
aas
arpl
xor
add
dec
add
ja
clc
cs
jae
mov
lods
pop
mov
sub
cmp
and
int3
lcall
jmp
mov
pop
jbe
inc
movsl
les
cmpsb
cmp
and
shll
lret
jecxz
fwait
mov
xchg
paddusw
sbb
and
dec
daa
inc
movsl
hlt
insl
filds
enter
fwait
mov
dec
notl
jno
ficomps
bound
jecxz
insl
add
lods
xchg
cli
stc
jl
cmp
nop
adc
icebp
sti
test
les
jnp
pop
or
scas
xor
fstpl
test
lret
pop
cmp
mov
mov
jno,pt
les
test
push
cli
jne
pop
insl
jle
sub
fwait
push
xchg
xchg
nop
add
or
in
adc
xchg
sbbb
push
sub
stc
mov
xchg
adc
xchg
add
stos
add
aad
and
pushf
mov
sbb
cs
jb
into
inc
movsl
and
mov
xchg
in
adc
mov
xor
mov
or
rolb
aas
mov
inc
fmull
xor
out
add
xchg
nop
jle
push
mov
inc
fsubrs
clc
jne
jnp
dec
sti
int
mov
sub
cltd
and
sbb
mov
scas
out
lret
mov
pop
and
mov
add
jge
dec
xchg
icebp
adc
sti
push
lock
jne
mov
add
sub
dec
and
push
scas
popa
ds
fists
mov
add
and
cmp
mov
mov
pusha
testb
cmpsb
jns
and
push
push
jle
adc
xchg
pushf
add
xor
popa
push
push
or
xlat
ljmp
cmpsl
lods
rclb
jb
dec
dec
mov
push
ss
mov
cmpsb
or
xchg
and
mov
jb
ret
ljmp
out
sub
sbb
jecxz
mov
xor
pushf
sub
jp
adc
dec
cmp
ret
rcr
dec
out
ret
mov
jecxz
add
popa
add
inc
clc
test
add
lea
subl
push
add
pop
iret
jmp
cwtl
sahf
inc
mov
lods
mov
inc
mov
cmovb
jnp
jg
dec
jmp
cmp
hlt
pop
sbb
arpl
enter
mov
dec
xor
in
jne
ss
xor
stos
and
jl
pop
jne
ja
mov
sub
lods
add
dec
sbb
mov
enter
pop
test
icebp
dec
pop
les
and
rorl
cmp
xchg
leave
js
mov
aad
nop
stos
aam
inc
cmpsl
push
jbe
outsb
adc
add
pop
subb
jmp
arpl
and
adc
outsl
mov
js
pusha
insl
pop
dec
test
dec
mov
jle
daa
sbb
fidivl
in
cs
mov
inc
jle
cli
fiaddl
xchg
add
inc
add
popf
push
mov
jecxz
addb
jne
jnp
sbb
in
ret
cli
xor
push
xchg
stos
sbb
imul
add
icebp
insb
ja,pn
lret
hlt
or
adc
mov
loope
jg
movsl
test
enter
inc
pusha
fimull
cmp
jg
xor
adc
mov
or
shll
das
aad
inc
lret
loop
dec
adc
imul
hlt
pop
aad
cmc
pop
das
imul
loope
shrb
jnp
push
inc
sahf
enter
std
inc
pop
mov
add
and
jmp
mov
jno
call
sub
in
mov
or
cmp
mov
cld
shl
mov
into
addr16
jg
xor
xor
dec
xlat
inc
cmp
inc
rcr
inc
fucomip
shlb
pop
jnp
nop
adc
icebp
movb
add
xor
xor
into
dec
sub
filds
lock
push
cmpsl
xor
xorb
imul
inc
jbe
insl
pop
xor
sahf
push
jmp
mov
pop
out
sub
stos
inc
cmp
scas
cmp
clc
in
mov
jno
or
jne
jle
out
dec
pop
and
dec
xorb
ss
daa
cmp
adc
pushl
sub
loop
enter
xchg
push
and
jg
nop
dec
sub
xchg
ret
pop
push
jmp
inc
testl
sbb
cwtl
cmp
stos
pop
push
xchg
ds
out
into
in
or
ljmp
rcrl
xchg
popf
les
mov
jae
or
lods
testl
lea
cmp
jns
mov
mov
cmp
lcall
xlat
jne
in
jns
aaa
sub
je
movsb
rorb
out
adc
out
test
ljmp
addl
add
jne
imul
daa
pop
out
hlt
arpl
cmpsb
jbe
inc
test
rclb
pop
push
inc
in
jne
imul
inc
insl
cwtl
int3
or
add
xchg
push
rolb
gs
xchg
mov
test
aad
out
inc
fld
or
fisubs
movsb
sbb
push
nop
test
xor
pop
mov
loopne
fwait
inc
movsl
add
icebp
test
fisubl
add
imul
mov
in
aad
inc
ret
rcrl
arpl
mov
mov
pop
jmp
sbb
leave
or
pusha
fistpll
bound
add
or
pop
fstpt
scas
mov
test
mov
popa
fnstsw
lahf
stc
sub
add
push
mov
push
leave
cltd
ret
xor
sbb
cld
inc
fistpll
into
shlb
xchg
lock
loop
outsb
jge
pop
ret
mov
xchg
add
loope
adc
insb
dec
pusha
pushf
movsb
hlt
sub
daa
addr16
pop
adc
mov
lods
jmp
out
std
test
test
outsb
in
hlt
js
jbe
add
fdivl
xchg
scas
push
xchg
jb
test
jmp
dec
add
repnz
cld
sub
and
mov
cmp
inc
in
and
mov
mov
fidivrl
push
xchg
ror
aas
inc
dec
add
jb
xchg
mov
jnp
movsb
sub
mov
call
sub
mov
insl
enter
idiv
mov
inc
mov
adc
hlt
adc
push
test
mov
imull
mov
sbb
pop
xor
or
jnp
add
enter
cmpsb
lahf
scas
add
mov
jg
fs
mov
call
leave
loope
fwait
aaa
add
cmp
mov
in
xchg
jmp
popf
enter
mov
rolb
push
inc
jp
xchg
movsb
fcomps
outsl
rcl
push
mov
sti
int3
movsl
bound
mov
in
test
cmp
gs
mov
mov
add
xor
pop
movsl
mov
out
les
lods
mov
pop
pop
arpl
xorb
dec
incb
jo
sub
xchg
nop
add
lods
lret
inc
test
test
adc
or
rclb
sbb
and
pushl
mov
and
and
jbe
test
je
xorb
add
stc
add
pop
dec
dec
pop
sti
loope
imul
jno
out
sbb
jmp
xchg
mov
or
add
loop
cmc
push
mov
test
cwtl
jp
add
push
shlb
mov
fadd
adc
das
dec
in
test
xchg
ss
jno
fstpt
add
lods
cmp
outsb
stc
adc
jne
cmp
jge
and
adc
add
mov
fs
test
add
cs
nop
shll
shr
sbb
sahf
pop
in
sub
cmp
mov
add
test
hlt
sbb
dec
xchg
stos
inc
jge
cmp
in
cmpsb
sub
inc
add
lahf
mov
out
hlt
push
xchg
sub
mov
shrb
stos
loopne
adcb
jl
pusha
adc
stc
and
in
inc
ret
mov
jns
sbb
movsl
push
mov
aad
jge
xchg
adc
out
mov
cmp
lcall
fisttpl
cmp
mov
enter
add
dec
shlb
lahf
sub
xchg
orb
or
xchg
xchg
jp
mov
popl
inc
push
aaa
jnp
ret
pop
lcall
sub
jns
test
mov
xchg
inc
les
int
mov
enter
fbld
imul
xor
pop
mov
in
outsl
shll
scas
imul
dec
cmp
enter
pop
inc
push
add
mov
dec
pop
sbb
cld
mov
std
mov
pop
xchg
jne
loopne
mov
lods
aam
jecxz
les
sarl
mov
inc
ret
mov
inc
inc
and
hlt
mov
adc
push
in
mov
add
add
aas
and
lret
pop
xchg
cmp
jbe
and
pop
pop
mov
xchg
fcoms
lods
xor
test
mov
enter
jne
push
shll
or
cmc
xchg
in
mov
fildll
rcrl
cli
add
xor
arpl
xor
or
daa
cmpsl
pushf
mov
add
adc
xchg
js
out
push
lock
icebp
xor
leave
in
in
nop
pusha
jl
sahf
dec
push
enter
pop
sub
std
cmp
add
cmp
les
rorb
adc
daa
ds
or
nop
add
cmp
sub
xchg
stos
insl
inc
pusha
out
or
nop
lods
sub
inc
mov
or
push
hlt
data16
mov
mov
pop
jg
inc
pusha
lods
push
sub
inc
cmp
pushf
int
adc
jg
xor
lcall
fildll
in
add
rol
test
mov
icebp
sbb
leave
movsl
movsl
es
aam
mov
test
and
lahf
loop
jbe
inc
rol
repz
scas
and
lock
dec
loop
shrb
test
mov
xor
sub
add
fsubrl
dec
jo
ret
cwtl
les
mov
mov
jns
ja
js
clc
aam
fs
inc
addb
sti
adc
mov
or
cmp
add
jle
lret
inc
mov
test
scas
adc
pop
jnp
adc
loopne
mov
out
xchg
mov
add
dec
mov
nop
sbb
jne
cwtl
push
mov
hlt
fimuls
addr16
lahf
push
jecxz
idivl
add
movsl
inc
repnz
aam
mov
gs
xor
scas
sbb
repnz
in
pop
divb
mov
or
leave
in
cmp
xchg
adc
sbb
enter
inc
out
rcrl
cli
pop
addr16
pop
shlb
mov
xchg
add
xor
xor
sbb
bound
cwtd
pop
jl
sbbb
adc
lods
push
aas
sub
imul
push
fdivrl
fsubrs
sub
mov
fcom
lods
fs
or
add
out
or
test
xchg
push
dec
imul
adc
mov
fisttps
lret
enter
mov
cmpsl
push
inc
movsb
clc
loope
mov
stos
jne
add
mov
push
add
add
and
fnstenv
mov
arpl
nop
adc
sti
mov
mov
ffreep
mov
mov
sahf
out
push
push
scas
scas
loopne
hlt
int3
orl
test
sbb
lea
mov
jge
mov
out
outsl
scas
mov
inc
sti
pop
addb
inc
dec
cmp
mov
xchg
inc
addr16
ds
mov
or
shl
aas
xchg
adc
dec
je
push
pop
lcall
or
test
dec
fsubrp
mov
pusha
aad
and
lea
mov
push
push
jb
movsl
jbe
call
dec
jnp
xchg
roll
or
xor
cmpsb
pop
clc
out
movl
fbld
mov
nop
fmul
loopne
loopne
lods
fcompl
adc
mov
mov
jl
sbb
push
xchg
test
orl
cltd
sti
insl
test
sub
mov
push
out
es
cs
add
push
lods
shrl
cmp
iret
es
fxch
mov
mov
lods
inc
pop
cwtl
hlt
jg
mov
inc
add
add
and
xchg
jbe
add
fdivrp
add
rep
lods
pop
arpl
pop
xchg
pop
sub
jmp
inc
xchg
xchg
outsb
sbb
shl
lcall
test
js
mov
or
mov
rcl
hlt
adc
mov
test
fstl
adc
mov
lcall
mov
les
sbb
jne
lret
add
xchg
adc
cwtl
call
insb
xchg
adc
imul
hlt
or
mov
icebp
cmp
out
mov
adc
inc
pmaxsw
rcr
and
lods
daa
mov
jge
xchg
hlt
or
push
jmp
inc
pop
sub
push
push
sbb
and
adc
cmc
pop
mov
mov
dec
lcall
adcb
jl
jg
adc
insb
repnz
add
dec
xchg
lcall
or
icebp
leave
scas
mov
dec
popf
sub
fucomip
push
mov
into
sub
fldl
sbb
lret
popf
out
test
push
adc
mov
xor
rcll
inc
movsb
mov
loopne
push
mov
mov
sub
call
pusha
clc
pop
jns
lcall
xchg
push
xor
adc
sbb
enter
adc
inc
test
jne
movsl
test
sub
into
into
or
bound
les
inc
lahf
mov
add
mov
xchg
iret
das
icebp
sub
xor
jae
mov
mov
pop
jl
imul
and
jb
jbe
movsl
cmc
push
adc
jne
movsl
mov
repz
mov
shll
loopne
stos
in
daa
rol
mov
or
outsb
mov
mov
adc
pop
mov
mov
add
jge
into
fdivl
enter
jb
cwtl
or
addl
inc
fadds
jae
sub
cmp
js
fcmovb
cltd
cmp
cwtl
into
dec
sti
sub
sbb
jmp
fists
jmp
add
aad
pop
xor
sbb
fdivrl
push
mov
push
hlt
scas
lcall
fwait
xchg
divb
cmpsl
jnp
into
hlt
test
or
pop
xchg
loope
stos
dec
mov
mov
popa
roll
ljmp
mov
les
ret
jecxz
dec
or
ljmp
test
xchg
in
lea
lcall
adc
or
rcrb
dec
push
and
movsb
out
lock
outsb
test
ret
mov
jne
stos
vmread
loope
add
ffree
push
inc
andb
lahf
push
hlt
cmpsl
test
xlat
jne
fst
lret
jge
jmp
add
xchg
inc
cli
dec
jnp
scas
inc
mov
lret
add
dec
or
xchg
cmp
push
fildll
cltd
scas
xchg
mov
scas
nop
mov
cmpsb
and
jg
pusha
mov
pop
out
xor
inc
mov
loop
add
mov
sub
sub
jbe
inc
push
lea
into
pop
push
arpl
into
sti
or
mov
sub
fisubrl
or
add
push
xor
fwait
nop
mov
and
mov
pop
daa
test
jbe
mov
std
pop
and
ret
adc
pop
and
cmp
xchg
jne
hlt
js
test
xchg
inc
mov
pop
sti
sbb
imul
cmpsb
add
int
mov
sti
or
pusha
jmp
cmp
pop
into
ret
mov
out
xchg
sub
lods
add
and
movsl
fcompl
lret
enter
push
cmp
leave
or
fdivrs
mov
sarl
xor
fwait
push
rcl
add
push
inc
push
or
or
push
cltd
mov
loopne
and
pusha
loop
mov
inc
adc
mov
xchg
push
sub
xor
inc
sub
clc
push
sbb
andb
jo
sbb
sub
lods
jbe
sbb
movsl
ljmp
cltd
and
jle
incb
pop
rol
into
fildll
es
out
sarl
fdivr
outsl
daa
pop
jl
nop
inc
fstpt
leave
test
pusha
inc
shl
insb
popf
ljmp
mov
dec
sar
loope
cli
repnz
lock
xor
mov
imul
mov
das
inc
aam
cmpsl
xchg
stos
and
test
lock
sub
insl
test
push
adc
pop
xchg
bound
jne
imul
lret
sub
gs
lcall
mov
sbb
loope
stos
mov
inc
hlt
test
xchg
std
mov
pusha
cltd
test
test
call
dec
xchg
push
pop
sbb
jns
fsubs
xor
cmp
mov
in
pusha
adc
iret
addb
sti
ds
adc
add
sar
mov
cmpsl
jno
enter
jle
jbe
fimuls
mov
add
fstpl
cmpl
dec
mov
add
sub
pop
sub
in
addl
int3
std
add
dec
ljmp
or
mov
add
add
enter
subb
cmp
mov
jp
xorl
bnd
jne
loope
hlt
in
jmp
jo
inc
cltd
cli
mov
cmp
mov
push
rolb
adc
hlt
lds
fisubs
xchg
icebp
vcvtss2si
ret
lods
hlt
out
dec
popf
imul
insb
negb
push
inc
mov
movsb
gs
xor
sbb
adc
jne
lock
mov
dec
lock
enter
xorb
mov
adc
int
cli
xor
movsb
bswap
repz
push
out
pop
data16
push
stos
sub
shll
push
sbb
int3
adc
mov
cld
sarl
mov
inc
lock
inc
mov
aad
mov
and
and
cmp
in
push
mov
sub
fstpl
sarl
cmp
cmpl
leave
xlat
repz
push
outsl
sarb
add
cmpsb
insb
leave
aam
and
mov
mov
mov
shrl
nop
pop
add
fwait
dec
hlt
lea
jae
dec
ret
push
leave
repz
jecxz
mov
hlt
test
jmp
inc
test
mov
pusha
dec
data16
or
out
imul
and
loope
ss
daa
inc
adc
out
pop
mov
jb
cwtl
pop
aam
add
into
sub
shlb
clc
scas
movsb
xchg
popa
inc
cmc
jl
push
aam
int3
pop
dec
scas
imul
rcrl
mov
jne
push
popa
dec
daa
mov
hlt
pop
in
mov
loope
imul
leave
clc
lret
mov
add
std
addl
and
dec
adc
xchg
popf
sub
inc
scas
push
sbb
repnz
push
mov
xchg
and
adc
ss
mov
mov
add
xlat
xchg
shlb
arpl
cmc
jge
fwait
andb
cltd
fst
mov
subl
push
jmp
push
mov
push
fsubl
into
hlt
inc
sub
cld
sub
flds
iret
mov
push
rcrb
cmp
pop
outsb
inc
fisttpll
mov
aaa
xor
fimuls
test
pusha
mov
sbb
pop
mov
sub
mov
push
cwtl
mov
int
sub
mov
scas
add
loopne
pusha
add
insb
enter
add
xchg
int3
std
push
dec
ds
scas
mov
xchg
mov
lret
mov
in
or
xlat
test
jne
pop
mov
cmpsb
stos
es
je
push
mov
inc
lahf
mov
dec
andb
out
push
xlat
ret
in
push
pushf
mov
es
xor
pop
cmpsl
hlt
test
cmpl
popa
hlt
aad
ret
pop
insl
iret
subb
incb
nop
mov
in
jg
popf
popa
jne
add
mov
xchg
pop
pushf
mov
out
adc
mov
xor
pop
rol
or
js
test
bound
lea
lret
pusha
mov
hlt
popa
sub
xchg
fisubrs
arpl
lar
rcrb
fs
fdivs
mov
addl
inc
add
mov
sahf
jl
inc
xchg
push
push
jle
fiaddl
cmp
xchg
out
int3
jnp
js
outsl
out
or
add
pushl
popa
cli
jne
int3
test
jge
xorl
lret
or
inc
pop
xor
sub
jecxz
incb
xor
sahf
mov
iret
xor
cmp
xchg
sbb
xchg
xchg
or
push
test
push
les
push
sarb
mov
push
pop
fldenv
mov
xchg
xchg
shrl
jg
add
add
jne
or
adc
add
out
or
fnstcw
pop
gs
inc
dec
mov
fcoms
sub
mov
mov
add
mov
jnp
ret
stc
push
push
mov
jo
add
loopne
pushf
push
lods
adc
push
mov
pop
mov
xor
jne
cli
and
lea
cmc
mov
pop
lds
add
jmp
pop
xorl
lret
push
aaa
xchg
dec
xor
add
les
fsubl
xchg
inc
adc
cmpsl
adc
xor
adc
jg
dec
imul
bound
dec
sub
add
cmp
je
dec
test
push
jmp
mov
pusha
cmp
mov
mov
pusha
inc
out
cs
in
xor
push
cs
inc
inc
pop
add
push
enter
sub
dec
xlat
repnz
jmp
pushf
mov
cmpsl
xchg
mov
arpl
dec
fdivrp
xor
mov
test
push
push
aas
xor
cmp
scas
cld
xor
nop
insb
in
xor
add
into
into
xorb
clc
jno
add
push
and
mov
jns
scas
jb
test
adc
je
pop
mov
push
popa
fsubr
mov
popa
push
mov
push
lods
subl
repnz
xacquire
shrl
cmpsb
aad
jo
adc
jg
inc
or
or
icebp
cs
lcall
mov
mov
call
test
fstpl
fisttpll
js
mov
pop
out
inc
rcrl
jecxz
outsb
aam
sahf
inc
lcall
cld
cs
stos
dec
lea
push
call
aaa
fcomps
test
pop
out
mov
fstpl
hlt
or
sarb
ficompl
add
push
inc
ljmp
filds
clc
idivb
ss
loopne
inc
xor
cwtl
push
mov
jns
rolb
cmp
mov
push
mov
test
mov
imul
mov
mov
es
icebp
lock
jo
add
push
mov
inc
lret
mov
xchg
jl
add
add
or
pop
rclb
std
data16
dec
test
cs
in
xchg
rorb
pop
mov
nop
or
xchg
inc
hlt
sub
out
jne
ja
sbb
or
fs
mov
inc
negb
xchg
push
mov
mov
jns
stos
hlt
fbstp
mov
hlt
stos
jmp
test
test
jns
sbb
scas
aas
inc
mov
mov
add
jle
nop
and
test
dec
mov
lock
or
mov
push
cs
rcrl
jmp
sub
lret
aam
ret
jbe
lods
mov
push
inc
cmovno
stos
cmp
hlt
ljmp
mov
ljmp
mov
in
sbb
jbe
aaa
ror
lea
xor
lock
adc
outsb
jmp
mov
fistps
jne
fs
jnp
sub
movsb
jns
cld
mov
scas
jge
xchg
xchg
jne
xor
inc
xor
pop
fldt
gs
movsb
adc
repnz
mov
push
xchg
outsl
mov
clc
out
daa
clc
faddl
cmp
ja
test
hlt
dec
pop
inc
enter
test
pop
data16
hlt
jno
hlt
or
add
imul
or
lret
jne
addl
enter
mov
loope
inc
and
adcl
mov
and
popa
test
push
repnz
adc
push
es
push
push
push
test
sub
popf
mov
mov
inc
scas
mov
insl
inc
dec
loop
lods
stc
mov
bound
nop
scas
inc
push
cld
pop
mov
mov
mov
nop
xchg
das
leave
mov
std
arpl
add
pop
xchg
stos
mov
mov
pushf
adc
stc
dec
pop
jne
mov
imul
jle
push
popa
jo
hlt
mov
in
push
pushf
je
cltd
cld
in
mov
xor
lock
fsubs
jmp
jb
add
jp
sub
jmp
sbb
imul
fcomip
jae
les
adc
loope
mov
rolb
or
jecxz
mov
clc
and
dec
mov
sbbl
xchg
mov
dec
and
ss
mov
es
adcb
fsubrl
insl
test
ret
xor
lods
sti
pop
xchg
je
fiaddl
pop
mov
arpl
shrl
xorl
mov
fyl2x
int3
mov
jge
jp
push
fdivl
mov
cli
inc
add
aas
mov
mov
jb
lock
xchg
mov
in
nop
frstor
cmc
arpl
int3
xchg
push
add
xchg
roll
mov
in
adcb
xor
push
or
insl
mov
xor
insb
cmpsb
mov
inc
fxam
mov
xor
rorl
inc
lret
insb
inc
or
mov
repz
xchg
clc
rorl
cli
sbb
repnz
mov
rcll
jp
add
cli
jge
cmp
es
in
pop
fucomi
xor
leave
mov
cmpsl
and
je
in
or
mov
or
fdivl
push
scas
mov
add
out
sub
pop
or
inc
mov
mov
sub
dec
stos
mov
or
iret
pop
out
fadds
test
hlt
mov
cmp
insl
test
dec
cmp
xchg
les
add
add
mov
mov
arpl
hlt
xchg
sbb
jl
movsb
or
dec
xor
addr16
scas
subb
mov
xchg
out
mov
push
adc
inc
fiadds
sub
imul
leave
and
mov
push
xchg
sub
outsb
push
ljmp
data16
pop
mov
mov
std
outsl
pop
mov
hlt
pop
add
sub
shlb
adc
inc
and
mov
sti
test
cmp
lods
scas
add
fadds
sahf
push
cmpsb
pushf
cmpsl
push
jb,pn
imul
and
push
shl
and
stc
movsb
arpl
std
insl
imul
cmp
xchg
movsl
add
xchg
incl
mov
pushf
dec
fdiv
adc
push
das
push
mov
cmc
sbb
mov
jp
sbb
hlt
loope
pop
mov
daa
mov
movsb
pusha
cli
sbb
movsb
les
sbb
lods
xor
adc
pop
aas
in
das
mov
aaa
sub
jno
pushf
cmp
aad
mov
repnz
cmc
adc
aam
cmp
hlt
jmp
or
stos
stos
push
fnsave
dec
cmp
pop
or
lods
jo
or
ficomps
sbb
lock
push
inc
test
dec
inc
jns
das
aam
add
cwtl
xorb
stos
out
xor
cmp
out
push
into
mov
pop
es
pop
mov
jb
hlt
popf
xchg
ja
cmc
dec
pop
mov
and
mov
call
fldl
cmp
ret
aad
scas
xorb
jae
sbb
jne
jge
gs
aam
push
loopne
sar
and
mov
call
popa
scas
push
fstpl
cwtl
push
xchg
jo
mov
pop
mov
cmc
inc
or
mov
fistpl
mov
repz
xchg
int3
aad
sub
mov
adc
test
cwtl
dec
cwtl
hlt
fsubs
or
lods
adc
dec
push
mov
jb
outsl
cwtl
pop
shrl
lcall
fistps
and
xchg
je
roll
lret
mov
and
pop
adc
mov
jb
mov
lea
int3
into
jno
mov
xchg
rorb
add
loop
aad
mov
hlt
cmp
cmpsb
rolb
push
test
sub
sbb
in
dec
sti
aam
pop
lret
xchg
leave
repz
xchg
jmp
pop
jo
mov
test
hlt
xor
fcmovnu
push
lcall
inc
add
lahf
add
jne
cmp
adc
in
pop
adc
cmovl
and
fimuls
fnstenv
fdivr
rclb
test
incb
mov
add
mov
mov
std
daa
jne
sub
stos
mov
mov
cmp
popf
testl
movsl
jne
xchg
fxch
add
jl
mov
xchg
lret
iret
pusha
jmp
lcall
loope
enter
sbb
addr16
push
aam
loope
push
adc
or
scas
test
movsl
cli
lods
pop
sbb
sub
sbb
test
iret
loope
hlt
sbb
hlt
mov
inc
cmpsl
cmp
movsl
pop
add
inc
shrb
add
aam
hlt
mov
sahf
jmp
cmpsb
cmp
mov
xchg
and
add
mov
movsb
clc
mov
xchg
jmp
add
lcall
and
popa
incl
push
stc
test
or
mov
mov
sbb
mov
rol
insl
jle
lea
std
fidivs
pop
data16
sahf
add
xor
daa
test
ret
add
inc
pushf
ljmp
push
push
int3
push
jge
nop
out
push
jne
mov
add
mov
cmpsb
mov
sub
inc
dec
inc
xchg
leave
fwait
sub
cltd
sub
divl
orl
ficomps
pop
jb
or
adc
cld
popf
xchg
push
data16
arpl
sbb
inc
mov
mov
enter
fisubrl
add
mov
pop
call
test
in
or
sub
in
mov
sub
lods
adc
loope
add
cmp
pop
sub
jne
out
insb
xor
int3
into
into
dec
repz
imul
call
xchg
mov
mov
or
dec
mov
ret
and
jbe
loope
dec
adcl
outsl
shrl
or
mov
cmp
mov
inc
jns
outsl
enter
mov
mov
lds
inc
pop
jbe
in
adc
xchg
jns
data16
rorb
jnp
xor
inc
add
mov
mov
pop
jns
jbe
out
fiadds
lea
mov
lock
mov
imul
xchg
sub
xchg
mov
mov
jge
roll
test
movsb
scas
stos
les
std
cwtl
in
jg
push
cmp
inc
inc
movsb
dec
test
int3
fsubrl
mov
cmp
imul
add
cmc
inc
xchg
xchg
adc
loope
inc
mov
jne
inc
std
dec
out
mov
imul
jne
das
add
sbb
cmpsb
lds
adc
cs
dec
or
dec
mov
mov
inc
stc
mov
cmpl
dec
or
dec
add
arpl
jns
add
test
sbb
hlt
mov
in
mulb
popf
and
pop
lods
xchg
xchg
inc
mov
xor
add
scas
inc
nop
aad
inc
inc
xorb
jg
aad
aad
add
loop
pop
fildll
mov
sbb
insb
mov
add
dec
add
mov
stc
xlat
ret
jle
setbe
push
loopne
add
inc
into
dec
xor
ror
mov
mov
jecxz
inc
mov
xchg
or
testb
jne
dec
inc
xor
jl
aad
sahf
jmp
lods
inc
pusha
outsb
dec
or
add
mov
adc
jne
lret
push
add
adc
fsubs
scas
mov
test
mov
jnp
dec
inc
jmp
jge
jle
adc
mov
aad
ja
xchg
sub
idiv
push
je
adc
mov
mov
cld
aam
cmc
pop
jg
add
inc
pop
push
les
adc
xchg
nop
lds
lret
test
inc
mov
insb
lods
aad
pop
pusha
adc
stc
rolb
cs
popa
les
mov
add
inc
sarl
je
fimull
fadds
pop
shlb
cwtl
dec
repz
andl
sbbl
fdivp
jb
jmp
xchg
or
fwait
pop
or
mov
add
adc
pop
add
xchg
dec
aad
daa
in
leave
das
jl
jne
scas
jg
popa
push
add
xor
dec
bnd
shr
les
mov
push
dec
fisttpll
stos
mov
iret
outsl
sbb
repz
les
xchg
xchg
hlt
adc
stc
lcall
dec
in
in
dec
and
xchg
xchg
jmp
and
dec
stos
hlt
or
dec
andl
xchg
xor
cmpsl
jbe
loope
add
inc
lods
leave
js
jbe
fcomps
mov
xchg
sbb
inc
mov
aas
ror
and
jbe
repz
sbb
out
cmp
mov
fbld
mov
arpl
add
sub
aad
popa
jnp
popf
es
mov
out
icebp
aam
add
sbb
jo
lods
inc
test
pop
mov
adc
pop
aas
das
repnz
pop
pop
lret
mov
inc
les
jle
pop
cmp
pop
add
and
push
xchg
xchg
adc
fldl
test
sub
xor
sti
filds
push
ja
aad
jmp
cld
test
sub
xor
and
cmp
addl
in
das
lret
push
push
cmp
gs
push
iret
lods
shll
mov
mov
inc
mov
ficoms
add
sahf
xor
cld
mov
xchg
pop
bound
lds
pusha
inc
sbb
push
jnp
sbb
jbe
notl
jnp
push
mov
pushf
scas
movsl
push
cmp
cmc
pop
mov
push
outsb
or
cli
cmp
dec
dec
aam
mov
cltd
stos
adc
xchg
sahf
cmp
mov
pop
mov
data16
stos
xor
sahf
inc
cmpsb
testl
mov
loop
xor
dec
inc
orb
mov
mov
jae
shr
jne
add
add
pop
call
and
ljmp
rolb
push
lret
pusha
jp
add
loopne
les
testl
subl
cld
fadds
lret
and
push
push
jb
jo
test
xchg
add
jp
jns
les
cwtl
and
sti
lods
stc
push
fistps
cld
mov
loop
cmp
mov
lds
adc
jp
push
jns
or
jno
daa
gs
jno
pop
cld
lods
out
insl
rcrl
das
nop
xchg
into
sbb
test
jne
mov
cmp
stos
xchg
mov
xchg
push
lret
ja
test
imul
dec
sahf
mov
inc
and
mov
dec
xchg
or
pop
es
jo
adc
mov
mov
fs
xchg
or
js
sbb
mov
and
repnz
fidivs
mov
ja
sub
out
sbb
test
mov
mov
mov
push
jne
and
ffree
inc
mov
jns
leave
sarb
xlat
xchg
stc
cwtl
dec
xor
and
pop
int3
mov
mov
push
popf
or
gs
int3
adc
cmpsb
sbb
lcall
push
jg
cmp
pushf
gs
es
mov
sti
nop
stc
add
or
push
cmp
pop
adc
dec
out
mov
loop
test
push
jbe
sub
arpl
mov
aas
mov
pop
mov
push
or
fcoms
xchg
dec
mov
push
mov
paddusb
movntq
out
jecxz
sub
mov
sub
xor
ret
adc
jne
mov
add
stos
out
jae
popa
fstp
test
mov
cmc
push
jb
cmp
in
xchg
xorb
shll
shrl
adc
add
pop
hlt
sbb
xor
inc
fstps
adc
mov
sti
inc
std
mov
sti
stos
ljmp
jae
test
hlt
mov
sub
xchg
or
imul
sub
ds
test
or
loopne
push
mov
mov
loopne
jp
xchg
cmp
inc
nop
or
gs
mov
add
aas
xchg
xchg
push
xchg
xor
jne
fdivl
mov
push
movsl
clc
fsubl
mov
push
ret
cmp
hlt
jo
in
cmpsb
sarb
adc
lcall
xchg
testb
mov
cwtl
adc
jge
jno
fldenv
adc
aaa
pop
jecxz
test
fidivrs
inc
mov
mov
sbb
jg
cs
push
lods
jle
clc
out
inc
test
mov
out
add
mov
jb
sub
fdiv
xorb
negb
sahf
lods
push
repz
push
into
pop
add
rorl
mov
imul
pop
ficomps
lahf
add
pusha
cmp
lods
ror
xor
push
ja
inc
xchg
mov
mov
jcxz
fnstenv
mov
xor
nop
xor
jmp
enter
mov
fs
cld
movsb
gs
stos
inc
pop
cmpsb
mov
mov
movsb
rorl
fsubs
jne
lcall
fstpt
push
and
jnp
adc
jbe
xchg
fimull
movsb
insb
in
dec
pop
inc
enter
bound
orb
or
popa
sahf
pop
push
mov
shlb
jne
adc
lcall
lret
push
push
pop
xchg
dec
mov
push
or
test
dec
cmp
jae
inc
fldt
push
dec
fcompl
pop
and
sbb
or
mov
or
inc
mov
inc
repz
shlb
sub
mov
add
cld
pop
fcoml
xchg
and
push
xchg
faddl
push
sahf
loopne
scas
aas
mov
mov
icebp
aad
movsl
cmp
xchg
sbb
push
sbb
dec
xchg
pusha
push
sbb
jbe
cs
lods
call
jnp
inc
adc
mov
cwtl
jle
cmp
mov
outsl
loopne
or
negb
jbe
imul
hlt
add
dec
nop
mov
or
sbb
leave
mov
movsb
loop
test
mov
fidivrl
inc
adc
in
cs
das
xlat
nop
add
inc
ret
iret
bound
divb
incb
mov
pop
and
xor
dec
push
jnp
mov
mov
xchg
mov
dec
lahf
enter
test
std
add
dec
dec
or
les
movsb
cmp
ljmp
enter
adc
jge
loop
cmp
movsw
pop
sti
sub
mov
adc
imul
cmp
push
in
jo
jns
sarb
add
lea
pop
add
sbb
inc
dec
test
dec
mov
pop
mov
data16
das
out
sahf
jnp
mov
pop
adc
inc
and
push
dec
lea
stos
xchg
test
or
push
jp
mov
sahf
add
mov
jne
aad
add
aas
push
mov
mov
out
inc
dec
and
call
inc
in
lea
adc
xchg
sti
inc
mov
sub
stc
push
subb
cmp
fldl
roll
xor
pop
repz
lea
mov
adc
cmpsb
or
jmp
mov
jns
push
aas
inc
jmp
nop
xor
inc
insl
sti
xchg
xchg
insl
fidivl
popa
add
lods
inc
movsl
shr
in
lods
test
cmpsl
ljmp
xor
push
dec
jne
in
add
adc
nop
aas
cltd
mov
mov
or
ss
jmp
movsb
mov
dec
cmp
into
xor
test
mov
aas
call
sub
add
pop
incl
pop
hlt
fsts
imul
nop
ljmp
filds
ret
ja
adc
jno
sub
push
push
dec
cs
popf
adc
sub
cmc
cmp
push
inc
cmp
xchg
inc
sub
or
ret
cmp
or
data16
cmpl
lcall
sahf
pop
cs
push
add
cmp
pop
rcl
loop
fmull
cmp
daa
or
mov
sub
cmp
xor
xor
nop
mov
imul
test
loopne
mov
icebp
leave
push
imul
mov
out
lret
cld
xchg
les
scas
adc
jnp
and
push
fldl
jge
pop
enter
mov
cmpsl
add
xorl
jg
mov
test
jmp
adc
jne
insl
mov
gs
stc
and
lods
scas
mov
mov
insb
mov
movsl
cmc
mov
add
cmpsb
push
jge
popa
add
mov
inc
fs
xor
cli
jl
mov
lea
aad
out
xchg
inc
or
or
sub
pop
in
jmp
icebp
push
shll
or
repz
pop
mov
adc
adc
add
xchg
mov
lcall
jge
mov
outsb
add
pop
add
shlb
xor
add
lcall
pop
lret
cld
lock
xlat
mov
js
in
in
fcomps
push
shlb
xchg
jne
push
into
add
sub
cli
mov
cmpsl
cmp
push
push
mov
jne
pop
andl
xchg
into
inc
mov
xor
adc
and
add
inc
test
icebp
sbb
dec
mov
loop
push
loope
sub
hlt
enter
cmpb
cmpsb
fcomps
or
lea
insl
dec
cmp
cmp
out
into
mov
mov
neg
adc
xor
cwtl
cmpsb
out
test
int3
cs
or
scas
sbb
and
aad
adc
in
jne
cmp
inc
leave
or
bound
push
mov
in
jne
insl
push
mov
test
mov
lcall
xchg
cmp
out
push
test
adc
repz
inc
xlat
sbb
out
movsl
out
pop
fildll
inc
sub
sbb
dec
loopne
inc
andb
int
xchg
aam
fsubrl
loopne
add
cmp
xchg
xchg
stos
cmp
mov
pop
xchg
mov
fidivrl
and
xchg
fwait
imul
pop
bound
int3
cmp
mov
sbb
fcompl
loope
and
cmp
dec
xchg
ljmp
nop
mov
sub
pop
call
xchg
jno
popa
lret
mov
xchg
fcompl
ret
fists
into
punpcklbw
mov
lods
adc
jnp
sub
aas
addr16
add
test
jo
add
fcoml
or
xstore-rng
cmpsl
add
daa
lods
sub
and
add
cmpsb
sub
mov
arpl
pop
jg
sbb
mov
jae
mov
pusha
fs
pop
jl
movsl
lods
sbb
roll
xor
rorb
pop
addl
push
aad
cwtl
mov
inc
inc
insl
subb
lds
adc
into
cmpsl
enter
jg
add
int3
adc
adcl
cmpsl
sbb
jnp
push
es
lock
mov
lds
xor
lods
scas
out
in
mov
outsl
lahf
add
mov
nop
inc
test
mov
xor
cli
push
lcall
aam
nop
pop
leave
cmc
mov
fildll
mov
loopne
rorb
sub
xchg
pop
cmc
cli
movsl
movsb
aad
cmpsb
pop
jmp
enter
js
sti
fadd
inc
mov
and
jne
outsl
cmp
addb
cli
fcoml
dec
loop
aad
repz
inc
mov
adc
dec
xchg
stos
lahf
xor
adc
insb
int
hlt
mov
leave
aad
enter
jmp
insb
js
jle
testb
jge
loopne
mov
ss
and
and
or
dec
xchg
cmpsl
fbld
aam
jo
repnz
mov
jle
sti
mov
push
push
pop
hlt
pop
sbb
add
mov
insb
cmp
mov
or
dec
add
xchg
dec
push
fisttpl
arpl
ror
popa
lds
pop
inc
lock
loop
jnp
xor
ljmp
pop
orb
fistl
hlt
jno
push
adc
cmpsl
mov
push
xchg
shll
or
sbb
les
test
movsb
sbb
mov
stos
shlb
sbb
lret
inc
fldl
call
lcall
xchg
pop
ffreep
add
fcomp
lcall
aam
ret
dec
hlt
cwtl
cmp
or
push
or
in
mov
xchg
test
jmp
mov
cmp
pop
or
popa
js
mov
pop
mov
push
mov
aam
and
mov
mov
flds
movsl
lret
xchg
in
add
repnz
ss
mov
loopne
lods
call
adc
shr
adc
int
cmpsl
stc
les
mov
adc
in
xor
test
dec
xor
mov
fldcw
add
push
into
jg
call
out
add
xlat
jg
stc
xor
mov
fisttpll
xchg
testl
fmuls
icebp
ret
cwtl
cwtl
push
adc
call
hlt
test
mov
lret
xchg
iret
dec
fldl
and
daa
lahf
jns
push
sbb
push
add
test
xchg
call
xlat
xchg
cmp
mov
aaa
stos
xor
testl
roll
jmp
inc
and
pop
pop
out
cmc
in
mov
ficomps
pusha
add
xchg
push
mov
dec
push
movsb
and
mov
xchg
add
test
adc
push
xchg
sbb
push
enter
fcoms
lods
sub
sbb
filds
adcl
test
jg
dec
sub
popf
mov
add
xchg
add
sub
xor
cs
jge
adc
nop
mov
push
jns
fmuls
pop
dec
stos
cs
addl
fists
sub
mov
es
dec
inc
inc
shll
jo
sbb
xor
stos
or
pop
ror
hlt
add
ffreep
mov
adc
inc
adc
inc
subl
nop
inc
imul
in
add
aas
fldenv
lret
movsb
jne
int
jae
testb
dec
add
cmp
push
add
iret
pop
stc
in
stc
or
mov
cld
jbe
dec
out
mov
lods
rolb
pop
sbb
out
rorb
enter
jg
pop
push
jo
outsl
or
ljmp
push
or
pop
out
sti
repnz
inc
push
iret
fbld
insb
push
xor
hlt
mov
inc
pushw
mov
jnp
and
push
cmp
js
xchg
into
stos
sbb
and
or
int3
dec
cltd
jbe
jae
lret
mov
out
sub
lods
pop
rcrl
mov
adc
mov
hlt
pop
push
outsl
test
fcomps
addr16
ds
push
aas
repnz
loope
jg
inc
add
adc
outsl
inc
sarb
sbb
stos
fimuls
dec
mov
ret
push
nop
bound
cld
or
pop
push
lods
xchg
aam
cwtl
mov
js
mov
outsl
mov
adc
xor
orb
mov
cwtl
test
test
lods
mov
fcmove
dec
je
pop
pop
mov
jecxz
cmpsb
aaa
add
ljmp
loopne
sbb
lock
loope
sub
inc
leave
dec
sbb
sub
loopne
popf
in
into
adc
pop
mov
push
adc
jb
fsubl
inc
xchg
enter
fldenv
out
ljmp
or
xor
iret
jnp
xchg
jecxz
or
or
mov
pop
cmp
test
jne
pushf
lret
and
cmp
or
lahf
jb
sbb
mov
add
adc
mov
pop
pop
push
push
lods
push
xchg
test
jbe
insl
jb
ss
jg
mov
push
xchg
xor
and
andl
aad
inc
stos
pusha
mov
and
xchg
aad
repnz
mov
mov
pop
out
xchg
repnz
jne
stc
in
test
jno
mov
and
hlt
rorb
stos
sub
jo
test
xor
adcl
rclb
and
inc
test
lock
push
jnp
adc
lock
mov
cmc
scas
or
fsubl
pop
sbbb
outsb
xor
das
jns
xor
adc
cmp
movsb
dec
sbb
mov
mov
jl
sbb
push
xchg
icebp
mov
aam
test
adc
jmp
gs
stos
aas
xchg
mov
leave
mov
out
sbb
cmpb
push
loop
pusha
pushf
and
add
je
xchg
xchg
push
hlt
loope
cmpl
out
add
dec
fcoml
mov
mov
xor
std
adc
jp
adcb
xchg
rclb
jnp
and
aad
add
lea
mov
add
movsl
loopne
xchg
fisttpll
mov
in
sub
hlt
push
xor
sub
mov
push
out
mov
shrl
hlt
and
push
inc
adc
mov
inc
cmp
xchg
aaa
std
jmp
adc
mov
dec
out
ret
adc
adc
cmp
aaa
sub
xor
pop
lods
fwait
inc
or
into
jg
into
pushf
stc
inc
xchg
sub
pop
fcoms
out
push
jno
push
jbe
leave
mov
xchg
mov
les
xor
jle
lret
testl
add
mov
sub
add
sbb
and
in
jne
mov
repnz
lds
cmpsb
fsub
push
shlb
loopne
pop
xor
pop
mov
popf
jb
sub
sbb
add
ljmp
jne
enter
mov
push
adc
jmp
icebp
mov
mov
cmpsb
movsl
push
jle
hlt
push
inc
pop
pop
outsb
push
push
and
add
cwtl
adc
xor
lods
sub
xchg
mov
and
cmp
mov
aam
add
andb
mov
gs
aam
dec
cmp
jmp
adc
push
mov
hlt
int
push
jecxz
dec
test
xchg
xor
xchg
test
or
jb
jp,pn
movsl
call
dec
inc
mov
or
pop
mov
stc
test
or
mull
push
ds
mov
ret
or
jecxz
and
nop
idivl
scas
jle
xchg
out
jg
decl
js
stos
enter
jp
int3
into
das
xor
subl
fstps
jmp
inc
inc
cmpsl
das
add
fdivrs
lret
mov
out
mov
mov
shll
sub
sahf
push
into
shl
jbe
jmp
inc
nop
scas
ret
mov
adc
out
xor
daa
jl
mov
clc
push
fwait
and
xchg
mov
mov
inc
xorps
shlb
xor
jae
dec
in
jecxz
outsb
push
sbbb
mov
lds
inc
pop
sbb
shl
jmp
inc
std
fstl
xrelease
movsb
cs
pop
xchg
add
push
call
enter
mov
enter
mov
pop
stc
cmpsl
xchg
movsb
lods
adc
push
pop
xchg
pop
jns
push
xchg
cmp
mov
sarb
jmp
loopne
lods
hlt
iret
xchg
push
test
push
mov
cli
outsl
cwtl
mov
mov
xor
mov
rcr
mov
int
int3
mov
repnz
pop
fstps
lea
push
ret
push
or
push
dec
pop
jg
cmp
push
imulb
jl
push
jg
inc
out
xchg
and
cmpl
sub
pushf
dec
das
stc
jmp
dec
pushaw
cmpsb
adc
sahf
hlt
jo
leave
shl
jnp
mov
and
jp
adc
outsb
daa
or
stos
std
sub
in
push
xchg
jo
popl
or
xor
sbb
dec
cmp
mov
xchg
xlat
mov
enter
maxps
and
mov
xchg
dec
aas
cmp
xor
jne
lret
aam
leave
filds
xchg
stc
out
loop
std
add
pop
xchg
and
cld
fwait
xchg
and
dec
or
or
inc
mov
icebp
jno
mov
cmc
sti
in
lret
imulb
inc
dec
int3
sbb
bound
cmp
xchg
xlat
jle
push
mov
out
aaa
daa
mov
cwtl
dec
push
mov
lret
stos
push
icebp
and
inc
movsb
shl
sbb
pop
test
stos
lods
sub
sarb
pop
into
sbb
lahf
adc
pop
sub
cmp
inc
mov
mov
test
push
pop
xchg
nop
mov
xchg
pop
repz
clc
xchg
cli
mov
nop
sti
call
mov
hlt
mov
roll
shrb
inc
pop
cmp
and
nop
xchg
enter
sti
mov
pop
adc
gs
add
push
sbb
push
int3
jne
cmpsb
xor
test
xor
cwtl
out
imul
ja
enter
push
inc
iret
add
xor
dec
mov
mov
inc
loopne
pop
cli
or
imull
les
test
xchg
ret
imul
pop
nop
out
push
mov
jno
sbb
in
sbb
mov
push
nop
add
loop
and
sub
sub
clc
mov
pop
sub
xchg
cmp
sbb
mov
jo
popf
add
mov
mov
mov
push
sbb
inc
push
dec
dec
mov
adc
clc
pop
pop
jo
popf
mov
fsts
jge
lret
ljmp
subb
cs
mov
sbb
int
daa
dec
cwtl
scas
push
cwtl
lock
jne
testl
jge
nop
dec
push
call
testl
ljmp
or
dec
sub
orb
xorb
test
lods
aad
cwtl
lahf
jns
xchg
xchg
add
sarb
sahf
jnp
out
and
hlt
xchg
push
ret
outsb
fldl
enter
dec
dec
scas
shrl
xlat
into
jbe
cmpsb
repnz
pop
fmuls
mov
pop
push
mov
sub
cmpl
test
inc
pusha
add
es
dec
jo
adc
add
mov
in
lea
test
imul
or
loope
inc
subl
das
pop
mov
xor
add
or
xchg
xchg
add
push
or
mov
push
add
mov
enter
inc
inc
cmp
xchg
fisubrs
data16
push
mov
adc
aas
repz
mov
jne
sbb
add
sbb
scas
ds
cmp
pop
sbb
jp
adc
jmp
inc
test
mull
sub
andl
lock
jecxz
nop
pop
inc
inc
ficomps
add
mov
pop
and
add
stos
jne
or
mov
and
push
in
les
fiaddl
or
data16
inc
ljmp
fisubrl
push
fsubrl
rclb
xorl
mov
lret
xchg
jno
idiv
sub
arpl
int3
sbb
or
dec
fsubrs
decl
xor
pop
fldl
pop
cmpsb
cmp
test
sbb
jmp
stos
divb
scas
test
xor
int
ret
or
push
sub
movsl
iret
mov
test
cwtl
sbb
xchg
pop
mov
and
mov
addl
lcall
add
jg
ja
ja
enter
fwait
mov
lods
leave
std
sub
mov
push
rcrb
popa
dec
sti
or
stc
pop
rol
mov
outsb
fsubrs
shrb
testb
cli
xor
jnp
pmuludq
mov
pop
mov
insl
sub
inc
jb
dec
int3
mov
js
rcrl
cmp
mov
scas
inc
pop
rcl
sti
imul
pop
loop
cmc
push
enter
xchg
fbld
mov
pop
xchg
push
xchg
xlat
push
ljmp
jecxz
into
ret
hlt
inc
push
push
hlt
stos
and
lods
adc
cmp
mov
mov
dec
or
push
add
add
and
dec
je
add
push
mov
sbb
inc
jne
data16
inc
mov
testl
int3
jnp
mov
fstpt
xor
push
cwtl
sub
divl
xchg
pop
cmpsb
inc
dec
add
jl
pop
imul
icebp
jne
std
add
and
aam
hlt
pop
mov
sbb
insb
testb
testl
mov
leave
cmp
sbb
mov
scas
jne
dec
add
hlt
dec
mov
cmp
dec
test
repz
insb
out
mov
sub
pusha
aaa
es
ror
scas
in
sarb
xor
mov
xchg
xor
test
int
sbb
loope
push
cltd
adc
add
sahf
imul
stos
sete
adc
icebp
stc
mov
in
inc
imul
mov
lock
pop
icebp
aad
adc
cli
and
add
enter
adc
xchg
ljmp
subb
jmp
pop
push
push
push
stos
xor
stos
in
jmp
and
lret
inc
jae
xchg
subl
and
repz
sahf
mov
dec
xchg
pop
stos
pop
rolb
lea
shlb
sti
int3
lea
cmp
mov
and
sub
arpl
sbb
xchg
fists
fimuls
pop
push
dec
out
and
or
add
mov
subl
push
aas
jne
cmp
dec
insb
ret
idivb
mov
pusha
mov
mov
xor
faddl
lcall
xor
sub
pop
rclb
dec
pop
cmp
orl
sti
ljmp
jmp
xorb
aam
stos
add
mov
jne
xor
sbb
xchg
out
leave
test
movsb
push
subb
and
jmp
hlt
aaa
lods
daa
fdiv
movsb
ss
in
mov
pop
inc
orl
out
cmp
int3
or
dec
cltd
aas
enter
std
add
mov
dec
inc
notl
xchg
mov
enter
insb
mov
sahf
mov
cmp
mov
jo
dec
xor
pushf
mov
sub
mov
popa
call
sub
xchg
xlat
mov
mov
fnstsw
adcb
push
test
insb
cld
leave
loop
repnz
xorl
mov
insl
xchg
testl
jl
daa
mov
je
scas
bnd
dec
jbe
jb
rorb
rcll
loope
xchg
xchg
ljmp
dec
mov
lods
xchg
or
pop
or
jbe
push
hlt
jae
mov
pusha
scas
or
iret
mov
mov
clc
fadds
fsubrl
jno
xchg
in
movsl
in
cmp
cmc
rcrb
mov
fistps
adc
ficoml
in
sub
inc
adc
xlat
fwait
add
iret
jmp
mov
adc
sub
addb
jge
mov
push
stc
and
mov
inc
shr
sub
cltd
dec
lock
xchg
rcll
cmpsl
popa
xchg
lahf
push
pop
sbbl
je
jmp
in
arpl
push
xor
cmpsb
pop
pop
push
fcoml
les
jns
jge
mov
mov
nop
sub
les
insb
mov
enter
ss
and
pop
sbb
out
mov
aam
call
hlt
xchg
fiaddl
fistpl
mull
add
mov
enter
jmp
fisubrl
mov
jb
dec
notl
hlt
lret
inc
andl
lock
loope
ja
hlt
adc
mov
and
pop
test
jne
out
push
mov
out
lcall
lds
in
test
lods
frstor
mov
ficoml
enter
or
jns
cld
test
and
sahf
sub
add
jns
cwtl
adc
mov
push
repnz
jmp
out
or
or
xor
mov
sub
inc
leave
adc
loopne
mov
jle
or
fildl
mov
adc
sbb
pop
sub
push
cmp
adcb
mov
sbb
movsb
push
das
into
adc
cmpb
pop
push
pop
lea
loop
sahf
sbb
jnp
out
fsubl
in
lods
mov
jo
mov
roll
out
mov
stos
aad
lret
data16
test
cltd
dec
push
movsb
cmp
jns
jp
xor
lea
pop
inc
std
jne
into
mov
adc
idivl
push
movsl
cmpl
or
adc
pop
mov
push
add
shrl
xlat
inc
jbe
sub
bound
call
push
pushf
div
adc
add
cmp
pusha
jae
in
mull
test
pop
mov
data16
mov
mov
mov
push
xchg
cltd
cli
packsswb
adc
test
dec
xor
sbb
inc
inc
daa
addb
push
xchg
movsb
xchg
inc
jne
dec
lock
hlt
and
into
cmp
mov
inc
mov
adc
enter
sahf
test
stc
dec
test
sub
sbb
scas
add
icebp
push
dec
lods
push
cwtl
adc
cs
ljmp
jnp
scas
sbb
sub
pop
mov
jne
pusha
out
leave
jmp
loop
dec
cmc
ds
jge
mov
push
mov
mov
xor
xlat
test
imul
jg
jl
mov
ljmp
int
and
stc
cmp
sbb
and
mov
loope
in
enter
nop
or
into
jbe
xchg
lock
push
adc
mov
mov
jno
pushf
lods
mov
dec
in
dec
mov
adc
sub
xchg
mov
mov
xchg
int3
push
fimull
ret
jns
pusha
out
orl
and
scas
mov
fdivrl
push
rorl
pop
in
jnp
aam
mov
mov
hlt
pop
sub
push
sets
rcl
or
mov
test
iret
iret
inc
popf
int3
lea
xlat
fcmovnu
push
scas
jae
das
adc
cmp
add
or
ljmp
adc
mov
icebp
add
mov
es
movsl
xchg
or
jbe
in
inc
sbb
or
cmc
les
add
or
xchg
std
call
dec
ds
jne
ds
mov
xor
cmc
dec
rorb
enter
xchg
mov
out
cmc
sarl
add
les
pop
pusha
sub
cmp
inc
jne
inc
inc
enter
scas
jg
test
jg
arpl
xorb
pusha
inc
pop
xchg
dec
leave
leave
in
jg
and
lret
or
imull
cs
int
sub
in
mov
clc
and
in
jmp
mov
xchg
mov
popa
dec
aaa
ret
inc
mov
mov
xchg
mov
stos
movsl
mov
stc
pop
test
add
mov
jmp
aam
shll
cmp
pop
loop
imul
loope
mov
arpl
mov
sub
adc
sbbl
and
jmp
jno
lcall
add
mov
push
jne
rcrb
sahf
lcall
call
dec
dec
stos
push
and
mov
scas
stc
jne
leave
in
rcrl
dec
mov
scas
subb
enter
mov
inc
xchg
mov
dec
push
inc
outsb
repz
lret
lods
pop
add
sub
mov
push
cmc
in
stos
into
sbb
les
push
adc
imul
cmp
pop
int3
popf
add
sti
insl
mov
hlt
cmp
push
icebp
and
or
pop
in
loopne
pushf
mov
popa
mov
test
divb
sbb
test
sbb
dec
xor
add
cmpsb
cli
dec
cs
pop
cli
insb
jbe
movsb
mov
mov
in
cmp
or
lahf
rolb
add
lods
aas
cmp
jge
mov
pop
xchg
aam
push
push
push
outsl
xor
lret
mov
loopne
or
add
pop
sub
mov
pop
sti
ljmp
ret
aad
scas
cmpsb
cmp
test
mov
lock
lods
mov
movl
gs
test
scas
movsb
jnp
add
mov
xlat
jp
and
js
imul
lret
jno
xchg
and
outsb
mov
test
ljmp
and
mov
sub
jnp
daa
mov
jbe
stos
aad
xchg
jp
adc
inc
dec
jae
fs
adc
clc
scas
outsl
inc
push
push
push
and
stos
push
les
dec
loopne
mov
rorb
dec
inc
pushf
lods
out
lods
cmp
int3
cwtl
cmpsb
sub
jle
mov
mov
hlt
xchg
test
mov
jne
dec
outsl
or
mov
mov
ret
xlat
test
push
adc
bnd
jne
idivb
sbb
sub
cmp
sahf
adc
sub
inc
les
in
cmpsb
dec
dec
daa
inc
pushf
les
xchg
or
mov
imul
pusha
pusha
mov
jbe
hlt
or
repz
push
cmp
pop
add
mov
push
jne
cmp
cmp
negb
mov
mov
inc
or
add
movsb
cmp
fnstcw
jl
push
mov
inc
add
xchg
mov
jnp
movsb
sub
fbld
test
subl
loop
cmc
insb
enter
test
push
dec
xor
mov
dec
roll
push
sub
xchg
leave
call
cs
add
jecxz
sahf
jmp
push
adc
inc
aas
xor
cld
cmp
mov
xor
mov
jne
add
cmc
mov
mov
and
out
aam
jne
xor
loop
or
icebp
push
lods
jns
js
push
les
pop
rclb
cld
test
and
mov
cltd
outsb
repz
inc
mov
adc
dec
and
in
scas
insl
in
hlt
cmp
fisttpl
cmc
jbe
or
das
repz
scas
fcmovnbe
mov
icebp
pushf
add
mov
mov
mov
mov
cld
adc
dec
hlt
arpl
lods
mov
in
jmp
add
out
lret
add
cmp
pop
filds
jbe
sub
cmpsl
lds
inc
test
test
dec
sub
imulb
dec
dec
js
and
pop
cmc
ret
testl
sub
pushf
test
test
popa
dec
jne
sbb
gs
push
lret
in
sahf
xchg
mov
sub
mov
xchg
iret
arpl
mov
or
dec
ss
in
fisubl
orb
push
sub
ja
subb
mov
scas
push
xchg
cmp
lea
inc
call
sbb
mov
or
cmp
add
fwait
mov
mov
mov
xlat
pcmpeqw
inc
repnz
push
lock
adc
push
scas
inc
jo,pn
outsl
aaa
popa
mov
lret
sub
popf
cmpsl
imul
int3
push
cwtl
xchg
rorb
cltd
mov
fsubrs
popa
enter
sti
mov
es
add
inc
fwait
push
stc
mov
lahf
nop
insb
mov
add
mov
pop
mov
negl
push
mov
adc
lods
adc
lret
push
imul
pop
nop
mov
jle
xchg
fmull
sahf
jle
xchg
hlt
jb
mov
call
add
cmp
push
ja
out
dec
cmpsl
int3
sbb
xorb
aam
mov
sbb
push
add
jl
enter
dec
call
ljmp
cmpsb
sub
test
jmp
xor
sub
xlat
addl
fdivrs
pop
inc
mov
lds
testl
xchg
mov
movl
xlat
adc
adcl
cmpsb
gs
sbb
sbb
and
mov
sahf
pop
stos
mov
ss
int
insb
push
fsub
andb
hlt
push
adc
add
mov
sub
ret
mov
arpl
out
sbb
xchg
out
jg
out
adc
adc
stos
cmpsb
mov
and
lret
into
ficomps
addr16
xor
out
cwtl
mov
push
mov
aas
addl
lea
xchg
xadd
sahf
lcall
inc
push
dec
mov
imul
inc
stos
test
xor
fdivr
movsb
arpl
pop
and
shl
scas
test
xlat
mov
int
rclb
in
dec
sub
jne
mov
into
sti
cmc
addl
jge
push
inc
mov
aaa
xchg
jmp
ret
stc
out
pushf
dec
mov
mov
mov
sbb
enter
repz
dec
jns
pop
xchg
lea
pop
int
sub
xchg
stos
jne
inc
mov
mov
dec
pop
arpl
xchg
or
out
insl
cmp
xorb
cmp
xchg
loop
sahf
pusha
pop
int3
sbb
mov
push
ror
xchg
lret
pop
dec
mov
sbb
into
ror
mov
in
and
into
enter
mov
gs
pop
dec
sub
das
gs
popf
xor
lock
hlt
ja
mov
fs
xchg
shlb
pusha
movsb
jp
clc
movsb
or
out
ret
push
stos
mov
xor
inc
jle
roll
int3
sti
call
sub
adc
stos
jb
test
and
push
and
sarb
outsb
inc
dec
fs
mov
cmpsb
xchg
in
mov
pop
or
cmp
hlt
inc
or
cmp
add
std
mov
push
decb
push
jecxz
xor
sbb
add
add
in
hlt
xor
mov
add
clc
pushf
add
push
es
loope
inc
call
sub
dec
mov
dec
les
xchg
and
lcall
std
adc
in
add
scas
stos
jg
fcompl
test
push
stc
movsb
mov
cmc
push
std
mov
pop
pop
sub
insl
xchg
or
in
mov
idivb
imul
nop
mov
test
cli
mov
pop
arpl
jo
mov
rcll
push
aas
test
fsub
stos
mull
push
shrb
xor
iret
pop
rol
lods
or
pop
outsl
inc
and
fldcw
pop
xlat
adc
jne
xchg
mov
dec
cmp
pusha
pop
lea
imul
or
and
sbb
mov
je
adc
and
push
push
xchg
test
mov
ja
rorb
pop
add
fsts
and
pop
roll
push
inc
xlat
xchg
adc
pop
test
pop
add
mov
psrad
adc
movsb
clc
add
mov
fildl
mov
in
jne
movsl
cmp
or
icebp
jecxz
xor
stos
dec
cmpsb
inc
add
fs
hlt
sub
dec
add
imul
inc
enter
pop
add
lret
std
sti
pushl
jge
into
lock
or
push
and
and
mov
aam
adc
xor
or
int3
jbe
xchg
lcall
cmp
adc
mov
fstp
data16
testl
inc
mulb
pop
fdivs
xor
test
sub
mov
push
xchg
or
pop
popa
cmpb
fisubrs
dec
inc
insb
jge
es
and
int3
cwtl
xor
dec
inc
dec
fadd
sti
or
stos
or
xchg
les
mov
bound
pop
daa
adc
stos
test
rep
fisubrs
lcall
dec
repz
add
decb
bound
push
stc
insb
movsl
int3
inc
mov
push
jp
mov
xchg
insl
push
sub
cmp
dec
fsts
mov
and
jmp
movsb
sub
or
pop
inc
nop
inc
fbstp
aad
add
aaa
pop
test
stos
fnsave
int3
stos
mov
or
jae
inc
stos
hlt
mov
or
pop
inc
push
mov
scas
cmpsb
xorb
call
jno
into
rorb
sub
sbb
jne
push
pop
pop
sub
filds
xchg
scas
enter
and
les
filds
and
test
call
dec
jmp
mov
std
in
pop
std
es
popa
mov
xor
out
bnd
out
int3
xchg
add
push
dec
dec
and
cli
sbb
jne
cmp
sbb
test
push
mov
loop
xchg
vsubsd
push
lahf
xchg
mov
adc
cmp
push
movsl
aad
xorb
clc
mov
xchg
pop
fcompl
inc
rcrl
mov
call
stc
push
push
cmpsb
das
inc
pop
jne
sub
push
fnstsw
mov
mov
outsl
adc
nop
push
cs
inc
mov
call
inc
dec
fwait
and
sub
fxch
cwtl
sahf
testb
pop
lds
cltd
push
and
push
jecxz
dec
stos
or
mov
mov
movl
push
inc
mov
aad
shl
mov
std
or
clc
mov
jae
mov
and
arpl
push
push
cmp
and
push
sbb
push
mov
sub
xlat
adcb
jne
or
fstps
in
sub
sub
xchg
call
xor
lret
pusha
imul
das
mov
pop
es
push
cmp
in
rorl
mov
ficoms
lea
mov
outsb
sub
ja
add
or
jo
adc
cmpsb
mov
popa
addl
aad
loopne
and
mov
fisttpl
shrb
jecxz
mov
add
dec
sbb
mulb
and
mov
fisubs
subb
les
loope
pop
xchg
sub
dec
test
or
fisubrs
mov
lret
or
loope
repnz
add
test
inc
int
imul
jno
push
cltd
sub
loopne
add
mov
jne
movsl
or
push
scas
sbb
imul
rcrl
ljmp
pop
test
ss
jecxz
pusha
xchg
insl
xchg
enter
and
or
rclb
imul
shlb
enter
sub
jne
pop
xorl
sub
out
shl
dec
pusha
mov
shlb
or
cmp
mov
loop
test
gs
outsl
cmpsl
data16
mov
mov
pop
xor
push
sub
push
inc
mov
dec
jge
adc
rol
pop
lds
dec
push
inc
mov
nop
push
push
stos
es
ss
in
outsl
jne
lcall
add
aad
sti
push
jge
sub
adc
jns
mov
arpl
xor
mov
mov
movsl
cmpsb
arpl
les
negl
adc
ret
aaa
call
dec
rolb
add
push
icebp
and
sub
hlt
jb
jg
pop
and
xchg
mov
or
dec
fs
add
pusha
es
adc
sub
jbe
lea
sbb
cmp
test
adcb
js
mov
adc
jb
cmpsl
dec
lret
lods
dec
pop
add
imul
xchg
aaa
shlb
adc
out
mov
fwait
sub
mov
mov
push
add
fcomi
add
lcall
sub
iret
fs
movsb
jg
stc
test
out
add
adcl
dec
xchg
mov
hlt
into
cs
cmpsb
lahf
inc
pop
stos
into
mov
cmp
mov
mov
cmpsb
hlt
ret
mov
test
icebp
add
fsubl
push
xorb
ret
pop
add
pop
pop
and
out
clc
pop
mov
cmc
out
in
mov
push
inc
inc
loope
mov
stos
mov
test
mov
xor
push
lods
or
jnp
enter
fmull
icebp
mov
fsubl
lcall
lret
inc
ja
dec
xchg
orb
jmp
sub
mov
cmpsl
add
push
test
sbb
mov
sub
or
repnz
inc
push
inc
gs
cwtl
xchg
enter
ja
inc
pop
nop
repnz
cmp
dec
cli
mov
insb
lods
jne
push
popf
test
mov
lods
insb
repnz
mov
test
orb
stos
sub
scas
jle
mov
jne
push
jno
testb
jno
push
int3
inc
enter
xchg
fs
mov
leave
xchg
fcoms
push
jne
dec
add
add
push
test
xchg
mov
push
stc
and
cli
ss
in
xlat
leave
stc
jg
inc
jne
push
test
push
stos
mov
mov
lods
shl
lea
jp
rcr
or
xchg
dec
add
pop
fsubr
pop
loop
repz
pop
pop
popf
pop
mov
inc
test
pop
les
add
fcoml
dec
mov
fcoml
lods
sub
push
orl
mov
out
sti
imul
xchg
rolb
or
int
xor
shrl
push
or
jmp
lahf
mov
mov
loopne
cmp
ret
cmpsl
iret
push
sbbl
push
pop
pop
test
mov
scas
fsubrs
xor
and
cli
hlt
xor
ljmp
fidivs
ss
dec
popf
cld
mov
out
int
and
std
add
ds
pop
andl
das
xchg
loop
pop
cli
sbb
mov
lods
data16
and
sbb
or
sub
in
xor
filds
daa
and
adc
inc
xchg
push
push
jne
mov
int3
dec
loop
or
stos
mov
ja
jne
push
cmp
mov
loopne
cltd
sbb
xchg
lods
icebp
fwait
aas
rclb
bound
movsl
or
mov
movsl
lahf
add
inc
shrb
push
sbb
mov
popa
mov
daa
jns
dec
mov
icebp
movl
sub
pop
adc
mov
pop
jle
mov
pushf
xor
or
jbe
imul
call
addb
jae
fisubl
lretw
pushf
imul
pop
out
and
xorl
pop
nop
mov
int3
push
jne
cmp
mov
andl
insl
ret
push
loop
lods
xchg
pop
pop
inc
cltd
fs
mov
loope
mov
sub
and
les
adc
fsubs
shl
into
pop
sub
jge
sub
pop
test
sti
insb
notb
inc
mov
std
inc
push
aaa
popa
jge
rcll
push
jb
test
xchg
das
add
das
mov
hlt
sahf
daa
nop
and
stos
and
push
mov
adc
pop
es
jp
ret
and
not
jmp
inc
in
lods
add
jg
inc
cld
test
jns
lahf
ror
imul
xchg
outsl
add
dec
and
lock
insb
pop
inc
into
pushf
mov
stos
cs
sub
mov
xchg
jbe
sbb
push
cmp
loope
mov
popa
and
push
mov
test
cs
aaa
aad
rclb
sub
inc
jnp
in
push
cld
fcompl
enter
hlt
cs
xchg
fstp
jecxz
add
push
pusha
rcll
mov
std
jo
and
cld
mov
adc
mov
cld
xchg
push
sbb
push
xchg
clc
mov
pop
les
imul
mov
popf
sti
movsb
call
push
xor
ds
fwait
aam
nop
jle
enter
pop
stos
ja
inc
mov
pop
xorl
dec
repz
and
mov
mov
das
cmp
dec
into
pusha
mov
movsb
outsl
sbb
into
and
shll
jmp
std
mov
mov
sub
inc
das
jle
pop
in
pop
xor
xor
mov
sub
cwtl
inc
fisttpl
leave
arpl
out
rclb
pop
sete
hlt
adc
dec
dec
sub
xchg
xchg
js
mov
into
cltd
sbb
sti
push
pushl
mov
or
jle
ret
pop
jmp
mov
mov
jne
roll
loop
inc
loope
call
rcr
pop
insl
fiadds
dec
cmpb
sti
xchg
roll
pushf
mov
dec
arpl
push
syscall
in
dec
sub
inc
sbb
xchg
popa
and
mov
xor
clc
leave
pop
mov
iret
inc
mov
mov
cmc
fdivs
adc
loope
or
addl
pop
mov
stos
clc
inc
mov
call
movsb
dec
mov
scas
cmp
sub
aad
lods
repz
mov
sti
idivb
test
mov
mov
inc
flds
jp
decb
jge
inc
ja
pushf
out
jbe
push
in
jmp
jle
dec
mov
mov
adc
ds
add
scas
mov
test
daa
loop
cmp
sbb
loope
nop
add
stos
add
inc
cmp
inc
sahf
out
jecxz
inc
neg
data16
cmp
shlb
mov
mov
xchg
stos
adc
mov
test
out
scas
cmp
or
enter
cs
stc
adc
jl
pop
xor
test
mov
pushf
test
jl
push
and
std
mov
hlt
pop
adc
sub
into
xchg
stos
mov
inc
repz
dec
lret
je
stos
icebp
ret
pop
repz
dec
lock
and
cli
sub
and
lods
fdivl
shlb
and
push
cld
iret
fldenv
movsl
in
out
xchg
and
js
daa
std
mov
xor
popa
cld
cmp
aam
rcrb
mov
jecxz
dec
stos
mov
mov
hlt
scas
pop
rcr
adc
inc
mov
lcall
cs
xchg
js
dec
das
pop
clc
lods
mov
insl
dec
cwtl
xor
jl
jmp
and
mov
nop
sbbl
cmp
lcall
aas
mov
mov
mov
fsts
or
and
daa
mov
xchg
inc
sub
dec
pusha
mov
out
bound
push
mov
lock
add
cmpsb
add
mov
nop
mov
inc
push
in
rclb
adc
mov
ss
aam
leave
or
stos
jb
fisttpll
lods
inc
dec
dec
cli
aaa
or
jmp
dec
adcl
jo
cmp
jae
popf
push
add
gs
lods
fldl
std
and
fists
arpl
in
or
loop
inc
or
and
movsl
xchg
add
ljmp
mov
rol
cmp
subb
icebp
sarl
into
cmp
xchg
aas
movsb
xorb
ss
push
dec
mov
push
icebp
les
mov
xor
loop
inc
adc
data16
stc
jne
xchg
jle
movsl
test
mov
ret
inc
sbb
add
mov
and
pop
aam
hlt
cltd
dec
xchg
pop
dec
nop
mov
aas
mov
pop
or
and
push
fcmovu
into
xor
jp
or
js
mov
rcrb
mov
aaa
movsl
xchg
dec
and
add
loop
es
loop
aas
sub
or
lods
cmp
jno
fmuls
pop
mov
in
shlb
jecxz
xchg
sti
dec
adc
push
notl
in
aad
popa
enter
mov
mov
rorb
dec
sub
or
in
hlt
sbb
ljmp
out
xor
testl
pop
mov
mov
xchg
fistl
arpl
xor
add
adc
fnsave
faddl
cmpsb
pusha
mov
push
push
stc
or
adcl
sbbb
inc
lcall
jle
sub
int
cmc
add
in
loopne
lea
push
inc
in
xor
dec
in
mov
cmp
xchg
and
sub
jmp
hlt
stc
test
xor
inc
sahf
leave
and
outsb
dec
inc
sbb
adc
jge
xchg
and
gs
sbb
sub
mov
jmp
jo
fildll
test
cli
fists
inc
and
repnz
fs
shll
mov
in
sub
lcall
jae
pop
cld
push
dec
jae
mov
addr16
mov
popf
fmuls
push
push
loope
dec
xlat
and
jb
ficomps
ljmp
hlt
cwtl
push
repnz
mov
xlat
fcoms
mov
stos
and
das
mov
fildll
out
cwtl
sbb
xchg
adc
orl
push
gs
mov
cmp
lcall
xor
gs
or
inc
sub
ficompl
xchg
out
cmp
lods
mov
adc
ret
lret
imul
outsb
loop
leave
lahf
mov
mov
and
xor
imul
sbb
lock
les
scas
pushf
jg
popf
mov
xchg
ficoms
dec
lock
popa
arpl
pop
sub
ret
lahf
leave
pop
xor
in
pusha
sub
jne
sub
mov
inc
enter
dec
lret
mov
out
stos
add
ljmp
call
inc
arpl
push
adc
xchg
mov
imul
hlt
sahf
cmp
cld
add
pop
xor
xor
inc
in
xor
arpl
out
and
insb
sbb
add
mov
xor
mov
cs
pop
sbb
ljmp
mov
in
js
or
mov
or
inc
in
mov
and
das
sti
leave
cmp
lret
inc
rorl
pop
push
push
movsl
pop
shl
cli
cmpsl
jle
and
cmp
cli
sub
hlt
loope
sub
sub
imul
hlt
movsl
adc
sbbl
cli
aas
shrb
mov
adc
or
pop
and
cmp
cmp
imul
and
mov
pusha
sub
cmp
jmp
mov
mov
and
add
adcb
fisttpll
lods
sub
arpl
and
mov
xchg
dec
pop
mov
orb
push
pop
push
call
imul
sbb
test
test
sbb
dec
mov
push
lret
cwtl
out
push
test
or
sbb
xchg
je
es
movsb
dec
cmc
mull
sahf
xchg
imul
sti
dec
and
sbb
rcrb
fisubrl
mov
es
aad
lret
sti
shlb
pop
inc
leave
fistps
das
sarb
push
push
push
cmpl
mov
ja
fdivrp
cmp
shlb
testl
lock
ss
lods
lret
rcll
sbb
into
jl
sub
push
cli
push
push
add
lahf
xchg
lods
fbld
addl
dec
lock
dec
bound
inc
int
xchg
jno
enter
or
ffreep
hlt
or
dec
xor
hlt
bound
ffree
fwait
subb
jl
xchg
fildl
test
jbe
popa
div
ljmp
cli
push
icebp
cmpsl
mov
pushf
cmp
shrb
int
clc
enter
enter
into
sbb
mov
cmp
orb
outsb
jns
sbb
jge
js
push
xchg
sub
movsb
es
pop
hlt
push
xor
lods
adc
inc
adc
xchg
ja
es
in
xchg
cli
js
loope
icebp
enter
lods
cmc
sbb
bound
int3
faddl
and
icebp
jae
or
popa
enter
ljmp
push
jg
into
push
js
dec
pusha
jl
es
cmpsl
notl
cs
and
mov
cli
mov
inc
sub
jmp
lret
push
jp
inc
outsb
test
xchg
ret
imul
gs
and
enter
or
in
test
mov
mov
push
and
adc
nop
and
dec
test
dec
cltd
addl
xchg
psubusw
cmp
mov
jnp
mov
hlt
jbe
xchg
pop
shrb
popf
adc
mov
mov
fs
aam
cmpsb
das
call
mov
sbb
mov
push
inc
and
aad
jb
lea
gs
sub
push
mov
sti
pop
les
lret
movsb
sub
mov
jne
sbb
xchg
cmp
pop
pop
mov
add
fdivrl
dec
fmuls
roll
push
xchg
scas
xchg
hlt
mov
pop
xor
mov
in
sti
pop
push
imul
sbb
xor
icebp
push
loopne
mov
pop
pop
xor
cld
in
xchg
test
xchg
repz
and
inc
pop
inc
out
shl
pop
jl
jnp
sub
cmpsl
cltd
fmuls
push
loopne
mov
and
jne
push
mov
cltd
shrl
or
movsb
inc
xchg
or
add
or
jle
dec
hlt
mov
in
sahf
adc
jmp
in
sbb
mov
aad
cwtl
lods
adc
es
xlat
adc
les
sub
pop
adc
adcb
hlt
inc
out
jnp
ffreep
jl
das
pop
mov
mov
inc
fdivrs
movsb
ret
pop
movsl
ljmp
dec
dec
test
idivb
mov
stc
or
fwait
xor
js
pop
stos
push
mov
mov
ss
out
fs
sbb
pop
enterw
negl
mov
adcl
or
lock
test
sbb
cld
cmp
or
stos
xor
ret
lahf
dec
fsts
jg
cs
pusha
jecxz
mov
testl
shlb
pop
cli
in
mov
push
in
lock
sub
and
fimull
and
push
push
pop
movsb
mov
dec
sub
and
mov
push
pop
in
push
aas
repnz
xchg
adc
popf
dec
push
xor
les
add
hlt
scas
lock
fmull
pushf
and
aad
sub
fistl
mov
cmc
push
pop
popa
push
lea
mov
jl
adc
jle
mov
into
add
mov
dec
pop
in
repz
sub
inc
popa
test
inc
xchg
and
loopne
mov
jle
add
orl
push
sub
mov
pop
loopne
inc
aam
pop
push
scas
jbe
mov
insb
lret
jo
mov
pop
mov
xchg
js
fs
inc
mov
sub
sarl
cmp
fcoms
jne
sbb
fimuls
inc
add
pop
mov
shll
adc
dec
iret
rcr
jo
sub
fmuls
sbb
in
rcrb
dec
pop
test
addl
cmp
insl
shll
movsl
mov
repnz
loop
std
aam
jnp
js
xlat
or
jb
scas
jmp
mov
dec
cmp
popf
xchg
mov
orl
jno
mov
sub
jp
xchg
addr16
lcall
pop
push
ficompl
jmp
les
imul
jo
cltd
add
jmp
xchg
jb
inc
rorb
dec
icebp
mov
mov
adc
xor
sub
insl
pop
gs
cmpsb
mov
lods
es
fadds
pop
jae
ret
lret
loop
fsubrl
jmp
cmc
and
jle
test
jl
and
sbb
mov
xchg
mov
inc
xchg
arpl
adc
push
push
fwait
mov
stos
mov
iret
fadds
cmp
push
push
inc
dec
xchg
hlt
cwtl
inc
sbb
enter
orl
mov
xchg
and
cmpsl
fldcw
pop
inc
sub
pop
push
mov
imul
out
add
mov
in
jne
sbb
test
or
cs
sbb
incb
or
out
dec
mov
xorb
and
dec
std
daa
dec
cli
gs
fiaddl
mov
or
stos
repz
mov
cmp
sub
fdivrs
lods
into
imul
cmp
xor
push
inc
dec
fwait
es
push
mov
inc
loopne
jne
mov
sahf
mov
scas
or
and
sbb
out
pop
jno
repz
jp
mov
mov
aad
pusha
mov
xor
ret
gs
inc
mov
push
adc
dec
mov
aas
popf
pop
xchg
xor
xlat
aas
push
jmp
xorb
push
add
movl
xorb
jbe
sub
es
loopne
jne,pn
pushf
ficoml
jno
es
sahf
adc
inc
cmp
repnz
je
mov
sbb
sar
imul
pop
mov
pop
jmp
add
shrl
fsubrs
sbb
arpl
hlt
je
fwait
jno
sub
xchg
xor
les
mov
add
shll
movsb
jecxz
add
jo
stc
test
jo
hlt
inc
loope
or
xchg
push
rolb
jecxz
call
mov
jbe
mov
jmp
ret
sti
push
cmp
cmp
ror
into
xor
push
shl
mov
add
jne
xor
mov
sbb
xchg
sbb
inc
aam
push
iret
xor
push
dec
aas
repz
jl
notl
or
sbb
roll
jo
sub
adc
pop
mov
pop
jbe
repz
mov
ret
movb
ror
cmpsl
jge
mov
jmp
mov
or
push
rclb
mov
or
sub
xor
loop
sbb
imul
xchg
out
loopne
mov
inc
sahf
addr16
fcompl
add
inc
xor
nop
shl
mov
pop
and
mov
or
pop
js
ret
xchg
fbld
repnz
test
cld
orl
jmp
push
in
fs
sbbl
mov
push
cmpsb
cwtl
aad
roll
fimull
cmp
mov
pop
sub
lahf
add
cmp
fdivrl
loope
ja
push
into
push
inc
sbb
movsl
shll
ljmp
xor
das
pop
jg
and
test
pusha
pusha
in
mov
or
mov
mov
jg
or
dec
stos
add
pop
push
lea
outsl
repz
lods
dec
test
pop
rep
sub
sahf
jecxz
jne
xor
les
mov
add
sbb
or
pop
icebp
repnz
fisubs
test
mov
inc
std
jecxz
lods
cmp
inc
rorb
enter
cmpsl
outsl
cwtl
movsb
lea
loop
lods
mov
pusha
fstl
movsl
mov
decb
inc
push
hlt
and
dec
lods
mov
pushf
push
cmp
mov
jecxz
dec
cltd
xchg
rol
xor
adc
ss
rcrb
rcll
inc
pushf
sbb
sub
lds
cwtl
jge
sub
lcall
adc
and
push
dec
push
adc
imul
push
ljmp
leave
jecxz
mov
add
lret
xor
pop
jo
mov
lock
sbb
int3
pop
cmp
pop
jmp
adc
shrb
and
js
sti
xchg
xchg
pop
inc
pushf
inc
dec
das
gs
inc
movsb
test
sub
scas
sbb
out
jmp
scas
and
sub
rcrl
cmp
pop
stos
mov
push
sub
fwait
pop
mov
mov
mov
subl
jecxz
enter
push
inc
nop
dec
mov
xchg
mov
jg
dec
cwtl
in
hlt
fwait
push
scas
into
add
js
jno
xor
jnp
inc
xchg
xor
adc
jne
dec
leave
push
int3
cwtl
call
xchg
push
and
mov
mov
movsb
inc
out
cmp
dec
mov
xor
mov
ja
or
fcmovu
mov
add
mov
or
icebp
ljmp
xlat
and
vmovaps
add
xor
add
pop
je
mov
add
mov
out
scas
hlt
or
scas
xchg
or
repz
cmp
jecxz
or
jle
jmp
push
jl
add
call
mov
add
jb
sub
addr16
cwtl
jp
ret
rcr
mov
sahf
mov
nop
enter
outsl
push
or
lods
js
fldcw
inc
sub
inc
push
mov
pusha
adc
cltd
stos
inc
mov
jmp
pusha
lret
push
jns
imul
mov
fstpt
iret
test
mov
adc
lcall
add
add
jae
out
dec
out
das
cmp
pop
push
rcr
mov
xchg
inc
mov
jg
ljmp
lods
rcll
mov
cli
cmpl
mov
pusha
mov
jne
fcomp
movsl
and
pop
ja
loop
jg
mov
fdivl
leave
mov
imul
jle
mov
add
mov
nopl
mov
iret
hlt
xor
xchg
jne
jae
jnp
or
mov
mov
fldenv
adc
scas
add
leave
xor
cmp
mov
gs
adc
mov
mov
adc
xor
xchg
inc
lcall
mov
loop
lods
mov
popf
ror
hlt
inc
in
add
jae
lods
lock
jg
imul
sub
sbb
out
loopne
hlt
mov
into
and
mov
jnp
and
dec
push
sbb
jb
adcb
jae
les
pop
and
ljmp
call
lods
int3
fsubrl
sub
jmp
int3
lret
dec
cwtl
mov
call
js
push
inc
lock
and
mov
sub
xchg
fldl
and
xchg
and
arpl
popl
out
add
out
xlat
movsl
dec
loop
fucomip
sub
cmpb
inc
adc
cmp
dec
xchg
adc
sbb
test
sbb
pop
aam
ret
or
cmpl
sbb
shrl
dec
mov
jl
lods
int3
in
lea
push
aas
push
jno
push
jbe
arpl
leave
sbb
lock
jle
jp
cmp
inc
xchg
inc
add
les
minps
rorb
add
xchg
outsb
ljmp
or
not
je
enter
fadd
fcomip
cltd
mov
mov
jne
movsl
popa
jae
lea
clc
popf
cmpsl
out
rorb
and
inc
pusha
or
sub
mov
jne
xlat
add
fs
cmpsl
inc
jns
mov
stos
adc
dec
push
out
sbb
sbb
test
popa
cmc
sbb
hlt
cmc
xchg
ficompl
test
movsl
pop
or
fsubs
push
loop
sbbb
or
adc
ljmp
cmp
and
xchg
adc
repnz
or
pop
or
rcrb
sti
fstl
add
shlb
xchg
iret
xor
adc
dec
int
out
xchg
pusha
lcall
data16
in
incl
dec
int
imul
mov
sub
mov
inc
data16
repnz
xor
cmpsl
faddp
inc
mov
cmp
jp
mov
out
mov
or
adc
aam
jns
xor
and
xor
xchg
push
mov
fs
pop
rclb
orl
push
sub
fwait
adc
add
inc
add
mov
pop
inc
movsl
xchg
dec
or
jecxz
xchg
or
mov
leave
mov
pop
push
xchg
pop
mov
mulb
mov
out
jb
fistpl
pop
mov
out
or
lods
and
cmp
data16
push
inc
into
sub
xchg
ret
inc
aad
lret
andb
mov
dec
push
mov
mov
cmp
sub
add
dec
mov
ljmp
or
push
fdivs
adc
das
pop
and
cltd
bound
or
aas
rcll
out
mov
xor
or
xchg
xchg
jg
sbb
cmpsb
sub
popl
adc
int
call
ret
int3
jge
cmp
mov
hlt
fstps
inc
ljmp
sub
mov
pop
push
jp
add
jle
or
add
int3
mov
dec
push
xchg
push
sbbl
adc
insl
inc
cmp
out
xchg
rcll
mov
xor
cmpl
xor
cs
ljmp
inc
rcll
sub
sub
xor
mov
fnstenv
sahf
mov
dec
in
sub
hlt
inc
shlb
mov
ja
repnz
xlat
cmp
add
add
cld
adc
mov
movsb
jecxz
jg
addb
bnd
xor
mov
or
fildl
jle
fistl
xor
mov
stc
sbb
mov
fbld
hlt
mov
dec
mov
mov
push
sbb
push
imul
mov
dec
cmp
jp
jge
cltd
aas
movb
and
subb
jmp
pop
or
add
pop
mov
push
xchg
shlb
mov
orb
int3
fmuls
imul
push
lods
hlt
subl
je
mov
xchg
sub
adcb
jnp
and
inc
mov
xchg
sbb
cwtl
inc
into
hlt
fsubl
inc
push
sbb
pop
jbe
sub
mov
inc
mov
mov
jns
movsl
int3
pop
xchg
mov
sub
adc
lods
fmuls
or
call
lock
xchg
mov
aaa
stc
adc
flds
fs
or
rcrl
sub
mov
pushf
out
fwait
cwtl
enter
mov
mov
rcll
movsb
js
jne
mov
and
fistps
mov
and
imul
cmp
xor
andl
popa
gs
stc
lods
aad
imul
xchg
cmpb
lret
xchg
ret
xchg
out
test
xchg
jne
dec
push
fsubs
mov
sub
div
mov
mov
lods
adc
mov
xchg
leave
clc
mov
nop
push
mov
mov
sub
and
adc
jl
cmp
mov
sahf
push
int3
in
imul
xor
stos
out
scas
movsb
sbb
mov
in
cmpsl
ret
add
popf
cmpsl
jne
or
mov
mov
call
test
adc
and
pop
push
sub
mov
dec
mov
fists
adc
inc
dec
push
insl
movl
pop
cmp
enter
frstor
cmp
pop
push
dec
xor
aam
and
inc
add
cmp
jbe
popf
outsl
cmp
and
jne
adc
dec
mov
gs
andl
cltd
sbbl
lods
cmc
insb
add
cltd
mov
stos
stc
je
jb
lock
adc
loopne
or
mull
mov
sub
pop
adcb
mov
enter
ss
sub
jne
cmc
add
or
mov
iret
movsl
pop
xchg
push
pop
sub
pop
jmp
jb
add
push
and
and
or
imul
xor
loope
outsl
add
loope
add
sbb
lods
push
mov
jp
pop
pop
pop
dec
mov
out
xchg
xor
out
lods
clc
add
fisubrl
cmp
cmpb
fildll
adc
add
xchg
mov
sbb
test
es
inc
mov
adc
rolb
stos
cmp
inc
mov
or
fnstcw
adc
push
call
push
pop
fdiv
mov
sub
or
outsl
xor
mov
movsb
cltd
cmp
stos
mov
cmpsb
mov
clc
pop
es
lcall
mov
mov
orl
loope
pop
pusha
hlt
or
mov
rcrb
fxch
push
cmpb
mov
das
cmp
cld
insb
cs
mov
loope
push
hlt
pop
inc
test
out
push
mov
mov
cld
sbb
loop
hlt
test
movsb
xchg
test
pop
int3
jo
sub
xchg
add
push
dec
or
incl
int3
sbb
hlt
jge
xchg
addb
adc
mov
stos
pop
dec
das
push
xorl
adc
nop
sti
jo
test
loope
shlb
test
mov
pop
adc
insb
into
and
lahf
and
orb
insl
scas
pop
dec
int3
adc
pop
cmp
sub
cmp
fsin
dec
cmpsl
addr16
out
adc
mov
rorb
add
or
mov
mov
push
push
xchg
cmpsl
hlt
pop
inc
push
jg
leave
aam
cmp
into
sub
sub
mov
add
hlt
push
es
in
inc
cmp
scas
add
jns
mov
mov
inc
fildl
jne
pop
push
test
pushf
push
pusha
shll
xor
sub
imul
or
arpl
into
mov
les
cli
mov
xchg
out
outsb
iret
pop
subl
mov
cmc
pop
cmpb
inc
jge
cmpsb
adc
mov
stos
jp
aad
xchg
stos
popf
sub
cltd
lods
cmpsl
imul
in
les
jnp
mov
repz
test
mov
ror
nop
xchg
jg
sbb
jne
rcrb
in
adc
jae
xor
hlt
fiadds
fnstsw
mov
jne
test
icebp
jmp
add
jle
jns
sub
push
mov
dec
je
mov
dec
sbb
out
jns
mov
movsb
mov
adc
mov
or
pop
arpl
adcl
xor
in
mov
dec
lret
in
stos
xchg
inc
jo
mov
enter
ret
sbb
and
add
xor
xorl
cltd
push
cltd
cli
mov
adc
clc
pop
mov
inc
lods
pusha
pushf
arpl
movsb
jo
push
stos
xchg
pushf
jg
jne
insl
xchg
imul
jge
dec
sub
mov
fst
daa
cmp
jmp
mov
into
and
xchg
cmpsl
cwtl
push
mov
mov
addr16
mov
jg
pop
xor
cmpsb
dec
daa
sub
loope
mov
ret
jne
add
inc
push
aaa
in
push
ret
addb
rclb
push
add
sbb
jnp
add
mov
sbb
pop
leave
cmp
xchg
stos
fmulp
inc
pushf
mov
rcrb
testb
mov
loope
and
pop
popf
and
xchg
mov
sub
enter
das
push
inc
fidivrs
gs
jmp
mov
cmp
arpl
jle
ret
fadds
dec
xchg
rorb
jge
popf
ret
mov
mov
or
inc
xchg
das
mov
xor
fs
adcl
arpl
shll
loopne
add
pop
inc
les
ds
mov
aad
js
sbb
sti
icebp
clc
mov
popf
jns,pn
gs
cltd
cmp
and
mov
pusha
mov
out
pop
sub
ja
repnz
icebp
sub
mov
fs
xchg
mov
jg
hlt
test
call
mov
mov
fs
lahf
iret
pop
rcrb
les
add
or
scas
dec
mov
lret
test
subl
or
sub
jnp,pt
stos
notl
scas
add
xchg
out
mov
jne
pop
jae
pop
jne
in
shll
mov
stos
push
xchg
stos
sub
ret
test
cwtl
push
popf
std
shl
jge
jmp
cmpl
xor
dec
orb
jo
add
dec
xlat
add
push
xorb
cltd
cli
repz
cld
add
leave
mov
xor
int3
add
insl
or
mov
dec
jnp
std
jne
adc
subb
sub
aam
push
mov
outsb
idiv
int3
test
sti
add
pushf
mov
adcl
mov
add
inc
leave
test
loop
fiaddl
stc
mov
jne
cmpsb
fnstcw
movsl
getsec
cmpsb
jmp
mov
stc
xchg
movsb
push
iret
cmp
push
sbb
lret
push
test
and
add
inc
cmpsb
inc
pop
mov
nop
scas
out
ficoml
push
jmp
addr16
mov
xchg
xor
jne
and
cmp
mov
xchg
cmpsb
pop
pop
mov
sub
push
and
mov
int
cmp
fsubrl
movsb
mov
xchg
mov
lcall
orl
adc
dec
push
cld
push
mov
sbb
loopne
popf
hlt
and
out
fisttpll
inc
sub
orb
mov
scas
fisubrl
ret
cmc
pop
gs
daa
inc
pop
pop
mov
pcmpeqw
jg
shrl
inc
and
push
pop
popa
stos
mov
xor
add
nop
mov
test
nop
cmp
xor
mov
adc
sub
dec
cmc
lret
rcrl
push
call
add
adc
lods
xchg
mov
sahf
lcall
push
sub
jne
add
fcoms
lahf
pop
test
lcall
xor
jae
cmpsl
dec
push
pop
rcrl
inc
repz
insb
mov
js
jp
fiaddl
gs
and
push
and
hlt
push
leave
or
jbe
popa
inc
jmp
adc
inc
jnp
mov
dec
gs
rolb
addb
in
mov
mov
fildll
add
or
mov
sbb
inc
mov
xor
dec
rcrl
fidivrs
push
pop
adc
fmul
stos
jne
jmp
add
repnz
dec
add
das
xchg
outsb
mov
push
jb,pn
std
xor
dec
mov
adc
enter
inc
inc
shll
insl
pop
nop
mov
int3
mov
clc
add
jne
movsl
jne
pop
mov
pop
test
es
movsl
daa
xchg
scas
jnp
movsb
mov
shll
xor
mov
mov
hlt
pop
scas
loopne
lahf
push
sub
mov
xchg
mov
insb
hlt
sub
jbe
dec
mov
lret
and
jle
insl
movsb
adc
mov
mov
popf
dec
mov
out
mov
repnz
and
pop
add
ja
dec
loopne
xor
mov
lret
fisubs
aaa
or
dec
lock
fs
iret
xchg
les
xchg
test
and
inc
mov
adc
cld
xchg
xorb
gs
jl
xor
xor
and
popa
out
mov
rolb
ror
sti
jmp
enter
mov
push
xchg
inc
sbb
popf
flds
push
mov
mov
scas
call
stos
jne
movsl
dec
addb
push
jg
adc
fstl
xchg
testl
lods
jmp
lcall
repnz
push
cmp
in
fidivl
imul
xor
rol
mov
mov
add
mov
iret
ror
mov
mov
cmpsl
adcl
push
xor
loope
jmp
mov
movsl
push
add
push
xchg
and
jge
push
fsts
in
lds
mov
out
in
enter
fisttpll
push
fadds
loope
mov
mov
les
jne
push
jno
cltd
call
mov
jmp
mov
js
rcll
dec
pop
pop
call
or
pusha
gs
ss
push
sbb
xchg
ja
fwait
add
push
test
enter
inc
push
out
mov
lret
push
test
xorb
loope
dec
js
cmp
pop
clc
andb
push
inc
cmpsl
cld
adc
ror
lea
addr16
cmp
pop
mov
roll
popa
rorl
repz
stos
jecxz
fs
and
mov
aam
popa
aad
insb
inc
jecxz
mov
cld
ret
xchg
shll
fmull
ret
mov
arpl
jmp
clc
cmpsb
dec
shl
hlt
pop
lods
sar
adc
mov
sub
fists
add
popa
sub
dec
xor
leave
inc
xor
test
jne
mov
mov
in
jmp
and
jmp
leave
ret
xchg
pop
dec
cmpsl
inc
mov
add
cs
sarb
int
aas
ljmp
roll
dec
push
test
lea
jne
cwtl
or
movsl
or
in
negl
movsb
adcb
hlt
insl
pop
cs
lods
mov
add
int
mov
test
push
mov
enter
repnz
push
xorb
mov
test
out
or
mov
xor
add
sbb
das
in
rcrb
jecxz
sbb
test
cli
jae
enter
pop
mov
scas
sarb
and
add
cmpsb
in
fldl
iret
pop
scas
into
push
repz
hlt
cmp
push
rorl
mov
fstpl
dec
lock
pusha
loop
movsb
loope
addl
add
mov
test
fldl
hlt
xchg
loop
adc
add
js
or
mov
xchg
ficoms
mov
sub
loop
jge
jo
mov
jl
xor
pop
lock
mull
jbe
xor
mov
aam
mov
icebp
movsl
add
jne
lret
dec
sahf
sub
int3
jns
stc
lahf
mov
pop
inc
pop
xor
xchg
jbe
movsl
aad
push
fiaddl
in
mov
xchg
inc
shlb
adc
fisubl
pop
lcall
cmc
inc
ucomiss
lea
lods
cld
test
cmp
push
cltd
push
sahf
cmpsb
pop
adc
fstpt
mov
adc
out
jbe
mov
iret
mov
popa
in
subb
pop
xchg
xchg
pusha
add
adc
jecxz
fstps
movsl
jno
inc
add
test
mov
cmc
dec
jo
push
xchg
inc
mov
or
fisttps
add
sub
lcall
mov
hlt
and
pusha
repz
sbb
out
addl
lods
insb
jae
adc
inc
ret
fildl
test
enter
jne
xchg
adc
ljmp
cld
pop
mov
cmpsb
outsl
cmp
push
dec
out
jnp
xor
push
loopne
cld
roll
mov
sub
or
mov
leave
jl
jnp
ficomps
ljmp
cmp
pop
xor
mov
sbb
mov
inc
xchg
nop
cmp
test
repnz
sarl
into
popf
mov
inc
jb
pusha
xorl
mov
clc
sbb
mov
pop
mov
sub
fildl
or
xchg
incb
pop
jne
adc
inc
mov
push
hlt
inc
nop
cmp
cli
mov
jle
lcall
cmp
jle
loopne
fdivr
add
testb
or
int3
sbb
adc
or
cmpsl
jbe
mov
pop
push
shll
add
sub
jne
lock
or
outsl
or
push
mov
jmp
aam
mov
scas
xchg
sarb
cmp
mov
mov
push
cmp
cwtl
cld
push
int3
movsb
inc
jle
push
add
lcall
addl
xchg
add
sar
popa
xchg
jnp
mov
in
and
into
testl
inc
arpl
std
icebp
jbe
jle
sbbl
addl
adc
or
daa
add
outsb
movsl
cmpb
xor
jle
stos
mov
mov
sub
hlt
scas
in
in
xchg
cmp
fisttpl
add
addr16
in
xor
cli
dec
or
repnz
xor
inc
jl
add
sbb
nop
mov
aas
leave
lock
cmp
icebp
dec
cwtl
inc
lds
cmpsb
loopne
mov
dec
ret
out
jae
repnz
sahf
repnz
in
mov
arpl
push
rcrb
aam
push
push
outsl
sub
outsw
pusha
ret
sbb
aas
or
pop
jae
mov
shlb
jnp
hlt
arpl
loop
cs
mov
jne
cli
add
mov
aam
push
jne
loope
pop
dec
mov
mov
cmp
jo
pop
cwtl
gs
mov
sahf
mov
test
shlb
mov
dec
je
cmp
pushf
jae
pop
xchg
mov
enter
fstpt
push
test
mov
mov
imul
sub
repnz
push
adc
inc
mov
data16
mov
jo
or
pop
jne
loopne
hlt
dec
lods
xor
push
mov
jbe
pop
imul
sub
out
popa
bound
shll
add
mov
push
and
addr16
outsl
adc
scas
out
pop
outsb
jne
ret
push
sar
mov
push
cltd
pop
adc
cmpsb
out
push
jne
xor
leave
idivl
mov
jne
mov
xor
int3
bound
jg
add
int
icebp
sbb
or
push
pop
ret
scas
addl
and
data16
outsl
in
lret
arpl
shrl
inc
add
ss
ljmp
ret
lea
adc
mov
loop
call
sub
mov
hlt
jae
adc
jne
dec
filds
push
mov
loopne
sbb
xorl
pop
xchg
scas
mov
pop
call
xor
into
fcomps
std
xchg
stos
aaa
lods
repnz
add
test
addr16
mov
subb
fiaddl
and
int3
hlt
icebp
sarb
jmp
add
adc
call
add
dec
adc
aas
adc
clc
adc
sub
inc
jge
clc
in
jne
cmc
shrb
sahf
jnp
cwtl
adc
mov
lods
inc
shl
outsl
outsb
not
sub
sub
aaa
inc
mov
pop
cmp
xchg
sub
ss
out
std
iret
dec
add
mov
std
push
dec
xorl
xchg
xor
rcrb
fwait
insl
mov
enter
push
imul
popl
scas
hlt
xchg
xor
jo
std
inc
mov
cmp
sbb
sbb
push
adc
das
mov
loop
out
and
nop
fdivr
xchg
add
pop
ss
cli
push
dec
stos
aas
inc
pop
aad
push
mov
cwtl
fistpll
mov
mul
movsb
popf
ret
das
add
push
gs
pop
nop
ret
add
hlt
fimuls
cwtl
adc
ljmp
div
jne
pop
mov
stc
mov
repnz
add
mov
xchg
pop
in
mov
or
enter
mov
stos
mov
adc
or
loope
test
mov
jg
dec
dec
sbb
fldl
cmpsl
fadds
into
and
pusha
mov
test
cmpsl
cwtl
aad
movsb
xchg
add
and
clc
int
add
xchg
or
jge
xorl
adc
push
roll
mov
adc
jns
out
loope
pop
cmpsb
cmpsb
push
dec
push
fisubrl
into
data16
sahf
sbb
repz
xor
fiadds
test
pop
mov
inc
pop
popa
fdivrl
test
sbb
jp
shlb
fildll
inc
dec
jl
fisttpl
mov
loopne
cmp
sbb
sub
sbbb
call
sub
inc
pop
jne
aam
push
stc
fwait
nop
cmpsb
pop
shrb
mov
jmp
sub
aas
sbbb
jne
ljmp
fsubrp
imul
js
in
out
hlt
repnz
lahf
or
mov
lods
pop
and
adc
jne
cmp
repnz
stc
call
mov
mov
out
jne
mov
jle
fsubr
mov
leave
adc
mov
dec
in
addl
lods
js
fiadds
xor
loope
mov
jae
movsl
jno
into
jns
and
insb
leave
push
jmp
ss
cmp
push
jecxz
push
push
insb
in
hlt
cmc
mov
test
jp
pop
fidivl
ret
fdivl
shl
subb
dec
hlt
incb
mov
sbb
adc
dec
add
mov
lahf
enter
fbld
push
push
hlt
data16
imul
pop
nop
or
fists
scas
push
pop
sub
jbe
repnz
sbb
insb
inc
movsl
rclb
rcr
bound
das
cmp
mov
sub
xchg
xorl
push
scas
test
cwtl
outsl
hlt
std
or
pop
rcrl
lock
mov
stc
push
add
xchg
jnp
push
hlt
push
pushf
cmpb
mov
lahf
movsl
pop
rorl
mov
sahf
aad
iret
out
sub
imul
lcall
sbbl
inc
mov
fcomps
fnsave
je
insl
push
mov
scas
jl
divl
insb
clc
pop
fs
mov
push
stos
daa
insb
daa
add
mov
mov
pop
jbe
pop
es
push
or
aas
insl
jb
out
inc
jge
in
mov
xchg
lea
jle
push
outsl
sub
nop
mov
adcl
inc
and
inc
clc
sub
mov
es
add
xchg
fs
mov
fldcw
adc
dec
imul
arpl
dec
push
mov
pushf
cmp
mov
movsl
in
test
fdivrl
inc
xchg
scas
sub
scas
hlt
std
repnz
repnz
hlt
stc
jno
subl
ja
add
jl
scas
rorl
pusha
addr16
xor
push
test
push
pop
cmp
sahf
pop
lods
js
fdivs
pop
sub
adc
push
dec
je
mov
cmpsl
leave
xchg
movsb
mov
int3
addl
repz
mov
fcomp
fisttpll
add
pop
cmc
imul
cmp
hlt
inc
int3
rcll
or
addl
pushf
gs
subb
cltd
cwtl
sub
mov
loop
pop
or
pop
jae
fistpll
adc
std
mov
pop
sub
nop
jg
pop
mov
sahf
dec
mov
icebp
push
push
cmc
jne
popf
add
outsb
mov
or
mov
inc
andb
and
sub
scas
jmp
aam
dec
adc
xor
aad
ret
dec
add
sub
push
mov
xchg
inc
adc
aas
pop
push
shlb
outsl
xor
aam
inc
mov
sub
mov
shlb
incb
jnp
xor
imul
jl
pop
jge
xchg
dec
sbb
mov
les
lods
movsb
in
sub
stos
movsb
aad
movsb
fiaddl
insl
cli
sbb
outsl
fwait
inc
pop
outsl
mov
mov
idivl
mov
fsubrl
mov
push
gs
sub
jmp
xchg
iret
loope
adc
repnz
lcall
cli
xor
int3
mov
dec
mov
mov
or
cmp
pop
jnp
neg
mov
popl
sub
add
or
mov
aas
test
enter
popf
aad
mov
nop
rcll
xlat
jl
xor
xor
sbb
dec
mov
inc
test
ljmp
arpl
add
incb
pop
test
or
cli
hlt
and
push
xchg
dec
mov
les
fmuls
fisttpll
fisttpl
fs
fisubrs
mov
sbbb
test
fwait
dec
test
xchg
mov
xor
and
inc
push
inc
insl
mov
jne
xlat
add
lds
pop
sarl
jne
loope
lods
adcl
adc
pushf
aad
hlt
ret
mov
cmp
push
inc
xlat
cmp
jmp
cmp
out
ljmp
fisttps
aas
hlt
lret
pop
xorb
out
out
adc
mov
add
in
xchg
pop
push
hlt
xor
inc
insb
pusha
xor
js
xchg
test
js
hlt
cwtl
add
inc
or
or
pop
pop
or
or
jmp
mov
mov
mov
mov
sbb
popa
outsl
adcl
jo
cwtl
jmp
and
dec
add
mov
cld
pop
icebp
xchg
movsl
popa
lcall
mov
fstpl
mov
test
adc
mov
fcoms
or
push
lret
mov
mov
aad
jge
sbb
mov
inc
adc
jmp
in
cmp
adcb
xchg
rcrl
lahf
shlb
test
mov
push
xor
pop
sub
popa
enter
sbb
ss
cs
dec
scas
aas
mov
pusha
lock
mov
add
mov
clc
sahf
fcmovbe
mov
mov
dec
or
cld
ljmp
aas
addl
push
jg
in
inc
sbb
decb
bound
adc
sti
std
imul
mov
imul
jp
pop
sti
fldenv
cs
imul
pusha
cmp
xchg
or
lea
mov
shlb
and
into
mov
push
pop
mov
jmp
xor
mov
jbe
adc
not
ret
or
inc
xor
and
dec
hlt
loope
jo
pop
or
cmp
jmp
pop
test
movsl
cmc
fwait
ljmp
fsubp
shlb
or
inc
dec
ret
lret
hlt
sub
xchg
in
stos
ja
cmp
stos
jae
ds
sub
jne
push
in
lcall
les
test
adc
pop
mov
push
push
cmp
imul
mov
imul
sbb
add
aad
enterw
mov
shl
push
orb
hlt
xor
cltd
jmp
or
pop
arpl
stc
push
das
es
out
mov
mull
clc
add
imul
cmp
add
shll
push
stc
mov
mov
pop
mov
out
xorb
sub
dec
hlt
cmp
lock
ja
sarl
imul
popf
in
jno
mov
mov
minps
xchg
mov
inc
je
or
push
scas
into
stos
test
movsb
dec
stos
loop
test
into
xchg
mov
lcall
mov
pop
hlt
inc
push
mov
jecxz
nop
jmp
enter
push
jg
pop
jnp
cmp
jle
xchg
push
inc
xor
sti
inc
repz
fmull
test
arpl
into
pop
mov
notl
jnp
pop
dec
mov
sbb
mov
dec
mov
push
fidivl
mov
cmp
pop
xchg
or
and
addb
jge
mov
dec
pushf
jmp
leave
xor
mov
and
mov
inc
pop
dec
out
repz
nop
or
and
mov
xchg
lock
int3
adc
test
repnz
xchg
fstps
out
add
fwait
cmc
out
adc
imul
mov
les
repnz
lds
push
push
jne
pop
cli
pop
dec
mov
push
loope
fucomip
pop
pop
mov
add
jmp
inc
outsb
and
inc
loop
aam
xorb
or
test
xchg
pop
cmpsl
popl
into
mov
sti
shrb
xorb
jge
in
lret
incb
pop
pushl
mov
jbe
jb
aad
dec
and
mov
pop
mov
cli
fnsave
or
arpl
push
aas
inc
addr16
xchg
and
hlt
sub
and
xchg
insb
xchg
xor
subb
or
std
inc
inc
mov
inc
mov
adc
jne
push
sub
cmpsb
sti
mov
arpl
pop
cmpsl
loope
outsb
daa
mov
xchg
sub
inc
jb
add
xchg
lods
mov
mov
ficomps
or
add
nop
mov
and
sub
sbb
mov
mov
lods
add
rcrb
xorl
iret
rcrl
imul
mov
pop
pop
lds
and
add
dec
in
mov
ds
mov
xchg
out
xchg
fcoml
jne
adcl
insl
xchg
test
lret
xchg
sarb
jo
ljmp
sti
hlt
or
leave
dec
loope
in
rclb
cmc
pop
mov
lock
pop
xchg
clc
lahf
stos
gs
icebp
add
dec
jo
int
icebp
bound
mov
scas
mov
or
pop
in
cld
movsl
sub
inc
aad
ds
sahf
das
in
sbbl
sbbb
cmp
fldpi
movsl
stc
xchg
dec
pop
push
jae
push
aam
imul
dec
cmp
sub
scas
es
mov
adc
pop
mov
nop
into
xor
loopne
dec
jae
sub
xor
pop
roll
jb
repnz
test
in
add
out
dec
sub
lcall
jae
push
cmp
cmpsb
popa
mov
loop
mov
fstl
or
jne
ror
add
jmp
pusha
cs
std
in
mov
sub
pusha
popf
push
sub
fildll
roll
dec
fucomp
mov
cmp
aas
call
cmp
jb
sti
sbb
or
sbb
pop
pop
mov
sub
add
dec
dec
dec
cmp
stos
in
cmp
into
hlt
sub
lods
add
and
test
and
add
pop
cmpsl
jns
pusha
pop
xchg
cwtl
loope
js
mov
sti
sbb
inc
loopne
dec
loopne
es
mov
out
das
or
cmpsl
inc
xor
jne
popa
push
add
push
xor
xor
and
pop
in
cmpsl
negl
adc
sbb
pop
push
adc
mov
cmpsl
pop
clc
dec
mov
mov
pop
pop
test
sub
mov
aam
adc
test
dec
xchg
add
add
mov
mov
jmp
add
rorl
sahf
pop
popf
or
loopne
lcall
idiv
ficoml
or
fstpt
fidivl
and
mov
fdivr
ljmp
leave
nop
and
movsl
jns
sbb
mov
stc
testl
inc
xchg
mov
adc
pop
fldcw
jp
incl
loopne
les
scas
insb
cmpsl
mov
test
mov
pop
add
insb
in
das
std
mov
loopne
dec
bound
dec
push
adc
push
mov
arpl
jge
std
fisubrl
divl
fldt
lods
pushf
pop
insb
data16
out
adc
mov
mov
push
pop
aaa
mov
ficoml
loop
imul
xlat
mov
enter
cs
div
push
inc
addr16
xchg
push
inc
inc
mov
mov
inc
pop
sub
push
dec
in
add
jl
mov
add
jg
loop
das
into
add
sub
xor
pop
dec
faddl
xchg
pop
and
sar
addr16
push
or
decb
popa
ljmp
ja
sub
outsl
lahf
repnz
pop
out
xor
lock
adc
dec
sbbl
xchg
or
cwtl
and
sub
inc
lcall
dec
push
imul
hlt
rcll
push
negb
mov
imul
push
mov
lds
pop
lahf
fisttpll
out
add
adc
movsb
das
push
out
out
sar
cs
hlt
test
sub
fs
push
sti
movsl
adc
sbb
repnz
xor
js
fildll
hlt
mov
xchg
cmpsb
jae
push
xchg
pushf
xchg
icebp
aam
dec
pusha
ret
and
mov
into
mov
mov
add
test
scas
repnz
hlt
or
stc
add
in
pop
adc
imul
scas
mov
jg,pt
dec
jno
into
xchg
into
inc
hlt
sbb
jo
push
jg
push
mov
and
lret
lcall
movsb
gs
jp
loope
push
adcl
mov
rcrb
jb
add
fdivs
xorb
lret
insl
sub
popa
mov
inc
arpl
fwait
dec
imul
ds
mov
sbb
jb
add
dec
cli
adc
ficoms
in
testb
xlat
or
ljmp
hlt
insl
add
dec
add
add
inc
rclb
add
push
and
insl
testl
add
movsl
out
jmp
sub
clc
pop
inc
fldt
dec
xor
pop
add
xor
stc
push
adc
mov
daa
std
addb
jg
les
inc
mov
test
xor
stc
sub
xor
out
fucom
pop
dec
clc
inc
mov
mov
inc
adc
das
out
and
add
sbb
xchg
pop
mov
leave
into
add
test
jne
cmp
xchg
xlat
jne
ret
fldl
lret
xchg
iret
and
pop
push
pop
jmp
mov
jle
mov
sub
mov
add
and
call
cmp
jecxz
das
imul
sbb
aad
jl
hlt
imul
cli
bound
cmp
mov
bt
push
inc
jne
call
add
in
mov
and
imul
clc
enter
pop
or
out
in
push
outsl
xchg
in
or
or
cwtl
add
push
fisubl
add
fisttpl
popa
hlt
mov
in
lcall
pop
fisttps
xchg
aas
in
xchg
lods
adcl
hlt
push
jbe
cmp
fldenv
pop
ja
sub
push
jbe
sbb
mov
stc
inc
hlt
xorl
mov
subl
mov
sbb
add
add
cmpsl
ja
iret
std
or
cmc
sbb
push
xchg
jo
imul
rorb
hlt
sub
xor
jge
out
out
test
in
lret
push
adc
aaa
mov
leave
ret
sbb
pop
in
jnp
add
push
jns
xor
call
shll
ja
lea
and
mov
jmp
inc
test
push
rolb
cmp
cmp
jne
cmp
add
fnstsw
dec
test
mov
jge
cltd
pop
ret
mov
jns
jae
or
incl
push
xchg
enter
dec
add
mov
enter
loop
and
pop
push
sbb
pop
ror
addr16
mov
test
mov
lret
jb
filds
cmp
pusha
sub
jbe
es
mov
pop
and
dec
jp
mov
mov
cld
stos
lret
mov
sub
movsb
dec
mov
cmp
pusha
cwtl
pop
test
imul
pushf
mov
push
pushf
jge
jne
xchg
out
pop
out
mov
bound
repnz
aas
decb
rcr
leave
adc
out
dec
fs
hlt
cs
xchg
lods
loopne
mov
and
fsubrs
sbbl
pop
in
sub
sbb
jnp
cmpsb
leave
push
cmpsb
fdivl
add
xchg
flds
repnz
sahf
inc
pop
nop
test
push
mov
sbb
ds
loope
and
sbb
push
std
adc
in
jg
sahf
jne
cmpsl
cs
das
adc
adc
or
and
xlat
and
cmpsb
push
pop
or
dec
es
mov
cli
movsl
xor
pop
xchg
imul
enter
inc
subb
xchg
pop
jp
insb
mov
mov
or
scas
arpl
xchg
jne
scas
mov
jns
push
jmp
or
lret
in
jbe
fadds
addb
lahf
mov
pop
call
or
cli
std
aam
xchg
inc
jo
hlt
sbb
xchg
mov
dec
xor
dec
jecxz
push
fstpl
popa
add
adc
lahf
add
adc
test
sub
addl
mov
dec
mov
lret
lcall
cmp
repnz
sahf
daa
repnz
fs
cmp
or
jle
adcl
gs
inc
into
cmc
pop
adc
inc
js
aam
inc
sub
cwtl
insl
lods
push
fstpl
cmp
cmp
ja
push
popa
fcoml
mov
mov
mov
adc
dec
jo
dec
jne
ja
pusha
mov
or
cs
fbstp
je
pushf
lret
shll
sbb
push
stos
adc
adc
xchg
adc
es
pop
movsb
scas
sub
test
sahf
cmpsb
dec
out
int
hlt
cmp
jl
or
andb
sbb
ffree
inc
cmpsb
adc
stos
call
test
mov
cmpsw
jbe
adc
loope
sbb
add
dec
pop
mov
lcall
cmp
xor
rcrb
cmp
clc
add
mov
xchg
ja
shrb
sahf
dec
cmp
mov
insb
movsb
xchg
xchg
sub
jne
test
cltd
iret
add
loope
jns
mov
jne
mov
rcll
aad
mov
fldl
stos
int3
cmc
cld
cmp
xchg
and
mov
mov
mov
shr
test
stos
push
enter
jecxz
mov
mov
cmp
or
push
pop
out
cltd
loope
clc
int3
in
sbb
pop
andb
cmp
stc
push
dec
movsb
jbe
popa
xchg
pop
dec
lret
movsl
cltd
in
mov
mov
and
cld
dec
adc
jo
outsb
rcr
inc
add
xchg
xchg
mov
inc
ret
xchg
inc
or
add
out
scas
lods
jne
mov
shll
mov
sub
push
dec
inc
leave
ljmp
lds
mov
mov
adc
jne
jnp
notl
mov
ljmp
mov
add
mov
jg
cwtl
lahf
lods
test
clc
mov
sub
shlb
ret
pusha
add
loope
xlat
sbb
inc
inc
lea
push
add
fmull
je
shlb
ret
pop
stc
es
cmp
sbb
outsb
incl
mov
jecxz
sbb
loopne
pop
out
es
lahf
jb
mov
pop
inc
test
or
insl
jle
cmp
nop
add
jle
xor
sahf
test
std
out
test
cmpsl
sub
xchg
lea
ljmp
mov
loopne
mov
mov
jb
scas
sbb
int3
add
add
idiv
pop
pop
or
movsl
loopne
dec
add
repnz
push
and
cs
loopne
mov
or
daa
rcrb
adc
cli
out
cmpsb
and
test
fsub
adc
xor
lret
cmp
mov
mov
stc
dec
pop
push
addr16
or
out
jns
inc
imul
xor
push
rorb
xchg
scas
push
jne
xor
fisubs
xchg
fbstp
les
jne
jno
jnp
mov
mov
add
ror
test
push
sbbb
inc
pop
nop
cmp
mov
cmpsb
xchg
inc
sub
or
mov
or
jp
neg
arpl
mov
hlt
sbb
or
jne
add
push
mov
mov
stos
cmp
dec
aam
push
das
pusha
stos
push
inc
lods
faddl
and
fildl
jne
pop
out
mov
mov
incl
popa
cmp
push
lods
sbb
mov
add
enter
inc
scas
push
lahf
cmpsl
pop
or
cli
sub
movsl
jge
adc
cmp
pop
add
mov
scas
jne
inc
cli
cmp
push
call
fistps
dec
mov
ds
rclb
imul
adc
cmp
and
jbe
imul
sub
rcll
sbb
imul
cwtl
push
xorb
pusha
mov
sti
ret
pop
es
add
icebp
jmp
dec
xchg
mov
pop
orl
inc
nop
sub
stos
imul
mov
aaa
rcpps
shll
movsb
aas
adc
or
or
or
lret
adc
jecxz
jp
push
push
mov
insb
adc
cmc
stos
repz
push
xor
ret
mov
cwtl
xor
fs
adc
sbb
cmp
mov
add
inc
pusha
dec
out
inc
js
idivl
mov
fxch
sub
mov
mov
pop
out
inc
icebp
or
fwait
out
sub
cltd
cmp
and
push
fstl
cmpsl
incb
ret
xor
lret
xchg
xorl
subl
xchg
cmp
add
mov
adc
xchg
cmp
int3
shrb
iret
hlt
adc
enter
mov
push
inc
adc
dec
fstp
pop
or
pop
cmpsl
std
loop
push
pop
insl
iret
loop
test
pusha
int3
mov
jle
inc
mov
add
mov
or
mov
cmp
add
jns
mov
mov
inc
inc
aad
mov
cli
popa
sbb
mov
pop
sub
inc
pusha
mov
pop
and
pop
sub
cs
movsl
in
pop
leave
mov
or
aas
cmpsl
xor
insl
int3
int3
dec
icebp
addr16
cli
jecxz
outsb
sarl
out
mov
rolb
jne
das
mov
repnz
xchg
mov
jmp
clc
cmp
ret
add
ret
movsl
ffreep
lock
sub
dec
pop
ljmp
add
and
mov
out
call
shrl
xchg
filds
cmc
pop
push
jmp
decb
add
outsb
lock
sbb
adc
stc
or
gs
jmp
xchg
and
fld1
je
adc
push
shl
arpl
sub
addr16
ljmp
cltd
test
jb
ja
cmp
jp
push
cmc
jl
mov
adcl
out
push
cmc
jae
iret
or
xlat
dec
pop
add
lock
in
pop
in
mov
inc
stos
hlt
test
sbb
scas
or
mov
inc
sbb
movsl
gs
mov
aaa
pop
les
out
call
mov
imul
jnp
mov
jg
mov
adc
aad
and
mov
push
fmuls
jne
push
aam
mov
scas
popf
rcrl
and
sbb
sub
movsl
cli
mov
xchg
or
in
xchg
mov
jle
ret
adc
jg
sub
lds
inc
cmp
pusha
push
sbb
or
jo
fcoms
pusha
mov
popf
and
cmp
jmp
pop
mov
mov
add
lea
rorl
push
jecxz
fstl
push
sub
scas
jg
jl
lods
lock
cmpsl
stc
in
inc
xor
test
scas
xor
cmpsb
sti
xchg
or
in
js
sub
jp
add
pusha
ror
add
push
ret
hlt
mov
cmp
ja
mov
pop
mov
mov
add
outsb
lret
push
push
add
inc
sbb
jl
sahf
into
inc
adc
insl
data16
hlt
mov
mov
stos
leave
inc
sahf
stos
lret
pop
popf
jl
lret
mov
add
orb
and
stos
jne
and
scas
add
inc
lret
xlat
sub
fs
stos
jmp
push
test
dec
sub
loope
shrl
mov
rcr
in
push
leave
inc
or
or
add
popf
fisubrs
dec
fstpl
mov
cmpsb
orl
add
lcall
cs
lahf
popa
jge
adc
sbb
cli
fists
andl
xor
les
cld
loopne,pn
fdivl
mov
std
xor
nop
push
shlb
flds
hlt
lock
in
cli
mov
fldt
jp
push
jle
ffree
inc
adc
imul
mov
sbb
outsb
xchg
add
test
aam
cmpl
outsb
or
movsb
ret
dec
repnz
stos
pop
scas
movsb
loop
sbb
nop
inc
insb
inc
dec
jbe
test
movsb
jo
inc
jg
pop
adcl
ja
xorb
sar
enter
mov
xchg
push
xchg
or
push
lods
subb
mov
shll
sub
test
add
outsb
mov
jg
lcall
mul
adc
dec
in
aam
add
fdivl
repnz
mov
rorb
mov
lock
xchg
xchg
fnstsw
and
mov
xor
out
inc
cmp
nop
fcmovbe
mov
xor
dec
mov
out
aaa
in
test
xor
jno
nop
push
mov
mov
int
testl
push
cli
dec
cs
mov
mov
les
xchg
jno
pushf
test
inc
dec
insl
mov
pop
daa
fdiv
inc
push
loope
inc
adc
xor
js
mov
lods
les
inc
mov
andl
cwtl
gs
call
jnp
popf
mov
pop
fistl
add
mov
jmp
push
push
sahf
stos
into
inc
sbb
pop
mov
les
shrl
add
mov
mov
lcall
cld
icebp
cmpb
xlat
jecxz
cmp
test
je
mov
hlt
insl
or
lods
leave
repnz
and
push
fsubl
fisttpll
fdivs
rcll
xor
std
pop
int3
lret
mov
jl
sub
sbb
movsl
ja
enter
add
xor
clc
mov
loop
mov
and
adc
pop
ljmp
sub
sbb
add
push
into
enter
cmpsb
fdivl
repnz
mov
lods
movsl
and
fadds
fdivl
stos
frstor
mov
shll
or
aam
push
xchg
jne
pop
int
lret
mov
mov
or
cld
stos
arpl
ror
std
sub
mov
jns
mov
addr16
and
xchg
shlb
out
xor
fsqrt
add
jb
sbb
pop
addl
cmc
push
mov
pop
pop
lcall
cld
gs
aas
jecxz
iret
das
ret
pop
fdivr
lock
ficompl
add
inc
mov
xor
push
in
test
mov
push
in
push
testb
ret
mov
cld
rclb
es
pop
int
add
xchg
pop
sbb
or
popa
push
adc
out
lret
popa
jle
out
fucom
lret
dec
inc
lock
sbb
ds
add
adc
outsb
loop
das
sub
xlat
je
loopne
std
adc
xchg
inc
push
cmovnp
sbb
mov
jle
lret
cmp
add
and
push
sbb
sbb
pop
rcrl
out
leave
shld
jp
lahf
into
ret
and
jne
push
outsl
jo
les
mull
mov
ljmp
daa
test
pop
add
push
shrl
test
movsb
xchg
and
inc
mov
mov
hlt
pop
push
jmp
add
pop
add
out
dec
fldt
loop
jbe
icebp
xlat
cwtl
pop
pop
incb
dec
cmp
imul
les
adc
rcrb
cwtl
lods
addb
hlt
cmp
inc
pop
xlat
mov
arpl
adc
fsubrs
arpl
push
clc
inc
ja
mulb
cmp
inc
leave
testb
sub
ror
xor
andb
mov
aas
inc
jmp
enter
dec
lods
sbb
add
add
and
xchg
ret
sub
xchg
fcoms
inc
fnstcw
pop
jp
push
ret
pop
mov
repz
test
cmp
jbe
outsl
dec
adc
inc
mov
mov
ret
or
or
sti
mov
or
ljmp
movsb
adc
cmpl
or
inc
mov
mov
pop
add
arpl
fistpll
enter
mov
xchg
cwtl
stc
decb
popa
sbbl
pop
out
sarb
inc
push
inc
hlt
imul
sub
xchg
roll
mov
fcomps
cmpsb
cmp
mov
sub
or
dec
jp
xchg
mov
movsl
or
in
sahf
pusha
mov
or
cmp
subl
loope
int3
cmp
out
push
push
gs
into
and
leave
and
add
pop
jnp
test
cs
sbb
jns
pop
inc
dec
clc
xor
mov
mov
fisttpll
insl
pop
shll
jbe
or
push
cmp
fisttpl
pop
adcl
sub
xchg
fisttpll
cli
and
sub
lea
add
inc
ds
pop
mov
das
fnsave
inc
jne
popf
jl
sahf
xchg
cs
in
adc
xor
jbe
rorb
fmul
iret
cld
or
jle
jne
fwait
xchg
movsb
jno
pop
push
insl
mov
leave
es
xlat
mov
movsb
xor
fdivrl
insl
and
es
mov
and
lret
hlt
xor
arpl
mov
call
add
adc
es
out
mov
loopne
cltd
sti
push
pop
mov
lds
scas
imul
jae
out
hlt
sbbl
add
adc
push
lret
cmc
add
cmp
cs
xchg
out
fs
mov
dec
stos
pop
outsb
xorb
push
push
xchg
fs
ret
mov
sbb
cmp
and
xchg
popa
stos
mov
int3
movsb
jne
movsl
sbb
jg
loopne
bound
pusha
stos
pop
jne
sub
ret
shl
in
jb
rorb
jmp
lods
cwtd
packsswb
sub
sub
lods
fistl
stos
mov
fldl2t
and
add
lods
pop
pop
mov
fcomps
add
mov
jnp
cs
or
and
pop
dec
movsb
sbb
adc
pop
fidivrl
movb
addb
mov
add
mov
mov
stos
inc
pop
pop
and
dec
int
jo
xor
aas
adc
into
js
outsb
hlt
rorb
add
test
inc
jg
pop
mov
fcmovnu
es
ds
cmp
mov
push
fadds
push
adc
dec
jl
faddl
invd
outsl
xor
add
out
xorb
jmp
cmp
mov
mov
xorl
jp
mov
cmp
leave
pusha
lahf
pop
out
mov
addr16
mov
or
fcmovnu
pusha
gs
add
bound
inc
pushf
std
xor
lahf
pusha
xor
imul
xor
outsb
pop
test
cmc
sub
and
mov
mov
add
repnz
xchg
adc
mov
inc
cmc
inc
enter
push
les
adc
lret
and
adc
incb
push
dec
jmp
loope
and
or
or
dec
sbb
sti
mov
cmpsl
ljmp
sub
cld
add
xchg
dec
js
in
xor
jne
add
mov
sti
loop
jle
adc
sub
ret
repnz
cli
mov
rcr
pop
dec
hlt
xchg
loopne
int3
add
fnstsw
dec
adc
cmp
movsl
fldl
sbb
movsl
test
lds
mov
xchg
jbe
inc
xchg
lock
das
and
shlb
dec
sub
test
inc
xchg
lods
gs
xchg
leave
test
pop
inc
mov
push
cmp
add
or
add
mov
push
dec
js
sub
jmp
aaa
call
imul
sahf
in
fwait
adc
sbb
test
jp
fmul
ret
push
xlat
aaa
nop
scas
into
cmc
lahf
dec
cmc
dec
mov
sub
pop
cmpsb
jge
lods
mov
inc
mov
dec
mov
pop
jge
xchg
in
jne
fs
pop
xor
cli
push
hlt
sbb
mov
cli
fdivrs
xchg
adc
lcall
cwtl
mov
pop
call
sub
cmp
push
push
mov
int
sbb
add
leave
adc
popa
add
jbe
movsl
add
pop
ljmp
and
pop
cmpsl
jmp
mov
imul
sbb
adc
push
mov
jno
out
jp
enter
lret
push
ret
cmp
push
push
and
fldcw
sub
and
jmp
into
test
xchg
clc
js
inc
inc
cmpsb
mov
jge
sbb
pop
out
inc
loop
and
xor
or
test
push
sub
lods
and
and
inc
cwtl
mov
clc
shr
scas
lahf
dec
sub
fisubs
lahf
xor
and
inc
and
xchg
xchg
xlat
mov
cltd
sbb
adc
and
inc
mov
mov
cmp
jp
pop
std
pusha
cmp
inc
cmpsl
lcall
dec
mov
xchg
sbb
and
in
popa
test
hlt
aaa
push
fcoml
les
cld
sub
add
es
in
sub
and
jg
sub
add
sub
cmpsb
mov
cmp
cs
sub
data16
or
mov
cmp
aam
addl
mov
add
xchg
push
loope
adc
xchg
mov
push
sub
xchg
jns
xchg
jp
or
ljmp
mov
push
jmp
add
push
pop
add
ljmp
adc
or
shrb
push
cmpsb
int
sub
push
xor
xor
or
lock
je
xchg
and
push
imul
lds
inc
lcall
push
je
test
insl
or
cld
daa
orl
bnd
popf
xorl
lret
pop
and
lcall
jmp
jle,pn
or
cmp
xorl
inc
roll
cli
nop
in
cld
and
xor
fcoml
test
loopne
mov
hlt
cmp
dec
out
and
xchg
out
aas
js
outsl
cmp
push
and
and
filds
dec
test
pusha
mov
fisubl
push
sub
loopne
popf
jne
rcrl
mov
xchg
data16
lcall
jp
fbstp
fucom
push
and
scas
xor
lea
inc
test
push
dec
scas
jne
add
mov
mov
lcall
push
lock
or
push
sub
mov
scas
cmp
test
scas
pop
mov
cmp
dec
xor
mov
xor
and
scas
jecxz
pop
inc
sbbl
lds
xchg
or
mov
mov
lcall
add
push
adc
inc
insl
ljmp
cmpsl
aad
cmpsl
loop
add
inc
and
mov
rep
mov
cmc
adc
nop
test
add
mov
ljmp
pop
pusha
stc
push
xchg
xor
pusha
mov
push
adc
mov
fs
test
and
and
leave
loop
inc
push
imul
dec
cli
dec
hlt
test
bnd
pop
xor
mov
mov
mov
adcl
in
out
mov
xorb
fisubrs
xchg
sub
and
std
inc
test
jl
mov
sub
data16
fisttpl
xchg
or
insl
jnp
inc
mov
pop
movsl
cmp
lods
hlt
out
xlat
or
cwtl
cli
add
in
clc
cmp
add
call
mov
or
enter
into
cli
pop
xor
lret
sahf
push
rcr
fisubl
push
ss
jmp
ret
or
push
mov
adc
cmp
enter
test
xorl
insl
incl
mov
jge
jl
stos
jne
and
gs
mov
push
cltd
lds
out
lcall
mov
je
cs
fmull
adc
insl
inc
xlat
or
adc
pop
scas
mulb
hlt
stos
jl
push
push
push
add
jae
mov
sbb
into
aad
notb
jl
or
mov
cld
mov
enter
xchg
frstor
cmpsb
cmp
inc
mov
push
inc
add
lock
popa
inc
lret
ja
push
xchg
rorb
fistpl
test
jle
xchg
sub
or
test
mov
lcall
ret
xor
xor
mov
sbb
cmc
fidivrs
cmp
ja
push
lret
fmul
xchg
daa
call
lods
test
push
js
mov
fbstp
adc
fsubr
pop
and
enter
fs
pop
jmp
pop
cmp
adc
cmp
xchg
ss
mov
scas
hlt
xchg
jg
outsl
subl
stc
test
jno
pop
xor
xchg
rorb
inc
inc
xchg
jne
ds
fimull
jae
sti
mov
mov
movsbl
pop
scas
sub
cmp
sbb
or
xchg
dec
insb
test
xchg
xchg
fdivp
fistpl
ljmp
add
xor
rcrb
stc
sbb
mov
data16
js
dec
adc
add
lret
int3
out
insl
into
cmpsl
cs
out
pushf
rorb
jge
cmp
hlt
aad
in
pop
push
test
or
xchg
pushf
adc
ljmp
stos
cmp
and
cli
dec
dec
cmp
shll
popa
inc
stc
cmpsl
rol
jge
jg
and
mov
in
mov
andb
add
sub
test
fstpl
dec
ret
lds
sub
imul
add
push
jne
mov
pusha
push
add
mov
imul
scas
or
loop
jno
stc
insb
test
xchg
mov
cmp
adc
testb
lret
out
cmpl
or
sub
mov
push
cltd
cmpsl
sub
and
xchg
pop
mov
inc
lods
adc
push
popf
lds
sbb
into
mov
inc
ljmp
add
xor
mov
ja
popa
hlt
mov
push
push
cmp
sahf
push
and
push
pop
les
scas
mov
sub
test
stos
pop
adc
adc
mov
adc
clc
fcomps
nop
rorl
hlt
adc
push
lcall
jp
inc
add
cwtl
inc
inc
pop
hlt
mov
jne
mov
add
pop
mov
pop
lods
mov
ss
rep
in
nop
mov
cmp
cmpsl
lods
sahf
frstor
cwtl
cli
cld
hlt
mov
lahf
cmpl
enter
adc
nop
shrb
sbb
scas
xchg
jle
and
fidivs
adc
xor
push
sub
enter
pop
hlt
loope
int
jg
dec
and
adcl
mov
mov
xor
mov
push
cwtl
testb
imul
stos
mov
push
xor
mov
mov
mov
inc
ds
int
out
sub
xor
loop
mov
and
cld
andb
mov
mov
or
jne
lret
repnz
cmpsl
mov
push
jno
push
lahf
sub
jo
cld
rcll
icebp
pop
or
hlt
push
leave
ffree
cmp
subl
movsb
scas
inc
xlat
rep
xchg
nop
pop
push
adc
mov
popa
cmp
loop
mov
sbb
add
sub
pusha
lcall
mov
out
out
sbb
addr16
lock
mov
xchg
out
lock
lods
mov
out
jecxz
les
sub
cli
rol
das
xchg
add
push
in
rcrb
sub
jp
inc
hlt
popa
loope
sti
aam
xchg
incl
sub
push
dec
dec
mov
mov
mov
outsb
push
rorb
or
addl
insl
adc
cmp
mov
adc
icebp
jmp
lods
sub
jg
xchg
stos
push
popa
insb
cmc
xchg
adc
mov
test
out
fnclex
mov
inc
cmp
xor
xor
inc
lea
outsl
int
add
int3
sbb
mov
dec
jecxz
les
dec
adc
sarl
inc
mov
pusha
xor
or
ja
and
mov
aam
inc
mov
xorl
in
sub
sbb
es
outsl
out
mov
mov
mov
fdivl
les
into
stos
movsb
lahf
sahf
mov
mov
data16
test
enter
and
lds
movb
jne
mov
sub
xchg
sti
pop
sub
jecxz
dec
push
lods
cld
iret
jmp
addr16
inc
ret
ljmp
inc
mov
adc
cwtl
cld
dec
mov
stos
or
mov
sub
sub
xchg
call
shrl
xchg
add
add
inc
sub
xchg
mov
in
pop
call
outsb
iret
fiaddl
cwtl
mov
test
pop
push
daa
dec
stos
icebp
pop
xchg
pushf
fdivs
cmp
and
ret
xor
mov
movsl
pop
sbb
cmp
dec
test
popa
pusha
add
loope
test
insl
push
fldl
and
mov
fstpl
or
add
pop
div
test
insl
jl
shll
dec
adc
sub
mov
popa
sti
mov
sbb
adc
push
test
mov
or
jne
mov
outsl
jmp
cmp
add
stos
mull
inc
and
inc
xor
rorb
aas
or
mov
mov
decb
insb
aam
rcrl
adc
add
insl
xchg
sarb
repnz
leave
push
cmp
lret
arpl
enter
lahf
and
movsl
dec
mov
pop
mov
adc
dec
cmp
ja
pushf
pusha
fidivrl
mov
or
fistps
lahf
fdiv
cwtl
and
jne
push
movsl
add
dec
stos
test
les
mov
es
cbtw
sub
mov
dec
pop
imul
inc
adcl
jge
cs
sub
stc
adc
mov
aas
add
inc
data16
stc
inc
dec
jns
xchg
sub
mov
or
sbb
adc
inc
imul
cs
rorl
hlt
sub
cmp
lods
int3
cmp
mov
stc
and
mov
test
rcll
ret
inc
sub
adc
mov
jne
stc
fists
scas
addb
adc
push
sub
pusha
jp
xor
test
push
imul
jae
fldenv
movsl
jbe
mov
pusha
or
push
add
or
dec
adc
cmc
push
sub
pop
add
loop
dec
insb
lret
lcall
mov
sbb
dec
ds
test
mov
hlt
push
insb
jae
pop
and
in
fadds
mov
test
ss
and
int
icebp
mov
mov
dec
mov
jg
jmp
int3
or
xchg
mov
aaa
xchg
add
xor
negb
and
xor
fldenv
sub
mov
fidivrl
jae
leave
cwtl
nop
leave
inc
jmp
cmpsl
and
mov
inc
js
loop
fst
test
imul
mov
loop
outsl
inc
dec
test
rorb
pop
popa
call
cwtl
adc
sub
scas
icebp
sbb
popa
push
sub
xor
int3
xlat
out
scas
mov
pushf
stc
xchg
sub
jne
subl
out
outsb
lock
mov
test
test
ret
jmp
popa
dec
ljmp
aad
in
mov
jns
mov
mov
push
shlb
test
shl
and
mov
pop
repnz
and
and
fcmove
sub
jle
adc
test
dec
test
inc
add
pop
mov
or
mov
test
cs
push
inc
cmp
andl
mov
mov
popf
test
push
xchg
add
fcomi
mov
fdivs
imul
into
cmp
nop
push
hlt
add
add
out
subb
mov
cmpsb
cmp
rcl
cs
adc
push
iret
xchg
lds
pusha
int3
sar
subl
mov
adc
xchg
imul
lret
cltd
or
lcall
adc
jmp
out
inc
push
pop
data16
loopne
xor
push
sti
cmpsl
push
push
int
cmp
sti
in
xchg
nop
rcrl
aad
pop
lods
nop
xchg
push
push
iret
push
xor
jge
outsl
sub
inc
call
push
shlb
sub
mov
stos
out
adc
test
add
inc
push
mov
adc
inc
xor
mov
add
mov
sub
mov
jne
mov
jae
lahf
popa
ret
add
push
mov
dec
outsl
testl
push
mov
inc
out
pop
inc
insl
enter
nop
insb
loope
in
xchg
mov
sbb
mov
hlt
fcmovnb
testl
lock
xchg
cmpsl
xchg
loopne
dec
xor
subb
dec
negl
hlt
and
add
outsl
loop
pop
loop
pop
mov
imul
cli
fdivrl
or
mov
xorb
stc
fildll
mov
iret
in
add
les
and
cmc
and
add
test
sub
das
xchg
and
shrl
cli
shrb
lret
ljmp
stos
mov
incb
xlat
insl
xor
hlt
test
sub
dec
or
test
lcall
mov
jns
sub
or
sub
mov
aam
movsl
cmp
das
push
or
sbbb
mov
inc
cs
dec
dec
test
ljmp
push
sbb
mov
rorl
mov
inc
inc
fsubrl
hlt
mov
jge
and
jbe
inc
std
scas
xchg
pop
ljmp
jnp
jp
jne
or
xor
std
sbb
push
xlat
xor
nop
push
cli
mov
lret
sub
jg
fldl
dec
aaa
or
xchg
imul
loopne
pop
roll
and
xchg
fnsave
out
out
cmp
cld
dec
movsb
add
fstpl
testb
push
sahf
pusha
call
and
cmpsl
lcall
push
repnz
hlt
xor
fcmove
stos
lods
mov
es
scas
mov
and
xor
dec
adc
cmpsl
scas
aam
testb
inc
insb
and
push
mov
jo
jmp
pop
out
add
lods
mov
sub
mov
push
sbb
jne
ja
xchg
jbe
xor
xor
xor
rorl
popa
sub
shlb
cmp
push
and
pop
loope
bnd
nop
jne
sub
rclb
mov
inc
mulb
jp
adcl
stc
push
sahf
das
loop
lret
jne
mov
inc
shll
xchg
pop
fldl
cmp
pop
add
jno
test
mov
add
repnz
pusha
and
pop
push
ds
jnp
jg
ret
out
hlt
push
xchg
stc
dec
jg
out
aas
add
add
xchg
jecxz
lock
add
adc
lods
test
rdmsr
fisubs
push
leave
adc
dec
std
lahf
les
and
push
xchg
add
xor
lahf
loopne
cwtl
push
fistl
fstpl
push
mov
xchg
insb
push
adc
push
adc
fsub
xlat
xor
mov
pop
xor
pop
bound
scas
and
push
pop
out
xchg
repnz
and
push
mov
mov
jbe
mov
ret
hlt
xchg
xchg
js
pop
dec
adc
lcall
mov
sti
cmpsb
xor
dec
test
mov
pushw
test
jp
mov
cmp
jmp
lods
imul
lock
dec
inc
nop
lahf
and
outsb
pop
push
mov
jle
cs
mov
lahf
ds
lea
mov
add
xchg
sbb
lret
sbb
mov
lock
push
push
jne
scas
xchg
mov
std
mov
repnz
mov
adc
xchg
adc
push
ss
sbb
sub
pop
inc
mov
loop
push
insb
fmull
loopne
inc
je
add
sbb
jo
shl
bound
sarl
add
jno
mov
mov
or
xor
mov
xor
pop
cmpsl
in
and
mov
inc
mov
sbb
test
sub
add
add
jo
mov
push
stos
lock
mov
mov
pop
sti
insb
dec
sub
xchg
rclb
into
sub
das
xchg
mov
cmp
loope
add
cltd
mov
stc
pop
sbbl
fnstsw
mov
pop
stc
aas
call
dec
add
sub
adcl
xchg
cmc
repz
test
push
jb
sti
add
mov
nop
mov
shll
into
jbe
daa
cwtl
shrl
in
mov
in
mov
sar
roll
push
stos
psrld
inc
popa
ss
fists
stc
cmp
mov
je
pop
cwtl
adc
jno
mov
xchg
test
fildl
fcompl
insl
ss
push
mov
hlt
mov
adc
inc
jp
adc
imul
lock
out
or
insb
gs
sub
rorl
insb
fs
mov
lret
xor
xchg
adc
mov
hlt
repz
dec
xchg
dec
pop
fbstp
pop
gs
shl
out
dec
es
mov
mov
push
shrb
mov
aaa
jle
pop
jbe
xor
mov
rol
and
rcll
dec
mov
inc
or
repz
gs
cmc
inc
mov
enter
dec
jns
mov
ds
lcall
add
push
fcoml
leave
mulb
add
sub
hlt
adc
cmpl
clc
jg
xchg
testb
cs
xlat
out
test
int
das
mov
insb
jo
ja
xor
sti
out
daa
mov
popl
popf
repnz
fisubrl
add
mov
dec
mov
into
inc
sbb
leave
movsb
in
jb
clc
gs
movsb
mov
cmc
out
or
mov
ret
cwtl
pop
loope
mov
mov
push
jg
jle
cmp
push
mov
adc
test
gs
nop
xchg
add
adc
xchg
scas
push
mov
imul
jge
push
faddp
pslld
inc
or
mov
add
xor
test
pusha
pop
mov
fcoml
mov
inc
insl
ds
aas
mov
inc
call
dec
out
mov
mov
adc
and
push
inc
sub
je
sbbb
mov
add
cmpsl
mov
xchg
es
imul
jb
cltd
lods
lods
sar
mov
mov
pushl
sbb
and
pop
sub
es
push
or
xchg
jp
addr16
jne
roll
fldenv
popf
and
aad
mov
push
ja
jnp
enter
aad
sub
mov
adc
mov
hlt
mov
dec
jge
in
and
jno
arpl
add
push
loopne
push
xchg
dec
cmp
scas
xchg
and
pop
mov
jmp
cli
sbb
out
jae
xchg
out
xor
mov
pop
sarb
inc
adc
fsubs
mov
enter
outsl
out
sub
mov
pop
ret
sbb
xchg
push
cs
sub
jnp
xor
mov
jbe
in
sbb
push
mov
xchg
mov
fsubl
add
lahf
popa
mov
cmp
pushf
or
xchg
mov
cmp
mov
repnz
and
mov
cwtl
push
loopne
pusha
cmp
or
mov
in
mov
mov
mov
jmp
dec
xchg
jbe
ss
nop
repnz
mov
mov
xor
hlt
sahf
mov
mov
mov
push
inc
mov
xchg
and
hlt
jo
testb
jl
mov
ds
outsl
in
pop
mov
push
mov
xor
out
mov
mov
inc
nop
xor
rcrl
mov
pop
pop
sbb
movsb
push
test
xchg
loope
ja
mov
or
fnstsw
ss
mov
loope
shrb
sub
int3
jl
push
add
jne
das
fsubr
mov
adc
hlt
sbb
pop
jle
add
in
jne
scas
imull
sub
dec
add
inc
push
mov
cmpsl
insl
hlt
pop
in
cmp
stc
xor
mov
inc
pop
cltd
aad
insl
pfcmpge
lcall
and
mov
cmp
xor
fldenv
jb
mov
in
lods
jp
xlat
lods
or
sub
sbb
daa
dec
add
push
xor
pop
mov
mov
sub
into
hlt
ret
pop
scas
int3
push
push
inc
adc
or
fcoml
and
in
dec
hlt
mov
fisttpll
enter
pop
outsl
out
les
sub
popf
pushf
jnp
inc
mov
xchg
mov
js
xchg
cmpsl
mov
pop
lock
jl
pushf
xchg
sub
dec
mov
into
and
loop
andb
fsubr
mov
cli
mov
out
pop
lret
xor
add
jbe
cmp
inc
shrl
cmp
sahf
jb
arpl
xor
adc
ret
inc
sbb
mov
out
push
and
mov
out
fwait
add
les
movsl
jae
fsubl
jnp
scas
cwtl
mov
adc
or
lahf
dec
cmpb
dec
mov
cmp
stc
pop
sub
data16
adc
inc
dec
sbb
test
fcomip
xchg
movsl
std
mov
sbb
sub
daa
arpl
repnz
xchg
inc
pop
add
mov
fdivrl
cmp
data16
jne
in
pop
pop
adc
iret
gs
ljmp
mov
inc
inc
in
xchg
stc
mov
mov
insl
stos
mov
dec
xor
and
xor
or
inc
sub
xor
nop
fldt
mov
pop
xchg
jge
fistpll
les
pop
mov
cmp
lea
adc
jne
cmp
pop
dec
mov
fldcw
ret
cmpsb
mov
test
in
mov
mov
pop
dec
push
mov
xchg
mov
cltd
push
pusha
sbb
test
xrelease
fdivl
rcl
in
mov
cltd
pop
addb
or
out
call
cmc
inc
fwait
inc
fstpl
call
mov
cmpsl
pop
add
mov
std
xor
sbb
leave
push
into
jo
xchg
incl
fcomi
pop
mov
mov
xchg
popa
hlt
imul
subl
mov
or
in
dec
std
dec
add
clc
jg
sti
pop
cmp
fdivr
call
ficoms
leave
mov
cmp
xor
mov
lods
sub
inc
jg
jmp
dec
xlat
adc
les
sub
or
xor
sbb
pop
and
xchg
stc
push
rorb
dec
jae
or
test
or
pop
out
sbbb
stc
test
pop
sahf
rorl
jl
pusha
mov
mov
arpl
fstl
popf
hlt
sbb
cmp
inc
push
mov
hlt
lea
dec
insl
mov
mov
aas
cmpsl
mov
rol
jo
sub
xor
movsl
xchg
inc
ficoml
jne
or
enter
sub
iret
lret
and
icebp
loop
cmp
jne
das
fdivrl
jmp
aas
imul
mov
add
testl
or
jno
jle
test
jo
push
or
xor
test
test
mov
inc
sub
lret
inc
dec
mov
fistl
jmp
push
xor
xchg
out
mov
pop
out
test
pop
movsb
mov
test
jnp
push
ss
add
repnz
hlt
pop
dec
add
cmp
out
jne
dec
dec
mov
enter
orb
pushf
push
pop
inc
mov
ja
lcall
push
popf
xchg
cs
iret
lcall
inc
jne
push
test
sarb
addl
cltd
push
das
scas
push
mov
hlt
xor
ficomps
lods
imul
add
repz
push
and
loope
fadds
in
int3
xor
cs
inc
hlt
mov
inc
jns
xchg
and
bound
movsb
pushf
hlt
push
sbb
xor
adc
loope
sub
or
les
ret
xchg
je
adc
lcall
out
das
and
shrb
cwtl
dec
pop
adc
sub
dec
popa
ss
or
cmpsb
jno
inc
push
pop
cld
lods
es
dec
nop
sbb
ret
pcmpeqw
mov
stos
xor
jno
decb
adc
push
cmpsl
push
xor
inc
in
int3
mov
adc
data16
push
shlb
aam
cwtl
and
lods
sahf
leave
add
jle
jg
mov
xor
mov
lret
mov
adc
mov
jmp
add
cmp
in
hlt
mov
imul
test
mov
shr
push
inc
hlt
in
xchg
das
inc
aam
into
negb
dec
mov
sub
xor
sub
or
push
sub
popa
pop
sub
cwtl
mov
dec
aas
mov
mov
fsubr
add
in
fildl
popa
dec
jmp
jns
sbb
push
sbb
pop
insb
dec
push
pop
movb
sub
xlat
cmpsl
lcall
loope
push
mov
pop
cmpb
in
lds
cmp
mov
aas
xchg
hlt
lret
mov
jno
hlt
out
dec
stc
fnstenv
imul
xchg
int
xor
inc
mov
mov
hlt
and
jbe
cmp
xor
lock
jb
xchg
inc
push
sub
push
pop
push
out
in
fsubr
std
mov
imul
jmp
push
test
jnp
inc
ds
push
inc
xchg
cltd
lahf
adcl
mov
enter
xor
mov
xchg
jne
pop
or
or
leave
and
nop
mov
das
pop
cmpsb
sbb
mov
inc
nop
pop
cmp
jge
add
inc
loop
sti
sub
inc
sarb
dec
pusha
shlb
fmull
add
fimuls
push
pop
add
cmp
leave
push
add
push
ficompl
je
or
adc
mov
paddusw
pop
es
sub
inc
sahf
xor
andb
dec
out
aam
jne
pushf
out
js
cmp
or
shlb
les
orb
sbb
xchg
xchg
jg
mov
int3
mov
add
xchg
dec
add
jo
out
push
imul
hlt
je
mov
adc
stos
filds
cwtl
icebp
inc
aam
subb
nopl
out
rorb
add
int3
shlb
add
xlat
daa
add
sarl
cmp
push
stos
inc
les
xchg
mov
mov
sub
adc
sub
or
lods
push
dec
cltd
cmp
les
mov
loope
xlat
inc
lret
xchg
mov
jno
mov
mov
outsl
mov
clc
dec
popf
daa
pushf
inc
frstor
jne
clc
jle
lret
push
push
lods
sub
cmp
cmpsl
cli
scas
pop
add
rorb
mov
cs
pop
jecxz
pushf
test
pop
pop
dec
aad
and
lcall
decl
sti
or
push
loope
dec
xchg
or
push
andl
dec
lods
stc
mov
decb
loop
push
cltd
fs
insb
jge
loopne
jne
adc
je
jecxz
lock
test
ret
inc
imul
xchg
xchg
das
std
test
nop
jne
jle
inc
test
jl
subl
das
cmp
push
int3
xchg
or
add
clc
cs
mov
arpl
movsb
leave
out
mov
add
dec
push
js
pop
and
enter
mov
add
jecxz
int
sub
add
das
ja
inc
xchg
int3
and
shll
adc
mov
fwait
mov
mov
add
leave
hlt
add
fidivrs
push
inc
inc
pusha
outsl
ljmp
insl
xor
outsb
and
ret
sarl
lahf
jl
xchg
xor
jne
pop
add
inc
lds
movsb
sub
add
lret
enter
xchg
jle
addr16
sub
shlb
pop
cmpsb
fcomps
inc
lods
int3
jecxz
ljmp
mull
addl
mov
add
pop
mov
outsl
cs
lret
jne
test
out
clc
and
imul
lock
cmp
lret
pop
add
cmp
ds
mov
pusha
add
add
rclb
mov
lret
mov
and
cltd
pop
push
cmc
test
in
mov
movsl
cmp
decb
mov
dec
aas
mov
arpl
sahf
ss
push
inc
dec
cmc
push
jecxz
dec
es
xor
inc
pop
sub
fisubs
enter
add
jne
imul
or
jp
inc
out
dec
repz
push
ja
popa
ret
cmpsb
inc
jo
popf
in
sarb
adc
xchg
aaa
arpl
or
mov
shll
repz
and
rorb
ficoms
jne
adc
lret
mov
hlt
sbb
aaa
mov
mov
mov
cmc
or
repz
jne
cmp
daa
pop
rclb
mov
clc
or
mov
add
mov
orb
jl
push
jo
dec
fdivs
mov
hlt
push
das
in
movsl
xchg
sbb
mov
push
inc
addb
or
pop
add
pop
lcall
jne
gs
gs
shr
insl
pop
roll
and
ljmp
cmp
add
dec
sub
sti
sbb
pop
push
adc
xchg
lcall
orb
mov
clc
cmp
scas
dec
xchg
ret
loopne
ja
mov
cmpsl
mov
ljmp
not
xor
addr16
adc
aam
pop
dec
sbb
and
push
sbb
and
daa
xor
dec
and
push
loope
repz
in
out
push
ljmp
cmpsb
inc
sarb
mov
mov
jne
push
lcall
mov
lods
testl
sti
add
and
jmp
fbstp
popf
out
push
xchg
gs
mov
stc
mov
jmp
into
adc
sub
idivb
ret
mov
add
outsl
adc
jmp
push
arpl
fstpl
pop
inc
incl
sub
in
xor
es
jmp
and
push
mov
dec
mov
pop
jne
sub
test
cmp
fildl
adc
lcall
sub
mov
cmp
push
iret
xor
stos
mov
testb
pop
or
outsl
xor
push
adc
jne
and
mov
pusha
lds
jne
test
inc
mov
les
dec
fmuls
or
jb
imul
leave
fnstcw
shrb
sbb
loop
clc
testl
sbb
lods
xor
cmpsl
popf
mull
or
xor
pop
jmp
gs
jbe
cmp
push
sahf
hlt
xchg
neg
inc
inc
push
xlat
sub
icebp
outsl
mov
mov
mov
dec
push
vpcmpeqd
dec
test
push
inc
nop
or
pop
loope
mov
inc
sub
jle
sub
lods
mov
mov
ficoml
jmp
jg
mov
ja
in
daa
fstps
inc
jp
and
mov
fstl
sub
rcr
mov
daa
jne
dec
hlt
pop
leave
fisttps
and
mov
pop
jmp
add
jecxz
jne
lcall
cld
or
call
mov
in
mov
cmp
lret
aas
xor
ss
into
out
fiadds
or
aam
push
sub
in
in
loop
inc
or
repnz
movsb
or
pop
subb
sub
sub
mov
daa
and
mov
mov
dec
inc
pusha
jecxz
enter
jns
mov
test
cmp
xor
xorl
ja
jl
mov
sub
add
mov
out
and
loopne
cwtl
jp
sub
shlb
or
sub
dec
stos
leave
scas
jbe
imul
mov
mov
push
xchg
sub
int3
dec
imul
in
cmp
dec
aam
movsb
sahf
dec
xchg
stos
adc
cld
ss
jg
call
sarl
faddp
push
mov
add
sahf
inc
and
sbb
mov
dec
stos
mov
rolb
jno
aaa
out
out
shlb
sub
pop
sub
inc
and
or
mov
stos
mov
sbb
out
mov
pop
push
lds
js
cmp
add
ret
shl
in
pop
lcall
in
fstl
hlt
lods
mov
add
test
fucomip
push
mov
rolb
push
push
cmp
push
cltd
pop
or
xchg
add
mov
xor
lds
jl
jne
stos
shrl
cltd
jmp
sub
loop
jmp
aaa
dec
mov
into
cmpsb
addr16
hlt
clc
push
dec
mov
cmp
add
fnstenv
adc
push
pop
mov
add
jl
js
scas
dec
jge
xor
push
icebp
xchg
add
lcall
push
or
xchg
ja
cmc
mov
jecxz
push
jns
fcmovnbe
mov
aaa
lret
pop
add
push
test
xchg
xor
inc
add
xchg
push
xor
repz
sub
js
or
pop
bound
mov
into
add
shll
push
test
mov
cmp
push
sub
cmp
cmp
mov
and
fdiv
movsb
or
cmpsb
lock
divl
mov
popa
in
popf
jle
adc
loope
outsb
dec
cmp
and
cmp
stc
cmp
push
cwtl
jne
mov
rorb
mov
dec
out
rclb
sub
cmp
mov
shl
aas
mov
stc
mov
jne
rcll
xlat
add
or
mov
test
dec
movsb
out
pop
and
dec
cmp
adc
lcall
pop
scas
lcall
imul
mov
xchg
clc
dec
mov
adcb
mov
push
mov
ja
jns
fstpl
bound
mov
lock
adc
mov
les
cli
outsl
cs
add
ficomps
mov
orl
js
dec
add
pop
loope
imul
adc
fs
lahf
mov
or
mov
ret
add
push
jne
push
jle
mov
xlat
pop
int
nop
out
mov
fidivrl
inc
mov
test
mov
outsl
jmp
xor
ss
jno
addr16
icebp
sahf
imul
dec
or
icebp
popa
adc
mov
movsb
or
in
std
mov
push
in
mov
mov
fsubrl
inc
push
sahf
cs
push
js
stc
jle
fstpt
mull
xchg
and
mov
ljmp
push
push
das
mov
mov
jb
data16
icebp
outsl
andb
mov
or
xchg
adc
sub
stos
push
dec
popfw
mov
jl
xor
add
outsb
xchg
mov
stos
fcomp
adc
cmp
hlt
pushf
inc
inc
lcall
pop
adc
cmp
hlt
cltd
dec
jge
mov
lods
ss
mov
push
aam
jecxz
cmp
fadds
nop
cmpsl
lods
xchg
sbb
cmpsl
and
and
sub
shrl
push
mov
mov
xor
jge
rolb
ret
gs
or
repz
js
push
and
jnp
les
add
lret
testl
out
push
mov
ja
enter
xlat
jg
push
and
fnstenv
xor
test
fdivrs
and
out
jecxz
das
add
out
pusha
cmp
xor
fsubrl
sub
mov
mov
loop
out
enter
mov
adc
js
outsb
inc
js
rol
mov
xchg
add
enter
jns
enter
lret
add
add
popf
xchg
das
in
loop
and
inc
hlt
adc
mov
pop
and
or
cmp
push
out
in
sub
adc
aam
fldenv
jb
jb
add
icebp
das
mov
pslld
push
mov
mov
lcall
mov
adc
pop
push
jo
rcl
add
mov
jmp
adc
mov
jg
clc
jg
rcrb
sub
jl
mov
cmc
xchg
insb
jg
xlat
add
ret
cmp
fsts
stc
push
add
jns
imul
testl
cmp
nop
sbb
adc
std
inc
leave
js
dec
sbb
and
test
out
inc
fisubrl
ja
jno
fdivrl
in
cld
mov
xchg
insl
xchg
cmpl
out
mov
pop
insb
es
popa
dec
pop
jae
shl
adc
insb
into
cmpb
cmp
push
inc
push
add
ror
mov
jne
aas
adc
hlt
ret
xchg
mov
std
cmc
les
pusha
or
adc
lock
pop
adc
xchg
cwtl
jne
fsubr
es
mov
mov
int3
pop
hlt
adc
lock
mov
je
lahf
dec
out
cld
shrb
jo
xchg
idivb
popa
jno
mov
inc
sbb
push
aam
dec
mul
loope
push
xlat
imul
sbb
xor
aas
sub
add
int
xor
rep
or
or
mov
ja
sub
mov
inc
pop
out
add
dec
sbb
cmp
cmpsl
pushf
testl
jge
outsb
inc
lods
push
pop
sbb
sub
aas
add
iret
add
push
inc
lret
dec
in
cld
js
or
mov
ja
imul
aam
fcoml
mov
fistpl
add
inc
sub
dec
dec
jp
xchg
jnp
stos
insl
pushf
jecxz
test
mov
repnz
out
pop
jecxz
pop
shrb
pusha
mov
xor
movsb
test
not
inc
cmpsb
push
out
and
pop
jo
cmc
xchg
in
xor
mov
adc
pop
adc
pop
sbb
hlt
xchg
repz
xor
pop
adcb
push
in
mov
push
popf
enter
xlat
mov
les
xchg
in
int3
push
loope
cmp
push
xchg
nop
int
add
orl
std
cltd
cmp
insl
add
adc
dec
push
mov
ss
mov
pushw
cmp
loopne
mov
cmpsl
dec
adc
rcrb
ret
add
shl
xchg
aam
in
scas
shlb
into
inc
push
adc
test
outsb
lods
jne
mov
enter
xchg
xor
mov
jle
mov
push
push
inc
pushf
clc
scas
les
dec
mov
into
nop
or
push
jnp
push
jg
jmp
push
mov
mov
add
pop
out
stos
jnp
mov
sti
mov
rorl
xor
mov
lock
mov
xchg
push
or
or
sub
leave
stos
fadds
sbb
adc
fsts
js
int3
hlt
adc
insl
mov
mov
xor
mov
je
jns
xor
sub
daa
add
hlt
sti
inc
add
shr
and
push
fs
pop
xchg
lcall
popa
pop
xchg
imul
jnp
sub
xor
and
mov
leave
xchg
cmp
xchg
es
loope
pusha
jne
adcb
into
jle
es
push
adc
jecxz
scas
rcr
jne
xchg
add
pop
fdivrs
cld
aam
xchg
ljmp
das
add
push
test
mov
push
test
push
mov
int
cmpsl
push
imul
push
xor
pop
fbld
adc
rclb
jmp
je
repnz
xchg
cwtl
sub
add
cmpb
mov
adc
in
sub
adc
sub
inc
jecxz
and
pop
movl
xchg
mov
imul
mov
scas
push
add
cmp
and
insb
push
pop
xor
jmp
xor
xor
hlt
lret
loope
add
stc
bound
sbb
scas
hlt
mov
xchg
add
and
lret
enter
mov
mov
or
lods
mov
add
cmp
mov
xor
into
call
out
xchg
mov
repnz
mov
adc
xor
pushl
and
xchg
insb
push
pop
loop
xor
mov
pusha
es
jmp
or
std
out
jb
lcall
sub
dec
test
adc
movsb
add
dec
and
pop
sahf
jge
inc
or
add
cld
add
mov
sbb
add
pusha
insb
test
or
sbb
ja
cli
leave
or
xor
in
xorl
sbb
or
mov
adc
les
roll
rcr
sbbl
in
mov
repz
mov
fcoml
mov
test
inc
pushf
xchg
test
scas
xchg
mov
movsl
into
jle
hlt
ret
fldt
fmull
add
out
xchg
or
popf
ret
dec
pop
xchg
mov
mov
mov
addr16
out
mov
mov
dec
jae
cld
sbb
cmpsl
xchg
mov
push
les
sub
out
inc
test
call
mov
add
stc
add
xorb
jg
sub
loop
arpl
sbb
inc
lahf
xchg
into
stc
or
aaa
popa
jne
sub
lcall
rcl
data16
add
outsl
mov
insl
hlt
fs
add
mov
call
add
in
xlat
push
cmpsb
jg
shlb
std
ror
xchg
push
popf
mov
xlat
mov
or
sbb
inc
dec
mov
xor
xor
cs
pop
add
sbb
or
sbb
sbb
xor
mov
pop
mov
cmp
sbb
leave
jbe
adc
and
xchg
inc
psubw
mov
into
ja
push
jge
adc
das
xchg
and
movsb
insl
add
pop
mov
inc
enter
or
fisttpl
out
jne
sbb
cmp
jns
mov
jae
mov
add
xchg
mov
mov
jns
or
sub
pop
cmp
xchg
mov
stos
pop
jmp
cli
pop
jbe
stc
or
cmpsb
hlt
sub
lcall
or
mov
pop
or
int
dec
push
ret
fstl
lds
outsl
cmpsl
cli
movsb
das
push
xchg
sub
bound
ja
leave
jg
cs
fcoms
adc
mov
xchg
pusha
aas
je
push
or
gs
loope
adc
xlat
inc
testb
std
and
mov
add
sti
mov
ljmp
mov
cmp
les
out
push
pop
jae
adc
mov
dec
sbb
jmp
mov
sbb
les
add
sub
lret
test
ficoms
jge
or
mov
gs
inc
or
mov
mov
mov
push
dec
push
xorb
out
cmc
sahf
loopne
xorb
xchg
mov
adc
mov
inc
push
cmp
xlat
lcall
movsl
hlt
test
push
ficoml
and
xchg
mov
ljmp
rclw
nop
push
out
movsl
fistps
mov
fsubl
movsb
pushf
inc
inc
int3
jne
add
push
adc
mov
jle
ret
jge,pt
xor
std
out
cmp
nop
sbb
sbb
mov
cmp
xchg
cmp
mov
repz
sbb
clc
es
sbb
push
ret
or
push
nop
pop
xor
hlt
test
push
popa
insl
sbb
das
add
jne
push
sbb
and
andb
mov
pop
pop
std
in
sub
adc
outsb
jo
lods
mov
aam
dec
mov
nop
mov
fs
lods
jns
cwtl
pop
jg
shrl
dec
pop
mov
repz
lret
xchg
cs
push
sbbl
push
push
xchg
mov
push
cmpsl
int3
shlb
and
cmp
lods
es
jmp
xor
pusha
mov
roll
testl
sbbb
adc
ljmp
dec
pop
hlt
or
adc
pop
notl
hlt
loopne
jg
and
jns
popf
lods
jnp
xlat
stos
fstl
incl
jne
xlat
popf
fiaddl
jge
test
or
arpl
xchg
fcoml
arpl
int3
jmp
adc
jne
fs
add
jmp
outsb
pop
dec
int3
sub
xchg
mov
adc
das
mov
rcll
cwtl
jns
loopne
push
cmp
mov
pop
pushf
push
cmc
mov
sub
outsb
or
scas
adc
negb
add
sub
cwtl
mov
imul
jne
fmull
mov
or
jmp
xor
outsb
andl
stos
add
leave
stos
pusha
xor
les
fs
xchg
loopne
stos
sub
pop
adc
outsb
inc
imul
xor
lds
arpl
fstl
scas
xchg
loopne
jle
fsubrp
repnz
adc
cmp
sbb
out
cmc
sub
ds
mov
jp
loop
xlat
fdivp
push
push
mov
cmpsl
xchg
inc
jbe
scas
xor
pop
scas
nop
dec
mov
pop
lds
andb
std
test
outsl
stos
repnz
inc
mov
adc
jle
or
repz
inc
scas
jg,pt
or
cld
cmc
lret
inc
mov
hlt
xchg
mov
jmp
xchg
pushf
out
cmpsb
outsl
xchg
dec
test
dec
in
arpl
add
dec
loopne
fcoml
sbb
fs
aad
leave
jne
cmp
int3
pop
or
xchg
pushl
add
imul
inc
leave
test
xchg
xchg
mov
inc
lret
pop
into
mov
mov
push
mov
dec
stc
sbb
mov
bound
das
popa
clc
ja
pop
cmp
lcall
inc
mov
adc
data16
inc
xchg
mov
pusha
popf
cmp
inc
test
int
fdivrs
mov
addl
cmpsl
cmp
fisttpl
lahf
aas
std
xchg
push
pop
jmp
popa
cld
cwtl
xchg
test
imul
cmpsb
jae
sub
lret
repnz
dec
stos
cli
or
es
push
pop
test
pop
mov
lcall
push
das
jle
pushf
push
sbb
push
pop
enter
mov
push
dec
insl
pop
cld
jp
icebp
xchg
loopne
cmp
jne
push
adc
pusha
scas
or
pop
jp
movsb
jno
into
push
negb
xchg
hlt
repnz
jne
mov
shrb
xchg
fsubr
lret
cld
push
inc
stos
int3
xchg
insl
sub
loope
add
enter
popa
jbe
xchg
push
mov
or
hlt
js
xlat
lcall
in
loopne
hlt
pop
xor
call
pop
movsl
push
inc
sub
imul
gs
jg
or
jnp
mov
sbb
cwtl
cmp
pop
popa
rorl
imul
add
mov
mov
add
icebp
stos
xor
adc
cltd
mov
les
mov
lcall
sbb
mov
call
test
into
jb
rolb
xchg
sbb
xchg
fsubl
push
hlt
fcmovnb
xor
ud1
dec
lea
ljmp
and
into
push
ret
pusha
rorl
sub
xchg
js
jl
hlt
movsl
inc
repz
adc
aad
pop
mov
cli
mov
stc
mov
add
push
stos
scas
mov
call
popl
dec
mov
ja
xchg
imul
in
popa
mov
lahf
mov
mov
or
stos
push
inc
cld
mov
inc
mov
xchg
popf
ljmp
scas
sub
shlb
ret
fsts
mov
push
imul
fwait
jnp
jle
pop
imul
cmp
pop
sahf
xor
bound
je
ja
call
mov
sar
fldcw
out
dec
repnz
test
pop
int3
cmc
mov
pop
sub
push
jns
mov
mov
faddl
test
fbld
jns
sti
mov
add
push
loope
pop
ljmp
cwtl
lds
pop
inc
cmp
cmpsl
in
stos
xorb
cmp
iret
das
int
in
lods
dec
mov
sbb
clc
shll
push
icebp
add
inc
outsl
shll
loopne
xchg
lock
push
adc
mov
mov
pop
push
pop
popa
hlt
nop
call
das
xchg
pop
xchg
cs
xor
cltd
sbb
and
pop
repnz
rolb
inc
fisttpl
or
mov
scas
jne
jg,pn
mov
test
ljmp
jmp
jae
cltd
out
movsb
loope
mov
sbb
scas
imul
fbld
shrb
movsl
xor
sbbl
dec
gs
stc
adc
popa
pop
xor
and
aad
out
movsl
neg
into
push
aas
jno
aam
in
add
enter
inc
dec
rclb
scas
mov
pop
iret
ds
xor
lahf
push
test
push
pop
mov
scas
pop
hlt
ret
xor
ret
inc
xchg
cwtl
mov
push
rorb
mov
push
rcr
jae
mov
imul
fldcw
mov
add
lcall
lret
aad
add
sbb
add
stos
inc
mov
xchg
adc
jno
jmp
or
mov
dec
mov
insl
incl
mov
sbb
xchg
pop
ja
gs
jns
mov
shrb
stc
jmp
pop
pushw
out
jns
leave
mov
xor
pop
pop
mov
add
dec
mov
in
or
lods
bound
fs
inc
jnp
stos
lods
dec
cmc
inc
push
pop
mov
in
mov
or
jb
enter
pop
sub
lcall
and
lret
ds
out
or
mov
adc
scas
lock
mov
jg
ret
cmc
les
hlt
insl
xor
ficoms
mov
xor
jle
xchg
pusha
nop
mov
add
inc
pop
cmpsb
pop
dec
das
mov
movl
mov
dec
decl
scas
jns
and
adc
jecxz
and
push
push
push
hlt
mov
or
mov
daa
lods
popa
mov
xchg
xchg
cmp
lods
sbb
inc
sub
iret
mov
stos
jg
jg
scas
movsb
jle
mov
sbb
insb
jns
cmp
mov
in
icebp
add
stos
nop
or
out
xor
cmp
lahf
dec
jne
inc
sahf
js
dec
sti
notb
movsl
push
scas
and
enter
cld
cmp
mov
pop
mov
dec
jns
push
popa
cmp
or
cs
sbb
xlat
sbb
iret
imul
cs
push
mov
dec
mov
push
jg
inc
fstp
or
and
xorb
jne
mov
xor
arpl
push
sahf
popf
sbb
fisttpl
push
xchg
mov
test
shl
push
les
jns
pop
sub
inc
cmp
push
testl
in
adc
pop
enter
mov
hlt
jge
hlt
sub
jmp
jmp
cmp
jne
jg
mov
test
dec
bswap
dec
mov
test
xchg
es
enter
rep
mov
push
xor
pusha
lret
movsb
hlt
pop
cmp
jb
push
out
imulb
xor
mov
mov
add
xchg
mov
push
aas
mov
or
lahf
lret
or
and
xchg
adc
or
cmc
repnz
pop
cmpsb
cltd
push
daa
adc
add
cmc
ss
mov
xchg
xor
ds
jmp
hlt
xor
mov
cmpsl
xchg
mov
inc
jge
aam
cmpsl
lcall
fimuls
popa
or
pop
sbb
in
xor
dec
ret
rorb
das
xchg
fimuls
xchg
and
adc
mov
clc
or
jmp
fwait
pusha
out
jmp
lods
cmp
stos
mov
cld
mov
push
out
pusha
sbb
inc
sbb
or
ret
add
movsl
stc
mov
dec
add
adc
mov
jl
inc
sub
ds
push
ds
add
outsl
jge
inc
test
sub
mov
movsb
loope
jmp
negb
dec
jg
fcoms
sbb
add
inc
arpl
lods
adc
mov
mov
or
incl
adc
adc
mov
push
cmc
pop
sbb
fnstsw
fdiv
jnp
ss
rorb
xchg
pop
pop
loop
lcall
sbb
cmpsl
stc
in
mov
cs
outsl
jp
movsl
mov
in
fwait
xchg
nop
push
add
cltd
movsl
fists
inc
mov
mov
int3
and
pop
sbb
pop
cwtl
dec
cwtl
stc
mov
xchg
push
mull
cmp
sar
faddp
sub
adc
movsl
jnp
adc
fisttps
inc
test
inc
in
mov
or
test
mov
test
int3
pop
in
inc
lods
data16
adc
push
cli
divl
mov
xchg
or
and
xchg
gs
stos
rcll
inc
mov
and
roll
dec
jg
shrl
loopne
mov
pop
mov
loope
imul
pop
add
filds
addb
jne
sub
dec
pushf
inc
sti
ljmp
lcall
push
mov
shll
lcall
ja
loop
inc
jle
xchg
fnsetpm(287
mov
xor
xchg
fnsave
stc
frstor
negb
test
addb
cmc
popf
sbbl
or
pusha
insl
lods
ret
test
xchg
les
or
jns
hlt
pop
pop
stos
mov
data16
mov
dec
mov
jo
daa
jne
fs
imul
les
das
das
mov
shl
add
leave
adc
outsl
mov
xor
ss
dec
loope
testl
scas
lret
jnp
pushf
push
or
iret
icebp
xor
lods
orb
xlat
lret
rolb
adc
inc
adc
popa
add
test
in
stos
or
cmpsb
pop
mov
xchg
hlt
movsb
mov
add
adc
cwtl
orl
movq
mov
mov
push
addr16
test
push
std
xor
pop
inc
pop
aad
push
pop
xor
stos
shll
in
aam
loope
pop
ljmp
pop
jp
or
xlat
jmp
pop
pop
mov
jns
xor
lea
aam
out
movsl
cwtl
hlt
stos
sub
clc
mulb
adc
mov
jl
pop
xchg
or
mov
popf
mov
repnz
fcoms
subb
movsb
mov
push
repnz
jl
leave
cmc
dec
js
jg
aas
stos
dec
mov
adc
into
idivb
xorb
dec
cmpsl
push
push
mov
fisubrl
jnp
outsl
adc
int3
pop
jo
jmp
pusha
jl
fldenv
mov
mov
adc
adc
add
xlat
test
aam
mov
or
jne
repz
inc
pop
inc
mov
mov
jae
or
lods
and
test
jb
addb
mov
jecxz
add
cs
xchg
pop
adc
jecxz
jmp
cmp
fs
sub
outsl
in
add
xchg
std
test
mov
repz
movsb
cmp
lock
sbbl
sub
push
mov
popa
cmp
and
pop
xchg
arpl
lods
mov
sub
rcrl
ss
jne
xchg
clc
hlt
or
mov
les
scas
mov
insl
xlat
shll
fcomip
adc
inc
xchg
sbb
sub
mov
in
mov
xchg
push
jp
jb
xchg
and
hlt
mov
ljmp
lods
es
add
or
sub
gs
or
xchg
leave
clc
fwait
sub
lods
push
cmpsl
push
fimuls
cs
jae
cltd
movsl
ds
inc
lret
call
jmp
mov
rclb
dec
mov
xor
mov
cmpsb
enter
cmp
pop
fmull
sbb
adc
and
loop
pop
nop
popa
lret
lods
jge
cs
pusha
push
fstpl
mov
bound
jne
lods
test
ficompl
xchg
iret
in
mov
jecxz
fidivs
inc
jnp
aad
movsl
mov
fwait
xor
xlat
in
add
or
jne
mov
and
mov
inc
cmp
pop
jnp
outsb
stc
mov
and
aam
test
mov
jns
incb
loope
jb
mov
call
repz
int3
movsl
inc
cmp
fdivs
loop
add
ljmp
add
jge
es
sub
mov
int3
rcll
test
mov
push
cltd
in
inc
adc
xchg
and
mov
inc
hlt
fs
pop
inc
out
jp
add
and
sbb
in
xchg
roll
jno
cmp
jno
jne
ret
hlt
loop
push
push
or
sahf
sbb
and
lret
loope
ds
mov
mov
and
inc
clc
daa
adc
int3
fs
aaa
stos
jl
movsl
shlb
sbb
and
ret
aas
jmp
cmpl
xor
aaa
mov
xchg
sub
arpl
push
in
clc
mov
std
xorb
test
adc
js
jp
cmc
push
sub
nop
mov
leave
cmpsb
push
rorb
cmp
leave
mov
mov
data16
sub
into
popf
push
sbb
adc
out
sbb
jo
shrd
imul
das
ficoms
repnz
xlat
addr16
out
dec
enter
xchg
or
adc
mov
mov
andl
clc
fistpll
adc
lock
push
sub
in
push
repnz
mov
add
enter
repz
pop
cmp
or
jne
outsl
iret
sub
clc
mov
add
push
mov
inc
loop
mov
jle
sbb
cmp
sub
sub
rcrb
mov
sti
sti
hlt
push
jg
sbb
cmp
mov
push
into
and
scas
mov
mov
daa
ret
pop
dec
pop
mov
insl
dec
testb
out
pop
mov
push
pop
stos
or
sub
mov
sbbl
movsb
mov
adc
ror
jge
inc
xchg
popf
xor
ror
stos
xchg
xorb
fdiv
rcrl
jno
test
in
adc
mov
call
nop
ds
shr
or
push
pusha
lret
jne
xchg
sahf
test
mov
jge
ret
ljmp
dec
push
cmp
or
xor
das
or
adc
jnp
divl
outsb
fs
mov
sbb
lods
imul
loop
jae
jo
jle
fnstcw
ljmp
push
and
ljmp
mov
imul
dec
jne
sub
or
aaa
int
fs
xchg
sub
fbld
movsb
cld
inc
ljmp
sarb
fs
repnz
ljmp
mov
repz
cmp
jmp
sub
cli
sti
cwtl
dec
test
fisubrs
int
mov
out
or
cs
subl
aad
je
jp
xchg
mov
mov
popa
cmp
sub
xchg
fadds
cmp
mov
inc
fcomps
fisttps
and
jle
mov
nop
in
stos
dec
das
or
mov
int
inc
mov
or
or
push
fs
icebp
inc
add
dec
mov
int3
into
fdivl
out
loope
testb
lcall
ret
mov
jp
nop
or
inc
dec
mov
push
push
enter
popf
lds
rcr
jl
sbb
mov
mov
cli
cmc
gs
shr
call
gs
imul
xchg
pop
mov
incb
rcll
in
jno
popf
lcall
lret
in
add
sbb
test
pop
std
fldl
cmp
mov
push
dec
cs
jmp
jmp
jge
xchg
int3
mov
mov
inc
add
loop
or
adc
sub
mov
sub
mov
cmc
cwtl
and
pop
loop
inc
cld
popa
push
jl
cwtl
xor
and
and
push
in
and
jp
or
or
rcrb
jmp
cli
inc
filds
push
add
in
pop
dec
xchg
movsl
mov
mov
mov
idivb
fcmovu
inc
test
jg
movsl
add
pop
fisubrl
mov
hlt
lods
cmp
mov
iret
sub
cmp
add
and
sahf
cli
ret
xor
jl
mov
enter
add
mov
mul
dec
jp
sub
out
decl
jb
std
xchg
lahf
add
xchg
push
add
loope
pop
notb
in
add
mov
popa
faddl
hlt
int
push
cli
std
cmpsl
in
mov
data16
hlt
aas
cltd
aam
mov
mov
mov
lret
inc
jne
adc
pop
out
ljmp
aas
scas
mov
mov
xchg
mov
and
sbb
cltd
shll
dec
rorb
loope
mov
repnz
mov
add
mov
mov
xchg
loopne
lret
or
in
or
push
repnz
fsubs
pop
leave
arpl
hlt
add
and
mov
neg
or
loopne
push
jne
movsl
jmp
test
adc
add
mov
fists
jmp
pop
or
dec
mov
inc
mov
rorb
mov
rolb
sub
mov
inc
mov
cwtl
and
lret
loope
imul
hlt
pop
rolb
out
jne
jl
lock
mov
push
xchg
adc
jg
mov
mov
add
push
xchg
lret
fsubl
es
out
outsl
add
jns
add
lret
xchg
mov
lds
jmp
sbb
sahf
mov
test
mov
push
mov
decl
shrb
fmul
mov
in
outsl
nop
aad
cmc
jno
int
out
push
test
shlb
xchg
push
jg
jno
test
jp
xorb
or
hlt
mov
lcall
mov
pop
inc
dec
sub
sub
mov
mov
cmc
les
adc
add
fldcw
cmpsb
push
in
inc
jl
aam
push
int3
cmc
jne
adc
xchg
pushf
mov
mov
loope
jmp
mov
push
subb
add
push
cltd
movsb
sbb
xchg
sbb
in
xchg
sti
subl
outsl
out
dec
jle
push
mov
lcall
xchg
pop
sarb
jge
hlt
or
stos
pop
in
xchg
outsl
dec
aaa
dec
jne
cmp
lea
cmovle
pop
push
inc
scas
push
adc
push
imul
out
inc
and
stos
mov
push
xchg
lret
iret
arpl
mov
into
insl
pop
jmp
inc
dec
cmp
test
xor
mov
test
subb
fdivr
sbb
jne
inc
mov
jl
stc
push
mov
shrl
pop
loopne
add
adc
ds
sub
rcr
mov
addr16
outsb
jne
sahf
lds
sbb
push
lret
scas
sub
dec
mov
mov
mov
bound
dec
add
cmp
jnp
stos
or
clc
add
dec
loopne
pop
cmp
mov
jne
pop
bound
ret
mov
ja
xchg
and
dec
pop
mov
sub
pop
in
lret
sub
lods
pop
sarb
jmp
inc
ficomps
jae
scas
pop
call
jbe
xchg
repz
cmp
lds
xchg
sub
cmpsl
hlt
inc
cmpsb
mov
cmp
stos
xchg
xchg
pop
hlt
mov
sbb
sbbb
mov
push
daa
int3
adc
mov
sub
dec
add
inc
push
mov
das
dec
test
out
or
mov
pop
jae
mov
pop
lea
aaa
add
sub
jne
mov
or
jns
jne
mov
ljmp
or
test
pop
cld
out
sub
shl
mov
scas
jbe
stc
hlt
in
mov
in
mov
ffree
jle
mov
push
add
sti
adc
sub
push
out
push
test
jns
fiaddl
jg
fstps
jns
popa
add
mov
pop
push
leave
xchg
push
and
inc
sub
add
int3
shl
fistps
mov
ljmp
les
rcll
popf
sbb
mov
dec
inc
repz
add
popa
mov
cmp
mov
lock
andl
mov
xchg
sub
fisttpl
lea
nop
lods
sub
movsl
jne
push
lret
fsubr
or
fcomi
imul
sub
rcrl
and
mov
jge
sub
xlat
xchg
jmp
fimuls
cmc
repnz
mov
repnz
hlt
adc
sub
add
enter
popa
jecxz
push
xchg
fldenv
sbb
cltd
test
sbb
hlt
andl
imulb
xchg
iret
hlt
push
sub
into
out
clc
dec
adc
push
dec
into
imul
or
roll
lock
out
cmp
or
sub
roll
mov
dec
inc
sub
call
mov
int
dec
bound
test
xchg
daa
mov
lock
ja
rcrl
call
imul
pop
sbb
iret
adc
mov
aaa
push
pop
mov
jo
or
mov
fdivrl
rcrb
cs
lock
sbb
mov
mov
test
mov
push
loop
mov
mov
mov
fwait
mov
roll
jno
rcr
loope
aas
test
adc
add
sbb
std
and
dec
sub
aam
or
faddl
sar
test
mov
stos
sbb
adc
std
ret
arpl
mov
jne
xchg
out
shrl
mov
dec
mov
xor
aam
jo
mov
mov
adc
sub
cwtl
mov
stc
cld
aad
lret
loopne
rorb
lcall
jge
add
int3
leave
subl
mov
sarl
roll
mov
inc
or
es
lret
or
loop
mov
adc
pop
ds
dec
add
es
lea
loop
popf
insl
dec
inc
sar
jno
fcoms
andb
aas
hlt
ret
adcl
xchg
aad
hlt
jnp
out
cmp
and
add
add
jns
adc
xchg
pop
xchg
cli
stc
es
pop
add
cmp
andb
push
mov
dec
js
ret
test
xchg
xchg
in
or
loop
mov
mov
fsubrl
and
fidivrl
mov
out
test
fbld
test
arpl
fcomp
fdivrl
jno
cmc
cltd
mov
hlt
clc
fwait
xchg
rolb
add
addb
or
cmpsb
jnp
test
mov
aad
loope
hlt
cli
dec
addl
fmuls
mov
lds
sbb
inc
out
pushf
lods
mov
icebp
pop
ja
mov
fdivl
and
std
mov
and
cld
in
or
jmp
cwtl
inc
fs
into
lods
neg
mov
rolb
bound
stc
ljmp
dec
aaa
add
cmp
pop
leave
jbe
push
loopne
jbe
and
mov
jmp
pop
dec
mov
imul
test
dec
test
push
pushf
jae
aam
and
xor
push
adc
and
add
mov
fsubs
insb
pop
mov
sahf
xlat
jge
mov
jg
inc
dec
xchg
hlt
and
jno
inc
mov
es
or
dec
lock
sarl
xchg
iret
inc
pop
sbb
repnz
ret
jp
add
movsl
xchg
pop
push
jb
cmc
push
inc
insb
pop
or
into
hlt
push
pop
add
xchg
xchg
je
rcl
insb
adc
sub
xchg
hlt
nop
inc
cld
inc
leave
js
or
nop
das
data16
imul
scas
push
aas
adc
mov
hlt
sbb
inc
fmuls
cmp
jnp
fmull
xor
mov
mov
adcb
jns
dec
sbb
xor
cmp
dec
dec
loopne
lods
enter
pop
sbbl
test
loopne
enter
es
mov
jmp
addr16
lcall
gs
mov
inc
iret
adcb
jne,pn
cmc
call
mov
mov
push
dec
stos
lds
and
mov
mov
inc
mov
lods
cmc
sti
addr16
cmp
dec
test
pop
mov
add
movsl
ret
inc
sahf
pop
outsl
xor
mov
or
jns
mov
adc
in
xchg
lods
push
cli
loopne
inc
push
stos
arpl
xor
push
push
fnstenv
dec
inc
xor
pop
sti
repnz
add
pop
es
test
push
gs
xor
mov
lret
ljmp
and
iret
cmp
xchg
arpl
sub
dec
xchg
dec
mov
push
lret
mov
ret
repz
mov
leave
jae
pop
xchg
cli
push
fiadds
data16
dec
add
mov
mov
aas
and
inc
test
or
add
lcall
data16
mov
add
hlt
adc
push
outsl
lret
orb
mov
pop
out
add
push
or
cmpsb
jnp
stc
jmp
andb
ds
mov
fsubs
pusha
adc
or
jl
test
or
loop
mov
test
sti
mov
push
in
or
mov
aad
ljmp
or
xchg
mull
divb
xor
mov
lahf
lret
lods
jne
scas
xor
lcall
push
les
incl
test
in
bound
mov
lods
cmp
ffree
jbe
xor
leave
add
cld
test
fildll
ret
mov
push
mov
xor
into
add
sahf
hlt
adc
inc
push
and
push
jb
xchg
inc
mov
dec
in
sti
lret
or
and
xchg
pusha
stc
dec
inc
jne
out
pop
xchg
xchg
ss
negl
or
int3
lcall
test
scas
push
cmpsl
or
inc
fnstsw
or
test
rcrb
add
jne
push
jns
mov
and
imul
mov
jl
mov
mov
push
fistps
push
ss
repz
inc
jp
sub
xchg
rcrb
jne
hlt
xchg
aam
data16
mov
popf
jle
jb
movsb
in
and
mov
pop
sbb
mov
mov
xor
arpl
or
fsubrs
arpl
inc
push
icebp
jb
roll
fistps
in
nop
or
xchg
pmuludq
sti
and
jecxz
and
lods
jne
xchg
std
mov
mov
inc
movsl
loop
cmc
jg
movsl
aad
je
mov
dec
mov
or
jmp
out
jo
jae
jecxz
push
movsl
xchg
fstps
inc
add
sbb
push
jbe
aaa
hlt
xchg
pop
lret
adcb
jmp
mov
inc
add
inc
int
cmp
ss
adcl
push
dec
lretw
dec
jecxz
mov
jge
xchg
std
loope
cli
jns
addl
cmp
xor
ficoms
and
gs
negb
adc
mov
dec
add
lret
call
movsb
nop
movb
pop
mov
adc
rcrb
cld
jp
jecxz
mov
int3
push
add
add
mov
and
add
xchg
push
xchg
insl
aas
cmp
pusha
dec
loopne
inc
pop
adc
je
jge
dec
imul
faddl
fcmove
jns
hlt
mov
sahf
add
push
das
iret
or
pusha
mov
js
add
push
xlat
aas
sub
pop
mov
mov
xchg
pop
loopne
adc
mov
cli
xor
mov
and
mov
enter
and
mov
push
out
xchg
mov
push
fwait
pop
dec
test
ret
cld
inc
out
and
dec
test
lock
orb
mov
jns
sbb
xor
xor
mov
movl
imul
inc
lds
lds
ja
rcll
mov
cmp
inc
mov
scas
enter
icebp
xor
and
and
int
cli
fiadds
adc
cmp
lea
jnp
aad
ljmp
mov
rcll
xor
and
enter
xchg
xchg
sbbl
push
aad
xor
pop
add
repz
in
movsl
aam
cmpsb
mov
ror
push
sbb
in
adc
out
or
jmp
mov
inc
inc
mov
icebp
ficoml
cltd
test
xchg
cmp
dec
mov
rcr
sbb
cmpsl
sub
cmp
cmpsl
iret
pop
cmp
loopne
xchg
dec
and
mov
mov
pop
mov
sar
int
or
lcall
loopne
roll
sub
gs
jp
mov
pop
ss
sub
lcall
jne
out
jg
xchg
enter
insl
inc
pusha
jne
lods
loop
hlt
mov
sub
nop
je
test
imull
pop
dec
movsl
pusha
cwtl
js
je
frstor
dec
cwtl
dec
xchg
mov
movsl
cmp
fistps
rcr
sub
sub
into
adcl
mov
mov
hlt
movsbl
in
jne
fsubrs
imul
adc
pop
int
cmp
andl
sub
sub
not
test
imul
aad
mov
jl
fildll
cmpsl
add
xor
call
xor
push
sbb
stos
dec
addl
pop
mov
push
lret
sbb
sub
mov
fildll
dec
sub
test
scas
mov
outsb
into
insb
and
rcrl
and
cmp
mov
pop
and
dec
jne
pop
and
and
cld
pop
pop
ljmp
or
fsubl
xor
lcall
cwtl
mov
or
adc
or
dec
xchg
movsl
inc
dec
jnp
into
inc
sarb
mov
push
ljmp
mov
scas
jmp
divb
insb
int3
pop
and
sbb
and
sub
mov
sbb
mov
pop
pusha
cmp
mov
aad
flds
inc
dec
sbb
rol
jne
mov
sbbl
mov
mov
xchg
jl
popa
mov
js
mov
inc
mov
jno
pop
jmp
jp
test
mov
jb
cli
pop
mov
mov
das
repnz
sub
and
enter
mov
add
push
das
rorl
lods
clc
popa
jns
inc
lahf
pop
cwtl
jge
hlt
mov
lods
cmpl
pusha
mov
clc
fs
mov
adc
fldenv
mov
lock
mov
stos
cmp
mov
pusha
mov
xchg
pop
int3
and
pusha
push
jge
mov
enter
movsb
subl
jecxz
sub
ss
mov
cmp
clc
movb
mov
gs
mov
add
mov
and
fistps
aad
mov
add
in
inc
outsl
and
jne
push
pop
or
test
jl
jmp
cli
fcmovnb
enter
sahf
mov
dec
push
jbe
in
sub
fwait
out
fldl
push
xchg
hlt
rcr
pop
enter
fcomp
cwtl
aad
out
insl
add
dec
pop
fs
outsb
add
fstpt
mov
sbb
mov
jnp
jbe
pushf
ret
lret
pop
push
mov
cs
add
stos
loope
or
or
pop
arpl
lcall
xor
mov
pushl
sub
cld
orl
dec
xchg
dec
or
add
and
mov
into
outsl
ss
and
jne
outsl
shlb
sub
add
ljmp
ss
xorl
imul
sbbl
mov
sub
mov
call
jmp
xorb
enter
mov
cmp
or
xor
xchg
xchg
out
scas
dec
add
xor
aam
rcl
and
or
mov
xor
sbb
lcall
pop
push
in
in
fmuls
mov
xchg
sahf
pop
mov
dec
insb
test
adc
std
sub
mov
or
xchg
adc
xor
je
movsl
pushf
lods
sub
inc
inc
scas
cmp
xor
fidivl
test
rorb
std
pop
lods
pop
and
pop
xor
inc
mov
movsl
push
les
aas
and
cs
scas
mov
mov
sti
mov
das
or
cwtl
mov
mov
jl
adc
xchg
js
sub
aas
cltd
pop
inc
mov
push
pop
enter
pop
ss
mov
adc
inc
enter
orb
inc
push
and
mov
push
push
mov
dec
sarb
cmp
push
sub
sbb
lods
iret
cs
jne
mov
push
push
dec
ret
mov
pushf
int
loop
inc
fwait
add
mov
in
popf
cli
mov
data16
cltd
mov
mov
nop
push
adc
hlt
cs
sarl
es
lret
add
sahf
lea
inc
sub
outsl
lock
mov
adc
xchg
add
jl
stos
out
xchg
mov
in
das
lea
mov
repnz
test
lods
sub
jg
mov
int
sbb
pop
hlt
push
lea
pop
fwait
repz
xchg
test
in
out
fmull
mov
nop
ret
adc
rclb
mov
pop
push
jp
shlb
dec
insb
lret
cmp
mov
sub
push
fcmovu
hlt
popf
bound
push
stos
iret
sub
inc
into
insb
mov
mov
mov
cld
dec
sub
mov
test
mov
push
dec
mov
ljmp
cmp
dec
decl
or
sbb
add
cmp
popf
test
jg
sub
push
mov
rcl
mov
pushf
mov
push
iret
mov
or
std
push
mov
rcll
jl
xor
sarb
push
mov
lret
movsl
mov
fdivrs
cmpsl
xchg
fnsave
dec
cmc
mov
mov
pop
testb
mov
cltd
enter
sahf
call
fdivrs
addb
inc
fdivrl
int3
fdivl
jle
mov
inc
mov
stos
pop
stos
cli
js
sarb
xchg
imul
xchg
cmpsb
pop
mov
adc
test
xchg
and
pop
add
scas
fucomip
scas
or
mov
add
push
rol
jl
add
testb
mov
jge
push
loope
mov
movsb
stos
scas
cmp
add
pop
mov
stos
daa
adc
jae
mov
std
push
mov
pop
cwtl
sbb
testl
add
xor
movsb
lea
sub
mov
dec
adc
mov
add
adc
xchg
test
sub
cmp
lock
mov
fstl
mov
movsl
or
and
push
mov
dec
adc
in
inc
sub
cmpsb
movsb
ret
cmc
imulb
add
ss
xor
cmp
jne
jl
arpl
push
test
out
mov
push
mov
inc
xchg
hlt
cmp
pop
lods
dec
loopne
icebp
hlt
fdiv
stos
add
enter
nop
out
pop
out
dec
mov
or
or
hlt
mov
fildll
jne
jno
into
in
int3
mov
dec
push
push
rcll
jle
pop
inc
mov
pop
adc
test
add
xor
mov
mov
mov
sti
orl
nop
cmp
or
int
push
popf
jne
sub
cli
stos
leave
adc
cwtl
enter
enter
fldl
cmp
mov
sub
pop
mov
sti
outsb
push
cmpsl
mov
ds
lret
cs
jbe
shrl
jb
lods
xchg
jo
loopne
mov
arpl
and
insb
ret
adc
popa
pop
lret
int
cltd
push
fiaddl
sub
shll
push
push
sub
scas
pop
cmp
lcall
adc
xchg
shll
stc
in
mov
mov
xor
push
hlt
insl
aad
pusha
jmp
shrl
inc
push
leave
mov
jge
sbbb
xor
adc
pop
cmpsl
pop
fcompl
pop
jne
cli
cwtl
sub
push
lahf
lods
jle
push
mov
out
pop
sub
sbb
pop
into
mov
xchg
xchg
xchg
inc
inc
xor
dec
cmc
mov
repnz
sub
xchg
stos
jl
sub
rep
xchg
lods
rorb
data16
mov
nop
andb
mov
mov
adc
leave
scas
push
les
mov
bnd
xor
pusha
mov
sbb
pop
or
in
shrl
imul
add
cmp
and
lods
int3
out
adcl
mov
inc
test
and
mov
jg
sub
sub
push
mov
lock
bound
insb
imul
std
enter
hlt
lods
pop
push
popa
pop
push
imul
adc
sbb
mov
iret
push
mov
adcb
repz
nop
out
nop
mov
add
xor
call
mov
popf
or
lret
push
dec
inc
sbbb
cli
cmp
inc
arpl
inc
stos
dec
in
outsl
dec
mov
rcl
mov
mov
jo
cmpsl
loopne
jne
push
xchg
mov
mov
sub
jb
out
jno
jp
addb
adc
loop
mov
add
in
rorl
mov
inc
int3
loopne,pn
test
adc
lret
and
inc
addr16
sub
pop
or
jmp
mov
add
subb
jmp
or
xchg
xlat
dec
add
insl
addl
lds
inc
push
mov
xchg
mov
mov
xor
decl
cmc
mov
mov
fstp
mov
add
shlb
shll
cmpsb
ret
aad
xchg
sub
jae
test
leave
test
ljmp
mov
mov
add
fiadds
inc
pushf
mov
fldl
ja
push
mov
inc
push
rol
xor
inc
jne
stc
insb
dec
jl
push
fstps
lock
mov
cltd
jg
das
mov
divb
test
das
sahf
adc
push
pop
or
and
leave
ss
jbe
lds
loope
push
fistpll
fiaddl
inc
push
out
inc
push
push
faddl
fucomi
add
add
out
pushf
test
and
rorl
sar
cmc
mov
and
fildll
in
subb
sub
ret
jp
add
or
sub
out
test
cmp
test
lea
imul
imul
rcr
xor
mov
push
xchg
int3
sbb
jne
xchg
mov
pop
imul
sub
and
push
cmc
hlt
hlt
xchg
movsb
rep
sbb
les
push
or
jecxz
pop
cwtl
xchg
jne
mov
mov
mov
mov
inc
icebp
jle
in
arpl
sub
ss
cmp
cmpsb
sbb
pusha
push
push
data16
movsl
test
add
stc
cwtl
inc
popl
lret
clc
hlt
mov
pushf
ds
scas
mov
daa
cmp
cmp
fs
jp
cmp
shrb
jnp
push
dec
mov
push
std
jo
mov
pushf
ret
push
cmp
pop
icebp
into
lahf
pop
data16
mov
lahf
mov
ja
lods
shrb
push
in
sub
mov
sbb
sub
sub
mov
dec
pop
jmp
test
cmp
sbb
hlt
cmp
pusha
jnp
add
mov
xchg
pop
jns
and
fidivl
or
test
icebp
insb
sbb
mov
negl
nop
dec
inc
jp
xchg
mov
or
lahf
out
insb
mov
jmp
cmp
xor
or
loope
out
addr16
add
pop
add
lods
sahf
xor
mov
les
je
je
xor
jmp
rcrb
mov
mov
add
sbb
add
cld
mov
mov
fdiv
add
xchg
jp
xchg
mov
jb
mov
inc
push
inc
cli
gs
sub
loop
cmp
add
pop
iret
nop
stos
xor
mov
mov
imul
and
cwtl
mov
and
sbb
cli
lods
or
insb
pop
ffree
jae
push
test
jecxz
movsl
or
sbb
mov
jo
pushf
add
test
js
jno
xor
in
add
inc
adc
mov
add
push
mov
mov
lret
push
inc
or
mov
push
rolb
pushf
lea
and
roll
jg
pop
adc
mov
roll
add
in
push
pop
imul
fwait
adc
je
jp
mov
es
lahf
rorl
add
bound
int3
movsl
pop
pop
popa
stos
cmpsb
hlt
xchg
xor
imul
xchg
mov
or
iret
bound
mov
sti
push
rcll
addl
xchg
cwtl
xor
push
fcomi
jae
jne
dec
sbb
mov
xor
stos
jne
jbe
test
pop
shl
mov
or
gs
frstor
xor
stos
shrb
sar
or
adc
push
inc
mov
mov
sub
loop
inc
mov
mov
xchg
sbb
fcoml
xchg
pop
and
jne
fstl
mov
jl
aad
fs
mov
adc
repnz
inc
add
and
loope
hlt
mov
lods
jne
jmp
xchg
testb
imul
fwait
sub
pop
std
rorb
and
mov
xor
mov
xor
mov
jne
xor
jbe
xchg
push
in
repnz
mov
mov
leave
aam
cmp
mov
aad
cmc
leave
fdivrl
in
ds
frstor
sahf
cmp
mov
sub
mov
mov
testb
pop
lea
lods
scas
test
inc
push
pop
mov
sub
jge
hlt
fimuls
das
mov
and
or
pop
xchg
push
sub
stos
jnp
xchg
or
rcr
les
dec
xorb
mov
cmc
adc
mov
test
mov
jge
push
leave
jo
xchg
add
data16
jne
jle
or
in
icebp
rcll
xchg
test
out
or
sbb
push
mov
cmpsb
pusha
lcall
inc
fsubrs
repnz
aad
sbb
adc
mov
push
adc
in
outsl
stc
lret
lcall
adc
xor
cld
adc
mov
fsubl
sbb
dec
mov
out
mov
pusha
mov
sub
shll
jg
xorb
pusha
or
fisubrl
and
aad
call
into
mov
jne
cmp
mov
arpl
xchg
rcl
shlb
mov
out
jp
scas
stos
cmp
inc
pusha
sti
mov
or
jle
or
repnz
mov
inc
fisttpl
aad
pop
into
imul
out
cltd
sub
cld
cmp
dec
cmc
les
mov
popa
dec
push
mov
movsl
ret
jae
aam
cmp
dec
sub
not
roll
dec
sbbl
push
add
mov
pusha
insb
or
out
add
cmpsb
jbe
pusha
jae
pop
adc
aas
mov
jne
mov
data16
shrb
cwtl
xchg
mov
stos
das
rcrb
jg
test
xor
mov
mov
int3
pop
jl
daa
adc
mov
cmc
test
pop
test
subb
shlb
stc
push
xor
add
pushl
sbb
push
mov
jns
pop
outsb
movsb
cmp
out
cmpsb
sub
mov
subl
and
and
lret
orl
xor
jo
dec
or
test
sbb
jbe
jp
jns
push
out
in
add
sbb
add
xchg
mov
and
movsl
test
scas
or
aad
loope
dec
or
adc
xchg
push
mov
outsl
lds
in
add
shr
cmpl
clc
lahf
int
in
rorb
rcrl
sub
fcompl
and
sbb
sub
test
lahf
stc
add
inc
sub
inc
mov
fsubrl
cmpsb
loop
mov
push
jne
dec
aad
mov
mov
jbe
int3
leave
je
xchg
lret
push
cmc
pop
push
xor
dec
test
and
gs
inc
addr16
icebp
sub
shrb
mov
mov
pushf
cmc
mov
enter
cmpsl
or
out
jne
xlat
mov
das
jge
inc
mov
nop
lcall
stos
pusha
sbb
adc
gs
jle
test
pusha
jb
es
lods
add
xchg
ret
fs
jl
push
pop
call
pop
jno
sub
mov
insb
jne
add
fildl
lea
test
jbe
cmp
pcmpeqw
in
mov
test
xor
jge
test
jge
fsts
xchg
insb
dec
lahf
in
data16
into
cli
adc
cmp
sub
adc
mov
sbb
pop
pop
and
pop
sub
and
repz
pop
subl
jl
mov
jo
sbb
push
push
sahf
mov
inc
add
mov
xor
push
hlt
sbb
push
sbb
pusha
mov
mov
dec
popf
pushf
insb
stos
loop
inc
lea
lods
jmp
or
repz
lahf
jne
sbb
push
add
cli
mov
incb
mov
movsl
out
mov
and
mov
bnd
mov
jmp
std
inc
orb
stc
xchg
pop
lods
movsb
push
add
rol
dec
or
fucomi
inc
dec
dec
xor
lahf
gs
addb
push
rorl
ljmp
shll
add
or
cmp
cmpsl
mov
pop
xchg
loope
enter
xor
into
es
cs
lods
add
insl
inc
push
dec
loope
adc
test
sub
xor
nop
test
dec
pop
dec
mov
xor
mov
mov
add
lock
cmpsl
cmpl
and
rcl
inc
or
xchg
mov
pop
fnstsw
out
or
sub
sub
adc
or
lods
inc
mov
mov
mov
cmpsl
xchg
xchg
das
mov
in
cmp
adc
test
push
arpl
mov
inc
cmc
gs
ds
xchg
icebp
jle
inc
imul
imul
mov
mov
sub
cmpl
pushf
mov
pop
rol
inc
inc
mov
subl
push
jmp
mulb
repz
add
mov
pop
mov
add
hlt
bnd
xor
das
outsb
mov
hlt
jmp
inc
pop
push
cs
ljmp
and
test
mov
mov
sbb
ja
xor
mov
or
out
fmull
iret
lea
popf
mov
sbb
das
outsb
sbb
aaa
gs
lock
inc
cmpsb
movsb
imul
push
sub
scas
and
push
aam
enter
mov
nop
inc
mov
mov
mov
into
inc
fldlg2
testb
xchg
hlt
xor
jnp
and
inc
jno
mov
in
push
bound
push
addr16
incl
mov
loop
clc
jae
sub
adc
sub
rol
lret
lock
enter
cmp
test
jae
dec
psubusw
mov
adc
jne
mov
mov
inc
clc
jmp
or
cmp
mov
push
xor
js
push
add
sub
pop
mov
out
mov
add
mov
lods
mov
icebp
loope
inc
outsl
dec
shll
ja
mov
mov
rclb
cwtl
cmc
std
leave
adc
jl
cmpl
fildll
jo
ror
or
movsl
frstpm(287
mov
pop
ljmp
jb
sub
xor
paddusw
mov
mov
sub
pop
push
loope
push
xor
shrb
dec
shrb
jbe
push
pop
mov
test
popf
fistpl
pop
push
and
mov
lds
add
mov
jle
sahf
arpl
xlat
loop
fsubs
pop
cmp
hlt
nop
cmp
imul
addl
lcall
xor
or
xchg
les
pop
pop
add
mov
xchg
inc
push
or
inc
stos
pop
rolb
cmp
xchg
pop
cltd
inc
xchg
or
pop
push
shrb
insl
add
jg
mov
enter
test
xlat
mov
xchg
add
mov
loope
and
jl
pop
mov
addl
or
popa
sti
pusha
les
ljmp
adcb
orb
xchg
push
xchg
sbb
jne
test
andl
mov
mov
sbb
or
pop
insb
and
xor
add
inc
inc
add
mul
fldt
stos
xchg
test
jnp
mov
mov
arpl
pop
and
aam
mov
imul
out
mov
mov
adc
xor
dec
cmp
lea
adc
xor
push
out
sub
mov
into
lods
test
add
jae
sub
mov
imul
jmp
push
leave
lret
sub
inc
stc
push
es
adc
push
nop
mov
xchg
in
add
xchg
rolb
pushf
rcl
mov
test
mov
dec
addr16
sbb
add
out
sub
mov
and
push
ret
mov
or
lods
dec
pop
movsl
jne
popa
popa
pop
hlt
sti
sbb
sbb
jecxz
sti
adc
in
subb
enter
nop
aad
cs
add
cwtl
sbb
stos
and
dec
mov
int3
adc
shrl
sub
sub
cmpsl
subb
adc
movsl
jno
jp
scas
jge
dec
fwait
sub
jecxz
int3
push
add
mov
sti
pop
push
lret
mov
pusha
test
aas
aam
inc
mov
or
adc
xlat
gs
stos
jmp
out
sbb
jo
inc
pop
lock
push
bnd
push
push
ss
lret
nop
cmpl
stos
hlt
rorl
add
and
leave
xchg
movsb
pushl
cmp
lea
sbb
xchg
jbe
adc
add
insb
scas
dec
imul
xchg
or
fiadds
jne
xorl
dec
into
sub
stos
add
ljmp
push
xor
add
in
mov
test
movsb
das
sub
out
adc
in
add
setb
stos
mov
fldl
mov
or
adc
xor
cs
divb
nop
and
dec
stos
lahf
fcoms
mov
in
fwait
dec
loope
cld
inc
add
mov
xchg
movsb
out
addl
mov
addl
inc
sti
pop
mov
jge
loopne
rcrl
or
dec
and
jo
in
jge
movsl
jns
idivl
test
fisubrl
jp
xchg
pushf
cmp
xchg
mov
adc
movsl
stos
add
leave
inc
lds
mov
fcoml
sbb
cmpsl
std
test
enter
jg
es
leave
or
imul
push
mov
adc
cmpsb
mov
mov
pop
repnz
dec
loop
or
push
dec
push
insb
and
cmpsl
stos
imul
out
mov
ss
jo
push
jnp
into
mov
sti
pop
and
add
pop
out
mov
xchg
lods
jecxz
mov
rcrl
xlat
decb
stos
cmp
or
adc
dec
mov
popa
jne
cmp
std
add
push
gs
push
add
inc
cs
mov
lret
ret
mov
adc
cltd
cwtl
inc
mov
and
inc
testl
push
or
xchg
mov
inc
pop
fnstenv
jl
sbb
js
mov
dec
push
mov
mov
lods
jg
pop
addl
movsb
mov
xorl
cmpsb
sub
mov
add
fnsave
jo
das
inc
pop
mov
sub
call
xchg
in
sbb
add
xchg
add
inc
pop
leave
xchg
leave
cs
fstpl
test
sub
inc
ljmp
push
jne
push
cmp
daa
xorb
aad
pop
sub
jne
adc
mov
loopne
movsl
mov
stc
jbe
fists
dec
fnstsw
push
lods
jo
add
in
sub
mov
lds
jns
inc
mov
mov
pop
dec
xor
leave
and
movsb
loopne
test
and
push
test
dec
jmp
push
loope
push
and
int3
mov
dec
insb
cs
push
adc
jecxz
pop
scas
aaa
adc
dec
mov
mov
jl
sub
test
leave
jae
scas
adc
test
add
das
push
inc
inc
jne
movsl
cmpsb
in
movsl
add
dec
mov
or
in
fidivs
scas
rorb
imul
add
hlt
scas
mov
push
call
hlt
imul
push
pop
aam
insl
pop
jge
arpl
int
pop
fisttps
push
xor
sbb
pop
adcl
xchg
inc
xchg
xlat
xor
iret
sub
xchg
ficompl
inc
enter
mov
sub
daa
mov
xor
xchg
das
dec
jne
scas
mov
pop
loop
push
enter
pop
popa
adc
pusha
sub
jne
loope
pop
lahf
movsl
sti
js
xor
pop
and
xchg
ret
int3
std
pop
and
insb
int
inc
jge
add
sbb
mov
jne
pop
imul
imul
in
cmp
lret
call
pop
xchg
insb
in
inc
jno
jo
hlt
xchg
int3
cwtl
inc
jmp
scas
jge
dec
rcr
adc
out
pop
and
out
pop
dec
cmpsb
lret
fadds
push
nop
lret
jg
push
cmp
lret
pop
dec
mov
imulb
mov
push
jne
hlt
xchg
xchg
lds
dec
aad
and
shr
jecxz
pop
enter
inc
ret
sbb
cmpsl
ret
jbe
mov
mov
loop
cmp
inc
imul
hlt
mov
test
loop
loop
cld
mov
rolb
mov
mov
xorb
cmp
and
lea
out
cmpsb
xchg
out
pop
sub
pop
rclb
xor
cli
leave
jecxz
jbe
or
out
fstpt
inc
xor
out
insl
push
push
adc
push
in
data16
fists
mov
jecxz
into
cmp
jge
lods
inc
hlt
or
mov
rorl
movsb
add
or
imul
aad
dec
bound
fs
cmc
mov
pushf
xchg
push
test
mov
aad
scas
ja
sub
push
lret
imulb
addl
mov
daa
mov
inc
inc
add
mov
jb
sub
push
test
sahf
test
add
sub
inc
mov
xorl
fisubrs
lahf
fbstp
ds
jp
jmp
test
subb
inc
cmpsb
jne
mov
mov
scas
mov
andb
pop
sbb
push
pop
mov
test
roll
push
jl
cmp
and
xchg
pop
aas
jne
cmp
cmc
nop
lcall
inc
push
arpl
add
pop
sbb
repnz
lahf
inc
xorl
mov
mov
outsl
or
ss
stos
lock
popl
adc
xor
jg
cmc
iret
clc
or
xchg
es
mov
jnp
movsl
test
arpl
sub
rolb
ficompl
mov
hlt
push
and
lret
cmp
int3
ja
inc
jecxz
out
jge
leave
icebp
ss
mov
and
div
addr16
iret
outsb
xor
test
enter
adc
into
cmp
insl
fistl
shrl
lret
cmc
outsl
loopne
mov
or
adc
adc
cmc
daa
dec
xchg
out
in
add
mov
add
fwait
pop
insb
xchg
mov
push
into
adc
adc
addb
movsl
out
adc
sbb
add
adc
inc
mov
and
jb
popa
fdivl
jb
stos
into
pusha
mov
or
std
mov
sub
mov
dec
rorb
je
lods
nop
repz
out
mov
or
rorl
fs
lret
pop
shrl
fadds
enter
jp
cmpsb
idivb
mov
fucomip
loope,pn
arpl
mov
add
mov
or
lret
and
cmpsl
cltd
xrelease
nop
adc
hlt
in
loopne
adc
sub
cmpsl
dec
jge
cmpl
and
cmpsb
int3
inc
sbb
lret
enter
pop
popl
mov
shlb
les
data16
filds
cli
xchg
int
pop
mov
mov
pop
sbbl
test
scas
scas
mov
test
sub
inc
movsl
nop
js
jecxz
xchg
mov
test
xor
sbb
push
nop
pop
inc
inc
ret
and
cmp
data16
jmp
xor
jl
ficomps
mov
imul
pop
dec
mov
mov
sub
testl
es
or
pop
mov
orl
dec
stc
jbe
or
pop
lret
jnp
xchg
push
jns
dec
jge
insb
sbb
pop
shlb
fnstenv
jo
cmp
add
ss
mov
or
xchg
lcall
aas
xor
jne
popf
jns
mov
inc
ret
cmp
add
iret
mov
jo
lods
nop
sbb
inc
leave
cs
addb
dec
mov
mov
sub
sub
int3
lds
jecxz
sbb
leave
xchg
jne
adc
cmc
xor
shll
test
sbb
add
mov
mov
add
dec
push
cmp
dec
andl
mov
inc
xchg
int
cs
mov
movsl
adc
sub
push
insb
pushf
mov
scas
adc
push
adc
sbb
call
js
rolb
push
add
div
loop
std
pop
jb
add
push
repnz
into
pop
mov
repnz
mov
add
out
push
or
fxch
inc
clc
xchg
scas
push
dec
or
icebp
cmpsb
cmp
mov
sbb
add
sub
into
push
leave
incl
movd
fprem
and
mov
jns
insb
mov
gs
mov
lock
inc
mov
in
psubw
ja
cli
nop
sti
jmp
test
loope
clc
dec
cmpsb
lcall
mov
push
and
adc
or
andl
inc
mov
mov
sbb
jne
jmp
dec
fcmovnb
push
hlt
and
popa
inc
or
jno
orl
add
int
andb
fidivs
mov
data16
movsl
xor
out
mov
andb
in
test
lds
daa
fimuls
lods
jnp
add
sahf
icebp
adc
cmp
inc
mov
pop
push
frstor
push
jmp
pop
cs
imulb
and
jl
adc
frstor
or
mov
mov
and
movsl
data16
mov
pop
jno
mov
dec
insb
hlt
mov
mov
jge
mov
mov
push
lods
into
cmc
xor
inc
fiaddl
or
mov
movsl
push
cmp
loopne
jmp
mov
pop
loope
in
inc
test
pop
xchg
xor
xchg
mov
or
jb
adc
cmp
mov
inc
fisttps
es
addr16
rorl
shrb
fsub
push
mov
lahf
stc
outsb
push
add
jecxz
jmp
push
rolb
outsl
imulb
das
sub
adc
les
notb
adcb
ljmp
lea
std
adc
add
cltd
pop
add
into
mov
sub
inc
adc
test
stc
in
and
mov
sbb
mov
lods
sbb
call
outsl
lret
hlt
jg
insl
adc
nop
mov
test
jns
lods
xlat
in
mov
and
lret
imulb
mov
xchg
aaa
push
jbe
imul
xchg
ja
adc
jae
ret
int
out
xchg
iret
xchg
shrl
test
add
push
push
fwait
testb
pusha
pop
leave
test
cmpsl
decl
jne
stos
inc
int3
mov
xchg
sbb
mov
sub
adc
jne
xchg
fstpl
ljmp
cmpsb
or
jle
jae
add
movsb
xchg
fcomps
cmpsl
movsl
lcall
add
inc
pop
xchg
pop
xchg
xchg
test
inc
jp
bound
ss
rcll
fwait
scas
xchg
mov
push
mov
inc
rolb
icebp
sbb
pop
mov
mov
pop
in
test
outsb
add
xor
lgs
inc
add
xor
aam
inc
mov
cmpsb
adc
int3
or
push
jle
jg
shlb
mov
jmp
mov
dec
xor
lods
sbbl
mov
icebp
or
xor
mov
push
nop
mov
mov
and
addl
and
sbbl
popf
ret
repnz
popf
jge
add
lahf
shl
addb
sub
shlb
divb
std
mov
dec
xchg
push
inc
jno
mov
adc
sub
xor
in
mov
pop
adc
jg
inc
pushf
adc
daa
mov
pop
mov
fistps
pop
cld
mov
adc
hlt
test
lds
xor
jmp
in
sar
es
or
divb
fsub
xchg
inc
int3
in
pop
fdivs
nop
inc
daa
jne
pop
push
xchg
add
notb
data16
xchg
jg
je
pop
mov
repz
test
pop
add
cltd
nop
cli
enter
dec
cmp
lahf
out
xchg
icebp
xchg
push
jmp
or
ljmp
sub
pushf
mov
xchg
mov
pop
ds
jle
mov
sub
cmpsl
dec
pop
rorl
test
enter
or
stos
adc
in
pop
stos
loope
hlt
aad
addl
int3
pop
scas
cmpsb
add
data16
inc
jl
mov
sbb
dec
sub
dec
movsb
fstpl
inc
ds
pop
jmp
jecxz
mov
mov
xchg
mov
test
loopne
dec
scas
call
ljmp
mov
inc
ds
xchg
pop
or
cmp
xor
es
mov
test
or
daa
test
shrl
imul
inc
aad
inc
repz
pop
and
loopne
inc
leave
cwtl
lret
lcall
rolb
dec
cmp
test
pop
adc
adc
and
jmp
and
mov
and
movsb
push
add
std
aas
shlb
jne
lods
loopne
mov
xchg
mov
dec
xorl
mov
pushf
pushf
sub
in
scas
sahf
hlt
jnp
xchg
sarb
push
fs
test
mov
std
adc
loope
cmpsb
inc
addl
out
xchg
es
addr16
xchg
inc
cmp
adc
xor
stos
jne
adc
inc
pop
popa
cvtps2pi
test
add
push
inc
inc
and
aam
jmp
or
xchg
inc
push
jb
sbb
out
inc
mov
jo
bound
and
fdiv
xchg
div
xchg
push
nop
fisttpl
imul
cmpsl
adc
mov
lahf
xlat
xchg
jb
sub
scas
mov
add
and
rcl
or
cmp
jne
jbe
hlt
lock
ret
add
aam
dec
dec
jnp
std
add
sti
sub
mov
pop
xor
ss
sti
and
ja
xchg
neg
int
loope
add
push
roll
or
sub
xor
pop
inc
dec
arpl
inc
scas
addr16
es
sub
movsb
mov
bound
fldl
hlt
push
fwait
push
mov
movsl
cld
cld
pushf
jmp
hlt
jo
dec
imul
fidivs
loopne
inc
pop
out
js
sbb
lret
into
loopne
ds
hlt
movsb
cmp
arpl
pop
std
xlat
inc
lahf
nop
sarb
pop
andl
mov
sub
adcb
movsl
in
cmc
in
mov
mov
sbb
cmp
pop
pushf
adc
dec
sti
xlat
sub
mov
cmc
push
push
xchg
mov
sar
xchg
int3
nop
in
jne
and
sub
sub
loop
cmc
stos
jle
push
repnz
inc
enter
add
sbb
movsb
shlb
mov
out
adc
jg
jbe
mov
inc
cmpsl
sub
ds
movsl
mov
in
dec
enter
inc
cwtl
mov
mov
sahf
xor
add
pop
xlat
cwtl
pop
lahf
clc
popf
xchg
xchg
adc
clc
inc
sahf
pop
pusha
dec
and
stos
xchg
push
or
cmp
hlt
xor
xchg
out
test
rol
int3
sti
mov
nop
pop
push
xchg
outsl
rolb
xchg
dec
mov
or
jb
mov
cltd
stos
inc
cmp
orl
insb
jecxz
iret
push
cwtl
and
sub
and
mov
repnz
mov
add
scas
lods
insl
movsl
adcl
cmc
mov
cwtl
flds
shrl
loopne
fildl
clc
xor
testl
xor
mov
dec
enter
movsl
test
mov
mov
sbb
add
in
cmp
es
push
adc
cli
push
mov
mov
sub
mov
xcrypt-cfb
cmpsl
in
mov
nop
icebp
mov
rcrb
pop
or
hlt
sbb
int3
loop
es
jl
xor
cs
dec
xorl
mov
mov
jae
roll
lret
push
sub
roll
mov
jb
gs
int3
lret
stos
pop
hlt
xchg
xchg
pop
push
rcr
xor
shll
xor
or
push
dec
movsl
xchg
imul
stc
sbb
dec
repz
cmp
push
pusha
cli
jae
mov
dec
rol
mov
rolb
scas
call
pop
lods
sub
adc
test
lods
mov
inc
mov
out
mov
mov
pop
pop
push
and
addb
jg
mov
cmpsb
stos
inc
testl
imul
jl
lcall
and
enter
aaa
lods
jne
nop
push
inc
pop
fisttpl
jg
push
call
loope
jne
outsb
loop
mov
push
jmp
in
data16
xchg
cmp
mov
cs
pop
sti
add
jb
fcmovu
xchg
or
dec
loope
sbb
fisubrs
xchg
pop
mov
jle
dec
icebp
shrb
pop
movsb
xor
xchg
sub
movsb
int
lcall
andb
cli
imul
lds
cmp
dec
neg
inc
inc
stos
jnp
add
pop
dec
lods
das
mov
push
mov
icebp
clc
mov
pop
lahf
add
adc
arpl
std
rol
lret
leave
push
hlt
mov
xor
int3
mov
into
int3
add
inc
mov
dec
test
mov
mov
mov
add
fstpl
aam
loope
sub
push
jmp
mov
inc
xor
pop
popf
ljmp
jne
das
push
outsl
leave
pusha
mov
inc
pop
jnp
fisttpll
std
pop
push
mov
roll
imul
pop
xchg
imul
sti
add
jecxz
and
hlt
xchg
out
rolb
add
mov
popa
jle
adc
adc
mov
subb
inc
cs
and
scas
sub
rolb
test
add
mov
pop
ja
pusha
xchg
test
adc
test
jb
or
add
pop
push
push
popa
les
mov
repnz
subl
mov
js
mov
adc
hlt
mov
pop
inc
jecxz
sbb
dec
pop
sbb
xor
dec
mov
jp
mov
and
retw
sub
adc
jmp
in
add
cmp
fnstenv
mov
push
adcb
mov
jp
cltd
scas
mov
cs
inc
sub
mov
push
and
test
fadd
lret
push
inc
lret
push
push
cmp
cs
addr16
pop
fsub
xchg
mov
add
test
xchg
hlt
mov
into
mov
inc
jmp
sbb
jne
add
cmp
add
inc
inc
cwtl
cmpsb
push
pop
xor
sub
mov
out
test
cs
shlb
dec
lret
ret
xchg
jne
loope
aas
jmp
mov
or
xchg
hlt
sub
fists
sub
scas
in
sub
push
in
jmp
fs
xchg
fiaddl
sahf
inc
pop
ret
sarl
push
mov
call
test
add
jle
inc
stos
cmp
inc
lret
mov
mov
stos
xor
dec
jecxz
sti
jmp
add
xchg
mov
shl
xor
jo
or
lret
mov
sub
dec
jbe
mov
mov
cmp
popa
xchg
aad
cmpsl
fidivs
xor
lret
and
jmp
mov
sub
push
and
mov
ss
and
or
cmp
push
fwait
mov
adc
or
into
scas
or
fimull
adc
sbb
into
les
mov
daa
icebp
ret
ds
ljmp
sbbl
pushf
xor
mov
iret
adc
lret
pop
sarb
mov
femms
insb
mov
loope
pop
cmp
jg
inc
cmpsb
sbb
push
into
rcrl
xchg
pop
aas
mov
mov
lret
jnp
subl
mov
int3
rcr
outsb
jne
lcall
es
enter
jne
and
jg
xor
iret
arpl
hlt
pop
sub
fst
mov
mov
leave
ffreep
inc
mov
sbb
jmp
cmp
andb
lahf
data16
xchg
lret
sub
inc
mov
inc
clc
pushf
lahf
movsb
test
or
jbe
mov
fsubrl
xchg
mov
js
or
inc
aaa
fsubs
sbb
je
hlt
pop
lret
dec
stos
aad
sbb
mov
lea
inc
lret
loop
sub
jmp
cld
mov
lcall
jb
jno
mov
inc
add
inc
pop
shrl
xchg
add
popf
add
mov
aad
push
call
outsl
xchg
and
fs
call
test
mov
cmp
lcall
scas
fisubrl
fcomp
mov
mov
inc
dec
adc
frstor
repz
insb
xchg
shrl
mov
mov
and
jbe
jne
and
pop
adc
mov
push
ret
repz
xchg
inc
add
pop
andl
stos
xor
jecxz
cmp
dec
or
jns
dec
sub
and
xor
das
out
push
push
imul
sub
aad
xorb
sub
ja
mov
and
mov
mov
lods
into
mov
jbe
adc
mov
gs
dec
test
fisttpll
mov
mov
hlt
jge
add
mov
xlat
jnp
push
pop
sub
test
testb
insl
test
dec
std
add
jl
mov
test
pop
inc
clc
sbb
lahf
jno
and
add
mov
out
pop
stc
pusha
rcrb
mov
stos
sub
out
dec
add
shl
pop
lret
or
sbb
repnz
xor
addl
or
jnp
lea
pop
pop
out
and
sbb
xchg
aam
mov
enter
int3
shll
sub
or
push
xchg
out
lahf
lock
arpl
lods
hlt
smsw
stos
in
or
jg
movsl
cmc
adc
test
jb
xchg
sub
dec
add
mov
aas
mov
shl
ljmp
gs
push
xor
subl
mov
inc
sbb
mov
daa
dec
bound
mov
mov
sub
stos
out
int
out
out
mov
inc
dec
cli
lret
hlt
xchg
js
cmp
cmpsl
jb
push
mov
shr
pushf
inc
les
cli
dec
fucompp
adc
mov
cmp
jo
mull
das
mov
loope
push
rcll
fstl
scas
cmpsl
out
inc
popf
int
cmpsl
xor
aam
xchg
jecxz
jl
mov
jno
xchg
xchg
lcall
in
fistps
cltd
mov
jnp
pop
mov
cwtl
in
fcomps
es
inc
fists
xorb
iret
and
pop
out
mov
clc
decb
mov
or
adc
rol
and
rorl
cmpsl
xor
adc
icebp
hlt
fsubr
mov
insl
mov
fisubs
dec
mov
cmpsb
icebp
mov
mov
adc
shrb
es
test
mov
stos
stos
mov
jg
shl
jp
fcmovnu
ret
js
cmp
add
inc
in
pop
fisubrs
popf
leave
fwait
outsw
add
les
insb
imul
test
ret
lods
xlat
adc
cmp
lods
push
ja
fldenv
mov
sarl
pop
add
in
xlat
mov
cwtl
jmp
dec
jmp
mov
push
cmpsl
es
aas
and
insb
dec
inc
xchg
jae
push
push
sti
inc
movsl
adc
addb
jo
jge
js
rclb
push
sbb
test
fldl
jo
scas
pop
leave
lds
xchg
sti
push
sub
sub
sub
orb
inc
sub
test
out
pop
mov
rolb
sbb
mov
xchg
dec
test
push
vfmsubadd231pd
scas
lods
pusha
ficoms
mov
in
or
xchg
xlat
xchg
popa
xorb
dec
fdivs
push
add
out
push
sub
sbb
stos
into
stos
xor
les
mov
sub
enter
repz
inc
iret
xor
push
cmp
xchg
add
inc
pop
daa
sahf
adc
imull
clc
movsb
push
inc
xchg
add
inc
pusha
mov
std
pop
ljmp
pop
mov
lock
insb
repz
cmc
jne
jnp
cmpsb
rcll
cltd
out
cmc
loopne
mov
fsubl
jmp
pop
xchg
sub
icebp
inc
out
sub
daa
mov
aad
inc
xchg
loop
scas
movsb
loop
and
push
mov
stos
sti
mov
lret
popf
sbb
rol
out
xorl
push
dec
cmp
dec
lds
cltd
cmc
mov
dec
cwtl
mov
xor
pop
adc
hlt
mov
fcomip
loope
fadds
lds
repnz
jae
jg
ret
cmp
stos
mov
icebp
add
adc
dec
cltd
cld
mov
xorb
dec
dec
xchg
mov
outsl
push
out
lahf
test
mov
mov
lcall
pop
hlt
enter
mov
out
sti
aas
shll
add
and
sub
pop
mov
scas
and
stc
add
lret
out
push
rol
xor
jbe
adc
pop
insb
mov
sbb
aaa
stc
xlat
mov
xlat
push
stc
cwtl
stc
xor
pop
cmpl
sbb
mov
cltd
xchg
shl
outsl
mov
mov
outsb
dec
pop
mov
sub
and
pop
scas
xchg
mov
ret
mov
jmp
pushf
dec
fdiv
rorl
loop
or
fmull
jmp
adc
pop
mov
or
mov
push
orl
adc
mov
xorb
xchg
cwtl
lret
stc
jmp
mov
jns
sahf
andb
mov
dec
cmp
inc
call
outsl
add
adc
mov
inc
aam
sub
test
dec
cmpl
ret
clc
mov
or
cmp
add
pop
xor
pop
fcmovnbe
sub
out
dec
cmc
dec
mov
mov
mov
add
insl
orb
fnstsw
movsb
pop
mov
lods
mov
lret
mov
sbbb
ret
stc
and
xchg
aam
pusha
adc
push
les
rolb
mov
hlt
inc
mov
movsl
adc
xlat
fs
sti
movsl
negl
fiadds
dec
xor
jb
dec
rorl
icebp
mov
and
test
in
rolb
lods
ficomps
xchg
or
rcrl
icebp
mov
dec
dec
cmpsb
test
add
push
sbb
mov
or
ljmp
mov
push
jno
movsl
ds
std
push
gs
iret
outsl
xchg
cmp
xorl
and
jne
addr16
lds
dec
dec
or
out
aam
adc
test
or
cmc
sti
dec
and
cmp
mov
push
mov
push
fwait
push
adc
sub
inc
push
pop
mov
inc
pop
xor
jmp
call
and
mov
mov
inc
inc
out
shl
cmpsb
loope
xchg
addr16
dec
mov
sub
xorl
les
lret
cmp
or
scas
mov
inc
fisttps
test
je
xchg
out
push
cli
lret
fnstcw
mov
mov
loop
xor
lods
lret
mov
std
hlt
and
fildll
lock
test
mov
stos
xchg
loop
jg
push
xchg
adc
add
push
mov
loopne
lods
dec
mov
push
mov
stc
shrl
ret
jl
xchg
int3
add
arpl
mov
popa
mov
test
sub
cwtl
add
out
mov
add
out
addb
dec
fisttps
dec
xchg
inc
xor
mov
jb
scas
mov
pusha
nop
stc
jno
pop
mov
lret
in
shll
rolb
pushw
jne
in
mov
pop
mov
sub
mov
out
std
fwait
scas
adc
mov
nop
adc
xlat
push
xor
cmp
xchg
cltd
dec
lods
xor
mov
add
sub
adc
jns
stos
hlt
inc
fnstsw
push
mov
pop
test
xchg
push
int3
jne
cs
cld
dec
insb
icebp
loop
std
pop
dec
push
enter
notl
push
incb
in
mov
cmp
leave
inc
aam
fnstsw
sub
cwtl
pop
xor
add
sub
push
sarb
lods
enter
in
pop
fwait
xchg
out
aas
in
int
xchg
xchg
xor
or
add
pop
and
cmp
cmp
mov
sub
aad
mov
dec
daa
aam
lock
sbb
iret
cmp
pop
dec
push
xor
inc
ljmp
stc
insl
add
inc
out
push
in
movsl
cmp
sub
mov
jmp
arpl
fidivrs
scas
xlat
adc
outsb
sbb
sti
jmp
rorl
leave
shrb
push
out
lret
inc
dec
mov
in
cmp
hlt
add
popa
mov
jne
or
insl
pop
sahf
dec
nop
xor
add
cmc
xor
xchg
enter
sarb
test
mov
pcmpeqw
gs
cmp
jae
mov
pop
adc
jns
das
sbb
push
push
fdivrl
mov
fucom
lds
mov
mov
dec
push
shlb
and
pop
sbb
cmc
into
sub
sbb
jmp
iret
aam
jne
jno
push
add
mov
dec
xchg
sti
insb
xchg
sbbl
scas
stc
adc
pop
shr
xorb
test
stos
fdivr
cwtl
mov
xchg
push
inc
and
gs
daa
test
aas
and
adcb
cmp
sahf
push
jne
movsb
xchg
test
sub
cmp
iret
and
cmp
cmp
adc
cltd
push
add
enter
add
push
mov
mov
inc
test
std
add
js
mov
aad
lods
pop
pop
faddp
mov
add
popa
lret
jne
mov
dec
or
sbb
add
daa
xchg
mov
jmp
andl
aad
ljmp
push
lahf
adc
aad
lret
scas
mov
int
negb
scas
xor
lret
mov
mov
cmc
cmpsl
xor
leave
sbb
ja
sub
pop
sbb
pop
stos
arpl
stos
les
daa
in
es
in
fstpt
popa
xchg
push
loop
or
or
add
in
daa
xchg
or
leave
add
or
push
or
in
fcmove
inc
cmc
les
xchg
fmuls
and
pop
inc
les
into
enter
test
mov
mov
rcl
scas
xchg
mov
dec
inc
jg
jg
pop
mov
repnz
mov
mov
cmp
fwait
repz
iret
jo
es
inc
fiaddl
fcompl
ret
jg
aaa
fisubrs
and
outsl
pop
inc
stos
jnp
dec
test
sbb
repnz
mov
inc
jne
cmpsb
mov
rcll
lods
shlb
sarb
add
jecxz
addr16
mov
pop
icebp
in
movl
or
push
ljmp
jns
int
xor
stos
cmp
fcmovb
data16
popa
push
gs
divl
sbb
in
scas
ljmp
adc
enter
lret
push
pop
mov
and
sub
sti
sub
scas
fmuls
pop
outsb
movsb
es
and
lods
cmp
push
in
mov
int
cwtl
sub
in
rorl
jns
outsb
add
in
jmp
inc
pop
in
jmp
fisttps
aas
int
outsl
add
repz
add
inc
in
and
cmp
push
mov
sbb
imul
mov
fs
push
pop
xchg
xor
enter
popa
cmp
push
cmpsb
xchg
mov
jne
inc
mov
push
push
aam
push
rcl
nop
pop
mov
jne
add
loopne
mov
mov
jnp
or
inc
jp
mov
pop
fbld
testb
test
cld
sub
mov
movsb
add
adc
jp
adc
adc
fstpl
leave
jge
push
or
hlt
leave
xorl
scas
mov
dec
or
rol
cmp
or
mov
and
lcall
xor
cld
push
daa
inc
cld
inc
repz
inc
nop
je
out
aam
push
imul
lea
inc
fistps
jno
and
cwtl
jmp
lods
in
sub
insb
inc
pop
sub
add
gs
xor
addb
pusha
jge
inc
jne
cmc
add
loop
cmp
mov
sbb
in
sbb
std
gs
sub
ret
inc
jo
or
sub
mov
inc
ja
xlat
ret
sbb
pop
test
call
in
mov
mov
cmc
popf
jecxz
out
dec
test
push
mov
leave
js
test
inc
or
jecxz
push
mov
jne
xchg
pop
jecxz
add
cmpsl
andb
mov
sahf
stos
sub
mov
pop
and
lahf
xor
sbb
mov
sbb
push
adcb
out
jne
jp
inc
mov
mov
test
std
mov
or
out
iret
push
cmp
xor
jno
mov
into
or
cli
mov
add
sbb
push
rcrb
shlb
movsb
xchg
cmpsb
jne
cmp
xlat
lods
pop
sahf
mov
xorl
add
mov
dec
add
jne
bound
fadds
or
out
xor
call
gs
mov
push
ja
hlt
mov
subl
xchg
mov
or
pop
cli
xchg
mov
xorb
cli
mov
pop
sarb
or
int3
lret
rcll
mov
mov
jbe
out
mov
adc
push
scas
sub
movsl
out
xchg
add
cmpsl
cld
rolb
in
add
jecxz
shlb
pop
daa
adc
hlt
repz
arpl
xchg
jge
aas
or
rolb
jne
ljmp
fsubrs
inc
xor
das
xchg
jecxz
cwtl
sub
data16
rol
add
adcb
loope
stos
cli
mov
lods
fs
fstl
sub
adc
inc
das
mov
push
pop
insb
sub
fsubrl
xchg
mov
cmp
movsb
cli
imul
ret
shrb
movsl
pop
lds
cmpsb
mov
enter
cmc
or
mov
out
test
add
dec
push
rcl
out
inc
lods
icebp
movsb
inc
mov
mov
hlt
pusha
sbb
add
lcall
test
xor
xor
mov
ljmp
mov
adc
out
dec
cmp
inc
pusha
and
lret
sbb
cld
aam
add
cmp
mov
jl
rclb
or
test
lods
mov
mov
fdivrl
cmpsl
xor
aad
sbb
dec
cwtl
mov
sub
sub
sub
test
xor
sub
stos
leave
cmpsb
and
push
fdiv
or
push
xor
add
dec
stc
push
mov
pop
icebp
cmp
enter
inc
movl
xchg
sub
cli
xor
sbb
lea
mov
sub
cmp
dec
in
jmp
xchg
sbb
fstp
rep
mov
fchs
mov
xchg
xor
adc
push
adc
in
mov
jnp
pop
lods
mov
push
ss
enter
rcll
mov
outsl
cmp
shlb
sub
leave
std
add
shrl
cmc
mov
shll
decb
jnp
mov
ss
xchg
enter
push
cmp
add
call
cmp
out
pop
in
les
cs
pop
mov
inc
sahf
hlt
cltd
push
mov
stos
inc
stos
xchg
nop
leave
lds
hlt
jge
mull
dec
sub
loope
pop
aaa
arpl
bound
sub
inc
sbb
ret
enter
ljmp
xor
adc
lea
and
das
adc
adc
adc
pop
fisubs
or
jno
lock
inc
sbb
hlt
sub
cmp
sub
add
mov
adc
cli
mov
ja
adc
sub
pop
xchg
jne
dec
ljmp
fidivrl
mov
add
xor
inc
pop
push
or
push
outsl
add
inc
leave
in
pop
stc
popa
add
dec
cmpsb
xchg
dec
cmp
mov
dec
mov
adc
sarb
pop
jno
mov
jo
dec
mov
xlat
mov
fiaddl
ret
mov
xchg
add
inc
arpl
push
pop
pop
push
xlat
mov
xor
inc
sub
xchg
ds
out
push
mov
lret
push
hlt
push
mov
pop
loopne
mov
getsec
push
pop
mov
cmp
mov
fwait
bound
out
add
rorb
lock
sbb
or
ljmp
dec
aad
and
cmp
adc
jge
cmp
arpl
cltd
fsub
mov
mov
movsl
mov
mov
imul
lock
xchg
popf
mov
cmp
cmp
enter
pop
in
jle
cltd
daa
xchg
mov
jo
jo
xchg
mov
ja
xchg
divb
mov
or
pop
shll
mov
jb
push
loopne
mov
les
xor
fldenv
loope
lcall
xor
push
das
mov
iret
stc
lock
rorl
or
sub
aam
jmp
push
jmp
xchg
xor
sahf
jo
cwtl
mov
loop
addl
outsl
mov
pop
and
fcoml
int3
mov
stos
xor
pusha
xor
insb
loopne
fstpl
or
rcll
inc
pop
jmp
add
dec
jo
add
popf
dec
add
dec
nop
lcall
xchg
sub
enter
mov
fmuls
sbb
mov
js
cs
nop
cmp
add
mov
loope
scas
xchg
sbb
lret
xchg
or
push
sub
pushf
adc
mov
scas
fadds
cs
lea
jne
adc
cmpsb
sub
dec
inc
mov
mov
mov
shlb
mov
jo
addw
std
sbb
ret
aam
push
popf
in
leave
in
js
scas
add
cmp
lcall
pusha
jp
adc
mov
inc
les
aam
jge
xor
outsl
pop
push
inc
clc
dec
lcall
cmp
mov
dec
add
cltd
lret
sahf
xchg
leave
fs
data16
sahf
mov
xchg
pop
jb
pusha
lods
xchg
into
loopne
xchg
mov
cbtw
xor
xchg
mov
std
sub
xor
jns
sbb
sbb
sbb
addl
insb
stc
xor
mov
das
decl
jl
js
mov
popf
xchg
pop
sbb
andb
or
sbb
mov
rcrb
push
push
inc
hlt
adc
mov
add
fnstsw
stos
fiadds
movsl
scas
pop
hlt
mov
xor
loopne
add
add
cmc
mov
jbe
pop
cld
pop
les
leave
adc
loope
sbb
pop
pushf
mov
leave
lcall
add
hlt
enter
fmull
ss
popf
xlat
sub
pop
xor
xchg
adc
mov
rclb
rcrl
mov
jp
nop
add
fisttpl
inc
cmp
insb
sub
mov
aam
mov
divb
lds
outsl
mov
add
adc
bound
mov
pop
arpl
call
lds
imul
sub
test
movb
dec
add
push
popf
mov
cmp
push
jno
subb
insl
pop
inc
aad
mov
mov
hlt
in
adc
pop
repz
mov
jne
js
inc
lea
stos
or
std
fimull
sbb
movsl
dec
fdivl
jbe
je
mov
dec
jns
mov
add
inc
jo
dec
fs
lods
les
adc
in
xchg
dec
fabs
add
stos
test
orl
out
pusha
mov
jo
xchg
cwtl
into
repz
mov
jae
call
or
xor
xchg
sarb
xchg
insl
int
dec
push
jb
movsb
mov
pop
xchg
int3
test
dec
subl
lds
loope
imul
js
incb
mov
call
test
jno
out
xchg
pop
pop
stos
jnp
stos
addr16
loope
jo
sahf
jne
lods
fimull
cmp
mov
and
test
cmpsb
testb
xchg
out
cld
fadds
sbb
inc
add
data16
popf
add
stos
cmp
cmp
jg
mov
pop
sti
add
inc
cmpsl
jae
xor
cwtl
loop
adc
aas
mov
sbb
stos
movsb
xorb
adc
jp
or
rcrb
sub
cmc
fwait
mov
test
out
pop
les
push
adc
repz
jge
mov
dec
js
mov
lret
scas
lods
std
mov
push
jp
aas
inc
movb
sub
arpl
add
ljmp
nop
jg
movsb
rclb
add
gs
sub
xor
jne
ret
mov
int
sti
mov
xor
or
mov
sahf
add
mov
into
jmp
clc
and
cmpsl
or
shlb
fmul
pop
add
jb
in
cwtl
fcomip
pop
xor
jnp
nop
mov
shrb
in
mov
mov
sbb
cmc
push
insb
push
and
mull
cmpsl
jns
cltd
push
mov
add
mov
and
add
lret
jo
or
pop
adc
mov
sub
stos
xchg
subl
les
sbb
and
lcall
dec
ds
add
xchg
inc
loop
popf
in
push
leave
popa
enter
scas
mov
mov
push
xor
clc
pop
jg
jo
stos
and
inc
hlt
xchg
int
xchg
inc
push
cs
push
and
ret
mov
scas
and
test
push
jp
hlt
push
jg,pn
cs
mov
std
add
mov
sub
clc
mov
jecxz
xchg
xor
lcall
xchg
into
pusha
push
adc
ds
sub
push
stos
cwtl
icebp
adc
aas
cmp
adc
sub
in
inc
hlt
outsl
jne
sub
jbe
fxch
inc
insl
rolb
roll
cs
mov
outsl
push
pop
in
flds
shll
cli
pop
add
test
clc
dec
mov
inc
loopne
int3
push
out
test
jbe
hlt
jle
aam
inc
lcall
jl
call
sub
xor
pop
pop
or
or
outsb
sub
adc
add
or
popa
nop
mov
aas
sbb
mov
and
cmp
stos
mov
pop
jne
mov
jb
scas
adc
rcrl
push
fsubs
mov
push
pop
cmp
lods
mov
xchg
popf
xor
or
jno
add
xor
xchg
clc
enter
fisttpll
adc
loope
in
inc
cwtl
sahf
out
jge
dec
xor
fcoml
add
es
js
mov
lods
sbb
out
jle
rclb
add
xor
sbb
mov
lahf
xchg
lea
inc
xor
xlat
lods
shlb
and
sub
movsb
add
cmpsl
call
cmpsl
xchg
testb
das
mov
cld
shrb
test
loope
or
out
and
fs
bound
push
cmp
cmpsb
fmull
adc
leave
insb
or
jle
push
xchg
pop
mov
pop
xor
adc
pop
jne
sub
mov
xchg
lock
jne
pop
push
in
mov
cs
mov
xchg
mov
faddl
add
scas
jnp
sbb
sahf
mov
lahf
lods
scas
sbb
mov
mov
xor
mov
enter
in
jbe
sub
fcmove
jl
jmp
mov
pop
mov
xor
xchg
loop
pop
shll
lret
pop
or
cs
adc
stos
jno
subb
mov
cmc
mov
fstpt
inc
subb
gs
in
lcall
leave
jmp
fcomps
jae
aam
add
push
mov
mov
mov
push
leave
in
cmp
sar
add
daa
pop
mov
repnz
ffree
mov
popa
fsubr
add
sub
loope
and
enter
orl
les
fstl
add
mov
lock
and
cmpsb
add
out
stc
and
fldcw
push
mov
mov
mov
dec
sarb
imul
cmpsl
adc
inc
imull
mov
pop
mov
xor
pop
jecxz
int3
cmpsl
pop
mov
adc
push
sbb
fisttpll
mov
scas
leave
dec
mov
push
jno
add
aam
jmp
add
iret
in
cmc
fisubl
daa
fstl
jns
sub
scas
mov
cmc
jle
dec
rcrb
iret
xchg
clc
ljmp
arpl
cmpsl
xchg
scas
add
enter
jne
lods
push
mov
sbb
jne
enter
stc
aaa
mov
add
ret
jae
cwtl
pusha
mov
and
sti
sti
es
mov
lea
call
jb
int3
fisubrs
frstor
add
decl
shl
daa
flds
std
outsb
push
cmpsl
stc
sbb
mov
fwait
inc
mov
jge
test
inc
xchg
cwtl
mov
pusha
adc
loopne
jp
pop
sbb
fadds
push
cmp
les
lret
rcll
jge
aad
xchg
iret
daa
xlat
sub
push
pusha
lds
lret
ds
hlt
dec
cmc
and
jne
lods
lahf
or
or
faddl
xor
stc
dec
shll
mov
repnz
ja
les
mov
dec
jne
or
cmp
shlb
test
inc
mov
or
jb
aam
jnp
nop
jbe
fdivrs
add
std
pop
sbbl
pop
dec
mov
inc
push
sbb
lea
ss
adc
xchg
pop
inc
test
push
es
popa
adc
fsubrl
push
dec
test
sub
lock
add
mov
aam
inc
js
stc
mov
scas
jle
or
mov
sub
xchg
movsb
or
dec
imul
mov
movsl
xor
inc
imul
mov
sub
sbb
inc
out
ljmp
adc
ret
inc
loope
inc
jl
movsl
sub
pop
cld
xor
add
add
add
nop
or
xor
outsl
ss
push
in
sub
xor
es
xchg
insl
rol
cmp
popf
xor
das
cwtl
popa
xchg
and
mov
jg
adc
push
mov
test
jecxz
jecxz
xchg
xor
inc
dec
inc
lret
enter
or
sub
sub
fildl
inc
push
mov
stos
fnstsw
daa
sub
mov
arpl
arpl
stos
mov
mov
jne
mov
mov
addl
sbb
adc
push
in
mov
fdivrs
cwtl
pop
pusha
out
xor
mov
sub
and
cwtl
inc
scas
ljmp
loop
in
lods
xor
inc
fisttpl
xchg
pop
mov
int3
enter
xor
pop
push
mov
je
movsl
nop
fimuls
testb
lea
jbe
stc
in
out
mov
stos
fldl
rcrl
hlt
xor
test
jl
mov
pushf
es
add
sub
pop
das
out
jg
outsl
movsb
hlt
shl
cs
int
enter
fsts
cli
dec
lods
push
test
dec
or
lock
dec
add
out
test
jne
call
mov
jmp
int
pop
pop
shlb
aaa
xchg
sbbw
shrl
add
mov
lds
push
imulb
mov
cwtl
inc
xchg
stos
fld
lods
inc
ret
daa
std
sbb
pusha
or
cwtl
out
jne
adc
test
sub
pop
scas
pop
leave
xchg
jmp
mov
in
cmpsl
shlb
xchg
hlt
jnp
dec
loopne
add
movsl
add
sti
movsb
stc
jecxz
cmpsb
xor
cltd
sub
leave
ds
and
lods
or
enter
int3
mov
lret
push
jbe
in
xchg
or
mov
addr16
in
jg,pt
roll
dec
adc
cltd
ret
lods
movsb
xor
cmp
jg
pop
jp
addl
shrb
pusha
fimull
inc
jnp
cltd
jle
mov
out
enter
loopne
inc
xchg
jae
xor
test
scas
es
insb
mov
push
jb
mov
dec
mov
ljmp
mov
jecxz
subb
jns
pop
lods
icebp
rclb
mov
stos
aam
filds
push
push
sbb
inc
stos
mov
push
sub
fisubrs
call
xchg
jl
inc
test
call
or
pop
cmp
lds
sub
subl
out
call
ljmp
ljmp
pop
insb
daa
jge
sbbb
iret
stos
jne
lcall
popf
movsb
inc
in
loopne
mov
mov
stos
sbb
add
xchg
add
and
dec
push
jecxz
stc
xor
cltd
inc
fs
pop
xorl
xorb
pop
js
loop
add
cwtl
std
icebp
clc
movsb
mov
dec
sarl
cmp
hlt
sub
ret
inc
cltd
movsb
int3
cmp
dec
shll
add
pop
jge
inc
test
xchg
push
sub
cmpsb
mov
lret
jle
push
add
mov
bound
xor
arpl
inc
xlat
nop
into
fxtract
scas
xor
sbbb
jae
mov
inc
aad
inc
cli
mov
imul
xchg
das
mov
xor
mov
imul
imul
sub
arpl
push
in
stos
sbb
mov
pusha
pop
imul
inc
fisubs
repz
xchg
movsb
rolb
mov
jae
mov
loope
lcall
daa
arpl
gs
call
pop
pop
lock
ret
mov
popf
cli
push
inc
push
jecxz
lods
pop
loope
mov
psllw
lock
loope
sbb
ja
pop
lahf
sub
ljmp
and
ret
lret
pop
inc
jle
and
out
sub
jns
pop
stos
movsl
icebp
stc
lea
lret
mov
dec
dec
push
mov
rorb
jnp
aas
adc
std
inc
paddq
aad
sbb
push
pop
gs
dec
xchg
out
lcall
out
test
mov
mov
shl
fnstsw
mov
inc
out
xchg
pop
je
mov
ljmpw
push
xchg
mov
aam
push
fdivs
cmpsb
ds
daa
push
inc
sub
arpl
sbb
pop
mov
movl
or
repnz
pop
xchg
sub
push
mov
mov
push
dec
or
sbb
popf
cmp
scas
mov
add
inc
sti
aas
xor
inc
in
cmc
push
mov
or
sarl
movb
adc
dec
push
jmp
sbb
ja
xchg
add
inc
add
shlb
mov
cli
jo
adc
adcb
fistpl
mov
xchg
cmp
dec
dec
das
mov
or
in
mov
js
mov
jne
mov
mov
iret
pusha
bound
mov
dec
jl
adc
adc
jecxz
xchg
repnz
adc
or
int
in
sub
cmovne
sbb
push
mov
mov
mov
push
mov
aam
jmp
pop
enter
pop
stos
lret
pop
inc
ja
push
inc
mov
xor
mov
push
divl
outsb
dec
dec
imul
pop
bound
test
or
mov
mov
stos
fcmovb
jne
jp
xor
mov
add
and
inc
rcrb
dec
push
adcb
leave
test
stos
cltd
rol
pusha
mov
jle
in
mov
lods
test
sub
jecxz
xor
or
dec
int
fcoms
clc
or
mov
add
push
sbb
sbb
push
mov
add
jnp
fists
mov
hlt
ret
movsl
add
ret
stos
dec
push
xchg
inc
inc
cmpsb
push
add
mov
repnz
hlt
xchg
lea
inc
test
pop
jbe
pop
xor
fildll
cmpsl
pop
mov
loopne
je
sbb
out
pop
cmpsb
in
dec
push
pop
stos
bound
pop
mov
or
hlt
xor
popa
lret
test
aad
cmp
sub
jne,pn
sahf
or
dec
ret
jp
inc
ljmp
xorb
hlt
add
insb
push
bnd
test
int
add
xchg
mov
push
mov
sbb
fstps
loop
loop
rcll
int
sub
cltd
push
pop
aas
popf
jmp
popa
inc
pusha
mov
cmpsl
jne
jbe
add
inc
inc
shl
inc
cwtl
insb
repz
jne
int
es
sbb
dec
sbb
jle
adc
xor
mov
dec
push
int
aaa
gs
movsb
sbbl
das
sti
mov
mov
enter
jne
jp
fisubrs
out
cwtl
mov
into
enter
cmp
loopne
clc
ds
mov
add
jne
movsb
sub
mov
mov
orl
jne
push
mov
mov
mov
cmovnp
pop
stc
into
test
repz
imul
mov
mov
xchg
lea
popa
fdivrl
imul
mov
int
int3
mov
ret
push
mov
cltd
hlt
or
cmp
lods
jmp
in
mov
xchg
aas
jg
and
imul
jb
fnstenv
fadd
and
inc
js
movb
stc
jne
cmp
xor
dec
pop
push
aas
cmpsb
xchg
cmp
mov
mov
repnz
nop
push
pop
mov
subl
ret
dec
inc
and
jo
movsb
inc
lret
aad
adc
into
repnz
add
cmpb
dec
jecxz
out
fnsave
xchg
lods
mov
fistps
lcall
ror
sbb
inc
and
cmc
data16
movsl
in
les
movsb
xchg
adc
inc
sub
sub
mov
jne
sarl
loopne
lret
imul
jmp
mov
jge
imul
cmp
dec
scas
scas
lret
shl
fadd
pop
push
cwtl
loope
sub
push
pop
outsb
mov
sub
mov
loop
cmp
aam
imul
pusha
in
push
adc
push
aas
mov
out
and
enter
and
dec
ljmp
iret
test
xchg
subl
xor
push
movsb
cmp
sub
or
mov
jecxz
add
sbb
push
out
mov
cmp
ret
jmp
mov
and
in
lret
cltd
jle
cltd
addr16
imul
or
jns
pop
orb
sub
shll
in
hlt
mov
mov
fistpll
fsubrl
fcoms
sbb
movsb
call
lahf
jg
lcall
loopne
pusha
jae
jmp
jle
add
lods
and
cmp
into
mov
into
nop
mov
loopne
push
out
aam
and
mov
lock
jl
push
fmuls
enter
xchg
jae
in
pusha
clc
or
fisttps
lret
mov
sbb
push
lcall
jge
inc
hlt
inc
adc
ljmp
jne
adc
mov
in
mov
dec
js
mov
stos
cld
fmulp
xchg
jb
icebp
aad
push
or
divl
pop
daa
mov
mov
out
dec
ja
cmp
adc
fldl
pop
push
out
movsl
imul
xchg
push
mov
xor
mov
scas
jne
xor
call
fsts
in
imul
lock
push
pop
xor
test
outsl
inc
add
dec
add
xchg
or
xchg
js
popa
hlt
mov
imul
add
pop
inc
cwtl
jne
aas
pop
sbb
xor
loope
loopne
adc
out
xchg
inc
sbb
aam
scas
or
jne
xchg
add
add
inc
push
pop
jne
add
popa
sub
jecxz
es
nop
insb
mov
push
add
mov
and
sbb
sbb
push
insl
bswap
mov
cmp
sub
jmp
mov
sub
inc
add
hlt
xor
int
jne
lds
cmpsl
add
xchg
cmpsl
shrl
sar
in
movsb
jle
ja
lods
daa
mov
inc
std
cld
movsl
and
push
cld
sub
cmpsl
or
outsb
add
addb
pop
mov
ror
addl
hlt
movsl
test
add
pop
cmp
jp
enter
jne
lea
or
jmp
xorb
sbb
jbe
xor
or
stos
mov
call
scas
movsb
cwtl
jl
jle
shl
loopne
leave
xor
jne
aam
xlat
pop
sbb
adc
inc
ret
mov
xchg
orps
in
ljmp
bound
inc
mov
pop
or
lret
jle
add
out
fildll
adc
xchg
fstpl
xchg
adc
push
into
mov
xor
fcom
sub
into
mov
mov
xor
lock
jne
rcr
push
or
incl
hlt
mov
addl
mov
dec
sbb
imul
scas
fldenv
arpl
dec
fs
dec
add
dec
sub
aam
loope
decb
into
jle
jp
sub
movsl
lcall
cmp
in
adc
shl
cmpsb
xchg
sub
inc
shlb
dec
push
xchg
mov
das
pop
mov
test
stc
in
hlt
pop
daa
jge
adc
xorl
add
orb
adc
sbb
xchg
pop
cmp
sbbl
pusha
xchg
sbb
or
fucomip
clc
cmpsl
sbb
sbb
cmp
and
movsb
push
pop
lods
out
mov
mov
jo
mov
pop
mov
and
add
fistpl
pop
int3
dec
aad
add
mov
or
movb
mov
jecxz
adc
sub
mov
mov
push
inc
add
dec
xchg
lods
inc
add
hlt
and
sub
lods
adc
int3
cmpb
test
bound
push
pusha
test
adc
pop
gs
pop
gs
xchg
pop
dec
adc
ds
shl
mov
adc
jnp
push
mov
jb
sbb
iret
adc
inc
fcoml
xorl
xchg
loope
mov
sub
mov
pop
mov
cmpsb
add
or
mull
test
or
jbe
insb
fcoml
jecxz
mov
jne
inc
dec
repz
cmpsb
stos
mov
cmpsl
lods
shll
roll
adcb
arpl
add
jns
xchg
mov
insl
jmp
enter
fdivp
shrl
jne
popa
rcll
mov
stc
jp
rcll
hlt
push
and
mov
jno
sbb
scas
push
loopne
int3
orb
inc
sti
out
jmp
jbe
movsb
mov
inc
test
lcall
dec
pop
imul
movb
int
jno
add
sbb
or
adc
adc
jns
mov
lcall
sub
cmp
cmp
sbb
mov
aas
addr16
jp
subb
aad
dec
and
and
push
test
or
xlat
testl
daa
sub
mov
adc
pop
loopne
jmp
movsb
cmpsb
popa
loopne
into
pop
jae
jl
mov
aad
cwtl
adc
movsl
daa
cwtl
in
xor
shrb
cmp
push
xchg
jne
push
hlt
inc
js
repnz
pushf
ss
cmpsl
jg
ret
cmc
pop
sbb
jae
pusha
adc
jle
ja
into
les
test
mov
xchg
pop
arpl
leave
add
add
imul
cs
aam
xor
sti
call
sbb
jg
sbb
adc
popf
popa
in
pop
mov
cld
dec
xor
frstor
std
xchg
xchg
adc
movsl
in
mov
push
push
stc
andl
adc
rorb
je
sub
lret
imul
clc
jne
lcall
addr16
push
stc
imul
push
arpl
nop
pusha
cmpsb
mov
adc
bound
dec
dec
jg
xlat
int3
jbe
pushf
mov
push
loope
lsl
call
loop
fdivl
fwait
cmc
dec
mov
xor
xchg
xor
movsl
lds
add
jg
ret
adc
mov
sahf
into
cltd
pop
jno
jne
or
inc
ljmp
sbb
xchg
test
cmp
xchg
mov
out
icebp
movsb
add
adc
jnp
adc
nop
or
imul
xchg
jg
mov
sub
int
mov
es
fisubrl
jp
outsb
jns
mov
xchg
adc
pop
dec
add
pop
mov
or
out
and
insb
mov
xor
xchg
rolb
pop
les
dec
fisttpll
lods
cmc
int3
leave
jne
das
sbb
pop
movsl
test
add
testl
std
pop
mov
aaa
out
loopne
cmp
rorb
aam
int
call
pop
shlb
add
hlt
cmp
clc
cmp
arpl
mov
jae
jns
cmpl
jmp
add
rolb
lods
push
fmull
pushf
jb
cwtl
test
rclb
addr16
cmp
loopne
pushf
test
dec
push
adc
mov
stos
inc
jbe
cmp
xor
pusha
outsb
inc
rcll
fucomp
mov
push
push
out
cld
mov
pusha
mov
movsb
imul
jbe
dec
loop
incb
dec
aaa
in
mov
cmpsl
push
jo
ror
push
lea
add
movsl
inc
or
cwtl
jne,pn
jno
xchg
push
pop
mov
fcompl
js
out
adc
xchg
cmp
xlat
jle
pop
mov
or
fdivrs
lret
push
pop
shrl
fdivrs
cli
subl
mov
mov
in
fists
jecxz
jg
pop
jge
fs
les
fldcw
cs
mov
mov
pop
stos
xchg
icebp
xor
jmp
and
stos
jmp
and
jo
mov
addl
push
dec
in
sbb
adc
sub
test
sbb
jg
inc
lret
clc
adc
or
cmpsl
jg
push
cs
jne
push
loop
icebp
mov
adc
mov
jle
ficoml
leave
or
out
mov
xor
subl
aas
cmp
sbb
xor
stos
push
out
inc
jae
pusha
sbb
fiadds
out
jae
ficoml
mov
push
inc
call
arpl
out
mov
mov
push
lea
loop
sub
test
add
jnp
mov
hlt
cwtl
sub
fs
pop
loopne
pop
pop
pushf
aaa
and
shlb
xor
cmp
leave
or
stos
inc
sbb
cli
push
arpl
add
stos
es
pop
movsl
in
rcrl
pop
add
js
mov
add
or
add
mov
mov
dec
int3
mov
sbb
flds
mov
push
ljmp
cwtl
or
push
test
mov
mov
cmp
stc
fnsetpm(287
xchg
xlat
sub
jbe
xchg
inc
in
push
mov
xlat
scas
mov
les
cmc
popf
movb
pop
aad
mov
cmp
cmp
sub
fs
mov
push
lods
lret
xchg
xchg
out
mov
scas
test
add
push
and
cmp
shrl
ds
xchg
adc
loopne
stos
lds
sahf
pushf
mov
repnz
sub
mov
sub
js
lahf
inc
lock
daa
push
mov
pop
je
mov
test
in
test
adc
mov
pusha
aam
out
mov
xor
scas
sub
xchg
mov
ret
repnz
pop
std
stos
jnp
mov
rolb
mov
sub
pop
sub
mov
xorl
loopne
sub
fistl
push
adc
roll
cmp
fisttpll
clc
fs
xchg
cmp
cmc
xchg
xor
nop
ljmp
push
loopne
or
mov
out
call
jle
aam
inc
inc
loope
ret
cltd
sub
cmpsl
loop
jle
andl
cmp
test
xchg
sub
cld
mov
pop
cli
push
xor
mov
lock
sub
mov
loopne
dec
test
insl
cmp
push
hlt
outsb
stos
add
jns
adcb
sub
jle
andl
fcoml
stc
and
cmpsl
mov
push
mull
add
xlat
jmp
fs
hlt
ds
in
dec
bound
sub
jge
leave
or
xchg
andl
pop
imul
hlt
test
xchg
mov
push
inc
nop
adc
ds
sbb
cwtl
stc
xchg
cmpb
movsb
hlt
inc
scas
call
add
add
insb
and
mov
or
lock
mov
fnstcw
dec
ret
stc
mov
xchg
out
rclb
adc
je
mov
inc
pop
aas
mov
xchg
xor
test
int3
jecxz
jmp
dec
aam
arpl
sbb
in
call
stos
mov
push
xchg
mov
movsb
mov
mov
enter
cmp
ret
pop
sbb
mov
sbbl
mov
push
in
or
or
insl
xorl
jno
ss
xchg
lcall
xchg
cmc
cmp
xchg
movsb
mov
mov
adc
lret
push
stos
mov
ret
jno
jns
mov
xchg
insb
aad
into
stos
jne
rorl
mov
es
lock
test
jbe
and
sbb
pop
mov
sbb
nop
mov
pushf
push
inc
cmc
iret
aam
mov
mov
jmp
pop
test
ret
outsl
lcall
imul
or
mov
and
daa
inc
adc
sub
imul
fidivl
sbb
outsl
inc
push
fdivl
mov
adc
pop
frstor
xor
fadds
sbb
hlt
jae
xchg
mov
xchg
mov
es
xchg
cld
pop
arpl
and
push
jp
push
das
out
into
inc
lea
jecxz
adc
mov
gs
cmpsb
mov
xlat
leave
fstl
ficoms
mov
mov
add
mov
mov
add
dec
mov
lcall
or
dec
add
fistps
jne
fnstcw
hlt
sbb
push
rolb
fidivrs
jo
movsl
out
inc
mov
pop
loope
jnp
popa
cmp
inc
push
push
in
mov
mov
clc
xchg
shlb
add
push
jmp
movsb
jne
mov
xor
arpl
or
xlat
ss
push
jo
fidivl
mov
and
addr16
mov
lahf
and
in
push
rolb
xchg
jp
test
sub
adc
or
mov
daa
sub
fsubrs
ret
addr16
mov
adc
xor
pop
ret
jbe
mov
pop
and
mov
pop
loop
jae
imul
add
enter
test
leave
std
sub
rclb
lods
sub
xchg
popf
cmpsl
and
cmp
xchg
sub
pusha
hlt
cltd
clc
in
testb
jae
mov
lcall
test
mov
movsb
pop
subb
lea
push
insb
shll
xor
je
lock
mov
stos
mov
cmp
sbb
imul
addb
xor
adc
iret
sbb
push
pop
shl
icebp
push
out
out
insb
in
inc
pop
add
push
sbb
add
or
icebp
outsb
loop
stos
shlb
mov
arpl
mov
xchg
or
loope
das
xor
ffreep
jae
mov
dec
scas
scas
sub
cltd
pop
lods
cwtl
fildl
adc
and
pop
icebp
xor
cmpsl
push
rorb
or
adc
mov
cmp
inc
add
sahf
into
and
dec
sbb
push
fwait
hlt
bound
push
mull
pop
enter
adcl
les
loopne
push
mov
enter
int
mov
add
clc
mov
adcl
lcall
mov
pop
adc
int3
inc
into
dec
testb
arpl
xchg
and
jp
cmp
ja
xchg
mov
mov
pop
jl
or
lret
out
inc
cmpsl
mov
repnz
jae
test
lret
dec
pop
les
push
sub
or
jne
adc
pusha
xor
lret
test
xchg
in
test
xor
loop
jbe
mov
or
pop
gs
mov
xchg
ret
daa
xor
test
jp
fnsave
movsl
add
xor
ret
mov
aas
popa
popf
mov
add
dec
idivb
rol
testl
lock
mov
add
push
mov
loop
mov
dec
pop
add
lds
sbb
lock
mov
ljmp
cltd
pop
scas
mov
lods
popa
push
hlt
setge
loope
pop
fidivl
push
les
clc
dec
daa
inc
or
lret
push
cmp
dec
cmp
sub
out
xor
or
push
test
mov
add
loop
jl
pop
sbb
hlt
push
xchg
stos
xor
sub
ja
jne
cmp
scas
shlb
sub
test
sti
jmp
add
push
insb
jmp
mov
shl
sub
lcall
sbb
pop
stos
add
lock
adc
test
sbb
outsb
inc
inc
or
das
insl
mov
mov
hlt
loop
shl
and
pop
inc
jae
mulb
enter
dec
into
pop
leave
push
xor
mov
mov
jnp
xchg
fisubrl
shlb
aad
scas
add
or
dec
scas
jo
xor
jnp
xlat
aam
fldt
jns
mull
mov
pop
cld
faddl
stc
loope
push
aaa
add
jne
jge
and
cmp
adc
jo
daa
sub
jo
repnz
stos
pop
xchg
sti
ljmp
sub
xchg
fwait
xorl
das
adc
sub
and
sbb
cwtl
mov
add
loope
cmp
sbb
and
inc
sarl
push
xchg
add
or
cmp
icebp
mov
mov
cmpsl
stos
outsb
mov
loope
add
fsub
aad
inc
in
inc
mov
gs
ljmp
int3
call
outsb
xchg
aas
hlt
lret
mov
test
push
movsl
vmovupd
jg
or
sub
push
mov
xchg
dec
mov
loop
dec
mov
loop
jns
add
and
cmpsl
scas
cltd
or
aam
mov
movsb
das
int3
pop
test
cs
adc
sbb
mov
repnz
icebp
push
mov
lret
add
cmp
cltd
ljmp
mov
inc
inc
add
setb
mov
jl
ss
int3
cli
ret
lds
mov
insb
nop
test
sub
das
jg
xorl
loopne
rorl
popf
xchg
enter
sub
push
jae
cmpsl
jbe
out
sahf
xchg
jns
fisubrl
sbb
mov
pop
cmp
test
sub
xor
or
ljmp
or
sti
in
xchg
add
jg
mov
xorb
inc
fidivl
pusha
or
and
hlt
push
xor
fdivr
test
repnz
loope
or
dec
roll
dec
or
ret
xchg
add
lods
jne
jnp
inc
fnsave
pop
repnz
jl
inc
xorl
cmpsl
leave
jne
sub
inc
shrb
inc
pop
icebp
jg
into
adc
pop
ljmp
jne
outsl
cmp
xor
add
mov
fimull
sbb
stos
fsub
jecxz
sub
fcompl
mov
ja
or
xchg
testl
cwtl
popa
jo
hlt
insl
enter
loop
cmp
fcompp
pop
cwtl
iret
push
dec
mov
add
clc
push
inc
enter
mov
push
test
loop
pop
push
arpl
std
pusha
mov
cld
dec
push
dec
ror
inc
sub
loop
push
popa
or
push
setl
jmp
sub
out
mov
and
loopne
fidivrs
push
and
jmp
jbe
stc
and
xor
fnsave
jl
rorl
xchg
cli
pop
hlt
push
pop
shlb
sub
pop
pop
add
dec
das
enter
sub
add
hlt
lret
push
add
lea
stos
pop
sti
push
inc
xor
js
cmp
mov
mov
mov
mov
adc
pop
sub
imulb
gs
jle
sub
and
sub
ret
les
insb
xlat
dec
iret
jg
clc
adc
mov
rcrl
ds
int3
and
stos
test
int3
or
xlat
cmpb
sbb
lahf
dec
xorb
lods
ret
jns
adc
and
adc
repnz
test
jp
xchg
add
mov
outsb
push
test
incl
xchg
sub
rcrb
ret
pop
xor
test
inc
pop
rclb
cwtl
mov
add
cmp
scas
pop
rcl
xchg
sub
popf
shlb
rol
xchg
std
sub
iret
loope
into
sti
add
mov
lods
ljmp
inc
cwtl
notl
test
sbb
in
xchg
mov
cmp
popf
hlt
aam
xor
lcall
in
xor
xor
sub
xor
cli
mov
xchg
xor
push
cwtl
xchg
into
cmp
lock
push
xchg
xor
jb
jmp
adc
or
lcall
dec
frstor
adc
cmp
xchg
xor
in
pop
mov
and
mov
mov
adc
test
mov
shl
popf
or
pusha
int
or
push
test
jl
shrl
stos
ja
mov
aas
and
lods
inc
mov
mov
std
aam
es
add
mov
push
mov
add
pop
and
les
mov
aam
lods
pop
bound
cmp
in
jl
out
dec
into
pop
fxam
ret
std
in
das
push
jno,pn
hlt
loop
or
and
or
inc
iret
push
push
mov
push
je
and
adc
loopne
int
movl
pop
cwtl
sbb
push
popf
div
jns
and
cs
inc
sub
or
sub
adc
adc
push
imul
popf
leave
push
add
mov
ja
sbb
xor
dec
js
ss
outsb
cmp
mov
mov
xor
mov
pusha
fdivr
push
les
loop
mov
sbb
cs
subb
ret
xorl
mov
sbb
xchg
mov
mov
xchg
xchg
push
push
xlat
adc
sub
sub
jne
adc
jle
repnz
or
fsub
movsl
add
mov
push
xor
xor
mov
ret
mov
dec
shrb
std
out
cmpsb
jl
aam
gs
sub
cmp
mov
fldl
push
jbe
pop
lock
xchg
icebp
cltd
and
outsb
mov
mov
andl
cli
mov
ljmp
gs
outsl
inc
sbb
mov
mov
notl
adc
inc
xchg
pop
lods
ljmp
pop
mov
cmc
std
popa
fcomps
mov
xchg
mov
rcr
sahf
inc
pop
scas
mov
fst
test
push
pusha
jno
hlt
sub
dec
dec
sahf
in
or
pop
mov
fnsave
jnp
enter
int3
pop
lahf
add
js
loopne
push
sub
and
add
fnsetpm(287
add
fildl
adc
add
jns
les
shlb
jle
fisubrl
cmp
cld
sbb
sar
scas
arpl
push
add
mov
add
mov
scas
movsl
mov
xor
es
cmpsb
pusha
jo
mov
scas
inc
add
lret
jmp
lea
and
add
mov
mov
xchg
js
adc
dec
mov
imul
daa
addb
mov
in
pop
pop
nop
cmpsb
jne
je
fwait
enter
arpl
jle
mov
xchg
mov
and
mov
push
pop
dec
ret
arpl
push
in
mov
push
push
xor
movsl
mov
loopne
mov
scas
adc
out
push
loopne
iret
test
nop
out
inc
scas
sahf
out
mov
mov
adcl
add
mov
fiadds
add
fwait
mov
pushf
dec
xor
jle
or
push
mov
sub
sbb
mov
lods
mov
mov
and
test
enter
jp
pop
out
xlat
mov
dec
popf
xor
push
mov
add
scas
nop
add
push
xchg
cli
nop
test
xchg
ror
rcl
scas
loopne
mov
outsb
and
inc
aam
add
stos
mov
popf
cmp
add
xchg
jl
in
xchg
in
add
jne
cmp
lret
mov
testl
pop
loope
sbb
adcb
leave
lods
test
popa
jle
lock
out
rolb
mov
cmp
adc
dec
sub
adcb
jb
xchg
out
mov
adcl
pop
or
lret
jne
popf
popa
mov
sbb
data16
pop
jmp
push
hlt
pop
scas
dec
xorl
cmc
cld
mull
push
jp
insb
inc
xorl
xchg
mov
xor
mov
jecxz
pop
or
in
sub
xor
add
pop
adc
movsl
mov
push
sub
or
inc
dec
jo
adcb
mov
aas
loopne
ret
xchg
xchg
fs
pcmpgtw
std
push
shrb
and
pushf
loopne
movsl
inc
pop
adc
fmul
ds
mov
iret
addr16
push
inc
push
mov
clc
xchg
test
and
movsl
or
enter
fbstp
clc
shrb
std
mov
mov
loopne
mov
sub
repnz
outsl
leave
stos
icebp
leave
xchg
bound
sub
mov
sub
fst
pusha
lods
enter
fisttps
clc
ret
jb
push
mov
mov
lea
sub
and
lods
into
adc
fbstp
std
mov
stos
add
sbb
cmc
xor
lods
inc
adc
add
out
cld
jle
adc
mov
push
pop
dec
inc
dec
loope
je
sub
push
cli
mov
mov
lcall
xchg
xchg
jle
stos
sti
in
dec
jnp
mov
mov
daa
stos
insb
imul
fsts
xlat
lock
scas
enter
lahf
sbb
sub
nop
hlt
aam
iret
popa
ret
jo
push
gs
xchg
cmc
adc
xchg
scas
or
nop
rcl
sbb
lods
std
hlt
and
sbb
or
mov
adc
icebp
pop
jo
test
dec
pop
sbb
subb
int3
cs
adc
pushf
jg
jae
mov
mov
into
pusha
push
movsl
stc
add
mov
or
pusha
inc
mov
cmpsb
insb
cmp
hlt
shl
sub
mov
mov
xchg
cmc
pop
or
call
inc
movsb
movsl
adc
mov
stos
lock
push
cmpsl
rcrl
inc
into
jnp
xor
jbe
das
mov
mov
mov
ret
xorb
loop
dec
fisttpl
mov
mov
hlt
xchg
cmp
sub
mov
in
dec
pop
imul
sub
jb
es
pop
push
mov
jae
das
in
outsb
sbb
cli
ret
hlt
mov
cs
jne
icebp
ret
or
sti
pop
push
mov
mov
jl
aaa
or
adcl
les
pushf
mov
pop
xor
iret
cmpsb
stos
mov
aad
loopne
push
outsb
push
add
movsb
out
sbb
dec
pushf
jbe
push
stos
xor
add
push
pushf
lods
sbb
mov
sub
jns
rol
mov
test
and
daa
mov
add
popf
push
test
push
shll
dec
mov
hlt
xchg
lret
stos
sti
mov
pop
sub
jne
cmp
aas
icebp
add
xchg
rcrb
pop
js
pop
jp
xorb
dec
adc
scas
sub
mov
cmp
lods
sub
adc
sub
jne
clc
scas
int3
es
js
popa
into
les
insl
push
add
or
mov
iret
and
mov
mov
mov
hlt
pusha
scas
inc
rorl
leave
push
stc
add
push
jle
sti
inc
imul
dec
jbe
sahf
mov
adc
andl
fldl
nop
out
lods
mov
pop
dec
pusha
in
pushf
jg
stos
pop
sbb
push
jle
dec
jl
xor
daa
push
je
scas
into
cmpsl
push
cmp
mov
in
dec
pusha
stos
push
rcr
pusha
and
clc
sahf
cli
mov
lret
inc
filds
add
ffreep
push
inc
int
mov
jne
mov
inc
push
lcall
jp
mov
cmp
adc
leave
jae
enter
popa
cwtl
sub
adcb
adc
mov
sbb
inc
idivl
enter
push
push
in
popa
leave
and
adc
dec
call
pushf
lock
and
fnstcw
xchg
add
jo
push
dec
sti
inc
ret
cmp
pusha
jnp
add
mov
jno
mov
xchg
add
sub
push
popf
and
dec
xchg
shrl
out
mov
stos
js
adc
outsl
aam
rcl
jmp
and
filds
test
sarb
jae
dec
iret
flds
fistps
imul
mov
xchg
jno
pop
mov
pop
sbb
jg
jae
in
sub
pop
dec
pop
mov
imul
jne
cmc
fs
shll
dec
test
adcl
inc
in
mov
cs
into
hlt
mov
pop
fdivrs
inc
inc
test
inc
inc
and
nop
jecxz
sahf
lcall
lret
mov
sbb
fldt
add
mov
bnd
out
sbb
mov
imul
mov
enter
daa
or
mov
arpl
lcall
and
sub
in
movsl
adc
aam
loope
adc
fdivrl
pop
xchg
hlt
xor
jne
in
or
jb
ds
sbb
jg
sub
lods
cs
movsb
cld
mov
insl
fldt
push
gs
sbb
push
faddl
popf
leave
lret
xor
mov
and
fwait
jmp
call
daa
fistl
and
push
addr16
nop
rclb
jg
repz
test
push
lods
notb
xor
stos
cmc
test
jg
daa
fsubl
int3
out
out
sub
loop
insb
mov
pinsrw
scas
xchg
orl
add
in
outsl
in
mov
ret
stc
mov
inc
pusha
xchg
cwtl
es
rol
jecxz
decb
sti
es
repz
adc
inc
mov
mov
mov
ret
push
loopne
inc
pusha
xchg
pop
or
pop
adc
inc
sbb
hlt
lret
inc
adc
pop
call
neg
mov
pop
sbb
inc
enter
jge
adc
in
xchg
test
mov
xor
push
push
sub
dec
dec
inc
jns
jle
lret
iret
jecxz
shrb
xchg
in
test
pop
inc
or
testb
push
inc
in
add
jne
test
out
cmc
or
lret
mov
mov
incb
mov
sbb
xchg
sub
lods
inc
inc
arpl
or
lods
movsb
mov
adc
mov
test
or
cwtl
in
nop
shl
or
mov
add
dec
lret
sbb
in
ljmp
sbb
es
in
notb
rcll
pop
xchg
cwtl
cmp
dec
imul
mov
mov
or
pop
aam
push
sbb
and
lds
loopne
dec
mov
in
rcrl
stos
pop
mov
inc
jne
inc
ret
mov
sahf
push
cwtl
dec
sub
push
adc
mov
std
sbb
sbb
scas
ret
loopne
fdiv
push
lods
mov
imul
push
stc
push
pop
stos
pop
imul
sub
mov
sti
inc
hlt
xchg
into
les
lock
or
sbb
outsb
mov
add
fcmovnbe
jbe
int
addr16
sbbl
std
roll
in
cwtl
pop
push
mov
inc
and
aam
jmp
inc
and
repz
shrb
aas
sahf
push
or
pop
push
ljmp
or
fistl
sahf
leave
call
adc
mov
lods
stc
es
and
repnz
dec
iret
lahf
ror
lcallw
shl
push
ds
jns
fists
cwtl
rolb
or
cmp
mov
push
pop
loopne
mov
cmc
xor
popf
jge
incl
inc
inc
movsl
push
loope
lods
add
test
sub
pushf
and
push
pushl
pop
sbb
xor
repz
enter
loopne
pusha
in
cmc
dec
sub
mov
xchg
inc
xor
push
cwtl
in
add
sbbl
mov
jns
stc
adc
outsb
jle
dec
mov
mov
hlt
sti
push
push
mov
mov
adc
jbe
pop
inc
or
push
ret
outsb
pusha
mov
or
hlt
adc
loop
test
in
pop
push
fldcw
nop
mov
sbb
rcrb
add
fistps
push
hlt
mov
lods
stos
jb
inc
xchg
cwtl
lea
mov
sbb
hlt
outsb
xchg
add
gs
jbe
testl
xor
push
jnp
xor
mov
sub
repnz
rolb
repnz
daa
inc
mov
sahf
pmaxub
and
cld
es
xor
adc
nop
in
pop
test
push
push
add
jl
in
pusha
push
mov
pusha
test
imul
fnstenv
or
cs
icebp
cmp
icebp
movsl
test
add
sbb
mov
inc
dec
ret
jne
jbe
pop
inc
xchg
imul
xor
out
and
clc
in
mov
mov
lret
daa
test
nop
pop
loope
push
ds
inc
inc
cld
mov
test
rcrl
xchg
or
data16
cmc
int
jmp
lea
xor
jnp
lcall
sub
outsl
or
test
adc
mov
sahf
stos
pop
push
fiadds
loopne
xchg
ja
insb
imul
fsubl
rcr
into
cmc
in
stc
mov
ljmp
jno
fists
jne
add
les
in
test
mov
loopne
arpl
sub
mov
xor
movsl
das
jecxz
rcrl
ljmp
loopne
sbb
jg
lret
mov
fnstenv
push
cmpsl
and
mov
jno
and
pop
mov
add
out
test
push
je
mov
mov
inc
xchg
repnz
adc
loop
sub
cld
push
jne
xchg
mov
popa
jns
fidivrl
xchg
mov
rep
pusha
jbe
inc
scas
mov
gs
mov
jne
es
shll
dec
jge
add
mov
clc
jmp
cmp
inc
cwtl
add
test
movsb
mov
add
jns
sub
jne
dec
mov
sub
out
add
mov
faddl
int3
cld
cmpsl
aam
add
add
sti
add
sub
mov
xchg
fildll
das
mov
jg
pop
jne
movsb
dec
jns
aad
std
pop
push
mov
push
inc
call
pop
test
int3
es
cld
pop
mov
push
js
lahf
movsl
sub
insb
in
insl
jno
adc
bound
addr16
push
pop
mov
sub
inc
iret
mov
lds
or
sbb
lret
cmc
lret
mulb
xchg
push
mov
test
add
sbb
jne
mov
int
rorb
or
hlt
data16
nop
dec
inc
mov
add
ljmp
pop
arpl
pop
std
xchg
scas
pop
mov
inc
cld
push
inc
negl
jae
andl
xchg
out
xchg
sub
mov
pop
pop
dec
push
sbb
xchg
cltd
sti
mov
lret
es
sub
adc
loope
mov
mov
pop
xchg
shll
mov
jb
es
pop
addb
adc
cltd
and
pop
jmp
sti
call
dec
dec
cmc
jmp
pop
push
pusha
adc
and
sarl
mov
dec
mov
cmp
push
popa
cmc
push
mov
clc
insl
notb
sub
std
cltd
mov
addb
xchg
xor
aam
adc
cmp
call
sbb
push
lea
sbb
aas
adc
xchg
adc
imul
arpl
push
stos
nop
push
jns
leave
xchg
aad
pop
mov
cmp
lea
ss
jl
loop
int
imull
iret
gs
push
mov
jl
andb
sbb
in
mov
xor
shll
xor
movsl
dec
xor
nop
or
cmpl
ja
cmp
mov
adc
das
add
daa
pop
pop
cmp
jbe
cmp
mov
dec
je
psraw
jnp
pop
adc
aas
mov
lret
das
adc
lods
or
nop
mov
xchg
popa
push
rcll
stc
dec
mov
cld
mov
jne
mov
adc
or
mov
push
adc
jmp
es
add
cs
les
leave
sbb
popf
cmp
les
pop
loope
outsl
out
add
mov
imul
or
xchg
cmp
push
test
sbb
cmp
or
mov
jmp
pop
lcall
pop
mov
jp
sub
jbe
jne
sahf
cmp
xor
test
je
lcall
push
mov
out
enter
leave
mov
mov
sub
fcmovnu
dec
fstl
sbb
in
fistpl
sub
xchg
test
repz
test
pop
pop
enter
jg
clc
repz
or
push
aad
into
inc
test
nop
daa
xchg
addl
adc
pushf
or
sub
ss
pusha
cs
mov
push
addl
mov
insb
dec
cmpsl
std
into
mov
push
movb
cs
inc
jns
cmc
addb
sbb
or
push
jnp
sarl
fcmovnu
push
sti
lcall
sub
cmpsl
fidivrl
mov
add
jbe
pop
push
in
lea
std
in
roll
pop
pop
xchg
and
xchg
cmp
ss
xchg
int
mov
xchg
fxtract
lock
imul
inc
mov
mov
jne
aas
les
mov
jne
pop
std
xor
subb
xchg
pop
xorl
imul
sahf
xchg
rol
pop
test
sbb
mov
jmp
mov
pop
shl
inc
dec
xchg
call
notb
repnz
out
call
daa
aaa
mov
inc
shlb
dec
scas
jns
ss
cs
sub
test
add
pop
mov
jge
ret
and
dec
clc
adc
icebp
orl
mov
cwtl
xchg
sub
jle
fstpl
in
xchg
shlb
insl
cmpsl
ss
movsb
insb
imul
pushf
jae
mov
out
lea
sub
push
int
and
xlat
loop
jg
loope
stc
fnstenv
cwtl
sbb
shlb
cmpsl
cwtl
xlat
icebp
pushf
aaa
adc
out
pop
aad
mov
ret
xlat
shrl
sub
xchg
or
je
leave
data16
cmpsb
js
sbb
cmpsl
push
dec
mov
pop
xor
movsb
arpl
mov
in
mov
pop
push
xchg
addl
add
scas
pop
adc
sub
addr16
mov
rcl
dec
mov
loopne
sahf
or
dec
fmul
xchg
test
mov
mov
pusha
out
loopne
mov
icebp
mov
push
push
mov
in
adc
popa
xchg
es
jg
mov
cmp
xchg
fcompl
mov
dec
ljmp
mov
imul
nop
add
push
hlt
inc
cmp
mov
mov
push
add
push
sub
sbb
mov
cwtl
xor
xor
inc
in
fldt
data16
lret
adc
dec
mov
pop
dec
loop
adc
lods
cmc
push
hlt
jge
xchg
scas
pop
cmp
inc
mov
jge
ss
xorb
imul
nop
mov
xchg
xchg
inc
mov
cmp
sub
xor
popa
cmpsb
cmpl
stc
clc
sub
loop
xchg
xchg
cwtl
into
pop
outsb
add
adc
fs
jo
imul
orl
mov
in
clc
and
ljmp
popa
add
call
xchg
push
test
xchg
push
jne
popa
jne
rolb
dec
ljmp
hlt
in
stc
mov
jne
rclb
push
sbb
enter
adc
shrl
lods
notl
jmp
hlt
fwait
je
or
enter
cmpsl
jge
inc
movsl
sahf
js
mov
inc
or
inc
shrl
or
sub
sbb
out
dec
push
adc
xchg
fadds
gs
sbbb
loopne
lahf
cmp
mov
sub
fstps
shl
fdivrs
std
or
adcl
jbe
ds
push
mov
xor
pop
loop
std
mov
neg
arpl
add
pop
dec
mov
mov
sub
or
mov
push
adc
xchg
add
dec
aaa
aad
cmpsl
inc
int3
out
jne
push
jg
mov
sbb
imul
sbb
fdivrl
sbb
fidivs
dec
xchg
mov
mov
mov
test
test
xchg
mov
pop
mov
addb
cmpsl
pop
je
movsl
negb
add
cmp
pushf
dec
mov
into
mov
cli
lcall
xchg
sub
mov
push
loopne
fs
sbb
frstor
aas
or
out
in
and
out
fmuls
pop
lea
pop
scas
pop
ds
shl
in
jae
xchg
inc
stos
mov
rcl
xor
cltd
test
or
loopne
rolb
inc
cli
dec
xor
sub
into
clc
popa
inc
dec
test
popf
mov
aaa
in
xchg
jno
push
push
sti
jmp
je
adc
int
and
pop
sub
leave
hlt
mov
cmp
ja
ja
mov
or
fsubs
or
add
jo
enter
dec
mov
repnz
add
mov
stos
push
push
adc
push
test
sub
pop
hlt
or
inc
or
or
shll
cmp
pop
jl
mov
mov
push
sbb
mov
scas
outsb
inc
push
cmp
jmp
inc
pop
xchg
jg
jne
fcompl
faddp
xchg
mov
add
in
call
pop
nop
scas
fists
shlb
mov
shrb
es
test
sub
icebp
int
push
outsb
test
ficoms
mov
dec
cmpsl
cltd
mov
daa
or
mov
jp
xchg
dec
adc
or
sbb
call
jns
out
add
popf
sti
and
test
inc
push
sub
pushf
xchg
jle
stos
hlt
push
hlt
aam
jne
mov
push
negb
sti
out
test
xor
push
jp
int
sti
mov
das
jg
out
jecxz
push
pop
adc
test
call
add
loop
insl
ss
nop
mov
pushf
or
out
cmp
sbb
loopne
std
ret
out
sbb
cli
mov
push
mov
cli
pop
scas
daa
inc
ret
and
mov
fistps
mov
leave
sub
jge
fsubrl
mov
push
pop
ljmp
aaa
sub
add
pusha
ss
lret
sbb
pop
shlb
jle
pushf
sbb
sub
jge
mov
mov
push
icebp
hlt
pushf
sarb
pop
subb
sbb
adc
scas
push
jnp
cmp
shl
sbb
pop
mov
test
xor
repnz
filds
movsb
cli
mov
leave
insb
xlat
shrl
cmp
xchg
and
loope
mov
in
das
mov
enter
mov
cmp
test
addr16
dec
inc
imul
xor
cmpsb
pop
cmp
fnstsw
push
xor
mov
mulb
popa
jne
mov
rolb
lods
or
lret
fisubs
hlt
xchg
inc
push
mov
cli
insb
sarb
or
inc
and
push
xor
nop
fsubs
xor
shll
ds
xchg
cmp
sbb
inc
lret
adc
lds
ja
jne
xor
hlt
into
fistps
sub
sbb
dec
lea
imul
aad
nop
icebp
xchg
ret
popa
mov
xchg
in
loop
mov
into
popa
sub
xchg
call
cmp
insb
ljmp
jle
lea
hlt
popf
repnz
jbe
imul
xor
repnz
jns
adc
icebp
fucomi
sub
bound
mov
cld
into
loope
and
or
inc
jae
push
dec
dec
pop
stc
jecxz
jb
aam
cmpsb
bound
popa
jg
mov
add
ja
xchg
leave
hlt
jo
arpl
int3
lock
pop
mov
jmp
in
icebp
pop
int
mov
adc
xor
mov
popa
fldln2
pop
jmp
xchg
sbb
btrl
bnd
sbb
push
dec
in
out
and
push
push
ljmp
testb
adc
sub
mov
pop
pop
cmp
ljmp
je
lcall
jbe
mov
inc
mov
push
mov
push
add
leave
xchg
std
roll
scas
stos
icebp
adc
mov
out
adc
lods
cmp
aam
sbb
repz
fldl
cli
inc
jbe
cli
xor
faddl
mov
popf
bound
int
sti
or
dec
ror
pop
jp
sub
mov
xlat
xor
cs
test
ret
in
cmp
pop
mov
cmpsl
dec
sub
andb
jne
mov
into
aaa
pop
jo
push
or
fldcw
or
inc
cmp
repz
imul
jg
pop
add
outsl
inc
lods
mov
mov
out
gs
mov
jo
repz
xchg
les
rcrb
out
aas
nop
inc
inc
dec
sbb
test
fcomp
xchg
or
hlt
mov
clc
mov
xor
rorl
cli
mov
adc
nop
cmpsb
cmpl
jecxz
rorb
das
out
mov
pop
out
dec
test
fsubl
adc
icebp
jmp
add
dec
outsl
inc
pop
mov
imul
dec
test
add
fdiv
nop
out
loop
mov
fistpl
xchg
sub
stos
cld
inc
dec
cmp
adcl
jnp
xor
adc
xchg
sub
push
push
dec
and
xor
xchg
sbb
xor
sub
adc
fstpl
fisubl
sub
jne
sbb
mov
movsl
or
fidivs
pop
les
push
add
frstor
enter
mov
xor
dec
mov
lods
nopl
hlt
mov
mov
and
cmp
shll
repnz
cmpsl
mov
test
aam
popa
pop
ror
fisubl
jns
pop
orb
test
xor
dec
js
mov
inc
pop
pop
add
hlt
fistpll
scas
rolb
loop
adc
outsl
stos
test
add
bound
pop
sub
sub
hlt
dec
dec
add
out
in
into
pop
in
sub
repnz
imul
adc
push
jp
enter
loopne
sub
mov
add
sub
jge,pt
movsb
stos
jo
cmp
pop
adc
sti
inc
int3
or
into
pop
cmp
rol
mov
sub
pop
mov
imul
fwait
mov
nop
xlat
in
jne
gs
andl
sub
cmp
loopne
cmp
test
bound
sub
cmp
add
mov
movsb
into
mov
test
push
sub
test
hlt
mov
hlt
mov
imul
ret
add
shrl
push
pop
pop
lods
std
pop
mov
sbb
pop
dec
sbb
mov
pusha
sbb
incb
cwtl
std
inc
fcomi
push
repnz
or
loop
push
lcall
aaa
jl
xor
insl
icebp
and
repnz
and
imul
cmc
xchg
dec
mov
cmp
fcompl
and
les
imul
push
roll
std
leave
mov
xchg
inc
push
ficoml
fnstsw
out
scas
mov
pop
hlt
adc
jecxz
fldenv
sbb
or
nop
les
data16
sti
add
pop
jmp
inc
or
and
mov
add
push
dec
popf
enter
push
xchg
xchg
test
ljmp
add
xchg
lret
and
cmpsl
mov
int
inc
mov
filds
mov
popf
jg
cli
push
cmpsb
sbb
mov
and
pop
fcmovne
adc
lea
jmp
mov
mov
mov
test
add
jmp
xchg
in
cmp
add
xor
test
aad
sub
out
rorb
out
xchg
or
mov
cwtl
lret
in
es
add
add
pop
sbb
sahf
jae
mov
cmpsl
rcrb
mov
insl
pop
push
movsb
and
mov
sar
mov
int
sbb
jne
mov
mov
aad
jnp
jmp
jb
adc
jg
sbb
push
xor
pop
adc
jne
lea
daa
mov
test
mov
mov
dec
nop
xchg
sub
subl
frstor
push
bnd
ljmp
mov
mov
in
es
xor
js
add
cmp
repz
popl
aam
push
jnp
sub
mov
mov
inc
and
pop
inc
cltd
bound
xchg
jg
les
sti
jb
inc
pop
je
sar
lock
jne
xor
test
dec
cmp
and
xchg
and
mov
fcompl
mov
lcall
stos
xchg
push
jmp
cwtl
sub
enter
jle
xor
or
jnp
sub
int3
sub
jae
mov
push
dec
outsl
dec
lock
push
xchg
test
mov
push
stos
enter
into
and
dec
dec
fiaddl
mov
adc
in
xchg
jne
lahf
int3
pushf
mull
sbb
ret
lods
stc
jle
call
cmpsb
xchg
sarl
cmp
hlt
mov
cmp
nop
cmp
add
mov
cmc
lods
pop
das
jb
pop
jae
mov
push
nop
rclb
adc
sbb
xor
jle
add
lods
and
xor
fcmovu
jle
xor
cld
in
clc
mov
mov
pop
inc
cli
jbe
xlat
push
cmp
dec
mov
ja
loop
cwtl
sub
ja
shlb
jge
lea
and
jnp
orb
mov
mov
fstpl
and
leave
cs
rsqrtps
aaa
gs
cld
lock
lret
xor
push
push
lea
lock
in
sarb
push
aam
in
pop
lods
in
adc
out
xor
push
dec
mov
flds
push
sub
movsb
mov
or
add
incb
inc
push
jb
pop
add
jge
add
loopne,pt
jns
mov
das
adc
mov
loop
push
movsb
pushf
popf
inc
mov
aam
ss
mov
mov
pop
cmp
mov
xor
test
in
pop
adc
adc
pop
mov
in
pop
pusha
cmp
rolb
jl
xor
sub
popf
xlat
cwtl
push
hlt
pop
and
pop
push
xchg
loop
or
mov
negl
add
fsubrs
lcall
and
mov
cmpsl
enter
scas
cmpsl
fsubrs
pop
mov
and
cmc
inc
mov
repz
inc
mov
mov
mov
stos
or
gs
jb
cmpsb
test
pusha
popa
mov
popa
mov
in
add
call
sbb
ficoml
mov
shr
loopne
jnp
xor
hlt
dec
ficomps
mov
repz
movsb
sbb
outsl
mov
jne
dec
add
mov
pop
mov
lods
mov
in
mov
movsb
or
cmp
xchg
push
loopne
daa
mov
shlb
clc
and
or
ss
lea
jnp
notl
xchg
and
or
jbe
or
jecxz
ds
cwtl
push
imull
mov
int3
xorb
jno
outsb
pusha
jp
icebp
icebp
xchg
add
xor
enter
add
jmp
fnstenv
mov
cmp
lock
sub
add
iret
hlt
sub
sub
ljmp
clc
stc
adc
pop
inc
enter
adc
xchg
mov
add
movsl
movb
add
add
in
push
hlt
fisttpl
push
adcb
fdivp
cmpsb
loop
mov
or
cmpsl
test
adc
and
mov
mov
mov
mov
pop
add
cli
mov
cmpsl
or
sahf
mov
pop
sub
dec
andb
xchg
ror
lods
sbb
rcrl
repz
lods
sub
cld
scas
lcall
add
or
cwtl
enter
pop
in
mov
out
pop
test
fsubrs
xchg
pop
mov
stos
jb
add
adc
cmpsl
pop
sub
icebp
enter
mov
into
pusha
ljmp
loop
lds
xorb
or
dec
push
pusha
dec
pop
sar
xchg
outsl
push
push
pop
dec
mov
movsb
and
notl
shll
pushf
sbb
in
fstpt
xchg
pop
mov
movsb
cltd
jb
insb
into
imul
pop
lret
mov
jl
je
ljmp
sbb
nop
int
fdiv
mov
enter
scas
rcr
les
xchg
or
xor
repnz
mov
movsb
cmpsl
cmpsb
sti
adc
stos
jo
ret
push
mov
sub
aaa
push
mov
cmc
xor
dec
lahf
fldenv
inc
adc
xchg
mov
rorl
subl
sbb
xor
adc
adc
fnstcw
inc
lds
jp
jne
add
popf
mov
sbb
sbb
lcall
popf
mull
mov
js
repz
inc
aam
test
lods
mov
xchg
jae
les
xor
aad
xchg
xor
sbb
sub
shl
lret
jmp
into
pusha
imul
fildll
fnstsw
mov
aad
fs
and
pusha
shrb
mov
or
in
sub
repnz
into
adcb
cmp
jle
rolb
push
xor
pop
dec
into
xchg
push
lock
or
ja
out
jmp
lcall
mov
std
mov
sub
addr16
add
lods
fdiv
or
sbb
shr
mov
fninit
hlt
sub
hlt
cmp
stc
adc
pop
xorb
cmp
xor
imul
xor
sbb
push
popa
enter
mov
rorl
push
xor
sub
xor
sbb
cmp
cmpsl
inc
shrb
adc
push
imul
mov
xchg
lea
ror
sub
xchg
sub
js
out
mov
jl
out
repz
hlt
pop
pushf
test
fwait
sbb
xbegin
pop
jb
mov
fldl
mov
or
sbb
aad
jne
inc
mulb
into
repnz
jmp
ljmp
nop
dec
sahf
test
and
and
and
out
dec
cmc
out
repnz
mov
push
xchg
xchg
mov
notb
insl
add
cmpsl
cmovno
pop
push
test
jo
push
add
jne
aad
mov
negb
in
add
mov
jne
sub
je
push
js
es
hlt
mov
out
std
lret
stos
pop
outsb
xchg
outsb
fsts
pop
subb
mov
lcall
add
clc
pusha
loop
sti
and
in
scas
push
test
nop
leave
cmp
je
movsl
fidivrs
mov
mov
jge
or
mov
inc
push
aam
nop
jne
lahf
xorl
shll
les
dec
mov
pop
test
xchg
jo
add
sti
enter
dec
fldcw
add
jne
add
int
pop
mov
in
jle
dec
dec
mov
stc
xorb
mov
inc
sbbl
outsl
frstor
pop
sahf
push
das
mov
stc
add
dec
jl
rcrl
dec
out
pop
add
jo
in
sbb
incl
lods
hlt
jl
add
add
cmp
inc
add
repnz
aas
mov
add
xlat
shrb
xor
shl
daa
mov
jbe
aam
in
sbb
dec
sub
dec
adcl
xor
inc
repz
out
or
and
subl
fxch
out
mov
rolb
cmove
imul
lds
xchg
push
cmp
stos
mov
lea
pop
cmpsb
inc
or
jmp
adc
out
imul
loopne
movsb
out
pop
mov
fs
or
cltd
lods
mov
sub
test
popa
sub
pusha
cs
inc
jo
les
sbb
lret
pop
mov
or
out
movsb
or
cmp
ret
fisubrs
push
clc
orl
leave
test
or
inc
add
sub
push
lock
push
add
jl
jne
cmp
test
or
push
outsb
sub
and
mov
movsb
testb
je
rcr
popa
xchg
mov
mov
xchg
pop
sbb
andl
rolb
mov
popf
pop
aad
icebp
push
pusha
adc
add
push
or
inc
sbb
fisttpll
mov
xchg
xor
jnp
mov
out
data16
jnp
icebp
lcall
out
fsubrl
mov
negb
lock
mov
inc
loop
inc
jns
xchg
inc
mov
std
sub
sub
sub
jmp
mov
mov
in
cmp
jbe
mov
gs
pusha
mov
decb
inc
test
mov
lret
rorb
lods
and
mov
or
pop
and
into
pop
out
movsb
push
xchg
pushf
jno
sbb
adc
add
xor
hlt
scas
rcll
xor
cld
stos
call
pushf
rolb
out
inc
dec
ds
test
dec
rcll
enter
pusha
mov
xchg
mov
push
insb
mov
sub
mov
adc
das
adc
mov
mov
mov
imul
incb
lahf
cmp
cld
dec
inc
in
xchg
shll
cli
cwtl
lock
test
sbb
filds
sub
cmc
stos
push
jb
mov
mov
icebp
fistl
rcll
rol
mov
shrl
jg
loope
add
aas
mov
jne
out
sub
xchg
pop
cmp
mov
icebp
mov
hlt
sbb
aaa
sub
shrl
aas
xchg
xchg
in
mov
lahf
jne
movsl
cli
cli
dec
sub
cmc
call
xchg
leave
lds
lock
test
faddl
mov
stc
nop
lods
mov
movsl
shlb
mov
pop
clc
cmpb
leave
or
bound
add
dec
xchg
mov
lret
ror
rcrl
lcall
stc
pop
xor
lahf
call
pop
mov
out
outsb
shll
fs
sub
push
pop
dec
fnstenv
adc
mov
xchg
mov
dec
adc
and
into
pop
xorb
add
dec
xchg
lods
push
inc
fwait
xor
sbb
jo
jle
push
inc
movsb
shlb
jo
dec
xchg
hlt
inc
inc
bound
cmp
and
cmp
jl
leave
in
push
xchg
xchg
sub
mov
ret
pop
es
iret
xchg
xor
sub
mov
and
mov
lret
mov
add
cmpsb
mov
pop
daa
loop
test
push
inc
dec
jecxz
fsubr
xchg
ja
lret
lods
movsl
out
sub
dec
jne
sbb
js
and
fdivs
enter
xorb
mov
xchg
sub
ss
mov
fistpl
std
adc
test
je
dec
jne
mov
xchg
in
hlt
xchg
adc
push
fistpll
push
insb
sti
xchg
dec
jl
test
xchg
loope
sub
jb
ss
loopne
iret
adc
mov
add
inc
dec
cmp
fstps
mov
adcb
mov
mov
xor
lret
sahf
sub
jne
cmp
push
data16
push
loope
test
jmp
mov
cli
std
mov
pusha
jmp
cwtl
jne
arpl
xchg
std
dec
jp
jg
cmp
sbb
xor
dec
dec
cmp
cmc
f2xm1
xorl
add
stc
popa
jl
dec
imul
stc
sbb
adc
push
push
jb
cmpps
dec
mov
enter
addl
mov
sub
ffree
imul
andb
xor
sbb
cld
pop
roll
lods
inc
pop
push
adc
arpl
jb
xchg
test
xor
lods
fcoml
pop
inc
pop
lea
xor
loope
ss
das
or
mov
imul
xchg
xchg
sbb
push
hlt
movsb
shrl
sub
test
div
push
xlat
popa
ficoml
out
mov
push
mov
adc
sbb
or
insl
xchg
inc
mov
lahf
mov
test
inc
jno
cmpb
loopne
icebp
pushf
add
dec
add
iret
push
cs
or
movsb
push
pop
jb
fstl
pushf
daa
pusha
roll
ja
lods
cmp
mov
data16
enter
mov
adc
and
xor
cltd
mov
adc
and
testb
lds
pop
adc
jne
icebp
fisttpl
leave
jbe
mov
xchg
aas
decl
sub
xchg
mov
cltd
pop
pop
rol
mov
int
jg
sbb
into
insb
or
inc
fcoml
mov
xchg
mov
jno
movsl
jmp
mov
xchg
stos
cmp
mov
adc
loopne
dec
dec
insl
ljmp
adc
out
fnstenv
scas
inc
xor
out
arpl
repz
inc
orb
fldl
push
cmc
sar
subb
mov
adc
fcmovnu
stos
btsl
nop
mov
neg
sarb
hlt
andl
mov
cmpsb
sbb
pop
mov
mov
jmp
mov
bound
and
or
inc
mov
ret
fbld
ds
add
lea
sub
fadds
sbb
xchg
in
xorb
hlt
movsb
shll
and
cmpl
dec
loope
sub
pop
mov
mov
sub
xchg
lods
add
cmp
inc
xchg
mov
loope
push
and
inc
repnz
cwtl
pop
push
movsl
inc
inc
pop
cs
in
jle
loopne
push
clc
or
inc
ret
bound
push
xchg
popf
xchg
dec
nop
subl
mov
addr16
mov
xorb
clc
jne
fwait
dec
in
gs
sub
or
mov
sub
bswap
popa
enter
ss
sarb
or
ds
pop
loope,pn
fadds
xlat
aas
add
sub
fstpl
cwtl
mov
testb
jl
jo
xchg
das
dec
jo
mov
fists
dec
adc
idivb
popa
ficomps
hlt
fs
sar
jmp
sub
add
or
push
adc
cli
and
loopne
bound
leave
add
sahf
adc
stos
fsubrs
pushf
jno
adc
sbb
gs
sahf
bound
insb
out
fstpl
push
mov
les
nop
jne
sti
mov
dec
cmpsl
adc
sbb
cmp
xor
dec
mov
inc
cmpsl
lods
push
outsl
int3
popf
push
test
jno
mov
xchg
jne
sbb
negl
jecxz
sub
jb
mov
mov
push
push
add
hlt
test
cmc
gs
xchg
fnstenv
mov
xor
stos
into
pusha
cmp
out
xchg
xchg
inc
cmp
xor
aas
testb
lcall
les
daa
sub
xchg
adc
out
mov
imul
jo
push
cmp
push
xchg
and
jo
or
rcrb
mov
sbb
clc
mov
out
cmp
stos
das
mov
cltd
mov
jnp
and
jl
mov
imul
dec
mov
pushf
inc
xor
cwtl
loop
cmp
sub
jno
bound
iret
cmc
fildl
push
cmp
enter
xchg
decb
push
adc
popa
xor
adc
shlb
jno
jg
xchg
ret
adc
xchg
cmpsl
outsl
andb
sbb
push
adc
add
test
lea
fiadds
jg
mov
add
pop
mov
mov
les
and
or
punpckldq
loopne
test
sub
inc
hlt
jmp
or
into
sti
push
sbb
rcl
mov
cmp
out
hlt
in
sub
xchg
shl
xchg
mov
push
push
mov
into
fisttps
daa
inc
js
fisubs
mov
adc
or
sub
xchg
push
call
cmpsl
jl
mov
lock
mov
pop
xchg
or
adc
insl
and
aad
mov
add
fildll
sub
leave
xchg
lcall
dec
jbe
ret
cmp
enter
lds
xor
in
xor
lret
pushf
rcrl
cwtl
mov
and
ljmp
xor
imul
sbb
test
sbb
xchg
enter
push
imul
jecxz
lcall
ret
push
cmpsl
lods
jno
inc
js
fdivl
mov
shl
mov
pandn
stos
mov
jp
std
jle
lods
aam
sbbl
xor
mov
es
rolb
xchg
mov
gs
adc
int3
js
or
adc
push
ds
adc
aam
cltd
inc
std
sub
lock
mov
scas
lods
inc
fbld
inc
jns
fisubrl
aad
das
inc
insb
inc
jns
std
dec
mov
test
mov
or
adc
outsl
add
fistpll
add
shl
mov
and
es
and
into
aas
loop
pop
pop
jl
xchg
std
inc
jbe
jo
pop
cmp
inc
shll
sub
sbb
mov
lret
inc
clc
sbb
cmpb
in
pop
inc
ret
testl
jbe
fwait
rorl
mov
or
pop
pusha
in
stos
dec
insb
loop
push
mov
loopne
sti
xchg
fidivrl
es
int
mov
mov
cmp
jecxz
fbld
clc
add
jmp
jmp
pop
rep
pop
popa
and
inc
popa
arpl
enter
sbb
or
lahf
adc
icebp
dec
leave
jle
fisttpl
movsb
clc
or
test
jg
or
xlat
call
test
jo
sub
jmp
add
ret
jmp
lods
test
xchg
pop
xlat
mov
cmc
movsb
pop
imul
pushf
dec
mov
pop
jp
sbb
test
mov
dec
or
xchg
lock
pusha
inc
dec
xor
divb
pushf
mov
sbb
pop
int3
movsb
xchg
xor
push
hlt
clc
sbb
pop
cmp
lods
bswap
ret
test
movsl
adc
cmp
push
leave
pop
arpl
mov
add
shrl
add
dec
mov
lahf
jle
sarb
cs
mov
xlat
stc
pop
dec
pushf
mov
pop
or
imul
jbe
repz
dec
aas
mov
sahf
mov
test
jb
shrl
mov
inc
sbb
and
adcb
fcompl
pop
pusha
push
add
inc
pushf
xchg
and
imul
fiadds
mov
aas
mov
jnp
nop
and
mov
mov
aad
jb
inc
stos
shl
pop
ficoml
mov
rclb
sub
xchg
sbb
out
add
nop
inc
xchg
aas
and
std
adc
pop
jge
cmpsb
cmpsl
mov
rcrb
ror
sarb
lods
mov
test
sbb
loope
mov
add
mov
and
inc
fdivrs
insl
mov
inc
pusha
cmpsb
cltd
mov
movsl
stc
jmp
fs
lcall
js
or
fildl
jne
lret
mov
sub
cs
sbb
repnz
movsl
xchg
xor
cmp
divl
mov
dec
sbb
jne
push
fistpl
xor
cmpsb
lods
sub
loop
mov
pop
dec
lods
test
push
hlt
mov
add
rorb
adc
sbb
mov
rcll
xor
xchg
mov
rcl
addb
xchg
jp
adc
xlat
dec
mov
scas
push
xorb
cmc
flds
shlb
mov
dec
outsb
mov
filds
xchg
pop
jno
or
mov
out
dec
stos
xor
adcb
mov
repz
cmpsl
inc
jle
jge
add
push
adc
jno
imul
out
xor
inc
mov
das
dec
xchg
sar
mov
push
aaa
aam
sub
mov
aad
out
jl
xor
test
pop
push
or
mov
fstp
add
les
xchg
xchg
xchg
jle
pop
xor
fwait
mov
jne
fs
roll
or
xchg
ljmp
enter
hlt
movsl
and
lods
mov
jae
mov
or
xlat
pop
hlt
sub
mov
adc
lds
xchg
fwait
hlt
mov
sarb
imul
inc
addb
add
cwtl
rcrl
ret
xor
ficomps
pop
scas
jnp
subb
xchg
movsb
mov
push
fxch
sbb
fcoml
insl
cs
mov
sub
pop
mov
hlt
and
mov
push
mov
fcoml
or
pop
pop
cmp
sbb
fdivs
or
test
or
jp
aam
leave
repnz
cwtl
stos
jle
dec
test
mov
call
imul
pop
mov
out
dec
add
add
stc
and
jp
hlt
sub
sub
pop
and
leave
mov
je
push
hlt
fdivrp
ljmp
inc
cmpsb
mov
inc
test
or
mov
jge
mov
inc
pusha
cld
dec
push
insb
loope
cmp
adc
adc
inc
mov
xor
mov
mov
jne
jmp
arpl
arpl
roll
mov
xchg
xor
outsl
popf
fsubrl
mov
cmp
mov
loope
cmp
adcb
pop
data16
or
fidivl
addb
hlt
adc
into
fimull
mov
lds
fstpl
and
mov
add
add
sub
subl
hlt
mov
push
loop
cli
shrb
shrl
fstps
stc
sbb
sahf
push
inc
inc
ss
jl
xchg
jbe
pop
out
sub
sbb
lods
sub
pop
scas
jle
idivb
xorb
stos
sbb
aam
jno
outsb
test
push
roll
les
in
jo
fmul
cmp
xorb
imul
dec
jnp
push
xchg
sub
in
lret
and
jecxz
mov
add
movsb
inc
cmp
mov
or
mov
jne
cwtl
jno
pushl
xchg
sub
push
jge
shl
adc
ret
je
das
out
push
push
inc
mov
shlb
nop
dec
out
adc
aaa
lcall
rorb
nop
xchg
xor
sub
icebp
sbbb
dec
loope
cmp
and
addl
nop
push
loop
add
cmp
rcll
test
ljmp
pop
sbb
daa
or
and
cmp
mov
jp
jge
mov
test
mov
or
stos
loopne
adc
frstor
mov
pusha
fimuls
pop
pop
orl
in
andl
pop
add
stos
jne
inc
mov
sbb
ss
inc
sub
outsb
rorl
xor
and
jbe
rcl
scas
das
pop
hlt
cltd
idivb
dec
loopne
in
cmpsl
adc
and
push
loop
inc
cmpsb
test
mov
xorb
mov
xchg
or
out
adc
adc
data16
mov
dec
xor
dec
xchg
fdivrs
cmp
fsts
push
fbstp
out
push
and
inc
es
clc
xor
rclb
fcoml
push
sub
cwtl
mov
mov
pop
cmpsl
fadd
dec
push
or
cmpsb
dec
xor
and
fcoml
mov
xor
fmull
xor
mov
aaa
fadds
popf
icebp
js
js
cmpsb
mov
mov
enter
adc
add
lret
add
inc
cli
es
jmp
fiaddl
loope
vcvtdq2ps
xor
mov
xchg
inc
push
jo
xchg
testl
cwtl
cmpl
push
push
jae
pop
cmp
mov
mov
jno
hlt
add
psubusb
xchg
adc
inc
sti
popa
inc
les
mov
dec
pushf
xchg
xor
push
mov
in
xchg
icebp
and
repnz
addr16
xor
pop
xor
jmp
roll
jne
dec
and
jae
push
loop
fdivp
adc
loopne
ljmp
in
push
pop
sbb
xchg
inc
inc
fcmovnbe
sbb
mov
jo
xchg
dec
add
and
imul
add
push
push
or
inc
pusha
cmp
jecxz
adc
fldenv
sbb
je
scas
js
out
pop
sub
shll
ror
cmp
pop
sub
enter
arpl
jne
dec
bound
pop
add
sub
and
mov
mov
aam
and
cmpsl
jecxz
dec
xchg
sub
and
and
mov
fdivrp
dec
pop
mov
fsubl
out
xor
mov
add
mov
repz
pushf
mov
mov
cmp
hlt
daa
add
sub
push
sbb
ja
pop
cmpsb
xchg
mov
add
mov
xor
push
xchg
popl
aaa
mov
pop
dec
leave
shlb
sbb
xor
and
jmp
xchg
pop
mov
cld
fmuls
push
std
and
xchg
dec
mov
mov
push
push
sub
mov
sbb
fmul
in
cld
xchg
leave
cmp
sbb
pop
loope
push
mov
jnp
push
mov
ja
and
jmp
mov
cmpsl
cs
mov
mov
mov
xchg
movsb
sub
push
adc
in
dec
vmovntps
mov
je
idivb
mov
ss
add
fstpl
loopne
jecxz
fistps
dec
insb
mov
scas
pusha
jno
lret
loop
ljmp
enter
mov
mov
pop
addr16
dec
hlt
push
cmp
arpl
stos
cmp
or
inc
xor
lods
shll
push
sahf
adc
sub
ret
xchg
sub
and
mov
or
push
or
cmp
sub
std
xchg
cld
mov
mov
sahf
outsb
imul
or
iret
fistl
mov
and
movsl
cltd
jo
jle
add
adc
push
push
outsl
adc
enter
mov
std
mov
dec
outsl
fildl
dec
sub
cmc
fldl
arpl
out
mov
cmp
cmp
cli
fs
mov
lock
test
add
enter
lds
jg
xchg
fsin
sbb
adc
pop
pop
int3
pop
mov
les
das
or
sub
pop
xlat
jmp
adc
insl
cmp
jne
rcl
cmp
jnp
lret
std
rclb
pop
and
mov
int3
inc
and
repz
out
aad
scas
daa
add
sbb
enter
cmpsl
add
hlt
sub
cmp
xlat
xor
int3
or
pop
xor
movsl
popa
stos
mov
or
mov
scas
insl
adc
sub
jo
xchg
clc
pop
shr
pop
xor
stos
mov
push
rolb
sbb
inc
sub
mov
mov
or
int
mov
mov
hlt
push
cmp
clc
or
push
jns
and
xchg
add
mov
imul
mov
mov
xorl
xlat
test
cltd
xchg
fadds
jecxz
adc
xor
pop
xor
imul
pop
sti
jne
in
orb
xchg
xchg
shll
subl
dec
cmp
pop
arpl
lods
mov
xlat
cmp
stos
xchg
jo
shl
cmp
inc
pusha
test
hlt
pop
mov
testb
lea
fcmovnb
mov
jns
daa
negb
test
mov
pusha
sub
shll
jle
jge
lret
loop
shll
push
dec
mov
outsl
insl
sub
cmp
inc
fistps
loop
int3
nop
mov
inc
out
sbb
das
sti
push
out
add
push
pusha
imulb
mov
lret
or
push
lcall
pop
dec
sub
mov
dec
mov
push
test
div
sbb
test
ja
xchg
xchg
push
and
test
mov
je
push
sbb
dec
push
loopne
push
hlt
pop
xchg
shlb
inc
xorb
mov
addl
jne
jge
lret
in
test
xor
repnz
mov
pop
or
cltd
inc
jne
dec
mov
fstp
jnp
inc
jle
dec
mov
xchg
push
xchg
aad
sbb
jmp
fcmovu
pusha
cwtl
xorb
mov
fcmovne
sbbb
mov
inc
nop
xchg
mov
inc
cwtl
lret
jle
add
mov
mov
stos
jne
cli
mov
lea
adc
scas
add
imul
es
cld
dec
shlb
dec
mov
shrl
fstpl
leave
pop
inc
or
rclb
dec
mov
lds
gs
cmpsl
int
adc
push
jl
pop
push
sub
popf
sub
mov
aam
sub
sub
or
hlt
addr16
imul
xchg
aaa
cmpsb
sub
jne
stc
test
jbe
test
adc
jp
or
sbb
mov
pop
and
xor
test
enter
xchg
cli
jns
push
mov
daa
insb
or
xchg
scas
ret
inc
add
mov
xor
gs
scas
push
push
les
fildll
sti
mov
or
cmp
hlt
adc
ja
mov
push
fsubrs
imul
adcb
loopne
pushf
sahf
fmull
adc
popf
jge
mov
inc
sub
xorl
scas
test
iret
and
ja
mov
dec
push
lahf
jl
movsl
pop
cli
or
test
nop
cmp
jne
out
pop
fmulp
loope
stos
sub
xorl
sub
movsl
pop
cld
popa
insl
je
push
jle
in
jmp
push
scas
mov
jecxz
push
repnz
cmp
dec
xchg
stc
jp
les
lods
and
sub
test
push
test
incl
cld
stos
les
test
jl
ja
sbb
xchg
roll
call
xchg
into
inc
mov
pop
jp
sbb
lcall
repnz
icebp
cmc
fildll
fldl
daa
jg
fsts
mov
ret
sub
call
mov
mov
cltd
mov
test
out
mov
insl
add
xor
scas
pop
mov
sub
sbb
xor
pop
pop
leave
and
cmp
clc
loope
stos
arpl
das
mov
mov
repnz
insb
dec
out
in
and
cmc
xor
jmp
pop
ficompl
fiadds
push
movsl
add
add
cmp
xchg
dec
movsl
cmc
jns
push
sub
jbe
mov
fsts
mov
inc
ss
aas
stc
or
mov
jnp
mov
sbb
fbstp
out
ss
in
jmp
add
nop
sub
test
xor
mov
orl
decb
mov
dec
push
lods
mov
loope
in
cmp
mov
mov
add
and
into
or
cmc
fstps
cs
daa
es
push
cmc
mov
aad
jp
sti
mov
leave
std
enter
dec
dec
lock
push
push
rcr
pop
mov
and
cmp
and
mov
imul
push
gs
fldenv
mov
mov
xchg
mov
inc
mov
jae
pop
loop
cmovs
xor
cltd
push
outsl
mov
mov
or
mov
xchg
and
and
pop
adcb
stc
pop
fisttpll
data16
cmp
mov
pusha
xchg
xchg
movsb
pop
sub
rorb
push
dec
mov
jp
xor
test
mov
sbbb
addr16
sar
jle
push
std
xchg
fcomps
xchg
push
fimull
sbb
iret
inc
popf
mov
aad
mov
call
push
mov
mov
aad
fsubrp
movsl
sbb
pop
mov
xor
xchg
and
mov
mov
lds
add
outsl
jne
dec
or
sub
pop
or
pusha
mov
adc
sti
sti
jl
or
lods
add
ret
add
popf
js
push
lds
xchg
popa
lahf
sbb
mov
sub
stos
push
test
sti
mov
cmp
pop
enter
xor
xchg
scas
lret
dec
xchg
jnp
jecxz
add
lcall
pop
cld
pop
test
xchg
es
icebp
roll
hlt
pop
pop
lds
or
push
xchg
jmp
cmpl
sub
xchg
push
mov
roll
add
or
inc
shl
xchg
js
mov
enter
in
mov
mov
stc
xorb
fisubs
add
push
mov
fdivrp
jmp
cmp
dec
jns
mov
fisttps
cltd
imul
xchg
xchg
sub
rcrl
cmpb
sbb
jne
dec
pop
cmpsl
insb
pop
mov
inc
cmp
xor
ds
cltd
icebp
mov
mov
les
jbe
xchg
movsb
mov
xchg
cmp
pop
iret
and
cld
loope
test
stos
shl
jne
push
dec
shll
inc
nop
dec
mov
ss
or
jmp
sbb
mov
fstps
nop
dec
adc
cmpsb
jae
test
dec
vpsrlq
leave
loope
leave
popa
pushf
in
and
xor
cld
mov
mov
mov
hlt
int
pusha
mov
inc
mov
movsb
mov
negl
xor
mov
pop
aaa
jmp
mov
dec
hlt
cmp
lds
mov
jg
pop
mov
test
hlt
cltd
mov
in
mov
cmpsl
add
sub
xor
aaa
xlat
pop
mov
mov
mov
dec
stos
mov
shll
popa
pusha
ret
jp
inc
jne
filds
pop
cmp
push
lea
add
rcll
pusha
xchg
mov
inc
loopne
inc
movsl
pop
jbe
xchg
pop
sub
jne
outsl
int
insl
dec
xchg
rcll
jne
stos
xor
add
into
adcl
cmp
popf
lret
fs
xchg
sub
pop
popa
inc
fisubrl
pop
inc
cmp
cmp
or
jnp
add
shll
pusha
mov
std
sub
in
mov
sub
xchg
cmp
mov
hlt
jle
movsl
push
out
les
insl
in
xchg
sbbb
mov
lods
rclb
es
and
push
test
lret
dec
add
sub
sub
adc
je
data16
es
cmp
or
sub
mov
lret
loope
fisubrs
lcall
push
jl
in
mov
lret
lret
mov
push
sub
pop
mov
sti
stos
fisubl
hlt
cmp
cld
fists
pop
or
sub
xchg
inc
sub
ret
push
sbb
dec
pushf
mov
gs
inc
cwtl
fisttpl
dec
add
enter
lods
mov
fsubrs
xchg
push
into
lds
and
or
cmc
loope
add
mov
mov
add
ret
add
push
adc
int
std
and
in
loope
test
pushf
jae
inc
addb
jbe
and
popf
pusha
sub
cld
xlat
dec
loop
lods
call
repnz
mov
sti
sub
jne
es
xchg
mov
das
cmp
in
daa
mov
push
pop
lahf
inc
pop
nop
cmp
mov
hlt
sub
cwtl
popa
jne
jno
mov
ljmp
int
xchg
cmc
pop
rcrl
cmpl
div
mov
test
mov
sbb
push
fs
inc
add
loopne
enter
out
inc
jne
adc
sbb
leave
das
or
add
push
xchg
and
xor
sub
aam
sub
adc
out
cli
pop
xchg
cmp
xor
xor
into
xchg
xor
mov
lods
rcl
mov
mov
sar
cld
stos
cltd
cmp
sub
mov
out
in
loopne
lds
mov
mov
stos
scas
cmpsl
cmp
pusha
and
leave
ljmp
xchg
or
cli
cmp
faddl
rcll
adc
jp
add
inc
mov
int
lret
dec
cmp
cmpsl
mov
fistpl
adc
inc
or
stc
sub
subl
add
inc
int3
das
out
loopne
icebp
adc
or
sbb
xchg
scas
and
push
cwtl
fdivr
xchg
sub
clc
push
jle,pn
mov
in
mov
mov
aaa
pop
jp,pn
or
cld
pop
es
arpl
fwait
mov
xorb
out
xchg
mov
lds
or
loopne
adc
mov
and
sub
inc
xor
out
sub
leave
shlb
imul
in
xchg
leave
or
push
mov
jmp
xor
sbbl
mov
lods
enter
arpl
int3
andb
aaa
jmp
in
dec
mov
inc
or
jne
xchg
xor
scas
hlt
push
pusha
fistl
mov
dec
or
xor
push
xor
sub
mov
sbbl
mov
cli
mov
popf
and
popf
inc
ljmp
push
lret
dec
and
fists
jp
lock
add
push
mov
iret
xor
xor
jb
test
push
inc
mov
inc
shrl
ljmp
stos
mov
xor
push
adc
dec
jae
xchg
sub
mov
stc
enter
push
add
mov
add
sahf
lods
into
push
gs
jns
jno
popf
enter
movsl
jmp
ret
movsl
lcall
mov
mov
gs
pop
jge
loopne
cmc
mov
stos
scas
and
pop
sbb
add
xchg
repnz
lock
jne
jnp
lcall
and
jo
dec
add
stos
mov
mov
test
push
sbb
mov
pop
ss
xchg
pop
dec
xor
cmp
das
idivl
shll
sub
pop
jne
xchg
jmp
fnstenv
divb
iret
icebp
and
xor
dec
xchg
xchg
pusha
xor
and
fdivrl
mov
inc
in
dec
dec
loop
clc
dec
aam
add
loope
addb
shl
jbe
add
push
cmpsl
test
dec
or
mov
xor
xor
push
hlt
and
and
jne
pop
mov
insl
adc
add
sbb
ljmp
jae
aaa
hlt
adc
ja
xchg
pushf
test
repnz
sub
inc
jne
lods
sbb
bound
sti
rcrb
pushf
mov
push
test
mov
repnz
mov
popa
pop
fadd
rorb
mov
test
stos
imul
fwait
inc
xchg
clc
insl
or
mov
cs
inc
cltd
fwait
mov
arpl
adc
rcrb
and
js
lahf
pop
jne
cmpsl
add
rcll
mov
aam
dec
add
sbb
enter
dec
xor
jmp
or
enter
popa
scas
test
cmpsb
sbb
into
test
int
aas
stos
fstpt
push
ret
cmpsl
xchg
pop
jbe
lahf
adc
adc
mov
pop
lock
sub
test
sub
push
test
sbb
mov
mov
or
call
inc
cmp
out
cmc
ss
out
push
mov
inc
jnp
mov
add
cmp
push
iret
scas
popa
hlt
add
pop
fsub
subl
add
enter
lock
fists
popa
inc
xor
push
sbb
fucom
mov
mov
xor
xor
shlb
sbb
sbbb
std
add
dec
xlat
xor
cmpsb
ret
mov
add
fisttpll
cmp
cs
aaa
add
pop
addb
cmp
aad
xor
ficoml
add
repnz
pop
mov
xchg
js
mov
and
lds
enter
stc
xchg
sub
or
leave
sahf
dec
les
push
outsl
inc
cwtl
pop
dec
pusha
dec
push
mov
jge
int3
les
pop
cmpsl
fistps
outsl
rcll
outsl
adc
repnz
inc
add
adc
mov
call
xor
lcall
and
cltd
inc
loop
adc
add
fwait
scas
push
sbb
mov
pop
insl
dec
ljmp
sub
jne
mov
push
cmp
dec
cmp
andb
xchg
push
pusha
in
xor
rcrb
jne
idivl
pop
rorl
cmp
test
mov
test
fildll
dec
popf
xchg
jl
sub
int3
mov
mov
ja
mov
jg
jp
leave
xorl
add
shlb
pop
push
decb
mov
loop
pop
jmp
and
mov
push
hlt
mov
call
mov
xor
xchg
repz
push
cmp
dec
loop
inc
int
mov
cs
pop
jne
jae
repz
les
div
jbe
push
pop
add
ljmp
movsb
jne
mov
hlt
jp
add
push
test
hlt
mov
pop
sbb
xchg
push
js
pop
arpl
push
jl
sub
in
aad
or
insb
xchg
sarb
fcoml
mov
mov
xor
stos
loope
or
in
cs
sbb
mov
cmpsl
sbb
int3
and
arpl
mov
and
cmp
wbinvd
xor
pusha
in
je
mov
inc
push
call
jns
xor
mov
mov
loopne
cmp
inc
push
jo
js
pusha
gs
push
sub
sar
xchg
sbb
mov
pop
adc
rolb
shl
neg
jmp
mov
mov
dec
mov
loop
test
cwtl
xchg
int3
push
loopne
mov
fmuls
adc
shll
data16
mov
stc
dec
xchg
xchg
cmp
fcompl
test
lds
fmuls
adc
mov
mov
or
bound
loope,pn
pop
cmp
ljmp
mov
dec
xchg
or
lcall
mov
mov
add
inc
inc
insl
fcoms
jg
repz
imul
xchg
subl
loop
stos
adc
sub
das
cmc
jecxz
mov
nop
aas
mov
neg
dec
popf
test
mov
imul
mov
xchg
into
jl
movsb
rorb
mov
testl
addb
jns
push
sub
xchg
lret
and
push
fcompl
in
xchg
pushf
xchg
jg
pop
mov
hlt
cli
int
mov
jnp
mov
mov
fsubrs
xchg
jb
add
in
insb
or
xchg
mov
xorl
cmp
mov
and
or
fmulp
sbb
nop
mov
mov
int
mov
jle
imulb
cwtl
scas
mov
sub
sbb
mov
xor
jp
lods
fucom
lods
jo
push
xchg
add
mov
adc
mov
cltd
dec
mov
std
into
dec
addb
imul
sub
push
test
lods
push
hlt
out
and
fbld
xorl
sub
gs
sbb
or
stos
mov
sbb
rclb
xor
and
sub
daa
jae
push
hlt
test
adc
lea
in
jg
dec
test
xchg
add
inc
xor
mov
jmp
xchg
push
cmp
xor
xchg
xchg
mov
xchg
jl
rclb
mov
loop
js
test
sarb
rolb
lods
icebp
xchg
test
movsb
sub
in
dec
clc
arpl
sub
push
popa
inc
cmpsb
test
jo
jmp
pusha
cld
lret
popfw
cmp
adc
jge
jge
roll
add
push
xchg
sub
jne
cmpsb
xchg
fadds
hlt
jo
xor
rorb
and
jne
mov
mov
jge
sub
mov
scas
jae
cs
adc
mov
push
lea
les
and
pop
sarl
cmp
fdivr
or
or
mov
xlat
push
aaa
mov
mov
inc
inc
add
mov
mov
aam
pop
aad
dec
jmp
popf
pop
nop
mov
cmp
pop
and
push
xorl
sub
jns
or
cmpsb
add
jp
fisubrs
insb
stos
dec
pop
mov
sbb
pusha
enter
adc
fistps
mov
test
dec
xor
sub
jl
shll
push
mov
dec
push
pop
mov
sbb
je
or
pop
fstl
pop
or
ret
push
fmuls
lret
xor
cmp
repnz
das
int
push
cmp
rcrb
and
dec
inc
dec
add
dec
loope
test
loop
es
adc
les
inc
mov
pop
xchg
jg
pop
pop
mov
iret
out
adc
andb
out
lret
data16
push
into
add
daa
arpl
pop
fwait
jnp
loopne
xchg
pop
js
pop
cmp
and
lods
out
std
nop
movsl
pop
sbb
jmp
mul
inc
leave
add
rcr
fnsave
cs
aad
cli
sti
sub
add
or
xor
add
mov
jo
push
cmpsb
dec
test
push
cltd
ret
cli
or
insl
xchg
mov
jno
xor
scas
mov
hlt
pop
insb
imul
xchg
mov
mov
enter
pop
xor
push
stos
aas
repnz
mov
xor
lea
cmp
cltd
addl
fcomps
mov
bnd
push
or
enter
ja
add
sbb
inc
mov
jae
xchg
repz
pop
nop
clc
mov
cli
sub
push
mov
movsb
xchg
adc
or
lret
rol
jne
sub
add
in
ret
mov
ret
xchg
jle
mull
add
cmp
les
mov
add
mov
hlt
ja
pop
into
jecxz
mov
push
sub
mov
sbb
dec
jle
dec
stos
xchg
mov
es
mov
in
inc
leave
sub
cmp
pop
mov
shlb
mov
loope
std
pushl
mov
mov
movsb
jmp
push
int3
js
hlt
dec
pop
add
inc
sbb
fsubr
fdivl
jo
mov
and
mov
notl
adc
inc
dec
cmp
mov
pop
sub
add
mov
ror
sti
xchg
stos
cltd
push
mov
mov
iret
mov
add
push
int
repnz
jmp
movsl
push
rclb
test
cltd
cmp
or
pusha
call
sbb
fisttps
sub
imul
cmp
rorb
cmpsb
jnp
shll
jecxz
rorb
dec
fildll
rolb
shlb
test
push
cmpl
mov
mov
popa
test
push
inc
loop
leave
mov
stos
clc
inc
stos
dec
sbbl
mov
sbb
xorl
fdivrl
lahf
outsl
test
das
sarb
jbe
xchg
stos
jl
subl
xchg
rorb
leave
jle
mov
leave
xchg
lea
xchg
mov
imul
std
pop
mov
xor
sub
and
sub
dec
xchg
fsubrs
xchg
mov
loopne
and
cli
push
movsl
aad
push
cltd
mov
xorl
add
pop
aad
stos
sbb
leave
fcomps
test
cmp
mov
dec
in
push
jne
mov
add
fcmovu
pop
mov
dec
lret
pop
cmp
push
jne
iret
push
nop
or
movsb
sub
fidivrs
std
adc
mov
mov
pop
push
or
shl
in
dec
add
mov
or
popa
add
sbb
je
gs
pop
pushf
mov
or
adc
ss
pop
xorb
inc
sub
mov
mov
inc
int
test
mov
or
mov
in
popf
lcall
gs
sub
imul
pop
mov
shl
shll
push
mov
xchg
lahf
mov
inc
insl
outsb
add
rcrl
fdivrl
adc
clc
lcall
orb
mov
cmp
fcmovb
xchg
push
fnstenv
mov
addr16
adc
std
bound
test
bound
imul
repnz
sub
inc
rorl
cli
hlt
pushf
xor
orl
inc
jne
mov
loop
and
sarb
lock
movl
das
orl
mov
test
into
cmp
dec
sub
jb
ja
cwtl
jne
jnp
shll
lret
sbb
test
cmpsl
sbb
loopne
cs
jmp
shrb
movsl
jle
mov
add
lods
xchg
mov
jne
dec
push
adc
cmp
mov
jae
cmp
out
cmpsl
jle
gs
pop
rcrb
outsl
shr
out
add
push
push
insb
dec
ljmp
jne
sub
adc
jo
sub
outsl
repz
adc
adc
add
adc
mov
outsb
hlt
xchg
mov
adc
add
out
adc
mov
insl
mov
mov
xchg
negl
enter
push
popf
and
mov
fcompl
cwtl
or
scas
lahf
jns
push
xchg
fidivs
pusha
hlt
pop
out
add
pusha
mov
addb
xchg
sbb
shl
scas
mov
ret
incb
mov
xor
in
push
int3
mov
pop
scas
cmp
add
gs
mov
mov
mov
lods
sub
fidivrs
xor
add
hlt
adc
mov
mov
movsl
fs
push
cmpsb
inc
add
push
jne
int3
xchg
sbb
sbb
adc
cmc
in
repnz
jne
jl
int
outsb
mov
xchg
test
daa
push
clc
pmuludq
jmp
dec
lock
dec
mov
outsl
shlb
xchg
out
push
sub
sub
notb
into
mov
inc
add
dec
je
std
add
test
dec
or
rorb
push
xchg
pop
jae
aas
int3
hlt
test
ljmp
gs
dec
inc
mov
push
jnp
push
or
xor
int
mov
adcb
mov
adc
enter
hlt
pop
pop
aam
mov
push
jne
stos
leave
xchg
mov
test
cmpsl
mov
sub
inc
out
negb
hlt
xchg
xlat
jb
xchg
xor
into
mov
roll
pop
insl
inc
pusha
mov
and
leave
test
jge
mov
in
call
iret
add
mov
sarl
repnz
addl
xchg
mov
dec
jp
pop
pop
sub
inc
outsb
xor
sbb
int
add
mov
hlt
pop
sbb
xchg
les
leave
roll
xchg
aaa
push
repz
dec
mov
stc
out
test
mov
inc
or
nop
fnstcw
dec
cli
je
mov
in
cs
xchg
mov
dec
jecxz
int
mov
xchg
fldenv
sti
or
sbb
push
mov
pusha
add
jne
das
ret
leave
sahf
dec
mov
fildll
pop
push
mov
lds
push
lock
sti
das
xchg
and
fwait
jg
mov
jmp
call
imul
test
and
in
xor
in
mov
adc
inc
popf
fnstsw
lock
into
mov
xor
data16
loope
aas
scas
jge
std
arpl
les
dec
das
out
in
xor
das
sti
pop
in
int3
pop
js
fisttpll
sub
jmp
or
aad
mov
dec
lret
add
add
pop
sub
mov
mov
mov
daa
fisubrl
add
or
add
loopne
out
subb
jbe
add
es
jo
pop
jl
mov
pop
and
cwtl
enter
jmp
mov
enter
clts
jne
jl
mov
jo
add
shll
adcb
xchg
xchg
hlt
lret
add
push
test
fdiv
mov
dec
addr16
mov
enter
push
mov
adc
mov
jl
pusha
outsl
es
push
loopne
inc
dec
scas
pop
lcall
push
fdivl
fistpl
es
enter
inc
fdiv
add
add
leave
adc
inc
sub
sbb
insb
lahf
mov
rcl
pop
dec
mov
nop
mov
orb
fs
jmp
jne
ss
jno
cmc
or
dec
loop
mov
dec
dec
add
lahf
ret
adc
cmpsl
movsb
mov
jg
or
ret
cld
test
hlt
cmp
fwait
aas
sbb
push
scas
add
add
movsb
popf
dec
shll
adcb
lcall
loope
in
pop
sub
cmp
sbb
pop
mov
outsl
aaa
fists
adc
add
lods
fnsave
mov
sub
xchg
and
rorl
jmp
dec
mov
pop
sbb
les
scas
les
inc
mov
mov
or
dec
and
sub
lock
es
xchg
or
enter
out
xor
div
lods
sbb
aam
add
ja
int3
test
fld
sti
popa
add
mov
and
into
shll
das
in
and
jl
mov
add
cltd
jne
aam
loope
addb
into
jmp
ss
and
fisttps
push
stos
cmpsb
add
xor
rorb
cs
xlat
cltd
icebp
in
jae
mov
jl
mov
jbe
and
cmp
sbb
pop
adc
mov
xchg
pop
outsb
jle
stos
pop
pushf
xchg
mov
or
outsb
in
push
int3
mov
test
xchg
das
js
js
jae
fwait
mov
popf
aam
dec
cmpsb
jb
cli
enter
cmpsl
inc
popl
cli
ja
popf
jg
cmpsl
stc
cwtl
cmpb
data16
pop
sub
aaa
es
push
cmp
fcoml
arpl
rcll
mov
xchg
cmp
mov
adcl
nop
sti
fwait
int3
sbb
xchg
out
and
inc
inc
xor
hlt
pop
xor
inc
andb
sahf
jo
fmull
mov
mov
mov
mov
lea
insl
loope
inc
js
rcr
adc
cmp
sub
out
fsubrs
sbb
fldl
call
push
ss
lahf
inc
push
pop
aaa
lcall
sub
popa
cmc
inc
imul
mov
dec
push
push
fdivp
sub
fistps
mov
lahf
insb
mov
loop
shlb
or
xor
dec
gs
jge
scas
mov
cmp
sbb
add
push
jge
test
sbb
int
cmpsl
mov
inc
xchg
mov
test
movsl
call
ret
fcompl
leave
fwait
lahf
hlt
mov
ljmp
mov
inc
movl
mov
xchg
and
jbe
jne
mov
xchg
adc
test
loopne
hlt
mov
leave
xchg
inc
jbe
dec
clc
dec
scas
test
inc
cs
shl
cmpl
sub
imull
xchg
in
or
loopne
ret
fmul
pop
push
sbb
les
mov
es
mov
inc
lods
mov
lahf
lods
fdivrl
inc
push
push
rcrb
or
add
xchg
and
push
or
add
mov
mov
cmc
lock
adcl
cmp
cltd
mov
test
add
dec
cmc
mov
in
add
jbe
or
and
inc
lds
stos
pop
stos
push
mov
ret
lods
inc
fidivs
and
push
ret
adc
dec
repnz
inc
lcall
out
adc
outsl
int
outsl
test
and
jnp
and
stos
add
mov
push
test
stos
jb
pop
loop
call
mov
or
xlat
sub
stos
pop
xchg
push
cld
jnp
cmpsb
adc
sarb
xchg
test
leave
pop
or
hlt
sub
sbb
cmpsl
imul
mov
lret
mov
mov
mov
pop
xor
or
ret
shl
mov
mov
mov
fmuls
iret
or
add
stos
inc
adc
cltd
xor
mov
fwait
enter
pusha
sub
and
dec
jecxz
pop
push
in
shrl
test
xorb
bound
cs
pop
sbb
js
sub
test
ja
popa
fcomi
or
push
fnstsw
mov
mov
cmp
lahf
inc
inc
or
inc
movsb
mov
stos
xchg
ret
sub
jge
inc
add
xlat
shl
lcall
jge
fs
and
inc
insl
push
sar
icebp
mov
ret
and
lret
mov
mov
les
jb
cmp
mull
pop
loope
jmp
and
dec
mov
and
add
arpl
dec
rorb
movsl
pushf
or
aam
cmp
cmp
add
push
ret
stos
shll
mov
test
xor
movsb
shrb
add
cltd
hlt
into
aas
jge
movsb
jno
fcomp
pushf
adc
cld
in
incb
mov
pushf
add
cltd
mov
push
stos
lahf
inc
pop
inc
mov
sahf
lahf
fwait
in
dec
push
ficoms
pop
mov
mov
add
gs
in
xchg
aas
orb
aam
mov
std
inc
sahf
pop
cmp
push
test
cmpsb
jo
mov
jl
xor
cmc
mov
push
inc
jb
fs
aad
xor
jbe
stos
or
mov
ss
test
mov
fdiv
std
sub
sub
pop
aad
adc
imulb
mov
loop
fsubrl
add
and
fistl
faddp
mov
mov
test
idiv
jnp
ljmp
mov
or
lock
push
imulb
test
sub
hlt
jb
jp
xchg
or
test
mov
push
ror
scas
bound
mov
mov
icebp
jne
and
test
cltd
push
mov
and
add
mov
push
xlat
ret
fs
dec
and
loop
enter
and
xorl
rcrb
sub
sar
xchg
sub
mov
push
and
js
unpcklps
inc
ror
jb
inc
mov
add
sub
int
repz
mov
inc
loop
mov
cmc
cltd
pop
ljmp
rclb
mov
sub
outsl
mov
sti
int3
push
stc
fldcw
hlt
and
nop
cli
fists
loope
sbb
jbe
loopne
ss
jge
or
in
and
push
mov
test
testb
mov
push
and
idivl
leave
adc
out
push
gs
ss
sbbb
rorb
mov
scas
stc
lods
pop
aas
mov
inc
jmp
test
and
mov
das
mov
ret
mov
mov
adc
xlat
inc
jbe
sti
enter
lret
arpl
fdivrl
cs
nop
clc
test
sbb
mov
test
loop
sub
aad
push
repz
mov
or
enter
iret
fmuls
xlat
ljmp
js
mov
xchg
xor
das
mov
lock
inc
mov
mov
and
push
call
rorl
fistl
mov
rorb
loopne
fstpl
ret
cwtl
sub
mov
lret
cwtl
lret
enter
inc
into
mov
fwait
jle
cltd
push
sbb
repnz
push
leave
fstpl
imul
bound
arpl
mov
mov
xor
pusha
jb
push
jne
hlt
xor
leave
fstp
fiaddl
cmc
or
in
push
scas
movl
rcrb
aam
aas
mov
or
jae
inc
lock
sub
clc
movsl
adc
push
lods
stos
ficoms
inc
sti
out
mov
mov
mov
mov
fmuls
mov
lret
aaa
xor
sbb
jne
sbbl
popa
mov
test
ret
enter
arpl
inc
and
push
add
pop
cmc
and
xchg
es
outsb
hlt
pusha
in
inc
adcb
test
lret
fs
cld
addb
loope
pop
xor
shll
testl
inc
pop
pop
int3
add
cld
cmp
adc
dec
adc
and
movsb
add
cs
or
push
inc
xchg
jmp
hlt
adc
addl
test
daa
jo
mov
and
negb
adc
sub
ja
cmp
mov
cmp
shl
rorb
dec
cmp
dec
insb
jp
mov
pushf
popa
int
pop
jge
test
pop
mov
stos
orb
dec
sahf
add
andl
cwtl
xchg
or
idivb
inc
and
call
jb
mov
xchg
sbb
push
call
js
xchg
mov
nop
les
imul
fucom
jbe
inc
cltd
inc
xchg
hlt
mov
jle
daa
out
outsb
in
hlt
adc
mov
add
int3
loopne
cld
fisttpll
rcrl
in
fnstsw
mov
fnsave
adc
test
mov
iret
loopne
pop
imull
pop
or
ljmp
mov
daa
lds
or
or
ss
insl
mov
ret
hlt
push
in
out
movsl
std
add
jne
cmp
lcall
dec
xor
pop
add
xchg
pusha
jnp
and
cmpsl
nop
cld
lret
adc
cli
xchg
add
data16
aam
arpl
imul
jp
into
enter
mov
and
lods
addb
int3
cld
movsb
test
xorb
rolb
shlb
loopne
and
cmp
fcompl
mov
clc
cmp
xchg
jne
lods
fbld
sub
inc
mov
dec
stc
mov
loope
outsb
int3
loope
int3
or
iret
rcrb
rol
lret
stos
xchg
mov
dec
inc
mov
xor
lret
pop
xchg
les
out
pushf
xchg
subl
sub
add
out
sahf
into
sub
and
in
stos
cmpsb
sub
in
pop
mov
lods
mov
lret
aad
jle
xor
in
rcr
xchg
bound
lods
sub
es
add
cmp
arpl
stos
dec
dec
adc
pusha
jp
xor
sub
push
pushf
cmc
pop
inc
sbb
cmpsl
sub
hlt
cmp
push
cmp
sbb
sbb
dec
xchg
stos
leave
stc
push
add
pop
inc
sahf
stc
push
xor
int3
test
pop
xchg
jo
and
cltd
cmp
jbe
mov
sub
mov
outsl
scas
mov
bound
mov
data16
imul
xor
and
cld
push
push
push
outsb
daa
sbb
andb
lret
lahf
xchg
outsb
fldenv
or
cmp
aaa
xchg
sbb
jns
pop
in
mov
stc
push
stos
inc
and
push
dec
xchg
mov
inc
mov
out
hlt
jno
add
loop
pushf
decl
adc
test
hlt
or
in
repz
scas
push
mov
mov
lods
call
pop
loopne
push
pop
test
loope
movsl
fadds
les
dec
xchg
dec
fnstsw
sbb
xchg
sub
sub
fcompl
les
scas
jne
ljmp
or
hlt
pop
inc
xor
cli
dec
mov
fcomps
dec
sub
xchg
pop
xor
xor
pop
dec
nop
mov
enter
icebp
ret
ret
pop
add
in
jl
out
ja
inc
int
xchg
sub
sub
mov
push
jb
mov
bnd
lds
pop
sti
pop
subl
in
ds
mov
mov
js
push
pop
sub
js
push
orb
pop
push
cmpsl
sbb
mov
jne
add
adcb
imulb
outsb
mov
mov
mov
add
test
jp
mov
inc
add
cs
dec
pop
stos
sbb
std
push
lret
in
into
add
jg
sub
into
mov
push
xor
xor
mov
movsb
cmpsl
cmp
adc
xchg
xor
xor
sub
mov
xlat
push
sub
aad
mov
xor
inc
cmp
cwtl
test
jge
hlt
fmul
adcl
inc
shl
lea
aam
add
sbb
jno
mov
pop
hlt
dec
scas
dec
inc
out
inc
jl
xchg
loope
mov
in
mov
cwtl
in
hlt
dec
xor
sub
scas
fists
mov
out
pop
rolb
iret
jmp
or
hlt
push
andb
mov
dec
lret
jne
pop
push
sub
rclb
bound
ret
jno
lcall
sub
enter
push
adcl
dec
frstor
dec
add
mov
mov
mov
daa
and
sbb
fdivrs
cmp
sub
adc
add
shll
repnz
stos
jb
andb
jle
dec
into
mov
push
jmp
adcl
es
add
mov
in
sub
ss
xlat
inc
adc
add
lret
lret
xchg
insb
jecxz
or
xchg
and
pop
add
cmp
in
movsb
pop
sub
mov
mov
add
aas
jmp
popl
pop
fldl
cmpsb
add
lret
xchg
in
and
shll
mov
mov
hlt
mov
jae
clc
jo
xchg
arpl
mov
cmp
or
out
push
push
pop
out
popf
inc
dec
pop
jg
adc
adc
adc
sahf
cmp
out
es
push
iret
add
sbb
mov
dec
fprem
inc
push
sub
dec
sbbb
fmul
decl
jne
pop
rol
fiaddl
les
dec
adc
xor
loopne
popa
mov
popf
push
push
into
mov
push
imulb
repz
mov
adc
or
jg
rclb
shll
push
jge
stos
mov
ja
xchg
arpl
sub
gs
dec
sub
stos
cs
lcall
and
nop
mov
loopne
mov
push
mov
mov
and
in
imul
sub
loopne
pusha
stc
arpl
adcb
lock
xor
cwtl
fisttps
mov
stos
jnp
push
jp
push
hlt
jmp
sbb
push
sarl
or
ss
push
xchg
std
inc
jb
test
xchg
add
pop
cmp
fcoml
test
pop
jne
fldl
jg
sti
pusha
or
movsl
add
iret
pop
call
xlat
sbb
mov
add
jnp
xchg
jne
aaa
inc
mov
sbb
sub
push
fnstsw
mov
push
mov
cmp
hlt
and
mov
inc
mov
out
push
and
mov
push
scas
adc
push
and
mov
in
push
adc
dec
testb
pop
add
and
addr16
mov
xor
mov
xchg
adc
dec
and
cmc
mov
js
mov
add
jnp
jl
jmp
mov
cltd
and
sub
jne
lds
fmul
stos
cs
stos
cwtl
pop
mov
push
dec
insl
push
andl
mov
pop
inc
jp
mov
mov
pop
jne
imul
std
stc
test
test
or
dec
imul
mov
and
movsb
lret
stos
filds
cs
mov
stos
aad
mov
cs
fsts
lock
insb
jnp
testl
inc
loope
arpl
lods
lcall
inc
daa
pop
test
out
jle
cs
adc
or
push
bound
mov
or
pop
flds
cmp
je
mov
xchg
or
jno
adc
movl
mov
fnsave
pushf
jns
mov
sub
stc
mov
popa
pop
movsb
jbe
mov
imul
add
and
xor
inc
pop
or
out
or
mov
gs
add
xor
jo
mov
sbb
mov
cmp
mov
push
icebp
cwtl
test
bt
sub
adc
cmp
and
dec
jmp
jne
dec
sti
mov
mov
mov
sub
notl
sbb
das
test
sbb
inc
pop
rol
aas
jne
ss
adc
insl
test
enter
aas
adc
es
adc
jnp
pop
pop
and
sbbl
mov
in
shrl
push
push
lods
add
cmpsl
mov
aad
fcomps
jno
xchg
in
test
insl
cmpsl
pushf
add
cmpsl
aam
loope
mov
ret
cld
jne
mov
pushf
repz
jae
out
gs
repz
pop
movsl
enter
jnp
sbb
xchg
icebp
mov
mov
xor
incl
imul
pop
subb
sbb
in
mov
daa
adc
daa
stc
cmp
or
inc
jnp
jge
sar
lods
data16
incl
outsb
cs
sbb
cld
push
test
inc
xchg
cld
ljmp
int3
and
xor
data16
out
frstor
repnz
out
ss
clc
js
mov
subl
in
sub
add
orl
xchg
imul
hlt
lock
cmp
aad
adc
popl
fsubl
jne
test
mov
cltd
scas
xor
mov
cld
mov
movsb
adc
jne
pop
inc
notl
pop
pop
shrl
jne
push
nop
stos
inc
cli
and
cmpsb
test
rol
daa
fiaddl
andl
dec
mov
cmc
or
fadds
cmpsb
lods
inc
ret
mov
pop
sub
mov
je
hlt
nop
push
or
jno
dec
cmp
adc
stos
xchg
mov
scas
cmp
sub
jo
mov
cltd
mov
gs
bound
jge
sub
jg
cmpsl
cmp
int3
cmp
aas
out
dec
movsb
int3
inc
bound
orb
jle
cmp
jge
mov
sbb
sahf
mov
into
mov
mov
add
ret
xchg
mov
int
adc
les
dec
cmpsl
adc
mov
in
pop
into
stos
sub
mov
xor
rcrl
sub
imul
and
or
sahf
aad
push
jbe
sub
rcl
cmp
mov
pop
clc
inc
pusha
pop
mov
es
test
add
inc
dec
pop
cmp
add
leave
outsl
in
ja
sbb
jmp
dec
mov
cltd
sahf
adc
add
sub
outsb
lahf
popa
pusha
cli
sub
popa
enter
xchg
push
lods
push
and
addl
mov
repz
inc
xor
pop
addr16
pop
lahf
imul
hlt
inc
loopne
and
mull
add
jg
dec
hlt
inc
push
das
push
movb
in
pusha
hlt
lds
or
adc
add
jmp
mov
pop
es
sti
dec
mov
pop
jnp
dec
arpl
xlat
adc
test
dec
repnz
into
lock
scas
dec
pop
pop
repz
jmp
lods
or
addr16
or
adc
mov
inc
les
fsubl
sbb
jae
and
cwtl
fwait
lea
loop
cmp
rcr
pushf
and
add
sub
lahf
sti
pop
into
jne
xorb
lock
js
hlt
cmp
xor
inc
cltd
add
push
leave
add
jne
loopne
lds
adc
nop
ret
bound
xchg
adc
daa
dec
out
jmp
das
or
and
add
lock
int3
arpl
add
mov
arpl
xchg
aaa
add
mov
cs
mov
mov
inc
popa
pop
cmpsl
mov
pop
cmp
jg
pop
cmc
inc
and
movsb
and
mov
add
xchg
sub
lea
push
dec
jns
fiadds
adc
sbb
fldt
pop
xchg
dec
push
addr16
jge
mov
aad
mov
enter
fisubrl
xchg
xchg
flds
mov
popf
push
shll
push
hlt
mov
sub
xchg
sbb
jecxz
into
sub
inc
test
insb
repz
hlt
or
mov
in
lret
stos
outsb
fwait
ret
stc
push
mov
js
adc
pop
movsb
mov
std
pusha
adc
and
push
cld
in
mov
xor
aas
out
lret
cmc
mov
out
nop
and
inc
data16
pop
repz
in
or
repnz
hlt
adc
mov
jmp
add
fistpll
adc
aam
sub
sub
mov
inc
insl
hlt
and
inc
mov
jns
rolb
fnstcw
sub
nop
inc
dec
call
push
popa
mov
sahf
sub
mov
mov
adcl
mov
sub
xor
cwtl
loope
push
pusha
xchg
push
cmp
ja
pop
lock
popf
mov
sbb
xchg
in
jge
lret
inc
mov
shl
mov
mov
popa
rorb
lahf
xor
incl
xchg
enter
addb
push
cli
fmulp
into
jb
push
adc
les
inc
mov
int
adc
rcl
in
lret
icebp
sub
sub
mov
xchg
fld
icebp
int3
inc
mov
adc
xor
xchg
mov
sub
das
jnp
das
inc
mov
addb
pop
mov
loope
scas
sbb
pop
icebp
in
inc
movsb
xor
sbb
movsl
gs
or
dec
pop
adc
aad
inc
xchg
jbe
dec
das
int3
jmp
ss
sub
sub
adcl
jecxz
dec
insl
outsb
inc
lods
jp
push
scas
jo
jbe
mov
aam
dec
cmpsb
pop
cmpsb
pop
mov
aam
rcr
addb
jmp
je
pop
xor
or
shlb
int3
dec
fldt
pop
mov
popa
inc
jnp
test
pop
mov
jno
push
test
ret
inc
push
jns
jmp
test
dec
jne
ffree
aas
loop
push
pop
push
push
and
adc
repnz
arpl
cmp
bound
rcrl
xchg
push
adc
dec
mov
pushf
test
mov
add
push
out
popf
xlat
adc
dec
mov
cmp
adc
aas
mov
pop
movsl
push
or
pusha
mov
lods
mov
add
jl
inc
mov
call
test
push
jle
stc
andb
or
loopne
nop
repz
mov
or
sub
imul
mov
adc
push
dec
or
xor
xor
stos
fidivrl
xchg
int
cmp
dec
mov
lahf
rcr
push
mov
js
push
push
nop
in
int3
hlt
push
sub
xchg
loopne
push
in
imul
xor
pop
mov
xchg
sbb
les
test
ret
push
nop
mov
fucomp
xor
cmpsl
xchg
and
adc
fldt
repz
pop
insl
push
loope
into
imul
mov
sarb
add
pusha
sub
adc
dec
outsl
mov
mov
in
xchg
or
inc
push
sub
push
inc
sbb
test
xchg
mov
leave
lcall
test
jne
and
inc
inc
mov
cmc
icebp
and
jne
mov
jle
je
insl
jmp
or
inc
sbb
dec
and
and
popf
hlt
stc
roll
xlat
inc
xor
in
movsl
add
inc
leave
pop
inc
ret
nop
popf
dec
cmp
loope
mov
mov
adc
scas
lea
loope
xor
nop
hlt
xchg
adc
sub
xchg
iret
or
mov
sub
cmp
leave
inc
nop
sub
xor
push
pop
cmp
shlb
and
lcall
jge
inc
jne
xchg
add
cwtl
dec
bnd
std
push
movsb
faddl
stos
hlt
or
lret
add
insl
lods
out
push
daa
scas
xor
jmp
xchg
adc
dec
movsl
stos
sub
idivb
jne
in
aas
test
inc
mov
xor
das
pop
sub
sub
xchg
movsb
inc
xchg
cmc
imul
fcoms
les
or
popf
popa
mov
dec
ss
mov
hlt
inc
mov
xchg
mov
test
jnp
pop
mov
testb
adc
movsb
push
imul
dec
sub
aam
divb
push
pop
mov
fidivl
sbb
xchg
gs
inc
pop
enter
sub
call
iret
leave
xorl
cmc
mov
jle
xorl
lret
sub
xchg
nop
cmpsb
sub
mov
inc
and
mov
cmp
scas
mov
cmc
scas
out
lcall
add
mov
mov
pop
cs
fbld
push
mov
outsl
hlt
jo
mov
mov
lods
loopne
xor
or
mov
add
das
cmpsl
jns
push
sahf
jne
in
pop
cmpsl
std
xchg
xor
jl
pop
sub
out
mov
sbb
and
lret
push
out
icebp
jmp
mov
add
sahf
shl
push
xchg
outsb
andb
mov
xchg
movsl
insb
rclb
int3
mov
add
rcrl
jb
pop
dec
ljmp
mov
sub
movsb
icebp
jne
xchg
dec
rclb
ffree
xchg
sahf
add
add
push
push
add
hlt
pop
adc
inc
mov
aad
fs
jle
mov
cmp
mov
inc
aas
enter
cltd
rorl
adc
popa
imul
sub
mov
mov
fadd
inc
cmp
mov
mov
std
test
or
mov
xor
aas
push
mov
fisubrs
lret
cmp
mov
jno
lret
push
in
jne
mov
sub
jle
and
rorb
jns
mov
out
out
push
mov
idivb
daa
xchg
lret
stos
push
repz
jg
cwtl
das
aam
mov
pop
fadds
rcrl
push
ss
push
mov
cld
fldcw
adc
mov
enter
mov
fcmovne
aas
dec
call
data16
and
and
scas
mov
mov
test
scas
push
inc
jne
inc
imul
add
mov
push
cmpl
shrl
jle
jne
aas
and
pop
js
out
push
jb
or
fstpl
pop
and
xlat
cmp
cmp
adcl
jae
mov
cmp
sub
das
add
roll
mov
fsubr
frstor
mov
jge
xchg
subl
ds
pop
cli
or
out
or
jbe
sub
xchg
fpatan
ret
in
loope
inc
sbb
lock
mov
or
sbb
lahf
push
aas
xchg
inc
fldcw
mov
std
loope
xor
or
mov
divb
dec
sahf
fmuls
js
sub
mov
cld
add
ret
cmp
sub
pop
pop
jnp
push
xor
lds
aaa
mov
xor
dec
push
enter
hlt
ljmp
int3
sub
xchg
cmc
rcrl
stc
inc
lcall
ljmp
mov
shlb
cmc
xchg
sub
dec
mov
adc
nop
movsb
movsl
dec
inc
rorl
inc
js
inc
cmpsl
fcmovne
scas
in
das
push
cmp
lret
push
stos
js
hlt
push
mov
nop
popf
xchg
dec
imul
mov
jl
mov
push
sbb
clc
shll
lahf
pop
xor
and
inc
sbb
jne
repnz
les
add
cmp
test
add
imul
std
lods
lods
pop
mov
pop
int3
sub
or
cmpsb
jmp
or
lahf
loope
fwait
cmpl
in
das
stos
outsl
push
lods
jno
cmpsl
hlt
dec
sub
fistps
icebp
subl
sti
das
dec
stc
sub
ret
lods
les
insb
adc
not
ret
dec
cld
mov
je
fsubrl
or
insb
and
mov
xor
ljmp
jbe
cld
xchg
fisubs
pop
sub
or
jnp
lock
es
mov
and
dec
outsb
adc
sub
push
sarb
mov
jb
and
or
push
jecxz
adc
pop
in
loopne
gs
mov
ret
hlt
aad
lret
xlat
inc
add
cmp
mov
xor
aam
arpl
lret
jle
lock
out
mov
mov
fiaddl
test
and
sbb
inc
stos
in
es
and
hlt
xlat
cld
mov
fldt
jo
cmp
aas
leave
mov
int
mov
loopne
loopne
fdivl
cmpsb
and
shl
jne
dec
cmpsb
lahf
push
or
push
pop
inc
jmp
xchg
push
or
sub
call
fxam
mov
mov
adcl
rorl
inc
jl
mov
or
dec
sub
inc
jne
mov
jbe
add
shl
xchg
lret
dec
dec
hlt
cmpsl
mulb
lahf
test
dec
aas
stos
cld
hlt
idivb
incb
das
leave
sub
mov
jl
scas
mulb
cwtl
or
je
inc
stc
cmp
cli
out
mov
xchg
sub
dec
scas
sbb
xor
pusha
xchg
cmp
pop
loope
mov
stos
sbb
xchg
dec
std
adcb
cmp
inc
inc
pushf
push
les
into
adc
inc
pusha
andl
pop
jne
sbb
add
mov
and
leave
lods
and
cmpsl
push
push
stos
sub
push
rclb
lock
mov
mov
hlt
jae
and
call
or
fldcw
testb
int
jns
out
in
ret
add
and
insl
clc
jbe
pop
imul
andl
xor
mov
dec
movb
lcall
cwtl
push
sub
mov
inc
add
jne
int
dec
mov
sub
and
std
les
lock
orb
xchg
dec
test
jmp
fcompl
lods
cld
cmpsb
inc
nop
loop
adc
dec
cmp
push
lods
dec
pop
mov
addl
mov
mov
fmull
shrl
fisubs
cli
xor
subb
jnp
jno
and
mov
sarb
cmpsl
lret
rcrl
add
inc
insb
cld
sub
test
repnz
add
mov
jbe
scas
out
test
cltd
mov
rcr
pop
outsb
cmp
mov
and
mov
xor
out
sub
cmp
nop
pushf
fisubl
stos
mov
es
dec
inc
cltd
decl
jno
xor
cwtl
jne
mov
and
xchg
cmpsb
out
mov
test
pusha
stc
add
and
dec
push
pop
mov
lret
jle
pop
push
xchg
js
add
sbb
push
jl
andl
xor
adc
mov
repnz
stos
push
ret
sbb
rcrl
hlt
fisubrl
test
or
cmpsb
mulb
pop
or
lods
std
and
imul
mov
and
xchg
and
inc
push
and
xchg
add
push
lahf
nop
add
les
sbb
push
sub
ss
dec
icebp
adc
xchg
pop
xor
mov
jecxz
inc
xchg
mov
dec
insl
mov
shlb
mov
xchg
ja
loope
push
sbb
hlt
imul
out
into
fistps
imul
dec
ja
or
dec
fwait
aas
mov
cmp
xor
inc
sub
jle
xchg
push
push
fwait
add
call
sub
fisttps
ss
imul
mov
adcb
mov
add
mov
std
and
fstl
int
fwait
pop
adc
or
lock
loopne
xor
popf
adc
sub
dec
cmc
pop
shlb
mov
xchg
cli
sti
add
ret
icebp
cmc
jo
lock
imul
aad
clc
mov
jg
es
jnp
pop
hlt
push
mov
lods
sti
call
adc
fcoml
loopne
pop
add
sub
data16
scas
add
add
push
sub
push
aam
sbb
lahf
data16
popa
fdivrl
insl
xchg
lods
and
out
pop
and
pop
sub
jp
xchg
out
into
sti
icebp
mov
loop
mov
ljmp
xchg
sbb
sbbl
in
test
filds
sub
test
add
arpl
add
loopne
pop
ret
clc
movsb
into
movsl
jmp
adc
decb
cs
aad
mov
xorb
jae
cwtl
lcall
jl
rcrb
movsl
cmp
mov
hlt
pop
push
add
sbb
cmp
shr
pop
out
mov
sbb
inc
nop
sub
ret
mov
insb
fisubrl
sub
sahf
arpl
jg
sub
xor
cmpsb
cmp
bswap
dec
sarb
inc
inc
sub
mov
pop
xchg
testb
xchg
push
fistpl
mov
out
into
cs
mov
jge
push
adc
add
add
icebp
xor
jle
add
mov
xchg
mov
xchg
cs
pop
and
jb
xor
hlt
test
jmp
mov
inc
cmpl
ja
gs
dec
test
gs
add
ret
cmp
jnp
mov
sub
scas
sub
adcb
jne
sahf
inc
xor
stos
test
enter
sarb
pop
loope
pop
sub
sti
lods
xchg
out
pop
mov
mov
test
scas
jp
jbe
mov
push
mov
clc
adc
push
aad
inc
sarl
scas
pop
pop
add
sbb
in
dec
leave
and
and
or
mov
or
das
stc
adc
dec
or
mov
les
xor
leave
es
or
mov
pop
mov
fs
pop
sub
movsb
fnstcw
jbe
hlt
dec
jp
leave
mov
jl
mov
daa
cs
aam
or
fsubp
mov
scas
call
ret
mov
adc
and
mov
mov
xchg
xchg
stos
enter
mov
nop
mov
push
inc
xor
mov
jne
stc
fsubs
loop
adc
sbb
sub
ret
pushf
pop
scas
sbb
popf
push
enter
pop
mov
rol
aam
inc
jne
inc
add
andb
repz
gs
stos
dec
sub
push
xlat
mov
out
add
jns
and
ret
std
adcb
icebp
adcb
mov
ror
arpl
jmp
addr16
dec
xchg
adc
cs
rorl
pop
jns
adc
movq
notb
sbb
dec
jmp
fcmovnb
add
pop
lcall
pop
sbb
or
movsl
inc
inc
jno
popa
clc
lcall
mov
mov
cltd
and
mov
mov
cmpb
cwtl
cld
push
mov
push
les
cmp
or
dec
jns
addl
mov
mov
mov
add
sub
jmp
movsb
stos
add
jae
xchg
mov
sbb
mov
sub
jmp
test
xchg
jge
add
loopne
pop
loopne
ss
mov
aaa
bound
inc
cmpsb
int3
std
in
cmp
gs
mov
inc
mov
popf
or
shlb
aad
and
sub
push
add
add
inc
mov
in
lret
push
and
inc
sbb
or
filds
shrl
adc
push
dec
aam
push
das
fs
inc
jecxz
andl
mov
imul
and
jns
les
dec
adc
mov
testl
out
mov
fstl
std
insl
pop
pop
mov
sahf
push
lahf
lcall
mov
popf
xchg
dec
es
inc
xchg
fs
dec
add
sub
cmpsl
xchg
test
adc
aad
add
sbb
ficompl
mov
sub
pop
sahf
add
sbb
test
notl
mov
aaa
add
mov
addr16
lock
add
mov
or
jmp
es
aam
mov
hlt
push
or
jp
int3
add
mov
scas
sbb
rol
outsb
stc
ljmp
or
jle
aaa
sti
adc
mov
in
cmpsb
fldl
lret
jge
adc
cmp
les
out
or
pusha
and
adc
mov
in
out
sti
mov
dec
and
test
jle
stos
pusha
jl
mov
mov
xor
xor
or
dec
jbe
add
mov
mov
cltd
xlat
push
xchg
mov
dec
and
pop
sub
or
les
jecxz
in
sub
mov
js
pop
mov
mov
sub
icebp
add
xchg
and
pop
jo
mov
call
or
pop
cltd
adc
dec
jne
pop
cmp
mov
pop
dec
xchg
fists
repz
xchg
pop
movb
pop
subl
frstor
movsl
jne
pop
pop
test
mov
gs
mov
or
jmp
fisttps
xchg
fiaddl
out
or
mov
dec
cmp
xor
push
push
inc
sub
popa
hlt
lret
mov
loope
movntq
out
jmp
js
enter
jne
or
push
stos
fsub
mov
cmp
test
fists
lods
inc
icebp
sbb
jge
movsl
lea
aas
mov
vphaddbd
int3
pop
repnz
xor
mov
ljmp
pop
pop
cmp
aam
cmp
std
add
cs
dec
xorl
adc
pop
xor
inc
cmpsb
inc
dec
in
mov
int3
add
add
mov
test
inc
je
fildl
fadds
xchg
pusha
xor
or
movsb
flds
dec
jae
into
mov
andb
ret
sbb
mov
cmp
inc
pop
xchg
addr16
int
pop
mov
sub
stos
xchg
ficompl
hlt
push
repz
and
into
pop
mov
inc
mov
xchg
xchg
rclb
aaa
arpl
mov
jne
cld
stos
loopne
adc
inc
adc
ds
mov
cmc
sub
pop
mov
xchg
mov
dec
xchg
test
cmc
call
sub
xlat
adc
push
and
ljmp
xchg
repnz
ss
mov
mov
jno
movsl
ljmp
mov
inc
arpl
scas
dec
lea
mov
or
stc
in
les
or
mov
loopne
incl
jp
add
fcomp
add
push
push
pop
inc
stos
int
push
dec
mov
rorl
pop
enter
pusha
jmp
add
dec
in
stos
dec
mov
test
imul
sbb
pop
fcmove
mov
sbb
movsb
mov
dec
movsb
lods
mov
fnstenv
mov
pop
jne
pop
xchg
jl
dec
arpl
movb
mov
xchg
sub
repz
cmc
mov
lods
movsl
push
in
dec
out
mov
pop
insl
and
xchg
jno
sub
xchg
pusha
lahf
mov
dec
mov
loop
into
mov
sbbl
pop
int
enter
bound
push
sbbb
mov
pushf
in
hlt
lods
fcomp
jb
sub
sbb
cmp
test
and
xchg
mov
and
insb
xor
add
fstpl
lret
addr16
dec
outsl
pop
and
mov
sub
cli
xchg
mov
jne
lods
icebp
dec
and
adcb
inc
test
loopne
sbb
or
loope
insl
and
addr16
inc
aam
pop
pop
lods
jb
or
aad
cltd
lods
xor
mov
addr16
stos
stos
fnstenv
dec
lcall
xlat
pop
adc
add
aas
cmp
xchg
mov
out
loope
loope
pop
pop
sub
lods
mov
iret
xor
nop
cmp
jp
flds
xchg
adc
mov
cmp
hlt
sbb
fnstcw
and
dec
mov
mov
movsl
mov
push
lahf
ja
push
fdivl
pop
sub
and
push
mov
loope
pusha
movsb
ja
xchg
pop
stos
ror
test
out
rcll
pop
ljmp
test
xchg
in
filds
inc
icebp
stos
test
and
cmp
popf
lret
xlat
add
nop
pop
add
mov
outsl
fsubl
lds
xor
out
lret
nop/reserved
leave
jle
rcrl
lods
stc
xchg
gs
stos
imul
sub
nop
scas
and
leave
jle
mov
out
negb
cmpsl
cmp
enter
xchg
jb
inc
clc
push
or
pop
jp
mov
cmp
or
adc
out
mov
cmp
cmpsb
lods
jne
imul
pop
xor
xchg
mov
enter
out
cmp
inc
int3
xchg
push
jne
aaa
add
sbb
and
mov
jns
xor
dec
out
jmp
mov
in
mov
jne
cs
pop
fnsave
mov
dec
mov
mov
loope
mov
sub
and
mov
ljmp
repnz
sub
and
ljmp
inc
dec
mov
outsl
loop
call
mov
stc
sahf
adc
dec
popf
js
mull
decl
cmpb
cmpsl
movsl
add
xchg
sub
fdivs
jmp
clc
add
mov
shl
jmp
ret
scas
mov
lds
jne
mov
cwtl
aam
out
insl
mov
int3
mov
enter
into
adc
test
testb
test
rclb
pusha
jmp
pop
aam
jg
and
test
fists
jl
lock
repnz
push
or
mov
sbbl
xchg
mov
les
movsb
rolb
xchg
dec
jg
test
lret
es
xchg
add
int
mov
negb
ror
inc
adc
xchg
mov
test
jbe
cmp
mov
fistps
addb
lea
leave
arpl
outsl
roll
aas
repnz
pusha
in
insb
cmp
xor
mov
mov
into
in
ja
loopne
jno
es
cli
mov
jecxz
fidivs
std
lock
xchg
in
shlb
mov
fimuls
pop
jmp
dec
sub
cmpsl
adc
fbstp
shrb
daa
ret
cmp
add
jmp
fdivp
mov
stc
pop
mov
adcb
sub
fildl
mov
lock
mov
add
hlt
lcall
dec
fstl
mov
call
add
fldenv
sahf
push
jno
mov
stos
cmpsb
mov
outsb
xorl
sub
adc
test
pop
sub
fldl
hlt
mov
push
gs
cmp
clc
sub
sbb
daa
into
insb
sub
inc
cmpsb
jg
xchg
movsl
mov
enter
insb
adc
enter
cld
ljmp
dec
loope
mov
sbb
mov
jne
notb
outsb
cld
add
sahf
nop
push
hlt
loop
stc
or
cmp
dec
xchg
cmpsl
das
mov
adcb
and
pop
or
test
inc
fmulp
fwait
nop
push
incb
test
cs
xchg
les
adc
dec
jmp
pusha
adc
mov
shl
jne
jnp
xchg
into
or
push
mov
and
jg
dec
add
cmp
hlt
movsb
xchg
aam
and
adc
xchg
mov
push
fidivrl
stos
push
xlat
adc
shll
add
lods
ret
or
fstpt
hlt
test
sub
sub
mov
jp
lret
jge
push
mov
movsl
ja
mov
pushf
sbb
ucomiss
or
hlt
mov
dec
push
or
fdivl
jmp
adc
stos
dec
in
or
in
in
push
mov
lock
inc
cwtl
or
loopne
mov
mov
out
test
cmp
rorb
mov
std
sbb
ljmp
cli
push
mov
sub
leave
mov
xorb
iret
hlt
sbb
mov
mov
cwtl
into
sub
fwait
jmp
test
cmp
xorb
insl
daa
pop
clc
fstp
mov
mov
mov
stc
jge
mov
jg
roll
jle
mov
stc
mov
inc
mov
ds
and
sub
adc
jne
imul
add
ljmp
cmp
fcom
mov
cmpsl
popf
orb
cmpsb
out
push
mov
addr16
xchg
and
inc
out
loope
jne
jp
jmp
xchg
iret
orb
pop
mov
hlt
pop
jl
inc
js
test
adc
inc
lcall
mov
fdivl
mov
xor
scas
push
and
mov
scas
dec
pop
mov
out
addr16
je
mov
jb
int3
lods
pop
arpl
pop
hlt
aaa
or
sarl
jmp
mov
mov
xchg
add
pusha
lds
inc
call
pop
xchg
in
jno
mov
xchg
outsb
out
or
aas
xchg
mov
popa
movsb
xor
jge
mov
push
hlt
scas
push
pop
add
pop
sub
dec
in
jbe
cwtl
jl
inc
in
sbbl
jae
dec
cs
dec
push
cltd
imull
mov
ss
mov
jo
int
pop
ljmp
stc
les
aaa
push
addr16
sub
outsb
stos
cmc
popf
or
pusha
inc
fstl
xchg
in
ficoms
subl
sub
fwait
shrl
jnp
cmp
jge
and
xor
enter
out
je
hlt
pop
jb
sahf
js
jp
or
push
inc
or
ret
lods
cmp
pushl
inc
cmp
pop
mov
pop
fdivs
or
daa
pop
out
lods
jbe
mov
sub
aas
imul
out
es
int3
pop
movsl
sub
inc
je
jb
xor
mov
push
xchg
adc
and
sbb
xchg
out
xchg
xor
xchg
lret
cwtl
les
hlt
xor
lock
jg
aad
sub
arpl
int3
inc
pop
leave
jno
popf
call
dec
movsb
jb
jae
pusha
push
push
adc
adc
mov
jne
cld
lcall
inc
out
cmp
fdivs
sub
movsl
pop
shlb
popa
orl
sbb
jne
pusha
push
sti
add
inc
push
push
mov
push
in
stos
cltd
lods
int3
push
popa
das
inc
dec
sbb
xor
sub
popa
aad
out
imul
stos
pop
inc
addb
add
insl
and
in
nop
popf
roll
test
les
movsl
stos
jb
orl
hlt
imul
test
fisttps
shlb
js
mov
imull
xlat
dec
into
aam
mov
dec
sub
jmp
call
xor
std
inc
dec
test
ret
sub
push
add
fbld
js
rorb
into
pop
ret
and
les
push
nop
cmpsl
ljmp
jecxz
aaa
aas
mov
inc
jae
insl
popa
ds
pop
jp
sub
jp
mov
stc
xchg
ret
jae
imul
jp
mov
or
leave
pop
mov
mov
xchg
push
mov
xchg
xchg
cwtl
scas
movsl
jge
in
fsubr
mov
and
pop
cmpsl
rolb
xchg
bound
imul
pop
data16
stos
imul
es
pop
in
mov
int3
es
mov
inc
lock
shll
mov
shrb
mov
clc
push
push
mov
inc
rcll
inc
pushf
jnp
mov
xlat
xorl
cmp
adc
movsl
xor
xor
push
out
xor
and
mov
fiadds
sbb
sub
add
mov
sahf
mov
push
jmp
roll
test
xchg
cmp
pop
pmulhuw
pop
bswap
fistps
dec
shrl
stos
roll
xchg
lcall
roll
fsubs
adc
subl
and
push
dec
pushf
sub
sbb
mov
push
or
popl
adcb
dec
es
roll
pop
outsl
push
add
fldt
or
sbb
xchg
add
aas
ljmp
push
imull
scas
in
fs
stos
xor
outsb
insl
add
and
jg
dec
and
pop
and
xor
fimull
aad
lods
popf
xchg
movsb
loope
xchg
in
inc
sbb
sahf
daa
aam
repz
xor
xchg
into
dec
sub
mov
jmp
mov
ret
mov
dec
inc
scas
and
les
enter
popl
cmpsl
jle
or
mov
popa
hlt
xorb
and
add
ja
jmp
jg
adc
pushf
hlt
lret
neg
jno
in
add
push
ljmp
jp
mov
ret
xor
mov
fs
jns
int3
cs
daa
fcmovnu
xchg
mov
outsb
in
push
cmpsb
in
dec
xchg
test
fwait
dec
insl
jne
std
jbe
mov
aas
test
push
gs
sbb
rcrb
cmp
xchg
into
jns
popf
mov
movsb
xor
adc
sub
je
int3
adc
shl
scas
ss
das
mov
hlt
push
popa
adc
out
push
cmp
jmp
mov
fdivl
inc
insl
and
xlat
sub
fadds
rorl
loope
js
mov
inc
push
insb
mov
shlb
cmc
adc
in
push
pushf
cmp
add
scas
xchg
aas
cwtl
adc
imul
sub
add
fucomip
mov
push
loopne
sbbb
adc
cwtl
imul
jbe
mov
test
lret
leave
or
add
mov
adc
add
adc
stos
inc
push
xor
stos
jne
jmp
negl
int3
ljmp
insb
xchg
inc
enter
enter
inc
pushf
mov
int
mov
mov
xchg
or
jmp
nop
sbb
sbb
pop
loop
jb
xchg
cli
cld
shlb
test
push
mov
fldcw
mov
lea
mov
mov
stc
out
es
pop
add
and
push
inc
jno
jne
test
test
aas
dec
jns
inc
rorl
cmpsb
push
add
jbe
dec
or
leave
mov
mov
out
enter
rcll
mov
mov
mov
jg
sbb
out
push
xchg
movsl
sbb
fwait
js
sbb
pop
push
lea
cmp
mov
fistpll
insl
and
aaa
shll
add
cld
out
movl
inc
jmp
std
into
jnp
push
mulb
jle
aas
pushf
push
pop
sbb
add
xchg
mov
cmp
add
jmp
dec
subb
jne
dec
lods
lea
cld
mov
js
and
or
out
repnz
jg
add
lcall
nop
xchg
add
jne
or
loope
lods
add
mov
sti
jmp
loop
push
lcall
adc
scas
jbe
mov
xor
dec
lods
mov
test
mov
insl
sub
jbe
loopne
mov
movsb
rclb
gs
cmp
inc
xchg
sbbb
mov
inc
or
inc
hlt
or
push
iret
pop
rolb
mov
fiaddl
test
rcl
popa
sub
jne
cmp
sub
into
mov
mov
stos
loope,pt
nop
les
sbb
push
xchg
sbb
hlt
icebp
mov
mov
adc
mov
mov
inc
jle
push
lods
add
sbb
mov
ret
std
ret
push
xorb
les
cli
into
lret
push
lock
test
mov
mov
sahf
mov
fcomp
test
cmp
mov
or
mov
jae
add
mov
clc
jl
push
mov
jle
push
cmpsb
jl
mov
cmc
push
loopne
cmp
add
in
pop
das
rcrb
mov
stos
xor
pop
add
les
mov
fdivrl
or
lods
xchg
insb
fsubrp
ret
push
mov
movsb
outsb
fnsave
test
insb
push
inc
enter
add
jo
testb
inc
sub
movb
xchg
subb
out
xlat
imul
jno
fdivl
ljmp
pop
js
lods
idivl
cmc
and
or
pop
or
or
outsl
xorb
fdivr
cli
lcall
pop
mov
dec
mov
push
add
mov
or
inc
pusha
add
mov
mov
ss
aaa
and
hlt
xchg
jg
jge
xorb
bound
lret
cs
pop
lret
test
mov
lods
insl
fadds
cmc
cmp
shrb
sub
pop
cltd
xor
mov
movsb
push
add
mov
aam
lds
mov
mov
mov
inc
xchg
inc
xchg
ljmp
ret
nop
in
pop
scas
hlt
cmp
or
inc
iret
outsb
sti
push
loope
in
es
cwtl
in
pop
sbb
pop
scas
jl
push
hlt
lods
ret
sub
mov
cmp
into
repz
pusha
pop
cmp
xorl
int
xchg
push
loop
and
clc
mov
xlat
cmpb
sbb
fdivl
xchg
nop
sbb
nop
imul
pusha
fidivs
cltd
icebp
ja
shrl
push
mov
adc
pushf
hlt
mov
mov
fistpll
lret
add
xor
xorb
pop
hlt
movsl
and
in
xchg
fiadds
push
loope
sbb
cmpsb
xchg
jle
jno
in
aas
mov
xchg
pop
pushf
stos
hlt
clc
cmp
pop
mov
push
mov
lret
out
xor
shll
out
rcrb
add
imul
fwait
inc
cmp
inc
xor
cs
xor
decb
sub
jbe
int
es
leave
lock
jb
loope
loope
xor
sub
mov
test
pop
ret
ret
hlt
cmpsl
mov
loopne
jne
jbe
dec
sub
nop
imul
scas
hlt
or
pop
imul
in
lods
loop
and
xlat
pop
shr
add
add
xchg
add
xor
incb
jmp
stc
jnp
mov
mov
or
xchg
lret
mov
stos
loopne
lods
ffree
pushf
fisubs
xchg
inc
fdivp
cli
push
lahf
jge
ror
push
push
imul
push
jecxz
mov
push
jne
mov
mov
test
sbb
jne
cmp
arpl
sarb
push
cmp
pop
idivl
into
ljmp
sub
and
call
pusha
test
adc
std
lds
sbb
xor
insb
loop
xchg
xorb
add
and
mov
pop
xlat
roll
or
lcall
lock
test
test
mov
mov
lret
mov
sub
lock
xchg
mov
sbb
movsb
push
cmpsl
pusha
cwtl
cmc
fdivp
out
stos
lret
jecxz
cmp
add
loope
fsubp
movsb
jb
lock
mov
pop
jle
cld
xor
mov
ret
in
fisttpll
mov
int
cmpl
arpl
or
pop
cmp
mov
mov
xchg
out
or
in
dec
icebp
or
roll
push
pop
mov
stc
dec
adc
xchg
cmpsb
dec
xchg
xlat
jle
dec
push
call
cltd
push
sbb
jmp
test
nop
fiadds
or
int3
nop
inc
hlt
adc
inc
add
loope
xchg
dec
xchg
call
fnstcw
push
das
mov
pop
mov
pop
mov
jle
pop
lds
lock
jl
into
sub
add
push
or
cld
std
mov
cmpl
jle
xchg
fadd
xchg
sub
insb
int3
int
xchg
push
imull
add
inc
jne
scas
or
ss
mov
pop
imul
xchg
ficoml
xchg
ror
fcmovnu
and
push
dec
in
mov
shll
cs
pop
adc
enter
adc
xchg
dec
sarl
int3
enter
pop
fstl
mov
jno
and
shrb
mov
pop
icebp
pop
hlt
outsl
xchg
stos
inc
aad
in
or
mov
cmpsl
pop
imul
jne
aad
mov
inc
push
xchg
daa
lret
jmp
lods
adc
fwait
stos
xchg
pop
xchg
fistps
movsl
in
or
dec
testb
in
and
xor
mov
jno
scas
cltd
adc
pop
sub
mov
lods
pop
rcrl
and
push
sub
xorl
data16
jge
rorl
mov
leave
inc
and
xchg
cmp
mov
nop
mov
adc
xchg
mov
rcrb
rcr
dec
mov
rclb
icebp
and
jns
dec
mov
divb
sbb
jmp
mov
mov
loopne
sub
or
ja
xor
mov
mov
dec
dec
mov
sub
iret
cmpsb
xchg
cli
xchg
sbb
jne
mov
cmpsb
fwait
dec
lcall
pop
push
pop
pusha
sbb
mov
clc
adcl
das
pop
test
pop
bnd
in
test
jne
push
add
jl
and
sbb
adc
or
xor
insl
int
adc
dec
arpl
sbb
sub
icebp
aas
in
add
out
push
out
mov
adc
shll
jnp
sahf
rorb
mov
fisubs
insl
sbb
jmp
add
inc
add
out
loope
scas
cmpsb
add
jle
inc
es
ljmp
jbe
std
inc
sub
sub
outsb
mov
cmp
test
sub
int
pop
pop
stos
jae
out
stos
sbb
xchg
pop
pop
jns
inc
icebp
hlt
jmp
cld
inc
sbb
mov
sub
or
mov
mov
into
sti
sahf
jb
pop
cmpsl
xchg
shlb
mov
mov
repz
clc
int3
int3
in
xchg
jne
xor
sub
mov
sbb
jecxz
jo
fmuls
pop
ret
sarl
dec
xor
inc
sbb
fsubl
mov
mov
cmp
xor
sbb
imul
jbe
pop
mov
fildl
loopne
pop
add
loop
fcoml
hlt
scas
inc
add
or
dec
lds
and
mov
add
pop
jle
lcall
sub
cmpl
stos
mov
outsb
xchg
idivl
jnp
jb
leave
arpl
adc
lods
das
shrl
mov
inc
test
add
mov
mov
inc
scas
les
mov
sbb
mov
inc
fdivrl
sti
adc
fisubs
sub
jg
insb
pop
cmp
lcall
add
in
push
stos
aad
stos
add
bound
cmp
sub
out
or
add
fcmovnbe
fiaddl
enter
inc
loope
mov
movsl
add
jecxz
xorb
movsl
cmpsl
push
dec
push
or
push
jmp
mov
cmp
ret
mov
aam
pop
mov
insl
lea
test
inc
cmc
pusha
lock
xor
loope
and
test
inc
adc
test
jne
out
subl
nop
ljmp
push
int
jbe
add
nop
xor
sbb
pop
lock
stos
setnp
in
pop
dec
fidivl
or
movsb
jge
mov
push
jmp
xchg
inc
lods
jno
imul
adc
int3
inc
xchg
into
dec
popf
push
aas
enter
push
push
push
repz
mov
mov
cmp
rclb
cmc
sbb
lret
add
cld
into
pusha
sub
mov
sub
xchg
out
pop
es
pop
jb
std
or
outsb
into
jnp
das
sahf
jne
inc
subb
xor
pop
dec
xor
xor
add
mov
jmp
movsl
test
xchg
push
add
insb
int3
in
xchg
hlt
xchg
stos
je
or
sahf
call
daa
push
in
sbb
jg
je
inc
sub
jle
xchg
mov
test
xchg
push
sub
fiadds
aam
fmull
in
fmull
nop
shlb
adc
push
mov
jnp
cwtl
out
sub
jnp
xacquire
mov
and
dec
out
jbe
pusha
xchg
jle
pop
out
arpl
fcmovu
xchg
mov
int3
loopne
lcall
cwtl
xchg
pop
int3
pop
inc
lods
sub
cli
inc
sub
dec
ret
xor
adc
cmpl
mov
pushf
cwtl
test
or
movsb
jmp
jecxz
mov
or
fistps
ss
add
xchg
stos
outsb
adc
scas
dec
shl
add
jecxz
cmc
sub
stos
sarb
adc
push
cmp
mov
fs
jb
int
dec
out
jle
outsb
sbb
push
pushf
lcall
nop
imul
add
xor
hlt
adc
cmp
les
mov
in
pop
add
std
pop
stc
xchg
xchg
mov
ret
leave
stos
pop
in
mov
or
mov
sub
stc
pop
mov
ljmp
data16
cmp
imul
movsb
aam
sbb
adc
pop
shlb
movsb
adc
sbbl
xchg
inc
jl
add
push
adc
stc
fcompl
pop
out
es
or
adc
pop
inc
fcompl
jecxz
xor
jg
ss
pop
xor
ret
insb
leave
mov
mov
dec
pusha
movsb
push
or
or
fcomip
aas
push
xor
inc
stos
mov
xchg
stc
pop
adc
cli
cmp
sub
xor
icebp
dec
mov
daa
inc
sub
movsb
mov
iret
jne
sbb
jnp
mov
mov
pop
mov
aas
sbb
mov
mov
or
jle
xchg
sahf
or
add
nop
aaa
add
das
cli
add
stos
loopne
lea
push
inc
and
in
push
leave
xlat
sub
dec
ret
adc
inc
test
aam
lock
fs
frstor
rorb
push
cmpsb
xchg
or
andb
cli
pop
xchg
call
mov
enter
enter
inc
stos
pushf
xor
push
mov
insl
cmc
shll
dec
popf
fcomip
and
test
push
sub
jne
xchg
fwait
insl
pusha
and
popa
push
jp
adc
jo
inc
dec
cmpsl
ss
sub
rcrb
xchg
je
add
jmp
or
loopne
mov
popf
push
fmulp
icebp
mov
mov
dec
mov
cli
aam
add
stos
add
jg
negl
cmc
jbe
add
negb
add
push
addr16
add
mov
or
push
iret
mov
xlat
ljmp
cwtl
sbb
push
enter
mov
mov
mov
cld
lock
pusha
pop
lock
test
test
add
xchg
ljmp
adc
movsb
mov
popf
mov
and
push
test
jne
popa
scas
xor
mov
cmp
into
add
and
es
cli
repnz
frstor
mov
lds
int
icebp
clc
xchg
push
mov
cmp
mov
lock
dec
inc
inc
pop
lods
in
enter
jle
popf
lret
shll
ret
push
mov
test
mov
ror
dec
insb
int
test
sbb
xor
pop
push
push
movsb
lahf
adc
fldl
jb
cwtl
fists
or
scas
pop
leave
cmpsl
fcoml
cwtl
hlt
sub
movsl
sub
shll
jg
mov
rcll
ret
jbe
jg
xchg
xchg
inc
std
or
inc
xchg
sub
inc
leave
mov
add
and
xorb
rcrb
mov
or
outsl
jnp
xor
jmp
mov
cmp
cmp
js
sbb
in
mov
mov
aas
jae
inc
hlt
aas
jbe
and
dec
mov
inc
jne
and
mov
filds
insb
jecxz
adc
cvttps2pi
jne
leave
shll
xor
fdivl
jecxz
add
sbb
addr16
inc
dec
mov
leave
mov
jb
rorb
pop
stos
fs
cbtw
mov
fsts
jle
cmp
push
push
jne
movsl
loop
fists
push
add
push
lds
hlt
and
mov
imul
sub
bound
mov
ja
mov
mov
cwtl
jns
out
subl
scas
mov
or
pop
sub
xorl
dec
inc
mov
pop
cli
lahf
xlat
fxch
sub
imul
mov
add
jmp
push
push
jno
adcl
addl
cli
sbb
in
inc
pop
aas
or
addl
and
mov
sahf
lods
dec
imul
cmpsl
ss
mov
add
jl
or
scas
shl
hlt
dec
jne
fdivrl
inc
shll
das
cmp
dec
sbbb
sub
testl
pop
dec
or
faddl
dec
xchg
push
pop
jmp
mov
data16
jne
pop
dec
or
xor
dec
mov
cli
stos
jae
ret
lcall
xorl
mov
cmp
cmp
push
aad
fsub
lods
add
mov
nop
fwait
nop
iret
lahf
movsl
mov
inc
mov
std
addr16
mov
mov
rcl
shl
mov
aaa
mov
jb
lods
mov
enter
js
cmp
cmp
pop
ret
into
jb
dec
inc
push
test
sbb
mov
shlb
jmp
push
hlt
adc
subb
adc
lock
or
test
inc
fs
or
stos
imul
arpl
cmc
call
jnp
push
js
outsl
stos
pusha
int3
sbb
or
test
or
loopne
xchg
adc
pop
jne
mov
ljmp
and
push
shlb
pop
cs
hlt
sbb
movsb
sub
add
movsb
push
les
lds
iret
jg
inc
jnp
cltd
or
cmp
das
arpl
imul
jno
ss
iret
xchg
nop
sbb
dec
mov
adc
neg
mov
insb
push
aam
enter
mov
lods
or
lret
icebp
cltd
test
outsb
xor
das
inc
fucomi
inc
jge
cmpsb
movsb
sub
frstor
filds
mov
shr
xchg
sub
xchg
cmpl
cs
inc
mov
xchg
inc
mov
sbb
pop
mov
inc
adc
cmp
inc
stos
and
mov
xor
or
movsb
add
loopne
enter
and
add
and
scas
fdivs
push
xor
lcall
and
imul
mov
xor
mov
les
cmpsb
lods
mov
and
fistpll
inc
inc
vcmppd
outsl
xor
add
sub
pop
repnz
pop
stos
sbb
hlt
dec
cmpsb
mov
jo
mov
pop
xchg
push
sub
add
lcall
mov
pusha
test
pop
sahf
or
fisubs
inc
into
enter
pop
mov
add
inc
cltd
cmp
inc
fiaddl
rcl
jne
les
xor
ret
shrb
mov
jbe
ja
or
mov
sub
cmpsb
into
cs
outsl
xor
inc
scas
dec
lcall
pop
pop
add
hlt
push
repz
jbe
loope
test
lret
pushf
aad
xchg
popa
mov
and
and
or
stc
jb
test
lahf
sbbl
mov
inc
jg
aam
imul
cmp
sbb
std
pop
movsl
push
mov
mov
sub
das
es
push
jg
clc
subb
fidivrl
add
outsl
jne
addr16
mov
imul
popa
xorb
scas
shrl
mov
mov
call
inc
fsubrs
mull
adc
cs
inc
cmp
scas
icebp
mov
rcll
xchg
sub
inc
push
sub
shrb
mov
pop
pushl
and
pop
mov
fucomp
push
ret
pop
jo
inc
inc
mov
cmp
add
loopne
iret
and
in
aas
mov
jne
in
pop
adc
pop
or
insb
sti
out
jne
das
nop
cmp
call
and
mov
sbb
push
push
cmp
adc
popa
pop
lea
pop
sub
das
xorb
out
iret
rolb
inc
cmp
xchg
inc
sub
stos
int3
fs
sbb
sub
adc
imul
adc
sub
pop
clc
scas
jecxz
jns
les
scas
sti
fadd
cwtl
ret
inc
lcall
es
push
cmp
pushl
lret
pop
nop
adc
pusha
mov
hlt
dec
sbb
xchg
iret
in
ja
fldcw
cmpsb
jecxz
subl
mov
add
jae
adc
cmp
mov
pop
in
test
pushl
inc
pusha
or
push
in
jp
lock
sbb
xor
adc
and
enter
jl
std
add
stos
mov
into
fsubs
xor
xchg
xor
arpl
xchg
aam
mov
pushf
sti
loopne
push
stos
test
mov
dec
xor
pop
dec
xorl
push
mov
cmpsl
mov
cmp
add
shrb
xor
movsl
pushf
nop
out
mov
test
push
pop
pop
andb
push
inc
stos
inc
mov
adc
icebp
mov
sbb
and
xchg
sub
andb
iret
push
and
pop
ja
push
mull
cmp
cmpsb
bound
mov
cmp
and
fiaddl
cld
xor
and
push
pop
dec
xchg
jbe
xlat
hlt
xchg
push
in
inc
lea
jmp
dec
mov
sub
mov
lahf
xlat
imul
insl
adc
dec
mov
ja
les
jge
fstpt
adc
adc
pop
mov
mov
and
dec
std
insl
mov
movsb
shll
les
xor
jge
lock
or
loopne
pushf
lcallw
jp
pop
pushf
pop
add
test
ret
mov
shlb
popf
xor
jb
sahf
cmpsl
and
sub
fcoml
dec
imul
iret
add
pop
sub
fnstenv
add
bound
mov
and
pop
cmp
pop
in
inc
add
or
hlt
xchg
lock
push
fs
inc
jne
scas
fimuls
inc
xlat
js
icebp
inc
ja
stos
push
hlt
mov
push
negl
pusha
subb
adc
pop
sbb
push
addl
sub
and
rorb
int3
out
shll
xchg
pushf
pop
movsl
xorb
sub
jnp
leave
dec
leave
or
std
adc
sub
in
loope
nop
cmp
sbb
stos
fdivl
xor
jno
jno
clc
ret
dec
xor
sub
aad
xor
mov
xchg
les
test
cmp
rcll
test
push
xor
fsubs
pop
aaa
iret
dec
mov
test
sbb
add
mov
xor
jne
nop
sbb
push
enter
popa
rcrl
jp
mov
lldt
negl
inc
mov
mov
sub
xor
sbb
fsubl
outsb
cs
jp
in
mov
or
frstor
and
sbb
enter
jne
xor
call
pusha
out
pop
fiaddl
inc
push
inc
out
sub
mov
in
insl
add
fucom
or
mov
add
aad
jg
rol
mov
test
insl
jbe
fsts
fldcw
cli
xor
aad
dec
shr
add
data16
xor
dec
adcl
lcall
mov
xchg
leave
sbb
arpl
addr16
mov
mov
imul
jne
ret
push
pop
mov
mov
jl
negl
mov
pop
cwtl
mov
push
xchg
out
rorb
adc
lea
mov
pop
inc
and
push
mov
and
lock
pop
fstl
push
mov
fdiv
cmp
mov
push
arpl
lcall
gs
cmc
in
lahf
jns
jle
xor
pushf
lds
rcll
push
push
je
xor
xchg
ja
mov
xor
push
and
mov
nop
imul
adc
or
dec
adcb
ss
or
jo
and
jg
stos
xor
stos
push
movsb
mov
adc
jle
test
imul
mov
dec
mov
fwait
stc
xor
jo
in
dec
jae
xchg
mov
pop
test
sub
enter
xchg
fidivrs
push
jne
push
push
std
or
gs
push
nop
mov
ret
ds
xorb
call
rolb
xor
jmp
enter
adcl
dec
push
in
or
mov
xchg
push
les
in
jecxz
sbb
jg
fs
pop
mov
dec
js
sub
arpl
sti
scas
imul
mov
aad
push
pop
or
add
in
mov
or
xor
call
int3
sbb
out
mov
inc
and
push
sbb
push
mov
enter
mov
push
fistl
ja
xor
inc
ljmp
das
jl
mov
jle
int3
lcall
jne
mov
shl
pop
pop
cmp
repz
add
fs
xorb
repz
mov
pop
dec
test
movsl
cmc
cmp
movsl
std
outsl
imul
dec
je
mov
pop
clc
cmp
add
int3
ljmp
pop
cld
sbb
push
push
fdivr
scas
cmpsl
addr16
push
hlt
xchg
mov
mov
cltd
fsubs
mov
loop
lods
nop
and
icebp
xchg
and
jg
mov
pop
out
jo
ljmp
xor
adc
jno
stos
mov
xor
mov
dec
imul
jne
sarb
imul
cmpsl
inc
pop
sbb
cmpsb
scas
mov
data16
jg
adc
outsl
xor
add
or
push
arpl
call
mov
push
sub
ss
xchg
mov
es
xchg
pop
jp
xorl
add
or
inc
inc
inc
std
out
pop
cwtl
mov
loopne
pop
fstpt
leave
and
sub
mov
push
jecxz
add
ret
pop
jb
or
push
sub
aad
aad
rol
loopne
mov
out
add
pushf
sub
aad
dec
iret
add
mov
add
hlt
jo
add
sbb
hlt
pop
xor
rcrl
int
pop
fsubrl
cwtl
and
loop
pop
fstpl
test
mov
inc
xchg
add
movsl
push
movsl
test
ds
mov
int3
je
movsl
pop
addr16
lods
mov
imul
fstl
sub
inc
and
lret
adc
xor
push
aas
cmpl
incl
fs
push
mov
ret
scas
aad
sub
or
addr16
or
std
rcl
sub
std
sub
xchg
adc
push
mov
jge
shrd
mov
pop
xor
or
adc
das
mov
xor
pop
xor
jno
cli
mov
loope
and
imul
dec
or
pop
sub
stc
stc
inc
rcrb
movsl
jp
adc
lahf
ret
add
in
repnz
insl
cld
mov
popa
fdivrp
mov
rcll
add
push
cwtl
fildl
in
icebp
shr
or
int3
xor
jnp
aad
test
pop
aam
iret
inc
hlt
lods
in
decl
jo
iret
enter
popa
jne
cmp
adc
mov
sub
hlt
inc
subl
sub
ja
fildll
jle
scas
loop
flds
cmp
adc
adc
in
fstps
sti
dec
aas
mov
inc
mov
xchg
xrelease
cmp
xchg
mov
orb
pop
sbb
and
xchg
ja
mov
cmp
mov
jecxz
add
loopne
jp
mov
mov
adcb
sbb
jmp
mov
and
add
xchg
testb
cmpsb
mov
pop
jne
sub
jl
add
clc
movsb
scas
push
rcrl
xorl
add
cmpsl
xor
test
imul
dec
mov
dec
adc
ds
xchg
nop
cmp
xor
push
hlt
add
jle
adc
in
add
mov
sub
fisubs
pop
test
arpl
std
stc
sti
xor
sub
dec
lahf
inc
mov
dec
test
mov
xorb
add
lods
sub
mov
and
rcrb
or
add
std
sub
in
arpl
mulb
js
sbb
mov
inc
rcrl
repz
pop
leavew
in
inc
xor
pop
add
xor
mov
mov
loop
call
xor
cld
jne
sbb
jg
xchg
clc
and
mov
mov
jns
pop
loopne
xchg
mov
cmp
leave
and
out
les
mov
lcall
xor
mov
xor
xor
orl
jmp
insb
lahf
out
mov
mov
lods
icebp
xor
sub
in
mov
ret
clc
imul
jne
das
in
adc
inc
pop
sarb
pop
ljmp
adc
xchg
test
ljmp
mov
enter
mov
xchg
fildll
mov
out
mov
xchg
cs
and
xor
pop
faddl
inc
jge
jle
cmpsb
pop
pusha
movsl
push
test
cmp
into
stos
and
push
adcb
test
ret
pop
mov
movsl
and
clc
fdivp
lahf
and
jb
jns
ljmp
enter
sbb
sbbl
inc
xor
sub
dec
cwtl
and
lret
jmp
jl
cwtl
mov
ljmp
std
addr16
xchg
cmp
jl
test
mov
cli
inc
cmp
shlb
call
aad
jge
push
loopne
xchg
sub
mov
addb
shl
fdivl
jne
sub
mov
loopne
mov
xlat
push
add
dec
lahf
test
pop
filds
cmp
mov
xchg
lcall
mov
or
lods
push
inc
rcrl
sub
sub
mov
cwtl
sbb
xorl
mov
or
pusha
jle
pop
hlt
out
or
push
sub
jge
sub
movsb
jle
push
nop
sahf
adcb
test
add
rolb
mov
daa
js
mov
mov
inc
mov
pop
fwait
add
jl
sahf
jmp
leave
mov
clc
push
pop
lods
addr16
push
and
loope
jle
orb
inc
dec
pop
mov
inc
insl
mov
fcoml
sub
add
mov
clc
in
add
pop
jp
xchg
xchg
push
pop
stos
test
jo
dec
nop
imul
pusha
mov
pusha
cli
jns
bound
dec
pop
sub
adc
mov
dec
inc
int
jg
jnp
cmp
in
popf
pop
subl
scas
lret
dec
lods
adcb
inc
insb
rcr
pusha
sbb
in
mov
cmpsb
mov
loopne
jne
outsl
and
jo
pop
jge
ret
jne
je
enter
or
push
loop
std
rclb
test
movsl
call
aas
loope
and
jl
or
ret
push
inc
mov
les
leave
mov
jne
arpl
inc
or
push
dec
sub
mov
hlt
in
xchg
mov
imul
dec
icebp
js
pop
cmp
fildll
mov
inc
mov
xchg
cwtl
stc
jne
adc
sub
xchg
lock
push
pop
jge
or
aaa
iret
in
jo
jl
sub
aas
xchg
addr16
jnp
shlb
ljmp
repz
sbb
stos
sub
cmp
add
divl
jmp
mov
jae,pt
jmp
jne
mov
enter
mov
pop
call
cld
jbe
or
xchg
xorb
cs
or
xchg
jecxz
lcall
lock
sbb
pop
les
fnsave
lods
fldcw
loope
jns
mov
sti
call
dec
mov
mov
adc
pop
loope
test
pushf
adc
sbb
inc
xor
cmp
mov
and
add
gs
loop
xchg
out
es
nop
push
inc
into
std
pusha
repz
les
inc
orb
into
sti
cwtl
push
mov
fsubl
mov
lds
jmp
subl
sbbb
cld
cmp
loop
movsb
jae
bnd
dec
out
push
xor
push
sbb
hlt
pop
out
push
inc
or
push
adc
mov
lds
inc
xchg
mov
cld
aad
or
xor
cmp
inc
pop
mov
xor
push
stc
jne
adc
aam
dec
mov
push
insb
cwtl
mov
and
enter
mov
stos
adc
fsubl
push
ljmp
push
cmp
xor
inc
addl
cld
das
or
out
cli
xchg
and
mov
jecxz
out
repz
rol
push
pop
adc
mov
xchg
cwtl
push
inc
sub
out
and
sub
cmp
mov
inc
push
mov
out
pop
insl
in
xchg
xchg
mov
push
imul
jle
sbb
loop
sub
mov
imul
add
popl
add
incb
xor
call
addb
mov
shl
xor
stos
sbb
adc
out
js
mov
lods
nop
pop
lea
or
mov
movsl
adc
lds
jno
rcll
sub
mov
adc
adc
jl
jmp
andl
cltd
jle
enter
xorl
iret
in
insl
ret
adc
sbb
add
jns
enter
push
pop
enter
jmp
mov
jo
or
mov
fildl
movsb
addl
mov
fmull
mov
or
adc
or
ret
add
fsubrs
xor
cs
xor
xchg
fidivs
rcll
pop
inc
xor
outsb
push
mov
cmp
mov
popf
xchg
dec
sbb
xor
sbbl
jmp
add
jge
mov
pop
mov
and
cs
or
ds
cmc
fildll
movsl
fcmovb
push
arpl
add
sti
mov
push
mov
xor
and
leave
fnstenv
rolb
jbe
ljmp
add
xor
dec
pop
push
lods
jge
mov
and
les
imul
cld
adc
mov
add
inc
nop
jo
jp
lret
loopw,pt
pinsrw
or
mov
lods
test
int3
jne
push
aaa
xchg
jb
movsl
es
xchg
insb
mov
add
idivb
cmc
jne
mov
pop
push
sti
imul
sbb
mov
xchg
stos
add
mov
cmpsl
push
in
sub
sub
mov
test
mov
sbb
inc
add
mov
test
cmpsl
inc
inc
loop
test
outsl
add
mov
hlt
lcall
test
pushf
test
jge
loope
inc
jp
inc
pop
mov
dec
arpl
push
push
mov
loop
add
mov
shrb
ljmp
mov
jae
xchg
into
jle
inc
push
daa
add
loop
rorl
sbb
in
out
push
cmp
add
sub
push
add
xor
lret
data16
icebp
imul
dec
lock
call
into
inc
jae
lahf
sbb
pop
adc
pusha
or
push
call
addl
cmp
jb
xrelease
xor
cmpsb
roll
push
addb
sub
jne
sub
test
dec
fucom
je
ret
jp
leave
xlat
ljmp
stc
mov
sahf
cwtl
ss
cmpsb
inc
lds
test
lcall
movsb
sbb
or
jo
sbb
or
hlt
sub
jns
popf
push
cltd
mov
or
and
jne
adc
test
mov
stos
fisubs
lds
xchg
xor
inc
jle
xor
in
push
int
mov
mov
and
adcb
test
dec
iret
bound
scas
clc
or
repz
insl
dec
int3
mov
jmp
pop
test
jg
push
mov
dec
scas
rorb
mov
cltd
cmp
mov
sbb
inc
jl
push
cs
mov
lcall
leave
push
pop
sub
pop
add
push
pusha
xchg
add
aam
popa
addb
out
jae
mov
push
iret
shrl
mov
inc
rorb
mov
bound
incb
adc
call
add
jle
push
cmpsl
push
cmp
mov
jl
ficoms
test
sbb
inc
push
pop
imul
out
scas
loopne
aas
js
daa
pop
adc
into
repnz
push
rolb
into
xor
fst
or
hlt
dec
loope
sub
xchg
push
imull
mov
rcl
scas
dec
and
inc
push
jnp
ret
movsb
add
inc
frstor
mov
mov
fisubl
jecxz
repz
xchg
ret
sbb
and
add
rcll
sbb
cmp
sub
pop
in
nop
mov
inc
sbbl
cmpl
hlt
inc
push
fisttpll
pop
adc
ja
inc
mov
shrl
pop
out
xor
int
inc
in
jnp
mov
ja
adcb
or
inc
jne
fwait
inc
push
pop
sub
lods
in
push
cmp
jns
fnstenv
fisttps
sbb
ja
mov
mov
mov
leave
mov
push
cmp
hlt
cld
bound
mov
jne
xlat
lods
loopne
fstps
mov
pusha
cmp
enter
ds
rolb
stos
adcl
out
push
dec
into
lods
adcb
mov
adc
or
cwtl
mov
cmp
cmp
mov
lea
mov
sub
dec
jmp
leave
test
jp
lret
subb
addl
xchg
jne
or
inc
jl
add
xchg
mov
xchg
out
inc
pop
or
cld
insl
subb
bound
jge
shrl
push
fisttps
andb
xchg
push
xlat
ja
dec
faddp
lds
leave
mov
mov
subb
inc
sub
inc
ja
sbb
mov
mov
ljmp
hlt
add
dec
imul
pop
xor
push
std
mov
jmp
stos
hlt
adc
mov
mov
inc
xchg
cmpsl
dec
add
xchg
dec
add
mov
adc
jnp
and
mov
mov
out
imul
pop
jecxz
jle
cmpsl
xor
jne
sub
and
adcb
out
sbb
or
or
repz
enter
push
std
scas
popa
out
int
mov
or
shll
cmp
fiadds
sbb
aaa
lods
lock
mov
cmpsb
test
leave
pusha
sbb
jb
xchg
ds
scas
dec
cmpsb
add
es
rolb
mov
outsb
and
mov
test
out
sbb
fs
mov
pop
or
xchg
dec
jb
xchg
jne
jmp
mov
add
packssdw
lahf
jns
lret
pushf
loopne
lods
faddl
call
pop
jl
outsl
leave
push
pushf
pop
add
mov
scas
pop
data16
mov
xchg
mov
xlat
inc
sub
rcrb
adc
idiv
or
jbe
shrl
fsubr
adc
sti
mov
xchg
sub
lods
das
cmpsb
nop
or
lea
adc
lret
push
add
push
jge
cmp
push
xchg
mov
leave
xchg
xchg
es
and
push
imul
mov
xor
jp
pushf
js
shrl
in
inc
adc
dec
mov
call
js
xorb
jle
repz
cmp
cmp
hlt
test
mov
lahf
cmp
and
jo
inc
in
and
lds
cmp
enter
daa
mov
andb
mov
mov
sbb
inc
xchg
mov
push
stos
mov
adc
mov
mov
cmc
enter
mov
sub
xchg
mov
sub
test
push
sbb
push
fadds
imul
repnz
adc
add
sti
jl
mov
inc
test
mov
shll
adc
adc
scas
loopne
jne
cmp
inc
imull
mov
in
push
dec
sbb
inc
mov
sub
in
jne
iret
dec
xchg
lock
xchg
enter
gs
cmp
add
mov
cwtl
jge
clc
fdiv
test
movsb
fists
xorl
jno
add
inc
inc
shlb
movsl
enter
pop
adc
mov
outsb
in
sbb
lods
jnp
and
testl
jl
push
push
mov
cmp
test
push
sub
rcll
jne
inc
and
dec
sub
mov
push
jne
inc
sub
test
cli
push
test
popa
mov
xchg
mov
push
and
mov
imul
enter
inc
test
pop
mov
and
mov
mov
imul
fst
mov
ud0
inc
fbld
cli
and
jno
nop
pushf
adc
xchg
in
divb
jge
mov
dec
push
jns
adc
shlb
out
stos
mov
std
movsb
add
scas
loopne
sti
iret
sahf
ds
in
ljmp
into
aas
pop
mov
cmpsb
shl
pop
jne
lahf
mov
xchg
mov
ret
shrb
xchg
xchg
fcomps
scas
repnz
jo
cmp
xchg
enter
frstor
movsb
shr
mov
mov
cmpsb
pop
fs
adc
jp
mov
sti
inc
lret
in
and
hlt
cmp
das
mov
je
inc
into
mov
pusha
rorb
mov
or
dec
pop
xor
lods
sub
and
imul
cltd
jnp
mov
out
mov
das
int3
adc
jl
pop
mov
jg
add
pop
xchg
addr16
insl
clc
push
jp
inc
push
repnz
test
fwait
xor
dec
lcall
ret
dec
add
ror
movsl
rcrl
jbe
mov
xor
add
fbstp
xor
loopne
pusha
cmp
dec
arpl
bound
inc
lahf
enter
lret
inc
dec
insb
jp
pop
adc
jecxz
fimull
ficomps
xchg
stc
inc
mov
idivl
pop
xor
lods
paddd
cmp
daa
pop
push
es
lods
imul
rorb
adc
sub
sub
pop
es
jae
jns
pop
ss
pop
mov
aas
rcrl
mov
or
insb
mov
fwait
ljmp
mulb
repz
dec
incb
mov
sub
and
mov
lds
andb
jmp
jg
mov
jne
or
rcrl
sub
mov
ja
push
aam
ret
ret
scas
repz
stos
pop
cmp
add
mov
out
mov
shrb
mov
test
adc
into
push
jns
mov
aam
loop
jae
inc
shrl
sub
push
aad
stos
imul
sbb
mov
and
in
inc
dec
leave
xchg
movsb
mov
jo
or
scas
inc
into
mov
sbb
mov
bound
sub
test
test
sub
mov
inc
cmpsb
and
lret
into
xchg
jno
pop
sub
mov
fistps
das
mov
xchg
cli
ja
es
xchg
adcb
adc
hlt
cmpsb
popa
inc
sbb
jge
mov
inc
mov
add
add
xchg
outsb
mov
jnp
shr
adc
jae
push
dec
stos
call
push
inc
hlt
mov
push
jo
cltd
nop
mov
jne
or
mov
push
js
cmp
xor
mov
mov
push
add
mov
lods
mov
adc
stc
xlat
test
mov
cmp
mov
aaa
or
fstl
adc
dec
aas
mov
out
jle
mov
fcmove
iret
test
test
pop
hlt
icebp
push
mov
mov
mov
inc
lea
outsl
add
push
xlat
pusha
xor
fstpt
fscale
xchg
sahf
mov
in
test
adc
push
adc
cmp
scas
sahf
mov
negl
xchg
es
cmp
sbbb
sbb
movb
shll
hlt
jne
push
push
jp
mov
popf
xlat
testl
shrl
sub
lds
xlat
jne
sahf
loopne
aam
es
mov
das
cmc
loope
addl
rorl
add
ljmp
and
outsb
xchg
xchg
add
cld
or
cld
aam
pop
mov
mov
lret
frstor
aas
hlt
stos
adc
int
imul
notl
insl
jnp
nop
outsl
test
push
xchg
into
push
loop
fs
mov
nop
and
xor
inc
sti
pop
push
sbb
cltd
mov
cmp
fbstp
enter
into
pop
or
xorl
sub
fistl
mov
push
pop
hlt
aas
add
mov
mov
mov
adc
mov
lcall
aam
fcompl
mov
mov
aad
push
test
pop
stos
daa
adc
pop
push
cli
fnsave
cmp
hlt
mov
jg
scas
hlt
loopne
imul
fstl
insb
pop
sbbl
hlt
jle
shll
test
sbb
jge
out
adc
test
outsl
cmp
stos
rclb
mov
pop
pop
jnp
dec
add
mov
mov
arpl
ret
rep
inc
int3
pop
leave
sub
mov
dec
sub
sbb
and
ret
adc
jge
sbb
cltd
test
notl
std
bound
repz
mov
clc
int3
xorb
lock
adc
pop
lods
outsl
js
cld
scas
icebp
leave
not
shlb
sub
ret
mov
pop
add
outsl
dec
out
sbb
fadds
jle
mov
loopne
mov
jb
or
daa
pop
call
push
jne
rolb
loop
lods
cli
insl
sti
mov
push
enter
jge
test
pop
xorl
loop
ja
insb
fmulp
scas
in
cmpsb
fadds
pop
xor
jno
ficomps
test
push
nop
lret
jmp
or
dec
fsubrs
mov
push
stos
jmp
call
xchg
push
inc
push
sub
jp
hlt
popf
cmpsb
fcoms
pop
mov
adc
mov
std
cmpsl
pop
fwait
cs
mov
hlt
movsl
test
adc
xor
leave
mov
lahf
sarl
cmp
sbb
sar
mov
shlb
adcb
nop
adc
push
sub
lahf
lahf
lea
sub
push
loope
inc
test
cmp
xor
push
xchg
push
pop
js
pop
es
mov
mov
pop
lcall
jne
repz
int3
pop
in
and
inc
or
stc
aas
push
lock
jno
and
jmp
aaa
and
cltd
andl
leave
xlat
cmp
int
inc
jg
les
sub
jne
rcll
test
mov
dec
xchg
adc
mov
inc
jge
mov
incb
inc
ljmp
sub
popa
cmc
add
mov
call
mov
repnz
lods
cmpsl
cmpb
xchg
out
popa
lret
stc
cltd
mov
sub
aas
xor
pop
mov
xchg
inc
jecxz
pop
movsb
jb
data16
fstpt
outsl
cmp
pop
mov
add
mov
aad
pop
dec
outsl
pushf
je
int3
mov
jl
pop
pop
mov
adc
jns
or
mov
shll
add
jbe
paddq
adc
pop
aas
adc
and
int3
fwait
mov
sub
dec
xchg
mov
shlb
test
cmp
fcoms
mov
push
sub
popa
das
pusha
jle
in
add
das
mov
push
sub
enter
add
jo
inc
mov
mov
lahf
jne
outsb
shl
adc
sub
adc
pusha
jmp
jge
leave
pop
lahf
cld
cld
and
popf
and
loop
pop
stos
mov
and
repz
add
sub
lods
mov
push
or
pop
push
cmpsl
gs
rol
leave
stc
jbe
notb
cmp
int3
es
gs
dec
test
inc
sbb
loopne
adc
add
sub
pop
sbb
inc
jg
or
ficompl
lods
lds
fs
imul
mov
int
push
inc
cmc
addr16
mov
pop
mov
cmp
xlat
cli
sar
in
mov
xchg
push
lahf
test
inc
jb
in
imul
inc
imul
mov
inc
nop
sar
pop
mov
mov
sub
cmpsb
adc
adcl
gs
clc
sbb
sub
repnz
jnp
xor
shlb
sarl
xor
in
push
push
movsb
dec
cld
hlt
xchg
mov
fcmovb
jbe
test
jne
pop
push
add
jle
pusha
shll
adc
mov
ds
loop
mov
imul
mov
sbb
mov
in
dec
fsub
pusha
push
enter
add
pop
clc
insb
int3
pop
xor
cmp
push
in
jle
sbb
push
sbb
add
bnd
cmc
lods
dec
mov
cmc
and
leave
push
mov
fisttps
pop
push
test
push
or
mov
out
xchg
hlt
cmp
mov
xchg
dec
mov
push
push
out
pop
xor
inc
lret
jge
adc
cs
or
sar
aas
mov
les
jl
inc
cwtl
ret
mov
or
and
ret
xor
sub
ret
mov
js
lret
addl
inc
int3
jmp
xchg
into
cwtl
sahf
hlt
aas
push
out
test
lcall
movsl
jge
jne
inc
insl
stos
andb
into
mov
jp
dec
inc
xchg
mov
dec
sub
sub
pop
add
pop
lret
cmp
loope
jne
and
nop
and
jmp
jno
jne
dec
fucomp
leave
dec
cmpsb
xorb
stc
fbld
lret
loopne
mov
test
sbb
outsb
jle
jp
sbb
mov
adc
push
fmuls
hlt
xchg
cs
shlb
test
shl
les
movsl
out
hlt
xchg
dec
xor
dec
call
pop
push
xchg
sahf
aam
divb
sub
and
loopne
mov
jl
or
add
popa
jg
stc
mov
pop
std
push
mov
in
sub
movsl
pop
roll
mov
repnz
aas
insb
inc
in
imul
std
scas
push
sub
push
sbb
cmp
jb
or
ret
int
sti
fists
push
les
sbb
shlb
adc
enter
outsl
mov
mov
in
jp
test
sbb
ss
add
repnz
jle
mov
enter
jnp
xchg
dec
insb
std
xchg
jne
sub
cmp
dec
xchg
daa
or
and
sub
out
jne
out
jle
jle
inc
aam
ljmp
or
dec
paddusw
mov
mov
jns
mov
push
push
stos
lock
pop
jnp
test
sbb
lods
shl
push
mov
outsb
push
xchg
subl
roll
hlt
nop
outsb
fmuls
push
sub
cmpsb
iret
sub
mov
incl
lock
js
and
sub
xor
int3
leave
loop
pop
cmp
daa
fcomip
sahf
lock
in
icebp
sahf
adc
push
fisttpll
fnsave
sub
sub
int3
iret
lock
mov
in
fdivs
addl
jmp
jns
inc
mov
adc
xor
cmp
cmc
xchg
popa
loope
in
shlb
xchg
fmuls
out
jl
lahf
cmp
adc
inc
clc
ret
lcall
xchg
mov
loopne
gs
arpl
and
loopne
aaa
cmp
push
pop
adc
cmpsl
xor
loope
sub
jnp
pop
fldenv
pop
sbb
into
xorb
or
jne
mov
mov
xchg
jo
std
mov
dec
movsl
inc
jecxz
mov
lds
jbe
je
lea
mov
sbb
ret
dec
enter
dec
jns
sbb
add
add
mov
lret
mov
call
add
mov
mov
lret
pop
popl
mov
cs
stos
fsubs
push
lahf
push
pop
cmpsl
fdivp
jmp
dec
mov
jge
lds
push
aad
mov
stos
shl
fildll
hlt
pop
sub
into
jb
inc
mov
shlb
mov
pop
das
mov
out
push
pop
fcmovb
sub
test
and
push
fwait
scas
imul
push
mov
es
int3
jle
aam
mov
sub
sbb
insb
into
xor
dec
ficoml
call
imul
jae
sbb
xor
loop
adc
cmpb
jno
inc
mov
out
mov
cs
inc
pop
int
adc
dec
fcompl
ds
adc
push
fiadds
mov
int3
movsb
push
xor
add
sub
adc
mov
push
dec
das
lods
loop
int
cmc
hlt
pusha
inc
and
xor
cmpsb
sub
sub
add
pop
xorb
loope
mov
imul
cmp
imul
sti
mov
lea
add
push
cwtl
add
popf
hlt
adc
outsb
mov
insl
and
bound
add
aas
int3
mov
add
mov
loop
add
cmp
dec
rcr
fs
adc
sbb
aad
mov
push
and
lods
rolb
and
jge
pop
dec
add
jbe
fnsave
jnp
ror
dec
push
outsb
ret
sti
int3
adc
and
orb
pop
scas
out
js
mov
cmpsl
pop
inc
lock
dec
add
sub
mov
fstl
mov
int3
cs
jg
inc
das
icebp
mov
add
xchg
sahf
jne
mov
lods
push
nop
test
dec
rcl
addr16
mov
cmpsb
fcomp
mov
jmp
insb
jno
fistps
out
sub
inc
insb
mov
into
jecxz
imul
lods
mov
movsl
mov
mov
push
fistpll
aam
aam
sbb
fistpll
cmpsb
test
addb
out
or
leave
outsb
loop
imul
add
test
mov
mov
cmc
shrl
sub
mov
push
adc
hlt
call
js
inc
mov
pop
mov
fdivl
add
mov
hlt
jle
dec
jg
jbe,pn
cmp
frstor
xor
movsb
xchg
push
pop
arpl
shl
sub
add
jbe
insb
aad
cmp
xchg
in
sub
shrb
sbb
adc
xchg
in
gs
sub
mov
inc
lock
imul
add
hlt
lods
andl
mov
insb
fisubl
test
aas
mov
es
jns
adc
aaa
scas
push
clc
cld
push
inc
mov
xor
data16
or
sbb
and
pop
adc
jae
sub
adc
lcall
mov
movsl
repnz
pop
test
xchg
test
and
jne
int
xchg
ds
cmp
jno
cld
pop
enter
inc
outsb
add
mov
lret
insl
add
push
xor
adc
int3
and
mov
negl
dec
and
daa
push
cmp
mov
mov
pop
jge
pop
ret
push
rcrl
adcl
adcl
aad
popa
mov
jge
popa
hlt
or
popf
incl
mov
and
jecxz
or
push
loope
sar
jge
inc
push
hlt
in
xchg
test
aas
inc
jg
xchg
mov
nop
sti
mov
lods
iret
addl
rorb
sbb
xchg
jle
mov
adc
in
in
negl
and
push
mov
mov
popf
adcb
jle
es
int
ror
xlat
stos
clc
icebp
adc
notb
out
loop
xchg
push
push
and
std
mov
out
sbb
adc
jbe
adc
mov
and
pop
cmp
fadd
fisubrl
xor
pop
sub
loopne
mov
aas
sbb
jbe
jbe
std
adc
fistpl
sub
in
jae
sar
mov
mov
xor
mov
mov
test
cmpsb
sub
subl
jbe
mov
pop
mov
inc
stos
mov
das
fcomps
cmpsl
xchg
popf
or
in
mov
jb
ljmp
addl
mov
loop
mov
adc
ret
xorb
add
pop
jmp
rorb
pop
ds
das
imul
ss
mov
dec
jle
and
int
mov
cmp
lcall
pmuludq
or
lahf
rorb
sub
lahf
cld
mov
test
pop
xor
enter
mov
andb
cwtl
mov
jne
clc
push
inc
aaa
fwait
mov
pop
incb
mov
mov
inc
out
clc
ret
mov
cld
cs
mov
imul
pop
mov
xchg
mov
mov
aad
push
mov
inc
cmp
cmp
icebp
push
dec
cmp
lahf
add
mov
and
scas
popf
mov
pusha
mov
mov
dec
sbb
pushf
adc
in
popf
fdiv
sbb
mov
lret
das
pop
aas
shll
fildll
cmp
adc
cmp
xchg
push
in
lods
insl
je
adc
mov
add
jl
fcomps
les
jbe
fldenv
jmp
test
into
jae
mov
jmp
add
cmp
std
mov
inc
repnz
mov
and
outsl
cmp
rorl
cli
das
icebp
faddl
fsubl
pop
sahf
lret
test
jae
inc
fstl
xor
pusha
inc
mov
mov
push
daa
stos
adc
psubsb
cmp
xchg
push
inc
jo
xchg
aaa
pop
loop
pop
repnz
sub
mov
add
bound
hlt
mov
dec
cld
mov
xchg
sub
pop
pop
jno
shld
or
push
mov
les
test
or
loopne
loope
int
adc
leave
cmp
xor
fists
data16
test
stc
out
add
inc
xor
mov
pop
fwait
adc
cld
roll
jne
lea
enter
movsb
mov
imul
int
mov
or
jmp
dec
cs
test
inc
push
sti
mov
mov
das
pop
adc
cltd
dec
sbb
inc
or
roll
pop
outsl
push
cmp
mov
mov
mov
sub
dec
imul
mov
les
sbb
arpl
pushf
add
orb
stc
cltd
add
jmp
fld
sub
push
roll
cmpb
xchg
lret
into
sbb
in
idivl
push
and
jecxz
int
ss
pop
es
in
lret
adc
sbb
sbb
dec
lock
shr
sbb
stos
mov
xor
cmp
mov
dec
lods
pop
rcrl
imul
ja
shll
aad
inc
xchg
dec
mov
popf
leave
lods
movl
lcall
movsl
outsl
icebp
jbe
xchg
hlt
lea
sahf
jns
popa
orb
jecxz
test
lret
add
mov
pop
xchg
call
mov
notl
mov
dec
stc
ss
data16
xor
shrl
test
xor
lea
lcall
jne
dec
fidivl
mov
inc
or
out
xorb
cmp
std
test
jge
cs
add
in
cli
iret
ret
and
icebp
jnp
clc
call
push
jl
fs
hlt
adc
shl
aad
shrl
jno
dec
cmpsb
rorb
lods
sbb
xor
jne
in
cs
jnp
mov
mov
cmc
jp
rolb
xchg
push
scas
adc
stos
adc
sub
clc
lods
add
sub
mov
mov
lret
fsubs
mov
out
les
push
add
cmpb
cmpsb
movsl
cmp
movl
hlt
fcmovnb
popf
add
ja
call
pop
inc
pop
dec
aad
shrb
fidivrs
rol
adc
stos
pop
mov
jmp
adc
int3
fdivrl
outsl
xorl
gs
push
cmp
daa
lock
adc
push
punpckldq
ljmp
sbb
xor
mov
cmpsb
leave
outsb
or
dec
jecxz
add
mov
enter
aad
scas
dec
rorl
jne
dec
enter
adc
cmp
mov
dec
mov
pop
std
imul
ret
xlat
fsubr
jge
xchg
shrl
cmp
pop
jecxz
mov
and
xchg
arpl
mov
mov
fiaddl
xchg
add
push
add
hlt
out
push
xchg
pop
mov
xor
hlt
clc
sub
jo
pop
cmp
inc
pop
ljmp
enter
insl
stos
add
ret
hlt
cmp
mov
filds
in
out
fs
cmpsl
jmp
fidivrs
mov
mov
test
std
cmpsl
xor
ljmp
jp
lods
negb
adc
mov
cli
mov
adc
mov
aam
imulb
push
aas
jecxz
or
mov
mov
jne
fldt
mov
push
enter
or
das
mov
dec
xor
cmp
mov
icebp
mov
mov
mov
int
test
aas
cld
mov
mov
mov
push
adc
fiadds
lock
sbb
pop
cmc
fnstenv
xor
pop
inc
movsb
ja
xchg
adc
cmp
in
pop
mov
push
inc
mov
mov
insl
pop
cmp
jmp
pop
cmp
jno
hlt
jg
xchg
dec
cmp
mov
mov
pop
mov
outsl
int3
movl
jb
pop
es
dec
int
pop
jmp
lret
cwtl
add
in
mov
push
sbb
in
sub
pop
lret
stos
cmc
xor
xchg
dec
repnz
dec
cmp
push
sub
push
stc
pop
cmp
pop
jns
push
data16
movl
arpl
outsl
lock
idivl
data16
or
dec
rcll
sub
ss
adc
je,pn
mov
test
jg
mov
dec
aad
aas
cld
into
rcll
test
sbb
adc
inc
repz
mov
sbb
inc
cmpsb
es
xor
jne
stos
ds
pop
cwtl
pushf
imul
or
aas
pusha
fnstenv
mov
into
loope
sub
inc
mov
repz
jne
cmp
ds
pusha
mov
pop
mov
arpl
push
in
xchg
enter
jle
xchg
hlt
out
sub
call
movsl
call
push
in
enter
dec
jo
xor
lret
or
repnz
xchg
xor
std
cwtl
lret
arpl
lods
movsb
rcrb
pop
mov
pop
mov
or
adc
stc
jg
mov
test
mov
jp
das
and
popf
adc
adcl
and
xchg
or
les
jle
pop
sbbl
mov
and
mov
sbb
test
xor
and
daa
loope
int3
jnp
test
je
push
out
popf
cld
and
cmp
fstl
out
lcall
pop
out
xchg
xchg
lahf
and
cwtl
sahf
loopne
testb
es
mov
imul
repnz
jo
pop
xor
test
mov
lock
aaa
aam
adc
push
aad
dec
mov
inc
std
dec
adc
mov
mov
xchg
add
stos
mulb
add
push
sbbb
add
ficoms
lods
sbb
hlt
shll
lods
and
movsb
lret
xchg
inc
fstpl
ss
je
shlb
mov
xchg
xor
jge
subb
inc
fs
xchg
sub
add
aam
lods
adcl
sub
push
inc
jns
test
into
and
stc
jp
jo
jne
lods
sbb
scas
leave
adc
mov
push
or
leave
push
sub
pusha
rclb
mov
test
popa
mov
jno
jbe
call
cmp
xor
and
dec
popa
xchg
xchg
push
std
adc
into
xchg
jne
das
test
adc
pop
stos
jbe
arpl
inc
inc
imulb
adc
or
push
inc
pop
imul
sbb
or
fdivs
adc
mov
and
repz
mov
jge
mov
test
add
std
add
xchg
mov
push
xor
jl
sub
jp
add
fsubrl
cli
sbb
out
ror
fucomp
adc
lea
add
xchg
xchg
and
adc
sub
leave
add
pop
xchg
mov
xchg
mov
cmp
fdivs
push
pop
decb
imul
movsl
cmp
mov
dec
mov
xacquire
and
enter
mov
ja
out
lea
popl
add
lret
leave
daa
sub
lock
jge
pop
dec
in
inc
push
dec
sbbb
jl
xchg
icebp
pop
es
cmpsl
out
sub
push
xchg
call
or
push
xchg
aad
mov
repz
pop
cs
cmpsb
mov
jne
nop
xchg
subb
imul
test
repz
mov
xor
repnz
repnz
aam
mov
inc
mov
divb
xor
adc
bound
les
mov
test
sub
pop
out
jno
or
inc
jno
test
stos
sub
sahf
mov
es
mov
test
dec
incl
xor
adc
gs
jno
arpl
stc
fwait
cmpsl
lock
sbb
xchg
mov
les
leave
adc
pop
cmp
test
hlt
adc
mov
inc
jmp
out
cmc
into
movsl
mov
adc
jg
and
ja
mov
imul
xchg
sub
out
enter
scas
sub
mov
iret
mov
hlt
cli
enter
mov
push
je
mov
push
adc
add
lahf
dec
adc
push
popa
sub
lret
xchg
mov
dec
mov
mov
movsb
and
pop
sub
fmul
hlt
sub
cld
stos
jecxz
or
add
pop
divl
addl
js
mov
sarb
or
pop
and
js
addr16
mov
pop
imul
or
jno
hlt
xchg
inc
xor
or
cmpsl
and
push
loope
push
out
pop
mov
sahf
sub
mov
mov
and
hlt
mov
imul
pusha
adcb
mov
or
push
scas
jno
jg
arpl
popa
xlat
push
or
ljmp
xlat
mov
jge
mov
fisttpl
push
rorb
in
pop
jl
aad
xchg
mov
ljmp
in
int3
enter
aaa
hlt
xchg
repnz
sbb
push
repnz
in
and
mov
into
int3
es
fstl
les
jne
cmp
adc
out
repnz
movl
pop
mov
jl
loop
jae
sbb
jmp
mov
push
in
test
mov
or
or
mov
cmpsb
mov
test
rclb
fs
mov
call
pop
xchg
ljmp
or
jne
stos
adc
test
out
mov
lahf
add
xchg
inc
adc
gs
not
push
in
mov
ss
ljmp
cld
mov
cmp
push
jne
xchg
cmc
cltd
ljmp
clc
pop
add
dec
leave
xchg
cli
movntq
loope
das
mov
mov
gs
stos
or
dec
add
cmpsl
inc
test
sub
hlt
sub
mov
pusha
jp
adc
leave
or
rclb
sub
mov
les
jne
data16
push
push
je
cmc
jmp
inc
stos
pop
call
or
jbe
mov
jne
inc
jg
hlt
sbb
fists
jg
lcall
div
pushf
shrl
cmp
call
cld
add
sti
mov
dec
add
stos
cltd
aam
mov
or
add
xor
mov
jo
sbb
and
mov
lea
sbb
insb
adc
xchg
cmp
scas
adc
bound
daa
sahf
jnp
mov
sbb
loop
addl
push
mov
lds
test
out
mov
and
xchg
pop
mov
push
in
mov
fisttps
sub
sbb
rorl
test
mov
adc
or
idivb
ret
and
test
jp
enter
subl
jge
and
enter
sbbl
test
push
ss
mov
mov
push
dec
sti
cmpxchg
outsl
mov
adc
icebp
fidivs
incb
sub
adc
jne
jae
popf
lcall
sub
movsb
in
dec
les
hlt
fbld
mov
inc
hlt
mov
pop
pop
add
mov
mov
jnp
clc
xchg
pop
pusha
cwtl
push
movsl
push
pusha
lods
imul
or
push
insb
out
test
fsubr
sbb
jge
cld
ret
iret
inc
shl
adc
sahf
push
push
sub
mov
push
add
gs
jae
cmp
mov
xor
xchg
sbb
jecxz
mov
test
and
xor
jle
cmp
rorl
push
mov
fisttps
mov
push
loopne
cwtl
pop
in
dec
leave
pop
xor
mov
insb
pop
es
mov
xlat
jp
into
aaa
mov
sbb
jp
test
inc
inc
mov
sub
xchg
push
icebp
push
dec
mov
popa
dec
xchg
xor
mov
pop
or
lds
push
lret
andb
dec
rclb
loope
sub
and
cmp
mov
fldcw
dec
cmp
jns
adc
push
pop
pop
in
mov
mov
movsl
xlat
mov
subb
inc
dec
cli
pushf
mov
sahf
sub
mov
jmp
or
int
add
enter
push
mov
add
mov
fcmovbe
mov
scas
popa
fisttpll
mov
out
out
pop
shlb
lret
movsl
fmuls
or
push
imul
insb
add
mov
fs
in
xchg
les
in
push
ret
or
dec
fs
jbe
filds
xchg
ret
mov
pop
jmp
push
das
xchg
or
and
stos
mov
loope
repz
scas
or
mov
jp
addr16
leave
lods
js
call
jmp
push
push
mov
fcompl
sub
ffreep
push
and
rolb
jge
push
add
mov
jge
cmp
pop
push
in
pushf
dec
adc
push
xchg
mov
leave
or
aam
xchg
sub
push
cmp
lcall
lret
es
cmc
xchg
sahf
int3
test
mov
sub
cwtl
mov
loopne
mov
lret
enter
cs
fdivl
xchg
arpl
inc
leave
pop
jg
jbe
cwtl
ficoml
sarb
jle
cmp
jno
adc
in
aad
mov
inc
loope
scas
adc
ret
jns
mov
sub
jge
cmp
or
test
or
cmp
test
xchg
imul
inc
jge
jp
ret
lds
cld
shrb
jne
dec
movsl
jmp
xchg
sub
sub
test
loope
shlb
cs
subl
outsb
dec
push
jmp
xchg
pop
inc
sbb
inc
dec
cmp
cltd
repnz
sahf
in
outsb
cmp
adc
loope
bound
sbb
and
ss
cs
test
jge
int3
push
cltd
xchg
jns
mov
xor
cwtl
shrl
adc
inc
cld
test
pop
lahf
aam
rcr
jmp
push
add
cli
mov
icebp
mov
add
jne
and
inc
aam
call
mov
sti
out
sub
mov
or
ljmp
in
clc
lods
aas
lea
mov
mov
sub
xor
jp
mov
add
jp
add
enter
stos
sbb
mov
hlt
pushf
int
push
shl
jae
cs
jp
sub
stos
push
stc
fadd
inc
lahf
add
push
stc
pop
jp
insb
jecxz
add
push
loope
test
mov
int
push
mov
mov
aas
popf
jb
or
inc
inc
ss
cltd
xor
push
push
add
xlat
icebp
mov
std
mov
cld
inc
push
shlb
stc
negb
adc
mov
add
aas
adc
jecxz
in
mov
mov
dec
test
fdivrl
sub
push
jecxz
iret
push
or
mov
dec
inc
xchg
clc
add
mov
sub
cmp
fsubs
pop
test
push
inc
add
sub
mov
xorb
ljmp
sahf
andl
push
mov
mov
jmp
mov
cltd
roll
sbb
dec
and
dec
mov
lret
divl
sti
push
mov
in
push
adc
or
aad
cld
ljmp
mov
or
xlat
nop
xor
or
sbb
lret
push
cmpb
ret
mov
inc
pop
bound
or
inc
pop
pop
lods
mov
xchg
lret
adc
iret
fdivs
mov
les
jge
jl
dec
shl
mov
hlt
movsl
xlat
les
mov
pop
push
push
adc
scas
and
sub
push
stos
jbe
inc
mov
mov
cli
test
pop
sti
adc
jg
mov
leave
xor
adc
pop
or
loope
test
cmp
clc
hlt
xchg
jecxz
loop
sub
out
and
loope
mov
inc
pushf
push
cmp
cmp
bound
cmp
mov
stos
push
ss
inc
xor
xor
in
mov
addr16
enter
pop
std
push
hlt
sbbl
xchg
daa
rol
mov
das
xchg
mov
inc
dec
jge
pop
xchg
stos
xlat
jbe
jo
mov
mov
jg
pusha
test
sub
add
ret
test
movsl
orb
mov
shr
adc
xchg
push
cmp
shrl
or
push
jecxz
mov
push
push
fdivl
notb
popf
loope
sbb
mov
pop
into
mov
dec
pop
sti
out
cmp
lahf
lods
xor
add
pop
sbb
or
testb
lods
lret
enter
mov
in
pop
mov
dec
mov
les
in
lcall
mov
sbb
jae
cltd
aam
jmp
cs
pushf
pushf
push
lods
stos
lods
scas
or
cwtl
dec
andl
popa
ss
jp
sub
inc
rol
pushf
rorl
xor
dec
test
adc
imul
les
xor
pop
adc
mov
xchg
clc
lea
cmp
fnstcw
cs
out
cmp
jnp
push
addl
jecxz
push
add
add
gs
lcall
in
insl
or
nop
icebp
ficompl
ljmp
nop
loop
rorb
mov
cmp
movsl
fwait
adc
lods
lods
xchg
mov
mov
scas
sub
in
outsb
or
shlb
mov
mov
ds
inc
sub
inc
adc
ss
cmp
and
adc
hlt
jge
das
mov
sbb
call
inc
inc
mov
mov
loope
hlt
enter
push
psubsw
es
test
arpl
or
ret
inc
lcall
pop
adc
sbb
pop
jne
push
rcl
mov
flds
rcll
or
dec
aad
aaa
adc
test
lea
leave
je
pop
bnd
mov
shrl
xchg
cli
sbb
xor
xchg
xchg
fld
pushf
fstl
or
push
adc
inc
mov
mov
dec
lcall
or
out
pop
pusha
movl
sbb
sbb
push
loopne
insb
test
out
into
cmp
jnp
test
xor
pop
cmc
shll
scas
gs
in
mov
cmp
cmpsb
sbb
mov
rcrb
nop
hlt
xchg
cs
or
leave
lea
fstl
movb
hlt
test
lret
pop
hlt
popf
mov
sbb
inc
subb
jg
lods
push
fcoml
and
pop
mov
mov
sub
fldcw
mov
sbb
repnz
into
push
divb
xchg
es
jle
adc
insl
insb
icebp
jmp
aas
fldl
into
add
bnd
ss
add
pop
testl
rcrb
mov
mov
push
sub
pop
and
sti
cmp
push
insl
cmp
nop
icebp
int3
cltd
add
nop/reserved
sti
jne
popa
cs
call
or
insb
out
add
clc
and
inc
icebp
and
rolb
mov
push
mov
and
cmp
dec
cltd
movsb
test
xchg
fsubrp
xchg
lds
lcall
lods
das
gs
push
shrb
stos
minps
push
sarb
mov
mov
loope
jae
lret
or
cwtl
inc
mov
mov
or
mov
call
sbb
insb
xchg
dec
test
divb
sbb
jecxz
add
scas
das
mov
push
pop
ja
cmp
aam
xor
and
popf
rorl
jne
xor
int
cmpsl
mov
jne
test
movsl
push
pop
add
mov
jmp
mov
int
sbb
cwtl
adcl
scas
and
dec
and
stc
popf
inc
lods
rorb
dec
fsub
or
bound
out
mov
pusha
hlt
cmp
xchg
mov
test
pop
pop
js
add
jo
push
add
mov
loop
add
mov
sub
sub
dec
sub
mov
mov
lahf
push
les
push
hlt
popf
ficoms
lcall
out
cmc
fdivs
inc
stos
nop
mov
les
cmp
stc
enter
mulb
call
es
shlb
aam
add
lock
fadd
mov
scas
push
xor
sub
mov
push
lock
mov
push
jl
sbb
lea
inc
icebp
jg
inc
cli
cmpsl
stos
pop
aad
mov
cs
sahf
jmp
or
xor
into
ss
adc
push
gs
loope
clc
mov
mov
jnp
sbb
data16
cltd
dec
les
push
mov
jb
loope
fs
add
mov
pop
and
xchg
lret
inc
mov
scas
movsl
cwtl
loop
int3
push
rolb
inc
inc
nop/reserved
cmpsb
mov
sub
gs
cld
mov
push
push
shlb
lock
nop
xchg
add
ret
mov
in
iret
mov
mov
dec
push
cmpl
leave
sub
faddl
ds
pushf
sbb
iret
sub
push
pop
lret
ficoml
imul
test
and
je
icebp
enter
sub
clc
and
sti
jno
lcall
xchg
pop
call
mov
mov
add
xchg
and
ljmp
enter
stc
jne
js
stos
insl
gs
mov
xchg
ss
mov
pop
mov
dec
pusha
push
std
jne
mov
sbb
lret
lock
or
test
jnp
iret
jecxz
dec
lods
pop
hlt
mov
sbb
and
sbb
jge
or
sti
int
mov
mov
lcall
mov
loope
adc
sub
popf
jge
daa
mov
popa
cs
mov
scas
imulb
pushf
mov
outsl
push
fcoms
test
std
add
mov
inc
test
sbb
aam
pusha
mov
xchg
ja
lahf
inc
or
mov
mov
mov
mov
mov
and
or
in
out
inc
inc
push
out
or
sbb
lods
call
popf
nop
shlb
push
movsl
scas
loopne
int
mov
stc
or
add
jmp
and
bound
pop
cmp
xchg
call
cmpsl
mov
xchg
mov
mov
sub
js
mov
fcoms
pop
jecxz
shl
rclb
mov
inc
xor
mov
mov
jne
cmp
aad
aam
mov
dec
outsb
xlat
adc
mov
lea
push
inc
lcall
movsb
mov
pop
cmovnp
adc
mov
xchg
jge
cmc
sub
xchg
outsb
jne
inc
inc
sti
push
mov
mov
mov
add
mov
pop
mov
popf
stc
imul
mov
imulb
xor
stos
jo
sub
sub
mov
push
pop
call
inc
mov
shll
outsb
lock
in
test
xchg
jnp
jp
das
pop
mov
pop
push
pop
aas
push
push
hlt
sbb
out
mov
test
inc
test
add
xchg
mov
push
lods
and
push
clc
int3
lcall
sub
xchg
push
xchg
dec
and
adc
stc
jecxz
xchg
and
push
insb
insl
std
mov
fwait
add
mov
dec
adc
outsl
xchg
out
mov
add
mov
mov
and
add
clc
imul
sbb
mov
notl
add
sub
fdivl
push
mov
dec
and
jecxz
enter
into
pop
mov
nop
xchg
cmp
arpl
mov
daa
clc
js
negb
inc
lcall
add
jno
imul
enter
mov
or
iret
push
sub
push
adc
ror
pop
push
or
push
movsl
adc
mov
daa
test
mov
inc
add
sarl
xor
test
push
lds
cli
lock
mov
inc
mov
shrb
adc
iret
jns
test
scas
jbe
cld
test
lret
mov
jmp
pop
mov
sub
sbb
xchg
cs
adc
dec
jge
orb
sbbb
fists
lret
pop
xchg
repnz
loopne
insl
pop
and
dec
imul
stos
cmp
or
aas
std
adc
sbb
cmpsl
repnz
inc
mov
hlt
dec
test
jecxz
es
call
jg
add
push
mov
jns
lea
and
fisubl
aam
jo
fs
and
lcall
mov
jne
mov
rol
mov
into
and
icebp
leave
clc
rclb
jg
aad
inc
cmp
mov
sbb
sub
subl
enter
push
pop
xchg
imul
rcrb
fwait
mov
sub
inc
test
fbld
pop
add
mov
mov
jbe
addr16
cmp
mov
add
inc
cmp
dec
fs
adcl
test
xor
hlt
jo
jne
adc
ror
push
loopne
mov
mov
sarl
in
cmp
pop
mov
shl
scas
test
sub
xchg
lock
jo
mov
pop
inc
test
jle
adc
hlt
jb
mov
ret
inc
inc
in
test
arpl
loope
das
fsubl
lret
xlat
dec
push
les
pop
add
mov
and
jl
inc
std
jb
sub
into
aaa
xor
fldcw
sbb
push
jp
add
cmpsl
insb
jne
adc
xchg
jg
add
outsl
cmp
mov
bound
xor
cmp
call
dec
sti
ret
rorb
out
lret
stos
inc
in
subb
and
fildll
jle
lret
std
xchg
ficoms
push
pop
mov
inc
testb
xchg
sbb
test
mov
dec
in
in
clc
test
push
pop
cmp
fst
repz
mov
mov
sbb
sub
mov
xchg
or
bound
roll
sarb
in
or
cs
test
addl
fiadds
es
out
stos
pop
xor
movsb
and
dec
inc
hlt
lret
adc
mov
sub
je
inc
push
adc
xor
jne
iret
clc
and
movsl
and
notl
cmpsl
rorl
or
inc
loopne
fnstcw
xchg
mov
xor
xchg
mov
test
ljmp
xchg
lock
jge
lods
mov
call
in
lea
and
arpl
pushf
dec
ror
leave
xchg
mov
lea
push
jns
rcrb
mov
rcrl
lock
adc
addr16
jecxz
push
jle
push
adc
xchg
cmpsl
or
ljmp
aaa
adc
sub
mov
mov
cmp
cs
insl
hlt
adc
outsl
in
imul
cmpb
hlt
sbb
mov
inc
stos
les
mov
sub
pusha
inc
sbb
xor
lods
push
orl
test
and
mulb
or
adc
sbb
movsb
xor
mov
aad
or
cld
addb
scas
jmp
and
xchg
dec
lods
loope
xlat
arpl
icebp
pop
stos
mov
lock
pop
or
lds
cmp
les
std
sub
bound
divl
dec
mov
in
pop
shll
xor
inc
lea
mov
or
lret
hlt
mov
cmp
sub
mov
mov
stc
outsl
insb
pop
test
cmp
push
sbb
pusha
jns
es
cmp
mov
mov
mov
iret
jg
sub
xchg
into
inc
jg
push
andb
cmpsl
cmp
fistpl
aas
mov
push
in
inc
cmp
fsubs
nop
xchg
pop
addl
dec
sahf
add
or
pushf
cmp
or
push
push
rolb
dec
mov
les
cmp
and
stos
adc
xchg
pop
mov
xchg
push
add
xchg
inc
push
jns
fcomi
sahf
fcmove
loope
cmp
push
stos
push
xor
mov
sbb
cmp
aam
ret
scas
jg
cmc
ss
ljmp
push
fmul
mov
data16
imul
sti
aas
enter
adc
cli
mov
pop
add
in
movsl
jne
pusha
aad
fstl
leave
ret
int
add
sub
int3
pop
add
es
add
addl
ficomps
movsl
inc
imul
cmp
sarb
fisttps
sub
or
push
dec
test
filds
dec
popf
sahf
stos
fldenv
movsb
add
loop
fsubl
xor
mov
add
orb
cmp
push
pop
sarb
sbb
addl
fcmovb
pop
mov
xorl
xchg
adc
shlb
push
movsb
sub
cmp
das
icebp
es
daa
and
mov
lock
jo
add
je
nop
into
dec
jmp
outsl
divb
pop
lret
stos
mov
push
movsb
and
cmp
mov
inc
int
mov
lea
movsb
mov
xchg
in
mov
jns
dec
fs
imul
dec
push
adc
mov
andl
jmp
scas
and
ss
xor
stos
imul
mov
xor
mov
rcll
jl
dec
add
mov
jl
and
xor
sub
inc
mov
shl
sub
icebp
outsl
mov
int3
adc
psrld
insb
jne
add
xor
or
inc
cmpsl
cltd
pop
jbe
stc
std
push
mov
push
push
hlt
sub
out
enter
ljmp
arpl
jo
sbb
stc
push
adc
cmp
outsl
dec
jno
das
add
sbb
cmp
outsl
aas
out
push
lahf
mov
shl
std
scas
push
fmull
cmpsl
jg
jb
jnp
das
lock
ret
daa
lahf
lea
sub
mov
stos
cmp
and
ja
roll
jg
cmpsl
fcomps
test
out
cmp
rcl
mov
stc
push
xchg
mov
jge
loop
mov
out
incl
dec
cmpsl
mov
mov
insl
scas
mov
movsl
out
repz
pop
decb
cli
and
fiaddl
cmp
es
ret
cwtl
loop
pop
pop
daa
mov
scas
mov
gs
rcrl
pop
out
dec
orl
insl
enter
arpl
pop
jp
add
test
aad
dec
push
mov
dec
das
lea
push
inc
xor
loope
pop
roll
insl
mov
add
xchg
pop
mov
mov
jo
fadds
repnz
leave
jo
sub
data16
sub
and
jle
xor
push
xor
ljmp
rolb
aaa
aam
enter
push
cmc
xchg
add
clc
sub
aam
lods
aaa
lret
mov
stos
cs
xchg
adc
imul
leave
xchg
cmp
mov
mov
pop
sbb
xchg
xor
out
add
repnz
jnp
popf
fnsave
cmp
xchg
push
outsl
cmp
add
and
xchg
inc
jae
dec
lcall
fwait
pop
mov
adc
push
xorl
repnz
jge
pusha
clc
xor
cld
jne
xchg
cmp
xchg
mov
cmp
leave
xchg
sub
xchg
mov
sub
dec
jno
into
outsl
lret
in
adc
sub
inc
js
sbb
xchg
or
rclb
inc
sub
enter
or
stos
gs
dec
les
les
xorb
pop
sub
stos
lods
push
sub
test
xchg
out
sbb
outsb
std
das
jmp
orl
cs
fwait
insb
push
push
loope
icebp
push
repz
mov
int3
or
add
lock
lds
xchg
stos
add
mov
stos
fsubs
jne
movsl
loopne
lcall
xchg
rcr
scas
arpl
hlt
arpl
rclb
mov
lahf
imul
into
aam
fsubrs
les
inc
ret
fdivrl
aam
add
fstps
push
xchg
stos
mov
add
dec
out
mulb
loop
icebp
add
addr16
nop
loop
xor
pop
ret
xchg
sbb
mov
sub
mov
xorb
push
push
orl
lcall
jns
adc
dec
enter
pop
pop
fldcw
jno
adc
cli
jl
stos
and
out
push
mov
arpl
xchg
mov
loop
fdivs
orb
mov
pop
adc
add
stos
dec
enter
scas
sub
aam
inc
dec
or
aas
jp
mov
mov
mov
sbb
lock
add
sti
push
enter
insl
nop
lds
pop
rorb
push
jmp
outsl
cmp
incb
mov
les
fisttpl
hlt
rcrl
mov
mov
push
dec
jo
lret
mov
ret
in
sub
mov
hlt
cmc
or
rcll
dec
mov
aam
mov
dec
push
lret
mov
nop
call
add
mov
xlat
mov
jg
stos
push
dec
cwtl
nop
cmc
jle
mov
xchg
cmp
scas
push
inc
mov
call
lret
icebp
das
add
jecxz
or
pop
scas
jge
movsl
jle
std
sub
pop
icebp
sbb
cmp
pushf
xchg
cwtl
ret
fistpll
scas
enter
sub
sbbl
sbb
cld
mov
mov
in
out
mov
jne
or
or
es
repnz
dec
lret
leave
sbbb
mov
mov
or
jbe
lahf
mov
dec
cmp
or
pop
sbbb
mov
mov
pushf
pop
add
sub
sub
mov
int
mov
xchg
mov
shll
cltd
adc
loopne
xchg
sbb
pop
sarb
test
insl
in
hlt
cmp
adc
adc
fldenv
xchg
xorl
add
test
mov
dec
mov
mov
sub
imul
bound
mov
adc
mov
pop
std
leave
aad
jmp
inc
sub
test
ss
add
cmp
xorl
sub
fistps
add
sub
add
jg
lcall
mov
test
daa
mov
xor
lahf
pusha
lods
mov
mov
bound
into
outsl
lcall
popf
ret
push
push
les
add
enter
loopne
enter
adc
jnp
add
fs
shl
test
outsb
lcall
pop
pop
jbe
sub
test
call
mov
mov
jno
push
add
and
adc
and
cwtl
ja
push
mov
adc
fwait
jge
push
mov
push
jmp
and
xor
mov
mov
xor
add
mov
mov
mov
fldenv
add
lret
pop
repz
pop
add
mov
sub
mov
mov
cs
cmp
and
loopne
stos
dec
jl
cmp
jmp
pop
cmp
shll
inc
loopne
jmp
js
movsl
mov
mov
inc
es
cmpsl
adc
xor
jne
clc
shll
jge
test
adc
scas
mov
invd
movsb
imul
cwtl
lahf
cwtl
scas
hlt
cwtl
nop
xchg
lahf
jne
insl
mov
sub
xor
adc
les
pop
leave
push
lock
add
adc
movsl
cmp
cmp
sub
enter
jne
xor
sub
shl
mov
pop
xchg
imul
add
mov
xchg
daa
mov
mov
cmpsl
add
test
jo
notb
cmp
in
mov
sub
jae
inc
fldcw
loop
and
xchg
and
jmp
test
les
or
push
jmp
and
dec
mov
les
test
fs
push
cmp
hlt
outsb
inc
add
movsb
xor
sbb
jne
mov
jmp
jmp
cmp
test
test
daa
movsb
mov
fldenv
xchg
jge
pusha
sbb
or
adc
shlb
je
sub
imul
sbb
aad
add
repz
inc
js
push
cmp
jge
mov
xchg
jge
xchg
xor
in
add
imul
mov
popa
popa
hlt
xor
push
pop
addb
aaa
inc
xchg
adc
lds
fmulp
clc
mov
shll
or
cwtl
cmpsb
dec
loop
int
sbbl
scas
add
xorb
and
inc
test
arpl
push
pop
cltd
mov
mov
movsb
pop
mov
vmovntdq
mov
push
in
dec
pushf
andb
jmp
fisubs
cmpsb
cmpsb
stos
xchg
int
addb
dec
adc
movsb
subl
in
dec
xchg
adc
enter
adcb
xchg
pop
add
hlt
scas
push
pop
add
and
repz
jne
xor
rcl
mov
add
stc
int
xchg
test
mov
loopne
add
sub
loop
std
mov
mov
sub
rorl
mov
stos
inc
xor
and
mov
div
add
push
jne
movsl
mov
adc
icebp
jl
jg
xor
cld
insl
add
loope
fdivrl
add
xorb
cmpsl
add
dec
loopne
mov
js
lock
dec
enter
out
push
roll
xor
in
lds
jp
push
xor
mov
into
xchg
lret
lret
pop
stc
xor
add
mov
dec
jl
cmc
sti
cmp
clc
movsl
adc
imul
push
sbb
lahf
fxch
loop
pop
enter
add
mov
loope
xor
out
xchg
and
xor
inc
sub
mov
add
sbb
data16
loopne
mov
or
lea
fdivr
pop
and
enter
bound
jp
shl
jns
data16
inc
sub
dec
lods
or
push
xorl
ror
jge
lds
pop
sbb
xchg
push
xor
add
scas
sub
pusha
fdivl
add
in
adc
in
aaa
lret
nop
das
cmp
cld
out
cwtl
sbb
adc
adc
jg
cmpsl
frstor
test
rclb
cli
movsl
faddl
clc
test
sahf
dec
out
xchg
in
xor
xorb
push
ljmp
fdivr
or
inc
xchg
repnz
leave
dec
mov
sub
cmp
xor
in
mov
push
add
cmp
adc
and
pop
mov
pop
sbb
lret
shrl
mov
outsl
out
lret
jne
rolb
jbe
xchg
movsl
add
xchg
lcall
icebp
pop
cmp
insb
leave
cmpsl
imul
inc
negb
mov
push
mov
cld
nop
pop
sahf
jg
push
pop
jae
test
lods
hlt
pusha
and
dec
daa
add
sahf
mov
pop
into
jle
adc
and
inc
or
push
dec
stc
ljmp
add
push
or
lock
dec
outsl
sub
pushf
cmp
sub
lahf
pop
mov
imul
cmp
mov
into
fiadds
mov
fisubs
bswap
aaa
daa
and
mov
xor
xchg
in
adc
adc
lods
pop
mov
jp
dec
js
xchg
test
pop
das
aam
in
rcrl
out
sub
repnz
mov
adc
cmp
popa
ss
inc
cmp
lods
inc
xchg
orb
add
dec
xor
cmc
jno
pop
jno
mov
inc
dec
fdivrs
jg
hlt
mov
loope
mov
mov
sbb
popa
lds
push
sbbl
xchg
repz
test
jo
fimull
rcll
or
xor
mov
test
push
mov
cmp
mov
sub
inc
sub
mov
inc
aam
sub
popa
xchg
pushf
scas
dec
gs
add
out
pop
test
mov
test
and
mov
cli
cmp
pop
pop
lods
mov
into
or
mov
push
push
insb
and
aas
pop
mov
adc
in
push
sti
lret
sub
es
ror
enter
adc
adc
xchg
int3
es
roll
xorl
test
lods
insb
mov
pusha
add
jbe
add
hlt
mov
clc
inc
aas
scas
punpcklbw
shlb
aas
orb
jne
dec
mov
pop
sub
jp
repz
mov
pop
fs
cmp
std
and
dec
stc
movsb
xchg
push
pop
rclb
push
fists
pop
sub
gs
sub
pop
incb
lret
enter
mov
sbb
leave
jno
or
mov
jne
push
leave
aam
pop
adc
add
xor
pop
ret
test
out
insl
sbb
adc
stos
popl
cmc
outsl
pop
in
fsubrl
jle
loope
comiss
xchg
fwait
xchg
push
sahf
in
cmp
mov
repnz
push
mov
xchg
cltd
inc
jp
push
mov
mov
jb
scas
cmc
xchg
lods
pop
int3
ret
xchg
jne,pt
mov
sbb
and
push
leave
out
loopne
ret
sub
mov
dec
mov
rol
sbb
xchg
mov
adc
nop
outsb
cltd
mov
or
mov
les
push
jno
jbe
data16
xor
testl
mul
sbb
in
push
nop
div
xchg
sub
dec
inc
pop
or
xor
fstpt
or
adc
insl
push
mov
sub
cmp
add
nop
int3
les
rcr
jne
mov
mov
xchg
cmpl
imul
ret
out
sub
and
xchg
hlt
or
fisttpl
lods
adc
mov
js
fsub
cmp
adc
out
pop
or
xlat
mov
rcrl
loope
lock
pop
outsl
sub
insb
mov
fsts
data16
cmc
movsl
and
fnstcw
xor
sub
aad
add
call
pop
scas
movsb
in
ja
or
lahf
movsb
jns
lods
and
subl
in
sbb
mov
and
mov
fs
loope
clc
cmp
sub
adc
mov
xor
dec
mov
or
fadds
mov
dec
or
scas
negl
cmc
dec
enter
push
aam
inc
mov
test
jmp
push
push
stc
inc
push
test
push
pusha
out
fisttps
xchg
jb
add
scas
push
xchg
push
jb
push
jge
mov
push
jg
lds
push
inc
xchg
rorb
xor
xchg
lahf
inc
dec
in
enter
scas
mov
orl
lcall
jmp
movsb
je
loop
data16
xchg
out
xor
nop
cmpsl
mov
add
mov
mov
enter
roll
jno
cmp
in
lcall
jnp
fcom
es
jns
leave
dec
into
jne
ret
das
popf
mov
fld
lods
jne
jno
mov
xchg
add
lea
mov
pop
cmp
add
decl
lds
push
and
out
aam
loopne
xlat
out
rcrl
bound
sahf
mov
inc
das
outsb
adc
push
mov
mov
mov
hlt
dec
dec
cld
add
and
jmp
clts
sbb
sub
mov
mov
sub
jne
adc
xor
std
cltd
mov
sub
mov
push
sub
les
mov
rclb
or
insb
inc
mov
hlt
in
lret
xchg
push
ds
scas
sbb
pop
leave
xchg
adc
ljmp
sub
xchg
sarl
or
sub
ret
repz
aad
jno
nop
addb
mov
xor
rcrl
aas
pop
cmp
inc
shrb
mov
and
mov
leave
jmp
stos
dec
sbb
mov
pop
inc
xor
mov
mov
xchg
xchg
and
loope
scas
addr16
hlt
nop
rolb
or
adc
sub
aad
push
pop
movsl
pop
jle
fcomp
stc
andl
cs
mov
adc
push
push
jne
jbe
jbe
dec
mov
adc
stos
inc
test
stos
pushf
addr16
aas
hlt
mov
push
mov
enter
mov
inc
subb
or
dec
les
nop
mov
in
pushf
stos
push
xchg
mov
push
nop
and
cwtl
ret
jne
neg
mov
jmp
push
xlat
cmp
movsl
or
andl
mov
pushf
push
xor
enter
and
push
mov
hlt
xor
out
pop
inc
cmp
xchg
and
jb
enter
mov
jmp
push
subl
mov
push
int3
stc
testb
push
add
dec
pop
sbb
in
mov
jno
cmp
movsb
testl
add
jns
ljmp
decl
jo
dec
out
bnd
mov
or
cmp
jl
xchg
pop
add
lret
mov
loop
inc
or
addr16
in
push
shlb
xor
enter
cli
sub
mov
mov
pop
call
cmpsb
mov
mov
in
xchg
fistps
add
lret
in
scas
fbstp
fmuls
sbb
mov
stc
mov
and
hlt
loopne
call
or
loop
push
lods
mov
xor
push
stos
mov
test
mov
icebp
pop
movsb
jmp
push
aad
daa
xchg
cs
shlb
in
xchg
mov
movsb
adc
jne
adcl
stos
jbe
pop
push
adc
subb
jmp
cmpsl
pusha
mov
mov
lret
lcall
inc
xchg
jg
adc
adc
jle
int3
mov
addb
xchg
xchg
andl
ljmp
test
sarb
stc
jl
mov
mov
test
and
mov
sub
rolb
les
vpsllw
repnz
dec
enter
mov
movsl
inc
fiadds
lahf
push
inc
loopne
adc
jge
push
and
xchg
mov
int
dec
add
cmp
xchg
in
shr
jo
cli
dec
popf
inc
hlt
sub
sarl
lcall
loop,pt
pusha
sti
mov
rol
insb
cmp
movsb
xchg
jno
xor
or
fmuls
cmp
xchg
dec
cmpsb
mov
or
cmpsl
jg
xchg
int
xchg
mov
jl
cmpsl
loope
mov
loope
adc
out
ja
sub
popf
lcall
push
sub
jb
jp
mov
in
orl
stos
mov
jne
push
cmpsb
add
repz
mov
adc
pop
test
nop
mov
inc
jbe
mov
hlt
repz
adcl
movl
in
scas
inc
or
pop
mov
loope
sti
and
pop
ds
cld
mov
repz
xor
pop
add
push
pusha
icebp
inc
popa
testl
mov
cmp
das
cltd
aam
sub
lcall
loopne
inc
mov
aam
and
pusha
enter
xorb
lods
mov
nop
stos
jae
xchg
mov
mov
mov
sti
xchg
jmp
sub
stc
jns
into
les
cs
jle
pop
in
inc
push
xchg
xor
inc
mov
jo
fwait
nop
sbb
stc
cli
mov
and
clc
jne
cmp
scas
sbb
mov
xchg
jg
sarb
loope
jbe
hlt
adc
popf
mov
test
enter
mov
mov
std
cli
imul
add
xchg
xchg
das
push
adc
lods
pop
in
lahf
inc
mov
in
test
cwtl
das
cmp
push
pop
pop
std
inc
mov
jno
adc
sarb
dec
insl
stc
or
mov
add
aas
mov
xchg
lret
dec
rcr
lret
sarl
inc
adc
pop
push
cmc
rorl
cmp
test
loope
cli
push
lock
outsb
pop
loop
movsb
in
mov
add
jmp
negb
mov
push
into
sub
ja
cmp
jle
inc
push
pop
mov
cmp
lods
nop
push
mov
cs
dec
pop
aam
add
jle
jmp
bound
hlt
jge
cld
cltd
ret
jle
aam
mov
jne
mov
ret
inc
dec
and
nop
xchg
pop
lret
and
stos
sub
pushl
scas
jno
jmp
push
and
pop
test
jecxz
adc
shrl
push
add
mov
pop
pusha
jno
test
cwtl
jecxz
lret
jle
mov
lock
or
int3
inc
gs
sub
fisubrs
jmp
cmp
xorb
mov
js
jae
and
add
std
lods
pop
inc
cwtl
xchg
and
dec
inc
enter
cmpsb
xor
sarb
mov
jl
test
jl
das
sub
mov
mov
repnz
scas
fdivl
or
mov
jge
sbb
gs
or
stos
hlt
popf
pushf
mov
mov
ja
mov
jno
jl
mov
ret
les
mov
xchg
lds
mov
inc
enter
pusha
enter
add
jg
jg
jbe
incl
cmp
repz
cmc
and
lock
sbb
out
mov
push
sbb
xchg
pop
pop
les
jecxz
sub
or
outsl
dec
sbb
dec
nop
arpl
add
xchg
jno
pushf
inc
mov
pop
jg
sub
xlat
jne
std
mov
enter
push
sbbl
fisttpll
and
fldl
testb
ret
add
lea
push
enter
scas
cmp
sbb
sub
xchg
mov
push
dec
hlt
movsb
test
pusha
dec
mov
lahf
arpl
dec
xchg
test
fcoml
mov
int3
pusha
mov
push
mov
insl
in
imul
into
xorl
and
scas
mov
and
pusha
sbb
das
sbb
int3
repnz
mov
mov
sbbl
std
mov
mov
cmpsl
jecxz
loope
xchg
cmc
jle
and
test
les
xorl
lret
pop
push
jo
ret
jge
dec
mov
cmpsb
scas
int3
ljmp
jne
jb
sahf
sbb
or
nop
push
ret
xchg
sti
or
mov
mov
out
adc
inc
rolw
pop
loopne
add
into
mov
mov
adc
xchg
lcall
and
xchg
cmc
loopne
mov
mov
dec
jle
testl
popa
cmpsl
cmpsb
mov
push
jp
adc
push
scas
pop
cli
pop
jae
add
cmpsb
stc
loope
fildll
xchg
je
sub
mov
stos
cli
out
jne
test
jne
or
icebp
dec
add
lret
cmc
int3
inc
mov
sub
push
push
std
cld
int
add
inc
or
or
test
push
jnp
and
xchg
fcoml
stc
ss
and
pop
pop
clc
and
repz
jmp
pop
jnp
imul
aad
es
jae
adc
jl
insl
push
add
insb
rclb
cwtl
add
ljmp
push
inc
lods
lret
pusha
lods
cmc
incl
jbe
inc
jecxz
mov
fistl
mov
inc
cld
push
enter
lods
mov
inc
fwait
clc
jne
inc
cmc
add
clc
and
mov
insb
fadds
fmul
out
mov
pop
mov
pop
sub
lods
xchg
int3
jl
mov
sbb
push
push
push
xor
mov
bound
hlt
insl
inc
jne
cld
lcall
cmpsb
outsb
cmc
cli
inc
push
lret
enter
inc
add
call
or
sub
cmp
aas
aam
adc
fsubs
je
mov
test
movsl
mov
jae
daa
subl
fisttpll
mov
aaa
xor
mov
mov
addb
test
and
mov
adc
arpl
stos
fsub
das
pop
pop
xor
insb
movsl
adc
sub
pop
push
cmpsb
clc
rclb
test
ret
cmp
aas
outsb
push
rcll
mov
jbe
push
pop
das
lret
inc
ror
pushf
mov
jge
push
shll
jl
mov
add
cltd
shlb
bound
loop
jo
push
sub
daa
xor
push
filds
jle
mov
out
add
xchg
add
loop
mov
mov
jmp
add
ljmp
and
fldenv
pushf
sbb
std
shrb
hlt
insl
adc
dec
gs
pop
inc
cmp
jne
insb
ja
jmp
push
fsubp
xor
jne
add
movb
idivl
push
mov
push
pop
jo
mov
pop
out
repnz
orl
hlt
mov
xor
cld
push
stos
jb
ss
ss
or
mov
clc
fistpl
bnd
or
inc
mov
jge
ret
pop
iret
push
sub
sbbl
jp
lahf
ja
and
scas
scas
in
shlb
hlt
inc
cmp
das
cmpsb
fs
mov
data16
mov
mov
mov
mov
inc
pop
or
cwtl
fbld
xor
push
idiv
xor
jb
mov
enter
fdivl
loope
add
sahf
das
xor
push
jb
aad
test
jns
mov
bound
nop
call
out
adc
loop
out
mov
jb
and
rolb
inc
xchg
push
stos
inc
mov
aad
mov
mov
and
xchg
push
rclb
in
inc
add
inc
dec
add
hlt
movsb
dec
jmp
ret
stc
jle
xor
mov
incl
icebp
lock
dec
shlb
mov
clc
sub
sbb
dec
loop
dec
nop
imul
hlt
out
push
mov
je
cmp
ja
nop
pop
inc
test
inc
sti
dec
hlt
es
repz
xor
xor
jno
xchg
xlat
pop
sar
pushf
fmul
xchg
jne
movsl
add
insb
fidivrl
ss
mov
daa
pop
out
sub
jmp
orb
mov
push
fwait
stos
mov
shr
jg
xsha1
cmpsb
leave
push
push
add
rorb
push
and
pop
movsb
or
daa
xchg
jne
ja
xor
xorb
pop
jne
sub
xchg
dec
es
push
lods
pop
popa
stos
prefetch
and
cld
fcmovnb
add
add
sbb
inc
mov
xchg
adc
aad
push
daa
cmpsl
pop
hlt
enter
mov
mov
loope
or
push
xchg
jecxz
mov
or
rolb
xor
fistps
frstor
push
sub
add
sub
mov
mov
adc
cwtl
mov
inc
test
mov
dec
mov
addr16
loop
mov
or
out
mov
rorb
mov
mov
ss
ljmp
xchg
jl
jmp
lock
outsl
mov
xchg
rclb
xor
ljmp
repz
mov
xor
pop
in
xor
xlat
popa
xchg
scas
inc
adc
lods
addr16
xor
ret
pop
das
dec
and
inc
mov
lods
jmp
sub
fldenv
shl
ficomps
dec
jmp
cmp
test
jge
cld
jno
lods
fdivr
into
shr
jl
xor
push
xchg
fdivs
sub
or
adc
mov
xchg
add
lock
xchg
cmpsl
dec
inc
sbb
daa
add
es
add
xlat
rcrb
xlat
sub
dec
stos
pop
dec
push
cmc
pop
cmp
mov
in
pop
daa
and
cltd
mov
mov
inc
aad
jmp
pop
call
push
hlt
lcall
aas
jecxz
fwait
data16
mov
ja
in
mov
push
push
jecxz
cmp
jge
into
mov
add
fists
jbe
cmp
push
leave
mov
mov
or
stos
adcb
arpl
call
jecxz,pn
sbb
int
outsl
es
out
in
add
sub
xchg
hlt
imul
jle
pop
jno
ljmp
push
add
xchg
hlt
fisttpl
dec
inc
enter
push
insb
lahf
push
and
pop
shlb
stos
lcall
lret
or
mov
fsubrp
cmpsl
stos
sti
imul
mov
nop
cld
cmp
es
or
lret
push
pop
sbb
sbb
sub
mov
jo
inc
mov
adc
dec
inc
xor
into
dec
js
xchg
hlt
mov
addb
clc
cmp
pushf
inc
es
fcomi
frstor
mov
cmp
sbbb
in
push
fstpl
rcr
imul
dec
repnz
mov
pop
xchg
ret
xor
jne
hlt
cli
hlt
sahf
pusha
icebp
jno
jns
push
add
add
test
pop
xlat
nop
lea
icebp
pusha
jne
pop
outsl
adc
mov
jnp
cltd
adc
or
cmp
std
pop
sbb
insl
repnz
pushf
push
or
rcl
subb
jecxz
cmp
out
enter
push
es
insb
hlt
leave
dec
call
mov
xor
mov
adc
jbe
pop
pop
mov
int
sbb
rorl
mov
sbb
fstpl
dec
mov
addl
stos
lods
dec
mov
cmp
cmpsl
pusha
cwtl
jp
mov
insb
mov
jge
inc
test
test
push
lea
pop
mov
test
jmp
in
stc
and
scas
push
cmp
fildl
aas
addl
or
jb
jno
cld
out
call
adc
inc
fdiv
test
pop
xor
add
iret
and
lcall
lods
test
loope
push
push
and
inc
decl
pop
test
les
xchg
flds
xchg
call
pop
cmc
into
cli
jns
or
in
out
scas
pop
in
jmp
xor
rorb
popa
hlt
xchg
lea
adc
xchg
nop
mov
push
sbb
mov
push
cmp
test
test
pop
test
mov
lods
shlb
jns
fcompl
ljmpw
test
aaa
mov
mov
shrb
pop
sub
psubq
aam
ret
pusha
movsb
inc
cs
fs
cwtl
fiadds
push
mov
insl
xchg
push
dec
int
shrb
int3
xlat
pushf
pop
or
add
and
pop
sbb
sub
pop
lcall
outsb
aaa
pop
push
hlt
loop
jg
aad
xchg
ds
mov
mov
pop
pop
ja
push
pop
mov
int3
imul
aam
cmpsb
call
hlt
jmp
sub
add
arpl
adc
scas
outsl
mov
dec
add
hlt
mov
dec
je
and
scas
jnp
push
and
out
cmp
mov
repz
lock
mov
pop
pop
push
pop
cli
add
xbegin
data16
xchg
mov
mov
fsqrt
xlat
les
add
lahf
in
enter
mov
hlt
jg
sbb
inc
mov
ja
cmpb
ret
lock
jmp
shlb
enter
inc
add
lods
dec
loope
xchg
into
mov
fdivr
dec
add
add
mov
jg
std
sub
adc
movsl
jno
stc
sahf
xchg
mov
pop
and
es
mul
inc
xchg
xor
sbbl
sub
mov
mov
and
popf
fstpl
repnz
jmp
mov
je
cmpb
or
jne
push
push
loope
xchg
lock
inc
xor
int3
inc
xchg
enter
aas
mov
mov
fnsave
mov
loop
mov
rcll
sub
aam
push
cli
adc
es
negl
fs
jne
xor
shlb
cmpsb
mov
fcmovnb
subb
stc
adc
cmp
dec
es
push
rcrb
cmpsb
dec
shrb
hlt
mov
jne
inc
insb
mov
mov
pop
sbb
leave
sbb
xor
or
jge
inc
scas
mov
test
push
fwait
push
lods
pop
pop
leave
xlat
test
lcall
mov
shlb
hlt
jnp
adc
ret
nop
jp
mov
clc
push
pop
jae
lret
add
pop
sub
add
push
xchg
or
mov
pop
bound
addr16
and
mov
xor
cld
out
leave
std
stos
adc
or
xor
push
mov
in
ds
pushf
pop
sbb
inc
ja
push
loop
hlt
sbb
or
sub
popf
inc
repnz
jge
ret
call
xchg
jns
xchg
xor
jne
mov
inc
sub
sub
dec
lods
icebp
xorb
adc
test
out
cld
enter
lret
sub
cltd
das
inc
dec
sub
inc
xchg
out
mov
mov
push
pop
icebp
jge
xchg
jge
or
xchg
mov
cli
orl
xor
xchg
movsl
jne
or
xor
scas
aad
bound
cmp
xor
loop
pop
dec
dec
mov
mov
rorb
mov
out
mov
push
jl
adc
stos
xchg
mov
js
ret
add
fwait
hlt
out
jmp
sub
xchg
mov
pop
out
les
jae
xchg
ja
mov
fsubrl
jns
cli
push
mov
sub
aas
sub
ror
add
dec
hlt
test
lds
push
insl
sub
bound
stc
cld
add
je
lods
cmp
dec
daa
movsb
sub
add
orl
leave
mov
es
cmp
xlat
push
jno
hlt
sahf
mov
lods
rcll
xchg
push
inc
jge
es
lret
or
rolb
cmpsb
leave
push
add
push
jo
outsb
mov
mov
sub
xchg
xor
adc
pop
push
inc
negb
div
out
add
sub
push
es
inc
repnz
les
js
gs
call
es
ja
shll
jecxz
loopne
jmp
fldenv
dec
jg
shrl
mov
outsl
dec
popa
cld
push
mov
push
mov
das
push
cmc
push
jmp
ret
fstl
mov
cmp
stc
push
dec
loop
dec
dec
jb
popa
lods
roll
mov
cmpl
test
mov
sub
sarl
adc
fwait
xorb
inc
in
jns
inc
clc
sub
shrl
xor
das
mov
pop
and
inc
fisttpl
push
js
jge
inc
mov
jg
sub
mov
jne
in
rorb
add
lock
and
lcall
cmp
shlb
jb
inc
fdivr
add
lods
dec
xchg
add
outsb
xor
inc
mov
xor
in
xchg
sahf
dec
pop
mov
outsb
sub
inc
lret
jbe
sub
adc
jl
add
xor
test
jge
or
pop
int3
mov
push
jecxz
mov
sbb
out
pop
sub
addb
loop
pushl
cs
mov
inc
inc
das
and
mov
imul
mov
xchg
xchg
fldl
push
std
das
push
sahf
cld
fldenv
data16
nop
jle
cmpsl
faddl
cmp
xlat
and
fnstsw
inc
test
cld
jne
xchg
sahf
xchg
add
lock
xchg
repz
rcrb
scas
mov
lods
dec
sbb
jb
jbe
out
sub
test
ficoms
sub
cmpsl
add
stos
push
scas
mov
push
xchg
enter
jo
pop
jle
divb
cmp
repnz
add
cmp
dec
xchg
inc
fidivs
push
add
sub
mov
inc
mov
adc
mov
test
sarb
jo
ret
lods
adc
or
add
jbe
test
or
lcall
gs
inc
jns
pusha
mov
loop
inc
inc
push
call
mov
jno
sbb
hlt
xchg
xchg
pusha
ds
popl
decl
mov
rorb
es
push
jnp
xchg
cs
out
push
insb
xchg
bound
dec
popa
pop
aam
fldl
push
xchg
adc
sub
push
sahf
dec
add
inc
nop
cs
pop
or
lea
mov
inc
lret
inc
sbb
jne
dec
push
ret
stos
stos
test
sbb
and
loope
pop
mov
cmpsl
cmpsb
mul
mov
dec
aaa
lods
jno
data16
jbe
aas
hlt
cs
xlat
xchg
dec
cmc
jae
ss
dec
mov
mov
leave
dec
inc
mov
jns
inc
clc
pop
jb
les
cli
xor
xchg
jae
mov
jecxz
jecxz
fnstcw
fiadds
lock
mov
mov
rcrb
in
shll
cwtl
add
and
adc
lahf
cmp
mov
inc
lahf
dec
sar
mov
cmpsl
mov
ret
inc
sub
xor
test
movsl
jae
sbb
jbe
outsb
push
and
mov
xlat
dec
sbb
cmp
lock
push
jno
inc
cmp
adc
adc
push
xorb
jno
pusha
mov
pop
setno
out
xchg
mov
stc
rep
jo
lretw
scas
fsub
mov
adc
cwtl
hlt
mov
cmp
ret
or
jns
mov
sub
mov
repnz
test
xor
in
add
mov
push
loope
pop
or
sbb
and
mov
push
inc
es
div
pop
ret
lods
jle
sbb
push
loopnew
mov
add
inc
enter
insb
mov
mov
inc
xor
fdivrs
mov
dec
add
enter
inc
push
shll
insb
dec
mov
rcl
mov
jnp
lods
and
fldl
aaa
icebp
or
mov
pushf
movsb
inc
push
jle
cmpsb
scas
push
inc
jne
pop
sbb
into
xor
fldcw
jp
enter
adc
lcall
and
dec
dec
inc
fsubrl
out
and
int3
das
jl
sub
dec
mov
or
es
xchg
dec
xor
cmp
in
aas
mov
out
daa
das
frstpm(287
iret
out
mov
sub
pop
roll
out
into
inc
add
stc
xlat
nop
xor
mov
jmp
je
or
dec
ret
pop
cmp
es
js
inc
xchg
addr16
test
mov
xorl
int
xor
mov
pop
mov
xor
cmc
test
xlat
shlb
add
int
sbb
sti
add
stos
add
out
push
jnp
inc
adc
jmp
sub
pop
jl
movsl
xor
add
mov
outsb
push
addr16
mov
jbe
jne
add
jbe
arpl
cs
das
adc
pop
bound
xor
pop
jge
add
add
sub
int
jge
push
pusha
cmp
bswap
stos
pop
inc
leave
cmp
cmp
daa
jmp
scas
hlt
mov
add
fisttpll
dec
mov
mov
adc
iret
iret
push
vcvtps2pd
adc
int
jbe
stos
stos
dec
iret
outsb
das
mov
sub
mov
sbb
imul
dec
sbb
ret
dec
fisubs
push
mov
jecxz
cwtl
loope
into
lods
lds
or
inc
lods
ficoms
sbb
mov
mov
pop
xor
fnstsw
repz
test
add
sahf
aad
jmp
sbb
inc
scas
negl
subb
mov
insb
aad
cltd
adc
mov
test
push
insl
cld
stc
ret
arpl
dec
jmp
pop
or
push
cmp
rcll
xchg
stos
xchg
cli
xor
out
imulb
test
xchg
lock
push
mov
jge
push
push
sub
pop
js
aaa
jg
mov
or
xor
iret
push
outsl
push
aad
rolb
test
daa
adc
cmpsl
pop
fiaddl
test
push
mov
cli
mov
lods
sbb
jo
adc
ret
arpl
imull
sub
sub
orb
mov
mov
inc
add
ret
sti
dec
mov
push
add
mov
hlt
aam
stos
andl
xor
jae
jmp
cltd
test
or
stos
mov
mov
aad
sahf
gs
lods
add
std
nop
sbbl
push
inc
sahf
fdivrl
add
stc
loopne
daa
cwtl
add
jns
mov
cld
jg
out
call
mov
or
cmp
pop
fwait
andl
insl
or
andl
fcompl
rolb
pop
cmc
test
call
in
je
pusha
ja
popa
and
gs
push
jae
jne
inc
dec
cld
sarb
xor
nop
jge
jns
jb
pop
call
in
iret
repnz
pop
push
sbb
test
push
aas
dec
nop
cmp
repz
out
ds
out
inc
ja
sub
subb
sbb
sub
mov
dec
int
out
mov
pop
adcb
xchg
fnsave
jb
pop
mov
mov
push
jge
pop
adc
movsb
mov
xor
fists
inc
ffree
loopne
ljmp
sahf
jp
xor
cmpsb
or
movsb
cli
mov
mov
aam
jp
jecxz
xor
cltd
sub
pop
mov
pop
mov
nop
outsl
leave
jbe
dec
jmp
test
mov
pop
xchg
jnp
xchg
insb
push
sbb
pop
adc
xchg
push
lock
sub
mov
hlt
cmp
sbb
mov
loopne
popf
xor
movsl
fs
movsb
push
add
add
pop
pop
movsl
leave
xchg
jle
fs
jne
call
repnz
inc
insb
mov
rol
pusha
stos
pop
xor
pop
pusha
jae
idivl
sub
mov
lock
sti
cmc
lret
mov
pop
std
icebp
xor
jne
out
mov
mov
jle,pn
cmp
sbb
xchg
addr16
test
jg
movsb
gs
add
je
js
add
pop
das
pushf
mov
movsb
aad
push
test
mov
pusha
stos
jmp
inc
xchg
rcll
jne
out
push
fidivrs
xorl
leave
fiaddl
xchg
cld
sbb
nop
push
inc
push
xlat
add
lcall
sbb
test
cld
jbe
add
xorl
add
icebp
movsb
je
pop
loop
fcoms
or
pop
sbb
add
mov
pop
xchg
scas
inc
adc
lret
outsl
or
pop
popa
xchg
cmp
inc
sbb
mov
insb
inc
lret
xchg
popa
leave
imul
insl
or
repz
mov
inc
pusha
mov
jle
lock
loope
cwtl
or
xor
mov
mov
push
push
ffree
jae
xchg
ret
fldl
loop
adc
and
fistpl
inc
jmp
icebp
inc
cmpsb
and
mov
fcoml
ffreep
loop
pop
adc
out
js
popa
rolb
inc
adc
fstps
repnz
jne
adc
loop
insl
or
or
dec
loope
inc
lahf
push
adc
dec
jg
test
sub
mov
or
add
pop
cmpsl
ret
xlat
lcall
das
es
rcr
inc
mov
jg
jne
ss
stc
inc
shrb
add
hlt
in
jnp
lahf
push
fldt
pusha
test
std
mov
push
adc
stc
mov
mov
jle
add
popa
hlt
dec
jno
sbb
mov
lret
scas
mov
xor
or
sub
lahf
lahf
popa
pushf
add
mov
in
xchg
cmp
cmpsb
mov
or
xchg
incl
dec
push
das
aad
into
cs
repz
fildl
add
sub
movsl
and
outsb
flds
addr16
shlb
inc
je
repnz
sub
push
sbb
popa
xlat
mov
inc
jnp
imul
push
push
xchg
sti
jae
mov
add
jp
add
dec
mov
xchg
lods
or
outsw
and
aas
inc
cmc
mov
nop
pop
mov
aam
lds
cmpsl
inc
pushl
hlt
inc
imul
adc
mov
pushl
repnz
outsl
imul
movsl
inc
shlb
sbb
mov
dec
push
repz
test
xchg
pushf
dec
nop
sbb
mov
or
mov
cmc
nop
insl
test
lds
mov
mov
aas
mov
nop
jmp
stos
pusha
stos
push
push
or
fs
add
sub
call
lock
inc
xchg
fwait
jae
in
inc
xchg
pop
dec
mov
sub
out
ret
loopne
aas
inc
test
dec
mov
andl
xchg
and
addr16
xlat
stc
iret
mov
pop
jge
outsb
jecxz
jae
notl
xor
xchg
mov
adc
mov
push
ljmp
mov
xchg
dec
lods
inc
lahf
mov
mov
mov
sub
lret
sub
sub
cld
dec
xorl
xorb
pop
jns
push
cmp
push
call
pop
or
inc
mov
ret
xchg
jg
loopne
mov
test
hlt
popf
mov
int
jg
fimull
inc
xchg
movsb
mov
add
out
mov
jge
inc
xor
add
mov
fstl
ljmp
pop
out
mov
push
nop
xchg
or
sar
sarb
popf
fldt
jp
mov
repz
mov
mov
push
in
into
stc
into
aaa
stos
movsl
lret
stos
je
adc
adc
add
or
pop
xor
pop
test
sub
pop
push
sbb
pop
aas
mov
lods
loopne
fidivl
mov
test
call
push
call
hlt
or
and
sub
loop
or
test
sub
jg
subl
sub
dec
jae
adc
dec
cli
cmc
out
inc
add
cmp
mov
ret
js
mov
outsl
mov
mov
and
mov
inc
add
lock
orl
add
xor
pop
jmp
cmp
inc
adc
test
jbe
mov
mov
push
sbb
int3
and
gs
test
test
xor
xor
dec
test
push
jne
pop
add
rorb
add
hlt
mov
sti
pop
mov
dec
rclb
mov
leave
mov
stos
ljmp
subl
shrl
mov
in
pop
movsl
add
dec
test
dec
loopne
enter
lea
sub
leave
xchg
insb
lods
push
jo
popl
movsl
mov
ret
mov
icebp
sub
add
xor
jp
pop
add
push
adc
mov
jle
rolb
mov
dec
mov
outsb
mov
xchg
add
add
or
dec
int
xchg
push
jge
inc
xchg
enter
mov
inc
add
xor
lret
mov
add
addr16
mov
sub
inc
dec
xchg
into
cmc
in
sub
les
pop
stos
xor
addr16
mov
rcll
jne
xadd
cs
int3
add
mov
mov
or
jecxz
test
iret
mov
xacquire
dec
popa
dec
mov
cmp
sub
clc
repz
mov
test
lahf
jge
cmpsl
adc
or
popa
enter
imul
jbe
sub
jbe
mov
inc
or
clc
xchg
sub
mov
lcall
jecxz
pop
out
push
test
xchg
pushf
pop
imulb
push
popa
or
int
and
inc
sub
mov
std
jle
pop
jmp
inc
jne
add
push
lahf
cld
bound
aam
lock
or
cwtl
mov
adc
dec
inc
sbb
xchg
xchg
push
fst
out
mov
pop
mov
dec
sbb
inc
shlb
mov
jecxz
sahf
loop
pop
dec
jmp
xor
mov
in
lods
and
daa
loopne
sbb
add
jne
ljmp
cmp
push
jae
mov
sbb
popf
test
out
xlat
or
and
nop
and
cmp
popa
adc
scas
pop
loopne
cld
adc
cmp
int3
scas
dec
mov
pop
outsl
repnz
js
adc
fisubs
sahf
std
test
xchg
dec
add
jne
mov
lea
sub
in
fsubs
xor
imul
icebp
sub
dec
xor
add
inc
out
add
xchg
cwtl
sub
xor
xchg
inc
rol
sub
ljmp
push
jp
shll
lea
mov
xchg
and
addb
arpl
pop
test
xchg
test
ja
jge
push
insb
rol
sub
add
fildll
stc
lret
sub
data16
addl
popa
mov
sbb
mov
cld
push
pop
or
mov
pop
dec
int
mov
ljmp
cli
xor
mov
adc
js
mul
fisttps
scas
add
cmp
hlt
out
jbe
pop
mov
add
fstpl
pop
mov
push
inc
inc
pop
lods
fadds
scas
dec
testb
push
push
das
or
inc
inc
lcall
dec
arpl
adc
cwtl
mov
xchg
push
data16
jne
or
shrl
in
inc
cltd
jbe
xchg
imul
mov
dec
sbb
test
xchg
or
int
clc
push
mov
jns
aam
in
mov
imul
mov
aam
fsubl
pop
pop
cmpsl
js
in
mov
adc
mov
fwait
sarl
icebp
add
pushf
flds
mov
pop
mov
imul
lret
repnz
shrb
lock
das
scas
lods
shl
or
mov
ljmp
stc
sub
mov
jno
lods
inc
mov
addr16
sbb
les
sub
fcompl
sbb
ud0
es
fucomip
lahf
pop
ss
movsl
movsb
cmpl
outsl
pop
int
mov
jge
pop
pop
hlt
adc
stos
nop
lret
cwtl
add
sub
cmpsl
and
repnz
mov
pop
adcb
cmp
out
ret
mov
scas
dec
loope
inc
leave
int
add
pop
xor
and
push
ret
push
pop
divl
dec
sbb
scas
add
adc
pushf
push
push
popf
jae
mov
cmp
out
orb
and
loope
jmp
sub
lock
mov
sti
arpl
mov
int3
pushf
jne
and
pop
and
out
mov
add
mov
lds
mov
inc
or
add
fwait
xor
mov
inc
bswap
lahf
pop
cwtl
adcl
mov
dec
aas
mov
fnstsw
adc
into
sub
mov
test
fdivl
mov
push
repz
ret
mov
fsubrl
add
cwtl
stc
cmp
pop
testl
or
outsb
sub
xchg
sub
stc
or
rcr
idivb
rcr
je,pt
dec
add
push
push
add
int3
dec
sti
insl
fisttpll
add
fmuls
adcb
repz
xacquire
dec
dec
fdivrl
add
cmp
mov
bound
jne
lea
push
add
scas
and
subl
test
cmpsl
sub
or
into
jg
jmp
cmpsl
test
or
mov
lcall
lods
xchg
inc
and
out
push
sub
xchg
inc
sub
lret
popa
les
xchg
sidtl
dec
out
orb
movsb
lock
or
push
add
mov
arpl
into
jg
xor
or
out
loopne
hlt
cmpsb
push
xor
mov
pusha
shl
popa
sar
or
jne
inc
push
cmp
mov
pop
dec
add
mov
sub
push
and
adc
mov
push
dec
into
lahf
add
pushf
fisubrl
sti
jne
pop
lock
adc
push
scas
jnp
out
xchg
popf
scas
sub
mov
ss
cmpsl
aam
rorb
push
sti
addr16
push
fildll
ja
lock
imul
ljmp
repz
outsl
sub
inc
add
mov
ljmp
adcb
and
jne
sub
adc
loope
lcall
in
loop
or
add
and
shlb
imul
mov
or
sub
mov
jnp
outsl
cld
nop
xchg
inc
cmp
pop
test
pushf
mov
sub
fs
je
lods
pop
js
inc
push
adc
cmc
leave
aad
fucomp
test
pop
and
sub
adc
sbb
ret
lds
int3
push
inc
cs
fstps
rorb
dec
mull
mov
daa
mov
cmc
sub
pop
movsl
in
cmp
jns
jle
dec
sarl
stc
adc
add
lods
insb
push
stc
jp
lret
mov
call
divl
push
sub
jno
pop
cmp
sub
shlb
jge
in
dec
add
cld
xchg
pop
push
sbb
mov
inc
mov
lcall
repz
mov
inc
or
xor
mov
jne
frstor
adc
stc
xor
push
outsb
fdivrp
jmp
xchg
insb
inc
sarb
hlt
rcrl
dec
sbb
push
fcoms
inc
test
imul
inc
hlt
aaa
or
cmp
arpl
out
ret
ret
sub
sti
bound
push
lds
jae
cli
xor
push
xchg
fdiv
mov
sub
mov
pop
sahf
jmp
fcomip
rep
mov
or
jo
jg
scas
and
call
cli
mov
aad
sbb
test
pusha
push
test
test
sbb
hlt
fcoms
ret
push
mov
mov
xor
sbb
cmc
xor
jge
int
sub
nop
insb
insl
cmpsb
out
dec
xlat
push
pop
stos
pop
xor
rcll
scas
out
mov
ss
out
aaa
xchg
inc
push
icebp
stc
int3
or
mov
ljmp
imul
das
pop
pop
scas
mov
test
test
insb
sbb
inc
lock
push
cmpsb
outsl
mov
pop
call
aam
jne
mov
sub
fstpl
pop
and
scas
jp
xchg
add
lret
mov
mov
es
xor
in
test
mov
pop
mov
sti
aas
popf
movsl
idivl
outsl
add
dec
pop
and
mov
and
jp
mov
xchg
ds
add
data16
aam
rorl
outsb
push
testl
cmp
mov
movsb
lods
sub
pop
and
stc
outsl
add
stos
lcall
mov
add
push
sub
cwtl
inc
hlt
lods
or
popa
clc
push
cs
xchg
and
add
outsl
xchg
lret
push
call
jo
lea
lcall
fwait
popa
in
jnp
push
mov
mov
inc
sbb
cmc
jl
cmc
jne
adc
test
dec
cmpb
dec
sub
notl
push
cli
lret
cmp
fsubrl
mov
adc
adc
inc
push
mov
dec
push
jne
movsl
pop
and
movsl
popa
xchg
and
ret
or
sbbb
push
push
cmp
xor
jmp
pop
push
jmp
loop
movsb
mov
insb
sbbl
fisubrl
push
inc
mov
sbb
pusha
mov
cmc
repz
push
inc
or
test
inc
and
adc
pop
push
xchg
movsl
mov
scas
pop
mov
test
int
enter
mov
lret
aam
adc
sub
adc
int3
shl
add
ret
mov
fdivrl
xchg
cmpsb
popa
stos
test
mov
pop
addl
bound
xor
push
inc
shr
add
sahf
lea
call
dec
mov
xchg
add
nop
adc
mov
movsl
hlt
fldt
lret
fs
mov
inc
ljmp
xchg
dec
into
test
movsb
cli
scas
divb
inc
push
ds
pop
mov
jp
dec
jmp
mov
aas
xchg
aaa
sbb
dec
es
mov
jo
jle
dec
mov
mov
ss
enter
pop
rcr
jne
lret
xchg
pop
ret
inc
leave
push
mov
add
scas
cmp
out
dec
sub
shlb
jae
push
loope
aam
cmp
pop
cli
add
es
lods
js
popf
push
lret
test
jmp
pusha
mov
daa
cmc
or
sahf
mov
xor
push
cwtl
sbb
scas
sbb
add
jecxz
pop
enter
mov
movsl
inc
fdiv
popa
data16
mov
sub
out
add
inc
sbb
test
mov
jmp
testb
lock
and
in
cmc
pusha
sti
rep
push
add
pop
mov
pop
cmpsb
mov
xor
inc
xchg
xchg
testl
add
ror
in
sarb
movsb
movsb
sub
inc
jne
mov
hlt
adc
pop
pop
int
mov
adc
mov
mov
add
inc
sahf
imul
jge
push
push
add
repz
hlt
xchg
adcl
pop
jno
mov
idivb
cmc
cmp
mov
in
push
rcll
and
sbbb
test
lods
adc
iret
mov
pushf
std
cmp
sbb
dec
pop
xor
movsb
aam
add
fbstp
inc
cmp
adc
inc
loopne
or
in
mov
lods
mov
gs
push
les
or
movsl
dec
ljmp
mov
lods
addb
nop
dec
mov
test
cs
pop
adc
push
push
adc
mov
lea
xchg
inc
enter
cld
stos
lea
decb
js
insl
out
mov
test
push
pushl
mov
add
add
dec
js
xor
push
or
shll
add
shrl
jo
sub
insb
outsb
subl
or
xchg
pop
dec
hlt
std
int3
loopne
mov
pop
bound
jne
inc
ret
sub
cmpsl
lret
cmc
or
es
andb
arpl
mov
sub
hlt
inc
adc
jle
lcall
xchg
sub
xchg
sbb
scas
ljmp
sti
jmp
lret
test
dec
nop
add
add
loope
and
in
repnz
int3
gs
hlt
call
pusha
push
add
jnp
push
push
jl
nop
hlt
jge
scas
dec
or
jl
and
add
and
push
shl
ret
cld
imul
add
sbb
cmpsl
xchg
xor
aam
sub
and
cmp
andb
mov
cmp
or
pop
mov
es
and
mov
push
inc
cli
xor
lods
out
mov
push
mov
pop
jp
sub
fisubs
jle
and
sbb
add
stos
mov
aas
xchg
xor
adc
fs
jbe
jne
mov
cmp
pusha
mov
adc
jne
or
jg
into
dec
jg
lock
jmp
push
jbe
xchg
fmull
mov
dec
xor
les
push
test
cmp
fcmovb
ljmp
lods
mov
pop
adc
cmpsl
mov
loop
mov
pop
testb
notb
shll
in
lods
hlt
in
enter
scas
inc
mov
and
sarl
les
push
outsl
sub
imul
mov
aas
sub
jo
push
lea
xor
fisubrl
dec
sub
enter
mov
push
jns
push
push
lcall
outsl
push
inc
sub
clc
dec
sbb
mov
mov
pop
into
add
cmp
add
or
mov
mov
arpl
or
add
in
or
enter
cld
nop
out
push
es
das
jmp
xchg
mov
or
pop
adc
mov
or
or
rep
xchg
push
cmp
sti
push
and
pop
inc
jl
popf
lret
arpl
in
dec
popf
repz
add
xor
xor
ret
or
stc
push
jbe
mov
call
dec
jecxz
xchg
jno
mov
ret
aaa
sub
fmul
shll
addl
inc
pusha
jb
xor
hlt
cmp
js
mov
rcr
dec
pop
pushf
mov
or
xchg
sub
adc
jl
or
add
fsub
dec
sahf
orb
cltd
and
add
out
dec
mov
mov
scas
cmpsl
das
ret
cld
inc
bound
add
pop
xor
xchg
push
arpl
idiv
adc
jg
lea
cmp
mov
dec
sti
add
pop
dec
mov
mov
or
not
push
in
cmpsb
flds
gs
jmp
sub
hlt
rclb
mov
hlt
sbb
and
jae
testb
xchg
sub
addr16
movsl
sub
stos
fs
mov
fsubl
rcrb
sarb
pusha
fdivrp
loopne
fldl
cmpsl
iret
xchg
push
jns
sub
out
adc
sub
xchg
jmp
pop
or
das
jns
fisubrl
arpl
jge
sub
test
sbb
roll
sti
push
push
xchg
cltd
adc
sub
xor
mov
xor
out
fcompl
push
cmc
add
lods
stos
loop
push
flds
adcb
and
cmc
mov
sub
addb
xrelease
cmp
data16
lcall
xchg
add
add
fucomip
enter
add
loopne
cli
jno
lods
push
jg
dec
imul
rcrb
dec
ret
inc
loopne
fisttpl
hlt
pop
sbb
cli
jne
cs
out
mov
fistps
and
mov
std
shl
and
lods
xchg
arpl
daa
xchg
or
rorl
add
rclb
xchg
push
lea
loope
jnp
clc
lea
xchg
daa
xchg
cmpsl
clc
sbb
mov
cltd
pop
inc
imul
js
add
loopne
hlt
mov
add
ficoms
inc
jle
fs
or
mov
ds
mov
je
jl
lcall
arpl
das
imul
mov
mov
pusha
aas
push
not
mov
nop
mov
add
sub
imul
in
jmp
hlt
das
dec
pop
lds
dec
pusha
stc
adc
lods
clc
popa
xchg
pop
mov
lret
lock
inc
repnz
inc
dec
mov
test
hlt
and
xchg
or
xor
test
xor
hlt
bound
clc
add
addr16
push
shrb
jb
inc
ret
xchg
sahf
pushf
movsl
test
cs
lods
mov
dec
ds
fisttps
mov
enter
in
fstps
shll
push
sub
jle
jbe
add
or
test
and
nop
push
mov
sbb
push
or
xor
repnz
aaa
jecxz
cwtl
jne
add
push
pop
fcmovu
inc
cs
mov
sti
ja
or
jne
mov
xlat
add
and
lods
lock
int
push
mov
pop
clc
test
adc
push
pop
mov
pop
in
sbb
aad
enter
lret
xchg
lcall
sahf
in
sub
inc
scas
xor
mov
or
add
sarb
sti
adc
rorb
pop
das
jne
loope
mov
hlt
clc
rcr
xchg
xchg
jge
adc
mov
leave
xchg
inc
add
sbb
and
mov
xor
sahf
mov
xor
cs
fstps
call
pop
inc
mov
dec
add
xchg
pop
subl
xchg
hlt
fcoml
lods
jne
push
loopne
or
mov
sub
and
in
fstps
orb
int3
sbb
fdiv
add
mov
mov
mov
mov
nop
xor
mov
in
jg
popa
repz
sbb
mov
aas
dec
cltd
sbbl
sahf
fldcw
sbb
out
hlt
push
push
in
add
lahf
orb
and
or
inc
cwtl
xchg
loopne
and
sbb
push
incb
mov
ljmp
mov
or
imul
sbbl
roll
inc
js
cld
movsb
cli
push
pop
icebp
jnp
mov
mov
repnz
pop
mov
sub
addb
ret
addl
mov
push
addr16
inc
jne
jo
ret
vcvtdq2ps
push
rorb
das
jge
and
mov
pushf
sbb
fcmovne
fs
mov
add
pop
subl
mov
lods
mov
adc
out
add
rolb
fdivp
idivb
fsubrl
std
xor
xchg
out
iret
jg
leave
jns
fbld
rcl
sub
lea
icebp
mov
cmpsl
cltd
fmull
hlt
adc
sbb
sbb
arpl
cmpsl
leave
into
fwait
mull
mov
out
daa
rol
mov
fcoms
popa
jne
xor
repnz
loope
or
scas
jge
das
hlt
enter
out
jecxz
mov
xchg
xchg
test
xchg
stos
scas
push
lods
test
movsl
fxch
scas
imul
cmpsl
sbb
outsb
aam
mov
dec
and
test
xchg
xchg
mov
dec
loop
sbb
data16
test
jle
xor
frstor
js
pop
xchg
and
cmpl
inc
gs
adc
mov
ds
xchg
mov
xor
xchg
mov
mov
add
lock
jmp
adc
gs
push
add
hlt
mov
das
mov
xorb
insb
nopl
xchg
hlt
ret
add
cltd
test
mov
adc
mov
les
mov
xchg
faddl
sub
sbb
dec
add
pop
hlt
fwait
movsl
fidivs
stos
sahf
loop
add
xchg
inc
xchg
aad
dec
xor
js
dec
loopne
fcomip
or
dec
jns
add
ja
jno
in
jae
pop
add
popf
jne
int
xorb
mov
inc
fdivl
repz
mov
mov
mov
pop
fbstp
push
cmpsb
aam
gs
push
xchg
pop
popa
dec
pop
xchg
fistpl
daa
out
out
push
pop
or
xchg
enter
fsubp
cmp
pop
ret
cmp
inc
gs
jnp
or
push
movsb
or
mov
adc
push
rcll
pop
pusha
icebp
iret
mov
nop
lods
cmp
cs
notb
das
sub
xchg
inc
adc
test
sbb
add
fldl
outsl
scas
fsub
lret
dec
mov
out
and
mov
dec
add
cmp
mov
mov
push
or
jecxz
out
lcall
out
hlt
call
push
jno
repnz
push
loop
sub
lcall
mov
inc
pushf
mov
pusha
sbb
push
pop
popa
push
inc
adc
bound
cwtl
mov
aaa
fsubrl
fcoms
loopne
movsb
sub
int
jecxz
push
cmp
int
out
xor
mov
push
jbe
sub
cmp
ljmp
stos
lock
dec
daa
lods
push
addl
insb
lahf
jge
add
mov
sti
xchg
sub
lahf
xchg
inc
jne
mov
inc
outsl
xchg
fadds
cs
adc
pop
hlt
mov
hlt
adc
mov
dec
int3
cs
adc
xor
mov
or
mov
pop
add
fmull
rclb
add
pop
sahf
mov
addr16
inc
push
xchg
rclb
cmpl
movsl
mov
mov
stos
jb
ret
dec
jge
dec
cwtl
pop
hlt
es
jg
jnp
loope
imul
nop
and
xchg
mov
movsl
pop
push
jp
orl
adc
mov
rcrb
imul
out
mov
push
xchg
push
jo
cmp
pop
jo
nop
xlat
loopne
jge
jmp
sub
lock
inc
js
xor
into
mov
aad
scas
jno
jb
in
lds
pop
loop
test
mov
repnz
imulb
std
xchg
cmpsl
pushf
test
xor
xor
iret
movsl
test
outsb
adc
jns
adc
loop
jns
movsl
in
pop
gs
lcall
mov
push
fcompl
jne
push
rolb
jbe
push
push
mov
stos
pop
push
leave
xchg
pop
les
cltd
jo
cmc
mov
fistl
cwtl
je
mov
lods
mov
push
cmpsb
enter
lods
mov
scas
jae
pushf
sahf
les
int3
test
lods
pop
fsubrl
out
mov
out
fnstcw
hlt
jns
mov
popa
and
mov
add
enter
jmp
aad
mov
sub
inc
jmp
adc
mul
dec
enter
adcb
addb
inc
pop
push
repnz
cmpb
adc
test
mov
mov
jbe
xor
js
pop
test
fsubs
lods
dec
xor
imul
xchg
stc
mov
push
lock
pop
js
out
fldz
xor
fmul
add
mov
insb
mov
lea
popa
notb
and
outsb
loope
shll
mov
inc
in
dec
mov
ds
insl
int3
pop
movsb
hlt
sbb
lods
andb
bound
loop
aad
movsl
cwtl
xchg
iret
out
cmp
mov
mov
sbb
cmpsl
repnz
mov
es
add
imul
push
outsl
cs
add
and
inc
adc
imul
or
les
cmpsl
jne
add
mov
sub
xchg
fwait
stc
popa
stos
jne
jno
call
dec
pop
cltd
dec
sub
daa
xor
add
xchg
lret
inc
test
mov
and
xchg
pop
leave
test
jge
xchg
mov
adcb
nop
jne
insl
scas
add
cmpsl
xlat
test
mov
test
mull
call
mov
and
mov
jne
mov
movb
incl
stos
mov
xchg
call
loope
jne
push
clc
repnz
sub
xchg
xchg
xchg
or
cwtl
imul
jg
lods
xchg
add
sub
xchg
mov
mov
mov
lods
je
sub
ljmp
ljmp
mov
loope
adc
add
in
lret
dec
test
int
push
cmc
clc
fcmovb
inc
xor
xchg
scas
cmpsb
imul
jge
mov
inc
cmc
or
mov
jl
sub
in
enter
imul
sub
sub
push
inc
lds
movsb
stos
nop
movsl
jbe
cmpsl
hlt
push
xchg
scas
add
mov
dec
shr
lcall
push
dec
movsb
inc
xchg
mov
sbb
push
test
dec
adc
and
xorb
sub
jbe
in
sti
dec
pusha
inc
pop
movsb
mov
mov
dec
mov
dec
loop
andb
hlt
mov
add
dec
xchg
push
repz
adcb
and
pop
pop
mov
push
jnp
xchg
jnp
sbb
jbe
movsb
sbb
rorl
xor
jne
add
cs
pop
mov
sub
call
popf
add
hlt
xchg
dec
and
scas
ss
xchg
add
popa
cld
add
jne
xchg
or
insl
test
scas
add
in
pop
lods
es
sbb
jne
fildll
mov
pop
push
cmp
adc
test
fistps
movsl
loope
testb
mov
cmp
cwtl
push
xchg
sbb
add
mov
cmc
movb
mov
arpl
imul
sub
xorl
leave
cmp
cwtl
jno
cmp
jge
mov
shr
icebp
cmpsl
jbe
sub
pop
repz
xor
mov
roll
pop
insb
movl
sbb
push
ret
fimull
add
pop
data16
fldcw
jne
push
subl
and
inc
mov
xchg
push
test
lret
pushl
dec
das
mov
or
push
cmp
mov
shl
adc
mov
mov
fbld
lods
sub
repnz
jae
xchg
rclb
add
inc
fnsave
mov
lret
mov
mov
add
pop
lods
sbb
and
fcom
test
cmpsb
pop
mov
adc
lods
mov
mov
jmp
add
sti
cmpsl
push
test
mov
subl
mov
jne
in
loopne
xchg
adc
pushf
cli
pop
ss
lcall
pop
add
push
das
cmpsl
imul
aaa
hlt
jb
fcmovnu
lcall
les
mov
popa
sub
rcll
imul
dec
mov
aad
mov
int3
and
loopne
jns
je
mov
cmp
cld
pop
add
inc
mov
outsb
or
sub
pop
add
ss
out
add
ret
leave
fwait
adc
sub
push
mov
int3
mov
push
scas
cmpsb
mov
popa
pop
sub
and
or
inc
inc
xchg
dec
lock
mov
ja
sub
adc
sti
movb
jnp
jecxz
hlt
xchg
popf
shll
mov
icebp
orl
out
into
cmp
add
loope
movsb
mov
xor
dec
orl
addb
pop
jb
xchg
nop
cmp
jecxz
dec
movsb
cld
jne
cwtl
mov
lret
mov
out
adc
das
imul
fiadds
jb
stc
ja
add
push
dec
mov
and
imul
rep
test
sbb
dec
mov
icebp
sub
or
jnp
call
fisubl
xchg
enter
call
xor
jl
test
aam
mov
pushl
movsl
sbb
or
cmp
fsincos
cmpsb
insb
lret
mov
hlt
dec
cmpsl
addl
push
pop
lret
lea
mov
push
in
mov
inc
xor
cmpb
fsubrl
rorl
jmp
std
add
add
mov
jne
adc
pop
push
mov
jmp
frstor
scas
inc
loopne
stos
cmc
add
jne
les
inc
andl
adc
fwait
push
and
push
insb
pop
mov
lcall
cs
lret
call
cmp
sub
mov
cmp
ss
inc
testl
xchg
pop
add
cmp
mov
mov
cmp
sbb
sub
lock
xchg
or
mov
inc
into
inc
shll
out
xor
mov
jns
dec
inc
inc
int3
jg
mov
xor
test
push
lcall
mov
ljmp
adc
test
add
inc
imul
and
xor
lods
jg
movsl
push
jle
and
aaa
nop
or
insl
add
dec
roll
pop
mov
cmp
mov
mov
fs
leave
mov
clc
inc
jb
mov
xchg
xchg
jae
jae
outsl
scas
adc
sbb
call
call
mov
or
sbb
loop
lods
call
pop
fnstcw
pop
jbe
leave
inc
cmp
test
sbb
xchg
lock
sub
mov
push
mov
pop
pushf
xchg
xchg
shlb
cmc
sub
xchg
add
jbe
int3
popf
into
mov
push
mov
jns
pushf
mov
inc
mov
iret
ficomps
xchg
lds
push
nop
inc
hlt
sub
shll
add
popa
xor
push
adc
mov
stc
jge
in
push
fcomip
es
inc
pop
pusha
je
mov
popa
mov
and
sbb
mov
push
pop
hlt
icebp
dec
leave
and
call
or
enter
sbb
in
loop
dec
and
mov
adc
cli
das
lock
mov
outsl
lcall
mov
jnp
shlb
or
int3
fs
cmp
jmp
mov
fs
cltd
pusha
inc
out
sub
add
into
std
gs
sbb
test
leave
loope
fidivl
jmp
insb
mov
xchg
repz
shll
testl
xchg
stc
mov
pusha
insb
jnp
mov
dec
fiadds
cmp
les
sbbb
jge
add
xchg
dec
rcrb
dec
pop
jnp
cltd
mov
mov
pop
addl
add
xchg
jne
push
outsl
pop
xorb
dec
jb
mov
movsl
mov
ret
ljmp
adcl
test
adcb
add
dec
dec
pop
push
inc
inc
inc
js
test
and
dec
fstpl
and
dec
insb
sbb
mov
jbe
mov
fcoms
mov
sti
mov
orl
mov
mov
pop
sahf
and
push
adc
or
xor
clc
push
idivb
add
dec
dec
xorl
mov
test
mul
xchg
ret
add
out
test
jp
mov
ja
dec
jno
inc
xchg
hlt
cld
mov
and
jns
xor
pop
adc
mov
cmp
xchg
inc
sbb
or
xchg
jle
mov
scas
inc
dec
loop
push
jnp
das
stos
jg
xchg
stc
xchg
pop
mov
and
stc
stos
test
ret
mov
sub
sahf
scas
adc
inc
mov
test
push
cli
mov
add
mov
inc
inc
fmuls
pop
enter
cs
pop
adc
sbb
shrb
push
xor
outsl
leave
mov
push
add
cwtl
or
add
add
pop
test
mov
add
add
ror
sbb
xchg
xchg
dec
sub
iret
dec
and
lcall
add
aam
pusha
add
test
cmc
popf
data16
andb
sahf
sbb
movsb
out
pusha
jae
push
loope
in
cmp
fmuls
push
adc
ret
popa
fs
dec
outsl
xor
add
mov
data16
and
lods
lret
std
pop
cld
arpl
jmp
or
inc
ret
lahf
in
mov
xchg
sbb
cwtl
fucom
fs
push
jne
imul
ror
mov
jne
dec
imul
inc
movsb
push
sub
nop
cs
lea
es
test
aaa
pop
repz
fists
rcr
xor
inc
dec
xor
push
test
dec
enter
jbe
outsl
orb
xchg
cmp
adc
dec
add
lods
or
fbld
jecxz
sub
sbb
cmpsb
and
shlb
or
js
popf
das
mov
jno
in
jge
pushw
std
std
cld
push
pop
mov
dec
rorb
mov
adc
cmpsl
mov
aad
add
andl
mov
movsl
lret
test
inc
mov
fmull
lods
or
movsl
subb
shrl
daa
push
or
pushf
xor
stos
ss
mov
stc
jge
dec
pusha
icebp
sti
mov
scas
push
add
stos
pop
dec
add
andl
adc
fisttpll
and
sbb
add
es
addl
jae
loopne
pusha
outsb
jns
cmc
cmpsl
inc
pop
in
sbb
dec
inc
lcall
loope
out
dec
mov
sub
andb
or
jle
pop
cmpsl
rclb
mov
pop
or
and
mov
enter
stc
sub
sbb
pop
jnp
inc
cmp
std
hlt
or
jo
dec
inc
shll
test
mov
and
xchg
fwait
pop
or
mov
add
flds
out
jb
lahf
outsb
add
jp
scas
cmp
loop
cmp
shlb
cmp
xlat
insl
mov
out
pop
mov
das
push
repnz
and
push
inc
add
pop
out
mov
js
stos
xorb
cmp
xchg
or
fldt
mov
aaa
push
xchg
incl
mov
cmpsl
xor
pusha
fidivrs
push
cmp
hlt
or
adc
push
add
scas
mov
lds
or
cmc
leave
jle
and
add
jb
inc
xchg
mov
add
in
test
jp
add
lcall
add
adc
pop
mov
jmp
cmc
movsl
xor
icebp
mov
cs
adc
int
inc
test
push
aaa
mov
push
out
adc
mov
popa
es
mov
cmp
mov
inc
fnstcw
lcall
add
push
or
sbb
leave
imulb
mov
movsl
cmc
sub
out
sbb
fdiv
push
popa
clc
rcrl
fcmovb
inc
loopne
lds
loopne
cld
jp
std
or
jle
mov
cli
cmp
pop
inc
ds
in
jl
push
pop
jns
mov
icebp
sbb
dec
popf
fmuls
and
fs
dec
and
in
bound
hlt
repz
mov
mov
push
lds
push
and
jne
fwait
loopne
pop
fsts
adc
in
add
dec
test
fdivl
inc
pop
ret
dec
or
mov
xor
ljmp
iret
inc
mov
sbbb
movsl
jbe
flds
mov
mov
lret
nop
mov
push
push
mov
and
xchg
scas
push
jo
xchg
sbb
lahf
mov
andl
dec
fucomip
cmp
aaa
negb
mov
dec
mov
mov
xor
inc
mov
ret
fstpt
in
nop
inc
int
push
outsl
cltd
mov
inc
rorb
push
pop
pop
mov
cmpsl
pop
fldenv
hlt
jmp
rolb
xchg
mov
lock
stos
xchg
aad
call
lret
insb
sbb
mov
popf
xor
mov
push
shrb
in
jp
es
int3
sub
and
pop
iret
mov
pusha
xchg
jl
enter
test
push
movsb
mov
insl
pusha
popa
popa
sahf
pop
fldt
sub
dec
push
addb
aam
mov
pop
sub
nop
pop
add
movsl
lret
push
inc
mov
mov
xchg
jne
fildll
fidivs
sahf
inc
jno
jo
gs
push
shrb
ja
test
cmp
and
add
pushf
hlt
sub
add
popa
cpuid
stos
pop
out
ficoms
mov
push
push
mov
jns
adc
mov
in
mov
stos
xchg
mov
cmp
pop
ficoms
pushf
loopne
dec
and
adc
stos
repnz
pusha
add
gs
mov
push
das
xchg
push
xchg
jno
in
sub
lods
cmp
movsb
inc
jae
pop
add
cs
nop
mov
inc
je
or
sub
jecxz
xchg
or
mov
sbb
pop
mov
xchg
imull
testl
hlt
shlb
stos
fstpt
aad
mov
mov
jg
ljmp
mov
nop
mov
iret
mov
cli
add
add
fdivr
mov
ss
cmc
and
sub
mov
dec
in
sbb
rorl
cli
xor
xor
xchg
adc
mov
popa
inc
jne
insl
add
dec
pushf
pop
mov
mov
jne
xchg
cmpsl
pop
enter
enter
hlt
cmovnp
cmp
push
call
push
imul
fsubs
cmp
fisubrs
and
in
daa
stc
jo
arpl
mov
push
aas
mov
sbb
mov
sub
mov
iret
xor
outsl
mov
adc
inc
orl
xchg
cld
xor
bound
addr16
jg
pop
xchg
mov
cmpb
jbe
leave
xchg
in
xor
leave
loope
jp
or
fnsave
sub
stos
mov
add
lcall
int
es
inc
lahf
loopne
adc
cwtl
ret
loop
xchg
inc
mov
cmpsb
neg
pop
inc
push
repz
sti
imul
pop
es
jb
pop
sbb
or
hlt
mov
cmp
jl
mov
cld
outsl
mov
inc
adc
js
je
lahf
cmp
mov
addr16
sbb
jne
mov
add
sub
push
jns
nop
mov
mov
mov
or
or
mov
or
imul
jl
lock
repnz
gs
hlt
and
aam
loope
test
jne
or
and
les
mov
flds
das
lret
mov
arpl
imull
rolb
hlt
and
fidivrl
mov
jo
dec
popf
add
jns
pop
outsl
dec
adc
fxch
cmp
scas
mov
sbb
push
inc
jecxz
insb
movsl
xor
pushf
into
jo
xchg
jne
cmpsl
push
inc
test
gs
xchg
or
sub
mov
add
or
cmc
cwtl
or
dec
mov
rol
arpl
lods
inc
aam
jne
pusha
clc
mov
jecxz
loope
imul
hlt
shlb
roll
xchg
mov
jno
adc
dec
shll
and
pop
adc
pop
sti
cmp
enter
jne
into
adc
shll
out
sub
pop
pushf
jne
inc
mov
jne
stc
mov
ljmp
test
inc
lods
or
push
aad
xorl
or
stos
adc
out
test
mov
rcrl
mov
inc
ffreep
mov
or
int3
inc
test
xlat
xor
xor
nop
sbb
or
jbe
addl
add
nop
inc
xchg
pop
inc
cmc
pop
shl
stos
faddl
jae
push
pop
jle
pop
mov
cmp
std
xor
mov
pop
andl
jmp
adc
xor
push
and
mov
push
add
cs
mov
daa
and
sub
lcall
in
xlat
cmpsl
into
sub
xchg
xor
enter
aas
into
sub
fildl
hlt
pop
fisubl
stos
jnp
in
adc
and
xor
pop
or
inc
and
push
pop
mov
fs
sbb
into
cli
pop
ret
inc
repz
xchg
imul
shrb
xchg
loope
cs
jne
jecxz
sahf
js
xlat
popf
adc
mov
pop
sub
shl
push
sub
fdivs
insb
xlat
test
movsb
in
mov
ds
push
sbb
sub
mov
dec
shrl
icebp
jne
scas
imul
sti
lret
or
adc
das
iret
inc
jne
and
push
cmp
pop
shl
cmp
push
cmpsb
jb
mov
int
orl
jecxz
adc
inc
dec
std
or
les
mov
mov
fistps
cld
daa
ljmp
inc
jecxz
pushw
out
shl
std
and
mov
push
call
xor
out
mov
int
insb
pop
mov
jbe
and
xchg
xchg
or
fisttps
test
cwtl
addb
into
or
or
cmpsb
mov
out
xchg
and
cmc
enter
and
jg
clc
add
fwait
ss
lret
or
lods
es
leave
addb
dec
aam
add
jle
imull
mov
add
test
sub
mov
in
jne
stos
cmpb
inc
scas
dec
sub
movsb
push
or
test
fwait
or
enter
add
subb
jmp
fdivrs
arpl
xor
aaa
pop
and
xchg
int3
arpl
and
cld
xchg
sub
cmpsb
idivl
dec
inc
mov
jp
lret
gs
push
jge
shrl
add
hlt
push
xchg
xchg
sti
xor
shrb
cmpsl
into
xor
inc
adc
sbb
fstl
shlb
in
inc
mov
add
sub
out
mov
nop
imul
xchg
sahf
adc
pop
jno
in
add
inc
popf
jo
mov
icebp
mov
std
add
cmp
jne
pop
xchg
mov
xchg
and
cmc
or
xor
sbb
xor
rcl
out
inc
xchg
mov
push
inc
cmp
inc
push
lods
bound
hlt
pop
mov
hlt
addr16
xchg
fstps
rcll
nop
enter
jne
sub
out
mov
iret
cmp
cmp
mov
stc
orl
cmpsb
rolb
dec
add
xor
sub
arpl
imul
in
movsl
xchg
push
xchg
daa
popf
xor
lret
mov
ret
push
fisubrl
xchg
jl
xor
js
hlt
je
fprem
mov
repz
sub
xor
xor
lock
call
fistl
jg
sub
dec
dec
stos
push
xor
xchg
jno
sbbl
sub
xchg
xchg
xchg
div
mul
rorb
insl
pop
les
movsl
mov
sub
rclb
ljmp
push
jno
xchg
aas
loope
std
mov
inc
inc
push
or
jg
shlb
test
pusha
inc
repz
into
sbb
nop
in
and
xor
fistpl
cmpsl
push
cltd
int3
icebp
add
std
leave
sbb
pop
nop
adc
add
insb
leave
int3
imul
stc
or
lods
push
mov
xchg
jne
xbegin
fnstenv
xchg
lret
movsl
cmp
outsb
pop
stos
ret
aad
mov
gs
das
or
pop
add
inc
inc
movsl
es
xchg
and
jl
jge
pop
out
hlt
ljmp
jne
adc
add
mov
xlat
cmpsb
subl
outsl
or
iret
test
sub
enter
add
outsl
mov
and
pop
jge
test
cmp
mov
xchg
inc
xchg
jl
jne
adc
or
hlt
sbb
out
ja
xor
push
popf
jns
lahf
cwtl
les
push
in
stos
and
sbb
fidivrl
add
fimull
dec
pushl
mov
adc
add
mov
pop
jg
pop
adc
xchg
mov
mov
sub
cmp
xor
add
pop
rcll
and
push
xlat
lcall
dec
lods
mov
push
add
pop
iret
or
mov
xchg
lahf
gs
sbb
xchg
inc
lcall
mov
ret
push
scas
jbe
xor
lods
int3
lock
out
lds
out
leave
dec
xchg
shrb
inc
mov
pop
es
fwait
mov
test
cmpsl
mov
repnz
lret
adc
mov
and
leave
sti
jmp
inc
adc
hlt
cwtl
hlt
push
cs
rcrl
jne
fiadds
pop
out
cmpsl
pop
and
mov
pop
xor
pop
ret
cmp
mov
jns
addr16
andb
inc
divb
hlt
lods
ret
movsl
jge
ret
jbe
hlt
int
negl
es
mulb
push
inc
sub
sub
ret
xlat
shrl
hlt
push
imul
cli
cmpsl
mov
test
adc
sbb
dec
mov
jae
sbb
pusha
shrl
xor
rorl
dec
inc
jl
jno
add
add
insl
dec
xorl
lahf
cmc
icebp
popf
cmp
in
movsb
sbb
inc
dec
enter
mov
mov
cs
mov
xchg
mov
adc
lea
adc
sub
mov
test
cmpsl
loopne,pt
lcall
enter
sub
pop
push
pusha
sbbl
xchg
or
cmpb
arpl
dec
mov
fxtract
pop
xchg
out
pop
or
xor
add
cltd
test
inc
test
aaa
aad
incb
push
xchg
and
push
lahf
or
cwtl
outsl
inc
sub
aad
mov
hlt
jecxz
xchg
fisubrs
fisubl
cmp
inc
cmpb
mov
mov
les
scas
add
xor
stos
cld
mov
arpl
hlt
fucomip
rol
adc
jge
jne
xchg
insb
hlt
xchg
or
pop
adc
xor
inc
xor
add
adc
data16
lods
adc
adc
lock
mov
hlt
cltd
sti
lock
push
sub
mov
or
fbld
cmp
adc
into
out
sub
mov
cmp
mov
inc
imul
fstpl
and
js
in
inc
leave
xor
rolb
adc
push
adcb
adc
inc
mov
int
in
dec
sti
mov
adc
push
and
ret
les
mov
jnp
sbb
shll
add
mov
fadds
xchg
pop
xchg
nop
mov
loopne
hlt
lret
outsb
pusha
fidivrs
push
adc
and
dec
pop
rclb
lcall
xchg
leave
shll
or
pop
dec
shrl
je
dec
sbb
xchg
jbe
cmpl
push
clc
push
mov
mov
call
fbld
enter
fmuls
shl
pop
out
inc
sub
mov
add
jmp
popa
jbe
in
sbb
lock
bound
out
and
push
inc
and
sti
sub
xor
outsl
prefetch
pop
ljmp
scas
jno
mov
stc
mov
xor
je
hlt
lahf
sbb
mull
jmp
psubw
cmp
shl
jp
mov
xchg
dec
dec
inc
pop
std
inc
mov
cmc
stos
jmp
cmpb
push
ret
ljmp
test
dec
sti
cwtl
sbbl
test
aas
enter
pop
jge
add
cs
sub
ret
gs
stos
adc
hlt
and
push
adc
mov
mov
add
cld
loopne
xchg
pop
mov
lods
popf
repz
mov
pop
stc
jne
das
lret
lds
stos
jl
push
loope
addr16
addr16
jo
dec
cs
cmpb
adc
pop
mov
and
cmp
frstor
adc
test
ret
addl
inc
dec
aas
pop
mov
or
mov
fiaddl
jge
and
mov
test
inc
add
dec
sub
lret
add
popl
inc
filds
mov
inc
pop
andb
pushf
jo
ret
aam
int
add
push
mov
decl
inc
fwait
adc
dec
adc
mov
xchg
mov
leave
movsb
pop
mov
push
cli
sbb
push
in
fistps
inc
jne
out
mov
cmp
cmp
and
xchg
cmp
mov
adc
mov
xchg
pushf
xorb
negb
arpl
sbb
rorl
jecxz
fwait
lea
scas
dec
cld
dec
push
stc
inc
or
adc
shl
jg
cs
push
xor
jmp
mov
add
test
and
dec
xor
push
dec
repz
mov
add
add
lock
jo
mov
imul
stc
and
fcmovnbe
push
sub
cmp
scas
push
fstl
hlt
cwtl
adc
lods
mov
iret
cwtl
or
test
into
cwtl
add
and
jne
pop
xchg
sti
pop
mov
mov
inc
sbb
dec
jl
xchg
out
jnp
cmp
cld
cltd
sbb
dec
sbb
cmp
adc
cmp
jns
scas
jb
cli
sarb
push
mov
jnp
mov
xchg
and
icebp
dec
adc
movb
ss
icebp
cwtl
jle
add
mov
imul
dec
cmpsb
cmp
inc
ljmp
xor
test
cmp
cld
dec
add
hlt
mov
test
sbb
cmc
ret
test
mov
sbb
int3
into
lret
add
and
mov
xchg
rcr
adc
sub
lea
cltd
xchg
and
test
dec
sub
jns
sbb
dec
fmull
jl
jns
cwtl
xor
mov
incl
jbe
sahf
push
subl
jo
je
imul
sub
cmp
out
xchg
call
add
scas
and
les
inc
xchg
push
fistpll
inc
sbb
test
enter
push
adc
cmc
enter
jns
movsl
add
mov
lods
inc
aad
leave
adc
stos
xchg
cwtl
mov
das
mov
ret
cmc
rorl
nop
mov
hlt
xchg
cmp
cmc
repz
and
loop
adc
jnp
into
cld
and
dec
mov
cmpsb
inc
pushf
movsb
cmp
adc
mov
mov
adc
out
add
inc
mov
mov
jae
adc
sbbl
call
add
jp
sub
push
cmp
jb
pop
shlb
lret
jae
scas
jge
add
mov
xchg
mov
loopne
sub
repnz
xchg
dec
inc
cmpsl
jp
or
lret
insl
ljmp
jne
sub
aam
sbb
std
cli
cli
test
add
cmp
sar
aam
mov
test
jae
scas
fsubrl
fldt
mov
aaa
pop
imul
cld
rorb
mov
dec
int3
idivl
jne
ret
jo
stc
dec
add
and
hlt
inc
push
mov
stc
lea
fwait
movsb
or
xor
insb
repz
movsb
test
shll
mov
ja
inc
cmc
and
sbb
cmp
test
fsubl
add
jmp
mov
je
pop
jmp
add
xchg
std
inc
push
add
rcrb
add
sub
jle
enter
fwait
pusha
repz
popa
fimuls
push
jbe
aaa
insl
dec
adc
lret
mov
add
jo
leave
fiaddl
enter
xor
stos
movsl
adc
cltd
ror
jne
es
rol
adc
jmp
add
inc
mov
loope
push
into
fisttpll
jnp
and
push
add
test
aaa
fwait
jne
mov
inc
xchg
mov
data16
pop
loop
and
jo
add
xorl
cmpsb
push
pop
xchg
iret
pop
andb
out
dec
cltd
mov
push
cmp
rolb
mov
push
sbb
dec
mov
aad
addr16
mov
nop
jne
sbb
sub
inc
cmp
xchg
cmpsb
xchg
sub
scas
dec
jl
xchg
fcoms
shl
loope
fcmovu
inc
les
or
lret
add
aas
xorb
pop
or
jecxz
mov
out
lahf
pop
adc
insb
pop
add
jns
lret
lcall
push
push
jne
rcr
fwait
sub
push
pusha
pushf
stos
inc
addb
pushf
sub
fcoml
inc
fwait
jne
ds
pop
jmp
xchg
xchg
push
fbld
xchg
jmp
ds
fidivrs
lock
clc
sbb
rcrb
call
pop
add
scas
xchg
leave
xchg
mov
ds
mov
popf
ror
cmp
cltd
xchg
mov
mov
jbe
repnz
push
mull
inc
sub
inc
jbe
je
pop
pop
std
ret
lock
push
and
xchg
sbb
lods
popa
mov
outsl
ss
add
add
sub
inc
push
jne
jl
stc
mov
fcoml
test
jmp
mov
enter
push
mov
add
pop
xor
or
out
xchg
sub
int
movsb
into
xor
enter
loopne
sub
jge
ljmp
or
rcl
aad
flds
or
dec
jle
cmp
sbb
mov
shll
mov
mov
daa
or
lods
loope
or
sar
cld
jns
test
or
mov
inc
add
and
stc
cmpsb
adc
stc
sbb
cmpsb
mov
fidivrs
mov
in
pusha
lcall
test
stos
or
add
inc
dec
rolb
sub
sub
rcr
hlt
pop
lods
add
cmp
inc
add
in
adc
js
inc
pop
sub
push
xchg
ss
pusha
lret
dec
or
and
shl
lods
in
jnp
xchg
les
push
dec
inc
cmp
scas
int
jp
subl
in
stos
aad
cmp
les
dec
cmc
icebp
adc
into
pop
mov
and
iret
mov
call
fsubs
add
push
mov
data16
jge
push
das
pop
push
mov
nop
das
mov
mov
fs
cmp
jg
jge
es
sbb
mov
inc
push
adc
cmp
push
and
popf
mov
aaa
shlb
movsl
pop
loope
imul
pop
mov
mov
inc
je
sahf
daa
es
xor
imul
inc
sub
sbb
push
outsl
cltd
sbbb
movsb
and
mov
xchg
pushf
lret
addb
xchg
fsts
mov
mov
pop
cwtl
add
or
sbb
mov
lahf
clc
leave
xchg
sbb
add
repz
xor
sub
cld
pusha
addr16
xor
xchg
mov
jg
leave
jg
mov
lock
or
push
out
in
or
subb
jno
xrelease
push
cli
and
test
fs
pop
lea
push
mov
jge
inc
and
rcl
aad
xor
lret
xor
subb
dec
mov
fsts
divb
arpl
jg
pop
std
mov
adc
sub
lret
repz
movsl
dec
add
xor
test
loop
mov
dec
jecxz
popf
mov
push
insb
cwtl
mov
cmp
jbe
adc
mov
push
jmp
testl
incb
loopne
sub
sub
or
out
sub
jp
and
scas
movsl
mov
sub
ljmp
rolb
or
mov
adc
sti
cmp
or
push
or
in
mov
dec
test
xlat
sub
flds
inc
hlt
sbb
pop
dec
sbb
in
test
xor
outsl
out
in
sahf
jne
jbe
cwtl
iret
mov
jne
mov
cli
insl
and
cmpsb
flds
test
mov
mov
data16
mov
pop
jo
lock
outsl
cld
imul
inc
jb
xlat
push
jp
mov
xorb
dec
mov
sarb
lahf
int
mov
orb
cld
mov
jmp
add
sub
std
subl
lds
inc
sub
hlt
leave
mov
cmp
xor
out
and
pop
dec
add
movsb
loopne
mov
inc
jb
adc
pushf
cmp
or
xchg
hlt
jns
pusha
mov
xchg
mov
fisubrl
loope
mov
mov
hlt
mov
sbb
dec
out
adc
lods
mov
mov
jmp
cmp
mov
jmp
adc
std
jle
push
push
adc
cs
sti
and
xor
jno
rol
pop
push
xor
sbb
gs
inc
cltd
xchg
mov
add
hlt
lds
scas
push
xlat
xor
inc
push
and
popl
mov
sbb
das
pop
add
dec
xchg
pop
mov
nop
push
bound
add
sahf
jae
pusha
or
mov
fsubl
xlat
cmpsl
add
jno
mov
mov
test
jge
push
and
das
pop
mov
ljmp
dec
push
mov
ret
test
mov
nop
lea
hlt
jge
movsl
inc
xchg
dec
fs
dec
cld
jnp
imul
mov
mov
hlt
lods
push
movsl
test
cmp
ds
rcl
fdivrs
dec
jg
sub
push
jg
mov
jp
test
mov
cmp
loopne
pop
iret
xchg
lea
pop
jp
jmp
sub
adc
shrl
repz
and
add
and
mov
fs
mov
push
inc
and
inc
mov
and
push
ja
xor
ja
pop
add
inc
xchg
sti
sub
add
pop
lods
sbb
lods
jne
out
fwait
sbb
adc
std
cmc
mov
adc
arpl
mov
mov
jb
test
inc
popa
jne
sub
add
and
leave
loop
hlt
mov
cmpsl
ror
lods
sub
in
stos
fstl
out
jnp
scas
pop
mov
add
std
cmp
fistps
or
jno
dec
xchg
sub
loopne
or
mov
pop
mov
cmp
inc
sub
fdivrl
adc
ja
adc
dec
rolb
les
add
sbb
mov
enter
mov
jae
pop
push
ja
xchg
fldcw
dec
inc
adc
shl
addr16
push
mov
pop
std
jge,pt
push
dec
sub
clc
pop
add
xchg
insl
cmpsl
leave
pop
data16
adc
xchg
shl
fdiv
fsubs
repz
stc
pop
cld
mov
mov
inc
mov
sub
fsubrl
outsl
ret
inc
and
cwtl
lahf
leave
pop
lds
loop
orb
orb
fnsave
sarb
or
div
hlt
lahf
jg
pop
sub
adc
sub
mov
pop
mov
sub
int3
dec
test
ljmp
outsb
xor
mov
ds
cmp
mov
jns
lahf
xchg
stos
fstps
cmp
pop
push
sbb
stc
and
lret
rcr
xor
dec
and
jecxz
dec
push
mov
cmp
xchg
cld
into
adcb
stc
dec
inc
dec
cmc
test
lods
cltd
sbb
push
inc
scas
jae
cld
add
pop
pop
mov
movsl
loopne
sub
js
inc
jge
rorl
mov
adcl
push
ljmp
mov
cmp
daa
mov
fildll
loop
add
sub
dec
cmp
leave
push
add
pop
sub
sbb
cmp
add
mov
stc
xchg
jns
jb
sub
xor
out
push
cmpsl
xchg
mov
hlt
push
lds
jge
fldenv
dec
mov
ljmp
sub
xor
enter
xlat
movsb
sahf
add
lock
ss
mov
inc
xchg
dec
clc
dec
cltd
inc
mov
fdiv
ljmp
imul
lret
sub
adc
cmp
pusha
xchg
movsb
xchg
jne
jae
es
aaa
mov
lock
mov
loopne
xor
movsl
cmpsb
adc
shrb
aam
add
fs
inc
in
mov
jne
test
and
sub
jne
aad
into
sbb
daa
insl
addl
les
adc
rcll
loope
lea
cmp
push
adc
sub
adc
mov
jne
push
imul
lret
arpl
outsl
test
add
or
pop
mov
mov
and
mov
test
jnp
inc
ficoml
insl
fildll
ds
push
jnp
and
xor
or
mov
iret
out
bound
lods
pop
mov
pusha
mov
scas
ljmp
cmp
orl
pop
xor
lcall
cmp
clc
cmp
ror
add
loop
dec
add
mov
xor
mov
cwtl
xor
popf
jne
outsb
cs
push
mov
xchg
inc
ss
mov
hlt
movsl
adc
mov
adc
xlat
subb
jp
and
daa
lcall
pushf
fs
in
rcl
dec
jo
xchg
adc
cs
jl
xlat
insl
or
mov
int
adcl
mov
enter
mov
hlt
mov
inc
in
fmul
incl
fdivrs
or
sub
push
or
lock
hlt
lods
clc
call
mov
mov
push
cmp
push
fbstp
xchg
in
sbb
popa
jne
loopne
dec
test
loop
xor
pop
cmp
das
xor
daa
subb
pop
outsb
xchg
jnp
push
push
hlt
out
pop
sahf
jl
shlb
mov
add
imul
cmpsl
std
mull
sbb
jb
mov
cltd
sbbl
add
mov
xor
jge
xchg
mov
add
decl
jb
int
add
pop
cwtl
popf
sub
aam
jo
cmpsl
hlt
mov
sbb
clc
jne
frstor
scas
jle
add
repnz
dec
addr16
or
sahf
push
pop
test
ficoms
mov
xlat
cmp
int
iret
test
popa
xchg
stos
lea
xchg
cmp
test
lret
push
sbb
mov
clc
xorl
pop
push
adc
test
mov
sbb
bound
bound
adc
cwtl
mov
xchg
jne
or
push
jo
mov
jp
mov
fstpl
loope
jecxz
insl
fs
dec
test
mov
fidivs
cwtl
xchg
cld
dec
ror
or
dec
gs
adc
jne
call
jmp
in
lods
pop
push
sub
in
jmp
iret
sub
push
jp
inc
pop
jo
push
jl
call
filds
xchg
rclb
enter
lret
imul
pop
fisttpll
xchg
fcoms
jae
clc
push
enter
adc
call
sub
gs
sub
or
jnp
hlt
stc
aam
stos
nop
cmpsl
inc
push
shlb
and
xor
jmp
call
xor
lahf
sub
pop
fadds
mov
clc
mov
or
fisubrl
scas
add
or
jb
es
jne
ret
cltd
add
mov
mov
dec
xor
pop
scas
pop
and
and
sub
xor
fmuls
cmp
jle
movsl
xor
inc
out
pusha
mov
rclb
mov
dec
and
pop
xchg
into
cmp
add
jne
js
repnz
mov
lret
jne
fistps
xor
and
jne
or
pop
adc
sahf
out
shlb
pop
test
and
test
lcall
mov
adc
sarb
mov
push
add
and
gs
jl
mov
call
in
xor
scas
std
sub
fsts
push
add
add
dec
sahf
xchg
in
mov
data16
mov
xchg
lret
jne
lock
mov
lret
sbbb
daa
mov
jp
sub
in
xor
outsb
cwtl
or
movsl
cmp
mov
rolb
cmp
test
jle
jb
jns
xchg
cs
into
xor
dec
adc
inc
mov
and
scas
and
mov
add
test
es
adcb
loope
sahf
sub
dec
push
pop
inc
cmp
xchg
bound
cmp
dec
xchg
inc
pop
cmp
fbld
push
mov
mov
dec
cwtl
add
pop
cmpb
mov
das
adc
push
mov
nop
push
adc
cmovbe
cmpsb
xchg
ret
fidivrs
mov
sbb
xchg
negl
fidivrl
adc
push
clc
je
adcl
jbe,pn
nop
cltd
int
fcomi
lods
xchg
mov
sub
adc
cmpsl
jl
or
es
lock
pop
xchg
lret
insl
add
pop
fcmovnu
sub
pop
push
xchg
loopne
faddl
daa
dec
cli
sti
dec
inc
dec
lods
push
imul
pop
fidivs
mov
cmp
fcomps
jp
in
mov
psubsw
test
jnp
test
jbe
enter
out
jmp
fildll
ret
loop
outsl
imul
pop
cli
mov
jo
push
add
addl
add
cmpsb
fiaddl
lcall
jnp
std
sbb
sub
lar
add
sub
orb
xchg
pop
mov
cmp
add
jns
adc
stos
ds
pusha
jge
jmp
cmc
enter
lea
xor
xchg
jl
adc
lcall
dec
in
bound
cmp
enter
pop
stc
and
mov
mov
add
add
fcoms
add
scas
jns
popa
imul
in
adcl
sub
mov
testl
addb
push
sub
es
dec
mov
sbb
mov
fst
sub
adc
jae
push
outsb
add
adcl
dec
test
std
fs
shrb
lret
mov
push
movb
popa
push
je
movsl
cmc
mov
outsl
jb
mov
into
loope
cli
jne
lods
inc
add
mov
mov
loop
jge
add
and
or
sbb
std
lcall
insl
mov
nop
fld
mov
or
ffree
repz
jne
movsb
je
add
push
daa
add
mov
insl
add
sti
or
jp
add
int
out
fwait
jae
pop
notl
push
inc
xor
stos
outsb
adc
add
es
test
hlt
cmp
pushf
add
stos
fwait
sbb
mov
lock
cs
xchg
inc
mov
hlt
cmp
mov
mov
je
jmp
mov
push
mov
sbbl
cmc
mov
mov
add
loopne
aam
pop
mov
pop
fldl
mov
cmpsb
adcl
sbb
mov
dec
orl
jae
icebp
sub
cmp
cmp
inc
add
mov
and
andl
inc
cmpsb
push
adc
fidivrs
popa
je
lods
and
adc
aad
shl
stc
push
sub
cmp
andb
enter
jl
and
pop
jmp
and
cld
adc
mov
jl
ljmp
dec
fs
ss
fsubrl
cld
dec
mov
dec
mov
add
dec
mov
sbb
cmp
jnp
push
and
jl
popf
xor
jne
into
lcall
pusha
es
mov
mov
adc
in
mov
les
je
mov
andl
jmp
mov
clc
inc
lods
mov
sub
lods
stc
shll
test
fstpl
je
adc
jp
rclb
inc
mov
loop
fisttpll
mov
stos
into
enter
xchg
outsb
loope
mov
icebp
js
cltd
inc
xchg
test
mov
std
fcompl
add
xor
xchg
ljmp
lret
or
rcl
ret
jmp
sub
je
movsl
addl
scas
xchg
loope
mov
out
inc
loop
ret
ret
jle
add
test
out
les
mov
inc
or
jnp
movb
outsl
mov
pop
stos
xorb
add
dec
xor
sub
push
js
mov
stos
push
add
or
jle
pop
mov
sar
pop
in
jbe
scas
cli
lods
adc
fadds
mov
sbb
cmp
mov
mov
lds
fadd
repz
shlb
sbb
push
mov
adc
test
mov
mov
pop
add
ss
gs
sarl
cli
addb
mov
loopne
cmpl
pusha
loope,pt
jne
push
movsb
das
loop
lret
jne
jg
mov
pop
hlt
mov
in
inc
or
sub
xlat
xor
push
push
scas
mov
insb
adc
pushf
and
xchg
mov
xor
cmc
popl
or
movsb
xlat
loopne
mov
add
inc
dec
add
ret
sub
jge
andl
pop
rclb
dec
xor
adc
mov
or
pop
inc
lods
mov
das
and
movsl
cmc
cmp
and
xchg
sbb
lock
xchg
ljmp
jae
aam
add
imul
xlat
jne
cs
sub
push
cli
mov
xor
xchg
pop
mov
into
loope
pop
clc
insl
push
outsb
scas
add
shll
add
pop
aas
sub
jmp
faddl
jle
testb
xor
loop
ljmp
insb
icebp
jbe
mov
xchg
cli
ljmp
orb
cltd
shl
enter
sub
stos
sti
mov
pop
xor
mov
mov
jnp
stos
or
cmp
adc
ret
lods
mov
aas
mov
stc
fldcw
push
jg
in
mov
adc
enter
xor
sub
fbld
fstl
jmp
pop
inc
ffree
pop
cmp
leave
rolb
movsl
cmpsl
sub
sbb
fadds
push
mov
into
mov
fiaddl
insb
pop
push
inc
loopne
dec
popf
call
cli
fiaddl
out
int3
enter
iret
mov
iret
add
dec
xchg
jge
ret
pop
sub
fsub
inc
xchg
adc
add
inc
hlt
adc
sahf
sahf
lret
cmp
pop
dec
push
aaa
andb
or
cmp
in
incb
ret
mov
inc
jp
cmp
cli
int3
shll
jg
adc
sub
fadd
cmc
mov
mov
test
mov
cmp
lsl
into
sub
xchg
or
dec
nop
sub
pop
pop
imul
fcoml
scas
sub
inc
xchg
push
inc
cli
inc
xor
clc
pop
dec
sbb
push
mov
std
inc
fwait
xor
add
jb
mov
out
pop
sub
push
mov
arpl
mov
lock
leave
xchg
mov
and
jmp
mov
mov
cld
dec
inc
loope
int3
movsl
sub
mov
adc
add
clc
enter
scas
mov
cmc
arpl
mov
mov
adc
mov
mov
hlt
cmp
mov
jo
xchg
es
out
cmp
rorl
push
addb
mov
and
xchg
xor
xchg
iret
jmp
cmp
sub
aad
rorl
push
push
loope
int
and
push
and
addr16
into
mov
inc
xor
repnz
aaa
xchg
fs
inc
xchg
fidivrl
into
cli
dec
test
fsubs
adc
xchg
lds
fwait
add
xchg
sub
imul
dec
and
clc
lcall
inc
and
cmpsl
mov
push
ja
pop
clc
test
jmp
lock
jae
xchg
lods
cli
hlt
iret
sti
add
and
cmp
add
ja
sub
add
gs
fcoml
pop
inc
adc
leave
push
call
cmp
sub
out
jno
add
sahf
sbb
mov
lcall
pop
adc
shll
or
pop
les
fdivl
jmp
mov
push
and
addr16
lock
aam
cmp
out
das
mov
imul
icebp
mov
es
mov
add
ret
sbb
sub
call
lahf
outsl
jne
testl
cltd
sub
enter
scas
iret
sbb
into
rcll
pusha
mov
mov
fdivrl
push
and
fists
andl
inc
in
add
clc
pop
subb
fdivrs
dec
scas
mov
hlt
and
push
fwait
aas
mov
stc
fbstp
jnp
cmp
cmp
push
insl
rcrb
arpl
push
dec
rclb
jae
enter
mov
push
sbbl
les
jg
es
adc
dec
mov
gs
call
outsl
mov
mov
mov
mov
hlt
jg
sbb
dec
icebp
les
mov
mov
fdivr
int3
mov
dec
mov
xchg
hlt
sbb
fistps
sbb
loopne
mov
sbb
mov
pop
movsl
cmp
mov
cmp
imul
jl
mov
push
xor
or
push
lock
arpl
jbe
xchg
ret
mov
lods
push
mov
subb
sahf
negb
fbld
jmp
hlt
sub
jne
sti
cmp
push
cmp
imul
pushf
xchg
js
cmp
mov
fnstcw
pop
cmpb
bound
and
jp
jne
and
icebp
movsb
xchg
fwait
cmpsl
out
cmpsb
loope
dec
popa
decb
call
jno
ljmp
out
int3
inc
push
mov
push
data16
xor
leave
psubsb
mov
xchg
loop
arpl
jle
xchg
adc
sub
in
push
mov
adcl
xor
dec
cmp
cmp
scas
push
sub
call
xchg
dec
loope
mov
add
pop
pop
add
movsb
dec
and
pusha
stos
pop
and
add
and
and
cwtl
es
lods
pop
fs
js
rolb
xchg
and
add
call
addr16
and
add
outsl
xor
push
sbb
jno
mov
ds
pushf
mov
mov
arpl
mov
mov
xor
adc
sub
stc
add
inc
dec
xchg
lret
xchg
adc
mov
mov
adc
jno
and
jg
mov
inc
lcall
loop
scas
jle
cmp
fildll
clc
and
call
outsb
or
inc
in
fmull
jb
enter
shlb
xchg
aas
jecxz
pop
mov
push
and
push
push
cli
pop
mov
sarl
clc
clc
dec
lods
sub
shr
mov
cmpsb
scas
dec
or
mov
jecxz
cmp
cli
push
lods
jo
rolb
pop
xor
mov
mov
xchg
push
imul
or
inc
lret
arpl
inc
pop
jne
fbstp
sub
or
inc
fcmovnbe
dec
nop
in
fiaddl
cmp
adc
jnp
shrb
jge
repnz
xchg
xlat
jnp
ja
xchg
aas
dec
adcb
mov
push
into
mov
lret
clc
jne
cs
adc
pop
popa
inc
xorb
mov
fnstenv
mov
mov
sbb
push
ret
arpl
daa
dec
cli
or
mov
fldenv
sbb
test
xchg
test
push
cmpsb
jg
mov
xor
jbe
cmp
out
pop
add
test
ss
pcmpeqd
mov
and
and
cli
pop
arpl
xlat
dec
hlt
pushf
xchg
xor
xchg
sub
add
or
in
adc
mov
roll
or
cli
test
dec
sbb
cmpsb
das
enter
lods
sti
push
daa
push
scas
scas
mov
push
xchg
jl
imul
cmp
ljmp
call
sbb
dec
xchg
stc
cwtl
sahf
inc
xor
cmpb
or
fistpl
mov
rcrb
movsb
dec
xchg
sbb
xchg
pushf
inc
pusha
mov
stc
adc
pop
rolb
lea
or
sbb
adc
scas
rolb
lods
mov
repnz
inc
sub
mov
inc
dec
jl
sbb
lret
xor
iret
movsb
push
mov
cmpsb
mov
iret
jle
pusha
adc
int3
push
ret
pop
lods
mov
cmp
insl
or
sub
repnz
adc
hlt
imul
addb
ficomps
pop
and
push
insb
sbb
and
shl
mov
mov
cmc
gs
sub
iret
cmp
hlt
fistpl
xlat
sub
sahf
jne
fdivr
add
push
hlt
in
mov
rcll
movsb
jmp
pop
jl
out
shl
lods
jne
mov
scas
inc
ljmp
rcrb
add
pusha
lcall
dec
cli
add
lahf
lret
enter
mov
repnz
dec
loop
loope
inc
enter
sahf
push
cwtl
and
out
mov
ljmp
imul
add
adc
sbb
out
cmp
mov
xor
leave
repz
mov
in
mov
mov
inc
clc
mov
mov
mov
pop
xor
sbb
into
pusha
fmull
xorl
jno
jp
popf
push
sbb
push
pop
loope
sahf
mov
push
mov
xchg
sarb
scas
jp
mov
subb
mov
or
pop
dec
mov
and
subb
push
int3
mov
jbe
sbb
jl
jecxz
adc
aas
xchg
lods
mov
mov
loop
shlb
ss
lcall
mov
js
fcmovnb
xor
int
fmuls
ss
js
test
or
adc
push
fstpl
xorl
xor
std
das
mov
fisubs
cmpsb
nop
repz
cmpl
repz
ds
test
lea
mov
pop
inc
movsb
mov
push
pop
dec
dec
stc
mov
add
repz
pop
push
mov
addl
popa
mov
lret
sbb
jge
test
jmp
fidivrs
hlt
add
sub
aaa
testb
jg
mov
fs
sub
jp
popf
cmpsl
sti
mov
hlt
insl
les
lahf
and
xor
pusha
test
mov
int3
ror
jne
cs
enter
flds
jp
push
mov
jle
dec
xor
out
loopne
mov
jns
cwtl
xor
push
jp
jnp
lret
bound
gs
jb
and
sub
jg
shlb
lcall
dec
es
scas
outsl
add
sbb
add
rcrl
push
nop
mov
or
pusha
mov
push
fsubrl
ret
jmp
xchg
lret
sbb
into
shrl
sbb
dec
pop
cmc
gs
lret
jns
mov
sub
dec
push
pusha
dec
xchg
mov
push
or
jne
daa
std
sbb
adc
jno
lahf
xor
test
or
fcmovbe
sub
pop
inc
xlat
jne
imul
les
push
fisubrs
fmuls
subl
or
out
lret
xor
pop
and
nop
sub
xor
shlb
cmp
mov
sub
dec
adc
sbb
mov
add
ret
sub
add
xor
mov
in
aad
fcomps
movsl
pop
icebp
cmp
mov
push
mov
jne
pop
push
scas
outsb
addl
or
int3
shl
or
add
pop
dec
adc
mov
popf
shrb
loop,pt
xor
fsubrl
xchg
adcb
adc
dec
adc
hlt
subb
aam
jo
insb
mov
xchg
cli
and
push
cmpsb
mov
pop
mov
adcb
in
mov
hlt
mov
ret
mov
movsb
sti
imul
mov
dec
xchg
pop
pop
or
inc
push
outsl
mov
lods
adc
shrb
xor
push
push
lock
arpl
in
push
ffree
das
adc
add
ljmp
mov
into
cmp
adc
xor
sbb
icebp
movsl
into
faddl
jle
ret
jge
adc
jbe
sub
fwait
mov
lret
fmuls
flds
mov
sub
popa
jne
ret
and
hlt
jmp
pop
ds
add
aad
addl
gs
shl
rorb
in
jne
iret
incl
repz
sub
xchg
rcrb
nop
and
scas
cmpsb
lahf
adc
pop
push
mov
and
lret
xchg
jbe
mov
cmp
andl
std
jge
out
test
mov
xchg
push
mov
push
pop
out
push
fdivrp
and
shll
inc
call
mov
sbb
cld
dec
rolb
jl
pop
iret
sbb
mov
int3
test
pop
and
aam
push
sub
movsl
js
mov
add
mov
loopne
xorb
cwtl
cmp
jo,pt
jno
into
pop
addr16
fnstsw
add
fistpl
aad
mov
sbb
xchg
add
in
or
in
fdivr
mov
in
cmc
ljmp
rorb
pusha
sbb
jmp
lret
dec
and
inc
aam
hlt
ss
push
loop
test
xchg
sarl
mov
jb
cmpsb
mov
mov
sub
stos
fildl
sbb
jne
push
pop
call
xor
hlt
stos
rclb
loope
push
inc
lret
inc
inc
jl
push
es
orl
shlb
inc
or
pop
mulb
hlt
bound
xchg
jne
mov
ja
cmpsb
call
aas
xor
push
outsl
or
push
inc
testl
mov
push
pop
push
jae
nop
cmp
fiaddl
jne
cmp
push
mov
das
mov
inc
fldt
and
test
mov
sbb
jbe
dec
sub
push
pop
or
xchg
or
cmc
call
mov
push
jne
pop
lret
call
jg
gs
cmp
orb
out
and
cld
leave
icebp
enter
mov
repnz
das
fidivs
movsb
adcb
add
js
pop
ja
ljmp
mov
or
inc
test
mov
xor
ret
shrb
pop
mov
mov
pushf
int3
fsubrl
shll
scas
inc
rol
push
repnz
aam
bound
fstpt
fisttps
inc
sub
cmp
add
fs
inc
in
adc
shrl
jle
dec
jbe
loopne
add
ss
incb
es
mov
add
mul
xchg
sbb
lahf
jbe
dec
jmp
rcr
xchg
adc
test
mov
rclb
push
sahf
xchg
push
dec
iret
stc
inc
push
sub
mov
test
std
es
scas
cmp
aam
arpl
adc
mov
sub
mov
push
mov
inc
insl
mov
cmp
jne
jb
xor
stos
sbb
out
dec
mov
dec
mov
sbbb
cwtl
add
into
enter
and
pop
adc
fistpll
sbb
fstl
lock
pusha
aaa
mov
out
std
sbb
lea
lret
push
xchg
call
das
mov
std
imul
rorb
frstor
xchg
push
inc
sbb
out
mov
fadd
mov
movsl
xchg
adc
and
test
and
sti
call
lods
mov
test
mov
and
jle
out
aad
call
ds
fsubr
inc
in
jmp
lods
cmpsl
inc
test
iret
in
sahf
adc
dec
mov
sbb
sub
mov
es
and
sub
jp
pusha
pop
cs
loope
jle
imul
loop
fisubl
and
fstl
sub
nop
jne
insb
inc
add
cmp
inc
test
xchg
sbb
pop
mov
or
ljmp
aam
nop
es
push
loopne
add
cmp
scas
loop
out
scas
in
dec
les
jo
push
cmp
inc
sti
aad
sbb
inc
cmpsl
adc
xor
les
cwtl
loop
or
inc
out
xchg
movsb
ljmp
jge
mov
push
lcall
sar
les
adcl
mov
inc
rol
pop
push
pop
xchg
nop
insl
sub
sbb
sahf
push
mov
aad
or
mov
fcomps
imul
js
mov
inc
lret
stos
jne
jecxz
push
repz
into
mov
adc
xchg
inc
mov
daa
cmpsl
sarl
les
movsb
imul
mov
fstp
es
nop
sbb
popl
lcall
repz
or
mov
add
out
popf
jmp
lcall
push
mov
test
pop
and
les
fwait
add
xor
mov
fstl
mov
pop
sub
inc
mov
xchg
hlt
cmp
loope
mov
movsb
jle
xor
lods
dec
xor
std
icebp
sub
adc
int3
jmp
jmp
outsl
sbb
arpl
in
and
add
aas
cltd
aam
push
negb
xor
xor
add
lret
lods
inc
or
add
movsb
mov
mov
or
mov
subl
mov
push
xor
mov
mov
xchg
retw
adc
mov
mov
pop
repz
hlt
shll
cmp
in
test
sub
movsl
and
jg
repz
push
cld
cwtl
sub
sbbl
pushf
inc
xchg
adc
les
test
hlt
xchg
xchg
mov
dec
pop
movsb
sbbl
mov
xchg
mov
leave
add
push
pop
sub
adc
cld
stos
mov
hlt
lahf
dec
add
inc
mov
ficoml
dec
pop
mov
cwtl
pop
gs
imul
div
fimuls
jl
mov
and
cmp
jo
pop
jecxz
cli
fisubs
xor
inc
inc
add
adc
xchg
adc
out
add
aad
ss
add
push
das
cmp
and
das
stc
jecxz
xchg
jp
xchg
fsts
insb
mov
or
bound
lahf
jne
dec
and
hlt
popa
cmc
fs
sub
enter
add
and
nop
or
and
xor
mov
mov
mov
mov
jle
xor
inc
nop
fmull
arpl
push
cltd
lods
mov
nop
and
xor
pop
scas
lret
js
add
mov
push
scas
mov
mov
push
xchg
push
sub
or
sbb
out
icebp
push
sarl
or
je
xchg
fbld
out
xchg
test
jne
xchg
cld
out
and
jecxz
loop
xchg
loop
pusha
and
mov
cmpsl
cmp
outsl
push
sbb
test
mov
pop
bound
cmp
sub
rorb
sub
iret
push
and
adc
loop
mov
dec
pop
mov
push
stos
cmpsb
out
test
les
fisttpll
mov
mov
and
sbb
aas
cld
addr16
mov
mov
xor
shll
into
pusha
out
dec
sub
sub
pop
test
fdivrs
mov
inc
sub
jg
repnz
sub
xchg
cwtl
aam
jmp
std
dec
mov
sub
rorl
jecxz
add
inc
jne
xchg
add
addb
mov
pop
dec
dec
pop
fcmovnb
inc
and
jne
daa
test
push
push
icebp
xchg
push
and
mov
cs
mov
dec
mov
jne
xor
cs
mov
jg
test
push
inc
push
addl
xorl
lods
loop
fdivl
bound
pop
shr
stos
fists
jmp
fldl
jnp
pop
loop
sbb
pop
sub
mov
mov
dec
push
fnstcw
mov
scas
adcl
loop
ja
adc
push
cmp
in
push
mov
inc
sbb
shll
scas
ljmp
dec
int
roll
mov
cmp
push
push
adc
imul
cwtl
addb
pop
push
jne
push
push
sbb
xchg
jl
or
jne
jg
hlt
loop
dec
cli
jo
cwtl
sub
adc
test
or
cltd
add
ret
sub
les
movsl
and
mov
hlt
fbld
mov
sub
mov
dec
in
pop
loope
jge
js
cmp
sub
test
and
mov
popa
and
jne
cmpsb
push
push
pushf
jne
rorb
aaa
push
inc
xor
popa
aaa
push
jno,pt
xchg
fisubrs
fists
imul
cmp
bound
add
dec
mov
cltd
fiadds
mov
pop
cmpb
or
int3
push
pop
enter
dec
mov
xor
addl
sub
mov
leave
std
push
leave
nop
test
jl
mov
pop
xchg
add
mov
into
adc
fstl
jl
gs
addr16
aam
inc
fldl2t
inc
xchg
hlt
sbb
mov
int
jb
aad
jbe
test
das
std
das
stos
hlt
mov
xor
and
xchg
imul
and
mov
mov
mov
std
stc
shll
dec
xchg
push
add
jne
pop
cmp
movsb
sbb
clc
and
sbb
gs
xchg
sbb
fldenv
mov
xor
jne
pushf
call
sub
jle
jge
leave
addr16
pop
cmpsb
add
sbb
mov
and
out
sbb
cmpl
jecxz
fsubrs
inc
pop
scas
push
ss
sub
lods
inc
hlt
lds
jle
lds
adc
enter
jle
frstor
add
jg
push
xlat
fisttpl
mov
les
dec
repnz
mov
loopne
inc
xchg
mov
fmul
jmp
pop
mov
scas
jle
repz
out
mov
repnz
pop
pop
dec
enter
in
popa
mov
sti
mov
shll
mov
int
mov
xlat
cmp
popa
sti
clc
jne
int3
lret
sarb
les
jg
sub
aas
add
out
pusha
rorb
fs
popf
push
outsl
rep
or
cmp
loopne
pop
mov
mov
clc
sbb
xor
sub
dec
loop
addl
scas
mov
in
ret
add
in
or
push
loope
push
xlat
mov
adc
lea
outsl
and
mov
out
mov
cmc
popa
cltd
xchg
and
jne
adc
cmp
mov
add
outsl
je
mov
sbb
js
imul
test
mov
sub
or
fldcw
xchg
xlat
fsubl
jo
xchg
fiadds
mov
inc
pop
or
xor
pop
jle
inc
push
clc
into
add
push
mov
js
lcall
push
xchg
sub
jns
pusha
xorb
loope
ds
call
inc
inc
adc
sub
hlt
mov
mov
ljmp
jg
stos
das
fnstenv
test
mov
xchg
ja
mov
lds
push
lock
inc
imul
xor
fcomp
dec
ds
and
cwtl
mov
dec
movsl
push
xchg
in
stos
out
jle
push
and
repz
mov
ja
push
inc
push
leave
imulb
add
cmp
cld
adc
cmp
iret
ret
scas
push
lea
xor
cmpsb
test
bts
lods
fsts
mov
xchg
jne
inc
jg
out
ret
out
mov
pop
nop
push
imul
stos
out
dec
push
add
jecxz
mov
push
push
jbe
adc
fildl
jge
cmpsl
or
mov
inc
les
lods
jns
mov
popa
jp
xor
cmp
or
hlt
out
fsubl
test
bound
adc
cmpl
adc
cmp
mov
leave
out
popa
sub
inc
sbb
ljmp
outsl
nop
fcmovnu
mov
adc
mov
pop
stos
movsl
into
xlat
sbb
fiaddl
sar
or
sub
lcall
stos
lds
cmc
mov
popa
mov
dec
popa
inc
filds
or
inc
mov
out
fcoms
adcl
test
push
enter
pop
incb
and
inc
inc
aam
fmulp
cli
pop
loopne
dec
sub
hlt
xchg
mov
nop
or
jp
in
inc
mov
andl
ret
sahf
out
les
add
cs
movsb
aad
outsl
push
rorb
inc
jae
pop
addb
push
rolb
lock
stos
push
js
sub
jnp
or
enter
test
and
dec
push
lea
adc
xchg
add
fmul
fwait
sbb
jle
xchg
pop
push
incb
addl
out
into
shrl
cmpsl
cmc
lods
test
stos
jbe
xchg
popf
lcall
xchg
mov
jne
aad
mov
xchg
hlt
cs
hlt
xchg
lods
jg
lret
adc
pop
jae
lret
bound
shll
jnp
push
test
xor
xchg
dec
loop
loopne
hlt
decl
add
nop
testb
inc
sub
mov
hlt
popf
dec
shrl
adc
in
inc
fiaddl
loop
push
pop
outsl
cmp
shll
and
sub
mov
xor
push
addb
ret
lret
inc
push
gs
shrb
dec
mov
lods
inc
inc
cmp
sbb
jmp
push
hlt
test
jg
mov
shrl
andl
mov
arpl
aad
popf
fisttpll
js
push
lret
cld
xchg
shlb
enter
mov
pop
xorb
pusha
or
or
add
mov
inc
or
xchg
add
out
xchg
lret
pop
adc
dec
mov
test
jecxz
loope
sub
inc
in
and
filds
popf
sub
mov
scas
shrb
fildl
nop
jne
sbb
loope
test
fcompl
cmpsb
lret
sub
in
fnsave
pop
mov
in
jle
aad
int
in
and
mov
jmp
adc
mov
jmp
pop
jge
test
fimuls
fildl
dec
inc
sti
daa
or
inc
cwtl
adc
enter
cwtl
sbb
loop
mov
lods
mov
insl
cltd
pop
jnp
and
fmuls
jle
sti
insb
inc
int
shl
bound
sbb
cli
faddl
cmp
cmp
inc
dec
bound
pop
mov
imul
lea
decb
push
int3
xlat
inc
ret
cmp
dec
pop
push
insl
cwtl
cmp
dec
push
xorb
clc
arpl
cmpsb
dec
push
ja
cli
xchg
cmp
fadd
lret
popa
mov
js
lcall
sub
sbb
push
mov
gs
bound
ljmp
ret
pop
mov
sbbb
inc
adc
ret
dec
cmc
cwtl
scas
add
add
fimuls
mov
sbb
cmp
loope
jne
test
cmp
insl
cmp
cmp
les
lock
test
add
jno
les
jne
aam
adc
mov
imul
popf
mov
sub
sbb
cmc
push
hlt
pop
fsubr
dec
loope
das
mov
rcr
add
hlt
mov
test
movsl
or
jl
pusha
les
aad
adc
fsubs
lds
mov
xchg
and
jns
add
mov
mov
cli
add
scas
or
and
stc
scas
add
fdivr
pop
ss
push
ja
adc
inc
xchg
xchg
or
in
outsb
loopne
mov
pusha
ljmp
add
in
lret
xchg
push
aas
cmpsl
pop
fucom
clc
test
fwait
div
incb
in
leave
xlat
repz
inc
add
leave
aaa
sti
pop
lea
jbe
cmp
xor
add
scas
aam
mov
insl
dec
mov
mov
push
ds
mov
stc
in
filds
rcll
push
and
jnp
ret
jns
push
xchg
dec
divb
jne
mov
out
sti
cs
fdivl
lcall
fbld
cmpsb
jle
lea
hlt
or
mov
imul
test
pop
int3
xchg
cld
and
leave
test
xchg
inc
mov
jp
cmpsl
adc
or
push
push
xor
pop
jmp
xchg
add
mov
cmp
or
es
adc
xchg
pop
cmc
dec
bound
pop
inc
mov
lcall
rcrb
jecxz
mov
inc
lods
push
test
cwtl
adc
outsl
fdivl
xor
sti
push
mov
testl
push
cmpsl
cli
outsb
sub
outsl
cmp
das
lods
sbb
xor
je
jnp
lret
ret
jmp
add
leave
and
xorl
jl
test
pop
xor
test
gs
mov
ss
dec
mov
hlt
adc
frstor
xchg
fmull
xor
and
dec
cmp
cmp
fdivl
jne
les
test
push
mov
nop
cld
roll
sbb
call
or
fdiv
rorl
and
xor
popa
push
mov
cmp
test
mov
xchg
cld
shr
inc
sub
pushf
mov
lods
inc
jg
lahf
xchg
cwtl
stc
pop
or
pop
cmp
popf
ret
rcrl
daa
loope
inc
or
jmp
out
push
in
or
repz
jne
pop
xchg
test
add
fwait
loopne
test
frstor
dec
xchg
cwtl
inc
mov
inc
cmp
and
mov
xor
pusha
addl
adc
cmp
adc
dec
mov
xor
jl
out
mov
adc
mov
repz
repz
cmp
mov
push
scas
aad
fdivrp
mov
xchg
mov
insl
push
fcoml
xor
inc
xlat
and
jne
mov
pop
cwtl
cwtl
mov
lret
push
xor
push
scas
ljmp
mov
call
test
imul
popf
add
rcl
add
pop
out
addl
orl
lcall
xor
jo
add
xchg
popa
inc
movl
mov
push
jae
adc
movsb
lods
ret
loope
out
sub
inc
add
fndisi(8087
sbb
inc
js
sbb
pop
pop
incb
push
dec
imul
andl
hlt
outsl
pop
lods
pop
push
fbstp
aas
rcr
outsl
sub
add
inc
les
sarl
push
aad
add
xchg
xor
ds
xchg
loopne
cmp
jns
into
add
ret
xchg
ret
les
shrd
xor
sti
add
jle
test
pop
or
mov
xor
or
dec
jnp
das
xor
popa
jne
push
mov
shlb
je
jnp
jmp
in
shrl
push
push
inc
mov
hlt
mov
std
enter
in
push
sbb
inc
dec
lahf
insb
jno
test
sahf
in
pop
or
add
imulb
ja
and
add
and
dec
rcrb
movsb
into
cmp
addb
pop
pop
mov
mov
sbb
mov
jp
lds
jecxz
cld
jbe
arpl
inc
shrl
adc
movsb
jne
in
cld
inc
js
imul
fistpl
test
enter
test
mov
inc
es
popa
leave
xchg
or
mov
mov
hlt
add
fsubs
and
cld
push
insb
dec
push
xchg
pop
dec
cmp
loope
lods
in
pop
call
std
clc
fincstp
dec
sub
int3
add
push
aam
mov
fs
mov
pop
ror
mov
add
stos
in
icebp
pop
loopne
cmpsl
xor
adc
mov
jne
adc
mov
dec
stos
mov
repz
mov
pop
fists
inc
out
dec
scas
mov
cmpsb
filds
lahf
cwtl
jns
jne
sub
xor
jne
mov
outsl
add
and
mov
push
roll
mov
dec
xor
lds
jge
dec
cmp
jno
cmp
xchg
test
inc
lock
mov
inc
add
sti
mov
xchg
and
pop
jne
repnz
adc
sahf
mov
hlt
sbb
xchg
leave
pop
xor
fisubrl
test
sub
lea
lret
push
sti
add
jne
mov
xchg
cvtps2pd
xchg
adc
rclb
stc
roll
cltd
dec
cwtl
aas
push
mov
fidivl
outsl
mov
push
std
movsl
ror
clc
scas
mov
imul
or
push
int3
nop
sub
divl
or
fwait
cld
pop
jb
repz
hlt
fadds
addl
pop
cmp
jmp
adc
inc
lock
vpsrlw
insl
mov
pop
call
push
movsl
popf
push
dec
cmp
push
scas
mov
sbb
mov
pop
std
fldcw
clc
int3
fs
and
sahf
xchg
lcall
jbe
mov
leave
aad
and
cli
pop
mov
fildl
cmpsl
lods
aaa
scas
loope
test
ret
into
jo
push
fiaddl
add
jb
stc
push
pop
lcall
rdmsr
or
imul
xor
cwtd
push
test
mov
mov
mov
sahf
enter
mov
and
pop
xchg
xchg
xrelease
bound
xchg
mov
add
hlt
out
out
pop
xchg
sub
adc
call
jge
add
mov
ljmp
std
pop
jno
lret
adc
jb
add
sub
pop
xor
aas
pop
jmp
xor
xor
lods
enter
sbb
test
out
and
sti
insb
or
enter
in
rorl
jbe
adc
dec
bound
mov
fdivl
mov
xchg
mov
pop
sub
shlb
or
inc
dec
or
cld
xor
mov
repz
fst
pop
sub
adcb
lock
jg
shr
cmp
sub
mov
push
xchg
sti
ss
mov
gs
data16
das
jne
xchg
mov
adc
mov
adc
insb
enter
xor
std
loopne
mov
or
inc
push
jno
mov
xchg
dec
rcrb
sar
ljmp
cwtl
mov
mov
xlat
loopne
popa
mov
xor
lock
pop
cmp
cmp
inc
add
das
mov
dec
mov
push
pop
test
dec
inc
mov
aam
and
mov
pop
lock
pop
fstl
ss
mov
pop
sub
lea
adc
jno
mov
jns
lock
fstpl
or
out
inc
and
xchg
jb
outsb
lock
pusha
sub
adc
sub
jo
cmp
adc
add
pusha
dec
cmp
or
jo
mov
sub
jmp
mov
bnd
inc
stos
jecxz
dec
xchg
movsb
test
jmp
adc
jg
dec
sub
mov
pop
scas
iret
xchg
sub
cmp
dec
xchg
pusha
in
sti
mov
mov
aam
fisubl
test
lret
or
addb
inc
popf
hlt
in
clc
push
decb
adc
push
jne
cmp
popl
lea
lds
sbb
inc
jmp
mov
jne
es
cmp
pop
sbb
xchg
jb
aam
orb
pusha
out
adc
mov
add
pusha
xchg
scas
or
inc
push
rcl
cmp
add
leave
and
arpl
and
sahf
xchg
popa
xor
jne
cmc
or
adc
jle
xchg
rorl
sahf
out
andl
iret
inc
hlt
vpaddw
into
aas
mov
aaa
das
add
stos
cld
push
test
fildll
adc
insb
sbb
mov
pop
js
dec
sub
xchg
sbb
enter
pushf
dec
rcrl
adc
pop
dec
js
dec
inc
adc
dec
adc
addr16
adcl
out
loope
xchg
cld
data16
scas
dec
mov
sahf
pushf
stc
add
push
int
cwtl
ror
push
mov
and
je
mov
shll
jmp
adc
ljmp
pushf
jo
dec
sarl
jnp
lret
dec
out
pop
test
or
pop
and
out
cmpsl
jg
dec
and
jecxz
mov
inc
bound
add
loope
jne
and
lret
fsubr
subb
cmp
cmp
jnp
pop
jmp
mov
test
xchg
movsl
push
push
sub
loope
jmp
out
adc
mov
sub
dec
sub
test
xchg
shrl
int
sbb
ds
imul
lds
adc
nop
les
xor
mov
ds
sar
adc
aaa
sbb
loopne
fs
int3
sub
das
push
mov
mov
shrl
jo
popa
loope
fadd
ja
push
repz
mov
data16
mov
cli
cs
and
pop
mov
adc
sub
xchg
push
data16
jecxz
sahf
clc
pop
das
fistl
dec
test
dec
adc
imul
shlb
add
xchg
gs
call
shl
adc
or
mov
or
ret
leave
dec
nop
push
xor
sub
lahf
mov
fcmovnu
push
push
mov
or
test
enter
add
mov
lds
dec
xchg
loopne
cmp
jp
sub
and
mov
cmp
pushf
adc
jns
pushf
out
dec
pusha
jmp
movsl
add
xor
dec
jne
mov
int3
pop
les
mov
adc
scas
add
lock
and
ja
push
add
cmp
inc
subl
lcall
cmpsb
mov
pmuludq
add
hlt
jb
ljmp
jmp
cs
and
les
and
mov
adc
xor
mov
pop
inc
jns
daa
insb
inc
inc
push
mov
sbb
dec
sub
addb
mov
mov
int
gs
test
fdecstp
and
popf
ret
out
or
cmc
xchg
add
stos
adc
sub
jbe
js
lock
les
inc
push
dec
push
dec
aas
mov
sub
idivl
scas
in
rcr
stos
test
addb
jle
enter
sub
pop
jp
adc
push
hlt
popf
sbb
sub
and
repnz
xor
pop
cmp
lods
dec
sbb
test
jae
ljmp
test
or
cmpsb
add
out
sub
push
sti
mov
sub
jb
xchg
mov
inc
ret
out
cmc
in
enter
sbb
pusha
movsb
sub
into
jle
mov
jp
add
and
idiv
dec
push
mov
xchg
mov
outsb
out
cwtl
jbe
loopne
or
hlt
sbb
jge
cmpsb
dec
fcoml
mov
incl
out
cmp
pop
dec
xchg
in
cmpsl
mov
mov
aam
or
push
xchg
gs
hlt
cld
inc
mov
mov
dec
cmpsb
outsb
dec
jg
cmc
cmpl
es
enter
mov
dec
insb
aam
movb
xchg
popf
dec
mov
mov
and
test
int3
enter
ret
jb
cmp
imul
push
fildl
mov
incl
sar
pop
cmpsl
mull
mov
mov
into
lods
enter
mov
xchg
mov
sbb
test
fmul
inc
ljmp
pop
sbb
push
xchg
adc
ret
jge
shrl
add
push
iret
dec
mov
call
pop
mov
enter
adc
pop
std
ljmp
loop
sbb
fs
into
jae
in
mov
sbb
int
outsl
jbe
push
lods
mov
mov
xor
imul
nop
xor
add
cmpsb
lret
push
dec
enter
jle
aas
xchg
lea
fs
mov
or
pusha
adc
movsl
and
add
in
roll
addb
cmpb
fsub
xlat
xor
jge
loop
vpaddusw
ds
lods
mov
add
bound
mov
shlb
mov
fmuls
enter
rolb
andl
add
push
adc
imul
sbb
fnstenv
add
and
xor
inc
jg
negl
dec
lods
pop
cwtl
inc
aad
test
mov
inc
inc
shrb
mov
mov
sbb
push
sub
mov
test
cmpsb
aam
mov
sbb
jne
pop
xor
rcr
aas
in
adc
enter
test
ret
ja
push
andl
and
cmp
mov
push
in
cmp
insl
rorb
inc
jp
movsb
or
lods
rcr
adc
data16
clc
add
xchg
aad
sub
cs
in
bound
push
jl
mov
push
pop
mov
or
lret
mov
fdivrl
jbe
les
xchg
add
push
pop
jl
pop
loope
and
or
lret
cmp
xchg
rorb
in
aad
add
ljmp
pop
sub
push
mov
jns
gs
sbb
add
rcll
int3
push
loopne
cmp
call
add
mov
lcall
movsl
sarl
mov
scas
adc
xchg
hlt
mov
std
je
movsb
fildl
mov
pop
int3
push
push
cmc
repz
into
enter
add
or
icebp
cmp
xor
scas
cmc
mov
add
enter
lahf
mov
cmpsb
or
repnz
push
nop
mov
xor
ret
insl
and
das
sub
cld
imull
iret
adc
scas
jne
dec
cmp
cwtl
popf
test
push
mov
xor
dec
mov
mov
cmpsl
push
in
aad
in
fsubl
cmp
in
mov
xchg
dec
arpl
jle
icebp
shlb
sbbl
stc
mov
data16
push
loope
xchg
adc
add
mov
jnp
fdivs
out
nop
enter
lea
andb
mov
cmp
pop
mov
mov
outsb
fildl
adc
mulb
mov
outsl
cmp
dec
aad
andb
negb
jg
mov
adc
push
std
cld
pop
sbb
fcmovbe
add
fists
sub
dec
leave
jge
mov
sub
mov
or
fildl
sub
addl
inc
mov
jmp
fucom
lret
mov
js
xor
jbe
scas
add
jg
add
jo
xchg
test
movsb
jge
clc
jle
hlt
enter
add
shll
les
cmp
mov
lret
hlt
fs
mov
inc
add
hlt
jnp
inc
notl
sbb
andb
in
psadbw
adc
push
inc
inc
adc
push
and
add
mov
jge
add
dec
movsl
call
adc
sub
cmc
aas
mov
dec
jnp
test
sub
loop
mov
cmp
mov
jg
mov
jb
jmp
lcall
cltd
mov
loop
test
scas
shlb
mov
mov
pushf
add
xor
out
push
add
sub
mov
std
les
cwtl
mov
testl
xor
inc
test
xor
jge
or
ljmp
mov
push
scas
loopne
and
mov
enter
dec
lcall
dec
cmp
add
pop
or
shll
jne
pop
insl
test
and
xchg
filds
sti
fnstcw
popf
cltd
imul
mov
xchg
push
add
out
ror
sar
aas
enter
dec
int3
out
inc
scas
test
push
mov
xchg
and
pop
xchg
jb
or
cmc
mov
mov
cmpsl
xor
bound
push
cmpsb
jecxz
shl
daa
dec
addr16
xor
nop
mov
pop
jge
inc
jne
sbb
and
push
inc
jnp
loopne
gs
pusha
leave
mov
rcrl
or
pushf
pop
mov
or
sarl
inc
push
leave
rcr
add
mov
movsb
or
or
push
jle
jge
test
jg
sub
add
dec
jne
les
arpl
ret
xlat
test
popf
call
dec
scas
bound
inc
inc
or
mov
jle
inc
mov
inc
jmp
enter
lock
fdivrs
pop
mov
add
nop
outsb
ljmp
mov
movsl
sub
sbb
mov
adc
dec
mov
mov
push
dec
mov
mov
stos
fstps
push
lds
aam
inc
lcall
adc
outsl
test
les
inc
jb
call
inc
mov
jno
icebp
mov
nop
cmp
mov
test
clc
mov
lret
stos
pop
nop
movsb
test
into
lods
mov
pop
test
sub
int3
leave
out
xor
xlat
xor
inc
fsub
mov
flds
dec
scas
mov
xchg
push
loope
mov
mov
xchg
inc
mov
push
push
insb
popf
xor
mov
les
hlt
adc
dec
mov
xchg
cmp
sub
mov
pop
loopne
out
and
addr16
xchg
nop
inc
sub
adc
in
stos
xor
movsl
movsb
rol
inc
add
and
mov
jecxz
add
daa
xchg
jae
cltd
jle
jnp
sarb
dec
and
adc
or
add
mov
mov
lds
lods
push
jmp
push
xchg
gs
addr16
sbb
cmp
add
jle
xchg
js
inc
or
inc
fwait
into
cmp
pop
mov
xor
sbb
jecxz
js
or
subb
stos
mov
sti
ss
ret
sbb
xchg
lds
lods
mov
mov
dec
add
rolb
jmp
jae
pusha
icebp
pushf
mov
mov
inc
add
push
into
sub
fidivs
shlb
adc
lds
mov
test
das
or
lods
fisttpll
loopne
xorb
ss
shlb
outsl
xchg
stos
push
mov
imul
repz
jecxz,pt
mov
cwtl
mov
jle
or
jg
and
xor
mov
or
test
repz
or
mov
mov
sbbb
lea
mov
fstpl
js
jne
sub
movsb
rolb
pop
xchg
pushf
lea
pop
mov
andb
stc
lea
shlb
aad
into
pop
mov
cli
daa
or
adc
test
nop
inc
int3
repnz
lahf
pop
cmp
pop
stos
mov
ljmp
lods
or
loop
mov
xor
mov
imul
push
inc
aas
subb
pop
add
in
xorl
adc
in
jl
fcompl
imul
aam
shl
lock
stos
fstpt
jne
out
leave
pop
push
or
es
test
lods
mov
cmp
add
shrb
cli
into
push
mov
imul
cwtl
int
sbb
pusha
es
or
inc
adc
inc
jp
jae
add
xor
and
ret
adcl
ljmp
sbb
xor
mov
in
in
ja
mov
jne
or
sub
jbe
adc
pop
push
and
in
mov
adc
int
xchg
push
xlat
add
cli
fsubl
mov
jl
hlt
jl
loopne
dec
dec
scas
mov
std
xor
shlb
push
push
out
dec
or
outsb
xchg
cmp
inc
inc
hlt
pop
f2xm1
sbb
sbb
mov
orb
enter
xchg
pushf
xchg
orb
roll
add
lods
mov
sbb
out
jne
mov
adc
ja
add
call
test
xor
fsubl
dec
and
lahf
xchg
xor
roll
pop
or
mov
stos
push
leave
push
mov
lcall
nop
loope
icebp
rorl
imul
inc
xchg
adc
aas
push
rorb
dec
lock
xchg
in
add
add
cwtl
xchg
nop
mov
ja
outsb
mov
pop
and
out
in
mov
outsl
lods
and
push
std
insb
mov
add
icebp
adc
mov
andl
stc
mov
shrl
aas
push
popa
in
mov
and
and
ljmp
xchg
lcall
xor
mov
xchg
inc
and
fsubl
hlt
ret
inc
ja
sub
out
subl
arpl
ljmp
orb
imul
arpl
and
xor
sub
fdivrp
push
sub
xchg
arpl
rol
add
jno
incb
in
clc
dec
cmc
or
push
ljmp
outsl
dec
sub
loopne
sbb
call
jmp
lock
or
mov
dec
lret
cmp
sub
fwait
mov
jmp
ds
push
mov
hlt
inc
sbb
push
call
xorb
push
dec
hlt
icebp
pusha
cmp
mov
addl
and
adc
in
cmpsb
faddl
aam
std
push
mov
fs
lcall
jnp
dec
cmp
scas
xchg
movsl
jno
add
push
and
xor
jb
cmp
aas
pop
adc
data16
mov
icebp
cmp
xor
mov
push
rcrb
popf
xor
aas
or
mov
femms
mov
shrb
addr16
stc
hlt
adc
subb
mov
in
cld
mov
sub
fdivrp
mov
fnstenv
push
hlt
push
mov
pop
xchg
mov
dec
mov
lcall
fcmovu
popa
jl
and
outsb
push
bnd
push
cli
repz
xchg
sahf
fnstsw
movsl
test
hlt
dec
movsl
aam
add
insl
jae
cmp
xor
sub
xor
jo
inc
shll
push
mov
and
cmpsb
xchg
add
xchg
mov
dec
test
sbb
push
sub
cwtl
in
mov
lea
mov
loop
push
in
pushf
xchg
stos
ja
enter
pop
mov
add
mov
xorb
stc
jl
pusha
cmp
dec
sub
das
cmp
movl
jbe
dec
andb
adc
mov
icebp
mov
mov
das
adc
push
idivl
fiadds
ret
sub
sbb
aas
addb
inc
stos
adc
jne
mov
hlt
sub
in
mov
xor
enter
mov
jmp
mov
or
mov
test
sbb
cmp
or
inc
mov
gs
lock
insl
push
dec
or
movsb
js
sbbl
and
sbb
out
add
and
ds
shrb
cmp
subb
ds
and
inc
movsl
mov
xorl
icebp
iret
mov
shrl
mov
push
jl
lcall
mov
fnstenv
add
mov
dec
outsl
addr16
mov
pop
jecxz
stos
xchg
rcrl
cmpl
xchg
mov
or
cltd
push
adc
jo
fistpll
push
xor
hlt
pop
scas
cmp
adc
push
mov
adc
pop
mov
sub
lcall
les
ret
jl
push
stos
shlb
ficoms
mov
addr16
clc
out
xchg
hlt
fstl
aad
adc
sub
cld
xchg
fdivl
lods
mov
mov
aaa
lahf
mov
sub
iret
pop
push
mov
jecxz
xor
mov
inc
arpl
add
pop
fdiv
sub
aam
nop
mov
adc
cmp
cli
les
pop
hlt
mov
imul
or
xor
adc
xchg
and
adc
mov
into
les
shl
pop
sbb
push
mov
add
lods
inc
fistpl
adc
inc
pop
mov
push
subps
mov
add
and
lock
sub
icebp
les
dec
and
fimull
pop
add
cmp
test
push
add
mov
jge
jmp
push
popa
mov
cmp
adc
mov
xchg
in
repz
popf
out
gs
imul
dec
movsl
into
fstp
sbb
in
adc
pop
dec
xor
aaa
test
ret
pop
repnz
inc
mov
push
xchg
cmp
mov
mov
and
js
packsswb
push
repz
daa
sbb
sbb
sbb
inc
movsb
sub
shll
jmp
xor
cli
and
mov
mov
adc
movl
cmp
out
mov
adc
mov
mov
enter
out
and
sbb
xor
popa
dec
inc
sti
mov
jg
imul
hlt
or
int3
mov
jns
outsb
adc
mov
push
enter
pop
sbb
pop
jnp
testl
imul
adc
add
xchg
lret
mov
xor
xchg
mov
inc
mov
sub
jmp
sti
iret
les
lcall
ret
rcrb
push
test
lcall
mov
dec
mov
js
fs
push
rol
loop
lds
repz
mov
sub
fldl
xor
sbbb
flds
adc
das
jg
cs
stos
mov
xchg
fdiv
sbb
es
into
xor
shlb
mov
cmp
fwait
push
or
popl
inc
dec
imul
adc
lods
add
inc
add
adc
enter
xor
out
test
decb
shrl
inc
rclb
xchg
bound
dec
ror
adc
nop
dec
out
jnp
in
sbb
adc
or
imul
xchg
test
jne
mov
arpl
push
rcl
mov
out
mov
lods
jbe
mov
in
dec
mov
mov
jge
iret
outsl
push
push
adc
hlt
insb
sub
outsl
cmp
sub
and
push
ret
lret
mov
nop
dec
xchg
pushw
outsl
cmpsl
movsl
movsl
cmp
sbbb
stc
push
add
mov
xor
sahf
mov
jno
je
adc
ljmp
add
push
jne
cli
faddl
pop
ret
pop
pop
add
xchg
std
xchg
jecxz
repnz
std
lds
xchg
cmp
xchg
icebp
outsl
mov
or
mov
movsl
fcoml
mov
sub
and
movsb
stc
add
mov
add
jne
test
push
es
cli
inc
sub
sti
hlt
or
ss
sbb
xor
repz
cwtl
iret
push
add
das
hlt
mov
psllw
jl
dec
dec
cmpsl
mov
mov
into
enter
and
fcoms
lea
or
mov
fisttpll
out
inc
dec
js
xchg
in
sub
gs
ja
pop
leave
nop
cmc
gs
data16
mov
cltd
adc
divb
jb
jle
inc
inc
leave
and
fs
jnp
stc
enter
lods
dec
mov
inc
pop
cmp
and
sub
roll
leave
inc
mov
fbld
enter
jns
imul
jne
in
mov
out
in
mov
rcll
jne
jl
cmpsl
fldl
inc
xchg
xchg
jb
jnp
divb
jne
stos
or
xor
aam
mov
cmp
adc
xorl
daa
pop
or
cmpsl
adc
adc
das
jno
add
mov
fs
insb
push
les
push
imul
ret
out
lds
lea
cmp
fcmovnb
bound
adc
pop
popa
das
push
xchg
or
add
mov
push
mov
into
les
cltd
scas
jnp
lcall
mov
sub
out
pushl
cwtl
mov
inc
or
lcall
and
aam
test
test
scas
mov
push
nop
or
xor
out
cld
mov
dec
cmpl
inc
pusha
push
cmp
or
inc
repnz
repz
roll
mov
xor
call
mov
lea
fsubs
or
aas
mov
cmpl
idivb
sbb
imul
stos
inc
fdivs
sub
or
mov
hlt
or
inc
and
cmpsb
dec
sub
mov
test
jns
mov
rcrl
or
pop
fcomps
inc
push
push
int3
les
mov
add
lcall
pop
dec
outsl
sar
scas
pop
push
adc
in
push
xor
testl
fiaddl
in
adc
mov
pop
add
mov
push
insl
pop
inc
ljmp
pop
or
dec
jmp
loopne
les
test
jne
pop
and
mull
sbb
jmp
pop
cld
xchg
scas
sub
gs
mov
add
pop
stos
enter
std
mov
cwtl
add
mov
xchg
scas
lods
inc
iret
inc
pop
pop
out
push
and
xchg
clc
or
pop
stos
or
lret
add
enter
repz
pop
movsb
sub
or
call
mov
nop
sbb
xchg
into
jo
jne
std
add
mov
cs
xchg
pop
in
mov
jo
inc
dec
into
push
inc
arpl
cltd
mov
test
dec
jno
lret
inc
ret
xchg
cmp
cmc
xchg
or
icebp
inc
dec
popf
imul
rorb
sbb
shrb
divb
inc
stos
jne
adc
stos
mov
dec
aas
int3
lret
adc
add
js
pop
into
movsb
popf
xchg
sbb
insb
orb
in
test
xchg
mov
mov
aas
ljmp
cld
pop
xchg
cmc
clc
sbb
hlt
xchg
jge
xor
and
xor
pop
or
sbb
add
aam
jle
imul
bound
fiaddl
lret
out
inc
aad
mov
push
adc
jns
enter
xchg
xchg
pop
sub
movsl
imul
xchg
pusha
mov
adc
adc
aam
shlb
pop
xor
xlat
loopne
stos
jl
rorb
scas
add
mov
adc
push
cmp
mov
or
mov
or
push
adc
or
cmp
mov
mov
pusha
mov
mov
mov
dec
shlb
xor
std
mov
stos
mov
jl
ja
mov
cmp
xlat
sbb
ficoml
mov
jne
aaa
pop
sub
leave
lcall
mov
cli
jno
push
nop
push
rclb
mov
dec
shl
icebp
mov
stos
adc
jo
or
cmpsb
out
testl
xchg
insb
shrl
sbb
jnp
fcomi
mov
jge
jae,pn
arpl
mov
out
nop
lret
jp
es
stc
cltd
shrl
inc
mov
mov
adc
lock
cmp
add
rcll
loope
mov
mov
mov
sti
ljmp
test
dec
iret
bound
adc
in
stos
in
and
sub
mov
mov
mov
test
filds
pop
shr
div
jge
imul
clc
fcoml
or
push
xorb
dec
sbb
mov
leave
cwtl
lret
jmp
pop
cmpsb
nop
sbb
xchg
push
or
fiadds
cwtl
hlt
mov
sbb
pushf
fisubs
mov
test
jbe
fnstcw
mov
in
or
sbb
fistpll
mov
inc
adc
fs
enter
aad
mov
cmp
xchg
cld
mov
push
xor
push
fildll
shrl
or
es
mov
ret
inc
inc
aad
dec
mov
xor
mov
inc
negl
mov
out
xchg
mov
rclb
aaa
and
cmp
divb
sahf
or
jae
xchg
test
mov
shrl
in
scas
imul
push
scas
or
neg
out
lock
ret
cwtl
cwtl
fisubs
push
rorb
add
push
int3
aad
jae
in
mov
aam
cltd
icebp
jmp
mov
cmp
fwait
bound
es
es
pop
icebp
decb
inc
mov
repz
scas
sbb
cmp
lcall
lds
int
add
call
or
dec
lret
sbb
bound
sub
xchg
cli
jg
ja
inc
and
add
fbstp
int
inc
mov
idiv
mov
pusha
mov
push
mov
imul
call
stos
jne
xchg
rcrb
jbe
cmp
stos
fnstsw
or
jns
add
out
int3
sahf
sub
jl
loopne
mov
dec
mov
push
push
jg
lahf
hlt
les
fucomip
stos
cltd
cli
push
aas
out
dec
nop
pop
mov
mov
add
add
cmpsl
inc
inc
inc
xlat
dec
and
lds
push
int3
iret
or
imul
xchg
sub
sub
push
push
lds
cmp
xchg
ret
or
pop
int3
dec
xchg
mov
dec
in
xchg
xor
call
inc
dec
adcl
sbb
inc
scas
sbb
sbb
sbb
mov
les
jbe
sbbl
data16
jo
adc
push
aam
test
xor
fcompl
js
fistps
sbb
jge
dec
add
data16
sbb
and
adc
aam
add
push
inc
mov
outsb
leave
stos
jp
lea
enter
sahf
sar
in
lods
add
add
hlt
and
mov
mov
loope
sub
mov
cmpsl
cmp
push
cmp
repz
push
mov
lock
adc
mov
es
add
jle
bound
sub
push
push
jne
loopne
stos
lret
popa
es
mov
inc
cmpsl
push
adc
scas
dec
mov
sbb
in
inc
call
cld
shl
sub
and
clc
xor
cmpsl
cmc
pop
or
dec
and
inc
out
das
es
insl
dec
fs
fdivp
inc
xchg
xor
xlat
test
dec
sti
push
and
ss
sub
scas
add
fucom
hlt
dec
jle
repz
fs
mov
imul
fsubs
or
jl
mov
jle
inc
sub
test
push
in
and
dec
sub
xchg
inc
mov
pop
mov
sub
loope
test
pop
pusha
cmpsl
jle
ja
or
jbe
dec
out
movsl
icebp
cli
cmc
inc
cld
lock
std
int3
ds
shll
cmp
cmp
and
stos
enter
jne
push
mov
pop
movsb
jns
inc
mov
and
xchg
or
pop
movb
adc
mov
out
pop
add
jo
scas
hlt
jp
push
int3
sbb
jne
adc
mov
andl
or
sbb
std
aaa
fdivl
jb
lds
iret
lds
ret
sbbl
sbb
sub
mov
dec
jnp,pt
jne
mov
pop
sbb
jo
ds
hlt
aad
fucomp
jnp
pop
addl
dec
inc
pop
psubb
inc
fcoml
xchg
adc
out
pop
inc
xchg
imul
dec
mov
xchg
push
dec
fisttps
into
addl
hlt
pop
clc
cmc
push
dec
outsl
shl
stos
sub
push
das
mov
mov
sti
cmp
pop
fcomps
xor
imul
cmp
lds
test
mov
mov
pop
roll
inc
fldcw
fisubrs
mov
mov
xchg
popa
add
cmp
add
shl
iret
clts
add
xchg
gs
jnp
sarl
imul
jne
pop
xchg
nop
iret
hlt
dec
cmovl
sbb
jne
pop
xor
hlt
jp
movsb
fidivs
into
mov
or
push
dec
push
fucomp
std
rcrb
pusha
mov
xchg
jle
nop
push
nop
sbb
cltd
xchg
and
cmp
sub
mov
inc
sbbb
jmp
fistpll
popf
orl
loop
sbb
nop
scas
sub
ljmp
cwtl
lock
arpl
xorb
popa
pop
icebp
lahf
sti
pop
cs
push
mov
jo
add
cwtl
lock
daa
nop
jecxz
dec
ljmp
outsl
adc
and
cltd
push
test
pop
mov
clc
mov
jp
mov
xchg
les
mov
push
mov
les
testb
xchg
test
xchg
xchg
jne
scas
mov
shrl
movb
pop
inc
test
push
mov
rol
sub
fmuls
loope
adcl
jmp
add
fdiv
sahf
nop
lret
or
lds
leave
push
mov
scas
pushl
das
or
loopne
pop
or
jns
mov
and
cwtl
inc
mov
scas
cmp
jnp
stc
pop
mov
adc
mov
cmp
adc
adc
push
jne
movsl
mov
arpl
add
and
mov
adc
lods
mov
movsb
push
dec
repnz
xchg
dec
adc
pop
mov
movsl
aam
pop
adc
jl
cmpsl
nop
xchg
pop
mov
mov
nop
in
adc
and
inc
mov
hlt
rcrl
das
dec
xchg
loope
sub
cmpsb
stos
mov
jbe
sbbl
je
out
pop
sub
mov
add
in
lcall
movsb
pusha
jns
sub
call
dec
jge
xchg
lods
fisubs
xlat
fcoml
mulb
adc
sbb
ds
jno
hlt
int3
xchg
insb
iret
dec
push
fadd
or
mov
xchg
daa
inc
pop
xchg
loop
pushf
in
mov
push
sub
add
leave
mov
fnstsw
fistps
not
test
out
sub
clc
mov
jmp
or
lods
es
rcl
push
jne
jb
popa
mov
pusha
fcomps
aaa
into
mov
mov
movsl
insb
mov
cmp
xor
jno
mov
inc
hlt
test
clc
mov
or
push
outsb
sub
out
inc
pop
mov
xchg
mov
aas
jno
out
push
inc
inc
dec
adc
in
imul
and
cmpsb
xor
in
dec
andl
jl
aad
mov
fstpl
notb
aam
adcl
subl
xor
lret
hlt
je
add
stos
mov
xlat
or
add
lods
mov
int
xchg
jge
jle
cs
pop
mov
adc
xchg
out
mov
jb
sbb
xchg
and
or
sbb
lock
pusha
stos
jecxz
sub
mov
rcll
cmp
sti
add
jmp
into
outsb
inc
subb
mov
test
xchg
pop
sbb
shlb
pop
and
inc
pop
push
pop
ljmp
mov
add
hlt
dec
xchg
push
int3
lds
lahf
push
dec
jo
scas
lods
fcompl
test
mov
mov
inc
adc
mov
loope
sub
push
add
stc
and
add
das
jns
adc
and
sub
hlt
out
pop
add
lods
adcb
test
sbb
add
mov
int3
add
fs
mov
sub
or
out
inc
and
test
xchg
xchg
add
sub
sub
cmpb
addr16
pop
pop
icebp
cmc
cmp
mov
push
xchg
push
popf
jnp
or
cmc
push
out
push
ljmp
pop
dec
andb
aam
lret
test
shll
xor
mov
enter
mov
aaa
scas
cmp
cmp
xor
cmp
scas
lods
sbb
shlb
das
jbe
mov
das
pusha
into
pop
xor
outsb
fwait
arpl
ret
cmp
cmp
jg
mov
cmp
xchg
push
jo
pop
in
mov
les
jmp
mov
aas
movsb
mov
push
and
dec
inc
or
cli
sbbl
lret
out
adc
stc
shlb
and
and
or
in
inc
movsb
lods
sub
iret
push
pop
movsb
inc
nop
dec
ss
mov
pop
mov
imul
lock
jns
cmp
movsb
movsb
pop
xorl
nop
mov
ret
stos
pusha
push
or
push
repz
lret
cmp
decl
dec
or
xchg
jge
cmpl
adc
mov
nop
add
inc
mov
mov
push
ss
fldl
mov
dec
xor
jo
mov
xchg
jne
shl
or
ret
lcall
push
cmp
dec
ror
push
cwtl
sti
insb
xchg
adc
subl
push
in
lcall
mov
imul
push
fsubl
or
cmp
loopne
pusha
jmp
mov
mov
and
hlt
movsl
movsb
push
mov
ret
insl
fmulp
into
mov
or
ljmp
mov
test
div
jg
int3
loop
jne
mov
add
xor
pop
popa
lock
fucom
jmp
sbb
iret
loopne
inc
xorb
xchg
xchg
push
int3
fcompl
movsb
push
movb
adc
test
into
dec
es
popf
gs
mov
sbb
js
lcall
cld
inc
add
push
icebp
and
jmp
xor
xlat
ror
mov
add
jmp
ljmp
push
addb
testb
jp
sarl
iret
mov
cmp
enter
ffreep
xchg
push
bound
xchg
gs
ret
in
cld
add
sub
ss
pusha
in
xchg
pop
adc
pushf
out
outsl
adc
cli
cwtl
xchg
pusha
sub
std
je
addb
cmp
bound
jae
inc
sbb
stos
mov
test
jge
inc
hlt
jae
movsl
mov
gs
push
aad
pop
add
shl
dec
subl
lea
mov
mov
loop
cltd
add
in
mov
mov
hlt
repnz
mov
mov
cmp
sarb
repnz
clc
sub
pcmpgtd
push
add
insl
jp
mov
cmp
out
lods
fsub
xchg
mov
push
cld
and
mov
jne
out
jmp
push
xchg
or
mov
icebp
gs
add
idivb
dec
aad
ret
loop
test
loope
or
mov
test
sbb
popl
fsubl
and
push
adc
dec
xchg
aam
add
pop
aas
cmc
into
std
int3
cmp
push
jl
xor
stos
jne
sub
insb
adc
adc
sbb
fstl
sbb
sub
mov
popa
shrl
hlt
cmp
adc
cld
stc
dec
test
push
push
ss
mov
and
adc
xchg
aas
out
loope
hlt
jno
incb
inc
and
mov
insl
leave
fiaddl
cmp
insb
pop
cmp
mov
sbb
mov
lret
addr16
mov
out
push
ret
and
sub
or
stos
jmp
mov
cwtl
orl
xchg
and
mov
cmpl
aad
jmp
xchg
sub
rcrl
jo
stos
lcall
imul
fistl
nop
jnp
nop
arpl
xor
lret
xor
sub
jae
inc
jecxz
loope
jns
or
sbb
jbe
add
push
movsl
push
push
or
pop
push
xchg
popf
add
xchg
mov
js
cld
insb
loop
int3
stc
push
push
mov
mov
cwtl
mov
mov
jo
dec
adc
fidivrl
hlt
cmpsl
in
stos
sbb
mov
movsb
hlt
cmp
shlb
inc
pusha
xor
movsl
cmpsb
jl
jmp
add
cwtl
push
cltd
sbb
scas
adc
hlt
std
daa
mov
push
test
stos
aas
repz
mov
cmp
or
ja
ret
ret
lods
cmc
adc
lret
outsl
push
dec
dec
push
int3
add
movsl
cmpb
fcmovnb
outsl
push
adc
add
aad
add
shll
lock
loope
hlt
mov
jns
or
orb
xchg
test
pop
cmp
mov
out
pop
sti
inc
push
pop
sahf
mov
add
aas
push
inc
sub
dec
outsb
outsl
mov
lea
in
in
in
dec
push
dec
in
std
in
push
dec
aas
movsb
movhps
leave
cmp
push
aad
xchg
int3
into
fsubr
jg
clc
mov
cmp
cmpsb
mov
test
stos
ret
rclb
push
fldcw
push
cmpsl
xlat
out
les
gs
test
adc
aas
pop
sbbl
int3
push
add
jbe
stos
dec
jnp
dec
jno
into
mov
xor
mov
adc
adc
hlt
lahf
stos
add
lds
xchg
repz
adc
fcmove
aam
xchg
or
cmp
jb
fcmove
loop
enter
lods
std
stc
xchg
mov
fbld
out
rol
mov
jmp
mov
fs
leave
stos
jne
jb
icebp
cmpsl
ret
lock
sbb
xchg
hlt
sub
test
ljmp
inc
mov
jle
pop
adc
mov
stos
and
mov
daa
jecxz
jne
or
sub
das
ror
cmpsb
fldpi
mov
cld
test
fxch
add
pop
cmpsb
sub
xchg
bound
out
gs
fists
pop
adc
pop
jl
icebp
and
outsb
arpl
testb
bound
cwtl
test
push
cmpsl
pushf
mov
xchg
sub
xchg
addl
xorl
icebp
dec
scas
mov
mov
int
into
cmp
xor
add
sbb
sbb
sub
xchg
inc
aam
xchg
adc
dec
cmp
inc
iret
sub
jge
mov
shlb
lea
daa
jno
jle
xchg
lock
das
lods
ficomps
push
pusha
sub
sub
ss
hlt
repnz
or
push
cmp
adc
sbb
movsb
cmp
adc
pop
add
xor
test
cmpsl
xchg
jbe
orl
mov
fwait
or
pop
sub
jl
movsl
stc
ret
cmp
xor
repz
insb
sbb
scas
pop
lcall
jle
lods
push
mov
cwtl
test
mov
or
pop
mov
int3
stos
or
fadds
and
cs
mov
frstor
sbb
add
jge
xor
add
sub
adc
out
pop
and
jg
mov
fnstsw
xchg
cmpsl
fcoml
mov
xchg
push
ljmp
or
dec
sub
inc
sub
movsb
adc
add
sub
repz
xchg
clc
xchg
dec
inc
sub
repnz
pusha
aad
pop
xchg
push
mov
add
stc
cmp
push
lahf
pop
enter
mov
push
lcall
in
nop
adc
sub
mov
xchg
insb
adc
ss
es
shlb
push
sbbl
jmp
xorb
aam
jbe
add
add
into
pop
jmp
mov
dec
dec
pop
push
mov
sti
int
sub
int3
daa
jnp
dec
add
or
loope
inc
and
push
jne
pop
lcall
mov
cmpsl
xchg
or
lods
lock
movsb
subl
jo
aaa
cltd
mov
inc
push
jns
arpl
jecxz
test
pop
std
gs
xchg
adcl
mov
mov
xlat
cmp
outsl
inc
leave
xchg
sbb
shl
daa
sbb
or
pop
es
dec
call
mov
jge
xorb
popa
insb
jmp
inc
test
mov
stos
test
xlat
out
and
inc
mov
pop
push
push
mov
aas
pop
push
inc
mov
popf
in
xchg
outsb
pop
icebp
enter
mov
sbb
xor
xor
mov
dec
push
aas
xchg
push
or
dec
sbb
pop
jnp
addb
fmuls
loope
mov
push
daa
scas
cmpl
xor
push
out
inc
add
sbb
das
mov
mov
loope
jg
ja
movsb
mov
push
pusha
fmull
dec
xchg
and
sahf
pop
mov
les
add
inc
mov
adc
sbb
mov
adc
imul
mov
arpl
pusha
imul
sbb
and
movsl
mov
or
mov
aad
mov
rcl
xor
fistps
jl
add
jmp
cmc
andb
pop
xchg
cld
daa
jle
iret
aam
mov
xchg
push
jmp
xchg
frstor
add
mov
stos
pusha
int3
adc
pop
inc
add
mov
pop
rclb
xor
subb
push
jl
jne
dec
xor
in
mov
in
jg
loop
add
mov
jo
in
push
xchg
jns
in
fstpl
xchg
mov
ret
or
mov
lock
daa
cmpl
add
jo
lock
pop
shl
or
imul
jne
stos
js
test
sbb
std
xchg
pop
mov
push
shrb
xorb
scas
test
out
repnz
inc
dec
jnp
popa
mov
test
filds
cmp
sub
add
adc
inc
lods
insl
inc
cs
sbbb
fildll
icebp
enter
and
mov
ret
hlt
add
cmc
cmpsb
stos
add
mov
or
add
clc
jle
dec
add
das
adc
divl
movsb
xor
into
cmp
or
imul
fnstsw
mov
adc
mov
dec
adc
dec
divb
cs
stos
dec
out
popf
push
mov
jmp
lcall
fucom
cmp
mov
mov
cld
push
sub
loope
sub
fildl
jne
push
add
and
sub
hlt
popf
mov
xor
iret
in
adc
aad
nop
jbe
xor
popf
or
loopne
mov
xchg
mov
jge,pn
in
sbb
mov
add
hlt
mov
mov
mov
mov
jle
ret
mov
incb
mov
movsl
test
lcall
mov
mov
and
pop
push
out
mov
mov
push
scas
leave
push
or
cmc
and
push
jg
shlb
lock
xchg
das
shlb
ret
ja
mov
mov
cmp
shrb
xor
jno
das
testl
dec
jle
gs
mov
cmp
adcb
ret
repnz
lock
jne
cmc
movsb
faddl
or
popa
xchg
sbb
testb
mov
nop
cmp
or
or
jbe
jg
scas
test
imul
and
dec
das
add
int3
outsl
sar
or
cmp
imul
jle
sarb
ret
jno
adc
outsb
lods
add
stos
hlt
stos
xchg
orb
xor
push
push
cmpl
stos
aaa
insl
popf
sarl
notb
xor
sub
push
cmpsb
inc
dec
sbb
stc
sti
mov
sub
push
imul
cmp
out
aad
daa
inc
daa
sbb
fcompl
cmpsb
clc
xchg
inc
adc
lahf
jne
iret
add
scas
ja
jne
jmp
jne
sub
sub
daa
loopne
pop
pop
outsl
and
jg
dec
movsb
fwait
push
sub
andb
mov
jbe
xor
lret
pusha
sbb
das
cmp
and
fmulp
or
push
mov
sub
sbb
sub
inc
lahf
mov
sub
lret
sbb
cmp
dec
ret
adc
loope
arpl
dec
lcall
jns
enter
fsubrs
ficomps
cmc
sub
aad
xorb
sub
lods
inc
mov
add
mov
xchg
xor
fstps
mov
clc
jns
xchg
jg
adc
mov
push
lds
jns
shll
loop
loope
adcb
aas
hlt
dec
pop
jge
outsb
fwait
or
dec
dec
inc
mov
mov
sub
add
inc
test
jecxz
movsb
inc
insl
lock
in
xor
stos
mov
mov
fmuls
mov
pop
loop
es
mov
sub
cmc
jg
xchg
add
push
out
repnz
xor
dec
popf
loop
mov
arpl
push
mov
xor
mov
mov
sub
push
inc
cmp
inc
cmpsl
and
pop
test
dec
out
sub
faddl
cld
push
cmpsl
aas
fs
jae
rcr
daa
jno
push
pop
cmp
sub
daa
pop
loop
adc
js
movl
add
pop
cwtl
shrb
test
loop
sbb
dec
out
inc
out
lds
cltd
dec
test
push
movsl
or
lret
outsb
pop
outsb
leave
jp
push
into
das
cli
and
inc
aas
test
es
sbb
sarb
or
call
inc
mov
xchg
inc
cli
fisttpll
push
dec
ja
aad
test
mov
arpl
cmp
int3
cs
ljmp
sub
rclb
push
test
arpl
pop
fwait
jl
shl
adc
mov
pop
jecxz
hlt
push
jbe
shlb
hlt
sarl
mov
filds
mov
lea
das
insb
in
pusha
clc
call
adc
push
sti
in
loop
lcall
pop
subl
popf
xchg
jle
fsub
jne
adc
push
mov
jp
or
jnp
shll
inc
push
repnz
push
push
fildll
and
es
cmpsl
mov
pop
hlt
shrl
mov
sbb
adc
lds
xchg
mov
cmp
dec
stc
mov
hlt
popa
push
pop
cli
pop
loopne
mov
mov
add
jge
in
cmpsb
cli
mov
inc
test
or
in
movsb
dec
in
push
mov
mov
cmc
xchg
loop
mov
push
stos
aad
lods
adc
cli
test
sub
push
xchg
shll
lds
hlt
or
mov
or
je
ja
jne
je
inc
mov
mov
into
push
pop
andl
adc
sbb
insl
jmp
mov
jmp
lcall
add
and
mov
mov
sub
sub
cmp
aam
and
xchg
add
mov
jb
mov
push
gs
enter
js
cmp
es
int3
add
cwtl
or
adc
lahf
in
cmpsl
loope
mov
in
inc
shll
ret
aam
jne
jg
and
test
in
movsl
or
cld
pop
jmp
aad
pop
mov
sarl
leave
pop
jg
outsl
xor
test
mulb
shl
mov
and
lea
xor
icebp
pop
add
sti
jmp
push
mov
and
out
pop
pop
jne
andl
push
les
cld
js
xor
dec
pushf
outsl
xchg
fdivl
xchg
mov
in
test
xabort
sub
enter
jp
popa
ds
adc
xor
enter
js
stc
stc
mov
lods
inc
adc
sub
lret
cmp
sbb
loop
push
roll
scas
cli
std
and
icebp
mov
stos
movsb
popf
push
movl
mov
and
xchg
jne
fmulp
out
add
insb
add
es
sbb
xor
xchg
cwtl
insl
cmp
test
mov
imul
xchg
mov
inc
mov
mov
mov
and
jno
jg
mov
mov
push
xor
orl
arpl
icebp
in
sbb
int3
cmc
aam
psubw
cmp
mov
push
mov
add
push
mov
call
sbb
sbbl
sub
sub
push
sbb
add
or
push
outsl
lods
mov
sti
imul
mov
mov
repz
add
sbb
xor
arpl
add
mov
or
jnp
movsl
sub
lret
add
ja
enter
or
mov
test
iret
fnstenv
mov
fstl
popa
inc
push
mov
jl
pop
cmp
jo
xchg
fdiv
ret
sahf
stos
and
sbb
mov
popf
jne
sub
imul
pop
sub
add
xorb
ror
sahf
jae
lock
es
call
dec
jne
mov
in
pushf
inc
add
fcmovnb
xchg
stos
data16
hlt
out
daa
xor
cmpsb
sbb
enter
xchg
out
xchg
pop
fcmovne
push
fs
fnstcw
outsl
jns
leave
test
inc
sub
jg
mov
ja
addl
add
out
mov
fsubrs
mov
adc
shlb
in
xor
cmc
add
xor
ss
ljmp
lea
xor
mov
mov
inc
aaa
sbb
ja
repz
push
stc
cmpsl
popf
ror
test
sarl
sbb
jge
fsubrl
push
jns
out
sub
mov
lret
je
mov
subb
push
jp
enter
and
cmp
push
add
pushf
enter
lods
jne
jmp
das
mov
cmp
or
xorl
ficoml
cmpsl
std
out
xchg
leave
dec
sti
adc
sub
mov
in
int
cmp
pop
and
pop
cmpb
xor
inc
push
mov
lret
lret
mov
push
add
movsb
scas
stc
or
and
fldenv
mov
sbb
push
popf
out
pushf
or
sahf
rcrl
pop
mov
notb
sub
mov
jnp
sti
cmpsb
sbb
xchg
fnstsw
xchg
cmp
and
xor
imul
xorb
testb
lods
shlb
jne
jns
nop
imul
in
in
dec
jmp
xchg
popa
ret
sub
jl
mov
sbb
sub
mov
std
pusha
or
stc
cmpsl
icebp
push
add
or
mov
xorb
sbb
and
xorl
jb
sbb
add
cmp
in
cmp
cld
inc
pop
fists
ja
cld
int
lar
mov
ror
hlt
dec
pop
push
fimull
pop
adc
jl
hlt
add
rorb
mov
pop
filds
or
into
mov
sub
cltd
mov
hlt
or
mov
pop
rcr
test
mov
sbb
xchg
popl
and
das
repnz
sbb
inc
mov
cmpsl
lret
jnp
test
scas
or
daa
and
xchg
in
jns
inc
mov
stc
iret
cld
inc
jg
inc
subb
arpl
sbb
push
push
pop
or
sub
inc
mov
push
mov
and
sub
std
push
das
rclb
rolb
dec
in
mov
jb
jle
add
and
pop
pop
inc
dec
or
cld
dec
movsb
out
or
mov
cmc
ds
inc
mov
leave
call
push
add
jne
xchg
add
sbb
pusha
mov
mov
cmpsl
leave
mov
outsb
or
call
dec
insb
or
xchg
pop
sub
jne
jne
xor
push
mov
pop
and
mov
dec
sti
and
mov
mov
pop
test
jo
rolb
adc
fs
pop
stc
lret
jae
inc
and
out
popa
lea
call
sahf
pop
push
js
das
xorb
cmpsb
data16
jmp
add
xchg
dec
ret
mov
pusha
shll
or
cmp
jge
push
int
pop
scas
pop
ror
hlt
scas
dec
fld
lcall
or
insb
fmull
mov
addr16
mov
into
or
loopne
mov
ficoml
or
insb
push
hlt
inc
shrb
pop
mov
inc
loop
pop
es
lcall
das
hlt
sbb
dec
mov
xor
cmpsb
or
sbb
xlat
sub
rcrb
xor
adc
or
out
adc
pop
adc
pop
sbb
ss
shl
subl
mov
in
cmovnp
inc
xchg
cmc
pop
push
sbb
inc
inc
fsubrs
pop
mov
fsubrl
xlat
sbb
movsb
xchg
orl
aas
push
xchg
cmp
sbb
lret
rorb
push
cmp
nop
push
mov
sub
xchg
add
fstps
int3
adc
inc
dec
jg
sahf
loop
aas
in
cmpsb
aad
fdivrl
add
fsubrs
inc
or
add
fld
sub
mov
add
sbb
lret
inc
hlt
subl
mov
mov
mov
mov
rol
add
dec
mov
add
mov
adc
dec
add
lods
xlat
cmp
xchg
sbb
dec
mov
pusha
cmp
push
cmp
mov
movsb
mov
and
adc
inc
sub
cmp
ret
add
mov
add
sbb
mov
and
push
add
test
xlat
sbb
fldenv
lock
pop
test
add
mov
ret
pushaw
leave
sub
lcall
in
mov
mov
addb
xchg
xchg
mov
cmp
subl
popf
xchg
cs
jne
fwait
ljmp
mov
cmp
dec
icebp
movsb
rorl
stc
jle
cltd
adc
cmp
ss
mov
outsl
imul
movsl
push
pop
insl
inc
fcomps
mov
loop
sbb
sbb
sub
jae
in
test
lahf
pop
test
adc
cmp
imul
adc
mov
insb
xor
dec
orb
cltd
cmc
nop
mov
jle
dec
jns
push
push
push
movsb
push
mov
enter
ja
jb
movsl
les
and
mov
jne
cmpsl
jle
daa
jne
xlat
das
dec
repz
test
jg
roll
inc
push
jp
repz
cwtl
pop
lea
int3
lret
sbb
lods
xorl
or
add
sbb
jne
rcl
aam
daa
xchg
push
dec
jle
enter
sub
mov
xchg
cmpsl
rclb
xchg
and
repz
loope,pn
lea
xchg
mov
add
hlt
lret
stos
ret
mov
pushf
inc
pop
sub
outsb
adc
push
xchg
mov
call
scas
frstor
mov
lods
mov
push
aas
shrb
xchg
mov
mov
aam
xor
or
leave
jo
lret
xchg
movq
inc
inc
ja
nop
pop
call
pop
jmp
dec
mov
sbbl
dec
gs
fldcw
jns
test
dec
mov
gs
xchg
pop
and
add
cld
mov
jne
add
mov
cmp
daa
add
dec
sbbb
iret
pop
mov
xor
xchg
inc
xchg
adc
mov
dec
ss
sub
rorl
pop
enter
and
xor
xlat
addr16
jl
sub
inc
add
lods
add
sar
scas
mov
dec
popa
test
es
pop
enter
movl
jle
cwtl
into
cmp
xor
cmpsl
mov
sub
pop
sub
add
fdivl
jo
push
js
xor
es
dec
dec
andb
xorl
dec
pop
lds
clc
clc
in
jne
jae
int
loop
lock
push
mov
insb
into
sub
inc
orl
pop
mov
shll
mov
js
enter
dec
hlt
leave
gs
cs
sbb
jns
pop
dec
gs
lods
ss
adc
cmp
pop
add
inc
and
mov
hlt
jo
mov
ret
pop
in
sub
or
cmp
push
int3
pop
les
shlb
xor
sub
hlt
mov
insl
les
flds
jno
jle
xchg
push
movsl
xor
arpl
fcom
test
or
cmpsl
jge
in
mov
jns
mov
arpl
sbb
sbb
push
out
fs
icebp
aad
xor
cmpl
jle
fisttpl
lock
mov
imul
jle
out
mov
stc
sub
hlt
sbb
xor
outsb
dec
jg
push
es
mov
lret
mov
adc
inc
out
mov
aaa
push
hlt
xchg
sub
rorl
xchg
sub
repnz
fld1
or
leave
mov
add
jecxz
jp
inc
dec
ret
dec
out
movsb
scas
aas
inc
call
pop
xchg
pushf
cmp
xchg
fisubrl
push
sub
int
jne
adc
arpl
push
inc
in
mov
icebp
test
cmp
scas
pushf
xor
bound
add
out
or
scas
imul
or
gs
fimuls
out
xor
push
mov
pusha
cmp
jp
aad
stos
das
cltd
je
in
lock
inc
sub
ret
mov
shrb
in
daa
jae
add
mov
loopne
test
rclb
and
test
mov
mov
add
inc
mov
push
jns
lret
jg
mov
lea
push
and
jb
stos
and
loopne
mov
mov
sar
nop
scas
fsts
lret
pop
add
mov
cmpsl
add
insl
mov
push
popf
mov
movhps
scas
enter
dec
enter
dec
add
add
int
call
jb
mov
fld
sub
pop
ret
rcr
call
bound
hlt
lods
int
mov
lret
imul
fcoml
in
imul
leave
sub
rolb
out
dec
sub
ljmp
es
cmpsb
xor
mov
add
addl
add
rolb
dec
lea
pop
mov
xor
xchg
addl
lods
add
ljmp
lods
mov
inc
pop
jecxz
mov
bound
add
stos
adc
sbb
pop
dec
into
insl
cwtl
sbb
add
mov
mov
aam
rol
test
adc
loope
and
movsl
pop
dec
pop
imul
xor
xchg
ficoms
lea
hlt
jge
test
pop
in
repnz
dec
loop
xor
out
mov
jecxz
xor
bound
stos
movsl
ret
add
cli
push
jne
or
arpl
push
mov
add
in
out
fildll
xchg
insb
mov
mov
fisttpl
or
movsb
enter
stos
add
ds
adc
ss
cmp
push
xor
inc
outsl
stos
xlat
lds
mov
cwtl
cmp
adc
adcb
dec
nop
ds
push
and
test
pop
pusha
push
inc
hlt
dec
push
insb
lcall
pop
fmuls
push
addl
add
sbb
push
jl
push
ljmp
inc
mov
xchg
mov
pop
cmpsb
pop
cmp
mov
cmpsb
xor
les
mov
je
push
testb
mov
mov
mov
addr16
sub
cmc
pop
sti
sub
ds
scas
cmpsl
pop
push
or
adc
fiaddl
out
push
adc
mov
adc
mov
jae
and
push
adc
lcall
cmp
into
jo
xor
out
or
cltd
jl
fldl
or
cmp
rep
and
icebp
cltd
lods
jb
stos
jnp
rol
outsb
add
xchg
lods
mov
pop
sub
jae
adc
aad
mov
into
xchg
aad
mov
sbb
jg
lcall
mov
mov
push
repz
stos
pop
jge
sub
call
and
mov
test
mov
jno
dec
bound
in
inc
inc
lahf
outsb
jmp
sub
xchg
and
sub
push
mov
sub
imul
ret
js
cs
xor
and
or
stc
mov
filds
pop
push
pop
or
xlat
les
movsb
jne
pushf
push
scas
adc
sub
movsl
xor
sbb
stc
mov
jl
pusha
mov
gs
mov
cltd
add
xor
mov
mov
cmc
scas
int
dec
popa
loopne
mov
fistps
std
mov
push
repnz
int
jmp
das
sub
in
movsb
incb
ret
aas
push
push
pop
ss
mov
dec
in
hlt
leave
pop
push
add
lds
pop
inc
mov
into
rclb
or
pop
xchg
inc
jbe
pop
sub
aad
lcall
out
pushf
xorb
mov
mov
dec
adc
stc
sti
xor
add
andb
loope
test
stos
add
jle
pop
lock
jne
ret
out
addb
outsb
mov
in
je
rclb
add
mov
pop
icebp
sbb
loope
rorb
lds
jne
mov
pushf
lret
push
xchg
call
add
mov
pop
jmp
cmp
outsl
subb
mov
inc
xchg
pop
dec
xchg
movsb
int
shrb
std
xor
or
stos
sbb
xchg
jo
js
push
test
add
ljmp
divb
imul
movsb
cmpsb
sub
jbe
jle
mov
je
into
fstl
dec
fadd
add
enter
dec
test
push
cmp
add
lock
jns
lock
fsubp
add
mov
subb
xchg
je
dec
add
mov
leave
jbe
xchg
jne
push
rcrb
out
push
adc
pusha
loop
cli
add
fisubl
push
stc
cmp
dec
outsb
inc
fisttps
add
xor
shll
push
mov
sub
insb
arpl
inc
mov
popf
sub
outsl
pop
popf
jg
sbb
mov
adc
ficoms
rolb
jb
inc
insl
pop
inc
cmp
xorb
jmp
and
lea
test
jmp
sub
andl
lret
aad
sub
loopne
and
pop
stos
scas
and
mov
sub
jl
out
xchg
scas
dec
add
add
jo
insb
jmp
sub
stos
jmp
fistpll
sub
jbe
subb
std
insb
adc
fcomps
and
or
mov
ljmp
in
cmc
push
pop
movsl
adc
sub
jle
lea
vpaddw
dec
pop
sbb
xchg
fstl
cmp
stc
idivl
inc
hlt
cmp
inc
fnstcw
out
test
test
fstl
or
cs
adc
add
ljmp
push
mov
sub
mov
insb
bound
jp
jne
jmp
inc
dec
xorl
int
dec
dec
push
in
and
mov
rcrb
cs
push
call
add
mov
xchg
lods
inc
inc
cwtl
sti
cltd
inc
std
pop
mov
sahf
mov
cmp
dec
pop
cmp
out
add
pop
stos
std
xor
lret
hlt
or
push
les
sar
dec
push
fcmovbe
adc
mov
pop
cmpsb
push
dec
add
dec
stos
fs
sbbb
out
cld
fldt
xchg
test
mov
sub
xchg
push
sub
mov
xor
dec
and
leave
je
mov
mov
stos
sub
jnp
sti
jmp
std
pop
aam
push
lret
ljmp
mov
pop
mov
stos
mov
leave
dec
add
popa
shll
sbb
add
or
lods
filds
add
or
push
ss
add
movsl
in
jo
ret
mov
in
dec
sub
vcmpss
icebp
jmp
rolb
enter
cmp
dec
cmpl
movsl
jmp
pop
push
cltd
jmp
push
ret
or
ss
sti
adc
adc
add
mov
cli
or
aas
xorb
iret
lret
fildll
add
out
lret
rolb
dec
cmp
js
jle
call
mov
xchg
leave
out
fstpl
movsl
mov
test
je
mov
adc
icebp
mov
pop
lret
bound
sbb
push
out
pushf
sahf
cwtl
pop
mov
pusha
pop
mov
clc
xchg
or
sub
inc
in
cld
stc
sub
and
pop
inc
test
icebp
sub
sbb
dec
mov
adc
cmp
dec
dec
jne
adc
xchg
xor
push
das
stos
jo
xchg
mov
leave
xchg
fadds
wbinvd
xor
fwait
mov
imul
cltd
add
sarb
in
mov
ficomps
cld
orl
cli
mov
pushf
xchg
and
in
adc
sub
mov
fisttps
and
jge
push
jle
or
jne
ss
ljmp
shl
mov
or
aas
xlat
jne
sub
pop
scas
pop
pusha
add
and
into
adcl
rolb
push
inc
sub
mov
sbb
aam
in
inc
add
aam
fs
sub
jg
shll
xor
mov
add
hlt
and
xchg
insb
pusha
push
or
lea
cltd
lahf
mov
push
enter
testl
xor
xchg
jno
jne
stos
lret
pop
mov
xor
jmp
inc
jne
mov
jmp
mov
inc
add
aaa
cmp
inc
inc
jnp
jmp
shld
mov
fwait
inc
jne
cmp
nop
mov
jle
scas
mov
xor
dec
aam
inc
or
in
sbb
ja
cmp
sub
test
lods
loopne
xor
mov
mov
xchg
test
inc
adc
sbbb
ret
repnz
push
arpl
ja
ja
imul
push
jne
and
clc
add
pusha
addb
cmpsl
cmp
scas
add
inc
hlt
inc
daa
xlat
mov
or
sbbl
jne
mov
jae
hlt
cmp
xlat
sub
push
loope
in
sarl
mov
mov
add
stc
add
jno
xchg
aas
mov
cmp
bound
ss
rcrb
push
adc
in
rcll
sbb
xor
mov
insb
lods
push
sub
popa
dec
push
fiadds
testl
push
into
hlt
push
seta
push
scas
mov
dec
pop
mov
or
cwtl
ret
fnsave
inc
mov
mov
sbb
inc
cmp
sarb
movsb
lock
rcl
add
scas
jnp,pt
sbb
add
or
dec
mov
add
dec
std
into
xor
pop
mov
lret
jg
out
subl
sbb
sahf
dec
cmp
xor
divb
lds
dec
test
xor
roll
jbe
sub
sarb
pop
xchg
test
jg
outsl
mov
icebp
mov
loop
shl
push
test
and
add
ja
cmpsb
and
insb
pusha
fmulp
ret
enter
aad
gs
ud0
pusha
jns
addl
mov
mov
push
xchg
roll
lock
xor
mov
sub
adc
xchg
xchg
shrl
inc
cmp
sub
aad
jns
jne
xor
jae
test
jb
adc
repnz
xlat
notb
icebp
xchg
addb
sahf
adc
test
pop
mov
in
in
scas
and
or
rolb
test
aad
cmp
fstp
dec
inc
stc
movsl
and
xor
or
xchg
aam
pop
fldt
push
fmull
aad
pushf
xor
mov
pop
push
mov
mulb
hlt
cmp
out
pop
mov
sub
inc
out
xchg
ljmp
pushf
dec
sub
pusha
scas
push
pusha
mov
pop
adc
add
sahf
mov
and
out
mov
ret
cmp
test
jne
push
lods
push
notl
jmp
lods
mov
jbe
pop
daa
xor
push
lods
jnp
xor
pop
pop
mov
ss
inc
clc
push
mov
les
push
out
and
daa
testl
out
push
imul
divl
mov
dec
and
in
push
lock
ja
out
push
fidivrl
mov
scas
xchg
orl
mov
mov
das
ffree
incb
popa
hlt
sub
ss
ror
int3
mov
loopne
inc
cmp
sub
scas
inc
push
imul
sub
jne
mov
pmuludq
scas
ja
sub
into
test
or
mov
dec
jne
ret
mov
jne
jo
jg
xor
mov
sub
dec
adc
jmp
cwtl
push
pop
in
push
stos
mov
mov
cli
ds
push
xchg
xorl
int3
and
fbld
mov
pusha
cli
movsl
in
stc
test
int
enter
jl
pop
jmp
shlb
sub
push
dec
sub
xchg
mov
testl
mov
movsb
scas
or
or
pop
cmpl
adc
popf
test
xchg
xchg
sub
pushf
mov
popf
adc
test
pxor
pop
lcall
aam
mov
out
fnstsw
into
pusha
test
cli
fstl
enter
xor
mov
jae
sbb
jb
daa
addl
jne
xor
rclb
int3
sbb
das
xchg
jmp
std
fldenv
inc
fists
push
and
nop
sub
cmpsb
sbb
mov
scas
repnz
cmpsl
xchg
aad
mov
push
test
insb
jmp
jne
daa
inc
hlt
add
mov
test
subl
loopne
adc
adc
cmp
lahf
pusha
adc
cli
out
and
xchg
hlt
push
xor
stos
jo
fwait
adc
dec
rolb
and
jne
or
lea
or
push
sti
mov
adc
pop
and
fadds
addb
fdivl
imul
adc
xchg
gs
inc
ret
jns
pop
push
fldcw
pop
cld
xor
repz
ret
mov
aam
or
data16
sub
sub
xlat
mov
dec
or
jo
mov
jne
sbb
dec
shll
or
in
cwtl
adc
popf
push
sub
mov
jne
adc
xorb
add
hlt
int
sub
push
in
inc
mov
lock
inc
adc
enter
cmp
pushf
push
fucomip
bound
xchg
popa
dec
jo
pop
sbbb
mov
shl
inc
in
dec
push
pop
sbb
mov
mov
xlat
jp
andb
scas
pusha
jmp
push
cmp
pop
jle
sub
and
mov
adc
jp
movsl
insl
rolb
jmp
jne
loope
adc
ret
mov
rolb
mov
pop
or
shlb
insb
cmp
leave
dec
insb
mov
push
test
sti
jmp
ds
dec
add
out
call
popf
ret
add
inc
dec
movzwl
mov
shll
aad
xor
mov
inc
pop
enter
mov
or
mov
mov
imul
inc
loop
lcall
sub
int
icebp
pushf
sbb
xchg
and
rcl
or
inc
inc
dec
sub
add
mov
imul
adcb
fadds
xor
sbb
inc
cmp
adcb
jmp
imul
mov
sbb
and
xchg
xorl
or
sub
sbb
jne
xchg
inc
xchg
lcall
incb
inc
or
add
push
enter
xchg
pusha
dec
pop
pop
mov
xchg
sub
test
mov
mov
mov
mov
xchg
loop
xlat
addl
mov
xor
iret
int3
and
inc
aas
sahf
arpl
add
sub
push
repz
mov
icebp
pop
jbe
in
not
and
gs
mov
fists
xchg
xchg
insb
lea
xchg
adc
into
fldenv
je
outsb
popf
fsubp
sbb
outsb
icebp
in
add
add
fldl
sub
ret
xor
les
ss
stos
mov
lods
dec
fadds
xchg
loopne
fmuls
test
leave
mov
cli
popf
in
mov
imul
lret
sbb
shrl
sbb
sar
insl
in
mov
cwtl
push
inc
into
pusha
jnp
stc
and
aad
repnz
pop
test
icebp
test
in
nop
sbb
mov
cmp
data16
dec
add
xor
pusha
test
inc
out
bound
pop
cmp
mov
mov
add
jecxz
scas
sub
gs
jle
inc
cld
push
mov
imul
mov
jns
mov
test
ficoms
popf
or
into
fstl
stos
sub
pusha
sbb
adc
or
out
mov
pop
movsb
ljmp
push
jo
into
sti
push
pop
add
mov
mov
cmpl
loop
pop
mov
stc
insb
push
and
fistpll
cwtl
js
dec
xchg
loopne
inc
add
test
xchg
sbb
subl
fdivrs
or
call
dec
jg
mov
mov
sarb
sbb
mov
in
cmp
mov
aas
jecxz
mov
or
into
repz
and
mov
loopne
push
fists
add
popa
test
mov
mov
mov
xchg
stos
xchg
ret
mov
jge
popf
imul
mov
add
dec
ljmp
fstpl
mov
pusha
rcl
sub
popf
push
or
iret
mov
pop
scas
push
push
aam
in
repnz
movsl
pop
scas
aas
nop
mov
adc
jbe
rcrl
mov
arpl
jb
adc
hlt
mov
cltd
adc
sbb
iret
jp
inc
adc
mov
and
enter
scas
in
jecxz
ds
dec
mov
clc
ja
loope
sub
fadd
repnz
pop
push
sti
inc
add
cbtw
cs
hlt
mov
filds
rorl
and
sbbb
popf
dec
hlt
aaa
mov
scas
dec
clc
push
into
int
sarl
sub
lods
sbb
sbb
jne
das
dec
add
shrb
pushf
jl
jmp
dec
fbstp
arpl
mov
push
sub
ret
pusha
shll
sar
mov
mov
lea
aam
leave
int
and
cmpsl
push
out
mov
popa
xchg
das
addr16
iret
push
jbe
and
lea
push
hlt
mov
pop
pop
adc
cli
xor
popf
lret
loop
pop
stos
loopne
sub
xchg
fisubs
lret
jge
ret
jle
sub
loop
hlt
cltd
mov
inc
int3
loope
push
mov
stos
hlt
jnp
int3
jae
cld
pop
out
xor
cmpl
sarl
lods
dec
adc
cmp
aas
mov
dec
call
xchg
jbe
dec
int
scas
mov
stc
mov
fdivl
mull
xor
fcmovne
fcoms
jns
add
sub
and
stos
xlat
jne
jmp
ljmp
mov
pop
xchg
mov
fcomps
pop
pop
outsl
lods
cld
jle
or
sub
push
pop
mov
adc
fadds
sti
cmpsl
fbld
push
push
adcb
stos
scas
test
cmp
xchg
push
mov
movsl
pop
xor
xchg
inc
adc
sbb
fcomp
in
stos
orl
roll
clc
add
fdivl
pop
push
clc
push
push
cmp
jle
inc
lcall
add
xor
cmp
xor
cmp
cld
arpl
cmc
pop
xchg
cmp
test
mov
add
in
cmp
jno
mov
aas
mov
fdiv
mov
outsb
arpl
js
aad
cmpsb
or
imul
jp
sbb
fcompl
cmpsl
pop
sbb
or
xchg
xor
mov
pop
mov
pop
add
loop
cmp
fmuls
stos
mov
stc
dec
cmp
push
mov
hlt
leave
jge
add
loopne
data16
xchg
push
arpl
std
mov
cmp
jo,pn
fs
call
into
call
xor
movsl
pop
and
inc
xorb
cmpsl
pop
test
xchg
inc
outsb
sbb
test
cs
add
movsl
mov
cwtl
jp
test
inc
jl
test
cmp
sbb
mov
ret
pop
ret
fucomi
mov
mov
ljmp
add
jo
imul
movsb
dec
dec
jo
dec
stos
test
xchg
push
loop
dec
inc
je
mov
fsubrl
test
jbe
xlat
sbb
jo
sbb
add
rclb
mov
jle
lock
jne
mov
pop
in
mov
roll
shll
sub
outsl
insl
xor
ljmp
mov
pusha
test
mov
and
mov
rol
movl
js
sarl
outsb
adc
or
or
xchg
pop
negl
mov
stc
dec
out
add
mov
ret
jbe
fdivr
add
pop
outsb
into
movsl
inc
lret
popa
mov
jne
ret
or
pusha
fcompl
inc
jle
out
movsl
mov
fists
dec
mov
add
xchg
stc
mov
pop
pop
push
push
pop
adc
cmp
std
outsb
aam
fldcw
or
lock
push
cmp
loopne
into
mov
int3
push
cmp
inc
test
or
jp
clc
into
repz
push
rcll
test
inc
iret
pop
push
adc
cmp
cld
in
pop
mov
test
adc
shl
pusha
cmp
nop
dec
popa
shll
rclb
dec
dec
icebp
sbb
sub
xchg
jne
outsl
add
cld
pop
jae
hlt
int
xor
inc
cwtl
mov
add
sub
dec
out
xchg
cmpsl
rclb
call
movsl
xor
test
push
mov
jne
pop
mov
adc
lcall
adc
lods
mov
and
dec
gs
mov
std
xchg
adc
inc
pop
jle
aad
in
addr16
mov
sub
icebp
iret
popf
ljmp
test
inc
hlt
mov
jno
pop
sbb
in
mov
pusha
imul
mov
js
or
leave
push
cmpsb
sub
outsl
repnz
mov
inc
out
cmp
cli
clc
insb
hlt
jbe
jbe
mov
loopnew
push
pop
jle
xor
push
xchg
mov
push
add
data16
xor
mov
sarl
idiv
add
adc
jno
or
inc
adcl
cmp
into
repnz
mov
mov
es
and
das
mov
mov
mov
pop
test
mov
ds
loop
push
imul
fwait
cli
sub
mov
test
jno
xorb
pop
add
daa
ljmp
lds
mov
jecxz
push
les
xchg
data16
sub
ja
mov
lods
mov
pusha
add
loopne
jne
insb
out
int
xchg
mov
pop
popa
arpl
psllw
dec
adc
mov
mov
cmp
push
add
push
mov
and
cmp
test
test
pop
mov
insb
andl
lds
add
cld
rcl
cs
cmpl
andl
sti
mov
fdivs
jb
enter
xchg
icebp
xor
inc
jp
lods
shll
inc
dec
sbb
push
out
loope
adc
ret
shll
faddl
pushf
xchg
cltd
lds
cs
jae
das
ds
loop
mov
scas
inc
or
notb
inc
nop
dec
add
test
mov
popa
test
aam
out
insb
ret
fstps
adcl
sbb
ss
add
aas
jns
mov
push
push
adc
dec
push
add
clc
cmpsb
pop
dec
jl
pop
stos
and
jnp
loop
stos
push
cli
inc
shll
std
mov
arpl
imul
andb
jne
xchg
aaa
addb
call
mov
nop
jl
testl
neg
lret
rcl
mov
inc
add
repnz
pop
test
fsts
mov
cmc
addr16
jbe
sub
fldcw
loopne
fwait
push
dec
push
lds
mov
enter
push
xchg
bound
lock
movsb
daa
add
hlt
push
cmp
repnz
cli
sbb
jnp
pop
call
sbb
mov
stos
lret
jne
roll
and
les
mov
mov
das
add
push
lods
rcl
add
andl
nop
push
rolb
or
push
jge
scas
mov
xchg
scas
sahf
cltd
lods
test
out
sbb
test
fidivrs
jne
lret
aas
xchg
jnp
adc
mov
mov
loopne
adc
push
stos
xor
testl
sbb
jge
add
pusha
es
imul
mov
cmp
inc
add
inc
xchg
cmp
mov
call
rcl
dec
jbe
adc
sub
loopne
pushf
mov
fwait
mov
daa
insb
pop
mov
push
mov
pop
fstpl
inc
mov
andb
add
sbb
xchg
push
xor
sub
jle
mov
cmp
cmpsl
xchg
std
pop
cwtl
les
ret
mov
dec
add
add
loopne
or
sub
lods
xlat
push
cwtl
stos
les
sub
inc
fistps
xorb
mov
clc
shlb
xlat
pop
jnp
std
cwtl
xlat
inc
leave
dec
rclb
mov
out
in
vmovd
xor
inc
pushf
int3
fsubrl
std
mov
xorl
out
mov
stc
add
ljmp
add
insl
jb
and
ficomps
adc
shlb
jne
stc
aam
lds
inc
push
hlt
jnp
shrl
testl
push
imul
loop
xchg
es
or
or
imul
xchg
lock
and
sub
jb
movsb
sbb
cmp
mov
cli
test
pop
gs
push
sub
cwtl
mov
hlt
push
inc
add
dec
adc
push
adc
loope
cmpl
sbb
xchg
pop
aas
sarl
jne
mov
les
pop
xchg
and
lahf
jg
test
aad
cmpsl
jns
out
lods
pusha
fadd
cld
jge
dec
in
mov
stos
int3
mov
sti
mov
dec
mov
imul
pop
cmc
push
and
bound
push
shll
lea
cmp
testl
mov
fimuls
lea
add
mov
loope
loopne
mov
imul
push
mov
xchg
jbe
push
or
xchg
mov
xor
mov
add
shl
push
cmpsl
sbb
outsb
orl
mov
in
jno
pop
loop
mov
add
jge
aaa
push
mov
lcall
fstl
push
cmp
js
wrmsr
scas
or
imul
sub
inc
and
mov
lret
in
add
cmp
mov
mov
mov
cmpsb
pop
pop
in
addr16
mov
push
mov
mov
mov
cmp
repnz
xor
bound
scas
loope
sbb
scas
sbb
sbb
and
pusha
imul
and
add
mov
adc
inc
icebp
jb
shll
icebp
inc
cmpl
enter
std
ret
fdivrl
sti
icebp
ljmp
add
push
stos
ret
or
xor
push
fimuls
pop
sbbl
adc
jge
orb
ffree
mov
xor
lock
lods
out
push
xor
shrb
inc
fmuls
sbb
mov
xchg
xchg
popf
inc
sahf
add
stc
stos
iret
jp
add
aas
leave
insl
and
jne
inc
pop
enter
mov
mov
add
xchg
cmp
aad
fildll
shl
scas
cmpsl
sub
dec
insb
cmpl
or
lret
cmp
addb
scas
inc
inc
xor
sbb
dec
xchg
sahf
pushf
hlt
mov
in
jbe
stos
aam
daa
and
mov
mov
scas
int
cli
cmpsb
cwtl
std
xor
mov
call
mov
cs
mov
push
fdivrs
mov
mov
hlt
pop
push
xacquire
test
mov
mov
data16
and
adc
add
mov
sub
push
xor
xchg
adc
cli
popa
lods
std
pop
mov
push
dec
adc
shrl
cmp
adc
cmp
mov
adc
mov
jle
in
pusha
mov
and
jne
sahf
test
pop
mov
jmp
enter
fmuls
loopne
pop
leave
out
push
mov
jb
add
dec
inc
add
xchg
jne
lock
ja
sub
push
inc
mov
or
in
aaa
push
jne
jmp
popa
fimuls
xorl
nop
fisubrs
push
push
xchg
or
addb
cmpsb
jbe
dec
lock
ljmp
lds
add
xorb
xchg
adc
and
rcll
jne
inc
mov
rclb
inc
push
jne,pt
sarl
or
enter
xchg
inc
lcall
fbstp
mov
pop
mov
pop
icebp
shll
mov
sbb
in
les
dec
leave
cs
es
xchg
push
outsb
test
add
mov
adcl
into
fists
pop
xor
lret
sets
sub
inc
or
popf
push
cmp
imul
out
loopne
hlt
int
cmc
aam
push
fwait
inc
sbb
xchg
scas
bound
xchg
jno
jb
push
hlt
sub
rolb
rorb
cmpsb
cmc
mov
pop
add
cmp
pop
mov
add
shrl
mov
hlt
mov
push
test
adc
inc
int
int3
das
mov
out
lods
push
movsb
adc
rep
or
mov
push
push
lret
stos
inc
mov
cwtl
test
xchg
ds
cs
stc
xchg
adc
xor
adc
out
clc
sbb
mov
stos
jne
pusha
jg
scas
mov
add
jo
shll
xor
mov
jne
movsl
sar
mov
jecxz
dec
cli
in
pop
mov
pushf
pop
int3
push
xlat
xchg
std
addr16
pusha
cmp
push
pop
adc
cld
pop
mov
dec
cmc
lods
and
jno
cld
push
sbb
dec
fs
and
and
fsubrl
stos
sbb
hlt
inc
fnstenv
rolb
in
xchg
les
and
faddp
lret
sbb
frstor
push
sbb
pop
or
and
adc
mov
or
jne
sub
js
lods
stc
popl
jge
pop
in
cmp
lea
clc
testb
sub
mov
aas
jle
lds
xor
cld
pop
loope
jne
mov
xchg
pop
mov
jmp
mov
stos
cmp
in
inc
inc
cltd
dec
xchg
fwait
sub
nop
mov
pop
pop
loopne
subb
sahf
lods
push
decl
imul
adc
lods
inc
out
push
enter
lret
out
test
stc
sbb
mov
jne
movsl
into
in
and
pop
adc
push
add
fcom
push
sbb
pushf
push
pop
mov
push
repz
pop
fmulp
gs
adc
cmc
fmuls
xlat
sbb
and
inc
jne
fnstsw
jg
cmp
mov
inc
or
add
xchg
mov
mov
add
cmp
nop
inc
test
mov
pop
nop
pop
mov
into
xor
mov
nop
into
dec
mov
ljmp
hlt
repz
movsb
pop
pop
das
sti
jnp
test
cwtl
test
jl
sti
ljmp
xchg
leave
shrl
leave
inc
inc
or
addl
outsb
jl
popa
enter
std
push
ds
scas
test
cs
fcmovne
or
call
mov
and
sbb
pusha
ret
xor
sub
fs
lret
xor
cwtl
mov
jo
push
enter
dec
mov
ljmp
pusha
nop
test
dec
inc
movsb
fldl
xor
mov
lock
pop
into
pop
cli
popf
popa
jne
in
test
mov
cmpb
and
bound
rclb
lret
sub
ret
cmp
push
push
orb
arpl
nop
mov
icebp
add
ja
mov
xchg
out
in
mov
dec
sbb
jmp
mov
xchg
leave
inc
sub
mov
mov
mov
jne
cmp
ret
mov
addl
and
xorl
inc
sbb
xchg
cwtl
pop
jne
xchg
leave
int
jno
repnz
stos
lods
inc
xchg
adc
fsubrl
stos
fcmovne
sysret
arpl
in
mov
pop
push
mov
pushf
sub
push
sub
pop
aaa
in
insb
mov
dec
out
movsl
test
outsb
adc
sti
rcll
pop
inc
test
xchg
xor
sbb
lret
cld
neg
push
mov
xchg
out
lahf
jb
hlt
fldenv
out
cmp
lcall
divb
iret
out
and
lds
lods
adc
subb
popa
mov
outsl
sarb
stos
insl
push
push
xor
mov
cmp
test
push
negl
aaa
fildll
mov
outsb
xlat
push
pop
or
mov
hlt
push
testb
pop
int3
cmc
mov
bound
inc
pushf
inc
mov
mov
push
add
mov
inc
mov
mov
test
pop
bound
sub
in
or
xchg
in
fs
push
jnp
mov
cli
jnp
mov
push
cmp
test
mov
pop
sub
jmp
dec
xor
mov
pop
adc
stos
call
sar
sbb
jae
ret
fnsave
leave
divb
pusha
icebp
inc
cmpsb
push
leave
loop
pop
push
pop
subl
hlt
cwtl
dec
xchg
adc
lcall
int3
and
inc
push
pop
xchg
mov
mov
dec
dec
jp
sub
push
imul
fnstsw
mov
shl
lods
inc
inc
mov
outsb
and
jb
aam
sbb
dec
stos
stos
mov
js
sub
adc
out
imul
mov
xchg
enter
pop
add
in
cli
dec
inc
mulb
dec
sbb
pop
test
rcrl
repz
sbb
daa
add
lret
call
cwtl
dec
fstl
lcall
sbbl
test
mov
in
out
jmp
das
mov
in
xchg
add
push
adc
lea
cmp
xor
push
xor
cli
fcoml
test
std
mov
xchg
push
adc
sub
push
hlt
outsb
cmc
subl
roll
mov
fdivs
sub
cmp
add
add
jge
mov
gs
push
push
mov
sub
push
test
pusha
repz
inc
add
cmp
stos
fwait
add
cmp
hlt
mov
mov
fldl
rorb
xor
ljmp
bound
or
dec
cmp
test
cmp
loope
ret
leave
jle
int3
stos
jne
movsl
out
aad
sub
sub
rorl
mov
inc
dec
or
mov
addb
pop
arpl
hlt
ret
sub
pop
jg
xor
mov
push
sbb
cs
inc
rcll
cmpb
jge
adc
andb
cmp
dec
ret
int3
cld
pop
gs
scas
sbb
xorb
inc
nop
sbbb
and
fimull
adc
cmp
in
sahf
mov
loop
es
pop
adc
jmp
enter
les
push
add
xor
push
inc
fucomip
fsubs
dec
mov
shrl
mov
adc
sub
hlt
or
lret
scas
rep
pusha
imul
mov
int
sub
dec
test
jp
sub
sub
inc
xchg
sub
mov
mov
jl
inc
jp
mov
call
enter
ficomps
stos
movsl
fucom
cmp
divb
jne
cmc
lahf
rorb
iret
pop
xchg
sbb
dec
adc
cmpsb
pop
loop
inc
xchg
pusha
push
cld
mov
mov
pop
test
mov
pop
andb
jno
lock
add
out
jne
outsl
movsb
mov
xchg
sbb
loop
pop
lret
orl
inc
sub
xchg
jl
cmp
ret
pusha
add
push
push
jmp
roll
mov
mov
push
or
mov
lds
cmp
imul
mov
lods
sub
and
push
xchg
add
stos
pop
dec
fcompl
repnz
inc
mov
xorl
adc
adc
pop
xorl
cmp
test
push
push
aas
out
das
mov
loop
jmp
nop
jmp
push
les
jl
cmp
aas
sbb
cwtl
into
es
sub
hlt
push
sub
jge
sbb
cmp
into
add
std
inc
call
out
leave
int3
push
mov
add
imul
sub
iret
and
inc
into
jg
nop
adc
movsl
jg
dec
and
out
add
jnp
ja
fwait
test
jecxz
xchg
push
ljmp
fsub
jne
sub
mov
data16
insb
pop
pusha
sbb
lret
mov
cltd
mov
jmp
xchg
mov
cmc
movb
insb
rolb
insb
popf
orl
daa
rcrb
sub
rcrl
adc
pusha
sarl
mov
add
lock
pop
hlt
mov
insb
jb
ror
popf
test
hlt
scas
cmp
lods
inc
inc
dec
fwait
cmp
cmp
mov
and
test
int
xchg
in
mov
stc
xchg
xlat
aaa
sub
orb
sbb
insl
mov
mov
cld
fnstsw
in
xchg
pop
imulb
push
sti
insb
mov
inc
inc
nop
sub
mov
mov
out
dec
jg
sub
loopne
jmp
outsl
cwtl
pop
test
decb
or
leave
movsl
addb
enter
lods
or
jnp
popa
add
fdivrs
mov
ja
es
inc
dec
xor
or
adc
lock
outsl
jne
or
hlt
addr16
daa
clc
add
xchg
adc
ffree
sbb
push
mov
icebp
orl
lret
dec
cmpsl
testb
xor
cmp
lds
hlt
and
push
push
sub
sub
ffreep
lock
call
int3
cmpsb
jno
sub
sub
mov
xacquire
or
aad
inc
mov
jns
xchg
popf
fsubl
xchg
push
mov
outsb
cmp
fistl
test
jecxz
pushf
mov
push
out
insb
jmp
mov
je
mov
add
jne
and
stc
push
mov
mov
adc
push
fmull
roll
or
fildl
add
or
xchg
or
les
mov
outsb
mov
pusha
insl
pop
imul
call
dec
mov
ljmp
js
js
ret
pop
adc
test
je
sti
mov
inc
adc
mov
loope
adc
std
dec
or
fbstp
mov
and
lods
cmc
pop
mov
mov
pmuludq
lea
pop
and
in
pop
jnp
test
movsl
mov
push
lahf
pop
sub
fildll
dec
dec
loop
xchg
pop
jge
rol
test
or
in
xchg
pop
call
lods
or
adc
cmpsl
push
and
insl
push
push
stos
enter
xor
add
repz
icebp
adc
xchg
icebp
mov
sub
rcrb
cs
ss
inc
xchg
daa
adc
mov
leave
jo
inc
xlat
adc
pop
mov
mov
repz
inc
sbb
test
sbb
sub
or
pop
test
mov
mov
hlt
test
xor
in
mov
push
or
popf
hlt
imul
sub
pusha
dec
loopne
mov
add
outsl
xchg
lahf
addb
into
stos
inc
ffree
xor
cmc
fwait
leave
loope
jns
std
adc
xchg
add
push
dec
adc
sub
cmp
adc
push
pop
ss
mov
int3
fmul
pop
aas
hlt
and
add
into
es
fs
mov
test
xchg
lea
ret
dec
jecxz
mov
gs
loope
fimull
pusha
and
push
jmp
shlb
cmp
orl
sub
push
dec
arpl
push
jg
xchg
stos
cld
lds
or
jo
jp
outsl
test
cmpsb
add
sub
stos
cmp
enter
insb
pop
jmp
hlt
pop
xchg
jne
fstl
arpl
stos
adc
hlt
gs
xchg
lcall
mov
jmp
repz
add
inc
outsb
or
mov
cmpsl
xchg
fimuls
or
loope
xchg
pop
adcl
cmp
and
push
pop
or
lods
sbb
sub
jb
push
jg
fldenv
fwait
das
ljmp
or
and
push
outsb
pop
mov
das
pop
or
insl
sub
inc
imul
dec
stos
in
sub
lock
loop
fwait
rorb
push
push
scas
jle
mov
xor
call
dec
push
rolb
inc
sub
addr16
shll
xor
adc
xor
insb
jmp
sahf
addb
movsl
movsl
das
mov
lcall
enter
insb
movsb
movsb
mov
sub
hlt
pop
outsl
aam
dec
and
lock
data16
ljmp
inc
das
or
jns
std
dec
sub
loopne
out
push
repnz
pop
mov
stos
xchg
jecxz
or
cmp
and
stc
ljmp
daa
loope
jne
jl
or
pop
cmc
or
inc
xchg
aam
jg
cmp
sbb
jbe
and
int3
es
adc
jl
and
adc
loop
pop
stos
or
test
and
pop
lcall
sub
adc
pop
xor
popf
xchg
jle
adc
pushf
push
sbb
mov
hlt
cmp
pop
mov
dec
lret
push
test
nop
add
xchg
in
pop
leave
loope
lret
cmp
addb
fcompl
cmc
mov
adc
cs
cmp
push
sbbl
xchg
stos
pop
pop
out
mov
hlt
rcrl
xchg
test
jg
and
movsl
fucom
cmp
pop
cli
sbb
hlt
stos
jbe
push
pushf
sahf
xchg
icebp
sbb
or
shlb
faddl
aam
inc
loopne
sbb
popa
push
push
stos
mov
xor
es
xchg
repnz
cmpsl
cmc
fisttpll
ljmp
mov
sub
hlt
cltd
jp
icebp
scas
sub
sbb
and
cmpsl
aam
or
rcrb
add
xor
cwtl
scas
inc
lcall
push
adc
lret
fcompp
sub
xchg
shl
insl
inc
test
movsb
rolb
loope
das
mov
movsb
xorl
inc
adcl
stos
adc
jne
sub
rcll
mov
out
aam
lods
fs
add
shr
pop
fisubrl
dec
inc
xor
sarl
pusha
incb
sub
repz
repnz
ficomps
sub
or
dec
shrl
or
subl
cwtl
sub
mov
xchg
xchg
mov
push
xor
fldcw
push
add
sbb
rorl
clc
mov
sub
movsb
jmp
pop
test
inc
lea
es
or
stc
and
mov
lods
cmp
sub
pop
hlt
and
xchg
push
and
cmpsb
mov
rorl
addr16
push
out
fs
movsl
lret
add
jecxz
lods
repnz
lret
pop
push
pop
daa
push
sahf
add
insl
repnz
sbb
sbb
sbb
cmp
inc
fdivr
adc
imul
sub
sub
nop
hlt
push
jne
shrl
xchg
outsb
or
mov
adc
sbb
or
shl
jg
cmp
popf
dec
mov
pop
mov
sub
inc
mov
incb
adc
sbbl
loop
into
dec
inc
insl
mov
insb
ja
sub
je
mov
pop
les
lret
mov
mov
fldenv
loope
push
push
jecxz
jg
adc
mov
outsl
mov
insl
inc
iret
bound
adc
xchg
test
icebp
pop
call
and
or
cmp
dec
jg
or
push
mov
das
lods
divb
fldpi
and
stos
ficompl
rorl
dec
mov
mov
jg
mov
in
mov
jge
ret
adc
mov
add
xchg
out
enter
jns
add
mov
hlt
sbb
stos
and
out
je
pop
sarb
int
cld
adc
lods
sub
sbb
mov
xchg
mov
shlb
fcmovne
call
add
fdiv
pop
es
sub
inc
adc
mov
jg
daa
jne
mov
inc
nop
hlt
xchg
int
add
pop
jle
shl
scas
rcrb
cmpsl
test
cli
hlt
icebp
mov
xchg
scas
pushf
add
div
xor
mov
arpl
fucomip
inc
roll
xchg
cmp
add
fldl
mov
inc
test
xor
adc
es
fistpll
rcl
mov
pop
sbb
test
push
movsl
and
nop
gs
xor
push
jae
xchg
lods
xchg
dec
mov
sub
mov
mov
mov
rolb
stc
rcrl
xor
ror
add
inc
pushf
dec
out
jbe
arpl
mov
or
or
ljmp
mov
lock
pop
dec
lret
fwait
sahf
std
ljmp
into
push
cmp
js
lods
call
lods
insb
fwait
adc
test
push
lock
xorb
mov
mov
ror
enter
sub
cmp
in
rcrb
xor
rcl
inc
repnz
gs
jne
sahf
aas
ret
repz
mov
cltd
repnz
shll
xchg
mov
adc
push
jg
sub
push
ja
pop
ret
jne
out
mov
sti
jno
dec
stos
frstor
jne
pop
xchg
add
add
pcmpeqd
xor
or
mov
nop
mov
push
fsubrs
out
mov
test
sar
or
mov
les
std
popa
dec
icebp
mov
jae
mov
push
jle
test
inc
and
dec
mov
in
test
jae
pop
ror
mov
ffree
mov
dec
bound
xorl
add
cmp
lret
cli
nop
into
stos
xchg
out
pop
mov
add
cld
mov
add
cmp
pop
hlt
ss
out
lods
mov
dec
jecxz
imul
sub
cld
xchg
or
aas
and
add
inc
sub
lret
push
xchg
aas
insl
test
mov
pusha
loop
jb
imul
hlt
cwtl
inc
int
mov
ds
push
into
jle
sbb
cs
pushf
rorb
jbe
xchg
repz
outsl
fcomp
xor
cltd
dec
mov
ljmpw
jne
sub
push
ror
and
mov
cmp
and
in
lods
push
pop
push
pop
sub
jp
push
pop
add
add
mov
jp
xor
or
xor
xor
and
cmp
xchg
pop
es
mov
mov
xorb
cmp
dec
mov
loop
aam
daa
int
jb
dec
pop
jno
pushf
shl
mov
mov
stos
gs
clc
adc
dec
in
xchg
enter
mov
fcomp
mov
jbe
xchg
enter
inc
cmp
xchg
mov
dec
hlt
push
inc
cmp
and
mov
repnz
mov
push
inc
pop
cmp
mov
lahf
jne
test
sbb
movsl
jge
roll
jmp
cmp
jmp
sub
xlat
inc
loop
pop
sbb
push
cmp
push
mov
and
in
ljmp
adcb
rcrb
pop
sub
pusha
dec
jecxz
mov
nop
or
cwtl
cld
mov
sahf
mov
std
cs
adc
jp
mov
fisubrl
lds
movsb
pop
and
loope
int
movsb
int3
arpl
int
cmpsb
xor
add
sub
or
loopne
fidivl
push
add
and
xchg
push
stos
sbb
test
out
inc
and
and
ds
stc
inc
cld
hlt
push
adc
lods
push
movsb
xor
movb
rolb
pusha
stos
fldcw
or
movsl
movsl
ficompl
popf
xchg
fidivrl
pop
push
lret
cmpb
pop
mov
push
mov
hlt
fildl
cli
pop
in
inc
pop
int3
jp
xor
hlt
lods
and
idivl
push
aad
add
insb
sbb
sub
aas
hlt
sub
leave
stos
mov
mov
xchg
das
cmp
ljmp
jbe
nop
outsl
sbb
test
adc
imul
pop
push
and
add
or
sbb
adc
insb
insl
std
es
mov
xchg
insb
pop
filds
into
jns
cmc
jl
xchg
scas
mov
cmpsl
push
aad
cmp
or
dec
fs
imul
or
add
pop
jp
sbb
adc
icebp
stos
sub
inc
out
filds
es
jmp
pop
insl
mov
and
fidivrs
add
fbstp
add
fdiv
test
jns
sub
lcall
or
add
mov
mov
divb
or
loope
call
pop
insl
fistps
punpcklwd
mov
cmc
fsubl
fs
jne
xor
addr16
pop
mov
scas
int3
negb
xor
arpl
or
add
insl
sbb
jbe
jne
notb
repnz
andl
sti
or
mov
mov
popf
inc
cmc
or
addl
mov
lods
fldl
mov
cmpsl
enter
mov
data16
inc
mov
andl
push
sbb
xchg
sub
roll
pop
jecxz
mov
push
test
xchg
xor
xchg
dec
adc
jb
cltd
adc
aad
push
gs
mov
test
test
scas
jb
mov
js
sbbb
mov
cwtl
loop
iret
hlt
dec
dec
into
and
inc
push
cmpsb
inc
clc
mov
mov
popa
sub
xchg
mov
inc
daa
out
ljmp
mov
icebp
pop
rorb
cld
jmp
mov
aas
xlat
leave
mov
inc
adc
xchg
pusha
sbb
xchg
dec
and
lcall
jge
pop
and
stos
sub
mov
push
or
fucomp
mov
rcrb
xor
adc
lods
icebp
arpl
add
mov
fcoms
jg
dec
xchg
xchg
add
xor
aaa
lods
mov
xchg
lods
stos
mov
jl
daa
test
es
outsb
leave
pop
sbb
jp
fcoml
inc
add
movl
pop
push
outsb
nop
sbb
enter
shr
add
out
sbb
xchg
adc
pop
sub
mov
xor
dec
add
lds
jnp
scas
sub
jmp
inc
adc
pop
movsl
mov
leave
jne
repnz
stc
std
mov
push
cmp
cmpsl
add
cmp
sub
mov
dec
fucom
repnz
inc
std
jb
push
stc
push
jg
lcall
xchg
call
fcompl
test
xlat
add
scas
shlb
popl
movsl
push
fdivl
mov
hlt
xor
mov
add
fildll
push
pop
inc
fs
fsub
lods
pusha
adc
lcall
push
jae
mov
xchg
mov
inc
popa
hlt
inc
jno
call
enter
loop
add
push
in
lea
into
das
mov
pop
lahf
dec
ljmp
test
push
test
out
repz
add
lock
neg
mov
icebp
jle
jl
mov
or
lock
push
push
xlat
std
mov
movsl
mov
dec
addr16
scas
or
inc
inc
cmpb
mov
sub
jns
rcrl
add
fwait
xor
pop
roll
cmp
mov
dec
mov
xchg
inc
add
mov
pop
loop
dec
out
fcoms
sbbb
nop
fucomip
cwtl
pusha
mov
jl
scas
adc
mov
push
xchg
pop
hlt
sbb
outsb
nop
adc
lods
dec
jge
mov
jb
sbb
dec
dec
jns
adc
xchg
inc
lcall
mov
test
loope
sbb
insb
jne
loopne
or
popa
mov
divb
hlt
xchg
mov
dec
xchg
xlat
mov
cmp
into
adc
pop
orb
mov
test
mov
xchg
lods
shrl
out
mov
shll
ds
adc
jp
sbb
out
int3
and
outsl
stc
insl
movsb
or
sub
jle
hlt
mov
sub
fildll
pop
pop
push
cmpsb
subl
adc
movsl
inc
jns
ss
cmc
dec
add
mov
inc
pushf
scas
notb
popa
xor
push
push
fbld
and
pushf
mov
imul
lret
jecxz
cmpl
xchg
popf
push
mov
mov
andl
jb
and
icebp
mov
adc
mov
and
stos
insb
sbb
hlt
cmp
add
leave
pop
das
cs
or
pop
call
lods
stc
push
push
sahf
push
mov
or
mov
add
dec
adc
push
xor
mov
mov
jae
rol
iret
stc
jmp
jne
lcall
out
add
sbb
add
and
lods
adc
xor
mov
add
popl
adc
hlt
lock
dec
fucom
jmp
or
mov
inc
inc
in
decl
and
add
cmc
insb
cmp
mov
mov
lret
loope
mov
inc
mov
mov
test
xchg
cs
xorl
cmp
movsl
rclb
mov
dec
mov
jg
mov
movsb
jle
add
iret
jne
daa
bound
loopne
jge
or
jge
into
push
fistps
inc
xchg
xor
cmpsl
insl
sbb
jle
rcll
add
loop
fsubl
add
pop
js
popf
out
out
lods
xchg
add
enter
mov
jbe
into
inc
pop
jae
xchg
fs
jnp
iret
cmpsl
insl
fdiv
fcomps
int3
inc
inc
mov
lods
push
fisubrs
sub
test
int3
sub
fldl
and
fldl
mov
leave
cmp
rclb
inc
cmp
jl
pop
add
adcb
fstps
fwait
mov
jns
cmpsl
mov
in
mov
test
inc
inc
in
lock
jne
repz
add
sahf
nop
les
cli
je
movsl
add
xchg
adc
movsl
jl
mov
and
pusha
sahf
in
xor
mov
shll
xor
jbe
mov
jne
loop
pop
xor
ljmp
add
repnz
or
jp
add
sub
loop
into
jb
cmpb
sub
jnp
filds
hlt
cmp
xchg
ja
xchg
mov
imul
mov
stos
jecxz
add
fidivrl
pop
out
push
and
pop
arpl
popa
adcb
inc
fsubrl
shll
push
mov
push
scas
bound
xchg
ss
mov
in
out
push
es
mov
dec
mov
repnz
sub
xor
fistps
int3
mov
nop
lods
mov
adc
sub
jg,pt
lods
mov
jl
mov
rorb
mov
orb
lods
mov
out
adc
push
aas
cmpsl
pop
lods
xchg
lds
mov
pop
mov
ss
daa
lea
andb
loop
xchg
pop
in
push
sub
mov
add
cmpsb
xchg
and
pop
sbb
xor
ja
fwait
adc
adc
in
sbb
addr16
cwtl
add
loopne
xor
mov
in
hlt
outsb
mov
test
sbb
sub
inc
jo
jmp
push
push
mov
mov
shl
andb
hlt
xor
cli
cmp
je
mov
subb
hlt
loop
mov
mov
push
stos
movsl
js
into
xchg
pop
mov
sub
inc
pop
sti
push
mov
shll
sub
jnp
cmp
int3
pusha
or
rorb
mov
add
fisttps
xor
mov
mov
mul
fisubrl
aas
popf
cmp
cmpsl
out
add
sahf
fnstcw
or
lock
popa
or
jmp
into
dec
and
hlt
out
movsl
frstor
shlb
or
jmp
dec
rcrl
pop
mov
cmpl
int
mov
fiaddl
insl
add
ficomps
jp
loopne
jne
imul
popa
mov
fsubrs
adc
leave
xchg
add
es
xchg
mov
leave
in
arpl
inc
das
dec
jne
push
dec
aam
loopne
mov
sub
add
fmul
ds
and
lods
xorl
add
es
sbb
sbb
shrb
mov
das
fcompl
mov
xlat
out
div
cmc
hlt
repz
enter
cmp
push
test
inc
cmpsb
aad
imul
subl
inc
xchg
and
out
jne
popf
ja
jmp
aam
inc
sbb
sbb
stos
mov
xchg
xchg
cmc
mov
xor
mov
fisubrl
cld
mov
sub
fcomps
cmp
testb
stos
rcl
sti
nop
add
ss
stos
dec
inc
push
movsb
jecxz
mov
enter
lods
gs
popf
sub
out
data16
ret
inc
idiv
pop
xchg
lea
mov
dec
loope
test
hlt
adc
addl
pop
lods
mov
lret
pop
mov
push
jmp
into
sbb
xchg
mov
cmc
movb
das
adc
clc
push
enter
scas
push
gs
pop
inc
adc
mov
aad
sbb
mov
lock
cmpsl
nop
test
xchg
lods
mov
scas
add
and
adc
jo
aas
div
xchg
pop
mov
es
push
mov
stc
jne
mov
inc
ret
stc
decl
aas
in
mov
popa
dec
out
aas
push
sbb
andb
iret
aas
dec
mov
loop
cmc
cli
cmc
add
mov
lods
stc
ficompl
or
inc
stos
jl
fisubrl
jecxz
lods
jne
mov
inc
movsb
movl
in
and
xor
inc
nop
cli
dec
sub
xlat
and
add
shlb
pop
out
push
pop
stc
jp
jne
dec
xor
out
aam
leave
addr16
pop
popl
xchg
divb
in
adc
jmp
adc
inc
and
jno
sub
sub
ja
int3
loope
cmp
movsb
dec
iret
movsl
pop
jecxz
cli
test
fnstsw
xchg
movsb
les
adc
jmp
inc
adc
shll
pop
scas
adc
jne
pop
test
nop
inc
or
jb
mov
idiv
push
loope
fnstsw
mov
sahf
add
nop
lea
lea
dec
insb
add
jne
je
sbbl
pop
fstpl
push
xor
in
dec
mov
jae
in
insb
inc
mov
and
sti
add
push
add
push
aas
add
test
aam
inc
inc
inc
or
mov
xchg
insl
stos
jl
sbb
ret
mov
lods
std
pop
cmpsb
das
mov
mov
test
mov
jle
jl
sub
jbe
cld
cli
inc
out
faddl
loope
inc
stos
xor
pop
and
fldl
fsts
mov
add
sbb
mov
mov
arpl
mov
test
add
fidivrs
fisubl
or
scas
es
test
mov
cmp
xchg
xor
fadd
lods
mov
mov
rcr
nop
cmc
mov
insl
adc
lds
xchg
mov
data16
outsb
les
out
insl
inc
ret
add
jo
jnp
inc
push
jne
sub
jle
mov
mov
mov
loop
mov
mov
out
sti
mov
cmp
push
or
xchg
fucomip
call
test
es
movsb
lea
testl
jne
xor
enter
mov
add
loope
xchg
mov
xor
sub
cltd
cmpl
orb
cli
inc
subl
test
mov
mov
sbb
pop
xor
out
mov
mov
stos
xchg
repz
adc
popf
add
xchg
mov
test
xor
push
lret
enter
rcrl
add
mov
push
push
sbb
gs
mov
mov
sbb
xor
les
jl
fdivr
shrl
repz
inc
inc
repnz
aas
mov
adc
push
leave
jecxz
imul
dec
stos
push
adc
stos
stc
sbb
scas
fnsave
mov
xchg
clc
jge
ljmp
jle
lods
lahf
add
pop
mov
or
stos
xchg
inc
std
loope
jge
hlt
mov
lret
mov
jns
pusha
fmuls
mov
lret
out
repz
clc
dec
int3
push
inc
xor
testb
bound
fdivp
push
data16
mov
lahf
inc
hlt
pop
jg
loopne
incl
dec
cmpsb
stc
add
sub
sbb
enter
add
hlt
scas
mov
mov
inc
popf
shll
and
and
pop
call
adc
sub
pop
dec
in
scas
xor
xor
fbld
xor
aam
into
push
aad
dec
dec
dec
mov
jne
sub
repnz
loope
and
sub
ret
cmc
dec
inc
push
inc
pop
into
hlt
xchg
mov
les
popa
adc
pop
xchg
pop
add
pop
dec
jge
idivl
xor
arpl
xchg
orl
das
adc
add
outsb
jnp
sbb
mov
stc
adc
mov
and
xchg
mov
out
push
push
add
xorb
ret
out
sub
lock
cmp
std
test
pop
mov
push
repz
adc
loopne
sahf
adc
push
cmc
fidivrs
sub
xor
lock
scas
mov
sar
add
sub
jo
xchg
and
ljmp
pandn
push
pop
sub
sub
movsb
gs
jns
push
xchg
leave
test
or
in
sarb
sbb
stos
testb
cmp
xor
test
mov
inc
gs
in
rcrb
inc
and
dec
inc
mov
stos
sub
xchg
or
add
mov
paddusw
lods
push
push
adc
mov
pop
fsubr
sub
mov
scas
jno
mov
add
xor
cwtl
ds
cmp
popf
jne
hlt
jmp
andl
popf
jg
lret
sbbl
enter
shl
add
push
sub
loop
sbb
sub
and
gs
mov
adc
into
mov
cwtl
inc
mov
mov
popa
mov
add
xchg
bnd
repz
mov
push
mov
repnz
mov
sub
push
mov
pop
mov
sbbb
inc
loop
out
into
enter
shlb
inc
adc
push
bnd
movaps
cmp
aad
push
xor
push
mov
mov
or
hlt
dec
leave
test
test
ret
loopne
fnstcw
jge
inc
aam
add
push
add
insb
pop
int3
lods
pop
movl
sbb
or
or
push
sub
hlt
mov
std
adc
cmp
or
cmp
lock
adc
fnsave
sub
out
pop
mov
push
std
xor
leave
mov
pop
sub
sub
stc
lods
cmpsl
mov
sti
insb
and
pop
jl
hlt
lret
pop
mov
popf
jae
pop
adc
mov
dec
dec
ljmp
push
repz
stos
pop
sub
lret
sti
pop
addb
jne
pop
jle
jbe
loope
add
jne
xlat
ss
pop
jmp
insl
sub
cmp
adcb
arpl
cmp
sahf
pop
out
daa
mov
loop
mov
movl
mov
ljmp
xchg
push
jnp
hlt
ret
xchg
xor
mov
mov
dec
or
cmp
or
mov
cmpsl
andl
or
frstor
aad
add
repnz
dec
fildl
sbb
push
hlt
loope
add
insl
xchg
mov
sub
fwait
adc
xchg
add
or
sub
nop
pushf
mov
mov
mov
pop
adc
mov
adc
inc
je
cs
xor
jmp
cmc
gs
add
in
xor
cli
mov
loop
les
cmp
outsb
adc
enter
xchg
cmpb
mov
mov
dec
loopne
hlt
cmpsl
xor
mov
mov
test
add
inc
cs
pop
stc
jl
sub
sbb
and
lods
rol
mov
adc
adc
jmp
xchg
js
xor
mov
dec
mov
sub
mov
cmpsl
mov
rorb
pop
pop
inc
cmpsb
dec
mov
xchg
mov
out
pop
test
adc
jle
jne
jecxz
out
hlt
xchg
push
adc
lret
sbb
out
sub
or
loopne
loop
pop
stos
scas
push
xchg
mov
pop
pop
add
test
outsb
jmp
cmp
inc
inc
push
xchg
push
mov
sub
lcall
lea
rcrb
mov
out
push
cmp
arpl
pop
lea
fiadds
ss
jne
sub
and
iret
sbb
mov
movsl
add
jl
rep
hlt
lret
loopne
das
pop
inc
xor
sarl
jmp
sbb
mov
std
inc
fmull
in
clc
ficoms
arpl
jbe
mov
leave
xlat
cmc
add
mov
call
pop
out
dec
and
push
mov
dec
xor
lock
xor
xor
mov
push
orb
cli
xorb
into
out
mov
add
pop
xchg
push
es
stos
sub
enter
mov
mov
movsb
sub
loopne
sbb
jp
rorl
ret
mov
loop
or
sub
push
sbb
mov
popa
fidivl
popa
jmp
fldl
jno
mov
sti
adc
sahf
sub
inc
sub
lock
pusha
imul
pop
mov
cs
stc
mov
mov
dec
arpl
les
ret
inc
popa
cmpl
add
cmp
cwtl
stos
pop
stos
andl
outsl
mov
xor
mov
ror
add
pop
test
push
das
mov
imulb
loop
pop
in
mov
push
pushf
ljmp
jne
mov
jl
add
mov
sarl
or
pop
sbb
pop
icebp
inc
jne
xor
mov
call
test
stos
or
icebp
push
sub
jle
or
add
jo
pusha
or
popf
xchg
cmp
sub
pusha
nop
mov
in
pusha
mov
aad
outsb
xchg
test
add
stos
mov
lcall
hlt
add
push
push
into
mov
sarb
pushf
stc
daa
fmull
inc
cmc
xor
dec
fs
add
in
mov
pop
loopne
cmp
dec
cmp
cwtl
mov
jl
add
stos
pop
inc
outsl
movsl
xchg
out
out
aaa
jle
aas
fstps
movsl
lock
jle
or
xchg
hlt
adc
ret
inc
cmp
mov
xlat
jno
dec
fadds
shrl
rolb
lahf
stc
les
loopne
sbb
cmp
adc
pop
cmp
leave
nop
xorb
in
fldt
fsubl
push
hlt
xor
loop
cmc
ret
jbe
je
loopne
jnp
fimull
ror
inc
xchg
loopne
aaa
nop
mov
mov
leave
sub
xchg
mov
cld
daa
out
pop
shll
dec
mov
movsl
insb
sbb
or
inc
cmp
cmp
and
jb
pusha
ja
loop
int
pop
movsl
outsl
dec
xor
sbb
mov
test
jge
icebp
add
icebp
dec
dec
clc
adc
dec
adc
loope
jg
popa
push
repnz
icebp
cmc
xor
fcomps
hlt
int3
lcall
cs
aaa
add
call
fcom
or
xchg
sub
stc
dec
cmp
inc
fisttpl
enter
loope
sub
pop
in
enter
inc
mov
popa
mov
add
mov
pop
cmp
shrl
mov
gs
push
fdiv
cmp
int
inc
dec
arpl
js
scas
andb
stc
leave
mov
add
xchg
jg
cmc
or
pop
add
xchg
push
xchg
xchg
add
fmull
pop
xchg
xor
adc
maxps
add
out
ss
js
sub
int3
pop
cmp
add
test
mov
ja
test
mov
jne
ret
movsb
mov
call
cmp
add
inc
xchg
mov
jo
insb
repnz
roll
orb
sbb
inc
stos
mov
push
mov
adc
sub
fst
leavew
jecxz
sbb
sub
mov
outsl
mov
dec
sub
stc
xorb
dec
enter
pop
fdivl
adc
push
in
rclb
movl
bswap
pop
dec
shl
out
pop
or
mov
fs
nop
enter
lods
pusha
stos
lcall
pop
sti
stos
insb
adc
notb
push
std
and
pop
sub
pushf
mov
int3
or
je
arpl
add
les
popf
inc
test
adc
ja
push
xchg
mov
or
add
mov
enter
out
jmp
addl
sub
jne
mov
fs
and
in
add
or
cmp
insl
outsl
add
mov
lods
mov
rcrl
out
push
imul
push
jne
in
lods
dec
dec
cmp
or
sbb
inc
mov
xchg
jg
movsl
mov
mov
rolb
mov
nop
sub
insl
sbb
mov
jb
mov
cltd
stos
jg
lret
inc
mov
add
jnp
popf
mov
stc
bound
sub
rcrb
or
xor
mov
nop
test
pop
mov
add
int
daa
cmp
adc
out
and
push
adc
jp
hlt
push
dec
addl
sub
into
std
out
lock
jge
mov
adc
add
mov
sub
lret
lock
sbb
cmpsb
iret
dec
mov
in
add
inc
fcoml
movsl
stos
mov
lea
sbb
or
sub
jle
pop
fs
sbb
push
pop
jle
nop
icebp
dec
sub
int3
fucom
scas
aad
mov
rcrl
add
testl
hlt
les
pushf
pop
orl
pop
ss
mov
addr16
fnsave
xchg
shl
lds
int3
cmp
inc
js
das
test
testl
cmp
stos
sub
mov
arpl
out
popa
das
pushf
push
jmp
pop
scas
and
test
inc
cmp
inc
push
add
inc
mov
jp
les
xchg
iret
imul
aas
pop
inc
or
xchg
push
dec
xchg
std
rol
scas
dec
into
paddsw
push
out
mov
inc
test
dec
imul
lret
mov
push
push
dec
test
xor
mov
mov
dec
push
lods
sub
rorb
add
hlt
js
mov
xor
add
test
rcll
cmpsl
sbb
push
xor
in
ds
jmp
shl
sub
popa
pop
ds
cwtl
jno
ds
add
xor
cmp
sarb
scas
insl
inc
xor
movsb
adc
cmc
popa
jl
cmp
movsb
ljmp
das
and
mov
cmp
cs
lret
daa
add
dec
movsb
pop
ffreep
movsl
and
mov
adc
mov
jne
inc
jg
push
mov
cwtl
aad
jae
sbb
fisttpl
inc
inc
int3
shrl
stos
jge
or
fbld
lcall
lea
sbb
push
and
loop
add
stc
add
sbb
mov
mov
and
ficoml
and
lret
add
into
lcall
mov
jno
add
jne
call
pop
in
xchg
imul
das
pop
mov
pop
mov
mov
mov
jne
mov
sub
cli
movsl
jne
jns
rolb
out
jno
shlb
xorb
sahf
jae
outsb
in
outsl
mov
xor
xlat
dec
pop
xchg
in
cli
flds
jne
inc
scas
test
iret
mov
mov
fdivr
mov
cmpl
inc
mov
int
mov
pop
shlb
push
or
xor
jo
sahf
aam
xor
in
sahf
xchg
repz
push
out
and
hlt
dec
sbb
add
nop
jnp
mov
incb
sbb
push
jp
or
lods
insb
mov
add
imul
mov
xchg
cwtl
xor
mov
inc
mov
enter
adcl
cmp
dec
and
hlt
out
mov
inc
sarb
jg
fimuls
popf
pop
popa
or
dec
add
test
xchg
xlat
pop
cs
pop
xchg
scas
or
stos
push
mov
sbb
dec
loopne
lcall
pop
loop
pop
jne
les
out
movsl
pusha
mov
xchg
add
push
jge
jecxz
scas
cwtl
lds
mov
leave
xor
jne
xchg
jbe
rcrb
scas
mov
jne
xor
cmpsl
mov
pop
roll
nop
jns
adc
push
add
jbe
test
jnp
cwtl
push
hlt
cli
js
jno
mov
pop
jmp
push
and
push
inc
imul
or
adc
arpl
enter
popf
sub
dec
andb
hlt
add
pop
jnp
push
add
dec
or
cmp
lods
int3
add
pop
mov
ljmp
adc
jmp
mov
das
enter
in
add
jbe
inc
jge
dec
stos
dec
add
cmp
add
mov
out
jge
mov
stos
pop
repz
and
mov
andl
fadds
std
push
pop
scas
or
jle
jmp
push
stos
sub
ja
fdivrl
movsb
sub
cmpsl
jge
aam
mov
adc
or
fsts
jo
pop
mov
outsb
mov
adcb
stc
fisubrl
cmp
orb
roll
inc
xchg
dec
jno
xchg
lahf
cmpsb
add
mov
add
jg
xlat
xchg
mov
jae
ljmp
xchg
shl
dec
cmp
fbstp
or
push
fs
stos
add
mov
ljmp
mov
imul
sub
cld
inc
xchg
addr16
shl
cmp
pop
pop
or
outsl
popa
popa
mov
push
nop
xor
mov
add
and
push
out
gs
es
cwtl
movsb
jne
ret
or
sti
add
lods
hlt
mov
addr16
mov
js
and
pop
and
lret
inc
pop
cmpsl
adc
rolb
arpl
xlat
rol
hlt
out
ljmp
out
cmpsb
lods
and
and
jmp
fsubs
add
inc
hlt
push
cmpsb
test
inc
imul
push
inc
add
loopne
xchg
or
sbb
cmpsb
mov
adc
lret
cmpsb
push
jne
pop
dec
mov
mov
popa
pusha
push
jbe
mov
fs
add
or
pop
xchg
push
nop
out
pop
add
or
or
cmpsb
aam
mov
mov
mov
lea
fstl
or
sub
fcomp
mov
aas
popf
cmp
adc
inc
push
ljmp
xchg
icebp
mov
jne
xor
test
stos
and
lret
arpl
lods
lahf
cmp
or
in
hlt
mov
add
add
mov
jmp
jp
push
addr16
mov
lret
xchg
mov
mov
cmp
mov
and
dec
add
push
push
popa
lock
mov
and
inc
pusha
pop
sarb
xchg
cmp
mov
push
jp
stos
lea
aaa
sahf
mov
mov
pop
jnp
ret
mov
inc
out
cld
push
cli
jbe
xchg
xor
sub
dec
jo
leave
das
out
pop
lcall
hlt
mov
add
jge
adc
cmpb
pop
mov
pusha
out
jo
push
xchg
mov
jne
in
dec
iret
pusha
dec
out
cli
push
xchg
sbb
mov
lods
mov
mov
test
cmpsb
add
push
lret
push
sti
and
cmp
icebp
sub
jae
loop
pop
imul
adc
lock
out
stos
sub
or
popa
inc
sbb
pop
push
out
int
mov
mov
mov
inc
insl
pop
aam
shll
mov
sub
arpl
mov
cmpsl
or
sti
pop
loopne
lods
sub
dec
enter
pop
and
jmp
jno
sarl
loop
neg
add
dec
xor
xchg
cmpsb
inc
jl
lcall
or
es
xchg
call
jae
push
xor
jmp
data16
iret
push
sub
cli
popa
jl
stos
movsl
loop
and
hlt
loop
rol
scas
xchg
cmp
out
xor
dec
and
cltd
lret
insl
add
out
jbe
cmc
je
and
sub
loope
mov
test
pop
add
mov
fstl
das
es
loopne,pn
mov
add
jnp
scas
sbbb
shll
xor
jbe
enter
and
mov
insb
imul
and
add
aas
testl
or
insb
xor
dec
mov
sub
jno
call
mov
push
dec
test
enter
or
scas
hlt
hsubpd
xchg
adc
or
push
arpl
adc
mov
push
aam
lret
mov
lahf
stc
test
faddl
mov
repz
testb
add
addb
inc
push
sbbl
enter
hlt
mov
loop
cmpsl
jns
jo
div
mov
cwtl
in
sub
cmpsb
cmpsl
jns
push
dec
sub
jns
ds
sbb
das
fwait
stos
subl
mov
dec
mov
inc
loope
in
sbb
lods
pop
movsb
dec
cld
stos
mov
sub
sub
jne
adc
xor
js
stos
mov
mov
call
ja
xlat
dec
jns
add
ljmp
jmp
jne
dec
imul
je
test
inc
test
push
bound
mov
mov
or
cwtl
or
jne
repz
adc
pop
mov
mov
mov
push
pop
faddl
nop
push
in
mov
hlt
lahf
or
fldcw
mov
add
in
inc
lret
cld
xchg
jae
shll
add
aas
mov
scas
push
push
aas
mov
repz
push
cmpsb
into
pop
push
cs
adc
push
mov
mov
jno
mov
ds
push
enter
dec
jle
adc
stos
cmpsl
mov
sub
xchg
les
adc
jl
ret
and
mov
cmp
lcall
cmp
enter
cld
aad
pop
lahf
data16
mov
and
test
pusha
mov
test
mov
scas
adc
cmovnp
inc
leave
dec
ds
xchg
or
inc
add
fcomps
mov
adc
out
mov
test
push
cmp
dec
int3
xlat
or
xor
mov
test
xchg
sub
aad
sub
push
std
pop
pop
and
inc
mov
into
scas
pushf
adc
jge
inc
stc
cmpl
fisttpl
sub
ljmp
rclb
mov
mov
stos
lahf
push
test
lds
mov
mov
aam
mov
mov
sti
outsb
daa
scas
push
jne
stos
lock
inc
cmpsl
add
dec
jne
jmp
shl
sub
rolb
inc
mov
gs
repnz
ljmp
sti
mov
xor
out
sub
aas
xor
sub
lcall
add
push
mov
mov
lock
mov
addb
rcr
xchg
inc
xor
sub
xchg
shr
ds
fbstp
frstor
inc
pop
sbb
mov
sarl
xchg
cmp
es
hlt
out
jo
nop
push
add
sub
mov
ret
pop
scas
lret
xchg
aad
or
add
and
mull
ror
mov
test
mov
decb
jle,pn
stos
or
fldcw
scas
das
int
fsubs
pop
cmp
jnp
and
xlat
filds
cmp
mov
xchg
dec
arpl
pop
mov
dec
push
rolb
loop
xlat
jp
stos
loope
inc
inc
out
out
xor
pop
nop
xchg
cwtl
lcall
and
pusha
inc
sub
dec
out
mov
fsubs
push
aas
mov
test
jb
or
or
mov
filds
sbb
cmpsl
dec
add
mov
lcall
pop
cmpsb
mov
dec
leave
dec
mov
sbbl
std
cmpsb
jno
imul
add
mov
arpl
pop
or
sub
loopne
dec
hlt
add
sub
aam
and
inc
mov
cmp
inc
add
hlt
imul
rcrl
xorl
inc
mov
jb
jl,pt
xor
jge
test
mov
das
xchg
in
test
push
add
jne
popa
add
add
mov
sbb
orb
adc
add
pop
cmp
inc
out
lock
sub
lahf
lret
rol
push
jne
fwait
pop
cmp
mov
lods
stos
jg
mov
sbb
mov
shlb
mov
xor
sub
pop
sti
mov
dec
gs
inc
sbb
lret
jg
es
sub
inc
int3
jno
repz
mov
inc
imul
outsl
test
ror
dec
outsl
lds
and
lret
fwait
sbb
push
mov
loop
xchg
push
insl
xor
inc
push
sub
adc
adc
cmpsb
add
inc
int
mov
gs
cli
test
mov
popf
xchg
cmp
pop
enter
mov
jnp
lods
dec
loopne
push
xchg
xchg
leave
mov
shl
mov
inc
or
rcl
push
test
dec
cmpsl
push
dec
lock
daa
or
test
imul
jecxz
push
outsb
or
lcall
push
xor
stos
jbe
mov
into
push
cmpsl
sahf
mov
xchg
add
xchg
sbb
jl
sbb
push
fxch
xchg
leave
aas
testl
mov
leave
rorb
xor
daa
xchg
adc
xchg
sub
inc
inc
mov
rol
loope
adc
and
mov
sub
adc
out
fincstp
lret
jmp
xchg
xchg
cmpsb
fs
test
cmc
insb
inc
inc
mov
dec
pop
mov
cld
pushf
mov
inc
mov
pop
xor
andb
xor
push
scas
outsl
movsl
sub
addb
out
les
pop
das
adc
xchg
cmp
scas
xchg
in
push
xchg
sub
dec
jns
cmpsl
adc
mov
mov
cltd
sti
lock
fstpt
cwtl
in
int
sub
xchg
inc
out
adc
inc
pop
inc
cld
sub
cmpsl
ds
and
addr16
jnp
cmp
or
nop
add
xor
jne
daa
mov
inc
add
push
into
shll
jg
adcb
pushf
add
adc
xor
cmpb
stos
sub
in
mov
fisubs
nop
addb
les
rorb
test
jne
sub
adc
add
es
add
mov
nop
dec
lahf
test
div
jmp
mov
cwtl
enter
hlt
inc
movsl
and
xchg
dec
xchg
xchg
xchg
arpl
mov
add
int
into
fmull
rorb
xchg
jg
cmp
jo
jne
adc
jle
test
sti
push
ljmp
xor
js
out
ficoml
enter
test
mov
or
daa
test
aam
sub
xchg
mov
fnstsw
xorb
add
push
imul
inc
hlt
xchg
mov
cmp
leave
insb
mov
mov
jb
stos
fwait
xlat
and
arpl
add
sti
mov
ds
add
rep
add
inc
add
stos
add
jg
cmpsl
stos
scas
mov
push
fcmovnu
imul
push
inc
mov
push
jnp
pushf
add
bound
inc
imul
jne
mov
subl
or
aad
les
mov
int3
movsb
pop
stos
out
add
mov
lods
fdivrs
cs
inc
lods
pop
mov
imul
movsl
push
add
pop
dec
inc
or
mov
or
sub
sub
addl
loop
add
jns
sub
pop
mov
sbb
call
adc
cmc
icebp
nop/reserved
cmc
in
dec
xchg
xor
mov
inc
sub
dec
inc
flds
das
arpl
and
iret
scas
xchg
ror
add
rcrb
push
nop
outsl
mov
fists
ret
addr16
inc
cmpsl
sbb
aam
loope
cmp
inc
push
test
cmc
xor
ret
mov
leave
jb
add
hlt
or
jb
xchg
imul
in
cmp
sub
jns
or
popf
mov
add
jg
mov
xor
lods
es
les
in
and
into
xchg
hlt
mov
push
adc
pusha
and
test
adc
jne
mov
pop
stos
sub
in
sub
sbb
inc
sbb
inc
je
test
cld
jp
cli
fs
xor
cli
out
pop
add
into
mov
in
jb
pusha
xrelease
jo
cmp
aas
aam
adc
mov
lret
mov
hlt
sar
jmp
lret
leave
sub
mov
cmpsb
cmc
cltd
mov
out
out
ret
ljmp
dec
or
or
push
andb
bnd
push
xor
xor
lods
dec
and
dec
adc
inc
gs
push
add
push
mov
jge
fst
adc
lods
int
push
data16
addb
popa
pop
mov
sub
mov
enter
aas
rorb
hlt
dec
cmp
pop
in
and
jmp
movsl
cmpsl
adc
rcrb
insl
and
mov
jp
sub
sub
xor
push
xor
xor
mov
mov
and
rorl
loop
lods
call
cs
and
adc
lahf
inc
add
filds
xchg
xchg
mov
fstpt
fwait
mov
adc
test
push
cs
pop
and
je
mov
and
dec
jecxz
adc
adc
mov
imul
mov
push
idiv
out
insl
push
adc
stc
cmp
sub
subl
mov
jmp
lea
loope
imul
and
inc
leave
aad
loopne
jne
es
jae
bnd
sahf
adc
mov
imul
stc
mov
pop
ret
push
mov
add
jne
in
cld
mov
ficompl
mov
and
push
aas
ret
stos
in
inc
cmpsb
pop
adc
std
xchg
cs
les
add
xchg
push
out
stc
popf
mov
xchg
aam
cmpsl
and
mov
roll
jg
jl
inc
iret
xchg
and
pop
mov
insb
mov
dec
hlt
or
dec
pop
rolb
mov
icebp
outsl
outsl
insl
push
xchg
hlt
ret
xchg
sbb
jo
mov
inc
movsl
out
outsl
mov
xorb
add
mov
adc
fisubrl
cmp
mov
insb
xchg
sbb
jmp
call
outsl
add
lea
sub
sub
rorl
inc
push
jne
imulb
mov
mov
fcmovnu
or
scas
sbbb
push
cld
push
dec
icebp
lds
xchg
push
lods
mov
inc
les
pop
xchg
mov
stos
mov
cwtl
pop
adc
inc
gs
ljmp
pop
ja
xor
les
sarb
pop
rcrl
xchg
rorb
push
adc
cmp
icebp
cltd
or
call
ljmp
dec
imul
xor
jne
sub
mov
adc
fistl
gs
mov
cli
pushf
sub
and
addb
adc
test
lods
hlt
mov
push
cmp
test
das
nop
push
push
out
in
mov
dec
add
ret
adc
ret
fsubl
enter
lcall
sub
incb
and
pop
xor
jmp
and
cmp
push
mov
push
ljmp
call
mov
mov
and
fs
ret
out
movsb
mov
fcompl
mov
outsl
or
jno
cltd
leave
mov
xchg
xchg
aad
add
mov
inc
ret
lods
cmp
pushf
repz
mov
fcmovnbe
lods
inc
add
cwtl
call
jne
cmp
into
hlt
mov
add
sub
rorb
cwtl
and
fmulp
mov
lock
push
sbb
xchg
aam
gs
add
test
hlt
pop
and
jb
cwtl
push
adcl
mov
es
mov
xor
adc
outsl
test
mov
fsubrl
repnz
or
nop
aas
sub
hlt
in
mov
mov
ficoms
mov
mov
aas
mov
into
mov
andl
adc
mov
jno
fiaddl
push
lods
inc
cwtl
push
scas
fisttps
lods
add
mov
pop
mov
sbb
orl
nop
and
enter
dec
loopne
fidivrs
insb
xchg
jne
cmpsl
movsl
add
xchg
jle
cmp
and
test
daa
xorl
loop
enter
insl
adc
mov
iret
pop
sub
movsl
icebp
fstl
ja
test
mov
xchg
daa
mov
movsb
or
stos
sub
std
jge
call
mov
test
dec
cmp
xor
lods
inc
jnp
mov
pop
mov
nop
jo
int3
push
les
lock
stos
adc
lea
add
cmp
push
sbb
push
or
jne
pop
inc
or
mov
or
mov
loop
lret
outsb
movsb
imul
dec
xor
pop
push
cmpl
loopne
jl
lods
shlb
or
xchg
scas
xor
pop
sarb
add
cmc
fmulp
addr16
aam
enter
sub
and
dec
sti
or
lds
mov
mov
push
out
cmpsb
add
call
push
xor
adc
sarl
xchg
xchg
lcall
jle
mov
xchg
and
popa
dec
mov
adc
or
pop
pop
bound
add
ss
or
out
mov
mov
jne
sub
scas
call
orl
hlt
enter
shrl
out
pop
jno
pop
add
test
fcomp
hlt
adc
xchg
adc
sahf
sub
decb
rol
mov
add
inc
out
ja
aas
push
in
inc
scas
mov
and
sar
scas
scas
add
fs
daa
add
xchg
lods
out
push
dec
mov
loopne
mov
outsl
adc
jns
mov
hlt
int3
sbb
into
shlb
inc
stos
cmp
xlat
adc
sbb
mov
out
dec
fldcw
sub
jnp
loop
test
repz
gs
inc
mov
mov
je
inc
mov
sbbl
ret
push
out
lret
inc
inc
adc
mov
movsl
add
push
out
push
mov
mov
mov
pop
lret
add
or
or
enter
or
loopne
outsb
xchg
mov
push
lahf
daa
push
jecxz
pop
int3
shrl
or
jns
jne
lret
addr16
mov
jl
cmpsl
std
mov
in
bound
inc
cs
cwtl
in
int
addr16
and
fcomp
mov
and
pop
adc
add
xchg
jmp
pop
jl
cmp
push
sbb
ss
fadd
xorb
cwtl
adc
push
pop
cmp
aam
loope
into
sub
mov
gs
sub
xor
in
cmp
rcrl
cmp
cld
roll
hlt
imul
sti
sarb
adc
pop
sbb
mov
and
pop
pusha
sub
or
xchg
mov
lret
jge
lcall
loope
fmul
cld
test
out
and
cwtl
add
xchg
pop
jne
cmc
cwtl
sub
push
cmc
sbb
int3
je
into
mov
std
cs
leave
mov
pusha
stc
std
rcrb
cmp
inc
pop
sti
std
pushf
mov
adc
in
jne
enter
mov
shll
and
mov
add
mov
mov
jns
pushf
std
stos
in
lret
sub
aad
std
mov
popa
daa
mov
jnp
push
test
movsl
push
movsb
xchg
loop
push
mov
mov
rcrl
popa
sub
outsl
or
pushf
mov
or
stos
lret
dec
std
movsl
push
rcrb
jl
iret
or
mov
int
popa
cwtl
add
out
push
addl
mov
stos
sub
mov
push
push
cmpps
mov
cmp
adc
mov
push
mov
and
mov
add
stos
je
mov
icebp
das
arpl
inc
mov
push
addr16
push
xchg
cwtl
push
xor
push
pop
in
hlt
push
adc
add
ret
add
xor
pop
pop
int
push
dec
sbb
mov
jne
xor
cmp
int
jp
leave
jne
cs
stc
inc
lods
test
in
inc
xchg
movsl
inc
or
ret
shlb
jl
add
bound
xor
jo
std
incb
sbb
ja
popa
pop
add
int3
pop
mov
gs
jecxz
jne
imul
unpcklps
mov
xor
sbb
hlt
and
push
xor
lock
and
in
or
mov
pusha
imulb
aam
jb
sbb
mov
or
cmpsl
xor
sub
sub
das
xchg
int
adc
in
in
fs
subl
sub
orb
repnz
mov
aam
push
cmp
pop
sbb
xchg
pop
insl
push
jne
push
pop
rclb
aad
fucompp
std
sub
dec
or
mov
adc
inc
maxps
or
das
divb
mov
cmp
cmp
cmpsb
mov
mov
mov
insl
sub
daa
cwtl
dec
mov
lea
movsl
ja
jmp
jo
jnp
jp
mov
into
sbb
jo
rcrl
push
mov
sub
adc
adc
xchg
into
mov
lret
mov
aam
mov
sbb
pushf
adc
jne
ljmp
sub
inc
cmpsb
jo
loope
subb
pop
cmp
les
test
sub
cmc
push
addl
mov
add
addr16
xchg
push
jp
negl
xchg
push
jnp
add
rcll
pushf
mov
adc
sub
mov
or
movsl
jl
sti
add
fstpl
lcall
jne
lods
testl
sbb
sub
incl
addr16
mov
aam
addb
dec
ja
fisttps
addl
cltd
mov
in
push
in
or
lods
les
push
popl
shrl
ret
hlt
pushf
inc
into
sub
xor
pusha
nop
cmp
inc
inc
bound
mov
jne
mov
movsl
mov
leave
fs
mov
movb
jb
rcr
fdivrs
in
mov
inc
rorl
in
inc
shrl
add
mov
addr16
pusha
nop
cs
xchg
mov
fsubl
filds
outsl
hlt
jb
fstl
cmp
pushl
cmp
test
push
inc
fistl
fidivs
sub
test
shl
out
mov
adc
dec
and
sub
jp
out
test
push
xchg
mov
addl
fucomi
cs
leave
push
jg
sub
push
aas
mov
andb
movsl
sub
out
or
mov
jae
hlt
xor
add
pop
pusha
repz
sbb
lcall
imul
cmp
push
jbe
dec
cltd
leave
rcr
addr16
jnp
mov
jmp
jne
aam
lds
and
sub
push
pop
sub
adc
cmpsb
lea
cmp
lcall
sbb
pop
out
mov
ret
and
lahf
xchg
or
mov
push
fucom
hlt
xchg
movb
cmpsb
sbb
hlt
jmp
in
insl
es
xchg
adc
ljmp
cmp
mov
mov
sub
mov
sub
cwtl
pop
mov
dec
pop
aaa
mov
xchg
pop
inc
loopne
aas
xchg
imul
in
es
aad
pop
leave
call
adc
push
push
andb
adc
pop
repnz
cmc
testb
imul
push
aas
je
rcl
imul
mov
hlt
push
cmp
shrl
jp
add
and
push
dec
add
and
or
lock
or
inc
mov
ljmp
xor
jg
add
test
mov
add
out
pop
add
scas
hlt
pop
pop
enter
into
pusha
rclb
xor
mov
jmp
cmc
sub
push
mov
and
lahf
out
sub
leave
inc
push
mov
lods
sti
ret
dec
and
loop
mov
xor
mov
pushf
sub
enter
ffree
lods
test
in
sbb
ss
mov
add
mov
or
hlt
scas
repnz
icebp
push
adc
aas
jae
mov
fsubrl
cli
pop
xor
stos
scas
inc
test
stc
mov
or
mov
push
into
incb
scas
xchg
int3
push
push
flds
sti
ss
insl
dec
jl
pop
and
mov
imul
popf
popa
mov
lods
mov
inc
mov
add
cmp
aas
pop
lahf
js
mov
push
cld
sub
je
arpl
fs
xchg
jge
call
scas
or
sbb
or
leave
aas
mov
ja
iret
push
pop
mov
add
scas
jl
inc
jp
test
pop
sti
addr16
and
leave
or
icebp
lock
adc
cmpsl
pop
inc
clc
cmpb
cld
sti
add
inc
adcl
and
arpl
hlt
aas
adc
pop
jnp
ret
add
inc
imul
push
lcall
dec
push
cmp
es
addl
clc
enter
hlt
data16
bound
push
and
ss
out
inc
xchg
jae
jne
or
clc
icebp
sbb
mov
movsb
adc
adc
cmp
xchg
cs
call
insl
mov
xchg
inc
xchg
add
out
out
xchg
jb
inc
mov
sub
mov
lods
test
pop
and
js,pt
rol
sub
sarl
inc
es
xchg
ljmp
jle
lret
dec
add
cwtl
inc
mov
into
jle
andl
sti
dec
push
cmp
dec
xchg
mov
xor
xchg
adc
hlt
ss
sub
dec
or
and
add
push
ds
dec
sub
adc
les
sub
aaa
adc
and
or
pusha
data16
std
add
inc
pop
mov
mov
inc
pop
xor
nop
xchg
pop
cmp
xorb
in
cmc
hlt
add
mov
hlt
cld
jl
xchg
idiv
sbb
xchg
xlat
and
lcall
cli
sub
xchg
jo
lahf
pop
movsl
adc
jo
fildll
mov
loopne
mov
xchg
sub
and
fst
lods
sbb
stos
xlat
fsubrl
pop
fbld
xlat
mov
mov
std
je
sub
inc
mov
xchg
push
mov
test
idivl
movsl
clc
or
jle
mov
or
rorl
lods
add
cltd
sub
pop
add
mov
mov
add
xchg
sub
fiadds
pop
fists
jge
fstpl
lods
imul
arpl
imul
daa
add
jmp
fwait
ja
xchg
shr
push
repnz
lcall
push
int3
xchg
enter
inc
dec
mov
mov
dec
mov
rcrl
cmp
sbb
xlat
adc
dec
push
xchg
sub
insb
push
mov
adc
push
jg
xor
lahf
movsl
push
pop
and
xchg
and
sub
pop
popa
mov
insb
sarl
sbb
test
mov
shll
aad
stos
cmpb
dec
inc
hlt
sub
in
xchg
outsl
hlt
popf
lds
xchg
shlb
adc
pop
mov
sbb
cmp
mov
dec
sub
or
add
adc
nop
jecxz
mov
mov
out
test
fs
fdivl
sub
sub
mov
sahf
scas
cmpsb
or
jmp
cmpl
cli
adc
fildl
hlt
jl
xchg
fcos
mov
std
js
mov
or
mov
rclb
test
cmp
push
inc
cmp
mov
adc
xor
and
fdivrs
mov
xor
and
cmpsl
add
mov
mov
dec
lcall
inc
outsw
mov
jne
das
fadds
sub
and
xlat
sub
std
outsl
cmpsl
aaa
mov
nop
call
jb
sub
xchg
les
mov
or
aad
filds
lock
fwait
mov
roll
push
loope
sub
das
mov
jmp
sahf
scas
sbb
xchg
dec
aas
in
imul
lret
bound
loope
cmp
or
adc
sbb
dec
sbb
inc
ds
pop
pop
or
fucomi
mov
jbe
loope
loope
xchg
or
pop
mov
jp
and
inc
fnsave
iret
mov
xchg
and
mov
out
xchg
pop
mov
cmp
push
pop
dec
jne
es
adc
mov
gs
push
loopne
hlt
fldcw
xchg
pop
stos
lods
and
pusha
and
fsubrl
orl
test
sub
xor
add
add
xchg
jne
sub
data16
xchg
xor
fsub
loopne
cvtps2pi
fcomps
movsl
aam
pushf
pushf
data16
xchg
nop
jne
jmp
jae
ljmp
cmp
inc
and
sub
dec
fnstcw
jbe
inc
gs
sti
stos
inc
ljmp
aas
ja
and
aam
mov
shlb
rorl
xchg
dec
add
inc
mov
mov
jecxz
mov
push
in
insl
fldl
cmpsb
into
adc
jl
adc
inc
xchg
jne
loope
xchg
mov
jae
std
mov
ja
adc
dec
or
aam
inc
jg
jmp
shrl
icebp
mov
and
lods
inc
mov
mov
jne
lods
popf
loopne
sahf
inc
jnp
pop
sub
or
xchg
or
lcall
scas
ljmp
pop
inc
dec
aaa
movsb
jno
scas
mov
inc
test
cmpsb
test
out
or
imul
adc
test
mov
loope
jns
addr16
sbb
and
sub
movsb
sbb
jnp
mov
mov
cmp
push
mov
xchg
pop
in
lcall
mov
mov
outsb
lods
pop
int3
mov
enter
xor
fs
push
jbe
sbb
loope
mov
jno
cmpsl
ss
stos
pop
jle
add
jg
dec
pusha
dec
dec
addb
xchg
add
push
pop
repnz
mov
mov
movl
xor
push
or
mov
adc
inc
imul
inc
stos
jne
movsl
xchg
dec
cmpsb
pop
mov
popa
mov
test
cmc
add
cmp
xchg
sub
cmp
repnz
dec
pop
dec
mov
pop
add
stos
popa
jmp
add
fld
mov
sub
and
imul
jno
loop
pop
ret
inc
and
leave
lret
icebp
xchg
movsl
repz
cs
lods
insb
neg
push
lock
sub
xchg
jle
add
or
or
mov
rcr
aaa
adc
cs
or
mov
lea
cltd
aam
jae
cltd
pop
test
addr16
mov
jg
sub
jne
cwtl
mov
cmc
sbb
cs
insb
jnp
cmp
push
add
pop
pop
adc
and
hlt
sbb
sahf
shrl
int
add
out
xchg
hlt
iret
call
enter
pop
cmp
push
call
insb
mov
lahf
or
int3
mov
xchg
ljmp
mov
jne
xchg
add
add
push
sub
inc
fdiv
xchg
enter
bound
jb
pop
lds
inc
rclb
mov
insb
dec
or
clc
shl
add
loopne
lea
mov
sub
pop
mov
and
sbb
iret
sub
push
iret
adc
jne
jb
rcrl
jne
aad
mov
push
push
jno
repz
inc
out
adc
push
jp
inc
xchg
lock
jne
cwtl
xor
arpl
lock
shrl
and
loope
sub
inc
fs
xchg
das
mov
cmp
fsubl
jne
test
orl
loopne
sub
ficomps
loope
mov
and
je
les
ret
inc
enter
bound
mov
movsl
test
adc
imul
and
clc
dec
fdivr
adc
and
cltd
mov
mov
add
in
jo
stc
sbb
inc
sbb
push
clc
push
inc
aas
jecxz
cmc
sbb
repz
cmpsb
mov
test
or
jmp
xchg
and
jnp
cld
pop
and
lret
loope
sub
repnz
lcall
movsb
cltd
push
rorb
push
inc
cmp
or
repz
loopne
shrb
in
add
stos
pusha
push
scas
sub
insl
jb
inc
sahf
hlt
mov
nop
ja
push
js
mov
add
xchg
or
and
movsl
mov
or
gs
into
stos
pop
mov
ds
and
stos
mov
inc
ss
jmp
adc
sub
add
xchg
std
add
aaa
es
data16
movsl
inc
icebp
fstl
xchg
inc
push
jne
push
adc
xchg
sarl
jmp
cs
sbb
lahf
das
lds
std
xor
lret
mov
fscale
push
les
enter
fiaddl
loop
xor
int3
and
xorb
hlt
mov
leave
data16
inc
sub
pop
imul
aas
adc
xor
or
mov
stc
inc
jl
mov
mov
pop
in
or
hlt
test
xlat
lret
jne
divl
xlat
push
mov
ss
xlat
scas
movsl
mov
repnz
push
rclb
hlt
lret
inc
addl
stos
les
add
sbb
cmp
rolb
mov
xorb
jno
jl
movsb
inc
shll
movsl
jbe
filds
mov
out
jne
mov
rclb
cli
mov
push
das
mov
clc
pop
lods
cltd
xor
cmpsl
pop
mov
sub
inc
mov
or
dec
imul
sbb
mov
sub
xchg
loopne
loope
scas
aam
mov
insb
sbb
mov
es
pop
inc
loop
pop
sbb
data16
test
adc
and
mov
sub
mov
xor
cmc
repnz
mov
adc
stos
loope
loopne
das
mov
add
imul
and
ret
adc
mov
sbb
rcll
mov
mov
movsl
std
in
enter
sub
cmp
jmp
jns
adc
std
jne
popf
cld
jmp
inc
call
test
daa
lock
fistpll
outsl
movsb
lea
lret
sarb
add
ds
mov
stos
add
dec
jge
push
dec
adc
pushf
bndldx
nop
insb
test
sub
rcr
add
and
push
lods
cmp
loopne
and
mov
inc
pop
loopne
dec
mov
xorb
or
jp
sbb
fdivl
fidivl
test
jecxz
movsb
nop
mov
sarl
jecxz
inc
adc
adc
jnp
push
fdivp
loop
iret
pop
dec
pusha
push
sub
js
lods
cmp
jmp
std
sub
mov
add
stos
es
xchg
or
xor
add
fbld
push
ret
xor
cmp
hlt
sbb
das
jmp
push
flds
sub
arpl
subl
or
mov
or
cmp
das
test
jle
mov
in
mov
enter
fstl
dec
mov
dec
adc
mov
mov
adc
jne
mov
mov
rcrl
gs
jl
mov
js
xor
or
dec
shr
dec
loop
cmpsb
enter
mov
andl
out
scas
and
mov
bnd
and
jo
inc
shrl
mov
jns
lret
int3
or
repnz
nop
mov
or
pusha
outsb
dec
jl
pop
es
add
fstpl
xchg
mov
movsb
xchg
gs
push
cmc
adc
leave
stos
sub
fcomps
stc
mov
call
xchg
and
hlt
rorl
push
pop
inc
pusha
jo
push
add
adc
jns
sub
negl
pop
std
in
std
iret
lcall
test
jno
mov
and
scas
lock
shrb
mov
xor
jne
jmp
enter
cmp
test
pusha
lahf
movsl
push
test
cmpsl
mov
test
mov
mov
les
pop
mov
and
sahf
mov
sub
jnp
push
xchg
inc
arpl
hlt
sub
mov
or
or
push
jae
clc
fucomp
sbb
or
xor
mov
push
xor
mov
fldcw
or
inc
cmpsb
jle
push
aaa
dec
daa
pop
cwtl
popa
xor
mov
cs
popf
adc
cmp
call
add
adc
gs
xlat
push
pop
lcall
jl
lcall
mov
test
or
outsl
pop
xchg
cli
movsl
pop
lods
push
push
cwtl
hlt
cmp
in
sbb
xor
cmpsl
fistl
push
shl
jo
repnz
hlt
rclb
push
imul
jl
addr16
mov
fnstcw
adc
jne
and
push
ficomps
enter
hlt
push
sub
ss
scas
dec
mov
dec
imul
xlat
flds
loope
in
test
pop
ret
std
enter
hlt
add
mov
adc
imul
inc
mov
aam
push
inc
jle
pop
test
cltd
sub
sub
gs
nop
jne
jnp
aas
mov
xchg
xor
pop
clc
fisubrs
mov
inc
push
jne
inc
jns
sbb
mov
jle
jb
ficomps
push
mov
fs
rclb
call
mov
cwtl
ja
lods
jne
dec
shlb
inc
test
arpl
mov
xor
jno
push
mov
jg
xor
scas
jle
popf
mov
pushf
sub
ret
shr
mov
cmp
rol
test
jne
nop
jno
xor
or
mov
lret
ljmp
jne
fidivs
add
orl
popf
cmpsl
stc
aad
testb
hlt
popl
stos
push
sbb
jl
inc
enter
std
pusha
fmull
outsb
or
stos
adc
cmpl
mov
pop
addl
call
mov
push
sar
mov
jecxz
fisttps
fisubrl
adc
pop
mov
jne
xchg
fdivs
pop
movsl
adc
shrb
shrb
mov
sbb
daa
push
ret
out
and
push
stc
sub
scas
test
je
cmp
jns
hlt
sarb
dec
mov
adc
push
call
loope
fdivrl
in
mov
adc
jmp
scas
fstpl
ds
js
bound
lcall
in
fstl
push
loop
sub
adc
adcb
lock
push
mov
xchg
jo
loope
jp
xchg
push
movsl
or
jne
mov
xor
push
pop
inc
inc
cmp
jge
or
lcall
clc
mov
and
lods
mov
inc
pop
mov
movsb
or
mov
fisubrl
loop
add
push
data16
mov
add
in
mov
hlt
test
decl
cld
fnstenv
xchg
aam
cmpsl
sbb
aad
sub
in
popa
mov
jle
test
enter
aam
add
leave
mov
mov
jne
pop
es
in
mov
or
jno
mov
jne
sbb
add
pop
aam
ret
pop
fsubrl
test
xor
adcb
sub
shll
in
push
and
pop
xchg
shrl
dec
push
imul
sub
negb
xor
and
push
xchg
lds
xor
into
jne
lret
inc
lock
dec
daa
lcall
sarl
sub
in
iret
ljmp
sbb
jbe
add
fcomp
arpl
in
mov
lahf
xlat
xor
inc
push
push
cwtl
in
test
cli
es
xchg
push
cmpsl
gs
mov
mov
mov
imull
mov
rol
xor
lcall
pusha
insl
mov
lods
mov
cmc
sti
mov
insb
jecxz
mov
mov
pop
out
cltd
mov
mov
mov
xchg
ficomps
xchg
mov
or
xchg
int3
sub
mov
enter
lcall
repnz
xchg
fcomi
je
in
sub
cmp
test
adcl
adc
lea
in
or
imul
mov
adc
out
shll
push
jg
inc
lret
ljmp
leave
rcr
jne
mov
arpl
ds
in
xchg
push
jge
inc
test
outsb
xor
pop
or
lock
sub
movsl
sub
mov
inc
mov
cmp
or
sbb
xor
bound
pop
jae
mov
push
jle
jp
fistps
pop
push
test
movsb
cmp
xchg
fiaddl
adc
add
cwtl
mov
icebp
stc
sbb
xchg
cmp
add
mov
xor
pop
stc
enter
fisubrl
add
into
aad
out
add
aad
xchg
and
out
clc
lcall
stos
out
adc
xor
test
jl
or
dec
fildll
adcb
jle
out
cmpsb
mov
fiaddl
lods
push
ret
push
aad
repnz
popf
mov
std
in
jge
inc
pop
fwait
add
mov
or
sub
mov
xchg
xor
push
bound
into
stos
mov
mov
pop
dec
or
pop
jo
sub
pop
cwtl
subl
stos
into
mov
sbb
jmp
jecxz
aas
xlat
sahf
fsubl
imul
add
add
cltd
add
pop
ror
dec
mov
jne
jo
mov
test
mov
loope
adc
hlt
imul
pop
xor
add
jg
jne
push
popa
mov
and
inc
test
outsl
int3
mov
dec
in
cltd
es
sub
fucom
sbb
dec
adcl
jnp
pop
cmpsb
movsb
cmpsb
jne
push
cmpl
mov
and
and
xor
arpl
xchg
popa
hlt
sub
subl
cmp
movsb
arpl
pop
lret
imul
popf
add
int3
ljmp
mov
dec
cwtl
jge
out
sub
mov
rcll
push
pop
das
push
add
jns
and
fadd
xlat
xor
pop
xor
push
jae
mov
dec
es
pop
cmp
jbe
push
je
fsubs
jnp
jae
mov
xlat
ljmp
cmp
dec
jmp
loopne
aas
faddl
enter
add
fsubs
sbb
lahf
sub
xchg
push
aam
or
test
jge
stos
in
pushf
push
out
sbb
or
int3
add
cmp
add
add
mov
lods
aad
fcomp
hlt
popf
push
adc
loopne
sub
lret
arpl
adc
aad
fcoms
lea
paddsw
call
push
push
loope
hlt
jge
lods
pop
adc
out
pop
std
jne
add
inc
loop
jecxz
pop
mov
pop
push
in
inc
dec
aas
roll
mov
sub
test
or
loope
adc
outsl
xor
jge
push
cmp
and
mov
sbb
pop
outsl
add
stos
mov
popa
xor
or
jmp
xorb
jno
sbb
mov
xor
pop
fmuls
iret
and
iret
loop
sub
nop
xor
pusha
int3
shll
std
inc
imul
nop
insl
bound
jl
push
rclb
jg
cmp
sub
aam
ret
cmc
pop
dec
add
jmp
xchg
dec
loop
push
mov
leave
jo
or
scas
shlb
inc
leave
sbb
mov
mov
dec
call
pushf
xchg
dec
aas
dec
add
pop
das
and
test
stos
sbb
mov
jne
xchg
pop
jl
mov
push
fistps
test
dec
pop
lcall
mov
pop
mov
filds
rol
rorl
mov
xorl
jno
into
stos
sub
fstpl
xchg
cltd
mov
mov
cmc
stc
outsb
jno
mov
andl
aad
cld
insl
mov
mov
rclb
addr16
push
xor
xor
adc
aaa
sub
sbbl
mov
cmp
lea
mov
and
imul
pop
outsl
sub
xchg
hlt
push
stos
orl
dec
xlat
lret
adc
mov
fildll
and
xchg
lahf
shrl
stos
call
jmp
cmp
push
in
and
insl
int
dec
cli
fsubl
sub
imul
jne
movsb
xchg
cmp
sub
out
adcb
fsubrl
rolb
ror
sti
hlt
dec
add
inc
and
clc
adcl
insl
sti
inc
lea
or
add
into
imul
sbb
fsubrl
mov
xor
fucomp
ds
hlt
dec
lock
stc
popa
in
hlt
lods
jmp
dec
pop
jl
cltd
mov
cmp
push
sbb
les
orb
add
popf
sbb
sub
mov
sti
fisubrs
jne
dec
std
lret
ret
adc
sarl
cmp
test
roll
mov
sub
and
mov
inc
inc
pop
jne
adc
jl
xlat
and
movl
mov
jle
sub
cmpsl
sbb
mov
stc
arpl
xchg
dec
add
mov
adc
sbbb
insl
xchg
enter
js
ja
inc
add
jp
imul
mov
jle
push
nop
loope
jl
sub
xor
rorl
js
rol
js
dec
pop
ret
ret
and
push
push
inc
rcrb
enter
fnsave
scas
sbb
cmp
cld
ja
xchg
fisubs
mov
iret
pop
stc
inc
inc
push
pop
inc
movsl
dec
cs
inc
mov
pop
iret
or
mov
std
mov
test
and
xchg
notb
jge
hlt
pushf
in
add
jno
adc
adc
xor
cld
add
xor
enter
cld
push
sbb
xor
test
lods
lcall
cmp
cs
out
stc
add
cwtl
mov
lock
shll
xchg
jmp
fbld
pusha
mov
test
fbld
stos
mov
mov
inc
fisubs
pop
mov
call
outsl
incb
hlt
xor
mov
aad
jl
push
mov
pop
cmp
in
jb
pop
in
mov
test
sbb
xchg
mov
bound
mov
push
scas
cmp
inc
inc
cmc
loopne
push
stc
xchg
shll
pusha
xor
mov
add
hlt
mov
test
pop
call
xor
mov
movaps
out
rorl
fcoml
ljmp
daa
push
jae
mov
in
push
cmp
fyl2xp1
xor
lock
push
mov
mov
nop
lds
loope
dec
inc
out
mov
cltd
test
push
mov
mov
das
push
push
jg
xor
js
xor
sub
jo
mov
lock
mov
loop
pop
add
or
xchg
out
popa
data16
lods
pusha
cmp
inc
pop
cltd
hlt
mov
xor
loope
jge
adc
push
mov
dec
mov
jl
or
dec
imul
cmp
rorl
into
out
les
sbb
leave
lcall
incb
leave
jbe
test
xchg
in
subl
jne
in
andl
jp
sbb
fs
mov
push
sub
decl
mov
pop
int3
bound
and
movsl
aas
xchg
in
inc
inc
inc
imul
pop
xor
hlt
cmp
or
stos
test
mov
cmp
addr16
cmp
outsl
pop
mov
je
leave
orb
fdivs
sti
jmp
js
dec
in
xor
pushf
imul
sarl
mov
cmp
sub
dec
adc
mov
in
and
inc
ja
lret
mov
lcall
hlt
dec
test
addr16
mov
xlat
adc
add
hlt
push
ret
xrelease
js
daa
stos
cmpsl
xchg
repnz
icebp
das
dec
jae
inc
add
push
mov
xlat
ja
fiaddl
dec
sbb
xchg
cs
repz
push
call
adc
xchg
rolb
adc
int
push
jne
sbb
lods
pop
sub
push
lcall
pushf
dec
xor
ret
aad
iret
adc
out
cmpsl
lcall
aad
push
enter
mov
mov
shlw
add
mov
add
inc
mov
mov
lods
dec
rclb
notb
in
stos
mov
pop
jecxz
aad
adc
scas
pop
notl
addr16
pop
mov
nop
mov
pop
mov
ret
jne
push
test
mov
push
or
jecxz
incb
push
js
xor
clc
int
add
jl
movsb
cli
jle
push
imul
bound
add
out
sarb
sub
xchg
jne
mov
xorb
cld
inc
fs
int
loopne
sub
pushf
mov
xor
jl
lock
aaa
pop
lea
push
lods
fidivs
sbb
mov
movsb
out
es
push
daa
mov
mov
jbe
pushf
cmp
push
cwtl
clc
mov
pushf
pop
xor
add
sub
xchg
jg
pop
pusha
mov
lds
loope,pt
mov
lret
sub
dec
adc
rolb
jle
xor
xchg
cltd
mov
arpl
jmp
jecxz
add
xchg
out
out
aam
adc
sbb
mov
adc
fsubl
dec
sub
mov
stos
cwtl
jne
sub
repz
insl
sub
jmp
arpl
hlt
sub
hlt
jmp
push
fcmove
or
repnz
bound
inc
arpl
push
or
adc
mov
lret
popa
jns
cmp
insb
or
xor
stc
imul
or
aaa
dec
enter
jl
adc
data16
imul
ja
jns
sub
sub
aaa
into
xor
pop
adc
sti
push
xor
add
out
push
fwait
mov
js
gs
pop
inc
mov
nop
subb
cltd
std
imul
and
xor
rclb
jne
pop
dec
mov
mov
shlb
fistps
sti
and
sub
xchg
rcrl
pop
push
adc
mov
scas
inc
popa
jne
sub
sub
shlb
in
iret
call
and
cmc
sarl
mov
nop
les
mov
mov
insb
or
cltd
test
jl
push
ret
jbe
nop
jb
mov
cmp
lcall
push
rcl
insl
cs
fisubrs
push
cs
pusha
movsb
movl
test
sub
cwtl
xor
leave
gs
imul
std
mov
les
mov
outsl
push
jnp
add
test
jne
pusha
push
dec
popa
inc
mov
push
or
lods
andb
cmp
jl
mov
adc
jns
mov
std
mov
pop
sub
push
adc
andl
inc
mov
ret
pop
cld
imul
es
xor
cltd
jne
lcall
scas
lcall
inc
es
jne
sub
mov
xchg
js
fsubrs
int3
dec
das
imul
sbb
sub
or
pop
push
push
outsl
cld
lahf
into
push
stos
lret
sbb
mov
ret
enter
mov
std
sub
pop
aad
mov
dec
ret
aam
in
or
cmp
inc
rolb
fdivr
mov
sub
push
cmc
jl
inc
sahf
es
loop
mov
mov
daa
push
daa
mov
pop
add
pop
sub
loopne
les
es
test
outsl
leave
mov
jp
or
pop
scas
push
pop
xchg
sub
pop
inc
loope
cmp
sub
mov
cmpsb
pop
cmpsl
rcr
add
das
jge
mov
jne
add
inc
dec
adc
sub
mov
mov
nop
mov
inc
popf
mov
lods
pushl
and
setge
jmp
mov
or
and
aaa
and
test
jle
mov
out
aas
mov
mov
and
lahf
das
movsb
setl
cmpl
push
orb
jmp
faddl
pop
dec
rcll
pop
add
inc
pop
dec
jecxz
outsl
xchg
clc
mov
mov
mov
ds
xchg
or
sti
fnstsw
sarl
mov
enter
hlt
test
jge
mov
push
inc
divl
jae
andl
aam
xor
pandn
dec
mov
out
adc
aas
inc
loopne
rcrl
or
mov
mov
mov
das
cmpsb
and
ja
ret
sub
stc
test
adc
push
push
test
adc
cmpsb
int
movsb
xlat
jecxz
js
cld
mov
mov
adc
fcompl
mov
cmp
rcr
mov
out
push
push
js
cmp
mov
mov
jl
sahf
enter
fadds
pop
cmpsb
int
cwtl
aad
scas
mov
clc
mov
incb
jne
xlat
sub
and
mov
inc
sub
sarb
es
aam
not
xchg
and
lcall
add
jb
inc
test
add
or
push
hlt
cmp
mov
jl
pop
nop
xchg
pop
jmp
aam
add
add
test
jns
jl
lods
push
push
cld
es
mov
nop
adc
jne
stos
add
add
gs
icebp
or
loop
push
mov
pop
mov
or
cmp
mov
xchg
push
fmul
sub
pusha
mov
movsl
movsl
xchg
inc
pop
fistpl
test
jg
insb
add
cwtl
add
and
jb
rolb
sbb
sbb
mov
pop
mov
mov
jge
pop
lahf
xchg
int3
fbld
add
cmp
inc
movsb
dec
and
cwtl
jne
ret
dec
test
sahf
mov
or
sbb
xlat
fbstp
cmp
in
orl
and
mov
xchg
popf
lret
shll
ret
push
cld
jecxz
mov
hlt
cs
mov
add
and
add
scas
inc
nop
add
nop
sbb
arpl
hlt
aas
insl
xchg
fisttpl
retw
jl
les
or
add
sarl
jecxz
push
repz
dec
rol
mov
fistpl
sub
sub
mov
das
mov
sub
lods
movsl
push
xlat
xchg
paddq
adc
jo
scas
xchg
mov
adc
xchg
push
fsubs
cmp
push
adc
repz
add
movsl
stos
jmp
xorb
cmpsb
fidivl
negl
sbb
sub
ret
fs
jmp
sbb
pop
xor
fsubrs
and
xchg
dec
push
loope
leave
add
push
xor
popa
mov
sbb
pop
push
nop
aam
dec
subl
loope
xchg
adc
arpl
mov
cmp
out
imul
jbe
cmp
outsb
rorb
mov
push
fildll
lods
cmpsl
fcmovne
sbb
adc
mov
mov
negb
jae
enter
in
popf
mov
inc
mov
fcomps
dec
stos
stos
or
xor
flds
xor
mov
mov
ljmp
xchg
jl
int
mov
jbe
mov
loopne,pn
inc
mov
ja
pop
cld
mov
pushf
sub
in
das
stos
dec
sarb
cmpsb
adc
pushf
or
hlt
xchg
mov
pusha
sahf
and
sub
add
into
fistps
add
jbe
jae
mov
test
nop
add
or
add
and
cmp
push
dec
adcb
mov
jecxz
in
mov
push
jns
push
test
ja
daa
cmpsb
pop
stos
iret
and
push
imul
inc
lods
aad
adc
adc
pushf
fcmove
ud0
jecxz
out
leave
pop
sbb
gs
sub
das
lock
ficomps
add
leave
xor
fs
adc
stos
xchg
in
cmp
incb
int3
fwait
push
inc
shl
and
mov
inc
jbe,pt
or
movsb
test
fildl
jmp
call
jns
popa
sbb
push
pushf
dec
test
push
inc
push
add
add
fisttps
mov
lret
xchg
out
stc
loopne
mov
mov
lods
mov
or
mov
das
out
pop
test
ljmp
adc
roll
xchg
fs
xorb
mov
jno
push
mov
sbb
cmc
cltd
addr16
jbe
lods
mov
outsl
sub
inc
push
ds
jp
add
or
push
std
dec
lea
int
sbb
jl
xchg
sbb
nop
movsl
movsb
cmp
cmp
enter
push
addr16
jmp
enter
dec
out
and
push
cmp
sbb
cmpsb
daa
add
fcomps
add
ja
mov
jnp
imul
push
xchg
push
or
lret
add
lods
mov
repz
or
cmpsb
dec
add
or
leave
pop
cmp
jl
push
mov
gs
jg
inc
sbb
lds
xchg
add
stos
test
call
or
pop
cmpsb
cmpsl
lods
xor
mov
lds
in
dec
rorl
cs
out
dec
inc
and
in
ja
mov
nop
fisttps
inc
pop
gs
sbb
xor
in
xchg
mov
shl
es
mov
rcrl
shlb
add
aam
out
push
ljmp
je
icebp
mov
sbb
xchg
rorb
sub
push
add
sub
imul
test
adc
leave
cmpb
cmp
or
cmp
mov
shll
lods
pop
lds
and
push
pop
sbb
outsb
jl
xchg
inc
test
movb
jl
leave
pop
jbe
inc
es
jg
cmp
inc
lock
insl
xchg
mov
shrb
dec
out
test
cmpsl
shl
pop
mov
fnstenv
xlat
je
js
pusha
jne
adc
sbbb
scas
xchg
inc
jmp
or
xchg
gs
xchg
in
iret
loopne
adc
inc
inc
sub
ficoms
dec
xchg
out
pusha
jge,pn
cmp
lock
mov
loopne
and
out
pop
mov
adc
push
inc
rep
imulb
bnd
inc
inc
jne
push
mov
inc
imul
cmc
in
fdivrl
or
in
adc
shll
call
imul
cmp
cmp
lock
hlt
add
adc
fs
inc
inc
imul
jne
addl
filds
mov
gs
push
lahf
jnp
cli
hlt
xor
adc
sbb
mov
out
push
sbb
imul
mov
scas
test
lret
and
inc
lock
push
fcmove
cmp
clc
mov
stos
xchg
pushw
hlt
add
add
idivb
xchg
lahf
mov
lret
dec
es
lret
push
jbe
inc
ficoml
push
inc
and
and
cmp
sbb
dec
mov
adc
jnp
mov
mov
arpl
lods
push
mov
dec
dec
jne
lock
fsubrl
insb
jne
xchg
into
sbb
call
xchg
jbe
add
xchg
sbb
sbb
and
popf
xchg
sti
push
add
cs
jmp
and
pop
xor
push
mov
push
test
aam
xchg
pop
ret
push
mov
imul
enter
frstor
out
add
mov
mov
repz
jns
hlt
inc
jb
pop
repnz
inc
addl
sti
sahf
mov
iret
mov
les
cld
xlat
dec
pop
inc
idivl
movsl
into
pusha
mov
jne
push
mov
enter
inc
lea
mov
fldl
movsl
adc
mov
arpl
push
pusha
movsl
xor
negb
and
push
call
adc
push
rcrb
neg
add
das
mov
sub
or
or
xor
gs
cmp
daa
mov
fsubp
lock
scas
loope
hlt
fwait
push
lods
jp
stc
mov
cltd
pushf
jmp
loopne
cmp
jb
mov
in
sub
inc
pop
cmp
pushf
push
pop
mov
imul
add
movsb
insb
and
scas
xchg
fsubl
jle
jb
sar
push
insb
or
test
sub
leave
cmc
cmp
sub
cmpb
out
push
add
mov
xchg
sbbl
imul
adc
sbb
js
in
xchg
adc
pop
inc
xchg
out
cltd
stos
sub
subb
mov
cwtl
fimull
jno
mov
sbb
mov
xor
sub
notl
cld
dec
fdivrl
jne
scas
scas
les
pop
xorb
fidivl
pop
cmpsb
sahf
adc
stc
and
call
mov
jne
mov
aaa
les
sub
sub
sbb
xlat
pop
push
dec
xchg
enter
and
jb
jne
adc
add
sub
sti
repnz
mov
jl
sahf
cmc
cmp
sbb
cltd
push
dec
fidivs
and
dec
mov
jb
push
jae
pushf
jo
inc
shll
cmp
fildl
xorl
int3
pop
add
aaa
test
fadds
mov
mov
rcrl
lods
cmp
xor
fwait
inc
shll
adc
jg
imul
mov
clc
cmp
les
ret
mov
lcall
test
subl
movsl
sub
andl
sub
loopne
ja
pcmpeqw
mov
pop
mov
cs
out
addl
pop
loopne
xchg
mull
pop
in
jg
std
mov
fucomp
ret
mov
inc
pushf
jae
sub
pop
xchg
jne
push
mov
ror
mov
pop
jmp
test
sub
sbb
pop
test
push
push
test
ss
mov
stos
jne
aas
sub
dec
xor
sbb
test
cltd
push
std
hlt
call
movsb
add
cmpsl
adc
mov
cld
mov
sbb
mov
mov
xor
push
ljmp
mov
fnstenv
mov
xor
loopne
mov
mov
mov
mov
nop
xchg
dec
sbb
jne
dec
mov
inc
movsb
or
lret
mov
sar
xchg
jge
test
jnp
cmpsb
mov
and
out
les
insl
jle
mov
inc
jb,pt
popf
jge
filds
jg
inc
movsb
test
movsl
dec
mov
ds
cld
dec
out
jbe
inc
fsubl
subl
stc
mov
adc
push
jl
adc
mov
or
iret
dec
sub
adc
hlt
fsubs
bound
mov
mov
sbb
out
add
xchg
mov
mov
fldenv
hlt
xor
dec
dec
jmp
xor
jno
shll
insb
divl
leave
mov
cmp
inc
shr
pop
sbb
jg
aad
mov
nop
out
cld
pop
inc
test
insb
enter
fucomip
enter
frstor
test
cmp
or
outsb
dec
push
adc
add
jge
push
adc
inc
adc
divb
pmuludq
lods
add
dec
mov
in
or
enter
dec
cmpsb
insb
aaa
mov
aas
movsb
or
xchg
jg
iret
arpl
inc
mov
xchg
fldl
push
test
lcall
add
orb
sbb
or
mov
imul
jle
mov
subl
jp
stc
lahf
cmpsl
add
mov
roll
dec
add
fadds
lcall
imull
xchg
mov
cli
arpl
inc
je
subb
mov
push
add
push
jp
ds
loopne
lcall
mov
sbb
add
mov
jl
xor
jne
arpl
and
addr16
aam
rclb
push
jmp
or
xchg
dec
pop
mov
imul
pop
stos
lahf
push
sub
inc
mov
js
loope
jno
fisubl
repz
jnp
dec
ljmp
or
pusha
pop
dec
stc
dec
cld
stos
loopne
stos
inc
inc
bound
sbb
and
cld
clc
ja
mov
dec
pushf
mul
push
add
lods
add
cmp
pop
jg
inc
in
mov
sub
adc
xor
jnp
lock
scas
jo
dec
mov
ret
sub
pop
test
out
int
shl
and
rcll
inc
data16
pop
test
dec
loopne
addb
xlat
inc
out
cld
fcompl
and
adc
push
cmp
xor
std
pop
add
addb
popf
mov
push
jne
or
inc
xchg
lock
xchg
mov
iret
fcom
or
mov
gs
cmp
pop
popa
in
dec
scas
into
mov
pop
xor
mov
scas
pusha
popa
xchg
mov
mov
fdivl
pusha
jbe
cmp
sbb
lret
inc
jge
push
sbb
stos
sbb
rclb
ljmp
mov
jne
lock
lods
out
std
dec
test
jle
dec
mov
mov
mov
inc
rorb
jns
divb
lahf
lods
addl
inc
mov
inc
shl
out
andl
loope
jns
xor
cwtl
ret
cwtl
into
fmull
mov
sub
add
mov
fsubrl
nop
pusha
je
mov
call
push
in
rorl
mov
inc
repnz
nop
inc
pop
xchg
pop
adc
cmp
aas
shll
dec
lods
test
push
mov
cs
xor
mov
cmp
jnp
xor
sub
lahf
and
loop
div
mov
and
mov
lcall
or
lcall
xor
test
pminub
popf
lret
aas
enter
xor
push
aam
sti
imul
adc
cld
and
jo
test
shrl
or
mov
pop
xor
dec
and
orl
icebp
mov
cmp
repnz
movsl
dec
inc
loopne
out
aaa
imul
popf
sbb
adc
xchg
icebp
xlat
add
mov
js
leave
inc
add
push
xchg
sub
mov
mov
shl
jae
test
es
mov
jle
stos
fs
pop
add
mov
test
dec
mov
inc
mov
clc
and
sub
leave
adc
sahf
mov
inc
jp
push
xor
inc
sbb
sub
mov
or
push
loopne
jne
mov
pop
xor
aad
and
fcoms
xchg
into
add
gs
jp
call
dec
push
dec
rcl
rcr
fs
imull
ret
jo
in
jne
sub
sub
fcoml
and
ret
xor
fists
sub
outsb
jecxz
fdivrs
mov
mov
mov
cmp
icebp
insl
pop
push
mov
scas
les
clc
adc
mov
pop
out
push
and
push
cmp
ljmp
jg
inc
ret
mov
pusha
sub
jle
xor
dec
mov
shrl
pop
add
sub
jg
enter
test
adc
fmull
push
jp
dec
pop
inc
mov
sbb
pushf
add
mov
adc
sub
push
push
jnp
faddl
mov
hlt
xor
test
mov
rol
cld
pop
mov
push
subb
out
cmpsb
mov
scas
mov
fisubrl
dec
mov
mov
or
pop
repnz
sbb
rcrb
fsubrs
add
sbb
sbb
mov
mov
mov
jne,pn
test
decb
inc
subl
in
gs
inc
push
pop
cmp
sbb
popa
pop
inc
dec
pop
jne
dec
scas
inc
in
pop
sti
stos
shll
test
mov
push
pop
xor
xchg
xor
xchg
loope
inc
scas
push
cmp
pop
ja
inc
jne
adc
mov
lret
idivb
push
inc
stos
mov
fadd
hlt
insl
cs
mov
mov
hlt
push
aas
dec
pop
xor
stc
les
pop
ret
xor
lods
test
xlat
repnz
add
fldenv
mov
in
xor
jl
das
sub
push
inc
pop
sub
pcmpgtw
sbb
enter
sbb
aas
sub
andb
cwtl
cmp
sbb
push
ss
sbb
mov
pop
mov
hlt
inc
lods
inc
shll
mov
int3
sahf
sarl
paddw
cmp
hlt
dec
adc
mov
es
xor
nop
movsb
rcrb
loope
test
lahf
rcl
sub
add
movsl
pop
jle
daa
pop
jne
movsl
std
sub
pusha
lods
std
sbb
in
jmp
mov
js
aad
out
pushf
dec
sub
test
lret
leave
sub
mov
inc
movsl
loopne
frstor
jecxz
mov
mov
fmulp
mov
scas
testb
or
add
xor
cltd
imul
pusha
add
ret
les
pushf
pop
rcrl
xor
jno
rcrl
imul
fs
and
movsb
enter
jmp
stos
or
repnz
mov
and
in
mov
dec
das
jne
test
dec
inc
adc
rorl
enter
xchg
add
stc
fstl
mov
fbld
jbe
mov
inc
dec
mov
pusha
into
sub
test
xor
decl
testb
loopne
rcll
stc
sti
jo
xor
mov
jge
xor
dec
jge
lret
popf
rcrb
mov
lods
jge
out
xor
adc
xor
je
dec
mov
or
xchg
scas
jle
xor
in
sti
add
imul
push
xor
cmpsl
jb
mov
cltd
adc
ljmp
scas
dec
push
inc
pop
adc
fstpl
pop
pop
insl
stos
inc
iret
rcll
les
stos
sub
jmp
mov
xlat
int
dec
stos
adc
test
subb
dec
vmwrite
xchg
int3
enter
out
in
lret
les
out
hlt
test
add
pushf
aas
mov
jb
mov
les
in
inc
std
xor
rcrl
jl
and
rorb
cmp
lcall
inc
mov
add
movsl
jle
jo
pop
es
nop
lcall
sbb
add
push
jae
pop
push
add
aas
aaa
addl
or
jecxz
mov
ja
cmpsl
dec
les
sub
sbb
xchg
lods
adc
fbld
sub
mov
shll
cmc
pop
out
fadds
notl
js
in
stos
sbb
mov
test
aad
jo
hlt
cltd
cmp
imul
scas
pop
enter
xchg
addr16
lock
movsl
loope
out
pop
or
ja
inc
jno
scas
sbb
or
inc
lret
ds
insl
loope
in
movsl
mov
ja
mov
arpl
jg
leave
inc
sbb
inc
imul
testl
hlt
mov
push
jmp
push
mov
pusha
cli
into
aaa
sbbl
mov
cltd
lret
sub
add
mov
push
adc
xorb
testb
inc
inc
hlt
setl
jne
mov
xlat
or
fidivrl
pusha
mov
add
movl
insb
sbb
adcl
cmp
cmp
sahf
push
add
into
push
ja
ror
aas
mov
inc
push
push
or
int3
enter
test
lea
or
mov
sub
dec
sub
cli
jns
lcall
shrb
mov
mov
mov
mov
out
mov
mov
add
dec
cmp
insb
sbb
mov
jge
fldt
dec
fcompl
push
pop
out
fsubrl
xor
mov
and
outsb
clc
push
xlat
rcll
mov
in
inc
loope
jbe
call
jns
fldenv
movsl
xor
add
cmp
in
es
jecxz
in
rorb
jge
or
dec
lret
inc
xchg
adcl
aam
mov
pop
loop
aad
outsl
adc
lahf
aad
lahf
icebp
sub
cmpsl
pop
test
rolb
dec
test
jle
push
cmpsl
pop
jg
push
push
call
out
addr16
out
test
int3
lahf
and
adc
scas
sahf
jo
mov
sub
pop
cwtl
es
incb
repnz
repz
roll
pop
test
movsl
out
pushf
xchg
inc
orl
in
jmp
adc
or
jg
xor
xor
jae
orl
loop
les
inc
mov
push
nop
adc
mov
mov
jne
or
push
js
in
outsb
icebp
mov
movsb
xchg
stos
sub
pop
movsl
pop
shlb
pop
pop
and
int
std
insb
dec
push
lock
aad
jl
into
out
or
push
jecxz
mov
jne
shrb
std
hlt
jmp
dec
les
pop
or
push
inc
out
lcall
test
fbstp
mov
adc
stos
mov
add
lods
test
push
jmp
cld
sbb
jecxz
add
daa
scas
je
xor
imul
aam
scas
stos
jb
push
and
jne
mov
add
pop
insl
mov
jmp
sahf
mov
bound
cmp
adcl
out
pusha
and
cld
filds
hlt
sub
nop
dec
xor
and
int3
lea
pop
out
xchg
lret
xchg
nop
out
jne
jl
imul
mov
push
enter
out
das
mov
fcomip
out
dec
js
xchg
mov
push
adc
and
icebp
int3
leave
jb
mov
sahf
inc
mov
pop
sub
in
mov
adc
movsl
sub
pop
std
xchg
sub
pop
out
cld
sub
lock
ret
lea
imul
mov
subl
sub
dec
add
aaa
adc
out
test
or
inc
insl
pop
orl
lahf
mov
mov
jmp
mov
shll
sub
add
fisubrl
mov
push
cld
gs
cld
mov
adc
mulb
jb
xorl
test
pop
xchg
pop
sub
mull
pushf
adc
out
pop
xchg
ja
in
jae
add
xchg
cmc
insb
fstps
sub
stos
push
decb
xor
or
inc
inc
orb
jl
mov
lock
mov
fists
add
mov
aaa
roll
sub
stos
test
and
out
sub
push
inc
aam
fcompl
insb
fisttpl
dec
out
push
lret
fwait
dec
cmc
sbbb
pushl
adc
xchg
mov
mov
mov
rcl
add
aaa
dec
add
xchg
ljmp
jge
mov
test
outsb
sub
push
mov
mov
inc
pop
outsl
mov
inc
es
jg
pop
lds
out
lods
or
rorb
pop
dec
sub
std
inc
cwtl
jg
jp,pt
mov
xorb
push
jne
inc
xchg
scas
cmpsb
xchg
in
lea
pop
fdiv
jmp
xorb
aad
sub
and
lret
lods
mov
insb
ret
sbb
shrl
cmpsl
les
fstpl
pop
dec
loopne
icebp
sbb
jl
outsl
pop
dec
aaa
ds
aad
adc
mov
mov
pop
xor
lahf
jg
jecxz
sub
push
mov
mov
mov
scas
mov
and
es
decl
or
cli
mov
cwtl
sub
std
inc
pop
add
movsb
sbb
jbe
jmp
add
push
cld
xor
roll
cmp
icebp
hlt
push
add
clc
in
imul
add
cmp
sarb
adc
add
jecxz
pop
popa
mov
sbb
mov
inc
xor
and
jg
add
or
pop
jo
sbb
dec
cmp
lahf
pop
dec
mov
dec
outsl
int3
dec
jmp
gs
mov
and
inc
mov
fcoml
dec
fisubrl
outsl
add
scas
call
enter
test
and
cmp
jl
stc
js
adc
dec
or
test
jg
mov
mov
adc
shlb
cmp
aad
test
jbe
loop
ljmp
test
sahf
and
jns
xchg
mov
push
fst
hlt
add
les
jb
cmp
mov
stos
or
popa
xchg
enterw
cmp
mov
rcl
sti
sub
push
icebp
std
pusha
mov
sub
push
xor
mov
int
mov
in
aad
rol
test
es
dec
icebp
dec
mov
js
or
ret
pop
mov
push
or
dec
inc
imul
test
clc
int3
sahf
xchg
sub
jmp
loop
pusha
mov
lahf
jp
sahf
lret
arpl
std
xchg
mov
into
ffree
xchg
mov
addl
mov
mov
inc
cwtl
es
je
mov
jecxz
sbb
jl
and
rol
sti
sbb
aam
sub
arpl
push
in
mov
lds
cltd
push
leave
adc
into
mov
sarb
mov
mov
sbbb
lock
lea
aas
mov
popf
adc
pop
mov
sub
and
push
push
or
mov
hlt
rcrb
mov
inc
xchg
push
stc
movsl
lret
mov
cmpsl
out
jns
mov
out
mov
and
das
sub
ret
push
das
or
jne
sar
enter
adc
stc
push
fiadds
mov
add
scas
insl
and
sub
add
adc
lret
fisttpl
sub
mov
and
xor
add
xor
movsb
shl
or
push
loopne
push
mov
mov
mov
pop
inc
insb
fdivrs
hlt
cwtl
lods
xor
sbb
jecxz
and
pushf
jne
sbb
jl
scas
add
jo
mov
xor
das
int3
in
sub
ret
ja
clc
cmp
jg
mov
cld
jl
jae
jge
flds
mov
pusha
add
mov
dec
pop
ffree
add
popa
dec
xchg
pop
test
dec
dec
jbe
xchg
xchg
cmpsl
push
in
inc
dec
addl
leave
pop
push
add
adc
or
xchg
pop
xlat
in
xchg
into
popa
and
ret
mov
mov
fwait
mov
icebp
sbb
insb
insl
out
xor
push
and
outsl
push
addl
mov
push
xchg
lds
add
pop
or
gs
ljmp
call
xchg
test
lret
insl
and
mov
cs
stos
jl
xchg
add
int
mov
mov
jnp
pop
enter
lret
aam
cmp
dec
jp
push
outsl
inc
nop
inc
jne
sub
out
aam
inc
add
popa
adc
in
popf
rorl
add
frstor
adc
jns
xchg
call
sub
lret
xor
inc
sbb
xchg
bnd
mov
shl
inc
sahf
mov
mov
mov
aam
xchg
pop
popf
cmp
lret
aaa
ret
adc
fsubs
loope
add
out
xchg
sti
call
or
notl
mov
mov
xlat
stos
out
fdivs
inc
sti
ss
jg
mov
jnp
pop
std
xchg
ret
lods
jle
mov
sbb
add
subl
cs
mov
mov
ja,pn
mov
inc
adc
lea
inc
mov
mov
in
in
push
stc
mov
std
cltd
xchg
pop
cmp
and
sub
sub
daa
les
mov
push
inc
push
jns
or
xchg
inc
scas
mov
mov
es
sub
rcr
mov
daa
xchg
es
addl
adc
or
sub
repnz
adc
out
xor
into
fnsave
inc
mov
adc
and
aad
xlat
rcl
enter
les
rorb
out
std
add
enter
aam
dec
mov
push
dec
mov
ds
add
clc
aad
jno
push
adc
pop
scas
push
hlt
inc
jge
inc
mov
adc
pushf
sti
mov
jmp
mov
xchg
hlt
and
push
push
adc
sub
lock
sbb
dec
arpl
jo
lds
incl
mov
subl
loope
shlb
mov
daa
rcll
movsl
add
mov
push
mull
dec
es
sbbb
aam
jg
jno
adc
fisttpll
and
aaa
sti
cld
rep
xor
push
hlt
dec
mov
fstpt
mov
inc
xchg
fsts
cmp
push
ret
cmc
insl
ficoms
hlt
loopne
std
jge
mov
xor
dec
lret
push
adcl
mov
rorb
and
push
jl
mov
jge
or
inc
fstpl
rcrb
push
jp
push
in
or
dec
aaa
mov
jne
mov
pop
mov
cmp
cld
cmp
jmp
nop
cmpsl
mov
scas
shl
pop
lods
je
stos
rolb
mov
imul
in
ja
or
cld
inc
lret
sbb
mov
mov
sub
int
jp
push
clc
popa
nop
dec
mov
movsb
push
adc
iret
out
negl
push
and
daa
and
test
sub
in
push
mov
mov
jmp
les
fcmovne
test
dec
cli
adc
add
mov
fnstenv
mov
imul
or
daa
js
add
jp
dec
mov
jne
or
stos
and
sub
add
stc
int3
xchg
jne
iret
adc
stc
adc
cmp
add
mov
jge
mov
popf
mov
sti
shlb
lcall
mov
mov
adc
out
std
xchg
fucomp
fstpl
push
pop
jb
or
test
popa
loopne
sub
xchg
enter
push
mov
adc
mov
sub
cmpsb
add
jns
enter
dec
imul
mov
mov
nop
xor
imul
push
leave
les
enter
subb
les
sbb
and
or
fiadds
pop
movl
cli
pusha
nop
inc
call
repz
add
ret
sub
pop
fwait
jb
push
popa
push
xchg
gs
add
mov
in
popf
or
jmp
jecxz
mov
enter
mov
mov
sub
and
shlb
push
iret
or
mov
sbb
pusha
sbb
cmp
cmp
fdivrs
xchg
adc
jl
loop
lods
test
mov
cwtl
imul
add
aam
out
repnz
adc
nop
in
mov
mov
sub
mov
add
das
mov
and
dec
lea
and
jmp
adc
cmpsb
xor
xor
and
das
cmpsb
push
or
push
sub
xchg
mov
pop
push
pop
cmp
ficoms
adc
xchg
dec
mov
pop
mov
mov
test
adc
dec
mov
add
gs
xor
ljmp
inc
enter
loopne
mov
sbb
addr16
and
js
push
addl
cmp
or
fistl
mov
movsl
test
stos
pop
xor
fiaddl
out
lods
or
jnp
fisubl
jl
jle
push
mov
mov
lock
jl
cld
dec
hlt
incb
clc
mov
sub
adc
mov
mov
adc
sbb
sub
pop
es
imul
xchg
imull
xor
cmp
mov
push
jecxz
sub
add
jne
pop
mov
sub
mov
pop
aad
push
xor
cltd
outsb
scas
jnp
test
ror
mov
xchg
push
in
add
jnp
jmp
or
xchg
and
lods
test
mov
or
xor
in
testl
cmpsb
jg
xchg
pop
xchg
data16
in
dec
adc
es
sub
xor
lret
xchg
sti
xor
pop
sahf
pusha
dec
add
pop
shrl
aad
mov
bound
mov
mov
test
and
mov
xor
add
loope
push
scas
push
xchg
sar
jne
and
out
cmp
sbb
mov
lret
mov
add
cwtl
inc
mov
lods
addb
aad
pop
mov
push
push
pop
lahf
mov
push
sbb
test
xchg
xlat
jg
sub
data16
pop
inc
loopne
jne
movsb
mov
data16
mov
push
pusha
movsl
mov
sahf
fildl
cli
add
push
arpl
mov
cmp
insl
jge
jo
aam
cmp
sbb
jle
aad
enter
leave
jmp
faddl
cmp
ljmp
push
cmp
test
adc
movsl
mov
sub
and
mov
call
adc
jb
nop
lcall
lahf
out
jne
pop
in
mov
pop
hlt
jns
adc
push
pop
or
cmc
std
inc
add
shl
imulb
loop
sub
icebp
fcompl
imul
add
outsb
stc
or
sbb
les
mov
adc
shlb
sub
rclb
cld
lods
inc
cmpsl
pop
xchg
lcall
into
xlat
adc
rcr
push
shlb
test
mov
mov
test
push
jl
call
dec
inc
cmp
ret
insl
out
add
jne
jmp
fsubrl
scas
arpl
pop
jp
call
add
or
enter
push
xor
jnp
test
test
or
jmp
ret
out
loop,pn
pop
inc
fs
mov
movsl
movsb
inc
arpl
or
imul
sbb
push
mov
or
enter
push
adc
out
enter
push
loop
shlb
jp
jne
lods
in
fwait
icebp
inc
es
adc
mov
sub
mov
inc
add
xchg
pop
cmc
jae
inc
leave
mov
ss
repnz
mov
stos
mov
xor
mov
jl
lret
push
xchg
mov
mov
pop
aaa
lcall
push
int3
inc
pop
jns
int3
pcmpeqw
jae
mov
and
jnp
push
fstpt
data16
fimuls
and
movsl
add
fisttpl
adc
cltd
shll
pop
inc
jmp
sub
mov
popf
aad
ret
add
sub
add
mov
loope
out
push
mov
xchg
xor
xor
push
filds
dec
mov
enter
mov
fwait
push
shrl
fsubs
pop
jle
insl
inc
push
stos
sub
sub
into
xchg
or
repz
fcmove
repz
adc
andb
sub
fistl
fwait
add
dec
add
rcrl
sbb
xor
test
jmp
add
add
cmp
cmp
iret
loop
int3
xlat
sub
and
subl
inc
mov
xor
in
cmpsb
aad
in
jge
mov
test
cmpsb
pop
or
cmp
adc
nop
add
fldcw
imul
mov
addb
dec
ffree
push
ss
mov
ljmp
mov
mov
sbb
repnz
out
pusha
shll
jnp
mov
movsb
loop
cmc
pop
inc
xchg
pusha
ret
sub
dec
in
test
loopne
or
test
xchg
cmp
mov
sub
shl
testl
ret
cld
sub
lret
dec
std
out
lret
sub
jbe
jmp
jge
xchg
dec
dec
add
sbb
mov
cmp
loop
pusha
mov
rorl
pop
leave
int
and
iret
mov
sub
add
loop
jno
jno
pop
test
add
rolb
or
mov
arpl
dec
andl
inc
imul
sub
push
inc
jae
pop
cmc
pop
jne
shll
hlt
dec
js
jae
movsl
add
fwait
dec
or
scas
test
xchg
xor
aad
dec
hlt
sti
dec
in
test
mov
dec
mov
inc
lods
mov
rcrb
jp
cli
mov
mov
mov
mov
sbb
stc
fimuls
mov
je
sbb
sbb
or
or
push
andb
loopne
inc
fistpll
outsl
pushl
add
incl
movsb
push
sub
fmull
outsl
lock
test
jp
pusha
int3
sti
mov
scas
push
mov
inc
lea
cmp
jl
mov
out
cwtl
xchg
fmull
rclb
popf
or
jne
push
adc
or
les
sti
insb
aas
mov
mov
popf
subb
dec
xchg
std
adc
lods
mov
push
sbb
and
aas
add
shrl
sbb
fcmovnb
pop
jp
sub
cmp
add
pop
insb
xchg
int
pop
mov
mov
add
aam
jne
sub
adcb
xchg
imul
scas
cmpsb
mov
loopne
add
shlb
stos
shll
das
addl
mov
xor
mov
dec
mov
leave
mov
popa
in
add
cmp
push
xor
adc
cmc
sarl
mov
pusha
mov
pop
test
jae
leave
stc
jecxz
icebp
mov
ret
mov
out
test
push
dec
fsubrl
sub
push
cld
or
sbb
clc
xor
test
mov
adc
cmp
fbld
add
fcompl
cli
mov
and
jmp
xor
std
rorb
jne
pop
rclb
inc
hlt
or
xlat
loop
popa
jnp
push
xchg
xor
jno
sti
xchg
and
push
cmpsb
mov
or
inc
mov
sub
loop
icebp
add
in
test
push
add
and
jne
jnp
fisttps
nop
sti
repnz
push
and
hlt
jnp
inc
dec
out
mov
inc
jp
lcall
mov
mov
jge
sbb
or
push
mov
popa
test
cli
adc
test
repz
ret
int3
subb
leave
cltd
and
ss
lret
daa
xchg
sahf
insb
sub
insl
fldenv
outsl
xchg
jg
cs
pusha
push
shr
test
sahf
sub
scas
dec
bound
dec
stos
fimull
stos
add
popf
fdecstp
mov
fisttps
fnstsw
and
cli
and
add
mov
js
fsubs
or
lret
fisttps
and
push
add
insl
push
lds
jg
add
cmp
cmp
cmp
in
xchg
std
jecxz
lods
test
push
rcrl
sub
xor
sub
mov
repnz
stc
sbb
clc
and
push
adc
js
push
cmp
jmp
in
mov
cmpsl
sbbl
lret
pop
ret
stos
mov
push
xchg
pop
insb
sti
jnp
roll
ja
xchg
xor
xchg
sti
out
stos
inc
dec
mov
lahf
aad
xor
inc
arpl
aaa
jg
pop
push
out
mov
pop
ss
mov
cld
push
enter
pop
jle
loope
xchg
adc
std
ljmp
into
sub
cmpsb
daa
enter
push
lcall
incl
ret
or
fbld
jbe
jne
dec
fucom
dec
sbb
jno
mov
ds
mov
pop
out
addr16
mov
xchg
sub
fldcw
add
jnp
pusha
mov
nop
fmul
sbbl
or
xor
push
inc
dec
pushf
jp
and
bound
sahf
jne
add
add
shlb
jb
adc
pop
xchg
das
scas
adc
mov
les
sub
leave
mov
or
cmp
movsb
xorl
jecxz
iret
pop
loop
in
out
bound
ljmp
dec
jp
shlb
testl
xorb
add
jp
sbb
dec
sub
and
mov
mov
in
push
mov
cmpsl
fstl
and
sub
add
mov
dec
fidivl
imul
hlt
cwtl
mov
jmp
cmp
add
mov
inc
xor
or
mov
add
dec
je
xorl
es
adc
rclb
cwtl
inc
push
dec
inc
add
bound
cmp
pop
call
or
shrb
adc
aad
mov
xor
jnp
scas
inc
fcmovnb
add
or
pushf
and
push
mov
or
loop
push
cld
daa
int
nop
jmp
outsl
or
out
js
or
movsl
pop
lock
add
call
out
dec
mov
push
xor
hlt
add
movsl
xorl
inc
adc
andl
out
into
test
stc
mov
sti
push
mov
add
mov
sub
xchg
ret
push
gs
cld
add
sbb
mov
pop
mov
rorb
cld
dec
inc
test
cmp
mov
and
sbb
pop
sbbb
fsubrl
inc
xor
dec
cmp
xorl
in
inc
mull
jmp
xor
test
lahf
fmull
pop
sbb
inc
test
leave
lock
popl
imul
mov
pop
incb
leave
pop
std
pusha
test
pop
adc
cld
scas
push
pushf
call
cmpsl
aad
sbb
dec
cmp
inc
gs
fcmovnu
movsb
in
inc
inc
xor
add
out
lcall
loope
mov
test
jne
dec
add
push
adc
decb
rolb
stos
add
in
sbb
in
loopne
int
add
pop
or
stos
ds
hlt
or
sub
add
push
pop
dec
push
cmpsb
test
daa
sub
pop
pop
arpl
jle
push
pop
lret
xor
push
pop
inc
data16
dec
pop
in
jmp
shl
add
push
scas
ret
data16
xor
pop
mov
fs
or
cli
fstl
out
flds
outsb
add
cltd
nop
loope
inc
ret
pop
hlt
out
gs
add
fcomps
repz
pop
jecxz
adc
mov
out
arpl
int
sbb
scas
adc
scas
test
repnz
lahf
pusha
xchg
dec
cld
inc
sub
push
ja
subb
lcall
dec
jns
scas
xchg
lods
mov
mov
push
jo
jecxz
add
mov
lahf
enter
popf
movsl
rorb
add
push
test
cli
jle
test
lds
xchg
pop
cwtl
into
stos
jnp
les
dec
je
xor
les
enter
push
xor
jge
mov
lret
orl
xchg
fldl
pop
sarl
push
imul
dec
lods
into
or
enter
les
mov
xor
movsl
mov
sbb
mov
enter
xor
xchg
pop
mov
inc
mov
jne
into
xlat
xchg
pop
mull
inc
mov
je
loope
das
dec
ljmp
add
hlt
loopne
test
pusha
rcll
mov
addl
cld
in
es
negb
int3
bound
mov
cwtl
cmpsb
push
movsb
fstl
testb
cltd
test
ljmp
dec
inc
rcr
arpl
sub
stos
sbb
ret
cmpsl
lcall
in
mov
mov
sub
fsubrs
orb
faddl
movsb
jnp
outsb
mov
pop
out
jne
or
ret
hlt
and
lret
orl
stos
adc
sbb
test
das
xlat
test
jno
les
and
add
dec
dec
es
cld
sub
imul
fcoml
insb
adc
mov
popf
adc
add
hlt
addb
repnz
arpl
xchg
pusha
int3
shlb
add
das
stc
sbb
cmp
mov
lcall
fistps
mov
push
aas
xchg
xor
push
push
add
mov
and
pop
andl
incb
movsb
mov
shll
add
jp
inc
inc
cmpsb
imul
adc
js
add
adc
es
adc
jecxz
mov
adc
xchg
dec
xchg
push
lret
in
mov
repnz
pusha
adc
das
mov
mov
daa
clc
inc
mull
cmp
push
les
push
popa
jge
call
dec
jae
sti
jne
adc
or
sbbb
incl
jae
jge
lods
add
leave
std
addr16
cmp
push
test
sti
aaa
cmpsl
sbb
sbb
add
mov
inc
pop
inc
cmc
mov
insb
pop
mov
int3
sub
push
sub
pop
fcomp
jne
cmpsl
and
int3
sahf
or
scas
and
cmpsb
rorb
dec
out
inc
in
test
fxch
xor
xorb
decb
jle
xor
pusha
inc
pusha
cli
mov
inc
imul
add
mov
xchg
or
pop
xor
xchg
fcomps
cmpsl
or
xor
mov
jo
dec
mov
hlt
jge
inc
out
sbb
std
sub
les
hlt
roll
decb
mov
scas
inc
loope
nop
aas
cmp
adc
in
or
pop
mov
sbb
mov
inc
test
ljmp
cmp
cmp
jo
push
imul
dec
jg
jmp
movsl
sub
cvtpi2ps
lock
fiadds
sbb
lods
mov
out
mov
add
shlb
rclb
cmpl
pusha
cwtl
mov
push
aad
mov
idivb
rol
sub
pop
mov
or
push
std
push
push
lahf
jle
or
outsb
inc
jne
inc
mov
mov
add
inc
fldl
mov
add
push
js
jmp
ret
jle
adc
mov
xchg
daa
push
sbbl
dec
sub
add
mov
hlt
out
lret
mov
clc
add
pop
or
jle
rcll
mov
lods
add
jl
cmpsl
xchg
in
scas
popa
daa
mov
xchg
test
nop
lods
rcl
jae
mov
mov
pop
mov
lcall
scas
xchg
sub
pop
and
dec
faddl
daa
cmp
mov
push
and
cmpsb
adc
ret
jbe
rclb
scas
into
pop
add
outsb
fabs
mov
xchg
test
jne
aad
jnp
fnop
mov
pop
cmovbe
xor
ljmp
and
cwtl
imulb
inc
aas
adc
fisttps
jae
shrb
rcrb
or
sub
pop
pop
mov
add
push
mov
scas
fptan
mov
stc
push
cld
lods
shrl
xor
cmp
mov
insl
loopne
dec
xorl
dec
je
repnz
je
hlt
mov
imul
in
aad
fldt
dec
stos
mov
xor
enter
adc
aas
xchg
adc
decb
int3
and
shrb
xlat
arpl
shrl
push
vcvttpd2dqy
mov
insl
gs
inc
inc
pop
sbb
mov
movsl
ret
dec
add
xor
mul
dec
stos
stos
xor
sub
stos
negl
sbb
xor
jne
sbb
add
cmc
mov
jmp
push
mov
data16
test
jb
pop
jg
fs
inc
testl
jmp
pop
into
lods
cmp
sbb
inc
aam
pop
out
in
sbb
gs
sub
fcmovnbe
fs
fld
stos
add
push
pusha
xchg
scas
dec
jge
subl
fwait
stc
jne
sbb
add
adc
cli
push
scas
push
adc
push
xor
push
js
mov
fildll
inc
rclb
movsl
sbb
arpl
pop
xchg
adc
repz
and
push
rcr
cltd
enter
push
sub
or
insl
xchg
lds
aaa
mov
leave
add
ss
add
pop
insl
popf
imull
cmp
push
xchg
adc
js
das
pop
dec
shl
lahf
jmp
add
rclb
push
movsl
outsl
or
mov
add
mov
leave
mov
xchg
jp
clc
shr
shlb
push
repnz
xchg
jno
mov
mov
rcrb
roll
inc
jae,pn
add
jmp
sahf
push
lods
idiv
jae
les
add
jmp
cmc
pop
xor
push
fwait
out
scas
fisubs
xchg
cmp
cwtl
xchg
pushf
mov
mov
cmp
push
push
cmp
outsl
and
sti
imul
jno
xchg
nop
in
pop
sub
lahf
pushf
pop
sub
push
jne
xchg
cmp
fwait
lods
xchg
push
jns
icebp
jmp
fmulp
call
rorl
out
xchg
pop
lods
jge,pt
push
sbb
inc
mov
movsb
dec
lcall
or
paddusb
push
andl
mov
sub
xchg
repz
out
mov
pop
test
mov
jns
hlt
pop
ds
in
fcoms
mov
add
loope
clc
in
or
insl
add
shll
mov
cs
sti
push
cmpsb
insl
mov
jns
inc
mov
rcrb
or
cwtl
add
insl
push
movsl
subl
cmpsl
inc
and
pop
ja
fdivp
jo
das
add
mov
sahf
jne
faddl
dec
mov
sub
scas
aas
add
ds
mov
add
leave
push
rolb
shrl
xchg
addr16
pop
out
cltd
jmp
adc
lods
outsl
mov
insb
sbb
jne
inc
sub
mov
out
xchg
jecxz
jl
jmp
inc
pop
mov
add
dec
xchg
ja
scas
dec
ljmp
mov
mov
xchg
imul
cmp
add
hlt
xor
inc
rclb
xchg
outsl
leave
adc
dec
hlt
gs
jo
mov
ljmp
mov
xchg
push
enter
add
icebp
or
and
jge
leave
sub
sub
enter
push
jmp
testb
mov
or
mov
les
and
and
push
or
xorl
fldl
and
or
std
jp
adc
or
inc
ljmp
inc
mov
adc
mov
xor
subl
dec
jno
mov
jbe
std
enter
hlt
xchg
inc
pop
push
iret
mov
xor
das
dec
mov
cwtl
or
push
sti
pusha
lods
cwtl
testl
clc
fildl
inc
int3
pop
ja
mov
or
mov
outsl
mov
push
mov
dec
out
mov
cli
jp
cmc
add
cs
mov
lret
dec
sub
push
roll
or
sub
sub
add
xchg
out
mov
or
or
xor
pop
mov
jle
aam
sbb
pop
pop
push
jp
test
ret
shl
cmpl
mov
cmp
cmp
adc
test
ljmp
sbb
mov
testb
xor
cmp
filds
sahf
test
movsl
sahf
int
ja
das
loope
sub
sbb
fsubrl
mov
rcrb
shrb
lock
xchg
inc
mov
jns
xchg
fdivrs
rolb
loop
add
out
fucom
stos
push
mov
lcall
pop
loop
adc
ja
inc
jno
ss
fmull
in
xchg
sbb
dec
stos
and
jp
enter
hlt
insl
cli
call
adc
dec
jle
ja
jl
jo
scas
push
jae
cwtl
jne
jnp
and
dec
adcl
ss
mov
push
cli
mov
bound
push
push
dec
roll
xchg
outsl
ret
lock
shlb
dec
rorb
outsb
clc
data16
jne
inc
xor
add
imul
cmpsb
xchg
nop
dec
js
movsl
pop
fdivl
xlat
test
ja
mov
jmp
xchg
les
cmp
sbb
jae
jae
xor
mov
jae
xchg
fildll
stc
ss
jno
icebp
xchg
sub
mov
cwtl
sub
mov
lods
or
imul
mov
test
xchg
call
mov
int3
std
jmp
or
and
movsl
cld
aam
push
xchg
aam
push
jp
pusha
mov
cmc
xchg
in
scas
mov
jl
aaa
popf
sbb
cmc
sub
stos
les
fsts
adcb
dec
and
sub
xabort
mov
xchg
sarl
rcrb
jns
dec
loope
adc
bound
mov
mov
xorb
xor
add
xor
cld
add
adc
sarl
lods
or
pop
xlat
ljmp
xlat
mov
adc
mov
dec
xchg
mov
add
pop
cwtl
jl
jnp
inc
sahf
xchg
aam
sahf
pop
sbb
movsl
mov
clc
add
dec
jle
sbb
loop
std
repz
jl
xor
ljmp
mov
shl
sbb
out
fs
es
sub
xchg
push
jne
scas
jp
push
mov
test
test
sti
sbb
jg
enter
jne
push
mov
mov
jge
outsb
in
adc
testl
jg
mov
push
sub
dec
insb
into
and
jbe
insl
sub
xchg
inc
inc
mov
fists
les
hlt
das
dec
pop
in
cwtl
scas
into
push
jl
movsl
jns
jne
mov
idivb
cmpsb
dec
sub
mov
dec
sarl
jns
imulb
rcr
lret
mov
push
push
popa
cmp
mov
mov
or
sub
add
jne
lea
and
add
adc
and
addb
dec
aas
xchg
lds
dec
in
in
ret
leave
andb
xor
lock
inc
roll
add
iret
sub
add
cld
jle
mov
test
adc
xlat
lcall
nop
pop
into
popa
push
jle
xor
cmp
sbb
cwtl
pop
cmp
mov
test
lock
pop
sarl
frndint
push
stc
leave
or
add
loop
div
sub
jge
loope
gs
movsl
pop
mov
add
add
int3
push
hlt
xchg
fldl
push
loop
mov
and
jne
pop
test
mov
in
fmull
sbb
jnp
cmpsl
stc
iret
movsb
jl
leave
fcomip
xchg
pmuludq
pop
inc
ret
mul
mov
xor
insb
add
clc
lret
mov
fwait
bound
les
stos
mov
rcl
enter
or
xchg
pusha
rolb
jmp
loop
idiv
pop
push
xchg
movsb
xchg
push
daa
ja
dec
push
mov
je
lcall
clc
push
hlt
pop
gs
mov
xchg
fwait
mov
jb
sbb
rorb
sbb
test
fisttpll
dec
popf
sub
xchg
push
adc
jns
push
inc
leave
push
push
mov
or
sbb
andb
outsb
aas
xor
jnp
bound
sbb
pop
lret
in
hlt
sub
mov
jno
xor
push
push
nop
test
xchg
fdivs
mov
inc
outsl
push
test
lea
movsl
repz
jecxz
mov
or
mov
push
jne
adc
je
lret
pop
lea
inc
inc
cmpsb
xor
outsl
movsl
dec
scas
outsl
push
imul
push
cmp
push
call
sub
xor
xchg
hlt
addb
add
mov
into
inc
and
and
gs
pop
movsl
jle
in
xchg
test
mov
sbb
push
xor
dec
inc
xor
enter
adc
arpl
mov
jecxz
lods
xchg
mov
data16
jl
hlt
adc
sbb
push
adc
orb
jne
xor
cmp
out
lcall
xor
xchg
ds
fsts
jmp
mov
std
jnp
pushf
sub
mov
add
adc
inc
mov
jne
and
cmpb
or
mov
add
cli
je
leave
pop
push
das
outsl
cmc
stos
orb
shl
and
adc
dec
jo
in
mov
pop
xor
add
out
hlt
sbb
mov
add
pop
into
xchg
add
insb
sub
cli
fst
ret
movsl
lods
cmpsb
cmp
nop
push
push
sahf
hlt
incl
add
mov
icebp
imul
push
sub
mov
sti
jg
sbb
jnp
xor
test
loope
hlt
inc
insb
add
xchg
or
pop
jbe
mov
dec
les
fmull
call
in
mov
jl
xor
jne
loope
scas
adc
inc
mov
hlt
out
mov
inc
cmc
jno
push
inc
sub
add
pop
push
mov
hlt
ss
mov
and
mov
repz
adc
adc
fiadds
std
int3
jl
push
dec
movsb
lock
dec
add
inc
pop
add
pop
sbb
xchg
and
ret
pop
shll
xchg
jae
mov
aam
fsubrs
mov
aaa
sahf
daa
xor
ljmp
lods
mov
stos
lret
lods
jmp
lea
mov
aam
mov
or
mov
in
insl
ss
lock
addr16
leave
or
mov
xor
ss
in
sub
and
ficoms
mov
jle
repz
out
mov
dec
imul
and
cmp
inc
mov
clc
pop
in
das
pop
jg
into
xor
sub
jns
or
icebp
shr
mov
push
and
cmp
das
add
add
jge
movsl
push
es
movsl
mov
movsb
stc
lds
adc
call
into
pop
iret
movsl
inc
es
xor
flds
xchg
lret
testb
sbb
movsl
cltd
test
loope
mov
iret
ret
pop
int3
stc
xchg
pushf
push
xchg
mov
add
cmp
inc
push
mov
loope
jb
add
cmpsb
pop
sub
leave
es
shlb
xor
jge
bound
sub
roll
cmpsl
adcb
mov
cmp
lahf
inc
cmp
sbbb
jne
push
sbb
into
in
pop
in
push
roll
jb
rcl
push
inc
xchg
into
cs
cmp
mov
ss
xchg
bound
jmp
lock
lds
imul
xchg
adc
or
loop
mov
adc
addb
aad
xchg
jns
add
test
outsl
cmc
test
fmuls
movsl
clc
jnp
mov
stos
mov
jae
jecxz
lret
sub
negb
pusha
mov
push
or
gs
dec
imul
add
sbbl
jmp
push
mov
andl
int
pop
loope
mov
addr16
push
imul
outsl
popf
daa
stos
lock
hlt
pusha
mov
sbb
mov
inc
dec
loopne
les
sbb
inc
mov
xchg
jnp
stos
xor
addr16
xorl
loopne
ja
push
cmp
addb
les
cltd
mov
hlt
xchg
aas
out
xor
pushf
inc
adc
fldcw
adc
lods
sbb
inc
rep
cli
add
inc
pop
es
push
pop
in
dec
mov
jno
sti
push
add
mov
cmpsl
jecxz
popa
fldenv
adc
or
stos
je
movsb
mov
imul
jmp
mov
int3
lock
cmpsl
jge
fadds
sub
sti
call
push
cwtl
dec
and
jne
icebp
outsl
lahf
es
cwtl
inc
mov
pop
or
sbbl
dec
movsb
dec
stos
into
sub
out
outsb
je
fidivrl
ret
movsb
mov
xchg
mov
mov
adc
dec
mov
imul
pushf
mov
and
imul
cmp
lds
in
pop
ret
je
cmp
hlt
sbb
das
fiaddl
jne
jo
ret
movsb
push
mov
cmp
push
inc
rcrb
xor
psubsw
ret
mov
fs
dec
xchg
sub
cmc
mov
mov
push
loope
mov
add
repz
mov
mov
imul
imul
add
aas
int3
mov
inc
xor
mov
sbb
lahf
or
dec
mov
jno
movsb
test
shlb
mov
xchg
arpl
outsb
fdivrp
xor
mov
sarb
and
bound
jle
imul
inc
add
dec
imul
int
pop
and
in
xlat
mov
adc
leave
fstpt
push
incb
ror
sub
sar
cwtl
pop
fidivs
adc
cmp
mov
mov
jge
sub
loop
push
mov
pop
movsl
xchg
push
mov
stc
into
arpl
sub
inc
sbb
cs
lock
fistl
cli
xor
fcoms
sti
or
call
das
js
mov
aas
leave
lock
mov
std
sbb
jl
inc
divl
fincstp
add
jne
lcall
pusha
call
xchg
xchg
cmp
pop
mov
inc
push
out
lods
nop
mov
enter
cs
dec
out
jl
mov
xchg
ja
lock
cmpsl
and
mov
jg
and
movsb
push
sbb
enter
dec
outsb
add
bound
imul
testl
int3
xchg
inc
jbe
aam
int3
pop
mov
sbb
enter
inc
outsl
insl
jp
cmp
gs
mov
mov
outsl
inc
push
repnz
add
cmp
or
push
pop
inc
ret
mov
stc
adc
hlt
movsb
inc
imul
pop
lahf
mov
mov
sub
into
xchg
enter
or
aad
fbstp
cld
lock
push
es
push
insb
hlt
jns
cmp
rol
pushf
lock
jns
add
inc
xchg
lods
xorl
inc
call
fstpt
add
bound
add
xchg
inc
hlt
mov
cld
cmp
inc
fistps
pop
insb
cmp
pop
mov
fimuls
sub
std
dec
mov
or
xchg
sub
je
mov
or
mov
push
stc
repz
add
or
dec
cmp
mov
add
addr16
xchg
sub
sub
ret
pop
pusha
fisubl
cmp
xor
leave
or
ffree
mov
xor
cmp
test
and
add
in
testb
push
dec
imul
test
in
icebp
jae
mov
jne
leave
shl
aas
imul
idivl
push
insb
neg
and
addb
pop
cmpsl
shll
jne
mov
adcl
fidivrs
and
and
jge
xor
inc
xchg
cmp
jne
test
push
push
lcall
mov
jns
cmpb
fsubr
stos
cmpsb
mov
pusha
mov
cld
rcr
sub
mov
cwtl
outsl
mov
repz
scas
pop
adc
xorb
cmp
mov
hlt
lret
dec
mov
jbe
mov
sub
xor
sub
std
xchg
lock
jo
cmp
sti
push
lcall
fidivrs
and
jge
lret
loopne
ret
mov
pop
cmp
dec
dec
jne
xorl
push
pop
jmp
enter
add
js
sbb
adc
mov
sahf
jne
movsb
aad
enter
fldt
cwtl
mov
rdtsc
lods
jge
std
loop
loopne
ss
negl
popf
or
sti
xchg
test
pop
add
add
stos
pop
and
leave
ja
sub
or
fnstcw
sbb
mov
inc
inc
and
test
fistpll
jne
xlat
fistps
adc
cmc
loopne
cmpsl
xchg
adc
mov
inc
mov
fstl
stos
pop
add
into
sub
stos
push
xor
into
pop
pop
stos
movsl
mov
loope
mov
sbb
mov
fstps
jl
adc
cmp
lds
jns
lea
mov
pop
je
clc
mov
push
pop
inc
pop
inc
sub
xor
divb
inc
inc
xchg
jne
das
sbbb
jno
dec
outsl
inc
mov
imul
jl
push
mov
imul
pushf
jne
ds
sbb
movsb
cmp
sub
pop
pop
mov
in
jp
adc
sub
popf
adc
xor
movsl
xchg
inc
scas
jg
out
jo
adc
jge
sbbl
jne
xor
adc
into
mov
push
fldcw
jmp
iret
popf
icebp
xor
jge
push
icebp
and
ficomps
dec
pop
add
shrb
mov
add
cmpsb
mov
fildll
lcall
xorb
push
dec
cmp
add
and
repnz
ja
loopne
xor
jle
movsl
add
inc
sahf
or
ss
popa
or
cmp
ret
pop
mov
fcmovne
mov
mov
testl
ficoml
xchg
xchg
mov
out
push
pushf
add
pop
cmpsl
and
fdivrs
loope
and
sub
setne
xorl
jle
adc
rolb
sub
xor
movsb
in
aad
or
stos
xchg
test
mov
loope
hlt
pop
mov
add
xchg
jecxz
pop
mov
negb
pop
lret
das
mov
out
lcall
arpl
jg
gs
sub
xorb
xchg
sbb
out
fldl
xor
loop
ret
sub
hlt
jno
mov
leave
push
ds
jbe
adc
push
cwtl
xchg
pop
cs
xchg
call
shlb
inc
iret
pop
dec
xchg
jg
xchg
sbb
mov
aad
mov
mov
addb
popa
xorl
adc
insl
test
jne
mov
cmp
inc
mov
test
add
addl
cmpsb
or
jmp
data16
mov
add
jne
addl
es
movsl
out
add
sub
cwtl
cmp
mov
and
jne
ds
or
int
test
mov
fs
mov
mov
sti
jne
adc
fsubs
shl
push
xchg
fidivs
test
jge
lahf
xorl
mov
mov
fbstp
xorl
aam
rcll
dec
cwtl
std
int
sub
cli
test
push
cmp
mov
cs
scas
push
mov
in
das
jnp
sub
stos
inc
pushf
jne
sarb
test
sbb
jg
jl
sbb
jne
xlat
cmc
pop
scas
stc
mov
int
or
scas
hlt
mov
test
sbb
add
and
push
xchg
jge
dec
pop
icebp
rol
jne
and
mov
jmp
xor
mov
mov
cmpsb
pop
cmp
xchg
icebp
hlt
repnz
sbb
popa
cmp
cmp
add
popf
lods
fstl
and
ret
mov
test
roll
fists
add
jb
xchg
ljmp
gs
mov
inc
fs
sub
cmpsb
test
andl
sub
sbb
cmc
xor
addr16
inc
test
adc
hlt
or
movsb
iret
mov
cmpsl
add
jno
jo
sub
scas
in
mov
adcl
out
mov
cmpsl
test
and
sub
icebp
pushf
icebp
mov
arpl
call
mov
xor
xor
ss
mov
push
jne
iret
outsb
popf
inc
dec
dec
mov
lds
cltd
jg
cmp
mov
lods
fcoml
sub
sub
es
cmp
inc
sub
ss
pusha
push
je
dec
cwtl
and
jne
dec
xchg
xor
es
add
push
push
lahf
push
in
js
movsb
jno
ss
xchg
ret
nop
dec
dec
loopne
push
pop
lea
iret
jg
pusha
in
cmp
xchg
mov
js
je
sub
test
sarl
popl
out
fldl
jne
jb
xor
or
sti
repnz
mov
add
mov
sub
xchg
call
lods
bound
lods
mov
push
dec
mov
int
repz
lds
std
in
mov
inc
xor
push
les
js
fbstp
jecxz
iret
notb
dec
hlt
adc
pop
inc
loopne
xchg
mov
sbb
hlt
cmp
jne
mov
loope
stos
popa
dec
mov
xor
add
into
pop
rcll
cltd
jl
aam
mov
test
aaa
jno
addb
ljmp
int
mov
jo
and
insb
int3
xchg
cld
inc
pop
sahf
cmp
xor
xchg
xchg
mov
mov
jg
or
xor
pop
mov
inc
mov
push
test
gs
inc
jns
push
ss
push
mov
movsl
or
pusha
inc
mov
jne
ficoml
mov
or
push
mov
andb
or
js
add
jg
ss
mov
enter
sub
add
clc
xchg
lret
movsl
add
out
jge
xchg
sbbl
inc
mov
mov
sub
mov
enterw
xchg
movsl
sub
and
inc
notb
mov
das
insb
add
dec
xchg
stc
lret
jmp
mov
icebp
add
sahf
loopne
xchg
xchg
jno
lret
es
popa
jne
test
ja
add
and
nop
ret
or
push
addb
lcall
mov
negl
in
pop
adc
sbb
or
data16
pushf
adc
sub
mov
aas
mov
js
mov
push
adc
aam
scas
pop
cmc
sti
pop
iret
xor
jle
xor
xchg
cli
movsl
loope
jne
popa
aas
mov
jge
pusha
stos
push
adc
inc
outsb
mov
cmp
jb
inc
insl
mov
add
fmul
add
negb
cwtl
or
cmpsb
or
out
pushf
lods
push
pop
mov
clc
popa
sub
rol
inc
push
cmp
dec
or
add
aaa
jo
dec
shll
mov
and
xchg
xor
repz
pop
lods
sub
adcl
test
dec
cmpsl
cmp
inc
ficomps
push
fdivr
fistpll
mov
icebp
shrl
jmp
mov
and
lea
clc
jle
std
cli
adc
mov
lods
sahf
addr16
sub
aad
jnp
fnstsw
icebp
jb
mov
add
xor
dec
mov
jbe
or
inc
je
into
sub
pusha
insl
lret
mov
mov
and
dec
mov
jo
jbe
mov
pop
mov
out
stos
jne
pop
test
loope
jge
adc
push
push
jbe
ja
mov
add
in
dec
pusha
nop
shl
xor
pop
pop
sub
push
xchg
add
and
inc
sub
dec
into
in
lret
jecxz
ret
test
sbb
push
loop
sub
mov
and
jp
inc
test
bound
add
mov
xchg
jae
int3
add
xlat
lds
fsts
mov
std
mov
out
push
lock
faddl
mov
jb
inc
sbb
xor
mov
std
out
shll
cmp
daa
aas
adc
fsubrl
inc
jns
mov
negb
sbb
test
sbb
and
xor
dec
subl
dec
inc
push
add
addb
aad
xlat
insb
jge
add
mov
movsl
push
fimuls
not
jo
in
xorb
flds
lahf
inc
sbb
jne
inc
add
pop
test
cmp
mov
pusha
pop
test
cltd
sbb
das
nop
sub
dec
xchg
rol
hlt
sub
dec
out
xchg
lcall
mov
inc
dec
repz
mov
outsl
pop
inc
mov
sbbl
add
ja
jp
jne
push
or
negl
stos
dec
lock
stos
lret
xchg
enter
pop
dec
or
leave
ret
cs
pop
leave
filds
and
call
adcb
push
fnstenv
movsl
stos
andb
cmpsl
sub
iret
jne
movsb
icebp
loope
hlt
lahf
mov
jecxz
xchg
nop
in
push
enter
mov
pushf
iret
push
add
jae
jne
cli
subl
add
jne
shr
sbbl
xor
cmc
test
mov
and
and
arpl
pop
inc
xor
loop
mov
sub
nop
push
cmp
je,pn
pushf
leave
cmpb
ljmp
mov
mov
pop
outsb
sti
add
push
adc
or
push
das
sub
pusha
jp
mov
dec
loope
addr16
add
dec
inc
loopne
and
pop
sub
cmp
mov
push
mov
gs
in
icebp
xchg
lea
jp
lahf
fs
xor
subl
pop
in
push
inc
fidivrl
icebp
inc
mov
or
pop
mov
xor
adc
inc
xchg
add
push
sub
sbb
xchg
test
stos
pushf
aas
sub
nop
lods
mov
add
mov
flds
test
adc
or
mov
in
pusha
sbb
sbb
insb
js
mov
mov
rorl
mov
movsb
cwtl
mov
jmp
hlt
and
fcomps
and
jp
mov
fnstsw
and
in
rcrl
add
cmpsb
jg
xor
xchg
cmpsb
mov
inc
in
lret
jbe
mov
fidivs
cmp
inc
push
cld
dec
mov
xor
jae
jle
stc
jne
and
mov
mov
rcrl
lods
sub
and
iret
leave
lock
dec
nop
enter
scas
aas
js
jbe
adc
inc
clc
fimull
subl
test
sbb
sbb
ret
mov
adc
pusha
repnz
leave
and
sub
mov
xchg
adc
mov
or
jg
push
lret
xchg
shrb
enter
int
int3
loop
dec
fwait
sbb
imul
sar
mov
or
rorl
xchg
ja
xchg
popa
ret
add
jle
nop
xchg
leave
xchg
data16
mov
xor
lds
push
xor
aaa
in
push
test
sahf
jne
and
sub
and
mov
xchg
push
cs
sbb
jg
xchg
cmc
test
es
jno
xchg
jmp
clc
mov
dec
or
jecxz
jnp
adc
pop
lret
or
hlt
xchg
xor
or
cs
imul
insb
int
das
lods
les
jo
xor
adc
pop
mov
push
jmp
loope
push
hlt
mov
cli
int3
mov
js
xor
sahf
xchg
ficomps
outsl
cmpsb
addr16
pop
add
lcall
cmp
fldt
rclb
jnp
sbb
add
aas
pop
dec
sar
mov
adc
dec
mov
pop
xchg
adc
and
nop
cld
fstpl
inc
push
jmp
addr16
imul
fnsave
jne
xchg
ficomps
push
push
pop
test
lea
mov
jb
jg
mov
std
sub
sub
xchg
pop
xor
ret
pop
insb
cmp
popa
scas
inc
fstpl
or
test
and
filds
xchg
xor
sub
pop
test
pop
sub
mov
out
mov
inc
push
es
je
cmp
cmpsb
daa
fldcw
push
sub
nop
test
jae
shrl
mov
in
inc
jne
add
ficoms
cmp
pushf
mov
iret
mov
mov
jmp
adc
jnp
aad
aam
mov
lock
mov
and
cltd
add
dec
iret
xor
arpl
sub
dec
mov
sbb
lods
fbstp
mov
add
or
inc
add
rolb
rcr
jecxz
shrl
add
jns
addb
fidivrl
jp
jo
scas
ljmp
loopne
shll
jb
loopne
sub
sbbl
inc
dec
adc
rol
ss
jne
out
es
sahf
sub
inc
push
adc
xchg
inc
mov
sub
ret
cs
stos
dec
pop
sbb
and
test
jb
mov
outsl
sub
lcall
fstps
test
sar
xchg
pop
fsubl
and
pop
sbbl
inc
mov
ret
lea
fnsave
addr16
add
dec
inc
cmp
mov
mov
aas
adc
push
inc
cmp
pop
jne
das
in
ljmp
or
lcall
andl
scas
mov
mov
pop
sub
jb
adc
mov
inc
push
cmp
mov
sti
bound
ss
mov
pop
mov
test
sbb
jns
push
mov
stos
sub
xchg
xchg
test
pop
insl
add
in
adc
test
xchg
xor
dec
pop
push
fs
insl
jle
xchg
push
mov
xor
hlt
dec
lcall
dec
in
test
vpshufhw
gs
jle
inc
or
fstpl
add
jno
pop
jecxz
sti
sbb
repz
mov
sub
stos
scas
lea
lahf
scas
push
test
mov
or
push
jmp
mov
mov
inc
add
xor
incb
rcll
push
xchg
aaa
push
fwait
mov
loop
call
outsl
inc
call
xchg
aam
ret
es
xor
cld
aad
xchg
push
cmpsl
testl
test
repnz
pop
jns
shrb
inc
in
sbb
cmp
cmc
sbb
mov
test
mov
dec
loop
loopne
fdivs
shll
add
mov
jl
adcb
pushf
mov
gs
xchg
shlb
and
sbb
jb
jmp
daa
loop
addr16
adc
and
testb
cltd
enter
xor
sub
nop
mov
movsb
push
stos
es
outsl
jne
jb
repz
jo
lret
inc
inc
lea
push
inc
mov
sti
sarb
call
jp
dec
insl
cli
push
outsl
adc
hlt
or
xor
fnstsw
les
fmuls
cmp
lods
sbb
xchg
mov
xor
jbe
adc
xchg
outsb
test
shl
pop
ds
clc
fsubs
xchg
mov
scas
inc
jne
lret
fimull
movsb
pop
pop
xor
push
xchg
fdiv
or
push
mov
test
xor
es
adc
xchg
out
mov
add
jne
std
fimull
dec
cld
add
mov
pop
add
jb
and
cltd
out
test
mov
adc
mov
and
popa
push
jne
xorl
push
mov
lods
fmull
or
adc
arpl
push
in
fnstenv
cld
movsl
stc
iret
mov
jae
psubd
sub
mov
negb
fnsave
sub
dec
jne
push
cld
lods
adcl
loop
push
sbb
ret
stos
aaa
jg
cmp
push
loopne
lods
dec
aad
loopne
cmp
xor
pop
ljmp
push
push
adc
sub
out
xchg
ss
push
mov
adc
xor
xlat
mov
data16
sbb
push
cli
mov
and
mov
inc
test
dec
jecxz
fnsave
mov
cli
repnz
or
in
outsl
push
jecxz
fnstsw
sub
addb
cld
jge
movsb
sbb
adc
xorl
mov
mov
pop
cmpb
xchg
pop
push
stos
add
dec
int
sar
mov
test
insb
push
das
cmp
pop
das
fiaddl
shr
inc
jg
pop
or
outsb
xchg
lea
mov
xorl
shlb
mov
adc
data16
ret
adcb
sbb
inc
stos
hlt
inc
insb
inc
mov
imul
aaa
in
int
push
lret
cmp
push
scas
mov
ret
mov
popl
mov
add
negl
mov
mov
pop
divb
jne
sbbb
pop
sub
stos
mov
sbb
out
xorb
sub
pop
insl
sbb
push
push
adc
or
ljmp
imul
push
push
rol
test
iret
fstl
lahf
aam
fistl
lahf
cld
sub
pop
loope
cmpsb
adc
sub
loopne
scas
xchg
and
fldt
xor
jp
jp
loopne
xchg
roll
aas
cmc
ds
jmp
into
mov
lock
lret
dec
test
test
int
outsb
mov
jns
sbb
mov
sub
pusha
inc
inc
mov
inc
ret
call
adc
in
popl
es
sub
cmpsl
xchg
xorb
data16
add
imul
inc
push
mov
fwait
rdmsr
adc
fdivs
xlat
lods
les
mov
xor
pop
jbe
mov
test
lods
aam
push
test
mov
add
fdivl
std
push
shll
mov
mov
hlt
cmpsb
pop
push
xchg
jle
mov
hlt
dec
mov
jne
out
cmp
nop
mov
xchg
adc
push
sub
aam
add
cmp
test
mov
sbb
ret
jo
test
hlt
or
loop
sbb
adc
movsl
dec
in
xchg
iret
lods
enter
add
nop
inc
cli
hlt
cwtl
and
sbb
adc
ljmp
bound
lcall
push
lret
mov
loopne
mov
in
subl
inc
stc
out
push
mov
mov
mov
mulb
mov
jne
mov
mov
or
pop
cmp
leave
sbb
cld
jb
jnp
popf
pop
lcall
rcrb
adc
jns
sub
mov
mov
iret
outsl
push
sub
dec
test
fwait
add
sub
mov
addb
out
sti
call
movsl
enter
cmp
insl
add
es
iret
fs
mov
shrb
insl
iret
inc
test
mov
movsl
cmovo
xor
outsl
movsl
ja
mov
pushf
sti
idivl
addb
sub
fucomip
test
xchg
roll
fsubs
add
scas
hlt
scas
lcall
cmp
xchg
cmp
mov
aas
jbe
mov
or
lcall
gs
xchg
pushf
xchg
movsl
add
and
fisttpll
fisubs
cld
jbe
rorb
adc
cmpsb
iret
xchg
lahf
daa
lahf
xorb
stos
push
inc
ret
rcll
out
inc
cmpsl
icebp
adc
loopne
lods
sub
xchg
xchg
aad
sarb
int3
mov
subl
ffreep
scas
test
and
dec
aas
cmpsb
pop
pop
mov
clc
pop
rcrl
inc
mov
mov
dec
andl
dec
lret
dec
fisubs
sub
push
stc
xor
cmpsb
add
push
data16
inc
stos
jne
mov
cmp
jns
push
scas
cmp
dec
into
pop
add
xchg
or
ss
push
in
inc
outsb
aas
jecxz
dec
xchg
lret
sub
insw
adc
lock
decb
loope
push
jg
adc
insb
jb
dec
fnstcw
or
xor
imul
inc
mov
loope
jnp
sbb
int
fistpl
pop
push
pusha
repnz
insl
into
mov
mov
adc
cmp
ja
or
add
fnstsw
cmp
daa
or
cmpsl
std
adc
adc
imul
addr16
xchg
subb
ds
jmp
push
stos
sbb
mov
mov
jbe
lea
out
add
into
xlat
repz
sbb
mov
xlat
icebp
jmp
cmpsb
sarl
dec
fmulp
dec
nop
jp
cmc
std
add
repz
ss
inc
bound
sub
jp
xchg
adc
jns
ss
mov
push
daa
mov
sbb
add
xchg
adc
sarb
pop
dec
sub
and
fsubrs
push
test
in
xchg
or
mov
data16
mov
mov
xor
mov
cli
leave
inc
push
xchg
ja
or
pop
test
shrl
loope
add
dec
into
rol
in
ret
mov
push
mov
inc
data16
nop
xor
arpl
popa
mov
adc
inc
jo
pushf
mov
cmp
fisttps
stc
leave
sbb
loopne
push
pusha
insb
aad
mov
call
popf
leave
cltd
in
xchg
xchg
subb
pop
dec
xchg
fnstenv
pop
mov
sbb
stos
lods
ss
scas
es
std
adc
pusha
outsl
ljmp
mov
cmp
cmpsb
lods
in
mov
fisubrl
lret
add
push
adc
ret
ret
ds
dec
adc
push
loop
movsb
mov
addr16
imul
cmp
nop
cmpsb
sub
xchg
xlat
in
mov
scas
addb
popa
inc
ucomiss
pusha
add
dec
mov
lahf
push
xadd
cmpsb
push
and
mov
ss
jmp
or
cld
or
inc
stc
jp
pop
fidivrs
jo
inc
pop
push
push
movsl
xchg
jmp
and
in
hlt
or
mov
je
mov
push
xchg
pop
add
push
cwtl
jge
xchg
or
aad
jg
mov
test
pop
loopne
enter
aaa
cmp
xchg
ja
mov
cli
push
subl
or
into
add
adc
push
mov
cmp
into
mov
enter
movsl
in
xchg
outsl
adc
sarb
mov
out
shrb
fbstp
push
add
push
cld
sub
ret
decb
push
mov
test
mov
mov
mov
pushf
jne
add
imul
hlt
xor
std
jbe
sub
add
jne
idiv
inc
dec
mov
jne
rcrl
sbb
mov
cmc
cwtl
sbb
out
clc
mov
mov
sub
cmpl
inc
jge
aaa
push
cs
inc
ret
mov
insb
sub
pop
add
and
aam
mov
in
out
popf
andl
out
adc
mov
out
mov
xor
aaa
aam
xchg
shl
and
xor
cmp
xchg
pop
add
fst
sub
lcall
dec
cmp
mov
inc
mov
lcall
loope
sub
pop
jo
roll
leave
neg
mov
sub
pop
les
mov
out
pop
mov
or
test
lods
xorb
lahf
mov
adc
cmp
cs
pop
pop
pop
outsb
xlat
push
ljmp
mov
addr16
mov
dec
and
jnp
arpl
mov
in
dec
xor
rorb
inc
mov
and
sbb
and
jle
pop
adc
jmp
inc
mov
enter
shll
mov
sub
sub
popf
jg
sahf
lcall
cli
pop
aam
sti
lods
adc
add
hlt
mov
jle
pusha
push
cmpsb
popa
xor
jae
lods
push
pop
xor
xchg
adc
lcall
mov
cwtl
and
mov
stos
fimuls
mov
pop
xlat
mov
hlt
aas
outsb
mov
pop
sbb
rcll
pop
add
rcrb
cmpsl
and
and
adc
jecxz
iret
loop
sub
std
scas
jmp
lock
imul
jb
cld
or
xchg
das
fcoml
movsb
sub
loop
call
xchg
pusha
sub
adc
dec
xorb
testl
xlat
nop
shl
adc
sbb
or
pop
push
sahf
inc
fstpl
testb
sbb
test
push
cmp
push
push
mov
in
popa
xchg
adc
jne
inc
jbe
push
inc
clc
adc
hlt
mov
mov
fnsave
mov
std
popf
inc
mov
jne
jo
mov
dec
or
icebp
lea
movsl
adc
mov
push
jmp
test
xchg
mov
pop
les
fwait
aaa
add
xchg
xchg
pop
add
add
jge
dec
xor
xchg
or
test
mov
fnstenv
cmpb
xchg
jecxz
hlt
lahf
fistpll
mov
cltd
add
jp
icebp
js
test
sbb
jne
movsl
sub
mov
push
cmp
add
inc
fsubp
ja
push
add
jae
data16
mov
out
mov
mov
lods
nop
mov
lret
pusha
aas
clc
mov
into
sub
daa
pushf
ret
jge
fcmovnu
dec
rcrl
les
imul
leave
mov
lock
adc
push
stos
es
inc
call
test
cld
rcl
into
sahf
pusha
ret
push
arpl
pusha
out
pop
xor
jne
nop
xchg
adcb
mov
add
jge
int3
aaa
mov
cmpsl
add
loope
stos
into
andl
mov
nop
mov
xorl
popa
push
mov
push
in
sbb
xchg
arpl
ja
and
jnp
push
loopne
xor
movsb
lock
add
loope
mov
stc
dec
stos
hlt
rclb
add
jne
js
add
mov
mov
int
fs
out
sbb
mov
enter
int
xchg
inc
mov
dec
inc
data16
inc
fmuls
iret
mov
outsb
aad
in
adc
mov
data16
js
jmp
jmp
popa
add
sub
test
push
dec
es
in
dec
std
aaa
and
pop
cltd
insb
cld
lcall
in
popf
mov
clc
mov
and
mov
pop
loopne
jne
lods
mov
add
imul
xchg
pop
add
aam
add
mov
sbb
add
inc
stos
adc
jne
xchg
push
leave
jmp
bound
repz
push
pop
push
jns
shll
loop
sub
outsb
pop
jmp
in
inc
lret
adc
inc
or
daa
pop
clc
leave
jp
mov
ret
cmpsl
dec
pop
in
das
stos
or
mov
out
or
jmp
test
hlt
add
jo
pop
xchg
and
mov
hlt
add
outsl
inc
push
not
adc
cmpsl
add
gs
cltd
data16
xchg
icebp
sbb
dec
scas
aam
add
adc
enter
jmp
jne
fidivl
fsubl
cmc
bnd
mov
pop
lea
mov
icebp
mov
imul
cmp
mov
pop
xlat
loope
xor
cmpsl
dec
push
shl
nop
sub
mov
pop
inc
ficomps
mov
inc
lods
and
hlt
punpckhbw
cmc
inc
cmpsl
adc
jecxz
push
push
dec
sbb
scas
repnz
sub
pop
xchg
orl
mov
cmpsl
and
jle
scas
aam
inc
jb
inc
fyl2xp1
xchg
xchg
loop
adc
jecxz
inc
pop
jo
dec
movsl
jecxz
daa
xor
jne
imul
es
mov
pmaddwd
fisttps
adc
add
adc
dec
fnstenv
stos
inc
pop
addr16
mov
inc
jg
loop
sahf
pusha
xor
data16
mov
inc
rcrl
mov
mov
shrl
fidivl
movsb
cwtl
xchg
add
dec
dec
mov
inc
rorl
jae
mov
into
andb
mov
mov
dec
icebp
sub
adc
aam
sahf
sub
les
ja
push
icebp
lds
icebp
mov
pop
outsb
or
aas
mov
add
fsubrp
inc
hlt
pop
test
add
sbb
dec
movsl
jmp
add
test
mov
sbb
adc
or
pop
std
and
pop
inc
xchg
xchg
enter
jge
xchg
push
lea
adc
mov
mov
and
sub
std
bound
rclb
add
push
mov
sub
jp
stos
or
sbb
call
pop
leave
xchg
mov
sbb
dec
sub
fucom
push
hlt
shll
inc
sti
je
nop
imul
inc
scas
out
push
jbe
sub
scas
xchg
cltd
imul
rolb
popa
sub
subb
pop
mov
mov
enter
shl
jge
push
mov
clc
mov
arpl
jecxz
mov
ret
xchg
orb
stc
subb
dec
popa
dec
repnz
icebp
jb
or
pop
jge
std
or
movsl
call
in
mov
xchg
into
pop
jmp
es
imul
add
jne
repz
adc
test
cld
mov
push
das
xchg
stos
lods
xor
pushf
sahf
movsl
sub
ljmp
and
jo
mov
in
xor
jne
roll
jnp
mulb
or
jbe
fiaddl
xor
testl
inc
mov
pop
mov
xor
dec
sbb
stos
std
xor
inc
xchg
cld
and
jnp
pop
mov
and
sub
add
mov
test
mov
jmp
mov
loope
cmp
jg
lock
fisubs
jne
dec
test
into
xchg
push
call
or
mov
aas
inc
cmp
enter
add
xchg
inc
daa
jne
mov
dec
mov
outsb
scas
sbb
pop
enter
sbb
cmpsb
mov
mov
insl
insb
mov
test
pop
jb
loop
mov
mulb
or
xchg
inc
cmc
icebp
inc
mov
xor
push
mov
loope
lret
loopne
inc
sbbb
stos
lods
jne
xor
addl
xchg
shll
xchg
aad
aaa
adc
xlat
imul
shl
adc
lcall
xchg
sti
mov
data16
sbb
lcall
jl
inc
int3
mov
test
mov
out
xchg
gs
push
lret
into
bnd
mov
mov
jbe
scas
mov
out
scas
hlt
loopne
adc
jbe
lods
shlb
pop
push
and
sbb
stos
mov
ljmp
sbb
xor
and
shll
je
out
movsl
sarl
pop
add
in
mov
fbld
sub
mov
add
dec
cmp
filds
imul
les
js
loopne
push
push
imull
jmp
jb
sarl
rcll
push
add
inc
testb
and
jl
add
jecxz
test
sub
add
ljmp
aad
fadd
xor
ss
ss
push
cmp
jmp
ret
movl
shll
push
or
mov
int3
mov
in
jo
sub
sarl
subl
fxch
mov
cwtl
pop
daa
xchg
jecxz
rolb
xor
pop
movsl
xchg
dec
rolb
mov
fiaddl
inc
jl
fistpl
mov
leave
addr16
sbb
mov
movsl
pop
dec
mov
jnp
mov
pusha
push
lods
or
inc
and
rcrl
xchg
sbb
repnz
and
pusha
cmc
mov
int3
push
mov
pop
popf
adc
jge
pop
shl
inc
cmp
mov
xchg
cmp
mov
or
adc
pop
shlb
outsb
xorl
mov
jbe
lahf
rorl
mov
cwtl
dec
inc
rclb
hlt
lahf
push
cmc
out
shll
fst
xor
add
and
push
loop
pusha
push
out
and
and
loope
dec
pop
test
sub
data16
in
mov
mov
aad
lea
fbstp
mov
mov
cs
xchg
pusha
fst
cmp
dec
ljmp
icebp
mov
out
pop
mov
out
xchg
push
mov
or
xor
and
mov
mov
adc
imul
enter
cmp
ljmp
ret
mov
negb
push
andb
inc
cmpsl
xchg
andl
addr16
xchg
and
inc
xchg
hlt
cmp
pop
insb
mov
xor
jecxz
pusha
jmp
xor
scas
xchg
sub
call
pop
out
sbb
or
insb
negb
loopne
mov
inc
add
pop
jmp
out
enter
pop
mov
jmp
fidivrl
out
adc
ja
popl
insl
popa
js
or
fcmove
and
push
adc
or
arpl
out
cmpl
add
jno
cmp
cmp
push
pop
jl,pn
or
insb
lea
push
cmpsl
int3
mov
pop
scas
inc
and
xor
ljmp
rorl
and
hlt
jnp
xchg
sbb
xchg
insl
test
mov
lods
out
mov
jl
imul
popf
jle
push
fnstsw
jne
ret
cmp
ja
add
or
js
aas
ljmp
movsb
lods
repnz
notl
pop
loopne
scas
gs
dec
int3
mov
xchg
lcall
pusha
decl
xor
push
sti
incb
sub
not
clc
sub
xchg
sub
imul
cmpsb
jnp
mov
mov
xor
addb
ljmp
push
add
and
packuswb
ja
push
shr
add
rcl
enter
inc
pop
scas
ss
mov
fwait
push
fstl
addl
aas
movsb
dec
jp
pusha
mov
testb
jno
or
outsl
punpcklbw
cmp
adc
lret
cs
scas
in
mov
cld
rcll
rcl
jecxz
push
and
repnz
testb
mov
xor
xor
adc
mov
rcll
mov
sbb
les
mov
push
mov
push
pop
hlt
dec
sub
icebp
data16
xchg
inc
dec
outsl
mov
les
in
cmp
imul
in
mov
fnstcw
jnp
int
sahf
jne
push
jl
sbb
into
pop
jns
pusha
pop
scas
and
sbb
sub
fists
ljmp
or
js
mov
sub
test
sub
mov
add
push
into
stos
mov
shll
mov
aam
andb
not
in
movsl
cmc
in
nop
or
xchg
sbb
xor
xchg
stos
fstl
xor
leave
rcrl
movsl
cmpsb
and
adc
xchg
mov
inc
hlt
shrb
jno
cwtl
push
jo
in
mov
leave
std
push
test
icebp
xchg
adc
pop
jg
xchg
sub
fldenv
ret
cmp
add
insl
pop
test
pop
sbb
fsubrl
aam
cmc
and
inc
dec
arpl
adc
xchg
lods
lret
lds
test
pop
inc
ror
dec
mov
cltd
gs
cmp
lahf
inc
hlt
stos
mov
mov
repz
inc
stos
bound
mov
xor
ret
cmp
out
mov
int3
cmp
dec
inc
pop
repnz
enter
sahf
shrb
int3
and
stos
inc
mov
inc
push
jno
popf
xlat
mov
mov
dec
add
push
js
mov
roll
test
std
or
mov
push
jno
push
mov
mov
out
cmpsl
jmp
fmuls
add
push
or
pop
cmp
scas
lock
or
iret
stos
sti
add
sbb
or
xchg
xorl
jg
adcb
sub
dec
sub
adc
jge
xor
mov
rcrb
sub
push
aas
int3
daa
mov
fld
xchg
xchg
daa
lret
xchg
fidivs
sti
push
clc
dec
lretw
adc
add
jg
add
add
pop
cli
aad
inc
inc
mov
mov
mov
dec
inc
je
pop
in
stos
mov
jo
testb
cld
xor
mov
xchg
test
sbb
push
inc
out
adc
ja
pop
mov
adc
stos
cmpsl
es
mov
pop
jbe
inc
and
mov
push
sub
icebp
adcl
mov
pop
or
data16
notb
subb
push
mov
sbb
sbb
test
lret
cwtl
loop
xchg
mov
in
or
or
loopne
fcoml
cwtl
jae
in
jne
std
add
inc
cmc
pop
adcb
das
ret
dec
or
gs
cli
xchg
jae
pop
pop
pop
cmpsl
push
es
test
mov
jns
mov
adc
test
in
fstl
test
add
jl
and
adc
jle
cmp
push
cmpsl
in
int3
into
fsubr
sub
sub
add
inc
xchg
stos
xchg
xchg
adc
in
mov
push
pop
add
adc
aas
ljmp
push
out
inc
xlat
adc
stc
sti
out
mov
mov
sbb
mov
adc
js
ret
out
test
fmulp
or
jns
enter
cmc
jne
in
mov
fisttpll
add
dec
js
out
aaa
pushf
mov
xchg
or
loope
out
dec
inc
enter
neg
arpl
lret
pop
cwtl
mull
inc
jb
mov
movsb
push
clc
mov
mov
mov
jl
inc
shlb
stc
xor
adc
aam
sti
insb
pop
sub
js
rcrl
or
pop
xlat
mov
std
out
iret
and
ss
inc
add
push
mov
fs
hlt
adc
add
xchg
cwtl
add
mov
stos
fstp
jl
test
notl
lcall
inc
es
and
pop
pop
cmpsl
movsl
nop
into
jmp
shll
inc
push
xchg
fucom
pop
stos
hlt
lea
js
push
outsl
xchg
add
fdiv
push
repnz
adc
hlt
jge
add
outsb
mov
inc
testb
aas
pusha
nop
pop
test
sub
shll
outsl
push
sbb
pop
inc
stos
int
xchg
scas
jmp
fcoml
sub
and
cmpsl
popa
decb
push
inc
jl
sub
pop
cwtl
mov
xchg
enter
fdivl
lcall
inc
addl
pop
addb
enter
aas
dec
cmp
push
imul
adcb
fildll
mov
orl
mov
xchg
mov
enter
es
imul
cwtl
mov
arpl
xor
popf
std
jnp
xchg
or
aam
or
iret
or
leave
sbb
pop
jmp
and
xchg
loopne
inc
fiadds
repz
cmpsb
lods
nop
mov
hlt
scas
lret
int
lds
movsb
enter
lret
sbb
jne
fnstenv
andb
in
jne
fildl
mov
sub
movb
insb
mov
xchg
mov
test
inc
dec
icebp
call
arpl
mov
dec
push
mov
sub
js
int3
mov
jmp
filds
cwtl
pop
mov
ds
scas
mov
pop
mov
out
lods
mov
xchg
pusha
int3
test
jo
in
mov
jo
and
inc
inc
xchg
fcoml
cmp
scas
scas
rcrl
mov
in
inc
cltd
sahf
in
xchg
xorl
imul
sarb
xlat
xchg
xchg
stos
hlt
mov
adcl
jne
stos
push
push
cmp
cld
shrl
mov
xchg
setp
xchg
add
jb
push
cmp
lea
cwtl
push
inc
clc
inc
ret
fs
int
pop
dec
fwait
cmp
push
scas
adc
push
inc
scas
addl
test
ja
call
cld
lea
loope
enter
and
data16
add
push
xor
inc
inc
add
fcompl
push
aad
jno
into
push
add
xor
cld
mov
pusha
adc
test
adc
repz
lcall
rcl
lret
subb
jae
hlt
add
scas
icebp
xor
scas
fildl
das
popf
cmpsb
pop
adc
iret
stc
mov
cmp
jp
sub
jae,pt
xchg
jge
int3
inc
push
sar
cmc
sub
mov
inc
negb
mov
scas
lods
fsubrl
testb
lea
inc
mov
mov
das
cwtl
adcb
data16
dec
pop
mov
push
out
in
sbb
sub
push
add
or
dec
inc
call
ss
jns
push
jmp
push
jne
pop
mov
cmpsl
movsb
sub
js
fstpl
divl
lea
sub
jne
ljmp
aas
mov
jl
pop
jge
mov
in
add
jg
xchg
and
dec
cmp
push
clc
jle
add
out
leave
out
lock
mov
les
mov
sub
ret
inc
mov
inc
adc
ret
sub
int3
push
jne
jg
imul
or
push
jle
add
arpl
mov
sub
aad
pop
test
pop
inc
fxch
repnz
shrl
adc
pop
or
das
bswap
jns
popf
cltd
shr
push
sub
mov
leave
cmpsl
add
je
push
mov
and
xchg
adc
push
std
inc
int3
jns
mov
into
pop
repnz
enter
outsb
and
sbb
xchg
out
sbb
into
ds
jo
enter
push
xor
jne
mov
inc
fwait
jae
fadd
or
sub
dec
das
pushf
cmp
bswap
test
xor
xchg
jae
inc
rclb
je
icebp
dec
mov
cld
dec
mov
push
scas
mov
mov
pop
mov
stc
cmpsb
pushf
cld
push
int3
mov
xor
adc
aad
mov
jl
mov
push
xchg
out
fcomps
mov
xor
hlt
cwtl
adc
jae
push
sub
or
sbb
xchg
rol
ss
dec
xchg
addb
pop
dec
movsb
call
pop
clc
enter
dec
push
sub
cmp
lods
addr16
cltd
stos
loop
es
jne
dec
add
mov
cmpsb
or
add
add
scas
mov
xchg
aam
xor
aaa
add
fmull
pop
mov
inc
inc
xchg
dec
mov
iret
ljmp
icebp
sub
mov
movb
je
mov
sahf
pop
sbb
int3
xchg
outsl
gs
gs
xor
insl
in
out
and
mov
xor
rol
hlt
or
cmpsb
add
ret
loop
std
xchg
xchg
cmp
mov
fcmovu
cli
inc
and
mov
sub
xchg
xchg
sub
pop
inc
fsubrp
hlt
inc
test
sti
mov
xchg
test
mov
or
jecxz
fstpl
mov
add
adcl
ss
mov
test
mov
js
cmpsb
out
sub
das
sbb
inc
icebp
jmp
xchg
lea
ljmp
pusha
bound
addb
mov
stc
add
lret
mov
xchg
hlt
mov
pop
cwtl
data16
sub
xor
test
cld
add
in
mul
xorb
ljmp
enter
inc
cmp
jns
lock
sub
and
jge
rcl
leave
pop
push
es
cwtl
xchg
rorb
and
orl
mov
adc
or
push
sub
mov
xor
cmp
sub
mov
push
shlb
push
lods
sub
adc
dec
lea
ljmp
cld
push
push
lret
movsl
mov
xor
out
push
ret
add
hlt
loopne
lahf
nop
mov
mov
loopne
lds
je
fdivl
mov
and
jge
scas
sti
inc
mov
jle
cmpsl
and
inc
call
sbb
scas
dec
pop
es
mov
adc
mov
lods
xor
iret
cmpsb
or
sub
mov
pop
andl
mov
jle
lret
in
jmp
cltd
pop
push
inc
dec
andb
mov
orb
sub
jg
cli
jb
test
das
repnz
mov
add
lcall
xorb
gs
sti
cmp
inc
lret
mov
sub
inc
aam
mov
mov
fcmovbe
push
xchg
push
ss
incb
in
sbb
xor
xchg
aam
cmc
ss
mov
imul
test
push
mov
lcall
or
lahf
push
mov
pop
adc
cmp
xchg
loop
mov
rorb
sahf
mov
int3
jecxz
les
repz
xchg
call
mov
dec
mov
mov
sub
inc
jbe
adc
jg
cwtl
mov
adc
mov
push
js
pop
test
fwait
xor
mov
pop
fcoms
or
pop
loopne
jae
add
mov
pop
outsb
negl
dec
lret
add
clc
test
sti
sbb
das
sti
push
mov
xor
in
mov
xchg
pop
mov
addl
js
add
leave
outsb
mov
rcrb
pop
ret
subb
mov
rcrl
push
mov
mov
popa
shr
das
xor
xchg
push
push
sub
push
adc
movsl
lea
dec
mov
sub
add
gs
leave
mov
negl
pop
movsl
jp
xchg
mov
cli
ds
out
push
mov
adc
or
add
lods
dec
mov
cmp
pusha
cs
and
lret
xor
lcall
xor
ds
aad
cmp
xchg
into
rolb
jae
hlt
push
mov
cmp
mul
cltd
subb
jne
dec
pop
inc
inc
call
xchg
mov
jle
fdivp
add
movsl
addb
hlt
int
xchg
pop
sbb
lea
push
inc
push
add
outsl
push
nop
sbb
hlt
push
pop
ret
rol
test
sub
mov
mov
push
adc
int
loop
andl
xchg
mov
test
push
gs
std
sti
cmp
cmp
sub
ffree
repz
mov
and
xchg
sbb
dec
cltd
js
adc
jbe
mov
sub
jne
stos
repnz
and
or
outsb
jl
sub
popf
push
adc
jle
faddl
mov
jnp
sbbb
into
int3
enter
inc
popa
hlt
dec
movsb
inc
movsb
cmpsb
mov
test
insl
cld
and
add
mov
mov
mov
mov
adc
cltd
mov
push
shrb
rol
sbbb
and
pop
mov
adc
mov
adc
add
add
mov
inc
shlb
dec
out
or
push
mov
inc
xchg
cwtl
mov
adc
add
jbe
adc
sub
push
testb
xchg
lcall
or
das
mov
jne
sub
mov
xor
mov
lds
imul
jecxz
cmp
inc
in
dec
xchg
mov
cmp
cmpsl
inc
pop
mov
movsl
lea
and
outsl
mov
cltd
testl
outsb
ds
out
loope
jne
scas
aas
ss
pop
adc
loope
repz
mov
adc
std
mov
test
pusha
adc
stc
mov
jl
test
popa
stos
pop
adc
pop
or
pop
cltd
mov
mov
sub
ret
xlat
xchg
xchg
push
mov
movsl
int3
add
divb
cmp
cmp
mov
xlat
loop
ja
fistps
xor
rcrl
je
mov
sbb
xor
imul
les
jb
cmp
aas
mov
in
xchg
mov
sub
fdivs
fs
imul
data16
negb
add
or
mov
ja
movsb
jecxz
fidivs
add
sbb
fsqrt
inc
pop
aas
test
mov
fidivl
dec
cwtl
xchg
lret
sbb
bound
leave
scas
rorb
xlat
pop
pop
in
mov
loop
mov
stos
es
test
imul
lods
adc
inc
xchg
mov
test
pop
lret
xlat
cltd
sub
test
rorb
arpl
repnz
bound
mov
mov
leave
pop
dec
push
xor
in
popa
cmp
cmp
in
sbb
inc
mov
pushf
imul
std
icebp
jl
insb
inc
pusha
cmp
jbe
gs
mov
iret
and
jne
aaa
subl
inc
clc
push
mov
mov
mov
and
push
cmpsl
push
repz
or
sub
mov
mov
call
push
pop
pop
rcr
inc
mov
ret
cmpsl
cmp
scas
insb
mov
enter
xchg
ja
jmp
enter
add
inc
lret
aad
sti
repnz
pop
movsb
icebp
int3
movsb
mov
and
jp
test
dec
cmpsl
push
or
ffreep
cmpb
pop
ret
ss
push
mov
insb
mov
cltd
jb
push
lret
add
adc
add
pushf
sub
loop
insl
add
test
mov
daa
sbbb
cmp
test
mov
pop
xchg
add
or
js
mov
mov
cli
inc
dec
cmp
cmp
lcall
jg
icebp
notl
lcall
adc
lea
into
add
cmpsb
sahf
add
rcll
mov
mov
pop
cs
jg
lods
cld
cwtl
add
iret
xor
xorb
hlt
scas
imul
lea
add
xchg
jo
fnstenv
mov
jecxz
xchg
or
pop
icebp
push
lea
mov
es
pop
sbb
inc
or
icebp
jns
fstpt
lar
shrb
enter
insl
push
clc
dec
divb
xlat
cmpl
lds
sbb
sub
je
xorl
shrl
push
add
pop
push
mov
stos
aas
dec
cmp
rolb
xchg
sbb
add
pusha
push
cmpsl
push
rep
fisubrl
pusha
mov
add
dec
mov
push
subl
dec
jns
and
nop
movsb
hlt
push
std
outsl
aam
or
pop
pop
insl
sbb
inc
icebp
into
fstps
movsl
repz
fidivs
pop
add
hlt
jnp
sub
push
sub
mov
imul
push
sbb
clc
mov
cltd
xchg
fwait
loop
xor
and
out
or
ror
mov
or
std
ficomps
sahf
cmp
add
push
daa
add
pop
movsl
in
cmp
xor
add
loope
sbb
push
aas
add
and
dec
sbb
stos
push
pop
nop
outsb
sub
mov
pop
push
xor
fucomip
sub
das
nop
jle
mov
leave
nop
sbb
test
mov
cs
sbb
add
movb
mov
in
jae
pop
aam
leave
addb
inc
leave
in
mov
inc
cmp
notb
sub
ljmp
mov
push
mov
dec
mov
popa
sbb
jne
movsb
mov
scas
popf
add
stos
mov
jg
xchg
sbb
fistpl
js
mov
lds
mov
imul
or
fidivrl
dec
cltd
out
jne
mov
push
mov
pusha
jns
es
jl
fnstcw
mov
imul
adc
jp
add
jbe
ret
jo
add
xlat
mov
hlt
mov
mov
push
push
adc
nop
in
pusha
mov
mov
mov
add
xchg
lret
mov
addb
push
in
adc
sbb
xorl
fs
insb
psrld
out
pop
or
or
mov
insl
aas
pop
ja,pn
cmp
sbb
iret
rcl
mulb
ss
push
outsl
jno
imul
mov
dec
cmc
fisttpll
lret
mov
movsb
hlt
jl
loope
fstps
test
inc
push
jp
stc
cmpsl
daa
sub
shlb
xor
fildll
cmpsl
jno
mov
hlt
sbb
push
pop
cs
dec
mov
pushf
push
inc
or
ja
enter
es
push
mov
mov
sub
inc
dec
jge
clc
push
test
mov
out
jb
roll
xor
xor
insb
pop
mov
cltd
in
sub
xchg
nop
lods
mov
mov
hlt
push
fildl
out
jns
hlt
outsl
stos
mov
xchg
test
scas
gs
fnstcw
dec
xchg
ss
add
pop
and
xor
test
addl
cli
mov
mov
fidivl
adc
push
cli
jecxz
sub
std
sub
das
gs
out
or
add
popf
cld
inc
push
mov
leave
movsb
jge
insb
in
push
aam
mov
and
inc
daa
popa
ret
xor
lds
subb
aas
notb
popa
out
das
jne
jno
popa
into
inc
addr16
leave
push
pop
orl
sbb
push
xchg
popf
jbe
scas
js
push
xchg
sbbl
hlt
movsl
insb
std
arpl
scas
mov
sbb
cmp
fsubrl
ret
jle
add
pop
and
inc
adc
mov
ja
pop
dec
out
fsubl
xor
xchg
cmp
push
cmp
inc
je
mov
cli
ret
push
ret
pop
enter
hlt
inc
cwtl
push
adc
scas
push
mulb
out
cmp
xlat
imul
incb
bound
pusha
aad
cmp
nop
out
push
inc
and
add
push
push
ficomps
xorl
popa
jne
add
scas
ror
mov
loop
movsb
xor
mov
sub
jge
repz
das
out
pusha
scas
in
mov
mov
push
cmp
cmp
je
popf
cwtl
cmp
add
loopne
mov
std
fiaddl
push
cwtl
pop
jecxz
mov
rclb
pop
xor
mov
ljmp
movl
ljmp
cld
aam
sub
call
adc
mov
aaa
orb
clc
and
add
test
cld
int3
inc
mov
mov
inc
aas
xchg
movsl
pop
hlt
adc
into
inc
mov
add
repz
push
mov
je
rolb
or
push
mov
data16
or
cmc
sbb
sub
out
fwait
pop
mov
sbb
incl
testl
fdivrl
aas
lock
ficoml
or
mov
cmpsb
sahf
mov
into
sub
mov
std
clc
add
pop
lea
mov
add
ficoml
add
xorl
leave
clc
xchg
adc
insb
mov
sarb
cmp
lret
mov
adc
js
jecxz
clc
dec
mov
dec
leave
iret
push
lods
mov
nop
mov
inc
pusha
data16
inc
pop
pop
movsb
jg
sbb
mov
sub
dec
test
push
xorl
add
sbb
jecxz
inc
mov
xchg
out
mov
inc
xchg
cmp
shl
in
mov
pop
dec
arpl
jle
inc
mov
incb
pop
jo
into
cwtl
jo
jmp
adc
adc
pop
cli
mov
rcll
adc
inc
mov
movsl
cwtl
testl
mov
out
outsb
scas
sub
dec
inc
xchg
mov
push
or
or
fsubl
xchg
in
aaa
shll
mov
lahf
scas
or
shll
subb
push
pop
cmp
clc
sub
mov
push
and
cs
movsl
adc
push
testl
jmp
mov
push
adcl
lahf
sub
loop
lds
push
push
adc
xchg
scas
aaa
sub
adc
sub
sbb
dec
or
insb
cld
push
js
mov
sahf
sub
mov
mov
jge
adc
push
dec
pop
mov
sub
fdivrl
jmp
leave
jnp
imul
mov
mov
mov
ficoms
sbb
inc
sahf
pop
leave
aaa
jp
rcl
cwtl
sub
inc
jle
pop
add
fnstsw
int
testb
dec
lds
sub
cmp
cmp
data16
mov
test
sbb
jne
adc
add
int
xor
mov
fisubl
lea
sub
ret
and
scas
pop
sub
xor
push
aaa
nop
add
pop
cmp
dec
pop
lcall
jmp
addb
xchg
sti
lahf
mov
or
pusha
push
std
mov
stos
test
mov
movsb
js
push
hlt
and
roll
pop
out
xor
inc
clc
push
dec
add
mov
or
lods
mov
dec
fst
jg
cmpsl
popa
leave
arpl
lods
movsb
mov
out
and
add
lods
movsl
ja
xchg
mov
jae
test
inc
movsb
sub
and
sub
add
sub
inc
aam
fildl
push
int3
imul
data16
xor
ret
cmp
xchg
mov
cmp
call
xchg
mov
xchg
aad
add
enter
adcb
sbb
cwtl
pop
lret
adcb
or
or
movsb
shl
aam
mov
mov
adc
loop
or
cwtl
lret
sarb
out
mov
cmpsl
inc
aad
xchg
mov
in
and
icebp
flds
mov
mov
fstl
xchg
test
or
push
and
add
fstpl
lods
or
mov
stc
jbe
push
adc
xor
popf
nop
mov
js
sarb
jbe
jns
inc
xor
aam
mov
out
out
loop
add
es
adc
cmp
pop
lds
jmp
mov
cli
out
cmp
and
push
pop
jmp
xchg
pop
fwait
add
push
and
arpl
cmp
xor
lods
mov
jmp
daa
sbb
add
es
inc
pop
in
das
into
jne
xor
dec
or
lods
xor
pusha
cltd
xor
inc
test
loop
jmp
movsb
sub
test
push
fnsave
push
adc
test
iret
aaa
fsts
icebp
shlb
js
inc
jne
push
xchg
xor
dec
xlat
in
cmp
mov
shl
mov
cld
lret
test
cmp
mov
mov
push
in
mov
inc
ss
jne
testl
cld
jle
movsl
sbb
hlt
mov
shl
xor
cmpsb
hlt
mov
movsb
subl
cmp
jb
jg
jmp
fdivl
fdivr
dec
cmp
mov
dec
es
movsl
fiaddl
sbb
push
repnz
lods
jle
cmpl
shll
sub
and
es
add
jle
adc
ja
arpl
subl
xor
jmp
adc
sbb
loope
aam
sti
outsl
cmp
jnp
add
mov
inc
aad
sbb
and
hlt
aas
adc
mov
stos
pop
push
inc
movsl
inc
xlat
mov
cs
add
nop
and
icebp
cld
lods
push
fucomi
mov
das
nop
push
lea
rolb
repnz
sbb
push
jg
jo
fsubp
bnd
xor
mov
mov
jp
sbb
out
pushf
sub
jmp
stos
fistps
xlat
rcrl
outsb
pushf
dec
sub
pop
jo
repnz
push
ss
jge
loopne
pop
sbb
int
push
movsb
pusha
js
lock
mov
and
cld
adc
push
sbbb
sbb
jne
push
andb
add
mov
push
or
xchg
cmc
pop
test
add
jle
leave
push
loop
inc
or
in
xchg
mov
sub
shl
mov
or
loope
mov
mov
pop
mov
sub
es
add
xor
push
jo
push
cmp
loop
clc
add
jae
inc
sbb
sti
inc
fnsave
pop
adc
adc
or
push
xchg
fcoms
push
sub
or
out
hlt
inc
xor
movsl
je
sub
cmp
insb
jns
sub
cmc
xchg
mov
lods
adc
adcl
cld
add
pop
jmp
or
inc
mov
mov
repnz
and
add
lods
loop
xchg
mov
in
test
cmc
out
add
int3
ljmp
mov
mov
xchg
sbb
ret
loop
mov
lret
loopne
pushf
imul
sub
cmp
lcall
xorb
hlt
xchg
loopne
jbe
dec
jecxz
mov
add
decl
jp
cli
xchg
jo
jne
mov
jle
repz
xchg
sti
fld
xchg
xchg
dec
jl
sahf
pop
xchg
fwait
push
out
clc
aaa
loope
aam
adc
dec
jg
ljmp
test
sub
push
dec
jns
xchg
inc
scas
mov
jp
int3
nop
lret
test
aad
nop
push
subl
adc
jecxz
push
out
pop
out
nop
jl
xchg
lcall
lcall
ds
sbbb
popa
mov
mov
jae
enter
push
dec
inc
sub
ljmp
mov
mov
jne
repz
xchg
clc
repnz
adc
in
mov
mov
lret
pushf
aam
xor
fcompl
movsb
inc
fcompl
mov
mov
cmc
or
fiadds
scas
inc
pop
imul
mov
sti
fsts
repnz
rcl
scas
repnz
mov
sti
or
cmpsb
call
nop
xchg
ss
sti
mov
mov
sub
enter
adc
add
xchg
jns
push
cld
and
mov
adc
jne
xchg
dec
test
nop
lret
sti
xchg
sub
and
lods
push
add
pop
sub
sub
cli
lret
insb
fadds
mov
xchg
lret
ja
ds
pusha
iret
mov
push
imull
pop
shll
bound
testb
cmp
movsl
mov
hlt
jno
lcall
xchg
addr16
mov
jp
ror
mov
enter
icebp
test
xor
call
dec
clc
cmp
sub
fs
jnp
mov
fucomip
out
sbb
cs
xorl
sub
dec
jge
mov
fsubrl
xchg
xchg
jge
add
xchg
mov
ljmp
cmp
adc
cmc
mov
scas
insb
add
out
jle
adcl
sbb
rorb
add
push
mov
pop
in
jg
addl
dec
dec
pop
sub
xchg
pushf
test
test
fnstsw
filds
fldl
loop
add
sub
idivl
int3
hlt
ja
inc
sar
cwtl
cmp
mov
sub
mov
fnstcw
xchg
inc
mov
lret
push
mov
movsl
lcall
movsl
push
fsubrl
fcmovne
shr
mov
pop
jnp
sub
mov
sti
pop
push
sbb
dec
jmp
pop
cmp
in
dec
stc
xor
inc
stc
sub
and
test
fnstsw
mov
or
inc
adc
imul
test
ret
sahf
cs
pop
scas
mov
cmp
lahf
jno
xchg
add
shlb
jo
es
cmpsb
dec
add
xchg
push
xor
sbb
cmc
leave
add
shrb
lds
jne,pt
sbb
leave
add
orl
jno
imul
xchg
cmpsb
inc
mov
mov
cbtw
mov
sub
mov
add
jmp
mov
push
pop
inc
sarl
jle
push
cmp
sbb
adc
cmp
adc
push
subb
mov
hlt
xchg
js
push
lea
mov
jo
lds
pop
call
cwtl
pop
adc
xor
xchg
loope
orb
ret
push
icebp
aas
adc
sub
or
cmpsb
cli
mov
dec
mov
test
les
jae
arpl
addr16
add
out
adc
std
and
mov
outsl
sbb
push
lods
sub
inc
xchg
mov
test
in
enter
mov
mov
dec
cmpl
sub
pop
or
mov
lcall
jne
pop
call
loope
hlt
aam
jg
outsb
or
xchg
inc
inc
insb
or
jbe
iret
loop
add
popa
rorb
testl
xchg
jp
add
mov
cmp
popa
notl
jg
into
pop
add
subb
jne
cmpsl
xor
lahf
es
jmp
fwait
enter
test
sbb
sub
mov
sbb
rcll
mov
or
push
icebp
mov
std
jne
fimull
add
adc
dec
add
mov
ss
pop
cs
sub
incb
out
bound
pop
xchg
jo
and
popa
insl
mov
jae
adc
cmpsl
xabort
add
orl
addl
inc
outsb
inc
push
lret
xor
mov
xor
in
jg
xlat
pop
mov
lret
loopne
filds
or
subb
pop
divb
roll
shl
jmp
dec
cmp
dec
leave
ficoml
movsl
fildll
pusha
sbb
call
jge
lds
lcall
inc
jno
fcmovnb
sub
jne
add
push
lea
ret
and
cmp
xor
pop
and
mov
das
inc
or
dec
popa
hlt
sarl
xchg
test
jno
xor
addb
cld
mov
sub
push
or
add
sub
fcompl
xlat
adc
mov
pop
dec
pop
mov
in
jne
and
inc
xor
sbb
lahf
sahf
loopne
ss
aas
mov
jne
es
add
jge
leave
pop
mov
pop
jne
jge
mov
cmp
mov
sub
xchg
inc
ljmp
rcll
mov
test
aaa
subb
cmp
daa
jae
jns
decl
mov
add
mov
or
cmpsl
and
fs
in
inc
sub
jg
fdiv
xor
push
movsl
push
xorb
ret
push
sub
data16
daa
pusha
mov
pop
pop
or
out
imul
lods
out
inc
pop
sub
cmp
test
fcoml
mov
inc
dec
int3
xchg
arpl
jg
insb
divl
pop
aaa
sbb
sub
jne
int3
fnstsw
add
rolb
rcr
and
ret
pmullw
push
mov
cmp
and
pop
test
or
andl
dec
or
or
pop
insl
adc
test
mov
xchg
add
cmp
cmpl
mov
subb
xlat
out
lods
enter
and
lods
and
adc
fmull
and
jg
cmp
sub
movsb
mov
jo
aas
fstl
sbb
mov
inc
add
xor
outsb
sbb
mov
add
push
inc
je
jmp
adc
jl
cmp
cwtl
mov
mov
and
stos
mov
add
sbb
jp
mov
inc
push
jmp
addr16
ss
sub
dec
cwtl
ja
mov
or
scas
cmp
or
rcrb
xor
xchg
hlt
mov
sub
js
sbb
cli
sbbl
orl
data16
jne
jl
test
push
ljmp
inc
pop
inc
cmc
int3
jbe
pop
mov
cmpsb
in
push
pop
repz
in
shr
lods
mov
nop
icebp
sbb
push
adc
jno
mov
add
dec
mov
add
jge
sti
imul
sub
pop
leave
clc
sub
sub
enter
stos
dec
movsl
push
das
mov
sbb
mov
call
pushf
cmp
jg
mov
push
hlt
xchg
loope
lock
jnp
mov
inc
les
mov
icebp
loopne
xchg
inc
hlt
sub
andb
enter
pop
stos
andb
xchg
jne
fsts
adc
mov
pop
push
stos
adc
cmp
aam
lcall
xchg
loopne
sub
mov
sub
sub
int3
jno
mov
leave
inc
pop
ror
mov
les
jne
xchg
lods
hlt
ds
push
or
xchg
bnd
lret
mulb
xchg
jae
bound
aad
stos
sub
push
rcrl
and
inc
addb
sub
sub
push
fsubs
roll
sbb
sbb
add
into
pop
fcoml
leave
arpl
push
pop
outsb
mov
out
add
add
sbbb
xchg
jnp
pop
pushf
adc
add
insb
mov
mov
pop
inc
adcb
xor
mov
pushl
mov
cs
fldcw
insl
test
arpl
in
bound
add
aad
mov
and
je
shrb
xchg
movsl
xchg
out
mov
or
loopne
addr16
cmp
push
data16
inc
ret
xchg
push
jg
pop
and
faddl
lret
cmpsb
pop
outsl
sar
pop
mov
xor
mov
xchg
sub
dec
push
iret
pop
push
jno
sub
shll
mov
mov
testb
jbe
pop
les
cwtl
gs
mov
icebp
loopne
int3
loop
add
call
xchg
push
and
test
or
cmp
neg
inc
jo
xor
lock
and
shlb
jl
xor
mov
inc
mov
lock
fbld
shl
test
inc
jae
mov
stos
into
adc
dec
xchg
cmp
mov
pop
in
popa
lahf
jo
shlb
lods
cmpsl
les
mov
fcoms
sub
xlat
cmp
add
mov
add
addr16
repz
enter
sub
stc
add
lds
mov
fidivrl
lahf
sub
int3
imul
xor
inc
xor
pop
mov
xorl
mov
xor
outsl
cmpsl
std
in
xorl
adc
jno
out
dec
dec
adc
aaa
ss
jne
es
enter
scas
and
ds
dec
shl
leave
shr
push
sbb
nop
les
addl
jnp
mov
cltd
iret
add
mov
aad
push
mov
sbb
mov
push
jge
popf
adc
push
fidivl
es
fldl
arpl
ficoml
xchg
into
cmpsb
add
fisttpll
jbe
je
popa
xorl
cmpsl
mov
cmp
adc
mov
hlt
int3
loopne
sbb
mov
dec
rcl
stos
jne
sbb
out
mov
sbb
hlt
inc
in
repz
insl
inc
inc
inc
daa
add
sub
mov
adc
dec
pushl
roll
lds
enter
mov
jp
cmp
cld
xchg
mov
insb
cmc
xchg
pop
xchg
leave
dec
mov
cmp
add
push
inc
and
fdivl
mov
cmp
push
in
mov
pusha
push
inc
mov
daa
xchg
xchg
data16
sbb
scas
out
setne
jecxz
mov
scas
cwtl
jae
push
or
popf
cmp
inc
hlt
in
in
leave
in
popa
aam
sbb
jge
mov
pusha
add
mov
int3
inc
rorb
mov
xor
and
stc
fucomip
sti
movsb
orl
rolb
popf
add
xchg
outsl
cmpsb
jl
push
xorl
repnz
data16
iret
lods
inc
aad
popa
mov
sub
in
enter
jo
dec
pusha
mov
test
mov
xchg
fdivr
loop
and
push
adc
cli
xchg
js
andb
xor
gs
sahf
rclb
pushl
cmp
add
mov
jnp
test
sub
and
xchg
pop
or
lahf
push
jo
push
push
xchg
sarb
orl
cs
adc
sbb
dec
mov
push
pusha
cld
cld
xchg
and
sub
int
or
loopne
mov
cmp
xor
cmc
movsl
mov
les
cs
bound
testl
mov
stos
pop
stos
enter
jnp
loope
in
leave
fsts
mov
hlt
add
mov
cmp
mov
pusha
jbe
sbb
push
ja
sarl
lods
out
or
lods
cwtl
icebp
mov
inc
inc
in
sub
aad
inc
push
lods
pop
es
fnstsw
pop
jmp
cmp
adcb
inc
push
jbe
test
hlt
sbb
mov
pop
ja
cmc
imul
ss
stc
mov
addr16
mov
ja
pop
mov
out
mov
or
pop
out
hlt
lods
or
mov
rorb
fwait
add
imul
int3
fcompl
mov
inc
lret
dec
ret
mov
int3
enter
push
outsb
cld
push
dec
or
inc
jl
mov
push
mov
insb
in
mov
inc
jbe
mov
mov
das
xorb
daa
xor
sub
jno
sbb
xchg
mov
test
sbb
fstl
sbb
inc
push
int3
and
jmp
test
hlt
pop
scas
xchg
rcl
aad
dec
jl
or
lods
dec
or
jge
cltd
pop
mov
ljmp
leave
push
mov
inc
ljmp
mov
aad
cmp
repnz
test
sar
mov
bound
mov
sbb
clc
pop
and
les
and
jo
mov
or
mov
test
in
fdivrl
xchg
mov
fldt
jmp
mov
fnsave
lds
lock
cld
push
jecxz
cmc
add
dec
ljmp
lret
leave
enter
fadds
cmpsb
shlb
sbb
mov
scas
push
mov
push
mov
mov
jmp
mov
pop
jne
push
jl
rol
bound
sahf
fwait
dec
mov
insb
pop
xor
cmp
fimuls
cwtl
inc
push
pop
xlat
xchg
xor
sub
mov
xchg
or
xlat
test
mov
imul
xchg
hlt
jno
int
xchg
cmpsb
gs
imul
add
pop
repnz
ljmp
dec
and
in
mov
mov
and
inc
inc
push
cwtl
hlt
gs
jae
mov
sahf
push
imul
xor
aam
lret
pop
or
les
mov
cwtl
and
sbb
mov
jae
dec
sub
sbb
stos
mov
mov
aad
outsl
in
lret
je
cmpsb
cmc
shlb
data16
xor
mov
scas
leave
rcr
jg
xchg
mov
dec
pop
lret
inc
xchg
xchg
mov
out
les
xchg
xchg
fmuls
mov
xchg
or
fisubs
and
cmc
xchg
jne
lret
repnz
scas
mov
call
jnp
test
fdiv
fidivrl
pop
push
loopne
iret
and
lods
or
jb
add
sub
ret
call
cmpsb
sub
fs
in
sub
add
and
add
stos
jne
loope
nop
nop
jb
add
cmp
sahf
dec
pop
bswap
push
push
shrl
js
fcomi
pop
or
mov
jge
pop
nop
or
lock
push
or
mov
xor
negb
adc
scas
jmp
hlt
lcall
and
push
movsl
xor
arpl
sbb
xor
sbb
imul
pop
jnp
pushf
hlt
fisttpl
mov
in
sub
test
mov
sti
ljmp
shl
add
sub
or
rorb
out
in
aaa
add
shlb
int
leave
mov
js
mov
push
add
jne
sbb
xor
pushl
jno
outsl
arpl
std
jo
pop
inc
sub
inc
xchg
mov
bnd
cwtl
lret
inc
sub
jle
mov
mov
mov
mov
scas
filds
xchg
lcall
mov
or
loope
fcmovne
jecxz
inc
ror
hlt
adc
xchg
mov
cmp
and
dec
xchg
inc
mov
sbb
or
aad
cmpsb
mov
jae
and
mov
jp
loope
jnp
fidivrs
push
cltd
test
sub
repnz
adc
jo
test
sbb
mov
cld
or
sub
xchg
loopne
jo
cmpsl
dec
repz
std
inc
lods
sti
rcll
ds
fnstenv
mov
push
enter
mov
inc
mov
addl
adc
pushf
dec
dec
sub
fsubrs
lods
cmpsl
lock
mov
inc
test
jecxz,pt
pop
jae
jo
fs
xorb
cmpsb
cmp
cmp
and
ret
hlt
lahf
in
adc
scas
imul
cs
mov
sbb
test
aam
adc
rorb
mov
cmp
insb
popa
movsb
hlt
insb
sti
sahf
cltd
adc
mov
pushf
add
pusha
push
inc
sahf
clc
push
mov
adc
lea
xor
lods
inc
repnz
inc
loope
fsubrs
pop
imul
aaa
inc
xchg
stos
add
cmp
adc
xchg
or
push
mov
cwtl
rcrb
xchg
jge
push
xlat
mov
enter
out
jae
aas
xchg
pop
adc
adc
out
enter
add
sbb
push
bound
rcrl
sbbb
fists
test
push
and
dec
xchg
out
sub
cld
add
cmpsl
cmp
mov
scas
pop
lock
in
fsubrl
movsl
fstps
addr16
lds
cmpsb
xchg
pop
push
aaa
mov
cmpsl
hlt
arpl
inc
sbb
lahf
jae
xchg
idivl
es
mov
xchg
push
jne
outsb
mov
insb
xchg
cmc
inc
iret
add
push
loopne
fildl
add
xchg
test
jp
jmp
jo
xchg
jl
icebp
xor
xchg
std
inc
jp
inc
hlt
ret
insb
cmpsb
movsl
cmpsl
fdivl
sub
jbe
xorb
lods
cmp
or
xchg
sub
add
push
test
xchg
lahf
lcall
pop
scas
jmp
pop
mov
jns,pt
push
pusha
add
rol
loop
loopne
scas
xchg
add
lock
xchg
js
fbstp
and
fmull
add
jns
pop
shl
repz
add
in
mov
cmc
sub
hlt
push
dec
ret
cltd
test
and
jb
dec
xchg
cli
call
out
shll
cmpsb
sub
or
pop
inc
pop
out
and
stos
pop
cmpb
adc
pop
inc
xor
sub
outsl
fwait
xchg
loopne
and
ss
xor
adc
int
mov
push
sti
lock
dec
pop
cwtl
cmpsl
pop
outsb
fisttps
xorl
hlt
mov
addl
movsb
xor
push
call
pop
pop
or
xlat
push
sbb
jbe
add
mov
std
cmp
lret
rcrb
pop
dec
dec
xchg
mov
pushf
incl
aaa
hlt
adc
and
mov
sbb
push
es
adc
hlt
popa
add
ljmp
cld
inc
hlt
out
xor
cmpsl
pop
iret
pop
hlt
pop
push
loopne
xchg
mov
xlat
les
xor
pop
and
xchg
mov
fnstcw
xor
inc
or
in
cmp
loopne
or
jae
mov
mov
dec
movsl
in
fmull
push
xor
mov
inc
fsubrs
pop
xor
dec
loopne
mov
out
jne
cmp
push
mov
pop
mov
movsb
mov
xchg
pop
lcall
or
clc
inc
inc
jns
or
nop
je
lods
jne
inc
xchg
test
faddl
xchg
stc
addb
sub
adc
ret
stos
ret
subb
mov
adc
jne
jno
inc
repnz
cmpsl
sub
fdivs
hlt
popa
push
aad
mov
inc
dec
sbb
mov
int
xor
in
or
or
imul
lret
adc
jp
inc
sahf
add
lods
lcall
dec
cld
pop
rcrb
call
xchg
and
jne
insl
sub
roll
inc
leave
mov
or
adcl
mov
mov
cmp
xchg
cmpsl
into
stos
dec
inc
out
pop
rorl
insb
pop
cwtl
divl
add
inc
xlat
stc
mov
push
xor
sbb
mov
aam
push
enter
xorl
pop
xor
dec
arpl
arpl
hlt
mov
inc
adc
add
testl
arpl
bound
in
jo
rol
xorb
and
dec
inc
movsb
popa
cs
xchg
ficompl
loop
mov
sbb
cmp
insb
fxch
out
popa
jne
popf
jbe
jne,pt
push
xchg
pop
ljmp
mov
insb
sub
and
outsl
es
inc
sbb
mov
in
or
cmpsb
fwait
xlat
mov
das
push
pop
pop
outsb
dec
adc
mov
pushf
jne
lods
add
js
sub
in
lock
xchg
and
mov
and
hlt
mov
cmp
andb
mov
loop
mov
adc
stos
push
sub
shr
shll
cmpsl
arpl
mov
cmp
ss
mov
xchg
es
aam
in
push
hlt
leave
sub
ljmp
or
inc
inc
pop
ret
and
cli
xor
pop
push
movsl
pop
push
and
das
dec
arpl
movsb
mov
mov
inc
cld
stc
sbb
icebp
aas
sbb
or
or
dec
or
pop
inc
dec
lock
mov
movsl
sub
scas
add
into
stos
inc
push
daa
popa
xchg
fimull
inc
sub
adc
adc
fstpt
push
sahf
jbe
ljmp
scas
test
jne
jne
repnz
movsl
sbb
or
add
into
test
sub
es
rcr
adcb
stc
sbb
neg
addl
dec
jl
sbb
orl
xchg
inc
dec
and
mulb
jne
adc
add
mov
shll
shlb
inc
adc
in
call
inc
mov
add
stos
loopne
mov
and
xchg
call
dec
ret
mov
leave
js
ljmp
xchg
jg
jmp
jns
fcoms
mov
aas
mov
call
sbb
or
cli
xor
mov
fists
dec
sbb
test
sbb
call
lret
js
repnz
adcl
sbb
mov
pop
cmp
fpatan
scas
jle
leave
sub
mov
push
jb
inc
push
scas
sbb
in
test
in
or
inc
pop
mov
add
cltd
ret
dec
jle
addr16
and
inc
xchg
cmp
in
jne
or
lahf
mov
lods
push
add
jnp
es
jbe
sahf
clc
into
out
push
stos
and
dec
es
aad
inc
sahf
push
inc
cmp
imul
shll
das
mov
pop
fnstenv
loop
lds
into
adc
mov
incl
mov
sbb
adc
imull
jne
pop
addr16
inc
mov
mov
adc
push
adc
jmp
int3
repnz
mov
mov
adc
jp
ret
xchg
addr16
ret
xor
mov
or
sbb
fs
inc
rorl
cwtl
sti
flds
dec
cwtl
in
cmpsl
mov
lods
cmc
add
fwait
ss
addl
mov
js
dec
cmc
add
frstor
sub
mov
and
adc
jp
dec
hlt
pop
push
add
cmpsb
or
test
sub
mov
out
pusha
in
test
mov
popa
add
popa
cs
cmp
pop
push
insb
sub
mov
fildll
sbb
xchg
ja
test
enter
and
mov
xchg
fidivl
xchg
pop
dec
out
sub
lret
ja
mov
fcompl
hlt
repz
das
cmp
pushf
cs
es
daa
mov
nop
mov
mov
xor
mov
xlat
xor
push
mov
lret
xchg
pushf
imul
sbb
or
pushf
mov
sbb
inc
dec
std
clc
xchg
pop
das
or
nop
stos
mov
inc
fstpt
outsl
mov
daa
pop
cmp
ret
cmpb
inc
jne
insl
sbb
into
popa
xchg
sbb
pop
icebp
das
mov
js
icebp
sbb
sub
scas
out
movsl
jne
xor
add
jb
xorl
lcall
push
repz
sbb
std
int
adc
inc
jmp
xor
shl
cmp
int3
aam
inc
shl
jp
addb
fdivr
loop
pop
xor
rclb
int3
sbb
mov
inc
iret
lods
leave
jmp
insl
xor
mov
mov
inc
xor
lret
lods
sub
ljmp
cmp
and
jns
push
add
jp
mov
cmpsl
dec
inc
cmp
ja
out
jne
mov
lods
mov
or
mov
bound
inc
cld
outsl
aas
pop
lock
lret
mov
pop
xor
mov
int
mov
into
fmull
mov
lret
jp
cmp
xchg
jg
sub
enter
fwait
sbb
jmp
jns
mov
dec
loop
adc
mov
gs
sbb
mov
aad
jecxz
push
mov
ljmp
lahf
mov
or
scas
pushf
popa
insb
mov
cwtl
cmp
out
cmp
int
loop
mov
test
out
sahf
iret
pop
dec
lea
add
pop
hlt
push
scas
dec
gs
pusha
mov
clc
subl
cmpsl
cld
jge
gs
mov
add
aad
mov
adc
mov
lods
mov
ss
pop
leave
push
call
xor
mov
ficompl
daa
mov
mov
lods
push
pop
inc
test
push
lcall
stos
enter
scas
les
lods
sbb
jne
outsl
inc
inc
repz
push
jne
mov
scas
jge
mov
mov
cld
adc
adc
mov
jl
popa
int
shlb
inc
pop
sub
sub
les
jne
lds
scas
push
rcrl
inc
xchg
iret
push
inc
ror
nop
aaa
cmpsl
sti
test
inc
adc
jae
add
jns
add
rcll
stos
cwtl
ficomps
mov
insl
popf
dec
mov
cli
fnstenv
into
popa
add
jge
inc
insl
jg
mov
mov
and
sub
jecxz
sub
popf
sub
add
mov
divb
pop
scas
jg
adc
shlb
orl
vpsubusb
fisttpll
shrl
jp
xor
cmp
movsl
fst
int3
int3
or
sbb
cmc
insl
mov
inc
stc
xchg
mov
xchg
add
push
add
scas
test
cmpsl
mov
ret
iret
fstp
jb
mov
push
jae
hlt
push
xor
shlb
enter
stos
loop
stos
scas
jae
cmpsb
xchg
push
faddl
int3
popa
adc
repnz
mov
out
insb
push
popa
jnp
ret
mov
mov
imul
scas
cld
out
rolb
fisubs
and
inc
inc
adc
or
mov
scas
inc
sub
cmp
or
movq
jae
mov
push
lea
mov
or
xor
test
xlat
scas
and
mov
pushf
inc
sub
cmc
int3
nop
xchg
mov
out
hlt
xchg
inc
ljmp
jmp
pop
ja
popf
xor
inc
push
je
pop
stos
jnp
shll
dec
stc
stc
xchg
adc
lods
loopne
stos
mov
insb
insl
inc
sti
pop
out
out
sti
cs
jne
nop
inc
enter
fbld
cmp
outsb
add
jl
dec
in
mov
hlt
dec
shlb
add
test
scas
push
mov
adc
xor
mov
mov
shl
and
movsl
sbb
shlb
push
xor
push
add
cmp
jne
xor
jae
sbb
or
les
mov
insb
jl
lea
jne
stos
push
test
jl
shl
lods
fwait
sbb
pop
in
pusha
int
push
and
addl
cmpl
int
les
pop
and
sti
lea
rorb
int
xchg
mov
push
jle
pop
lock
sbb
mov
add
jne
loopne
push
fcoml
loope
sti
fwait
xor
divl
mov
fisubrl
mov
inc
jecxz
pop
cmp
cs
jle
test
jne
sbb
push
movsb
mov
xor
test
push
cmp
hlt
jno
rol
sti
pop
out
push
or
ret
inc
fcos
out
inc
cwtl
push
cwtl
sub
pop
or
dec
xchg
adc
es
out
lods
inc
cld
cmp
xor
int
xor
stos
cmp
test
hlt
mov
mov
fdivrs
inc
xchg
xor
lret
pop
lea
push
loope
les
xchg
sti
call
orl
cmc
cld
rolb
fisubl
jne
push
lcall
int3
fidivrl
mulb
add
dec
scas
cmp
insb
loopne
cltd
mov
mov
scas
cmp
adc
les
adc
pop
loop
inc
xor
fldt
or
into
dec
push
push
xchg
mov
inc
push
mov
call
xchg
mov
push
adc
inc
mov
jae
xchg
xorb
dec
sub
and
sub
daa
mov
mov
repz
sub
test
loope
sbb
xorb
inc
fs
inc
test
stc
adc
sarb
in
hlt
adc
add
lods
sbb
nop
stos
movsb
std
pop
popa
sbb
test
push
pop
xchg
sub
frstor
ret
jmp
add
sub
pusha
mov
adc
imul
push
inc
pop
xchg
sti
jmp
mov
pusha
ss
xchg
jg
cs
popa
test
cmp
mov
mov
dec
enter
das
jo
ret
pop
movsb
push
and
push
leave
xchg
jae
shlb
or
cmp
fsts
std
pop
shlb
movsl
data16
jbe
repnz
shrl
cmp
test
fsts
test
fsubp
rcr
les
mov
dec
sub
add
mov
ret
xchg
xchg
pusha
mov
cld
das
mov
inc
aas
testl
cmpsb
js
cmpsb
icebp
das
mov
sti
imul
and
sub
mov
jg
cld
xor
jne
fsts
pop
push
sbb
fstpl
lcall
pop
pop
mov
ja
fdivrs
push
hlt
sahf
xchg
add
sub
sbb
fs
pop
insb
jns
rorb
or
enter
loopne
inc
mov
dec
push
daa
push
or
sub
xchg
mov
cmpsb
push
dec
insb
dec
and
pop
push
mov
jge
out
jae
imul
sub
sar
test
repz
mov
or
xchg
sbb
sub
loop
addb
cmp
pop
hlt
xchg
icebp
sti
popf
cmpsl
mov
push
add
push
jb
loope
stos
or
sub
insl
dec
test
fs
cmc
icebp
jb
fsubrs
test
int
add
stos
loopne
mov
xlat
es
mov
push
mov
jg
jmp
sbb
lods
mov
sub
push
out
jge
jne
and
stc
sbb
dec
stos
jp
sbb
pop
mov
hlt
push
lret
frstor
cmc
in
call
mov
test
sarb
mov
dec
inc
jne
mov
test
into
outsb
xor
dec
test
jo
and
mov
daa
fsubl
inc
inc
pusha
xor
sub
adc
or
callw
adc
in
mov
mov
cmp
cmp
jge
pop
dec
ss
lds
mov
test
pop
std
inc
addl
mov
loop
jae
inc
xchg
jne
shl
dec
scas
sub
jmp
or
pusha
out
fdivs
sub
loope
dec
test
add
mov
inc
sub
lret
xchg
xor
adc
lock
inc
sbb
jbe
sbb
sbb
mov
out
cmp
sbb
insl
inc
xor
into
js
pushf
mov
inc
pmaxub
subb
ret
movsb
mov
jne
fidivs
or
inc
inc
nop
jbe
sbb
dec
jns
fsubrs
dec
lcall
mov
test
mov
lret
je
sub
fiaddl
jb
hlt
hlt
fldenv
jge
les
mov
negb
xchg
jne
jbe
pusha
sub
cwtl
pop
fstpl
daa
mov
cmc
xchg
lret
das
push
adc
ja
jns
mov
jo
cltd
sub
pop
in
mov
pusha
jb
add
ja
in
notl
fdivl
popa
jno
subb
dec
insb
mov
inc
lcall
jbe
jb
ds
mov
lods
or
loopne
test
inc
inc
mov
push
pop
jne
out
rolb
hlt
sub
inc
cltd
mov
xchg
enter
nop
xchg
jecxz
clc
add
xchg
inc
in
xchg
cmp
fcomps
pop
popa
cmc
hlt
sub
jl
cltd
sbb
imul
xchg
sbb
mov
push
jbe
push
dec
sti
shll
not
js
pop
or
cs
arpl
cmc
lret
mov
jmp
addr16
hlt
mov
addl
test
sub
cltd
fnstsw
mov
sti
add
shlb
or
shlb
mov
out
shl
mov
jmp
lahf
imul
test
imul
daa
pop
add
imul
xlat
xchg
lcall
jge
or
cmp
decl
es
cmp
xlat
xor
push
pop
dec
adc
insb
cmp
push
pushf
jne
mov
fnsave
cmp
mov
pop
hlt
into
mov
jne
lock
mov
jmp
andl
in
sub
sbb
nop
or
sub
inc
xor
mov
or
sbb
lods
pop
dec
ss
jle
jmp
xchg
inc
jmp
or
xchg
int3
push
xchg
das
xor
outsb
gs
pop
or
clc
outsl
adc
stos
pusha
mov
add
xor
or
loop
movb
jle
mov
pusha
xchg
adc
add
jge
sti
filds
fidivl
lods
lea
enter
inc
add
or
push
nop
mov
rorl
hlt
pop
mov
aas
sub
dec
mov
mov
jne
ret
inc
mov
fsub
lret
pusha
in
repz
mov
fimuls
push
mov
mov
mov
inc
int
cwtl
pop
mov
push
rcrb
in
mov
xchg
xchg
test
in
cld
xchg
push
ds
fdivl
mov
punpckhdq
arpl
or
sbb
test
aad
push
test
or
loop
int3
enter
out
add
hlt
je
mov
pop
jg
addb
fistl
dec
fs
fnstenv
adc
dec
adc
xor
pop
in
lahf
movsl
pop
lods
xchg
int3
jp
push
leave
mov
jbe
jb
das
arpl
push
movsb
or
pop
mov
jo
dec
leave
roll
add
rcr
xchg
mov
or
mov
sub
in
cmp
or
jae
hlt
push
jg
or
push
enter
lea
mov
xchg
psubd
xor
xchg
imul
mov
sarl
xchg
jne
cwtl
mov
cmp
test
dec
loope
outsb
hlt
lock
clc
push
rorb
push
mov
call
adc
insl
jne
insb
and
mov
jge
mov
jmp
std
int3
jmp
lcall
cmp
pop
in
hlt
adc
cmpsl
and
mov
scas
js
dec
mov
mov
mov
rclb
subb
or
xorb
pop
pop
xchg
sarl
jne
cmp
ret
mov
shr
jge
mov
dec
lret
cwtl
mov
std
gs
clc
mov
in
scas
lea
loop
std
add
jae
es
das
add
cld
and
xor
or
mov
mov
imul
xlat
rol
mov
int3
mov
mov
cmp
lret
lcall
int
leave
nop
mov
sub
sbb
sub
fdivs
shrl
test
dec
add
pop
adc
adc
add
xchg
loope
popa
scas
cmp
je
sub
xor
lods
inc
jne
int
sbb
adc
cmp
jb
or
sbb
fwait
pop
xor
bound
mov
push
shrl
jecxz
imul
daa
enter
lds
inc
subb
int3
repz
mov
sbbb
xchg
adc
push
outsl
pop
cmp
cmpb
xlat
lcall
jns
aam
fistpl
scas
aaa
lcall
cmp
stos
adc
mov
ja
pop
add
rol
pop
jb
add
hlt
push
mov
xor
mov
test
clc
data16
adc
mov
or
int3
pop
pushf
pusha
cmp
push
js
bnd
cmc
xchg
inc
sbb
in
and
push
cmp
movsl
add
add
xchg
inc
lcall
pop
pusha
push
add
mov
nop
or
clc
sbb
stos
inc
xchg
rorb
repz
movsb
mov
xorl
movsl
push
js
jl
push
sbb
stos
fildll
xchg
std
inc
adc
add
dec
cltd
lds
cmp
mull
lcall
and
int
pop
sbb
pop
cmc
loope
aas
sbb
jo
cmc
adc
pop
aam
add
xchg
cmp
jae
sub
addr16
scas
xor
xchg
mov
inc
addr16
add
test
cmpsl
scas
flds
test
movb
adc
cld
test
std
cmpsb
pop
icebp
sbb
push
xchg
xchg
mov
cwtl
test
pusha
mov
enter
push
sahf
imul
jno
push
or
les
mov
pop
mov
and
js
add
shrl
jne
xor
pusha
xchg
popa
mov
icebp
and
mov
in
nop
jne
cmpsl
bound
data16
mov
aas
shlb
stc
pusha
xor
fbld
inc
fwait
lods
adc
lret
dec
mov
inc
insb
nop
stos
inc
pop
sbb
jge
xor
and
daa
pop
lds
pop
xor
mov
jnp
sbb
jmp
mov
dec
adc
mov
cld
jae
negb
rol
test
cmpsl
or
hlt
inc
imul
sbb
roll
test
das
hlt
cmp
adc
cmpsb
rcl
sbb
sti
mov
xchg
or
sub
lret
mov
or
mov
in
jl
insb
sub
jae
add
mov
test
in
xchg
xorl
xor
ficompl
mov
aaa
and
cli
test
xchg
mov
push
std
mov
jb
int3
pushf
cmp
sub
mov
jecxz
mov
inc
out
imul
lcall
push
cmp
sahf
dec
loop
lea
aam
mov
enter
mov
dec
mov
iret
inc
std
dec
imul
test
cmpb
adc
cmp
loop
movsb
sub
mov
inc
add
pop
jp
nop
xchg
test
in
mov
test
shrb
outsb
cs
add
mov
cmpb
xchg
jmp
decb
cmp
add
ret
outsl
cwtl
cs
jmp
fsubp
adc
mov
into
shlb
and
jne
add
or
outsl
and
push
enter
movsb
in
movlps
shrb
add
or
jne
inc
add
cmp
fmull
mov
xlat
pop
push
adc
pop
gs
jg
scas
sub
cmp
sahf
lea
fmull
lock
xor
push
roll
adc
mov
lahf
mov
dec
out
rorb
push
repnz
and
pop
hlt
xchg
xchg
inc
loope
fistpll
nop
mov
mov
les
add
lock
repnz
stos
push
push
ss
outsl
inc
add
push
outsl
js
jmp
jbe
mov
bound
fsubr
inc
dec
adc
mov
lcall
mov
lods
aad
inc
test
lahf
ljmp
test
mov
scas
hlt
cltd
loop
and
test
jno
sti
aas
xor
inc
iret
cltd
fst
mov
div
xor
mov
out
add
mov
ds
jge
xlat
mov
inc
mov
sar
pusha
bound
fadd
xchg
cs
and
sub
fnstsw
mov
cwtl
loopne
fisubrs
pop
in
das
xlat
adc
stos
mov
mov
mov
mov
xchg
movsl
lods
push
or
aad
fcmovnu
adc
cmp
adc
cmpb
pop
mov
cmpsb
mov
adc
stc
xor
into
out
push
pop
fwait
rolb
out
inc
or
ljmp
push
cld
inc
lret
push
push
pushf
aas
hlt
mov
mov
mov
movsb
sbb
pusha
or
sqrtps
imul
sub
aad
ror
mov
cmp
les
add
xor
insl
mov
aaa
shll
test
mov
ret
fdivrp
test
add
mov
or
pop
mov
mov
adc
pop
push
and
push
add
inc
or
mov
adc
stos
lret
sbb
xchg
or
ret
mov
xchg
mov
je
int3
lds
notl
insl
iret
lahf
test
mov
test
fistl
int
bnd
pop
and
pop
push
xor
add
push
jnp
les
andb
lahf
jbe
cmc
xor
aam
adcl
test
jbe
xchg
jb
xchg
adc
xorl
inc
les
mov
int
jbe
imul
jne
sub
pop
ffreep
mov
jne
test
xorb
pop
stos
pop
fiadds
das
cltd
jg
leave
xor
jmp
into
push
sti
ljmp
lods
aam
mov
test
pop
sti
mov
fistpl
cmpb
rolb
insb
cwtl
lock
pop
je
dec
jge
mov
orb
jne
lcall
push
enter
in
jno
mov
ljmp
addr16
sub
ds
enter
cmp
xchg
pop
cmpsl
ja
pusha
out
sbb
addb
fbld
xlat
stos
xchg
jge
mov
call
xchg
movsb
sub
adc
in
mov
sti
and
int
mov
mov
stc
mov
pop
mov
sbb
cmpsb
pop
or
or
jbe
or
fcom
rorb
mov
test
gs
lock
pop
sbb
inc
xor
fmull
dec
ljmp
hlt
pop
or
ss
insl
push
lods
pop
rcrb
sti
leave
fistl
or
hlt
out
pop
incl
jno
push
xorl
or
or
mov
push
cmc
pop
mov
negb
mov
add
xchg
xor
jb
dec
cwtl
aas
fists
inc
dec
stos
add
pop
sub
add
inc
call
call
fldl
xchg
out
push
fmuls
pop
out
inc
int
inc
mov
and
jle
fwait
xchg
xchg
testb
and
sub
fsts
stos
mov
stos
dec
loop
inc
xchg
cmp
fmull
push
and
mov
daa
and
ret
idivl
and
mov
xchg
dec
or
iret
enter
testl
add
lods
jnp
xchg
ret
add
cmp
mov
add
lea
add
or
pop
notb
nop
test
sub
and
xor
mov
adc
push
mov
inc
push
mov
daa
dec
add
push
movsl
lds
mov
or
mov
push
xchg
inc
cmp
nop
add
int
dec
stos
sti
aam
adc
testb
andb
jo
sub
shll
add
sbb
cmpsl
mov
add
mov
fstpl
mov
dec
sbb
mov
mov
pop
lods
pop
jle
ror
test
mov
test
adc
jg
inc
mov
clc
aam
dec
jle
add
out
cmpsl
sub
mov
xchg
lcall
mov
mov
aaa
fcomps
or
sbb
int
repnz
hlt
sbb
imul
xor
sbb
pop
icebp
jnp
mov
add
repz
cmpsb
mov
repnz
stos
dec
xor
addb
xchg
ror
clc
subb
jg
shlb
js
dec
push
loop
push
mov
sbb
in
arpl
jnp
xchg
sarl
leave
mov
pushf
cs
push
dec
pusha
loop
push
mov
xor
mov
sbb
jo
aam
lods
mov
push
mov
mov
js
mov
mov
push
cs
imul
jae
lcall
int3
js
jmp
push
mov
sbb
mov
fbld
leave
movsb
and
hlt
aaa
lret
push
adc
mov
or
scas
mov
ss
cmp
add
or
in
cmc
inc
or
pop
cmp
pusha
cmpsb
jnp
fcmovu
sbb
in
push
jne
mov
das
sub
imul
and
jmp
or
pop
test
cmp
dec
loope
jge
mov
out
fdivs
or
mov
adc
orb
add
nop
gs
loop
dec
movsl
cmp
jbe
popf
nop
js
or
push
mov
inc
test
out
mov
jp
stos
dec
ficomps
popa
sub
pop
fcmovne
push
hlt
adc
cld
mov
inc
lret
sub
scas
mov
cmc
and
inc
mov
pushf
inc
fstpt
adc
and
loope
loope
test
fidivrs
mov
bound
jp
xchg
add
adc
es
divb
cmpsb
hlt
bound
pop
shlb
pusha
mov
sahf
xor
shrb
leave
pop
rorl
fisttps
je
or
fcom
adc
stc
lcall
lahf
push
sub
push
les
ja
pop
leave
imulb
pop
out
inc
xorb
sti
imul
cli
jmp
subl
out
mov
ficompl
inc
rorb
jecxz
adcl
sub
enter
loope
hlt
or
add
stc
inc
or
scas
das
jecxz
stc
add
fcomip
sbb
fistps
sub
cwtl
cmp
pop
pop
push
popa
mulb
stc
or
test
jge
inc
lret
jl
cmpsl
pop
xor
shll
icebp
adc
pop
outsl
sti
cmp
jo
jae
xchg
jbe
idivb
dec
lret
js
jae
mov
test
in
adc
jbe
add
in
clc
dec
scas
jp
xchg
push
mov
lret
pop
push
lods
jo
mov
in
pop
xor
xchg
in
lret
div
pop
cmp
shll
jg
rorl
sbb
push
xor
ret
add
movb
mull
push
add
aad
or
in
mov
inc
cwtl
pop
inc
lock
sbb
mov
popf
add
add
push
lods
inc
roll
mov
fsubrl
enter
pop
lock
ret
inc
xchg
insl
xchg
in
push
cmp
push
mov
mov
adc
mov
push
lock
and
xor
mov
dec
gs
add
cwtl
bound
les
sbb
movsl
fisttpl
mov
cmp
hlt
test
mov
or
jp
pop
out
mov
xchg
int
fildll
lods
mulb
ret
sbb
lods
dec
lds
lds
mov
ret
jne
inc
testl
sub
fld
sbb
pop
inc
inc
and
dec
mov
inc
jmp
inc
pop
jmp
insl
or
lods
fidivl
jnp
cmpb
mov
out
pop
push
aas
cmp
sbb
loopne
fsubs
add
sub
push
aaa
and
jl
out
mov
cmp
push
mov
aad
mov
imul
sbb
jmp
sahf
and
jno
jl
sbb
out
in
mov
fstl
mov
inc
ret
imul
xchg
popa
or
pop
push
add
hlt
es
mov
insl
ret
test
lds
popa
or
imul
cmp
out
mov
mov
jns
fndisi(8087
insb
jmp
adc
or
mov
mov
shll
fbld
gs
insb
mov
cmp
daa
inc
xchg
adc
mov
pushf
mov
pusha
shll
jne
cmp
and
mov
pusha
lea
pop
std
and
mov
dec
int
repz
cs
cmpsl
or
test
jnp
scas
mov
ja
leave
sbb
test
lock
gs
jnp
shll
adc
xchg
nop
cli
cmc
insb
mov
xor
test
mov
lea
popa
xor
shrl
out
das
and
adc
out
movsl
inc
icebp
mov
xorl
mov
cmp
fdiv
cmp
xor
push
cmpsl
jg
dec
ret
or
test
adc
adc
or
cli
mov
and
or
mov
jne
mov
fsubl
jno
hlt
lcall
sub
test
mov
jb
add
mov
xor
mov
jns
jecxz
daa
xchg
testb
cwtl
in
stos
push
jne
mov
inc
jge
adc
xchg
dec
push
and
jne
mov
jmp
fwait
ljmp
sub
add
into
addl
mov
rcr
cmp
ror
addl
hlt
pop
enter
sub
aad
pushf
xchg
jne
adc
and
into
cmp
sbb
xrelease
fcoms
rcrl
mov
cmp
gs
push
sub
mov
cmc
adc
or
jg
inc
enter
inc
sbb
xorb
adc
xchg
push
dec
mov
iret
pushf
mov
jmp
xor
xchg
pop
mov
das
and
xchg
fisttps
jge
adc
incl
push
cmc
rcll
pop
loope
pop
test
cld
sub
adc
ret
adc
xor
je
or
xchg
mov
fmuls
sar
mov
xor
aaa
ds
push
rcrb
imul
mov
mov
mov
outsl
scas
insl
jbe
xchg
pop
jp
sbb
fwait
test
adc
jp
push
mov
mov
mov
inc
gs
sub
inc
cmpsl
add
les
sbb
and
fisttps
and
pop
push
outsl
mov
jbe
pop
aad
adc
popa
hlt
xchg
add
dec
sub
insb
push
push
xor
dec
mov
xchg
rclb
bound
xor
or
out
into
es
arpl
xlat
inc
xchg
adc
add
xchg
dec
push
jg
cmp
cmc
jp
add
mov
lods
push
sbb
pop
lods
push
cmp
popf
jl
mov
stos
mov
sarl
adc
loope
dec
inc
enter
shll
push
and
lods
jne
push
popa
adc
std
jecxz
cmpsl
cmp
lret
hlt
or
mov
add
fists
test
fstpl
sbb
mov
or
test
add
or
scas
sub
mov
ficomps
jg
push
leave
sbb
mov
mov
shlb
test
adc
nop
data16
insb
pop
jne
or
push
call
sbb
sub
xchg
inc
jle
in
mov
add
mov
movsb
nop
sbb
shl
xor
loopne
mov
hlt
int
aad
xor
stc
adc
outsl
call
sbb
or
or
mov
push
xchg
shll
outsb
sbb
mov
and
and
in
push
arpl
push
loopne
fstl
int3
popf
cmp
cli
or
bound
or
jmp
test
add
shl
push
push
dec
mov
push
sti
and
int
fimull
mov
call
xchg
and
mov
push
imul
and
dec
outsb
filds
mov
hlt
sahf
xor
cmp
addl
fdivrl
inc
mov
outsb
out
insb
sti
daa
dec
xchg
mov
fcom
gs
dec
aaa
jg
mul
lcall
push
repnz
sub
jl
adc
loope
mov
ss
mov
push
jo
inc
add
scas
mov
mov
hlt
or
iret
sbbb
in
orb
imull
xchg
call
ja
adc
sar
insb
xchg
enter
lret
cld
lods
jp
sbb
cltd
ja
incl
ljmp
shl
stc
xor
popf
xor
in
test
movsl
inc
add
fldenv
jnp
and
pop
cmp
inc
xchg
sub
movsb
and
or
int3
ds
int
fcoml
add
fidivl
dec
fistpl
pop
into
fsubr
fldenv
in
in
dec
int
jo
addr16
xchg
orb
lods
movd
dec
mov
movsb
push
inc
adc
fcoml
inc
mov
jo
mov
sbb
or
jns
and
pop
cmp
popa
hlt
pushf
mov
pop
mov
enter
loop
in
imul
cmp
in
nop
mov
int
inc
stos
push
fcomip
mov
movsb
inc
les
sub
inc
jle
cltd
test
cmp
xor
stos
lret
adc
insb
arpl
stc
imul
and
je
or
mov
mov
and
dec
add
shrb
mov
sbb
inc
js
sub
sub
mov
jne
cwtl
inc
std
frstor
mov
loope
cwtl
stos
scas
dec
orps
aad
jmp
xchg
ror
mov
cmpsl
mov
or
cmc
xchg
adc
sub
lods
int3
lahf
les
adc
data16
pusha
sub
xor
jnp
add
loope
inc
sub
cmc
out
sub
inc
mov
repnz
shrl
pop
jne
mov
les
sub
stos
xor
inc
addl
shr
cmpl
dec
pop
pusha
adc
sub
or
lahf
mov
jle
lods
aaa
add
or
lds
jle
mov
push
xchg
or
pop
and
push
aam
out
xor
add
enter
fst
int3
test
sbb
add
xor
sub
mov
sub
mov
loope
shrb
inc
test
in
and
add
scas
cmc
lcall
adc
sbb
ljmp
xchg
jbe
push
enter
aam
loopne
leave
cs
jns
pop
mov
inc
push
scas
pop
lods
into
pop
nop
adc
mov
enter
clc
pushf
test
add
or
std
xchg
es
xchg
xor
sbbl
imul
xor
mov
jnp
mov
lock
add
pop
mov
iret
std
xchg
push
or
dec
lds
xchg
sti
inc
lds
xchg
mov
add
scas
orl
and
jae
mov
xchg
sub
leave
pop
jmp
test
adc
xor
aas
imull
mov
mov
dec
ds
xchg
gs
sub
mov
iret
fsubrl
sbb
test
xor
or
adc
cmc
cmp
mov
adc
inc
sub
adc
pop
sbb
shlb
data16
sarb
and
sub
lcall
out
lret
cmp
mov
stos
stc
out
jo
push
jne
es
push
sub
in
xchg
xorl
jge
pusha
adc
add
push
lret
fs
add
or
ss
outsl
cmpsb
popa
add
adc
lds
shl
stos
push
xor
pop
imul
cwtl
inc
lret
mov
jne
pop
cli
or
les
popf
push
xchg
fimuls
adc
test
add
adc
xorl
sbb
cmc
cwtl
jns
hlt
sar
dec
repnz
ficomps
add
push
xor
adc
hlt
in
loopne
pushl
dec
xchg
cmp
ds
stos
xchg
bound
inc
mov
leave
add
pop
push
inc
shrl
int3
jne
jge
ffreep
mov
mov
dec
mov
adc
dec
add
xor
shlb
add
xchg
hlt
nop
mov
in
je
scas
nop
jle
imull
add
adc
jl
movsb
cmp
invd
sti
popa
mov
scas
push
jae
idiv
js
aam
mov
push
xor
pop
scas
sub
mov
leave
cmp
je
adc
jno
stos
inc
cmpsl
ja
inc
mov
adcl
mov
popf
pop
mov
or
sub
inc
leave
and
pop
popa
lods
imul
push
sub
mov
sbb
add
pop
enter
shl
xor
daa
rcll
mov
jns
mov
push
dec
testl
int
pop
mov
in
add
mov
xchg
adc
jbe
jne
ss
loope,pt
jo
test
fnstcw
add
sahf
clc
jg
setne
mov
cmpsb
inc
inc
mov
mov
or
mov
mov
loope
clc
addl
mov
or
sti
push
inc
xor
je
add
test
hlt
dec
xor
mov
fcoml
daa
mov
jnp
or
inc
jnp
pop
inc
mov
pusha
leave
mov
push
les
lahf
xlat
mov
xchg
movsl
loope
hlt
cld
pusha
xor
sub
sub
push
shrl
pop
xchg
add
dec
stos
xor
cld
rcrl
ficompl
int
cmp
sub
lds
fdecstp
xchg
or
out
push
mov
mov
cmpsl
mov
outsb
shrl
les
into
push
sbb
rcr
dec
ss
in
sbb
nop
out
pushf
fcompl
mov
orb
lret
dec
insb
leave
std
mov
stos
std
xor
jle
leave
sub
aas
mov
jp
sbb
inc
leave
or
pop
pop
insl
lahf
xchg
jle
stc
mov
mov
pop
jmp
andb
addb
dec
loope
cmpsl
sahf
sbb
fstps
sub
aam
scas
cltd
shrl
mov
imul
or
mov
or
adc
mov
inc
lods
xorl
jle
inc
push
ljmp
insl
cmc
in
sbb
rcrl
dec
lods
cmp
popa
mov
xor
cli
lret
sbb
mov
pop
cltd
decl
cs
mov
cmc
test
into
pop
mov
movsl
add
lahf
sub
pop
mov
pop
or
inc
xorb
push
hlt
mov
nop
cld
rorb
mov
jno
inc
and
cltd
push
and
clc
lret
loopne
xchg
sub
ficoml
push
loopne
into
fisttpll
mov
loopne
mov
pop
test
stos
pop
imul
aam
sbb
jns
add
fcom
adc
pop
mov
je
push
xor
add
sub
lock
pop
mov
mov
aas
adc
add
mov
nop
xchg
iret
imul
fs
loopne
popa
jae
sbb
das
mov
add
enter
dec
jl
fistps
xchg
into
lods
cld
or
push
and
dec
xchg
sbb
xor
xchg
inc
mov
push
orb
cld
mov
lock
aaa
fisttpl
pop
pop
sbb
sub
sbbl
mov
inc
test
xchg
cmp
and
cmp
test
dec
test
lcall
adc
adcb
jmp
lods
mov
dec
mov
imul
cltd
mov
insb
neg
pop
cwtl
enter
in
mov
stos
xchg
jmp
mov
add
mov
jb
insb
lret
loop
or
xchg
add
inc
pop
cwtl
hlt
lods
or
adc
fildll
pop
nop
lock
sarb
jbe
clc
fisttps
sub
inc
icebp
mov
popa
subl
ja
loop
jmp
pop
sub
rcrl
jle
stos
insb
jge
xchg
pop
imul
out
sub
scas
xchg
loopne
aad
add
fcoml
add
loope
shll
xchg
out
stos
adc
add
mov
inc
mul
andb
jne
adc
and
mov
inc
jne
pop
xchg
add
jb
add
sti
fisubrs
fimuls
pop
out
or
stc
cmp
pop
aad
in
out
hlt
mov
insb
dec
mov
adcl
sti
mov
fsubl
call
pop
test
mov
mov
jmp
xchg
outsb
sub
sub
shr
scas
mov
sub
out
nop
or
mov
jg
mov
pop
mov
ret
mov
fcoms
lods
shlb
cmp
aas
and
sti
push
dec
add
jge
inc
in
jne
ja
imul
mov
cmpsb
into
pop
sub
sbb
aad
add
xchg
scas
ret
pop
shll
push
jb
and
ret
movsb
addr16
bound
hlt
add
inc
push
movsl
cltd
mov
mov
fldcw
mov
cli
sbbb
adc
pop
mov
aas
inc
xchg
and
rcl
mov
in
andb
cmp
sahf
or
push
dec
lahf
sbb
loop
shlb
pop
hlt
jg
pop
adc
mov
inc
scas
test
mov
mov
pop
pop
cld
aas
leave
mov
mov
or
pop
sub
out
lahf
pop
push
push
imul
jmp
cmp
xor
mov
mov
cmpsl
push
sbb
rclb
ja
jae
mov
jns
iret
popf
push
cltd
sarb
hlt
outsl
xor
inc
stos
mov
xlat
ss
inc
pushf
addr16
imul
call
mov
push
xchg
cltd
cmp
mov
repz
mov
jno
jne
xchg
xor
test
loope
pop
ja
push
hlt
xchg
or
push
push
shrb
sbb
sbb
rol
mov
push
pushf
sub
mov
test
dec
addb
lea
dec
into
hlt
inc
leave
subl
xchg
jle
or
es
notb
add
fcomi
andl
aam
push
mov
xchg
jbe
xor
lds
mov
je
dec
mov
cmp
cmovl
fmull
fwait
shll
imul
fiaddl
enter
cmc
cld
adc
and
or
push
std
jnp
ss
xor
imul
orb
jne
mov
gs
pusha
mov
cs
dec
push
enter
loopne
mov
ret
int
stos
js
cwtl
test
inc
shrb
cmp
mov
loope
stc
xchg
adc
adc
or
icebp
and
js
fcom
ss
enter
int3
cmpsl
jne
es
fwait
pop
mov
sub
vmovntps
mov
imul
mov
xchg
lock
add
cmp
add
dec
adc
xorl
cmp
mov
out
pusha
mov
lret
cld
mov
add
mov
adc
vminpd
mov
outsl
sub
mov
fisubl
enter
jne
xor
mov
inc
imul
mov
mov
push
xorb
dec
out
add
sti
ss
in
mov
lods
dec
pop
iret
ss
pop
fsts
mov
sub
xchg
les
pushf
push
test
adc
lock
std
cmpsb
or
xorl
jge
dec
scas
jo
add
sbb
arpl
add
lret
pop
mov
or
lock
adc
or
int
mov
std
add
repnz
push
shl
pusha
inc
pop
sbb
mov
mov
pop
mov
pop
and
cs
or
outsl
mov
and
fmuls
cmpsl
rorb
add
jg
dec
hlt
add
jo
les
mov
loop
dec
aaa
mov
movsl
add
sahf
cmpsl
push
hlt
jbe
jnp
pop
addr16
fwait
jne
das
in
cmc
movsl
cmpsb
test
outsl
inc
filds
call
jle
add
xchg
add
xlat
scas
into
pop
scas
inc
ret
test
imul
fsubrs
dec
ficomps
ss
pop
shlb
decl
vpackssdw
pusha
out
mov
add
mov
test
into
les
arpl
shlb
jo
in
and
mov
jmp
addb
into
jmp
pop
pop
lea
jnp
fistps
nop
imul
push
push
push
cwtl
cli
jb
push
roll
lods
sbb
dec
pushf
xor
lea
movsb
mov
div
fmull
sbbb
or
imul
imul
and
popf
inc
and
dec
pop
pop
ret
into
xlat
cli
pop
mov
call
xchg
stos
sti
in
leave
pop
adcl
mov
dec
cmc
movb
ror
adc
cmpsl
imulb
into
add
sub
fcompl
imul
fucomp
stos
sub
inc
and
cmpsl
std
push
and
inc
jl
roll
enter
mov
add
pop
xchg
aad
sbb
loope
lcall
lods
dec
adc
iret
sti
pushf
sbb
dec
divb
sbb
mov
call
mov
dec
je
fs
lcall
ficoml
dec
nop
sub
testb
adc
sub
out
mov
xor
outsl
sbb
and
scas
testb
movsl
sbb
in
push
push
shrb
dec
inc
lds
or
test
leave
stos
inc
stos
and
jno
jbe
xor
add
inc
mov
pop
push
fwait
xchg
addb
sub
lret
jb
dec
adc
imul
pop
arpl
or
xchg
test
inc
gs
mov
test
ret
addr16
mov
fs
xchg
out
lock
cwtl
fs
jne
add
loopne
inc
std
in
sub
add
sbb
add
fdivs
inc
jle
xchg
adc
fsubs
pusha
icebp
and
sbb
lahf
mov
clc
inc
hlt
and
push
pusha
loope
nop
push
add
insb
std
inc
fcmovne
fisttpl
call
jnp
bound
mov
push
test
pop
jl
lock
jge
xor
in
adc
insl
loopne
dec
xor
pop
movsb
adc
adc
pop
cmp
and
cmp
ljmp
out
mov
ret
ljmp
xchg
mov
fdivs
std
inc
cmpsl
mov
sub
jns
xchg
and
dec
mov
lds
in
push
ds
pop
push
addl
or
in
sbb
jne
jmp
in
arpl
jmp
pop
dec
pop
scas
aad
adc
xchg
mov
das
cld
and
mov
ret
fildl
add
imul
cmc
js
mov
rcrl
jp
imul
dec
decb
inc
add
stos
inc
push
hlt
dec
adc
lock
icebp
outsl
int3
inc
inc
test
xchg
and
add
les
push
rolb
int3
jnp
pop
dec
cmpsl
int3
dec
jne
adc
shll
cmpps
int3
push
test
push
hlt
rorl
xchg
push
mov
pop
fildl
jge
cs
and
inc
outsl
or
loopne
jne
xchg
test
and
push
or
fistpll
shlb
das
push
mov
movsl
add
mov
movsl
test
pop
mov
fisubl
xor
loop
shll
imul
outsl
add
je
mov
pop
sub
lods
add
or
pop
inc
push
cs
add
or
ljmp
mov
mov
test
jne
js
imul
enter
dec
or
xchg
cs
sub
xchg
ss
xchg
cmp
sub
jge
adcb
or
imul
push
cmp
dec
dec
xchg
or
mov
adc
test
cmp
mov
pop
ja
std
sti
jmp
hlt
stc
pop
pop
jge
adc
in
icebp
adc
jo
mov
scas
xor
ja
into
addb
int
and
add
test
inc
stos
jl
sahf
lret
nop
adcb
add
rcrl
imul
mov
popa
xor
repz
les
aam
mov
inc
popf
or
mov
fidivrl
fnstcw
stos
inc
cmp
inc
add
mov
xorb
popf
popa
push
stos
and
gs
xchg
rolb
push
sbbb
xlat
xchg
xor
ficoms
mov
sbb
cltd
subl
pop
std
in
lahf
pop
daa
outsl
sbb
and
sub
inc
push
or
sbb
jg
imul
push
sbb
sahf
std
and
adc
lods
and
lcall
adc
cmpb
jl
xlat
inc
xchg
xor
leave
inc
cmp
jecxz
lcall
cmpsl
movsb
bound
jnp
fldcw
repz
inc
lcall
xor
fcompl
mov
add
mov
jb
pusha
hlt
out
fistps
scas
jl
shll
pushf
adc
out
inc
cmpsb
std
mov
int
push
aam
mov
inc
loopne
pop
loopne
lds
or
xlat
mov
mov
add
lcallw
dec
int3
divb
mov
das
hlt
add
inc
jb
pop
subl
cmpsl
aam
dec
lods
icebp
insl
test
cmp
inc
adc
push
mov
dec
rcrl
mov
ficoml
lods
rcr
sub
movsb
js
lcallw
lods
jl
or
or
mov
test
jmp
test
test
fnsave
daa
dec
sub
js
cmp
popf
fmul
mov
test
sbb
sub
fscale
loope
or
or
cld
jns
in
cmc
mov
fldenv
jl
dec
shll
jbe
push
cmc
inc
dec
lret
xchg
push
pop
ret
mov
sar
sub
lret
and
cmp
fistpl
sbb
inc
inc
or
push
cmp
mov
jmp
fadds
jns
insl
out
dec
sbbb
pop
scas
test
mov
sbb
rcr
and
mov
lret
out
mov
and
push
loopne
push
popa
add
push
nop
aas
or
or
hlt
sbb
sub
cmc
jne
in
add
pop
jnp
xor
mov
test
lahf
pop
xor
jns
sbbb
hlt
adc
cmpsl
test
xlat
pushf
cmpsl
dec
roll
add
or
pop
pusha
ss
cld
into
jecxz
dec
push
cmp
xlat
mov
mov
jle
pushf
fadds
ss
hlt
xchg
xor
pop
int
sbb
and
dec
das
lret
sbb
pop
enter
lods
addb
mov
jl
mov
outsl
or
jecxz
jns
ss
std
jmp
arpl
sbb
pop
add
jne
popf
orb
imul
and
insb
lret
jl
arpl
nop
hlt
andl
add
push
hlt
aas
inc
in
ds
mov
mov
loop
sub
in
sbb
flds
cmp
mov
cmp
sarl
fdivrl
in
enter
xchg
inc
les
shll
fyl2xp1
inc
adc
add
mov
jmp
dec
mov
jne
lock
dec
imul
adc
mov
pop
xchg
jno
jns
mov
out
xor
fisubrl
das
mov
jg
mov
push
xchg
sti
ljmp
inc
addl
inc
inc
enter
scas
dec
mov
push
mov
leave
stos
or
maxps
ret
cmc
ficomps
xor
repnz
jl
lcall
push
jb
movsl
mov
and
adc
mov
mov
or
scas
ja
insl
mov
dec
stos
xor
mov
popf
lahf
jns
mov
jle
pop
clc
cld
jne
movsl
push
hlt
jb
ret
adc
xchg
and
jle
fnstcw
movsl
jle
sub
push
pushf
xchg
add
push
out
cmp
mov
cmp
add
in
subb
xlat
out
mov
testb
jne
adc
mov
mov
das
add
xor
sub
lahf
sub
sbb
inc
sub
outsl
pop
inc
pop
cmp
cs
ljmp
inc
mov
push
push
jg
movsl
insl
dec
adc
hlt
arpl
sbb
jmp
jne
xchg
jp
in
xchg
dec
push
lods
outsb
pop
add
mov
lea
inc
mov
xor
add
lahf
pop
sub
push
pop
xchg
movsb
fucomip
cmp
jns
adc
and
outsb
mov
push
ret
fcoml
fnstcw
xchg
insl
dec
cmp
inc
jnp
mov
andl
and
mov
or
inc
std
xlat
cmpsl
lods
shll
inc
enter
cmp
ret
fcoml
fwait
mov
sbb
sti
sbbl
fucomp
loop
scas
mov
int
das
scas
mov
cmc
jle
push
inc
sub
mov
add
les
out
pop
add
test
arpl
xchg
mov
orl
hlt
das
test
repz
xchg
push
lcall
lret
out
add
add
push
stos
inc
out
insb
cmp
jne
insl
mull
push
lods
movsb
sub
dec
fildl
movsl
pop
adc
dec
adc
sbbb
test
mov
xchg
imul
les
jl
mov
aad
pop
push
fisubrl
dec
mov
mov
out
dec
pop
shlb
jne
and
cltd
xchg
jmp
pop
mov
sub
loopne
or
arpl
inc
cmpsb
jp
test
xchg
std
popa
push
pop
pop
mov
leave
dec
test
lods
add
adc
mov
xchg
mul
dec
movsb
lcall
mov
or
inc
inc
push
push
add
and
xor
and
sub
lahf
push
orl
xchg
orl
push
xchg
push
xchg
test
mov
pusha
jno
cmp
out
inc
jecxz
andl
sub
je
lods
std
sbb
std
enter
cmp
jne
sbb
stos
or
inc
in
test
and
das
nop
aad
pushf
arpl
sbb
add
sub
jl
fdivrp
mov
dec
mov
rolb
in
popf
hlt
stc
xlat
mov
imul
bound
and
rcll
xchg
xor
mov
insb
jge
lcall
fimuls
dec
mov
inc
mov
int3
popa
add
loopne
jmp
test
arpl
xchg
push
int
jg
adc
gs
out
fbld
arpl
fsub
ret
aaa
adc
stc
test
lock
pop
shrb
repnz
scas
mov
fidivrl
fs
ja
addb
jecxz
test
test
push
adc
roll
fstl
xchg
out
scas
xchg
int
shrb
push
mov
pop
hlt
cli
cld
loop
enter
stos
lods
enter
mov
out
pop
push
cmp
pop
mov
dec
incb
enter
sahf
aaa
dec
adc
lret
xchg
push
xorl
movsl
loope
imull
inc
adc
lods
fucomip
test
leave
push
popf
mov
test
add
les
mov
loopne
loope
cmp
sbb
icebp
mov
pushf
mov
and
and
push
pop
xchg
mov
pushl
ficompl
test
sbb
cmpsl
aaa
or
imull
push
xchg
addb
push
sub
outsb
or
pop
pop
pslld
mov
scas
insb
repnz
movsl
sahf
sbb
cli
add
or
movb
add
shr
es
pop
sub
cltd
mov
iret
lcall
pusha
cs
nop
lods
push
popa
outsl
lcall
leave
outsb
cld
movsb
mov
ret
test
sbb
test
dec
sub
mov
inc
orb
in
hlt
cmpsl
int
mov
fs
and
jne
push
icebp
dec
sub
es
hlt
jmp
xor
mov
sbb
xchg
popa
movsl
in
pop
push
imulb
imul
fisubrl
ror
adc
mov
pop
mov
loop
add
popa
sub
and
bound
sub
rorl
clc
and
ss
in
add
mov
out
xchg
testl
roll
inc
adc
push
pop
push
jmp
xchg
ljmp
xchg
gs
sbb
jle
push
inc
mov
and
shlb
xchg
inc
aad
cmp
insb
and
vmovhps
scas
or
mov
mov
cmp
les
pusha
mov
shlb
push
mov
adc
das
cmc
jnp
jno
xchg
hlt
push
imul
adc
stos
push
fisubrs
and
push
stos
adc
cli
or
hlt
cmp
push
sarb
sbb
popf
icebp
ljmp
das
push
rcrl
test
pushf
and
in
in
sub
add
sub
mov
push
or
mov
stos
aam
xchg
sub
jle
dec
and
dec
int3
shll
add
cmp
clc
scas
stos
and
push
sub
add
jbe
mov
subb
jns
sahf
sub
mov
repz
movsb
fs
xorl
xchg
push
imul
inc
lcall
rclb
lods
clc
aad
rcr
pop
xor
mov
enter
jbe
icebp
insb
subl
adc
test
mov
jb
push
pushf
lods
lcall
movb
out
mov
nop
or
jle
xor
subl
mov
dec
out
or
aad
jbe
cmp
dec
push
xor
mov
or
imul
mov
imul
shlb
dec
sbb
js
inc
add
add
xor
inc
xor
mov
in
xchg
mov
mov
js
cmp
inc
ljmp
insl
inc
pop
loopne
adc
addr16
repnz
adc
xchg
jb
pop
sar
xchg
adc
out
popa
cli
push
pop
mov
xchg
push
rcl
mov
imul
orl
leave
and
mov
mov
int
jns
lock
jo
mov
and
mov
into
into
inc
or
out
jecxz
xor
sub
ja
jp
sahf
mov
mov
repz
test
cmpsb
insb
add
nop
cmp
mov
shrb
rorb
sbb
lahf
push
sbb
mov
and
pop
mov
popa
mov
cli
testl
mov
pop
or
xchg
lea
cmp
nop
sti
cs
xchg
popf
loopne
std
dec
mov
outsb
add
cld
mov
mov
fs
add
mov
mov
fisttpl
xor
pop
dec
adcl
lret
cs
in
mov
mov
xchg
scas
sub
or
xor
icebp
rclb
in
cmp
cwtl
sbb
jmp
inc
mov
inc
mov
pop
jg
pop
mov
jp
dec
or
or
push
xchg
sbb
lock
jmp
dec
ljmp
mov
xor
add
lret
mov
xchg
outsl
xor
cld
xchg
sti
lock
adc
xchg
or
scas
or
cmpsb
push
jmp
sbb
insl
shlb
pusha
jg
inc
dec
jl
shr
mov
dec
repnz
cmp
cmpsb
and
enter
loopne
jae
push
mov
int
mov
nop
test
sarb
xor
nop
dec
loopne
jae
cli
sar
rclb
inc
call
mov
sbb
fcom
popa
mov
or
and
jle
mov
mov
and
gs
add
inc
mov
testb
imul
push
jae
mov
mov
repz
and
insb
xlat
int
in
movsl
in
mov
jecxz
cltd
push
out
mov
adc
mov
xor
call
loopne
mov
sbb
incl
adc
mov
aas
sar
cmp
pop
xchg
in
mov
ret
lcall
jns
movb
les
mov
arpl
sbb
xorl
mov
adc
popa
insl
lcall
gs
adc
popa
fildl
push
xchg
inc
std
in
jl
pusha
out
push
outsl
push
sbb
mov
cmpsb
or
cmpsb
inc
cmp
data16
test
fnop
fdivl
sub
adc
clc
les
popa
push
jmp
xor
inc
subl
andb
dec
loopne
add
xchg
cmp
mov
or
movsl
int3
popa
aaa
and
and
add
push
bound
jmp
mov
mov
jle
lods
xchg
out
in
lcall
mov
and
ds
arpl
jmp
jmp
or
stos
mov
add
cmp
sub
mov
sahf
mov
xchg
lods
push
mov
mov
sub
fwait
inc
popa
jecxz
mov
mov
jae
or
das
inc
sbb
mov
sub
les
or
repnz
jmp
nop
xor
out
push
or
aam
dec
movsl
aam
jae
enter
xor
xchg
mov
fwait
test
jmp
sbb
stos
mov
fsubl
mov
into
xchg
and
imul
sub
or
cmp
adc
xor
push
andl
jmp
and
les
or
xchg
and
popf
inc
pop
aas
mov
jns
mov
cmp
pushf
int3
lock
mov
or
loop
push
pop
cld
add
xor
fisttps
pop
jns
jno
jo
arpl
nop
std
bound
loop
lds
push
and
or
cmp
fadds
jno
adc
add
pusha
iret
push
insl
loop
inc
push
subl
mov
and
add
nop
sarl
mov
mov
orl
andl
mov
cld
or
ja
fdivrs
lahf
in
mov
xadd
mov
xor
mov
push
or
mov
cmp
ror
dec
in
dec
ficoms
jmp
xor
mov
adc
xchg
test
jle
mov
into
mov
mov
cmc
insl
mov
shll
or
xor
cmp
negb
subl
repz
test
mov
sbb
int3
in
jle
mov
mov
ss
xchg
sub
orb
mov
cmpsl
and
cvtdq2ps
mov
sti
leave
or
sub
add
cmp
xchg
jno
loope
outsb
lahf
sub
sbb
mov
and
sbb
add
mov
mov
inc
clc
jp
ljmp
iret
mov
sbb
cmpl
sub
adc
idivl
sbbl
movsb
cmp
pop
cld
clc
leave
pusha
lds
inc
inc
inc
hlt
test
fnstsw
movups
and
sub
ss
xor
cwtl
push
sub
sub
pusha
pop
popf
movsb
inc
push
cld
push
loopne
insl
rorl
push
jns
mov
loop
adcb
iret
popl
xlat
inc
js
rcl
cmp
dec
jne
jg
test
sub
sbb
test
in
xchg
shll
mov
enter
shlb
or
lret
fidivrl
xor
pop
sub
and
mov
mov
int3
into
pusha
int3
aam
hlt
mov
pop
in
pushf
pusha
mov
imul
pop
and
mov
nop
jae
dec
imul
pusha
pop
iret
sahf
or
aad
es
cld
inc
lds
pop
push
int
outsl
outsb
mov
jle
push
pop
sub
adc
sarb
jl
jne
movsl
imul
push
outsl
adc
inc
xchg
loopne
xchg
add
pop
or
jo
push
rorb
rcr
jnp
mov
scas
jno
loope
add
xchg
push
mov
hlt
push
jmp
push
mov
lcall
test
imull
lea
mov
mov
pop
xchg
and
mov
jae
xor
inc
xchg
in
adc
xchg
testl
mov
addr16
jne
lret
pusha
jecxz
mov
hlt
xchg
mov
pusha
pop
adc
sbb
cs
sbb
add
rorl
sbb
xchg
into
pusha
mov
xor
mov
int
jne
ss
lods
ss
fucom
filds
push
cmp
push
les
sbb
or
cmp
mov
sub
adc
stos
cmp
movsl
repnz
cli
push
jp
call
out
mulb
mov
je
cmpsl
add
pushf
stos
js
and
mov
std
test
and
sbb
xchg
hlt
insb
and
xor
xchg
inc
nop
mov
loopne
pop
out
xor
mov
jge
hlt
sbb
inc
add
push
add
mov
inc
jmp
jae
std
je
jae
std
in
ds
enter
mov
cmpl
adc
loope
mov
sub
xchg
or
ljmp
push
hlt
push
push
xchg
repnz
sbb
outsb
lods
push
pop
stos
pop
mov
enter
clc
int
xchg
inc
pop
popf
mov
jle
sar
xor
xchg
dec
hlt
loope
movsb
adc
mov
xchg
repz
cmpsb
enter
dec
inc
loop
sub
add
jg
sbb
inc
pop
mov
mov
push
inc
popf
cmp
rclb
xor
dec
push
fcompl
rorl
push
jge
inc
sub
add
or
mov
xchg
sub
add
leave
stos
cmc
dec
xlat
sbb
jp
cld
xorb
enter
push
testl
leave
mov
push
mov
pop
mov
pusha
or
loope
sar
jl
rcrl
ss
movsl
push
add
js
jns
mov
cmp
mov
orl
shll
movsb
iret
out
lcall
sti
out
fists
bound
jns
shrl
pop
test
add
mov
mov
add
call
xchg
aam
outsb
nop
int3
ffreep
in
inc
jecxz
xor
dec
dec
test
roll
jne
movsl
add
sti
addb
sahf
pop
pop
mov
lock
and
or
sbb
lahf
mov
jnp
jb
add
pop
and
test
lret
mov
mov
and
clc
dec
lds
mov
bound
sbb
sahf
mov
shlb
out
jmp
in
pop
stc
test
push
out
jo
mov
mov
leave
and
sub
enter
mov
in
pop
scas
inc
inc
push
loopw
aad
nop
add
insl
push
les
ss
in
mov
dec
pop
dec
adc
jle
addl
pop
cltd
aad
ljmp
xor
xchg
aaa
inc
jmp
pusha
scas
xlat
xchg
loopne
inc
inc
sbbl
inc
js
lods
pusha
jge
push
aas
xchg
cmp
mull
arpl
adc
fmull
push
jecxz
loop
mov
fistps
ret
xchg
idiv
es
cld
pop
adc
std
aas
mov
fcmovnbe
push
fs
in
xchg
or
push
sarb
ret
inc
jecxz
fstl
mov
movsb
push
test
inc
daa
cmc
xchg
pusha
xor
xor
sub
jne
mov
push
fisubrl
mov
sti
hlt
mov
mov
cmp
push
str
sub
and
jnp
xchg
push
xor
inc
sbb
adc
or
pop
mov
xor
inc
ret
loop
add
pop
shlb
add
xor
push
movsl
cmc
in
mov
sbb
adc
sub
push
inc
mov
scas
xchg
inc
inc
add
les
and
inc
push
clc
or
stos
cmpb
repz
jne
adc
xchg
push
pop
add
imul
mov
lret
sub
adcb
scas
or
addr16
aam
repnz
pop
inc
push
leave
test
xchg
push
pop
clc
add
push
push
jecxz
inc
mov
std
mov
mov
inc
test
lock
loop
decb
test
js
push
jg
push
hlt
insb
adc
adc
xchg
sbb
xchg
cmpsb
daa
gs
cltd
icebp
movsl
sbb
daa
inc
lret
in
or
sbb
mov
sbbb
scas
pop
add
cmp
inc
push
movsb
mov
cwtl
cmp
mov
sub
xchg
in
fnsave
xor
jne
or
jb
cs
repz
or
sub
dec
fcoms
pusha
popa
in
mov
clc
sbb
cmpsl
mov
hlt
mov
sub
pop
cmpsl
adc
and
bound
shl
sahf
mov
mov
imul
sbb
mov
movsl
mov
mov
xchg
arpl
dec
aad
loop
ret
cmp
sbb
mov
leave
push
addr16
fidivl
push
scas
addl
and
push
popf
lret
sub
arpl
inc
test
aam
sbb
xchg
test
lods
pop
sbb
loope
jns
ret
decb
cs
mov
data16
mov
adc
add
enter
jecxz
adc
std
mov
inc
jb
adcb
ffreep
bound
xchg
pop
jne
mov
aad
fucomi
mov
xchg
pushf
push
mov
mov
insl
push
dec
cs
sub
test
cwtl
add
movb
xchg
and
hlt
inc
push
mov
add
xor
xor
lods
push
js
repnz
addl
mov
sti
add
test
enter
aad
nop
insb
movsl
inc
and
sbb
jmp
test
jo
sub
test
in
lea
mov
call
adc
adc
jecxz
imul
insb
mov
jnp
and
aam
jge
clc
fistps
fists
jle
rcl
mov
or
cmp
xchg
add
out
lahf
xlat
or
jp
ja
lods
pop
and
fisttps
adc
inc
jne
pop
repz
loopne
nop
inc
mov
mov
or
gs
pushl
fldt
cmp
movsb
jne
aam
cld
roll
mov
inc
icebp
jg
sbb
cwtl
les
popf
dec
jae
loopne
inc
xchg
jge
push
jne
xchg
inc
mov
imul
cmc
lret
pop
dec
clc
xchg
mov
addr16
sub
inc
enter
or
jle
xchg
leave
daa
outsb
mov
ja
push
jl
mov
inc
add
stc
pusha
loopne
cmp
ret
in
mov
adc
popf
and
or
sub
shlb
and
cmpsl
jbe
add
inc
push
test
ret
mov
cmp
mov
lcall
add
lds
inc
mov
pop
lods
add
jbe
in
ja
dec
insl
mov
mov
push
cmp
mov
pop
pop
pop
inc
xorl
cmc
lock
insl
mov
mulb
repz
sub
jne
pop
or
cmpsb
call
xorl
fs
sti
lret
mov
stos
jle
stc
push
mov
enter
inc
xchg
std
jge
sbbb
inc
popf
sbb
fnstsw
loopne
pop
push
jmp
fbstp
push
es
push
inc
data16
xchg
jge
sub
cmp
lret
pop
in
mov
les
aad
cmpsl
mov
dec
movhps
fxch
call
push
flds
loop
and
aad
fldl
mov
rorl
addb
rcr
hlt
or
stos
dec
outsb
jne
pop
pop
and
inc
pop
icebp
sub
pop
fwait
ds
movsl
popa
and
test
mov
sbb
loope
sub
add
mov
jns
jb,pn
hlt
dec
out
scas
dec
subb
test
pop
pop
cmp
ret
shll
outsb
test
rcr
cld
mov
mov
rolb
xchg
ret
xchg
pop
icebp
sub
enter
hlt
iret
dec
cwtl
mov
popf
sbb
sub
mov
andb
add
inc
sbb
imul
rorl
es
sub
mov
jl
inc
xchg
or
mov
add
das
mov
add
adc
mov
nop
stos
jno
mov
jg
loopne
pusha
fimuls
or
fbld
div
pop
rol
and
sub
js
pop
iret
xlat
mov
stos
xchg
addr16
sti
loope
nop
jns
pushf
dec
and
aam
adc
ret
lcall
negb
adc
fstl
imul
ret
mov
ljmp
mov
mov
imul
jne
cs
sub
push
mov
add
inc
xchg
int
mov
cmp
incb
hlt
xor
add
sub
in
pop
xchg
jae
loope
push
push
jo
mov
insl
xchg
mov
mov
jbe
mov
xchg
adc
cmc
nop
sahf
lods
fucom
xor
sarb
push
test
fs
cld
fwait
push
rorb
sbb
xor
inc
dec
bnd
add
divl
incb
mov
jp
fstpl
clc
mov
dec
mov
fnstsw
lock
pop
mov
add
movsb
out
xchg
mov
ss
int
movsl
loope
mov
jl
and
rol
pmuludq
jae
out
leave
mov
aaa
adc
xor
test
pusha
jns
mov
mov
or
sti
nop
xlat
cwtl
int3
mov
sub
mov
cmpsl
arpl
leave
pop
es
jl
cmc
inc
int3
aas
out
cmpl
test
xor
inc
mov
stc
cmp
int3
or
mov
or
rcrb
test
push
nopl
in
add
xchg
xchg
ljmp
pop
dec
fimull
fst
xchg
lahf
pop
xchg
shl
shl
push
pop
add
test
add
enter
fimull
add
aas
pop
arpl
xor
popa
inc
inc
xor
or
hlt
imul
pusha
movsb
jae
xor
clc
adc
xchg
or
cmc
in
mov
xchg
inc
hlt
cmp
pop
scas
add
xchg
mov
adc
enter
push
insl
adcb
leave
enter
stos
gs
xchg
mov
movl
hlt
mov
mov
jne
aam
loope
push
mov
fistpl
fidivs
cld
inc
int3
jp
pusha
xor
jp
test
pop
xchg
xor
dec
adc
ficoms
sub
mov
cmpsb
mov
sub
pushf
pop
mov
add
sub
lcall
stos
test
ljmp
lret
cmp
xchg
lret
sub
mov
add
add
call
pusha
hlt
cmp
jecxz
mov
push
dec
xorl
and
fdivl
xor
pop
mov
dec
jle
imulb
jne
pop
shll
jge
xchg
jb
mov
lcall
cmpsl
mov
inc
push
or
iret
sub
cbtw
stc
inc
shrd
andl
cld
mov
xor
ss
push
push
add
and
lahf
insl
cmp
sub
sbb
mov
or
popa
and
add
pop
mov
inc
sub
lods
mov
notl
or
scas
movb
dec
cmp
xchg
outsb
orb
mov
inc
xchg
mov
adc
aad
xchg
jo
ss
ret
or
insl
add
jg
mov
shlb
mov
xlat
fldenv
sbb
adc
aaa
repz
dec
sub
and
sbb
jl
cwtl
pop
xchg
jle
rol
mov
cmpsb
cmp
mov
jl
adc
lds
dec
fldl
pushf
inc
repnz
test
sub
and
stos
and
push
xchg
testl
mov
xor
inc
xor
jne
mov
add
mov
fdivr
or
mov
notl
hlt
mov
inc
sbb
lods
scas
pop
lea
cmp
or
mov
cmc
out
push
mov
xchg
pop
aam
repnz
push
movsb
lods
faddl
movsb
mov
add
add
leave
hlt
sbb
jo
insl
aam
dec
mov
xor
jge
add
repnz
out
and
add
test
ret
call
and
sbb
popa
loop
push
mov
imul
xchg
xor
hlt
cmc
xor
pusha
jp
mov
mov
jg
jp
scas
jne
xlat
mov
shlb
enter
push
jno
push
xchg
add
or
mov
xchg
cli
jo
jnp
dec
cs
enter
lock
add
push
mov
test
in
dec
mov
xor
rorb
js
add
push
cs
rcll
add
inc
jne
out
rcrb
xor
or
cmpsb
fs
mov
lea
sub
hlt
jmp
or
pop
cmp
dec
jno
cmp
je
movsl
push
les
mov
fistpl
and
test
testl
mov
dec
ret
js
inc
xchg
movsl
popf
pusha
stos
in
and
mov
fmull
fidivs
call
pusha
sub
pop
lret
imul
sbb
pop
mov
push
add
leave
or
enter
xor
xor
out
mov
xor
cmp
dec
movsl
inc
jne
roll
shl
xor
jnp
shrl
lahf
push
adc
mov
sub
jle
leave
or
sti
xorb
pop
cld
xchg
dec
sbbl
flds
push
hlt
or
jmp
mov
fsubl
mov
std
cwtl
xor
fstpl
push
clc
aaa
adc
lods
sub
ss
xchg
cld
add
xor
push
or
cmpsb
mov
test
push
cmpb
sbb
xchg
dec
xor
fsubs
adc
nop
sub
lock
push
movd
mov
jne
push
std
cmc
pusha
jecxz
shl
inc
loopne
fdivrp
hlt
and
sahf
and
lds
fdivr
hlt
cwtl
push
jae
mov
sbb
sub
ret
sbb
stos
fsubs
movsb
outsb
dec
xchg
lods
icebp
cmpb
orb
ja
lods
jp
in
nop
pop
push
sub
test
stc
cltd
sahf
test
dec
mov
sub
mov
daa
sub
pusha
mov
lcall
dec
pop
dec
jp
adc
insl
lock
inc
add
xchg
leave
cwtl
jg
cwtl
xor
cs
dec
adc
xchg
push
popa
inc
mov
stos
jns
mov
nop
sarl
fwait
jnp
pop
out
dec
xchg
pop
negb
jno
pop
addb
cmp
sub
push
adc
fldenv
push
and
add
dec
out
dec
mov
shl
xorb
cmpsb
out
std
push
cmp
sub
inc
mov
in
cltd
sub
insb
sub
cmp
aad
iret
xchg
ja
into
mov
in
faddl
xchg
les
mov
push
leave
rcll
jns
pop
jne
jne
cwtl
jl
into
adc
pop
clc
push
xchg
mov
repz
jp
push
xor
aad
pop
inc
lcall
push
imul
movsl
jge
push
fdivr
fsubs
cmpl
cwtl
sub
incb
or
fcoms
cld
sub
jbe
push
clc
dec
sub
or
push
xchg
addr16
out
pop
call
jo
inc
and
or
fucomip
mov
aam
lock
into
adc
cld
jne
das
add
xor
mov
arpl
jno
xor
pop
mov
lea
loopne
imul
cmc
nop
adc
in
mov
push
inc
outsl
aad
cli
fnstcw
inc
mul
mov
jl
adc
pop
icebp
dec
lahf
mov
arpl
and
mov
mov
test
mov
sti
shlb
push
mov
movsb
cld
fldenv
out
xchg
pop
les
mov
addl
mov
les
ficomps
leave
sub
jb
mov
mov
xchg
leave
mov
and
or
loopne
sti
ljmp
add
or
add
xchg
pushf
mov
dec
xor
dec
sub
mov
lods
sbb
inc
insb
ret
xlat
repnz
add
lea
add
mov
movsb
jnp
xchg
nop
sti
and
mov
test
das
stos
jne
stos
lcall
sub
xchg
sub
mov
mov
stc
dec
inc
cwtl
pop
jne
sub
test
hlt
dec
cs
and
push
pop
cmp
jnp
inc
arpl
mov
ja
shll
or
or
push
cmp
sbb
dec
and
push
push
sbb
mov
mulb
fldln2
add
push
lock
call
ret
mov
or
outsl
mov
dec
ds
jg
cli
pop
sub
and
add
nop
jns
outsl
test
push
sahf
cmp
fldt
mov
or
cmp
adc
test
adc
mov
jmp
push
out
out
fnstenv
imul
mov
js
and
sub
mov
adc
pop
mov
jae
sbb
jo
or
or
sub
movsl
mov
inc
roll
hlt
or
mov
mov
aaa
cmp
gs
test
hlt
xlat
int3
lcall
fdivr
and
mov
xchg
lea
loop
cmp
inc
pop
outsb
addb
sub
dec
lods
xor
cmp
sahf
gs
lcall
pusha
shll
data16
cmp
push
subb
les
cmpsb
dec
or
gs
mov
jno
add
and
jo
push
sbb
adc
pop
loopne
stos
cli
iret
les
lret
rcrb
popa
lods
dec
inc
push
inc
dec
das
enter
shl
or
xor
enter
push
and
test
inc
mov
ds
jnp
push
cwtl
pushf
inc
insb
cli
mov
inc
je
xor
add
push
scas
fs
add
lahf
in
in
fs
pop
fs
xlat
dec
in
clc
imul
cli
mov
sarl
lahf
es
push
enter
xor
int3
or
enter
lods
aam
mov
cmp
imul
mov
push
scas
lahf
popa
lcall
push
sub
jge
sub
inc
loopne
cmpsl
mov
cld
iret
add
sti
xor
or
cs
rolb
mov
das
pop
pop
or
call
pop
or
cmc
ror
pop
pop
pop
aam
movsl
jmp
inc
jns
sub
cmp
mov
std
arpl
test
xchg
jmp
enter
movsl
rcrb
dec
les
sbbb
push
nop
mov
pop
pop
in
mov
or
fsubrl
rcrb
mov
push
cmp
and
pop
mov
imul
xchg
out
call
or
insb
loope
mov
or
loope
loope
sub
push
mov
push
push
xor
mov
test
call
push
lock
xchg
movsb
imul
pop
in
fdivr
sbb
sbb
rorb
stos
push
insb
shrl
sbb
add
push
dec
push
lcall
pushf
xchg
lret
jl
mull
adc
pop
out
pop
mov
out
or
mov
pop
mov
mov
xor
sbb
jmp
sbbb
das
sbb
xchg
sub
push
mov
leave
in
inc
push
push
or
push
cmp
scas
push
push
cmc
mov
sub
and
xor
test
jecxz
rclb
repnz
xchg
mov
mov
xlat
aad
mov
dec
insb
pop
cmp
fisttps
and
hlt
ficompl
xchg
imulb
ja
cli
push
or
mov
mov
adcb
xor
dec
mov
ficompl
or
cmpsl
pop
popa
dec
and
pushl
fimuls
inc
sbb
mov
adc
mulb
and
dec
mov
popa
les
dec
or
cmp
ret
iret
xor
mov
jae
hlt
adc
jle
test
enter
mov
jno
xchg
mov
mov
leave
and
xchg
int
enter
mov
cli
jp
push
xor
pop
sarb
pop
out
rorb
pop
loopne
aam
iret
xchg
shlb
imul
popa
aam
mov
inc
orb
outsb
hlt
mov
dec
mov
pop
and
dec
std
insb
sbb
cmpsl
pop
lea
inc
repnz
jne
adc
shlb
enter
inc
andl
pop
add
pop
lock
mov
inc
mov
xchg
fisubs
dec
sub
cmp
sub
lods
jmp
inc
ret
test
dec
xchg
dec
inc
movsl
daa
ljmp
movsl
pop
nop
divl
and
cwtl
ret
adc
or
fisttpll
mov
jbe
fdivrl
movsb
fmull
xchg
mov
mov
mov
test
sub
je
inc
les
jmp
inc
cmpsb
inc
mov
sbbb
push
into
movsb
mov
std
jae
lods
les
shr
xchg
in
mov
inc
je
aad
leave
mov
jbe
xchg
or
loope
fld
es
nop
cs
sahf
sub
sub
push
fs
stc
jle
mov
dec
or
inc
loopne
sbb
add
cmpb
shll
jnp
mov
inc
dec
imul
lcall
loop
pop
dec
nop
inc
add
push
ljmp
adc
mov
inc
ret
cmp
inc
inc
pop
fyl2xp1
jmp
or
inc
popf
xchg
xchg
aaa
pop
hlt
push
les
xchg
jne
fimuls
lods
int3
aas
pushf
and
loope
mov
xor
and
icebp
pop
outsb
in
add
es
popf
mov
bswap
mov
jne
cmp
mov
cmp
mov
ljmp
jbe
and
hlt
mov
add
dec
pop
cld
popf
dec
pop
dec
stos
xchg
loope
movsl
scas
out
mov
popa
jmp
mov
jae
xchg
cmpsl
push
mov
jne
mov
insb
fsubs
inc
in
adc
add
imul
pop
out
movsl
inc
mov
xchg
sahf
ss
adc
push
xor
adc
testl
push
mov
in
rcrl
sbb
mov
pop
cs
pop
adc
orl
pusha
lahf
dec
roll
jecxz
jmp
mov
lods
push
lret
sarb
xchg
or
lret
jl
inc
jne
add
scas
in
inc
hlt
mov
lds
cmpb
fldcw
sbb
out
frstor
inc
add
aam
shlb
lock
sub
pop
jmp
out
lcall
pop
push
addb
mov
jo
test
ljmp
xchg
nop
dec
mov
add
outsb
cld
mul
mov
fdivrs
push
inc
fimuls
mov
xchg
push
push
adc
scas
mov
cwtl
add
inc
inc
fnstenv
dec
fs
int3
push
test
cmp
inc
test
cmpb
mov
xor
popf
push
addl
pusha
jmp
xor
call
mov
pop
mov
das
inc
scas
xchg
add
adc
inc
mov
jg
jb
add
subl
repz
lds
or
hlt
test
cmp
push
addb
or
mov
jnp
mov
hlt
and
sub
inc
push
das
addl
in
xchg
shll
inc
or
cmpb
lahf
into
push
loope
adc
add
xor
xor
lahf
mov
test
gs
movsl
push
fcmovu
xor
or
sahf
jmp
stc
jle
icebp
fucomi
sbbb
pop
lods
mov
std
inc
inc
pusha
idivl
inc
pop
sarl
mov
jb
ds
out
shlb
dec
jmp
rcll
cmpb
push
add
xchg
movsb
dec
and
lcall
lods
add
test
jbe
xor
jmp
add
jae
cmpsl
outsb
imull
ds
dec
sub
push
mov
hlt
xchg
loop
leave
in
stos
outsl
cwtl
adc
add
jnp
movsb
adc
ret
aad
push
mov
loopne
mov
pop
pop
dec
mov
sbb
fnstenv
push
jl
int
sub
and
mov
xlat
repnz
pop
xchg
mov
pop
stos
inc
loop
mov
out
ret
insl
bnd
push
xor
cmp
rol
xchg
and
mov
fcoml
loope
lods
jae
dec
dec
mov
hlt
jne
lods
call
fs
cltd
nop
shrb
lret
inc
cmp
dec
pop
push
jbe
jmp
push
cmp
lret
cmc
mov
mov
nop
sbb
inc
push
mov
inc
rcll
ret
xchg
cmp
cs
sub
pop
loop
pop
shlb
mov
mov
in
mov
xchg
pop
push
push
cmp
sbb
pop
icebp
mov
rcr
enter
fisubrl
pop
pop
nop
adc
cwtl
aam
ss
adc
push
mov
test
adc
mov
lcall
shl
repnz
pop
push
inc
into
mov
scas
mov
std
sarb
in
add
adc
push
lcall
ds
and
stos
cwtl
xchg
adc
movsb
ljmp
ret
hlt
mov
push
popf
mov
sti
and
cld
lea
notb
aas
lock
lods
and
fmuls
aam
pushf
stos
hlt
cmp
sbb
xor
ja
stos
enter
pop
bnd
es
mov
test
xlat
fdiv
mov
push
scas
les
adc
pop
repnz
es
hlt
inc
leave
std
xchg
pop
pop
xchg
push
or
xlat
inc
inc
push
or
out
jle
xchg
xchg
jne
inc
pop
lods
xchg
pop
add
sarb
sbb
je
push
or
out
dec
push
inc
mov
cmp
nop
lock
mov
add
mov
mov
aam
xor
sbb
mov
jo
inc
stos
mov
loope
cld
insl
dec
sub
and
xor
xchg
aad
jge
lret
push
mov
negl
rolb
and
cmpsb
push
mov
fwait
push
pop
in
mov
adc
enter
mov
loop
test
daa
dec
sbbl
mov
cmp
cli
cld
adc
lock
popf
lods
mov
insb
jno
jb
fbstp
push
and
pop
inc
xlat
aam
loopne
fsubl
mov
mov
jo
ret
fcomps
shl
jns
stc
movsl
sbb
out
cld
lods
mov
adc
jne
add
aaa
cltd
popa
movsl
jnp
test
ror
add
nop
das
in
mov
call
mov
daa
add
xlat
xchg
and
sbb
sub
inc
push
ljmp
hlt
call
outsl
iret
mov
jecxz
fsubl
push
dec
hlt
ja
sbb
mov
sub
enter
push
out
pop
dec
and
dec
sbb
adc
dec
popf
push
flds
mov
and
adc
inc
push
pop
adc
leave
mov
mov
shrb
push
faddl
mov
pop
xlat
movb
cwtl
cli
pop
xchg
jbe
test
int3
dec
jmp
jno
dec
shl
lds
daa
insl
fcoml
pop
adc
or
xchg
pop
sub
icebp
pop
or
test
mov
pusha
std
rolb
mov
loopne
in
ljmp
xchg
pop
pushf
adc
mov
and
repz
dec
stos
repz
lahf
nop
dec
repnz
inc
cmp
fdivl
nop
outsl
xchg
cmpsb
aaa
dec
fnsave
movsb
movsl
cmp
sub
add
hlt
out
push
nop
xor
out
loopne
add
inc
add
test
sbb
adcl
hlt
jnp
fsts
aas
cli
fadds
ljmp
repnz
xor
push
adc
inc
xor
sub
pop
mov
mov
les
inc
jbe
and
pop
lahf
repnz
add
movsl
cmp
xchg
ds
or
push
jge
les
xchg
les
hlt
aam
push
push
sbb
sbb
lcall
mov
cmp
pop
jmp
imul
push
enter
icebp
sbb
xor
sbb
add
cs
cwtl
xchg
imulb
adc
push
popa
xchg
enter
push
notl
inc
add
loope
stos
insl
mov
movsl
jge
push
ficompl
dec
jg
fimuls
dec
loope
mov
and
mov
inc
adc
outsl
or
cmpsb
mov
and
adc
mov
pop
jp
xchg
mov
add
sbb
shlb
dec
jle
leave
pusha
or
rorb
cmpsb
add
scas
inc
xchg
or
sub
adc
stc
and
inc
mov
jne
call
shrb
jne
sub
insb
xor
inc
sub
mov
orb
shl
jno
mov
test
outsb
sti
insb
mov
movsb
cs
add
dec
dec
jle
mov
add
xchg
or
idivl
or
xor
adc
or
sti
adc
scas
mov
jnp
std
in
mov
and
inc
subb
inc
loope
lahf
add
and
lea
mov
adc
and
hlt
insb
jnp
mov
movq
xchg
jg
dec
xchg
repz
sub
inc
rorb
add
add
xor
xchg
scas
jnp
inc
push
mov
and
mov
adc
pop
ja
movsb
xchg
add
xchg
imul
mov
stos
mov
jns
xor
rol
xchg
daa
sub
gs
es
jle
hlt
and
xor
iret
push
stos
aad
push
movsb
pop
dec
or
out
jmp
enter
mov
mov
or
nop
mov
shll
xchg
inc
xchg
push
jnp
dec
push
cmc
adc
jo
cmp
xchg
mov
dec
int3
add
jns
loope
incl
mov
xchg
xchg
aaa
leave
mov
jecxz
jo
xchg
xchg
sti
push
push
mov
cmp
jne
mov
mov
inc
xlat
jmp
clc
mov
mov
inc
cwtl
dec
adc
sbb
adc
mov
mov
xchg
xchg
mov
mov
cmp
shl
addr16
andl
inc
je
push
andb
or
in
lods
icebp
mov
outsl
int3
cmp
mov
cmp
xchg
dec
xchg
xor
ret
aam
sti
add
and
es
fcmovu
or
loop
popa
ret
push
rcrl
mov
cs
inc
add
xchg
hlt
or
push
push
test
and
mov
inc
divb
mov
lret
pop
mov
xchg
decl
fidivrl
xor
pop
mov
mov
es
cld
jle
pusha
mov
cmp
push
aas
add
sbb
or
pop
xchg
inc
aas
adc
mov
cmp
fistl
xorb
sub
xchg
leave
inc
inc
xchg
pop
mov
les
mov
xchg
pop
hlt
mov
ljmp
mov
subb
insb
xor
pop
sub
add
jle
jl
jge
xor
in
mov
sub
jle
int3
jle
mov
ljmp
dec
xchg
jno
xchg
jae
sti
pop
jge,pn
dec
cltd
das
xchg
sahf
aad
cld
jbe
imul
add
xchg
sbb
mul
test
sub
imul
pop
testb
test
adc
fstpl
jo
in
daa
call
fists
dec
daa
and
in
test
daa
popf
pushf
pop
and
cmpsl
sub
iret
mov
cltd
xchg
cmpsb
loop
xor
add
sarl
mov
enter
pop
rclb
lret
mov
xchg
push
je
xchg
pop
push
subb
or
cwtl
mov
push
cmp
xchg
ja
jne
stos
xchg
and
dec
insl
inc
xchg
push
mov
jecxz
popf
pop
cmc
add
mov
icebp
inc
loope
xlat
mov
adc
xchg
push
aas
jg
and
fdivs
adc
inc
xor
or
leave
fidivrs
add
sbb
mov
and
jbe
add
mov
sti
jl
add
adc
roll
sbb
mov
pop
leave
xchg
mov
xor
add
mov
bound
pop
scas
fs
adc
push
addr16
scas
push
inc
jno
jno
pop
dec
fwait
push
pusha
cwtl
pop
sahf
sub
stos
mov
sub
xchg
lret
adc
inc
inc
adc
xor
daa
stos
add
repnz
mov
pop
sarb
hlt
cs
adc
inc
add
mov
sti
popa
pop
sub
inc
jae
sub
fucomip
cld
xchg
push
adc
mov
xor
mov
int3
sub
mov
push
dec
adc
mov
jmp
enter
imul
enter
mov
testb
filds
fsubrl
int
mov
adc
dec
pcmpeqd
andl
sub
sbb
into
sub
dec
jp
mov
pop
or
addr16
adc
add
jne
mov
lcall
dec
xchg
mov
test
mov
inc
repnz
ret
frstor
into
sub
movsl
stos
jne
pop
test
lcall
gs
outsl
jecxz
mov
dec
adc
popf
ljmp
aas
xorl
ljmp
repz
scas
add
inc
jge
xchg
out
stos
pop
leave
test
hlt
sahf
fmuls
je
mov
out
xchg
rcrb
mov
add
mov
jae
test
inc
out
push
sub
mov
jge
aas
or
loopne
into
movsl
pop
inc
mov
mov
mov
and
sbb
jp
mov
sub
es
or
neg
jae
outsl
or
jo
pop
ret
jbe
fbld
mov
mov
mov
sahf
xor
scas
nop
and
push
xor
inc
daa
int3
ss
leave
pop
dec
push
pusha
push
pop
pop
les
push
push
lds
js
sub
pop
popa
sarb
std
xor
xchg
jne
mov
adc
lods
imul
into
aas
mov
adc
lock
icebp
fstpl
movsl
push
enter
fidivrs
xchg
or
loopne
dec
push
jmp
fildl
mov
cltd
mov
push
sahf
mov
mov
xor
sarb
out
inc
mov
push
decl
sub
sbb
nop
sbbb
mov
dec
lods
test
jmp
imul
mov
cltd
push
mov
ret
mov
enter
jmp
lods
mov
stos
imul
xor
and
stos
lods
popf
lret
pop
gs
out
dec
mov
sbb
ljmp
cmpsl
mov
lds
sub
rorl
cwtl
hlt
enter
xchg
test
mov
push
or
imul
stos
inc
mov
int3
or
cmpsb
pop
dec
sub
jge
dec
mov
imul
rolb
cmpsl
lds
add
mov
mov
mov
faddl
jno
sub
and
in
add
loopne,pt
sbb
mov
push
mov
lds
mov
lock
or
js
aas
bound
inc
mov
jnp
adc
mov
loopne
adc
add
jne
popf
movsb
arpl
inc
jne
jmp
out
and
ss
add
fwait
xor
or
or
cwtl
hlt
add
jge
decl
and
adc
ljmp
xchg
push
jne
inc
jg
xchg
daa
loop
adc
lods
and
sub
sti
arpl
adc
in
test
xor
sarl
ss
push
ds
mov
pusha
cmp
shlb
in
mov
scas
dec
lahf
xchg
mov
mov
int
pop
push
xor
cmp
jp
mov
mov
dec
fisttpl
pop
in
inc
bound
aad
adc
mov
inc
cmp
and
lcall
push
push
xchg
sbbb
jge
inc
mov
outsb
popf
fs
stc
scas
pushf
leave
fistps
repnz
mov
sub
and
mov
add
das
pop
cmc
arpl
andb
hlt
out
sbb
lahf
mov
mov
in
mov
push
mov
pop
enter
cmpsl
fildl
daa
popf
inc
fcomi
imul
mov
pop
add
imul
sti
cmp
mov
pop
scas
mov
fmul
cmp
aas
push
andb
xlat
call
xor
aad
sbb
ret
dec
pop
mov
mov
es
bound
enter
add
inc
hlt
mov
xchg
jae
mov
dec
test
mov
or
mulb
and
in
dec
lds
inc
mov
mov
out
push
sub
js
fmuls
dec
xchg
mov
mov
jl
mulb
mov
pusha
fwait
adc
mov
sti
inc
cmpsb
push
shll
and
test
jne
test
lret
inc
xchg
mov
mov
call
inc
inc
xchg
addr16
add
out
mov
mov
xor
inc
push
out
jo
sub
mulb
insl
test
push
jo
mov
shlb
loopne
xchg
test
stos
xor
in
mov
mov
xchg
ds
or
hlt
movsl
leave
add
or
mov
add
mov
stc
mov
int
das
shr
push
je
cltd
scas
cmp
xchg
push
aam
les
and
stos
das
push
sub
dec
jg
mov
or
dec
pop
dec
cli
jnp
stos
arpl
or
cmpsb
lods
loop
test
nop
lock
mov
ds
ds
mov
add
cwtl
stc
test
es
mov
shll
pop
fsub
fnsave
xor
mov
or
pop
xlat
insb
sbb
repz
sub
xchg
push
imul
stos
mov
xchg
mov
ffreep
lahf
movsl
dec
aam
cmpsb
shlb
push
jge
mov
cmp
cs
mov
xchg
mov
dec
mov
cmp
mov
sbb
sbb
jp
mov
fsts
mov
lock
movsb
cli
fwait
cwtl
rolb
dec
insl
mov
popf
jnp
les
addr16
mov
push
pushf
dec
xchg
sub
or
std
lods
cmp
xabort
les
lret
daa
adcb
jecxz
mov
mov
adc
testl
xor
rorl
imul
jl
mov
push
mov
imul
mov
lcall
inc
pushf
in
fsubrl
out
sub
imul
lods
andb
and
mov
aam
mov
loop
fidivs
add
add
cmpsl
dec
cmc
adc
push
ja
adc
insl
test
pusha
mov
cmp
mov
mov
add
xchg
cld
arpl
in
fstpl
lret
cmpsl
je
iret
mov
push
mov
mov
stc
dec
and
fidivl
ljmp
jne
lret
sub
std
nop
lods
jl
pop
sbb
repnz
pop
mov
inc
dec
mov
lahf
loopne
jne
mov
lcall
xorb
les
out
cmp
push
ret
fistl
fwait
mov
mov
inc
add
mov
outsb
jnp
fadds
dec
bound
out
adc
hlt
push
ret
cmp
scas
pop
mov
test
imul
sbb
jecxz
dec
hlt
stc
mov
icebp
hlt
cmp
mov
cmp
daa
lods
xchg
push
rcrb
mov
inc
push
xor
jo
sbb
stos
movsb
jae
or
fmull
dec
cmp
lret
pop
sub
fdivrs
dec
scas
lret
idivl
sub
pop
in
fbstp
rcrb
aaa
jmp
rep
daa
movsl
jnp
sub
mov
ffree
xchg
cmp
fnsave
lret
add
lcall
jnp
cmp
jns
daa
add
mov
out
pop
add
inc
int3
mov
outsb
dec
negl
nop
jg
jne
or
adc
andl
adc
fld
jno
enter
subl
pop
clc
mov
mov
popf
cli
add
js
rcl
scas
shll
adc
jp
fsubl
popa
push
and
and
or
adcb
add
hlt
dec
fs
shl
leave
sub
cli
adc
jne
cmp
mov
lods
pop
into
mov
pop
cmp
xchg
das
xchg
jno
inc
dec
jmp
cmp
jbe
pop
or
jp
sbb
sub
xor
fists
es
int3
or
jo
lods
sub
idivb
xor
or
mov
loop
lea
stos
js
lret
mov
adc
push
mov
lret
push
loop
inc
mov
mov
ficompl
lods
cli
movsb
push
sahf
or
lret
sub
test
push
xchg
adc
xchg
pop
mov
sbb
add
xadd
mov
adc
popa
sti
imul
inc
pop
pop
push
sub
out
push
pop
adc
mov
xchg
mov
xor
pop
adc
movsb
sbb
push
fcoms
test
incl
dec
cmp
and
sti
adc
nop
out
das
sub
call
push
mov
jno
inc
stc
mov
pop
inc
push
pusha
or
outsb
cmp
or
jb
adc
dec
inc
inc
or
add
sbb
adc
mov
idivl
lods
sti
pop
inc
cmp
inc
into
mov
cs
mov
outsb
pop
pop
jg
adc
mov
xor
mov
insb
sub
mov
jno
fnstenv
cmpsl
aad
sbb
les
lock
enter
enter
xorb
jo
fwait
pop
pop
lods
test
lret
sbb
jo
stc
xchg
inc
mov
in
aas
ror
fdivp
adc
pushl
sub
jne
shll
out
add
sub
aas
adc
jne
mov
mov
scas
inc
xchg
dec
call
syscall
mov
cmpsl
sub
xchg
adc
sub
dec
push
into
sub
call
in
into
inc
test
xor
cld
pop
cmp
int
fdivrs
push
loopne
scas
and
mov
insl
mov
rcll
movsb
fildl
pusha
mov
xchg
cs
aad
adc
clc
aam
les
out
jno
roll
lret
or
or
les
in
sbb
aad
es
cs
repnz
and
add
js
cmpsb
xor
sub
mov
sbbb
loopne
xor
inc
stc
add
inc
les
inc
mov
xchg
test
push
popa
loop
test
mov
pop
mov
mov
scas
pusha
int3
imul
pop
inc
lcall
mov
ret
rcr
sbb
mov
movsb
outsb
into
dec
enter
mov
ror
sbb
add
sarb
pop
add
mov
loope
inc
jmp
adc
outsl
mov
sub
adcb
add
sub
out
or
cli
sbbl
push
in
hlt
add
cmp
pop
xorb
loope
addl
lods
mov
inc
es
nop
test
add
scas
mov
inc
fdivs
cmp
scas
hlt
dec
xlat
movsb
mov
adc
mov
cmc
pop
int
sbb
pop
test
or
cld
dec
cmp
fsubrl
stc
addl
call
adc
and
mov
out
xchg
sub
cmpsl
cmp
sbbl
jb,pn
and
in
xorb
fildll
sub
mov
ljmp
mov
add
cs
cmp
sbb
clc
clc
out
sub
xlat
incb
inc
sub
jge
push
or
add
mull
inc
clc
and
jnp
push
sbb
outsl
rcrb
pop
hlt
cmp
mov
movsl
cmc
stos
mov
clc
xor
test
gs
mov
sub
mov
mov
scas
cs
movsl
add
popa
into
fsubrl
popf
loop
ficoms
repz
sbb
mov
aad
inc
mov
inc
fidivrs
xchg
sub
fs
mov
jg
popf
push
sti
mov
lods
or
test
inc
or
or
mov
push
add
sbb
add
rcr
add
push
push
cmp
xchg
mov
xorl
flds
sub
dec
fiaddl
push
lods
stos
and
lods
mov
in
les
mov
out
cld
lahf
std
push
push
dec
push
xorl
push
or
push
testb
xchg
adc
fadd
inc
inc
shlb
dec
mov
add
test
in
mov
bound
mov
inc
cmp
jne
ss
add
jge
add
push
loopne
xchg
arpl
xchg
data16
cmp
jnp
shll
out
arpl
xchg
into
stos
push
hlt
loope
in
aad
imul
sub
xchg
fisubl
add
pop
push
lock
adc
outsb
mov
hlt
outsl
movsb
mov
pop
pop
dec
movsb
int
and
test
pop
add
scas
je
data16
fildll
sbb
jle
mov
dec
loopne
ror
into
hlt
ljmp
mov
stos
dec
mov
add
xchg
pushf
mov
iret
mov
sbb
pop
addr16
popa
xchg
jg
add
into
sub
ljmp
enter
sahf
aad
xchg
mov
notl
inc
stc
cmc
sbb
hlt
push
ds
inc
or
jg
sbb
cs
pusha
rorb
mov
lods
lock
cltd
adcb
pop
xor
movb
loop
inc
in
cmp
mov
sub
lods
rcll
into
push
pop
push
or
repnz
jle
fs
mov
adcl
in
and
pop
clc
push
inc
pop
dec
adc
cwtl
mov
push
leave
push
mov
cmc
cmpb
mov
mov
inc
repnz
hlt
adc
mov
test
test
mov
jp
jp
aaa
xchg
imul
jnp
arpl
insb
and
scas
inc
xchg
jge
cmpsb
incl
or
fistpl
shr
mov
out
mov
jmp
movsb
adc
imul
lods
ficoms
mov
and
pop
or
jne
jmp
lcall
jecxz
lahf
dec
sub
mov
mov
addr16
cli
hlt
aas
out
sub
push
xchg
cmp
mov
add
in
sarl
lea
dec
stos
cmc
sar
cmpl
mov
push
jl
sbb
ss
popa
sbb
xor
push
cmp
dec
popa
stos
sub
xchg
pop
mov
loope
sbb
mov
inc
pop
sbbl
shll
stos
xor
mov
cmc
loop
jle
mov
inc
shll
push
xchg
imul
pop
pushf
jnp
pop
pusha
sub
mov
jl
pusha
sub
xchg
fadds
or
pushf
es
xchg
lods
hlt
mov
cmpsb
test
and
movsb
or
out
in
inc
test
lsl
push
test
pop
or
mov
jg
mov
and
jmp
sbb
lcall
andb
fs
jp
jb
cld
push
xor
es
push
cld
sbb
movsb
mov
xor
movsb
pop
pop
inc
jae
xor
imul
pusha
sbb
dec
nop
mov
ror
cmp
lcall
test
in
js
stos
add
and
mov
pop
and
jb
aam
cmp
cmpsb
mov
in
rcl
inc
cmp
xchg
scas
adc
movsl
outsl
sub
movsb
jne
xchg
inc
movsb
in
jp
jge
inc
imul
cmp
xor
inc
jmp
push
gs
stos
ljmp
leave
nop
movsb
and
es
dec
jle
and
cwtl
loopne
jne
xor
xorl
sub
cmp
fisubs
cmc
xchg
int
adc
pop
mov
ss
jne
xchg
cmp
jnp
xor
std
mov
das
nop
lods
loopne
int3
lods
enter
pop
testb
dec
dec
push
or
repnz
jnp
faddp
inc
mov
bound
mov
imul
pop
xchg
iret
jne
outsl
mov
loop
sub
push
rcrl
mov
je
lahf
adcb
repnz
mov
add
std
shlb
cmp
shl
dec
add
mov
xchg
push
fcom
push
lds
dec
insb
adc
out
scas
sub
inc
xchg
fstpl
pusha
stos
pop
and
lcall
adc
mov
fnstcw
data16
bound
dec
call
mov
jb
push
insb
stc
mov
jnp
pop
push
xor
xchg
into
adc
push
mov
xchg
addr16
adc
ja
gs
in
pop
outsl
sub
xor
cwtl
push
jne
outsb
lret
mov
mov
cmp
dec
push
adc
sbb
bound
int3
sti
sub
add
sti
and
push
mov
cli
dec
cmp
jnp
sarb
sahf
push
std
sbb
push
mov
push
cmp
mov
into
push
xchg
mov
cmp
push
jl
enter
scas
into
cld
pop
fiaddl
rcll
call
or
fs
inc
sbbl
and
pop
mov
pusha
leave
mov
aad
addr16
mov
push
cs
jb
mov
popf
std
das
adc
scas
dec
icebp
sbb
mov
lret
sbb
and
push
call
jmp
addr16
test
enter
sbb
jmp
mov
adc
mov
mov
call
or
add
cmpsb
xor
mov
mov
jo
outsb
lret
mov
xorl
repz
gs
loopne
mov
out
in
add
xor
stos
cmc
xchg
mov
jne
lods
lea
and
inc
mulb
jae
lcall
mov
mov
inc
adc
push
mov
bnd
int3
jecxz
or
enter
test
cmpsb
aas
cmp
add
popa
test
xchg
mov
jmp
scas
sub
rolb
or
sub
arpl
dec
xchg
add
test
jp
sbb
cmpsl
ss
addb
pusha
out
out
stos
popa
mov
in
add
scas
ss
dec
inc
xchg
std
sub
cli
and
mov
pop
stc
cs
push
inc
adc
fwait
cmp
outsb
jmp
and
ljmp
or
arpl
cmc
push
fisttps
stos
call
test
out
mov
leave
das
std
stos
pop
pop
push
xchg
cwtl
fnstsw
outsb
mov
rorl
bound
sub
stc
add
iret
aam
mov
scas
outsb
and
test
add
add
cltd
mov
mov
mov
adc
lahf
push
add
mov
stos
jne
push
mov
enter
inc
pop
imul
into
jae
clc
jne
mov
les
insb
add
mov
fsts
mov
sub
mov
iret
dec
xchg
cld
mov
sarl
pop
mov
and
dec
js
loope
push
add
add
inc
clc
jl
sub
adc
mov
sub
jle
movsb
stos
mov
imul
or
aas
sti
insl
test
add
les
shrb
jne
push
inc
jg
enter
es
hlt
gs
stos
add
daa
inc
in
cmp
xor
dec
jle
js
rorb
fldcw
paddq
lret
cmc
sub
adc
mov
out
repz
pop
push
loopne
or
in
adc
mov
stc
clc
xor
nop
sbbl
push
aaa
les
push
mov
mov
xchg
das
faddl
or
arpl
sub
loope
jle
sub
mov
pop
roll
bound
sub
xchg
lock
ret
icebp
scas
add
jmp
push
cltd
xchg
in
pop
cltd
inc
add
mov
in
es
jae
hlt
fcmovu
xchg
call
stos
sbb
xorb
shlb
shl
cld
mov
inc
pop
mov
and
xchg
stos
mov
xor
ljmp
inc
jns
addr16
bound
xor
dec
lods
add
ficompl
enter
movsl
mov
shrb
std
jl
mov
pop
mov
push
repz
test
and
imul
notb
jg
jl
mov
movsb
adc
icebp
mov
inc
loope
pop
push
cmp
adcl
xchg
arpl
jbe
ror
pop
sub
hlt
push
adc
fmuls
sbb
les
mov
in
lods
enter
cld
pop
adc
test
lds
adc
xor
addr16
mov
out
and
negb
dec
cmp
xor
sbb
add
das
in
mov
mov
loop
in
jbe
adc
hlt
scas
jno
fsubr
mov
xorl
iret
test
addl
lret
adc
push
call
loopne
cmc
out
inc
and
mov
repz
push
movsb
push
jle
cmpw
out
popl
xchg
repnz
hlt
mov
jl
hlt
cwtl
scas
adc
into
repnz
fucomi
insl
divb
hlt
out
loopne
push
cmpsb
pushf
inc
xchg
or
dec
cmpsl
test
cmp
push
xlat
push
cmp
mov
jnp
jne
dec
ljmp
test
sbb
xor
inc
jne
sbb
mov
xchg
add
sub
jg
sub
fcoms
das
sbb
jecxz
sbb
dec
faddl
add
and
add
rcr
inc
loop
lds
dec
mov
adc
aas
ror
pop
mov
scas
mov
bound
lret
shll
jmp
sub
fadd
leave
into
cmc
push
cld
idivl
mov
jo
stos
hlt
aaa
mov
loop
ljmp
shlb
xchg
decl
movb
pusha
mov
cmp
js
xor
sbb
hlt
sbb
xor
test
sub
inc
enter
movsl
add
and
add
outsl
frstor
hlt
mov
mov
das
fnsave
lds
xchg
inc
aas
sub
xchg
mov
mov
mov
fistpll
in
cs
add
in
adc
dec
test
mov
mov
test
int
jecxz
rolb
pop
adc
icebp
aad
dec
call
push
inc
imul
xor
pusha
sub
fildll
fmull
xor
testl
add
out
add
xchg
push
adc
ror
imulb
out
pop
jle
insb
pop
xor
mov
hlt
push
add
jl
sub
pop
jle
xchg
inc
and
out
dec
and
jl
and
xor
mov
pusha
stos
jg
mov
pop
cltd
xchg
ja
out
std
sub
inc
fisubs
loop
iret
add
ljmp
mov
and
xor
fstpt
pushf
sub
int
sti
outsl
adc
add
or
cli
and
ficompl
dec
std
mov
dec
sub
cmpsb
sub
outsl
add
pushl
jle
jle
dec
jno
fnstcw
cmpsl
stos
dec
incb
xlat
add
or
xchg
xchg
out
xorb
loop
inc
xor
push
or
cmp
cld
hlt
or
jle
loop
cmpsl
test
in
aaa
pop
and
push
jl
lahf
dec
cmpsl
pop
add
scas
or
jbe
imul
adc
aas
cmp
pop
dec
jmp
pushf
sbbb
fists
pop
push
mov
scas
loope
sarb
dec
cmc
repnz
adc
mov
jne
lock
hlt
and
rcr
in
in
gs
jmp
push
data16
mov
mov
sbb
inc
ja
mov
mov
mov
arpl
dec
xor
and
movsb
test
push
xor
sub
xchg
out
stc
add
xchg
inc
mov
sbb
inc
ljmp
lods
dec
jp
rorl
mov
mov
adc
mov
pusha
pushf
int3
cmp
js
pop
jnp
dec
fmul
push
js
mov
dec
xchg
push
and
mov
jmp
nop
test
mov
hlt
inc
jae
sbb
jecxz
bound
mov
mov
or
xor
aam
movsw
fstl
mov
xchg
stos
shrl
push
fdivrl
in
dec
cmp
add
loope
inc
lret
inc
gs
xchg
clc
mov
arpl
jmp
scas
adc
jp
enter
pop
cs
lcall
ficoml
xor
dec
in
xor
outsl
cmp
jmp
imull
test
neg
inc
add
lahf
mov
mov
pop
lods
aaa
sbb
and
mov
imul
lea
dec
sub
mov
int3
negb
mov
mov
cmc
mov
sbb
lcall
xchg
fmull
sub
cmpsb
imul
cld
cmc
std
or
push
scas
lods
mov
xorb
xor
pusha
stos
in
xor
mov
daa
jnp
pop
cmp
add
jbe
push
sub
or
or
add
int
cwtl
andb
js
movsl
pushf
test
lcall
call
mov
mov
xchg
mov
adc
call
pop
cs
fstp
loop
testl
test
mov
hlt
push
jne
mov
jo
jbe
in
fcoml
test
arpl
fcomps
pusha
nop
stc
mov
xor
je
faddl
dec
and
lret
mov
pcmpeqw
repnz
xor
leave
or
jle
mov
push
inc
mov
dec
sbb
mov
in
popa
add
xchg
dec
cmpsl
stc
das
lods
jne
xchg
xchg
inc
sub
mov
stos
push
hlt
in
lahf
jb
mov
xchg
pop
mov
sbb
push
sar
cmpsb
out
in
mov
adc
test
adc
xor
out
fcomi
mov
negl
xor
mov
push
adc
jae
pop
xchg
imul
imul
into
bound
cmp
sub
mov
sub
loope
das
pushf
sarb
add
add
pop
pop
push
push
jg
mov
jns
filds
scas
sbb
pop
sbb
aas
cli
sub
cwtl
xchg
xorb
lsl
repnz
popf
dec
ficoml
fwait
lcall
movsb
and
push
or
jg
imul
movsl
aad
inc
push
loopne
into
sub
pop
enter
inc
xlat
or
sub
mov
inc
push
fcomp
dec
push
enter
xchg
fiadds
ss
ja
mov
neg
push
inc
or
stos
pop
push
imul
icebp
xchg
jle
or
outsl
jg
je
out
pop
sti
pop
jne
movnti
into
test
xchg
pop
inc
lds
hlt
repnz
mov
rcrb
int3
mov
cmovl
sub
pop
dec
sub
xor
add
mov
inc
fidivrl
add
adc
aad
jge
mov
add
push
mov
dec
pop
shl
mov
mov
push
hlt
ja
mov
jl
aas
scas
lcall
repnz
mov
mov
xchg
cwtl
sub
mov
adc
sub
pop
adc
mov
addb
data16
mov
test
les
cmp
or
shll
insl
push
loop
out
add
aam
sbbb
mov
adc
inc
xchg
stc
nop
jmp
push
pop
cmpsb
mov
cmpsl
xchg
or
and
nop
sbb
dec
add
repz
aaa
cltd
subl
inc
mov
mov
xor
sbb
jecxz
outsb
dec
inc
cltd
enter
pop
mov
pop
mov
jns
cmp
out
xchg
out
sbb
repnz
mov
pop
pop
cmp
inc
jbe
negb
and
add
mov
hlt
clc
sbb
jg
movsl
push
and
mov
sbb
dec
mov
ljmp
sub
sti
iret
sub
sbb
dec
mov
data16
lret
imul
mov
in
lcall
and
lret
cmpsl
popa
jle
lds
mov
mov
mov
dec
cmpsb
mov
idivb
jno
enter
rcr
andb
xor
dec
add
pop
xlat
rorb
xchg
cmc
jp
xor
adc
call
push
mov
data16
je
cmc
bound
push
xchg
adc
mov
jecxz
out
push
mov
enter
hlt
pop
pop
add
jmp
mov
add
addl
test
inc
fdivrl
mov
rcr
rcrb
push
into
sub
dec
cwtl
movb
into
test
mov
and
dec
test
movsl
jge
subl
stos
imul
js
pop
lock
cs
add
popf
repnz
hlt
or
stc
add
in
cld
mov
ret
sbb
add
outsl
cmpsb
xchg
sub
mov
push
dec
cmpsb
xchg
mov
shll
scas
push
jge
add
lret
repz
fstl
add
insb
cmp
adc
lock
mov
repnz
subb
out
mov
cli
test
and
xor
inc
lcall
je
sub
inc
shl
xor
xor
int
adc
in
addb
push
mov
jmp
jecxz
sub
aas
out
fstpt
les
pop
mov
ret
imul
dec
xor
sbb
mov
add
or
lret
ja
mov
jecxz
leave
ss
jne
test
stos
and
into
mov
sub
mov
xor
mov
push
cmpsb
mov
dec
in
lcall
xchg
sbb
xchg
mov
dec
push
xchg
xor
mov
shll
lea
std
sbb
shl
aam
push
dec
stos
sti
jne
lods
repnz
mov
notb
cmp
mov
xchg
and
lods
stos
jns
mov
adc
mov
xorb
jle
push
mov
or
bound
into
daa
xchg
or
sbb
orb
or
mov
cmp
aas
inc
test
xor
test
add
out
inc
add
push
cs
jne
jno
loope
dec
mov
jp
std
in
pusha
mov
movsb
aam
loope
jg,pn
cmpsb
jns
mov
ret
mov
push
fadd
iret
lds
cwtl
into
stos
inc
jp
bound
mov
das
outsb
pusha
pop
lods
push
add
loopne
mov
xchg
ja
or
xor
sbb
lahf
add
xchg
hlt
imul
jo
je
hlt
cmovle
addr16
or
xchg
sbb
stos
jns
in
pop
mov
ljmp
inc
mov
push
fdivrp
ret
add
jbe
cli
xchg
rcrb
fdivrp
in
sbbb
mov
jmp
les
jne
jecxz
decb
dec
jmp
fcmovu
std
outsl
lods
cwtl
and
push
lods
push
or
xlat
jmp
mov
pop
and
push
cs
lea
cmc
cltd
inc
xchg
cs
dec
inc
stos
nop
inc
and
jge
inc
xor
add
rclb
ds
fmuls
sbb
xchg
adc
sbb
mov
add
nop
out
adc
or
sub
idiv
call
xchg
pop
loopne
movsl
mov
mov
outsb
and
jnp
lcall
cli
push
call
je
inc
ljmp
hlt
lods
rcrl
cmp
adcb
movsl
lahf
bound
mov
jmp
add
sbbb
inc
inc
lret
aam
inc
jmp
and
inc
dec
mov
movsb
scas
sbb
pop
sub
and
stos
into
mov
adc
shlb
in
push
imul
gs
test
sub
mov
add
sbb
dec
hlt
clc
es
in
sti
test
inc
and
enter
push
lcall
hlt
shll
iret
addr16
mov
hlt
push
out
out
jns
mov
ret
fwait
nop
and
enter
lods
jge
mov
jne
add
inc
popf
adc
cmpsb
pusha
cli
xor
shrb
mov
out
xor
mov
lahf
pop
movsl
dec
mov
out
mov
shlb
xchg
out
jnp
test
mov
xchg
pop
imul
rcrb
fists
xor
loopne
xlat
xchg
dec
repz
mov
jne
pop
frstor
pop
shll
jns
movsb
mov
rcl
test
jne
and
jb
inc
or
ja
push
clc
add
sub
inc
in
pop
cs
lcall
sub
push
js
aad
cld
xchg
es
dec
mov
hlt
aaa
movsl
in
fldcw
xchg
pushf
mov
mov
mov
push
mov
popf
loopne
push
pop
push
adc
dec
fcmovnb
hlt
push
aad
stc
movsl
jo
sub
inc
and
pop
mov
adc
sbb
insl
xchg
pop
repnz
cmp
mov
daa
ror
sti
sarl
std
lods
add
push
jne
icebp
jle
mov
adc
inc
lock
sub
mov
sub
dec
mov
imul
jns
push
mov
mov
repnz
xchg
sub
jle
xchg
mov
inc
sub
jns
mov
ds
fdivs
pop
mov
out
mov
enter
ds
dec
inc
mov
jne
mov
jmp
andl
and
stos
shrb
jne
mov
mov
dec
adc
lahf
idivb
fistpll
xor
popa
jmp
and
mov
push
and
or
pop
pop
push
icebp
cmp
cld
sbb
insl
das
int3
inc
jne
lods
stos
rolb
out
jbe
sbb
cltd
int
das
sub
pusha
add
movsb
jmp
clc
cmp
add
xorb
mov
adc
insl
xchg
pop
gs
xor
rcrl
rorb
test
enter
cmp
inc
scas
repnz
jno
adc
inc
or
adc
lcall
pop
adc
cmp
ss
in
dec
jo
outsb
xchg
push
lcall
push
sti
scas
outsl
cs
dec
sbb
mov
jno
inc
pushf
cld
mov
adc
stc
fwait
test
aad
aam
sub
movsl
sbbl
nop
xor
or
gs
cmp
xchg
pushf
shrb
out
addr16
cmpsl
ret
test
or
or
sbbl
cmpsl
wbinvd
push
xor
mov
iret
xlat
mov
sub
test
nop
mov
pop
ret
fstpt
inc
aaa
int
mov
and
push
mov
xchg
les
jne
push
inc
in
xor
adc
xchg
test
cltd
inc
sub
repnz
cmpl
dec
test
sbb
mov
and
lds
clc
insb
jle
dec
into
cmp
xchg
pop
mov
add
jp
xchg
bound
mov
notb
cmpsl
and
xchg
cmp
and
test
pusha
mov
jne
ljmp
call
ljmp
mov
adc
push
loope
mov
loop
fsubrl
adc
inc
inc
ror
lret
lfs
neg
or
mov
daa
mov
sbb
dec
xchg
mov
insl
leave
mov
xchg
fstl
mov
hlt
cs
sarb
sahf
jle
jecxz
push
int3
xchg
call
fisttpll
ss
sub
xor
imull
mov
sub
jnp
imul
push
cmp
int3
test
push
into
stos
pop
outsb
insb
bnd
inc
and
fsubrl
mov
push
fdivrl
mov
cwtl
or
sbb
ds
xchg
sub
aas
sub
int3
outsl
dec
or
inc
or
and
les
sub
jmp
add
xchg
xchg
mov
jge
push
les
push
inc
mov
mov
out
inc
mov
pop
mov
sub
inc
dec
adc
dec
sub
loop
adc
sbb
add
call
iret
test
xchg
xor
push
lods
int3
fcoml
in
sbb
cmc
jecxz
testl
rclb
aas
adc
xorb
outsl
dec
push
xchg
int3
inc
lods
aaa
inc
sahf
orb
add
pusha
nop
inc
cmpsl
mov
jge
adc
bnd
pop
mov
mov
jne
movsb
popf
lods
repz
cmp
nop
insb
out
lret
xchg
daa
push
sub
add
mov
pop
push
cmc
mov
add
repz
push
mov
sbb
cmovg
xchg
enter
pop
out
add
insb
subb
bound
dec
fsts
clc
cmc
mov
shll
test
sbb
pop
and
enter
mov
pusha
add
roll
adc
and
aad
outsl
or
mov
jnp
or
hlt
add
mov
xchg
in
add
cli
xchg
jge
imul
jl
mov
mov
ds
xchg
shl
pushf
jle
rolb
ret
mov
sub
or
in
mov
in
insb
sub
and
enter
hlt
loop
add
and
sub
mov
sbb
in
mov
xchg
rcrl
ret
add
xor
stos
xchg
stc
jne
mov
scas
mov
inc
mov
pop
outsb
pop
and
movsl
or
mov
aad
pop
add
jno
adc
mov
stc
cld
les
pushf
push
icebp
and
out
inc
jmp
pop
inc
fists
push
add
ret
pop
pop
cmpsl
pop
mov
stos
sub
pusha
dec
in
rorb
pusha
add
xchg
jle
mov
pop
add
leave
fisubs
into
or
rcr
mov
mov
fisttpl
xor
mov
es
push
addl
or
pop
inc
scas
sub
sahf
mov
pop
push
sub
imul
pop
sub
lock
or
lret
sub
cld
enter
pop
aad
mov
ret
repz
push
lds
push
push
mov
lock
jns
xchg
pop
xchg
rolb
add
data16
nop
andl
lock
jbe
pop
or
add
mov
mov
sbb
sub
lock
sahf
mov
or
call
mov
hlt
jl
xchg
pop
shlb
push
inc
jnp
sub
pusha
aas
fiaddl
iret
fidivrl
sgdtl
push
fs
das
gs
xor
lahf
sbb
mov
outsl
lds
push
clc
daa
jmp
xchg
in
mov
inc
sbb
and
loop
mov
xor
fs
out
cld
icebp
sbb
xchg
add
cmp
movsb
adcb
repnz
imul
lods
shll
repnz
sub
push
out
movsb
add
mov
cld
add
sub
iret
mov
gs
dec
jle
ret
hlt
fbld
jno
and
in
jno
shr
inc
lcall
inc
dec
lret
sub
xorb
mov
flds
xchg
push
jne
dec
subb
pop
adc
jle
sbb
adcl
andb
cli
mov
cmp
mov
add
cmp
add
out
pop
xor
and
fdivrl
adc
movsb
shll
sti
or
jbe
mov
push
incl
pop
sbb
jae
repz
push
fstp
dec
pop
adc
pop
sbb
insb
mov
xor
xchg
lock
repz
leave
fistl
rcl
sub
shlb
adc
lret
sti
lods
push
rol
das
pop
adc
xchg
dec
sub
shr
leave
inc
decb
stc
scas
mov
test
xchg
cmp
fs
mov
xchg
jl
stos
int
jo
outsb
inc
mov
jg
xchg
push
or
push
loopne
or
push
sub
cmpb
lcall
mov
xor
pop
jmp
adc
das
or
call
push
cmp
subl
mov
out
jl
inc
cmp
pop
addr16
data16
mov
mov
in
cmp
out
mov
mov
cmp
mov
mov
rcl
outsl
repnz
sti
and
fcmovnbe
add
hlt
ja
mov
out
arpl
jne
jbe
es
imul
test
cltd
movsb
push
fimull
sahf
inc
pop
into
in
imul
push
in
or
fmuls
scas
jbe
in
inc
cmp
sti
sbb
mov
adcb
mov
mov
lock
add
int3
add
push
pop
mov
and
out
sub
push
into
fsubs
fwait
ja
enter
sub
mov
cmpsb
push
add
das
xchg
sub
pop
cli
scas
mov
cmp
loopne
cmpsl
cld
lcall
call
scas
cmp
stos
hlt
mov
mov
scas
jne
rcrb
ljmp
pop
mov
add
stos
in
mov
pop
mov
imul
and
push
cmp
push
cmp
ljmp
insl
pushf
lret
sbb
mov
pop
ret
jmp
int3
out
rep
or
les
int3
push
scas
cmp
frstor
mov
xchg
push
push
int
lods
mov
inc
inc
add
inc
inc
adc
adc
clc
mov
mov
xor
pop
mov
push
mov
in
jp
hlt
sbb
mov
in
mov
sbb
leave
loop
xor
pop
inc
xchg
scas
mov
xchg
pop
sbb
das
dec
mov
ds
adc
call
orl
loop,pn
mov
fisubrs
mov
xchg
mov
addb
out
mov
and
cmp
cmp
adc
in
sub
lds
das
repz
lods
test
lods
outsb
or
mov
pop
xor
jne
or
orw
add
jmp
dec
insl
xchg
sub
fprem1
xor
ja
test
cmp
mov
pop
mov
pusha
enter
movsl
lock
into
adc
lods
out
insl
arpl
js
cmp
xchg
fisttpll
mov
inc
pushf
cld
jecxz
push
insl
or
outsl
popf
mov
dec
sti
rol
outsl
or
imul
xchg
mov
mov
adc
xchg
mov
pop
pop
xchg
sahf
call
gs
popf
sub
in
xchg
outsb
lods
xchg
mov
push
jne
mov
cmp
inc
daa
sub
notb
clc
stos
mov
stos
inc
jp
jae
rcrl
xor
loop
mov
bound
mov
xchg
mov
fcmovbe
sar
into
sub
mov
inc
hlt
rcrl
and
pushf
fwait
xor
push
out
sbbl
and
jno
mov
decb
jbe
loope
pop
xorl
mov
dec
ss
in
jb
dec
add
add
enter
inc
mov
cmpl
jnp
cmp
popf
jg
mov
icebp
lret
pushf
stos
aas
cmp
mov
inc
or
fistl
daa
pop
and
pop
es
roll
nop
hlt
pop
rorl
pop
jnp
add
sub
xor
cmp
and
sti
je
inc
add
daa
jge
les
dec
mov
inc
fcompl
ljmp
mov
mov
mov
shr
cmpsb
popa
mov
jecxz
test
in
pop
or
fidivrs
push
cltd
aaa
xchg
xchg
repnz
cmp
test
cmpsb
add
mov
jge
arpl
mov
pop
stos
push
es
iret
out
orl
pop
cmp
sub
add
mov
mov
mov
cltd
mov
pushf
into
hlt
adc
dec
loopne
andb
in
mov
loopne
lret
frstor
sbb
adc
rorl
add
das
insl
arpl
pop
int
andl
sub
mov
pop
mov
push
sahf
jae
movsl
mov
loope
mov
pushl
test
leave
cmp
movsl
enter
sbb
test
jge
lret
pop
sbb
jbe
sbb
nop
and
push
fcomi
lcall
lods
push
dec
add
aas
pop
push
cmpsb
cmp
and
enter
mov
rorb
push
xchg
shrb
jne
imul
dec
das
or
inc
mov
xor
xorb
cmp
mov
sub
add
aam
mov
xchg
out
mov
mov
add
test
inc
or
mov
sub
loopne
ja
mov
imul
lds
lock
xchg
push
sub
shrb
pop
out
pop
mov
scas
push
enter
stos
cmp
xlat
adc
and
gs
jl
lcall
imull
pop
adc
repz
adc
ret
xchg
fldenv
fadd
call
loopne
into
xor
popf
sti
xchg
mov
xlat
lds
xchg
xchg
mov
es
adc
mov
mov
fimull
inc
stc
hlt
pop
cld
pop
sbb
mov
nop
cs
lcall
loop
jmp
loop
jle
cmp
push
and
pushf
sbb
sti
dec
test
nop
les
in
into
push
fisttpl
insl
js
xor
add
mov
add
ja
jg
ljmp
mov
mov
mov
lea
pop
jb
sub
subl
enter
mov
aas
mov
sbb
je
xchg
jbe
addr16
lahf
pop
jge
dec
les
jne
arpl
pop
js
mov
ret
jno
xor
and
pushf
arpl
add
push
jne
mov
mov
fsub
in
add
adc
pop
ret
pop
add
inc
ret
xchg
mov
push
ret
adc
imul
gs
sub
pop
mov
aaa
test
or
addl
adc
lret
jbe
cmc
popa
jne
sub
inc
popa
mov
test
xor
or
mov
stos
inc
push
bound
aad
pop
insb
lods
ret
jo
fwait
push
inc
shlb
out
test
adc
sbb
popf
loop
cmpsb
lcall
das
xchg
cmpsl
popa
jecxz
movsb
cmpb
push
sahf
pop
imul
pushf
repnz
rolb
xchg
mov
cld
push
in
jns
jge
dec
fs
out
mov
xchg
dec
xor
add
ss
xor
pop
ja
add
add
add
aam
mov
pop
ret
inc
stos
mov
push
mov
arpl
fmull
out
cmpsb
aad
pop
stc
push
push
lret
ljmp
iret
inc
lret
sub
out
xchg
inc
sub
cli
jne
bound
xlat
fisubrs
pusha
cltd
movsb
cmc
stos
jmp
loopne
mov
xchg
mov
and
jmp
in
mov
popf
sub
xchg
jp
inc
xchg
mov
out
push
cmp
das
mov
adcb
mov
inc
mov
lahf
dec
dec
sub
adc
jge
gs
jge
xor
xor
mov
jge
fnsave
jmp
adc
mov
sub
lds
add
mov
nop
test
mov
pop
xchg
xchg
mov
cmc
repnz
push
ss
movsl
pusha
inc
sub
adc
or
dec
adcl
xor
sub
aam
mov
mov
or
sub
dec
sub
or
add
test
mov
hlt
lret
fisttps
sub
lea
mov
add
pop
jmp
xor
hlt
mov
and
xor
xlat
andl
sbb
cmp
xor
lock
pop
xchg
cmpsb
jbe
popf
xchg
or
mov
fbld
or
cmc
adc
adc
inc
mov
cmpsl
adc
stos
cwtl
fnsave
shll
mov
movsb
mov
mov
adc
enter
lret
jle
mov
andl
aaa
add
xor
int
pushl
daa
jb
and
repz
lret
fistpl
pop
repnz
push
enter
fld
jl
sub
lods
jnp
nop
cvtdq2ps
addl
je,pn
push
mov
cltd
pop
mov
arpl
cmp
add
into
fistpll
push
popa
push
jg
xchg
sti
xchg
clc
push
call
sub
fsubrs
lds
rcll
mov
lea
dec
imul
mov
jno
or
xchg
dec
jno
jo
nop
pushl
jne
pop
pop
inc
pop
mov
cmp
lcall
pop
shll
cli
aas
insl
leave
scas
jne
rclb
ret
adc
pop
and
cmp
dec
jecxz
int
dec
mov
mov
les
dec
mov
add
in
and
hlt
sub
inc
jne
sub
daa
mov
adc
mov
cli
popa
test
out
loope
mov
mov
repz
mov
mov
inc
pusha
pusha
push
jle
mov
add
mov
cld
or
out
mov
mov
fcmove
pusha
int3
icebp
das
jo
and
mov
les
mov
cld
out
ret
xor
mov
rol
or
nop
mov
xor
pop
or
out
aam
shll
mov
add
sbb
out
shlb
adc
jo
pop
sbb
xor
mov
add
movb
pusha
lcall
inc
das
negl
jl
sub
dec
and
mov
xchg
testl
hlt
xchg
js
cmp
add
daa
xchg
aam
sbbb
mov
icebp
rcrl
mov
cmp
xchg
xor
pop
inc
add
xchg
mov
pop
fadds
mov
sbb
push
cmc
mov
sbb
sub
push
jnp
lcall
les
push
mov
fimull
ret
cld
jbe
push
cmp
icebp
scas
xor
cwtl
fwait
hlt
scas
popa
lret
xor
add
into
test
out
sbb
rorl
hlt
icebp
push
sarl
insl
in
cwtl
jb
or
mov
fstpl
jl
movsl
mov
dec
inc
in
pushl
or
pusha
cmp
into
inc
mov
out
loop
mov
mov
in
add
pop
mov
scas
jne
and
inc
xchg
je
rorb
cmp
xchg
and
sbb
push
arpl
push
lods
push
push
push
ret
xchg
sahf
int
das
loop
idiv
inc
loopne
jne
int
dec
sub
sahf
and
stos
and
mov
mov
add
cli
fisubs
mov
push
fstl
mov
aam
hlt
pusha
es
into
xor
jmp
faddp
sub
sbb
xchg
fnstcw
or
fstp
cmp
or
push
lahf
ja
movsl
in
jne
add
mov
xchg
adc
leave
fcmovu
add
xchg
sbb
xchg
rcl
enter
cmp
shl
xchg
jl
xchg
les
pusha
mov
add
cmpsb
hlt
jbe
xlat
cli
add
stc
les
mov
xor
jp
jnp
push
mov
out
rorb
pusha
cld
push
pusha
mov
enter
fimull
lahf
mov
xor
imul
mov
xchg
inc
call
scas
cwtl
das
xor
lock
mov
outsl
add
pop
hlt
loopne
mov
enter
into
jecxz
pop
shlb
push
test
jmp
loopne
sbb
xchg
cmc
inc
add
adc
scas
push
mov
mov
scas
mov
jge
xchg
mov
or
clc
mov
lods
inc
es
ja
subb
hlt
je
sub
cmpb
add
inc
ja
sti
inc
outsb
out
pop
sub
das
int3
dec
fsubl
push
dec
leave
cmp
jb
aas
gs
jne
scas
jg
add
mov
mov
sub
jne
lret
arpl
mov
push
ret
inc
sahf
insb
ret
idivb
test
mov
movsb
mov
pop
nop
cs
jecxz
push
jo
sti
push
pop
add
xor
mov
push
addl
push
jg
fisttpll
xchg
adc
pop
rcr
mov
call
imul
shl
adc
es
sarl
into
or
aad
xchg
pop
fildl
out
mov
testl
fwait
adc
aam
jne
clc
xchg
pop
mov
pusha
push
fisttpll
push
sub
add
dec
shll
lcall
lcall
mov
and
call
divl
test
mov
adcl
jmp
sahf
pushf
addr16
sub
fisubrs
sbb
dec
mov
mov
nop
xchg
cli
inc
lock
add
enter
icebp
mov
mov
push
stos
shlb
mov
popf
and
or
push
loop
repz
jle
xchg
dec
or
je
add
dec
xlat
stos
test
inc
lcall
stc
outsb
adc
fs
mov
popa
mov
push
test
mov
jge
dec
int3
cwtl
clc
inc
pop
jns
dec
pusha
jmp
mov
xorb
dec
adc
outsl
dec
sahf
inc
ds
lods
add
jne
stos
adc
sub
scas
icebp
cmp
pop
add
stc
mov
ffree
jne
lcall
push
stc
mov
jne
adc
jbe
fs
push
ret
jge
mov
daa
into
loope
test
loopne
xlat
std
xchg
fadds
dec
iret
xchg
hlt
loope
add
jne
sarl
hlt
pop
ret
imul
in
adc
xchg
and
push
imul
mov
mov
sub
jne
adc
inc
sub
or
sub
ljmp
popa
ja
hlt
js
inc
xchg
mov
out
or
pop
gs
jle
jge
pop
xchg
roll
cmpsb
mov
jne
scas
cmp
push
icebp
sub
vfrczss
jecxz
ficomps
jp
lods
push
add
in
cmp
test
pop
aam
cmc
xchg
repz
mov
nop
sbb
fsubs
lock
cld
call
int
mov
mov
loop
adc
pop
inc
insl
out
addr16
nop
mov
mov
jl
mov
lret
stos
hlt
cmpsb
movsb
and
xchg
sub
push
xchg
push
jo
shrl
cmp
jg
sub
push
pop
jns
sub
add
xchg
sbb
cmp
sub
mov
jno
pop
jecxz
and
add
in
in
fsubr
adc
stos
push
mov
or
imul
movsl
push
sti
cmc
nop
xchg
mov
addr16
aam
loop
test
xor
ja
jnp
inc
cwtl
lods
xchg
or
rcrl
pop
mov
mov
arpl
inc
sarl
mov
mov
sbb
ret
push
hlt
or
add
lahf
sbb
inc
add
push
cmpsl
ret
insb
xchg
mov
cmp
mov
pop
inc
mov
inc
push
adc
shll
ljmp
lret
xor
hlt
push
mov
ss
daa
and
pop
adc
jmp
inc
push
mov
inc
lods
or
mov
xor
popf
ficompl
rol
fisubrl
stos
mov
aad
or
add
mov
aam
xchg
cmp
pop
sub
dec
stos
or
notb
push
add
andl
je
jbe
lret
jne
dec
mov
loope
test
mov
and
test
rcrb
sub
aas
mov
xor
roll
hlt
push
lds
lods
mov
mov
sbb
or
ja
test
aaa
loop
jo
xchg
mov
pop
mov
fmulp
nop
loop
pop
rolb
cmovb
cmp
arpl
jle
mov
xor
sub
fldl
sbb
jle
leave
subb
mov
test
test
cmp
stc
dec
sub
jnp
fistl
negl
or
stos
xchg
or
rol
daa
or
xchg
xlat
push
incb
adc
mov
sahf
xchg
pop
icebp
mov
testb
and
or
or
mov
add
or
or
popa
xorb
fcoml
lds
dec
gs
call
enter
adc
fsts
cmp
test
subb
xchg
mov
scas
into
std
adc
mov
loop
repnz
call
cs
icebp
push
movsb
aam
mov
xchg
ret
hlt
pop
fiadds
xorps
cmpsl
ret
adc
xor
inc
pop
ret
sub
je
es
mov
roll
popa
push
mov
mov
jmp
jbe
outsl
mov
imul
jmp
in
xchg
fists
inc
call
xchg
ja
mov
mov
xchg
insl
insb
popf
mov
inc
dec
jae
hlt
mov
add
and
pop
jge
add
cmp
mov
pusha
cmp
fucom
add
sbb
jle
push
dec
aas
mov
mov
lret
ja
dec
pop
imul
mov
outsl
cmp
lods
lret
or
in
mov
xchg
mov
sbb
movsl
pop
dec
fsincos
jmp
out
mov
test
je
cmc
stc
in
inc
mov
xlat
les
lods
cmpsb
cli
jo
xchg
jo
lahf
sub
push
es
shlb
inc
ffree
outsl
iret
mov
push
scas
clc
push
xchg
push
mov
out
dec
into
push
pusha
pop
ffreep
xchg
hlt
inc
ds
mov
xchg
mov
mov
mov
push
jne
js
jbe
enter
pop
jge
sbbb
mov
outsl
and
cs
mov
jmp
dec
test
das
dec
pop
dec
lds
les
xchg
adc
lock
xor
xor
xchg
das
cmp
repnz
mov
jne
ror
adc
push
loop
js
dec
dec
xorl
dec
and
jo
or
push
mov
inc
jle
data16
sub
add
pop
scas
ljmp
stc
add
jne
outsl
add
pop
adc
mov
push
lods
rcr
ret
hlt
add
xchg
stos
cld
andb
adc
and
fistpl
cmp
lock
mov
in
stos
and
enter
sar
dec
add
in
test
into
mov
add
jne
jno
xor
out
inc
pop
test
mov
int3
push
cmp
xchg
inc
dec
or
inc
mov
fcmovnu
fcmovnbe
int3
or
cmp
mov
mov
push
popf
fdivrl
rcl
sub
in
adc
jne
movsl
mov
mov
imull
mov
sub
incb
pop
andl
ret
dec
xorps
mov
scas
push
inc
das
outsl
pop
js
int
lods
sub
aad
dec
dec
or
inc
sbb
sub
xchg
aad
call
ret
jns
add
mov
mov
insl
adc
pop
inc
pop
insb
loop
or
mov
add
popf
pop
mov
cmp
xor
jge
shll
aad
out
sub
mov
inc
test
jne
and
and
popw
jne
out
pop
xchg
xchg
jne
mov
add
jg
xchg
hlt
imulb
push
push
add
gs
dec
shll
call
fisubl
dec
add
jbe
imul
hlt
cmp
loopne
shlb
or
mov
xchg
mov
xchg
push
mov
cmpsl
testl
mov
enter
loop
add
popf
mov
pushf
xchg
pop
test
mov
push
fxch
inc
mov
movsb
lods
nop
dec
push
push
bound
push
call
flds
arpl
jmp
das
jno
adc
mov
mov
push
jbe
in
scas
int3
lods
jne
movsl
stc
cmc
inc
into
jnp
jmp
adc
aas
mov
dec
mov
aas
mov
push
adc
into
imul
xor
shll
or
pushf
js
lret
or
xor
xor
shlb
or
and
inc
sub
inc
lret
lea
dec
mov
mov
push
pop
es
hlt
cld
dec
sub
dec
add
mov
int3
push
fsubl
pop
xlat
dec
rcll
add
cld
lds
mov
scas
popf
fiaddl
movsb
pop
jo
jne
cwtl
push
in
adc
or
pop
stos
lahf
xor
and
mov
add
mov
jb
add
push
sbb
adc
subb
rcrb
es
jno
filds
jbe
int
adc
add
jle
pop
enter
std
scas
xchg
jmp
hlt
jl
cmp
mov
bswap
lret
sbb
mov
mov
sub
cmp
dec
sub
outsl
dec
das
cltd
mov
dec
pop
pop
xor
dec
adc
adc
mov
cmpsl
mov
xchg
mov
sti
imul
lds
and
lea
pop
sub
ror
jnp
xor
cmp
aam
loope
cmp
pop
dec
aam
nop
mov
sarb
data16
sti
inc
jne
clc
push
insl
sub
mov
dec
cmpsb
xchg
xchg
or
int3
add
cli
cmp
pop
cwtl
cmpsl
xchg
mov
std
pop
xor
enter
jne
fldl
push
cmp
nop
adc
imul
cmpsb
dec
mov
pushf
pop
add
mov
sbb
sub
nop
sbb
mov
cmp
dec
mov
out
rorb
push
sbb
mov
pop
mov
ret
inc
sub
jne
stc
ret
clc
call
stc
fdivs
and
xor
scas
sbb
sbb
mov
cltd
pop
and
shrb
push
jbe
mov
dec
mov
negb
iret
pop
add
int3
sbb
aad
lret
inc
inc
repz
mov
hlt
rcrl
jo
in
add
stc
sti
ja
jne
in
add
cltd
leave
fldl
xor
inc
pushf
jo
and
adc
in
adc
or
leave
movsb
stos
popf
leave
scas
imul
fs
inc
pusha
cmp
lods
subl
leave
lret
fwait
push
mov
add
xor
mov
rcrl
mov
leave
stc
cmp
outsb
or
fildl
sti
mov
in
sbb
lret
xchg
add
push
and
sub
cltd
imul
lahf
and
sub
nop
xor
cmp
aas
sub
xor
out
sub
push
jae
mov
cmp
or
xchg
pusha
cmp
repz
out
out
xchg
xchg
in
dec
adc
push
js
push
subl
sub
jl
std
add
mov
xchg
stc
test
out
popf
add
andb
nop
loop
ja
loop
adc
sub
rolb
cmc
or
int
jne
movsb
sbb
andb
lcall
cmp
sti
inc
shrb
ret
adc
cld
das
dec
pusha
jns
outsl
cltd
mov
xor
push
cmc
cltd
stos
add
cmp
adc
sbb
and
popf
sbb
ljmp
outsl
pushf
pop
repz
add
sub
lock
int3
in
sub
andb
out
inc
add
aam
lea
insl
test
test
push
push
adc
popf
loopne
out
xor
shl
mov
cwtl
cmc
pushf
dec
or
mov
das
out
mov
xchg
je
jne
movsl
mov
xchg
inc
andb
std
and
inc
push
mov
add
std
inc
pop
mov
movsb
mov
sub
dec
inc
jne
cmp
test
mov
imul
pop
add
xor
das
lods
mov
es
jmp
test
jecxz
dec
sbb
popf
pusha
mov
pop
lahf
sbb
sub
push
scas
xchg
pop
rcl
mov
je
sbb
mov
jg
test
adc
cmp
mov
sti
cmp
lea
jmp
add
add
repnz
scas
xlat
mov
stc
inc
adc
das
or
push
jne
pushf
call
test
xchg
cmp
ds
enter
push
mov
inc
out
in
mov
fs
push
mov
insl
pusha
sbb
mov
mov
inc
int
fcompl
andl
adcb
ljmp
mov
cmpsl
and
ljmp
push
mov
hlt
aad
add
mov
or
rorb
add
lcall
xchg
mov
pop
arpl
inc
inc
inc
fldl
sti
mov
cmp
sarl
and
imul
push
mov
sub
inc
xchg
dec
inc
test
cwtl
test
outsb
add
or
mov
lret
pop
inc
xchg
or
mov
dec
pop
mov
pop
mov
es
nop
and
mov
cmpsb
cmc
adc
jg
jns
adc
enter
fptan
push
inc
pop
cmpl
jb
add
sub
scas
sbb
push
and
mov
xchg
scas
jb
mov
push
movsl
jbe
mov
pushf
cltd
ds
fiadds
jns
mov
shlb
or
test
add
icebp
add
gs
xchg
jno
icebp
push
xor
imul
pusha
mov
es
cmpsb
mov
pusha
aas
outsl
push
out
push
into
sub
sub
lahf
js
or
lret
mov
jne
fisubl
add
or
int3
cwtl
in
xchg
sub
and
push
jge
push
inc
out
and
jp
mov
adcl
pop
sbbb
leave
pop
and
dec
adc
cmpsb
shll
nop
pop
arpl
mov
sub
pushf
sub
mov
hlt
mov
and
mov
stos
xchg
or
inc
hlt
pop
outsl
test
fs
or
cli
mov
mov
jne
stos
sbbb
pop
push
aas
testb
adc
cmc
sub
mov
jno
movsl
xchg
call
iret
lods
xlat
dec
sbb
rcrl
xchg
je
test
add
mov
fisttpll
andl
hlt
cltd
sbb
cmpb
or
mov
sbb
mov
enter
jp
adc
xchg
movsl
fdivrp
or
test
divb
add
fwait
sub
movsl
cwtl
adc
stos
stos
loope
xchg
jl
push
fnstenv
imul
scas
jg
popa
leave
xor
pop
loope
cmpl
cmp
xorb
xor
pop
cmp
sbb
arpl
cmp
stc
pop
pop
sub
mov
push
inc
inc
push
mul
add
das
or
aaa
jle
jbe
scas
hlt
mov
in
dec
popf
jno
dec
add
and
push
mov
sub
cmp
repz
fcoml
pop
out
jge
in
jne
inc
test
hlt
insl
cmp
mov
push
fisubs
aaa
mov
add
pop
mov
push
test
cmpb
loopne
jmp
shlb
or
popa
add
or
sub
adc
inc
jnp
mov
or
sub
insl
pop
mov
sub
sub
xlat
mov
mov
jmp
aad
and
and
mov
hlt
pop
cmp
mov
push
dec
loopne
inc
adc
inc
jo
dec
movsl
cmp
add
jne
jecxz
mov
xchg
mov
mov
xchg
adc
in
jp
xchg
popa
pop
push
aaa
ror
jne
sbb
repz
bound
or
mov
mov
cli
repz
nop
pop
sti
cmp
jl
mov
push
sbb
int3
and
pop
pop
and
push
inc
jmp
clc
inc
and
inc
es
add
cwtl
std
add
rcr
add
arpl
fstl
pop
fs
mov
movsb
in
mov
and
mov
mov
rorb
mov
xchg
jl
dec
mov
cmp
into
int
sub
sti
push
outsl
push
and
lcall
inc
push
jne
stc
jno
mov
cmp
sub
cmc
xchg
mov
pop
dec
jle
and
enter
sbb
mov
xchg
rcr
das
out
jne,pt
push
out
in
fwait
dec
mov
jmp
push
inc
mov
aaa
nop
inc
and
mov
add
out
mov
test
or
add
mov
hlt
clc
mov
enter
mov
push
dec
mov
dec
lea
jnp
lds
jg
xchg
or
xchg
adc
sub
mov
sbb
insl
add
les
sub
mov
pushf
xor
adc
lret
in
or
xchg
out
inc
fldenv
push
push
hlt
add
cli
xorl
push
xchg
pop
inc
pop
push
repz
fbld
pop
insb
jle
pop
mov
jns
pop
cmp
nop
jne
adc
nop
leave
mov
ret
divb
inc
repz
jnp
loopne
push
outsl
jge
int3
lods
sub
xor
aam
jg
daa
push
mov
dec
xor
push
fucomip
mov
adc
pop
adc
pusha
and
inc
and
pop
nop
or
and
jne
add
push
xchg
sarl
in
sub
add
les
loope
std
and
jp
test
and
stc
dec
cmp
lods
cmp
stc
rolb
outsb
sti
insl
sbbl
call
cltd
xchg
sbb
dec
fcomps
and
adc
test
aam
loope
or
subl
mov
pushf
inc
vpmuludq
mov
mov
mov
aad
sub
cmp
fldt
mov
testl
psubq
mov
jne
shll
fucomi
mov
in
fildl
mov
cmpsb
cmc
les
cs
xlat
xchg
jg
leave
push
push
divb
minps
jb
test
push
nop
leave
xchg
or
sar
notl
mov
lret
fwait
xor
dec
in
jecxz
xor
test
cld
jg
inc
sub
and
push
jae
popf
lcall
das
and
daa
cwtl
fwait
jp
add
je
jne
jmp
xor
cmp
add
insl
push
mov
xchg
es
out
daa
loopne
push
enter
stc
test
shrb
mov
mov
adc
mov
mov
lahf
add
loopne
pusha
push
in
lret
addb
ds
add
push
scas
cmc
mov
adc
aas
fsubrs
sbb
popa
aas
sbb
adc
jg
sti
mov
pop
repnz
stos
push
inc
hlt
jns
js
cmc
cmpsb
mov
cs
scas
into
pusha
xchg
ret
xchg
mov
fadds
daa
adc
jmp
cmp
sub
add
jge
or
jne
sub
dec
mov
xor
add
cmpsl
lcall
fwait
sub
iret
jo
cmp
mov
inc
lret
fadd
dec
xchg
jb
pop
std
xor
inc
aaa
mov
hlt
jmp
mov
leave
jecxz
in
mov
jne
mov
cmp
adc
nop
fimuls
fsubl
adc
dec
lock
dec
enter
rolb
add
test
mov
outsl
fdivrl
gs
ficoml
inc
cmpsb
push
hlt
aas
jnp
add
mov
fmul
sbb
and
jne
add
cmp
pop
dec
cmpb
xchg
imul
adc
push
pop
mov
jmp
add
fidivrl
mov
rorb
add
je
movsb
out
lahf
inc
inc
fildl
mov
push
and
mov
and
mov
mov
jne
stos
imul
xchg
push
push
cmp
divl
xchg
pop
or
hlt
dec
xlat
lret
cld
lods
in
sbb
mov
loopne
jecxz
sub
mov
loop
mov
jno
sbb
ret
test
into
pop
mov
mov
dec
hlt
or
shrb
xchg
lea
jl
jecxz
pop
cmpb
adc
and
stos
sub
add
ss
xchg
sub
lods
sub
xor
ja
pop
pop
insl
sub
mov
inc
adc
cs
insb
mov
pop
aad
fwait
inc
dec
xor
or
jne
in
lret
in
dec
mov
and
pushf
push
test
push
dec
hlt
repnz
push
loope
dec
cltd
cs
lock
jp
scas
popa
pop
loopne
and
leave
push
sub
insb
and
and
pop
mov
mov
pop
push
push
pxor
leave
push
push
enter
loopne
je
fbld
cmp
xchg
add
insb
movsb
mov
xchg
dec
mov
les
ljmp
push
shrb
adcb
sub
add
movsl
addr16
ja
cmpsl
xchg
fldcw
cmp
aam
icebp
test
mov
in
mov
sahf
repnz
daa
add
pusha
and
loopne
jne
cmp
sub
jae
mov
sub
mov
call
push
sbb
sbb
pushf
push
hlt
les
mov
shll
ja
mov
sub
clc
repnz
movsl
nop
repnz
hlt
adc
cmpsb
mov
jo
mov
inc
int3
add
push
mov
mov
lahf
jb
or
rclb
out
cmp
scas
inc
and
in
inc
add
repz
stc
lret
xchg
in
lods
in
pop
aam
popf
out
addb
inc
and
mov
sbb
jl
adc
inc
scas
cmp
add
mov
dec
cld
insl
xchg
lds
xchg
or
xor
ficoml
adc
xchg
mov
cmc
jns
push
data16
mov
repnz
mov
add
orb
cld
repnz
adc
cmpb
and
je
cmc
xor
cmc
and
jl
mov
pop
pop
in
ret
mov
push
shrb
dec
movsb
andb
mov
bound
push
cmp
sbb
sub
out
push
push
add
mov
jns,pn
mov
and
and
jmp
ljmp
pop
push
movsb
shlb
mov
mov
test
addb
inc
in
xor
test
lret
xchg
sub
mov
mov
xorl
testb
mov
jnp
fildl
repz
bound
jg
sbb
jp
xchg
hlt
das
xorl
sub
stos
pushf
fmull
mov
sti
jnp
pop
jnp
pop
cmp
jae
mov
lcall
inc
movsl
mov
adc
sti
mov
push
les
loop
hlt
repnz
jnp
xchg
popa
dec
out
les
push
stos
jle
mov
push
pop
and
dec
sub
int3
dec
push
inc
pop
adc
mov
mov
hlt
jb
xor
repz
push
or
sarl
add
fdivrl
mov
orl
ret
sbb
cltd
sub
sub
sub
add
jne
mov
push
imul
mov
test
cmp
mov
pop
cld
repnz
xchg
shrb
jne
sub
xchg
mov
xchg
ss
es
test
gs
adc
enter
ret
push
xchg
in
xor
adc
pop
add
ljmp
js
xlat
stc
mov
in
mov
scas
adc
inc
mov
into
push
ret
pop
les
adc
cmp
xor
pop
sti
add
cmp
lcall
pop
fnsave
jns
mov
pop
std
xor
cwtl
dec
add
sbb
xchg
ja
pop
xchg
add
arpl
hlt
push
out
xor
scas
vpmacswd
nop
cmp
cmp
cli
es
adc
sbb
pushf
inc
push
lcall
add
in
mov
fildl
sbb
cmp
add
repz
addr16
xchg
mov
mov
sti
shlb
ret
loope
push
jne
adc
call
lods
loope
or
push
xchg
scas
das
fsts
stos
stos
mov
int3
push
lods
or
mov
test
test
adc
push
xchg
cmpsl
mov
pop
inc
lahf
sub
hlt
mov
jg
shlb
into
clc
enter
jne
cmp
int3
xor
pop
inc
sbb
dec
mov
and
pop
jbe
xchg
xchg
sahf
pushf
int3
adc
enter
adc
sahf
fnsave
sub
lock
and
repnz
push
lcall
mov
cld
movsb
mov
mov
es
and
outsl
add
cs
jge
jmp
out
mov
stos
in
shlb
jae
xor
dec
push
sti
imul
pop
mov
hlt
inc
or
and
sub
stc
ljmp
or
test
hlt
scas
push
or
mov
adc
scas
leave
xorb
push
pusha
sbb
mov
jb
fsts
or
scas
jl
imul
mov
gs
insl
frstor
mov
sarb
dec
ss
adc
data16
test
mov
lcall
std
idivb
pushf
call
pop
mov
in
std
push
dec
push
adc
imul
ja
mov
fadd
mov
sbb
leave
pusha
scas
das
mov
inc
push
mov
loope
xchg
inc
pushl
mov
gs
fs
inc
cld
sbb
fldl
fdivrs
int3
xorb
add
ljmp
push
lods
insb
addl
loope
inc
out
jb
insl
fldenv
xor
push
jb
sub
xchg
sbb
test
add
stos
dec
xlat
leave
test
xor
enter
loop
jle
outsl
mov
lods
sarl
or
jmp
jle
mov
sub
jnp
jbe
mov
lahf
sbb
or
xchg
scas
fisttps
aam
cwtl
lcall
leave
aas
push
push
imul
lret
int3
lret
dec
cs
fs
xor
lahf
adc
jecxz
mov
gs
jecxz
dec
es
jne
mov
movsl
dec
cmp
ss
les
outsb
fnstsw
mov
cltd
lret
mov
xchg
xor
xor
lods
add
or
cmp
call
mov
adc
mov
sti
sti
test
dec
leave
lret
scas
subb
jae
xchg
sub
pop
movsl
jnp
ljmp
call
and
xchg
jge
sub
pusha
mov
adc
loop
fisttpl
cmpsl
push
xchg
out
inc
movsl
mov
adc
in
cltd
sbb
jne
sub
mov
dec
dec
ds
mov
test
in
stos
popa
sub
mov
sbb
into
and
stos
cmp
xor
mov
fdivs
lock
xor
inc
push
pop
popf
cmpsl
nop
or
and
es
dec
xorb
adc
mov
mov
pop
and
loop
sub
insb
cwtl
ret
or
mov
inc
add
ret
shll
adc
mov
xchg
sbb
mov
or
mov
je
out
xchg
int3
pop
add
mov
std
imul
fists
sbb
push
mov
mov
jmp
insb
pop
js
add
adc
mov
leave
mov
fistpll
out
in
sub
out
xor
cltd
je
std
mov
loope
xchg
hlt
xchg
les
test
inc
es
es
es
repnz
push
mov
lcall
xchg
mov
mov
imul
mov
hlt
jae
cmp
add
mov
mov
insb
loop
mov
call
pop
push
push
mov
lret
in
scas
fmull
sub
adc
xorb
mov
mov
std
cmp
in
cmp
cmp
into
imul
and
rclb
inc
int3
xchg
movsb
mov
lods
negl
movsb
push
inc
sub
dec
mov
in
push
fadds
sub
enter
or
repnz
ror
decb
negb
add
dec
fdivrs
leave
add
mov
adc
or
sub
mov
cs
outsl
mov
mov
loop
test
or
mov
adc
les
dec
imul
hlt
shrb
jl
dec
loop
sbb
mov
addr16
inc
jbe
cmp
pop
hlt
movsl
shlb
inc
inc
fcomp
fcompl
pop
push
mov
push
adcl
movsb
das
clc
pop
xor
inc
mov
nop
xchg
mov
xor
leave
add
nop
push
dec
adc
iret
insb
fdivl
dec
clc
movsb
or
xchg
cld
or
mov
pmullw
pop
mov
push
lods
pop
pop
add
and
fildl
inc
cld
out
sbb
inc
into
mov
cli
sub
lcall
adc
pop
ret
sub
push
adc
xor
mov
add
mov
cmpsl
arpl
loop
xchg
mov
into
sbb
rcl
inc
repz
mov
cmp
xlat
popf
jne
or
ja
sti
xor
sbb
addb
pop
test
xchg
cmp
pushf
in
lds
cmpsl
adc
push
push
push
iret
push
in
leave
popa
pop
or
nop
pop
sub
cmpsb
cmpsl
faddl
xor
inc
int3
fcoml
mov
xchg
shl
movsl
inc
enter
cltd
shl
scas
enter
mov
mov
data16
aas
gs
xor
and
in
dec
popl
push
jno
cmpsb
xor
je
push
pop
mov
push
mov
lods
in
mov
stos
pop
add
jne
mov
aam
add
imul
cmp
mov
dec
mov
icebp
imul
imul
cld
dec
test
fcompp
sub
in
repnz
pop
ljmp
mov
fsub
int3
rorb
lret
jge
adc
xchg
data16
in
daa
lret
add
rclb
add
leave
dec
loop
or
add
cmp
leave
cmpsl
pop
rorb
mov
in
or
loope
stos
cli
bound
mov
xchg
jne
pusha
in
add
mov
scas
mov
mov
jb
mov
mov
hlt
pop
sub
adc
mov
stos
in
ljmp
dec
pop
cmc
and
or
adc
cmpsl
sbb
push
inc
mov
mov
mov
lcall
mov
lcall
scas
gs
cmpb
daa
mov
lahf
mov
cmc
arpl
cmc
push
out
loope
repnz
movsl
jge
shll
jmp
es
mov
adc
std
mov
dec
dec
pop
jns
popf
mov
push
cwtl
hlt
push
in
enter
pop
push
push
xlat
mov
mov
sbb
pusha
addb
pushf
in
sub
xchg
inc
rolb
scas
es
addr16
movsl
inc
or
push
mov
or
sub
sbb
int
movsl
fdivrl
lret
sub
adcb
gs
or
stos
xchg
sub
xchg
mov
sub
ror
pop
jle
inc
pop
xor
jle
lock
scas
enter
popf
mov
cld
arpl
rcrb
push
dec
xchg
shll
mov
lahf
mov
jb
push
lock
dec
orl
push
enter
mov
les
add
sub
jg
cwtl
mov
cmp
hlt
aam
imul
mov
inc
cmpsl
push
arpl
xor
std
pop
sub
mov
call
movsl
dec
pop
xchg
movsl
aam
dec
rolb
jl
gs
out
sti
jne
lods
jg
jnp
xchg
test
adcb
loop
imul
sub
gs
dec
mov
mov
call
mov
push
cmp
sub
sbb
add
sub
and
inc
stc
aas
mov
es
or
mov
lock
fwait
decb
dec
mov
pop
inc
mov
cwtl
mov
jns
inc
faddp
lds
rcll
lahf
stos
mov
fistl
mov
or
sbb
pop
and
addr16
push
jge
push
jne
cmp
insb
movsl
data16
cs
xor
ret
fstpl
out
jle
sub
aas
adc
inc
arpl
mov
inc
js
and
repnz
daa
adc
int3
inc
mov
or
mov
pop
lcall
pop
mov
jo
movsb
sub
adc
mov
mov
jbe
es
int3
xchg
inc
adc
jge
lds
fiadds
aam
arpl
push
cmp
leave
rclb
pop
stos
push
inc
jns
es
out
inc
sbb
enter
or
jg
rolb
repz
pop
adc
mov
adc
mov
iret
leave
or
aas
mov
push
shll
pusha
pop
sub
test
push
int3
xchg
aas
push
imul
fdiv
test
jmp
sub
add
sub
in
pusha
ret
xor
out
xchg
add
jne
movsl
push
dec
add
roll
lods
fdivrs
inc
shlb
pop
std
nop
cs
popa
inc
movsl
sub
inc
fmull
shlb
decb
loope
or
jg
sbb
sbb
rol
and
push
into
cmc
movsb
aas
inc
or
iret
mov
xchg
pop
cmc
jb
mov
push
sbb
sbb
add
or
and
mov
sbbb
mov
std
sti
jne
xchg
sbb
cmp
add
dec
xchg
mov
mov
pop
adc
imul
pop
dec
jae
or
mov
add
in
addr16
adc
inc
popa
test
pop
andl
pushf
inc
in
fsubs
pop
cmc
jne
popf
push
mov
pop
mov
nop
subl
adc
and
jne
and
popf
into
mov
add
shr
mov
mov
inc
inc
testl
xor
and
aam
sub
jg
fistps
and
cs
xchg
into
cmc
pop
and
sub
push
fwait
mov
enter
dec
lcall
lret
sbb
dec
rol
or
ret
test
lods
sti
cmpsl
xchg
in
jno
ffreep
stos
mov
pop
mov
into
testl
stos
in
add
xor
aam
add
cmp
sahf
mov
jg
aas
dec
and
inc
bound
xchg
fisubs
lcall
jae
xor
into
add
sub
aad
int3
adc
mov
repnz
mov
and
mov
xchg
sbb
movsb
enter
cmp
sbb
test
add
insb
mov
addr16
scas
ss
mov
mov
dec
mov
mov
xchg
mov
adc
scas
adc
into
sbb
aam
ljmp
mov
in
lods
xchg
test
decb
lcall
iret
nop
sub
pop
sti
shl
arpl
or
repz
push
jl
add
cmp
jl
std
nop
xor
inc
fnstsw
dec
test
dec
mov
dec
popa
fisttpll
movsb
test
cmpsl
movl
inc
push
sahf
filds
clc
sbb
pop
dec
or
inc
xchg
fistl
pop
pop
mov
inc
dec
jmp
leave
sub
leave
shrb
dec
xor
bound
lds
adc
hlt
jnp
or
int3
ds
sub
int
inc
ja
movsb
negb
mov
repnz
inc
push
push
ljmp
test
xchg
adc
cli
aam
push
shll
pop
shr
pop
mov
cmpl
int3
or
imul
add
gs
mov
sub
dec
test
rcl
ret
testl
js
lods
inc
jnp
es
add
rolb
rcrl
aaa
cmpsl
add
mov
mov
pop
sub
test
decl
cmp
add
lret
ret
add
or
hlt
pop
rol
out
adc
sub
dec
dec
mov
xor
inc
andl
repnz
mov
lret
jnp
cmp
es
jge
test
in
push
mov
nop
mov
pusha
mov
mov
orb
fstl
in
pop
ret
std
adcb
clc
dec
sub
lea
jp
pusha
jbe
jns
test
mov
xchg
into
in
sub
movsb
fcompl
loopne
addl
sbb
add
popa
cmp
sub
dec
aas
sbb
fwait
pop
pop
stos
aad
imul
xchg
mov
or
filds
rcrl
out
shl
xchg
push
repz
cmc
sub
mov
pop
fisubl
jge
call
xor
pop
mov
int3
int
aas
loope
push
and
rorb
ljmp
xchg
push
add
and
into
fsubl
lods
orb
xchg
dec
and
test
dec
jmp
lods
push
dec
hlt
insb
xlat
imul
cmpsl
scas
jae
adc
cmpsl
jle
cmc
jne
cmc
leave
fs
adc
aaa
adc
orb
mov
mov
dec
lahf
push
xchg
mov
mov
mov
sbb
loopne
xchg
les
xchg
push
xchg
jle
jp
scas
pusha
lcall
call
fcoms
leave
mov
mov
lds
pushf
push
stc
inc
les
pop
stos
jne
les
repnz
xor
jl,pt
scas
shll
pop
hlt
sub
cmc
mov
mov
jo
popa
filds
dec
xorl
aad
pop
and
sahf
andb
jns
lahf
hlt
mov
fndisi(8087
push
movsb
push
fs
mov
xchg
jnp
std
inc
adc
and
loope
jecxz
push
or
fs
xorb
scas
jb
cmp
sbb
repnz
xor
lret
fisubrs
outsl
push
xchg
push
or
dec
jo
inc
fidivrs
lret
or
cmc
loope
js
pop
push
lahf
hlt
add
mov
xchg
loop
add
inc
jbe
add
pusha
mov
and
fildll
scas
xor
mov
std
mov
hlt
add
add
sbb
dec
pop
mov
loop
outsl
shll
push
mov
movsb
adc
add
lahf
and
sbbl
mov
inc
fdivrp
jg
lahf
test
push
jne
xor
call
fistpll
pusha
add
and
xchg
clts
adc
cmpl
mov
add
cld
inc
das
in
jmp
jns
adc
nop
testb
loope
dec
fidivs
hlt
lret
jbe
mov
mov
push
push
lret
add
lea
call
dec
mov
mov
cltd
pusha
shlb
sub
lods
jne
imul
add
mov
ja
sbb
sub
inc
jne
mov
adc
cmpsb
lods
mov
mov
mov
call
cli
fnstsw
movsl
push
aaa
inc
fdivl
sahf
mov
push
jmp
adcl
inc
xchg
adc
inc
ror
imul
int
jg
mov
mov
in
and
pop
das
xchg
or
call
and
popa
into
push
pop
xchg
jle
push
mulb
cmc
sbb
xor
cmp
adc
or
jne
pop
xor
pop
push
repz
inc
mov
mov
aas
push
aas
in
arpl
jmp
stos
mov
aas
mov
fsub
scas
ficoms
dec
jnp
sub
das
mov
cli
mov
clc
xor
add
stos
aad
and
mov
shlb
inc
mov
cmp
push
mov
rcrb
loope
imul
jae
out
pop
into
loop
add
out
mov
sbb
sub
mov
mov
mov
std
movsl
push
jne
out
sti
cmp
into
arpl
mov
mov
mov
push
mov
add
mov
lcall
repnz
dec
adc
lahf
inc
mov
cs
add
rclb
in
clc
test
dec
cld
or
in
hlt
lods
clc
pop
dec
dec
rolb
or
ror
popa
sbb
pop
stc
mov
nop
dec
mov
push
popf
sahf
arpl
mov
jbe
xchg
cmp
bound
sub
pop
shr
sbb
jl
jl
pusha
xchg
jb
dec
fst
xchg
add
mov
mov
mov
mov
out
rolb
pop
sbb
jne
filds
pop
out
rorb
mov
leave
jg
test
cltd
jg
mov
or
adc
and
aas
inc
mov
or
cmp
lcall
mov
scas
lret
shl
jp
dec
mov
movsb
push
mov
add
or
repz
mov
ja
shl
mov
xchg
rcl
add
sub
cmp
aam
cmp
sti
lods
xor
mov
push
mov
cltd
loop
and
or
subl
stos
stos
test
mov
popa
leave
in
popa
stos
lahf
fdiv
cwtl
sbb
dec
rcrl
sub
loope
dec
orl
jne
and
in
inc
or
mov
faddl
fs
leave
lret
inc
add
cmp
inc
sbbl
mov
pop
jg
out
cli
pop
subb
stos
jae
in
imul
or
mov
push
popf
mov
cmpsb
mov
hlt
out
in
jmp
in
andl
js
shrb
pusha
inc
push
push
shrl
lcall
sbb
out
stos
aam
pop
repz
sti
jge
xor
or
scas
aam
loop
outsb
les
dec
jl
and
push
and
cs
sub
lock
loope
lret
add
pop
add
idivl
call
mov
mov
fwait
sar
xchg
adc
leave
shll
mov
popa
hlt
dec
in
jl
dec
push
cmp
or
jns
ret
aam
mov
insl
sbb
movsl
jo
sbbl
cmp
jmp
pop
or
jle
je
and
dec
jle
lds
xchg
pop
and
cmpsl
mul
pop
hlt
sbb
movsl
scas
into
and
pop
mov
fs
and
dec
shrl
push
mov
pusha
pop
push
scas
loopne
jge
iret
add
pusha
sub
hlt
fs
mov
mov
push
dec
insb
gs
inc
and
mov
mov
aad
sbb
inc
jb
adc
test
imul
aaa
inc
in
cli
xor
xchg
fsubl
repnz
into
sbb
out
loope
cmpl
cmpsl
inc
or
test
cld
aam
leave
xchg
pop
sub
add
fwait
dec
int3
xorl
cmpsl
xchg
fldcw
sbb
fisttps
out
scas
inc
push
push
js
mov
mov
cmp
lock
pop
sub
insb
repnz
mov
mov
scas
dec
incl
scas
dec
push
add
ljmp
push
mov
outsl
mov
shl
xchg
scas
stos
lock
pop
in
icebp
dec
mov
mov
jns
imul
fcomp
sbb
shll
inc
hlt
mov
jnp
sub
cmp
loopne
inc
fcmovne
test
iret
popa
jg
arpl
jg,pn
cmpsb
mov
shlb
sub
mov
stc
mov
jmp
sub
std
push
stc
daa
dec
ror
mov
cltd
mov
sbb
push
ds
jno
adc
xor
xchg
ljmp
pop
jge
and
sub
pop
test
hlt
mov
xchg
cmp
ljmp
jne
jmp
js
out
mov
out
xchg
xchg
xchg
stos
or
xor
jl
pushf
cmpsl
inc
lock
movsb
mov
xchg
adc
enter
and
cwtl
xchg
call
dec
es
sub
fcoml
jg
mov
fadds
popl
jle
in
in
sbbl
sub
icebp
out
jp
add
sbb
mov
div
jecxz
shlb
sbb
push
lods
mov
inc
nop
pop
xchg
jne
pop
add
cld
sar
push
pushf
test
mov
aad
rclb
mov
js
int
sub
add
mov
rcrb
mov
arpl
ret
fstps
mov
icebp
jae
jnp
stos
cld
bnd
or
bound
push
mov
mov
mov
test
sti
mov
ffree
jae
cwtl
nop
fsubp
mov
add
xorb
add
push
dec
aaa
inc
pusha
xchg
jge
gs
imul
into
adc
sbb
mov
daa
sub
jmp
xchg
repz
sub
mov
and
ret
mov
cwtl
sub
hlt
sahf
ja
ror
mov
dec
movsb
xor
leave
lahf
jg
mov
mov
mov
jnp
sub
jg
adc
je
das
roll
add
lds
in
outsl
mov
add
int3
pop
jne
stc
lahf
shll
add
sub
orb
pop
cmp
jp
xor
stos
into
loop
scas
sub
nop
sarb
push
push
cmp
sub
or
add
lret
rcll
mov
enter
in
cmpsl
dec
mulb
std
jecxz
and
icebp
dec
jno
cmc
sahf
or
jle
jne
daa
dec
fst
adc
mov
inc
jl
dec
dec
mov
fadds
inc
sbb
cld
jbe
push
mov
pop
inc
xlat
shlb
dec
aam
sub
aam
xchg
negl
and
hlt
pop
jnp
ret
push
cmc
or
lret
int3
js
adc
mov
mov
mov
fstl
ds
cmp
subb
stos
pusha
stc
cld
add
out
push
xchg
adcb
inc
shr
pusha
mov
mov
sub
inc
das
insb
sub
hlt
pusha
sbb
pushf
incl
pop
xor
inc
push
lock
iret
push
inc
pushf
hlt
or
jb
dec
aam
fisubrs
adc
push
fwait
sti
stos
sub
lods
cmc
ds
jmp
inc
xor
xlat
mov
test
jno
mov
mov
sbb
xlat
mov
jne
loop
ret
popf
cmpsb
jns
sub
mov
enter
xorl
sub
subb
mov
cmp
inc
add
jnp
subb
lcall
das
lods
mov
arpl
movsl
dec
std
bnd
sarb
loopne
mov
inc
scas
fdivrl
jg,pt
shl
mov
xchg
adc
sub
bnd
or
push
adc
mov
mov
enter
fwait
cmp
incl
xor
push
mov
aaa
xorb
jp
add
ret
movsl
or
repz
mov
dec
out
adc
movsl
sbb
xor
or
push
stc
shl
dec
mov
and
jne
test
inc
cmp
in
cmpsl
mov
pop
inc
leave
sbb
stos
add
sub
push
repnz
xchg
mov
cli
mov
lods
add
mov
lahf
in
test
ss
pop
dec
mov
adc
or
push
lret
dec
xchg
lcall
clc
rcrb
mov
jg
pop
mov
and
mov
test
adc
xchg
mov
mov
jle
and
mov
inc
cmpb
jl
jne
mov
or
xor
movsbl
inc
in
mov
and
jbe
aad
mov
add
das
shrl
pop
in
jmp
and
loopne
outsl
mov
out
jnp
inc
push
rcrl
pushf
pop
add
mov
pop
repz
xchg
bound
sub
mov
cmpsb
loopne
testb
in
cmpsb
pop
out
cli
push
sub
mov
hlt
gs
andl
ja
lahf
xchg
ret
jo
mov
push
and
pop
xchg
add
aam
cmp
dec
fld
aad
or
cmpsl
shlb
pusha
insb
shrl
pop
out
xchg
jb
inc
jne
ljmp
xchg
mov
addb
popf
mov
mov
dec
push
loopne
lods
fs
loop
fisttpl
jp
sbb
in
cmpsl
cmc
mov
hlt
jle
mov
enter
inc
test
mov
incb
int
int3
fmull
push
or
jecxz
pop
adc
and
imull
mov
xchg
test
popf
adc
xor
enter
fwait
stos
hlt
into
cmpsl
dec
jg
xchg
jnp
xor
pop
cmpsl
mov
fildll
jecxz
nop
int3
cmpsl
inc
mov
shr
int3
gs
inc
loopne
mov
or
add
repnz
jp
dec
stos
push
xchg
aaa
shll
inc
xlat
cltd
test
fcomi
xor
out
repz
cmpsl
ljmp
loope
lods
scas
fldl
cmpsb
push
hlt
xlat
push
mov
and
std
sbb
stc
mov
mov
divl
push
jmp
fcompl
cld
scas
jecxz
and
add
add
fstps
fsubl
push
in
in
push
or
insl
rorl
stc
jge
dec
lock
cmp
mov
aam
aaa
hlt
data16
jge
pop
mov
hlt
ret
adc
push
jecxz
xorl
jne
mov
test
mov
add
mov
mov
test
ljmp
int3
repz
hlt
sbb
shrb
push
mov
jge
std
frstor
ljmp
mov
jb
movsb
jnp
dec
pop
xor
push
shll
xor
stos
xchg
les
and
cmpsl
stos
mov
pusha
xchg
mov
pop
sbb
in
add
sbb
push
lods
addr16
shrl
push
data16
stc
stc
das
jmp
and
xor
mov
lret
and
cmc
push
outsl
shll
and
stos
popf
push
jge
movsl
aaa
pop
les
mov
xor
add
sbb
and
inc
xchg
sub
stos
ds
xchg
test
inc
es
call
xor
inc
arpl
dec
mov
jl
push
jmp
mov
mov
mov
push
jne
enter
mov
rorb
mov
jne
test
pushf
lods
test
lods
mov
test
mov
movsl
testl
push
shll
lahf
out
into
jb
ret
andl
or
aas
loope
ret
cmp
cli
es
add
and
mov
or
jg
sbb
nop
dec
stos
adc
scas
cmp
mov
js
jne
cs
loop
shrb
fiadds
push
adc
cmpsb
mov
addb
rolb
notl
xor
jo
addl
push
movsl
jl
adc
xor
lcall
test
pop
push
push
leave
test
es
pop
in
lods
mov
outsl
fmul
enter
les
cmpsb
sahf
xchg
iret
jae
lods
inc
sub
mov
cmp
or
adc
test
inc
pop
pop
jmp
cmp
cmp
pop
pushf
xor
add
outsl
mov
jno,pn
sbb
dec
pmulhuw
adc
scas
or
arpl
jae
mov
out
shlb
xlat
xor
rcl
inc
test
inc
xchg
mov
test
outsl
leave
data16
jl
int
out
andb
or
xchg
inc
loopne
lea
sbb
mov
xchg
pusha
pusha
insl
pop
jo
ja
pop
repz
jecxz
lcall
mov
sub
in
inc
adc
fsubp
cwtl
inc
pop
pop
into
fldcw
fists
inc
bound
leave
jg
out
lret
add
rep
test
imul
lcall
xlat
aad
or
pop
mov
push
addl
cltd
jb
aaa
leave
pushf
out
and
pop
fdivp
aam
rcr
divb
xor
ss
loope
xchg
xchg
pcmpeqw
inc
pusha
ret
insb
scas
sbb
andl
iret
mov
arpl
les
push
repz
jne
inc
sarl
aaa
out
xchg
mov
sub
cmpsl
hlt
sub
add
rcrl
xor
lahf
adc
gs
xchg
repnz
add
cmp
add
lds
fnstcw
pusha
sub
mov
xor
add
out
clc
insl
fcoml
inc
call
mov
lds
rorb
mov
mov
jg
push
test
mov
pop
out
jp
hlt
shlb
cmp
xor
dec
mov
mov
inc
lahf
pop
adc
adc
cltd
jne
jg,pn
sub
leave
jecxz
sub
push
hlt
lods
divb
push
test
aam
iret
shlb
xlat
insl
je
xor
mov
xchg
xor
mov
lret
das
sbbl
sub
xchg
pop
xor
xchg
lock
outsl
test
dec
mov
divl
fisubrs
inc
and
frstor
jne
add
mov
fisubs
leave
std
imul
in
sbbb
aas
or
shlb
jne
mov
ffree
test
movsl
enter
shr
imul
push
fmull
mov
inc
lret
adc
das
jmp
hlt
fisubs
pop
push
push
mov
or
push
jbe
je
es
push
les
lods
adc
xor
fstp
cmp
jge
and
inc
enter
loope
jl
fists
xchg
and
cltd
adc
pop
xor
shrb
adc
sub
lcall
mov
mov
add
xchg
popa
sbb
stos
adc
inc
xchg
xorb
jne
pop
and
pop
xorb
sub
in
adcl
pop
lds
xchg
leave
adc
mov
adc
pop
sar
les
adc
add
lcall
jge
xchg
or
xor
push
test
sub
and
and
adc
xchg
sbbl
xlat
add
out
sbb
dec
in
stos
loopne
jne
adc
insb
outsl
cwtl
and
and
notl
jns
jg
xchg
hlt
addr16
int
add
xchg
insb
pop
dec
pop
fisubs
cmp
pushf
fidivl
xrelease
loopne
imul
lahf
orl
inc
mov
sub
sbb
add
inc
mov
jp
das
sub
adc
inc
mov
fstpt
and
mov
lret
mov
arpl
rcll
incl
arpl
dec
dec
aas
jge
pop
hlt
pop
pop
lds
sub
negl
into
mov
cmpsb
mov
inc
test
adc
inc
mov
pop
bnd
and
ss
xor
inc
rolb
cs
add
sub
inc
pusha
mov
cs
mov
sti
out
in
mov
sbb
mov
add
imul
loopne
sti
jmp
cmpsl
mov
pop
idivl
out
add
or
mov
cmc
cmp
stos
sub
in
dec
mov
out
call
insb
sahf
push
loope
push
dec
movsl
mov
fisubs
lds
add
pop
mov
jg
xchg
hlt
loopne
mov
lock
cmp
lret
xchg
push
inc
sub
sub
aas
sub
call
and
pop
jb
jo
punpckldq
sahf
inc
xchg
leave
cmp
scas
xlat
rcll
add
and
ja
test
sub
push
cltd
out
mov
mov
mov
lods
and
popa
hlt
repz
out
jl
inc
dec
xchg
aad
clc
lahf
aad
fcomps
pop
mov
mov
dec
push
subl
outsl
mov
mov
insb
pop
ficoms
stos
xchg
rcrb
enter
pop
int
dec
rolb
and
jg
fucomi
mov
sahf
in
hlt
jecxz
loop
inc
dec
pop
ja
clc
jmp
cld
iret
pop
mov
jl
xor
into
stos
loope
xor
ss
ret
aaa
inc
fisubl
aam
inc
int3
jmp
xchg
pop
mov
cmp
mov
mov
mov
jge
inc
mov
xchg
das
cltd
imul
and
xorl
push
nop
adc
ds
lcall
repz
int
cltd
jmp
cli
stos
loopne
test
pop
cwtl
fnstenv
pop
repz
loope
loopne
rcl
cmp
jne
cmp
or
sub
mov
push
jge
lahf
cwtl
jmp
out
xchg
stos
pusha
add
jnp
xor
fbstp
shrb
sar
xchg
int3
clc
mov
fsubl
movsb
push
mov
mov
ljmp
inc
pop
mov
xchg
jnp
enter
mov
nop
fsubrs
lret
hlt
cmp
fdivrp
mov
jmp
adc
add
jae
insb
mov
leave
stos
je
push
add
jle
add
fdivp
dec
rolb
sub
jmp
dec
mov
test
test
orl
jmp
jo
lds
cwtl
aaa
xchg
hlt
outsb
xchg
dec
sub
push
ret
jne
std
xchg
add
movsb
xchg
pop
sarb
xchg
mov
bound
fisttpll
mov
loopne
jne
rorl
push
sub
mov
mov
or
cmp
add
xor
add
leave
mov
sub
push
call
es
fldl
xor
inc
mov
mov
add
add
adc
arpl
es
les
lret
pavgb
stos
inc
pop
cmpsl
std
scas
cmp
or
mov
sub
roll
into
mov
in
out
jne
loop
or
inc
mov
xor
mov
insb
add
inc
sbb
add
test
mov
lods
mov
sbb
xchg
sti
call
hlt
mov
icebp
cld
mov
and
mov
psllq
das
dec
movb
sti
ds
hlt
mov
into
cmp
test
loope
fisttpll
pop
movsl
pushl
sbb
dec
fs
push
cmpsb
pusha
lea
test
adc
add
int
push
movsl
mov
pop
sub
in
pushf
mov
push
add
out
jno
int3
scas
jnp
push
loope
sbb
pop
xchg
mov
add
jp
mov
inc
or
cmp
dec
ljmp
add
mov
out
jb
add
and
jge
stos
sbb
adc
incl
xor
pusha
fwait
mov
movsl
movb
cmpsl
aaa
xchg
mov
pop
sub
inc
mov
arpl
push
sbb
subl
adc
call
sahf
sbb
scas
nop
cmp
orl
stos
xor
imul
or
hlt
lods
movsb
pop
js
es
js
jmp
in
inc
sub
jbe
lods
mov
addb
inc
hlt
mov
inc
sbb
loop
fists
inc
roll
nop
jne
aaa
call
test
jge
add
mov
push
or
jbe
jbe
sub
pop
daa
mov
je
mov
push
mov
xor
add
test
aas
cmp
mov
cmp
imul
stc
dec
enter
dec
jg
push
push
mov
divl
test
rolb
cmc
nop
cmp
sub
int
sub
mov
js
jge
jbe
adcb
mov
xchg
je
pop
inc
into
lahf
adc
xchg
and
inc
jne
xor
rorl
xchg
fisubs
mov
arpl
out
mov
or
lods
fdivl
daa
lret
lcall
cmpsb
scas
fstpl
les
mov
arpl
mov
mov
and
sti
out
mov
jns
int3
scas
das
int3
nop
scas
jb
or
adc
dec
xor
xchg
scas
jne
mov
clc
test
push
les
sbb
inc
pop
and
lret
out
mov
mov
jne
adc
imulb
sub
xor
das
mov
mov
loopne
je
inc
js
mov
testl
push
adc
in
ror
xor
fs
jmp
icebp
mov
test
imul
mov
push
inc
shlb
call
inc
das
test
mov
xor
mov
adc
dec
std
mov
xchg
ficompl
sti
inc
pop
std
popf
xchg
jle
popf
push
daa
cmp
into
mov
insb
jne
push
add
and
in
jl
push
stos
cmpsl
cs
lods
xchg
xchg
sub
dec
in
fmuls
sub
out
inc
jl
add
repz
sub
nop
insl
jg
mov
mov
xlat
cmp
mov
xor
or
adc
rcrl
icebp
dec
mov
fdecstp
fiaddl
inc
sbb
mov
aam
adc
mov
add
push
cmc
jae
push
fisubrl
cs
iret
pop
cltd
lock
mov
icebp
test
jne
mov
pop
popf
inc
pusha
popa
dec
daa
loope
and
or
lret
cmpsl
hlt
popf
xchg
push
xchg
cld
subb
mov
aad
lret
int3
jle
add
mov
inc
in
into
or
fadd
jb
mov
jbe
xor
xor
push
sub
mov
and
mov
dec
aas
dec
aad
cli
inc
jg
addb
push
stos
enter
sar
push
push
xor
adc
or
sub
outsb
fwait
xor
cmp
mov
dec
pop
shlb
inc
cs
gs
sbb
movsl
add
xchg
leave
xor
sub
push
pop
addb
jbe
daa
or
aam
pop
push
js
mov
inc
pop
roll
gs
and
pop
and
inc
push
shll
push
add
lock
and
mov
add
xchg
leave
inc
cmpsb
sub
in
add
dec
jg
inc
outsl
test
dec
dec
shr
cli
jbe
inc
mov
pop
shlb
scas
or
cmp
testb
inc
pop
push
popf
jl
pop
cmp
ljmp
add
mov
add
lds
sub
and
jne
cmc
pop
push
add
sbb
lock
mov
testl
mov
or
out
xlat
adc
loope
xchg
xor
test
adc
adc
bnd
into
cmp
ljmp
mov
inc
js
pop
imul
jae
rolb
jmp
ja
scas
rcrl
les
dec
mov
iret
mul
sahf
scas
cmpb
scas
add
dec
mov
sbb
mov
stos
dec
cltd
cmp
enter
cmc
cli
sub
rcll
cwtl
test
pushl
addr16
test
hlt
jnp
andl
int
test
imull
enter
jge
fnsave
sub
cld
mov
fneni(8087
and
fiadds
cld
cwtl
push
test
add
lcall
jl
or
cmc
imul
xor
in
sahf
sti
push
les
pop
pop
pop
aam
inc
jge
cmp
bound
inc
dec
js
push
push
pop
cmp
sub
dec
das
fmuls
icebp
rclb
xor
insl
rorb
jl
dec
out
add
shrl
test
adc
mov
inc
mov
xchg
pusha
xchg
rcrl
xorb
idivl
xor
roll
fsubrl
mov
addb
mov
fistpll
jg
inc
enter
shll
sti
mov
pop
cld
ret
call
xchg
pop
popf
pop
outsb
dec
lahf
mov
fadds
enter
sti
dec
sub
xor
fadds
inc
icebp
push
jnp
cmp
pop
aas
sub
divl
jne
negl
push
and
mov
outsb
cmpsl
add
pop
jbe
xorl
cs
out
loope
test
push
sub
hlt
out
lret
arpl
sar
jnp
mov
out
mov
fildll
cs
and
jbe
cmpsb
cmpsl
mov
mov
lods
int
add
xchg
inc
xlat
dec
or
sub
jb
xchg
test
clc
lds
fcmovne
dec
jl
pop
rolb
jl
lods
jne
xor
sbb
cmp
add
cmp
jne
insl
fcmovnu
and
mov
in
movsl
xchg
fisubl
in
mov
xchg
loope
ficoms
sub
pop
inc
jmp
and
sub
jbe
cs
fbld
jo
mov
sub
pop
add
add
leave
loope
dec
jne
hlt
repz
movsl
cli
fists
adc
push
jl
dec
pusha
lret
into
jne
int
mov
inc
mov
cmp
inc
pop
shll
pushw
cmc
nop
shlb
jge
vunpckhpd
sbb
push
sarl
imul
adc
xor
add
js
call
and
push
movsb
xor
pop
sub
jbe
icebp
cmp
jne
jo
inc
imul
testl
add
les
stc
xchg
adc
add
adc
mov
add
mov
cmp
or
fnstsw
imul
dec
sti
add
sbb
cmpps
cmp
push
jecxz
dec
data16
xchg
in
push
push
shr
pop
mov
sub
push
insl
mov
push
nop
xor
add
es
insl
fs
in
sub
jnp
jne
push
mov
test
dec
cmp
call
shlb
mov
lods
dec
mov
push
mov
ret
into
int3
cmpsl
sbb
jne
test
jmp
mov
and
fs
fcomp
and
pop
fwait
and
push
fistl
nop
mov
pop
add
out
cli
dec
in
sub
or
or
xchg
hlt
xlat
inc
and
sub
pusha
sti
aam
arpl
push
xor
lea
movsb
jp
fadd
xchg
jle
mov
xorl
mov
scas
add
int3
rorw
outsl
sbbb
rol
xchg
test
subb
stc
dec
adc
inc
xor
mov
in
int
jne
adc
and
mov
add
lock
sahf
movsl
xchg
in
add
addl
int
loop
pop
and
test
sbb
cld
jle
ret
jne
movsl
cmpsb
xorb
xchg
stc
addl
mov
sub
mov
sti
sub
push
insb
add
addr16
out
or
fdivrl
mov
les
pushf
fimull
imul
fucomp
fdivs
jmp
add
aas
hlt
push
mov
cmp
scas
or
cs
nop
stos
test
and
and
push
push
push
mov
subl
into
mov
dec
lret
jbe
cmp
lods
loopne
fbld
fildll
mov
push
sub
mov
aad
jl
hlt
sub
ljmp
pop
inc
inc
cli
mov
xchg
das
sar
adc
xorl
insb
push
in
in
jns
or
icebp
fldcw
int3
push
mov
gs
shlb
lahf
fdivl
push
hlt
mov
add
addr16
jnp
out
xor
daa
sbb
stos
push
addr16
add
adc
movq
test
sub
inc
aas
pusha
xor
pop
sti
pusha
pop
loop
jns
mov
and
xchg
jg
push
pop
cmp
cmp
cmp
aam
push
ret
fildl
lahf
pusha
gs
test
push
jl
sub
push
jbe
push
and
and
subpd
aam
dec
mov
sti
ljmp
loop
mov
add
scas
rolb
cli
pop
jnp
push
jne
push
loopne
notb
inc
stc
jae
sbb
xchg
wrmsr
movsl
das
ret
and
lcall
dec
loope
pop
fnstcw
jecxz
sub
inc
inc
cmp
sbb
pop
lcall
or
hlt
test
mov
push
xchg
movsl
push
push
push
ljmp
push
notl
cli
hlt
call
out
mov
test
jae
sbb
mov
sti
jo
scas
cld
adc
xor
adc
aas
pusha
rcll
jnp
and
sbb
xchg
movsl
jmp
mov
mov
cmp
mov
movsb
adcb
jno
mov
mov
stos
nop
mov
cmp
jne
pop
out
or
dec
es
roll
je
cmp
jae
inc
pop
sti
addl
xchg
aas
jmp
pushf
push
mov
sbb
jge
orb
dec
scas
lds
mov
mov
lods
mov
sub
xor
add
pop
pop
in
sub
int3
rcrl
adc
addl
mov
bound
lods
mov
in
ret
add
xor
sarl
dec
jg
fistl
mov
ss
jne
cmp
dec
and
pop
cmpsl
jl
inc
stos
movsl
push
addr16
ds
and
mov
jbe
add
lds
stos
into
subl
cmc
scas
movsl
mov
push
cmpsl
mov
pop
mov
xchg
jp
push
arpl
add
and
fiadds
aas
sbbl
xor
pop
insl
jnp
movsl
fwait
push
test
jno
lods
lods
mov
cli
hlt
daa
sub
xor
xchg
push
push
mov
or
mov
add
jnp
sahf
pop
int
push
repz
subl
pusha
xchg
test
jle
pop
push
in
adc
sub
pop
stc
push
movsb
sarb
mov
mov
xlat
cltd
inc
adc
xchg
push
mov
mov
push
and
add
stc
mov
pop
inc
xor
or
jo
out
lods
frstor
dec
or
inc
add
dec
popl
mov
adc
scas
mov
push
mov
fst
enter
inc
mov
and
cmp
xchg
inc
fadds
xchg
jnp
test
jne
sub
sbb
fmul
sub
movsl
dec
aad
xchg
mov
ds
add
test
push
jmp
and
push
add
pop
lahf
jmp
iret
loopne
fmull
movsb
mov
test
add
fdivs
lea
adc
leave
imul
out
fcomp
jns
outsb
jge
jge
rclb
pop
xor
js
out
lock
jbe
or
pop
or
test
lods
or
fidivrs
mov
mov
xor
jne
push
pop
test
mov
mov
adc
mov
cld
out
cmp
in
pop
scas
mov
scas
in
sub
xchg
mov
les
lahf
shrl
stc
jl
cmp
jge
or
leave
bound
dec
fistps
and
decb
mov
jg
enter
mov
adc
loopne
pop
andl
push
imul
incl
or
mov
adc
ja
sub
repnz
movsb
repnz
dec
mov
jl
cmp
or
lret
pop
mov
xabort
push
mov
push
das
pop
jecxz
mov
call
xor
out
mov
add
sub
arpl
icebp
jns
mov
ljmp
and
stos
jo
lds
pcmpeqb
arpl
enter
out
cmc
mov
mov
adc
pop
aam
xchg
mov
sarl
cwtl
sub
pop
add
xchg
inc
inc
adc
inc
add
es
icebp
pop
xor
movsb
test
insb
jne
mov
aaa
pop
fs
xchg
arpl
fiadds
push
call
hlt
mov
leave
dec
or
or
mov
fldt
je
mov
imul
js
xor
add
jmp
lods
xchg
and
mov
jno
lock
ss
mov
jl
sub
lods
mov
pop
jb
add
push
cld
inc
push
aas
fsubrs
cmp
inc
rorl
cmp
and
jl
inc
into
stc
pop
mov
repz
lahf
cltd
and
les
jmp
rorl
xchg
xchg
cwtl
inc
jns
cmp
inc
xor
mov
pop
inc
pop
adc
lret
movsb
adcb
out
hlt
shlb
shrl
cmp
xchg
dec
loop
mov
stos
pop
js
mov
clc
xchg
or
das
or
push
and
pop
sub
movsl
shrb
movsl
movsl
jne
and
fxch
daa
sbb
pop
out
mov
andnps
sub
sub
sub
mov
and
xchg
test
jbe
shlb
pop
in
mov
out
xor
out
mov
ret
inc
jl
mov
ret
fdivrs
pop
jl
repz
das
inc
mov
dec
enter
push
fisttpl
and
mov
call
dec
dec
aam
pop
into
dec
jmp
mov
push
dec
add
mov
mov
nop
mov
hlt
adc
test
mov
das
jmp
cmp
ljmp
mov
hlt
pop
mov
adc
push
jne
mov
jbe
sti
dec
jnp
cmp
xchg
pmaxub
loop
arpl
enter
add
test
pop
adc
push
jnp
stc
mov
mov
shl
loop
outsl
out
movsb
fsubl
add
stc
cmp
inc
or
imul
pop
pop
mov
xor
cmp
fadds
das
adc
lods
pop
jno
negb
repnz
cwtl
dec
jo
push
ret
add
fnstenv
or
aam
cs
mov
sbb
pushf
xchg
lock
sub
cmp
add
mov
jmp
aam
mov
or
dec
cmp
in
sarb
or
and
mov
mov
dec
leave
fwait
sub
jo
jg
add
cli
push
lods
fmull
lretw
std
testl
mov
and
sbb
stos
xchg
stos
mov
pop
or
mov
add
aaa
mov
pop
sub
fadd
call
add
cwtl
xlat
sbb
pop
cmp
frstor
pop
scas
loopne
xchg
sbb
pop
iret
call
test
or
leave
std
inc
adc
test
hlt
sbb
loope
xor
add
repz
fcmovb
mov
push
cld
add
cli
int3
sbb
sbb
mov
mov
jge,pt
mov
out
xor
dec
cwtl
or
xor
add
aas
leave
jl
fldenv
pop
fcoms
mov
mov
xchg
jae
add
mov
loope
ss
mov
sti
add
shr
jne
jge
add
add
insb
js
cmp
add
rolb
lock
loopne
mov
lea
xchg
xor
inc
repz
pop
loopne
xchg
scas
jne
cs
shrb
adcb
jne
test
dec
loop
pop
mov
movsl
cmp
js
push
cli
xchg
mov
push
ret
dec
rclb
sub
imul
ljmp
mov
enter
pop
lods
pop
ss
inc
ds
mov
inc
cmp
mov
repnz
lret
adc
adc
cmc
adc
mov
dec
mov
or
cmp
cmp
dec
gs
inc
pop
and
test
sbb
xlat
icebp
cwtl
dec
lods
or
mov
xchg
push
inc
cld
cld
repnz
jle
sbb
jge
jne
clc
pushl
enter
cmpsb
iret
add
int3
loopne
bnd
insl
add
rcrl
sub
mov
fiaddl
inc
sbb
std
xor
in
jmp
add
mov
and
push
xchg
push
cmc
jl
cltd
repnz
sub
cmc
xchg
ljmp
ja
mov
movsb
and
lods
fiaddl
shlb
add
stos
push
enter
add
lret
mov
jle
add
repz
outsb
inc
jne
cltd
xlat
push
pushf
lahf
out
push
xor
mov
adc
dec
push
mov
xchg
jae
fwait
enter
scas
adc
xchg
rcrl
mov
mov
imul
add
mov
aad
stos
cmpsl
pop
les
jne
jmp
fwait
or
and
cmp
fwait
scas
dec
inc
inc
cwtl
cli
inc
test
cmpsl
jge
mov
repz
lret
xchg
pusha
mov
aas
test
js
jle
mov
mov
fld
movsl
mov
mov
fisttps
inc
out
dec
mov
notb
adcl
mov
lea
xlat
adc
pushf
mov
add
push
dec
jl
add
jmp
fadds
and
mov
imul
add
jb
mov
cmpsl
adc
pop
adcl
enter
xor
flds
push
sar
inc
adc
rcr
xor
xlat
push
jb
xchg
cmp
mov
inc
xor
pop
fdivl
mov
or
mov
imul
inc
pusha
std
xchg
mov
lcall
add
loopne
js
jb
lret
jnp
sbb
cmpsl
sub
ljmpw
repnz
lods
xchg
mov
sub
movsl
adc
cli
call
pop
popa
mov
dec
movsl
andb
hlt
sbb
pushf
fcoml
adc
cmpsl
cmpsb
dec
or
enter
scas
mov
cld
mov
dec
push
es
outsl
dec
cwtl
push
push
lcall
mov
jle
push
jle
cmpsb
pop
push
dec
xchg
or
es
adc
imul
ljmp
fsubrs
jge
lods
push
push
fadds
mov
pop
pop
and
dec
adc
repz
incb
jne
in
pop
sti
imul
jmp
repnz
xchg
xchg
inc
mov
lcall
insl
cmp
faddl
jg
dec
out
ret
mov
mov
push
test
into
push
adc
stos
dec
add
xchg
inc
cli
push
jle
pop
jmp
divl
jle
nop
xorb
pop
mov
jl
pop
sub
enter
les
rorb
or
xor
nop
jge
or
lds
inc
stos
int3
mov
sub
pop
jbe
pop
fcoml
pop
xchg
sbb
xor
lds
fcmove
mov
inc
hlt
outsb
sbb
stc
jmp
nop
je
dec
stos
fs
ds
mov
jnp
mov
mov
movl
pop
sarb
je
daa
adc
xchg
popa
mov
out
test
cmp
enter
cmpsl
mov
data16
xchg
cmc
mov
sbbl
mov
pop
movl
aad
add
sbbl
dec
inc
lret
loope
cmp
ret
insb
dec
fists
icebp
js
mov
fdivs
fisttps
repz
adc
inc
aas
dec
ja
cwtl
xchg
je
sub
push
dec
test
xor
fbld
or
aad
hlt
popf
call
mov
int3
adc
adc
scas
add
mov
mov
cmp
addr16
stos
adc
das
hlt
xchg
sar
stos
pop
mov
stos
fwait
or
push
ror
xchg
cmpsb
andl
mov
add
test
pop
dec
cmpsb
ret
lret
stos
or
jl
inc
jbe
cmp
jle
jb
and
cs
loopne
popf
adcl
rcr
push
pop
mov
clc
mov
push
nop
cmpsb
adc
push
mov
mov
popa
xchg
popf
inc
cmpsb
aas
or
xchg
es
call
pop
jl
cmpsb
push
iret
push
insl
cmp
subb
push
jne
xor
inc
xchg
in
rorb
out
clc
mov
xor
fs
mov
sbb
je
nop
stos
cs
or
sbb
aad
cmpl
incb
jns
pop
xchg
shlb
jne
imul
es
scas
imul
jne
mov
test
leave
aam
and
shrb
inc
mov
into
test
test
xchg
xor
call
ret
jae
inc
into
loopne
rolb
cmpsl
les
cmp
test
ss
je
cmpsl
jmp
or
scas
into
push
loope
pop
loope
xchg
ret
add
mov
pop
jo
cmp
es
push
jle
add
shlb
or
xorb
cltd
mov
cmp
xor
mov
inc
xor
jae
pushf
inc
cmpsl
xchg
mov
add
inc
adc
cmp
nop
lcall
push
hlt
gs
shrd
fsubr
lods
outsb
fsubs
jnp
jb
cld
ror
and
xchg
sbb
push
dec
cmpsl
inc
mov
cld
sbb
ljmp
pop
arpl
cwtl
add
shll
mov
cmpsb
cs
adc
adc
hlt
inc
cltd
insl
add
xchg
addb
and
dec
jo
insl
push
jp
arpl
mov
inc
mov
xor
cmpsb
inc
shlb
inc
insl
mov
push
add
rcll
lahf
add
lock
push
fildl
pop
pop
rol
imul
jle
jl
mov
adc
mov
negl
lret
mov
sub
jmp
outsb
mov
cmpsb
push
bound
cmp
js
add
popa
jae
daa
and
mov
push
ret
cltd
hlt
dec
add
out
into
sti
imul
subb
out
inc
sub
jmp
pop
jle
aaa
xchg
pop
hlt
iret
adc
dec
mov
imul
or
sbb
adc
or
imul
inc
int3
fcompl
sub
xor
lret
shlb
sub
cli
add
add
loop
call
mov
es
dec
das
cwtl
pop
jne
push
loope
xor
lahf
push
sahf
test
and
imul
ja
sahf
aad
popf
jge
subl
push
or
cwtl
adc
xchg
int
les
pushf
and
shll
add
repnz
out
das
test
es
idiv
and
adc
xchg
loop
inc
xchg
pop
lods
cmp
push
hlt
sahf
sub
call
dec
push
inc
mov
xchg
ftst
mov
cmp
bound
mov
mov
jne
and
stc
pop
mov
mov
out
mov
popf
int3
adc
mov
mov
jne
imul
add
rolb
inc
inc
test
testb
fnsave
push
and
cld
jmp
pusha
decl
jle
sahf
in
pop
dec
pop
xor
sub
xchg
lds
cmp
testl
add
lret
sub
in
sub
std
xchg
imul
ds
pop
jne
rorb
xor
jae
pop
fsubrp
xlat
inc
stos
xor
mov
imul
mov
mov
add
and
std
jae
mov
es
loopne
hlt
mov
arpl
inc
or
dec
xchg
jo
fisttpll
test
push
or
cmp
xor
int3
std
inc
jae
mov
aas
cs
repz
mov
jp
inc
stos
mov
in
loope
lods
push
das
cli
enter
or
rorb
jae
sbb
push
fwait
loope
mov
mov
xchg
sub
xor
jl
imul
es
dec
fstl
stc
cmpsl
cmp
adc
xlat
popa
lret
push
jae
cmp
push
enter
jae
mov
add
pop
dec
mov
cmp
cmpl
test
sbb
mov
imul
cli
mov
scas
repz
adcl
push
hlt
das
inc
jmp
cs
int3
pop
rclb
adc
or
xor
mov
mov
out
push
nop
pusha
imul
les
mov
adc
inc
sbb
pop
jl
sub
gs
dec
and
xchg
sub
xchg
mull
aam
xchg
inc
mov
leave
fs
in
int
add
sti
push
into
dec
mov
int3
pop
and
dec
mov
and
test
add
in
mov
rcll
aad
or
fisttpll
sub
in
in
insb
addr16
nop
es
mov
test
and
xchg
push
pusha
icebp
or
fiaddl
cmp
and
ftst
mov
pop
icebp
mov
jge
dec
mov
test
lea
cmp
ss
hlt
mov
and
jbe
enter
fisttpl
ret
push
cld
jne
mov
inc
add
inc
rcrb
lods
ljmp
movsb
pop
and
xchg
cs
push
mov
push
nop
std
cmpsb
hlt
or
ret
fxch
jmp
int
mov
mov
xor
push
push
dec
test
ret
nop
into
cmp
mov
xchg
xchg
sub
hlt
xchg
jno
js
xchg
jns
test
and
mov
cmp
out
and
add
fs
pop
mov
inc
jb
mov
inc
in
lods
aad
push
fimuls
xchg
jmp
jbe
mov
cwtl
cmpsl
sub
mov
mov
pusha
mov
ljmp
stos
mov
bound
push
lods
inc
mov
loop
test
mov
roll
dec
pause
and
jg
leave
clc
sub
std
lea
sti
das
and
cwtl
movsb
je
mov
rcrl
cmpb
sbb
in
imul
outsb
fsts
xchg
jo
adc
adc
std
add
mov
xor
cmpsb
out
cli
and
lods
sbb
loope
mov
loopne
xorb
imul
movsl
imul
xchg
shlb
lock
or
push
fdivr
out
pusha
adc
push
scas
add
jne
inc
cmpl
loope
hlt
sub
jnp
lds
mov
data16
push
jnp
push
jno
xor
adc
inc
std
adc
add
push
jne
loop
mov
repnz
cmp
and
push
push
outsb
xchg
bswap
sbb
sub
jecxz
in
aaa
mov
out
pop
cmp
subl
or
lods
mov
and
ljmp
mov
jp
lock
mov
in
lahf
xchg
xchg
mov
dec
push
jg
cli
pop
xchg
push
into
pop
loopne
test
cmpsl
pop
mulb
and
jns
outsb
negb
mov
mov
aaa
or
push
aad
pusha
icebp
in
inc
stos
push
aad
adc
mov
lahf
pop
mov
pushf
addb
ljmp
out
mov
into
sub
pop
inc
scas
lahf
inc
fwait
cwtl
pusha
and
lods
out
pop
add
or
push
sti
lahf
orl
bound
inc
sub
ficomps
and
cmp
bound
loop
or
dec
jne
cmp
aas
lea
xor
lret
push
std
rcrl
cmpsb
xchg
outsl
fucom
inc
ficoms
xchg
lods
fiaddl
ret
jl
repz
test
mov
sbb
lahf
test
xchg
or
mov
inc
xor
push
push
cmp
adc
mov
in
jg
mov
scas
xchg
cmpsb
imul
loopne
mov
pushf
shll
mov
pop
aaa
pop
lods
cmc
dec
or
cmpsl
xor
inc
cmp
jae
sahf
insb
adc
jnp
pop
imul
adc
add
jmp
repnz
fisttps
xchg
stos
cmp
or
hlt
push
jle
orb
clc
mov
cltd
or
movsl
sahf
cmp
pop
cld
insb
mov
pusha
scas
add
pop
mov
push
cmp
adc
adc
mov
pop
flds
inc
addl
push
inc
enter
push
dec
fldcw
shlb
push
adc
mov
fildll
pop
cwtl
dec
jne
scas
sbb
fsubrl
adc
xchg
stc
sahf
sub
sub
aaa
leave
dec
adc
test
movsl
push
sub
lahf
aam
inc
enter
in
adcb
pop
sub
mov
bound
ja
ret
adc
xchg
fsubs
shrl
xlat
imul
addl
pushf
push
out
aas
enter
sarb
mov
dec
jge
jno
sbb
fldl
das
pop
and
pushf
mov
jae
pusha
enter
leave
or
add
shr
or
push
gs
into
out
xchg
jmp
addr16
rol
jmp
mov
hlt
test
jg
sahf
jbe
scas
cmpsb
fidivl
cld
dec
sbb
push
pushl
rolb
push
pop
jno
rcll
dec
add
jne
pop
test
pusha
in
arpl
fdiv
mov
xchg
jge
dec
mov
int
enter
pop
jns
in
push
or
test
dec
push
adc
xor
add
in
add
push
rcll
ja
aas
stos
sbb
bound
xorl
popa
fsubrl
mov
test
stc
and
insl
push
out
flds
xchg
shlb
xchg
jl
in
loopne
mov
sahf
scas
and
sti
gs
or
fsubr
popa
or
sti
icebp
jmp
pop
or
fwait
jl
in
dec
shll
lcall
enter
pop
in
push
fisttpl
adc
hlt
repnz
cli
outsb
sub
shll
aas
mov
into
pushf
std
pop
mov
xchg
sti
lock
sbbb
inc
mov
movsb
es
test
pop
les
pop
mov
leave
fdivl
movsb
mov
xchg
cmpsl
test
jl
insb
adc
lods
mov
shrl
mov
adc
stos
inc
xchg
push
xchg
aas
or
jno
jns
movsb
jne
xor
sbb
add
aad
fidivs
mov
inc
test
add
fisubl
jns
adc
in
jl
dec
xlat
push
cmpsb
sub
aas
mov
cs
jecxz
in
inc
push
cmpl
aad
dec
cwtl
in
inc
dec
imul
push
push
out
mov
das
pop
xchg
xor
pcmpeqw
xchg
mov
mov
jmp
jnp
fsts
mov
rolb
dec
push
mov
in
mov
imul
adc
xchg
mov
mov
mov
add
push
cs
xchg
sbb
fstpl
aaa
rcrb
js
aad
nop
fs
pop
or
pushf
rorl
jle
dec
inc
or
cmpsl
ss
shll
cmp
mov
in
js
adc
insb
movsb
sbb
bound
pop
out
jecxz
pop
stos
xchg
pusha
rorb
xorl
scas
push
sahf
or
frstor
mov
pop
xlat
push
loope
inc
cmp
dec
xchg
sbb
inc
mov
xor
imul
bound
sti
mov
and
xor
mov
jg
int3
push
pop
fldl
mov
ret
sbb
sub
pop
push
popa
hlt
stc
xchg
jge
mov
xchg
cpuid
cmp
rcrl
roll
xorb
popa
fisubrl
pop
sbb
je
mov
out
jge
lcall
nop
cmp
ja
or
fsubrl
jne
clc
dec
shll
hlt
pop
mov
mov
cmpsl
in
pop
das
fisttpll
jne
jle
fbstp
jns
pop
std
test
mov
push
jecxz
dec
loope
frstor
shll
sarb
push
stos
rolb
push
insl
mov
jl
les
std
clc
inc
mov
fnstcw
sti
push
xchg
into
and
sub
mov
out
adc
jle
mov
inc
mov
stc
xchg
sarl
into
push
in
clc
inc
pushf
pop
jne
aas
jp
sbb
mov
mov
inc
cmp
lods
aad
sbb
pop
fwait
lods
cmc
xor
mov
dec
inc
xchg
sub
jo
xchg
rcll
or
out
js
xchg
sub
pop
inc
loope
shr
lret
popa
dec
test
sbb
xchg
aaa
fld
cmp
stos
dec
repz
push
mov
test
mov
mov
ljmp
stc
out
mov
ljmp
or
mov
adc
jb
push
stos
mov
cltd
sti
adc
push
cli
roll
mov
fcompl
lcall
adc
mov
mov
or
add
push
stos
aam
cmp
push
inc
jmp
lea
rolb
lods
in
popa
inc
test
mov
rorl
call
inc
mov
push
jecxz
andl
stos
rol
fldcw
pusha
cmp
jo
inc
cmp
loopne
xor
dec
jg
ja
or
jae
adc
pop
je
adc
enter
add
fldl
mov
pop
clc
sbbb
test
pop
xor
imul
and
inc
pop
push
xchg
inc
xchg
out
in
sub
movb
insb
mov
mov
movsb
sub
cwtl
xchg
shl
int
fidivrs
cld
jne
lret
add
lahf
or
dec
inc
mov
fcos
flds
mov
movsl
push
out
sub
inc
pushf
in
testl
lahf
pop
fsub
add
jno
or
dec
inc
and
and
sub
xchg
sub
xor
iret
mov
or
fistl
mov
filds
ljmp
adc
mov
pop
mov
dec
pop
insl
and
sbb
add
mov
lock
cmp
dec
dec
mov
nop
sub
cmpsl
push
ljmp
outsb
rcrb
shrb
ret
repnz
or
sub
sarb
pop
jmp
mov
xchg
xchg
xchg
jo
jns
test
push
inc
adc
push
loop
lret
ret
orl
or
jecxz
jle
fldt
jbe
cld
dec
cmp
xor
sahf
xchg
sbb
adc
pop
sbb
jmp
mov
mov
ds
ja
dec
mov
loop
pop
test
push
mov
mov
int3
mov
or
mov
pop
subb
int3
stos
hlt
sti
loope
enter
dec
cs
rol
int3
adc
decb
aaa
cmp
adc
pop
rclb
sub
rolb
dec
sbb
jbe
js
pause
mov
inc
pusha
mov
push
fwait
es
into
mov
add
add
loop
cld
icebp
nop
adc
cmc
cmpsl
mov
flds
fsubr
jg
add
jne
push
xchg
popl
inc
leave
sub
jge
insb
fistpl
fxch
movsb
mov
leave
jecxz
aam
xor
cmc
lds
rcr
add
jmp
shl
dec
adc
shll
cmc
ljmp
ljmp
sub
jmp
fcoms
out
sub
mov
ror
pop
sub
adc
add
ds
push
xchg
cs
inc
jle
movsb
ljmp
inc
mov
into
aas
sub
pusha
cmp
iret
jmp
in
popa
ret
rolb
stc
fcomip
or
rolb
stc
outsl
mov
sub
pop
jae
mov
inc
scas
lret
mov
into
cmpsb
scas
hlt
or
out
fisubl
adc
daa
mov
adc
xor
mov
inc
data16
mov
or
outsl
sahf
jnp
pop
push
movsl
fcompl
xchg
pop
jg
mov
lret
sbb
lods
gs
les
adc
inc
mov
jg
int3
or
jnp
icebp
insb
or
std
sub
cltd
sub
pop
push
test
cld
jns
hlt
xor
push
enter
lods
xlat
and
mov
xor
jb
jo
adc
std
jne
pop
mov
cli
cmp
lret
push
mov
xchg
stos
insl
xchg
xor
inc
ss
sub
int3
cli
imul
xor
xchg
roll
outsl
cwtl
cmp
nop
addr16
stc
ficoml
shrb
cmc
mov
cmp
jbe
fisubl
fstpl
gs
stos
mov
pop
mov
imulb
xchg
jne
test
loop
out
push
test
imul
xlat
dec
fxch
ljmp
jle
add
cmp
pop
dec
fdivs
cs
js
mov
push
nop
cld
mov
sahf
outsl
jno
es
sub
iret
inc
jg
mov
sbb
lahf
in
orl
ficompl
ret
cld
or
clc
cltd
or
sub
loopne
mov
pop
and
stc
inc
movsl
mov
insb
ljmp
xchg
pusha
cli
cmpsl
mov
data16
jb
mov
stos
jns
rolb
pushf
mov
xchg
pop
movsb
cli
daa
das
andl
movsb
fistpl
xchg
jno
fsubrs
lock
jmp
or
adc
push
leave
mov
add
sub
flds
subl
xor
div
mov
ja
outsl
lods
fdivl
cwtl
es
mov
fcoms
hlt
xchg
int
sub
xchg
sub
dec
jg
stos
xorl
flds
pusha
add
shll
xor
dec
frndint
jmp
jne
xor
jbe
lods
frstor
movsb
inc
ret
mov
cmc
lret
jae
ljmp
fcom
jecxz
and
pop
aam
sahf
shl
hlt
inc
push
and
dec
cmp
call
xlat
gs
hlt
aaa
xchg
lahf
push
or
pop
rorl
fsubs
jl
xchg
loopne
adc
mov
rcrl
sbb
faddp
pop
out
cwtl
jnp
movsl
add
and
cmpsl
add
dec
push
sbb
mov
out
jne
jmp
dec
jne
imul
push
and
adc
or
into
push
pop
icebp
sahf
std
pop
push
jp
cmpsb
add
fbld
pop
xchg
out
or
sbb
bound
in
inc
inc
xchg
aam
sar
sahf
arpl
mov
mov
inc
ds
add
push
or
pop
andb
fwait
test
cltd
loopne
out
jne
dec
arpl
enter
mov
jg
pop
adc
jmp
lock
or
jp
sub
aas
mov
int3
outsl
stos
test
pop
cld
and
icebp
nop
in
cmp
mov
mov
mov
scas
nop
fbld
jl
jnp
shlb
xor
xchg
ud2
outsb
pop
aas
push
add
mov
nop
fiaddl
xor
out
xor
inc
xor
fildll
mov
add
pusha
dec
dec
jbe
cmpsb
sbbb
push
test
std
dec
scas
cmpsb
lods
sub
rorl
sbb
add
fisubrs
ucomiss
mov
popa
pop
dec
mov
jp
sahf
mov
cltd
frstor
push
hlt
stc
mov
sti
pop
ds
inc
push
adc
enter
mov
or
inc
repnz
sbb
loope
xchg
sub
clc
clc
sub
cbtw
sbb
inc
lods
xchg
jmp
loope
shl
movsl
rcrl
push
inc
xor
shlb
scas
mov
es
js
les
jno
add
popf
jbe
jge
jns
adc
dec
adc
lods
mov
inc
inc
inc
enter
dec
cmp
lods
repnz
xor
xor
sub
shrb
add
bound
xchg
rorb
pop
mov
inc
inc
test
cltd
popl
add
mov
hlt
sar
xchg
pusha
jno
mov
jg
mov
xor
and
or
lock
xchg
lahf
mov
cmpsb
test
inc
mov
sbbb
mov
pusha
xchg
mov
add
adc
fdivrp
lods
push
pop
mov
es
mov
inc
sahf
and
dec
out
hlt
dec
stos
je
mov
add
out
mull
add
pop
cmpsb
jno
imul
mov
lcall
test
orb
push
call
pop
hlt
imul
jle
test
inc
leave
xchg
cmp
or
testl
xchg
or
aas
mov
shl
popa
stc
sub
jg
addl
outsb
jnp
mov
sub
jecxz
sub
in
rcrb
mov
or
adc
xlat
icebp
cmpb
sahf
lock
xor
wrmsr
jmp
testb
add
int
xor
sub
pusha
fcomps
adc
sub
test
mulb
pusha
ljmp
add
shll
cmp
mov
dec
jae
mov
mov
or
sbb
clc
or
xchg
into
sbbl
hlt
pop
cmpsb
add
xchg
out
adc
sub
mov
daa
inc
jmp
inc
pop
inc
aam
dec
add
outsl
pusha
and
cmp
hlt
das
inc
inc
mov
dec
xchg
repz
or
fisubl
add
xchg
xchg
enter
xlat
mov
or
pop
out
movsb
movsl
sub
sub
pop
test
pop
or
jne
inc
jge
jbe
mov
mov
bound
in
jecxz
dec
inc
hlt
fdivs
std
jnp
mov
out
mov
pop
push
jne
shlb
mov
cwtl
and
sub
ffreep
enter
sub
test
in
mov
jae
addb
loopne
in
mov
mov
fadds
push
mov
movsl
push
push
cli
add
test
test
ret
inc
inc
and
or
sub
cwtl
xchg
std
negl
mov
out
enter
roll
out
out
aam
aad
pop
xor
add
dec
fisttpll
sub
or
in
and
add
movsl
and
mov
mov
push
mov
lret
lods
jecxz
sub
ret
push
mov
pop
sub
xor
adc
ljmp
mov
and
call
pop
sub
stos
int3
popf
aam
push
imulb
inc
mov
xchg
shl
aaa
mov
xchg
dec
inc
xlat
add
int3
cwtl
dec
xchg
stos
pop
push
add
insl
inc
jne
mov
adc
das
cli
paddw
mov
xchg
adc
fsubs
jno
or
inc
sbb
xchg
mov
stos
xlat
push
mov
mov
jl
int3
cmpb
mov
leave
repnz
mov
rolb
or
push
lods
cmp
and
cmp
lret
call
cs
cwtl
and
adc
xchg
nop
pop
jle
or
hlt
pop
dec
test
xchg
push
movsl
fucom
jp
inc
leave
pop
sbb
loop
jne
ret
inc
in
jl
cli
ret
push
add
mov
in
push
sub
inc
pop
loop
and
mov
jne
addb
int3
inc
cli
xchg
lods
inc
mov
loopne
mov
lret
cli
pop
shrb
xchg
dec
jge
push
lock
out
insb
iret
rorb
scas
out
push
das
aas
mov
and
aam
mov
add
ficoml
int
loopne
out
pop
addb
cmpsb
out
mov
and
add
in
imul
sub
out
mov
jne
jno
jge
add
fsts
sarb
push
sarb
inc
ljmp
sub
inc
ret
aad
push
add
or
pusha
jg
iret
dec
les
out
dec
nop
sbb
popa
ret
jo
add
sbb
test
pop
and
ljmp
mov
test
adc
sub
cmpsb
subl
add
pop
scas
mov
dec
in
add
and
xchg
insl
xor
mov
mov
hlt
sbb
orl
cs
adc
mov
or
jge
cmpsl
fstpl
push
clc
mov
and
mov
pusha
add
sub
pop
pop
add
addl
pop
mov
cmp
xor
loop
jg
pop
xchg
subb
xor
mov
push
xchg
mov
inc
push
push
inc
inc
in
xor
mov
ja
mov
into
scas
jl
in
adc
add
sub
push
jne
push
jge
jmp
gs
daa
mov
mov
push
adc
aas
mov
test
shlb
push
sbb
loop
sub
ja
mov
test
fdivr
sbb
mov
sti
jae
lcall
out
in
push
mov
push
sbb
arpl
push
lret
sub
ficoml
test
push
pusha
sbb
inc
sub
testl
lea
subb
cmp
cmp
daa
pop
imul
or
jae
and
cmp
shrl
addr16
rorb
ror
cltd
mov
and
mov
hlt
sarb
push
popf
lods
fimuls
or
and
push
enter
dec
in
into
pop
out
shll
xor
std
arpl
rcr
lret
push
out
mov
xchg
and
mov
loop
aaa
pop
push
cmpsl
xchg
shlb
xchg
mov
call
adc
xor
inc
jbe
fimuls
sbb
mov
adc
test
xchg
ja
sbb
popf
pusha
leave
sub
adc
mov
mov
dec
imul
or
mov
insl
push
lods
and
dec
sub
jecxz
int3
cmpsl
popl
lcall
mov
popa
add
push
scas
int3
push
sbb
outsl
jle
nop
and
mov
or
mov
jb
fsubrp
add
and
xchg
sbb
pop
stos
inc
pop
cli
add
add
mov
dec
rcrl
inc
pop
fcoms
cmpsb
imul
dec
xor
in
mov
inc
test
and
push
scas
jg
mov
mov
test
push
mov
ficoml
loope
in
aas
cmpsb
addl
les
pushf
adc
adc
cmp
outsl
xchg
push
lret
cmpsl
push
ja
cwtl
test
jmp
aad
mov
insb
divb
dec
sbb
cmp
sbb
inc
dec
stos
mov
xchg
js
cmp
loope
inc
mov
mov
ja
inc
lds
popl
mov
lret
repnz
loop
mov
push
in
sahf
mov
cli
jl
pop
ret
or
xor
and
adc
xchg
xchg
dec
inc
loopne
jne
into
shll
stos
enter
enter
sbbb
mov
sbb
outsl
jae
sar
cmpsl
push
pop
push
inc
xor
aas
imul
mov
mov
pushf
arpl
or
enter
xchg
jl
or
insl
pop
cmp
cmp
cmp
dec
js
jle
loop
xchg
int3
lcall
inc
loope
lods
stc
xchg
sbb
adc
or
movsl
loopne
leave
cmp
rorl
push
cltd
xchg
jle
hlt
out
jne
xor
fadd
push
xchg
mov
jmp
add
mov
cli
leave
lock
aam
mov
mov
stos
add
dec
in
mov
pusha
sub
cmpsl
btl
xor
movsl
jno
adc
les
andb
pop
cmp
lods
or
mov
clc
xor
stc
in
cwtl
sub
add
lds
pop
dec
bound
mov
fdivrs
xor
rcrl
dec
aas
stos
fnstcw
sub
push
out
sbbb
imul
lock
cmp
scas
hlt
out
xchg
loope
dec
mov
cli
mov
sbb
mov
test
inc
test
cli
hlt
mov
idiv
push
fldcw
mov
cmp
mov
stos
popf
inc
pusha
adc
cmp
icebp
out
jl
push
dec
cwtl
rcll
pop
adc
and
dec
cmc
ficoml
stc
dec
shl
cmp
lods
pop
gs
adc
add
adc
jnp
fidivl
in
roll
mov
jne
inc
adc
int3
cmc
arpl
push
cwtl
jmp
mov
mov
mov
in
jg
mov
xchg
sub
dec
int
es
sub
roll
test
lods
movsb
out
test
stos
in
ja
sub
and
shr
mov
jge
jmp
testb
test
shrd
sbbl
ror
test
inc
test
or
mov
xchg
data16
adc
fmull
int3
into
stos
inc
mov
stos
das
add
popf
imul
mov
mov
pop
in
mov
movsl
jle
arpl
push
test
lds
loope
mov
jg
jg
leave
add
cmp
lea
jecxz
mov
mov
cmp
aad
scas
mov
aam
and
notl
or
mov
mov
lcall
push
add
jecxz
negb
out
into
pop
inc
add
inc
negb
scas
jg
mov
and
movsl
fstp
and
mov
aad
or
rcll
xor
addr16
test
jne
mov
mov
arpl
fst
cmp
stos
lods
add
xchg
lret
add
sub
or
cwtl
test
int3
mov
out
jl
mov
or
push
movsl
and
mov
mov
inc
jl
enter
sbb
fcompl
push
movl
ds
pop
xchg
sbb
mov
and
push
stos
jmp
icebp
movsl
fistps
dec
loop
xchg
mov
sbb
mov
jo
popa
rolb
into
push
nop
out
sbb
ja
fcmovu
leave
cmpsl
push
and
mov
andl
gs
mov
addr16
add
push
push
sbb
add
in
cmp
mov
adc
cltd
imul
js
cmpsl
lret
pop
inc
xacquire
in
mov
mov
fistps
cmpsl
xchg
pop
mov
sahf
pusha
xchg
mov
fwait
jg
mov
test
nop
dec
sti
addb
adc
push
sarb
xor
cmc
lea
xchg
xchg
popa
adc
xor
sets
outsl
mov
fmull
jae
and
jne
and
inc
int
adc
and
add
mov
jne
xchg
inc
stos
sub
dec
cmp
int
testb
sub
mov
inc
repz
jnp
int3
xor
push
in
lock
loop
add
adc
sub
icebp
ret
mov
adc
ret
clc
push
daa
das
imul
adc
test
dec
std
pop
adc
mov
movsb
add
loopne
lahf
pop
inc
outsl
mov
iret
xchg
idivb
add
nop
or
test
jno
int3
aas
lahf
xorl
or
dec
jbe
cltd
mov
sub
cmp
gs
stos
xchg
inc
push
daa
or
jbe
nop
inc
scas
shr
das
sti
rol
sub
jmp
sbb
mov
roll
insl
hlt
jns
jg
xor
mov
jg
sub
clc
loop
fwait
aad
bound
ljmp
adc
stos
or
pop
add
arpl
ret
shll
ds
push
add
inc
lds
sbb
push
mov
xor
cmp
ljmp
ja
dec
xor
sbb
or
test
or
xchg
sbbb
data16
mov
fsubrl
push
xchg
sbb
enter
mov
xorb
cli
popf
fmul
push
into
test
xor
dec
rcrb
and
sti
mov
cmp
in
fmuls
das
pop
push
cld
and
jbe
std
int3
mov
popa
jne
fldenv
insb
inc
mov
mov
stos
jmp
add
hlt
divb
into
dec
aam
cmpsb
jb
sub
cltd
cmc
mov
or
sbb
mov
mov
push
xchg
loop
inc
jo
or
jne
fisttps
xlat
and
adc
cs
addl
es
loop
repz
imul
fldl
lahf
jne
ss
stos
sbbb
ds
mov
add
dec
stos
jmp
inc
pop
dec
mov
mov
mov
int3
adc
lods
ds
mov
addl
imul
mov
hlt
xor
jg
pop
sub
insb
lods
repz
fnsave
ja
sub
sub
stc
xchg
in
fstps
out
subl
mov
cmp
mul
pop
rorl
cmpsb
push
mov
xchg
shll
test
push
and
sub
gs
pop
or
mov
roll
ret
adc
inc
sbb
subb
roll
std
gs
insb
add
lock
cmp
cmp
es
mov
jno
inc
mov
lcall
xchg
test
cmp
lods
and
xchg
mov
inc
add
repz
cmpsb
push
popa
das
int
inc
negb
push
sbb
mov
push
fcoms
mov
test
test
and
cmc
xchg
xor
xchg
mov
adc
iret
call
insl
insb
pop
subb
fimuls
add
lret
insb
xchg
filds
daa
xor
outsb
test
fidivrl
lea
mov
dec
test
pop
mov
cmpsb
cmpsl
mov
movsb
dec
xor
sub
in
loopne
mov
xchg
mov
push
push
mov
es
pop
mov
bound
imul
push
or
subb
das
pusha
adc
xor
jle
dec
aaa
dec
es
in
enter
scas
add
shll
cltd
cmpsb
sub
out
sub
leave
add
sti
mov
xchg
iret
repz
add
jbe
mov
jg
imul
cmp
sub
dec
test
lahf
call
jo
xchg
mov
cmpsl
hlt
or
push
roll
int
sub
mov
or
xor
pop
inc
adc
hlt
push
dec
popf
lcall
test
pusha
sub
inc
in
cli
mov
das
dec
adc
xchg
pop
std
jp,pn
lea
scas
inc
jb
push
scas
out
jo
xor
cmp
ja
test
sarb
cwtl
fcoms
mov
adc
leave
jecxz
shlb
lahf
popa
or
and
outsl
jo
jns,pn
dec
into
xlat
jmp
push
mov
mov
mov
jmp
inc
out
xchg
mov
lods
mov
push
sbb
mov
push
push
cli
test
imul
add
jge
ret
or
pusha
dec
movsl
cmp
rorb
test
adc
push
cmp
rolb
call
mov
ss
les
insb
lock
dec
loope
test
mov
lock
xchg
add
xchg
loopne
fwait
cmp
mov
repz
sub
scas
adc
stc
mov
not
imul
movsl
flds
leave
pop
ret
pop
and
jmp
and
ja
add
xchg
lret
jg
rcr
incb
cmpsl
fwait
jmp
test
and
sbb
insl
cmp
push
dec
or
outsl
lret
rorl
xchg
push
je
insl
jmp
aas
lea
adcb
jne
jge
test
push
ret
jecxz
xchg
xlat
sub
mov
add
inc
mov
rcr
fstpl
inc
and
push
inc
sbb
cmp
rcrl
add
enter
insl
std
dec
push
jne
mov
rcrb
cld
outsl
outsl
lea
mov
rolb
jo
xchg
mov
pop
inc
push
cmp
enter
add
xchg
shrb
pop
jg
xchg
or
cmp
mov
mov
jmp
mov
jo
adc
xchg
cli
mov
les
sbb
or
je
xchg
mov
jno
dec
aas
or
sub
cs
push
lret
mov
sub
sbb
mov
inc
mov
sub
xchg
fcompl
push
sub
jp
cli
push
and
andl
mov
movsb
and
fsubs
popa
xchg
mov
sub
insb
sbb
test
mov
mov
add
jne
xlat
hlt
cli
add
add
mov
out
xor
lods
movsl
adc
jg
imul
jo
testb
shll
mov
enter
jns
dec
mov
mov
fmuls
ss
rorb
test
jp
fnstenv
push
xor
or
sahf
xchg
stos
mov
stos
mov
pop
mov
push
mov
adc
icebp
ds
or
cmpb
popa
add
mov
cmp
inc
test
mov
stos
clc
arpl
subb
mov
shl
arpl
cmpsl
popl
adc
mov
xchg
into
jmp
add
xchg
dec
xlat
mov
inc
ret
lock
mov
add
sbb
or
in
push
mov
xchg
jns
test
dec
popf
xchg
pushf
xchg
sub
stos
icebp
push
icebp
and
daa
jbe
cmp
add
lock
cmp
fists
test
pop
sub
fcoms
cmpb
xchg
xchg
inc
xchg
adc
movsl
in
xor
add
dec
push
sub
mov
mov
fstpl
sbb
xchg
xchg
sahf
push
add
scas
cli
dec
and
sahf
pop
mov
movsb
adc
jge
inc
mov
xchg
in
das
int
orl
jne
fcomi
push
rclb
js
pop
mov
mov
fnstcw
lea
jne
add
pop
xor
ret
pop
push
cmpl
movsb
lods
mov
mov
pop
xchg
jmp
fcmove
ja
idivb
es
cmp
add
jmp
inc
jne
clc
mov
sahf
push
sub
xchg
lcall
adc
stos
or
jne
out
dec
mov
push
mov
and
add
stos
mov
adc
inc
sub
loopne
push
dec
and
pop
lods
lods
or
addr16
sub
jne
jb
sbb
movsb
sbbb
jnp
jae
mov
pop
into
push
dec
fidivs
cld
and
mov
xchg
rol
outsl
mov
gs
mov
mov
iret
push
cmc
pop
call
lahf
fisttpl
cmp
insb
insl
jne
sub
jmp
inc
ficoml
rclb
lock
and
mov
mov
cwtl
out
xchg
pop
ret
mov
test
sahf
shlb
pop
testl
mov
dec
bound
xlat
jne
xlat
sarl
adc
pop
fdivrs
jg
ror
pop
add
mov
bound
ja
ficoms
inc
loopne
fs
movsl
pop
loop
roll
cltd
aad
mov
cmp
cltd
inc
test
jge
adc
inc
add
sbb
insl
es
int3
sub
jne
push
out
inc
movsb
outsl
mov
andb
xchg
lods
pop
mov
inc
lret
hlt
sbb
aad
pop
stos
fucomi
push
shl
xchg
icebp
xor
adc
stos
dec
cmc
mov
hlt
sbb
cmpsb
test
inc
push
into
jnp
icebp
mov
pop
push
dec
out
jmp
xchg
or
fsub
lea
push
push
stos
sar
orl
mov
aam
inc
hlt
adc
cltd
pop
outsl
adc
xchg
dec
mov
jno
mov
movsl
mov
dec
pop
movsb
xor
dec
jne
adc
pushf
sbb
das
pop
inc
jae
and
nop
imul
jne
mov
pop
cmp
cli
leave
scas
stos
shl
dec
sbb
loope
rcrb
pop
mov
xorb
stos
adc
adc
stc
mov
sub
jno
popl
out
mov
pop
mov
add
pop
cli
cmp
out
mov
sti
sbb
push
mov
nop
pop
mov
adcl
lcall
jg
pop
es
sub
out
adc
shl
sti
insb
add
in
push
mov
dec
pop
std
adc
inc
xor
std
bnd
xchg
xor
add
sbb
icebp
or
or
hlt
pop
daa
fsubrp
dec
les
lock
test
icebp
inc
inc
xchg
rcrl
aad
into
fmul
inc
mov
push
ret
hlt
insb
bound
jge
ljmp
ss
pop
out
xchg
pop
call
sub
ljmp
fidivl
aam
in
mov
fisttpll
and
dec
xor
loope
je
xchg
testl
or
sub
push
cwtl
mov
adc
or
inc
stc
fists
mov
dec
sub
imul
out
push
aam
cmc
mov
add
in
mov
mov
mov
outsl
mov
clc
subl
in
mov
pushf
add
mov
pop
inc
out
mov
sahf
outsb
mov
hlt
int3
in
push
and
jmp
xor
sub
add
cld
out
into
pop
cmp
add
cmpsl
les
pop
hlt
fmul
cmp
sbb
lds
out
sbb
mov
push
mov
xchg
movsb
cld
jmp
sub
jne
sub
adc
cmp
in
out
jno
mov
mov
inc
xchg
cltd
adc
and
shll
andl
rolb
sbb
lds
xchg
pop
inc
sbb
dec
test
xor
ljmp
mov
cltd
sub
outsl
mov
dec
push
lcall
jno
xchg
lock
push
or
mov
rclb
mov
repnz
sbb
jo
mov
roll
xor
test
lret
out
test
inc
jp
cwtl
hlt
cwtl
mov
aam
mov
mov
dec
test
mov
cmpsl
add
jne
jecxz
daa
push
pushf
loopne
es
iret
popa
lods
mov
test
in
inc
push
and
aad
jb
cmpsl
cld
mov
jbe
out
adc
sahf
sub
ljmp
xor
xorl
hlt
lret
add
pop
sbb
lret
clc
fwait
mov
xorb
cltd
stos
pushf
rcll
gs
and
data16
pop
jp
xor
jle
outsb
outsl
and
ficoml
xor
xchg
push
add
in
test
test
gs
mov
faddl
sub
ss
cmpb
pushf
rol
fcoml
lds
popa
jle
mov
inc
add
enter
sbb
lods
nop
sbb
pop
sbb
imul
std
loopne
mov
std
mov
dec
into
push
inc
cmp
into
and
lods
cmpsl
in
cmpsl
ffree
and
mov
andb
mov
test
sub
pop
fsubl
hlt
insb
xor
add
std
and
push
cmpsb
xchg
dec
aas
adc
jne
popf
add
aad
xchg
scas
jnp
hlt
scas
jb
xchg
stos
arpl
and
sub
roll
sub
icebp
xorl
or
adc
add
es
and
fsubrs
add
xor
pop
orb
in
cmpsl
xor
mov
shll
movsl
xlat
dec
push
fs
bound
mov
movsl
ret
cwtl
out
hlt
inc
sub
pushf
lods
movsl
xchg
icebp
inc
sahf
sub
jno
pop
sbb
jb
gs
int3
mov
sub
xchg
decl
mov
std
cmpsl
inc
cmc
scas
stc
xor
push
scas
push
xor
or
lock
mov
movsb
adc
mov
stc
scas
and
xchg
pop
push
flds
inc
stos
out
jl
cltd
popa
inc
adc
call
mov
push
xor
imul
jnp
orl
enter
insl
mov
mov
jne
push
jg
leave
arpl
push
xchg
in
pushf
out
adc
call
std
or
call
popa
hlt
mov
ljmp
das
or
xchg
jge
and
jb
clc
dec
xchg
add
in
and
int3
adc
lods
pop
dec
add
jne
sbb
pop
cmp
jnp
add
mov
ficomps
add
mov
xor
mov
lods
out
sub
mov
mov
jle
ret
dec
jg
shll
cwtl
es
enter
or
shll
enter
inc
jmp
jge
push
rcll
lcall
movsl
lret
clc
mov
adc
add
imul
fnsave
xor
shll
mov
mov
sub
aas
add
stos
ret
and
xchg
push
jne
jne
jno
test
xchg
mov
pop
insl
mov
cmp
sub
cmpsb
mov
mov
and
test
mov
fistpl
pop
and
fsts
imul
fstpt
loopne
jns
mov
xchg
pusha
jnp
push
shlb
add
loopne
imul
or
dec
call
leave
lods
adc
mov
jl
lods
xor
or
jmp
xchg
popf
repnz
rorb
dec
inc
lods
jecxz
sbbb
ds
out
cmpl
sti
or
imul
mov
xlat
pop
lret
aam
inc
ret
fucom
mov
loop
xchg
es
inc
or
adc
pushf
das
test
mov
push
mov
mov
mov
ret
mov
lds
and
jle
dec
mov
out
adc
inc
jecxz
loopne
xor
sarl
jne
lods
sub
mov
int3
mov
mov
or
xchg
pop
rcll
imul
cmpsl
dec
mov
addr16
lret
jp
adc
mov
push
adcb
sub
add
popf
inc
inc
xchg
sbb
jb
das
add
mov
cmp
adc
notb
inc
mov
mov
popf
add
stos
jns
and
into
insl
sub
sbb
sub
ds
test
sahf
nop
pop
cmp
mov
xchg
add
mov
lods
adc
push
imul
xor
lods
imul
xlat
mov
lcall
int
pop
ret
aad
jo
push
incl
sub
clc
cmpsl
xchg
fdivl
mov
popf
outsl
out
stos
fwait
repz
inc
shrb
aad
mov
cmp
hlt
mov
mov
push
inc
adc
repz
mov
imul
xor
mov
test
sbb
xor
call
fisubrl
pop
imul
cmc
insl
enter
inc
loope
jle
dec
pusha
sbb
test
or
mov
stc
sbb
roll
mov
mov
xor
push
sub
or
movsb
popl
or
fistl
les
jmp
cmp
shl
pop
sub
mov
rcrb
testb
sub
or
and
push
or
hlt
xchg
movsl
jmp
pop
imul
jg
add
in
push
push
mov
xchg
hlt
daa
dec
cli
loop
mov
lahf
xor
pusha
repz
mov
dec
aaa
insl
fcomps
add
jge
pop
inc
pop
stc
sub
imulb
lods
inc
ja
cli
movsl
dec
leave
mov
test
es
stc
scas
js
pop
sahf
sub
fwait
mov
jl
outsb
add
mov
stos
repz
or
xor
mov
ds
mov
enter
cmpsl
add
test
testb
popa
movsb
dec
scas
xor
jl
lret
pop
mov
sbb
push
leave
rorb
or
inc
jge
xchg
pop
mov
add
mov
fdivrs
test
xor
push
inc
fs
clc
aad
or
sbb
sbb
stc
and
adc
add
ljmp
mov
push
gs
pushf
pop
fadds
and
jne
aas
sub
add
outsb
addr16
sub
mov
les
jne
pop
push
aad
jb
sub
push
pop
ss
sbb
subb
aam
nop
mov
xor
lcall
jp
push
xchg
xor
repz
and
sbb
pop
add
data16
es
popa
paddusb
mov
inc
inc
out
or
adc
lods
jne
jmp
push
mov
dec
nop
ret
adc
push
add
insb
shrl
jge
add
mov
arpl
pop
sub
push
xchg
jle
push
ret
jg
addb
popl
push
enter
inc
adc
ja
es
and
add
jecxz
and
sub
mov
sahf
les
out
sub
jo
iret
mov
push
push
bound
sub
sub
fisttpll
pusha
cmpsl
cmp
adc
leave
mov
enter
xchg
and
dec
mov
in
or
jne
and
adc
cmpsb
mov
adc
pop
movsb
rolb
or
cmp
sbb
cmp
cli
ret
sarl
xchg
xor
fadds
rolb
jns
sbb
into
xchg
inc
push
dec
or
stos
les
xchg
cmp
add
pop
outsl
push
and
aas
jp
mov
outsl
test
push
add
insl
dec
frstor
lahf
push
in
add
and
lds
xchg
mov
roll
sti
js
mov
iret
bound
jle
pop
shll
sbb
and
jno
cwtl
stc
xor
and
push
imul
add
hlt
mov
inc
int
shl
inc
jge
popa
hlt
mov
jmp
sub
mov
sub
pushf
xlat
pop
mov
push
andl
ja
sub
lods
add
or
lcall
jnp
icebp
jle
mov
lds
daa
sub
mov
dec
mov
push
xchg
sbb
add
negl
sbb
sbb
lods
pop
loop
orl
sbb
mov
sti
pop
mov
pusha
push
and
and
cwtl
and
sbb
adc
dec
lock
ss
adc
call
mov
and
and
test
adc
je
mov
lods
jae
push
or
lds
mov
mov
push
or
dec
lahf
cltd
std
dec
and
std
aam
into
test
in
push
lds
scas
dec
icebp
inc
dec
stos
jae
xor
mov
das
and
pop
ja
insb
jecxz
movsl
enter
cmpl
lods
xchg
or
jmp
adc
mov
pop
push
scas
mov
xchg
loope
hlt
mov
dec
mov
icebp
es
call
cmp
rolb
stos
push
push
mov
icebp
ret
jge
and
mov
jmp
xchg
fsubrs
dec
mov
out
lods
lea
insb
push
stc
rcrb
pop
xchg
push
and
xchg
adc
pop
inc
mov
add
add
pop
push
adc
pop
push
outsl
mov
push
cmc
cs
movsb
or
movsb
pop
ja
xchg
xchg
pusha
adc
push
dec
rcr
jle
mov
loope
insb
add
sbb
mov
push
shlb
sbb
sti
push
les
pop
adc
jae
subb
mov
pop
push
pop
test
cmp
or
in
ja
ds
jmp
inc
aad
jl
jp
mov
popf
jbe
enter
stos
outsb
adc
push
loop
es
imul
inc
inc
sbb
jg
adc
loopne
push
test
and
ret
jne
xchg
xor
repnz
outsl
pusha
mov
repz
faddl
outsb
dec
xorb
nop
cmpsb
mov
lea
fcmovnbe
cli
xor
rolb
sahf
aas
insl
xchg
cld
dec
es
push
jg
sbbb
js
jecxz
xchg
adc
jns
push
es
loop
test
sbb
jne
xor
loop
dec
mov
jge
aas
popf
into
cmpsb
sub
fs
scas
fisubl
daa
dec
mov
add
rorb
inc
or
jge
add
xor
jecxz
mov
adc
jle
sbb
outsb
cmp
push
addr16
or
jge
nop
add
or
jle
mov
inc
mov
daa
jecxz
mov
xchg
dec
rcl
call
dec
loop
mov
dec
sbb
inc
in
or
testl
movsl
popa
add
test
mov
mov
outsl
test
jne
out
or
mov
fistpll
sahf
in
xchg
cmc
jb
push
test
nop
std
pushf
mov
dec
cmp
mov
sub
cmp
fnstcw
mov
pop
imul
xchg
arpl
cmpsl
repz
sbb
in
rcrl
in
adc
pop
lock
leave
push
dec
adc
cltd
fldt
call
imul
dec
shl
inc
js
push
lock
dec
cmc
nop
mov
add
fcoms
adcl
in
imul
lock
lcall
adcb
jbe
sbb
dec
cmp
shrl
movsb
ljmp
xor
jp
mov
and
jne
fidivrl
popa
inc
imul
ret
sub
stos
test
ja
mov
std
jg
rcrb
add
mov
loop
es
test
xor
pop
lahf
cmc
je
sub
insl
push
dec
jne
add
enter
lock
jge
or
xor
lea
push
dec
mov
jae
pop
jo
ret
cmc
dec
stos
js
insl
inc
enter
dec
lods
cld
mov
stos
pop
cli
out
int
dec
in
pop
mov
fdivl
rcr
inc
mov
jbe
or
fnsave
xchg
jb
cmp
les
sub
jns
roll
mov
inc
cmp
adc
testl
sub
outsb
hlt
dec
mov
sub
and
insl
js
and
into
inc
into
and
dec
lret
mov
jo
xchg
andb
sbb
sbb
xchg
push
scas
cld
ja
sti
insb
fisttps
add
sub
cmp
mov
mov
js
pusha
jecxz
or
sbb
in
add
lea
int3
pop
fisttpll
or
mov
jge
add
stos
mov
xor
dec
mov
std
nop
push
call
mov
dec
inc
fadd
gs
roll
leave
xchg
jmp
popf
xchg
lods
pop
sbb
mov
xchg
int
pop
sbb
cld
insb
jae
adc
jnp
mov
sti
jecxz
unpckhps
inc
fstpt
or
adc
repnz
addl
dec
bswap
jbe
out
push
push
jne
sti
mov
movsb
xchg
mov
mov
popa
sbb
jb
sub
push
mov
sub
or
std
addr16
in
add
lods
ja
add
jnp
std
fsincos
popf
cwtl
jo
push
cmpsl
js
mov
jno
jo
aad
mov
jo
in
mov
fwait
mov
mov
mov
lods
jne
movsl
adc
scas
pop
stos
dec
imul
dec
add
push
or
xchg
cli
and
dec
push
hlt
mov
sbbb
add
inc
adc
or
push
push
pop
push
lea
push
rorl
ret
jle
jnp
pop
inc
cwtl
mov
sub
sbb
and
int3
std
int3
jne
xor
rcll
xchg
cltd
pop
xorl
or
test
cmp
jp
fmuls
xchg
adc
outsb
fcomps
jae
cmpsl
jl
int3
es
pop
xlat
and
mov
or
ret
or
mov
xchg
add
pop
cmp
sub
sahf
pop
mov
cwtl
dec
subb
inc
jnp
lods
aas
mov
out
sbb
push
cmp
and
dec
nop
mov
por
mov
imul
dec
mov
inc
sub
leave
cli
xchg
inc
cmpsl
stc
call
jne
movl
incb
clc
mov
cli
add
and
jb
cld
movsl
xor
pop
sub
movsl
fists
test
test
dec
mov
adc
pop
nop
ljmp
adc
xor
cmc
push
shl
hlt
adc
pop
stos
sub
pop
std
arpl
inc
mov
xlat
mov
pop
add
sub
xchg
mov
xchg
pop
dec
jne
es
idivb
inc
xchg
mov
gs
jg
or
bound
arpl
mov
push
mov
cmc
inc
push
push
sarl
imul
inc
mov
out
pop
mov
pushf
pop
fsubl
mov
push
mov
movsb
and
push
sahf
cs
xchg
hlt
lds
int
pop
xor
fcmovnu
mov
leave
insb
sarb
jne
pop
pusha
mov
movsl
sbbl
push
mov
ret
aad
sbb
sub
ret
sbb
xor
pop
xchg
adc
cmp
imul
int3
jne
inc
sbbl
add
std
jmp
lods
int3
arpl
ret
pushl
push
leave
sub
lds
cmpsb
cmp
xchg
cmp
scas
jae
sub
mov
cmp
sub
lock
push
jecxz
inc
add
mov
insl
popa
push
cmp
lret
dec
add
faddl
cmp
cmp
fldenv
push
pop
mov
jo
dec
jecxz
scas
push
pop
cltd
fldl
push
fwait
das
lret
sub
push
mov
inc
jb
mov
mov
test
adcb
fwait
ret
movsb
pop
in
push
scas
into
std
jmp
lea
jnp
or
inc
sti
ss
cmp
fisttpl
xor
sub
outsl
fists
insl
mov
mov
cld
ljmp
inc
imull
or
dec
jne
and
pusha
ja
inc
orb
jae
fnsave
push
repz
sub
insl
push
test
incb
sub
lods
inc
inc
push
mov
inc
pop
nopl
add
adc
sub
mov
in
mov
mov
inc
test
and
stos
adc
rolb
cld
insb
cmp
mov
sub
daa
add
lcall
adc
cmpsl
mov
or
hlt
mov
ds
jne
mov
and
cmp
or
hlt
mov
pop
sarl
fdivs
int3
and
lea
pop
test
neg
rcrb
aas
sub
xchg
int3
mov
jbe
loope
movsb
aas
rep
sbb
jl
negb
rolb
lret
sub
movsl
inc
lods
jns
mov
mov
int3
outsl
sbb
fmuls
mov
push
cwtl
test
leave
pushf
jmp
add
lods
sarl
lods
pop
popa
mov
sub
iret
sbb
pop
pop
sub
pushf
lret
jne
add
mov
aas
std
ljmp
stos
stos
mulb
adc
sbb
mov
popa
add
gs
les
pop
xchg
hlt
jno
and
fxch
or
add
in
pop
inc
insl
stos
les
loope
lods
push
mov
rorb
or
jne
rclb
mov
jne
dec
mov
ror
adc
mov
mov
lods
iret
pop
nop
sub
sbb
enter
jb
inc
add
sub
enter
lods
cs
push
in
push
sbb
aaa
push
push
sub
sti
arpl
mov
xchg
xor
inc
pop
lahf
pop
pop
add
out
or
pop
les
out
cld
push
lahf
test
into
hlt
push
push
addr16
shlb
pop
stos
inc
cmp
inc
xchg
dec
mov
jp
sahf
cmp
nop
cmp
faddl
clc
imul
in
cmp
sbbl
data16
mov
mov
mov
imul
or
push
push
sarb
push
call
mov
push
sahf
mov
js
fidivs
sbb
jne
in
or
stc
clc
push
je
or
fcmovne
and
cmp
test
mov
sub
rcrb
push
adc
xchg
mov
add
rolb
enter
add
push
inc
fdiv
push
sarb
js
jae
jne
outsl
add
mov
lods
jmp
mov
and
sbb
pop
push
insb
jb
adc
testl
and
cld
outsl
inc
fucomp
and
inc
push
cwtl
inc
subb
fsub
cmpsl
and
or
bnd
aaa
and
sbb
jle
xchg
mov
adc
enter
push
rclb
clc
mov
xchg
or
pop
data16
or
lds
adc
mov
fs
xchg
cmp
sti
mov
test
add
inc
insb
jne
movsl
cmpsl
lahf
enter
test
pop
out
mov
inc
xchg
jns
loope
jno
pop
repz
push
icebp
stos
push
dec
push
jns
call
scas
lcall
dec
adc
xchg
sub
dec
mov
imul
int3
mov
js
and
add
movl
pusha
push
ja
inc
cmpsb
cmp
mov
mov
orl
cld
sbb
cmc
xchg
jp
mov
xchg
pop
in
add
nop
ret
stos
inc
adc
jp
cltd
mov
aas
adc
sti
insb
pop
rcrl
out
stc
adc
and
pop
subb
jp
lods
call
dec
jg
popf
cmp
inc
and
adc
adc
lret
shll
arpl
adc
out
shll
sub
push
into
popa
sub
adc
rcr
pop
enter
hlt
imul
orb
lods
scas
cmpsl
repnz
adc
mov
sahf
enter
adc
xor
push
or
jmp
mov
fistps
int3
jo
ja
push
jecxz
jnp
dec
and
ffree
lret
mov
adc
or
fisubrl
comiss
loope
sub
les
add
pusha
outsl
xor
hlt
call
mov
cwtl
mov
pop
mov
stos
xlat
fs
cmpsl
mov
fs
movsl
movsb
cli
insl
andb
js
xchg
rorl
and
lret
hlt
mov
sbbb
movsl
addr16
mov
mov
pop
cmpsb
pop
loop
or
stos
movsb
and
bound
add
inc
test
aam
dec
adc
test
jne
mov
gs
and
rcr
scas
and
push
popa
add
xor
jl
xor
adc
pop
cs
jne
pop
sub
bound
push
mov
mov
mov
fs
nop
push
mov
shrl
cmp
lret
xchg
xor
in
iret
lods
mov
ficoms
sbb
jecxz
cmpsb
test
ret
insl
pop
mov
xor
fisttps
lret
popa
mov
hlt
movsb
or
js
scas
cs
push
call
idivb
fmul
add
cltd
fstl
stc
inc
fwait
mov
out
cld
push
inc
add
pop
lods
cwtl
xchg
out
pop
inc
aaa
mov
lods
fs
mov
inc
and
roll
lea
imul
loop
aad
inc
leave
lds
sahf
fldt
rclb
dec
imul
adc
xorl
pusha
movsl
xchg
push
push
inc
adc
xchg
pop
inc
into
adc
mov
movsl
mov
xor
rclb
dec
das
fchs
mov
ljmp
sub
xor
mov
pop
mov
add
jnp
add
pop
push
cmpsb
inc
movsl
cmp
loopne
hlt
popf
push
push
jg
enter
cs
sub
in
dec
xlat
movsb
sbb
fwait
inc
pop
mov
or
bound
add
ss
js
jmp
cmp
pop
add
mov
jne
or
popf
add
mov
pop
loope
and
or
loope
jg
fistl
jecxz
lcall
add
cmpsl
or
sahf
in
add
dec
mul
sbb
mov
lret
or
sub
sub
rol
mov
inc
cmpsb
pop
xor
ds
rorb
push
pop
xor
loope
and
jns
adcb
or
or
inc
repz
repnz
dec
loop
std
mull
and
xor
aas
stos
push
fcoml
insl
inc
mov
or
pop
mov
cmp
xor
jnp
test
andb
out
in
lods
pushf
dec
dec
imul
sub
push
mov
fsubrl
fisubl
push
mov
stc
mov
inc
movsl
add
out
ret
add
inc
mov
mov
pop
mov
fidivs
fdivr
mov
mov
lods
in
jg
mov
xchg
nop
xchg
xchg
mov
cmp
push
jmp
out
scas
and
xor
cmc
cs
cmc
push
out
testb
pop
call
mov
xchg
xchg
sar
pop
leave
mov
sahf
adc
aaa
jbe
cmpsl
fmul
aad
push
pop
insl
loop
in
jp
add
jnp
loop
push
loope
test
inc
adc
jg
loope
imul
out
inc
test
dec
xchg
outsb
test
arpl
les
mov
xchg
push
mov
fbld
in
lock
in
insb
add
std
cmp
aas
mov
hlt
dec
loope
popa
xor
fs
data16
fldt
xorl
inc
ret
jg
out
push
in
clc
cmc
jns
jl
movsl
pusha
nop
lahf
imul
sub
jne
add
or
enter
pusha
mov
cltd
push
data16
pushf
fwait
loopne
imul
mov
adc
into
jo
jp
fildll
stos
pop
or
shll
cmp
jmp
movsb
hlt
xchg
scas
data16
sbb
fwait
adc
xchg
jne
lcall
scas
push
jno
mov
mov
mov
mov
jae
mov
adc
sbbb
js
xor
mov
and
nop
xchg
mov
sub
leave
arpl
mov
sub
stos
scas
popa
sub
mov
in
xchg
jl
and
mov
in
inc
iret
test
outsb
jne
cli
fxtract
push
dec
and
jge
sub
mov
mov
pop
test
add
mov
call
enter
add
jnp
clc
cmp
dec
pusha
xchg
or
cmpxchg
mov
hlt
lahf
jo
add
cli
subb
outsb
jno
call
cmpsl
into
pop
mov
jle
xor
dec
pop
fdiv
jnp
addr16
inc
xor
jbe
movsl
popa
mov
mov
cld
push
daa
cmp
outsb
fwait
add
jmp
or
xor
sbb
push
rorb
and
jle
jg
adc
xor
or
sahf
add
mov
nop
int
mov
insb
mov
mov
shll
in
sub
add
mov
leave
sbb
stos
jl
pusha
pop
into
orl
scas
inc
or
xchg
jae
add
inc
lret
jne
cld
out
fidivrl
out
pop
enter
add
and
and
popf
sbb
inc
std
punpckhbw
out
xchg
dec
enter
jbe
inc
xlat
in
jle
lods
adc
call
lret
shr
addl
loop
popa
xlat
scas
fisttps
mov
add
pop
mov
mov
lock
dec
sbb
jo
xor
fs
or
lret
int
sarb
cmp
std
aad
leave
pop
mov
das
std
rclb
movsl
xor
aam
lea
loope
and
cli
fcomp
popf
sub
pop
pop
adc
sub
mov
dec
jbe
pushf
hlt
cwtl
repz
cmp
insb
inc
xchg
and
cwtl
xchg
mov
xlat
jne
xor
fsubl
loop
xor
loopne
lods
mov
mov
xor
lahf
add
push
xor
and
out
xlat
and
mov
fldl
dec
mov
les
mov
cwtl
and
jne
popf
mov
in
outsl
cmp
ds
adc
fstl
adcb
fdiv
int3
add
faddl
and
pop
cmp
xchg
jge
fldcw
cmp
fcomps
jns
les
pusha
pop
pop
fwait
xchg
xchg
stos
lret
repz
daa
xor
hlt
push
idivb
das
sub
ja
cmp
push
jmp
sbb
mov
mov
aam
mov
add
enter
xor
mov
dec
ficoms
dec
loop
je
icebp
inc
push
add
push
mov
cwtl
out
inc
divl
mov
mov
sbb
nop
xlat
enter
movsb
mov
enter
push
int3
shl
fisttpl
mov
add
popf
inc
add
sub
int3
mov
scas
mov
ja
jne
xor
sub
sbb
aad
test
orl
mov
xor
pop
sub
je
loop
dec
sub
sub
es
cld
insb
cmpsl
je
cs
pusha
xchg
shll
lods
clc
xor
adc
es
push
sbb
mov
push
pusha
arpl
sbbb
cmc
pop
mov
push
sub
adc
fmuls
dec
aaa
lahf
mov
xchg
call
sarl
jmp
inc
inc
pop
cwtl
push
mov
scas
xchg
ss
inc
es
imul
mov
mov
mov
sub
hlt
mov
sub
push
int3
add
icebp
inc
mov
int3
xor
sbb
rolb
mov
test
xor
jge
cmp
data16
fldcw
call
mov
iret
sbb
mov
jne
movsl
jge
sub
jns
test
pop
and
mov
xchg
jns
mov
sbbb
inc
sub
mov
enter
std
push
adc
loopne
mov
je
inc
orb
frstor
sbb
shll
ds
or
hlt
out
loopne
inc
jmp
xchg
enter
arpl
push
mov
jg
loopne
mov
jb
xor
sti
cmp
cld
test
and
mov
sbb
dec
ds
addr16
sarb
je
mov
jnp
daa
icebp
add
pop
pop
ret
sub
push
mov
push
add
iret
sbb
pusha
cld
mov
adc
add
out
xlat
loopne
jl
inc
fldenv
adc
cmp
cwtl
pop
sub
sbb
jae
mov
cwtl
mov
mov
xchg
pop
popa
cmp
xchg
jae
mov
movsl
mov
dec
mov
mov
adc
jle
pop
iret
pop
xchg
xor
mov
mov
in
lcall
pusha
adc
test
mov
inc
add
jae
xorb
or
jle
mov
pop
leave
ljmp
add
cmp
hlt
adc
xchg
rcll
scas
and
cli
movsb
int3
loope
in
mov
jb
subl
adc
inc
adc
mov
push
clc
jno
std
xor
adc
push
xor
faddl
xorb
push
inc
popa
adc
inc
xchg
inc
es
jecxz
lahf
cwtl
mov
xchg
or
pusha
cwtl
xchg
hlt
ffree
push
ror
addr16
pushf
pop
leave
mov
aam
mov
push
lea
pop
jne
movsb
xchg
gs
scas
push
sarl
push
lret
or
or
fists
dec
xchg
mov
jmp
fldl
cmove
and
mov
mov
xchg
aam
adc
sub
dec
fdivs
inc
xor
jle
push
jp
lods
aad
fisubrs
test
cli
test
cs
cmpsb
loope
jno
fisubrs
lret
cs
inc
loope
ret
sti
cmp
or
inc
div
fmul
sub
dec
loopne
cmp
dec
cmp
dec
dec
hlt
std
test
rcl
mov
mov
leave
mov
mov
push
mov
gs
addb
shl
inc
ret
sbb
faddl
movsl
push
jo
in
or
push
inc
jg
mov
ss
mov
popa
mov
jmp
inc
jbe,pt
out
stc
xchg
fs
mov
inc
mov
fldenv
inc
adc
repnz
or
xchg
neg
pop
push
jne
mov
sub
xor
mov
jge
stos
jne
loop
orb
sti
mov
divl
sub
and
mov
sbb
mov
sub
or
sbb
lret
jp
push
xchg
cmp
into
cmp
jmp
pop
inc
lret
ret
das
mov
jne
insl
lods
jnp,pt
lahf
jg
ret
shl
nop
cmc
pop
movsl
push
xlat
popa
jmp
pop
pushf
adc
test
xor
shrl
lds
add
ljmp
sbb
adc
ret
and
jne
daa
test
mov
inc
sub
cmc
cmc
adc
movsl
shlb
lds
cld
je
sub
inc
sub
inc
inc
sbb
call
add
mov
test
cmp
jne
lea
push
cwtl
and
mov
inc
dec
cld
pop
insb
vcmpps
sbb
cmc
push
pop
dec
add
mov
mov
inc
rcr
mov
add
push
mov
cs
jno
into
js
push
xchg
mov
jge
jmp
add
out
insb
jb
jg
jnp
test
mov
js
mov
mov
mov
cld
enter
add
adcl
cmc
in
sub
or
popl
add
int
dec
lret
mov
mov
outsl
das
loopne
adc
inc
into
jno
mov
pusha
stos
fadd
lahf
sub
mov
imul
adc
jg
out
aam
cwtl
sub
pushf
cmpsl
sbb
dec
and
popa
jbe
mov
data16
mov
fmull
es
xor
push
lcall
dec
fsubr
mov
test
divl
leave
rcl
inc
imul
push
jg
sahf
sbb
sti
pop
dec
jne
ret
xorb
enter
lods
push
adc
jp
jg
mov
loop
push
push
jmp
cld
push
cmpsl
mov
rolb
aad
pop
test
das
push
pop
or
test
xchg
dec
xchg
out
mov
mov
cmp
ret
aaa
fadds
sub
xorl
add
inc
lcall
scas
enter
lahf
sahf
mov
xor
cmpsb
popa
mov
fadds
fcmovnb
addr16
in
push
sub
outsb
lret
push
xor
inc
push
mov
or
outsl
gs
enter
push
mov
cld
aam
xchg
mov
je
cli
jae
shlb
shr
loop
test
xchg
jne
push
push
inc
push
inc
lahf
inc
or
cmc
lock
into
sub
mov
mov
mov
out
loop
xchg
outsl
lds
inc
jge
rcr
dec
inc
iret
mov
or
mov
and
adc
repnz
out
movsb
push
in
and
push
xchg
mov
test
mulb
or
inc
and
in
pop
mov
mov
sub
mov
pop
adc
cmc
sbb
jp
pop
push
movsl
mov
out
fidivl
mov
fmull
and
mov
jno
adc
sbb
loopne
loopne
arpl
enter
std
mov
jmp
testl
in
testb
xor
xlat
enter
sub
inc
push
pop
cwtl
sbbb
scas
shrl
cmp
pop
inc
or
repz
inc
loop
out
sbb
test
dec
ljmp
pop
dec
insl
xchg
push
mov
imul
push
mov
dec
xchg
adc
inc
lods
adc
pop
add
fstl
hlt
add
out
lea
push
mov
sahf
sbb
test
add
dec
jne
fiaddl
scas
hlt
inc
and
pop
filds
or
cld
add
stos
xchg
cmp
scas
lods
ret
fildl
sbb
leave
mov
fcompl
and
insl
repz
rcrb
push
add
sbbl
sahf
jmp
adc
in
cmpsl
lcall
xchg
mov
pop
dec
ret
inc
leave
loope
inc
add
lods
jle
imul
jns
fnstsw
clc
jne
or
xor
mov
dec
jecxz
jne
jge
fiadds
jl
xchg
lds
push
rcrl
cli
jns
ss
mov
jae
les
xchg
loop
push
mov
rclb
loope
into
aad
inc
popa
dec
jb
xlat
push
inc
adc
loope
lods
imul
jle
cwtl
pop
movsl
rcr
and
inc
loope
mov
pop
shrb
and
arpl
sub
jmp
addb
mov
mov
aam
sub
pop
add
pushf
add
cld
push
cs
leave
jl
mov
cmc
imul
test
adc
lea
jnp
lcall
sti
inc
lahf
je
out
cltd
mov
push
or
test
pop
or
jns
mov
adc
mov
and
shrb
xchg
repnz
outsl
ret
cwtl
sub
incl
out
mov
movsb
add
dec
jnp
push
mov
mov
mov
jg
mov
mov
cmp
xor
dec
cli
test
nop
sbb
aas
mov
fnstcw
jbe
inc
mov
xchg
shlb
ret
hlt
mov
cmp
shlb
and
and
rorl
mov
movb
sub
test
sbb
adc
inc
fidivs
mov
jle
mov
sbb
fcoml
lea
add
xchg
pop
mov
adc
mov
je
scas
inc
in
push
xchg
enter
js
ficoms
sbb
xor
sub
fcoms
mov
push
cmpsb
mov
adc
scas
or
jmp
push
mov
rol
adc
jge
xchg
insb
adc
ljmp
inc
inc
out
loope
cli
push
sti
sub
cmp
nop
in
popf
hlt
sbb
test
mov
sbbl
ret
jne
xor
lods
arpl
push
lods
pop
adc
pop
cmp
adc
mov
mov
in
decb
inc
mov
pop
push
repz
push
mov
dec
and
outsb
inc
ficoms
movsl
cld
push
popf
in
xchg
mov
imul
gs
adc
add
xchg
adc
and
pushf
inc
je
orl
ss
lret
sub
pop
xchg
sbb
dec
cmpsb
inc
outsb
push
xchg
test
mov
jle
xchg
test
or
aad
loop
xchg
jmp
into
fiaddl
fst
push
arpl
data16
rorl
dec
jle
mov
imul
lcall
sbb
lock
movsb
jle
gs
xor
lds
stos
in
adc
sub
sbb
dec
xor
insl
cltd
pop
lods
insb
icebp
pop
mov
pop
fimull
lret
fnstsw
subl
icebp
mov
nop
xchg
lcall
in
and
cld
mov
add
sbbb
data16
pop
or
scas
xchg
insl
and
lcall
mov
call
lret
cmp
mov
mov
orl
orb
pop
adc
cli
lea
sub
lock
dec
imul
test
jecxz
xchg
ret
out
adc
lret
testl
mov
jecxz
mov
mov
push
test
es
add
cltd
cmp
sti
sub
sub
in
push
or
push
lock
enter
xchg
call
insb
aad
fwait
sub
imul
cmpsb
jne
mov
xlat
xchg
xor
dec
mov
jne
push
enter
sub
xchg
inc
dec
pop
add
pop
enter
cli
mov
adc
mov
aam
movsl
and
xchg
or
jecxz
xchg
pop
mov
scas
sub
inc
fisubs
pop
push
leave
adc
jo
and
test
int3
lret
icebp
dec
sahf
std
leave
or
pmulhw
lcall
repnz
add
les
mov
mov
and
add
idivb
mov
insl
icebp
in
or
pop
les
and
nop
jl
dec
or
or
sub
pop
sbb
pause
lods
pop
repnz
lods
test
jno
xor
ret
push
xorb
scas
loope
es
cltd
mov
movsb
stos
addl
xchg
jbe
mov
hlt
inc
xor
not
test
cmpsb
mov
mov
cmp
repz
xorl
xchg
rcrl
mov
jo
ret
in
dec
mov
jge
inc
xchg
cwtl
fstp
inc
cmp
insl
loopne
inc
push
or
inc
pop
mov
jne
mov
mov
iret
mov
xor
cmp
lds
xchg
add
mov
pop
popa
pop
imul
inc
loop
mov
jnp
add
adc
mov
mov
pop
fs
in
das
mov
popa
mov
cmp
dec
and
cmpsl
mov
lret
pop
xorl
sbb
pop
sbb
ljmp
mov
push
jge
cmp
cmpsl
fidivl
xchg
cwtl
dec
jge
push
nop
mov
aas
sub
jmp
dec
shrl
inc
pop
pop
xlat
pop
add
leave
subb
faddl
and
jmp
xor
ss
inc
popf
adc
sub
dec
fs
adc
insb
mov
out
sbb
movsl
inc
add
cmc
push
pop
daa
or
int3
jne
adc
cmpl
lret
xchg
fwait
cmpsl
inc
dec
stos
pop
mov
stc
fsubl
sub
xor
mov
or
sub
movsb
sub
js
push
test
and
mov
loope
sbb
in
jmp
mov
mov
stc
repz
sub
scas
mov
fsubp
pop
jno
hlt
fwait
inc
in
lahf
pop
addr16
xchg
mov
or
mov
cmp
add
cmpsl
mov
jg
mov
xor
and
out
insl
xchg
adc
fisubl
mov
lods
test
repz
push
pusha
pop
bound
out
fld
pop
aas
jecxz
sti
pop
lods
fcos
and
fstl
jbe
add
jne
and
sbb
xchg
push
mov
mov
pop
sahf
mov
mov
xchg
rolb
pop
sbb
fdivr
popf
sbb
shll
jmp
filds
cmpsl
pusha
adc
fldcw
mov
add
and
fmull
mov
pushf
push
mov
mov
gs
mov
lahf
jnp
int
lods
adc
nop
lds
pop
pusha
push
nop
pop
mov
pop
std
cmpsb
movsb
pusha
dec
int3
fnstsw
xchg
mov
nop
push
pop
add
loop
jle
mov
testb
and
out
jb
mov
cwtl
fisubs
into
pushf
sub
imul
inc
sbb
movsl
stc
mov
lahf
xor
js
frndint
cwtl
pop
xchg
pop
das
scas
movsl
or
sahf
js
fistl
lock
pop
xchg
sbb
mov
ret
sti
add
and
mov
dec
mov
sbb
test
leave
lea
mov
ror
ffreep
je
push
jno
pusha
jmp
rcl
je
mov
movsb
push
daa
stos
je
cmp
mov
sahf
cli
into
xor
xchg
pusha
mov
push
push
hlt
inc
pusha
or
push
sbbl
cmp
adc
sti
aas
repnz
stos
cmpsl
push
lcall
imul
or
shlb
shrl
or
into
sbb
lds
call
add
iret
call
sub
and
and
sbb
out
xchg
xchg
hlt
adc
clc
loopne
xor
ja
int3
sbb
inc
pop
cmc
jb
sub
mov
add
mov
add
inc
mov
fadds
dec
sti
subb
sbb
cmp
enter
or
adc
movsb
pushf
mov
movsl
mov
jl
cmpb
ror
cld
ds
xor
jmp
insl
xchg
ja
xchg
ss
in
lahf
int3
es
mov
pop
mov
in
into
roll
bound
xchg
daa
ret
add
inc
lret
mov
sbb
xor
xor
mov
or
push
pop
lahf
lock
mov
rcrl
mov
cli
pop
mov
int3
lahf
dec
pop
push
inc
leave
out
xor
push
loop
lods
pop
cmp
mov
pop
out
test
xor
push
stos
jns
jno
mov
xchg
dec
jge
pushf
decl
push
pusha
repnz
xchg
push
push
lods
push
or
ret
cld
movb
hlt
bound
add
pusha
cwtl
lcall
mov
mov
adc
sub
mov
mov
dec
jne
scas
fidivrs
aas
xor
or
mov
add
jne
mov
xchg
lds
test
outsb
sub
push
mov
stos
pusha
xor
push
add
pop
mov
or
cld
sub
mov
jl
pop
inc
test
inc
jo
cmp
push
cmp
test
mov
pusha
out
repz
inc
jmp
and
push
sub
jne
es
ret
and
mov
jno
movsl
and
cld
xor
data16
inc
outsl
push
mov
repnz
cli
stos
shlb
fsubrp
test
hlt
rclb
pop
sbb
xchg
popa
push
dec
in
mov
inc
pop
popl
into
or
push
sub
jge
inc
xchg
push
lret
mov
and
add
mov
movsb
mov
and
mov
mov
mov
pushf
xor
xorb
mov
sub
add
adc
fcmovne
mov
jge,pt
out
pushf
test
mov
divb
push
push
sub
inc
orb
inc
push
roll
iret
es
out
divb
cmpsb
and
adc
dec
sbb
inc
jne
xor
cmpsl
in
fstpl
sarl
mov
shrb
mov
fisubl
mov
xor
jb
sub
jo
cmc
outsl
mov
inc
xchg
mov
stos
pop
test
pushf
lods
out
shlb
into
pusha
and
sub
sub
mov
or
xchg
or
inc
imul
add
push
xor
jns
cmpsl
cli
rorb
repz
je
jne
xchg
dec
xchg
test
pop
pushf
sub
sbb
sub
pop
push
push
cwtl
mov
jne
adc
mov
ja
stos
pop
shll
inc
enter
leave
es
cmp
mov
xlat
loop
lcall
inc
cwtl
jne
and
aad
adc
jmp
sarb
imul
cmp
pushw
inc
or
imul
loop
push
mov
dec
shll
push
lret
add
mov
mov
mov
sti
mov
mov
push
lret
add
pop
xor
mov
adc
inc
fistl
fwait
adc
cmp
movsb
push
jne
scas
popa
clc
xor
jecxz
pop
xor
incb
mov
pop
sub
mov
pop
sbbb
cmpsl
push
fwait
jns
nop
mov
xlat
inc
inc
add
dec
iret
inc
and
iret
cmc
adc
sar
outsb
lock
std
and
or
in
xor
into
bswap
cmp
jne
adc
icebp
rcll
adc
sbb
je
jne
insl
lds
pop
dec
pop
addr16
jnp
ss
fadd
sub
pop
int
movsl
notb
loopne
pop
lock
in
xchg
movsl
or
data16
rclb
gs
test
in
mov
test
int3
cmpsl
pop
or
movsb
jbe
arpl
test
fbld
test
lea
jmp
mov
add
dec
stc
into
or
fdivrp
adc
test
imull
xchg
mov
ja
pop
cltd
mov
dec
aas
test
mov
mov
cmpl
push
xor
add
mov
mov
jbe
xchg
cmp
inc
subl
inc
out
pop
pop
fnstenv
xchg
cld
ljmp
xchg
hlt
in
add
jle
std
into
hlt
test
insl
cmp
imul
or
cmp
incl
jns
and
cmp
int3
or
xor
stc
addl
je
stos
jno
jne
cmp
push
ret
jne
push
ja
inc
out
xorb
enter
lret
xchg
mov
ja
ds
inc
mov
jl
hlt
add
data16
mov
cmc
loopne
addr16
nop
jecxz
push
dec
mov
or
loopne
mov
nop
or
inc
mov
mov
rorb
adc
enter
ror
adc
imul
push
push
pop
sbbl
lods
out
mov
cmpsl
lcall
pop
xorl
mov
dec
jge
and
xchg
lods
pop
dec
pop
cmc
lea
bnd
mov
xchg
dec
sub
mov
add
add
rcl
dec
mov
rep
mov
out
loopne
mov
cmpsl
push
inc
jge
and
repnz
andl
data16
push
test
cmc
aad
aas
arpl
hlt
jae
mov
cld
fdivl
aad
mov
push
push
rcl
lods
gs
in
sub
sbb
mov
jne
inc
jecxz
sub
int
fdivl
xorb
subl
fsubs
lret
rcrb
lea
ja
mov
xchg
in
mov
stos
dec
jne
popf
or
jne
movsb
jmp
test
bound
and
movsb
pushf
inc
call
movsb
and
je
mov
std
mov
mov
cltd
sbb
xorb
push
sbb
or
xor
aam
movsb
jle
sub
into
test
or
mov
sub
jb
leave
fisttpll
dec
dec
mov
pusha
ja
stos
jbe
cmp
cmp
adc
ret
sahf
es
pop
in
jne
movsl
leave
inc
fistps
add
and
dec
add
hlt
inc
jge
and
ret
hlt
add
dec
repz
loope
and
scas
call
inc
in
sub
fists
mov
pop
gs
sub
sti
ja
cwtl
stc
hlt
shll
sub
xor
fadds
in
push
lahf
pusha
jae
cli
mov
dec
jo
es
movsl
insl
add
dec
add
not
es
sbb
inc
push
mov
mov
adc
imul
in
fnstcw
leave
imul
mov
dec
hlt
rclb
das
shlb
enter
xchg
leave
into
mov
push
mov
mov
xor
bound
lock
adc
add
mov
mov
lret
scas
popa
jle
cli
xchg
cld
es
in
fcmovne
dec
lods
mov
mov
dec
jmp
das
pusha
mov
or
adc
jb
fdivp
push
idivl
hlt
fdiv
std
mov
aam
cmc
ja
rcrl
push
mov
ret
pop
loopne
addr16
adc
psadbw
or
scas
and
loopne
adc
int3
pop
xchg
push
fsubr
inc
add
cltd
jb
xlat
sbb
cltd
fs
cmp
cmp
ljmp
loop
call
or
insb
xchg
mov
mov
and
rcr
outsb
jo
loop
es
inc
scas
fcompp
adc
mov
addr16
inc
sbb
and
les
das
int3
popf
pop
mov
mov
jnp
adc
cmp
subl
mov
mov
xchg
and
out
pop
push
mov
aad
push
sub
insl
xchg
push
lcall
test
into
xchg
xorl
lret
xchg
push
sub
loope
cmp
test
popa
popfw
inc
xor
mov
inc
mov
jl
mov
mov
sti
jge
sahf
push
pop
mov
js
bound
mov
jl
sti
test
repz
inc
mov
dec
mov
jg
out
sti
fimull
int
ret
fwait
rolb
cmc
mov
int
sbb
pop
mov
mov
dec
scas
lea
jne
fsubrs
aad
sbb
adc
mov
mov
adc
cmc
bound
add
out
xor
fistl
mov
enter
insl
inc
in
mov
lock
inc
and
dec
aam
adc
lcall
cmpsb
jo
loope
lret
sub
dec
pop
mov
mov
test
pop
insl
popa
hlt
dec
jb
push
jge
orb
jl
add
adc
cs
jge
inc
sarb
add
inc
leave
mov
mov
add
xor
into
cmp
repnz
push
out
test
jle
and
inc
jl
dec
stc
sbb
ja
cmp
sub
pop
mov
leave
subb
xchg
in
and
gs
or
les
mov
int
jne
dec
in
pushf
mov
ds
cmp
cs
lcall
mov
pop
std
xchg
aaa
mov
dec
xor
test
filds
dec
stos
mov
cwtl
repnz
in
sbb
jb
sbb
sti
es
mov
mov
sbb
xor
cmpsb
test
aam
cld
adc
inc
push
mov
jle
hlt
clc
pop
jae
sub
stc
adc
push
or
push
dec
xor
hlt
jg
shl
pop
pop
add
pop
xchg
popa
jns
add
daa
or
les
jle
aaa
push
xchg
add
pop
nop
scas
xrelease
js
add
mov
pop
mov
mov
arpl
ret
inc
cmpsb
sti
and
jbe
dec
lret
nop
push
out
mov
dec
daa
dec
jbe
into
dec
imul
dec
push
scas
movsl
shll
aad
vpshad
ljmp
and
repnz
add
sbb
inc
icebp
add
popa
in
jae
lret
dec
xchg
cmp
sub
lahf
jne
jl
enter
xchg
pop
mov
scas
jno
sahf
pop
roll
or
repz
lds
outsl
imul
and
cs
movsl
jmp
xchg
js
sub
in
mov
jp
push
cmpsb
adc
pop
ljmp
adcb
ss
push
jae
stos
mov
mov
adc
aaa
or
stos
jmp
push
or
cmp
push
or
add
shrb
sbb
dec
nop
add
js
in
popf
pop
push
shll
shrl
pop
xor
fs
shlb
jmp
add
add
mov
xchg
adc
insb
mov
mov
or
and
sub
mov
lods
fsubs
loope
scas
add
jg
ss
push
mov
or
jp
cmp
push
lcall
push
out
hlt
mov
mov
xor
stos
add
or
xchg
jne
testl
xchg
cli
into
loop
inc
shrb
mov
insl
mov
aas
mov
inc
rcl
shll
mov
cmp
or
imulb
pusha
insl
roll
sti
mov
enter
cltd
shr
data16
cld
inc
or
sbb
out
inc
cltd
sbb
scas
icebp
add
mov
mov
fisttpll
rclb
rorl
mov
xchg
mov
dec
sbb
rorb
jne
notb
inc
push
and
adc
fldenv
daa
lret
in
xchg
call
add
insb
es
enter
jle
sar
fstps
mov
push
pusha
pusha
xlat
push
stc
push
cltd
inc
cmpsb
addb
sbb
lods
aad
mov
mov
add
adc
shrb
andb
xchg
sub
sbb
sarl
xor
cmp
mov
in
mov
clc
enter
add
lods
test
movsl
lods
movsb
mov
nop
push
pop
scas
fmuls
andb
leave
mov
in
inc
call
int3
scas
lods
jmp
dec
sbb
andl
and
pushf
xchg
jb
adcl
div
add
push
adc
jo
enter
inc
add
jmp
mov
ja
loopne
test
dec
out
lcall
repnz
mov
dec
ja
mov
insl
ljmp
adc
ds
nop
icebp
rcll
es
dec
mov
cs
lock
cli
dec
xchg
jno
jge
dec
cmp
ret
push
adc
aad
lret
xchg
lock
mov
movsb
mov
or
mov
xchg
mov
call
push
add
jg
into
mov
fldl
jo
jo
inc
add
sbb
stos
cmp
aas
shll
xorb
pop
lahf
push
xor
jbe
add
add
xlat
movsb
les
bound
jne
lret
fcomps
cmc
xor
pusha
lcall
add
lret
dec
hlt
add
mov
mov
fadd
inc
push
fcomps
mov
es
inc
outsb
or
fisttpl
mov
push
into
stos
cmp
sar
testl
fcomps
inc
xor
jle
testl
out
out
mov
fistpl
movsb
rolb
xchg
shlb
lock
mov
pop
mov
push
movsl
xchg
frstor
mov
loopne
or
rolb
mov
gs
in
jecxz
aad
add
fwait
addl
test
mov
mov
cmp
scas
jl
or
inc
jmp
stc
and
sti
idivl
and
cmc
jge
mov
stos
push
jl
mov
mov
cmp
popf
out
addr16
enter
pop
divb
add
std
hlt
xor
js
addr16
out
pop
mov
movsb
xchg
mov
rorb
jo
and
mov
in
or
into
loopne
jecxz
imulb
enter
out
popf
addl
mov
sub
jns
pop
sbb
decl
mov
push
mov
mov
jle
in
je
push
cmp
dec
xor
adcb
pusha
dec
fsubs
or
shlb
pushf
es
outsl
mov
cmp
imul
lret
cltd
xchg
mov
sub
insb
fcoms
jecxz
mov
sarl
cmp
mov
popf
sbb
inc
gs
sti
xchg
mov
push
cmp
sahf
sti
das
mov
pop
lock
je
loop
cld
mov
dec
movsb
pop
inc
sbb
add
hlt
movsl
xor
mov
inc
push
dec
pop
test
iret
inc
nop
inc
or
das
mov
sub
xor
cmp
jg
add
stos
stos
popa
push
jmp
ss
mov
jle
das
faddl
adc
mov
shll
and
cmpsl
mov
xchg
popa
mov
bound
loop
jne
pop
lods
cld
push
rolb
mov
movsb
adc
add
fdivrl
ss
mull
repnz
jnp
jbe
xchg
cs
mov
push
sti
push
sub
mov
cmp
or
popl
insl
sbb
adc
adc
stos
movsb
test
push
dec
mov
inc
iret
sahf
dec
std
sub
jne
leave
std
xchg
xchg
cli
add
push
ret
pop
gs
add
mov
push
cmpsb
lret
es
sbbb
into
mov
dec
call
push
inc
je
outsl
int3
data16
or
adc
xor
xor
incb
dec
mov
pop
ljmp
pop
mov
or
mov
jbe
ljmp
hlt
xchg
rep
add
fcom
mov
sub
xchg
loopne
mov
fstpl
jge
lcall
pop
sbb
addr16
andl
les
dec
and
or
mov
and
in
loope
lcall
repz
outsb
nop
test
push
aad
mov
les
jge
mov
jmp
mov
mov
sbb
add
jae
sbb
xor
jecxz
xor
xlat
rclb
jae
in
shr
leave
cmpb
cwtl
and
jne
add
add
xor
stc
pop
inc
xor
and
adc
stos
nop
js
int3
cmc
data16
mov
xchg
dec
sahf
ss
jnp
aaa
dec
lods
mov
jp
nop
stos
mov
adc
jp
subb
fisubrl
xorb
mov
rcl
pop
xor
je
int3
popf
pop
cmpsl
aaa
fists
in
dec
mov
movsb
mov
insl
lahf
dec
rcll
imul
movsb
iret
jo
pop
jge
daa
sahf
imul
mov
add
stos
test
mov
jmp
lods
adc
xchg
dec
loope
lods
test
pop
pop
push
mov
pop
pop
cmp
lahf
stc
lods
sub
std
jne
mov
push
lret
fstpt
xchg
aad
bound
or
xchg
pcmpgtw
out
lret
es
sub
xor
xor
pusha
lret
and
cld
testl
fwait
or
fwait
pusha
repz
mov
ret
sub
shlb
xlat
out
jne
popf
hlt
fildll
fidivs
addl
and
js
icebp
mov
push
std
mov
insl
in
cli
dec
adc
xchg
xor
lret
cmpl
inc
fisttpl
inc
mov
sub
add
sbb
aas
lret
mov
fiaddl
jns
add
orl
mov
cmp
mov
or
or
fcomi
js
adc
mov
cmp
addb
lods
insb
mov
xor
enter
cmp
xlat
hlt
rcrl
cmp
pop
repnz
mov
shlb
cs
mov
jg
sub
ficomps
movsl
call
movsb
out
pop
cltd
sub
jno
bound
hlt
mov
jae
pop
int3
push
dec
xchg
setbe
sti
inc
mov
leave
sahf
cmp
mov
adc
add
push
aad
mov
aam
movsb
jne
cmpsl
pop
insl
xchg
loop
aas
inc
xor
out
push
sahf
add
xorl
mov
ret
pusha
push
jmp
pop
leave
adc
jbe
dec
out
or
fists
sbb
adc
push
add
push
and
inc
hlt
xchg
or
ret
popf
sub
mov
ret
ret
sbb
sbb
jecxz
push
das
sbb
jmp
rol
cld
xor
hlt
mov
fdivrp
shl
imul
lcall
or
add
es
add
fsubl
mov
cmpl
lock
das
int3
push
xorb
dec
test
cmp
pop
adc
mov
fwait
cltd
jle
mov
dec
add
enter
jmp
xchg
mov
jb
cld
sub
xor
mov
sbb
cwtl
dec
test
push
jge
push
mov
roll
sub
inc
gs
andl
cmp
pop
pop
sahf
pop
mov
rol
adc
in
pop
daa
pop
pop
and
dec
cmp
leave
sbb
std
jp
add
lret
ret
insl
fisubl
jp
or
push
je
mov
into
pop
ja
dec
pusha
ljmp
orb
pop
push
in
cmp
notb
shlb
pop
out
sarb
jp
push
les
mov
cmp
cmp
push
and
dec
test
std
mov
rcpps
fisubrs
lahf
hlt
or
cmp
imul
movsl
add
inc
and
in
mov
pusha
mov
jl,pn
push
int3
jmp
into
insb
mov
fdivrs
sbbb
pusha
mov
cmp
mov
add
faddl
jnp
adc
push
rcll
lock
and
call
mov
es
fisubrs
loop
in
add
inc
adc
mov
cmp
push
rcll
into
mov
dec
mov
mov
sbb
jmp
decb
mov
ljmp
dec
insl
fbstp
subb
call
dec
push
xchg
jp
or
and
lret
fcoms
pop
sbb
in
fildl
mov
jno
adc
sub
mov
fadd
xor
clc
std
shlb
mov
das
into
dec
int3
push
jb
hlt
testl
mov
push
mov
test
mov
inc
cmpsb
inc
mov
xchg
jl
xor
mov
pop
out
test
hlt
add
mov
sbb
mov
imul
pop
adc
cmpsl
inc
jle
jl
in
outsl
and
dec
addb
inc
ret
inc
dec
add
adc
jne
and
cltd
outsl
adc
dec
jp
xchg
repz
push
and
cwtl
clc
pop
rclb
or
repnz
jecxz
rolb
hlt
mov
movsl
imul
push
neg
inc
sbb
lods
or
and
pop
mov
lods
popa
shlb
test
or
fwait
hlt
sub
push
inc
mov
das
pop
lds
xchg
push
pusha
repnz
mulb
xor
iret
int3
mov
movsl
sbb
in
nop
sbb
scas
repz
jg
test
pop
cmc
repz
out
and
hlt
adc
inc
add
cld
sbb
or
jnp
insb
mov
fdivs
sub
das
loop
in
mov
fistpl
rcr
jb
das
and
lds
inc
xchg
cmp
stos
mov
scas
in
xlat
sub
push
stos
cli
mov
pop
pop
imul
inc
mov
jl
jle
insl
pop
pop
adc
sub
sub
add
movsb
jbe
je
imul
adc
lea
in
sbb
mov
cld
cmp
push
pushf
mov
jne
jo
int3
mov
push
and
hlt
fldenv
push
xor
sub
es
sub
fs
pop
lock
shlb
in
sbb
xchg
mov
lahf
push
fidivl
clc
jo
pop
jo
jnp
mov
insb
bound
mov
push
fcoml
pop
fldcw
jg
sarb
je
fstpl
dec
movsb
cmc
gs
sub
and
out
cld
push
push
lret
nop
dec
hlt
push
mov
add
dec
inc
sbb
pop
lahf
hlt
xor
ljmp
push
sbb
popf
add
fisubs
add
ljmp
js
add
in
xor
mov
cmp
aad
mov
cwtl
pop
lcall
jne
mov
mov
dec
dec
mov
pop
xchg
inc
cmp
ret
and
movsl
insb
push
dec
mov
insb
ljmp
xor
xchg
mov
sbb
add
popf
pop
push
loopne
and
adc
sahf
pop
inc
push
rorl
xchg
pop
mov
add
inc
insl
mov
subb
test
sub
lods
rcrl
pop
lahf
jg
ret
xchg
nop
dec
jl
imul
andb
test
and
sbb
push
sub
xor
jmp
aas
jns
dec
nop
stos
les
repz
lea
pop
cli
cli
and
sti
xor
fidivrl
mov
mov
adc
vpmacssdqh
sti
mov
or
sbb
and
mov
jmp
cmpsb
mov
sub
iret
mov
int
mov
addr16
lcall
jmp
inc
push
es
or
stos
arpl
inc
xchg
sub
data16
sbb
popa
lods
jle
repz
sub
nop
outsl
mov
push
lods
cmp
pop
inc
pop
movsl
pop
mov
test
jae
aam
add
pop
add
mov
stos
mov
jp
data16
out
xchg
jbe
mov
dec
scas
mov
adc
cwtl
push
jne
push
jmp
ds
in
mov
jno
cmc
xchg
adc
std
addr16
sti
dec
out
loope
lds
inc
lods
mov
int3
push
pop
mov
xchg
cmp
dec
test
aad
arpl
loopne
jae
fsubl
shll
dec
mov
pop
sbb
xchg
adc
jnp
adc
sub
mov
gs
xchg
inc
push
jmp
inc
stos
sub
dec
mov
lahf
mov
add
mov
inc
fildl
xor
mov
dec
inc
mov
jb
cmp
insb
es
lods
pop
mov
or
pop
movsb
popa
fs
and
xorb
std
pop
int
js
jmp
in
xchg
cld
pop
rcrl
andl
xor
mov
or
movsb
dec
mov
negb
or
in
popa
xchg
lods
test
dec
jmp
lods
out
loopne
pop
mov
mov
mulb
jecxz
xor
ljmp
add
cmp
test
das
sub
mov
cmp
mov
out
add
jne
pop
ja
lcall
aad
adc
cwtl
out
xchg
gs
xchg
add
adc
ficomps
jg
pop
jmp
mov
mov
cwtl
jbe
push
pop
loopne
lods
iret
mov
sub
fisttpl
je
lods
lods
dec
xchg
push
xchg
movsb
sbb
mov
sbb
sub
mov
imul
aad
in
pop
push
adc
or
test
movsl
fcmovnu
sbb
xchg
roll
out
es
bts
jmp
mov
enter
sbb
mov
clc
mov
ss
sbb
adc
xchg
mov
test
hlt
xchg
jo
pop
ljmp
add
mov
ret
pop
sbb
repnz
test
rorl
xchg
les
fstl
mov
add
scas
xor
movsl
gs
lds
jg
xchg
sub
inc
repz
push
jne
mov
or
lock
shll
out
add
cmp
mov
sub
stc
int3
adc
leave
mov
push
jnp
je
xchg
mul
xor
mov
jmp
arpl
scas
sub
into
and
mov
mov
mov
aas
movsb
jle
adc
pop
decl
push
in
jg
xor
fsubs
ss
sbb
push
roll
andl
addr16
ljmp
aas
movsb
sub
push
fbld
in
jne
das
push
push
add
jo
mov
cwtl
out
movsb
mov
xchg
lods
jp
decl
das
mov
out
pop
scas
mov
sub
fsubs
pusha
bound
in
lods
push
cli
subb
and
in
pusha
cbtw
insl
or
hlt
sub
loope
jne
push
xor
push
int
fidivrs
pop
add
test
in
lods
test
push
mov
out
dec
add
cmp
test
cli
imulb
movsl
xchg
test
bound
or
lcall
rcl
es
insb
loop
in
test
dec
mov
rorl
das
ljmp
std
mov
pop
scas
movsb
ljmp
gs
xor
mov
sub
imul
and
mov
loopne
out
pop
add
sub
sahf
enter
hlt
dec
jle
or
xchg
xorb
in
sbb
add
insb
leave
test
rolb
mov
pop
bound
nop
bnd
push
testb
or
jle
sbb
pop
mov
cmp
out
jnp
pop
test
cmpsl
mov
fidivrl
mov
adc
nop
test
enter
rcrl
mov
cli
addr16
icebp
jo
test
mov
insl
int
sarl
jnp
ficoml
aas
inc
jb
into
jne
mov
mov
sbb
pop
mov
mov
pop
pusha
test
jmp
std
sbb
hlt
addr16
hlt
imul
pop
cltd
inc
stc
jge
mov
daa
fcmovb
hlt
pop
and
ret
dec
and
cmp
inc
lcall
les
jl
inc
fldl
hlt
cmp
adc
popl
adc
repz
mov
cli
pusha
pop
loopne
pop
fmulp
in
sar
mov
inc
scas
out
dec
mov
mul
dec
popf
in
out
pushf
jno
pushf
lea
or
push
sbb
loope
jne
dec
lea
test
lods
xchg
das
mov
call
mov
orb
out
and
xchg
pop
bound
jb
in
sub
add
stos
es
faddl
or
pop
mov
test
inc
push
imul
in
add
fs
dec
fs
cs
dec
adc
push
add
fmuls
into
fimull
roll
pop
adc
sub
sbb
ret
cmpsb
adc
neg
adc
dec
cmp
cmpsb
roll
ret
xor
sub
xor
repnz
mov
fsubs
lea
xorb
dec
mov
repnz
mov
pop
add
jo
mov
cs
repz
adc
mov
outsb
add
lret
popf
out
movsb
hlt
leave
add
icebp
cmc
fsts
sbb
mov
imul
ficoms
jge
add
ljmp
mov
cmp
std
add
mov
imul
popa
pushf
into
loop
add
rorb
cmc
fisubrs
push
out
lret
je
pop
nop
ss
dec
xchg
test
mov
out
cmc
imulb
je
shrl
mov
outsl
mov
jb
sbb
jecxz
ljmp
push
movsl
mov
adc
jno
test
lret
mov
mov
int3
mov
outsl
push
testb
ffreep
inc
test
test
add
jo
std
ret
int
mov
mov
jle
fdivs
xchg
add
cmp
xor
int3
dec
sbb
push
cmp
xchg
and
jmp
mov
add
cld
in
mov
fstps
std
cmp
mov
mov
fwait
and
aaa
hlt
mov
test
in
sub
xor
gs
cmp
mov
jo
lret
enter
stc
filds
pop
add
imul
lods
fisttps
or
rolb
stc
lods
pop
les
mov
and
or
arpl
sub
jo
jae
enter
bound
sub
in
mov
icebp
das
pop
jno
and
arpl
mov
aaa
popl
jbe
ja
adc
lahf
add
lcall
sub
pusha
lcall
mov
popa
jae
xor
sub
adcb
jo
pusha
push
push
out
jge
adc
pop
mov
and
enter
xchg
mov
push
sub
mov
adcl
rcll
add
pop
scas
pop
or
icebp
mov
pop
ja
pop
je
add
stos
stos
add
cmpsl
mov
iret
fnstcw
push
cld
fs
inc
sbb
repnz
jle
out
sbb
das
stos
rcr
xor
lock
jne
mov
out
ret
or
cmp
loop
push
popf
adcb
fs
mov
lahf
loop
dec
push
and
adc
adc
orl
jne
inc
or
jns
stc
or
bnd
scas
je
es
add
ja
push
mov
sbb
popf
lock
sbb
cmpsl
mov
cmc
pop
ja
push
daa
mov
dec
sub
mov
jbe
daa
xor
fcoms
jne
test
ss
cmpsb
cmp
jecxz
ret
push
jb
xorl
xorl
loop
popf
test
js
int3
jnp
cltd
mov
ss
inc
jp
rcrb
sbb
repz
push
test
adc
and
cmc
ficoml
mov
out
pop
mov
addb
cld
inc
lcall
mov
xchg
int3
testb
add
inc
xchg
xor
pushf
mov
std
jb
lods
icebp
fmull
imul
iret
scas
das
add
and
adc
sub
test
sub
mov
xchg
mov
mov
lods
mov
aam
rcr
xchg
jne
popa
and
pop
fbstp
or
add
popf
ds
fdivr
test
xor
test
adc
leave
loopne
js
out
sub
sahf
mov
or
push
jne
jp
mov
jl
jp
pop
mov
std
repnz
test
fdivs
jmp
push
sub
movsl
dec
outsl
mov
mov
imul
jnp
sbb
aam
insb
lock
lret
adc
imul
and
pop
mov
mov
loope
stos
cld
fcoml
pop
shrl
mov
cld
in
test
cltd
and
out
pop
inc
js
cmpsl
dec
add
das
hlt
repz
imul
outsl
jne
sbb
fcmove
hlt
lock
decl
mov
push
jb
xchg
jns
loope
or
stc
scas
pop
movsl
in
inc
sub
inc
stos
hlt
arpl
ljmp
push
aad
insb
mov
hlt
mov
nop
das
cwtl
adc
out
stos
jne
sbb
or
sub
scas
inc
push
jns
andb
mov
mov
cmp
push
push
test
or
adc
out
test
mov
shrl
add
mov
je
movsl
cli
repnz
mov
cmpsl
push
inc
fbld
cld
sbb
not
inc
cwtl
add
mov
xor
cld
dec
add
andl
or
or
pop
cli
filds
and
inc
js
nop
outsb
lods
test
stos
xorb
inc
loopne
inc
fsubl
jmp
sti
or
out
dec
shll
mov
push
mov
test
xchg
and
add
adc
popa
push
shll
arpl
inc
add
jnp
mov
pusha
test
jge
cmp
arpl
xchg
dec
mov
jecxz
mov
jl
xor
mov
in
mov
cli
adc
fimull
jmp
or
or
icebp
mov
mov
add
xchg
inc
out
pop
cld
dec
sbb
dec
mov
mov
ljmp
dec
mov
jns
adc
sbb
dec
orl
movsb
cmp
les
jne
pop
arpl
dec
inc
jg
xchg
jg
out
leave
sbb
ljmp
into
jecxz
imulb
push
xlat
insl
stc
add
dec
xor
and
in
mov
aaa
mov
div
ret
incl
add
sub
mov
cmp
xchg
lods
shl
call
popf
jg
lret
stos
into
xchg
jo
sub
push
cmpsl
push
js
ja
out
or
or
bound
adc
dec
call
rcrl
hlt
or
lahf
shll
iret
add
cli
idivl
scas
xor
les
add
jmp
cld
add
outsb
push
out
into
mov
gs
imul
dec
sub
dec
jne
inc
bound
lret
mov
jne
inc
faddl
sti
mov
faddl
hlt
iret
mov
jne
mov
shll
loopne
inc
rorl
push
mov
aad
sbb
cli
adc
inc
sti
jmp
dec
add
test
dec
adc
orb
repnz
scas
mov
xor
out
adc
rcl
mov
shrb
mov
lahf
inc
test
clc
add
xchg
test
push
cmc
mov
mov
push
or
ds
shrl
test
cmp
xchg
sbb
lcall
mov
mov
cmp
mov
or
pop
inc
in
js
rcr
mov
jbe
inc
mov
jle
aas
in
leave
movsb
mulb
inc
inc
nop
fidivrl
jmp
iret
sub
cmc
xor
hlt
hlt
cmp
or
xchg
imul
jmp
pop
mov
out
fmulp
mov
jne
rolb
mov
aaa
pop
shrl
cmp
mov
jg
xchg
orl
add
sub
scas
out
icebp
sbb
mulb
adc
jl
std
xchg
dec
pop
push
imul
inc
subb
push
inc
and
fnstenv
jnp
pop
lret
scas
push
xor
test
jb
loope
fwait
push
das
in
jns
add
outsl
mov
imul
adc
out
or
decl
jecxz
call
jne
cmpsl
cmp
push
fs
fisubs
lahf
loop
inc
int3
notl
jg
or
jbe
mov
test
fsubrl
adc
push
lret
adc
inc
xchg
or
push
test
sti
push
mov
clc
call
or
adc
dec
jne
ss
out
sbb
mov
xchg
fcomp
fisubl
lock
inc
lea
aam
mov
mov
enter
test
jbe
aas
insl
iret
leave
mov
jp
mov
push
lods
in
pop
inc
insb
shlb
lods
sub
jne
pushf
cmp
testb
dec
sub
outsl
movsl
nop
mov
loopne
mov
xchg
in
or
adc
cmpsb
push
add
repnz
not
or
adc
pop
rcrb
jnp
push
fwait
add
cwtl
and
mov
pop
test
push
xchg
or
cmp
sbb
adc
js
mov
inc
es
add
push
stos
xchg
and
scas
add
inc
sub
mov
hlt
sbb
fimuls
mov
pop
mov
jno
popf
fbstp
dec
das
imull
push
add
or
jno
inc
mov
iret
inc
jmp
jnp
cmpsl
adcl
cmpsl
insb
push
dec
jne
insb
mov
test
adc
imul
ss
in
inc
cs
pop
xchg
and
pop
scas
out
xor
sbb
pop
repz
les
pop
test
xlat
insl
sub
outsl
cmp
mov
fistpl
cwtl
push
mov
adc
push
lods
stc
fisttpl
xlat
dec
fisttpl
sbb
or
xchg
push
adc
dec
stos
jl
imul
icebp
pop
sub
pop
stos
cltd
cs
jno
xchg
test
mov
repz
pusha
call
fisubrs
adc
push
xor
jne
sbb
mov
mov
jmp
aas
cmpsl
test
cmc
imul
ret
and
jg
mov
popa
inc
push
dec
jl
push
pop
and
hlt
adc
push
pusha
insl
loop
out
ror
pop
adc
mov
outsl
lret
hlt
jg
push
movsl
sub
dec
adc
jp
in
test
inc
jne
enter
push
jnp
sahf
repnz
shl
jae
aam
ljmp
or
mov
push
add
lcall
mov
mov
ret
ljmp
ss
pop
add
ds
enter
sbb
fisubrl
mov
lods
jne
add
in
jno
push
lods
sahf
loope
insl
rcrb
test
out
inc
xor
hlt
adc
add
add
in
js
mov
pop
push
mov
mov
lds
pop
nop
jl
xor
loope
mov
xlat
std
hlt
pop
pop
std
rclb
mov
adc
xlat
mov
push
jp
push
push
hlt
or
call
jle
push
sahf
je
mov
rol
pop
sbb
sbb
add
push
mull
jge
dec
jl
rcrb
dec
mov
and
lods
mov
leave
shr
cltd
or
mov
mov
jno
inc
xchg
ss
pop
xchg
fwait
addl
mov
arpl
mov
push
ret
aam
xor
jp
mov
inc
movsb
add
cli
dec
leave
jb
cs
lret
shll
nop
hlt
mov
and
enter
mov
mov
adcb
stos
inc
pop
insl
fwait
xorb
xlat
push
ret
cmpsl
aad
add
jns
mov
popa
test
push
pop
xor
xor
fcomps
inc
leave
cmpl
jne
das
push
jns
xchg
rcrb
sti
pusha
mov
add
loope
out
int
dec
aad
or
bound
or
pop
js
add
shrb
faddl
inc
movsb
cwtl
jo
inc
cmp
aam
int3
sbbb
pushf
add
jmp
sbb
inc
mov
std
lret
daa
xchg
pop
ss
mov
stc
mov
jne
ret
xor
imul
repz
sub
cmpsl
xor
push
pop
fsubs
mov
nop
outsl
mov
lods
add
fs
cmp
pusha
cs
cmpsl
std
sar
js
fisttpll
sub
in
xchg
cld
lods
dec
outsl
int3
add
dec
mov
fidivrl
data16
sti
adc
sub
aad
cs
add
add
sbb
and
repnz
mov
repnz
fnstenv
jne
push
push
jp
adc
mov
sbb
dec
mov
loop
std
gs
push
or
popa
and
out
xor
loop
and
mov
loopne
stos
dec
mov
mov
movb
imul
ds
pushf
push
mov
stos
jecxz
dec
jle
in
mov
hlt
lea
test
ret
mov
jae
adcb
aam
or
int
arpl
cld
loopne
xor
add
mov
push
in
dec
mov
push
pop
std
cmpsb
sub
lret
sub
inc
in
add
jns
mov
xor
mov
filds
mov
out
and
es
es
fcompl
in
in
idivl
orb
mov
call
test
mov
mov
es
flds
xorb
cmp
testl
jl
leave
divb
nop
lret
mov
add
mov
lock
adc
dec
xchg
test
outsl
lods
mov
mov
cwtl
mov
mov
sub
and
pop
les
sub
mov
rcr
mov
movsl
fisubl
test
inc
test
fstps
and
jg
mov
xchg
jl
inc
movsb
xlat
iret
ficoms
addr16
mov
loope
shll
cmp
push
mov
dec
sub
dec
add
add
mov
pop
pop
mov
adc
lret
xchg
lock
and
pop
or
and
call
into
or
adc
negb
cmc
xor
incb
aas
popf
jno
jge
xchg
jl
movsb
das
mov
sub
ds
adc
lret
push
and
addb
jle
mov
aad
loop
xor
cmpsl
xchg
subl
fists
cmpsb
dec
es
mov
cmp
in
je
sbb
fadds
jne
out
cmp
xchg
cwtl
iret
push
cmpsl
test
dec
jge
movsl
sbb
xchg
add
mov
push
or
sub
jne
sub
jbe
je
test
addb
jl
sti
fcoml
push
pusha
xor
rolb
sahf
push
add
out
xchg
cmpsl
sub
mov
push
push
loope
adc
pop
mov
cmp
push
test
mov
pushf
cmp
push
inc
sub
sarb
fwait
cmpsb
push
fnstsw
add
inc
xorb
mov
cltd
xor
adc
or
out
push
push
xchg
sub
cmp
lcall
cs
adc
mov
enter
xor
test
and
mov
pop
mov
dec
lods
test
adc
dec
add
jg
sbb
jg
mov
jae
dec
popf
test
outsb
mov
leave
adc
fwait
cmp
movsb
or
inc
sarb
mov
stos
clc
mov
xchg
pop
inc
shlb
jmp
jne
fmulp
jbe
inc
and
mov
sub
leave
mov
jbe
mov
ds
jne
add
movsl
sub
out
adc
bound
xor
or
aas
sbb
jecxz
pop
iret
sbb
testl
xor
mov
jnp
fsubrs
int3
xor
loope
inc
cmp
xorl
jecxz
lahf
xlat
mov
mov
iret
push
dec
nop
pop
sti
jmp
fisttpll
cmc
leave
mov
add
lea
xchg
inc
fistpl
iret
adc
decl
int
addr16
dec
rclb
sub
pop
movsb
daa
jne
and
iret
pop
jne
pop
mov
pushf
pmuludq
pushf
push
ljmp
mov
mov
jp
pop
scas
pushf
and
xor
int
lcall
sbb
out
popf
leave
or
push
mov
insl
xor
inc
frstor
test
push
dec
pop
lahf
out
andb
jb
cld
xor
adcl
int
jne
sbb
stc
movsl
leave
xor
lods
addb
adc
adc
paddb
and
xor
jb
fists
and
scas
push
and
xorb
push
jnp
inc
or
int3
ljmp
ss
or
push
sub
out
and
into
cmp
inc
stos
xor
xchg
inc
sub
mov
scas
add
inc
jo
cwtl
adc
fsub
es
push
mov
sbbl
xchg
or
inc
ljmp
daa
mov
dec
mov
fisttpl
shll
add
cmpsb
dec
mov
addl
das
repz
mov
sub
sub
orb
addl
rorb
les
adc
pop
push
mov
dec
fldcw
sbbb
and
add
and
jne
mov
mov
rclb
jnp
aas
insl
int
mov
addl
les
sbbl
cmc
jge
xor
cmp
insb
clc
incb
in
pminsw
mov
push
movsb
pop
xchg
dec
adcb
rorb
sahf
mulb
xor
inc
mov
xor
mov
aam
lret
push
movsb
sti
sti
mov
std
pop
mov
arpl
nop
xchg
hlt
push
call
or
dec
cmp
fdivrp
dec
mov
test
jg
lds
jne
test
fildll
hlt
sub
test
adc
sub
mov
mov
mov
mov
and
in
insl
push
cld
and
ret
pusha
mov
dec
jns
adc
sub
push
xchg
mov
sub
scas
xchg
and
push
push
cld
pop
add
or
mov
xchg
sarb
insl
sbb
fsubl
xchg
and
sbb
sub
loopne
aam
mov
call
ds
ljmp
les
push
xlat
xchg
inc
cli
les
add
and
movsb
imulb
mov
push
lds
add
in
fildll
pop
rolb
mov
into
sub
cmpsl
stc
lea
sbb
lods
mov
mov
insb
cmc
inc
in
sahf
mov
xchg
jge
movsl
mov
outsb
sub
xchg
mov
pop
bound
insb
and
xchg
pop
or
add
outsl
xorb
mov
push
adcl
clc
jg
cmp
add
ret
imul
adc
adc
mov
test
adc
cwtl
ret
les
sbbl
cmpsl
jl
fisttps
stos
and
mov
and
clc
push
inc
ror
mov
push
cmc
xchg
ss
adc
lret
adc
adc
pusha
mov
insb
jae
lret
imul
rolb
enter
add
push
test
popa
lods
hlt
adc
movsl
push
xchg
sub
addb
enter
cmc
pop
sub
mov
ss
lods
scas
out
pop
sub
and
fdivrp
cmc
shll
mov
sbb
inc
sub
and
pop
sbb
push
out
lahf
aad
sub
and
pop
aad
mov
adc
flds
shlb
inc
loopne
fwait
push
cmp
mov
aas
repz
adc
mov
jmp
mov
adc
sar
in
sub
xchg
dec
jg
fwait
scas
popf
gs
clc
fcoml
push
in
mov
shrl
sti
inc
fwait
xor
xchg
add
mov
loop
rcll
cmpsl
inc
jp
jb
or
xchg
jae
and
hlt
cmp
xchg
shr
xchg
lcall
pop
xor
cwtl
xchg
addb
mov
mov
bound
lods
add
out
pushf
mov
mov
das
arpl
jo
cmovs
dec
mov
lods
and
dec
sbb
and
xor
das
aam
lds
insl
mov
sar
dec
out
add
cmp
sub
sub
lcall
in
add
mov
in
adc
push
mov
int
movsb
call
fsubp
orb
xchg
cmpsb
inc
sahf
pop
scas
cld
loop
push
xor
xor
icebp
sub
cmpsb
adc
scas
mov
dec
out
jmp
jne
in
leave
and
sub
pop
inc
stos
push
inc
xorl
es
out
hlt
sub
lods
je
adc
popa
push
das
pop
arpl
mov
clc
cs
gs
sbb
lret
push
xor
aaa
mov
sbb
lods
xchg
addb
mov
inc
pop
xor
push
test
mov
fsubr
jecxz
pop
jns
adc
mov
mov
inc
sbb
xchg
movsb
nop
fmull
movsb
or
xchg
lods
inc
xchg
hlt
fwait
out
loop
stos
adc
jno
aad
ds
jnp
push
mov
xchg
and
jle
pushf
mov
enter
movsb
and
cmpsl
pusha
mov
scas
pop
fimull
pop
and
hlt
xor
repnz
push
jg
clc
add
inc
les
push
jbe
out
push
add
xor
add
cld
xchg
mov
ljmp
jmp
add
rcrb
mov
mov
add
sub
adcl
stc
or
in
cltd
loope
scas
lcall
push
jmp
adc
or
jge
inc
xchg
mov
jnp
mov
add
sub
jp
repnz
scas
aas
sub
or
sarb
lods
cmpsl
jnp
addl
or
repz
jne
push
mov
dec
xor
xor
xlat
lret
fmul
or
dec
fnstcw
dec
int3
inc
nop
jo
std
icebp
icebp
mov
cwtl
xlat
out
test
mov
popf
xchg
mov
rcll
cmp
jecxz
lahf
mov
cld
roll
test
xchg
push
scas
adc
push
jne
pop
cld
dec
push
lret
xor
mov
add
repz
lods
js
mov
push
xchg
add
jae
inc
push
lods
rorb
mov
mov
cmp
cmp
jbe
mov
adc
xchg
fwait
lcall
ret
sub
mov
push
mov
xchg
pop
lock
mov
lods
movsb
fstps
repnz
jno
sbb
leave
dec
jns
or
orb
clc
sbb
cmp
mov
jne
cmp
nop
cld
or
in
mull
nop
mov
fwait
mov
push
bound
out
stc
lock
les
pop
pop
data16
push
int3
mov
sbb
inc
dec
sbb
shll
lcall
fildll
loopne
add
shlb
push
push
fists
mov
sub
sahf
les
push
mov
fisubl
loope
or
inc
aaa
cmp
mov
pusha
adc
std
cli
push
icebp
cmp
dec
lahf
push
pop
inc
xchg
ret
and
movsb
clc
xor
out
mov
cmp
aam
jne
in
sub
pop
in
ds
call
add
inc
pusha
in
adc
and
inc
jecxz
or
mov
out
hlt
pop
xchg
fs
adc
sub
sbb
push
js
loop
push
add
cmpsl
and
mov
add
pop
and
test
mov
mov
fcoms
mov
or
insl
xchg
cmp
lahf
dec
mov
out
xchg
cmpsb
mov
pop
cmp
xchg
inc
lea
lcall
es
pop
in
mov
scas
xor
or
xchg
sbb
daa
stc
xchg
pop
mov
add
xchg
ffreep
xor
cmp
inc
push
lcall
lahf
xchg
andb
loopne
scas
mov
stos
or
cmpsl
add
pusha
mov
into
mov
mov
jmp
icebp
shl
arpl
push
les
add
jp
sahf
dec
adc
sbb
inc
xor
and
add
ja
fdivrp
push
add
pusha
sti
sub
push
xor
inc
jl
in
loop
jo
push
and
cmpb
ficoml
sub
sub
enter
pusha
dec
pusha
mov
xlat
jns
cmpsb
jbe
pop
inc
in
cmp
repz
and
cld
cmpsl
pop
insb
pop
out
sub
lock
xor
ja
xor
jl
cli
pusha
aas
mov
xor
clc
scas
dec
lods
loope
jg
sub
mov
jle
add
mov
xor
ficoms
rol
xor
add
dec
fists
pop
push
test
mov
lds
popf
nop
jecxz
cmpsl
mov
mov
cli
jp
mov
add
cmp
pop
fsubrl
add
das
mov
mov
jp
or
lods
stos
inc
rolb
pop
mov
mov
pop
das
lods
sub
add
xchg
lret
jne
sti
mov
std
pop
push
std
jecxz
jle
add
mov
xor
cmp
fwait
sbb
adc
inc
inc
out
jmp
ds
mov
adc
aam
cmp
addb
jg
sbb
lock
xchg
adc
fidivrs
mov
inc
xlat
mov
dec
mov
inc
jle
or
mov
subb
adc
add
enter
mov
cmp
sti
xor
or
cwtl
std
popf
pop
or
dec
arpl
test
add
mov
test
add
repnz
add
inc
pusha
mov
mov
or
inc
icebp
shll
cs
dec
das
adc
mov
adc
jne
inc
or
inc
shlb
imul
fildll
sub
jp
sbb
je
lods
sbb
xor
add
stc
cwtl
ljmp
arpl
xlat
sbb
loopne
add
int
or
mov
pushf
xor
jmp
add
out
add
cmpl
rorb
mov
mov
and
jmp
mov
cmc
mov
push
shrb
xchg
into
inc
nop
or
mov
or
lahf
sub
push
sahf
rolb
ret
subl
jo
cmc
inc
add
sti
insb
inc
add
jge
lock
sub
aas
push
push
cmp
gs
stos
push
out
stos
adc
xchg
pop
cmp
pushf
ret
and
ds
jb
idiv
dec
imul
cli
jge
dec
xchg
push
mov
fwait
cld
fmulp
inc
mov
cltd
std
insl
shll
dec
scas
adc
loopne
mov
pop
jo
mov
sub
sbb
xor
pop
arpl
lds
mov
sub
inc
lahf
mov
test
adc
int
std
jmp
mov
cs
jle
jb
pop
mov
ljmp
movsl
and
push
mov
xchg
cmp
adc
dec
mov
pop
adc
mov
cld
jae
push
xchg
orb
xlat
mov
call
dec
jecxz
fisubl
and
jnp
xor
sbb
dec
pop
pushl
cmpsb
xchg
mov
cmpsl
mov
hlt
xor
xchg
jno
adc
jnp
sub
les
pop
subl
pop
dec
inc
mov
shl
dec
fsubl
fisubl
lret
fisubl
roll
movsb
adc
aam
stos
cld
out
loopne
in
hlt
sub
sarl
jbe
jle
or
cmpl
int3
jmp
pop
test
mov
mov
lock
xor
sarb
ja
rcll
jecxz
sbb
xchg
dec
add
mov
fmull
addl
cmc
xlat
push
pop
loopne
fcmovne
mov
filds
nop
mov
jecxz
cmp
add
insb
mov
mov
pop
mov
mov
mov
inc
pop
add
adc
ljmp
mov
test
push
mov
jg
movsb
mov
pop
push
xor
xchg
lods
std
cmpsb
dec
cmpsb
ror
cmp
idivl
insl
jg
add
mov
jbe
orl
repz
jle
or
pop
sbbl
testb
or
adc
shll
sub
in
sahf
or
xor
js
mov
stos
dec
or
and
out
les
mov
rcll
pop
mov
aam
jne
pop
add
cmc
orb
sbb
adc
cld
and
sbb
cmc
std
inc
clc
stc
jecxz
cwtl
es
xchg
ljmp
test
rolb
test
adc
pop
inc
mov
testb
lret
popf
pop
jge
popa
hlt
push
mov
popa
jnp
notl
sbb
sub
xchg
hlt
sub
cmpsl
cmpl
pop
in
leave
jae
push
and
fisttpl
les
or
insl
mov
cmp
cmp
scas
xchg
lods
in
call
pop
sbb
inc
xchg
xchg
push
mov
add
cmp
loop
bound
loop
lret
pop
mov
sbbl
ret
dec
xor
pop
jne
cmpsl
pusha
jecxz
push
movb
stos
sub
push
shll
fmulp
mov
rorl
push
gs
mov
stc
outsl
jle
cmova
inc
mov
ds
or
push
stc
inc
mov
sbb
lods
mov
daa
clc
push
in
enter
adc
repz
dec
in
adc
bound
movsb
faddl
lods
lret
fadds
or
std
xchg
push
test
data16
cmpsb
cmc
inc
or
sbb
mov
cwtl
in
pop
pop
repz
mov
pop
xchg
daa
inc
cltd
cmpb
xor
jae
cmpsb
sub
ror
jae
pop
and
mov
jo
and
sub
js
pop
out
xor
jle
insl
jl
aaa
lcall
mov
out
iret
adc
lret
and
xchg
jl
leave
inc
xorb
imul
imul
sbb
dec
hlt
shrb
fcomi
xchg
add
ja,pt
lret
sarl
xchg
mov
sbb
jge
cmp
sub
dec
mov
xor
ss
sahf
xchg
mov
cmp
cmc
mov
aaa
dec
imul
test
cmc
jge
gs
mov
dec
jo
sahf
sub
movsl
pop
jle
push
sbb
js
mov
push
call
iret
mov
fwait
sarl
add
push
push
or
aad
mov
das
fcomps
push
mov
mov
add
pop
sbb
ror
sub
lret
adc
loope
sub
aas
dec
xor
add
jne
test
stc
repnz
and
push
adc
lea
cmp
nop
leave
mov
lods
adc
movsb
hlt
sahf
sbb
into
add
xor
xor
mov
adc
je
fsts
sub
daa
int3
adc
mov
hlt
jmp
push
mov
xchg
adc
fisubrs
rcl
lock
mov
push
mov
fdiv
lret
lahf
adcl
inc
mov
pusha
test
xchg
cmp
daa
sahf
cmp
icebp
jle
mov
dec
mov
jmp
imul
mov
cmpsb
hlt
ljmp
movsb
je
push
movsb
lock
or
mov
mov
sti
pop
aad
mov
adc
ds
add
in
rcr
pusha
push
pop
in
test
pop
mov
and
cmpl
dec
in
mov
push
aas
repz
enter
fnsave
and
dec
and
push
lret
mov
mov
ja
add
jae
es
xchg
insb
adc
fcompl
fstl
addr16
ljmp
sti
ret
cld
sub
inc
mov
leave
inc
cmpsl
fadd
mov
push
sbbl
xorl
sarl
xorb
neg
or
ja
sbb
test
push
add
push
mov
aad
leave
or
inc
sbb
hlt
push
pushl
sti
cmpsl
inc
push
dec
mov
ds
jle
jae
cld
movsl
dec
add
repz
cmc
pusha
lods
sub
inc
mov
jge
addr16
jns
xor
inc
pushf
push
push
movsb
inc
lods
fcoml
mov
push
test
shl
mov
es
loopne
xor
mov
xchg
dec
mov
jb
aam
add
addb
or
inc
lret
hlt
ret
jl
sbb
icebp
jne
pushf
add
push
xor
jg
into
sub
dec
fstpl
fdiv
pop
lods
ja
cmp
arpl
inc
add
cmp
xchg
mov
test
call
aas
mov
jo
mov
push
dec
cmp
je
cmpsb
xchg
and
pop
cli
out
sti
shl
cs
test
dec
daa
test
push
pop
add
mov
scas
cmp
mov
sub
clc
xor
mov
jns
mov
sub
add
insl
mov
or
cmc
lret
and
subl
push
sbb
jle
dec
push
test
jne
mov
adc
js
sub
or
sti
js
push
push
fsubrs
xchg
pop
adc
adc
dec
outsl
cwtl
or
adc
ret
push
sbb
adc
jne
mov
adc
es
pop
sbb
push
push
andl
inc
cmp
jne
in
addr16
xchg
sub
aas
mov
nop
shll
mov
test
mov
loopne
inc
fistl
mov
aam
xchg
xor
mov
cmp
jecxz
inc
lds
pop
out
xchg
fistps
stos
rcll
mov
roll
jne,pn
loop
mov
jle
jnp
adc
data16
mov
jmp
jecxz
cmpsl
or
stos
mov
xchg
insl
sbb
icebp
adc
out
mov
ret
dec
sbb
cmp
inc
xchg
and
fadd
pushf
jbe
rcrl
mov
pop
mov
and
cwtl
mov
pop
cmp
dec
test
roll
add
push
mov
mov
and
insb
cmp
cwtl
aad
popa
ljmp
repnz
enter
mov
pop
mov
lsl
inc
sbbb
fisttps
adc
scas
shll
loop
mov
test
scas
sub
mov
add
imul
add
lods
cmp
xor
jne
sbb
in
pop
into
repnz
mov
mov
adc
rclb
hlt
mov
inc
loop
int
rolb
lods
repz
fmulp
dec
push
aad
movsl
rcl
mov
mov
mov
rorb
nop
inc
sti
adc
mov
mov
ss
sub
dec
push
std
jb
adc
sarl
dec
fldl
dec
gs
icebp
repz
xorb
movsl
pop
push
pop
add
xchg
fisttpll
add
cmpsl
add
aad
pop
or
mov
cmc
jnp
sbb
shll
out
stos
hlt
sbb
push
jnp
xor
outsl
enter
dec
fnsave
jns
mov
sbb
cmp
decl
and
popa
sub
or
arpl
pop
mov
test
xchg
mov
pusha
hlt
and
jl
mov
and
test
idiv
or
push
adc
adc
or
jbe
jnp
inc
mov
xchg
cmp
or
movsb
std
mov
adc
sbb
mov
stos
mov
inc
inc
push
mov
inc
adc
sub
call
les
xor
daa
add
addb
jne
inc
insb
dec
icebp
xchg
fldt
add
push
xlat
nop
iret
hlt
scas
gs
repz
test
cmovl
jnp
adc
jne
bound
add
add
shrl
loopne
aad
pop
decl
sub
dec
loop
loope
inc
add
leave
cmpsb
test
dec
das
inc
hlt
inc
add
hlt
mov
xchg
jne
int
pop
jmp
repnz
inc
in
into
xorb
nop
cmp
add
les
mov
loopne
icebp
mov
mov
jle
sbb
xchg
mov
into
mov
add
movsb
ss
in
sub
ljmp
nop
mov
adc
std
jge
shrb
xor
ficoml
sub
icebp
jge
xchg
ds
sub
aas
mov
lahf
xchg
hlt
sub
ret
or
test
ds
hlt
push
add
shlb
cpuid
sub
in
mov
dec
mov
pop
jg
mov
xchg
andb
adc
jnp
pop
pop
and
mov
dec
loop
scas
leave
dec
xchg
lret
xchg
dec
sub
out
out
add
pop
jbe
divb
enter
popl
inc
push
cltd
mov
add
add
fdiv
fbstp
and
inc
scas
inc
mov
xor
cmp
mov
movsb
mov
sbb
gs
je
scas
ja
jl
rol
pop
adc
test
rcr
scas
inc
jge
loop
mov
into
dec
pop
aad
mov
xchg
mov
inc
andb
test
jno
fldt
sbb
jmp
sbb
inc
adc
mov
arpl
scas
test
mov
fmul
std
sbb
cmpsl
lock
iret
testl
push
shrb
pop
mov
ljmp
push
cltd
shll
lds
jnp
out
push
jmp
cmp
sahf
mov
push
subb
inc
add
enter
dec
adc
mov
mov
fstp
enter
mov
divb
leave
rorl
pop
into
xchg
clc
cmpsl
pop
nop
imul
fdivr
es
scas
stos
imul
sub
lods
xorb
ja
iret
js
ds
je
add
icebp
iret
mov
push
out
sbb
jl
lock
pusha
shrl
add
in
push
scas
imul
dec
int
movsb
mov
fdivr
mov
push
sbb
out
frstor
push
jne
adc
std
mov
pop
mov
stos
ret
pop
jnp
push
in
xchg
pop
sbb
fmull
xchg
outsb
mov
adc
movsl
push
add
mov
or
xchg
dec
mov
cld
mov
dec
enter
push
in
lock
mov
mov
cmp
arpl
cld
adc
loopne
mov
xlat
leave
sub
nop
aad
jbe
pop
xchg
dec
ficompl
sarl
mov
jl
cmp
stos
mov
rcr
jp
rorb
jns
notb
jno
sbb
cmp
sub
leave
sahf
add
test
xchg
inc
lods
mov
add
cld
loopne
cli
mov
movsb
inc
imul
pop
lret
in
mov
bnd
xchg
ds
xchg
movsl
add
push
fmull
and
faddl
imul
out
js
xchg
lahf
add
es
sub
pop
enter
cmc
xchg
scas
inc
shll
inc
mov
mov
pushf
movb
das
mov
les
pop
dec
or
es
ljmp
fadds
test
lret
hlt
loope
mov
dec
loopne
add
xor
lods
mov
mov
fbld
add
inc
add
xchg
ret
xor
out
jl
movsb
sbb
aad
aaa
sub
dec
xchg
xor
into
fcoml
push
xchg
add
xchg
jns
fsubrl
mov
andl
adc
popa
mov
or
and
dec
and
xchg
sub
loop
sbb
call
nop
jmp
jo
aad
fisubrs
and
lea
call
cli
outsb
pushf
mov
js
jns
add
test
adc
add
inc
fists
mov
jne
push
and
pop
shr
cmpsb
pop
jecxz
clc
cmp
pop
mov
adc
pop
add
lret
adc
incl
mov
push
cmp
pop
mov
stos
mov
int
cli
adc
imul
or
and
xor
pop
mov
cmpsb
adc
data16
xchg
jmp
adc
jae
adc
mov
scas
jno
mov
insl
sbb
hlt
nopl
cli
roll
mov
xlat
dec
cmp
sbb
mov
pop
xor
lea
mov
adc
xor
mov
ret
in
fisubl
fisubs
ror
das
test
jne
rcrl
mov
mov
or
jp
pop
sub
or
outsl
leave
orl
cmpsb
orl
lcall
outsl
rclb
xorb
cwtl
push
rcr
fcompl
cltd
je
enter
enter
subb
sti
insb
mov
sahf
and
cmp
orb
add
popa
and
sub
adc
mulb
dec
pop
pop
nop
scas
ss
orb
popf
loopne
decl
and
push
test
lret
inc
xor
lock
ds
sub
mov
cli
outsl
inc
or
jl
xor
and
cmpsl
jne
dec
push
std
mov
shrb
pop
decl
jns
and
jns
push
sbb
shlb
and
mov
xchg
and
xchg
or
mov
adc
push
movsl
sbb
xchg
insb
test
out
es
adc
pop
mov
inc
cs
mov
push
sub
out
sbb
scas
sub
jge
mov
pusha
leave
mov
insb
mov
xchg
jp
ljmp
pop
mov
sbb
test
cmp
outsb
jne
sbb
insb
jecxz
pop
adc
sub
mov
icebp
ss
inc
mov
pop
jne
or
cmc
repnz
mov
mov
jg
rorb
fcomip
mov
stc
pop
push
mov
loopne
ror
xor
lcall
insl
mov
or
repz
enter
add
mov
adc
or
pusha
nop
hlt
lods
idivb
mov
pushf
sub
mov
hlt
imul
pusha
jp
push
or
mov
xor
cmpsl
andl
sahf
rcrl
sbb
or
nop
mov
dec
jnp
popf
shrl
adc
jb
fdiv
inc
mov
dec
pushf
xor
cld
pop
pop
stc
lds
shll
jge
add
push
xor
jns
dec
xor
imul
stc
pop
test
or
out
cld
je
mov
mov
test
mov
mov
lods
dec
fdivs
mov
adc
fsub
bound
ds
hlt
sbb
shl
inc
xor
mov
jmp
cltd
lret
mov
hlt
cltd
aaa
cmp
xchg
adc
push
and
cmp
sbb
pop
movsl
stos
aam
push
mov
scas
mov
lock
pop
jl
inc
shll
push
outsl
idivb
in
mov
cmc
hlt
mov
loopne
sub
fs
iret
fs
sahf
cmpb
outsl
and
repnz
mov
mov
imul
cwtl
repnz
inc
sub
xchg
fsubr
sbb
pop
add
adc
adc
je
xlat
adc
repz
push
leave
pusha
mov
nop
jne
in
add
xchg
jno
jg
popf
sub
in
push
mov
fsubrs
xchg
inc
mov
push
pop
pop
mov
xor
frstor
mov
jno
xchg
fstl
pop
test
sub
loopne
hlt
adc
imul
and
mov
out
orb
insb
inc
adc
mov
ss
xor
dec
sti
dec
ret
pop
adc
roll
ret
daa
xorb
sub
push
add
scas
cmp
pop
loopne
pop
hlt
mov
push
pop
cwtl
sahf
inc
xchg
xor
sbb
lret
ficomps
jge
call
jne
enter
and
add
adc
push
mov
jns
add
or
add
fistpl
lods
ja
std
scas
xchg
jg
xorl
pushf
mov
mov
or
pop
call
xchg
bound
imul
cwtl
punpckhdq
jle
mov
test
pop
nop
scas
stos
aad
inc
or
stos
into
pusha
fcoml
xchg
es
repz
mov
aad
jno
popf
out
mov
mov
pushf
sbb
xor
pop
pushf
lret
je
cmpsl
faddl
fbld
adcl
sahf
mov
lret
push
xor
xchg
ret
pop
sbb
bound
dec
test
addl
stos
stc
fbld
add
fwait
int
loope
in
sahf
sub
sbb
clc
sbb
xchg
daa
mov
shl
or
jmp
cltd
imul
push
or
fcmovne
xor
mov
or
scas
mov
add
mov
cli
mov
dec
clc
lcall
loope
data16
test
rol
sub
loope
push
mov
mov
out
pop
jbe
push
test
dec
inc
mov
scas
push
pop
hlt
das
pop
loope
push
movsl
insb
popa
pop
outsl
mov
pop
cmp
rcll
or
xor
lods
pushf
xor
adc
push
loope
movsb
jl
xchg
and
repnz
jle
cmp
jns
jle
sbb
add
sahf
dec
xor
sbb
cltd
and
movsl
fisttpll
add
add
push
lods
jne
pusha
test
shll
and
repnz
pushf
std
aas
cmp
push
sub
sub
imul
addr16
or
adc
push
sub
fidivrs
lods
fimull
iret
ret
shll
mov
cmp
dec
inc
aas
jle
mov
imul
or
gs
mov
pop
arpl
xor
push
push
sub
pop
add
inc
arpl
dec
das
js
push
mov
cmc
adc
icebp
lea
test
lcall
xchg
mov
aas
ljmp
jge
test
cli
int3
rcl
add
insl
iret
fcomps
mov
out
mov
sub
test
xlat
add
xchg
enter
jle
nop
sti
divl
dec
jecxz
cmp
mov
push
cmp
rolb
jmp
cmpsl
mov
push
int
icebp
jne
addl
add
stos
hlt
xchg
insl
in
icebp
jne
xchg
add
mov
test
adc
jmp
stc
sahf
xchg
sahf
and
cs
int3
dec
mov
dec
xchg
lret
addr16
insb
add
movsl
pop
or
nop
fmul
enter
mov
icebp
decb
adcl
cmpsl
sub
testb
mov
mov
out
movsl
les
shl
das
scas
daa
mov
inc
test
mov
jne
cli
lret
sahf
push
adc
inc
cwtl
mov
mov
jg
in
es
xor
pop
adc
cmp
and
push
mov
bound
lock
nop
fnstsw
mov
insb
pop
jns
cwtl
mov
pop
xchg
pop
mov
test
int3
test
jg
loopne
adc
push
mov
daa
sbb
cmp
shl
fildl
es
sub
mov
inc
xchg
xor
std
dec
imul
ret
iret
out
insl
test
xor
pop
jb
sahf
mov
push
popa
leave
cmp
mov
lcall
hlt
and
xchg
and
inc
enter
jp
fists
sub
sub
jns
pop
jecxz
scas
cwtl
and
rorb
popf
add
pop
add
repz
cmpsl
xor
inc
aas
inc
and
xchg
mov
in
fistpll
sub
pop
rorl
mov
jle
icebp
sti
imulb
sub
cmpsl
negb
loope
jecxz
aas
jns
sbb
out
xlat
inc
fstl
loop
add
inc
flds
rorb
test
xchg
lret
pop
outsb
fisubl
adc
add
pop
dec
jae
stos
or
mov
shl
push
cld
aad
xchg
xchg
sahf
test
mov
and
decl
rcrb
and
dec
sahf
sbb
nop
test
and
cmp
sbbl
jne
jecxz
mov
or
imul
cmp
jne
sahf
int3
inc
push
jl
dec
sub
in
push
popa
push
or
push
jg
inc
jne
mov
popa
sub
cld
pop
popf
add
mov
movb
in
mov
lock
sub
cmp
popa
jb
jo
mov
pusha
add
sti
test
xor
stos
jne
jnp
sbb
test
and
mov
lcall
fsubrl
sub
call
stos
jp
inc
loope
call
arpl
fs
loope
int3
scas
jne
xorb
or
repz
mov
test
mov
fcompl
xorb
and
sbb
mov
mov
je
pop
arpl
and
cli
movsb
repnz
mov
push
imull
fdivp
sbb
test
sub
pop
hlt
fmuls
bound
push
sbb
outsl
xorb
arpl
inc
jp
ljmp
inc
push
jmp
or
jne
sub
lcall
nop
stc
ja
out
aas
loop
jbe
sub
mov
push
push
aaa
dec
addl
sbb
das
inc
xchg
aad
je
jg
pushf
in
sbb
xchg
jl
jmp
icebp
push
cmp
push
cmpl
rcl
mulb
dec
repnz
imull
sub
adc
push
mov
mov
cmpsb
das
add
movsb
inc
mov
insl
pop
mov
and
fs
pop
mov
jne
cs
add
inc
aam
dec
jae
xchg
sub
ret
xchg
fcoms
jne
pop
mov
ljmp
pushf
into
mov
pushf
xor
shrl
inc
int
mov
repnz
pop
adc
into
mov
fisttps
sbb
shl
imul
mov
stc
xor
adcl
ret
or
jb
add
mov
mov
adc
cmp
push
jbe
stc
mov
gs
test
data16
cmpsl
and
inc
mov
sahf
std
push
stos
icebp
xor
add
loopne
call
inc
mov
std
pop
lods
stos
jne
mov
mov
push
sub
das
movsb
xor
adc
jg
testb
pop
dec
shl
jmp
add
test
addl
ret
aas
inc
jle
repnz
mov
enter
jmp
mov
pop
shrb
jae
stos
and
xchg
les
dec
das
or
mov
data16
leave
add
mov
push
addr16
loope
sub
call
addr16
mov
add
hlt
lahf
std
jp
jbe
and
and
pop
adc
xor
mov
pop
js
mov
jle
les
dec
dec
stc
cmp
jmp
fdivrs
push
outsl
subb
out
hlt
or
xor
or
mov
in
cmp
add
pop
js
cwtl
lods
mov
movsb
sub
xchg
adc
push
pop
inc
loop
pop
mov
pop
popl
lea
inc
xchg
jg
repz
add
or
cmpsl
arpl
inc
or
aam
pusha
test
test
mov
pop
or
xchg
insl
into
push
gs
rorl
pop
stos
mov
or
std
or
jecxz
mov
jp
lods
aas
lcall
out
sub
popa
call
cmpsb
fwait
dec
mov
mov
dec
jbe
test
imul
daa
orl
pop
lods
sub
gs
add
decb
loopne
xchg
mov
mov
mov
mov
xchg
and
test
pop
mov
sub
notb
jae
add
movsl
hlt
or
lds
dec
mov
hlt
push
stos
xchg
leave
add
mov
std
rorl
or
mov
cli
push
xlat
add
int3
jg
push
cs
pop
es
mov
sub
push
xchg
movsb
movsl
sub
xchg
loopne
push
mov
push
imul
jno
lods
fs
sub
loope
jmp
jmp
jge
ljmp
mov
enter
mov
jl
movsl
inc
pusha
adc
in
andl
scas
enter
movl
inc
dec
dec
movsb
clc
add
xor
mov
shll
mov
mov
outsl
mov
dec
je
mov
mov
jnp
fists
sub
in
mov
dec
popa
adc
mov
es
jg
test
sub
hlt
cmp
lods
cwtl
mov
and
mov
outsl
pop
cltd
pop
cld
loopne
mov
pusha
inc
sahf
mov
negl
sub
je
rclb
gs
mov
test
les
mul
pop
jge
es
cmp
loope
jecxz
inc
push
xchg
cwtl
mov
xchg
inc
hlt
scas
inc
sbbb
and
sbb
sti
out
std
inc
xchg
mov
mov
or
call
inc
arpl
test
std
inc
movsb
loopne
jg
enter
mov
xor
into
rorb
in
inc
mov
jl
out
outsl
mov
andb
push
repnz
ljmp
div
mov
jns
mov
dec
xchg
lea
rclb
jl
jae
and
xchg
les
pop
imul
push
call
and
loop
add
lods
jl
cmp
or
add
mov
mov
std
inc
or
lods
ja
adc
lods
add
sti
lock
test
dec
test
mov
adc
xchg
mov
sub
sbb
ret
inc
test
add
pushl
stc
xchg
cwtl
cmp
les
into
movsb
loope,pn
mov
pop
mov
pusha
push
mov
scas
jle
lret
jne
adc
mov
and
jecxz
jmp
loopne
ljmp
std
jmp
repz
sti
jp
inc
adc
aaa
xchg
and
leave
addps
pushf
pop
dec
clc
fstps
cltd
and
dec
inc
jg
sub
pop
popf
inc
shll
lahf
hlt
dec
leave
push
into
mov
insb
cmp
pop
ljmp
cmp
sti
test
shll
cmpsb
jne
jg
div
cmp
filds
aad
int3
aas
nop
loope
cwtl
sub
jns
jno
pop
jp
jg
mov
pop
mov
ljmp
ja
ret
adc
jl
sbb
icebp
popa
cld
aas
rcll
push
mov
dec
and
movsb
mov
mov
jle
adc
or
sarl
ror
xor
sub
jno
hlt
dec
xchg
les
dec
sub
out
sbb
xchg
push
and
pop
mov
cltd
xor
xor
in
rorb
flds
mov
jbe
jge
mov
inc
pop
add
xlat
inc
aas
sub
mov
xchg
sbbb
sub
fists
xorl
repnz
pop
leave
mov
jmp
jb
sub
scas
paddq
nop
mov
lods
sbb
scas
hlt
loopne
jae
dec
lods
pop
ja
icebp
cmp
xchg
mov
mov
icebp
pop
addr16
push
insl
out
push
int3
mov
loopne
inc
mov
xor
dec
mov
or
adc
repz
es
out
and
rorb
dec
cs
outsl
add
test
cmpsl
enter
hlt
pop
pop
enter
andb
pop
inc
rorl
scas
ja
int3
sahf
sbb
insl
jne
push
movhps
mov
clc
out
or
add
jne
nop
pop
in
pushf
in
dec
sbb
addb
xchg
or
mov
popf
and
jnp
pusha
nop
inc
call
lock
inc
mov
mov
mov
jp
push
sub
sbb
addb
lret
or
enter
jl
mov
cmpsl
into
dec
cld
mov
sbb
data16
inc
or
xchg
sub
jmp
mov
push
das
testl
loopne
jno
jo
adc
outsl
out
scas
cmp
jg
popa
leave
push
or
pop
mov
fcoml
mov
out
pop
push
sub
xlat
cwtl
xor
stos
enter
mov
idiv
mov
push
push
ret
dec
sub
hlt
xor
es
jnp
js
inc
add
lods
mov
sbb
stos
mov
cmc
je
lds
outsl
dec
loope
sbb
lcall
cmc
cmp
and
inc
fmull
xor
adc
rolb
mov
push
leave
cmp
lret
pop
adc
call
xchg
pop
adc
pop
out
cmp
mov
jge
leave
nop
and
xor
sub
imul
push
leave
hlt
jmp
jne
imul
fstpl
push
pusha
jne
adc
inc
std
push
out
mov
stos
rolb
sub
hlt
imul
nop
xchg
or
push
mov
mov
movsl
lock
add
sub
xchg
lcall
in
jmp
mov
and
inc
inc
dec
mov
dec
push
jmp
dec
iret
cmp
add
mov
imul
and
push
add
sar
in
pop
mov
bound
mov
test
pop
leave
xchg
cmp
add
lcall
fsubl
pop
fidivl
inc
fistl
call
mov
jl
mov
jl
out
mov
pop
and
xchg
movsl
mov
or
clc
filds
xchg
hlt
test
cli
ljmp
das
cwtl
cld
fdivl
sahf
ret
xchg
fcompl
inc
cmpsb
hlt
pop
setp
mov
je
stos
cld
inc
into
push
pop
scas
inc
int
sahf
or
and
jle
pop
and
repnz
test
xchg
sub
mov
loop
arpl
data16
sub
outsl
adc
xor
dec
hlt
jno
test
pop
test
popf
dec
fs
add
jnp
mov
aas
das
push
movb
sbb
ljmp
sub
mov
insl
jno
lock
dec
stc
cmp
lods
mov
roll
test
pop
cmp
bnd
enter
iret
test
push
mov
test
inc
mov
imull
add
cmp
cld
test
dec
xchg
ret
inc
jl
pop
hlt
test
sbbl
jno
enter
mov
dec
push
adc
add
bound
dec
call
mov
popa
leave
jg
dec
adc
jo
xorl
and
push
arpl
jmp
mov
cli
jb
jp
movsl
adc
adc
cmp
dec
pop
lods
rorb
pop
std
lods
int3
add
mov
jo
out
iret
bound
xchg
add
cmpb
mov
pop
inc
jne
pop
cwtl
pop
mov
hlt
fiadds
ja
sub
pop
loop
jmp
or
xlat
mov
les
cmpsl
jle
into
aad
xor
into
and
and
jne
loop
pop
int3
cmp
es
hlt
push
lds
mov
sbb
stc
or
cld
xchg
fbstp
fidivs
pop
xor
mov
mov
xor
cmpsl
ret
xor
mov
adc
idivb
cmp
orb
hlt
push
movsl
xchg
lahf
fldt
rclb
sub
xor
test
pop
mov
jnp
xchg
cld
push
lret
pop
and
fst
neg
fsubl
inc
test
int
mov
cltd
arpl
shrb
mov
jecxz
arpl
out
shrl
jb
mov
cmp
sub
outsl
loopne
sub
push
std
outsl
cmpsl
imul
andl
mov
push
xchg
add
arpl
add
sub
ds
loope
test
dec
clc
and
jne
or
scas
mov
add
sub
push
out
add
enter
fdivl
mov
clc
adc
out
inc
cs
fcompl
or
jg
shr
sub
lods
comiss
nop
jno
hlt
lcall
jp
mov
pusha
push
xchg
and
mov
mov
imul
mov
gs
or
mov
push
loopne
fsubr
ss
or
mov
jb
cmpsl
insl
push
subl
mov
push
add
pop
test
cmp
repz
dec
push
add
clc
jne
ret
cmp
cmp
xor
add
arpl
or
mov
cmp
inc
sub
pop
mov
pop
cmp
dec
scas
repnz
mov
test
mov
jbe
cli
dec
xchg
jne
stc
popf
test
and
adc
notl
jne
cld
clc
dec
pop
mov
xchg
jg
filds
loopne
faddl
sahf
dec
call
into
jo
xor
dec
add
jne
sarb
push
cmpb
idiv
int3
shlb
add
negb
outsb
dec
mov
and
push
dec
fidivrs
xchg
push
inc
sbb
adc
dec
add
adc
pop
scas
jo
lcall
aam
popl
pop
lret
lds
jmp
mov
rcl
pop
les
cmpsb
inc
add
dec
cmc
pushf
mov
and
push
push
lcall
fistps
cmp
hlt
add
iret
outsl
push
sbb
loopne
dec
mov
sub
enter
orl
mov
aam
dec
push
insb
pop
mov
insb
lcall
aad
mov
dec
adc
fsubrs
add
out
add
insl
movsl
adc
stos
inc
std
jne
leave
mov
xor
add
ficoms
push
and
mov
push
hlt
mov
inc
xorl
add
les
fs
dec
loope
lods
push
xorl
inc
ror
cmpsb
cwtl
jnp
jno
add
pop
mov
or
cmp
mov
lds
addl
loop
push
lock
stc
shrl
nop
pop
lods
jp
cwtl
lods
inc
mov
lds
in
mov
sbb
idivl
adc
fstpl
mov
mov
aam
sub
je
jns
mov
jecxz
pop
or
fmull
fcomip
mov
nop
adcb
jne
add
nop
lahf
in
jmp
adc
js
mov
stos
sub
in
jl
lret
iret
outsb
lret
frstor
inc
or
hlt
cmpsl
lahf
cmp
mov
xchg
adc
imul
fdivl
pop
sub
testl
lods
lock
jno
inc
and
push
fadds
push
xor
ja
push
ljmp
popa
loopne
insl
outsb
loope
sub
das
and
adc
push
out
or
fsincos
adc
rcll
mov
ds
mov
fsubrs
pop
sub
mov
sbb
mov
imul
mov
or
or
sti
inc
cltd
push
add
mov
lds
into
jg
cmp
hlt
mov
enter
arpl
inc
or
and
fldl
pop
jne
cmp
xor
cmc
nop
test
sbb
inc
jno
sub
xlat
insl
lcall
cmp
test
cmp
push
xchg
mov
decb
ljmp
cmp
jne
stos
push
xchg
dec
add
inc
xchg
loop
cli
dec
and
pop
aam
mov
sub
adc
cltd
imul
and
daa
xor
cli
or
cmp
ror
sub
sti
in
pushf
in
outsb
adcb
sbb
sub
popf
out
push
out
js
push
lret
loopne
sub
inc
or
out
adc
sub
mov
scas
xchg
cmc
adc
mov
add
jne
inc
popa
jbe
ret
add
in
andl
mov
mov
jne
sub
int
add
jp
push
mov
hlt
sbb
in
stc
cmp
mov
popf
adc
add
push
mov
adc
popf
jb
adc
or
gs
or
sub
in
popa
inc
add
xor
repnz
jl
mov
push
pushf
inc
shrl
pop
push
or
add
hlt
imul
xor
push
movsb
test
jne
cmpsl
lret
add
jle
or
aam
mov
and
sub
cmp
xchg
fcoms
add
adc
shlb
andb
rcll
pop
in
into
and
ss
popa
dec
imul
cmp
or
fbld
lret
movsb
stos
loope
lret
mov
lret
mov
aam
mov
mov
cmpsb
jmp
testl
xor
dec
cs
imul
stos
cmp
pop
inc
mov
sbb
imul
jmp
jne
mov
outsl
cmpsb
int
sbb
dec
add
sub
add
xchg
cmp
xchg
cmpsl
mov
add
add
jl
icebp
subb
insb
loop
push
ljmp
lret
mov
stos
or
call
pushf
and
jl
pop
pop
sti
call
pop
cs
arpl
in
stos
mov
mov
adc
dec
pushf
pop
or
push
int
sbb
push
stos
sti
mov
add
adc
imul
insl
jno
pop
inc
mov
loope
enter
inc
add
fistl
push
subb
and
inc
call
jne
or
cli
jo
icebp
mov
jle
push
dec
add
nop
xor
jl
jmp
pop
jg
adc
out
push
inc
mov
jbe
ljmp
and
inc
add
xchg
xor
pop
loop
sbb
lock
das
les
je
sub
lret
fnsave
inc
adc
push
mov
sub
adc
loop
cwtl
fisubs
fincstp
or
jb
lret
mov
mov
sbb
movsb
jns
gs
xchg
inc
in
aad
cwtl
out
movsl
mov
sub
daa
dec
or
repz
sbb
xchg
mov
inc
sub
dec
rolb
push
jmp
sbb
lcall
in
pop
mov
aas
push
rcl
sub
popf
pop
and
mov
imul
sub
inc
push
test
movb
nop
ret
dec
andb
pause
shl
rorb
sub
pusha
ret
enter
xor
jno
push
hlt
andl
cmp
sbb
mov
nop
ja
inc
mov
sbb
inc
sbb
or
sub
hlt
pop
cmp
scas
dec
sub
add
jb
xchg
add
push
pmaxsw
repnz
out
scas
jb
les
out
stos
lcall
xchg
jne
cmp
sub
cmc
in
cmpsl
aam
scas
push
pop
jecxz
ret
vpaddb
cltd
fucomip
movsb
fmull
pop
pop
test
add
mul
xchg
rcrl
cmp
hlt
lods
cmpsl
push
enter
mov
push
mov
ret
cmp
jne
pusha
add
scas
imul
inc
and
adc
pop
jb
es
push
mov
inc
xchg
cmp
inc
mov
sbb
sbb
xorb
ret
mov
pusha
mov
fcompl
mov
out
pop
and
push
or
add
fimull
xchg
sbb
rorl
scas
push
mov
subb
lea
popa
subl
cli
xor
mov
addb
push
mov
dec
push
mov
and
int3
cmp
inc
add
incb
shrb
inc
rorl
out
loope
enter
jne
mov
push
mov
sbb
hlt
cmp
popa
shrl
lcall
shrl
mov
jno
ficoms
pop
push
push
cltd
arpl
int3
mov
push
xor
dec
mov
xor
add
xchg
aam
cwtl
test
in
or
xchg
adc
test
fucomip
rorb
cmpsl
xchg
call
add
push
mov
nop
push
sbb
jge
mov
loope
mov
adc
and
ljmp
fcomp
jns
mov
cmc
addb
sub
cld
dec
insl
xchg
and
mov
sti
daa
sub
test
ret
fucomip
jnp
jp
sub
jne
dec
add
and
outsb
mov
testl
push
fisubs
lret
mov
daa
ja
mov
loopne
inc
mov
inc
inc
xchg
stos
out
gs
dec
or
mov
add
inc
adc
stos
movsl
lock
scas
pushl
aad
sub
lock
fidivs
or
pop
iret
jl
scas
nop
jecxz
cmc
sub
jnp
mov
mov
sahf
jmp
out
jne
adc
outsl
cmp
loop
pop
arpl
push
rcll
cmc
cwtl
push
hlt
js
dec
test
cmp
jbe
mov
addr16
lcall
cmp
or
adc
popf
rorb
or
push
cli
lods
into
push
mov
cltd
inc
dec
enter
pop
jne
inc
jnp
lret
mov
sub
mov
push
add
xchg
inc
or
jle
sar
lcall
pop
gs
hlt
aas
inc
mov
push
fld
sub
js
popf
lret
add
dec
push
mov
mov
jo
add
jl
ffreep
popa
scas
dec
jne
ds
test
lods
mov
pop
xor
sbb
outsl
add
fstpl
das
dec
enter
mov
ret
sub
and
int
out
popa
sub
lahf
out
into
fldenv
inc
lcall
mov
int
xchg
lods
jmp
dec
add
cmc
sbb
pop
and
pop
out
dec
mov
sub
jbe
decb
jne
repnz
add
cmp
nop
jo
jo
dec
mov
xchg
sbb
adc
pop
jge
sbb
jno
lahf
jne
jmp
jl
icebp
pusha
cmp
xchg
mov
jge
add
xchg
dec
xor
dec
lods
stos
lret
cmp
pop
jo
push
or
add
sub
mov
dec
mov
push
mov
cli
xchg
and
add
mov
jmp
adc
cltd
dec
enter
xchg
xor
sub
nop
cmp
cmpsb
push
negl
jp
movsl
mov
mov
imul
or
add
jnp
pop
addb
pop
sub
inc
mov
aad
sti
inc
jae
add
rorb
call
adc
loop
fidivs
scas
xor
es
pusha
cld
lock
jne
push
aam
add
pop
sbbl
mov
int
xchg
push
cmp
sbb
or
inc
adc
fcoml
loope
add
jnp
std
dec
cmc
fdivs
mov
mov
inc
mov
add
sahf
inc
ljmp
testl
jb
dec
mov
mov
dec
pop
inc
mov
and
push
inc
jo
clc
lret
mov
add
es
mov
sbb
xchg
fdivl
gs
lock
rorb
dec
xchg
arpl
xchg
xchg
inc
shrl
js
clc
jnp
in
gs
mov
scas
hlt
fiadds
sbb
outsl
pop
adcl
mov
pop
inc
lahf
cli
mov
or
in
frstor
or
popf
mov
push
cmp
jg
mov
rcll
adc
es
shlb
cmp
test
mov
sbb
cmc
fnsave
add
inc
les
punpckhbw
and
pop
sub
sbb
dec
loop
mov
incl
adc
mov
in
mov
fsubs
icebp
mov
mov
int
popf
mov
iret
mov
inc
rcl
lock
in
mov
lods
and
adc
push
cld
cmp
mov
jle
push
lds
shlb
enter
std
les
aas
jmp
out
xchg
lea
push
xchg
hlt
fwait
pushf
repz
mov
mov
lahf
test
ret
xchg
push
inc
hlt
xor
jl
in
adc
mov
cwtl
sub
iret
clc
ret
adc
sbb
sahf
and
lahf
jae
sbb
push
push
xor
stos
inc
data16
jp
pop
scas
rolb
rcrl
rolb
pop
pop
push
add
xor
cmp
mov
xchg
movsb
and
jo
jle
cwtl
cltd
lock
cmp
rcr
sbb
in
das
mov
pusha
add
test
adc
cmp
cmp
arpl
dec
xor
sub
push
inc
mov
ret
jae
popf
xor
cmp
imull
lcall
popa
int3
mov
test
nop
or
pop
add
mov
cmc
add
dec
push
push
xor
add
rcrl
mov
leave
mov
popa
dec
mov
movsb
inc
testb
adcl
lock
sbb
cmpl
xchg
lcall
jne
scas
push
cli
imul
xchg
or
or
jmp
jp
jl
out
icebp
mov
jb
sbb
cmc
and
sbb
adc
mov
cmc
aad
inc
mov
sub
fimull
mov
stos
or
subl
xchg
push
mov
adc
stc
xor
cli
inc
mulb
lret
insb
rol
adc
dec
jecxz
adc
imul
inc
dec
sub
sub
add
mov
fdivl
into
idivl
push
stos
adcb
inc
or
enter
or
int
fucomp
mov
stos
aam
cmp
popf
negb
adc
cld
cmp
adc
inc
mov
pop
mov
mov
hlt
pslld
push
mov
mov
adc
cmc
push
mov
or
aad
lcall
add
dec
outsl
lret
cmp
out
add
movsb
mov
cs
xchg
pop
inc
scas
stos
and
shlb
repnz
les
cwtl
sub
jnp
rolb
cmp
mov
mov
mov
aas
in
mov
pop
sub
out
jp
cmp
mov
mov
call
or
pusha
pusha
fsubr
inc
push
out
xor
lea
pop
mov
xchg
sbb
xchg
cmpl
cmp
icebp
cmc
jne
jmp
sub
movsb
idiv
mov
inc
fadd
pop
loopne
pop
shll
stos
insb
out
int
mov
adc
xlat
fidivrl
xchg
call
out
ret
test
into
sub
int3
and
cmp
mov
cld
mul
shrb
jnp
jne
cmp
jl
stc
push
push
sub
mov
scas
pop
insl
stos
in
fdivl
rcr
mov
mov
mov
cmp
jg
sub
cmpsl
dec
cs
cs
or
ror
sbb
xorl
sub
pop
mov
pop
adc
stos
mov
push
call
ficompl
and
js
dec
push
xchg
pusha
or
push
mov
loop
imul
jne
mov
cwtl
and
inc
pop
push
wrmsr
cmc
in
leave
cld
test
mov
or
nop
je
movsl
adcl
hlt
cli
imul
and
cmpsl
scas
or
aam
xorb
sbb
push
mov
aam
mov
xor
sub
loope
in
mov
mov
mov
aas
pushf
jmp
repz
push
test
or
stc
gs
cltd
shll
lods
inc
sub
jmp
inc
les
scas
push
outsl
movsl
and
or
je
xchg
lods
add
lret
dec
aas
cmpsb
xchg
fistps
cmpsl
adc
add
inc
js,pn
cli
ljmp
pop
dec
filds
jne
jnp
adc
sbb
inc
les
pusha
stos
cmpsb
sbbb
ljmp
mov
push
dec
mov
mov
rcrl
xchg
sti
mov
outsb
mov
scas
sub
lret
add
jge
lret
test
mov
add
cwtl
out
inc
or
rorl
sahf
dec
or
mov
xchg
adc
movsl
int3
adc
mov
xor
hlt
sbbb
rclb
xor
mov
lret
mov
mov
and
out
movsl
jl
sbb
jmp
jne
adc
xchg
add
push
dec
bnd
xlat
lds
or
inc
cmpsl
add
and
adc
push
pusha
mov
push
scas
xchg
sub
xchg
pop
xchg
cs
lds
movsl
subb
hlt
or
loopne
stos
into
inc
add
mov
xchg
outsl
xchg
xchg
clc
ljmp
and
pusha
into
lret
pop
push
push
mov
sbb
pop
movsb
es
mov
fidivl
sbbl
push
outsl
cmc
das
sub
into
pop
loope
pushf
dec
in
test
addl
and
xlat
call
pop
orb
dec
pop
in
out
add
jae
and
cli
cmp
push
popa
push
enter
add
das
mov
icebp
addl
popf
jp
sub
lea
sbb
xor
testb
push
or
das
push
mov
sub
inc
nop
cltd
out
cmc
adc
sbb
xor
jle
cmp
fcomp
mov
add
test
mov
mov
mov
jno
insb
out
loopne
test
sub
out
add
inc
xchg
lock
pop
sbb
shrl
inc
pop
rol
shrl
sarl
outsl
xchg
jge
subb
jb
lcall
js
dec
popf
fisubs
mov
dec
mov
popf
mov
mov
fsincos
cltd
leave
ret
xchg
xchg
mov
or
arpl
js
xchg
les
add
xchg
out
dec
mov
sub
push
mov
aad
jecxz
ds
jge
repnz
out
jbe
ret
xchg
scas
sub
mov
pusha
cli
in
sub
aas
sbb
pusha
adcl
adc
xchg
scas
aaa
jg
push
pop
jl
outsb
mov
pop
insl
xchg
ret
or
and
push
cmp
movsb
mov
cmpsl
test
icebp
inc
lods
pop
mov
sub
fsubs
jg
dec
inc
outsb
cmp
add
mov
aad
push
dec
lcall
mov
aad
dec
repnz
in
scas
repz
movsl
fstl
push
inc
adcb
enter
fists
mov
mov
inc
nop
mov
pop
dec
out
pop
xor
cltd
sbb
popa
jg
lods
insl
xor
xchg
scas
xor
call
push
test
in
in
movsl
or
je
adc
cmp
pushf
sahf
xchg
call
mov
loopne
out
fldcw
aaa
jne
adc
mov
inc
or
sbbl
jnp
push
jne
sub
mov
mov
into
xor
lret
or
loope
call
fcoml
gs
add
lret
cltd
push
les
mov
mov
jne
jb
sarb
stc
inc
daa
stos
and
or
mov
jmp
out
scas
mov
fists
inc
lods
xabort
pop
and
add
les
inc
cltd
sbb
xchg
shl
in
add
div
dec
xor
xor
and
ss
push
push
das
and
jge
leave
mov
jae
stc
sbb
jmp
jno
jg,pt
inc
dec
cmp
dec
sub
pop
mov
inc
cmp
sbb
sbb
lahf
shrl
pop
push
sbb
cmp
loopne
jg
or
pop
mov
sbb
int3
mov
scas
mov
fwait
or
or
shll
jle
jne
shrl
add
outsl
inc
xchg
hlt
or
clc
mov
add
aad
cld
or
push
shrl
push
inc
flds
loop
pusha
ljmp
daa
rcr
scas
faddl
mov
jge
lods
inc
mov
sub
repnz
sahf
add
dec
inc
movb
and
aam
mov
mov
inc
or
push
mov
in
hlt
je
inc
or
sti
sbbb
jno
xchg
jns
test
sub
mov
int3
or
loopne
hlt
jnp
enter
mov
cmpsb
mov
loope
vmovq
jge
incl
mov
inc
jmp
sub
adcl
inc
stc
scas
enter
out
or
scas
hlt
andl
lcall
lret
adc
mov
cld
setbe
push
or
in
mov
dec
mov
out
stc
hlt
xor
mov
pop
xchg
loope
arpl
cmpb
ljmp
xchg
icebp
das
pop
nop
fsubrs
in
mov
test
negb
xor
popf
adc
fsubrs
mov
xor
mov
inc
call
cmp
adc
test
lods
jns
xchg
scas
pop
leave
jne
push
fstpt
pusha
jp
leave
pop
test
and
sbb
insl
testb
mov
nop
lods
or
push
sahf
lock
subl
pusha
mov
loopne
adc
mov
sub
push
mov
lods
sbb
das
stos
dec
xor
jl
cmp
lods
scas
add
pusha
in
cmpsb
rcr
mov
stos
and
xchg
shlb
mov
sbb
stc
jecxz
out
insb
mov
test
hlt
inc
mov
popa
icebp
gs
inc
lods
xlat
xchg
inc
lods
add
mov
sti
dec
mov
into
into
enter
sub
push
and
mulb
cwtl
in
jns
les
nop
push
jg
loopne
pusha
jb
xchg
dec
repnz
call
cmp
mov
sbb
jl
xor
popf
cmp
outsb
out
hlt
mov
fadds
xchg
mov
nop
push
or
imul
or
pop
into
cmp
enter
xchg
pushf
add
leave
pop
jbe
cmp
adc
adc
jg
cld
mov
push
inc
and
inc
mov
jmp
or
mov
in
lcall
sbbb
mov
pop
rcrb
cmp
movsb
jge
inc
mov
fcoms
repnz
cmp
push
stc
hlt
lret
add
in
jp
aad
loopne
xor
jl
or
mov
xchg
mov
push
xorb
cmc
jno
jnp
push
leave
into
xchg
xor
xchg
popl
pop
mov
sbb
out
and
add
dec
mov
pop
push
xor
sti
inc
sbb
mov
mov
or
cmp
aad
int
popa
pop
push
mov
movsb
fstl
roll
loope
shlb
cmc
mov
test
test
xor
xchg
inc
popa
xchg
pop
or
lret
jmp
jp
dec
pushw
jl
xor
movl
stos
js
stc
cwtd
sub
sub
jp
add
sbb
sub
cld
lcall
pop
jmp
mov
xchg
es
in
int3
fsubrl
mov
lcall
xchg
mov
rolb
int3
pop
ret
jno
dec
jbe
cmp
jg
fwait
sub
shlb
out
mov
mov
lahf
and
out
and
mov
push
xchg
sub
inc
pop
popf
and
rcrl
stc
mov
ljmp
ficomps
sar
mov
ror
pop
mov
mov
jp
ss
pop
mov
jne
fcmovb
push
jae
insb
bnd
xchg
or
xchg
jg
cmpsl
cld
xor
and
data16
call
push
dec
lret
xchg
outsb
hlt
sbb
add
lcall
cmpsb
pushf
dec
andb
push
inc
scas
cmp
mov
ss
gs
ja
push
sbb
mov
stos
roll
jne
jno
dec
cli
mov
test
subb
lret
add
mov
scas
jg
mov
sub
shlb
cmp
inc
jl
xchg
inc
fimuls
sbb
xor
mov
arpl
push
xchg
dec
mov
cmpsb
call
push
std
std
mov
pop
into
scas
sub
pop
popf
adc
push
rorl
and
xor
loopne
dec
cmp
add
gs
adc
aad
xorb
lahf
stos
sar
stos
mov
mov
rorb
loopne
in
dec
shrb
ficoms
push
mov
mov
and
adc
add
sbb
dec
mov
cmpsl
hlt
test
cmp
pop
mov
pop
adc
jbe
jo
cld
inc
cli
ljmp
xchg
xchg
add
pop
sarl
inc
jmp
jmp
mov
jne
sbb
sbb
incb
mov
push
mov
xor
adc
xchg
not
xor
jo
repnz
std
ret
mov
popa
jg
cld
popf
push
into
pop
dec
mov
sub
leave
mov
hlt
jl
mov
jbe
int3
xchg
daa
add
loope
mov
adcb
int
mov
jg
xchg
push
mov
enter
cmp
sbb
or
insb
sub
pusha
sub
mov
in
andl
add
les
push
and
loop
es
mov
xor
imul
movb
fs
test
mov
xlat
sub
adc
loope
movsb
sbb
mov
nop
std
imul
dec
pop
sub
bound
pop
pop
ret
or
mov
das
push
test
xchg
add
std
sbb
iret
xchg
fisttpll
lahf
dec
mov
mov
loope
pusha
fwait
cld
jecxz
cmp
adc
cli
xor
fwait
aas
in
xchg
dec
rcrb
addl
add
sti
mov
or
aas
enter
fcoml
stos
cltd
dec
lods
push
daa
inc
test
pop
mov
or
jb
xor
iret
mov
fs
and
inc
in
in
mov
scas
movsb
into
ds
mov
jne
int
add
test
sub
mov
fisubrs
adc
loop
dec
clc
mov
push
sub
jmp
movsb
arpl
pusha
mov
jl
jle
jo
sub
dec
push
cs
mov
cmp
std
jbe
mov
adc
out
jl
mov
xorl
jecxz
nop
xor
sti
pop
iret
push
test
test
mov
js
sti
ljmp
ja
icebp
and
out
mov
sub
fimull
add
test
inc
xchg
rcr
xchg
ret
jle
outsl
inc
add
push
fldt
scas
les
nop
pop
add
inc
out
inc
push
arpl
mov
cmp
mov
out
or
xchg
rcrl
mov
stos
aad
or
dec
adc
mov
adc
lea
mov
sbb
mov
or
dec
ss
fsubl
bound
in
xchg
stos
add
addr16
cwtl
jle
cld
pusha
jge
lock
outsl
es
xchg
sub
out
xchg
leave
roll
out
sbb
ror
lret
divl
les
sub
insb
hlt
lcall
lcall
ds
cld
lret
shr
or
inc
dec
test
mov
lret
daa
mov
add
movl
fcomps
adcb
mov
cmpsb
clc
add
fdiv
mov
add
xor
clc
in
inc
sbbb
and
dec
aas
outsl
cmpsl
imul
rcl
and
jb
and
sub
out
xchg
fmuls
enter
gs
push
hlt
adc
mov
fnstsw
out
fldcw
insb
lods
mov
push
cmp
std
add
mov
scas
sub
xor
mov
pop
add
xor
xchg
inc
jnp
or
int3
test
sbbl
jg
mov
nop
and
clc
jnp
inc
subb
cltd
fisttpll
leave
add
loop
sbb
inc
push
jne
jg
xor
add
sub
pop
test
mov
pop
dec
leave
dec
sbb
scas
fcom
pop
mov
push
mov
icebp
dec
xor
popf
mov
pop
stc
pop
sub
mov
pop
imul
sub
jbe
jb
fmull
pusha
call
push
sbb
adcb
pop
xlat
cmpsl
out
xrelease
mov
or
scas
dec
call
fsubr
les
jne
lret
leave
jo
pusha
stos
mov
ret
arpl
pop
push
test
iret
push
jmp
fscale
jnp
dec
ljmp
cwtl
jne
jp
sbb
mov
insl
cld
sub
xchg
jg
insb
mov
imul
iret
jbe
xor
push
ficomps
loopne
mov
pop
imul
sbb
mov
roll
loopne
test
in
xchg
xchg
test
enter
mov
mov
test
insl
loopne
je
sahf
dec
stos
ljmp
dec
cmp
mov
sbb
popa
insb
enter
insl
pop
ss
icebp
push
sti
cs
adc
mov
mov
fwait
cs
out
scas
negl
push
cmp
pushf
push
push
push
xchg
decb
xchg
dec
jns
subb
jno
pop
ret
xor
insb
adc
sbb
cli
arpl
cld
and
mov
pop
mov
sti
or
hlt
mov
xchg
dec
inc
sbb
imul
xchg
sub
imul
add
jne
idivl
sub
dec
ja
mov
xchg
mov
dec
mov
inc
pushf
dec
ds
inc
xchg
imul
fucom
sub
aad
stos
dec
out
hlt
sahf
in
dec
roll
fldl
add
mov
or
sahf
push
testb
push
and
adc
mov
hlt
mov
or
jae
mov
inc
mov
xchg
xchg
enter
jnp
mov
mov
dec
sbb
jno
pop
mov
xchg
cld
sub
in
jp
daa
pop
adc
cmovae
decl
add
push
mov
jo
push
mov
jnp
shl
lods
add
addl
inc
cs
cwtl
sub
pop
movsl
jne
dec
inc
add
mov
pop
mov
add
pop
mov
orb
push
xlat
jnp
loop
sub
mov
dec
jne
pop
cli
repnz
pop
push
imul
adc
jle
dec
xor
dec
cld
das
dec
pop
in
and
dec
jbe,pt
push
mov
adc
mov
outsb
sub
sub
sti
pusha
mov
sub
or
cmpsl
adc
sbb
fadd
dec
loopne
jo
mov
pop
inc
cmpsb
imul
sbb
mov
adcb
inc
std
push
aas
or
push
pop
jmp
adc
stc
inc
aas
xchg
fstl
cmpsb
pushf
pusha
stos
mov
pop
jle
enter
inc
mov
int3
inc
movsb
mov
adc
sbb
pop
xor
fidivrs
push
cltd
stos
insl
pop
mov
sub
and
into
pop
add
dec
or
test
sub
ret
dec
stos
adc
movsl
stos
xor
int3
arpl
jnp
ret
les
fdecstp
add
sbb
add
inc
push
daa
push
sbb
call
out
adc
in
ror
mov
push
add
and
lods
pop
loope
into
leave
xchg
mov
aas
mov
in
mov
ja
pop
mov
mov
scas
jo
hlt
rorb
and
pop
inc
in
fistl
enter
and
lea
push
mov
sti
push
sub
loope
pop
cli
sub
xlat
xchg
bound
push
inc
hlt
jge
xchg
push
lahf
sbb
jno
dec
popa
add
mov
add
stos
jge
movsb
ja
fisubs
fsubs
sub
pop
loopne
leave
insb
jge
or
cmc
jl
inc
stos
lahf
es
mov
test
or
es
orb
jnp
cs
mov
jecxz
cmpsb
ljmp
shlb
xchg
mov
cmp
repz
sarl
push
setle
adc
add
stos
lods
adc
bound
or
mov
stos
movsl
sahf
les
sbb
in
jb
add
add
jns
and
jae
mov
jp
pop
das
mov
int
pop
xor
mov
fsubrs
sub
jnp
adc
pop
xor
leave
cmp
and
pop
push
lds
loopne
hlt
std
out
dec
loop
ds
xchg
add
addl
mov
and
inc
rolb
dec
rcll
or
add
out
pushl
inc
rcrb
inc
pop
pop
pop
out
sbb
fldl
pop
jnp
mov
mov
sub
mov
mov
nop
jbe
das
ss
adc
and
or
call
push
int3
pop
xchg
std
add
js
js
out
addr16
das
dec
inc
mov
push
mov
stos
stc
fidivrs
inc
add
mov
shrl
test
push
roll
sbb
mov
shlb
xchg
hlt
call
stos
imul
push
das
out
sbb
call
dec
inc
cmp
lret
popa
les
add
sbb
es
aam
flds
sub
popa
adc
cmpsl
dec
in
scas
ja
js
pop
pop
xchg
nop
jmp
pusha
add
imul
pushf
xchg
ficoml
dec
mov
movsb
lcall
pop
push
lahf
cld
sbb
mov
bound
mov
pop
dec
sub
or
cmpsl
inc
or
negb
mov
mov
rorl
jb
aas
push
push
daa
fdivp
jbe
mov
inc
enter
mov
xchg
xor
xor
int
outsl
adc
fstps
mov
lcall
shll
mov
inc
addb
scas
leave
mov
push
clc
fucomp
in
and
rcr
mov
xchg
in
mov
jne
push
stos
stc
pop
lret
pop
mull
push
adc
sub
sub
jbe
loop
test
fs
pop
lcall
fisttpll
enter
gs
cmp
dec
dec
sbb
xchg
inc
cmp
lods
or
notl
mov
leave
xor
test
pop
add
mov
sti
push
and
or
jle
arpl
mov
dec
fistps
fwait
xchg
inc
ja
out
mov
loope
sarb
mov
mov
push
test
and
adc
enter
xchg
lcall
test
xchg
ficomps
hlt
jmp
push
mov
inc
dec
loopne
cmpsb
mov
sbbb
add
mov
hlt
push
ror
xor
mov
shl
inc
and
push
sub
int
inc
lods
inc
lods
cmpsl
inc
dec
cmc
aad
or
loop
ja
dec
cmp
add
ljmp
dec
cmc
loop
aam
roll
fisubs
call
inc
sbb
fdivs
jnp
mov
inc
roll
adc
jnp
or
out
jle
clc
mov
adc
dec
xchg
mov
pop
xor
adc
pusha
das
mov
jge
enter
mov
sub
push
enter
add
movsl
mov
push
int3
fs
lods
add
jae
sbb
popa
sub
insb
adc
jge
push
jbe
fcomi
push
or
addr16
icebp
add
movsb
ds
mov
sbb
imul
xchg
jne
lea
imul
fadds
dec
scas
jmp
lahf
push
movsb
mov
adc
fdivrs
mulb
pop
aas
mov
clc
cld
decl
mov
cltd
mov
stc
pusha
mov
cmp
clc
cs
inc
enter
pop
scas
das
mov
cs
cmp
mov
push
jne
popf
jns
cs
cmc
shlb
call
stc
and
test
inc
add
lret
adc
enter
jns
sub
sub
bound
push
jecxz
test
rorb
lock
test
lret
popa
inc
sti
andl
pop
inc
sbb
cltd
pop
repnz
fildll
cltd
test
mov
insl
lcall
aad
cmc
ret
pop
add
adcb
cltd
aas
mov
loop
jne
fstl
loopne
mov
cmc
fwait
push
pushf
inc
and
adc
xor
test
cmp
int
sub
jae
mov
mov
ljmp
jge
xchg
dec
xchg
add
rdtsc
xlat
adc
stc
cld
jnp
testb
xchg
jb
hlt
movsl
ljmp
clc
ja
inc
cmp
xor
xchg
or
aam
lahf
pop
inc
movsb
sub
add
xchg
cmpsb
mov
enter
push
push
sub
cwtl
xchg
clc
dec
outsb
mov
xchg
jp
add
popa
or
data16
add
xchg
mov
sbb
clc
loope
sub
inc
imul
stos
popa
add
les
sub
nop
sub
mov
mov
fmull
int
xchg
pushf
daa
mov
stos
imul
mov
js
movsb
stos
mov
ja
add
scas
cmpsl
and
mov
insl
jp
inc
cmc
dec
dec
rolb
lock
movsl
int
pushf
repnz
dec
sub
mov
repz
fs
test
out
sbb
mov
cmpl
sub
push
mov
leave
mov
push
push
outsl
sarb
movsb
add
ret
lea
ja
sub
es
scas
push
xor
sbb
sub
inc
mov
sub
cmp
in
ss
mov
int3
out
pop
fs
hlt
mov
test
jge
in
imul
pusha
pop
sti
aaa
add
xchg
data16
add
fcompl
adc
sub
loopne
inc
inc
dec
hlt
inc
sarl
xorl
mov
dec
mov
inc
lds
pop
xorb
sub
into
test
test
jle
test
xchg
popf
add
sub
push
adc
jbe
or
add
dec
fildll
mov
int
pop
stc
iret
es
je
imul
mov
push
xlat
xchg
out
movsb
xchg
or
iret
push
inc
inc
mov
sub
mov
xchg
jo
cmpl
int
add
in
jnp
std
hlt
pop
xor
aad
xor
push
xor
push
xchg
hlt
fstpt
xor
scas
jb
inc
sub
ss
popa
ret
sbbb
outsb
and
movsl
ja
cmp
inc
repnz
or
sarb
xchg
cs
lods
cmc
sti
mov
pop
sub
scas
mov
jle
dec
mov
fmuls
ja
outsl
jmp
fwait
dec
shll
popf
jne
stos
adc
int
push
xchg
lods
pop
sbb
leave
insl
incl
cmp
sbb
jne
cmpsl
cli
rcrl
xchg
lret
shl
out
call
test
inc
jns
add
mov
pop
dec
jno
dec
dec
xchg
nop
mov
lret
and
out
mov
dec
jns
mov
or
jne
and
sbb
les
imul
or
xchg
inc
jns
insl
mov
mov
hlt
push
call
mov
mov
shrb
stos
mov
cli
cld
in
aam
cli
in
outsl
cmpsb
movsl
fidivl
ret
cld
enter
xchg
mov
aas
mov
call
xchg
mov
movsl
xchg
gs
ljmp
inc
mov
ss
jne
rcl
mov
dec
mov
shrb
mov
cmpsb
mov
addl
pop
mov
ss
mov
scas
arpl
pop
stc
or
inc
sbb
mov
stc
pop
inc
mov
xchg
jne
cli
jp
sub
movsb
cmpsb
test
rolb
sub
lret
mov
jno
out
call
test
xchg
lods
add
popf
inc
repnz
mov
xlat
and
je,pn
add
bound
stos
movsl
or
xchg
cmc
ret
sti
jo
mov
xor
pop
addl
pop
dec
push
pop
cmp
push
scas
nop
or
dec
mov
cmc
inc
pusha
sbb
adc
popa
push
mov
pop
jne
std
fisubs
mov
lahf
xorb
dec
jbe
movsl
enter
pusha
scas
sub
test
mov
xchg
shlb
arpl
in
sbb
inc
pop
or
inc
cmc
gs
inc
mov
fldt
sarb
into
and
lret
or
fs
mov
jl
out
pop
jns
stc
imul
and
sub
fcmovbe
mov
jg
and
pusha
inc
sti
lahf
or
xchg
jo
xchg
loopne
or
ljmp
lods
xchg
icebp
iret
mov
aad
jmp
arpl
jb
lods
mov
mov
hlt
sbb
push
in
adc
sub
das
mov
or
pop
hlt
or
mov
xor
push
mov
jle
out
es
out
and
cmpsl
mov
push
imul
les
addb
in
add
add
imul
mov
pusha
ret
mov
jne
pop
add
or
add
sbb
pop
fs
fnstcw
mov
fsub
subps
in
test
iret
loop
into
loopne
push
add
or
or
scas
or
loopew
sbbb
pop
ljmp
and
into
sub
decl
pop
cmp
xchg
xchg
cwtl
or
pop
push
sub
pop
test
jl
mov
cmp
fmuls
jns
daa
gs
in
fildl
movsl
inc
divb
xchg
adc
dec
or
lods
jl
pop
test
and
dec
stos
lock
iret
aam
jnp
dec
mov
mov
popf
inc
lods
mov
fistpl
pop
sub
das
sub
arpl
mov
jbe
jb
sbb
enter
ficoml
mov
push
mov
les
add
jg
xchg
push
adc
mov
cmp
inc
mov
xor
aad
mov
fwait
clc
roll
sub
bnd
negb
jmp
daa
inc
mov
add
and
lods
or
ja
sti
lds
add
pop
push
stos
dec
mov
inc
sub
roll
add
ljmp
orb
mov
ljmp
mov
dec
scas
loope
cmc
xor
ret
sub
dec
mov
es
loopne
push
jnp
dec
bound
loope
out
jnp
adc
adc
icebp
pop
iret
test
imul
int3
xlat
mov
add
mov
shlb
js
mull
mov
sbb
and
fsubp
mov
sub
add
adc
jl
shll
fwait
cmc
fildl
dec
inc
dec
andb
les
jg
pop
mov
sbb
fcoms
mov
mov
mov
inc
mov
mov
pushl
fxtract
jns
mov
gs
adc
sbb
mov
std
pushf
scas
pop
jnp
mov
sbb
hlt
jno
out
cmpsl
mov
lods
lds
cmpsl
add
popf
mov
movsl
mov
dec
jge
inc
mov
adc
bnd
dec
mov
dec
mov
xor
cmc
mov
loope
fwait
push
lea
cmp
pushf
adc
add
xchg
ficompl
mov
and
mov
pushf
ja
mov
test
jne
inc
lret
sub
pop
dec
cld
xchg
mov
pushf
test
addr16
pop
sub
lea
add
cmp
nop
clc
inc
xchg
cli
pop
outsb
sub
inc
add
sahf
mov
aad
sub
dec
stos
and
xchg
icebp
je
test
push
mov
subb
push
aad
lahf
mov
faddl
xor
and
and
insb
movsl
inc
lahf
add
loop
add
mov
fldcw
jge
sub
adc
and
add
xor
dec
outsl
mov
push
dec
js
mov
pusha
pop
lock
ffree
in
pop
push
xchg
xor
jae
sbb
mov
or
inc
xor
pop
add
xchg
dec
cs
test
xor
ror
shrb
pop
jle
test
sbb
hlt
xchg
movsb
cmp
leave
sub
outsl
push
lcall
movsl
and
lods
push
ret
xchg
cmp
test
leave
lds
call
bound
dec
sub
fs
or
push
xchg
fists
in
hlt
fdivrl
fisubl
sti
rolb
aas
adc
jl
pop
push
lods
test
sbb
rorl
xchg
jne
testl
lods
loopne
test
xor
fsubl
hlt
js
dec
ss
xchg
cmc
mov
pop
jmp
xor
and
or
add
frstor
out
cmpsb
out
mov
nop
inc
pop
inc
mov
ja
mov
xchg
retw
fcmovnbe
mov
adc
inc
mov
mov
mov
mov
cli
ret
xchg
data16
cmpsl
and
movsb
sbb
sti
mov
or
faddl
jnp
mov
xor
dec
hlt
sub
mov
out
mov
or
lret
pop
jne
add
jnp
dec
or
sbb
jge
test
mov
mov
repnz
jb
jno
mov
lret
mov
stos
hlt
nop
shlb
add
loop
sbbl
daa
das
fadds
ja
aad
lock
loope
add
mov
cmp
add
mov
lods
push
cs
mov
loop
and
push
andl
repz
xor
jg
mov
adc
mov
dec
imul
or
inc
and
mov
movsl
mov
into
mov
mov
imul
sahf
add
es
xchg
jnp
mov
xor
jne
mov
or
test
xchg
leave
es
add
jg
enter
sbb
adcb
hlt
popa
sbb
outsl
sub
pop
ret
inc
push
pop
lret
outsb
mov
test
loopne
scas
stos
dec
or
movsl
and
pop
mov
nop
jb
mov
outsl
repnz
pop
repnz
dec
add
inc
mov
into
lret
push
fcompl
aam
hlt
stos
adc
and
jnp
jge
pop
push
inc
sub
shll
xor
sbb
rorb
mov
sub
xorl
mov
shll
xor
pop
in
lcall
insl
cmc
not
pop
xlat
dec
int3
jns
fisubs
ja
xchg
pop
jg
inc
fldl
adcl
jne
sbbb
add
mov
std
dec
pop
cwtl
jb
or
push
insb
mov
jnp
jecxz
mov
inc
dec
lock
sub
pop
movsl
cwtl
dec
mov
add
das
out
mov
call
es
jns
jbe
mov
mov
sub
cmp
push
mov
dec
lcall
fmull
jnp
inc
rol
sub
scas
mov
mov
movsl
leave
sbb
jns
inc
xchg
enter
ds
adc
in
loopne
xchg
adc
scas
mov
pop
out
sar
jne
cwtl
test
out
mov
xchg
loop
xchg
sub
inc
jmp
or
test
inc
mov
into
fucomp
inc
mov
adc
nop
jmp
and
clc
sbb
ljmp
repz
mov
in
mulb
push
mov
mov
xorl
addr16
mov
fwait
repnz
mov
stos
flds
stos
inc
imul
mov
adc
sub
imul
negb
ret
pop
pop
shr
pop
enter
dec
movsl
inc
push
cld
cli
decl
mov
mov
pop
cwtl
idivb
fsubrp
and
popf
add
into
insb
jns
mov
filds
sahf
call
xchg
adc
fstpt
fmull
pop
add
test
pushf
imul
addr16
aas
in
jae
push
pop
pusha
mov
mov
test
xchg
insb
sub
dec
add
push
ljmp
or
sti
push
imul
stos
pop
subl
js
xor
push
xchg
mov
pop
xor
adc
cltd
mov
mov
adc
js
push
mov
stc
sbb
cmp
fcoml
push
stc
ret
andl
lods
adc
mov
sub
outsl
imul
movsb
push
sbb
jp
std
mov
dec
loop
mov
sbb
hlt
add
add
jnp
aaa
xorl
fcomps
cwtl
jne
add
testl
push
pop
inc
movsb
les
mov
xchg
ret
jae
leave
sub
inc
cli
jne
mov
icebp
lods
jge
loopne
test
cmp
and
adc
dec
addr16
and
inc
push
in
jp
xchg
imul
shrl
test
popa
cmc
add
test
xor
das
rcrb
inc
lcall
movsl
sti
rolb
xor
in
add
arpl
mov
dec
cmpsl
push
inc
and
dec
pop
fdivrl
es
push
push
jge
dec
pusha
in
cmpsb
xchg
bound
lret
jmp
mov
nop
sti
jmp
int3
lea
inc
cmpsl
mov
push
hlt
mov
dec
xchg
adcb
cmpsl
jle
sub
gs
xchg
xchg
test
fmull
movsl
outsb
add
aam
jg
jbe
dec
andb
push
inc
into
push
shlb
xchg
das
cmp
pop
fnstsw
lahf
cmp
out
in
movsl
pop
js
inc
mov
je
adc
adc
das
inc
and
sarb
fucomi
inc
hlt
ret
or
jmp
xor
les
or
vfmaddsub213ps
andl
inc
movsl
insl
fisubs
fnsave
shll
fwait
mov
mov
movsb
das
ror
and
insl
xchg
cwtl
ds
mov
cmp
out
cmpsb
std
mov
lods
test
mov
push
xchg
inc
andb
push
jmp
dec
push
mov
jb
fwait
ljmp
les
in
add
mov
dec
out
pushf
pop
cmp
repz
mov
lret
adc
ljmp
icebp
das
movsl
ss
inc
push
inc
cmpsl
das
pop
push
add
scas
mov
fcmove
adc
xchg
push
cmp
xchg
add
int3
out
pop
jge
jle
shl
or
mov
lcall
sub
mov
movsl
dec
or
pop
in
loop
mov
fiadds
subb
hlt
and
int
jecxz
dec
mov
or
jle
es
and
inc
adc
in
out
mov
mov
test
pop
mov
dec
cmpsb
std
clc
out
dec
jb
js
jns
loop
ljmp
xor
pop
fdivr
jmp
cs
insl
enter
outsl
jl
in
shl
xchg
lcall
in
cmc
stc
arpl
xchg
jne
lea
pop
mov
mov
xchg
xor
add
xor
das
loopne
xchg
mov
xor
adc
test
adc
push
add
xlat
dec
push
sbb
jns
jo
mov
and
cld
push
movsl
fistpl
add
and
and
test
xchg
sub
push
testl
mov
cmpsl
cmp
ja
add
or
or
inc
xchg
ljmp
add
insl
gs
repnz
cli
push
std
mov
jp
hlt
jbe
cwtl
ja
add
and
xchg
mov
aas
push
pop
push
sahf
sbb
pop
cwtl
lret
inc
push
repnz
test
cld
jne
and
in
rcl
jb
xor
or
imul
adc
inc
sub
cmp
in
sub
dec
push
jae
popf
shl
jo
cmp
pop
push
xadd
dec
mov
jno
outsb
add
test
into
shrl
imulb
loope
insl
es
mov
and
loop
pop
and
repz
stos
mov
addr16
cmc
dec
rolb
lods
xlat
icebp
inc
movsl
jne
cmpsb
test
into
notl
inc
test
mov
mov
xchg
stos
in
gs
xor
sub
les
push
mov
in
popa
and
lock
sbb
pop
lcall
nop
mov
and
jle
inc
hlt
xchg
and
sub
pop
inc
aam
mov
push
add
jle
int3
sub
mov
xorb
pop
jnp
enter
int3
lods
or
lods
enter
shrb
les
dec
xchg
push
jne
mov
loop
jnp
inc
test
dec
xor
orb
inc
insl
cmp
scas
add
mov
vaddsubps
test
jnp
hlt
inc
adc
test
cmp
add
mov
imulb
stos
add
sub
push
int3
pop
lret
cwtl
sbb
xlat
and
movsb
jmp
dec
or
jl
add
pop
movsl
pop
sahf
adc
mov
jno
cmp
adc
mov
xchg
mov
cmp
mov
cmp
lock
test
iret
inc
pop
aam
insb
inc
loopne
sahf
das
pop
inc
in
and
imull
imul
fcoml
test
sbb
roll
sbb
repnz
sbb
and
sub
push
jmp
insb
jp
scas
xchg
cmp
and
xor
xor
add
pop
nop
cs
sbb
nop
inc
cmp
dec
adc
mov
add
jecxz
hlt
stos
xor
pop
jg
inc
call
and
adc
lcall
adc
hlt
mov
and
ret
adc
mov
jo
pop
jnp
sti
jbe
hlt
mov
scas
faddl
daa
xor
inc
bound
imul
fcomi
shlb
adc
add
xlat
jae
cwtl
sti
stc
mov
pop
pop
jnp
mov
out
or
in
fmuls
scas
int3
cli
lock
sbb
push
shrl
daa
cmc
cmpl
int
sub
adc
mov
pushf
and
fdivrs
nop
clc
testl
in
add
mov
outsl
cmp
rcr
add
mov
js
jne
push
inc
lds
pop
out
gs
das
inc
sbb
aas
popf
push
scas
jle
stos
mov
mov
in
cs
nop
test
pop
mov
mov
mulb
les
inc
sbb
test
ret
cmpsl
push
out
data16
inc
adc
test
fwait
xorl
aas
ss
pop
inc
cmp
dec
lods
pop
subb
mov
mov
into
sbb
and
xchg
rorl
mov
mov
dec
jle
add
out
mov
or
dec
add
lock
cmc
movsl
add
aaa
xchg
jl
sub
jbe
mov
ss
or
jno
xchg
fisttpl
jmp
sub
jp
out
and
mov
je
sub
nop
jne
test
adc
iret
cmp
daa
xchg
push
dec
inc
mov
xchg
pop
cmp
xor
xor
nop
add
sti
mov
add
mov
pop
jne
xchg
xchg
icebp
mov
xchg
enter
add
dec
mov
cmp
push
sar
sub
lret
fildll
push
adc
push
js
lock
clc
aaa
jbe
sub
pop
inc
shrb
cmp
movsl
scas
int
mov
mov
out
imul
and
xchg
popf
test
sarl
or
subb
inc
test
push
inc
mov
loopne
xchg
lahf
xchg
testl
or
and
jecxz
cli
scas
mov
add
clc
adc
mov
adc
push
jg
nop
add
mov
sub
scas
push
add
add
dec
mov
arpl
add
popa
add
insb
cmpsl
icebp
mov
scas
push
aam
sbb
push
aad
mov
sub
lds
mov
add
hlt
leave
mov
in
jne
dec
inc
jecxz
scas
or
lahf
xchg
out
push
lds
lock
lea
int3
jl
insb
sbb
cmp
mov
cmp
fimull
mov
in
outsb
cltd
add
mov
ljmp
test
mov
mov
add
xor
mov
and
aas
es
jmp
cmpsl
cmc
clc
ss
addl
mov
cmp
insb
scas
dec
hlt
mov
add
pop
mov
sub
xor
or
add
lret
mov
xchg
pop
xorb
xchg
xor
test
push
fcoml
xchg
xchg
sub
call
movsl
jp
mov
jp
into
fcoml
mov
adc
jae
mov
lret
dec
outsl
jne
sbb
add
lret
lret
aad
adc
push
pusha
and
cmpb
test
inc
cmpsb
sub
xor
inc
dec
lods
das
lods
xchg
cld
ss
test
imul
test
rol
inc
loopne
addr16
mov
add
add
sti
lret
push
or
into
add
cmp
imul
jg
fisttpll
in
mov
jp
xchg
mov
add
mov
sti
cmpsl
out
xchg
lds
gs
test
mov
shl
shrb
seta
lea
sub
int3
testb
loop
out
mov
add
addl
in
mov
xor
inc
inc
mov
inc
inc
out
inc
xchg
mov
jle
repz
xorb
adc
movsb
or
cmpsl
and
fwait
pop
imul
pop
jge
leave
adc
sbb
xchg
xchg
add
lods
or
pop
out
pusha
repz
adc
or
mov
mov
test
lods
xchg
xor
mov
xchg
jmp
test
std
cmp
and
cmpsl
repnz
test
int3
pop
sub
mov
add
xor
mov
movb
mov
cli
cmpsl
test
pop
push
out
mov
fidivl
push
js
sti
stc
ljmp
pop
lahf
push
repnz
addr16
pop
mov
adc
hlt
mov
into
push
sbb
repnz
cwtl
push
call
das
popf
ds
xlat
sbb
mov
push
cltd
inc
sahf
inc
xchg
mov
jae
mov
add
and
or
subb
cmpsb
arpl
cmc
mov
pop
or
ja
push
mov
data16
and
and
adc
pop
stos
jl
cmp
outsb
div
ds
sti
test
xchg
xchg
mov
inc
mov
popf
dec
aam
fldl
sarb
inc
leave
negl
jmp
sub
es
jns
ds
hlt
push
lods
mov
push
loop
data16
fsubs
mov
sbb
insl
and
hlt
aas
jl
int3
sbb
shlb
iret
mov
add
cs
sbb
adc
inc
cld
jl
sub
or
cwtl
and
sbb
int3
test
mov
xor
fsubr
out
sub
rolb
adc
lock
imul
cltd
lods
and
mov
jne
shl
jle
xchg
rcr
sub
mov
ret
pop
shrl
into
push
cltd
xchg
cmp
cmc
sbb
popa
mov
pusha
or
add
and
imul
cmp
ret
mov
jne
or
cmp
movsb
cmp
pop
adc
outsb
cmp
jno
cmp
loop
sbb
sub
mov
icebp
mov
dec
sar
xchg
cmp
mov
ljmp
enter
in
dec
adc
arpl
in
mov
push
jnp
out
cs
adc
loop
lret
adc
pop
sbb
int3
ja
fcompl
int3
test
les
and
pop
loopne
mov
adc
decb
or
xor
data16
pop
jb
sbb
call
lock
shlb
ret
jl
imul
or
bound
xchg
shlb
inc
aad
xor
push
aaa
sub
mov
pop
sahf
jo
adc
dec
xchg
mov
and
lret
mov
cmpsb
lock
sub
outsb
leave
adc
add
jge
pop
push
arpl
es
xchg
cld
jl
mov
in
popf
loopne
sti
jmp
pop
out
bound
mov
repnz
fstps
mov
inc
addl
push
add
lcall
hlt
adc
das
dec
outsb
imul
jmp
sbb
sbb
mov
ljmp
rcrb
and
push
test
dec
das
pop
add
mov
icebp
into
sarb
mov
in
cmp
lock
insb
shrb
xor
loope
ljmp
mov
clc
or
std
lcall
sbb
and
ljmp
push
subb
dec
in
mov
sarl
test
push
dec
xchg
cmp
dec
sub
fisubrs
das
dec
cmc
inc
jle
shrl
or
test
cmp
out
adc
adc
pushf
test
push
aam
mov
xchg
jo
mov
mov
rclb
popf
dec
mov
jae
xor
div
dec
clc
mov
or
xchg
cmp
inc
add
dec
aam
imulb
push
fadds
mov
inc
mov
mov
dec
sahf
data16
push
nop
dec
test
mov
dec
outsl
mov
stos
mov
dec
cmp
daa
lods
aaa
jge
shll
outsl
hlt
out
out
push
adc
inc
and
les
adc
test
inc
icebp
pop
mov
outsl
mov
stc
jne
adc
fists
jle
jg
xor
mov
push
adc
sub
cwtl
or
or
and
mov
aas
lods
xor
lock
xchg
shlb
adc
adc
fmull
sbbl
sti
imul
adcl
cltd
pushf
inc
jbe
in
cmpsb
sbbl
jecxz
add
push
jg
fisubl
mov
mov
jo
shr
mov
shrb
mov
loope
push
stc
push
lea
ss
cmpsb
add
xchg
pusha
sub
popa
hlt
addr16
fidivrs
sbb
jne
sahf
lea
mov
movsb
cwtl
push
loope
leave
leave
jl
insl
lods
shl
sub
jg
or
pop
mov
and
hlt
cld
cmp
add
pop
adc
sub
sub
xchg
fldl
add
int3
mov
sbb
in
push
jne
or
movsl
xchg
add
pop
mov
mov
xchg
call
mov
mov
lods
sub
divb
inc
mov
cli
mov
xchg
sbb
mov
rorb
xlat
and
jecxz
lods
jnp
dec
and
pop
mov
xor
mov
inc
lds
adc
push
ss
and
or
mov
jb
cli
aam
pop
add
mov
out
mov
pop
bound
testb
jmp
addb
and
pop
out
mov
pop
mov
dec
dec
cmp
adc
push
mov
lds
sbb
in
mov
cmc
inc
inc
adc
jnp
cmp
sbb
cwtl
aaa
jge
adc
inc
or
cmpsl
jge
pop
jae
outsl
dec
push
scas
dec
lcall
ret
mov
push
pop
adc
push
js
pop
mov
jecxz
pop
jecxz
pushf
test
movsl
fdivr
jmp
test
bound
andb
adc
jne
sub
jl
xchg
pop
sbbb
cmpl
mov
dec
data16
rcr
in
imul
lcall
push
mov
sahf
mov
xchg
inc
sub
or
insl
in
insl
mov
inc
xchg
ds
rclb
inc
pop
mov
adc
xor
ljmp
cwtl
lods
cld
inc
in
cmp
loope
jmp
add
mov
and
ljmp
addb
jecxz
icebp
add
int
inc
jle
jnp
test
ret
add
stos
and
jp
fnstcw
pop
jge
ror
inc
add
insl
bswap
test
jle
xorl
and
outsb
imul
xchg
fcmovb
jne
scas
sbb
inc
inc
call
push
out
cmp
cmp
movsl
shlb
push
adc
call
add
sbb
test
pop
xchg
cmp
dec
jnp
xchg
mov
sub
xchg
test
mov
call
jbe
mov
out
xchg
and
nop
inc
sub
outsl
xlat
fadd
inc
in
movsb
adc
jns
popf
mov
leave
dec
rcr
mov
fxch
add
and
mov
into
fcoml
call
add
jne
dec
frstor
mov
pop
mull
hlt
dec
pop
lahf
jge
movsb
inc
es
into
xchg
dec
mov
mov
hlt
imul
movsl
addr16
into
sbb
lret
mov
jg
or
sub
popa
iret
dec
jo
hlt
inc
ss
cmp
and
dec
push
inc
jecxz
mov
add
lret
mov
mov
pop
cld
inc
rolb
dec
jnp
fcoms
ret
sti
sbb
lods
mov
cmpsl
pop
sub
nop
add
push
xor
cwtl
dec
lret
jne
push
aad
push
hlt
inc
jle
mov
movb
jne
pop
add
out
hlt
lods
lcall
ja
lds
adc
dec
xor
sbb
scas
fimuls
xchg
sub
test
sbb
adc
mov
ljmp
and
call
jne
rol
bnd
sub
mov
lea
movsl
and
jne
roll
insl
movsl
pop
loopne
pop
xchg
pop
cwtl
les
int
sub
les
cs
imul
mov
dec
hlt
daa
xchg
enter
mov
pop
jecxz
mov
ss
jl
pushf
dec
xlat
sarl
dec
inc
xor
inc
jae
pop
shlb
mov
sarb
push
fmull
test
rorl
stos
lods
xor
jmp
jg
jmp
hlt
fiadds
mov
scas
cmpsl
jg
dec
xchg
cmp
mov
fmul
cmpsl
out
mov
jge
arpl
jecxz
mov
sbb
mov
cmc
mov
js
in
mov
mov
add
xchg
and
lahf
sbb
inc
cmp
ret
outsl
sbb
mov
lret
lods
lds
add
mov
dec
ss
dec
cwtl
mov
add
mov
dec
sub
xchg
mov
sahf
call
and
jmp
pop
fidivl
xchg
mov
shrb
stos
inc
mov
int
xorb
aam
test
sub
lods
stos
dec
aas
mov
fwait
sbb
xchg
stos
pusha
xchg
hlt
test
mov
in
repz
and
scas
lret
aas
sub
mov
jno
pop
inc
idiv
lods
sahf
sahf
arpl
and
test
xchg
inc
dec
icebp
dec
mov
rcl
ja
call
mov
inc
loopne
xchg
mov
fstpt
jne
and
hlt
xchg
mov
es
mov
mov
jge
es
pop
sub
ret
rcrl
jecxz
dec
jbe
jmp
les
sub
outsb
xor
mov
shlb
scas
jle
and
pop
jmp
pusha
or
hlt
sbb
data16
sub
pushf
and
jp
xchg
test
mov
sub
ljmp
sbb
test
mov
lret
mov
ret
mov
cmpsl
pop
push
jae
insl
movsb
into
add
std
fs
adc
das
sbb
mov
or
ret
cs
pop
sti
jo
xchg
push
out
or
dec
scas
test
xchg
iret
sub
lahf
rorl
bound
js
adc
movb
adc
addr16
sub
xchg
cmc
nop
mov
hlt
pop
mov
lods
xchg
jb
add
fadd
nop
ret
push
lods
sbb
data16
js
adc
mov
stc
mov
test
sti
sub
out
das
pop
cmp
cmpsb
mov
mov
xchg
push
mov
mov
pushf
jl
fmulp
pop
adc
inc
cmpsb
int3
adc
std
lcall
hlt
push
lret
jbe
inc
jne
in
cmpsl
xchg
outsb
loope
push
ljmp
adc
push
cmc
in
pop
adc
pop
shrb
mov
popa
sub
adcl
adc
sbb
fstl
out
mov
lods
aam
inc
rolb
jecxz
mov
lret
pop
jno
sub
or
mov
cmp
fwait
sub
dec
mov
inc
in
mov
js
xchg
mov
shlb
xor
movsb
sbb
pop
jno
sub
rorl
dec
mov
test
push
push
sub
inc
stos
mov
sti
xor
test
adcl
sub
sbb
decl
aad
lret
hlt
add
cmc
mov
aas
mov
add
dec
mov
popa
fwait
lahf
cmp
in
xchg
jg
mov
cwtl
pop
inc
scas
jb
andb
pop
int
movsl
shlb
outsl
sahf
and
scas
pop
pushf
daa
add
filds
lahf
inc
sub
mov
mov
add
adc
pop
push
add
mov
hlt
es
sahf
and
push
dec
xor
fiadds
xchg
mov
pop
or
mov
adc
rclb
adc
dec
pushf
sbb
lahf
jne
inc
mov
loope
cmp
add
cmpsl
pop
rclb
repnz
movsl
cmp
sbb
mov
sti
out
pushf
leave
mulb
int
pop
test
andl
pop
jg
xchg
leave
sbb
outsb
mov
fsubl
enter
bound
hlt
jo
dec
add
shlb
cmpsl
jne
pop
mov
cld
pop
jg
shl
mov
pop
dec
movsb
dec
das
rorb
add
and
push
int
insl
icebp
lcall
inc
xlat
outsb
testl
mov
adc
cmp
fnstcw
mov
mov
js
fsubrs
dec
out
jp
enter
adcb
dec
insl
xchg
push
in
hlt
sbb
imul
mov
cltd
pop
dec
dec
scas
sub
arpl
mov
jle
sbb
push
pop
movsb
add
xchg
xchg
cmpsl
into
repz
ret
pop
out
cmpsb
ficompl
and
xorl
repz
sbb
jl
jle
imul
jae
pop
sub
repz
mov
xchg
call
rclb
cmp
pop
pop
push
fsubrl
jae
xchg
leave
es
and
nop
mov
rcrl
jmp
in
insl
es
pop
sbb
dec
dec
call
lods
inc
loope
fs
movsb
dec
mov
push
mov
outsb
or
add
insb
adc
mov
hlt
loope
stos
hlt
stos
cmp
enter
xchg
es
ja
mov
add
cwtl
stos
and
jle
xchg
dec
lret
cmc
out
and
es
pop
sbbl
int
jmp
mov
nop
popa
push
cli
xchg
push
int3
sub
aad
into
cmp
fists
sbb
mov
aas
leave
test
cltd
xchg
or
jbe
sahf
cmp
hlt
xchg
pushf
iret
mov
mov
lea
mov
fwait
lods
pop
cmp
clc
mov
movsb
cmp
hlt
nop
pop
sbbl
jo
jge
lods
fidivrs
sbb
jnp
cli
hlt
push
mov
pop
andl
stos
shrb
cmp
bnd
mov
push
mov
mov
faddl
scas
dec
lds
jbe
adc
dec
call
add
push
sbb
dec
sti
aad
sbb
fnstenv
imul
lds
mov
lcall
imul
int
push
pop
gs
push
mov
lret
decl
ret
lret
lods
loope
xchg
adc
subl
inc
mov
adc
xor
jne
pop
pop
mov
mov
stos
outsl
xchg
xchg
or
xchg
out
test
add
lcall
incb
dec
scas
or
dec
jmp
fstps
loopne
jno
daa
cmp
mov
lods
popf
jne
mov
test
int
dec
insb
add
mov
daa
add
aas
add
sub
jg
notb
jnp
stc
sbb
fmul
fwait
cmp
xor
cmp
std
loope
into
jge
sbb
pushf
sub
hlt
fwait
push
push
mov
imul
or
ficoml
push
cmpsb
xor
int3
fcompl
jge
inc
ljmp
lahf
in
or
in
aam
into
pop
add
pop
cld
sbb
in
xchg
ja
mov
sub
hlt
add
hlt
sub
test
sub
jno
loope
ret
cwtl
insb
xor
xor
mov
dec
mov
out
pop
xor
jmp
mov
xchg
popf
mov
mov
out
push
inc
jg
mov
mov
cmpsb
adc
mov
jg
adc
mov
scas
xor
mov
popa
sub
dec
mov
cli
test
sti
mov
test
nop
cmpsl
push
ss
sbb
mov
test
jmp
dec
push
test
mov
mulb
cld
inc
fcoml
lock
dec
outsb
push
ljmp
out
arpl
add
mov
sti
adc
scas
testb
dec
lret
hlt
scas
and
sbb
sub
fcmovbe
sarb
pandn
inc
push
push
jp
jns
jecxz
mov
cltd
rorb
mov
hlt
ficomps
push
jmp
and
xlat
mov
testl
xchg
sbb
add
fstl
hlt
lea
pop
and
xlat
stos
mov
and
ret
nop
fdiv
iret
pop
inc
loope
cs
mov
cmpsb
bound
xor
jbe
test
and
paddq
daa
shlb
jg
fisubs
cld
inc
frstor
into
roll
cs
pop
jnp
jg
ret
outsb
and
dec
sahf
jae
xor
in
addb
push
data16
add
mov
or
stc
mov
movsl
pusha
decl
mov
ret
mov
xlat
mov
and
popa
sub
nop
scas
mov
mov
and
sbb
shlb
add
mov
dec
mov
mov
adc
sarl
push
aad
sbb
mov
push
bound
fisubs
pop
movsl
sbb
in
mov
lret
gs
lock
jbe
pusha
cltd
lahf
nop
dec
pusha
xchg
scas
fldl
lds
call
dec
les
nop
push
std
es
sub
pop
icebp
fucomip
decl
sar
mov
inc
dec
subb
andnps
movsb
int
xchg
cltd
movsl
ja
pop
jne
fidivrl
imul
fadds
or
pop
xchg
mov
les
xchg
stos
jae
jne
inc
push
addl
stos
mov
sbbl
sbb
js
lods
es
jle
sub
loopne
mov
lock
sub
dec
scas
hlt
cmc
jmp
fcoms
sub
jns
popa
lret
or
leave
mov
xor
xor
in
jbe
pusha
and
enter
rorb
jge
xchg
ljmp
dec
mov
ret
shlb
hlt
xchg
ds
adc
aas
lea
push
ds
mov
sbb
lock
adc
xor
xchg
pushf
es
sahf
mov
sti
push
mov
nop
xchg
fdivp
mov
in
add
sbb
push
jne
fiaddl
adc
leave
cmp
cld
movsl
push
jmp
add
sbb
fsubs
stos
lods
into
adc
add
push
xchg
hlt
pop
mov
mov
mov
loope
xor
jge
push
mov
loop
sti
push
adc
ljmp
cmpsl
ljmp
les
fcompl
hlt
movsb
iret
mov
adc
and
mov
xchg
dec
push
dec
hlt
lods
and
aam
jbe
adc
adc
adc
jmp
xchg
jg
loop
ss
out
loopne
adc
lahf
and
ficoms
shll
clc
out
dec
imul
add
scas
mov
shlb
jle
mov
mov
es
add
fldenv
push
dec
xchg
gs
push
insb
sbb
loope
jl
daa
mov
xchg
jns
lods
or
sbb
cmp
pop
mov
jg
gs
mov
add
push
sti
mov
aam
lret
cmc
into
addr16
xchg
hlt
adc
lcall
mov
sbb
movsl
icebp
jne
add
movsl
push
mov
push
or
mov
rcrl
mov
jnp
xor
push
inc
push
ja
add
push
lcall
dec
movsb
aad
dec
decb
or
or
xchg
popf
jne
inc
pushf
jp
xor
fadds
insl
aad
cmp
aam
mov
aaa
sub
add
cmp
stos
sub
cli
ffreep
popa
outsb
mov
pop
inc
ljmp
sub
dec
enter
movsl
rcll
hlt
cmp
lcall
in
icebp
pop
nop
arpl
push
hlt
xor
push
js
test
mov
in
int3
cmp
mov
lahf
sti
dec
push
add
sub
mov
mov
sbb
adc
push
mov
adc
jne
mov
xor
lret
in
clc
inc
js
push
stos
pushf
out
mov
sbb
jle
sbb
sub
jmp
adc
jbe
addr16
rep
xlat
jno
stos
out
sbb
dec
lock
or
fimuls
imul
inc
aam
lock
pop
call
adc
sub
hlt
test
lock
sbb
fcomps
push
xorb
std
enter
fdivl
hlt
cmpsb
sub
add
out
dec
dec
lret
xor
ret
sub
sub
in
hlt
xchg
sarl
shrb
add
addb
or
xor
mov
add
xor
mov
add
mov
out
xorl
mov
mov
jae
mov
std
pusha
adc
dec
repnz
cmpl
jnp
mov
mov
fsubrs
cmpsb
mov
or
loop
in
lods
sub
push
sbb
in
in
dec
scas
testl
jns
dec
add
jns
and
inc
je
call
mov
call
inc
out
mov
pop
xchg
inc
cld
mov
fstpl
psubsw
mov
inc
cmpsl
lds
dec
sub
repnz
aam
xchg
mov
push
mov
and
stos
clc
mov
and
mov
add
sbb
sbb
popf
imul
inc
mov
fs
addl
jne
mov
add
call
fsubrl
fisubs
cld
sahf
movsl
push
mov
mov
add
movsl
shll
arpl
jge
inc
xchg
inc
jmp
xor
int3
sbbl
dec
les
fdiv
es
pop
cwtl
rol
pusha
add
imul
pop
xchg
gs
data16
add
es
pop
mov
xchg
test
or
divb
jo
add
mov
sti
adc
jle
test
mov
outsl
popf
mov
bound
inc
adc
mov
clc
pop
out
pop
or
insl
cmpsl
mov
ret
xor
in
mov
or
push
incl
pop
mov
test
mov
insb
stc
lods
test
push
fists
cld
jnp
repz
inc
dec
mov
movsl
nop
in
cmp
test
sub
into
gs
adc
pop
mov
dec
cli
pop
lcall
xor
into
jbe
mov
pop
adc
loopne
push
mov
imull
push
pushf
flds
clc
mov
and
sti
push
mov
xchg
inc
leave
imull
mov
dec
call
xor
ret
mov
test
and
lea
popa
cmp
cmc
sbb
lret
add
sbbb
fcoml
pop
mov
lcall
inc
or
addl
out
or
dec
fs
shrb
hlt
aas
sahf
xchg
les
nop
test
inc
hlt
inc
mov
xlat
nop
mov
ljmp
mov
sarl
add
enter
cwtl
icebp
jp
mov
fstl
jecxz
jo
fstpt
and
vpaddusw
shrb
daa
sarb
clc
loope
pusha
dec
mov
jle
movsl
std
mov
pop
test
and
cmp
pop
mov
and
jae
cmpsl
xchg
stos
int
mov
or
dec
mov
enter
mov
xchg
or
sub
push
loop
ficoms
cmp
dec
jne
sbb
pop
cmc
shrb
mov
xchg
push
rorl
addb
or
add
testl
xchg
popa
inc
fildl
inc
mov
jne
repz
repnz
repnz
sarl
pusha
outsl
test
push
xchg
lahf
add
aad
xorb
sbb
out
push
cmpl
lret
fidivrl
daa
mov
sub
pop
ja
sub
mov
or
in
inc
mov
add
dec
adc
loope
scas
shll
in
cmpsb
fsubr
mov
orl
int
fcomps
or
push
xchg
mov
push
mov
dec
stc
movsb
sub
lret
dec
orb
enter
dec
sbb
mov
lret
add
xchg
rcll
imul
xor
cli
mov
jb
outsl
mov
dec
xchg
add
or
fbstp
jle
jle
pushf
sub
xchg
pop
sub
mov
or
sbb
cld
sti
lret
or
jbe
pop
pop
stc
shld
sbb
cmp
std
push
negb
lods
inc
mov
das
repnz
aad
push
mov
idivl
in
push
xchg
outsl
hlt
jl
hlt
or
fimuls
inc
outsl
push
jbe
pop
mov
rorl
sub
xor
ret
stos
jecxz
adc
dec
fsubrl
std
mov
jns
jp,pt
stc
xor
pop
fs
sbbb
jo
mov
enter
ljmp
das
mov
testb
add
mov
xchg
repz
imul
icebp
enter
pop
or
cmpsl
scas
fcmovb
and
or
cmp
mov
mov
jge
dec
push
mov
sahf
test
inc
jecxz
pop
movb
scas
mov
mov
popf
and
jge
scas
in
adcb
sbb
pop
rol
arpl
outsl
sbb
stos
orb
mulb
jb
pop
movsb
insl
fsubl
or
imul
pop
dec
mov
fstpl
sbb
js
mov
stc
call
popa
xchg
lds
mov
ficomps
mov
xor
inc
xlat
sub
push
push
pusha
insl
jge
mov
movsl
ja
les
addl
addb
fistpll
sti
movsl
movsb
and
addb
xchg
out
mov
repz
hlt
sbb
pop
jge
or
andl
clc
arpl
inc
mov
pop
xchg
xor
int3
mov
and
dec
in
les
xchg
leave
sub
cmpsb
ds
sbb
jne
mov
les
push
lcall
mov
jle,pt
adc
mov
shlb
cs
sbbl
and
outsl
and
jo
sub
loope
fsubl
data16
xchg
iret
ret
or
orb
jp
mov
adc
cli
mov
jno
inc
in
push
in
scas
stos
cld
imul
andb
xor
lods
add
cmpsb
daa
mov
and
pop
dec
adc
add
push
insb
loopne
mov
dec
int3
cmc
inc
xor
andl
mov
dec
lods
fildll
or
stc
test
das
pusha
adc
lods
clc
mulb
shlb
and
stos
cltd
cmp
js,pn
sti
jnp
mov
mov
inc
mov
cmpsl
xor
push
mov
xor
cmp
mov
mov
jp
bound
dec
rclb
addr16
out
mov
push
mov
sub
pop
dec
lea
into
mov
push
dec
cmp
xchg
insl
jge
cmp
xor
xchg
push
sbb
sub
xor
movsb
scas
in
xor
sbb
lods
mov
call
mov
fs
add
xor
push
pusha
sti
es
hlt
or
stos
add
mov
xchg
mov
push
cs
inc
inc
or
fcomip
dec
push
pushf
fsubrl
cmp
and
movsl
inc
cmp
push
js
in
cmp
mov
pusha
scas
push
inc
pop
test
fstp
into
ljmp
xchg
dec
push
imul
cli
push
rcr
pop
mov
add
sti
and
adc
xorl
mov
mov
ret
or
icebp
inc
inc
hlt
push
ss
cmc
sub
jo
fidivrs
add
or
fimull
pop
cwtl
cmp
jp
out
nop
or
sti
push
fldt
cmp
inc
xor
push
sbb
call
xor
sub
cmpsl
out
cs
shl
leave
out
mov
mov
lret
hlt
sub
push
jnp
stos
rolb
shrl
lret
arpl
xor
mov
cmpsb
movsl
loopne
pusha
xchg
pop
cmc
mov
inc
shr
mov
lods
loopne
lret
mov
hlt
fdivl
and
adc
push
add
mov
mov
cmp
pop
adc
ss
sbb
or
lock
adc
push
xorl
xor
idivl
xchg
call
or
mov
daa
popf
sub
ret
enter
imul
fcomip
xorb
lcall
xor
call
mov
stos
mov
jl
mov
or
cwtl
icebp
pop
add
mov
jl
xchg
mov
enter
lret
and
enter
jns
dec
and
push
mov
ret
arpl
dec
imul
dec
push
xchg
das
sbb
imul
mov
in
shl
aam
leave
divl
clc
jae
dec
jge
aam
cmp
fidivrs
xor
ds
rorl
add
lcall
pushf
xchg
push
jp
gs
sub
popf
lock
decl
mov
sbb
iret
cmpsl
cli
popa
jmp
lahf
ljmp
jo
aas
adc
cli
adc
xchg
xlat
pop
push
mov
or
inc
inc
sub
lahf
or
outsb
xorl
out
sub
iret
jb
xchg
xchg
loope
lret
dec
add
xor
mov
sub
cmpsl
add
or
cli
movsb
fadds
scas
push
rcrb
dec
cmp
jne
sti
jb
mov
in
or
jmp
or
shlb
mov
pop
ja
pop
xchg
push
cmc
hlt
add
adcb
mov
jb
add
adc
ss
mov
jge
sti
fdiv
scas
insl
mov
bound
je
cmp
out
push
mov
mov
lret
xchg
push
cmp
adc
fdivl
scas
call
shr
dec
cld
mov
xlat
pop
addl
jg
xor
out
aaa
mov
push
cmp
jno
pop
scas
xor
push
rolb
mov
cmc
pop
push
xchg
mov
mov
hlt
test
fnstenv
push
test
movsb
repz
cmpsb
pop
leave
cmp
jnp
inc
xchg
nop
lea
pop
jmp
scas
pusha
sub
roll
insb
leave
andl
das
out
adc
scas
andb
or
sub
cmp
clc
push
cmp
hlt
je
mov
leave
add
aam
bound
dec
outsl
pop
mov
push
call
pop
inc
fcmove
cmpsl
mov
mov
movsb
out
cs
xchg
mov
out
mov
cmp
pushf
sub
ret
pop
fldenv
hlt
push
dec
fcoms
mov
ja
inc
adc
scas
fimuls
jnp
out
push
repnz
mov
add
loope
cmp
aam
mov
leave
nop
pop
sub
inc
pop
pop
add
leave
jbe
fdivrl
insb
cmp
xchg
shrl
inc
dec
cmpsl
mov
rol
lcall
stos
std
out
push
cmpb
sub
mov
sbb
jno
je
jno
stc
and
add
call
mov
mov
inc
test
jecxz
mov
orl
int3
jle
out
sub
inc
addb
insl
stos
or
fidivs
sub
mov
xchg
add
dec
es
sub
cmp
and
push
pop
adc
ret
push
mov
dec
mov
adc
mov
mov
mov
leave
lock
cmp
jns
mov
jl
jp
imul
xor
fisubrs
cwtl
stos
pop
fsubs
xor
jae
inc
fwait
jne
test
mov
mov
mov
push
int3
pop
add
hlt
cs
pop
mov
xor
xchg
mov
lea
insb
lods
icebp
dec
ljmp
mov
jmp
add
fsts
ret
mov
loopne
pop
jb
mov
dec
xchg
ds
lods
xchg
add
testl
inc
stos
xor
adc
mov
lret
ljmp
inc
xlat
adc
int3
add
pop
leave
fildll
lret
in
test
gs
mov
testb
sbb
sbb
or
dec
sub
shll
add
clc
or
nop
mov
xchg
imul
lret
sahf
push
pusha
pushf
rolb
bound
sub
xchg
inc
andb
and
xorb
cmc
ds
mov
mov
adc
mov
mov
rclb
add
jae
jecxz
ret
aam
hlt
bound
aam
xchg
push
mov
nop
out
lret
gs
ds
push
adc
das
lea
dec
mov
mov
mov
mov
mov
test
jl
xchg
mov
cmp
xchg
inc
and
js
cwtl
xlat
cmpb
sub
cmpsl
das
pop
pop
cld
ret
outsb
pop
nop
push
cmp
in
les
std
fmull
xor
inc
jne
into
divb
pop
mov
mov
mov
je
mov
and
cmp
mov
inc
sbb
std
mov
loope
mov
repnz
xchg
dec
dec
enter
jg
ja
jge
inc
adc
pop
jno
mov
or
inc
add
popa
cld
ja
mov
xlat
nop
dec
decl
out
test
push
ljmp
outsl
pop
xchg
and
inc
xchg
int
inc
addr16
insb
ds
aas
inc
outsl
aad
dec
adc
insb
bnd
push
mov
sbb
stos
xorb
data16
stos
or
mov
inc
incb
out
sbb
mov
pop
cmc
jmp
mov
and
cwtl
sub
xchg
push
and
ljmp
inc
or
sbb
rolb
movsb
sbb
xchg
popa
in
call
loopne
fsubr
js
cwtl
push
lds
addps
add
inc
inc
shlb
es
test
jbe
nop
pusha
jmp
mov
cwtl
pop
push
ljmp
or
js
pop
adc
js
xor
and
sahf
xchg
stos
fdivs
test
lock
xchg
jae
pop
aam
push
mov
rol
sub
or
std
and
nop
mov
loopne
mov
push
ret
add
pop
jecxz
fisubrs
sub
movsl
lret
xchg
fdivrs
or
aad
sarl
adcb
sahf
jp
push
mov
inc
mov
push
and
push
lods
jle
or
stos
push
andb
sub
rol
pop
xchg
test
inc
fcompl
mov
loopne,pt
into
movl
andl
push
nop
mov
mov
jle
aas
adc
xchg
std
int3
mov
inc
test
ss
imul
shl
imul
sub
je
dec
sub
sbb
lret
cmp
xor
test
dec
ret
les
or
out
push
in
add
cmpsl
std
cld
fs
mov
adcb
mov
outsl
mov
pop
int
ret
call
pop
lret
mov
mov
sub
popf
mov
int
cmp
nop
or
movsb
dec
cmp
cmp
inc
orb
add
inc
sahf
jbe
idiv
dec
mov
cmpsb
sub
pusha
push
leave
dec
out
add
pop
clc
incb
les
add
test
and
jno
aam
jo
sub
scas
xchg
bound
test
hlt
pop
mov
out
les
mov
arpl
add
mov
mov
pusha
adc
into
insb
flds
fs
add
enter
cmp
movsb
and
mov
div
int3
dec
mov
or
mov
pop
jg
arpl
movsb
mov
std
cmp
xchg
jae
jp
popf
dec
dec
sti
jle
mov
jae
cmc
xorb
popa
adc
fdivrs
mov
push
xchg
in
mov
mov
push
inc
fcmovne
cmp
add
sbb
hlt
data16
mov
mov
xor
jbe
push
push
cwtl
xor
jnp
add
fdivs
cwtl
sti
mov
jnp
mov
cli
imul
jmp
add
pop
push
mov
shl
adc
js
dec
enter
push
jp
sahf
cltd
or
arpl
mov
mov
call
jl
push
pop
test
leave
jnp
push
or
mov
inc
int
pop
andb
push
jmp
rcr
dec
push
mov
fisttps
call
mov
or
outsb
cmp
outsb
pop
orl
sbb
inc
jp
xchg
inc
jmp
aaa
sahf
shl
pop
sub
add
add
into
das
ljmp
mov
add
faddl
leave
lods
fadds
hlt
out
lcall
pop
out
repnz
scas
mov
leave
fdivs
mov
mov
xchg
xchg
std
int3
loopne
or
test
enter
push
push
fdivl
and
xchg
rcl
and
repnz
xchg
push
int
scas
movb
out
sbb
jb
add
adc
mov
inc
js
jg
enter
les
mov
mov
pop
test
int3
popf
jecxz
jmp
cmpsl
std
andl
adc
mov
mov
jle
pop
and
mov
and
out
mov
repz
std
dec
mov
xor
inc
mov
imul
orl
popf
add
popa
fwait
mov
inc
mov
xor
sbb
test
xchg
dec
sub
add
in
add
jne
dec
mov
sbb
jp
fdivs
adc
imul
shll
push
ja
cmpsb
iret
shlb
cs
adc
mov
jne
adc
mov
pop
xchg
loop
aas
ficompl
jp
filds
adc
sbb
cmc
stos
lods
leave
stos
loop
ljmp
inc
cli
div
sub
cmpsb
push
xchg
pushf
mov
nop
push
sub
ret
mov
adc
hlt
fdivl
mov
cmpsb
mov
cmc
pushf
mov
sub
icebp
inc
call
sub
gs
mov
mov
mov
nop
jge
imul
xor
test
pop
lahf
fistps
jne
loope
aas
in
hlt
mov
leave
xlat
xor
in
das
out
mov
sbb
in
adc
xchg
jo
inc
scas
lds
jp
adc
lcall
mov
test
sbb
push
jg
push
dec
and
scas
mov
mov
sbb
mov
fmuls
bound
push
pop
sub
mov
sbbl
inc
mov
incb
inc
imul
jp
pusha
divb
pop
cltd
jae
add
mov
in
int
xor
or
xor
data16
push
imull
add
stc
es
lea
out
mov
stos
xor
jo
mov
sti
push
mov
fdivl
sbb
stc
dec
inc
xchg
enter
cmc
sbb
mov
or
jg
scas
scas
shlb
lret
shlb
std
add
jle
xor
test
out
adcl
add
shrb
pop
mov
mov
daa
fnstsw
lcall
flds
hlt
sub
sahf
jle
inc
iret
sbb
sub
xchg
xchg
inc
fldl
cli
in
mov
cld
jo
loopne
std
sti
jp,pt
xchg
adc
mov
sub
popf
xchg
or
gs
stos
fmull
push
adc
jne
push
lret
pop
aam
sbb
add
push
imul
sbb
jae
add
out
hlt
xchg
stos
into
dec
repz
pop
mov
scas
xor
mov
dec
or
jmp
dec
jl
arpl
pop
jp
jno
cmpsb
jle
mov
add
test
std
mov
mov
or
ret
xchg
pushf
push
test
icebp
xchg
add
scas
cld
add
mov
call
adc
in
sub
es
push
lods
enter
out
mov
shll
incl
or
outsb
mov
enter
push
mov
pop
jecxz
and
push
pop
cwtl
and
popf
daa
loopne
cmp
ror
movsl
fidivrl
in
sti
jmp
das
push
subb
mov
jl
xchg
iret
inc
and
fwait
dec
mov
cmp
mov
mov
clc
dec
mov
add
cmp
jno
mov
mov
stos
sbb
sub
push
cmc
xchg
sti
pop
or
mov
sub
scas
lods
hlt
sbb
sti
adc
mov
jle
fists
pop
sahf
cmp
cmpl
pusha
fnstcw
jno
adc
pop
mov
pusha
icebp
mov
add
ret
rcl
mov
in
sbb
mov
outsl
cmp
mov
mov
dec
mov
ljmp
std
nop
dec
mov
fadds
mov
xor
cltd
inc
cmp
xorb
push
scas
imul
xchg
cltd
cmpsl
leave
jp
add
imul
out
add
loop
pop
mov
imul
aas
in
int
mov
stos
ficoms
daa
mov
fistpll
fdivl
das
dec
std
les
pop
clc
mov
andb
pop
jle
leave
mov
into
cmp
push
xchg
cmpsb
dec
mov
shll
sub
dec
mov
mov
repz
movsl
xor
dec
mov
enter
sub
inc
insl
xchg
sub
push
es
mov
fs
sub
int
dec
mov
adc
jge
push
push
jne
lret
mov
adc
mov
inc
inc
pushf
in
mov
into
sub
xsha1
cmpsb
or
repz
mov
pop
rclb
lret
ljmp
and
cld
cwtl
push
hlt
repnz
inc
jp
adcb
hlt
int3
loop
add
xor
inc
enter
leave
jns
cli
jne
imul
xchg
jmp
pop
mov
and
add
pop
mov
pop
add
imul
stc
test
sbbl
inc
mov
jne
jo,pt
es
cmc
lods
fwait
adc
fisubrs
pushf
icebp
xor
add
test
cmpsl
frstor
and
into
icebp
xor
jno
mov
inc
xorl
xlat
hlt
adc
mov
lock
or
cmpl
gs
ljmp
pop
in
loopne
int3
test
scas
push
inc
stos
lcall
xor
push
xor
dec
mov
adc
mov
push
sub
sub
leave
lods
mov
repnz
push
jne
test
mov
cmpsl
xchg
pusha
sub
jne
and
popa
mov
iret
cwtl
inc
stos
or
jb
jns
mov
and
mov
notl
shlb
std
push
sbb
dec
pop
movsl
push
flds
xchg
mov
push
rolb
out
int3
int3
xor
dec
movsb
adcl
ljmp
movsl
mov
inc
xlat
adc
mov
movsb
dec
xor
inc
rolb
sti
mov
lahf
push
enter
adc
push
cmc
mov
pop
push
rcl
dec
mov
cmp
mov
dec
inc
and
and
dec
and
mov
jecxz
mov
das
cmpsb
push
cltd
hlt
or
adc
aam
ret
adc
inc
dec
jbe
cld
cmp
lret
pop
dec
xchg
in
sub
hlt
daa
out
pop
dec
xor
xor
inc
mov
nop
nop
cltd
mov
or
decb
inc
pop
out
sbb
xorb
mov
and
mov
add
push
jecxz
mov
or
xchg
fcompp
pop
or
push
mov
push
sbb
cs
mov
rcrb
test
gs
std
fwait
add
lods
xor
cltd
pop
jns
ret
call
jns
jge
cmpsl
fstl
clc
ja
sbb
xor
adc
stos
or
lcall
loopne
test
push
call
or
or
mov
add
shlb
pop
lret
test
out
lods
pop
rcrb
mov
arpl
aam
push
pop
jo
mov
xchg
lret
adc
lret
dec
std
mov
jmp
xor
and
jg
testb
jne
movsl
or
mov
gs
inc
hlt
sub
inc
push
lret
mov
dec
jecxz
loopne
aas
xchg
sti
shll
push
outsl
add
fisubs
push
es
test
out
adc
or
lcall
fwait
scas
div
fwait
pop
mov
push
rclb
adc
mov
and
nop
sbb
mov
sbb
nop
aaa
jl
loop
out
dec
inc
add
lods
movsb
nop
mov
cmp
scas
adc
mov
stos
test
out
add
mov
dec
jne
push
repnz
push
xchg
inc
aad
xchg
imul
cwtl
mov
jle
insl
int
sbb
sub
fsubrs
cmp
jecxz
inc
fstpl
xchg
cli
out
add
aad
sbb
mov
jle
dec
mov
sti
imul
sbb
aam
inc
seta
sbb
ret
mov
mov
add
and
repnz
stos
test
jmp
sub
xchg
mov
hlt
out
out
int3
test
and
add
xchg
add
xchg
lret
das
xlat
add
cmp
push
mov
dec
repz
mov
adc
pop
adc
push
cwtl
jnp
push
push
pop
fbstp
or
inc
les
iret
ja
divb
aad
outsb
sub
jne
xor
pop
xchg
mov
xchg
mov
leave
lods
loopne
mov
fildl
scas
or
pop
jp
or
xorl
repz
sub
mov
mov
inc
orb
mov
aaa
in
jns
sub
out
mov
add
cs
ret
in
and
sahf
or
outsb
xlat
inc
sbb
mov
lods
mov
jl
cmpsb
mov
je
jge
inc
loop
pop
stc
inc
leave
pop
imul
or
cld
pusha
jbe
ljmp
bound
inc
pop
shr
add
fldl
insl
es
sbb
mov
pop
ljmp
out
cmpsb
jg
cli
push
mov
inc
clc
cmpl
add
es
jecxz
movsl
mov
in
in
leave
mov
inc
push
ds
iret
mov
lock
subl
adc
out
cmp
popa
cltd
mov
scas
xchg
cmc
popa
mov
adc
insb
adc
shlb
pushf
jnp
inc
jb
or
or
nop
sub
ds
inc
int
andl
not
sbb
mov
lods
or
subl
jge
mov
stc
add
scas
push
jnp
mov
or
cmp
inc
fstp
inc
push
pop
sub
sub
in
frstpm(287
pop
shrl
pop
hlt
xor
push
push
add
push
jmp
inc
hlt
daa
and
or
dec
sbb
sub
hlt
cld
js
pop
push
mov
popa
lret
scas
sub
jmp
push
std
pushf
push
subb
jl
adcb
test
cltd
enter
xchg
lcall
mov
shrb
loopne
pusha
pop
dec
mov
or
nop
mov
cltd
test
inc
pop
rcrb
data16
insb
outsb
jne
inc
test
mov
cmp
jp
dec
mov
inc
pop
rclb
cmp
stc
fidivrl
js
sbb
cmp
push
rcrb
mov
xchg
shrl
push
outsl
inc
pop
jo
loope
xchg
sub
adc
hlt
and
lret
sub
dec
inc
sbb
jns
sbb
and
mov
orb
cmpl
hlt
cmp
rcl
push
mov
adc
inc
sbb
call
push
mov
les
or
divl
repz
sub
and
test
lret
sub
stos
shr
push
dec
jns
aad
dec
stos
pop
mov
std
data16
jl,pn
sbb
push
arpl
inc
xor
adc
jne
pop
jl
sub
xchg
push
jbe
add
push
lea
dec
sub
mov
push
shll
sarl
lods
mov
jno
insb
sbb
cmp
adc
mov
cmpsl
pop
in
xchg
dec
sub
insl
shlb
enter
cld
shll
dec
dec
hlt
pop
sub
das
inc
call
sub
or
sub
inc
add
dec
popf
lods
testb
or
nop
shufps
hlt
xor
xor
nop
cmpsb
stos
or
arpl
mov
add
pop
cmp
mov
data16
push
xchg
insb
and
cmp
xor
imul
adc
loope
mov
arpl
or
clc
call
gs
jecxz
sub
test
pop
inc
sub
mov
and
imulb
addb
shlb
fldl
hlt
scas
push
shlb
inc
mov
popa
pusha
rep
pushf
adc
jns
pop
jmp
cmpb
xor
cmpsl
outsb
aad
jecxz
adc
or
jbe
add
jne
gs
jge
popa
dec
inc
inc
and
mov
iret
loopne
fcompl
sub
es
xor
jp
pop
pop
out
xchg
mov
nop
mov
mov
das
cmp
add
push
rcl
adc
cmp
xor
addl
sbb
pop
ret
cmp
int3
inc
jne
ljmp
add
mov
mov
add
adc
iret
lret
scas
jo
adc
insl
push
jg
lcall
push
jne
jne
mov
pop
push
dec
fildl
mov
jb
scas
inc
sahf
outsl
mov
lcall
int
sub
int
xchg
je
test
or
rep
adc
xchg
dec
pop
push
inc
popf
pop
sti
fiadds
cmpsl
ret
sbb
add
es
cmc
nop
scas
and
mov
addl
call
cs
arpl
inc
enter
xor
dec
jne
fisttpll
adc
hlt
push
jmp
inc
mov
cs
sbb
mov
clc
in
shlb
enter
sub
xchg
rorb
inc
push
cli
mov
cmp
mov
jge
add
repnz
push
inc
push
mov
jl
out
int
dec
arpl
lea
pop
sbb
pop
mov
inc
fisttpl
or
mov
cltd
imul
pop
xadd
out
outsl
nop
es
stos
push
mov
test
popf
mov
mov
pop
in
in
outsl
dec
fldl
insb
hlt
xorb
cli
imul
call
push
add
pop
adc
inc
jns
data16
push
jne
roll
cld
pushf
mov
pop
inc
insl
outsb
test
inc
mov
push
sub
add
mov
mov
mov
je
out
and
scas
fldcw
lods
push
clc
jno
pop
out
jge
cs
xlat
call
int
mov
sti
pusha
out
push
adc
add
inc
push
cmp
mov
jne
or
popl
gs
sbb
or
sbb
mov
pop
ret
inc
fistpll
add
int
push
fdivrs
and
leave
jno
sbb
in
movsl
or
mov
dec
adc
hlt
outsl
mov
mov
loope
jl
jecxz
dec
mov
cltd
jmp
push
xchg
adc
inc
jecxz
call
pop
adc
roll
jo
shlb
repz
mov
xor
je
xchg
pusha
lea
nop
in
aas
call
adc
out
pusha
pop
fiadds
mov
inc
hlt
mov
cli
pop
data16
mov
ljmp
xchg
lods
mov
jp
fsubrl
cli
ds
mov
or
jmp
mov
loopne
push
mov
cmp
cli
pusha
adc
mov
jbe
sub
mulb
inc
dec
enter
pusha
ror
jmp
subl
mov
outsb
test
movsl
shl
fsubr
xor
hlt
js
sahf
stos
mov
mov
cmc
lret
add
fdivrs
mov
mov
clc
mov
jno
clc
scas
cmp
stc
out
sbb
test
dec
pusha
push
ja
aas
fmull
jo
sbb
shl
add
ljmp
pop
std
dec
leave
sub
cmpl
push
xor
ret
pop
cmp
or
stos
and
gs
shrb
pop
pop
lods
jnp
pop
lahf
cmp
enter
int
sub
jne
test
loope
xor
adcl
adc
dec
pop
and
jne
shrb
clc
rcr
in
fsubrs
dec
lods
bound
fnstcw
adc
mov
pusha
dec
pop
add
jge
mov
inc
into
mov
mov
sub
or
or
and
push
sahf
xchg
sarb
test
fidivrl
dec
mov
jno
mov
adc
mov
mov
push
inc
shrl
imull
in
hlt
mov
shll
jg
cmp
lods
mov
xor
repnz
push
pop
jnp
adc
jns
or
lock
inc
jge
xchg
jmp
std
iret
stc
jns
pop
xchg
shlb
out
es
push
les
xor
xorl
imul
pop
nop
mov
repz
or
dec
test
lea
mov
loopne
push
hlt
cmp
jns
mov
push
out
loope
jmp
sub
int3
mov
hlt
dec
mov
jecxz
scas
divl
test
adc
dec
jmp
xchg
cmc
mov
mov
es
add
shl
icebp
hlt
ret
imul
xor
rcrl
rolb
mov
lea
xlat
test
xchg
lret
cmp
incl
test
xor
xor
in
dec
cs
sub
cmp
cwtl
mov
ja
rorb
pop
sbb
sbb
fstpl
std
enter
push
mov
pop
mov
lret
xchg
mov
outsl
mov
cs
loope
sub
ds
repz
cli
and
add
dec
lods
or
jb
push
adc
sahf
sub
lahf
pop
inc
ret
addr16
out
or
pop
mov
out
hlt
xchg
add
int3
hlt
mov
sarl
push
inc
out
sti
insl
add
filds
cwtl
out
jge
xorl
mov
inc
add
sar
mov
insb
mov
mov
data16
popa
les
xchg
mov
in
scas
xchg
pop
push
aaa
leave
fldcw
sbbb
leave
pop
jns
and
repz
cltd
stos
add
xchg
jnp
inc
imull
cmp
mov
aas
dec
nop
mov
and
adc
mov
push
pushf
dec
or
xor
cmp
sub
hlt
jbe
in
sub
shlb
jo
aam
mov
xor
adc
xchg
mov
cltd
sub
mov
fstps
xor
cmp
or
inc
hlt
mov
andl
testl
dec
or
xchg
fisttpll
xorl
sahf
mov
leave
pop
hlt
popa
mov
mov
xor
sbb
and
push
and
jecxz
or
sub
sbb
mov
jl
sub
aam
movsl
sub
sbb
enter
lea
xor
dec
mov
pop
ss
lret
fsubrs
push
jae
or
mov
pop
popa
cmp
in
mov
fstl
cmp
repz
data16
or
inc
push
mov
aas
pop
sub
out
push
sub
mov
cmpsb
fdivrl
loopne
daa
adc
lock
cmp
inc
in
test
cs
inc
or
or
sti
xor
loope
sub
pop
mov
imul
add
hlt
dec
xchg
cmpsl
or
loop
mov
in
stos
pusha
cld
jle
jns
jmp
fcompl
jg
orb
adc
cmpl
inc
inc
push
fadds
adcl
fistl
inc
push
in
sti
subb
fxch
sbb
std
mov
cmp
leave
inc
mov
add
or
pusha
nop
out
pop
std
pop
fdivrl
mov
adc
xor
frstor
test
xlat
inc
call
inc
add
rclb
out
call
jle
inc
pop
les
sub
mov
into
xchg
arpl
arpl
ficomps
cmp
sar
adc
rolb
add
dec
add
sub
push
cmpsl
push
popa
into
mov
popa
sahf
mov
jb
push
jge
mov
xchg
jb
in
jne
aaa
daa
xor
hlt
xchg
cld
mov
jns
mov
add
bound
loop
out
dec
add
xor
repz
out
ss
ss
dec
jle
pop
in
inc
add
dec
nop
popf
mov
stos
jle
dec
or
incb
pusha
mov
add
loope
nop
mov
or
fisttpll
lods
jnp
inc
and
mov
dec
out
lcall
leave
mov
stos
cltd
push
loope
popa
rcl
mov
scas
into
enter
sar
dec
stos
or
shrb
nop
mov
inc
out
pop
insl
inc
push
cmpsl
cwtl
enter
dec
jge
ret
data16
scas
add
scas
xchg
sub
cli
mov
dec
fs
dec
in
subl
mov
mov
jmp
jne
mov
clc
sbb
pop
xorl
jbe
lods
jo
xchg
or
fdiv
movsl
jp
inc
pushf
jmp
mov
cmp
test
add
mov
divps
into
dec
scas
dec
fsubs
pop
sub
cmpsb
push
push
into
add
mov
lods
mov
lods
lret
push
and
jg
pop
xchg
mov
jne
mov
outsb
hlt
inc
fnstsw
mov
out
mov
mov
ret
push
ljmp
out
aaa
shll
add
inc
jl
test
hlt
jb
xchg
jb
xchg
sub
sbb
je
fwait
es
popa
lahf
nop
jne
lcall
mov
xchg
insl
inc
int3
mov
ss
addr16
jle
add
and
lahf
fnsave
or
add
mov
sarb
push
stos
fmul
hlt
es
ret
shll
cwtl
dec
push
outsl
add
xchg
rol
int
cmp
ja
sub
out
sbb
push
mov
push
sbbl
xorb
dec
pop
jnp
push
dec
push
add
lret
push
jmp
mov
xchg
inc
cld
jp
test
fsubp
push
add
pop
cmp
divb
nop
popf
nop
push
es
mov
mov
dec
repnz
mov
mov
loopne
mov
mov
dec
xor
addl
mov
jo
testb
mov
andl
cmp
mov
ds
push
xor
subl
jp
outsl
or
mov
leave
arpl
stos
and
xchg
out
or
incb
fsubr
das
test
adcl
jle
aad
je
jle
jmp
xor
es
pusha
call
pop
xchg
in
aas
cltd
popa
cmp
es
mov
shll
and
addl
xor
inc
call
dec
aad
dec
clc
cmp
xchg
push
inc
lret
sub
jmp
scas
mov
fsubs
pushf
test
mov
orb
sbb
pop
hlt
mov
lcall
mov
mov
add
out
rclb
push
ljmp
cmp
jle
or
in
mov
jnp
push
sub
test
mov
cmp
pop
pop
xchg
mov
jle
testl
dec
mov
sub
aam
cmp
stos
xchg
out
xor
dec
mov
ficomps
add
stc
push
es
xchg
sub
push
fsts
xchg
push
xorl
jle
aas
es
jne
dec
movsb
add
das
into
es
xchg
arpl
pop
icebp
jnp
push
mov
sbb
loope
cmp
push
pusha
jae
test
add
lds
mov
std
mov
jne
jno
hlt
aas
out
lods
cli
and
lcall
sbb
stos
test
fidivl
hlt
sbb
lea
jecxz
cli
pop
imul
add
sti
jb
cmp
scas
xorl
xor
cmp
pushf
sub
inc
jne
pop
jge
faddl
xchg
xorb
cmc
faddl
loope
push
ss
or
xchg
sahf
mov
mov
sub
js
rcl
ss
insl
cmovbe
sub
dec
leave
ret
jge
mov
push
jp
push
sub
rcll
nop
xorb
inc
mov
dec
jge
add
icebp
xor
pop
mov
adcl
fidivs
repz
enter
push
and
aas
mov
xor
mov
and
in
xchg
pop
mov
push
add
xlat
xor
pushf
xchg
stc
sub
fildll
mov
adc
insl
pop
jg
mull
or
les
in
rcrb
mov
add
cmp
dec
popa
ret
ret
and
and
lcall
xor
aam
lods
bound
xchg
mov
push
jo
mov
adc
push
pop
call
pop
arpl
roll
xorl
popf
push
push
scas
and
nop
test
push
push
lods
mov
dec
outsl
in
pop
hlt
pop
leave
movsb
jns
xchg
lahf
add
test
out
or
fwait
into
jmp
out
adc
jl
ret
lcall
add
sub
adc
xchg
mov
hlt
pop
stos
inc
xor
icebp
push
jbe
mov
inc
pusha
dec
xor
xor
pushf
dec
mov
ljmp
push
xor
xchg
mov
xchg
rcl
frstor
mov
in
cmc
pop
jno
negl
mov
pop
orl
lds
jno
mov
pushw
cltd
lea
orl
rclb
lret
sub
rorb
test
jo
dec
mov
mov
and
adc
dec
icebp
rcrl
lock
xor
hlt
pop
popf
fsubs
adc
subb
pop
in
test
jne
test
hlt
or
loopne
enter
daa
nop
sbb
loop
repnz
lods
inc
jp
add
sar
in
movsl
js
popa
test
fcomp
jl
rcll
fxch
imul
fbld
cmpsb
hlt
mov
fidivl
xchg
cs
xor
rclb
or
imul
push
icebp
sub
inc
lock
sub
in
add
add
rol
xor
loopne
mov
pop
daa
dec
ljmp
out
or
mov
jecxz
addr16
xor
sbb
out
push
gs
dec
gs
cmp
sbb
test
enter
and
test
cmc
dec
cmp
jbe
arpl
rcll
in
pop
cld
adc
mov
mov
rorb
adc
ljmp
or
inc
into
leave
pop
mov
test
cs
cmp
cltd
adc
xor
or
mull
and
sbb
aas
loope
sub
in
mov
pop
scas
or
negl
jmp
or
stos
xor
ss
lods
mov
cs
sub
fimull
adc
sub
stos
mov
xorb
jge
ljmp
add
in
mov
fldl
cmpsl
js
roll
pop
jo
sbb
int
shlb
in
cmp
aas
xor
mov
testl
cmpsl
decl
neg
mov
add
pusha
gs
adc
insb
enter
jno
insl
lahf
lret
in
xchg
fdiv
lcall
mov
jl
aas
ljmp
dec
rcrl
sbb
aas
or
mov
push
stos
iret
cmpsb
mov
insb
push
dec
loope
dec
jb
std
nop
mov
pop
cmc
aas
mov
add
leave
js
incb
movsl
mov
jmp
loop
inc
rcll
mov
push
push
addr16
das
popf
sti
lcall
loope
jl
addb
mov
mov
jge
ffree
in
daa
lock
xor
add
adc
adc
shll
xor
push
divl
add
push
and
insb
mov
daa
add
push
push
loopne
mov
mov
jne
xor
push
lea
ljmp
or
repnz
pop
mov
sbb
cmp
insb
mov
es
mov
jbe
addr16
mov
scas
mov
inc
hlt
ret
dec
push
movsb
scas
or
and
test
cld
imulb
pop
movsl
mov
rolb
mov
inc
fsubl
into
cs
test
jae
mov
inc
lcall
jne
andb
std
jbe
pop
jne
dec
hlt
xchg
sub
dec
jmp
inc
test
jae
idivl
lahf
sarb
sbb
bound
and
pop
dec
push
stc
inc
mov
testb
stc
push
lods
xchg
pop
bound
xor
or
inc
sub
js
int
pop
loopne
cwtl
aas
adc
dec
lret
fs
es
je
clc
push
add
sahf
jle
or
jg
cmc
jmp
lret
hlt
jbe
ret
roll
push
or
push
mov
pop
push
mov
push
jle
inc
rcrb
pushf
rolb
aam
add
aaa
imul
mull
adc
mov
cmpsl
pusha
sub
sbb
shrl
cmp
rcll
adc
hlt
loop,pn
loope
xchg
dec
mov
mov
mov
jne
inc
push
xor
jo
sub
sbb
mov
or
dec
hlt
push
jl,pn
pop
popl
mov
loope
mov
inc
mov
scas
sub
sbb
cmp
pop
xor
jo
mov
inc
loope
sti
adc
push
pop
push
mov
sub
ljmp
push
outsb
fistps
mov
negl
stos
sub
jmp
jne
xlat
add
or
loop
jle
fldt
into
adc
and
add
sbb
nop
sarb
xchg
cmp
sub
mov
or
sbb
push
call
sub
or
push
add
sahf
or
int3
mov
sub
loop
std
insl
and
and
push
jb
mov
cmp
addl
pop
pop
iret
add
adc
stos
inc
into
aas
mov
cwtl
in
push
hlt
xor
lods
jnp
call
mov
inc
cld
incb
add
mov
adcl
fneni(8087
mov
sbb
dec
stos
nop
lods
mov
cmp
push
jbe
dec
add
mov
mov
aad
jp
clc
sub
pop
xor
cmpsl
ljmp
out
roll
sbb
sub
inc
pusha
inc
push
adc
outsl
cmp
sti
ljmp
out
dec
cmp
xor
mov
add
aam
jecxz
cld
cmp
shll
loopne
mov
sbb
popa
xchg
nop
pop
jno
inc
pop
xor
flds
jle
or
mov
in
dec
xchg
in
ret
push
mov
xchg
push
orb
or
push
ljmp
jns
inc
popf
xor
out
pop
mov
xchg
test
mov
dec
push
lds
adc
stc
cltd
loop
ja
or
xor
in
lret
ds
scas
dec
fbld
es
xor
and
ljmp
cmpsl
stc
rclb
fstpl
testl
mov
das
sub
fiaddl
call
hlt
mov
fildll
fisttpll
mov
mov
and
push
add
inc
add
out
lret
fldt
jo
movsb
mov
jmp
lret
cld
push
loopne
bound
jge
xchg
jp
mov
scas
cld
das
adc
push
adc
mov
mov
or
push
ja
loope
js
mov
dec
and
lds
leave
mov
imul
xor
mov
aaa
insb
cmpsb
pop
add
push
out
insb
add
dec
arpl
fdivrs
jne
mov
imul
idiv
je
xchg
aam
pop
int3
outsb
pop
push
sbb
pop
cmp
xor
pusha
data16
call
lea
or
rcrb
call
ret
jns
jno
lcall
dec
cld
test
xchg
sbb
test
hlt
cmc
sub
jbe
fsubl
scas
enter
mov
insb
xor
push
mov
and
push
xchg
inc
test
movsb
inc
in
sub
mov
ja
clc
pop
lret
or
in
inc
lods
and
jmp
out
cmpsl
stos
les
movsb
je
pop
mov
call
mov
stos
jge
stc
pop
push
aam
cmpl
add
rol
adc
mov
jns
ret
incb
test
insl
test
mov
out
lds
cs
inc
loopne
lahf
cwtl
cli
gs
sub
mov
sub
add
outsb
popaw
mov
mov
pop
stc
adc
mov
push
pusha
in
mov
mov
mov
rorl
stos
lea
ljmp
scas
das
les
lods
rorl
icebp
jl
fisttpl
insb
inc
loop
dec
rcrl
call
aas
dec
negb
and
aaa
mov
mov
aaa
dec
mov
xchg
push
sahf
sub
clc
adc
mull
pusha
fstpt
push
in
xchg
loopne
mov
or
add
lret
ret
nop
adc
adc
mov
sarb
rcll
push
lahf
add
pop
mov
mov
imul
cmpsl
in
sti
loope
push
inc
movsb
mov
rcll
mov
push
xor
inc
push
xor
pop
sub
js
add
mov
xor
mov
inc
sub
repz
xchg
xor
insb
stc
add
arpl
bound
pop
loopne
call
dec
and
or
push
jmp
scas
pop
jns
aad
subl
movsl
push
or
daa
sub
notl
loope
add
lock
pop
add
dec
mov
movsl
xchg
cli
js
movsb
inc
xor
in
xor
xchg
mov
mov
jle
pop
ret
les
or
cmpsl
shl
mov
jg
xchg
cs
pop
add
mov
mov
and
xchg
mov
ret
jge
incb
in
bound
or
stos
stc
sub
push
ret
ret
js
push
ljmp
inc
or
adc
pop
push
mov
test
enter
jmp
daa
push
cltd
pop
mov
hlt
jmp
push
mov
shrl
jmp
ds
sub
cmp
repz
cld
pop
shll
inc
or
les
je
mov
pop
mov
test
xchg
ja
rclb
mov
dec
add
inc
jl
iret
and
into
push
mov
cmc
cld
mov
stos
mov
sarl
jno
and
push
or
lods
mov
popa
xchg
add
adc
push
mov
das
push
leave
pop
xor
xchg
sub
pusha
pop
dec
loopne,pt
shlb
mov
push
or
inc
mov
dec
adc
in
push
dec
stos
jl
test
shl
pushf
lds
rcl
hlt
xchg
lahf
jo
addr16
add
rol
fcomp
lret
mov
jl
outsl
xor
mov
inc
or
xchg
mov
mov
dec
loope
stc
and
cmp
dec
xor
std
in
pop
jnp
orps
fsts
cmp
mov
push
mov
push
loop
sub
add
mov
and
or
or
jns
enter
leave
movsb
dec
int
sti
daa
mov
jne
out
lods
dec
jp
in
or
xchg
jp
in
int3
pop
jecxz
scas
in
into
sub
rcrl
add
cltd
in
mov
and
pop
popl
dec
mov
mov
push
push
incl
xchg
imul
leave
je
push
pushf
lahf
jmp
mov
jne
dec
pop
loop
and
lods
inc
in
fdiv
cmpsb
push
enter
es
xchg
dec
mov
int
pop
fcomps
in
js
push
push
dec
mov
mov
sbb
mov
nop
addr16
shl
cli
adc
inc
inc
pop
int
fs
enter
inc
push
xorl
fsubrl
jge
sub
and
add
pop
sti
push
add
fcmovnbe
add
lret
ss
sub
ret
and
rcr
insb
jnp
xor
stos
add
mov
push
jno
lret
dec
mov
fisttpll
xchg
stos
mov
or
nop
mov
jne
inc
hlt
xchg
ret
jae
inc
or
frstor
cmpsl
xor
sub
fisubrs
mov
in
push
sub
in
jb
and
ss
es
add
add
fildl
xchg
decb
aas
repz
mov
xchg
fisubrl
test
add
pushf
icebp
subb
jmp
pop
pop
push
xchg
lret
sub
cmpsb
inc
fstpt
pusha
fsubp
arpl
mov
aam
rorb
lahf
sub
mov
sub
sbb
cmp
repz
cs
dec
add
into
xchg
movsl
mov
sahf
cltd
xchg
xchg
or
pop
lahf
sub
xchg
fdivl
cli
adc
sar
hlt
mov
mov
jge
mov
sbb
xchg
call
movsl
cmpsl
inc
shlb
push
dec
xor
hlt
pusha
mov
lods
jne
aas
cmpsb
add
push
cwtl
faddl
dec
loop
fisubrs
dec
jl
dec
fidivs
sub
mov
pop
scas
andb
dec
cmp
into
jne
outsb
mov
mov
popa
xchg
mov
push
pop
popf
fisubrl
sub
dec
jmp
and
add
iret
pop
vpaddq
lret
es
cltd
add
push
popa
cmp
test
mov
lock
int3
push
xchg
fnstsw
push
mov
jns
add
mov
enter
sub
daa
leave
xchg
push
jb
movsb
roll
push
stos
and
es
int3
cli
mov
xchg
mov
jns
xchg
test
shll
dec
mov
repnz
mulb
loop
xor
out
loop
decb
in
cmpsb
jle
popa
jge
and
lret
setl
mov
ljmp
xchg
inc
testl
aad
stos
xlat
es
divl
aam
ret
ss
shl
jbe
sbb
push
pop
pop
out
xchg
and
mov
loope
orb
mov
leave
pop
dec
mov
mov
xor
mov
mov
mov
inc
in
sar
cmp
mov
pop
cmp
cwtl
icebp
lds
and
cltd
adc
sub
testb
pop
jo
jle,pt
adc
xchg
fmul
fistps
scas
mov
cmc
inc
adc
or
add
jno
mov
arpl
mov
jae
pop
inc
jecxz
fimull
std
addb
xchg
lret
rcrl
add
jg
popa
int3
sbb
push
call
pop
repnz
dec
es
in
out
cmpb
cmp
add
pop
sub
sub
xor
lods
lahf
sub
fldcw
cmpsb
add
out
int3
add
shrb
mov
js
outsl
mov
mov
out
xor
cwtl
jge
or
mov
push
mov
ret
or
cmpsb
lods
lahf
cmp
movsl
out
cmp
cmpsl
jnp
popf
cmc
xchg
aas
mov
pop
cld
clc
xchg
add
push
addl
int
cmp
inc
std
out
fsubr
cwtl
aam
adcl
ret
js
nop
inc
je
sub
or
xchg
fdivr
cmpsl
out
add
mov
ja
mov
cmpsb
mov
dec
sti
fsubrs
xchg
inc
dec
inc
sbb
and
and
mov
or
into
fstpl
rcrb
sti
shll
mov
sub
lcall
loop
comiss
das
and
cmpsb
mov
add
cld
xchg
stc
and
or
daa
mov
addb
inc
mov
mov
mov
jmp
mov
dec
lods
int
cltd
stos
jl
xchg
cmp
xor
mov
push
add
jne
add
add
mov
lods
inc
sbb
ret
clc
outsb
das
mov
loop
xchg
mov
aas
outsl
xchg
dec
sarl
insl
jp
push
ss
fdivs
lret
inc
fcos
xchg
loope
sbbl
xchg
add
ds
push
inc
jne
xchg
and
gs
jle
data16
cwtl
outsb
dec
cli
sbb
loop
out
repnz
test
roll
add
fadds
inc
sub
fldenv
nop
test
mov
inc
fcmovnb
xchg
ror
hlt
adc
xor
jecxz
mov
sbb
fidivs
pop
inc
stos
lahf
das
mov
cs
sub
jmp
jle
mov
repz
ret
dec
lea
jp
sub
inc
and
xchg
cwtl
jmp
loope
hlt
xor
sub
test
ds
push
orl
sbbl
sbbl
pop
dec
mov
mov
iret
inc
pusha
add
pop
fidivl
movsb
sub
add
mov
pop
pop
adc
sbb
in
lea
aam
insb
jnp,pn
stc
fistpll
std
jp
cmp
imul
pop
aam
pop
les
or
pop
lds
popa
mov
or
and
mov
xchg
fstpl
loopne
ficomps
jb
push
adc
repnz
inc
fadd
hlt
mov
cmpl
lret
packsswb
addl
hlt
or
ss
xor
dec
adc
add
dec
pop
mov
mov
push
jle
adc
iret
mov
repnz
dec
mov
inc
push
test
jae
ljmp
cmpsb
in
fistl
incl
insl
stos
fsubrl
decb
and
rorl
aas
stc
push
roll
jne
fstl
adc
pop
xchg
ret
inc
jo
popl
fisttpl
loop
pop
dec
jmp
mov
ljmp
add
or
mov
nop
dec
xor
loope
stc
pop
dec
stc
inc
popf
mov
cmpsl
pop
xor
hlt
dec
mov
outsb
mov
leave
aam
dec
std
pusha
dec
cmp
daa
push
cmp
sar
mov
testl
push
pop
movsl
pusha
ret
lcall
push
inc
mov
rolb
cvtps2pi
add
inc
ror
mov
das
jb
out
sub
in
repz
icebp
test
fists
cld
push
movsl
call
fnsave
jno
icebp
adc
stos
adc
sub
adc
inc
lods
xchg
cmp
adc
push
xor
cld
push
adc
xchg
fcoml
xor
rcrl
add
jne
aaa
sbbl
hlt
scas
pop
repz
mov
jns
fwait
mov
mov
mov
xchg
adc
adc
rolb
arpl
fcmovne
cmc
pop
ret
mov
repnz
std
addl
sub
xchg
or
jmp
fiadds
loopne
adc
pop
addr16
fs
xlat
imul
jl
push
adc
mov
add
hlt
dec
ret
lret
test
jne
lret
ss
jecxz
cmpsl
xor
jnp
adcl
jg
leave
hlt
in
xor
sbb
mov
cmp
not
cmpsl
mov
enter
jnp
pop
stos
push
mov
incb
out
push
hlt
mov
in
std
push
popf
repz
mov
fstpt
aad
es
mov
jne
pushf
and
insb
add
jmp
xchg
insb
js
jb
enter
adc
shrl
sar
mov
inc
cmp
xabort
ss
xorb
cmp
hlt
jp
dec
mov
aad
cmpsb
and
cltd
jle
xchg
cld
cmp
push
icebp
movsl
les
sarl
scas
and
aaa
pop
inc
outsb
cld
jne
jp
push
jno
popf
int3
lods
test
dec
xchg
jmp
in
hlt
lcall
ds
add
insb
in
loope
xchg
int
or
loope
ljmp
jae
sbb
mov
int
adc
mov
adc
stos
push
add
xchg
inc
mov
cmp
xchg
popa
dec
ljmp
push
pop
jns
mov
mov
inc
ss
adc
jle
ss
jle
add
int3
fstpt
mov
mulb
jge
lret
rcr
fldl
shl
sub
movsb
pushf
jp
lret
in
notb
lea
xchg
mov
mov
push
xchg
cs
mov
idiv
inc
stc
enter
cwtl
mov
fnstcw
mov
out
jge
adc
pop
repz
hlt
fstpl
fcmovne
jo
imul
xlat
push
cli
xchg
cmpsb
pop
mov
out
pusha
and
or
adc
sub
lret
cmpsb
in
addb
arpl
fmuls
and
cld
mov
cmp
ss
mov
call
mov
jp
test
cld
pop
sub
adc
loope
mov
int3
or
negl
subl
or
xchg
or
std
out
shll
idivl
adc
or
push
clc
popf
lret
in
testb
imulb
sub
int
mov
loopne
mov
loopne
pop
xchg
cmp
mov
fidivs
mov
fistpll
pop
or
enter
mov
in
jmp
xor
aas
xchg
lea
lea
andb
push
push
mov
je
push
cmp
lds
movsl
fstl
arpl
pop
fisubrl
test
sub
sbb
mov
add
mov
push
pusha
or
mov
test
cmp
cmc
gs
adc
xor
cmpsb
aas
dec
mov
jbe
lret
sbb
inc
mov
pusha
leave
add
cs
jnp
jne
das
aam
mov
int
add
inc
test
imul
mov
adc
ss
xor
testb
test
clc
push
ret
and
inc
int3
insb
repnz
frstpm(287
mov
inc
push
pop
jae
nop
fidivs
repz
and
mov
xchg
mov
ret
pop
shl
pop
pop
add
repz
movsb
mov
sti
lods
inc
imul
jns
and
mov
stc
cmpsb
pop
mov
lock
add
outsl
sub
and
loop
int
jo
or
pop
mov
inc
mov
sbb
xlat
xchg
pop
arpl
int
mov
sub
or
cs
pop
leave
idiv
sahf
mov
hlt
rcrb
jl
inc
push
xchg
mov
rol
aas
gs
lods
outsb
jge
inc
pusha
out
stos
mov
test
dec
jg
ret
pop
hlt
int
dec
shll
xchg
or
lock
popf
add
xchg
rorb
movsb
imul
jle
push
fistl
lock
lret
xor
add
fcomps
addb
jbe
je
dec
xchg
shrb
inc
fdivl
loopne
mov
ret
test
xchg
push
mov
xor
jne
push
enter
mov
sub
pop
pop
jmp
test
add
arpl
inc
jne
dec
add
inc
and
cmp
inc
cmp
popa
fld
std
stc
sub
mov
in
mov
push
fstl
mov
adcb
aam
inc
inc
scas
mov
xchg
rcll
cmp
movsl
mov
mov
xchg
test
mov
jnp
das
pop
test
int3
xchg
add
addl
add
lock
mov
mov
jae
mov
scas
mov
lock
xchg
cltd
nop
and
loope
pop
insl
xchg
add
nop
jnp
rcrl
jp
dec
push
nop
in
hlt
mov
repnz
inc
mov
push
arpl
inc
hlt
inc
inc
sahf
mov
data16
scas
and
repz
loopne
inc
les
sbbb
add
push
cs
popa
icebp
xchg
bound
scas
and
cmp
jns
imul
clc
into
faddl
xchg
hlt
mov
xchg
cmp
push
stos
mov
decb
xlat
repnz
leave
les
pop
lcall
arpl
jno
int3
ja
or
jnp
pop
jae
sub
adc
rcrb
jecxz
movsl
add
mov
insb
add
inc
jne
stos
jp
add
sub
movsl
ret
mov
pop
push
popa
or
flds
or
outsl
int3
xchg
jne
xor
sub
mov
or
scas
stos
clc
and
xchg
dec
icebp
inc
mov
pop
mov
mov
jnp
pop
lods
sbb
mov
jbe
mov
aas
int
loopne
adc
int3
inc
pop
scas
sti
imul
lahf
push
adc
sti
jo
sbb
mov
jp
imul
jns
cmp
in
call
mov
xor
movaps
xorb
push
jmp
lods
jg
iret
scas
mov
gs
mov
cwtl
mov
mov
pusha
sub
lahf
inc
add
dec
jg
sbb
es
push
inc
xchg
aad
adc
cwtl
mov
sbb
frstor
sub
clc
lds
xchg
mov
mov
es
jmp
arpl
cwtl
mov
or
shll
mov
push
inc
add
imul
inc
lods
iret
test
dec
movb
mov
fldl
out
jge
gs
call
sti
enter
jle
fldcw
test
and
hlt
dec
loope
mov
fildll
cwtl
adc
fst
imul
fldl
enter
dec
into
leave
mov
rcr
mov
frstor
sbb
roll
inc
push
bound
or
inc
int3
fsubrl
push
sahf
jne
clc
adc
daa
sub
jg
sahf
add
jb
scas
movsb
lods
pop
lods
push
test
fs
fidivrs
or
out
sub
jbe
xchg
stos
test
jge
enter
lahf
ljmp
sti
popa
add
xchg
test
cmc
add
mov
repnz
rol
sub
jl
mov
hlt
mov
adc
sbb
enter
sti
xor
mov
les
icebp
lock
pop
mov
adc
sub
jo,pn
fstl
push
je
sti
or
cmp
cmp
xchg
sahf
ds
ret
out
lods
xor
pusha
sbb
sub
ja
test
mov
stos
outsl
sub
enter
sbbb
sub
jne
roll
jecxz
sbb
dec
hlt
add
inc
es
movsb
push
je
scas
mov
lret
popl
and
fidivrl
addr16
cli
inc
sub
lret
pop
push
pop
pop
sbb
repnz
add
pop
fimull
jg
in
cwtl
pusha
lcall
rcrl
xchg
xchg
das
mov
rcl
pushf
les
dec
mov
mov
insl
mov
cmovbe
roll
scas
and
mov
decl
dec
lcall
lock
fwait
push
adc
jns
mov
mov
jno
nop
pusha
rcrb
popl
jp
stos
sub
jl
nop
or
fistpll
in
cwtl
into
insb
dec
addb
add
mov
xchg
test
rcrl
jl
movsl
push
fwait
fists
xchg
loop
rcrb
scas
popa
push
lret
bound
sub
mov
pop
enter
ret
test
dec
sub
xor
rcrb
dec
add
stos
imul
test
or
ds
ja
loop
rcrl
dec
mulb
scas
scas
add
inc
sub
rcll
add
mov
inc
sub
jnp
cld
rorb
pop
repnz
enter
imul
repnz
ds
leave
pop
jns
mov
lock
pop
cmp
mov
cmpsb
adc
lret
shlb
sbb
push
jl
cwtl
push
ret
es
ljmp
xchg
mov
lahf
dec
cmpl
decl
cmc
arpl
daa
mov
addl
shrb
dec
aam
imul
hlt
dec
aam
idivb
xchg
stos
arpl
js
mov
shll
or
decb
pop
jle
push
dec
cli
les
lret
xchg
roll
shr
in
hlt
adc
dec
addl
or
faddl
fistl
lods
push
adc
xchg
in
test
lcall
jecxz
push
push
add
lcall
enter
and
xchg
andb
cmp
inc
addr16
sbb
test
inc
dec
push
insb
loop
pusha
mov
inc
mov
xchg
add
hlt
lret
fdivrp
ds
mov
jb
xchg
test
push
rol
stc
dec
incl
es
test
xchg
xorb
stos
loopne
imul
mov
mov
push
in
pop
xor
xchg
jne
pop
mov
je
inc
jge
shlb
out
xchg
shl
push
jne
or
pop
jnp
repz
or
jae
mov
cli
gs
inc
dec
andb
xchg
pop
cltd
outsb
aad
leave
xorb
shlb
jbe
mov
dec
adc
mov
aad
add
decb
adc
jbe
shrl
ja
cmpsb
push
test
sub
xchg
xor
aad
add
inc
push
inc
mov
shll
jo
ja
fwait
mov
cmp
pop
imul
fstpl
icebp
mov
sub
add
outsl
movsb
mov
subl
popf
imul
imul
loopne
inc
fsubl
or
xchg
mov
imul
adc
jns
enter
popf
push
mov
adc
mov
xchg
pop
push
mov
int
movsl
cmp
dec
leave
push
add
shlb
addr16
repz
and
push
adc
hlt
pop
loop
cli
not
push
lret
popf
icebp
xchg
mov
outsb
add
pop
movsb
das
add
leave
leave
in
hlt
xor
pop
out
mov
or
jmp
daa
xor
scas
cli
inc
addb
pop
loopne
sbb
pop
fcoml
addb
icebp
cmpsl
mov
ror
outsl
das
jns
popf
aas
vpmulld
cmp
add
push
push
in
sbb
cwtl
adc
fistps
pop
sub
es
nop
clc
lcall
inc
or
cmc
jg
mov
jno
cmpsl
sahf
int
push
pop
pop
mov
jbe
mov
xchg
inc
sahf
ss
lret
mov
push
add
lods
faddl
mov
sbb
jnp
cmp
adc
push
jl
mov
loope
or
es
mov
ljmp
add
lods
in
hlt
pop
rclb
jmp
inc
test
fs
adcb
ja
ret
or
xchg
data16
nop
mov
jecxz
xchg
mov
pop
stos
mov
jnp
aam
lods
sbb
push
stc
in
popa
into
roll
mov
dec
notb
cmp
fst
jae
xchg
roll
cmpsl
sub
loop
inc
pop
addr16
mov
fiaddl
movsb
fsubrs
hlt
dec
lahf
pop
inc
js
cltd
push
dec
jns
mov
rclb
sub
adc
movsl
ret
mov
enter
dec
fs
xchg
mov
sub
int3
subb
xor
out
fstl
or
mov
sbb
shlb
pop
xchg
jnp
ljmp
movsb
cmpsl
or
push
hlt
mul
scas
or
inc
shl
or
mov
sub
or
iret
pop
cmp
sub
jecxz
loop
mov
adc
decl
add
sub
scas
inc
xchg
into
mov
adc
adc
das
inc
adc
mov
es
sbb
inc
push
inc
loope
and
cwtl
jne
xor
jae
sub
xchg
push
add
imul
fiaddl
push
inc
emms
mov
adc
inc
and
rolb
jg
mov
scas
xchg
jne
mov
into
test
jne
dec
mov
aam
stos
sub
ss
jno
fmull
es
jne
mov
adc
push
rcrl
enter
xor
adc
scas
sbb
lds
aam
out
inc
mov
add
les
sub
clc
cmpsl
repnz
cs
sub
push
das
and
call
adc
leave
loop
les
nop
dec
lods
xchg
jne
daa
adc
repz
xchg
xor
fdivrs
pop
nop
cmpsl
inc
mov
adc
shrl
sahf
loope
push
fsubrs
xchg
das
mov
dec
cmp
or
mov
push
aam
movb
jle
add
and
lods
push
adc
inc
stos
add
xchg
lds
leave
cmp
fbstp
pusha
xchg
push
inc
faddl
in
sub
loop
mov
add
fsubrl
rcll
sub
mov
sbb
mov
cmp
imul
push
jne
jbe,pn
add
pusha
fldenv
sbb
mov
fistps
movsl
or
xchg
mov
scas
add
and
std
popf
adc
adc
xorb
or
stos
iret
cmpsb
fmuls
les
stos
cmp
push
pop
cmp
mov
lahf
in
test
dec
jns
sbb
cmp
jmp
lods
clc
inc
sbb
dec
arpl
sti
imul
lods
pop
mov
push
inc
cs
ret
inc
mov
sub
pop
rorb
nop
or
int3
push
aas
movsl
sub
aad
and
inc
jmp
hlt
or
jl
push
sbb
add
inc
push
in
xchg
ret
mov
scas
dec
mov
adc
or
cmpsl
add
es
pop
inc
in
cld
adc
out
xlat
fwait
lret
mov
sbb
pusha
repz
les
test
adc
dec
sub
mov
fcmovb
addr16
imul
enter
sbb
cli
imul
into
pusha
sbb
and
xchg
movl
aas
mov
dec
hlt
or
adc
pop
clc
sbb
mov
xor
jmp
aas
adc
mov
imul
add
fwait
hlt
or
iret
arpl
stos
jg
jbe
and
hlt
test
pushl
add
stos
sbb
lcall
inc
rep
cs
fwait
je
dec
mov
fidivrs
nop
adc
decl
mov
adc
jp
xor
imul
in
adc
popa
fimull
fs
xchg
sbb
mov
loopne
xchg
pop
in
sbb
dec
dec
adc
push
inc
cld
pop
mov
icebp
sub
mov
cmp
xor
inc
hlt
fs
out
loopne
dec
cmp
jne
mov
jg
jnp
mov
jge
dec
jbe
dec
xchg
dec
js
add
imul
movsl
out
loop
cmp
adc
aas
push
dec
xchg
jo
ret
test
cwtl
lea
inc
repz
jg
cmpsl
aad
pop
int3
sti
mov
jns
lods
jnp
inc
dec
mov
roll
lods
in
es
xor
addr16
pop
std
xor
push
add
cmpsb
jge
adc
imul
and
shrl
xchg
and
pop
or
outsb
subb
hlt
ds
in
dec
test
push
jne
sar
inc
jp
xor
xlat
dec
dec
mov
lea
jnp
dec
add
add
pop
insl
inc
sub
add
fsubs
gs
int3
jns
dec
xchg
adc
enter
test
sbb
clc
sub
jp
xor
roll
test
jb
movsl
xchg
dec
fdivs
outsl
xchg
and
cltd
sbb
cmp
add
push
mov
sbbb
call
or
mov
ret
fcoms
mov
fstl
or
adc
stos
sub
lahf
jne
cmpsb
mov
stos
dec
inc
or
jb
es
imul
jno
js
les
sub
pop
mov
push
lock
xchg
lcall
mov
imul
pop
out
cmp
inc
dec
mov
sarb
lcall
xchg
out
mov
pop
out
and
mov
jle
and
push
outsl
push
test
xchg
or
mov
pop
inc
or
xchg
mov
mov
and
fsts
sub
lea
test
xchg
pusha
cmp
in
xor
add
enter
xchg
ret
sub
lret
inc
push
or
sub
push
mov
insb
dec
enter
add
mov
shlb
or
cs
sub
cmp
mov
aaa
pusha
adc
fmuls
cmp
inc
pop
jno
mov
dec
add
imul
leave
nop
adc
dec
fidivrs
push
pop
xchg
and
insb
lock
sub
rolb
data16
jmp
clc
cmp
call
aas
sahf
cmc
shll
subl
fbstp
cld
cli
fmull
out
sbbb
movsb
push
mov
inc
call
mov
cmp
add
and
xor
cmc
mov
inc
sbbb
jecxz
push
cs
shl
test
add
in
inc
orb
inc
lret
jne
jmp
mov
jl
cmp
pop
xchg
jmp
scas
fmul
sub
int3
inc
cmp
aad
icebp
imul
out
jne
ret
jno
mov
icebp
or
punpcklwd
movsb
lock
jge
shlb
jp
pop
jge
fistps
arpl
jae
clc
icebp
daa
addb
pop
xor
add
cmp
mov
add
lock
jle
add
push
fdivrp
roll
mov
fcoml
push
adc
push
sub
fcmovnu
jnp
sti
jmp
lods
frstor
sub
mov
mov
add
xchg
add
push
mov
js
js
push
or
sub
pop
fldenv
cmpsl
cltd
scas
push
xor
mov
fs
mov
dec
mov
xlat
call
mov
mov
adc
hlt
rorl
sub
das
mov
lret
mov
mov
push
or
xchg
mov
mov
icebp
and
das
ljmp
bound
jne
add
push
xchg
addr16
sub
test
cmc
clc
mov
fsts
sub
add
ja
scas
pop
bnd
cmpsb
mov
test
pop
add
out
jb
scas
cmp
xchg
in
mov
and
mov
movsl
fcoms
scas
ret
test
jnp
stos
xor
lret
mov
popa
push
repnz
jge
in
sahf
push
int3
pop
pop
pusha
adcl
adc
rcl
lods
fs
enter
sbb
mov
imulb
adc
xchg
mov
cld
popf
or
xchg
insl
jnp
arpl
test
hlt
jbe
movsl
adc
xchg
rcl
xchg
adc
leave
sbb
xor
sbb
dec
es
nop
sub
or
xor
out
into
xchg
jnp
mov
int3
mov
stos
pushf
adc
inc
pop
vpsrad
fildl
mov
mov
pusha
dec
aas
jle
ret
repz
or
repz
mov
std
jnp
inc
push
ja
mov
fninit
pop
rcrb
stos
jbe
sbb
and
dec
mov
ret
jae
fimuls
mov
cmc
adc
xchg
addr16
cli
add
sbb
nop
je
cmp
hlt
pop
or
fs
movsl
sub
aam
hlt
jnp
xchg
jne
xor
dec
loopne
jge
pop
stos
jg
push
stos
lock
mov
icebp
scas
fnstsw
ljmp
in
xchg
jo
arpl
add
push
sub
mov
std
loopne
mov
add
fimull
divb
sti
mov
xchg
inc
mov
popf
add
xor
sbb
sub
pop
lds
int3
test
loop
jle
push
add
sbb
sub
in
mov
out
popa
enter
clc
repnz
inc
scas
bound
fistl
inc
stos
shlb
pop
add
sbb
fstl
add
cltd
mov
cmc
movsl
adc
mov
jno
jp
dec
and
xor
jne
ret
add
cmpsl
xchg
inc
lret
add
add
mov
int
xchg
ds
dec
and
jle
mov
cld
cmp
lcall
jne
dec
sbb
push
hlt
push
mov
adc
ret
fs
imul
pop
lods
in
popl
daa
jecxz
nop
repz
es
in
mov
cli
outsl
lret
es
fsubrl
loope
inc
icebp
test
call
or
dec
in
sbb
pushf
xor
mov
test
jg
lcall
pop
cmp
mov
int
cmpsl
or
or
movsl
mov
inc
mov
fwait
mov
loopne
xchg
lock
add
sti
jmp
hlt
imul
movsb
inc
xor
data16
cltd
inc
mov
stos
movsl
enter
sbb
cwtl
movsl
loope
cs
mov
cmpsl
mov
aas
das
cli
push
popl
outsl
pop
cmp
xchg
in
jge
pop
and
outsl
arpl
add
adc
mov
out
mov
out
ss
adc
inc
or
sub
addr16
cmc
loop
in
dec
mov
lods
add
mov
mov
inc
mov
add
sub
inc
add
adc
adc
or
push
loopne
stos
jne
ss
sbb
adc
pop
das
loope
cwtl
lods
add
loope
icebp
les
out
pop
inc
lret
adc
clc
push
cltd
test
stos
dec
and
xor
decb
in
xchg
scas
push
lahf
stc
inc
sub
sti
push
hlt
pop
mov
mov
sub
popl
jne
sub
xlat
lret
sahf
testb
fistl
mov
mov
pop
jns
hlt
cmp
icebp
sbb
fistl
shll
mov
mov
xchg
pop
into
add
add
ret
pop
and
shr
es
outsl
test
loopne
cltd
jecxz
inc
loope
lods
xorb
mov
adc
push
js
nop
jno
inc
fldenv
loope
adc
cmpb
pop
imul
jne
sarb
clc
adc
out
jle
dec
inc
jl
es
into
mov
fsubl
cmp
fidivrl
ret
insb
mov
mov
dec
lods
mov
addr16
add
xor
cld
aam
lcall
fistps
aam
inc
cmpl
fists
hlt
xor
mov
mov
popf
jbe
pop
dec
mov
xor
roll
cmp
mov
mov
stos
pop
xor
adc
hlt
lret
adc
mov
or
jnp
scas
std
in
std
popa
inc
xor
insb
or
or
mov
mov
div
iret
add
mov
repnz
pop
add
push
cmpb
enter
stos
mov
addl
mov
scas
rcr
arpl
stc
inc
test
lahf
sbb
mov
dec
mov
fwait
push
xchg
loop
call
hlt
stc
call
push
adc
xorl
flds
or
fldenv
mov
jmp
xchg
add
xor
mov
frstor
mov
push
or
fisubrs
jle
aam
gs
mov
xchg
cmpsl
cmp
xor
or
sahf
cli
jne
jecxz
push
mov
mov
xor
jmp
rolb
jp
push
or
pushf
jge
pop
inc
es
push
inc
arpl
fisubl
adc
mov
or
jbe
shll
mov
pop
jnp
mov
push
jne
sub
xchg
cltd
mov
int3
aaa
hlt
mov
loopne
mov
sti
ljmp
mov
test
lcall
fs
stc
pop
cmc
xor
add
or
aad
cmc
movsb
push
lcall
sub
or
mov
xorl
scas
sub
cmpsl
mov
xor
push
loope
xor
in
xorb
cmpsl
inc
call
jecxz
dec
mov
sub
cmp
movl
push
inc
sbbb
sahf
push
sbb
rcrb
cmpsl
ret
xchg
in
xor
lea
imul
hlt
and
cli
rclb
data16
sub
mov
push
jmp
js
and
inc
leave
sbb
lea
mov
pushf
jne
nop
fsubp
imul
jg
movsl
addl
je
add
cld
mov
icebp
decb
leave
push
inc
jmp
outsb
loop
cmpsb
into
aad
xor
mov
aad
fnstsw
mov
cmp
xchg
ret
xor
sub
add
push
pop
mov
cmp
mov
sub
pushf
mov
adc
add
pop
je
test
jo
dec
jg
mov
mov
pop
cli
dec
sub
jnp
out
jne
xlat
add
hlt
cmp
jl
mov
jecxz
repnz
arpl
lret
inc
cmpsl
adc
imul
cmp
stc
stc
push
inc
mov
jle
inc
jmp
jbe
sbb
loopne
push
insl
roll
adc
mov
lock
jmp
ret
clc
push
and
push
pop
cmp
mov
cli
sub
inc
icebp
stc
les
mov
lea
ss
enter
sub
lahf
dec
fidivrs
shll
jp
mov
pushf
xor
sbb
fdivs
mov
jb
movsl
jge
dec
xchg
aad
pop
jmp
jmp
shlb
push
popa
inc
jmp
mov
dec
out
test
xor
push
dec
outsl
iret
and
aas
sbbb
xchg
cmpsb
imulb
inc
pusha
jg
jo
inc
adc
push
stc
ficoms
das
pop
pop
jnp
push
jmp
inc
mov
mov
pop
inc
xchg
out
mov
push
or
or
push
jbe
stc
mov
fwait
xor
mov
out
stos
fistl
repnz
pop
out
push
subb
or
sbb
adc
test
arpl
nop
fidivrs
sarl
rcr
xchg
mov
data16
or
push
add
cwtl
or
mov
mov
inc
jne
mov
movsl
sbb
or
lods
sti
xor
imul
shrb
mov
pop
iret
push
repz
sub
push
mov
inc
xchg
jmp
mov
subb
sbb
dec
and
pop
mov
xor
mov
shlb
dec
mov
stc
adc
add
arpl
imul
popa
pop
dec
xchg
add
add
pop
or
push
mov
mov
leave
les
mov
xor
adc
mov
lret
pop
aas
dec
sarb
fsubl
stc
pop
leave
pusha
pop
popa
adc
mov
jge
push
std
insb
or
addl
or
idivb
inc
sti
clc
ljmp
add
stos
addr16
xchg
mov
cmp
ret
hlt
cmc
mov
dec
and
inc
cli
fists
add
mov
pop
mov
xchg
stc
add
andl
sbb
jb
test
scas
mov
pop
lahf
push
mov
loope
jne
cmpsl
jmp
add
stc
aad
and
sbb
ret
repz
movsl
cmp
sti
xlat
push
push
aas
push
hlt
insl
inc
shrl
sbbl
xchg
push
je
gs
rol
push
cltd
andl
mov
dec
jle
in
pop
icebp
xchg
loop
inc
cmpsb
cli
aad
pop
fldl
cmp
mov
repnz
sub
fwait
push
pop
jle
xor
mov
jne
cmp
pushf
popf
sahf
push
pop
jmp
std
inc
push
mov
ljmp
pop
add
cltd
mov
or
push
dec
jo
addl
gs
sbb
cmpsl
cmp
mov
stos
xchg
data16
out
lcall
mov
test
xor
add
sub
enter
aad
andb
cmpsl
pop
ret
push
dec
add
mov
sub
fistl
nop
sbb
cmp
jl
push
mov
mov
mov
add
or
inc
pop
cmp
insb
cmp
inc
fstpl
orb
ja
rclb
cmp
loopne
push
or
les
jg
pop
stos
ds
push
inc
dec
cli
in
cs
push
lahf
aas
adc
lods
push
leave
pusha
jno
xchg
cmc
cltd
xchg
adc
inc
hlt
sub
push
mov
pop
push
add
insl
clc
add
jle
je
xor
scas
call
arpl
sub
mulb
dec
stos
fucomp
idivb
xor
shlb
or
mov
lret
out
push
stos
mov
in
es
mov
lahf
cli
push
jno
xchg
pop
loopne
dec
xchg
call
sub
enter
or
and
fldcw
jne
sbb
mov
dec
jle
push
xchg
into
xchg
popa
stos
cmp
fadd
lea
push
mov
cs
jl
dec
mov
in
pop
mov
mov
leave
orb
and
inc
or
pop
and
inc
lds
dec
loopne
push
cmp
jne
dec
pop
fnstcw
hlt
mov
inc
arpl
test
out
xorb
push
pop
sub
inc
dec
jge
xchg
imul
xchg
dec
adc
imul
roll
mov
fwait
pushf
jae
cld
movsb
inc
and
jno
sub
insl
push
push
pushl
push
jp
adc
andl
rol
xor
in
jg
mov
ret
jg
xchg
div
nop
add
jns
rcrb
xor
sti
or
jp
pop
cli
lret
mov
shll
inc
rolb
orl
push
call
jge
xchg
jge
test
imul
jp
es
aas
pop
test
xchg
movsl
js
dec
inc
loopne
std
cmp
int
dec
sub
mov
loope
addb
mov
shlb
into
pop
loope
aas
shl
push
adc
int3
add
hlt
inc
flds
inc
fstps
and
mov
adc
jns
inc
scas
hlt
fnsave
rorl
inc
mov
lret
fisubs
push
call
push
lods
frstor
jne
sahf
mov
in
daa
dec
jmp
iret
sub
mov
ss
insl
out
push
sub
lret
insb
and
je
stos
std
in
mov
jne
sti
add
sbb
mov
repnz
int3
mov
push
loope
in
lret
lock
push
jp
loopne
inc
gs
loope
cmp
shrl
pop
pushf
ss
ret
mov
dec
and
sbb
sbb
mov
data16
imul
push
loop
sbb
push
popa
push
into
or
test
mov
and
inc
jl
add
fucom
cli
mov
jne
scas
sti
dec
push
mov
rclb
push
scas
fstpt
clc
inc
jo
jbe
sub
jne
sti
xchg
push
je
cmpsl
dec
jo
jbe
leave
pop
stc
popa
out
ffree
mov
sbbl
or
hlt
sub
add
jbe
les
loopne
fistpl
hlt
pop
imul
pop
push
add
les
mov
scas
mov
imul
add
stos
xchg
pop
mov
hlt
shr
or
scas
jl
dec
fs
clc
lods
fcompl
inc
dec
inc
xor
popf
xchg
repnz
clc
pop
adc
std
sub
pop
mov
jbe
enter
dec
mov
test
fiadds
pop
xlat
notb
test
test
cmpsb
hlt
pusha
pop
jg
push
clc
lods
ja
js
jle
mov
xlat
jb
lahf
les
popf
pop
pusha
repnz
jp
outsb
mov
lock
rcr
xchg
xchg
call
fmuls
inc
in
adc
repz
mov
repnz
insl
ja
pop
sbb
sub
dec
clc
xchg
xchg
sub
popa
cmp
push
subl
lret
stc
test
aam
out
or
hlt
jnp
les
mov
lods
rcrb
xor
jbe
cwtl
movsb
ret
jnp
fists
arpl
push
push
add
lods
xchg
mov
scas
sbb
mov
jae
xchg
inc
aad
sbb
hlt
test
push
xchg
jmp
jo
mov
mov
sub
push
xchg
push
mov
or
scas
sub
test
lods
dec
scas
adc
add
add
in
xchg
int
mov
add
cli
sbb
mov
cmpsl
jb
adc
insl
jmp
xchg
cmp
dec
lds
or
dec
shl
push
test
sahf
inc
adc
movsl
or
andl
fnstcw
add
rolb
xchg
rorb
scas
sbb
adcb
pushl
mov
shrb
xorb
mov
mov
push
sbb
adc
gs
lahf
mov
lods
adc
jecxz
mov
aam
adc
scas
inc
outsl
into
xor
mov
pop
fdivs
iret
mov
mov
andl
push
jno
in
pop
movsl
adc
add
hlt
into
cmc
mov
add
push
adc
mov
inc
movsl
cmpsb
xchg
or
and
and
cltd
addl
sub
add
mov
loop
push
loopne
jmp
and
xlat
call
push
mov
lea
cmpsl
movsb
cli
push
fistl
jne
jbe
xor
ss
outsl
dec
mov
cmp
in
out
mov
out
enter
sbb
sti
push
test
push
cmc
test
repnz
mov
xchg
sub
test
stos
or
push
lahf
ret
sub
mov
push
stos
stc
mov
push
push
and
scas
pop
add
rolb
pop
nop
lret
push
int3
and
test
sub
insl
xor
add
dec
popa
or
popa
leave
sub
push
int
iret
dec
add
int3
bound
data16
cld
scas
mov
out
mov
orl
je
sub
jp
adc
xor
adc
xchg
jae
sub
test
leave
mov
hlt
pop
fisubl
dec
insb
sahf
jmp
adc
xchg
cltd
cmp
leave
dec
sub
inc
and
xor
ss
inc
test
aam
jne
cmpsl
daa
xchg
les
inc
repz
mov
xchg
aam
adc
push
arpl
sub
cwtl
jne
repnz
or
popa
push
mov
add
cmp
cmp
jno
int3
repz
or
push
inc
xorb
fucom
cltd
loope
scas
inc
ljmp
mov
aam
scas
shl
xchg
pop
jbe
sub
mov
sbb
call
mov
dec
mov
lahf
mov
rol
fsub
hlt
cltd
test
add
sub
movsb
and
notb
mov
add
xor
mov
sti
je
mov
movsl
mov
mov
bound
jle
int3
cltd
dec
sub
jg
pushf
sub
pop
cmp
dec
sahf
popa
dec
mov
inc
mov
lds
pop
addb
inc
ret
mov
gs
push
nop
mov
pop
cmp
repz
push
mov
stos
hlt
pop
sarl
add
mov
adcb
jge
push
mov
repnz
sahf
or
outsl
mov
mov
dec
mov
cwtl
hlt
sub
mov
fnstenv
in
mov
rorl
pop
mov
jne
pop
push
inc
adc
js
out
push
ss
or
pop
cltd
enter
mov
mov
push
stos
jp
shlb
ljmp
jecxz
es
std
lcall
xchg
xor
mov
pusha
mov
cmpsl
data16
sub
xorb
cmpb
xchg
mov
dec
mov
cmp
mov
and
cmpsl
add
addl
sub
mov
rclb
lds
sub
mov
jg
movsb
loopne
xor
pushf
les
lds
push
pop
jo
adc
mov
cwtl
pop
stc
dec
imul
cld
fsubs
rorl
mov
add
pusha
dec
push
mov
jne
or
xchg
inc
push
cmp
hlt
and
xchg
cld
sarb
in
andl
inc
mov
fnstsw
sub
dec
testb
orl
adc
cmp
jb
das
aad
pop
hlt
xchg
jp
in
stos
xor
dec
add
inc
movsb
pop
inc
dec
xchg
cmp
xchg
sti
add
mov
mov
inc
hlt
jns
or
xchg
add
es
inc
xchg
cmpsb
in
cmp
cltd
jge
mov
imul
xlat
test
aas
cmpsl
mov
cmp
nopl
ret
mov
dec
sbb
ds
lea
add
fcmovb
bnd
fsubr
sbb
dec
nop
cli
push
pmaddwd
arpl
xor
xchg
mov
or
cmp
mov
jne
dec
orl
push
iret
hlt
inc
adc
cmpl
jmp
sub
je
sub
inc
mov
dec
aas
pop
hlt
arpl
xchg
jns
ds
or
sub
mov
jno
jle
ficoml
xor
hlt
fisttpl
in
inc
mov
leave
or
pop
enter
dec
loopne
pop
jnp
rorb
enter
iret
push
lods
frstor
dec
xchg
jl
out
movsl
cmpsl
inc
add
stos
nop
mov
and
adc
adc
pop
add
cmc
cmc
cmp
push
icebp
add
pop
add
jne
es
iret
into
decb
insb
adc
mov
or
pop
test
mov
jbe
mov
hlt
mov
sbb
pop
jmp
xchg
cli
hlt
pop
repz
mov
mov
or
push
enter
mov
jmp
dec
lods
jge
popf
call
or
lock
jnp
dec
aad
dec
into
push
daa
mov
cmp
and
outsl
les
sbb
jnp
dec
cmpsb
adc
add
nop
les
adc
mov
cli
mul
jnp
fdivs
jne
or
jnp
cmp
xor
nop
std
stc
clc
sub
out
xchg
jne
pop
fnstcw
call
hlt
ret
sub
add
xchg
das
mov
in
or
inc
cmpsb
fucom
loopne
xchg
testl
les
ljmp
mov
pop
push
inc
xchg
xchg
or
jae
inc
pop
cwtl
test
lods
jp
jbe
sbb
popf
int3
inc
jno
xlat
fmull
gs
idiv
mov
ljmp
imul
dec
stos
xorb
ja
loope
mov
mov
xlat
icebp
push
push
or
xor
lret
ljmp
int
jp
xor
jo
or
jno
test
nop
pop
mov
jns
xchg
push
add
jno
leave
pop
sub
mov
pop
adc
and
inc
insl
cmpsl
jne
mov
mov
rcll
push
mov
frstor
mov
popa
adc
inc
mov
xchg
push
cmp
insb
xchg
das
push
add
repz
xor
dec
xchg
fcoml
xor
cwtl
scas
adc
xor
mov
xor
dec
stos
cmc
in
rcll
fcoml
bound
mov
push
xchg
dec
xorb
mov
movsl
lret
jne
scas
repz
mov
les
std
es
mov
je
call
lods
test
enter
sbb
jo
ss
pusha
push
scas
leave
pop
xchg
inc
hlt
movsl
sar
mov
pop
cmp
rcll
push
xor
jle
push
sub
mov
hlt
xor
lcall
mov
ret
push
int
popa
adc
xor
jbe
insl
cltd
pop
and
push
test
stos
aam
jo
push
hlt
jmp
jbe
sub
jp
nop
pop
add
cmp
inc
std
cmp
rolb
push
jno
adc
fwait
xorl
xchg
mov
add
hlt
and
popa
in
and
cmp
iret
in
iret
es
aam
shlb
or
aas
lods
push
test
std
cmc
lods
push
test
xor
mov
mov
int3
aad
lods
insb
add
cmc
cmp
jbe
outsb
pushw
mov
add
and
cmp
ja
ret
dec
cli
icebp
push
hlt
scas
out
add
xchg
test
rcrb
and
into
fsubl
and
jge
inc
adc
or
mov
push
mov
lea
jg
mov
jl
mov
fs
cmc
cmp
jle
mov
jne
in
add
fstpl
shlb
hlt
sbb
cli
adc
sbb
xor
out
outsl
mov
adc
ror
mov
add
out
sbb
iret
test
jmp
sbb
popf
mov
dec
mov
loopne
andps
movsl
ja
jne
icebp
addb
lea
test
call
cmp
xor
les
dec
jl
adc
pop
out
and
sbb
pushf
mov
xor
push
fstl
mov
sarb
arpl
out
and
mov
cmp
jp
sti
jge
lods
mov
pop
pop
or
mov
cmp
ja
add
shlb
lahf
mov
mov
in
push
fists
arpl
jge
pop
notb
fldenv
cmp
sti
andb
repz
loopne
popa
fs
mov
in
fists
and
out
push
hlt
push
addl
movsb
mov
mov
rcll
sub
mov
dec
adc
in
stc
gs
mov
stos
cmp
shlb
int3
sub
cs
inc
xchg
les
lret
into
je
xchg
pop
add
push
mov
xchg
call
shl
ljmp
stc
add
in
nop
mov
addb
pop
insb
je
dec
rcl
xchg
pop
imul
mov
jg
xchg
loopne
iret
leave
pop
popf
push
or
test
movsl
mov
ja
mov
call
and
shl
test
adc
fmull
aas
dec
mov
sti
popf
cmp
fldcw
icebp
sahf
pop
inc
nop
add
jmp
push
jne
sub
lods
fnstenv
loope
dec
popf
push
fs
jae
mov
nop
mov
div
divb
jne
sbb
xor
in
icebp
outsb
add
push
scas
outsl
in
lock
cmp
jb
sub
and
or
cmpsl
dec
in
adcl
sbb
sub
std
xchg
add
mov
cs
mov
shll
push
inc
rcr
decb
inc
insb
jns
sbb
jmp
xor
movsb
sbb
test
ljmp
shrd
or
xchg
xchg
jmp
int3
sbb
icebp
mov
sbbb
movsl
test
sbb
sbb
and
adc
mov
push
xchg
fisubl
mov
pusha
into
sbb
lahf
std
xchg
mov
mov
sahf
mov
mov
dec
xor
add
pop
jp
mov
sbb
call
jbe
mov
pop
cmpsb
loop
fisubs
jmp
sub
xor
repz
xchg
mov
sub
mov
inc
cmp
divl
mov
adc
jb
fdivl
mov
sub
mov
or
cld
imul
hlt
or
jo
jo
lods
and
stc
mov
sub
stc
scas
xchg
es
dec
xor
js
out
mov
mov
fisubrs
pop
mov
cmpsl
subb
clc
pop
or
inc
add
test
add
xchg
push
fildll
inc
mov
pop
mov
loop
incl
push
adc
jno
jbe
loope
outsb
push
xchg
inc
adc
push
sub
loop
xlat
ljmp
xlat
mov
cmp
fcompl
xchg
inc
pop
pop
fbstp
imul
mov
mov
jmp
out
std
enter
leave
mov
mov
jle
pop
jmp
scas
adc
xor
pusha
out
leave
cld
cmp
popa
mov
and
xchg
pop
aam
jmp
cld
or
in
jl
sbb
mov
shr
push
icebp
loop
dec
jne
ffree
mov
loope
in
jp
idiv
cld
xchg
nop
and
mov
add
jp
insl
mov
dec
mov
subl
sbb
mov
jle
ds
shr
mov
mov
pushl
cmpsl
negb
mov
mov
sub
nop
hlt
ljmp
or
enter
mov
xchg
sti
cmc
cwtl
mov
jge
int
jg
pop
mov
mov
cmp
jne
shll
mov
xchg
sbb
scas
xor
cltd
sbb
or
ret
inc
cli
pop
aad
cmc
mov
ljmp
call
fs
mov
mov
loop
mov
fs
notb
sbb
adc
repnz
cltd
rcrb
dec
int
std
into
dec
push
jno
jmp
shrb
inc
lahf
push
jo
lock
mov
pop
sbb
or
adc
adc
lcall
jge
push
test
lods
rcl
jo
idivb
in
mov
mov
inc
add
add
mov
sub
dec
scas
mov
lea
mov
jmp
out
sub
xor
mov
sub
imul
mov
fsubl
bound
pop
inc
fldenv
add
rcl
cmp
aas
fistpll
fmulp
fdivrs
popa
incl
mov
mov
fldenv
cmpsl
lods
hlt
jne
in
cltd
imul
jnp
push
and
cmp
shll
adc
mov
mov
add
std
fstpl
mov
mov
loopne
mov
daa
or
push
outsl
mov
and
xchg
adc
xorb
cmp
push
es
add
pop
dec
sub
and
mov
jle
pop
sub
mov
mov
jle
adc
imul
in
adc
stos
hlt
push
hlt
rclb
pop
movsl
arpl
dec
sbb
add
inc
inc
mov
test
sarb
xlat
xchg
mov
xor
das
jmp
jg
fldenv
std
adc
fmuls
pop
inc
xor
push
clc
insl
mov
mov
push
aam
cmp
pop
push
hlt
mov
xchg
xor
std
repnz
mov
inc
insb
inc
std
jne
mov
cmc
mov
mov
mov
push
push
negl
popa
incb
fsubl
jne
aas
loope
aas
cmpsb
inc
mov
cmp
aad
mov
push
in
add
shlb
or
and
cli
dec
jns
dec
pop
dec
xchg
dec
mov
mov
push
mov
scas
jne
icebp
xor
inc
test
mov
enter
cmp
cmpsb
or
inc
or
addr16
inc
push
pop
sbb
cmp
mov
or
rclb
fcompl
jmp
scas
js
dec
into
sub
and
stos
sub
cld
insb
jl
xchg
mov
jne
sbb
push
ja
dec
mov
sub
adc
cld
popf
dec
jecxz
push
jne
jge
outsl
repnz
inc
sbb
jge
loope
dec
lahf
mov
mov
jne
pop
jp
in
in
mov
imul
movsl
sub
mov
mov
bound
mov
adc
bound
jae
shlb
int
cld
scas
stos
fmuls
test
mov
mov
jl
mov
fists
inc
mov
cmp
inc
cmp
jg
iret
sub
insb
mov
push
shll
push
movsl
pop
adc
into
mov
adc
xchg
or
pop
daa
data16
jne
mov
andl
sbb
gs
stos
and
ss
jbe
imul
je
mov
cli
outsl
push
or
mov
inc
std
nop
cmp
cmpsl
roll
sbb
iret
push
xchg
sub
fstp
stc
xchg
mov
imul
and
jle
mov
jle
test
movb
das
or
mov
sub
pop
sub
nop
fsubrl
inc
gs
push
xchg
lods
pop
nop
xchg
xchg
mov
xchg
mov
cmp
xchg
jbe
mov
sbb
jnp
xchg
jb
sbbl
int3
mov
pop
mov
xchg
xchg
rcrb
hlt
cmpsb
and
or
dec
in
jp
adc
or
jecxz
test
push
or
les
ret
mov
sub
test
imul
nop
mov
test
mov
iret
xchg
adcb
jnp
add
sub
cltd
dec
pop
mov
les
cmp
lods
fsubrl
mov
and
cmpsb
jle
test
cwtl
je
jne
sahf
mov
cwtl
jno
testb
out
jecxz
int
jge
add
mov
mull
scas
aam
inc
test
or
ja
mov
enter
out
outsl
lahf
sub
pop
inc
or
xchg
jge
and
sub
cmp
lock
push
adc
inc
dec
leave
pop
xorl
pop
rcll
cltd
jl
jns
mov
into
std
xchg
dec
stc
pop
mov
bound
adc
mov
cli
dec
dec
addb
pop
lea
xchg
mov
shr
and
loopne
rcr
pop
cmc
cmp
sbb
bnd
jne
xchg
in
mov
mov
aas
pushf
push
arpl
inc
jne
lds
pop
sbb
shll
rolb
stos
mov
shlb
popf
or
loop
or
push
aam
into
inc
mov
adc
cmp
cmpsb
sar
fisubrs
repnz
dec
mov
ja
clc
js
adc
pushl
stos
push
adc
jmp
or
mov
pop
inc
sbbb
cmp
adcl
lock
cs
loopne
xor
roll
pcmpeqw
inc
leave
lods
out
sub
insb
cmp
hlt
lds
or
ret
jne
jno
addr16
fidivrl
inc
and
push
and
lcall
push
jne
cs
cld
mov
mov
inc
xchg
sub
xorl
push
bound
or
pushf
aad
sub
aad
fisubrl
or
sub
nop
fisubs
imul
call
fs
lret
add
mov
sub
push
filds
mov
pusha
jecxz
sbb
jne
mov
pop
popl
addl
dec
push
cmp
push
cmpsb
icebp
jle
cmc
inc
ffree
xlat
scas
dec
shll
out
outsl
inc
lods
nop
push
les
cmp
popf
xchg
mov
ror
gs
cld
jle
or
push
inc
cmc
mov
cwtl
sbb
testb
sub
xorb
not
inc
cmp
int3
inc
adc
pop
push
sub
mov
out
mov
mov
mov
xor
cli
rolb
add
jle
nop
fisubs
call
daa
out
adc
mov
adc
nop
inc
out
cwtl
pop
pop
jg
js
xor
hlt
cmpsl
inc
cld
sub
fdivrs
aaa
mov
popf
add
movsl
inc
fdivs
lcall
adc
xchg
push
pop
adc
jo
inc
ret
notb
inc
xor
dec
scas
cli
pop
daa
enter
cs
jne
cli
jecxz
in
sub
cmc
sub
scas
loope
jle
hlt
lods
cmpsb
movsl
imul
fisubs
jle
jno
sub
jbe
movsb
push
decl
mov
xchg
outsb
test
fisttpl
shrb
lahf
hlt
jg
inc
leave
add
out
xchg
jo
and
icebp
pop
sub
xchg
add
ss
mov
jae
add
inc
pop
dec
stos
xchg
or
fwait
movsl
cli
mov
fsubl
mov
xor
roll
pop
in
pusha
bound
xchg
popa
insb
xor
jbe
insl
inc
fs
or
sbb
mov
rcr
xchg
js
aaa
pop
cwtl
cmp
push
dec
adc
add
scas
pop
pop
lods
call
scas
sub
add
mov
pop
mov
clc
fs
cmp
mov
push
mov
xchg
fiaddl
jne
mov
std
mov
ljmp
les
hlt
pop
inc
mov
add
pusha
dec
inc
test
adc
or
js
out
sbb
into
add
push
xchg
pop
stc
mov
das
subl
pop
jp
mov
sub
push
pop
loopne
adc
lcall
aad
lahf
pusha
adc
mov
xlat
sti
dec
adc
out
sbb
jnp
lcall
das
shrb
mov
sti
scas
mov
xchg
aaa
jle
rclb
stos
hlt
inc
and
out
xchg
xorb
mov
dec
mov
mov
xor
adc
push
shrb
add
dec
les
cmp
in
std
stos
jb
fcomps
pusha
or
in
stc
jo
lcall
aaa
add
cmpsl
jl
cmp
xor
std
jns
sub
fidivl
jl
lea
lahf
cmc
mov
push
int
stc
stos
scas
cmp
std
pusha
sahf
repz
roll
cltd
xchg
inc
or
sti
xor
repz
mov
pop
call
stos
inc
push
int
lea
inc
test
inc
loope
pop
xor
add
sub
mov
sub
mov
sub
test
push
les
fildll
mov
jo
and
lock
mov
outsb
pop
stos
sub
int3
mov
add
mov
addl
out
push
pop
movsw
hlt
mov
mov
aas
aas
dec
mov
cmpsb
jmp
lret
xor
mov
outsl
mov
xchg
call
ss
adc
mov
pushl
jae
sti
add
xor
mov
or
jle
dec
in
sarb
pop
pop
mov
inc
lcall
scas
scas
push
in
cmpb
pusha
dec
cmovae
push
bound
int3
clc
int3
movsl
cmpsl
sahf
rcr
sub
repz
mov
test
jge
inc
mov
jl
mov
mov
fwait
popa
sbb
std
cmpsl
nop
add
nop
and
mov
fistps
test
and
pushf
xchg
pop
lcall
inc
mov
rolb
hlt
cs
stc
push
adc
inc
push
scas
mov
gs
xor
ror
inc
mov
nop
inc
dec
cmp
out
fstpl
mov
jl
push
lods
repz
inc
cmp
ja
or
into
adc
add
pop
fwait
jne
pop
iret
inc
repnz
mov
jbe
xor
xlat
mov
movsb
mov
cld
mov
adc
dec
aas
rcrb
stos
sbb
xor
pusha
mov
pop
cmpsl
xchg
ss
add
mov
out
stc
enter
mov
pop
imul
cld
lock
fdiv
mov
out
jae
mov
cmpsb
lods
jno
pop
sub
jne
cwtl
xchg
pop
mov
or
sbb
jle
aad
xor
add
repz
pusha
jne
ja
imul
scas
push
hlt
or
repz
clc
iret
pop
jp
cmpl
sub
cmp
int
sbb
jne
adc
push
daa
scas
xchg
ss
js
sbb
sbb
and
push
iret
inc
aam
xor
sub
fsubr
sub
and
rcrb
int3
xchg
mov
arpl
add
add
and
into
lcall
stos
xor
inc
mov
aas
sub
dec
xchg
xchg
pop
mov
in
jne
stos
and
ds
add
push
jne
push
mov
add
cmpb
into
dec
stos
xorl
pop
out
dec
or
push
int3
enter
in
mov
popa
ljmp
xchg
aaa
js
or
fmull
or
sub
jp
inc
xchg
pop
sub
pop
jmp
mov
mov
jbe
pusha
mov
jnp
inc
jb
lds
dec
mov
push
or
pop
insb
cmp
pop
push
loopne
lret
push
aas
push
sub
xor
pop
stos
insb
fists
es
daa
add
add
andl
jge
adc
andb
jbe
cld
pop
test
gs
shll
jb
movsb
pop
xchg
or
dec
mov
std
mov
xorb
pop
xor
xchg
push
daa
jbe
jle
mov
out
lahf
fcomps
rclb
sti
popf
in
xchg
xchg
addl
xor
or
jecxz
adc
sub
jmp
inc
shll
movsl
repz
jmp
std
mov
cmp
cmp
jl
popf
mov
dec
cmc
inc
add
mov
xchg
ret
int3
std
mov
add
out
mov
cmp
and
stc
jne
push
xchg
fstl
sub
repnz
push
adc
dec
and
dec
in
xor
int3
jg
push
aaa
fwait
pushf
repnz
jb
dec
ret
fstpl
sub
or
cmp
mov
int
insl
xchg
sbb
stc
into
cmp
or
mov
and
dec
fdivr
mov
or
enter
mov
popw
dec
arpl
mov
adc
popf
scas
pop
jne
jbe
ret
jnp
icebp
mov
and
cltd
mov
or
mov
jge
inc
outsl
inc
addb
or
notb
lahf
mov
cmp
dec
arpl
aam
ret
rorb
inc
scas
pop
xchg
mov
adc
xchg
pop
xor
jo
cmp
push
loope
sub
adc
fists
loopne
movsb
sub
inc
cmp
in
jecxz
fs
lods
lret
out
leave
pusha
lcall
fnstenv
aad
add
rorl
fnstsw
jmp
mov
aaa
rolb
lods
es
inc
xchg
and
xorb
cltd
jae
cmpsb
andl
insb
loope
jne
jo
ljmp
scas
fimull
std
cmp
or
or
xor
and
sub
popa
dec
adc
inc
stos
add
or
mov
loopne
add
stc
push
dec
lret
mov
insb
int
jecxz
or
jae
dec
popa
jmp
sub
pop
add
ret
jg
push
sbbb
jne
cmpsl
adc
ds
mov
arpl
push
leave
mov
pop
dec
or
incl
inc
dec
addr16
mov
add
insl
test
jne
mov
mov
and
pop
loop
sbb
sbb
pop
push
mov
fcmovb
xor
sbb
xor
add
jnp
xchg
jl
arpl
testl
test
movsb
jge
adc
ja
cmpsl
hlt
ret
mov
mov
xchg
pop
xchg
push
sahf
xor
dec
fmul
mov
or
jae
cmp
push
push
roll
pushf
mov
out
adc
in
pop
cmc
sub
xor
inc
jae
inc
aaa
push
push
ret
dec
mov
in
insb
push
pop
adc
or
fucom
mov
inc
pop
adc
jo
out
mov
mov
sub
inc
test
mov
lods
sub
bound
mov
xchg
push
fmull
inc
mov
adc
mov
adc
int3
push
jnp
add
xlat
jne
cmp
outsb
or
fcmovbe
into
test
pop
out
xor
jae
jae
in
mov
pop
or
fcomps
test
mov
cmp
sbb
jb
in
shll
cmovnp
fcompl
fcoml
ja
cli
les
test
insl
mov
clc
xor
popf
sub
je
daa
cmp
or
rorb
lret
dec
repnz
ja,pt
dec
pushf
bound
and
sarb
xlat
push
nop
and
adc
movsl
out
add
add
adc
data16
mov
aas
les
hlt
mov
js
jne
out
in
jo
mov
gs
hlt
pop
cmc
call
sub
adc
xchg
sbb
ret
jge
pusha
jl
hlt
xchg
mov
rcrl
pop
push
mov
xor
xchg
pop
mov
sti
jnp
mov
in
jp
inc
xchg
pop
cltd
jmp
lock
les
mov
pushf
mov
sahf
jne
pop
jl
lods
inc
jg
fiadds
out
pop
stos
sbb
lcall
jbe
test
adc
cmp
xor
imul
scas
cltd
js
lcall
popf
sub
gs
in
fildl
test
push
lret
hlt
inc
jmp
or
jns
cmp
pop
push
leave
pop
add
inc
stc
jecxz
cli
sbb
cs
ret
es
mov
jnp
sbb
jge
popa
or
pop
cwtl
mov
fidivrl
push
out
rcrl
xchg
arpl
imul
popa
lods
in
nop
test
gs
lcall
xor
rorl
push
mov
xchg
test
mov
jecxz
sub
aam
call
mov
cmpsl
mov
and
lds
roll
mov
xchg
mov
adc
xchg
pop
push
ja
aam
jo
jbe
insb
lahf
xchg
icebp
and
sbb
push
test
push
mov
mov
adcb
popl
adcl
and
add
sub
lds
inc
ficompl
lret
sub
aam
cli
xchg
push
mov
pop
shrb
inc
pop
aas
inc
cs
fistps
or
jno
int3
add
mov
rorb
sub
bound
xlat
flds
test
cli
xor
test
add
adc
stc
ret
fists
out
frstor
mov
lods
test
mov
add
imul
mov
cmp
movsb
and
rcrb
or
clc
mov
xchg
adc
loop
ja
stos
and
inc
jp
nop
or
daa
adc
push
sub
add
push
xor
mov
mov
nop
mov
insb
lods
mov
lcall
enter
mov
stc
bound
scas
test
int3
repz
xchg
pop
add
daa
imul
lret
loopne
test
dec
cltd
sbb
adc
jle
push
addb
cmc
test
mov
inc
push
xchg
iret
sbb
xor
xor
out
mov
cld
jl
mov
mov
cmp
pop
mov
hlt
xlat
mov
inc
arpl
cmpb
xchg
cmp
jg
lea
gs
hlt
cmp
mov
add
inc
xchg
fsubs
or
mov
push
enter
das
hlt
mov
adc
mov
mov
mov
sti
call
xchg
push
pop
insl
cmp
movsl
lods
stc
mov
ljmp
add
stos
dec
gs
mov
cmp
push
imul
pop
stos
add
push
xchg
rcrb
push
call
adc
js
mov
jecxz
movsb
jne
inc
fdivr
cmpsl
inc
out
mov
fcoml
dec
push
sub
xor
incb
imul
lret
xchg
out
xchg
popf
mov
addb
shll
pop
rep
cltd
sub
rcl
imul
xor
mov
icebp
outsb
outsl
push
out
je
das
sub
add
outsl
add
pushf
cmp
in
imul
fcoml
js
add
test
xlat
leave
mov
jns
push
mulb
cmpsl
dec
xchg
jp
jnp
mov
sbb
aad
stos
push
jp
iret
xor
jmp
cmpb
int3
fwait
dec
mov
jne
imul
sub
push
push
insb
xchg
xor
aad
mov
add
sub
xlat
mov
cmc
jg
leave
jle
xlat
cld
lods
fcompl
rorl
insb
mov
xchg
popa
into
lock
hlt
inc
repz
int3
addb
sub
hlt
cwtl
hlt
mov
fisubs
stc
movsb
mov
dec
addb
pushf
hlt
adc
std
gs
inc
sub
leave
jne,pn
mov
mov
adcb
push
repnz
push
dec
cmc
stos
out
pusha
stos
in
xor
mov
pop
mov
inc
fnstcw
lahf
test
cltd
pop
lods
jae
cld
hlt
mov
flds
and
insl
repz
fistl
jmp
popa
test
mov
icebp
dec
movsb
mov
pop
dec
xchg
fstl
pushf
push
adc
aas
shrl
stos
mov
cli
mov
lret
jbe
pop
inc
rep
or
or
lds
nop
fsubrs
test
rolb
lods
fistpll
jbe
xchg
or
adc
jno
push
jne
inc
ja,pt
sbb
loope
cs
ja
fs
test
dec
clc
inc
cld
aaa
cmp
movsb
scas
and
jnp
xor
outsb
inc
arpl
cmp
leave
or
pop
rcr
mov
jnp
or
jl
dec
add
int3
xchg
scas
push
ror
mov
xchg
data16
iret
hlt
xchg
dec
xchg
push
stos
in
jo
mov
enter
mov
pop
sbb
mov
stos
iret
or
mov
sub
stc
mov
mov
jp
lock
jmp
repnz
out
nop
adc
add
in
in
cmp
cwtl
inc
call
test
jp
cmp
adc
xchg
mov
mov
loop
jecxz
sti
dec
je,pn
fs
xor
outsb
xchg
js
lods
stos
or
adc
sub
data16
cmp
xchg
push
mov
movntq
dec
pusha
cmpl
ret
pop
cwtl
rorl
movb
cld
push
adc
xchg
pop
xlat
enter
ja
faddl
push
hlt
sahf
push
adc
mov
mov
cmp
jo
jnp
add
xor
daa
xchg
hlt
test
push
inc
sbb
mov
fldcw
xchg
sub
shl
xchg
xchg
int
or
dec
jmp
and
add
jbe
loopne
cmp
push
faddl
sbb
hlt
iret
mov
adc
imul
enter
sbb
cmp
sub
in
inc
xchg
negb
lret
fmull
int
loopne
repnz
test
loope
mov
inc
pushf
movsl
fimull
xor
push
out
mov
jne
push
add
mov
out
dec
or
mov
cmpsl
dec
push
add
mov
and
mov
ret
mov
xchg
pusha
scas
ss
call
or
push
adc
add
adc
inc
jne
out
sub
into
fcmovne
xchg
dec
sbbb
std
int3
xor
sub
and
xor
xor
xchg
push
ficomps
in
lret
sub
add
inc
sub
sub
mov
mov
xchg
pop
test
and
les
mov
imul
mov
jge,pn
sbb
fldenv
mov
enter
add
inc
sbb
xor
rol
mov
inc
dec
mov
pushf
pop
mov
sbb
or
test
pop
adc
and
mov
lods
hlt
mov
push
sub
sbb
add
call
js
mov
cmp
jle
je
xchg
xor
push
inc
out
xor
jp
cwtl
or
lods
dec
cli
lret
rcll
mov
ror
insl
in
adc
dec
loopne
jae
mov
and
pop
lea
sbb
sbb
movsb
dec
hlt
push
pop
movsl
pop
cmpsl
jnp
flds
pusha
mov
inc
push
pop
xchg
cs
scas
mov
mov
xchg
xlat
mov
jmp
jg
pushf
ret
xor
fidivrl
add
jo
jnp
mov
mov
popa
iret
movsb
in
mov
lock
add
inc
mov
sbb
enter
mov
popa
jne
jo
rolb
push
popf
cs
fildll
or
and
jmp
cmc
loope
add
testb
jg
cmpsl
xchg
and
xchg
mov
insb
inc
adc
fsubl
shlb
xor
dec
les
jl
cmp
gs
add
pop
insb
sbb
adc
lahf
xchg
mov
sub
lds
mov
push
shr
cld
repnz
lea
cwtl
fcmovne
lods
or
and
ret
jle
mov
adc
pusha
cmp
jne
ret
cli
xor
xchg
push
sub
dec
mov
or
sar
mov
pop
jmp
int
cli
lahf
mov
jbe
movsb
sub
aaa
inc
cmpsb
cmpsb
mov
cmpsl
shll
add
stos
cmpsl
popa
in
jl
mov
lret
adc
repz
jp
scas
lea
dec
jmp
imul
push
jne
push
dec
pop
incl
subb
mov
dec
mov
jp
movsl
xlat
cmp
pushf
mov
hlt
adcb
add
shll
iret
add
ljmp
rorl
xchg
lods
outsb
fld
test
dec
inc
dec
adc
repz
push
clc
nop
inc
leave
xchg
in
mov
lret
scas
and
jl
stos
sbb
test
insb
jo
into
test
dec
incl
sub
fistpl
push
rcr
sbb
cmp
sbb
stos
ljmp
jo
dec
scas
movsb
sub
cmpsl
jle
and
mov
or
pop
stos
cs
data16
mov
es
fidivs
sub
mov
xchg
out
movsb
jne
xor
xchg
pop
xor
jle
outsb
jae
nop
mov
pop
push
mov
mov
loopne
ror
or
xor
cmp
stos
sbb
sti
test
xchg
je
mov
gs
cmp
add
xor
repnz
sub
push
mov
sbb
out
loop
fmuls
ss
in
pop
pusha
cmp
hlt
and
push
icebp
js
mov
pop
addl
cmp
ror
adc
leave
dec
sub
std
sub
cmpsl
cwtl
adc
sub
xor
mov
pop
movsl
mov
cmc
outsl
mov
les
into
dec
cwtl
std
movsb
loope
cmpsb
cmpsl
adc
adc
inc
jae
push
add
rcrb
out
mov
movsb
dec
xchg
repnz
rorb
xlat
nop
ja
mov
lea
lahf
shll
icebp
ret
hlt
aam
int3
mov
jbe
cmpb
mov
push
xchg
ficomps
push
push
xor
xchg
imul
mov
mov
xchg
inc
adc
imulb
adc
shlb
or
adc
test
inc
jp
les
dec
mov
dec
adc
sub
in
jp
daa
jbe
sub
add
sbbl
xor
lret
and
out
std
mov
into
dec
data16
sbb
fiaddl
clc
pop
enter
adc
dec
fyl2xp1
movsl
test
and
mov
lods
inc
ja
cs
data16
dec
dec
push
xchg
lsl
enter
sbb
les
or
lds
data16
or
int3
mov
mov
push
pop
xchg
xchg
sbbl
ds
fs
pusha
mov
cli
mov
das
mov
rcr
mov
pusha
lret
push
hlt
aam
loopne
push
mov
adc
sub
lock
add
popa
jnp
dec
hlt
mov
rclb
gs
and
adc
mov
dec
insb
int
imul
icebp
imul
jne
lcall
ret
or
sbb
mov
cwtl
mov
pop
inc
mov
mov
or
xchg
aam
jo
shl
loop
pop
aaa
hlt
sahf
sbb
jg
mov
adc
xor
bound
int
or
and
stos
loopne
pop
popf
jno
sbb
ja
mov
pop
pushl
fnstenv
fbstp
cmp
push
mov
jb
aad
fsubrp
cmpsl
xor
into
fiadds
push
leave
mov
in
roll
in
push
leave
div
xchg
pcmpeqw
addb
dec
cmpsl
xlat
dec
mov
in
add
mov
bound
int3
cmp
mov
sbb
loop
rcrl
sub
jle
enter
dec
frstor
push
sub
inc
out
movsb
add
cmc
mov
jg
subl
lcall
xchg
push
push
sbb
sub
icebp
iret
inc
jp
mov
xchg
jno
daa
dec
mov
mov
inc
sbb
roll
cmp
stos
mov
testb
movntps
adc
add
mov
sbb
mov
pop
jle
cmpsb
test
pop
push
pop
insl
outsl
sbb
mov
sti
inc
test
mov
add
jno
fnstenv
xchg
insb
or
rorl
jmp
mov
sbb
pop
cmp
push
into
mov
inc
push
mov
xchg
rcrb
jae
lahf
addl
cmp
daa
mov
in
in
xor
mov
popf
inc
add
mov
jecxz
inc
mov
outsl
icebp
jnp
and
add
sbbl
jge
mov
push
lahf
sub
jne
mov
enter
adc
outsl
movsb
sub
mov
lret
or
cmp
sub
das
int
or
ret
lret
xchg
in
stos
pop
rolb
mov
or
adc
sub
push
jmp
stc
dec
icebp
xchg
loope
andl
bound
fmull
lret
jb
fisubrs
cmp
adc
mov
loopne
mov
dec
das
stc
jbe
movsl
sub
lods
mov
mov
int3
jmp
inc
dec
push
subl
ja
test
mov
mov
mov
cmp
and
and
call
aam
out
fbstp
fisttps
hlt
pusha
mov
add
ror
adc
fnsave
incb
in
push
test
dec
xor
sub
push
fidivs
loope
cmpsl
jp
inc
add
test
pop
fisubs
fidivrl
loopne
lret
fdivrl
sti
out
xchg
sub
add
jl
xchg
cs
std
stos
dec
add
pop
mov
inc
or
fst
push
es
mov
and
fwait
inc
rorl
pop
cmpsl
aam
andl
lock
adc
jmp
adc
stos
xor
sub
nop
xchg
mov
adc
loopne
test
jbe
dec
pushf
cmp
sbb
scas
loop
out
addl
scas
repnz
cmpsb
mov
cmc
jp
scas
push
push
xchg
aam
jle
lds
sbb
pop
fdiv
xor
out
call
lods
push
xchg
cmpsb
cwtl
adc
and
lret
rorb
movsb
je
cmp
leave
cmc
ret
sub
aas
addr16
cmpsb
out
mov
sub
loop
dec
stos
enter
add
movsb
add
hlt
popa
and
es
scas
std
inc
jo
jne
jmp
adc
add
mov
imul
mov
in
cmp
pop
mov
mov
gs
into
scas
adc
stc
sub
sbb
xchg
mov
pop
jp
movsl
and
in
adc
xor
add
stos
shlb
push
mov
pop
ss
mov
fstps
pop
movsl
add
sbb
dec
pushf
xor
lds
jo
jo
adc
cmp
movsl
adc
mov
subl
imul
mov
enter
and
pop
mov
loop
adc
test
icebp
add
push
dec
xor
mov
jne
or
add
mov
movsb
push
fs
imul
xchg
inc
dec
push
lds
dec
cmpsl
ljmp
imul
cld
and
ret
and
sahf
inc
inc
add
fistpll
adc
scas
sub
inc
cltd
stos
mov
les
ja
insl
aad
push
stos
aaa
inc
push
jnp
jb
shl
add
push
mov
pop
push
ret
or
mov
lea
mov
fcomi
popf
sub
or
stos
xchg
push
pop
insb
aas
add
cmp
call
sub
mov
mov
and
xchg
pop
jle
dec
dec
mov
loop
flds
mov
imul
adcb
divl
hlt
jno
push
add
mov
cmc
xor
push
movsl
jnp
lods
inc
xchg
push
cmpsl
pop
xor
add
push
add
jecxz
inc
cmp
mov
sar
xor
or
mov
pop
jns
leave
mov
or
mov
movsl
mov
out
push
test
popf
insl
inc
gs
sar
pop
sub
xor
add
into
add
ret
add
lea
sub
adc
xchg
add
dec
subl
shll
lock
sbb
mov
add
sti
mov
das
ljmp
fldl
hlt
dec
mov
shr
sbbb
xor
call
pusha
jmp
xchg
dec
loope
mov
hlt
xchg
mov
addl
lahf
cmp
pop
fsubl
add
pusha
inc
outsb
ljmp
cwtl
nop
xchg
dec
sbb
sub
sub
xor
or
mov
xor
adc
inc
cli
fildl
and
out
pop
cmpsl
cltd
gs
xchg
inc
andl
movsb
push
jge
imul
adc
dec
mov
gs
sub
jbe
jmp
cmc
adc
mov
leave
xchg
scas
inc
fcmove
jle
jo
mov
push
add
in
push
fsubr
rolb
or
xor
sahf
test
sub
movsl
xchg
imul
mov
push
lock
mov
stos
push
mov
xchg
iret
mov
stos
rclb
pop
addl
xor
push
incb
adc
push
lcall
mov
lahf
pop
pushf
push
sub
push
hlt
jl
lods
icebp
mov
jmp
shrb
arpl
and
mov
add
repz
mov
sti
sub
mov
pop
mov
cmpsb
hlt
or
popf
dec
fucomip
and
repnz
outsb
inc
jnp
xchg
aam
inc
rcrb
nop
cmp
xchg
inc
shlb
mov
sub
les
cmp
lcall
xor
sub
enter
fisttps
jne
movsl
jns
ljmp
push
xchg
in
inc
leave
or
int
jne
inc
dec
jnp
mov
mov
mov
xchg
xor
jle
nop
push
or
push
das
xchg
mov
mov
push
jno
push
mov
cmpsb
push
lods
nop
jb
int3
cmp
sbb
sbb
inc
mov
mov
cmpl
dec
roll
push
inc
xchg
add
push
sub
add
inc
push
fimull
jl
fdivl
stc
dec
test
in
and
sti
js
mov
push
xorl
lea
insb
movsb
in
sbbl
in
adc
cmp
xchg
adc
lds
roll
mov
iret
pop
repnz
jmp
sub
int
inc
inc
or
mov
or
sub
add
and
dec
stc
xor
xor
add
push
pop
jo
xchg
dec
jge,pn
icebp
pusha
ds
rcrb
ljmp
aaa
cmc
je
scas
and
lahf
add
mov
pusha
nop
repz
sub
ficoms
fucomp
outsl
jne
and
cltd
movb
rolb
leave
jne
inc
pop
sbb
push
ficoms
jne
repnz
adc
mov
insl
mov
mov
sub
sti
les
sbb
mov
pop
xchg
sub
xchg
lahf
push
sahf
aas
push
xchg
mov
dec
inc
add
pop
push
cmp
arpl
mov
adc
xor
dec
dec
mov
lret
aam
cmp
test
cmp
testl
imul
subb
ljmp
push
add
pop
mov
jmp
imul
es
inc
pop
bound
sub
cld
xor
jne
fdivrs
dec
jne,pn
push
jne
dec
loope
add
daa
test
pusha
adc
ss
dec
mov
in
mov
mov
lret
mov
jle
inc
pusha
popf
insb
repz
nop
push
fdivr
cli
test
lods
jne
xor
xlat
shrb
ja
orb
ljmp
mov
call
dec
dec
push
sbb
mov
add
fsubrs
and
rcl
nop
xchg
out
les
xchg
adc
dec
lret
mov
cwtl
rorl
or
stc
dec
cmp
add
bound
sti
add
sub
sbb
lock
fstl
filds
in
mov
xchg
imul
lock
jne
cs
addr16
mov
jns
dec
test
add
cmp
or
cld
scas
sub
sbbl
andl
stos
lret
movsb
mov
maskmovq
imull
aaa
stos
sbb
loope
add
frstor
mov
push
cltd
pop
mov
scas
inc
sti
cs
aas
jp
cmp
xlat
inc
rcrb
enter
xchg
rcll
jnp
lret
arpl
icebp
jecxz
jge
in
sti
adc
clc
and
pop
sbb
and
or
stos
pop
jne
arpl
push
int3
faddl
sub
push
cli
lcall
and
pop
pusha
adc
jl
xor
dec
das
mov
mov
pop
mov
addl
cmpsb
outsl
outsb
int
mov
xor
cmp
sbb
or
push
sbb
push
xchg
cmp
insb
or
add
xor
mov
sarb
mov
dec
arpl
fisttps
ds
pushf
popl
cmp
jnp
cld
shrb
add
cmpsb
mov
in
mov
out
cmpsl
js
xor
jne
lods
jne
mov
push
dec
mov
popa
sbb
movsl
push
gs
jle
loope
mov
repz
dec
loopne
adc
dec
bnd
lcall
xchg
push
stos
imul
mov
cmpsl
nop
xchg
pop
jge
add
int3
addr16
rcll
jns
mov
jno
sub
push
inc
outsb
sbb
cmpsb
push
adc
lret
mov
jne
cmp
pop
aas
or
sub
hlt
pop
cmp
ljmp
mov
sub
mov
lds
sub
and
add
dec
ret
aas
je
dec
mov
movsl
cmc
mov
mov
popf
inc
decl
hlt
cli
xchg
jecxz
mov
xchg
pusha
testb
test
jne
lret
jbe
sub
test
mov
add
adc
mov
jge
enter
clc
lock
cmpsb
sub
sub
pop
xchg
push
lods
mov
loop
popa
cmpsb
stos
hlt
push
mov
mov
pop
and
jge
xchg
insb
push
push
xor
test
mov
mulb
aaa
jp
sbb
inc
jg
xor
lret
pusha
push
cli
or
insl
ljmp
push
test
push
push
pop
mov
xor
inc
sbb
repz
mov
mov
ret
js
addb
add
inc
sub
pop
ret
cmp
or
cmp
cwtl
movsl
enter
inc
cs
gs
jecxz
mov
mov
nop
int3
repnz
sbb
xor
popa
jbe
cs
mov
jle
cmp
jo
dec
mov
pop
jbe
and
push
repnz
es
add
lret
mov
push
inc
insb
int3
lods
popa
sub
ljmp
jg
jmp
or
clc
push
and
cmp
or
into
mov
loope
hlt
inc
sub
fnsave
pop
mov
ret
add
incb
push
lock
jecxz
cli
fs
jne
out
std
sub
out
sarb
outsl
add
imul
mov
clc
xchg
pusha
mov
inc
xorb
mov
mov
jno
sbb
cwtl
sbb
push
add
push
mov
and
mov
mov
fsubs
sub
leave
mull
inc
hlt
lret
loopne
test
lods
inc
inc
or
lock
sub
mov
addr16
sub
stos
mov
push
sub
dec
enter
jne
pusha
sarb
test
ret
mov
push
xchg
mov
lcall
out
roll
add
mov
and
icebp
xor
mov
adc
repnz
mov
cmp
push
clc
les
mov
push
inc
cmp
loop
inc
mov
imul
ljmp
dec
stc
ljmp
hlt
insb
cmc
test
arpl
dec
lods
add
inc
sub
inc
scas
fidivs
adc
out
pop
pop
xchg
ja
add
push
roll
mov
lods
int
loope
hlt
mov
and
jbe
and
jecxz
xchg
jno
in
mov
loope
dec
sahf
test
pop
ds
ret
addl
add
int
scas
pop
and
push
add
jmp
fildl
js
push
test
push
xorl
cmp
jge
popf
in
jne
xor
loopne
cmp
insb
xlat
out
ret
cmc
jl
enter
lcall
mov
div
pop
sub
mov
fcoml
es
xlat
nop
and
dec
mov
sub
inc
ds
aad
cmpsl
mov
push
leave
adc
sbb
pushf
xchg
cmpsl
xlat
out
cmpsb
mov
les
and
cld
pusha
add
and
cwtl
jecxz
xor
cld
sbb
add
jmp
lcall
and
push
mov
call
mov
pop
cmpsl
push
stos
dec
push
adc
cmp
lock
push
mov
arpl
insb
jmp
or
cmp
sti
fnsave
in
jbe
add
fisttpll
scas
sbb
das
jmp
ljmp
jne
mov
mov
pop
and
mov
shlb
pop
xor
and
sub
loopne
rcrl
in
mov
js
dec
and
xor
mov
mov
aaa
sbb
and
out
loop
push
movsb
aas
shll
push
dec
add
push
cmp
xor
mov
daa
iret
int3
sub
cmpb
adc
es
mov
dec
and
hlt
cld
cmp
dec
mov
in
xlat
and
adcb
in
mov
inc
outsb
adc
fldcw
adc
mov
andb
xchg
sub
push
cwtl
add
mov
mov
sbb
inc
dec
mov
xchg
movsb
shrb
fcoml
and
sub
and
and
jecxz
pop
pop
test
andb
or
aaa
or
lods
push
lods
xchg
daa
xchg
negb
sbb
fstpl
fidivrl
jmp
push
sub
mov
cmpsl
cmc
adc
lret
xchg
ss
jle
shlb
sub
fbld
clc
addr16
mov
in
jnp
lods
push
out
mov
inc
stos
xlat
icebp
enter
inc
jne
cmp
repz
jne
lret
popa
cmp
leave
cli
mov
arpl
aad
arpl
xchg
mov
shrb
icebp
mov
xchg
xlat
mov
mov
hlt
cs
rclb
cmpsl
sarl
pinsrw
nop
mov
add
mov
enter
movsl
mov
add
sbb
mov
fists
fcoms
mov
mov
call
pusha
stc
jns
adc
mov
push
and
clc
xchg
inc
loop
mov
sahf
adc
psllq
scas
pop
dec
mov
and
cltd
xor
sub
insl
xchg
mov
xchg
push
push
sub
call
sub
jmp
sti
jmp
test
orl
push
dec
in
sub
jne
fs
jnp
cmpsl
mov
js
and
pop
sbb
ss
das
xor
jmp
cld
repz
loopne
jbe
shlb
push
fnstenv
mov
je
mov
or
xchg
cli
fldt
adc
sub
call
mov
adc
cmp
inc
sbb
cmp
pop
jmp
xor
add
or
fs
push
loope
cmp
xchg
stos
loopne
test
add
xlat
dec
out
add
lret
sub
loop
inc
inc
jl
mov
hlt
push
imul
sbb
scas
loope
shr
sar
out
repnz
jne
fs
sti
inc
mov
pop
adc
push
sbb
inc
loopne
sub
xor
xor
and
icebp
dec
outsl
imul
mov
adc
add
mov
or
loop
and
ret
std
movsl
xchg
mov
add
movsb
lret
repnz
push
jge
or
sahf
sub
lds
xchg
mov
ss
sbb
js
xchg
jo
out
sti
movsl
imul
mov
stc
es
cmp
test
jbe
xchg
in
xor
mov
mov
mov
loopne
sub
pop
xchg
lock
repnz
cmp
cmpsb
add
es
or
mov
movsb
sub
jmp
rcl
jp
xchg
nop
dec
test
dec
push
dec
insb
sbb
popf
jns
push
push
loopne
out
push
cmpsl
dec
push
sub
lahf
add
inc
cld
les
jne
adc
pusha
in
adc
bound
in
add
mov
dec
add
mov
xchg
or
nop
adc
and
fsubr
push
sub
fistpl
and
mov
mov
jnp
nop
ds
cmpsl
xlat
dec
daa
subb
mov
or
dec
mov
cmpl
sub
xchg
das
mov
jnp
jae
lea
cmc
lods
jle
mov
leave
mov
pusha
push
adc
push
jnp
push
shll
repz
movq
call
lods
and
mov
add
loopne
mov
xorl
jl
int3
pop
mov
aad
cwtl
inc
imul
cmpsb
enter
inc
xchg
mov
es
fxch
mov
neg
dec
aam
cld
cld
or
incl
dec
jns
inc
jne
mov
hlt
mov
es
mov
xchg
inc
int3
inc
hlt
mov
scas
dec
enter
mov
cmp
mov
imul
loopne
dec
ret
pop
pop
mov
movsb
xchg
pop
or
sti
xor
leave
sub
mov
js
xchg
sahf
add
mov
cmc
pusha
mov
fisubl
in
jmp
pusha
bound
add
test
mov
fisubrs
lock
call
mov
sub
out
mov
jmp
stc
sbb
add
add
sahf
sbb
mov
xchg
jne
pop
or
sbbb
idivl
cmpsl
mov
aas
mov
sub
xor
push
pusha
rcr
outsl
push
xchg
push
pop
mov
jle
test
jle
add
dec
mov
xchg
push
jne
pop
dec
in
test
add
dec
sahf
nop
add
gs
mov
ja
cmp
cmpl
outsb
bound
addl
push
mov
stos
mov
pushl
mov
sbb
add
mov
enter
outsb
jge,pt
out
pushf
xor
negb
pusha
pop
dec
pop
testb
mov
int3
icebp
lock
pop
call
montmul
cmpsb
rcrl
int3
xchg
mov
xchg
xor
xchg
pushf
out
test
subl
pushf
hlt
mov
hlt
xchg
adc
std
out
mov
jb
or
loope
das
cltd
scas
in
mov
adc
lsl
lods
cld
or
fldl
in
test
sub
push
mov
xlat
xchg
jo
push
sbb
push
lcall
lcall
rcr
push
and
ret
dec
push
popa
cwtl
stos
mov
inc
push
mov
inc
push
add
mov
mov
ret
int3
mov
sti
xor
pop
mov
pop
xchg
lcall
data16
pusha
les
or
mov
hlt
adc
mov
dec
pop
stc
ljmp
inc
push
lret
mov
mov
inc
xchg
add
push
enter
adc
popa
push
jns
or
push
das
addl
das
push
ljmp
cmc
adc
mov
fildl
orb
dec
nop
enter
popa
in
mov
mov
shlb
jne
jg
loope
and
jmp
mov
nop
lods
aad
adc
xchg
pushl
sbb
and
cld
mov
aas
xchg
cmp
inc
inc
add
adc
in
sub
and
lcall
sub
frstor
mov
test
jge
loop
add
mov
lcall
outsl
sub
xor
xchg
jp
pop
or
push
hlt
daa
mov
ret
add
int3
inc
mov
inc
mov
fnstenv
jp,pn
testb
lds
insb
dec
stc
orb
test
jl
pop
scas
mov
adc
adc
aad
cmpl
insb
shlb
add
hlt
xchg
xlat
andb
jle
xor
addr16
icebp
mov
sub
add
outsb
lret
adc
lods
int3
xchg
in
test
sub
jge
or
mov
enter
fcompl
inc
arpl
stos
cld
outsl
cmc
cs
imul
cmp
push
mov
dec
jb
loope
sub
movsb
movsl
imull
mov
mov
jne
xchg
sub
rorl
push
jp
adc
sub
hlt
mov
addl
shl
inc
pop
jecxz
int3
bound
cmp
inc
outsl
loop
ja
hlt
fidivs
push
push
out
sbb
stc
int3
scas
pop
insb
leave
dec
mov
and
push
cli
lcall
popa
stc
loope
jne
inc
fdivs
cmp
or
pop
fs
loopne
sub
outsl
push
enter
push
stos
test
xchg
ljmp
int3
inc
or
ss
and
push
call
pop
jp
icebp
in
mov
dec
add
mov
scas
xor
sub
mov
cmc
sarb
lea
das
mov
movb
enter
mov
iret
enter
adc
cs
mov
cmp
jl
jne
mov
xchg
fimull
std
jp
xchg
hlt
pop
repnz
push
lock
sti
int3
push
mov
pop
xchg
shrl
jp
mov
sbb
aas
fcomps
es
xchg
flds
pop
xchg
push
or
mov
out
ret
fdivs
ds
jbe
push
in
std
dec
loop
lret
loop
push
pop
cmp
sbb
std
sub
add
insb
in
out
outsb
mov
adc
sahf
rorl
lods
sbb
je
pop
dec
jbe
xlat
stc
dec
mov
dec
scas
adc
and
dec
fsubrl
movsb
clc
ss
adc
add
sahf
movsl
mov
movsl
sti
cmpsb
mov
sti
push
sub
lcall
test
xchg
dec
add
arpl
push
fnsave
popf
pop
mov
fistps
mov
bound
pop
cltd
scas
pop
xchg
push
mov
incb
lds
add
inc
inc
or
les
nop
and
mov
jle
imul
fstl
sahf
mov
aaa
or
mov
movsb
popa
inc
and
ret
inc
add
fs
mov
das
mov
adc
pop
insb
cmp
in
jle
ret
es
xchg
or
jmp
pop
jne
movsl
cmpl
out
jnp
cmp
pop
leave
into
pop
leave
inc
push
mov
fsts
push
call
out
or
inc
movsb
cld
andb
sub
dec
push
and
call
or
ret
cltd
mov
pop
test
adc
scas
lods
cmpsl
int3
notl
mov
fdivr
iret
xorl
add
cmp
lcall
aam
lock
jge
and
xchg
scas
xchg
mov
outsl
xor
not
scas
daa
fists
test
in
mov
and
addb
loop
jge
pop
cmpl
mov
arpl
mov
popf
mov
mov
test
loope
cs
cwtl
push
and
jl
fwait
add
jae
ds
daa
mov
sub
pop
pusha
iret
es
pop
pop
push
sub
fisubrs
pusha
sti
add
xchg
and
in
ja
mov
xor
dec
shr
hlt
repnz
xchg
testb
add
cwtl
sar
lds
mov
and
inc
add
ds
nop
cmp
xchg
insl
movsl
mov
jae
sbb
sbb
lahf
cli
pop
into
rcll
lods
mov
sub
adcb
shrl
pusha
or
sub
xorl
ficoml
add
sub
sbb
sbbb
cmc
add
stos
in
xchg
push
loop
or
repnz
rcr
fildl
xor
mov
rclb
push
popa
add
int3
fbld
sbb
mov
xor
inc
subl
push
scas
ret
jbe
pushf
jbe
xor
in
mov
cmpsb
jne
jmp
inc
inc
add
push
mov
loope
insl
enter
mov
cwtl
lahf
dec
pop
sub
outsl
sbb
int
jns,pn
mov
shll
sub
lods
jecxz
pop
sub
add
rcrl
loope
iret
lods
or
shlb
mov
mov
int
das
pop
xor
xchg
ret
pusha
sub
mov
adc
jo
pop
test
adc
dec
adc
xchg
pusha
stos
inc
lods
hlt
inc
into
fildl
push
in
jecxz
jne
sub
movsb
hlt
inc
into
dec
int
fmull
adc
xchg
mov
sahf
xchg
call
movsb
test
xchg
fcompl
sub
pusha
mov
fsubl
xchg
orl
xor
add
inc
add
nop
jle
xchg
repz
lods
test
sub
fcom
leave
push
inc
push
fnsave
sub
ret
hlt
aas
call
jo
sub
cli
stos
orl
loopne
mov
aas
adc
pop
addl
xor
mov
rcrb
or
inc
adc
jb
out
dec
pop
mov
and
in
inc
mov
mov
cmpsl
add
subb
push
into
rcl
mov
or
push
mov
std
aas
cmpsl
or
cs
push
mov
mov
cltd
xchg
test
stos
int3
adc
add
jg
iret
loope
fdivrl
and
sar
cs
nop
inc
ret
mov
out
pop
mov
stos
int
pushl
into
xor
mov
pusha
fsubrl
gs
scas
and
test
add
mov
mov
xchg
std
mov
pusha
jbe
int3
add
mov
loopne
rcrl
fmulp
sub
and
jmp
pop
loop
jne
imul
sub
fucomp
addb
jne
sub
es
mov
hlt
pop
sub
jne
repz
dec
mov
outsl
and
outsb
xlat
xchg
push
enter
sarl
aaa
adc
stc
add
mov
sbb
orb
out
scas
notl
or
add
xorl
mov
clc
jmp
lods
push
lret
mov
lea
mov
sub
mov
inc
scas
xchg
decb
lahf
xchg
pushf
popa
push
pop
pop
test
jge
dec
cmpsl
aas
rcll
push
bound
xchg
repnz
or
jmp
dec
cs
test
rcl
add
push
jp
push
in
cltd
ret
xor
gs
cmp
std
sub
ret
sbb
cld
cmp
cmpsb
dec
test
lret
mov
push
rcr
mov
mov
decl
ficoml
pop
out
dec
mov
add
decl
mov
adc
jmp
and
or
nop
movsb
push
ret
cmp
adc
or
jl
pop
push
stc
pop
xchg
jecxz
mov
and
fistl
add
mov
add
pop
cmpl
add
fldcw
adc
or
inc
shl
pop
mov
adc
ss
xchg
jge
mov
mov
or
nop
aaa
notb
sub
fdivrs
subl
testb
jno
jge
enter
stc
and
pop
add
fimull
popa
pop
inc
ljmp
and
idivb
in
int3
or
hlt
xchg
outsl
pop
scas
sub
paddw
sbb
inc
popf
jbe
inc
shlb
or
les
pop
ss
mov
mov
test
mov
aad
stos
or
sbb
cmp
jae
jne
filds
idivb
popf
stos
mov
insb
test
aas
idivl
mov
jge
mov
adc
add
sub
in
enter
data16
loopne
es
imul
mov
pop
xchg
stos
inc
leave
mov
xchg
dec
icebp
push
jl
or
mov
mov
dec
lret
dec
in
jae
fisttpll
les
mov
cwtl
cli
int
mov
mov
xchg
nop
jp
jno
enter
pop
leave
dec
inc
jno
cmp
into
mov
cmp
xchg
jne
ret
shl
lock
sub
inc
adc
sub
loop
add
inc
test
inc
call
sub
in
xchg
or
insl
inc
inc
pop
mov
pusha
out
mov
pop
and
mov
sbb
testb
xor
bound
push
pop
push
scas
aad
fst
sub
lods
iret
inc
gs
mov
sbbl
aam
leave
add
mov
jge
or
pop
mov
push
fwait
call
dec
andl
cwtl
jne
pushf
sti
pusha
into
aad
adc
pop
sbb
cmovg
xchg
call
xorl
lods
pop
adc
cmpsb
scas
mov
xchg
push
xchg
xchg
clc
xor
add
pop
or
mov
imul
sub
out
inc
pop
fsubrp
push
add
les
inc
scas
popf
sti
xchg
pop
push
dec
hlt
mov
das
pushf
cmp
int
xor
mov
cwtl
mov
cmp
fnstsw
add
jp
push
addr16
mov
push
icebp
insb
jo
cmp
jp
or
xlat
leave
add
cld
shll
movsb
fisttpl
cmc
mov
and
sti
pop
jg
sar
cli
aas
mov
lock
cmpsl
mov
pop
lahf
scas
cmpsb
inc
inc
decl
dec
inc
mov
dec
lods
mov
fsubrl
dec
xchg
add
les
hlt
mov
jg
icebp
scas
jmp
pop
movsl
sub
das
repnz
xchg
sbb
push
imul
mov
xchg
and
adc
sbb
test
adc
sti
sti
std
loope
stos
sub
fbstp
lds
mov
rorl
std
das
xorb
ret
mov
fbld
test
shrb
pop
dec
pusha
test
inc
cmp
sub
movsl
stc
in
js
add
mov
das
les
sarl
popa
adc
pop
into
xchg
jg
test
inc
dec
pusha
jmp
mov
int3
cmpsl
loopne
fdivl
xchg
outsl
es
adc
subl
hlt
sub
xchg
int
test
push
push
dec
je
mov
mov
mov
out
in
cmp
xor
push
mov
pusha
adc
ret
mov
mov
pop
enter
lods
stc
push
pop
das
jmp
cmp
test
cmp
roll
lret
ffree
loopne
add
das
or
pushf
push
add
sub
ret
bound
jecxz
mov
xchg
mov
lret
popa
jg
orb
loopne
fcompl
push
inc
inc
outsl
movsb
mov
jne
lds
mov
push
inc
or
in
cmpsl
icebp
fisubrs
in
jne
add
mov
leave
push
imul
in
mov
pop
mov
lret
repz
add
adcb
lahf
pop
inc
cmpsl
pop
add
jo
mov
add
outsb
popf
or
xchg
or
xchg
pop
out
loope
xor
inc
aam
jns
lret
inc
mov
pop
stos
mov
mov
xchg
mov
jge
dec
pop
pop
adcl
mov
outsl
push
cmp
push
scas
cmpsb
lcall
xchg
adc
or
mov
push
mov
stc
jge
add
jbe
out
enter
pop
call
je
push
push
add
jo
xchg
pop
out
into
jecxz
add
inc
iret
mov
mov
mov
es
pushf
cmp
inc
pop
jo
or
add
repz
xchg
outsl
inc
mov
push
add
sbb
jo
inc
sbb
in
repnz
fstl
inc
hlt
cmpsl
mov
and
mov
pop
inc
dec
lds
sbb
sbb
xorl
insl
sbb
loope
in
or
mov
xchg
dec
push
pop
or
pop
add
inc
hlt
or
fiadds
jle
jmp
adc
loop
push
call
rolb
lock
aaa
and
inc
mov
ret
test
sub
pop
mov
loope
into
cli
and
sbb
jle
jge
jp
pop
lret
mov
push
add
pushf
xor
les
fimuls
loop
jo
or
std
stc
mov
mov
and
lret
pop
mov
ffree
adc
push
dec
jo
test
leave
fsts
into
fwait
or
in
stos
jb
es
int3
cmc
mov
std
enter
adc
cmp
jg
loopne
rclb
std
les
mov
stc
es
fildll
lods
enter
xchg
cltd
aad
orl
add
sub
das
jne
sahf
roll
push
ljmp
popa
push
lock
ficomps
inc
test
push
push
sbb
mov
subb
jp
pop
icebp
jbe
pop
mov
mov
add
xor
sbb
stos
dec
xchg
mov
dec
add
xor
pop
push
divps
in
and
or
jne
push
inc
lds
add
mov
aad
sub
lahf
mov
xor
loope
aam
cmp
loopne
cwtl
aad
adc
mov
les
je
push
jne
xchg
pop
addl
pop
inc
mov
push
jge
ljmp
icebp
imull
add
cli
mov
fists
loop
add
idiv
xor
arpl
nop
ret
xlat
sbb
cs
movsl
shlb
or
mov
xor
or
add
sbb
loopne
cmpsl
rcl
jno
adc
mov
hlt
rcll
mov
push
mov
mov
imul
xchg
inc
jecxz
inc
fnstcw
jecxz
mov
gs
push
push
jp
jns
js
mov
stos
popa
add
push
mov
jl
imul
lds
sub
aas
mov
sbbl
movsb
roll
mov
bswap
jmp
and
jae
and
pushf
hlt
and
jp
in
clc
out
and
push
sbbl
inc
shlb
mov
xchg
jo
out
mov
jne
leave
je
mov
add
mov
dec
shlb
cmpsl
and
not
hlt
xchg
and
adc
fildll
add
mov
cmp
bound
clc
lahf
sub
pop
mov
repnz
gs
test
sub
add
sbb
or
xlat
frstor
fiadds
out
adc
mov
jmp
negb
push
sbb
and
arpl
push
ljmp
xchg
pop
test
addl
daa
leave
jne
pushf
xlat
test
add
push
xchg
imul
test
in
sub
movsl
loope
mulb
jmp
jecxz
movsb
jne
lea
dec
adc
pop
insl
les
lcall
daa
lea
ds
sarl
aad
push
jo,pn
and
push
sub
hlt
jbe
enter
lods
jno
mov
rcrb
loop
jmp
cltd
mov
jge
inc
loope
dec
scas
mov
or
xor
hlt
jnp
add
xchg
pop
sub
push
cwtl
jp
hlt
xchg
sub
mov
push
inc
cmp
outsl
jns
sbb
inc
push
call
mov
ss
and
and
out
mov
pop
fistpl
shlb
ljmp
jbe
nop
jno
sub
xchg
lea
js
out
test
es
fisttpll
xor
pop
adcb
test
pop
jb
push
cmp
pop
mov
dec
cmpsb
mov
in
jmp
inc
stos
inc
xor
ret
fldt
mov
mov
mov
jp
add
jmp
sahf
pop
cmpsl
pop
in
mov
jno
stos
icebp
xor
lock
pop
xor
popa
jne
mov
fistpll
sub
repz
sbb
enter
adc
cltd
jle
sbb
add
jbe
pop
aad
adc
adc
loopne
sub
xchg
sub
jae
mov
imul
loop
and
cmp
in
imul
xor
and
mov
js
cli
jne
jno
lods
addb
int3
adc
jbe
lock
out
addl
call
mov
jo
int3
mov
mov
movsl
je
xor
cmp
add
sbb
or
dec
loope
mov
mov
out
ret
mov
lods
imul
inc
push
out
dec
lock
adc
pop
pusha
mov
outsl
xchg
xor
jl
pushf
xor
push
sub
call
loope
ljmp
scas
lds
sub
out
sti
push
ds
imul
orl
sub
jne
cld
cmp
sbb
sub
xor
jne
jle
loope,pt
sti
insl
pusha
adc
xor
pop
cmp
inc
pop
mov
outsb
clc
inc
fnstenv
shr
jge
enter
inc
adc
add
vandnpd
xchg
jecxz
pop
jbe
les
cmc
xchg
insl
inc
mov
movsl
loope
mov
jp
jnp
add
pushl
and
sub
lea
sub
dec
push
inc
jle
push
test
test
pusha
in
insl
pop
imul
mov
lods
xchg
pop
sbb
cmpsl
les
leave
mov
cli
inc
mov
jmp
addr16
arpl
add
fwait
hlt
adc
xchg
jge
arpl
add
sbb
subb
lds
testb
sti
dec
jbe
mov
lcall
push
pop
mov
cmc
ficoml
pop
cs
xor
cmp
aad
pop
mov
test
rcll
sbb
or
and
hlt
and
add
inc
xor
mov
push
adc
stos
xlat
fidivl
push
push
push
xchg
and
adc
shrb
cli
iret
add
popf
dec
jg
stc
rclb
sbb
push
addr16
std
xchg
jne
dec
fldcw
inc
push
ret
inc
ret
dec
mov
push
dec
loopne
mov
fmull
scas
push
test
insl
bnd
pop
xacquire
pop
lods
adc
stc
jns
sbb
loop
mov
mov
imul
clc
cmp
mov
jne
nop
sbb
clc
int3
pop
push
lock
mov
xorb
hlt
jns
popa
sarl
inc
int
stos
push
xchg
mov
push
js
mov
ja
in
push
dec
cmp
fwait
xorl
sti
mov
fldcw
jne
sub
pop
mov
mov
mov
in
insl
mov
fdivrl
xchg
loop
outsl
xchg
clc
hlt
mov
jle
push
or
dec
push
cltd
daa
cwtl
jecxz
or
loop
push
pop
fs
divl
jge,pt
pop
in
lock
push
mov
add
das
cmp
mov
adc
jle
rcrl
pop
adc
mov
xor
mov
rolb
sub
js
pop
int3
sbb
xlat
enter
adc
add
sub
xor
pop
arpl
sahf
push
dec
push
gs
imul
dec
hlt
adc
stc
shll
add
jae
sub
aas
ss
sti
mov
addr16
insb
jb
call
or
mov
cs
in
jecxz
fs
cld
sub
mov
add
and
popa
jl
stc
and
lcall
mov
movsb
sub
mov
cmp
icebp
pop
imul
or
xor
mov
out
add
mov
sbb
iret
notb
sub
neg
fs
jo
aam
loope
sub
xor
xor
and
jge
push
pop
enter
das
jo
scas
add
or
jmp
dec
xlat
and
sbb
jmp
data16
fidivrl
shll
mov
pop
insb
mov
sbb
jnp
rcll
mov
inc
enter
jmp
push
add
aaa
dec
add
mov
cmp
add
mov
sub
mov
push
pop
sbb
inc
mov
movsl
inc
aad
pusha
mov
dec
jns
add
or
mov
fldcw
ljmp
add
mov
push
mov
int3
loop
add
jecxz
push
fisubrl
lds
fstps
pop
pop
xchg
stos
cs
jge
addl
xchg
outsl
or
icebp
sub
inc
data16
adc
xor
xor
or
cmp
pop
addl
jo
std
sbb
sbb
jae
in
add
mov
inc
xor
mov
test
nop
adc
inc
mov
jecxz
ja
xchg
ficompl
in
insl
jns
pop
mov
cmp
mov
mov
dec
fidivrl
jae
outsl
enter
das
jnp
cs
push
scas
pop
push
xchg
in
dec
xor
mov
jae
adc
jl
lea
lret
and
lcall
inc
cmp
mov
jle
mov
addl
inc
push
jne
fs
aas
mov
enter
aad
mov
mov
mov
in
faddp
push
hlt
sahf
xor
jmp
inc
mov
push
mov
lock
mov
mov
pop
xchg
fs
sbb
add
dec
pusha
push
ljmp
sti
cmp
xchg
ljmp
cs
shl
add
jge
test
ja
loop
dec
push
mov
xor
fistps
scas
and
int3
jne
mov
cmc
push
mov
mov
mov
jne
push
lods
sbb
inc
fwait
iret
orl
mov
loop
inc
pop
bound
enter
pop
enter
jl
pop
fucomp
mov
int
sti
push
push
xchg
js
adc
ret
in
pusha
cld
aad
jg
mov
dec
and
push
mov
ret
into
inc
jbe
jae
mov
jbe
cmp
mulb
ds
dec
pusha
sub
mov
push
sub
fsub
sarb
enter
inc
lods
aam
sbb
cli
add
add
cwtl
nop
sarb
fbld
mov
mov
cmp
sbb
in
inc
lret
jg
push
jbe
mov
call
shl
pop
aam
roll
sti
jne
pop
sbb
sahf
sbb
dec
adc
popf
jb
sbbb
and
nop
and
fsts
push
sub
lret
scas
cmp
movsl
sar
test
repnz
and
mov
jecxz
or
jo
jmp
or
mov
pop
insl
push
adc
lcall
cld
add
pop
mov
jbe
pop
lcall
mov
jnp
add
mov
pop
test
lahf
jne
or
cmc
cmp
sbbl
dec
mov
nop
dec
mov
fistps
mov
jb
push
ss
lret
mov
sub
test
repnz
add
mov
adc
and
inc
jmp
out
jne
lret
std
push
xchg
enter
jae
mov
sbb
push
push
out
mov
pop
hlt
cmpsb
je
sub
shl
dec
stos
int
sub
out
mov
adc
push
dec
adc
xchg
orl
out
xchg
ret
mov
adc
pop
push
les
pop
addb
dec
adc
pop
jecxz
xchg
mov
mov
nop
ret
xchg
and
dec
sahf
icebp
mov
lcall
pushf
mov
jg
mov
inc
adc
in
sti
imul
sub
imul
hlt
nop
sbb
inc
push
arpl
xor
pop
enter
movsb
sub
pusha
adc
mov
jne
lods
addl
movsl
push
add
es
mov
dec
mov
insb
bound
push
notb
sub
jle
sti
or
pop
call
add
roll
sub
in
pusha
imul
inc
sub
dec
mov
js
hlt
adc
inc
and
cld
scas
leave
idivl
adc
push
or
imul
mov
push
scas
imul
pop
stc
pop
out
cmp
xchg
adc
inc
pop
jne
mov
adc
aad
mov
mov
filds
daa
test
jmp
adc
mov
shll
xorl
inc
sub
setae
popf
repz
pop
test
and
loope
xchg
lea
aas
in
aad
fimuls
mov
lahf
in
test
add
enter
dec
pushl
push
inc
lock
movsb
shlb
inc
sub
inc
mov
adc
outsl
adc
add
push
xor
push
fisubs
push
fwait
cmpsb
inc
or
cld
pop
cli
movsl
nop
int3
fs
das
int
add
add
pop
pop
fbld
ret
imul
inc
dec
add
cltd
mov
push
loope
pusha
leave
mov
jle
cwtl
pusha
mov
into
shll
add
pop
adc
mov
cmpsl
cli
rcrl
adc
ret
jge
adcl
enter
andl
pop
rcrl
sti
cs
pmulhuw
lcall
cmpsl
push
fisubl
loop
cld
dec
mov
daa
jmp
ljmp
adc
jbe
mov
imul
je
mov
aad
adc
add
and
fdivr
cmp
xor
inc
dec
mov
inc
cwtl
jl
rorl
test
dec
cmpsb
leave
push
out
lds
xor
rolb
sub
jb
ret
cmpsb
cwtl
movsb
push
pop
sub
or
jle
xchg
leave
scas
rolb
out
dec
mov
loopne
repnz
mov
out
outsb
sbb
hlt
in
pop
test
adc
and
xchg
xchg
dec
or
pop
mov
shlb
or
mov
or
jne
lods
sub
inc
xchg
push
add
cli
fisubrs
in
mov
pop
bound
aaa
lret
cmpsl
mov
mov
negl
int
dec
jno
or
jecxz
fistl
inc
daa
ror
orb
shl
lcall
fisttps
repz
xchg
and
add
dec
inc
rolb
inc
mov
xchg
imul
lods
push
shl
and
sarb
and
adc
xchg
sbb
inc
mov
sbb
mov
xchg
sbbb
shrl
xor
mov
mov
sti
divb
jne
sbb
jne
mov
sahf
sbbb
xchg
adc
xchg
imul
sti
inc
cli
shrb
call
das
fbstp
adc
jne
xor
mov
enter
fists
pop
jle
icebp
cmp
or
or
ret
loop
push
sbb
in
adc
mov
ljmp
leave
pop
cmpsl
mov
std
sbb
neg
jg
nop
pop
xchg
es
or
xlat
fstpl
pusha
jp
mov
test
sbb
notb
or
out
cld
out
fdivs
pop
fidivrl
add
sti
dec
sbb
sub
add
mov
loopne
jge
sbb
xchg
mov
int
xchg
scas
sub
xorb
push
cwtl
mov
enter
daa
imul
mov
push
jne
push
ljmp
and
inc
lahf
mov
insl
xlat
adc
push
dec
mov
cmpsl
scas
scas
push
es
inc
mov
mov
out
filds
out
jmp
push
cwtl
mull
dec
sbb
push
adc
shl
inc
mov
iret
mov
mov
out
sub
adc
insl
mov
aas
xchg
movsl
adc
call
mov
enter
nop
pop
das
pusha
into
mov
incl
inc
mov
xor
jmp
popa
in
xchg
pop
cmpsb
or
sub
loope
jmp
adc
push
pop
adc
std
mov
into
leave
add
test
shrb
or
sub
xlat
imulb
sbb
notb
xor
and
xchg
loop
mov
cmpsb
pop
notl
fcomi
pop
das
push
and
notl
movb
dec
sbb
pop
repnz
scas
dec
inc
lea
ret
xchg
ret
jns
enter
imul
sub
dec
leave
pop
les
hlt
adc
sbb
rorl
xchg
xlat
int
js
scas
imul
jb
inc
lock
mov
shl
subl
push
mov
adc
sub
pop
ja
mov
shl
pop
stos
mov
ret
daa
push
push
into
push
xlat
cwtl
call
es
pop
jbe
adc
cmc
xchg
pop
sub
cmp
inc
lock
leave
inc
adc
gs
into
cmp
sbb
es
je
cmp
iret
mov
movsb
add
jp
pop
sbb
mov
dec
popa
dec
lods
aas
ret
test
mov
lret
mov
stc
push
adc
mov
adc
arpl
mov
nop
roll
xcrypt-ofb
cmpsl
sub
mov
hlt
cmc
cmpsl
pop
rorl
mov
ret
push
stc
rorl
inc
rcrb
sbb
cmp
testb
out
xchg
es
decl
cmp
in
addr16
rcl
loope
lods
scas
sbb
mov
dec
movl
in
lret
add
mov
das
mov
mov
mov
pusha
mov
pop
xor
call
add
mov
inc
push
fcompl
adc
mov
popa
shlb
add
xchg
sub
mov
or
xchg
ret
dec
sub
out
cmp
movsl
pushf
lods
jo
mov
popf
jmp
pop
jmp
push
fndisi(8087
xchg
enter
loop
sarl
xor
sub
int
sarl
jo
clc
xor
decl
lods
cmp
lcall
inc
fisttpl
jbe
cmp
test
xlat
mov
push
xor
sbb
cld
dec
sub
xchg
aas
pop
and
cs
adc
xlat
les
movb
inc
add
stos
inc
jns
popf
negl
leave
mov
add
mov
push
cwtl
dec
jne
clc
xchg
mov
addr16
push
fdiv
push
jecxz
cs
cltd
into
adc
inc
in
or
cmp
cmpsb
jmp
arpl
pop
jl
rcrb
icebp
nop
inc
add
movsl
enter
addr16
adc
lods
sub
retw
adc
rorl
hlt
cmpsl
lcall
inc
xchg
lds
mov
fwait
pop
stos
mov
jle
mov
sbb
push
xchg
test
mov
movsb
ret
add
aaa
xchg
xchg
pusha
movsb
mov
out
adc
cmp
stos
in
stos
decl
xorl
cmpsb
lcall
out
mov
inc
sahf
push
jns
jmp
cwtl
les
jne
cltd
mov
jbe
loop
jns
jecxz
mov
pop
outsb
ret
fisubs
mov
sub
lds
notl
mov
insb
stos
cwtl
mov
push
add
inc
das
das
adc
mov
mov
and
test
mov
push
shr
xchg
xchg
ficoms
shl
shr
shll
scas
mov
or
repnz
les
mov
addr16
jmp
pushf
pop
and
add
enter
cmp
sbb
in
mov
fadds
cmpsl
mov
sti
movsb
aad
std
cmp
xlat
addr16
xchg
adc
adc
mov
fcoms
stos
into
mov
mov
sbb
or
sub
hlt
or
add
jne
aam
test
cmpb
adc
jns
xchg
cli
lahf
sbb
push
push
push
out
xor
inc
sub
loopne
hlt
adc
mov
fdivrl
insb
fcmovu
outsl
out
enter
aas
xor
insl
lahf
dec
sbb
xchg
loope
mov
es
std
out
mov
mov
sub
and
gs
ljmp
inc
jo
cmpsl
inc
mov
cmp
jp
aas
cmpsl
mov
cltd
jno
pop
cmp
repnz
adc
movsb
jb
mov
test
sub
rcr
orb
pop
xlat
hlt
or
call
mov
mov
mov
mov
test
xorl
aam
sbb
inc
sbb
lock
pop
ds
test
lret
and
dec
sub
xor
pushf
add
pop
js
sub
or
sahf
cmpsb
dec
jo
repnz
mov
cmc
inc
iret
outsl
sub
inc
insl
mov
daa
pushl
roll
in
and
jp
cmp
cltd
mov
ja
mov
in
pop
shll
scas
or
aaa
ficomps
add
sub
js
or
add
aaa
enter
xchg
mov
jle
into
pop
pop
adc
cld
cmp
inc
push
aas
push
divps
mov
mov
ret
cli
aam
mov
aaa
pop
pop
adc
movsb
repnz
xchg
dec
cmp
cli
lods
fldenv
fcmovne
out
test
pop
in
movsl
xor
jg
loop,pt
cmp
mov
xor
faddp
mov
stc
xchg
dec
insl
out
leave
push
pop
mov
sbb
push
cwtl
jecxz
ljmp
in
cmpsb
inc
pop
jno
sti
dec
out
add
in
fsubrs
or
adc
push
jne
cmp
jg
mov
loopne
and
xchg
roll
pop
xorb
push
cmp
rorl
lock
ss
out
mov
push
adc
add
cmp
xchg
xchg
cld
test
into
fs
loop
cld
out
imul
sub
pushf
mov
mov
cmp
cmp
flds
pop
and
call
adc
inc
jne
loopne
inc
add
and
icebp
imul
sub
cmp
xor
data16
sbb
inc
mov
bound
insl
inc
dec
jg,pt
loopne
or
hlt
jmp
imul
mov
insl
or
adc
adc
out
sarb
sti
scas
lods
add
sbb
lds
and
aad
shrl
loope
hlt
lret
cwtl
mov
mov
sbb
inc
es
shrd
jb
fdivl
cs
data16
mov
mov
aaa
ljmp
std
notb
enter
decl
addb
add
adc
lcall
ss
les
data16
mov
loopne
int
dec
inc
or
aas
repz
push
ret
jnp
inc
nop
stos
mov
and
fsubp
mov
adc
inc
mov
rolb
jb
add
hlt
loope
mov
cwtl
pop
stos
sub
or
inc
jo
push
inc
pop
stos
scas
insb
imul
lcall
mov
xor
cmpsl
dec
mov
jle
movsl
js
in
cmpsl
mov
adc
or
push
xchg
cmc
dec
loope
pop
imul
lds
mov
popf
jp
cmp
xchg
rol
and
or
sub
fdivs
add
data16
pop
fidivl
popf
jg
jmp
add
testb
popf
add
loop
pushf
les
sub
xchg
test
mov
pop
cmp
rol
cli
cld
mov
jne
scas
pop
dec
jmp
fcoms
jg
pop
jmp
mov
sti
dec
add
loop
jne
pop
fwait
cmc
push
ret
dec
inc
inc
iret
clc
or
mov
pop
xlat
insl
jge
stc
xor
and
sbb
fcompl
std
or
scas
add
lret
lret
xchg
jne
mov
leave
pop
int
mov
pop
in
push
repz
xor
pop
and
and
jle
test
inc
sbb
jb
repnz
mov
mov
dec
jnp
push
outsl
popa
mov
testb
shlb
cmp
insl
sti
hlt
mov
mov
stos
or
fcomps
inc
mov
add
cmp
shl
pushf
rorb
hlt
aas
and
xor
out
jno
sub
ss
in
jo
outsl
push
lahf
xor
push
sub
xlat
push
ss
xchg
popf
pop
repz
fisttps
out
enter
js
inc
push
dec
mov
fimuls
popf
out
or
pop
insl
or
mov
pop
fnstenv
aad
outsb
sub
hlt
mov
or
sbb
lods
gs
ds
push
popa
mov
pop
or
mov
andb
jg
inc
pop
inc
sub
outsl
add
nop
pop
inc
pusha
ret
mov
pop
incb
lock
push
xchg
xor
sahf
inc
in
mov
or
mov
add
xor
push
test
push
test
shrb
push
jge
pop
stos
mov
xchg
jae
dec
jns
pop
lea
andl
mov
inc
je
or
les
cs
and
in
jne
inc
insb
adc
mov
cmp
mov
cld
stos
iret
cmp
call
pop
adc
icebp
mov
sarb
dec
jae
test
enter
mov
sub
mov
sti
je
test
pop
or
rolb
into
pop
xlat
outsl
movsl
cwtl
xchg
int
dec
mov
pop
cmp
stos
push
push
rclb
addl
std
int3
sbb
xchg
insl
xchg
sub
cltd
mov
mov
stos
pop
or
cmp
out
ja
in
jne
mulb
sbb
xor
xchg
or
sbb
mov
fwait
and
fldcw
fldl
jge
push
adcl
push
mov
fnsave
sub
cmp
pop
repz
xor
add
dec
sub
mov
and
xchg
or
das
fists
outsl
mov
inc
lds
mov
jg
movsl
shll
add
cli
stos
lret
mov
arpl
arpl
in
lods
dec
adc
inc
imul
bnd
push
mov
movsl
sbb
adc
mov
fsubr
leave
xor
push
jmp
push
mov
xorb
pop
incb
or
dec
jne
les
in
push
add
in
and
dec
dec
mov
imul
cld
mov
stos
pop
mov
and
pop
pop
mov
inc
or
roll
movsb
jl
push
add
cmpsl
or
mov
int
clc
testb
add
popf
adc
inc
in
xor
je
mov
hlt
ja,pt
es
xchg
push
dec
hlt
cmp
mov
dec
add
inc
and
ss
push
fcoml
hlt
xchg
xchg
loopne
jl
dec
push
cwtl
aas
xchg
mov
stc
adc
aad
js
and
add
aas
jns
lret
adc
dec
loope
inc
rorl
jp
fwait
pop
ror
xor
pop
in
stc
sub
mov
int
std
push
and
or
jmp
inc
mov
sub
inc
iret
das
dec
outsl
enter
pop
cmp
inc
cmp
incb
faddp
cmp
lods
adc
leave
dec
mov
out
fldt
mov
push
mov
int3
es
les
sub
cltd
sbb
mov
adc
jmp
lahf
fiadds
rorb
scas
sub
cmc
addr16
mov
sbb
adc
jle
cwtl
daa
mov
inc
adc
lds
push
cmc
dec
stc
pushf
cld
shrb
mov
fstps
ret
inc
in
push
dec
fwait
add
and
adc
mov
fisubs
fldcw
jb
mov
cmpsl
pop
popf
fdivr
jle
imul
call
movsl
mov
test
mov
mov
sub
je
push
push
mov
lock
stos
mov
in
xor
sbb
ret
mov
dec
cmpsl
dec
or
pop
dec
shlb
pop
xor
repz
mov
jne
sbb
sub
fnsave
addb
fdiv
pop
jmp
add
aas
sbb
push
dec
adc
movsb
inc
inc
mov
xor
mov
iret
nop
push
mov
in
or
xor
add
and
dec
cmpsb
adc
lcall
movsb
xchg
lock
push
and
xor
adc
mov
xchg
and
stos
ret
jle
pop
hlt
sbb
jbe
sub
jo
movsl
repnz
nop
sub
pusha
inc
dec
js
lock
adc
push
mov
hlt
repz
dec
dec
mov
popf
out
fwait
sub
outsl
fisttpll
jmp
jge
les
sbb
es
add
jnp
pop
mov
jge
push
test
pop
stos
dec
scas
mov
je
and
cli
fsubp
sbb
fldl
mov
dec
xchg
pop
xchg
loop
cmpsl
add
cli
stos
imul
loopne
hlt
push
movsl
dec
fsts
add
or
fldenv
inc
leave
push
jb
ret
lock
nop
add
lahf
sbb
pop
cwtl
mov
into
xor
pop
inc
mov
loope
cmp
push
ljmp
lret
pop
out
jo
sbb
mov
mov
movsl
fsts
push
xchg
faddl
out
pop
jmp
int3
mov
jbe
pop
add
loope
orl
inc
adc
push
shll
inc
mov
insb
mov
sub
jecxz
mov
rolb
lock
pusha
mov
sahf
inc
add
jne
pop
push
inc
hlt
xchg
push
idivl
add
push
push
scas
sub
bound
or
mov
add
mov
cld
sti
imul
inc
fbstp
gs
ret
in
jns
rcll
jl
sbb
int3
imul
int3
xchg
sbb
out
subl
jne
stc
movsb
mov
cwtl
inc
in
hlt
and
mov
mov
and
add
add
mov
ss
leave
nop
dec
push
scas
syscall
and
loop
mov
outsb
push
pop
out
lahf
cmpl
test
push
imul
cld
es
xchg
dec
aas
mov
xchg
add
pop
mov
fs
int
cmp
and
nop
in
jne
xchg
mov
in
xchg
mov
mov
popa
dec
and
movsb
add
dec
or
inc
mov
scas
and
or
hlt
add
das
int3
test
dec
repnz
inc
ror
cmp
orl
jge
mov
out
xor
pop
lret
stos
xor
pop
pusha
dec
mov
sub
gs
jnp
out
arpl
mov
iret
pushf
push
or
popf
add
ss
jmp
pop
dec
cli
pop
cmp
inc
fists
fistpll
in
xchg
jge
pusha
pop
gs
mov
mov
mov
movsl
shll
inc
hlt
negb
or
sub
arpl
rcll
sub
leave
push
imul
jge
nop
adc
out
sti
inc
add
sbb
mov
pop
sbb
sarl
call
mov
addl
mov
icebp
jno
jnp
shll
aad
ja
sarl
xchg
add
repnz
ret
sub
pop
cld
xorb
jne
imul
rclb
push
incb
and
jmp
test
nop
sahf
shll
scas
into
mulb
jle
jg
fadd
mov
cmc
sub
mov
ret
dec
cmp
xchg
scas
xchg
mov
cld
mov
xorb
xor
jecxz
xor
xchg
fisubrs
xchg
ret
add
das
mov
cmc
or
dec
aas
inc
lock
decb
pop
int
dec
sbb
push
loop
arpl
fmuls
addr16
aas
mov
add
movsb
mov
dec
insb
dec
pusha
mov
cmp
test
ret
repnz
inc
test
sbb
out
push
mov
lock
mov
lock
movsl
cs
in
inc
adc
sarl
pop
loope
jne
jns
xor
mov
mov
inc
mov
jne
out
sti
jo
pop
addb
popa
in
in
lret
cmp
jo
dec
in
or
mov
push
pop
cltd
test
push
xchg
sub
dec
test
jne
test
lock
cmpsb
sub
pop
mov
xor
mov
mov
movsb
xchg
hlt
in
and
push
xchg
sbb
jbe
sub
repz
faddp
push
das
nop
movsb
sahf
mov
mov
insl
pop
mov
push
push
mov
jl
sbb
mov
test
mov
pmaxsw
jmp
gs
sbb
cmc
loope
mov
pushf
sbb
inc
cs
pop
mov
rcl
arpl
mov
dec
cmc
add
pop
push
add
out
add
cmpsb
adc
xchg
jg
out
and
mov
pusha
out
push
lea
hlt
or
jle
addb
inc
lock
sbb
jp
pop
dec
xor
hlt
mov
test
xchg
or
or
fildl
sub
rcl
mov
and
inc
xchg
mov
jge
push
fiadds
mov
mov
jle
jp
adc
jl
test
sbb
outsl
or
jg
cmp
stos
adc
dec
imul
imull
cs
stc
mov
add
stos
mov
jl
das
js
jo
loopne
fmul
pop
int3
and
mov
xor
adc
cld
addb
clc
xlat
test
dec
frstor
in
xor
xor
addl
or
into
pop
sub
jb
sahf
data16
fists
hlt
pushl
bnd
push
adc
xchg
inc
adcb
push
inc
into
cmp
dec
add
loop
sub
divb
jne
and
xchg
das
sbb
or
aaa
test
sbb
shl
fsts
mov
sti
shlb
call
add
jecxz
jl
les
sbb
stc
and
push
mov
leave
out
nop
and
mov
ficomps
int
das
cli
or
addb
shl
aad
adc
mov
mov
mov
pop
jg
cli
xchg
enter
xchg
mov
test
xorl
xor
fldcw
mov
and
mov
js
mov
dec
or
push
je
sbb
pusha
mov
cmp
pop
mov
push
add
push
bound
je
jne
ror
cmp
notl
sbb
pop
outsb
push
push
loop
lods
jge
inc
leave
or
dec
mov
jne
mov
sbb
and
ljmp
fcoml
or
jp
mov
pop
mov
jl
into
clc
inc
rolb
stos
jne
pop
loope
imul
mov
sti
fwait
loope
mov
test
test
fsubrs
cmpl
loopne
adc
inc
jl
mov
stc
mov
inc
in
fwait
add
sbb
inc
fcompl
pop
loope
sub
push
cmp
jg
sbb
cmp
jae
ret
in
int3
add
mov
and
inc
shl
pop
mov
xchg
fstpt
sbb
jb
lods
xchg
or
push
outsl
cmp
in
movsb
xor
or
test
mov
test
push
pop
imul
mov
and
push
shl
call
jns
inc
rcll
add
ficoml
sbb
mov
test
mov
push
int3
cs
pusha
and
xor
call
pusha
scas
inc
mov
int3
xchg
les
mov
inc
cmpsb
push
call
ja
aas
pop
cltd
mov
in
or
in
mov
pop
lea
jl
ljmp
mov
aam
or
repnz
xchg
sbbb
inc
add
in
ja
in
bnd
in
stos
dec
mov
xchg
rcrb
xchg
sbb
sahf
test
add
jp
repz
add
cwtl
mov
std
hlt
aaa
mov
xchg
push
adc
mov
pop
pushf
jecxz
sbb
pop
lret
jne
sbb
sbbl
mov
mov
xor
push
test
mov
ret
nop
cmp
mov
mov
enter
rcrl
or
lret
hlt
mull
mov
popl
aam
jle
sub
xchg
or
mov
sbb
mov
push
xor
push
arpl
pop
rcll
lahf
lea
test
loop
xor
mov
mov
cli
gs
sbb
fwait
out
sbb
mov
sbb
pop
fisubl
inc
adc
addl
xchg
dec
loop
lret
ficoml
or
icebp
or
fsubl
mov
push
scas
lods
mov
xorb
cmp
mov
jecxz
ret
cs
jo
push
addb
sbb
scas
enter
inc
xor
fisttpll
sub
aas
pop
inc
cld
jo
stos
sbb
and
cmpsl
outsb
out
bound
or
fs
fiaddl
dec
cmp
add
jecxz
repnz
hlt
jecxz
test
jmp
push
cmpsb
mov
fldl
mov
pop
dec
inc
jbe
lret
push
cmp
or
xor
arpl
adc
inc
ffree
sbb
xor
push
into
ss
int
dec
xchg
test
pop
xor
mov
in
xchg
push
pop
push
mov
xchg
cwtl
orl
test
gs
lods
xor
sbb
xchg
cmp
lcall
lahf
roll
and
arpl
inc
pushf
call
cmp
fiadds
jo
sub
shl
cltd
cmpsl
aas
cwtl
xor
jmp
jle
xchg
cs
fisubs
dec
js
xchg
push
popa
sub
mov
inc
mov
push
hlt
orb
insb
dec
add
int3
push
inc
xchg
jb
mov
fwait
pop
mov
mov
aas
dec
inc
sub
outsl
cwtl
insl
jne
add
mov
dec
ret
ljmp
adc
mov
test
sub
sub
sub
andl
in
mov
enter
pop
adc
test
push
pop
andl
and
cmpsl
test
lods
inc
dec
mov
out
das
adc
mov
jmp
adc
xchg
out
shrl
jle
pop
dec
int
jle
enter
push
adc
mov
out
jl
in
out
jmp
cmp
mov
mov
mov
lcall
push
icebp
mov
mov
clc
xorb
iret
mov
lds
popf
sbb
test
adc
test
outsl
sbb
cltd
pusha
xchg
and
test
imul
jp
add
stc
decl
dec
imul
mov
js
fwait
sub
dec
cmpsb
pop
repz
adc
hlt
xor
or
push
fiadds
aad
pop
sub
push
xlat
dec
add
xchg
lods
popl
cmp
jno
pop
movsb
push
add
adc
mov
inc
sub
mov
movsl
push
jle
add
cmp
addl
bnd
popf
push
or
cmp
aad
test
mov
or
sarb
add
add
stc
mov
jmp
lahf
and
popf
lods
push
mov
lea
push
std
xchg
leave
sahf
mov
sub
jne
dec
adc
and
push
hlt
jno
imul
push
scas
xchg
movsb
mov
push
loope
sub
jl
jg
imul
aam
or
ret
inc
out
jb
push
sahf
stos
cwtl
popa
enter
lds
nop
jle
sbb
imul
pop
sub
or
das
mov
fisttpl
push
push
push
pop
jg
ds
adc
add
ja
ss
mov
mov
mov
mov
jge
rcrl
fbstp
in
sub
xchg
pop
jb
movsl
enter
xor
dec
mov
inc
inc
add
cmp
arpl
pop
incb
xchg
aas
and
and
lock
in
std
mov
xchg
xchg
dec
ror
cs
pop
into
jl
mov
lret
pusha
inc
mov
es
xchg
gs
cmp
addl
mov
ljmp
outsl
test
mov
repnz
sbb
jbe
inc
sub
movsb
divl
sub
pop
rcrl
add
repnz
pop
inc
pop
pop
mov
jecxz
lea
repz
sub
in
fisttpll
mov
adc
outsl
pop
out
leave
int
pop
andb
pop
xchg
cmp
out
andb
jnp
ret
sti
push
in
notl
cmpsl
jmp
cmpsl
rep
inc
push
add
ljmp
pop
fwait
mov
xchg
loope
in
add
hlt
add
test
ror
sarb
mull
stc
hlt
mov
movsl
fidivrs
pop
fildll
aas
insl
int
lods
cwtl
negb
xor
cwtl
cmp
hlt
cmpsl
cmc
jns
xchg
rolb
enter
jge
push
sbb
out
aad
cli
jmp
xchg
mov
and
xor
repnz
mov
popa
sbb
add
enter
push
push
int3
cs
or
push
fidivrs
sahf
into
xor
inc
mov
dec
out
out
lret
sbb
test
cmpl
cmc
outsb
dec
xor
popf
lcall
mov
jle
mov
icebp
mov
cmc
sub
mov
mov
lods
test
aas
test
mov
xor
aad
inc
dec
and
sbbl
dec
lea
sub
lahf
enter
jg
nop
aas
fadds
std
pop
sbb
sub
aad
adc
sbb
mov
out
adc
sbb
ja
add
pop
sbb
iret
pop
out
sti
pop
mov
jmp
xchg
insl
cltd
andb
push
pop
into
pop
mov
sub
je
dec
stc
xchg
sbb
add
subb
inc
or
cwtl
inc
div
sbb
jl
add
dec
andb
stc
or
pusha
imul
push
jne
ss
std
push
sub
sub
imul
or
adc
std
imulb
dec
dec
sub
push
xchg
inc
xor
fimuls
mov
jno
ficoms
sub
adc
out
fwait
mov
mov
std
daa
arpl
inc
adc
inc
lahf
in
xchg
and
or
andb
dec
xchg
push
dec
jle
mov
roll
ja
rorb
popa
scas
xchg
bound
and
sbb
pusha
sbb
popa
test
fcoml
sbb
or
lret
out
repnz
or
dec
fs
cs
gs
dec
bound
push
hlt
js
jmp
inc
or
xor
sub
int
stos
cwtl
pop
mov
leave
bound
pushl
or
bound
jb
pop
pmuludq
jle
jmp
mov
rcr
cmp
ret
int3
ss
xchg
push
stc
mov
fidivs
jle
pcmpgtw
in
push
faddl
sti
add
or
and
bound
inc
push
pushf
lods
lock
dec
repnz
adc
das
movsb
insb
dec
sub
aam
jbe
sub
sub
ljmp
repnz
stc
jge
jne
lahf
pop
or
inc
shll
frstor
inc
nop
inc
std
fsubrp
xor
inc
mov
xchg
xchg
jl
enter
roll
adc
push
add
dec
js
adc
push
es
xchg
sbb
xchg
mov
test
jns
dec
mov
testb
and
enter
xchg
into
sub
test
or
jge
xorb
shlb
sub
mov
lock
rcr
dec
push
adc
in
inc
ds
jmp
in
adc
jle
push
stc
nop
movsb
scas
push
push
dec
test
pop
adc
fnsetpm(287
cmpsb
imul
movsl
mov
cmp
in
into
ret
sub
movsl
sub
aam
aam
push
add
adc
or
cmpsl
and
jne
test
out
loop
std
lods
flds
push
xchg
fsubs
sub
daa
mov
add
adc
nop
push
pop
sarb
cld
roll
mov
push
es
mov
jo
mov
jl
cwtl
loopne
xor
mov
imul
scas
xchg
sbb
into
mov
push
pop
or
dec
sub
jge
in
sbb
lret
cmpl
loopne
lcall
inc
and
orb
push
mov
call
jmp
enter
cs
mov
in
fildl
aaa
cmp
ret
xchg
fs
sbb
jnp
cs
ljmp
icebp
in
push
enter
jle
xchg
push
sar
mov
xchg
leave
popf
mov
lret
dec
cmp
shl
cltd
xor
xchg
shl
cmp
add
push
mov
int3
mov
adc
or
adc
add
fcompl
in
push
repz
add
mov
xchg
ja
cmp
fcos
dec
hlt
ror
pop
or
jns
hlt
xchg
mov
enter
push
jo
leave
in
xchg
mov
bound
sbb
lea
popa
dec
inc
jno
adc
lahf
mov
mov
mov
mov
ret
push
sti
icebp
jbe
movsb
insl
hlt
daa
jl
add
sbb
mov
push
mov
fstps
mov
int
hlt
or
push
xor
xlat
addb
add
outsb
inc
mov
sub
pusha
mov
movsl
ds
sbbb
cld
dec
hlt
xchg
sbb
imul
imul
xchg
aam
rcr
cmp
dec
jmp
leave
mov
addr16
ljmp
xorb
out
in
cmp
hlt
aam
jle
leave
rol
das
jnp
in
push
hlt
dec
mov
adcb
inc
jg
mov
in
out
test
jg
xchg
jne
es
add
mov
and
inc
jo
push
xchg
inc
add
adc
addl
repz
and
fstpl
ficoms
mov
add
push
jg
stc
pop
sub
push
adc
jmp
pop
push
push
jg
mov
es
out
pushl
pop
mov
hlt
sbb
ret
ja
cmp
inc
xchg
lcall
pop
jge
sti
out
xchg
test
dec
xor
stos
imul
mov
or
orb
std
clc
stc
lret
je
mov
bound
xchg
push
push
mov
test
testl
mov
push
jno
test
cmpsl
lret
mov
jae
mov
pop
cs
fdivs
stos
pop
lock
je
es
inc
fld
inc
arpl
pop
das
js
iret
bound
pop
pushf
sbb
les
xchg
fcompl
aas
jnp
daa
and
hlt
aaa
movsl
and
sub
mov
arpl
add
pop
sbb
jge
pop
data16
insb
or
mov
jl
inc
mov
movsb
dec
mov
adc
sbb
sub
imul
repz
sub
clc
into
cmp
fisttpll
shll
sti
movsl
xor
inc
add
jns
pop
pusha
aas
leave
rcr
les
mov
or
lods
pop
stos
mov
int3
sarb
lods
shrb
in
jne
int
ret
test
add
mov
and
pop
andb
or
ret
sub
push
mov
mov
or
lahf
hlt
stos
mov
out
adc
jne
ficoms
pop
jg
sub
movsl
adc
cmpsb
pop
adc
jb
xor
cmpsl
mov
xchg
test
and
mov
jne
inc
divl
loop
or
cs
add
cld
pusha
pusha
fsts
cmp
sbb
fdivrl
hlt
dec
insb
leave
std
loop
xchg
fstpl
adc
mov
sbb
aaa
inc
repnz
mov
mov
or
and
add
fucomip
and
mov
mov
int3
xor
mov
cmc
add
jmp
mov
inc
cli
subl
or
jecxz
jmp
mov
hlt
jnp
sbb
sbb
fsubrl
call
test
xchg
repz
lods
push
pushf
xchg
xor
ds
mov
pop
or
mov
insb
pop
inc
out
inc
les
arpl
and
jne
dec
cld
filds
mov
cli
imul
xchg
xchg
enter
dec
inc
daa
std
lock
scas
aad
pushfw
outsl
or
mov
insb
movsl
dec
rorl
add
xchg
aas
cli
or
movsb
stos
into
cmpsl
test
sub
sub
pushf
fucomp
pop
inc
pushf
xor
jns
mov
push
adc
rolb
notl
inc
leave
pop
popa
fidivs
stc
push
call
mov
in
loop
dec
movsb
push
sbb
dec
push
inc
hlt
les
lret
or
gs
mov
adc
sbb
mov
lret
loope
sbb
test
cltd
test
adc
jne
iret
lcall
dec
inc
inc
mov
into
inc
inc
sub
push
mov
jge
loopne
push
stc
dec
jle
xorb
scas
ja
cmc
xchg
shll
mov
stos
ljmp
jne
mov
mov
lret
fwait
cmpsl
xchg
mov
lret
fsubs
add
dec
lahf
adc
out
mov
or
outsl
sub
nop
in
test
mov
and
push
or
and
mov
cmp
fcoml
hlt
jg
and
in
cltd
push
push
rolb
pop
xchg
sub
fists
fnstenv
and
out
into
movsl
call
cmp
sub
shl
cmp
jnp
dec
outsb
jmp
fidivrs
dec
mov
je
or
mov
lret
dec
dec
add
cmp
lock
pop
sbbl
sub
push
push
sti
dec
mov
mov
pop
sbb
stos
cwtl
xor
fcos
sbb
sti
jnp
loopne
jns
mov
sub
mov
div
sub
cmpsl
xor
pusha
test
mov
add
inc
enter
inc
enter
xchg
es
mov
mov
roll
adc
mov
stos
jg
cwtl
aas
inc
push
sbb
das
faddl
fwait
jge
roll
mov
pop
sti
dec
scas
aad
cmpsb
and
xor
sub
and
jle
xchg
rcrb
lret
inc
adc
xor
xor
stos
ficomps
lret
fdivrs
inc
and
mov
unpcklps
push
scas
sub
in
xchg
xor
inc
jne
icebp
push
ret
loopne
mov
scas
adc
add
dec
sub
xchg
cmpsb
mov
les
scas
pop
enter
adc
mov
mov
sbb
shl
xorb
dec
or
scas
mov
js
xor
mov
fwait
adc
test
mov
popf
push
xchg
push
lcall
jb
test
jbe
mov
or
frstor
cwtl
gs
sahf
sbb
inc
cwtl
push
lods
pop
inc
mov
iret
sbbl
pop
imul
incb
mov
das
inc
pop
xor
mov
xchg
js
mov
xchg
dec
xor
sub
push
push
in
jne
cwtl
push
jle
dec
fsubrs
sub
stc
lret
dec
jg
inc
xor
adc
push
jecxz
adc
shrl
int3
sahf
pushf
mov
mov
jne,pn
faddl
jne
pop
mov
shl
fstpt
cmp
rorb
xchg
lods
lret
sub
jl
inc
push
xchg
std
inc
xchg
xchg
fwait
imul
das
xchg
or
stos
aaa
pop
mov
in
xor
outsb
sub
lret
fdivr
cmp
fcoml
jnp
out
aaa
scas
stc
mov
or
push
jmp
iret
add
xchg
xchg
sub
inc
push
fsubrs
jo
xlat
hlt
dec
mov
pop
pop
add
daa
add
andb
lcall
cmp
aas
fstl
lahf
cmpsb
jl
test
xor
fsubrs
cmpsb
jne
movsl
push
mov
stos
sub
inc
fwait
dec
xchg
gs
jp
push
loope
push
add
and
cmpsb
cmp
dec
sub
dec
imul
jge
and
jb
roll
gs
hlt
lahf
jl
insb
movsb
loope
mov
fsub
stc
shlb
rcrb
push
jbe
scas
call
test
dec
imul
push
rol
enter
and
mov
mov
pop
int3
jmp
out
nop
mov
mov
in
dec
sub
out
loop
xor
movsl
adc
mov
adc
cld
sarb
sti
fisubrl
mov
leave
data16
dec
cmc
scas
jle
mov
push
std
lods
jno
mov
mov
mov
jg
popa
jne
icebp
sti
lods
inc
xorl
cmp
sub
push
lahf
sahf
loope
leave
out
cwtl
stos
insb
xorl
leave
mov
jno
xor
sahf
lcall
xchg
cmp
mov
push
sbb
dec
shll
mov
jmp
in
mov
or
or
popf
cli
ljmp
add
loop
pop
pop
imul
sbb
sub
into
mov
in
popa
push
movsl
loope
hlt
xor
hlt
cld
add
mulb
mov
gs
xchg
sbb
mov
dec
inc
movsl
xor
pop
mov
out
aas
inc
lods
jmp
faddp
scas
aad
push
lahf
test
out
iret
int3
fmull
js
sbb
subl
mov
lds
test
or
div
jl
push
adc
pop
cltd
cmp
or
jnp
xchg
out
add
mov
bound
std
test
movsl
or
inc
shlb
sbb
scas
test
mov
adc
mov
and
push
in
push
xchg
std
xor
bound
in
das
add
pop
orl
sbbb
std
sbb
ret
mov
test
inc
daa
popa
dec
sbb
ljmp
and
push
popf
pop
fdivrs
movsl
and
sbb
or
arpl
push
aam
stos
out
addb
jge
sub
test
stos
lahf
mov
call
dec
cmp
shr
push
lea
popa
daa
dec
ja
sub
jg
sbb
insl
mov
in
call
push
aam
mov
bound
bound
fists
outsb
ja
jne
insl
cmc
xchg
std
adc
repnz
pusha
or
lea
lret
loopne
enter
mov
out
test
data16
mov
mov
jmp
mov
jbe
in
sti
or
xrelease
dec
mov
inc
movsl
xlat
stos
aam
add
andl
mov
mov
test
jne
aam
and
jmp
sub
cmp
test
xor
loop
or
daa
mov
dec
or
push
fistpll
mov
sti
cmp
push
mov
hlt
or
jg
sub
add
faddl
pop
push
loope
mov
sti
xchg
ss
jne
xchg
pop
and
shrl
jne
mov
repnz
push
imul
mov
xchg
hlt
fsts
in
loop
jne
push
mov
and
in
pop
scas
fldenv
mov
cltd
mov
fwait
pop
mov
lfs
and
xor
push
sarb
ljmp
test
movsl
cmpsl
jge
arpl
adc
insl
aam
notl
xchg
jne
cmp
fbld
mov
xchg
aas
xor
sbbl
xchg
pusha
dec
adc
shrb
cmc
das
jae
gs
imul
int3
mov
pusha
sub
push
into
mov
int
das
sub
les
cmpsl
or
jne
mov
hlt
push
movsb
into
sub
mov
sub
dec
stos
add
xorl
and
outsl
mov
pop
enter
outsl
lods
subb
int
push
sub
lahf
lret
pop
adc
jge
test
mov
imul
pushf
or
adc
jg
in
pusha
call
adc
jno
mov
jecxz
and
enter
cmp
je
jge
sub
jp
and
pushf
les
jns
cltd
inc
mov
mov
xor
adc
pop
add
adcb
fstl
and
mov
lds
fiaddl
popf
jle
xor
pop
add
int3
fwait
lock
insb
xchg
and
dec
loopne
nop
test
jnp
sar
lods
hlt
sbb
les
mov
adc
cmp
pop
out
lods
leave
fstl
iret
push
lret
test
dec
out
arpl
mov
out
jmp
and
dec
cmpsl
cmpsb
inc
test
cmp
mov
dec
leave
iret
or
lahf
aam
shlb
mov
mov
enter
mov
pop
jmp
data16
cld
xor
cmpsb
nopl
sub
aad
repz
pop
and
std
inc
or
sub
add
test
cmp
inc
push
jp
inc
repz
mov
scas
mov
aad
jp
hlt
xchg
pop
jecxz
xchg
mov
sub
cmp
out
or
push
test
popa
leave
sahf
push
roll
xchg
pop
scas
dec
loopne
pop
jnp
pusha
fcompl
mov
in
sahf
repnz
add
test
lcall
xchg
cmpsb
cld
mov
lahf
hlt
mov
sbb
pop
in
lock
add
jge
inc
jmp
out
mov
iret
mov
hlt
andb
lret
sti
mov
dec
sub
inc
mov
jne
in
jns
lods
sub
mov
ds
cmp
hlt
fcmovne
enter
ja
jle
sub
mov
inc
jb
insl
push
sub
adc
popl
inc
orl
mov
lcall
mov
dec
insb
orb
push
mov
xor
add
test
loope
dec
pop
mov
hlt
movsl
xchg
imul
fldenv
adc
shlb
push
cmp
scas
inc
sar
xchg
in
nop
cs
cmc
xor
cwtl
in
movsb
lods
lret
hlt
or
mov
cwtl
jne
out
mov
inc
pop
pusha
std
pop
xchg
or
jmp
mov
stc
mov
cli
rclb
test
push
mov
cwtl
ja
inc
pop
or
or
cmp
jmp
and
inc
test
xor
les
inc
push
sbb
mov
andl
aaa
cmp
ljmp
flds
pusha
inc
adc
loop
xorb
jne
stos
dec
jbe
rolb
mov
subl
mov
mov
fists
gs
sub
inc
cmp
addb
jecxz
pop
jp
mov
jo
mov
rorl
jl
sub
mov
add
cmp
loopne
dec
mov
mov
in
idivb
and
pusha
rcll
dec
jle
push
mov
xchg
cmpsb
test
es
lds
dec
jecxz
jne
std
inc
mov
adc
inc
popa
and
imul
mov
push
add
lret
in
les
add
lods
popa
rorb
push
cs
loopne
pop
pop
cli
jbe
mov
push
pop
add
mov
fdivrs
xchg
ficomps
cli
or
mov
jns
iret
lods
test
jno
mov
jl
mov
mov
push
popf
fidivs
jg
push
rolb
mov
push
add
test
roll
test
xorb
dec
dec
or
sahf
das
xor
inc
adc
clc
lret
cli
dec
mov
pop
pop
int
sti
jge
mov
xchg
jl
daa
rcll
enter
pushf
and
lods
cld
incl
cmc
imul
cmpsl
xchg
pop
dec
xchg
andl
pop
mov
iret
jne
popf
xlat
xchg
mov
insb
call
daa
out
sahf
cmpsl
jmp
pop
jno
lods
inc
and
jecxz
push
mov
cs
sbb
icebp
lret
mov
add
fnstsw
xchg
flds
or
das
mov
loop
cs
es
sub
jne
cli
cmp
xchg
insl
das
test
jne
pop
dec
adcl
gs
jl
inc
pop
cld
sub
push
imul
out
adc
into
sbbb
shrb
and
test
sub
inc
testl
mov
clc
aad
stos
mov
pushf
inc
ret
xor
push
shrb
pop
and
sbbb
andl
test
mov
stos
adcl
addb
fcoml
shrb
xchg
jmp
testb
xchg
dec
xor
jmp
insb
lret
aad
inc
fs
push
sub
lret
push
pop
jge
and
mov
mov
out
jne
sub
cmp
adc
dec
fnstsw
sti
add
and
mov
and
mov
stc
pusha
sbb
in
mov
lods
mov
adc
and
pop
pop
cwtl
pushf
lods
mov
gs
movsl
pop
and
mov
mov
pop
ja
addr16
and
cli
sub
pop
ljmp
mov
mov
mov
mov
lret
mov
out
dec
jmp
es
push
pop
das
mov
jo
xchg
fsubr
mov
jno
js
mov
sub
movsb
sahf
cs
push
cmpsl
rcrl
shll
lods
mov
cmp
mov
mov
fcmovnbe
pop
mov
pop
shlb
inc
xlat
pop
faddl
push
xchg
xchg
insl
in
pop
scas
xor
and
jp
scas
mov
mov
mov
lahf
cmp
xchg
lds
adc
xchg
xor
dec
das
fdivr
lret
or
lods
mov
sub
inc
push
aas
incl
lock
xorb
xor
xor
mov
mov
shlb
push
aad
popf
pop
xchg
push
movsb
and
icebp
mov
jecxz
and
jb
push
dec
dec
xchg
out
mov
es
ljmp
xchg
lods
enter
xchg
call
pop
adc
and
leave
movsb
fcompl
push
sub
lods
repz
dec
adc
jne
pop
or
mov
rorl
movsl
pushf
rcll
mov
cli
mov
xor
pop
xchg
adc
cmp
insb
shr
fstl
xor
fists
gs
rclb
dec
pop
add
aam
es
and
or
mov
jg
mov
loope
fs
out
jae
andb
and
push
jp
ss
sbb
inc
or
sbb
orb
xor
mov
xchg
cmp
ds
and
mov
and
jbe
in
in
aaa
mov
inc
out
les
mov
push
mov
lret
cmp
movsb
hlt
sub
std
xor
iret
fmul
pop
mov
pop
push
pop
sbb
dec
xchg
rorb
add
andb
inc
mov
and
sub
stos
dec
pop
orb
mov
aas
xor
sub
loopne
test
push
nop
jg
insl
insb
gs
jb
add
test
fdiv
cld
cmpsb
push
xor
add
loop
sub
into
jne
pusha
add
es
sbb
mov
sbbl
sub
mov
cmp
mov
push
push
aaa
movb
cmc
mov
js
call
and
add
loop
jo
or
jmp
jns
dec
lea
pushf
mov
mov
adcb
or
dec
leave
aad
lock
lock
add
fisttpl
std
outsl
loop
das
les
hlt
data16
dec
jnp
push
lock
dec
rorl
mov
out
stos
lds
lcall
into
pop
jne
add
xor
cmp
mov
adc
add
cltd
out
and
sbb
inc
xor
dec
sbb
sub
pop
mov
push
hlt
push
xchg
or
cmp
repz
aad
stos
sbb
mov
hlt
fsubr
mov
mov
movsb
and
mov
jecxz
testl
fisttpll
adc
shll
pop
adc
xor
popa
out
xor
iret
sbbb
dec
sub
or
xchg
test
or
xor
push
movsb
mov
or
cli
push
jp
sbbl
daa
pop
add
ds
shlb
pop
leave
jbe
jno
ret
cmp
test
pop
hlt
mov
fmulp
dec
pop
pop
jb
movsl
repnz
stos
nop
dec
arpl
mov
fmul
xor
sub
mov
mov
pop
adc
idiv
add
xchg
mov
sti
mov
cmpsl
jge
jl
in
and
sub
cmp
fadds
mov
lock
mov
mov
adc
xchg
inc
sahf
pusha
cmp
nop
jge
xchg
mov
lods
aad
cmpsl
fdiv
mov
xor
add
adc
pop
or
mov
sbb
adc
push
add
call
inc
inc
push
cmpsb
xor
mov
push
and
mov
mov
inc
or
clc
sub
movsb
aas
nop
inc
jno
fcomip
adc
xor
mov
cmp
pushf
adc
testb
aad
std
imul
call
inc
sti
xor
lret
add
call
out
xor
jbe
call
adc
cmp
push
or
inc
scas
mov
lret
jno
jg
or
cmp
out
into
or
out
pop
xchg
cli
sbb
lret
gs
addr16
mov
push
xchg
das
mov
mov
adc
dec
aaa
sub
inc
xor
adc
es
lea
mov
lahf
pop
jp
mov
dec
xchg
sub
push
cmp
shlb
dec
jg
imul
scas
lcall
mov
inc
loopne
xchg
pop
sti
pushf
setne
sbb
xchg
push
pop
sarl
jmp
push
mov
or
stc
xor
sub
sbb
daa
ret
and
repz
dec
push
fisttpl
lret
arpl
push
pop
arpl
pop
popa
jne
inc
cmpl
loopne
push
mov
push
jle
xchg
test
aas
and
inc
cmc
mov
fcomi
test
test
xchg
mov
test
mov
xchg
aas
xor
inc
dec
push
and
inc
ficomps
mov
mov
xchg
mov
insl
movsb
icebp
mov
jle
mov
cld
jb
pushf
pop
mov
fdivl
imul
mov
stos
icebp
push
dec
sbb
push
mov
shrb
out
dec
jmp
inc
shlb
insl
add
cmp
outsl
mov
test
cmp
push
mov
hlt
xor
inc
dec
and
inc
xlat
popa
jg
hlt
inc
ret
pop
cli
stc
outsl
adc
xor
test
gs
imul
xor
or
dec
jge
xor
inc
cmp
sub
pop
imul
sub
push
lret
nop
popa
jne
enter
testb
jl
outsl
inc
inc
add
push
mov
inc
push
data16
ss
movsb
rcr
xor
stos
sbb
insl
and
mov
rol
mov
mov
adc
and
aas
fldl
inc
fldt
fsubrp
or
clc
leave
cld
sbb
or
fidivrl
ret
in
fistps
pop
and
jle
push
repnz
fsubrp
adcb
std
lock
movsl
cld
movb
push
iret
imul
jp
movsb
mov
xchg
sbbl
movsb
clc
jo
sub
movsb
jl
enter
ljmp
xchg
sub
dec
cld
pop
mov
and
cmpb
testb
or
fdiv
ror
subl
inc
jo
in
adc
xchg
fidivrs
push
rcll
call
sbbb
ror
stc
movsb
sbb
dec
or
pop
inc
mov
inc
cmc
pop
das
inc
ja
insb
mov
sbb
aad
sbb
sub
pop
lret
subb
pop
outsl
mov
les
dec
test
dec
xor
adc
push
sbb
jecxz
push
mov
dec
xchg
inc
imul
mov
xchg
xchg
jl
mov
inc
mov
jle
andb
aad
mov
negl
aad
mov
inc
and
sti
notl
xchg
stos
push
pushf
mov
shrl
in
test
sahf
mov
xchg
es
fwait
jne
mov
andb
insl
push
fwait
iret
pop
test
sub
mov
inc
sbb
fmull
stos
fldl
xor
shlb
inc
mov
xchg
loopne
bound
movl
addr16
ja
lret
in
pop
sub
push
ljmp
shlb
out
mov
les
mov
test
leave
gs
cmc
jmp
lods
mov
cs
loop
mov
sti
pop
or
mov
ljmp
popa
addb
out
inc
test
cld
mov
adc
vcvtsi2ssl
sbb
pop
in
push
shll
rorl
mov
cmp
pop
push
cli
push
aad
cmp
ret
je
shrl
push
cmpsl
nop
repnz
mov
mov
hlt
cltd
mov
lods
xchg
insl
arpl
icebp
dec
cmp
mov
push
sti
push
sahf
xchg
pop
sub
and
xchg
lea
dec
sbb
mov
push
fdivrs
jl
in
lea
arpl
push
int3
fnstenv
lcall
and
cmc
enter
sbbl
mov
sub
addr16
hlt
jmp
jae
in
fdivr
das
roll
test
sti
pop
xlat
adc
mov
or
add
pop
test
cmp
adc
add
clc
stos
sub
into
sar
arpl
ret
pop
sti
bound
cmpsl
testl
sub
es
mov
pop
sbb
add
cli
mov
adc
and
nop
mov
hlt
sbb
aas
insb
mov
xchg
pop
or
and
xchg
dec
lea
adc
adcb
inc
mov
shlb
cld
and
cmp
loopne
cmpsb
pop
cmc
sahf
rclb
shll
aad
scas
xor
mov
call
pushf
repnz
push
jo
call
call
insb
in
mov
mov
and
cld
sbb
mov
call
out
arpl
repnz
loope
ret
insl
dec
xlat
mov
popf
pop
mov
imul
mov
add
mov
cwtl
push
jae
mov
sbb
xor
dec
pop
aam
pop
jl
jp
aaa
dec
scas
xor
pop
xchg
xor
scas
inc
cmp
jge
xor
int
mov
movsb
popa
lahf
jne
fiadds
mov
repz
shll
cmp
add
pop
dec
cmp
js
imul
mov
fistpll
scas
mov
shll
jo
test
pusha
add
insb
jns
sbb
mov
popf
push
inc
pop
add
in
lcall
aas
adc
cmp
xchg
into
lods
mov
hlt
xchg
iret
cmpsl
cmpsb
add
rorl
loopne
insl
cli
mov
dec
lods
mov
jnp
fstl
xchg
mov
pop
lds
test
cmp
or
pushf
mov
xor
xchg
push
fildll
sbb
lock
lret
ffree
addb
out
imul
xor
push
bound
dec
pop
mov
jne
popf
sarl
orl
pop
add
xor
jl
lret
dec
cmp
xchg
dec
jnp
pop
enter
xor
rclb
imul
arpl
es
popf
cmpsb
pop
cmp
popa
pusha
data16
js
in
jb
or
or
pop
sbb
cmp
mov
test
or
adc
scas
ds
lahf
pusha
sbb
xor
sub
inc
in
int3
and
loope
mov
xchg
xor
ss
xchg
fstpl
jmp
mov
dec
sub
hlt
mov
dec
cmpsl
nop
clc
test
out
mov
adc
mov
mov
or
cli
push
sub
out
das
stos
push
loop
push
jne
jne
shrb
aam
pop
adc
out
xor
fld
and
in
xchg
cli
fmuls
mov
orb
jle
dec
mov
mov
sahf
mov
mov
pushf
pop
arpl
outsl
cmp
dec
dec
bnd
cmp
call
mov
mov
xor
sbbl
pushf
jns
pop
lret
jnp
js
scas
jg
cmc
mov
seto
sbb
add
mov
push
insb
insl
in
xor
sbb
sub
and
das
dec
mov
xor
cltd
mov
ljmp
shrl
push
out
aam
push
jecxz
fsubr
adc
jp
xchg
push
mov
sbb
jne
xchg
xchg
js
scas
out
or
repnz
bound
stos
fprem
jmp
mov
jne
ret
mov
ret
mov
dec
dec
cwtl
pop
mov
jnp
ret
test
adc
bound
mov
icebp
aam
jne
xchg
adc
mov
mov
outsl
test
out
out
test
pop
mov
push
iret
lods
and
shrl
adc
mov
sub
sub
test
mov
shlb
data16
lods
arpl
repnz
xchg
sub
add
and
jne
push
jno
mov
in
sbb
xor
lret
movsl
loopne
insb
movsb
adc
das
mov
ret
sarb
cmc
int3
inc
jne
cs
inc
sbb
mov
stc
jnp
in
in
jle
shrl
scas
test
jo
cmp
fdivr
jns
jne
or
loopne
sbb
dec
jo
sbb
push
or
hlt
nop
adc
in
jae
pop
dec
or
sub
insl
xchg
int3
jb
push
fcompl
test
pusha
adc
inc
jns,pt
ret
jnp
std
xor
sbb
movsb
ja
cmp
imul
fiaddl
in
cmpsl
loopne
and
mov
out
mov
push
fbstp
fsubrs
scas
cmp
rorb
inc
clc
sbb
lcall
xchg
mov
inc
imul
in
pop
cmp
xchg
lret
repz
sub
cs
inc
mov
and
loopne
mov
inc
adc
dec
fsubrs
mov
stos
out
fadds
xlat
jnp
cmpl
add
clc
movsl
test
mov
ror
lock
and
mov
aam
aam
test
dec
jmp
jmp
add
sub
insl
mov
lret
or
jge
add
pop
dec
or
adc
push
idivl
pop
test
into
test
push
xorl
push
ret
fnsave
in
pop
add
ja
xchg
ffree
adc
mov
add
cmp
scas
aam
mov
scas
dec
and
xor
into
test
xchg
arpl
cmc
pop
sub
loop
sahf
outsl
or
idiv
cli
mov
pop
and
insb
popf
fnstsw
cld
test
mov
imul
shll
and
push
dec
push
pusha
outsl
mov
fsubl
mov
fwait
sub
inc
loope
pushf
dec
add
pop
mov
cmpsb
mov
mov
dec
ljmp
adc
fsubrl
cwtl
popf
inc
xor
stos
mov
dec
sub
xchg
mov
fsts
dec
mov
ror
sub
jg
sti
jo
sub
adc
push
sub
test
stos
sub
mov
adcb
loopne
fisttpll
add
jnp
test
and
mov
and
movsb
cmp
or
jp
movb
ficoml
pop
lods
out
lret
mov
inc
mov
jg
pop
and
out
sub
out
lds
mov
test
jne
nop
dec
mov
xchg
add
mov
daa
mov
cmp
jnp
icebp
sub
mov
add
hlt
lret
frstor
cmp
into
frstor
mov
inc
imull
mov
add
pushl
jne
pop
lods
inc
je
adc
hlt
js
fcmovb
push
aas
mov
mov
pop
lea
push
and
loop
lcall
xchg
scas
lds
int3
fld
aam
jle
addl
or
cmp
add
mov
in
xorl
sub
cmpsb
cld
sbb
sub
es
shlb
push
mov
data16
cmp
or
pop
push
push
test
hlt
push
lds
jg
daa
cltd
in
mov
sar
orb
rorb
cli
hlt
and
stc
lcall
shl
push
leave
add
mov
cwtl
lret
adc
dec
mov
mov
mov
cmpsl
in
insl
js
push
aam
push
hlt
jb
pop
push
xchg
jbe
or
insb
cmp
mov
or
or
std
xchg
mov
dec
jl
or
int3
arpl
push
jmp
test
pop
mov
jle
xchg
or
insb
aad
test
push
xchg
and
das
inc
sub
je
jge
and
jecxz
out
pusha
mov
into
sub
mov
and
adc
jg
lock
pop
lahf
pop
shlb
pop
fucomip
add
push
fsub
sbb
pop
clc
sub
out
fdiv
test
int3
test
insb
iret
das
adcl
nop
jecxz
xchg
fs
xor
pop
pop
pop
ret
lods
into
hlt
call
loope
add
repz
xchg
mov
dec
xchg
jbe
cmp
push
clc
mov
xchg
mov
loop
add
xor
inc
les
jle
pop
outsb
test
and
push
mov
fld
push
out
xchg
jg
loop
into
jg
ret
dec
imul
adc
pop
repz
idivl
fwait
dec
sub
cmp
jns,pn
dec
or
or
mov
add
xchg
iret
mov
out
test
adc
adc
mov
call
dec
xor
cmp
adc
xchg
fnstsw
mov
jecxz
or
xor
push
jnp
rolb
cmc
or
pop
cld
pusha
mov
arpl
fmull
mov
mov
popa
jl
int
ficoms
push
sub
pop
jge
je
stos
in
and
sub
sub
pop
notl
hlt
adc
outsb
data16
mov
loopne
fadds
xchg
outsl
insl
push
push
test
cmp
loope
and
add
mov
testl
xchg
pop
iret
test
data16
leave
in
not
xor
imul
out
mov
lahf
pop
mov
jl
pushf
cmpsl
ljmp
add
cwtl
pop
or
add
out
mov
in
inc
cli
stos
inc
and
ljmp
lahf
jne
inc
xchg
inc
into
sub
mov
and
fcom
fadd
mov
add
bound
cmp
decl
repz
xor
push
mov
pop
loopne
nop
mov
imul
inc
mov
cs
mov
sub
popa
inc
loop
ja
mov
add
out
and
cli
lods
in
sub
pop
fwait
ljmp
add
in
enter
scas
lcall
out
fcompl
rolb
push
iret
stos
push
adcb
shr
and
fsubs
pusha
leave
pop
cmp
jle
cmp
rol
loope
jb
ret
push
and
fcoms
add
je
mov
pop
insl
decb
lock
xor
and
inc
mov
ljmp
or
lods
or
xchg
or
jge
ret
hlt
das
cmc
sbb
test
xor
iret
sbb
fadd
xchg
cmpsl
out
cmp
xchg
jbe
into
sub
jns
leave
std
mov
add
sub
ss
adc
arpl
test
pusha
sub
push
add
add
movsl
jg
ror
xchg
pop
dec
psubd
xchg
repz
push
jne
xchg
jnp
stos
loope
fnstsw
js
mov
imul
jbe
jb
enter
pusha
cltd
dec
es
cmp
leave
orl
lret
mov
cmp
mov
jnp
pusha
mov
add
adc
mov
mov
call
pop
mov
test
mov
jns
gs
push
shrb
or
outsb
fmull
hlt
xor
mov
add
rcll
pusha
push
mov
sarl
inc
imul
fimull
subb
jmp
loope
icebp
inc
fisttps
inc
mul
dec
mov
jl
or
neg
mov
jne
call
hlt
fcmovne
dec
loop
inc
dec
imul
movsb
sub
fprem
mov
decl
frstor
fmull
push
hlt
iret
addl
out
lret
repz
ret
cli
fadd
xorl
pop
movsl
cmpsb
js
jle
sub
hlt
lods
pop
in
adc
dec
repnz
or
and
or
mov
cmp
mov
fst
pop
mov
sbb
movsl
mov
inc
cmpsb
popf
jae
sti
movsb
jmp
sti
aas
jmp
mov
repnz
dec
mov
stos
fdivrl
sbb
inc
cs
cmpsl
or
jge
repz
add
hlt
xchg
call
pusha
mov
in
lods
pop
imul
pop
test
pop
jmp
in
mov
rcrl
insl
outsl
add
dec
mov
inc
js
cmc
mov
cmp
xorl
xchg
jno
cmp
mov
movsb
notl
lret
out
dec
add
movsb
insl
pop
bound
sub
fcmove
dec
fisttpl
insl
les
push
enter
hlt
sti
adc
loope
frstor
mov
mov
sub
dec
push
jl
fimuls
cwtl
mov
pop
into
add
pop
and
gs
sbb
repnz
std
data16
js
jle
push
hlt
add
xchg
push
sbb
scas
cmpsl
into
pop
fwait
pushf
dec
push
stc
hlt
fldenvs
cs
push
lret
aam
es
inc
sub
jne
jl
fdivp
sub
mov
sub
or
xlat
cmp
flds
out
lret
add
add
iret
addr16
mov
into
sbb
loopne
pop
into
fists
sbb
nop
adc
pop
or
xor
or
movsl
xchg
jbe
imul
mov
inc
mov
leave
sub
xchg
mov
push
fistpll
int
mov
pop
mov
xor
adc
es
test
daa
lods
sub
gs
add
or
inc
scas
loop
add
ljmp
in
jg
or
imul
fbld
incb
mov
ljmp
mov
sbb
jg
into
cmp
sbb
jne
pushf
cmc
repnz
lods
lods
pop
lahf
sbb
lret
andl
xchg
gs
stos
test
nop
ss
mov
std
xchg
loop
mov
mov
jnp
or
out
mov
push
jge
mov
negl
lret
dec
leave
mov
mov
lahf
mov
cmp
fld
sbb
dec
in
std
in
jecxz
fcmovnb
andb
xlat
icebp
cmc
cmpb
mov
mov
cmp
sub
mov
mov
add
sub
call
mov
or
push
mov
test
mov
into
sbb
int3
and
setnp
mov
pop
add
cwtl
add
in
cmpsb
dec
sub
pop
into
ds
cmp
es
fsubrl
xchg
push
mov
inc
cwtl
mov
pop
sarl
icebp
or
xchg
in
or
adc
scas
into
and
dec
test
rclb
and
mov
xchg
mov
dec
add
bound
jne
and
or
pusha
jo
fsubl
or
popa
or
popf
arpl
and
xchg
or
ss
addr16
movsl
cmp
or
sbb
call
ret
cld
lret
sbbl
dec
push
cmpsb
repnz
hlt
jg
frstor
inc
stc
mov
lret
mov
roll
add
pop
aam
addr16
aas
inc
cmpsb
lds
jb
hlt
out
sbb
std
std
sti
push
sahf
push
and
pop
or
pop
jp
sbb
cwtl
ret
hlt
sahf
lock
fists
imul
in
xchg
add
jnp
xor
scas
xchg
hlt
xchg
loop
push
jle
ljmp
leave
bound
mov
jbe
test
dec
cmp
xor
add
insl
fistpll
es
mov
pop
mov
sub
add
xchg
cmp
add
pop
roll
add
and
xor
mov
push
jge
push
inc
or
jns
jnp
je
or
aam
cmp
mov
data16
lock
dec
jae
hlt
mov
sbb
hlt
insb
inc
push
mov
test
xchg
mov
lods
push
jle
push
stos
push
xor
jns
push
fstpl
fwait
jg
lea
popa
stc
fildll
push
jg
or
loope
mov
arpl
nop
rorb
movl
nop
xlat
ret
push
les
mov
push
cmp
int
ljmp
sbb
fdivs
cmp
and
loop
pop
int3
xor
or
icebp
sarb
cwtl
adc
jge
movsl
repz
mov
cwtl
jmp
popf
mov
and
int3
jecxz
loop
or
fsubrs
mov
out
xchg
xor
nop
scas
hlt
ja
addr16
push
insb
and
xchg
in
cmp
loope
rdtsc
push
sub
fmull
jne
jecxz
mov
dec
mov
stos
es
andl
scas
lods
pusha
sbb
arpl
pop
pop
xor
cmpsl
inc
sarb
push
cli
dec
xchg
mov
sub
adcl
inc
sbb
inc
pop
out
and
mov
xchg
popf
jmp
xor
or
xor
mov
xchg
aas
jne
cmpsb
enter
ss
add
faddl
shl
adc
cli
mov
popf
jp
ret
or
les
shlb
mov
pushf
mov
jns
ljmp
adc
pushf
and
add
mov
jns
cmp
push
repnz
add
std
mov
or
sarl
gs
out
test
mov
and
test
mov
xchg
cmpsl
int
jmp
adc
in
aaa
imul
mov
lcall
mov
outsl
leave
test
inc
or
fsubp
or
cli
call
mov
scas
les
fisttps
stc
lcall
adc
xor
out
ficomps
in
or
test
data16
popf
sahf
xchg
pop
pop
data16
push
add
push
stos
out
xor
movsl
cmc
pushl
sub
cwtl
mov
mov
cmpsl
iret
push
lcall
imul
negb
pop
lcall
inc
leave
or
mov
xchg
mov
pop
push
sbb
mov
jl
add
aas
imul
dec
ja
shll
in
insl
or
add
repnz
adc
mov
fldl
mov
or
ficoms
jae
mov
test
sti
push
add
dec
adc
orl
or
pusha
clc
add
shr
mov
xchg
iret
or
into
test
fs
mov
adc
pop
mov
addr16
mov
push
cmp
add
into
fsub
pushf
out
sub
sub
das
out
or
mov
cs
loopne
stos
les
push
test
jne
lock
and
mov
or
arpl
dec
loope
stc
js
insl
and
out
shll
jg
popf
stc
adc
into
sub
sbb
pop
hlt
or
inc
fcmovu
mov
stos
lds
lods
pop
or
ret
dec
fs
movsl
sbb
lods
stos
stos
adc
push
arpl
xor
shrb
or
rclb
loopne
push
sbb
fildll
sbb
mov
xor
xor
and
cmc
jmp
cmp
cmp
push
addl
movsl
and
jne
jne
mov
ror
decb
leave
xlat
scas
fwait
popa
jne
test
inc
add
scas
dec
lcall
jg
outsb
out
movsl
and
mov
mov
jmp
mov
outsb
dec
jb
scas
mov
cmpsb
or
sti
enter
adc
jbe
mov
jnp
mov
jmp
nop
lahf
add
mov
test
pop
addl
test
adc
mul
adc
clc
std
adc
mov
mov
arpl
or
push
incl
or
push
pop
jb
inc
cwtl
sbb
xorl
scas
adc
xchg
incb
xchg
ret
shll
stos
hlt
cmpsb
lret
lods
sti
and
aas
inc
and
xchg
inc
jno
mov
jmp
xlat
addr16
movsb
mov
xchg
push
lret
std
into
sub
add
mov
jns
and
dec
insl
in
mov
imul
mov
mov
fisubl
cli
mov
mov
lea
in
dec
mov
scas
xor
mov
jnp
sti
jmp
mov
mov
mov
jne
stos
add
stos
adc
add
ja
faddl
test
lods
pop
leave
ret
fcmovbe
stos
mov
ror
cmp
xchg
cmp
xchg
lret
or
and
or
out
jne
mov
in
mov
xchg
fwait
stos
push
std
add
insb
pusha
mov
cmc
stc
cld
movsl
or
ja
adc
jns
addb
dec
mov
mov
jne
int3
mov
push
ret
lretw
push
in
push
sbb
aas
adc
add
in
cmpsl
cmpsl
nop
xchg
fisttpl
fidivl
fmuls
in
jnp
popf
fisubs
jecxz
les
adc
mov
hlt
addr16
mov
sub
jge
cltd
or
jne
fisubrs
lret
xor
push
xchg
or
leave
dec
fstpl
dec
incb
arpl
push
xor
xchg
fadds
jae
insb
sub
fcomps
jae
mov
xchg
adc
repnz
inc
inc
push
imul
mov
pop
jecxz
adc
in
fldenv
sub
mov
jle
jg
std
xor
loop
popf
fists
dec
pusha
shl
xchg
sub
aam
enter
loopne
enter
dec
mov
xor
lret
lahf
in
and
stc
push
cmpsb
jne
ret
xor
push
dec
stos
shlb
rcrb
push
fisubrs
pop
ljmp
mov
lods
dec
jge
in
sbb
sahf
stos
clc
outsl
mov
lds
mov
mov
cld
jl
push
jne
das
and
out
cltd
pusha
xchg
mov
roll
fstpl
inc
adc
push
pop
pushl
jmp
push
jge
push
xchg
jmp
mov
orb
cld
add
lcall
pop
add
cld
ret
lahf
filds
or
push
sti
dec
and
push
adc
lds
imul
icebp
jns
divl
jbe
and
sub
cmp
jo
mov
sub
and
aas
cmp
out
mov
out
push
jne
sub
xor
cmp
pusha
scas
pop
and
and
and
jmp
scas
xchg
gs
xchg
je
or
mov
cmp
nop
lods
add
clc
and
and
dec
int3
sti
fcomps
outsl
repz
xorl
jp
inc
mov
outsl
xchg
enter
fstl
push
vmovaps
jmp
xchg
adc
jg
loope
rcl
jmp
push
push
popa
in
loop
iret
sub
push
mov
hlt
or
int3
xchg
loopne
insl
inc
mov
pop
jo
int3
test
imul
mov
cltd
data16
fimuls
and
test
loope
clc
xchg
push
xchg
shlb
pop
test
mov
fst
push
mov
stos
dec
insb
lods
jne
lods
pop
icebp
call
xchg
xchg
xor
cmp
push
cs
push
inc
rolb
add
add
popf
mov
mov
hlt
adc
inc
push
out
and
clc
jne
rcl
std
sub
test
inc
mov
imul
or
xchg
add
lods
mov
jmp
mov
aad
and
lcall
mov
xor
and
pop
sub
mov
cmp
adc
adc
cmpsb
inc
scas
imul
pop
cmc
in
cmp
leave
pop
out
repz
fucompp
rorl
pop
push
shrb
lcall
mov
fsubrp
dec
mov
pusha
jge
sbb
pop
mov
ffree
cltd
loopne
nop
sub
sub
add
xchg
jmp
xchg
mov
lods
fsub
insl
or
jae
cmpsb
mov
sub
data16
sbb
mov
repnz
dec
sub
shlb
or
cmp
test
jmp
push
pop
bswap
mov
ret
mov
int
pushf
fmulp
bound
cs
jmp
mov
outsb
sub
sub
mov
adc
add
push
stc
xor
or
mov
insl
hlt
mov
faddl
andl
lar
imul
jne
xor
mov
pushf
lock
stos
into
in
xchg
test
jne
addl
cmpsl
add
dec
scas
hlt
cmp
inc
fsubl
addr16
mov
lods
add
sbb
outsl
popf
and
xor
in
test
jge
int
cli
stos
push
xor
sub
shlb
xchg
stc
pop
arpl
outsb
add
aaa
inc
fsubr
and
cld
jns
iret
leave
movsb
inc
adc
xor
aaa
pop
cmp
sbb
xchg
push
std
popa
mov
notl
cmp
nop
movsl
hlt
push
jp
jg
lea
repz
hlt
jg
sub
cli
adc
fadd
cmpsb
cmp
lock
enter
arpl
int
inc
or
mov
bound
add
jecxz
inc
nop
loopne
dec
adc
int3
lret
cltd
mov
and
mov
inc
ss
xchg
cwtl
aas
lcall
lds
sub
loope
xchg
mov
inc
sub
decb
cmpsb
adc
sub
or
sbb
jge
add
and
add
mov
jb
or
mov
dec
jbe
mov
mov
dec
mov
hlt
mov
jge
jb
xchg
push
mov
lret
inc
sub
jle
std
mov
daa
xor
pushf
xchg
and
mov
mov
stos
push
pop
es
jbe
push
cwtl
xor
lret
scas
cmpsl
cmp
fwait
sub
xor
add
cmp
pusha
stos
hlt
adc
dec
arpl
xorl
pop
pop
xor
sub
sti
call
jle
mov
xchg
pushf
into
scas
mov
xchg
movsl
mov
int3
faddl
dec
aad
lods
mov
insb
inc
popf
in
movsb
rcrb
cli
incl
aaa
les
test
stc
jl
mov
int3
xchg
push
out
jl
mov
mov
or
fistpl
jnp
and
test
movsl
or
jae
mov
arpl
pop
inc
hlt
or
into
jne
or
xor
xchg
aam
jnp
mov
dec
int3
subb
bound
out
fwait
cmpsl
fdivrs
push
idivl
das
insb
jle
pop
jg
mov
jne
cmp
shlb
nop
sbb
iret
jnp
pop
loopne
adc
testl
popa
ret
repnz
inc
fmull
call
jo
arpl
mov
inc
mov
inc
sbb
xchg
aam
insl
scas
sub
jbe
aad
or
iret
rcrb
xchg
sbb
cmc
sub
dec
sub
aad
dec
dec
andl
popa
test
add
notb
inc
xchg
jb
addb
mov
add
fistpll
cld
mov
int3
ror
cmp
insb
repz
cmpsl
xchg
cli
push
jl
imul
pop
mov
les
lcall
add
cmpsl
sti
push
cmp
hlt
jne
in
cmpsl
jbe
test
sbb
and
shlb
inc
jge
rorl
pusha
cmp
fmull
popa
sub
xchg
mov
sub
hlt
xchg
and
test
or
push
xchg
sbb
cmc
divb
sar
jl
cwtl
inc
fistpl
pop
std
add
push
and
sbb
notb
iret
or
imul
lds
sbb
sub
les
in
lret
pop
std
ret
stc
sub
push
inc
test
pusha
or
dec
adc
mov
sub
inc
ja
popa
adc
lods
xchg
add
jns
cli
jae
jp
in
sbb
jg
mov
arpl
leave
loop
pop
xchg
adc
adc
cmp
pop
inc
divl
lods
pushf
hlt
or
movsb
in
cmpsb
dec
bnd
sub
pop
test
xor
push
pop
jae
icebp
lret
leave
mov
dec
dec
jno
popf
xorb
xor
shl
decl
rolb
dec
push
enter
add
mov
sbb
adc
popa
inc
jne
sar
and
popf
hlt
mov
loope
pop
jle
fcoml
sub
fwait
mov
mov
ss
push
insl
mov
adc
fsubrs
jne
aad
jg
mov
inc
jecxz
dec
lahf
jns
mov
mov
ds
add
idivl
pop
xor
gs
sbb
dec
loopne
push
pop
arpl
leave
sub
mov
jmp
add
ds
add
adc
mov
mov
adc
jmp
pop
mov
fists
jne
or
shll
rorl
je
push
int
lret
call
imul
or
das
enter
mov
divl
shll
sarl
into
ret
mov
jbe
pop
sub
sub
lds
cwtl
ja
ret
fadds
adc
in
lods
loop
scas
sbb
in
std
out
xchg
rolb
push
inc
add
popa
sbb
test
insl
mov
jge
cs
add
dec
sub
dec
mov
cmp
pop
pushf
lds
fisubs
subl
inc
pop
or
jmp
stos
jl
mov
clc
mov
xor
cltd
mov
leave
sti
pushw
and
add
sub
or
cmp
fnstcw
scas
mov
leave
leave
cmp
pop
mov
pushl
int3
addl
jnp
packssdw
movsl
sub
dec
lds
mov
aad
push
jne
sbb
pop
fcmovu
out
adc
jp
inc
mov
adc
ljmp
sahf
popf
fists
gs
test
adc
sub
xchg
mov
or
dec
mov
enter
and
mov
jns
mov
mov
push
ret
jg
mov
cli
mov
aam
fprem1
int3
dec
xorb
popa
jns
add
cld
and
mov
pop
fdivr
hlt
ljmp
push
mov
movsb
mov
mulb
into
sahf
movsl
sub
jne
jmp
add
cld
hlt
inc
idivl
enter
inc
jnp
mov
jne
lret
jl
cmpsb
push
push
jmp
sub
adc
imul
mov
dec
test
aad
enter
xchg
fsubs
outsb
xchg
test
ficomps
enter
push
jno
std
cld
cmp
cmp
in
std
fists
xchg
dec
divl
pushf
jne
sbb
stc
mov
addl
pusha
pmullw
std
in
jne
in
pop
fldcw
mov
xchg
int3
js
fisubl
xor
xchg
test
cld
hlt
adc
loopne
push
and
sbbl
mov
pop
xor
sbb
jns
cs
mov
nop
jg
jecxz
test
pop
cmp
mov
cli
imulb
adc
insb
push
sub
xor
add
in
hlt
das
xor
cmp
adc
cwtl
adc
mov
mov
insb
pop
fstpl
int3
mov
fisttps
mov
or
out
fs
push
and
jnp
fs
mov
cld
sub
aam
ffreep
lods
and
daa
dec
das
fsubl
inc
imulb
adc
cmc
push
hlt
frndint
out
xchg
ror
inc
pusha
aas
mov
mov
mov
loop
pop
jecxz
push
or
movsb
xchg
call
flds
mov
sub
arpl
mov
jle
dec
mov
and
sub
jbe
jl
into
pusha
or
jmp
pusha
arpl
cmp
mov
sub
icebp
inc
and
rorl
mov
mov
bound
lock
xor
pushf
in
je
jns,pt
pop
push
jle
hlt
notb
test
adc
or
cmc
cmp
shl
mov
or
cmp
les
outsb
and
sbb
and
fsubrs
sbb
mov
or
nop
or
xor
leave
icebp
jb
nop
je
ljmp
pop
ficoml
repz
lods
mov
and
lret
insl
mov
pop
jl
movsl
push
les
int
enter
dec
iret
rcr
adc
ret
xlat
roll
test
mov
bound
jb,pt
add
xchg
cs
cmp
fdivl
push
adcl
test
sbb
jae
add
mov
xor
mov
jecxz
jle
js
cmc
sbb
movsl
andl
sub
loopne
arpl
jmp
inc
subb
sbb
rcr
pop
mov
adc
cmp
cmp
loopne
mov
sub
lds
inc
cmp
pop
hlt
daa
cltd
pop
xchg
call
xlat
pop
xchg
xorb
jb
add
enter
dec
jnp
enter
xchg
mov
xor
jp
or
out
loopne
test
mov
aam
movb
add
movsl
cltd
or
cwtl
in
inc
jle
xchg
ja
push
test
cs
xchg
and
mov
inc
dec
sub
pop
mov
into
enter
mov
xor
inc
les
fcmove
cmpb
xchg
inc
push
pusha
jg
outsl
popf
mov
leave
aam
dec
das
inc
imul
cmpsb
pop
shlb
and
sti
push
shr
js
xor
fdivrl
and
aaa
inc
mov
jbe
addl
out
xchg
mov
and
mov
bound
sub
es
sbb
ret
rol
pop
xor
iret
cld
xor
cltd
stos
xchg
cmp
int3
inc
dec
mov
xchg
xor
into
popa
rol
pop
xor
sbb
addr16
xor
dec
fstpt
inc
pop
in
test
mov
xchg
enter
stos
icebp
xchg
and
lcall
sti
cmp
mov
adc
ljmp
pop
sbb
pop
stos
cltd
mov
test
cmc
outsl
es
push
out
in
mov
shlb
nop
aam
hlt
gs
jmp
add
mov
test
aad
xorb
lcall
in
outsb
cmp
adc
mov
or
repz
nop
popa
inc
rcrb
cli
subb
sbb
push
mov
scas
lea
cmp
xchg
mov
mov
int3
mov
jne
inc
jno
std
lcall
sbb
jbe
xlat
fisubl
das
cmc
flds
push
sarl
in
sahf
shrb
and
jo
xlat
mov
sti
leave
and
adc
mov
sti
imul
fucompp
push
inc
xchg
mov
sub
das
pop
adc
pop
inc
xlat
std
jge
sbb
lahf
pop
out
and
adc
arpl
dec
test
roll
xor
add
mov
mov
push
fidivs
das
add
pusha
loop
cs
push
mov
outsb
popf
leave
movsl
mov
mov
add
sub
popa
or
pushl
and
add
scas
push
push
mulb
cmc
jle
insl
ds
pop
xchg
jne
xchg
and
hlt
ret
inc
mov
xor
jns
incl
leave
cmpsl
mov
inc
stos
aad
cltd
jno
jp
insb
daa
mov
and
outsb
or
mov
pop
fadd
xor
add
dec
push
dec
or
in
sarl
cwtl
lods
andb
outsl
les
push
push
xchg
mov
fbstp
xorl
pop
pop
shl
repz
ljmp
lods
repnz
ret
cmpsb
lea
cmpsl
sahf
fwait
ds
adc
xor
cmpsl
cmp
int3
test
jo
xchg
insb
and
shlb
push
loope
inc
test
idivb
jne
adc
push
push
add
out
mov
jne
loope
aas
cmp
mov
pop
adc
add
inc
lock
in
dec
xlat
add
add
mov
cwtl
cmpsb
inc
jb
stos
jl
push
mov
nop
jle
dec
and
fildl
or
add
sbb
adc
stc
inc
cmpsb
ret
lahf
sbb
das
arpl
scas
in
enter
pop
daa
and
pop
iret
push
faddl
add
out
xchg
and
cwtl
les
mov
adc
ret
sbb
jns
jl
icebp
mov
jmp
add
push
in
adc
loopne
inc
sub
out
loope
sbb
pop
clc
cltd
inc
cmpb
mov
xchg
sti
push
popa
mov
inc
cmpsl
pusha
repz
into
in
or
test
mov
inc
xlat
mov
dec
loopne
pushf
lods
rolb
pop
xor
aaa
push
lret
adc
xor
in
mov
or
ss
sbb
out
push
out
ja
outsl
inc
mov
leave
mov
sub
mov
outsl
jne
or
dec
orb
cmpsl
add
aad
outsb
mov
les
dec
aad
mov
jns
pusha
out
loope
cli
out
mov
lock
sub
ds
addr16
mov
jecxz
mov
aaa
stos
out
cli
pop
test
dec
scas
mov
scas
sub
int3
mov
sub
sbb
fwait
pushf
cmpsl
cmovl
call
and
cmc
and
xor
dec
inc
add
push
mov
movsb
aad
pop
xchg
xchg
ja
out
cmp
call
scas
sbb
adc
add
mov
xchg
and
enter
or
mov
test
enter
xchg
out
hlt
xchg
jne
jle
mov
add
in
aad
outsb
leave
insb
sahf
std
in
pop
xor
add
lods
inc
sarb
mov
and
js
fdivs
cmp
fsubrl
push
cltd
lcall
in
adc
xchg
std
test
mov
mov
rcr
ret
cmp
out
mov
mov
mov
mov
scas
aad
add
fisubrl
xchg
hlt
aaa
mov
enter
add
bound
inc
cs
pop
jns
fistl
inc
sub
insb
lret
filds
arpl
es
jmp
adc
dec
ja
mov
int
mov
mov
iret
gs
lret
mov
nopl
jp,pt
test
or
xchg
or
inc
je
subl
enter
sbb
in
hlt
pop
cmp
lock
mov
sub
mov
inc
fsubl
xchg
add
cmp
push
inc
xchg
pop
out
dec
sub
mov
jmp
cltd
jmp
pop
addr16
pop
add
imul
or
mov
hlt
pop
mov
cmp
inc
lods
nop
rcll
add
pushf
adc
add
push
mov
aaa
mov
xchg
sub
jle
test
cmpsb
pop
in
clc
pop
xor
mov
mov
fcomps
push
rorb
stos
enter
sbb
adc
push
fmul
test
adc
inc
cmp
xor
mov
fdivrl
push
add
jmp
push
and
cld
mov
fbstp
or
scas
test
sbb
ds
fsubrs
xchg
push
xorl
jo
mov
mov
or
in
mov
cmp
jmp
lods
push
sbb
jge
xor
outsl
mov
nop
loopne
loop
fcoml
pop
jo
stos
test
jne
movsl
cmp
inc
inc
adc
adc
mov
insl
push
add
idivl
xchg
lahf
and
das
je
jno
sti
stos
mov
sub
cli
add
dec
cld
dec
inc
lods
or
cwtl
jg,pn
popa
mov
or
subl
pop
std
push
dec
push
push
mov
outsl
arpl
xor
adc
enter
cmpsl
cld
dec
iret
fiadds
mov
dec
mov
sbb
mov
mov
popa
and
mov
std
test
in
mov
push
pop
xorl
dec
and
xchg
es
ss
sub
nop
mov
leave
mov
std
jne
mov
hlt
sti
sbb
scas
mov
in
roll
enter
fadd
adc
or
fincstp
das
mov
in
icebp
xchg
mov
test
sbb
push
pop
insb
jecxz
push
push
lods
dec
arpl
dec
inc
ljmp
lods
sub
dec
or
fbld
mov
imul
jge
out
or
sbb
test
xor
aam
or
filds
lds
fnsave
and
hlt
mov
cwtl
in
fsubrs
pop
es
ret
fisubl
lea
aad
mov
test
ss
mov
fcoms
pop
add
push
xchg
mov
aam
stos
inc
sarb
shll
orl
inc
pop
push
jbe
sbb
jmp
imul
push
std
jo
mov
cmp
bound
sub
sti
xor
leave
adc
xor
ret
not
add
fdiv
fisubrs
insl
add
sub
dec
jg
inc
mov
adc
loope
mov
jecxz
pop
loopne
cmp
adc
das
inc
push
inc
in
dec
mov
jmp
lahf
pushf
out
test
stc
add
rcr
jno
cmp
mov
stos
push
push
inc
xor
xor
leave
push
scas
xor
push
lret
in
je
dec
aas
cmp
pop
adc
enter
sti
xchg
popf
add
out
xor
bound
test
sub
lahf
dec
or
xor
cmp
and
or
dec
sub
adc
push
jne
clc
in
xor
inc
or
enter
inc
stc
push
jmp
jecxz
mov
jne
int
mov
adc
test
mov
mov
mov
adc
shlb
ljmp
out
pop
sar
fidivs
push
inc
inc
dec
lock
xor
imul
cmpsl
pop
cmp
dec
aad
test
xchg
fistpll
inc
add
pop
adc
aas
push
xchg
andl
nop
les
adc
xchg
mov
push
in
jge,pn
inc
mov
xor
sub
pop
in
movsl
ds
rcrl
sub
xchg
cmp
rcrl
dec
cli
xchg
mov
cmp
es
mov
dec
pop
sbb
dec
sub
mov
dec
mov
out
push
es
into
insb
testl
pop
stos
fdiv
popf
shlb
sbb
neg
loopne
mov
dec
movsb
pop
outsl
lea
push
fstps
sub
jge
inc
or
add
xlat
push
jns
enter
mov
cli
repnz
negl
and
add
and
sub
inc
stos
test
add
xor
jne
pushl
jecxz
mov
mov
dec
and
ljmp
loopne
in
decb
dec
out
sahf
test
and
cmp
cmc
enter
je
dec
jl
nop
push
dec
test
push
pop
mov
pop
mov
cmpsb
and
cwtl
inc
rcrl
loopne
push
mov
ret
adc
xchg
or
gs
nop
inc
jl
movsl
push
push
jmp
addb
insl
mov
sbb
call
mov
rcll
add
adc
jg
lcall
mov
mov
adc
test
jle
aad
add
dec
jl
dec
scas
jne
out
pushf
dec
add
adc
addl
add
hlt
pop
mov
mov
push
out
pop
jp,pn
mov
xor
repz
enter
or
mov
xlat
dec
std
xor
je
jecxz
es
lcall
inc
pusha
iret
daa
loope
mov
cs
or
popf
or
aaa
cs
pop
and
push
cwtl
jne
mov
loop
add
das
mov
addl
inc
pusha
adc
daa
mov
cli
dec
insb
dec
dec
cld
outsl
mov
adc
cmp
and
popa
lods
hlt
inc
pop
ds
sbb
mov
es
inc
jnp
adcb
pusha
cmp
jmp
daa
push
xor
incb
inc
loopne
or
or
sub
aad
scas
mov
cld
std
lret
mov
in
popl
mov
xor
jne
jecxz
arpl
inc
je
scas
scas
jbe
je
mov
in
push
fnstcw
es
adc
sub
sbb
hlt
mov
or
jns
bound
ffreep
and
ja
jno
mov
test
inc
cli
sahf
imul
hlt
rolb
loop
push
subl
lcall
inc
cmp
movsl
std
cmpsb
rcl
int3
pop
ret
inc
clc
sub
mov
lret
loopne
lock
adc
xor
push
adc
sub
popa
pop
push
jns
and
inc
xor
lods
sarb
dec
add
adc
jg
imul
pop
jbe
pop
xor
push
lods
push
adc
aas
jl
loopne
mov
stos
xchg
daa
iret
scas
pop
and
adc
cli
cwtl
xchg
jnp
fnstcw
pop
dec
mov
push
add
mov
inc
and
adc
por
jl
cwtl
mov
jne
sarb
addl
les
cmpsb
xor
jo
jae
sub
lret
fstpl
movsb
xchg
jns
cmp
mov
leave
fwait
in
fisubs
shlb
add
mov
dec
sub
add
dec
cmpl
inc
stc
repnz
mov
sbb
je
test
out
xchg
pop
dec
movsl
movsb
cmc
ss
and
test
fdiv
test
in
inc
sbb
call
sahf
or
mov
hlt
add
ret
js
icebp
sarb
xchg
mov
add
addr16
enter
ret
inc
fcomps
jmp
xchg
pop
xchg
cmp
jae
add
cs
ret
mov
fwait
pop
hlt
push
push
lods
push
dec
jno
lea
jp
add
and
dec
fcmovnu
cli
adc
xchg
daa
add
jbe
lods
cli
mov
sarl
jle
outsb
push
adcb
dec
hlt
jno
mov
sbb
jo
notl
adc
cmpsb
mul
std
or
mov
fsubp
pop
mov
jns
jle
in
ret
mov
jbe
pop
aam
mov
cmc
mov
into
pop
mov
shrb
cmpsb
popa
mov
xor
aaa
hlt
pop
sbb
sbb
push
inc
xchg
inc
stc
fisttps
push
mov
popa
addr16
xor
jp
mov
adc
pop
data16
rolb
cld
inc
adc
lahf
dec
hlt
sub
mov
sub
call
mov
sbb
inc
sub
loop
fistpl
mov
jnp
fcomp
sahf
mov
lahf
sbb
dec
dec
pop
rclb
lods
xchg
lcall
pop
test
sbbl
stos
aas
sub
pop
test
es
xorb
jecxz
test
push
xchg
xorb
add
mov
add
pop
ds
jne
outsl
and
ss
rorl
stos
fdivl
aam
test
cmovl
mov
pusha
dec
mov
movsb
add
mov
push
jge
pop
sub
bound
ret
dec
clc
or
movsb
push
inc
mov
mov
mov
mov
adc
add
cmpb
xchg
xchg
add
ljmp
add
dec
cwtl
fistps
movsl
add
lock
into
xorb
int
sub
sbb
and
and
jno
test
mov
daa
xchg
movsb
cmc
pop
adc
pop
icebp
pop
or
xor
call
loopne
adc
loopne
and
sti
pusha
loop
dec
mov
mov
test
pop
imul
bound
sbb
or
lock
push
jp
int
cmpsl
fs
jb
pop
test
inc
adc
pop
mov
arpl
test
mov
xchg
cmp
cmpb
iret
clc
addb
or
sub
jbe
mov
outsl
loop
dec
arpl
aam
insb
pop
addr16
int
adc
add
and
inc
andb
cmp
push
aad
fnstsw
cmpsl
mov
mov
dec
mov
xor
xorb
add
hlt
stos
pusha
mov
cmp
push
push
loope,pt
mov
push
out
mov
inc
pop
popf
movsb
inc
into
mov
ficomps
enter
fisttpl
stc
sbb
stc
test
fcoml
mov
imul
addr16
xchg
jb
ret
loop
into
pusha
inc
ror
test
dec
inc
stos
mov
sub
xchg
outsl
xchg
inc
cmpsl
std
aad
cmp
outsl
jnp
inc
sub
andb
pop
ja
dec
out
int3
sub
sub
cmp
jl
cmp
cltd
cli
push
push
fmuls
push
pop
mov
loopne
aam
cltd
inc
push
mov
outsb
mov
cmp
adc
cmpsb
cli
aas
sub
notl
out
pop
inc
cmpb
push
inc
cmpsl
or
insb
outsl
xchg
stos
imul
jl
loop
mov
in
pop
fcmovnb
sub
push
fildl
push
sahf
sub
jmp
in
aad
cmp
mov
inc
scas
or
loope
notl
data16
dec
mov
cmp
cmpsl
ljmp
adc
jg
jmp
sti
push
scas
inc
jno
loopne
aas
clc
leave
cli
es
adc
rcrb
test
aas
call
jecxz
adc
test
ds
mov
pop
sbb
fldenv
stos
jne
cmpsb
data16
push
sbb
cli
stc
lcall
hlt
rcl
fisttps
fwait
mov
mov
adc
leave
or
sub
jle
mov
xor
cld
lcall
mov
jmp
inc
sub
sub
adc
into
xlat
cmp
mov
xor
adc
xchg
pop
loopne
xor
lret
sahf
cwtl
add
dec
hlt
xchg
add
mov
mov
cmp
xchg
and
push
inc
dec
push
fwait
idivl
sbb
js
fadd
loope
sub
out
add
mov
pushf
stos
mov
xchg
pop
jbe
or
imul
int3
lods
xchg
and
push
cmp
ret
push
mov
ficompl
xchg
mov
cmp
lods
stc
pop
mov
push
adc
cld
mov
fldl
jge
mov
jb
xchg
into
mov
adc
mov
filds
into
inc
dec
mov
ss
mov
cmp
and
mov
or
jmp
subb
push
imul
sbb
gs
mov
lock
mov
out
ret
pop
out
inc
jecxz
inc
in
push
xchg
sahf
push
and
std
mov
push
loop
mov
xchg
jo
xchg
and
sti
jmp
sti
pop
xchg
mov
imul
les
test
insl
scas
inc
movsw
adc
jmp
or
pop
inc
lods
fcmovnbe
xchg
mov
jg
in
xor
aad
divl
xchg
imulb
les
jb
cmpsl
je
xchg
enter
pop
lock
or
push
sbb
cmp
mov
sub
lret
dec
xor
out
mov
cmpsl
or
jo
push
hlt
std
lds
pop
jle
insb
xchg
pop
jae
ret
jno
mov
sbbb
cmp
sub
add
pop
in
call
and
xchg
push
shlb
nop
mov
pop
sub
or
sub
push
adc
dec
mov
jnp
aam
pushf
clc
adc
xchg
add
sub
into
or
cltd
jno
cmp
push
nop
insb
jno
imul
sti
mov
pop
adc
jns
mov
jns
and
pop
lods
std
sti
sbb
std
sarl
cmp
lods
and
inc
fmul
jbe
pop
jbe
rolb
add
repnz
ljmp
lods
xchg
xchg
and
jl
mov
push
mov
pop
mov
jmp
std
in
lahf
sahf
add
mov
iret
inc
das
xor
push
jne
out
scas
dec
push
aas
fidivrs
xor
dec
jmp
jns
cmc
pop
pusha
mull
mul
fisubrs
jbe
in
es
dec
frstor
mov
movsl
in
pop
shll
cmp
inc
out
or
lea
mov
xor
fnstcw
mov
mov
sbb
enter
xchg
icebp
inc
mov
xor
mov
mov
ljmp
test
adc
nop
sahf
add
adc
out
push
outsb
js
movsb
std
shrb
hlt
sub
idivl
jg
add
std
imul
xor
icebp
jo
jne
dec
test
loopne
xchg
add
insl
push
ret
inc
out
shr
lods
inc
shlb
leave
push
sbb
out
mov
andb
push
or
and
push
lock
call
xor
sbb
and
icebp
push
test
mov
inc
push
add
mov
enter
push
pop
xchg
inc
daa
fildl
fsubr
inc
jl
test
hlt
icebp
dec
jnp
idiv
test
sar
and
mull
jp
fstpl
sub
rol
jne
cli
jle
lcall
aaa
dec
mov
imul
call
add
xchg
dec
into
test
fisttpll
lods
mov
sub
adc
arpl
jmp
test
sub
je
add
inc
add
sub
fsubrl
jbe
pusha
es
rolb
std
pop
je
or
das
cmpsb
xor
cmp
xor
pop
dec
enter
xlat
push
mov
cmp
bound
push
inc
inc
loopne
mov
outsl
mov
in
xor
jecxz
jne
ds
sub
jp
daa
mov
iret
pusha
xchg
lret
or
ljmp
repnz
adc
sub
sbb
aad
pop
xor
jae
add
mov
repnz
push
mov
cmpsl
cwtl
clc
add
inc
and
js
or
jnp
jne
mov
jne
mov
icebp
or
adc
add
push
stos
push
push
push
mov
call
scas
rclb
repnz
or
or
in
jb
push
and
insb
outsl
pop
test
loop
mov
inc
mov
mov
jmp
mov
hlt
cmp
popf
in
jg
dec
test
cs
xor
inc
pop
std
xor
lea
mov
or
jnp
popa
ret
mov
pop
or
stc
test
or
lea
add
xor
cmc
fisttpl
aad
inc
pop
sbb
fcmovnu
xchg
dec
outsb
arpl
sbb
mov
leave
or
popa
and
cmp
dec
cmp
pusha
test
jne
pop
leave
mov
push
sbb
push
lods
push
xchg
sbb
pop
mov
in
inc
cmpsl
jo
sub
sarb
cmpsl
movsb
push
jne
loope
sti
stc
das
mov
not
sahf
adc
and
cli
mov
clc
mov
imul
sub
mov
lcall
loopne
sahf
shlb
lods
icebp
into
mov
sbb
fimuls
iret
dec
roll
inc
inc
mov
dec
outsl
lahf
cmpsl
jle
cmc
inc
cmp
shlb
data16
pusha
fmulp
and
mov
cli
popa
test
xchg
push
adc
test
jl
aas
inc
xchg
test
imul
adc
ds
sub
add
adcl
ret
imul
mov
imul
sub
mov
rcrb
xchg
xor
and
fstpt
in
incl
cs
add
insb
jl
pusha
adc
pushf
push
lcall
fcoms
shll
seto
shll
sub
loopne
pop
xchg
scas
mov
inc
mov
lahf
xchg
or
out
lret
sbb
cmp
or
adc
loop
gs
les
or
test
mov
or
es
out
xchg
arpl
xor
cltd
in
jle
data16
push
cmp
outsl
jae
push
enter
rcll
xor
lret
ficomps
sub
pop
lods
loope
das
test
mov
jge
push
out
enter
hlt
test
xlat
scas
test
and
mov
push
push
dec
fstl
or
repz
push
stos
mov
mov
adc
test
sub
push
cmp
stos
into
mov
hlt
xchg
mov
inc
mov
xchg
int
movsl
pop
fcoms
ljmp
lods
stos
lret
cltd
ja
fisubrl
cltd
hlt
les
leave
fldl
jl
call
test
sbb
mov
stc
push
inc
mov
mov
jmp
adc
sahf
fnsave
pop
push
pop
and
push
jg
repz
stc
ret
popf
enter
mov
add
fsubs
jnp
jno
adc
daa
adc
mov
push
mov
push
jns
sahf
call
es
xor
mov
rcrb
mov
push
hlt
es
jmp
pop
push
jnp
cmp
inc
mov
loope
xor
xchg
push
lret
push
cmp
add
fstl
dec
mov
out
bound
enter
or
jbe
fdivl
enter
mov
mov
sub
lret
lahf
leave
lret
stos
jnp
push
inc
and
in
adc
inc
addb
jbe
xchg
xchg
lods
mov
sub
cmp
or
jne
xor
cli
cwtl
xor
ffree
fwait
add
push
inc
jmp
xchg
into
mov
jl
push
inc
loop
andb
dec
in
add
xor
popa
and
das
lea
fstpt
jae
adc
movsb
pop
mov
fbld
aas
repz
lods
adc
loop
pop
stos
movsb
inc
mov
adc
mov
add
fincstp
es
or
push
sti
in
jne
jl
xor
insl
dec
sub
or
cvtdq2ps
test
mov
movsl
mov
push
nop
mov
xchg
loope
mov
add
cwtl
cltd
daa
cmpsl
mov
movsb
test
or
pusha
push
jo
shrl
stos
mov
repnz
scas
xchg
jge
cmp
mov
cmc
inc
aas
shll
mov
aaa
dec
scas
pop
imul
ljmp
loop
jnp
insl
mov
sbb
lods
and
jno
lock
cwtl
lods
fnstsw
hlt
orl
add
ss
mov
push
mov
in
nop
push
inc
std
fstps
mov
std
insl
add
pop
hlt
and
loop
nop
out
imul
pop
inc
gs
dec
mov
nop
popf
or
or
cmpsl
out
dec
push
je
sub
jle
xchg
dec
pushl
es
mov
mov
pushf
xchg
ficoms
das
xor
in
ret
pop
fisubs
add
outsl
sbb
test
lea
pop
pop
enter
insb
shll
jl
adc
mov
adc
push
inc
cmp
cltd
sub
add
mov
jae
xor
pop
push
fadds
jne
dec
movsl
jnp
dec
inc
mov
push
outsb
mov
stos
mov
pop
aad
notl
or
cmp
cmp
cmp
cld
lcall
mov
into
fs
subb
fildl
or
adc
cli
dec
sub
mov
lds
sub
pop
adcl
fistps
insb
icebp
ljmp
bound
push
and
sub
leave
leave
mov
loop
fdivr
loopne,pn
negb
sahf
sub
cli
and
stc
movsb
jns
movsl
lock
sbb
push
jno
je
dec
pop
mov
dec
sub
and
lahf
sub
popa
xor
incb
add
clc
cmpl
mov
add
mov
jne
and
jns
mov
push
dec
xchg
ss
add
repz
sub
xchg
pusha
cltd
ret
pushf
pop
push
into
xchg
mov
mov
std
ss
mov
ret
rcrl
jae
nop
cld
call
cmp
pop
scas
popf
cld
aam
les
test
fistpll
mov
out
mov
out
mov
add
into
mov
cmpsb
pop
sar
xor
add
cmp
inc
fdivl
aas
add
add
jne
loop
add
je
mov
mov
fisttpll
cmpsl
and
out
xchg
clc
push
xchg
mov
pusha
repnz
xchg
jbe
ds
mov
pusha
push
mov
orb
sbb
loopne
into
stos
xchg
and
mov
aas
cmp
orl
mov
and
test
call
sub
mov
xor
les
pop
lock
inc
andl
out
xor
pusha
mov
andps
xchg
or
popa
sbb
jp
int3
es
or
loopne
cmp
shl
mov
mov
xor
pushf
scas
lods
std
xchg
cmp
mov
aas
bnd
jg
lods
jno
xchg
fdivp
jmp
arpl
in
popf
ret
inc
dec
mov
mov
lods
movsl
dec
and
mov
and
pop
inc
xlat
popf
std
nop
movl
mov
mov
pop
adc
out
lahf
pop
ja
das
jecxz
out
inc
xchg
hlt
or
xchg
cwtl
mov
pop
xchg
lods
jge
mov
rcll
add
sbb
test
into
jge
xorl
adc
mov
add
xor
xor
inc
movsl
push
stc
mov
add
dec
ja
imul
jle
xchg
xor
sbb
pop
xchg
mov
cmpsl
jmp
or
iret
push
xor
dec
fldt
dec
clc
xor
sbb
pop
sbb
movsl
push
jnp
roll
insl
cltd
and
pusha
jp
or
sbb
jne
and
adc
rorb
sbb
jmp
mov
sub
or
sub
cmp
or
nop
jmp
inc
filds
cmp
xchg
sub
scas
push
mov
test
mov
rclb
xchg
stc
jl
scas
mov
jne
cmpsb
pusha
mov
or
adcl
leave
out
push
insb
xchg
mov
aam
loope
aas
pop
sub
in
outsb
mov
test
insb
pusha
mov
nop
inc
hlt
je
jne
fstpt
andl
lret
mov
rorl
ds
mov
push
cmp
lcall
mov
dec
cmpsb
hlt
out
xchg
add
push
inc
fs
lahf
into
jne
cmpsb
inc
aam
pop
fistpll
mov
movsb
sbb
mov
mov
fsubrl
scas
cmp
mov
add
mov
jg
dec
daa
mov
jmp
dec
push
add
push
xchg
notl
push
std
xor
andl
cmp
scas
jnp
or
clc
loope
mov
jnp
lret
lcall
xchg
dec
pop
pop
lret
mov
sahf
sub
and
out
test
dec
mov
je
mov
fadd
hlt
lcall
cmpsb
mov
sarb
mov
pop
stc
inc
sbbb
pop
pusha
cmc
icebp
lods
sbb
jbe
jno
xlat
mov
cmp
mov
push
jae
push
sub
loop
cmc
sbb
call
hlt
mov
add
sub
dec
lcall
jo
mov
mov
dec
cld
scas
adc
cld
jno
gs
dec
movsb
repz
dec
add
mov
sbb
inc
insb
stos
inc
loopne
or
aam
cltd
mov
pusha
mov
push
in
mov
in
push
lret
test
and
sbb
fdivs
sbb
adc
and
push
push
or
popa
push
push
push
cmp
addb
cmp
iret
aaa
pop
pop
into
cwtl
dec
xchg
xor
and
xlat
xchg
movsl
testl
test
or
adc
sahf
sub
bt
mov
aad
mov
decb
in
cld
jle
loopne
rol
jne
adc
imul
cmp
pop
mov
enter
popf
mov
adc
test
sti
mov
mov
mov
dec
lock
and
outsb
test
cld
int3
test
fisubrs
add
add
jp
or
mov
loopne
and
sbb
xor
cld
jmp
movsl
fdivrl
mov
mov
xchg
int3
xcrypt-cfb
cmpsl
and
or
mov
insl
adc
cmp
xorl
mov
and
enter
adc
std
flds
mov
sbb
jae
add
hlt
xchg
outsb
sub
pop
loop
shll
rclb
pop
inc
cmpsl
mov
adc
into
mov
js
pop
popf
roll
sahf
ret
xlat
rolb
cmpsl
jno
pop
ret
rol
adc
jp
mov
mov
cwtl
xchg
iret
mov
fisubrl
jne
inc
fwait
hlt
sub
enter
dec
out
xor
call
sti
repnz
outsl
mov
aaa
adc
bound
sbb
fcoml
jne
movsl
mov
adc
nop
out
sub
mov
movb
or
jne
data16
cli
pusha
adc
lock
imul
inc
imul
sub
int
stc
add
jns
mov
mov
or
cmp
nop
dec
push
bound
stos
push
xchg
xchg
mov
movsl
jmp
jb
cmp
leave
fdivl
cmp
shrb
jns
pop
add
mov
cwtl
add
or
or
in
sarb
push
push
inc
addr16
out
nop
xor
inc
fsubl
push
or
push
cmc
inc
in
xchg
cmc
repnz
imul
dec
fwait
push
xchg
scas
and
mov
movsl
loopne
test
or
mov
test
hlt
sub
or
add
cmpl
cwtl
sti
fisttps
fs
push
jne
lahf
push
testl
pop
ds
jge,pt
test
in
std
int
sbb
jl
xchg
enter
push
test
mov
mov
nop
mov
shrb
insl
xchg
test
call
pop
xchg
cmp
movsl
mov
aad
xchg
mov
xchg
stos
mov
sbbl
icebp
shrb
es
andl
insl
pop
xor
stos
push
adc
push
lods
shlb
or
aas
fldenv
hlt
in
inc
add
xor
in
scas
scas
mov
into
scas
das
lods
jne
sub
sbb
mov
pop
adc
and
jmp
inc
loope
cmc
add
cmp
ffreep
cmp
jae
pop
ret
aad
or
sbb
stos
pop
inc
jb
adc
mul
loopne
iret
js
cltd
loop
imul
in
inc
jmp
xchg
sti
mov
mov
add
aaa
xorb
mov
cmpsb
cltd
mul
pop
sti
add
jecxz
pop
mov
imul
mov
xchg
jne
sub
shrb
xor
and
out
xchg
push
add
jnp
rcr
or
sub
cs
or
sbb
clc
sbb
mov
pop
lods
jle
adc
lret
ret
cmpsb
inc
mov
aam
mov
fmuls
pop
out
mov
movsb
add
xlat
inc
andb
pop
sub
xchg
cs
sub
stos
loop
popa
mul
xor
out
cmpsl
lea
nop
inc
adc
rorb
cmp
lahf
dec
pusha
jmp
je
adc
jp
mov
aas
inc
jge
cmp
mov
cmp
xchg
loop
lock
mov
lret
cmp
fwait
iret
mov
push
fbstp
clc
orb
or
test
rcrl
aad
sub
popa
aad
sbb
push
push
repnz
movsl
mov
loope
subl
in
push
mov
inc
sbb
pop
adc
mov
mov
jnp
jecxz
div
or
mov
frstor
sarb
or
jno
and
push
add
sbb
out
fdivl
out
rcrb
mov
stos
out
adc
cmp
jne
sahf
cwtl
jg
cmc
cltd
xor
sub
or
mulb
fldenv
mov
fs
movsb
mov
sbb
cs
inc
mov
test
inc
xchg
sbb
adc
andb
cmp
mov
rcr
xchg
test
dec
and
repnz
adc
imul
xlat
test
add
es
jne
pop
test
lods
mov
jne
or
call
nop
shl
cltd
aad
les
jo
cltd
push
aad
inc
mov
mov
cmpsl
mull
int3
les
fsubl
sbb
mov
sbb
inc
xor
mov
dec
xchg
xchg
jne
xor
push
movsb
mov
inc
sarb
mov
popf
inc
movsl
adc
push
cmp
push
mov
mov
sub
add
xchg
flds
sub
test
cmp
rolb
xchg
push
sub
fsubrl
movsb
fisubs
add
pop
mov
push
out
sub
xchg
loope
and
mov
jae
loop
scas
cld
inc
sbb
call
scas
add
sub
dec
sub
xor
fildl
xor
pop
sub
pop
gs
mov
dec
ret
imul
dec
mov
test
dec
das
leave
mov
inc
subb
cld
insb
pop
bound
jg
xor
xchg
cmp
cmp
or
add
in
fucom
pop
cmp
mov
lea
scas
arpl
fadds
enter
jg
fnsave
push
ret
jb
inc
xchg
inc
sqrtps
inc
mov
shrb
pop
divw
mov
mov
jne
in
pop
mov
dec
mov
sub
sarb
cwtl
call
imul
jne
sub
stos
mov
inc
cmp
add
sbb
sbb
std
jge
adc
pop
pop
cmpsb
mov
lcall
push
push
shrl
pop
hlt
xchg
lods
fadds
sahf
aas
int
das
daa
xchg
jge
aaa
add
out
movsl
add
lret
movsl
test
out
inc
mov
mov
aas
leave
sbb
jmp
pop
mov
mov
dec
jbe
lcall
jae
repnz
xlat
leave
sbb
cmp
fiadds
inc
leave
adc
mov
lret
or
mov
mov
cld
xorb
and
xor
cli
icebp
xchg
hlt
pop
leave
or
ret
dec
outsb
adc
inc
jle
jns
mov
popa
lret
loopne
jmp
stc
std
sub
xor
rolb
shll
jle
push
sarb
adc
lcall
mov
sarb
pop
add
xor
dec
ljmp
or
xchg
stos
ss
out
orl
imul
outsb
push
insl
je
aam
and
inc
jne
push
sbbb
lea
or
add
xchg
pusha
xor
test
je
cmp
dec
outsl
fstps
xchg
lock
das
mov
sub
mov
jl
enter
or
sti
ss
inc
lret
repz
test
out
stos
lret
jmp
les
and
cli
aaa
lret
jne
jg
sub
xor
shl
sbbl
fcomi
pop
mov
shl
loop
sbb
mov
mov
mov
hlt
sbb
ss
mov
fsubp
outsl
sti
insb
dec
das
adc
pop
lods
aad
mov
daa
mov
sbb
clc
popf
jle
adc
add
enter
test
shl
insb
les
dec
mov
fwait
outsb
jmp
sbb
push
ficomps
test
jbe
pushf
repz
sub
push
popa
jne
sbb
gs
jno
mov
adc
mov
leave
outsb
cmpb
inc
out
jne
sbb
mov
push
mov
sub
or
mov
sub
imul
insb
adc
mov
sub
xlat
mov
jb
mov
sbb
shrb
lcall
mov
add
inc
mov
insl
adc
push
and
imul
sbb
mov
fstpt
add
mov
shrl
loope
insl
sbb
inc
sub
xor
negb
xor
hlt
dec
gs
rorl
cmp
pop
pop
loop
jmp
jmp
out
hlt
stos
dec
popa
mov
cmp
push
mov
lahf
repz
xorl
xlat
jo
and
push
add
xor
aas
test
movsl
fnstsw
push
pop
xchg
outsb
cwtl
movsl
mov
test
pop
add
inc
push
jno
inc
test
daa
pushf
and
adc
inc
flds
lcall
std
out
add
rolb
pop
mov
mov
cwtl
adc
loop
xchg
pop
inc
mov
xlat
andb
add
lahf
push
ror
cltd
hlt
aam
sbb
jne
xchg
mov
add
loop
aas
xchg
pop
adc
pop
adcl
ljmp
aad
incl
in
xchg
jp
mov
adc
int3
test
inc
mov
subl
aad
xor
dec
loope
pop
cmp
cli
sbb
or
adc
add
in
or
cli
push
ss
jbe
out
cltd
add
lret
mov
fs
push
dec
test
leave
or
and
inc
pop
sub
jg
imul
push
scas
sbb
pop
adc
adc
cmp
cmp
clc
push
push
int
or
cld
imul
sbb
mov
and
and
mov
pop
inc
in
enter
cwtl
mov
add
sar
ror
fdivl
mov
cmpl
cmp
push
cld
ja
test
shrb
loope
sub
jl
mov
shlb
rorb
out
dec
or
adc
int3
loop
or
push
lods
repnz
inc
cmp
addr16
add
inc
mov
popf
inc
test
dec
cld
lret
xor
andl
adc
and
cmp
mov
sbb
cmp
dec
mov
cmp
repnz
scas
push
add
cld
sbb
mov
std
pop
add
add
inc
mov
pop
test
aas
mov
add
sbb
popf
movsl
xorb
rclb
xor
sub
out
pop
xor
aam
ret
les
mov
cmp
xor
ljmp
dec
cmpb
insl
loop
cmp
jge
neg
jae
or
in
sub
jle
pusha
int3
xor
push
jg
bound
pop
push
test
mov
pusha
xor
dec
lock
cmpsl
sub
repz
jo
mov
push
ss
scas
pop
push
call
sti
jmp
adc
lods
scas
xor
add
pop
sti
shr
ret
dec
mov
push
mov
inc
adc
into
inc
sub
mov
xchg
mov
test
rcrb
or
adc
push
imul
pop
mov
lds
jno
hlt
arpl
jne
mov
xchg
push
and
stc
mov
test
dec
in
movsl
jmp
mov
mov
cli
push
mov
sahf
sub
ror
xorl
xorb
stos
shll
in
stos
hlt
xchg
jp,pt
aam
inc
loopne
xor
jns
add
pop
testl
mov
or
lods
push
pop
outsl
mov
sub
es
mov
jns
cwtl
adc
cs
sti
xchg
gs
jle
mov
inc
xchg
sub
or
ss
orl
insb
dec
sub
mov
repnz
mov
imul
inc
xchg
outsl
cmc
daa
scas
jnp
and
insb
mov
inc
xor
or
imul
lods
std
xchg
stos
xchg
outsl
fs
stos
pop
shlb
sti
cmp
jnp
loop
push
jle
lods
sbb
mov
cli
lcall
sub
xlat
enter
jno
add
xchg
sub
jg
inc
decl
into
incb
insb
push
cwtl
and
fucomip
cmc
add
cs
inc
and
lret
inc
in
xchg
sub
xor
testb
push
jo
cmp
xchg
aad
xchg
ret
pop
xchg
lahf
subb
iret
mov
and
idiv
imul
pop
incl
popa
hlt
nop
mov
icebp
pop
addb
mov
ret
dec
and
inc
fldcw
pushf
int
pop
sub
cmp
out
loopne
fisttpl
sbb
icebp
and
xchg
sub
iret
adc
inc
lcall
xorb
sub
adc
lods
adc
scas
lret
in
pushl
mov
mov
gs
rorl
pop
and
test
push
repnz
shlb
dec
ret
pop
jno
movb
incl
rcll
enter
cmp
mov
popa
std
pusha
xor
lcall
cld
arpl
fmull
xorb
jno
aam
ret
arpl
mov
pop
popf
cmp
fcoml
mov
icebp
inc
inc
push
inc
repz
ret
test
fildl
cmpsb
pop
leave
lea
mov
leave
jns
into
test
and
addb
scas
xchg
adc
cli
sti
add
xchg
xchg
dec
mov
xchg
and
je
push
push
jle
push
movsb
insb
mov
mov
ret
mov
data16
out
pop
mov
inc
xor
addb
jmp
push
mov
and
mov
push
cmp
jne
mov
lret
and
inc
inc
loopne
pop
add
cltd
or
loop
xchg
jbe
inc
and
pop
repnz
hlt
flds
mov
cmc
sub
orb
xchg
in
mov
add
es
in
add
fdivrs
add
out
sbb
hlt
inc
push
stc
dec
stos
iret
ss
icebp
lret
aaa
push
push
mov
pop
movsb
pop
iret
add
push
movsb
jne
and
jle
mov
dec
mov
jae
mov
imul
rclb
xchg
or
pop
jns
ja
ret
jne
jmp
call
xor
xor
testb
pop
inc
ss
icebp
jecxz
fldl
pop
mov
inc
in
push
int
neg
stc
js
gs
inc
test
sbb
stc
jg
out
cmpb
and
nop
rorb
adc
rolb
pop
les
inc
xchg
and
xchg
sub
mov
jne
sbb
in
scas
push
popa
xor
mov
jl
pmuludq
mov
mov
loopne
xchg
cltd
stc
dec
mov
sbb
divl
movsb
xor
negl
arpl
add
nop
movd
or
inc
xor
xlat
lcall
mov
jne
les
outsb
push
or
je
jmp
adc
mov
add
pop
inc
fbld
lea
dec
hlt
out
dec
loopne
add
jp
adc
push
dec
mov
sub
movsl
pop
dec
mov
fimuls
add
mov
stc
leave
sahf
jns
movsb
aas
cmp
imul
jnp
jg
xchg
nop
lds
cld
sub
jo
adc
dec
and
clc
and
jne
lahf
xchg
fdivrs
xor
lods
ficoms
add
cmp
jb
cmpsb
dec
scas
daa
xor
loopne
inc
push
inc
movsl
mov
jbe
pop
push
xchg
sbb
movsb
jle
add
mov
addb
in
xchg
nop
sbb
jmp
mov
mov
stc
sarb
or
rorb
pop
push
sbb
xor
push
pushf
mov
pop
dec
fs
mov
and
mov
sub
cmp
push
lods
fsubl
dec
std
sbb
dec
push
cld
imul
mov
mov
leave
mov
jbe
or
das
cmc
in
inc
movsl
rcrl
loopne
imul
add
pop
lahf
pop
movsb
xchg
mov
xlat
shlb
mov
adc
sub
dec
aam
jmp
loop
aad
outsl
and
daa
cmp
test
clc
in
call
ret
inc
sub
dec
xor
pop
inc
bound
test
xchg
jnp
and
jle
lds
jl
stc
or
lods
test
scas
pop
lock
inc
mov
mov
mov
jmp
jnp
sub
and
jnp
dec
add
pusha
xchg
loopne
or
ss
stc
dec
es
popa
cmc
pushf
inc
mov
push
add
stos
movsb
scas
test
mov
xchg
dec
lahf
mov
mov
movsl
adc
adc
and
sub
mov
mov
outsl
pop
inc
or
inc
dec
les
shll
cld
sbb
pushf
mov
outsb
pop
sub
popa
into
xchg
popa
jne
xor
repnz
mov
cmpsl
pop
out
test
hlt
lmsw
sbb
pop
mov
add
leave
add
inc
pop
add
testb
lea
xchg
divl
pop
push
enter
pop
sub
inc
idiv
add
inc
jne
push
xor
shll
mov
xchg
jmp
pop
xor
jg
xorb
hlt
sub
sub
or
ret
xchg
mov
test
add
dec
or
xchg
std
imul
sbb
rclb
fstpt
nop
std
push
sti
notb
mov
jg
push
movsl
hlt
mov
pop
dec
arpl
xchg
fsubrs
push
das
rcr
and
push
pop
ret
cld
add
mov
fcmovnb
adc
adc
sub
lret
push
stos
xchg
pop
lds
hlt
loope
cmc
ljmp
mov
into
icebp
inc
sahf
jne
imul
inc
xlat
fdivrl
stos
dec
jle
fbld
mov
push
js
jns
clc
lret
lahf
sub
add
lahf
je
adc
jne
popa
cwtl
lret
mov
andl
test
mov
cmp
lret
inc
sti
push
movsb
popf
cwtl
cli
hlt
pop
xchg
cmc
cs
popf
mov
notb
pop
in
sub
cmp
fiadds
mov
mov
imul
inc
movsb
cmp
mov
jmp
stos
jp
out
adc
scas
mov
mov
nop
mov
icebp
call
imul
jl
mov
aas
std
push
sub
fistpl
enter
test
in
outsl
repz
and
enter
test
jg
add
pop
add
test
dec
gs
pop
outsl
jl
cld
fadd
test
push
popa
pop
jp
jne
mov
stc
loop
sub
adc
xor
out
je
idivb
xchg
loop
mov
push
xchg
jo
stos
outsl
push
cmpsl
pminub
xor
stc
call
out
adc
leave
add
xor
or
scas
loope
cmp
jge
fs
gs
in
jmp
pop
sbb
popa
pop
sbbl
enter
sub
dec
in
xchg
jmp
lahf
out
adc
xchg
add
adc
inc
push
movsl
mov
add
dec
jmp
push
mov
xchg
hlt
cs
jecxz
mov
mov
les
mov
shll
imul
xchg
dec
aaa
sahf
lcall
fstpl
adc
es
shll
enter
inc
daa
jo
mov
nop
daa
mov
add
test
enter
jbe
js
mov
inc
clc
fs
mov
shlb
mov
push
jmp
and
lods
jp
icebp
jl
mov
scas
js
add
loopne
sarb
push
scas
mov
sbb
cs
hlt
jmp
mov
sbb
pop
std
imul
xor
enter
xor
and
js
and
loope
fisttpl
stos
push
fldlg2
nop
into
mov
xchg
std
icebp
cmp
push
or
loope
sub
sub
xchg
ds
add
insl
xor
mov
push
and
fdivl
mov
jg
dec
jge
add
cmp
dec
sbb
push
xchg
jg
cli
repz
jne
dec
push
stos
sahf
ffreep
inc
xchg
dec
je
inc
xlat
in
xor
pushw
in
inc
insl
sub
jo
jno
jmp
mov
mov
pop
jmp
outsb
add
cmp
aad
cmpsl
repnz
outsl
ja
dec
xchg
notb
dec
xchg
and
xor
fcompl
pop
sub
pop
js
test
popf
int3
aad
mov
pop
adc
js
arpl
aas
mov
shl
xor
adc
scas
enter
xor
mov
jo
repz
stos
mov
inc
test
xlat
shll
jg
test
pusha
cltd
cli
mov
add
out
xchg
jge
jmp
sti
sub
add
mov
sbb
andb
or
pop
test
mov
jle
and
jnp
mov
scas
shrl
dec
push
push
sub
test
mov
movsb
mov
hlt
outsb
lahf
loope
outsb
xlat
mov
adc
hlt
pop
and
mov
andl
loop
cmpsl
nop
rclb
jnp
mov
push
pop
or
pop
dec
out
sbb
js
dec
or
jecxz
mov
aas
mov
nop
addr16
fs
cmp
movl
push
pop
lods
in
or
jl
dec
xlat
out
mov
repz
adc
into
loopne
ljmp
xchg
shrl
add
popa
fdivr
addr16
enter
pop
mov
test
push
cmpsl
mov
cmc
push
sub
test
hlt
mull
cmp
ljmp
xchg
or
xchg
inc
mov
jl
insl
xor
mov
cld
adc
pop
push
cld
pusha
push
repnz
or
xchg
add
hlt
mov
scas
repz
add
jle
ret
add
fs
sub
fcompl
cmp
mov
fcom
and
mov
and
cs
pushf
jmp
jo
pop
jmp
jle
int3
mov
cli
cmpsb
test
leave
cmp
pop
push
sahf
xchg
inc
add
popf
dec
stc
mov
rcrb
or
xchg
xchg
xor
or
add
sti
cmp
cmc
hlt
cmpsl
xorl
std
mov
push
jbe
mov
xchg
jg
jp
sub
mov
jge
aad
mov
outsl
cltd
sub
mov
jge
rorb
loop
movsb
cmpsb
dec
sbb
mov
js
ja
imul
mov
rcrb
movsl
adc
sub
mov
xor
jmp
jle
dec
add
pop
cmpsb
xor
test
into
pop
ja
xchg
pushf
test
out
je
xor
add
push
test
adc
out
cmpsb
jns
repnz
mov
inc
rcll
pop
dec
adc
adc
mov
clc
sbb
insl
loopne
mov
or
loopne
xor
jle
jbe
adc
push
inc
mov
out
scas
movsb
fstpl
fnstenv
leave
icebp
mull
mov
push
mov
xor
jnp
jmp
fldl
jecxz
das
enter
inc
jo
stc
gs
pop
lods
in
lock
jne
dec
xor
pop
out
inc
xchg
adc
jg
sub
mov
pop
jmp
outsl
ret
xchg
das
lods
mov
arpl
xchg
cli
xor
or
xchg
mov
outsb
mov
pop
and
dec
dec
and
mov
test
mov
inc
sub
dec
repz
mov
push
scas
xchg
push
fisubs
xchg
mov
inc
js
data16
jmp
mov
xchg
pop
push
cmp
push
push
adc
mov
loopne
das
inc
push
sbbl
sub
out
jne
adc
inc
shlb
push
in
pop
and
lcall
hlt
fucomp
call
dec
and
cmc
rcll
imul
nop
out
inc
jb
and
push
lods
adc
jns
lods
xor
mov
and
push
hlt
or
inc
das
mov
inc
pop
popa
mov
fs
inc
mov
xchg
jne
inc
popa
imul
pop
sub
movsb
cmp
mov
lods
and
roll
xor
or
sbb
in
gs
jne
nop
jle
sub
adc
sub
icebp
movsb
mov
sub
xchg
sub
push
adc
ss
outsl
mov
mov
add
mov
rcrb
lods
xorl
lods
test
xchg
fbstp
jnp
and
movl
inc
in
movsb
ror
add
jne
lret
sahf
dec
xor
sub
loop
or
subl
aad
stos
fsubl
shr
jb
jns
nop
xchg
mov
mov
lods
imul
jp
daa
ret
pop
mov
hlt
or
sbb
xor
mov
adc
mov
ror
fwait
xor
das
dec
sahf
jae
int3
clc
hlt
fwait
sbb
pushw
inc
test
adc
push
dec
bound
xor
sub
hlt
int
inc
dec
sub
jnp,pn
jp
pop
sub
sahf
hlt
or
popa
in
and
add
pop
jo
or
xchg
push
test
or
adc
movsl
cmp
jno
inc
xor
sbb
adc
mov
or
lods
adc
sub
insb
push
icebp
mov
mov
mov
jne
popa
inc
sub
push
fadds
pop
inc
dec
jmp
jmp
jnp
and
cltd
add
in
fmull
in
js
add
jl
lods
icebp
add
in
adc
xor
push
jmp
stc
cmpsb
mov
lcall
inc
test
ret
push
out
cmp
insl
pop
jne
es
add
and
nop
popf
hlt
sahf
sbb
adc
sbb
or
dec
mov
jo,pt
cli
hlt
test
jecxz
stos
mov
inc
mov
fnstsw
dec
and
ss
orl
push
adc
lds
dec
inc
cmp
sub
pop
push
pushf
dec
mov
or
gs
sbb
cmpsb
add
dec
in
pop
sti
fstps
scas
out
test
adc
xchg
clc
nop
pop
imul
and
repnz
sahf
fcomps
insb
cmp
fwait
mov
mov
jo
addr16
call
jg
out
popf
sub
pop
out
add
roll
mov
add
hlt
adc
lds
cli
movsl
dec
js
sbb
test
sub
xchg
jecxz
push
mov
out
mov
or
dec
and
jl
rcr
mov
jmp
sbb
and
cmc
out
mov
rorb
int3
sub
mov
or
xchg
jae
push
mov
jmp
xor
dec
sbb
jnp
shrl
lahf
sbb
jmp
loopne
dec
fcoms
out
lock
aad
pop
ljmp
add
movl
lret
xchg
adc
mov
mov
sti
or
adc
nop
arpl
bound
or
xrelease
mov
mov
inc
fbstp
pop
test
movsl
icebp
nop
lea
insb
stc
lods
cs
pop
mull
cli
push
sbb
dec
sub
mov
dec
mov
mov
cmc
outsl
dec
jbe
add
data16
rolb
mov
mov
data16
sarb
aad
sti
adc
mov
popa
or
mov
shlb
movsb
enter
js
inc
inc
arpl
adc
mov
sbbl
push
sub
leave
mov
aaa
mov
das
int3
in
pushf
mov
inc
rorb
push
out
inc
popf
das
push
jp
inc
test
outsl
mov
test
adc
pop
cld
les
dec
test
cmpsb
xchg
fbstp
adc
arpl
xchg
push
xchg
pop
inc
sbb
les
stc
or
sub
jne
sti
orl
adc
mov
mov
das
xor
arpl
icebp
jmp
movsb
std
inc
cld
inc
data16
add
leave
loopne
dec
loop
cld
mov
dec
cmpl
mov
pushf
sahf
in
inc
sub
jl
pop
and
es
cwtl
jae
mov
repz
bnd
call
lods
pop
mov
mov
inc
xchg
shr
mov
scas
leave
roll
mov
movsl
sub
push
add
xchg
jne
adc
lea
pop
fisubl
loopne
aaa
stc
pop
cmpsl
outsl
push
xlat
inc
push
imulb
fsubp
mov
mov
aam
sub
popa
mov
dec
pop
jle
lock
scas
push
call
cmc
sub
dec
xor
sub
or
addb
sti
xlat
jb
pop
jne
inc
lahf
and
jbe
jmp
jne
jo
push
mov
add
leave
fbld
aaa
cld
cmc
xorps
int
mov
scas
andl
mov
mov
ficoms
push
jb
lods
adc
sub
das
loop
adc
sub
repnz
stos
nop
xchg
inc
push
das
enter
pusha
jp
push
arpl
mov
pusha
in
int
mov
into
mov
sbb
adc
decl
loop
xchg
sub
and
in
adc
cmp
and
negl
mov
int
push
dec
jnp
fsubl
xor
mov
inc
enter
int3
xchg
mov
insl
mov
xchg
push
cwtl
call
push
jle
fsubl
sbb
push
jbe
jne,pn
push
lock
push
cmp
mov
cmp
cwtl
push
or
loope
in
movsl
fnstcw
or
scas
jae
mulb
jno
psubsw
push
movb
jecxz
cmc
add
xchg
into
stos
xchg
scas
push
filds
mov
fsubp
xor
cs
fldenv
push
cmpsl
inc
dec
cmp
dec
inc
imul
mov
inc
rorl
inc
gs
mov
mov
and
sub
mov
sub
clc
jo
rclb
dec
in
out
push
leave
scas
pop
mov
mov
or
outsb
jo
mov
mov
xlat
cltd
iret
inc
das
clc
push
dec
imul
xchg
sub
or
loopne
stc
popf
stc
ds
jne
int3
jnp
cltd
add
jl
fs
leave
dec
mov
cltd
ret
xchg
imul
add
jne
lcall
andb
dec
sbb
cmpb
mov
test
adc
out
or
pop
pusha
push
stos
mov
scas
stos
dec
mov
sub
ds
frstor
xchg
sub
jns
idiv
stos
es
stos
xchg
add
xor
sub
icebp
fstl
leave
adc
test
jl
in
push
jnp
fnstenv
inc
loop
xchg
cmc
mov
xchg
and
xchg
inc
mov
iret
mov
pop
incb
outsl
insl
int
xor
sub
rclb
cmp
lock
jg
clc
jge
bound
enter
int
sub
loop
mov
sbb
inc
mov
or
xor
loop
cmpsl
push
push
mov
mov
add
sub
jge
fst
add
jns
in
out
and
mov
xchg
fldt
sub
mov
xchg
lret
pop
aas
arpl
or
inc
lret
std
scas
inc
inc
adc
loope
xor
test
fs
fsubrs
int3
daa
pusha
out
lods
add
mov
inc
stos
and
push
test
inc
xchg
bnd
out
xchg
pusha
sti
mov
xor
les
in
dec
adc
push
lcall
shrl
enter
sub
ljmp
fiaddl
add
xchg
inc
jae
and
mov
arpl
mov
inc
sub
test
scas
inc
xchg
lcall
mov
xor
and
add
xchg
scas
lods
xor
add
mov
mov
repz
bnd
out
cmp
shrb
or
dec
and
ss
pop
add
cmp
or
push
pop
sbb
mov
adc
stc
ds
test
daa
fistpll
je
xchg
sar
stos
shrl
cld
fldt
mov
cs
popa
and
adc
xchg
jb
mov
fadds
repnz
mov
mov
add
lahf
std
cmp
jb
fxch
sti
sub
xchg
ror
into
push
cltd
sbb
cmpsl
dec
pop
mov
aas
or
mov
pop
jne
jmp
inc
shrb
stos
adc
sub
xchg
decb
incl
mov
movl
xor
nop
jb
mov
dec
mov
pop
pop
mov
pop
fbld
fucom
sbb
es
jno
jnp
nop
add
daa
lods
leave
and
mov
scas
pop
lock
jne
xor
jp
test
xchg
and
repnz
push
xlat
inc
mov
test
shld
push
push
fsubr
xorl
insb
repnz
adcb
lret
insl
pop
mov
shlb
incl
aas
mov
add
adcl
test
test
or
hlt
xchg
sbb
hlt
scas
dec
cwtl
insb
stc
call
adc
mov
sbb
rclb
jnp
add
je
push
std
cmp
mov
lods
popa
rcll
sub
dec
xor
loop
out
int
pop
loop
subl
int
inc
xor
xor
inc
fisubs
sub
mov
decb
and
xor
out
xchg
test
cltd
dec
out
into
orb
aas
sbb
mov
popa
ss
sbb
inc
lret
mov
int
dec
insb
fsubrl
mov
in
std
fsubrs
pusha
pop
imul
push
pop
or
mov
sbb
mov
aad
pusha
loope
lcall
mov
xor
test
mov
arpl
pop
stc
loop
adc
inc
push
test
pop
hlt
aaa
out
iret
lcall
imul
push
movsl
sub
adc
scas
int
in
xchg
and
adc
dec
bound
dec
sti
inc
or
sti
bound
dec
das
enter
sbb
pop
popf
leave
xchg
lcall
and
jne
add
leave
scas
push
sub
out
mov
jo
push
add
mov
cmc
xorl
mov
les
push
mov
dec
int3
mov
xchg
and
mov
fisttps
or
cli
lret
call
xchg
or
pop
lods
sub
lods
lahf
cmp
jg
xchg
add
jge
movsb
jecxz
js
test
add
mov
neg
sbb
pop
mov
dec
loopne
mov
xchg
leave
xchg
xchg
hlt
mov
cli
pop
mov
inc
and
movsl
cld
std
addr16
icebp
dec
mov
dec
sub
decl
aad
mov
pop
das
mov
sbb
jg
cmp
loopne
dec
mov
cmc
popa
lret
enter
or
xchg
into
int3
jecxz
xchg
pop
stc
xorb
insl
xorb
fadds
cmc
loopne
xchg
add
mov
push
adc
gs
and
stos
mov
jns
jae
or
inc
fs
pusha
cmp
sub
jg
jns
sbbl
cld
lods
lds
and
popf
adcl
lahf
mov
pop
inc
sbb
dec
cwtl
inc
mov
cmp
dec
pop
mov
dec
imul
aaa
mov
mov
ds
imul
fildl
dec
outsb
daa
popf
out
pop
inc
adc
xor
push
xchg
mov
inc
jg
mov
into
fildll
rorl
inc
adc
cmc
jmp
sub
inc
pop
dec
and
inc
enter
fnstcw
ss
lods
xchg
mov
fisubs
cmp
xchg
inc
mov
lea
sbb
shr
mov
out
test
inc
lahf
dec
sbb
and
mov
sbb
insl
movsb
sbb
sub
imul
cmp
or
cmpsb
inc
mov
xor
imul
movl
pop
shlb
pop
pop
fcoms
mov
mov
ret
hlt
aaa
aas
push
or
scas
int3
cmpb
cli
cmp
jp
mov
xor
jle
sub
loop
mov
stos
shrl
adcl
add
dec
imul
xchg
mov
insb
xorb
adc
jl
out
iret
pop
mov
rcr
cmpsl
adc
lret
aad
jmp
jmp
lods
orb
and
xor
lds
pop
jno
jge
push
pushl
and
mov
test
sbb
sbb
sbb
xor
fsubp
nop
sbb
test
cmp
mov
orl
xchg
rcll
jne
nop
cld
cmovae
fdivrs
xchg
add
jne
popa
or
or
cld
loopne
jne
and
mov
lds
lods
leave
mov
sbb
nop
mov
adc
sbb
repnz
lret
xchg
cmp
pop
adc
adc
out
ljmp
mov
jno
call
adc
xor
pop
cmpsb
lahf
and
cs
in
scas
pusha
push
mov
clc
mov
inc
fwait
div
ss
orb
or
push
into
fdivr
or
jg
xchg
inc
cwtl
in
fucomip
lods
testl
xchg
dec
sahf
lret
fildl
mov
xchg
cmc
pop
scas
dec
xor
in
lret
loopne
inc
mov
inc
loop
test
mov
mov
loop
adc
cmp
jne
push
stos
push
jns
out
imul
neg
inc
push
out
dec
inc
imul
inc
les
sarb
jo
or
les
in
jne
int
stos
xor
stos
xchg
aad
inc
pop
push
into
stos
idiv
xchg
fdivrl
dec
cmpsb
mov
sub
mov
push
xchg
push
ror
inc
push
mov
lock
in
jge
imul
fcompl
in
push
sub
addl
pop
adc
mov
pop
cmpsl
or
xlat
hlt
adc
push
testl
push
jecxz
pop
lock
jne
xor
push
cmpsb
lcall
iret
std
sub
lret
dec
sahf
dec
mov
movsl
fiadds
and
cld
incl
jle
icebp
jns
add
mov
hlt
rcrl
enter
movsb
sbb
mov
loope
inc
add
out
into
lds
inc
adc
jae
repnz
es
inc
pop
mov
sarb
pushf
xchg
jo
sub
mov
mov
cs
divb
mov
mul
fmuls
pop
cld
jno
cmp
cmc
hlt
in
pop
call
adc
das
rclb
hlt
lods
cmpsb
ficompl
out
pop
stos
add
sub
loopne
cmp
mov
add
push
add
lret
add
arpl
adc
inc
repz
rcrl
push
mov
mov
sub
leave
imul
imul
sbb
dec
fildl
mov
hlt
loope
mov
jne
mov
mov
mov
mov
scas
cmp
hlt
push
inc
dec
add
xor
js
aad
or
sub
or
shl
dec
sub
pop
sahf
shl
push
addr16
jne
add
pop
add
mov
loop
xchg
jnp
shlb
movsb
push
aas
inc
stos
mov
clc
mov
ss
je
push
mov
loop
orb
sub
icebp
xrelease
jmp
dec
fnstenv
in
hlt
sbb
or
mov
sub
xchg
jecxz
inc
dec
sbbb
jne
sbb
add
jo
in
sub
filds
fldl
pop
mov
push
adcl
lds
test
call
mov
repz
adc
loopne
mov
sbb
jno
out
fists
stc
sbb
enter
enter
stos
outsl
pop
iret
shrl
clc
lods
jns
mov
testb
aas
data16
mov
dec
inc
and
add
repnz
outsl
loopne
dec
push
fsubs
dec
jns
pop
jb
cmp
jecxz
jb
mov
and
jno
mov
inc
mov
ljmp
sahf
or
shll
pop
jne
sub
lods
cld
or
aam
repz
pop
gs
add
pushf
xchg
lahf
cwtl
and
sbb
adc
pushf
or
test
aad
add
arpl
hlt
sbb
push
imul
xchg
out
scas
movsl
je
add
loope
bound
cmp
hlt
aas
orl
xlat
mov
js
jmp
mov
cmp
add
jge
lret
test
and
push
mov
scas
xchg
and
les
cltd
sbb
jne
add
mov
sbb
sbb
jne
mov
insb
push
fucom
cmp
testb
rorl
into
cmp
sbb
pop
lret
xchg
mov
mov
lret
insl
sub
and
cmp
incb
mov
dec
decl
lret
mov
mov
ds
nop
push
pusha
jecxz
fildl
shlb
xor
dec
test
movd
mov
jmp
cltd
pusha
int
push
inc
fs
mov
push
and
scas
mov
aas
rcrl
xchg
scas
xor
xchg
lcall
int
aas
stos
jp
xchg
shlb
mov
adc
jl
bound
lcall
lods
cmc
hlt
pop
out
inc
inc
out
xor
fs
jae
cwtl
rsm
into
leave
mov
mov
fadd
stos
scas
sbb
jne
sahf
pop
dec
pop
popf
push
sbb
bound
dec
push
enter
rcll
lods
xlat
fwait
jmp
fiaddl
stos
push
mov
cmpsl
add
enter
pop
sub
mov
popa
inc
fisubs
cmp
push
push
mov
sbb
popf
sbb
ss
js
sahf
push
jo
jns
pop
loopne
mov
add
insl
xchg
and
add
adc
xchg
add
test
or
push
mov
nop
xchg
outsl
out
cmp
sub
stos
popf
sub
stos
es
fsts
fst
push
repnz
add
inc
dec
pop
lods
call
inc
adc
and
mov
sbb
mov
add
inc
push
inc
sbb
test
xor
movsb
adc
iret
inc
lcall
in
inc
stos
enter
sub
lock
in
daa
inc
das
mov
add
mov
jo
aam
dec
pop
add
push
sub
ljmp
hlt
and
scas
arpl
or
mov
pop
mov
cmp
xlat
push
or
out
push
mov
sbb
rcrb
hlt
sbb
dec
out
xor
dec
mov
add
pop
add
icebp
lods
adc
and
cmp
cwtl
jno
sbbb
cmp
xor
xchg
cltd
dec
outsb
inc
jb
loopne
cmp
jmp
or
dec
and
sub
inc
inc
add
or
das
or
int3
jle
ret
mov
adc
pushf
lock
mov
lret
add
mov
lock
inc
push
xor
and
arpl
xorb
jle
adc
les
jns
add
fists
mov
rorl
pop
mov
fistpl
es
push
mov
pop
mov
add
cli
inc
jne
xor
jp
xorl
push
pop
pop
popf
xchg
jp
dec
mov
jo
dec
and
mov
jo
push
sbb
enter
or
mov
xor
fildl
jp
mov
pop
daa
fiadds
push
xor
xchg
in
je
roll
dec
iret
xchg
or
dec
popa
cmp
les
push
xchg
arpl
sbb
push
minps
std
mov
sub
movsb
jb
mov
les
test
roll
jnp
out
pop
imul
enter
ret
jg
xchg
mov
inc
jbe
fstps
inc
enter
adc
imul
aam
in
lcall
mov
push
adc
xor
fbld
mov
imul
sahf
fwait
inc
fisttpl
mov
leave
dec
cmp
cmc
stc
ret
jle
nop
xchg
mov
adc
cli
xor
push
push
add
jg
popf
inc
stos
das
cs
cwtl
jge
addr16
insb
popf
jecxz
mov
push
push
mov
and
push
out
jle
xor
les
cli
jno
mov
pop
pop
mov
movl
leave
adc
push
dec
xor
inc
sbb
inc
mov
loopne
cli
data16
mov
test
rorl
cmp
test
sbb
mov
rorb
pop
mov
aam
pop
or
jnp
xchg
sar
lcall
lock
sbb
cli
movsl
inc
aaa
and
pop
pop
repnz
les
inc
mov
lea
cld
cli
mov
test
push
mov
or
test
orb
fsts
push
scas
xchg
jno
mov
cmp
test
or
mov
prefetch
rorl
cmpsb
add
sub
decl
jns
mov
and
add
fmuls
xchg
push
outsb
mov
out
dec
popa
pop
mov
mov
push
mov
rolb
scas
bound
sysexit
outsl
mov
xorb
lods
js
add
das
nop
pop
int
mov
adc
pop
cld
sbb
adc
lahf
stos
inc
add
fistpl
cmp
cmp
out
mov
push
mov
mov
imul
mov
push
stos
mov
jo
and
int
xchg
or
adc
inc
xchg
scas
les
mov
aam
fsubs
pop
xor
sbb
test
lds
or
dec
inc
xchg
pushl
pushf
mov
mov
jne
and
push
sub
xor
push
adc
jnp
add
jl
les
or
andnps
mov
cwtl
hlt
sbb
movsl
jnp
add
xchg
fstpl
and
push
mov
rcrl
sub
jo
pushl
push
jp
or
dec
add
sbb
cwtl
cmp
pushf
in
mov
pop
shlb
jmp
mov
je
movsl
adc
lret
add
pop
and
mov
fildl
jne
in
ljmp
cli
test
dec
inc
xchg
pop
sbb
fiadds
divb
mov
ret
or
mov
xchg
inc
lock
push
enter
adc
fildl
inc
jne
or
ljmp
lods
ja
mov
push
dec
out
fwait
test
and
mov
insb
mov
pop
inc
push
add
enter
push
sar
fcmovu
push
repz
fdivl
mov
add
test
xchg
jne
xchg
cmp
adcb
mov
xor
call
ljmp
cltd
mov
mov
inc
inc
or
mov
rcrl
adc
ret
pop
push
xchg
pop
lods
rclb
hlt
repz
shll
pop
pop
pop
jne
cwtl
outsb
mov
sti
add
cwtl
lock
dec
into
xor
imul
mov
sub
pop
lock
and
pop
jle
sti
push
cmpsb
jne
lods
xor
inc
test
push
mov
in
hlt
mov
cmp
push
jns
cli
test
jge
out
jmp
fisttpll
outsb
or
xchg
cmp
call
int3
hlt
lods
es
or
ja
inc
pop
repz
dec
or
adcb
push
add
nop
or
ret
jmp
inc
jl
icebp
cli
outsl
lock
das
or
inc
popf
nop
rcll
jne
test
push
repnz
pop
scas
xchg
leave
sbb
and
cmovle
xchg
stc
jp
cli
push
mov
imul
sub
hlt
fldcw
sbb
dec
aas
inc
bound
jo
pop
rclb
arpl
sub
add
rorl
lret
jl
lds
mov
jns
add
loop
inc
dec
pop
dec
cmc
jg
cmpsb
push
scas
dec
divb
xchg
out
hlt
lock
repz
xchg
lds
mov
jle
lahf
insb
mov
mov
mov
sti
daa
lea
pushf
stos
fnstenv
dec
xor
mov
stc
jle
cmp
dec
stos
add
xchg
pop
mov
call
xlat
dec
add
adc
pop
insb
mov
add
in
xchg
das
leave
sub
sub
mov
and
sub
in
gs
mov
mov
cld
or
loop
bound
xor
sub
out
pop
jecxz
shlb
mov
test
mov
icebp
lods
loop
shlb
mov
mov
add
pop
ret
divps
dec
arpl
mov
stc
pushf
cld
inc
clc
mov
xor
inc
sbb
pop
push
jp
scas
mov
pop
push
bound
push
clc
ret
or
mov
mov
out
aam
push
idivl
mov
xchg
dec
addr16
mov
push
stos
inc
or
sub
pop
fwait
cmpsl
aad
lea
pop
ljmp
leave
call
adc
jne
jle
cmp
mov
in
jl
std
out
aad
mov
out
addb
jle
cmp
xorl
pusha
adc
inc
or
mov
hlt
mov
push
into
sub
arpl
fildll
and
sub
aad
aas
jecxz
sbb
decb
inc
mov
loope
addr16
dec
cwtl
out
sti
loop
stos
cld
mov
add
or
enter
adc
mov
loop
push
xlat
fwait
sti
out
cwtl
push
stos
or
aad
fists
inc
test
ljmp
or
popf
into
mov
adc
xchg
roll
cmp
in
fcom
int3
hlt
imul
loop
dec
test
dec
xor
xor
xchg
in
mov
inc
mov
ss
or
loop
loop
add
lcall
sbbb
je
sub
dec
xchg
dec
aas
test
mov
lret
loope
jle
movsb
ljmp
push
das
add
pop
in
jg
cmc
jno
mov
lahf
mov
inc
out
stos
movsl
fldl
jo
mov
andl
mov
stos
inc
sub
add
rcll
mov
jns
lret
test
das
test
mov
xchg
popf
mov
mov
cld
or
testb
jg
pop
xchg
or
out
test
push
fadd
mov
in
jmp
xchg
subl
mov
movsb
in
add
ss
aas
add
in
test
sub
mov
cltd
jne
sub
aas
fildl
and
xor
xor
sub
pusha
jecxz
jbe
icebp
jnp
sub
stos
mov
pop
pop
dec
add
lret
pop
clc
in
and
sub
sti
inc
jno
xor
add
sti
and
cmp
xlat
pop
mov
je
adc
and
pop
pop
mov
pop
xor
inc
aas
and
add
xor
call
ja
dec
pop
mov
jl
call
jmp
std
xor
inc
and
leave
jbe
out
popa
mov
mov
sbb
inc
xchg
lcall
jmp
mov
enter
sarb
or
ret
xchg
push
int3
adc
bound
fmul
dec
xor
mov
cmp
arpl
nop
scas
loope
sub
ss
fcomp
imull
loopne
and
xor
ja
leave
jne
and
aad
cmp
ret
jecxz
shrb
cmpsl
xchg
gs
mov
sub
mov
notb
xor
loopne
jmp
addr16
inc
sahf
inc
jne
int
jns
movsb
call
out
andl
arpl
adc
cmp
mov
or
movl
leave
cmc
cmpsb
mov
mov
xchg
aaa
sahf
or
mov
js
jns
jne
cs
std
and
mov
in
repnz
jne
or
ret
xchg
fstpl
aam
lods
sub
push
aas
pusha
sub
xchg
lcall
pop
daa
lods
sub
pop
pop
adc
repz
lcall
or
and
decb
mov
test
xor
les
cld
outsb
or
mul
jo
bound
fucomi
mov
pop
sbb
enter
mov
xor
mov
adc
add
call
dec
sti
test
push
or
fsubs
outsl
dec
loope
cmpl
jbe
std
sub
mov
pop
dec
iret
push
or
hlt
adc
mov
bound
test
adc
xchg
push
lods
outsl
jecxz
subb
dec
lcall
mov
mov
cwtl
mov
hlt
cwtl
dec
add
jne
jmp
mov
notb
inc
adc
jae
icebp
mov
jmp
imulb
outsl
pop
ss
sahf
push
xchg
inc
mov
pop
iret
push
jmp
and
aad
and
push
push
sarl
int3
jno
cmc
or
into
inc
mov
lahf
das
push
push
das
movsl
daa
pop
and
out
cs
sti
sarb
cmpsl
add
sub
test
and
mov
mov
xor
fcmovb
jo
add
bnd
inc
pop
cmpsl
jge
sbb
push
xchg
push
mov
dec
shl
dec
imul
cwtl
sti
hlt
adc
mov
push
mov
xchg
loope
movsb
mov
popa
es
and
jae
pop
lods
mov
jns
or
cmpsb
sub
pop
jge
outsl
pop
pop
mov
enter
jecxz
cwtl
out
test
scas
fisubs
or
pop
ljmp
dec
hlt
rorl
sahf
out
sbb
xchg
pop
movsb
shl
fbld
icebp
mov
push
lods
cld
test
add
xor
or
repz
xor
pop
sbb
das
jecxz
pop
xchg
xchg
std
ret
mov
and
mov
inc
jne
out
popa
xchg
popa
xorb
loopne
mov
jl
fldenv
dec
xchg
push
sbbl
out
jle
incb
cmp
pusha
daa
jb
mov
addr16
ljmp
arpl
testl
cltd
neg
mov
jnp
rep
xchg
addr16
pop
pop
out
push
enter
cmp
out
in
hlt
dec
adc
xchg
sbb
fwait
int3
fmull
inc
ficompl
pop
add
incb
cs
mov
lret
pusha
adc
mov
xchg
xchg
in
push
roll
or
shrl
je
sub
es
mov
xchg
les
or
inc
jl
jno
call
jb
xor
es
mov
insb
jmp
loop
test
jge
pop
lret
cmpsl
push
push
fdivs
out
push
sub
sub
pop
mov
in
in
dec
mov
pop
faddl
jmp
mov
mov
ljmp
mov
pop
pop
cld
call
dec
mov
jmp
scas
xor
mov
movsb
mov
fistl
adc
xchg
fsubrl
sbb
or
pop
push
mov
fsubr
dec
pushf
inc
or
push
and
cli
fistpl
in
or
xchg
push
sbb
movsb
gs
pop
subb
xor
mov
sbb
mov
out
mov
outsl
add
scas
inc
scas
popf
ret
xchg
jp
scas
mov
es
push
outsb
scas
adc
jns
dec
imul
popa
divl
mov
adc
pop
jno
popf
imul
addr16
dec
push
in
sbb
adc
std
dec
jmp
fisubs
jecxz
shlb
mov
stc
ljmp
xchg
cmc
sbbl
mov
lods
shrb
into
jne
jg
inc
fsubrs
sub
mov
divl
push
sub
mov
dec
mov
inc
dec
insb
sub
das
jns
mov
nop
dec
xchg
and
test
xor
test
div
pop
push
push
jge
andb
and
ret
dec
std
mov
sti
icebp
mov
jmp
jmp
lods
imul
mov
pusha
lret
hlt
push
pop
jno
mov
es
mov
jne
bound
pop
xor
pop
movsl
mov
repz
inc
cmp
pop
outsl
mov
adc
shrb
xor
aas
sub
xchg
bound
mov
add
jmp
hlt
arpl
jns
fsub
cmpsl
jl
daa
sub
or
sti
sahf
testl
add
push
pusha
movbe
sbb
sub
xor
pop
jg
imul
mov
or
loop
or
call
mov
sub
dec
pusha
and
inc
jne
jnp
xchg
cld
mov
mov
lcall
pop
add
rcll
dec
enter
inc
push
cli
sbb
ja
cmpsb
inc
enter
add
das
add
addb
adc
test
push
cwtl
xor
ljmp
mov
adc
pop
test
jb
adc
cld
outsl
leave
jae
lret
or
sbbl
inc
ss
test
mov
xchg
lods
add
lcall
pusha
je
mov
stc
inc
sbb
test
cmpsl
inc
lea
jne
je
push
aam
imul
hlt
pop
jmp
inc
sbb
jg
xchg
sub
mov
enter
insb
cmpsb
cmp
imul
jne
jno
xor
mov
add
pop
iret
sub
jge
ss
std
cld
dec
push
xorl
dec
dec
out
xlat
and
add
pop
push
bound
xchg
sbb
cmp
stos
enter
mov
mov
cmpsl
mov
cmpsb
inc
jo
push
data16
js
jne
and
pop
addl
jne
or
mov
push
movsb
push
lods
push
and
clc
in
dec
ret
test
das
and
loope
adc
stc
cli
inc
movsb
mov
ret
mov
xchg
rcrl
std
add
add
pop
insb
int
jne
roll
daa
cmp
das
cltd
jecxz
loop
dec
sub
cwtl
loopne
sub
lcall
push
mov
pop
cmp
xchg
adc
in
lods
movsb
xor
cmc
dec
push
divb
scas
scas
and
xor
jge
nop
shl
or
sar
pop
dec
mov
subb
inc
push
mov
xor
pop
in
xor
mov
out
push
sti
add
jecxz
pop
jp
sahf
push
les
mov
mov
out
hlt
sarl
push
fldcw
jp
pop
pop
pushf
lods
jecxz
sub
xchg
movsb
sub
into
clc
mov
inc
addb
pop
lods
pop
mov
mov
xchg
add
dec
xchg
adc
add
repnz
mov
gs
in
icebp
test
movsl
fildl
ja
push
xchg
cwtl
test
dec
pop
jb
or
shll
mov
ds
sub
jecxz
jae
cmc
out
cs
dec
sti
push
rorb
icebp
icebp
mov
inc
sbb
xor
inc
sti
jne
or
push
out
out
in
hlt
sbb
adc
cmp
or
movsl
sub
adc
inc
sub
sub
push
sbb
cmp
movsb
add
mov
inc
pop
mov
pop
cmc
inc
xchg
sub
sub
jb
and
dec
mov
adcl
out
ljmp
sub
mov
in
mov
mov
push
mov
and
push
mov
mov
mov
nop
inc
jne
cld
enter
dec
jecxz
popl
xlat
push
sub
jl
cmp
dec
jp
xchg
mov
pop
aad
jg
stos
xchg
stc
jge
bound
push
sub
test
or
jmp
loope
jmp
clc
imul
bound
cmp
addl
cmp
xchg
aaa
das
xchg
pop
push
hlt
andb
add
cwtl
dec
push
test
lcall
mov
outsl
push
mov
imul
stos
mov
and
hlt
cmp
ljmp
in
fmul
pusha
mov
shll
add
mov
hlt
jae
out
mov
or
sub
adc
rolb
jge
push
bnd
addb
xlat
mov
add
pop
stc
popf
pusha
cmp
nop
push
mov
dec
mov
xchg
pop
aam
nop
mov
icebp
out
repnz
jo
jne
cmp
incb
data16
sub
test
inc
pusha
test
fistpl
mov
imul
jns
inc
push
insl
sbb
test
pop
hlt
pop
mov
mov
insb
nop
jne
lcall
add
sbb
push
mov
push
test
lcall
pusha
add
add
jecxz
lods
imul
fmuls
bound
xor
jg
jle
loop
adc
stos
sub
stos
call
or
mov
inc
xchg
incb
or
sub
sub
mov
sarb
out
aam
sbb
xchg
out
shl
loop
adc
imull
xchg
out
mov
cs
jne
andb
shlb
sbb
jle
ret
aad
test
inc
neg
insl
adc
mov
shl
push
add
inc
xor
sbb
mov
ss
or
mov
shll
into
test
rorb
lea
mov
jecxz
call
pop
imul
and
xor
decb
and
aam
xorl
hlt
jl
jne
outsb
dec
adc
in
mov
cli
push
out
mov
mov
hlt
sbb
test
shlb
xchg
push
sub
cmp
scas
je
mov
rep
mov
lock
fldcw
dec
or
sbb
shlb
sbb
cmpsl
push
or
in
pop
pop
mov
inc
repz
add
sti
dec
in
and
jae
mov
les
es
aam
ficomps
hlt
xor
rcll
sub
cld
pushf
outsb
fcoms
into
sbbb
xor
cmc
fstps
or
cld
dec
inc
rorb
test
mov
cmp
pop
rorl
push
fwait
sbb
aas
repz
pop
test
movsl
cwtl
cltd
mov
jbe
cld
pop
jle
sbb
inc
mov
pusha
dec
or
in
cld
les
adc
ljmp
fstpl
repz
and
dec
lods
xchg
gs
mov
xchg
inc
inc
or
mov
fcoml
jl
test
repnz
int3
xor
pusha
cmp
notb
test
and
mov
pop
lods
repnz
aad
pop
data16
shrb
aad
mov
mov
cs
jne
or
pop
pop
xchg
pop
pusha
xor
adc
addr16
pop
mov
inc
xchg
add
out
xchg
les
and
cwtl
aad
dec
mov
jge
push
sub
jne
sbb
pop
out
int
mov
sti
dec
cld
adc
ja
das
cmc
xchg
jns
addl
ja
sahf
pop
loope
sub
adc
enter
ret
inc
sub
inc
inc
xor
cmpsl
inc
cmp
xchg
mov
cltd
sub
adc
jnp
pop
inc
addb
std
mov
add
dec
sahf
jae
test
or
add
ret
push
adc
sbb
mov
int
jns
inc
pop
nop
sbb
jge
xor
fistps
test
adc
leave
fwait
mov
xchg
data16
jp
add
dec
push
test
inc
nop
stc
push
scas
push
cli
push
cmp
inc
sarl
jns
sub
pop
lock
mov
mov
negb
jbe
clc
push
cmp
fsubrp
push
adc
out
inc
jbe
rcrb
pop
jl
mov
mov
leave
mov
xor
clc
js
outsl
inc
sahf
sub
cmp
hlt
mov
mov
dec
mov
stc
add
mov
or
arpl
add
das
fs
scas
inc
mov
pop
pop
call
jecxz
cmp
fpatan
fadd
jne
dec
lods
dec
movsb
pop
hlt
sub
jb
sbb
ljmp
loopne
out
test
dec
push
jle
enter
mov
push
mov
push
cmc
cli
pop
push
push
jne
movsl
mov
fistpl
and
fldl
or
addl
mov
xchg
addl
cmpsl
test
jmp
aaa
add
incb
div
adc
mov
shrl
mov
inc
and
cs
and
lret
or
test
push
pusha
insl
testb
xchg
test
outsl
mov
add
pop
pop
adc
lcall
outsl
sub
mov
mov
add
mov
cmp
mov
imul
and
mov
push
call
sbb
xor
add
lds
or
mov
push
inc
imul
dec
inc
mov
mov
or
sbb
xchg
test
scas
test
cmpsl
mov
adc
push
addr16
or
cld
aam
cmp
mov
dec
rclb
lea
sub
lock
jne
rcrl
repnz
inc
jmp
jmp
sbb
sbb
sahf
adc
xor
xchg
pop
lcall
dec
movsl
sub
inc
mov
dec
pop
xchg
orl
push
jo
jnp
movsl
call
movsl
jge
imul
cld
cs
hlt
scas
sbbl
outsl
stc
cmc
mov
mov
jge
jp
push
push
pop
into
lods
jno
clc
jo
cmp
les
jne
mov
jne
pop
jne
cs
ljmp
popf
ss
aas
sbb
into
pop
test
hlt
cwtl
jmp
test
mov
mov
jp
test
mov
xor
dec
lods
cmc
adc
mov
lods
jge
cmp
push
and
cmp
shll
xorl
mov
cs
outsb
std
sub
cmp
push
sub
hlt
and
jns
test
lret
xchg
dec
cmpsl
movsl
mov
insb
jae
pusha
cmpsl
mov
push
rcrb
xchg
das
icebp
std
sub
outsl
mov
repnz
imul
mov
lods
mov
jmp
sub
shll
mov
push
pop
push
aas
repz
cld
popa
mov
les
insb
or
je
jg
fsubs
mov
push
xor
xorl
adcb
sub
jb
orl
xchg
jne
lea
ffreep
std
lods
into
push
adc
sahf
or
lahf
sub
les
arpl
addb
or
rcrl
fstpl
and
loop
hlt
rorb
sub
insb
pop
lods
mov
je
add
mov
dec
mov
fldcw
in
shrl
jg
adc
or
dec
jne
pushf
mov
jg
popa
or
loopne
lcall
xchg
clc
jge
stos
aad
pop
leave
xchg
mov
test
es
test
dec
test
pop
mov
dec
mov
or
call
inc
test
gs
push
les
aas
push
mov
fstps
out
adc
frstor
notb
pop
mov
into
sub
jne
mov
mov
xor
out
enter
ret
jb
sbbb
mov
mov
jns
pop
out
fcomps
or
sub
push
mov
jmp
sub
movsl
je
mov
in
test
add
and
push
lret
sub
stos
jmp
sti
dec
leave
push
out
push
idivl
xlat
inc
sarb
push
add
out
insb
out
stc
clc
inc
sub
mov
dec
les
sub
in
add
pop
xchg
mov
pusha
push
cmp
scas
xor
lods
shlb
add
push
xor
int
sub
lods
lahf
and
popa
aad
mov
mov
mov
xor
pop
clc
jns
mov
enter
cld
ret
adc
mov
or
outsb
fsub
shlb
mov
faddl
mov
js
test
inc
cwtl
mul
cmc
add
jno
add
jle
sub
cltd
fwait
test
mov
stc
hlt
std
cmpsl
sti
div
stc
xchg
aas
scas
pcmpgtw
sti
repnz
jg
mov
push
sbb
negb
movsl
enter
xor
adc
mov
pop
pop
int
mov
mov
adc
and
mov
loopne
jl
sub
or
sub
or
and
jns
mov
lods
fstps
lods
mov
sbb
aad
sub
adc
imul
ret
jne
scas
cld
enter
cltd
cmp
mov
test
push
int3
push
push
fnstcw
mov
out
orl
jge
in
mov
push
sub
test
mov
xchg
test
mov
inc
mov
jle
es
mov
sbb
mov
icebp
jmp
idivb
push
cmpsl
rorb
les
mov
adc
hlt
pusha
push
cli
xor
imul
or
cmp
sbb
dec
mov
aam
jl
dec
in
push
push
xor
push
jne
mov
sbb
mov
ficoml
xor
add
stc
fdivs
hlt
test
pushf
movsl
xchg
fiaddl
cmp
popf
inc
lret
sbb
jg
pop
out
sbb
vmovdqu
fsubrl
subb
test
ss
cli
push
sub
scas
pop
and
enter
xchg
fsts
loopne
ljmp
movsl
fsubrs
movsl
sub
stos
movsl
adc
adc
sbb
cmp
xlat
jnp
lahf
stc
sub
push
pop
xchg
hlt
mov
test
inc
inc
movsb
push
sub
adc
jne
adc
jmp
pop
push
test
jno
and
scas
jnp
mov
pop
loopne
jg
jb
mov
ds
sahf
fldl
sti
sub
nop
xor
clc
call
or
cld
movsl
insl
jo
sub
push
jb
sub
xor
jns
adc
mov
sub
mov
ljmp
xchg
adc
sub
int3
inc
cmovge
mov
loop
enter
adc
popf
pushf
cltd
sar
mov
in
dec
dec
mov
cld
outsl
mov
pop
and
or
lret
mov
test
mov
inc
in
xchg
mov
std
clc
arpl
leave
cld
andl
ret
pop
stos
mov
and
bnd
mov
sahf
stos
xchg
xchg
inc
gs
fsub
hlt
mov
lret
mov
gs
insb
mov
movsb
cs
inc
into
enter
sbb
pop
test
outsl
adc
xchg
iret
xor
add
xchg
repnz
addb
cmpsl
dec
int3
pushf
jno
outsl
sbb
pop
cmp
addr16
mov
aaa
mov
ljmp
push
addb
pop
leave
imul
outsb
mov
clc
cmp
fnsave
and
adc
or
xor
jle
addl
inc
ret
addl
hlt
sbb
pop
and
fsubrs
fmull
lods
sub
lret
pop
hlt
add
mov
cmc
cmp
js
mov
lods
scas
cmp
mov
popa
pushf
inc
jle
lock
push
loope
inc
add
fldenv
sbb
std
inc
roll
dec
loop
add
in
sbb
scas
sarl
in
lret
lahf
mov
loop
jg
subb
add
jns
pop
cmpsb
push
mov
dec
shlb
mov
mov
in
pop
test
add
inc
in
inc
and
cwtl
push
scas
inc
xor
adc
jnp
aam
pop
into
in
insl
mov
push
and
mov
shrd
cwtl
stos
inc
mov
addb
push
addl
inc
cmp
test
shl
inc
stos
lock
adc
or
out
jne
push
hlt
gs
or
enter
mov
cmpb
push
rorl
aas
xor
sub
adc
lret
inc
push
dec
cmp
stos
enter
cmp
rolb
jnp
mov
mov
lret
adcb
fisubs
stc
cmc
outsl
inc
negb
insb
jns
jl
sub
out
or
in
out
pop
orb
imul
sub
inc
jmp
fcmovnb
aam
add
insl
sub
jp
repnz
jo
lods
outsb
dec
mov
jg
mov
fs
dec
cmp
mov
push
dec
test
xchg
sub
ja
sub
stc
mov
lods
cmc
cmp
or
mov
mov
out
xor
xlat
mov
out
jne
and
sbb
cltd
mov
cli
xchg
push
jmp
cmp
ljmp
push
enter
insb
lods
test
cmp
xor
das
out
sub
adc
pop
adc
ss
and
sarl
xchg
adcb
xor
sbb
test
fistl
xor
adc
std
mov
sbb
mov
mov
pop
jns
lods
cld
fcos
subb
idivb
adc
sub
daa
leave
lods
adc
je
sub
pop
xchg
xchg
loope
dec
sbb
in
dec
cmpsl
pop
rcr
loop
sub
mov
mov
lock
push
mov
or
sub
std
inc
insl
hlt
add
xor
movsb
push
mov
adc
data16
enter
cmp
dec
lret
xchg
pushl
xchg
adc
out
icebp
and
popa
les
sbb
mov
int
mov
dec
jg
or
mov
mov
inc
cwtl
lds
push
jp
sbb
call
push
cmpb
clc
mov
mov
and
lock
stos
xor
outsl
sarl
cmpsb
test
int3
ret
pusha
sub
imul
xor
jmp
pop
outsb
in
or
shll
insb
loope
iret
loopne
lea
icebp
cltd
pusha
xor
pop
sbb
inc
and
jbe
fs
push
mov
or
aad
sub
aaa
mov
jge
cld
xor
mov
insl
mov
jmp
jns
pop
insl
or
lods
push
dec
loop
ljmp
mov
hlt
sti
sub
lods
in
add
inc
test
ds
mov
mov
xchg
push
imul
ret
pushl
ret
push
stos
orl
mov
not
mov
jmp
add
jnp
pusha
in
fcoml
adc
test
sbb
inc
call
lods
xchg
lret
mov
ljmp
sub
test
pop
push
fstp
stos
xchg
jecxz
pop
mov
stos
jne
cs
notl
ficomps
insb
jge
std
and
jmp
mov
pusha
push
nop
lods
push
cmpsl
into
xlat
mov
mov
cmpl
mov
adc
stos
leave
adc
out
std
sub
mov
pop
cmp
lret
rcll
xor
jp
frstor
test
inc
add
push
ds
movsl
jle
in
jge
aad
mov
push
jns
ret
notl
jno
jge
and
pop
fistl
hlt
jne
decb
dec
dec
push
or
or
notb
ret
enter
loope
popa
jne
jo
pop
outsl
sbb
mov
mov
data16
mov
aaa
adc
jo
pop
cld
inc
repz
inc
push
dec
pusha
fwait
jp
loope
stc
mov
pop
decb
mov
std
aaa
add
jae
cmc
fdivl
mov
scas
push
shlb
sub
push
mov
icebp
addr16
jmp
xor
outsb
insl
jp
loop
or
insb
fimuls
stos
aam
movsb
sbb
dec
cmpsb
popf
testl
and
mov
pushf
stos
xchg
inc
xor
bound
xchg
mov
js
mov
mov
mov
mov
mov
sub
rorl
movsb
xor
sub
je
push
stos
dec
mov
gs
and
push
xor
dec
loope
movsb
inc
mov
adcl
lcall
rcrb
inc
int
sbb
icebp
cltd
add
push
jp
xor
addr16
mov
add
in
imul
xor
jbe
aas
mov
gs
adc
icebp
or
jge
push
xor
pop
push
test
lret
pushf
jle
inc
ja
mov
es
jmp
js
add
lret
std
inc
add
sti
and
push
pop
cmpsl
push
dec
movsb
add
pop
or
fstpl
pop
insl
mov
push
mov
lahf
jne
mov
mov
jne
stos
push
cmc
fisttpl
frstor
and
les
iret
int3
int
xchg
int3
ljmpw
insb
jle
xchg
fnstsw
adcl
scas
cli
push
icebp
inc
jp
xor
jae
xchg
mov
pop
dec
mov
movsb
pushl
xchg
push
adc
stc
ljmp
xchg
test
aam
mov
xchg
mov
pop
in
rcl
pop
imul
inc
xor
dec
lret
les
xor
xchg
mov
xchg
cltd
adc
bound
jg
test
lock
mov
sti
xlat
cmp
shlb
mov
xor
xor
daa
fmull
test
mov
into
repnz
inc
repnz
and
loopne
dec
dec
test
xor
jae
xor
push
lods
push
dec
cmpsl
pusha
mov
inc
add
pop
cmp
adc
imul
xor
pusha
mov
inc
in
jb
test
sbb
xchg
addl
or
mov
aad
insb
cmp
aaa
xchg
cmp
mov
leave
hlt
xchg
sub
or
dec
mulb
dec
fs
jecxz
jne
xchg
add
ret
mov
fs
je
mov
pop
mov
add
int3
mov
addb
mov
in
lahf
nop
loop
xchg
push
xor
leave
push
pushf
cmp
insl
mov
and
jle
pmuludq
movsl
jmp
cltd
jmp
repnz
sub
sub
andb
mov
adc
sti
lret
mov
xchg
inc
mov
or
xchg
fistps
jne
js
sbb
dec
and
mov
arpl
sbb
or
or
stos
pop
push
leave
adc
aas
cli
pop
cld
adc
inc
cmp
test
mov
push
jns
sbb
popa
sti
das
ljmp
jg
test
test
test
outsb
push
sbb
es
push
jmp
fimull
mov
mov
inc
jns
stc
mov
add
ja
jne
sbb
add
nop
mov
hlt
add
mov
shll
and
push
pop
aas
adc
sbb
inc
sub
fdivl
dec
fsubs
mov
or
enter
imull
mov
jmp
pop
test
adc
sub
imul
cmp
aam
mov
sarb
xor
sub
inc
inc
mov
std
popf
je
push
out
int3
sarl
cmp
nop
sub
sub
cmc
xchg
fdivrs
adc
jns
push
jge
mov
cmc
inc
mov
pop
sbb
into
jnp
jle
push
jge
shlb
dec
sub
xchg
fwait
adc
cld
dec
or
enter
lods
inc
sbb
fsts
movsl
cmc
xor
gs
clc
scas
jne
mov
mov
sub
jnp,pt
insl
das
add
cmp
std
inc
aad
ficomps
dec
push
stc
ljmp
insl
imul
bound
movsb
shl
dec
stos
inc
adc
sub
icebp
out
xor
out
hlt
imul
push
out
push
pop
ret
iret
pop
hlt
insl
push
pop
pushf
test
push
nop
loop
arpl
sbb
lods
movsl
sbb
adc
lret
cld
sbb
xor
lret
add
enter
lds
stos
jne
sahf
xor
fwait
in
sbb
arpl
aam
sub
push
and
push
into
and
xor
mov
mov
and
mov
jae
in
insb
arpl
std
ljmp
movsl
inc
jecxz
cmpsl
or
or
in
mov
cmp
xchg
hlt
fldt
lret
or
sbb
lahf
into
lods
mov
popa
xor
mov
divb
cmp
cli
xchg
cwtl
mov
xor
inc
mov
push
enter
mov
movsb
push
adc
call
pop
and
and
ljmp
sbb
lcall
inc
or
and
and
subl
or
aaa
sbb
mov
add
and
hlt
sarl
nop
enter
mov
push
mov
addb
adc
mov
imul
add
adc
mov
mov
jg
dec
pop
gs
scas
movsl
clc
mov
in
dec
in
dec
xor
call
in
cmp
jae
repz
decl
inc
hlt
or
dec
loope
stos
lcall
push
xor
add
jp
stc
decb
leave
loopne
jge
repz
xchg
fsub
lret
pop
test
into
leave
mov
dec
mov
pop
jbe
clc
dec
arpl
loop
stos
scas
or
pop
fldl
sahf
enter
jbe
dec
push
pop
and
jne
xor
dec
jg
andl
jmp
xchg
loop
jge
cmp
pop
mov
mov
dec
icebp
mov
mov
lcall
inc
jle
enter
jl
int3
lret
mov
in
and
fpatan
movsl
cmp
jg
add
in
sbb
stos
cwtl
sbb
adc
mov
push
or
mov
andb
rol
imul
mov
push
daa
roll
lea
das
cmp
lock
repnz
xor
repz
stos
sub
ret
lcall
xor
shr
jge
sub
mov
and
dec
push
fidivs
push
cmp
jmp
jne
pop
push
push
lahf
jnp
enter
sti
jae
add
cmp
sbb
inc
stos
loop
mov
cmp
push
and
repnz
jne
fdivrs
fisttps
scas
mov
mov
sahf
mov
push
test
into
mov
mov
rclb
scas
imul
loop
jge
xor
and
inc
xor
loop
sub
addr16
inc
rcrl
stos
lcall
ret
loope
xchg
pop
pop
xor
inc
jo
fimuls
xor
xor
rcr
mov
pop
and
dec
pop
imul
repnz
xor
or
sub
jbe
out
mov
dec
bound
iret
popf
sti
sbb
das
out
in
rorb
addl
in
dec
mov
mov
mov
sarl
inc
xor
aas
stc
in
dec
nop
pop
jge
mov
in
xchg
jb
mov
dec
dec
mov
jge
cmp
mov
inc
cmpsb
xchg
push
sub
mov
sbb
hlt
adc
lods
jnp
fsubrl
jbe
aad
push
movsl
call
dec
ret
clc
cld
mov
stos
cld
and
mov
cmp
mov
decl
xor
push
pop
push
stos
push
and
cmp
fwait
repz
out
enter
dec
popa
jp
sbb
repnz
and
jns
jbe
fmull
dec
sbb
pop
dec
call
jnp
dec
dec
jnp
mov
out
rolb
sbb
leave
in
dec
xchg
add
jbe
imul
leave
loop
jo
adc
push
inc
insb
or
or
mov
push
xor
adc
fwait
mov
ss
mov
sub
or
mov
pop
add
cmp
mov
sbb
jno
nop
cmpsb
sahf
mov
into
lahf
xor
in
aam
adc
into
test
cmp
rolb
pusha
sbb
jmp
stos
cld
popf
lret
add
mov
lods
in
test
pop
xor
fmul
inc
push
repz
xor
lods
fsubl
ds
add
dec
movsb
jle
cmpsl
test
or
xchg
mov
mov
mov
and
rcrb
adc
add
in
scas
pop
out
repz
cmpsb
dec
add
in
jg
pushf
cli
mov
rcll
insl
or
rcrb
pop
xchg
das
xchg
mov
aas
std
push
fistpll
ds
push
sub
inc
mov
sar
push
jmp
gs
lea
test
and
inc
sbb
sub
cli
pop
xor
xchg
shlb
sahf
and
js
mov
mov
icebp
in
in
adc
inc
test
push
mov
ljmp
jp
xorb
cld
aam
dec
dec
and
fiaddl
dec
mov
mov
out
pop
scas
jnp
or
mov
lea
iret
hlt
and
sbb
pop
mulb
cmp
push
cmp
fsubrs
ss
lret
mov
leave
arpl
pop
rcrb
mov
dec
mov
push
xchg
adc
mov
and
pusha
pop
sub
cwtl
scas
shl
aad
sahf
jmp
mov
xchg
sbb
add
push
out
jl
sbb
repz
scas
pusha
stos
bound
xlat
add
jg
jne
sahf
mov
into
add
repz
adc
fistl
adc
dec
jne
and
jnp
out
int3
sahf
into
pop
enter
rcl
add
sahf
adc
in
jmp
pop
push
js
mov
movsl
lods
ret
int3
add
dec
jae
shll
mov
push
movsb
fidivl
or
lock
inc
xchg
jl
jle
sub
push
jle
dec
gs
shrl
gs
jnp
aas
movsb
add
sbb
inc
mov
xchg
shlb
mov
jbe
cld
jno
mov
lods
pop
push
mov
jnp
and
hlt
idivb
jmp
pusha
or
call
mov
adc
pop
xor
jmp
inc
lcall
call
fsubs
mov
jns
ss
fldenv
add
std
call
jno
daa
add
push
int3
xor
push
loope
std
sub
scas
add
lcall
lcall
push
enter
xchg
jmp
pop
push
cli
pop
leave
popa
data16
mov
cmpsb
cli
loop
stos
dec
and
mov
pop
xchg
addl
xchg
jle
stc
pop
iret
pop
xorl
jnp
stos
int
mov
jns
push
mov
addr16
pop
xchg
push
push
ss
pop
sbb
cltd
inc
mov
loope
sub
and
data16
push
test
pop
mov
xchg
lcall
sbb
xchg
pop
sub
ja
cld
in
test
mov
rcpps
pusha
test
mov
pop
xor
mov
mov
xchg
push
xchg
cmpsl
jb
mov
test
movsl
add
push
orl
hlt
lods
gs
flds
out
sub
push
push
mov
lods
scas
add
imul
mov
mov
xchg
mov
adc
mov
insb
enter
test
sub
sub
push
inc
sbb
aas
jns
lret
mov
jge
subb
xchg
repz
ret
ljmp
loopne
xchg
shlb
aas
xor
sbbb
add
out
imulb
sbb
mov
mov
lods
fists
icebp
jb
mov
push
out
pop
ja
ret
mov
and
xchg
cmc
mov
popf
fsubrl
in
xor
push
inc
add
outsl
rolb
push
hlt
adc
dec
insb
push
and
leave
dec
sub
or
test
dec
jns
jns
out
sub
jg
in
pop
inc
mov
inc
push
mov
xchg
dec
mov
out
add
cmp
dec
loop
cmc
leave
arpl
cmp
lsl
mov
mov
push
leave
xlat
add
mov
sub
test
nop
xor
pop
fldt
dec
daa
ds
mov
xor
incb
sub
mov
inc
repnz
inc
inc
jnp
shrb
dec
test
pop
mov
jnp
outsb
add
enter
or
stos
mov
arpl
add
fidivrs
dec
mov
adc
pop
dec
ret
jne
mov
jbe
enter
mov
enter
cld
int
pop
mov
push
jnp
es
cmp
in
xchg
push
inc
mov
fldenv
movsl
sti
loop
sub
imul
inc
repnz
mov
dec
jl
xchg
dec
fists
arpl
inc
jne
mov
js
jnp
leave
loop
dec
mov
mov
or
shl
mov
mov
je
popf
loope
jb
cmp
stos
movsl
dec
xchg
cmp
imul
pop
das
push
cld
sub
subl
loopne
xchg
pop
and
mov
push
dec
jl
xchg
jmp
dec
repz
lcall
inc
sub
push
fldln2
and
jl
push
int
jo
push
add
xchg
push
test
in
mov
les
fdivl
jge
mov
mov
insl
jne
cs
scas
xchg
stos
ja
push
sti
inc
or
push
mov
xchg
adc
sub
repnz
or
movb
insb
repnz
inc
dec
pop
divb
inc
sbb
pop
movl
fucomip
inc
inc
outsb
adc
pop
adc
lea
jns
cmp
add
std
jp
push
js
dec
js
adc
cmp
sbb
xchg
add
dec
dec
jbe
push
shll
cmp
inc
mov
pop
pop
int
add
xor
into
shll
adc
nop
jmp
pop
sub
lock
neg
ds
sub
add
xorb
rorb
mov
jp
dec
shll
mov
or
cs
dec
pop
in
jne
cmp
ja
mov
adc
test
mov
fstl
mov
in
pop
and
les
mov
jl
inc
pop
mov
sub
aas
sbb
cmp
hlt
mov
fyl2xp1
fwait
pop
adc
fisttpll
frstor
aam
arpl
sub
jp
orb
cmpsl
fldcw
sub
push
test
push
in
xchg
dec
cmp
push
jge
imul
mov
add
shll
cmpsb
mov
in
sbb
call
xor
xor
sub
cmpsl
stos
dec
push
sbb
push
rclb
jmp
and
enter
int3
loopne
sub
push
and
loopne
into
and
test
lret
cld
mov
lods
mov
mul
fdivl
mov
mov
call
loop
mov
mov
popa
or
out
inc
jne
subb
and
cmp
incb
cmc
in
dec
into
fisttpll
fdivr
and
in
inc
xchg
pop
mov
shlb
int
repnz
pushf
or
in
cmpb
cmp
mov
fwait
imul
or
pop
fmuls
scas
ljmp
pop
pop
arpl
push
in
mov
div
push
sub
adc
jne
xchg
cld
movsl
inc
jp
or
dec
hlt
lret
in
mov
ds
inc
jbe
ror
testb
ror
js
push
dec
aam
rcr
sbb
repnz
cld
cmpsb
push
or
inc
enter
push
shrl
subb
add
shlb
std
lcall
cmp
xorl
scas
test
aam
je
or
adc
out
iret
addr16
push
pushf
ljmp
and
push
out
push
and
mov
ret
std
sbb
imull
repnz
shll
pusha
in
lret
sub
lods
xchg
dec
sbbb
push
add
mov
inc
mov
mov
pop
add
lret
mov
insl
sbb
mov
imul
inc
mov
xor
pop
adc
add
add
lods
sub
xchg
jo
jg
mov
push
in
mov
aam
jb
dec
mov
movsl
in
sahf
jne
jmp
hlt
cmp
das
add
repnz
sub
cwtl
xor
xchg
enter
jnp
add
inc
xchg
and
lahf
loopne
adc
push
in
rclb
mov
xor
cmpsl
sbb
inc
add
rcr
mov
or
mov
inc
xchg
stos
mov
xor
xor
dec
test
sarb
inc
popa
hlt
leave
data16
jecxz
mov
outsl
inc
iret
xchg
sub
add
cmc
lcall
lea
cmp
loopne
jne
mov
fcompl
lods
jle
inc
add
adc
es
sbb
shrl
jmp
addb
stos
das
pop
sahf
shlb
into
cmp
js
sbb
sahf
dec
subb
mov
jecxz
fsubrp
or
and
enter
mov
push
addr16
int3
icebp
mov
mov
test
dec
jnp
rolb
jb
xor
push
inc
lret
inc
cs
push
cwtl
mov
sbbb
cwtl
lods
push
cli
mov
add
mov
mov
test
fdivr
movsb
es
mov
cmp
dec
icebp
iret
not
push
aaa
xchg
sbb
inc
xor
lods
ss
sbb
fisubs
adc
cmc
xorb
pop
scas
loop
pop
std
mov
xchg
outsl
and
movsb
lret
enter
or
test
arpl
sub
jne
push
mov
xor
test
and
or
add
xchg
ret
mov
icebp
fwait
pop
shl
sbb
inc
push
pop
cmpsb
adc
out
mov
pop
data16
xchg
or
push
push
out
mov
inc
push
lahf
cld
fadds
mov
in
loopne
cmp
add
add
pop
sti
jp
ds
mov
sub
cmpsl
sarb
push
jge
inc
hlt
add
ret
lds
jl
and
mov
mov
jo
mov
xchg
test
rolb
aad
nop
andl
rcll
cld
inc
repz
xchg
xor
decb
dec
fdivrl
pushl
test
xor
hlt
test
mov
loope
dec
sub
lock
cli
hlt
ret
loopne
lret
push
and
std
add
imul
push
mov
inc
das
lea
push
mov
mov
mov
int
sub
hlt
push
mov
jno
jp
xchg
sub
lock
test
jno
repz
xor
sub
pop
jne
jmp
mov
add
ret
lods
clc
add
mov
shrb
stc
out
aam
add
insl
sub
in
mov
std
sub
xchg
int
cld
dec
sub
pop
nop
fildl
dec
jmp
test
out
xchg
pop
push
jecxz
test
repz
mov
sub
or
push
cmpsb
sub
mov
fsts
lahf
pop
mov
shrl
cld
js
jne
leave
les
shrb
rol
pop
fwait
mov
andl
ja
rcll
test
cmp
into
aas
mov
pop
jp,pn
lods
sub
pop
jge
dec
test
or
loope
pop
stc
pop
xchg
cmp
xchg
mov
xchg
testl
loopne
jne
loop
dec
inc
pusha
or
or
imul
or
inc
popf
cmp
sbb
jno
and
push
inc
std
mov
dec
mov
loopne
repnz
push
lea
cld
xchg
in
sub
xor
jo
ret
pop
es
nop
xchg
cmp
stc
add
scas
into
mov
mov
push
push
cmpsl
gs
cmp
sbb
es
aad
mov
jo
push
leave
or
enter
nop
pop
fldcw
dec
ret
pop
add
mov
adc
ret
push
inc
arpl
nop
imulb
lahf
lret
inc
shl
sbb
sbb
or
inc
sti
stos
movsb
lahf
jne
js
cltd
movsl
leave
sbb
mov
xchg
cmp
add
movsl
mov
in
fwait
sbb
and
xchg
xlat
mov
leave
push
inc
loope
mov
ljmp
pusha
leave
push
push
pop
or
les
enter
call
hlt
ja
sub
push
jne
and
enter
or
or
into
xchg
mov
xchg
les
das
adc
xorl
pushl
icebp
xchg
lcall
dec
cmp
sarb
jmp
out
inc
jne
push
add
ds
xchg
es
insl
jecxz
repnz
dec
xor
sub
mov
cwtl
sbb
mov
divb
cltd
aad
jecxz
push
or
jae
imul
cld
mov
in
jmp
jno
xor
sub
or
cmc
in
mov
adc
mov
add
adc
rorb
push
jmp
push
xor
nop
lahf
es
inc
cmc
repz
dec
sbb
jl
adc
and
jb
push
add
pop
mov
sbb
sub
adc
mov
orl
clc
add
repz
movsb
pop
add
scas
mov
nop
pop
sahf
jne
lods
pop
add
xor
icebp
inc
mov
jle
gs
sbb
aas
or
pop
sub
clc
testb
test
loopne
filds
jno
hlt
call
fldt
or
into
fistpll
incb
stos
dec
loop
std
insl
add
fnstenv
mov
add
pop
dec
hlt
rcrl
out
movsb
les
push
rcl
cmp
xchg
icebp
inc
dec
sub
icebp
xor
fldt
test
or
inc
push
and
ret
adc
mov
negb
xchg
jp
jge
dec
pusha
ljmp
gs
dec
jns
add
xchg
hlt
mov
adc
cmp
cwtl
aas
and
xchg
test
push
clc
xor
popa
mov
inc
xchg
fildl
add
leave
mov
cmovp
decl
lret
test
stos
stos
enter
iret
fwait
inc
push
pop
test
push
imul
stos
mov
mov
shrl
mov
push
lcall
and
stos
xchg
scas
cs
mov
inc
test
movsb
outsb
clc
pop
dec
dec
test
push
loop
in
mov
push
cmpsb
hlt
fdivr
std
inc
out
scas
sub
jp
fidivl
xor
out
cld
mov
cli
push
push
stos
and
push
test
subb
xchg
mov
in
in
add
lahf
shrl
ret
ret
jle
test
and
roll
inc
mov
sub
lahf
fisttpl
mov
and
fadds
push
jb
inc
xlat
sbb
sbb
lds
nop
mov
xchg
sbb
out
movsb
hlt
jmp
pop
pop
xor
cwtl
sbb
mov
lcall
mov
pusha
repz
std
adc
mov
cmp
add
loopne
sub
hlt
xor
sbb
xor
dec
push
insl
or
fmuls
mov
hlt
mov
cli
loopne
stos
lods
fcoml
xor
mov
push
push
pop
stc
push
fcomps
pop
test
leave
fnstcw
fdivrp
sahf
add
push
jne
push
push
mov
into
jb
es
push
es
mov
jae
hlt
adc
rorl
xchg
jb
push
dec
xchg
cmp
push
mov
movsb
pop
mov
jmp
and
adc
sahf
ljmp
dec
mov
cmpsl
enter
test
pop
or
sbb
cltd
jecxz
sub
adc
or
test
adc
inc
fcoml
mov
pop
lcall
cli
cmp
pop
jl
and
int3
jnp
xchg
xchg
adc
and
ret
orb
fsubs
pop
call
cwtl
test
cmp
insb
enter
xor
stos
dec
add
hlt
mov
cwtl
mov
inc
cli
pusha
repnz
hlt
jmp
and
imulb
sbb
stos
dec
pop
fstl
nop
mov
mov
test
shlb
div
fsubs
add
call
sbb
sbb
lahf
stos
lock
sbb
ds
stos
gs
imul
hlt
mov
orl
xchg
cmp
fstps
sub
mov
outsb
aam
mov
ret
std
loopne
sub
jne
push
pushf
cmpsl
adc
clc
lret
jp
pop
push
out
and
push
fmull
xlat
loopne
ret
mov
sub
pop
mov
lock
popf
lret
ljmp
leave
addr16
mov
mov
adc
sbb
inc
and
test
fldcw
mulb
stos
push
inc
cmp
fcoms
xlat
xchg
and
add
divb
shrb
addl
xor
push
xchg
cli
cmovo
cmp
iret
loop
push
fcompl
dec
cmp
push
jg
adc
mov
inc
cli
call
mov
in
hlt
loopne
mov
jne
jp
cmp
js
xor
sub
sbb
and
leave
adc
pop
scas
jne
inc
test
jo
pop
mov
repz
push
xchg
pop
adc
mov
push
mov
testl
inc
fisttps
push
sub
lods
add
fldt
mov
stos
adc
shll
lret
dec
gs
inc
jl
in
loopne
sbb
xchg
add
inc
jno
fsubl
push
rcll
inc
add
rol
sarl
mov
inc
mov
fiadds
ret
sub
lret
or
lea
or
shrb
sub
push
inc
popf
pop
push
leave
fsubl
out
pop
or
fldenv
fsubrl
pop
mov
hlt
gs
mov
mov
add
mulb
mov
rcrl
cmp
fisttpll
sub
pop
int3
test
nop
fcomps
loop
mov
aam
rcl
lods
xchg
inc
ficompl
sbb
and
inc
or
fwait
sbb
jne
mov
cmpsb
hlt
das
fsubl
or
inc
mov
fs
cld
cmpb
enter
aas
push
jo
mov
ss
decl
std
sub
xchg
jbe
mov
cmpsb
mov
dec
xchg
sahf
xchg
mov
pop
ret
data16
xchg
jne
add
xchg
mov
stos
stc
out
fnstenv
mov
jne
xchg
int
test
adc
rorb
and
xchg
or
jg
push
cmp
ret
fsubs
sub
cwtl
les
mov
test
sub
insb
std
adc
push
std
push
imul
jnp
or
mov
mov
pushf
push
mov
fldenv
and
add
add
adc
fdivs
es
cmpb
adc
loope
sub
cmpb
and
stc
shlb
sub
or
pop
sbb
sbbb
mov
cmpsl
jne
xor
xlat
mov
or
inc
test
mov
enter
mov
dec
bnd
ss
test
addr16
mov
stc
mov
icebp
or
into
sahf
sub
inc
lret
mov
clc
in
xorb
cmpsb
hlt
or
out
jne
push
xchg
rolb
xor
shll
arpl
jle
push
xchg
stos
mov
shr
inc
push
scas
enter
push
or
mov
stos
hlt
aas
adc
mov
mov
inc
xor
int
out
add
jnp
and
mov
enter
mov
jne
mov
enter
test
mov
hlt
and
rorb
cmp
pop
add
in
int3
shlb
nop
xorl
jg
jno
loopne
push
pop
add
cli
add
cmp
xchg
stos
fstl
sub
mov
bnd
sbb
pop
addl
adc
shlb
and
adc
jno
sbb
les
adc
jo
mov
xor
xchg
jnp
mov
inc
pop
mov
in
mov
sub
add
lods
imul
dec
hlt
jge
sub
ja
or
sbb
jns
cltd
enter
jne
push
xchg
mov
fs
jl
testl
nop
and
int
fsub
sub
jge
jge
leave
sbb
adc
stc
out
jnp
sub
cli
ret
jp
mov
das
xchg
pop
mov
mov
nop
add
add
in
mov
cmovg
repnz
mov
out
dec
data16
incl
jecxz
enter
pushf
loopne
jae
and
xor
jo
add
subb
mov
arpl
dec
fdiv
shlb
add
mov
stc
jne
loope
sarl
or
shlb
dec
dec
stos
sbb
call
rol
add
mov
dec
fisubrs
mov
inc
scas
pusha
mulb
adc
int
xor
jp
rorl
inc
mov
jmp
pusha
dec
mov
out
inc
movsb
call
fs
pop
mov
or
xor
ljmp
and
fcomip
dec
fcomp
pop
daa
push
rcrb
push
pushl
rolb
out
out
pop
enter
rol
pusha
fisttps
jmp
pop
lcall
jne
popa
std
popf
jp
mov
andb
repnz
lcall
into
xor
call
aad
mov
pop
push
pop
ret
orl
mov
jmp
xchg
push
ljmp
jp
add
jle
inc
mov
adc
out
cmp
movsb
xorl
les
jge
lods
jmp
sbb
out
push
aad
outsb
mov
lock
mov
stc
dec
sub
cli
ss
std
test
mov
cmpsb
xor
sub
sar
mov
and
and
dec
push
icebp
pop
mov
mov
stc
clc
sarb
loop
sub
cmc
fdiv
pop
inc
cli
sbb
ret
cmc
push
cmc
arpl
push
ljmp
jg
mov
les
loope
sub
xor
mov
stos
xor
jl
or
inc
movsb
add
mov
dec
in
mov
xchg
dec
lock
sbbb
mov
mov
loopne
imul
fwait
inc
add
hlt
xor
adcb
lret
push
inc
stos
sub
sarl
push
mov
bnd
mov
fldt
or
mov
xchg
int3
pop
cs
les
xchg
dec
scas
xlat
insl
sub
push
cmp
and
and
xchg
inc
push
mov
sbb
jnp
sub
repnz
lret
jb
push
sub
sbb
mov
lret
aad
cmpsb
das
jmp
lock
ljmp
mov
inc
add
das
mov
jle
jp
mov
add
dec
repnz
and
mov
mov
aaa
and
leave
jb
sbb
mov
movsb
in
sub
movsl
ja
push
add
sub
idivl
mov
test
cli
xchg
clc
mov
mov
jnp
jnp
jp
pop
sub
enter
cltd
lahf
cmpb
mov
xor
xchg
mov
mov
les
and
loope
insb
cld
lret
inc
shrl
hlt
adc
fdivl
loope
les
push
sub
sbb
das
addb
std
test
movsb
repnz
insb
cmp
outsb
sub
inc
inc
pop
and
mov
mov
outsb
pushf
and
mov
mov
adc
jnp
aas
sub
jo
loop
mov
mov
xor
and
sbb
push
in
mov
mov
bound
enter
jnp
and
lcall
pop
mov
lods
push
adc
push
dec
aas
xor
insb
jecxz
pop
in
mov
xchg
adc
sub
dec
imul
icebp
sbb
test
inc
call
dec
jne
mov
arpl
rorb
push
xor
lret
es
out
xor
daa
aas
cli
sbb
pop
jmp
loopne
xorl
add
cmp
xchg
in
dec
je
lods
or
jb
mov
into
xchg
xor
cmp
dec
mov
mov
push
sti
sbb
or
adc
mov
cmp
loop
das
rcr
and
xchg
mov
pushf
stos
mov
xchg
mov
popa
enter
xchg
pop
pop
rcrl
mov
mov
test
xchg
std
lret
sbb
fsubl
filds
leave
cwtl
lret
sti
ljmp
mov
sub
sar
adc
int
pop
loop
push
pop
test
and
and
dec
pop
int3
idivl
inc
jp
cltd
test
and
sub
mov
testl
xchg
adc
sub
rol
pop
repz
rolb
cmpsl
int
pusha
mov
mov
mov
cli
sub
mov
outsl
mov
inc
out
lods
pop
aad
xchg
dec
inc
out
cmpsb
sub
nop
stc
dec
out
pop
jno
xor
subb
xchg
daa
mov
cmpsb
cli
pop
jns
inc
mov
or
in
adc
data16
mov
add
mov
sbb
xchg
je
cmp
cs
pop
movsb
sbb
out
push
sub
adc
test
mov
push
aam
lods
xor
mul
mov
lahf
xor
out
mov
sub
mov
dec
cmp
std
cli
mov
hlt
popa
pop
les
cmpsb
inc
mov
in
sub
lods
or
ds
mov
cmp
pop
fs
or
js
pop
jno
stos
xchg
scas
arpl
xlat
cwtl
leave
xchg
fistps
push
pop
xorl
or
fstpl
jno
inc
mov
scas
roll
inc
pop
hlt
cmp
cmp
clc
xchg
cli
bound
lods
dec
xchg
jge
mov
mov
cli
dec
ss
call
mov
xchg
sub
push
push
add
enter
mov
fidivs
sbb
cli
stos
shrb
arpl
mov
loope
pop
lods
sti
or
cmc
dec
cmp
insb
jecxz
xchg
stos
inc
popa
mov
imul
sub
sti
inc
insb
ret
and
dec
test
dec
jbe
inc
mov
ss
pop
popa
jne
xchg
mov
mov
mov
push
jne
and
sti
aam
lcall
mov
and
ljmp
insb
adc
in
in
fcmovb
loop
pop
shll
inc
sub
inc
ljmp
jne
fcoml
jns
cwtl
xor
and
in
ficompl
fnsave
andl
js
js
jno
xchg
mov
jns
stc
fwait
or
add
inc
les
enter
dec
inc
dec
mov
dec
int
jl
mov
iret
xchg
sti
std
adc
nop
adc
pop
testl
stos
iret
gs
cmc
stos
divb
push
add
nop
hlt
cmp
mov
rcrl
orl
iret
or
movsb
stos
divb
mov
mov
push
push
add
jg
test
xchg
dec
fldenv
or
mov
dec
scas
mov
add
inc
ret
mov
xor
lock
scas
push
adc
lods
sbb
notb
test
xor
dec
pop
inc
push
lahf
pop
addb
pop
mov
mov
xorl
and
fdiv
mov
and
rolb
adc
aas
daa
rcrl
inc
loope
push
stc
lret
push
mov
dec
mov
repnz
hlt
dec
push
dec
fxch
jecxz
cmp
clc
js
ljmp
mov
xor
pop
pop
xchg
ljmp
cmpsb
cli
pusha
in
jne
cmp
pushf
shll
or
inc
pop
pusha
xchg
jp
sub
or
shrl
inc
mov
or
mov
or
mov
lret
xcrypt-ofb
cmpsl
push
cmp
movl
mov
inc
out
lret
es
mov
jl
cmp
xor
and
adc
push
test
out
int
pop
cwtl
mov
mov
add
mov
jo
ss
insb
add
in
xchg
lret
pop
dec
into
fidivrs
mov
sti
movntq
out
mov
adc
shrl
lods
mov
icebp
jecxz
aam
data16
jb
sub
test
shll
out
xchg
add
cmp
jg
jne
adc
jnp
mov
scas
dec
and
leave
dec
sbb
cwtl
sbb
cmp
call
or
subps
xor
repz
jne
mov
sub
push
ja
xchg
mov
repnz
pushf
enter
ja
mov
hlt
jg
add
repz
xchg
mov
pop
fcmovu
mov
inc
mov
or
hlt
mov
add
stos
or
mov
insl
inc
xchg
andl
call
pop
mov
adc
xchg
adc
clc
mov
sub
jl
sub
jl
sbb
xor
and
out
insb
mov
jge
insb
and
loop
leave
gs
cmpsb
push
loopne
hlt
das
pop
add
mov
rcr
push
movsl
lea
lcall
xchg
into
push
pop
inc
pop
clc
cltd
mov
dec
ss
repz
cwtl
pop
jge
cmp
push
repz
push
mov
lcall
xor
xchg
cwtl
stc
leave
mov
test
gs
xorl
xchg
xlat
scas
push
push
push
ds
lret
movsb
pop
pop
cmpsl
aad
pusha
push
cld
mov
jge
shr
mov
ret
hlt
xchg
pop
cmp
stos
sbb
push
outsb
push
hlt
inc
lods
cld
cmc
sbb
in
sub
popa
and
adc
mov
js
pop
gs
pop
fwait
mov
jne
adc
movsb
je
into
dec
inc
mov
xchg
jae
jns
pusha
mov
adc
inc
or
mov
sahf
inc
push
dec
outsl
pop
icebp
sub
sbb
or
and
adc
repz
dec
adc
inc
inc
hlt
mov
xor
ret
test
outsb
push
dec
jg
push
jne
scas
scas
or
cmp
push
lahf
stos
sub
fsubrl
pusha
add
push
aad
or
inc
test
in
and
inc
sti
push
lock
enter
xchg
movsb
sbb
hlt
hlt
xchg
cmp
call
push
in
push
inc
ss
not
cmp
fistpll
inc
insb
mov
aad
inc
lods
lret
xchg
cli
sbb
rcrl
iret
pop
lret
push
mov
or
mov
cmp
xchg
data16
fbstp
sub
jge
aad
mov
mov
inc
test
ret
std
xchg
fsubrs
aas
add
or
add
push
push
xor
inc
xchg
sub
jl
inc
cmp
lcall
fcoml
and
out
dec
adcl
popf
inc
sub
push
xorl
stos
add
nop
nop
fwait
xchg
xor
sbb
in
push
loopne
inc
fsubrl
xor
cmp
in
push
inc
jne
test
sti
xchg
push
pop
inc
hlt
scas
jg
lcall
push
or
out
xchg
lret
fldt
dec
inc
xor
popl
pop
fistps
das
mov
shl
pusha
leave
fldt
sub
out
mov
mov
shrl
mov
pop
push
and
cltd
lods
sar
add
aaa
into
mov
mov
pop
xchg
cmc
sub
lret
popf
push
in
enter
adc
sub
repz
sbbb
loopne
rcl
sub
scas
mov
sbb
sahf
mov
xor
int
cmpsl
into
jle
js
mov
jp
mov
movsb
add
std
aas
cmp
into
aam
inc
and
mov
jmp
add
int
add
inc
inc
jo
ret
repnz
mov
cwtl
fidivrs
roll
clc
push
jbe
inc
adc
rolb
int
loop
sbb
or
push
cld
pop
loope
jg
lcall
cmp
mov
pop
cld
pop
dec
cltd
push
sbb
into
pop
add
push
push
jne
add
sti
jbe
mov
jmp
int
lahf
mov
add
xchg
add
dec
ss
rcrl
pop
jl
add
mov
mov
notb
pop
test
mov
push
mov
jae
mov
shl
inc
call
fistps
cmp
inc
mov
int
in
jne
cmpsb
es
lods
jmp
cmpsb
mov
fnstenvs
sbb
scas
add
lea
popa
mov
mov
lcall
lret
hlt
lock
jl
js
sarb
sub
pop
in
add
pop
sub
push
and
in
loop
in
add
fwait
popa
mov
jno
or
inc
push
hlt
xchg
stos
dec
scas
movsb
pop
jl
sub
decb
js
scas
xorps
add
pop
ss
test
repz
xchg
cmpsb
mov
ret
sbbl
jnp
lret
mov
cmpsb
push
jns
mov
mov
ja
daa
adc
jne
hlt
jecxz
call
lahf
xchg
cli
jl
outsl
aam
call
vpminsw
aam
mov
icebp
dec
push
insb
jne
test
push
fsubr
rcrl
mov
loop
movsl
mov
or
xor
leave
add
and
xchg
mov
mov
out
ficoml
pushf
test
sbb
insb
add
gs
push
cltd
lods
cmp
mov
push
scas
hlt
and
into
mov
xchg
pop
push
xor
test
mov
pusha
nop
fisubs
dec
insl
mov
lods
decl
mov
cmp
mov
clc
xchg
adc
ret
cmp
sub
cltd
test
and
imul
cmpsb
mov
pop
inc
adc
in
outsl
and
or
cs
nop
imul
and
or
hlt
xor
hlt
stos
adc
dec
repnz
loop
pop
push
fwait
inc
sbb
cli
xchg
pop
sub
movsb
push
int3
lock
dec
mov
out
sahf
cmc
stc
mov
lret
hlt
clc
es
xchg
adc
push
jne
scas
sarb
sub
pop
adc
in
lcall
sti
add
sbb
add
sub
das
movsb
dec
sub
mov
pop
lret
repz
in
mov
push
xchg
insb
mov
or
sbb
test
fmuls
call
add
insb
cmpsl
inc
inc
test
ja
ja
mov
xchg
mov
xchg
lock
aam
enter
xchg
or
push
add
mov
add
xor
mov
pop
sbb
repnz
jg
shl
subl
cmp
jecxz
adc
or
push
pop
arpl
lds
add
jl
hlt
stos
leave
stc
pop
lahf
stos
aas
mov
xchg
repnz
movsb
int3
mov
scas
xchg
sub
add
in
shlb
lods
rcr
xor
les
cwtl
test
shlb
mov
repnz
push
dec
mov
mov
pop
sbb
cmp
js
and
ds
leave
test
data16
imul
push
dec
movb
shrb
leave
aad
add
sub
jl
or
ror
jl
hlt
rcrl
jo
xorl
stc
gs
ja
cmpsl
dec
push
fsubl
arpl
gs
add
sub
inc
dec
xchg
push
lds
cltd
or
jo
lea
dec
cwtl
xchg
xchg
push
inc
repz
aas
lods
jp
or
dec
call
roll
leave
mov
fcomi
sbb
into
lret
add
aad
addr16
rolb
imul
cli
jg
lea
sub
repnz
nop
dec
out
mov
mov
adc
out
push
push
adc
into
sub
or
cmpsl
inc
jno
mov
lret
sub
nop
lods
jl
sbb
push
cmp
adc
cmp
add
pusha
xchg
adc
jne
cmpl
sarl
mov
das
insl
and
stos
inc
loop
mov
aad
inc
sahf
mov
cmpsb
xor
repnz
fcoml
jo
movsb
rolb
fisubrs
mov
rcrb
pusha
cwtl
jg
je
add
movsb
and
mov
sub
xchg
rcrl
fildll
dec
fbld
cmp
int3
adc
cmp
cmovp
jne
mov
pop
rolb
fldl
sbb
cmc
or
hlt
fwait
xor
outsl
or
shlb
cmpsb
pop
gs
loope
add
cmp
mov
xchg
es
clc
enter
push
jle
cmpl
scas
mov
push
pop
cmc
mov
lock
sub
sub
fiadds
cmp
inc
in
xchg
shrl
sub
int3
mov
inc
add
sub
pop
mov
or
loope
mov
dec
call
fsubs
xor
xor
aas
jmp
popf
rorl
mull
xchg
test
mov
cmp
adc
pop
hlt
push
xchg
jp
jle
xor
ljmp
cmc
into
jnp
sbb
mov
fisubs
pop
data16
scas
decl
dec
pusha
cmp
xlat
xchg
push
insb
loop
push
push
ss
and
inc
push
inc
mov
fsubrs
mov
rolb
iret
lret
push
outsl
cmp
imul
adc
insb
sub
into
pushf
movsb
sub
mov
push
loope
clc
pushl
dec
hlt
imul
jmp
out
ja
test
stos
push
out
push
mov
add
aad
mov
out
repnz
mov
call
or
inc
movsl
js
jae
and
xor
stc
andb
xor
add
hlt
pushf
xor
ljmp
cmp
mov
mov
sub
cld
in
out
mov
and
adc
and
out
lods
test
push
scas
lods
xor
xor
dec
jecxz
cmp
pop
in
push
inc
ds
mov
mov
pop
mov
lock
pushf
adc
jge
dec
shrb
mov
into
mov
mov
jne
dec
rcll
fxch
pushf
lret
sub
aam
inc
fisubs
xor
test
hlt
pusha
adc
mov
sbb
and
neg
pop
lods
mov
scas
sbb
mov
cmpsl
inc
jl
jno
or
jp
xchg
mov
aam
shl
adc
scas
sbb
pop
lahf
test
js
xchg
or
xor
fstpl
inc
push
pop
pop
clc
add
cli
inc
push
inc
xchg
repnz
jne
arpl
test
cwtl
or
fs
stc
jne
popa
stos
or
imul
jecxz
mov
cmpsl
movsl
out
sub
imul
sbb
push
mov
imul
je
jg
push
movsb
test
subl
insb
icebp
mov
clc
test
addr16
add
jle
push
push
dec
or
in
xchg
pusha
sub
mov
iret
lds
loopne
mov
loopne
cmp
repz
lret
mov
pushf
and
lods
enter
fwait
sti
cmp
sahf
cld
mov
xor
out
test
mov
push
jo
xchg
inc
jne
jo
std
stos
push
ret
pop
inc
and
add
mov
fdivrl
mov
test
stos
hlt
rorl
push
fdiv
cmpsl
pusha
pop
push
push
les
xchg
sti
push
inc
inc
mov
js
and
add
sub
lds
sbb
or
loop
mov
test
cmp
or
stos
sbb
inc
mov
adc
test
scas
inc
add
pop
sbb
pop
je
lods
add
mov
aad
xchg
adc
lds
out
sti
stc
mov
xchg
mov
mov
xchg
mov
call
and
dec
xor
push
or
mov
enter
mov
mov
scas
stos
enter
and
repz
jge
mov
cmpsb
xor
jl
dec
add
inc
ss
add
xor
inc
outsl
jp
sahf
pusha
sarb
mov
dec
adc
les
push
es
push
inc
cmp
dec
insb
inc
lcall
inc
jo
cli
aam
add
add
hlt
sub
add
cmc
fs
aad
jg
and
mov
mov
sub
insb
xor
add
jmp
mov
add
mov
fmul
aam
clc
ds
xchg
cmpsb
es
shr
in
push
mov
sar
pop
sub
push
pusha
out
cwtl
enter
fadds
testb
jae
sbb
jle
push
cli
jne
mov
xorb
popa
fsub
xor
loope
mov
test
xchg
movsl
lret
and
loope
and
out
aad
dec
mov
cwtl
ret
cmc
roll
je
addr16
dec
and
adc
inc
rcll
jbe
sbb
hlt
idiv
dec
popf
add
shl
xor
fisubrl
es
mov
or
jnp
inc
dec
or
in
pop
dec
mov
jne
inc
and
out
jb
sub
test
dec
enter
mov
insb
push
icebp
xchg
push
mov
inc
flds
or
shll
xor
scas
ss
mov
rcll
daa
sub
iret
mov
mov
fld
push
mov
divl
dec
sbb
xor
sub
mov
scas
inc
xchg
dec
scas
bound
cld
add
adc
test
inc
xchg
cs
roll
hlt
push
ret
sbb
push
xchg
les
filds
sbb
pop
cld
mov
inc
sbb
jmp
jg
in
or
lcall
ret
pop
or
mov
jo
xor
xchg
inc
xlat
ljmp
popf
jg
xchg
mov
cli
dec
cld
movsl
inc
out
or
add
mov
xchg
fisubrl
test
jo
scas
and
and
hlt
sbb
xchg
cmc
add
push
or
ja
call
hlt
push
sbb
leave
mov
add
add
cwtl
orl
inc
push
adc
enter
imul
addr16
add
and
in
mov
xchg
jb
mov
sub
add
enter
int
jne
imul
xchg
shlb
enter
mov
xchg
push
test
adc
push
mov
ljmp
pop
push
add
jge
int
dec
andb
and
into
lds
mov
mov
add
or
and
into
call
fisubs
pop
dec
outsb
xchg
arpl
hlt
dec
and
cmp
push
xchg
mov
or
xorl
lret
add
push
aas
xlat
rorb
mov
out
xchg
sub
add
nop
push
hlt
or
leave
cltd
inc
lock
jo
ss
mov
xchg
and
inc
jne
mov
cmp
jle
out
enter
hlt
adc
inc
add
ret
jne
loope
enter
cmp
outsl
xchg
hlt
add
loope
push
test
dec
jge
enter
cs
inc
jge
pop
jp
dec
lahf
cld
mov
or
fsubs
cmp
enter
sub
int
jnp
out
shll
mov
dec
mov
jb
sbb
mov
xchg
pop
les
lock
mov
mov
cmp
sub
mov
jns
and
mov
std
pop
or
aad
scas
inc
test
or
dec
jae
xor
imul
repz
cmp
out
jmp
push
addb
add
jae
pop
lret
rcr
popf
cmpsb
cmp
leave
fiadds
jo
pop
add
aam
adc
jl
test
add
lea
les
push
hlt
cltd
mov
xchg
rcrl
aas
repnz
push
sbb
test
in
ljmp
sbb
jle
fistpll
jle
jle
mov
fisttps
jecxz
jns
xor
mov
stos
test
out
cmp
fwait
test
scas
mov
setp
orb
std
jp
mov
mov
jg
mov
sub
in
lods
push
std
imul
pop
jl
sbb
inc
sbb
jae
add
cmpsl
mov
add
pop
lods
and
cmp
dec
and
adc
add
add
fdiv
inc
rorb
mov
pop
fidivrl
push
or
mov
mov
and
out
inc
js
js
and
or
pop
add
addl
sub
fildl
pushf
sbb
shrl
pop
xchg
arpl
jb
or
negb
add
inc
xchg
cmp
sahf
push
mov
jmp
sub
mov
jmp
repnz
cmc
xchg
mul
clc
into
or
incl
cmp
fmull
sub
int3
lret
bound
pop
mov
and
popa
mov
lahf
sub
sarl
cmp
lods
arpl
pop
xchg
mov
jne
pusha
ret
call
push
jecxz
push
pop
fistpl
popa
fsubs
jne
mov
jne,pt
rcll
push
pop
fisttpll
dec
sub
mov
push
repnz
xchg
flds
xchg
shr
stos
clc
fistpl
mov
stos
stos
enter
in
pop
fwait
ljmp
mov
mov
push
xchg
sub
divb
jmp
xlat
cwtl
lock
dec
shlb
push
mov
pop
sub
and
jns
dec
push
sub
lods
popf
jmp
cmp
push
xor
sbb
nop
in
hlt
iret
pop
orl
dec
sub
push
aad
rcrb
jns
push
imull
push
push
sbb
or
adc
int3
fsubl
enter
mov
test
adc
cld
jnp
andb
dec
mov
ficoms
sub
in
inc
mov
les
outsb
testl
clc
roll
xor
push
bound
xor
ja
push
push
movsl
loopne
movsb
xchg
mov
inc
inc
gs
stc
xor
push
push
adc
pusha
lcall
push
rclb
mov
or
sub
push
test
and
push
andb
lods
lea
test
adc
lcall
mov
inc
inc
mov
pop
pop
movsl
push
and
mov
jmp
cwtl
jno
cmpsl
sahf
cmpl
stos
fmuls
filds
fsts
imul
mov
mov
xor
je
aam
inc
xchg
repnz
jns
in
leave
xlat
insb
ljmp
sbb
adc
leave
push
hlt
out
mov
and
push
mov
mov
adcl
jne
mov
pop
xor
mov
rcrb
push
mov
cmp
push
sarl
add
dec
push
les
nop
adc
cmpsl
test
into
jmp
movsl
mov
and
daa
in
add
insb
mov
add
xchg
rclb
mov
shr
dec
mov
imul
mov
icebp
mov
sub
or
test
aam
mov
jno
lea
mov
subb
mov
leave
out
cmp
outsl
sub
enter
cwtl
sbb
mov
xchg
in
ret
insb
inc
jo
sbbb
push
fldt
mov
jl
inc
test
lock
or
pop
and
and
inc
or
xor
lods
adc
outsl
sub
addb
add
mov
jle
dec
mov
mov
fcmovne
adc
sbb
ljmp
int3
test
dec
mov
fwait
stc
ficoms
sti
imul
dec
pusha
rorl
loop
xlat
sar
add
dec
cmpsl
js
lea
cmp
sar
scas
xor
arpl
pop
mov
rcr
push
stos
jne
jns
mov
xchg
push
mov
jno
sub
aam
xor
inc
adc
pop
cmp
stos
adc
xlat
fcmovnu
sub
jb
sbb
pop
out
sbb
sbb
xchg
pusha
sub
mov
push
std
fsts
je
mov
pusha
adc
out
push
in
loopne
rcrl
jmp
cmp
shrb
fistpll
test
int3
movsl
jne
and
sub
sub
lcall
jae
pop
push
int
es
xchg
mov
pop
jns
sti
movsb
stos
icebp
xchg
test
mov
test
mov
inc
lahf
rolb
fildll
dec
outsl
mov
insl
pushf
push
mov
push
test
mov
add
jne
movl
pop
lock
add
pusha
or
push
push
lods
ss
popf
dec
mov
jne
les
test
adc
xchg
data16
cmp
push
fisttps
repnz
xchg
sub
sbb
test
mov
xor
xchg
mov
xor
mov
xchg
dec
cmp
push
xchg
jle
add
decl
in
jmp
outsl
fs
fcomip
loope
dec
adc
pop
orl
out
dec
jne
jp
sub
bound
es
add
lsl
or
dec
lock
mov
mov
cld
pop
pushf
push
mov
mov
sahf
stos
lret
pusha
lahf
rcrb
into
out
mov
iret
and
xor
inc
push
leave
pop
jl
sti
mov
xchg
ljmp
loopne
hlt
and
mov
imul
test
push
or
xchg
jbe
pop
outsb
or
cmp
cmpsl
adc
das
out
pushf
cmp
lods
sbb
pusha
adc
movsl
mov
out
inc
or
cld
into
movsb
hlt
movsl
push
cmpb
dec
pop
or
out
xor
xchg
iret
xchg
xlat
mov
into
pusha
ret
shll
add
loopne
movsb
jmp
jl
push
mov
jns
xchg
xor
jp
push
mov
cld
mov
stos
sbb
or
push
adc
push
sti
dec
hlt
push
dec
rcll
call
adc
adc
stos
lret
jecxz
push
les
mov
pusha
push
jo
dec
mov
flds
mov
add
outsl
sbb
enter
sbb
mov
icebp
mov
xor
loopne
lahf
mov
gs
xchg
mov
les
jnp
xchg
std
sbb
pop
or
xchg
cmp
dec
clc
inc
loope
xchg
jne
xor
lods
movsl
push
fnstenv
cwtl
repz
enter
mov
add
cmc
ffreep
jne
mov
lret
fmul
add
outsl
push
mov
cli
jle
loop
fucomip
mov
cmc
mov
jno
test
hlt
add
pop
dec
xchg
movsb
xchg
pop
out
xchg
test
mov
cmc
shrl
and
test
push
fisttps
xchg
sub
int3
or
sbb
loop
sub
lods
shr
lea
rorb
scas
sub
roll
int
mov
push
mov
lcall
mov
jp
orl
add
push
je
les
fstp
enter
xchg
mov
lret
inc
cmp
mov
add
clc
mov
adc
mov
cmc
sbb
or
cmp
iret
jmp
inc
inc
fbld
nop
mov
shll
mov
outsb
adc
mov
fiaddl
xchg
test
mov
arpl
pop
cmpsb
lahf
lret
xchg
xchg
aad
mov
aas
mov
mov
adc
insb
jmp
mov
mov
sub
fiadds
jnp
fadds
fists
pop
jmp
push
mov
sbb
shrl
pop
loope
mov
jg
pushf
ss
or
subl
arpl
in
test
jno
scas
sahf
pop
popf
sarl
xchg
cmpsl
mov
mov
pop
ffree
bound
cli
test
test
lcall
movsb
mov
dec
outsb
dec
rcrb
jb
add
sub
inc
push
repnz
rorb
ds
pushf
add
movsl
jne
decl
xchg
add
xchg
lods
jmp
insb
xchg
scas
or
sub
pop
pop
clc
sbb
mov
std
dec
push
mov
cmpsl
sub
xor
cli
add
popa
mov
stc
xor
cmp
int3
mov
mov
adc
mov
gs
outsb
sub
enter
les
add
test
filds
scas
inc
ds
aad
mov
sbb
xchg
loope
pop
stos
addr16
in
cwtl
es
jbe
sub
mov
push
test
push
mov
leave
shrl
insl
push
orb
push
jns
rcrb
lret
cmc
mov
aam
add
imul
cmp
cmp
sbb
test
lret
xor
jmp
hlt
mov
pop
andl
jo
insl
nop
ret
mov
cmp
mov
enter
and
fyl2x
mov
sti
push
loop
lret
xchg
fwait
xor
cmc
mov
cmp
inc
jle
xchg
mov
adcb
cld
cmp
int3
push
int3
jmp
jne
xor
aam
jmp
sti
inc
push
fdivr
ficoml
lods
loopne
push
sarl
test
bound
push
sti
ja
test
lock
mov
jns
das
add
hlt
aas
loopne
xor
das
mov
movsb
and
cld
pop
cmpsl
pop
sbb
push
mov
add
popf
insl
adc
add
fst
lods
cmpsb
lea
jmp
addr16
icebp
cmpsb
loopne
call
pop
movsb
and
dec
adc
and
cmp
push
jnp
icebp
xchg
inc
jp
imul
sub
dec
jns
jp
sbb
loop
xchg
fildll
fidivs
popa
sub
or
les
jg
filds
lock
loope
scas
popf
pop
xor
lds
mov
and
lock
add
jo
pop
jnp
inc
imul
xor
ret
jmp
mov
pop
push
inc
insb
and
sarb
mov
pop
stc
push
mov
stos
add
pusha
mov
mov
mov
stos
jne
cmp
cwtl
cs
hlt
test
cwtl
bound
out
hlt
sbb
mov
les
xor
inc
insl
sub
cmp
dec
xor
fcoml
mov
mov
sub
cmp
sti
incl
movsb
popa
pop
stos
cmp
push
and
clc
xchg
leave
push
rcrb
cmpsl
xchg
jg
inc
test
mov
mov
les
jnp
xchg
pop
cmc
and
sbb
adc
jp
pop
and
jecxz
out
dec
lods
inc
mov
jo
rcrl
adc
nop
aas
in
jge
push
data16
outsb
pop
pop
add
or
insb
push
cmp
add
js
xor
inc
mov
hlt
or
aad
jmp
loope
push
xorb
ds
jne
cwtl
sub
jge
outsl
xor
and
rol
jne
push
clc
add
mov
cli
inc
push
push
push
add
cmp
mov
dec
push
std
jae
pop
inc
popf
xchg
add
xchg
mov
cli
pop
ficomps
sub
inc
cmp
rclb
shlb
pop
inc
cmc
lods
xlat
add
das
rclb
inc
dec
dec
push
cmpsl
adc
mov
hlt
adc
jge
insl
hlt
and
xor
dec
pop
in
add
aaa
sbb
cmp
xor
lea
sbb
test
movsb
xchg
add
xchg
mov
cmpsl
pop
leave
addr16
out
stos
lods
cmpsl
in
add
out
lock
jne
pop
pop
int3
mov
push
add
lds
sbb
out
pop
xchg
sti
inc
js
fdivrs
ljmp
loope
cli
fcomps
lock
mov
andl
cmp
pop
stos
push
xchg
hlt
push
mov
xchg
ja
repnz
lds
mov
sub
js
hlt
mov
push
cmp
mov
inc
shll
jle
lahf
xchg
lahf
stc
mov
repnz
imul
push
mov
fidivl
mov
dec
stos
lods
push
fmuls
hlt
sbb
lahf
into
sub
idiv
jmp
das
test
mov
push
test
sbb
sub
mov
inc
mulb
jns
jle
adc
jnp
adcb
pop
dec
mov
push
enter
out
xor
push
sti
or
popa
std
dec
cmp
lods
lret
mov
jecxz
mov
sti
fbld
addr16
js
mov
push
mov
xchg
loop
push
aas
testb
in
push
filds
pop
neg
mov
in
out
test
sub
fists
int3
mov
and
push
dec
cltd
add
loope
aaa
in
pop
das
stos
cmp
enter
sbb
and
mov
mov
push
xchg
xchg
mov
mov
inc
sub
scas
inc
pusha
xchg
cli
movsb
inc
jl
mov
jmp
pop
push
in
mov
outsl
jp
fwait
sub
mov
das
mov
test
mov
xor
cltd
jae
call
or
sbb
lcall
mov
popl
cmpsb
imul
leave
cltd
inc
je
lods
jbe
sub
ret
jne
int
push
dec
in
mov
shll
pop
pop
arpl
repnz
mov
and
jne
pushf
inc
sub
or
mov
scas
std
outsb
int3
and
andl
xor
and
or
into
dec
or
pop
test
cmp
jp
dec
insl
push
add
jl
inc
test
jle
xchg
or
push
pcmpeqw
lahf
decb
push
adc
mov
sbb
sti
add
push
push
push
dec
adc
cmp
jnp
add
mov
adcb
or
daa
stos
outsb
ljmp
inc
pop
out
les
mov
xor
mov
clc
hlt
rcrl
out
inc
fistl
js
mov
int3
inc
mov
adc
cmp
inc
sub
repnz
or
or
fdivl
out
push
push
sub
das
inc
dec
jle
xor
sub
mov
hlt
gs
iret
ljmp
cli
mov
sbb
dec
ljmp
sti
cwtl
add
aad
xchg
in
mov
add
aad
sahf
pop
xchg
jo
dec
cmpsb
dec
jl
imul
fildll
jl
rol
jnp
xor
fisttpll
add
jecxz
dec
insb
pop
in
test
dec
sub
add
adc
mov
jmp
jne
jo
out
mov
and
into
inc
push
lcall
push
insb
pop
lret
scas
lret
mov
insb
addb
negb
sahf
jmp
loope
pusha
ret
enter
or
inc
iret
xchg
je
aas
enter
add
repnz
mov
inc
leave
lahf
inc
adc
std
cwtl
push
pop
pop
loope
push
nop
jge
inc
in
out
test
subb
stos
fwait
cld
jns
into
mov
fnstcw
test
inc
pushf
jnp
or
cwtl
mov
mov
push
incb
mov
mov
mov
ljmp
scas
into
lahf
into
outsl
cmp
add
xchg
pop
xchg
cmp
test
pop
adc
loopne
daa
in
dec
stos
int3
add
pause
shrl
out
pop
scas
into
popa
hlt
imulb
push
cli
ret
pop
popa
outsl
add
les
lahf
hlt
fcmovb
test
mov
xchg
xor
mov
cs
icebp
data16
mov
mov
xor
and
xchg
jne
arpl
cmc
jbe
es
sbb
cmp
add
jg
adc
out
inc
push
insl
ljmp
out
popa
nop
mov
fucomi
sub
mov
in
inc
dec
out
cmp
mov
aas
push
jns
loopne
xor
mov
mov
mov
xchg
daa
fimull
outsb
pop
sbb
push
push
aad
mov
std
and
adc
mov
jge
pushl
loope
test
enter
dec
mov
sub
lods
mov
inc
cmc
pusha
imul
mov
sub
mov
xor
sbb
addl
adc
mov
enter
sti
xor
rol
imull
dec
jnp
jne
inc
std
mov
stos
jno
xchg
scas
cmp
sbb
mov
in
jns
sbb
cmpsb
or
fldcw
out
xchg
or
nop
inc
pop
xor
mov
sub
push
mov
mov
jb
les
jnp
push
inc
push
mov
fcom
bnd
xor
test
ljmp
sarb
pop
cmp
add
adc
xchg
ljmp
cld
or
mov
sbb
xchg
and
mov
push
into
sub
xor
xor
insb
push
ljmp
mov
fidivs
mov
add
pop
mov
movsb
stos
jl
ss
test
les
shlb
or
shlb
sbb
cmpl
push
out
out
icebp
jl
cmp
add
pop
fisubrs
jmp
push
stos
and
outsl
outsl
mov
stos
shll
outsl
mov
cmp
xor
sahf
or
fistps
nop
xchg
fdivrl
clc
jne
add
cmc
push
jecxz
and
dec
push
fucomp
mov
cmp
sbb
sbb
cmp
xor
xchg
leave
jno
mov
mov
sbb
pop
gs
cmp
orb
sub
jle,pn
mov
push
jecxz
test
icebp
adc
jae
nop
insl
mov
jae
leave
inc
mov
or
jno
cmp
jnp,pn
enter
cmp
pop
in
lods
hlt
or
lock
mov
and
pop
mov
mov
mov
rcll
add
inc
lret
push
icebp
ret
repnz
adc
xchg
dec
subl
jnp
hlt
mov
shl
aas
cwtl
sub
sub
mov
add
xorb
cmp
and
dec
dec
pusha
les
jno
stc
icebp
scas
pop
push
inc
mov
aas
cmp
xchg
cmpb
test
imul
dec
into
into
sub
addl
gs
jecxz
xchg
test
rclb
xchg
mov
out
push
test
scas
mov
hlt
roll
push
mov
pop
and
or
aam
bound
fiadds
lock
adc
ljmp
inc
add
into
mov
pop
mov
ror
pop
pusha
call
jmp
push
xchg
int3
cmpsl
ret
dec
lcall
int3
loope
das
std
sub
mov
movsb
sub
push
shlb
add
inc
aad
ds
loop
fwait
imul
fcomps
jne
mov
mov
hlt
inc
mulb
aad
cmpsb
les
js
aam
ret
outsl
jns
mov
mov
or
sti
jmp
pop
nop
mov
jo
push
insb
jne
pop
push
push
lea
adc
in
jno
test
scas
shll
enter
std
notl
mov
lods
pop
mov
mov
cs
inc
pushf
ljmp
and
lea
and
or
xor
in
daa
push
add
leave
in
clc
or
adc
jp
jb
inc
lcall
ficoms
dec
inc
and
cmp
loope
scas
dec
test
jo
push
dec
insl
sbb
push
aaa
adc
mov
fadd
lea
mov
add
cmp
mov
loopne,pt
adc
jl
fnstsw
leave
rorl
xchg
sti
jne
push
inc
test
pop
into
lea
ret
sub
push
mov
data16
mov
push
mov
fnstsw
fcoml
mov
cltd
lret
testb
mov
int3
mov
out
pop
push
bound
mov
mov
sbb
mov
push
jle
add
xchg
and
mov
addl
insb
mov
dec
in
lds
clc
gs
inc
mov
in
mov
adc
jne
fcoms
andb
sub
xchg
mov
sbb
sarb
ss
inc
shl
out
mov
nop
jmp
arpl
push
popl
lahf
xchg
push
sub
scas
push
pop
cmp
repnz
inc
jno
insl
int
push
inc
js
pushf
repz
sub
sub
mov
std
pusha
aam
cmpsl
mov
inc
add
mov
jo
sbb
jg
lods
xchg
arpl
loopne
mov
stc
int3
jle
jp
nop
int3
pop
sub
test
lret
rorl
xor
in
pusha
add
sti
outsl
mov
shr
imul
xchg
test
sub
dec
mov
jle
fsubs
mov
jg
stc
in
sub
mov
mov
cli
jno
iret
mov
jbe
mov
or
dec
lods
test
ss
inc
mov
or
sbb
push
mov
syscall
hlt
adcl
add
dec
lods
enter
adc
jns
nop
js
jne
jne
mov
xchg
cld
out
jp
mov
test
hlt
xor
sahf
popa
ret
dec
mov
mov
aas
movsb
ljmp
jmp
pop
movsl
stos
fs
ds
fcomi
jg
bound
mov
je
pop
push
push
add
mov
sbb
rorb
es
enter
xchg
fldenv
adc
pop
fldcw
sub
insb
push
sti
pop
stos
push
pop
mov
push
hlt
scas
mov
lock
out
jno
nop
xchg
repnz
or
mov
jle
ja
jne
mov
call
and
sub
mov
clc
push
mov
stos
ja
pop
jns
mov
loop
aam
xchg
stos
aad
fdiv
aaa
es
add
lcall
movsl
dec
xchg
xchg
roll
or
xor
and
jb
cmpsl
popa
mov
xchg
mov
or
icebp
pushf
loope
cmp
dec
outsb
or
pop
icebp
mov
es
in
fucomip
lret
in
pop
lea
inc
inc
es
mov
ds
aad
cmp
mov
dec
insl
dec
mov
mov
dec
stos
mov
ds
dec
and
adc
inc
sub
push
add
push
imul
xchg
adc
data16
insl
mov
repz
lock
sti
fstl
jmp
aad
inc
cli
jne
or
leave
dec
loope
add
pop
jb
sub
mov
push
or
std
add
mov
mov
or
loopne
dec
imul
mov
test
or
adc
jnp
mov
loope
les
hlt
fcmovu
cmpsb
or
cmp
cmp
into
mov
or
pop
fimuls
xchg
mov
enter
shll
add
pushf
xchg
orb
inc
rorb
inc
fists
mov
dec
sub
leave
mov
scas
cltd
out
xlat
mov
repnz
incl
scas
pop
js
cmp
into
inc
push
or
loopne
gs
ljmp
adcl
hlt
push
lret
add
sti
mov
call
xor
sahf
int
lahf
push
sbb
inc
or
pusha
mov
out
adcl
inc
movsl
in
cs
subb
shlb
and
sub
pop
rcr
jge
and
hlt
xchg
aam
bound
mov
mov
mov
mov
mov
in
mov
add
bound
stos
mov
jecxz
aam
addr16
aas
rcrb
add
cmp
lret
movsl
mov
mov
push
add
ss
loop
pop
or
popa
mov
pop
pushf
lock
mov
cld
inc
pop
sub
loope
mov
or
push
fcmovnu
xchg
sbb
add
xchg
nop
test
test
pop
ja
and
mov
sar
cli
pop
ss
jns
lea
pop
pop
test
pop
jbe
enter
sbbl
dec
in
or
push
leave
mov
or
xchg
cmpsl
test
into
xor
pop
sbb
int3
jnp
aas
or
js
hlt
enter
ljmp
sub
hlt
and
jne
hlt
ret
jle
add
jne
inc
xchg
out
xchg
mov
jge
test
js
mov
insb
jge
and
sbb
cmpsl
sub
pop
push
push
hlt
test
jp
out
movsb
pop
mov
adc
mov
int
inc
pop
int
aas
leave
push
sub
jae
mov
adc
mov
outsb
ds
push
shrb
or
adc
inc
pushf
int
mov
xlat
mov
jnp
dec
inc
div
inc
mov
dec
repz
sarl
mov
test
test
push
and
push
add
xchg
xchg
jne
andb
cwtl
hlt
push
or
ljmp
or
arpl
pusha
mov
adc
sub
add
mov
cmp
cmc
mov
jne
cld
lea
inc
ja
sti
call
mov
dec
mov
popa
push
xchg
xchg
ret
dec
add
fldenv
imul
rorl
sub
out
inc
sbb
in
add
hlt
outsl
pop
sub
xchg
lahf
jns
mov
cmp
mov
and
lods
cli
push
xor
jns
cmpsl
sbb
dec
lods
lods
mov
lret
scas
cmp
cmc
into
movsb
xchg
icebp
dec
imul
rcrl
jg
loop
sahf
jno
hlt
pop
mov
dec
ret
gs
inc
jl
push
dec
pusha
movsb
jg
ffreep
iret
cmp
lods
sub
jmp
xchg
movd
scas
popf
and
jne
push
sti
sub
mov
push
adc
push
out
test
adc
sub
aas
mov
push
ss
clc
push
mov
pop
stos
xor
leave
cld
sub
and
out
inc
jne
test
hlt
pop
push
loopne
pusha
dec
and
outsl
popa
sub
sti
inc
jns
cltd
fnstcw
mov
test
sub
divl
push
pop
test
xlat
cmpsb
pop
hlt
xchg
jns
sahf
jo
cwtl
pop
mov
outsb
lds
dec
fsubrl
and
std
push
lcall
out
aam
add
xchg
pop
gs
out
add
call
lods
into
jb
addb
inc
loopne
sti
jmp
cs
cmpsl
jge
into
test
leave
mov
test
scas
pusha
sub
orb
sub
hlt
jecxz
add
inc
test
aaa
loope
push
stos
enter
adc
mov
loop
fsubr
add
popa
mov
mov
push
mov
lret
and
xchg
or
jl
leave
jne
cmp
das
lret
das
repz
inc
dec
mov
pop
cmp
pop
push
je
inc
xchg
shl
js
sub
push
xor
inc
clc
pop
loop
test
mov
or
scas
pop
into
in
adc
or
adc
int3
shll
or
in
arpl
mov
popa
dec
cltd
test
jne
and
fisubrl
sbb
rolb
fmul
test
jo
es
subb
je
iret
int3
inc
xor
xchg
js
xchg
jns
xchg
jp
test
mov
xor
adc
dec
fdivrp
loopne
cli
popa
mov
into
out
addb
fbstp
fdivrp
insb
testb
popf
fcoml
shlb
mov
dec
mul
dec
aaa
xorl
rcrb
ja
outsb
pop
arpl
xor
cmpsb
cmpb
and
in
sub
movsl
push
adc
loop
cmc
jne
insb
mov
sub
push
or
lcall
push
iret
adc
mov
nop
jne
cmp
hlt
iret
cmp
ljmp
sub
lods
test
in
sub
mov
imull
cmp
scas
mov
and
xor
hlt
xorb
jae
dec
movsl
scas
stos
fstpl
mov
inc
mov
mov
dec
hlt
leave
mov
jne
shlb
repz
xchg
cli
int3
stos
inc
push
gs
mov
jge
sbb
filds
sahf
mov
jb
div
cmc
mov
call
dec
outsl
sbb
adc
push
mov
ret
call
inc
or
jle
movl
jne
mov
mov
std
or
mov
and
or
xchg
jns
xchg
pop
inc
aad
mov
stc
in
pusha
ljmp
cmc
cmp
dec
mov
repnz
pop
stc
inc
fbstp
sbb
mov
mov
mulb
pop
pusha
jmp
lods
jbe
loop
jb
and
in
into
mov
aam
adc
scas
add
xorb
adc
pop
int
or
es
jns
push
add
or
cmp
das
jmp
aam
cmp
inc
movsl
fmull
sbb
mov
loopne
add
nop
push
aad
mov
xor
dec
imul
test
jge
ret
enter
std
shll
jl
xor
or
cmp
mov
jl
into
push
roll
add
mov
push
push
pushf
cmpsb
loopne
mov
imul
pop
dec
sti
jmp
mov
outsb
mov
shlb
sub
pop
scas
test
push
out
fs
psrlq
jnp
mov
in
jmp
loop
mov
pop
push
push
loopne
leave
pop
movsl
and
xchg
lcall
xchg
cmpsl
movl
in
and
stos
sbbb
nop
dec
cli
hlt
gs
sbb
and
and
cli
sahf
add
dec
mov
adc
cmp
cmp
fdiv
hlt
jns
decl
pop
scas
shr
mov
mov
aam
mov
push
jbe
mov
adc
or
iret
mov
mov
or
push
mov
cwtl
cmpsb
hlt
push
dec
or
mov
xchg
std
leave
push
pop
inc
bound
xchg
in
movsl
jge
dec
lods
in
loope
enter
jns
test
pop
stos
lcall
xor
ljmp
repnz
das
imul
fcoml
and
rclb
popf
pop
add
sbb
inc
adc
test
outsb
push
inc
jne,pt
mov
rolb
movsb
leave
insb
adc
fisubrl
or
adc
or
movsl
push
jmp
sub
xor
stos
sub
xor
sub
pop
cmp
rcrl
mov
fs
mov
xorl
mov
cli
mov
cmp
daa
xorb
into
insl
or
mov
sbb
add
inc
fnstenv
sbb
enter
mov
mov
stos
push
aas
shll
inc
mov
mov
mov
loope
ret
imulb
and
popa
imul
out
jne
imull
addl
pusha
out
mov
mov
dec
cmp
stos
mov
iret
dec
cmp
mov
ja
mov
push
aad
nop
clc
push
cwtl
lret
mov
std
movsl
cmp
leave
adc
cmp
imul
pop
cld
xchg
lods
xor
ss
ror
lods
pop
mov
inc
js
insl
xchg
mov
cwtl
mov
bound
loope
sahf
cli
xchg
movsl
arpl
mov
sub
mov
mov
adc
adc
xor
inc
jbe
out
push
faddl
add
inc
sbb
inc
xchg
xchg
and
imul
cmpsb
and
sub
pop
xchg
dec
es
xchg
pop
shrb
dec
popa
aaa
enter
dec
cmp
cmpsl
es
xor
es
xorl
add
or
xchg
stos
hlt
sbb
ret
add
fucomi
jbe
scas
jb
sbb
jl
dec
enter
ficompl
sbb
movsb
in
cli
dec
ss
rolb
int
or
adc
les
pop
popf
sarl
dec
test
dec
dec
xchg
mov
cwtl
and
mov
sti
push
cmpsl
shrl
mov
mov
push
data16
cli
add
mov
loope
fs
test
stc
stos
xor
arpl
fbld
iret
push
fldenv
push
hlt
adc
inc
mov
mov
jg
incb
nop
outsl
inc
mov
adc
mov
fisttpll
adc
iret
or
xchg
fistps
and
mov
mov
mov
or
pushl
cmp
hlt
testb
popa
in
xchg
mov
das
ljmp
outsb
inc
es
and
push
repnz
fsts
leave
test
mov
xchg
jnp
xchg
mov
mov
or
std
mov
pop
xchg
jne
jle
xor
add
loop
jp
aad
in
lret
add
inc
lock
pop
push
sahf
enter
jo
psubusb
pop
insl
mov
fs
push
mov
ds
adc
jns
addb
loop
jg
mov
and
mov
in
add
cmp
adc
xchg
sub
jne
lods
and
cmc
outsb
dec
ret
pop
pop
popa
dec
insl
pop
xor
add
xor
sbb
pop
adc
arpl
movsb
fbstp
xchg
cmp
inc
std
fs
add
sub
mov
arpl
dec
sti
das
movb
mov
in
inc
pusha
cmp
es
jle
mov
scas
mov
inc
jecxz
xor
push
gs
mov
aaa
mov
aad
jl
pushf
dec
andb
ret
leave
aaa
rcrl
fidivl
loop
cli
mov
and
add
popf
inc
std
mov
xchg
xchg
sbb
aas
xchg
and
gs
sub
gs
clc
enter
dec
cmp
xchg
jno
pushf
and
outsl
push
push
int3
les
jecxz
cmp
test
test
sub
in
xchg
pop
rorl
cmp
test
ss
jmp
add
dec
xchg
mov
inc
lahf
dec
and
lret
xchg
in
hlt
jb
addl
sub
pop
fisttps
adc
les
orb
cmc
jp
dec
sbb
push
hlt
negb
hlt
mov
sbb
shr
push
jge
test
fimuls
inc
adc
xchg
push
cltd
sub
mov
int3
imulb
cltd
pop
leave
divb
adc
xor
roll
sub
shlb
adc
xchg
jecxz
in
mov
inc
int
and
jg
cmp
pop
add
jle,pn
dec
loope
inc
jmp
or
jge
ret
mov
sub
outsl
mov
dec
pusha
iret
icebp
nop
shrb
pop
mov
pop
repnz
xchg
aam
imul
in
insl
icebp
mov
or
loopne
mov
dec
pop
repnz
xor
push
clc
mov
xchg
outsl
sahf
xchg
pop
dec
sarl
xor
and
std
stc
ja
sub
inc
xchg
mov
xor
push
jge
lods
test
mov
insb
cmp
mov
out
jns
push
mov
das
lret
rcrl
push
jb
pop
and
cmc
cmp
lret
pop
out
sbb
mov
pop
mov
inc
stc
scas
xlat
cmc
sbb
dec
mov
dec
jle
xor
inc
pop
arpl
xor
push
jbe
sahf
cmc
les
das
hlt
ja
idivl
xchg
bound
ja
dec
cmpsl
push
add
jns
decb
imul
xchg
mov
shrl
mov
icebp
and
lods
xchg
rorl
push
jp
clc
jmp
mov
insb
mov
repnz
lock
enter
mov
push
ljmp
in
aam
out
mov
xchg
loop
add
sub
sbb
addb
lock
mov
or
or
jo
cmp
push
jnp
rcrb
int
aad
fmul
sbb
xchg
sbbl
test
cmp
mov
push
mov
mov
cmp
xchg
lock
sub
sub
and
adc
jne
stc
cmp
addb
xchg
hlt
mov
push
add
xor
inc
mov
test
mov
ds
movsb
or
dec
gs
imul
shlb
or
lcall
cmpsl
std
jg
dec
fistps
shrb
push
mov
push
push
xchg
inc
stos
decl
inc
mov
jae
arpl
ja
js
mov
jecxz
pop
add
int3
adcl
pop
xor
and
pop
sbb
hlt
and
lock
movsl
mov
stos
sub
dec
cli
add
movsl
push
dec
inc
dec
outsl
add
sub
mov
xchg
int3
pop
cmp
scas
lea
xchg
out
popa
and
repnz
mov
sbb
mov
fdivl
xchg
push
and
sbb
leave
pop
paddb
push
pusha
adc
movsb
roll
ficompl
xlat
sbb
out
xlat
loop
inc
sub
sbb
mov
dec
cltd
mov
imul
pop
mov
jl
xor
std
xlat
idiv
sub
and
mov
leave
pushf
mov
cmp
pusha
fldl
sahf
add
je
xor
mov
hlt
mov
mov
scas
adc
mov
inc
xchg
mov
mov
sarl
sarb
xchg
lock
repnz
pop
hlt
arpl
jae
push
ret
pop
mov
lahf
pop
push
dec
pop
out
shll
mov
pop
push
add
jmp
jge
test
push
repz
enter
ret
addb
lods
idivl
lret
lcall
xchg
leave
xacquire
dec
in
mov
lcall
dec
cmp
repnz
dec
or
lcall
daa
loope
sub
repnz
add
jb
pusha
imul
xchg
lret
mov
flds
loope
gs
dec
mov
push
push
adc
jmp
adc
mov
out
push
gs
aad
mov
jne
lcall
cmp
jno
repnz
sbb
adc
jg
shlb
lahf
cmpsb
jo
iret
shlb
or
addb
dec
sti
jle
inc
inc
inc
push
and
add
pusha
xchg
rolb
sbb
jns
push
push
jo
mov
lds
add
shlb
mov
cmp
enter
fcompl
and
mov
incl
jo
rol
mov
aas
jae
mov
add
pop
adc
into
hlt
icebp
icebp
call
pushf
pop
fnstcw
hlt
and
pop
lock
cmpsl
into
test
mov
cld
aad
sub
or
xor
lcall
cmp
sub
xchg
ror
jmp
xchg
cs
lahf
and
inc
inc
mov
mov
mov
sarb
nop
or
test
sbb
xor
in
or
and
ret
dec
jecxz
stc
sub
xchg
cmpsb
add
push
cld
aaa
rorl
cmc
scas
add
xchg
xor
or
ljmp
sahf
or
mov
fidivl
test
mov
fldenv
std
cwtl
out
mov
inc
leave
movsb
arpl
stc
pop
in
pushf
inc
jg
dec
es
stos
or
xor
jp
mov
movb
scas
xor
lahf
clc
push
push
lods
add
adc
or
mov
mov
sbb
js
imul
dec
jne
inc
out
shll
insl
xlat
mov
jecxz
hlt
lret
sbb
in
movsl
inc
inc
repz
inc
xchg
in
sub
jbe
shl
mov
mov
adc
pop
mull
lahf
fistl
nop
movsl
or
loope
leave
idivb
lcall
jge
repnz
push
fcompl
jmp
in
mov
sbb
dec
movsb
les
push
and
sub
nop
fidivs
jg
loop
sbb
push
outsl
add
scas
mov
fs
push
roll
add
hlt
sub
fsubl
sub
mov
inc
sahf
mov
add
adc
pop
lock
test
addl
outsb
fidivs
xlat
sub
cmp
xlat
cmpsl
xchg
rolb
or
mov
pop
adc
nop
jns
shl
scas
std
das
mov
stos
test
lret
mov
in
hlt
sbbb
inc
movsb
test
sti
out
int
sbb
dec
in
jb
hlt
or
cmpsl
movsl
jo
nop
repnz
ss
push
setl
sub
jge
cli
decl
xchg
stos
repz
jbe
fmuls
xchg
es
iret
js
mov
test
cwtl
movsl
ss
pop
std
in
pusha
nop
mov
popf
sbb
mov
xchg
pop
cmpsl
inc
push
inc
loopne
adc
or
dec
sub
bound
aam
jo
aad
sbb
mov
push
or
xchg
pushf
lret
and
int3
fldl
aas
jg
into
add
das
addr16
bound
int
fs
pop
jb
and
xchg
mov
test
stos
sti
lock
cmpb
insl
lret
xor
adc
push
fdivl
push
ret
ss
shrb
test
push
ret
int3
in
movsb
adc
out
pop
test
sub
lcall
in
sub
shlb
push
cmpsl
cld
push
mov
dec
mov
cli
test
dec
adc
loopne
mov
addb
std
sub
arpl
adc
stos
push
jp
xor
stos
dec
xchg
cmp
lahf
call
pusha
addl
fmull
sub
nop
adc
push
push
dec
mov
sti
xchg
dec
sub
lea
pop
lahf
cwtl
push
inc
lret
sti
or
sub
in
test
or
int
cmc
xor
cwtl
jno
inc
xchg
mov
inc
out
sub
fbld
into
xchg
ret
jbe
sub
gs
mov
xchg
inc
notb
or
pushf
js
xchg
dec
jb
stc
mov
rorl
ja
cmpb
cs
lds
rcll
sbb
mov
loop
outsl
sub
jbe
and
adc
mov
mov
jns
add
bnd
mull
mov
mov
testb
lfs
stos
enter
and
inc
clc
popa
jmp
fdivl
inc
and
mov
cmc
fcoml
lret
inc
inc
aam
push
les
sbb
imul
xchg
inc
adc
jns
xor
pop
and
out
fcoms
insb
and
mov
mov
mov
aas
push
mov
in
call
xchg
push
sub
or
ja
add
int
lahf
add
mov
or
pop
andl
sbb
test
push
enter
stos
jg
ficomps
data16
cmp
test
repnz
xchg
insb
lret
aad
lods
faddl
mov
mov
rorb
xor
xlat
inc
and
inc
pop
fs
push
jo
cmp
fildl
loopne
add
cli
pop
cli
xchg
iret
sahf
ret
jp
outsl
mov
stc
push
sub
outsl
push
mov
lcall
dec
cmp
mov
add
mov
jne
cmpsl
shl
shrl
pusha
sub
inc
push
rol
shl
push
jge
or
hlt
push
sahf
jl
cli
and
test
inc
inc
dec
aas
sahf
inc
int
pop
cs
xor
enter
xchg
and
cmp
inc
xlat
mov
sub
je
and
pop
pop
adc
stos
push
add
faddp
sub
and
and
adcb
push
jmp
jle
leave
bound
lods
mov
mov
fstpt
cmp
stos
pop
std
inc
sub
dec
xchg
and
push
out
cmpsb
loope
mov
fldz
cmp
idiv
xchg
in
mov
cmp
xchg
sarl
xchg
mov
pushf
ljmp
lock
dec
mov
inc
mov
fwait
pusha
loop
int3
leave
xor
push
rorl
push
movsb
test
roll
das
scas
int3
and
pop
popf
sub
mov
fwait
mov
out
pop
push
add
pop
imulb
push
test
push
stc
xchg
cli
push
dec
mov
mov
jmp
bound
hlt
xchg
pop
cmp
jmp
add
sub
xchg
lods
test
les
hlt
mov
cld
xor
cmc
dec
mov
loopne
scas
inc
pop
dec
or
adc
fldt
sub
lds
je
test
xchg
js
sub
cld
bound
or
pusha
inc
mov
stos
out
or
sub
pop
dec
dec
mov
mov
mov
shlb
leave
mov
pop
add
stc
movsb
loope
or
popf
push
jns
pop
cmp
add
push
pop
out
xchg
ss
push
out
jge
dec
ja
mov
jp
ja
mov
mov
jne
xchg
and
loopne
xor
add
fdiv
testl
sub
mov
sub
push
out
out
mov
in
mov
lahf
loop
xlat
in
jne
inc
adc
imul
cmpsb
call
js
loop
cmc
jne
cmp
test
lcall
xchg
notb
pop
mov
mov
movsb
lcall
in
out
push
popa
cmpsl
xchg
aad
stos
in
mov
aas
inc
xchg
sub
pmullw
mov
dec
sub
leave
sti
das
cmp
push
in
hlt
jb
ss
test
stos
subb
test
mov
mov
jne
in
or
dec
or
cld
rorl
push
cmpsl
inc
xchg
loope
lahf
aam
int3
repz
xchg
pop
out
jae
mov
adc
fdivr
lret
subl
mov
jle
jbe
leave
and
int3
or
adc
aaa
cmp
add
adc
or
cs
ret
inc
jle
inc
hlt
cltd
mov
cmp
xchg
and
dec
filds
jecxz
in
mov
xchg
mov
pop
out
enter
mull
clc
jb
mov
lods
pop
imul
or
push
add
pop
js
xlat
popf
fsts
add
ret
dec
loop
pop
repnz
and
sbbb
push
xchg
cmp
stos
aas
mov
pusha
loopne
nop
jmp
pop
rorb
sbb
xor
lret
hlt
jmp
mov
leave
adc
xor
push
or
rorb
sub
bound
xor
xchg
sbb
mov
hlt
imul
mov
sbb
out
outsb
enter
sbb
hlt
mov
mov
inc
adc
idivl
lret
shr
rcll
add
imul
mov
xchg
roll
inc
out
mov
add
push
adc
enter
orl
jmp
insl
in
push
movsb
adc
outsb
push
xchg
pop
and
jns
icebp
in
lahf
xor
arpl
cltd
scas
shlb
les
inc
adc
mov
scas
mov
cs
rcrl
fnstenv
scas
and
pop
dec
jae
popa
push
arpl
xchg
mov
inc
push
jae
mov
xchg
pop
lds
inc
lds
outsb
inc
mov
test
inc
mov
lcall
mov
lcall
sbb
add
imul
stos
ss
mov
adc
jb
out
pushf
sti
dec
test
outsb
xlat
mov
jne
push
jle
out
mov
sbb
dec
pop
in
dec
or
call
lods
and
movsl
cmc
adc
jno
xor
adc
subl
pop
je
lcall
cwtl
add
cmp
and
xchg
push
lret
adc
cwtl
mov
scas
sub
rclb
pop
mov
rcrb
pop
ja
jnp
or
cwtl
pushf
mov
sub
or
sub
out
test
sub
mov
or
jmp
je
test
fnop
sub
decb
clc
pop
into
sbb
inc
sbb
jae
mov
adc
jne
pop
testb
cwtl
out
call
pop
inc
sub
and
jne
jg
pop
mov
push
and
add
pop
cwtl
cmp
mov
jnp
cwtl
ret
out
push
inc
adc
ds
xor
cmp
and
and
out
mov
pop
jne
cmp
popf
shll
test
adc
into
inc
je
mov
outsb
rcll
lock
push
in
ffree
push
loope
ds
jne
cmp
jmp
add
mov
xchg
mov
andb
mov
shrb
enter
jo
or
push
cmpsl
cwtl
pusha
test
adc
inc
call
maxps
sub
hlt
mov
xlat
mov
dec
out
fucomip
sbb
xchg
cmc
sbb
movsb
dec
adc
cmp
out
arpl
sub
inc
mov
inc
lcall
sub
pop
lret
or
xchg
js
lret
pop
rorl
imul
xchg
int
dec
sti
in
xchg
xchg
mov
icebp
push
stos
mov
push
jne
jge
cld
jg
cli
test
nop
mov
ret
nop
hlt
adc
add
inc
inc
sbb
xchg
xor
sbb
add
adc
push
sbb
fistpll
xchg
cmp
cwtl
jmp
sub
jbe
inc
outsb
cmp
cmp
insb
imul
cld
fidivrs
out
adc
int3
test
push
adc
sbb
repz
xorb
ljmp
mov
repnz
mov
or
call
mov
xor
cmp
cmc
pop
mov
stos
jo
xlat
sub
adc
pop
mov
jo
cmp
jg
mov
incb
dec
insl
fwait
push
std
stos
push
cmp
or
out
or
jp
sub
stc
mov
in
imul
mov
sbb
push
adc
add
add
sbb
inc
pop
iret
inc
jl
mov
mov
sbb
mov
sti
dec
lret
inc
insb
cs
sbb
aas
and
nop
push
hlt
mov
leave
das
icebp
mov
aaa
mov
loope
or
in
insb
mov
std
xchg
flds
pop
sbb
pop
jle
mov
outsb
repz
lods
fs
pop
stos
mov
push
into
xchg
sbb
sbbl
fildl
cs
or
or
outsl
jnp
lds
enter
lret
repz
jge
inc
call
mov
push
inc
push
lcall
fdivrs
add
mov
sub
jg
ds
jns
dec
lret
add
jmp
movsb
mov
mov
sub
jae
jle
add
ljmp
outsl
std
insb
inc
lret
mov
rcll
mov
sub
in
js
fstps
addb
insb
int3
xchg
test
movsb
fs
jns
adc
push
aad
ljmp
stos
push
jmp
pop
sbb
mov
pop
rclb
les
jbe
cmc
cld
sbb
test
push
cmp
pop
scas
pop
hlt
xor
mov
shlb
add
xor
mov
sub
scas
or
and
sahf
pop
jge
mov
rcrb
xor
jns
nop
xchg
push
dec
add
lock
lcall
sub
subl
and
push
cmp
cmpsl
and
loop
jp
mov
fcoml
sub
push
sti
pop
aad
sub
inc
mov
inc
inc
rcrb
in
pop
out
jbe
xchg
dec
mov
cmpsl
ljmp
or
mov
dec
ljmp
pop
inc
aad
mov
movsb
pushf
sub
dec
outsl
enter
dec
sub
addb
sahf
or
testl
out
jp
sub
add
xchg
call
dec
sbb
test
inc
fdivrs
xor
stos
pop
cwtl
cmpsb
mov
pop
push
jbe
mov
test
in
xchg
mov
mov
mov
push
inc
out
roll
push
mov
in
mov
mov
jge
push
xor
dec
mov
xor
sbb
sahf
addb
push
push
fdivrp
inc
and
mov
cmpsb
sub
add
dec
adc
add
cmp
pop
insl
xchg
sar
test
and
ret
orb
cltd
mov
pop
scas
push
popf
dec
cs
hlt
mov
std
jg
dec
fbld
mov
xchg
push
andb
jne
cmpsb
lret
cmpsb
lret
sbb
fs
xlat
inc
aaa
scas
ror
lods
and
sbb
leave
adc
sbb
orb
adc
inc
pop
adc
adc
dec
loope
mov
fwait
inc
test
ret
inc
dec
xchg
lahf
add
addr16
cmpl
cmp
mov
sub
xorl
enter
sub
sbb
xor
test
adc
test
cmc
sahf
cmp
insl
mov
and
stc
lods
add
imul
cmp
mov
mov
push
pop
imul
rclb
mov
push
dec
test
cwtl
mov
add
and
dec
jbe
scas
daa
or
fnstenv
std
jmp
int3
mov
les
imul
xor
push
stos
dec
push
mov
fdivs
mov
pop
insl
mov
mov
sbb
mov
inc
sti
inc
addl
std
cltd
adc
or
stos
das
scas
jbe,pt
fsubrs
mov
xlat
mov
scas
ds
sti
bound
add
add
mov
push
nop
scas
subb
or
pushf
negb
sbb
add
hlt
pop
test
mov
dec
cltd
aam
mov
pop
push
imul
mov
or
imul
insb
sbb
mov
les
inc
movsl
add
push
push
jg
push
ret
clc
xlat
inc
xchg
inc
cltd
xor
inc
xchg
xchg
fcom
sbb
stos
jne
and
mov
leave
icebp
lods
push
pop
outsl
lret
sub
sbb
push
cmc
or
jge
ret
out
xchg
es
adc
push
sub
dec
and
popf
ja
andb
or
push
aam
ficoml
pop
je
popa
stc
jl
adc
mov
hlt
negb
mov
dec
ss
push
outsb
push
xchg
hlt
jnp
mov
bound
sbb
lea
sbb
pop
mov
popf
loopne
lds
jo
insl
mov
scas
and
les
inc
add
adc
adc
inc
or
push
nop
mov
push
add
sub
add
stc
push
das
mov
push
sbb
movsl
shlb
sahf
loopne
sbb
push
mov
packsswb
add
sub
add
jnp
pop
jg
cmp
jne
jecxz
lods
movsb
xor
outsl
imul
sub
mov
add
xor
shrb
sub
cmpsb
and
and
aam
sbb
inc
add
push
cld
mov
inc
cmpsl
lods
pop
in
cmpsb
push
in
pop
popf
jne
out
inc
mov
stos
mov
mov
jbe
test
jno
ds
cmp
adc
sub
and
cltd
insb
mov
mov
cmp
add
adc
lret
inc
popf
rcrl
jnp
mov
or
sub
leave
xor
push
mov
mov
in
xlat
mov
arpl
inc
fwait
inc
mov
push
rcrb
push
adc
cld
shrl
mov
adc
inc
xchg
push
add
mov
cltd
mov
leave
add
imul
pop
cmp
aad
fiaddl
xchg
insb
fcoml
push
mov
fdivs
leave
sbb
jge
inc
mov
jne
jle
fldenv
lods
cs
nop
mov
xchg
sub
inc
adc
jne
insl
cmp
and
dec
inc
push
sbb
dec
mov
mov
dec
fcmove
pop
push
notb
mov
mov
xchg
in
mov
jne
movsb
dec
cs
and
rol
in
mov
dec
int
loopne
xor
insb
movsb
pop
adc
add
mov
repz
mov
aas
jmp
sub
push
sub
jp
sub
loop
enter
adc
mov
cmp
cmp
shll
lcall
repz
rclb
ret
dec
sub
pop
fstps
push
ja
xchg
sbb
fnstcw
mov
adcl
mov
inc
das
xor
outsl
mov
lock
push
xorl
fisubrl
or
icebp
hlt
stos
add
push
test
mov
sbb
cmpsb
add
test
ljmp
xor
mov
jle
adc
jno
or
pushf
inc
inc
adc
jno
int3
fmull
stos
scas
ret
ja
adc
cwtl
cmp
and
enter
std
inc
push
sbb
hlt
adc
cmp
xor
addl
or
jp
mov
jle
ja
int3
jp
pop
roll
mov
sarl
std
adc
jne
insb
dec
add
sarl
shlb
push
dec
xor
and
in
and
cli
repnz
es
repnz
stc
stos
mov
mov
mov
cmp
sub
rolb
icebp
and
shll
stc
fdivrl
inc
fwait
mov
ja
mov
enter
lods
insl
fwait
xorb
pusha
cli
mov
xor
shrb
repz
pop
cli
bound
movsl
jle
in
test
and
scas
push
clc
lret
adc
xor
and
mov
adc
sbb
movsl
cmc
and
jp
xor
sub
test
cmp
cld
dec
arpl
cwtl
shl
hlt
lock
int3
and
sub
mov
js
push
lret
daa
jo
add
outsb
incb
xchg
jp
test
iret
or
enter
popf
fimull
mov
aam
pushf
rorl
sarb
aas
or
push
std
push
gs
add
jne
inc
add
ret
xchg
push
mov
lock
pushf
adc
mov
pop
fs
xchg
pop
add
mov
sub
hlt
push
jl
mov
in
jnp
mov
sbb
cmc
and
addb
or
inc
or
fs
mov
xor
sti
fldcw
test
sub
push
cs
push
pop
push
int3
subl
orb
mov
pop
mov
sti
cltd
aam
dec
pusha
pop
nop
xchg
jle
mov
testl
sbb
mov
hlt
aas
cmc
movsl
jns
bound
cwtl
lret
insb
pusha
or
loopne
pop
lahf
ja
enter
mulb
adc
or
add
ficoml
aaa
insl
loope
outsb
and
mov
dec
push
ret
inc
cli
push
int
cs
pop
cmova
lret
cwtl
lock
mov
pop
loopne
jbe
loopne
inc
pusha
loop
loop
ret
mov
cmp
jle
out
out
dec
mov
scas
jne
mov
mov
idivl
mov
or
imul
inc
fidivl
pop
rclb
repnz
repz
aad
ss
mov
flds
test
mov
jmp
hlt
mov
and
or
repz
mov
inc
add
jle
xchg
lods
jmp
jne
gs
jl
dec
xchg
add
push
xor
es
xorl
sub
lret
adc
hlt
or
stc
mov
inc
jmp
adc
loopne
fistpl
push
les
hlt
mov
sbb
filds
outsb
mov
mov
pop
cmp
inc
pop
jl
sti
xchg
ja
inc
aaa
loop
mov
movsb
icebp
jle
sbb
loopne
repz
movsb
sbb
dec
test
mov
mov
inc
insb
rclb
or
or
pop
jecxz
pop
mov
shlb
hlt
push
lock
jo
mov
fsubl
mov
movsl
cmp
dec
nop
mov
inc
xor
add
lret
xorb
xor
stos
sub
xchg
adc
or
sbb
mov
cmpsl
mov
dec
mov
and
pop
in
push
into
dec
scas
mov
xchg
dec
and
fcomps
shll
pusha
dec
js
add
test
push
xlat
ja
popa
jne
in
cmpl
imul
dec
jnp
xchg
lock
popf
inc
cmpsb
rolb
jo
pop
push
mov
lea
imul
adc
cltd
mov
xchg
outsl
cmp
inc
icebp
sbb
dec
push
pop
mov
loop
rorl
outsl
fs
pop
mov
mov
icebp
ja
mov
sti
fxch
xorl
cmp
es
imul
icebp
add
dec
pop
sub
dec
test
dec
mov
mov
dec
sub
enter
sub
rorb
mov
stos
sub
inc
xchg
out
inc
fnstenv
loope
stos
dec
xchg
nop
and
push
sbb
rclb
pop
xor
xchg
fsub
in
into
jo
mov
les
sarl
mulps
adc
add
mov
mov
xchg
je
add
insb
pop
xchg
push
adc
hlt
adc
dec
mov
xchg
dec
aad
jl
mov
add
inc
ss
jbe
mov
push
fnstcw
in
shl
cmpsl
movsl
pop
xchg
ret
les
orl
and
divps
pop
and
xor
pop
sub
cmp
andb
pop
jl
loope
lcall
les
stc
sti
ja
inc
mov
adc
jbe
arpl
cld
push
adcl
push
mov
lcall
lahf
lods
pop
jbe
jmp
pop
stc
cmp
leave
mov
ffree
or
sub
or
dec
divl
add
loop
jno
sbb
fstpl
inc
sbb
sbb
and
sub
fcmovnu
push
filds
and
inc
fistpl
push
xchg
popf
sbb
and
add
push
adc
cmp
and
jmp
add
sub
aam
jge
jmp
les
mov
scas
outsb
or
js
cmp
nop
mov
icebp
js
pop
jge
ret
jne
push
scas
lret
fcomi
std
leave
jp
mov
pop
mov
lock
in
xchg
stc
lcall
jmp
xor
push
std
jg
fsubrs
xor
push
pop
sbb
bswap
icebp
aas
inc
hlt
sub
push
xchg
lods
fwait
test
jg
push
outsb
aaa
adc
jecxz
cmpsl
push
std
sbb
dec
hlt
inc
or
popa
mov
cmp
in
aad
in
inc
in
pop
rolb
jns
rorl
je
cli
push
fisubrs
das
cs
xorb
fbstp
and
or
aad
pop
mov
add
cli
ss
adc
neg
adc
sub
xor
sbb
or
pop
test
cwtl
test
xlat
jne
xchg
lods
sahf
sub
jae
adc
sahf
lahf
sbb
jmp
movsl
mov
fsts
fucomi
mov
mov
das
lcall
mov
lea
dec
andb
mov
xor
push
pushf
jnp
stos
xor
jne
dec
jle
push
test
mov
mov
mov
andb
xor
add
mov
mov
mov
es
fwait
push
pop
hlt
fcomp
cld
enter
add
rcrl
in
cltd
into
hlt
xchg
fisttpll
pop
in
pop
adc
insl
lock
fildl
addb
xchg
fistl
ret
mov
int3
adc
inc
test
mov
mov
adcl
mov
jne
imul
cmp
popa
popf
inc
pop
inc
stos
adc
cmpsl
lds
sub
int
xchg
sub
xchg
leave
mov
push
icebp
mov
mov
ljmp
xor
sbbl
nop
lods
insb
enter
xorl
mov
test
mov
mov
cltd
xor
inc
inc
adcb
adc
fidivrs
cltd
loope
test
mov
cmc
loope
out
adc
std
in
cltd
add
mov
movsb
hlt
cs
xor
loop
add
mov
add
adc
imul
in
mov
and
xchg
jmp
in
movsb
mov
push
or
nop
jne
pop
out
dec
jno
out
dec
fmul
cmpsl
xchg
rol
movsl
jl
cmpsb
mov
popa
xchg
dec
insl
xor
arpl
cmpb
lcall
pop
fs
jne
xchg
std
sbb
sbb
ret
cld
fsubr
scas
inc
inc
adcb
hlt
hlt
xchg
cmp
sub
push
subl
cmc
jnp
test
lods
pushf
les
movsl
int3
pop
cmpsb
stc
mov
add
ss
dec
xchg
inc
dec
mov
hlt
dec
xchg
popa
adc
enter
fwait
push
repnz
lods
movsw
or
mov
insb
xchg
dec
xor
lahf
repz
xor
insb
lret
enter
iret
xor
dec
aas
cwtl
or
imul
ljmp
stc
movsl
stos
ljmp
mov
mov
pushf
jne
lea
shlb
fdivp
pop
jmp
test
cli
cltd
rorl
xor
enter
inc
loop
loopne
es
mov
adc
add
mov
es
nop
test
sbb
fsts
test
mov
scas
test
lahf
enter
jle
loop
mov
pop
xor
loopne
jmp
or
sbb
pop
mov
rorl
in
cwtl
cmpsl
aad
orb
pop
addr16
enter
xchg
enter
sti
int
adc
mov
xchg
subb
das
sbb
lds
xchg
adc
pusha
pop
push
or
push
cltd
push
dec
inc
stos
pushf
mov
into
fstl
enter
popf
push
and
cmp
xchg
loopne
clc
jae
aam
inc
fneni(8087
xor
and
popa
js
int3
nop
dec
lock
xchg
adc
xchg
in
fdiv
fbld
cmpsl
out
inc
lea
xorl
xor
jle
popa
cs
rcl
inc
iret
mov
cltd
daa
pop
orb
mov
ret
ret
out
jne
adc
in
sbb
ret
jp
or
sbb
inc
cmp
test
cmp
adc
mov
testl
fs
mov
hlt
sar
sahf
test
cmovno
cwtl
push
shll
cmp
js
call
daa
iret
fnsetpm(287
call
lock
or
aad
mov
push
mov
adc
xchg
es
test
hlt
xor
jns
cld
or
mov
fwait
adc
cmp
shlb
rorb
adc
dec
jb
push
mov
mulb
or
sub
xchg
and
xlat
stc
icebp
add
fldl
jg
and
jge
dec
inc
mov
pop
out
xchg
in
add
out
sti
adc
cld
icebp
ljmp
inc
mov
out
dec
mov
jnp
ljmp
push
add
pop
or
add
sbb
stos
mov
mov
lods
scas
ss
sbb
sti
and
sbb
movsb
xchg
imul
mov
cwtl
cltd
ljmp
push
inc
mov
inc
dec
mov
jne
fnsave
movsl
repz
dec
es
push
dec
popl
push
loope
jo
pop
dec
mov
loope
aaa
call
dec
enter
les
cmpsb
or
movsl
adc
aaa
dec
xlat
repz
or
leave
add
inc
add
sub
je
and
add
repnz
fcompl
mov
cwtl
pop
jg
hlt
mov
xchg
in
fldl
test
pop
sub
pop
push
fstpt
test
or
jbe
adc
or
adc
adc
adc
jne
data16
stos
lock
clc
xchg
pop
sbb
mov
mov
ficoms
mov
xor
into
lods
pop
enter
std
into
xchg
arpl
mov
test
dec
xor
lret
repz
js
jmp
pop
mov
mov
push
outsb
incl
mov
pop
ljmp
aas
mull
scas
jge
push
push
imul
imul
stc
dec
iret
dec
in
addb
adc
add
lods
jne
xchg
add
pop
leave
int
pop
mov
mov
popa
nop
inc
pop
xchg
in
cwtl
lods
test
push
fstps
dec
aam
jle
hlt
xor
mov
shlb
inc
or
sbb
orl
push
into
das
nop
push
mov
mov
xor
sbbl
sub
add
push
sbb
cmpsb
mov
sub
pop
adc
cmp
jl
xchg
nop
movsb
xor
add
hlt
ja
cmp
arpl
cmp
imul
sub
jge
adc
pop
cld
lds
sti
pop
scas
repnz
fbld
jl
push
ja
add
enter
aaa
push
pop
add
jg
lret
inc
mov
xor
test
sub
mov
test
call
xor
loope
mov
cmpb
pop
or
notb
jbe
jg
leave
and
dec
fdivrl
dec
int3
scas
cmpl
mov
push
jp
xchg
xchg
inc
rcrb
and
divb
adc
xor
dec
xchg
stc
push
push
or
addr16
pop
lret
add
pop
aas
lods
jg
shrl
lret
cmpsl
ret
dec
loope
mov
cmpsl
sbb
fbstp
pop
shrl
pop
out
sub
inc
gs
loop
stos
rolb
cmp
push
cltd
push
mov
or
jle
adc
lret
loope
sub
mov
rcll
cli
xor
lods
fnstsw
pop
inc
inc
adc
imul
jbe
mov
fdivl
ds
mov
roll
dec
pop
cmpsl
sub
out
xchg
pop
mov
mov
or
icebp
fstl
lret
es
les
push
std
dec
inc
jne
sub
iret
cmpl
sbb
sti
sub
pop
jl
jge
push
jp
mov
pop
xchg
scas
cmp
xchg
outsl
scas
cmpb
adc
outsl
pop
push
in
cwtl
push
and
mov
loop
hlt
mov
fisttpll
clc
cmpsl
dec
jnp
xchg
sub
fldcw
and
sub
add
adc
inc
hlt
inc
shll
sub
out
push
in
scas
or
test
cmp
ds
mov
mov
repz
mov
out
mov
lods
pop
and
mov
push
jl
int
add
push
mov
push
cmp
xor
mov
cld
pop
lret
pop
enter
mov
inc
push
push
adc
lock
cld
adcl
fs
push
movsb
or
sbb
xor
cmpsb
push
add
data16
pop
sub
int3
in
lods
fmull
xchg
mov
jb
es
lods
or
xor
fiadds
cltd
cmp
cld
mov
push
push
sub
sti
sub
das
adcb
data16
add
jne
shlb
pusha
sub
fnstsw
popf
ret
mov
pop
xchg
mov
shrl
mov
and
lock
loope
fdivs
hlt
jnp
popf
out
aam
xor
mov
push
clc
xchg
pop
addr16
daa
orl
add
and
push
cmpsl
push
insl
lods
in
lds
fdivrl
pop
add
mov
or
mov
loopne
cmpb
pop
jo
in
mov
cwtl
out
mov
sti
pop
daa
pop
rcl
stos
xchg
inc
mov
push
add
notl
int
ja
icebp
add
in
int
mov
movsl
orl
inc
enter
jae
roll
pop
stos
inc
leave
inc
loopne
cli
inc
stos
mov
pop
dec
stos
sti
test
outsl
mov
xchg
test
add
stc
dec
cmc
lea
adc
ja
shll
jnp
mov
cmpsl
sub
mov
jne
out
flds
loop
jecxz
loop
fsubl
aad
or
mov
shll
cmpsl
enter
sbb
mov
or
lods
sbb
xor
pop
push
sahf
inc
sub
adc
xchg
loopne
or
pop
sbb
adc
int
xchg
shlb
pop
rcrl
lods
lcall
into
hlt
leave
andb
xchg
jecxz
mov
cmc
shlb
mov
or
rclb
lock
int
jne
adc
jmp
cli
dec
cmpsb
add
out
push
jne
pop
stos
push
push
repnz
sti
enter
jge
addr16
inc
int3
inc
cmp
fwait
dec
in
mov
add
lock
in
cmpsb
inc
or
cmpsb
mov
nop
imul
mov
jp
pushf
add
sti
out
adc
jecxz,pt
or
lods
add
jno
daa
mov
add
and
adc
sub
or
hlt
xchg
cmp
rcrl
jmp
stos
aam
inc
xchg
sub
jp
sub
lahf
pop
mov
dec
jg
sub
xor
fists
jecxz
in
cmc
mov
aaa
enter
sub
sbb
int
subl
pop
and
icebp
mov
aaa
into
mov
mov
xlat
and
mov
jne
pop
clc
jbe
add
into
mov
popf
sbb
aaa
sub
xchg
pop
pop
pop
add
jp
test
pop
es
add
lock
cmpsb
and
cwtl
inc
leave
adc
xchg
xor
jle
clc
pop
test
cmp
fnstenv
hlt
test
das
mov
mov
jne
xchg
add
mov
cmpsb
lret
out
xchg
loopne
or
jo
test
mov
sub
and
mov
clc
adc
sub
inc
cmc
cmp
ljmp
les
dec
out
push
push
hlt
xorb
sbbl
adc
cli
mov
or
in
jecxz
add
out
mov
sti
jmp
shlb
ss
stos
mov
fwait
add
jne
pop
xchg
outsl
sub
cmpsl
xor
insb
addr16
xchg
icebp
push
das
pusha
cmp
jl
movsl
dec
cmp
enter
xlat
sub
in
xchg
or
jns
fadds
lods
inc
jle
pusha
sub
aad
insl
jnp
or
stc
jg
lods
mov
inc
add
mov
hlt
pop
sub
mov
aaa
imul
xor
inc
and
test
imul
dec
lock
xchg
push
cld
add
pusha
out
std
mov
loope
fnstcw
stos
mov
jo
scas
add
cmp
cmp
fldl
xchg
out
jno
inc
stos
adc
stc
push
mov
std
mov
fidivrs
loope
sub
out
push
ret
hlt
pop
xchg
jne
pop
and
pop
xchg
mov
sbb
mov
lock
lods
jp
xchg
sub
jmp
pusha
lcall
sbb
out
mov
sti
jns
lods
popf
sbb
pop
xchg
inc
ljmp
jmp
aam
mov
push
adc
mov
nop
lods
mov
in
ret
lea
or
imul
dec
add
dec
rcrl
mov
lods
je
dec
les
xor
sub
fadds
and
dec
mov
in
mov
cmp
int
xchg
sub
shll
jmp
aaa
scas
test
lods
jmp
shrl
cs
or
dec
sub
inc
js
push
mov
fstps
inc
dec
and
hlt
dec
inc
or
cmpl
lods
int3
fdivrs
clc
mov
ds
dec
mov
and
test
xchg
in
jns
xchg
cmp
mov
push
lods
push
repz
cmpb
stc
pusha
cli
xchg
adc
lea
scas
in
out
mov
fstl
sub
xlat
mov
lcall
inc
dec
mov
icebp
filds
ret
data16
loopne
mov
jne
push
int
mov
jl
or
loope
aaa
mov
cwtl
sbb
sub
mov
or
shlb
xchg
cmp
jg
dec
leave
push
lret
pop
data16
outsl
jae
add
das
pop
or
lahf
div
rol
addl
add
cmp
mov
or
stos
add
mov
dec
mov
add
xchg
jbe
loopne
outsb
ja
dec
xor
xchg
lcall
dec
lret
inc
xchg
loopne
adc
jb
icebp
mov
xchg
in
xchg
xor
xor
int3
fsubr
xchg
mov
mov
mov
dec
repnz
out
push
pop
adc
ljmp
cwtl
fdivrp
mov
xor
mov
les
cli
lret
mov
push
add
pop
in
push
mov
loope
mov
cmp
mov
pop
ljmp
pop
fldcw
mov
divl
pusha
add
xchg
mov
or
jnp
pop
call
fidivrl
pop
xchg
push
gs
imulb
imul
pop
sti
cmpsb
cmp
pusha
out
rolb
add
aaa
hlt
ja
test
jecxz
xorb
sbb
or
mov
stos
pushf
out
sahf
leave
and
xchg
sub
push
mov
dec
gs
push
xchg
push
pop
addb
dec
push
push
sub
mov
movsl
xchg
xor
inc
enter
add
and
fsubl
jecxz
adc
mov
enter
push
int3
leave
jecxz
push
hlt
add
adc
pop
jp
or
jmp
scas
fdivrl
and
sub
mov
pusha
mov
std
test
dec
mov
and
les
push
push
notb
repnz
or
jnp
in
push
inc
push
push
sbb
imul
xchg
or
ja
loope
lea
dec
inc
incb
sub
jnp
add
sahf
sti
cmp
sub
adc
je
pop
jge
and
out
je
in
aas
sub
pop
jbe
sbb
mov
sbb
sbb
xchg
clc
insl
inc
pop
ds
addb
xor
jge
adc
pusha
cmp
jb
testl
adc
inc
hlt
or
or
sub
push
adc
cmp
dec
sub
clc
or
cmpsl
jns
mov
test
or
push
or
mov
mov
stos
lods
pop
in
mov
icebp
ljmp
xor
movsb
push
rorb
mov
jge
lock
jle
int3
andl
subl
lret
and
jg
sub
maskmovq
divl
enter
out
pusha
xchg
pop
push
mov
sbbl
dec
scas
mov
or
stos
andl
pushf
mov
xor
xor
jns
shl
enter
or
or
add
sbb
push
inc
inc
sub
jno
sub
aas
repnz
push
pop
arpl
xchg
les
ficoms
xchg
cltd
hlt
sbb
mov
xchg
jne
stc
fldcw
sti
bound
out
adc
cmp
push
adc
daa
sub
mov
push
mov
jp
lcall
repz
cld
push
arpl
fiaddl
cs
rcll
js
jo
sti
fcoms
dec
jg
jnp
mov
mov
lea
lods
inc
dec
loopne
dec
clc
into
push
adc
or
push
lock
enter
into
test
movsb
stos
movsl
xchg
mov
dec
cmc
in
cmpsl
or
pop
mov
into
imul
adc
push
popf
mov
sub
ds
pop
jmp
sbb
cmpsl
cltd
mov
test
inc
fldt
lock
pop
sub
jl
cmpsl
pop
jge
mov
stos
pusha
mov
or
nop
into
cwtl
jne
sbb
cmp
int
loope
jle
outsl
daa
es
addr16
testl
clc
lret
in
add
mov
pop
mov
lahf
mov
es
mov
mov
push
inc
hlt
sbb
xchg
ror
and
mov
lret
out
cmp
fucomp
dec
jns
push
cli
sub
add
mov
mov
inc
movsb
hlt
and
cld
shlb
movsb
mov
jne
mov
xchg
xchg
mov
loope
xchg
lods
mov
or
out
imul
and
add
sbb
ljmp
into
incb
mov
add
xor
nop
cmc
cwtl
adc
stos
hlt
xor
push
lcall
fildll
in
pop
hlt
cmp
cli
pop
xor
in
adc
xor
jb
jg
ljmp
nop
stos
sar
push
jge
leave
dec
adc
push
testb
imul
mov
jo
in
insb
enter
mov
or
mov
insl
xchg
push
enter
es
or
add
push
push
mov
dec
jb
push
xchg
sbb
insb
mov
xchg
sub
nop
dec
repz
movsl
cmc
jne
lds
pop
and
xor
lods
lcall
mov
in
mov
jne
jae
and
repnz
ret
sub
mov
cmpsb
rorl
les
ficompl
adc
xor
ss
call
enter
sbb
jb
icebp
cltd
hlt
mov
ja
cli
popf
ja
ret
lock
mov
mov
cmpsb
or
add
mov
or
lods
testl
jne
and
jns
ror
movsl
xchg
jno
stc
cmc
pop
jecxz
aam
inc
adc
sub
mov
inc
cmp
mov
cmpsl
mov
repnz
pop
repz
into
andl
movsl
les
sahf
hlt
cld
not
in
insb
xchg
xor
push
shll
loope
mov
filds
test
into
inc
pop
inc
dec
adc
enter
cs
popa
mov
loopne
enter
scas
pusha
out
imul
mov
dec
mov
sub
enter
xor
cmp
outsl
in
jle
arpl
outsl
imul
out
push
pop
idivb
pop
push
jae
sbb
lcall
pop
insl
and
jl
cwtl
sbb
adc
sub
jbe
xchg
scas
std
inc
int3
inc
jno
cmp
jne
loop
js
movsb
les
es
mov
roll
cmp
in
daa
arpl
lahf
test
aas
movsb
jecxz
test
push
cmp
adc
cmp
or
test
inc
sbb
inc
repnz
and
lods
inc
cmp
outsl
cmpsb
icebp
add
lock
mov
stos
hlt
out
mov
fnstsw
idivb
test
dec
add
orb
mov
les
stc
sbb
stos
cmpsb
mov
jbe
sbb
and
insb
xchg
je
sub
mov
mov
decl
dec
loopne
fsubrl
mov
mov
lods
adc
repz
dec
inc
xor
rcrl
ret
ja
cmc
das
mov
repz
sbbl
or
xchg
sar
ret
repnz
sarb
adc
out
popf
jb
jl
hlt
jne
inc
es
sub
cmp
scas
pop
adc
orb
addr16
sahf
push
cmp
lock
mov
dec
imull
test
loop
stos
fs
xchg
mov
and
cmovbe
repz
fbld
sarl
stc
mov
inc
shlb
rol
xor
aad
outsl
mov
pusha
stc
pop
out
mov
mov
and
div
dec
shlb
mov
cmc
or
inc
imul
icebp
cmp
mov
or
stos
das
addl
scas
push
inc
out
xchg
mov
std
ss
sub
adc
adc
hlt
in
sbb
orl
adc
push
popa
adc
popf
rcll
cmpsl
mov
jbe
lods
mov
and
mov
in
jne
cmp
jecxz
xor
je
int3
pushf
lods
jne
mov
cli
mov
into
adc
xchg
cmc
notb
mov
mov
xchg
push
jo
dec
stos
scas
in
aas
xorb
in
test
or
cmp
pop
imul
xchg
xchg
xchg
or
dec
mov
addl
aad
stos
lcall
cmp
gs
rol
mov
mov
lock
cmp
stc
es
popa
popa
loop
js
push
push
fdivl
mov
lods
mov
or
inc
jb
scas
push
add
and
fcomip
mov
push
cmp
out
add
shlb
movsl
fldt
movsb
pop
in
nop
sub
out
mov
fdivl
enter
stos
jp
jle
cld
xor
repnz
cld
in
jmp
lret
push
adc
imul
jl
out
add
int3
sub
cmc
hlt
mov
cmp
stc
or
std
pop
jg
nop
pop
sub
arpl
cmp
repz
into
filds
xchg
dec
in
xchg
xor
and
out
hlt
or
dec
std
cli
and
lods
divl
adc
addl
pop
push
xchg
xor
add
inc
stc
and
xchg
into
ss
pop
sub
jp
xor
aad
mov
mov
adc
ljmp
cwtl
iret
sbbb
jne
inc
sbb
sub
jns
into
mov
xchg
les
mov
mov
fnstenv
adc
insb
lret
arpl
mov
sbb
push
pop
sub
xor
out
rclb
lds
lods
int3
test
sbb
lock
xor
push
mov
jmp
es
lods
push
jp
outsb
cmp
dec
nop
fisttpl
pop
mov
inc
mov
jnp
push
pop
pop
out
outsb
bound
and
jl
cmp
sbb
mov
sahf
push
push
xchg
adc
xchg
mov
mov
lods
mov
ja
or
jno
in
jno
mov
sbb
ret
add
jno
mov
push
cwtl
xor
movsb
movsb
cs
cld
test
or
fcmovb
lret
mov
fdiv
test
xorl
dec
daa
gs
fistpl
loopne
fiadds
jae
xchg
mov
xchg
push
inc
fcompl
xchg
mov
fildll
pop
push
mov
pop
inc
fdivr
les
icebp
add
rorb
sbb
sbbl
xchg
push
pusha
or
and
adc
jge
add
sub
sbb
and
inc
mov
push
jne
pushf
clc
test
iret
shll
hlt
mov
scas
lret
push
or
and
or
out
in
mov
negb
push
cli
or
imul
daa
adc
les
push
arpl
jle
les
nop
es
push
fdiv
and
cltd
stos
jl
clc
roll
loop
scas
pop
fsubs
lret
out
ret
out
push
mov
or
push
scas
les
outsl
mov
leave
dec
fisubl
push
mov
dec
push
or
xlat
inc
sub
xor
sahf
ret
and
xor
fdivr
pop
push
es
fsubp
test
insb
push
mov
repnz
cmpsl
js
js
xor
ficompl
incl
mov
jmp
hlt
ss
sarl
ja
stos
dec
rcr
jmp
pop
xor
mov
pop
fists
cltd
pop
incb
mov
ljmp
aas
push
cmp
dec
gs
adc
hlt
xchg
xor
push
test
loopne
xchg
mov
sub
push
xchg
add
pop
mov
sub
push
and
sub
pop
sbb
or
inc
in
movsb
jo
inc
outsl
leave
xchg
mov
mov
mov
ss
lret
paddb
cs
sbb
scas
es
mov
or
lret
lds
adc
int3
lds
mov
pop
add
cs
add
aad
mov
das
pop
add
pop
test
cmp
jmp
xchg
lret
loopne
push
jne
mov
dec
mov
add
sti
ljmp
mov
pop
sub
cli
hlt
mov
sub
and
cmpsl
sub
xor
mov
ret
popa
out
push
nop
sub
fadd
mov
pop
mov
cmpsb
mov
mov
test
and
pop
cmpsb
add
mov
movsb
jmp
int3
outsl
das
pop
cld
sbb
jg
test
cs
cmpsb
sbb
sub
cli
das
dec
xor
outsl
mov
es
or
aas
insl
add
nop
ret
int3
sbb
dec
adc
mov
jecxz
test
hlt
jnp
ficomps
jge
inc
mov
sub
std
and
sbb
dec
fisubrs
jbe
into
mov
mov
repnz
stos
add
and
movsl
sub
pop
orl
flds
popa
rcr
adc
mov
lock
movsl
int
rorl
aam
int3
lahf
jne
pop
inc
fisubrs
pop
jno
inc
subb
int
rorb
cmc
icebp
xchg
loopne
inc
or
xchg
out
xlat
adc
enter
addb
das
cs
adc
les
jno
sbbb
jae
sbb
xor
nop
sub
jl
or
mov
pushf
cmpsl
daa
lcall
xlat
test
mov
sub
aad
pop
xchg
sbb
fldpi
and
mov
pop
popf
test
cwtl
adc
cli
enter
scas
sub
xor
lahf
sahf
dec
sbb
nop
je
mov
adc
mov
ret
into
mov
jle
ja
adc
stos
xor
out
xchg
xchg
mov
sbb
orl
xchg
xchg
mov
mov
mov
sbb
mov
nop
jb
fucom
mov
mov
add
repnz
mov
add
scas
test
xlat
mov
mov
mov
mull
inc
div
leave
mov
mov
push
xlat
in
or
rorl
cli
insb
out
test
pop
adcb
pop
inc
lret
inc
cwtl
cmpb
std
fcomps
or
shrb
cltd
out
fstp
imul
ljmp
lds
mov
xorb
js
test
mov
jne
ret
mov
push
xchg
xchg
sahf
into
les
mov
jle
jmp
orl
jno
sti
inc
mov
xchg
or
inc
fstpl
inc
call
xchg
addr16
pop
add
subl
pop
fs
or
cmc
mov
sub
push
mov
popa
insb
inc
shlb
imul
aam
enter
pop
jo
in
cli
sbb
inc
xor
mov
pop
inc
push
cmp
add
mov
inc
xchg
insb
movsl
dec
sbb
in
add
mov
out
inc
ficompl
mov
cmpsb
call
int
mov
mov
out
cmp
call
jne
jle
ljmp
xchg
add
or
mov
mov
push
dec
nop
mov
cs
mov
jle
adc
jo
adc
mov
adc
pop
hlt
push
pop
push
xor
lods
or
mov
stc
or
pop
lods
jl
add
mov
mov
xor
cmp
or
stos
movsb
cmp
sbb
sub
add
and
mov
pop
lea
cmp
jae
fst
rol
cmpsb
xor
stos
mov
push
jne
mov
movsl
cmpb
lea
sbbb
mov
fldenv
jp
pop
in
mov
xchg
push
sub
cld
andb
pop
jnp
and
repz
outsb
mov
int3
push
clc
add
leave
jne
dec
mov
cmc
stos
or
xor
pop
dec
adc
xchg
out
inc
fs
pusha
add
aad
inc
gs
les
push
or
adc
and
and
das
jmp
shll
ds
jo
mov
jge
jmp
pop
xor
jle
add
pop
add
jne
pop
xchg
shll
pushf
jmp
mov
leave
jno
add
jg
xor
adc
clc
pusha
setbe
mov
xor
jno
push
jb
and
into
stc
mov
mov
jp
sarl
stc
por
test
movsb
mov
out
gs
inc
roll
imul
mov
mov
hlt
pop
adc
adc
push
and
inc
xor
fbld
cmpsl
test
test
aas
inc
mov
pop
sbb
add
std
scas
adc
ds
xlat
call
fdivrs
mov
cmp
mov
pop
or
popa
scas
jae
xchg
fnsave
stos
ds
insl
jo
mov
repz
pop
jne
inc
in
ljmp
mov
fucomi
push
mov
insb
mov
add
jae
mov
add
jle
adc
xchg
xchg
hlt
or
jb
out
or
xlat
jl
xchg
mov
sbb
sub
pop
shl
jle
or
out
imul
push
bts
mov
pop
push
imul
jnp
andb
dec
jae
ret
js
inc
out
daa
outsb
inc
add
lea
lods
inc
cli
inc
mov
mov
cwtl
adc
or
sub
or
hlt
xor
lods
dec
mov
out
sbb
xor
loopne
mov
dec
ja
int3
mov
sti
scas
test
enter
add
sahf
jg
mov
jne
jmp
add
loopne
pop
dec
mov
lock
inc
and
mov
inc
rcll
outsl
add
iret
fsts
push
jl
jl
jmp
hlt
push
dec
adc
sub
clc
rorl
inc
jns
sbb
mov
cwtl
movsl
cmp
push
ret
xchg
cs
mov
mov
fimuls
pop
daa
lock
icebp
add
repz
xchg
inc
and
jl
cmpsl
push
lds
mov
imul
xchg
jge
enter
shll
std
out
mov
xchg
es
jp
ljmp
inc
cmp
ja
push
inc
pop
divl
inc
rorl
nop
rcrl
and
jge
pop
cmpsl
jge
add
mov
dec
out
or
inc
sub
pop
insl
ljmp
cmp
js
andl
addl
sub
fbstp
rorb
shll
shll
mov
add
sbb
jle
daa
cmp
mov
pusha
in
mov
and
pop
lcall
pusha
addr16
cld
in
pop
jnp
popf
and
mov
mov
imul
incb
mov
dec
cmp
xor
repnz
mov
mov
sub
jb
add
mov
lret
loop
xor
jbe
sbb
jmp
sti
es
in
pusha
ljmp
mov
jno
push
adc
dec
pop
mov
pusha
sub
jbe
scas
rorl
lea
imulb
popf
or
cld
add
mov
das
sti
mov
jbe
xchg
inc
xchg
mov
fsubrl
jp
adc
and
shl
int
and
loopne
insl
data16
dec
sub
push
xchg
mov
ret
idivl
insl
jbe
xchg
and
ja
xchg
mov
leave
ds
rorb
loop
cwtl
mov
push
push
mov
jg
cmp
mov
cmp
into
in
icebp
adc
jp
cwtl
mov
bound
mov
bound
into
fstl
cmp
inc
dec
dec
inc
or
cld
mov
inc
sbb
es
loopne
imul
jecxz
dec
adc
sti
mov
jo
xchg
fdiv
pushf
sbb
xchg
push
daa
pusha
mov
push
test
dec
sub
icebp
xchg
inc
and
cmc
fwait
decb
jno
aad
push
xchg
jmp
sbb
mov
sub
shl
inc
pop
inc
mov
ds
js
mov
dec
inc
fcomip
push
jmp
jg
int3
hlt
insl
jno
nop
inc
and
leave
mov
xchg
in
inc
sbbb
adc
fldl
or
in
pop
mov
push
ss
pop
pop
std
inc
dec
add
sbbb
loopne
sub
dec
jb
push
sti
nop
xchg
sub
aaa
lret
clc
fs
push
cmp
push
insb
in
fistpl
loope
stos
sub
xor
sti
jg
mov
stos
cld
push
rcrl
lcall
in
lods
rcrb
repnz
cli
sub
imulb
or
add
sbb
int3
mov
mov
inc
xchg
jne
sbb
cmpsl
push
enter
hlt
pop
mov
inc
dec
loope
mov
or
jae
pop
add
pop
in
mov
or
inc
mov
mov
jne
sub
jge
jg
and
inc
and
cmpl
fcmovb
jmp
bound
or
notl
sub
andb
out
rolb
pop
or
scas
fwait
and
jnp
mov
outsl
or
push
jne
jg
jl
in
sub
int
outsl
movsl
pop
push
xchg
xchg
mov
or
xor
add
stos
addr16
xorb
mov
jnp
hlt
dec
dec
js
mov
ret
bound
shll
mov
push
lods
cs
cmp
push
xchg
es
clc
dec
int3
push
imulb
fisttps
sti
test
imul
lock
stos
mov
fcompl
lret
shrb
imul
test
pop
dec
cmpb
sub
ret
xchg
dec
add
sahf
add
xchg
xchg
push
repnz
inc
aaa
aas
mov
sub
shr
in
test
add
push
repnz
bound
sahf
orb
addr16
inc
xchg
iret
mov
inc
out
and
jne
jnp
subl
subl
into
mov
call
sbb
or
jne
inc
clc
data16
int3
test
cmpsb
int
dec
test
inc
fidivrs
mov
push
shll
cwtl
in
dec
nop
fldcw
rcll
pushf
add
jne
sbb
jge
daa
cmpsw
mov
inc
sub
aam
jecxz
jne
xor
lahf
fidivl
xchg
out
outsb
stc
add
jecxz
iret
mov
cmpsl
sub
sbb
test
cmp
lods
pop
sbb
hlt
je
in
in
mov
movsb
push
test
jbe,pn
mov
clc
dec
in
mov
xor
out
popa
jne
daa
pop
enter
mov
inc
dec
dec
push
dec
adc
or
dec
inc
loop
int3
pop
pop
mov
mov
pop
inc
mov
pop
sbb
shlb
imul
jle
lahf
adc
jp
xor
jnp
andb
in
xor
add
leave
mov
sub
add
hlt
movsb
adc
xchg
loopne
aaa
inc
out
insl
fadds
jg
pop
sub
outsb
js
out
mov
je
ds
xor
or
dec
or
pop
jnp
data16
xchg
jne
test
xchg
dec
push
pop
jb
sti
sub
fwait
add
in
mov
cmp
fbstp
jne
xchg
insl
adcl
pop
sahf
cltd
call
movsb
inc
push
push
pop
and
cli
sub
sahf
cli
hlt
fwait
and
stc
xor
shl
insl
or
ja
sub
lock
gs
fists
inc
sub
inc
xor
fidivrs
dec
aad
dec
or
dec
pusha
pusha
inc
mov
imul
or
jl
mov
std
jle
shrb
stos
decb
fisubl
call
loope
hlt
jmp
mov
mov
repz
pusha
pop
cmpsl
sbb
add
test
jmp
cwtl
out
rorl
pop
data16
inc
fistpl
push
xchg
sub
sub
dec
xlat
adc
mov
jecxz
rcr
test
jp
xchg
loope
or
subl
repnz
addl
push
sarb
xchg
subl
stos
js
cwtl
lock
sub
ja
pop
and
jg
cmp
pushf
hlt
adcl
call
pop
or
popf
xlat
adc
les
das
inc
inc
stos
sbb
adc
add
pop
mov
xor
sbb
lods
leave
aam
out
or
lret
testl
movsw
imul
cmc
sub
lcall
loopne
test
mov
int3
add
sbbb
cld
testl
dec
push
popa
pop
mov
push
add
jle
shrl
scas
mov
loop
add
leave
nop
mov
mov
push
sti
jecxz
inc
mov
adc
dec
repnz
jbe
sub
out
xlat
and
loopne
cmpsl
mov
jle
hlt
outsl
movsb
imulb
mov
push
sub
enter
enter
or
lahf
mov
or
lods
mov
aaa
andb
add
add
xchg
loope
pusha
pop
xchg
daa
jo
dec
xchg
inc
add
cmp
gs
out
or
dec
or
mov
push
push
dec
outsl
mov
sub
pop
test
or
out
int
test
push
add
test
jle
and
xchg
mov
inc
pushf
in
idivb
jp
or
xchg
gs
xchg
stc
jno
inc
push
pop
jmp
sub
pop
std
cmp
xlat
cmpsb
js
leave
push
nop
xor
test
cmc
lret
or
jle
fstl
ret
rcr
fdivl
adc
pop
cmpsb
xchg
add
into
pusha
jne
xchg
pop
loop
adc
dec
movsl
shll
js
and
inc
int
mov
insb
enter
pop
push
orl
popf
icebp
mov
pop
stos
mov
nop
lret
mov
in
iret
sub
sub
in
xchg
lods
cmc
and
jecxz
and
xchg
fildl
inc
das
int3
int3
mov
add
jg
inc
fstps
xchg
out
pusha
fildll
lods
stc
cmc
adc
sub
add
xchg
and
or
inc
fstl
call
stos
insl
mov
xchg
cli
xchg
insb
popf
add
mov
scas
jne
mov
xchg
sub
xchg
or
mov
cmp
sub
dec
or
popf
cmc
aam
sub
pop
sub
jg
add
xorb
std
test
and
xchg
gs
bnd
jno
sbb
jne
or
jl
fcoml
cmp
fnstcw
dec
ret
adc
out
dec
add
das
and
fstps
jp
and
cmp
ljmp
dec
mov
and
movsb
cwtl
movsb
test
xchg
popl
xchg
cmp
loop
pop
out
cld
loop
aad
pop
arpl
inc
pusha
cmp
in
cld
add
int
xchg
xlat
inc
out
sbbl
xlat
mov
mulb
inc
pusha
out
mov
lea
pushf
mov
xchg
sbb
add
int3
push
fstpt
icebp
jno
sbb
int3
lods
jecxz
cmp
stos
int3
lcall
add
popa
cwtl
push
or
leave
in
hlt
icebp
pop
es
in
icebp
pop
in
inc
lret
mov
cmpsl
enter
in
inc
flds
pop
add
xorl
mov
jle
les
test
addr16
popf
and
jp
addr16
mov
jnp
popf
scas
lods
arpl
pop
leave
scas
ror
mov
inc
inc
sbb
idivl
or
mov
ljmp
outsl
mov
leave
fidivrs
into
ss
ret
jne
ret
xchg
hlt
sti
mov
mov
lods
or
xchg
mov
scas
mov
xlat
xchg
adc
test
xor
mov
loope
xor
loop
hlt
or
mov
notb
xchg
inc
stos
dec
sub
or
lods
aad
dec
not
dec
movb
dec
cmpsl
lret
lret
cs
inc
jne
fsts
mov
test
gs
scas
mov
jmp
in
sti
or
ficoms
divb
hlt
in
add
ret
data16
xchg
es
push
xchg
test
dec
out
push
addr16
jne
outsb
adc
mov
aaa
add
test
xchg
jne
push
push
int
jge
xchg
pusha
and
clc
mov
adc
inc
fistl
add
out
jmp
fbld
xorb
sbb
loop
inc
das
js
les
adc
imul
and
leave
loopnew
inc
fdivs
lods
xchg
mov
sti
xorl
jl
pop
incb
xchg
scas
or
sub
jne
pop
insl
sarl
xchg
shlb
jg
fidivs
imul
lds
xchg
shr
cmp
out
add
xor
pop
or
jecxz
into
or
lods
push
xor
orb
xor
enter
add
jno
and
repz
inc
popa
test
mov
aaa
push
mov
das
cmc
mov
bound
repnz
leave
mov
adc
and
hlt
fnstcw
lods
roll
movb
pushf
dec
scas
cli
add
jle
mov
out
jb
pushf
xor
scas
push
pop
sahf
mov
sub
push
add
adc
enter
xor
adc
call
xor
movsb
outsl
push
add
xlat
out
add
cwtl
fcom
fmull
inc
inc
hlt
add
out
mov
sar
negb
in
icebp
cli
or
jmp
sub
or
test
adc
incl
cwtl
scas
mov
xchg
rcr
loopne
mov
cmp
int
push
pushf
pop
mov
xor
jae
lret
shlb
scas
cmpsb
pushf
shl
mov
inc
dec
inc
push
sub
cmp
testl
pop
mov
sub
nop
in
out
cmpsl
xor
jle
dec
jne
sub
pop
cmp
mov
in
jae
das
mov
fdiv
clc
test
xor
pop
mov
not
adc
inc
aam
movsl
out
inc
hlt
sbb
dec
rcrb
xchg
jg
mov
jl
imul
mov
clc
cmp
subl
shl
xchg
lds
aad
idiv
fdivrs
push
mov
inc
jb
dec
add
hlt
inc
sbb
out
inc
movsb
sub
xchg
imul
dec
pop
adc
insb
push
nop
sub
roll
jecxz
xorl
cmp
imul
jb
cmp
sub
aas
xor
icebp
inc
xchg
cld
jl
pop
mov
jne
adc
std
mov
xor
hlt
xchg
sub
add
stos
gs
xlat
xchg
les
cmc
push
or
js
and
pushf
push
cmpsb
inc
adc
imul
lahf
xor
rcll
leave
cltd
cs
xorb
imulb
test
addr16
jne
xor
movsb
push
stos
sub
mov
dec
cmp
dec
sub
iret
or
and
leave
pop
inc
stos
movsl
or
jne
roll
adc
cmpsl
jge
insb
or
add
roll
push
jne
add
fnstsw
mov
lcall
jne
push
pop
mov
pusha
dec
mov
mov
stos
jp
dec
jg
xchg
pop
adc
jns
fcomps
mov
add
or
movsb
push
push
add
cmpsl
pop
mov
hlt
test
xor
pop
inc
xchg
fwait
iret
lock
fistpll
lahf
jae
dec
cmp
fstp
loopne
cwtl
adc
mov
out
ficoms
pop
cmp
je
mov
xchg
pop
and
jne
dec
push
cld
pusha
scas
stos
adc
ja
sbb
xor
rcll
stos
push
mov
cli
cmp
mov
push
ret
dec
call
hlt
outsb
push
add
lret
call
clc
cmp
lcall
and
orl
hlt
adc
dec
cld
stc
xchg
cmp
std
cmp
ljmp
shl
in
xchg
out
mov
mov
dec
aad
mov
loopne
aad
jne
cmc
orl
out
pop
stos
les
sar
imul
pop
mov
test
mov
inc
mov
dec
adc
pop
repnz
cmp
ljmp
daa
and
leave
loop
fiaddl
lret
arpl
insb
test
lods
fsubrs
dec
fimull
fbld
xchg
test
push
fistpl
xchg
ret
movsl
pusha
ret
inc
ljmp
clc
lea
jecxz
jp
push
call
sub
mov
cwtl
out
shll
mov
cli
cmp
shlb
fisubrs
int3
and
sti
cmp
fildll
push
lcall
mov
mov
push
aam
je
sub
mov
jle
in
and
sub
test
repnz
pop
inc
stc
dec
ret
lock
in
add
cmp
test
and
mov
xchg
add
sub
mulb
lods
jo
daa
movsb
sahf
ret
inc
cmpsl
fidivs
cmp
adc
push
fisttpl
rorl
jge
imul
negl
cltd
aam
jo
daa
test
fs
adc
and
push
mov
push
inc
mov
loop
jb
mov
out
sbb
pop
mov
leave
jnp
mov
mov
lods
fidivrs
xlat
mov
int
sub
rorb
stos
movsl
in
cld
add
sub
and
daa
sub
hlt
movsb
in
sti
fistpl
sub
daa
stc
out
pop
adc
push
clc
and
sub
cwtl
cmp
xchg
xor
lret
mov
mov
xor
inc
loope
mov
xchg
adc
add
or
adc
cltd
and
mov
adc
int3
push
movb
dec
hlt
xor
inc
movsb
hlt
adcl
negl
jmp
addb
decb
and
ret
ret
jg
sub
sbb
pop
cli
arpl
inc
mov
fcoml
icebp
int
cltd
cmc
ret
frstor
ret
xchg
loope
cmp
mov
mov
arpl
les
clc
inc
mov
xchg
int3
ljmp
adc
loopne
pushf
push
sti
adc
sub
fs
mov
pop
jmp
push
loope
xchg
arpl
gs
inc
or
inc
mov
pop
mov
pop
inc
loope
loope
scas
push
orb
pop
icebp
enter
repz
dec
repnz
xchg
enter
inc
xchg
stos
jg
jb
and
movsl
mov
adc
mov
mov
sbb
lret
or
inc
xchg
cs
sbb
lock
sbb
hlt
xor
cmpsb
xor
pop
push
imul
js
pop
daa
pop
stos
enter
xor
jno
cmp
out
mov
xlat
mov
es
push
jb
rolb
test
sub
xchg
jle
repnz
dec
rolb
inc
leave
mov
fisttps
adc
sub
out
ja
call
js
push
dec
mov
and
lods
mov
dec
push
sbb
dec
push
loope
aas
xor
dec
cmp
jnp
testl
cmpb
daa
jmp
arpl
and
stc
lret
cltd
mov
mov
mov
nop
adc
push
pop
cmc
xor
cmp
in
mov
xor
jne
imulb
or
shlb
sub
mov
jle
jno
lods
sbb
inc
cmp
outsl
lcall
gs
cs
or
addr16
imul
inc
ss
ret
push
xchg
out
jae
mov
jge
cs
into
stos
mov
push
mov
hlt
xor
js
sbb
scas
out
jne
adc
loopne
xchg
rol
outsl
push
enter
ja
sahf
out
insb
push
inc
sbb
ret
mov
add
mov
neg
out
push
jne
sbb
xor
test
test
pushf
loop
js
adc
or
nop
enter
inc
mov
loope
lahf
inc
cmpb
mov
fcompl
xchg
dec
repz
add
mov
cs
xorb
or
insl
jecxz
mov
fldt
mov
seto
std
cmp
je
jmp
inc
mov
ja,pn
jnp
xchg
in
cltd
xor
cmpl
or
jle
push
and
pushf
mov
aad
and
sbb
lea
rol
sti
int3
push
xchg
push
or
xor
aam
mov
fstl
test
jl
mov
popa
loopne
dec
xor
pop
pop
mov
movb
sti
sar
jns
xor
fadds
inc
test
lods
imul
stc
lret
js
add
mov
in
and
repnz
outsl
hlt
and
ss
dec
sti
stos
jb
xor
xchg
and
dec
stos
sbbb
jns
jne
dec
fildll
cbtw
mov
sub
cmpsl
les
jne
out
and
test
xchg
jmp
das
add
mov
jo
icebp
faddl
pushf
ljmp
mov
mov
fsubs
pop
xchg
addr16
add
add
fistpll
inc
inc
or
push
jmp
iret
and
inc
es
call
sub
inc
stos
sub
sbb
push
popa
lahf
ss
test
sub
dec
call
jbe
xchg
test
std
icebp
repnz
push
jne
inc
jle
shlb
mov
fdiv
into
pop
add
hlt
bound
push
popa
jns
ret
mov
nop
int3
cld
pop
int
push
jg
mov
push
jge
mov
adc
mov
shlb
mov
mov
popa
xchg
pusha
xor
or
mov
mov
inc
jb
enter
dec
out
lock
dec
add
mov
sar
ljmp
xor
xor
pop
dec
mov
pop
scas
pop
add
dec
cmpsl
frstor
in
loopne
int3
les
out
out
andb
xchg
frstor
arpl
mov
stos
insb
movsb
into
mov
mov
add
std
addb
xchg
loope
pop
pop
jnp
in
aas
clc
dec
shrl
jecxz
cs
hlt
sarl
mov
sbb
xchg
mov
and
out
sahf
lret
std
dec
pop
mov
push
fs
xchg
mov
das
inc
scas
imul
mov
loope
push
out
pop
pop
adc
lahf
inc
push
cmp
mov
mov
test
fs
pop
mov
fidivrl
sub
test
pusha
aas
lea
test
or
int
mov
int3
jne
or
pop
sub
imul
cmpsl
stos
aam
hlt
scas
dec
push
cwtl
test
cld
int3
and
push
out
xlat
mov
test
add
mov
scas
lea
aam
int3
loopne
clc
jecxz
adc
mov
aam
insb
cld
jg
sbb
fmuls
sub
pop
into
fcoml
es
pop
xchg
inc
adcb
jecxz
add
mov
pop
cmpsb
cltd
test
cwtl
add
inc
xchg
lock
dec
mov
call
push
sub
pop
xchg
test
cmc
imul
enter
ffree
faddl
lret
mov
repnz
and
xor
pop
inc
cli
fstps
adc
outsl
mov
sub
call
stc
loope
xor
das
outsb
jne
xorl
fdiv
mov
shrl
mov
aas
sub
aas
xor
aam
jne
test
push
add
adc
test
icebp
cmpsl
fisubs
popa
in
fmull
and
jnp
and
in
stos
popa
jns
mov
paddw
jecxz
lahf
xor
pop
xchg
sub
and
in
scas
aas
add
int3
inc
dec
pop
push
movsb
mov
push
or
inc
xchg
popf
or
mov
pop
jge
leave
cmpsb
insl
arpl
adc
fistl
hlt
add
cs
xchg
inc
jbe
sti
dec
jecxz
jbe
add
adc
cmp
push
jne
xor
imull
loop
in
and
cwtl
jno
std
rcl
pop
cmp
and
mov
pop
sub
cmpb
jne
add
add
std
sbb
sub
fisubrl
sbb
cmpsb
xorl
ss
fdivl
add
shr
adc
cmpsl
inc
addr16
push
pop
movsb
sub
xchg
scas
out
out
into
pop
out
hlt
xchg
aam
cmp
rorl
repz
push
fbstp
mov
adc
scas
sub
mov
fbld
jne
xchg
add
lcall
in
in
jno
div
shrl
or
imul
movsl
outsl
dec
add
out
mov
push
popf
sbb
or
data16
jmp
ret
xchg
xchg
call
dec
pop
cwtl
mov
xor
mov
fldt
lcall
sub
shrl
pop
in
hlt
fiadds
enter
lods
add
int3
push
scas
loopne
xorl
push
xchg
inc
std
and
nop
insb
fcompl
je
add
mov
popf
jg
jo
adcb
mov
dec
jae
push
shl
fbld
mov
pop
sbb
cwtl
aaa
or
sub
jle
stos
or
sub
or
inc
inc
dec
ljmp
fcompl
lods
jp
xor
jne
mov
movsb
pop
out
xchg
pop
sub
mov
movsl
popa
mov
inc
xlat
test
jecxz
dec
jmp
es
add
fcoml
sti
ljmp
inc
add
sbbl
adc
es
adcl
test
and
cmp
pop
pusha
rolb
insb
mulb
jno
test
adc
loopnew
adc
mov
pop
fisubrl
pop
inc
insb
enter
and
inc
inc
out
mov
mov
jns
xchg
ljmp
mov
sub
aaa
sub
les
pop
fldt
nop
dec
xchg
shll
xor
lret
idivl
out
mov
cmc
jno
pop
cmpsb
push
xor
adc
cs
xchg
daa
mov
lods
lcall
icebp
shrb
or
and
jp
das
xor
add
ret
sub
lods
xchg
xchg
mov
add
hlt
rcrl
jg
xorb
stos
xor
mov
insl
cmc
lret
push
mov
test
fstl
fisttps
fs
sbbl
inc
jns
je
or
pusha
mov
aam
hlt
fcoms
sbb
lcall
xchg
enter
mov
js
xchg
mov
movsl
xlat
xchg
and
leave
jmp
lret
lods
imul
xchg
fstpt
mov
jg
sub
adc
push
insb
arpl
xchg
cmc
hlt
xchg
xchg
mov
ja
loope
rolb
dec
popf
xor
mov
cltd
fdivs
hlt
jbe
inc
in
sub
xchg
mov
movsl
in
pop
inc
push
pushf
ret
sub
pop
xchg
cmp
jbe
mov
jg
fistpl
pop
push
xor
inc
mov
mov
and
in
mov
add
dec
mov
cmp
nop
int
inc
xchg
and
mov
fcomps
cmc
sub
int3
idivb
add
inc
gs
into
push
adc
imul
fdiv
movsb
xor
mov
add
ja
and
cwtl
out
arpl
cwtl
mov
jns
jge
ljmp
xchg
xchg
js
es
ljmp
test
aad
and
jnp
push
movsl
pop
leave
pop
inc
pop
movsl
shlb
stos
movsb
lods
jbe
das
pushf
stc
outsb
adc
jnp
push
inc
popa
sub
jne
gs
ficomps
outsw
mov
enter
jl
rcrl
jnp
adc
xchg
xchg
mov
and
sahf
mov
repnz
pop
pushf
movsl
mov
adc
dec
xchg
or
cld
mov
in
mov
mov
or
loope
stos
fldt
push
lds
sub
adc
out
cmp
ret
adc
dec
pop
lock
insb
push
hlt
sbb
in
js
inc
daa
enter
lret
dec
andb
imul
xchg
or
fimull
dec
icebp
jle
repz
pop
ljmp
mov
lods
test
push
gs
pop
add
sbbb
stos
cwtl
pop
sbb
dec
in
test
push
add
jne
imul
enter
xchg
loope
push
roll
jle
jg
pop
sti
in
mov
or
lods
jne
insb
js
xchg
xchg
jne
mov
jg
mov
mov
lret
into
xchg
and
rorb
or
enter
cmp
ret
push
push
mov
push
or
xchg
enter
scas
hlt
cwtl
imul
push
push
roll
mov
mov
mov
loopne
shlb
pop
jb
sbb
and
mov
cld
jae
pop
in
pushf
clc
rclb
ret
stos
adc
xor
lret
inc
xchg
in
test
sti
inc
test
pop
rorl
loopne
dec
arpl
les
jge
rolb
add
aaa
inc
fcompl
out
pop
pop
loop
je
dec
lods
aam
xchg
es
leave
xorb
sbb
add
add
cltd
jp
cmc
icebp
push
subb
cwtl
add
xor
bound
cmp
rorl
add
push
lock
movsl
dec
inc
pop
mov
ss
inc
repnz
nop
cmpsl
pop
jo
sub
jno
sbb
sub
and
insb
loope
aam
imul
stc
popa
mov
mov
or
movsl
stos
pop
inc
loop
leave
cmp
xor
repz
mov
mov
mov
insl
and
mov
movsb
or
jne
pushl
xor
fisttps
adc
leave
push
lea
out
xchg
lods
add
popf
add
ficoml
js
enter
mov
movsb
adc
loope
lods
mov
rcll
push
cmp
arpl
je
lods
mov
cmp
jp
cli
add
loope
stos
shrl
stc
das
testb
xor
sub
imul
dec
jnp
push
adc
mov
sahf
adc
shll
cmpsl
mov
loopne
push
inc
call
lods
enter
mov
clc
lcall
movsl
jne
jno
adc
jns
adc
cld
mov
fldl
sti
call
loope
and
sub
inc
push
dec
arpl
dec
pop
xor
sub
pusha
insl
scas
mov
cmpsl
cld
push
push
hlt
add
out
gs
sbb
test
int3
push
jg
xchg
push
sub
inc
add
insb
mov
mov
pop
sub
dec
es
mov
jp
leave
and
xor
mov
and
mov
int3
ret
repz
outsb
icebp
bnd
ret
sub
xor
mov
or
paddsb
hlt
jno
add
add
sbb
adc
roll
and
push
mov
ja
xorb
cmpsb
mov
mov
std
xchg
sbb
into
push
or
lcall
movsb
cld
test
jnp
into
sub
add
aam
xor
pop
mov
stc
xor
lea
in
stc
mov
mov
and
rcrl
adc
into
enter
jecxz
test
push
in
es
imul
cld
out
xorb
fstps
inc
add
dec
movsl
test
int
xchg
gs
mov
inc
xor
dec
dec
xchg
adc
push
jge
loope
idiv
cli
stos
mov
leave
pop
mov
subl
in
bound
int3
imul
scas
pop
fwait
jns
aad
xchg
jge
std
iret
mov
fmull
xchg
seto
int3
std
shr
add
mov
outsl
stos
cmpl
sti
in
jne
cmpsl
mov
cltd
push
test
cmpsl
icebp
dec
or
pop
mov
shll
mov
rolb
cld
xchg
loop
lods
rcrl
movsl
in
jo
mov
fsubr
add
pop
sub
mov
dec
aad
imull
das
pop
cli
addr16
popa
sti
jo
mov
jnp
add
sub
es
movsl
insb
mov
adc
push
icebp
in
hlt
jecxz
jo
sbb
add
icebp
popf
mov
xchg
jl
call
jno
push
in
jne
jo
xchg
adc
mov
push
adc
fistpl
aam
mov
test
push
nop
pusha
cmp
repnz
add
ret
call
xor
fsubrs
mov
cli
je
add
arpl
adc
insb
xor
dec
ret
clc
sbb
sti
sbb
xchg
mov
add
mov
aam
inc
call
mov
fxtract
mov
insl
fwait
or
loop
push
jnp
stos
inc
lods
hlt
dec
popa
fmull
test
test
stos
pop
mov
xor
lods
mov
adc
push
mov
jbe
aad
movsbl
mov
dec
dec
lock
mov
clc
call
add
pop
loop
lock
unpckhps
dec
ret
xor
stc
rol
mov
xor
sbb
imul
clc
inc
fistps
cmp
call
jg
add
sub
stc
or
or
pop
push
adc
push
ljmp
leave
push
repnz
in
adc
icebp
mov
push
jo
mov
out
pop
mov
int3
fidivrl
movb
lock
jne
sub
lock
xor
aam
fidivrl
mov
mov
les
leave
rolb
jo
pop
pusha
jp
inc
jno
sub
into
pop
test
fcoms
addr16
rclb
dec
negl
clc
and
subl
ret
pop
push
fnstsw
rorb
cs
fildll
cmc
xor
hlt
adc
cltd
dec
sub
cli
add
jmp
jecxz
mov
jp
jns
jle
insb
aam
lods
ds
test
cmpb
in
jne
pop
cmp
or
les
aad
ljmp
pusha
imul
adc
shll
les
or
popf
cmp
inc
xchg
xchg
xchg
fisubrl
pop
dec
jle
mov
inc
or
or
jl
adc
cmp
addl
inc
push
in
enter
pusha
jp
sbb
and
fstpt
test
lods
out
xor
mov
nop
push
jo
pusha
cmpsl
add
sbb
clc
fdivl
xor
sub
push
sub
push
imul
sbb
mov
scas
mov
pop
fcomps
dec
fldcw
movsl
jns
mov
movsl
out
loopne
mov
daa
mov
in
sub
mov
hlt
add
pusha
push
or
or
mov
pop
lretw
cmp
fistpll
sbb
add
ficoms
mov
jne
test
test
fdivs
mov
sbb
pusha
xchg
xor
mov
lea
arpl
inc
imul
and
dec
int
jb
leave
sahf
cmp
dec
or
hlt
xor
or
scas
pop
sub
push
mov
lods
sti
insb
pop
imul
jne
mov
dec
jle
leave
sbb
ret
push
andb
or
add
loopne
dec
adcb
int
sbb
mov
pop
int3
jns
xchg
xorb
jp
push
int3
push
xlat
adc
scas
cmpsb
push
test
cwtl
test
scas
add
xchg
xchg
int3
cmp
jne
call
rcrb
dec
call
lods
notb
insb
mov
mov
jp
outsl
pop
mov
rorl
arpl
jl
mov
push
dec
pop
ror
test
xor
mov
jl
inc
scas
les
sbb
or
fwait
hlt
cmpps
in
jne
mov
sbb
add
mov
and
hlt
fucomp
xlat
push
dec
or
adc
pop
insb
aas
in
or
mov
xor
test
je
std
dec
and
andb
sub
inc
mov
popa
sti
xor
lcall
xor
add
xchg
inc
les
push
hlt
mov
rorb
stos
inc
leave
arpl
jbe
loope
adc
imul
aaa
popf
adc
or
dec
mov
enter
jne
or
sbb
jne
test
jbe
pop
scas
popf
inc
add
icebp
ljmp
mov
add
sbb
test
mov
jne
movsb
mov
fsubrs
pop
push
jne
sub
sahf
or
popa
jbe
add
addr16
pop
inc
push
mov
mov
sub
jg
shlb
jno
lahf
push
xor
lret
jle
out
push
ret
popf
ret
jecxz
pop
jbe
scas
xor
call
leave
incb
pop
mov
pusha
mov
call
ror
add
sbb
jns
adc
in
add
sub
jbe
adc
sbb
iret
sarl
rorl
push
outsl
out
fcoml
jmp
rcrl
loope
xchg
enter
and
dec
dec
test
mov
divb
ljmp
in
pop
xchg
aad
popf
int
lds
ja
das
xlat
in
imulb
fstl
pop
xchg
adc
jne
pop
clc
inc
mov
fiaddl
fprem1
ds
cmp
add
or
xchg
mov
pop
cmpsl
int3
push
into
ss
pop
mov
inc
mov
cs
xlat
ljmp
adc
pop
bound
out
adc
lea
test
mov
dec
out
neg
movsl
jns
movsl
sahf
mov
int
mov
adc
aas
cmpsl
les
sarb
shll
in
outsl
repz
push
lcall
into
subb
aam
mov
ds
sub
sub
out
mov
pop
add
arpl
das
add
mov
lret
add
inc
leave
or
or
andb
dec
lods
stc
sub
bound
in
mov
bound
adc
adc
add
ja
cmp
sub
push
and
loopne
fwait
jbe
pushf
ljmp
enter
mov
cmp
cmp
jno
test
mov
pop
addb
mov
push
jnp
pop
xchg
sub
adc
nop
in
sbb
and
mov
aad
sbb
into
fbld
xchg
mov
add
and
sbbl
or
fistps
in
mov
mov
xchg
sub
jne
sahf
ss
xor
pushf
add
js
mov
xor
jg
in
adcb
loope
das
jb
xchg
call
stos
and
xor
cmpsl
mov
aas
sbb
jne
and
decl
clc
pop
out
adc
loop
stos
into
add
cld
sub
add
pop
leave
es
add
or
outsb
push
add
xor
adc
lods
mov
loop
lds
inc
cmp
xor
dec
outsb
add
jl
movsl
fldl
in
mov
imulb
mov
xchg
mov
push
test
hlt
xchg
cmpsb
int3
sub
hlt
mov
push
pop
scas
pop
or
and
mov
push
push
cltd
incb
nop
cmpsb
jl
into
mov
mov
frstor
push
xchg
lcall
inc
out
popf
cmp
adc
movsl
cmc
dec
add
pusha
mov
cwtl
or
mov
lcall
out
stc
push
shr
arpl
cmp
roll
loop
adc
aam
enter
cmc
dec
cmpsl
mov
and
leave
test
sub
pop
adc
xchg
mulb
add
jge
mov
lods
std
stc
rcrb
cmpsb
movb
js
out
out
leave
negl
xor
lods
imul
orb
or
std
adc
dec
les
stc
lods
aaa
iret
je
cmp
push
fidivrs
in
hlt
loopne
psllw
nop
das
mov
cmp
sbb
stos
mov
add
insb
int
das
outsb
faddl
cs
leave
mov
fwait
hlt
jl
or
lret
or
xchg
sub
das
or
add
push
pop
jnp
jmp
inc
xchg
aaa
pop
sti
repnz
aad
xchg
ja
jo
cmp
cmpsl
enter
push
adc
adc
jne
out
xor
loop
xor
dec
push
outsb
sub
fdivrs
dec
lret
sub
cmp
mov
add
imul
mov
mov
jmp
pop
sarl
rclb
shrb
movsb
mov
jecxz
ret
out
enter
pop
jno
fldt
fmul
add
sahf
adc
and
xchg
jg
jno
sbb
fnsave
scas
add
enter
mov
mov
adc
mov
sbb
sti
call
push
sub
cs
sarb
mov
jecxz
fnstcw
add
jo
jae
insl
push
lods
push
cmp
push
insl
pop
mov
sbb
cmc
sub
jnp
addr16
call
shlb
aas
xchg
jbe
ror
fcoml
shl
mov
or
loop
or
jg
mov
sbb
push
cld
push
inc
cwtl
into
sti
imul
add
test
add
dec
adc
pop
mov
insb
mov
sub
push
addb
jne
scas
clc
adc
lcall
xchg
stos
aas
movsl
icebp
xor
es
jne
mov
adc
xor
inc
pusha
and
mov
xor
add
inc
mov
ss
lock
sbb
mov
and
jnp
outsb
arpl
mov
mov
add
mov
push
xor
inc
test
les
ret
ljmp
xor
pop
fstpt
out
xlat
add
push
mov
dec
call
inc
ss
mov
pop
or
xchg
xchg
mov
mov
sub
jbe
xor
mov
in
and
es
out
inc
add
push
inc
cmc
jnp,pn
mov
mov
dec
push
lret
mov
mov
pop
pop
or
cmpsl
sahf
fists
or
pop
sbb
sub
dec
jne
ja
cli
push
cs
push
mov
nop
clc
mov
lret
cmpsb
ljmp
or
adc
cmpl
mov
hlt
push
dec
dec
fisubs
pop
mov
xchg
adc
jne
in
mov
movsl
jmp
mov
sbb
faddl
sub
hlt
xor
mov
repnz
mov
js
pop
out
loopne
add
es
adc
inc
mov
into
aas
into
cmc
dec
pop
add
dec
arpl
inc
jle
jg
repz
mov
cmp
pop
sub
shl
pop
test
mov
stc
pop
into
lret
cmp
addr16
xchg
fdivrs
clc
gs
mov
jnp
dec
dec
jo
loopne
cmc
xor
movb
popa
hlt
rcr
jp
xor
imul
and
mov
jne
lds
mov
pop
jmp
addr16
hlt
or
lds
jmp
mov
out
cmc
js
mov
mov
call
out
movsl
mov
fistpll
add
ret
add
cmp
out
scas
divl
adc
xchg
mov
pusha
loopne
cmp
or
rcrb
xor
sti
pop
lcall
aam
jmp
mov
lods
lods
nop
mov
push
pop
lods
jno
fistl
fidivrs
add
fistl
incl
std
popa
sub
xchg
out
loop
jne
fcomp
mov
cs
push
fsts
mov
subb
enter
test
ror
in
loopne
movsb
fstpl
jb
stos
stos
xor
and
push
dec
push
dec
movsl
cli
clc
addr16
lods
mov
outsl
sub
mov
call
push
jne
imul
imul
lret
cmpsb
jp
std
roll
dec
mov
test
rcl
repz
sbb
in
out
pop
imul
mov
mov
notb
mov
mov
sub
jmp
or
fcomps
and
scas
cmp
jo
aas
dec
cmpsb
lea
test
mov
jo
add
sarb
fcomip
mov
lcall
cmpsb
pusha
pop
xchg
and
mov
mov
daa
xchg
and
jbe
inc
ja
mov
xchg
in
out
mov
sub
das
decl
jns
sub
add
dec
mov
ds
push
mov
push
hlt
or
push
xor
shl
aam
push
hlt
jo
in
sti
add
xchg
mov
cmp
sarb
jecxz
mov
push
add
push
push
pop
sub
inc
sub
mov
sub
out
stos
jnp
push
dec
lock
mov
lods
insb
adc
das
xchg
leave
inc
jae
sbb
sbb
adc
inc
dec
loopne
and
movsl
dec
sub
aaa
push
enter
pop
jns
leave
mov
pop
mov
and
sbb
xchg
jb
cmp
jb
xor
push
pusha
out
shlb
sub
nop
mov
push
cmp
nop
movsl
jne
insb
xor
mov
hlt
mov
or
jl
mov
add
lods
fcomp
mov
xchg
lret
in
insb
xchg
dec
es
and
jb
mov
mov
daa
or
pop
nop
add
jbe
jge
inc
jne
sarl
mov
and
nop
jg
cmp
leave
enter
dec
add
sbb
mov
xlat
xor
jg
loop
sub
rorb
leave
int
lret
jb
dec
fsincos
mov
mov
pop
cmpsb
sub
lret
xorl
fcmovnb
inc
and
adcb
cmpsb
cmp
pop
xor
inc
push
add
aam
xor
or
lods
jns
inc
cmpl
jge
add
and
ret
mov
dec
cli
xorl
test
mov
or
lahf
jnp
mov
sub
test
xchg
and
and
sub
loopne
inc
push
and
and
add
ds
inc
cmp
pop
js
rcll
sub
xor
outsl
stos
insb
xor
jp
repnz
dec
in
mov
or
dec
out
add
push
pushf
movsb
push
add
mov
jne
add
inc
add
scas
jnp
mov
add
pop
cmp
fiadds
mov
ret
dec
add
cld
lret
arpl
movsb
mov
cwtl
popa
daa
je
outsb
pop
cs
lahf
sbb
mov
leave
cli
sbb
jne
jns
insb
outsb
in
imul
fildll
mov
ret
loop
test
lods
lds
testl
flds
int
test
and
imul
leave
cmpsb
pusha
adc
inc
pop
mulb
cmpsl
or
outsl
in
mov
jecxz
xlat
mov
adc
mov
mov
in
pop
lods
hlt
pushf
push
rcl
jbe
fstl
stos
adc
cmpsl
push
jne
scas
cmp
pop
xlat
adc
movsl
repnz
pop
push
adc
inc
xor
addb
test
push
and
lods
sub
sbb
nop
scas
call
mov
or
cmpsl
adc
jp
mov
mov
xchg
dec
stc
xchg
fldl
hlt
insl
repz
cmpsb
pusha
pop
stos
nop
sbbl
arpl
mov
loopne
or
lea
add
adc
mov
hlt
xchg
das
leave
fisubrs
test
pop
push
cwtl
xlat
out
out
cmp
sub
ss
inc
test
gs
xchg
jne
jl
inc
jecxz
adc
sbb
cmc
stc
popa
cmpl
cld
cs
pusha
push
loopne
test
sbb
jmp
push
and
sub
inc
jp
and
cwtl
fcomi
or
cmp
jmp
roll
jnp
add
jle
adc
ds
aas
push
shll
cli
xlat
jg
inc
hlt
mov
cld
xchg
inc
rclb
add
fisubrs
aam
or
jnp
out
ret
inc
out
and
mov
popa
xor
pop
jns
pop
shrl
ret
adc
into
call
lahf
mov
xchg
stos
in
cmpsl
jmp
jmp
stos
pop
xchg
pop
jg
test
popa
cli
insl
pop
enter
hlt
cmc
sub
inc
int
cmp
jne,pt
cmpsl
sub
jb
jo
out
nop
cmp
jmp
int3
pop
fisttpll
mov
adc
or
dec
iret
enter
push
daa
cmp
lods
jmp
cmpsb
cmc
loopne
mov
cld
clc
xchg
cmp
dec
pop
sub
cwtl
dec
sbb
and
push
shlb
inc
outsb
lret
nop
sbb
loope
mov
push
roll
cmpl
lds
push
mov
ss
pusha
jg
loope
ret
insb
mov
sub
call
test
cmp
dec
test
add
xchg
es
adc
mov
push
js
ds
inc
jmp
hlt
iret
xor
gs
test
xchg
and
imul
jl
xor
test
clc
mov
sub
mov
insl
dec
jb
hlt
jne
jp
jg
push
sub
mov
scas
dec
lahf
test
int
sbb
andl
iret
mov
cmpsb
dec
jo
test
add
and
mov
inc
adc
mov
or
sbb
incl
shl
adc
sub
or
mov
mov
jb
cmpsb
and
sarl
adc
xor
fcomps
sub
mov
pop
aam
out
adc
add
adc
mov
fadds
loop
sub
cmp
adc
testb
cmpsl
xor
gs
lods
fistps
push
or
jp
lahf
dec
rorb
enter
out
jne
in
push
mov
jmp
arpl
and
mov
mov
loopne
arpl
test
add
daa
xor
mov
stos
scas
fld
mov
or
push
std
repz
xchg
jne
push
int
lods
leave
cmc
cwtl
xchg
sub
cmpsl
outsb
lock
dec
pop
push
jp
fcom
rol
mov
xchg
jl
mov
in
fcoml
push
test
jg
stos
jbe
inc
inc
movsb
ljmp
scas
jne
inc
sub
in
add
shlb
jmp
and
adc
loop
lcall
pop
insb
jne
js
int
inc
xor
push
mov
push
jg
stos
clc
xor
es
fisubrl
mov
xchg
mov
cmpsl
lea
jo
push
lods
push
mov
imul
out
lret
and
sub
bound
jmp
fbstp
cli
mov
or
mov
rolb
push
jg
cmp
xor
mov
movsl
xchg
mov
scas
sbb
or
mov
mov
dec
neg
adc
adc
fimull
cmpsb
and
xchg
xor
bound
adc
divl
and
jg
add
das
popf
lret
cmp
push
cmpsl
ss
scas
push
sub
cmp
xor
jo
imul
jnp
mov
jbe
push
lcall
adc
stos
sub
lock
adc
pop
push
aaa
shll
lods
mov
mov
pop
nop
sbb
popa
jne
and
mov
cli
repnz
ljmp
andl
outsl
int
xor
push
cmpsl
in
adc
out
cmp
jne
das
pushf
or
roll
jp
mov
inc
or
mov
incl
clc
testb
and
inc
jae
mov
xor
sub
cld
sti
push
xlat
icebp
movl
or
mov
add
push
rorl
sbb
dec
push
shll
jne
iret
jnp
pop
xchg
pop
adc
notb
sub
jbe
or
push
push
fst
sub
push
adc
mov
test
cmpsl
lret
cmp
test
call
gs
mov
pop
hlt
lcall
cld
gs
mov
and
sbb
icebp
lods
movsb
out
shr
aaa
arpl
call
push
mov
xchg
jge
fnsave
xor
stos
mov
jae
xchg
addb
cltd
jne
in
stos
pop
mov
cmc
pop
xor
jle
dec
xor
add
incl
cld
jns
hlt
ficoms
add
sbbb
cmp
adc
scas
aaa
loope
fildll
out
shl
call
pop
mov
les
scas
dec
cmc
sub
cli
out
movsb
fidivrs
hlt
es
clc
push
adc
xlat
test
sub
aad
xchg
jne
out
xchg
outsl
dec
cmpsb
mov
push
adcb
dec
push
inc
push
call
add
ljmp
outsl
xchg
loope
shlb
fbld
icebp
mov
push
or
mov
scas
stos
add
mov
pop
dec
shrb
cmp
fnsaves
mov
fcoml
inc
or
push
pop
int
lods
test
sub
stc
fstps
sub
mov
adc
and
adc
cwtl
mov
in
add
lock
sbb
sti
add
pop
in
lea
in
fstps
pop
rorb
add
jge
mov
pop
int3
out
les
mov
jmp
insl
pop
sub
fsubs
push
fcompl
add
xor
popa
cwtl
incb
loopne
xchg
lret
aas
lahf
pop
ds
fnop
dec
inc
mov
popa
inc
mov
fstl
xor
rorb
jnp
mov
cmp
fwait
cmpb
out
pop
pop
mov
ljmp
in
fstp
cltd
test
mov
sub
cltd
movsb
lcall
cmp
insl
mov
cmp
jne
hlt
cmpsb
test
dec
mov
inc
lret
push
fwait
stos
loop
in
sahf
or
cli
mov
adc
stos
test
std
dec
mov
add
jle
outsl
fcoms
push
lahf
lcall
add
jle
mov
out
ja
adc
jecxz
inc
xchg
xchg
pop
adc
cmp
push
jmp
mov
cmp
mov
jne
sti
inc
adc
imul
and
lea
sbb
xor
pop
inc
adc
xchg
sub
mov
test
adc
pop
roll
push
mov
mov
cmpsb
or
addr16
cld
inc
outsl
rclb
jns
out
roll
dec
loope
add
nop
dec
mov
xor
hlt
mov
int
mov
ljmp
imul
ret
enterw
mov
repz
je
mov
add
rcll
mov
in
cltd
dec
pop
mov
dec
adc
xor
fmull
lods
shrl
mov
dec
scas
cld
jp
or
enter
mov
fnstenv
push
fisttps
ljmp
cli
movsb
and
mov
xor
lea
es
fstps
cmp
or
dec
adc
jno
mov
lcall
push
loope
inc
test
std
mov
lds
sahf
ret
mov
mov
xorl
hlt
jbe
daa
jl
roll
inc
fnstcw
imul
jge
push
adc
enter
scas
and
jmp
jmp
lahf
aam
shlb
pushf
fldcw
loope
hlt
sahf
sbb
adc
rorb
cmpsl
xor
xchg
and
pushf
inc
pop
xchg
mov
jmp
jl
popf
outsl
mull
int
in
add
sub
clc
cltd
sbb
mov
rcrl
jne
jge
jns
push
push
cltd
daa
mov
lahf
mov
dec
xchg
or
stos
into
iret
push
mov
ret
sub
dec
out
shll
xorb
mov
rcll
cmc
inc
aas
push
jecxz
nop
enter
lahf
sbb
aas
mov
out
inc
push
dec
jle
fistps
loop
in
in
add
dec
jo
test
add
xchg
movsl
xor
xor
and
xchg
fnstsw
xor
mov
mov
cs
mov
lods
aas
pop
mov
inc
or
repnz
std
mov
gs
sbb
jo
test
test
cmp
les
mov
pop
jp
or
fimull
jbe
dec
adc
add
dec
xor
push
lods
cmp
mov
mov
sub
inc
dec
add
cwtl
addb
fsubl
mov
clc
sub
fwait
popf
or
lock
jg
lret
test
xchg
icebp
lods
lods
xchg
mov
jne
pop
lods
mov
xchg
add
and
mov
push
inc
pushf
hlt
in
ss
cmc
addb
rorb
push
jle
dec
push
movsl
jne
fldl
sub
pop
daa
iret
push
lock
sbbl
cli
jae
sar
dec
xorl
mov
adc
cmpsl
add
imul
in
enter
xorb
inc
xorl
inc
mov
and
xor
jle
idivl
dec
and
mov
in
cmpsb
xor
in
popf
mov
push
mov
sarl
insl
push
sub
jae
xor
mov
xchg
push
fstpt
loope
out
stc
cmpsl
dec
or
fidivrs
aas
adc
cmp
insl
jb
mov
into
fucomp
add
loope
das
int3
fistps
sub
icebp
pop
xchg
test
scas
pop
push
test
imul
cmc
insb
stc
dec
mov
mov
xchg
mov
dec
mov
jns
mov
mov
pop
pop
pop
out
or
xchg
adc
or
xor
cltd
addl
mov
into
scas
shl
stc
outsl
add
xor
mov
stos
dec
xor
push
cmp
mov
shl
mov
jmp
sub
lds
arpl
push
mov
sub
or
in
clc
pop
push
pop
sti
cmpsb
into
subb
aam
scas
inc
cmp
jl
push
out
leave
cld
fiadds
pop
add
fsubrl
jo
scas
rdtsc
cmpsl
mov
dec
out
addb
sub
sub
and
adc
xchg
xor
insb
shr
inc
inc
nop
mov
cld
add
adc
adc
push
cld
stos
icebp
mov
ret
or
pusha
xor
cmp
out
aas
leave
loope
inc
xchg
push
outsl
inc
or
shl
mov
fdivl
xchg
and
std
jmp
stc
fdivs
andl
js
hlt
xchg
adc
sarb
daa
notl
femms
mov
add
in
aaa
inc
xor
dec
pusha
or
cld
or
xchg
jmp
or
scas
pusha
std
cmp
mov
cmc
int
mull
fistps
inc
dec
adc
call
stc
jl
adc
sub
stos
hlt
fwait
outsb
fmul
sbb
scas
push
inc
mov
test
ja
hlt
stos
pop
inc
out
gs
sub
scas
sub
jmp
loope
jnp
out
in
dec
loopne
cwtl
adc
sti
ljmp
scas
add
xchg
inc
xchg
inc
mov
pop
test
push
out
adc
add
mov
xchg
pop
sub
and
push
cli
mov
sub
shlb
push
and
add
aam
nop
into
push
adc
adc
cwtl
divb
es
ljmp
xchg
xchg
xor
data16
jg
jp
mov
pop
outsl
cmp
adc
hlt
push
icebp
mov
jbe
js
pop
inc
inc
mov
pusha
sbb
push
aam
or
rclb
cmpsl
inc
xchg
out
mov
push
daa
add
je
sub
mov
in
jne
movsl
push
jne
cmpsl
adc
lcall
stos
stos
int3
xor
stos
sub
xor
repnz
out
adc
inc
enter
testb
loop
inc
bound
js
add
sub
inc
jge
jno
addr16
sub
push
incl
negb
adc
sti
jecxz
inc
loope
and
xor
or
xor
mov
mov
xchg
hlt
sbb
fistps
dec
adc
mov
mov
push
adc
hlt
das
ficompl
movsl
inc
jbe
ss
mov
push
into
dec
sub
sti
pop
lods
sub
sbb
and
gs
jecxz
xor
sub
aas
mov
hlt
mov
out
and
addl
nop
mov
js
fistl
or
or
jle
mov
sbb
pushl
fwait
sbb
std
jle
mov
movsl
adc
jle
movsl
adc
or
xlat
pop
mov
clc
loope
jmp
pop
xchg
orb
inc
lcall
fildll
adc
mov
jno
or
call
jne
push
sbb
stos
cld
enter
pop
imulb
test
sbb
mov
jle
loop
dec
xchg
ret
sub
jne
mull
jl
jp
divb
cmp
test
in
and
enter
pushf
pop
jle
dec
add
cmc
xchg
push
xchg
test
inc
ss
fildl
lahf
adc
cmc
scas
jnp
scas
push
jp
pushf
xchg
into
cs
adc
pusha
fdivl
sub
sub
mov
sbbl
je
lret
rcll
dec
mov
not
push
cwtl
xchg
push
filds
adc
xor
fwait
cwtl
sub
les
pop
lods
gs
jmp
inc
jnp
rol
jne
cs
push
jb
jmp
xchg
enter
and
pcmpeqd
xchg
enter
mov
mov
pop
cmpl
mov
stos
xchg
xchg
pop
pop
rorl
fxch
cmpsb
xchg
xchg
bound
sub
es
jge
mov
in
mov
mov
js
or
stos
inc
fsubp
aas
stos
sub
jmp
mov
mov
mov
pop
mov
pop
push
call
mov
pop
mov
in
sbb
fst
add
xor
loopne
orl
mov
inc
loope
arpl
fwait
outsb
inc
add
add
call
ljmp
mov
xor
rolb
lock
jne
pushf
adc
test
lret
push
mov
hlt
jmp
mov
pop
cmpsb
loop
xchg
out
pop
mov
lcall
sub
mov
enter
aaa
push
jne
mov
xchg
sub
sub
mov
jne
lahf
xchg
fisttpll
jmp
aas
fcompl
arpl
mov
icebp
inc
xchg
stos
fwait
add
cltd
cmp
sub
pusha
cmp
mov
xor
xchg
hlt
gs
scas
sbb
mov
stc
in
or
mov
adc
rolb
test
push
or
in
jo
and
jo
cwtl
in
dec
push
pop
enter
fbld
sub
sbb
hlt
inc
clc
arpl
into
clc
dec
sub
xor
cmc
pop
lea
cmp
inc
gs
stos
dec
in
inc
int
pop
inc
mov
sti
pop
repz
xor
stc
sub
lock
cmp
mov
and
int3
mov
adc
push
rorb
lods
fcoml
jl
inc
aaa
cmc
aad
xchg
punpckhdq
icebp
lahf
lods
js
xchg
jo
lahf
push
sbb
je
scas
hlt
je
stos
inc
push
les
jmp
into
lds
xchg
imul
or
jl
faddl
hlt
mov
and
xor
mov
sti
jp
filds
pusha
mov
or
loop
loope
sub
cmp
inc
sbb
loopne
mov
hlt
adc
ljmp
mov
in
mov
cli
loop
sub
dec
mov
es
movsl
xchg
add
cmp
or
sub
pop
pop
mov
ret
add
les
dec
in
stos
dec
push
subl
enter
movsl
hlt
rolb
and
push
sahf
inc
mov
cli
xor
je
cmp
out
jl
xor
je
xchg
movsl
out
inc
or
pushf
mov
fmull
add
aad
fwait
cmp
mov
mov
loope
call
sbb
leave
mov
int
sub
xchg
popa
hlt
pusha
push
or
inc
lcall
scas
imul
push
rolb
insl
cmp
jmp
in
std
rolb
fnsave
sub
inc
leave
mov
fdivs
es
and
scas
mov
test
shll
scas
xchg
xchg
popf
jb
pop
cli
fidivs
in
mov
add
inc
pop
out
or
adc
insb
lea
lods
test
mov
sbbl
ss
xchg
jno
push
mov
mov
xorb
lahf
dec
sti
testl
sub
loop
cmp
cmp
xorb
jg
stos
popa
xchg
push
popa
sbb
mov
add
lods
and
cli
pop
add
test
mov
movsb
jne
xor
or
push
dec
adc
andb
pop
ret
jle
xchg
adc
es
cltd
ret
jmp
rcrl
ljmp
loop
jno
cwtl
enter
imul
inc
fdivrs
js
loope
in
mov
pushf
cld
dec
outsl
stos
pop
in
mov
stos
mov
xor
pop
sbb
mov
cmp
mov
test
cmpsb
push
hlt
cmp
sub
inc
adc
sahf
stos
divl
jmp
out
mov
dec
xor
jg
jge
fs
fdivr
lds
rcr
pop
loop
or
scas
rcr
mov
adc
insb
scas
and
jo
add
insb
dec
ficompl
dec
and
mov
mov
add
mov
pop
cmpsb
cltd
mov
jns
ret
bnd
icebp
inc
adc
xor
insb
add
mov
or
sub
adc
mov
xchg
mov
in
jmp
mov
outsb
cwtl
cmpsb
hlt
xchg
jle
jne
xchg
mov
hlt
test
into
stos
aad
mov
std
sub
inc
enter
jb
push
add
and
hlt
add
in
repz
pop
and
ljmp
cmp
push
addl
xor
scas
mov
mov
inc
adc
xor
addr16
sar
sub
sbb
loop
hlt
lds
test
mov
inc
shrl
incl
cmp
jns
loopne
pop
lods
dec
xor
pop
aam
xlat
mov
fidivl
jmp
scas
orl
jo
ret
add
mov
popa
xchg
data16
push
imul
loopne
xchg
push
lock
nop
cltd
xchg
cmp
dec
push
fs
popf
jge,pn
jg
sarl
jmp
lods
cld
negl
jecxz
jge
daa
xchg
dec
push
icebp
hlt
cwtl
ret
and
sub
in
pop
add
mov
test
nop
les
subb
fistl
arpl
imul
push
push
jbe
push
jle
out
mov
pop
add
pop
dec
test
pop
mov
les
or
pop
mov
and
inc
cmpsb
loop
mov
inc
lret
adc
outsb
mov
mov
inc
mov
cmp
pop
sbb
fmuls
das
scas
mov
fnstenv
test
mov
inc
jg
insb
push
stc
lods
lods
cwtl
enter
cmpl
ljmp
sub
lret
lret
and
jg
mov
fdivrl
push
les
out
roll
push
xor
mov
and
jne
iret
dec
xor
shll
push
sbbl
lods
jne
adc
mov
mov
jmp
jb
xlat
ljmp
fstpl
mov
and
pop
in
mov
mov
xorb
jno
test
leave
addl
mov
test
idivb
enter
loopne
and
subb
add
mov
jge
inc
add
pop
std
jle
outsl
xor
add
push
jmp
out
cmp
sahf
jne
shll
hlt
lock
mov
push
cwtl
adc
push
add
faddl
incl
bnd
xor
mov
cli
pop
sarb
fstpt
jecxz
sarl
sti
adc
jnp
mov
sti
imul
out
cmp
push
std
and
mov
mov
ss
jne
pop
sbb
fldenv
divb
mov
daa
scas
jb
cwtl
pushf
loope
jge
sub
lods
loopne
jmp
inc
add
filds
js
pop
int3
test
cwtl
sub
sub
fstl
fsubs
or
arpl
data16
enter
mov
jp
nop
mov
sbb
clc
mov
inc
xor
std
pop
repz
push
mov
jle
stos
inc
xchg
inc
loopne
popa
sub
js
mov
push
lods
jp
xor
cli
pop
mov
mov
sarb
loop
xorl
dec
lahf
mov
jg
xchg
and
cltd
rclb
mov
outsb
jbe
cmp
je
sub
int3
mov
popf
or
scas
sub
dec
add
add
scas
push
ds
xchg
outsb
mov
dec
mov
mov
in
aam
cmp
loop
scas
xchg
in
out
and
smsw
cmp
loope
test
nop
repnz
fimuls
insl
dec
pop
mov
mull
loopne
mov
hlt
adc
int3
test
mov
loopne
frstor
sub
leave
mov
inc
cs
mov
pusha
jp
xchg
das
jno
sub
testl
and
xchg
and
mov
aas
mov
ds
sbb
cmp
subl
imul
xchg
push
inc
jmp
cs
xchg
shl
loopne
enter
xor
test
fildll
imulb
in
lcall
adc
sub
cmpsb
movl
lret
ret
frstpm(287
cwtl
enter
and
out
lock
pcmpeqw
xchg
lret
arpl
cmp
mov
jae
or
enter
sbb
xor
sti
lcall
sbb
and
loop
insb
int3
pop
jp
mov
sahf
xor
add
divb
xchg
and
pop
and
cli
fmull
jnp
les
sti
test
mov
xchg
or
int
dec
jle
push
or
and
fsts
pusha
cld
aaa
pop
pop
and
or
jmp
xor
data16
cmp
sub
jno
push
dec
and
pop
add
mov
adc
or
sub
sahf
les
sti
and
nop
mov
hlt
in
lods
psubb
ss
cmpsb
add
rclb
pop
lret
pop
cmp
rcpps
andl
dec
pop
shrb
fistl
adc
mov
int3
adc
add
bswap
fadd
jo
stos
hlt
nop
adc
add
cmp
idivl
pop
adc
jbe
push
fcompl
dec
jl
sahf
add
sbb
and
adc
pusha
mov
lret
rcll
jbe
mov
in
movsb
pop
xor
xchg
xor
arpl
and
jg
je
lods
sub
mulps
add
std
mov
shrb
les
test
push
pop
shl
hlt
stc
stos
mov
fdivr
aam
out
mov
or
push
int3
pusha
inc
or
out
popf
push
movsb
ljmp
xchg
fmull
xor
inc
fnstcw
movsl
jo
push
aas
jecxz
adc
inc
push
jne
mov
inc
sub
cmpsl
mov
jmp
adc
mov
fldcw
dec
les
jne
xchg
loope
dec
and
hlt
out
jle
mov
movsl
push
dec
inc
mov
loopne
fdivl
xor
in
and
pop
pop
out
int
jb
inc
scas
mov
push
sti
or
divb
leave
aad
fwait
test
xor
cmpsb
divb
jecxz
pop
push
push
mov
aaa
out
mov
stc
test
pop
jl
xchg
sub
nop
in
clc
jge
rclb
cld
ja
rcr
hlt
mov
cmpb
or
jb
adc
mov
xor
lods
lds
fisttps
popa
hlt
push
ja
xlat
mov
fisubs
push
pop
add
mov
sbb
mov
test
test
stos
loopne
sub
and
call
loopne
ret
shll
jnp
sub
add
mov
rolb
inc
sbb
jne
push
push
pop
adc
adc
cmc
out
mov
insb
fdiv
jne
jg
jnp
cltd
pop
aad
btcl
push
pop
and
jl
popf
mov
test
xchg
loope
mov
xlat
lcall
test
pop
hlt
ljmp
mov
lahf
test
xor
ror
push
cmp
sub
cmpsb
mov
pusha
clc
ja
sub
jp
es
mov
or
inc
cmpsl
mov
inc
add
dec
pop
lcall
cli
and
inc
mov
mov
mov
push
jb
hlt
in
scas
jns
mov
out
loop
sbb
xchg
xchg
inc
andl
mov
add
mov
and
lret
or
aad
dec
jne
mov
ret
or
xchg
xorl
pusha
pop
pop
lods
mov
mov
inc
mov
scas
or
sbb
jle
das
xorl
mov
hlt
mov
dec
xchg
mov
mov
mov
lds
jnp
stc
or
scas
xchg
pusha
out
fisttps
out
ret
xor
hlt
popf
movsl
lods
mov
mov
ljmp
mov
insb
cs
insl
mov
js
outsb
leave
mov
adc
stos
cmp
test
call
enter
fmuls
jne
cwtl
sbb
and
push
push
loope
aas
cltd
cs
mov
fsubrl
mov
mov
and
mov
test
sub
stos
daa
sbb
mov
xchg
sti
mov
mov
xchg
mov
cmp
or
mov
mov
push
mov
mov
movsl
or
push
sahf
shrl
add
sub
fmull
cmp
push
jbe
mov
divb
cs
lcall
mov
mov
mov
shll
sub
mov
inc
aam
jmp
movsb
mov
dec
cmp
mov
cmpsl
xchg
lret
mov
jmp
hlt
sbb
leave
movsl
scas
cmpsb
adc
inc
xchg
add
pop
add
inc
out
lods
jne
jp
fdivs
xchg
jno
enter
loopne
imul
cltd
fdivr
and
fbstp
cmp
sti
call
pop
and
in
cmc
and
lahf
adc
jl
mov
sarl
jge
out
dec
mov
fiadds
ror
pop
sbb
pop
push
repz
dec
jnp
push
dec
ds
in
pop
mov
daa
ss
dec
leave
andb
aas
sub
in
xchg
pop
push
enter
mov
mov
imul
fwait
cmp
insl
mov
popf
xchg
fldl
sahf
adc
dec
pop
mov
xor
ja
dec
cmp
pop
jne
cltd
sub
dec
stos
popf
rorl
movsb
shll
jge
cmp
xor
mov
adc
les
divl
movsl
mov
in
jns
test
les
rol
enter
es
push
adc
cltd
or
jecxz
mov
mov
push
inc
in
rcr
imull
test
cmpsb
stos
sbb
jp
xchg
push
int3
and
stc
add
cld
and
fstp
rcll
cltd
push
sub
xchg
push
push
cmp
xor
pop
testl
repnz
inc
les
lods
sub
ret
pop
fsubrs
xor
add
popf
nop
adc
mov
mov
adc
jl
push
jns
cmpsb
mov
xor
call
leave
xchg
cli
cltd
push
mov
rcrb
adc
adc
jne
push
rorl
out
rcrb
xor
stos
mov
pushf
or
adc
xor
jle
xchg
jg
cli
xchg
mov
arpl
dec
cs
pushf
mov
int
lea
inc
dec
cmp
ficoms
add
into
sbb
aam
sbb
dec
and
sub
mov
xchg
lret
cwtl
push
adc
mov
adc
hlt
sub
add
stos
mov
stc
mov
js
mov
fmuls
sarb
movsb
call
mov
add
ljmp
adc
insl
push
data16
push
hlt
or
cld
and
push
lret
add
pop
mov
mov
loope
lods
sbb
jecxz
dec
jecxz
hlt
xor
add
addl
out
cmpsl
xchg
xchg
sub
test
ficomps
aad
jne
call
pushf
mov
jecxz
shrl
adc
lock
stos
fdivl
dec
ss
into
xor
mov
test
add
xchg
xor
add
iret
or
inc
out
push
lods
fsubr
gs
mov
hlt
lret
sarl
or
loopne
sub
shrb
cmpsl
fistpl
int
push
jnp
aaa
inc
push
out
aas
mov
push
add
xorb
ret
out
scas
xchg
mov
clc
jp
negb
add
mov
repz
sub
out
xchg
pop
nop
xchg
sbbb
daa
mov
and
jnp
ljmp
push
pop
enter
int
xorb
cmpsl
scas
dec
and
in
xchg
dec
mov
sub
mov
jl
outsb
loope
jnp
and
xor
inc
ss
cwtl
stos
jle
insb
inc
jo
jne
loop
in
test
mov
enter
pop
sub
orl
jne
dec
mov
imul
pushf
lret
push
lock
fiadds
mov
dec
inc
mov
jmp
fistl
cmp
cmp
mov
dec
mov
jnp
hlt
pop
js
shll
cmpl
popa
jo
xchg
imul
add
out
sbb
fcoml
push
icebp
inc
leave
cmp
xor
add
xor
fcoms
push
pop
decl
insl
fisubrs
adcb
dec
jne
nop
dec
repnz
clc
in
stos
jne
push
add
xor
pusha
cmpsb
arpl
and
push
into
xlat
adc
scas
adc
add
mov
int3
inc
movsb
fidivrl
add
jle
hlt
aad
fidivrs
pop
adc
jbe
aam
outsl
add
lahf
push
xor
pop
outsb
and
dec
mov
cmp
or
push
sbb
add
xchg
popa
mov
shrl
and
into
stc
stos
pop
inc
subb
dec
push
adcb
gs
push
and
jg
stos
push
lea
mov
and
cltd
dec
stc
adc
test
fbstp
outsl
xorl
mov
fidivrl
mov
lds
movsb
fcomps
push
scas
pop
xor
and
add
sub
cmp
cs
sub
gs
mov
sub
xchg
cmp
push
add
out
outsl
lahf
pop
cltd
sbb
jnp
adc
cld
mov
loopne
push
int3
xchg
cmp
sub
out
cs
push
xor
xchg
stos
hlt
jle
mov
ror
add
out
adc
aad
add
pusha
mov
sub
addb
or
ljmp
mov
fcmovnb
ror
push
inc
jb
pop
mov
xor
pusha
jle
push
stos
fisubs
fwait
add
cmp
mov
nop
incl
hlt
dec
pop
push
adc
jl
inc
clc
mov
dec
push
jmp
sbb
jmp
dec
push
cld
sub
mov
icebp
pop
xlat
cmp
into
or
bound
or
push
cld
and
pop
mov
mov
push
mov
push
test
xchg
loope
fwait
pop
mov
jne
out
jno
add
sbb
mov
sub
add
push
movsb
jne
add
lahf
aaa
sbb
xor
cld
loop
lcall
sahf
test
dec
jg
push
xchg
int3
jbe
pop
xchg
or
test
repnz
dec
repz
pop
movsl
adc
sub
inc
out
aad
dec
fwait
testb
mov
cld
stos
leave
in
cmpsb
mov
imul
dec
mov
inc
lret
lret
mov
in
xchg
adc
sbb
inc
out
mov
hlt
xor
cltd
mov
insb
push
aam
sub
mov
loopne
std
es
mov
xchg
mov
addr16
jne
pusha
add
cmpl
jbe
jbe
fimuls
mov
les
adc
out
mov
test
push
jns
cmp
subb
xorl
xchg
mov
xor
inc
mov
cltd
cli
mov
cmp
test
andl
xchg
sub
loopne
hlt
sar
jnp
dec
add
mov
call
push
dec
cmp
xchg
xor
xor
sbb
mov
jne
pop
js
mov
push
jbe
js
add
dec
scas
add
pop
leave
lods
mov
dec
mov
inc
push
jle
mov
lea
or
test
sbbb
add
in
push
call
test
xor
aam
test
add
and
mov
add
or
mov
std
xor
jae
leave
jne
push
and
push
jno
ljmp
outsl
lea
cmc
and
adc
fadd
stc
and
mov
mov
js
ja
xchg
cs
inc
xchg
sub
xor
sbb
and
std
jmp
jnp
nop
inc
daa
mov
mov
les
and
int
outsb
xchg
push
imul
xchg
idivl
movsl
fs
push
int3
jae
add
loop
push
int3
int3
mov
mov
add
jb
push
movsb
jnp
adc
or
shrl
call
sbb
cmp
lret
js
loop
popf
out
jo
jge
jne
pop
mov
add
fidivl
xchg
dec
mov
push
ds
mov
leave
lret
mov
cs
push
imul
fisubs
call
pop
js
call
idivl
test
cltd
pop
shl
mov
sbb
pop
call
stc
lcall
movsl
test
mov
jnp
in
or
adc
adc
fstpl
out
sub
and
mov
fsubl
outsl
cmp
pusha
test
mov
pop
jge
add
dec
jge
shlb
out
mov
lds
and
mov
mov
subb
pop
aaa
jns
lahf
inc
mov
loope
cmp
rcrb
inc
addr16
leave
mov
sub
and
pop
and
inc
clc
mov
cmpsb
das
dec
or
and
mov
in
sti
jo
addr16
aad
fildll
fidivrs
gs
cld
inc
push
fdiv
add
popa
ret
stos
push
pushf
push
or
sub
mov
fsub
popf
mov
sub
lcall
mov
movsl
enterw
int
add
or
mov
je
or
jne
mov
lock
sbb
test
add
mov
mov
xlat
lock
data16
pop
cmpsb
insb
cmc
and
add
push
and
imul
shl
pop
loopne
or
mov
push
mov
in
sub
sub
inc
hlt
pushf
test
sub
jne
mov
mov
lret
inc
ret
xchg
fst
mov
xchg
arpl
xchg
aam
sti
ljmp
pop
add
lret
dec
pop
push
xor
and
sub
out
cmc
inc
int3
aas
and
cltd
inc
int3
cmp
cs
ljmp
mov
icebp
adc
sub
pushf
jl
aad
sbb
jns
jne
xchg
ljmp
cmp
mov
daa
xor
mov
sub
subl
xchg
in
pop
adc
popa
lods
arpl
movsb
ret
hlt
cs
es
scas
sbb
sbb
pop
jmp
rorl
cli
dec
pop
cltd
inc
inc
insl
mov
pop
js
or
pop
mov
in
stos
jne
inc
fcomip
pushf
mov
mov
or
ljmp
jnp
fiaddl
mov
enter
scas
or
pusha
out
mov
pushf
mov
adcl
jns
sbb
push
ret
loope
mov
sub
jmp
hlt
and
dec
pop
sub
rcrl
inc
mov
repnz
test
dec
bound
fcomp
dec
push
mov
adc
lcall
bound
outsl
or
xor
jo
sarb
mov
xor
lea
xchg
ret
jb
scas
cwtl
jecxz
and
lahf
js,pt
call
clc
xor
out
dec
test
jne
data16
hlt
cmpsb
orl
icebp
adc
jno
enter
shlb
inc
addb
rclb
jge
inc
lods
add
mov
mov
aam
test
sbbb
push
fsub
gs
dec
inc
cmp
icebp
ror
sbb
mov
arpl
jne
mov
cmpsl
push
imul
fs
inc
jns,pt
sti
jecxz
loope
cmp
movsb
cmp
or
clc
jno
dec
mov
mov
and
scas
xor
nop
cld
pop
dec
xchg
cmp
in
sub
jg
mov
xchg
call
scas
daa
push
cmp
sbb
jo
ja
in
insl
cmp
cmp
or
adc
in
addr16
xchg
in
pop
dec
test
iret
fisttpl
inc
movsb
and
adc
or
or
aam
movsb
pop
xor
in
lods
inc
mov
mov
divl
add
popa
inc
push
jmp
add
pop
in
jne
xchg
sbb
dec
mov
inc
jo
loope
movsb
inc
repnz
shrb
jne
mov
test
fdivrs
pop
in
push
data16
ret
adc
inc
cmpsb
nop
xchg
pushl
dec
pop
xchg
mov
cld
icebp
fdivrs
enter
in
fldl
movsl
xchg
add
xor
insl
test
xlat
out
dec
nop
xchg
into
fstl
les
sbb
sub
lea
out
mov
mov
jne
test
ret
push
js
inc
mov
pusha
scas
push
fdivl
jne
adc
dec
jo
cmc
jp
mov
push
scas
je
xchg
aam
into
push
fstp
icebp
adc
nop
sub
pop
mov
outsb
loope
mov
push
sti
push
test
lcall
ljmp
jge
inc
out
lret
iret
push
xchg
dec
jle
fnstsw
nop
fucom
shll
sbbb
into
mulb
or
movsb
imul
psrad
pop
sbb
sub
add
jp
aam
pop
push
nop
ret
push
fmull
addb
shl
gs
sti
aas
repz
xchg
inc
jne
movsb
es
fcoml
in
data16
push
hlt
push
mov
mov
loope
add
divb
mov
adc
cmpb
add
dec
sbb
push
inc
mov
cmpsl
sub
ret
xlat
mov
arpl
xchg
and
adc
sbb
pop
push
mov
es
push
cmpsl
jle
adc
sbb
bound
js
cmp
jae
sbb
add
enter
cmp
loope
sbb
mov
dec
add
pusha
in
out
or
sti
ljmp
xor
adc
cmp
sub
je
cmp
lahf
scas
xor
popa
fdivrs
sub
jb
sbb
les
movsl
and
push
das
ja
fists
nop
jle
dec
popf
cltd
std
mov
mov
out
fwait
popa
push
popa
cld
adcb
lods
jne
lods
pusha
adc
cmp
scas
lret
jne
mov
enter
out
mov
pop
scas
std
movsl
vpunpcklqdq
add
dec
pusha
popf
mov
test
dec
cli
pop
adc
sub
aam
rcrb
stc
jmp
sub
outsl
mov
add
pop
cmpsl
out
add
insl
jmp
out
mov
inc
fisubs
rolb
dec
dec
andl
aam
addr16
pop
icebp
sub
xchg
sti
cld
dec
rcll
movsl
sub
mov
mov
scas
fists
jnp
mov
test
push
cmp
add
push
lret
lock
xorb
push
rcl
xor
fdivrl
scas
ret
fiaddl
lea
sub
shl
xor
fsts
stos
js
add
mov
cmc
lret
mov
test
std
sub
push
gs
sbb
in
lea
les
inc
jne
test
test
sub
pushf
lret
pop
jg
dec
aad
adc
sub
mov
fstl
sub
in
in
scas
inc
imul
fxch
mov
je
cs
cmpsb
dec
cld
sbb
or
cmp
adc
fcomps
fxch
push
scas
sub
adc
hlt
repz
add
stos
and
lods
hlt
in
cmp
iret
loopne
add
jle
mov
mov
cmp
lea
sub
aas
or
push
sarb
ret
sbb
repnz
pop
mov
clc
ss
popa
int
hlt
dec
std
sub
or
std
fbstp
test
in
ljmp
jge
sbbb
setge
jae
outsl
cmp
popa
or
jle
insl
gs
js
lods
add
fst
mov
ljmp
daa
push
push
mov
stos
inc
xor
mov
inc
sub
mov
bound
sbb
mov
push
inc
movsl
lods
push
mov
and
test
loopne
mov
int
nop
jecxz
xchg
mov
or
cmpsb
inc
jle
or
cwtl
loop
movsl
bound
inc
sbb
nop
test
jne
xchg
push
into
aas
sbb
jmp
push
mov
in
xchg
enter
mov
sub
outsl
test
cmp
mov
jmp
hlt
sbb
push
jp
push
hlt
pop
push
add
adc
pusha
je
lods
mov
loopne
jg
icebp
cwtl
inc
cli
mov
xorl
out
xchg
push
hlt
adc
inc
aas
xchg
push
pop
clc
scas
idiv
leave
stos
aad
aas
sub
inc
inc
lods
and
cmp
jns
mov
ss
dec
push
hlt
pusha
hlt
xorb
fsubrs
mov
inc
adc
and
push
hlt
add
sub
and
jbe
sub
inc
fs
and
jg
dec
call
mov
imulb
fildll
or
cltd
andl
or
dec
sub
and
add
mov
fistpl
test
mov
dec
jmp
subb
pop
or
rep
pop
leave
cwtl
scas
out
lods
aad
xchg
jle
sti
mov
sbb
push
lea
mov
mov
add
mov
movsb
pushf
stos
mov
pop
jmp
pop
xor
outsl
stc
add
in
rclb
dec
mov
xlat
mov
sub
aad
stos
int3
addl
fcoms
jp
iret
mov
and
std
divps
loopne
sub
mov
adcl
and
jne
repnz
mov
mov
push
push
mov
insb
adc
pushf
mulb
dec
mov
jmp
cs
inc
repnz
sbb
push
ss
fiadds
push
jecxz
jno
pusha
ss
adc
add
ljmp
inc
jne
or
cmc
repnz
dec
add
push
sti
cmp
arpl
daa
pop
xchg
xchg
cmpsb
add
scas
imul
push
xchg
test
lods
dec
das
in
adc
sahf
loopne
ds
call
add
push
sub
enter
or
notb
cmp
fdivp
xchg
lret
cli
dec
pop
ficoml
incb
xchg
stos
pop
inc
ljmp
sbb
dec
jmp
insb
mov
lret
enter
mov
sub
scas
data16
lods
inc
mov
or
sub
je
sub
mov
ljmp
clc
scas
sti
adc
mov
mov
cmp
repnz
and
les
inc
add
cmpsb
mov
xlat
inc
lods
popa
sbb
loop
ja
cmp
ljmp
adc
fdivs
stc
gs
shrl
lret
jle
pop
inc
enter
insb
adc
lret
stc
push
push
aad
push
iret
pop
mov
cmpsb
nop
mov
mov
push
push
add
and
bound
or
adc
xor
mov
out
ffree
int3
sahf
mov
ret
mov
faddl
xchg
jge
add
or
cld
sub
or
cmpsl
js
mov
mov
pop
sub
cmpsl
lods
add
mov
ret
clc
jne
xchg
fcoms
movsb
movsl
jl
ss
mov
cmpsl
out
dec
pop
jne
cmp
sub
data16
fisubrs
cmpsb
imul
push
sub
and
iret
lods
pop
dec
pushl
cltd
cwtl
popa
orl
icebp
mov
xchg
sub
ret
stos
std
dec
stc
leave
lahf
pop
jle
movsb
popf
pop
cltd
inc
int3
leave
mov
clc
lcall
xor
addb
or
jl
out
and
mov
jmp
xor
inc
mov
jne
mov
arpl
daa
test
or
dec
test
dec
inc
jg
inc
add
mov
in
add
push
jns
fdivs
pop
pushf
test
sti
bound
dec
lock
sbb
imul
pop
insb
stc
fucom
call
mov
je
cmpsl
addr16
cwtl
add
test
pop
push
inc
push
cwtl
lods
orb
xor
xor
mov
ret
pushf
cmp
pop
popa
ljmp
adc
xchg
jmp
push
shrb
mov
clc
loop
iret
shrb
mov
push
push
gs
mov
jbe
aam
movsl
jmp
adc
sub
push
or
fstpt
bound
popa
and
fnstcw
in
cmp
loope
fadds
mov
sub
loop
add
cltd
sbb
pop
push
pop
pop
in
mov
xorb
xchg
in
jl
sahf
fcoml
sbb
lret
orl
int3
mov
mov
mov
push
sti
push
imul
cwtl
inc
pop
mov
out
jo
sbb
add
mov
out
sub
testl
jno
repz
or
sti
xchg
pop
out
fisubl
mov
pushf
mov
popa
jge
sbb
repz
ja
mov
les
mov
and
and
hlt
xchg
dec
mov
pop
jmp
cld
loop
shrb
sbb
xchg
test
imull
mov
dec
adc
cmp
pop
dec
sub
pop
mov
mov
add
std
jnp
stos
mov
and
sub
daa
movsb
hlt
movsl
ja
mov
fnstsw
inc
hlt
fdivp
jp
fistps
xchg
aas
dec
jnp
add
inc
imul
inc
cwtl
jp
mov
loopne
mov
test
push
or
dec
push
testl
inc
dec
xor
mov
lock
repnz
mov
add
sti
sbb
sbb
or
adc
in
lock
cmpsb
cld
movsl
push
popf
adc
fdivrs
inc
jge
xchg
cmp
and
xchg
loope
xlat
rcrl
cwtl
aaa
daa
hlt
ja
data16
mov
mov
jecxz
mov
enter
jmp
jne
lds
fmull
leave
and
pop
or
loopne
rcrb
nop
jl
dec
std
fs
dec
cmp
cld
es
pusha
cli
add
mov
mov
inc
sbb
mov
push
mov
fmulp
xchg
mov
rorb
sbb
stc
sbb
cld
add
pop
dec
push
xchg
aad
push
dec
aam
out
cmpl
and
jb
test
in
pop
dec
jmp
clc
rorl
cli
ja
cwtl
loopne
test
push
cltd
fstpl
mov
push
mov
cwtl
lds
lret
mov
sbb
stos
cbtw
insl
mov
cmp
imul
dec
mov
mov
jl
idivl
arpl
mov
nop
dec
mov
iret
and
inc
pop
jmp
mov
hlt
xchg
xor
cmp
push
ret
leave
add
ljmp
inc
mov
out
int
orb
jge
repz
outsl
jmp
xchg
call
mov
jge
inc
jg
cmpsb
or
gs
movsl
dec
ljmp
mov
outsl
push
movsl
pop
lret
cmp
sbb
jno
insb
mov
nop
jo
stos
sub
push
fwait
and
shl
push
mov
dec
int3
pop
inc
insb
sbb
mov
int3
imul
adc
dec
add
pop
jnp
and
fsub
pop
shrl
jmp
mov
jp
gs
test
mov
cli
mov
clc
pop
jecxz
mov
loop
in
das
andb
adc
test
jae
or
popf
enter
mov
ds
rcrl
adc
inc
inc
int3
pop
dec
and
and
out
gs
imul
jmp
hlt
fisubs
inc
loope
lock
cmpsl
mov
mov
jmp
shlb
mov
add
rcrl
movsl
inc
xor
add
outsl
cmpl
sub
pop
testb
adcb
sub
mull
pop
popf
icebp
and
adc
sub
sbb
pop
xchg
mov
jmp
mov
cli
cmp
imul
stc
mov
xchg
lcall
push
gs
jne
inc
leave
cmp
xor
sahf
leave
xchg
or
mov
jmp
or
add
mov
mov
pop
movsl
push
jnp
mov
jo
push
push
sbb
scas
add
cmp
xchg
iret
test
ja
adc
xchg
cmp
pop
adc
cmp
out
mov
dec
ficoml
fistps
in
pop
cmp
insb
cmp
cmc
adc
ds
adcb
push
cli
into
popf
jbe
and
fs
sbb
pop
daa
ret
or
jl
jns
lods
mov
push
xor
push
push
lcall
insb
rcll
xchg
xorb
arpl
addb
xlat
aad
mov
add
repz
lret
mov
jne
push
sti
lods
loopne
xchg
stos
inc
out
push
pop
add
shrl
jnp
adc
or
sub
jecxz
sbb
lret
in
push
adc
rcrl
outsb
push
mov
add
sub
out
pop
or
or
xchg
pop
scas
dec
mov
pop
lods
lock
xor
mov
mov
dec
cmp
dec
mov
inc
or
ljmp
loopne
in
lods
add
rcrb
gs
inc
push
out
push
shll
inc
mov
and
cmpl
jo
in
jne
pop
dec
sub
push
mov
stos
push
add
dec
arpl
cmpsl
jle
sub
or
sub
mov
mov
out
xor
mov
sbb
mov
or
faddp
xrelease
dec
push
mov
lds
add
std
push
xchg
sub
lahf
mov
cld
call
jno
clc
mov
in
adcb
out
fstl
sbb
sahf
shlb
push
dec
movsl
mov
or
aam
fstl
loopne
stos
repz
frstor
inc
cmpsl
push
or
jbe
pop
ds
mov
jl
fld
and
ss
lods
push
jecxz
insb
inc
xchg
jecxz
divl
mov
mov
pop
shr
stc
stos
sbb
addr16
pusha
jae
and
repnz
rorb
pusha
jp
sub
push
inc
insb
push
mov
les
jecxz
ja
cli
fcmovnu
push
scas
fsubrs
movsb
xchg
das
sbb
in
cmp
outsl
lea
add
leave
addr16
jnp
sub
xorb
int3
fmul
lcall
and
inc
or
sub
cmp
cmc
gs
gs
orl
pop
cmp
add
pop
stos
jmp
nop
dec
jle
fbstp
pop
add
or
mov
out
sub
movsb
jecxz
jb
aad
jge
scas
js
mov
movl
ret
cmpsb
inc
ret
jne
stc
jo
fcoml
mov
test
icebp
ljmp
or
cld
xchg
subl
fcoms
pop
mov
xchg
push
pop
out
adc
mov
pop
leave
inc
pop
adcl
push
jbe
out
add
dec
adc
test
jge
pop
ljmp
aaa
stos
or
push
les
pop
jle
leave
in
inc
test
jne
orb
inc
xor
jmp
cmpsl
mov
pop
cli
shlb
stos
mov
loop
inc
push
or
bound
repz
xchg
mov
cwtl
nop
in
inc
jne
mov
mov
aad
pop
or
mov
cwtl
jnp
or
popa
ficomps
cmp
inc
mov
sahf
ss
scas
jnp
fistl
insl
mov
jo,pn
les
cmp
shll
clc
insb
outsb
pop
test
bound
mul
push
mov
scas
ljmp
jg
or
inc
push
xlat
mov
jbe
clc
andl
mov
xchg
cmp
test
ret
adc
inc
push
adc
adc
push
xchg
push
addr16
dec
sbb
inc
pusha
ljmp
push
in
jbe
fnsave
xchg
add
dec
cli
xchg
and
shlb
pop
ds
jge
roll
jge
fprem
cmp
lahf
call
rorb
pop
xor
adc
push
repnz
cmp
mov
mov
and
imul
aam
fnstenv
lcall
mov
movsb
orl
int3
xchg
xor
aam
hlt
push
inc
mov
mov
mov
mov
cmpsb
and
mov
jne
outsb
js
xor
lds
jge
fldenv
loopne
in
subl
shrb
lods
sub
mov
push
xchg
cmp
pushf
mov
fcmovu
loop
jp
iret
xchg
into
inc
mov
mov
std
pop
popf
push
loopne
pop
adc
dec
mov
movsl
jnp
dec
sbb
add
arpl
jnp
jb
hlt
mov
stc
inc
xor
in
mov
enter
adc
repz
mov
jmp
push
hlt
cmp
call
push
xchg
add
popa
loop
and
xchg
sub
xchg
lods
das
cmpsb
sub
mov
push
mov
xor
bound
into
mov
sub
imulb
aaa
jo
pop
loope
movsl
ljmp
jge
stos
cmpsb
pop
ja
sbb
cmpsl
xbegin
repz
shr
leave
pop
into
jnp
adc
in
jbe
inc
jnp
fldt
loop
sub
ljmp
dec
push
jge
add
loop
cld
pop
aad
movl
push
call
out
int3
addr16
sbb
std
inc
sub
xor
jne
push
arpl
mov
push
inc
inc
sahf
jp
push
cmpsl
lret
adc
mov
lds
jle
push
add
lods
mov
add
lock
jne
repz
sbb
push
out
in
and
pop
or
loopne
icebp
xor
lcall
call
ficomps
cmc
into
movsl
mov
loope
movsb
jbe
iret
mov
xor
fs
notl
cmp
sub
out
subb
hlt
and
repnz
mov
xchg
insb
or
mov
mov
jp
int3
fcmove
movsl
in
push
mov
cmpsl
loopne
shr
xorb
sbbl
into
jnp
push
imul
jle
repz
mov
das
mov
or
jns
inc
jb
std
mov
sbb
adc
scas
jae
je
pop
xor
jecxz
mov
fistpl
lret
push
xorl
or
cmpsl
ja
push
hlt
mov
stos
sub
sbb
pushf
hlt
mov
imul
pop
jbe
out
sbb
stos
and
cli
dec
pop
sub
enter
cmp
pop
mov
push
dec
or
push
push
push
out
fistps
push
add
sub
xor
mov
aaa
dec
fisubrs
repz
stos
mov
and
cmp
lds
ja
lock
sub
lods
add
in
mov
mov
cmpb
je
fstps
outsl
out
mulb
add
jge
sbb
add
push
rcll
nop
imul
xor
and
cmpsb
push
or
and
shlb
jb
jl
pop
push
dec
fsubrl
shll
clc
pop
mov
jp
pop
fs
sarb
out
test
push
xlat
test
push
into
scas
hlt
adc
out
lock
aaa
imul
sbb
aaa
aaa
or
fnsave
and
sub
push
mov
xchg
popf
fsts
loop
fistps
lods
fstl
add
sbb
fmuls
stos
mov
aad
call
or
gs
rcl
daa
out
dec
mov
insb
push
pop
jg
ss
sbb
push
nop
jo
nop
sub
ljmp
adc
jmp
or
arpl
sub
jns
mov
mov
stc
rcll
test
xor
push
push
sbb
dec
mov
xchg
pop
fidivrs
shr
pop
out
scas
and
ret
jg
sti
lods
ret
dec
and
adc
fmul
imul
cwtl
arpl
stos
stc
dec
roll
cmp
enter
xor
fdivrl
subb
call
lods
ret
inc
int3
cmc
cli
cmp
and
outsb
lds
pusha
push
scas
sahf
mov
add
int3
mov
out
fs
jecxz
cmp
stos
cmpsl
stos
cld
mov
inc
stos
sub
or
xchg
mov
test
sar
hlt
jmp
ret
inc
repnz
xchg
pop
jg
cmpsb
push
test
mov
stos
out
int3
dec
push
jnp
pop
sbb
sti
call
std
and
xchg
lret
pusha
scas
rorl
popa
stos
hlt
lods
push
lahf
push
jl
popf
aas
or
int3
push
and
lret
loopne
enter
les
lock
push
cmpsl
stc
mov
jne
jo
add
push
push
dec
adcb
push
ffreep
dec
pop
add
addl
loope
hlt
cmp
outsl
mov
or
jae
popl
imul
jnp
sbb
push
mov
add
aas
adc
negl
les
ret
icebp
cli
dec
lea
out
mov
sub
jl
cli
pop
fstps
sub
xchg
inc
xchg
in
lcall
jle
pusha
inc
mov
loopne
faddp
imul
test
rcr
adc
mov
lods
jnp
add
stos
in
push
jns
mov
mov
test
stos
fsts
enter
fisubrl
add
cmpsb
xchg
or
mov
repnz
or
mov
adc
loope
or
cmc
pop
or
sbb
jne
pop
outsl
rorb
fwait
arpl
cmp
push
loope
mov
pop
pop
sbb
in
mov
enter
xor
xchg
negb
xchg
dec
scas
lret
pop
push
inc
mov
pop
icebp
jns
lcall
js
js
jmp
mov
push
arpl
mov
fistpll
rorl
cmp
xor
and
mov
cmp
mov
outsl
pop
scas
sbb
jbe
push
hlt
nop
sub
clc
lcall
jno
jecxz
inc
mov
sbb
sbb
hlt
add
cmp
add
outsb
pop
ficompl
lret
test
pop
lahf
scas
pop
incl
xlat
jmp
add
dec
aam
or
popa
enter
outsl
push
cwtl
lret
jge
add
add
xchg
cmpsb
scas
stc
and
cmpsl
fdivrp
ds
out
cld
iret
adc
jnp
and
lds
loopne
jne
sbb
or
mov
out
loopne
inc
push
cmpsb
hlt
fdivrl
leave
fldt
mov
test
inc
jne
cltd
imul
add
push
hlt
adc
mov
pop
add
call
pop
cmp
sbb
pop
out
repnz
fimuls
xor
leave
flds
mov
aad
sbb
stos
stc
cld
dec
jp
pop
aas
xlat
dec
mov
dec
shll
jb
outsl
inc
shll
add
or
add
fdivrs
hlt
idiv
jmp
pushf
or
sub
mov
ds
movl
notl
scas
push
shl
es
inc
inc
mov
or
pcmpeqw
std
mov
inc
cmpsb
hlt
mov
stos
push
cmc
imul
test
repz
orb
sbb
mov
aaa
push
jle
ret
mov
dec
dec
loopne
fisttps
dec
jle
xor
jp
xchg
pop
pop
insl
ss
push
pushf
push
movsb
subb
data16
ffree
mov
xorb
xchg
mov
clc
dec
fsubp
js
mov
sti
mov
xchg
mov
cmpsb
push
arpl
cmpsb
ja
hlt
gs
or
lock
dec
nop
rclb
into
sti
jmp
pop
stc
dec
sbb
incl
jne
inc
jo
fsubs
in
imul
pop
or
jp
dec
leave
ljmp
or
jb
pop
mov
mov
mov
push
nop
test
push
xchg
jno
jmp
inc
int3
inc
loopne
cli
cmp
es
sub
mov
push
ret
out
pop
mov
mov
enter
popa
test
pop
hlt
neg
popa
mov
inc
jmp
mov
mov
add
mov
xchg
mov
add
test
cmpsl
add
pop
mov
mov
xor
pop
jne
pop
stos
stos
xchg
data16
ficoml
mov
imul
sbb
lret
pop
jns
lret
lret
nop
cld
mov
xchg
adc
test
and
xor
inc
addr16
inc
jg
es
add
shlb
inc
int3
pop
jg
jmp
fimull
es
imul
lods
or
cli
cltd
in
jmp
sar
or
and
ret
popa
fidivrs
mov
mov
arpl
fldt
imul
fadd
nop
test
mov
push
adc
mov
outsl
jecxz
enter
aad
js
or
fcoms
dec
xchg
push
movsl
and
ja
ljmp
popa
dec
or
ror
lods
lock
stc
movsl
mov
fmull
xchg
mov
aam
add
adc
inc
jne
fidivrs
gs
into
cmp
out
hlt
imul
mov
ss
lock
jge
inc
insl
pop
popa
je
cmpsb
push
adcb
push
fmuls
outsl
pop
les
roll
jns
lahf
mov
add
push
jnp
cmp
pop
push
les
hlt
dec
sti
sub
outsb
sub
xchg
dec
test
fists
sahf
xor
iret
jle
enter
in
mulb
out
insl
sub
ret
push
nop
sub
cmpsl
das
pusha
xchg
add
cmc
loope
iret
pop
mov
lods
mov
nop
and
shlb
test
jae
jnp
lods
xchg
push
pusha
leave
cmp
mov
xchg
and
or
enter
mov
popf
xor
xchg
or
jbe
adc
cwtl
test
xchg
ret
cmp
out
jns
inc
pusha
xchg
mov
sbb
sub
push
cmc
in
inc
fdivrs
cmp
jg
mov
mov
push
sbb
inc
xchg
and
fwait
in
jne
sub
jle
xorb
insl
mov
nop
jae
pop
scas
cmc
add
icebp
insb
mov
push
or
jle
mov
orl
hlt
sub
dec
pop
push
cltd
add
push
mov
push
ljmp
hlt
inc
in
shrb
mov
les
stc
inc
push
lcall
loopne
push
cmp
xorl
cmc
ja
pop
sub
inc
cwtl
add
xor
adc
sahf
cmp
adc
fcomps
push
xorl
out
mov
out
arpl
outsl
repnz
push
push
cld
nop
xor
sub
or
imul
scas
mov
inc
fiaddl
xchg
push
or
pop
int3
sub
inc
xlat
fadd
hlt
mov
mov
lcall
push
aas
lcall
test
xchg
mov
xchg
mov
hlt
sub
or
pop
mov
js,pn
or
or
sub
add
push
mov
or
stc
add
pop
mov
sub
nop
sbb
mov
pop
rcl
pop
in
dec
pop
pop
sti
out
and
lods
aaa
shll
scas
enter
jo
inc
into
mov
mov
out
mov
push
lcall
mov
movsl
adc
mov
cli
mov
push
cli
outsb
mov
xor
rcr
adc
ret
inc
jg
pop
dec
int3
and
adc
out
setne
jle
je
incb
push
cli
and
sub
xchg
mov
pop
into
in
inc
xchg
fucomi
out
mov
stos
cmp
and
hlt
inc
adc
fildll
std
gs
sti
in
add
mov
push
popa
scas
outsb
jae
int3
pop
cmp
sub
mov
cltd
xchg
loop
sti
or
aad
sbb
fldt
mov
mov
fisttpll
mov
xchg
movsl
fcoms
adc
or
inc
inc
nop
test
jne
ja
rclb
jle
push
hlt
stc
es
sub
pop
aad
add
mov
mov
sti
stc
push
lcall
test
enter
add
mov
int3
addr16
or
lcall
push
fcomip
rolb
jl
cmpsb
gs
pop
test
mov
test
in
pop
and
sub
adc
outsl
pop
fs
stc
std
sub
cmpsl
into
mov
notb
lds
jns
push
les
cmp
push
jp
dec
aam
pop
in
test
mov
inc
or
jne
add
into
pusha
or
and
jnp
popa
inc
psubsw
repnz
repnz
stos
xchg
pop
xchg
mov
in
push
rcrl
lock
std
push
cmpb
pop
push
fdivl
mov
cmpsb
xor
idiv
or
in
sbb
dec
repnz
dec
mov
in
pop
pop
mov
cmp
jg
loope
nop
adc
call
dec
inc
or
mov
or
adc
inc
fs
cmpb
pop
mov
scas
lret
data16
mov
mov
stc
ds
mov
sub
xor
test
xorl
lods
jnp
sub
shll
inc
dec
xlat
adc
enter
insl
pop
clc
shrb
into
stos
aam
inc
jne
push
adc
and
push
mov
push
imul
pop
dec
incb
and
push
scas
xchg
push
xor
sbb
rcl
push
pop
dec
enter
dec
push
movsl
mov
inc
mov
pushf
sbb
push
sbb
sbb
cli
leave
flds
cld
and
test
ror
cwtl
xchg
insl
test
lods
fwait
mov
stc
add
add
ljmp
stos
mov
push
cli
into
data16
mov
push
mov
mov
mov
fsubr
loope
jno
sub
push
lret
pop
pop
adc
cmp
cmp
jl
mov
or
insl
mov
jg
or
iret
adc
movsb
sub
xchg
push
add
mov
je
les
fstpl
cmp
ss
mov
xlat
mov
xchg
sub
aas
or
xchg
out
call
pop
xorl
mulb
xor
call
mov
std
nop
mov
ret
cli
jmp
jne
dec
fs
mov
ja
sub
jbe
enter
test
and
jp
fcos
sub
sti
mov
orb
pop
inc
movsb
data16
add
mov
sub
sti
rolb
push
rcrl
in
inc
filds
repnz
shrb
and
ds
mov
std
xchg
shrl
fistpll
lcall
xchg
das
scas
mov
sub
inc
xchg
mov
fstps
mov
test
int3
imul
pushf
xor
cmp
or
add
les
jne
das
adcb
mov
dec
jp
rclb
shl
jne
hlt
push
jp
ljmp
and
repz
jns
xor
fwait
ss
movsb
dec
test
jne
cmp
hlt
adc
push
test
ror
adc
aad
hlt
xchg
nop
call
push
sahf
mov
sti
subl
fldenv
cmpsl
jbe
sub
mov
jg
mov
lea
fdivl
nop
hlt
dec
cmpsb
cmp
cld
and
mov
push
push
cli
aam
jb
stos
dec
and
mov
fdivl
jl
insb
inc
cld
in
hlt
mov
shlb
push
ret
fldl
sub
xchg
mov
out
mov
add
fadd
xor
mov
mov
mov
out
xlat
inc
pop
push
jno
outsl
push
sbb
sub
addr16
sub
xor
outsl
fisttpll
dec
mov
clc
int
sbb
sbb
mov
pop
push
xor
xchg
into
orb
pop
cmpb
xlat
jle
enter
aas
mov
leave
in
lods
mov
clc
std
hlt
xchg
inc
orl
ja
out
cmp
pop
sbb
clc
sub
fst
jecxz
js
test
xchg
ret
jl
outsb
cmp
popf
loopne
jnp
pop
es
xor
mov
add
stc
arpl
loop
cmp
mov
shlb
add
loope
stos
sub
lock
arpl
shlb
sub
pop
loope
lcall
cmc
adcl
rorl
loope
test
outsl
aas
cli
inc
jne
enter
mov
scas
stc
not
xor
xchg
stc
cmpsb
mov
jg
mov
aas
mov
add
pop
add
and
fadds
sarl
enter
dec
repz
arpl
scas
sbb
adc
xchg
imulb
cwtl
stos
inc
in
cmpsl
jle
movsl
insl
inc
push
cli
add
dec
ljmp
adc
lock
jecxz
cmp
add
pop
shr
add
and
or
nop
inc
xchg
mov
notl
sbb
jp
xor
imul
push
pusha
push
hlt
push
cmp
add
fstpl
xor
cmp
cmpsl
in
mov
xor
shlb
movsl
lahf
jp
jmp
fldt
xor
iret
push
in
roll
pop
mov
xchg
fsubl
aam
mov
sub
std
cmp
cmp
mov
pop
aam
mov
out
sub
cs
dec
mov
lock
xchg
cld
aas
sbb
inc
sahf
cmp
loope
inc
or
xor
push
sbb
inc
fmul
jne
xor
mov
adc
mov
cmpsb
add
xchg
in
add
xchg
sub
push
hlt
in
add
lea
fsubp
rorb
test
cld
dec
inc
dec
pop
xchg
orb
inc
mov
mov
dec
ds
ret
enter
icebp
push
cmp
rcll
nop
push
repnz
mov
lcall
add
mov
jecxz
popa
divb
inc
adc
mov
int3
jo
pop
or
xchg
adcl
mov
mov
pop
xchg
hlt
fs
stc
cmp
data16
cmc
jg
repnz
inc
into
pusha
fdivl
pop
push
int
mov
mov
sub
dec
shrb
ret
movzwl
add
adc
mov
cmpsl
mov
add
insb
push
lret
sub
xlat
mul
inc
lcall
inc
sbbb
stc
cltd
mov
repnz
cmpsb
adcl
pop
movsl
mov
push
mov
cmp
in
adc
lods
cli
lock
pusha
shlb
or
lds
cmc
les
adcb
mov
mov
mov
dec
add
dec
call
and
into
scas
ret
fstl
cld
dec
add
push
add
pop
mov
dec
ret
xchg
sub
jbe
push
adc
hlt
jne
xor
les
inc
int
push
outsl
out
lret
adc
jg
adc
popf
insl
fcompl
popf
or
and
stc
pop
call
imul
mov
cld
xlat
dec
cmc
in
lods
xchg
pop
test
icebp
adc
or
adc
adc
jecxz
ror
lahf
sbb
out
or
sti
aam
inc
loopne
cmp
mov
enter
stc
icebp
mov
pop
sub
movsb
scas
dec
js
sahf
or
out
mov
roll
sub
loop
add
and
in
lea
mov
mov
cmc
push
push
push
pop
std
jae
mov
sbbl
cmc
sbb
jno
jne,pt
fs
add
cmpsb
push
leave
nop
hlt
cwtl
das
ljmp
jp
mov
mov
or
mov
movsl
les
jp
cmpsl
ror
sahf
mov
push
hlt
test
cmp
ret
inc
mov
rcll
sti
arpl
push
into
jl
lds
nop
out
movl
add
add
test
gs
xchg
jns
push
int
mov
sbb
add
movsl
test
mov
jne
hlt
add
xor
lret
shll
mov
inc
xchg
pop
pop
add
mov
jmp
sahf
shrb
pop
outsl
adc
and
or
stos
scas
clc
icebp
es
outsb
add
cwtl
in
ja
push
movsl
adc
outsl
pushf
lcall
mov
fmuls
stc
mov
lret
push
pushf
add
shl
sub
mov
jae
jp
cmp
xchg
hlt
cmp
test
test
cmp
mov
jge
das
sbb
mov
hlt
outsl
pop
test
jp
cs
push
loop
adc
insl
pop
cmpsb
scas
sub
loope
ja
and
xor
pushl
ljmp
adc
cmp
mov
and
inc
into
lods
cld
pop
data16
jno
inc
testb
pusha
jp
test
mov
bound
jo
ret
das
mov
lahf
or
mov
movsb
inc
dec
pop
div
ret
fstp
loope
jg
push
icebp
hlt
cwtl
sub
sub
hlt
pop
mov
cmp
xor
out
jne
pusha
inc
push
addb
pop
xor
fwait
adc
sti
sbb
add
mov
mov
lock
jmp
inc
insb
stos
fmull
in
sub
cwtl
movsb
jnp
das
or
dec
shlb
notl
cmc
jge
stos
nop
ret
dec
xorb
mov
pop
pop
movsb
int
hlt
lret
adc
js
in
enter
lret
and
and
imul
dec
lock
inc
movsb
fimull
xchg
and
sbb
clc
inc
inc
testl
int
stc
xor
xchg
test
xchg
movsb
inc
and
mov
loope
rcll
test
jo
hlt
adc
shlb
push
sarb
and
push
test
mov
jns
push
inc
mov
mov
lock
mov
mov
les
int
test
xchg
cwtl
out
shlb
mov
arpl
xchg
and
dec
inc
adc
es
loopne
xchg
movsl
pop
std
leave
xlat
icebp
mov
xchg
mov
loope
xor
loopne
ljmp
jne
add
enter
lock
and
push
or
sub
add
jle
push
out
jne
xchg
dec
movsl
inc
push
lods
mov
stos
sbb
mov
inc
into
insb
dec
cwtl
xchg
daa
push
push
add
in
test
jb
cwtl
pop
adc
nop
je
push
mov
test
mov
mov
pop
pop
addr16
xchg
mov
mov
js
stc
pusha
push
jne
mov
xchg
out
pop
mov
and
stos
pusha
test
insb
push
movq
aad
scas
sti
sub
js
mov
cmpsl
lock
nop
into
ror
das
xchg
xor
mov
hlt
push
xchg
mov
jp
inc
aas
cs
rol
vprotw
sub
jmp
sar
dec
mov
in
pop
add
fcmovnb
cld
rorb
enter
ljmp
sti
insb
repnz
mov
movsb
mov
imul
mov
hlt
stos
adc
jg
inc
sub
test
rcll
out
lods
loope
dec
repnz
adc
stos
xchg
xor
cmp
cmp
adc
or
xor
add
jnp
out
scas
inc
mov
push
mov
add
mov
lods
cmp
xchg
jecxz
inc
jne
mov
test
lods
mov
addr16
push
sbb
popa
add
pop
insb
push
popa
sub
push
shlb
mov
jb
xchg
sub
fadds
jnp
jnp
dec
mov
enter
andb
jne
aas
out
mov
nop
enter
icebp
repnz
push
xchg
fnstsw
sbb
add
xchg
xchg
xchg
test
pop
inc
pop
dec
nop
lret
lock
lahf
popa
mov
insl
dec
stc
pop
jnp
stos
jne
push
xlat
push
jo
test
out
pop
sub
shll
inc
xor
push
test
inc
mov
sahf
out
push
orb
ja
inc
mov
inc
adc
dec
cmp
cmpsl
xchg
add
push
out
mov
jb
ds
je
sti
movsl
jmp
inc
lahf
push
filds
cmp
pop
xor
mov
xor
out
mov
rorl
out
jecxz
dec
push
adc
popa
fnstsw
mov
dec
movsl
aaa
andb
mov
push
scas
mov
pop
cmp
mov
and
mov
or
lret
inc
mov
mov
xchg
sarl
dec
jle
cmp
mov
ret
add
pop
or
test
mov
sbb
notb
push
and
arpl
mov
mov
mov
rcll
out
jle
lahf
jmp
lods
movsl
in
pop
movsl
cmp
lret
sbb
cli
xchg
les
sbb
lods
aas
imul
in
add
jmp
sub
andl
jge
nop
add
fdivr
or
into
insb
cmpsl
mov
jg
into
xchg
inc
adcl
mov
add
lods
inc
repz
aas
push
scas
stos
ficomps
cltd
imul
ret
push
pop
hlt
loope
jl
sti
scas
inc
dec
popa
dec
xchg
int3
arpl
cmpsl
popa
lahf
nop
xchg
mov
xchg
sub
inc
jne
mov
ljmp
mull
jns
outsb
jne
pushf
cld
call
mov
mov
cmp
xor
mov
xchg
mov
push
test
out
in
push
mov
sub
es
sub
cli
or
out
fbstp
movsl
sahf
pop
pop
ljmp
ss
cmp
cld
xchg
add
fldlg2
inc
xchg
push
xchg
mov
or
jbe
aam
in
outsl
inc
and
lcall
in
movsl
mov
hlt
gs
lret
lcall
nop
sbb
into
inc
pop
out
add
sub
scas
cmpsl
mov
insb
jns
push
inc
mov
pop
outsb
repz
mov
lods
add
loope,pt
fsubs
add
mov
xor
pusha
sbb
xchg
pop
push
mov
add
mov
jbe
mov
xchg
test
std
xchg
hlt
sahf
jo
popa
sub
sub
adc
rolb
or
dec
shll
movsl
ret
sub
inc
push
fsub
mov
inc
push
or
neg
jp
sbb
stos
in
sti
lret
cmpsb
iret
test
mov
iret
notl
add
push
jp
xchg
fidivl
pop
pop
dec
daa
add
jl
xor
lds
bound
push
in
mov
imul
sub
mov
fidivrs
ret
pop
dec
in
pop
mov
sti
or
or
test
mov
pop
mov
or
jg
sti
jecxz
testb
jo
or
mov
lea
lret
add
outsl
push
cs
add
jb
sbb
push
pop
inc
mov
pop
push
lahf
pop
addb
jp
cwtl
mov
mov
dec
mov
lds
leave
int
mov
out
inc
fstl
push
iret
hlt
int
std
pop
xchg
adc
inc
lahf
lds
lahf
leave
jecxz
sub
mov
mov
leave
mov
movsb
adc
jecxz
xchg
cmp
rorb
mov
jne
pop
dec
imul
pop
bswap
fnstsw
xchg
pop
popa
pop
int
dec
jnp
fsubr
pop
pop
cmp
mov
imul
loop
cmpsb
and
rcrl
mov
loope
cmp
xor
sub
imul
or
les
lret
add
in
mov
les
cmp
stos
inc
arpl
jle
popf
scas
js
xor
test
hlt
mov
sub
roll
enter
inc
lods
nop
push
lret
xor
sub
js
inc
push
sti
xor
lret
sahf
sub
nop
add
mov
pop
loope
enter
sub
shl
jp
mov
lods
or
and
dec
roll
in
cld
xlat
mov
addr16
idivl
decl
or
fcomps
mov
adcl
mov
int
pop
mov
push
cli
mov
loop
push
sub
iret
fldcw
lds
in
pusha
xchg
test
xchg
mov
stos
jmp
sbb
std
movsl
dec
push
sub
andb
aam
or
inc
fsubrs
sbb
mov
lahf
ror
add
aas
jp
inc
dec
cs
cmpb
mov
fs
mov
int3
sbb
fidivs
cs
pop
pop
jns
adc
fs
aad
cmpsl
cmp
daa
rorl
sub
xor
ret
xor
lret
jg
ja
and
fidivl
push
or
add
mov
subl
test
movsl
fs
addl
test
outsl
jbe
mov
hlt
shl
clc
arpl
xchg
sub
mov
sub
gs
mov
outsl
outsl
mov
push
mov
inc
pop
test
mov
push
mov
sub
jge
hlt
hlt
mov
jp
sub
hlt
addr16
inc
les
shr
cwtl
inc
les
icebp
cmpsl
mov
pop
and
mov
testl
dec
jl
mov
daa
fs
push
lahf
stos
sbb
lahf
adc
pushf
inc
or
movl
int
mov
test
mov
pop
mov
imul
int
dec
cli
inc
dec
ror
mov
in
bound
nop
out
push
inc
or
loopne
mov
clc
idivb
push
insb
push
pop
mov
dec
cmp
in
aam
sbb
xorb
sbb
jnp
dec
jne
adc
cmp
inc
stos
mov
pop
imul
sub
pop
jle,pn
cmp
push
jns
mov
cmp
mov
inc
mov
add
xchg
sbb
es
pop
cltd
push
adc
add
cmp
xor
cmpsb
sub
mov
xchg
stc
xor
imul
jle
stc
xor
cwtl
cmpsl
dec
stos
mov
cmpsb
mov
icebp
push
sbb
leave
mov
sbb
mov
dec
cwtl
enter
pop
test
addl
in
jne
sub
jo
outsl
imul
test
jl
xchg
xor
mov
xor
daa
std
inc
mov
pop
nop
fbstp
pop
pop
ret
jge
jecxz
mov
cmpsl
cmp
xchg
xor
sbb
add
cmp
clc
addl
nop
lods
pop
xchg
sub
xchg
xor
data16
push
mov
pop
mov
cmp
pusha
popa
add
ds
and
sar
adc
adc
jo
ja
add
fildl
jg
pop
gs
cwtl
sub
int
jns
adc
ja
mov
clc
add
outsb
js
pop
hlt
pop
mov
mov
xor
dec
mov
insb
cwtl
bound
sub
or
hlt
lcall
jp
lcall
repz
inc
rorl
inc
data16
loopne
jl
icebp
in
mov
shl
mov
into
or
bnd
mov
xchg
mov
add
cmpsb
jbe
xor
xchg
jmp
subl
aas
jae
xchg
stc
xor
mov
ljmp
sbb
push
cmpl
movsb
jnp
scas
pop
xor
adc
jb
les
xorb
adc
jle
outsl
or
xchg
xor
pop
das
fdiv
jne
sub
or
hlt
mov
stos
imul
pop
jmp
cltd
mov
jl
out
mov
and
inc
jb
xchg
mov
rcrl
xor
mov
or
loop
lods
test
mov
mov
add
gs
hlt
xlat
sub
in
sub
cmp
int
lret
mov
daa
cmp
jnp
cmp
lock
fsubl
cwtl
fldt
push
fildll
jecxz
xor
push
mov
push
pop
cmp
gs
cmp
in
sahf
movsl
ret
sbb
xor
jmp
adcl
add
inc
negb
fldt
js
sahf
jge
gs
jg
sub
jns
mov
xorb
cwtl
or
add
dec
lods
cld
enter
jns
loope
outsl
mov
lods
inc
pop
enter
cmp
loopne
ja
cwtl
sub
lcall
add
adc
out
mov
repnz
jbe
or
call
ja
adc
repnz
xchg
adc
mov
add
insb
aad
mov
ljmp
outsb
std
outsl
xchg
jne
jo
push
xchg
test
add
jle
lret
inc
cs
xchg
fprem
jmp
add
or
repnz
cltd
pushf
push
addl
test
jne
mov
test
inc
and
stos
loope
repnz
insl
enter
inc
jecxz
xchg
cmpsl
mov
sbb
xlat
pop
loope
sbb
mov
pop
repz
sahf
cli
icebp
ficoml
scas
cmp
in
and
lods
mov
sti
in
sbb
cltd
jle
repnz
adc
clc
mov
pop
adc
inc
inc
mov
mov
mov
sti
ds
mov
jp
dec
ret
cwtl
dec
loopne
pop
add
outsb
pop
sbb
jno
pop
jl
mov
push
jbe
test
into
add
mov
push
popf
filds
mulb
stos
mov
xor
stos
or
or
pop
imull
es
outsl
repz
jl
lock
movsb
or
out
sbb
data16
xor
adc
xchg
movsb
xchg
sbb
fdivl
aad
test
bound
sahf
jne
fcmovnu
out
inc
lods
add
sbb
lds
and
mov
jne
decb
adc
or
test
fistpll
mov
push
jp
fdivrl
dec
xchg
cmpb
insl
lret
jle
fcomps
add
out
jbe
mov
xchg
mov
sub
ja
mov
out
xchg
mov
nop
loope
cmp
cmpb
xor
test
lahf
mov
leave
mov
xlat
repz
xor
mov
lcall
addl
gs
sbb
hlt
shlb
testl
aad
outsl
in
pop
mov
test
les
jg
push
mov
in
mov
imull
cwtl
std
repz
inc
add
mov
popa
and
xchg
ja
mov
xchg
xchg
cmp
into
dec
push
pusha
pushf
loope
fwait
xor
pop
rorb
int
into
fiadds
pusha
mov
add
call
push
xlat
jge
arpl
jne
ljmp
push
movb
inc
jg
std
mov
in
lods
sub
cmp
mov
inc
sub
jl
sbb
lea
imul
cs
mov
lea
sbbb
add
pop
jns
pop
jne
cmp
clc
pop
mov
pop
pop
icebp
icebp
inc
int3
inc
shrb
push
repz
insl
push
mov
call
lods
in
xchg
sub
sti
jl
lcall
test
in
loope
xchg
enter
push
lods
lret
pop
in
lock
or
adc
pop
cmp
addl
mov
jp
jecxz
push
xchg
mov
mov
mov
sub
sti
imul
out
das
lret
xchg
mov
and
in
hlt
sub
inc
mov
dec
xchg
add
pop
mov
dec
out
mov
mov
lcall
or
xor
fdiv
and
dec
addr16
xor
dec
push
add
arpl
mov
pop
pushf
xor
aas
insl
jne
dec
ds
add
push
or
dec
loope
push
sub
adc
push
outsl
hlt
dec
bound
or
js
sti
mov
add
in
add
cmp
mov
xor
jb
xor
mov
mov
cwtl
sub
sahf
mov
pop
xor
cltd
outsb
sahf
mov
aam
fstl
xchg
mov
ss
lret
inc
sub
jecxz
stos
sbb
popa
mov
xorb
pop
dec
or
dec
js
addr16
xor
mov
pop
in
mov
jne
cmc
cld
cltd
movsl
pusha
inc
or
scas
dec
dec
jmp
mov
lds
push
call
std
jno
mov
hlt
test
mov
pop
mov
into
jne
popa
push
adcl
gs
or
inc
jmp
sbb
std
hlt
cmpsl
imul
inc
lock
addb
out
mov
lods
mov
dec
fisubl
push
stos
adc
add
adc
in
sbb
cmc
adc
jne
icebp
mov
xchg
fsub
jno
xchg
mov
or
notl
cmp
cmc
test
or
jl
dec
push
xchg
adc
adc
neg
dec
jmp
jbe
imul
aaa
arpl
add
insb
add
pop
mov
cmp
cwtl
idiv
xchg
dec
xchg
js
cltd
pop
addr16
je
adcl
rcll
mov
cltd
xchg
xor
jnp
dec
add
or
dec
fs
mov
xchg
sub
push
dec
jmp
cmp
dec
test
sub
jne
mov
sbb
xchg
inc
lahf
insl
fldl
mov
dec
jnp
mov
and
lods
xlat
adc
xchg
les
rorb
clc
mov
xchg
in
addr16
rorl
mov
mov
sbb
add
insl
sub
pop
test
out
divl
adc
fucomi
fadds
add
adc
frstor
scas
xor
aad
mov
sub
ret
mov
clc
or
xor
cmp
mov
mov
pushf
mov
scas
lock
mov
addr16
std
ret
or
jmp
insb
mov
sbb
jle
aam
xchg
push
adc
or
inc
jo
fmull
cs
cmp
decl
pushf
mov
div
mov
push
pop
int
cmpsl
cmp
loop
adc
pop
inc
push
pop
adc
mov
mov
inc
xchg
insb
cmp
mov
adc
inc
adc
xchg
ljmp
icebp
sbb
jmp
notl
lds
push
mov
xchg
loopne
mov
scas
inc
push
inc
pop
mov
pop
sbb
mov
sub
fiaddl
subb
dec
inc
dec
stc
setne
or
pop
jl
pushf
test
or
jne
jnp
fld
movsl
lods
adc
lods
in
xor
sti
jp
rcrb
or
mov
fiaddl
xorl
loop
out
xor
lds
pop
int
push
fnstenv
fldl
mov
nop
sahf
pop
int3
xchg
jge
and
jns
pushf
fisttpll
loop
push
cwtl
sbb
es
in
cmpsb
test
jne
fisubs
and
pop
mov
dec
mov
dec
fildll
das
mov
gs
and
mov
movsl
ss
xor
scas
sbb
loope
out
das
cwtl
mov
pop
scas
sub
push
rcrb
sbb
insb
jne
push
leave
and
pop
stc
into
adc
mov
mov
in
andb
mov
cmpsb
cs
push
orb
outsb
hlt
jmp
icebp
push
cmpsl
fstl
pop
jb
push
cmp
pop
push
mov
xchg
cld
jns
pop
out
pop
mov
stos
pop
jne
cmp
ljmp
cmp
rcll
ret
pop
xor
mov
jecxz
xor
sahf
mov
clc
push
sbb
popa
and
std
jb
push
shrb
lods
mov
idivb
and
repnz
pop
pushl
in
lods
inc
pop
hlt
cltd
loopne
mov
push
stos
dec
mov
xchg
jmp
enter
dec
jge
adc
adc
insb
add
push
or
repnz
enter
loope
add
push
xchg
sub
push
add
std
sbb
arpl
in
cmp
aaa
sub
xchg
xchg
scas
dec
pop
sub
pop
into
pop
cmpsb
pushf
sub
and
push
add
cmp
xor
cmpsl
adcb
aad
jo
mov
ss
lret
or
jne
or
pop
or
fisubrs
mov
adc
xchg
pop
jnp
rcrl
adc
mov
pop
int3
insl
es
pop
adc
popa
sub
adc
nop
sbb
jne
fisubs
push
hlt
xor
mov
cmpl
daa
pop
jbe
mov
fcmovu
push
dec
mov
movsl
adc
stc
or
std
or
xchg
insl
cmpsb
mov
cmp
ffree
inc
aaa
and
mov
lods
jne
sub
clc
or
out
jp
lret
out
add
mov
sbb
lock
add
inc
xor
xchg
jp
dec
jmp
xchg
lods
mov
movsb
inc
lock
sbb
add
fildll
movsb
push
mov
pop
adc
loope
cli
enter
icebp
lds
jbe
cmc
jne
popa
mov
pop
pushf
pusha
add
ljmp
mov
fs
hlt
mov
lods
inc
sub
hlt
pop
lods
cmp
mov
mov
divb
mov
adc
imul
loop
sarb
fsubl
sub
push
outsb
pusha
in
pop
mov
test
in
sub
loope
add
mov
xor
or
enter
lods
mov
pop
pushl
inc
lds
jne
test
xchg
mov
or
adc
adc
dec
cmp
push
push
push
sbb
scas
clc
cld
jns
imul
mov
std
scas
cmpsb
cld
imul
cli
popf
jbe
idivb
cmp
repnz
std
xchg
inc
jl
push
mov
cwtl
stos
cmpsl
sub
sub
imul
fistpl
mov
aaa
push
jne
xor
andb
mov
adc
mov
ss
mov
sbb
xor
mov
rol
xchg
out
pop
mov
pop
test
imul
addb
mov
inc
and
xchg
scas
ror
mov
ficoms
adc
leave
sbb
dec
cld
mov
jne
mov
mov
push
decb
add
mov
mov
mov
sub
add
arpl
lahf
lret
mov
jge
imul
and
add
bnd
ljmp
stos
mov
cs
and
mov
xorb
dec
jmp
cwtl
mov
jg
xchg
jo
pop
loop
addb
jg
sub
mov
mov
idivb
imul
pusha
in
test
fcmovnu
or
sti
jecxz
jb
sahf
dec
jns
data16
jecxz
xor
pusha
add
mov
out
cltd
dec
pop
xchg
push
add
lret
cltd
cmp
cmc
test
cmpsl
sub
fnstenv
cmp
inc
jmp
pop
pop
dec
cld
ret
scas
xchg
enter
repnz
pushf
enter
ds
cmpsb
mov
push
lods
in
sbb
xchg
lahf
rcrb
nop
mov
bound
pop
or
sarl
movsb
or
push
clc
jnp
lret
mov
cmc
js
aam
xchg
dec
cs
push
ds
sub
jp
iret
rcr
inc
mov
lods
pop
out
xor
test
hlt
fidivs
test
jns
push
clc
imul
icebp
outsl
mov
xor
push
sbb
sub
fistpll
jge
xchg
jle
sbb
mov
push
add
or
shr
pop
inc
clc
inc
sarl
sbb
insb
daa
add
xor
cwtl
inc
sbb
filds
pop
dec
sbb
mov
mov
mov
leave
add
jmp
shlb
or
dec
mov
aam
cmp
lret
inc
rclb
push
popa
inc
sbb
test
sahf
es
adc
cmc
orl
es
push
push
arpl
sahf
mov
sbbl
sbb
ljmp
mov
aaa
adc
mov
stc
sub
pop
sahf
andl
xchg
dec
fisubl
out
movsb
sub
dec
test
adc
aaa
add
cmpsl
hlt
mull
jnp
nop
xchg
xor
test
add
push
fisttpll
mov
jbe
jp
lock
lea
jg
rorl
aad
insl
add
out
mov
inc
cmpsb
push
xchg
pop
hlt
dec
mov
je
nop
fwait
jo
test
lret
add
in
pop
lcall
adc
dec
sarb
out
sbb
add
pop
test
xor
xchg
mov
cmpl
scas
push
or
fistps
shrl
sbb
jle
and
out
or
pop
pop
adc
pop
xchg
pop
xchg
xor
and
fistl
aam
push
add
sarb
and
hlt
xchg
mov
sbb
or
sub
int
mov
jmp
jo
dec
mov
or
unpckhps
jp
movsl
and
jb
pop
cmp
xchg
mul
jecxz
pop
in
xchg
dec
scas
and
sahf
xchg
mull
aaa
mov
cwtl
sub
xchg
sahf
jne
cltd
leave
les
inc
sarb
rorb
es
ljmp
add
push
mov
mov
ljmp
adc
mov
hlt
pusha
and
ljmp
adc
sub
std
arpl
mov
xorb
push
xor
or
loopne
repnz
cli
jbe
cld
in
pop
and
shll
xor
scas
ret
sub
sti
test
in
sub
loopne
jge
push
repnz
cmp
pop
sbb
sub
or
fsubl
pop
or
mov
aad
scas
test
jbe
mov
std
adc
dec
repz
mov
and
aaa
cs
xorl
incb
mov
mov
mov
add
mull
inc
mov
sub
and
push
jge
jno
mov
push
cwtl
jo
mov
rcrb
movlps
lahf
imul
pop
lock
xor
les
je
cmpsb
movsb
add
imul
mov
sub
inc
rcrb
xchg
bound
push
hlt
pop
hlt
push
or
dec
loop
sbb
leave
xchg
push
mov
pop
cmc
sti
movsw
loopne
inc
call
mov
rorb
add
bound
leave
out
mov
mov
sti
call
aam
adc
inc
in
test
adc
cmp
daa
push
mov
jne
push
repz
sub
popf
xlat
sbb
lret
mov
inc
leave
lock
dec
fsts
jl
es
cmpsb
inc
xor
mov
dec
xchg
sub
push
clc
inc
mov
xor
lret
pand
xor
mov
std
dec
mov
dec
aam
leave
cs
inc
mov
push
test
loop
leave
xchg
lds
sub
les
lock
icebp
dec
nop
add
inc
aas
hlt
leave
inc
imul
xor
jne
aaa
fidivrl
xchg
inc
loopne
sbb
cmp
jg
gs
jns
or
pop
jbe
inc
dec
xor
or
dec
insl
dec
push
ljmp
lods
and
inc
dec
mov
lcall
in
stc
fistpll
shrb
les
and
add
push
cwtl
aad
pop
adcl
mov
mov
ljmp
hlt
test
add
jne
shll
cmpsl
mov
in
push
int3
aam
aam
fcompl
xlat
push
lods
stc
cmc
arpl
jp
push
xchg
pop
cmp
rclb
xor
stc
nop
or
xlat
dec
jge
cmc
cmp
add
hlt
out
ljmp
movsl
mov
pop
add
or
fdiv
xchg
mov
andl
js
mov
jne
xchg
pop
mov
les
sub
push
xor
pop
popf
xchg
hlt
inc
inc
cmpb
jne
cld
and
lret
rolb
cs
das
adc
out
aam
movsb
sub
sbb
xor
cmp
and
jmp
pusha
subb
push
xchg
cmp
jbe
push
or
fwait
stc
sub
lahf
push
icebp
jge
insb
dec
push
mov
xchg
hlt
mov
lcall
cmp
jmp
push
stos
sbb
int
movsb
mov
push
aas
jno
sbb
lea
mov
inc
cmpsb
or
sarb
or
enter
test
into
xchg
mov
cli
push
arpl
sbb
xchg
fxch
cld
push
ja
insl
loop
xor
imulb
jecxz
add
shlb
in
pop
push
sbb
stc
cmp
lods
sub
jge
sub
pushf
hlt
cwtl
lock
sbb
mov
xor
jp
add
scas
add
ret
inc
hlt
icebp
lret
fstpl
mov
xchg
sub
xchg
rorl
roll
out
ds
das
hlt
sub
sbb
insl
inc
xlat
rcll
lea
mov
sub
xchg
mov
jbe
fsubs
jg
repnz
xor
int3
sahf
mov
rcll
or
out
xor
and
hlt
jl
push
cmpl
mov
xchg
pop
cmpb
fisttpl
push
jl
imul
pop
xchg
cli
mov
xor
jns
mulb
pop
and
outsl
push
repnz
mov
pop
adc
adc
std
push
inc
jecxz
outsl
cld
inc
add
adc
adc
repnz
pop
jp
shlb
fs
mov
push
sbb
mov
push
pop
repz
loop
je
jnp
cmp
cmpsl
inc
adc
stc
sbb
clc
mov
or
shl
jns
loopne
repnz
popf
push
test
stos
or
js
mov
std
outsl
jle
dec
stos
cmp
hlt
shr
cltd
adc
xlat
xor
mov
jg
inc
jb
daa
icebp
mov
enter
mov
push
ficoms
pop
inc
xor
adcl
stos
loop
push
aad
punpcklbw
pop
push
xchg
xchg
cmc
xor
add
ljmp
adc
cmpsb
add
and
out
mov
jl
jl
mov
js
adc
sub
and
clc
xchg
push
sbb
push
testb
dec
sbb
imull
jns
pop
jns
popf
cmpsl
std
scas
rorb
add
test
add
aad
or
or
push
gs
xchg
stc
lret
faddl
push
lahf
leave
pop
insb
mov
or
lcall
ret
aam
mov
or
cmpsl
movb
fwait
xchg
bound
cld
imul
shll
xchg
and
int
js
test
xchg
inc
iret
add
stos
mov
and
xchg
mov
mov
pop
jo
and
lods
les
adc
stos
mov
pop
popa
repnz
stc
xorl
xor
sbb
sarl
cmc
and
inc
mov
cmpsb
repnz
fisttpll
push
loope
mov
loopne
sbb
hlt
sbbb
rcll
cmp
int
add
dec
xchg
stos
hlt
mov
shll
scas
lds
push
sbbb
xorb
sbb
inc
adc
repnz
mov
push
pop
push
ret
les
push
pop
stos
jns
scas
inc
mov
mov
call
pushf
mov
shl
dec
aad
mov
cmp
fldcw
mov
pop
pop
outsb
jl
aad
sub
stos
jo
jne
sub
adc
pop
aas
leave
outsb
xor
xor
xlat
test
xor
push
sub
ss
cmp
mov
dec
jge
enter
pop
cs
dec
test
mov
das
mov
mov
test
lock
push
inc
pop
mov
jnp
iret
int
adc
fnsave
push
mov
xchg
jnp
jmp
dec
sbb
jp
xchg
mov
sti
and
dec
cmc
insl
stc
testb
rolb
imul
sub
cmp
sti
add
cld
incb
int
sbb
lret
notl
scas
push
add
cli
in
dec
loop
pushf
sub
in
cwtl
lcall
out
adc
sar
pop
imul
xor
imul
fs
addb
enter
hlt
cmc
fistpl
dec
adc
es
push
cmp
fcoml
cmp
jecxz
mov
mov
push
mov
pop
xchg
enter
fistpl
jg
ret
xor
adc
cmpsb
sub
jmp
cmp
test
pop
in
das
mov
inc
adc
pop
lods
xor
scas
mov
lock
and
sub
icebp
in
and
loop
mov
ret
andl
mov
push
enter
mov
fnstsw
hlt
push
add
inc
and
xor
loopne
loope
int
pop
in
pop
push
fstp
inc
adc
shll
adc
ret
xor
aas
xchg
xlat
add
inc
arpl
xchg
mov
add
sub
out
jmp
ret
faddl
xchg
xor
pusha
movhps
stc
pop
pop
arpl
js
jne
in
mov
sub
sbb
test
xor
xchg
dec
adc
cld
mov
ret
push
js
stos
lahf
icebp
popf
insb
push
ret
add
divb
cmpsl
pop
add
xchg
std
pushf
lret
hlt
sbb
aad
or
or
icebp
pop
shl
loope
cmp
mov
in
test
push
clc
adc
dec
je
adcl
or
mov
inc
jbe
mov
testl
into
mov
push
push
hlt
jge
mov
std
test
push
sub
mov
cmp
leave
cmp
and
les
mov
sbb
enter
xor
cmpsb
cwtl
nop
mov
mov
scas
or
dec
sub
cmc
cmp
inc
int3
mov
imul
ds
mov
pushf
cmp
test
fstl
adc
mov
mov
push
add
imul
inc
mov
daa
mov
cld
pop
jl
stos
jne
gs
add
mov
loopne
or
push
fsubrp
fists
and
pop
lods
andl
adc
test
mov
ljmp
arpl
mov
mov
into
xor
aad
icebp
xchg
or
imul
lret
sbb
cmc
jge
mov
adcb
dec
or
in
imull
mov
sub
popf
inc
pushf
ret
push
loop
fstpl
xchg
test
add
insb
cmp
clc
test
add
repz
adc
ljmp
js
hlt
pop
mov
fsubl
mov
jg,pn
mov
push
add
jecxz
push
mov
pushf
popa
cmp
xchg
std
sbb
loopne
ja
jecxz
imul
mov
jno
add
les
mov
adc
pushf
inc
jne
sahf
xchg
sbb
pop
push
scas
sti
push
mov
inc
loope
in
rorb
test
inc
lods
push
cmp
xchg
adc
fnstenv
jecxz
dec
pop
das
pop
cmp
jl
out
add
push
or
pop
jg
sarl
adc
rcrl
push
scas
scas
loop
cltd
test
xchg
sub
inc
dec
out
lds
aaa
jno
lahf
inc
stos
popa
jne
lods
es
gs
shlb
dec
loope
inc
inc
out
xchg
mov
push
push
in
inc
scas
out
lret
inc
shl
inc
leave
mov
pusha
dec
jge
fbstp
nop
xchg
jne
xor
mov
outsb
outsl
inc
xor
sub
cmp
push
cmc
cmpsl
pop
cmp
icebp
data16
lock
jno
sbb
mov
cs
mov
addb
arpl
cwtl
into
inc
popa
mov
scas
fcmovnbe
fisubrl
loop
jmp
loop
pop
rcrb
pop
in
cmp
loope
mov
loope
lcall
sahf
addr16
mov
popa
bound
mov
insb
popa
test
xchg
sub
test
dec
dec
aas
or
mov
shr
movsl
jmp
scas
sbb
cmc
jl
and
push
xchg
addr16
sbb
pop
xor
repz
sarl
dec
push
dec
mov
push
mov
jne
loopne
cld
jbe
fcmove
dec
jo
and
fwait
pop
pop
imull
dec
xor
mov
sarl
dec
imul
sub
and
adc
push
imul
movsl
mov
xor
cld
add
insb
popa
dec
loope
and
sub
cs
cld
mov
mov
pop
lahf
or
sub
pusha
xchg
in
mov
adc
xchg
dec
test
js
xor
sbb
ja
cs
jns
clc
cmp
xchg
mov
ljmp
xlat
mov
dec
ret
js
pop
into
pop
in
and
out
inc
or
push
lods
sbb
inc
cmc
mov
testl
mov
cwtl
sub
jne
dec
loop
add
test
pop
mov
xchg
add
imul
addl
idiv
xor
mov
test
add
shlb
mov
in
or
pop
mov
jnp
jae
push
add
mov
enter
test
sub
mov
into
popl
jo
je
adc
mov
mov
jg
shll
cli
jae
hlt
pop
lret
fdivrl
cmp
jge
mov
xchg
hlt
mov
sti
cmp
test
lods
outsl
jecxz
pop
mov
xor
test
addr16
sahf
outsb
cs
mov
push
xchg
shlb
push
push
inc
or
call
cmpsb
xor
scas
ret
cwtl
enter
leave
pop
test
lock
les
cmc
xor
add
aaa
jbe
or
jge
xchg
mov
jns
test
pop
jae
pop
stos
outsl
jns
and
adc
and
mov
sub
cs
fdivrl
fwait
incl
lahf
pop
lods
lock
dec
in
in
filds
mov
das
outsl
mov
dec
orl
shrb
into
enter
addr16
sahf
data16
ss
add
jne
adcl
cltd
add
mov
dec
dec
push
pop
xchg
xchg
clc
cmpsb
push
shlb
test
cmp
mov
jmp
push
mov
addr16
push
mov
mov
xor
fdivrl
jp
das
mov
sub
sbb
jmp
ficomps
test
popa
les
mov
mov
mov
int3
pop
adc
gs
xchg
rcll
lods
xchg
mov
int3
jle
subb
nop
sbb
cmp
sbb
and
jp
mov
jo
push
je
mov
fistps
mov
les
int
jg
ret
enter
movsl
add
lret
cmpb
les
mov
cmpl
popf
rcrb
test
inc
adc
jp
sbb
add
in
out
xlat
int3
adc
test
dec
out
xor
shrl
in
out
and
xchg
push
mov
or
lds
pushf
mov
mov
clc
lea
inc
loopne
pop
mov
xbegin
dec
popf
jne
mov
aad
outsb
adc
mov
sbbb
hlt
xchg
jo
dec
cmc
sub
stos
loop
jl
xor
out
adc
mov
out
xchg
mov
inc
pop
in
out
xorb
leave
gs
fisubl
and
sub
inc
add
adc
mov
add
in
jb
jl
lcall
inc
add
fcomps
mov
loopne
jne
pop
jmp
adcl
mov
sahf
hlt
xchg
push
subl
mov
push
ljmp
cmc
fdivl
inc
shl
nop
repz
cmp
and
mov
sarl
popf
mov
xchg
sbb
sub
lds
and
inc
dec
cli
jne
jg
push
ss
repnz
les
clc
mov
push
cmp
movsb
pop
cmc
insb
sub
loopne
xchg
mov
scas
push
push
gs
add
cmpl
xor
enter
pusha
call
jp
add
imul
sub
mov
sbb
push
add
xor
cltd
daa
sub
outsl
out
pop
js
notl
out
mov
movb
ja
xchg
dec
jne
xchg
aas
test
sub
roll
inc
mov
aam
inc
movsl
push
std
inc
mov
repz
adc
pop
mov
nop
pop
push
pop
or
dec
ret
and
add
repz
les
dec
dec
mov
or
mov
jae
sbb
xchg
add
cs
roll
xchg
jle
stc
addr16
stos
lods
lret
inc
push
icebp
std
aas
pop
mov
push
mov
xor
pusha
movsb
out
add
pusha
mov
mov
push
or
jmp
scas
dec
je
inc
push
mov
xchg
gs
cmp
outsb
cltd
inc
js
add
or
mov
pop
dec
pop
outsb
and
jg
push
pop
mov
ret
cmp
jne
in
xchg
stc
sbb
notb
dec
ret
aam
iret
or
xor
pusha
mov
mov
mov
aas
rcrb
ds
xlat
outsl
fwait
cmp
cmp
cmp
pop
dec
inc
xchg
adc
sbb
dec
jne
jb
popf
ja
inc
js
xor
or
jno
popf
jbe
into
jne
adc
cmpl
xchg
mov
rorb
ficomps
pop
rcrb
cmp
xchg
xchg
adc
nop
negb
movhps
add
rolb
dec
mov
lea
mov
and
stc
ret
lock
fdivrs
dec
enter
fnstsw
fwait
shrb
inc
call
sbb
pop
sub
xchg
pop
fcompl
fmuls
js
jg
fistl
clc
cmp
add
movsl
xor
pop
mov
cltd
adc
aas
mov
popf
std
fwait
hlt
inc
hlt
mov
xor
lret
mov
int3
mov
rolb
mov
fndisi(8087
inc
shll
loop
inc
cmp
mov
xchg
sbb
test
aas
leave
scas
nop
xlat
xchg
mov
sub
cmp
cmp
and
mov
mov
pop
es
mov
mov
cmp
adc
lock
cli
fsubl
fadds
hlt
mov
addr16
xor
icebp
mov
clc
leave
js
clc
mov
test
adc
fwait
inc
fst
or
test
xor
incl
mov
push
out
cwtl
adc
jp
mov
jmp
add
pop
mov
push
dec
jne
daa
mov
lods
or
mov
jo
pushf
mov
les
xchg
xchg
movsb
sub
rep
and
andb
inc
sti
int3
dec
sti
fadds
les
lret
push
dec
or
test
jnp
and
js
xorl
shr
jne
leave
pop
shll
mov
jg
sbb
cmpsb
rolb
add
and
sub
mov
mov
cmp
cmpsb
inc
pop
sub
xchg
rolb
inc
push
cli
fdivs
lahf
out
js
dec
mov
cmpsb
xorb
xchg
movsl
jle
inc
mov
adc
mov
jmp
or
hlt
mov
xchg
add
imull
mov
arpl
mov
mov
lods
or
movsl
jns
sbb
lds
or
inc
fsubp
popa
call
lret
les
fidivrl
jne
fsubrl
xchg
jb
das
repz
out
call
pop
mov
pop
cld
mov
enter
cmp
ret
pop
in
movsl
into
pop
cmp
hlt
aad
adc
enter
xor
stc
mov
mov
cltd
es
test
jne
ret
inc
ret
or
inc
das
mov
add
cld
les
fcoml
jnp
fldt
xchg
and
out
lcall
shll
or
jno
cmp
imul
repnz
mov
xor
popf
adc
cld
dec
mov
je
pusha
xchg
sub
orb
sub
cltd
xchg
xchg
shrb
fstl
mov
xchg
push
cmpsl
into
sbb
out
nop
mov
fadds
push
scas
mov
sub
aam
cmpb
rorl
clc
movsl
test
dec
rclb
leave
outsl
scas
outsb
sarl
scas
xor
test
dec
adc
adcb
or
mov
sub
adc
cmp
js
loop
mov
call
jae
mov
rcrl
jle
pop
nop
mov
pop
and
sub
fildll
call
test
pop
mov
adc
repnz
inc
dec
fsubs
testb
mov
add
xlat
push
sub
invd
pop
ror
jb
xchg
jae
enter
std
jge
fcmovnb
dec
xchg
das
jg
mov
ffree
or
sub
jbe
pop
popa
fadd
dec
jnp
dec
icebp
aam
push
sbb
xchg
add
inc
andb
fwait
push
insb
mov
test
mov
rolb
stc
shrl
lock
pusha
mov
fisubl
lcall
jl
or
mov
nop
jne
pop
mov
imulb
pop
insl
jecxz
call
jbe
jmp
cli
dec
jne
pop
dec
test
inc
lret
ja
lods
or
addr16
cs
pusha
sbb
lods
insb
into
pushf
inc
cmpsb
call
jb
fstpl
rorb
pop
or
add
rcl
sbb
aas
lea
fimuls
jnp
adc
mov
js
xor
mov
and
jecxz
and
mov
xchg
movsb
stc
xor
and
lds
add
test
inc
xlat
aas
dec
div
dec
mov
add
jne
cmpsb
rol
jg
and
cmp
sub
test
xor
xor
jg
lret
hlt
xlat
and
push
lret
mov
pop
arpl
leave
cwtl
jb
mov
ds
or
mov
addl
notl
pop
jno
or
adc
pusha
add
pop
clc
pop
icebp
xor
mov
loope
mov
mov
movsl
stos
mov
cmp
into
insb
insl
insb
aad
movsl
stos
sti
dec
xor
mov
jmp
dec
cli
or
loope
cmpsb
test
mov
pusha
cmp
jmp
cld
inc
jecxz
rorb
addl
mov
push
movsb
shl
cmpsl
pop
icebp
mov
pop
call
sarb
sub
jae
les
pop
pop
lock
idivl
neg
addl
lret
aas
adc
sub
fstl
xlat
lods
sarb
mov
lret
lds
lcall
out
inc
cwtl
mov
sbb
jno
sbb
clc
pusha
fsts
ja
inc
test
int
sub
andl
mov
xchg
popf
das
pop
jp
xchg
inc
movsl
cwtl
mov
dec
gs
xor
popa
inc
sahf
xchg
fimuls
fidivrl
inc
sahf
movsl
and
cli
pop
jbe
movsb
or
add
fsubl
ja
xchg
add
aaa
pop
jb
cmp
imul
stos
movsl
mov
lods
shlb
stos
hlt
add
mov
and
mov
mov
xchg
push
clc
loop
sbb
stos
push
les
mov
add
jmp
push
pusha
mov
popa
jne
cmc
mov
aas
or
orl
jge
leave
xor
notb
es
in
in
enter
movsl
test
sub
hlt
or
jg
pop
hlt
add
and
mov
jg
int
or
les
pop
test
lret
addl
jo
fstpl
cmp
dec
inc
fadds
fdivp
shll
ja
ja
mov
cmpsb
inc
jp
out
push
insl
jle
push
cwtl
push
xchg
loop
and
add
inc
fcomps
jne
sub
xchg
int3
xchg
pop
jae
pop
out
mov
dec
sbb
dec
mov
ret
jne
movsl
mov
pop
jle
fimuls
aam
dec
adc
lock
jne
lods
clc
jb
lea
xlat
arpl
loope
xor
imul
add
or
pop
sub
loop
fdivrl
ljmp
mov
mov
lahf
lods
mov
mov
push
imul
xchg
sub
ds
ds
enter
sbb
repz
sahf
arpl
xchg
movl
mov
mov
add
inc
jns
xorb
ja
or
mov
movsl
cmpsl
inc
pop
fbld
push
arpl
cld
popf
xor
aas
cld
pop
pusha
pop
fidivs
jnp
add
out
wrmsr
outsl
xor
mov
ret
push
adc
jnp
sbb
lahf
pop
imul
cwtl
mov
push
jne
push
js
jecxz
lods
inc
jb
andl
cmp
mov
sbb
loop
cmc
repz
hlt
or
mov
xlat
pop
mov
mov
lds
mov
mov
mov
mov
push
ret
enter
jle
or
sub
dec
cmpsl
pusha
and
stc
imul
icebp
jge
inc
cs
sub
test
dec
gs
cmpb
lds
orl
mov
cmpsl
enter
hlt
icebp
nop
dec
clc
andb
cmp
pushf
cmp
or
jne
rolb
xor
je
xorl
inc
add
clc
lods
movsb
std
aaa
sbb
add
enter
dec
sbb
adc
jo
shlb
lret
cmovo
mov
xor
xor
std
sub
leave
rcrb
mov
cld
sub
lods
or
subl
addr16
push
push
mov
bnd
pandn
adc
bound
pop
dec
push
push
jo
jne
aas
es
adc
sarl
xor
push
out
jns,pt
cmp
std
xchg
push
xchg
mov
inc
add
sub
adc
mov
in
mov
jne
sbb
jne
jl
sbb
cmp
faddl
inc
and
sub
outsl
leave
mov
xor
out
cmp
scas
or
push
testl
lret
push
adc
jae
inc
test
inc
pop
rclb
inc
shlb
inc
sbbl
dec
dec
in
leave
pop
cwtl
jnp
and
or
push
mov
pusha
cmp
push
or
subl
fiadds
es
inc
outsl
rcpps
aas
loop
dec
jne
out
std
cmpsb
insl
pusha
iret
lea
addl
dec
leave
enter
flds
cmp
push
sub
sub
mov
pop
lods
sbb
nop
in
fucomi
les
test
inc
hlt
mov
push
inc
adc
xchg
imul
mov
or
rorb
inc
mov
inc
push
outsb
sbb
add
add
shl
cmp
out
xorl
sub
dec
popa
ret
test
pop
mov
orb
or
jns
pop
jmp
lahf
jle
dec
push
xchg
xchg
test
jge
popa
addb
mov
cltd
mov
lea
into
jno
mov
test
and
popf
aam
and
adc
jmp
popa
sub
and
mov
inc
cmpsb
shll
loop
cli
push
in
in
xchg
mov
gs
mov
xor
call
inc
or
adc
loopne
sub
mov
mov
adc
inc
mov
jo
mov
and
cmc
out
in
sti
lods
jno
fldl2e
jns
inc
insl
mov
lods
push
jnp
pushf
cli
mov
sahf
mov
cld
pop
clc
inc
lods
nop
pop
and
test
lods
mov
pusha
out
cmp
enter
roll
sti
cmp
push
loop
mov
add
incl
cmp
and
mov
popf
adc
or
xor
and
sub
fdivr
sbb
aad
lret
dec
mov
push
in
out
dec
repz
mov
mov
adcb
loope
stos
shlb
fwait
dec
jmp
xor
mov
push
inc
mov
scas
pop
lcall
xchg
repz
imul
or
popa
push
aaa
cld
dec
or
mov
movsl
push
inc
add
jne
lds
shll
hlt
jo
push
mov
jnp
fdivrs
jne
dec
cld
pop
into
repz
push
daa
xor
adc
sbb
je
cmpsl
mov
call
movsl
addb
push
les
mov
scas
cmp
adc
dec
pop
xchg
jmp
es
sbb
lods
or
pop
mov
gs
popa
das
in
xlat
or
fldl
or
adc
xchg
fsubs
lods
test
adc
cmpsb
push
cmp
sub
pop
dec
xchg
xor
es
ret
test
sub
stc
xlat
xor
dec
lods
add
or
jecxz
jb
sub
sahf
cmc
mov
inc
mov
subl
add
ja
xchg
lods
das
stc
data16
outsl
cli
into
in
pop
or
movb
xchg
cmp
sbb
test
adc
imul
adc
in
add
loope
movsl
jno
aaa
mov
sahf
iret
mov
xchg
push
ret
mov
cmpsl
cmp
inc
fistps
xchg
mov
mov
mov
xor
hlt
rclb
andb
mov
pop
mov
and
imul
lcall
xchg
out
jge
test
sub
mov
inc
sbb
aad
pusha
mov
or
add
pop
test
and
xchg
subb
sub
fwait
es
cmp
sub
jp
shlb
stos
popa
out
js
jne
adc
nop
mov
push
enter
adc
adc
test
jno
cmp
push
in
stos
cwtl
int3
xchg
or
inc
fisubrl
xlat
inc
jbe
mov
xchg
pop
mov
lods
mov
push
jne
sbb
into
out
ret
lock
movsb
jnp
das
into
fstp
mov
test
ja
sub
and
fnsave
ss
lds
pop
jno
cli
xchg
enter
adc
stos
jb
push
push
jne
add
push
mov
push
jnp
loopne
xlat
inc
out
xchg
mov
mov
lods
repnz
shlb
push
mov
shl
insb
loopne
xchg
mov
ss
pop
test
push
loope
adc
mov
xor
mov
into
jb
xor
cld
or
jg
push
rolb
lret
mov
enter
mov
inc
inc
in
jo
sub
call
jb
shl
jnp
sbb
sbb
cmp
pop
cmp
inc
imul
cmp
mov
sets
addb
mov
push
cmp
stos
pop
sti
cmp
adc
sti
daa
pop
mov
int3
loop
xchg
add
xchg
mov
inc
jnp
outsl
test
inc
js
jmp
cltd
fdivrs
and
stos
mov
mov
movsb
lahf
test
bnd
xor
jne
jecxz
jle
push
scas
adc
mov
mov
inc
cmp
mov
pop
jo
shll
sti
add
sub
sub
xor
push
andl
mov
push
pushf
es
mov
lods
lret
in
add
mov
push
popf
test
or
outsb
fisttps
cmpsl
sbb
fisttps
gs
jmp
int
sarb
stc
add
repz
jnp
idivl
enter
sub
lods
stos
hlt
inc
call
jp
in
jg
fistpll
cld
sar
push
hlt
sti
shll
xchg
lret
loopne
aad
push
pop
inc
add
jp
adc
mov
inc
aas
jne
out
dec
orb
in
push
scas
sub
dec
jge
cmc
pusha
fcomp
pop
jecxz
dec
cs
popf
xchg
inc
lcall
cmpsb
in
adc
icebp
xorb
divb
cmc
mov
mov
mov
lcall
mov
mov
test
movntq
out
sub
icebp
or
inc
and
hlt
les
movsl
sbb
addr16
inc
push
repnz
sbb
sub
int
xchg
push
scas
mov
jne
fsts
push
cmp
cld
movsb
mov
jmp
mov
xor
ljmp
cmp
and
mov
sbb
nop
stos
pop
mov
gs
adc
sti
insb
dec
push
push
insb
nop
dec
mov
adc
pop
or
adc
jbe
subb
js
lret
xor
cli
mov
adc
cmc
xor
repz
hlt
push
repnz
into
js
pop
insl
imul
out
int
out
push
nop
push
push
mov
push
lock
mov
xchg
add
mov
pop
movsl
push
cmp
add
in
dec
jns
dec
push
outsb
pushf
or
xlat
nop
clc
cwtl
hlt
push
scas
test
sbb
xor
bound
or
clc
jne
js
xchg
dec
jnp
decl
and
xchg
pop
cld
jnp
mov
xchg
dec
pop
call
push
mov
movsl
rcrb
shlb
hlt
push
mov
mov
cli
dec
jnp
add
jbe
cld
das
stos
push
mov
je,pt
into
cltd
es
inc
dec
jb
sbb
daa
add
mov
test
mov
jb
xor
xchg
ss
aad
es
cmp
mov
jns
or
xor
jle
sbb
mov
pop
and
decl
inc
ljmp
adc
jl
imul
dec
dec
dec
mov
and
test
std
adc
mov
pop
stos
sub
cmp
in
popf
mov
xchg
mov
add
jle
jno
xchg
pop
mov
and
push
arpl
aas
gs
xchg
nop
mov
jne
daa
mov
test
mov
and
imul
push
inc
mov
loop
mov
cmp
xor
inc
std
orb
jge
pop
test
push
pusha
loopne
cmpsb
fsubl
mov
dec
repz
scas
loope
fnstenv
lcall
push
add
inc
js
and
sar
clc
orb
jne
jg
cli
jle
inc
mov
or
fmul
adc
mov
xorl
pop
mov
imul
sub
xchg
and
dec
jmp
mov
loope
inc
mov
out
inc
mov
inc
xchg
add
mov
stc
pushf
cmpsl
mov
mov
pop
mov
mov
jbe
dec
ds
loopne
leave
add
and
pusha
lcall
js
push
rcll
loope
arpl
pusha
iret
stos
or
cmc
fisubl
pusha
mov
or
jbe
adc
pop
cld
push
shl
test
lret
mov
ljmp
movsb
rcll
dec
popa
addr16
hlt
add
add
clc
or
xor
lock
fnsave
cwtl
ja
test
int
arpl
es
enter
cld
aas
mov
inc
jae
rclb
movsl
pop
inc
fadds
push
divl
push
add
inc
mov
test
push
loope
pushf
fildll
in
mov
test
flds
add
inc
or
add
daa
xchg
js
jmp
les
xchg
push
in
xchg
dec
leave
fisubs
sub
xchg
and
sbb
dec
add
sahf
mov
pop
cmpsl
mov
jne
jmp
add
pop
arpl
cmpl
out
xchg
addr16
sub
imul
mov
jnp
movsl
inc
jg
int3
in
mov
add
cmp
adc
mov
push
dec
cmp
frstor
add
sahf
inc
insb
rorb
sub
loope
jne
cmp
push
adc
push
clc
test
movl
cli
aaa
aad
out
jg
add
out
ss
mov
xabort
fcoms
dec
cmp
xchg
pop
ret
sbb
fsubp
or
push
rolb
insb
jge
jle
sahf
push
dec
rolb
sub
inc
jmp
rcrl
adc
dec
sub
mov
insl
jge
inc
inc
loopne
call
pop
push
movsb
dec
add
cmpsb
popa
dec
inc
mov
cld
aas
push
loop
xchg
xchg
add
mov
bound
shl
std
sbb
xorb
dec
inc
call
aad
test
es
loopne
shll
lret
cmp
int3
or
cmpsb
adc
lcall
inc
jecxz
inc
idivl
hlt
mov
fldcw
push
pusha
sub
imul
ljmp
dec
pushf
cwtl
stos
xchg
dec
dec
push
dec
fisubrs
mov
das
in
inc
imul
mov
jmp
arpl
test
mull
fisubrs
fs
xor
mov
stc
xchg
mov
mov
hlt
adc
aam
mov
mov
jmp
sbb
jo
mov
pop
mov
pop
inc
mov
or
mov
movsl
and
sbb
add
mov
cltd
inc
xchg
cld
jno
jno
pop
popf
cltd
in
shlb
gs
xor
pop
dec
dec
push
xor
xchg
dec
or
mov
mov
mov
sbb
iret
jnp
push
imull
sti
scas
xor
out
subl
in
jle
and
pop
andl
add
lcall
jge
mov
jl
xchg
popa
in
xchg
sbb
xorl
adc
pop
imul
jb
xor
cmc
adc
imul
push
sub
sbb
push
add
sub
cmp
in
jne
movsl
in
mov
sub
mov
or
push
les
xchg
or
add
lods
das
ror
gs
pop
nop
cld
sbb
pop
xchg
xor
push
addr16
mov
loope
je
or
inc
sub
inc
xchg
mov
into
mov
leave
and
les
addr16
call
xchg
inc
jg
arpl
or
pop
xchg
sub
xchg
mov
adcl
imul
pop
lods
add
add
mov
dec
or
leave
xor
add
or
mov
jno
xor
cmp
aad
xor
adc
loop
and
lods
and
loope
xlat
push
lods
pop
or
push
sub
adc
int3
and
cmpsl
pop
cmc
dec
bound
adc
out
or
icebp
cs
frstor
out
ficoms
clc
mov
cmp
movsl
inc
xchg
fsqrt
cmp
or
xlat
fwait
das
push
andl
lods
test
push
push
lods
pop
mov
hlt
pop
loope
stos
or
pushf
int3
lds
or
cmc
cmp
in
push
push
pop
adc
das
mov
test
jbe
adc
sub
xorl
fcoml
lret
loopne
arpl
mulb
sub
sti
sbb
add
xlat
shr
sub
xor
cmpsb
xchg
add
pusha
cli
xor
inc
lahf
leave
aam
xchg
aad
sbb
shl
dec
sti
insl
cmp
adc
insb
mov
cmc
push
xchg
jno
mov
mov
add
and
roll
push
mov
test
xlat
mov
mov
xor
xchg
push
push
mov
pop
nop
call
push
hlt
movsl
mov
mov
fbstp
and
ffree
sbb
lock
imul
xchg
push
mov
ds
std
xchg
sbb
lret
pushf
pusha
jmp
std
fcompl
scas
std
outsb
mov
xor
les
int
mov
xor
and
sub
mov
das
dec
jb
lods
push
fsts
andl
inc
and
loope
in
mov
insl
push
adc
leave
pusha
add
test
insl
jno
cmpsb
sub
lock
mov
jne
mov
nop
mov
leave
inc
add
push
idivb
repz
sub
mov
fsub
lods
rcr
push
push
icebp
inc
add
aad
jge
in
mov
adc
and
mov
and
xor
pop
inc
pop
call
subb
enter
out
xor
push
adc
in
inc
mov
jle,pn
jle
inc
movsl
sub
jns
hlt
xchg
mov
outsb
pop
nop
jle
lods
pop
cli
xor
cmp
mov
cwtl
bound
cmp
popf
dec
insl
add
lcall
sub
cmp
pop
leave
nop
or
nop
and
jle
cltd
dec
stos
sub
into
test
cmpsl
scas
out
cmc
stos
push
sbb
jo
test
push
call
xor
std
pop
sub
std
gs
sahf
jno
inc
fsts
lock
stos
es
inc
pop
pop
sahf
mov
les
and
jle
pop
mov
xorb
test
jne
out
imul
cli
or
lret
add
fnstenv
jp
xlat
sub
inc
push
inc
inc
push
xor
out
xor
inc
xchg
push
xor
sti
jne
mov
popa
fs
in
push
push
scas
and
add
negl
ret
pop
xor
mov
xchg
cmp
sub
repz
push
loop
pop
mov
inc
mov
adc
data16
push
js
mov
cmp
test
pusha
mov
and
jmp
cli
hlt
pop
mov
mov
hlt
pop
mov
push
mov
jmp
jne
jl
mov
inc
mov
xchg
or
sbb
cld
mov
negb
cmc
hlt
enter
xchg
scas
add
dec
pop
cs
xchg
ret
mov
hlt
xchg
bound
std
mov
add
cli
scas
push
xchg
xchg
inc
or
push
lock
decb
adc
bound
mov
xchg
cmp
ljmp
mov
jns
sbb
push
cwtl
push
mov
sub
and
imul
iret
in
push
jmp
loopne
inc
imul
inc
sbb
xchg
inc
in
nop
xchg
enter
jne
dec
jbe
jne
subl
test
inc
pusha
mov
push
add
repnz
mov
movsb
xchg
frstor
dec
fmull
dec
out
pop
mov
xor
xor
cwtl
sbb
push
fs
pusha
call
adc
pop
xchg
lock
ja
enter
loopne
mov
xchg
icebp
mov
jns
clc
adc
xlat
jae
jnp
mov
mov
lret
ss
fstps
lds
fisttpll
xor
nop
or
jbe
mov
cmp
xchg
aaa
or
insl
pop
push
sbb
mov
lock
add
insb
and
popf
lret
insl
loop
xchg
lods
fwait
cmp
fdiv
mov
or
or
int
mov
test
mov
test
jo
ljmp
sub
xor
or
rclb
dec
xchg
add
das
jle
add
lds
cbtw
aas
hlt
adc
or
call
xchg
xor
add
dec
arpl
andb
sbb
mov
fisttpll
or
movsb
mov
adc
js
cld
cmpsb
dec
in
xor
repz
test
mov
mov
roll
cs
jne
pop
mov
pop
loop
lret
jae
mov
enter
std
dec
ljmp
outsl
jns
xchg
fnstcw
jae
aas
xlat
fucompp
mov
sub
ljmp
and
aad
stos
roll
xor
sub
icebp
xor
add
in
jns
mov
les
or
adc
xor
loopne
or
or
pop
xchg
adcb
xorl
pop
ret
jp
sub
frstor
cmp
insb
adc
push
jp
mov
sbb
test
dec
lods
adc
mov
ret
dec
in
lret
jbe
cmc
or
sbb
cmp
divb
cld
mov
fdivs
xorl
hlt
mov
jge
fmulp
and
push
mov
in
mov
mov
in
sub
jge
sbb
ljmp
jno
daa
cmpl
hlt
inc
mov
mov
imul
xor
fwait
jle
in
push
arpl
jp
sbb
pusha
loopne
cltd
test
sub
mov
push
aad
das
xor
div
fs
mov
adc
mov
in
orb
hlt
scas
mov
jnp
cmp
inc
icebp
xchg
popa
jne
lret
cmp
cmovno
sub
mov
jp
pop
iret
or
nop
mov
shll
test
add
mov
add
dec
cli
sub
fidivl
xchg
stc
xor
popa
bound
sar
arpl
sub
imul
cmpsb
mov
dec
loopne
cmp
lods
enter
mov
mov
xor
xchg
je
pop
rcrb
test
jne
jmp
inc
mov
mov
and
xor
mov
xchg
mov
mov
imul
adc
vcmpps
jnp
cmpsb
mov
enter
icebp
ja
pop
mov
sub
cs
cld
and
loopne
out
mov
dec
push
jo
mov
inc
jp
sarl
icebp
out
xor
mov
push
mov
lock
cs
xchg
lret
cld
js
jne
orb
sub
cmp
dec
mov
push
js
or
inc
adc
add
outsl
loopne
lcall
dec
mov
mov
jle
addb
testb
pop
inc
cmpsb
cmp
mov
push
nop
test
mov
xorl
insl
sbb
jle
shl
inc
push
bound
cmpsl
lods
jle
mov
xor
int3
xchg
dec
jbe
cwtl
sub
rcll
andb
jne
ds
das
aam
pop
add
mov
sub
xchg
repz
call
jl
jmp
pushf
mov
repz
xor
push
je
mov
ja
mov
sub
sti
pop
adc
outsl
mov
into
sub
inc
test
shlb
xchg
pusha
xchg
jg
push
and
push
dec
mov
movsl
dec
cmc
movb
js
in
hlt
mov
pop
inc
imul
movsl
pusha
mov
mov
aad
jne
xchg
mov
pop
sub
push
adc
or
xchg
jo
inc
inc
je
xchg
jge
loope
bound
or
stos
push
pop
mov
push
cltd
mov
cli
adc
stc
sub
cltd
push
jl
int
ljmp
ss
or
xchg
and
test
ss
nop
push
cs
jg
jne,pt
and
enter
lcall
aaa
sbb
lock
sub
loopne
mov
jle
roll
xor
push
sti
add
rep
sbb
in
xchg
dec
sub
push
mov
jo
popf
das
mov
inc
hlt
inc
out
pop
inc
jnp
inc
mov
and
out
add
jns
push
testb
and
jp
sti
xchg
add
outsb
hlt
pop
push
adc
ljmp
pop
mov
fcom
xchg
movsl
mov
arpl
dec
mov
movsl
and
roll
imul
jae
nop
jl
dec
cmpsb
repnz
into
mov
push
test
fsubrs
mov
inc
shll
out
cld
adc
arpl
mov
adc
xchg
xchg
test
rcl
test
push
clc
or
xor
out
dec
sbb
out
in
push
pop
enter
fs
shlb
outsl
js
and
in
arpl
push
push
sti
filds
and
nop
mov
jnp
in
repnz
popa
iret
lods
fisubrl
fs
push
mov
xorb
mov
ss
andl
int
sub
lock
es
aad
cmp
push
neg
cmp
and
leave
out
ret
pop
enter
mov
fbstp
loopne
pusha
aam
out
gs
jmp
repz
lods
xchg
fistpl
mov
mov
gs
mov
hlt
jno
or
cmp
out
sarb
cli
lahf
sub
das
mov
sbb
aas
shl
jns
lds
gs
cmpsb
lods
inc
mov
mov
add
shlb
clc
hlt
rclb
mov
test
inc
loop
sbb
push
sbb
push
xor
dec
jne
inc
lret
jecxz
sahf
push
sahf
aaa
cmpsb
push
testl
pop
mov
stos
jne
pop
int
mov
mov
pop
mov
dec
mov
adc
push
in
add
sub
cmpsb
stos
adcb
push
loopne
pop
movsl
incb
ja
xchg
push
lahf
cmpsl
popa
mov
lock
sub
lods
mov
dec
cmp
out
sbb
pusha
xor
mov
lret
les
sahf
dec
sub
dec
mov
pop
out
pop
xor
or
adc
mov
movsb
inc
pop
xorl
insl
loope
loop
or
pusha
data16
and
mov
push
add
fistpll
or
lret
or
loopne
pop
outsl
addr16
hlt
jae
mov
ret
xlat
lret
sub
push
scas
hlt
inc
shl
popf
or
out
xorb
push
push
sahf
jg
in
mov
mov
mov
scas
dec
sub
cwtl
xor
shl
lods
out
aad
sub
rcrl
jo
adcl
int
add
daa
jns
add
push
mov
push
pop
std
mov
in
mov
dec
loop
inc
ret
push
clc
xor
scas
test
sbb
or
mov
inc
push
dec
es
dec
cmp
cmp
in
pop
adc
popf
lock
pop
jno
cmp
sbb
out
add
xchg
add
js
mov
movsl
shr
dec
ficoms
pop
andb
hlt
push
jecxz
js
lods
jp
pop
addr16
xchg
aas
xchg
cwtl
sub
or
ja
fcompl
jo
js
in
inc
dec
dec
and
add
jge
jle
push
jge
inc
mov
outsl
jae
xor
adc
cwtl
inc
orb
rcl
insl
adc
lds
fsubrl
stos
jo
push
jle
scas
rorb
pop
push
inc
ret
mov
mov
push
test
outsb
es
divb
xchg
scas
test
inc
hlt
pop
imul
pop
cmc
fnsave
mov
xchg
pop
loope
stos
inc
out
cwtl
mov
inc
into
stos
aas
mov
pushf
ret
shlb
fcmovnb
and
pushf
scas
outsl
push
adc
mov
mov
cli
push
shll
push
out
xchg
andb
push
cmp
loop
daa
jle
mov
out
sub
jae
push
std
dec
out
outsb
pop
mov
xchg
jg
mov
inc
sbbb
fucomi
jnp
daa
ret
les
aas
xor
push
add
jge
push
lret
icebp
pop
dec
mov
mov
mov
out
mov
mov
orb
data16
test
cli
sub
fistl
sub
imul
ds
push
fsubrl
enter
and
push
psubq
hlt
stc
jb
aas
cmp
je
mov
leave
clc
cwtl
loopne
loopne
pop
cmpsb
outsb
fwait
jmp
loop
nop
mov
adc
popa
addb
mov
in
inc
arpl
push
xor
and
push
test
dec
mov
or
jo
sub
jge
and
or
push
xchg
andl
sbb
imul
jp
cmp
stos
int
into
push
rclb
les
out
sub
out
mov
repnz
dec
mov
mov
sbb
fstps
pop
mov
stos
sbb
lods
cwtl
fstps
xchg
divl
daa
lret
mov
repnz
pop
jne
jmp
push
jle
addb
addr16
cmc
adc
nop
mov
sub
lahf
in
arpl
adc
or
out
into
pusha
push
mov
ffree
cmp
js
mov
shlb
hlt
pop
push
cltd
push
test
mov
jno
adc
in
mov
push
xor
pop
and
jb
nop
hlt
gs
jmp
pushf
xchg
cmc
xchg
stos
mov
xchg
adc
cld
repnz
mov
xor
icebp
push
pop
ret
cltd
pop
jo
sub
int
adc
sub
pop
loope
addl
xlat
call
into
xchg
iret
orb
mov
and
or
xor
fcompl
or
xor
cwtl
xchg
mov
faddl
jbe
xchg
inc
js
lods
sti
mov
or
int
out
xchg
std
cltd
mov
iret
mov
dec
jp
jmp
into
mov
test
mov
jns
cli
mov
subl
pop
adc
lds
xor
cmp
sahf
jmp
out
sbb
in
pop
movsl
movsb
jns
add
js
arpl
imul
in
test
push
inc
push
ja
xor
sub
push
enter
push
test
push
lods
in
sar
es
cs
loopne
push
mov
js
aad
rorb
or
cwtl
cmp
mov
jo
dec
les
and
adc
lods
inc
lfs
xchg
test
mov
push
pop
inc
xor
test
xlat
test
add
insl
or
shll
push
sub
gs
xchg
js
push
hlt
leave
rolb
insl
and
mov
into
adc
inc
std
mov
iret
adc
cltd
xor
xor
ret
or
or
sarl
jo
cmp
cs
test
sub
incl
mov
jne
xchg
xor
int3
gs
idivb
adc
inc
mov
mov
dec
fwait
sub
sub
in
pop
test
inc
orps
add
xorl
in
mov
lds
add
sti
push
adc
xchg
push
test
mov
call
mov
hlt
pop
pop
movsb
decb
fldenv
jp
int3
jg
dec
adc
test
movsl
frstor
dec
pop
sahf
test
pop
mov
add
jnp
mov
dec
jo
lret
add
les
pop
xor
out
addb
inc
lds
jmp
mov
mov
jnp
or
out
in
pop
out
dec
orb
fwait
add
jecxz
and
sbb
incb
das
sub
test
out
inc
dec
jecxz
or
stos
rorl
mov
stos
insb
je
inc
loopne
pop
loopne
std
or
cmp
repnz
test
mov
into
ds
sbb
lcall
push
jbe
push
jle
das
pusha
adc
rcll
and
mov
jne
into
jmp
pushf
inc
leave
out
addr16
call
add
mov
enter
xor
stos
stos
adc
adc
mov
cmpb
cmpsb
into
fistps
cmpsl
fistpl
fxtract
and
xchg
ss
lahf
stos
jae
popf
jg
add
mov
out
cmpsb
mov
mov
arpl
test
xchg
inc
add
or
fucomip
cmpsb
pop
or
and
divl
fdivp
adc
stos
scas
xor
jl
xor
aad
test
js
adc
outsl
jns
loopne
mov
out
cmpsl
xchg
pusha
arpl
sahf
xor
scas
sbb
mov
ljmp
fdiv
fistpl
pusha
jne
jp
xor
scas
mov
xor
xor
popl
sub
out
inc
dec
mov
fimull
mov
mov
inc
push
add
int
imul
xchg
xor
mov
xor
dec
loopne,pn
adc
fdivrl
inc
cs
repz
sub
lods
stos
fstpl
call
pusha
hlt
scas
push
mov
icebp
mov
xchg
mov
cmp
shlb
pusha
lretw
and
out
pop
sbb
lcall
pop
stc
in
push
or
test
mov
shrl
add
mov
lock
loopne
movsl
dec
nop
ret
movb
cmc
cwtl
stos
xchg
in
lods
cmp
push
stc
rorl
pop
movsl
mov
hlt
dec
jl
or
or
cs
add
mov
arpl
das
jne
cmpsl
test
mov
leave
adcl
mov
jne
dec
xor
mov
in
subl
pop
jo
pop
es
push
pushf
or
xor
stos
dec
dec
test
cltd
push
lds
push
adc
push
hlt
cmp
lahf
jns
push
loop
xchg
rol
inc
loopne
inc
cltd
push
rcl
pop
sahf
jns
lds
ror
adc
inc
sub
and
stos
inc
and
push
test
push
jne
lods
subb
insl
cmp
pop
jge
add
mov
int3
mov
push
xchg
jne
call
outsl
dec
xchg
imul
das
lock
push
dec
ftst
adc
xor
mov
xlat
or
pushw
push
iret
add
nop
fs
sub
std
mov
xchg
jp
je
xchg
hlt
xor
mov
adc
mov
adc
mov
cli
add
pop
inc
ljmp
loope
ds
ret
in
jo
mov
cli
js
lock
ret
jbe
les
dec
cltd
sub
test
pop
and
adc
std
call
pop
adc
and
push
addr16
sbb
mov
sbb
fsubrs
cmp
bound
dec
movsl
adcl
jp
nop
into
add
jbe
mov
mov
jo
das
and
sbb
xor
cs
mov
xor
mov
jmp
lret
test
lods
movb
divl
out
xor
mov
ret
insl
or
add
cli
sahf
mov
add
pop
pop
imul
fimuls
shrb
mov
jle
adc
mov
shlb
std
sti
xchg
movsb
mov
ret
jmp
mov
jmp
fbld
clc
sub
mov
loopne
shr
cmpsb
xchg
clc
dec
out
inc
push
jle
cwtl
sub
and
mov
ffreep
cmp
fsubr
push
out
push
or
daa
dec
daa
sbb
stc
push
test
sub
data16
pop
pop
loope
mov
lahf
aam
push
fidivrs
cli
pop
push
xchg
popa
xorb
lahf
pop
int
dec
clc
inc
fisttps
lret
mov
gs
lock
testb
ljmp
fidivl
loope
jne
pop
jl
xor
sub
fcmovbe
sub
jno
mov
dec
push
das
push
and
jae
xorl
pusha
nop
out
loope
sbb
rclb
jne
sbb
shrb
ja
fadds
int3
jne
data16
dec
sub
pop
aam
movsl
mov
inc
notb
in
stc
movl
cwtl
jle
push
adc
test
jg
xor
shrb
push
add
dec
sarb
lcall
hlt
pusha
cli
cmp
subl
mov
jmp
adc
sub
fdivl
sbb
rcrl
movsl
fwait
mov
push
add
ljmp
es
push
test
cmpsl
jbe
mov
xchg
sub
outsb
and
dec
movsl
test
aas
adcl
cli
out
and
inc
mov
push
iret
hlt
iret
ficomps
xor
movsl
es
pop
mov
pop
pop
sub
nop
insl
lcall
xchg
popa
mov
in
push
out
sub
test
and
jbe
jg
fldenv
dec
cli
js
mov
call
fsubl
leave
or
xor
stos
mov
push
shl
shl
and
jg
fstl
fcomi
cmp
dec
mov
adc
xchg
jne
push
xchg
jo
hlt
lcall
shlb
ja
sub
cltd
add
iret
fmuls
or
loopne
xor
hlt
sbb
arpl
notl
mov
in
mov
pop
fistps
movsl
test
or
mov
jge
adc
mov
inc
pop
mov
clc
jecxz
sarl
call
in
dec
loope
test
jmp
roll
inc
cmpxchg
jne
dec
in
adc
cwtl
pop
arpl
jp
push
add
cmpl
push
fldt
pop
mov
dec
jbe
pop
test
jp
xor
sbb
pop
jns
cld
dec
cmp
ja
scas
adc
and
xor
jae
in
mov
mov
mov
bound
push
movsl
or
adc
mov
clc
dec
int3
jb
scas
add
cwtl
cmovs
mov
adc
inc
adc
sub
xlat
or
mov
mov
in
pop
out
mov
bnd
test
jne
add
dec
jno
mov
cmp
cmpsl
js
pop
and
xchg
pop
push
or
and
pop
xor
ret
fcomps
into
pop
stos
sub
andl
push
mov
pop
cwtl
stc
lods
hlt
or
hlt
mov
jl
pop
out
mov
dec
mov
inc
jmp
push
xlat
cmpsb
push
adc
loopne
test
mov
or
sbb
add
or
sub
shlb
int3
xchg
out
jno
adc
outsb
xorb
shll
test
fists
imul
inc
repnz
add
push
dec
mov
and
xor
rcll
dec
sbb
push
out
pop
hlt
mov
fmuls
test
xchg
xchg
aad
xchg
movsb
adc
xor
cmp
inc
and
lods
les
roll
jecxz
mov
sub
notl
or
test
jno
daa
or
mov
adc
out
and
insb
cs
neg
sbb
or
inc
stc
jbe
dec
jbe
adc
test
in
mov
and
jbe
ret
push
sub
addl
out
jno
roll
or
mov
mov
jg
aaa
sub
push
add
rorl
xchg
fmull
pushf
jmp
mov
jmp
xor
sub
out
fistl
mov
add
mov
popa
jp
sbb
xor
imul
fcomip
mov
adcb
loop
loop
or
sbb
int
sub
mov
insb
inc
push
dec
push
js
mov
mov
push
adc
sbb
leave
insb
xchg
sbb
sub
clc
or
jb
popa
adc
ss
dec
jle
pop
pusha
adc
xor
clc
mov
cmpsl
shll
dec
cwtl
mov
jnp
lcall
mov
inc
hlt
call
ret
je
aam
dec
adc
push
idivb
cwtl
enter
add
in
or
daa
filds
imul
dec
iret
loopne
add
popa
push
popa
inc
add
add
add
cmpsb
inc
cmp
jecxz
push
cmp
mov
mov
aam
pop
inc
fsin
adc
adc
mov
into
out
insb
cmp
ljmp
popf
mov
lcall
scas
popa
rcr
in
movsl
jg
jp
push
test
sub
mov
in
nop
mov
lret
mov
into
aad
adc
pushf
hlt
jbe
cs
insb
lods
push
jmp
cmpsb
out
mov
pop
dec
testl
fsubrl
aas
nop
and
adc
out
sub
inc
mov
pushf
adc
cld
jl
imul
aad
rolb
icebp
cltd
sbb
jno
loop
js
mov
add
dec
inc
inc
fstpt
sahf
xchg
or
outsb
jns
test
mov
inc
test
mov
jmp
mov
mov
cmp
adc
pop
mov
scas
es
popf
stos
outsl
shl
das
sbb
mov
xchg
or
ds
scas
and
jmp
adc
xor
fcoms
dec
push
push
push
test
fcomps
sub
rcl
subb
daa
and
inc
cmpsb
cmpsb
and
or
mov
rcrl
icebp
movsl
add
mov
out
stos
stos
jp
enter
and
xor
lret
adc
xor
fsubrs
push
jae
testb
cmp
xchg
xor
push
dec
in
dec
lods
or
push
add
sub
add
stos
jnp
aas
add
cmp
fidivrs
or
mov
icebp
inc
movsb
nop
xchg
mov
push
xchg
push
imulb
push
mov
push
add
data16
jmp
sbbb
movaps
adc
jbe
pop
leave
les
lods
cld
jmp
cs
leave
mov
adc
popl
jecxz
in
aad
push
ret
jg
or
push
add
adc
inc
fidivl
pop
shl
les
and
sbb
fcompl
jge
inc
addr16
push
mov
mov
push
je
inc
stc
sbb
movsb
negb
out
or
test
xor
in
mov
dec
insl
into
and
stos
rorl
fbstp
adc
roll
pop
inc
mov
push
loopne
push
or
test
inc
cs
push
idivb
pop
jge
aad
jae
xchg
add
cmp
sbb
sti
jge
orl
xchg
jne
push
jle
ss
pop
push
pop
ficoms
fstp
xor
mov
idivl
addl
in
and
sbb
jp
mulb
out
into
scas
mov
test
mov
shlb
jbe
leave
inc
sub
push
jns
xlat
dec
icebp
into
pop
mov
mov
pop
xor
mov
ds
cltd
inc
insb
int
sub
and
or
cmpl
xor
inc
xor
cmp
dec
mov
ret
fnsave
test
fists
lock
sub
jge
add
in
jne
jecxz
fnstcw
push
adc
out
repnz
mov
ret
jle
or
adc
pop
mov
icebp
stos
jns
and
jno
repz
push
xor
mov
sbb
pop
add
sarb
sub
cwtl
adc
push
inc
test
mov
jge,pt
push
rolb
fisubs
sarl
add
jo
mov
push
mov
lret
scas
jg
fmull
in
inc
mov
mov
jne
inc
sti
sbb
divl
dec
mov
jl
push
inc
mov
les
stc
mov
sbb
jae
les
fisttpl
add
and
jnp
addr16
xchg
subl
push
mov
add
add
call
add
cmpsl
jmp
add
js
fidivrs
in
sbb
sbb
in
inc
add
inc
jp
jb
push
fcmovnbe
dec
dec
adc
adc
scas
shl
add
cmp
bound
sbb
inc
inc
shll
inc
enter
aam
xchg
sbb
mov
fisttpll
inc
push
and
pop
mov
jmp
cli
leave
sub
push
sbb
and
sub
jne
dec
insb
jp
xchg
lret
or
cmp
or
lock
adc
lcall
jge
and
ljmp
xchg
cmc
cmp
mov
jae
mov
pop
movsb
pop
loopne
pop
push
pop
sub
jne
stos
shll
and
mov
pusha
fpatan
mov
xchg
aad
stc
inc
jnp
test
sbb
xchg
movsl
add
in
push
push
jle
les
hlt
aas
cs
lahf
push
adc
adc
je
mov
mov
add
rol
xchg
test
jo
push
jne
pop
and
mov
pop
mov
aas
mov
xchg
xchg
jmp
mov
xor
sbb
cltd
loopne
dec
sub
jge
adc
fs
xorl
push
cld
jmp
pop
inc
rorl
es
cltd
mov
and
dec
or
dec
inc
inc
push
push
lret
jns
cmp
ror
loop
dec
mov
ret
pusha
ja
in
repz
push
jns
jg
mov
sbb
mov
rcrb
push
jmp
lock
cwtl
mov
sbb
sbb
mov
out
or
or
in
pop
mov
cmpsl
ja
sbb
test
addr16
test
movsb
ret
mov
sbb
aas
daa
movsl
fucom
bswap
push
repz
stos
mov
orb
arpl
push
jmp
pop
mov
dec
repz
jbe
push
dec
mov
test
and
mov
lcall
movsb
and
inc
fwait
jne
lret
pop
les
leave
imul
sub
jnp
sti
repz
inc
std
mov
pop
push
mov
or
jae
push
mov
aad
sub
pop
xchg
jmp
aad
cmc
jge
sbb
dec
inc
lret
and
aad
mov
movsb
or
mov
les
jne
loopne
jnp
add
jne
mov
cmpsb
mov
mov
in
xchg
pop
movsb
mov
repnz
mul
mov
inc
sbb
mov
fists
cmc
stos
std
push
jg
pushf
push
mov
stc
xorb
jb
pop
xchg
ljmp
loope
pusha
sti
inc
out
leave
fcoms
and
inc
bound
mov
mov
scas
pop
mov
gs
pop
mov
and
xor
int
mov
jne
andl
cmpsl
fstl
mov
stc
jno
xchg
add
pop
sbb
aam
call
aad
repz
and
notb
mov
aad
popa
aaa
stos
js
pop
js
fildl
test
dec
xor
test
xor
xor
xor
test
cmp
addl
cmpb
pusha
push
xor
cmpsl
clc
inc
test
aas
push
mov
std
mov
jne
jo
clc
push
xchg
insb
es
les
jo
fldl
test
fwait
icebp
xchg
pop
inc
push
repnz
or
adc
in
loope
enter
sbbb
xor
mov
xchg
mov
fs
or
cwtl
stc
stc
xor
sub
inc
movsb
aad
arpl
cmp
dec
leave
hlt
sbb
and
lds
jge
ret
gs
adcb
lret
ja
and
scas
sbb
xchg
pop
mulb
lcallw
lret
stc
jge
adc
test
test
jg
scas
push
adc
xchg
push
leave
xor
sub
insl
jmp
mov
stos
test
outsb
xchg
jle
xlat
sbb
repz
mov
sti
ret
loope
lods
es
test
movsl
inc
mov
aad
mov
xor
jg
pop
popf
clc
jle
add
and
shrb
sbb
es
adc
inc
fldcw
pushf
rorl
mov
mov
xchg
mov
iret
aam
push
es
in
and
xor
mov
inc
pop
xchg
inc
add
std
pop
adc
rcrb
jo
test
pop
aam
ja
xor
fcoms
aad
call
sub
hlt
pop
inc
pop
mov
xchg
cmp
inc
popa
jl
mov
dec
repz
incl
stos
dec
pop
test
lea
hlt
dec
sub
das
sub
cmp
mov
inc
pop
or
ficoml
cmpsl
jne
inc
pop
jp
in
test
mov
iret
not
sbb
add
sub
xor
jp
dec
out
lods
mov
sbb
fisttps
test
mov
add
pop
into
es
imul
mov
sub
shl
int3
sbb
mov
stos
fidivl
cwtl
and
xlat
idivl
push
mov
movsl
daa
push
stos
inc
inc
jmp
inc
ja
jne
dec
inc
aam
jbe
pop
fcomps
sub
repnz
popa
push
push
fadd
pop
dec
and
les
add
scas
and
jp
inc
xchg
xor
ljmp
add
mov
mov
insl
sbbl
out
in
lock
mov
xchg
arpl
imul
cmp
test
js
pop
pop
inc
inc
jg
pusha
repnz
icebp
es
inc
fists
mov
hlt
mov
sub
scas
in
pop
shll
dec
jb
cmp
fs
shll
pusha
out
enter
cmpsb
sarl
xor
iret
pusha
rcrb
imull
pushf
into
popf
cmc
xchg
daa
adc
jne
outsl
xorl
mov
data16
cli
daa
xorb
jp
push
pop
push
in
in
jne
sarb
dec
into
in
push
mov
gs
and
xchg
pop
les
jae
and
xor
or
movsl
repnz
xchg
adc
pop
call
xor
dec
push
push
imul
xor
cli
enter
movsb
add
adc
movsl
inc
cmc
and
xor
hlt
pavgb
stos
fisubrs
jne
test
fiaddl
jo
mov
repnz
xor
add
xchg
cmc
add
shlb
out
or
jmp
adc
jle
sarb
jle
scas
loopne
pop
sysexit
adc
int3
mov
jnp
add
cld
fldenv
lods
clc
xchg
mov
mulb
insl
lods
cs
ficomps
mov
arpl
loopne
repz
dec
mov
and
rolb
or
rolb
adc
inc
out
lock
mov
and
shll
jnp
mov
xchg
popa
aas
pop
lret
push
add
or
adc
std
mov
les
sbb
jne
and
sub
sbb
das
scas
flds
mov
xchg
rcl
bound
fldt
cmc
inc
out
mov
sub
mov
and
xchg
xorb
xchg
sub
xor
rcrb
cmpsb
pusha
or
jno
rcr
pusha
xchg
mov
and
mov
in
inc
js
lret
in
enter
inc
mov
in
sbb
dec
sti
scas
cmp
push
and
scas
sub
movd
xor
lret
add
mov
sahf
jnp
push
push
xchg
out
popf
pop
push
mov
xor
pop
fs
adc
cld
idivl
imul
setnp
jp
and
in
xor
scas
jnp
int3
enter
into
or
mov
mov
adcl
lahf
inc
and
and
pusha
xor
push
inc
lods
add
push
fsubr
inc
mov
cmc
adc
push
pop
aad
or
scas
push
jae
mov
xor
scas
add
fadd
lods
cmp
sub
add
inc
mov
dec
xchg
jo
dec
loopne
stos
or
test
lods
jp
mov
sub
add
push
outsb
ljmp
cmp
jge
pop
movsl
mov
mov
add
adc
dec
notb
mov
stos
xor
aam
inc
cmpsb
daa
arpl
add
fdivl
aad
xchg
fyl2xp1
sbb
jae
or
pop
mov
add
es
xchg
gs
icebp
fisubrl
xor
push
sub
pop
mov
add
xchg
add
sub
hlt
fwait
scas
cwtl
lea
sub
gs
cmpsb
add
or
test
je
stos
xchg
mov
sub
fcoml
clc
sti
hlt
adc
cmp
test
xchg
mov
mov
mov
and
sahf
je
and
sub
loope
jne
dec
adc
loope
hlt
mov
jmp
xorl
cmp
pop
jle
mov
out
adc
or
jmp
and
push
lcall
jge
dec
mov
ficoml
ja
ret
es
enter
push
add
mov
shrl
mov
inc
add
push
movb
ss
ljmp
mov
and
mov
lahf
jp
out
sub
mov
mov
adc
imul
jmp
sbb
fwait
pusha
cwtl
insb
test
dec
xchg
xchg
dec
dec
push
dec
push
fmul
jbe
xchg
mov
jg
add
sbb
pop
mov
mov
inc
sahf
mov
divb
notl
pop
cs
or
sbb
incl
lods
xchg
xor
lods
mov
cmpsb
add
xchg
test
push
jne
mov
cwtl
mov
push
loopne
rep
sar
insb
lea
popa
xor
mov
int
outsl
cld
hlt
adc
loop
push
arpl
loopne
mov
jbe
leave
bt
adc
sub
mov
jno
mov
and
leave
stc
mov
mov
inc
fsubl
hlt
push
cmpsl
lret
mov
add
jp
push
scas
int3
lock
sbb
push
jg
sbb
lcall
jmp
cmc
in
xor
sub
fadd
jnp
pop
fisttps
ja
aam
dec
aam
cs
dec
popa
in
mov
xchg
std
movsl
xchg
push
insl
xchg
leave
int3
hlt
add
into
hlt
adc
movsl
ss
adc
cmp
leave
dec
xor
xchg
push
mov
sub
sar
jl
sahf
hlt
in
pop
mov
stc
xchg
mov
rorb
popa
out
push
mov
sbb
mov
loop,pn
fwait
clc
inc
sti
filds
loope
ljmp
cmp
inc
add
pop
xlat
xor
das
sub
push
gs
mov
int3
add
xchg
stc
mov
add
sbb
incl
stos
add
and
sbb
rclb
push
mov
sahf
outsb
fcoms
lret
iret
pop
and
test
pusha
sub
mov
aad
ret
rcrb
aaa
imul
inc
nop
mov
out
les
hlt
and
xchg
ror
dec
jecxz
mov
mov
hlt
adc
and
cmp
mov
mov
movsb
orl
adc
add
out
divps
jb
ds
imul
cwtl
inc
shrb
xchg
sub
sbb
jbe
and
scas
push
inc
inc
and
shll
lock
std
jge
bswap
imul
jg
lahf
sahf
std
es
test
push
iret
imul
jp
je
push
shl
jbe
jp
pop
xchg
orb
and
jne
in
mov
xor
cli
lahf
inc
test
inc
inc
or
jnp
test
loopne
jmp
jne
jg,pn
hlt
jbe
jmp
rcl
cmpsl
outsl
hlt
xor
fcompl
lods
scas
xor
mov
and
cmp
push
icebp
vmwrite
lret
or
das
pushf
mov
lock
pop
out
std
hlt
in
shll
inc
fcomip
loopne
shll
jmp
mov
pusha
in
adc
cmp
xchg
sbb
sti
gs
rclb
jmp
xchg
ljmp
mov
sub
roll
imul
hlt
jae
mov
stos
jne
sbb
hlt
shlb
xchg
pop
aad
cmp
cmpsb
bound
in
addl
push
popf
addr16
pushf
iret
out
lahf
mov
sbb
stos
ss
lock
decl
and
pop
stc
add
test
xchg
scas
and
xor
mov
fucom
test
idiv
lret
mov
mov
mov
or
sub
daa
std
frstor
jns
fidivrs
push
fmuls
mov
loopne
jg
push
in
fisttpll
xchg
test
out
in
sbb
cs
idivb
loope
fisttps
pop
jno
test
test
xorl
mov
xchg
lahf
hlt
xchg
push
iret
cli
pop
xchg
int3
push
jb
mov
rcrb
mov
jmp
mov
pop
cld
mov
cld
add
xchg
xchg
jge
pop
cmpsl
pusha
shrb
cmpsb
sub
aad
push
inc
hlt
cmpsl
cmp
lahf
addr16
insb
insl
dec
aad
lds
cs
jbe
out
push
loop
jp
in
sub
cwtl
repz
sbb
inc
jge
test
xor
dec
and
fistl
xor
shl
adc
mov
or
mov
xlat
sub
out
xor
push
or
shlb
shrl
xor
push
int3
mov
pop
xchg
les
hlt
mov
push
das
mov
cmp
inc
mov
xchg
test
negl
mov
movsl
xchg
jo
daa
call
adc
stc
mov
mov
pop
je
lret
shrb
cmc
test
cld
aaa
add
dec
push
mov
loope
mov
adc
mov
movsl
in
mov
sub
cmp
xchg
xchg
decb
rcll
and
and
repnz
jmp
insl
lcall
adc
inc
sti
sahf
xorl
popf
xchg
xchg
dec
into
das
jl
mov
repnz
sub
pop
add
fxch
call
dec
sub
and
add
repnz
jl
fildll
sti
jg
xor
mov
mov
loope
insb
jecxz
pop
pop
jle
cmp
in
mov
push
inc
and
roll
movsb
andb
mov
enter
incl
xchg
or
mov
ds
xor
cmp
lret
xchg
pop
adcb
mov
stos
cltd
fmuls
ljmp
scas
and
shll
into
sbb
push
mov
pop
push
mov
addr16
nop
push
pop
orl
cmp
inc
scas
cmp
aaa
mov
adc
push
xchg
push
stos
lret
inc
adc
xchg
lret
add
push
insl
jp
xlat
sti
lds
inc
imul
mov
dec
jecxz
xor
jnp
add
ljmp
push
fildl
movsb
lret
cli
outsl
jnp
out
daa
xor
lock
jne
mov
jb
pop
mov
mov
outsl
mov
push
aas
outsb
lock
push
std
xor
add
ret
sub
aam
mov
mov
mov
jne
sub
mov
sbb
sbb
mov
ljmp
cmp
data16
mov
pop
cmp
les
pusha
lds
adc
jne
push
clc
sbb
mov
in
sti
mov
into
xchg
enter
popf
pop
test
in
test
sbb
scas
xor
les
add
leave
data16
fiadds
add
cld
inc
mov
and
mov
adc
hlt
sbb
in
adc
fsubrl
loope
add
outsl
xchg
xchg
ret
mov
mov
stos
leave
inc
test
add
sub
pop
push
add
mov
enter
out
mov
out
xchg
sub
push
stos
divb
test
test
or
imul
sub
repz
das
mov
add
loop
push
mov
out
xor
cmp
mov
add
push
cmpsb
push
mov
jne
mov
or
roll
add
test
dec
mov
fcmovnb
xor
push
mov
mov
and
sbbl
cmpsb
jne
cmpsl
fists
test
mov
add
mov
and
mov
sub
add
pop
sbb
add
xor
xchg
sbb
add
push
jle
adc
ja
popa
popa
dec
lods
inc
push
inc
in
jno
cmpb
sub
fdivs
xor
aam
es
ret
mov
sub
or
ja
shlb
flds
cmc
sbb
sbb
idivb
out
push
dec
mov
push
insb
test
push
imul
or
aas
inc
lock
fidivs
ljmp
mov
xchg
movsl
jns
sahf
xchg
mov
or
inc
or
das
dec
mov
or
sbb
add
cmpsb
call
cmp
cmc
stos
clc
pop
mov
pusha
es
inc
jmp
or
push
xchg
icebp
mov
daa
hlt
das
out
mov
lret
adc
pop
testl
adc
jmp
cmp
jl
pop
leave
push
lcall
flds
lods
hlt
nop
pop
dec
or
mov
mov
sub
pop
out
and
inc
ret
adc
pop
mov
xor
xchg
cld
xchg
movsl
in
popa
inc
cmp
add
rclb
and
jle
push
mov
add
or
inc
fsubs
fisttps
xlat
movaps
pop
popa
ret
jp
loope
movsb
and
nop
cwtl
xchg
nop
pushf
mov
xlat
fptan
sub
sbb
stc
mov
ret
jl
fdivs
sbb
sti
mov
xchg
ljmp
ja
xor
cs
lcall
mov
and
add
hlt
test
enter
shlb
jb
sbb
dec
sub
cmp
lret
in
into
adc
xor
lods
lret
leave
notb
mov
and
das
leave
sbb
call
scas
adc
xchg
jnp
jnp
pop
fcoml
or
xchg
cld
inc
sub
sub
push
xchg
jo
cmp
jne
test
frstor
jp
sub
sub
xchg
aas
mov
xorl
xchg
lods
enter
pop
negl
sahf
jne
loop
scas
sbb
std
inc
and
lret
mov
push
test
inc
sahf
and
iret
sbb
js
mov
pusha
mov
jle
cmp
mov
out
call
pop
mov
dec
cmp
pop
rcl
shlb
test
inc
lds
jmp
outsb
frstpm(287
pop
push
and
imul
jge
xchg
sub
lods
or
mov
in
sti
inc
pushf
mov
mov
hlt
push
shl
testb
clc
dec
aaa
aam
mov
shrb
adc
out
out
cmp
jg
push
jne
sub
out
fiadds
push
push
fdiv
mov
mov
rorb
push
fbld
mov
andl
pop
mov
inc
push
add
bound
mov
bound
dec
popf
in
mov
jne
daa
xchg
xchg
jne
stos
mov
shr
adcb
dec
mov
arpl
add
jns
mov
mov
cld
pusha
arpl
lret
sbb
cs
xchg
cmp
dec
xchg
inc
testb
hlt
push
xor
adc
das
pop
or
stos
push
aas
imul
jns
add
fsubl
xor
insl
popf
mov
xor
repz
inc
jp
xlat
mov
xor
loope
insb
cmp
xchg
xchg
mov
push
sbb
cmpsb
rcrl
insl
mov
cmp
jl
push
dec
loope
push
movsb
fildll
cmp
mov
shr
int
stos
cltd
repnz
enter
add
repz
xchg
add
enter
sbb
arpl
aad
inc
loop
ja
mov
or
ret
stos
xchg
clc
ret
push
jmp
movsl
xchg
shll
mov
inc
mov
pop
sub
hlt
add
dec
sar
fucomip
stos
jp
test
in
mov
and
es
pop
xor
jne
aam
loop
fcomi
mov
xorb
jne
or
mov
mov
out
inc
xor
inc
in
das
rolb
adc
std
je
push
fdivrs
cmp
and
sub
loopne
jne
jl
lods
inc
push
nop
test
or
and
shrb
dec
test
and
lods
jns
fxch
hlt
or
mov
cmp
inc
or
rcll
rcll
jmp
aaa
fisubl
test
jmp
xchg
fnstcw
add
sbb
int3
or
adc
test
mov
push
cld
adc
mov
cli
jge
mov
pop
push
lock
or
inc
push
call
pop
cli
and
fcmovne
pusha
cmp
int3
jbe
hlt
sbb
dec
adc
subl
test
nop
mov
mov
pushl
add
xchg
and
add
sahf
sbb
std
in
sbb
imul
out
xorb
movsl
leave
mov
xchg
loope
das
cmpsl
lea
cmp
fistpll
pushl
add
mov
add
sub
enter
mov
orb
xor
xchg
lock
sub
adc
or
ja
mov
and
out
xlat
sti
add
gs
adc
leave
mov
xor
out
fnstenv
mov
jb
adc
lods
out
jmp
adc
dec
xor
scas
std
and
adc
rol
push
push
test
or
insl
ss
orl
add
sbb
hlt
add
in
sub
push
and
lds
push
or
sbb
xchg
jno
or
lret
add
mov
mov
repz
rolb
mov
hlt
and
jle
mov
mov
test
cmpsb
inc
xor
jecxz
aam
in
and
hlt
adc
mov
jnp
ficoml
or
xor
insl
int3
push
adcl
jnp
out
or
jge
dec
stos
aas
xor
jae
ja
mov
sub
out
fwait
xchg
adc
sub
shl
pop
sbb
scas
push
add
mov
jmp
sub
enter
and
les
in
cmp
sub
jne
js
jnp
lahf
jns
inc
out
sbb
pop
scas
mov
cwtl
cli
push
cltd
cmpsl
jns
push
cmp
push
icebp
loop
rcrb
xchg
or
stos
jae
push
outsl
push
adcl
cltd
add
cmp
pop
inc
sub
mov
popa
push
or
mov
hlt
lods
flds
aas
sbb
pushf
mov
hlt
shlb
mov
adc
xchg
cmpsl
pop
std
sbb
addl
ja
in
daa
loope
push
arpl
inc
inc
push
xchg
scas
int
fcompl
pop
push
inc
jns
lods
mov
pop
or
adc
jno
push
gs
jg
icebp
insb
mov
enter
cmpsl
jge
jno
mov
dec
shll
hlt
fwait
cwtl
mov
inc
sbb
jo
clc
adc
adc
inc
jg
jo
push
pop
sbb
or
test
pop
inc
jne
test
lds
mov
mov
dec
sub
or
or
idivb
scas
sti
mov
or
les
xchg
gs
jle
repnz
int3
test
ffree
lds
lods
jp
lcall
xchg
ficompl
and
mov
xlat
cmc
out
xchg
mov
mov
in
mov
pop
insl
sub
push
mov
loop
inc
shll
aad
in
cmp
into
mov
movsb
popa
xorb
andl
ljmp
stc
sbbb
cwtl
enter
dec
cmpsl
lcall
jne
arpl
dec
cmp
lods
xchg
jge
sub
fldenv
orl
cmp
push
hlt
dec
pop
stc
lret
adc
adc
mov
adcl
mov
xchg
dec
data16
mov
mov
mov
popa
div
cmp
push
cmp
add
shl
test
xchg
clc
mov
pushf
xchg
test
and
sar
cmp
dec
jno
xor
sub
mov
and
in
jl
icebp
hlt
fdivrl
pop
out
or
popf
cmc
sbb
or
popf
jmp
xchg
xor
pop
pop
dec
jbe
iret
push
mov
movsb
adc
add
ljmp
pop
jne
in
or
jmp
subb
test
pop
adc
popf
sbb
stos
in
dec
xor
ficoml
mov
pop
mov
mov
xchg
cmpsb
fs
loope
jl
mov
leave
sub
out
inc
mov
mov
sbb
pop
lret
jo
push
out
xor
rolb
xchg
mov
inc
pop
add
call
int3
and
into
shrb
sub
movl
add
movsb
mov
test
cmp
movb
adc
or
or
pop
out
dec
imul
arpl
mov
movsl
sub
daa
pop
pop
xchg
fldl
sbb
adc
add
stos
push
mov
in
fisttpll
out
leave
inc
push
rclb
cmpsb
test
popf
rolb
popa
std
stos
push
pmuludq
xor
adc
inc
and
jp
cmpsl
mov
daa
div
and
clc
sub
cmp
add
mov
dec
sub
pop
insb
jp
add
std
and
rolb
cmc
popa
dec
cwtl
movsb
inc
int3
push
and
icebp
mov
in
nop
cmc
pushf
movsl
std
adc
pop
cmpsb
ds
mov
sbb
or
pop
lea
cmp
push
jl
jo
xchg
and
cwtl
stos
ljmp
int3
mov
sub
addr16
mov
or
or
jae
movsb
adc
fdiv
push
enter
lods
add
pusha
es
mov
and
mov
call
jbe
mov
int
andb
hlt
lock
nop
test
mov
test
aas
ret
adc
pop
add
or
or
or
or
frstor
jb
jne
not
and
cmp
sti
xlat
push
pop
adc
dec
pop
lahf
sarl
adc
xchg
int3
lret
xor
hlt
adc
adc
pop
cltd
scas
mov
ret
into
stos
mov
dec
or
mov
cld
push
adc
int
nop
adc
mov
popf
mov
dec
jo
addb
pop
hlt
mov
push
push
and
ret
adc
ljmp
stc
nop
insl
xchg
and
into
stos
pop
in
mov
mov
fisubrs
jmp
in
roll
fldenv
xchg
inc
pop
pop
push
cwtl
pusha
mov
add
ljmp
shlb
sti
push
testl
adc
jge
cmp
dec
or
pop
lock
mov
cmpsl
lea
xchg
sub
aaa
push
sti
shrb
js
call
cmp
clc
pop
stos
insl
sbb
dec
in
popf
outsl
out
push
jecxz
out
xchg
adc
dec
mov
mov
mov
xchg
pushf
pusha
les
adc
mov
jle
orl
pop
shrb
aas
pushf
lret
xlat
jmp
mov
mov
xchg
imull
lods
mov
sarb
inc
jno
push
bound
test
adc
push
add
inc
rcll
pop
push
inc
pop
jo
test
pop
dec
test
stc
push
xchg
cltd
lret
cld
xchg
popl
pushf
cmp
mov
mov
hlt
add
dec
xor
cmp
subb
xor
notb
cwtl
pop
push
cli
icebp
lcall
xor
lods
inc
adc
cmpsb
push
test
cmp
jns
loope
int
cmp
mov
mov
cmp
test
repnz
jmp
sub
mov
sbb
pop
pop
mov
insb
lret
roll
cmp
fisubrs
aas
xchg
test
test
xor
ss
mov
push
paddd
out
xor
stos
mov
loopne
sub
mov
and
inc
lret
sub
xlat
sbb
mov
mov
into
jp
xchg
mov
or
mov
movsb
add
icebp
pusha
mov
sub
stc
or
xchg
push
jl
lock
cs
fcmovnu
or
mov
add
sub
and
mov
sub
dec
js
enter
sti
movsb
pop
lds
loop
gs
dec
mov
incl
movsl
xchg
mov
jno
dec
bound
fnstsw
xor
mov
test
add
jg
xor
jmp
inc
and
cmp
xorb
out
jl
shlb
jle
lds
outsl
arpl
jb
fidivrl
xchg
hlt
daa
arpl
jmp
cld
mov
jns
daa
test
adc
test
mov
test
push
js
cwtl
dec
rcll
shlb
inc
loopne
inc
mov
inc
stc
pop
jp
xchg
shll
hlt
dec
repnz
stos
int
outsl
aam
dec
push
rol
notb
cwtl
push
jnp
test
push
mov
loop
add
sub
loopne
adc
mov
cmpsb
ficoml
fstpl
mov
stc
jle
pusha
cli
push
pop
mov
stc
jmp
add
inc
cmp
inc
adc
add
inc
push
ret
ljmp
lods
fidivs
pop
ret
lods
outsl
jge
lret
andl
cmpsl
pushf
andb
xor
es
cmp
pop
jmp
xchg
into
xor
pop
mov
pop
push
mov
jns
xchg
pop
xchg
stc
dec
sub
rorb
loop
xlat
jne
and
jne
adc
dec
sub
push
aas
xchg
mov
std
ror
data16
sbb
fsubs
lock
insb
add
xchg
mov
push
loopne
into
cmp
int3
sti
loopne
fdivrs
add
cli
cmpsb
jle
mov
std
cmp
adc
pop
jg
pop
std
push
sbb
es
sbb
fmuls
cwtl
or
mov
mov
jge
xchg
into
adc
jbe
jl
dec
mov
xchg
sub
add
sub
aam
xchg
mov
loopne
push
lods
mov
pusha
sub
dec
mov
shrl
ret
mov
sub
gs
jecxz
enter
cli
lock
push
cmp
sub
or
xlat
fcmovnbe
xorl
int
mov
mov
cmp
popf
xchg
dec
inc
xchg
lcall
lret
pop
in
push
and
add
ja
addl
xor
fsts
loop
jle
jmp
xor
push
and
or
ja
mov
lods
sti
test
lea
arpl
enter
sub
sub
or
cmp
nop
jle
mov
leave
or
hlt
pop
xchg
mov
xor
outsl
pop
mov
inc
xchg
mov
mov
dec
bound
addr16
xor
hlt
adc
adc
and
leave
pusha
sbbl
loop
adc
jne
jno
or
jae
dec
xor
test
cmc
lods
cli
movsb
fucom
add
sbb
or
stos
add
movsl
fcom
rcrb
xchg
pop
lcall
inc
cmp
inc
pop
sbb
enter
mov
insb
mov
mov
cmp
es
roll
fcomip
cld
push
leave
popf
push
adc
jae
jns
sahf
test
push
bound
adc
jle
dec
or
mov
out
rclb
ljmp
inc
and
sarl
xchg
in
xor
inc
and
mov
cwtl
pop
mov
popf
xchg
cmp
and
je
mov
xchg
pusha
ja
es
mov
mov
sbb
lcall
aas
std
mov
pop
lea
std
cmp
xor
mov
loope
lret
aas
stc
jae
mov
pop
xor
sbb
xor
fldcw
mov
inc
or
mov
add
addl
out
mov
jmp
in
dec
lods
mov
stc
and
adc
adc
inc
mov
repnz
mov
fxch
xchg
cmp
enter
push
ret
push
loop
cmpb
jae
mov
and
lds
jecxz
fdivrl
lods
dec
mov
push
lahf
mov
mov
imul
xchg
jg
inc
scas
cmp
add
push
and
mov
in
push
pop
aad
sbb
lods
in
inc
dec
loope
xor
xor
or
enter
cmp
or
iret
adc
pop
mov
into
jg
aam
mov
adc
dec
dec
orl
sub
shr
test
ffree
in
dec
loopne
jl
pop
or
test
daa
mov
jne
cmp
inc
push
jne
test
loop
outsb
add
shll
dec
pop
imul
adc
pop
sub
rorl
pop
sub
xchg
or
push
dec
push
aam
add
outsl
pop
jge
sub
push
imul
push
mov
or
fcomps
cli
daa
sbb
test
inc
in
jle
xchg
daa
and
or
sub
std
push
and
lds
mov
idivl
sub
inc
daa
jns
in
mov
adc
mov
jnp
pushf
mov
ljmp
stc
mov
push
adc
daa
stos
mov
int3
mov
rcrb
mov
lahf
sbb
out
js
push
fnstsw
xchg
adc
lods
pop
ret
xchg
das
jle
push
cmp
jge
js
xchg
enter
push
and
dec
adc
je
cmp
stos
insl
shll
mov
jne
lret
mov
add
insb
mov
add
mov
out
sub
add
and
movsb
pop
pop
or
and
popa
jne
std
mov
pop
cmpsl
pop
jb
movsb
in
mov
hlt
adc
xchg
or
or
sbb
lds
fucom
shrl
pop
imul
jecxz
sbb
jno
ja
sbb
mov
lcall
xchg
sub
xlat
push
das
or
and
movsl
in
lods
mov
and
fs
fcmovu
iret
dec
inc
enter
mov
in
mov
jns
push
int3
or
lea
pop
xlat
xchg
mov
adc
fnsave
fcompl
fiaddl
loope
call
hlt
pop
fsubr
mov
nop
cld
inc
xchg
mov
mov
negb
xchg
cltd
fistl
cli
insb
repnz
addb
ds
add
lds
push
mov
push
cmp
int3
adc
jo
lods
rcll
adc
jl
hlt
in
insl
add
add
mov
jb,pn
jg
jmp
ljmp
jmp
fmuls
mov
mov
subb
dec
inc
inc
jle
add
xchg
mov
push
inc
int
nop
fistl
jge
scas
mov
js
adc
pop
and
inc
adc
aad
int
jnp
push
sub
div
rcr
cmc
pop
fsubrs
jne
pop
jg
mov
stc
inc
pop
push
jno
lcall
xchg
ret
sbb
dec
nop
jo
or
xor
jbe
mov
add
add
push
mov
inc
fidivrs
cmp
xchg
cmc
mov
repz
pop
or
mov
jp
dec
sub
out
shlb
xor
loop
pusha
cltd
loope
insb
testb
cmp
mov
out
loop
sub
xchg
loopne
or
ror
mov
in
or
enter
imul
mov
lret
js
lret
lods
or
lods
sub
adcl
adc
mov
jae
dec
incb
cmp
call
movsl
jno
mov
xchg
dec
dec
mov
cli
inc
dec
int3
sbb
jo
fimull
jne
sub
push
in
sub
cld
mov
sbb
test
push
mov
repz
scas
jnp
mov
xchg
ljmp
adc
in
adc
lds
loopne
aas
inc
xchg
hlt
sarl
nop
sbbb
push
adc
push
sub
dec
fs
and
shl
add
out
jae
pop
mov
fdivrs
enter
and
jnp
mov
push
shlb
adc
jle
sbb
pop
jb
mov
test
push
push
sbb
ljmp
adc
imul
xor
aam
push
andl
enter
jg
scas
adc
jnp
fmull
addr16
repz
fstl
mov
inc
sbbl
ret
mov
cli
bound
into
pop
out
xchg
add
bnd
test
leave
mov
gs
mov
sbb
divl
hlt
imul
gs
jne
movsl
dec
gs
and
push
or
cmp
inc
push
rolb
mov
sub
shr
ret
cmp
push
outsl
mov
push
iret
dec
or
jbe
mov
daa
mov
add
leave
inc
mov
sub
inc
or
mov
std
xor
lcall
mov
xchg
arpl
push
inc
jnp
popa
mov
shll
mov
insl
xchg
adc
fucom
jo
jnp
loop
pop
xchg
pop
arpl
pop
addr16
imul
cmovno
lcall
push
pop
push
add
and
loope
and
cwtl
faddp
data16
lds
sahf
push
xchg
cmp
test
mov
jle
pop
in
test
lods
and
jp
mov
xlat
xchg
stc
inc
cmpsb
mov
je
add
jne
loopne
std
and
hlt
mov
repnz
in
xchg
clc
sbb
adc
jns
cmpsl
mov
cwtl
sub
cld
outsl
push
test
adc
cwtl
or
jne
lods
inc
adc
rcr
sub
push
inc
les
std
sub
mov
hlt
pop
mov
das
test
xchg
pop
sbb
outsb
sti
outsl
xchg
sub
hlt
or
stc
jg
icebp
push
mov
push
daa
push
rol
and
mov
mov
pop
adc
loopne
out
inc
push
cwtl
insb
push
mov
mov
repz
mov
xlat
les
dec
loop
mov
pop
mov
push
mov
mov
sbb
test
inc
inc
mov
mov
cmc
and
sub
push
pop
mov
add
lret
or
sti
out
gs
aad
cmpsb
pop
aas
xchg
mov
xor
out
sub
rcll
int
mov
out
push
and
hlt
push
adc
mov
pop
lods
call
pop
icebp
and
pop
outsl
gs
into
push
in
or
test
xchg
lret
dec
pop
adc
or
cli
jge
nop
insb
iret
push
ljmp
shrb
xchg
pop
push
popa
mov
mov
xor
mov
dec
cltd
inc
xchg
addl
sub
leave
fucom
lea
sub
hlt
pop
lds
insl
andb
jmp
or
adc
hlt
or
movsb
add
stc
add
arpl
sbb
jnp
mov
pushf
bound
inc
jecxz
lea
ja
add
pop
jg
sub
sarl
adc
ljmp
xchg
nop
cmp
adc
fprem1
push
push
shlb
stos
js
push
mov
sbbl
out
jbe
mov
dec
inc
mov
mov
xlat
inc
scas
out
stos
shlb
pop
add
and
and
stos
repnz
loop
rcrl
adc
mov
rcrb
and
xchg
and
inc
jl
cmp
shlb
loope
push
jle
adc
sub
stc
dec
ljmp
add
sub
lahf
and
lock
hlt
fiaddl
sarl
sub
stos
sub
sbb
push
sarb
movsb
loop
call
fldcw
imul
rcll
adc
daa
incl
mov
mov
cmp
inc
sti
dec
loope
mov
inc
pop
and
arpl
adc
icebp
je
cmp
and
xchg
jl
icebp
pop
nop
and
frstor
dec
aad
push
fildl
push
xchg
shrb
lret
jp
xor
scas
push
push
mov
fistl
pop
loopne
test
aaa
out
lods
adc
sub
inc
in
outsl
mov
mov
mov
mov
aas
leave
popf
jbe
scas
xchg
rcll
mov
aas
ret
aad
adc
and
shrb
mov
ja
jbe
mov
adc
pop
jnp
jae
lock
leave
ret
test
add
dec
push
pushf
mov
pop
mov
sbbl
jp
clc
sti
jns
std
mov
test
push
rclb
dec
xor
loope
rcrb
sti
stc
repnz
push
push
jmp
sbb
es
int3
sarl
hlt
cwtl
xor
int3
xor
xor
data16
jp
test
hlt
xchg
xchg
add
mov
mov
pop
popf
loopne
mov
loopne
mov
inc
cmp
adc
mov
sbb
xchg
add
xor
mov
inc
int3
data16
xchg
imull
cmp
adc
loop
lock
pop
jmp
sti
and
jmp
jno
test
sbb
data16
adc
popa
divl
or
frstor
xor
leave
loope
ljmp
shrb
sti
aam
dec
jbe
cmpsb
repz
sbb
mov
leave
out
cli
cli
lods
xchg
inc
jge
mov
inc
shl
add
push
jecxz
xorb
in
push
or
mov
pop
imul
jge
xor
mov
xor
test
les
fwait
push
fadd
mov
ljmp
xchg
stos
std
jne
mov
fstps
inc
xchg
jl
mov
fcomip
dec
test
lahf
sub
jge
icebp
aad
sub
aam
pop
aad
cltd
jno
pusha
loop
test
leave
addb
adc
je
push
pop
sub
cli
faddl
out
jecxz
inc
inc
rolb
add
push
fsubl
jmp
and
cmovnp
mov
addl
les
inc
lods
ljmp
int3
bound
loopne
jne
mov
push
loop
pop
cmp
pop
hlt
sahf
daa
aad
xlat
lret
shrl
or
insb
cwtl
ret
mov
inc
in
inc
stos
das
jne
test
mov
push
in
or
mov
push
add
enter
mov
xor
mov
fistpll
popf
notl
or
aam
push
jno
mov
inc
fcmovbe
out
out
jne
mov
sub
popa
fnstenv
insb
dec
stc
stos
ss
shlb
mov
stos
das
add
cmc
adc
shlb
sub
mov
ljmp
xor
stos
nop
out
lahf
jns
sbb
or
movsl
sub
icebp
or
dec
int3
mov
mov
sti
scas
in
push
or
mov
into
push
pop
cmp
jl
mov
subb
mov
es
lahf
and
or
mov
int
mov
jbe
cmpsl
push
les
and
adcl
mov
test
sbb
addb
and
imul
xor
shlb
in
sub
lock
pop
scas
imul
adc
add
mov
fwait
cwtl
test
cld
cli
dec
add
dec
and
adc
cmp
cli
je
pop
ds
inc
cmp
into
lret
insl
push
fiadds
dec
addl
dec
mov
cmc
or
pop
sbb
stos
fcompl
cmc
js
imul
loop
or
inc
mov
jnp
jbe
xchg
daa
mov
icebp
lret
mov
je
data16
shl
push
jns
mov
mov
stc
adc
jae
fldcw
inc
xchg
rcrb
mov
jno
fucomip
fdivr
in
adc
jmp
fistps
fs
std
fstps
loop
sub
mov
or
icebp
popf
add
rcrl
mov
int3
adc
loopne
aas
movsl
and
xor
sbb
jb
mov
jg
mov
loope
cmp
push
incl
cmp
cmp
test
sar
adc
lods
enter
xor
fs
add
and
mov
push
scas
jne
cld
mov
leave
out
ljmp
ror
loopne
mov
inc
mov
hlt
loop
xor
inc
sbb
int
adc
pop
das
std
jo
aas
enter
mov
mov
mov
dec
shr
xor
mov
xorb
jle
xchg
pop
add
cmpsl
lods
loopne
inc
ret
imul
divl
mov
je
js
dec
inc
ljmp
test
test
sub
mov
mov
hlt
jae
sub
xchg
data16
xorl
and
mov
out
das
inc
mov
fcmovu
xor
cmpsb
adc
into
pop
cli
bound
or
push
mov
daa
lret
aad
incb
adc
cmc
rcrl
insl
repz
push
movl
cli
xchg
inc
repz
iret
call
mov
aaa
scas
mov
sub
sti
insb
inc
int
xchg
fs
outsb
mov
mov
popf
sub
popf
andl
data16
mov
cwtl
dec
mov
ds
jecxz
enter
mov
jne
loope
nop
std
aas
mulb
negl
movsb
xor
aam
cmp
adc
lods
cmp
jo
cwtl
cltd
push
adc
fldt
dec
mov
xorb
sbb
shll
or
addr16
or
mov
enter
mov
hlt
dec
mov
push
pop
ret
stc
shlb
test
jne
std
clc
pop
testb
jle
shll
inc
and
mov
dec
cmpb
js
inc
mov
test
pop
and
test
add
roll
inc
dec
sub
and
jnp
fsts
cltd
and
cltd
aas
cli
scas
xchg
sarl
fcompl
inc
insb
cmp
pop
orl
adc
cmc
push
pop
lea
mov
xchg
mov
adc
mov
inc
loopne
adc
dec
lret
movsl
jne
adc
pop
fwait
lods
in
mov
lcall
xor
mov
mov
out
fcompl
cmp
ljmp
hlt
lret
and
shrb
mov
call
jo
fldl
es
jp
inc
test
mov
lods
mov
mov
and
and
les
out
mov
aaa
and
test
adc
sahf
sub
mov
xlat
pop
into
fidivrs
hlt
cmpsl
add
add
mov
mov
push
iret
popa
test
and
lahf
int3
inc
lcall
roll
and
and
pop
and
xchg
add
xor
push
shl
pop
xor
icebp
xorl
shll
shlb
mov
sti
and
jne
dec
gs
enter
inc
dec
jmp
orl
lcall
jl
pushf
mov
inc
inc
rcrl
push
xor
into
es
or
fucomi
enter
dec
add
out
in
or
aad
movsb
pop
cwtl
subb
add
scas
bound
xchg
gs
sub
xchg
gs
cmp
stos
into
mov
scas
push
xchg
mov
fdivrs
or
shl
aad
ljmp
add
add
retw
mov
cmp
test
sub
pop
push
pop
test
in
call
jp
add
dec
fwait
xchg
mov
lcall
mov
hlt
out
pop
roll
pusha
iret
add
in
loopne
mov
and
je
adc
dec
xchg
lcall
sar
or
outsb
jbe
shlb
lcall
xor
fisttpll
daa
leave
mov
test
xchg
pop
sti
shlb
dec
aas
cmc
in
addr16
loope
das
mov
inc
orb
cs
mov
lea
int
and
push
inc
mov
sub
leave
pop
lods
xor
cmp
jne
xor
fdivrl
mov
mov
xchg
sub
and
mov
mov
pusha
mov
mov
jbe
and
pop
push
mov
call
int3
fwait
adc
xchg
jle
in
push
xor
inc
stos
pop
sbb
addr16
xchg
mov
fstpl
fcomi
sbb
mov
incb
pop
icebp
mov
or
mov
sti
in
test
xchg
xchg
adc
or
iret
cmc
dec
sti
leave
adc
movsb
pop
mov
mov
fdivrs
scas
xchg
or
sbb
jge
or
jne
push
add
add
cmp
je
mov
dec
mov
push
pop
xchg
lods
jnp
and
das
mov
lods
mov
jns
movsl
lahf
push
lds
out
jne
jge
rcrl
mov
ljmp
fistps
test
dec
jge
xchg
pop
inc
loope
and
mov
sti
jae
int3
push
andb
inc
pop
xchg
fsubl
scas
and
test
cltd
mov
mov
push
out
es
pop
fcmovne
cmp
arpl
xor
int3
rclb
subl
hlt
ds
cmp
and
testb
rcrl
cs
jp
and
xchg
std
jge
jmp
mov
adc
stc
add
xchg
jp
xor
inc
mov
jne
mov
orb
push
push
xlat
add
mov
and
mov
jns
inc
mov
mov
xor
cs
mov
enter
mov
mov
mov
xchg
add
xchg
out
hlt
sbb
rcrl
cmc
outsl
cmp
cmp
inc
mov
frstor
push
pop
pop
jnp
mov
popf
dec
cltd
jmp
stc
adc
imul
mov
mov
xor
and
enter
jmp
hlt
movsb
sbb
loop
mov
ds
hlt
fisubrl
inc
fdivr
push
mov
mov
lds
sub
cmp
hlt
out
idivl
jp
adcl
sub
mov
push
push
or
out
jg
adc
cmpl
xor
in
dec
imul
push
testl
push
fbstp
pop
idivb
sti
mov
xchg
mov
add
or
sarb
inc
add
xor
lods
loope
push
cli
dec
out
xchg
imul
int3
cmpsb
and
pushf
jne
clc
gs
scas
mov
mov
cmp
mov
jae
lods
cmpsb
fsubl
in
add
loope
testb
xchg
iret
mov
mov
mov
mov
addl
in
lock
dec
jne
out
and
mov
test
push
hlt
adcl
pop
xor
popf
xlat
stos
test
loopne
insb
or
icebp
mov
and
loop
push
push
add
add
aaa
sub
jae
ss
dec
enter
push
mov
cli
test
jo
and
xchg
imul
cmp
aad
hlt
data16
push
mov
or
repz
js
cld
aam
xchg
mov
cmp
push
cwtl
xor
lahf
out
sbb
mov
pop
cmpsl
cmc
adc
andb
xchg
gs
aas
jns
test
sbb
xchg
xor
xor
sbbl
pusha
jo
mov
cmp
mov
add
add
dec
push
mov
add
pop
lds
rcr
fistl
or
inc
mov
test
or
fadds
dec
dec
jge
pop
scas
jge
jnp
lahf
in
xor
xchg
loopne
mov
jno
push
scas
jne
sarl
cmp
sbb
dec
xchg
dec
outsl
xchg
jno
jle
cmp
add
in
xorb
mov
mov
shlb
movsl
mov
mov
sbbb
sbb
lods
jle
jg
pop
into
add
cmp
hlt
sbb
and
cld
in
arpl
and
xor
mov
addl
inc
sub
sti
or
xchg
lahf
cld
mov
lods
out
cmc
jno
cli
push
push
rolb
sub
fistps
mov
jg
pop
mov
cmp
nop
cmpsl
ja
push
and
ds
dec
in
ljmp
loopne
mov
pop
jns
sbb
mov
sbb
adc
test
lret
std
dec
jne
sbb
xchg
xor
xchg
fldl
les
lret
pop
mov
in
and
mov
int
das
push
inc
pop
pop
mov
xor
rclb
fsts
add
fistpll
mov
loopne
orl
jnp
and
cmp
inc
inc
cli
or
or
fbld
icebp
daa
sbb
xchg
mov
outsl
push
or
mov
inc
cli
addr16
repz
daa
push
push
xchg
test
cwtl
mov
ret
test
adc
mov
out
push
shl
mov
call
fisttpll
fcomps
insl
inc
inc
fisttpll
cmp
or
mov
jecxz
hlt
push
stos
pop
jmp
adc
mov
sub
cmp
sub
xorl
or
inc
xchg
mull
sbb
sub
lahf
pop
es
shlb
test
add
mov
mov
jg
jmp
sbb
ja
pushf
cld
inc
fcoml
orl
cmp
dec
or
iret
mov
rcrb
aas
xorl
nop
adcl
loope
inc
fwait
jno
shrb
mov
pop
rcpps
stc
cmp
das
jge
push
or
mov
mov
lret
icebp
fadds
sbb
and
leave
popl
add
stos
mov
ds
xlat
imul
jns
push
xor
inc
xchg
sub
leave
mov
aaa
push
cmpl
adc
add
das
lods
pop
js
adc
out
popa
aam
pusha
je
pop
bound
pop
pop
dec
or
sbb
push
xor
es
xchg
mov
jne
enter
imul
rolb
lds
leave
fbld
call
shll
mov
mov
jae
sbb
mov
bound
or
push
dec
mov
xchg
pusha
mov
and
ja
push
loopne
jnp
loop
xchg
inc
je
lock
in
fnstcw
out
push
sarl
cld
mov
je
and
rol
inc
mov
push
decl
das
sti
fsub
lea
iret
and
mov
dec
jo
cmpl
ret
sar
push
mov
movsl
jle
testl
mov
movsl
faddl
imul
xor
fwait
mov
xchg
movsb
mov
jns,pn
pop
mov
imul
mov
pop
cwtl
hlt
xchg
lret
inc
lcall
or
and
iret
push
mov
mov
lods
inc
hlt
mov
cmp
cmp
or
add
jne
push
jle
mov
add
sub
adc
jl
sbb
mov
xor
lahf
xchg
das
pop
ret
fildll
add
xchg
push
mov
adc
notb
jmp
dec
cmpsl
filds
incl
movsb
cltd
test
mov
add
adc
dec
fs
outsb
jb
inc
xchg
jnp
into
jmp
mov
push
fcompl
add
daa
jge
or
pop
jb
add
hlt
and
cld
lods
push
idivb
pop
mov
inc
mov
js
ret
enter
fcmovb
cmpsb
mov
push
jg
and
jo
fwait
jne
clc
jle
xchg
and
sbb
ds
repnz
or
jecxz
jno
xor
cmp
mov
adc
sbb
into
test
jb
js
xchg
cltd
hlt
inc
mov
jge
dec
mov
clc
shlb
jmp
jl
test
add
xchg
scas
inc
sub
hlt
cwtl
mov
nop
hlt
in
test
test
cmp
lret
xchg
notl
ja
xchg
add
bound
pop
mov
xchg
in
jne
es
cwtl
xor
popa
push
mov
lahf
cltd
mov
int3
adc
push
repz
cmp
ss
sbbb
test
js
outsl
cmpsb
popa
jg
in
sbbl
into
pop
mov
cmp
lods
shll
and
mov
jne
in
divl
cmp
nop
rorb
pushf
and
outsb
lret
jne
dec
push
add
hlt
xchg
lock
sub
je
pushf
inc
dec
inc
rcrl
andl
and
lahf
jecxz
inc
lods
mov
mov
cmp
test
int3
sahf
addl
cmpsl
push
xlat
cli
mov
adc
mov
repnz
push
mov
rcr
mov
std
fnstcw
ljmp
cld
pop
dec
clc
test
lods
ljmp
dec
xor
lock
fbld
mov
cmp
arpl
cpuid
cmc
cwtl
enter
push
dec
das
in
inc
mov
test
fstpt
or
mov
scas
arpl
js
aas
mov
cmc
andl
push
mov
cmpl
dec
cmp
lahf
hlt
pop
popl
lret
in
jmp
or
pusha
mov
xchg
int3
ja
add
ret
aaa
jne
fisubrl
pop
cmp
sbb
jmp
fdivs
sub
rclb
cmp
or
mov
pop
pop
mov
xor
loopne
or
mov
mov
bound
imul
jl
sub
push
xchg
mov
jne
push
push
rcrl
mov
fwait
cltd
mov
das
cmpsb
pop
arpl
jno
shlb
push
mov
in
pusha
hlt
mov
inc
inc
mov
mov
xor
inc
inc
in
sbb
mov
gs
cmp
jae
jnp
push
pop
add
inc
and
mov
mov
outsb
inc
out
pop
push
in
jne
add
fsubr
test
movsl
pop
pop
push
ss
ret
incl
imul
sbbl
sbb
mov
hlt
jno
jns
addr16
and
in
jbe
jnp
mov
scas
dec
sti
or
stos
cmpsl
ret
add
or
xchg
jnp
scas
cmpsb
icebp
mov
outsl
push
ja
repz
sub
lahf
mul
add
dec
pop
lcall
sbb
idiv
fs
adc
mov
or
xor
enter
mov
and
lcall
out
ret
inc
xor
int3
dec
dec
dec
jp
push
nop
sti
jne
xchg
jl
in
push
loop
in
mov
mov
mov
std
mov
test
lret
not
inc
cmp
dec
inc
mov
dec
xor
cmp
inc
sub
orb
in
jnp
pushf
pop
jmp
adc
and
xchg
xorb
pop
gs
sti
call
jle
ljmp
jne
pop
lods
cli
pop
imul
push
or
inc
addr16
cmp
xchg
dec
es
cmc
adc
push
sub
mov
movsb
xchg
mov
loopne
cmp
jle
test
inc
push
les
jecxz
faddl
push
and
mov
jle
aaa
mov
loope
push
gs
subb
mov
cmp
mov
jne
pushf
or
dec
push
push
addr16
roll
aam
popa
gs
test
or
and
je
out
push
inc
push
rcll
jp
dec
je
pop
mov
fiaddl
nop
pop
mov
popa
xor
adc
aad
outsl
vmfunc
inc
xor
cld
xlat
lock
mov
mov
cmp
rorb
add
push
stc
les
imul
xchg
pop
addb
xchg
fucom
xor
add
pusha
push
sbb
push
xchg
pop
sbb
add
pusha
ljmp
pop
or
lret
adc
std
cmp
jge
loop
inc
xchg
fbstp
fdivl
jo
cmpsl
mov
xor
std
icebp
add
in
das
lahf
mov
int3
mov
or
or
int
adc
sbb
mov
lock
and
cmp
sbb
mov
cmp
cmc
shll
js
orb
test
xor
jne
dec
sbb
xor
xlat
scas
jo,pn
std
mov
enter
fsubl
mov
dec
push
call
pop
pop
ljmp
inc
mov
xchg
dec
imul
es
push
mov
mov
int
rolb
sbb
pop
stos
icebp
push
mov
jp
es
leave
dec
in
cmp
test
pushf
dec
les
arpl
popa
and
mov
jle
bound
lock
cmp
div
adc
inc
das
xor
inc
loopne
fildl
push
int
into
js
sbb
add
mov
int3
fdivs
push
int
xor
ljmp
loope
inc
mov
int3
les
inc
sub
mov
dec
iret
lcall
fwait
pusha
arpl
movsb
jo
movsb
jle
push
fdivl
sub
test
int
push
mov
xchg
test
and
jo
call
jns
ja
cld
pop
or
mov
dec
into
jnp
xchg
add
divb
xor
inc
or
sbb
nop
push
lods
jne
movsl
xlat
inc
sarl
cmpsb
fldcw
shll
dec
int3
xchg
ret
mov
aas
or
insb
jo
pop
test
pop
push
aad
or
jnp
test
xorl
mov
ja
and
push
or
and
in
das
jge
inc
fs
test
inc
hlt
xor
lcall
fstp
xchg
lods
mov
ljmp
ret
add
and
in
hlt
adc
fbstp
fld
rorl
cmp
mov
xor
jno
stos
and
mov
addr16
xchg
loop
cmc
lods
sbb
xorl
cs
cwtl
push
nop
sti
push
inc
scas
repz
adc
pop
jnp
out
mov
sahf
les
and
push
inc
push
hlt
jae
jmp
add
repnz
sbb
xlat
jg
adcl
or
dec
mov
cli
and
mov
cmp
xchg
lods
cmc
nop
mov
pop
or
or
dec
std
push
mov
cvtdq2ps
jbe
inc
xchg
lods
sbb
jns
and
xor
mov
jge
xchg
mov
imul
sbb
rolb
dec
shl
rol
ret
or
movsb
jno
cld
rolb
addb
add
sarl
mov
repnz
out
movsb
fsts
mov
mov
xchg
add
cltd
adc
mov
inc
decl
lret
mov
into
push
dec
stc
cmp
jno
fsts
jg
sbb
cwtl
adc
testl
je
testb
into
jbe
cmpsl
inc
mov
jle
pusha
push
xor
mov
movsb
hlt
inc
mov
mov
jne
or
push
ja
test
dec
popa
xchg
testl
arpl
stos
mov
adc
addl
or
mov
das
pop
les
stc
lods
cli
jbe
sub
mov
sti
orb
insl
fimuls
pushf
mov
inc
xchg
lock
popa
push
mov
addb
dec
leave
xchg
jl
mov
ds
test
mov
pop
push
lods
scas
test
movsb
icebp
imul
inc
or
lock
pop
rorl
outsl
aam
testb
xor
js
xor
cmpsl
lret
jae
lret
fs
xor
hlt
cs
mov
cld
mov
imul
popf
cmpb
std
loope
mov
pop
bts
add
or
getsec
xchg
jmp
mov
mov
lcall
mov
xchg
mov
cmp
cwtl
inc
mov
sahf
cmpsl
inc
sbb
mov
cli
add
adc
add
jmp
push
lods
sar
inc
loope
add
xor
jbe
push
aam
jp
cltd
fwait
sarb
cwtl
dec
in
stc
add
dec
xchg
jne
adc
fnstenv
and
xchg
pop
dec
nop
mov
adc
mov
push
xchg
pop
into
xor
push
pop
mov
mov
pop
dec
mov
sbb
inc
inc
addr16
push
ljmp
xchg
xchg
mov
cltd
cwtl
scas
jbe
out
pop
popa
add
push
xchg
sti
mov
clc
stos
cs
repnz
jne
pop
inc
fimuls
cmp
ffree
dec
adc
popa
sbb
xchg
movsl
pop
sbb
sbb
mov
mov
in
inc
fsubrl
sahf
add
js
xor
stc
test
or
decl
scas
es
cwtl
mov
pop
or
mov
leave
icebp
mov
in
dec
outsl
adc
push
mov
nop
mov
xchg
or
sbb
movsl
std
ljmp
xchg
jne
ss
mov
xor
scas
les
stos
icebp
or
inc
jmp
inc
outsl
out
adc
addr16
stos
push
hlt
xchg
inc
pop
adc
inc
adc
movsb
enter
mov
sub
push
mov
mov
mov
push
pop
or
int
dec
or
push
jl
or
clc
inc
mov
cs
dec
mov
outsl
xor
inc
incl
jmp
shll
adc
mov
pop
insb
movsb
jnp
enter
addr16
adc
push
xchg
xor
add
inc
jns
cmp
mov
inc
roll
jno
mov
nop
decl
fstps
add
jne
icebp
clc
in
lret
push
jmp
push
test
jecxz
in
or
xchg
lahf
pusha
sti
lods
icebp
cmp
sub
ror
pop
jecxz
les
add
and
daa
rolb
push
add
sub
jbe
je
mov
loopne
push
push
sbb
hlt
push
adc
cmp
xchg
push
popl
sbb
push
mov
add
movsl
hlt
test
pop
push
jno
jmp
dec
movsl
mov
inc
dec
cmp
push
mov
or
push
faddl
jo
outsl
mov
stc
sbb
or
cmpsl
aam
data16
sti
push
mov
dec
sub
flds
or
add
inc
mov
mov
dec
mov
scas
dec
dec
pop
ss
enter
mov
dec
add
push
fsts
inc
or
jne
ljmp
and
xchg
mov
and
shl
pusha
lods
xor
leave
mov
cmc
shlb
sub
lods
sbb
xchg
and
cmp
jno
ror
js
cwtl
nop
push
ljmp
rclb
add
stos
pop
or
adcl
jns
shlb
out
std
rol
and
push
ds
scas
imul
mov
jle
and
mov
inc
repnz
movsl
scas
orl
inc
shll
or
inc
pop
daa
pop
pop
mov
inc
lcall
stc
aas
dec
test
jbe
in
and
dec
popa
xchg
gs
xchg
ds
adc
xor
and
nop
and
jnp
push
int
sbb
cli
pop
ror
pop
mov
inc
out
or
rorb
jbe
jb
or
out
outsl
adc
mov
cmpsb
fs
mov
je
sub
stos
adc
pushl
cmpsl
subl
mov
mov
xchg
push
dec
aad
push
loopne
jge
cmp
mov
bound
mov
sbb
cmpsb
push
dec
out
xchg
rorb
mov
fwait
sti
add
mov
xchg
or
test
sbb
sub
push
aad
inc
inc
hlt
mov
sbb
insl
filds
jp
inc
mov
cmc
bound
jge
adc
mov
aad
fwait
mov
mov
jo
outsb
jo
inc
and
or
es
lds
and
sbb
mov
mov
or
js
mov
add
cwtl
mov
insl
leave
or
mov
add
jge
sbb
mov
mov
jnp
jg
loop
movsb
add
cli
xchg
sub
add
stc
cmp
xchg
push
and
push
mov
lahf
xchg
sarl
xchg
xchg
pushf
push
daa
sub
add
inc
addb
push
leave
mov
dec
std
fsubrl
pusha
aam
es
js
adc
jecxz
jbe
xchg
jl
sub
cmp
adc
or
sti
inc
sub
bound
loope
fsubrl
mov
test
mov
test
cmp
les
xorb
cmp
in
test
repnz
out
sti
sub
xchg
hlt
sub
lods
mov
or
stos
xchg
lods
ret
std
in
sahf
push
xchg
sbb
lods
lock
in
adc
fwait
aad
aam
rolb
sub
or
or
and
inc
jbe
xchg
outsl
xchg
movsl
daa
cld
lret
xor
add
push
ljmp
insb
lods
scas
js
outsl
data16
sahf
std
mov
pop
test
fs
xchg
mov
or
stos
xlat
aaa
jbe
jne
mov
jg
cmpsl
clc
or
adc
repnz
iret
repz
pop
imul
out
loopne
lods
xchg
hlt
adc
cwtl
daa
idivb
jo
les
xchg
push
rclb
cmp
or
dec
add
sahf
pop
out
je
adc
pusha
lods
fsubrs
mov
les
enter
sub
jle
ret
sbb
push
mov
mov
out
mov
and
add
add
cmp
loope
into
sti
iret
mulb
add
sbb
xor
divb
inc
imul
xchg
out
sbb
cmp
mov
test
popa
ret
push
loopne
cltd
or
cli
stos
mov
aam
push
xor
mov
dec
jge
mov
add
sbb
repnz
stos
xor
sahf
xchg
arpl
lret
hlt
fidivrl
adc
mov
xchg
push
cli
jne
add
sbb
add
sti
imul
mov
repz
movsb
sbb
xorl
push
mov
adc
sbb
ss
sub
stos
sub
push
mov
pop
movsl
dec
leave
hlt
cs
mov
mov
inc
xlat
lds
fwait
mov
mov
dec
push
insl
mov
ret
filds
mov
call
pop
and
mov
mov
popa
hlt
lea
aaa
add
xorb
sub
arpl
jle
cmpl
orb
iret
lods
and
push
test
pop
mov
icebp
inc
ret
aad
xchg
orb
adc
mov
movsl
aad
fwait
sub
xchg
inc
roll
lock
gs
sub
mov
pop
mov
mov
sbb
xor
adc
int
fbstp
mov
xchg
pop
mov
in
xchg
adc
repz
in
mov
push
or
orb
scas
outsb
std
mov
stc
inc
add
mov
lcall
push
lock
and
loope
aad
xlat
insl
shl
xchg
sbb
call
loope
jne
icebp
loopne
hlt
pop
jae
std
mov
flds
push
scas
jp
in
sub
loopne
xor
jns
cmp
sub
xchg
scas
cmp
clc
movsb
jmp
cmp
jo
popf
dec
testb
test
cli
xchg
dec
fdivrp
inc
and
pop
rcl
cmp
or
call
inc
notl
dec
stos
popf
add
mov
push
mov
push
add
xchg
mov
pop
rcrl
xor
mov
in
inc
mov
adc
enter
jnp
adc
jle
adc
lret
mov
sub
imul
movsb
mov
and
pop
out
mov
in
clc
xchg
pop
daa
cld
adc
sub
xchg
inc
scas
xchg
ljmp
sub
mov
xor
jg
and
push
cmp
mov
mov
and
aaa
mov
rcrb
rcl
xchg
mov
fldcw
cltd
cmp
jge
shrl
cwtl
adc
ja
shrb
gs
jl
or
insl
xchg
add
push
push
adc
in
lock
add
imulb
or
inc
sbb
insl
inc
jecxz
jl
mov
and
sbb
test
lea
sub
jbe
popa
mov
cli
das
mov
mov
in
xchg
or
add
add
xor
mov
adc
add
enter
adc
push
clc
dec
sbb
stc
jo
push
sti
jne
das
ret
clc
aam
push
jp
push
xor
fisubrl
add
jns
ret
loop
movl
pop
test
mov
dec
push
cmp
mov
int
jbe
mov
cmp
fnstsw
lock
adc
scas
movaps
gs
xchg
dec
scas
mov
mov
sti
mov
rol
mov
mov
mov
adc
daa
rcr
push
jp
inc
mov
jne
mov
bnd
adc
fistl
sbb
and
testb
cli
enter
test
jo
fadds
adc
push
ljmp
jl
jne
imul
in
flds
add
xor
cli
sbb
test
or
subl
in
popfw
cs
lcall
ljmp
cmpsl
popa
xchg
hlt
or
inc
enter
dec
testb
mov
or
cwtl
sub
add
shl
ficompl
sub
idiv
adc
add
cld
inc
or
lods
jnp
xchg
add
adc
aam
dec
jmp
push
jmp
outsl
xchg
mov
out
add
xchg
lcall
call
adc
das
imul
test
or
jae
lcall
xchg
sbb
roll
loopne
ljmp
enter
sub
mov
shlb
or
adc
int3
mov
outsl
test
pop
xchg
pushf
cmp
test
mov
add
mov
sub
dec
pop
repnz
mov
in
pop
pop
sub
push
add
mov
add
mov
or
stc
out
arpl
in
adc
jne
push
mov
test
pop
jne
es
jno
int3
fld
xchg
fnstsw
lods
sbb
mov
test
fdiv
cmpsb
pop
xorb
lahf
mov
jbe
not
add
addb
sarb
mov
inc
stos
ret
cltd
jmp
add
jl
cli
dec
test
cmpsl
test
cwtl
xchg
sub
push
sbb
mov
cmp
xor
int
xchg
inc
into
push
cli
sbb
xchg
mov
mov
hlt
loop
rcr
xor
leave
mov
jp
jge
cwtl
pop
adc
rolb
jne
sarl
loope
test
pushf
scas
fcoms
cmp
fdivrs
mov
fildl
nop
dec
adc
int
pop
fmull
cld
sub
or
adc
addr16
cmp
lock
mov
cld
std
pop
into
arpl
test
lds
out
scas
add
lcall
xchg
ret
mov
jmp
inc
mov
dec
popa
dec
push
int
mov
pop
loopne
jno
hlt
mov
sub
inc
jne
dec
sbb
mov
mov
das
clc
fcomip
pop
cwtl
jg
popf
pop
ss
and
mov
test
pop
hlt
lds
int3
fiadds
lods
mov
out
fldl
jne
cwtl
fcoms
sub
cmc
lods
dec
out
inc
ds
insb
loop
lods
movsl
or
outsl
mov
jae
cld
gs
mov
adc
xor
inc
mov
mov
mov
add
rorl
sbb
cmp
push
xchg
dec
incl
push
sub
hlt
xchg
lcall
stos
fistps
or
mov
push
pop
sub
lcall
pop
pop
xchg
rol
addr16
cmp
push
out
or
xor
add
divl
nop
pusha
dec
xchg
orb
lret
sarb
or
and
fcmove
sub
cmc
pushf
fcompl
scas
xor
pop
sub
scas
and
jne
mov
sbb
push
cwtl
mov
push
cmpsl
pop
lds
jne
mov
pusha
repz
dec
inc
adc
mov
mov
insb
jo
rorl
out
lcall
into
push
cmpsb
add
out
std
enter
xchg
movsb
inc
dec
test
lds
mov
js
in
sahf
shl
enter
pop
adc
mov
int
or
movsl
jecxz
jmp
out
fs
jge
or
aam
insb
nop
repz
roll
rorl
ret
xbegin
and
push
leave
sub
mov
sbb
mov
xor
sarl
int3
or
jne
xchg
clc
dec
pop
mov
inc
or
bound
sbb
idivb
ds
stc
arpl
inc
sbb
das
jns
ret
jl
mov
mov
xlat
enter
lods
shll
mov
in
and
inc
loopne
xor
ljmp
and
repz
hlt
out
xchg
mov
lds
movsl
cli
test
mov
int3
call
inc
jnp
add
push
lcall
sarw
mov
sbb
aas
stos
outsb
shll
test
jne
pop
inc
adc
sub
lods
rorb
aad
rclb
rclb
scas
sub
rcll
lret
sub
adc
fstpl
or
mov
movl
lcall
mov
stc
and
stos
jmp
orb
inc
jp
mov
stos
pushf
mov
sbb
insb
inc
sub
fsubrs
mov
out
nop/reserved
je
insb
into
ja
adc
ja
dec
jecxz
popa
pop
xchg
or
and
arpl
mov
je
xchg
cs
push
jecxz
xchg
jns
imul
push
ljmp
sti
adcl
out
jp
faddl
lcall
shl
push
rcl
nop
leave
dec
sub
cmp
out
lcall
jg
or
mov
lods
scas
pop
movsl
cmp
enter
or
movsb
mov
loop
push
clc
inc
jne
and
xlat
cmp
fistps
or
test
rcr
add
mov
repz
addb
and
inc
outsb
imull
aad
sub
nop
mov
mov
js
mov
mov
jo
mov
mov
popa
fidivrl
fldcw
lcall
pop
mov
in
popa
decb
dec
mov
dec
aas
adc
push
andb
imul
pushf
inc
pop
xadd
push
mov
sub
sbb
fdivs
xchg
sbb
xorb
out
pop
leave
test
push
sub
fst
xchg
stc
push
push
adc
in
nop
lcall
in
insb
and
pop
sbb
lret
pop
jge
es
leave
pusha
mov
jns
dec
sarb
fidivs
add
add
outsl
mov
rolb
pop
jl
adc
pusha
lret
in
and
jne
pop
negl
mov
cs
mov
xor
mov
imul
dec
movsl
decb
jmp
arpl
jle
xchg
add
hlt
xor
mov
xlat
pop
push
hlt
icebp
jbe
adc
mov
cli
out
movsl
mov
pusha
jno
jne
mov
shrb
loop
pop
lcall
push
lea
test
adc
sbb
push
cmpsb
stos
pop
mov
stos
stc
mov
ja
lahf
je
shlb
data16
mov
insl
test
movsl
nop
cmpsb
xor
aam
leave
enter
push
xor
push
cmpsl
lock
jp
imul
int
jl
aad
mov
std
sbb
and
mov
add
in
jle
or
movsl
cmp
push
pop
in
xor
xor
add
mov
sub
mov
jns
push
pop
xchg
cmp
and
pop
ret
sbb
in
scas
idivl
mov
mov
imulb
aad
lret
call
xor
mov
call
mov
cwtl
or
lahf
mov
dec
decl
aad
mov
mov
push
fld1
cmp
jo
rcll
cmpl
cltd
xchg
mov
mov
sbb
sbbb
lods
sub
xchg
inc
mov
lret
mov
mov
aad
pop
testl
and
jo
cli
push
adcb
mov
in
pushf
mov
push
fs
fcompl
cmpsb
std
jg
xchg
aaa
testl
mov
ljmp
insb
sti
push
dec
icebp
leave
push
inc
push
fiadds
leave
sbb
cmp
mov
mov
jl
nop
pop
pop
xchg
mov
jle
pusha
nop
or
loope
hlt
loopne
rorb
lret
add
and
pop
fildll
pop
les
xchg
dec
nop
gs
hlt
jne
movsl
sub
sbbb
clc
push
aad
gs
add
push
fists
adc
sbb
jnp
scas
mov
jnp
dec
push
outsl
mov
jmp
jne
cmpsl
call
push
iretw
push
adc
cmpsl
lret
ret
int3
fadd
add
mov
ret
mov
out
enter
sub
mov
nop
std
stc
add
push
mov
jl
into
enter
fwait
xchg
outsl
ja
xor
adcl
inc
mov
jle
inc
das
push
les
add
stos
outsl
shlb
mov
dec
adc
loope
adc
dec
inc
or
push
bound
hlt
rcrl
lret
mov
and
jnp
mov
lcall
xchg
orl
dec
dec
das
int3
xchg
sti
insb
hlt
dec
xor
test
dec
out
rorl
fmuls
jnp
and
mov
test
aad
mov
testb
adc
xchg
xorl
mov
dec
rol
jno
jge
push
and
push
sarb
mov
into
cmp
push
sub
cli
mov
sub
inc
int
xor
dec
outsb
sti
xchg
cmp
mov
daa
cmpsl
mov
add
cmp
adc
stc
mov
jne
cmpsb
or
in
inc
sbbb
loopne
xlat
mov
xor
or
sub
movsb
push
repnz
hlt
rolb
cmc
dec
cltd
imul
dec
sbb
cmpsl
push
js
mov
push
xchg
push
mov
mov
stos
imulb
pusha
xchg
xor
mov
push
je
hlt
jle
xor
adc
push
lcall
xor
mov
call
inc
xor
mov
mov
lea
notb
ret
or
daa
mov
es
popf
popf
fstl
cmp
add
lock
das
ret
jae
inc
movsb
pushf
hlt
mov
and
jl
pop
dec
mov
in
push
negl
or
jge
jge
lods
sub
in
xchg
or
mov
inc
push
gs
mov
pusha
mov
ffree
sbb
scas
inc
mov
stc
je
scas
incl
xchg
pop
pop
popa
adc
ljmp
dec
lcall
xor
aam
leave
mov
nop
stc
cli
das
mov
push
in
imul
out
xchg
dec
mov
insb
xchg
testb
scas
xor
inc
push
ret
js
jp
in
adc
stos
cmp
push
mov
mov
insb
xchg
cmpsb
mov
outsb
add
pop
pop
cmp
inc
fidivl
xchg
clc
in
add
sub
insl
jge
jne
inc
std
push
movsb
push
sub
js
out
adc
test
mov
test
jne
pop
movsb
push
or
int3
hlt
sbb
add
push
fdivs
xor
daa
cltd
mov
lahf
enter
fmull
jnp
push
fdivs
rcrl
into
scas
filds
das
rcrb
fcmovne
inc
pop
jmp
or
push
mov
add
loope
or
pop
cwtl
pop
xchg
xchg
xor
roll
das
or
jae
loop
pop
mov
pushf
lods
add
mov
add
push
xchg
hlt
push
loopne
fimuls
test
sub
or
loope
add
sub
cmp
mov
test
aaa
push
mov
mov
repnz
cmp
jmp
inc
inc
and
jns
out
pop
pop
xchg
sub
cmpsb
jno
inc
hlt
inc
sbb
les
sbb
add
aad
pop
jmp
inc
mov
pop
dec
aas
adc
js
dec
mov
lock
lret
fldl
enter
fcompl
jb
flds
lods
xchg
cmp
shlb
scas
es
test
or
fs
sets
pop
jp
enter
enter
inc
and
sbb
or
mov
in
lcall
mov
movsl
test
mov
xchg
sub
fidivrl
add
mov
xchg
push
adc
add
jne
shl
addr16
jp
enter
jae
sarb
mov
loopne
adc
jno
repnz
dec
icebp
lock
pop
int3
xorb
dec
lea
mov
jae
inc
test
mov
int3
mull
leave
xchg
les
jne
sahf
sbb
fldcw
sub
adc
icebp
mov
inc
adc
ret
cmpsb
es
cld
xchg
push
jg
sbb
sub
sti
nop
int3
test
adc
gs
cli
clc
loope
into
sub
scas
add
imul
int3
jnp
in
das
push
jne
cs
xor
call
in
jg
iret
orl
xchg
mov
jae
or
js
scas
push
call
adc
fistpll
sub
mov
mov
mov
pusha
icebp
add
jne
imul
out
scas
hlt
jp
std
add
les
lret
mov
push
mov
arpl
dec
pop
shrl
out
mov
test
jge
inc
pop
dec
out
xchg
roll
add
into
mov
dec
enter
imul
cmpsb
aas
lret
mov
or
mov
push
xchg
mov
sbb
ja
loopne
arpl
jmp
push
out
into
pop
in
mov
in
add
dec
jle
aam
lret
add
filds
sbb
jno
jge
dec
hlt
jne
das
loop
xor
in
and
aad
mov
out
mov
xorb
xor
pushf
scas
cmpsb
andl
add
or
clc
sbb
adc
add
or
movsb
out
lahf
daa
push
cmp
xchg
shr
neg
cmpsl
dec
in
xchg
hlt
aam
sub
push
cmp
jnp
jbe
dec
add
push
jl
iret
xchg
mov
dec
jle
addr16
fnsave
inc
jo
roll
in
scas
std
add
cmp
hlt
mov
inc
daa
sahf
xchg
cltd
add
jl
shlb
push
in
push
movsl
stc
out
inc
jl
mov
mov
mov
push
sbb
mov
cmp
pop
mov
arpl
mov
stos
sti
mov
std
out
movsb
cmc
les
dec
mov
xor
dec
repz
shrb
mov
push
hlt
dec
rep
mov
cmpsb
negb
pop
es
rclb
sarb
jno
xor
pop
hlt
cmp
mov
mov
push
cmpsl
enter
cs
add
sub
data16
loope
jge
add
sub
sbb
cmp
clc
xor
xchg
into
das
orl
dec
mov
sahf
jno
test
sbb
test
dec
std
negb
rorl
lea
sub
inc
cwtl
mov
inc
inc
sbb
adc
imull
aad
popf
das
xor
mov
jne
popa
test
mov
test
andl
enter
inc
pusha
mov
lock
lods
cwtl
in
xchg
dec
test
mov
xor
cmp
dec
xchg
dec
mov
sbb
in
jg
andl
jbe
jge
mov
inc
int3
imul
addr16
divl
loop
inc
das
cmpsb
in
es
xor
jne
push
hlt
cs
loope
jnp
aas
faddl
xchg
fstps
fcoml
movsl
adc
push
popf
jl
loope
fildll
popa
mov
leave
imul
sbb
adc
jns
mov
push
pop
pop
and
dec
inc
dec
into
and
cwtl
add
push
cmpsb
sbb
aam
imul
ror
rcrb
and
push
and
sbb
imull
cli
pop
and
mov
mov
pop
jp
adc
lcall
mov
pop
or
andl
lods
mov
aad
jge
adc
inc
push
subl
inc
inc
fcoml
mov
push
out
pop
push
push
mov
sub
or
rcr
push
fisttpl
add
pop
mull
mov
ja
leave
fistps
mov
data16
int3
addl
call
jg
movsl
cld
xor
fadds
sti
mov
xor
jns
mov
js
xchg
icebp
shrl
cwtl
mov
stos
dec
insl
sahf
xchg
inc
xchg
pop
stos
sub
repnz
sbb
jmp
xchg
cmp
dec
add
adc
jge
mov
mov
into
jo
fsubrl
daa
mov
pusha
push
jbe
add
mov
andl
pop
mov
jp
mov
sub
adc
jecxz
push
cld
adc
jb
cld
mov
xchg
orb
mov
test
das
enter
xchg
popa
mov
mov
or
jnp
inc
xorl
insl
div
adc
cwtl
aaa
jne
enter
add
scas
mov
test
test
and
idivl
ret
daa
cmp
das
popf
cltd
mov
jl
xchg
xor
lahf
lds
into
les
aam
loopne
adc
dec
scas
fwait
sub
fwait
or
ja
lret
xor
jbe
mov
mov
call
inc
loope
shlb
test
scas
mov
pop
mov
test
dec
mov
ja
pop
insl
inc
add
ret
dec
pop
cmove
pop
pop
xchg
sub
xorl
push
addl
lods
adc
and
shll
data16
cmp
pusha
rclb
dec
add
mov
inc
sub
or
arpl
mov
mov
push
cmp
out
xchg
pop
testb
adc
outsb
les
fsubrl
and
jmp
add
leave
add
add
adc
mov
mov
jg
dec
xchg
jmp
add
jb
add
xor
roll
mov
lods
inc
lods
into
xor
sbbb
cmp
push
dec
lret
nop
push
xorb
sbb
or
fimuls
clc
mov
int
jge
adc
enter
shll
popf
xchg
aaa
lcall
xchg
cmp
or
push
popw
mov
stos
jne
aam
push
arpl
loopne
movsb
jo
ds
ss
sahf
dec
pop
int3
add
and
xchg
shrl
adc
lret
orl
hlt
jecxz
sbb
fsubl
mov
iret
pop
xor
test
push
nop
bound
fldcw
hlt
aad
popa
pusha
xlat
pop
sahf
lea
push
repnz
mov
js
dec
scas
or
jecxz
orl
sub
rclb
mov
mov
inc
jle
or
mov
cmc
push
mov
jecxz
add
pop
or
incb
add
push
pcmpeqw
and
test
push
adc
hlt
mov
hlt
sub
fimuls
shrl
stos
cmp
hlt
xor
mov
add
outsl
jle
add
jns
sbb
pusha
xor
divb
out
sbbb
cltd
sti
ret
inc
mov
aas
or
clc
sub
cs
int
pop
mov
push
add
pusha
mov
test
add
fisubrs
lcall
nop
pop
hlt
pop
inc
and
int3
mov
addl
iret
stc
jp
mov
bnd
aam
mov
jle
mov
mov
incb
mov
mov
mov
xor
test
jno
ss
push
mov
fwait
cmpsb
pop
mov
leave
int3
nop
pop
pop
sbb
cld
cmpsb
sub
aaa
jge
jl
sub
sub
into
xchg
mov
xor
fistps
inc
sub
mov
sub
lret
mov
jne
pop
jnp
push
loopne
stc
cltd
lret
cmpl
sbbb
sub
lods
xor
mov
call
dec
loop
sahf
test
jbe
mov
or
addr16
inc
sub
data16
cwtl
push
subw
lret
je
std
arpl
push
mov
out
stos
add
xchg
jo
mov
mov
stos
outsb
mov
or
loope
sbb
mov
add
jg
fisubrs
es
pop
inc
cmpb
in
gs
mov
test
aad
inc
mov
xchg
inc
repnz
xchg
mov
addb
repnz
ljmp
xlat
sbb
ds
loope
popa
jge
out
dec
jmp
imul
mov
or
mov
mov
inc
push
lahf
cmp
mov
push
dec
cld
cmp
mov
das
enter
cli
sti
sub
jle
dec
out
sub
xlat
lea
outsl
cmp
es
fwait
adc
add
stc
fbstp
pushf
or
mov
jp
outsl
inc
push
mulb
adc
das
int3
push
jne
pop
mov
ja
sub
insl
xchg
sbbb
enter
dec
dec
mov
mov
pop
scas
jno
leave
jge
adc
imul
fists
movsl
inc
sbb
cmpsb
dec
jne
push
test
pushf
xchg
insl
leave
ret
scas
fcmove
in
lahf
xchg
jo
jg
jne
adc
lret
push
movsb
cmpsb
mov
iret
pop
pop
frstor
mov
dec
add
or
jg
mov
push
mov
push
jbe
inc
jno
cmpsl
pop
push
jne
mov
pop
mov
imul
push
mov
mov
mov
add
xor
mov
mov
shl
fidivrs
mov
aam
push
lock
xlat
test
out
push
push
sub
mov
stos
lea
clc
into
mov
loopne
icebp
add
jg
pusha
lods
pop
mov
or
mov
or
xchg
adc
xchg
cmp
cltd
cmc
xor
sbb
and
outsl
cs
jns
pop
xchg
imul
jb
mov
mov
hlt
dec
fiadds
push
jl
mov
mov
jl
mov
shlb
repz
or
rcr
cltd
inc
cltd
les
add
add
xor
in
ret
imul
or
cs
mov
add
inc
jnp
mov
jno
add
test
lods
pop
inc
dec
or
adc
push
or
test
pop
push
sbb
ret
xchg
push
nop
aas
dec
mov
jne
mov
cwtl
mov
push
orb
mov
mov
rcr
mov
iret
les
mov
pop
shrb
mov
aam
rol
mov
sub
jae
xchg
push
sbb
mov
imul
fst
das
pushf
sub
sub
push
pop
loopne
xchg
cmpsb
jae
pop
mov
sub
enter
in
movsb
xchg
mov
push
mov
pop
cmp
loope
cmp
lods
jne
xor
xor
pop
test
cmpsl
or
lcall
dec
mov
andb
notl
enter
mov
in
add
xchg
inc
cmp
sbb
test
fstpt
xor
add
sub
popa
enter
lahf
rclb
mov
sahf
mov
mov
add
lcall
mov
loopne
inc
mov
imul
sbbl
enter
sub
arpl
inc
dec
add
add
std
enter
lret
comiss
in
sub
or
and
pop
cltd
into
push
fbstp
pop
cmpsl
movsl
call
sub
adc
orb
cld
jo
out
lret
loope
popa
mov
jo
testb
pushf
dec
aas
sbb
cmpsb
sub
jecxz
sbbl
mov
dec
decb
enter
xlat
movsb
mov
cmp
adc
jp
repz
sbb
dec
mov
mov
icebp
pop
mov
rcll
repz
lds
or
scas
push
xor
mov
push
outsl
mov
jle
pop
sub
push
lahf
cmpsb
and
mov
repnz
pop
mov
xorl
mov
mov
test
dec
pushf
dec
sbb
int
pop
cmpl
stos
fldl
sbb
out
inc
leave
cli
mov
push
lods
fs
addr16
inc
cmp
loope
outsl
pop
imull
jl
cmpl
mov
inc
stc
mov
sub
jge
std
cwtl
cs
inc
pop
or
jns
gs
movsb
xchg
cmp
fdivrl
inc
adc
mov
cld
popa
lcall
dec
jge
xchg
add
pusha
add
out
mov
dec
sbb
xlat
or
ffree
jg
popa
sub
adc
cmc
fdivl
push
mov
das
add
mov
adc
xor
xchg
push
mov
sub
cmp
rol
mov
ds
ljmp
in
mov
xchg
inc
add
mov
pop
scas
stos
test
data16
scas
push
push
xchg
hlt
test
pop
xchg
cmp
das
popa
inc
push
adc
inc
rolb
shll
std
dec
loopne
out
pop
mov
out
inc
mov
rorb
mov
insl
mov
shrb
hlt
call
adc
outsl
mov
mov
stc
out
aaa
push
jg
jmp
aad
push
inc
jle
mov
jne
adc
divl
add
hlt
divl
push
sub
jbe
jns
xorb
clc
mov
adc
std
insl
jns
sbb
dec
cli
std
ss
jle
shlb
test
xor
andb
jl
fadd
pop
aad
mov
enter
pop
mov
adc
pop
mov
and
mov
dec
jbe
sbb
std
mov
outsb
inc
shrl
mov
test
xor
add
ljmp
sbb
into
ret
and
aam
dec
hlt
mov
fstl
jne
and
mov
mov
adc
cmp
in
dec
shl
fs
sbb
add
aam
lods
sub
sbb
push
or
stc
repnz
leave
movsl
sub
pop
cmp
popa
pop
push
inc
sub
inc
push
cmp
mov
aad
jbe
xchg
mov
in
hlt
mov
xchg
jle
repnz
sub
push
rcl
imul
ljmp
add
fcoml
xchg
icebp
rcrb
pop
mov
push
nop
mov
sub
mov
sub
mov
push
add
pop
cld
je
dec
inc
xchg
push
jmp
iret
pop
pop
mov
orl
sbb
fld1
adc
xor
mov
cmp
inc
js
imul
xor
fnsave
ret
push
jns
cmpsl
repnz
int
sub
fdivr
or
enter
popa
xor
push
hlt
imulb
inc
mov
stos
pop
mov
cmpsl
push
aas
cld
shlb
orb
neg
or
fdivl
push
push
adc
inc
mov
mov
hlt
mov
pop
fisubs
mov
mov
adc
nop
xlat
jb
and
es
and
pushl
imul
inc
sysret
adc
ljmp
mov
outsl
test
push
sti
insb
jne
add
loop
mov
xchg
inc
pusha
cmp
pop
sti
ret
fidivrs
inc
pop
sbb
cmp
xorb
add
shlb
and
push
jg
add
and
mov
mov
pop
cli
pop
mov
das
mov
add
lock
jne
aad
popf
std
xor
xchg
mov
fidivl
test
mov
pusha
lds
paddw
cmp
into
inc
mov
xchg
ret
lds
jbe
shl
xor
add
divb
pop
test
movsl
dec
dec
or
jno
out
rclb
stos
arpl
jns
push
mov
mov
push
sbb
hlt
stos
cmp
push
sub
xlat
inc
arpl
test
repnz
hlt
inc
pop
sbb
test
imul
imul
jmp
scas
mov
fdivrs
pop
addl
add
pop
mov
xchg
loopne
mov
or
adc
repnz
fisttpll
mov
dec
scas
cmp
mov
icebp
jb
push
popa
add
sbb
enter
popf
fisttps
stc
add
jne
mov
ja
jne
out
lret
push
mov
lods
pop
adc
adc
les
dec
fadds
add
dec
dec
and
in
jecxz
or
xchg
push
nop
mov
hlt
sub
pusha
rcl
inc
scas
scas
jge
in
jo
jne
in
mov
fcompl
inc
es
fstl
rorl
inc
movsb
into
test
cmp
xor
jne
popf
js
stc
jbe
test
mov
incb
inc
mov
mov
jne
and
mov
out
xchg
or
clc
inc
popf
lcall
lods
int3
into
loopne
test
fmul
dec
test
fldt
daa
jns
push
sub
lods
sub
ljmp
cmp
add
loope
enter
aad
mov
in
push
test
jb
cwtl
fdivrs
pushf
mov
hlt
dec
push
out
sub
push
push
loope
out
push
out
xor
push
lock
aas
mov
mov
addl
out
pop
push
xchg
jecxz
mov
in
mov
rolb
ds
pop
add
or
outsl
xor
push
aas
pop
in
enter
jp
and
jecxz
rol
mov
cmpsl
ret
mov
and
inc
scas
jecxz
cmp
aad
adc
xor
mov
jmp
pop
movsb
stos
sahf
xchg
inc
in
push
mov
push
test
test
mov
inc
dec
outsl
pop
xchg
ss
outsl
inc
mov
test
rcll
jbe
test
jmp
mov
xor
mov
data16
mov
mov
pop
pop
lret
cmp
adc
jg
adc
push
dec
leave
cmp
jb
sub
mov
mov
cmp
xchg
mov
sbb
inc
add
push
push
pop
dec
push
cwtl
ljmp
adc
jp
enter
or
loopne
pop
push
jg
xchg
scas
hlt
dec
push
sti
test
jp
xchg
fs
adc
movsl
cmp
and
or
addr16
test
sbb
sti
dec
lcall
into
inc
jne
mov
sub
sahf
cs
mov
hlt
ljmp
inc
out
and
aad
shl
ja
lock
pop
sub
xor
mov
enter
or
sbb
xor
sub
hlt
fisubs
lods
ja
mov
and
hlt
js
loope
mov
adc
jb
sahf
add
aam
or
pop
aad
outsl
scas
stos
xchg
mov
movsb
test
test
or
fmuls
iret
loop
pop
les
or
and
push
scas
or
call
adc
xchg
and
loope
adc
ja
bound
fsubp
loopne
add
adc
hlt
mov
add
ret
int3
clc
sub
cmc
int3
mov
sub
adc
jg
jecxz
and
push
pusha
insl
scas
mov
nop
ss
inc
mov
loop
movsl
in
mov
mov
dec
ja,pt
inc
int
add
fstps
insb
hlt
push
sub
mov
push
and
dec
or
mov
es
cmp
mov
fldenv
sub
sbb
mov
stos
into
pop
hlt
iret
xchg
mov
xchg
scas
test
cmp
dec
pushf
pop
jl
fstl
xlat
push
jmp
std
sub
dec
or
mov
stos
push
inc
lock
mov
or
or
mov
mov
div
cmp
shrl
lcall
leave
pop
jp
cwtl
clc
mov
cld
shll
jecxz
movsl
fwait
mov
xor
insl
adc
dec
push
jge
add
inc
lock
das
or
jl
add
subb
xchg
in
aas
enter
jl
testb
movsl
add
lahf
ret
jmp
push
call
sub
pop
ret
stos
cmpb
jno
mov
jnp
jns
pop
cwtl
daa
mov
inc
out
imul
sbb
mov
mov
jmp
js
cli
cmp
je
int
loope
pop
push
add
jbe
add
mov
inc
ffree
fistpll
add
jp
jle
cmpsl
adc
mov
xor
mov
xchg
loopne
mov
in
and
fsub
ret
sub
jo
loope
call
mov
popa
mov
out
sahf
mov
ljmp
cmpsb
in
xchg
lcall
in
adcl
fistpll
cld
push
repz
sbbl
jmp
fdivrl
das
pop
inc
or
xor
mov
lret
inc
hlt
push
std
cmp
addr16
sahf
jnp
sub
inc
jae
aas
sub
pop
dec
cltd
out
lods
mov
jo
or
sbb
sub
mov
rcrl
pop
and
mov
std
jle
das
jmp
sbb
jne
andl
mov
jg
jl
sti
imul
lds
fwait
rcrb
fimuls
add
test
adc
mov
adc
xchg
test
xchg
or
xchg
pop
jle
fsub
mov
and
nop
add
or
gs
cwtl
adc
xor
fldenv
jo
into
stos
cmp
xor
xor
jne
lods
and
arpl
scas
clc
lea
ljmp
xchg
out
scas
jg
and
aam
ret
jbe
jl
cmp
int3
imul
mov
cmc
sbb
test
ja
mov
fldcw
mov
ret
fdivs
jl
sti
sub
jmp
out
dec
push
sbb
loopne
pop
jno
call
lds
pop
push
xchg
insb
es
out
sub
sbb
sub
or
xor
fwait
pushf
xor
dec
sbb
fistpll
rcll
aaa
adc
incb
hlt
fmulp
xchg
or
or
sub
jbe
push
test
cmp
or
fdivr
inc
dec
add
push
sti
mov
mov
xor
dec
cmp
push
adc
adc
adc
cld
loop
icebp
les
adc
sti
imulb
push
inc
mov
es
lea
lods
cmp
pop
mov
mov
repnz
jns
setne
mov
xchg
popf
mulb
inc
xchg
movsb
adcb
mov
or
pop
out
cmpsl
fdivr
cmc
fbld
push
lahf
adc
fwait
cmp
jle
push
sbb
sub
scas
fmull
jne
dec
aam
rolb
outsl
adc
xor
xchg
push
rcrl
cld
ss
and
es
mov
vpcmov
add
not
cmp
nop
sbb
mov
jg
out
push
xchg
jmp
mov
sub
push
dec
sti
mov
sbb
leave
add
test
insl
inc
push
jno
mov
mov
jge
fincstp
sub
stos
js
add
cmpl
or
inc
fsubrs
pop
ljmp
dec
ljmp
mov
pop
hlt
addb
cmc
je
adc
mov
movsl
hlt
jns
push
outsl
bound
cmpsl
in
popl
pop
jg
or
subb
xchg
adc
or
cmp
sbb
cmp
cmp
jge
mov
add
xor
push
cmp
add
adc
icebp
and
je
adc
popa
rorl
inc
shlb
sti
jge
pop
cmp
adcb
clc
or
lods
add
fistps
mov
pop
and
subl
sbbl
jo
dec
or
inc
and
mov
push
mov
in
jg
sbbb
fimuls
adc
cmc
inc
xchg
pop
or
cltd
add
sub
add
icebp
jne
mov
hlt
insb
jne
push
mov
pusha
imul
add
leave
insb
insb
mov
inc
push
cmp
or
inc
or
rep
pusha
sub
stc
mov
jp
add
sbb
roll
push
inc
hlt
and
jp
xor
push
xchg
fwait
or
ja
jecxz
fwait
mov
sti
cmpsl
divb
rol
cmp
xchg
stc
dec
add
add
rcrl
inc
xchg
out
inc
xchg
mov
xlat
xchg
repnz
ret
jne
and
mov
cmp
xchg
sub
dec
mov
mov
nop
roll
push
sbb
sub
pop
sahf
xchg
enter
insb
in
push
mov
jg
les
cmpsb
jne
sub
jmp
jne
sar
inc
sbbb
aad
xor
movsl
add
hlt
cld
movsl
movsl
sahf
add
imul
jnp
in
repnz
scas
out
divps
insb
loope
push
decl
push
pop
push
shr
jl
loop
adc
in
inc
push
loopne
fsubrl
push
mov
loope
test
hlt
or
fldt
in
js
movsb
test
or
jno
mov
xor
pop
sbb
out
div
movl
inc
sub
rcrb
adc
sub
add
mov
add
mov
and
frstor
mov
cltd
sbb
inc
or
push
je
stos
inc
adcb
popl
leave
sbb
jmp
add
jb
mov
shrl
pop
jno
add
add
mov
pusha
pop
nop
cmpb
hlt
inc
cmc
cld
push
xchg
test
mov
cmp
jle
cwtl
inc
mov
dec
inc
dec
ficoms
xchg
pusha
and
in
mov
sbb
sbb
ret
hlt
idivb
dec
add
flds
scas
cli
jbe
push
sub
and
or
loope
adc
sbb
add
inc
xchg
push
mov
aam
adc
jl
wrmsr
ss
jge
adc
loopne
mov
dec
mov
pop
and
xchg
into
pop
dec
jp
mov
pop
ja
pushf
rcr
addl
and
scas
push
movsl
and
mov
rol
jle
jne,pn
pop
mov
scas
cmp
adc
mov
xor
dec
inc
dec
jne
push
mov
push
or
xchg
jmp
mov
mov
dec
stc
test
mov
add
test
inc
dec
sub
jl
js
pop
sbb
or
xchg
popa
ret
inc
aam
mov
aad
cwtl
push
sbb
je
rolb
out
cld
cmp
pop
dec
or
xchg
jbe
jmp
lret
fimull
jp
cmpb
xchg
fisubl
pop
add
sbb
mov
lods
lods
fnstsw
ds
mov
out
adc
hlt
sbbl
xchg
jne
pop
fcomip
pop
xchg
inc
mov
idiv
loope
ljmp
inc
sub
in
subl
xor
pop
add
push
ret
push
negl
stos
cltd
xlat
push
dec
xchg
mov
adc
imul
xlat
add
movsb
inc
out
lret
fdiv
xchg
mov
dec
pop
std
pop
jbe
nop
rcrl
cmpsb
or
insl
mov
int3
mov
add
pop
mov
lds
in
cld
inc
cmc
xchg
lret
stc
mov
push
mov
imul
sub
ljmp
gs
pop
pop
dec
or
call
mov
or
adc
scas
mov
cmp
sti
push
jl
inc
fs
scas
adc
imul
aad
into
je
pop
aaa
add
dec
mov
pop
sbb
or
std
les
mov
emms
add
sub
lods
bound
mov
cmpsl
mov
aad
lcall
cmp
clc
push
and
fcoml
leave
push
je
repnz
dec
mov
jno
pop
mov
aad
jl
jp
adc
push
pop
xor
subb
adc
scas
out
inc
jne
push
repnz
stc
adc
loopne
imul
cmpsl
pushf
or
mov
pop
leave
gs
test
jne
jecxz
scas
sti
and
leave
loope
lret
dec
push
dec
imul
out
xchg
test
test
sub
cmpsl
ret
inc
cld
xchg
xchg
mov
jb
test
fwait
cmp
aam
ljmp
mov
nop
xchg
or
cmp
adc
outsb
rcll
push
aad
mov
mov
hlt
sahf
xchg
nopl
mov
and
jle
dec
decb
lahf
movsb
bound
xchg
scas
jg
loop
ficomps
loopne
pop
jbe
scas
xlat
adc
xor
mov
xor
enter
xchg
adc
inc
sub
nop
js
out
rol
mov
jns
xchg
sti
sub
adc
sub
and
movb
adcl
fmuls
xchg
test
inc
pop
pop
mov
repz
mov
hlt
sarl
and
scas
popf
mov
push
sub
or
pop
das
nop
mov
dec
das
adc
and
adc
sbb
jge
mov
fisubl
dec
mov
iret
daa
adc
lock
sahf
out
ljmp
fildll
adc
loop
neg
jge
aad
loopne
or
lret
hlt
or
push
mov
stc
jmp
mov
adc
mov
push
jle
push
pop
dec
xchg
cmc
mov
pop
mov
mov
jmp
pop
sbb
jae
inc
test
sbb
pop
in
in
or
lret
xchg
pusha
xor
inc
xchg
jle
jne
loopne
cmp
test
add
mov
aam
sub
out
aam
popa
pusha
sahf
xor
xor
pushl
inc
pusha
and
fmulp
sarb
sbb
int
mov
sub
jl
fcmovnb
psrld
xchg
adc
in
ds
shlb
mov
loop
sahf
push
add
jne
shl
orb
insl
leave
mov
cmpsb
mov
jnp
mov
insb
pop
loopne
adc
into
int3
cwtl
pop
jns
xchg
or
inc
xchg
jbe
stc
into
das
mov
loope
cmp
cmp
into
push
sub
dec
pop
jmp
adc
minps
iret
dec
cmp
jns
roll
mov
repz
add
loope
push
adc
sub
dec
mov
pop
inc
imul
cmp
call
repnz
fdivrs
enter
mov
shl
adc
mov
sub
xchg
pushf
js
jne
cmpsb
popf
lret
daa
jbe
push
mov
and
pop
inc
inc
pop
jne
dec
xor
shll
pop
hlt
mov
push
or
orb
and
xlat
in
adc
pop
repz
push
stos
mov
push
imul
test
jecxz
shl
test
punpcklwd
inc
addb
push
ficomps
xchg
mov
jecxz
leave
call
mov
es
mov
jo
into
scas
sti
sbb
cmp
outsl
cmp
mov
or
loope
shll
cli
inc
mov
mov
int
push
jo
cmp
adc
cmp
rcrl
dec
push
mov
dec
imul
or
enter
pushf
and
jns
mov
inc
out
xchg
push
popf
xchg
in
xor
cwtl
pop
std
loopne
stos
pusha
insl
adc
sub
mov
hlt
test
iret
mov
and
fldcw
call
push
lahf
out
leave
orl
add
out
cmpsb
pop
mov
dec
push
lret
enter
dec
jnp
inc
push
negl
test
add
fwait
sub
dec
call
fbstp
xor
dec
sub
and
or
repz
hlt
stc
adc
das
or
pop
dec
mov
loope
jmp
hlt
add
shl
pushf
sub
push
loop
or
dec
jle
ror
out
mov
mov
dec
fs
mov
das
or
test
adc
ror
cmpsb
dec
xor
adc
and
loopne
jl
outsb
gs
cmpsb
mov
pop
hlt
data16
adc
pop
add
std
sahf
sbbl
jne
cmp
hlt
cwtl
mov
jmp
jmp
cmpsl
jp
or
out
mov
lahf
xchg
jl
fiaddl
pop
jno
xchg
push
fiaddl
xchg
mov
popf
pushf
aas
mov
jge
loopne
mov
fistpl
rcr
sbb
mov
repnz
fmull
xchg
pop
mov
lock
adc
stc
inc
lods
cmp
cld
add
add
test
jge
rol
and
jg
push
aas
cmp
ror
iret
inc
call
or
cmp
sbb
mov
stos
pop
repnz
nop
popa
add
jle
mov
add
fwait
push
mov
stc
xor
add
std
aam
int
jmp
ror
dec
clc
cld
sub
adc
insb
in
js
xchg
mov
pushf
sub
jp
adc
dec
sub
loopne
lods
not
shlb
int
push
push
mov
inc
inc
out
scas
xchg
push
popa
adc
fsubrl
jp
push
stc
xchg
mov
loop
out
or
fildll
jmp
rdtsc
mov
jne
mov
orl
ljmp
std
jge
fadd
loopne
insb
xorb
imul
push
mov
or
enter
mov
sub
or
xchg
mov
xlat
pop
test
adc
pusha
xchg
aas
and
cmp
sbb
lods
adc
andb
mov
ret
and
cmp
rorl
or
pop
pop
cmc
fs
jle
inc
test
pop
popf
cli
movsl
push
fstl
jb
lret
pusha
xchg
shrl
xor
idivl
out
push
test
xlat
mov
xchg
jno
push
les
adc
mov
and
inc
test
push
cs
ret
jl
xchg
pop
xchg
scas
cli
lods
xchg
je
jp
add
push
aam
loope
hlt
pop
insb
and
dec
stos
scas
push
mov
cmp
mov
mov
test
dec
js
fistpll
loopne
jne
sub
es
fildl
sti
jne
sub
mov
mov
dec
pop
stos
mov
shrl
negl
xlat
sbb
push
push
pushf
lret
adc
pop
enter
push
test
pop
cmp
pop
mov
repz
aas
es
jmp
mov
adc
insb
mov
cld
out
and
mov
and
aad
insb
addl
movb
lock
mov
xorb
xchg
hlt
push
push
loopne
jl
stc
addr16
xorb
dec
add
leave
out
lock
push
mov
fs
sbb
rolb
movsb
mov
mov
pop
andb
mov
test
sarl
movsb
pop
jge
stos
cmp
in
inc
push
and
leave
pop
jle
scas
ds
xchg
inc
sbb
or
add
mov
cmp
inc
sahf
dec
clc
jge
cmc
leave
pop
dec
inc
xchg
out
push
pop
aaa
push
cmp
add
shl
addr16
pop
xor
mov
nop
mov
cmp
loop
sar
jns
arpl
jno
int
sub
mov
inc
sub
xor
mulb
cld
iret
pushf
push
cmpb
je
sbb
orl
mov
cmp
mov
loope
and
sar
in
scas
pop
mov
mov
mov
mov
jne
aas
add
hlt
inc
in
mov
int3
mov
mov
lods
aas
shlb
sbb
cli
fists
sti
jge
out
pop
shl
mov
pop
shrb
adc
lods
xor
test
fimuls
add
inc
loop
test
xorb
lret
mov
jle
subb
or
movsl
hlt
xchg
es
mov
sub
es
in
cwtl
jo
and
in
pop
mov
xchg
add
mov
xor
dec
inc
data16
xchg
add
rcll
mov
lcall
test
xor
subl
ljmp
fists
cmp
pop
out
dec
mov
sub
hlt
pop
sbb
repnz
outsb
xchg
sub
cmp
int3
cmc
or
mov
xor
sbb
es
cltd
addr16
adc
cmp
aam
clc
cmpsb
mov
mov
xchg
inc
test
add
jns
loopne
mov
call
sub
add
push
leave
pushf
scas
jae
loope
jb
jnp
js
jp
pop
adc
ss
fisubrs
xorb
fsubp
push
in
add
or
cli
stos
pop
mov
pop
dec
cmovnp
sub
jne
pop
js
mov
std
cwtl
sbb
mov
lret
ljmp
xor
data16
or
xlat
loop
cmc
fnstenv
lret
nop
xlat
hlt
dec
fldt
push
inc
jne
mov
mov
adc
inc
pop
push
dec
rcrl
mov
cwtl
mov
dec
jmp
bound
jl
int3
mov
repz
and
idivb
jl
mov
or
nop
arpl
loope
mov
mov
pop
mov
sbb
xchg
sahf
jmp
mov
adc
jns
sub
cmpsb
cmpl
push
push
lret
adc
sbb
jmp
data16
insb
repz
add
rolb
ljmp
xchg
sbb
xor
dec
mov
test
and
inc
ds
into
scas
stos
xlat
inc
fnstcw
jne
jmp
xor
pushf
dec
inc
add
push
std
jns
xchg
inc
loop
inc
sbb
sbb
shlb
xchg
pop
add
sbb
sbb
pop
jecxz
cmpsb
into
mov
dec
xor
inc
loopne
sub
pop
fimuls
sti
cltd
pop
or
notb
popa
mov
call
sub
fmulp
xchg
adc
mov
inc
inc
cmp
xchg
or
dec
jbe
movb
movsb
int3
jne
xchg
popa
mov
mov
sti
out
mov
cld
inc
add
sarl
sbbl
push
std
cmp
lods
sbb
das
enter
lret
divl
loopne
test
pop
andb
out
mov
push
leave
sub
cmpsb
xchg
daa
mov
sbb
jne
sub
or
stc
mov
inc
hlt
mov
push
hlt
jge
and
std
pusha
sbb
inc
inc
jne
std
cli
fdivl
mov
sbb
mov
imul
push
add
dec
and
and
sbb
mov
and
xor
push
mov
cmpsb
dec
dec
hlt
in
xor
in
mov
mov
fisttpll
stos
in
mov
das
cld
jns,pn
and
pushf
imul
ret
pusha
arpl
test
aam
mov
lret
mov
sbb
cmp
or
mov
jl
and
or
fs
push
mov
sbb
and
movsl
xor
mov
out
lret
jne
or
sbb
pop
rorl
cmp
es
jo
pop
push
ss
and
in
daa
jne
and
ljmp
xchg
cli
pop
jp
jge
push
sbb
imul
pop
push
fsubs
js
mov
lods
loop
lock
je
sbb
sbb
fsubl
inc
insl
roll
add
sub
loop
cmp
inc
mov
popa
mov
andl
mov
xchg
pop
mov
inc
push
jnp,pn
jb
xchg
mov
divl
pusha
cmp
hlt
sahf
fdiv
mov
xor
cld
cmpsl
jg
mov
arpl
pop
aas
dec
int3
lods
xchg
sub
loope
popf
fnstenv
scas
and
outsl
xor
das
mov
xor
mov
jne
jg
jne
xchg
pop
cmpsl
mov
mov
cmp
jno
pop
sub
je
sub
pop
jns
cmp
pop
adcl
inc
scas
mov
mov
push
loope
insb
jmp
xlat
mov
call
fimuls
or
call
dec
xor
add
lret
jl
lahf
loop
cmp
cmp
adc
jg
lea
enter
inc
cmpb
cmpsb
sub
and
cld
fnstcw
imul
xor
rolb
fldenv
mov
hlt
pop
daa
push
and
out
adc
int3
jnp
aas
leave
mov
pop
jle
out
inc
sub
sbb
add
sarl
mov
rcl
ds
aam
jns
scas
testl
jle
mov
xchg
xor
scas
pop
xchg
mov
cli
dec
jmp
and
int3
mov
mov
add
mov
pop
inc
divb
xchg
fcmovnbe
stos
mov
and
jne
daa
push
xor
sub
cmpsl
inc
or
sbb
jne
mov
gs
pop
lods
sti
out
adc
pop
inc
push
test
stc
adc
jl
clc
or
rolb
sub
data16
subl
stos
add
fstpl
jb
pop
fdivl
pusha
out
cli
loope
dec
sub
sbb
stos
scas
xor
push
inc
mov
leave
imulb
adc
jle
mov
push
push
imul
mov
xor
inc
stos
lahf
fstl
adc
pop
icebp
test
outsl
imull
fists
das
nop
or
sub
das
sbb
ljmp
into
adc
fidivs
sub
lock
push
shl
lock
adc
mov
xor
mov
sbb
adc
push
push
sbb
mov
adc
mov
loopne
lods
shlb
xchg
movsl
push
leave
js
xlat
adc
rolb
push
push
pop
lret
fldcw
sbb
lods
xor
dec
inc
adc
mov
lock
daa
pop
scas
add
loopne
lods
cmp
jp
inc
xchg
leave
mov
scas
pop
mov
data16
pop
pop
dec
roll
cmp
subl
gs
in
inc
push
leave
mov
dec
out
xchg
repz
push
cltd
in
dec
push
mov
adc
xchg
lods
loope
jo
mov
out
mov
mov
into
js
adc
pop
out
jl
lahf
xchg
hlt
mov
inc
sahf
mov
add
stos
push
int
or
and
jbe
push
outsb
rep
dec
add
fdivrs
ret
mov
cmp
inc
mov
cld
push
inc
mov
pop
jmp
ret
aad
inc
push
sub
mov
shlb
out
push
loopne
push
adc
push
lret
nop
std
mov
pop
adc
out
mov
movsl
outsl
in
repnz
mov
cmp
push
call
stc
scas
std
aaa
out
cld
icebp
movsl
repnz
mov
adc
stos
jp
imul
push
jne
sbb
cwtl
xchg
sub
dec
test
es
test
mov
test
xchg
movsb
jnp
rorl
mov
call
inc
arpl
loop
das
popa
mov
mov
test
xor
hlt
shlb
pop
mov
sbb
scas
popa
cmp
jo
lcall
enter
mov
in
push
push
push
rorl
or
or
mov
in
aas
inc
jnp
add
outsb
jne
in
dec
or
loopne
pop
imul
enter
loope
push
and
pop
xlat
add
imul
test
xchg
imul
mov
cli
rclb
sub
in
fnstsw
cmp
les
jg
lcall
imul
ss
cmc
scas
popa
ret
cmpsl
pop
inc
dec
xchg
pusha
adc
add
xor
cwtl
mov
cmc
mov
mov
mov
push
dec
pop
or
xchg
mov
stos
mov
jge
divl
xlat
insl
out
mov
push
jl
inc
scas
mov
in
hlt
adc
sbb
hlt
mov
dec
inc
loopne
lcall
ffree
push
rol
inc
inc
pusha
sti
adc
xor
add
sbbl
test
cmc
stos
jo
adc
into
push
subb
jns
pusha
outsb
aaa
insl
ficoml
or
xchg
hlt
mov
adc
into
sub
or
adc
int3
xchg
inc
repnz
cld
popl
insl
mov
repz
cmpsl
test
sub
icebp
mov
jp
or
cmp
sub
xorl
add
xor
push
cmc
negl
xchg
popa
add
mov
jbe
jmp
and
mov
test
pop
fisubrs
xor
mov
movsl
pusha
cwtl
jb
mov
push
mov
divb
sahf
rorb
cs
inc
inc
jl
cmpsb
js
hlt
inc
mov
push
js
cmp
mov
push
imul
inc
sbb
loope
jmp
or
cmpsl
xadd
jecxz
test
mov
icebp
loopne
imul
xchg
inc
xchg
cmp
push
fsubl
in
out
dec
cmp
mov
push
pop
sub
jmp
in
sub
idivl
lret
cli
jecxz
inc
movsl
inc
jg
int3
or
hlt
pop
dec
sub
std
shl
add
loop
mov
mov
push
enter
pop
sti
adc
jmp
cwtl
insb
enterw
adc
test
les
icebp
addr16
mov
mov
mov
push
and
jne
stc
cld
pop
stos
out
dec
adc
sti
jmp
mov
js
inc
mov
mov
out
sub
jo
shl
rcl
inc
mov
cmp
data16
cmp
dec
sahf
in
xchg
ja
mov
pop
inc
pop
ffreep
out
sarb
test
jo
fstps
cmp
jne
inc
repz
movsb
hlt
jns
jle
fstpl
pop
fwait
mov
jo
or
push
mov
enter
push
mov
neg
fcom
test
sbb
movsl
xchg
fcomip
popf
xor
pushf
xor
ret
shll
ss
push
mov
pusha
rorb
push
sub
les
hlt
sub
mov
je
and
and
dec
je
jge
push
push
movsl
mov
fildll
mov
stc
lods
stc
in
xor
stc
pop
lods
sub
cld
cwtl
push
aaa
xor
jle
push
arpl
xor
std
lcall
push
sbb
out
push
test
out
jp
mov
and
into
dec
iret
mov
xchg
mov
loopne
cld
pop
enter
add
inc
shr
jle
int3
mov
sbbl
push
cmp
sti
sbb
sub
mov
dec
scas
fadds
jle
mov
cmc
daa
and
jb
cmpsb
pop
dec
xchg
scas
mov
leave
or
mov
sbb
movsb
jmp
pop
push
add
pusha
fsubs
xor
lods
add
mov
add
mov
into
stos
nop
movsb
hlt
inc
pop
clc
dec
cmp
xchg
sub
int
dec
loopne
cmp
std
inc
inc
jmp
cwtl
dec
sub
fldt
lds
jae
cld
mov
icebp
xchg
push
push
mov
push
cli
cmp
cmpsl
mov
mov
pop
xchg
popa
pop
decb
stc
cmp
pop
push
pushf
enter
aad
pop
lock
push
adc
stc
imul
xchg
stc
jae
xchg
and
jne
cs
lcall
mov
mov
add
cmp
and
cmpsl
ljmp
ss
pop
mov
lock
jb
enter
dec
subb
mov
mov
xor
mov
or
arpl
nop
arpl
stos
mov
rclb
pop
push
mov
cmpsl
push
leave
arpl
into
sub
popf
push
lcall
or
xor
xchg
jle
sbbl
jnp
pushf
xchg
jae
aad
lret
pop
pop
mov
rcll
push
dec
and
jecxz
ret
bound
cld
rorb
pop
mov
outsl
xor
mov
repz
dec
hlt
inc
sub
mov
inc
and
es
inc
pop
fsubrs
hlt
inc
enter
int
mov
ret
int3
into
add
adc
stc
stos
adc
insb
repnz
and
xchg
test
push
int3
xor
mov
test
scas
mov
xorl
enter
pop
mov
mov
ds
out
dec
xchg
xchg
jmp
in
shlb
into
arpl
pop
leave
xchg
enter
cmpb
adc
fsubrp
in
arpl
fimull
and
dec
test
adc
jae
fsubrs
xchg
mov
mov
jne
sbbl
shr
add
loope
mov
mov
xchg
pop
and
and
xchg
adc
xor
xchg
inc
sub
sbb
add
sbb
xor
cld
fsub
scas
push
test
cmp
inc
or
imul
lahf
pop
xor
dec
mov
pusha
nop
xchg
imul
ds
inc
cld
inc
push
jo
fucomip
and
push
xchg
inc
fsubl
mov
pusha
fstps
xchg
out
leave
enter
push
dec
pop
fucomi
sub
hlt
popf
and
pop
push
cs
xchg
mov
icebp
mov
add
pop
test
add
mov
mov
mov
addl
pusha
clc
loopne
pop
test
adc
xchg
out
cmp
lods
mov
add
repz
cmp
inc
sub
xchg
hlt
test
pop
mov
mov
mov
jns
mov
mov
cli
add
nop
pop
pop
mov
cmp
sahf
outsl
lea
mov
and
inc
rolb
or
stc
imul
inc
data16
cmpsb
scas
leave
jmp
jno
sub
das
sub
mov
call
rorb
sub
stc
mov
insl
jmp
xchg
shlb
mov
mov
xor
sbb
xchg
fs
int
mov
cmpsl
hlt
dec
ret
into
out
xor
mov
stc
adc
loop
test
pop
sbb
popf
sbb
cmp
mov
lods
dec
xchg
and
lahf
push
pop
mov
call
shrl
mov
sti
pop
test
inc
jl
bnd
sbb
pop
out
sub
jno
lds
inc
lahf
push
or
mov
sub
adc
cmpsl
add
xor
mov
sbb
jl
insb
dec
aas
dec
or
loopne
xchg
jmp
push
hlt
notl
sti
stos
cld
addr16
adc
clc
imul
and
cmpsb
push
jbe
inc
jne
aas
arpl
hlt
stos
aad
jp
or
nop
or
jecxz
xor
imul
mov
xchg
shl
loopne
adc
imul
daa
cli
divl
sbb
mov
out
fdivrl
inc
push
es
clc
add
daa
jb
dec
sub
shlb
mov
and
mov
dec
or
sbb
or
push
jbe
cmc
in
mov
aad
pop
sahf
leave
test
cmp
lds
xchg
in
inc
sub
pop
add
cld
mov
fisubs
cmpsl
testb
mov
les
movsb
add
jecxz
jmp
in
addl
add
add
andl
mov
int3
popa
popf
add
hlt
dec
arpl
xorl
cltd
andl
inc
leave
xchg
adc
cltd
dec
test
stc
jne
scas
das
and
call
inc
imul
repz
mov
clc
and
adc
pop
fstpl
pop
test
adc
mov
push
test
jne
repnz
jo
inc
pop
inc
jmp
dec
mov
enter
call
mov
jne
cmp
imul
add
sub
cmpsb
cmp
mov
xor
mov
inc
mov
imul
mov
scas
and
xchg
movsb
loop
pop
rcr
push
cmp
fdivrl
sub
cmp
jbe
in
jne
mov
test
sub
arpl
push
pop
cmpsl
test
mov
adc
jnp
push
mov
jns
ror
xor
lds
notl
lcall
mov
sti
in
cmpsl
cld
ss
sub
pop
int3
inc
in
or
inc
pop
into
mov
enter
hlt
shll
push
cmp
fildll
in
repnz
les
mov
stos
dec
jnp
in
dec
sub
into
push
xchg
call
mov
xchg
xorb
push
add
std
bound
xlat
fisubrl
int
aad
jl
in
test
hlt
movsb
xchg
sub
es
scas
xchg
xor
call
sahf
leave
add
cmp
inc
sbb
dec
loop
rsm
jle
iret
sahf
xchg
xor
dec
mov
xchg
mov
int
jecxz
lret
add
inc
xor
call
mov
xor
les
lcall
cmp
xor
ljmp
inc
mov
rcrb
hlt
jle
lea
pop
mov
pop
mov
xor
and
in
loop
faddl
loopne
daa
mov
pop
sahf
mov
fistl
enter
jnp
fnstenv
pop
jge
jecxz
add
jne
jae
add
dec
xchg
or
gs
mov
adc
test
push
mov
push
loope
jmp
insl
movups
jns
push
sub
cmp
cs
shl
lods
mov
test
or
sub
sbb
out
gs
lds
jp
sbb
jle
mov
shlb
sbb
scas
in
sarb
outsl
sub
cmc
inc
inc
mov
mov
aas
imul
int3
movsl
fstp
xor
jge
dec
xchg
popl
mov
jge
sub
fcoml
lcall
inc
out
pop
enter
adcb
lds
stos
jl
hlt
movsb
lret
ds
inc
cltd
add
sub
and
repnz
mov
jmp
adc
fdecstp
sub
or
flds
mov
add
jae
xlat
les
lcall
dec
mov
shlb
cld
gs
subl
jno
movsb
xchg
lret
pop
test
fs
fcomp
sti
dec
mov
push
movsl
aas
mov
pop
outsb
xor
test
hlt
loopne
xor
xchg
sub
inc
adcl
lcall
mov
push
fisubrl
add
das
cmpsb
ds
push
push
sbb
stos
or
pop
sub
repnz
mov
xor
sub
pushf
and
mov
lea
shll
cmpsl
jg
cmp
add
sub
cmp
pop
jle
sar
mov
in
sub
jmp
push
add
aaa
movsb
lea
test
sbb
cmp
les
dec
int
add
sbb
dec
jbe
jo
stos
fnstsw
sub
stc
adcl
mov
add
dec
jle,pt
aam
lock
cld
sbb
in
into
mov
push
jb
xor
aas
fsubr
adc
dec
jns
xor
int
lret
fwait
incl
push
enter
rolb
sti
jl
lret
loopne
lahf
push
je
pop
mov
daa
sbb
push
sbb
lcall
mov
jne
pop
out
jmp
stc
ret
or
xor
cmc
jb
cmpsl
fdivl
jmp
jb
loopne
xor
outsb
cltd
loop
mov
xchg
loopne
jmp
fstpl
mov
add
xchg
cmp
adc
aam
sub
orb
dec
fnsave
sub
mov
bound
mov
pop
xor
mov
jmp
popl
add
je
ss
cmpsb
cmc
cltd
arpl
in
sub
pop
adc
mov
cmp
cli
addr16
fcmovnb
cmc
orl
lds
pushw
inc
mov
xchg
sahf
orb
out
ffree
pop
jmp
jae
sub
adcb
arpl
jne
icebp
sti
cmp
les
ss
push
aam
rcr
or
std
jne
adc
xor
aam
sub
sbb
lahf
enter
js
arpl
push
lcall
shl
push
hlt
rorl
xchg
or
pushf
inc
hlt
dec
movsl
pushf
sbb
adc
push
jp
loopne
popl
sbb
popf
repnz
lock
sbb
sub
shlb
mov
rcr
hlt
pop
scas
pop
sbb
cmp
std
in
mov
xchg
inc
imul
push
sbb
movsl
jl
sbb
and
jne
dec
dec
mov
roll
repnz
je
lods
icebp
mov
loop
mov
inc
fstl
out
and
push
fwait
je
dec
xor
mov
lods
into
dec
jg
ret
enter
cld
dec
leave
push
sub
pop
xor
jl
cwtl
or
inc
std
mov
jb
dec
jae
sbb
and
stc
inc
jl
mov
push
scas
scas
xchg
cmpsb
sbbl
pop
dec
and
aad
dec
incl
dec
jmp
sub
nop
mov
hlt
pop
sub
notl
sub
pop
dec
mov
nop
int
in
hlt
sbb
paddq
cld
pop
mov
add
inc
loopne
outsb
repz
ds
xchg
pop
mov
mov
gs
in
add
jne
pmaddwd
ret
rol
scas
inc
mov
stos
daa
add
iret
adc
add
loop
pop
nop
fdivl
inc
or
dec
inc
mov
push
shld
popa
mov
sub
mov
decl
cmc
dec
jg
or
shr
movsb
stos
cmp
ljmp
adcl
decb
xchg
repnz
xor
dec
arpl
jne
sub
faddp
iret
out
xchg
aam
jg
cmp
sbb
cmp
xchg
xchg
repz
add
sbb
dec
aad
adc
cmp
dec
mov
sub
pop
test
adc
imul
add
popf
mov
add
xor
xchg
xor
popa
mov
jmp
idiv
aaa
cmp
icebp
adc
inc
pusha
jge
inc
hlt
les
scas
pushf
dec
jg
sub
mov
jb
xor
push
sub
hlt
xor
rcrb
sub
enter
test
notl
faddl
dec
xlat
mov
mov
outsl
pushf
xor
into
lahf
or
inc
jne
stc
nop
inc
push
cs
orl
sub
fldt
sub
jne
clc
mov
imulb
pop
push
out
mov
cwtl
xchg
lods
lods
sti
aam
clc
out
hlt
sbb
andb
negb
and
adc
icebp
cli
bound
add
mov
in
outsb
mov
stc
mul
xchg
out
aam
adc
int3
and
data16
gs
shlb
sub
xchg
mov
repz
cwtl
mov
lcall
icebp
dec
dec
mov
push
fsubrp
jbe
fistpl
add
jnp
movsb
fldenv
mov
xor
add
shl
mov
sub
or
in
or
mov
nop
or
jl
pop
or
scas
addb
and
xor
fisttpl
mov
mov
icebp
sti
ljmp
popa
out
hlt
lods
jne
mov
xchg
jne
sub
sub
add
int3
fs
xchg
xlat
scas
data16
mov
sbb
je
mov
icebp
cmp
das
mov
xor
pop
mov
xor
pusha
sbb
std
out
adc
xchg
gs
adc
sbb
xor
test
jg
icebp
imul
jp
outsl
inc
mov
scas
add
xchg
in
aas
aas
inc
dec
mov
sar
dec
sub
jne
push
cltd
inc
mov
and
pusha
jno
dec
divl
enter
jmp
cmc
push
jne
stos
mov
jnp
jge
enter
xorl
repnz
jle
lahf
repz
mov
sbb
enter
leave
enter
lahf
lret
jno
loopne
testb
pop
cli
addr16
scas
mov
pop
ret
or
ror
mov
xchg
inc
jle
js
pop
mov
xorb
adc
hlt
and
jp
sbb
cwtl
jne
mov
shl
mov
push
add
xchg
cmp
les
shrl
repnz
adc
cmc
incl
pop
das
cmpsb
mov
jno
aad
in
pop
cli
lds
ret
fcoml
int
hlt
shll
mov
repz
jl
clc
loope
cmp
xchg
xchg
adc
lea
out
in
clc
jg
inc
jne
scas
pushf
pop
adc
dec
rorb
mov
push
movsb
lea
jns
mov
ret
out
sub
xor
fcoms
pop
cmpsl
sub
fs
jbe
mov
movsl
and
push
jecxz
hlt
aad
mov
sahf
add
and
fnstcw
mov
push
cmp
stos
pop
mov
mov
pop
sbb
pusha
movsb
popf
bswap
andb
jns
ja
push
insl
test
sub
jmp
cwtl
das
loope
mov
cmp
movsb
rcrb
lock
nop
xchg
xchg
sbb
dec
testb
mov
jle
cmp
ss
mov
inc
scas
dec
jge
inc
lea
test
loopne
js
xchg
aam
add
lret
sbb
push
jmp
inc
leave
ja
jmp
sub
jmp
mov
jge
xchg
inc
push
mov
jno
pop
aas
sbb
stos
dec
sub
lret
jecxz
jnp
loop
push
adc
cmpsb
mov
xchg
mov
das
sbb
nop
and
sub
int3
js
dec
push
adc
insl
and
rolb
dec
movzwl
gs
pop
in
lret
mov
lods
imul
mov
add
in
pop
add
and
test
cwtl
ds
or
imul
jmp
shlb
lods
addb
jns
xor
fisttpl
dec
arpl
decl
inc
mov
dec
rclb
xlat
stos
lods
adc
add
inc
out
in
pop
out
pop
sti
xchg
mov
das
sub
mov
dec
xchg
dec
inc
or
addr16
sti
cmp
lret
cmp
fs
push
out
or
jne,pt
rolb
sbb
jo
lods
adc
xchg
stos
inc
data16
shlb
mov
outsl
and
pop
jne
mov
inc
xchg
sub
or
or
mov
cwtl
xchg
int3
jecxz
dec
fcoml
mov
jbe
jl
js
jl
pusha
xor
mov
push
push
in
sub
lock
jl
loop
pop
jns
push
mov
movsb
and
add
xchg
aaa
jbe
push
out
pusha
mov
aas
movsl
lods
cmpsb
cmp
mov
jb
loopne
inc
inc
outsl
addl
call
rorl
push
add
pop
movsb
inc
hlt
pop
pop
mov
fstpt
pop
and
into
xchg
insl
and
fdivrp
fwait
push
dec
sbb
sti
cs
enter
sahf
pop
incb
hlt
fisubrs
fnstenv
dec
jl
dec
adc
sub
push
mov
in
aad
arpl
pop
push
inc
inc
in
pop
inc
outsl
movsl
dec
popa
xor
popf
stos
or
pusha
fsubrp
fwait
and
mov
push
test
xor
out
sub
or
jmp
push
xor
add
push
lret
popa
idivb
or
mov
les
xchg
cmpsl
jne
sahf
out
movsb
inc
notl
sbb
jmp
stos
bound
or
sbb
nop
jmp
inc
pop
loope
cmpsb
pop
or
in
sub
jp
adc
cmp
fcompl
adc
les
fsts
into
sub
cmp
mov
cmp
jne
popa
jp
mov
mov
jns
rcrb
jne
adc
test
or
mov
push
xor
jae
xchg
imul
js
add
mov
fcoml
jo
nop
inc
mov
add
pop
or
push
pushl
jmp
and
xchg
out
cmpb
ret
cmc
xchg
pop
arpl
pop
push
sbb
call
jmp
pop
cmp
mov
sbb
in
xchg
jno
gs
ss
scas
lea
les
xchg
int3
or
add
inc
and
sbbl
add
aas
pop
mov
rol
pop
sub
sbb
imul
js
nop
jg
sahf
lcall
or
rcrl
cmp
inc
cmp
leave
xorb
out
jns,pn
dec
shll
das
ds
dec
adcl
inc
pop
aas
pushf
pmuludq
dec
jb
pop
cmpl
scas
and
lret
inc
jp
xchg
push
pushw
repz
je
lret
bound
jnp
lods
inc
out
mov
pop
jbe
loop
les
xor
pop
pop
add
push
dec
or
jne
repz
loop
movsb
sub
mov
popa
shrb
inc
je
imul
lds
xchg
inc
rorb
inc
jle
xor
mov
jecxz
hlt
xor
imul
cmp
mov
mov
cli
pop
cwtl
mov
adc
rorb
sub
fidivrs
lcall
pop
add
hlt
das
lea
cs
ljmp
xor
and
push
mov
adc
lret
mov
frstor
xor
add
ret
cmp
pop
inc
sbb
lret
test
popf
dec
jp
xlat
add
icebp
add
aas
and
push
rclb
hlt
shlb
pop
jae
flds
jge
add
inc
add
sub
nop
pop
shll
es
dec
inc
mov
sub
pop
lods
shll
hlt
pop
inc
test
adc
cs
push
int
jae
in
xchg
data16
imul
adc
pop
jnp
xchg
mov
mov
lods
and
xchg
inc
jns
xor
cltd
sti
insb
repz
orb
stc
mov
sbb
insb
xchg
adc
inc
and
add
mov
sub
mov
lcall
popa
fdivs
in
in
cmp
arpl
xchg
sbb
xor
sub
jle
divl
push
inc
ljmp
lods
sub
lcall
add
inc
pusha
sub
jne
push
sti
mov
rolb
xchg
movsb
sub
cmp
mov
int3
xchg
scas
jno
scas
or
mov
ficomps
andb
pop
pop
stos
cmpsb
subl
fidivl
shlb
std
mov
aaa
cs
jb
mov
cmp
psllq
or
xchg
add
les
sub
mov
repnz
lea
inc
xor
adc
push
pop
xor
mov
inc
xchg
shl
cmpsl
das
cmc
mov
mov
fstl
xchg
xchg
clc
inc
fcomps
dec
sub
xchg
sub
shll
mov
jge
or
mull
pop
mov
mov
or
xor
lods
repz
repz
dec
xchg
test
and
js
lea
sbb
movsl
mov
or
fsubp
enter
mov
leave
xchg
inc
push
mov
pop
nop
hlt
test
add
hlt
incb
out
test
mov
outsb
mov
jne
mov
enter
inc
scas
xchg
pop
or
push
je
pop
xor
add
sub
xor
dec
lock
inc
fdivs
ret
push
cmp
push
in
outsl
movaps
cld
mov
inc
stos
mov
mov
inc
stos
test
xchg
sbb
sar
pop
test
mov
fisubl
xchg
jb
xor
cld
imul
leave
test
push
jb
mov
stos
inc
inc
xchg
sub
inc
in
fnstsw
xlat
or
cld
daa
loopne
idiv
adc
hlt
mov
mov
out
les
mov
push
pusha
mov
mov
add
test
and
subb
fs
je
xchg
mov
shr
stos
divb
mov
lcall
inc
sub
dec
arpl
xchg
mov
mov
mov
ficoml
adc
or
stos
mov
insb
fucomp
or
lcall
jecxz
mov
es
inc
add
inc
mov
loop
and
dec
stc
ret
xor
inc
leave
jne
scas
nop
sub
ja
dec
mov
mov
mov
dec
mov
xchg
fstl
xchg
call
stos
cmpsb
bound
fcompl
sub
hlt
add
stos
popaw
jne
dec
xchg
arpl
xlat
jb
mov
aaa
scas
repnz
mov
jmp
add
lret
mov
rorb
das
test
jbe
les
lret
adcb
sub
push
dec
movsb
inc
outsb
mov
and
inc
adc
dec
pop
loope
jp
subl
mov
shr
test
mov
std
mov
roll
daa
das
push
push
cmp
and
fucom
dec
pop
cld
loopne
sbb
jbe
jb
leave
inc
mov
test
mov
adc
cmp
test
xchg
and
or
shrl
shlb
xchg
stc
nop
sbb
dec
fcompl
dec
out
mov
fiaddl
inc
add
add
cltd
jp
push
enter
pop
push
loopne
push
js
push
hlt
jp
arpl
jle
mov
xchg
pop
pushf
adc
daa
sbb
test
cmp
fimull
aam
adc
into
in
or
rclb
mov
sbb
andb
dec
cli
xchg
jecxz
push
lret
mov
mov
out
cmp
inc
add
popa
shll
mov
into
fucom
lcall
cwtl
mov
rorl
xchg
mov
push
in
mov
mov
add
mov
daa
inc
xor
lods
add
pop
call
aad
sbb
push
fcompl
pusha
icebp
jl
add
jno
sbb
imul
sub
lods
jge
movsb
ljmp
int3
inc
sti
xchg
jne
jmp
outsl
hlt
in
xchg
mov
xchg
call
mov
adc
hlt
popf
jnp
cmp
cmp
nop
lods
test
lods
jp
mov
jne
faddl
jg
xchg
test
inc
push
test
inc
mov
jp
cmpsl
in
hlt
adc
sbb
mov
sbbb
dec
hlt
jne
dec
fnstenv
pop
loopne
je
out
sub
cmp
lret
or
insl
cld
rcll
call
push
adc
jns
add
and
cmc
popf
adcb
out
lret
ret
sub
mov
arpl
test
jle
sub
call
rorl
shlb
push
pop
dec
pop
jle
cwtl
jne
sub
sahf
pusha
pop
shrl
enter
test
adc
mov
inc
and
andb
inc
fdiv
imul
shrb
cld
enter
push
aas
icebp
pop
inc
and
push
xchg
fwait
cltd
cli
mov
in
pop
mov
push
jmp
dec
mov
into
mov
xchg
imul
lret
ret
adc
xchg
jne
pop
clc
mov
ljmp
ds
shrl
mov
std
stc
inc
xchg
mov
sahf
mov
fucom
mov
cmp
cmpsl
je
lds
cmpl
jl
int3
add
and
sub
dec
repnz
jge
test
pop
mov
lds
arpl
push
cmpsb
push
addr16
or
pop
dec
jmp
loopne
push
mov
cmp
pushf
xor
call
xor
scas
xchg
cltd
xor
mov
int3
call
pushf
subl
cmp
leave
movsl
aad
jle
adc
aad
mov
ljmp
outsl
mov
mov
or
cwtl
sarb
aas
and
cmp
inc
mov
jp
inc
dec
cmpsl
aam
push
test
aad
outsb
xchg
stos
pop
inc
push
fdivl
es
or
xchg
push
cmp
inc
fmull
xchg
push
jecxz
add
das
test
sub
push
cmp
add
pop
pop
adc
pushf
hlt
stos
mov
ss
cwtl
add
mov
mov
data16
mov
shlb
jns
insl
lret
and
scas
fisubrs
enter
lds
test
fsts
push
xor
std
jg
jb
add
or
and
jnp
mov
dec
test
std
jecxz
int
xor
xchg
jne
je
in
and
adcb
mov
jns
xor
cwtl
in
push
fildl
adc
ret
shlb
or
and
push
add
xchg
outsl
in
push
mov
sbb
push
cmpsl
nop
mov
cmc
mov
xchg
add
es
fidivs
pop
mov
jbe
xor
mov
incl
aam
sub
pop
fwait
popa
ret
rorl
mov
or
lds
sub
or
sub
fwait
push
outsl
call
fimull
rcll
stos
xchg
pop
xor
fcmovnb
dec
sti
add
test
cmp
jle
adc
pop
mov
and
pusha
mov
fbstp
inc
fdivr
loopne
mov
fdiv
insl
xor
mov
stc
aam
cltd
dec
xor
popf
xor
das
int
or
push
loop
adc
popa
movsb
scas
cmp
in
mov
imul
hlt
mov
mov
xor
jp
test
mov
adcb
sub
pop
shr
pop
pop
cmp
dec
pop
inc
inc
dec
ret
bound
insl
out
xchg
jecxz
movsb
test
mov
mov
int
cltd
mov
lcall
mov
call
pusha
and
xchg
mov
jns
roll
les
jns
lds
pop
jmp
jg
dec
ret
cld
ja
loope
jnp
les
inc
cwtl
repz
mov
jne
mov
outsl
fisttps
push
sbb
pop
hlt
or
and
add
push
std
jp
or
shl
mov
push
jnp
sub
cmp
push
nop
stos
push
or
fistpl
enter
pop
sbb
movsl
test
dec
mov
negb
movsb
popa
stos
xchg
data16
lock
hlt
lea
jge
outsl
or
rolb
dec
mov
fwait
add
push
push
mov
test
push
push
adc
popa
mov
inc
jecxz
xlat
push
sbb
out
cwtl
mov
negb
repnz
or
jae
sub
hlt
sub
cltd
dec
jne
dec
or
aam
push
or
outsb
mov
sub
mov
sub
outsb
cld
in
int3
push
adc
popl
mov
or
jmp
push
sub
push
pusha
stos
ficompl
dec
in
out
mov
pop
jp
cs
daa
out
mov
jge
jne
pop
dec
jp
sar
mov
std
pusha
out
imul
jg
xchg
mov
pusha
std
mov
jb
repz
push
insl
xchg
aas
jnp
movsb
jle
xchg
and
xor
mov
xor
mov
or
mov
dec
mov
hlt
pop
sbb
les
fistl
test
xchg
or
pop
shl
and
and
sub
push
into
jb
xchg
inc
ret
shll
aas
mov
aas
mov
adc
inc
out
sub
loope
lods
adc
daa
stos
cmp
xchg
not
and
mov
ds
xchg
pop
pop
sbb
out
das
add
mov
aam
pushf
std
lea
push
mov
pop
pop
dec
pop
mov
fnstcw
insb
shlb
mov
shrl
xor
rorb
xor
jno
cli
adc
in
and
mov
xchg
iret
xor
sub
lret
fiaddl
xor
out
cmp
int
js
add
mov
fnstcw
dec
fisttpll
ret
pop
dec
stos
push
das
enter
sbb
jl
add
hlt
xchg
mov
rcl
mov
ja
fsub
test
pop
stos
jne
iret
cmpsl
or
push
lahf
nop
mov
pop
inc
cmp
push
clc
jne
test
push
les
in
inc
pop
inc
pop
lret
repnz
mov
dec
jg
and
enter
xor
in
dec
jnp
add
inc
dec
xchg
cld
daa
mov
jle
ret
add
shl
add
dec
in
add
sahf
sti
imul
xchg
sub
adc
rorb
lret
std
jne
sbb
lretw
pusha
xorb
lcall
aam
inc
andl
push
mov
dec
pop
mov
jg
mov
xchg
mov
leave
mov
add
pop
rorb
push
jne
cmp
repnz
das
stos
pop
outsl
mov
scas
popa
imul
mov
movsb
loope
out
add
test
mov
mov
push
sti
popf
mov
adcl
pusha
adc
in
mov
xlat
xor
mov
shlb
shlb
test
loopne
lea
mov
mov
inc
mov
push
int3
jne
cltd
jns
mov
jle
add
push
stc
nop
cltd
adc
adc
lods
sti
fsts
cltd
andb
rep
hlt
xlat
sub
aad
enter
jo
push
or
mov
jmp
icebp
pop
adc
add
pushf
mov
sub
sub
jg
lods
jns
mov
call
sub
sub
negb
sub
add
cld
gs
xchg
stos
mov
mov
or
aaa
ss
scas
and
add
jb
pop
test
xchg
hlt
push
and
push
add
lea
inc
fwait
pop
pusha
mov
adc
fsubrl
ret
iret
jns
aaa
out
or
mov
xchg
adcb
jmp
repz
and
ljmp
cmp
inc
pop
cmp
xchg
lahf
hlt
pop
daa
jns
je
xor
push
nop
mov
mov
pop
add
std
fidivrl
pop
mov
dec
les
fildl
mov
sbb
pop
addr16
icebp
inc
shl
xor
lods
and
sahf
in
xorl
fdivrl
movb
shll
mov
jnp
xchg
mov
imul
in
pop
adc
pop
aam
jmp
xlat
orb
dec
imulb
movd
xor
xchg
mov
add
popf
icebp
sbb
sbb
lods
mov
mov
xlat
fwait
adc
leave
sbb
mov
fnstenv
lret
insl
std
jmp
adc
leave
pop
repnz
imul
adc
xchg
pop
aas
sbb
xor
pop
test
aaa
shrl
push
hlt
inc
push
lahf
jg
es
scas
sbb
es
lahf
sbb
xchg
sbb
inc
xchg
xchg
lret
xchg
inc
leave
arpl
add
jg
and
call
test
fsubs
jmp
jbe
jnp
lods
lret
xchg
test
add
leave
stos
inc
jp
js
leave
fdivrl
scas
dec
stos
test
scas
sub
mov
push
adc
mov
dec
sub
bound
mov
jecxz
std
mov
ljmp
outsl
xlat
xor
and
and
xor
icebp
push
pop
stos
movsl
jnp
jo
cmp
adc
jno
pop
ljmp
mov
cli
dec
xchg
jl
in
imul
xchg
inc
fwait
inc
es
cld
fmulp
std
add
ret
and
xchg
or
mov
or
cmp
into
std
jnp
xchg
mov
es
aad
jns
cli
and
nop
xchg
hlt
ret
adc
jns
or
push
add
adc
sub
add
shrl
hlt
pop
or
inc
sbb
push
std
xor
in
inc
mov
mov
pop
jne
xor
mov
add
addl
sub
sub
adc
jl
pop
shrb
lock
insl
es
ret
mov
jns
sub
and
loope
jecxz
fwait
gs
inc
lea
push
pop
push
mov
inc
jbe
mov
xchg
mov
sbb
daa
pop
cmpsb
clc
xchg
pop
fdivr
movsb
or
mov
jbe
mov
insl
adc
jmp
xchg
pusha
frstor
cmp
mulb
out
in
mov
cmpsl
sub
insl
mov
cwtl
rclb
cmpsb
pop
mov
imul
or
ss
jge
es
adc
loopne
jno
dec
jecxz
cmp
adcb
sarb
sub
mov
sti
inc
adc
shll
xor
sbbl
adc
je
pusha
mov
xchg
mov
dec
ret
aad
pop
xchg
pushf
jb
lcall
es
mov
inc
jle
loope
and
jge
lret
xchg
mov
es
pop
xor
mov
dec
ljmp
shrb
mov
loopne
add
pop
sbb
sub
gs
add
mov
add
add
inc
shrl
and
sub
inc
add
xor
fcoml
mov
les
push
fcomps
jae
add
outsb
mov
nop
mov
mov
adc
jnp
dec
push
cmp
push
ss
mov
clc
jbe
popf
dec
aad
mov
outsb
cmp
in
aaa
sbb
stc
out
push
leave
mov
aad
loop
fs
dec
popf
iret
mov
testb
out
scas
push
jmp
pop
add
lods
pusha
sbb
testl
sbb
mov
lods
leave
inc
arpl
inc
popa
xchg
adc
into
mov
sbb
cmp
pop
add
cs
insl
xor
or
imul
sub
pop
pop
and
les
test
or
cmp
dec
sbb
xor
dec
clc
andl
js
mov
add
clc
adc
mov
xchg
dec
push
ja
and
mov
lret
add
cmp
insb
jns
mov
xchg
pop
shrb
mov
sub
sahf
add
inc
add
mov
out
mov
ret
inc
push
call
dec
test
cltd
test
outsl
in
mov
pusha
movsb
cs
mov
jo
dec
ljmp
lods
hlt
test
repz
inc
jge
test
jne
stc
sbb
aaa
stc
out
mov
inc
pop
jne
outsl
mov
scas
mov
mov
into
jg
test
pop
decb
ljmp
lods
jns
sub
adc
adc
jnp
popf
aad
jnp
ja
push
push
pop
adc
ljmp
sub
loop
fdivp
or
or
pop
movsl
pop
popf
test
jle
sbb
cltd
dec
lea
and
scas
sub
addb
scas
sub
push
mov
sub
push
nop
sub
idiv
cmp
ficoms
mov
xchg
or
mov
int3
mov
hlt
cmc
lods
push
subb
or
push
sti
aas
stos
mov
jecxz
gs
sahf
add
subl
cltd
sahf
hlt
pop
cwtl
add
ljmp
xor
add
lret
xor
sbb
mov
nop
sub
or
ret
add
int
int3
jnp
xacquire
loope
or
popa
xchg
dec
fs
call
sbb
cmpsb
sti
shrl
es
ljmp
in
jb
inc
movsl
lods
push
popa
mov
addl
aam
inc
mov
mov
push
cmpsl
notl
clc
sub
fsts
adc
lret
jo
arpl
pop
stos
or
cmpsl
mov
inc
shll
push
pop
fwait
jo
adc
pop
dec
jg
scas
insl
dec
add
sub
push
rorb
mov
mov
rorb
adc
lcall
test
pusha
xchg
pmullw
mov
cmp
xor
lret
xchg
sub
test
xorb
aas
stos
or
push
mov
mov
movsb
or
adc
mov
jno
stos
arpl
into
les
pop
mov
fcomp
arpl
mov
fistpl
push
dec
push
popf
jecxz
cmp
push
test
sti
jo
js
fwait
sub
xchg
push
xchg
test
pop
mov
notb
xor
adc
fcoml
pop
std
sbb
shrb
mov
clc
inc
pop
inc
lods
sub
test
scas
mulb
xor
into
lock
add
mov
push
inc
pushf
sub
xorl
jg
shll
cld
bnd
daa
out
gs
test
mov
dec
mov
lret
fcoml
mov
fsub
aas
mov
in
mov
jb
cmpsl
out
daa
fcom
fisubs
mov
nop
mov
into
stos
cmc
fnstenv
inc
lock
rep
cmpsl
inc
xchg
mov
mov
add
push
xchg
mov
push
pop
fdiv
stc
pusha
add
insb
mov
icebp
xorb
lods
jne
lods
notb
mov
test
shlb
loopne
push
hlt
lcall
sbb
cmp
push
popf
dec
or
sbb
mov
rorb
fldenv
rclb
pusha
push
shr
jg
dec
push
std
dec
jmp
inc
mov
pop
nop
xchg
lods
shr
pusha
cmpsl
enter
subb
mov
sbb
out
jl
mov
jp
mov
adc
repz
push
mov
insb
push
aam
std
cld
hlt
sbb
cmc
outsl
stos
loope
outsl
mov
dec
in
and
cmpsl
xchg
in
in
adc
cs
gs
adcl
enter
rorl
xorl
inc
daa
cwtl
test
cs
ja
or
mov
shlb
jb
mov
inc
imul
aad
cs
fsubrs
sub
xchg
mov
xchg
std
ja
mov
mov
and
mov
loop
movsb
mov
hlt
inc
lods
cli
and
adc
or
int
xor
les
sarl
insb
sub
jmp
gs
xor
filds
mov
les
lahf
mov
cmp
mov
ficompl
and
add
push
jns,pt
push
ja
loope
cmc
xor
loopne
cld
inc
filds
jne
mov
mov
rorb
or
adc
pop
outsb
sbb
and
push
loopne
addr16
imull
sti
test
inc
add
out
lods
and
setg
bswap
push
jns
add
xchg
pop
fimuls
jmp
les
aad
lret
aas
inc
outsl
into
xor
hlt
mov
psrlw
aam
and
insl
adc
mov
mov
pop
add
and
cltd
arpl
xchg
inc
hlt
cli
data16
mov
insb
sub
mov
mov
jge
bound
pusha
cmp
xchg
dec
adcb
aas
repz
cmc
push
movsb
or
cmpb
jge
jne
pop
iret
icebp
add
xchg
xchg
popa
adcl
dec
jg
mov
hlt
mov
or
cmpps
and
add
push
add
adc
mov
hlt
lods
lds
test
xchg
inc
data16
out
jbe
out
cmp
push
jmp
xor
test
xor
scas
and
inc
or
dec
cmp
cmc
int
sbb
dec
push
loopne
jns
jbe
insb
sub
pop
dec
in
cmp
or
and
popf
mov
inc
mov
loop
cmp
jns
data16
pop
scas
mov
push
sub
popa
mov
unpckhps
add
mov
pop
js
jbe
rolb
sbb
push
xchg
std
xor
or
pop
popa
pop
nop
test
and
xchg
jmp
sub
mov
mov
icebp
cmp
outsb
dec
std
cmc
xor
xchg
sbbb
imul
es
hlt
adc
mov
imul
push
inc
data16
and
jle
shlb
xchg
addl
or
loop
mov
pop
std
ret
fstpt
sbb
scas
mov
xchg
or
or
sahf
jno
call
or
pop
sti
cmp
hlt
mov
cmp
inc
fs
xor
pop
mov
sub
pusha
jne
push
testl
out
cs
dec
pop
int3
inc
shlb
push
in
mov
mov
std
repz
lods
xor
cli
cld
orb
bound
pop
jle
sub
xchg
and
add
pushf
sbb
xor
pop
push
enter
nop
xor
hlt
sbb
push
xor
mov
test
mov
ror
mov
jnp
popl
in
cmpsl
xchg
mov
rcrb
sub
mov
loopne
addl
stos
dec
clc
xorl
pop
cmp
jo
jecxz
xchg
leave
dec
ja
lret
and
inc
push
cld
inc
std
inc
jo
pop
in
aam
movsl
fldcw
cmc
movsl
cli
jmp
jmp
lret
push
mov
add
jne
popa
cli
fidivrs
fmull
stc
aad
adc
push
popf
push
mov
sub
test
stos
adc
sub
mov
repnz
jge
out
into
pop
fldl
pusha
mov
test
mov
pusha
ljmp
stos
pusha
jae
adc
jnp
push
movsl
dec
mulb
icebp
push
mov
jne
mov
jo
clc
pop
jnp
stos
mov
mov
cmp
idivl
rorl
jb
sbb
inc
sub
and
pop
ljmpw
daa
jbe
inc
aad
sub
xlat
push
cmc
in
pop
outsl
arpl
xchg
pop
js
icebp
inc
jne
test
leave
insb
popa
cmp
sahf
dec
mov
enter
fldl
push
shl
mov
rcll
xchg
loope
sbb
lods
invd
enter
and
sub
xchg
mov
rcll
adc
insl
shlb
mov
cmp
aad
orb
jne
ja
push
dec
inc
adc
lahf
or
adc
pop
mov
sti
jecxz
testl
and
xchg
jl
stos
mov
sar
fcom
mov
loope
js
aam
stos
dec
lock
hlt
mov
lret
dec
add
lcall
jnp
inc
jae
adc
jns
cltd
repnz
pop
stos
jns
testl
push
sub
xor
sti
lods
arpl
mov
adc
pop
nop
pusha
cmp
lret
jne
int
mov
jp
pushf
dec
insb
mov
shrl
in
push
jl
pusha
xorb
xchg
scas
inc
clc
pop
push
xchg
jnp
cmpsb
xor
push
sbb
mov
repnz
fxtract
push
push
mov
jnp
bound
es
cli
mov
sub
cmp
sti
add
fsub
mov
jne
mov
lods
push
test
arpl
pop
lret
dec
adc
dec
lods
scas
pushf
add
pop
push
cs
adc
subl
add
mov
and
lods
jae
lcall
xchg
imul
mov
or
xchg
cmpl
inc
xchg
test
scas
mov
cltd
cmc
icebp
push
mov
xchg
hlt
outsb
ror
test
stos
jne
out
xor
cmp
fistps
hlt
cli
mov
add
jb
cmpb
fdivrs
mov
mov
inc
add
es
sahf
xchg
pushl
ss
xchg
pop
xchg
fisttpll
push
std
imul
movsl
incl
mov
sarb
leave
push
daa
cmp
xor
push
sbb
imull
les
std
add
dec
in
jno
adc
imul
push
adc
cs
xchg
test
pop
pop
and
jl
push
cmp
xor
adcl
cmp
xchg
outsb
xorl
sbb
fyl2xp1
shr
mov
or
inc
ds
lret
sbb
mov
cli
mov
inc
dec
jecxz
insl
sti
xchg
add
lods
dec
clc
cltd
and
lods
xor
andl
mov
in
xor
js
lcall
shrb
lret
and
cmpsl
test
cmp
xchg
pop
pop
cwtl
cli
jg
repz
notl
mov
fnstsw
inc
inc
mov
out
mov
insb
fistps
inc
adc
sub
int3
pop
sub
mov
das
cmc
icebp
xchg
adc
enter
mov
pop
test
lods
dec
subl
addl
loop
movsb
xchg
add
jns
xlat
std
sbb
mov
cmp
and
sub
and
and
into
sbb
cld
cld
dec
xchg
sbb
mov
xor
mov
mov
adc
cmp
sbb
push
inc
jecxz
inc
xor
sub
and
add
mov
xorb
pop
ret
mov
imul
or
test
shrb
movsl
mov
in
dec
ss
mov
sub
data16
adc
les
in
pop
adc
shll
test
addr16
ja
stc
xor
fiaddl
imul
ret
in
sub
push
mov
add
mov
data16
lods
pop
or
xor
test
pop
rcl
jecxz
xor
fmuls
mov
inc
or
iret
test
cld
movsl
add
sbb
sub
mov
mov
es
rolb
lret
ja
call
dec
push
cli
cltd
lret
mov
insb
add
aas
mov
repz
pusha
repz
or
stos
hlt
cwtl
pushf
sub
mov
xorl
mov
leave
dec
stos
jge
int3
xchg
out
xor
sub
imul
ja
adc
xor
pop
sbb
pop
inc
mov
inc
insb
arpl
fdivs
jne
jmp
repnz
jb
jnp
xchg
jg
push
enter
shrb
xor
into
mov
rorl
or
mov
cmpsl
out
jl
mov
dec
and
pop
sub
xorb
inc
jg
xor
ret
std
call
or
dec
test
lea
cwtl
push
mov
cmp
adc
push
or
lods
xchg
inc
test
clc
ficoml
pop
movsl
sub
movsb
shll
aam
stc
cld
cmp
xor
xor
in
jle
enter
xchg
ss
pushf
lahf
out
cwtl
jmp
push
xchg
mov
imul
xor
inc
lcall
adc
lret
icebp
mov
ficoms
cs
movl
out
jmp
cs
js
cltd
adc
sbb
inc
sub
lret
mov
add
aaa
add
enter
sbb
or
add
cmp
dec
out
lret
js
roll
mov
cmp
div
mov
cmp
inc
push
in
mov
inc
fiadds
rorb
mov
fldt
enter
mov
mov
cmpsl
setb
xlat
push
adc
adcl
sub
stc
jns
repz
addb
hlt
pop
sbb
dec
cmc
dec
adc
adc
popa
mov
cmp
pop
cltd
jne,pt
xlat
cwtl
mov
insl
enter
nop
pop
fldt
insb
test
inc
mov
pop
rcll
jne
sahf
hlt
fsts
dec
lahf
dec
fwait
mov
fbld
cli
pop
mov
adc
pop
jle
inc
or
lahf
jns
gs
mul
cmp
xorl
lcall
leave
cmpsl
test
mov
bswap
test
mov
loop
adc
wrmsr
int
jmp
and
je
cmpsl
pop
dec
imul
cmpsl
jle
sbb
es
nop
cmp
mov
sub
xchg
das
lret
push
pusha
shrb
leave
dec
insl
or
inc
cmpsb
rclb
movl
sub
mov
sahf
ffreep
into
shll
popf
jg
leave
add
popw
lahf
pop
sub
sub
in
ret
cmp
addl
stos
pop
or
mov
mov
pop
out
xchg
lret
movsb
mov
daa
cmp
adcl
mov
adc
fwait
or
xchg
fists
pop
stos
insb
outsb
and
mov
pop
lea
mov
xchg
fcomps
scas
xchg
addr16
cmp
mov
xor
pop
sbb
push
add
aaa
cmp
cmc
scas
nop
pop
adc
aam
or
std
stos
xchg
repz
mov
sbb
leave
ss
inc
xor
mov
or
dec
mov
scas
enter
lds
pop
add
dec
out
shrb
dec
sbb
hlt
pop
and
mov
dec
popa
mov
pop
int3
enter
hlt
or
push
loopne
mov
mov
inc
test
mov
sbb
and
les
sbb
ja
xchg
jle
stc
and
jp
or
cli
add
xchg
jl
fucomi
in
xchg
or
mov
loopne
dec
mov
add
es
cwtl
adc
mov
pop
lret
mov
enter
arpl
push
test
push
jle
jl
dec
stc
mov
mov
enter
daa
mov
dec
aaa
test
push
cmp
jne
jg
push
loop
xor
pop
stos
sbb
inc
out
mov
into
nop
fildl
cwtl
pushf
sub
std
pusha
sahf
adc
sub
jmp
mov
clc
jecxz
inc
stos
shrl
fucomip
pop
jne
cli
dec
add
out
mov
ret
jae
xchg
mov
jle
lock
pop
sub
mov
or
dec
shlb
mov
adc
hlt
jnp
cltd
pop
or
fxch
dec
xchg
mov
xchg
mov
test
inc
push
pop
add
fisttpll
dec
dec
stos
mov
jmp
sub
pop
mov
xlat
pop
push
loop
or
sub
dec
inc
popf
cld
lock
mov
or
push
adc
mov
cmp
movsl
inc
push
push
shll
cmp
sahf
inc
scas
cld
jle
mov
pop
bound
rcr
inc
pop
sahf
cmpsl
add
mov
rcr
jne
adc
cmp
mov
arpl
jg
xor
lahf
movsb
and
dec
hlt
sarb
jge
sub
ljmp
aad
cwtl
push
dec
insl
jle
lea
fldenv
push
sub
jns
cld
dec
rcr
in
mov
mov
inc
mov
or
scas
inc
sub
push
test
js
fsubrs
pushf
gs
xchg
lods
ret
aad
push
mov
ret
sbb
test
enter
cmpsl
inc
mov
sbbb
jge
enter
fwait
jmp
jle
loopne
mov
jge
orb
repz
mov
movsl
jns
lahf
pop
arpl
sub
outsb
push
cmp
pop
mov
in
xor
sbbb
mov
push
test
lahf
sbb
adcl
jmp
lcall
pop
gs
out
icebp
add
nop
mov
shl
or
xor
dec
inc
xor
mov
xor
dec
roll
sbb
push
ljmp
add
rol
push
mov
mov
mov
and
push
mov
jne
cld
xor
and
aas
mov
pop
outsb
adc
pop
scas
enter
sbb
inc
xchg
pop
dec
add
in
mov
stos
insl
cli
mov
xchg
and
outsb
sub
loope
pop
mov
aam
xchg
sub
push
lcall
mov
jns
pushf
cwtl
dec
test
cmp
dec
enter
adc
xchg
movsl
xorl
jecxz
cs
xchg
pop
jp
fnsave
mov
repz
add
pop
ljmp
pop
dec
sbb
mov
nop
lret
das
jg
jbe
ficoms
add
stos
jnp
push
inc
ljmp
int
push
fcoml
mov
dec
xchg
sar
and
jo
xor
jge
push
xchg
pop
mov
xchg
popa
inc
lea
std
in
add
es
js
adc
sub
push
test
and
push
and
js
outsl
mov
sub
mov
jp
orl
push
or
push
and
mov
pop
mov
xor
ret
pop
mov
aas
je
std
sbb
clc
mov
hlt
mov
sub
push
cmp
mov
pop
nop
in
or
mov
aaa
loop
daa
jecxz
jo
pop
imul
mov
add
insb
jle
dec
mov
jge
xchg
aaa
add
push
sbb
sub
std
das
mov
sbb
cwtl
cmp
insb
jbe
aas
div
sbb
in
sub
xchg
andl
cwtl
adc
loop
les
hlt
adc
leave
add
dec
call
xlat
loop
push
aam
jmp
fstpt
int3
mov
adc
mov
hlt
ret
mov
shlb
shll
je
mov
lock
ror
adc
mov
das
insl
xor
hlt
std
dec
mov
inc
adc
xor
stos
inc
xor
dec
pop
adc
inc
mov
aam
sub
sbb
stos
insl
fisubl
shll
xchg
fmull
dec
jecxz
pusha
les
jge
push
leave
xor
stc
adc
xchg
jp
insb
sbb
clc
aad
stos
sbb
ljmp
rclb
fstpl
mov
mov
cwtl
arpl
and
aad
flds
aas
or
jecxz
jmp
and
incl
cmp
sarb
fisttpll
stc
sahf
lcall
sub
jle
arpl
or
mov
sarb
jp
cltd
sub
inc
lods
sbb
rcr
push
shlb
mov
mov
call
mov
dec
pop
xchg
pop
xor
fcmovbe
jne
into
sbb
mov
imul
adcl
pop
movswl
jne
call
mov
iret
jg
out
cmp
hlt
mov
push
ret
aam
lea
loope
sub
hlt
inc
inc
js
test
scas
sub
inc
or
aaa
dec
jmp
mov
ret
div
cmpsl
lea
mov
adc
clc
sub
ret
pop
lret
test
jmp
test
shrl
ja
or
lock
sbb
or
mov
add
imul
push
and
adc
cmpsl
dec
add
pop
lods
data16
out
daa
mov
jecxz
icebp
jne
popa
scas
call
dec
sub
adc
adc
addr16
or
sub
inc
into
jnp
lcall
cmpl
mov
and
dec
or
and
mov
shlb
lods
add
pop
inc
or
jae
movb
aaa
mov
jl
lahf
pop
xor
pop
mov
pop
addl
adc
mov
sti
pusha
mov
shll
mov
sub
or
xchg
mov
iret
iret
js
aaa
scas
in
andb
sar
cs
or
xchg
add
cli
jne
jmp
fisubrl
sub
xchg
adc
sarl
movsb
jne
mov
mov
inc
inc
adc
insl
outsl
movsb
mov
repz
cmc
imul
mov
leave
ret
xlat
call
iret
fs
out
jecxz
mov
jne
test
sub
and
pop
dec
inc
push
jnp
imul
or
inc
xchg
and
bound
into
in
add
mov
jge
frstor
mov
adc
rol
cmp
loope
xchg
hlt
mov
movsb
push
loop
js
xor
in
lods
xchg
popa
xchg
test
push
dec
cmp
dec
lret
test
jg
dec
movsb
shll
jl
popa
addb
push
cs
mov
or
xchg
pop
xlat
fiaddl
dec
or
popa
mov
mov
jnp
mov
js
int3
shll
inc
pusha
xor
fs
xchg
dec
push
sub
xchg
push
add
addr16
or
inc
and
cmc
mov
lea
ret
dec
out
mov
lahf
in
pop
mov
nop
sarl
jns
jge
inc
je
mov
push
pop
fisttpl
xchg
add
pop
mov
loope
test
or
stos
stc
repnz
aad
test
rclb
das
stos
mov
pop
scas
sub
test
imull
aas
aam
mov
push
cwtl
bound
sub
imul
mov
mov
pushl
mov
adc
mov
push
and
pushf
jb
add
popa
mov
sub
or
push
push
lods
aam
movsl
xor
add
lahf
cmp
push
into
insl
test
fmul
into
push
pop
sub
stos
nop
dec
lock
mov
jne
stos
decb
dec
shll
sar
jmp
sbb
jl
outsl
enter
fwait
push
sti
mov
xchg
adc
push
andl
ja
scas
fcomps
mov
rolb
push
or
add
shl
mov
pop
inc
cmpsb
inc
insl
mov
cmp
sbb
mov
or
pusha
sbb
sbb
mov
add
cmp
dec
mov
dec
push
enter
add
outsb
xor
sbb
and
xor
rcll
sbbl
les
adc
int
ficoml
inc
mov
and
scas
mov
or
cmp
xchg
out
xchg
mov
cld
mov
xchg
xchg
pop
shll
jl
lods
sti
icebp
lock
cmp
cmc
sub
xchg
push
faddp
addr16
sti
push
in
ss
lret
add
sbb
lea
popf
sti
mov
add
repnz
add
mov
aad
mov
inc
flds
out
pop
and
mov
sbb
jne
daa
mov
and
jne
dec
pop
dec
adc
add
jne
repz
push
das
pop
sub
push
mov
daa
stos
inc
adc
imul
stos
addr16
xor
repz
test
xlat
dec
or
test
outsl
in
sarb
pusha
xchg
imul
movsl
ficoms
fiadds
jae
lods
orl
gs
inc
mov
sti
jns
jle
jp
mov
nop
roll
in
cmp
xchg
nop
mov
daa
push
ret
xorb
mov
cli
shrb
sub
fwait
ret
in
push
cmp
fimuls
inc
adc
mov
jne
adc
sti
jge
push
adc
xchg
adc
fs
testl
inc
ror
dec
iret
sti
or
fbstp
insb
mov
fwait
cwtl
mov
nop
shlb
test
cmpsl
clc
hlt
inc
movsl
jbe
xor
mov
jg
movsl
ret
out
les
jge
js
or
cmpsb
add
or
jne
arpl
xchg
pusha
pop
popf
or
int3
insb
popf
icebp
cmc
or
inc
jne
mov
sub
cli
mov
icebp
mov
sub
inc
mov
mov
gs
sahf
ret
aaa
fs
hlt
xor
dec
stc
inc
sub
popf
lock
out
movsl
test
aaa
js
cli
xor
push
sti
sbb
or
hlt
xchg
xlat
ss
adc
mov
add
mov
xor
dec
repnz
icebp
test
fldt
std
pushf
ss
pusha
test
iret
adc
jbe
push
fstl
pop
repnz
mov
xchg
mov
jne
aas
pop
cli
cmp
pop
xchg
xor
mov
cltd
mov
idivb
dec
sub
and
lock
dec
arpl
add
data16
test
xchg
sbb
dec
cmpsl
jecxz
mov
test
dec
mov
lret
push
dec
in
orb
ljmp
pop
and
xor
xchg
imul
movsl
hlt
xchg
push
add
jp
sbb
xchg
xor
inc
mov
pop
jne
popf
jecxz
cmp
sahf
sub
lods
imul
hlt
movsb
lods
jle
xchg
mov
pop
sbb
cmc
pop
icebp
enter
push
adc
pop
push
or
jbe
jp
iret
aad
pop
test
mov
scas
shlb
inc
subl
fsubl
addr16
ljmp
mov
inc
jno
nop
xchg
mov
xchg
jne
inc
fmuls
sbb
nop
imul
sub
mov
pop
incl
shr
mov
sub
and
add
nop
test
repnz
fstl
lods
mov
push
stos
mov
jne
das
mov
mov
daa
popa
pop
les
mov
dec
enter
lds
adc
xchg
pop
imul
adc
jge
mov
mov
mov
adc
xchg
in
les
sbbl
cmpsl
or
inc
out
jge
nop
or
mov
cmp
xor
add
faddl
and
adc
sub
push
pop
addb
lock
mov
out
in
vlddqu
leave
xchg
xor
cwtl
or
inc
cld
rcrb
cmpsl
and
mov
pop
cmpsb
mov
jbe
aas
out
test
pop
int3
movsl
jecxz
xor
mov
inc
ss
int
adc
sbb
cmpsl
mov
cs
stos
dec
xchg
and
aad
adc
std
jmp
xor
jnp
movsl
lods
sbb
int3
sbb
iret
cmp
test
jnp
aam
addr16
cmp
in
push
cmpsw
aad
push
addr16
pop
mov
movsb
insl
add
add
movsl
stos
pushf
pusha
add
cmovno
xchg
adc
lahf
fistl
mov
shrl
outsb
sbb
jnp
sub
adc
mov
push
push
fnstenv
mov
jne
imul
loop
jge
out
pop
jns
addb
into
push
push
inc
mov
cmp
scas
or
fnstenv
out
notl
js
hlt
push
rclb
repnz
xlat
fdivrs
stc
or
aam
inc
pop
push
and
mov
std
cmp
sub
adc
iret
sub
aam
shlb
xlat
dec
test
movsl
stos
loopne
xchg
out
inc
xchg
mov
or
cmp
mov
out
sub
aad
mov
sti
xor
stos
mov
pop
clc
cmp
push
stos
test
cmp
lods
nop
jno
inc
inc
call
js
sbb
test
shll
adc
aam
inc
add
les
dec
cmpsl
movsb
mov
scas
call
hlt
idiv
push
in
ja
add
test
push
sbb
outsl
jmp
ljmp
sbb
dec
dec
call
add
test
xchg
jns
mov
insl
out
xor
or
mov
mov
add
adc
insb
push
or
jne
add
rclb
jmp
xchg
and
fisubl
push
jmp
add
adc
ljmp
mov
pop
nop
mov
pusha
mov
mov
cli
data16
pop
movsl
mov
adc
mov
cmp
xorb
adc
out
jp
push
jbe
outsb
jo
movsb
iret
fldl
out
mov
xchg
lret
out
mov
loop
dec
inc
fstpl
pop
out
fwait
cmp
pop
inc
pop
ret
mov
xor
icebp
test
es
lret
dec
add
ret
pop
sub
movsl
mov
loop
shrb
imul
das
sub
es
xadd
rorb
push
mov
dec
or
xor
mov
and
call
add
xor
sahf
je
fildll
cmpsl
jne
mov
movl
sbb
dec
fildll
dec
mov
movsl
sbb
insl
fsubl
js
add
sub
jecxz
hlt
xchg
xchg
cmpsl
stc
cmc
dec
dec
dec
addr16
les
mov
ror
pusha
notl
xor
adc
xchg
lds
push
jbe
es
xchg
repz
movl
xor
xchg
ret
xlat
mov
mov
xor
mov
jge
xor
and
jno
sbb
jl
jle
insl
and
outsl
jne
xor
insl
pop
xor
jge
xchg
testl
js
push
cmpsl
mov
jbe
or
test
test
hlt
int
into
inc
dec
stos
cmp
mov
roll
sub
hlt
test
test
add
in
or
mov
aad
jp
and
inc
sbb
cli
lods
stos
push
xor
aad
ljmp
loop
dec
fcmovnbe
mov
push
mov
push
cs
outsl
sbb
xchg
sub
cmp
sbb
push
pushf
mov
and
pushf
sub
aad
hlt
add
inc
dec
jno
iret
test
loop
mov
pusha
sti
jne
aad
adc
adc
stos
sbb
or
adc
adc
lods
test
stos
or
mov
int3
mov
fs
pop
ja
loope
in
dec
shrl
notl
cmp
or
mov
std
loopne
pop
sub
pusha
xchg
hlt
rcll
cld
mov
xchg
repz
fisttpll
in
cmc
push
dec
movsl
cwtl
xchg
rcr
cmp
ret
rorb
xchg
shrl
repz
mov
xor
dec
rclb
pop
cs
push
hlt
dec
and
mov
movsb
mov
sahf
iret
lahf
mov
mov
roll
jg
lea
sar
popa
test
hlt
ljmp
mov
sub
movsl
cmp
mov
ss
scas
pop
ret
mov
sub
outsl
inc
mov
test
scas
xor
sub
icebp
add
jmp
mov
mov
jne
xor
pop
ror
mov
fisttpl
jbe
out
mov
jmpw
out
xchg
shrl
es
jne
sub
cmp
xlat
xchg
sub
pop
adc
nop
loop
ja
cli
jae
test
addr16
movsb
jns
xlat
xchg
sbb
mov
dec
adc
out
sti
repnz
xchg
push
daa
dec
and
sbb
adc
loope
hlt
xor
inc
leave
das
mov
sub
lods
cmc
sbb
addb
sti
sbbb
inc
rcr
adc
xor
push
cmp
jle
adc
enter
mov
cwtl
mov
cmpsb
sub
data16
and
das
xchg
jmp
cmpsl
cmp
mov
adc
jae
bound
nop
cmpsb
es
test
mov
cmp
scas
in
imul
por
loope
jo
dec
xor
cmp
das
mov
cs
stc
dec
or
cmp
lret
cmp
hlt
mov
xchg
add
mov
xchg
ror
adc
jne
mov
inc
shlb
or
pop
das
xchg
in
lret
lods
xchg
sbb
mov
push
mov
ret
cwtl
dec
hlt
mov
or
lahf
xor
dec
sub
insl
hlt
repz
mov
aas
cmp
hlt
imul
rolb
repnz
cmp
push
hlt
cmp
push
push
test
push
adcb
js
mov
sbb
and
mov
mov
sub
movsl
test
in
xor
shlb
les
scas
hlt
data16
outsl
cmc
fbld
into
pusha
dec
aaa
jae
pop
cmpl
repnz
add
mov
pop
scas
aad
push
std
stc
mov
sbb
test
cmp
push
mov
aad
mov
arpl
cmc
imul
xor
ds
arpl
mov
pusha
shll
hlt
movsl
push
cmp
orl
pop
test
fnstenv
inc
insb
repz
jne
mov
or
imul
pop
inc
pop
sbb
cmp
das
mov
cmpsb
mov
add
data16
into
cmp
sub
mov
imul
leave
pop
xchg
rorl
xchg
test
jg
ret
rcrb
imulb
loopne
stos
sbb
pushf
xchg
inc
push
popa
fcompl
adc
fucomip
adc
insb
or
stos
jo
xchg
sbb
dec
adc
out
push
clc
fstpt
nop
enter
sbb
imul
movsb
sub
jns
xchg
aam
ret
jbe
dec
mov
popf
mov
pop
inc
add
inc
pop
sbb
or
lods
shrb
in
mov
int3
into
sbb
jg
mov
dec
gs
bound
lret
jmp
cmp
or
test
ret
cli
mov
dec
mov
inc
or
insb
nop
aam
call
inc
pop
je
imul
neg
sbb
mov
sti
jmp
inc
mov
lock
push
cmpsb
aas
movsl
pop
iret
loop
clc
xchg
sbb
xchg
sarb
sbb
pop
mov
push
hlt
push
jle
mov
mov
les
xlat
xor
call
insb
test
push
out
frstor
test
loopne
cwtl
mov
es
imul
xchg
clc
rol
mov
mov
push
push
jne
aad
es
sahf
dec
or
jle
or
add
in
in
orl
ret
js
xchg
arpl
fmull
mov
clc
lret
pusha
adc
push
stc
mov
jecxz
mov
imul
in
jne
imul
mov
or
mov
sub
push
sbb
xchg
es
pop
loope
aas
stos
dec
mov
aad
andb
mov
leave
xchg
and
mov
mov
lea
sub
xorb
adc
ljmp
pop
and
jnp
xchg
sbbl
pusha
leave
cmpsl
roll
jne
lock
sub
sbb
xor
inc
jne
pushf
stos
dec
and
sub
mov
fs
cltd
out
fisttps
mov
adc
pop
pop
repnz
adcl
inc
jl
mov
ret
dec
cmpsl
xchg
dec
inc
inc
cmp
jecxz
std
dec
pop
jle
cmp
scas
adc
roll
cmpsb
gs
ljmp
lret
inc
cwtl
adcl
lcall
lock
mov
out
adc
in
shrl
js
or
and
xor
jne
xchg
outsl
icebp
add
sub
loop
xchg
std
mov
popa
sbb
rcr
rolb
aam
mov
test
cli
xor
out
add
add
mov
mov
aad
xchg
hlt
fcoml
xchg
adc
dec
imul
cmpsl
negl
shll
xchg
cmpsb
pop
add
xor
lea
mov
scas
xchg
or
aad
imul
sbb
jne
out
les
adc
into
clc
mov
aam
pusha
push
js
mov
dec
cmc
sub
mov
loop
cmp
mov
es
jle
lahf
mov
mov
les
adc
stos
std
mov
pop
leave
enter
add
cmp
and
ffree
sub
add
gs
xor
in
jmp
js
sarb
xchg
xchg
addr16
rolb
or
inc
push
sub
jp
div
pop
sub
xchg
jno
aad
xor
dec
popf
dec
cmp
mov
outsl
xchg
sti
iret
jbe
mov
inc
jo
ds
push
ret
rolb
pop
addr16
testl
inc
sarl
and
or
mov
test
xor
adc
pop
mov
hlt
sti
xchg
xchg
ljmp
cmpb
mov
loope
mov
xlat
pop
rolb
int3
clc
dec
aad
xor
sub
xchg
mov
hlt
jge
push
ljmp
mov
jne
inc
call
dec
fs
mov
fcomps
out
inc
fucomip
cld
lea
pop
enter
lods
loope
or
jp
mov
imul
out
out
movsb
cmp
movsb
push
into
movl
ret
icebp
jne
sbb
pop
mov
mov
in
pop
pop
je
cmp
jbe
push
mov
cmc
imul
gs
push
in
and
and
sahf
aas
ljmp
out
xor
call
inc
jecxz
xchg
movsl
into
inc
cltd
mov
mov
lock
cmpsb
push
insb
das
pushl
es
mov
lcall
pop
dec
adc
mov
adc
add
mov
xor
popa
pusha
jns
int3
or
dec
notb
sub
decb
in
xor
sbb
push
fwait
cli
jg
ds
fistl
jle
js
mov
jmp
and
cmp
lahf
lret
pusha
mov
pusha
sub
ljmp
add
xor
sub
mov
out
pop
adc
out
dec
mov
push
cmpsb
sub
xlat
mov
sti
imul
fisubs
sbb
adc
test
or
jg
loope
scas
lods
pop
inc
out
jle
sub
or
cmpsl
pop
mov
fdivp
iret
repnz
cmp
rcr
and
or
fdivl
cwtl
xchg
xchg
xchg
mov
roll
add
cmp
loope
cmp
hlt
push
frstor
stos
push
or
pop
push
cli
ja
or
imul
pushf
imul
jmp
test
cmp
into
pop
sbb
fisttps
jne
inc
jmp
and
icebp
sub
nop
mov
xor
mov
clc
popf
fstpl
jns
scas
and
test
push
insl
mov
mov
in
mov
es
idiv
insb
pop
sbb
pop
jae
pop
movsb
shrl
mov
hlt
pop
adc
pop
test
sub
emms
sub
je
sub
sbbl
lret
sti
push
aad
pusha
orb
jge
push
jne
and
xor
sub
mov
pusha
cmpsl
or
mov
mov
and
or
sti
insb
pusha
mov
movsl
repz
fstl
orl
xchg
adc
xchg
lock
fcos
or
std
cmc
xchg
testl
in
cmp
imulb
mov
add
mov
mov
dec
mov
push
imul
int
pop
loope
pop
nop
xor
addb
sbb
enter
in
sub
xchg
pop
loop
sbb
cltd
add
jbe
or
insl
mov
into
xchg
insb
and
jle
out
shlb
sub
jne
cmp
outsl
xor
mov
std
push
jo
bound
mov
jo
fneni(8087
xor
clc
fistps
std
movsb
mov
rclb
pusha
add
mov
rclb
fstpl
cmc
cs
push
xchg
add
jbe
sbb
sti
pop
out
es
lds
rclb
aam
hlt
mov
inc
dec
pop
test
and
test
mov
inc
in
mov
cmpsl
stos
or
pusha
in
jne
push
enter
push
scas
pop
mov
inc
inc
jp
sbb
mov
daa
pop
adc
clc
jne
ret
loopne
pop
mov
and
shll
cli
pop
jno
sbb
adc
popa
aas
test
xor
sub
test
les
mov
movsl
lret
cmpsl
out
cld
push
add
push
mov
mov
mov
sub
pusha
jno
or
sbb
add
adc
pop
or
test
or
jecxz
int
sub
ror
cmpb
inc
fnstenv
cmpsb
dec
int
pop
dec
test
pop
incb
push
dec
loopne
or
push
fsubrl
adc
cmp
xchg
mov
add
push
xchg
push
jo
shll
sbb
dec
sub
loop
stos
cmc
jnp
subb
push
gs
cmp
mov
clc
sarb
push
jne
push
add
push
xorb
mov
inc
sub
inc
mov
loope
aam
repnz
jns
push
xchg
testl
inc
andnps
push
mov
sbb
cmpsb
pusha
outsb
pop
xor
dec
loopne
hlt
out
sti
clc
pusha
sub
push
add
out
data16
push
xchg
movsl
xor
mov
pmaddwd
cmp
movsl
mov
jns
pop
das
out
add
xchg
call
pop
movsb
mov
add
repz
stc
or
adc
inc
int
and
push
mov
fidivrs
aam
jo
sub
xor
leave
arpl
inc
dec
andl
stos
inc
movsl
aas
jns
inc
lcall
pop
idivb
or
inc
in
add
shrb
jne
lds
clc
push
lods
xchg
aad
fidivs
sbb
pop
mov
daa
jmp
call
fstpl
fcoms
jbe
sub
jae
dec
imul
xor
hlt
mov
mov
test
adc
cmpsb
sub
inc
movsb
ljmp
aad
aas
daa
pop
dec
xchg
movsb
mov
in
mov
aam
pop
and
xchg
pop
jge
add
xchg
call
test
push
pusha
out
scas
and
out
sub
shlb
cmpsl
mov
sbb
cmpsb
or
add
scas
pop
stos
pop
mov
and
std
pusha
add
mov
sbb
mov
stos
out
sti
mov
pop
gs
xchg
notb
rcll
mov
inc
in
hlt
adc
push
ja
pop
cmpsb
inc
jae
fidivrl
ja
or
lock
je
jecxz
cwtl
push
lods
push
mov
ss
sub
jecxz
andl
gs
pop
cmpsb
sub
inc
jge
out
mov
movsl
and
mov
movsl
stos
sar
test
push
mov
pusha
dec
xchg
stos
daa
hlt
adc
iret
das
adc
add
sbb
inc
pop
sti
sub
jns
adc
xor
mov
bound
jnp
rol
leave
pop
xchg
xorl
loopne
xor
xchg
or
add
hlt
test
jecxz
jmp
or
decb
mov
xchg
add
xor
adc
cmc
aam
dec
cmp
cwtl
push
es
jne
mov
or
mov
jecxz
mov
in
xchg
xchg
or
cmp
lock
scas
inc
orl
out
enter
jl
inc
mov
jge
loopne
jmp
push
inc
mov
cmp
adc
cwtl
loop
icebp
stc
push
in
out
push
mov
push
outsb
js
inc
jne
stos
jg
mov
test
repnz
add
mov
subb
pop
les
lds
inc
dec
cltd
lret
insl
lock
ret
xlat
xchg
sbb
insl
daa
adc
lea
ja
add
push
lret
mov
adc
rolb
xlat
jns
aas
jae
inc
or
pop
mov
rclb
scas
xor
lods
adc
pusha
mov
popa
and
pop
test
inc
add
hlt
and
jp
inc
mov
push
mov
sub
dec
loope
pop
dec
sub
int3
mov
add
push
es
ret
cmp
lods
pop
int3
xrelease
idivl
mov
xorl
mov
sub
xor
adc
mov
jmp
fnstsw
std
fdivl
jne
sarl
xchg
insb
rep
or
adc
ss
dec
inc
add
repnz
cmc
lahf
lcall
mov
in
ss
jmp
xchg
mov
sub
sub
and
dec
cmc
adc
dec
scas
jecxz
or
sbbl
pop
fcmovb
mov
mov
adc
xor
es
stos
push
shrb
cli
adc
push
dec
cs
adc
dec
out
cli
sahf
cmpsl
sub
pop
mov
fdivrs
das
adc
cmpsb
enter
sub
insb
cld
fcomps
fdivs
inc
or
mov
xlat
ss
mov
adc
scas
jne
mov
pop
adc
out
ds
dec
pop
xchg
stos
loopne
cs
adc
sub
jg
hlt
in
push
loopne
jge
jnp
mov
ficomps
inc
push
push
test
push
cmc
leave
mov
xchg
cmc
aad
mov
lock
jge
dec
push
mov
add
lods
add
scas
mov
cmp
pop
jae
out
popl
fcomip
xor
aaa
cmp
pushl
mov
xchg
push
popa
jmp
and
push
hlt
aad
xchg
rorb
inc
mov
mov
dec
mov
sub
ljmp
jbe
xchg
popf
shr
cmp
push
jns
es
out
add
gs
jnp
mov
mov
lock
mov
jo
dec
aas
pop
mov
mov
or
jne
test
xchg
test
test
shll
or
mov
xchg
bound
cmp
adc
pop
push
shl
loop
mov
lods
insl
add
sub
inc
pop
dec
aam
rcrl
cmp
shlb
std
dec
hlt
xchg
bound
js
daa
cmpb
pop
and
xchg
dec
das
fdivrl
sbb
mov
pop
pop
lods
cld
nop
xchg
pop
pushf
jnp
movsl
fstpl
xorb
leave
les
rclb
ds
add
jno
mov
ret
aaa
mov
push
hlt
or
frstor
inc
mov
push
in
scas
jo
mov
cmpsb
jne
lahf
cld
inc
cmp
push
mov
nop
push
frstor
mov
sti
insb
dec
sub
es
xchg
mov
pop
mov
daa
flds
xchg
inc
jge
fcomi
ljmp
inc
loope
xchg
cmp
pop
push
addb
jge
ret
dec
and
shrl
bnd
in
jmp
push
andps
into
inc
stc
outsl
scas
inc
xchg
xchg
shrb
mov
dec
out
jmp
out
enter
xor
sbb
cwtl
mov
cs
mov
mov
adc
es
mov
mov
pusha
movsb
repnz
int
nop
and
cli
jns
add
repnz
aam
or
cli
not
jno
lcall
shll
das
movsb
in
cmp
pop
xchg
aas
shrl
jp
cwtl
lret
xchg
dec
ja
test
jl
cs
add
ja
jbe
dec
mov
dec
data16
ret
adc
cli
enter
xchg
sti
inc
mov
pop
inc
add
rcr
sbb
aad
les
push
dec
in
movsb
adc
lds
mov
test
mov
lea
cmpsl
out
test
pop
call
jne
rolb
lret
loope
fcomip
fs
cmp
fisttpll
insb
mov
adc
sub
in
cli
pop
out
cli
mov
mov
sub
rcrl
sti
testl
sti
into
push
mov
jp
aad
out
sbb
leave
pusha
orl
ss
adc
call
sub
shr
data16
ret
enter
stc
dec
scas
mov
sbb
push
sub
clc
mov
push
xchg
sahf
sahf
pop
outsl
ja
imul
xchg
pop
pop
cmp
mov
ficoml
test
and
add
mov
sbb
pop
test
aam
xchg
lret
or
jle
js
dec
movsl
mov
mull
pop
les
loope
or
jne
xor
pop
sub
cli
fldenv
dec
sub
jns
lea
push
clc
repz
sbb
in
fdivrl
or
inc
cmp
jge
cmp
pop
incb
adc
xchg
stos
mov
pop
lret
inc
leave
stos
mov
mov
hlt
cwtl
xor
divb
xlat
cwtl
cmp
in
cmp
gs
cmp
cltd
inc
inc
cmc
stc
jge
fbld
xor
rcl
mov
dec
jmp
push
insl
lret
inc
inc
mov
jg
mov
pop
shr
call
das
mov
ljmp
stos
lock
ds
shrb
cmp
inc
popf
inc
fisttpl
mov
mov
jns
mov
jb
gs
jbe
cmp
sbb
push
dec
jge
cwtl
push
inc
pop
mov
bound
sti
sarb
add
mov
movb
sub
insb
std
aad
mov
sbb
or
jno
fs
jo
dec
and
mov
sbb
mov
cwtl
je
cmp
hlt
push
mov
leave
mov
or
cmpsb
loop
shlb
int3
lret
or
and
gs
mov
loope
dec
push
adc
sahf
or
aaa
jge
mov
in
adc
out
mov
loope
mov
xchg
popf
or
pop
sub
inc
enter
fsubrs
shrl
stc
xchg
sub
cmp
nop
out
pushf
cltd
pop
stos
cli
out
popa
hlt
xor
push
mov
subl
or
fimuls
cmpsl
jl
bound
sub
inc
adc
push
jl
xlat
stc
mov
dec
mov
sbb
lahf
les
xchg
loop
push
ret
insb
in
clc
test
push
add
sub
pop
jne
sahf
mov
nop
into
xor
mov
jle
xchg
xchg
outsl
mov
push
pop
sbb
xor
xlat
lock
inc
sahf
sub
dec
ss
call
dec
leave
xor
mov
cmpsl
ja
push
mov
cld
add
jne
imul
repnz
and
mov
icebp
nop
cmpsb
pop
xor
rcl
lds
push
lock
dec
jle
mov
jecxz
sub
mov
jl
movsl
push
xor
cli
es
and
jns
xlat
test
push
cmpsl
cmp
and
jp
inc
call
xlat
dec
shll
js
inc
fwait
out
pop
inc
mov
in
aas
add
mov
xchg
xor
lea
jecxz
clc
fwait
adc
add
xor
pushf
in
or
jge
shlb
es
out
and
fstpl
jne
ljmp
jg
es
int
xor
test
pop
dec
subl
add
pusha
lcall
push
lds
and
push
and
inc
stc
lahf
gs
aam
orl
mov
les
xchg
popa
repnz
jecxz
hlt
push
jbe
push
enter
js
jp
add
mov
cmp
in
sbb
push
sub
dec
pop
loopne
or
loope
inc
mov
idivl
or
or
mov
std
lods
movsb
mov
leave
jno
add
jg
aad
xchg
add
arpl
sub
or
cli
adc
outsl
ja
pop
pop
lret
xchg
sbb
test
jne
repnz
inc
movsb
and
push
aaa
fstp
xchg
lods
icebp
das
cmp
or
mov
sub
into
cwtl
xchg
outsb
add
inc
inc
mov
mov
pop
insl
pop
mov
std
lcall
inc
insl
cmp
and
test
mov
insl
not
aaa
sbb
jne
push
ja
lds
sub
ret
popf
ja
xchg
xchg
or
xchg
sub
dec
pusha
xor
mov
or
idivb
lahf
ja
sahf
fildl
hlt
rcrl
enter
mov
in
add
loope
cmc
pop
mov
popa
addl
andb
sahf
lods
jo
push
lahf
loope
nop
test
pop
mov
adc
roll
loopne
fmull
xchg
pop
shlb
das
lods
dec
pop
mov
fisubrs
dec
outsl
and
mov
xchg
leave
jle
enter
orl
xchg
pop
or
call
adc
sub
fchs
add
dec
jecxz
cs
sbb
xchg
outsl
dec
aaa
push
test
push
sarb
xchg
mov
jg
insb
lods
lock
aas
sub
or
out
hlt
xor
jmp
xchg
mov
test
nop
in
test
icebp
dec
dec
fmull
or
dec
stc
icebp
cltd
mov
rcrl
pop
es
enter
cld
pop
fwait
and
jle
pop
lcall
jne
xor
imul
sub
adc
out
jae
sti
hlt
js
pop
inc
aad
lock
test
lcall
or
rolb
mov
loop
jle
jo
rorb
inc
imul
xor
shlb
inc
push
mov
cli
cmp
pop
int
push
and
sub
add
or
test
xor
dec
or
aad
rcrl
add
xchg
inc
les
inc
push
xlat
jno
push
shlb
loopne
mov
pop
xor
xchg
gs
popf
adc
mov
nop
daa
pushf
mov
add
pop
sub
mov
mov
push
add
and
shl
std
imul
inc
dec
movsb
or
js
je
lahf
popa
push
minps
fwait
das
xor
hlt
or
clc
mov
imul
mul
leave
dec
or
popf
arpl
xor
scas
je
lea
hlt
adc
pusha
out
cli
gs
inc
ret
mov
icebp
jl
pop
test
popa
mov
dec
add
sbb
adc
cltd
sti
adc
mov
cmc
enter
das
sub
xchg
and
jle
repz
les
imul
gs
imulb
mov
mov
xor
jbe
icebp
hlt
cmpsl
sbb
and
sti
movsb
add
hlt
adc
jne
sbb
jl
or
mov
faddl
pop
add
xchg
add
fucomip
pop
xor
adc
jae
daa
popa
xchg
push
cmpsl
jle
cmp
sub
cs
add
enter
cmp
data16
adc
nop
mov
iret
aad
aam
bound
sub
lock
dec
mov
and
dec
or
ret
mov
insl
out
mov
clc
das
lods
into
adc
mov
cmp
cmc
dec
sbb
ds
scas
test
lock
lea
imul
xchg
mov
out
dec
push
xlat
hlt
arpl
sahf
xchg
sub
xchg
rcr
hlt
pop
in
sub
adc
pop
sub
mov
call
hlt
fsubrl
adc
dec
pop
rorb
xlat
inc
nop
mov
pop
scas
orl
push
xchg
or
xchg
imul
or
data16
aad
jns
test
ret
dec
cmp
xor
lods
sub
scas
inc
pop
mov
movsl
test
and
sbb
jne
sbb
enter
or
lahf
pop
sbb
fs
sub
loopne,pn
mov
lcall
jbe
sub
sbb
or
pop
shll
into
lret
jne
jle
xchg
bound
adc
or
or
adc
hlt
dec
add
push
ss
sti
gs
mov
mov
in
int
mov
mov
cmp
cwtl
test
hlt
ret
lods
jl
mov
ror
ret
idivl
fs
repnz
mov
add
xor
testb
and
testl
repz
out
pop
in
ljmp
imul
scas
hlt
nop
jmp
cmpsl
add
jecxz
dec
mov
pop
jno
mov
repz
pop
into
mov
nop
ret
jne
mov
test
inc
cltd
cmp
and
loop
mov
sub
mov
rolb
fidivrs
mov
test
dec
inc
and
shrb
sub
ljmp
mov
test
clc
in
inc
out
xchg
cmp
adc
fldt
inc
or
pop
fmuls
add
pop
rcl
daa
pop
xor
stos
push
loop
sarb
mov
adc
pop
push
cmp
lret
lret
inc
mov
mov
in
fiaddl
sbb
stos
pop
fcmovbe
movsl
fildll
mov
movsb
push
dec
sbb
loope
je
mov
loopne
pusha
fildll
push
push
fcomip
jecxz
mov
test
inc
lcall
mull
aam
mov
mov
push
mov
or
mov
xor
jg
cmp
test
ret
adc
push
xchg
movsl
mov
ljmp
bound
sbb
mov
sti
dec
fldenv
cmc
jbe
mov
sub
mov
scas
fwait
arpl
in
int
cwtl
movsl
sub
fcompl
stos
sti
rcrl
shrb
xchg
popf
pop
xchg
bound
jmp
aaa
sbb
and
pop
mov
packuswb
test
and
jne
shlb
add
xchg
stc
repz
insb
mov
in
pop
and
add
pop
mov
add
shlb
shlb
push
and
sub
loope
roll
xor
push
inc
xchg
dec
sbb
aam
mov
popa
add
jne
or
sub
and
jmp
lock
mov
mov
lods
gs
jb
sub
inc
xor
aaa
nop
cmp
inc
sub
movsb
fidivrl
mov
adc
xchg
mov
add
adc
jno
sub
cmp
sub
or
ret
in
add
in
mov
jl
sbb
decb
sub
inc
inc
add
mov
jne
mov
idivl
mov
dec
jle
xchg
cmpl
xor
mov
dec
stos
dec
sarl
xchg
sbb
sub
lods
or
push
pusha
cli
sub
cmp
pop
movsb
mov
xchg
and
fists
push
fcompl
shll
xchg
mov
loope
rcll
and
lea
sub
pop
in
in
inc
ja
mov
pop
scas
fbstp
and
insb
and
mov
repz
decl
inc
imul
mov
insb
pop
xchg
lret
pop
pop
adc
hlt
scas
jne
lods
inc
loope
cltd
clc
mov
mov
mov
in
pop
add
dec
lea
mov
dec
mov
xor
mov
adc
jne
ds
inc
test
test
sbb
shl
push
pop
mov
cld
push
jle
push
xchg
lods
loope
jge
mov
xor
sti
fisubrl
hlt
mov
adc
dec
cmp
cli
outsl
inc
movsl
push
push
lcall
mov
jg
loope
out
and
mov
stc
and
jge
push
mov
in
jmp
int3
rol
push
push
mov
lock
nop
pop
jne
sub
inc
adc
icebp
ret
leave
js
push
nop
in
cmp
push
enter
repz
hlt
shr
in
js
mov
bound
or
insl
xchg
mov
scas
jle
mov
sbb
les
lea
fmull
pop
fstpt
sbbl
mov
jecxz
rcr
xchg
sub
xchg
outsl
lods
loopne
jl
ror
hlt
cmp
dec
arpl
xchg
xor
enter
or
loopne
jmp
adc
test
cs
fistps
sub
jne
sub
sbb
sub
xorb
adc
aad
jns
push
pop
sbb
test
loop
jmp
lcall
inc
imul
nop
dec
pushf
jne
mov
out
dec
lret
jmp
rcrl
fmul
in
icebp
xchg
push
pop
aam
stos
add
inc
je
lret
sub
and
add
jnp
and
outsb
mov
sub
test
scas
xchg
and
into
hlt
pop
je
divb
fs
pop
push
sub
lcall
mov
jg
lea
inc
into
sub
aad
jae
cwtl
push
mov
dec
sarb
or
mov
repnz
jl
adc
out
sbb
pop
pop
push
call
pop
pop
sbb
push
xor
mov
push
inc
jbe
insl
push
in
mov
ja
xorb
adc
insb
dec
imul
xchg
sbb
test
inc
enter
mov
push
inc
aam
lret
repnz
and
mov
enter
nop
sti
lcall
xchg
pop
dec
lods
pusha
pop
mov
jne
into
mov
aam
mov
mov
dec
mov
das
out
imulb
jge
test
pop
add
push
inc
add
pop
ljmp
or
push
test
add
hlt
test
mov
push
lahf
sbb
sub
jne
sti
cltd
push
xorb
dec
sub
pop
into
cmp
outsb
clc
sbb
fadd
sti
and
hlt
in
mov
or
into
test
mov
cmpsl
pusha
mov
jno
lcall
mov
sbb
pop
icebp
push
bound
fnstcw
sub
mov
jp
repz
add
jmp
pusha
js,pn
scas
or
xor
hlt
sub
aaa
xchg
mov
sbb
xchg
pop
out
pop
mov
fnsetpm(287
jne
and
stos
jae
cwtl
hlt
out
arpl
lds
push
dec
sar
in
lret
out
jecxz
jecxz
sahf
pusha
loopne
and
ja
sbbb
shlb
dec
push
pop
imul
push
mov
out
mov
push
mov
sub
jmp
stos
movsb
lock
mov
fcoml
jge
gs
and
imulb
sub
adc
xchg
sub
fcoms
pop
rorb
mov
cmp
ret
sub
aad
sbb
xchg
jl
add
loopne
mov
popa
mov
stos
aad
xorb
fucom
mov
inc
push
jnp
mull
fcompl
andb
nop
fbld
loop
mov
fcomps
or
pop
xor
ja
mov
push
mov
xchg
push
clc
add
aad
mov
mov
mov
cs
mov
scas
jbe
xchg
ds
cmp
das
or
jnp
ja
inc
push
out
xor
cwtl
push
hlt
inc
lods
jecxz
mov
cmp
ret
xchg
push
into
das
repz
lfs
out
mov
xchg
cli
imul
xchg
lcall
push
or
dec
inc
out
push
pop
adc
lcall
testl
lret
imul
lret
jecxz
sub
adcb
enter
push
cmpsl
pop
inc
sbb
and
xor
fstl
dec
or
jne
icebp
push
pop
out
imul
xor
ret
sbb
out
push
icebp
jns
sti
mov
popf
xchg
mov
adcl
nop
lds
popf
and
mov
xor
jne
or
mov
sti
fdivrl
mov
push
jge
fmull
sub
fsubrs
repz
pop
pop
cmpsl
add
fsubrs
ss
pop
hlt
cmp
cmpsl
std
stc
mov
mov
cmc
stc
cmpsb
cmp
or
lods
ss
adc
and
xchg
jecxz
loopne
xor
insb
icebp
jbe
add
mov
add
das
sub
mov
push
roll
into
xlat
roll
push
mov
jnp
ja
inc
xchg
xchg
jne
ret
jno
and
add
dec
inc
push
sbb
lea
test
nop
sbb
mov
pop
jne
sub
out
inc
pop
push
sub
jb
in
das
pop
xchg
jg
adc
mov
in
jg
inc
pop
pop
cmpsb
sbb
add
mov
dec
movsb
mov
clc
paddsb
push
push
push
insb
cltd
in
das
ljmp
js
leave
enter
mov
loopne
add
out
jns
xor
push
inc
test
not
pop
repz
cmp
jg
dec
jo
cmp
in
and
imul
mov
das
fst
es
loop
pop
or
loope
inc
xlat
push
adc
mov
fs
push
or
out
testb
push
lods
cmpsb
mov
mov
or
jae
fistpl
lret
mov
fwait
std
lcall
cs
in
gs
loop
mov
fcomp
add
insb
pop
dec
mov
mov
jne
add
jmp
sub
dec
sbb
jge
pusha
cld
xchg
outsl
or
out
xchg
mov
stos
xor
fsubr
add
pop
nop
test
or
xchg
xchg
in
cmp
movsb
add
js
pop
fstpl
aad
jge
xchg
scas
mov
in
mov
subl
inc
push
sbb
mov
pop
mov
lods
inc
gs
frstor
xorb
xchg
addr16
mov
test
jno
mov
fists
nop
mov
xor
mov
jmp
lahf
hlt
xchg
lret
jno
push
std
and
cmp
xor
cmpsl
jl
fwait
jl
cmp
rorl
xchg
test
mov
pop
leave
pop
out
stos
xchg
fwait
sarb
jno
jne
adc
mov
arpl
jl
pop
dec
adc
pop
mov
push
test
jp
pop
mov
or
ror
pushf
mov
and
inc
xchg
rorl
and
addr16
cltd
cmpsl
das
mull
cmp
insl
fiadds
push
jne
or
stc
sub
dec
je
jg
push
pop
jge
in
jne
jb
rorb
dec
mov
xor
pop
jmp
ret
std
icebp
jo
inc
sahf
aaa
xor
and
fcmovnu
ret
test
orl
test
jle
gs
mov
pushf
mov
mov
cmp
pop
stos
scas
dec
test
das
stos
aad
hlt
or
sbb
xchg
leave
das
xchg
mov
inc
jnp
out
jo
outsl
cmpsl
lods
inc
pushf
add
xchg
jg
mov
mov
sub
mov
jg
sub
xorb
pushf
outsb
mov
and
rolb
push
jbe
mov
sbb
push
ss
add
mov
outsb
ret
std
inc
inc
aam
out
scas
sub
or
jecxz
sbb
cmp
sub
js
test
pusha
loope
enter
jmp
nop
cld
pop
in
nop
mov
sbb
test
dec
fcompl
sub
dec
mov
movsl
fsubl
or
pop
fildll
add
aam
xor
xor
cwtl
or
sub
jp
adc
mov
add
sub
loope
xor
mov
movsl
test
push
sbb
jns
and
imul
jnp
fs
cld
shll
scas
mov
loope
push
cmp
inc
inc
hlt
stos
mov
mov
insb
pop
fisttps
xchg
jno
stos
movsb
sub
les
pop
mov
roll
imul
push
mov
push
xor
pop
jmp
icebp
or
jne
fs
push
fdivrl
mov
sti
notb
jae
iret
hlt
lret
lods
xor
jl
fnop
shl
cmp
mov
or
mov
lret
scas
nop
movsb
mov
xor
mov
push
mov
cmp
lock
mov
filds
xchg
ds
push
push
scas
adc
xor
ljmp
inc
jbe
jnp
sub
js
xorl
xor
pop
cs
nop
sbb
test
stc
sti
add
lds
shlb
test
mov
ret
loope
and
or
test
push
les
bnd
cmp
and
and
xor
out
mov
shll
fisubs
call
cld
test
ret
lret
inc
lret
fisttpl
ja
pop
xor
sahf
cmp
incb
jmp
xchg
push
nop
jae
call
hlt
sub
cmpsb
pop
lods
repnz
enter
sub
int3
xchg
sub
imul
push
cmc
xchg
push
add
mov
std
inc
mov
leave
cmpxchg
cmp
mov
or
inc
out
test
gs
test
divl
stos
jge
arpl
pop
bound
loop
lahf
inc
das
mov
stc
push
popf
out
mov
sarb
inc
mov
stos
fmuls
xor
push
fildll
xchg
cmp
add
out
rcll
dec
test
loopne
gs
lods
jecxz
dec
jns
test
pop
in
cmp
fldl
movsb
xchg
inc
movsl
add
jp
push
sti
cmp
sahf
popf
negl
mov
mov
outsl
sub
repnz
rcll
or
loope
push
andb
push
xor
sub
lcall
jne
adc
sbb
out
jo
test
mov
inc
icebp
sarl
std
cltd
das
sub
imul
clc
jne
in
in
inc
xor
hlt
pop
and
push
jno
int3
xor
scas
arpl
fwait
mov
daa
pop
xchg
or
mov
mov
and
push
push
pop
icebp
lods
outsl
out
cld
jg
sti
stos
adcb
cmpsl
adc
mov
std
sbb
push
mov
jne
mov
sar
and
jmp
xor
xorb
hlt
mov
out
cld
or
push
push
push
jl
ss
test
and
sbb
jne
stos
cld
das
dec
or
xchg
in
add
dec
jns
mov
push
loop
fadd
sub
cli
lods
out
sbb
loop
xor
test
shr
nop
sbb
out
adcl
cwtl
sbb
ss
out
test
cmc
repnz
fstl
jge
mov
mov
sub
push
enter
xchg
lods
dec
fadd
jne
loopne
mov
leave
das
xor
popa
pop
scas
into
es
push
pushf
in
cmp
cmpsl
enter
hlt
sbb
pop
stos
lcall
nop
out
jne
pop
in
das
sbb
es
sub
mov
lods
cmc
add
adc
popf
add
xchg
push
jl
fwait
pusha
scas
inc
and
mov
movsb
dec
ror
xor
sti
ja
loope
stc
mov
lret
loopne
or
xchg
rcll
xchg
stc
out
inc
lahf
pop
dec
pop
and
roll
cmpsl
rorl
add
les
iret
icebp
mov
pop
adc
adcb
push
imul
into
dec
sub
inc
dec
into
int3
addl
sub
and
cmc
lods
cli
rcrb
sub
dec
jg
movsb
adc
sahf
icebp
push
sarl
je
or
add
mov
mov
hlt
mov
pop
cmpsb
sbbl
mov
jnp
ret
call
cmpsb
adc
loopne
mov
pop
push
sbb
mov
scas
xor
jne
imul
adc
cld
test
push
cs
mov
shl
mov
adc
and
jmp
adc
imul
pusha
ret
leave
mov
lret
sahf
jno
stos
inc
fdivrl
gs
repnz
hlt
sti
pop
adc
addl
cmp
fwait
mov
mov
stos
fidivs
hlt
push
cli
lods
clc
jge
dec
fisttpll
cmp
xchg
cmp
xor
loop
cmpsl
adc
and
inc
testb
ljmp
mov
mov
ds
nop
add
lods
cld
add
ret
hlt
xchg
inc
sub
cmp
call
loopne
aam
dec
mov
cmp
in
pop
add
rclb
aad
iret
jmp
sub
cs
pusha
mov
lods
daa
outsb
movsb
xchg
orb
fdivl
mov
add
add
jae
cmc
imul
mov
jle
stos
inc
int3
mov
or
in
inc
adc
pop
jo
xchg
rorl
out
jg
inc
mov
xchg
popa
aad
movsb
cli
dec
xor
jbe
sbb
lret
jecxz
stos
sub
add
cmpsb
mov
mov
ret
xchg
sub
out
jne
sbb
sti
nop
add
incb
cwtl
xchg
mov
pop
jmp
xchg
jmp
mov
lods
xchg
or
sbb
jge
xor
mov
fs
sub
push
jp
push
loop
xchg
jo
call
shlb
push
outsl
push
rcrl
adc
jno
popa
sub
mov
push
jne
popf
jbe
ljmp
jg
ds
cmp
sti
andb
jne
add
push
cmp
pop
or
adc
shlb
das
jp
xchg
mov
jbe
jo
int3
mov
daa
fnstsw
adc
pop
flds
movsb
stos
mov
pusha
jmp
add
and
rolb
shll
add
pop
sub
xchg
xor
iret
jg
cld
or
popa
pusha
call
pop
hlt
xor
jnp
pusha
push
mov
dec
pop
jmp
dec
adc
adc
cmpsl
sarb
pop
inc
scas
and
ljmp
adcb
sbb
gs
test
hlt
adc
dec
sbb
icebp
aad
test
xor
push
sub
inc
out
or
mov
xlat
insb
fimull
ja
test
mov
dec
addb
imul
push
int3
pop
mov
jne
clc
lcall
dec
lret
mov
enter
adc
fiadds
leave
push
aam
nop
add
enter
jnp
fisttpll
mov
inc
cmp
push
test
cld
fnstcw
mov
cmp
inc
leave
jbe
jle
adc
or
js
lret
movsl
call
or
push
and
mov
xor
imul
fsubs
cmp
test
jne
test
rclb
sbb
sarb
pop
xchg
ret
push
jne
hlt
dec
lret
scas
daa
hlt
xor
das
sbb
repz
das
ror
loopne
adc
mov
ffreep
mov
xchg
cld
inc
fdiv
sub
sti
out
ljmp
fldl
rcrb
mov
int3
xor
rclb
scas
cli
dec
pop
xchg
lahf
aad
test
cli
pop
xchg
pusha
lret
jne
sub
jmp
adc
or
adc
ljmp
aam
jmp
test
stos
mov
pop
jle
push
xor
sub
loopne
scas
notl
push
icebp
into
popf
aam
rclb
mov
aad
jle
xlat
aas
adc
inc
lods
pop
testl
daa
xor
les
repnz
lret
std
data16
das
mov
mov
outsb
int
push
cld
sub
cmp
push
and
cmp
pop
clc
negb
fs
push
sub
sbb
loopne
andl
push
jecxz
jns
push
inc
fwait
adc
mov
sahf
push
sub
lods
ss
push
cmp
push
mov
pushf
xor
cld
jle
aas
ss
push
fucomip
popf
insl
jg
xchg
mov
mov
rorb
iret
leave
mov
mov
mov
dec
or
dec
out
inc
jb
add
xor
ljmp
dec
loopne
fsubrl
scas
xor
imul
es
xchg
jo
cwtl
or
mov
stos
xchg
aaa
es
or
stos
pop
sub
adc
pop
cmp
push
mov
pop
insl
sub
adc
xchg
xchg
test
or
bound
mov
inc
mov
in
xchg
cmpsb
sbb
repz
unpcklps
sub
sub
mov
push
popa
subb
icebp
cmp
cmp
pop
jl
xor
mov
mov
or
imulb
xchg
add
fchs
or
xchg
add
adc
enter
xchg
pushf
cmp
or
clc
cltd
mov
repnz
andb
or
sbb
and
andb
pushf
jp
cmpsl
sti
clc
test
and
sti
fistl
in
mov
mov
inc
cld
add
inc
sahf
loopne
mov
sbb
and
jle
jl
cmp
stc
mov
mov
notb
and
xchg
loopne
in
mov
mov
hlt
inc
subb
outsb
pop
jne
jbe
pop
lds
pop
sub
movsb
sub
orb
dec
rorl
xchg
jne
mov
lret
push
push
push
dec
sahf
movups
add
icebp
pusha
sar
jae
cmpsl
jno
xchg
add
nop
cmpsl
pop
clc
push
mov
cli
test
add
mov
add
movsb
mov
in
add
scas
pop
mov
int
aas
test
test
jp
lret
or
cmp
cld
push
pop
mov
stos
mull
jno
pop
jg
out
cmpsl
in
cld
add
jnp
lds
or
std
xor
out
xchg
adc
inc
xor
pusha
arpl
cmpsl
cli
mov
movsl
pop
add
aam
adc
imull
push
jns
or
mov
xchg
pop
jns
jmp
iret
pop
testb
mov
pop
xor
test
pop
inc
shll
pop
xchg
xchg
inc
in
sbb
mov
xor
ljmp
xchg
xchg
fwait
imul
pop
jp
adc
fildll
dec
xchg
pop
dec
inc
sub
pushf
push
scas
mov
pusha
jle
mov
popf
movsb
out
icebp
fcmove
in
jne
inc
jp
inc
xchg
test
xchg
inc
lcall
jecxz
scas
das
adc
xchg
mov
xchg
ret
pop
jbe
aad
scas
stc
js
imul
sub
xor
sbb
dec
pop
enter
loope
lock
in
pop
clc
daa
mov
or
xchg
cld
movsl
inc
cmpl
subl
icebp
pop
jmp
add
movsb
push
rcl
jge
filds
int3
stc
push
jnp
std
sbb
lods
dec
pop
repnz
fbstp
imulb
adc
fsubrs
int3
mov
int
or
rorb
je
fdivl
jno
dec
and
cli
adc
dec
shrb
inc
fidivs
push
or
pusha
lods
cld
mov
jns
jle
mov
cli
adc
mov
push
cmp
push
or
adc
ljmp
add
xchg
mov
adc
push
mov
dec
cmp
fsub
or
push
cld
sbb
push
or
test
jne
jmp
xchg
add
mov
lods
movsb
sbb
sub
aas
ret
xchg
jns
les
mov
xchg
in
insb
sub
sub
je
add
int3
rcrb
xchg
and
mov
push
mov
mov
inc
xchg
mov
pop
aas
ds
jecxz
stos
mov
xor
test
pop
in
mov
push
shr
sub
mov
mov
xor
dec
xchg
inc
orl
scas
test
xchg
or
lods
xchg
clc
and
push
popa
popf
es
pusha
lock
repnz
push
popa
xchg
dec
test
jl
leave
and
pushf
push
mov
sbb
jbe
stos
mov
jecxz
mov
mov
lods
call
movsl
add
neg
cs
add
je
sbb
in
loopne
mov
and
pop
add
movsb
imul
inc
add
jge
cs
mov
dec
push
leave
hlt
loopne
insb
mov
aam
pop
std
mov
mov
cwtl
data16
jb
inc
lods
shlb
cmp
cli
push
rclb
add
xchg
sbb
out
hlt
mov
rcll
ds
dec
jle
fists
in
lods
pop
adc
movsb
mov
rorb
ret
clc
into
jg
out
jne
or
mov
ljmp
sub
mov
mov
hlt
add
jo
jae
jae
cmp
out
test
leave
xor
cmc
shl
ror
fldcw
je
mov
push
push
mov
add
in
mov
inc
rcrb
test
sbb
inc
subb
pop
jne
popa
pop
mov
data16
dec
or
test
cli
ror
xchg
aad
dec
jmp
pop
mov
test
in
inc
int3
push
xchg
arpl
repnz
jns
mov
enter
cmp
jge
xchg
xchg
pop
dec
jge
pop
or
adc
jle
lret
push
jae
mov
sbb
mov
test
cmp
xchg
mov
inc
add
out
leave
inc
pop
cmc
or
or
pop
aas
in
jmp
insb
es
sub
pop
push
adc
or
mov
pop
mov
jne
mov
cli
push
inc
inc
out
and
cmp
jnp
std
jne
aam
add
cmp
push
pop
stos
in
mov
mov
pop
adc
add
mov
out
push
test
imul
jno
aam
push
add
sbb
jno
sbb
pop
outsl
rcrl
and
add
mov
pop
mov
sub
sbb
mov
mov
xchg
mov
hlt
jae
dec
mov
test
inc
mov
adc
shl
cs
ret
mul
pop
xchg
test
mov
jnp
mov
mov
nop
push
cmp
add
or
mov
add
sub
cmpb
jle
cmpsb
pushf
add
aad
dec
insb
jnp
mov
inc
lea
sub
push
ljmp
mov
cmp
fmull
cmpsl
xchg
hlt
test
pop
xchg
leave
cmc
push
addr16
pop
inc
jbe
jb
mov
int3
xchg
sub
lock
add
xor
std
clc
xchg
xchg
data16
mov
cmp
popf
hlt
push
inc
jo
enter
or
lcall
in
dec
push
daa
dec
pop
add
cli
aas
jge
nop
loop
pop
clc
sahf
mov
xlat
jnp
cwtl
data16
dec
dec
and
push
jno
cltd
lods
shlb
or
lret
inc
xchg
add
or
push
in
int3
lock
or
addl
pop
jbe
xchg
push
jle
ret
arpl
sbbl
mov
add
pop
mov
sti
pop
pop
addr16
xchg
iret
sahf
testb
or
pop
cwtl
sbb
xchg
stos
add
inc
jge
mov
mov
mov
or
out
ret
mov
pop
fidivrs
and
fldt
sti
mov
inc
iret
mov
sbb
pop
xor
shrb
push
jl
enter
test
adc
stos
cmp
leave
movb
xchg
inc
lods
hlt
sbb
push
cwtl
stos
inc
pusha
jb
adc
dec
fistpll
xchg
pop
push
sbb
ss
ss
cmp
dec
negl
sarb
or
pop
xor
pop
ja
or
out
sti
adc
inc
cmovl
push
xchg
cld
imul
fisubrs
mov
adc
fisubs
inc
jne
cmpsl
jle
ja
dec
jnp
ret
adc
testl
mov
mov
adc
mov
sahf
test
es
arpl
idiv
movsb
push
jne
mov
dec
dec
mov
or
xchg
add
xchg
popa
dec
les
and
sbb
add
in
sub
inc
push
movsb
sti
scas
mov
leave
mov
js
enter
in
or
jge
es
cmp
cmpsl
mov
push
ljmp
punpcklbw
mov
sub
test
mov
inc
pusha
iret
dec
ret
jl
and
in
or
repnz
and
adc
stos
stos
mov
maskmovq
imull
and
jmp
add
enter
in
lods
cld
out
dec
cwtl
or
and
or
out
mov
mov
xor
xchg
pushf
xor
loop
dec
push
pushf
mov
pop
hlt
cwtl
xor
insb
test
enter
adc
test
lret
test
pop
add
mov
mov
cmpsl
dec
push
sbb
test
in
inc
xor
fucom
inc
std
xchg
ljmp
adc
rolb
out
mov
fsub
xchg
nop
outsl
jge
shr
push
outsb
sub
xor
shl
xchg
dec
add
dec
add
cmp
stc
decb
inc
pop
sub
mov
out
faddl
mov
or
xchg
mov
mov
scas
mov
js
fcomi
jo
repnz
movsl
push
imul
sti
incb
lret
add
push
cmpsb
add
xchg
jno
arpl
sub
mov
cmc
into
enter
fmull
lock
mov
dec
pop
cmp
inc
sbb
outsb
mov
mov
call
lret
jbe
sti
adc
movsb
mov
bound
insb
inc
jle
pop
sahf
push
cmp
xor
hlt
lds
fidivs
jns
push
mov
pop
imul
pop
xchg
ret
mov
leave
jo
jl
rcr
sub
bound
pusha
adc
cmp
xchg
pop
xchg
and
loop
xor
stos
je
push
in
xchg
jnp
insb
dec
stc
dec
mov
xchg
inc
mov
mov
rorb
jg
scas
pop
jo
imul
out
xchg
scas
jle
into
sub
jne
mov
jne
orb
int
xlat
sbb
ret
add
cli
imul
inc
mov
je
push
mov
mov
add
pop
jbe
dec
std
fwait
xor
mov
lahf
add
jo
add
hlt
and
ds
push
xchg
mov
shlb
pop
repnz
out
inc
inc
lods
sbb
xchg
mov
scas
jne
cmpb
repnz
mov
inc
push
mov
mov
mov
xor
sub
inc
andl
and
inc
mov
and
lock
mov
cmp
mov
mov
sub
popa
and
popa
mov
mov
xchg
and
rcll
gs
mov
dec
jnp
inc
mov
es
insb
les
daa
push
pop
movsl
xor
shrb
test
lret
sti
test
add
add
add
inc
pop
hlt
jnp
rol
test
repnz
push
pop
inc
pop
mov
out
sub
aad
mov
nop
add
pop
jmp
add
bnd
jmp
add
push
push
mov
xchg
jmp
jl
js
mov
pop
xchg
add
int3
inc
hlt
xchg
ss
push
pop
jp
or
mov
scas
sbb
enter
iret
loopne
mov
and
int
les
dec
xor
insl
scas
pop
dec
imul
jnp
jp
cmp
push
sbb
or
test
push
adc
xor
ficoml
push
cmp
mov
and
inc
nop
andb
xchg
jae
or
inc
out
icebp
mov
mov
add
push
hlt
xchg
fbstp
pop
add
pop
xchg
mov
xor
pop
subb
aam
icebp
push
jg
fcomps
les
dec
mov
sbbl
adc
cmpsl
adc
popl
cmp
push
xchg
repz
pusha
jb
bnd
mov
in
dec
loop
sbb
movsb
sub
outsl
add
loope
jns
in
fisttpl
rol
mov
pop
andb
ror
in
inc
xchg
dec
mov
out
cmpsb
ja
inc
das
rcrb
mov
lea
out
lock
les
xor
mov
imul
cld
pop
and
enter
dec
inc
adcb
iret
test
sub
sub
lods
push
jl
cmpsl
cwtl
inc
add
rcrb
idivl
pop
xchg
sbbl
sub
sbb
cmp
or
sub
repnz
pop
mov
movsb
adc
mov
fcomps
xchg
and
adc
inc
sahf
test
sbb
jbe
fs
ja
outsl
movsl
and
hlt
push
mov
jns
enter
clc
leave
xchg
xchg
adc
add
cltd
jmp
sbb
mov
imul
fnsave
sbb
and
lods
jge
out
movsl
jns
out
icebp
fcmovnu
mov
mov
hlt
inc
cli
stc
shlb
adcb
push
test
inc
push
jns
mov
fnsave
mov
or
and
lods
stos
cmc
test
dec
int3
ret
inc
cmp
cmp
mov
loope
push
das
or
add
sub
test
adc
mov
fsts
outsb
test
mov
cmp
sub
pusha
imul
clc
scas
fucom
rclb
rorb
inc
pop
mov
daa
dec
lcall
sub
mov
mov
ljmp
inc
roll
pop
repnz
fmull
or
xor
jl
jno
mov
push
enter
jle
leave
jbe
lahf
add
ljmp
mov
dec
adc
repz
push
sbb
xor
clc
mov
nop
lods
hlt
sbb
jle
repz
insl
fmul
int3
jle
push
mov
leave
lret
xchg
jge
mov
gs
stos
xor
dec
nop
popf
stos
jge
fsts
cmp
inc
mov
sub
and
mov
bound
push
mov
mov
jno
pop
cwtl
int3
addr16
pop
stos
ret
arpl
fs
xor
add
ja
lock
sarb
xchg
shrb
push
repnz
cmp
pushf
lcall
xor
xchg
mov
xlat
icebp
lahf
scas
test
ret
sbbb
testb
cmp
mov
sarb
pop
pop
inc
xor
xchg
xor
movsl
shll
lahf
int
cmpsb
jns
and
pop
scas
mov
movsl
push
cmp
inc
loopne
mov
push
jecxz
jne
movsb
sahf
dec
xchg
cmp
cwtl
pop
loopne
enter
add
repnz
mov
iret
andb
jl
loop
jbe
jp
in
jp
lods
outsb
and
nop
xchg
lret
sub
mov
cmp
dec
leave
bound
call
data16
jl
stos
rolb
pop
or
das
ficoms
jmp
cmpsl
stc
scas
pusha
push
clc
pop
jno
add
lock
lahf
pop
addl
and
repnz
and
jge
dec
nop
jo
int
lods
xchg
flds
hlt
mov
cli
loop
lret
dec
arpl
jge
add
inc
test
hlt
jmp
xchg
ret
mov
sbb
leave
cmp
xchg
popf
leave
xor
sub
or
lret
add
loope
or
inc
and
inc
addr16
mulw
xchg
inc
or
ret
and
stos
imul
and
mov
and
lret
sbb
mov
dec
xchg
and
mov
push
sbb
push
sbb
stos
rcr
dec
jp
faddl
cmpsb
sahf
imul
jmp
add
push
xchg
dec
cmp
sbb
ds
imull
sti
push
sub
lods
xor
mov
jne
idivb
xor
je
mov
cmp
add
push
aad
andl
inc
mov
mov
cmp
mov
pusha
lods
addl
ficompl
fisttpll
push
cmp
push
mov
sub
cmp
test
add
sub
dec
cmpsb
aaa
pop
jbe
mov
mov
pop
loope
inc
xchg
stc
test
inc
sub
arpl
push
addl
imul
les
mov
cmp
push
int
or
jne
in
jnp
subb
xor
imulb
mov
jae
aas
adc
andb
repz
rcll
mov
cmpsb
mov
pop
mov
inc
fnstenv
pusha
xchg
push
xor
mov
rclb
das
cld
pushf
int
add
clc
add
cli
inc
nop
inc
mov
cld
xchg
and
mov
xor
jo
jne
mov
das
fistps
add
in
add
sub
shlb
add
mov
loop
pusha
cld
jmp
cmp
data16
pop
hlt
mov
and
mov
add
push
idivl
fsubrs
ror
scas
lds
mov
mov
mov
test
fisttps
loope
cmp
movb
inc
push
pop
cmp
add
addr16
fcoml
lahf
cli
pop
jns
cmp
adcb
cli
push
jno
aaa
inc
adc
xchg
cld
repz
int
hlt
pop
enter
clc
sbb
fadd
pop
outsl
dec
shll
movb
aad
into
dec
jne
pop
mov
mov
mov
jno
shl
mov
lods
clc
cmc
sbb
aas
andb
xchg
enter
cmc
data16
push
cmpb
aaa
and
test
sub
shll
es
repnz
mov
popf
pusha
sub
mov
jp
orl
sub
lcall
mov
mov
sahf
jmp
out
xchg
inc
imul
loopne
sahf
hlt
mov
movsb
ret
pusha
and
rolb
mov
dec
pop
mov
jns
mov
xor
cld
negl
dec
int3
adc
push
push
cld
aad
outsl
sub
dec
test
lock
add
lds
dec
sahf
test
je
add
lea
jbe
addr16
dec
adc
jne
jae
repz
adc
out
mov
mov
mov
or
daa
mov
inc
mov
fdivl
lods
inc
addl
sub
das
pop
dec
shlb
mov
add
sarl
mov
or
lret
mov
add
mov
mov
shrl
sbb
cmc
pop
lahf
ret
das
nop
push
jne
jecxz
jmp
shl
sub
shlb
in
jbe
or
out
add
sub
out
fldl
or
jecxz
jb
dec
pop
fucomi
enter
aas
loope
sbb
cli
dec
lods
mov
cmpsl
jae
pushf
mov
pusha
cmp
or
test
stc
aas
loopne
addb
mov
int
pushf
into
lods
mov
push
test
mov
fldt
lods
sub
sarl
dec
fldt
push
adc
stc
in
adc
jl
sti
lods
lcall
inc
std
push
pop
mov
out
and
mov
adc
in
pop
daa
popa
loopne
adc
fmull
mov
imul
pusha
pushf
mov
andb
stos
inc
call
pushf
sti
jno
jg
insl
psubw
stc
data16
enter
pushf
call
ficompl
jne
vpsllw
mov
enter
mov
test
in
mov
nop
divl
std
mov
xor
adc
jle
addr16
cmp
aad
fwait
test
mov
or
add
arpl
pusha
cld
js
xchg
filds
mov
stc
inc
adc
lock
sbb
xor
push
dec
cmp
sbb
addb
popl
adc
hlt
mov
ret
mov
mov
dec
cmp
pextrw
add
mov
out
imul
into
add
inc
cld
push
hlt
scas
idivl
adc
dec
push
mov
cmp
into
jg
dec
dec
lcall
or
add
loope
mov
inc
sub
out
int3
int3
mov
jecxz
gs
push
adc
out
jae
leave
cld
mov
mov
or
loopne
loop
jno
mov
sti
ja
add
movsl
sti
pusha
mov
inc
jmp
cmp
into
mov
shll
mov
lods
sub
call
lods
bound
adc
pusha
xor
aam
mov
in
xor
lahf
pop
jmp
pop
cwtl
test
mov
rorb
loop
jg
cld
rcll
push
adc
in
mov
mov
sub
add
inc
out
mov
jne
mov
cmp
inc
mov
lock
scas
inc
mov
sti
test
mov
repnz
xchg
jle
clc
test
push
cwtl
dec
mov
cld
cmpsl
repz
cmpsl
jp
test
adc
jnp
dec
mov
inc
lea
movsb
aam
shlb
leave
or
in
mov
into
sbb
daa
inc
dec
cmp
inc
mov
jl
scas
or
cmp
add
iret
leave
dec
dec
inc
arpl
xorl
inc
movsb
inc
jae
or
mov
ret
movsl
jnp
in
jne
pop
shlb
nop
lods
aaa
lahf
adc
imul
out
repnz
lcall
mov
cld
outsl
dec
adc
pushf
cli
dec
jp
inc
xchg
andb
insl
pushf
shlb
test
jne,pt
subb
or
mov
loop
mov
sub
mov
jns
ja
ss
jg
cmpsl
or
jg
mull
adcl
xor
cmp
repnz
mov
push
mov
nop
sub
inc
inc
iret
jl
jnp
xchg
into
adcl
pop
sbb
adc
lcall
or
nop
fsts
pop
xchg
ss
or
fisubrs
and
scas
jns
es
push
mov
dec
imul
pause
adc
lods
pop
jp
pop
lcall
dec
test
or
jle
sub
push
popa
sub
ret
ficoms
or
loop
scas
sarl
xor
gs
cmc
inc
and
sbb
and
lods
int
test
adc
inc
sbb
and
inc
test
push
movl
repnz
sub
lcall
push
int
mov
faddl
push
fsub
aad
imul
adc
popf
and
imul
mov
shll
mov
push
es
fsubrl
iret
sub
mov
inc
fisttps
adc
sbb
xchg
xchg
add
ljmp
push
les
jbe
cli
and
inc
xchg
outsb
rorl
xor
aam
les
jne
and
incl
fs
mov
fsubrl
fists
add
and
cli
add
sbb
cmp
repz
mov
adc
mov
jge
pop
and
scas
movsl
jle
leave
das
loop
push
repnz
cltd
jle
jecxz
mov
mov
mov
jmp
inc
shl
mul
imul
mov
in
hlt
adc
push
add
sub
roll
hlt
in
repz
add
lgs
sti
lret
ret
adc
jmp
ret
push
fs
push
bound
cmpsl
stos
adc
cmpsl
stos
hlt
inc
jmp
les
jne
das
fbstp
sbbb
dec
xchg
pusha
lcall
loop
pop
inc
popl
call
test
mov
fldenv
pop
insl
pop
insb
xor
popf
add
hlt
push
cmp
fdivrs
sbb
imul
in
cwtl
es
std
pop
mov
xchg
clc
or
les
stc
int
insl
popa
xchg
adc
pusha
cmc
loope
test
je
hlt
mov
push
sub
xor
xchg
stos
ret
ss
mov
dec
xlat
repnz
movsb
adc
les
imul
inc
jl
stos
or
inc
push
sahf
or
dec
xchg
fstl
mov
bound
sub
push
ret
hlt
std
test
mov
lea
xchg
sbb
icebp
movsb
lret
xor
cwtl
pop
aaa
stos
cld
fstpl
mov
sub
test
fdivrl
int3
cld
lahf
or
repnz
mov
add
mov
test
dec
out
xlat
repnz
inc
jnp
out
arpl
les
xor
in
scas
leave
pop
into
cmp
sub
push
cld
clc
lahf
dec
jl
cmc
int3
into
inc
movq
cmp
push
enter
push
jo
ja
mov
xchg
adc
xor
lret
notl
sub
stc
push
add
push
mov
jnp
repz
add
leave
sub
mov
push
jecxz
outsb
add
inc
cmp
lahf
js
mov
outsl
data16
dec
mov
dec
jae
mov
pusha
cmp
add
sub
mov
mov
mov
rorl
mov
push
mov
jle
dec
cmp
pop
aas
in
cld
xchg
mov
inc
xchg
mov
hlt
jge
movsb
inc
xchg
jnp
jl
push
lods
ficomps
fdivl
pop
mov
hlt
insb
ret
xor
inc
popf
dec
cmpsl
mov
xchg
aam
call
aad
into
mov
dec
jns
mov
sub
lcall
mov
xor
enter
jo
mov
notb
pop
add
ss
pushf
mov
mov
pushf
fisubs
out
loopne
loopne
jae
test
xlat
add
leave
dec
jnp
popa
test
ror
es
mov
inc
jg
mov
sub
bound
call
ja
push
jns
add
sbb
cmpsl
xlat
call
rorb
or
push
add
mov
add
cmpsb
mov
lcall
or
dec
std
rcrl
mov
mov
xchg
dec
jb
test
mov
sub
sahf
leave
jg
xor
push
inc
xchg
push
aam
mov
sahf
mov
pop
inc
or
push
pop
push
mov
daa
ds
in
add
dec
movsl
cmpb
movsl
jne
sbb
hlt
jno
cmc
and
dec
xlat
notl
test
addr16
ficomps
sub
xchg
cwtl
data16
or
je
sahf
lcall
lret
outsb
stos
xchg
or
das
mov
test
scas
mov
mov
push
inc
adc
pop
or
add
out
add
insb
add
js
cltd
loope
cmp
push
inc
mov
jbe
lods
add
imul
mov
pop
dec
hlt
clc
shl
jge
push
pop
jmp
test
pusha
dec
ret
aad
mov
mov
dec
jmp
pusha
jno
xor
fstp
mov
inc
pop
lock
cmp
fsubrl
or
jp
sbb
dec
les
cmpsl
mov
into
pusha
mov
mov
mov
shl
cmp
nop
mov
movsb
pop
fdivrl
hlt
add
sbb
mov
out
dec
sub
cwtl
scas
int3
js
lods
cmpsl
pop
lret
jp
std
mov
jo
inc
cltd
and
rolb
cld
addr16
cli
in
lds
js
ss
sbb
inc
jne
rcr
stos
insb
sbb
lods
int3
enter
in
ds
and
adc
sarl
es
pop
mov
mulb
into
dec
lcall
hlt
subl
icebp
dec
mov
mov
add
leave
adc
std
push
jo
cmpsb
cs
sbb
std
inc
insl
sti
insb
cmpsb
mov
scas
insb
sti
push
mov
mov
pop
cli
mov
cmp
cmp
rcr
xor
cltd
dec
ljmp
popl
mov
push
popf
hlt
xchg
push
jp
fwait
adc
repz
sbb
jle
sbb
aas
cmp
jle
scas
mov
or
mov
or
negb
inc
scas
mov
imul
adc
xchg
test
push
push
shlb
clc
fs
xor
sbb
jecxz
mov
mov
stos
adc
enter
int
pusha
mov
fisubl
rcrl
out
lods
push
xchg
jmp
ds
fldl
icebp
fs
dec
aam
add
cld
push
xor
jb
cmpsb
cltd
pop
or
add
cmp
nop
pop
fwait
test
adc
sahf
mov
jle
mov
and
jmp
mov
jmp
lods
jne
insb
iret
stc
add
scas
xor
imul
mov
in
cmc
mov
shlb
icebp
dec
lods
mov
pop
mov
inc
inc
lret
and
repz
inc
lock
out
mov
mov
les
cmp
xlat
flds
pop
loopne
and
icebp
cltd
cmpsl
loopne
inc
inc
xchg
jbe
fwait
in
jnp
scas
sub
sub
mov
cli
neg
push
adc
fcompl
mov
pop
add
test
pop
repnz
insl
adc
jp
imul
sub
fcmove
es
jne
cltd
mov
lods
popf
mov
mov
xor
jg
loopne
jbe
pop
mov
xchg
add
movhps
or
ljmp
loopne
dec
mov
ss
push
fildll
clc
pop
mov
mov
xor
jbe
mov
clc
adc
js
movsl
fiadds
sub
gs
pop
lret
hlt
mov
push
adc
mov
mull
mov
stc
pop
mov
inc
fdivrl
xchg
out
popa
pusha
pop
repnz
adc
fs
shlb
cmpsl
inc
mov
ds
jns
cmc
mov
mov
stos
aad
imul
sbb
dec
mov
mov
add
int
sub
and
cld
mov
jge
mov
mov
jne,pn
sub
jbe
pop
mov
jbe
mov
mov
mov
mov
adc
das
mov
scas
mov
lea
mov
sti
xchg
xlat
mov
mov
xchg
popa
stos
hlt
mov
mov
cmp
jno
mov
addr16
push
arpl
and
scas
std
nop
add
xchg
add
sbb
loop
bound
dec
sti
ljmp
mov
mov
inc
add
fsubrl
xlat
cld
insb
clc
outsl
xchg
mov
jne
jo
inc
test
inc
add
mov
imull
call
sbb
cmc
inc
xchg
lods
dec
out
add
lea
push
loope
push
sahf
nop
pop
popf
xor
cmp
mov
pushl
add
cmp
fs
aaa
add
inc
add
lcall
inc
mov
push
lods
cmp
jbe
imul
out
lret
xchg
inc
add
inc
jecxz
mov
movsb
subb
jp
and
sar
out
jo
insl
push
or
jmp
pusha
pop
stc
lods
push
mov
xchg
xor
test
lods
ja
inc
xchg
and
adc
imul
stc
mov
cmp
cmp
rolb
pushf
fldenv
mov
sbb
aad
push
pop
out
mov
in
mov
loop
and
test
pushf
sub
push
int3
dec
jne
movsl
xchg
sub
bound
hlt
scas
xor
adc
xor
out
in
xchg
ljmp
cmp
push
push
push
xlat
xlat
rcrb
imul
bound
sahf
lods
inc
outsb
aad
out
in
clc
adc
push
ficoml
test
push
dec
lahf
cld
fdivrp
sbb
cld
cld
imul
adc
xchg
ljmp
std
add
sub
mov
mov
sub
jle
jne
stos
gs
lea
scas
pop
bound
pop
in
and
mov
xchg
hlt
or
mov
jne
in
sub
dec
out
add
jo
fmul
mov
push
inc
mov
sub
push
ja
mov
or
jg
lcall
sbb
mov
popf
cli
jp
cmpsb
in
lea
xchg
push
repnz
js
loope
mov
mov
or
push
mov
cmp
loope
rolb
das
push
push
cwtl
jecxz
scas
cmpsl
fisubs
enter
outsl
mov
movsl
inc
sbb
jg
dec
mov
mov
mov
xchg
lcall
sbb
add
jge
pop
es
jnp
xchg
imul
cmp
imul
push
fadd
lds
pop
inc
negb
addr16
and
add
idivb
rcr
test
call
sahf
popf
xchg
hlt
mov
pop
add
xor
jmp
mov
das
enter
jecxz
xorb
stos
mov
or
push
mov
rcrl
mov
flds
mov
jle
or
and
push
inc
cltd
fldz
mov
imul
and
xor
mov
add
insb
jns
adc
mov
mov
into
lods
andl
mov
sub
out
push
jp
add
fsubrs
ret
call
rclb
inc
iret
addr16
jecxz
cmc
mov
adc
jne
stos
loop
enter
loop
push
cli
xchg
xor
push
fisubrl
repz
das
repz
sbb
push
pop
pop
sbb
and
xchg
sbb
imul
push
jnp
int
outsl
imull
stc
lahf
adc
jp
push
mov
fcoml
inc
scas
xor
cmpsl
mov
ficoms
shrb
or
mov
jle
js
dec
jae
dec
pop
test
test
pop
nop
mov
sub
insb
aam
fidivrs
cmpsb
xchg
pop
leave
cwtl
test
pusha
scas
mov
cmpsb
movsb
cltd
les
jle
lret
cltd
int3
pop
xchg
jge
xchg
inc
pop
mov
cmp
sbb
jae
test
jns
lea
jne
sbb
xchg
mov
stc
mov
inc
inc
repz
jne
sbb
stos
inc
in
imul
cmp
stc
mov
repnz
mov
pop
movsb
ficompl
xchg
jne
imul
inc
mov
test
fmuls
mov
mov
aaa
movsb
mov
int3
mov
cmpsb
test
mov
sbbb
fldcw
pop
jb
jo
int3
jnp
jne
adc
scas
imul
inc
inc
xor
dec
fldenv
inc
xchg
fwait
inc
adc
int
testl
pop
pop
or
cld
cmpsl
dec
inc
dec
arpl
mov
into
hlt
mov
sub
xorl
test
into
push
jne
sbb
subl
sub
shl
repnz
cmp
out
mov
jle
cld
xchg
js
or
xchg
sub
int3
pop
cmp
cld
mov
sbb
sbb
add
mov
lock
add
leave
jge
mov
mov
clc
pop
je
divl
lds
dec
sbb
jp
inc
cmp
and
mov
mov
sub
pop
mov
mov
rcrl
cld
mov
xor
ss
inc
lret
fwait
mov
jge
outsb
in
xorb
mov
fmull
inc
adc
cltd
lret
insl
cmp
mov
clc
adc
sahf
repnz
fcmovne
add
inc
test
cs
es
adc
aas
mov
add
jnp
pop
push
inc
xor
imul
pusha
push
jns
push
flds
clc
pop
cltd
leave
and
mov
lods
clc
cmp
add
inc
mov
frstor
dec
ljmp
cmc
push
std
xchg
inc
ja
adc
clc
stc
xor
jp
test
add
mov
inc
enter
push
mov
sarl
jo
inc
lock
sub
int
mov
lds
sub
ficoms
push
jmp
xchg
adc
cmp
in
mov
sbb
insb
cmp
stos
inc
repz
test
sub
add
and
jmp
hlt
test
pop
jg
add
ds
icebp
inc
add
movsl
xchg
rorb
inc
scas
inc
sbb
loop
int
mov
pop
jne
pop
jae
cmpsl
xchg
mov
push
repz
lock
xor
mov
and
shl
pop
repz
incl
xlat
mov
sbb
mov
inc
shll
xchg
cmp
and
sbb
jecxz
xchg
add
negb
mov
push
xorl
lods
sar
sub
ss
add
fldcw
imul
aam
pop
pop
mov
push
imul
adc
in
pop
fadd
xchg
push
js
or
jg
mov
cli
loop
jae
das
cmpsl
rcrl
scas
sub
das
jne
xor
dec
sbb
aas
add
sbb
nop
or
pusha
jnp
xchg
dec
int3
cwtl
nop
mov
filds
fdivl
pop
mov
pusha
add
or
add
ja
outsl
ds
idivl
bound
mov
xchg
mov
xchg
icebp
test
dec
lahf
sbb
mov
sub
loopne
enter
push
push
push
mov
push
mov
sub
jae
or
insb
add
cmp
jne
and
rolb
subl
mov
sub
or
addr16
inc
jp
cs
shl
rolb
dec
enter
andl
mov
xchg
dec
jp
pop
push
mov
dec
shl
cmp
data16
and
dec
stos
push
mov
cs
cmp
popa
inc
push
ret
add
jo
mov
add
xor
bnd
mov
xlat
pop
lcall
pop
lret
je
mov
hlt
leave
push
jne
lcall
insb
mov
mov
jne
mov
cmp
add
test
scas
in
sbb
pop
mov
ja
mov
pop
sbb
test
cld
inc
cmc
or
inc
push
out
das
or
mov
and
jne
mov
data16
sub
gs
loope
mov
std
jl
loop
pop
les
add
lods
loopne
movsb
loop
mov
fsubrl
cmpsl
rcl
dec
out
scas
sub
add
inc
rcrb
outsb
cmp
stos
hlt
or
cmp
call
int3
cmpl
and
ljmp
jp
adc
mov
mov
pusha
hlt
lea
inc
mov
aaa
insl
fistpl
mov
loop
xor
imull
je
out
xlat
scas
pop
cmpl
lds
sub
lahf
arpl
notb
sbb
mov
mov
test
sahf
insb
mov
jmp
xor
sti
sarb
cmpsb
and
jne
out
mov
inc
icebp
mov
and
call
cli
fcmove
pop
movsb
ljmp
add
or
xchg
fcmovnu
fs
jl
insl
das
jle
popf
add
roll
stos
stc
inc
mov
add
ret
outsl
xchg
fists
adc
ljmp
xchg
xor
or
rorb
adc
inc
es
mov
mov
movsl
xchg
inc
xor
sbb
out
xor
sahf
call
sti
mov
shl
push
cld
jp
inc
scas
cmc
sti
stc
mov
jp
push
loopne
sub
sub
dec
or
inc
arpl
rcl
rorl
sub
shll
idivb
adc
in
xchg
xor
push
movsl
iret
lcall
add
dec
sub
xor
xchg
adc
add
jns
std
mov
add
inc
push
pop
adc
sub
jg
loop
mov
jle
cmc
xchg
mov
mov
pop
ret
sarb
popa
pop
dec
out
dec
and
xchg
inc
shll
imul
cwtl
dec
out
cmc
idiv
xlat
fadd
shll
lods
or
nop
add
scas
xor
test
imul
rcrl
push
and
ds
and
sub
sbb
jne
cmp
lret
sahf
hlt
push
int3
lcall
push
adc
idivl
lods
les
shlb
push
cmpsl
and
xchg
ret
adc
add
imul
pusha
aas
mov
add
loope
jle
subb
popa
not
cld
loop
movsb
cmc
les
cmp
push
mov
push
movl
mov
mov
enter
mov
js
push
sar
ljmp
and
ja
add
into
push
aad
js
sbb
cmpsb
mov
adc
jnp
rol
test
lret
js
dec
add
lret
xor
xchg
inc
andb
mov
stos
les
cs
loopne
mov
cmpl
lea
loope
pop
jns
aam
int3
sbb
mov
xchg
pop
inc
mov
pop
mov
incl
loop
je
adc
lret
jno
ss
mov
jne
fbld
add
out
sahf
dec
enter
pop
mov
subl
mov
rorl
adc
jbe
std
popa
jecxz
cmc
xor
xor
push
or
or
loopne
inc
bound
inc
cmp
cltd
repnz
add
aad
stos
xchg
popa
adcb
jne
in
jl
in
outsl
lcall
hlt
addr16
fst
insb
mov
in
ret
scas
pop
fdivrl
mov
push
imul
rolb
sbb
xor
mov
test
lds
lods
into
push
movsb
sbb
cmpsb
lret
xchg
xchg
add
pusha
inc
push
cld
sti
inc
popa
add
gs
fsubr
add
pop
leave
pop
insb
imul
fiadds
mov
clc
jge
movsl
xor
std
sub
mov
rclb
or
cmp
cmp
and
mov
scas
jns
sti
jge
out
inc
inc
jp
sub
mov
xor
lods
out
mov
hlt
ljmp
sbb
push
lods
jbe
cs
cmp
adc
or
pop
jne
adc
lret
rcrl
movsl
rcr
mov
movsb
js
inc
orb
clc
sahf
adc
sbbl
repz
xchg
pop
sbb
subl
lock
js
int3
std
sub
fisubl
loopne
inc
sar
mov
test
xor
jecxz
mov
sarb
ja
movsb
cmp
inc
shrb
inc
and
sbb
insb
jnp
xchg
adc
fnstenv
xor
push
xchg
das
pop
stc
mov
lock
pop
xor
aam
in
pop
lea
cmp
jno
stc
sbb
sbbl
int3
out
enter
sub
test
hlt
test
stos
push
xchg
sub
xor
lock
mov
fsubrs
lret
pop
test
fimull
xchg
jne
cs
fdivrs
loope
pusha
pusha
adc
xchg
mov
xor
sti
inc
add
inc
rclb
fadds
pop
mov
jns
insl
lock
jle
sbb
out
enter
and
xchg
jnp
xor
incl
sub
int
push
add
push
xor
addr16
cmp
or
loop
lret
and
pushf
insl
sbbb
push
cmpsb
repnz
mov
lret
push
cli
fsubs
rclb
xor
stos
mov
xchg
loopne
arpl
mov
mov
das
jmp
roll
or
sbbl
cmpsb
decb
mov
nop
mov
and
mov
add
leave
adc
sub
mov
cmpsb
sub
pop
lods
push
idivb
cmpl
fists
or
dec
aad
test
roll
jge
or
push
lret
lcall
pop
lods
xor
andb
sub
sbb
cli
xorb
int3
test
push
jge
sarb
sub
dec
cmpsb
fistpll
hlt
rorb
outsb
gs
lds
mov
std
jne
ds
fsubl
pushf
pop
imul
div
rcrl
jg
mov
lods
push
and
mov
jmp
pop
mov
pop
lcall
inc
lock
dec
and
sahf
jns
xor
es
jmp
dec
push
jns
stos
fs
out
hlt
mov
pop
aam
ret
loop
pop
xor
and
sar
push
shr
stos
popf
pop
xchg
mov
mov
inc
sub
mov
test
adc
or
or
pusha
int3
or
ds
jns
add
frstor
imul
adcl
pusha
mov
hlt
add
inc
or
js
stos
dec
pop
xchg
cmc
push
jge
sub
lock
cld
loope
hlt
lret
daa
mov
cltd
jp
mov
xor
icebp
fxch
lcall
daa
dec
ja
mov
leave
out
stc
adc
pop
test
dec
jge,pn
cli
mov
or
test
adc
fsubrl
cli
mov
sbb
insb
fistps
adc
cmc
xor
or
mov
hlt
rorl
cmp
fwait
popa
jne
test
dec
jge
jnp
flds
cmp
sub
mov
loop
xor
aas
ja
mov
add
mov
aad
out
inc
fildll
pop
jno
sarb
in
rorb
inc
jne
pop
in
icebp
imulb
sub
aam
hlt
xor
popf
add
pop
mov
scas
test
icebp
lret
out
or
icebp
sub
and
pop
fmull
fisubl
add
inc
lea
mov
dec
cmpsl
repnz
push
inc
out
aad
repnz
inc
insb
xchg
ficoms
notl
mov
movsl
jg
and
rcl
test
cmp
adc
fnstenv
clc
dec
cltd
loopne
cli
and
sub
out
lods
stc
sbb
insb
lcall
adc
push
pop
jbe
lods
add
hlt
push
jg
xorb
mov
sub
hlt
pop
fs
out
pusha
inc
sbb
or
xchg
dec
test
mov
hlt
cwtl
fdivr
jnp
loop
jle
adc
imul
and
mov
jae
sbbl
les
pushf
pop
or
dec
mov
mov
addr16
cld
notl
add
out
cmp
sbbb
and
xlat
aad
popl
fsubrs
dec
mov
sub
loop
mov
mov
dec
push
push
hlt
adc
mov
add
jge
jnp
xor
enter
pushf
sbb
rorl
jno
ljmp
push
mov
fs
enter
xchg
das
lods
cli
adc
jmp
rclb
popf
jl
data16
in
cmpsl
les
les
push
pop
stos
mov
cltd
mov
cmc
pusha
jl
inc
adc
in
cmpsl
out
hlt
nop
jmp
cltd
movsb
mov
jecxz
movsb
ret
call
mov
int
xchg
cwtl
mov
inc
add
xor
outsb
pop
xor
inc
adc
jbe
movl
mov
mov
idiv
int3
test
ret
mov
lock
lods
scas
jmp
pop
ja
jb
push
mov
clc
xchg
nop
or
adc
fnstenv
or
lret
inc
fdiv
xor
sbb
pop
cld
dec
scas
jmp
les
das
jns
push
mov
test
fiaddl
fisubrs
mov
mov
hlt
ret
decl
jmp
insb
rcl
aad
hlt
fsubrl
sbb
daa
inc
mov
shrl
adc
sbb
cmpsb
pop
clc
sub
dec
add
and
adc
fs
mov
sbb
mov
pop
push
sub
sbb
sub
das
bound
jg
in
enter
data16
int3
pop
pop
pop
push
pop
insb
mov
xchg
hlt
test
shll
call
sti
enter
aas
shll
or
xor
xor
xor
inc
rorl
mov
js
aad
mov
inc
outsb
or
mov
push
xor
mov
inc
adc
cli
mov
sub
ficoml
leave
in
cmpsb
hlt
xchg
loop
mov
int
sub
push
popa
pop
icebp
sbb
push
iret
popa
inc
int
mov
mov
push
mov
pusha
jb
add
hlt
decb
xchg
mul
lret
pop
xchg
test
jns
pop
sbb
add
xchg
mov
and
cmpsb
loope
loop
xlat
dec
push
std
insb
cmpl
loopne
or
int3
hlt
xchg
mov
jl
or
in
mov
pop
mov
inc
enter
lcall
ret
into
dec
cwtl
and
int3
addl
test
jg
arpl
fldcw
mov
repnz
stos
cmpsb
out
mov
popa
pushf
fisttps
test
and
push
jno
jnp
jecxz
test
cmp
clc
xor
lds
rol
jne
mov
mov
push
pop
jg
into
int3
fdivl
jmp
aam
mov
loop
enter
daa
or
arpl
lahf
bound
pop
xor
cmp
adc
in
aas
sbb
icebp
movsb
mov
movsb
leave
gs
add
sub
lret
cmc
shll
add
in
sub
xchg
std
hlt
into
icebp
rclb
dec
xchg
pop
adc
mov
lods
test
xchg
sbb
fisttpl
or
movsl
push
jge
ret
jmp
adc
testb
and
push
push
mov
or
xchg
aas
mov
int3
mov
xor
add
mov
outsl
dec
mov
scas
dec
xchg
add
add
pop
jne
imul
enter
or
vmovd
cmpsb
mov
scas
add
xor
ret
pushf
fsub
fistpl
ret
aas
popa
das
sub
stc
ljmp
push
movsl
jbe
test
inc
mull
push
add
movsb
fcompl
in
rcr
inc
jbe
test
pop
daa
push
mov
lods
les
enter
lods
orl
cmpsl
in
ds
out
outsb
arpl
xchg
push
xchg
filds
loope
xchg
cmp
jnp
xor
jmp
and
inc
jmp
cmpsb
push
cmpsl
cs
test
adc
or
out
addb
mov
sub
cmp
dec
pop
popa
test
sbb
or
cmpsb
cltd
cmp
pop
mov
in
sti
pop
ror
mov
clc
sbb
fidivrs
dec
hlt
push
out
inc
push
fsubrl
or
dec
lods
aam
or
adc
jecxz
repz
rorl
repnz
pop
xor
sub
cld
cld
aas
bound
fwait
sub
ja
jnp
adc
add
sub
jae
push
leave
mov
scas
rcrb
push
ljmp
xchg
fnsave
loop
pop
jne
inc
jecxz
or
add
std
in
hlt
xchg
mov
jg
lret
repz
inc
cmp
mov
inc
xchg
lock
jle
insb
mov
cltd
rcrl
xchg
loop
adc
scas
cmpsl
push
sub
pop
adc
cli
pushl
push
inc
jle
sub
cmp
inc
aas
stos
mov
mov
push
xchg
test
xchg
mov
cmp
xor
mov
loope
jg
dec
rorl
sub
dec
jae
aam
leave
jne
cmpsl
stc
xchg
insb
jbe
push
xchg
add
mov
sub
mov
stos
inc
push
sbb
sbb
pop
mov
xor
sub
xor
sub
pop
insl
mov
cwtl
adc
fstp
push
push
mov
xor
cmp
jne
or
xchg
add
jecxz,pn
stos
fistps
dec
lods
inc
mov
cli
dec
bound
add
leave
daa
loope
inc
icebp
clc
std
sbb
xchg
mov
cmp
mov
call
and
pop
sahf
mov
shrb
mov
jl
inc
mull
imul
xchg
movsb
push
xchg
stos
sub
int3
xor
shlb
int3
mov
dec
dec
sub
cmp
and
das
xor
adc
cwtl
nop
outsl
jp
xor
xchg
sub
les
sub
hlt
adc
jecxz
lret
sub
pop
xchg
and
inc
or
mov
fists
jbe
cmpl
hlt
mov
xchg
xor
lea
loop
insb
nop
bound
add
lret
xor
test
pop
ret
add
or
sub
pop
mov
xor
pop
std
jmp
or
jns
dec
mov
jecxz
data16
add
xchg
fstpt
pandn
rol
stc
sti
xchg
fistl
adc
add
mov
add
std
pop
jge
dec
dec
sbb
adc
mov
pop
ret
cmpsb
out
mov
xchg
add
cmp
leave
sub
add
add
mov
jl
loopne
cwtl
xlat
inc
rorb
std
push
sub
cmp
fsubrp
sub
add
into
ret
call
add
xor
cs
cmpsb
jmp
ja
nop
xor
out
sub
out
or
ja
adc
test
nop
dec
pop
lea
and
jmp
aam
pop
insl
ret
cmp
mov
ja
add
inc
adc
into
mov
sbb
in
fs
push
sahf
int3
lods
adc
jmp
sbb
jnp
sti
test
mov
push
inc
in
stos
insl
cmpsb
cwtl
es
pusha
nop
push
mov
adc
mov
pusha
lds
lea
mov
fucomi
adc
outsl
fstpl
mov
ret
xorb
jno
lahf
popa
pusha
pop
cli
jp
mov
add
pop
dec
test
pop
lret
testl
sub
repz
addr16
jmp
adc
mov
call
xchg
inc
xlat
adc
sarl
push
es
mov
jp
sub
aad
push
int3
and
mov
cmp
outsb
mov
inc
and
dec
xor
lahf
jbe
sbb
jns
mov
sti
mov
test
and
push
and
push
ljmp
jne
lock
enter
xchg
test
xchg
jne
and
inc
inc
dec
imul
jl
xlat
xchg
leave
xchg
dec
mov
xchg
or
cltd
pop
nop
dec
arpl
mov
movsl
adc
ret
daa
loopne
leave
and
test
cmp
mov
hlt
leave
mov
insb
ret
adc
mov
in
or
push
dec
or
frstor
adc
outsl
inc
fstpl
pop
fs
testl
ret
inc
int3
arpl
aam
fisubrl
dec
mov
sti
idiv
cld
mov
pop
sbb
sbb
adc
leave
mov
outsl
fs
ljmp
fnsetpm(287
aam
pop
dec
sub
imul
adc
lahf
rcll
push
jl
xor
lock
repz
xchg
and
mov
mov
mov
mov
outsl
int3
hlt
loop
sar
jp
pushf
pop
and
pop
movsl
adc
jl
fucom
in
inc
adc
in
push
jns
movsb
rolb
loop
rcrb
js
movhlps
xor
adc
insl
pop
adc
mov
orl
cli
push
lock
repz
gs
dec
mov
pop
loop
in
out
pop
jp
push
sub
outsb
arpl
mov
and
xchg
std
imul
pop
ret
lret
xchg
lock
and
movsb
add
mov
adc
ret
shll
inc
sbb
loop
lods
popa
cmpsb
mov
fwait
lea
in
cmp
mov
mov
xchg
mov
lret
cmp
sub
sub
mov
mov
scas
call
jno
xchg
mov
cmc
pop
and
insl
sub
or
pusha
jl
mov
das
jecxz
pop
mov
pushf
cmp
outsl
js
and
jmp
adc
stc
mov
mov
mov
push
cmp
ja
das
mov
cmp
or
enter
jmp
push
jg
cmovno
sub
pop
fidivl
imul
mov
xor
jne
pop
jnp
orl
aam
jle
pusha
add
aas
in
imul
add
adc
gs
movsl
clc
dec
ret
cwtl
dec
jl
mov
and
fs
sbb
ss
jmp
mov
stos
call
mov
inc
loopne
dec
xor
sbb
dec
test
cmpsb
rolb
mov
sub
or
sbb
adc
movsb
or
call
fldcw
sub
icebp
mov
rorb
push
mov
scas
xchg
xlat
in
mov
cmp
pop
sub
aam
mov
loop
repz
xor
js
mov
call
cmpsl
mov
int3
lods
into
add
pop
mov
into
jl
imul
cmc
mov
enter
push
and
mov
inc
enter
ja
shlb
push
xchg
in
andl
out
push
lcall
out
les
iret
dec
popfw
add
into
cmp
les
bound
push
dec
das
int
cmpb
fnstsw
jo
lock
adc
xchg
mov
cmpsl
out
clc
dec
pop
fcoms
jg
sti
fcoml
in
int
insb
sub
xchg
sarb
sub
mov
adc
inc
pop
mov
in
mov
xchg
mov
xor
xchg
call
gs
test
out
pop
mov
cmp
lods
and
das
scas
stc
push
lcall
pusha
xor
pop
out
adc
loopne
int
movsb
jmp
pusha
bound
lods
stos
and
sub
int
scas
cmc
jne
lods
ffreep
mov
push
stos
adc
shll
mov
cli
jo
inc
and
mov
mov
lahf
roll
mov
sahf
out
test
ja
sbb
je
or
pop
gs
gs
inc
ds
addb
ljmp
std
pop
jne
test
repz
jp
into
aas
push
cmp
cld
add
rcrl
rorl
mov
out
daa
cmpsl
jp
push
pusha
movsl
push
push
nop
mov
push
pop
mov
jo
stos
scas
adc
jns
iret
fs
mov
mov
sahf
xchg
push
stos
mov
and
pop
jne
jae
decb
mov
push
rorl
and
ror
mov
inc
out
add
test
sub
xchg
lahf
dec
notb
mov
add
into
inc
mov
jo
mov
dec
lcall
jle
adc
mov
dec
shl
dec
mov
cld
lds
dec
out
fyl2x
mov
hlt
dec
cltd
dec
xor
mov
jp
imul
sbb
mov
fsubp
int3
sahf
es
nop
push
inc
negb
popf
dec
sub
sub
jl
xchg
or
and
jg
testb
jle
mov
int3
inc
pop
in
arpl
lods
fists
mov
xchg
mov
fcoml
data16
call
pop
pop
lcall
notb
inc
lahf
ret
pop
shlb
lock
fnstsw
jnp
mov
mov
pop
cwtl
les
jle
xchg
pop
fcomip
leave
arpl
add
sub
mov
fnstenv
mov
xchg
cmp
xchg
mov
adc
in
aad
fcmovnu
jno
clc
lahf
mov
insb
lret
jne
pop
nop
adc
fld
loopne
push
sub
cltd
jle
repz
dec
cmp
pop
ffreep
mov
in
std
dec
and
popl
mov
leave
mov
pusha
test
shll
mov
pop
lahf
xchg
fcomps
pushf
xchg
mov
movsl
pop
and
adc
or
inc
imul
mov
jbe
mov
int
pop
popf
aad
pop
movsb
xor
jae
dec
fadds
push
pusha
fs
das
xchg
les
jmp
inc
leave
fwait
lahf
lea
cmp
lret
push
test
subb
daa
mov
movsl
or
icebp
in
mov
or
stos
add
repz
int3
mov
mov
cmc
jecxz
cmp
jp
inc
std
push
sti
adc
fildll
mov
call
jle,pn
mov
or
xor
jg
call
subl
inc
sub
adc
jg
or
cld
faddl
or
es
pusha
int
mov
sar
jmp
les
inc
jns
ficomps
and
inc
ljmp
es
js
xchg
ret
jae
mov
cli
add
imul
sti
or
js
sbb
fdivl
in
enter
xorb
mov
cmp
fwait
xor
and
inc
adc
sub
adc
inc
and
les
mul
adcl
negb
and
ret
insl
dec
jg
rcrl
jns
xlat
inc
pop
mov
xchg
iret
push
add
add
loope
mov
mov
stos
pop
arpl
popf
lcall
scas
mov
in
enter
cmp
or
or
fs
test
or
mov
push
in
push
sub
pop
lds
xchg
push
add
pop
movsb
les
andl
jl
cmpsl
pop
out
ljmp
jg
xchg
data16
je
bound
outsl
sub
rol
push
mov
enter
xor
adc
sahf
out
addr16
or
shrb
shlb
sti
shl
stc
mov
sbbl
jp
sbb
les
mov
dec
movsl
test
mov
fdivrs
cld
pusha
loop
mulb
lret
xchg
push
sahf
cli
cmpsb
inc
jl
mov
sbb
xchg
xchg
or
sub
jp
nop
orl
aas
xor
xor
and
jle
aad
mov
xor
fists
sbb
dec
ret
or
dec
cltd
inc
ret
or
jle
xchg
xor
fnstcw
fwait
leave
pop
cmp
add
pop
arpl
xchg
cltd
nop
int
add
push
push
pop
adc
mov
push
mov
insb
push
stc
lea
divl
stos
and
out
cmpl
push
push
clc
mov
rcll
xlat
push
hlt
push
std
out
pop
mov
scas
add
mov
imul
add
push
inc
in
hlt
add
mov
int3
inc
cmpl
fdivrl
shl
mov
rcr
cmp
outsl
cmpsb
xchg
cmc
daa
dec
pop
xor
jne
iret
lcall
ret
js
mov
ss
sub
lods
hlt
adc
cmp
mov
inc
aad
stc
or
sahf
push
fdivl
dec
mov
xchg
jnp
gs
xor
out
mov
jae
std
sub
imul
mov
xor
imul
adc
in
cwtl
mov
adc
call
les
hlt
ret
sahf
jle
lock
jns
shl
addr16
jl
ret
add
lock
push
cmc
pop
mov
movsb
fistpll
lret
ror
call
insb
mov
ds
dec
testl
add
mov
js
imul
cmp
in
mov
adc
stos
or
dec
mov
fcoml
sub
mov
pop
mov
rolb
rolb
fiadds
inc
cmp
jl
sahf
hlt
pop
imul
jnp
and
mov
jnp
xor
or
les
lahf
loope
rcrb
xchg
imul
mov
mov
mov
xor
mov
mov
jecxz
dec
xlat
lcall
jg
ror
push
mov
out
sub
in
jnp
adc
popf
jl
fcomp
hlt
mov
sbb
and
mov
call
mov
mov
in
into
call
es
cltd
int3
aas
add
and
mov
sarb
lods
lret
and
fisttps
stos
hlt
mov
ja
rcrl
ja
xchg
sub
or
push
sti
test
jb
cmp
ds
xor
shrb
sti
mov
xor
lock
sub
cld
jge
fsubs
mov
xchg
loopne
mov
xchg
mov
xchg
repz
lret
jecxz
mov
and
push
stc
mov
decb
shl
adc
in
push
testb
xor
pop
mov
pusha
nop
jg
hlt
sub
ljmp
notb
xchg
int
or
test
xor
or
pusha
stos
mov
test
mov
out
movsb
cmpsl
popa
lods
jo
lds
cmp
adc
sub
add
out
jecxz
test
lea
or
and
mov
pop
sub
insb
cli
add
scas
jne
popf
and
gs
fmull
xchg
add
leave
ja
test
insb
sbb
xlat
pop
xlat
mov
nop
ja
jp
xorb
adc
ja
subb
or
pop
mov
lods
mov
repnz
idiv
mov
enter
pop
or
sub
test
sub
push
pop
inc
outsl
cmp
mov
cwtl
hlt
and
adc
push
test
inc
pop
mov
fdiv
insl
push
jge
hlt
aaa
lret
sarb
add
cwtl
mov
ret
aas
or
mov
scas
shrb
outsl
inc
hlt
rolb
cmp
push
shl
xchg
push
aas
sub
xchg
popf
cmc
fisubs
shlb
test
cmc
in
stos
cld
xchg
ljmp
pop
insl
and
cltd
xor
sub
rcll
in
jg
lods
fdiv
mov
mov
sub
enter
inc
ss
notb
mov
hlt
push
pop
mov
cmp
fwait
loop
xchg
mov
fidivrl
hlt
sbb
std
shlb
sbbl
movsl
shlb
sub
jecxz
sbb
ror
stc
call
inc
inc
outsl
inc
cmp
inc
cmp
or
int3
pop
inc
cld
sub
ror
clc
pop
xchg
sbb
jns
rorb
std
cmpsl
mov
mov
pop
inc
daa
mov
outsb
and
jnp
pusha
jl
push
mov
xchg
cwtl
and
hlt
inc
es
or
stos
mov
sbbb
out
fnstcw
fmull
mov
sub
cmp
jbe
cmp
push
dec
or
mov
mov
push
in
mov
cmp
fcomp
jp
xchg
in
pop
outsb
push
addb
cmovne
and
ret
inc
cmp
sti
insb
repz
es
repnz
fldt
subb
sbb
les
shll
int
sti
ljmp
sub
mov
sarb
jmp
cmp
dec
push
stos
in
jns
jp
sbb
jb
call
into
loop
dec
loopne
xor
and
sub
divb
mov
sub
int
js
decl
int3
cmp
or
mov
hlt
movsb
lds
imul
xchg
mov
mov
add
inc
ret
insl
stos
stc
rolb
push
pop
inc
cwtl
shlb
into
aam
jo
arpl
add
push
dec
mov
pop
fstl
scas
cwtl
xchg
xchg
ret
testl
sbb
lcall
outsl
mov
loope
mov
xlat
push
iret
mov
mov
icebp
roll
shll
inc
sub
add
sbb
or
movsl
add
push
adc
sahf
mov
push
imul
dec
inc
je
outsl
cmpsb
mov
sub
movl
dec
pop
cmpsl
dec
xchg
shlb
rcrb
test
cmp
std
mov
mov
outsb
cmp
and
xchg
jbe
popa
pop
mov
fldenv
das
push
int3
ljmp
daa
push
inc
jne
insb
std
inc
dec
inc
inc
inc
std
cld
push
push
dec
push
outsb
dec
adc
sub
xor
pop
mov
mov
sbb
call
push
mov
jle
cmc
mov
fisubrs
or
jle
scas
mov
loopne
jecxz
mov
sub
or
out
clc
leave
movsb
test
into
push
scas
inc
not
push
or
shll
daa
test
push
add
enter
jle
nop
push
cld
outsl
movsl
adc
aas
sar
sbbb
dec
cli
rclb
xchg
or
les
jp
inc
into
enter
sub
mov
or
mov
fwait
pop
clc
testl
es
rcrb
dec
push
mov
pop
data16
add
fmull
fsub
xchg
imul
mov
icebp
mov
xchg
iret
hlt
pushf
mov
aas
add
or
cwtl
cmpsb
pushf
clc
jp
mov
inc
jle
mov
cli
mov
xchg
lods
mov
jl
inc
dec
cs
outsb
pop
test
inc
push
xlat
and
mov
jns
cld
jp
add
xchg
pop
xor
std
pop
mov
jmp
jae
lret
mov
imul
lods
loopne
pop
add
mov
push
ja
push
add
cmpsl
adc
push
or
int
sub
cmpsl
nop
cmpl
cmpsb
loop
lea
jge
leave
mov
inc
rclb
js
jb
sbb
sbb
xor
incb
cs
mov
or
scas
test
mov
xor
sub
pop
clc
sub
or
popf
bound
lcall
or
ret
adc
in
icebp
jnp
mov
bound
jne
mov
dec
mov
inc
xchg
mov
inc
shlb
lock
hlt
cld
jle
into
arpl
sbb
mov
hlt
cltd
mov
int
xchg
cmp
movsl
push
scas
xchg
inc
adc
cmpsb
flds
xchg
push
cli
cmp
es
popa
shrb
xchg
xchg
cltd
js
int3
loop
hlt
imul
out
clc
xor
or
lcall
or
xor
sub
xlat
bound
es
jne
pop
std
jg
shrb
push
or
hlt
daa
sbb
test
lods
xchg
std
xor
xchg
clc
fst
push
inc
mov
lods
cmp
push
mov
add
out
sti
push
ss
scas
mov
lret
pop
xchg
ljmp
inc
dec
push
das
mov
aam
push
and
jl
xchg
mov
insb
cmp
sub
xor
cmp
mov
loopne
outsb
jnp
push
push
xor
cld
push
jmp
jne
xorb
jae
aam
dec
sub
add
test
shlb
mov
pop
mov
lret
sbb
mov
mov
out
iret
mov
stos
add
pusha
out
sbb
into
mov
cli
xor
and
in
rclb
add
pop
rorl
adc
shl
jge
mov
test
out
lds
or
inc
xor
inc
cs
xor
fdivs
pop
cmp
loopne
jl
mov
dec
adc
into
xchg
lea
adc
cmp
insb
xor
add
aaa
jbe
mov
testl
leave
out
sub
in
stc
push
push
mov
hlt
jnp
fstl
testl
scas
pop
xchg
movsl
xchg
jbe
cmpsb
std
cmpsb
cmp
pop
mov
inc
or
add
movsl
rcr
jg
fistps
scas
jl
push
mov
mov
jmp
pop
jne
xchg
inc
push
das
mov
mov
mov
leave
int
mov
xchg
pop
cmc
xchg
pop
mov
cmp
mov
mov
ss
cmp
adc
jns
popf
insl
icebp
aad
movsl
cmpsb
sahf
add
das
ss
jecxz
cli
push
js
sub
adc
loop
fmuls
jne
repz
xchg
cwtl
xchg
dec
adcb
sub
es
mov
cs
fildll
lahf
enter
pop
shrb
test
fidivrl
cmc
add
iret
xor
sbb
inc
enter
or
cmp
dec
sbb
or
fsubrl
and
xchg
adc
push
push
lods
hlt
adc
test
js
pop
pop
int3
scas
cwtl
add
pop
call
cld
inc
sbb
mov
mov
stc
pop
adc
push
leave
incb
jb
push
sbb
sub
jmp
mov
or
jne
jg
dec
sbb
fnstenv
mov
mov
mov
pop
shrl
mov
psubsw
sub
outsl
pop
mov
lods
push
inc
movsl
mov
cmp
nop
mov
inc
insl
mov
cmpl
loop
mov
pop
popa
into
shll
rolb
and
inc
das
addl
movsb
gs
sbb
aad
push
ljmp
repz
sbb
xor
mov
jg
shr
fcoml
out
out
mov
jle
rcll
jecxz
popa
sub
lret
mov
dec
add
std
mull
or
xchg
push
mov
dec
nop
jnp
xchg
adc
cmp
fstpl
sub
cld
lret
adc
mov
jb
inc
mov
jno
sub
out
mov
pop
jl
imul
mov
shr
and
divl
icebp
out
mov
lods
fcompl
decb
and
lahf
subl
or
sub
adc
icebp
push
iret
sbb
add
call
stos
lods
push
popa
dec
in
mov
fmull
jb
fcoms
mov
test
ficompl
mov
mov
in
dec
dec
jmp
dec
lock
mov
lods
mov
int
sub
mov
jne
aam
add
daa
out
stos
inc
or
and
xchg
mov
mov
lea
sti
addr16
xchg
mov
inc
hlt
mov
das
mull
inc
cmpb
jmp
int
test
in
jg
mov
out
jne
loope
repz
arpl
lret
inc
dec
pop
xchg
loope
dec
lods
xchg
pop
adcb
jns
aad
lret
dec
popa
inc
cmp
cmp
pop
rcll
and
mov
jne
in
popf
loopne
mov
enter
movsl
lods
hlt
inc
scas
dec
xor
or
mov
scas
adc
push
fisttpll
dec
xorb
stc
xor
aad
lock
shlb
rclb
mov
aaa
pop
mov
loop
sub
jp
lods
cli
lock
pop
push
cmp
mov
clc
popf
pop
mov
or
les
sbb
sbb
jne
push
test
add
sub
add
mov
scas
ja
inc
jne
std
shlb
es
fdivl
stos
hlt
cs
ljmp
scas
out
das
inc
mov
jae
sbb
out
mov
dec
in
jne
test
ljmp
mov
cmp
aaa
sar
cld
xor
pop
pushf
dec
leave
adc
or
idivl
inc
pop
and
inc
dec
or
insb
add
push
mov
movsb
xor
repnz
inc
pop
adc
stos
xor
sbb
and
aaa
mov
lret
hlt
pop
mul
pop
jae
mov
mov
ret
stc
cmp
aas
in
hlt
cmp
dec
mov
push
jmp
sub
or
or
push
pusha
gs
jp
or
or
sub
int3
jle
lret
cmp
adc
cmp
aad
xchg
shrb
mov
sbb
movsl
hlt
adc
sbb
and
and
les
mov
bound
add
hlt
or
mul
jae
ja
cmp
test
rorb
mov
loopne
or
movsb
fcomip
pop
mov
stos
push
mov
bound
mov
jnp
dec
jmp
xchg
testl
push
dec
push
scas
push
mov
push
mov
lock
cli
inc
loop
js
orb
mov
mov
xchg
pop
add
inc
shlb
ljmp
rorl
add
jne
test
mov
pop
and
jne
adc
pushf
pop
int3
mov
pop
sub
fnstcw
aad
repz
dec
mov
nop
mov
ss
sub
in
je
test
jmp
mov
repnz
xchg
in
insb
jecxz
mov
sub
xchg
pop
or
sarl
push
stc
sahf
cmp
mov
vpsubsb
sub
out
cltd
mov
sti
hlt
xchg
sbb
enter
mov
jp
in
orl
in
xchg
cs
addb
inc
test
jno
dec
mov
cmpsb
xor
aam
popa
mov
rcr
data16
lods
inc
cmp
popa
push
pop
outsl
dec
push
pop
lcall
push
sti
jl
ja
stos
xchg
bound
mov
pop
movsb
repnz
incl
cmp
stos
lock
dec
mov
xchg
mov
stc
mov
xchg
push
clc
sbb
add
fadd
cmp
jecxz
push
test
js
testl
inc
adc
nop
xchg
js
xor
mov
cli
daa
rcrb
fsin
push
test
popa
call
lcall
test
push
and
in
jnp
pop
pop
jle
nop
xchg
mov
or
ljmp
lods
cmp
mull
int
stc
cmp
dec
push
adc
push
push
mov
add
data16
leave
inc
xchg
mov
or
dec
mov
mov
xchg
xor
push
sahf
arpl
stc
xchg
shlb
push
jl
adc
dec
add
inc
mov
and
cmpsl
hlt
mov
dec
loope
xor
addr16
fsubrl
adc
rcrl
jb
test
sub
mov
loope
xor
adc
xchg
neg
test
sub
add
mov
dec
jg
lcall
mov
fnstsw
movsl
lock
fistl
lret
cmp
sub
lret
pusha
stc
and
js
and
fdiv
cs
xchg
test
test
or
popa
pop
xlat
mov
push
mov
hlt
cmpsl
push
call
mov
stc
imul
jmp
push
out
js
xchg
sub
in
dec
mov
push
sub
cmp
roll
std
pop
xchg
sbb
inc
dec
mov
ret
pop
cwtl
sub
jno
push
fsubs
dec
scas
sub
in
ficoml
push
rorl
int3
sarl
clc
mov
cmp
adc
pop
and
push
loop
jne
dec
add
lods
jnp
in
aam
loop
mov
push
pop
and
dec
ljmp
jp
cs
pop
ret
shl
cmpsb
nop
or
and
stos
pushf
dec
dec
and
or
popa
clc
test
loopne
sub
cwtl
fcmovbe
pop
sub
cld
jbe
cmp
adc
adc
jns
cmpsl
jge
js
movd
mov
hlt
mov
xchg
popl
stos
jne
loope
fists
lods
lods
add
jne
add
and
jecxz
add
insb
inc
lods
add
or
mov
mov
pop
add
out
inc
fbld
sahf
outsl
enter
cld
stc
pop
sbb
cmp
call
popa
mov
sbb
aaa
add
mov
daa
cmp
pop
lds
test
js
jg
lods
jne
jbe
ljmp
loope
pop
jp
xor
insl
xchg
push
mov
mov
mov
cmp
je
xlat
pop
pop
ljmp
adc
jne
inc
jl
mov
xchg
js
sub
repnz
test
jp
cmpsb
sti
push
ret
fdivrs
cmpsl
sub
shlb
xlat
pusha
mov
or
fsub
xchg
jl
jl
cmc
ja
mov
push
jmp
pop
dec
push
insl
mov
andb
sub
pop
sub
mov
pop
mov
jnp
sub
xlat
adc
out
in
daa
mov
test
lea
lods
mov
pop
test
movsb
hlt
in
sti
and
lock
imul
ret
mov
cmp
fnsave
push
cmp
jne
rolb
repnz
push
in
push
pop
mov
lret
push
imul
mov
jae
mov
or
jg
stos
cmpsl
imul
jbe
cmc
ja
and
mov
cmp
daa
loopne
lods
std
xchg
in
mov
push
pop
out
scas
movsl
cmp
pop
inc
into
stos
sub
mov
push
stos
mov
dec
inc
and
mov
fsubp
sbb
fs
mov
in
sub
xor
cltd
stos
xchg
ljmp
inc
mov
cltd
daa
jle
imul
sub
or
cmc
push
aas
cmp
js
insl
call
in
in
lods
shrl
into
sbb
hlt
push
movsl
lock
jmp
lret
lret
dec
gs
ss
lock
and
nop
sbb
in
and
ret
imul
out
popl
sti
adc
xor
sub
xor
lahf
loope
test
nop
push
add
and
inc
xor
mov
andb
jg
pop
test
cmpsl
sub
mov
out
int3
faddl
orb
mov
leave
mov
mov
aas
fstl
cmp
pop
divl
call
fstpt
mov
inc
xor
pop
lcall
hlt
stos
test
cwtl
mov
push
pop
jg
dec
sub
cmp
push
lcall
scas
iret
lock
pop
les
xchg
sub
dec
xchg
hlt
adc
and
cmpsl
or
jns
mov
cwtl
dec
inc
pop
push
test
add
cmp
movsb
pop
cmp
and
or
rclb
cld
pop
inc
add
sub
ja
jmp
or
cli
negb
pop
lahf
imul
inc
lods
sbb
cmpsb
cmpsb
ljmp
adc
lahf
mov
inc
int3
cmp
jns
lahf
fdivrl
xchg
mov
sahf
mov
push
cwtl
pop
xor
sbbb
bound
pop
cltd
cmp
mov
mov
cmc
push
push
insb
lret
test
cmp
js
lcall
sbb
sub
xorl
loope
hlt
outsl
das
clc
sub
nop
fnsetpm(287
sub
arpl
mov
sbb
add
sub
cwtl
ret
xlat
jp
xorb
jp
fs
stc
adc
jp
enter
mov
mov
sbb
cld
loopne
mov
decb
adc
test
and
mov
lcall
mov
rclb
into
pop
cmp
ja
insb
dec
loop
and
add
mov
ljmp
xor
sbb
testb
fs
jns
cmc
cs
mov
mov
pop
mov
mov
lret
adc
mov
sub
pusha
lret
push
hlt
mov
dec
dec
loopne
in
push
and
rcrl
movsb
xchg
inc
mov
mov
pop
lret
adc
repnz
and
mov
nop
test
outsl
pop
or
js
and
inc
mov
mov
mov
jo
repnz
hlt
andb
fdivrl
inc
xor
inc
sbb
pop
sbb
xchg
inc
sbb
mov
add
jne
cmp
lea
jns
mov
sub
xchg
and
inc
data16
xor
outsb
pop
xchg
adcb
and
dec
hlt
pop
neg
ljmp
hlt
in
test
test
fcoml
imul
call
adc
mov
mov
out
sub
dec
xor
cli
jmp
mov
stc
je
jno
ja
xchg
scas
sub
pop
test
cmp
lea
mov
mov
dec
add
cmpsb
xchg
mov
mov
movb
int
mov
fisubl
add
or
fscale
and
cmp
jae
out
hlt
or
xor
les
jnp
mov
pushf
push
iret
outsl
and
pop
sbb
scas
mov
sub
out
ret
adc
xchg
jg
and
mov
xchg
mov
pop
xor
in
scas
addl
test
imull
sarl
mov
cld
and
sub
add
jmp
aad
inc
jge
inc
lods
out
sub
out
mov
dec
cmp
nop
mov
mov
imul
rcl
jno
imul
je
jbe
shl
mov
xor
decb
pop
push
fcoms
fbld
dec
pushf
mov
in
adc
hlt
mov
mov
jnp
mov
aam
xchg
add
dec
add
fs
mov
cld
mov
or
jp
push
faddl
push
jns
sub
cmpsb
adc
test
adc
mov
insl
loopne
sub
xor
jbe
enter
in
pop
lahf
sarl
xchg
xor
jo
fnsave
inc
andb
decb
dec
pusha
out
and
mov
sub
dec
cmp
pop
das
adc
lahf
sbbl
pop
jb
push
pop
pushf
jmp
push
inc
cltd
sub
cld
push
lods
orl
push
lods
movsb
push
xchg
cwtl
popa
es
cmpsb
pop
data16
insl
pushf
fnstcw
mov
dec
mov
inc
adc
int3
adc
mov
cs
cmpsb
test
push
cltd
adc
rcr
add
es
xchg
or
fnstsw
sbb
mov
mov
subb
mov
jecxz
lods
sbb
mov
scas
cmc
push
xor
lds
xchg
mov
xchg
fadds
dec
loopne
xor
push
cmc
jnp
ret
and
push
mov
cli
pusha
mov
pop
adc
or
negb
ljmp
in
mov
mov
push
push
insb
jbe
xchg
pop
push
jno
ret
mov
pop
sbb
or
dec
aaa
cwtl
rcr
push
and
inc
ret
inc
and
arpl
jmp
sub
jns
push
in
shll
jp
lock
hlt
das
enter
sbb
add
mov
jne
adc
std
xlat
loopne
enter
mov
dec
inc
pop
mov
push
lock
push
pop
scas
jge
mov
xchg
jg
insb
jns
adc
mov
cmp
dec
lcall
scas
hlt
repnz
jle
mov
xorb
and
cmp
xorl
in
ljmp
cwtl
pop
nop
push
imul
stc
js
lahf
lahf
loope
mov
dec
fcom
adc
xor
jo
mov
out
lock
push
test
lea
xor
je
ljmp
ffree
add
sbb
mov
pop
jle
and
xorb
or
inc
aad
xchg
cs
cli
test
stc
into
loope
data16
insl
add
mov
pop
inc
jmp
inc
mov
andb
jp
sub
or
sbb
mov
inc
daa
popf
call
sti
stos
pop
out
sub
sahf
in
rclb
test
fidivrs
cmc
lcall
cli
xchg
pop
lods
dec
flds
push
test
push
int
scas
jb
aam
mov
cmp
leave
das
test
negb
shl
mov
adc
popa
int
xchg
std
cltd
orb
ss
std
sub
dec
jne
xchg
and
mov
pop
mov
rol
jo
dec
lods
dec
pop
ds
hlt
inc
sbb
ret
mov
sub
stos
dec
cmp
leave
ljmp
fstpl
sbb
icebp
jne
ljmp
jge
pop
sbb
mov
dec
and
rorl
cltd
dec
dec
imulb
arpl
mov
in
or
arpl
out
mov
cwtl
cmc
mov
pop
mov
mov
xorb
push
cli
jae
orb
sti
je
stc
mov
push
call
mov
nop
and
popa
xor
add
dec
mov
insb
sbb
ret
rcrl
or
ja
arpl
jns
in
rolb
add
test
leave
xor
test
movsb
dec
inc
mov
push
xor
pop
inc
mov
or
xchg
enter
mov
inc
hlt
dec
mov
ds
inc
js
mov
sbb
cmp
mov
jno
mov
data16
rclb
mov
in
das
mov
xchg
enter
push
or
je
or
cs
cwtl
jb
push
jnp
fistl
jns
hlt
pop
loope
pushf
jnp
jne
imul
mov
and
hlt
lds
scas
je
mov
sarl
popa
mov
int3
mov
xor
js
cmpsl
ja
mov
int
enter
ja
push
nop
loope
mov
jg
ja
pop
test
jo
movsl
into
push
lock
arpl
loopne
add
cmp
jmp
fstpl
dec
add
int3
mov
notb
in
xorb
mov
push
popf
pop
sub
cmp
in
xchg
sbb
out
loop
test
push
pop
not
mov
mov
lea
stos
mov
roll
push
enter
hlt
mov
out
jg
fildll
sub
stc
inc
mov
outsb
pop
fldcw
scas
mov
adc
inc
dec
mov
add
fsts
test
xor
scas
test
in
jmp
mov
imul
dec
fdiv
test
jns
adc
push
xchg
xorb
sbb
mov
sbb
pop
add
mov
ret
pop
lahf
xor
cmp
repnz
aam
in
pop
cmp
or
mull
inc
les
jne
test
repz
les
dec
push
int3
into
clc
pop
cmp
jae
jmp
movsb
jecxz
shll
jg
shrb
outsb
pop
dec
mov
cli
lods
or
mov
pop
popf
inc
sub
mov
or
sub
jecxz
jecxz
test
jmp
aaa
pop
inc
ja
fisubrs
sub
fildll
stos
leave
add
popf
or
std
jne
arpl
sub
hlt
dec
push
mov
or
addl
ljmp
ffreep
adc
sub
push
mov
scas
fists
shll
push
pop
mov
lods
into
pop
adc
imul
jne
lods
jl
loopne
nop
fwait
aaa
sbb
xchg
arpl
sbb
mov
lods
jp
dec
in
xchg
xlat
or
scas
leave
loop
fbstp
mov
mov
dec
les
and
cmpsl
adc
sbb
out
mov
sub
mov
add
out
jmp
xchg
push
xchg
mov
mov
cs
pop
jns
ret
paddw
pushf
inc
sub
adcl
jno
dec
leave
popw
xlat
push
out
inc
outsl
sub
sub
mov
or
shlb
xchg
add
icebp
inc
or
sub
push
push
inc
mov
jbe
pop
pop
ds
rorb
xchg
or
pusha
xchg
cwtl
aad
mov
fcomi
inc
movsb
loop
xchg
into
push
mov
push
test
insl
push
cmp
cmc
add
cmp
and
out
int
iret
adc
scas
test
adc
bts
xor
pop
push
mov
pop
test
lea
testb
shrb
ljmp
sbb
call
cwtl
sbb
mov
xchg
cmc
adc
sub
push
call
xor
jnp
in
aaa
jne
dec
jge
push
cmp
sbb
pop
xor
aas
fnsave
adc
cmp
xor
jns
inc
dec
pusha
lcall
mov
das
rclb
mov
inc
sbb
sub
xorb
adc
push
xchg
imul
pushf
jno
adc
lea
mov
popa
sub
xchg
rcl
sbb
test
test
mov
mov
add
cmp
pop
mov
dec
jmp
out
int3
fdivs
mov
orl
hlt
and
fdivr
add
jne
mov
test
push
test
mov
cmp
in
dec
insl
mov
cmp
leave
je
cmpsb
fldcw
mov
push
outsb
das
sub
cmp
ficoml
pusha
xor
inc
add
ss
push
and
orl
jbe
ficomps
add
dec
cmc
mov
add
leave
add
push
inc
sub
sahf
dec
xchg
jmp
jecxz
sub
arpl
jmp
mov
jno
sbb
ljmp
inc
outsl
sbb
jne
sbb
xor
je
stos
cltd
mov
frstor
add
mov
pop
sub
stos
adc
jo
fwait
js
adc
and
and
add
adcb
insb
add
stos
mov
cmp
clc
push
sti
ss
lahf
in
dec
outsb
test
inc
stos
mov
fstpl
mov
test
xchg
mov
adc
push
insb
jecxz
adc
pop
cmp
ror
daa
mov
movsl
stos
es
sarb
push
rcll
jmp
jne
and
aam
xor
call
xor
test
ljmp
xchg
cwtl
out
or
out
mov
sti
test
movsb
dec
cmp
push
inc
jg
mov
or
icebp
inc
xchg
xchg
roll
stc
leave
arpl
int
mov
outsb
jne
or
jge
shll
mov
dec
mov
jns
insl
inc
cmpb
stc
mov
mov
aaa
xor
clc
add
xchg
push
lods
add
xchg
cmp
push
mov
cli
ds
pop
loopne
fsubrl
fimuls
push
test
dec
and
fimull
sub
cli
lret
sbb
xchg
push
out
and
jmp
negb
jns
lcall
in
mov
js
pusha
inc
lods
jp
push
movsb
into
sub
pop
add
insl
fsubr
inc
cmpsl
inc
sti
insb
ret
fisubrl
lea
jl
lcall
sub
bound
mov
mov
dec
xor
cmp
mov
inc
in
jne
mov
in
sub
shlb
cmp
xchg
lods
hlt
mov
out
adc
pusha
cld
or
aam
pop
leave
jns
and
push
add
xchg
sub
mov
in
movb
pop
xor
sub
popa
in
push
mov
frstor
aaa
pusha
mov
out
or
xor
ja
mov
pusha
pop
popf
adcl
outsl
cmp
mov
shl
rol
outsb
mov
pop
jbe
jp
lret
aas
mov
cmpb
mov
cmpsb
xchg
test
mov
addr16
loop
jg
cli
lea
decl
or
xlat
mov
sbb
inc
sub
push
lcall
pop
cs
xchg
orb
dec
xor
hlt
or
js
ret
pop
jno
ss
nop
inc
cs
and
enter
pop
int3
sub
aam
fisttpll
int3
xchg
jnp
jne
call
xlat
sti
lock
stos
push
jne
leave
jmp
xchg
and
jmp
repnz
mov
movsl
test
sub
mov
test
inc
adc
mov
test
fcomps
jle
inc
stos
or
aas
xor
nop
mov
cmp
in
test
dec
out
les
stos
lret
inc
repnz
hlt
xchg
xchg
xorb
aaa
adc
jnp
aaa
loopne
cwtl
jl
pop
inc
test
sti
hlt
adc
jmp
loopne
outsl
jne
mov
sub
insl
jle
lahf
jno
mov
dec
jne
pop
xchg
push
je
jno
add
sbb
std
pop
leave
add
pusha
push
mov
pop
shlb
loopne
aas
and
into
das
mov
shll
out
mov
pop
push
xchg
adc
fldcw
in
shl
movsl
xchg
rcrb
movsl
pminub
pop
std
adc
xchg
fldcw
xchg
icebp
in
sub
jnp
mov
adc
js
add
lret
imul
xor
mov
mov
cli
mov
fcoml
cmp
lock
gs
in
mov
lea
sbb
nop
lahf
xchg
inc
test
test
popl
jne
xchg
call
leave
add
adc
rorl
call
inc
mov
fistpl
cmp
cmpsl
xor
push
xchg
incl
push
jp
inc
push
jae
pop
xchg
inc
sub
mov
mov
ds
xchg
xor
jne
lret
mov
mulb
fcompl
mov
xor
fildll
arpl
les
imul
mov
xor
shr
scas
mov
push
sub
divb
xchg
dec
addl
out
test
mov
cld
adc
mov
out
mov
ljmp
ljmp
std
incl
lcall
js
or
ja
aaa
clc
fsubl
mov
xchg
ret
outsb
pop
mov
data16
push
mov
sahf
dec
ss
loop
fisubl
xchg
and
lcall
or
inc
lcall
sub
nop
test
sar
shrb
fcoml
dec
inc
ret
xchg
jp
sub
in
imul
push
test
outsb
push
out
ja,pt
xor
adc
insl
setne
js
sbbw
mov
lret
mov
and
cld
jmp
dec
adc
shlb
jbe
fisttpl
mov
test
dec
mov
aad
mov
into
fldt
pop
pusha
mov
pop
mov
sub
mov
mov
add
fistps
mov
ja
cmp
pusha
in
punpcklbw
or
dec
add
popa
int3
scas
mov
js
enter
lahf
popa
jne
cmp
dec
ret
std
push
adc
jne
cltd
sub
jmp
mov
stos
jecxz
mov
jl
mov
adc
jge
loopne
int3
cwtl
mov
pop
push
push
ds
jmp
add
mov
mov
pusha
push
dec
loope
sub
and
les
add
mov
pusha
mov
hlt
lret
pop
inc
pushf
addl
xchg
test
cmp
test
dec
hlt
sbb
sub
sahf
jae
jns
mov
hlt
loope
pop
mov
push
and
inc
sbb
int3
stos
shlb
icebp
bound
fnstsw
cmpsl
es
inc
out
jns
or
sti
jae
rcll
xchg
push
sbb
clc
mov
sbb
xchg
mov
fmuls
or
shll
mov
pop
cmc
sub
xorl
mov
stos
add
pusha
jp
enter
dec
add
jl
add
mov
mov
dec
push
xlat
jmp
xchg
test
addr16
inc
je
add
jne
stos
stc
lcall
sahf
in
testb
movsl
adc
daa
shr
les
pop
loope
adc
movsl
add
mul
rolb
fst
dec
out
loopne
das
pop
addr16
outsb
and
pop
mov
cmp
in
xlat
adc
cmp
or
sbb
mov
or
cmp
addl
lahf
lret
cld
pop
test
sar
or
sub
adcb
xchg
mov
shlb
lods
jno
dec
dec
rorl
inc
outsl
inc
xor
xor
jl
fsubrs
add
pop
add
mov
or
loop
fsincos
bnd
mov
push
enter
xchg
leave
cwtl
or
imul
jmp
icebp
sub
push
ja
and
scas
pop
and
icebp
jmp
vmxoff
mov
pop
jl
aad
ret
add
mulb
sub
push
sahf
jne
adc
insb
cltd
mov
repz
push
mov
adc
lock
xchg
shlb
aas
mov
fmull
shrb
mov
pop
fildl
add
cmpsb
push
daa
cmpsl
hlt
stos
negl
movsl
adc
outsl
test
mov
xchg
addl
xchg
mov
jb
hlt
sbbl
ljmp
mov
add
pop
or
int3
mov
inc
dec
ja
in
lock
jecxz
test
mov
clc
mov
inc
int3
cs
inc
leave
push
sbb
cli
push
test
inc
jns
fists
inc
mov
pop
mov
push
add
out
sbb
hlt
sub
cld
pop
cmpsl
in
in
lcall
test
jg
scas
mov
sub
div
mov
or
fwait
ss
mov
ret
adc
jne
fidivrs
dec
inc
cld
push
jmp
cwtl
arpl
xchg
insl
das
gs
jge
mov
sbb
mov
int3
sbb
inc
in
test
filds
push
in
mov
inc
add
adc
mov
sar
lea
stos
jbe
pop
test
push
fxch
loop
clc
enter
test
stos
push
hlt
scas
lds
sbb
xchg
addr16
mov
imull
and
gs
add
lret
xor
insb
es
push
cs
mov
test
hlt
or
clc
mov
or
hlt
leave
js,pn
pop
pop
cmpsl
add
loope
push
fs
dec
xchg
xchg
push
mov
mov
push
sub
jno
add
icebp
inc
jne
inc
pop
mov
call
pop
sub
cmp
gs
push
jl
cmp
jb
sub
add
mov
das
shlb
in
adc
into
mov
outsl
mov
lods
or
out
in
mov
mov
push
idivb
jnp
xlat
pop
das
mov
test
mov
xchg
sbb
adcl
or
mov
xor
in
xor
insb
mov
sarb
or
mov
jl
cmp
outsb
neg
fs
fildll
push
out
mov
mov
add
nop
stos
iret
lods
loope
cmp
sub
iret
jne
in
cwtl
xor
daa
xchg
out
mov
and
hlt
fmuls
cmp
jmp
addb
cmc
sub
jg
les
add
or
inc
or
adc
cmp
xor
shlb
jge
clc
inc
dec
in
xchg
sbb
xor
leave
jp
push
enter
adc
fdivrl
idiv
inc
loop
jle
loopne
mov
adc
hlt
xor
lock
jmp
neg
shrl
xchg
test
in
insl
mov
cs
xor
andb
push
adc
enter
and
jne
jle
ficoml
push
jnp
xchg
mov
shlb
cwtl
ljmp
add
lods
cmpsb
hlt
mov
popf
nop
movsl
sub
popl
test
push
adc
rorb
push
mov
push
fistpl
jb
cmpsl
movsl
add
insb
lcall
mov
adc
sbb
add
push
scas
xchg
xchg
push
and
arpl
in
sbb
int3
les
pop
cmp
add
and
push
inc
fdivrs
popf
jmp
pop
adc
mull
negl
bound
push
mov
sub
mov
adc
xor
sbb
mov
cmc
shrl
nop
jns
xchg
lods
pop
mov
insb
pushf
mov
push
xchg
sub
jo
push
sub
mov
loopne
cld
cs
lock
xor
add
test
scas
sub
testb
fcmovu
jle
data16
fdivrp
dec
or
lock
pop
mov
popa
adc
shr
cmpsl
testb
insl
pop
hlt
aas
cmpsb
clc
dec
jmp
pushw
aad
jnp
xlat
mov
lcall
mov
fdivrp
ds
sub
ret
dec
aam
dec
movsb
xchg
push
or
xor
inc
insl
sbb
mov
mov
stos
mov
push
daa
mov
mov
and
stc
xchg
std
aam
movsb
cli
pop
int3
sub
pop
lods
add
add
popa
jg
mov
lods
xchg
push
cmc
pop
push
xorl
sti
test
mov
jg
popf
nop
cmp
mov
test
lods
and
or
test
cwtl
xchg
or
jge
inc
xchg
adc
mov
sbb
clc
dec
stc
dec
insb
int3
les
push
mov
push
sub
adc
xchg
mov
cwtl
hlt
jmp
fnstenv
and
pop
mov
test
loopne
jp
xorl
sti
les
lods
adc
cmpsb
cmp
push
lret
iret
push
cs
mov
dec
insb
int3
mov
bound
sub
push
push
test
mov
add
inc
lahf
mov
inc
lcall
pop
or
hlt
addr16
into
jo
xchg
mov
pop
insl
sub
scas
sarl
or
jne
mov
insl
adc
cmpsb
es
or
adc
xor
hlt
pusha
arpl
stos
and
fwait
mov
sbb
mov
test
mov
adc
sarb
ja
fsubs
mov
xor
xchg
lret
std
push
dec
sub
mov
and
cmp
mov
stos
and
outsb
mov
mov
setne
pusha
mov
int3
pop
sub
std
push
sbb
mov
mov
lds
mov
es
xchg
xchg
roll
lods
sbb
inc
mov
mov
sbb
ljmp
mov
adc
inc
and
popf
and
std
sbb
mov
add
pop
sub
sub
cmp
mov
scas
lods
cmc
fstpt
ds
pop
cmpl
cmc
or
ljmp
sub
jne
sahf
or
push
fdivrs
or
xchg
mov
adc
hlt
enter
xor
pop
cmp
add
and
pop
and
cmp
add
mov
lret
nop
rorl
mov
lods
jb
mov
divl
mov
shrl
stos
aas
push
jmp
cmp
nop
mulb
push
xchg
sahf
pop
and
cmc
test
imul
std
lods
rolb
enter
push
repnz
mov
push
sbb
shlb
aaa
jne
jno
fadd
xor
std
test
jg
adc
hlt
mov
push
aas
mov
mov
jo
in
lea
push
add
inc
scas
ret
jmp
iret
je
mov
jne
dec
stos
pop
fists
cmpsb
xor
ret
push
cli
sub
hlt
cmp
sbb
adc
xor
stc
and
jb
sbb
pusha
in
jp
push
cli
loopne
pop
ret
xlat
sub
call
add
xor
cmp
lock
push
lcall
hlt
xchg
mov
js
or
out
mov
or
lods
mov
pop
mov
adc
sub
push
inc
mov
hlt
cs
in
aaa
lahf
xlat
in
or
adc
lods
not
push
stos
dec
inc
cmp
fidivrl
mov
push
je
test
inc
xor
int3
mov
and
and
ret
decb
mov
mov
popf
add
pop
cs
push
test
adc
sub
sbb
test
jp
mov
loop
leave
repnz
loopne
test
push
lods
in
push
pusha
cmp
loop
test
mov
xchg
in
test
lock
xchg
dec
repnz
out
subb
sbb
shl
stos
jnp
imul
std
adc
arpl
jle
fstpt
push
push
xchg
fldenv
mov
mov
shlb
sti
push
int3
xor
icebp
add
pop
cltd
adc
lods
mov
or
inc
in
jle
addl
std
push
adc
int
add
roll
cmpsb
aas
sahf
mov
and
push
pop
xchg
jb
scas
fisubl
pusha
jmp
gs
lahf
clc
ss
mov
add
mov
lds
mov
das
mov
add
push
xchg
arpl
scas
notl
adc
stos
jns
push
xchg
cmc
aaa
or
pusha
dec
jne
scas
stos
sti
insl
cs
fdivl
popf
daa
test
loop
repnz
mov
stos
jne
adc
jns
mov
fisttpll
hlt
and
and
stos
sahf
mov
and
inc
loope
xchg
popf
stos
or
inc
jnp
clc
pop
jp
jns
std
fiadds
mov
jo
mov
js
test
stos
test
lods
cs
out
or
jle
add
sub
and
sub
jb
xor
mov
add
jnp
pop
enter
xor
in
mov
stos
jae
pushf
insb
pushf
cmp
or
jno
inc
xor
jae
and
mov
and
je
jg
hlt
or
mov
jne
adcl
es
mov
cmp
test
jnp
mov
sub
ss
jae
in
test
sti
jmp
xchg
icebp
cmpsl
cmp
lods
pop
xchg
add
sbb
mov
shlb
mov
mov
sub
mov
icebp
or
or
cmc
outsl
iret
lret
jg
shl
rorb
lret
std
test
pop
adc
inc
jecxz
jnp
mov
dec
jle
jge
mov
mov
repnz
jae
loope
enter
imul
sbb
test
push
cli
push
sbb
stc
xchg
fst
shr
mov
int
stc
pop
or
aad
push
xchg
pop
adc
inc
jno
lcall
xorb
and
testl
mov
fists
push
push
loopne
out
dec
loop
dec
enter
arpl
or
xchg
jle
dec
outsb
inc
xorl
mov
dec
jns
out
call
inc
es
dec
jno
out
gs
es
add
pop
outsl
sub
xor
xor
mov
std
sbb
cmpsl
int3
popa
rcl
or
mov
outsb
pop
das
dec
orb
xchg
pusha
mov
lahf
test
repnz
subl
adc
stos
std
and
push
xor
cmpsb
add
pushf
hlt
mov
lds
inc
push
mov
dec
jge
clc
iret
insb
sub
gs
mov
mov
cmc
ja
push
xchg
mov
add
inc
cmpsb
mov
push
imul
cltd
push
push
push
out
or
ja
xchg
frstor
movsl
jge
lock
push
push
jns
orl
dec
maskmovq
xchg
jae
cmc
outsl
cmp
mov
in
cmpsb
pushl
cmp
jne
mov
mov
aam
xchg
adc
and
pushf
add
hlt
dec
fistps
push
jg
and
hlt
mov
lea
pusha
add
pop
ss
add
ret
mov
adc
cld
loop
add
sbb
xchg
mov
daa
lahf
xlat
ret
mulb
mov
xor
inc
jl
aam
inc
test
pop
test
adc
jno
repnz
icebp
dec
inc
mov
mov
pop
cmp
les
mov
dec
pop
dec
test
aaa
imul
jg
sub
lret
add
xchg
enter
jne
in
xchg
mov
lea
das
xor
jo
dec
aas
xlat
add
hlt
lods
dec
notl
pop
and
loop
repnz
movsl
scas
enter
daa
push
mov
dec
xchg
mov
mov
push
not
loop
inc
xchg
cmp
test
sbb
lcall
push
loope
jno
scas
fimull
in
inc
xlat
inc
push
sub
insl
jp
rcr
push
jmp
dec
mov
pop
pushf
rcrb
rep
sub
fstl
adc
idivb
mov
or
mov
shr
lods
stos
push
lret
mov
test
jl
sbb
dec
sahf
mov
pop
mov
and
fsubs
addr16
sub
repz
aas
xchg
jge
pop
test
inc
push
jb
and
mov
pop
fiadds
mov
jge
mov
daa
int3
mov
out
ja
mov
sub
or
pusha
scas
ljmp
fdivl
inc
pusha
mov
pop
sbb
jp
jecxz
dec
orb
jecxz
dec
add
dec
aad
rcr
cs
mov
or
mov
cwtl
in
stos
add
jle
nop
push
cs
mov
dec
insl
scas
cmpsb
jnp
add
lock
or
enter
sub
mov
add
inc
mov
jns
dec
cmpsb
jl
cmp
clc
inc
shrl
in
mov
xchg
pop
popa
into
cwtl
adc
and
cmp
push
aad
dec
imul
mov
notb
xchg
call
stos
es
into
enter
mov
mov
mov
mov
cmp
cli
cmp
shll
cld
aas
xor
dec
in
orl
inc
mov
addr16
mov
scas
inc
dec
mov
jnp
pop
cmp
cmpsl
cmpb
pminub
push
out
xlat
sahf
imul
sti
jg
jmp
loopne
subb
mov
mov
xor
lcall
push
cli
js
fistl
jle
xchg
test
hlt
xor
xchg
mov
repnz
sub
pop
adc
cltd
testb
fimuls
xor
je
xchg
out
push
jle
add
inc
push
push
outsl
les
adc
cmp
mov
xchg
push
enter
les
andb
cli
sti
mov
fcompl
pop
xchg
lret
flds
cld
push
jecxz
mov
inc
ja
je
orl
lock
sbb
mov
mov
dec
movsb
cmp
jae
pop
call
inc
cmp
es
fdivrl
in
ljmp
xchg
add
jns
shll
pusha
mov
mov
movsl
repnz
mov
inc
leave
in
lahf
test
hlt
pop
sar
or
testb
hlt
pop
ret
pusha
mov
cwtl
mov
push
add
ja
adc
dec
cmp
pusha
leave
dec
fisubs
push
sbb
sub
add
or
add
fisubrl
movsb
mov
mov
mov
adc
mov
sub
sbb
lret
jo
xorb
es
inc
cmpsb
inc
loope
jno
outsl
sub
dec
push
jge
xorb
out
push
xchg
add
cwtl
pop
dec
out
dec
jmp
dec
stos
sti
imul
cmp
call
arpl
stc
in
test
xor
add
ret
lods
stos
aad
pop
push
das
sub
jnp
in
stos
xchg
jecxz
outsl
and
int3
filds
rcrl
push
jno
jo
add
out
test
and
inc
mov
lcall
leave
lahf
in
sti
cmpsl
pop
xchg
xchg
hlt
push
roll
loope
cld
and
test
jne
adc
decl
xor
test
mov
sar
into
dec
jl
stos
mov
jmp
repnz
data16
fistpll
mov
and
scas
mov
lods
loop
fcoml
sti
ljmp
pop
jecxz
dec
mov
mov
testb
test
gs
popa
pop
adc
cmc
push
mov
xchg
jb
idiv
pusha
sbb
subl
shl
repnz
addb
fiaddl
in
dec
stc
inc
push
mov
lods
push
int3
push
jle
mov
adc
inc
xchg
push
xchg
add
pop
cmpsl
add
xchg
dec
add
inc
push
xorb
jmp
repnz
lds
mov
mov
xchg
cld
test
rorl
jnp
fstl
sbb
andb
mov
les
pop
lea
js
and
add
leave
data16
or
lcall
add
ja
mov
testl
jns
mov
jmp
lret
jnp
push
divl
add
sbb
xchg
fbld
ficoms
sub
push
idivl
aad
cmpsb
pop
cmp
pop
mov
adc
fcompl
mov
lods
test
stos
xchg
jne
stos
jecxz
pop
and
jns
xchg
mov
and
push
and
xlat
clc
subl
iret
cwtl
pop
jne
in
sub
push
test
cmp
dec
xchg
cmpsl
mov
mov
pop
mov
addr16
sti
inc
or
int3
jle
popf
cmpsl
std
xchg
push
push
sar
pop
sti
cmpb
aam
loopne
mov
int3
add
enter
imul
or
pop
sub
sub
sbb
pop
sub
adc
int
hlt
cld
mov
pop
push
mov
mov
fabs
stos
sub
inc
jno
mov
and
mov
or
jno
mov
xchg
inc
inc
mov
jl
movsb
ret
clc
lahf
fcoms
mov
mov
stc
fimuls
mov
pop
fsubrs
outsl
mov
lea
movl
sbb
lods
jecxz
sub
popf
add
pop
cmp
and
dec
rcll
fiaddl
jp
cmp
shl
iret
mov
sub
xorl
add
or
mov
pop
sbb
sbb
jmp
mov
popa
push
outsl
push
jmp
pop
hlt
inc
rcrl
push
scas
ja
in
jae
push
cmc
xchg
cli
enter
sub
lods
loope
pop
sti
ret
xlat
enter
sub
xchg
dec
shrb
sarl
ficomps
and
incb
in
adc
mov
pop
dec
xor
int
and
adc
ljmp
mov
or
xchg
leave
jl
cmp
dec
pop
mov
or
mov
sub
push
jp
scas
and
mov
pop
jle
mov
dec
mov
stos
hlt
and
std
xor
jb
leave
lcall
hlt
xchg
test
jge
push
repz
popa
in
cmp
enter
pop
icebp
add
mov
stc
pop
inc
stos
movsl
or
mov
in
into
cs
cmp
enter
dec
cmp
je
pop
push
jno
ljmp
dec
clc
fcmove
push
nop
stc
xor
xchg
jns
cltd
scas
dec
fisttpll
icebp
psubq
adc
fwait
pop
cmp
mov
in
adcl
adc
or
cmp
outsl
add
cmpsb
sub
shr
pop
data16
adc
insb
ss
xrelease
insb
leave
push
stc
xchg
sahf
out
repnz
cmp
add
cmpsb
jl
lahf
mov
hlt
sub
int3
inc
lcall
call
push
jne
push
mov
jge
arpl
pop
jns
loop
dec
mov
arpl
movsb
imul
sti
xor
icebp
cmp
jge
push
data16
scas
xchg
and
jbe
hlt
lock
test
cmp
subb
test
xchg
fsubrs
jge
xlat
adc
cmc
int3
xchg
repnz
in
xor
inc
shrb
push
mov
lock
add
cwtl
std
xchg
movsl
dec
jmp
enter
fisttps
add
inc
addl
in
push
add
int3
mov
loopne
lods
fdivrl
cli
fmull
mov
loopne
pop
loopne
inc
push
xor
dec
dec
scas
loop
xor
jns
mov
sub
adc
or
xchg
shl
ljmp
aam
movsb
loope,pt
adc
gs
sub
inc
mov
data16
mov
cmp
lods
or
jmp
xchg
sarl
sbb
pop
in
not
push
fxch
adc
xchg
add
dec
adc
add
into
and
pop
inc
mov
mov
cltd
xchg
leave
adc
clc
pop
or
dec
scas
testl
ret
mov
mov
aam
loop
cs
mov
arpl
mov
or
leave
pusha
xchg
mov
or
fs
out
dec
movsl
xlat
adc
or
inc
mov
stc
in
push
mov
pop
jle
pop
rol
pop
sub
jne
leave
and
es
sub
sbb
ret
push
sub
fcompl
fs
dec
popa
cmc
repz
pop
in
enter
or
sbb
pop
cmpl
out
dec
pusha
fidivl
mov
sbb
ds
push
cs
jmp
andl
mov
lret
hlt
cld
lods
dec
mov
pop
or
hlt
sub
popa
sbb
xchg
inc
jne
pop
jns
addl
xorb
push
cs
bound
push
aad
fldl2e
xor
add
pop
hlt
in
lods
out
fmuls
jmp
mov
imul
stos
mov
push
repz
imull
xor
fistl
or
pop
jns
xor
loopne
sbb
push
hlt
or
jo,pt
insb
jp
icebp
mov
je
and
arpl
ss
lds
cwtl
sub
sbb
outsl
in
dec
into
dec
jo
add
dec
dec
enter
sub
mov
repnz
xor
loopne
mov
mov
cmp
nop
call
mov
dec
stos
in
xor
out
push
lock
cmpsl
jne
xchg
jge
mov
iret
adc
ja
test
mov
ret
lock
sbbl
shlb
mov
jl
add
mov
push
add
xor
sbb
push
fnsave
out
pushf
inc
cwtl
hlt
sub
popf
mov
in
fsubrp
out
int3
push
movsl
incb
aam
mov
push
and
or
arpl
popa
sbb
cld
jnp
cmp
or
sub
loopne
hlt
push
rcrb
cmpsb
jno
ret
les
pusha
jb
mull
jmp
testl
lcall
jae
rol
outsb
int3
push
pop
jmp
jne
sbb
jae
out
js
incb
stos
inc
mov
pop
nop
sbb
les
movsl
mov
fs
fsubl
xor
push
loopne
in
mov
and
sar
push
cli
add
bound
test
sub
bound
pop
incl
cmp
and
pushf
jns
leave
ljmp
fs
jbe
popf
rolb
jmp
jle
cmp
pop
sbbb
push
cmp
cs
add
inc
cmpsl
into
pop
in
lods
stc
xlat
add
iret
hlt
xor
cmc
sub
call
cmp
xchg
mov
sub
push
sub
jl
cld
cli
xchg
adc
jge
ss
icebp
hlt
cmpsl
scas
jae
add
cltd
sar
inc
mov
nop
push
jecxz
dec
xchg
aam
mov
popf
movb
lcall
adc
xor
movsb
pop
test
add
aaa
fcomps
int3
movsb
sti
jmp
mov
mov
orl
loopne
add
pop
lods
xchg
add
arpl
xchg
jecxz
mov
xor
mov
sbb
scas
in
pushf
push
pusha
shr
cmp
shrb
add
mov
adc
push
imul
icebp
lods
mov
cltd
sahf
push
js
popf
jl
fsubp
lods
fists
sub
test
mov
mov
sbb
add
inc
sbb
jnp
int
dec
pop
lods
ret
fsubr
pusha
lock
sub
inc
jae
lcall
pushf
pushf
test
sahf
xor
mov
xor
outsb
xchg
movsb
mov
aas
lods
fsts
push
stos
sti
or
jno
adc
push
cs
aas
mov
or
lret
xrelease
arpl
lods
jno
dec
jle
inc
hlt
pop
in
les
movsb
xchg
rcrb
aad
inc
orl
lods
inc
andb
bnd
or
frstor
rorb
jp
std
fdivl
loopne
cmp
subb
mov
pop
jbe
xchg
inc
pop
inc
enter
sbb
fstl
xchg
mov
popf
in
jo
ficoml
mov
subl
add
mov
dec
mov
sti
adc
fcmovnbe
mov
sub
jle
fucomi
pop
repz
call
test
cmp
or
jp
pop
push
loope
add
push
xor
and
insl
jne
lahf
rcrl
mov
adc
pusha
fnstcw
pushf
add
sub
add
jl
into
insl
movsb
xor
mov
fdivrl
push
xchg
and
or
and
enter
andl
scas
cld
fisubs
out
enter
out
add
leave
cld
or
jbe
in
ret
push
aas
cmpsl
lcall
cwtl
ret
pusha
sub
pop
outsl
popf
into
mov
aas
lcall
sbb
xchg
std
imul
jmp
sub
divb
inc
and
and
adc
push
mov
adc
add
mov
pop
sub
dec
andb
pop
ljmp
jae
in
loope
into
int3
enter
or
push
mov
and
push
xchg
sub
scas
shlb
or
stos
rcll
cli
mov
nop
ret
andl
mov
push
inc
jne
adc
push
sbb
push
fstpl
ja
mov
fmull
in
jbe
fs
fldt
mov
jae
adc
add
sbb
push
out
cmpsl
mov
jle,pt
mov
cmovns
rolb
lret
xor
dec
cmp
jg
pop
fs
scas
cld
cmp
jl
nop
xchg
and
popf
pop
add
nop
das
jae
push
aad
xchg
sti
jns
push
xor
inc
xchg
imulb
push
or
loopne
inc
lret
fnsave
or
cmc
shll
lds
mov
pop
rcll
aas
scas
mov
add
dec
xor
mov
into
call
cmp
mov
pusha
test
incb
inc
stos
mov
mov
fs
mov
inc
jle
push
testb
in
cld
jl
movsl
jle
cmpsb
in
or
sbb
xchg
les
add
out
add
icebp
sbb
sub
test
nop
mov
arpl
dec
es
cmc
daa
ficoms
mov
and
mov
jno
mov
sahf
enter
jno
add
test
xor
mov
fbstp
sub
addb
idivl
shrl
dec
cwtl
hlt
sbb
cld
jnp
mov
gs
sti
repnz
scas
out
popa
jmp
test
inc
add
nop
pusha
das
pop
jnp
fisubrs
cmp
mov
pop
xor
jl
sbb
das
shrb
ds
dec
shlb
mov
sub
pop
push
fwait
movsl
arpl
addl
fs
mov
dec
jbe
xchg
xor
pop
call
inc
cltd
adc
or
and
stos
in
loop
lcall
push
push
dec
push
push
add
int3
fiaddl
jbe
xchg
cld
sub
movsl
cwtl
fdivs
addr16
mov
aam
dec
mov
sub
sub
push
enter
xor
mov
hlt
scas
loope
stos
jmp
sub
mov
popf
mov
jae
dec
add
push
movsb
jno
int3
and
xor
lahf
jge
adc
std
push
jge
dec
sbb
dec
pushf
lcall
out
jle
ja,pt
test
mov
cld
xchg
test
jne
dec
loope
sub
call
fsubs
jnp
out
push
jmp
loope
push
lock
sbb
ljmp
mov
ljmp
pop
sbb
mov
cmp
stos
jl
mov
mov
imul
and
popf
sub
inc
inc
hlt
mov
ja
sbb
mov
sahf
add
xchg
enter
jmp
pushf
pop
cmp
xor
jl
cmp
push
pop
mov
popf
pop
dec
inc
dec
outsl
gs
fists
sbb
popf
mov
mov
aad
out
mov
lahf
push
xchg
loope
pusha
push
shlb
sub
inc
es
mov
popf
jne
pop
jnp
cwtl
cmp
repnz
jl
out
push
fs
sub
out
sbb
sub
in
nop
jo
stos
loop
mov
push
mov
lahf
mov
adc
cmc
das
xlat
stos
xor
jbe
jl
outsl
outsb
clc
adc
ficomps
sub
inc
leave
test
es
pop
xor
cmp
and
mov
addb
jmp
nop
inc
pop
out
aam
sbb
jns
pop
cli
and
jnp
hlt
movsb
cmpsl
ss
mov
daa
sbb
add
pop
xchg
in
mov
dec
das
cs
adc
xchg
subb
rorb
ja
mov
test
xchg
filds
mov
pop
add
push
inc
lods
fidivrl
cwtl
loope
into
pushf
and
hlt
fsubl
lds
add
inc
rol
mov
jmp
std
mov
cmp
push
or
sbb
cld
int3
std
cltd
ja
aas
mov
sub
xchg
fisubrl
add
sar
ljmp
pop
xchg
xor
movsl
pop
stos
xchg
test
pop
xor
xor
push
imul
push
pusha
push
lahf
or
jg
xchg
test
les
pop
in
mov
movsb
mov
mov
lock
jo
mov
cmp
popa
cltd
xor
dec
or
sub
jne
call
add
aam
inc
outsb
shrl
popa
ss
xchg
leave
sub
cs
lods
fcompl
and
sahf
jmp
sbb
add
fcmovne
lahf
push
outsb
push
cmp
inc
fldl
or
cmp
inc
or
scas
cli
cmpsl
loope
movsl
or
jge
inc
xchg
or
sub
and
ss
jnp
cmp
xor
nop
int
rcl
jmp
aas
int
mov
adc
stos
in
mov
inc
push
aad
jbe
and
bound
mov
jne
add
movsl
hlt
shr
fiadds
lret
dec
mov
inc
sub
addr16
dec
inc
lret
cmp
cmpb
ljmp
fisttps
xchg
mov
xor
ret
mov
shrl
sub
out
push
mov
adc
dec
cmp
in
xor
xor
addl
hlt
pushw
jnp
in
mov
insl
pop
lret
jge
jb
lods
dec
adc
lock
lret
test
cmp
add
lahf
negl
mov
pop
data16
jl
xor
orb
ss
add
push
fldt
outsl
pop
loop
aad
jbe
pop
sahf
dec
neg
pop
adc
mov
push
mov
or
sbbb
pop
jne
adc
jge
stc
pop
push
outsl
lods
enter
jno
xor
and
or
cli
rorl
ret
jle
rep
xchg
in
addr16
sbb
es
enter
push
push
push
jecxz
xchg
or
mov
and
mov
inc
cmp
sbb
jae
test
xorb
cmc
or
inc
mov
shlb
es
mov
xorb
pop
pop
into
mov
repnz
push
popa
into
adc
movsl
pushf
and
mov
inc
jle
test
cltd
enter
mov
daa
aad
dec
lahf
adc
xor
enter
sbb
adc
mov
mov
popf
popa
test
mov
mov
xor
int3
push
jnp
insb
test
jge
hlt
adc
movsb
sub
lret
sbb
insl
les
insb
lea
mov
push
lods
inc
push
and
test
add
scas
addr16
cmpsb
sub
sti
imul
outsb
jmp
xchg
cli
adc
fcompl
dec
adc
ret
or
push
rclb
in
ss
in
or
and
outsl
push
mov
mov
out
cs
data16
andb
cmp
adc
cwtl
jb
outsl
clc
rolb
rcll
mov
inc
insb
xor
cli
andb
pop
ficompl
into
out
jl
sub
fwait
andl
xchg
mov
xor
pop
or
inc
and
dec
jecxz
icebp
movsl
sub
sahf
mov
jnp
sub
subb
les
jmp
xor
pop
cmc
sbb
mov
sub
mov
jg
fisttpll
jg
rorl
xchg
cmp
add
mov
sub
outsl
out
scas
xorb
out
mov
or
push
xchg
cwtl
sbb
push
iret
mov
stos
jecxz
mov
out
test
test
mov
sub
adcb
cs
dec
daa
xorl
and
dec
cmpsl
and
sub
arpl
test
ds
out
cmp
stc
dec
into
movsb
adc
add
jae
pop
add
pusha
outsb
lock
xor
test
fadds
inc
adc
pop
scas
jmp
lods
mov
xor
mov
pop
loope
icebp
jl
rolb
jo
gs
stos
mov
jnp
inc
out
inc
in
sti
insb
pop
jle
xchg
jo
xchg
push
aas
sub
and
cmp
pop
enter
xchg
repz
add
lea
scas
jnp
mov
mov
popf
movsb
or
shlb
std
jo
jle
dec
mov
nop
jne
xchg
ret
and
stos
pop
hlt
movsl
daa
fstpl
xchg
lea
inc
mov
mov
hlt
adc
cltd
add
jne
insb
std
inc
in
lcall
les
pop
inc
mov
subl
xor
pop
out
in
ret
fwait
sar
jecxz
xchg
xchg
pmuludq
test
jb
clc
jp
fdivr
cli
test
jle
mov
sub
js
xlat
mov
cmpsl
mov
add
je
push
into
cmc
out
mov
scas
aad
mov
pop
pop
push
cwtl
imul
jg
test
hlt
pop
push
shlb
shlb
add
jl
test
dec
cld
xor
mov
shll
sahf
add
pop
xor
and
jae
icebp
inc
imul
jne
outsb
cld
mov
and
sub
js
mov
scas
dec
add
lock
pusha
adc
pop
xor
aas
loopne
jne
mov
dec
fcmovnu
gs
into
sarb
dec
pushf
jne
adc
stc
loop
scas
mov
xlat
jle
out
sub
push
add
nop
xchg
outsl
pop
imul
mov
mov
pusha
mov
adc
mov
test
out
add
int3
rcr
pop
es
xchg
jg
inc
mov
test
scas
lcall
lahf
mov
pop
and
andl
and
hlt
cmpsl
iret
mov
xchg
aad
adc
shr
lcall
mov
add
push
pop
cmp
faddl
hlt
sub
jae
lods
filds
mov
popw
add
or
add
lcall
jns
scas
sti
inc
mov
pusha
sbb
stos
cld
fwait
lods
sbb
xchg
out
pop
test
pusha
lret
xor
xchg
xchg
push
dec
mov
lods
mov
hlt
sti
mov
sbb
hlt
mov
adc
stc
clc
loope
jne
push
xchg
imul
lods
pop
fdivrl
jnp
jbe
shrb
mov
out
and
mov
pop
jne
cmpsl
adc
ja
popf
mov
int3
aad
and
jmp
mov
insl
xor
mov
push
jne
mov
pop
mov
pop
cwtl
loop
xor
pushf
cmc
jl
cmpb
es
push
mov
lds
push
jne
mov
xor
out
imulb
mov
cmp
xor
lcall
jo
jmp
stc
push
fs
xor
andb
jg
mov
cwtl
mov
fmull
dec
shlb
inc
lods
sbb
add
out
in
loope
aam
hlt
ss
push
int3
sub
pop
pop
in
loopne
jmp
push
inc
hlt
mov
jecxz
call
std
xor
jae
imul
cwtl
sbb
mov
jns
test
sbb
or
in
rcrl
push
xor
rcrb
mov
sbb
adc
adc
fs
sub
sbb
insb
cmc
test
and
not
cld
addb
das
movsl
mov
mov
ds
jle
xor
sbb
pop
repz
mov
push
ja
adc
mov
xchg
jns
cwtl
sbb
and
std
jge
hlt
jo
lock
jnp
lods
jle
cmp
sbbl
mov
jnp
lahf
pop
cmp
cmc
mov
in
test
mov
hlt
shll
xchg
arpl
scas
addr16
pop
xor
push
jne
jecxz
cmp
dec
sub
mov
and
cwtl
inc
dec
add
mov
pop
mov
jne
testl
shrb
int3
mov
dec
inc
jnp
js
push
or
pop
sub
adc
or
dec
test
mov
bound
mov
mov
jecxz,pt
lock
cmp
mov
adc
mov
add
loopne
bnd
nop
or
leave
sarl
jle
cltd
push
pushf
mov
and
leave
sbb
lock
stos
lahf
cld
inc
add
adc
inc
fs
imul
mov
push
push
incb
cmp
aam
cmp
dec
leave
cli
fldlg2
push
mov
fisubrl
push
notb
sbb
addl
lds
xor
in
inc
or
rcrb
dec
mov
xchg
xor
pop
insl
jns
mov
inc
adc
and
test
repz
adc
mov
icebp
push
fidivrs
push
xor
mov
pop
rolb
jns
push
test
stc
add
stos
jne
bound
pop
stc
insb
sub
inc
adc
dec
and
test
lcall
test
les
mov
mov
test
ficompl
add
mov
int3
enter
das
std
cmp
push
sub
and
lret
hlt
popa
ss
sub
sub
sub
loope
push
daa
outsl
stos
loope
and
ljmp
add
out
sbb
lcall
test
fwait
js
xchg
cwtl
pop
adc
mov
cld
add
mov
and
and
jns
enter
jbe
in
mov
inc
cmp
jmp
jmp
decb
dec
push
jnp
push
test
bound
sub
leave
lods
icebp
mov
jg
cmc
out
mov
push
sub
js
shlb
nop
lret
and
or
or
jae
xorl
mov
cmp
dec
enter
lcall
mov
cmc
js
add
ljmp
cmp
sbb
das
enter
test
inc
cwtl
mov
dec
mov
xchg
pop
dec
sub
jle
das
sbb
das
mov
mov
inc
xlat
fcoml
jb
add
or
leave
test
or
and
scas
repnz
mov
jmp
xchg
inc
std
push
cmp
and
adc
push
pop
cwtl
pop
hlt
punpckhbw
sahf
les
int3
test
mov
fisubl
xor
cmpl
sub
adc
inc
sbb
hlt
push
leave
fwait
dec
dec
jnp
jp
sbb
lret
pop
push
mov
inc
dec
sahf
mov
dec
xchg
icebp
hlt
dec
out
div
into
push
adc
jns
dec
adc
sarb
xchg
fstpt
mov
jo
imul
out
add
mov
iret
ljmp
notb
push
cmc
stos
fcmovnb
jno
sahf
cld
mov
dec
push
out
xlat
jge
jns
or
mov
mov
cmpsb
or
fimuls
orb
sti
out
mov
nop
hlt
push
sub
fucomi
xor
mov
fcmovbe
rorb
inc
xchg
sbb
fs
int
jne
dec
xchg
jg
fisttpl
inc
out
jo
sbb
xchg
mov
adc
popa
and
std
adc
push
jne
jle
mov
pop
popf
or
icebp
out
int3
fcomps
push
lret
repnz
loopne
fcompl
shl
hlt
imul
mov
mov
in
lods
enter
int
test
rcrb
sbb
fldcw
es
popf
cld
push
fs
fsubl
lock
ret
pusha
addl
fwait
push
jmp
adc
jns
sbb
mov
xchg
jge
insb
or
jne
int
sub
sub
lcall
dec
bound
enter
outsl
test
lock
fwait
adc
jne
outsb
add
aad
cmpsl
std
cli
inc
inc
fisubrl
testb
gs
sahf
fstps
xchg
or
addl
jnp
adc
dec
out
dec
cmp
mov
test
xchg
loope
cmpl
fisttpll
out
ror
je
inc
gs
jne
pop
cld
nop
add
cmp
push
les
xchg
xchg
and
mov
repnz
aam
push
hlt
cmp
and
sti
std
cmpsb
lcall
lods
push
or
cld
scas
shlb
rorb
loop
xlat
xchg
mov
dec
call
clc
mov
rorl
addl
mov
push
sbb
mov
popf
adc
xchg
jae
sbb
es
mov
push
mov
pop
cmpsb
jne
mov
push
enter
dec
std
and
xchg
push
icebp
cwtl
test
and
add
add
mov
imul
mov
cmpsl
stos
jg
lock
cmc
jb
mov
push
mov
mov
mov
rorl
pop
outsb
aas
mov
inc
pusha
sti
jle
sub
mov
testl
mov
in
in
test
neg
test
pop
pop
gs
add
mov
jne
xchg
push
mov
insl
or
jge
arpl
insb
mov
cmpsb
inc
jne
sbb
add
das
pop
lea
mov
movsb
xor
pop
xorl
je
mov
jecxz
stc
clc
pop
adc
dec
sub
orl
aas
lret
inc
lods
xchg
jge
out
call
test
jne,pt
pop
xchg
push
jg
mov
sub
jmp
pop
fimuls
and
mov
sub
mov
xor
mov
test
cli
cld
xorl
movsl
adcb
sarb
in
pop
cmp
popa
call
mov
ds
push
mov
inc
lcall
in
leave
push
int3
lea
mov
adcl
shrl
sub
push
test
dec
pop
pop
add
lock
shlb
test
pop
xchg
dec
hlt
mov
push
jl
insb
inc
lods
sub
ret
mov
and
cwtl
aas
hlt
in
mov
mov
or
pop
jl
icebp
cmpsb
rorl
fdiv
ja
dec
jle
xchg
push
adc
sbb
popf
fisttpll
jne
sub
movsl
das
shlb
ja
mov
mov
cltd
shrl
sti
push
lds
mov
inc
pop
in
jns
sub
lret
xchg
lcall
and
adc
pop
jmp
push
inc
dec
pop
push
lds
xor
divb
xor
nop
mov
lds
dec
cmpsl
in
pop
xchg
add
es
repz
repnz
pop
lret
out
jo
lret
pop
shlb
pop
popl
stos
jne
mov
popf
fdivrl
add
ret
jg
jmp
add
mov
jne
mov
add
lcall
inc
mov
push
inc
dec
aam
inc
mov
jge
push
js
lahf
push
or
sub
mov
add
xchg
sahf
stos
pop
push
xor
xchg
push
dec
mov
jmp
jmp
and
pop
int3
rorl
fmull
les
ds
jno
mov
lds
sub
mov
dec
out
inc
fldl
faddl
les
jne
pop
sub
push
outsb
enter
add
mov
cmp
loope
rolb
jne
cmp
scas
jmp
push
loope
rcrb
push
sub
popf
adc
cs
scas
and
mov
lret
add
xor
arpl
into
and
cs
jl
test
pop
loop
movsb
cmpsl
mov
imul
scas
or
mov
stc
cmp
enter
shll
jl
adc
lcall
inc
fdivrp
sub
adc
mov
mov
mov
adc
jle
negl
adc
add
sbb
pop
sbb
jo
cmp
mov
sbb
jge
aad
lahf
cmp
mov
mov
jnp
xchg
push
test
scas
out
sub
adc
rolb
in
sahf
cmpsl
ret
pop
sbb
aad
jne
inc
adc
xchg
addr16
outsl
mov
hlt
test
inc
sub
pop
mov
adc
inc
rclb
inc
sub
fadds
dec
loop
js
dec
jl
inc
sub
add
jne
test
fcmovbe
xchg
mov
jl
adc
aad
cmc
addr16
or
js
ljmp
push
add
shlb
jge
stc
orb
xchg
pusha
push
lods
add
jge
pop
mov
xchg
lret
mov
out
push
mov
push
loop
fists
inc
test
fbld
sti
call
leave
in
push
sub
push
add
icebp
pop
addb
stc
cmc
sar
mov
dec
dec
jne
sub
mov
fildll
push
push
ret
and
ficomps
push
mov
js
jne
aas
jnp
repnz
jno
enter
scas
mov
stos
push
mov
xchg
ror
xchg
jns
mov
fsubrl
lock
js
nop
jg
ja
pop
das
mov
jecxz
mov
shl
lods
hlt
das
test
sbb
mov
pop
mov
jo
adc
dec
jge
push
mov
clc
inc
mov
aam
xchg
add
xor
insl
mov
xlat
pop
pop
arpl
push
insl
sbbb
hlt
and
hlt
mov
jg
dec
adc
xor
repnz
sbb
or
das
lea
fucomi
cmp
push
mov
lcall
fmuls
out
cmc
cli
add
stos
out
mov
test
roll
iret
popa
lcall
inc
or
movsl
cli
daa
add
push
movsb
subb
jo
mov
addl
jle
xor
mov
pop
divb
lret
insb
int3
out
loop
ffreep
mov
ret
push
xor
sub
lahf
jno
lahf
jl
pop
cltd
or
pop
sti
mov
dec
hlt
push
shlb
mov
cmp
clc
frstor
xchg
inc
xchg
push
jmp
ret
addb
sbb
cmc
jb
adc
aas
arpl
xorl
pop
or
xchg
push
call
lret
pop
in
inc
adc
cmp
repnz
and
adc
test
jl
xor
xor
js
xor
call
mov
out
mov
mov
call
in
xchg
sub
lods
jmp
mov
mov
fs
jmp
push
xchg
andl
ljmp
xchg
xor
arpl
das
fdiv
jne
adc
shll
jne
add
inc
inc
mov
mov
adc
int3
pop
nop
cmp
aas
and
mov
cmc
mov
and
into
add
js
mov
data16
add
into
aaa
dec
repz
dec
dec
aas
or
push
xchg
sub
shrb
enter
add
ds
pop
stos
inc
cmpsl
dec
adc
sub
loopne
das
or
inc
xchg
adc
into
cli
or
add
fucomip
repnz
sub
inc
andl
jnp
outsb
es
movsl
cld
dec
mov
add
push
jle
mov
xor
icebp
adc
mov
add
fdivr
and
btr
daa
xchg
or
cmp
xchg
in
inc
sub
das
mov
lahf
mov
jne
cmp
adc
sub
hlt
jno
call
adc
mov
jmp
push
and
add
xor
shlb
in
into
pushf
adc
cs
leave
enter
lahf
push
mov
push
scas
sbb
inc
out
js
fstl
xor
insb
push
mov
leave
scas
push
test
imul
mov
mov
jns
adc
inc
inc
subl
xchg
adc
leave
sub
xchg
or
addr16
mov
movsl
mov
std
push
out
nop
sub
cmp
imul
repnz
inc
shl
hlt
mov
test
sub
movsb
xchg
mov
jg
or
adc
nop
outsl
lret
inc
scas
inc
test
les
ficomps
jb
in
hlt
sub
sbb
inc
dec
out
jl
xacquire
pusha
out
push
sub
xchg
fidivrs
lret
pop
fcmovnb
push
mov
mov
jp
pop
sbb
ficoms
arpl
out
shlb
fsubrl
mulb
mov
sub
xchg
into
cmpsb
and
in
cs
mov
and
or
in
es
shlb
or
int
jg
lods
pop
int3
push
out
lods
stos
inc
adc
stc
movsb
xor
sbb
psubb
xchg
push
popf
sbb
mov
stos
adc
lods
add
notl
adc
or
aas
sbb
hlt
out
rcll
jle
jnp
and
ds
daa
or
stos
pop
push
shl
ljmp
mov
mov
push
stos
push
imul
mov
adc
xor
mov
out
jae
mov
or
cli
cli
and
jge
pusha
or
or
xchg
jp
jne
adc
add
cli
pop
inc
leave
mov
xchg
jp
adc
push
pop
jb
out
loopne
jne
out
shr
cmp
jle
jge
cmpl
hlt
out
loopne
push
and
dec
mov
pop
mov
hlt
sbb
adcl
in
imul
call
xor
push
add
jns
mov
aas
lods
mov
xor
shl
jmp
adc
loop
js
mov
mov
popa
jne
inc
lcall
shll
data16
mov
cmp
mov
hlt
iret
mov
xchg
leave
sub
subl
js
xchg
cwtl
jnp
es
push
dec
xchg
push
cs
push
jne
xchg
or
jle
sahf
inc
dec
aad
adc
inc
add
pop
adc
jle
in
xor
mov
mov
adc
aam
push
mul
popa
ret
add
mov
loop
push
push
mov
jne
lcall
jnp
cmc
clc
and
jne
imulb
mov
stos
inc
dec
ds
pop
pop
jo
shl
aas
xor
inc
imulb
xorl
xor
or
js
int3
stc
loope
add
sbb
xchg
mov
iret
fcmovnu
and
imul
loopne
mov
xchg
adc
dec
stos
dec
and
aad
lahf
aam
mov
add
pushf
add
stos
lds
fnstsw
dec
aam
rcr
filds
jb
and
xchg
addl
jge
inc
popa
dec
clc
hlt
cli
rcrl
push
cmc
cmp
ss
xchg
dec
jns
es
roll
mov
add
addr16
hlt
lods
sub
sub
out
jp
adc
dec
and
xchg
mov
add
pop
pop
ds
mov
das
loopne
and
mov
xchg
adc
div
jae
xchg
subb
sahf
out
in
fsubl
add
outsl
xchg
add
daa
sbb
rorl
es
aam
or
lret
lock
popa
movsb
inc
push
enter
fidivrs
lods
jne
mov
push
jg
sbb
dec
jl
sub
ror
aam
adc
jmp
adc
add
loop
or
jne
mov
jle
dec
pop
lret
scas
jbe
movsb
fistpl
or
sbb
inc
push
xlat
out
xchg
pusha
push
pusha
pop
std
fldcw
pop
push
jno
dec
in
mov
lods
insb
cmp
push
xchg
enter
es
stos
push
pusha
lahf
nop
mov
mov
mov
movsb
mov
arpl
cmpsb
xchg
xchg
add
icebp
jbe
mov
aam
outsl
inc
lds
adc
aam
add
lahf
das
aam
mov
in
nop
and
stc
pop
add
shll
daa
fstp
adc
mov
inc
dec
fidivrs
pop
xor
std
pop
lea
cld
jo
cli
cmc
adc
ja
test
inc
cmc
xor
adc
leave
pop
mov
sub
push
cmp
jno
incl
repnz
pop
xor
xchg
hlt
push
daa
sbb
aaa
mov
mov
xor
dec
loope
jnp
aaa
jle
test
arpl
testb
or
rolb
and
sub
fcompl
nop
jae
xor
jno
mov
jne
or
ret
jp
out
push
add
loopne
xchg
jb
inc
mov
into
aad
mov
mov
inc
int3
dec
pop
popa
mov
movsb
mov
pop
adc
icebp
cmpsb
iret
rorb
adc
sub
hlt
lcall
inc
xor
dec
roll
pop
inc
lcall
xorl
add
gs
sbb
mov
stos
rol
xor
xor
ljmp
stc
lahf
or
pop
fimuls
or
or
popf
push
icebp
fcmovbe
les
pop
sti
stc
test
xlat
mov
hlt
jno
pop
sti
pushaw
push
mov
sbb
outsb
notb
push
xor
adc
jl
iret
leave
mov
dec
orl
push
xchg
and
xlat
push
add
xchg
cmpsl
clc
add
inc
push
movsb
mov
inc
jno
jno
mov
mov
add
stos
push
nop
pushw
es
and
add
lret
push
add
mov
push
inc
aam
call
das
mov
out
negl
dec
pop
daa
loope
sub
out
cmpb
daa
in
stc
scas
lods
je
cmpsl
pop
xchg
nop
into
cmp
pause
jo
sub
or
adc
inc
lret
xchg
into
jge
mov
call
sub
or
dec
fdivs
nop
xchg
ret
mov
xchg
cmp
and
and
xchg
hlt
shl
mov
mov
aad
shlb
mov
mov
dec
scas
jle
cmp
mov
hlt
jae
pushf
jl
jo
cld
or
mov
lret
cmp
adc
lahf
jg
xor
cmp
push
mov
enter
push
std
xchg
jg
gs
cli
js
fldcw
or
pop
gs
push
cwtl
cmc
hlt
sbb
xlat
push
xor
aas
push
shlb
outsl
daa
call
xor
inc
lock
cmp
arpl
add
mov
fadd
sub
je
cwtl
cli
sub
adc
jmp
xor
add
gs
mov
insb
xchg
cmc
cwtl
jns
or
sbb
pop
cli
outsl
and
mov
cmp
insb
cmp
jge
sub
lods
add
push
sub
jle
sbb
rorb
cmp
pop
cld
jo
outsb
loop
mov
repnz
int3
mov
neg
std
jo
arpl
xchg
xchg
mov
gs
sub
jno
xchg
and
cmpsb
add
or
aam
scas
insl
adc
fsubs
fisubl
nop
jecxz
mov
jge
jecxz
arpl
les
mov
fiaddl
dec
imulb
int3
mov
fiaddl
mov
int3
mov
sub
xchg
stc
push
xor
hlt
fistps
mov
push
incl
xor
enter
stos
and
jb
mov
loope
add
insl
dec
pushf
andb
mov
cmp
or
cmc
inc
popa
mov
neg
lret
xorl
mov
xorb
sub
hlt
test
adc
push
add
xchg
cmpsb
sub
xor
pop
jle
xorb
xor
bnd
mov
xor
jle
push
popa
sub
and
es
or
mov
clc
dec
shrl
jge
mov
sub
jnp
add
sub
and
dec
int3
cmp
filds
dec
push
mov
lea
sarl
std
cltd
push
xchg
push
fisubrs
lret
mov
cmpsl
bound
dec
inc
lock
or
aad
ss
mov
in
and
mov
movsb
add
sub
scas
dec
mov
jns
mov
mov
cmp
xchg
jg
pop
cmc
and
jnp
ja
call
mov
mov
insl
not
into
sar
add
ljmp
rorl
rcll
sub
pop
jl,pn
int3
movsl
pop
les
fistps
fsubl
push
mov
stos
and
mov
es
ret
subb
leave
addr16
imul
dec
add
js
aas
mov
popl
jns
mov
packssdw
add
jge
rcrb
nop
aam
cld
push
test
mov
aaa
andl
aas
repnz
loopne
pop
xchg
andb
inc
inc
clc
xor
add
mov
dec
sarl
push
das
add
repnz
lcall
mov
loope
cmc
sbb
xchg
push
nop
jecxz
jp
leave
sbb
xchg
sub
fs
js
push
adc
sub
aas
and
mov
lds
cwtl
dec
test
dec
inc
test
cmpsl
jle
outsl
mov
sbb
test
push
hlt
ss
jecxz
push
or
xchg
xor
xchg
lods
pop
xchg
or
pushf
insb
and
fidivl
lods
pusha
and
inc
mov
pushf
shll
test
xchg
jo
xchg
xor
dec
pop
push
and
andl
xchg
mov
or
pop
leave
push
push
daa
idivl
or
push
push
loope
fmul
stos
lods
sbb
jne
sbbl
push
push
orb
loopne
fstl
mov
incb
aad
jge
insl
leave
pop
stc
lock
cmpsl
call
or
cs
pop
jp
push
dec
or
ss
aam
outsb
movsb
insl
push
jne
add
icebp
adc
adc
cmpsb
mov
popa
lret
jecxz
add
loopne
pushf
data16
js
inc
or
popa
sahf
or
ret
clc
push
ror
add
arpl
or
sbb
xchg
nop
jmp
stos
lcall
rclb
loopne
mov
gs
xchg
mov
addl
insb
cmp
lret
adc
movsl
sti
jne
jg
cmpsb
xor
enter
or
and
clc
sub
pop
xchg
inc
std
mov
repz
aas
out
roll
pusha
mov
mov
inc
inc
dec
mov
aas
mov
cli
jo
cmc
xor
xchg
pushf
iret
add
subb
cli
test
out
jne
cmp
idivl
pop
into
pop
outsl
and
and
add
lds
imull
sbb
hlt
xor
leave
mov
loop
mov
cmp
push
cmp
jg
ret
mov
hlt
out
ror
adc
xor
or
jb
cmp
dec
pop
insl
xchg
mov
dec
xchg
mov
sub
rcrb
xor
test
jecxz
cmpsl
in
test
hlt
hlt
callw
std
pop
nop
icebp
stos
hlt
mov
dec
lds
mov
jge
or
movsb
jnp
daa
incl
sub
es
stos
dec
mov
mov
add
mov
fisttpl
mov
cmpl
mov
mov
mov
xchg
pop
or
sbb
andl
test
pop
cwtl
push
ret
push
or
push
popa
jne
outsl
inc
imull
fldt
pop
cli
das
jmp
lods
xlat
mov
out
andb
jge
and
xchg
addr16
ret
movsb
sub
mov
cli
stc
push
and
int3
push
mov
push
sarb
cmp
xor
rclb
inc
std
mov
push
mov
mov
dec
test
jne
push
jge
or
mov
out
cld
inc
iret
ljmp
notl
mov
add
push
iret
fistpll
adc
adc
in
gs
mov
push
jecxz
mov
lea
dec
push
mov
cmp
sahf
scas
pusha
xchg
cmp
or
mov
inc
lds
pop
and
fildl
add
jmp
mov
lahf
xchg
add
cmp
loopne
cltd
movsl
sbb
js
pop
push
sbb
clc
das
shl
xor
les
cli
push
imul
rolb
sub
cwtl
cmp
jne
cmpsb
adc
test
and
rorl
and
icebp
xlat
in
inc
sti
out
dec
push
insl
lea
mov
sub
mov
pop
pop
push
fldt
dec
cmc
shrb
sbb
sub
xchg
insl
ss
notl
dec
mov
andl
mov
fcmovb
popa
stos
jne
and
ljmp
xlat
loope
mov
cmp
out
push
iret
push
pop
inc
dec
aam
mov
xorb
dec
pop
sbb
lock
in
sub
leave
xchg
jbe
insb
cmpsl
jno
lods
gs
jmp
skinit
cmpsl
ja
bound
js
mov
pusha
movb
jecxz
mov
cmpsl
push
icebp
insl
add
ret
dec
xor
jb
mov
mov
sbb
in
out
mov
aad
add
cmc
jo
and
jg
xchg
nop
jae
cltd
les
inc
cwtl
pop
mov
cmpb
cmp
repnz
test
into
js
popa
lret
divb
iret
lods
outsb
jbe
int
pop
in
mov
cmp
aad
jne
lock
pusha
dec
pop
sbb
mov
and
mov
dec
loop
mov
les
lcall
lret
push
in
cmc
or
jne
dec
fadds
das
fsubl
enter
sti
mov
inc
pusha
insb
test
mov
add
inc
cmp
add
mov
scas
jmp
push
aaa
jne
out
flds
and
stc
inc
es
adc
cmp
and
dec
testb
pushl
adc
stc
clc
mov
mov
or
js
mov
fnstenv
mov
mov
pop
jne
jae
lret
sti
mov
or
nop
aam
scas
sub
fs
xor
jnp
std
mov
nop
hlt
pop
aad
ds
xchg
xchg
mov
mov
jb
cmpsb
mov
xchg
add
jmp
xor
aam
shlb
xchg
out
roll
bound
leave
hlt
jle
add
into
gs
mov
inc
arpl
aad
cltd
mov
icebp
add
lret
popa
push
jge
dec
into
add
test
adc
sub
xchg
sub
gs
xchg
pop
es
hlt
addl
mov
es
addl
mov
or
clc
inc
adc
dec
arpl
jbe
jo
xchg
fldenv
mov
imul
pop
out
aaa
cmpsl
mov
in
orb
cmc
pop
add
hlt
inc
xchg
sbb
dec
adc
sub
sarl
mov
push
cld
fxch
xor
stos
inc
sahf
inc
fwait
js
cs
mov
jl
mov
call
pop
inc
xchg
dec
inc
inc
add
mov
data16
inc
stos
mov
sahf
xor
jge
xchg
pop
stc
inc
inc
mov
fs
xchg
lods
js
inc
pop
push
mov
jecxz
dec
mov
push
jb
or
sub
rol
out
pop
adc
push
mov
fistpl
xchg
adc
call
mov
stos
add
std
int3
leave
mov
mov
xor
cmc
and
inc
or
add
and
enter
sbb
adc
in
andl
into
push
ret
push
xlat
mov
adc
mov
es
outsl
push
push
ret
cmp
sub
sub
jne
fdivrp
cwtl
mov
mov
push
cmp
or
mov
mov
push
pop
mov
mov
loop
mov
ja
push
leave
aam
out
jne
sbb
xor
inc
push
add
mov
jecxz
shrb
or
fnsave
inc
dec
sbb
and
sbb
xor
pop
jmp
fcompl
pop
sahf
insl
jmp
cmp
repnz
mov
insb
std
xchg
subl
lods
outsb
idivb
jp
mov
push
add
fidivl
js
cmpsb
add
clc
iret
cmpsl
adc
hlt
mov
fwait
sahf
jnp
scas
cmp
jb
inc
dec
decb
adc
mov
jae
mov
cltd
cmp
push
mov
pop
pop
cmp
ret
aam
xchg
jl,pn
stc
jnp
enter
out
push
xor
int
fisubrl
enter
mov
js
lock
dec
add
pop
mov
sub
jecxz
jb
cmpsb
push
cld
nop
lods
push
xchg
xlat
jnp
jle
mov
jo
or
mov
xchg
pop
in
int
cmp
mov
mov
imul
aad
ret
inc
ret
loope
sub
jnp
mov
nop
andb
das
or
or
inc
jge
add
mov
dec
jne
loop
xorl
popf
nop
sti
lds
movsl
jg
hlt
sbb
mov
mov
mov
pop
sub
mov
ljmp
adc
aad
sti
dec
cmp
es
into
popf
mov
out
inc
imul
pusha
stos
notl
bnd
sahf
jp
aam
rol
insl
xor
sbb
fsubp
pop
jg
sahf
lea
inc
sbb
push
sahf
mov
jg
sub
mov
adc
mov
ja
sbb
push
cmc
fadds
sub
fiadds
dec
mov
add
adc
mov
add
mov
mov
sub
inc
scas
scas
mov
cmp
clc
cmc
mov
sahf
cmp
mov
xor
lret
loop
faddl
aam
or
cmpsw
mov
push
fisttpll
subb
mull
es
xlat
int3
subl
and
cmp
mov
test
lods
shll
xchg
les
jp
cltd
dec
jns
and
outsl
jecxz
gs
adc
fnstsw
cmp
add
cmpsl
push
int3
push
loopne
dec
js
shll
pop
jne
inc
outsb
rcr
push
mov
cmpsl
dec
ret
out
mov
lods
adc
movsl
and
xorl
fmuls
cmpsb
push
gs
mov
sbb
xchg
sub
cli
pop
mov
jg
andb
das
mov
adc
stos
das
jae
mov
cmpsl
dec
std
xchg
fs
flds
xor
and
mov
and
ja
push
sub
aad
mov
sbbb
mov
test
shlb
ss
popf
xchg
xchg
fistpll
test
mov
xchg
in
mov
fdivp
mov
mull
jne
es
jbe
cmp
gs
and
sti
adc
sub
into
push
sub
xchg
inc
shlb
jne
jg
or
dec
es
shlb
daa
dec
addl
jnp
daa
seto
jg
and
imul
rorl
int
sub
jne
int3
add
mov
shlb
sbb
inc
mov
or
lret
cmpsl
dec
jl
sti
sbb
pop
ljmp
clc
xchg
jecxz
scas
hlt
cmp
in
xchg
cmp
in
stc
je
es
addb
adc
std
cmp
or
sbb
mov
je
movsb
aad
cmc
mov
cmpsb
jns
xor
shlb
cmpsb
lock
sub
les
jae
add
mov
in
pop
fisttps
xor
inc
dec
adc
mov
mov
inc
add
enter
or
jp
mov
movsb
sub
cwtl
add
sub
jg
xor
rcrl
jg
lock
arpl
cmp
xor
mov
mov
in
pop
clc
ds
scas
pop
and
cmp
xor
xor
nop
scas
js
add
jmp
xorb
push
jne
add
dec
lods
mov
mov
mov
cltd
test
cmp
pop
mov
cli
andb
aas
cli
cmpsl
push
lds
sti
push
cmc
adc
pop
push
scas
notb
cli
inc
das
mov
scas
sarb
xor
push
jl
pop
push
imul
in
bound
jns
mov
mov
shlb
pop
xor
cltd
lods
dec
test
ljmp
repz
mov
sub
pop
imul
cltd
fwait
jne
xchg
cmc
sub
push
push
or
cmp
adc
aad
xor
lret
dec
fistps
data16
enter
cmp
cwtl
jns
mov
jnp
mov
fdivr
dec
push
add
jo
incb
pusha
loope
mov
mov
xchg
inc
jae
sbb
mov
pop
lock
test
nop
fidivrs
xchg
pop
test
insb
or
mov
rolb
cwtl
mov
stos
xchg
js
flds
test
loopne
push
add
pop
cld
add
addl
jne
pop
daa
mov
mov
mov
xchg
leave
dec
and
adc
mov
and
loope
imul
add
lret
cmpsb
pop
scas
inc
mov
lret
movsl
popa
js
ret
mov
mov
les
mov
sub
adc
push
inc
sbb
pushl
xorl
mov
push
mov
popf
test
fadds
sbb
mov
mov
fstpl
lds
scas
movsb
and
fwait
pushl
cmp
fistpll
pop
dec
xchg
pause
insl
mov
shl
les
xchg
inc
xchg
clc
inc
hlt
xchg
loopne
mov
popf
ja
dec
rcll
push
out
cmp
jns
xorb
enter
mov
dec
int3
addb
hlt
cmc
int
stc
jne
je
ficomps
sub
fisubl
lret
fwait
mov
mov
loope
dec
mov
out
or
inc
into
inc
lock
xor
stc
sub
inc
or
inc
mulb
mov
inc
xchg
and
cltd
add
dec
arpl
jl
jne
cmp
test
mov
add
scas
movsb
nop
push
mov
adcl
xchg
jbe
mov
fisubrl
andb
fwait
inc
cmp
xlat
mov
xor
call
xchg
pop
int3
loopne
xchg
arpl
mov
jns
popf
jg
cmpsb
test
arpl
cld
pop
xchg
inc
sbb
mov
mov
jmp
dec
popf
fisubrl
pusha
cltd
adc
cmpsl
pop
pop
test
enter
sub
push
cltd
jno
jg
adc
ljmp
movsl
clc
decl
jmp
mov
sub
sbb
xor
shlb
in
lcall
es
daa
daa
pop
cwtl
dec
add
xor
mov
mov
das
arpl
and
shrl
jne
push
xor
mov
or
xorb
orb
rcrb
dec
add
fnstcw
jmp
ljmp
loope
popa
out
testl
std
pop
xlat
sarl
add
mov
sbb
sbb
xchg
rolb
mov
pop
mov
sti
jmp
lret
nop
lods
mov
mov
add
or
xor
out
loope
add
jg
inc
mov
xchg
pop
arpl
push
loopne
jne
daa
mov
mov
mov
push
bound
sub
insb
movsl
in
in
dec
cmp
mov
sub
data16
mov
dec
mov
mov
imul
ret
inc
or
sub
push
scas
cmpsl
imul
sti
ljmp
fsts
loope
xor
or
repnz
imul
out
mov
pop
adc
into
pop
icebp
imul
mov
mov
aam
mov
test
and
inc
pushf
mov
lahf
in
pop
mov
ret
adc
adc
lock
popf
popf
cli
out
xchg
dec
mov
dec
xchg
cld
fcoml
daa
stos
rorl
adc
stos
mov
outsb
mov
test
faddl
inc
dec
hlt
push
xchg
lret
call
jl
sub
inc
mov
xchg
nop
xchg
into
mov
or
lret
mov
leave
aas
lret
sbb
sub
fadds
cmp
stos
cli
xorb
sbb
scas
pusha
pop
mov
xchg
jmp
push
pop
aad
mov
shll
outsb
push
test
subb
mov
ljmp
dec
daa
imull
rcrb
push
adc
inc
inc
mov
cmp
xchg
jle
adc
xchg
dec
sub
imul
inc
ja
mov
push
jae
std
out
jno
stos
sarl
sahf
dec
jne
jns
xchg
push
sbb
or
fstl
dec
xchg
test
xor
scas
mov
inc
mov
int3
dec
add
dec
cli
or
pop
fdivs
inc
pushf
adc
movsb
stc
sub
sbb
dec
sbb
pop
repz
lahf
in
outsl
mov
jle
xchg
xor
test
xchg
repnz
mov
inc
pop
jae
outsb
sub
cmc
and
gs
mov
pop
mov
shlb
out
or
ja
fstl
mov
cmp
lret
cld
testl
aas
inc
mov
es
xor
and
inc
inc
cmpsb
icebp
cmpsl
adc
xchg
pop
daa
push
cmpsl
imul
int
lret
mov
cmpsb
xchg
mov
xor
xor
push
inc
inc
sub
jg
inc
fmull
jg
lods
imul
subb
pop
pusha
stc
jbe
add
xlat
cwtl
adc
fcmove
addb
cmc
mov
lods
sbb
add
jae
shrl
sahf
ret
jns
sti
inc
jge
xchg
scas
sarl
cwtl
pop
cmpsb
mov
or
xchg
test
add
xor
movsl
pusha
xlat
mov
add
pop
push
xchg
and
out
ljmp
inc
icebp
inc
jp
jl
jne
xchg
mov
inc
ja
testl
test
mov
imul
or
xchg
push
insb
fildll
ror
cwtl
inc
xchg
sub
repnz
bnd
mov
jl
add
jo
xchg
jo
out
repz
jae
xchg
pop
sub
lock
jg
sub
hlt
jae
fnstsw
notl
fdivr
inc
adc
js
daa
jbe
xchg
lods
test
arpl
call
sarb
out
or
test
inc
cmc
mov
fwait
loopne
push
push
scas
cli
lcall
jne
cs
call
shr
adc
inc
ljmp
xchg
pop
add
pushf
pop
imul
iret
push
aam
cmpsl
mulb
add
clc
dec
pop
mov
sub
jb
adc
adc
cmpsb
insb
xchg
out
scas
cmc
int3
testl
sarb
lds
mov
lods
adcl
xor
adc
pop
adc
fcmovnb
nop
fdivrl
das
or
push
cmp
adc
insb
jae
rolb
adc
insb
cmp
lret
out
mov
inc
icebp
test
dec
inc
leave
lds
into
es
dec
xor
adc
dec
jnp
shrb
xchg
out
adc
aam
rcll
stos
lods
cmp
pop
push
into
in
mov
addb
test
jbe
add
push
cmpsl
push
push
cwtl
clc
scas
jns
imul
out
cmp
lods
int
adc
cmpb
add
sbb
popf
idiv
loopne
mov
clc
enter
add
xchg
sti
sub
les
into
xorb
cwtl
stos
adc
insl
adc
sub
adc
hlt
or
sti
scas
fsubl
push
rorl
fisttpll
push
sub
popf
push
fwait
or
xchg
push
mov
pop
xor
loopne
dec
xor
pop
push
ret
negl
xor
or
add
fmull
imul
in
in
test
jl
mov
cmp
cmpsl
mov
xor
lock
or
gs
xchg
mov
inc
hlt
sbb
mov
mov
cmp
cld
divb
iret
and
clc
negl
shrl
or
es
jno
jne
imul
mov
int3
ret
hlt
dec
arpl
mov
enter
adc
mov
fbld
fistpll
add
jl
or
arpl
cmc
lods
jmp
cmc
cli
insb
mov
rcrb
push
inc
jl
mov
arpl
int3
xchg
dec
push
xchg
xor
scas
jg
mov
add
flds
mov
push
dec
idiv
stos
and
les
mov
adc
scas
sahf
sub
adc
clc
out
push
shrb
test
pop
or
movsb
jne
mov
or
and
and
ja
int
dec
sbb
mov
stos
cltd
out
jle
add
lods
orb
daa
ljmp
test
cmpsb
xor
inc
mov
ret
div
push
or
popa
add
xchg
loop
ret
and
loopne
loop
sbb
pop
sub
gs
sti
mov
mov
add
jns
das
mov
add
cld
push
cmp
icebp
dec
and
mov
gs
sub
nop
and
ret
cmp
mov
scas
nop
es
lea
cmp
cmova
das
xchg
add
jl
enter
push
xor
je
add
sbb
mov
inc
mov
inc
xchg
fwait
int
ret
pushl
and
push
jbe
adc
push
add
stos
jne
pop
std
adc
sub
push
mov
add
adc
xchg
or
fimull
movsl
and
push
sbbb
int3
cmp
cmpsl
popa
clc
popf
les
inc
stos
movsl
xor
lods
add
aas
roll
sub
inc
aad
test
ficompl
add
lock
push
add
cmp
stos
sub
or
test
and
push
leave
jne
push
stc
mov
xchg
fsubrl
pop
inc
pop
arpl
sub
or
sbb
fstl
lcall
sbb
lcall
xlat
leave
mov
or
lret
clc
push
dec
clc
movsl
mov
inc
lods
notl
nop
sub
into
sbb
es
pop
or
testl
in
inc
jge
shll
xchg
xor
jmp
cmp
test
adc
adc
inc
cmpsb
aaa
loope
mov
fcoms
push
imul
inc
jno
testb
add
fs
or
inc
pushf
xor
jne
mov
aam
gs
out
les
lock
fcomps
or
lods
and
shl
daa
mov
jb
mov
pusha
popf
int3
shrl
fcmovnu
dec
test
cmpsl
insl
fxam
movsl
add
mov
aad
dec
cmp
mov
mov
aam
iret
pop
mov
insl
add
aam
out
push
stc
pop
roll
sub
es
mov
sub
xchg
aam
or
or
pop
lock
jg
lret
mov
jnp
popa
sub
sbb
enter
loopne
insb
int3
jg
fs
movsl
pop
or
pop
jmp
mov
jno
mov
int3
xchg
loope
out
inc
lret
mov
sbb
cwtl
jl
scas
or
mov
stos
mov
mov
out
inc
push
repz
inc
jg
cmp
ffreep
mov
adc
dec
out
mov
mov
mov
mov
das
lret
hlt
pop
jg
cltd
inc
iret
in
or
les
pop
arpl
inc
in
adc
xchg
test
mov
sub
leave
sahf
popa
sub
mov
inc
sub
add
hlt
push
cli
jl
out
dec
push
add
add
or
xchg
sub
add
mov
inc
shlb
aaa
sub
fildl
jp
pushf
sbb
jbe
sbb
loopne
xorl
dec
lods
stc
shl
or
daa
jl
mov
ljmp
xchg
gs
ss
mov
sbb
mov
push
mov
cmc
mov
rcrl
mov
or
in
jbe
in
les
dec
popf
mov
jecxz
jne
popa
lods
js
mov
hlt
mov
push
lock
jb
sbb
outsl
sahf
es
or
ret
jmp
lcall
leave
daa
inc
fsubl
pusha
mov
gs
xor
jne
sbb
in
sar
idivl
xor
jecxz
dec
loope
mov
test
insb
or
lock
movsl
xchg
es
pop
into
pop
insl
adc
cld
imul
hlt
jns
mov
and
jns
and
xchg
sub
hlt
inc
pusha
dec
mov
lds
scas
or
dec
xchg
iret
xchg
push
xchg
adc
loop
pop
xor
or
mov
shll
sbb
mov
enter
fcoml
and
rol
ds
sub
pop
adc
addl
xchg
out
mov
pusha
test
test
dec
cs
lcall
aas
mov
jne
and
pop
notb
mov
xorl
mov
push
out
lock
ss
hlt
jecxz
pop
sbb
sti
rol
into
add
test
jne
push
push
push
or
dec
mov
add
das
shll
int
mov
mov
cmp
scas
fs
int3
sbb
lods
fcomps
pop
cli
mov
xchg
lret
rclb
loopne
jne
movsl
lock
mov
mov
hlt
xor
into
pop
cmpsb
pusha
sbb
sarb
mov
arpl
add
cmp
hlt
cmp
and
mov
enter
idiv
sub
inc
aad
mov
ljmp
xchg
ror
ljmp
mov
es
push
mov
cmpsb
addb
jne
dec
sub
dec
dec
pop
jne
dec
cmp
inc
wrmsr
mov
jg
ja
std
fcomip
int3
adc
cmp
out
adc
cmp
inc
std
outsl
mov
pop
popf
loopne
insl
loop
push
ret
sti
add
xor
syscall
add
ljmp
mov
sbb
xchg
jge
int3
jae
jnp
lcall
insl
pop
push
ljmp
lcall
les
addr16
ret
mov
or
movsb
sub
leave
out
xor
loopne
or
ljmp
sbb
cli
sar
pop
jge
mov
enter
addb
jecxz
in
jne
xchg
insl
cld
mov
xchg
hlt
xor
jns
repz
xor
int3
and
push
aad
lods
adc
lea
pusha
pop
aam
jnp
mov
cmp
cs
or
mov
int3
loopne
rcll
popf
fldz
xor
push
mov
lods
jl
lock
imul
or
cmp
ja
or
and
xor
es
nop
jp
inc
es
cli
ffreep
out
add
cmpsb
dec
loope
popa
mov
jl
jle
pop
mov
inc
rcll
hlt
aas
jg
in
enter
jns
movsb
inc
jnp
movsl
lods
shlb
nop
out
and
xchg
jb
hlt
jno
jnp
sub
idivb
lods
cmpl
mov
sub
out
mov
loopne
pushf
jmp
fistpll
mov
xchg
mov
xchg
pop
sbbl
test
jge
jle
loop
inc
pop
ss
cld
inc
mov
dec
out
add
test
pop
stos
mov
mov
jo
and
xor
pop
test
dec
in
add
nop
mov
andl
xchg
sbb
xchg
cmc
xor
add
mov
adc
jns
jmp
adc
ljmp
pop
out
mov
jl
xchg
addr16
or
dec
push
hlt
cmpsl
push
out
adc
add
mov
push
cli
jg
imul
std
insb
jns
push
xchg
sbb
test
sub
test
cmp
fimuls
mov
test
jge
cli
or
cli
inc
out
hlt
cli
lret
test
xchg
cmpsb
mov
stc
rclb
stc
push
loop
negl
shl
sti
inc
cltd
or
push
pushf
test
or
xor
lock
ss
test
cmc
data16
dec
xchg
popa
mov
enter
jmp
pop
mov
mov
repz
cmp
fsubr
inc
sbb
jmp
mov
scas
loop
insb
mov
pusha
mov
test
xor
add
xchg
imul
incl
push
jge
jne
inc
sub
stos
bnd
imul
sub
mov
xor
inc
jo
xchg
pusha
lds
orb
sbb
dec
and
push
pop
hlt
call
xchg
mov
jp
or
xchg
cwtl
jo
inc
cmpsb
push
scas
imul
sbb
mov
scas
mov
jge
das
jae
add
adc
jp
fildll
int
xchg
ret
roll
dec
aaa
xor
push
jge
inc
mov
orl
cwtl
add
repnz
hlt
aam
jnp
hlt
gs
inc
add
in
fisubrs
add
xor
jg
scas
std
xchg
scas
dec
dec
rcrb
xor
xor
xor
or
mov
push
lcall
ljmp
cmp
jge
dec
clc
mov
inc
int3
and
xor
sub
dec
js
add
cmp
lahf
mov
xchg
inc
lock
dec
and
or
testl
inc
orl
sbb
dec
movsl
insl
mov
into
and
inc
cmp
inc
pop
jae
pop
adc
inc
xchg
lods
out
push
loope
aas
or
pop
inc
scas
jns
insb
sub
sbb
dec
scas
popf
adc
cmp
adc
hlt
mov
mov
fnstsw
adc
mov
push
js
mov
mov
xchg
les
in
dec
xchg
lds
ret
je
or
or
jbe
pop
cmpsl
xchg
inc
ljmp
in
adc
iret
movsl
cltd
mov
imul
scas
sahf
enter
push
mulb
mov
mov
outsb
xor
jo
pop
clc
cltd
subb
sahf
push
fiadds
adc
mov
enter
jns
inc
add
mov
popa
sbb
nop
andl
subb
pushf
xchg
xchg
dec
fisttpl
popf
les
cld
in
pop
mov
xor
sbb
sbb
mov
aad
filds
sub
enter
mov
or
loopne
popa
and
jp
pop
inc
hlt
jae
mov
mov
xor
mov
mov
or
les
pushf
or
push
sti
imul
inc
loope
jg
sbb
ret
mov
cwtl
pop
jp
or
lods
inc
mov
mov
mull
mov
arpl
inc
inc
arpl
mov
ja
adc
add
loope
rcll
mov
mov
jo
adc
mov
or
leave
icebp
push
or
mov
pop
lds
or
push
adc
paddw
jmp
mov
lods
movsb
inc
add
mov
lret
add
mov
jmp
lods
adc
dec
xchg
lahf
mov
xlat
fdivrl
mov
sarb
push
pusha
mov
fdivrl
cmc
cli
mov
ljmp
pop
test
push
inc
ljmp
popf
fcoml
jmp
cmp
mov
out
test
jp
loop
stos
stos
mov
jge
jne
jmp
test
add
add
inc
add
aad
xor
adc
sub
rorl
orb
push
stc
xchg
test
ffree
adc
xchg
mov
jbe
pop
mov
ss
xorb
fmull
add
dec
test
arpl
aad
inc
xchg
clc
ror
adcb
leave
sub
push
pop
shrl
mov
pushf
cmc
xchg
adc
jns
or
xchg
push
dec
jl
rcrl
iret
xchg
push
mov
les
mov
inc
into
jl
incl
mov
outsl
pop
inc
mov
imul
out
jbe
push
aam
cmpsl
dec
popf
or
test
or
inc
mov
lock
test
push
into
jbe
cs
sub
pop
dec
outsb
insl
or
cmc
xchg
sub
and
lods
cmp
hlt
ja
leave
add
push
fldcw
or
or
pop
sbbb
pop
cld
loopne
mov
adc
cmc
stc
xchg
dec
mov
cmp
daa
mov
cmp
gs
sub
jae
mov
rclb
xchg
fcomps
mov
pop
cmp
or
jno
ret
mov
cmc
mov
std
mov
jb
push
jp
or
add
xor
add
aad
push
inc
dec
inc
stos
mov
or
jns
mov
fdivr
fmull
movsl
leave
lea
inc
outsl
adc
test
fcoml
inc
les
aad
adc
adc
leave
outsl
stos
cli
dec
mov
mov
gs
xlat
mov
test
fs
das
mov
mov
out
shr
sbb
cwtl
push
in
enter
mulb
mov
cli
fsubrp
sub
and
push
roll
imul
cmp
push
or
add
in
test
loopne
fldl
cmp
int3
cmp
repnz
push
sbb
fnstenv
scas
imul
or
gs
adc
movsb
clc
cmc
adc
jnp
mov
pop
push
mov
jns
stc
dec
arpl
imull
pop
adc
daa
mov
add
js
lea
andb
pusha
scas
add
cmp
mov
dec
dec
pusha
push
popf
into
and
push
jne
lret
imulb
jmp
cmpb
out
xchg
pop
mov
stos
sbb
inc
daa
push
cmp
cwtl
xchg
ror
and
movb
pop
inc
sub
aad
sub
les
or
jbe
pushf
cli
mov
dec
fistps
pop
std
mov
push
jbe
mov
int3
and
dec
pop
fcmovnb
and
imul
mov
rclb
iret
pop
mov
jmp
and
fcomip
test
stc
adc
sti
jmp
mov
push
dec
or
mov
mov
mov
popf
push
sub
addr16
movsb
inc
mov
movsb
jmp
or
mov
stos
dec
aas
imul
add
jnp
sbb
pop
cmp
pushf
xor
jge
xchg
stos
mov
xlat
mov
xchg
adc
push
xchg
fsubs
push
cmpsb
inc
shrb
add
iret
in
inc
insl
or
inc
xor
mov
in
lock
push
shrl
insl
jl
pushf
xchg
insb
mov
xchg
cmp
fsubr
mov
test
pop
add
adc
es
inc
test
and
jo
jl
andb
fucomip
push
add
shl
rolb
and
xchg
aad
lock
ret
bnd
lret
test
stos
adc
aam
lahf
sarb
lea
es
or
and
dec
jge
call
cmc
mov
or
inc
lahf
and
test
scas
pop
das
pop
pop
test
dec
add
imul
sbb
adc
mov
cli
and
and
out
popf
and
sbb
sbb
sarl
mov
inc
push
mov
leave
cmpsl
inc
out
outsl
in
push
jp
adc
mov
inc
stc
jb
sbb
add
pop
test
mov
adcl
hlt
lret
jp
inc
cltd
out
push
add
pusha
scas
cmp
xor
pop
sysexit
push
add
pop
jnp
dec
push
mov
add
arpl
mov
mov
les
jp
scas
pusha
arpl
cs
push
out
push
pop
xchg
dec
aad
nop
mov
push
in
xchg
sbb
movsl
pop
mov
stos
mov
sbb
scas
mov
cwtl
jecxz
aaa
jle
stos
pop
icebp
test
cmp
xchg
inc
jae
xor
enter
sbb
hlt
pop
ret
sti
mov
pop
pusha
sarl
in
mov
mov
mov
hlt
mov
cmp
or
jbe
sub
in
xchg
lcall
cmpsl
aad
iret
aad
push
mov
lods
inc
jge
jmp
cld
add
icebp
div
pop
or
xor
adc
xchg
mov
add
push
into
inc
mov
jnp
leave
enter
add
cltd
hlt
data16
push
push
mov
fimuls
stos
pushf
pop
dec
add
scas
xchg
pop
push
rorl
movsb
dec
insl
adc
rclb
test
lods
das
cmp
shlb
inc
pop
xchg
neg
repnz
pop
shlb
xor
xchg
fadds
adc
jns
ret
loop
fimuls
pop
addr16
or
mov
adc
push
sub
cmpl
dec
cmp
dec
cmpsb
add
scas
shll
dec
cli
xor
hlt
subb
push
xchg
adc
fidivrl
push
rol
dec
cld
mov
lea
aad
xchg
cmpsl
pusha
pop
out
fldt
jnp
sub
clc
sbb
inc
jne
cmpsl
or
insb
adc
mov
rorb
or
mov
jb
cmpsl
pop
or
push
outsl
inc
add
jne
sub
das
inc
out
enter
mov
std
push
iret
es
dec
dec
xchg
mov
in
push
xchg
dec
bound
jle
nop
sti
push
imul
in
adc
pop
int
push
outsb
neg
addr16
inc
inc
xchg
fwait
dec
push
sbb
add
push
mov
insl
add
hlt
or
mov
fs
xorb
enter
xchg
lea
ja
repz
push
push
mov
xchg
data16
mov
lcall
ja
jecxz
fmull
lret
incl
push
es
mov
inc
fidivrl
pop
xchg
xchg
mov
lret
jp
add
adc
pop
mov
hlt
adc
jb
stos
push
ja
call
push
or
jns
adc
pushf
leave
fnstcw
in
clc
xchg
pop
xchg
das
imul
sub
adc
ret
mov
xlat
xchg
mov
mov
mov
in
cs
jg
mov
cmp
pusha
repz
mov
stos
hlt
enter
fsubr
mov
add
mov
push
aam
lret
and
xlat
cmp
jne
iret
test
inc
push
cmp
out
repz
or
mov
pusha
stos
sub
call
mov
or
inc
or
pop
inc
push
call
push
fmuls
fmull
inc
fwait
jne
jp
subb
jae
lock
enter
jbe
ret
cmc
xorb
leave
imulb
dec
and
mov
in
adc
xchg
xchg
test
jnp
cs
push
cmp
loop
xchg
out
mov
inc
call
sbb
and
mov
sub
sub
mov
loope
out
sub
ds
xchg
cmp
mov
sub
cli
idiv
int
pop
subb
add
cmp
in
loope
sub
out
int3
xor
inc
inc
pop
jne
rcl
repnz
mov
sub
pop
dec
lcall
jp
hlt
xchg
scas
inc
lds
mov
add
into
xchg
pushl
std
sti
sahf
push
popf
cmp
mov
cwtl
dec
fidivrl
sbb
icebp
lds
sub
nop
dec
jbe
cli
addr16
popl
mov
and
fwait
dec
sbb
lret
popa
fwait
lods
imul
and
dec
pop
pusha
fisubl
mov
inc
sub
inc
mov
clc
pop
adc
mov
je
inc
std
inc
add
inc
les
mov
pop
cli
rorl
xchg
mov
jne
int3
inc
shl
xchg
call
cmpsl
mov
ljmp
cmpsb
out
in
push
mov
jp
test
xchg
popf
add
adc
inc
imul
jne
test
repnz
cmp
ja,pn
xor
adc
out
in
mov
pop
movsl
jae
or
popl
sub
pop
rcrl
daa
adc
mov
imul
sbb
or
inc
data16
loope
test
inc
fs
lods
or
inc
shlb
ret
and
sbb
xor
or
jp
jo
push
pop
gs
ficoml
ja
fcoml
xor
jo
sub
js
shrl
mov
lods
frstor
shlb
mov
mov
xchg
inc
insl
inc
xor
mov
pusha
cmp
xchg
add
inc
pop
jge
cmpsb
mov
rorb
std
pop
jns
or
inc
cmpsl
jl
rcll
repnz
outsl
sbbb
add
movsb
shrl
mov
testb
sahf
dec
mov
test
ror
or
les
pop
mov
xorl
adc
div
xchg
fisubs
mov
push
sti
sbb
clc
xor
jle
mov
adcl
adc
jg
mov
ja
cmp
mov
mov
into
sub
sub
inc
dec
xor
sub
clc
jmp
add
scas
lret
mov
cmc
insb
pop
scas
xor
push
add
mov
outsl
rolb
je
roll
testb
xchg
or
inc
lret
das
hlt
out
mov
mov
jns
inc
pop
hlt
jle
inc
cmpsb
sbbl
shrl
testl
adc
lock
rclb
sahf
pop
pslld
sbb
mov
adc
lods
mov
hlt
mov
shlb
lea
cmp
xchg
dec
aam
adc
in
dec
push
mov
imul
lods
les
mov
fdivrl
lea
lods
shl
subb
adc
lahf
xor
lret
mov
mov
arpl
inc
js
sub
aas
pop
cmp
pop
xchg
dec
enter
comiss
sbb
roll
mov
mov
js
lods
add
jb
cmp
add
scas
xor
xchg
push
std
hlt
push
fisubl
mov
and
lcall
dec
sbb
loope
ret
rolb
dec
add
dec
push
push
add
bound
inc
ss
in
movsl
insl
fdivr
mov
jo
cmp
mov
mov
js
lret
stc
xchg
pop
insb
inc
pushf
push
dec
adc
adc
mov
movsl
int3
xchg
testl
lret
lods
and
cltd
test
jns
cli
push
sti
scas
loop
call
add
add
inc
stos
mov
mov
scas
xchg
pop
pop
add
mov
inc
push
pop
and
clc
xchg
lret
imul
mov
test
cltd
out
sub
sub
movsb
pop
pop
orl
xchg
movsb
clc
xchg
mov
in
loop
mov
test
pop
js
rolb
jno
cmp
aam
imul
addr16
dec
xor
int
es
jge
inc
ja
icebp
jmp
mov
fcoms
out
repz
stos
xchg
mov
inc
rcl
xor
dec
mov
push
ret
xchg
add
int3
hlt
pop
icebp
xchg
xchg
mov
cwtl
and
xchg
fxch
ficoms
lcall
or
mov
jmp
push
into
cmp
sbb
pop
jg
movsb
mov
sub
mov
test
pop
adc
imul
incl
push
sbb
mov
ss
or
jp
mov
xchg
mov
arpl
add
push
fcompl
es
sbb
aad
xor
push
aam
ret
pop
enter
lcall
leave
pop
ljmp
sti
xorb
sub
inc
aad
add
pop
nop
and
mov
or
mov
xchg
xchg
mov
mov
inc
lods
xchg
jmp
mov
inc
jl
push
stos
add
push
mov
dec
inc
ficoms
loopne
stos
jns
lret
fsubrl
sub
and
mov
addr16
adc
push
xchg
ja
sti
rol
scas
sub
xor
ret
xor
cwtl
sbb
in
inc
cs
cmp
lret
lret
dec
lret
and
sub
clc
cli
push
inc
or
mov
hlt
movl
loope
add
mov
out
mov
nop
hlt
lret
push
xor
mov
leave
mov
ja
cld
pusha
mov
sbb
in
insl
sub
leave
shll
cmp
jns
xlat
xor
lods
xor
xor
test
push
mulb
mov
mov
mov
rorl
hlt
dec
and
cmpl
arpl
inc
cmpsl
mov
nop
loop
sub
mov
push
sub
ss
lea
jle
mov
loopne
xor
mov
iret
mov
testl
pop
cld
add
pop
xchg
int3
sub
sahf
daa
xor
icebp
subl
add
push
jle
enter
cltd
jns
in
adc
push
xchg
jl
inc
cmp
push
jecxz
or
and
jns
leave
int3
push
adc
mov
mov
stos
xor
sub
aaa
aad
pop
add
or
in
jne
sbb
mov
push
jle
push
jo
jle
xchg
into
pop
and
xlat
testb
ss
repnz
push
les
daa
jg
cvtdq2ps
sbb
push
inc
inc
test
cmp
arpl
cwtl
mov
push
insl
xchg
das
adc
cmpsl
lret
ljmp
cmp
push
inc
rcll
fistl
divb
push
add
jne
jbe
in
fnstcw
loope
adc
subb
repz
xchg
push
and
cmp
add
push
mov
sbb
daa
test
cmpsb
jno
subb
enter
mov
test
push
repnz
sbb
jne
adc
jbe
lret
and
sti
mov
dec
in
adcb
ja
jl
jl
es
push
pushf
or
fwait
dec
xor
scas
jmp
out
das
cwtl
adc
mov
pop
ror
das
leave
imul
addl
dec
daa
cli
add
out
inc
adc
push
imul
push
rcrb
mov
cmc
mov
outsb
or
out
testl
int
mov
push
ljmp
add
inc
popa
hlt
jne
jbe
mov
mov
aam
fbstp
scas
std
inc
adc
jo
andl
push
inc
mov
push
mov
bound
test
cmp
xchg
lcall
jne
lock
aad
cmp
aad
daa
and
pop
jno
out
mov
popf
pop
or
inc
add
in
mov
push
dec
jmp
sub
es
ljmp
jbe
xor
sbb
stos
jno
aam
addr16
cs
pop
leave
test
jge
roll
inc
mov
in
add
outsl
mov
movsb
stos
fcoms
stos
arpl
mov
pop
push
xchg
jo
xchg
mov
xchg
subl
enter
fstps
fcompp
add
iret
and
jne
cli
add
ret
cld
push
lods
mov
mov
lock
test
into
sbbb
cmc
sub
pop
push
add
incb
xchg
clc
mov
dec
mov
aas
mov
in
or
inc
out
cld
test
mov
xchg
test
scas
dec
shr
push
mov
fbld
mov
mov
pop
mov
sti
mov
or
push
xchg
jl
mov
mov
hlt
imul
jnp
out
daa
and
leave
arpl
mov
push
jne
mov
xchg
hlt
jno
pop
sub
sahf
push
test
push
mov
fs
dec
jmp
mov
loopne
outsl
mov
jmp
add
add
js
mov
das
nop
in
divb
add
mov
cli
sub
inc
push
add
cmpsb
mov
cs
orb
inc
push
js
or
mov
inc
dec
cli
loop
hlt
repz
inc
mov
ljmp
and
lock
test
stos
mov
das
xor
in
ret
arpl
andl
mov
nop
mov
inc
jae
cltd
xchg
jl
cwtl
xor
lock
pop
es
imul
hlt
inc
adc
sub
repnz
lret
jae
clc
mov
int
rorb
mov
fs
add
mov
or
sbb
inc
and
call
pop
cs
mov
pop
shrb
fsts
inc
test
sub
hlt
and
testb
pop
add
cmp
jae
sti
or
rorl
bnd
in
cmpsb
repnz
ljmp
jge
cld
inc
jne
pop
sbb
mov
js
fisubl
fwait
scas
mov
or
jg
shl
ja
lods
sti
pop
push
xchg
cli
std
adc
mov
adc
and
or
das
enter
rorl
inc
cmp
push
jnp
mov
iret
outsl
fsubl
scas
popf
mov
push
fisttpll
inc
add
jno
xor
dec
push
mov
lcall
cmpsl
loopne
mov
mov
sub
test
sti
jmp
push
mov
mov
shlb
clc
gs
jl
lock
inc
push
push
loope
sbb
push
mov
mov
mov
jne
divl
or
jg
data16
cs
sahf
je
pop
xor
les
jge
enter
test
inc
xor
ja
arpl
add
imul
xchg
ret
or
xor
nop
nop
out
out
test
or
pusha
jo
jg
jecxz
inc
push
xor
addb
fwait
loopne
dec
in
mov
mov
ds
push
imul
or
add
leave
pop
cmp
mov
stc
push
or
mov
lret
enter
jbe
sbb
mov
fisubrl
inc
add
jns
mov
ljmp
add
sahf
fistpl
add
sar
xor
mov
sub
insl
sahf
in
xchg
adc
jb
lret
test
out
adc
mov
push
cmc
xchg
sarl
push
ret
xor
ja
dec
cmp
xchg
jle
movl
loop
pop
sub
mov
push
xchg
shrb
cmp
sbb
in
sbb
push
loopne
fistps
mov
jp
push
pop
push
pop
test
lods
pop
test
push
xor
mov
xor
test
hlt
pop
pop
add
mov
pop
push
pop
bound
shlb
inc
inc
adc
les
mov
dec
sti
filds
test
lods
imul
out
int
add
mov
cltd
and
push
adc
in
leave
adc
jno
inc
fldcw
pushf
jne
dec
cld
add
mov
test
mov
adc
inc
or
sbb
jmp
pushl
xchg
mov
inc
sti
enter
xchg
adc
xorb
mov
xchg
mov
pop
adc
add
data16
fdivrp
shlb
cmc
ja
mov
dec
gs
mov
jnp
cwtl
sar
test
loopne
test
outsb
cmc
mov
iret
and
inc
inc
fdivr
fadds
mov
arpl
xchg
adc
sub
push
shlb
push
sub
xor
cwtl
sbb
nop
inc
push
scas
sub
shr
lods
push
inc
es
call
repnz
and
sbb
xlat
or
push
dec
lds
gs
fs
add
push
fisubl
scas
push
nop
dec
clc
inc
lods
sub
sub
daa
push
dec
inc
outsl
loopne
das
mov
mov
ss
bound
loopne
adc
add
sti
push
xchg
mov
mov
mov
test
adc
loopne
jl
loopne
inc
adc
int3
mov
adc
xchg
mov
lock
inc
fcomip
add
or
scas
inc
call
dec
add
test
fmul
ffree
or
mov
dec
jmp
jb
test
cmpsl
xchg
popf
pop
mov
adc
into
imul
lods
insl
fs
jp
in
hlt
jg
pop
pop
mov
test
out
xor
orb
fsubp
scas
cld
adc
int3
les
test
xlat
push
xor
mov
outsb
test
mov
add
mov
ds
and
jno
fisubl
sarb
push
add
jmp
shl
push
lods
sbb
mov
pop
push
pop
call
daa
lods
inc
fdivrl
dec
cli
in
pop
nop
pushf
add
xchg
rol
ds
fmul
xor
rolb
fisubrs
push
inc
jg
in
xor
in
pop
jle
out
aam
mov
repz
mov
jns
mov
and
loopne
mov
outsl
add
loop
repnz
out
js
adc
mov
mov
cmpsb
jecxz
pop
cmp
xor
mov
pop
dec
mov
shrl
mov
jge
push
sbb
cmp
hlt
and
aaa
sub
call
sbb
jp
dec
lcall
jae
mov
pop
sbb
lock
sti
jmp
jne
mov
pop
pusha
icebp
dec
mov
shll
xchg
loopne
sub
leave
xlat
dec
pop
sub
pop
shll
jne
cs
es
dec
sub
push
movsb
pop
aam
loope
hlt
jo
insb
pop
pop
in
arpl
imul
pop
loop
fdivp
pop
inc
popa
mov
or
clc
mov
lret
je
clc
xlat
push
lods
jg
sub
mov
ret
hlt
lea
mov
fbld
cmpsb
testl
lock
xor
outsb
mov
mov
mov
cld
cmp
into
ror
cmpsl
pop
push
pop
cmp
jg
das
dec
dec
cmp
std
sbb
lret
xchg
iret
xor
gs
mov
test
xor
fnstsw
xchg
add
loop
push
int
jo
adc
and
dec
add
iret
jecxz
xchg
popf
inc
test
fimull
cmc
lcall
outsl
and
hlt
cwtl
mov
sahf
call
lret
nop
call
test
sbb
xorl
pushf
push
mov
xchg
mov
frstor
nop
fbld
cmp
mov
cld
mov
mov
mov
iret
sub
xchg
push
into
inc
negl
aaa
pop
scas
cwtl
pusha
and
pop
mov
sub
sbb
insb
test
pop
mov
sub
adc
mov
fwait
adc
aas
push
sbb
int3
loop
ljmp
sti
imul
jge
jno
cli
pusha
mov
scas
add
xor
mov
cli
pop
push
in
loope
jg
cmp
rcrl
add
fsubl
int
sub
in
mov
push
mov
pop
sbb
fucomip
ret
cs
les
lods
pop
sub
jmp
movsl
hlt
sbb
jle
lret
push
push
icebp
in
jmp
inc
fbstp
push
stos
cwtl
add
jns
sbb
imul
daa
fstps
mov
mov
std
push
mov
pop
cmp
sub
inc
inc
mov
xchg
mov
xchg
fwait
in
cmpb
fldenv
inc
mov
xor
jmp
data16
rorl
sbb
imul
aas
inc
scas
clc
inc
jmp
push
cmc
add
mov
sub
adc
and
mov
lcall
cmp
ds
mov
call
shlb
mov
cwtl
push
lods
dec
dec
adc
push
fsubs
popf
add
mov
sbb
push
adc
sbb
jne
mov
lds
inc
arpl
insb
cmpsl
sti
pop
pop
inc
lds
push
inc
insb
push
adc
push
add
pop
dec
in
xchg
sub
jne
lods
jmp
mov
jb
daa
jne
mov
adc
xlat
outsb
cs
jmp
nop
adcl
aas
jl
adc
scas
pop
push
in
jmp
insb
mov
ficoml
push
enter
jnp
xchg
clc
jmp
and
xor
mov
jle
mov
mov
mov
add
addr16
ds
mov
test
add
les
pushl
sub
sarb
imul
jl
mov
pop
mov
pusha
pushf
lods
test
cmp
pop
dec
mov
xor
add
jb
xchg
xchg
lret
sub
and
popf
inc
adc
cmc
cmp
call
pop
cs
fldpi
hlt
dec
sbb
mov
mov
repz
lcall
mov
jno
mov
or
movsb
movsb
pop
movsb
out
jmp
push
fnsave
mov
incb
xor
xchg
jne
dec
pop
mov
mov
mov
pop
pop
mov
fcmove
andb
add
das
adc
or
mov
sahf
hlt
mov
movsb
push
loop
sub
xor
mov
pop
in
xchg
fwait
jmpw
movsb
sarb
jnp
add
loope
sbb
out
jnp
idivb
pop
imul
std
mov
aad
xchg
std
lods
movsb
shrl
mov
jne
mov
mov
lds
jne
jg
add
hlt
test
jnp
pop
fimull
aaa
mov
add
loop
inc
push
cmc
out
hlt
adc
fsubrs
insb
enter
mov
lret
mov
pusha
imul
insb
fcoml
xor
int3
frstor
jb
bound
inc
lods
cmc
shlb
pop
mov
xor
cmp
add
and
scas
clc
dec
mov
mov
and
mov
add
fcmovu
filds
cmc
mov
out
mov
jecxz
or
sarb
imul
daa
mov
mov
inc
mov
jnp
int3
sbb
mov
or
lcall
daa
in
xchg
es
xor
mov
lds
aas
mov
test
cmp
in
insb
orl
xchg
cmp
xchg
xor
adc
into
xchg
stos
jp
stos
xor
aaa
faddl
lods
mov
iret
daa
or
ficomps
negb
or
mov
loop
and
add
into
jae
mov
mov
cmpsb
jp
outsl
cmp
cmc
dec
leave
mov
mov
clc
in
pop
dec
in
sub
mov
addb
fisubrl
dec
sbb
adc
test
leave
add
mov
jne
sbb
push
subb
shll
lods
mov
ffree
rolb
aam
or
call
pushf
mov
or
cmp
jmp
mov
push
ret
leave
cmp
mov
hlt
loopne
jg
es
xchg
movsb
sub
dec
lahf
inc
aas
pop
and
fstps
inc
shlb
out
or
mov
stos
pop
cwtl
cmp
xchg
inc
lock
sub
add
sbb
xchg
fiaddl
addb
sbbl
inc
push
fsubrl
dec
enter
cmp
ss
pop
cmp
mov
outsl
xchg
cld
fmul
clc
mov
xlat
pop
sub
stc
pop
test
iret
loop
inc
mov
or
mov
and
mov
push
test
mov
jg
jle
shl
dec
xor
bound
in
shlb
sub
jo
stc
inc
xchg
lcall
pop
addb
hlt
sub
insl
stos
in
xchg
inc
jg
inc
rorb
inc
inc
mov
int
add
push
pop
arpl
std
sbb
mov
jns
push
and
add
into
mov
xchg
scas
dec
aaa
ds
addl
add
jl
test
lods
sti
xchg
test
inc
dec
popl
dec
push
cmpsb
mov
add
mov
fcompl
or
mov
dec
sub
fsubrl
mov
and
xchg
cld
frstor
bound
es
pop
sti
push
cmpsl
xchg
or
cmpsl
push
add
jge
aad
jle
pop
jmp
jl
test
cmc
adc
icebp
xchg
es
inc
cwtl
mov
negb
ss
aam
xchg
inc
out
mov
mov
aaa
pop
pusha
test
insl
addl
jb
icebp
pop
movsb
sbb
mov
or
movsl
mov
hlt
rcll
lods
or
and
sarl
or
jno
mov
xor
cld
adc
xor
je
dec
int3
sar
xchg
or
jno
mov
shr
add
popa
sbbb
test
std
mov
popa
inc
test
sbb
repz
mov
loope
dec
inc
in
ret
loop
add
xor
adc
dec
jecxz
out
push
cli
test
inc
int
jg
mov
xchg
scas
decl
inc
xchg
decl
outsb
decb
mov
jmp
mov
rcll
mov
lds
jbe
sbb
dec
sarl
ret
jmp
mov
decl
rorb
or
arpl
sbb
sub
stos
sub
nop
sahf
scas
fists
lds
in
cmpb
enter
sarl
inc
lea
push
lods
mov
popa
xchg
in
push
mov
xor
dec
loop
pop
jge
jae
ficompl
add
or
and
jl
and
pusha
push
testb
sbbl
adc
xlat
push
rcrb
dec
jge
adc
movsl
mov
jnp
pop
xchg
std
into
add
in
cmp
cmpsl
es
mov
cmp
clc
inc
scas
in
int3
arpl
aam
add
mov
mov
enter
cmp
dec
aaa
adc
jp
push
int3
loope
sub
fidivs
cmpsl
xchg
inc
test
fdivrs
adc
scas
xchg
mov
dec
mov
inc
fs
dec
sub
popf
xchg
outsl
mov
test
jge
insl
sbb
mov
cmpsl
add
leave
jmp
inc
mov
test
jnp
test
sub
scas
enter
push
mov
mov
and
mov
cmpsl
ljmp
push
fsubrl
idiv
out
sub
or
push
aam
repnz
inc
inc
mov
sbb
jl
cmp
and
sahf
jbe
pop
ljmp
inc
mov
es
push
shrd
cmp
nop
dec
lods
add
mov
pop
mov
mov
imulb
movsb
mov
dec
jl
push
in
call
in
iret
mov
test
imul
xchg
sbb
and
pusha
icebp
sub
fstl
jne
es
subb
in
shrb
test
mov
adc
stos
repnz
scas
movsl
aad
cwtl
bound
dec
mov
jle
add
jecxz
mov
iret
dec
xor
loopne
stos
sub
cmpsl
cmpsb
adc
test
popl
and
jns
in
and
sub
jns
jmp
lret
iret
and
push
rclb
nop
mov
or
jge
iret
jp
dec
pop
les
jmp
cmp
xchg
lret
sub
or
dec
test
pop
es
shlb
xchg
les
add
jne
dec
sbb
and
fistps
adc
ja
adcl
sbb
pop
andl
in
pop
aam
push
sbb
jecxz
xorb
mov
and
mov
or
sbb
dec
std
sbb
or
lret
add
mov
and
push
js
clc
sti
sub
test
mov
xor
push
gs
mov
cmc
xchg
jo
rorl
mov
xorb
in
dec
xor
dec
hlt
add
mov
imul
jnp
pop
loop
sbb
cmp
cld
aas
mov
add
inc
sub
mov
mov
adc
dec
scas
rclb
mov
lret
pop
pop
sbb
hlt
enter
mov
or
jmp
sbb
pop
push
jmp
pop
lar
dec
add
sub
andb
stc
mov
hlt
outsb
mov
cmp
jp
jmp
dec
xor
les
imul
jl
or
fadd
data16
pop
or
push
loop
in
mov
mov
imul
mov
testb
lcall
les
stos
and
mov
xchg
sbb
movsl
sbbb
divl
jne
pop
ss
mov
cld
pop
mov
nop
cwtl
jne
sahf
lods
js
sub
xchg
dec
mov
lock
sbb
and
pusha
in
push
leave
cs
clc
iret
icebp
and
mov
insb
mov
ret
popa
dec
out
jns
add
shrb
dec
xor
sbbb
push
or
scas
mov
aas
push
lret
divb
lock
fists
add
mov
int
test
sub
mov
pop
adc
enter
inc
pop
aam
das
jecxz
mov
mov
jecxz
jl
add
cmp
bnd
dec
popa
bound
lret
movsb
jmp
out
pusha
rorl
cltd
jl
stos
cmpsb
imul
inc
xchg
or
adc
add
dec
push
shll
mov
aas
jb
nop
iret
jge
not
push
hlt
xchg
mov
push
xchg
lea
pop
adc
sbb
xchg
inc
loopne
inc
sub
pusha
call
ljmp
sbb
idivl
test
or
mov
jne
insb
push
test
cmp
cli
std
lahf
fstpl
mov
cmc
das
outsb
aad
movsb
cwtl
addb
xlat
inc
dec
outsl
imul
leave
lcall
movsb
es
stc
pop
and
add
or
imul
sbb
ret
mov
das
lret
sub
and
cmpb
daa
test
sbb
bound
xchg
ss
inc
pop
scas
aam
ret
lret
pop
loop
xor
popa
cwtl
mov
inc
cli
loope
inc
stc
push
into
insl
dec
std
cmp
aaa
test
dec
arpl
push
movsb
test
push
loope
lea
push
jne
cwtl
scas
sub
cmp
jnp
fidivl
movsl
ja
cltd
in
pushf
xchg
mov
das
xorb
mov
int3
sahf
push
lret
pop
pop
repz
daa
movl
and
adc
mov
xorb
fcmove
movb
rcll
or
inc
lret
push
mov
mov
jae
mov
push
add
add
aad
aaa
mov
mov
push
adc
or
popa
pop
int
hlt
aas
insl
inc
pop
sti
int3
fcomps
xorb
mov
lods
or
lahf
adc
enter
adc
fistl
fnstenv
insl
cmp
fdiv
mov
push
mov
mov
repnz
inc
xchg
cmp
push
inc
add
add
pop
test
and
push
sahf
movsb
mov
pop
out
cmp
mov
pop
add
xor
add
jno,pt
jecxz
scas
lods
xor
mov
push
xor
mov
inc
imul
xchg
fcmovbe
leave
inc
mov
cmpsb
stc
scas
lret
or
push
das
fildl
xchg
mov
mov
mov
fildl
add
cld
and
rol
hlt
or
jp
mov
fdivs
push
dec
mov
mov
leave
dec
sti
lea
gs
xor
inc
outsl
jnp
pushf
jne
out
mov
hlt
pop
scas
sbb
scas
test
std
mov
fmull
dec
aad
cs
testb
add
outsl
mov
lret
mov
mov
jp
sti
clc
add
adc
push
lahf
test
add
lock
loop
fs
repz
add
lock
fistps
nop
stos
ja
clc
and
jle
mov
ljmp
sbb
repnz
cmpsl
repnz
inc
xor
or
add
mov
out
decb
mov
movsl
subb
adc
movsl
lahf
rorb
inc
dec
je
push
dec
pop
clc
shll
aaa
jne
jo
imul
push
xor
adc
jp
cmpsb
jae
stos
jns
mov
pop
mov
mov
fcmovnu
fsts
fldcw
test
arpl
jae
stos
inc
movsb
jg
mov
test
mov
dec
inc
mov
mov
inc
mov
pop
xchg
or
fst
push
pop
push
mov
lret
jmp
push
cmp
sub
and
pop
mov
sub
enter
dec
adc
or
dec
jle
add
mov
ss
in
ds
jl
fistpll
and
int
sbb
jp
pop
xor
mov
cmpsb
enter
add
push
out
pop
sub
xchg
cli
stos
mov
dec
jmp
push
adcb
pop
cmpsb
dec
outsb
rclb
xor
ss
or
popf
in
mov
sub
sub
xor
scas
inc
stos
xchg
add
mov
adc
adc
adc
mov
enter
cmpsl
or
mov
enter
mov
or
and
lret
pop
mov
inc
xchg
xchg
loopne
stc
int3
hlt
sbb
repnz
mov
mov
adc
push
leave
or
push
int3
jl
adc
pop
or
jl
out
out
or
mov
cmp
out
mov
fildl
xor
jmp
stc
ljmp
add
dec
loop
test
cli
popf
sti
or
mov
mov
in
and
addl
sbb
cmc
jp
ss
and
lock
dec
inc
in
or
inc
popf
repnz
xorl
hlt
stc
pop
test
mov
inc
jne
icebp
dec
push
hlt
xor
pop
cld
jne
lea
pop
adc
jns
jns
aaa
int3
push
xorl
cmpl
jo
sbb
fsubrl
inc
jo
mov
mov
push
inc
mov
add
in
imul
adc
add
nop
enter
call
fisubs
hlt
or
pop
je
adc
cmp
sub
dec
insb
jae
adcb
rcl
and
cmpsl
jns
cwtl
rclb
enter
es
imul
enter
jle
add
mov
ds
mov
popf
mov
mov
or
pop
xlat
jp
sbb
mov
dec
insb
fidivs
or
loop
xchg
dec
xorb
addl
jg
ret
inc
and
stc
pop
xchg
dec
ss
lea
jnp
sbb
pusha
mov
inc
cmp
cwtl
outsb
jno
fstl
stc
punpcklbw
lock
pop
sbb
call
xchg
mov
les
mov
or
jb
push
aam
rolb
pop
clc
dec
lahf
cld
shr
scas
outsl
inc
inc
scas
cwtl
lret
orl
mov
mov
add
mov
fcompl
jne
sar
lret
in
ljmp
jne
pop
cs
xor
std
add
fstps
inc
mov
inc
jge
and
cmp
mov
out
cmpsl
and
or
into
fnstsw
jmp
in
ret
mov
sub
outsl
push
lods
test
and
and
inc
test
fucomip
stos
lds
bound
sub
bound
mov
stc
adc
test
enter
sahf
mov
lret
mov
adc
leave
out
pop
jae
cmc
popf
add
std
es
mov
cmp
inc
add
aas
mov
ficompl
xchg
ret
js
out
sub
std
cwtl
pop
mov
cmp
jbe
mov
cmpsb
mov
movsb
mov
push
test
adc
hlt
mov
das
xchg
adc
push
push
sub
pop
loope
mov
fs
dec
aas
adc
jnp
xchg
dec
dec
cmpsb
mov
mov
enter
imul
in
jle
dec
adc
dec
sbb
scas
shl
cwtl
cli
sbb
mov
jne
inc
jbe
sbb
int
xor
push
fists
mov
sub
stc
imul
scas
adcb
adc
insl
add
mov
shl
push
push
test
loop
test
add
fimuls
lods
in
call
cmp
adc
push
data16
aam
adc
dec
dec
cmp
popa
addb
mov
ss
cmp
in
das
jle
jl
cld
jnp
mov
inc
scas
and
or
in
movsl
inc
mov
fstpl
or
mov
mov
mov
mov
out
lods
add
and
push
aas
mov
mov
add
push
mov
subl
out
adc
loop
or
and
push
cmpsb
dec
dec
push
enter
mov
push
dec
popf
jge
rol
pop
call
movsb
stos
pop
lods
sub
or
fdivs
jne
jbe
add
adc
enter
hlt
mov
and
adc
jmp
jp
push
cmp
mov
ss
xchg
mov
push
popa
push
out
xor
or
popf
test
scas
pop
mov
outsl
xlat
inc
cmc
lret
add
add
mov
or
pop
jge
inc
inc
dec
scas
mov
stos
fimull
add
and
ds
popf
pop
mov
pop
jae
xor
int3
je
adc
ja
jge
sbb
cmpsb
xor
aas
pop
adc
inc
rorl
je
adc
pop
mov
jecxz
les
cmp
xchg
enter
int
loopne
enter
lret
pop
adc
pop
dec
mov
call
sub
pusha
inc
xor
movsl
jns
jecxz
cmc
bound
sbb
jne
imul
mov
repz
clc
dec
roll
mov
nop
shrb
movsb
mov
xchg
push
add
add
enter
std
jnp
mov
into
inc
sbb
clc
cmpsb
push
aas
adc
jbe
and
lcall
outsl
lcall
outsl
leave
inc
jo
ljmp
fwait
dec
jl
mov
loop
jmp
loopne
dec
sahf
rcll
cs
or
xchg
adc
jp
jg
jo
sbb
iret
fistps
hlt
in
or
push
inc
cmp
xchg
mov
stc
sbbl
sbb
sahf
imul
or
mov
scas
mov
adc
or
push
rorl
aas
jmp
rcr
or
or
mov
xchg
in
ret
rolb
es
out
xchg
aam
push
hlt
mov
aaa
cld
in
sbb
sub
rolb
xchg
or
push
inc
inc
jge
add
mov
sub
pop
mov
jg
dec
add
mov
popa
leave
mov
repz
jo
push
or
and
inc
fadds
in
jle
in
xor
das
cmp
shrl
pusha
jne
fimuls
jbe
or
push
jns
arpl
inc
fs
xor
jne
mov
or
pop
divb
mov
in
inc
push
xchg
xchg
pusha
jle
mov
mov
or
cmpb
push
xchg
jo
mov
inc
fldl
jecxz
shlb
adc
nop
and
repz
mov
cld
cs
mov
jmp
sahf
cmpsb
mov
and
xorb
cs
imull
pop
cmp
mov
and
xchg
inc
mov
andb
cmpsl
ret
mov
dec
mov
inc
stos
mov
ja
xor
mov
add
out
add
or
lcall
add
cmp
stos
xchg
push
ljmp
loopne
insb
scas
adc
xchg
adc
add
add
popa
ffreep
mov
movsl
xor
fmul
xor
xchg
lret
xchg
jl
sub
js
cs
mov
filds
icebp
dec
jg
mov
mov
push
sbbl
std
jp
mov
push
divb
int3
enter
loopne
jecxz
mov
add
lret
push
test
pop
andl
jmp
jbe
fdivs
loopne
cmc
das
mov
lds
xchg
lods
mov
movsl
std
sub
and
or
xchg
stos
fadd
mov
dec
xchg
cltd
sub
cmpsb
sbbb
lods
clc
sub
jle
push
insl
mov
hlt
jnp
push
xor
fimull
dec
mov
or
jg
sub
mov
test
lcall
inc
push
js
cmp
andb
mov
fists
cli
test
push
mov
jle
inc
movsb
jg
bound
dec
and
loope
nop
jne
fsubr
aam
sub
xor
popa
jne
push
pop
aam
stos
pusha
cwtl
sub
cltd
mov
nop
mov
pop
into
xor
mov
cmp
idiv
test
inc
pop
jne
push
or
jbe
mov
mov
mov
bound
jmp
xchg
fidivrl
inc
add
and
rorl
inc
sub
cmp
mov
mov
sbb
imul
mov
fs
cmpsb
aad
mov
movsb
mov
or
pusha
in
xchg
outsb
pushf
clc
into
dec
mov
push
test
in
inc
rcr
test
addb
icebp
pop
pop
cmp
stos
push
fcompl
cmpxchg
call
es
addl
rorb
jne
inc
or
mov
or
or
movsb
cs
pop
push
pop
add
mov
push
in
les
imul
xlat
xor
test
int3
call
lahf
scas
fmul
movsl
sbb
scas
clc
faddl
mov
shll
cmpsb
push
or
clc
lret
push
fbstp
movsl
ljmp
push
das
mov
data16
cmpsl
test
mov
repnz
xor
in
xor
lcall
popa
xorl
push
jl
negl
add
jmp
mov
cwtl
fsub
std
and
rorl
movsl
jnp
jae
jno
sti
and
sub
arpl
loop
pop
out
sbb
xchg
cvtpi2ps
add
loopne
lods
jns
andl
mov
add
dec
mov
js
fwait
or
mov
ljmp
pop
movsl
mov
sahf
inc
add
inc
mov
xor
push
int
add
sbb
jnp
sub
adc
mov
push
stc
pushf
xor
xor
repnz
insl
or
push
imul
mov
mov
cmc
push
icebp
jae
cwtl
mov
mov
data16
imul
push
fisubrs
cmovs
jo
pop
in
pop
mov
mov
xchg
mov
and
out
stc
adc
mov
xchg
imul
mov
pushf
stos
mov
sub
sub
cld
push
mov
cs
dec
bound
mov
add
les
and
sti
int
mov
mov
clc
jp
and
fistl
inc
jbe
inc
cmpsl
inc
xchg
inc
aad
fidivl
notb
inc
les
es
call
adc
lcall
mov
mov
push
add
add
stos
enter
pop
pusha
shll
subb
jp
and
idiv
test
xor
mov
mov
jge
je
push
sarl
sub
inc
or
js
inc
push
mov
leave
mov
cltd
fidivrs
adc
fsubrl
mov
js
mov
imul
mov
inc
lea
mov
lock
push
or
inc
xor
ds
hlt
fdivp
dec
add
jle
test
cmpsl
jg
lea
leave
shr
pop
xchg
repz
test
in
jle
and
push
push
mov
push
ret
mov
adc
xchg
shl
cmpsl
pop
add
int
addb
popf
fs
stos
jne
fiadds
fcmovne
scas
mov
mov
loop
bndldx
imul
insl
pusha
gs
arpl
xchg
and
pop
mov
lret
mov
mov
dec
xchg
arpl
in
adc
iret
popf
lret
fstp
imul
scas
jle
mov
push
rorb
mov
sahf
ss
dec
daa
xchg
dec
jl
movsb
loopne
or
xchg
std
mov
rcr
or
ret
lock
sub
dec
mov
xor
fcmovnu
sub
arpl
push
mov
push
inc
test
stos
xor
jno
mov
push
add
jo
sub
dec
pop
in
and
into
hlt
xchg
gs
and
mov
cltd
mov
and
out
fnstenv
jne
loope
add
add
testb
in
shlb
push
scas
push
jne
cmp
arpl
cmp
pop
jmp
sub
push
mov
hlt
dec
adc
andl
sub
test
scas
shrl
xchg
popf
and
mov
dec
test
ljmp
hlt
dec
sbb
jp
xlat
push
mov
xchg
dec
aad
clc
movsb
inc
sbb
mov
mov
lods
rcrb
add
out
dec
std
cwtl
insb
inc
mov
popa
movsl
fdivl
pop
adc
mov
mov
and
xor
jg
in
or
test
addr16
pop
stc
sub
pop
push
sub
aas
lret
xor
mov
add
outsb
push
inc
cmp
lods
mov
sub
pushf
xor
add
cmovbe
loop
aaa
rclb
add
adc
pop
sub
fbstp
movsb
push
enter
cwtl
xchg
jne
cmpsb
dec
push
add
mov
repz
pop
cwtl
repnz
lods
fs
rcll
sub
mov
xchg
push
jae
out
jge
mov
sti
or
shlb
fwait
jl
shl
xchg
dec
cmc
scas
clc
addl
testb
pop
mov
dec
pop
popf
push
ds
push
cmp
xorl
mov
cltd
jge
push
xchg
cmp
dec
or
or
rcrb
leave
movsb
sti
lahf
shrl
data16
add
test
lret
fadd
cmpsb
sub
das
ror
rolb
pop
decb
stos
rcrl
lods
clc
sbb
stos
push
mov
rclb
add
adc
out
fisubrl
and
adc
lods
pop
or
hlt
pushf
push
pop
pusha
lods
test
lods
sti
ljmp
movsl
add
in
inc
ss
ljmp
jl
mov
xchg
int
push
jnp
lock
andl
movsb
lret
xchg
lret
outsb
mov
lahf
push
rorb
popa
inc
xchg
adc
inc
rcrl
dec
mov
jno
add
jbe
loop
cld
lea
imul
cli
jmp
test
lods
fists
bound
scas
mov
jns
dec
arpl
or
jg
xor
js
xor
into
das
cmp
push
sbb
dec
aas
rcll
jp
dec
loope
inc
mov
in
into
push
out
addl
loop
sub
lcall
data16
imul
loope
mov
hlt
lock
les
in
or
mov
jmp
shlb
mov
mov
orl
jg
div
lahf
pop
out
lret
lret
scas
fdivr
loop
xchg
inc
xor
cmp
mov
fbstp
rep
andb
call
ss
out
sub
cmp
cwtl
push
cs
mov
incb
add
call
pop
movsb
sbb
test
into
sbb
mov
or
les
sub
push
mov
popf
in
cwtl
iret
lods
and
mov
mov
xor
mov
mov
call
outsb
adc
stc
nop
rolb
and
subl
mov
cld
jns
mov
ret
jecxz
out
enter
lods
push
add
hlt
rol
les
test
loopne
mov
ja
mov
xor
insb
test
push
loop
push
mov
push
jne
cmpsl
mov
scas
lds
stos
cmp
push
adc
testb
fisubrs
repz
push
stos
adc
mov
scas
sbb
into
stos
xchg
testl
push
jbe
dec
in
push
cwtl
rol
pop
or
hlt
stos
cli
jg
dec
scas
out
scas
test
pop
or
jle
movsb
cmp
inc
sbb
mov
and
xchg
int3
dec
jne,pt
cltd
jmp
xchg
enter
ret
cmpsl
test
rcll
loop
mov
pop
sub
push
gs
mov
in
pop
pop
icebp
or
or
ret
std
mov
mov
pop
sub
cmp
mov
xor
mov
mov
lcall
ret
int
mov
and
imul
mov
or
xchg
pusha
jl
fcoml
rcll
ja
fwait
xchg
mov
cli
pop
movsb
pop
mov
adc
decl
repnz
fsubl
pop
loop
sub
xchg
ds
cs
dec
xchg
jmp
subl
inc
push
jecxz
mov
fwait
add
mov
mov
sarl
mov
adc
addr16
aas
mov
cmp
mov
push
test
lods
mulb
fisttpl
test
inc
popf
fwait
sub
lods
test
jmp
mov
div
dec
jne
stc
mov
dec
das
rol
mov
jmp
pop
das
out
dec
jge
mov
add
mov
in
xchg
lcall
inc
out
dec
test
xor
pusha
and
adc
sahf
pop
dec
mov
pop
add
lods
sub
adc
mov
jg
cmp
pusha
push
sub
mov
mov
push
jne
sub
sub
popf
mov
mov
jp
cmp
fdiv
dec
push
pop
hlt
adc
rcl
fbstp
mov
nop
into
cmp
clc
push
data16
inc
fldl
fldt
cmp
stos
sbb
movl
jnp
add
in
test
ret
pop
divl
jnp
jnp
sub
xorb
pop
or
js
aas
sahf
repz
jle
mov
mulb
nop
or
push
das
inc
cs
pop
cmp
and
add
push
pop
push
lds
adc
movsb
sub
dec
xor
mov
and
dec
pop
jmp
adc
inc
push
inc
ja
adc
stos
jg
leave
cwtl
xor
jp
jp
int
cmp
clc
cmc
fdivr
push
cmpsl
xchg
or
lret
pmulhuw
pop
xchg
xchg
test
jno
std
test
pusha
js
cmpsb
adc
divb
data16
sahf
push
out
outsb
insl
into
hlt
pop
lock
rcr
inc
pop
add
das
xor
sar
es
test
and
int
add
and
add
dec
or
xchg
add
xchg
jge
sar
or
jnp
leave
std
enter
jae
ds
sbb
out
js
xchg
out
sbb
leave
imul
xor
mov
fistpll
and
test
sti
inc
ret
jl
cli
cmp
inc
xorl
pop
xchg
mov
sahf
hlt
mov
pusha
out
mov
es
stos
jg
int3
fmull
lret
in
stos
loope
mov
popa
mov
movsb
lcall
in
mov
jnp
mov
xor
and
movsl
aas
outsl
stc
nop
sbb
shlb
sahf
cs
cli
inc
push
add
mov
jle
ss
and
pusha
es
ret
rcl
or
data16
sti
daa
test
cli
outsl
testl
jnp
pop
xor
rcrb
push
or
mov
inc
popa
mov
hlt
xor
add
cmp
jne
out
cli
adc
xor
jbe
mov
cs
mov
push
push
repz
nop
push
cmp
popf
pop
or
dec
mov
lahf
movsb
lret
repnz
dec
add
test
mov
std
gs
shrl
mov
xchg
lea
xchg
mov
test
fbstp
add
mov
jb
sbb
scas
push
add
hlt
loop
xchg
xlat
fbld
dec
pushf
es
push
shrb
roll
pop
add
cmpsl
xchg
test
leave
cmpsb
adc
and
shlb
jne
fldl
mov
std
add
jo
int
and
ljmp
jbe
mov
and
xchg
lods
dec
je
gs
jle
leave
addl
fs
mov
lock
pop
sub
pop
mov
mov
add
mov
insl
dec
inc
mov
mov
mov
add
enter
pushf
jne
cmp
ja
mov
clc
clc
ljmp
xlat
out
mov
inc
jo
hlt
mov
cmpsl
xlat
scas
iret
push
mulb
pushf
loopne
xor
inc
inc
fsubrp
loop
xchg
xchg
mov
jns
cmp
scas
mov
dec
cmc
hlt
cmp
enter
xchg
loope
xor
adc
add
loopne
mov
dec
cld
std
cmp
ret
das
push
test
hlt
int3
inc
cs
mov
sub
dec
clc
mov
xchg
inc
mov
cmc
je
nop
pop
xchg
enter
mov
jb
dec
stc
adc
mov
jae
mov
dec
mov
xor
inc
push
jg
mov
lds
jg
cmpsl
push
pop
xchg
repz
mov
pop
jp
mov
dec
push
in
mov
mov
sahf
dec
xorl
push
add
mov
add
adc
popa
dec
cli
das
lret
sub
imul
mov
xchg
idivb
mov
xlat
rcrl
pop
dec
jnp
xchg
cwtl
push
xlat
insb
mov
mov
xchg
push
notl
mov
push
sahf
and
cld
jl
pop
lcall
push
add
push
cli
rorl
push
aad
inc
sub
pop
pop
icebp
mov
outsb
pop
inc
lret
jg
or
xor
fcompl
pop
fdivl
scas
fsubrp
mov
idivl
mov
or
xlat
sbb
inc
lcall
mov
scas
js
rcll
fldcw
sub
adc
and
shl
jne
cwtl
jge
add
push
clc
jmp
outsb
repz
scas
out
outsl
ret
inc
es
mov
jne
ror
push
pop
test
pop
pop
out
test
jecxz
cmp
adc
cwtl
lea
addr16
and
sub
mov
pop
xor
jne
loope
jbe
push
xchg
sti
mov
and
or
push
lock
pop
rcl
shrb
sbb
xchg
mov
int3
mov
sub
leave
push
outsl
movsb
xor
xor
jp
add
jae
xchg
push
shr
and
mov
jl
stos
test
mov
sub
test
filds
lock
push
ljmp
mov
jae
imul
push
mov
popa
jne
lods
dec
roll
push
shrl
shll
mov
shrl
ret
push
inc
add
xlat
or
xchg
into
das
sub
sub
add
pop
mov
jne
cwtl
xchg
stc
stos
inc
push
lods
movsl
cwtl
mov
loope
xchg
add
pop
push
jnp
xchg
mov
imul
clc
or
or
dec
or
fnsave
pushf
xchg
lret
mov
cmp
adc
push
test
xor
inc
ljmp
add
rcrl
lods
jne
jle
pop
addr16
mov
mov
addr16
xchg
pop
ja
scas
mov
sbb
fmuls
insl
add
jl
mov
mov
push
roll
inc
addb
es
and
inc
ret
or
imul
mov
mov
jmp
ss
into
add
fimuls
popa
stos
and
xchg
push
fwait
mov
add
cld
mov
fs
pop
je
pop
das
mov
sub
xlat
pop
or
gs
loop
and
stos
pop
mov
enter
xchg
or
in
pop
pop
inc
rorb
divb
jg
jge
js
inc
xor
mov
jbe
cmc
scas
lcall
push
out
jecxz
cmpsb
imul
arpl
loopne
jmp
pop
cs
and
jnp
imul
jns
incb
inc
leave
sti
shrb
mov
or
sbb
mov
aad
mov
dec
add
mov
jns
js
sbb
xchg
add
jb,pn
xchg
in
mov
test
pop
pop
or
dec
cmp
mov
fcomip
mov
pop
scas
inc
inc
pop
push
push
lcall
jns
adc
mov
xor
mov
fstl
xchg
insb
movsl
imul
sti
add
daa
mov
rorb
mov
xchg
inc
arpl
jle
pop
push
jno
xchg
cmc
xor
ret
add
scas
out
cmpsb
int3
sbb
pop
cmp
enter
inc
add
push
lea
mov
mov
jg
mov
jno
scas
testl
cmp
call
dec
aas
sub
cli
or
cmpsb
push
inc
xorb
pushl
mov
pop
mov
outsb
je
call
mov
ljmp
xchg
jne
adc
test
or
idiv
js
pop
sub
push
dec
iret
ret
test
mov
pop
xor
add
enter
int3
push
cmc
enter
loopne
xchg
movsb
gs
mov
mov
lods
jp
xchg
jnp
fistps
mov
or
stos
inc
mov
pop
out
hlt
mov
ss
mov
cli
mov
jne
stos
jmp
xor
xor
mov
mov
push
in
sti
insb
sub
ljmp
sbb
ss
aas
jle
ja
sub
aaa
jl
ja
mov
jnp
pop
hlt
mov
dec
xlat
cld
push
or
ljmp
sub
pop
ds
mov
dec
in
mov
inc
pop
pop
movsl
fsubrp
add
out
jp
leave
or
pop
xchg
jnp
hlt
lahf
or
lods
add
lock
adc
jns
push
lods
popa
and
add
inc
repz
push
andb
jmp
nop
xchg
cwtl
hlt
jecxz
adc
mov
mov
adc
sub
cmpsb
dec
jne
insl
lret
mov
ret
push
pop
out
dec
mov
cmpl
sbb
stos
hlt
fs
jnp
out
jns
aas
and
cld
sub
aas
repz
mov
rcrb
sbb
mov
mov
push
pop
xchg
enter
push
hlt
xchg
pop
jge
fiadds
and
cmp
nop
pop
sub
xchg
cmpsb
cmpsl
lahf
inc
xor
out
iret
aam
hlt
dec
enter
das
test
mov
je
ds
xor
lcall
jne
mov
clc
scas
in
ljmp
add
adc
pushf
jb
lret
inc
pusha
xchg
jle
xorl
lods
fistpl
sub
push
pop
sub
rorl
add
mov
fdivl
fwait
and
scas
lods
pop
add
fs
adc
cmp
negb
hlt
ljmp
js
ror
adc
add
test
sbb
lret
es
ja
lea
pop
es
imul
in
mov
sbb
xchg
jle
pop
inc
push
pop
push
jg
push
and
mov
mov
pop
mov
hlt
mov
jp
jle
inc
mov
lods
xrelease
fbstp
push
sub
sbb
pusha
jae
pop
insb
mov
jns
mov
imul
dec
jno
jae
or
lods
cwtl
fadd
mov
test
xchg
xchg
fcmovne
jbe
sub
xchg
inc
xor
dec
push
inc
push
xor
cmp
dec
fbld
jne
imul
div
fwait
xchg
push
pop
inc
stos
xor
push
push
shrl
mov
in
adc
neg
pop
shlb
es
jne
adc
xor
and
cmp
aad
into
mov
jl
xlat
sbb
fisubs
sbb
push
pop
dec
stos
cli
push
add
xrelease
je
jns
jne
and
hlt
cmc
dec
pushl
push
adc
push
push
add
out
add
clc
repnz
add
loop
xlat
ficomps
ret
jecxz
and
mov
lret
sahf
or
mov
adc
or
adc
inc
inc
adc
mov
dec
fidivrl
xor
addr16
divl
divb
testb
cmp
push
shrb
std
or
enter
out
mov
xor
xor
jp
mov
mov
adcb
push
es
inc
or
cmpl
test
cmp
dec
mov
push
cmp
sbb
sub
cmp
xchg
push
imul
mov
cld
cwtl
sub
fsubl
push
add
rcrb
les
add
jne
adc
pop
sti
test
xchg
mov
sub
lock
jne
or
jbe
jbe
xorb
cmp
ljmp
andl
mov
hlt
popf
stos
es
hlt
lock
pusha
mov
jle
dec
push
sahf
or
out
add
sub
ret
orl
push
pop
inc
ja
outsl
cs
ret
jbe
psubsw
xchg
inc
pop
gs
mov
pop
lret
xchg
test
nop
push
nop
stos
mov
cmp
test
testl
dec
mov
cmpsb
add
push
add
enter
test
popa
jmp
lock
jns
adc
add
and
negl
roll
cmpsb
push
lods
andb
mov
pop
jns
sbb
and
cmp
and
jle
les
mov
cmpsl
mulb
divb
cmpsl
adcb
push
mov
mov
inc
pop
or
stos
mov
xor
js
and
sti
out
pushf
push
mov
sar
arpl
mov
push
dec
cmp
add
jne
xor
shrb
daa
das
pop
adc
outsb
pop
or
shll
cmp
es
inc
into
lock
adc
xchg
and
pop
pusha
or
inc
aad
lods
mov
pop
xchg
add
xchg
mov
jl
aam
cld
test
jl
fisttpl
or
pop
iret
add
rorl
or
loopne
cmp
jecxz
imul
add
dec
jnp
pop
mov
sbbl
mov
jno
jp
jb
nop
pop
div
bnd
mov
fdivrs
and
outsl
mov
add
mov
or
es
lcall
outsl
test
lods
call
inc
sbb
push
popa
mov
jp
sti
mov
sahf
js
cmp
cmp
mov
ret
outsl
fmull
mov
movsb
lahf
sub
xor
mov
sysexit
lcall
lret
inc
and
sbb
mov
int3
mov
pop
ret
adc
lcall
dec
fcomi
icebp
inc
popa
cmp
testl
inc
lcall
or
popa
outsb
aad
sbb
mov
pop
mov
lcall
clc
jg
pusha
inc
mov
cld
ja
push
cmp
popa
test
sub
inc
pusha
out
jne
xchg
loop
repnz
es
std
push
out
add
out
jmp
shr
pop
movsl
test
ja
push
call
xor
add
test
inc
pop
shlb
rorl
lcall
inc
movsb
pop
cld
mov
lret
out
jge
roll
ficomps
adc
lock
mov
dec
aas
pop
enter
sbb
jo
dec
andl
ret
cmp
and
jnp
push
add
push
loop
mov
mov
mov
cmp
add
jne
stos
clc
js
inc
mov
jne
movsb
leave
test
mov
test
data16
inc
sub
aam
aam
add
add
test
loop
pushf
subb
es
fcompl
mov
pusha
jae
fmull
inc
xchg
or
loope
cli
mov
mov
arpl
in
jg
movsl
or
mov
mov
mov
xchg
cld
jnp
movsl
cmp
lcall
pop
mov
sbb
sub
mov
sahf
inc
jne
out
cs
mov
cltd
inc
test
movsl
pop
mov
insb
cs
incb
xchg
xor
push
add
sub
mov
adc
gs
fsub
push
and
push
mov
mov
pop
lea
inc
pop
rcr
mov
sub
jg
mov
sub
sub
mov
pop
adc
inc
mov
cmpsb
hlt
aad
ja
pop
and
adc
sbb
in
pop
fs
jne
lods
cli
movsb
subb
jl
push
test
out
xchg
in
jp
pop
roll
add
fadd
mov
push
stos
or
imul
dec
xor
xor
arpl
jp
mov
syscall
inc
rol
cmp
adc
into
aam
hlt
popa
in
test
ret
int
sbb
sbb
test
das
mov
mulb
mov
mov
cmp
movsl
test
adc
push
shll
std
mov
orb
mov
xor
push
leave
xchg
xchg
test
jle
sub
and
es
push
mov
enter
hlt
or
pop
lods
sarl
iret
es
ficompl
and
in
lcall
std
rcrl
ret
fucomp
jnp
or
pushf
and
jnp
inc
int3
cmp
inc
imul
imul
cmp
or
sbb
fnstcw
stc
mulb
fnstenv
imul
jp
jmp
mov
push
jge
mov
das
enter
stos
mov
hlt
mov
fstl
pop
pop
adc
or
xchg
out
insl
adc
push
dec
mov
testl
xor
iret
or
pop
stc
test
icebp
pop
adc
sub
das
gs
mov
rcrb
mov
add
inc
cld
decl
loop
push
inc
mov
fstpt
lret
dec
pop
arpl
adc
add
pushf
inc
sub
lcall
jne
pop
jbe
imul
divl
xor
mov
sbb
fxch
xchg
sahf
call
cmp
out
add
jbe
inc
fiadds
inc
xchg
cmp
call
adc
fsub
hlt
mov
popa
and
std
scas
cmc
mov
mov
ss
push
arpl
jns
cli
inc
and
cmp
outsl
jne
lods
add
popf
jo
mov
rcrl
and
movsl
jle
int
test
push
imul
mov
lods
cmp
lahf
cwtl
test
cmp
jne
dec
mov
shll
lods
or
movsb
mov
std
int3
inc
dec
xor
mov
mov
and
loopne
enter
jl
cmp
test
je
test
adc
jne
mov
shll
mov
mov
ja
push
push
push
push
xor
int3
pop
mov
fstpl
stc
aam
cli
mov
icebp
add
inc
xor
cli
shlb
enter
movsl
xchg
stos
in
in
imul
out
addl
shl
out
and
cli
into
loope
lock
loop
enter
jno
push
push
mov
rcll
test
inc
cld
mov
gs
mov
mov
sub
cmc
dec
and
jmp
jge
mov
fisttps
aam
nop
cltd
pop
enter
ret
inc
repnz
aaa
daa
addl
inc
cli
cmp
push
fsubrs
test
insl
and
test
mov
add
ljmp
xchg
test
leave
inc
aam
ja
fisubl
xorb
xchg
pop
mov
adc
dec
adc
xchg
imul
sub
out
cmp
jo
jle
pushf
cld
rcrl
das
ljmp
and
pop
sub
mov
dec
pusha
push
out
mov
insb
pushf
pop
cs
cltd
lock
cmp
add
adc
cld
adc
push
cmp
cmpsb
push
test
out
mov
mov
shlb
rcr
mov
fcmovne
sub
or
fwait
and
nop
pop
and
rol
pop
mov
xor
sub
pop
lret
frstor
insb
int3
testb
pusha
jns
mov
rolb
mov
sub
mov
mov
mov
jne
and
enter
jecxz
mov
inc
xchg
jl
popf
fxch
leave
push
out
mov
test
inc
mov
sbb
sub
mov
fimuls
in
loop
mov
pusha
nop
mov
pop
pop
dec
pop
scas
shll
jne
mov
push
jae
jecxz
or
lds
jle
orl
mov
loope
insb
add
push
xchg
dec
lea
sbb
fdiv
mov
pop
push
xchg
push
dec
es
sarl
cmp
in
xchg
mov
sub
and
pop
int
sbb
add
xchg
xchg
add
scas
shrl
mov
fstpl
xor
or
xchg
pusha
sub
int3
mov
xchg
hlt
adc
sbb
test
jl
divb
loopne
inc
xchg
outsl
push
or
add
mov
adc
xor
scas
jmp
mov
clc
or
push
div
jge
inc
dec
mov
jae
cmpb
sub
jge
arpl
xchg
pop
stos
inc
mov
jno
adc
mov
jne
loope
lret
jg
sub
jbe
jg
jmp
xchg
pop
mov
and
adc
push
mov
shl
mov
mov
fdivr
inc
gs
xchg
mov
jns
popf
push
es
clc
daa
test
mov
neg
mov
xlat
sarl
outsl
loopne,pn
ja
xor
test
repnz
xor
seto
shl
stos
adc
out
outsl
arpl
scas
jnp
flds
push
jns
mov
mov
arpl
cltd
call
or
inc
inc
test
into
mov
mov
cltd
das
or
out
int3
jg
xchg
xchg
mov
and
add
add
daa
notl
scas
test
pop
mov
stc
scas
inc
push
mov
jle
or
xchg
sub
or
leave
lcall
subb
mov
pusha
xchg
and
cwtl
scas
push
adc
or
mov
jnp
xor
xchg
xor
and
pop
and
push
jmp
into
mov
sbb
imul
sbb
push
sahf
cmpsl
mov
add
ficoms
mov
call
scas
rcrb
mov
icebp
testl
mov
iret
js
adc
inc
inc
or
pop
insl
mov
xor
addr16
xchg
hlt
clc
xchg
mov
mov
inc
fistl
adcl
cmc
push
or
fidivrs
jb
leave
mov
scas
aas
jbe
jnp
push
inc
xchg
xor
shlb
add
mov
call
stos
adc
stos
mov
stos
dec
lret
xor
ficoml
inc
xchg
hlt
sahf
stc
cli
pop
sub
nop
jne
inc
jns
idivb
gs
or
xchg
cli
push
fimuls
and
inc
cs
fildll
cli
enter
fsubl
mov
js
lock
sbb
icebp
into
mov
sub
imul
movsb
clc
sub
mov
mov
pop
xor
movsl
neg
mov
cmp
sbb
mov
das
int
sub
xor
cltd
or
push
mov
mov
sbb
jns
incb
cmc
mov
mov
test
add
std
stos
cmp
dec
fbld
dec
insl
dec
pop
mov
js
mov
push
mov
imul
add
sarl
in
mov
lcall
jne
pop
enter
push
lods
loop
sbb
test
dec
insb
in
sub
xchg
pop
icebp
inc
push
cmp
mov
dec
fcoms
pop
xchg
xlat
mov
pop
or
add
loop
cmp
imul
and
js
jp
out
xchg
pop
hlt
inc
sub
lock
pusha
aam
arpl
in
into
pop
cmp
cli
out
mov
das
push
or
fistl
mov
adcb
xlat
in
shrl
pop
cltd
rolb
aam
push
into
mov
stos
daa
out
sbb
subb
les
in
in
xor
add
dec
jns
mov
nop
push
int
fdiv
int3
lods
fdivs
mov
call
sti
push
imul
mov
adc
out
xchg
stos
mov
mov
xchg
das
sub
dec
jp
das
inc
std
fmulp
ret
stc
inc
rorl
jbe
sub
sbb
xlat
jge
adc
ret
jl
test
mov
mov
insl
aas
dec
cwtl
jne
insb
fldt
pop
push
ret
outsl
mov
mov
hlt
fscale
pop
mov
mov
ja
cmpl
jno
movsb
movl
shll
lods
xor
jge
hlt
out
jle
inc
push
arpl
cmp
daa
enter
jnp
adc
xlat
ret
jns
lret
into
adc
pop
sub
mov
out
xor
push
test
in
outsl
test
dec
icebp
jmp
xor
add
inc
stos
in
jns
stc
movsl
cmpsl
pop
and
xor
pop
cmp
fnstenv
js
sub
loopne
inc
mov
fidivs
cltd
je
lock
shll
pushf
jne
push
cmp
xchg
pop
mov
dec
jg
mov
xchg
lds
push
inc
cs
dec
ljmp
xchg
ror
jb
sbb
das
sub
cmpsb
jne
lea
jmp
push
bound
sbb
imul
test
hlt
pusha
xchg
adc
and
sti
add
push
outsl
jp
mov
mov
mov
inc
xchg
or
std
fisttps
xlat
in
xchg
loope
mov
mov
insb
adc
cld
mov
lea
aaa
xchg
add
xchg
jle
jle
sahf
int3
push
sti
push
movsb
into
test
xor
push
gs
sub
clc
addb
dec
insb
cwtl
or
inc
movsl
mul
dec
inc
pop
out
push
arpl
xchg
lcall
add
out
jnp
add
sub
jne
cwtl
xor
leave
mov
adc
add
jns
insb
hlt
mov
mov
ds
xor
push
and
into
pop
mov
roll
push
clc
out
bound
das
int
inc
and
xchg
pop
xchg
push
pop
push
sbb
jnp
jne
pmullw
dec
sub
pushf
pop
sbb
pop
mov
addr16
xor
cli
shlb
jmp
jl
sbb
jnp
mov
push
jg
push
nop
pushf
data16
mov
add
scas
cmpsb
add
adc
lea
lret
clc
mov
lahf
frstor
inc
pop
add
test
in
dec
stc
ljmp
aam
clc
ret
dec
test
mov
or
aam
leave
mov
xor
scas
fadd
push
mov
adc
xor
or
idivb
repnz
ljmp
push
jne
jns
pop
cmpsl
int
mov
cmpl
push
imul
adc
adc
cmovbe
jo
sbb
pop
jbe
mov
subl
push
or
xchg
cmc
pop
decl
popa
add
notb
cli
pop
repnz
sbbb
nop
sub
jo
loopne
imul
repnz
movsl
icebp
xchg
mov
jl
pop
orb
popa
sub
cltd
add
mov
pop
stc
push
sub
mov
or
jge
rorb
jle
dec
pop
xchg
scas
out
sbb
fldenv
jg
inc
adc
decl
mov
scas
adcb
sbb
xor
pop
add
lahf
jbe
and
mov
jb
or
pop
pop
nop
neg
daa
jae
cmp
je
clc
cli
and
pop
pop
loope
cmp
jne
in
jp
jbe
ja
test
loope
gs
loopne
enter
and
xlat
mov
pusha
stos
add
cs
pop
dec
pop
loop
daa
hlt
fldt
cli
or
xchg
push
sub
lahf
pusha
push
loop
pop
scas
sbb
push
pop
mov
mov
std
jp
scas
les
out
sbb
pushf
aad
cli
adc
les
lret
add
jnp
adc
sub
scas
jge
pop
adc
stc
and
lods
in
fmul
sti
shrl
push
idivl
jne
jmp
push
daa
mov
mov
mov
outsl
in
xchg
jle
cwtl
inc
aas
lods
xor
test
lret
negl
data16
pushf
mov
jg
sub
andb
adc
mov
pop
jne
movsb
call
push
jmp
add
enter
fists
int3
testl
pop
mov
mov
add
and
cmp
mov
sub
sbb
nop
hlt
add
std
sub
out
mov
jns
fdivrs
add
icebp
jmp
cmp
and
aas
and
repnz
cwtl
dec
stos
or
sub
mov
xor
popf
cwtl
mov
filds
enter
sub
adc
mov
add
jbe
lock
push
dec
add
sub
sub
inc
fisttpl
mov
rcrb
pop
mov
adc
xor
cld
cmp
pop
mov
jb
roll
xor
repz
ja
ljmp
mov
jnp
fdivrs
lods
mov
mov
cld
movsb
xor
fdivp
cmpsl
loopne
shlb
insl
xchg
or
jl
js
mov
addl
test
push
mov
inc
xor
mov
sub
mov
fsubp
inc
jne
add
xchg
mov
xor
leave
stos
lea
cmp
jl
mov
nop
lods
ret
and
lods
cwtl
and
and
sahf
xchg
shrb
push
cwtl
and
mov
push
repz
adc
movsb
imul
gs
cmp
mov
outsb
pop
mov
hlt
pop
outsb
jne
mov
mov
push
aam
add
and
adc
mov
jb
pop
es
jo
fwait
gs
push
add
es
shrb
mov
mov
pop
fmuls
dec
stos
stos
loope
dec
repnz
jnp
cmpsl
mov
and
add
ss
faddl
stos
mov
jge
and
fldt
mov
mov
and
mov
scas
sti
jp
pop
movsb
popf
xorb
aam
mull
popf
push
pop
xorb
sti
gs
nop
idivl
fcomi
and
dec
loop
jecxz
inc
lods
pusha
mov
xor
aas
test
pop
in
je
dec
std
mov
int3
inc
stc
cld
hlt
bound
jge
inc
cld
adcb
rcll
outsl
mov
insb
sub
bound
inc
repz
adc
out
jo
push
push
in
rolb
addr16
arpl
pop
rcrl
xor
fdivrl
adc
pop
icebp
xlat
imul
ror
sahf
hlt
push
testb
loopne
cli
out
ljmp
push
jns
jge
cwtl
fbld
addr16
fsubrl
aad
inc
hlt
adc
pop
loopne
dec
das
leave
lcall
sbb
xor
ja
sub
and
inc
hlt
insl
and
inc
pop
sbb
and
or
inc
jne
mov
lods
inc
ficomps
mov
lret
mov
mov
mov
nop
push
test
sti
jno
addb
mov
sbb
cmpsl
inc
sbb
clc
inc
jno
add
leave
stc
shlb
or
clc
rorb
mov
leave
inc
dec
std
in
hlt
in
enter
scas
lret
push
add
xchg
jp
addb
dec
jnp
xchg
mov
push
add
cmp
int
enter
mov
mov
pop
call
add
push
idivb
shrl
jno
cs
push
test
hlt
lock
jl
fwait
add
insl
jmp
nop
mov
cli
shll
jmp
sbb
jg
repnz
daa
aad
mov
xchg
jp
lahf
jmp
ja
movsb
add
aas
test
and
out
movsl
mov
pop
inc
cwtl
or
and
inc
ja
mov
jge
or
lret
xchg
and
mov
in
pusha
loopne
movsb
xor
inc
pop
dec
jb
and
faddl
xorl
adc
cltd
jno
call
xchg
cmp
sub
pop
iret
movsl
cli
pushf
xor
mov
lret
movsb
outsb
cs
xor
fcmovu
push
ja
std
add
rclb
repz
repz
push
enter
incb
movsb
hlt
xchg
jmp
xchg
inc
xchg
xchg
fldt
mov
cmovo
xor
adc
mov
pop
lds
add
leave
or
ljmp
data16
js
or
idivl
dec
mov
lea
xchg
adc
push
mov
out
xor
shll
or
inc
insb
lods
inc
lret
add
xchg
leave
mov
mov
mov
outsl
pop
popa
into
pop
ffreep
xchg
orl
add
xor
fwait
lods
and
xor
out
dec
hlt
adc
push
das
dec
inc
out
push
xor
dec
adc
das
mov
or
jno,pn
push
xchg
dec
icebp
bound
cmp
scas
mov
jne
push
cwtl
push
enter
adc
insl
push
mov
movsb
rcl
pop
add
add
out
mov
or
sbb
lahf
cmp
sbb
xchg
loope
mov
jg
sbb
shlb
jecxz
pusha
into
jmp
push
mov
test
fbld
pop
hlt
or
shl
jne
in
enter
inc
sub
inc
jne
mov
add
mov
test
inc
adc
jae
ret
call
test
add
nop
stc
cld
mov
movsl
sub
mov
cmp
mov
inc
sub
test
ljmp
jnp
inc
in
jle
push
mov
das
jecxz
lods
fldt
jb
cmpsl
ja
push
in
xchg
cmpsb
inc
inc
test
pop
adc
les
enter
jo
xor
testb
stos
dec
mov
adc
jo
cwtl
pusha
sub
add
lds
mov
jnp
int3
fiaddl
icebp
sub
pop
inc
subb
ds
push
cld
adc
fwait
sub
data16
xor
jne
into
call
lods
xor
dec
dec
mov
mov
hlt
rcll
and
fists
or
or
adc
cmpsb
mov
mov
out
sub
lcall
ljmp
mov
mov
aad
daa
pushf
stos
stc
mov
and
xchg
cmp
jnp
pop
aam
mov
sbb
xchg
xchg
insb
or
inc
aaa
ds
add
mov
mov
dec
mov
sbbl
nop
les
repz
adc
add
sub
mov
stos
xor
loopne
push
inc
adc
jle
pop
lahf
mov
and
es
mov
jne
and
jle
clc
cwtl
loop
xorb
aaa
mov
test
cs
add
std
cmpsl
xor
leave
jbe
aam
in
fbld
clc
cmp
jg
popa
pop
dec
enter
in
lods
cmpl
mov
shrl
ljmp
rcll
inc
adc
mov
lock
add
jl
mov
add
xor
inc
icebp
ja
cmp
cmp
cmpl
push
stos
jl
jnp
mov
inc
insb
add
enter
rorl
sahf
arpl
leave
push
pushf
xrelease
add
aam
jbe
jno
sub
es
xor
inc
dec
push
add
mov
mov
inc
mov
mov
dec
mov
adc
repnz
dec
rcrl
jp
jno
imul
dec
or
sub
rolb
xchg
push
pop
push
dec
stos
rcl
mov
jo
popf
pop
adc
mov
cmpsl
loopne
imul
scas
lock
rcl
jae
jp
inc
sahf
push
jbe
pop
mov
inc
sub
enter
jne
es
add
inc
cmp
pop
call
push
add
add
cmp
cmp
xchg
dec
push
xchg
xor
mov
rol
or
sbb
push
enter
hlt
sub
push
stos
mov
out
bound
stc
into
les
jns
imul
shl
pop
xchg
dec
sti
sub
test
sub
jle
mov
lcall
scas
into
mov
jp
pop
stos
add
cmp
subl
ljmp
jl
inc
dec
lcall
out
cwtl
es
mov
in
rolb
mov
iret
jmp
jnp
lods
test
dec
push
test
mov
popa
or
icebp
fbld
test
add
dec
mov
jl
jo
pop
jno
mov
dec
fists
out
add
xadd
bound
mov
jnp
movsb
inc
int
inc
loop
pop
fisttpl
arpl
adc
into
pop
notb
push
das
mov
pop
mov
shrb
mov
test
shlb
repnz
sub
jbe
fimuls
js
push
mov
push
add
aas
mov
jne
ss
mov
cld
stos
movsb
or
inc
rcrb
mov
add
pop
gs
inc
lds
mov
inc
out
push
sbb
shlb
xchg
pushf
into
push
pop
movb
in
xchg
roll
decl
xchg
popa
hlt
in
cmc
mov
push
adc
sti
dec
mov
iret
jb
inc
dec
divl
mov
mov
dec
loopne
ja
push
or
mov
adc
jl,pn
mov
sahf
or
push
sti
xchg
es
js
addb
stos
dec
bound
sbb
stos
into
mov
mov
loopne
out
nop
lret
fisttpl
pop
mov
outsl
lea
pop
pop
jno
cmp
js
xchg
into
pushf
in
sub
cmp
jle
in
lret
and
stos
cmp
lods
mov
xchg
or
add
adc
mov
sti
pop
sbbl
mov
mov
push
pushf
in
and
nop
loop
xor
mov
sub
dec
leave
sub
xor
lea
mov
xlat
mov
into
dec
push
adc
or
into
lds
andl
sub
cmp
adc
scas
add
sub
fisubl
mov
push
sahf
pop
sub
dec
pop
mov
push
xchg
jl
add
dec
jbe
xlat
sub
xor
jg
pushf
test
mov
mov
lods
movsb
jle
cwtl
jae
or
repz
sub
jno
jg
int3
clc
sbb
jo
add
mov
mov
mov
flds
cmp
push
sbb
mov
stc
jmp
xchg
arpl
hlt
clc
lods
stc
cmpb
dec
inc
dec
sub
divl
insl
cmp
pop
push
xchg
inc
mov
cld
addr16
cwtl
movsl
jle
jp
adc
inc
push
lcall
ds
or
xor
cwtl
jl
pop
cmp
in
mov
pop
adc
arpl
pop
dec
repz
gs
mov
add
lcall
cmp
mov
mov
sub
cmpsb
mov
mov
or
test
inc
lods
cmpsl
loop
mov
pop
xchg
mov
out
out
loop
mov
mov
gs
mov
xor
movsb
jle
and
adc
hlt
sbb
jb
js
mov
push
jl
mov
fbstp
movsb
inc
or
decl
test
jecxz
mov
movsl
jno
inc
leave
xchg
lcall
push
fisubrs
xchg
out
or
push
mov
out
enter
jns,pt
jp
lods
sbb
mov
pop
outsb
pop
add
popl
cmp
leave
pop
push
or
sahf
jle
and
sub
stos
jbe
xchg
int3
adc
jno
jb
xor
xlat
shrb
les
cmc
enter
arpl
cli
mov
andb
stos
add
movsb
test
js
icebp
mov
inc
or
pop
mov
sub
pop
loop
movsl
stos
mov
movsl
sub
inc
xor
outsl
fincstp
adc
cmp
mov
xchg
sub
inc
jl
xor
sbb
xlat
frndint
shll
ret
rolb
scas
adc
mov
leave
fwait
shrb
movsb
fsubs
mov
cmp
ja
jg
lods
or
or
or
adc
ja
xchg
or
pusha
int3
call
xor
and
cli
mov
jne
lock
sub
jg
outsb
pop
dec
sbb
push
add
xor
cmp
xor
mov
subb
and
jbe
push
test
jnp
push
aam
xchg
clc
lds
stos
push
mov
cwtl
adc
inc
lods
jp
dec
call
push
xchg
push
xor
jmp
sub
jg
and
sbb
jb
push
ljmp
cld
or
adc
mov
lds
adc
mov
call
add
adc
push
loope
cli
stos
rcrb
mov
sti
push
ljmp
mov
cld
mov
movsl
jns
ljmp
mov
xchg
fwait
lds
pop
ljmp
push
fsubrl
sbb
es
shll
push
and
jl
lret
jns
pop
hlt
stc
sbb
fsubrs
pushf
push
mov
xorb
mov
cmpsb
push
xchg
out
push
int3
add
hlt
xor
jnp
movsl
aad
sub
xchg
add
cmp
fiadds
jo
leave
mov
dec
adc
push
or
rcll
pop
int3
into
movsb
fmull
add
mov
inc
cli
mov
scas
loopne
hlt
add
insb
test
leave
pop
push
pcmpeqw
mov
loope
inc
daa
pusha
jge
mov
cld
jns
inc
mov
jle
inc
inc
inc
pop
push
adc
aaa
scas
imull
and
push
xchg
cmp
sbb
jbe
add
outsb
mov
fld
push
enter
clc
loop
in
data16
jmp
cmp
inc
jp
icebp
pop
out
js
adc
clc
fdivl
sub
jno
sbb
xchg
loopne
sbb
enter
test
sub
mov
pop
pop
inc
out
cmp
adc
sub
mov
xchg
adcl
xor
add
mov
xor
mov
mov
dec
loop
jne
je
cli
xor
int3
and
out
in
mov
pop
imul
hlt
ljmp
test
shlb
pop
pop
lock
inc
lcall
inc
ret
jne
push
cmpsl
xorb
je
ljmp
inc
aas
xchg
cltd
or
push
ljmp
push
xchg
mov
hlt
popa
dec
mov
xchg
into
pcmpeqw
mov
sub
inc
xor
scas
hlt
mov
fs
jl
mov
lods
inc
pop
add
insb
lcall
dec
sub
lcall
push
std
arpl
inc
inc
mov
loope
or
mov
leave
add
loopne
mov
xorl
movsb
push
adc
mov
mov
push
ja
pop
sbb
or
ljmp
fcoms
jmp
sbb
mov
mov
daa
cmpsb
mov
pop
or
sbb
cld
inc
lds
test
enter
enter
fisubl
lcall
jae
add
xchg
push
jns
fbstp
push
sub
pop
jmp
push
jg
mov
jmp
mov
pop
scas
cli
jg
dec
cltd
in
push
outsl
cs
sub
lret
pop
pop
or
adcb
xchg
imul
enter
sub
outsb
or
stc
std
push
in
loope
adc
jecxz
hlt
in
in
push
std
adc
aad
lret
das
xchg
inc
stos
push
sbb
rcr
int
sahf
inc
add
out
pusha
push
add
push
das
inc
ds
jno
adc
cmpsl
lcall
sbb
mov
out
and
or
push
or
mov
fxch
sub
cwtl
adc
sub
dec
insl
roll
inc
sub
aas
xchg
in
push
clc
xor
add
ds
imul
pop
mov
mov
insl
and
mov
xchg
mov
repnz
mov
dec
aad
mov
fnstsw
jg
add
add
mov
gs
test
inc
incw
or
dec
cmpsl
or
arpl
in
pushf
hlt
lcall
aas
mov
call
jl
fistpll
push
mov
and
adcl
inc
jbe
leave
gs
adcb
bound
fldl
lret
jge
inc
fsubrs
jne
insl
clc
pop
dec
imul
mov
inc
add
or
fcompl
mov
push
out
mov
lret
inc
pop
scas
aad
fmull
mov
jae
xchg
mov
lock
shrb
dec
shrb
pop
mov
repnz
add
repnz
push
push
gs
mov
inc
stc
sarl
sbbb
mov
andb
hlt
lcall
ja
cmp
sti
mov
inc
cmp
lret
insl
shlb
mov
cli
and
pop
and
int3
outsl
inc
or
and
hlt
rclb
fmuls
push
ds
popf
inc
insl
xorb
mul
addr16
sarl
xchg
enter
cs
cld
lods
push
bound
sbb
add
push
dec
lock
and
shlb
jne
fcompl
fwait
push
mov
enter
xor
nop
pop
or
jg
cmpsl
cld
in
jne
fnstenv
add
pop
iret
mov
jp
into
enter
inc
roll
xchg
hlt
xor
gs
jno
loop
or
inc
jo
adc
loopne
mov
sti
inc
cltd
out
mov
push
in
and
repz
mov
cli
and
stc
mov
mov
repz
enter
pop
stos
cld
mov
inc
flds
enter
je
and
mov
mov
inc
sub
mov
sbb
sbb
movsb
adcl
mov
adc
outsb
add
jg
cmp
outsl
icebp
cli
pop
fldl
pop
cltd
fcmovne
or
bnd
mov
or
sahf
ljmp
jp
es
stos
inc
jnp
sti
xlat
xor
lock
fnstsw
xchg
idiv
leave
mov
stos
pop
clc
jo
int3
pop
hlt
popa
sub
aad
mov
repz
subb
add
mov
sub
insb
dec
dec
loopne
xchg
xor
push
aaa
cmp
add
rolb
mov
mov
cmp
add
sbb
ror
fcoms
dec
mov
outsl
push
fidivs
or
shlb
pop
sbbb
lock
xchg
cwtl
mov
pop
xchg
xchg
dec
dec
call
enter
fsubl
and
int3
sbb
sbb
mov
push
mov
mov
jmp
cmpsl
lds
repnz
leave
push
add
movb
jae
cmp
into
xor
cmc
int3
mov
sub
xchg
arpl
jbe
imul
dec
cli
add
aaa
lret
add
cmp
lret
inc
or
cmpl
aad
jl
in
xchg
mov
and
hlt
xchg
jno
add
inc
dec
mov
hlt
scas
jge
outsl
mov
mov
stos
add
jmp
mov
push
roll
test
adc
insb
fiadds
jl
test
xchg
addr16
cmc
mov
pop
xrelease
popa
imul
sub
fwait
stos
notb
mov
inc
lods
inc
lock
adc
std
and
push
adc
lret
nop
or
sarb
adc
jns
hlt
or
repnz
pop
xchg
mov
sub
clc
pushf
pop
jl
lret
xorl
add
mov
add
dec
mov
sbb
imul
xchg
jp
lea
mov
pop
pop
cmc
and
jne
iret
push
jmp
mov
jbe
jne
mov
leave
out
enter
nop
cmp
sub
test
out
cmpsb
mov
rol
sub
adc
es
inc
sub
loop
enter
xor
scas
inc
cld
xor
into
pop
inc
scas
xchg
testl
stos
push
add
and
notl
fisttps
cmpsb
aam
pusha
int3
sti
and
xchg
mov
pop
cmc
imul
mov
or
inc
fsubrs
into
mov
jmp
stc
mov
add
cmp
repnz
in
cmp
push
mov
loop
jno
ds
push
gs
popf
push
add
clc
fnstenv
push
rolb
popf
mov
test
nop
int3
xchg
jge
or
adc
fiadds
pop
jne
imul
or
sarb
and
push
test
xor
das
xor
pushf
gs
push
mov
cmc
jmp
arpl
inc
insb
decb
inc
stos
inc
push
negl
popf
adc
sbb
sti
std
inc
stos
out
xor
dec
cmp
or
cmp
enter
sub
aas
lcall
jmp
mov
push
insb
mov
or
imul
mov
jb
sub
jg
and
xlat
adc
sub
or
repz
cmp
hlt
push
rorl
mov
jo
es
cmp
in
or
mov
jne
sbb
jp
mov
sub
fsubl
in
push
cld
dec
mov
lods
data16
mov
sub
add
fisubrs
fstl
inc
stc
das
loop
add
sahf
pusha
icebp
aam
add
test
enter
pop
aas
movsl
inc
add
push
outsl
sbb
ret
push
add
cs
mov
ja
sbb
jmp
pushf
ret
and
jns
mov
testl
inc
push
ret
fdiv
lea
das
pop
add
dec
sbb
pop
mov
inc
sbb
mov
not
xor
fs
rolb
mov
cmp
push
and
xchg
xor
ret
jge
xor
inc
cltd
roll
or
iret
inc
pusha
cmp
fisubrl
jmp
jle
add
and
push
jl
out
jne
dec
sub
mov
subl
stc
decl
rcll
hlt
lock
push
dec
mov
sti
test
xchg
push
hlt
mov
pop
mov
add
int3
lods
fcompl
jmp
daa
cmp
testb
hlt
push
mov
jle
icebp
or
mov
fdivs
jl
out
outsb
jge
mov
mov
lret
push
cmc
push
hlt
sbb
clc
mov
add
sbb
rclb
andl
sti
ss
gs
jmp
lret
mov
jmp
daa
push
adc
mov
ss
pop
xlat
push
mov
or
loope
mov
or
jne
clc
jne
push
ret
inc
nop
cli
pushf
lods
fldl
arpl
clc
xchg
cmc
cmp
pusha
mov
pop
in
jo
or
in
rcrl
test
int3
insb
jbe
dec
roll
fistpll
mov
das
add
fs
mov
jne
in
add
call
movsb
sub
adc
stos
or
inc
sahf
push
cmp
dec
js
addr16
inc
push
sub
adc
cs
xor
mov
lea
mov
xchg
mov
lods
push
fsubl
sub
fistl
sub
aaa
dec
popa
mov
sbb
bound
mov
mov
hlt
dec
dec
push
xchg
shrl
ljmp
sti
inc
test
rol
notb
mov
mov
push
hlt
dec
lret
hlt
ficoml
pop
add
ja
xchg
mov
mov
pop
mov
sub
out
ds
add
and
dec
cli
js
aas
pop
outsb
int
xor
jl
test
dec
adc
imul
jnp
sti
ljmp
jb
mov
xchg
pop
movsl
add
and
lock
xor
mov
push
repz
popa
or
xor
mov
imul
sub
push
mov
int
or
sub
scas
mov
test
dec
adc
dec
enter
mov
inc
lds
shll
pop
int3
pop
inc
into
adc
push
stc
fistl
loop,pt
mov
insb
test
push
jne
rcll
xor
xorb
cmp
popf
xchg
jmp
mov
arpl
fiaddl
call
leave
fucomp
and
pop
lods
rorb
adc
mov
mov
es
pop
imul
stos
mov
imull
ja
xchg
inc
xlat
mov
nop
adc
leave
xchg
or
mov
dec
add
call
scas
jl
mov
int3
enter
cmc
out
jb
imul
or
in
jns
cmp
mov
hlt
pop
int
sub
frstor
cmp
into
lock
jb
inc
sbb
mov
ficoml
fdivrp
add
mov
scas
enter
not
insl
jno
in
movsl
fadd
pop
adc
or
mov
adc
lods
pusha
nop
mov
jne
dec
lret
ret
mov
push
xchg
pop
and
pop
push
cmp
test
jmp
lea
mov
mov
xor
jbe
mulb
mov
push
ljmp
fwait
mulb
outsb
or
cmpsb
dec
outsl
js
jmp
lret
lods
add
mov
lret
and
addl
ja
xor
add
push
push
hlt
jae
xchg
fimull
gs
sub
pop
int3
mov
pop
mov
mov
cmpsb
leave
aad
jge
cmp
fldl
and
fcompl
mov
dec
inc
in
data16
in
sub
enter
xchg
jnp
cmp
nop
cwtl
adc
cmp
dec
scas
pop
arpl
add
pop
clc
inc
dec
xor
not
in
pushf
adc
mov
fs
rcl
xorb
mov
test
mov
jns
les
subb
add
lods
addr16
and
les
push
enter
add
xor
pushl
mov
and
in
leave
sbb
dec
xchg
xor
cmpsb
mov
xchg
inc
mov
insb
aam
xorb
jp
or
popf
outsl
leave
or
lcall
imul
lods
pop
xchg
lods
int3
enter
incb
cmp
int3
aad
jae
xchg
jle
aam
shl
popf
loope
adc
inc
into
jnp
add
pop
mov
std
jecxz
movsl
mov
xor
mov
ret
cwtl
and
mov
mov
add
mov
sbb
dec
cmp
test
lock
enter
scas
mov
pop
popf
negb
dec
jno
daa
inc
aad
bound
gs
bound
fsubl
mov
js
add
sub
cmp
jecxz
xor
xor
lcall
test
insl
lcall
mov
scas
sti
add
pop
push
nop
jmp
mov
lret
xor
xor
add
out
pop
aam
loopne
hlt
jbe
test
dec
xchg
test
jne
mov
or
testb
mov
lret
pusha
ds
cli
mov
add
jmp
push
push
cmp
push
xor
jo
test
pcmpeqw
test
nop
pop
xchg
cmc
pop
sub
inc
imul
push
jae
xchg
std
rolb
ljmp
ljmp
jl
jne
inc
pop
mov
outsl
adc
lahf
and
adc
enter
cmp
outsl
ja
inc
ror
ljmp
jmp
xor
dec
inc
stc
inc
pop
sub
adc
lods
dec
pop
lods
and
adc
call
xor
mov
pop
mov
adc
ds
dec
stos
xlat
push
flds
xchg
imul
and
xchg
adc
subb
push
dec
xor
jl
pop
jmp
cmpsl
dec
js
cmp
mov
mov
push
fimull
adc
push
imul
in
sub
cmpsl
adc
or
aam
mov
vpshlw
popf
add
jb
xor
push
cmp
pop
mov
add
cli
cld
dec
enter
ds
addr16
fldcw
cwtl
jmp
pop
sbbl
push
inc
hlt
cmc
hlt
icebp
dec
jl
negb
mov
inc
jmp
mov
mov
sti
loope
lock
data16
or
sti
and
adcb
call
lcall
mov
mov
jbe
mov
push
dec
xor
cld
insb
lcall
daa
int
push
fpatan
int3
adc
sub
pushf
aad
xlat
pop
loopne
xor
out
pop
popf
or
mov
sub
pushf
inc
push
stos
or
inc
test
sbb
out
jg
mov
add
sti
sub
aas
sub
test
sub
lea
rolb
mov
jne
or
pop
add
loopne
inc
mov
in
pusha
add
pop
fnstcw
cwtl
arpl
imul
or
xchg
jmp
std
sbb
sbb
xchg
mov
mov
sub
mull
insb
dec
mov
xchg
mov
push
inc
ss
call
xchg
add
push
sub
addr16
pxor
outsb
cmpsb
push
sub
or
mov
inc
jmp
flds
sahf
inc
outsb
out
adcb
dec
out
dec
jnp
sub
pop
outsl
repz
mov
adc
inc
std
movsb
push
cwtl
stc
push
subb
cmp
sti
in
enter
lods
leave
sbb
add
fnsave
mov
mov
mov
add
inc
and
movsb
jbe
jns
les
add
rcrb
and
mov
loope
lcall
mov
pop
test
stos
jge
mov
add
adcl
into
xor
mov
jo
mov
sahf
jnp
pop
mov
add
jns
mov
ror
push
push
jae
fmuls
hlt
cmp
faddl
xchg
test
les
xor
in
cmpsl
inc
xor
push
cwtl
outsl
and
dec
scas
fadds
or
test
pop
sub
adc
jns
or
insl
inc
enter
mov
adc
jo
adc
xchg
pusha
mov
fyl2xp1
inc
daa
pushf
xchg
mov
jl
jne
cli
imul
jns
xchg
xor
push
aad
imulb
mov
pop
xchg
loop
jmp
dec
loope
mov
hlt
xor
clc
mov
jns
pop
inc
movsl
in
pop
popa
push
dec
lods
adc
lods
cmp
jne
test
subl
aad
insb
jbe
fcmove
mov
aas
test
subl
sbb
inc
stos
mov
test
or
imul
es
sub
fadds
dec
and
test
cmpsl
test
cmc
loopne
cmp
daa
cli
adc
add
ret
and
xchg
xchg
imul
loop
cld
mov
pop
pusha
shll
jge
xor
outsb
stos
out
aad
das
xchg
repnz
hlt
fwait
cwtl
xor
pop
jmp
fcoml
push
inc
nop
das
rol
mov
jne
sub
aam
leave
std
push
cmpl
sub
jge
andl
cmp
pusha
outsl
cwtl
adc
in
adc
cltd
cmpsl
lods
pop
paddusw
jae
loop
dec
inc
shlb
repz
jbe
pop
push
movsb
sti
outsl
xchg
je
pop
rclb
jp
sub
or
push
mov
clc
fsubrp
push
add
mov
insb
jmp
inc
mov
pop
dec
jp
pop
loope
out
xchg
icebp
jo
mov
addr16
cwtl
jg
loop
mov
adc
fld
nop
mov
insb
aas
scas
pop
sub
hlt
je
jnp
sub
lock
mov
fcmovbe
mov
or
sbb
jge
add
push
cmpb
shlb
mov
pop
sbb
cmpsb
aaa
lods
div
int3
imull
jge
adc
xchg
imulb
aas
hlt
or
push
pop
in
cmc
cwtl
jg
shrb
mov
std
imul
es
add
mov
fwait
mov
adc
xor
dec
mov
add
shl
cmp
pop
movsl
lods
and
pop
movsb
into
daa
adcl
pop
dec
mov
movsb
test
mov
push
das
int
fsts
cmp
hlt
xor
push
repz
call
inc
jp
jns,pt
pop
adc
or
jne
rclb
pop
stos
jmp
jg
cmp
dec
or
test
mov
xchg
loopne
or
gs
int3
rcrb
mov
jne
mov
jecxz
inc
mov
pusha
add
mov
mov
or
loopne
sbb
xor
add
push
test
std
add
das
ds
nop
loopne
mov
dec
pop
push
jg
test
popa
add
pusha
cmc
dec
popf
clc
bound
adc
and
sbb
lahf
xchg
pop
loop
gs
xor
enter
loopne
mov
nop
rcrb
gs
dec
add
ljmp
pop
pop
and
jbe
add
es
mov
cmp
stc
shlb
enter
movsw
in
xor
mov
pop
cmp
ljmp
pop
or
jge
mov
into
out
fwait
test
cmp
xorl
sub
cmpsb
xchg
push
ret
mov
jnp
and
cwtl
dec
arpl
dec
sub
inc
add
cmp
ret
push
in
sahf
pop
ljmp
adc
sti
xchg
mov
push
add
js
data16
call
sbb
movsl
inc
and
mov
cmp
cmpsl
call
ror
xor
stc
xchg
sbb
test
pop
cmpsb
push
clc
push
xchg
cmpsl
sbb
mov
xchg
cmc
fistpl
rcr
sbb
adc
mov
and
imul
inc
add
sbb
clc
mull
xchg
rcll
sub
sub
push
pusha
push
xlat
push
jmp
sub
cmp
lahf
incb
std
sub
pusha
mov
lods
push
sub
jo
aaa
adc
orl
das
push
add
repnz
mov
negl
mov
andl
nop
cmp
push
neg
dec
andl
cmp
rclb
push
mov
xor
stos
les
mov
test
sub
add
int
pop
loopne
push
int
iret
lea
and
or
mov
nop
lock
sub
das
sti
int3
out
pop
in
rorb
pop
fs
mov
inc
std
lods
jb
pop
push
mov
adc
adc
push
call
mov
ljmp
or
stos
shr
leave
xchg
mov
push
in
dec
or
mov
das
into
pop
idivb
sbb
xchg
bound
negl
mov
or
xchg
jmp
sbb
cmp
add
stos
inc
cmp
jmp
pop
fiadds
ror
mov
in
cmp
jge
pop
push
fmull
int3
xchg
dec
push
jae
sub
nop
inc
xor
arpl
sub
pop
das
std
addb
fisttpll
jae
pushf
loope
fdivp
jmp
mov
in
sbb
fists
hlt
mov
insl
in
mov
ljmp
jns
push
fldt
and
push
mov
and
mov
cmp
sbb
xor
xor
out
in
data16
jge
dec
enter
test
jle
dec
xchg
pop
shll
xchg
clc
dec
jo
add
test
fwait
dec
pushf
cmp
pop
nop
sarb
push
push
add
pop
inc
dec
data16
cwtl
mov
shl
mov
mov
xchg
fmulp
push
es
xchg
dec
sbb
xchg
decb
cltd
xor
xchg
dec
repz
inc
lods
orb
xor
gs
int3
inc
add
inc
inc
out
orl
sub
movsb
cmp
int3
test
mov
inc
dec
cmp
inc
sbb
in
lcall
addr16
sbb
fstps
sub
rorl
sub
xchg
scas
movsl
mov
add
lock
pop
mov
loope
iret
je
push
mov
push
mov
testl
dec
inc
mov
hlt
gs
stos
add
jg
sbb
sub
mov
js
push
fists
aad
dec
jnp
and
int
or
add
fisubl
icebp
out
cmc
jle
out
xchg
add
sub
ret
mov
insl
and
in
in
ja
loope
enter
inc
notb
loopne
push
xor
inc
mov
notl
mov
les
or
and
xchg
push
cmp
popf
call
mov
js
fwait
sbb
adc
dec
mov
jg
jmp
push
push
dec
push
fmuls
test
xchg
lods
and
cwtl
clc
and
and
xchg
pop
test
xor
stc
mull
aam
shlb
nop
lcall
adc
inc
mov
mov
enter
clc
xor
inc
test
xchg
push
inc
mov
sbb
cli
dec
mov
jne
mov
jl
jae
rorl
mov
cmc
cs
icebp
xchg
cmp
dec
sub
outsl
push
into
pop
mov
movsl
xor
into
pop
in
call
test
inc
sbb
gs
insb
lods
fistpl
jecxz
incl
xor
sub
mov
je
xchg
mov
pusha
mov
sar
add
sbb
addl
inc
jp
leave
dec
or
lock
dec
add
push
repz
pusha
push
clc
scas
and
sub
insb
es
ja
ror
enter
xchg
int
imul
pusha
lcall
jnp
and
pusha
push
nop
imul
xor
cmpb
dec
mov
orl
lds
xchg
lret
cmp
lret
cmp
mov
std
hlt
mov
inc
sti
adc
test
mov
imul
jl
cmp
add
mov
movsl
xor
shrl
mov
mov
jl
mov
fstp
je
fcoms
sbbb
ds
inc
and
cmpb
rep
mov
push
push
nop
leave
or
mov
sti
adc
repz
in
movsb
sub
les
cld
or
sarl
enter
pop
add
jns
enter
nop
sub
les
cmpsb
decb
xlat
jae
popf
in
dec
insb
cmpsb
shlb
inc
insl
sti
inc
sub
adc
gs
rolb
adc
fiaddl
cmp
mov
mov
in
stos
movsb
call
pop
call
xchg
jno
movsb
jb
add
sub
jg
inc
out
inc
sub
enter
adc
xor
in
lods
into
aam
inc
pop
loopne
lods
hlt
ret
mov
cld
add
lods
popa
es
into
mov
or
jl
sub
iret
mull
leave
popa
imul
stc
sub
xchg
mov
test
call
jle
jne
or
iret
shl
sbb
addl
xchg
or
push
jmp
and
adc
sbb
out
adc
stc
and
mov
rcll
outsl
sbb
xchg
out
inc
jns
mov
mov
mov
adc
loop
add
dec
dec
push
les
sbbb
movsl
cwtl
mov
lods
xchg
jge
mov
dec
xchg
shrl
push
adcb
call
rol
cmp
incl
scas
mull
xchg
pop
add
xor
xor
push
hlt
test
and
std
adc
mov
push
sub
cwtl
push
in
or
movsl
test
inc
dec
aas
hlt
dec
mov
andl
cs
dec
scas
mov
insb
xchg
xchg
loopne
adc
push
jnp
inc
adc
ljmp
icebp
cs
daa
jecxz
insl
pop
mov
imul
pop
sbb
popa
and
mov
sub
scas
adc
incb
mov
xor
pop
add
mov
ffree
and
mov
mov
push
es
test
cld
loopne
jne
cmp
adc
lret
add
and
into
mov
popa
inc
sbbl
inc
dec
lods
and
mov
popa
dec
mov
aam
cltd
mov
pop
sbb
les
fnstsw
jne
adc
inc
mov
fists
dec
clc
ljmp
loopne
dec
arpl
out
shrl
cmp
lret
sub
hlt
add
mov
mulb
js
leave
adc
adc
sub
inc
add
add
fs
push
icebp
mov
push
aad
adc
dec
hlt
sub
in
inc
mov
pop
mov
fisttpll
push
sbb
jne
dec
dec
sub
scas
mov
pop
pop
add
lock
aam
mov
mov
sbb
jg
gs
xor
mov
or
or
cli
subl
shrb
das
sti
sub
lods
daa
dec
mov
mov
sbb
pop
adc
std
mov
aas
leave
cwtl
sahf
jl
das
and
mov
sub
ja
xor
popf
jecxz
loopne
fsubrs
inc
ds
dec
mov
cmc
or
jb
add
inc
inc
mov
in
imul
or
mov
testl
fwait
movsb
mov
sbb
or
scas
nop
inc
jge
in
pop
mov
adc
adc
mov
sbb
mov
movl
movsl
mov
or
pop
sub
aas
data16
mov
mov
mov
jnp
fistpl
adc
push
dec
jnp
add
test
leave
jecxz
loop
aad
movswl
hlt
ret
les
mov
jp
cli
inc
mov
sbb
mov
add
jge
jle
mov
and
std
dec
and
xlat
ficomps
int
repz
mov
movsb
add
xchg
push
in
sbbb
bound
jge
loop
mov
jmp
inc
sbb
jl
mov
mov
jne
subb
stc
enter
fdivr
inc
add
inc
sbb
or
mov
sub
arpl
inc
rcll
adc
scas
lods
popa
test
push
repz
hlt
enter
jne
push
mov
cmpb
mov
dec
repz
int3
xor
ret
out
ret
aam
stc
inc
cmp
add
adc
jle
popf
sbb
mov
imul
jne
daa
pushl
das
scas
adc
jne
cltd
xor
xchg
pop
sub
inc
dec
in
shll
dec
adcl
orb
loopne
jno
scas
stos
cmc
icebp
jns
or
push
mov
cmpsb
into
pusha
mov
rol
push
pusha
aam
roll
xor
imul
adc
add
add
scas
push
mov
das
stos
mov
xchg
sub
fwait
lock
mov
jmp
gs
mov
test
nop
cli
pop
jae
mov
xor
push
push
mov
in
inc
mov
jl
sbbb
nop
inc
pop
xchg
int3
fists
mov
xchg
lahf
fldenv
pop
es
popl
stos
and
lods
or
lret
nop
dec
jns
xchg
popa
and
xchg
push
or
insb
fsubrs
mov
xchg
aas
loopne
xchg
pop
jle
sbb
sub
inc
ljmp
mov
fs
xor
lret
mul
ja
xchg
or
mov
xchg
hlt
sbb
mov
sub
cmp
in
mov
push
xchg
add
mov
mov
xchg
loope
pusha
into
outsb
mov
popa
dec
cmpsb
jo
lcall
inc
pusha
mov
or
mov
cmp
or
int3
sbb
mov
inc
clc
mov
std
repnz
pusha
mov
mov
and
jo
in
mov
xchg
add
bnd
std
push
lret
jne
dec
mov
mov
push
sub
xlat
in
sub
or
jbe
push
in
test
mov
xchg
test
cmp
push
jno
int
arpl
cmp
test
jle
int
sbb
test
stc
jmp
mov
mov
fcompl
jo
pop
ret
push
scas
int3
je
fistl
jbe
jno
add
mov
imul
insl
mov
mov
inc
xorb
pusha
jne
pop
sub
lret
bound
cli
adc
xor
jbe
je
push
mov
cmp
xchg
xchg
cmp
push
out
dec
data16
or
rorb
jle
rcll
and
std
mov
cmpsb
aam
sbb
mov
loopne
xchg
mov
mov
fisttpl
sub
in
adc
das
loop
cmpsb
xchg
packsswb
pop
addl
and
jae
frstor
int3
js
pusha
cwtl
cmp
inc
jg
ja
lods
shrb
dec
jl
sbb
pop
cli
sub
inc
xchg
rorl
test
push
push
fsts
std
add
stos
fwait
loopne
or
jno
add
sub
scas
inc
mov
into
mov
xor
call
mov
pop
adcb
into
sub
pop
jns
jnp
fsubs
sbb
dec
sti
ficoms
jb
inc
and
inc
out
ss
fmull
sub
xor
jmp
mov
dec
fimull
lret
mov
stos
leave
out
lcall
or
pop
sar
out
out
cltd
loopne
lcall
lahf
test
outsl
mov
or
leave
fisubrs
in
xchg
aas
inc
dec
adc
cmp
sahf
enter
fcomps
jne
or
mov
mov
mov
jg
pop
xorb
mov
mov
pop
mov
loopne
mov
or
test
inc
xchg
movsl
adc
jbe
mov
cwtl
loopne
rolb
daa
popa
cmpsl
sub
ss
test
clc
mov
mov
pop
hlt
lds
cmp
push
std
inc
sti
test
cmp
repnz
jge
sbb
cmp
inc
mov
inc
ret
enter
in
cs
push
test
jle
inc
stos
xchg
or
repnz
mov
not
shll
xor
mov
add
adc
xchg
shlb
cli
scas
test
adc
insb
aad
fmulp
imul
cld
ds
xchg
mov
cmpsl
push
jle
mov
pop
imul
loop
push
xchg
sub
mov
int3
pop
leave
les
stos
popa
xchg
mov
dec
loope
test
lret
xor
adc
test
push
outsl
mov
sti
repz
cwtl
add
cmp
mov
std
ficompl
pushf
cmpsl
out
int3
sub
lret
hlt
mov
orl
and
add
fdivrl
js
icebp
outsb
mov
xor
pop
fmull
icebp
mov
add
pop
shll
in
clc
pop
inc
xchg
iret
cmp
out
xlat
mov
stc
push
js
xchg
inc
das
pop
movsb
xor
or
pop
mov
pop
sub
adc
adc
mov
shl
dec
jle
mov
mov
test
pop
sti
cmp
push
ret
mov
nop
mov
mov
mov
fdivl
push
orl
cmp
imul
out
xchg
jo
cld
movl
xorb
or
cmc
cltd
cli
test
cmp
jbe
pop
cltd
cmpsl
scas
add
popf
leave
fcoml
xchg
cmpl
dec
mov
filds
push
sbb
xchg
adc
push
dec
xchg
mov
lret
adc
mov
enter
repnz
fistps
icebp
pop
and
imul
outsl
nop
testl
mov
or
in
outsl
jge
shrb
int
stos
loopne
adc
fists
out
hlt
dec
sti
call
cmp
fnstenv
lods
scas
add
movsb
pop
xor
stc
shrl
xor
shll
sbb
mov
cmp
jg
xchg
add
mov
xor
sub
repnz
fsubs
out
mov
mov
and
jg
lret
xlat
add
stos
int
fwait
sbb
pusha
loopne
cwtl
cmp
aad
xor
add
or
mov
xor
pop
dec
hlt
out
pop
mov
jmp
jnp
jle
and
xchg
inc
push
les
add
mov
idiv
fistps
stos
nop
or
mov
arpl
in
mov
into
test
cmpb
adc
cmp
sbb
vpmuludq
cmp
push
mov
mov
mov
stos
in
push
and
jge
js
movsl
sub
xorb
leave
xor
pusha
shl
lods
jle
inc
fnsave
inc
ja
xchg
fsub
jmp
jmp
pop
mov
ret
sbb
mov
cmc
pop
ret
fstpt
fdivr
movsl
stc
add
imul
bswap
sbb
sub
popa
inc
mov
popf
pop
sahf
add
push
push
dec
or
mov
mov
sbb
jb
clc
jg
sub
jnp
xchg
dec
ss
stos
fcomp
pop
test
push
mov
aas
in
cmpl
pusha
test
or
jmp
dec
subb
movsl
ljmp
add
mov
push
shlb
cmp
loope
fldt
sub
push
filds
iret
mov
testl
and
loopne
cmp
dec
clc
pop
mov
jbe
add
xchg
mov
scas
inc
sti
movsl
fnstsw
test
mov
push
mov
sbb
lock
scas
pop
sahf
xchg
out
daa
xlat
sti
outsb
mov
mov
icebp
pop
xor
inc
mov
cmp
adc
insb
mov
mov
jns
cmpsb
loope
jbe
in
push
xchg
shl
or
shl
stos
mov
sarl
lods
cld
push
add
xor
sub
inc
pop
outsl
xchg
jb
das
inc
orl
mov
cmpsb
les
sub
pop
add
push
mov
ja,pt
into
scas
dec
sub
stc
hlt
or
test
xchg
pop
sbb
test
les
ss
sti
test
push
stc
ds
add
fstpl
lret
xchg
sub
mov
inc
pop
sbb
rolb
ja
cmp
stos
stos
xor
addl
inc
mov
gs
aad
mov
iret
push
in
das
sub
jae
lds
inc
cmc
ret
les
mov
ja
adc
loop
push
loopne
jae
out
jg
pusha
dec
leave
lods
into
js
stc
int3
push
hlt
inc
fnstsw
and
dec
in
clc
scas
pop
popa
pop
mov
mov
repz
inc
movsl
and
mov
mov
jmp
mov
ss
call
int3
in
imul
std
sub
mov
mov
lea
fldl
jne
ret
mov
mov
or
jo
inc
xor
nop
adcb
stos
mov
sub
jg
das
cld
sub
mov
rcrl
stc
inc
mov
cmpsl
adc
int
in
hlt
mov
roll
adc
push
push
in
cmc
stc
lcall
rclb
rcrb
std
sahf
add
and
test
pusha
popa
cmp
out
jne
inc
sub
mov
test
sahf
xchg
iret
fisttpl
pop
test
push
xchg
fxch
xchg
inc
mov
push
sub
mov
sub
rcl
js
xor
xchg
lods
emms
repnz
sbb
les
movsl
arpl
ljmp
mov
sbb
and
sbb
xchg
pop
xor
in
dec
mov
jle
mov
inc
inc
js
out
rcll
mov
lods
cmp
sbb
cmc
les
jo
pop
jne
outsl
insb
mov
xchg
xor
add
pop
ret
sbb
sub
sbb
add
sub
jp
push
jne
fdiv
jno
mov
std
xchg
sbb
dec
mov
mov
gs
imul
popf
pop
mov
sbb
out
xchg
sahf
push
mov
pop
xchg
scas
adc
icebp
hlt
and
lahf
ret
int3
es
lcall
add
add
fsub
pop
jmp
sbb
dec
cmp
leave
pop
sti
pop
xorl
aas
pop
jb
rorl
std
andl
xchg
cmp
fdiv
cmpsl
jl
cmp
adc
cmpsb
adc
adc
stos
lahf
xor
and
jecxz
ror
rclb
mov
loope
push
jns
int3
xlat
in
mov
push
stos
xchg
lahf
cltd
js
cmp
pop
and
lods
push
fstl
nop
adc
xchg
inc
mov
scas
lods
jno
aam
and
inc
push
sbb
lock
push
jmp
inc
sbb
add
pop
test
jne
lret
push
add
gs
xchg
xchg
movsb
mov
pop
ja
roll
push
cmpl
cwtl
lods
mov
cmp
addb
fnsave
enter
add
std
gs
push
in
push
mov
jns
or
sahf
scas
adc
mov
inc
jp
rcrl
cmp
movsb
adc
cmp
in
mov
jl
fstp
ds
xor
fiaddl
dec
in
nop
jecxz
sbb
sub
push
cmp
sbb
cwtl
sub
jg
push
loop
fisubrl
jne
popf
loopne
aad
xchg
push
mov
pop
push
hlt
pop
cmpsb
in
pop
in
mov
scas
push
mov
xchg
xorl
push
cltd
stos
sub
lcall
push
aad
push
cmpsb
add
aas
fmull
enter
xor
mov
imul
xlat
cltd
ja
lods
adc
movsb
or
leave
lret
mov
loope
jne
sub
or
mov
mov
inc
sub
mov
lods
std
mov
sub
mov
inc
imul
dec
movsl
bound
jmp
icebp
call
popf
mov
xchg
xlat
leave
pop
push
or
push
add
int
add
fnstenv
sub
mov
pop
cli
out
rcrb
cmc
mov
jge
jmp
add
enter
fstpl
loop
test
xchg
lock
call
mov
cmp
fistps
sbb
sbb
mov
inc
scas
jle
mov
adc
dec
lods
sub
subb
lds
out
push
addl
stos
xor
sub
fdivrs
sub
sub
mov
std
in
xchg
pusha
push
xor
mov
or
pop
scas
sbb
and
and
jl
dec
ror
jge
aam
rcrb
cmp
int3
jle
paddd
hlt
enter
mov
jecxz
cmp
inc
decl
xchg
mov
mov
xchg
adc
rcl
pop
mov
mov
or
mov
ficomps
jl
out
xor
insb
repz
shll
jg
loope
add
add
lcall
icebp
push
es
int
cmpsl
sub
int3
pop
jne
movsb
jge
sbb
call
test
imul
push
add
loopne
ss
fcoml
mov
inc
stos
test
jne
add
leave
push
movsb
call
mov
xchg
xchg
insl
pop
sti
dec
or
pop
jns
inc
sbb
fxch
inc
add
or
fsubrl
out
rolb
pusha
repz
push
mov
mov
mov
dec
out
adc
inc
add
add
loope
decl
mov
cmp
mov
or
dec
movsl
leave
subb
insb
inc
push
aas
pop
adc
push
hlt
sbb
jl
call
loop
inc
xchg
std
cmp
jne
ss
xstore-rng
cmpsl
xchg
dec
push
icebp
repz
dec
mov
cmpsl
jae
mov
bound
enter
inc
push
dec
fbld
jne
movsb
dec
les
test
push
mov
cld
xchg
mov
dec
mov
inc
icebp
shrl
stos
xchg
and
cmpb
xchg
mov
ss
sbb
lret
mov
push
daa
js
xor
xor
dec
cld
inc
adc
mov
xor
int
or
xchg
lcall
cmp
aas
jmp
push
and
std
daa
fistps
popa
sti
test
lahf
sub
in
cli
xchg
test
push
ljmp
xchg
mov
enter
add
mov
pop
js
out
mov
rcrl
icebp
xorb
test
xor
call
dec
jl
pop
jne
dec
mov
sub
shrb
mov
push
setbe
mov
dec
sbb
jp
push
jg
push
nop
lret
test
out
out
mov
ljmp
call
lret
into
pop
cwtl
pushf
rcll
push
imul
stos
popa
jne
and
mov
xchg
cs
inc
xorb
fsubrp
inc
cmc
cmp
sub
sbb
or
adc
mov
jg
adc
hlt
pop
jb
mov
adc
mov
loope
cmc
subl
imul
inc
testb
add
push
test
or
pop
dec
inc
sub
andb
rol
movsb
sbb
fistps
jb
pop
jmp
pop
out
in
add
data16
daa
inc
jl
enter
jnp
shll
roll
sub
ja
or
test
insl
cs
xchg
dec
stc
xchg
and
mov
repnz
jns
mov
mov
into
pop
adc
or
push
jne
mov
inc
push
shlb
xor
cmp
pusha
jp
dec
xchg
imul
xchg
shl
fs
cmc
mov
aas
inc
hlt
xchg
dec
out
out
inc
rclb
dec
add
shlb
and
dec
arpl
inc
dec
sub
cmpsb
repz
jno
repz
sbb
sub
mov
and
movsl
ljmp
stos
out
mov
pop
push
jg
cwtl
cmp
mov
xchg
mov
lods
sub
into
mov
das
sti
mov
and
jl
popf
inc
movsl
or
mov
pop
js
lock
es
stc
mov
xchg
add
adc
jnp
lret
mov
test
scas
daa
adc
js
ljmp
std
xchg
sbbb
dec
sub
roll
jg
rcrl
repz
shrb
lods
push
jle
jecxz
sub
inc
mov
test
xor
test
adc
shl
sub
cld
pusha
jae
out
lahf
and
pop
inc
jo
lods
inc
lea
adc
and
std
popf
xor
popa
jne
xor
inc
repnz
insl
mov
rclb
mov
dec
sbb
insl
mov
cmp
loopne
ret
dec
hlt
add
cmc
stos
rcrb
cli
fs
adc
mov
jecxz
gs
shlb
scas
arpl
sti
jmp
xchg
leave
and
push
add
dec
dec
sub
or
mov
push
in
in
jne
inc
inc
das
push
add
sub
lret
or
push
loop
out
xor
sti
cs
pop
push
test
xorl
pop
push
outsl
int3
mov
cmp
popa
rorl
dec
push
ds
fxtract
movsl
enter
das
ljmp
push
fsubl
and
fildll
les
in
xor
sti
loop
mov
cwtl
ret
dec
cmpsb
sub
in
pushf
stos
mov
mov
hlt
adc
pop
mov
or
mov
mov
mov
vfrczpd
sub
or
lds
push
sahf
mov
popf
lods
push
ja
imul
fwait
aad
push
pop
shlb
cmp
fldenv
iret
sbb
mov
fcmove
inc
fadd
dec
nop
scas
cld
gs
stos
mov
popf
add
inc
vmread
movsl
aad
xor
loop
dec
sti
lret
aam
mov
dec
popa
cmc
imul
cwtl
push
inc
jge
mov
sti
movsl
sub
imul
sbb
std
in
and
ja
negb
inc
or
push
ss
lock
fistl
xchg
xor
call
xor
mov
xor
loop
cmc
jo
mov
repnz
adc
xchg
xchg
xor
or
nop
div
das
je
pop
add
insl
mov
lods
inc
lods
adc
push
es
mov
sbb
shrl
mov
daa
push
push
call
pop
pop
loopne
out
inc
dec
scas
cmp
pop
aad
mov
inc
pop
insb
and
adc
push
cmc
dec
xor
xchg
enter
in
sti
mov
sub
rcr
pusha
lock
iret
pushf
mov
inc
cmp
cld
add
in
std
xchg
js
adc
inc
sahf
fnstcw
filds
mov
pusha
sbb
or
xlat
stc
pusha
stc
mov
cmp
pop
mov
sbb
into
loope
ror
sub
int
stos
lret
sub
jbe
and
lds
stos
inc
jecxz
js
js
mov
add
imul
pop
adc
mov
mov
xchg
test
fsub
inc
mov
jmp
lcall
jns,pn
pop
push
inc
mov
xchg
cwtl
xchg
mov
xchg
push
stos
lods
sti
jmp
jmp
ret
in
cmp
vpshad
fsubrl
xchg
int3
add
sub
ds
mov
cld
stos
push
or
lcall
xlat
xchg
push
pop
lods
adc
cmpsl
jbe
mov
int3
lods
movsb
pushf
sahf
xchg
inc
hlt
inc
xchg
xchg
hlt
leave
and
push
sbb
sbb
inc
das
es
pop
pop
xor
add
xchg
jo
mov
in
xchg
das
mov
imul
lods
shr
mov
dec
fwait
pop
push
int3
in
jbe
or
jg
fucom
cwtl
xor
pop
inc
popaw
mov
dec
outsb
out
xor
dec
add
filds
push
mov
gs
pushf
mov
test
adc
lds
xor
mov
push
xor
pusha
add
or
cmp
cmpsb
xor
imull
cmpsl
and
sub
sbbb
pop
or
ret
jo
fldl
loop
xchg
mov
loopne
fcmovnbe
mov
xor
cld
popf
fxch
inc
in
testb
xor
mov
out
std
and
daa
out
jno
addr16
inc
adc
adc
xchg
out
ja
loop
jae
pop
pushf
cmpsl
shlb
ljmp
out
xchg
or
lods
push
rorl
in
pop
dec
sub
cmpsl
xchg
mov
jp
xchg
push
xchg
dec
sbb
in
jecxz
xchg
stc
push
mov
outsb
cmpsb
loopne
or
xor
lods
fidivl
daa
ljmp
adc
mov
mov
cmp
xchg
aas
cmp
push
xchg
cmpsl
and
adcl
nop
hlt
cld
dec
adc
pop
dec
push
sbb
test
add
xor
sahf
adc
inc
les
stos
fadd
xchg
push
adc
sub
inc
out
xor
loope
fdivrs
cmpsb
and
daa
adc
sub
xchg
cwtl
mov
movsl
sbbb
cmpsl
and
xchg
test
ljmp
xchg
out
push
iret
sarl
mov
add
add
jecxz
add
stos
push
lock
adcb
pushf
push
mov
and
cmp
aam
dec
lock
loop
inc
outsl
xchg
nop
xor
cmp
sbb
jns
into
daa
add
lret
push
ljmp
push
or
add
xor
add
out
and
orb
mov
popf
fistl
inc
testl
loopne
mov
lds
cmp
fisubrl
mov
cmpb
mov
mov
mov
xchg
sbb
inc
nop
cmp
and
adc
out
out
daa
add
xchg
shr
scas
cs
ror
sbbb
addr16
jno
and
add
mov
or
lahf
ret
push
inc
repz
and
xchg
and
lock
cmpsb
mov
loop
push
jno
xor
test
lods
adc
ror
jge
popa
pushf
in
inc
xor
xchg
ljmp
sub
repz
ret
outsl
mov
sbb
add
or
mov
or
cmc
xchg
inc
gs
rcll
xorb
movsl
xorb
cmpb
cmp
jg
mov
dec
xchg
adc
pushf
iret
mov
add
rorb
jae
xor
mov
lods
jb
fdiv
sub
or
push
test
out
jns
fistps
mov
mov
jb
sbb
inc
bound
mov
clc
in
push
stos
andb
pop
sti
scas
das
or
repz
in
lret
mov
scas
push
inc
xchg
int
sub
mov
call
out
mov
jmp
adc
cmpsl
clc
cmpb
push
mov
imul
cmp
clc
or
insl
mov
bound
aam
pop
dec
icebp
les
add
xchg
in
scas
add
loop
mov
or
test
aad
mov
mov
out
cmpsl
imul
subb
inc
int3
xorb
jl
and
sub
jno
shrl
adc
mov
inc
sbb
fstps
jmp
roll
test
or
push
xchg
add
stc
sbbb
movsb
adc
add
inc
mov
clc
dec
sbb
fcmovne
add
jl
xor
adc
int
out
mov
ret
push
dec
fmull
movsl
xchg
xor
enter
sub
sbb
sub
cmp
jbe
mov
imul
or
repz
mov
lahf
sbb
popa
cmpsl
add
jbe
sbb
in
xor
out
lea
mov
aas
xor
in
popl
mov
jle
cmp
jmp
mov
push
popa
cmpl
cmp
xchg
xor
xor
das
xlat
int
subb
fadds
adc
xchg
or
cmpb
negb
and
femms
loopne
in
out
lds
jge
mov
rcrb
sub
sbb
sub
lret
popa
xchg
sbb
mov
xchg
cmp
scas
adcb
xor
pop
jge
push
sub
enter
icebp
add
aas
movb
or
les
adc
in
mov
addb
or
pop
cmc
add
notl
adcb
push
addb
bound
xchg
add
xchg
js
jne
pop
jo
cmpb
and
sub
out
pop
in
orb
loop
mov
cmp
dec
orb
xchg
out
fucomi
nop
subb
lea
jp
pop
push
aaa
xor
insb
andb
or
aam
test
pusha
outsl
leave
mov
andl
add
rcrl
mov
mov
outsb
xchg
in
push
jle
add
addr16
jo
cmp
or
cmp
mov
mulb
mov
mov
push
jae
and
cmp
add
inc
inc
push
subb
lret
add
test
jb
adc
add
adc
or
sub
xchg
xor
addb
adcl
leave
out
scas
and
cs
cld
push
pop
jno
loope
lock
add
mov
inc
cmpsl
mov
xchg
add
pop
sbb
pop
cmp
loopne
cmp
xor
dec
xorb
push
pop
test
and
sbb
xchg
mov
pop
shlb
add
sarb
hlt
sub
dec
jno
out
orb
mov
sbb
mov
xchg
and
jae
iret
or
xorl
cmp
out
lea
movsl
jb
cmp
mov
fs
clc
fldl
xchg
mov
jae
jno
lret
js
lock
jl
xchg
fisubrl
push
iret
sub
outsb
adc
mov
fwait
add
fiaddl
test
pop
mov
mov
mov
fs
imul
scas
sub
xchg
cwtl
dec
push
dec
add
xor
fwait
xor
mov
mov
repnz
stc
xor
jno
mov
xor
je
ss
jl
fsubrl
push
loope
and
orb
mov
sbb
xor
out
ret
adc
xchg
into
sbbb
and
adc
lock
add
sbb
add
leave
dec
in
and
stos
movsl
adcb
mov
dec
adc
test
cmp
add
xchg
cmpsl
jno
cmpb
jne
sahf
addb
out
sbbb
jo
ja
jge
or
pop
mov
push
and
sbb
mov
pop
push
mov
jmp
mov
ds
shll
loop
cmpl
inc
jecxz
xchg
mov
pop
leave
mov
les
add
and
pop
call
stc
pop
cmpb
gs
aaa
dec
sub
or
cmp
ror
filds
jns
add
sti
hlt
inc
stos
xchg
cld
xor
adc
ret
enter
enter
xchg
sub
fwait
andb
orb
pushf
dec
push
push
sbb
inc
pop
movb
data16
mov
adc
movsb
jl
fdiv
pop
shr
scas
fisttps
mov
mov
fwait
or
in
les
cwtl
lret
mov
movsl
jg
push
adc
dec
inc
push
jne
mov
out
test
and
into
or
mov
or
cmpsl
dec
repz
and
rcl
xchg
mov
jmp
pop
adc
dec
aaa
loop
inc
andb
inc
mov
test
push
mov
ret
push
inc
sub
add
repnz
lret
aam
outsb
xchg
in
les
test
push
cmp
and
addb
jne
cmp
pop
loope
shrb
adc
fadds
out
vpmovzxbq
cld
dec
inc
out
add
test
rclb
jl
adc
sub
mov
movsb
andb
in
addr16
mov
inc
add
jg
rcrl
enter
mov
mov
or
ror
or
pusha
pop
add
notl
subb
push
addb
enter
pop
shlb
inc
pop
adc
xor
sbb
adc
andb
imul
mov
mov
xorl
leave
cmp
add
cmp
and
icebp
test
movsb
push
aas
loopne
insl
aaa
imul
and
add
mov
mov
adc
sub
mov
xchg
lcall
enter
outsb
clc
in
ficoms
aad
dec
dec
mov
mov
movsb
shl
scas
idivb
arpl
add
mov
ljmp
movsb
lock
cmp
mov
rcrl
xchg
jno
insl
and
mov
mov
shlb
repz
es
pusha
lock
cltd
sbb
leave
movsb
mov
add
andl
xchg
xor
xorb
notl
xorl
lds
adc
ret
lret
add
or
movsl
ja
adc
pcmpeqw
xor
inc
stos
and
and
iret
lahf
cld
mov
mov
sbb
adcb
xchg
jecxz
jmp
nop
adc
adcb
rcr
call
aad
xchg
incl
xor
testb
pop
mov
add
inc
ror
pop
ljmp
cmpl
or
orb
dec
fdiv
orl
addb
or
std
cmpsb
xlat
sub
dec
cltd
cmp
mov
aad
mov
nop
jne
repnz
add
orb
inc
call
lock
xor
jecxz
xchg
sub
inc
loop
loopne
mov
call
movsl
hlt
xchg
push
pop
mov
addb
push
fs
xchg
nop
and
mov
dec
add
sub
add
sub
push
enter
lods
data16
add
or
xchg
mov
cmp
fwait
sub
mov
push
add
mov
cwtl
mov
rorb
fimull
cltd
enter
sbb
mov
xor
mov
lea
mov
push
into
adc
dec
sub
push
outsb
push
lahf
inc
gs
mov
and
mov
test
movsb
sbb
push
ljmp
sbb
repnz
and
sbb
mov
adc
sahf
cmpsl
pop
cmp
nop
and
lret
ds
les
dec
not
push
sbb
cltd
int3
adc
lcall
mov
push
add
fwait
and
adc
mov
mov
jno
js
add
stos
adc
and
call
mov
loopne
mov
fistl
popf
testb
shlb
sbb
bnd
pushf
movsl
sbb
arpl
shlb
push
shl
hlt
test
sahf
xchg
pop
adc
ds
ret
xchg
shrb
cltd
sbb
adc
sub
mov
xor
cmp
mov
ud1
pop
add
sbb
adc
and
imul
popa
mov
dec
push
sahf
lea
mov
les
mov
fs
subl
mov
fmull
add
sbb
adc
call
mov
add
adc
pushf
sub
call
mov
ljmp
loop
inc
pop
leave
dec
pop
rclb
lahf
xor
pop
hlt
in
testb
subb
in
add
test
lock
sbb
xchg
adc
jb
pushf
dec
enter
repnz
popf
xor
xchg
insl
cmpsl
jbe
mov
push
xor
jp
mov
or
xchg
in
out
sti
sbb
sti
xchg
add
fwait
enter
repnz
hlt
xchg
out
pop
sub
call
cmp
mov
cmp
nop
int
sbbl
adc
mov
sbb
push
jns
mov
fdiv
daa
sbb
push
jae
nop
pushf
fsubl
sbb
jmp
test
inc
sbb
movsl
gs
dec
in
test
mov
cmp
adc
mov
cwtl
mov
inc
movsl
sbb
sbb
pop
test
int3
test
shr
inc
cmp
mov
mov
int3
dec
jae
popa
lahf
cli
adc
mov
and
test
xchg
lcall
jmp
fstps
repnz
inc
mov
add
xchg
mov
roll
adc
and
xor
and
cli
inc
lret
mov
cltd
xchg
sbb
adc
mov
hlt
outsb
testb
mov
popf
inc
gs
xchg
push
mov
xor
rol
popa
mov
sbb
mov
lcall
mov
add
sbb
enter
xchg
test
jecxz
outsl
or
decb
add
lahf
arpl
test
mov
and
rolb
into
inc
repnz
sbb
xchg
imul
outsl
enter
repnz
push
jnp
test
aaa
cmpsl
into
fbld
push
dec
push
sahf
out
repnz
sbb
cmpsl
das
lds
mov
lods
cwtl
mov
pop
pmulhw
lcall
mov
push
into
popf
scas
outsl
inc
das
cld
fs
jecxz
sub
sti
in
and
dec
lahf
cmp
or
addb
movl
cltd
repnz
sti
mov
enter
aaa
xchg
fsubs
pushf
in
adc
popf
lea
fistpl
dec
inc
ret
test
pop
cltd
mov
sbb
std
mov
jno
add
stos
adc
and
mov
fwait
xchg
movsb
mov
fisubrs
inc
mov
push
inc
fcomp
push
mov
xchg
lahf
in
out
rorb
in
rorb
test
cwtl
out
lods
xchg
inc
mov
dec
dec
mov
jbe
mov
fdiv
hlt
lods
fmull
add
popf
je
mov
ret
das
pop
cmp
stos
into
in
testb
adc
and
and
mov
pop
xchg
stos
cltd
aaa
leave
mov
aad
and
xor
inc
or
pop
gs
imul
mov
fwait
cmpsl
lret
fisubl
popf
mov
sahf
data16
push
std
lds
xchg
rorl
xchg
loopne
popa
sbb
cltd
and
or
mov
dec
xchg
out
fwait
into
mov
adc
sti
mov
es
popf
push
inc
dec
jge
mov
daa
mov
in
mov
cmpsb
mov
pop
and
xor
rorb
sbbl
outsl
or
xrelease
sbb
test
mov
mov
dec
inc
lcall
mov
push
popa
cwtl
and
iret
pop
dec
leave
jnp
out
add
sub
shrb
lahf
push
pop
xchg
and
loopne
nop
dec
cwtl
leave
sbb
dec
sbb
inc
call
nop
ret
pushf
and
add
hlt
sahf
adc
push
out
lock
or
out
aas
cwtl
shl
mov
popf
aad
sbb
xchg
sbb
stc
fwait
test
mov
pushf
int
pop
hlt
xor
jg
lods
repnz
push
sbb
sahf
xchg
pop
push
cmpsl
jg
lds
nop
lock
lret
fildll
popf
loopne
jle
xchg
cmpsl
ffree
out
loope
lcall
jge
scas
fwait
mov
xchg
sbb
movq
testb
and
pop
xor
push
pop
ret
outsb
shrb
mov
sub
shr
lcall
fwait
loope
call
sbb
pushf
lret
les
mov
push
int3
dec
loope
sahf
jg
les
scas
lahf
pusha
cmpsl
jns
cld
add
mov
sub
ret
stos
xchg
xchg
lcall
sbb
fnstsw
xlat
int3
sahf
rcr
xlat
into
in
leave
mov
mov
pop
add
shlb
xchg
jne
mov
adc
sbb
leave
or
not
fwait
lcall
movl
sbb
xchg
push
iret
repnz
sti
dec
push
mov
incb
inc
and
sbb
jmp
sbb
add
fwait
lods
adc
and
or
call
mov
popf
mov
jno
mov
in
lods
lahf
mov
bound
jno
shlb
es
xchg
shll
sahf
cltd
out
jmp
iret
xchg
sbb
adc
call
mov
pushf
movl
sub
mull
fbld
out
xchg
mov
out
cltd
dec
loop
push
in
faddp
rorl
aam
clc
push
xchg
jo
fcompl
popf
jge
mov
and
aam
mov
fs
sti
divb
ror
in
sbb
adc
cmp
bound
aad
jae
aaa
sbb
fcoml
pushf
xlat
adc
popa
sub
mov
mov
sti
xchg
adc
dec
fimull
ljmp
leave
shlb
sbbl
lret
loopne
cltd
sbb
push
lds
mov
insl
pushf
es
jp
mov
push
rolb
dec
xchg
in
mov
hlt
push
notb
hlt
mov
lock
enter
adc
scas
push
fcmovb
add
inc
dec
in
push
add
imul
cld
sbb
insb
rclb
repnz
jp
lds
cli
in
rorb
add
cwtl
sbb
cltd
mov
adc
dec
fistps
add
out
jno
rcrl
mov
mulb
ret
mov
push
xchg
sbb
gs
and
sbb
jmp
mov
ror
cmpsl
out
inc
stos
popf
leave
std
test
mov
into
call
and
mov
cwtl
or
sbb
in
popf
dec
and
add
rolb
fwait
mov
stos
dec
mov
mov
mov
sub
hlt
scas
sbb
lahf
dec
mov
mov
sub
enter
sbb
jae
sub
mov
dec
fwait
add
nop
gs
mov
hlt
fcmovb
jne
add
jne
test
f2xm1
lods
nop
add
leave
lahf
shlb
and
fnsave
cwtl
xlat
inc
sub
jno
sub
hlt
int3
mov
mov
aad
notl
popf
and
jns
sub
push
arpl
push
xor
lahf
cmp
mov
loopne
sbb
cltd
mov
jo
cmp
leave
lcall
sbb
repnz
hlt
xchg
repz
push
mov
jge
sub
mov
call
roll
sbb
inc
inc
into
dec
mov
adc
push
outsl
add
sbb
shlb
mov
mov
fadds
pushf
sbbb
sahf
xchg
pop
add
mov
sahf
aam
pop
cltd
ja
add
or
aas
sbb
sbb
sbb
fstps
and
xchg
jb
inc
mov
pushf
mov
cmp
mov
and
rorb
imul
cwtl
jle
or
in
mov
cltd
mov
and
sbbl
and
xchg
inc
sahf
cld
loopne
pop
fcomip
jmp
repnz
mov
shlb
outsl
jae
push
mov
sub
xchg
fwait
mov
ret
sbb
lret
inc
stos
jb
test
and
mov
sahf
cmp
sbb
mov
mov
mov
sbb
push
push
and
mov
mov
fisubs
or
sahf
mov
add
cwtl
enter
nop
ljmp
aam
clc
mov
cltd
and
gs
enter
repnz
sbb
push
mov
xchg
push
arpl
xchg
sahf
test
int
bound
cwtl
lahf
and
mov
and
test
add
int3
fnsave
add
lret
pop
sarl
sti
in
ljmp
push
leave
sahf
int
popf
jno
lds
test
xchg
js
push
xchg
add
sbb
lret
adc
sbb
add
stos
jge
lret
sbb
addr16
loop
sbb
stos
adc
sahf
adc
xor
xchg
mov
lahf
jge
mov
mov
xchg
cwtl
arpl
inc
sbb
out
faddl
fwait
pop
xchg
pushf
and
sbb
xchg
mov
and
roll
enter
cwtl
movsl
scas
push
mov
sbb
add
rcl
adc
sbbl
movsb
xchg
sbb
inc
cmpsl
imul
xor
mov
fptan
push
sbb
and
shr
cmpsb
mov
mov
sbb
mov
icebp
rorb
sub
dec
pop
mov
sbb
dec
jg
mov
xor
mov
add
push
dec
sahf
adc
cmp
or
divb
lods
cwtl
jmp
and
lods
cltd
rorl
shl
lcall
cmpsl
hlt
dec
repz
pusha
cmpsl
xchg
leave
and
sbb
jmp
repnz
sahf
push
add
pop
mov
mov
insb
fnsave
cmp
stc
out
pop
sbb
in
cmpsl
mov
mov
shlb
adc
xchg
add
adc
enter
sahf
jnp
xor
xchg
shrb
cwtl
push
mov
pop
dec
jne
icebp
sbb
jl
or
and
inc
lret
bound
add
sbb
jbe
and
ret
rorl
sbbb
ret
cmpsb
add
test
mov
mov
lcall
mov
and
call
arpl
push
or
sbb
mov
aas
hlt
aad
insl
clc
test
decl
cltd
mov
jns
add
cwtl
push
adc
and
imul
inc
sbb
xchg
rcll
lret
lea
pushf
lds
sbb
mov
fmuls
push
mov
xchg
lods
sbb
lahf
ja
cwtl
push
mov
iret
lret
jo
and
gs
sub
call
into
pushf
xchg
mov
mov
fwait
pop
pop
sub
loopne
add
cwtl
add
pop
mov
mov
mov
or
hlt
test
mov
mov
inc
inc
pop
sbb
dec
push
rclb
repnz
adc
cmp
jae
ja
sti
xor
in
lahf
mov
and
imul
adc
push
cltd
mov
xchg
mov
fdiv
loope
fmull
cmpsb
jo
push
pushf
or
in
sub
fdivr
mov
rcrb
lods
cli
out
cwtl
scas
mov
mov
jl
lods
cltd
movsl
fiadds
sbb
movsb
fisubs
clc
sub
pushf
sub
mov
and
xchg
push
ror
scas
test
jecxz
movsb
or
lds
rol
or
cwtl
cli
add
sbb
adc
imul
movsl
jne
in
mov
nop
test
xchg
or
mov
inc
push
sub
xchg
lock
sub
and
les
cmpsb
repnz
mov
mov
je
inc
in
and
cmpsl
push
add
cmp
add
pop
sbb
notb
mov
addb
pop
dec
mov
push
mov
pushf
test
mov
xchg
cmp
in
repnz
mov
add
sbb
add
xchg
es
call
and
lret
dec
sahf
dec
loope
and
mov
xchg
std
hlt
xchg
xchg
rclb
movsl
lcall
pop
xchg
sbb
cmpsl
pop
shrl
xchg
popf
push
gs
mov
sbb
add
pop
sub
cld
ror
mov
sbb
push
loopne
push
sbb
adc
xchg
push
jmp
sbb
sbb
leave
shrb
outsl
inc
lahf
sbb
mov
sbb
adc
mov
cmpsb
xor
ljmp
push
lret
fmulp
enter
cwtl
lods
dec
inc
mov
mov
sbb
clc
outsl
add
lods
clc
or
fwait
inc
es
repnz
repnz
inc
into
sahf
in
in
pop
movsb
cs
sub
movsl
inc
loope
push
mov
cmp
outsl
andl
add
rcrl
mov
popf
pop
test
stc
data16
int
pop
inc
dec
pop
clc
enter
repnz
hlt
aam
and
and
fdivrs
test
xor
lds
aaa
loope
mov
xor
out
mov
popa
inc
sbb
sub
adc
std
add
and
loopne
xchg
test
int
mov
negb
int
mov
in
sbb
stos
icebp
sbb
dec
popf
cwtl
xor
fdivrp
rcll
int3
scas
mov
loopne
cwtl
sub
push
mov
xchg
shr
nop
ficomps
or
mov
mov
test
and
pop
dec
cmpsl
pop
and
enter
cwtl
cmpsl
cltd
scas
mov
mov
inc
subb
sbb
repnz
les
add
xchg
popf
aaa
in
sahf
or
pop
sub
pushf
clc
dec
movsb
add
sub
or
fstl
aam
adc
and
xor
xchg
fwait
cmpsb
popf
add
mov
lds
add
push
xchg
xchg
sahf
add
mov
imul
push
or
addr16
mov
lods
mov
jb
scas
push
dec
pop
push
in
fmuls
or
lods
mov
scas
fiadds
mov
mov
jecxz
jno
sbb
jo
loopne
mov
mov
cli
xlat
shlb
cltd
mov
or
xchg
cmp
aad
fwait
cmpsl
ljmp
push
cltd
mov
leave
inc
cld
lahf
sub
loopne
jo
xchg
mov
les
into
xchg
sahf
mov
js
sbb
es
arpl
pushf
call
mov
cld
popf
clc
sahf
hlt
dec
or
je
adc
out
les
aam
mov
lcall
cltd
mov
js
outsl
sbb
call
repnz
iret
incl
popf
sub
stos
clc
mov
inc
adc
iret
fmulp
adc
mov
out
push
pop
call
pusha
ja
cwtl
lahf
or
je
mov
sbb
imul
popf
repz
and
repnz
push
rolb
sahf
mov
and
ljmp
add
sbb
sbb
inc
or
mov
adc
ret
adc
mov
iret
fwait
add
sahf
mov
mov
shll
push
xchg
mov
push
push
out
cltd
jl
arpl
in
lods
sbb
push
ja
popa
and
stos
ret
push
in
repnz
mov
mov
or
loope
jp
enter
inc
mov
daa
leave
loop
cmc
es
loope
cmc
call
cmpsl
pop
sar
sbb
repnz
fmul
divb
mov
mov
add
sbb
xor
sbb
pop
lods
in
lahf
mov
rol
enter
rcll
orb
lcall
in
cmp
inc
xchg
ficoml
fnstenv
test
add
add
mov
cmc
mov
mov
pop
hlt
fistl
enter
in
xor
aas
gs
mov
cld
fs
mov
lcall
dec
mov
in
fisubs
xchg
sbb
mov
lock
or
push
mov
mov
push
stc
push
jno
cmpsb
adc
sbbl
sub
adc
in
pushf
lods
cmp
repnz
gs
cmp
mov
andb
jmp
or
and
and
sbb
jle
xchg
pop
xchg
pop
in
xchg
aam
fwait
sbb
pushf
int3
lds
or
cwtl
mov
rolb
and
call
mov
rorb
push
mov
sbb
sbb
fsubrs
mov
pop
mov
sbb
scas
mov
loopne
add
xchg
cltd
es
mov
movsl
push
rolb
pop
add
in
jecxz
rol
xor
jle
cmp
xchg
ss
iret
mov
push
dec
pop
sbb
mov
mov
data16
cmpsl
or
mov
jno
sahf
mov
div
in
gs
mov
iret
jecxz
xchg
sub
mov
imul
leave
jl
ljmp
sbbl
pop
imul
out
xchg
mov
sub
pushf
addr16
sbb
out
mov
daa
cmpsl
pop
rcrl
stc
mov
gs
adc
cmpsb
xchg
aam
cmpsl
mov
cmp
jmp
fcomps
test
xchg
int
push
mov
leave
sarb
fsubr
nop
lock
shrb
pop
lods
int3
or
stos
xchg
sub
mov
sbb
subb
cmp
xchg
or
pop
ret
lret
ret
aam
xchg
fimuls
andps
rclb
faddp
mov
clc
mov
sbb
sbb
and
push
mul
or
fcmovnu
mov
leave
xor
xchg
test
pop
leave
test
cwtl
push
sbb
aam
dec
shlb
xor
cltd
mov
scas
dec
rorl
and
pop
str
mov
aad
pushf
xor
test
xchg
push
sahf
adc
and
sub
mov
into
mov
or
cltd
mov
jecxz
jmp
lcall
mov
sti
add
pushf
mov
jbe
nop
testl
clc
xor
aam
and
mov
in
cmpsl
sub
leave
mov
iret
cltd
pop
lock
adc
fwait
cmpsl
lods
add
mov
add
and
aam
jmp
sbbb
lock
rorb
mov
lahf
std
imul
cltd
add
inc
sbb
daa
xchg
lcall
hlt
mov
xor
repnz
or
push
sbb
call
jecxz
mov
call
push
ror
xchg
fldenv
cmp
xor
inc
xor
xchg
jg
das
adc
repnz
sbb
inc
mov
bound
into
mov
loope
sbb
xchg
addb
leave
inc
in
lret
mov
pop
lock
hlt
jae
fwait
sbb
mov
cmp
test
cmpsb
jecxz
mov
jl
mov
ret
shl
insb
adc
xorb
std
xchg
repnz
xlat
mov
pushf
jg
push
idivl
mov
scas
shl
pop
xor
divb
leave
sbb
lods
enter
mov
xchg
add
scas
test
push
xor
scas
sbb
mov
mov
adc
in
shlb
push
ds
inc
loope
sarl
push
jecxz
and
push
cmp
sahf
int3
imul
repnz
pop
inc
mov
lock
sub
inc
mov
lcall
mov
stos
gs
mov
or
xchg
rcl
pop
repnz
mov
xchg
mov
cwtl
ffree
cs
aam
xchg
sbb
and
lcall
stos
xchg
or
clc
test
iret
in
or
sarl
mov
or
sbb
clc
xchg
es
xchg
ljmp
add
cmpsl
loope
add
fnstcw
add
add
repnz
js
dec
push
lahf
mov
add
mov
movsb
and
add
iret
add
fcompl
hlt
mov
xor
mov
cmp
jae
js
inc
sbb
sahf
adc
test
rclb
call
dec
dec
repnz
mov
int3
mov
fcoms
sbb
cli
mov
out
add
push
int3
sbb
fildl
xor
pushf
pop
sbb
test
xchg
lock
hlt
inc
sbb
and
fwait
cwtl
mov
jg
mov
leave
jecxz
scas
mov
dec
inc
or
lock
push
sbb
inc
add
nop
mov
pop
push
dec
push
push
mov
mov
cmp
sbb
push
sbb
sbb
mov
cltd
add
xchg
jae
imul
fimull
push
and
mov
fwait
aam
mov
xchg
test
push
inc
sahf
push
pop
pop
shlb
sahf
lock
les
cmp
push
dec
ds
es
mov
lcall
inc
mov
pop
test
int
push
cld
out
xchg
sbb
lret
adc
loopne
inc
sahf
pop
xchg
pop
imul
xchg
cmpsb
int3
lret
stos
sbb
lcall
out
jmp
sbb
cmpsl
popa
inc
xor
stos
mov
dec
repnz
out
mulb
pop
lock
mov
lea
dec
xchg
roll
out
mov
jns
xchg
mov
pop
mov
lea
fwait
insl
pop
ret
fcoml
mov
adc
and
aam
xchg
mov
adc
mov
mov
mov
testb
les
push
inc
fwait
out
dec
push
in
xor
aaa
xchg
popf
mulb
fcomps
enter
sbb
and
mov
les
mov
loop
stos
rcrb
cmpb
mov
sbb
xchg
cltd
adc
sub
adc
xor
les
xchg
sbb
or
cwtl
cmp
and
gs
or
stc
push
sub
mov
pop
leave
test
xchg
jmp
jl
test
popf
xor
mov
inc
repnz
fstps
adc
push
idivb
mov
inc
sbb
fwait
ret
repnz
imul
sbb
mov
mov
fsubrs
sahf
add
mul
lds
mov
rolb
mov
mov
sbb
leave
inc
fmull
pop
lahf
cmovno
fwait
ds
in
sahf
loopne
sub
daa
sahf
mov
xchg
dec
mov
stc
or
lods
rclb
jno
jle
sbb
lcall
add
xchg
pushf
mov
xlat
sbb
popf
arpl
stos
adc
and
xor
dec
mov
rcll
loop
daa
fcomps
sbb
lret
stos
adcb
sbb
adc
mov
dec
scas
cwtl
adc
daa
mov
pop
inc
out
sbb
icebp
mov
mov
leave
daa
jmp
xchg
mov
cwtl
cmpsl
fdiv
hlt
fcom
sbb
jno
loopne
aaa
repnz
movsl
int
jmp
mov
nop
insl
scas
pushf
addr16
dec
test
mov
shl
sahf
mov
cmp
jo
stos
call
shl
sbb
lcall
nop
int3
inc
repnz
fstpl
pop
push
lock
in
sbb
lods
movsb
sub
loopne
mov
aam
out
movsb
xchg
repnz
repnz
sbb
dec
inc
and
mov
xlat
cmovp
shr
mov
xchg
pushf
rcl
fcomps
stc
test
dec
iret
lea
jmp
sub
mov
leave
ljmp
mov
repz
or
mov
rol
sbb
lods
int
mov
es
inc
bnd
es
sub
adc
lock
cli
adc
mov
stos
inc
pop
xchg
sbb
test
sbb
out
out
enter
into
loope
mov
stos
fsub
or
pop
in
xor
mov
loope
shlb
dec
enter
sbb
cmpsb
cmpsl
mov
rcl
sti
xchg
mov
rcl
stos
mov
es
in
fcoml
popf
push
mov
jno
and
dec
mov
fbld
pop
lret
inc
in
push
jbe
sbb
mov
jne
xchg
shl
int
mov
movsb
loop
loop
stc
and
mov
decl
mov
and
inc
leave
sarl
xchg
mov
mov
rcrb
lods
adc
xchg
sbb
pushf
jl
mov
xchg
inc
sub
push
into
int
fcomp
xor
xchg
mov
movsb
stos
sbb
cld
adcb
adcl
jb
lret
cmpl
je
xchg
inc
stos
inc
in
fcoms
and
ret
or
lods
aad
movsl
mov
ja
push
test
add
sbb
test
dec
lcall
mov
enter
frstor
sbb
clc
imulb
dec
ret
fstpl
aam
stos
mov
test
lock
ficompl
jecxz
sbb
in
ret
sbbl
xchg
pop
jmp
push
xor
mov
aas
cwtl
mov
and
loope
cs
lock
rorb
xchg
sbb
adc
fwait
repnz
in
inc
mov
das
pop
sbbl
mov
leave
jb
in
adc
aam
adc
and
push
dec
push
jno
push
hlt
enter
mov
lds
and
call
fsubrs
pop
xchg
ret
scas
into
push
dec
hlt
pushf
xchg
enter
rolb
sbb
cltd
mov
xchg
enter
adc
aad
lock
out
mov
test
or
sbb
push
push
jo
sahf
test
fmul
stos
dec
and
ret
mov
xchg
inc
ljmp
xor
dec
adc
add
cmp
addr16
adc
cld
mov
cli
dec
not
xorb
and
add
enter
lods
push
lock
fmul
mov
pop
inc
mov
cltd
outsl
in
sbb
scas
mov
push
pushf
iret
dec
jb
hlt
leave
adc
into
mul
mov
push
xchg
jno
add
bound
rcrl
loopne
enter
mov
adc
mov
xchg
add
and
mul
adc
xor
add
insb
mov
stos
and
jns
imul
cmpsb
movsl
sbb
fistpl
dec
and
fdivs
stc
gs
cmp
mov
lods
sti
enter
xchg
mov
in
int3
mov
lock
and
fidivrl
bound
cwtl
rorb
mov
mov
lcall
adc
mov
lahf
lcall
mov
sbb
push
cwtl
arpl
hlt
data16
leave
mov
sar
lods
into
sahf
int
mov
sbb
cmc
cld
iret
enter
mov
xor
sbb
cld
fstps
pop
xchg
sbb
out
sbb
cld
mov
pop
dec
jns
fnstcw
add
or
and
popa
sysret
cwtl
std
gs
xchg
sub
loop
iret
mov
leave
insb
imul
loopne
pushf
or
sbb
add
sarb
sahf
ja
xor
push
mov
mov
cwtl
sbb
movsl
lds
xchg
push
out
nop
jmp
fwait
ds
aam
popf
jbe
aaa
mov
mov
or
or
sahf
ss
ljmp
loop
inc
nop
lods
movb
sbb
adc
lods
mov
cwtl
or
mov
sbb
jae
cmpsl
movsb
int3
sbb
and
xor
sub
test
jb
mov
mov
lret
inc
jle
mov
das
fdivr
inc
pusha
test
mov
shlb
fwait
dec
jno
jo
xor
scas
add
lret
shrd
leave
ret
adc
popa
rcl
in
cmp
test
mov
sbb
sarl
cmp
out
mov
rol
mov
inc
mov
adc
popf
push
sahf
loope
sbbl
cmpsl
loope
sahf
jg
in
mov
inc
lahf
ss
test
bnd
mov
retw
mov
and
xor
call
adc
inc
rcrl
fwait
jae
pushf
sbb
xchg
mov
mov
sahf
inc
faddl
mov
mov
hlt
mov
test
push
xchg
frstor
dec
sub
xchg
lret
mov
enter
es
inc
or
idivb
sbb
leave
inc
shl
xchg
sbb
mov
sbb
sub
cli
shrb
sbb
xor
stos
sbb
es
cmc
clc
jg
adc
cmpsl
push
jmp
or
sub
add
out
xchg
movsb
lret
pop
and
or
scas
fisubrs
push
movntq
mov
mov
in
push
lods
clc
loope
into
mov
mov
push
lret
and
enter
and
sbb
cltd
add
mov
dec
repnz
sbb
xor
dec
popf
or
js
lods
pop
addr16
fisubs
shlb
div
sbb
sub
repz
shrb
aam
dec
clc
mov
pusha
add
adc
mov
and
fsubs
add
sbb
cld
mov
mov
inc
mov
notb
jbe
mov
dec
jle
sarb
stc
mov
aam
mov
loopne
sahf
mov
mov
in
cltd
xchg
clc
notb
xchg
orl
pushf
mov
dec
adc
cld
test
xchg
loope
enter
xchg
ljmp
inc
nop
mov
inc
out
stos
and
fidivrl
loopne
leave
ljmp
xchg
add
inc
adc
lods
pop
cld
test
lods
sbb
dec
enter
cwtl
jo
xchg
jb
lea
in
push
mov
mov
inc
mov
frstor
push
and
mov
iret
sbb
sahf
sub
int3
call
arpl
add
fdivrs
clc
cli
dec
dec
add
outsb
adc
mov
rol
sbb
cmc
call
sbb
pop
mov
loopne
and
sbbb
cld
mov
mov
mov
and
negl
push
sbb
cltd
leavew
and
into
dec
dec
notb
popf
push
push
mov
push
popf
jle
mov
push
mov
mov
pushf
cmc
xchg
sbb
test
mov
push
push
inc
scas
inc
fmuls
movsl
in
ret
mov
mov
xchg
cwtl
ljmp
sti
daa
enter
sbb
push
int
mov
shl
push
pusha
fxch
daa
push
or
nop
xchg
rcrl
dec
jo
icebp
mov
fucomp
mov
setl
lock
int
lods
mov
xchg
sbb
outsl
xchg
xchg
pop
gs
mov
fdivr
mov
in
mov
and
sbb
or
shr
fs
fistpll
push
in
xchg
mov
popa
lock
push
and
pop
and
xchg
jns
les
vprotw
hlt
imul
push
lds
cmc
cld
test
daa
pushf
lods
enter
test
cmpsl
je
dec
adc
arpl
les
xchg
pop
cwtl
mov
dec
inc
aam
dec
hlt
rcl
mov
mov
rclb
push
jnp
add
lods
push
insb
leave
xor
xchg
pop
movsl
clc
cld
out
test
ret
add
cmp
in
not
sbbb
enter
std
xor
mov
popf
out
cli
adc
xor
fld1
dec
sbb
jp
cmp
popf
pop
xchg
push
jae
test
orl
stc
adc
jmp
pushf
ret
das
add
scas
rorl
loop
dec
lock
push
add
dec
leave
inc
notb
inc
mov
fisubrs
icebp
rorb
lds
push
cltd
jb
inc
adc
lret
mov
dec
ret
mov
dec
insb
mov
fdivs
pushf
js
jecxz
ficoms
nop
and
mov
mov
mov
nop
hlt
call
cmpsl
mov
loopne
and
into
leave
nop
and
adc
loop
imul
clc
idivl
push
shll
into
movsl
xor
xchg
mov
repz
xchg
xchg
loopne
sahf
xor
cmp
sbb
xchg
loopne
stos
sbb
sbb
sbb
and
imul
or
xchg
jecxz
jge
adc
xchg
sbb
sbb
cwtl
push
sbbb
mov
sbb
in
cmpsb
push
rclb
shlb
push
pop
mov
mov
in
mov
jns
cwtl
adc
in
fbld
test
scas
xchg
loope
inc
stos
in
adcb
fcompl
xor
lds
ret
inc
cli
scas
orl
int
ja
inc
stos
dec
adc
and
mov
push
lock
rcrl
div
fcmovu
mov
iret
mov
fdivrp
adc
lods
mov
or
mov
inc
cld
sbb
xchg
sahf
xor
mov
rorb
mov
repnz
sbb
mov
xchg
or
mov
mov
sti
and
es
loopne
mov
ret
sbb
aad
cmp
enter
stc
out
lods
ljmp
faddl
dec
je
xlat
sbb
movsb
clc
in
mov
mov
mov
cs
aam
xchg
fwait
addr16
cld
fmuls
mov
and
shl
cmc
xchg
pop
flds
lahf
in
lods
inc
rolb
popf
add
xchg
adc
loope
mov
paddq
push
mov
mov
sarb
xchg
in
and
into
jb
xchg
mov
jmp
popf
or
add
add
sbb
pushf
jo
adcb
sub
mov
lahf
movsl
pop
rorb
int3
subb
mov
scas
decb
or
mov
pusha
cli
int
mov
mov
test
fidivl
nop
mov
inc
cwtl
cltd
or
out
or
cltd
sub
stc
mov
fwait
xor
sbb
fsubrl
int3
xchg
in
sbb
dec
or
jp
sub
cmc
or
jno
mov
or
enter
mov
lock
push
int3
int
lahf
adc
ret
jl
add
out
add
push
test
xchg
popa
mov
adc
cltd
int3
sbb
sbb
adc
popf
xchg
mov
call
jmp
popf
jle
icebp
das
sub
adc
bound
mov
push
mov
int3
mov
call
cmpsl
inc
jno
jb
xchg
and
mov
fsub
pop
dec
jno
pop
mov
dec
sbb
fadd
mov
and
out
shlb
dec
lcall
das
push
loop
test
mov
stos
mov
mov
inc
sbb
cld
dec
inc
xchg
js
mov
iret
ds
hlt
push
in
sahf
mov
roll
sub
leave
lahf
push
enter
mov
rcrb
mov
loope
push
stos
fldl
xchg
mov
mov
mov
adc
popa
xchg
pop
mov
and
mov
sarl
repnz
hlt
lcall
out
stos
jne
loope
or
daa
in
pop
roll
push
test
mov
mov
fldl
mov
adc
cmpsl
int3
mov
or
mov
lcall
mov
popa
lahf
shr
pop
sbb
jmp
xor
mov
lahf
push
and
mov
mov
inc
cltd
cmpsl
insb
loopne
mov
or
inc
subb
xlat
lods
stos
mov
cs
loope
xchg
clc
mov
sub
clc
in
popa
ret
xchg
and
gs
int3
mov
cwtl
push
sarb
cmp
lcall
fwait
out
cs
mov
adc
adc
lahf
xor
push
jmp
sti
mov
lock
adc
testl
lock
rcl
test
inc
icebp
adc
imul
in
jmp
and
in
cmpl
lret
stos
xchg
clc
lret
pop
push
mov
cmp
pushl
adc
pop
mov
js
xchg
fstpl
scas
adc
testb
xlat
test
andl
sahf
mov
addb
rclb
mov
lret
sbb
mov
clc
cmpsl
cmc
jno
adc
xor
sub
fistpl
fsubr
xorb
cwtl
nop
dec
popa
adc
cmp
dec
gs
inc
outsl
popf
sbb
in
sbb
mov
pop
add
mov
jne
mov
gs
add
jnp
fstpl
int
scas
mov
mov
lret
sahf
jg
cmpl
xchg
mov
xor
inc
xor
mov
jmp
movsl
push
fdivr
fcmovu
pusha
mov
ljmp
mov
aad
leave
shll
mov
xchg
mov
mov
addr16
movsl
shlb
cwtl
jnp
xchg
sbb
xchg
mov
fildll
lcall
sbb
adc
lods
es
mov
mov
andb
fdivl
mov
into
xchg
cwtl
jo
mov
mov
mov
sub
int3
adc
mov
and
and
xchg
pop
ja
out
push
es
mov
push
shl
xor
mov
mov
mov
aam
xchg
inc
push
add
mov
fcomps
fldenv
fadd
stc
repnz
pop
jno
imul
pop
jno
sarb
adc
stc
test
cwtl
lret
mov
popf
cmp
fists
mov
mov
xor
or
sbbl
subb
add
sbb
mov
sbb
lcall
dec
lods
out
xchg
sbb
cmpsl
insl
inc
fsubrl
and
mov
cmpsl
nop
sbb
mov
sbb
ret
inc
sub
mov
pusha
mov
jmp
dec
push
cmp
dec
lcall
fwait
movsl
mov
loopne
mov
xchg
xchg
inc
jo
rorb
lahf
or
or
mov
ret
and
pusha
push
mov
adc
and
lcall
add
and
fdivl
pushf
sub
xchg
mov
cmpsl
mov
faddp
sbb
test
lods
or
out
scas
mov
lods
shlb
xor
rorl
pop
sbb
stc
add
shrl
rorl
rcrb
mov
hlt
cmpsb
pop
icebp
add
dec
adc
out
pop
push
test
imul
or
lahf
test
and
nop
cltd
mov
divb
cs
inc
ret
xlat
popf
rclb
out
mov
sti
adc
adc
ret
hlt
sti
adc
mov
or
xlat
xchg
jmp
in
cmp
popf
sbb
call
mov
out
movsl
idiv
sti
xchg
fdivs
gs
mov
mov
test
sbb
es
mov
dec
and
movsl
push
sahf
js
mov
loopne
push
and
lret
cmpsl
mov
test
mov
pushf
lret
stc
rcr
cmp
fidivrs
sbb
mov
cmc
mov
push
lock
xchg
repnz
jp
cwtl
orl
mov
xor
in
and
jle
adc
lock
out
data16
ljmp
inc
jo
mov
mov
jno
repnz
lahf
scas
into
scas
into
or
repz
mov
cld
sbb
imul
sbb
jmp
shld
mov
ljmp
cmp
pop
sbbb
mov
fisubrs
ret
cmc
xor
incb
adc
sarb
fildl
cmp
shl
and
dec
jne
nop
lods
shlb
push
jge
mov
dec
sbb
lods
aaa
add
xor
scas
pop
test
lods
das
mov
push
and
sbb
hlt
out
andb
xor
cmp
mov
fimuls
shrb
iret
jno
add
xor
sbb
lea
mov
inc
cmc
jne
addr16
adc
rol
fst
movsl
adc
adc
call
lods
mov
cld
movsl
arpl
into
int
mov
sbb
stos
loope
rep
rcrb
mov
mov
test
cmpb
movsb
hlt
mov
ret
jnp
in
fstps
and
sarb
and
mov
cmpsb
adcl
cld
lds
sbb
mov
lods
hlt
cs
test
lahf
rcrl
iret
mov
stos
fadd
ret
dec
popa
ljmp
stos
mov
stos
mov
nop
mov
stc
mov
ja
mov
inc
loopne
mov
mov
jmp
push
iret
repnz
add
pusha
lahf
xor
ret
test
or
mov
inc
les
ds
and
cltd
fsts
sbb
add
arpl
mov
sahf
dec
addl
lods
add
mov
and
enter
lock
adc
inc
mov
xor
in
xchg
fdivs
test
adc
mov
xchg
scas
lahf
bound
out
sub
sarl
cs
jmp
int3
test
and
iret
scas
xchg
popl
push
fwait
sub
mov
add
jbe
mov
mov
dec
dec
fmuls
push
shr
sbb
icebp
test
mov
cwtl
xor
inc
mov
int3
fcomps
sub
enter
jbe
xchg
xor
sbb
rcr
outsb
dec
xor
inc
sarl
cvtps2pd
sub
adc
inc
ljmp
loopne
mov
mov
ret
cltd
jl
cmpsl
lcall
orl
jne
inc
outsl
mov
out
pop
sbb
outsb
popf
and
movsl
xchg
js
mov
pop
and
into
call
sar
mov
lret
maxps
lods
and
or
sbb
clc
mov
cmp
dec
add
pop
add
and
icebp
andb
imul
lret
leave
shl
test
and
test
lret
mov
sbb
leave
jg
mov
or
mov
jl
jmp
hlt
mov
mov
mov
xchg
enter
cwtl
rorb
adcb
mov
jno
mov
pop
pop
fwait
and
int
mov
sahf
or
add
or
dec
into
inc
xchg
rcrl
filds
mov
jecxz
inc
xchg
in
popf
ficomps
lock
sbb
shrl
pop
mov
lahf
repz
lods
mov
mov
test
mov
aam
sbb
jmp
jbe
or
xchg
movsl
cmp
sbb
xchg
fists
dec
lcall
orb
dec
shlb
scas
xchg
adc
add
clc
les
cmc
movsl
xchg
mov
jle
test
and
push
mov
rclb
pop
dec
inc
mulb
push
fnstenv
and
int3
clc
xlat
sub
lods
sbb
iret
shrl
hlt
mov
add
mov
cwtl
popa
hlt
nop
mov
xchg
mov
fiaddl
andl
mov
cmpsb
mov
leave
sbb
fisubs
pop
rcll
mov
std
pop
xchg
inc
fisubs
std
lods
inc
lret
mov
mov
cwtl
xchg
dec
mov
or
xchg
add
loopne
jg
pop
push
aad
loop
lock
lret
negl
fildll
jno
ljmp
cmp
mov
push
popa
loope
loope
mov
addl
testl
leave
loope
shrl
mov
sbb
in
mov
xchg
inc
mov
loope
scas
scas
or
fsubs
push
hlt
mov
lea
addr16
push
inc
push
mov
push
lds
loop
pop
add
stos
testl
or
hlt
mov
mov
in
mov
test
rcrl
fcoms
shl
aaa
dec
ret
testl
mov
shr
lahf
fcmovnu
mov
cwtl
sub
adc
in
test
push
and
lods
lods
clc
lods
mov
fwait
rcll
cld
les
mov
add
push
aad
out
addb
lahf
mov
xchg
shlb
pop
roll
sbb
dec
adc
seta
rcrb
loopne
sbb
pop
mov
inc
push
xchg
mov
lcall
int
add
or
jno
xor
test
xor
shl
inc
inc
jmp
mov
movsl
rol
adc
fwait
inc
shl
mov
mov
loope
in
into
loop
test
enter
leave
mulb
cmpsl
ret
stc
repz
lret
js
cltd
clc
mov
lcall
gs
add
mov
fistpll
iret
aad
add
dec
xor
loope
xorb
sbb
adc
lahf
cli
or
stos
fwait
shl
xchg
lret
orb
ret
lods
cmp
mov
fsub
sub
mov
push
shlb
and
inc
lock
loopne
cwtl
mov
test
sub
call
lods
and
fsubr
mov
rclb
ja
int
add
lret
xchg
clc
mov
cmpsl
cwtl
mov
and
mov
and
jne
stos
clc
shll
add
add
push
jecxz
mov
leave
sbbb
addr16
and
adc
mov
int
mov
adc
loope
cmp
or
lock
xchg
mov
imul
cmp
add
xchg
sbb
std
or
fsub
push
fcomp
pop
popa
in
or
inc
nop
hlt
rclb
pop
mov
adc
adc
loop
pop
dec
inc
repz
sbb
scas
je
push
cli
cwtl
clc
lods
cs
scas
int3
fcomps
mov
add
pushf
test
and
les
mov
test
enter
int3
loop
leave
mov
mov
rclb
xorb
fldenv
pop
pop
and
fdivr
lock
fcoms
jno
out
gs
dec
rcrb
loopne
sbb
mov
push
leave
daa
cld
enter
mov
andnps
ljmp
movsl
push
adc
mov
fdiv
xchg
orb
movsb
jo
mov
out
push
xchg
inc
test
dec
rorl
mov
mov
fisttps
decl
and
mov
call
fs
inc
adc
les
aad
cwtl
aad
sub
jmp
stos
push
out
sbb
lods
mov
frstor
pushf
std
add
rclb
and
adc
mov
add
mov
les
out
testb
mov
out
ret
hlt
mov
repz
adc
aas
ficomps
in
mov
pop
test
scas
lods
lahf
sti
aas
or
xchg
sub
test
hlt
inc
mov
pushfw
test
xchg
inc
dec
ret
faddp
popf
std
xchg
cmp
addr16
cmp
mov
cmc
push
fxch
enter
mov
lcall
dec
jp
mov
xor
gs
xchg
sub
dec
xchg
and
or
cmpsl
mov
iret
mov
push
enter
xchg
or
jecxz
sub
in
imul
call
rcrl
sbb
movsb
ljmp
mov
add
cli
adc
popa
lahf
inc
push
push
lea
mov
shrb
cs
clc
loope
fabs
mov
ret
loope
mov
mov
or
stos
lret
mov
lret
jmp
mov
shrb
mov
sbb
fld1
movsl
das
lahf
xchg
cmpsl
fsubrs
lcall
mov
loope
fldl
jg,pn
idivb
xchg
xor
rolb
sbb
loope
cmp
xor
movsb
repz
loopne
cwtl
jne
dec
shr
and
xor
loopne
xor
inc
repnz
sbb
cld
lods
movsl
aaa
add
xor
xchg
mov
cltd
sbb
call
fcoml
movsb
lahf
mov
rorb
and
pop
call
loopne
mov
lret
and
inc
fstl
fdivs
fcompl
rcl
mov
jae
ret
movsl
repnz
fwait
rcr
and
outsl
imul
out
gs
push
xlat
xbegin
sahf
dec
mov
cwtl
xchg
bound
lds
cmpsl
scas
inc
rcl
inc
fstl
ret
inc
mov
jns
in
mov
inc
sbb
lcall
inc
in
popa
enter
pop
loop
mov
test
adc
mov
mov
int3
ret
adc
and
es
fldenv
jno
inc
mov
xchg
scas
in
rolb
int
cs
insl
les
mov
or
stos
and
jo
enter
mov
lock
dec
inc
rcrl
sahf
push
cmp
ljmp
mov
aad
add
ret
jge
sbb
out
paddd
jb
fcomip
sti
adc
int3
lret
sahf
cmpsb
mov
and
pop
add
outsl
push
add
mov
sub
shlb
lahf
ds
in
mov
notb
divl
mov
repnz
mov
lret
int3
pop
sbb
mov
enter
movsb
push
ret
pop
inc
test
pusha
xchg
xchg
adc
jmp
in
add
mov
push
test
gs
pop
inc
add
mov
loope
cmpsb
cmp
pop
sbb
ret
aad
stos
inc
push
stc
flds
aam
adc
lods
sahf
mov
push
clc
shr
cmp
test
adc
jno
test
hlt
repnz
pop
dec
jle
or
rcrb
pusha
popl
pushf
fcmovu
mov
pop
sahf
jb
test
stos
sti
xchg
lods
mov
dec
push
sar
mov
sahf
and
cwtl
std
enter
push
and
adc
jno
ss
and
popf
ret
sahf
pop
dec
mov
in
rorb
movsb
rep
mov
sti
fstpl
sub
mov
mov
push
mov
shl
stos
sbb
ljmp
fidivl
dec
dec
jg
sbb
enter
or
arpl
les
mov
fcomps
mov
pushf
dec
dec
sbb
push
add
dec
inc
aad
leave
mov
xchg
sub
or
sbb
fsub
push
xor
adc
and
xchg
xchg
cmpsb
dec
inc
cwtl
add
call
movsl
cld
stos
cltd
or
es
adc
mov
jmp
mov
rcrb
jg
mov
pop
xor
jmp
adc
out
fisttps
dec
inc
mov
jmp
mov
mov
fdivrs
inc
lahf
and
xor
mov
leave
adc
mov
test
popa
testb
mov
call
pusha
add
jne
sbbl
shll
popf
and
lods
outsb
and
fwait
gs
jmp
es
push
fstpl
and
loopne
mov
clc
mov
dec
lahf
xor
xchg
aad
clc
out
lods
clc
lock
sub
orl
popf
fbstp
xor
filds
mov
movsb
ja
push
mov
popa
ljmp
push
mov
adc
out
push
add
xchg
mov
lods
cmpb
mov
out
mov
sub
leave
lock
inc
shlb
sbb
lods
add
loopne
xor
shl
inc
jmp
or
shll
imul
pusha
adc
jle
call
sub
fildl
adc
sub
push
xorb
in
loop
xchg
add
mov
scas
jmp
xchg
rcrl
sti
popf
adc
lcall
leave
lret
push
shlb
sub
sbb
fistpl
or
aam
adc
xchg
imulb
push
pushf
inc
out
lcall
xchg
add
sbbb
sar
sub
mov
xchg
loope
sahf
inc
movsl
test
jp
data16
notb
cmp
movsb
jbe
scas
mov
or
or
shrb
in
lret
mov
popf
push
rcl
das
andb
scas
ljmp
idivb
adcl
push
mov
es
inc
push
sbb
or
fimull
push
shll
sub
mov
sub
fsubl
dec
int3
test
sbb
dec
jl
mov
cld
test
push
jnp
mov
pushf
das
call
aaa
and
sub
inc
xchg
sbb
aad
mov
mov
mov
pop
cmp
mov
adc
cltd
or
and
in
mov
lods
xor
movsb
cwtl
int
in
sbb
int
movsl
clc
loope
adc
or
lret
or
jle
sub
pop
xor
movsl
ficoml
out
xchg
les
roll
cwtl
mov
jp,pn
mov
xor
je
mov
psllw
in
jb
xchg
mov
xchg
sub
mov
fcom
xchg
fucomp
cmpsl
mov
cmp
repnz
lcall
in
sbb
dec
inc
or
and
cmpsl
jmp
orb
sahf
popf
sbb
xrelease
xchg
rol
gs
movsb
mov
popf
sbb
ja
clc
mov
mov
sahf
icebp
mov
test
sahf
and
cwtl
mov
test
lods
xchg
rcll
mov
sbb
leave
jo
leave
pop
sahf
lds
add
ret
stos
imul
movsl
shl
xchg
mov
sbb
movsl
or
arpl
icebp
cmpsl
dec
jno
add
inc
loopne
pusha
push
in
pop
sub
fcoms
inc
test
mov
lods
rolb
pop
sbb
lods
mov
cli
mov
adc
stos
testb
mov
leave
sbbl
xlat
cmp
fstpl
stc
popa
pushf
imul
hlt
fistl
cmp
add
cmp
repnz
xchg
mov
xchg
ret
inc
cmp
enter
mov
out
xacquire
mov
fsts
push
ljmp
sbb
adc
in
mov
xchg
lock
inc
dec
aam
sbb
xor
ret
jbe
popf
sub
inc
imul
into
insl
fbld
sbb
ret
div
cmpsb
mov
sbb
xchg
mov
lret
xchg
cmpsb
mov
add
std
push
aam
lods
aad
mov
in
lahf
mov
lahf
shlb
mov
scas
inc
xlat
push
lahf
hlt
loopne
sbb
mov
mov
js
iret
jp
int
daa
in
add
stc
dec
inc
test
leave
leave
jg
lret
jecxz
xlat
add
loop
xchg
fsubrs
icebp
fldl
int3
and
sub
push
xor
mov
call
mov
jae
mov
sbb
inc
mov
inc
leave
ret
lcall
hlt
mov
pop
xchg
iret
fmul
mov
nop
xchg
repz
and
fmuls
sbb
cltd
dec
in
sbb
loopne
lcall
cmp
popf
push
rcl
jnp
jmp
cld
ficompl
scas
mov
loop
cld
and
scas
cs
mov
cltd
leave
cli
orl
filds
movsb
and
mov
adc
popa
lods
mov
loope
mov
ret
mov
mov
cmpsl
es
stc
loope
repnz
test
sbb
pushf
dec
or
xlat
lods
jae
ljmp
pop
jae
lods
cltd
gs
imul
xchg
inc
stos
mov
adc
fisubl
xchg
and
out
mov
sub
in
scas
mov
sbb
in
jns
out
sub
out
push
cmp
sarl
lods
mov
sbb
dec
mov
dec
popa
mov
and
mov
aad
shll
sbb
xchg
dec
push
testb
hlt
test
mov
ret
inc
mov
imul
cmp
inc
xchg
push
mov
or
xchg
sbb
mov
sbb
mulb
mov
xchg
mov
xor
loopne
fisubs
scas
mov
cmc
adcl
sbb
cld
or
out
into
push
bound
inc
movsb
mov
xchg
lods
xchg
hlt
push
add
sub
mov
pop
or
jns
or
cli
cmc
mov
into
out
xchg
xchg
and
or
lods
rorb
lock
pop
popa
xchg
and
mov
ljmp
push
pushf
xchg
jmp
in
or
push
xor
mov
in
rorl
dec
xor
cld
insl
addr16
faddl
stos
in
loop
pop
sahf
nop
cmc
test
xchg
push
sbb
sbb
scas
test
sbbl
pop
inc
cwtl
jb
in
fwait
mov
leave
sbb
mov
jle
jmp
clc
xchg
hlt
add
sbb
gs
cmp
mov
inc
test
lods
xchg
mov
clc
insb
fldl
shlb
add
loopne
lock
ret
push
xchg
shrl
cmp
gs
push
loope
insb
cmp
das
xor
inc
addb
xchg
popa
sahf
negl
cld
or
push
mov
out
mov
int3
xchg
int
ret
imul
sti
push
push
pop
xchg
pusha
sbb
les
loope
push
incb
stos
fsubl
adc
cltd
movsl
les
inc
mov
add
inc
and
and
rolb
sbb
mov
lcall
push
inc
mov
lods
lret
gs
mov
inc
pushf
pop
ljmp
jmp
stos
rorb
das
popa
xlat
cs
call
jns
lret
inc
clc
mov
insb
mov
sbb
and
xlat
inc
lret
inc
sti
mov
mov
push
div
jle
add
mov
cwtl
inc
es
loopne
dec
dec
ror
add
stos
cwtl
push
xor
add
mov
lock
dec
das
ret
xchg
sbb
lea
and
rolb
adc
inc
hlt
mov
jo
aad
sub
inc
mov
xchg
xchg
lcall
xlat
mov
mov
pushf
mov
add
leave
sub
xchg
repz
lret
pop
cwtl
sub
loopne
mov
hlt
dec
dec
and
mov
popa
ljmp
sub
sbb
data16
mov
daa
fsubrs
mov
lret
movsb
dec
mov
inc
es
push
call
frstor
cmovl
ror
lret
cld
fists
or
cmp
inc
leave
in
mov
lret
sbb
in
les
adc
scas
leave
inc
faddl
mov
add
lods
iret
inc
addr16
xchg
ss
dec
outsl
mov
pop
or
xchg
mov
mov
cmp
repnz
add
imul
test
out
popf
in
repnz
dec
or
mov
lcall
jecxz
stos
pop
roll
in
xchg
addr16
sbb
jge
cmpsl
add
in
aam
lahf
loope
sub
test
andb
psubq
xchg
sbb
xor
fidivs
das
mov
xchg
stos
lretw
sbb
sbb
lahf
pop
jmp
dec
xchg
pop
fwait
lahf
shr
mov
cmp
test
mov
xchg
gs
mov
sub
lods
in
out
and
les
shl
push
xor
adc
lret
cmpsl
scas
fisubrs
lods
inc
jb
cltd
ror
jecxz
movsl
out
sbb
sub
xlat
roll
jmp
mov
lods
dec
cmc
pop
divl
cmp
aam
fistpl
in
movsb
sahf
and
scas
inc
out
push
mov
adc
ret
pop
mov
lret
lret
fildl
mov
lret
pop
int
ret
cltd
adc
mov
mov
lret
sub
xor
push
xchg
lcall
dec
inc
dec
lock
cmpsl
dec
andl
fidivs
dec
inc
std
fcoms
movsl
mov
cmpb
add
adc
or
clc
lahf
xor
cltd
xchg
mov
ja
jecxz
and
adc
and
xor
in
mov
dec
lock
cwtl
rcrl
pop
mov
mov
lds
loope
stos
cmpsl
mov
fdivs
jl
mov
cmc
add
sub
stos
sub
shrb
call
push
gs
xor
lds
pop
inc
mov
out
xchg
sti
mov
add
insb
add
and
sbbl
shr
lds
push
inc
xchg
mov
loop
xorb
inc
les
jmp
mov
dec
rclb
mov
imul
jge
inc
xchg
cmpsb
sahf
inc
mov
stos
leave
clc
pop
movsl
shll
dec
into
lock
out
add
add
mov
or
neg
xchg
scas
orl
fisubrs
add
push
adc
mov
push
xchg
cli
push
adc
mov
xchg
mov
icebp
mov
shl
test
mov
in
sub
bound
xlat
xchg
test
add
mov
sahf
mov
fisttps
ja
or
dec
mov
rcrl
mov
cltd
sub
rol
stos
mov
cmpsb
inc
dec
rcll
mov
mov
push
addl
dec
mov
push
dec
cld
cld
lods
xchg
dec
push
je
cmpsb
cltd
mov
cmpsl
fiaddl
daa
stc
loope
cmp
mov
out
fcom
dec
hlt
into
dec
and
bound
movsl
fwait
clc
in
hlt
push
divb
push
sbbl
sub
adc
adc
lret
ret
cmp
mov
fwait
es
mov
push
lods
mov
xchg
mov
test
mov
mov
adc
cmpsl
xchg
pop
rorb
leave
fsubr
sbb
sbb
mov
and
xchg
sbbl
jne
xchg
mov
xor
loop
pushf
testl
or
loope
cmp
mov
icebp
mov
dec
adc
jmp
frstor
scas
push
enter
test
pop
adc
pop
loop
inc
shll
shll
mov
sbb
jmp
loope
in
out
ror
rorb
mov
inc
scas
sbbb
lock
aad
shrb
cwtl
and
xchg
je
orb
loopne
idivb
xchg
xor
leave
cli
add
sbb
pop
popa
imul
cmp
jg
test
fiadds
xchg
es
add
adc
jbe
cli
rcrb
std
mov
aad
test
loopne
xor
xor
mov
sbb
rcrb
add
cld
jecxz
xchg
and
loop
enter
cwtl
lds
pop
nop
dec
int3
notl
or
pop
loope
push
scas
lahf
mov
sub
push
mov
mov
dec
clc
repnz
lahf
ret
mov
lret
les
or
fsubrl
push
mov
jecxz
sti
in
dec
loope
xchg
mov
cld
lea
popa
mov
or
into
arpl
inc
andb
or
pop
in
int3
pushf
leave
cld
mov
int
pop
lret
int3
std
stos
mov
fabs
mov
mov
lods
shl
sub
xlat
int3
mov
addl
popf
fistl
insl
and
aam
cltd
inc
out
loopne
out
or
aam
pop
add
xchg
inc
sarl
cltd
sbb
test
mov
fwait
addr16
lds
xchg
jo
adc
test
pop
ss
sub
leave
into
mov
mov
call
gs
pop
pop
sbb
shll
sahf
lods
xchg
fwait
xor
xchg
das
into
test
ror
sbb
popf
cmova
iret
in
adc
add
in
xchg
jp
mov
sbb
inc
add
or
jbe
loop
outsl
orb
fcomip
add
into
pop
popf
push
icebp
test
inc
clc
cwtl
repnz
ja
add
jbe
jns
add
mov
icebp
fisubrs
fwait
mov
andb
jae
mov
cs
sub
subb
lcall
sbb
mov
sub
bound
xchg
cmp
lods
push
popf
push
push
mov
sbbb
dec
mov
mov
rorl
lds
fimuls
sbbl
divb
mov
in
cmpsl
mov
imul
or
mov
psraw
les
mov
hlt
xchg
into
mov
icebp
or
lock
push
fisttps
shll
push
test
leave
pop
and
filds
stc
fldl
stos
ret
or
mov
pop
flds
lds
pop
dec
in
sarl
cmpsb
mov
aaa
and
repz
dec
dec
call
lret
scas
dec
in
or
pusha
clc
aad
dec
lock
lea
mov
jecxz
cltd
and
lret
lock
out
ret
pop
add
mov
sub
xchg
out
mov
fdivrs
or
push
jmp
or
jl
shlb
adc
and
mov
mov
push
loop
or
aas
gs
inc
test
dec
mov
dec
inc
mov
mov
lods
inc
xchg
jo
jne
mov
adc
xchg
mov
sbbb
mov
cmp
addb
jmp
or
loopne
lock
mov
or
addr16
addr16
jle
call
sbb
sub
or
imul
dec
jg
push
in
or
cmp
rcrb
push
dec
in
clc
jbe
jp
cmp
sbb
adc
lock
test
sbb
decl
mov
mov
stc
jmp
fnsave
loopne
cmpsb
hlt
mov
fdivrs
sbb
xlat
aad
and
add
into
cmp
jmp
adc
cmpsb
rorb
sbb
out
dec
std
out
jbe
mov
and
push
out
int
in
xor
or
mov
rol
popa
xchg
cmp
jge
insl
mov
fstl
cmc
pop
daa
dec
shll
jno
imul
push
in
lcall
out
out
insb
jle
fwait
mov
notl
imull
jae
stc
notl
and
fisttps
jmp
push
insl
pop
insl
cmc
xchg
cmp
pop
jae
dec
xchg
das
pushl
add
stos
add
sbb
jle
mov
adc
cmp
xchg
fwait
or
pop
fisubs
pusha
lcall
imul
cmp
mov
repz
xchg
sti
mov
lods
cmpsl
pop
sub
or
push
sub
cmc
adc
mov
mov
stos
xor
clc
out
mov
fwait
loop
fimuls
sbb
lods
daa
das
inc
xor
xor
xchg
int
mov
shlb
pop
fdivrs
mov
repz
int3
in
dec
es
out
loop
out
jo
pusha
lcall
lock
std
std
mov
data16
js
test
iret
rorl
adc
pop
push
ss
cmp
lods
lods
jge
sbb
adc
in
aam
push
rolb
aam
adc
test
mov
ds
xchg
faddl
xchg
push
mov
test
adc
ret
adc
lock
fldl
lea
je
pusha
pushf
push
movw
lea
jmp
lea
jbe
xor
movzbw
bts
sub
test
rcr
adc
xchg
mov
pusha
movw
pop
mov
and
xadd
sbb
sar
add
movzbl
adc
shr
bts
shld
neg
mov
movl
pushf
and
add
call
inc
push
neg
pushl
call
movsbl
mov
bswap
lahf
lea
jo
setae
lea
pushf
pusha
push
push
movl
mov
movb
pushl
mov
mov
pushf
pushl
ret
cmpb
call
mov
bsr
dec
add
ror
shr
add
add
movsbw
shrd
mov
cmp
cmc
shr
cmc
stc
pushf
cmp
pusha
push
lea
je
clc
cmp
call
and
fistpl
ds
push
jl
pusha
and
push
mov
mov
and
pop
cmp
mov
cmp
adc
xchg
sbb
sbbl
ret
and
in
mov
loope
out
adc
aas
jae
leave
out
dec
adc
sbb
std
mov
and
outsl
clc
pextrw
stos
cmp
fcoml
sub
sbbb
iret
jb
cmp
lods
cmp
adc
pop
lcall
add
lods
pop
loope
xchg
inc
sub
xor
and
dec
ja
or
xor
loopne
pop
into
shrb
push
sti
test
adc
add
jno
add
adc
out
js
cltd
mov
xor
mov
push
mov
cli
push
sbb
push
lock
pop
aam
rorb
pop
call
add
mov
xchg
clc
mov
xor
fbld
js
jae
inc
jp
sahf
sub
outsl
enter
and
cmp
and
push
orb
mov
aaa
and
mov
jecxz
out
pop
rcll
dec
repz
repz
dec
inc
sbb
jnp
add
mov
movsb
lea
sub
dec
cmp
ds
and
mov
test
pop
test
imul
sub
dec
in
push
fcmove
movsl
push
repnz
sub
lret
shrl
and
fidivrl
shl
test
in
fcomip
in
mov
cmp
dec
out
popa
xchg
xor
je
push
sar
push
cmp
xchg
test
mov
xchg
push
test
mov
xor
pop
and
push
call
call
lods
lds
jns
cltd
pop
jbe
jle
jp
data16
jp
xchg
push
jmp
push
mov
jle
jns
outsb
ja
daa
mov
loopne
and
xchg
insl
xchg
cmp
push
cmp
cli
repnz
pusha
les
pop
fs
fbstp
inc
lcall
inc
je
jo
sbb
add
mov
inc
loope
adc
and
push
lods
or
mov
adc
sub
insb
pushf
cmc
cmpsl
loope
mov
jp
push
pop
adc
push
jbe
xchg
xor
jns
xorb
pop
mov
cld
or
mov
iret
andb
adc
inc
gs
push
and
addl
xchg
call
fistl
dec
es
mov
add
lcall
test
test
mov
movw
call
stc
sub
jmp
call
test
or
jne
push
fsub
jmp
mov
cwtl
loop
mov
xchg
out
ds
das
sbb
clc
sbb
repnz
inc
shlb
shrb
out
sub
jle
fs
cmp
ret
mov
addb
in
out
roll
mov
fwait
out
sbbb
jne
imul
decb
add
lahf
mov
xlat
sub
rolb
jl
test
pushf
push
mov
mov
mov
sti
out
aad
stos
add
jno
sub
les
into
mov
lret
dec
jmp
ds
cmp
pop
sub
dec
sub
jbe
jb
dec
sbb
cmp
dec
repz
mov
scas
shrb
push
jnp
sub
stos
stos
and
jnp
mov
jno
push
shll
mov
push
jge
inc
in
les
lahf
mov
out
fldcw
add
mov
mov
adc
es
cs
add
lcall
xor
pushf
mov
test
clc
stc
add
pushf
cmp
pusha
bt
movzwl
adc
mov
cmc
add
call
insl
in
mov
dec
iret
xchg
pop
je
jo
pusha
add
es
ds
test
test
and
and
out
ja
mov
jle
mov
sbb
cmp
sbb
pop
cs
pop
jge
add
pop
testb
push
adc
pop
sub
add
inc
shlb
xor
arpl
xchg
scas
dec
pop
jne
aad
adc
jl
dec
iret
adc
mov
rclb
lds
xorl
add
loopne
fmull
push
push
pop
fdivrl
test
movsb
mov
lretw
inc
repnz
out
in
and
xorl
lcall
jne
dec
rol
nop
pop
lds
ret
adc
mulb
ss
lcall
movsl
mov
xchg
pop
mov
out
pop
push
xor
and
sub
arpl
das
incl
sbb
shll
in
fs
jmp
or
cmpsb
fists
minps
cltd
pop
mov
das
test
mov
popf
lcall
lea
call
call
sbb
in
mov
mov
mov
test
or
cli
movsb
loop
push
pushf
xchg
sbb
mov
repz
and
push
call
add
inc
cmpsb
jae
sub
cmp
mov
rcrb
push
cli
push
testl
xor
and
outsb
push
pop
call
lea
mov
pop
popa
xchg
xor
jno
into
pop
imul
ds
shlb
shlb
pop
clc
push
in
enterw
xor
data16
jo
pop
push
sub
imul
jns
dec
inc
aad
out
ss
leave
pusha
ljmp
jo
pop
dec
in
aad
cmp
lods
jno
push
mov
mov
add
pusha
pushf
popf
pop
stc
push
js
jle
fs
ret
fdiv
push
filds
mov
popa
sbb
push
inc
addb
dec
lds
jmp
pusha
int3
mov
scas
adc
xor
sub
ds
or
mov
lea
ja
pusha
push
push
lea
jmp
inc
js,pt
pushf
mov
lods
stc
pushf
pop
outsl
or
inc
sbb
mov
daa
out
neg
lods
sbb
scas
out
inc
shlb
repz
mov
ret
in
push
push
scas
cwtl
jg
push
push
lods
mov
jb
popa
xchg
xor
jne
js
adc
lret
jns
or
imul
movsl
sbb
pop
movsl
lcall
bound
in
inc
sbb
fnstenv
sarl
fistl
sti
rol
xor
pop
testl
add
js
sub
jmp
push
inc
in
ret
outsl
push
fisttpll
push
xchg
xor
test
xchg
jmp
rorl
push
lods
mov
dec
pop
popa
xchg
cs
jge
jns
mov
mov
sub
lahf
and
cmp
mov
ds
mov
aam
int
jmp
imul
loopne
in
les
fadds
xlat
dec
push
insl
mov
mov
lods
lods
jns
clc
repnz
pop
adcl
inc
mov
cwtl
add
jp
daa
mov
xchg
mov
mov
icebp
popa
and
lret
fisubrs
in
push
test
mov
cmpsl
jno
lods
dec
push
int3
pushf
sarb
cmp
lea
sbb
pop
xor
int
stc
pop
cmc
dec
int
fnstenv
pop
lcall
fs
pushf
movl
pushf
mov
pushf
push
lea
jmp
js
push
adc
mov
rclb
cmpsb
loopne
jmp
sbb
cld
xchg
push
fistpl
pop
int
aam
call
mov
enter
pop
icebp
xor
imul
mov
and
popa
dec
pop
cmc
dec
fwait
addr16
and
popa
xchg
sub
cmp
popa
or
xor
lods
fidivrl
inc
bnd
pop
out
out
pop
lcall
jmp
out
pop
dec
cltd
cmp
add
pusha
push
push
or
or
cs
sub
mov
pop
push
jmp
cmp
iret
repnz
into
mov
leave
xor
jmp
pushf
adc
gs
insl
shr
cmp
mov
adc
int3
mov
stc
in
pop
jno
dec
mov
lahf
mov
sub
jmp
push
inc
cld
sub
jecxz
fldcw
add
nop
mov
or
insb
loopne
je
xorl
in
inc
hlt
push
lock
clc
jb
pop
enter
ds
adc
xor
pop
and
clc
shrl
push
jg
arpl
pop
add
inc
adc
push
pop
dec
je
jge
call
out
fnsave
imul
mov
mov
sbb
cs
gs
pop
lret
mov
adc
mov
loope
mov
adc
dec
inc
sub
bound
cmc
subb
push
add
xor
mov
mov
mov
mov
lds
cmp
push
jp
jne
mov
lret
pop
pusha
lcall
imul
xor
enter
jbe
dec
call
mov
repz
jns
imul
xor
lds
add
pop
lock
fsubr
rcrl
icebp
pop
in
aad
bnd
mov
in
jns
jns
add
lods
or
outsl
fstl
outsl
rcrl
pushl
bt
test
pushf
lea
jne
jmp
pop
es
mov
lret
rcrb
aad
mov
mov
les
hlt
pusha
push
inc
leave
es
arpl
int
add
or
add
inc
stos
mov
and
pop
aad
je
push
out
in
movsb
add
aaa
sbbl
xchg
add
cmpsl
sbb
cmp
sub
imul
push
mov
or
push
int
icebp
dec
sarl
cmc
ja
jg
lcall
inc
xor
cld
jno
push
lcall
adc
int
icebp
xorl
and
fdivl
mov
and
mov
and
shlb
hlt
jo
adc
insl
xor
dec
je
sub
mov
jmp
out
outsb
rcl
mov
fistpll
and
out
push
lret
outsl
xchg
roll
jae
outsl
std
dec
in
push
shll
into
jo
pop
rol
sub
andl
xchg
repnz
xor
lcall
imul
pushf
mov
jmp
call
add
mov
mov
mov
decl
sti
icebp
popa
ss
hlt
push
sbb
cmpsl
jle
ret
in
fwait
add
mov
push
sti
aam
ja
and
xchg
xchg
xor
leave
add
ss
jno
jl
adc
in
sbb
popa
xchg
sub
xor
stc
mov
addr16
lea
xorl
lea
xchg
adc
jne,pn
shr
movw
call
dec
jmp
lahf
push
pop
test
mov
fstpl
aad
cmc
xchg
std
jnp
sbb
mov
cmp
push
mov
repz
out
fcmovne
dec
pop
imul
iret
cli
out
inc
push
xchg
fstpt
mov
popa
xchg
sub
mov
adcl
sub
mov
scas
xor
sub
xor
hlt
fisttpll
mov
dec
adc
shl
push
movl
mov
cmp
stc
add
jmp
inc
test
and
push
dec
and
push
and
and
xor
mov
inc
sti
icebp
xchg
icebp
ja
pop
push
loope
je
in
jne
cmpsl
out
imul
fsts
inc
loope
sarl
int
int
sub
push
add
inc
out
push
popf
test
test
lods
lret
popf
sti
mov
incl
push
cmpsl
sbb
push
in
xchg
rcrb
fcom
test
add
sarb
jle
xchg
or
mov
fnsave
loopne
ljmp
mov
xor
ret
or
mov
xchg
push
push
test
out
jbe
push
out
xchg
push
inc
mov
dec
lret
mov
dec
repz
mov
jp
js
adc
imul
movsl
lea
sub
sub
adc
push
sbb
repz
ds
xchg
gs
aam
jl
bound
xchg
push
xchg
lods
mov
aad
outsb
ret
xchg
sub
add
add
insb
hlt
call
stc
out
mov
fwait
enter
incb
inc
mov
es
cmp
mov
daa
mov
aad
lret
xchg
daa
fdivrl
fcom
inc
ss
out
jb
pop
sub
mov
fisubrl
adc
dec
stos
cld
iret
xchg
xor
mov
jb
imul
xchg
fistl
mov
ret
xchg
mov
sti
xor
dec
arpl
lret
jnp
testb
xor
lcall
scas
popf
pop
popf
adc
pop
adc
cmpsb
fucompp
scas
or
je
sti
inc
add
lods
lods
lcall
bt
cmp
add
call
mov
loop
shrb
pop
and
mov
xor
stos
stos
arpl
inc
imul
neg
jge
sub
jg
inc
std
jg
lcall
push
pop
dec
repz
lock
sbb
add
sbb
cmp
scas
push
test
push
aas
push
pop
les
sbbl
xor
or
fstpl
mov
add
mov
cmpsl
or
lea
mov
mov
daa
cmpl
outsl
mov
add
clc
sub
daa
cmp
xor
add
jae
inc
and
pop
cmp
sbb
out
xor
lahf
dec
test
jno
das
rorl
ljmp
sbb
mov
test
fidivrs
stc
pop
repz
aad
mov
mov
and
aaa
jg
in
xchg
add
sbb
out
cwtl
sub
outsb
sub
and
xor
adc
daa
ja
popl
add
pop
add
adc
or
inc
sub
jl
insb
push
je
dec
shrb
imulb
imul
push
cs
popa
shrb
je
pop
imul
sahf
dec
les
jns
pop
repnz
jno
dec
cmc
out
test
js
popa
xchg
es
shl
inc
fcomip
or
xor
xor
les
dec
cld
push
lock
rclb
lcall
popa
and
loope
out
mov
arpl
js
pop
sbb
or
or
test
imul
dec
aad
push
insb
push
inc
cmp
fidivrl
xchg
mov
pop
jmp
cs
mov
testl
outsl
jge
fbld
xchg
ret
inc
ljmp
arpl
xchg
mov
push
ja
sub
mov
sub
es
xorb
or
lcall
fistpl
test
bt
cmc
jmp
ja
mov
and
and
outsl
add
arpl
jge
fimull
mov
add
pop
ds
adc
xchg
sbb
xchg
or
test
and
sbb
outsl
ret
addr16
rcrl
stos
cmp
inc
loop
cwtl
in
dec
arpl
jae
into
and
lcall
push
inc
sbb
xchg
popa
xchg
and
call
mov
xchg
xchg
adc
sbb
shll
stc
push
jmp
push
lcall
fistl
dec
js
push
or
add
jns
push
adc
push
pop
xlat
xchg
popa
inc
enter
leave
push
jmp
mov
xor
arpl
jnp
cli
pop
imul
ficoml
and
addr16
pop
sbb
popa
je
loopne
mov
push
repz
pop
mov
out
add
xchg
es
add
sbbb
mov
pop
pop
call
mov
mov
sub
push
pop
ja
cmp
pushf
aam
dec
cmp
aad
fnstenv
sbb
aaa
jecxz
mov
jg
mov
pop
fsubs
cmpsl
mov
data16
adc
xchg
pusha
and
cmp
pop
test
mov
sbb
adc
iret
test
add
pop
scas
hlt
mov
lcall
int3
jb
fisubl
shlb
jo
stc
inc
pop
pop
xor
xchg
cwtl
ficomps
rorl
cmp
push
gs
enter
fdecstp
jecxz
jg
push
aam
loope
mov
or
mov
inc
mov
rcrl
push
stos
shrl
je
adcl
dec
out
push
fisubrl
push
into
push
lcall
neg
xor
lea
not
pushf
bswap
call
cmp
jmp
rol
setl
sub
mov
pusha
mov
movb
jmp
imul
adc
inc
and
mov
xchg
adc
xchg
sbb
sbb
mov
insb
xchg
pop
cwtl
push
jb
sti
repz
mov
dec
in
call
jmp
or
pop
pusha
pop
movb
movb
call
call
hlt
xchg
mov
inc
sub
jne
pop
adc
inc
pop
test
jp
adc
jns
add
jno
lret
cwtl
es
ss
das
xchg
sbb
cli
js
xchg
cs
outsb
int
or
dec
jno
fnsave
test
jnp
xor
inc
adc
inc
cltd
and
lea
mov
add
les
aas
sub
push
add
mov
mov
sub
into
bound
cmp
das
xchg
cmp
out
inc
aad
popf
aaa
popf
sbb
aas
mov
sbb
mov
pop
add
out
xchg
out
push
cli
pop
out
ds
or
xchg
leave
jnp
xor
mov
lock
popa
rcrl
ja
in
pop
add
xchg
xchg
inc
cmp
jnp
ja
addr16
std
into
setns
mov
in
jo
adc
sbb
xor
dec
mov
scas
and
xchg
cmp
and
and
mov
mov
push
fmulp
jbe
jl,pt
loopne
lret
leave
jecxz
call
and
es
and
test
cmpsl
std
imul
insl
sbb
jbe
cmc
jl
jg
decl
test
out
repz
fldenv
and
push
roll
mov
lcall
and
and
ja
push
movb
lea
jmp
mov
pusha
pusha
lea
jmp
scas
cwtl
fiadds
mov
aas
dec
pop
jge
pop
pop
dec
pop
push
adc
sbb
mov
pop
ss
fdivrs
mov
jo
rclb
out
xorb
add
mov
mov
scas
jge
sti
mov
hlt
out
mov
jp
negl
inc
in
mov
cli
popa
xchg
pop
pop
mov
scas
push
add
sbbb
or
pop
jmp
jecxz
rcrl
fstpt
and
lcall
call
jmp
xchg
ljmp
sti
insl
scas
test
sub
aam
in
les
ljmp
or
mov
jo
xchg
cmp
mov
mov
cmpsb
adc
cmc
inc
pop
andl
sarl
sub
push
arpl
jae
cmp
jmp
dec
sub
fs
jbe
fldpi
je
rep
jg
push
xchg
sub
adc
push
jecxz
icebp
adc
stc
jmp
or
mov
xchg
sub
mov
or
or
stos
or
xchg
test
rorl
inc
js
imul
mov
jne
sub
or
int
rcrl
mov
outsb
out
dec
aam
adc
xchg
mov
call
pop
shlb
hlt
jb
dec
loopne
clc
dec
lcall
enter
mov
cmc
not
cmc
neg
movl
pusha
call
pushf
lea
jne
pusha
push
movb
bswap
mov
movsbw
lahf
lea
movb
call
jmp
push
sub
dec
mov
sub
loope
stos
insb
sub
loope
lret
or
loope
lret
mov
loope
lret
insb
loope
mov
imul
or
loope
stos
loope
ljmp
mov
dec
loope
or
sub
sub
loope
dec
std
pop
jl
pusha
fiaddl
xor
push
dec
add
insl
add
popa
and
jne
pop
shll
icebp
sti
jl
or
fucomp
pusha
cmp
add
adc
mov
xchg
and
mov
mov
cmp
pusha
les
pop
or
sub
xchg
add
jle
les
push
lret
cmpsb
jns
xor
retw
and
insb
ljmp
add
lods
loope
sarb
mov
lods
push
mov
xchg
ds
push
and
call
stos
shrb
fs
sbb
imul
adc
mov
push
out
ficomps
aaa
mov
sub
imul
std
mov
jle
je
push
mov
jbe
pop
add
int
add
movsl
lds
dec
cmpsb
xor
ljmp
shlb
sub
stos
xchg
add
pushf
mov
lret
pusha
enter
cmp
add
cmp
sahf
iret
loopne
adc
or
push
movsb
and
jae
adc
movsl
sbb
std
repz
sub
aaa
test
in
daa
test
sub
mov
cmp
lcall
xor
add
fidivrs
xchg
jle
cmp
mov
sub
test
or
imul
push
aas
cld
xchg
cwtl
and
and
cmp
mov
mov
sub
rcll
out
jle
mov
sub
jb
out
out
cltd
lock
in
imul
out
lock
je
or
cwtl
mov
xor
mov
ret
rol
push
lgs
or
stos
add
bound
cmp
or
addr16
push
pop
in
mov
lret
sbb
xchg
and
stos
or
mov
adc
mov
sbb
lods
and
scas
cmpsl
into
mov
lcall
pop
and
loop
lock
in
mov
loopne
shlb
out
jle
or
fnstcw
ljmp
ja
test
cmp
loop
pop
dec
in
xor
jb
cld
push
push
jo
pusha
repnz
loop
ret
inc
out
ret
sbb
mov
pop
popf
js
in
leave
lahf
in
mov
fwait
aad
lds
out
mov
fisubl
gs
xlat
jle
jg
add
mov
cli
push
jg
into
fimuls
jle
cmc
out
pop
dec
popf
test
jmp
cmp
in
pushf
mov
sbb
cwtl
mov
xchg
icebp
xchg
fistpl
fidivl
or
sbb
xor
sub
cs
xor
pusha
pushf
lea
jne
stc
xor
aam
movsbl
mov
setle
clc
add
clc
clc
cmc
pusha
mov
test
cmc
clc
test
call
icebp
mov
mov
xor
push
inc
xor
xlat
mov
xor
xchg
jmp
inc
dec
pop
subb
jge
lods
xor
lret
and
mov
ss
xor
pop
inc
push
aad
push
lock
mov
cmp
xchg
mov
xor
sub
fdivrs
sub
and
sbb
ds
pop
or
clc
and
mov
jae
dec
xor
arpl
in
xor
sbb
lods
sbb
mov
fcmovbe
xchg
adc
popa
pop
push
mov
sti
push
jp
dec
sbb
mov
jo
adc
arpl
lret
loop
jmp
dec
jecxz
mov
push
or
mov
jb
xchg
sbb
f2xm1
inc
or
sub
jno
bound
mov
xchg
and
sub
lcall
rcrb
test
neg
jmp
hlt
xchg
jo
jne
push
mov
ret
mov
mov
dec
xchg
dec
add
ja
fs
dec
mov
push
mov
aad
sbb
sub
jmp
in
push
out
lock
dec
fmulp
mov
sbb
movsl
into
fdivrs
jl
pop
or
icebp
out
pop
lock
shr
outsb
mov
gs
icebp
jecxz
fidivrl
in
insb
xchg
shll
imul
int
lret
popf
sbb
and
dec
repnz
ljmp
and
stos
add
pop
push
fnstenv
outsl
icebp
push
icebp
lcall
aam
xor
mov
inc
imul
rcrl
and
pop
outsb
and
ret
int3
movsl
xchg
push
and
test
jmp
popa
add
add
scas
lock
pop
loopne
mov
dec
sub
mov
insl
cltd
pushw
sub
int
lret
popa
imull
inc
ret
popa
iret
popa
lcall
dec
divb
mov
pop
jne
push
add
jne
push
in
shlb
dec
sub
stc
insl
cltd
push
add
xchg
test
scas
sbb
pop
mov
mov
push
shll
adc
adc
adc
mov
add
test
lret
push
rolb
ljmp
inc
outsb
movzbw
pusha
daa
and
mov
not
adc
mov
dec
sbb
test
cwtl
mov
shrd
xor
mov
lahf
rcl
mov
bt
clc
test
pusha
movw
pushf
pushf
lea
je
movzbw
clc
bsr
bts
mov
and
bts
cmp
sar
add
bsr
or
bswap
mov
stc
cmc
push
clc
test
call
setbe
mov
stc
cmpb
pusha
call
lea
je
bsr
or
call
stc
mov
pusha
add
movb
pushf
lea
jmp
call
xor
pop
sti
jmp
jnp
cmp
inc
xor
inc
adc
add
sbb
adc
mov
add
es
xchg
sub
jnp
cmpsb
cmp
add
dec
inc
outsl
movl
pusha
push
lea
jmp
push
cmp
mov
filds
cmp
xchg
sti
test
mov
lods
fstpt
add
lret
loop
sbb
add
test
and
add
xor
sub
scas
push
mov
fstpt
inc
int3
adc
lock
lahf
lods
or
out
mov
jg
repnz
sbb
scas
sahf
and
out
mov
mov
movb
ret
inc
cli
dec
cli
lcall
dec
cld
sub
bts
sar
sub
ror
shr
pop
or
call
sub
push
cmpsb
roll
sbb
insb
or
add
popf
mov
add
int
xchg
int
imul
daa
push
add
mov
mov
test
mov
mov
dec
fisubrs
call
cmp
inc
popa
xchg
pop
mov
jns
ja
adc
mov
jecxz
fbld
jge
dec
ret
push
jmp
sbb
or
clc
cmp
not
lea
movb
lahf
bswap
movzbw
mov
call
inc
cs
sub
mov
pop
push
pop
popa
add
push
pop
test
xchg
xchg
jge
fisubl
sub
pop
hlt
dec
pop
dec
mul
jne
rorb
jo
xor
loopne
out
adc
lods
cs
dec
icebp
ret
clc
push
inc
rclb
sub
sub
popa
sbb
cmp
mov
movsl
call
dec
fistl
inc
out
repz
jecxz
lcall
fs
jb
cmc
bt
cmp
pusha
lea
jae
cmp
sar
movzbl
mov
cmc
push
mov
push
sar
clc
rcl
mov
test
sub
cmc
pusha
stc
repnz
call
lea
ja
rol
shl
clc
add
sub
pusha
sub
add
shl
rcl
mov
clc
mov
add
push
mov
stc
pusha
bt
repnz
call
lea
call
pushf
jmp
cmp
pushl
movb
lea
ja
clc
pusha
call
pop
and
sub
pushf
jp
xlat
mov
jecxz
lret
adc
icebp
pop
dec
cmpsl
sub
push
lret
clc
cld
mov
and
into
fidivs
sbb
jns
push
adc
roll
sbb
adc
sub
dec
std
inc
popf
daa
cmpsb
cwtl
cmp
mov
enter
and
je
idivb
xchg
xchg
enter
mov
mov
xchg
es
adcb
lcall
mov
mov
xchg
and
ds
mov
and
jne
call
call
and
cmc
pushf
bt
bt
add
pushf
push
lea
jmp
pusha
stc
add
cmc
cmc
push
movzwl
sub
push
shld
clc
mov
pushl
jmp
ret
push
cmp
add
add
and
cmp
add
add
outsl
cmp
cmp
test
std
sub
fildll
cmp
out
cmp
add
add
pusha
mov
pusha
pushf
lea
jmp
clc
mov
rol
clc
inc
cmc
add
shr
mov
bt
push
bt
test
test
movb
push
pushf
lea
je
pushf
pushl
jmp
push
sbb
out
icebp
jno
mov
and
ss
xor
push
andb
mov
leave
loopne
cmp
jae
int3
push
cld
inc
dec
cs
es
mov
test
sbb
and
and
xchg
xchg
jne
cmp
andb
and
daa
call
push
inc
loopne
mov
jns
popa
xchg
adc
in
outsb
xchg
insl
inc
jecxz
push
mov
mov
int3
dec
loopne
int3
pop
shlb
fs
arpl
inc
fld
cmp
lods
ljmp
mov
mov
mov
push
xor
mov
imul
inc
dec
pop
sub
sahf
push
inc
dec
sub
mov
mov
add
inc
xchg
sbb
add
shrb
cmpsl
push
inc
dec
jge
popa
xchg
adc
je
ja
adc
jp
xor
xor
push
leave
pop
cmc
jae
inc
lds
dec
loope
ds
pop
or
fsubr
and
idiv
rcll
iret
mov
sarl
dec
xor
fwait
in
jnp
and
or
jne
shll
jno
push
mov
and
clc
nop
imul
mov
fists
push
loop
or
out
push
jge
outsl
mov
lea
test
test
or
fabs
inc
fwait
jge
imul
push
lret
imul
lcall
popa
daa
push
lret
out
in
outsl
pop
or
push
inc
cs
push
inc
push
mov
and
mov
mov
out
in
in
sbb
mov
mov
dec
adc
fsts
mov
cmp
adc
bound
call
pop
stos
or
imul
or
stos
loope
sub
lret
sub
orb
add
hlt
xchg
fmuls
shrb
and
cmp
xchg
ss
fs
daa
pop
out
sbb
addr16
repnz
scas
add
mov
dec
jb
add
push
addr16
push
call
repnz
bnd
lds
lods
adc
int3
push
inc
aam
popf
xchg
icebp
xchg
cmp
rolb
xor
lahf
mov
mov
xchg
scas
cmp
and
pushf
jle
sub
mov
sub
inc
push
and
in
lock
hlt
push
adc
fs
jae
jnp
push
push
pushf
lea
jne
pushf
call
clc
sub
pusha
movb
lea
add
add
mov
sar
bt
not
mov
test
repnz
pusha
lea
jne
call
test
ror
push
call
push
sub
adc
ss
pop
repnz
ret
mov
mov
nop
repnz
es
lcall
jmp
add
xor
cmc
dec
fsubrs
jmp
sti
jmp
rcll
fstl
xor
loope
xor
push
push
cmp
xor
adc
mov
pop
decb
xchg
sbb
mov
or
cmp
sbb
xor
cmpsl
or
mov
or
push
pop
xor
push
pop
into
fdivs
cli
lock
sbb
mov
sbb
sub
jne
in
inc
insb
push
fs
push
inc
ljmp
bndldx
push
sti
xor
push
adc
xor
std
push
cld
pop
fiaddl
ret
xor
push
sbb
mov
enter
int
sbb
fwait
xor
insb
fdivs
mov
arpl
sbb
les
popa
push
into
movsl
aas
xchg
lea
stos
mov
mov
mov
movsb
or
mov
fidivs
es
pop
jmp
sub
fcmovnb
cwtl
push
cmp
jmp
pop
cmc
pop
xor
sub
popf
inc
dec
xor
cmp
into
mov
ljmp
and
punpckldq
imul
fwait
sbb
mov
jecxz
jp
mov
push
jp
adc
mov
roll
lret
mov
mov
aam
add
notb
ds
add
jne
insb
mov
popf
add
xchg
cmpsl
sbb
sbb
mov
mov
xchg
dec
mov
mov
push
mov
pop
lods
add
js
jno
jg
and
pop
mul
pusha
mov
cmp
jecxz
leave
sahf
add
push
clc
dec
pop
es
cmp
add
push
daa
xchg
daa
std
cmpsb
lret
jns
mov
fnsave
or
mov
pusha
loop
pop
dec
or
or
mov
xor
mov
xlat
dec
xorb
push
ret
fmul
jnp
sbb
xor
int3
test
ret
inc
push
lret
rorl
dec
and
out
push
cmp
mov
arpl
xor
cmp
mov
int3
ljmp
jl
mov
das
outsb
mov
icebp
mov
and
xchg
cltd
negl
ss
mov
dec
xlat
lds
gs
pop
pop
nop
xor
sbb
pop
cli
js
out
push
push
hlt
scas
xor
cmp
sub
xor
sub
pop
stc
arpl
or
int3
dec
pop
int3
cltd
push
jnp
jb
jl
push
loope
cwtl
sub
adc
sbb
test
js
loopne
gs
std
fistpll
fldl
jno
fidivs
push
out
push
mov
jge
daa
jge
imull
or
xchg
push
inc
mov
je
mov
adc
roll
inc
fwait
xor
test
xor
pop
hlt
xorb
push
mov
ds
xlat
ja
mov
mov
insb
xchg
insb
add
add
jne
out
xor
pop
ja
push
mov
fdivl
lret
jmp
adc
dec
xor
hlt
jbe
and
sub
in
jl
in
adc
dec
js
inc
jmp
pushf
add
push
xchg
cmp
xorb
mov
andb
loope
and
inc
insl
sbb
sbb
outsb
hlt
mov
xor
jne
jge
push
inc
movsb
dec
pop
xor
sbb
adc
repz
je
mov
in
cmp
pop
add
out
jl
je
pop
xor
enter
dec
std
push
inc
adc
rol
inc
sahf
mov
je
xorl
lock
mov
sbb
pop
xor
inc
aam
push
push
out
pop
xor
adc
and
mov
jne
add
lahf
sub
push
sti
jmp
popf
scas
fsubrl
rcr
adc
add
inc
roll
in
int
xchg
inc
jae
jg
jns
push
push
xlat
push
fnstenv
test
aas
inc
popa
xchg
and
test
jmp
out
aad
data16
sub
push
notl
add
push
out
adc
icebp
and
movsl
mov
jmp
and
cmp
cld
push
lods
cmpsl
fwait
aaa
cmp
xchg
add
lds
push
jno
push
lret
push
jl
dec
pop
test
dec
dec
in
pop
clc
jp
add
rclb
lds
pop
mov
mov
pop
pop
hlt
pop
daa
gs
ja
fstps
sbb
call
fcmovne
sub
sti
sbb
sub
push
cld
aad
adc
jp
lds
lret
movsb
mov
idivb
pop
sub
sbbb
in
ss
push
in
inc
push
iret
adc
les
scas
pop
jno
pop
adc
jmp
gs
cld
push
sub
loopne
test
push
sarl
inc
pop
sahf
dec
xchg
cltd
mov
pop
loope
sarl
mov
cltd
pop
mov
dec
and
rcrl
cmpsb
adc
pop
negl
arpl
pop
es
in
fnstenv
arpl
xlat
mov
xlat
popa
rol
push
fsubrs
sbb
cli
jp
into
clc
stos
add
inc
inc
xor
xchg
cmpl
jne
inc
scas
pop
scas
aam
adc
test
inc
std
push
or
xchg
xchg
cmp
xor
sbb
sub
pop
dec
lret
push
pop
jo
sbbl
inc
fiadds
cmp
in
inc
in
sahf
sub
pop
movsl
adc
mov
mul
outsb
shrb
aaa
movsb
mov
daa
dec
hlt
mov
mov
cli
sub
lock
xor
jmp
cmpsl
push
mov
push
jmp
adc
mov
dec
jo
loopne
ljmp
add
and
push
dec
cltd
lret
cmp
testl
fdivl
int3
fstps
cs
push
jp
jbe
jo
test
ds
out
and
push
push
sub
rcrb
push
or
mov
sub
iret
data16
and
fldcw
stos
add
push
and
xchg
pop
jp
in
ja
inc
mov
mov
shr
adc
in
push
inc
cwtl
xor
xchg
in
cmpsb
insb
inc
aas
popa
jmp
lahf
jo
push
mov
jne
lods
or
push
jmp
add
and
mov
loopne
and
lods
loope
jg
mov
sbb
mov
lahf
repnz
xor
xor
out
test
fiadds
test
fimull
lea
dec
cli
xchg
addl
leave
xor
cli
js
in
adc
inc
out
adc
cwtl
cmp
dec
and
sar
sub
push
in
xchg
sub
push
movsb
jae
repnz
dec
incb
cmp
int
mov
scas
mov
shll
leave
arpl
sarl
dec
xor
int3
gs
jmp
push
fdivl
lcall
aaa
enter
ds
aad
aad
test
jg
xchg
nop
sub
push
adc
sub
xor
inc
fbstp
data16
sti
or
adc
cmpsb
ss
mov
int
call
popa
cwtl
in
or
mov
add
das
adcl
aad
out
mov
push
inc
loop
fldl2e
loopne
push
inc
in
aaa
repnz
jge
icebp
mov
sahf
call
pushl
into
dec
xchg
sub
mov
sbb
enter
in
cmp
mov
adc
insb
ret
imul
xor
mov
dec
or
push
imul
push
xchg
dec
cmp
mov
cmp
pop
inc
sub
jb
test
or
mov
sbb
mov
outsb
mov
push
loop
cmp
outsb
jnp
xchg
enter
insl
pop
dec
xlat
inc
lds
pop
out
xor
arpl
leave
cli
mov
sbb
push
cmpsl
stc
popa
mov
or
mov
mov
dec
in
mov
jbe
push
jbe
adcl
push
pusha
into
fnsave
pop
call
fdiv
rorl
out
lahf
xchg
fs
jg
jp
bound
ljmp
add
add
dec
data16
adcl
lea
mov
dec
loopne
push
das
jne
xchg
cmp
push
add
mov
jno
std
mov
mov
aam
pop
hlt
inc
sub
sbbb
cmc
stos
xor
xor
stc
cmp
xchg
cmpsb
cmp
xchg
ljmp
xor
or
pop
cs
out
fs
add
test
and
pop
mov
mov
adcb
insb
jns
cwtl
hlt
hlt
addr16
lock
dec
out
mov
mov
cmp
xchg
add
cmpsl
or
imul
adc
dec
movsl
mov
push
lods
test
inc
push
in
sti
xchg
das
pushf
cmp
sbb
loopne
xchg
inc
xchg
movsl
xlat
gs
adc
cmp
inc
jbe
push
int3
push
mov
dec
and
pop
out
dec
rorl
mov
dec
pusha
push
mov
jbe
pop
jo
xchg
or
push
jmp
push
in
pop
cmc
fsubrl
jp
push
pop
imulb
xorl
test
sbb
cmp
scas
shrb
jl
andl
lods
dec
in
pop
lea
mov
xchg
cmp
jb
loop
bound
lret
movsb
aaa
in
jno
mov
jo
cli
sti
iret
pusha
int3
mov
and
nop
mov
jp
dec
aad
jmp
xor
and
shlb
lods
xlat
lea
mov
js
and
sbb
jg
shrl
loopne
in
mov
mov
pop
adcb
shll
lds
mov
stc
cmpsl
cmp
sub
out
hlt
frstor
fistpl
int3
aaa
movsl
xchg
cmp
mov
or
loopne
popf
ret
mov
cld
jle
test
mov
lret
dec
pop
mov
int3
lret
xchg
or
scas
mov
xor
or
fs
push
data16
lods
popf
mov
je
out
mov
mov
cmp
dec
loop
xor
inc
popf
lahf
push
lcallw
stos
push
ret
adc
scas
cmp
out
mov
jp
call
inc
loopne
and
adc
xor
xor
repz
pop
mov
cmpsb
cmp
mov
push
adc
loopne
dec
mov
inc
repnz
jge
xor
adc
cs
sahf
add
mov
orl
popw
pop
mov
rep
aam
xor
sbb
sub
pop
sbb
push
lock
push
std
aam
adc
push
pop
movsb
hlt
loopne
int3
pop
repnz
jno
jns
imulb
jae,pt
enter
pcmpgtd
jbe
push
jnp
mov
pop
mov
jge
adc
xchg
push
incl
inc
add
push
sti
movsl
cmp
test
insb
ret
adc
push
popf
xor
jl
das
jne
inc
push
mov
cmp
mov
push
mov
mov
xor
sahf
out
jmp
xchg
inc
das
cltd
insb
sbb
cmp
sub
shrb
pusha
rol
jbe
mov
mov
push
cli
sarl
out
sahf
mov
inc
fbstp
lock
into
pop
lret
out
push
stc
shrb
stos
mov
mov
in
inc
mov
lea
cwtl
stos
rcll
jb
lcall
je
loope
pop
lock
aas
inc
in
les
push
sarb
fisubrs
lret
xor
test
and
cmp
test
movb
cli
push
ljmp
xor
jbe
outsb
jl
shrb
add
jo
dec
loopne
inc
int3
outsb
lahf
in
inc
jmp
call
cmc
sub
mov
pop
lds
hlt
out
addb
testb
popf
int
and
xor
mov
outsl
jae
scas
pop
scas
fsubrs
mov
dec
fwait
pop
icebp
xorl
fiaddl
aam
adc
rcrb
mov
ret
js
fwait
mov
nop
push
sbb
fnstenv
loope
and
jne
es
out
inc
mov
cmp
jne
dec
push
jecxz
sub
subl
push
leave
data16
gs
jnp
mov
mov
xorb
fadds
dec
gs
adc
mov
mov
lcall
pop
cmp
mov
pusha
in
inc
out
test
xchg
dec
xchg
xchg
pop
mov
or
push
imul
out
cmp
mov
nop
jo
jmp
mov
mov
and
mov
subb
xchg
cmpl
sbb
mov
xchg
inc
fnstcw
test
or
out
xor
sarl
mov
dec
pop
jmp
mov
pop
cmp
sub
js
adc
aad
jo
out
lods
das
mov
jle
shrl
out
aaa
lahf
ss
adc
push
std
pop
in
xor
jmp
jge
cmp
cmp
pop
cmpsb
push
push
jle
mov
mov
dec
jle
mov
xor
mov
int3
xchg
fmul
data16
mov
les
add
mov
test
aaa
scas
loopne
adc
scas
ss
xor
mov
or
push
inc
dec
repz
stos
xorl
xchg
test
mov
rcll
sbb
add
fstps
inc
push
xlat
shrb
test
inc
out
mov
adc
arpl
in
insl
mov
inc
sahf
sub
mov
mov
mov
dec
or
add
cltd
cmp
inc
call
jmp
incb
mov
cmp
sub
mov
je
lret
mov
mov
cmpsl
lret
ficomps
ljmp
mov
cmpsb
sub
or
movsb
js
loope
lds
add
push
test
and
scas
xchg
sbb
sbb
out
insb
inc
aas
dec
call
adc
mov
and
xchg
js
sub
imul
dec
cmp
pop
push
jge
fbstp
sub
sbb
xchg
aaa
jae
into
addr16
je
cmp
jg
shll
or
push
sbb
test
daa
jge
gs
mov
mov
pop
mov
adcl
add
cmpsb
or
jmp
and
add
mov
inc
sub
ret
adc
sahf
lods
ret
insl
std
push
pusha
jnp
jns
mov
repz
outsb
sahf
cmp
jge
sbb
test
sti
mov
dec
sbb
and
sbb
push
imulb
ret
cmpsb
and
dec
loop
insl
jg
insl
in
mov
sub
out
pop
int3
dec
pop
push
sbb
in
xcrypt-ecb
cmpsl
mov
dec
cld
out
sbb
mov
cmp
jns
movsl
bndldx
dec
data16
fidivs
mov
push
imul
push
jp
mov
jnp
neg
push
or
addr16
aam
xor
mov
or
cld
aad
pop
jl
cmp
leave
mulb
sbb
insl
jg
pop
lea
bound
xor
xlat
and
dec
jmp
mov
push
adc
fildll
add
sbb
pop
push
jl
andnps
lahf
int
push
cmp
sbb
outsl
adc
inc
and
xchg
or
in
fsubrl
xchg
push
rcrb
lcall
xchg
sbb
inc
fcmovne
push
inc
leave
lea
adc
sub
and
fst
push
mov
iret
jne
cmp
stos
mov
xchg
sub
aad
movsl
xor
ret
fcmove
add
inc
sbb
cwtl
adc
adc
mov
pop
ljmp
js
jo
lcall
add
arpl
adc
cmpl
cwtl
xchg
fcoms
add
jge
lahf
sub
fs
pop
loop
into
jo
inc
mov
loopne
lods
test
or
in
xchg
cmp
mov
ficoms
lcall
mov
lock
loopne
shrb
lcall
rorl
jle
incb
mov
js
add
rcll
xchg
mov
in
sbb
aaa
jne
mov
das
lods
pop
movsl
pop
mov
incl
push
mov
lea
jb
clc
bt
bt
cmp
cmp
pushf
mov
pushf
call
test
and
fsub
mov
testl
and
xchg
int3
in
fsubp
cmpsb
push
sub
orl
loope
or
inc
out
cmpsl
arpl
xchg
daa
std
add
cmp
sbb
and
fsubs
push
pop
push
pusha
sub
mov
aaa
dec
jecxz
xlat
dec
jecxz
ret
dec
jge
jns
lcall
je
add
push
fucomi
call
lock
mov
bts
sub
mov
bt
pushf
mov
jmp
lods
lock
imul
add
cmpsl
movsl
out
push
xor
rcr
imulb
out
rorl
lret
negl
xchg
sub
jb
or
cmp
mov
pop
jns
test
insb
add
stos
jnp
xchg
mov
clc
xor
add
push
aas
cld
xor
mov
lods
enter
pop
add
mov
cs
or
scas
mov
mov
movsb
lock
in
or
push
les
aad
fcmovb
pusha
inc
loopne
xor
fiadds
stc
jmp
hlt
faddl
ret
jmp
pop
and
pusha
mov
lahf
nop
push
cmp
xlat
xchg
out
pusha
cmpb
sahf
into
jo
in
push
xor
and
pop
mov
xor
inc
rol
repnz
dec
fists
sub
mov
push
push
out
cs
lret
xchg
adc
adc
cmp
inc
add
pop
xchg
cmpsl
and
das
and
push
arpl
ficoms
sub
stc
pushl
cmc
cmp
jmp
pushl
mov
lea
bswap
movsbw
movsbw
pop
pushf
pushf
movb
mov
pushl
ret
mov
scas
lock
pop
dec
call
mov
mov
shrl
movsb
loopne
mov
xchg
push
jmp
mov
cwtl
jecxz
mov
aas
or
xor
sbb
add
fimuls
or
pop
or
cmpsb
in
jp
and
test
cmp
aad
cmpsb
cmp
cmpsb
hlt
outsb
int3
inc
les
pop
call
dec
lcall
hlt
call
lcall
sub
dec
and
arpl
outsl
sub
pop
sub
push
mov
dec
in
popa
mov
push
pop
das
popf
lea
xor
dec
flds
lds
aam
dec
jmp
jae
adc
add
and
out
push
or
sbb
insb
into
adc
jb
cmp
sbb
dec
jmp
iret
push
insl
jmp
lret
inc
lret
lcall
fs
jae
cmp
xor
push
call
pop
xor
and
dec
or
push
jo
push
es
xor
jo
fwait
std
pop
mov
jns
mov
hlt
jle
mov
loop
stos
mov
add
inc
in
inc
push
int3
push
push
adc
ret
sub
mov
fsubs
mov
sbb
xlat
dec
pop
adc
das
addb
xchg
xor
ret
roll
mov
xchg
daa
adc
fcoml
pop
repz
repz
xchg
fbstp
mov
and
add
sbb
cmp
repnz
leave
cmpsl
cmpsb
rcll
xchg
pop
push
das
pop
adc
insl
and
cltd
sub
mov
dec
pop
mov
lods
sar
and
imul
fcompl
or
dec
sub
push
jg
addr16
cmpsb
negl
outsl
mov
lret
mov
sub
push
daa
outsl
aaa
xor
pop
sbb
sbb
xchg
xchg
lcall
jo
insb
ret
push
ss
inc
cmp
dec
aad
jns
jmp
out
dec
mov
xlat
mov
fs
fsub
fs
xlat
das
push
cmpsl
push
mov
andl
notb
add
insb
hlt
or
outsl
fistpll
mov
xchg
fimuls
sbb
stos
test
mov
push
repz
xchg
stc
cmp
sti
insl
mov
dec
jl
mov
jne
mov
or
and
das
push
add
pusha
bt
jmp
in
ljmp
dec
add
popa
aaa
dec
das
popa
daa
jge
gs
loope
inc
out
aas
xchg
les
enter
add
test
push
cli
adc
lds
pusha
push
inc
out
loopne
inc
out
dec
in
rorl
sub
xchg
fsts
das
xchg
popa
xchg
imul
xor
xchg
cmp
idivb
testb
fdivrs
inc
lock
rclb
outsb
lcall
aad
sbb
loope
mov
int3
sbb
lock
in
jmp
pop
mov
pop
sti
push
inc
mov
sub
nop
int3
mov
out
inc
insl
leave
jae
movsl
in
fs
mov
enter
dec
sbbb
insb
mov
cwtl
xchg
aas
fwait
popa
xchg
clc
jns
mov
xor
loopne
mov
add
lods
push
movsb
push
mov
or
cmp
pusha
jmp
lea
jne
pusha
mov
call
jmp
setne
movb
setp
lea
push
pusha
mov
mov
pusha
lea
push
movb
movl
pushf
pushf
push
mov
push
movb
mov
mov
pushl
ret
pusha
sub
mov
cmp
push
pushf
lea
ja
jmp
cmp
dec
jmp
jnp
pop
xor
push
inc
and
js
pushf
push
adc
insl
jle
in
sbb
fmull
mov
sbb
add
xchg
ja
mov
scas
mov
jno
xor
pminub
xchg
or
das
mov
cmp
pushf
lods
jmp
adc
ret
fisttps
cmp
push
sbb
addr16
lock
es
add
lds
loopne
cwtl
ss
loop
rol
outsb
mov
arpl
jmp
js
and
jo
mulb
lock
lret
adc
int
aaa
stos
jno
insb
sar
jnp
shl
ja
and
pop
nop
enter
call
dec
cld
push
enter
push
jge
clc
adc
mov
inc
xlat
fbstp
aam
lcall
leave
scas
cmc
addr16
push
ret
loope
test
mov
mov
ljmp
cmpb
fldt
cmp
or
cmc
or
int3
inc
push
imulb
cmpsl
jecxz
loope
inc
cld
divb
xor
inc
mov
mov
dec
pusha
out
jb
mov
je
leave
lahf
leave
outsl
stos
mov
cmpsl
aaa
aam
mov
xchg
xor
in
and
sbb
add
cmpl
mov
mov
and
lcall
inc
aad
pushl
gs
xor
fs
insb
add
shlb
fsubr
jo
ljmp
push
adc
out
into
nop
shlb
mov
inc
cld
inc
jle
ljmp
mov
rcr
sbb
ja
xchg
movsl
jno
lea
ljmp
dec
mov
inc
pop
out
jge
push
jmp
lret
push
repz
cmp
push
sub
or
mov
dec
lret
mov
loope
lret
insb
loope
mov
imul
or
loope
stos
loope
ljmp
mov
dec
loope
or
sub
sub
loope
dec
std
jne
mov
push
imul
cmp
sbb
or
dec
or
jo
out
jbe
ret
mov
inc
xor
push
mov
mov
test
mov
stos
clc
mov
lea
xchg
dec
adc
mov
xchg
lock
ljmp
fldcw
pusha
faddl
mov
in
or
popa
xchg
cmc
icebp
xor
mov
or
shlb
cmp
mov
mov
mov
xlat
mov
lea
mov
mov
sub
xchg
mov
lods
test
jmp
jmp
xor
adc
test
subb
aad
inc
jg
mov
lahf
test
push
fisubrl
or
pop
fdivs
jmp
and
add
enter
mulb
pop
fidivl
out
jo
int3
inc
mov
xchg
mov
notl
cmp
mov
lcall
add
push
xadd
push
not
pushf
mov
bswap
shl
bsr
inc
mov
neg
mov
shld
bt
mov
test
cmp
or
push
pusha
lea
je
push
pushf
mov
pushl
or
mov
pushf
lea
je
aad
call
call
fsubl
cli
das
xor
aad
xchg
enter
enter
fmuls
loop
fucomp
push
das
insl
out
jb
negl
push
mov
push
shrb
sub
push
fimull
and
jg
iret
mov
std
push
rcrb
push
test
dec
aas
jno
cmpsl
fnsave
push
aas
dec
pop
movb
sahf
mov
cmp
jne
js
ret
les
mov
cwtl
stc
scas
push
int
or
mov
sahf
cmp
insl
fidivrs
mov
xor
test
outsb
int3
xor
add
lods
daa
test
cmpsl
in
cmpsl
sbb
pop
sub
sbb
xchg
fmul
dec
lock
das
xor
ss
aaa
dec
iret
dec
out
jecxz
in
push
fidivrs
ja
int3
mov
hlt
inc
out
dec
inc
push
inc
sbb
das
cltd
cmp
adc
dec
and
add
push
add
dec
test
repz
out
mov
ja
insl
jnp
xchg
in
int
cmc
xchg
add
adc
mov
mov
sub
sub
inc
fstl
shrl
repz
and
cmpsl
xor
xor
push
mov
sub
bts
xor
mov
pushf
test
pushf
sub
call
cmp
cmp
mov
pushf
push
pusha
lea
jae
push
mov
pusha
lea
jmp
xor
imul
or
or
adc
add
data16
and
outsb
fs
leave
test
std
imul
test
pop
idiv
mov
push
mov
or
sub
cltd
xor
mov
dec
add
sub
int3
test
mov
sbb
cmpsb
pop
movsb
aam
inc
pop
xchg
aas
jne
test
cmp
aaa
mov
cmp
shl
lea
jl
lods
pushf
call
sbb
dec
aam
fiaddl
mov
adc
inc
or
popa
adc
jne
lods
xor
lahf
xchg
push
push
std
rorl
mov
sbb
mov
lret
cmp
mov
mov
outsl
jle
add
pusha
add
sub
mov
mov
popa
xchg
bnd
movsl
aas
cmpsl
js
sbb
in
push
enter
add
adc
or
lcall
add
dec
inc
add
mov
mov
pop
sbb
test
mov
pushf
loop
dec
repnz
jo
adc
jmp
int3
inc
pop
or
shr
pop
mov
push
inc
jo
adc
push
push
cli
shll
fists
pusha
js
popa
lds
cltd
enter
or
xor
push
mov
fdivrl
xchg
out
mov
dec
xchg
ss
leave
dec
mov
xchg
cmp
push
mov
lods
mov
pushf
xor
icebp
xchg
lcall
cmpsb
ret
dec
loop
fimuls
repnz
xchg
fiaddl
jg
call
rcrb
mov
in
lods
lock
mov
outsb
mov
fbld
push
imul
aaa
mov
add
adc
aaa
lea
je
bsf
bsr
call
lea
je
dec
adc
add
shl
seta
sar
mov
jmp
mov
movb
call
push
rep
movw
jmp
cmp
addr16
adc
cmp
push
pcmpeqw
jno
dec
punpckhwd
inc
jecxz
pop
cmc
decl
mov
test
push
ret
inc
hlt
xorl
pop
dec
push
rep
xchg
cmp
testb
cmp
cmpsb
loope
xchg
mov
add
sub
repnz
fidivl
adc
cmp
add
dec
pushf
push
stc
movb
mov
pushf
bt
movl
add
stc
call
cs
sbb
xchg
jo
jl
fs
insb
push
pop
adc
adc
and
pusha
leave
push
pop
dec
cmp
mov
filds
jg
push
xor
adc
pop
stc
push
icebp
inc
push
xchg
fldl
scas
adc
test
add
add
mov
test
mov
xlat
outsb
xchg
fld
inc
int3
mov
ja
push
fstps
dec
jmp
arpl
movsb
mov
add
sbb
xor
mov
sub
into
movsb
out
dec
enter
inc
lahf
sbb
xor
sub
jmp
mov
push
addl
and
adc
rcl
inc
jmp
or
aad
ja
sti
popf
cmp
fimuls
cmp
mov
pusha
pushf
call
jmp
icebp
jo
insb
into
mov
cwtl
or
in
lds
loope
int
shll
jnp
mov
and
mov
push
dec
iret
jmp
data16
adc
cs
push
push
jbe
popf
cmp
outsl
pop
fcmovbe
mov
and
inc
dec
out
rep
pusha
pushl
movsbl
mov
pushf
push
push
push
lea
jmp
jle
imul
xchg
inc
outsb
and
or
sbb
add
jle
jle
dec
inc
int3
jle
fwait
in
xchg
cmc
xor
aad
xor
ja
aaa
cmpsl
inc
aas
aas
xchg
scas
xchg
push
std
clc
data16
in
lret
movsl
aaa
movsl
pop
mov
lods
sub
pop
lcall
cmp
out
push
pop
adc
sti
mov
mov
cltd
sti
xchg
das
xchg
lahf
and
jnp
cmp
hlt
fisttpll
test
pop
dec
and
add
inc
imul
add
repz
outsl
mov
or
pop
pop
or
cmp
call
cmpsb
loope
out
push
push
jnp
push
mov
dec
jg
jge
cltd
and
pop
movsl
das
popf
or
sar
add
dec
gs
popa
addr16
outsl
js
add
cld
or
lea
jbe
adc
stc
mov
push
add
and
mov
rol
sub
pusha
and
add
shl
shld
clc
movl
sub
and
push
mov
lea
clc
cmp
pusha
push
jmp
hlt
popf
fistpll
repz
nop
incb
xchg
into
sbb
fcompl
xchg
fidivl
mov
je
fcmovne
dec
pop
ja
sub
test
out
sbb
cli
push
jle
pop
dec
loopne
je
jo
inc
fisubrl
dec
bnd
jl
lcall
cmp
mov
dec
leave
push
sbb
test
adc
fidivl
cs
shrb
push
mov
dec
jnp
xlat
mov
int3
xor
test
scas
add
mov
loop
fcmovbe
cwtl
ds
test
jne
enter
in
adc
lods
jb
cli
mov
test
pop
sbb
mov
pop
imul
lods
pop
jno
mov
das
cmpl
popf
lcall
jne
insl
jmp
mov
jmp
enter
lock
mov
hlt
pop
aam
orb
or
pushf
cwtl
popa
dec
ljmp
test
add
popa
dec
pop
stc
jmp
xchg
adc
aam
imul
icebp
mov
lods
add
mov
out
pop
fisubl
icebp
popa
sbb
inc
insl
fistpll
mov
push
mov
stos
std
push
cmc
dec
rcll
push
leave
outsl
jmp
cmp
or
jle
call
or
pop
xor
push
add
pop
shrl
jmp
push
pop
inc
sarb
filds
leave
addr16
jge
in
mov
ret
arpl
mov
cmpsb
lods
cmpsl
xor
push
sub
stos
xchg
xchg
pop
push
push
pop
clc
int3
outsb
cld
inc
les
aam
imul
and
sub
imul
xchg
mov
mov
mov
aaa
jno
xor
xchg
lea
mov
lods
or
dec
push
imul
pop
mov
push
xchg
cmp
add
jns
mov
pop
divl
lds
lret
imul
mov
clc
inc
sub
sahf
mov
push
lds
ja
inc
cmc
lcall
aam
shlb
invd
idiv
push
add
dec
sub
mov
add
out
or
push
mov
insl
cmc
pop
add
movsb
push
add
fwait
xor
mov
enter
mov
data16
xchg
jb
cmpsb
fisttpl
jmp
cs
mov
push
or
int
fsts
inc
cmc
fnsave
push
lcall
gs
gs
xor
cs
insb
add
adc
push
jl
inc
ds
and
push
add
arpl
mov
test
out
inc
and
test
test
test
nop
call
xchg
ret
push
rorl
jae
imul
loope
cmc
pop
shr
outsb
pop
test
pop
add
popf
xor
mov
mov
cmp
stc
sub
call
bound
push
das
movsl
aam
repnz
into
xchg
lret
mov
xchg
ljmp
mov
mov
mov
sbb
test
sub
ja
daa
xor
call
cmc
fsubrl
cmp
jl
fiadds
loope
iret
cltd
adc
sbb
add
jmp
add
test
mov
test
mov
nop
sarb
lcall
leave
into
inc
mov
dec
jecxz
arpl
add
or
and
in
mov
icebp
xor
test
jns
insl
jecxz
iret
dec
xlat
imul
xor
test
or
mov
sub
pop
clc
lret
ja
xor
mov
jecxz
fimuls
jle
and
add
mov
lods
sbb
lcall
jmp
dec
loop
push
pushf
movsb
cmp
shll
mov
test
outsl
inc
sbb
sti
push
ds
sti
pop
incl
jns
cmp
xchg
fstpl
mov
or
inc
sub
dec
lds
ret
push
add
mov
daa
mov
gs
and
mov
jg
sbb
dec
dec
jmp
inc
loopne
mov
add
xor
add
adc
cmp
xchg
add
cmc
bswap
mov
mov
bt
cmc
add
test
pushf
mov
call
lea
ja
push
mov
pusha
lea
jb
stc
pushf
cmpb
mov
pushf
lea
jne
call
lea
jbe
or
mov
sub
inc
mov
setl
mov
mov
pusha
add
bsr
rol
shl
shr
shl
shld
shl
ror
mov
movw
shr
add
pop
pusha
pushf
mov
lea
jmp
pop
xor
mov
gs
add
jp
outsb
sub
outsb
xor
pusha
fistpll
fwait
cmp
je
daa
xchg
inc
stos
add
nop
ret
push
rorb
fcoml
sub
icebp
xor
jne
xchg
push
xchg
jnp
dec
mov
popa
aad
xchg
lods
sbb
test
and
js
ja
mov
test
test
mov
test
mov
mov
ret
pop
roll
stos
mov
mov
repz
lcall
je
and
xchg
aaa
add
dec
jmp
add
dec
outsl
arpl
inc
insb
insb
outsl
arpl
jmp
xor
enter
rolb
xchg
lds
int
and
in
mov
fldt
and
lds
jg
jle
fcomip
popa
cltd
push
cwtl
xor
lcall
nop
mov
pop
shl
lret
dec
adc
lahf
cmp
out
mov
mov
and
fisubl
xchg
movsl
sub
jne
cmp
or
xorb
sub
in
ficomps
mov
dec
mov
mov
xchg
out
jecxz
repz
pop
std
aam
pop
test
mov
popf
add
pop
leave
fldpi
test
pop
andb
mov
or
mov
leave
jl
cmc
sub
jns
lret
outsl
repz
push
mov
xchg
xor
in
push
and
push
scas
stos
adc
dec
cmp
jmp
dec
roll
jg
lcall
fs
je
call
mov
enter
push
data16
sbb
inc
or
and
and
dec
jne
pmullw
in
into
pop
test
pop
jbe
fiadds
mov
sub
cmp
pusha
neg
int3
dec
xchg
xchg
aad
inc
push
xor
pop
mov
fstpt
xchg
jecxz
neg
push
repz
mov
and
xchg
cmp
add
or
aam
fs
ja
push
not
mov
inc
seta
call
lcall
pop
pop
mov
dec
aaa
popa
pop
jns
pop
add
jg
push
sub
icebp
iret
pop
pop
scas
xor
pop
xchg
dec
jp
cmp
push
in
cmp
mov
das
pop
aad
rdtsc
movsb
rcl
jnp
std
push
icebp
dec
repz
incb
inc
sub
add
adc
test
fwait
stc
ret
pop
ja
lret
jne
int
repz
push
clc
inc
dec
pop
dec
cmp
push
cmp
lahf
sub
imul
fidivrs
or
fsubr
push
jae
jecxz
dec
mov
add
xlat
xchg
repnz
or
mov
add
add
loope
in
ss
std
cld
aad
lahf
cli
mov
cmp
fucomp
gs
test
out
lcall
neg
neg
pusha
push
setp
pushf
stos
not
setnp
push
mov
lea
push
push
lea
call
push
pusha
jmp
dec
int
fldl
out
loop
inc
insb
and
add
insb
es
ds
cli
dec
inc
lock
jle
jnp
jb
sarl
xchg
lahf
rcrl
out
jnp
xlat
add
fildl
lock
ljmp
add
pop
cltd
sbb
and
mov
ror
bt
btc
mov
stc
test
call
or
pop
out
std
cmpsl
or
mov
and
xor
and
cmp
push
and
out
test
out
xor
mov
jno
add
fcompl
or
sbb
pop
repnz
pushl
movsb
pop
xor
mov
subb
mov
push
mov
xchg
loop
mov
sbb
inc
dec
out
dec
in
push
aam
les
clc
push
int3
cld
lcall
push
shr
ljmp
movw
test
call
sub
call
jmp
lea
mov
jmp
out
xchg
addb
popa
fst
cltd
mov
nop
ret
mov
test
mov
mov
movsb
inc
dec
inc
dec
js
orb
insl
imul
lods
ficoms
dec
push
inc
dec
jge
iret
xchg
mov
pushf
sub
in
popa
dec
push
mov
pop
aam
sub
fstps
sbb
cmp
pop
cmp
push
fdivrl
fsubs
or
movsb
adc
mov
xor
mov
or
mov
mov
aaa
lods
incb
test
inc
mov
push
shlb
mov
add
test
popa
xchg
loopne
aas
push
mov
add
push
stos
mov
jnp
xlat
jnp
arpl
arpl
push
leave
arpl
pop
aad
roll
lcall
test
decl
pushf
shrb
movzbw
mov
rol
add
pusha
xor
shl
mov
jmp
fstps
inc
idivb
cli
jmp
pop
jne
gs
pop
xor
dec
sub
push
out
push
xorl
aas
cld
fstps
sbb
movsb
mov
outsl
dec
out
into
shrb
ds
mov
sub
rcll
dec
std
pop
notl
test
cmp
dec
jmp
mov
hlt
loope
xchg
loop
inc
jae
dec
xchg
scas
shrb
das
mov
push
adc
movsb
cmp
lcall
es
inc
das
jge
popf
inc
mov
div
ret
mov
cli
test
movsb
ss
lods
xchg
enter
xchg
inc
movsb
cmp
sbb
int
rcll
or
jmp
je
push
sbb
push
push
cld
push
icebp
pop
test
add
addr16
sti
cmc
and
hlt
fs
mov
inc
pusha
in
xchg
mul
fs
dec
mov
leave
insl
popa
xchg
fistpll
jmp
jmp
rcll
or
pusha
fs
insb
rorb
js
inc
ficompl
jne
aam
cld
jbe
lock
fdivl
inc
cmp
dec
pop
pop
das
inc
and
insl
addr16
mov
mov
orl
pavgusb
mov
cli
mov
mov
dec
or
and
sub
add
sbb
lcall
jbe
add
push
sub
and
cs
dec
es
jo,pn
je
mov
fmuls
sub
mov
pusha
add
in
fistpll
xor
lods
adc
xlat
mov
iret
imul
mov
sub
push
jp
dec
mov
xor
scas
mov
xchg
cmp
jno
pop
dec
sbb
mov
push
mov
cmp
sahf
lcall
fidivl
add
test
jl
inc
inc
and
lret
and
add
inc
and
pusha
pushl
ret
pop
ficoms
inc
or
pop
pop
imul
push
or
orl
mov
data16
mov
ja
jbe
popf
test
jmp
or
inc
jmp
out
mov
mov
adc
adc
and
stc
pushf
bt
pushf
movzwl
shl
mov
bt
add
cmp
mov
test
movb
mov
pushl
mov
pusha
test
jmp
dec
and
aam
icebp
xchg
pop
jb
jp
jp
jle
dec
xor
lcall
mov
fwait
xor
dec
gs
insl
jnp
push
ja
negb
jl
insb
xchg
xor
je
aam
xor
adc
and
cmp
bswap
bswap
mov
push
pushf
push
not
mov
mov
mov
movb
mov
bswap
pop
pushf
pushf
movb
mov
pushl
ret
movzbw
mov
stc
bt
cmpb
jmp
repnz
aad
or
mov
aam
in
int3
stos
clc
mov
aad
xchg
xor
xchg
mov
xchg
imul
dec
aas
pop
ret
add
mov
cmpsb
sub
mov
daa
cmp
mov
mov
pop
addr16
fdiv
out
popa
or
cmpsl
or
xor
cmp
cmc
out
mov
je
fidivrl
insb
cli
push
lcall
shlb
in
neg
call
iret
mov
test
jecxz
test
out
fiaddl
mov
fnsave
xchg
std
aam
imul
ljmp
inc
inc
or
mov
repz
dec
iret
pop
popa
rcrl
outsl
push
imul
sahf
sahf
mov
push
test
cltd
xor
fsubrp
das
sbb
data16
ret
mov
pop
or
add
sbb
cmp
jle
insb
push
leave
hlt
inc
xor
dec
add
sub
xor
or
jnp
pop
xor
mov
pop
xchg
inc
push
fbld
jmp
dec
xchg
cmp
mov
sub
mov
mov
pop
sub
jge
xchg
xchg
xchg
cmp
lcall
and
adc
push
outsl
cli
xlat
movsl
negl
jmp
lret
insl
jmp
mov
jbe
lret
adc
fwait
aaa
mov
imull
push
pop
push
inc
insb
push
dec
cltd
cmp
ljmp
test
scas
divb
cltd
jecxz
outsb
loopne
insb
mov
hlt
pop
dec
popa
xchg
fcmovnb
lds
mov
aaa
popl
jp
cld
push
loopne
int3
outsb
aam
shlb
push
clc
lcall
sbb
fwait
cwtl
cmp
cmp
add
inc
minps
jns
inc
and
xchg
sub
xchg
test
mov
enter
sahf
cmp
dec
inc
push
inc
add
mov
push
dec
xchg
mov
arpl
cmp
jle
jmp
roll
cmpsl
mov
out
ds
push
inc
mov
ja
mov
mov
cmc
and
jmp
repz
mull
imul
fsubl
xchg
or
dec
loop
and
icebp
sub
pop
pop
add
inc
das
insl
pop
imul
push
sbb
jle
push
aaa
popf
push
push
sub
mov
ret
movups
jno
sbb
sahf
int
sub
imul
dec
idivl
lcall
insb
and
stc
mov
jmp
push
cmp
lock
pop
and
inc
and
sub
pop
add
pop
subb
ret
pop
lock
punpckhwd
ja
pop
cld
xchg
push
enter
pop
mov
stos
pop
sbb
lret
gs
popa
ret
inc
pop
ret
push
out
out
jns
cmp
mov
gs
xchg
add
lcall
stos
leave
fwait
int
fnsave
pusha
loop
inc
mov
xorb
movsb
idivl
push
inc
push
ja
dec
cmp
adc
push
jle
jge
mov
js
ds
lret
test
pop
movsl
and
add
xchg
sub
jmp
lret
mov
nop
sub
cli
xor
adc
inc
and
sub
and
int3
jb
loop
xor
jne
mov
fstps
in
jnp
mov
sub
idivb
xchg
lds
pop
and
push
pop
dec
pop
aam
cmp
or
repnz
icebp
adc
stos
loope,pt
insl
add
aas
mov
or
adc
mov
lea
stos
mov
jb
cmpsb
xor
xor
sbbb
or
pop
jno
mov
cmp
xor
mov
fcmovbe
fcomi
inc
push
mov
in
jecxz
sub
sbb
add
loop
scas
aaa
mov
xchg
add
inc
std
xchg
jecxz
divl
add
jb
adc
pop
mov
shll
push
scas
ret
stc
mov
cmpsl
mov
jo
push
rclb
cmp
add
add
add
add
add
add
xor
sub
sub
add
add
add
add
sub
xor
add
add
add
add
cmp
fsub
sub
test
lea
je
pusha
pushf
movw
lea
je
clc
push
jmp
and
pop
jmp
pusha
ss
sbb
je
jl
je
pop
push
loop
pop
jae
addr16
sbb
dec
loope
jae
mov
push
xor
outsb
movsb
push
std
pop
sahf
int
data16
aad
push
inc
in
xor
mov
icebp
fdivrs
xlat
test
rolb
aaa
stos
pop
adc
mov
ss
je
pusha
ficompl
jl
pusha
fimuls
lcall
movsb
ret
sbb
rorb
fsubrl
and
xor
mov
sub
stos
xor
dec
add
call
mov
jno
daa
add
test
scas
inc
gs
rcl
jle
rcrl
inc
mov
mov
popa
xchg
fnstcw
mov
mov
jnp
jae
int3
fists
inc
and
in
pop
call
push
data16
lcall
mov
imul
call
mov
push
icebp
xor
jge
pop
sub
jne
dec
cmp
dec
inc
in
lcall
out
pop
repz
subb
fmull
cld
int3
in
ret
mov
xchg
fdivrl
call
xchg
imul
outsl
inc
or
movsl
mov
or
jbe
arpl
popa
xchg
sbb
mov
pop
loope
stos
push
shll
cmp
das
test
lods
cmp
ss
je
xchg
outsl
aam
add
fmuls
hlt
or
call
jle
lahf
jnp
sub
mov
lock
dec
cs
ja
cmp
or
outsl
pop
icebp
pop
aaa
mov
call
and
mov
cmp
flds
add
add
inc
gs
outsl
fs
gs
imul
add
jg
repz
jmp
dec
and
je
jo
js
dec
and
popa
insl
hlt
ret
cmp
mov
cmc
jmp
out
imul
inc
clc
push
xchg
lcall
das
test
out
cmp
sbb
mov
into
fs
repz
int
dec
data16
jle
jl
or
pop
shrb
inc
lock
in
pop
shlb
rolb
lcall
lds
nop
jb
pop
cmp
push
pop
popa
and
pop
add
inc
cltd
sub
test
mull
pusha
jge
dec
xlat
ljmp
adc
push
cli
pop
into
fimuls
loope
pusha
les
inc
or
add
jg
jmp
std
mov
nop
test
xchg
cwtl
stos
cmp
aas
and
push
sub
and
cmp
and
sar
test
stc
cmp
sub
clc
clc
cmp
ja
push
pushf
mov
lea
jae
pushf
pushf
pushf
lea
jmp
push
push
ss
fucomp
cwtl
fidivl
loop
into
mov
inc
clc
sbb
or
jg
mov
pop
add
gs
fstps
dec
call
xchg
into
popa
int
add
sbb
mov
dec
inc
outsb
movb
pushf
lea
call
push
jmp
lret
mov
mov
les
leave
mov
scas
jmp
xchg
popf
xor
fidivs
cmpsl
sbb
stos
adc
adc
sti
arpl
sbb
popf
inc
loope
sahf
adc
popa
nop
mov
lret
adc
mov
cmc
xchg
fnstenv
jg
outsl
loope
fldcw
jg
arpl
in
in
test
lods
adc
mov
pop
xor
jne
pop
daa
jne
popa
or
out
or
xchg
lods
xchg
cmp
pop
hlt
pop
push
adc
fisttps
lahf
movsl
push
aaa
lahf
mov
nop
jmp
repnz
movsl
lods
push
cmp
mov
jmp
popa
xchg
aad
push
jl
insb
mov
fsubs
daa
popf
andl
adc
andl
cltd
pop
mov
mov
aad
lret
bound
and
fs
dec
push
pusha
movl
movb
movw
pushf
lea
jmp
in
les
ret
pop
dec
div
lds
std
adc
leave
xchg
sub
roll
dec
pusha
push
mov
pop
cmp
repnz
clc
cmpsl
inc
jne
jne
sbb
dec
fs
in
mov
cli
shll
fisttpl
idivl
scas
mov
mov
xchg
sub
push
push
push
icebp
or
pop
in
shll
imul
jmp
cmp
fsubs
sub
push
adc
and
jo,pt
jl
fcoml
mov
bndstx
xor
mov
xlat
mov
pop
and
loop
dec
es
xchg
outsl
adc
xchg
lock
pop
xor
sbb
sub
stc
inc
mov
mov
mov
and
mov
add
in
movsl
jecxz
fldl
test
in
cli
js
and
fadds
fmul
mov
mov
and
xchg
nop
addb
loopne
cld
push
rorb
xchg
and
imul
jg
fisubs
push
mov
push
loope
loope
cmp
jmp
sub
mov
call
daa
cmpsb
fmuls
ret
mov
decb
mov
das
inc
pop
daa
pop
idivb
f2xm1
dec
inc
push
inc
or
popa
mov
xchg
or
add
pop
outsb
jnp
ret
jns
mov
push
popa
xchg
sarb
inc
push
pusha
sub
mov
mov
popa
out
imul
jge
pop
lcall
ret
inc
push
ret
mov
and
jge
imul
lods
xor
sub
insl
pop
mov
inc
outsb
call
or
icebp
imul
pop
out
std
fcoms
cmp
into
mov
sbb
xchg
shr
cmp
mov
loop
sub
jo
hlt
sub
xor
test
test
movsb
or
ds
mov
push
push
push
mov
lea
jb
cmc
clc
stc
bt
cmpb
jg
pushf
pushf
mov
lea
jne
ror
cmp
mov
call
fnstenv
dec
movsl
in
loopne
lahf
in
aad
flds
cmc
push
inc
pop
or
popf
xor
xchg
mov
mov
pop
clc
xchg
mov
testb
jnp
xchg
enter
sbb
xchg
add
mov
xchg
xchg
mov
out
nop
sub
pop
lock
jp
jle
jle
pop
lock
hlt
dec
int3
outsb
hlt
fcomps
jae
xor
lea
call
call
call
jge
jp
mov
adc
aad
std
lahf
in
mov
mov
imul
mov
nop
xor
fldenv
js
ss
pop
leave
loopne
dec
pop
dec
adc
cmp
xor
rol
int3
in
cmp
test
aas
cs
pop
scas
rcrb
cmpsb
int3
mov
dec
int
jp
notl
movsb
xchg
iret
mov
fmul
loope
fwait
lock
movsl
mov
inc
in
dec
jmp
cmc
or
push
test
fdivrs
push
divl
mov
pop
push
jle
push
sbb
arpl
inc
push
lea
ret
addr16
jns,pn
arpl
inc
lcall
or
xor
arpl
lods
nop
nop
or
jne
adc
movb
pop
in
out
jg
mov
into
fs
push
outsb
in
les
int3
das
dec
addr16
xor
icebp
outsl
mov
btr
daa
pop
xor
cmc
jg
into
inc
movsl
jmp
jne
lret
imul
scas
xchg
dec
shr
call
roll
outsl
loop
jb
je
push
out
jp
xor
or
lret
subl
int
icebp
jae
adc
xor
pop
imul
add
sbb
xor
pop
push
sti
sarb
out
movsb
dec
add
or
cmp
or
dec
cld
data16
out
in
aaa
cmp
mov
or
fdivrs
stc
push
js
in
div
push
dec
or
aaa
test
mov
mov
or
repz
movb
pushf
lea
jne
push
pushf
lea
call
pushf
pusha
pushf
lea
jmp
sbb
adc
adc
cmp
and
adc
xor
and
pop
es
push
call
adc
dec
cli
or
fsubl
adc
call
fidivrl
test
frstor
mov
pop
divb
and
out
dec
inc
xlat
or
in
addr16
or
scas
mov
sub
in
jl
jmp
repz
mov
xor
lcall
shrd
btr
pusha
shl
mov
call
mov
bswap
aam
ror
mov
das
sub
aaa
sbb
shrd
jns
push
cmc
cmc
pushf
mov
lea
shl
push
bsr
push
stc
jmp
or
mov
stc
clc
test
pushf
push
mov
pusha
lea
je
rcl
sub
mov
call
movsl
and
adc
call
mov
idivl
out
test
xor
stos
sar
xchg
xor
imull
neg
js
sbb
push
adc
sti
outsl
push
ss
pop
icebp
pop
cld
outsb
mov
loop
gs
cwtl
mov
mov
mov
and
int3
testl
mov
mov
xchg
insl
and
cmp
and
neg
pushl
popl
cmc
cmc
cmp
call
cmp
call
jp
pop
pop
pop
jns
jge
imul
add
dec
je
out
xchg
add
test
ret
cltd
add
jns
sarl
or
inc
sbb
pop
gs
sbb
mov
leave
xor
push
daa
xchg
aas
in
pusha
icebp
pop
repz
movsb
mov
enter
adc
xchg
cltd
and
pop
jecxz
pop
push
inc
xor
or
mov
fnstenv
into
and
test
cmp
jb
sbb
daa
push
adc
repz
in
jne
pop
push
jmp
mov
mov
stos
and
adcl
ret
imul
and
mov
insb
mulb
fidivs
aam
inc
jmp
repz
mov
popa
mov
xchg
xor
cmp
jae
mov
adc
icebp
scas
fstl
jl
dec
lahf
mov
mov
lods
fidivl
addr16
mov
and
inc
sbb
push
clc
rcll
inc
mov
jmp
pop
push
jecxz
stos
push
push
jne
push
repnz
sub
out
cmp
pushf
xchg
fcoml
enter
clc
lcall
xor
nop
add
sbb
mov
fnstenv
shr
pop
cmovo
icebp
int
or
ret
ljmp
std
adc
inc
mov
cwtl
mov
mov
gs
push
fs
xor
je
mov
incb
sub
push
les
ds
test
mov
test
mov
or
lds
pop
or
shlb
test
mov
xchg
jecxz
std
inc
repnz
jle
subl
mov
je
int3
pop
dec
negb
and
js
insb
in
dec
fwait
test
mov
cltd
jg
addr16
lds
jg
inc
loope
int
loope
cmp
pop
and
push
adc
mov
mov
test
lods
out
cli
pushf
mov
or
mov
add
xchg
mov
fcmovu
lahf
adc
cmp
xor
jae
xor
jl
jae
dec
out
jmp
pop
push
dec
pop
divb
rcrb
mul
jns
mov
xchg
sbb
xor
lcall
pushf
dec
test
call
jb
lods
push
cmp
xor
insb
and
adc
push
nop
adc
outsl
jg
int3
repnz
inc
ret
in
push
iret
push
mov
mov
lods
mov
inc
lds
push
in
ja
or
leave
shl
repnz
mov
cwtl
outsb
ret
jo
cwtl
lea
xor
push
clc
addps
icebp
push
fcoml
subl
nop
xchg
add
cltd
pop
mov
and
lcall
fs
jae
bt
stc
cmp
push
jmp
lea
jae
bt
stc
pushf
pushf
cmp
jmp
inc
sub
push
les
cltd
pop
jbe
jp
outsb
and
xor
or
mov
lahf
ds
jmp
push
adc
shlb
push
int3
lea
sub
imull
mov
call
mov
ja
cli
pop
daa
inc
mov
mov
or
out
cmp
sbb
pop
cmc
inc
icebp
shl
mov
sbb
xor
sti
jne
jno
dec
xlat
jge
popa
lcall
out
cmc
call
xchg
cmp
aaa
sahf
loopne
cld
xchg
cmpsb
rolb
cmp
cld
addr16
lods
add
adc
xor
add
lahf
xor
pusha
dec
pop
fsubs
mov
mov
fwait
dec
fcmovu
or
push
rol
pop
mov
pop
jmp
lret
push
rcll
pushw
adc
mov
imul
dec
jne
push
lcall
fs
jae
add
btr
mov
shrd
mov
sar
add
rol
mov
stc
push
bt
sub
clc
mov
repnz
pushl
lea
jne
movzbw
mov
mov
test
ror
bsf
sub
stc
sub
mov
test
sub
pushf
pushl
popl
test
cmc
cmc
cmp
jmp
xor
cmp
cltd
ret
xchg
lcall
out
ret
jne
clc
dec
adcl
lds
fwait
daa
xchg
push
mov
jno
cltd
mov
cltd
daa
add
fstl
adc
xchg
nop
sbb
push
xchg
mov
inc
push
popa
xchg
lret
fdiv
outsl
cmc
out
mov
ret
xchg
inc
out
sbb
mov
xchg
adc
lcall
fs
jne
or
mov
jmp
push
pusha
pushf
lea
call
pushf
sub
ja
sub
push
pusha
lea
jne
jmp
lea
clc
xor
stc
mov
xor
bt
mov
call
in
fistpl
or
call
stos
rolb
pop
int3
jb
adc
fadds
jmp
add
data16
ja
push
mov
jae
in
repnz
pop
dec
lcall
push
aad
mov
pop
in
divps
jnp
xchg
xchg
mov
mov
stos
andl
xchg
enter
cltd
add
mov
shrb
push
sbb
out
fiadds
pusha
fisubrl
push
lock
jbe
sti
jp
data16
xor
dec
shrl
push
pop
or
inc
sbb
sbb
push
imul
ret
push
sub
scas
js
ds
xchg
test
mov
cld
xorl
in
stc
test
xchg
andb
icebp
or
push
jl
popa
xchg
enter
inc
arpl
stos
scas
push
shl
cltd
aaa
fwait
int
fldcw
jae
dec
loope
stc
addr16
lcall
in
mov
push
mov
jns
inc
or
inc
cmp
inc
pop
popf
pop
or
sti
inc
bound
addr16
or
les
xchg
or
dec
or
out
mov
dec
and
sbb
mov
mov
push
insb
stos
adc
cmp
pop
dec
sbb
pop
gs
testl
popa
cs
outsb
cli
and
stc
nop
sar
fwait
cmp
and
xchg
add
push
jle
sbb
cmpsl
aam
leave
addr16
push
xor
cmp
push
and
sbb
add
insb
push
std
sarb
mov
mov
cwtl
icebp
xchg
ja
repz
fbld
sbb
mov
push
stos
fsubs
adc
sbb
push
lcall
jae
dec
jmp
scas
mov
jnp
inc
add
pop
cmp
jae
rcl
call
out
bound
scas
and
lcall
jbe
xchg
and
hlt
inc
jecxz
inc
sarb
jno
push
sti
lar
clc
femms
jae
outsb
in
mov
pop
test
movsb
adc
mov
jmp
xor
add
scas
adc
xchg
xchg
lret
cltd
movb
pop
leave
jae
roll
pop
shll
cmp
jmp
cmp
push
js
repnz
sub
into
js
cmp
mov
test
add
cmp
push
mov
bt
call
jmp
test
mov
test
clc
call
add
dec
outsl
popa
fs
imul
add
test
mov
std
mov
mov
lret
mulb
enter
lods
add
xchg
aad
dec
or
dec
aaa
push
push
fidivs
shrl
std
add
xchg
push
add
scas
xchg
mov
pop
daa
mov
add
xor
mov
sub
sbb
xchg
xchg
or
lcall
push
inc
add
cmp
pop
adc
inc
xor
inc
or
test
ror
or
adc
pop
out
push
pop
mov
cmpsb
jp
sbb
mov
sbb
mov
cmpsl
inc
mov
mov
xor
sbb
icebp
xor
cwtl
sub
les
or
enter
and
es
mov
lds
adc
add
inc
pushf
lea
jmp
pusha
repnz
push
jmp
push
lahf
icebp
mov
fcmovnbe
out
loope
popa
dec
sub
sbb
pusha
cmp
push
add
test
aaa
jp
mov
sub
in
in
pushw
mov
ret
andl
cwtl
adc
lods
xor
cmp
daa
dec
sbb
shll
push
jg
pop
add
pop
and
ja
arpl
jno
pop
push
pop
dec
das
sar
leave
pop
adc
jb
in
fcmovnbe
lahf
adc
sub
scas
mov
push
sbb
jae
ret
mov
repnz
sbb
pop
out
out
js
js
inc
dec
pop
dec
ds
inc
inc
pop
dec
fdivl
add
dec
das
jge
shrb
call
jo
paddusb
aad
sti
rclb
ja
loop
mov
test
cltd
daa
cmpl
pop
dec
xor
pusha
add
loopne
fdivs
imul
aad
mov
jge
insl
bound
inc
std
inc
shlb
add
jp
lahf
xchg
movsb
fwait
xor
call
push
test
mov
stos
mov
adc
and
gs
test
fs
in
push
cmp
xor
push
adc
cmp
ds
lret
lret
push
cmc
mov
outsb
adc
aam
rclb
jp
cmp
xor
pop
cmc
sti
rclb
jbe
gs
int
add
dec
jecxz
mov
xchg
pushf
cli
pop
int3
fisubrl
lret
mov
mov
mov
sbb
jb
sub
arpl
mov
test
jo
xor
jg
inc
dec
pop
dec
fxch
jne
and
dec
out
pop
lret
mov
shrb
cmp
jo
js
inc
loop
fdivl
stos
push
inc
fidivs
dec
sub
add
xor
jge
push
out
insl
out
cmp
cmpsb
rolb
pop
dec
add
push
xor
xchg
pusha
stos
push
inc
sbb
jmp
dec
sub
mov
add
fisttps
neg
inc
dec
rorb
mov
mov
add
lcall
clc
mov
dec
lret
mov
ja
mov
sub
enter
mov
sub
push
out
pop
rorl
cld
je
in
dec
jge
adc
adc
lahf
sbb
mov
fwait
sub
inc
jo
cmp
cmp
push
test
movb
call
mov
xchg
lds
notrack
pop
insb
ds
ss
fs
push
insb
adc
jns
mov
pop
push
lds
dec
or
aaa
je
pop
or
jae
jp
ljmp
gs
xor
je
loope
subb
mov
pop
dec
popa
xchg
rcr
add
sbb
or
sbb
jecxz
rorl
push
sti
push
iret
pop
lcall
mov
pushf
push
push
lea
jmp
nop
stc
xchg
pop
aam
mov
sbb
push
push
jo
dec
push
push
mov
jle
push
repz
xor
xchg
out
jo
call
repz
pop
outsb
pop
mov
dec
cld
loop
mov
xor
setns
xchg
add
sub
lea
je
push
sub
push
call
push
btc
inc
clc
rol
push
rcr
push
and
sar
mov
ror
setp
mov
test
shl
sar
push
mov
and
sub
lea
mov
sets
lods
rcr
push
rol
or
add
or
or
neg
jmp
lea
jb
pusha
pushl
ret
call
mov
lods
out
push
scas
incb
mov
sbb
ret
test
pusha
aam
pop
out
jns
je
inc
imull
mov
ds
mov
pop
dec
es
cmp
jno
js
xchg
adc
pop
in
cli
je
in
fwait
jmp
jb
push
test
adc
xchg
xor
adc
push
add
add
push
stos
xchg
fildll
or
add
pop
mov
insb
cmp
je
mov
pop
loope
int
cmc
pop
loope
cmc
jmp
insb
leave
mov
scas
shlb
pop
sub
mov
mov
mov
clc
xor
pushf
pusha
pushf
lea
jae
pushf
movb
lea
jmp
dec
es
mov
out
xchg
mov
xchg
test
iret
repz
dec
fildl
mov
aaa
das
mov
mov
imull
sub
pop
aaa
lds
inc
cmpsb
add
inc
sub
and
ud1
mov
inc
dec
in
loop
lret
popf
xor
cmp
push
and
inc
pop
imul
cltd
sbb
mov
cld
rclb
cmc
xchg
fmull
jl
les
inc
loope
inc
add
daa
sbb
mov
pop
movsb
outsl
mov
pop
add
dec
iret
adc
push
mov
push
or
scas
xchg
roll
cmp
outsb
push
out
xor
repnz
je
push
push
inc
cli
iret
push
pop
dec
loop
cmp
xchg
mov
fdivl
xor
sbb
test
das
xchg
xchg
hlt
mov
lock
sub
pushf
test
rcll
xor
negb
ja
daa
push
push
clc
outsb
xchg
add
inc
out
fs
bound
enter
push
push
ljmp
pop
cli
call
jb
negb
popa
xchg
mov
ret
sahf
bound
xor
jl
mov
sahf
adc
sub
or
sub
mov
dec
pop
out
das
fstl
mov
clc
mov
jb
fsubs
xor
push
in
pusha
sbb
inc
push
daa
xchg
sbb
sub
push
sub
cmpsl
mov
loope
scas
jno
add
mov
xor
adc
cmp
pop
fbld
into
pop
dec
rcrb
mov
jb
pop
les
push
lock
aam
shlb
cmp
negl
xor
or
sub
dec
sub
pop
add
es
jo
std
aam
es
xchg
inc
and
inc
rclb
xchg
adc
pop
clc
mov
inc
push
add
lcall
dec
push
xor
or
and
jle
sub
and
cs
or
xorl
sub
stos
pushf
sub
or
cmp
push
pop
push
popf
pop
mov
ds
jecxz
jno
popa
roll
cmp
mov
lea
call
jge
pusha
pushl
adc
pushl
lea
call
call
push
aad
cmc
imul
adc
mov
test
mov
xchg
cli
mov
xchg
lret
or
jecxz
pop
push
push
ljmp
neg
dec
jbe
xchg
jmp
sbb
xchg
push
sub
mov
fdivrs
xchg
aaa
pushf
mov
fwait
test
loopne
mov
mov
and
jmp
pop
je
dec
pop
cs
dec
out
popa
xchg
mov
mov
imul
mov
insl
divl
inc
jecxz
out
ret
jnp
cmp
neg
call
cmp
cmp
pushf
pushf
lea
jae
pusha
test
cmp
mov
pushf
pusha
lea
ja
jmp
pop
ss
cmp
movsb
or
inc
xor
imul
inc
std
inc
adc
jp
pop
jne
shl
outsl
fsubs
pop
pop
add
jge
push
sbb
and
add
daa
xorb
cld
mov
jb
mov
leave
popa
dec
pop
insl
pop
dec
xlat
loope
std
mov
mov
addl
inc
loop
lret
push
push
inc
hlt
push
jp
jb
outsb
les
aas
call
lea
je
call
mov
lea
je
push
jmp
movsl
ficomps
cs
lock
imull
xlat
test
mov
jae
outsl
and
outsb
pop
fcmovnbe
mov
xchg
xchg
shr
push
popl
adc
sub
mov
mov
ss
lcall
daa
inc
cmp
ja
and
push
cmp
push
push
add
pop
push
into
les
ja
mov
sar
adc
mov
mov
adc
inc
in
lds
dec
in
inc
inc
shlb
mov
mov
cmpsl
sub
scas
sbb
mov
fs
jae
xchg
setne
mov
call
insb
add
add
jp
jb
jbe
push
jbe
jp
jp
es
fistl
jle
pop
lcall
sahf
in
and
enter
data16
mov
nop
lcall
in
mov
push
jns
push
outsb
cld
negb
fnsave
or
js
xchg
adc
cltd
leave
ljmp
fisttpl
mov
push
jbe
ficomps
sbb
jl
sti
test
mov
mov
jnp
xlat
test
bound
mov
inc
in
lds
bound
shrb
jne
mov
popf
ja
sti
push
jp
stos
cmp
adc
fisttps
and
push
lock
into
adc
in
inc
imul
jb
icebp
popl
pusha
sub
mov
into
cs
push
daa
pop
sti
pop
stos
inc
test
jae
and
add
repz
dec
pop
hlt
fldl
pop
fstpl
imul
cmc
inc
loope
push
pop
rcll
shlb
bound
repz
push
pusha
dec
lcall
push
aas
inc
fucomip
rcrb
mov
hlt
mov
enter
cmp
jo
ret
mov
test
push
push
xchg
pushfw
mov
and
gs
sbb
lea
test
or
mov
leave
popa
xchg
mov
lods
add
or
aad
fs
dec
sub
jnp
arpl
outsl
int
leave
shrl
lcall
inc
mov
or
add
imul
push
fldl
inc
lock
mov
int
std
cmpsl
lds
dec
sbb
daa
mov
xchg
ret
push
xlat
mov
sar
loop
int
aaa
add
mov
sbb
mov
repnz
cmp
pop
mov
adc
cmpl
dec
and
movsb
idivb
nop
and
ja
inc
dec
pop
das
jge
inc
jmp
cmp
scas
das
inc
pop
lea
jl
push
push
pop
push
dec
add
push
jl
bound
sarl
testb
xor
stos
mov
jb
xchg
lret
mov
push
lods
adcl
ljmp
mov
add
mov
sbb
mov
or
mov
sbbl
cmp
push
pop
mov
cmp
or
cwtl
mov
xor
lods
lock
push
cli
mov
mov
test
mov
mov
xorb
push
lret
out
mov
shlb
xor
sub
frstor
stos
cltd
cmp
jbe
aaa
xor
fcoms
loop
pop
fldcw
or
sbbb
or
mov
fwait
mov
mov
cltd
mov
stos
jne
outsl
and
xchg
pop
mov
add
and
cmp
inc
lds
push
jo
mov
cmc
mov
icebp
pop
cmc
sub
addr16
aas
xchg
cmp
push
pop
push
jecxz
jle
fs
fcompl
movsb
push
pop
lock
std
push
mov
out
dec
test
lea
sarl
mov
popa
xchg
mov
pop
and
adc
push
pop
push
notl
xchg
sarl
push
frstor
outsl
rorl
lcall
enter
inc
scas
pop
paddd
fistpl
or
pop
sub
and
mov
cld
lods
jns
inc
shll
or
adc
xchg
jg
inc
fldl2e
cmp
push
setg
or
mov
pop
stos
dec
jl
fs
rorl
lahf
add
add
lods
lcall
clc
cmpsb
fcoml
jge
lcall
or
ja
pop
sbb
push
divl
negb
or
insb
mov
jecxz
addr16
inc
mov
in
imul
fs
inc
loope
fildl
or
jmp
xchg
mov
add
imul
rcrl
int3
les
pop
enter
lcall
in
mov
pop
push
pushf
pushl
ret
push
jbe
cmp
xchg
mov
sti
mov
cltd
lret
mov
dec
repnz
inc
cmp
iret
push
jg
leave
mov
mov
insl
mov
into
adc
lds
pusha
enter
dec
in
xchg
and
mov
clc
jbe
mov
icebp
in
xchg
mov
ja
into
pusha
mov
xchg
lock
mov
lcall
adc
add
xor
cmp
adc
lea
jb
push
pushl
pushf
pushl
ret
stos
sub
scas
jo
int3
cmpsl
lcall
lahf
jmp
inc
fst
dec
lock
inc
sahf
xchg
cmc
dec
dec
into
xchg
xor
mov
sbb
hlt
out
inc
in
dec
jmp
xor
adc
out
lcall
mov
mov
popa
xchg
mov
mov
out
adc
out
jne
inc
jbe
adc
das
test
cltd
cmp
mov
out
negb
ret
dec
sbbl
mov
into
mov
pusha
bound
sbb
xchg
leave
dec
outsb
outsl
ss
lods
cmpsl
leave
cmpsl
clc
xchg
jnp
mov
pop
out
arpl
fsubp
or
inc
add
xor
sbb
dec
out
popa
xchg
mov
inc
jno
dec
xchg
dec
cli
add
jge
dec
jns
insl
movl
lcall
jmp
lahf
loope
icebp
lahf
in
lods
cltd
xor
sar
das
pop
xchg
mov
jmp
scas
cmc
dec
xchg
cmp
dec
outsl
sti
sbbb
lcall
sbb
adc
sbb
adc
xor
mov
clc
jb
out
inc
es
daa
jae
repz
clc
push
pop
aam
leave
add
sbb
das
movsl
or
sub
mov
adc
cmp
lea
cmp
sbb
lcall
in
lcall
dec
jnp
pop
xor
dec
sbb
inc
icebp
jg
stc
int3
inc
call
pop
mov
fistpll
cmp
outsb
pop
mov
dec
dec
in
dec
out
inc
jecxz
mov
std
cld
movsb
add
or
adc
repz
jne
xorl
jmp
lret
popa
xchg
mov
dec
addr16
sbb
or
sbb
clc
enterw
les
pop
lcall
pop
add
jg
xorb
xchg
cmpsl
lods
test
mov
cli
mov
mov
mov
jle
xor
sar
xchg
mov
stos
aaa
or
or
ja
lret
jge
xlat
mov
push
test
movsb
mov
pop
ret
pop
iret
gs
jne
insl
ret
dec
testl
jl
sahf
mov
lea
jbe
btr
cmc
sub
mov
sar
cmp
sar
bsf
add
xadd
mov
xor
cmc
setle
sub
add
dec
shr
movzbl
not
movl
lea
cmc
cmc
mov
cmc
stc
cmp
jmp
add
pop
pop
jbe
popa
inc
outsl
outsl
insb
push
popa
jb
jne
insb
add
inc
adc
lahf
add
xlat
popf
fildll
jmp
lods
roll
fldenv
jnp
xchg
iret
data16
bound
std
mov
das
aam
pop
icebp
gs
adcb
test
andl
cmp
mov
aad
pushf
dec
xor
insb
enter
dec
pop
divb
arpl
dec
dec
lret
push
std
xchg
loope
std
jnp
push
in
aad
jmp
cmp
ljmp
dec
aad
movsb
into
test
movsb
cli
test
cwtl
ret
test
sahf
mov
xchg
inc
imul
add
xor
add
fadd
mov
daa
xor
subl
push
iret
lret
lods
test
inc
rorb
mov
ficoml
ja
and
sbbb
dec
jecxz
mov
insl
inc
lret
shlb
loopne
lock
call
mov
push
and
adc
shr
mov
mov
shrb
in
roll
gs
or
stos
mov
or
cmp
fidivl
inc
loop
pushf
push
jmp
push
jnp
popa
nop
addr16
pop
mull
and
xchg
xchg
add
stos
rcrl
pop
leave
jae
dec
lds
ja
push
icebp
imul
mov
pusha
lea
jmp
push
pusha
pushl
call
cmp
jmp
adc
aam
fcom
test
jg
pop
adc
addr16
sahf
jle
jb
mov
sbb
stc
repz
xor
pushw
std
xchg
sti
adc
scas
pop
sbb
sbb
xor
jmp
mov
fistpl
jne
jns
dec
fstpt
lcall
ret
not
mov
inc
inc
inc
adc
cmc
rcl
xchg
test
cmc
mov
stc
test
neg
mov
clc
clc
cmp
cmc
push
clc
mov
push
sub
call
add
inc
js
je
jb
arpl
jae
call
pushf
pusha
mov
lea
jb
pushf
pushl
mov
movb
pushl
ret
inc
neg
xchg
neg
bswap
das
mov
push
sub
lea
jne
sbb
mov
clc
stc
push
neg
or
mov
bt
pushf
sub
push
mov
rep
not
movsbw
pushf
mov
push
push
lea
jmp
push
not
push
jmp
pop
and
lock
dec
sub
js
jo
insb
push
js
insb
data16
jle
lahf
es
mov
xchg
sbb
cmp
loop
loope
out
push
std
clc
push
cmpsb
fdivl
scas
adc
and
add
adc
add
rcr
lcall
je
add
add
lea
jmp
jno
js
test
lds
les
imul
jns
jns
mov
adc
mov
sub
mov
divl
test
aam
je
lret
xor
scas
adcl
ljmp
movsb
lahf
pop
sub
push
popa
xchg
lods
sbb
fdivs
sub
xchg
mov
xor
sub
jns
inc
sti
popa
jns
inc
int
cmp
pushf
lea
jne
shrd
push
pusha
mov
sar
neg
xor
sub
rcl
lea
lea
test
pusha
test
stc
sub
stc
mov
pushf
call
add
ja
mov
call
cmpsb
jmp
jp
mov
stos
add
dec
push
inc
jne
inc
push
js
push
jl,pn
mov
and
xchg
int3
cmp
push
push
xor
std
into
jp
cld
mov
test
stos
cmpsl
sbb
popf
mov
jle
fs
icebp
mov
adc
scas
push
push
int
es
adc
out
pop
sbbb
mov
or
and
bound
scas
mov
in
movsb
in
jmp
mov
shlb
les
jbe
lcall
movl
jge
pushf
mov
movb
movl
pushf
movl
pusha
lea
jmp
das
push
push
fs
cmpsl
ja
movsb
movsb
xchg
aad
leave
cmpsl
fldcw
int
add
icebp
test
jns
shll
push
repnz
fadd
mov
inc
sub
mov
sti
repnz
fsub
dec
jl
fbld
sarl
pusha
jne
xchg
scas
mov
fstpl
jmp
gs
out
add
jns
fwait
rorl
in
rorl
fnstenv
inc
lcall
ret
add
and
lea
stc
mov
pushf
test
call
add
dec
leave
fistl
mov
jo
je
fs
pusha
ss
test
or
lahf
cmp
mov
pop
lds
push
adc
add
enter
jns
push
das
insl
jle
cli
out
jno
sbb
icebp
mov
rclb
cmp
xor
data16
sbb
mov
xchg
jno
adc
fisttpl
daa
mov
xchg
aaa
mov
mov
push
pop
je
mov
add
stc
cmc
mov
push
cmp
pushf
pushf
lea
jb
cmc
cmc
pushf
jmp
ds
sbb
rcll
dec
add
sbb
bound
add
mov
xchg
cmp
mov
pushf
lret
loopne
push
outsl
adc
mov
mov
mov
lds
pop
mov
in
cmp
mov
sysexit
loop
cmpxchg
adc
out
repz
outsl
jge
jb
cld
push
das
lds
sbb
dec
arpl
ret
inc
call
outsl
xlat
ljmp
fwait
imul
add
gs
ds
mov
cmp
in
xor
xchg
mov
lock
mov
jmp
mov
pop
gs
popf
push
sbb
mov
loopne
imul
xchg
insb
and
clc
push
ljmp
sub
add
push
push
loopne
ret
inc
add
xchg
or
mov
movsl
cmp
adc
daa
movsl
imul
push
inc
ss
negb
into
js
lcall
loope
xor
inc
pop
push
aaa
pop
das
dec
sbb
int
add
adc
cmp
add
sbb
jecxz
add
cmpsb
mov
xor
jbe
jp
jle
push
fsubl
repnz
dec
ret
cli
sub
mov
xchg
lds
adc
mov
shr
fwait
out
jmp
je
or
inc
and
loop
popa
dec
pushf
call
stc
cmp
jmp
push
pushf
stc
add
pushl
call
inc
pushf
adc
lea
pusha
pushl
ret
fistpl
push
rcl
sti
adcl
push
add
xchg
and
fwait
cmpsb
push
jne
fimull
mov
std
outsb
jnp
sub
cld
dec
jnp
iret
imul
cmp
cmp
bound
xchg
cmp
stos
cmp
cmpsb
pushf
cltd
jmp
stos
pop
stos
add
push
or
stc
xchg
add
xchg
add
or
pop
ds
movsbw
not
lea
mov
movl
call
movl
call
adc
pop
int3
iret
push
mov
popf
fistpl
popa
ret
push
mov
jl
adc
scas
mov
pushf
sahf
les
xchg
xor
mov
dec
out
mov
dec
pop
call
mov
cltd
adc
add
pop
scas
lcall
mov
push
data16
or
int
stc
arpl
shrl
icebp
jne
cmp
push
add
push
lea
jmp
in
loopne
aam
add
sub
push
sbb
outsl
adc
stos
sbb
aaa
lcall
rep
test
test
test
ss
jno
mov
and
lret
pop
call
mov
cli
push
ljmp
inc
lcall
fcoml
sbb
mov
shrl
adc
aaa
jl
fstpl
sbb
leave
ja
aas
mov
jno
mov
iret
ficoml
inc
pusha
push
int
js
out
insl
cmp
test
push
or
repnz
repnz
fucom
outsl
bound
test
and
dec
jle
pushf
and
imul
loop
xor
mov
lods
cmp
pop
adc
ja
xchg
seta
pop
pusha
mov
lea
jg
pop
pushf
mov
pusha
movb
mov
jmp
push
cmp
mov
icebp
xor
mov
mov
cwtl
lret
je
in
jge
mov
test
in
add
aam
jae
cmp
mov
ss
lcall
fs
jle
sti
adc
lods
rcrb
fdivs
add
cmp
popa
shrd
hlt
dec
cld
jo
cmpsb
mov
pop
idiv
das
cmp
inc
out
xor
jge
xchg
xor
ds
inc
test
xor
jns
cmc
sub
cld
mov
dec
lds
jg
lcall
leave
movw
lea
call
call
jmp
jmp
cmp
call
mov
mov
out
mov
mov
bound
bound
jp
push
or
and
dec
jno
jle
dec
add
nop
xor
shll
mov
ja
jmp
aas
jbe
cmc
add
push
xchg
scas
sbb
add
sbb
cmp
bts
mov
bt
movl
cmc
pusha
cmp
call
movl
pusha
mov
push
lea
jmp
jmp
addr16
xor
jo
shll
icebp
mov
mov
jnp
jmp
cmc
lds
lahf
scas
adc
je
push
inc
mov
repz
jecxz
sub
ljmp
pop
clc
dec
int3
push
in
dec
inc
negb
and
mov
push
inc
leave
pop
lret
lcall
lahf
fisttpll
imul
pop
or
arpl
adcl
pop
sub
fistpl
cmp
inc
mov
loop
popf
xor
jp
xchg
inc
in
in
inc
fwait
mov
cs
or
mov
in
xchg
cmpsb
inc
inc
in
dec
lret
adc
scas
out
pop
dec
out
inc
cmpsb
aam
sub
xor
adc
and
sbb
cmp
add
push
sbb
dec
and
add
dec
sub
add
mov
cli
add
sbb
cmp
movsb
movsb
out
dec
mov
cmp
cmpsl
out
out
and
sahf
push
xor
popa
sbb
adc
and
dec
loopne
dec
cmp
mov
es
cmp
jmp
call
testb
pop
sbb
jne
pop
or
jge
sbbl
adc
int3
mov
mov
or
jmp
je
adc
adc
outsl
adc
cmp
ret
arpl
xchg
add
push
repz
nop
pop
mov
inc
mov
ja
jmp
adc
mov
jge
inc
xlat
dec
out
lret
pop
jns
lcall
ds
push
nop
addb
mov
fbstp
fistps
jecxz
ja
fistpl
dec
arpl
jp
stos
or
fs
scas
and
fildl
int
pop
pusha
jb
fcoms
dec
push
inc
call
cmc
mov
sti
aam
popa
xchg
movsl
push
pop
imul
mov
mov
fimuls
ret
pusha
negb
jo
insb
lcall
in
mov
push
jge
mov
cmp
adc
push
push
mov
les
sahf
subl
or
sub
js
push
std
cmp
aam
iret
inc
loope
fstpt
jbe
repz
xor
jae
dec
in
xor
sbb
lret
fisubs
cmpsb
dec
push
js
dec
sbb
xchg
sub
sbb
adc
lcall
xor
lea
call
pusha
pusha
movw
pushf
lea
jmp
pushf
call
and
and
and
jnp
inc
arpl
lock
add
mov
mov
inc
mov
orb
inc
and
mov
clc
pop
mov
mov
mov
pop
mov
into
dec
mov
xor
mov
jb
mov
nop
and
subl
dec
mov
pop
loopne
shlb
xchg
jecxz
test
mov
jecxz
jne
pop
cmc
test
loopne
lds
cmp
orb
lock
add
cld
mov
sti
xor
mov
xor
xchg
xor
sti
in
jnp
fs
xchg
xchg
addr16
sub
rcll
mov
faddp
pop
xchg
jne
adc
xchg
inc
iret
pop
xorb
jmp
add
stc
into
jecxz
inc
mov
mov
mov
cwtl
repz
add
in
jne
in
inc
add
test
daa
fdivrp
pop
xchg
dec
jno
iret
jecxz
xchg
stos
out
mov
adc
aam
and
jb
cmp
and
sbb
cwtl
cli
sbb
xchg
add
push
loope
xor
aas
test
pop
mov
adc
sub
sub
or
loopne
xor
cmp
aaa
inc
ret
loop
addb
xor
or
mov
in
call
enter
jns
ss
jmp
and
arpl
sub
and
mov
push
fsts
ljmp
dec
xchg
test
add
inc
ret
movsb
mov
jmp
adc
xor
jnp
insl
and
idiv
or
cmp
xchg
inc
pop
jne
jecxz
cld
fnsave
cwtl
bound
fdivrs
rcr
mov
cmp
dec
les
add
jne
ret
daa
fnstcw
or
loope
inc
sub
out
pand
add
add
add
ss
jl
test
cmpsb
push
lahf
add
imul
insl
pop
icebp
jmp
and
xor
mov
mov
std
jno
xchg
repz
and
xchg
out
jo
xlat
lock
jmp
push
sub
adc
insb
adc
dec
repz
add
idiv
cwtl
add
repnz
pop
mov
imul
hlt
add
jne
sbb
testb
mull
adc
mov
add
jp
test
xchg
dec
cwtl
pop
or
iret
ret
test
out
fsub
cli
pop
sbb
addb
pop
xchg
nop
out
sbb
enter
mov
bound
fs
sbb
icebp
cwtl
or
adc
data16
pusha
adc
loope
push
jae
mov
shr
and
in
adc
in
loope
jo
ja
and
add
jns
mov
repnz
cli
mov
mov
xor
xor
or
cmp
mov
push
or
pop
ja
mov
xor
mov
jns
shr
and
add
loop
pop
std
mov
jle
enter
push
inc
aaa
jg
mov
adc
shll
orl
add
mov
push
ret
xor
arpl
mov
movsb
cwtl
mov
or
add
mov
sahf
mov
jns
cwtl
ret
mov
rcl
xor
in
adc
mov
xchg
cltd
xor
or
inc
sbb
lret
add
mov
sbb
or
ret
xor
loop
cltd
mov
insl
mov
or
and
gs
daa
and
movsl
mov
jns
cmp
or
dec
repnz
sub
xor
sub
stos
sahf
loop
or
xor
xchg
add
mov
mov
cmp
rclb
test
loope
cmp
rolb
push
cmp
mov
jns
in
mov
pop
mov
push
ds
loop
push
mov
sahf
lret
add
ret
xor
mov
jns
sub
and
andb
or
ret
xor
xor
mov
mov
or
add
or
insl
test
nop
test
mov
repnz
sub
xor
mov
mov
mov
or
dec
enter
pop
xor
xor
or
mov
mov
or
pop
mov
or
inc
or
enter
or
ja
lea
mov
or
jno
xor
loop
daa
adc
nop
sahf
call
dec
fimuls
ret
xor
mov
jns
adc
sahf
inc
jecxz
lret
add
xchg
add
dec
xchg
push
jns
pop
jns
xchg
or
dec
mov
ret
xor
loop
sbb
mov
mov
fwait
xor
loop
pop
pushf
mov
sbb
sbb
dec
pushf
or
dec
sahf
xor
loop
or
mov
mov
or
mov
pop
adc
test
mov
shld
icebp
sbb
sbb
lcall
mov
jg
test
sbb
icebp
cwtl
jns
mov
sub
test
mov
cwtl
subl
rclb
mov
shrl
or
adc
das
pusha
adc
test
fs
loope
mov
xor
cwtl
icebp
xor
mov
xor
mov
add
loope
mov
inc
icebp
cwtl
jge
lock
adc
into
adc
loope
mov
shl
cwtl
pushf
mov
xchg
mov
mov
or
arpl
mov
call
jnp
and
add
movb
loop
loopne
jge
or
pop
subl
adc
adc
test
adc
dec
and
out
and
in
dec
out
xchg
clc
nop
adc
mov
push
push
nop
jo
adc
sbb
add
enter
loope
in
test
gs
adc
fs
sbb
cwtl
leave
imul
dec
adc
insl
popl
test
fs
aam
sbb
cwtl
leave
cmc
mov
testl
loope
sti
sbb
mov
add
les
loope
pop
sbb
sbb
test
cmp
or
nop
adc
mov
add
jbe
addl
mov
sbb
add
pop
mov
nop
xchg
nop
jne
add
inc
jmp
add
adc
adc
mov
cli
pushf
dec
adc
mov
xchg
pushf
adc
and
loop
mov
mov
adc
jg
adcb
jns
mov
or
ret
xor
mov
mov
or
cltd
dec
js
ret
xor
xor
fwait
xor
loop
pop
sbb
sbb
mov
dec
xchg
or
addr16
mov
mov
adc
repnz
push
xor
loop
leave
sahf
mov
mov
mov
adc
sbbb
icebp
cwtl
pop
mov
adc
test
loope
and
mov
sbb
loop
adc
mov
mov
xchg
ljmp
adc
and
lcall
inc
movsb
sbb
icebp
cwtl
leave
and
inc
rol
inc
push
adc
es
mov
test
cmpsb
fs
loop
mov
mov
cmpsl
xchg
adc
addr16
icebp
aas
sub
ret
pop
test
mov
adc
les
fs
pop
test
mov
adc
test
loope
stos
sbb
mov
lods
dec
adc
loope
lods
sbb
cwtl
loope
mov
scas
insl
adc
loope
scas
sbb
cwtl
xorl
or
fs
sbb
cli
adc
rclb
test
xor
loop
cmp
mov
adc
xor
mov
test
mov
mov
loop
mov
mov
ss
jo
test
cld
mov
add
cwtl
les
adc
aam
fs
sbb
icebp
cwtl
in
mov
mov
hlt
cmp
mov
sbb
aas
sbb
icebp
cwtl
int3
mov
adc
faddl
pusha
sbb
icebp
cwtl
in
ret
jo
adc
cld
inc
fs
loope
inc
sbb
cwtl
mov
mov
pop
adc
loope
dec
sbb
cwtl
lods
dec
mov
leave
js
test
movsb
lret
fs
loope
dec
sbb
cwtl
xchg
dec
mov
int
pusha
adc
loope
into
sbb
ljmp
adc
loop
mov
mov
rorb
in
icebp
dec
push
sbb
icebp
cwtl
daa
rol
mov
or
das
rcrb
mov
cwtl
pop
push
mov
adc
les
shll
loope
push
sbb
ljmp
adc
loop
mov
mov
push
mov
cli
icebp
dec
sbb
icebp
cwtl
daa
push
mov
or
adc
les
pop
fs
loope
fcomps
mov
sbb
loop
adc
pop
mov
fs
ljmp
adc
fimull
in
icebp
inc
pop
sbb
icebp
cwtl
pop
fcmovnb
mov
adc
les
fs
loope
fcompl
stos
icebp
sbb
andb
fcmovb
das
frstor
loope
pop
sbb
loop
adc
fimuls
pop
fs
ljmp
adc
pusha
lcall
inc
loopne
lret
pop
popa
mov
adc
les
fs
loope
bound
stos
icebp
sbb
andb
fcmovb
das
arpl
loope
jecxz
mov
sbb
loop
adc
fs
mov
fs
ljmp
adc
in
lcall
inc
sbb
icebp
cwtl
pop
out
mov
adc
les
fs
loope
out
stos
icebp
sbb
andb
fcmovb
das
call
pop
imul
mov
adc
test
loope
imul
icebp
sbb
loop
adc
jmp
mov
fs
ljmp
adc
insl
lcall
mov
sbb
icebp
cwtl
cld
out
mov
out
mov
fs
loope
jno
pop
icebp
cwtl
pushf
jb
mov
repnz
lods
repz
loope
je
js
cwtl
mov
bnd
mov
testb
fs
loope
js
pusha
icebp
cwtl
movsb
jns
mov
stc
jo
test
cld
jnp
add
cwtl
les
dec
adc
aam
fs
sbb
icebp
cwtl
in
mov
add
mov
out
adc
mov
out
andb
int3
lods
fs
in
loope
add
sbb
sbb
out
pusha
negl
sub
adc
push
jo
test
fs
pop
pop
sbb
cli
adc
rclb
test
or
loop
cmp
mov
adc
or
mov
loop
mov
mov
mov
in
icebp
aas
or
ret
pop
mov
mov
adc
les
fs
pop
mov
mov
cli
adc
rclb
test
lea
loop
cmp
mov
adc
mov
pcmpgtb
loope
sbb
cwtl
les
adc
xchg
lods
adc
loope
adc
call
mov
adc
jne
test
xchg
fs
loope
xchg
sbb
and
out
xor
movsl
mov
loope
in
out
xchg
imul
mov
lahf
enter
mov
pushf
sbb
mov
push
mov
mov
loopne
lret
call
add
rorb
mov
push
sbb
and
popf
mov
inc
lahf
popf
sub
ret
xchg
sahf
rorb
fcoml
movsl
nop
xchg
daa
pop
xor
out
jnp
cwtl
add
call
mov
adc
rcrb
jo
or
repnz
and
add
test
repz
fs
xor
add
enter
mov
popf
fldenv
les
add
push
xchg
add
les
ljmp
cmp
mov
or
lcall
cmp
dec
jns
push
ror
test
sub
int3
mov
dec
in
rol
ss
or
pop
mov
mov
sti
xorl
jl
shlb
add
inc
outsb
or
std
adc
test
inc
cmp
les
pushf
hlt
adc
mov
mov
xor
nop
inc
cmpsl
enter
add
mov
pop
xchg
sbbb
hlt
push
pop
sbb
dec
shlb
rcrb
push
xchg
and
mov
dec
fists
mov
pop
inc
mov
dec
out
xchg
cmc
mov
xchg
inc
or
movsb
popf
dec
and
inc
mov
dec
dec
xchg
dec
mov
mov
push
or
cmpl
cwtl
test
scas
cltd
dec
xchg
leave
sbb
sub
adc
popf
and
and
popf
xchg
jmp
ret
xchg
enter
xchg
push
mov
xor
stos
sbb
mov
inc
outsb
or
fsts
mov
dec
mov
andb
jge
ss
cmpb
test
push
movsb
ffree
bound
aam
frstor
sbb
sbb
and
mov
mov
xchg
mov
dec
rclb
mov
mov
adc
inc
movsb
bound
mov
xchg
cli
nop
sbb
mov
or
mov
ror
syscall
and
xor
and
test
add
sub
xchg
movsb
inc
mov
xor
mov
repnz
dec
push
xchg
notb
dec
inc
jmp
sbb
cmp
cmpsb
adc
daa
mov
cmpsl
inc
into
movsb
pop
dec
stc
mov
in
flds
and
dec
mov
mov
mov
sbb
dec
in
imul
xchg
shlb
mov
xchg
adc
test
movsb
arpl
mov
sub
les
fsts
mov
dec
mov
stos
xchg
leave
movsb
call
dec
add
xchg
aaa
mov
xor
xchg
mov
xchg
lret
fcmovb
xor
movsb
fmull
dec
fbld
xchg
hlt
nop
mov
jg
lds
test
paddw
scas
andl
subl
add
xchg
loop
pushf
mov
popf
in
mov
cmp
mov
push
inc
outsl
or
dec
xchg
call
and
mov
ss
ret
mov
add
std
mov
mov
or
icebp
adc
and
rorb
sbb
push
xchg
out
mov
cmp
add
adcl
stos
mov
adc
das
mov
xchg
jmp
or
xchg
gs
mov
add
jbe
cmpl
les
notb
mov
push
cmp
mov
mov
orl
cmp
rcrb
loope
aad
arpl
movsb
call
jnp
add
mov
ret
or
dec
test
mov
mov
inc
mov
mov
mov
enter
mov
xchg
addr16
test
nop
xchg
leave
mov
or
repz
mov
adc
dec
pop
adc
dec
xchg
je
dec
inc
mov
xchg
mov
addb
orb
icebp
nop
adcb
dec
mov
roll
or
push
andl
pop
roll
xor
push
hlt
test
push
xor
jmp
lahf
xlat
xchg
fsubrs
add
flds
sub
add
pop
add
pop
add
faddl
inc
fldl
js
add
pop
les
filds
cmpl
sbb
pushf
mov
arpl
not
stc
mov
mov
mov
mov
push
xchg
mov
out
test
mov
mov
dec
xchg
aam
pop
jecxz
in
or
subl
out
mov
push
mov
push
xchg
movsb
into
dec
push
xchg
fldenv
mov
xchg
jne
std
les
mov
mov
sbb
mov
mov
inc
inc
mov
push
lret
jmp
dec
cmp
xchg
or
push
mov
aas
dec
lds
inc
testl
xchg
popf
movsb
and
mov
dec
dec
dec
pop
xchg
mov
imul
push
mov
xchg
movsb
mov
mov
mov
xchg
push
jmp
push
sahf
push
inc
push
mov
xchg
mov
mov
rolb
fsub
mov
xchg
and
add
cmp
les
mov
es
inc
mov
xchg
add
subb
dec
pop
xchg
notb
mov
xchg
lret
movsb
push
dec
pop
xchg
frstor
movsb
js
jg
xorl
inc
lcall
dec
xor
mov
inc
les
inc
inc
mov
or
adcb
dec
pop
clc
cltd
bound
cmpsl
mov
sbb
loopne
lahf
in
out
lcall
mov
mov
xor
in
or
movsb
jno
xchg
jbe
sbb
pop
inc
mov
in
movsb
hlt
dec
sti
xchg
jle
add
mov
xchg
movsb
movsb
stos
dec
lods
xchg
mov
mov
leave
xchg
lret
dec
fdivs
fwait
adc
push
mov
clc
shrb
rol
rclb
or
push
sbb
or
add
test
xchg
test
mov
test
lods
xor
popf
mov
pop
xchg
enter
add
rcrb
xchg
add
adc
movsb
adc
popf
nop
out
mov
sbb
mov
xchg
inc
cmp
sbb
test
in
insl
nop
mov
into
mov
pop
movsb
loopne
imul
test
xchg
mov
mov
dec
inc
xchg
inc
mov
mov
les
js
mov
loopne
add
pop
and
movsb
int3
aam
sub
loopne
enter
fists
nop
fildl
or
test
nop
add
push
mov
xchg
xchg
pop
xchg
xchg
push
mov
mov
dec
inc
xchg
enter
inc
xlat
mov
xchg
in
out
in
xchg
hlt
mov
xchg
inc
test
mov
out
adc
dec
les
and
mov
fnsave
test
hlt
adc
or
jmp
cmc
nop
mov
mov
mov
dec
fists
mov
mov
xchg
aaa
movsb
ds
rclb
pop
mov
pusha
movsb
addr16
outsb
xchg
outsl
mov
or
or
in
dec
xlat
lahf
mov
popa
add
inc
jp
sbbb
les
xchg
mov
or
add
push
xchg
mov
movsb
fs
or
mov
inc
xchg
lret
movsb
aad
jb
xchg
sahf
xchg
mov
aam
les
xchg
imul
mov
adc
inc
xor
mov
test
fwait
xchg
loope
lret
mov
mov
dec
push
lock
and
movsb
mov
loop
stos
add
lds
sahf
and
add
xchg
daa
mov
mov
xchg
mulb
and
push
mov
mov
xchg
sub
mov
mov
dec
movsb
push
dec
pop
xchg
pop
mov
or
sub
inc
xchg
add
loope
add
sub
seto
movsl
mov
add
insl
mov
es
cmpsb
mov
sti
subb
je
xchg
daa
mov
or
dec
movsb
out
dec
lcall
xor
stos
int3
mov
mov
negl
sub
sbb
or
xchg
sub
shrl
sbb
mov
nop
add
je
inc
add
or
stos
leave
mov
fisubs
mov
dec
and
push
xchg
jo
mov
test
xchg
jo
clc
xchg
pop
sub
aaa
movsb
les
mov
xchg
and
push
incb
dec
imul
push
push
add
mov
mov
sub
add
movsl
mov
jmp
mov
cmp
loope
bound
dec
sarb
dec
inc
mov
adc
inc
enter
cmp
dec
sub
dec
mov
dec
adc
cmp
icebp
mov
xchg
fcom
xchg
nop
and
mov
push
push
mov
pop
cmpps
mov
cld
adc
loop
cwtl
movsb
cwtl
hlt
xchg
or
xchg
xchg
and
xchg
xor
mov
sbb
or
xchg
movsb
insl
dec
clc
xchg
stc
adc
loop
movsb
inc
dec
dec
adc
enter
in
ljmp
sbb
mov
ret
mov
sbb
add
xchg
pusha
movsb
dec
icebp
xchg
repnz
push
mov
adcb
imull
jnp
add
dec
jne
loope
test
repnz
movsb
jnp
add
mov
mov
mov
daa
mov
movsb
pusha
dec
loop
daa
out
mov
scas
dec
add
add
clc
jno
jmp
xchg
pushf
xor
out
adc
adc
nop
movsl
in
or
sbb
orl
out
mov
pop
mov
ljmp
push
jno
cmp
xorb
repz
hlt
test
or
cli
jbe
fidivs
in
insl
inc
jb
and
adc
cld
mov
js
add
push
jp
mov
sti
rcrb
lcall
jle
mov
xor
jns
arpl
push
dec
add
add
adc
js
cmp
sub
mov
les
out
imul
repnz
jge
pushf
fiadds
test
or
adcl
add
les
test
xorb
sbb
test
les
or
mov
xchg
cli
mov
or
mov
xorb
or
sub
test
sub
push
mov
mov
mov
mov
xchg
dec
movsl
lret
sbb
and
nop
mov
cmpsl
popf
pop
mov
mov
xor
adc
xchg
nop
adc
cmp
mov
or
add
push
sub
je
test
jmp
dec
cltd
xchg
ficoml
sbb
leave
inc
stc
or
xorl
popf
lcall
sahf
mov
adc
jbe
cmpl
subl
mov
popa
loopne
test
and
lret
movsb
xchg
push
mov
std
les
rclb
sarb
sbb
xchg
shll
mov
enter
enter
out
and
jnp
imul
cs
mov
push
xor
mov
dec
hlt
movsl
mov
out
out
jae
cli
les
rclb
dec
sub
shrb
popf
xor
scas
add
mov
sub
lcall
cld
arpl
xchg
cmp
add
das
inc
fsubrs
inc
or
mov
xor
sub
sbb
test
les
xor
sbb
fwait
add
jns
mov
mov
jbe
data16
insl
xchg
pop
mov
movsb
out
leave
xor
ss
and
mov
mov
dec
sub
inc
jo
add
ljmp
mov
pop
mov
movsb
sub
in
ljmp
test
stos
adc
cmp
test
mov
cmp
pop
adc
cmp
fidivrs
sbb
mov
cmp
les
or
mov
movsb
arpl
add
or
movsb
inc
lods
mov
xchg
aas
movsb
dec
rclb
inc
jb
jns
add
mov
add
pop
mov
cmp
xchg
dec
and
xchg
pop
mov
mov
add
xor
test
hlt
scas
das
inc
mov
inc
xchg
add
inc
in
or
roll
dec
add
mov
and
add
xor
iret
sub
add
fldl
dec
jns
cltd
inc
mov
ret
xchg
test
dec
imul
or
les
jae
xchg
inc
or
aam
jne
mov
mov
xchg
sub
dec
movsb
jge
jbe
subl
push
lret
add
dec
xchg
daa
dec
jno
rolb
les
rolb
test
jns
or
add
add
push
add
add
dec
add
testb
mov
xor
push
sbb
scas
push
adc
jmp
xlat
movsb
mov
out
and
inc
sub
mov
add
pop
add
fildl
imul
loop
add
adcl
pop
cmp
enter
inc
jecxz
jo
pop
in
sub
mov
dec
mov
xchg
inc
pushf
or
jge
orl
ljmp
add
icebp
adcl
lcall
lods
dec
mov
aam
arpl
mov
mov
xchg
pop
hlt
andb
loop
jle
xchg
jne
push
and
jmp
xorb
imul
repnz
cld
mov
push
mov
cmp
mov
inc
imulb
inc
lds
ja
call
mov
clc
or
dec
test
std
xchg
cwtl
test
or
jne
mov
jmp
add
ret
adc
mov
mov
jmp
cwtl
icebp
scas
xchg
popf
mov
sub
add
or
xchg
sub
mov
in
adc
or
add
test
pop
push
andl
or
cmpsb
mov
fs
jp
mov
inc
jae
cltd
xchg
cmpb
mov
pop
mov
mov
xchg
movsb
push
dec
pop
mov
mov
mov
mov
mov
or
sbb
mov
dec
push
xchg
pop
mov
lock
add
xorl
adc
nop
stos
mov
nop
and
push
mov
mov
cmp
mov
mov
xchg
jge
jo
pushf
mov
enter
pop
movsb
xchg
mov
mov
add
andb
cmc
les
nop
test
ret
adc
xor
cmp
adc
sbb
mov
cmp
nop
imul
pusha
cwtl
loop
mov
in
cltd
mov
add
sbb
int
rcr
rolb
inc
mov
inc
popf
add
sahf
nop
jns
nop
pushf
lahf
mov
add
enter
inc
and
hlt
mov
or
in
dec
sti
adc
ret
movsl
jmp
mov
and
cli
mov
xchg
les
movsb
rolb
add
push
xchg
pop
mov
test
xor
or
insl
mov
sub
sub
add
sub
add
or
add
mov
das
xchg
in
nop
sti
scas
nop
cmpsb
xor
les
rorb
jns
test
mov
mov
jns
andb
insl
add
xchg
mov
mov
icebp
sbb
mov
clc
lods
mull
mov
mov
xchg
fwait
and
mov
xchg
sarb
cwtl
loope
cmp
adc
cs
mov
mov
aam
mov
lret
mov
test
cmpsl
pop
adc
shll
jne
ffree
pop
fistpll
bound
addr16
sbb
mov
push
out
mov
pushf
lret
addb
nop
nop
mov
mov
cmpb
stc
sahf
adc
fidivrl
jns
test
and
add
movsl
mov
jmp
push
mov
aad
dec
mov
xchg
jns
nop
movsb
loope
addb
add
test
jno
stc
add
mov
and
cmpsb
add
movsb
push
push
movsb
jp
lahf
shlb
out
imul
repnz
adc
sbb
sub
and
sbb
cmpsb
pushf
xlat
out
pop
add
sbb
push
jnp
sbb
cwtl
test
arpl
sbb
call
mov
add
xchg
cmp
mov
dec
add
orl
and
adc
xchg
add
inc
or
or
mov
push
test
xor
mov
stos
in
xchg
xchg
xchg
inc
cmp
adcl
mov
add
xor
xor
cvtpi2ps
mov
ret
fsts
adc
insl
push
add
movsl
sarb
jmp
fwait
nop
mov
movsb
clc
lods
mov
rcrb
mov
movsl
mov
jmp
dec
fisttpl
xchg
mov
jmp
clc
das
xchg
xchg
mov
and
add
test
inc
and
test
es
int3
xchg
jb
cli
sbb
mov
xchg
or
imul
push
push
push
dec
mov
and
inc
movsb
in
pusha
stos
cmp
and
and
inc
hlt
mov
in
add
adc
std
insl
pushf
or
or
push
icebp
sub
rcll
cmp
or
lahf
push
mov
xchg
or
ret
xor
fistpl
test
pop
ljmp
inc
or
inc
jnp
aam
sub
lret
push
ret
mov
aam
jle
test
xlat
out
or
lods
mov
or
sub
sbb
push
in
xchg
aam
bound
sahf
call
mov
insb
mov
xchg
aam
enter
mov
xchg
lret
push
mov
movsb
mov
push
pop
cmp
mov
jecxz
repnz
sbb
mov
es
test
mov
sahf
rorb
push
xchg
cwtl
mov
jbe
out
pop
jecxz
aad
mov
xchg
int3
mov
mov
in
mov
cwtl
int3
adc
and
into
fisubrl
movsb
xchg
lds
mov
and
xchg
or
in
pop
clc
sub
lds
and
cltd
dec
sbb
mov
out
xor
push
cld
and
jo
pop
test
pop
into
ljmp
test
lahf
xchg
enter
xchg
push
xchg
jnp
repnz
sbb
rolb
stos
mov
enter
das
les
xchg
sbb
in
ds
sbb
xchg
mov
mov
loope
scas
xchg
int3
xchg
fwait
enter
or
mov
es
or
and
mov
in
mov
and
test
stos
push
movsb
mov
arpl
or
les
mov
adc
arpl
mov
mov
scas
pop
xor
xor
adc
push
loopne
out
test
xchg
sti
jbe
mov
icebp
sub
cwtl
fs
dec
xor
in
fiaddl
ret
ret
movsb
into
pushf
arpl
aaa
adc
lods
jge
popf
xchg
mov
lret
mov
jmp
dec
push
and
xchg
and
mov
pushf
mov
sar
fwait
jp
nop
push
fisubrl
xor
lea
inc
test
into
mov
cwtl
dec
lret
ret
lahf
loopne
xor
rorl
lahf
xchg
cwtl
pop
and
xorb
cmpl
pop
js
aam
lds
xchg
push
cs
mov
cmp
jnp
xor
sbb
xchg
sahf
push
and
clc
enter
mov
ret
leave
fcoms
mov
pop
mov
sbb
adc
and
xor
rcr
int
fsts
pop
add
mov
xchg
or
sbb
push
and
loopne
movsb
inc
mov
push
ret
mov
jl
mov
jb
psllw
in
pop
test
xchg
ffree
xchg
sub
mov
pusha
sahf
pop
or
push
xchg
rorb
push
mov
lea
xchg
inc
mov
std
in
cmp
dec
inc
out
movsb
mov
mov
nop
mov
orl
xor
mov
add
ja
ljmp
call
out
xchg
add
cmc
mov
adc
rolb
in
cmp
hlt
jmp
xor
mov
jg
orl
push
sbb
mov
or
aad
push
push
loope
add
mov
or
pop
xor
mov
pop
or
adc
mov
mov
jg
add
mov
movsl
sub
dec
add
mov
jle
pop
mov
cltd
xor
fmull
repnz
test
sbb
jo
cmpl
mov
ret
out
andl
sbb
loop
push
test
divb
out
in
repnz
in
sbb
push
adc
adcl
cli
mov
adcl
cwtl
mov
xorl
call
and
mov
sbbl
imul
pop
sbb
nop
or
enter
jp
jne
fmull
andl
inc
inc
adc
fistl
mov
mov
fs
pop
or
cmpsb
orl
bound
lds
adc
popl
mov
popf
ja
fsubl
loopne
and
cmp
outsl
push
pop
add
jp
sbb
and
jge
push
ret
sub
loope
aam
cmpl
push
clc
mov
mov
out
js
and
sbbl
fisttpll
jbe
jo
lods
and
jecxz
and
adc
xchg
xchg
insl
arpl
sbb
aam
push
adc
cmp
adc
movsb
add
mov
cwtl
mov
lock
mov
adc
sbb
lea
fwait
push
icebp
nop
or
sahf
add
mov
rolb
pop
inc
addb
test
nop
pop
or
les
addb
test
fiadds
fisttps
addl
fimuls
or
or
mov
fistps
test
dec
add
pusha
loopne
sbb
lock
pushf
rol
mov
adc
sbb
sbb
stos
dec
inc
add
incb
movb
mov
out
les
xor
mov
int3
arpl
mov
lret
xchg
in
xor
dec
add
lret
les
push
add
in
mov
adcb
punpckldq
data16
and
in
popa
adc
xchg
mov
mov
add
int
pop
movb
mov
sbb
lock
rcrb
in
out
test
in
ljmp
push
add
sbb
dec
movsb
sbb
xchg
or
dec
mov
xchg
xor
icebp
pop
or
fs
mov
and
push
enter
and
movsb
popf
sbb
cmpsl
jmp
xlat
cwtl
hlt
pop
lock
xchg
filds
sub
insl
pop
lock
hlt
xor
cs
pop
xchg
outsb
mov
mov
fdivl
scas
add
xchg
insl
mov
andb
or
xor
mov
pop
movsb
jo
jb
add
mov
cmp
add
xor
loopne
cmc
xor
test
rorb
js
mov
imul
repz
mov
movsb
test
xor
aaa
jno
icebp
popa
and
mov
jae
cwtl
test
mov
mov
or
repnz
addr16
mov
hlt
in
outsb
xor
xor
mul
test
ret
jae
xchg
fwait
repz
dec
imul
or
or
adc
jb
clc
push
ja
pop
imul
stc
outsb
lock
jno
pop
inc
jb
inc
sti
repnz
repz
lock
jl
addr16
jbe
dec
jnp
ja
imul
sub
js
mov
stc
xchg
std
jp
xchg
or
xchg
add
cld
inc
push
jg
pop
add
call
mov
pop
sbbb
mov
fdiv
sbb
scas
pop
lock
out
push
push
xchg
loopne
ja
jmp
or
shrl
pop
push
call
in
mov
xor
mov
imul
imul
adc
lret
popf
xchg
cwtl
sarb
shrl
lcall
cwtl
xor
or
pop
orl
add
in
int
mov
out
pushf
mov
es
cwtl
push
loopne
int
movsb
pushf
mov
adc
test
push
mov
add
test
test
mov
orl
mov
pop
lahf
sub
xchg
or
orb
mov
dec
adcb
nop
and
adc
push
enter
inc
sbbb
xor
and
loopne
bound
xchg
cmp
pusha
hlt
dec
subb
mov
popa
mov
and
pop
add
sbb
rorl
cli
pop
cmp
cmp
mov
push
fcom
popa
scas
sbbb
xor
adc
aam
fists
sbbb
mov
mov
mov
fstps
out
leave
dec
mov
push
xchg
pop
sbbb
or
lea
push
push
push
dec
lret
mov
xchg
adc
sub
sbb
add
adc
mov
mov
xchg
in
clc
dec
and
sub
ds
add
cld
or
inc
add
lods
inc
filds
lret
push
mov
dec
int
add
ret
add
adc
ljmp
cwtl
cmp
cmp
lds
push
cmp
xor
leave
lods
xor
fisubs
pop
scas
cltd
es
sti
inc
movsl
rorb
jp
lret
or
or
mov
stos
jmp
pop
loop
ljmp
scas
push
scas
test
inc
sub
in
dec
sub
call
xchg
or
or
mov
sub
lds
sub
mov
cmp
out
stos
aaa
adc
outsl
pop
xchg
subl
dec
sub
fwait
daa
push
cmp
icebp
and
shl
cmp
lret
clc
xchg
jp
aad
xor
stos
fisubl
jmp
or
fsub
fnstsw
notl
in
inc
xchg
push
js
push
xor
sub
or
or
or
mov
lret
in
pusha
es
or
mov
stos
shrl
cltd
icebp
sbb
cmpsl
icebp
dec
test
lret
inc
test
xor
xlat
push
inc
push
scas
pop
push
jecxz
xor
arpl
arpl
xchg
sub
mov
pop
in
in
in
in
in
in
icebp
movsb
icebp
and
jecxz
add
mov
stos
aad
pop
xchg
in
jnp
repnz
and
mov
xchg
xor
mov
inc
or
or
or
or
or
mov
ret
mov
mov
cmp
mov
lret
add
int
dec
adc
sbb
xor
push
mov
fisttpl
aas
sub
in
hlt
mov
and
mov
loopne
jae
mov
lods
leave
rcrl
push
inc
or
les
inc
test
mov
dec
and
inc
cmp
inc
cmp
inc
cmpsl
lret
call
add
xchg
fldl
inc
loopne
andl
in
push
mov
fcomps
call
add
test
fwait
xchg
rol
xor
add
dec
andl
jno
addb
and
int
es
pop
lds
les
mov
push
add
ret
mov
mov
pushf
jo
mov
mov
mov
pop
push
cwtl
cmp
push
inc
pop
add
lds
ffree
mov
or
ret
orl
pop
xchg
add
addb
leave
add
fdivs
sub
loop
jecxz
js
test
add
jns
and
das
es
movsl
dec
inc
fcomps
enter
adc
nop
loopne
lret
mov
sub
movl
into
add
jb
test
movsb
jl
adcl
inc
rclb
addb
dec
xchg
loop
xchg
and
sbb
push
or
xchg
mov
fstl
lock
mov
dec
scas
stc
pop
adcb
cmp
add
test
loop
jo
add
dec
shrl
sbb
gs
cwtl
loope
int
inc
xchg
bound
shlb
shlb
push
adc
push
in
jne
roll
adc
stc
jg
or
out
mov
idivb
cmp
jno
push
data16
jg
iret
jae
jnp
fimull
add
in
jo
xor
inc
rorb
enter
fstpl
sub
sub
pop
lcall
jns
jae
addr16
lret
std
sub
in
pop
dec
repz
jmp
jne
jl
cmpsl
in
fstpl
xchg
add
leave
push
and
dec
gs
lret
ret
call
imul
mov
jge
rcll
jns
stc
fadds
outsb
jl
clc
sahf
ljmp
insb
pop
add
add
nop
mov
sbbb
pop
push
loope
cmpb
lods
in
and
mov
fdivl
lock
cmp
dec
sbb
aam
push
shll
shr
negb
gs
or
pusha
in
int3
sub
shrl
add
rol
gs
inc
mov
fistpll
popa
xor
out
rcrb
test
cmc
in
movsb
lock
jg
and
push
adc
movsb
xchg
adc
sbb
inc
dec
sub
inc
jae
ret
inc
cmc
xchg
cbtw
push
shr
ja
out
andb
in
icebp
jge
jno
orl
cmp
rolb
pusha
lret
mov
pop
lahf
movb
pop
mov
rorl
jmp
outsl
test
sti
testl
in
pop
mov
pop
sbb
mov
and
sbb
or
loopne
or
gs
push
loopne
fs
lds
push
js
fdivr
adc
repnz
cld
insb
call
mov
pop
mov
fbld
pop
stos
nop
add
xor
xchg
loope
mov
fucom
xchg
shrl
inc
call
xorb
jbe
aad
out
add
jl
outsl
std
cmp
loopne
idivl
xlat
movsb
push
inc
ss
leave
and
inc
push
mov
push
xchg
loope
lea
dec
test
sbb
sub
add
dec
inc
mov
call
cld
xorb
sti
in
cmc
xlat
xchg
divl
dec
mov
jp
and
mov
shlb
mov
sbb
enter
leave
push
mov
push
mov
inc
mov
cmp
out
ret
add
jle
outsb
jg
fprem
jo
and
cmc
shl
loop
xor
adc
inc
sbb
push
cltd
mov
xchg
push
popa
lret
or
int
and
cmp
lds
out
loopne
nop
sub
cli
icebp
addr16
cmc
imul
ja
shl
stc
jo
jae
in
jno
shll
jb
mov
pop
scas
insb
pop
add
sarb
dec
xchg
xchg
loopne
bound
adc
les
ret
cmpsb
clc
mov
insl
pusha
loope
pop
ret
inc
mov
int3
lock
add
nop
sarb
arpl
xchg
jno
mov
stos
imul
popa
push
pushf
mov
adc
or
inc
sub
cmp
movl
int3
inc
ror
mov
cmpb
adc
addb
outsl
rolb
jmp
rcrb
arpl
adc
stos
scas
adc
inc
and
icebp
cmp
mov
arpl
icebp
and
je
rol
mov
loopne
es
lret
jecxz
icebp
xchg
and
xor
jne
int
into
dec
sbbb
fdivs
push
test
jae
lds
and
push
inc
xor
add
shrb
shll
dec
add
pusha
push
and
mov
inc
aas
cs
sub
cld
rorl
outsb
in
icebp
cs
shrb
lods
cs
jmp
test
aad
xchg
add
mov
cmpb
mov
cmpl
loopne
xlat
xor
pop
inc
sbb
pop
adc
mov
xlat
es
mov
int3
push
mov
mov
fimull
pop
xor
sbb
pusha
test
pop
xchg
xchg
pop
test
repnz
push
ret
ror
mov
fadds
fldt
test
cwtl
adc
xorl
into
pushf
cltd
movsl
int
and
add
das
leave
mov
rcr
sbb
mov
repz
test
mov
sub
imul
cmp
xchg
mov
fcompl
dec
shlb
or
lret
mov
and
test
enter
lret
inc
shlb
fadd
mov
fimuls
xchg
mov
lret
rorl
dec
lock
pop
xchg
inc
fmuls
push
popa
popa
lahf
loop
mov
loope
adcl
addl
adc
xchg
or
popa
pushf
xchg
loope
int3
pop
sbb
mov
clc
loop
test
les
add
les
enter
push
addl
or
mov
push
stc
mov
test
subb
in
xor
nop
insb
fmuls
fisubl
out
pop
add
bound
xchg
arpl
out
out
lcall
enter
int3
out
mov
out
sbb
mov
movsb
push
lret
movsb
pushf
loope
inc
fisubrl
cltd
mov
scas
mov
add
rolb
xchg
lock
pushf
repnz
loop
mov
inc
mov
lock
fsubrp
arpl
repnz
and
aam
sub
push
and
pop
mov
insb
flds
and
adc
sbb
sbb
out
scas
sbb
dec
call
adc
jecxz
sbb
and
mov
push
int3
cmp
dec
int
clc
push
cs
sub
arpl
cld
xor
aam
int
out
fdivs
cld
icebp
mov
das
dec
mov
ljmp
mov
mov
mov
sub
push
ljmp
xchg
in
rorb
lock
xor
inc
mov
xchg
out
bound
inc
aaa
imul
loopne
clc
repnz
popa
fdivrs
clc
mov
jae
xchg
in
lahf
xchg
in
mov
shlb
test
push
lock
adc
out
test
stc
jno
push
mov
jbe
loope
js
dec
jne
clc
or
dec
ja
ret
inc
test
imul
dec
js
iret
pushf
jbe
adc
mov
jo
push
clc
jmp
push
cwtl
nop
push
jns
lock
dec
addb
pop
dec
lock
loopne
jnp
jae
arpl
jbe
data16
cld
call
bound
jns
loopne
jge
jns
repnz
cli
add
push
xchg
pop
incl
adcl
mov
or
xchg
pop
xchg
xchg
add
orl
xor
adcl
and
ret
sarl
ret
xorl
adc
ret
fisubs
sbb
add
add
pop
pop
loop
shll
mov
or
roll
roll
mov
or
cmp
je
movsb
mov
pop
fildll
sahf
mov
sub
pushf
add
sarb
cmpsb
mov
int
in
shl
arpl
add
xor
xlat
mov
jns
sub
lock
hlt
xor
or
sbb
cmp
enter
in
ds
test
inc
cli
sarb
rcrb
xor
xor
leave
into
inc
aas
xchg
sahf
push
icebp
test
mov
adc
into
push
aad
jecxz
adc
test
in
je
arpl
mov
push
push
fmul
push
sbb
mov
xor
push
pushf
mov
mov
mov
xchg
inc
into
aad
mov
push
nop
test
aas
jns
jg
mov
fsubl
lock
movsb
xchg
dec
push
popa
lahf
out
pop
jecxz
or
nop
lret
lds
adc
leave
push
lahf
sbb
or
add
inc
cmp
cmpsl
mov
dec
fsubs
lahf
out
jb
mov
lock
sarb
cmp
stos
xchg
or
inc
pop
call
out
fidivrs
dec
or
push
dec
dec
les
and
add
ja
arpl
fidivrs
dec
data16
into
adcl
outsl
jbe
clc
jnp
jmp
in
adc
enter
stos
or
add
loopne
fldcw
add
jns
std
js
and
pop
mov
and
int3
mov
jle
je
xorb
lods
popa
lods
sub
mov
jbe
mov
std
jle
repnz
jg
lock
imul
or
mov
jge
push
subb
pop
push
lret
subb
mov
push
mulb
jbe
mov
shll
out
rclb
xor
xchg
mov
mov
div
mov
insl
call
subb
or
sbb
jb
out
outsb
call
sub
and
in
outsb
xchg
call
and
push
adc
fwait
inc
sbb
shll
fcoms
lahf
cmp
xor
mov
adcb
dec
dec
inc
inc
push
adc
push
or
rolb
mov
lahf
push
lcall
pop
imul
nop
and
cltd
adc
test
xchg
add
addl
jno
imul
dec
sub
inc
popa
or
gs
insl
inc
add
add
clc
lock
fcmovnbe
mov
add
or
ret
or
inc
add
popa
enter
xchg
pop
into
jns
sbb
sahf
in
inc
xchg
les
pop
dec
movb
popa
inc
and
or
dec
rclb
aam
pop
adc
mov
lahf
mov
cmp
shr
sbb
add
fiadds
loop
add
add
cmpsl
rorl
int
ja
mov
jns
push
pop
sar
jmp
inc
faddl
xchg
sbb
loopne
and
dec
xorb
repz
or
cmpsl
data16
and
sar
pop
test
fcmovb
add
adc
pusha
loopne
out
add
inc
push
bound
arpl
dec
int
jmp
out
mov
and
nop
in
pop
call
mov
rolb
les
inc
add
pop
mov
subl
mov
dec
nop
out
ljmp
cmp
sar
add
in
add
cmpsl
jecxz
inc
and
mov
mov
mov
pop
dec
or
inc
xchg
push
pop
lds
enter
mov
push
adc
push
in
pop
jno
xchg
mov
adc
movsb
jp
mov
xchg
xlat
push
stc
add
dec
mov
call
ds
push
negb
inc
mov
cmp
ficomps
addb
sbb
insb
fsubs
ret
add
lret
adc
push
push
clc
in
rorb
bound
dec
subb
arpl
nop
add
rorl
adc
add
dec
in
or
push
lret
push
out
fidivl
shll
out
mov
adc
jbe
lods
push
pop
xor
xchg
rcr
loop
cltd
fs
dec
add
push
in
mov
add
mov
add
repz
jb
push
cmc
or
push
inc
adc
aad
insb
pop
sti
lcall
push
ja
or
push
gs
or
out
xchg
add
mul
jno
add
arpl
sarb
andb
out
movsb
call
push
nop
addr16
push
stos
pop
add
jae
fcom
decl
jg
es
jb
jge
and
fldcw
push
sar
icebp
in
test
add
arpl
xchg
mov
pop
inc
push
mov
push
sub
fsubrs
lcall
sub
enter
push
lret
xor
hlt
jo
add
jp,pn
shr
adc
pop
xor
xorl
outsl
fcmovu
dec
sbb
loope
stos
xor
jno
sub
sbbb
fldt
loope
into
jo
add
xchg
push
fiaddl
popa
adc
out
shlb
and
insb
xchg
andb
mov
inc
je
subb
out
pop
subl
fimull
inc
bound
sub
orl
pop
inc
repnz
push
test
out
cs
or
and
xchg
mov
push
cld
inc
xor
add
and
shlb
aam
push
mov
int3
arpl
fsubs
fnsave
in
scas
fldl
adc
icebp
loopne
repz
loope
sbb
repnz
jmp
bound
xchg
in
or
jecxz
addl
gs
roll
push
jecxz
dec
inc
enter
or
cmp
fimuls
mov
shl
lock
out
jl
jns
dec
rolb
ljmp
shll
clc
xor
dec
dec
inc
fs
in
dec
add
jmp
pop
frstor
ret
bound
imul
xchg
dec
sub
sub
fisttpll
jbe
mov
add
gs
stos
rorb
inc
add
push
mov
shlb
dec
test
pop
popa
lock
xorb
jb
inc
repz
dec
orl
sub
push
jmp
imul
data16
cmpsb
mov
and
sbb
dec
push
fst
add
mov
pusha
inc
mov
test
mov
mov
mov
loop
fidivrs
add
rcl
cmpb
movsb
insl
add
test
sub
push
es
orl
jbe
andb
mov
jge
add
jb
sub
mov
push
fstl
sarb
cld
addl
addb
popa
mov
outsl
ficoms
sbb
mov
jne
popa
fs
iret
sbb
or
inc
lahf
adc
inc
add
push
xor
mov
gs
loopne
jns
in
arpl
jno
out
jge
or
push
mov
jle
add
loopne
sub
and
jp
cmpsl
call
xchg
xchg
loopne
enter
or
orb
fstps
jo
mov
aam
outsb
pusha
add
ljmp
clc
test
ss
ret
or
loop
pop
repz
jmp
mov
fwait
inc
pop
add
dec
push
leave
adc
pop
ret
icebp
in
mov
mov
bnd
maskmovq
divl
in
cld
lret
push
jbe
in
iret
push
push
xchg
es
outsb
loope
aaa
inc
adc
stos
rcrb
push
mov
dec
mov
ret
mov
shrb
pop
nop
outsl
push
jns
pop
cmpb
cld
jbe
out
jge
sti
mov
pop
jns
mov
stos
jnp
mov
mov
lcall
orb
push
clc
in
dec
inc
daa
nop
fisttps
mov
andb
inc
jge
rcr
push
and
rolb
adc
out
std
clc
add
xchg
negl
movsl
out
loope
mov
cmp
outsb
sub
pop
xchg
mov
das
in
lods
jb
fstl
loop
popf
cmpsl
dec
inc
iret
test
repnz
pop
or
push
mov
enter
push
clc
insb
pop
cli
jo
pop
dec
ret
andl
fcomi
lock
clc
insl
dec
sbb
imul
mov
pop
mov
lods
pop
es
hlt
mov
inc
into
hlt
and
fsubrp
es
lock
xlat
rorb
inc
jns
movl
xor
ret
adc
cmp
pop
mov
pop
mov
push
mov
xchg
sub
pop
and
pop
popf
mov
jno
push
or
jb
movsl
bound
cmp
add
popf
mov
mov
inc
adc
int
loop
adc
mov
movsl
into
sub
lds
sub
icebp
or
cmp
mov
mov
mov
pop
pop
pop
add
sub
data16
in
xchg
adc
dec
loope
mov
aas
xor
out
scas
push
or
ss
sub
or
add
dec
inc
push
mov
push
shl
sbb
pop
dec
add
inc
loop
jb
aas
cmp
or
mov
mov
shrl
add
leave
lahf
or
mov
adc
cmp
or
mov
inc
repnz
dec
push
sbbl
arpl
aas
pop
mov
fiadds
mov
lds
sub
movsl
clc
nop
jno
loop
inc
testb
cmc
adc
dec
in
add
int
fs
movsb
popa
call
add
add
les
add
popf
clc
leave
add
jbe
lds
fnsave
in
sbb
dec
fs
loopne
ljmp
std
andl
in
push
test
nop
xadd
or
pop
inc
fimuls
pop
les
data16
jae
jle
cld
jge
jg
nop
enter
out
add
cmp
insl
push
test
xor
or
lock
mov
fs
shll
test
jo
enter
ret
data16
sbbl
or
add
addl
enter
adcl
andb
movsb
shr
out
mov
jb
repnz
mov
insb
add
sbb
cmp
sti
stos
cmpsl
mov
push
cmpsb
or
add
cmpl
add
lock
shl
inc
out
ljmp
add
mov
in
adc
mov
xchg
pop
pop
mov
pop
in
lds
aaa
add
cmp
jle
mov
inc
test
xchg
enter
nop
enter
inc
cmp
cltd
push
lock
xor
test
sbb
filds
mov
add
push
push
int3
mov
ffree
shll
push
icebp
stos
rcrb
test
lahf
movsl
ret
enter
jb
repnz
daa
test
nop
insb
fcoms
bound
cld
sarl
mov
cli
in
add
xorl
xchg
sbb
dec
imul
aam
xor
int
jecxz
cld
fidivrl
mov
adc
bswap
sbb
xchg
push
adc
fdivp
aam
mov
push
pusha
cld
je
test
out
insb
bound
loop
sahf
xor
pop
and
or
test
xchg
pop
out
fs
enter
test
jge
adc
adc
imul
or
or
bnd
repnz
mov
aad
cld
insl
aad
inc
out
gs
fbld
lock
ret
xchg
fbstp
xchg
mov
push
cmp
push
or
int3
std
sbb
mov
inc
ja
bound
addr16
nop
jae
call
std
aam
mov
rcr
enter
ss
jb
repnz
lods
xchg
fidivrl
fisubrl
popa
add
addb
aam
cmpb
add
xchg
inc
mov
sbb
push
pop
add
pop
dec
jno
pop
or
stos
mov
in
shll
movsl
inc
or
test
shlb
sub
push
mov
push
jg
mov
adc
nop
gs
in
dec
mov
pop
xorl
in
xchg
cmp
imul
add
flds
fidivs
jge
adc
cwtl
adc
xor
adc
sub
sub
pop
sahf
jg
adc
and
andb
enter
pop
xchg
outsb
xchg
adc
mov
loope
push
mov
dec
add
lock
inc
cmpsb
inc
lods
daa
jge
adc
test
pop
enter
jae
sub
xchg
adc
push
adc
lea
push
loop
push
add
mov
xchg
mov
sbb
push
mov
stos
dec
xchg
leave
pop
or
stos
aaa
lahf
movsl
fs
lods
cmp
lock
mov
jae
mov
mov
mov
aas
inc
dec
dec
mov
stos
rclb
sar
jmp
test
cwtl
stos
ret
cwtl
xchg
addr16
lods
mov
push
cld
stos
lds
adc
xor
repnz
dec
mov
repnz
aam
dec
lods
test
stos
dec
adc
lods
stos
into
and
fs
jnp
test
adc
das
sbbl
dec
in
lock
add
or
and
pop
jl
aad
pusha
inc
repnz
mov
pop
pop
stc
stos
fcomps
xchg
mov
test
add
adc
fmull
xchg
test
pushf
out
test
pusha
jge
adc
or
es
xchg
test
arpl
pop
movsb
les
dec
nop
or
shl
imull
pop
hlt
ss
bound
fildl
lods
imul
adc
jae
insl
xor
outsb
lahf
xchg
cwtl
ror
cmpsb
test
and
dec
inc
jno
stos
stos
jb
clc
and
inc
sub
rolb
inc
cmc
add
imul
adc
xor
clc
mov
xchg
adc
cld
xchg
in
insl
ljmp
mov
inc
jg
lods
cld
and
fimuls
or
jno
cld
mov
xchg
mov
fiadds
les
andb
or
adc
cmc
adc
pop
lods
jge
movsl
jecxz
test
cmpsl
gs
lods
mov
cmpsl
dec
dec
stc
jno
stc
scas
mov
shlb
xor
sub
pop
incb
call
xchg
shlb
push
mov
jno
jmp
inc
xchg
gs
cwtl
sbb
rcr
in
stos
sbb
mov
lahf
xchg
lods
lcall
xchg
lods
mov
stos
mov
mov
sbb
adcb
shlb
jns
adc
fsubrl
and
xchg
das
mov
fcoms
rcrb
subb
arpl
mov
rclb
pushf
mov
rol
insb
fmuls
rclb
adc
adc
jb
movsl
gs
les
or
fstp
and
rolb
inc
stc
scas
rcrl
sbbl
sbb
shl
clc
gs
loop
dec
mov
jno
stc
scas
leave
lahf
es
lock
dec
mov
lds
lods
int3
jge
adc
cmp
xor
movsb
sub
test
jge
adc
cltd
test
scas
rcll
shlb
les
ds
mov
mov
mov
jg
movsl
xlat
and
leave
ret
xlat
or
test
scas
pop
lahf
xchg
mov
push
xor
fdivrl
mov
loopne
fidivrs
add
loope
stos
loopne
es
popa
gs
test
mov
or
test
add
xchg
adc
popa
add
adc
loope
movsl
les
add
or
leave
jno
stc
scas
jmp
es
insb
arpl
rcl
insl
scas
fisubrl
push
adc
loope
sub
adc
adc
pushf
test
and
dec
rorb
ffree
cmpsl
fcmovnb
out
add
mov
testl
aad
push
xor
add
adc
repnz
lods
inc
mov
xor
xor
or
mov
add
fiadds
mov
jg
hlt
sub
and
int3
push
push
inc
mov
test
jns
mov
scas
or
cld
mov
jo
mov
adc
sarl
mov
add
nop
xchg
xchg
xorb
mov
clc
sti
dec
inc
sbb
daa
jne
sbb
sbb
cmp
mov
jno
stc
scas
push
adc
pushf
pop
dec
mov
cld
pusha
leave
insl
or
mov
mov
or
gs
jno
test
dec
inc
stos
mov
loope
cmp
add
test
scas
xchg
mov
xchg
int3
sti
popl
push
push
inc
ret
adc
daa
ljmp
inc
scas
repnz
stc
dec
mov
scas
adc
xchg
bsf
cmp
cwtl
dec
cld
push
sbb
mov
test
xor
and
addb
hlt
aam
pop
mov
out
outsl
pushf
fdivs
xchg
arpl
test
adc
sub
cwtl
adc
cmp
xor
nop
dec
add
mov
imul
outsb
adc
in
add
dec
push
clc
in
xor
test
movsl
inc
push
add
add
pop
loope
fdivl
mov
es
cmpsb
arpl
movl
lret
out
xorb
jnp
xchg
out
call
test
les
dec
jp
add
xchg
les
adc
jecxz
add
gs
loop
hlt
out
xchg
push
dec
pop
call
add
push
xchg
xor
les
test
mov
jge
sbb
lcall
bound
jecxz
stc
mov
test
mov
push
inc
or
icebp
mov
mov
pop
cli
shl
push
mov
fdivs
inc
push
ret
jge
hlt
mov
dec
mov
ret
inc
loop
dec
in
loopne
addr16
aam
push
mov
pop
or
repz
test
or
mov
fsubr
xchg
push
fdivr
cmpsl
test
cli
jmp
dec
pop
repz
test
jne
enter
out
loopne
push
mov
enter
inc
mov
cmc
fs
sbb
cld
jne
arpl
in
aad
dec
fsubrp
faddl
test
jne
jge
and
pop
test
nopl
arpl
mov
add
jne
mov
adc
and
xchg
push
daa
lods
stc
mov
lock
jb
add
addl
test
push
test
sahf
add
xchg
adcl
cmp
loopne
mov
push
flds
ja
jecxz
jns
rol
sbb
outsl
mov
sti
out
enter
loope
decb
lret
aad
mov
pushf
repz
mov
add
mov
movsb
fisubrs
mov
adc
loopne
inc
repnz
jecxz
popf
xchg
call
ficoms
popa
out
mov
lds
xchg
stos
stos
add
xchg
cmpsb
xchg
jg
sub
ret
xor
mov
inc
daa
xchg
pop
lods
mov
fucom
adc
int3
add
mov
mov
out
in
mov
jb
filds
lahf
mov
nop
stc
jmp
jnp
lahf
jl
or
cld
repnz
xlat
and
mov
pop
fcmovb
nop
int3
rcrb
lret
movsl
loop
xchg
orb
or
icebp
cmpsb
mov
call
in
test
sbbl
aam
mov
loopne
rcr
imul
outsb
pop
xorl
gs
xchg
ret
adc
stos
inc
jle
jns
imul
mov
nop
test
cmpsb
rorb
mov
mov
lds
lcall
xchg
test
mov
jecxz
push
and
ljmp
fldl
fwait
ret
ror
cld
hlt
cld
mov
sbb
and
dec
clc
add
mov
push
rolb
notb
sarb
mov
and
mov
mov
loopne
clc
cli
mov
add
loop
mov
lods
subl
inc
sahf
out
and
imul
ret
mulb
js
sub
insb
test
mov
mov
mov
ficoml
adc
mov
inc
ror
add
mov
test
in
xchg
dec
lea
xor
or
lock
xchg
sub
push
xchg
dec
add
arpl
lret
sub
adc
loop
test
xchg
loope
nop
imul
adc
movsl
sti
jno
lret
push
or
xchg
cwtl
add
xchg
test
pop
test
xor
ficompl
lock
test
jb
jae
add
popa
rorb
inc
in
lcall
fs
xor
arpl
add
add
imul
mov
das
mov
ljmp
jbe
in
sub
or
bound
xchg
scas
gs
xchg
mov
mov
rcrb
cli
std
pushf
lods
and
push
test
and
out
adc
mov
addr16
mov
in
fisttpl
push
aam
das
adc
or
or
mov
insl
int3
ss
mov
in
jecxz
test
movsb
js
stos
insl
push
hlt
movsl
loopne
scas
fcoms
scas
sbb
out
xchg
xchg
mov
fsubl
mov
mov
rol
mov
pop
mov
pop
xchg
cwtl
addr16
mov
lcall
cld
jbe
sub
and
std
jnp
lods
mov
loopne
aam
or
repz
je
mov
nop
out
jo
jg
ret
xchg
lcall
sbb
nop
and
pop
mov
sub
cmpsl
inc
lcall
es
loopne
xchg
imul
mov
xchg
xchg
insl
mov
inc
mov
mov
jo
add
mov
int3
push
xchg
lods
arpl
pop
insl
into
mov
fiadds
add
mov
scas
rclb
and
movsb
aad
mov
mov
push
mov
shll
pop
pop
mov
hlt
shlb
push
loopne
jp
movsb
std
fsub
mov
mov
mov
push
sub
jns
out
fimull
outsl
call
or
lcall
inc
adc
mov
push
dec
push
lcall
mov
movsl
push
sbb
lret
mov
aad
or
out
cmpsl
leave
mov
mov
in
ret
xchg
in
test
lret
lock
aad
imul
loopne
out
ror
cmp
mov
push
stos
jnp
enter
xchg
loope
cwtl
cmpsl
lds
jne
mov
add
lcall
mov
xor
int3
test
sar
loope
mov
test
int3
fsubrs
adc
or
xor
dec
mov
sbb
out
xchg
mov
jecxz
add
mov
addb
test
mov
lcall
cmp
jge
or
fcoms
enter
dec
mov
mov
loopne
cmpsb
cld
inc
adc
loope
fwait
cli
mov
xchg
in
or
lock
cmp
in
shl
pop
or
inc
call
sub
incl
in
push
out
ja
ljmp
out
fimull
clc
cmpb
int3
ds
xchg
mov
in
lret
inc
fwait
adc
inc
repnz
ret
ficoml
push
subl
lods
mov
lea
andb
pushf
cmpb
hlt
dec
inc
in
sahf
mov
dec
jne
mov
gs
mov
clc
pop
hlt
mov
mov
ficoms
hlt
mov
or
fnstenv
add
loopne
test
jno
jg
test
push
in
stos
sub
loopne
es
or
loopne
pop
into
mov
push
loope
rolb
insl
rcrb
leave
test
xchg
clc
cs
jg
xchg
mov
or
je
fstps
stos
movsb
add
mov
fs
jp
xchg
mov
pushf
or
lcall
adc
sub
addl
add
andl
mov
fs
dec
ror
add
divb
out
pop
lret
popa
shll
cmpsb
push
push
in
and
in
push
ds
movsb
fwait
xchg
mov
xchg
jl
mov
enter
ljmp
fmuls
mov
cwtl
repnz
mov
loopne
pop
pusha
or
mov
add
pusha
loope
inc
loop
sbb
rcrb
mov
movsb
in
stos
mov
inc
fadds
or
jmp
mov
jne
movsl
xchg
mov
movsb
xchg
cmpsb
call
pop
scas
in
and
sub
hlt
xchg
test
cmpsl
movsb
sub
fucomi
xchg
mov
sbb
adc
fildll
pop
inc
subb
push
imul
inc
fsub
clc
lds
push
filds
add
call
idivb
andb
dec
nop
cld
lods
cmpsb
rcrb
jns
mov
inc
sub
or
movsb
and
ret
xlat
push
subb
aam
movsl
out
arpl
mov
sbb
add
sbb
mov
pop
mov
loopne
inc
outsb
lods
add
test
rorb
mov
xchg
leave
aam
cwtl
jbe
lcall
ficoms
ficompl
pop
mov
imul
mov
mov
outsl
push
mov
mov
in
pop
mov
push
pusha
dec
stos
mov
gs
les
int3
stc
mov
test
mov
xlat
loopne
mov
stc
mov
shl
leave
loopne
testb
ror
dec
cli
dec
leave
jno
xchg
push
cmpb
cli
hlt
pcmpgtb
hlt
lcall
pushf
and
xor
mov
loopne
mov
fst
xchg
mov
mov
loopne
mov
or
xor
jge
sbb
loop
mov
add
and
lds
jno
xchg
xor
pop
clc
push
leave
sarb
mov
pushf
inc
sar
fimull
jp
movsl
aam
xor
sahf
js
lods
scas
in
test
add
lcall
cmpsb
jo
xchg
xor
adc
jmp
or
out
add
lods
mov
jecxz
arpl
loope
int
xor
loopne
xor
imul
inc
icebp
jbe
lret
divb
frstor
in
xor
std
hlt
xor
stc
mov
cld
ja
cwtl
jp
addr16
loopne
pop
xor
cmp
test
lock
outsl
xchg
pop
subl
aad
shll
bound
sbb
loop
loopne
xchg
ffree
xor
and
jle
pop
jmp
loop
daa
mov
xchg
fcom
cmpsb
js
add
lcall
xchg
in
jns
jg
cmpsb
leave
in
mov
jmp
shl
cwtl
loopne
outsl
movsl
pop
fldcw
xchg
out
shlb
add
adc
push
les
adcb
mov
loop
test
xor
out
shr
je
loopne
mov
movsb
sahf
push
data16
lahf
add
mov
ficoml
jmp
adc
stos
pusha
loopne
jo
loop
xchg
leave
mov
loopne
adc
fcomp
xchg
adc
sub
test
mov
insl
clc
sub
dec
mov
movsb
enter
jmp
sti
jb
out
out
xchg
hlt
incb
mov
sti
cmpsb
testb
add
ret
cld
cmpsb
lods
inc
mov
loopne
loopne
in
xchg
es
sbbb
or
pusha
lret
stos
mov
andb
shr
ret
das
sahf
testb
gs
mov
pop
mov
cld
push
subb
cwtl
test
pop
ror
es
out
lods
cld
nop
movsl
pop
movsl
fld
or
ficoms
movb
loop
loop
in
call
repnz
mov
cld
popf
adc
push
sub
jmp
loopne
enter
xchg
iret
aam
fcoms
sbb
jbe
rclb
and
mov
loop
repnz
gs
call
aam
dec
mov
int3
adcl
test
cmp
movsl
mov
aam
xor
lock
loopne
push
inc
ljmp
leave
fisubrs
loopne
mov
addl
dec
mov
rolb
sbb
int3
mov
sbbb
pop
xchg
mov
jge
fcmovbe
enter
imul
ljmp
rclb
mov
mov
jno
loope
outsb
idivl
xchg
sahf
xor
sbb
mov
out
lret
loope
jnp
in
xor
test
push
add
lret
imul
push
in
xlat
dec
jno
fsubrl
arpl
hlt
add
ljmp
sub
lods
fcmove
fisubs
sahf
repnz
outsl
popf
loop
fnstcw
dec
decb
xchg
jge
lds
lret
pop
pop
inc
ljmp
lock
ret
lods
in
pop
pop
pusha
rcll
icebp
cmpb
adc
out
jno
jns
jp
out
push
xchg
jns
ficoms
js
dec
xor
xchg
mov
pusha
cld
mov
out
mov
xchg
fcomps
out
fists
cmp
mov
adc
pop
mov
add
pop
sbbb
les
js
and
call
aam
es
stc
test
push
fmull
fimuls
sbb
hlt
addr16
mov
cld
mov
mov
xorb
or
xchg
sbb
mov
adc
into
mov
rcll
enter
jns
loop
cmc
lcall
jmp
ja
pop
adc
test
faddp
hlt
in
fs
mov
xor
insb
test
imul
mov
data16
leave
mov
mov
fidivs
vmovdqu
jne
mov
sub
aam
rolb
andb
test
xchg
mov
loope
jae
das
leave
movsb
in
lret
pushf
push
mov
xchg
movsl
imul
or
rcr
and
lods
mov
dec
and
inc
xchg
mov
roll
je
fcoml
clc
mov
ret
xor
or
lahf
jmp
mov
in
push
arpl
ljmp
or
mov
mov
sub
or
rcrb
jle
hlt
mov
aam
cmp
shlb
leave
push
mov
lods
xchg
insb
fsqrt
adc
xchg
jns
xchg
fsubrs
mov
adc
mov
in
mov
scas
in
cmp
popf
mov
dec
gs
movsl
xor
mov
insb
add
pop
ficoms
cli
mov
sbb
jl
adc
lret
fidivrs
jmp
pushf
add
and
aad
sbb
sub
fsin
lods
shlb
xchg
andb
push
or
lret
adcb
jecxz
fistl
bound
lret
das
or
ja
clc
testb
and
shll
popa
les
loopne
pop
and
hlt
imul
out
add
push
insb
mov
into
sarb
cld
test
loop
fistps
test
test
mov
xchg
lock
rolb
jmp
xchg
and
or
add
mov
les
std
cmp
xchg
dec
imul
adc
lock
into
test
or
hlt
cld
test
sahf
sbb
pop
xor
lods
lret
cmp
mov
xchg
clc
popa
pop
mov
jmp
lea
sbb
mov
pop
sub
cmpl
mov
lea
add
mov
and
xlat
and
aaa
mov
cltd
out
int3
rolb
or
test
dec
test
sbb
test
mov
fdivs
xor
add
lea
inc
cli
psubq
jle
cwtl
lret
pop
mov
aas
ret
xchg
mov
loope
mov
jno
mov
loop
cltd
adc
mov
fst
lea
jbe
rolb
imul
sbbl
out
xor
xchg
enter
push
xchg
or
xchg
mov
mov
mov
orb
je
or
cltd
mov
add
sbb
add
aaa
or
cmpsb
add
test
or
ljmp
out
arpl
sti
test
mov
adc
les
scas
push
in
cmp
xchg
xor
adc
enter
bswap
add
xchg
add
sbb
push
rcl
jle
cltd
push
aam
out
rolb
arpl
add
add
enter
movsl
lds
test
fdivp
nop
movntq
out
cwtl
cwtl
mov
fnstcw
pop
mov
bound
fucomi
gs
hlt
jmp
pop
loop
mov
mov
adc
sbb
test
test
rolb
sbb
cwtl
addl
cltd
mov
hlt
mov
xchg
imul
movsl
pop
mov
pop
jmp
push
mov
out
shlb
dec
in
popa
xchg
push
or
cmp
xchg
adc
mov
and
sbb
mov
xchg
icebp
add
bound
shll
test
loopne
add
rcl
in
jno
ljmp
repnz
cld
faddl
sbb
adc
pop
mov
cmp
push
sbb
movsb
mov
subl
pop
nop
sbb
or
mov
nop
mov
jno
test
inc
jb
adcb
mov
and
mov
sbbl
mov
nop
icebp
js
jecxz
faddl
mov
test
mov
inc
cli
adc
sbb
mov
inc
inc
out
sbbl
test
incl
lret
nop
cmp
test
enter
sub
pop
mov
nop
cmp
test
cld
mov
nop
pop
mov
test
jb
mov
and
mov
insb
movsl
pop
ljmp
movsb
inc
adc
stos
mov
xorl
pushf
mov
test
dec
nop
cmp
sub
insb
out
nop
mov
xorl
stos
jno
xchg
in
mov
andl
test
mov
nop
leave
mov
xorl
mov
addb
clc
cmp
nop
rol
jp
inc
push
cmc
add
stos
test
or
jge
or
xchg
and
pusha
arpl
popa
inc
icebp
enter
rclb
mov
or
inc
mov
mov
in
cmp
fnstsw
icebp
in
das
mov
pusha
shl
pop
jle
add
push
loopne
ja
fdivrs
cmpsb
int
xor
lcall
fwait
cmp
cli
addb
inc
lea
push
cmpsl
jb
and
adc
cmc
and
and
outsl
in
sub
subb
jbe
add
mov
lret
imul
ja
mov
push
sti
pop
subb
dec
imul
add
add
jno
add
fdivl
xchg
enter
or
fimuls
cli
movsb
test
andb
add
loopne
push
add
test
add
push
cmp
ret
movsb
xchg
cltd
or
orb
lock
jns
test
or
inc
fwait
sub
subb
push
mov
gs
adc
inc
mov
notb
add
insb
pop
out
lds
sub
repz
or
cs
mov
es
pop
das
pop
add
lock
outsb
fstpt
pop
mov
xchg
and
sub
pop
decb
cmp
loop
insl
xlat
dec
xchg
int3
clts
xchg
push
pop
pop
shl
sbb
sbbb
mov
test
or
ret
sbbb
addr16
cmp
das
rclb
mov
mov
jnp
sti
lcall
xor
nop
xor
andb
and
sbb
scas
sbb
push
add
pop
pop
cli
mov
je
dec
sbb
pop
jno
ljmp
arpl
jmp
pop
insl
insb
jl
aaa
push
sbb
outsl
sub
nop
or
testl
ret
xchg
fdivp
clc
mov
pusha
out
xor
cltd
scas
sbb
mov
xchg
lcall
xchg
clc
lock
sbb
test
xor
or
and
test
pop
jb
test
xchg
je
andb
rorb
insl
mov
jecxz
shr
add
or
test
xchg
dec
stc
inc
lock
jno
adc
and
dec
fwait
push
addl
loopne
pushf
or
xor
inc
lahf
loope
mov
cmp
xor
ret
and
cmpsb
sti
test
fiaddl
stc
pusha
aad
pop
bound
or
in
push
pop
out
and
xchg
cmp
jl
push
adc
mov
or
jg
or
xor
out
cmpsb
int
data16
arpl
test
std
loope
jbe
ffree
add
cmp
call
roll
and
sahf
adc
pop
sbb
and
orb
xchg
stos
or
add
movsl
into
movsb
pop
hlt
push
cmp
jl
push
fs
adcl
cmp
sahf
inc
jb
inc
ss
in
dec
jns
loop
out
mov
adc
dec
adc
popf
cmc
xchg
addb
sbb
adcb
cmp
mov
call
orb
fdivs
jmp
mov
push
mov
iret
dec
xchg
mov
adc
pop
xor
shlb
popa
les
mov
ret
add
fmulp
js
cmpb
scas
lods
jp
pusha
orb
jecxz
or
dec
push
inc
fildll
bound
push
or
pop
sbb
mov
addr16
pop
cmpb
inc
jbe
test
in
inc
inc
adc
mov
insl
fidivs
arpl
sbbb
and
fnstsw
lock
adc
test
sahf
and
pop
jae
jmp
aas
out
cmp
sbb
repz
push
faddl
xor
push
or
ficoms
dec
fldl
cmp
negb
loopne
push
sahf
add
mov
mov
js
cmp
push
das
mov
fidivrs
cmp
aas
ds
jp
mov
pusha
sarb
or
inc
addb
lcall
pop
jns
loopne
and
push
addb
xor
inc
scas
adc
pop
jp
aam
add
fnstenv
paddw
adc
fstp
or
arpl
movsl
mov
fisttps
aas
clc
mov
mov
movsb
lcall
lret
lcall
add
addr16
fsts
iret
add
std
stos
mov
test
rcrw
gs
ljmp
lds
sub
in
xchg
outsb
cmp
add
inc
push
sub
loopne
mov
movsl
dec
addb
mov
or
push
xchg
nop
shll
jecxz
or
pop
cwtl
repnz
jle
andb
rorl
inc
out
insb
pop
test
dec
adc
mov
cmc
enter
jo
ljmp
nop
jb
add
adc
enter
inc
stc
pop
cmpb
icebp
mov
push
testl
nop
pop
pop
add
insl
test
jge
or
add
adc
cld
pop
adc
pushf
loope
mov
sbb
jns
out
xchg
sbb
in
into
xchg
xor
adc
pusha
aam
arpl
cltd
inc
or
dec
iret
inc
jle
fadds
loope
xchg
xchg
and
sbb
orb
gs
dec
rcrl
mov
mov
sub
mov
mov
or
cmp
fwait
adc
add
lods
addl
setb
add
hlt
enter
jmp
cmpb
les
fmull
imul
add
test
ljmp
mull
mov
xor
push
lods
insl
cmp
jmp
mov
aaa
jp
rcll
add
cmp
jp
push
jbe
bound
loop
pushf
mov
lock
jno
fcomps
sarl
push
in
nop
dec
add
push
aam
pop
pusha
gs
addr16
sahf
mov
outsl
sti
mov
aaa
jmp
and
dec
lock
add
and
andb
jmp
mov
add
rclb
mov
test
sub
or
xchg
pushf
push
xchg
mov
out
out
push
push
xlat
in
out
xchg
fldenv
ret
data16
pop
pop
jb
fstl
cld
mov
xchg
stc
cltd
xchg
xchg
xchg
or
sti
bound
xchg
add
add
or
movsl
jns
movsb
arpl
aad
pop
fistpl
loop
sbb
add
xor
imul
out
imul
xchg
pop
mov
les
in
dec
loopne
mov
dec
scas
push
mov
xchg
xchg
outsb
mov
add
add
push
add
sbbl
mov
int3
pop
xchg
aaa
mov
je
or
or
jp
fwait
mov
pop
xor
sbb
pop
mov
add
add
add
push
add
xchg
dec
lock
addl
in
mov
add
addl
int3
and
mov
lods
andb
fisttpl
aas
fsubl
mov
adc
and
add
cmp
addb
imul
mov
pusha
orb
adc
fwait
sbb
sbb
andb
stos
sub
lods
xor
mov
mov
cmpb
cmp
mov
inc
ret
inc
add
lret
orb
rcll
push
adc
aam
aad
pop
fiaddl
pop
fucom
bound
in
mov
push
subb
in
insl
in
jno
xorb
repz
jne
cmpb
cli
jnp
jl
adc
push
in
dec
in
stc
or
ret
mov
lea
mov
and
addb
or
in
nop
insb
addl
jmp
lcall
in
inc
insl
jns
cs
ficoml
insl
xchg
pushf
in
xchg
xchg
aad
add
jle
daa
jmp
std
cmp
pusha
outsl
sti
outsb
push
push
in
pop
sub
mov
shrb
adc
xor
icebp
jae
inc
mov
cmp
ret
popa
sub
movsb
lahf
imul
push
sub
pop
dec
in
loop
ret
lock
lcall
outsl
ljmp
lock
cmp
cmpsb
stc
hlt
jl
stos
enter
leave
sub
roll
xchg
ficoml
mov
iret
out
clc
inc
adc
rcpps
push
jecxz
outsb
in
mov
pop
xlat
and
sarb
push
xorb
mov
test
into
aad
dec
add
icebp
int
clc
js
or
sub
jae
mov
pop
ret
rclb
jbe
cmpb
mov
xchg
pushf
dec
cmp
adcl
out
adcl
adc
mov
sbb
or
xchg
ljmp
mov
faddl
cmp
scas
and
mov
fimull
mov
mov
dec
icebp
and
mov
push
movsb
cld
adc
daa
push
mov
das
push
adc
inc
push
addb
frstor
loop
fwait
repnz
aaa
mov
cltd
fadd
andb
push
dec
mov
mov
inc
jbe
and
addr16
add
pop
addb
and
mov
adc
decl
ds
mull
mov
adc
orb
adc
inc
subb
cli
push
mov
push
pop
add
and
arpl
out
stos
mov
xchg
mov
jecxz
sbbb
negl
sub
addb
lahf
mov
xchg
or
jmp
lods
dec
cmc
cmp
lea
add
mov
adc
inc
inc
ret
enter
or
xchg
push
mov
fiaddl
rcll
call
pop
pop
out
jmp
jne
cld
fucomip
insl
pusha
aad
mov
pushf
callw
sbb
pop
xchg
addl
bound
test
ljmp
rolb
mov
subb
test
mov
test
aaa
inc
es
xchg
nop
in
mov
es
lret
in
clc
frstor
bound
daa
sub
cmpl
lock
pop
xchg
neg
insl
popf
in
xchg
jmp
enter
jo
cmpsl
pop
pop
popf
roll
add
stc
mov
cltd
daa
or
hlt
pusha
or
jb
xchg
pop
jecxz
add
bound
lock
leave
mov
xchg
and
xchg
out
cltd
mov
or
in
xchg
sbb
lret
fistpl
ljmp
lret
dec
test
push
xor
test
inc
xchg
fisubs
lods
fidivs
add
sub
xchg
nop
push
in
insl
mov
adc
push
mov
cltd
lods
das
test
test
add
pushf
sbb
ljmp
std
add
mov
add
dec
repz
aaa
xor
mov
sub
or
nop
lahf
lods
in
call
mov
loop
mov
test
out
xchg
sbb
arpl
add
popf
cltd
cwtl
sbb
imul
push
xor
movsb
mov
or
xchg
adc
js
fwait
pushf
xchg
add
jns
fstl
mov
xchg
pop
dec
imul
adc
cltd
sbb
loop
loopne
adc
push
push
jns
fdivs
jne
jecxz
sbb
inc
mov
pushf
loopne
ret
push
push
les
adc
and
mov
add
cmpl
sbb
xchg
xchg
xchg
sbb
add
ljmp
xor
xor
popa
add
add
fwait
and
adc
or
sbb
fisubs
pop
cmc
jne
add
xor
in
adc
xchg
mov
pop
cmpsb
test
jne
fisttps
stos
cltd
les
xchg
pop
data16
sub
adc
stos
mov
loopne
call
or
fisubrs
popa
xchg
cmpsb
pop
sbb
cltd
adc
xlat
push
dec
pop
xchg
in
icebp
sbb
bound
pop
jecxz
aam
in
push
scas
xchg
xchg
cmp
ret
test
cld
imul
addl
pop
cmp
lcall
xchg
xchg
lods
popa
aam
add
adc
decb
pop
clc
aam
jmp
push
repnz
add
enter
lcall
mov
stos
push
enter
adc
or
mov
push
lock
fistl
sbb
inc
fists
jne
lret
test
fcoml
add
fisubs
inc
xchg
push
out
mov
mov
sbb
pop
dec
fiaddl
test
mov
nop
cmpl
lock
jne
cmpsl
inc
pop
rolb
popf
testb
push
loopne
hlt
fidivrl
adc
cli
sysenter
stos
ljmp
fsub
push
stos
insb
sbbb
push
pop
ret
mov
loopne
push
rclb
data16
xor
mov
and
adcb
leave
cld
cmp
jle
and
cmc
add
mov
ret
jecxz
xchg
pop
outsl
xlat
fwait
aas
mov
push
pop
or
adc
addb
es
clc
jle
sub
xor
add
sti
and
scas
or
arpl
or
pop
stc
cmp
sub
in
test
enter
arpl
dec
sar
pop
push
push
xchg
xor
cwtl
adc
out
xor
sbb
sbb
cld
add
loope
mov
xorb
pop
inc
adcb
xor
imul
mov
movsl
add
cmp
loop
pop
into
xchg
cmp
sbb
sub
jbe
sti
pop
cld
cmp
repnz
dec
cmpb
sub
add
aaa
push
ljmp
rorb
pop
jns
mov
xchg
ret
pushf
adc
lcall
cltd
ficoml
xchg
pop
push
aaa
sbb
cmc
push
adc
sti
mov
mov
mov
and
cmp
fidivs
bnd
or
xchg
lods
mov
sub
ror
pop
sbb
lds
nop
pop
pop
mov
negl
out
addb
sub
cmpb
aas
mov
dec
push
pop
mov
jl
mov
xchg
xchg
js
mov
pop
pop
add
fidivl
mov
xor
xchg
dec
movsl
sarl
mov
sub
clc
or
test
movsl
jns
pop
add
cmp
nop
sub
or
cmp
xchg
add
daa
adc
sbb
orb
ret
push
in
mov
or
pop
mov
ret
fimuls
shl
sbb
int
xchg
add
sbb
outsb
mov
add
jg
lock
cwtl
daa
sub
cmp
jmp
subb
xor
ljmp
shrl
adc
jae
loopne
shlb
pop
adc
mov
mov
sub
jb
fnstsw
and
and
inc
jno
cmp
add
and
or
das
rclb
ljmp
icebp
outsb
sub
negl
push
or
mov
xlat
pop
mov
sbb
fidivl
add
jae
insl
mov
int3
inc
sbb
fistps
sbb
adcb
lret
mov
aaa
sub
fadds
das
lods
push
scas
jno
rol
mov
mov
lahf
inc
add
xchg
xor
xorb
or
daa
jno
pop
pop
notb
sub
dec
xor
ds
add
and
cmp
cmp
int
sar
and
sbb
mov
jno
dec
sub
mov
xchg
xchg
push
in
adc
test
add
sahf
sbb
cmpsl
pop
push
andb
pop
jb
cmp
iret
fiadds
xchg
orb
out
enter
pop
inc
inc
jb
clc
push
push
insb
add
inc
jno
mov
dec
incb
sub
clc
insb
scas
imul
xchg
jecxz
and
rorb
scas
adcb
mov
rolb
push
test
cmpl
orb
rol
jno
fisttpl
cmp
mov
inc
mov
xor
cld
adc
xchg
shrb
mov
and
xor
dec
stos
imul
ss
pop
leave
jmp
push
roll
mov
cmp
sbb
lds
dec
loopne
pop
sbb
rolb
lock
fcoml
pop
inc
push
fwait
test
push
mov
dec
sbb
cld
pop
mov
mov
shlb
orl
jo
clc
dec
ss
lods
outsl
cmpb
jmp
mov
push
mov
xor
sbb
inc
aaa
fists
mov
add
pushf
inc
mov
jbe
mov
push
xchg
lahf
out
adc
pop
add
imul
jp
fdivl
ja
cmpsl
sti
jmp
in
dec
inc
xchg
mov
andb
xlat
push
popf
jmp
jmp
xor
clc
filds
inc
fisubs
aas
cmpb
cld
sub
or
jle
jo
loopne
leave
jne
or
fsubrs
sbb
mov
cmp
adc
fisttps
test
or
pop
sub
mov
roll
mov
daa
out
xorb
subb
cmp
aaa
jno,pn
sub
aas
lock
jne
sti
scas
inc
ret
xchg
fldl
shrb
insl
mov
repnz
mov
sub
xchg
cmpsb
add
ret
fisttps
xor
pop
dec
loope
cltd
es
push
xorb
xchg
push
cmpb
mov
ret
addb
adc
mov
cmp
adc
mov
icebp
push
rcrb
mov
dec
sub
loope
adc
ljmp
or
inc
in
rclb
or
fucomp
jge
sbb
push
test
fcompl
stos
jns
inc
cmp
cmp
adc
lret
int
add
push
data16
xor
pop
ret
jmp
aaa
jp
sti
nop
mov
dec
in
rolb
outsb
es
mov
loopne
leave
test
andb
jnp
scas
call
js
mov
imul
das
ds
repz
aaa
xor
jecxz
mov
stc
orb
inc
lods
dec
mov
movl
orb
das
and
popa
lahf
or
sbb
pop
mov
in
adcb
push
dec
inc
mov
mov
filds
roll
out
or
loope
add
push
push
dec
cmp
pop
and
icebp
inc
or
sbbb
ret
repz
jl
mov
fucomi
and
sub
push
outsb
mov
mov
or
jnp
dec
ljmp
push
adcb
pop
cmp
or
subb
in
add
andb
rorl
push
mov
cmp
mov
pushf
iret
sarb
andl
inc
sbb
add
jno
icebp
lds
adcb
aas
outsl
pop
or
pop
call
ljmp
sbb
push
aaa
lahf
push
pop
pop
cs
fistpll
xchg
xor
imul
lds
xchg
addl
fisubs
ret
lret
jbe
dec
aam
sar
or
xchg
or
mov
add
lds
daa
aam
or
bound
jae
pop
andb
in
stc
lods
aaa
mov
fcompl
mov
xchg
jg
cmp
xchg
sbb
fdivrl
push
jb
in
and
fwait
or
push
or
fdivl
int3
lahf
test
pop
and
loopne
xor
pushf
negl
or
sbb
sbb
or
xchg
lock
push
movsb
adc
lcall
push
call
mov
movsl
pop
in
imul
das
xchg
lcall
inc
icebp
rcl
cwtl
jb
fists
xchg
in
inc
ret
add
inc
pushf
adcb
mov
fsubrs
loopne
fimull
jnp
out
popl
pop
in
andl
cmp
std
mov
adc
subb
nop
or
daa
hlt
mov
shrl
ret
mov
add
mov
push
mov
aad
cmp
inc
scas
pop
lock
fucomi
or
pop
pop
push
and
pop
gs
push
in
sbb
rclb
or
in
mov
daa
popf
adc
test
loope
inc
in
pop
ljmp
repnz
cmpsl
fiaddl
sbb
stos
test
andl
add
cmp
xchg
out
in
dec
insl
jecxz
xchg
jecxz
imul
push
leave
sahf
mov
repnz
and
mov
mov
mov
lods
mov
repz
lods
lock
push
test
xchg
scas
in
adc
shll
mov
cltd
fmull
xor
dec
nop
and
cld
dec
adcb
addb
mov
pop
cmp
cmc
out
cmpsl
sub
rcrl
xchg
mov
les
jmp
jae
jg
and
rolb
pop
xchg
sbb
push
sub
repz
xchg
push
cltd
scas
int
xorb
dec
aam
jnp
imul
push
fcmovbe
mov
out
lods
subb
adc
std
pop
cmp
loope
cvtpi2ps
andb
jmp
push
cld
sbb
in
or
ja
sbbb
dec
cmpsl
sbb
pop
pop
insb
jae
loope
das
pop
adcb
cmpsl
subb
inc
push
addb
mov
adcb
out
pop
jp
call
mov
subl
xchg
mov
fcmovnbe
sub
xchg
sahf
or
in
insb
sub
sti
hlt
add
jecxz
fsubrl
and
adc
leave
mov
ds
scas
adc
iret
push
dec
loopne
mov
andb
xor
into
push
cmp
dec
lea
sub
push
and
xor
mov
sbb
inc
adc
xchg
add
fdivp
lret
jno
xchg
mov
xorb
jnp
out
int3
es
fbld
outsb
mov
xchg
lods
fiadds
jns
push
mov
cs
fwait
mov
faddl
adc
cmp
popa
dec
ds
and
or
inc
rorb
sbb
pop
pushf
jne
subb
rcrl
mov
insb
jb
or
sahf
adcb
fnstsw
or
add
mov
lcall
and
pop
adc
call
lods
mov
mov
mov
lock
test
sub
mov
and
repnz
and
clc
out
fdivrl
sbb
xor
stos
xchg
push
and
int
inc
cltd
push
dec
add
mov
ljmp
and
xor
sub
scas
imul
notb
in
dec
sbb
cmp
outsb
sbbb
std
cmpsb
push
lret
push
and
mov
test
jmp
scas
jne
dec
mov
dec
mov
or
or
out
or
cmp
je
add
jge
test
inc
mov
cs
clc
or
xchg
cmp
rcl
or
pop
or
sbb
addb
movsl
cmpb
pop
jnp
cmp
cmpb
js
add
inc
adc
mull
xor
xchg
lahf
nop
lods
xor
movsb
loop
movsb
mov
sbb
repnz
mov
add
and
gs
adcb
data16
adc
in
push
xor
xchg
xchg
dec
sub
adc
cwtl
rclb
call
aaa
add
out
adc
push
daa
dec
xchg
cmpb
repz
pop
cmp
mov
in
repz
aam
jns
rolb
fadd
jbe
or
sti
imull
push
stc
sbb
dec
mov
jle
mov
xchg
xchg
cmpb
mov
mov
loopne
sbb
cmp
pop
or
inc
roll
cwtl
mov
unpcklps
std
jbe
subb
stos
insl
dec
into
cmpb
sbb
xchg
cmpsb
sbb
fistpll
add
inc
in
pop
andl
sti
sub
xchg
test
xchg
mov
pushf
cltd
sbb
sub
test
mov
cld
mov
je
call
rorb
pushf
cltd
sbb
out
add
jae
enter
and
test
cwtl
xchg
dec
outsl
aam
test
insb
ljmp
decb
add
leave
out
or
xchg
in
and
sti
ja
lods
cld
pusha
shrl
insl
add
mov
xlat
xchg
dec
and
sbb
sbb
lods
mov
pop
scas
mov
xchg
add
fs
pop
pop
call
shlb
mov
lcall
cmp
in
rcrb
dec
cs
mov
sbb
mov
out
js
xor
adc
jo
xchg
adc
sbb
pop
xchg
add
mov
and
sbb
inc
icebp
push
test
mov
dec
jmp
sbb
iret
add
inc
mov
inc
or
es
enter
dec
xchg
adc
fadd
rorb
icebp
sbb
int3
lret
daa
xchg
sbb
adc
test
cmpsl
add
mov
addr16
add
or
mov
cmp
dec
sub
cmp
xacquire
mov
loope
xchg
inc
or
pusha
in
pop
lret
push
pusha
add
add
sub
push
into
mov
cmpl
xor
shrl
rolb
stc
loopne
gs
imul
sub
mov
sub
pushf
cltd
sbb
mov
movsb
jnp
icebp
sbb
push
mov
jnp
pushf
add
adc
dec
or
lret
fbld
in
gs
push
lock
movsb
dec
xor
push
ljmp
xchg
daa
in
pop
aad
push
sbbb
jmp
sub
inc
fstpl
subb
xchg
xor
cmp
hlt
fcompl
fisttps
inc
outsl
frstor
lock
fyl2x
in
add
daa
mov
cmpsl
mov
inc
xor
movsl
ret
ror
xor
or
add
scas
lods
fldcw
fildl
push
jmp
popf
fidivl
bound
out
or
iretw
sarb
add
dec
push
dec
sahf
cltd
ret
call
pop
nop
in
dec
nop
sub
push
mov
pop
mov
mov
movsl
adc
les
fwait
sub
icebp
mov
lcall
xlat
push
fiadds
les
xchg
lods
test
sbb
mov
in
mov
or
cmpb
out
js
cmp
pop
mov
movsl
xchg
jle
imul
movsl
add
push
sysenter
jmp
test
add
imul
rcrb
js
ja
das
mov
into
addl
nop
lea
pushf
mov
and
or
add
sub
add
mov
sub
cmp
cmpsb
mov
adc
lcall
enter
pop
jae
lds
jp
pushf
test
add
xchg
popf
nop
les
mov
xchg
lods
or
lods
sub
lock
push
sysret
arpl
int3
mov
sbb
pop
ljmp
xchg
dec
sbb
mov
or
pop
xchg
or
ds
cmp
and
mov
lret
das
pop
mov
fwait
xor
xchg
enter
fadd
xchg
lds
leave
pushf
add
mov
mov
sbb
loop
mov
pmulhuw
leave
pushf
add
shrb
adc
push
test
pop
mov
sbb
arpl
add
push
imul
jecxz
sbb
or
int
mov
cmpsb
cltd
test
add
mov
arpl
xor
sbb
mov
mov
adc
xchg
pushf
xorb
xchg
mov
adc
lcall
push
in
arpl
mov
and
xchg
out
jle
inc
adc
xchg
scas
inc
xor
loopne
xor
iret
stos
inc
mov
jo
imul
add
mov
hlt
mov
test
and
cmovae
adc
xor
call
xchg
stos
andl
or
add
test
or
or
jg
xchg
inc
mov
cwtl
xchg
sbb
movsl
or
fiaddl
loop
in
leave
data16
bound
movsb
mov
sub
movsl
aaa
jge
sbb
jg
subl
dec
dec
push
and
inc
in
adc
mov
mov
adc
test
push
cltd
scas
fwait
loope
or
out
mov
popa
movsb
sbb
xor
out
or
fcmovnb
xchg
sbb
xchg
or
push
xor
mov
std
and
inc
xchg
jb
aam
sub
test
pop
and
adc
sbb
orb
xchg
sti
mov
cmp
lcall
lock
or
adc
adc
sbbb
or
mov
adc
test
sbb
sbb
and
adc
lds
pop
dec
mov
ret
mov
push
ja
xor
mov
push
cli
xor
fwait
xchg
sbb
add
or
fwait
test
mov
xchg
dec
in
mov
mov
rorb
add
cmp
or
in
in
xchg
adc
mov
sbb
ret
mov
push
idiv
inc
sbb
aas
and
xchg
into
lods
adc
and
cltd
adc
inc
inc
movsb
mov
movl
dec
rol
sbb
xchg
mov
add
add
dec
rcl
adc
and
rol
sbb
xchg
sbb
sbb
mov
jnp
cltd
cmpps
mov
add
or
cmc
inc
jmp
jge
popf
popa
int
ja
loope
rorb
or
push
popa
rolb
xchg
push
xchg
mov
dec
xchg
and
xchg
into
sub
mov
mov
mov
xchg
fcomp
in
pushf
ret
sub
add
mov
inc
loope
sbb
rclb
xor
out
cwtl
scas
sbb
jmp
inc
pop
ror
xchg
lcall
lcall
lcall
cltd
sub
movsb
xchg
lds
or
sbb
iret
jb
call
dec
mov
out
nop
rcr
adc
mov
mov
pop
aam
pop
sar
cmp
imul
gs
fmuls
adc
test
inc
repz
into
sub
jg
mov
xor
mov
mov
xor
je
out
movb
push
or
add
mov
jle
sub
mov
pop
daa
dec
sarb
and
movsb
pop
xor
cmp
call
shll
rcr
fadd
sub
jae
dec
add
dec
or
fistl
pop
inc
pushf
cmp
push
cmp
push
add
les
adc
sarb
jbe
imul
pop
iret
sbb
xchg
xchg
leave
aam
mov
pop
push
jecxz
pop
cmpl
jge
sbb
sub
mov
cli
and
mov
addb
faddl
xchg
sbb
sub
adc
loopne
pop
sub
pop
cmp
in
subb
cli
push
pushf
mov
fidivs
loopne
sti
data16
or
adc
call
add
out
aaa
jns
call
movsl
rcl
mov
or
xchg
out
mov
push
incb
cli
adc
sbb
cwtl
out
mov
into
fcompl
rcrb
cmc
jmp
sub
adcb
add
in
mov
test
loope
or
clc
jo
dec
addb
mov
mov
jg
and
jb
test
gs
dec
xchg
out
nop
push
mov
in
ljmp
or
std
sub
xor
sbb
add
lods
push
xor
mov
add
sbbl
insl
push
mov
and
clc
loopne
call
xchg
push
mov
subb
mov
shll
adcb
mul
cmpb
lods
cli
ljmp
aam
dec
and
cmc
cli
fadds
xor
daa
pop
sbb
loopne
mov
lcall
out
fsubrl
pop
and
loope
jecxz
flds
popf
mov
movsb
pop
mov
mov
icebp
orb
add
loope
jmp
cmp
xchg
mov
scas
xchg
leave
ret
push
out
sbb
cmpsl
orb
addr16
das
lods
mov
sub
mov
pop
and
sarb
and
dec
rorl
mov
shrb
inc
mov
mov
andb
and
sbb
pop
push
sub
addl
sbb
notl
scas
dec
sub
or
aam
mov
push
cmp
sub
inc
xchg
or
cmp
in
pop
shr
fstps
pusha
pop
dec
add
and
movsl
cmpb
jbe
cmp
xchg
scas
xor
test
jge
jnp
dec
fdiv
bound
ds
bound
dec
incb
inc
pop
xor
xor
out
into
sbb
addb
dec
pop
xor
inc
mov
sbb
push
sarb
dec
cs
aaa
sub
adc
pop
pop
lods
xchg
cmpb
out
cmpb
jmp
push
sbb
xlat
faddl
sub
ss
pop
jle
sti
in
cwtl
arpl
cmp
lods
pushf
cld
aaa
or
ror
imul
andb
pop
sahf
jo
std
adc
int
add
lea
cmp
add
mov
adc
xorb
jg
adc
fsubrl
addb
pop
cli
aad
push
andb
push
push
add
mov
sub
pop
mov
enter
icebp
movl
adc
inc
sbb
mov
or
enter
push
sahf
sbb
ja
lock
jecxz
dec
sub
mov
and
sti
orb
cmc
in
and
out
cmpsb
jge
mov
iret
aaa
and
popa
fstpl
jle
pop
dec
sbb
incl
sub
adc
cs
mov
push
fs
pop
push
lock
mov
xor
into
add
movl
xchg
mov
mov
cld
imul
rolb
mov
enter
pusha
cld
xchg
repnz
mov
dec
inc
pushf
dec
stos
inc
clc
mov
sbb
lcall
notl
mov
cmpsl
add
lcall
push
mov
scas
mulb
sbb
into
sbb
push
mov
mov
push
add
lods
sbb
push
mov
test
add
inc
pop
dec
jno
gs
mov
cmpsb
lods
jb
mov
scas
push
or
jo
pop
les
push
adc
xchg
pop
add
cmp
sbb
roll
jb
pusha
add
imul
cli
add
jns
andb
mov
pop
loop
pop
insl
push
pop
xlat
and
loope
add
out
mov
or
in
cmp
push
test
sbbl
movsl
mov
std
enter
fcoml
es
loop
or
add
push
aam
jmp
pop
or
cmovne
insb
mov
pushf
pop
sub
sbb
lahf
shlb
repnz
push
andl
out
add
testb
fimull
aad
cwtl
push
mov
jmp
lock
fcompl
roll
xchg
adc
jge
add
sub
or
cmp
test
imul
or
ret
mov
call
arpl
xchg
incl
data16
addr16
aam
and
cwtl
mov
mov
push
mov
adc
movsb
push
mov
xchg
adc
sbb
jle
cwtl
push
addl
jmp
jns
jl
cld
cmc
pop
mov
xchg
rol
fucomp
lahf
ficoml
jmp
xchg
add
jle
mov
add
test
pop
mov
arpl
pop
pop
test
and
test
jo
fsubs
fbld
in
subb
subl
inc
mov
or
mov
inc
lahf
loopne
mov
testb
cmpsb
int
pushf
adc
mov
cmp
cmp
cld
pop
cmp
mov
imulb
xchg
push
int
loope
out
mov
dec
sbb
and
cwtl
mov
aam
mov
add
pop
push
sbb
jno
mov
aad
lret
int
pop
jmp
mov
lea
ljmp
call
out
int3
in
nop
sbb
add
gs
mov
aad
cld
mov
and
and
adc
icebp
push
stos
push
sarl
jns
fs
roll
fs
sub
jmp
fwait
and
jbe
imul
jl
mov
dec
mulb
sbb
mov
leave
mov
sbbb
jg
mov
add
pop
call
or
shrb
dec
mov
pop
add
loopne
ljmp
sbb
pop
add
push
mov
lahf
pop
lods
xchg
add
pushf
mov
dec
aaa
inc
sub
out
dec
cmpsl
push
stos
or
mov
mov
xchg
add
fnstcw
test
jbe
cwtl
add
mov
repz
jb
or
orl
adc
nop
xchg
xchg
adc
xchg
xchg
adc
jb
sbb
sbb
lahf
xchg
sbb
push
and
pop
mov
pop
xor
add
sti
jp
mov
inc
cltd
loope
addr16
sub
repz
inc
add
data16
lock
outsb
aas
sbbl
mov
ds
lret
lods
mov
and
push
mov
add
and
push
add
repz
or
test
lods
and
loopne
jmp
pop
pop
push
xor
cmpb
jns
xorb
cmp
mov
add
inc
bound
mov
xchg
rorl
inc
mov
mov
jle
push
xorb
les
mov
sbb
add
dec
rcrb
addr16
js
xchg
mov
sbb
into
ret
adcb
dec
push
leave
loop
out
jmp
or
insl
loopne
stos
out
repz
push
add
ficoml
lcallw
dec
stos
xor
scas
adc
ffree
jle
sub
das
rolb
xchg
and
mov
lds
push
sub
mov
rcr
scas
mov
xchg
fisubrl
icebp
adc
mov
aaa
gs
mov
and
mov
out
or
lret
push
jmp
push
arpl
lock
mov
in
sbb
xchg
and
mov
add
rcrl
push
inc
inc
sub
mov
sbbb
mov
mov
xor
out
jno
adc
or
xlat
js
ljmp
ds
lock
mull
out
adc
cwtl
xchg
popa
mov
mov
inc
bnd
push
repnz
or
lea
xchg
sbb
push
psubsw
xchg
xor
lock
xlat
addb
cmpsb
ret
mov
aam
xchg
push
xor
mov
lret
mov
sub
cmp
push
mov
ss
ret
xchg
orb
outsb
addr16
xorb
loopne
out
cmp
out
shl
or
jge
fcomps
arpl
xchg
int3
inc
andb
divb
movsb
jae
out
out
lea
sbb
in
or
pop
aaa
rolb
xorl
les
decb
xchg
push
push
das
out
bound
adcb
ja
je
cmc
test
dec
imul
pushf
mov
mov
fiaddl
jne
arpl
cmpb
ror
pop
daa
ljmp
jae
and
mov
out
addl
dec
test
adcb
fcmovbe
cmc
stos
or
orb
insl
xchg
xor
orb
inc
out
popf
fisubrl
clc
sti
push
test
outsl
dec
jmp
or
jb
popf
add
xor
cmp
sub
mov
fisubs
ds
in
mov
call
loopne
xchg
cmpsb
mov
testl
orb
insl
adc
sub
notl
jmp
rcr
lcall
xchg
mov
orl
dec
icebp
pop
aas
das
xorb
fcmovne
stc
cmp
lcall
loopne
sbb
lret
xor
mov
push
int3
lock
or
mov
adc
or
das
popa
mov
loopne
dec
sbbb
cmc
std
popf
mov
test
push
aas
mov
adc
shl
xchg
cltd
add
out
cmp
jno
sti
orl
subl
cmp
test
mov
fidivrl
mov
or
mov
test
dec
loopne
jns
fs
testl
mov
xor
fildl
sub
adc
enter
rolb
or
aam
gs
adcb
outsl
adc
repz
jmp
pop
cmp
pusha
test
adcb
rorl
hlt
jecxz
std
mov
into
add
outsb
inc
jle
enter
subb
jno
xchg
add
shrl
lods
xchg
nop
cmc
stos
mov
add
mov
insl
dec
bound
test
leave
inc
jns
dec
adc
inc
mov
mov
sub
pop
and
sti
xor
test
xchg
push
loopne
lds
and
adc
orb
dec
sub
inc
xchg
stos
adc
add
fbld
mov
test
xchg
loopne
jb
inc
mov
loopne
push
xor
shl
data16
mov
mov
loopne
arpl
shrb
shrb
and
inc
adc
sub
mov
xchg
and
add
ja
mov
or
les
sub
ds
fildl
add
jecxz
mov
insb
xor
cmpb
jbe
pop
bound
mov
push
and
loop
cltd
ljmp
subb
popa
shlb
add
loopne
loope
call
das
or
test
mov
rol
cltd
xchg
push
jle
sub
loop
adcb
pop
inc
arpl
cmp
adc
push
and
sbbl
jb
in
mov
outsl
mov
hlt
xor
xlat
out
leave
mov
and
popa
lret
xchg
jmp
mov
cmc
sti
inc
stos
push
shll
fsubl
in
mov
ret
add
shr
cli
mov
test
cmp
das
inc
inc
cs
test
fsubr
scas
cmpl
cmp
aad
inc
adc
je
push
fcomp
pop
and
icebp
or
pop
outsl
mov
repnz
pop
ss
sbbb
xchg
dec
add
cmpsl
dec
notb
add
cmp
fldln2
ficompl
lea
xchg
inc
imul
cmp
jb
sarb
jns
nop
dec
lds
add
or
sbb
sub
jae
jo
cmp
mov
popf
push
adc
jne
and
jno
push
push
rcr
jle
add
scas
adc
inc
lahf
lock
sbb
sub
addb
or
mov
data16
mov
and
cmp
lcall
jns
enter
pop
cmpb
fisttps
jno
ja
push
rcrb
call
adc
mov
mov
scas
popf
fildll
add
mov
xchg
incl
mov
icebp
adcb
xchg
mul
jb
subb
sbb
mov
inc
sub
dec
or
add
out
xor
xor
out
sbb
lcall
aaa
pop
ds
orb
cmp
add
daa
xchg
nop
leave
xor
push
mov
sub
sub
jmp
les
push
mov
lret
pop
aad
jbe
fcmovnu
mov
aaa
pop
jae
enter
dec
mov
andb
mov
mov
notb
push
mov
pop
ss
adcb
push
data16
cs
shlb
adc
faddl
test
pop
cmp
pop
or
add
mov
xlat
fcoms
dec
jmp
cmc
adc
fistps
or
outsl
bound
mov
sbb
push
fmulp
call
andb
mov
add
shrb
xchg
and
sbb
sahf
mov
addr16
and
fnstsw
xchg
mov
xchg
pop
add
daa
push
scas
sbb
push
ficomps
icebp
inc
sbb
cmpb
cs
xchg
dec
mov
pop
cltd
or
adc
mov
mov
subb
lahf
je
in
test
add
inc
mov
push
jne
cld
and
lods
jo
insb
sbb
outsl
sub
sbbb
push
xor
jge
ds
xchg
add
pminub
add
dec
lods
pop
cmpb
push
push
mov
movsb
xorb
cmp
popa
mov
mov
popa
jmp
cmp
push
pop
imul
jb
out
xor
cmp
cwtl
adcb
sbb
jns
pop
xlat
hlt
cmp
fcmovnb
cmp
lds
movsl
subb
or
jg
decb
cmp
pop
sahf
sbb
xchg
push
arpl
hlt
lods
filds
adc
push
mov
jae
lods
jmp
test
push
pop
lahf
or
sub
pop
pop
ljmp
cmpsl
push
jne
setae
sti
subb
add
inc
xchg
add
push
mov
cmpsb
mov
jge
adc
loop
mov
adc
inc
xchg
dec
lods
mov
jbe
dec
mov
sbbb
mov
lcall
inc
lret
and
push
add
push
and
insl
cmpb
mov
and
mov
nop
scas
scas
and
push
in
jae
out
add
mov
xchg
int
aad
subb
push
clc
mov
mov
out
subl
mov
lods
fiadds
mov
jae
in
repnz
addl
bound
mov
xchg
pop
call
mov
cmc
fucom
fisubrl
sbb
pop
cwtl
xor
idiv
fstps
cmpsb
fs
sahf
aam
mov
jno
je
inc
cli
push
sbb
jnp
lock
cmp
xor
jmp
mov
inc
movsb
xchg
fcmovnu
mov
xchg
out
stc
mov
sub
jno
inc
mov
adcb
and
xchg
pop
mov
xor
sbb
insb
fiadds
add
jnp
pop
dec
fnsave
mov
xor
sbb
mov
pop
xchg
int
rorl
ret
aam
jo
clc
rcrl
pop
popa
xchg
add
mov
add
clc
pop
mov
loop
or
mov
xor
loop
daa
xor
mov
outsl
adc
pop
dec
xchg
mov
add
inc
cwtl
cmp
test
mov
mov
and
inc
hlt
mov
imul
mov
jno
mov
loope
lock
in
sub
inc
push
std
push
pop
mov
and
dec
cld
sub
or
cli
sbb
mov
stc
jl
test
push
je
ret
ja
adc
push
or
or
in
pusha
mov
xor
and
pop
popf
sbb
mov
sbb
mov
cmpb
mov
jecxz
in
push
adcb
pop
push
mov
es
cmp
mov
push
sub
cmpsb
mov
mov
mov
xchg
add
test
cltd
cmp
pop
adc
mov
add
inc
jmp
sbb
jo
sub
in
popa
push
jmp
mov
mov
sub
repz
sbb
pushl
in
push
mov
lds
insl
dec
test
mov
mov
dec
cwtl
iret
addr16
xchg
aam
lock
mov
test
add
sbb
repz
int3
orb
cmpsb
ret
jmp
minps
jno
lret
mov
lock
subb
xadd
jne
adcb
mov
scas
das
sbb
pop
sub
cmpsb
add
fwait
shrb
data16
push
jecxz
pop
mov
adcb
push
faddl
cmp
sbb
xchg
sti
divb
bound
jne
loopne
popa
lcall
cmp
cmpb
xchg
stos
fstl
andb
cmp
movl
add
and
idivb
pop
cli
xor
into
movsl
adcb
jmp
subb
dec
in
ds
pop
mov
enter
pop
loopne
stc
xchg
fdivs
mov
les
xchg
test
pop
jo
lret
test
orl
icebp
stos
pop
cmp
popf
nop
xor
int
xorb
ljmp
out
push
push
add
in
dec
js
cmpb
fwait
aaa
xchg
icebp
in
cmp
adcb
pop
mov
pushl
add
repz
push
fsubs
aad
test
orb
leave
xchg
inc
cmp
std
imul
es
sub
mov
xchg
enter
stos
add
xchg
imul
mov
sub
add
lahf
pop
cmp
mov
dec
loopne
dec
inc
outsb
sbb
and
rcrb
movsl
mov
js
cmpsl
je
dec
daa
jns
les
adc
ljmp
loopne
inc
icebp
test
ja
movsl
out
push
xchg
add
mov
hlt
push
jmp
mov
adc
push
outsb
jno
push
icebp
mov
pop
jns
mov
push
mov
insl
lods
inc
xor
xor
fcomps
cmp
and
mov
je
stos
stos
dec
adc
cld
adc
lods
sub
mov
xchg
pop
lea
jg
jae
cmc
lods
mov
xchg
andb
jge
gs
testl
mov
in
call
sbb
push
mov
xchg
test
xor
mov
mov
xlat
push
faddl
icebp
ss
pop
orb
push
mov
cwtl
test
lds
call
scas
adc
incb
mov
das
faddl
cmp
jne,pn
mov
sub
jle
pop
xlat
ror
insl
divl
push
ss
mov
jl
jb
testb
xor
mov
movsb
and
add
fistpl
inc
pop
addr16
aam
lods
cmc
sub
mov
cmp
xorb
pushf
jmp
and
push
lcall
stc
loope
mov
shrb
add
sarb
call
out
int
loope
xchg
in
sbb
dec
xor
jle
inc
rol
stc
iret
adcb
jno
xorb
pop
add
mov
inc
out
js
add
jp
mov
or
dec
cmpsb
cs
and
jmp
dec
outsb
and
scas
dec
pop
sbb
paddw
sbb
clc
inc
sahf
ds
call
fcmove
xor
shrb
cmc
sbb
loopne
fistl
mov
push
xor
xchg
rcrb
lea
les
subb
js
cmp
push
mov
xchg
inc
cli
les
mov
sbb
xchg
jo
xlat
cmp
mov
add
lcall
rcll
dec
jbe
cmpb
xor
lods
mov
push
in
inc
popa
add
div
out
xchg
cmp
and
sub
inc
out
xchg
or
dec
or
int3
lahf
addb
out
je
dec
sahf
add
jno
int
lea
ja
and
andb
repz
add
adc
hlt
mov
mov
pop
inc
push
js
mov
push
lock
cld
movsl
or
fcmovu
add
test
jmp
outsb
test
fwait
sub
cltd
inc
inc
out
pop
sar
cmpb
scas
pop
jns
dec
push
xor
sbb
inc
stos
push
sub
sbb
mov
add
ja
inc
xchg
nop
jl
adc
cmp
mov
hlt
out
popa
loopne
int
aad
addb
mov
out
cli
sarl
or
cmp
andb
pushf
adc
adc
xorb
pop
insb
inc
xlat
fiaddl
bound
lds
repz
stc
loopne
or
adc
and
jae
mov
xchg
sbb
bound
orb
jns
adc
fidivrl
cs
adcb
xlat
mov
pushf
leave
adc
mov
jge
sub
rcl
sahf
add
pop
fimuls
lock
cwtl
and
cs
leave
out
fcomps
add
shl
out
mov
add
mov
xchg
mov
test
jns
js
dec
test
lods
push
aam
cmpb
clc
pop
jb
lret
andb
js
mov
mov
adc
mov
jns
pop
xchg
addb
push
and
add
inc
movsb
decb
sub
push
addb
push
movsl
mov
inc
shr
xlat
icebp
in
mov
fidivrl
popf
js
nop
dec
xor
daa
scas
es
movsb
pop
cmpb
repz
les
fs
sbb
xchg
and
adc
mov
xor
jp
arpl
push
pop
addb
int
xor
push
lahf
addr16
pop
mov
sbbb
sti
cmc
subb
dec
mov
pop
cmp
sarb
mov
cmp
jle
insl
mov
call
lcall
and
aad
pop
hlt
ss
js
das
pop
inc
js
dec
sub
jae
push
cmpsb
pusha
mov
cld
jp
dec
pop
sub
dec
xchg
xchg
inc
jb
push
and
hlt
nop
inc
add
cmp
test
mov
adc
neg
sbb
inc
mov
loop
fmul
pavgw
cmp
mov
sbb
scas
icebp
mov
sbb
xor
orb
mov
addb
mov
mov
lcall
adcb
mov
test
inc
mov
mov
sahf
lret
leave
sub
andb
jae
cmpsb
addb
iret
or
je
decl
cmp
xor
inc
mov
gs
xor
adc
mov
das
subb
jl
out
sub
pop
flds
mov
mov
cmpb
insl
cmpb
push
loop
pop
push
orb
push
mov
sub
push
pop
stos
lock
fmuls
add
movsl
jg
mov
mov
xchg
subl
jns
test
mov
fldcw
mov
outsb
stc
xlat
mov
subb
fwait
cmp
iret
test
in
cmpb
mov
shlb
sub
jle
dec
mov
pop
lock
mov
jbe
jg
dec
outsw
fsubrl
xchg
sub
lods
neg
xchg
or
orb
cmp
icebp
adc
cmp
jbe
mov
mov
fiaddl
push
in
out
loop
ffreep
das
repnz
fisttps
stc
mov
and
adc
push
leave
lock
outsb
in
jb
cmp
cmp
movsb
dec
cwtl
add
sahf
out
andb
xchg
cmp
push
and
in
pop
hlt
andb
and
xchg
push
sbb
adc
nop
push
sbb
add
fwait
data16
xchg
xchg
outsl
and
loope
out
outsb
loopne
icebp
xchg
int
fistl
test
outsl
adc
je
lock
sbb
sub
xchg
aas
popf
push
xor
add
sub
jo
addb
dec
cmp
ffreep
es
xor
negl
pop
add
xchg
lcall
pushl
sbb
jmp
test
jle
xlat
cmpsl
dec
adcb
push
push
inc
or
xorb
imul
loope
and
aaa
push
clc
or
sub
out
sbb
push
jnp
bnd
mov
sub
int3
clc
lock
ja
int
je
and
xchg
pop
mov
test
inc
or
add
shlb
dec
mov
cmp
adc
xor
les
dec
xor
push
and
inc
jecxz
push
popf
mov
add
push
add
xchg
ljmp
sbb
push
stos
push
xchg
dec
movsl
mov
push
in
inc
pop
or
cvtdq2ps
scas
push
xchg
lret
imull
lea
fstpl
pcmpeqd
loopne
sbb
adc
sbb
xorb
int3
adc
ss
fcoml
mov
or
stos
fidivl
in
dec
xchg
or
cmp
iret
pop
push
outsb
pop
orb
mov
or
insb
fists
xor
mov
push
call
ja
pop
aas
push
fwait
daa
dec
sbbb
push
sub
and
scas
pop
mov
add
jnp
divb
push
push
not
sbb
jg
orl
or
mov
mov
loop
es
test
add
push
mov
nop
ret
xchg
rcrl
xchg
movsl
dec
mov
jp
pop
loope
popf
push
out
addr16
mov
mov
sub
subl
xchg
rcl
into
call
add
sub
or
or
pop
aad
aad
sub
shrb
xchg
aad
es
lods
in
cwtl
insb
push
out
jmp
js
addr16
notl
loop
push
imul
mov
lock
mov
fwait
rcrb
pusha
jmp
mov
push
pop
jno
pop
repnz
jnp
pop
ja
aam
outsb
adc
push
and
pop
jne
lods
push
and
sub
imul
push
loope
fnsave
aad
movsl
fldt
jns
shl
pop
je
js
cwtl
mov
lock
pop
loopne
inc
mov
insb
mov
loop
rcrb
jl
cs
sti
shll
lock
in
push
xchg
and
mov
xorl
lahf
jle
xchg
push
jp
pop
stc
cmpsl
mov
std
sbb
dec
scas
sub
cmp
dec
xchg
imul
lcall
scas
pop
pop
test
push
inc
add
inc
push
mov
push
addr16
mov
mov
clc
pop
std
mov
pop
push
rolb
xchg
adc
sbb
testl
rclb
test
or
xchg
es
pop
or
sbb
out
add
jnp
sbb
into
addb
aam
mov
pop
mov
push
adc
adc
lea
mov
dec
xor
inc
jbe
xchg
xchg
dec
ret
mov
mov
das
adc
lret
xchg
int
movsb
xlat
add
test
sbb
loop
sub
mov
adc
jg
xor
add
call
add
fnstsw
pop
scas
lret
ret
adc
lret
xlat
into
adc
pop
xor
or
outsb
or
sub
rcrl
fwait
mov
add
lock
lret
dec
mov
cmp
and
dec
pop
ret
es
ret
dec
adc
movsl
adc
scas
xchg
xchg
sub
xchg
adc
dec
popf
mov
mov
test
mov
add
pop
pusha
je
xchg
lcall
mov
bound
jp
adc
call
insb
push
sbb
push
or
fcmovnbe
add
lods
out
or
rcr
pop
mov
push
fsubrs
stc
fnstsw
jmp
xor
xchg
mov
or
xor
or
rorl
inc
aad
sbb
clc
ret
sti
ja
mov
roll
or
imul
sahf
rorl
mov
push
mov
dec
or
fucomi
push
pop
dec
fidivrl
jge
mov
mov
ljmp
push
movsb
dec
jno
lods
test
push
push
ret
add
inc
jl
inc
andb
pop
adc
mov
mov
int3
xchg
arpl
je
inc
jb
in
setne
into
fmull
aas
in
mulb
inc
sbb
mov
pushf
dec
cmpsl
push
shr
add
cmpsl
cli
push
lret
popa
dec
adc
mov
push
pop
fs
jne
inc
sbb
add
stos
push
fsts
int3
mov
filds
sub
cmpb
daa
mov
mov
ficoms
xorb
xchg
repnz
mov
or
xor
adc
lret
int3
or
add
int
push
mov
aam
out
add
bound
add
sti
mov
stc
rorb
push
shrb
filds
add
mov
xorb
push
sub
mov
jnp
and
loope
popl
outsl
bound
fcomip
cmc
lret
fst
in
pop
jle
inc
lea
mov
sbb
add
push
add
xchg
shlb
lret
or
xchg
loop
and
aam
arpl
push
and
pushf
fidivrl
adc
mov
jmp
movsb
rclb
lock
sub
jge
add
ret
jns
xchg
mov
outsb
sti
adcb
add
dec
xchg
push
ret
cmpsb
in
adc
jg
sub
mov
in
mov
lahf
out
sub
nop
sub
mov
ja
call
andb
xchg
dec
jle
push
cmc
sarb
or
and
or
xorb
ds
inc
scas
pop
jp
out
mov
subb
mov
jg
sub
push
lahf
arpl
scas
add
cmp
subb
sub
jbe
mov
mov
sub
xor
orb
repz
lea
or
dec
repnz
std
mov
loopne
mov
mov
or
lods
jmp
dec
adc
addb
jl
jle
or
addb
mov
jae
mov
dec
cmp
fadds
int3
out
shrl
fmull
in
xor
out
mov
adc
pop
jne
ror
jbe
cld
cmp
fs
adc
sahf
jecxz
rcr
movsb
enter
xchg
repnz
jecxz
mov
out
and
mov
adc
mov
aaa
fdivrl
dec
mov
daa
mov
into
hlt
inc
cmp
add
mov
adc
cmp
pop
aad
inc
and
and
and
cmpsl
pop
cmp
andb
xchg
sbb
stc
movb
mov
dec
testb
inc
dec
dec
adc
push
ret
inc
jbe
sti
shrl
mov
loop
push
cs
pop
pop
jb
int3
je
xchg
mov
int
subb
outsb
push
lock
pop
mov
sbb
fs
addr16
mov
push
stc
jecxz
or
jbe
ret
adc
push
xchg
fwait
and
testl
out
shlb
sub
xor
js
pop
mov
dec
arpl
sbb
mov
and
ljmp
subb
fistpll
rorb
adc
mov
sub
scas
fisubrl
xor
sbb
out
ret
stos
mov
mov
mov
cmp
mov
xchg
leave
sub
mov
leave
or
add
in
push
rcll
repnz
addb
aad
pop
cwtl
out
or
dec
xchg
adc
sbb
inc
jl
or
cmp
adc
out
lret
stc
jno
push
cwtl
arpl
xchg
test
loope
xchg
and
in
dec
mov
out
add
dec
mov
shrl
hlt
jecxz
xor
xor
aam
fs
sbb
bound
or
rcrb
rcll
cwtl
sub
cld
stc
push
stc
rolb
int3
cmp
int
mov
inc
lea
push
or
ss
mov
rcll
cmp
sub
inc
inc
frstor
call
add
mov
imul
leave
outsl
mov
add
xor
xorb
out
cli
lock
scas
xchg
cmp
subb
dec
inc
iret
lret
mov
call
xchg
push
mov
inc
and
imul
movsl
fsubrs
rorb
sub
stos
push
or
pop
test
fisubrs
fstpt
fnstenv
mov
lock
ret
adcb
ret
stos
pushf
fcoms
popa
enter
adc
or
dec
jl
jecxz
sbb
clc
sub
xchg
out
pop
cmp
cmpsl
adcl
stc
mov
push
mov
lret
mov
sbb
popa
adc
pop
mov
lods
or
add
sub
jmp
xor
add
mov
and
aam
dec
inc
addb
in
mov
cmp
aas
test
dec
mov
sbb
sarb
aaa
mov
sub
cs
fwait
inc
mov
fsubrl
xchg
stc
insb
scas
add
push
imul
imul
in
pop
xor
dec
mov
je
inc
cmp
fcompl
loope
dec
sti
lea
mov
sub
xor
jl
sub
pusha
jbe
jmp
jns
out
inc
sbb
cld
test
mov
pop
adc
xchg
outsl
sarb
sti
pop
in
xchg
pop
fs
lcall
insb
add
mov
push
scas
movsb
rclb
mov
push
fnstenv
cmp
sub
repnz
loop
cmp
data16
inc
sub
cmpsb
addb
popf
stos
mov
add
pop
push
sarb
cwtl
adcb
aaa
xchg
sbbb
dec
cmpb
add
gs
xor
leave
and
pop
add
js
popf
sahf
cmpb
push
sti
mov
addr16
sub
jnp
sbb
sbb
sub
sbb
subb
adcl
lea
orb
fistl
dec
lods
iret
adcb
repz
pop
aaa
push
add
inc
pop
mov
cmp
inc
xor
mov
push
dec
dec
inc
cli
movsb
pushf
cmpb
or
repnz
pop
out
inc
fists
cmpb
push
pop
pop
lods
mov
jl
jb,pn
cmpsb
adc
inc
push
sbb
inc
pusha
mov
loope
push
jb
ss
pushw
insl
out
and
push
and
jb
mov
sub
gs
out
sahf
add
fsts
repnz
and
xlat
into
imul
adc
arpl
test
cmc
adc
insl
test
ja
sbb
xor
shrb
xor
adcb
or
inc
dec
out
subb
mov
push
mov
loopne
test
insl
aaa
scas
in
xor
outsb
into
xor
or
cmpsl
inc
and
cs
orb
sarl
idivl
push
push
inc
cltd
out
xchg
inc
and
and
addb
add
cmp
shlb
subb
add
out
pop
push
mov
xchg
outsl
push
add
repnz
and
adc
add
pop
insb
rcl
fxam
xchg
imul
out
cmp
mov
xor
inc
or
shrl
sahf
out
push
xchg
faddl
mov
cmp
loope
xchg
or
or
imul
cmp
mov
es
push
and
addl
sub
xlat
rclb
or
cmpsl
xchg
arpl
push
push
subb
mov
aad
xchg
and
mov
fcoml
push
cmpb
xchg
loop
sub
subb
push
test
xchg
mov
les
rcr
in
sub
orb
aas
rorl
imul
test
pushf
rcll
cmp
cmp
jmp
cmp
or
adc
popf
push
das
ret
pop
leave
loopne,pn
xor
rcll
adc
mov
jp
in
sarb
sbb
pusha
adc
rcll
inc
mov
jae
or
nop
popa
add
inc
in
jnp
and
mov
cmp
sbb
xchg
and
pushf
push
cwtl
xor
xchg
popa
enter
mov
or
stos
test
dec
sbbb
lock
lahf
inc
int
adc
in
mov
mov
aam
ds
push
subb
int
fs
sub
dec
dec
shrb
mov
mulb
das
inc
imul
stc
xchg
jle
dec
xor
decl
xor
mov
mov
mov
pushf
xorb
stos
add
pop
orb
hlt
popa
inc
jnp
testl
repnz
subb
cmp
or
lcall
loopne
xchg
and
cmpb
cwtl
sub
iret
testb
dec
nop
sub
sarl
push
sbb
pop
out
mov
push
mov
inc
mov
leave
idivb
les
ss
insl
es
sub
out
montmul
cmpsb
xchg
shrl
mov
pop
pop
in
mov
or
pop
dec
add
xchg
xchg
outsb
xchg
fdivr
add
push
cmp
push
lahf
dec
xchg
push
flds
data16
bswap
pop
xlat
orl
inc
aam
out
sub
loope
sahf
jnp
xchg
adc
adcb
xchg
cwtl
add
or
cwtl
rorl
test
aaa
xchg
nop
sbb
mov
add
push
aas
sbb
sbb
adc
push
xchg
mov
arpl
sub
bound
fstps
sbb
cs
push
pop
sahf
aas
mov
scas
js
and
push
repnz
cltd
fdivrl
lcall
add
rcrl
mov
jae
push
ret
mov
cmc
cmp
mov
pop
cmp
mov
cmpb
push
out
rolb
test
mov
loope
sahf
sbb
sub
and
lret
sbb
repz
cmpb
dec
mov
movl
jge
pop
mov
rorl
adcb
lahf
add
and
push
sub
push
rol
cmp
gs
loope
mov
adc
ret
orb
mov
cmpb
pop
sub
adc
adc
adc
cmp
ljmp
outsb
pop
cmp
cli
add
add
bound
cmc
xor
adc
cltd
xor
popf
add
fstps
add
pop
clc
shr
pop
out
stc
cltd
jae
adc
clc
out
faddl
div
ljmp
pop
mov
inc
sbb
fmuls
cmp
or
mov
mov
in
adc
add
sbb
fnstenv
jnp
jg
das
add
mov
cmp
ds
mov
iret
pop
add
pop
repnz
sbb
test
pop
xchg
xchg
xchg
cs
xchg
sbb
js
lcall
xor
inc
mov
out
add
sub
push
inc
gs
jge
inc
mov
jmp
js
outsl
jmp
test
mov
jmp
pop
lock
in
mov
fimull
rcrl
in
mov
cli
pushf
stos
adc
or
stos
dec
movsl
push
mov
sbb
sub
or
into
loope
movsl
addr16
cltd
adc
add
xchg
mov
add
xchg
pop
pop
pop
mov
fidivrs
clc
test
dec
stc
xor
arpl
shll
test
and
push
pusha
mov
mov
mov
jecxz
fwait
push
arpl
adc
cltd
xchg
mov
ljmp
or
jmp
data16
sub
lods
test
sar
negl
xchg
sbb
xchg
insb
inc
pop
xchg
ss
enter
movsl
outsb
pushf
xlat
orl
inc
dec
sahf
mov
call
pop
sbb
pop
faddl
push
mov
loope
movsl
add
call
jp
xor
jge
addr16
cltd
add
insb
jo
or
ja
mov
fidivs
mov
cmp
adc
pop
pop
test
std
mov
in
xchg
cld
popa
bound
sbb
jae
pop
mov
nop
pop
xchg
adc
sbb
cmc
and
rorl
jmp
sti
pop
cmc
mov
xchg
lcall
nop
test
lock
push
xchg
mov
test
sub
lods
pop
jle
mov
xor
pop
sti
mov
lahf
add
imul
pop
stc
fisubrl
cmpsb
pop
call
rcll
pop
mov
xchg
test
iret
in
daa
mov
out
adc
icebp
std
sbb
xor
in
xchg
movsl
andb
lods
incl
cmc
insb
mov
xchg
pop
mov
jnp
in
push
pop
loopne
jmp
call
jmp
mov
xchg
lock
push
cld
enter
push
mov
mov
and
shl
add
lods
sub
xchg
or
pop
fcmove
xchg
xor
inc
xor
orb
pop
push
jb
push
xchg
xchg
ljmp
jnp
cmpsl
lock
lods
fdivs
arpl
pop
icebp
in
rorl
add
bound
mov
sbb
sbb
sub
mov
popf
mov
xor
mov
adcb
inc
adc
xchg
scas
out
mov
cwtl
push
or
mov
dec
pushf
cmp
lcall
ja
data16
inc
rol
addr16
push
test
xchg
int
xchg
sub
cvttps2pi
mov
push
push
add
jg
cli
push
out
and
leave
subb
push
popf
adcb
imul
dec
push
jl
jo
inc
push
pop
jmp
push
sbb
cwtl
inc
jnp
cwtl
outsb
faddl
push
into
jae
data16
sbb
and
cmp
sbb
dec
fidivl
push
and
pop
cmc
lock
sbb
mov
sbb
ja
pop
jno
mov
pop
pop
cmp
cmpb
test
es
pop
adc
hlt
out
fldl
test
push
cld
shlb
push
xorb
xor
and
inc
mov
push
sahf
scas
dec
ror
repz
cmp
dec
pop
ds
sbb
nop
sbb
shl
xchg
cmpsl
movsb
jb
push
rol
arpl
cmp
icebp
loopne
movsb
or
adc
xchg
fcomi
jp
pop
bound
pop
sub
es
jmp
rol
mov
orb
cmpsl
or
and
nop
xchg
test
imul
in
cli
xor
push
xchg
dec
lods
subb
jne
xor
pop
mov
popa
shrl
cmp
lods
inc
mov
in
push
and
in
pop
faddl
lock
rorb
mov
or
roll
lock
cmp
lahf
mov
hlt
nop
push
and
daa
stos
jnp
imul
push
sti
mov
fdivl
sahf
dec
xchg
inc
or
out
das
sbbb
mov
addb
div
loope
pop
sbbb
sarb
mov
jl
push
dec
stos
mov
adc
loopne
stc
clc
outsb
inc
jbe
fcomi
jg
cld
jl
fidivl
in
dec
testl
icebp
dec
lods
mov
shll
imul
xchg
mov
ret
mov
pop
aad
mov
mov
sahf
mov
das
and
mulb
jp
dec
sbb
clc
mov
bound
add
mov
ljmp
fs
rcrb
push
add
jb
mov
stc
scas
adcb
pushf
push
test
cmp
adc
cmpb
inc
movsl
ficoml
push
subb
adc
add
pusha
cmpl
fdivl
pop
xorb
xchg
push
ret
movsl
jmp
faddl
in
mov
fadds
push
xchg
mov
jns
loop
push
and
xchg
jge
xorb
arpl
out
mov
sbb
or
lcall
sti
out
pop
out
push
subb
pop
int
rep
lahf
pop
and
xlat
dec
push
mov
push
lahf
mov
outsl
loopne
jp
pop
scas
add
jmp
je
out
cmc
outsb
insb
inc
sbb
pop
cmpb
jo
sub
enter
lds
int3
add
cmpsb
cmp
mov
mov
imul
mov
fwait
inc
test
mov
push
pop
icebp
nop
pop
xor
scas
imul
lcall
enter
mov
cltd
xlat
adc
mov
or
sub
fldl
sub
mov
add
fstpl
adc
jo
shld
stc
mov
push
int
push
fwait
imulb
xorb
pop
lds
add
out
pushf
nop
fisttps
push
and
cmpsb
dec
rcrb
fidivrs
xchg
dec
scas
sahf
push
sbb
cmpsl
pop
std
fidivl
stc
fldl
outsb
pop
and
in
ss
cmp
je
into
out
fwait
jecxz
bound
popf
xchg
xor
clc
pop
jne
cli
ljmp
push
shr
inc
test
mov
orb
jg
jle
jns
push
in
inc
std
pop
cld
mov
cmp
cmpsb
icebp
orb
adcl
mov
or
hlt
or
cld
jne
stos
xchg
xlat
adc
push
mov
push
les
fs
les
or
mov
jbe
or
cmc
or
pop
js,pn
mov
xlat
sub
notl
dec
sbb
push
pop
rclb
decl
fs
scas
and
adc
enter
push
sbb
cwtl
xor
mov
mov
sbb
out
mov
fsts
into
sbb
shl
push
add
adc
std
add
dec
aad
mov
out
dec
jnp
imul
pop
mov
insl
je
out
sub
mov
xor
roll
inc
sub
adc
pop
cmp
js
fdivl
addl
jmp
icebp
test
test
cmp
hlt
lods
push
bound
insl
subl
in
hlt
or
add
and
call
rcll
in
aas
int
sbb
in
jo
iret
imul
jge
jbe
add
test
jmp
cmp
enter
daa
add
sti
fsubrp
cmp
insl
push
and
mov
popa
fcomps
pop
iret
pop
out
jmp
and
push
rolb
mov
jbe
adc
fadds
pop
les
mov
enter
addb
cltd
jae
dec
sbb
cmp
in
or
push
ret
fcoms
push
aas
sbbb
fstpl
jbe
add
sub
pop
dec
sti
bnd
popf
sub
gs
out
xor
mov
ljmp
outsb
push
cmp
call
daa
xchg
jbe
popa
sbb
dec
aas
mov
subb
mov
sub
or
inc
testb
push
aas
pop
movsl
std
jne
add
add
fisubs
out
xchg
push
rol
and
lcall
bnd
mov
out
mov
mov
icebp
inc
xchg
sarl
mov
lods
cltd
pop
dec
pusha
xlat
sub
mov
aad
xor
dec
sbbb
hlt
test
xorl
push
sub
sbbb
mov
movsl
stos
lock
mov
outsl
in
cli
jne
xlat
xorb
imul
mov
rorl
cli
lods
shl
jb
out
das
subb
cmp
or
or
lea
scas
jae
inc
loopne
iret
mov
stc
xor
pushf
add
std
lret
push
fldl
xor
lahf
setge
and
and
faddl
dec
cmp
sbbb
mov
cmp
fstpl
cmp
sbb
fdivl
push
inc
outsl
jnp
fs
sub
js
pop
fldl
mov
and
scas
cld
pop
mov
lods
scas
fimuls
imul
xchg
pinsrw
mov
push
inc
in
mov
inc
fwait
inc
inc
push
in
xchg
xchg
xor
mov
jbe
dec
rcrl
loop
orl
in
mov
sub
popf
loopne
sahf
jns
mov
lods
mov
fisttpll
push
mov
mov
inc
sahf
push
push
leave
pop
imul
nop
jle
wrmsr
test
inc
mov
push
xchg
lahf
rclb
and
mov
pusha
jnp
xchg
aam
shlb
add
and
push
imul
arpl
shrb
enter
jg
pop
loop
pusha
loope
cmp
les
ror
outsb
test
fs
pusha
movsb
cs
je
xor
xchg
jbe
inc
and
xchg
mov
and
std
sti
cmpb
stos
pop
ss
stos
cmpb
loop
xor
out
sub
pushf
out
mov
rolb
mov
xchg
fstl
dec
icebp
jge
pop
pusha
sbbb
adc
aaa
add
in
cld
lods
insl
addb
mov
xorb
rdpmc
add
fisttps
mov
scas
les
mov
test
icebp
add
and
cmpb
mov
pop
push
repz
xor
clc
in
scas
jne
mov
sbb
rolb
mov
dec
ljmp
into
adc
enter
and
lret
push
sbb
mov
dec
pop
ror
lahf
sbb
inc
inc
cmpb
mov
and
fdivrs
shrd
jp
adc
push
int3
idivl
aas
pop
adcb
cld
xor
jge
push
jmp
ljmp
xor
subb
add
aas
shll
fcmovnb
jb
dec
js
sbb
cmp
pop
sub
nop
nop
mov
mov
pop
xor
jmp
jg
xorb
fimull
and
jno
mov
dec
jp
add
cmp
pop
adc
cmp
mov
nop
les
fisttps
sti
add
not
stos
and
mov
in
movsb
adc
fldt
fsub
dec
mov
adc
rcrb
loop
push
sbb
push
push
ret
push
shlb
sbb
popf
scas
sarb
daa
orb
cmp
aas
jbe
xor
pop
or
outsl
jne
push
add
out
pop
lcall
cmpsl
jmp
repnz
subb
stos
fnstsw
fidivrs
adcb
sahf
push
mov
movsb
inc
lods
ss
sti
into
lock
lock
jno
rorb
jge
ficoml
popf
popa
xchg
rolb
imulb
mov
jmp
sbb
pop
pop
loop
es
xchg
mov
outsl
push
and
xorb
mov
inc
das
sub
inc
lock
lods
sbbl
repnz
mov
clc
mov
pop
mov
jg
cmp
or
out
xor
jnp
adc
movsb
xlat
inc
jno
pop
adc
loop
xor
decl
jl
andb
and
mov
sahf
sbb
adcb
mov
andb
lods
push
pusha
les
dec
push
lds
mov
xchg
xchg
xor
push
jmp
push
xor
or
imul
mov
sub
add
repnz
xchg
shll
lcall
pop
mov
lcall
push
adc
imul
call
add
cmpb
cmp
or
sar
iret
xchg
imul
add
adc
ja
sub
mov
jo
inc
xchg
push
xchg
stc
scas
out
cmc
push
adcb
mov
xchg
dec
mov
jmp
mul
addr16
lahf
paddd
sub
iret
daa
int
xor
xor
jo
out
mov
pop
leave
ja
cmpb
push
insb
adc
xor
jns
bound
orb
fisubrs
cmpb
jle
sbb
or
sbb
and
rol
loop
inc
adcb
aam
cmp
fists
scas
mov
int
clc
addb
jnp
aas
sbb
leave
shrb
mov
cwtl
repz
inc
fstps
stc
fidivl
or
xor
fidivs
jecxz
and
nop
testb
xchg
cmp
jmp
lods
jb
xchg
adc
cmp
lahf
pusha
mov
daa
arpl
stos
mov
xor
jno
push
jl
push
pusha
jns
lock
lds
cmp
cmp
aas
push
mov
rclb
inc
dec
sbb
hlt
mov
and
adc
inc
cmpsl
cld
insb
orl
mov
sbbb
and
mov
in
ss
pop
ja
and
in
xchg
mov
and
pushf
cs
cli
mov
fiadds
add
pop
inc
pop
or
xor
dec
arpl
out
xchg
fcompl
daa
inc
aaa
mov
sbb
jns
popa
or
mov
xor
sbb
pop
aad
xor
lods
lds
push
dec
mov
sbb
or
xor
jle
out
sbbb
push
dec
addb
cwtl
push
adcb
repz
lods
imul
pop
cmc
pop
add
and
mov
cs
cld
jecxz
add
ljmp
cld
mov
mov
fidivs
adc
xorb
jnp
rol
and
mov
addr16
clc
xlat
mov
pop
inc
jbe
pop
xor
cmp
push
dec
add
ficompl
adc
cli
xor
jno
adcb
jnp
jns
mov
js
inc
push
inc
mov
fdivs
mov
gs
mov
test
ret
inc
pop
sbb
push
nop
daa
es
xchg
inc
xlat
icebp
out
pop
cmpb
sarl
lahf
push
jmp
cld
inc
jno
xorb
lcall
jnp
int3
out
and
and
hlt
lods
scas
dec
cmp
in
cmp
andb
test
xorb
or
stos
add
cmp
shl
push
icebp
adc
loopne
repnz
xchg
rolb
mov
iret
adc
cli
js
adc
rol
rcrl
push
jg
sbb
add
mov
pop
push
fcoms
sbb
pop
sub
subl
ja
mov
addb
fisttpl
movsl
icebp
pop
jb
sub
roll
and
xchg
sbb
or
push
xor
orb
mov
hlt
je
aad
insb
xlat
or
inc
cmpb
cmc
or
jg
mull
sti
cmp
adc
popa
outsl
mov
cmp
pushf
cmp
mov
pop
subb
add
test
les
lahf
xor
leave
subb
daa
cmp
jne
push
test
mov
and
adc
jecxz
or
mov
sub
ret
das
push
sbb
mov
cmpb
pop
mov
push
adc
fdivrl
cmpb
mov
mov
mov
bound
xor
add
scas
cmpsb
insl
stc
and
add
fsubr
mov
push
inc
icebp
lock
icebp
lods
iretw
push
shrb
fs
addr16
leave
fmull
xchg
clc
out
cmp
lods
sahf
xchg
rorb
xchg
call
je
addb
pop
sbb
sub
repz
addb
pushf
dec
dec
add
xor
outsl
andb
xor
mov
leave
adcb
add
imul
sbbb
xchg
sub
dec
pushf
sub
sub
push
call
ja
pop
imul
andb
popf
mov
shrb
push
fwait
mov
xchg
repnz
jecxz
popf
sub
sahf
mov
push
sbbb
push
aas
ja
repz
pop
nop
xchg
outsl
add
and
roll
add
mov
adc
scas
insl
hlt
xor
in
cmp
push
sahf
pop
into
jne
lcall
xor
pop
add
rcrl
pop
flds
inc
push
push
hlt
test
pop
jns
or
fildll
scas
pop
cmp
in
cli
add
insb
sub
gs
add
pop
push
mov
sbb
roll
pop
int
or
mov
push
fwait
cmpb
dec
jmp
inc
cmp
xchg
cmp
sub
add
mov
aad
sbb
jae
pop
nop
psrlw
shlb
mov
leave
addb
aaa
lods
pop
mov
ss
loopne
inc
add
xorb
jbe
fsts
add
jl
jle
enter
ds
int3
adc
adc
rcl
or
xchg
push
insl
dec
jno
dec
cltd
lock
xchg
pop
mov
add
adc
in
add
dec
lock
les
and
ss
gs
ja
test
enter
outsl
lret
ljmp
jno
mov
cmpsb
xchg
call
xorb
sub
addb
movsl
mov
xor
mov
sub
scas
fs
pop
push
fwait
adcb
mov
jecxz
mov
ja
loopne
outsb
leave
dec
and
shl
mov
fidivrl
arpl
add
lods
ja
frstor
cmp
lock
or
addb
cltd
mov
mov
out
rcrb
seta
jne
iret
arpl
imul
and
les
out
push
pop
cmp
in
call
ficoml
jno
sbb
sbb
je
in
add
aas
aaa
rol
sub
dec
nop
sub
loopne
sbbb
xchg
cmpsl
and
mov
xorb
jae
or
dec
jb
lds
insl
pop
xor
aad
jle
mov
mov
es
xchg
test
push
jno
js
pop
cmp
add
scas
fbld
jo
or
sub
add
es
negb
or
mov
int
rorb
xorb
adc
or
and
adc
enter
fstps
sbb
cltd
jle
cmp
add
in
xchg
lods
add
cmpsl
addb
repz
inc
cmp
cmp
lcall
add
jmp
in
cli
repz
dec
movsb
das
cmpsl
or
imul
fs
femms
dec
neg
sbb
arpl
pop
data16
ja
in
aad
in
dec
add
jae
push
data16
scas
orb
out
pop
pop
dec
mov
jo
roll
or
xchg
mull
andb
lret
push
pushf
mov
and
push
pop
stc
mov
fs
pop
mov
lock
adc
sahf
and
mov
jb
push
mov
push
loopne
add
pop
cmp
scas
dec
mov
shrb
sub
and
stc
xchg
mov
cwtl
cmp
jne
lock
dec
sbbb
sub
loope
ret
inc
sbb
xor
gs
and
pop
hlt
test
mov
fnstsw
inc
subb
mov
iret
mov
sub
comiss
movsl
loopne
sub
lret
sbb
add
xchg
mov
mov
and
scas
push
repnz
test
mov
mov
inc
subb
popa
mov
or
call
movsl
xor
mov
cmpl
push
loopne
movsl
inc
popf
xchg
out
cmp
sub
xchg
arpl
push
subb
fcoms
sbb
stc
cmc
outsl
data16
add
jbe
repnz
outsb
stc
ret
je
xchg
into
mov
mov
stc
mov
mov
out
into
out
or
cmp
adc
and
andb
dec
fnstenv
femms
stc
sub
xlat
pop
sub
fmull
pusha
xchg
dec
cmp
lahf
xlat
das
shlb
and
dec
js
decl
lock
push
sbbb
jmp
or
dec
dec
jle
adc
sbb
dec
mov
add
jp
inc
shll
test
xchg
jns
pushf
adc
int
pop
mov
pop
stc
int
jge
mov
ja
rclb
stc
xor
int3
add
or
add
in
sbbb
test
mov
lock
xchg
addr16
fdiv
test
repnz
orb
aam
add
mov
or
mov
xor
ja
fstpt
jb
pop
shrb
mov
mov
pop
and
jg
orb
loope
add
add
cmp
divl
imul
inc
or
mov
cwtl
mov
jg
hlt
repnz
pop
adc
das
int3
mov
je
inc
sub
stc
mov
cmpb
repz
xlat
idivl
add
adc
jnp,pt
loopne
cmp
mov
cmp
pop
pop
popf
mov
cmpsl
out
out
mov
jbe
mov
adc
sbb
mov
cmpl
test
push
das
scas
mov
loope
icebp
mov
addb
mov
aam
push
addb
xchg
in
lret
fsubrl
movsl
jnp
sub
sbbb
push
es
hlt
in
add
xor
push
pop
enter
orb
mov
ds
mov
clc
mov
xchg
mov
add
scas
popf
pop
cwtl
rcrb
incl
push
sub
cmp
lret
fcompl
adc
into
sti
xorb
adc
scas
popf
mov
repnz
popa
sbb
mov
jbe
not
loopne
add
sub
jle
in
dec
icebp
or
sbb
movsl
push
cmpsl
pop
adc
jp
fmull
std
popf
in
and
push
test
pop
cs
arpl
jle
cmp
ja
loopne
or
das
add
add
sahf
stos
andl
mov
loop
dec
imul
inc
fidivl
sbb
das
add
cwtl
or
inc
hlt
mov
push
mov
sahf
js
pop
or
mov
ljmp
filds
push
scas
pop
jmp
dec
cmp
in
ds
int
lods
mov
nop
rcr
jbe
iret
xchg
lcall
mov
cld
pop
add
sbb
sub
xchg
dec
add
fs
ffree
adc
pushf
xchg
inc
jo
adc
mov
cmp
lods
sub
sub
and
ds
fisttpll
pushf
lahf
rcl
mov
scas
adc
mov
xor
push
repnz
xchg
enter
jge
xchg
or
xor
add
xor
mov
popf
and
shrl
in
divb
mov
xlat
sbb
mov
fcompl
xchg
mov
jo
sbb
mov
push
loope
addr16
cmp
inc
xchg
xor
push
pop
sub
jns
das
imul
bound
mov
mov
adc
pop
fmulp
lods
sbb
lret
sbb
xchg
test
mov
loop
inc
fiadds
js
decb
adc
imul
mov
roll
fidivrs
add
sub
ljmp
add
shll
xchg
adc
orb
ss
test
subb
outsl
subb
pop
loop
jns
inc
jle
insl
mov
ljmp
mov
or
in
addr16
sti
movsl
test
push
jge
rclb
in
sbb
sub
sbb
mov
into
xor
scas
cmp
test
pop
arpl
push
int3
fiadds
dec
mov
hlt
push
sbbb
fimull
and
lahf
orb
ficoms
dec
test
subb
outsl
xchg
hlt
leave
sahf
mov
sub
icebp
cmp
cmp
add
inc
xorb
fmuls
daa
imul
fstl
mov
mov
icebp
or
ficomps
pop
sub
lods
mov
lods
es
out
mov
repnz
push
mov
sbb
std
cmpsb
orb
xor
jb
inc
jne
xchg
mov
sbb
hlt
filds
dec
push
adc
push
addb
icebp
jne
add
rolb
xor
cmp
fs
push
pop
out
xchg
imul
mov
lods
repz
sub
cmp
cmp
sbbb
test
lahf
arpl
mov
stos
in
pop
cld
lcall
and
subb
xlat
pop
orb
loop
stos
cmp
sub
clc
xchg
mov
xor
mov
cld
subb
aaa
shlb
mov
pushf
into
mov
test
add
pop
aam
shl
xor
sahf
ret
cld
pop
xorb
mov
and
jno
sbb
and
int
shrl
negl
mov
or
add
or
andb
mov
xchg
pop
outsl
cmpb
or
cmc
aas
add
mov
sbb
adcb
repz
les
or
mov
mov
test
push
or
jle
mov
and
leave
neg
xchg
and
xchg
mov
js
jmp
addb
xlat
or
pop
and
mov
cmpsl
subb
mov
and
xchg
pop
jne
ds
xlat
test
test
add
cltd
sub
dec
add
cmpsb
in
adc
mov
lock
mov
nop
xchg
add
mov
loopne
add
in
ror
push
mov
cltd
orb
int3
cmp
mov
mov
mov
stos
aam
les
mov
xchg
mov
in
adc
push
mov
lods
aam
les
lock
in
rcrb
clc
or
mov
jno
and
sub
lock
mov
pushf
or
dec
aam
adc
mov
mov
ret
and
mov
cwtl
in
mov
push
xchg
aam
mov
clc
mov
push
sbb
jno
jno
daa
adc
les
mov
cmp
or
and
pop
movsb
test
mov
addl
enter
cmpsb
mov
push
cltd
test
xchg
add
mov
add
int3
mov
mov
and
fsubrs
lods
cmpb
mov
pop
cwtl
dec
mov
roll
xchg
stos
test
mov
adc
rolb
in
cmp
xchg
mov
dec
outsb
inc
loope
add
xchg
cmpsb
shrb
jmp
sbb
dec
pop
jl
or
xchg
adc
add
into
mov
cld
test
mov
mov
mov
mov
negb
mov
out
into
pop
mov
xchg
add
mov
ljmp
mov
or
subb
mov
mov
xchg
mov
xchg
xchg
iret
mov
in
subb
dec
jge
test
mov
leave
or
test
mov
into
fisubrs
sbb
fwait
pushf
push
adcb
and
mov
and
test
pushf
sub
pop
rcrb
sbb
sub
sahf
dec
call
lock
movsb
mov
dec
add
fadd
int3
push
pushf
aad
loopne
test
xorb
push
push
mov
and
rcrb
lds
pop
stos
mov
and
adcb
sub
pop
cmp
xor
pop
cld
repz
ret
add
xchg
xor
cli
stos
cmpb
add
stc
scas
sub
std
adc
fmull
ret
nop
iret
iret
xor
imul
and
mov
popa
mov
inc
sbb
jg
add
sub
or
add
mov
sbb
sub
sub
movsl
lods
ffree
movsl
dec
add
daa
cmc
xorl
es
adcl
sbb
in
cltd
and
adc
sbb
mov
mov
loop
mov
sbb
repnz
aam
and
adc
mov
pushf
and
or
xchg
les
mov
mov
repnz
nop
pushf
ljmp
clc
push
loop
mov
in
lea
rorb
lock
mov
mov
stos
or
add
xchg
imul
movsb
xchg
sub
jno
int
xchg
add
mov
repz
cld
data16
les
cmpsb
mov
cmpsb
cmpsb
add
rcrl
and
out
or
or
add
and
test
mov
or
mov
and
push
inc
sbb
or
mov
mov
mov
lods
or
adc
call
adc
add
call
jl
subb
push
dec
pushf
xchg
and
mov
xchg
mov
cmp
mov
mov
movsb
jno
notl
mov
mov
dec
xor
inc
dec
mov
xchg
pop
movsb
fisttps
xchg
in
mov
or
xchg
movsb
sbb
xchg
daa
mov
mov
movsb
dec
dec
aam
pop
mov
mov
sti
mov
dec
setno
sub
mov
mov
mov
xchg
push
lock
ja
std
nop
add
mov
mov
xchg
movsb
movsb
sub
xchg
cmp
mov
fsubs
mov
or
sub
mov
and
inc
cmp
int
push
xchg
fisubl
mov
xchg
jnp
subl
inc
test
das
xchg
mov
cmp
ret
mov
mov
jmp
xchg
jge
subl
mov
dec
xor
inc
dec
mov
xchg
pop
movsb
fimuls
xchg
jmp
jb
inc
jg
test
movsb
sbb
xchg
mov
mov
movsb
dec
dec
rcll
inc
in
mov
mov
dec
push
xchg
xchg
and
std
xchg
sub
mov
mov
xchg
pop
movsb
loop
imul
mov
sbb
mov
mov
movsb
push
dec
xlat
xchg
pop
mov
mov
mov
dec
adc
inc
sub
mov
cmp
mov
mov
xchg
insl
movsb
repz
jp
push
mov
pop
movsb
lea
xchg
lcall
mov
cmp
mov
mov
xchg
outsl
movsb
cmc
dec
jl
xorb
or
mov
xchg
test
cmp
pop
fidivs
or
mov
inc
mov
scas
add
jne
popa
add
pop
mov
bound
loop
mov
fs
data16
sahf
ljmp
push
dec
pop
push
mov
or
lcall
mov
sahf
imul
loop
in
sahf
outsb
jb
mov
or
jno
mov
or
fsubs
sti
ret
sahf
sahf
and
call
inc
jno
xchg
cmc
mov
sahf
jns
test
ja
jl
inc
int
mov
lock
inc
jns
mov
clc
jp
les
cli
cmp
jnp
fdivr
or
lcall
mov
sahf
pop
and
call
les
mov
jp
ficompl
test
mov
data16
imul
enter
push
in
adc
outsl
add
icebp
jb
adc
xchg
push
pop
lods
movb
jmp
jns
or
adc
scas
mov
ret
adc
icebp
lds
adc
or
adc
mov
lret
jg
into
nop
adc
xchg
icebp
rcll
cmp
inc
aam
mov
xlat
adc
ficoml
fstpl
mov
loopne
mov
jecxz
mov
out
mov
jmp
inc
in
lahf
mov
out
and
mov
and
in
call
sbb
movsb
jns
and
mov
adc
es
jns
or
mull
lcall
sub
push
sahf
loopne
test
sub
push
cmpsb
sub
adc
leave
stos
adc
sub
in
mov
and
popa
inc
test
inc
dec
aad
daa
lods
or
clc
mov
fwait
scas
repnz
mov
and
loop
scas
sahf
loope
test
xor
in
mov
mov
sahf
jns
test
mov
sbb
inc
dec
in
push
aas
mov
mov
cmp
cmp
mov
stc
lcall
mov
sahf
adc
adc
mov
test
and
in
call
sbb
mov
jns
cmp
adc
mov
adc
cmp
xlat
mov
and
insb
and
jg
adc
mov
cmpl
aas
in
call
jnp
mov
jle
mov
add
les
lds
icebp
inc
adc
inc
icebp
enter
or
dec
mov
into
lret
lret
inc
rorl
dec
inc
aam
mov
xlat
dec
mov
fcmovbe
mov
fstl
pop
push
inc
loopne
mov
jecxz
mov
out
mov
stc
push
dec
pop
or
lcall
mov
sahf
test
push
call
jp
lret
fisttpl
mov
adc
icebp
xchg
pop
mov
sahf
push
and
xlat
call
cli
push
dec
pop
or
loopne
mov
popa
jns
bound
mov
or
in
mov
gs
in
hlt
ljmp
jns
test
mov
orl
fmull
scas
dec
xchg
lods
lret
mov
push
add
inc
mov
xchg
sub
cwtl
pop
cwtl
lahf
xchg
xchg
inc
insl
test
ljmp
or
xchg
lahf
mov
cmp
push
aas
xchg
pop
stos
in
in
out
mov
or
add
ficoml
adc
adc
and
adc
ret
xchg
sbb
movsb
repnz
sahf
call
and
adc
loop
fwait
xor
adcl
lcall
adc
adc
dec
fcoms
adc
jo
loop
jo
push
xchg
mov
mov
mov
test
stos
in
mov
ljmp
sbb
repnz
scas
sbb
aaa
repnz
mov
mov
or
mov
and
cmp
in
dec
mov
mov
lcall
lcall
mov
orb
enter
sbb
mov
cld
xchg
mov
adc
mov
enter
xchg
mov
pop
enter
sub
and
loop
mov
cltd
mov
adc
adc
cmp
sbb
loop
cmp
enter
adc
dec
lret
cmp
mov
int3
mov
inc
dec
mul
mov
into
adc
icebp
pushf
mov
sbb
shl
mov
pushf
repnz
xchg
mov
enter
cmp
and
movsb
xchg
repnz
xchg
shlb
adc
enter
or
fdiv
pop
sahf
cmpsb
mov
ficoms
sbb
int3
mov
in
xchg
sahf
repnz
mov
loop
xchg
icebp
cwtl
cmp
ljmp
inc
dec
mov
in
repnz
sahf
in
mov
call
mov
cmpsb
xchg
and
adc
cld
lret
test
in
repnz
sahf
out
fcoms
sbb
mov
xchg
adc
enter
sbb
repnz
nop
dec
mov
hlt
repnz
or
and
adc
lcall
sbb
mov
movsb
int3
lret
call
test
cli
sbb
mov
and
loop
cmp
add
mov
mov
mov
adc
mov
xchg
orb
mov
dec
rclb
es
xchg
fsubl
ret
xchg
popf
and
cmpb
into
int
add
adc
or
xchg
out
push
repnz
dec
pop
in
repnz
add
and
adc
icebp
movsb
mov
sbb
dec
lret
dec
test
xchg
repnz
repnz
xchg
xchg
aas
sbb
mov
inc
dec
mov
mov
adc
mov
mov
dec
adc
lcall
stos
mov
xor
fisubl
add
ret
mov
xchg
stc
ljmp
add
xor
mov
loop
adc
into
cmpsb
fucom
loop
repnz
fcompl
js
cmp
ficompl
out
das
icebp
xorb
popa
mov
mov
cmpsb
das
mov
xchg
stc
rorb
inc
out
adc
pop
in
das
repnz
fimuls
mov
cmp
scas
pop
in
das
repnz
xchg
stc
ljmp
mov
cmp
mov
shll
fidivs
js
xor
enter
cmpsb
cld
adc
mov
notl
fidivl
push
ret
outsb
cli
faddl
dec
out
xchg
mov
out
test
mov
stc
rcrb
sbb
or
cli
push
fimuls
icebp
xor
fidivs
js
cmpsb
pop
movsl
icebp
call
jmp
sarb
push
ljmp
or
jp
mov
jle
sbb
enter
or
aas
leave
push
test
jl
in
adc
cltd
orb
mov
pushf
adc
xchg
out
or
mov
into
push
or
sbb
aam
mov
add
lcall
cmpb
ror
mov
adc
pushf
xchg
push
sbb
enter
or
repnz
add
mov
fmul
mov
rclb
inc
les
mov
movsb
out
ljmp
in
sub
mov
cwtl
enter
push
mov
in
test
add
mov
mov
xchg
adc
stc
ljmp
cmpsb
xchg
call
bound
adc
sbb
mov
xchg
inc
dec
cli
in
leave
xchg
mov
sahf
stos
mov
mov
mov
mov
or
loopne
cwtl
xchg
adc
fcoms
test
enter
mov
mov
arpl
and
adc
out
cld
test
cmp
lcall
cltd
sahf
adc
aaa
test
lcall
push
mov
movsl
push
fadd
rorb
aam
mov
repnz
xchg
scas
movsl
mov
adc
sub
aam
push
sbb
and
xchg
xorb
xor
fsubs
enter
in
cmp
shlb
in
and
loop
fdivs
sbb
adc
fmuls
mov
in
mov
sbbb
xchg
jno
sbb
and
xchg
ret
pop
fmul
xchg
adc
int3
mov
sbb
and
xchg
lret
pop
fmul
xchg
adc
cwtl
fstps
push
sbb
and
mov
adc
mov
cltd
shrb
mov
test
or
mov
shl
loop
sahf
sahf
mov
sahf
pop
fadds
stos
nop
clc
sbb
test
fiadds
nop
out
cld
and
loop
cwtl
push
sbb
call
out
xchg
sbb
fcmovb
ljmp
test
lods
loop
pop
mov
xchg
lods
push
sbb
and
xchg
repnz
sub
fmul
xchg
adc
adc
clc
sbb
or
sbb
fdiv
test
mov
notb
lcall
inc
in
adc
jns
pop
mov
fdivrs
or
jnp
negl
inc
dec
cld
in
lret
in
repnz
mov
mov
nop
jp
into
or
addb
mov
aam
fnstcw
mov
lret
mov
jae
adc
dec
cwtl
jns
push
sbb
and
xchg
pushf
movsl
dec
pop
fmul
test
fwait
in
xchg
fstl
fsub
xchg
mov
stc
mov
sub
fadds
jmp
adc
dec
test
jmp
js
in
mov
lods
sub
push
sbb
adc
movsl
fstpl
enter
repnz
mov
push
sub
mov
mov
cwtl
adc
rcr
mov
mov
add
jecxz
sub
push
test
pushf
enter
pop
mov
inc
imul
les
cmp
in
mov
xchg
fbstp
movsb
sbb
dec
rclb
insl
dec
cmpsb
in
cmp
mov
or
ljmp
mov
lods
dec
sub
adc
pushf
lods
add
cli
sahf
shlb
jne
insl
test
mov
loop
and
mov
les
inc
repnz
je
adc
loopne
clc
adc
in
mov
cld
jne
fmul
mov
mov
popa
jno
and
mov
in
repz
and
adc
loope
nop
rorl
inc
dec
mov
xchg
mov
mov
imul
xrelease
imul
jne
mov
ss
test
sub
test
adc
ljmp
mov
sbb
ds
sub
test
arpl
in
std
movsl
enter
enter
adc
cs
rolb
ja
pop
mov
sub
cwtl
enter
loop
test
sub
repnz
mov
arpl
lods
push
aas
rorb
or
ja
pop
fsubl
fsub
mov
neg
pop
clc
dec
or
mov
mov
or
in
mov
mov
and
adc
repnz
clc
int
or
fmuls
fs
movsb
addr16
mov
inc
les
in
xchg
mov
mov
xchg
shlb
fmulp
xchg
jns
in
les
mov
and
into
repnz
loop
adc
adc
adc
enter
gs
rorl
xchg
sahf
mov
and
repnz
xchg
fsubrs
mov
add
mov
add
and
loop
sahf
fsubs
push
rorb
out
mov
in
loopne
lahf
dec
lock
mov
rorb
xchg
adc
or
adc
in
mov
call
nop
inc
dec
mov
in
lret
nop
outsl
orb
out
ficomps
mov
or
mov
lock
cmp
mov
decb
in
mov
das
stc
mov
cld
daa
mov
pop
jns
or
repnz
test
or
cltd
sub
lock
mov
mov
mov
xchg
xchg
sub
mov
enter
push
pop
pop
addb
aam
xor
xchg
enter
cli
push
xchg
dec
imul
in
nop
shl
scas
sahf
lods
mov
scas
xchg
adc
jns
call
aaa
andb
fmul
add
imul
lret
imul
mov
or
in
imul
cltd
xchg
dec
adc
dec
mov
mov
mov
sbb
les
push
jle
push
test
dec
jns
push
les
mov
mov
mov
adc
pop
adcb
mov
jns
ljmp
test
mov
int3
lret
in
repnz
shlb
pop
test
or
out
aam
sub
jns
jmp
fadds
xchg
fcoml
cmc
dec
aam
sub
ret
mov
pusha
icebp
hlt
jmp
xchg
xchg
enter
insb
mov
and
shl
movsb
popa
repnz
pop
and
xchg
mov
pop
adc
in
or
sbb
inc
dec
mov
pop
movsb
adc
lret
in
cmp
inc
mov
repnz
movsb
pop
repnz
or
xchg
bnd
adc
insl
pop
mov
and
loop
in
mov
xchg
loopne
cld
mov
loop,pn
in
xor
jo
repnz
in
mov
add
pop
test
cmp
int
nop
cmpsl
aam
in
mov
sub
clc
dec
into
in
mov
mov
dec
xchg
rorb
out
out
pop
cmp
pop
lea
out
or
adc
in
mov
mov
adc
icebp
les
mov
fsubrs
clc
mov
jns
outsl
mov
in
jecxz
mov
mov
out
or
adc
in
cmp
push
cmpsb
mov
push
loop
jo
std
jecxz
cwtl
ret
test
loopne
pushf
icebp
mov
pushf
mov
or
hlt
mov
in
pop
icebp
mov
sbb
mov
out
xlat
inc
dec
in
in
dec
xlat
jl
and
adc
loopne
aam
ljmp
or
pop
push
fldl
or
and
or
mov
in
lret
in
repnz
out
icebp
xchg
lock
xchg
repnz
sahf
mov
js
stc
sbb
jb
cli
lret
in
push
xor
test
fiadds
cmpsb
xchg
roll
insb
push
in
adc
in
mov
dec
rcll
mov
adcb
repnz
xchg
xor
or
cmp
adc
repz
sub
in
cmp
movsl
cmpsb
xchg
xchg
and
loop
je
xchg
xchg
int3
mov
adc
dec
lcall
mov
sahf
pop
xlat
in
mov
out
loop
sbb
mov
inc
les
repnz
mov
xchg
adc
add
in
andb
adc
mov
sbb
mov
mov
fs
mov
xchg
xchg
mov
mov
enter
jbe
icebp
xchg
gs
or
jbe
mov
out
sbb
or
not
cwtl
fnstenv
or
jge
enter
testb
dec
in
imul
aaa
sub
in
mov
movb
movsb
adc
repnz
lcall
enter
testl
adc
testl
enter
js
rolb
and
mov
mov
dec
dec
test
mov
fimull
in
mov
test
lods
mov
test
adc
clc
mov
inc
mov
adc
mov
test
mov
cmp
jns
out
cmp
repnz
lcall
sbbb
or
out
xchg
pusha
cmpsl
mov
test
inc
sahf
or
movsb
outsb
sarl
inc
repnz
movsb
imulb
in
repnz
and
xchg
cli
and
adc
pop
and
nop
cli
mov
xchg
mov
or
sar
test
out
cltd
xchg
sbb
dec
mov
mov
jnp
test
dec
pop
andb
push
icebp
jnp
mov
pusha
mov
jnp
nop
cwtl
repnz
nop
sub
sbb
dec
ret
dec
mov
andb
adc
icebp
sti
sbb
rorb
jl
pushf
sub
adc
enter
sbb
lea
adc
movsb
adc
lods
mov
repnz
sahf
fisubl
inc
outsl
orb
jge
mov
fdivrl
push
xchg
enter
sbb
in
mov
ljmp
sbb
cmp
shrb
cmpsb
test
and
fdivr
mov
xchg
inc
mov
or
cmpsb
jl
and
adc
movsl
xchg
test
call
dec
call
call
mov
adc
aam
xchg
sbb
ljmp
mov
mov
jg
fsubl
insl
add
cmp
pop
dec
lea
inc
cmpsl
mov
xchg
mov
cmp
xchg
dec
mov
mov
call
xchg
jl
addb
or
xchg
and
mov
mov
xchg
push
movsb
fisttpll
xchg
ljmp
test
jmp
or
sahf
movsb
and
mov
mov
movsb
pop
dec
fists
inc
stc
mov
xchg
xchg
orb
mov
xor
mov
dec
dec
xchg
aam
pop
loope
push
movsb
sti
les
orl
xchg
sbb
mov
movsb
ss
mov
push
inc
mov
jecxz
push
lock
ja
std
add
add
xchg
push
movsb
movsb
dec
sub
inc
inc
mov
xchg
push
movsb
fmuls
xchg
in
insb
repnz
jns
call
movsb
adc
xchg
and
mov
xchg
shlb
fisubl
out
outsb
xchg
hlt
movsb
jnp
addl
mov
movsb
test
das
xchg
mov
cmp
inc
dec
mov
xchg
push
movsb
fmull
xchg
jmp
jge
add
or
xchg
pop
mov
mov
xchg
mov
ds
les
inc
fimuls
jb
clc
xchg
jg
test
or
inc
sbb
lods
dec
xor
mov
jne
dec
movsb
testb
add
lcall
ret
sub
mov
adc
incb
loop
shlb
cmpsb
adc
or
into
inc
jmp
loop
and
mov
fdivs
mov
push
call
jle
mov
jg
movb
cmp
es
out
push
fdivr
adc
sub
mov
pop
jne
rcr
xchg
and
stos
mov
mov
pop
mov
sub
stc
mov
jp
xchg
adc
sub
rcr
out
pushf
dec
pusha
adc
movsl
cmpsb
or
cltd
andl
adc
adc
into
outsl
icebp
mov
or
sar
in
fidivrs
mov
pushf
insl
insb
lret
cmpsb
push
adc
fsubs
repnz
mov
stc
fimuls
cmp
mov
sub
in
scas
or
jmp
xlat
cmpsb
rcl
xchg
fsubl
xchg
movsl
int3
jns
ret
mul
scas
mov
and
popf
adc
test
mov
orb
push
loop
ljmp
adc
add
lcall
dec
mov
push
mov
or
repnz
movsb
leave
sub
into
fisubrs
mov
add
imulb
enter
mov
add
sahf
mov
sub
int3
out
adc
jbe
icebp
mov
jge
push
in
int3
jge
lret
pop
adc
cmp
pop
adc
dec
cmpsb
mov
sbb
js
cmpsb
mov
adc
mov
andb
dec
mov
daa
clc
jp
xchg
adc
subb
cmpsb
mov
lods
scas
mov
mov
rolb
gs
les
into
stc
out
dec
jne
jp
adc
mov
lods
pushf
sbb
fists
cmpsb
ret
outsb
lcall
add
push
fnstenv
cmpb
adc
lds
mov
cltd
stos
adc
push
pop
xor
or
adc
cmpsb
pop
movsb
jge
mov
adc
repnz
ret
pop
in
dec
dec
adc
ffreep
xor
ljmp
add
stc
enter
cmp
mov
mov
jmp
in
imul
mov
into
sbb
stos
and
xchg
adc
out
enter
push
pushf
dec
and
pushf
movsl
cmpsb
pop
mov
ret
mov
outsl
dec
mov
adc
adc
adc
movb
mov
stc
fimull
rolb
jns
leave
adc
push
enter
cmpsl
mov
cmpsb
subb
lods
jns
dec
adc
movb
mov
cmp
cmpsb
mov
or
mov
icebp
out
mov
cli
push
fimuls
mov
into
out
adc
fsubrs
adc
cmp
mov
jno
jmp
repnz
xchg
mov
mov
adc
or
inc
repnz
mov
outsl
loope
dec
pop
mov
cmpsb
push
jo
sahf
shlb
fdivrl
into
mov
lret
jge
sub
notb
adc
ficoms
mov
test
outsb
mov
mov
out
push
in
icebp
orb
outsl
loop
jne
mul
stos
mov
mov
shrb
mov
push
cli
loop
lds
mov
dec
sbb
cmpsb
stos
pop
add
fmulp
dec
aam
or
mov
xchg
xchg
mov
pop
jns
movsl
mov
bnd
or
cwtl
pusha
push
ljmp
loop
lret
cmpsb
lret
cld
mov
mov
nop
pop
adc
push
stc
testb
pusha
mov
jge
push
in
jo
mov
andl
fisubrl
inc
repnz
arpl
xchg
push
mov
in
outsl
jae
push
mov
fdivrl
out
imul
out
mov
mov
mov
dec
movsb
cli
loop,pt
lret
insl
fisubs
mov
repnz
xchg
jo
xchg
mov
pushf
cmc
adc
mov
push
ret
dec
js
ljmp
xchg
jo
xchg
dec
jl
cmpsb
push
mov
outsl
dec
mov
pop
cwtl
jge
scas
mov
out
sub
loop
mov
mov
jnp
cmp
inc
hlt
add
ds
out
incb
xchg
dec
jl
fbld
pop
adc
in
imul
out
jns
into
xchg
ds
repnz
fnstenv
scas
mov
sub
out
pusha
or
lcall
scas
dec
xchg
ds
dec
pop
jge
decb
mov
xchg
iret
mov
mov
mov
pop
loop
iret
push
js
mov
jl
imul
js
and
leave
add
subb
out
adc
cld
mov
sahf
mov
mov
and
push
mov
fimull
out
inc
call
adc
inc
mov
mov
xchg
sub
loopne
adc
mov
rclb
in
out
lret
xor
ds
cld
mov
push
mov
cmp
pop
call
sar
repnz
mov
inc
hlt
add
mov
scas
repnz
ljmp
mov
push
ds
mov
lods
mov
inc
mov
test
mov
aam
xor
mov
fisubs
add
jno
lea
fs
pop
adc
xchg
mov
mov
mov
les
pusha
sbb
mov
loopne
pop
jo
lea
popa
test
pop
jmp
mov
xchg
in
inc
mov
addr16
mov
loope
adcl
sbb
paddsb
and
test
lock
inc
mov
enter
je
insb
mov
push
jbe
dec
jno
movsb
testb
pop
ja
js
dec
ret
jge
lret
adc
inc
mov
jg
or
pushf
jb
add
stos
orl
pop
pop
pop
pusha
xchg
or
xor
adc
mov
push
mov
cmp
out
pop
loop
sbb
cmp
inc
les
loop
adc
sbb
mov
sbb
pop
mov
adc
and
insb
adc
and
or
and
ss
pop
out
cmpsb
mov
xor
test
std
mov
dec
ss
cmp
mov
jns
mov
sub
icebp
loope
adc
mov
call
out
loop
adc
mov
jns
aas
mov
ret
out
icebp
addr16
adc
jp
sahf
mov
stc
mov
mov
jle
les
mov
push
pushf
jae
and
orl
jns
test
or
add
test
addr16
sbb
shlb
or
or
push
ret
mov
out
adc
or
leave
icebp
add
mov
adc
adc
ret
pop
mov
xchg
fs
dec
pop
push
cwtl
xchg
or
dec
adc
xchg
mov
out
xchg
loop
adc
pop
or
cwtl
mov
add
and
mov
sbb
loop
pushf
sahf
push
mov
mov
mov
mov
add
jns
mov
fisubs
adc
and
movsl
sahf
mov
cmpsb
loop
daa
mov
mov
test
mov
mov
lods
sub
or
les
lods
adc
icebp
fwait
sbb
and
pop
mov
mov
inc
les
xor
mov
or
mov
pop
or
inc
loop
ret
xor
mov
sbb
rcll
jl
add
loop
adc
mov
mov
or
add
mov
cmp
xor
test
adc
mov
ret
mov
mov
mov
les
mov
test
mov
fs
inc
adc
je
dec
ret
jbe
loope
mov
sti
cwtl
adc
les
lea
add
inc
inc
out
add
in
push
jg
xchg
rcll
xor
or
fsubs
filds
pop
fimuls
lock
in
sbb
lret
mov
test
mov
mov
xchg
rorl
dec
scas
leave
test
stos
mov
push
scas
or
inc
push
les
mov
and
call
xchg
xchg
scas
repz
xchg
sbbl
in
xor
jae
cwtl
repnz
test
in
clc
jge
cmpsb
cwtl
testb
loop
and
inc
icebp
les
sahf
sub
loopne
adcb
dec
cwtl
les
xchg
sbb
fdiv
mov
enter
and
pause
adc
lahf
and
xchg
xchg
mov
xchg
xchg
adc
mov
or
faddp
mov
mov
adc
or
mov
enter
sub
in
enter
sbb
push
in
cld
repz
mov
clc
mov
movsb
mov
mov
cwtl
adc
mov
mov
fidivl
add
int3
cmpsb
inc
movsb
rclb
in
in
mov
xchg
hlt
movsb
clc
les
cld
or
add
lcall
es
sub
dec
in
sbb
cmp
adc
add
les
fcoms
inc
testb
test
mov
mov
dec
mov
lret
mov
xchg
movsb
fimull
xchg
call
sub
mov
pushf
movsb
mov
mov
mov
dec
rclb
inc
clc
or
lcall
xchg
shlb
or
xchg
scas
movsb
mov
mov
test
xchg
lods
movsb
mov
mov
sub
stos
dec
mov
loop
lock
xchg
mov
dec
mov
shlb
lock
cld
mov
dec
mov
les
mov
xchg
out
movsb
cli
les
sahf
mov
mov
xchg
aam
fimull
xchg
out
in
repnz
clc
mov
xchg
test
mov
xor
push
mov
cmp
mov
xchg
int3
mov
mov
xchg
ljmp
nop
subb
lcall
mov
mov
movsb
lret
xchg
mov
mov
xchg
hlt
movsb
cli
fcoml
inc
nop
mov
dec
stos
xchg
mov
mov
inc
ret
xchg
movsb
in
repnz
pushf
mov
dec
ficoml
mov
mov
dec
fcoms
mov
mov
xchg
in
repnz
das
fldcw
xchg
xchg
xchg
movsb
lcall
stos
inc
scas
mov
dec
in
lock
xchg
inc
mov
movsb
les
xchg
fsubl
or
pushf
movsb
test
mov
faddl
add
imulb
jne
rolb
nop
xor
loopne
pushl
add
mov
mov
rol
mov
inc
pop
cmp
mov
adc
xor
loopne
mov
add
sti
addb
test
pop
add
call
push
fucomip
pop
repnz
popa
pusha
xchg
mov
fcmovu
sbb
lret
ljmp
sarb
cmp
cld
ret
test
sbb
lcall
add
hlt
loopne
mov
dec
cmpsb
pop
push
xlat
adc
xchg
ror
cmc
orb
add
cltd
jbe
pushf
subb
sbb
andb
in
or
adc
cmpsl
xchg
push
inc
jmp
andb
xchg
aad
push
inc
push
pop
jae
pop
mov
loop
mov
fdivrs
mov
test
cmpsl
lods
cwtl
cmpsl
xlat
jmp
sbb
std
shlb
adcb
cmp
popf
scas
test
mov
aaa
nop
mov
stc
daa
and
cmp
repnz
mov
cmp
mov
sub
iret
mov
cmp
push
push
fwait
xchg
sub
jbe
incl
xchg
sahf
or
cmpsb
adc
ret
js
inc
addb
mov
subb
mov
mov
repz
in
mov
add
popa
jbe
xor
jmp
out
sub
xlat
test
popa
call
je
mov
cwtl
mov
lcall
popf
cs
aaa
add
inc
lret
cmpsl
or
add
mov
aas
test
aam
fistl
in
inc
sbb
pop
or
test
and
dec
mov
ficoml
cmc
pusha
stc
cmp
xchg
jno
add
adcl
data16
fcmovnbe
addr16
insb
xchg
fwait
mov
cmpsl
test
scas
jmp
pop
repz
test
dec
das
xchg
push
xchg
fldlg2
test
out
add
pop
jb
mov
addr16
mov
mov
mov
loop
jno
push
sub
inc
mov
pop
xchg
push
pusha
imulb
nop
xchg
xchg
fsubs
or
insl
xor
daa
or
in
popf
fisttps
cmpsb
lods
stos
mov
repnz
mov
xchg
mov
hlt
or
mov
lcall
jmp
mov
loop
enter
jmp
xor
repz
fdivr
mov
xor
mov
pushf
add
loopne
push
repnz
push
add
mov
stos
inc
and
cwtl
xor
in
or
xor
mov
out
mov
ja
aam
xor
mov
inc
mov
icebp
aam
and
lcall
int
pop
cmp
mov
cli
sar
mov
in
imul
and
push
or
sahf
movsl
mov
sub
sub
xchg
test
lcall
lea
imul
xor
ljmp
and
mov
and
mov
pop
leave
push
or
lea
xchg
mov
xchg
add
cmp
or
mov
cmp
je
xor
out
nop
fnstenv
mov
adc
sub
fsub
sahf
imul
cmp
sub
jmp
sahf
leave
mov
test
cmp
movsb
inc
mov
xchg
push
movsb
sub
das
outsl
fbld
dec
rcr
les
xchg
mov
xor
int3
jmp
mov
aam
or
xor
and
mov
ljmp
je
jge
adc
leave
int
mov
movsb
xchg
mov
mov
pushf
mov
mov
and
addb
mov
mov
and
inc
xchg
into
or
xchg
xor
inc
mov
icebp
enter
sbb
mov
mov
mov
icebp
ljmp
mov
lcall
into
mov
pmuludq
adc
cmc
aaa
mov
and
adc
mov
enter
cmp
into
sbb
arpl
push
movsb
subb
xor
aaa
nop
xor
movsb
in
imul
mov
push
out
xchg
or
add
add
sti
adc
sahf
addb
mov
ret
mov
cmp
sub
shl
movsl
dec
call
out
xchg
inc
sub
or
push
mov
faddp
rcl
cmp
aam
push
cmp
mov
pushf
int3
fcompl
into
scas
out
or
adc
or
les
fwait
push
sbb
cltd
jp
mov
dec
xchg
fwait
test
negb
in
cmp
outsb
dec
fwait
into
fcompl
xor
int
mov
push
lock
sbb
fwait
mov
sbb
lcall
sbb
prefetchw
sub
and
pushf
rorb
iret
or
inc
sbb
push
stos
loop
pop
xchg
jno
or
sbb
lds
mov
sbb
sbb
mov
lret
adc
xchg
into
movsb
cmc
mov
rcr
ret
test
mov
arpl
aaa
repnz
cmc
dec
dec
mov
fimull
leave
xchg
mov
fistpll
fmuls
jns
cmp
sbb
jae
xor
xchg
nop
sbb
sub
test
push
movsb
mov
test
xor
loop
push
out
loop
lcall
sub
test
lcall
data16
sbb
pop
cmp
sbb
popf
or
sbb
fsubl
lret
test
push
lcall
sbb
or
addr16
test
push
call
pushf
lods
movsl
pop
andb
push
lret
cwtl
test
popf
add
sub
popa
cmp
dec
stos
fwait
jmp
fdivrs
pushf
xor
jle,pn
pop
loopne
xchg
dec
enter
hlt
adc
test
test
clc
xchg
aaa
enter
int3
gs
mov
sarl
scas
sub
lock
js
fwait
push
jnp
pop
mov
mov
cltd
int
arpl
xchg
xor
dec
cwtl
push
cmpsl
xchg
fsubl
lcall
int3
mov
pop
loop
pop
fs
loop
jno
sahf
sbb
jns
mov
rorl
leave
scas
lea
dec
test
sbb
repnz
int
in
xchg
ret
or
sbb
or
sbb
mov
pushf
mov
sbb
dec
mov
lcall
faddp
add
pop
bound
loop
cmp
andb
cmp
inc
mov
jb
in
jecxz
outsb
sub
xor
or
fwait
iret
or
hlt
repnz
pushf
rcl
cld
sahf
sbb
sbb
mov
shll
and
test
adc
call
ljmp
mov
xor
mov
xchg
repnz
stos
add
xor
out
mov
jmp
in
int3
test
movsb
mov
mov
add
hlt
add
inc
add
into
add
mov
or
cmp
sbb
lret
rdtsc
out
popa
mov
inc
mov
or
aaa
xor
enter
mov
popf
xor
sbb
xor
cmp
sbb
or
xor
and
mov
mov
subb
nop
movsb
movsb
xor
mov
jecxz
xchg
jno
sbbb
xchg
adc
lea
add
rolb
xchg
xchg
mov
xchg
sub
sarb
jmp
jmp
test
lsl
mov
inc
lods
xchg
xchg
fiaddl
stos
lock
pop
mov
xchg
int3
orb
aam
out
sahf
mov
in
and
imulb
cmpsb
ret
mov
roll
add
in
adc
out
ret
xor
xchg
dec
int3
mov
clc
push
xor
loope
xor
mov
mov
fcomps
test
xchg
and
in
mov
shll
mov
lcall
nop
cmp
stos
cmp
mov
mov
and
cli
inc
pop
dec
and
test
adc
xchg
icebp
les
sbb
xchg
xchg
shrb
cmpb
mov
nop
sbb
jecxz
sbb
fwait
mov
stc
in
sub
daa
add
mov
sub
mov
xchg
lods
sub
mov
inc
sarb
xchg
rolb
pop
ret
mov
call
mov
xchg
add
jmp
lea
add
movsb
inc
cmpsb
mov
dec
in
leave
mov
int3
xor
mov
mov
and
js
movsl
lods
stos
mov
pop
cmpsl
cmp
cmpb
test
stos
aas
rolb
cmp
add
orl
popf
cmp
adc
add
cmpsl
fdivr
out
mov
dec
fimuls
inc
inc
or
les
and
cwtl
mov
test
mov
mov
mov
stc
scas
pop
mov
addr16
mov
int
inc
loopne
and
cmpsb
cmp
loope
mov
stos
shll
push
nop
dec
daa
xchg
test
mov
add
mov
enter
movsl
push
xchg
sub
mov
sarb
or
movsb
add
and
sbb
mov
cmp
inc
mov
or
ret
lea
inc
mov
cmpsl
int3
pushf
cmc
addb
mov
cli
stos
rcrb
test
mov
rolb
les
stos
adcl
mov
xchg
pop
clc
loop
pop
ret
aam
or
pop
xor
mov
inc
xchg
xor
fwait
lcall
mov
aas
pushf
inc
inc
mov
sub
dec
fsub
sahf
imul
stos
mov
mov
sbb
inc
mov
xchg
mov
mov
movsb
xchg
mov
into
cmpsb
and
mov
int3
fwait
daa
inc
cmpsb
lret
inc
mov
sbb
mulb
push
mov
stos
lret
in
imul
int
mov
adc
loope
sbb
ret
stos
stc
mov
adc
push
sub
call
lea
int3
loop
mov
pop
aaa
jb
push
movb
xchg
push
push
lret
mov
dec
repz
sub
icebp
cwtl
cmp
jmp
pop
sbb
mov
je
jge
mov
mov
test
fdivrs
jae
imul
loop
adc
fsubl
inc
mov
mov
mov
xor
xor
loopne
in
mov
fiadds
stos
call
out
ljmp
shrb
xchg
ret
ss
out
adc
mov
stos
mov
mov
inc
push
and
add
sub
mov
mov
inc
pushf
xchg
cltd
shrb
ss
cmc
movsl
cmpsl
loop
cmp
mov
and
ret
data16
jmp
ret
adc
adc
sub
stc
sub
pop
mov
mov
stc
cmp
in
jae
lds
int3
test
mov
cmp
mov
ret
mov
mov
mov
stos
mov
xchg
sbb
push
int3
sarl
fsubrs
jnp
movsb
nop
lcall
xlat
sbb
mov
repz
xchg
cmpsb
adc
cmp
cmp
xor
rcrl
int
mov
mov
and
xchg
and
addb
insl
cmpsl
push
in
and
push
cmpsl
jp
inc
xchg
adc
mov
dec
std
sysexit
dec
xchg
test
xchg
enter
mov
ja
xchg
or
xchg
mov
xor
icebp
andb
stos
sbb
mov
mov
addr16
mov
xchg
mov
sbb
lcall
jg
ljmp
in
cs
shlb
mov
and
test
andb
dec
iret
stc
subb
cli
inc
xchg
in
mov
xor
mov
test
ret
push
adcl
sbb
xor
test
sub
daa
mov
mov
movsb
aaa
out
mov
sub
inc
int3
xchg
xchg
out
ja
iret
push
les
pusha
out
cmpsb
xor
dec
or
add
xchg
mov
or
sub
test
mov
movsl
out
xchg
lods
ret
pushf
sahf
ret
ret
sub
mov
das
shlb
rolb
lods
stos
jle
cmpsl
mov
jl
aam
call
or
mov
enter
jecxz
shlb
jl
push
mov
shlb
int3
jecxz
addl
inc
imul
mov
xchg
sbb
ret
aaa
clc
cs
mov
sahf
pop
cmp
and
sbb
cltd
cmp
xor
aaa
mov
cmp
mov
aad
mov
shll
gs
call
cmp
pop
cmpsl
lods
cs
sub
icebp
cmc
test
das
push
les
movsb
mov
xchg
adc
es
sbb
pop
lock
xor
mov
hlt
sbb
jle
cli
inc
xchg
mov
push
arpl
enter
adc
rorl
test
inc
idivb
jae
mov
les
sub
and
xchg
movsl
ljmp
sarl
mov
xor
mov
fadds
pushf
xchg
nop
sub
test
aaa
fstl
in
sbb
mov
mov
nop
fnstcw
popf
lea
into
mov
ss
add
test
sub
es
outsl
clc
or
adc
xchg
lods
add
adc
xchg
xchg
aam
filds
mov
mov
clc
jle
insb
mov
ret
jecxz
inc
lcall
test
fwait
test
test
mov
push
jns
mov
jle
js
cwtl
test
imulb
xchg
sub
add
shrb
xor
cmp
sub
mov
xor
popf
sbb
xor
mov
xchg
cmpsb
loopne
xor
cli
xchg
inc
mov
push
sub
out
mov
sbb
cmpsb
sbb
loop
cmp
sbb
dec
mov
test
mov
ret
aam
mov
jno
hlt
xchg
in
mov
jb
shl
out
into
cmc
loop
push
xor
cmp
cmp
xor
mov
ret
lcall
push
into
push
push
popf
cmpsb
test
lahf
dec
mov
lcall
xchg
mov
mov
add
mov
enter
movsl
ss
mov
sub
mov
mov
test
test
rclb
dec
sub
mov
call
mov
xchg
adc
loopw
rclb
fdivs
test
jne
cmpsb
dec
xchg
and
movsb
mov
popf
insl
xchg
sbb
int
leave
adc
xchg
mov
mov
mov
cmp
test
jmp
cmp
ja
dec
xchg
roll
xchg
mov
ret
adc
scas
push
fs
shrl
mov
test
mov
lret
xor
call
mov
movsb
lret
mov
lock
sub
enter
xchg
sar
cltd
mov
testl
mov
and
push
mov
mov
mov
jecxz
mov
int3
xchg
or
stos
mov
xchg
or
hlt
lcall
xor
movsl
nop
pop
and
mov
push
mov
xchg
mov
call
stos
inc
mov
mov
push
dec
cmp
aam
and
add
cwtl
inc
in
lcall
add
mov
mov
mov
add
mov
fcoml
xchg
mov
pushf
nop
mov
cmpsl
in
mov
or
repnz
mov
mov
scas
lock
sub
stos
stos
movsb
adc
lcall
cwtl
cmp
mov
ret
in
mov
stos
fst
call
lock
popl
out
jge
outsl
inc
xchg
enter
xchg
in
adc
mov
mov
test
lea
scas
push
cmp
lret
mov
lods
test
fdivrs
cmp
push
movsb
scas
mov
mov
inc
inc
jle
jmp
test
rorl
xchg
cmc
stos
push
sahf
scas
lret
lret
aam
pop
cmpsl
movsl
out
mov
test
mov
cwtl
xor
in
adc
xor
add
fidivrs
jmp
mov
addb
and
fisubrl
stos
push
push
sar
cwtl
into
shll
cmp
push
and
movsb
add
adc
pop
stc
xchg
pop
xor
stos
mov
xchg
out
dec
cwtl
sbbb
adc
mov
movsb
mov
mov
xor
cmpsb
dec
pushf
rcrl
aas
popa
and
mov
int3
dec
and
pushf
stos
lcall
dec
pushf
rcll
sub
cmp
adc
call
mov
addr16
and
mov
call
sti
scas
xchg
xor
out
mov
int
enter
jecxz
push
mov
adc
test
sub
pop
cmpsb
out
add
xchg
sti
and
enter
mov
iret
dec
fimuls
adc
iret
mov
pushf
xlat
lea
push
arpl
mov
sbb
scas
mov
fmull
mov
pop
test
shll
rolb
xchg
sub
cmpsl
jl
cmp
mov
stos
aam
add
cmp
fiadds
mov
popf
mov
and
stos
xchg
cmp
dec
xchg
sbb
loop
xchg
ret
hlt
jg
xchg
insl
mov
cmp
xor
lret
add
mov
mov
or
hlt
insl
and
pushf
loop
push
lcall
insl
cmpsl
cltd
sbb
sbb
pop
hlt
dec
and
push
mov
nop
xor
jae
and
dec
loop
inc
lods
ja
iret
test
sub
inc
mov
and
les
xor
lret
mov
adc
pop
je
andl
insb
mov
out
push
mov
cmpsl
xor
mov
test
dec
ss
push
cmp
in
test
lods
push
cmpsb
mov
or
xor
iret
clc
push
xchg
cwtl
mov
or
pusha
sub
push
stos
mov
adc
movsb
or
ret
leave
push
sahf
fistpl
aad
or
adc
rcll
push
xchg
enter
sahf
push
fdivl
xor
mov
loope
dec
mov
cmp
and
aas
test
dec
mov
push
mov
push
dec
sub
sbbb
add
and
ja
sub
out
dec
stos
xchg
nop
loopne
mov
xor
push
adc
test
mov
adc
and
adcb
stos
cmc
pop
in
mov
push
repnz
gs
sarl
mov
adc
mov
test
es
adc
pop
mov
fidivrs
sarb
xor
imul
mov
xchg
call
pop
adc
push
dec
push
ss
rolb
mov
in
popa
sub
xor
sub
cli
daa
ss
shll
jns
jnp
push
gs
test
mov
movsl
push
xchg
xchg
and
inc
mov
js
call
mov
mov
cmp
add
hlt
movsl
rorb
insl
orb
sbb
and
lods
and
mov
mov
jmp
les
mov
repnz
mov
and
test
mov
movsb
and
dec
mov
lods
wbinvd
mov
call
adc
cld
xor
adc
fmuls
mov
movsb
mov
mov
mov
pop
inc
push
mov
aam
ret
icebp
sbb
adc
test
sub
inc
fisubs
cmp
dec
inc
push
adc
ds
daa
sub
push
jle
test
mov
test
mov
pushf
aaa
movb
scas
jle
in
lock
or
in
repnz
test
push
mov
lahf
adc
jle
dec
int3
mov
xchg
scas
sub
ret
inc
out
out
out
mov
cmpsb
stc
sbb
and
out
jb
and
fsubrl
mov
out
mov
pusha
mov
mov
imul
cmp
and
cmp
out
mov
dec
mov
mov
cli
cmp
sar
int
leave
mov
and
ror
dec
mov
and
push
mov
and
ror
mov
mov
test
cmp
mov
out
test
mov
scas
ljmp
sbb
xchg
test
rcrb
rcrb
mov
call
rcrb
rcrb
repz
frstor
ret
sahf
test
clc
fcmovb
sbb
and
and
sub
and
lcall
and
rcrb
mov
js
jl
ds
stc
jge
mov
out
pop
popl
js
jl
into
ds
pop
movsb
sahf
scas
pop
pop
fmuls
ret
fcmovu
and
into
js
cli
das
xchg
dec
cwtl
inc
sti
pushf
sub
pop
mov
roll
mov
mov
loop
sbb
sbb
sbb
lcall
shr
push
int
int
ds
sub
enter
add
xor
cmpsl
mov
push
divb
ss
jg
in
out
sub
cmp
pushf
in
lock
mov
dec
and
sbb
and
and
and
adc
mov
mov
hlt
out
and
mov
dec
and
mov
cli
xor
and
mov
and
and
xchg
jg
aas
dec
out
inc
xchg
lret
mulb
adc
cmpsl
mov
and
adc
jl
mov
mov
popf
in
push
push
xchg
lcall
rclb
adc
enter
jmp
mov
and
cli
dec
mov
dec
test
mov
mov
fistpll
test
shll
mov
add
sub
sbb
xchg
adc
cmp
rcrl
xchg
xchg
mov
mov
mov
mov
aaa
mov
mov
test
mov
adc
cltd
mov
mov
sbb
mov
cmp
cs
push
sbb
cltd
dec
dec
fwait
nop
fstps
mov
mov
mov
stc
sbb
icebp
sbb
nop
outsb
adc
mov
jmp
mov
mov
nop
sbb
ret
xchg
mov
sub
and
push
jge
mov
mov
aam
rcrl
pop
fwait
shll
mov
rolb
stc
sbb
cmp
sub
and
in
insl
and
adc
hlt
loope
pushf
xchg
sbb
and
stc
mov
test
pushf
mov
in
insl
sbb
mov
cltd
lods
sahf
test
and
rorb
cwtl
imul
pop
adc
cwtl
test
sub
in
mov
push
int3
mov
sub
push
push
testl
jne
mov
lcall
mov
nop
sbb
lock
mov
sbb
adc
repnz
aas
lea
stc
sbb
and
sub
outsb
test
aaa
movsb
jmp
out
push
repnz
stc
mov
mov
and
mov
and
mov
test
stos
push
aas
jmp
in
nop
insl
and
adc
repnz
mov
and
lahf
lcall
mov
dec
sbb
sbb
jge
adc
cltd
repnz
sbb
pop
sub
sbb
mov
fwait
lret
xor
movsb
push
mov
sbb
mov
lods
ficomps
dec
lret
in
mov
stc
sbb
mov
and
std
and
adc
imull
stc
cltd
lahf
stos
sbb
gs
lahf
nop
mov
sbb
mov
in
jge
adc
cltd
repnz
aas
lea
mov
in
jge
adc
and
and
mov
sarb
stc
and
sbb
dec
dec
sbb
cwtl
lahf
and
in
in
add
sbb
sbb
sbb
and
in
std
lcall
and
adc
repnz
clc
jp
shll
dec
sbb
and
and
jle
aaa
mov
lahf
and
in
jle
mov
test
aaa
loopne
sbb
sub
sbb
repnz
shll
pop
test
mov
stc
cltd
lahf
and
in
std
addr16
mov
scas
imul
insl
sbb
aaa
pop
rcr
mov
mov
mov
mov
mov
dec
fbld
adc
mov
mov
mov
mov
or
mov
and
in
jge
adc
and
mov
and
adc
and
cwtl
mov
lcall
adc
repnz
cli
out
add
les
xor
xchg
sbb
sar
stos
jae
push
sbb
xchg
lds
sbb
inc
enter
push
lret
out
repnz
pop
and
cwtl
jge
adc
mov
dec
dec
sbb
sarb
in
scas
cltd
mov
jp
and
andb
aaa
mov
cmpsb
cwtl
mov
mov
hlt
sahf
and
xor
and
lahf
cld
dec
ffreep
jmp
shll
les
das
push
or
sub
and
mov
mov
test
mov
cmpsb
push
setbe
push
loope
aas
lret
out
and
mov
push
cmp
fildl
xor
mov
je
adc
daa
test
mov
stos
loop
mov
add
inc
sub
mov
nop
repnz
sbb
sub
getsec
sahf
dec
stos
enter
adc
mov
push
cmp
std
int
outsl
pop
mov
js
cmpb
lcall
subl
scas
inc
lea
xchg
cli
xchg
mov
sbb
cltd
push
mov
sbb
lret
ficomps
in
cmp
fwait
negb
sbb
int3
and
add
mov
inc
aaa
test
xchg
pushf
les
dec
cltd
xchg
mov
pushf
fstl
sbb
inc
jge
push
stc
sbb
fwait
push
xchg
addb
loopne
ret
test
sbb
stc
pushf
or
cmpb
test
mov
scas
jae
or
subl
xor
xchg
mov
dec
hlt
popa
pop
mov
lret
test
ja
aam
test
scas
test
xchg
aam
inc
mov
sub
sbb
andb
icebp
mov
push
lcall
cmp
xchg
adc
sub
adc
cmp
pushf
xchg
mov
cmpsl
cltd
cmpsb
loope
sub
fadds
lret
out
sti
mov
mov
inc
xchg
popa
stos
shrb
cmpsl
sub
into
mov
insl
in
cmp
daa
test
movsb
loop
cs
cltd
pop
mov
cltd
mov
rolb
xchg
adc
and
cmpsb
in
cmpsb
cmpb
movzwl
aaa
push
mov
and
dec
cltd
jmp
mov
adc
adc
dec
ret
lods
pusha
in
jno
xchg
cmp
cmpsb
mov
pop
pop
int3
xchg
in
call
cmp
xchg
xchg
pop
mov
test
sub
imul
test
mov
fisubrl
imul
sbb
cmc
and
movsb
xchg
mov
push
mov
sub
sub
xchg
aad
movsb
xor
inc
js
in
dec
jg
in
nop
in
sub
jmp
xchg
mov
frstor
xchg
mov
test
fwait
enter
mov
xchg
and
sahf
test
stos
xchg
sbb
mov
mov
xor
mov
adcl
and
lcall
dec
xchg
test
xchg
mov
fwait
sbb
sti
scas
and
push
mov
lock
ficoml
xchg
lods
scas
jmp
aaa
int3
loope
xchg
cmpsb
movsl
mov
fcmovbe
dec
test
push
mov
push
jmp
mov
add
cmp
mov
dec
xor
ds
test
imul
call
xchg
sarl
rcl
loopne
jp
lret
lahf
lcall
loope
cwtl
sub
sbb
rol
leave
push
pop
mov
xchg
mov
iret
mov
xor
mov
stos
mov
jg
add
mov
test
adc
mov
xchg
inc
mov
hlt
mov
mov
xor
push
cmpsb
dec
inc
xchg
pushf
add
xchg
inc
cmp
roll
fs
repnz
cmp
push
mov
push
xor
mov
mov
test
iret
sbb
cmp
push
mov
inc
into
mov
mov
cmp
sub
lock
dec
scas
mov
mov
cmp
subb
xor
and
ret
cmp
es
call
mov
cmp
stos
xor
leave
and
inc
aam
mov
sti
shlb
movsl
mov
xchg
nop
cld
test
xchg
dec
mov
roll
xchg
adc
xchg
jae
cmp
add
fldl
lret
mov
insl
cmpsl
nop
call
mov
mov
sub
mov
lcall
xchg
mov
cmp
mov
xchg
xchg
jecxz
ljmp
ds
sub
adc
loopne
mov
bsf
or
cmpsl
xor
pushf
enter
mov
hlt
orb
test
cs
xchg
sub
dec
enter
movsb
ficoml
mov
rol
int
pop
movsb
cmpsb
andl
xchg
cltd
sbb
fisubl
xchg
add
std
ret
inc
xchg
sub
xchg
cld
xchg
lret
aas
fidivs
ficoml
lret
xchg
jns
mov
lcall
cmp
mov
xchg
iret
test
je
xchg
cltd
lcall
or
sub
xchg
ds
repnz
xchg
and
inc
lahf
cli
dec
push
mov
mov
push
cwtl
mov
sub
lods
or
int
pop
mov
dec
cld
movl
test
in
add
cmc
lret
xchg
repnz
fstpl
or
js
xchg
cmpsb
repnz
or
mov
push
jae
xchg
jl
sub
cmpsl
hlt
in
clc
mov
dec
jns
jbe
xchg
mov
adc
stos
mov
call
xchg
loopnew
cmpsb
xor
mov
or
outsl
mov
mov
mov
insb
adc
stos
jne
dec
mov
mov
shll
and
stos
mov
pushf
inc
sbb
call
xchg
mov
sarl
inc
mov
in
adc
inc
enter
orl
les
sbb
nop
mov
cmp
repnz
sahf
sbb
xchg
cli
inc
mov
in
jge
adc
lcall
sbb
pushf
lahf
mov
mov
sbb
jbe
loop
imul
jmp
call
sti
in
fimull
mov
jmp
mov
sub
in
sahf
stos
ss
in
cld
and
jbe
push
adcb
xor
jne
nop
adc
adc
xchg
mov
lcall
mov
loopne
xor
cmp
enter
adc
es
movsl
sbb
lcall
icebp
xchg
cmpps
rcll
loopne
out
mov
cwtl
nop
xchg
pushf
mov
test
jmp
test
mov
int3
test
mov
push
sub
mov
jge
jecxz
jl
jg
dec
inc
adc
mov
adc
movsb
add
cmp
dec
call
cmpl
cmp
cmc
dec
mov
xor
mov
cmpsb
in
adcb
dec
mov
scas
cmp
subb
mov
xchg
shl
xchg
aam
mov
popf
test
mov
rol
mov
mov
stos
int3
mov
fsubrs
bound
ret
test
mov
adc
sub
mov
test
out
iret
test
and
add
and
mov
pushf
cmpsl
adc
dec
lock
fidivl
cmp
mov
pop
dec
outsl
mov
clc
sbb
fwait
push
in
mov
nop
jmp
pop
mov
push
sub
loop
stos
into
cmpsl
xor
mov
xchg
xchg
fs
inc
mov
xor
inc
mov
or
insb
xor
rolb
sub
mov
rolb
jle
test
cli
dec
lret
cli
jmp
iret
add
dec
nop
lods
mov
mov
adc
lcall
loope
xor
sub
push
mov
cmp
lret
outsl
ret
pop
add
adcb
mov
xlat
mov
mov
lock
mov
push
pop
stos
adc
movsb
inc
mov
adc
xchg
mov
jae
cltd
test
test
xchg
enter
xchg
gs
pushf
dec
xchg
nop
mov
in
sahf
xchg
rorl
jbe
pop
les
lahf
icebp
xchg
inc
mov
inc
cmpsl
adc
xchg
nop
movsl
or
cli
ja
cltd
stc
shlb
idivb
mov
adc
fildll
adc
and
sub
pushf
or
fisttpl
testl
out
fmuls
xchg
sti
ljmp
lret
test
xorl
pop
cs
gs
sbb
mov
jno
lret
mov
mov
jae
movsb
xchg
call
and
lock
and
xchg
imul
std
sub
js
aam
inc
sub
jae
test
dec
pop
in
popf
push
xchg
movsl
into
sbbb
ljmp
mov
push
pushf
popa
mov
cs
call
inc
or
repnz
pop
pop
fsubl
jbe
aam
sub
test
mov
add
sub
lret
or
adc
push
sub
in
xchg
mov
mov
push
nop
pop
push
in
loop
mov
jmp
xor
and
dec
js
sarb
rcll
mov
movsl
xchg
mov
sub
in
cli
pusha
mov
jg
mov
test
movsl
test
push
cmp
fisubs
ja
inc
adc
aas
stos
lods
mov
incl
loope
xchg
call
fldcw
adc
lret
dec
aam
mov
orb
lcall
xchg
scas
sub
enter
dec
mov
dec
add
idivl
movsb
mov
std
mov
mov
cld
and
movsl
push
call
mov
sahf
rcll
mov
mov
mov
lcall
bnd
pop
mov
subb
xchg
add
push
loop
loopne
sahf
mov
in
imul
es
test
xchg
mov
out
imul
ficompl
loop
test
xchg
out
out
mov
movsl
in
ret
test
mov
sub
int
cmpsb
xchg
mov
mov
subb
or
pop
stos
add
xchg
and
addl
out
mov
mov
xchg
es
leave
sbb
mov
sbb
adc
mov
lcall
aaa
int
and
ss
xor
mov
lcall
mov
sti
mov
push
ss
mov
mov
insb
push
fsubrl
mov
shll
mov
jae
push
mov
mov
mov
mov
fwait
inc
sub
pusha
pop
in
sub
xor
mov
xchg
push
lods
pop
mov
out
icebp
test
xor
shrb
xchg
daa
mov
nop
jle
xchg
repz
xchg
sub
xchg
or
sbb
inc
pop
shll
enter
shll
adc
cmp
aaa
icebp
popf
fwait
scas
popa
out
xor
scas
sub
scas
and
cs
nop
mov
cwtl
xorb
xorl
mov
mov
imul
mov
int3
inc
mov
sub
jl
addr16
pop
fdivs
stos
ret
dec
cmp
js
mov
xchg
push
pop
repnz
ljmp
data16
cmp
rclb
lcall
pop
xor
or
addr16
jg
push
stc
in
push
mov
push
scas
adc
push
arpl
imull
lahf
push
lret
add
sbb
lea
int
in
into
jmp
mov
cmp
mov
adc
xchg
loopne
adcl
cwtl
nop
movsl
jnp
inc
jle
enter
mov
jns
cmp
ret
scas
or
cmp
dec
mov
sub
sub
xchg
xchg
xchg
andl
cmp
pop
xchg
int3
ret
jle
cld
lcall
sub
lret
inc
lret
lahf
fyl2x
jnp
mov
pop
outsb
loopne
xor
mov
xchg
call
and
js
cmpsl
pop
mov
mov
mov
lret
mov
ss
mov
lahf
mov
gs
call
push
cmp
xchg
lcall
mov
cltd
mov
iret
sarb
inc
fbld
xor
mov
stc
lahf
mov
mov
sub
adc
sahf
cmpsb
xor
sahf
imul
lods
sub
push
xchg
aaa
mov
iret
fsub
mov
xor
in
cmp
repnz
adc
push
cwtl
and
sete
jge
cmpsb
call
mov
pop
movsl
int3
xchg
mov
ds
stc
jge
adc
fbld
xchg
fdivrs
stos
jmp
xor
mov
cmp
into
xchg
mov
in
repnz
movsb
lcall
loope
loopnew
mov
xchg
stc
lahf
lods
mov
jl
ds
lret
lcall
xchg
sarb
adc
jl
jae
cltd
xchg
daa
fcomp
mov
repz
mov
mov
lcall
ficoms
sahf
xor
hlt
fisubrs
mov
mov
adc
mov
stc
jge
mov
mov
mov
mov
adc
mov
mov
enter
ds
mov
cmp
sub
insb
adc
mov
mov
mov
xchg
call
iret
shr
adc
pop
data16
scas
jge
mov
mov
repnz
or
ss
push
or
adc
ss
jl
ds
stc
ss
jge
mov
jl
ds
stc
lahf
and
or
lret
xchg
fcmove
mov
loope
lcall
lahf
and
adc
scas
pop
in
mov
cmp
int3
dec
sahf
loop
pop
stc
and
fbld
in
ds
stc
jge
adc
js
sti
or
imul
es
aaa
pop
sahf
stc
jge
xchg
aaa
test
jae
mov
pushf
mov
repnz
stc
lahf
jge
mov
adc
jl
bnd
mov
mov
repnz
stc
lahf
jge
mov
andb
pop
adc
iret
push
js
loop
iret
fidivrs
adc
stc
mov
jl
ds
dec
mov
mov
pop
test
cmp
cmp
es
cmp
cmp
or
cmp
or
cmp
repnz
rcr
gs
mov
lcall
mov
cs
lods
je
fdivrs
repnz
repnz
stc
and
jo
js
jl
jge
or
in
or
cs
stc
cmp
hlt
mov
cmp
pop
cmpsb
std
aad
movsb
fisttps
cmp
repnz
cmp
lcall
in
ds
stc
and
jl
jge
or
adc
mov
mov
push
lods
rcl
push
mov
adc
cmc
cmpb
pop
stc
lahf
and
stc
cmp
jge
mov
nop
xor
xchg
mov
nop
cmp
enter
je
fbld
jo
repnz
mov
mov
call
stc
lahf
call
clc
in
ds
xchg
mov
cwtl
stc
popf
or
push
mov
cmp
scas
and
mov
jl
cmp
js
jl
jge
sub
xor
mov
cli
cmp
mov
stc
mov
adc
orb
stc
mov
mov
push
adc
mov
mov
mov
mov
mov
jo
jae
dec
mov
and
int3
mov
jno
or
dec
arpl
pop
cli
mov
or
mov
and
popf
jo
sbb
xchg
lea
iret
ljmp
fadds
cmpsl
cmp
enter
cwtl
dec
rclb
adc
das
sahf
or
popf
xchg
fdivl
ja
add
je
inc
pop
subb
pop
add
and
xchg
xchg
mov
and
sbb
xor
xchg
lea
ljmp
push
arpl
mov
xchg
mov
cmpb
loopne
out
cmc
rorl
ljmp
sub
ss
fsubl
pushf
out
leave
xchg
pop
in
lret
mov
pop
movsl
subl
adcb
mov
nop
sub
sub
or
nop
or
movl
mov
or
test
dec
nop
cmp
movsb
and
mov
xor
mov
test
mov
cltd
inc
lret
jns
fsubl
and
mov
shlb
xchg
sbb
mov
nop
pop
mov
xchg
mov
cmpl
rorl
adc
test
mov
lret
mov
clc
nop
out
mov
subl
mov
icebp
mov
int
dec
pop
mov
nop
pop
mov
adcl
inc
pop
add
mov
mov
mov
dec
mov
insb
fsubl
movl
in
stos
inc
insb
mov
stc
xor
and
fisttpl
leave
ret
inc
mov
test
mov
addl
sarb
cmp
xchg
test
add
jge
push
or
test
mov
add
popa
inc
testb
subb
mov
andb
inc
mov
mov
add
shlb
xchg
sahf
sub
rclb
mov
into
and
testb
push
sub
addb
jne
dec
cwtl
iret
mov
cltd
mov
cmpsl
inc
movsb
jecxz
mov
sub
xchg
aad
add
call
arpl
in
jmp
mov
fsubrp
shrb
lds
divl
push
frstor
sub
pop
lds
int3
jl
fsubl
les
fs
sbb
adc
mov
in
jp
adc
je
mov
pop
int
xorb
addr16
sbbb
popf
xor
outsl
cmpb
dec
mov
ss
cmp
jnp
or
dec
sbb
insl
mov
sub
push
add
inc
jbe
in
aad
aas
pop
add
and
js
das
loopne
jp
andb
push
or
push
cmpsb
pusha
mov
cld
jp
dec
pop
sub
dec
xchg
xchg
inc
jb
push
and
hlt
nop
inc
add
cmp
test
mov
adc
neg
sbb
inc
mov
add
push
cmp
and
add
cwtl
int
xor
test
pop
mul
mov
or
mov
data16
xchg
cmc
mov
or
or
xchg
pcmpeqd
add
mov
add
add
mov
out
mov
pusha
xchg
or
mov
mov
fwait
add
xchg
loop
and
in
adc
orb
push
daa
fidivl
popa
les
and
fs
test
add
xorl
dec
sbb
xlat
scas
bound
xchg
mov
js
pop
jecxz
mov
orl
iret
cmp
and
add
xor
dec
mov
fnsave
test
jne
pusha
shlb
faddl
loop
adc
lahf
sub
loope
stc
adc
add
pop
mov
and
pop
mov
and
push
or
mov
sbb
orl
sub
add
cmp
push
test
mov
test
mov
shl
mov
or
xchg
xchg
adc
sbb
sbb
and
sub
lods
sub
xor
cmpb
cmp
mov
inc
ret
inc
add
lret
orb
rcll
push
adc
aam
aad
pop
fiaddl
pop
fucom
bound
in
in
subb
jmp
in
insl
in
xorb
bnd
je
xorb
stc
jp
jnp
test
std
in
movsb
push
in
sarb
jmp
sbb
mov
adc
mov
add
sub
cmp
xchg
addb
add
clc
or
lcall
mov
xor
shr
mov
in
mov
test
pop
rcl
lock
jle
push
daa
jmp
cmp
fbld
sti
outsb
push
in
pop
sub
add
xchg
rolb
aaa
xor
test
inc
stc
movsl
add
popf
dec
ljmp
cmp
sti
and
xchg
pop
fneni(8087
rol
sahf
stc
lock
lcall
outsl
ljmp
lock
cmp
and
loop
cmpsb
stc
hlt
jl
enter
xor
sub
add
add
outsl
sub
hlt
clc
inc
adc
push
aad
push
jecxz
outsb
in
mov
xlat
inc
and
mov
sub
imul
gs
lods
cmp
xchg
aad
dec
or
icebp
int
loopne
lds
sub
jae
loope
movsb
popf
pop
ret
adcb
jbe
cmp
cmpb
dec
cmp
addl
test
sarb
orb
xchg
ljmp
mov
in
push
orb
shrb
fimull
mov
cli
movsl
addb
icebp
and
mov
push
movsb
cld
adc
daa
push
mov
das
push
adc
inc
push
addb
frstor
loop
fwait
repnz
aaa
mov
cltd
fadd
andb
push
dec
mov
mov
inc
jbe
and
addr16
add
pop
addb
and
mov
adc
decl
ds
mull
mov
adc
orb
adc
inc
subb
cli
push
mov
push
pop
add
and
arpl
out
stos
mov
xchg
mov
jecxz
sbbb
negl
sub
addb
lahf
mov
xchg
or
jmp
lods
dec
cmc
cmp
lea
add
xchg
mov
clc
shlb
xchg
add
loopne
and
fucom
pop
jnp
xorb
mov
lods
push
stos
dec
sbbb
and
mov
in
cmpb
in
inc
aas
aas
xorb
sub
dec
mov
inc
pop
jmp
aas
xchg
repnz
scas
jge
dec
cmp
outsb
shl
add
cmpb
push
clc
lahf
push
jb
or
mov
aaa
xchg
std
aas
in
xchg
cltd
jo
rcr
add
xchg
push
dec
fsubrs
rcrl
adc
sbb
ficomps
cmp
mov
data16
xchg
xor
sub
lds
mov
cmp
mov
andb
jp
add
fadd
adc
sub
dec
pop
shl
pop
pop
jnp
or
adc
jbe
lea
mov
pop
ljmp
xor
movsl
imul
dec
cwtl
and
add
cmp
adc
xor
scas
push
jg
mov
or
addb
sti
dec
cmpb
roll
push
and
fcompl
subb
mov
adc
jbe
imul
inc
loope
xchg
mov
jo
pop
xchg
inc
mov
add
js
movsbl
fsubrs
lea
pop
imul
mov
cmpsl
cli
flds
dec
push
xor
sbbb
gs
mov
sbb
addb
sbb
inc
mov
jne
cmpsl
dec
icebp
add
cmp
cmpsb
gs
adcb
or
add
push
sub
xor
ds
pop
cmp
mov
movsl
add
pop
push
subl
adc
shl
and
popl
mov
jbe
inc
insl
xor
popf
mov
add
les
push
push
sub
jge
push
pusha
jne
testl
adc
movsl
cld
and
mov
int
popf
mov
and
mov
jo
sbb
cmpb
push
addr16
mov
ret
mov
test
or
jmp
andb
imul
bound
mov
loope
orb
pop
fmulp
lods
fiaddl
xchg
test
mov
loop
inc
fiadds
js
decb
cli
xor
mov
mov
xor
inc
cmp
inc
fidivrs
int
add
ljmp
inc
addb
pusha
in
xchg
adc
inc
add
loopne
sahf
sub
and
jbe
xchg
push
subb
in
out
pop
adc
jns
mov
xor
cli
lds
cltd
inc
das
inc
xorb
mov
repz
sbb
sub
sbb
call
mov
into
hlt
cmp
scas
cmp
test
pop
orb
int3
fiadds
dec
mov
hlt
sbbb
fimull
and
lahf
orb
ficoms
dec
test
subb
outsl
xchg
hlt
leave
sahf
mov
sub
pop
cmpb
and
mov
cltd
jmp
inc
sbb
daa
imul
fstl
sbbl
rorb
cwtl
arpl
imulb
movsb
outsb
sub
mov
es
out
mov
mov
mov
mov
sbb
cmp
lea
lods
ret
push
xorb
jb
inc
jne
xchg
andb
aad
subb
dec
push
adc
adcb
fsub
das
aad
xorb
inc
push
inc
bound
orb
xor
clc
jp
int
call
xchg
imul
mov
lods
repz
cmp
mov
test
pusha
arpl
mov
adc
ret
pop
fwait
lea
ljmp
pop
dec
xor
loop
fildll
outsb
fsubr
mov
flds
popa
xor
mov
add
push
shlb
loopne
insl
jnp
pushf
into
mov
movb
push
pop
aam
mov
pushf
cmpsb
sahf
ret
xchg
cld
pop
jb
mov
jecxz
jno
sbbb
cmp
iret
shlb
jae
das
negl
mov
or
push
or
arpl
mov
outsl
jp
pusha
or
cmc
cmpb
push
push
ljmp
sbb
push
mov
pop
les
mov
mov
test
rcll
cmpb
fcmovnu
sbb
in
xchg
repnz
add
andb
jnp
add
lds
lret
sub
mov
xchg
sarl
sbb
fisttpll
and
mov
les
fistps
pop
addr16
subb
jmp
sbb
mov
insl
add
lods
mov
nop
mov
mov
lcall
mov
cld
add
sbb
sub
xchg
orb
push
ffree
adc
pushf
xchg
arpl
adc
mov
loop
xchg
cmpb
lock
cmpsl
fldcw
fsubl
ds
push
xor
roll
lret
clc
add
pop
xor
push
nop
adc
xchg
enter
shl
and
int
outsl
mov
jbe
lds
imul
add
push
in
divb
mov
adc
sti
movsl
test
stc
out
mov
push
or
jle
mov
and
leave
neg
xchg
and
xchg
mov
js
jmp
addb
xlat
or
pop
and
mov
cmpsl
adcb
rorb
sti
add
add
cmpl
add
test
cmpb
or
fstl
push
jno
bound
orb
xlat
cld
xorb
fstp
cmp
sub
mov
mov
divl
jo
orb
icebp
sbb
sbb
and
xor
ds
lds
pop
adc
push
cmp
push
xor
xchg
pop
popa
push
push
mov
into
and
lea
lods
jns
call
scas
xchg
pop
aam
int
lea
xchg
add
push
subb
ret
rcrb
fnsave
arpl
add
ret
std
insl
mov
cmc
cmpb
lea
fidivrl
cld
xor
popf
int
inc
stos
sub
sbb
push
jo
icebp
pop
andb
and
adc
xchg
and
push
pop
cmp
insl
mov
xor
jns
call
cli
inc
divb
stc
xchg
cmp
orb
dec
mov
orb
insl
push
add
cmp
test
in
ret
lahf
fisubs
cmp
stos
imul
pop
add
push
jle
and
add
shlb
lds
imul
int3
popw
dec
add
fs
loopne
fisttps
pop
xchg
and
add
mov
pop
out
xor
adc
xor
sub
cmp
sar
shll
into
adc
pop
sahf
mov
inc
mov
push
lahf
xorb
cmp
cmp
orb
js
sbbb
jecxz
xchg
int
sbbb
cmp
popf
loop
insb
mov
int3
les
andb
mov
or
fidivrs
imulb
cld
orb
adc
xorb
cmp
sti
push
sbbb
sub
loopne
lret
mov
in
sub
sub
xorb
cli
data16
xorb
shll
movl
mov
jo
out
xchg
adc
jne
clc
add
xor
lahf
xchg
rorb
lds
mov
mov
out
das
add
test
add
adc
mov
loopne
repnz
xor
xor
or
lea
stos
and
inc
jbe
fimull
sbb
jp
and
add
mov
adc
insb
mov
scas
cvtdq2ps
mov
fldcw
xchg
mov
fwait
cmp
fsub
mov
mov
xchg
rcrl
jmp
subb
stos
dec
insl
insb
mov
jae
mov
adc
add
sbbl
mov
sbb
loopne
popa
mov
filds
inc
mov
mov
imul
std
and
loope
xchg
adcb
cmpsb
cwtl
sahf
xchg
pop
dec
subb
sub
jmp
orb
data16
cmc
inc
orb
popa
mov
mov
ss
xchg
xor
xor
movsb
stos
adc
jmp
mov
and
cmp
mov
or
add
sub
xchg
int
push
iret
sbb
imul
cmc
or
add
fstpt
movsb
xchg
jmp
or
push
out
adc
mov
and
lods
or
mov
aas
push
pop
rcrb
insl
mov
cs
leave
or
cmpsl
imul
sbbb
lret
inc
xor
mov
aad
pop
rcl
mov
fists
jecxz
xlat
mov
hlt
in
subb
sahf
and
push
jg
xchg
pop
imul
inc
arpl
cmp
xchg
sub
sbbb
fsubs
pop
inc
enter
sub
sar
lret
pop
orb
aam
clc
sbb
jmp
and
shlb
xchg
dec
sub
dec
cmp
push
xlat
cmc
lret
mov
inc
movsbl
pop
push
scas
push
inc
out
dec
shlb
jle
in
cs
or
xchg
push
xchg
fsubr
sub
push
xor
dec
lock
mov
mov
test
push
xlat
dec
orb
inc
jnp
lea
imul
add
nop
cmpsb
push
mov
xchg
add
cltd
ja
aas
mov
xchg
std
icebp
sbb
fsubrs
mov
cmp
ss
mov
and
push
scas
jmp
ds
sub
leave
xor
xor
mov
cmp
movsl
push
jns
test
xchg
inc
adc
daa
pushf
xchg
sub
ficoms
or
mov
std
repz
stc
cld
aad
ss
mov
pop
andl
dec
mov
orb
decl
testl
xorb
or
loopne
loope
inc
incl
add
test
push
xorb
lods
movq
cwtl
mov
add
xchg
adc
cmp
sbb
and
cmp
sub
subb
push
lds
mov
test
jge
cmp
mov
jne
arpl
push
cmpb
lods
outsb
insl
in
add
bt
add
popa
or
mov
and
stos
pop
movsl
hlt
popf
or
in
mov
imul
xchg
test
add
test
ret
pop
dec
in
pusha
push
cmpb
in
xchg
push
mov
shlb
cld
sti
js
inc
stos
pop
ss
subb
xor
sub
mov
xor
mov
mov
xchg
fstl
dec
icebp
jge
subb
fsubrs
adc
xorb
scas
in
jmp
in
lods
adc
lcall
neg
or
sbb
in
jne
fdivrs
pushf
sti
lahf
jl
mov
pop
push
mov
dec
pop
cli
inc
xorb
in
jne
mov
jmp
jns
pop
cld
inc
pop
push
xorb
cmp
bswap
adc
test
dec
mov
repnz
push
sbb
fmull
roll
inc
jnp
add
jmp
not
mov
cmp
fdivrs
shrd
jp
adc
push
int3
pop
cmp
xchg
push
addb
aam
mov
jge
jmp
pop
ljmp
xor
push
movl
adcb
sbb
cmp
mov
sub
add
ljmp
xor
sbb
mov
pop
fimull
push
and
jno
test
orb
add
mulb
pop
adc
adc
add
push
lea
mov
shrb
subb
in
adc
fistpl
sub
and
mov
cmc
ljmp
push
push
push
add
push
shlb
aam
mov
sub
daa
mov
add
lcall
mov
addb
fisttpll
outsl
jne
push
movsb
out
pop
mov
add
push
cld
stos
xchg
cmp
mov
xchg
adc
add
ja
push
adc
inc
or
into
add
loope
pop
test
mov
sbb
enter
or
clc
or
cli
sbb
mov
enter
stc
add
adc
xlat
xchg
cmp
mov
ficoms
repnz
or
imul
loopne,pn
mov
pop
loop
es
mov
adc
and
mov
ucomiss
inc
and
clc
lahf
or
mov
fdivr
inc
add
pop
bound
adcl
loopne
add
mov
adc
insb
mov
push
jno
bound
push
movsbl
mov
cld
lahf
cmp
mov
and
xor
icebp
pusha
out
hlt
inc
mov
mov
xorb
sbb
mov
and
xchg
sub
and
mov
inc
mov
movb
lods
mov
and
sub
jle
mov
jmp
pop
lret
scas
in
std
cmp
pop
pop
inc
out
adc
jmp
add
or
dec
add
mov
data16
jo
sbb
std
adc
and
mov
dec
jae
pop
addb
jo
fwait
cmpb
addr16
pop
inc
add
xor
call
stos
nop
shrb
es
push
push
dec
les
addb
stc
arpl
movsb
lret
sbb
mov
pop
lds
shr
in
cmp
cmp
jb
inc
mov
push
orb
int3
pop
mov
sbb
rclb
jp
sub
push
addb
insl
dec
iret
and
andb
sbb
mov
mov
daa
xorb
fcomp
aas
push
test
xorb
decl
pop
repz
pop
pop
jmp
loopne
sub
or
ret
aaa
shrl
in
orb
imul
fimuls
jns
inc
push
aad
out
cltd
clc
inc
adc
sub
cmp
ja
je
xchg
push
jmp
addr16
fldt
js
add
sub
loope
dec
js
sub
jae
imulb
xchg
cmc
fwait
enter
mov
pop
fsubs
add
vmwrite
out
orb
idiv
addb
int
mov
lahf
and
cvtpi2ps
subb
sbb
pop
out
outsl
add
xchg
dec
or
cmp
or
fidivrs
push
orl
popf
push
repnz
xchg
jmp
ss
jo
xchg
in
cmp
loope
es
ljmp
fcmovbe
in
cmp
sub
lea
add
and
xchg
mov
push
cmp
add
xchg
pop
lahf
fcomps
add
sbbl
sbb
pop
push
repz
add
add
xlat
test
xchg
mov
orb
das
ficoml
cmp
mov
inc
leave
subl
mov
icebp
inc
sbb
daa
inc
xor
cmpsl
in
je
ljmp
decl
dec
mov
xorb
pushf
nop
or
dec
fistpl
push
pop
sysexit
fnstenv
iret
adc
pusha
dec
das
jmp
mov
fiaddl
pop
and
dec
push
loopne
mov
xorb
outsl
lahf
or
es
cmp
push
sub
mov
cs
adc
repz
inc
mov
or
jo
into
xchg
adc
sti
pop
in
sbb
sub
fisubl
jo
cmp
dec
mov
add
cmc
popf
cmpb
xor
sbb
xchg
ret
pop
pushf
adc
and
aam
push
loop
loope
dec
add
xchg
mov
out
sbb
mov
dec
push
mulb
cwtl
sbb
mov
cmpb
and
push
aad
hlt
mov
hlt
test
in
add
pop
fidivrl
xchg
adc
push
loope
nop
mov
dec
and
sbb
cmp
hlt
cmp
adc
movsb
adc
cmpsb
lods
stos
je
or
jge
js
loopne
cmp
lods
inc
add
adc
addr16
je
test
adcb
and
fwait
cli
ja
xorb
push
incb
dec
mov
xchg
push
jecxz
test
ss
jns
jg
xchg
repnz
cld
mov
mov
popf
jns
xor
sub
es
andb
sbb
cld
sbb
mov
idivb
xor
xchg
fnstenv
mov
xor
std
lcall
gs
rcrl
jge
add
sbb
cld
das
pop
clc
popf
addb
fnsave
mov
pop
mov
push
sbbb
arpl
addb
int3
lret
loopne
or
sbb
lods
push
lahf
cmpb
push
inc
cmp
or
rorb
andb
jp
test
je
les
imul
or
jo
xchg
fadd
xchg
mov
push
icebp
push
or
push
adcb
pop
ret
mov
movb
scas
cs
cmp
pop
mov
neg
xor
out
mov
insb
dec
cmpsb
jo
or
push
stc
add
scas
mov
negl
repz
adc
lock
jmp
add
sub
in
fsubl
cwtl
push
inc
sarb
jbe
adcb
rcrb
jle
iret
sub
es
lret
push
push
inc
mov
fistl
inc
outsb
cmp
dec
or
mov
xor
lock
dec
add
push
push
and
mov
cs
cmp
out
cld
xor
bound
xchg
faddl
push
push
sarl
aaa
pusha
les
ret
pop
mov
das
add
stc
push
stos
mov
xchg
addb
aas
roll
pushf
stos
insl
test
icebp
loop
test
xorb
les
dec
addb
xor
cwtl
scas
jg
test
push
cmpl
sbb
das
mov
jo
jmp
insl
aas
push
loope
add
mov
cltd
in
std
call
sahf
inc
mov
mov
mov
pop
cs
rorl
adc
xor
sbb
cld
pop
arpl
data16
or
cld
mov
ljmp
nop
es
je
andb
enter
cmpsb
or
fisttpl
pushf
fcoml
mov
sub
repnz
inc
xor
ds
test
xchg
repz
push
icebp
xchg
cmpb
lds
mov
push
rclb
orb
mov
adc
push
ja
mov
add
in
mov
add
lods
xchg
adc
add
cmp
and
dec
jb
sbb
or
cmp
xchg
shr
lret
xchg
mov
repnz
inc
mov
mov
icebp
js
mov
inc
mov
mov
add
and
in
sbb
sbb
ret
mov
dec
fdivl
adcb
xor
mov
push
pmullw
filds
popf
jl
push
mov
pop
and
loop
gs
pop
lret
dec
push
out
subl
dec
sbbb
sub
xchg
sahf
fidivrs
sbb
xor
shl
nop
jmp
loope
sti
inc
cld
mov
out
bound
int
ret
adcb
fistps
jmp
pop
cmp
cli
cs
addb
in
xlat
pop
mov
sub
movsb
repz
inc
out
adc
inc
sbb
sub
push
mov
pop
mov
inc
fisubrs
ds
cmp
lock
sbb
nop
inc
cltd
xchg
and
rcrb
sahf
fwait
or
jbe
pusha
mov
inc
loop
xchg
clc
sti
lret
in
cmc
movsb
jmp
addb
fsts
pop
testl
add
pop
fdivrl
jbe
sbb
pusha
insb
sbb
orl
or
cmpb
cmp
int
in
enter
addb
call
mov
rcrb
lock
in
pop
adc
pop
loop
pop
inc
pop
out
test
adc
cmc
popf
xlat
dec
cmp
push
mov
xchg
daa
cmpb
and
pushf
mov
pop
jo,pt
mov
ja
cmc
xchg
rcrl
fucom
and
jecxz
scas
lret
fcomi
rolb
lahf
pop
test
jg
and
xor
push
pop
adc
je
es
adc
pop
loop
or
mov
sub
xor
push
rol
lahf
pop
add
insl
pusha
pushf
arpl
sub
andl
and
mov
cli
sbbl
cs
iret
inc
and
adcl
clc
and
movq
inc
cmp
mov
push
pop
out
xor
adc
clc
push
sahf
xor
test
xchg
dec
cld
stos
cwtl
iret
sbb
test
add
aas
mov
push
inc
enter
pop
data16
inc
jmp
xchg
mov
test
lret
stos
js
add
loopne
sbb
cmp
xor
lahf
or
nop
popf
out
push
adc
fiaddl
shl
arpl
lock
cmp
cmpsl
daa
rcl
scas
pop
xorb
jle
add
cmp
bound
and
stos
subb
pop
jp
mov
loopne
adc
add
inc
ret
orl
popa
push
loopne
hlt
fidivrl
adc
cli
sysenter
stos
ljmp
fsub
push
stos
insb
sbbb
push
pop
ret
mov
loopne
push
rclb
cld
pop
push
outsb
mov
and
jne
pop
sbb
ss
subb
push
addb
push
mov
push
xor
pop
sbb
adcb
movsl
adc
pushf
loopne
push
mov
gs
std
push
xchg
lahf
out
adc
pop
leave
add
adc
jp
mov
xorb
sti
jmp
in
dec
inc
xchg
mov
arpl
popf
jmp
jmp
xor
clc
subb
inc
fisubs
aas
cmp
sub
iret
andb
jo
loopne
xorb
or
fsubrs
sbb
mov
cmp
adc
fisttps
add
fwait
inc
test
orb
cltd
xor
mov
insl
xor
movsb
out
xorb
das
cmp
sub
jno,pn
jmp
inc
aas
lock
jne
subb
fnsave
cmovnp
subb
xorb
jp
xorb
adc
fisttps
xor
orb
es
push
xor
scas
cld
xchg
push
sbbb
dec
sub
pushf
ret
add
mov
adcb
xchg
push
sub
mov
std
notl
hlt
fiadds
cld
or
test
jne
mov
dec
cmp
and
lcall
push
push
jne
roll
mov
jns
cmpb
fucomp
jge
pop
fcmovb
push
test
push
arpl
cmpb
movsl
cmpb
cmp
mov
clc
xor
pop
cmpb
adc
sbb
jb
xor
ret
push
add
lahf
xchg
cld
sub
jns
inc
cmp
adc
lret
int
stos
add
andb
dec
and
test
sti
in
add
rolb
subb
mov
aam
cmp
ljmp
shrl
pop
jae
aad
jg
arpl
pop
cs
mov
mov
cmp
pushw
repz
sbb
faddl
arpl
mov
imul
das
cmpsb
and
repz
jecxz
mov
popf
stc
push
ss
lods
dec
xorb
ja
adc
cmp
add
das
and
or
repz
pop
mov
in
adc
push
dec
inc
add
mov
mov
adcb
fwait
jne
out
or
mov
dec
and
pop
rcrb
inc
or
jnp
push
pop
ret
repz
jl
mov
fildl
jmp
sub
push
outsb
neg
xchg
xor
mov
jnp
es
mov
mov
je
ficomps
mov
stos
jae
xchg
mov
popf
stos
sbb
nop
cmpsb
xchg
subb
rorl
push
mov
cmp
mov
pop
iret
mov
pop
addl
movl
add
mul
cmpb
adc
aas
outsl
pop
add
shrb
ljmp
sbb
addb
lahf
push
or
cs
xchg
xor
les
push
aam
sbbb
xchg
inc
cld
and
dec
xchg
mov
test
lret
mov
ret
or
push
mov
or
mov
add
popf
mov
dec
mov
bound
cmp
pop
daa
test
aaa
mov
rcrb
xchg
adc
stos
inc
stc
in
mov
sbb
mov
jns
xlat
or
mov
nop
xchg
add
test
mov
jp
pop
imulb
fidivrl
xchg
testl
scas
jg
inc
cmp
inc
lods
arpl
sub
iret
pushf
stc
pop
mov
aaa
sahf
dec
jae
jle
adc
lock
orb
or
cwtl
mov
xorb
add
scas
cmp
and
das
cld
inc
push
in
add
mov
mov
ret
mov
cmpb
dec
or
pop
sbbb
out
jge
repnz
mov
adc
push
xor
outsl
ds
inc
lock
dec
addb
decl
fs
cmpb
in
gs
sbb
andb
push
es
jmp
or
out
iret
lahf
adc
in
pop
lea
pop
add
bound
int3
jle
sbb
gs
xchg
cmp
or
vmread
nop
jge
ret
andb
jae
pop
pop
adc
cmpb
sahf
das
roll
sbb
inc
test
lret
add
push
xor
cli
mov
cmpb
dec
push
push
lea
shufps
cwtl
push
xchg
cmp
push
cld
mov
add
movzwl
js
leave
jnp
xchg
mov
js
xorb
data16
aaa
or
ds
mov
xor
es
div
add
cmp
cmc
out
push
add
pop
mov
mov
outsl
jnp
das
insl
cmc
dec
mov
sub
mov
jno
mov
xchg
aam
fmull
addb
lock
sti
mov
orb
push
movsb
sbb
popf
roll
aas
aad
in
nop
shll
repz
xchg
fcomi
call
adc
out
adc
cmp
mov
xor
sbbb
outsb
jle
or
or
add
xchg
aam
out
push
enter
hlt
fsubrl
jp
fnstsw
xlat
andb
popf
inc
xor
addb
cmp
insb
mov
pusha
xor
faddl
into
mov
cmp
and
imul
or
stc
pop
fstpl
cmp
jo
arpl
dec
icebp
inc
inc
loopne
out
std
lret
sub
push
aas
xor
adc
inc
leave
ja
push
sbb
jecxz
pushf
test
cltd
data16
mov
push
mov
lods
mov
sarl
push
xchg
aaa
movd
fs
scas
adc
lahf
mov
orb
cwtl
adc
xor
mov
divl
pop
data16
daa
dec
lods
jns
pop
addr16
mov
ja
pop
rclb
int
cmp
addl
cmp
xor
push
dec
cmpsb
push
orb
xor
loopne
mov
sbbb
insl
rcrl
shrb
sahf
cmp
mov
sub
xchg
aad
xchg
lock
adcb
out
mov
hlt
mov
mov
mov
popl
inc
sbb
xor
mov
lods
filds
ds
and
xor
mov
mov
movsl
inc
test
cmpb
or
xchg
sbb
rcr
cmpsb
rdpmc
sbb
rol
pop
divb
pop
jb
inc
adcb
cs
ja
add
fsubs
js
xor
or
ret
nop
nop
jns
es
jmp
jp
insl
mov
fisubrl
push
call
add
stos
lret
and
lcall
roll
fwait
push
add
int3
push
jle
add
xor
call
pusha
mov
addr16
rol
jb
andb
inc
mov
and
clc
add
repnz
cld
sbb
adc
jp
pop
fwait
mov
push
adc
pop
addb
dec
mov
hlt
shrl
push
mov
xor
add
jns
subb
mov
jge
mulb
xor
add
in
and
andl
push
rolb
xchg
pop
push
xchg
scas
mov
sub
or
test
enter
jae
icebp
sahf
add
popf
and
repz
cltd
jns
sbbb
icebp
push
pop
sub
test
and
das
cmc
add
jecxz
add
cs
mov
outsb
test
enter
sti
cmpb
and
adcb
es
clc
pop
bound
int3
addb
fidivs
sti
jns
lods
subb
addr16
fs
orb
and
sbb
inc
andl
adcb
stc
xor
inc
cmpsb
shlb
jmp
xor
sub
rcl
sbbb
push
shlb
and
push
stc
mov
repz
push
push
xorb
mov
mov
mov
rcrb
sub
push
mov
shlb
xlat
cmc
test
sub
dec
sub
jg
sahf
adc
cmp
sarb
xor
pop
xor
lods
mov
repnz
xorb
sbb
adc
fdivs
cmp
jmp
cmpb
loop
ret
fiaddl
xchg
pop
push
aaa
popf
sbb
rolb
mov
icebp
ljmp
insb
mov
andb
xchg
add
xorb
lds
imul
xchg
ret
add
daa
call
mov
pop
xorb
pop
push
push
dec
xchg
orb
cmp
mov
mov
jp
bswap
movsb
add
bound
mov
jle
pop
insl
mov
mov
test
insb
cmp
orb
lea
xorb
daa
stos
repz
add
imul
fldln2
inc
inc
inc
add
sub
mov
jg
pop
shrb
xchg
lock
inc
and
add
arpl
call
inc
div
leave
imul
cmpsl
sbbb
inc
js
lods
dec
adcb
mov
pushf
sti
smsw
and
inc
repnz
arpl
pop
jno
hlt
add
adc
rcr
inc
daa
cld
xchg
fisttpll
push
adc
loopne
mov
lods
xlat
sarb
faddl
jae
pop
mov
lcall
out
mov
or
or
and
fldt
add
push
mov
and
jmp
mov
dec
add
sahf
loope
imul
cwtl
je,pt
mov
aam
cmc
adc
inc
subl
cltd
inc
add
inc
jno
test
xlat
cld
pusha
stos
xchg
test
push
hlt
mov
xorl
xchg
adc
cmpb
mov
hlt
dec
addb
sub
xchg
lahf
fwait
jns
ja
dec
out
lcall
jae
add
cmc
popa
clc
inc
filds
sbb
cmpsl
cli
mov
cmpsb
loopne
scas
push
in
add
sbb
cld
dec
lock
mov
push
sub
in
xlat
or
adc
fcmovne
sub
push
push
scas
out
sarl
in
rorb
dec
inc
aad
insl
data16
adcb
jae
fldl
push
shlb
sub
push
inc
aad
jae
lods
shr
push
cs
pop
aam
sbb
jmp
adc
lea
data16
and
stc
pop
leave
cmpb
cmp
mov
aaa
fcomps
sahf
xchg
pop
fcomi
rcrb
sub
repnz
pushf
gs
pop
cmpb
sub
mov
subb
std
pop
sbb
out
or
adc
jb
negb
ds
sbb
dec
sbb
or
sub
std
add
mov
paddd
loopne
xor
pop
adc
fsts
jge
sub
or
out
loopne
push
jg
decb
jae
bswap
shl
jns
jg
enter
adc
test
data16
and
jo
mov
loopne
lock
cmpb
or
push
inc
icebp
and
add
jle
cld
and
jae
pop
inc
xchg
sar
jl
lahf
mov
add
shrb
rcrb
jmp
mov
out
insl
xchg
roll
jp
outsl
sbb
imul
test
testl
pop
out
and
fists
idivl
pushf
aaa
add
mov
or
jp
adc
mov
ljmp
xor
mov
andl
cmp
ror
jecxz
jae
popf
pop
outsl
pop
fwait
jnp
jnp
fstps
pop
iret
xor
adc
add
lock
inc
xor
fdivr
sti
and
scas
or
arpl
or
pop
stc
cmp
sub
in
test
enter
arpl
dec
sar
pop
push
push
xchg
xor
cwtl
adc
out
xor
sbb
sbb
cld
cmpl
mov
xchg
lock
mov
movsl
add
cmp
loop
pop
into
xchg
cmp
sbb
sub
jbe
sti
pop
cld
cmp
jle
in
subb
icebp
faddl
shrb
adc
insb
mov
orl
jg
sti
rol
outsb
sub
subb
cmp
movsb
mov
aam
cmp
repnz
or
xchg
lods
mov
sub
or
pop
sbb
lds
int3
imul
jmp
sbb
cmpsb
cmp
add
orb
mov
xchg
mov
push
pop
cmp
mov
mov
dec
xchg
js
mov
sub
lds
add
mov
testb
fildl
cmp
dec
mov
mov
cmpsb
and
sub
sbb
loopne
sbb
ss
or
pop
push
mov
fs
push
fimuls
icebp
pop
sbb
inc
insl
sbb
mov
mov
test
mov
or
jmp
ss
sbb
aaa
inc
jno
cmp
add
and
or
das
rclb
ljmp
icebp
outsb
sub
negl
push
or
rcr
sbb
fidivl
pop
test
jae
insl
mov
inc
fadds
sbb
push
or
mov
aaa
sub
andb
fadds
das
lods
scas
or
lret
adc
pop
mov
mov
jbe
pop
mov
xor
ja
mov
daa
jno
pop
idivb
out
push
dec
xor
dec
sti
outsb
or
cmp
idivl
push
cmp
and
sbb
mov
add
sub
mov
lcall
push
in
adc
xorb
test
movl
add
xorb
pop
setns
cmp
sbb
xchg
mov
popf
add
orb
inc
and
addb
insb
pop
cld
inc
jno
jl
out
mov
dec
cmp
push
sub
insb
scas
imul
pop
cmp
and
rorb
scas
adc
testl
test
js
es
add
cs
adc
cmpsl
jb
outsl
mov
push
repz
filds
cwtl
xor
cld
adc
loopne
repnz
xchg
rolb
pop
mov
and
fistps
dec
subb
xor
leave
jmp
push
roll
cmpb
sbb
xchg
adc
add
jle
pushf
rorl
fisubs
add
in
jmp
sbb
test
out
push
push
addb
sbbb
loope
add
cmpb
adc
lret
orl
mov
cmp
lock
cli
cld
push
fcompl
pop
sbbb
inc
cs
es
rclb
push
adc
testb
gs
scas
ja
lods
xchg
pop
or
xchg
dec
roll
xchg
xchg
push
pop
popa
orb
push
lahf
test
jmp
mov
cwtl
je
es
decl
or
jmp
fldl
sub
pop
lock
bound
sbb
test
cwtl
xchg
mov
adc
xor
or
test
xchg
add
mov
xchg
out
add
xor
clc
mov
and
xchg
hlt
cmpsb
mov
test
push
jecxz
xchg
nop
push
jle
pusha
loope
dec
lret
ds
add
aas
mov
dec
addl
jg
xor
adc
das
sahf
test
mov
cmpb
jo
subb
push
cmp
lds
or
ret
sarb
jns
or
cmp
jle
jb
xchg
lret
insl
ret
push
push
xchg
xchg
sbb
mov
xorb
push
je
inc
jmp
xchg
jge
add
lock
hlt
inc
add
jno
call
lahf
mov
cmc
out
add
xchg
dec
scas
outsb
xchg
mov
sub
in
add
lcall
sahf
jg
incb
shlb
popa
mov
outsl
and
scas
mov
divl
in
je
mov
adc
jae,pn
and
sub
xchg
lar
loopne
inc
fsts
popf
inc
and
mov
les
sbb
shlb
cltd
mov
add
or
cli
lret
xor
int3
adcb
inc
jo
xor
mov
mov
repnz
cmp
jae
inc
xchg
pop
dec
add
xchg
mov
in
imul
pop
push
leave
bound
jb
dec
jle
xchg
mov
mov
cmp
and
jnp
mov
sbbb
push
insl
call
repz
sti
mov
loopne
aas
mov
xor
cld
inc
int3
fldl
dec
mov
clc
add
or
adc
data16
lods
lret
cmpsb
dec
mov
dec
xchg
jo
mov
pushf
mov
test
das
cmpsl
jns
xlat
pusha
xor
pushf
fdivr
movsb
add
xchg
iret
dec
sbbl
push
sbb
repz
mov
js
adc
and
stos
xchg
and
test
data16
xchg
adc
rol
cmp
ficoms
xor
xor
inc
inc
clc
sbb
xchg
test
jnp
sbbb
sbb
fists
mov
cmpsb
bound
js
outsl
ss
adc
aaa
sti
sbb
ljmp
xchg
inc
mov
leave
movsb
adc
orb
test
fs
stc
in
push
add
mov
ljmp
test
add
leave
cs
fcmovb
cmp
test
sarb
insb
bound
cmp
push
push
mov
cmp
jg
in
cmp
jle
fld
repz
dec
outsl
repnz
mov
lret
fs
cli
mov
mov
bound
imul
push
mul
outsl
mov
fiaddl
mov
int3
pop
mov
xchg
and
jl
sbb
xor
mov
sub
and
sub
mov
lods
lods
stos
or
cmpsb
rolb
outsb
or
roll
jo
sub
fcompl
movsb
call
iret
mov
dec
out
and
fwait
dec
adc
jno
push
es
mov
pop
insb
les
das
mov
ret
cli
push
test
es
push
fidivl
jg,pt
xchg
jge
adc
mov
and
shl
sub
ret
mov
jo
sbb
aaa
pop
cmp
inc
adc
jae
push
and
dec
fwait
sti
jg
testb
xor
and
adc
jbe
sbb
decl
subb
adc
sbbb
divl
mov
jne
imul
pop
sbb
mov
push
std
adc
jmp
and
add
lock
es
outsl
jb
inc
fisubrl
mov
repz
jge
sub
sti
js
and
pop
andl
adcl
lahf
dec
mov
cmp
test
mov
add
mov
stc
adc
and
cltd
mov
cmp
push
cmp
stos
add
fwait
cmc
divl
xlat
and
mov
fiadds
cwtl
push
sbbb
or
add
cmpsb
imul
in
aam
rorb
popf
mov
subb
add
and
inc
test
lret
xchg
cmp
add
sub
or
addb
loopne
jecxz
add
cld
cmp
pop
adc
flds
cmpsl
mov
push
in
xor
jl
xor
push
loopne
sub
mov
ss
movb
sbbb
dec
int3
iret
cmp
ret
xlat
pop
decl
test
xor
loopne
jecxz
cld
or
aas
push
jno
ret
xor
fldt
mov
mov
ds
dec
inc
jb
jg
hlt
jns
adc
sahf
and
leave
shlb
cltd
incb
dec
movsl
ficoml
pushf
shrl
and
cmp
push
stos
mov
cld
std
and
jle
jp
inc
ss
cld
cmp
inc
mov
adc
pop
leave
pusha
enter
cmp
jns
and
jl
jp
or
mov
and
cmpsl
hlt
adc
insl
aas
jl
dec
adc
mov
jmp
sub
mov
lock
push
pusha
bound
lcall
cli
lahf
lods
cmpw
adc
mov
fs
std
ljmp
mov
and
aas
cmp
pushl
out
je
and
je
and
pop
les
rcrl
and
loopne
out
xor
jg
dec
out
mov
jge
or
add
dec
mov
push
push
test
jmp
push
xchg
push
pop
and
enter
inc
addb
dec
or
ret
xor
leave
insl
cwtl
sbb
jp
mov
adc
jle
test
mov
mov
and
sbb
lret
push
arpl
negl
push
mov
fldcw
int
shl
mov
sbb
jae
cltd
clc
adc
jp
loopne
xor
pushf
ficoml
adc
lret
nop
insb
cli
cmpb
mov
or
dec
popl
mulb
mov
insb
add
arpl
or
repz
fistps
push
or
xchg
sarl
aaa
push
decl
sub
adc
mov
bnd
icebp
push
incb
movsl
ja
lock
fists
adc
xlat
dec
xor
incl
adc
sub
js
rolb
xor
subb
inc
mov
adc
fistl
sub
and
and
hlt
push
cmpsb
lds
pop
pushf
orl
mov
lcall
mov
cld
adc
std
xchg
inc
lock
jg
ror
in
aas
daa
stos
dec
jp
jns
lods
fldl
jbe
dec
pop
push
lock
mov
xor
sub
cltd
shlb
test
and
aaa
orb
push
clc
inc
shrl
addb
mov
sahf
push
loopne
push
fwait
cli
subb
pop
inc
std
cmp
cmpb
dec
mov
add
xor
sub
mov
jb
add
xchg
pop
popf
sbb
sbb
sbb
sbb
cmpb
cmp
cmc
lods
cmp
iret
int
outsb
mulb
adc
fs
add
xorl
adc
test
mov
jl
stos
sbb
pop
push
mov
decl
cmp
sbbb
ret
sti
das
cmpsl
push
imul
lea
xor
inc
sahf
loope
push
add
mov
call
std
adc
sub
and
sbbb
cld
xor
add
and
add
fists
idivb
loop
xor
xorb
cmpsb
inc
sbb
fadds
cmp
daa
bound
push
mov
pop
cmp
rclb
jl
orb
jmp
sti
cmp
into
mov
lods
sbb
xor
out
push
cmp
and
mov
pop
mov
sbb
gs
sbbb
bound
jmp
adc
inc
xor
and
or
inc
scas
out
hlt
addb
out
mov
ret
xlat
push
inc
mov
mov
jmp
adcb
push
daa
cltd
pop
xor
sti
push
mov
xor
movl
sbb
dec
push
pop
rorb
std
lcall
addr16
xor
mov
ss
dec
push
in
enter
adcb
cwtl
inc
movsb
lods
ret
and
sar
jecxz
add
imul
popf
hlt
loop
orb
pushf
es
imul
fildll
in
mov
out
mov
imul
push
mov
or
inc
shlb
xchg
cmpsl
xrelease
push
pop
add
xor
push
and
cmp
mov
bound
mov
mov
cmpb
mov
psubb
mov
cld
ret
and
mov
in
icebp
adcb
ds
push
sub
andl
js
xchg
pushf
lds
cmp
add
inc
xchg
daa
cld
insb
sbbb
adc
sub
mov
roll
data16
push
repz
pop
and
je
inc
jo
aas
push
dec
arpl
inc
mov
pop
push
nop
xlat
test
adc
out
out
mov
inc
repz
mov
sbb
not
add
dec
xor
push
or
push
sti
pop
enter
mov
lds
addl
xchg
cs
pop
ret
lock
xor
mov
cltd
orps
imul
or
push
ds
shlb
cmp
in
stc
xchg
int
dec
lock
cmp
xchg
cmp
jae
dec
or
gs
aam
xor
pusha
push
and
lock
enter
add
out
lret
sub
adc
stos
int3
add
enter
xchg
call
mov
rolb
sub
xchg
add
adcb
icebp
mov
push
cmp
jg
pop
cmpsl
jge
pop
sub
jmp
lods
repnz
outsb
xchg
int3
insb
mov
sbbb
push
jno
add
popf
sub
xchg
pop
mov
out
cmc
ss
loopne
popa
fsubrp
sub
insl
mov
or
sub
sbb
pop
or
jo
pop
in
aaa
jae
js
cmc
hlt
mov
stos
sbbb
xor
cli
adc
push
imul
pxor
rolb
cmp
loop
fldenv
sub
cmp
mov
hlt
jl
sbbb
pop
aaa
cld
inc
loopne
pop
fs
and
adc
popf
rorb
out
pop
dec
mov
mov
xor
insl
orb
fidivrs
andb
push
or
enter
dec
aam
push
push
sbbb
pop
push
es
iret
sbbb
pop
fs
sub
out
pushf
das
fnstcw
push
shll
mov
and
inc
leavew
mov
test
mov
or
inc
xchg
fdivs
subb
pop
jmp
lods
push
enter
xor
mov
sub
lret
cmpb
mov
push
xor
adcb
imul
jns
inc
xchg
sbb
sbb
push
test
lcall
push
cmp
or
data16
inc
push
add
push
sbb
pushf
outsl
hlt
insb
clc
sbbb
test
fwait
adc
movsl
sarb
aas
fbstp
fisubrs
popf
or
rorb
incl
out
stc
mov
push
clc
xor
sahf
popa
ljmp
loop
pusha
or
mov
data16
adc
lds
outsb
ss
cmp
test
and
icebp
and
jnp
cmp
loope
int
inc
int3
js
fwait
inc
sub
push
imul
mov
add
imul
cmc
out
gs
addb
testl
cmpb
add
add
ja
mov
roll
jmp
subb
xor
mov
ljmp
clc
idivl
in
jecxz
sbb
mov
jle
ja
orb
fdivl
ds
xorb
xchg
cmp
push
test
pusha
inc
cli
dec
push
sbb
sbb
cmp
shl
push
pop
jne
push
jb
and
inc
xor
sub
sbb
movlhps
call
sub
push
cmp
mov
sbb
xchg
mov
push
rol
push
mov
rcrb
pop
movsb
loope
inc
scas
bound
incl
adc
das
or
adc
sbb
jmp
or
lahf
mov
testb
inc
sbb
popf
inc
adcl
sbb
jg
pusha
mov
sub
add
or
lahf
clc
dec
cmp
les
lcall
mov
xor
or
xor
inc
inc
push
cld
sbb
outsb
pop
fwait
std
pop
mov
mov
jo
adcl
xchg
xor
test
mov
jo
xchg
scas
mov
pop
gs
rclb
or
mov
test
push
mov
lods
push
sub
cmp
jecxz
ss
mov
pop
jno
subb
and
aas
aam
out
outsl
cmpb
sbbb
add
cltd
add
call
inc
popa
pop
mov
cmp
lahf
cmova
loopne
sub
ficomps
addb
or
or
sub
push
and
add
mov
ret
icebp
lock
mov
ret
push
andb
mov
sbbb
ror
subb
jmp
xchg
inc
in
mov
adc
and
sub
mov
cmp
int3
mov
pop
pop
scas
and
rclb
lret
mov
xchg
cmpsl
push
xchg
cmp
jle
aas
movsb
sub
jecxz
xor
cltd
and
lods
repnz
or
shl
or
mov
andb
adc
ja
or
movsl
dec
xor
cmp
adcb
mov
movsb
cli
ficomps
jno
add
sbb
jo
push
testb
or
mov
daa
pop
dec
or
xor
push
mov
mul
dec
mov
sbb
cmp
in
sub
andb
insb
loop
push
das
mov
cld
out
pop
sahf
and
or
arpl
jle
fisttpll
movsb
push
fnsetpm(287
repnz
sub
jg
jge
push
jo
in
mov
adc
orl
sar
repz
stos
mov
fwait
mov
adcb
jmp
xchg
fcmove
in
andb
out
mov
add
nop
mov
jmp
add
mov
test
inc
lret
mov
ja
xchg
push
inc
cmpsl
daa
pop
js
jno
sub
dec
mov
aaa
addr16
aam
movb
xor
js
or
hlt
aas
rorb
sbb
xor
lret
sbb
cmp
xlat
jp
cmpsl
sbbb
mov
xor
icebp
cwtl
dec
add
pop
dec
adc
mov
popa
push
sub
mov
icebp
das
movsb
cs
gs
roll
std
or
dec
loopne
dec
mov
cmpb
dec
sahf
in
data16
mov
movl
pop
jnp
and
jg
ret
imulb
push
icebp
and
cld
adcb
insb
leave
outsb
iret
or
pop
shr
push
cmpb
push
adcb
shll
mov
insb
xchg
sbb
jle
fwait
scas
sbb
shl
mov
inc
mov
into
mov
jbe
aaa
xchg
inc
ret
mov
lcall
xchg
mov
pop
inc
cmp
mov
dec
ds
daa
xlat
outsl
push
push
cli
rolb
clc
scas
or
faddl
jno
sbbb
jmp
or
adcb
xchg
xchg
sbb
cmp
fnstsw
cwtl
mov
or
stos
call
xor
pop
fdivp
and
cmpb
mov
jae
push
add
sbb
test
iret
xchg
push
jmp
rorl
icebp
sbb
xorb
out
jb
in
mov
jns
scas
or
mov
fcomps
jno
lods
stos
shr
aaa
shl
push
fnstcw
inc
cmp
dec
in
es
out
mov
insl
popf
lods
jmp
dec
sahf
sti
dec
add
jmp
pop
subb
adc
xorb
dec
test
andb
add
mov
movsb
call
clc
rorl
or
inc
aam
push
and
and
or
adc
xchg
lods
mov
dec
add
xchg
scas
push
gs
cld
cmp
or
stos
out
dec
or
xorb
test
jmp
pop
adc
shl
je
bound
ljmp
add
cmp
or
mov
pop
sub
inc
imul
in
cmp
insl
push
inc
xor
mov
lahf
or
sub
xor
inc
fiaddl
mov
mov
je
hlt
xchg
jmp
sub
shl
iret
lea
mov
mov
fists
fnsave
pop
jmp
ret
outsl
jae
rcrb
sbb
sub
mov
or
and
rorb
inc
call
push
sub
add
sub
lds
dec
adc
outsl
cmp
xchg
popw
into
in
mov
add
dec
gs
or
xchg
jno
jae
mov
pusha
insl
add
xchg
push
pop
mov
add
outsb
fdivl
jbe
or
clc
xchg
add
loopne
arpl
xchg
xchg
addb
inc
pop
or
pop
or
dec
outsb
insb
imul
pop
mov
add
andb
mov
or
push
fcmovnu
ss
cmp
es
aas
out
adc
scas
mov
mov
js
adc
sub
arpl
lea
jnp
pop
das
repz
pop
push
cmp
repnz
xor
leave
mov
mov
movsb
adc
jnp
xchg
dec
push
daa
push
add
mov
sbbb
push
repnz
jle
popf
xchg
push
orb
fildl
in
push
jo
sbb
cli
addl
add
pop
cmpsl
rcrl
popl
mov
cmc
popf
cltd
dec
lret
xchg
js
ja
lret
test
or
cld
scas
fwait
xchg
test
add
bound
and
mov
cmpb
or
int
ret
sahf
cmp
nop
mov
mov
mov
sbb
daa
or
jmp
icebp
movsl
adcb
mov
jne
into
pop
mov
xor
cmpsl
push
mov
sbb
xlat
repz
sbbb
hlt
aam
lcall
adc
in
shrb
mov
cmpsl
rcl
arpl
mov
add
addr16
sbb
pop
mov
outsl
jmp
add
stos
push
fisubs
test
sub
movsb
dec
jge
ss
std
jnp
test
call
pop
xchg
jnp
cmc
lods
mov
pop
sbb
jge
aas
sbb
jmp
adcb
xchg
das
lods
or
jno
jb
pop
push
fldl
enter
loopne
ja
aad
pop
jbe
adcb
dec
xor
out
mov
or
pop
aaa
fisttps
fucomi
fs
mov
jmp
ret
rcrb
mov
sbbb
mov
jge
addr16
pop
cmp
or
xchg
int3
filds
add
into
addl
popa
or
jge
mov
nop
xchg
xchg
mov
adc
mov
adc
sbb
xchg
sbb
mov
cs
mov
fs
cltd
adc
jbe
fistpll
mov
adcb
xchg
jmp
adcb
xchg
mov
mov
test
orb
add
aas
xorl
mov
push
lret
lods
xorb
push
mov
mov
dec
push
mov
cmp
fidivrl
or
test
lods
pop
rorb
jmp
pop
orb
in
aam
mov
pop
addb
repnz
jo
inc
inc
add
mov
mov
dec
hlt
inc
mov
pop
mov
mov
cmp
jo
cmp
popa
loopne
sbb
add
pop
dec
sbbb
js
push
xchg
mov
fdivrl
or
adc
add
out
push
or
insl
fcom
stos
incl
in
sahf
cmp
subb
aas
ficoml
lcallw
orb
aaa
scas
adc
fldl
jle
or
das
addr16
aas
add
adcb
lds
sub
sbb
or
mov
outsl
mov
adc
mov
aaa
gs
mov
and
mov
out
into
adcb
jmp
or
sub
loopne
mov
in
sbb
xchg
and
mov
add
rcrl
push
add
sub
mov
pop
and
mov
mov
xor
out
scas
mov
jo
nop
fildl
xchg
ljmp
ds
lock
mull
out
shlb
xchg
inc
mov
mov
inc
in
fisubrs
xlat
push
repnz
or
lret
mov
pop
jnp
xor
jp
add
cmp
inc
subb
cmpsb
ret
mov
andb
push
xor
adc
stos
sub
cmp
cmpl
lea
stc
das
test
imull
cld
leave
jne
je
loopne
out
cmp
out
shl
or
jge
sbbb
sub
clc
popa
dec
xchg
das
divb
xorb
out
lea
fiaddl
pop
aaa
shl
xchg
test
xchg
adcb
out
bound
ss
adcb
cmc
mov
sbbb
nop
pushf
mov
mov
fidivrl
cmpsb
pop
sub
jg
rcll
cmpsl
add
out
push
jae
and
xorb
andl
dec
test
adc
stos
or
dec
sbb
insl
xchg
xor
orb
inc
out
popf
fisubrl
lock
push
testl
dec
fdivl
popf
jg
into
xor
cmp
mov
lock
xchg
fisubs
ds
lock
and
jp
cmpsb
repnz
xorb
insl
adcb
insb
sub
pop
jmp
pop
fsubl
lcall
xchg
mov
or
dec
icebp
pop
das
call
or
cmp
dec
cmc
movsl
sub
mov
mov
rol
lret
xor
and
rolb
push
pop
int3
orb
xor
cmpsb
movb
scas
jecxz
orb
mov
dec
subb
sbb
xor
popf
mov
lods
push
aas
cmpb
ffree
mov
cltd
and
cmp
jg
lods
sti
mov
popf
inc
pop
ret
movl
cmp
enter
add
test
adc
jb
sbb
mov
or
mov
das
test
mov
jns
aaa
fs
inc
enter
add
jle
xor
sbb
sub
xor
sub
repnz
lock
cmc
pushf
add
xchg
lret
inc
mov
cwtl
outsl
adc
pop
cmp
test
push
mov
add
hlt
jecxz
std
add
ljmp
cld
nop
push
add
jno
xchg
mov
shrl
lods
xchg
mov
add
rcrl
sub
sbb
mov
inc
jns
adc
jle
mov
mov
mov
bound
and
xor
test
sahf
xchg
push
pop
mov
adc
movups
sub
sub
inc
xchg
mov
adc
imul
cmpsl
add
lods
jb
inc
cwtl
mov
xchg
dec
adc
andl
neg
cli
or
dec
mov
and
inc
stos
subb
outsl
and
push
inc
adc
mov
xchg
add
xchg
pushw
mov
add
ja
rep
or
and
xor
sbb
sbb
icebp
imul
jbe,pt
pop
andb
fstpt
push
cmp
cmc
loop
cltd
test
clc
xchg
jnp,pn
stos
dec
andb
sbb
popa
lea
inc
mov
leave
add
cwtl
jns
add
pusha
je
das
mov
dec
test
repz
lock
xchg
pop
rolb
pushf
xchg
loop
push
fists
pop
inc
add
adc
bound
push
mov
lock
mov
cwtl
subb
shlb
pushf
add
mov
mov
hlt
filds
xlat
cmp
inc
stc
and
popa
lret
xchg
jmp
in
in
mov
push
orps
ja
jecxz
lock
stos
stc
mov
jb
ret
es
roll
cli
mov
test
cmp
inc
addb
pusha
test
fsubr
scas
mov
sbb
aad
inc
adc
je
push
popa
fcomps
and
icebp
or
pop
outsl
cmp
add
xor
pop
ss
popf
cli
subb
xchg
xor
inc
cmpsl
dec
fcoms
ret
cmp
fldln2
fisubrl
movsb
jbe
lea
inc
imul
cld
cmp
daa
clc
cmp
dec
lds
adcb
sbb
sbbb
in
sub
jae
jo
cmp
mov
popf
push
adc
jne
and
hlt
push
push
sbb
jle
cmc
scas
or
inc
lahf
shl
test
sbb
sub
inc
sub
mov
data16
cld
loope
cmp
addr16
mov
or
jg
orb
dec
xor
scas
mov
iret
call
or
mov
andb
fildll
hlt
nop
add
mov
xchg
jmp
sbbb
push
pop
adcb
lods
scas
cmp
jmp
add
or
clc
dec
or
mov
mov
add
out
xor
xor
out
sbb
lcall
aaa
pop
ds
repz
loope
cmp
ja
seta
or
sarb
pushaw
cltd
adc
adc
sahf
stc
jmp
les
mov
popf
lret
pop
aad
jbe
fldl
jae
das
movsb
push
mov
clc
arpl
pop
leave
mov
and
jg
mov
sbbb
xchg
lret
or
subb
xor
and
xorb
jl
add
faddl
test
cmp
add
mov
aas
mov
xlat
add
dec
jmp
call
pop
lret
or
outsl
bound
adc
in
push
fidivrs
iret
andb
dec
pusha
mov
mov
popa
in
sti
pop
cmp
scas
orb
xchg
push
js
sbb
aam
add
and
fstpl
sarb
mov
push
xchg
pop
fbld
push
add
fdiv
inc
sbb
pop
cmp
xchg
dec
mov
sbbb
aam
adc
mov
mov
sub
lahf
je
mov
sub
pop
inc
inc
cmp
filds
jo
mov
ror
sub
xor
mov
cmpb
xchg
lds
mov
push
cs
sub
sarb
lds
dec
sub
out
movsb
mov
jle
arpl
out
popa
mov
mov
lock
imul
sub
lahf
or
jmp
pop
cwtl
rclb
repnz
pop
xlat
hlt
cmpb
in
fcmovnb
cmp
lds
add
mov
jg
decb
cmp
pop
sahf
sbb
xchg
push
icebp
idiv
lods
sbb
in
jle
sbb
int
mov
test
repnz
jmp
test
cmpsb
push
adc
ret
sub
pop
pop
ljmp
cmpsl
push
jne
mov
test
andb
xchg
add
push
mov
cmpsb
xorb
test
mov
cmp
sbb
insl
sbb
dec
lods
nop
mov
mov
fstpl
cmp
ja
in
inc
lret
and
adcb
xchg
and
inc
jge
insl
jnp
mov
add
cmc
mov
nop
scas
scas
mov
out
xchg
lods
inc
cmp
test
sub
mov
ss
clc
mov
mov
jns
in
add
mov
test
fiadds
mov
jae
in
repnz
addl
sbb
or
pop
call
jne
cmc
fnsave
add
pop
cwtl
cwtl
and
cld
flds
cmpsb
fs
or
negl
sbb
jg
je
cli
push
sbb
jnp
xor
dec
sub
aam
cmpb
xchg
jmp
mov
inc
movsb
xchg
and
mov
pop
dec
jno
inc
mov
call
iret
and
xor
sub
or
nop
dec
mov
pop
subb
pop
andl
out
mov
lock
mov
lahf
xchg
int
rorl
ret
sub
lahf
lock
mov
mov
pop
popa
pusha
mov
add
mov
add
jb
addr16
cmp
mov
mov
xor
cmpb
adc
push
add
dec
xchg
mov
add
inc
cmp
inc
adc
and
icebp
test
jno
scas
bound
test
mov
in
sub
inc
push
std
push
pop
inc
lock
xor
xchg
mov
icebp
push
je
ret
ja
push
loop
fidivs
arpl
in
pusha
fadds
xor
and
cmp
enter
mov
cmp
in
push
push
mov
icebp
mov
test
cmp
orb
aaa
push
movsb
cmpsb
jne
not
mov
add
enter
shlb
test
cltd
pushf
cmp
test
xchg
cmpps
or
das
incl
jl
lea
xor
pop
cmp
fwait
push
add
test
fistps
xor
xchg
orb
and
les
nop
mov
xchg
jmp
adcb
mov
sbb
int
sub
xchg
xor
in
call
inc
out
cmc
dec
icebp
pushf
pop
mov
sub
lret
shrl
xor
lock
mov
sub
cmpsl
sbbb
movb
lods
cmp
adc
xchg
into
mov
push
add
inc
clc
pop
lea
mov
sub
add
xor
das
xor
push
fwait
pop
adc
dec
push
rolw
pop
test
sbb
addr16
ret
xor
pop
or
add
sub
lock
fnstsw
loope
pop
cmc
mov
iret
adc
inc
xor
mov
adc
out
sahf
mov
pop
jle
in
or
pop
mov
inc
lock
testb
pop
adc
ljmp
ss
push
and
in
sub
sub
testl
add
gs
out
mov
jg
jmp
int
mov
push
repz
sarb
xor
jmp
es
addb
xchg
xorb
lret
jge
lock
mov
loopne
aam
stos
inc
lcall
insl
sarb
andl
jl
dec
xchg
adcb
push
jge
mov
subb
xchg
xor
xchg
stos
xorb
in
fdivr
in
mov
jno
lahf
js
cmpsb
jg
fisubs
enter
inc
addb
mov
imull
shl
push
ficoml
addb
xchg
sub
adc
sbb
mov
lcall
lahf
adc
sarl
iret
orb
cmp
sbb
aaa
mov
and
loop
jl
in
adcb
cwtl
add
fiaddl
dec
jnp
inc
mov
push
mov
js
pop
fistps
into
cmpb
iret
adcb
cmp
andb
out
sub
xchg
std
incb
pop
pop
icebp
or
js
adcb
std
jnp
dec
push
subb
cmp
popf
adcb
mov
sbb
into
jmp
orb
mov
sbb
aas
cmp
rcl
xchg
cltd
scas
loop
push
out
cmp
movsb
cmpb
daa
mov
je
popa
xor
mov
neg
and
es
cmp
lods
scas
sbb
inc
dec
mov
fldl
lahf
stc
cmp
ror
jp
subb
lcall
push
mov
cmp
jge
sahf
inc
or
pushf
repz
clc
mov
push
lcall
imul
out
mul
xor
es
or
roll
cmpsb
jle
addb
out
push
loopne
clc
or
or
inc
mov
outsb
mov
and
pop
push
fbstp
sub
js
out
subb
icebp
cmp
add
cmpb
xor
xorb
jne
cmp
icebp
andb
das
call
sbbb
stc
and
test
aad
adcl
lea
daa
push
push
scas
inc
xor
test
cmpb
lret
test
push
cmp
lock
andb
les
mov
mov
ds
pop
andb
pop
pop
imul
mov
jo
xor
sbb
lock
jne
loopne
and
iret
xchg
xor
cld
filds
cs
lock
add
ja
dec
lods
inc
add
out
push
add
fnstenv
insb
mov
or
in
fiadds
sub
fldenv
pop
xorb
imul
sbb
sbbb
jns
sti
sahf
add
dec
mov
cmpsl
mov
adcb
cmp
and
adcb
leave
jbe
and
clc
pop
add
imul
mov
int
repz
push
add
in
orl
push
xchg
lret
test
cmp
lock
repnz
mov
jns
cmpsl
lea
inc
sahf
repnz
sbb
push
es
sub
cmp
cmpsb
xor
fisubs
xor
fwait
mov
fldl
mov
cmp
andb
dec
rcrl
pop
iret
rcrb
pop
orb
stc
mov
int
call
dec
add
subb
adc
mov
fisubs
ja
cmpsb
jmp
xchg
lds
xchg
incb
int
lock
xchg
xchg
pop
lret
and
adc
loop
imulb
repnz
adc
cmp
imul
ss
les
xlat
adcb
das
jmp
mov
push
sbb
cmpsl
imul
loope
mov
lcall
movl
or
dec
int3
lea
and
cs
or
cld
mov
cmp
pop
dec
les
repz
rcrl
rclb
testl
das
addr16
nop
fwait
cltd
lock
ret
stc
jne
lret
or
push
add
clc
and
loope
mov
and
pop
xor
mov
push
stos
js
jmp
imul
sub
and
rorl
lcall
arpl
mov
mov
hlt
shrb
out
and
fildll
pop
inc
dec
pop
cs
ss
subb
mov
dec
in
push
dec
adc
sbbl
mov
inc
mov
test
enter
int3
push
ss
mov
push
cmp
add
pusha
adc
sbb
inc
push
or
adcb
jno
and
sahf
inc
clc
int3
cmp
inc
test
mov
push
aam
pushf
div
sbb
mov
sub
cmp
fimuls
addl
add
jmp
push
adc
addr16
imul
jl
cmp
icebp
add
add
repnz
sbb
loopne
loope
test
cld
addb
push
xor
jns
add
dec
jle
jmp
push
xchg
sbb
int
mov
sarl
lcall
cmpsl
cltd
in
xchg
mov
shll
push
inc
cmp
jbe
lock
adc
fdivrl
int
lods
subb
mov
repz
out
pushf
movsb
aas
jbe
xlat
cmp
lods
in
cmc
mov
pop
aaa
ja
inc
rcll
dec
xchg
mov
xorb
add
popa
sub
clc
push
adc
adcl
mov
cld
cmc
nop
sbb
loope
js
inc
xlat
add
loop
lock
shrb
lahf
push
jb
inc
push
test
and
fsubs
sbb
loop
fucomi
nop
xor
mov
jge
mov
addb
dec
xor
ljmp
icebp
ret
in
adcb
daa
ret
mov
mov
or
pop
xorb
sbb
fisubrs
mov
push
mov
mov
adcb
sbb
sub
sbbb
push
xchg
leave
mov
mov
cmc
add
aaa
mov
jns
add
lods
in
or
mov
jle
test
int3
inc
sbb
push
push
jb
or
inc
add
and
xor
dec
push
push
mov
pop
adc
lds
inc
mov
mov
dec
jno
inc
add
cld
sbbl
lock
fsubrl
bound
lods
ja
jecxz
movsb
or
inc
sbb
mov
pop
loopne
or
mov
ret
mov
std
ficomps
mov
stc
cmpb
and
int
fwait
in
enter
jmp
arpl
aaa
fdivrl
jno
pop
lret
clc
loopne
and
std
adc
imul
fbld
or
loopne
sub
xchg
xchg
mov
xor
je
pop
adcb
mov
push
jb
add
xor
jmp
cmpb
daa
dec
push
lods
mov
cmp
scas
xor
lods
in
fwait
push
stos
xchg
jns
jle
outsb
jecxz
push
mov
sbbb
push
divb
popa
scas
push
xorb
adc
xchg
lods
xor
fiaddl
sub
xchg
jo
adc
adcb
push
or
xor
scas
jmp
in
sti
cs
xor
inc
movsl
imul
adc
jge
rol
adcb
sbb
push
scas
pop
jbe
cmc
cmp
pop
gs
in
jecxz
stos
pop
xchg
lods
cld
js
pop
xchg
push
push
hlt
push
addb
cmpsl
mov
shll
jecxz
xor
test
xorb
in
fwait
cltd
pushf
mov
mov
pushf
xchg
jbe
pop
or
mov
pop
and
fists
mov
mov
repz
out
stos
sbb
jo
ljmp
mov
adc
xlat
cmp
lods
mov
das
movsb
jle
and
inc
and
andb
xor
and
adc
or
xor
adc
loop
xorl
push
loopne
outsb
xor
cld
sub
ss
and
mov
lods
xorb
adc
jnp
dec
outsl
dec
sbb
inc
ljmp
xchg
inc
pusha
mov
push
hlt
lea
sbb
jns
adcb
or
push
lea
aam
andl
adc
movsb
adc
xor
bound
andb
lcall
call
mov
das
out
and
sub
push
shrb
fcompp
inc
inc
cmp
mov
ss
popf
fstpl
or
push
add
in
jge
sbb
data16
adc
out
pop
bound
jae
xchg
andb
pop
or
stos
sub
jo
cmp
bound
sbb
mov
pop
frstor
dec
outsb
andb
mov
mov
test
adc
adcb
xchg
xchg
in
shrl
lret
out
push
icebp
adc
and
daa
add
fs
js
fisttps
mov
lahf
or
dec
fcoms
insl
rcl
add
rcrb
add
sub
push
cld
xchg
dec
pop
pop
sbbb
pop
cmpb
cmp
ds
loopne
sbb
in
insl
mov
inc
loop
inc
int3
adc
adc
cwtl
loopne
mov
mov
mov
ss
insl
mov
cmpsl
jbe
pop
inc
cmpsb
or
adc
dec
pop
loopne
lock
mov
testb
out
mov
xchg
xor
xor
push
sarb
fistpll
ret
dec
cmp
js
scas
mov
or
les
sbb
add
ljmp
cmpsl
xlat
in
cltd
mov
jno
sub
add
insb
incl
xchg
addl
clc
dec
lea
or
and
jns
outsb
aaa
cmc
and
push
mov
gs
cld
cld
xor
jno
sub
dec
ja
inc
enter
cmp
fwait
imul
add
or
xchg
into
lock
and
mov
add
in
push
testl
mov
mov
or
add
out
cmp
idivl
cld
xchg
cmpsl
les
push
mov
sub
jp
add
cmc
sbb
cmp
cli
test
addr16
in
mov
mov
push
leave
mov
add
xor
mov
xchg
xlat
xorb
movsl
xchg
mov
cmpb
ret
dec
sbb
outsb
test
dec
out
sub
and
cmc
in
int3
add
jge
jmp
andb
cltd
sti
mov
mov
dec
lds
sbb
test
ds
push
andl
imul
xchg
imul
pop
mov
xchg
mov
xchg
inc
out
pop
lds
pushf
sub
ret
dec
inc
enter
or
roll
cmp
push
mov
push
test
nop
mov
and
das
push
pop
xlat
enter
mov
or
aas
sbb
inc
jno
add
std
mov
lods
test
pop
pop
aam
mov
lds
jecxz
adc
lock
fcomip
push
enter
and
shll
adc
add
or
nop
insb
push
pop
hlt
in
pop
rorb
sub
cs
lods
popa
loopne
ficoms
add
cmp
inc
sub
cmc
addl
scas
and
mov
daa
mov
dec
call
lods
xor
jb
or
add
loop
push
push
mov
mov
pop
mov
loop
push
ret
dec
aam
cmp
sbbb
xor
xorb
mov
xorb
sbb
andb
cmp
addb
inc
jl
xor
push
hlt
cmp
xor
inc
jbe
icebp
cmp
int3
xchg
popa
shlb
orb
sub
iret
xchg
clc
and
adc
xor
scas
xorb
out
and
mov
jns
mov
pop
xchg
enter
mov
pusha
add
dec
roll
icebp
push
aam
cmpb
push
ret
rorb
lcall
mov
mov
push
fisttps
jo
pop
jnp
add
loop
mov
add
hlt
mov
adc
cmpsl
ljmp
cltd
addb
or
sbb
subb
mov
xchg
or
repnz
adc
iret
pop
cmc
jns
add
push
and
xlat
sti
stc
int3
sub
mov
sub
test
mov
or
movsb
stc
sbb
sarl
push
xor
inc
add
aam
out
out
scas
int
mov
mov
lret
icebp
testl
arpl
ror
cmp
daa
clc
add
std
pop
inc
xchg
in
sbb
subb
imul
jmp
dec
push
sub
pop
mov
xchg
add
mov
xor
in
out
push
orb
sahf
inc
lods
jb
aaa
andb
scas
jmp
add
jne
mov
pop
pop
or
divl
adc
fstpt
fsubrl
int
add
shlb
aad
adc
insb
arpl
and
jbe
xor
mov
popf
dec
jae
shrl
cmp
push
rolb
mov
addr16
stc
fadds
mov
enter
loope
mov
inc
pusha
pop
rcr
lds
stos
fnsetpm(287
mov
cmp
mov
push
inc
sub
mov
xchg
xor
add
clc
adc
or
inc
repz
popl
or
divb
subb
sub
cli
lret
int
jnp
sarb
insb
xchg
mull
imul
shlb
sahf
sbb
dec
out
jb
adcl
lock
addr16
subb
aad
xor
shlb
xorb
dec
roll
or
mov
push
insb
fists
jne
mov
sub
xchg
pop
cltd
push
and
shl
and
mov
orb
in
add
rorl
add
inc
xor
sti
xor
mov
in
xor
ljmp
sbb
lea
mov
mov
xor
mov
adcb
or
mov
jmp
push
stos
cmpb
enter
jae
xor
sbb
mov
dec
lods
and
inc
and
pop
cmpsl
inc
rclb
add
jg,pt
shl
sub
cmp
jmp
xchg
pusha
sub
aam
addr16
adc
loopne
jecxz
adc
or
lods
roll
inc
jae
popl
adc
push
cmpsb
rolb
bound
orb
and
addb
sbb
sbb
push
cmc
pop
and
es
int3
cld
sbb
dec
add
cltd
xor
imul
icebp
jbe
sahf
mov
je
loope
xor
mov
popf
jbe
cmp
mov
aaa
xchg
fpatan
nop
andb
xchg
mov
cld
cmpl
add
gs
daa
jno
and
mov
add
das
mov
mov
xchg
addl
mov
aam
or
rcrb
call
xor
mov
inc
pop
repnz
mov
mov
push
xchg
std
pushf
cwtl
in
inc
ret
nop
or
lock
outsl
ret
dec
mov
lds
xchg
int3
jmp
inc
cmp
loope
mov
int
ss
mov
out
push
mov
add
sub
js
cmp
fwait
aaa
add
icebp
in
fisttps
xorb
mov
xchg
push
fcom
pop
loopne
lret
dec
xlat
jbe
push
xchg
inc
cmp
add
loope
cld
clc
gs
andb
and
add
pop
xchg
imul
mov
fcompl
cmp
dec
mov
dec
sbb
or
xor
add
mov
pusha
mov
je
incb
jns
les
adc
test
popf
imul
xchg
inc
icebp
test
ja
out
subb
jg
xchg
in
mov
push
push
push
jmp
pop
clc
jle
adcb
and
jno
push
cmp
add
mov
out
mov
jbe
sar
lods
inc
xor
inc
add
dec
cld
repnz
adc
xchg
mov
stos
stos
dec
adc
cld
adc
sub
xor
lea
jg
jae
cmc
lods
mov
xchg
andb
jge
gs
testl
mov
in
call
sbb
push
mov
xchg
test
xor
mov
mov
xlat
push
faddl
icebp
ss
pop
orb
push
mov
cwtl
test
sub
rorb
adc
incb
mov
das
faddl
cmp
jne,pn
mov
sub
jle
pop
xlat
ror
insl
divl
xorb
mov
xchg
out
in
testb
icebp
aam
add
mov
sbb
inc
pop
clc
jbe
aam
cmc
sub
mov
cmp
add
or
jmp
and
push
sbbb
stc
loope
add
shrb
inc
jns
cmp
xchg
jne
cltd
ljmp
in
sbb
dec
xor
jle
inc
rol
stc
iret
adcb
jno
xorb
pop
add
mov
inc
out
js
add
jp
mov
or
dec
cmpsb
cs
and
jmp
dec
outsb
and
scas
dec
pop
sbb
paddw
sbb
clc
inc
sahf
ds
call
fcmove
xor
shrb
cmc
sbb
loopne
fistl
mov
push
xor
xchg
rcrb
lea
les
subb
js
cmp
push
mov
xchg
inc
cli
les
mov
sbb
xchg
jo
xlat
cmp
mov
add
lcall
rcll
dec
jbe
cmpb
xor
add
decb
testb
mov
sahf
push
sub
out
inc
push
sahf
xchg
lahf
lahf
or
int3
lahf
add
sbb
je
dec
sahf
sub
loope
mov
mov
ja
and
movsl
adc
lret
add
repz
xor
adc
sarb
mov
pop
inc
push
js
mov
push
inc
jg
lock
jle
sahf
fcmovu
adc
mov
das
outsb
mov
cltd
inc
xchg
sbb
push
incb
sbbb
pop
jns
cmovge
dec
fdivrs
mov
pop
adc
inc
xchg
enter
sub
arpl
or
out
popa
mov
int
aad
addb
mov
mov
subb
cmpsb
nop
in
es
pushf
adc
adc
pop
jno
and
inc
xlat
sbb
add
bound
or
repz
stc
lock
or
adc
and
xorb
int3
mov
xchg
sbbb
push
addl
xchg
test
or
xchg
jns
sbb
fidivrl
cs
adc
add
pop
mov
leave
adc
mov
jge
sub
rcl
sahf
add
jno
fimuls
lock
int3
and
sbbb
xchg
fdivrs
pop
add
sar
out
xorb
sarl
insb
mov
sahf
or
mov
ret
aam
lret
fstps
mov
add
jb
shrl
das
cmp
adc
mov
inc
mov
orb
popa
or
xchg
clc
lret
mov
cmpsl
inc
jae
add
adc
push
cli
subb
xor
xchg
sbb
scas
xor
in
jge
in
xchg
insl
cmp
mov
fiadds
push
mov
mov
js
subb
ss
add
leave
stos
sbb
test
push
data16
push
xchg
nop
enter
inc
cmp
ja
into
subb
inc
xchg
pop
cmpsb
sub
mov
in
mov
push
xchg
or
repnz
bound
mov
mov
subb
js
adc
add
jb
test
push
in
mov
push
lods
cmp
andb
clc
pusha
out
adcb
iret
adcb
sub
sbbb
pop
stos
adc
jbe
out
test
pop
push
out
clc
insb
addb
inc
addr16
icebp
or
xor
sub
lea
pop
inc
add
jmp
jge
push
cwtl
xorb
addr16
sbb
mov
sahf
pop
push
mov
incb
nop
fst
push
push
xorb
dec
ret
repz
out
cmpsl
stc
mov
cmp
adcb
insb
dec
mov
and
inc
pop
loopne
test
cmpb
ret
imul
cmp
loop
lret
fs
sbb
mov
rolb
adcb
scas
push
mov
or
shll
mov
addb
mov
and
sub
ds
mov
ficoms
jns
orb
scas
popf
or
sbb
nop
scas
xorb
notl
jns
loop
add
sbb
iret
out
cld
aas
mov
ds
cli
sub
inc
mov
movsb
jae
out
incb
lds
jmp
pop
xor
shr
sahf
push
adc
cld
loopne
scas
scas
jecxz
adc
pop
add
and
je
xor
in
pop
push
mov
jnp
sub
mov
or
insl
sahf
stos
lock
xor
imul
pop
xchg
out
cwtl
in
sub
shr
cmp
xchg
xorb
clc
xorb
sar
inc
xor
jbe
rolb
push
scas
out
cmc
sti
cmp
outsb
adcb
and
inc
aas
or
adc
add
add
mov
add
movsl
pop
decl
cmpb
hlt
lea
outsb
sub
lea
sbb
xor
in
xor
add
or
mov
inc
pop
push
and
xchg
mov
cwtl
pusha
enter
pop
subb
aad
mov
mov
push
inc
jno
sub
popa
cmp
lods
jo
push
rolb
xor
mov
cld
loopne
push
mov
add
shl
add
clc
pusha
pop
xorb
inc
movsb
push
iret
jmp
xchg
ret
xchg
into
cmc
jecxz
mov
xchg
jno
mov
add
inc
daa
out
sub
orb
out
mov
test
jmp
icebp
sub
std
dec
incl
andb
and
adcb
loop
mov
jg
cld
in
cmp
es
repnz
lods
inc
shr
sbbb
pop
fisttpl
sbbb
dec
test
bound
adc
lock
lcall
dec
and
aaa
aam
leave
loopne
pop
jne
xchg
mulb
add
and
mov
nop
push
into
sub
shl
mov
negb
mov
add
sub
cli
inc
cmc
jno
andps
nop
stc
daa
and
or
in
cmp
ret
add
inc
and
sub
push
jmp
adc
data16
test
pusha
fdivrs
pop
inc
dec
mov
or
call
movsb
sbbb
fsubr
je
push
add
lret
popa
fmuls
xchg
aad
fiadds
rolb
xor
jno
cld
loop
xor
and
sti
lods
daa
shll
push
inc
fmull
test
divl
sar
sahf
fistpll
mov
inc
mov
jno
lods
out
int3
stos
cmpsb
in
mov
adc
inc
add
into
xchg
inc
pop
shrb
or
testb
mov
and
push
lea
test
test
jnp
stc
shl
mov
in
xchg
or
dec
or
inc
in
inc
test
xor
lahf
sbb
cmp
cmp
and
in
vpcompressb
shlb
addr16
loopne
leave
daa
mov
inc
add
faddl
xor
mov
addr16
sub
jne
xchg
cwtl
push
mov
out
or
or
sub
outsl
add
add
sbb
jle
jnp
xor
jmp
fcomi
sbb
sar
mov
add
mov
movsb
and
xchg
mov
xchg
jbe
cmp
andb
mov
andb
push
pushf
and
orb
fldt
call
xchg
adc
xchg
shll
pop
mov
adcb
fs
xor
mov
jle
lahf
sbb
data16
sbbb
iret
push
aas
mov
mov
roll
or
pop
sbb
loop
sbb
ljmp
lods
push
imul
subb
sti
mov
fcmovne
sub
lret
sub
repnz
cmpb
jecxz
mov
loopne
fwait
dec
mov
adc
out
scas
outsl
sbb
gs
add
jb
push
fldenv
ret
lods
lcall
in
inc
inc
bnd
add
push
mov
pop
cwtl
ja
movsb
jmp
loopne
xchg
sub
out
orb
leave
adc
pop
sub
xorb
push
faddl
dec
adc
mov
mov
inc
in
add
dec
lcall
out
sbbb
iret
add
orb
xor
jbe
sbb
push
add
leave
cmpsl
sub
pop
jns
das
cwtl
mov
xor
cmpl
inc
in
inc
jp
cmp
pop
xorb
mov
dec
addb
dec
mov
mov
jmp
cmp
scas
push
jle
adc
int
jae
cmp
add
sub
fcomp
mov
out
stos
inc
lret
mov
insl
jbe
insb
inc
sbbb
or
jo
jmp
cmpb
and
es
subb
push
in
imul
rcrb
dec
jae
aaa
jle
mov
and
sub
jne
gs
push
push
lret
dec
lea
push
cld
shrl
mov
dec
scas
sub
imul
scas
pop
rcrb
adcb
idiv
or
mov
icebp
and
decl
dec
das
addb
pop
shll
jno
xor
outsl
push
pusha
xor
fsubl
lret
jns
pushf
cs
mov
xchg
fsubp
loop
jbe
lods
pusha
inc
pop
or
jo
adc
or
dec
arpl
andb
out
xchg
fcompl
inc
daa
inc
aaa
mov
sbb
jmp
xchg
popa
call
clc
mov
dec
xor
fdivrs
xor
adc
and
lds
pop
popa
daa
or
prefetchnta
and
out
sbb
lods
scas
nop
mov
push
push
mov
cmp
xor
lods
incl
lahf
xabort
cmp
jno
stos
inc
ja
pop
repnz
shlb
jne
fistpl
or
aad
inc
xor
add
dec
adc
and
fcmovne
mov
pusha
decl
mov
popa
ja
or
or
cmp
andl
popf
xorb
jmp
ret
cmp
or
cmp
fmul
add
add
imul
inc
sahf
and
mov
data16
in
dec
lahf
out
xchg
fwait
jo
aas
int3
pusha
popl
adcb
sub
add
adc
ljmp
leave
incb
add
mov
add
xchg
and
mov
and
sub
xorb
scas
incb
mov
inc
xchg
out
jnp
jp
sub
add
cmp
lods
ljmp
mov
adcb
jl
cmpb
test
addb
xchg
push
subb
mov
test
aaa
add
fcoms
inc
jg
es
scas
lahf
cli
les
inc
mov
xor
sbbb
sub
cmpsb
cltd
pop
movsl
xchg
dec
jp
sbbb
and
sbb
fadds
jle
dec
pusha
hlt
and
adc
push
cvttps2pi
dec
xchg
jno
adc
and
dec
add
push
mov
and
xchg
std
repnz
je
cli
stc
mov
jmp
cmpsb
cltd
cld
sub
mov
js
mov
xchg
cmpsb
fs
and
rol
cmp
cli
or
stc
mov
pop
mov
pusha
cli
or
in
mov
xlat
and
mov
repnz
add
push
jg
dec
mov
lock
decl
cld
sysenter
loop
adc
orb
cmpb
push
or
dec
add
push
cwtl
cmpb
push
mov
test
xor
imul
adc
outsl
adcb
insl
xlat
dec
sub
cmp
adc
adc
add
mov
clc
orl
test
shl
out
int3
icebp
pop
pop
jnp
dec
rolb
pop
adc
pusha
test
xorl
push
decl
jl
mov
or
and
orb
lock
addl
subb
jnp
mov
lds
add
xchg
add
cmp
sub
daa
pop
add
cmp
sub
add
shll
gs
pop
mov
lcall
push
adc
pop
imul
hlt
stc
repz
mov
sbb
inc
cmp
mov
mov
add
dec
fdivs
adc
ja
sub
inc
in
movl
add
or
push
adc
dec
mov
push
orb
ljmp
setg
clc
jo
sub
iret
daa
int
xor
xor
jo
out
mov
pop
leave
ja
mov
lods
adc
xor
adc
cmp
sub
loope
jle
fidivl
and
dec
and
add
loop
inc
xchg
sub
es
cmp
or
adc
int
clc
faddl
aas
sbb
shrb
mov
lods
shlb
in
or
xchg
xchg
fiaddl
outsb
iret
push
xor
in
sbb
testb
xchg
cmp
lods
adc
xchg
push
fimuls
mov
daa
arpl
mov
jno
push
jl
adc
orb
add
cmp
cmp
andb
push
inc
dec
fiaddl
das
cmc
test
adc
faddl
cld
insb
mov
stos
rcl
rorb
rcrl
push
and
mov
add
ss
sbbb
sahf
and
in
xchg
mov
into
jnp
inc
sbb
xor
std
inc
enter
les
sub
mov
xchg
cmp
int3
repz
lods
imul
pop
cmc
pop
add
or
push
scas
jb
cs
stc
jecxz
lock
cli
outsb
cmp
and
sarb
fimuls
rolb
jnp
rol
add
mov
addr16
clc
xlat
mov
pop
inc
sub
push
push
cld
cmp
push
dec
testb
pop
mov
xor
jno
adcb
orb
js
orb
mov
fdivs
mov
jl
in
lock
cmp
cld
and
test
addb
scas
inc
testb
pushf
sub
cld
inc
jno
mov
add
pop
fdivrs
out
xor
jmp
lods
add
dec
cmp
mov
fidivl
movsb
addr16
test
add
xchg
or
stos
mov
cmp
testb
push
icebp
adc
mov
popa
lea
incb
cli
js
daa
push
pop
xchg
rcll
sbb
add
mov
pop
push
fcoms
sbb
pop
sub
subl
ja
mov
addb
fisttpl
scas
icebp
test
adcl
enter
icebp
push
cmp
and
mov
clc
outsl
shll
add
iret
fs
nop
and
xor
rorb
xor
sbb
or
mov
add
roll
and
psubw
adcb
lods
std
aad
nop
push
es
sti
mov
stc
sub
fwait
push
jmp
subb
xor
mul
dec
es
testl
pop
out
sbbb
mov
sbb
xor
mov
dec
xorb
ret
or
jo
inc
add
xchg
data16
cmp
gs
pop
push
xrelease
and
sbb
pop
jbe
fdivs
jecxz
xchg
cmp
aaa
cmpb
sbb
loopne
addl
cmpsl
popf
out
leave
and
adc
xchg
fidivrs
cmpb
push
adc
fistpll
imul
xor
mov
push
pop
jp
ficoms
push
ja
or
jg
jnp
or
jbe
mov
or
call
hlt
and
xchg
in
ret
stos
mov
inc
jno
pushf
xor
notl
dec
mov
out
test
cwtl
sbbb
xlat
es
cwtl
and
xchg
daa
xchg
icebp
faddl
pushf
xor
cmpsl
int3
movsb
rorl
sub
mov
iret
popa
mov
aaa
in
lock
dec
pop
adc
push
mov
dec
push
stos
push
or
pop
mov
and
mov
lods
jo
addb
nop
out
inc
xor
pushl
aam
xchg
cmpsl
cmp
push
sub
sub
andb
push
scas
cmp
pusha
push
sub
mov
call
mov
ret
scas
cmp
mov
mov
enter
hlt
outsb
ficomps
xchg
or
dec
inc
cmp
sbb
push
scas
mov
cld
stc
je
sbb
fs
mov
push
push
pop
mov
lock
inc
adc
scas
mov
pop
dec
cmp
iret
add
sub
in
and
jp
add
orb
adc
rolb
scas
mov
push
sbb
jno
movsl
sbb
or
sbb
or
xor
push
sbb
xor
lds
ds
outsl
sub
add
enter
sub
xchg
arpl
enter
sbbb
push
cmpsb
fnstenv
cmc
subb
mov
jecxz
push
sub
je
xchg
add
jb
enter
add
dec
in
orb
push
stc
sbb
mov
dec
mov
sub
das
femms
stc
repnz
jmp
xlat
pop
sub
or
pusha
xchg
dec
lock
in
pop
sbbb
fbld
and
jnp
in
lahf
pop
ss
rcr
ja
mov
addb
aad
add
jae
inc
or
dec
dec
jle
add
jp
jo
sbb
mov
cli
or
out
jecxz
pop
jb
dec
mov
ds
dec
jns
scas
mov
sub
mov
stc
pop
add
jb
inc
popf
loopne
out
mov
xor
in
push
xorb
aaa
stos
adcb
hlt
outsl
pop
sub
orb
jge
aas
cs
sbbb
scas
add
xor
arpl
jg
repnz
faddl
jo
jmp
sub
repz
sbb
lahf
subb
adc
dec
lcall
xorb
je
jl
hlt
mov
addr16
loopne
jo
inc
push
add
iret
loopne
sub
or
mov
orb
cli
cmc
ret
or
fstl
sbb
jge
sahf
mov
push
std
jp
outsl
inc
adc
jmp
push
dec
and
push
popf
inc
mov
aam
roll
or
add
lds
push
xor
ret
mov
xchg
mov
xchg
add
imul
ljmp
lcall
das
sbbb
mov
adc
incl
push
inc
mov
mov
roll
lods
lahf
das
mov
rolb
mov
ficomps
popa
mov
xchg
mov
movsl
pop
ljmp
xor
or
sti
xchg
insb
fdivrs
inc
decb
fcmovnb
and
dec
shrl
cmp
fiadds
mov
xor
and
int3
xor
push
cmp
ficoml
mov
adc
shlb
fs
or
ds
repnz
scas
cmp
push
mov
movsb
fwait
xor
mov
ds
jnp
out
shlb
sub
fwait
lcall
xor
flds
jg
cmc
push
xor
out
push
pop
jns
pop
pop
or
cmp
adc
out
fwait
fiadds
sub
outsb
insl
push
out
pop
jmp
push
std
adc
lods
es
or
sbb
sub
add
mov
mov
test
cmp
sbb
orb
jae
inc
nop
ret
xchg
mov
les
mov
mov
lret
mov
imul
add
mov
or
or
ja
mov
lods
sub
fstpl
rorl
mov
fiadds
mov
shlb
xchg
test
cmp
test
inc
mov
cmpsb
and
mov
mov
cmp
mov
xchg
ret
xor
dec
or
lret
lcall
cmp
sub
dec
xchg
inc
ffree
in
dec
jg
jo
cmp
imul
shl
xchg
jl
into
rclb
stc
fiaddl
mov
mov
arpl
notl
popf
mov
xor
fsubl
push
scas
paddsw
test
sub
dec
push
fadds
out
popa
add
lods
ds
lret
sbb
hlt
sbb
push
mov
add
or
pop
xchg
ret
lock
jl
cmpb
imul
out
push
pop
aam
mov
fs
xchg
fwait
and
out
mov
les
rcrb
shlb
pop
or
fnsave
shll
lret
pop
cmp
jne
add
roll
fdivl
or
loopne
push
test
sbbb
lock
ds
adc
mov
scas
mov
jmp
movsl
cmp
mov
cmc
hlt
sub
leave
cmc
sub
cmpsl
insl
cmpb
mov
cmpsb
test
mov
inc
xchg
sbb
xchg
xor
je
decl
cld
js
xor
inc
mov
or
arpl
adc
mov
pop
addb
xchg
sub
pop
fld
xchg
sti
mov
lock
push
mov
jne
cmp
lds
push
mov
sub
sub
out
pop
stos
lock
fadds
std
movsl
jg
mov
mov
xchg
subl
jns
add
dec
fldcw
mov
mov
xlat
mov
push
cmp
iret
test
in
mov
sub
xorb
sub
stos
adc
mov
jbe
jg
dec
outsw
cli
subb
adc
repnz
enter
jle
cmp
icebp
sbb
or
adc
cmp
repnz
out
aad
push
das
jle
sub
das
cli
filds
enter
add
call
pop
mov
and
jb
cmp
fadds
cmp
dec
mov
movsb
dec
cwtl
add
sahf
out
andb
xchg
cmp
push
and
in
pop
hlt
andb
and
xchg
push
sbb
adc
mov
imul
push
sbb
add
and
or
mov
loope
out
outsb
int3
call
fistl
imul
ljmp
adc
jge
aas
popf
push
xorb
inc
add
sub
xorb
inc
leave
dec
cmp
ffreep
es
xor
call
out
pop
add
seta
push
pushl
sbb
push
xlat
cmpsl
dec
push
add
push
push
addb
jo
imul
loope
and
or
out
gs
sbb
scas
ret
sahf
iret
push
jnp
bnd
pop
mov
add
add
inc
aam
add
adc
adcl
fsubrl
mov
inc
adc
pushf
and
push
mov
pop
idivb
push
push
shrb
mov
cmpb
loopne
sbb
test
addr16
adc
add
and
addl
andb
stos
mov
repz
stc
mov
lock
push
add
add
jle
dec
xchg
test
add
jp
in
mov
mov
lods
andb
lret
out
xor
sarl
mov
cmp
xchg
fiaddl
mov
lods
jne
push
ds
and
adcl
jg
in
inc
dec
mulb
iret
in
enter
add
sub
je
orb
jno
push
mov
and
sub
sbb
xor
rorb
stos
or
fidivs
mov
xor
sub
jae
int3
fwait
mov
fsub
dec
push
andb
sti
ficomps
orl
sbbb
inc
xlat
pop
cmp
clc
jno
pushf
js
xor
push
enter
leave
pop
mov
cltd
or
add
mov
aas
or
scas
add
or
cmp
orb
repz
mov
or
adc
and
inc
in
mov
rcr
jbe,pt
and
or
fstpt
xchg
movsl
clc
rclb
cmp
push
fadd
adc
loope
sub
iret
sbb
xchg
xchg
leave
aam
mov
pop
push
jecxz
pop
add
sub
jb
faddl
outsl
clc
sub
mov
cli
and
mov
addb
faddl
xchg
sbb
sub
popf
loopne
xor
sub
mov
pop
cmpb
in
imul
push
sbbb
stc
loopne
je
pop
rorb
ljmp
es
daa
into
add
dec
out
aaa
jns
cli
cmp
scas
jp
or
fdivl
or
test
push
ljmp
enter
out
or
add
mov
push
sbb
repnz
cltd
push
adc
scas
and
and
push
pop
ds
jmp
sub
stos
add
rcrb
sbb
or
add
push
xchg
inc
mov
fcoms
sbb
sahf
and
adcb
inc
in
push
pop
add
nop
loop
mov
clc
sub
cmp
test
sub
das
cmp
lds
mov
cmp
dec
jnp
sti
xor
cmp
arpl
sbb
ja
and
outsl
rorl
cmpsl
addb
aad
jle
xchg
sub
inc
and
test
sub
pushf
or
int
mov
cs
mov
call
add
push
orb
push
xorb
iret
daa
pop
adc
push
jns
add
adc
pop
sub
mov
sahf
push
pop
adc
inc
and
ret
and
movsl
iret
lcall
xchg
and
adc
mov
je
lods
or
orb
popf
negl
or
and
cmpl
mov
icebp
out
add
jb
outsl
pop
fcoms
jo
cmp
ljmp
lods
aad
and
ds
xorb
pop
xor
cli
aaa
lods
loopne
push
mov
jbe
or
add
faddl
sub
mov
das
and
add
mov
int
testl
addb
inc
mov
roll
mov
mov
sti
sub
sbb
or
push
in
sub
sbb
cwtl
out
mov
movsb
shrb
xchg
xchg
inc
xlat
into
sbb
sti
in
mov
test
loope
enter
adc
jo
and
pop
out
add
ret
je
jg
and
jb
test
adc
adc
lret
xchg
mov
out
nop
push
mov
ljmp
nop
adc
sub
sti
xlat
push
sbb
lods
push
xor
orb
xor
fildl
inc
jnp
insl
push
mov
repnz
int
clc
loopne
xor
dec
xchg
push
mov
shrl
mov
xchg
insb
decl
loope
je
dec
adc
lods
cli
shrb
dec
and
cmp
adc
pop
sub
mov
mov
mov
or
push
jmp
dec
aas
popf
sub
das
cmp
sahf
rclb
jns
xchg
andb
mov
dec
mov
adcb
loope
or
jb
out
add
mov
inc
xchg
aam
fdivrl
xchg
cmpsl
dec
add
jle
lahf
lret
cmp
xchg
data16
icebp
lret
fstpl
popf
mov
fwait
xchg
add
xchg
pop
jns
xchg
or
lods
dec
sti
arpl
out
sbb
dec
sti
jbe
ret
push
dec
testl
shll
rclb
aam
xor
inc
aaa
jno
push
scas
fistps
mov
cmp
cwtl
jb
inc
sbb
mov
xchg
push
add
das
push
mov
xchg
jp
mov
mov
insb
sbbb
notl
pop
popf
cmp
or
sub
aas
andb
xor
pop
xchg
dec
mov
addb
pop
xchg
outsb
mov
sub
xchg
add
jae
mov
aad
scas
in
lret
mov
adc
fists
fidivrs
div
jecxz
insb
rorb
add
mov
je
pushf
mov
in
imul
jge
adc
ret
js
ja
lret
mov
mov
sub
les
int3
sub
mov
test
or
xor
xor
cmc
xchg
sarb
fs
or
mov
in
pop
push
adc
and
inc
pop
adc
out
cmpb
sbb
andb
add
stc
push
dec
lahf
arpl
scas
lods
stc
js
outsl
push
cmp
sub
jbe
mov
or
subb
ss
dec
mov
xor
leave
lea
or
dec
repnz
mov
sahf
cmpb
mov
dec
dec
lods
mov
dec
adc
inc
inc
sbb
scas
fsubrl
push
sbb
mov
jae
push
dec
mov
adc
das
xchg
mov
nop
jmp
fdivs
shll
mov
inc
es
faddl
mov
push
rcrb
mov
ds
mov
movl
pop
push
mov
add
and
cli
xchg
pop
roll
cmpsb
ret
lahf
push
test
imul
les
sbb
xchg
push
add
and
mov
adc
ret
push
sbbb
jl
cmovg
xorb
adc
adc
adc
int3
add
cmp
cli
mov
inc
roll
bound
cmc
xor
mov
adc
int3
loopne
psubusw
adc
pop
add
pop
out
stc
sbbb
xchg
outsl
cmp
faddl
cmc
ljmp
pop
mov
inc
add
addr16
fsubs
lahf
mov
push
int3
loopne
pop
add
fwait
in
adc
std
pop
aas
scas
add
sbb
fnstenv
jnp
jg
push
rol
mov
lcall
stc
push
cmpsb
lss
or
scas
mov
inc
dec
scas
push
pop
adc
call
xchg
jl
cld
popa
mov
mov
dec
push
hlt
enter
addb
lcall
into
insl
mov
sbb
push
add
jmp
sub
add
sahf
movsb
jo
orl
mov
mov
xchg
out
add
mov
mov
lea
enter
test
cwtl
adcb
xor
fidivrl
add
scas
dec
inc
pop
fistpll
sub
orb
push
stos
lock
lds
and
and
sbb
xchg
xor
leave
add
xor
movlps
mov
imul
aas
push
or
pushf
icebp
pop
sbb
mov
push
push
testb
hlt
rcrl
cmpsb
icebp
jo
das
xor
idivl
es
or
xchg
test
xchg
fidivrl
negb
mov
mov
sub
arpl
movsb
loope
pop
insb
andb
mov
inc
adc
mov
add
adc
in
xlat
mov
cmp
dec
jbe
mov
adc
out
cmp
iret
push
pop
addl
cmpsl
jae
lret
and
sahf
or
int
inc
jmp
xchg
fcoms
orb
lods
arpl
icebp
subb
roll
push
and
das
pop
mov
mov
xor
add
popa
ds
in
or
ljmp
cmc
xchg
fcompl
aad
bound
scas
mov
cli
jmp
mov
loope
imul
dec
fldcw
testl
lea
xorb
pop
stos
rcr
cwtl
add
fdivrl
cltd
jns
lret
cmp
push
mov
cmp
insl
pop
push
mov
les
add
cmp
inc
sub
cmpsl
mov
into
fdiv
cmpsb
sub
jge
insb
pop
addb
mov
jg
dec
ja
loope
jnp
dec
test
xchg
pop
repnz
and
outsl
inc
inc
repnz
or
pop
aam
mov
sbb
enter
test
pop
test
sub
and
mov
mov
les
and
addb
ret
scas
pushf
jmp
jl
inc
cs
add
or
andb
cmp
in
setne
popf
aas
in
testb
sbb
mov
jae
dec
push
ja
pop
subb
mov
shrl
cmpsl
std
push
or
popa
dec
adc
mov
push
pop
xorb
inc
sbb
aas
cltd
stos
push
fsts
int3
mov
sbb
in
leave
push
sub
orb
xchg
daa
mov
mov
fmulp
jp
mov
es
fs
mov
mov
or
out
mov
or
push
iret
int
push
mov
ljmp
mov
sti
mov
stc
loopne
dec
inc
push
shrb
filds
add
mov
sub
mov
jnp
and
loope
add
outsl
bound
fcomip
cmc
lret
fst
in
clc
insl
add
jb
mov
sbb
add
lea
js
and
pop
push
out
pop
lods
rcrl
push
adc
pop
shrl
cmpb
mov
imul
add
mov
hlt
dec
mov
add
xchg
and
loop
test
js
push
xor
cmp
cmp
adc
icebp
cmpsl
or
mov
roll
inc
xchg
ficomps
scas
pop
push
jae
mov
adc
shl
cwtl
dec
rorl
ror
and
adc
lcall
das
imul
inc
lret
cmpb
sub
test
leave
daa
pushf
stos
imul
shll
test
bound
ja
flds
ss
movsb
cmp
push
add
inc
xor
fcomps
nop
cmp
mov
pop
jbe
sbb
xlat
xor
sbb
pusha
daa
insl
push
orb
das
sub
sbb
add
lea
icebp
push
lret
xchg
add
push
jbe
hlt
jp
lea
and
xchg
in
jnp
jns
sahf
ja
inc
add
sub
aaa
push
jle
push
mov
aas
insb
cmp
fucomp
dec
add
sbbb
mov
sbb
and
sti
jo
test
push
repz
xor
ret
adc
cmp
lahf
sbb
outsb
adc
or
lods
daa
repnz
mov
imul
cmpsl
mov
inc
cwtl
jecxz
mov
pop
pushf
repz
out
mov
mov
sbb
lea
pop
dec
sub
jmp
out
cmpsl
cwtl
fmul
add
or
adc
fsts
es
stos
add
repnz
fucom
sbb
and
addb
icebp
mov
adc
or
sub
sbbb
leave
xchg
daa
mov
mov
inc
fisttpll
inc
adc
xchg
cli
dec
pop
aad
inc
and
xor
fisubl
jmp
pop
cmp
cmc
sbb
stc
ffreep
iret
das
xlat
mov
push
dec
imulb
cmpb
shrb
ret
inc
jbe
roll
jmp
mov
loop
push
cs
sbbb
int3
je
mov
mov
cmpb
dec
jns
ret
lret
pop
mov
subb
das
addr16
mov
push
stc
jecxz
or
hlt
add
cmp
and
int3
fwait
popf
and
testl
out
andb
sub
je
movsl
and
out
pop
cli
mov
jo
arpl
sbb
mov
out
cmp
jecxz
inc
or
addb
jns
rorb
out
mov
sub
scas
fisubrl
xor
mov
xchg
jno
mov
movsl
and
mov
mov
icebp
push
mov
loope
imul
jbe
mov
adc
jno
xor
nop
push
in
scas
adc
gs
xchg
adcb
sbb
add
test
shll
loop
cmp
mov
mov
sub
sahf
xor
mov
dec
popf
orb
das
int
iret
sub
enter
mov
into
mov
mov
repz
dec
xchg
push
and
clc
in
pop
xorb
mov
add
in
js
pop
cld
ja
mov
ljmp
mov
jb
adc
cmp
fdivr
lahf
aad
rclb
mov
cmp
les
adc
push
cmp
test
inc
es
dec
scas
or
cmp
aas
dec
xchg
mov
scas
add
pop
fdiv
cmc
mov
cmpb
hlt
dec
jge
mull
jbe
pop
mov
ss
out
push
lahf
sbbb
lods
jle
je
sbbb
dec
xchg
lret
add
sete
cmp
test
or
adc
add
insl
xor
mov
test
aam
shl
stos
or
out
push
mov
inc
imul
fs
orb
fptan
pop
inc
jns
test
out
loop
adcb
xor
inc
jl
or
cmp
adc
out
lret
stc
jno
push
cwtl
arpl
xchg
test
ror
rolb
out
add
hlt
push
dec
mov
push
cs
cmc
or
and
aam
fs
pop
bound
or
cld
pop
xchg
imul
or
cld
sbb
shlb
int3
cmp
or
inc
lea
daa
push
lret
add
jg
push
mov
xchg
adc
dec
xchg
cmp
sub
in
inc
frstor
inc
call
push
pop
mov
push
orb
das
outsl
mov
add
xor
ja
sbbb
pop
cli
lock
jmp
xchg
mov
repnz
inc
iret
lret
mov
out
and
mov
add
imul
xchg
clc
icebp
shrb
cmp
cli
xchg
pusha
or
rorl
in
insl
dec
mov
test
and
shrl
addb
dec
ss
xlat
push
in
pushf
cmp
mov
pop
xor
and
orl
movsl
iret
mov
and
into
push
daa
jns
sti
xor
dec
shr
lret
lea
movsl
cli
aad
dec
mov
mov
adcb
std
dec
adc
iret
mov
sbbb
scas
jo
xchg
andb
lahf
mov
daa
popf
mov
cmp
ret
stc
mov
arpl
dec
leave
lahf
push
loopne
rcr
imul
add
or
aaa
sub
subb
cmpsl
orb
sub
loop
or
filds
sbb
cs
or
add
pop
iret
jg
fnstenv
nop
push
test
fmull
imul
add
push
pop
push
scas
ror
jg
cmp
data16
cmpsl
nop
mov
mov
jp
xorb
push
or
mov
sbbb
repnz
ret
xor
xchg
and
add
mov
mov
outsl
sub
mov
roll
ret
add
lret
mov
inc
rcl
inc
lds
into
mov
inc
out
mov
inc
dec
xor
in
sub
ret
lcall
or
mov
or
adc
dec
jl
jecxz
sbb
loopne
jmp
xchg
out
pop
cmp
lock
adc
cmpsb
mov
stc
mov
push
orb
mov
sbb
shlb
pop
mov
lods
orb
stos
push
and
xorb
xor
add
dec
and
adc
push
dec
inc
add
jae
mov
cmp
aas
test
dec
mov
sbb
sarb
aaa
mov
sub
cs
fwait
inc
mov
outsb
fstl
and
jne
arpl
push
mov
in
pop
xor
pop
dec
testb
cmp
add
loope
dec
testb
mov
sub
testl
jmp
jle
jns
out
inc
sbb
xor
add
cld
ror
or
xchg
test
adc
ss
data16
sti
pop
in
pop
fs
and
adc
in
out
mov
add
ljmp
fimuls
and
adc
ss
les
aaa
mov
repnz
lret
shl
and
andb
mov
shlb
push
fimull
sbb
dec
sbb
pop
adcb
adc
aad
dec
xor
or
bound
lcall
push
sti
mov
orl
imul
sub
sbb
andb
cld
fwait
sbbl
lea
xchg
push
fistl
dec
lods
or
mov
aaa
orb
xchg
call
fsubl
xchg
into
cmp
inc
xor
roll
cli
movsb
sbbb
repnz
pop
out
popa
fists
cmpb
or
pop
lods
fildll
add
add
adc
pop
mov
mov
adc
xlat
pop
adc
mov
mov
and
mov
in
scas
loopne
push
scas
gs
loopne
xchg
adc
xchg
and
jb
jne
push
subb
dec
add
mov
out
and
ficomps
xchg
push
movsl
push
test
lret
add
xor
les
orb
mov
push
and
pop
mov
jp
jmp
mov
lahf
adc
xlat
mov
int
push
in
xchg
jne
mov
mov
push
sub
les
fwait
xorb
cmp
xorb
pop
mov
mov
je
mov
xor
sti
pop
pop
or
mov
sbb
jae
dec
das
divl
icebp
sarb
inc
rep
int3
mov
test
lds
cmpb
xchg
pop
add
ficomps
je
adc
in
adc
rclb
rcr
loope
cmp
xor
push
push
out
and
xchg
and
shlb
inc
sub
gs
aaa
out
sahf
int3
flds
push
imul
arpl
cmc
movsb
dec
xchg
incb
enter
call
push
sub
lods
and
pop
mov
mov
inc
dec
out
lods
push
xchg
adcb
mov
movsb
pop
add
push
subb
fnstsw
je
xor
scas
or
inc
and
cwtl
clc
sarl
xor
negb
pop
push
add
out
mov
cmpsb
cld
push
or
and
orb
addb
ja
mov
xchg
aaa
fisubrs
dec
add
iret
out
pop
push
mov
xchg
outsl
push
div
lret
popf
and
adc
mov
or
fiadds
push
add
out
cmp
pop
clc
sahf
pop
fists
shrl
out
rep
lcall
mov
cmpsl
or
sbb
push
insb
add
mov
jecxz
jno
mov
and
leave
adc
xchg
add
xchg
out
mov
mov
dec
push
and
push
push
pop
cli
mov
mov
inc
sbbb
xchg
loope
jb,pt
xlat
fisubl
imul
sti
sub
mov
lds
adc
rcrl
push
repz
dec
xchg
es
cmove
xchg
cmpsl
jnp
rcrb
insb
lds
push
dec
mov
lret
sub
add
es
push
sub
mov
and
testb
das
int
inc
jle
and
arpl
shr
push
nop
dec
add
popa
clc
dec
and
imul
shrl
mov
insl
fdivrl
mov
sbbb
leave
push
scas
cmpsl
xchg
out
push
pop
sub
add
repnz
cmp
inc
mov
fsubp
add
shll
mov
fldenv
or
test
loope
loop
mov
fwait
popa
in
mov
sub
mov
sbb
or
mov
lock
fwait
dec
popf
mov
pop
iret
xchg
sub
orb
shll
sub
stos
je
hlt
ret
cmp
movsb
leave
subb
mov
loope
push
xacquire
shlb
mov
dec
lcall
outsl
popf
cmp
in
jns
xchg
outsb
cmp
lahf
mov
popf
mov
fcompl
movl
cmpsl
out
es
cmp
push
in
pusha
or
or
xchg
pop
mov
jg
loopne
ret
dec
in
scas
sub
negb
cwtl
jp
adcb
movsl
add
leave
pop
adc
jns
fnstsw
hlt
xchg
or
scas
mov
fmull
jno
xor
nop
and
adc
das
scas
cmpsl
test
clc
pop
sbb
cmp
sub
mov
scas
cmp
or
cmpsl
xchg
arpl
add
mov
scas
inc
cltd
xorb
mov
enter
add
add
push
inc
lock
dec
push
mov
jne
xchg
loop
subb
sbb
jae
or
jmp
xchg
mov
les
xchg
inc
xchg
das
lock
aam
sbbb
mov
dec
andb
mov
sbbb
test
int3
cmp
sbbb
cmp
cwtl
and
cmp
sub
cmp
insl
adc
rcll
push
das
ret
jb
fsub
xor
xadd
adc
mov
dec
jp
andb
adc
test
inc
bound
out
pop
cmp
into
loope
or
lds
popf
insb
jae
adc
out
or
in
outsl
sub
push
mov
cli
mov
sbb
adc
leave
mov
stc
into
inc
test
sbb
xor
add
xorl
mov
and
idivb
aad
ds
adc
pslld
mov
dec
xchg
subb
clc
dec
push
es
adcb
sub
arpl
push
test
movl
add
sbbl
repnz
jnp
push
movaps
adcb
push
mov
mov
sbbl
sti
adc
fisttpl
sub
cmpb
mov
cmp
sbb
ficoms
adcb
into
xor
cmpb
ljmp
subl
call
addr16
mov
jmp
lods
pop
sub
jbe
jae
pop
mov
ret
or
ret
shl
cli
jo
xor
mov
testb
mov
inc
jne
jp
xor
cmpsb
or
adc
mov
iret
in
push
cwtl
xor
popa
add
fwait
cmp
mov
mov
pop
shrb
jecxz
fucomp
lock
sbb
lahf
inc
int
adcb
xchg
mov
aam
xorb
int
add
das
sub
fsubrs
push
add
cmpsb
hlt
test
aad
das
inc
imul
pop
test
xchg
jle
xor
push
decl
shl
add
cli
mov
roll
xor
add
popa
inc
cmpb
sbb
rclb
rorb
popa
arpl
xchg
pop
cmp
add
lcall
lock
xchg
and
sbb
cwtl
subb
jecxz
jp
testb
dec
enter
roll
or
pop
test
loope
jl
mov
cld
adc
or
mov
pusha
aad
cli
out
in
and
adc
cmp
and
jns
lds
push
orb
addl
mov
lret
push
jae
les
popf
cmc
shlb
loop
roll
movsb
mov
mov
ljmp
push
hlt
adc
mov
push
jo
push
in
adcb
mov
push
wrmsr
dec
and
pop
adc
cmp
sub
jbe
sti
aam
fstpt
lretw
cmp
scas
icebp
outsb
faddl
and
pop
mov
pop
andb
jmp
pop
adcl
insb
lcall
in
int
jb
insl
dec
aas
push
mov
scas
pushf
and
adc
out
in
mov
pop
inc
scas
pop
clc
cli
push
jmp
or
ds
mov
push
lds
pusha
clc
mov
adc
push
jnp
ljmp
adc
ss
nop
and
adc
das
scas
cmpsl
clc
iret
lret
call
jnp
mov
dec
xchg
sub
stos
sbb
and
add
test
shr
rcrl
add
mov
mov
cmp
jae
jg
andb
pop
xchg
adc
sub
xchg
fsubs
repz
xchg
push
cltd
scas
int
xorb
dec
aam
jnp
xchg
push
ficompl
js
out
lods
insb
xor
scas
pop
adc
std
pop
xchg
repnz
sub
cmpb
fldenv
and
or
ja
sbb
leave
sbb
cmpsl
or
pop
insb
add
das
pop
fcoms
inc
icebp
cmpsl
lods
test
or
inc
les
adc
jno
lret
dec
mov
or
mov
mov
data16
fcmovnbe
addr16
mov
mov
add
ret
sahf
rorl
fsubs
fadd
xchg
aam
xorb
add
adc
xlat
mov
sar
clc
inc
dec
adcb
push
fwait
adc
xchg
in
jnp
inc
mov
les
xor
xorb
adc
daa
dec
mov
cmc
scas
les
sub
xor
aad
or
xchg
test
mov
xor
dec
sub
in
push
sbb
incb
arpl
pop
cmp
or
ds
xor
icebp
mov
add
jno
mov
mov
cmp
lods
cmp
add
xchg
pop
jg
jb,pt
xchg
enter
or
push
cmp
xchg
pushf
out
rclb
inc
data16
push
xorb
fcmovbe
jge
adc
rorl
cli
jg
loop
insb
pop
xor
or
inc
arpl
xchg
mov
aas
pop
arpl
lock
push
faddl
imul
in
and
sub
lock
adc
mov
mov
sbb
mov
push
lahf
cld
inc
cmpb
call
dec
add
sub
mov
push
push
stos
xor
jb
ret
sbb
inc
adc
xchg
add
fdivp
lret
jno
add
adc
mov
out
int3
es
outsb
mov
sub
lods
fiadds
jns
pop
push
out
sbbb
fwait
mov
cld
in
les
subb
dec
jg
push
orb
push
xlat
mov
pop
pushf
jne
subb
rcrl
mov
insb
jb
or
fs
push
cld
adc
or
add
data16
jns
js
mov
mov
mov
xorb
or
test
and
xchg
addr16
sarb
xchg
dec
sbb
sub
sub
leave
add
and
shlb
shl
lds
add
setge
mov
or
adc
mov
inc
and
stos
xchg
mov
xor
xor
cmp
or
repnz
jbe
xorb
jp
ljmp
add
shl
jmp
mov
out
dec
xor
fstps
orb
inc
enter
or
orb
shll
sti
fidivl
jecxz
lock
pop
shrb
push
mov
fidivs
ror
fstp
stc
bnd
addb
repnz
out
xlat
subb
adc
fwait
mov
xor
adc
mov
out
adcb
lcall
jecxz
cmc
jo
stc
mov
xor
int3
scas
mov
movsl
mov
mov
ret
jl
or
mov
xorb
dec
icebp
mov
mov
mov
push
loopne
cwtl
xor
pop
and
repnz
and
clc
out
fdivrl
sbb
xor
stos
xchg
push
and
int
mov
sbb
ljmp
into
xor
push
sub
scas
imul
imul
lahf
dec
sbb
cmp
outsb
pop
subb
std
cmpsb
push
lret
push
jecxz
into
mov
test
jmp
scas
jne
xorb
mov
mov
lahf
orb
insl
cld
mov
cmp
je
add
cmpb
ret
pop
inc
addb
push
cs
fstpt
gs
call
leave
xchg
sbb
addb
andb
cmp
sub
adc
js
aaa
pop
xchg
cmp
repnz
scas
fists
loopne
call
adc
in
sbb
and
les
shrb
orb
pop
cmp
xlat
out
mov
into
orb
mov
or
fcoms
inc
jl
orb
test
cld
and
rolb
adc
dec
xchg
mov
dec
stos
or
test
pop
cmpsb
or
pop
popf
jmp
insl
add
fwait
dec
out
mov
adc
shl
add
cmpsl
xchg
add
pop
jecxz
sub
xorl
jp
cmc
xchg
orps
cmp
sti
pop
movsl
mov
aam
rcrl
cmpsb
dec
cli
daa
pop
inc
jae
rorl
add
movsl
out
push
or
xor
push
jmp
into
pushf
lret
imul
imul
orb
cmpsl
repz
imul
mov
ja
dec
jnp
movsl
mov
push
add
insb
fnsave
sti
push
cmpb
repnz
pop
sbb
adc
incb
in
cli
and
push
ljmp
add
fwait
sbb
hlt
sub
ret
inc
lock
fdivp
mov
into
gs
xchg
js
fs
retw
lds
add
imul
xor
imul
cmp
push
mov
xchg
repnz
outsl
adc
push
daa
dec
xchg
jnp
movsl
pop
repz
pop
cmp
mov
in
out
test
xor
mov
lds
shlb
xorb
imull
push
stc
sbb
dec
mov
jle
mov
xchg
xchg
mov
cmp
adc
loopne
sbb
xor
or
inc
rcll
andb
cwtl
mov
unpcklps
std
jbe
insb
adc
test
jns
mov
cmpsb
sbb
fists
xchg
adc
in
add
loop
pop
sar
cmp
push
xchg
test
xor
mov
rolb
in
repnz
sbb
cmp
dec
fucom
xchg
andl
xchg
repnz
je
inc
xchg
xor
sbb
and
inc
dec
xor
leave
add
inc
mov
adcb
mov
lahf
addb
lds
xor
sbbb
jae
andb
in
and
sub
xchg
push
test
pop
lods
shl
fcmovnb
xlat
imulb
adc
sti
shr
test
outsl
mov
sbbb
mov
cmp
and
sbb
pop
call
inc
add
dec
mov
xchg
mov
xchg
subb
addr16
cmpb
shlb
mov
pop
mov
or
popa
dec
add
mov
lock
mov
dec
fsubl
push
pop
pop
and
mov
cltd
cmpsl
movsl
int3
pusha
out
xchg
mov
pop
push
lahf
mov
jp
scas
jbe
lar
jmp
jno
je
xor
hlt
lods
fidivl
lea
je
or
adc
sbb
xlat
mov
subb
push
mov
and
popf
cmp
jmp
leave
xor
lret
cwtl
iret
sbbb
xchg
aam
sub
stc
add
enter
orb
cmpsb
ret
jmp
minps
jno
lret
enter
orb
shr
ficoml
loope
mov
scas
das
sbb
mov
push
cmpsb
mov
rcrb
xlat
xor
push
jecxz
fstps
addb
iret
addb
push
fdivr
ja
sbb
add
dec
xchg
sti
testb
stos
jne
sti
in
andb
out
xchg
int
add
sub
push
or
sbbb
movl
insb
xor
test
push
push
stos
mov
in
or
xor
into
movsl
es
dec
scas
sub
sbb
dec
and
ds
lock
mov
stc
loopne
cld
adc
mov
shrl
add
mov
pop
repz
dec
in
jb
call
add
scas
pop
mov
fmull
sbb
loop
repnz
cmp
add
sub
push
movsl
mov
loopne
movsb
addb
and
sbb
and
es
xchg
mov
jmp
xor
and
mov
andb
xchg
loope
mov
jo
scas
gs
imul
outsl
jmp
orb
inc
or
nop
jno
cmp
js
push
sbb
neg
scas
mov
push
push
mov
in
shlb
pop
jbe
icebp
outsb
xchg
lods
push
subb
pop
insb
pcmpeqw
cs
clc
mov
testb
pop
add
inc
subb
mov
push
dec
inc
std
add
fiadds
cld
xor
call
icebp
sbbb
xor
insb
inc
jne
adc
adc
dec
paddusb
sbb
jbe
xchg
sbbb
cmp
mov
xor
pop
je
inc
xchg
jno
addr16
repnz
xor
xchg
or
inc
loope
mov
lock
and
and
mov
and
sub
adc
ret
and
cmp
addb
adc
ret
mov
push
loopne
sbb
rcr
cwtl
ljmp
xor
test
enter
imul
sbb
lea
rolb
mov
lock
dec
test
sub
stos
popf
outsb
xlat
pop
sbb
sbb
dec
xchg
jnp
ror
mov
mov
fistpll
push
mov
inc
sub
add
enter
lcall
inc
push
cvttps2pi
and
inc
stos
inc
jmp
xor
xchg
daa
call
cmp
cmp
gs
inc
push
xlat
mov
inc
pusha
mov
imul
push
push
movsb
mov
in
enter
lds
gs
push
mov
or
or
aad
xor
dec
gs
scas
mov
mov
pop
or
ficoms
push
sub
aam
lret
repnz
sahf
mov
cmp
xorb
xchg
dec
xor
xor
push
int
xchg
dec
push
lret
imul
or
dec
sub
sahf
fistl
test
mov
dec
xor
sbb
xor
stc
nopl
addb
imul
daa
xchg
scas
xor
adcb
xor
jnp
mov
inc
sub
negb
lock
push
dec
mov
into
cld
sti
loopne
subb
sti
out
sbb
ds
add
popf
mov
mov
arpl
lahf
into
pop
cmp
out
and
mov
dec
ss
orb
mov
addb
sbb
adc
cmp
addr16
sbb
scas
loopne
cli
inc
ljmp
sahf
add
arpl
fcoml
inc
rorb
iret
jnp
stc
push
sub
sbb
jnp
repz
inc
aad
mov
sahf
pop
sbbb
xchg
lret
add
mov
inc
pop
adc
in
push
mov
iret
movsl
push
jp
adc
fisubrs
test
repnz
iret
cmp
test
stos
aam
loopne
movsb
dec
xchg
test
imul
sbb
mov
adcb
jbe
pop
scas
pop
or
loope
xor
movsl
lahf
push
std
rclb
ljmp
cmp
sub
fidivs
in
pop
mov
push
mov
outsb
jmp
xor
movsl
or
inc
sub
inc
stos
ficompl
dec
cmpsl
int
cmp
lret
pop
fildl
dec
jecxz
mov
xlat
shlb
mov
bound
lahf
push
push
cmpb
aaa
add
mov
add
movq
bound
mov
push
push
ds
pop
fucomip
push
add
pop
fs
xlat
lds
add
mov
mov
pop
pushf
push
sub
mov
cmc
push
pop
inc
adc
jl
lea
mov
ret
repnz
int
clc
xor
popl
jecxz
jo
sub
roll
cld
pop
dec
cmpsl
or
and
adc
test
in
cli
xor
push
xchg
dec
lods
or
aad
add
mov
mov
shrl
cmp
shrd
loopne
pop
aad
andnps
rcrb
mov
sbb
adc
lock
sbb
roll
clc
out
cmp
repnz
hlt
mov
and
daa
stos
negb
stos
pop
push
sti
add
xchg
in
fwait
mov
xor
iret
das
pop
pushf
cmp
xor
lea
xor
inc
pop
lahf
mov
sti
add
repnz
dec
rorb
lock
stos
push
adc
out
stc
cmp
inc
jbe
idivl
cld
jl
iret
mov
sub
in
dec
insb
push
icebp
test
adcb
popl
push
imul
and
mov
les
xchg
sbb
pushf
mov
jmp
rcr
les
in
xor
and
cmpb
add
stos
andb
bound
imul
dec
lods
ds
stos
fildl
pusha
test
ss
push
jo
push
mov
push
add
out
nop
or
subl
outsb
cmp
int
xor
mov
fcmovne
mov
imul
mov
sub
sbb
iret
sub
ljmp
sti
icebp
or
ss
jg
cmp
adc
outsl
mov
push
dec
push
cmp
fiadds
sub
inc
stc
jbe
mov
div
push
std
cmpb
inc
jge
test
add
xchg
mov
inc
aam
cmp
clc
bound
stos
shll
ss
in
call
rcll
jp
test
cmp
xchg
xchg
stc
add
shlb
dec
mov
xchg
xlat
xchg
andb
mov
sbb
pop
mov
mov
inc
mov
mov
lods
pop
sub
push
or
in
sbb
hlt
lret
das
aad
clc
add
bound
insb
aam
add
ja
arpl
ljmp
xor
push
adc
lea
dec
movl
hlt
push
xor
daa
into
sbb
outsb
mov
push
mov
sahf
sarb
jae
dec
andb
ljmp
xchg
xlat
orb
jns
jae
xor
or
adc
mov
movb
push
xchg
jno
movsl
incb
int3
mov
test
inc
push
sub
add
ds
mul
ss
insb
cmpsl
pop
adc
shl
xchg
or
sbb
sbb
enter
stos
test
dec
movsl
mov
inc
pop
or
psubusb
je
add
test
in
stos
xlat
mov
push
cmp
jb
mov
mov
ljmp
push
pushf
dec
dec
fcomps
mov
pop
push
outsb
mov
cwtl
sub
ffreep
fdivl
push
xor
stc
adc
mov
roll
daa
dec
sbb
xorb
sub
and
pop
cmpb
js
mov
cld
ljmp
rorl
add
push
add
ljmp
mov
mov
xchg
sub
mov
adc
js
pop
add
cmc
in
leave
roll
jle
fwait
jb
das
loop
scas
cmpsb
xchg
leave
xchg
sub
test
mov
lods
pop
aad
push
sub
mov
insb
popf
push
sbb
sti
repnz
loopne
lods
aam
xor
mov
sahf
sub
bound
mov
fistl
int3
fdivs
inc
pop
lea
pusha
enter
sbbb
mov
movhps
jo
inc
adc
sti
xorb
or
out
fstpl
jo
dec
pop
adcb
into
insl
push
je
pop
sbbb
stos
mov
cli
pop
mov
dec
and
fdivrl
icebp
in
push
bswap
mov
push
in
imul
xlat
das
cmp
sbb
outsl
mov
mov
mov
fs
cmp
push
hlt
adc
nop
add
mov
inc
add
jle
xor
cmp
movsl
and
jns
aam
sti
ficoml
out
popa
sub
jmp
mov
mov
les
aad
das
xlat
sbb
nop
lods
adc
mov
pop
sti
addb
stos
add
or
mov
andb
inc
popa
enter
and
in
test
andb
sub
push
orl
imul
pop
mov
cs
dec
xlat
movd
xor
pop
std
insb
mov
cmpb
pop
incl
cmpsb
lret
pop
xor
add
xchg
stos
inc
xor
mov
call
add
pop
or
sahf
push
sub
stc
fldl
inc
int
popf
stc
sti
xorb
xor
push
jle
lcall
jo
pop
dec
jp
andb
divb
inc
sbb
aas
lock
cmp
orb
jle
in
scas
pop
subb
imul
add
push
add
imul
ss
lods
xlat
xchg
mov
or
cmpsl
pop
adc
fcompl
lds
cmp
insl
xlat
insl
add
mov
iret
cmpsl
or
push
add
addb
push
add
or
push
mov
aad
xor
dec
sahf
or
fmuls
movsl
jnp
test
ja
cmpb
mov
add
stos
lock
push
mov
cmp
cmpsl
xlat
mov
mov
orb
aaa
imul
rcll
mov
cmpsl
lods
rolb
out
das
lock
out
cmp
or
fisttps
addb
iret
mov
xor
std
lret
je
sarb
inc
sbb
lcall
lahf
setge
push
data16
cs
dec
andb
pop
aas
addb
daa
mov
cmp
fstpl
orb
xchg
fdivl
push
inc
outsl
jnp
in
sub
div
hlt
mov
sbb
xchg
scas
cld
aas
mov
stos
movsl
scas
push
aas
mov
push
xchg
in
icebp
and
fcoms
pop
mov
cmpsl
js
les
push
add
add
lret
xchg
sub
stos
or
pop
es
mov
push
in
aam
cmp
lods
sbbb
in
push
or
add
daa
cmp
jnp
cli
pop
xor
mov
les
lea
icebp
pusha
inc
inc
sti
sahf
add
sub
jo
stos
adcb
push
outsb
orb
cli
repz
int3
add
aaa
lods
call
adc
insl
lcall
mov
mov
roll
ficomps
push
sub
sub
addr16
or
mov
sahf
xorb
js
xsaves
jl
jae
pop
mov
jge,pt
stc
mov
cld
xchg
cmp
popa
andb
adc
jg
sti
ret
test
arpl
jb
addb
xchg
mov
stos
or
vprotb
mov
inc
sbb
stc
dec
mov
xor
jbe
mov
inc
mov
mov
dec
addb
cld
cmp
add
aam
sbb
add
lods
nop
or
xchg
das
add
push
sbb
add
mov
roll
out
test
rcl
xorb
add
test
orb
dec
push
addb
lds
mov
mov
jb
loopne
mov
insb
adc
dec
fistpl
or
sub
mov
repnz
adc
xchg
dec
jae
xlat
add
inc
addb
daa
mov
jns
push
cmpsl
pop
cmp
add
dec
lahf
push
mov
pop
subb
int
aaa
jmp
add
fs
push
cmp
cmp
in
fiadds
sahf
jge
and
add
repnz
inc
scas
sub
xchg
mov
cmc
mov
mov
outsb
aam
push
add
inc
jg
std
push
das
repnz
pusha
adc
cmp
pusha
inc
test
test
mov
sbb
sbb
test
loop
sbb
mov
or
and
and
add
incb
or
sub
mov
push
push
add
push
mov
mov
jo
and
or
fstpl
adc
in
xchg
movsl
pop
cld
sahf
shlb
testb
pop
lds
jb
push
cmpsl
mov
orb
mov
adcb
cltd
iret
fidivrs
xlat
ja
ret
sbbb
std
fidivl
mov
pop
and
xchg
out
pop
push
je
into
jle
in
call
xchg
xor
jne
ljmp
aas
sarl
jmp
pop
sahf
mov
or
push
jle
jnp
insb
fsubr
inc
std
cld
std
push
sbb
push
cmpsb
icebp
mov
lcall
xchg
sbb
sbb
hlt
imulb
or
mov
lock
cmpsl
test
and
add
mov
mov
xchg
mov
data16
push
jmp
ja
cmp
scas
pop
fists
ret
add
xchg
cmp
outsl
pop
cmp
jae
push
sub
scas
pusha
mov
add
fdivs
inc
orb
stos
or
js
inc
push
push
adc
dec
pop
mov
inc
pop
cmp
fnstenv
inc
inc
cltd
andb
xlat
add
sbb
ds
out
daa
adcb
xchg
testl
push
or
addr16
jl
pop
push
orl
xchg
xlat
loopne
gs
ss
jp
imul
lahf
pop
jnp
movsl
inc
add
scas
sahf
push
js
loope
int
nop
cmpsl
mov
jge
mov
sarb
dec
imul
inc
adc
test
movl
xchg
icebp
add
cld
adc
shll
aas
jge
mov
mov
enter
ss
jle
mov
in
rolb
iret
mov
inc
lods
subb
fidivl
aam
inc
xchg
loopne
mov
mov
adc
fcmovbe
loope
test
ds
sub
vmread
daa
mov
xor
repz
mov
push
ds
std
cmpb
sub
sqrtps
outsb
sub
popf
push
xorb
and
push
cmovs
sub
inc
rorb
ss
mov
and
xor
sarb
jle
imull
pop
xor
pop
daa
into
lock
jmp
mov
popl
sahf
mov
dec
adc
outsl
ficompl
cmc
imul
add
je
std
cmp
sbb
sti
cmp
fadd
rorb
jg
push
pusha
mov
adc
enter
jbe
push
nop
xor
inc
jbe
dec
pop
sub
ljmp
out
jnp
xchg
adc
mov
push
mov
jno
mov
mov
cmp
pop
les
daa
pusha
jmp
rclb
pushf
push
test
push
cli
adc
andb
cmpsl
inc
movsl
ficoml
adcb
jg
mov
pop
pusha
cmpl
out
jbe
or
mov
andb
clc
xchg
push
mov
ss
faddl
in
mov
fdivs
cmp
dec
jns
loop
inc
push
and
xchg
jge
jae
loope
arpl
out
sbb
or
lcall
sti
out
pop
out
push
sub
push
fwait
pop
int
rep
pop
mov
push
mov
push
and
inc
cmp
pop
mov
jl
pushf
out
cmc
outsb
add
inc
sbb
pop
mov
mov
cmp
aam
rclb
add
mov
sub
popl
imul
xor
mov
test
jge
std
mov
sub
or
jns
rcrl
js
push
mov
sub
xor
jnp
add
aam
repnz
pop
das
pop
in
lock
push
andb
mov
mov
mov
pop
xor
mov
subb
pusha
inc
jb
or
les
or
mov
in
add
pop
gs
push
or
mov
dec
aad
bound
adcb
mov
int3
xchg
or
push
cmpb
andb
in
hlt
jae
push
add
jbe
push
cs
sarb
subb
enter
repnz
cmp
add
inc
xchg
adc
fcmovu
mov
cmp
lahf
jo
push
add
sti
jne
jecxz
dec
outsl
sahf
sahf
std
xor
aas
push
icebp
lock
mov
adc
cmp
ret
arpl
mov
les
dec
add
jge
nop
push
dec
lock
pushf
adc
xchg
jae
in
sahf
sti
hlt
cmc
dec
xor
dec
push
inc
xchg
icebp
ja
lahf
out
lret
imulb
out
mov
outsl
sub
and
fwait
imul
stos
scas
rolb
mov
cmc
push
or
fwait
test
aaa
mov
fiaddl
outsl
mov
sub
cmpsl
inc
jmp
rolb
pop
sub
mov
cmc
in
lock
jge
push
push
dec
test
add
jecxz
xchg
sbb
xor
push
decb
xorb
inc
leave
inc
pop
fldl
sub
pop
orb
jmp
sub
xorb
cmp
in
pop
xor
orb
aad
add
outsb
sbb
fsubrs
add
ja
fstpt
jmp
cmp
xchg
mov
jb
pop
out
cmpb
stos
inc
sbb
mov
mov
js
add
sbb
mov
sub
pusha
mov
pop
stos
cmp
pusha
jbe
call
loopne
imul
cli
xchg
les
lret
xchg
mov
stos
dec
sub
pushf
lods
fisttpl
jne
xchg
jno
imul
dec
test
test
xchg
and
nop
aad
inc
daa
push
or
fsubrp
cmp
mov
ss
fcomps
xor
pop
fsubr
mov
inc
push
addb
mov
jbe
adc
fsubr
xchg
imul
jb
fildll
inc
sbbb
jle
ljmp
adc
push
ret
push
dec
xlat
aas
xchg
fisttpl
gs
push
add
lock
repnz
push
jbe
add
dec
aas
andb
dec
sub
ds
mov
out
pop
xchg
or
xlat
shl
and
dec
xor
push
aas
pop
fiadds
pop
dec
add
nop
inc
fisubs
out
xchg
icebp
push
rol
and
lcall
jmp
aas
mov
ret
mov
sbb
sub
scas
mov
adc
add
in
sub
pop
or
cmc
out
test
loop,pn
mov
mov
pop
mov
and
xor
testl
add
scas
push
dec
xorb
pop
xchg
cmp
psubusb
je
into
loopne
test
jge
sbb
xchg
inc
mov
rcrl
fidivl
loopne
push
xlat
ret
add
pop
mov
jecxz
xorb
pop
mov
icebp
testb
in
aad
pop
stos
and
repz
and
xor
push
push
pop
sbbb
mov
in
data16
pop
inc
outsl
test
orb
jecxz
mov
dec
stc
repnz
mov
xchg
jp
push
push
adc
pop
push
mov
cmpsb
andb
je
adcb
aaa
mov
ret
loop
int
and
push
xlat
mov
add
mov
repnz
dec
push
sub
pop
lock
cmp
add
cmp
jle
int3
xorb
xor
sub
add
adc
push
sbb
loope
in
pusha
pusha
out
pop
shl
int3
mov
nop
cmp
mov
mov
out
dec
pop
mov
xchg
or
xchg
inc
loopne
addb
dec
push
fadd
or
enter
add
xor
and
lahf
jno
cld
push
adc
and
in
xchg
out
push
add
in
faddp
andb
cs
shr
sahf
iret
and
sbbb
lahf
adc
loopne
mov
add
mov
push
scas
nop
enter
or
cmp
push
and
mov
leave
outsb
dec
scas
pmaxub
sub
jnp
ljmp
lea
filds
int3
cmp
add
pop
or
out
scas
xor
or
jp
xchg
mov
pop
jne
stc
test
pop
xchg
sahf
lods
sbb
xor
pop
sbb
insl
filds
jl
outsl
pop
into
pusha
pop
mov
out
es
cltd
mov
rorl
ss
in
rcr
inc
or
dec
dec
lods
or
ret
mov
sub
ret
adcb
aad
insb
xlat
movl
mov
sub
add
push
inc
add
cld
cmp
push
into
push
stc
xor
int3
cltd
xor
or
add
mov
and
hlt
in
sbb
stos
lock
xchg
addr16
cmp
test
in
popl
stos
aam
push
or
insl
pop
mov
xor
ja
fstpt
jb
iret
pop
subb
arpl
dec
mov
scas
pop
and
jg
or
shll
loope
add
addr16
add
cmp
divl
add
loopne
or
mov
mov
jp
jp
repnz
pop
adc
das
int3
mov
add
inc
sub
pushl
loopne
fdivrl
xorl
das
out
pop
add
out
jle
lods
loop
iret
mov
cmp
pop
pop
popf
mov
cmpsl
out
out
mov
jbe
add
add
stos
std
mov
mov
mov
mov
mov
add
arpl
in
lock
jmp
sub
test
jb
add
push
mov
dec
fnstenv
out
sub
cmpb
fbld
add
jl
xor
call
lcall
xor
js
lods
out
add
fiadds
mov
ds
add
or
cmp
mov
mov
js
ret
mov
push
or
push
aaa
bound
xor
das
push
fsubrl
lcall
dec
push
movsl
stc
js
js
jbe
addb
ficoml
mov
or
sahf
int3
and
or
dec
in
sub
push
add
jg
lods
mov
movsb
adc
sub
sbbl
pop
cmc
shrb
cmp
leave
xchg
sbb
sub
setl
push
in
addl
lock
pop
andb
lahf
jae
jnp
loopne
xor
mov
mov
mov
andb
mov
inc
push
cmp
xor
cmp
insb
call
add
cs
or
addl
mov
repnz
fwait
imulb
cmp
addb
pop
lcall
iret
daa
push
pop
cmc
push
add
insb
out
aas
jge
push
cmpsl
cmp
xchg
or
data16
add
cmpsl
psrld
das
mov
and
xor
cld
aad
cwtl
movsb
scas
jmp
pushf
xchg
scas
sub
adc
push
insb
sub
cld
roll
mov
mov
ret
adcl
mov
add
repz
in
lret
orb
fwait
aas
movsl
jnp
subb
sbb
push
es
add
in
mov
repnz
aaa
add
movsb
arpl
out
sub
push
ds
sbb
int3
sarb
xchg
cmpb
jo
stmxcsr
pop
ret
jg
pop
push
and
sbb
adc
lret
faddl
cltd
out
adc
into
cmp
push
adc
scas
xchg
sbb
pusha
and
pop
js
out
shrb
jle
repnz
dec
add
cwtl
outsb
gs
mov
inc
xchg
mov
shl
or
mov
scas
mov
je
sbb
push
jle
mov
or
imul
pop
mov
jno
cld
mov
sbb
lock
cmp
mov
sbb
inc
testl
out
gs
push
pop
mov
in
movsb
dec
or
roll
es
movsl
dec
mov
aam
jb
fs
add
int
cmp
pop
out
dec
mov
stos
andb
je
mov
xchg
ja
mov
xchg
pop
ss
mov
popf
imul
push
les
add
scas
into
pushf
iret
dec
pop
in
push
adc
jmp
pop
sub
and
jp
shll
inc
pop
adcb
cmpb
jbe
rorb
inc
adcb
aad
xorb
cmp
jecxz
or
mov
lret
jns
scas
xchg
iret
rcrb
jae
lret
cmpb
or
pop
jo
mov
ror
clc
je
dec
sahf
sub
repnz
push
sbb
xor
imul
idiv
je
dec
push
stc
mov
rolb
adc
sti
arpl
jns
scas
ds
add
rolb
xchg
les
pop
lods
add
adc
in
push
les
adc
dec
hlt
test
xchg
fld
cmc
mov
icebp
sbb
push
ljmp
lahf
xlat
sbb
repnz
or
or
dec
test
adc
fwait
mov
dec
lods
popf
mov
inc
lret
scas
mov
iret
movsl
adcl
sub
or
hlt
imull
pop
hlt
insb
cmp
xor
cmp
xchg
xchg
addl
pop
cmp
push
nop
mov
adc
push
or
dec
adc
pop
subb
ljmp
lea
mov
ficoms
rolb
add
dec
lds
lea
subb
mov
sahf
faddl
dec
leave
dec
mov
sub
xorb
shrl
mov
out
xorb
pop
mov
cmpsb
add
cltd
xorb
jbe
cmpb
aam
gs
daa
sbb
jne
repnz
lahf
adcb
pop
mov
push
xor
mov
pop
sti
mov
mov
in
mov
xorb
mov
insl
sbb
dec
sbb
out
fidivrl
add
daa
pop
jp
repz
pop
jbe
fadds
das
out
fdivrl
and
sbb
js
pop
pusha
push
adc
fistpll
and
jg
nop
ja
or
sub
xor
nop
out
nop
sbb
out
pop
insb
gs
cltd
or
ret
dec
rorb
xchg
push
pop
movsl
add
shl
and
sahf
loop
mov
popl
imul
lahf
xchg
push
or
sbb
popa
insb
cmp
push
popf
mov
dec
popf
inc
jbe
inc
jle
and
leavew
loopne
push
or
mov
xchg
popa
lcall
fidivl
xchg
addr16
dec
xchg
adcb
xchg
mov
push
push
add
jg
cli
push
out
and
leave
subb
push
popf
xchg
adc
push
in
push
pushf
outsb
push
jl
hlt
out
pop
jmp
push
sbb
add
fistps
adc
js
es
mull
and
cmp
sbbb
mov
adcb
in
pop
cmc
clc
push
add
jg
loopne
imul
ja
pop
jno
pop
cli
inc
orb
sarb
int
test
es
pop
and
hlt
out
fldl
sub
cld
mov
andb
sti
xor
cmp
inc
mov
fistl
dec
nop
iret
pop
repz
dec
loopne
dec
pop
mov
ds
inc
push
out
popa
loopne
icebp
cld
xchg
cmpsl
or
xchg
push
inc
mov
push
push
add
movsb
or
adc
std
scas
mov
rorl
cwtl
movsl
mov
cld
add
in
aad
stc
or
cmp
adc
cmp
jo
pop
mov
and
add
inc
mov
fsubl
je
mov
repnz
adcb
test
scas
mov
push
sbb
jge
subb
jne
stc
into
adcb
aas
lea
add
stos
clc
fnstsw
push
jne
xchg
repnz
imulb
jl
aam
daa
mov
aaa
outsb
pop
or
out
and
adcb
popf
pop
cs
mull
mov
insb
sbbb
filds
jb
jbe
test
push
jno
orb
sbb
or
shlb
fsubrs
sub
stc
inc
sub
xchg
ja
pop
mov
pushaw
mov
rcr
test
add
scas
mov
or
cmc
mov
icebp
insb
sub
pusha
pop
cmp
adc
cmp
test
xchg
movsb
mov
hlt
loope
adc
subb
sub
cmp
test
adc
xchg
sub
inc
andb
dec
sbb
orb
xchg
xor
ljmp
icebp
shl
repnz
and
mov
mov
pop
xchg
stos
and
aas
ja
mov
arpl
sub
fistl
outsb
jnp
cmp
fldl
pop
divl
shll
fistpl
adc
fdivl
jno
orb
ror
or
or
inc
sarb
fstp
xor
scas
adc
adc
dec
insb
xlat
pop
adc
mov
in
pop
les
mov
sub
push
sbb
sbbb
or
push
cmp
inc
adc
mov
fdivrl
cmp
inc
sbb
out
mov
push
daa
into
sbb
stc
sarb
jne
out
dec
push
add
adc
jne
add
fmuls
push
int
adc
fsubrs
scas
pop
movzwl
insl
push
pop
mov
jbe
fidivl
loopne
add
imul
lahf
pop
cmp
leave
sbbb
js
fdivl
clts
cmpsb
fiadds
jmp
icebp
test
fwait
jae
repnz
adcb
push
bound
out
cmp
sbb
mov
movl
pop
loop
mov
mov
mov
leave
mov
mov
mov
aam
sbb
xor
test
sarl
sbb
scas
sub
add
imull
cmp
cmp
cltd
inc
or
dec
aad
push
cmpsb
add
xor
test
jmp
shrl
cli
push
dec
pop
mov
push
js
in
pop
cmp
dec
jg
scas
push
lahf
push
insb
out
fistpll
into
or
es
je
sbbb
sbb
mov
sarb
retw
or
pop
xor
cmc
aam
andb
push
sbb
pop
ljmp
test
out
addr16
inc
jle
fdivrl
xorb
repz
mov
mov
nop
push
inc
add
add
mov
push
and
push
ljmp
pop
push
sarb
mov
insl
jo
sbb
fstl
daa
enter
pop
inc
aad
add
nop
test
push
mov
scas
xchg
inc
outsl
dec
adc
and
adc
xor
mov
dec
push
mov
cmp
xchg
mov
outsl
add
aam
mov
and
mov
scas
fiadds
aaa
xchg
mov
test
loopne
pop
push
insb
push
sub
lods
add
aad
mov
and
mov
sbbb
cmpsl
daa
cs
mov
mov
push
or
inc
in
dec
cmc
inc
mov
xchg
dec
mov
enter
mov
dec
adc
ret
or
pop
je
inc
insl
mov
clc
hlt
out
and
xchg
gs
sub
scas
mov
rcrb
fs
rep
ret
in
out
cmpsb
orb
bound
add
fdivr
addb
cmp
push
sbb
mov
test
decb
daa
and
lds
pushf
ret
shr
nop
lock
mov
into
mov
loope
stos
inc
scas
pop
ds
jmp
imul
lcall
sub
push
sbb
mov
or
aam
mov
push
cmp
sub
inc
xchg
or
cmp
in
pop
shr
fstps
pusha
pop
dec
add
and
movsl
cmpb
jbe
cmp
scas
xor
test
repz
xchg
dec
fmuls
loopne
fcompl
hlt
repz
orb
cltd
repnz
pop
xorb
testb
sub
call
add
jns
push
or
pop
xchg
jp
insb
dec
cs
dec
adc
out
int3
adc
pop
pop
add
mov
jmp
adc
das
outsb
mov
sti
in
cwtl
arpl
out
cmp
pushf
add
or
lret
xchg
imul
das
movsb
ds
div
pop
aad
or
dec
mov
mov
pusha
mov
in
push
mov
cmc
push
adcb
xor
int3
sub
dec
popf
mov
out
jmp
lret
arpl
sbb
xor
and
mov
sbb
in
rcr
xrstor
sub
ret
pop
pop
add
mov
jle
out
sbbb
enter
mov
pop
dec
jg
mov
xchg
int
jb
push
ja
stc
dec
push
das
adc
xor
fwait
jle
lock
add
outsb
sti
pop
push
pop
add
xlat
in
dec
orb
xlat
scas
sbb
dec
add
cmp
push
call
sahf
test
loopne
cmpsl
addb
fnstsw
sub
xlat
enter
add
std
cmc
rcrb
inc
jge
testb
sub
rclb
sbb
or
inc
mov
inc
mov
int
loopne
movsl
cs
inc
lcall
sahf
inc
sub
mov
insb
ret
mov
stos
cmp
cli
std
lcall
cltd
aaa
int
xor
faddl
push
xchg
inc
imul
jns
ljmp
cs
pop
mov
cmp
jae
jns
xorb
dec
out
mov
into
andb
xchg
sub
jne
scas
iret
test
call
insl
mov
pop
pop
xchg
pop
xlat
dec
fsubrs
xchg
cmp
dec
push
pop
mov
outsl
jge
cmp
jecxz
dec
jbe
movsb
dec
addb
sub
xchg
mov
sbb
fstl
inc
in
dec
int
aam
gs
or
and
mov
repnz
jbe
les
mov
dec
mov
inc
fsubl
dec
dec
js
jge
mov
mov
jg
or
call
xchg
add
pop
cli
adc
push
and
xorl
mov
sub
pop
mov
sub
outsb
pop
pop
xor
pop
sarb
sbb
aam
add
jge
or
or
adc
cmp
mov
cmpsl
and
into
popf
sub
mov
and
xor
push
and
out
jge
cmp
lret
pop
scas
outsb
in
add
fstpl
push
fmuls
mov
js
out
pop
dec
sbb
decl
sahf
push
inc
adc
cs
add
outsb
test
cld
flds
iret
ficomps
andb
adc
and
push
dec
mov
xor
dec
sahf
xchg
sbb
ret
repnz
das
sub
stc
mov
outsl
gs
push
mov
push
sub
out
and
and
loop
jl
add
divb
and
pop
mov
or
sbb
or
sahf
daa
xchg
push
xchg
mov
fimuls
in
jge
stc
aam
shll
aad
push
jns
push
mov
fidivrs
dec
dec
xchg
push
mov
jbe
fcoms
fs
addr16
in
shrb
push
sub
sub
jl
hlt
outsl
orb
jo
mov
mov
les
icebp
lds
fcompl
jb
mov
or
iret
enterw
xor
dec
sbbb
stos
sub
fidivl
add
shll
cmp
das
outsw
sbbb
lret
shlb
mov
imul
cmpsl
cs
mov
pop
sbb
cld
cmp
jg
jbe
fmull
add
xchg
mov
or
fstp
out
inc
orl
int3
nop
dec
push
sub
sbb
cmp
ret
test
xchg
adc
ret
test
data16
pushf
xor
mov
leave
add
jecxz
cli
fcmovbe
andb
lret
popa
push
sahf
push
cltd
xor
add
xchg
daa
shrb
jp
mov
push
sub
fs
popf
adc
jle
scas
fiadds
sub
testl
sbb
pop
bnd
add
jbe
cmp
lock
in
pop
sahf
jle
rcrb
orb
je
psadbw
outsb
xchg
and
cmp
das
and
xchg
pop
ss
pop
fwait
and
fdivrl
dec
pop
mov
std
mov
iret
adc
or
pop
adc
scas
and
lret
ss
adc
fsubl
in
into
fnstsw
xor
leave
aas
scas
jle
fsts
inc
push
ja
cmpb
jns
mov
mov
icebp
sub
cli
andb
xor
imulb
rcrb
inc
mov
add
xor
ds
pop
add
stos
push
sbbb
adc
dec
mov
sbbb
repnz
outsb
fstpt
pop
mov
cmp
sub
pop
loopne
out
loop
add
xlat
dec
xchg
loopne
fs
setge
xchg
int3
pop
pop
in
sbb
popf
lcall
mov
inc
arpl
lock
adc
pop
insl
imul
data16
lcall
and
or
adc
fisubrs
das
mov
push
jp
inc
dec
and
mov
rcll
sarl
in
inc
xchg
pop
mov
lret
rclb
movsl
sub
cmp
mov
jmp
sub
sbb
cmpb
or
pop
int
test
xor
frstor
fsubr
loopne
aas
pop
or
rol
aad
mov
int3
adc
out
adc
ja
aaa
hlt
cli
rorl
shrb
in
mov
jmp
fwait
mov
out
and
mov
mov
xchg
testl
jge
sub
mov
dec
fwait
addb
rcrb
mov
add
faddp
sub
add
stos
mov
mov
insl
or
ret
in
lock
mul
fiaddl
xchg
out
sbb
jns
pop
sub
faddl
push
mov
push
or
jecxz
pop
and
aad
xor
and
mov
sub
ret
aad
pop
mov
push
add
jp
dec
push
nop
lcall
pop
mov
pop
fsubl
mov
ror
xor
lcall
cmp
cli
add
push
addb
mov
push
cmpsl
jb
unpcklps
xor
dec
icebp
in
outsl
in
sbb
aad
es
add
imul
ja
out
xor
pop
scas
pop
xor
or
inc
dec
imul
push
mov
cs
jno
add
sbb
sbb
fadd
jb
xchg
cli
test
andb
add
pop
fidivl
xchg
sbb
aad
fisttpl
mov
mov
daa
mov
outsb
movsb
mov
mov
les
cmp
dec
sbb
hlt
add
and
mov
dec
add
mov
adc
dec
xchg
lea
incb
and
bswap
mov
and
pop
or
mov
flds
shrl
inc
jb
dec
les
push
mov
fstpt
dec
rcrb
cmpb
addb
ret
out
jb
pop
popf
sahf
fs
icebp
sbb
repnz
sbb
imul
rclb
xor
mov
add
mov
into
or
in
loop
push
mov
mov
add
pop
sub
jnp
loop
mov
fsubp
test
std
pop
jge
movsl
inc
sbb
jb
sarl
out
out
xchg
sti
ret
bound
mov
test
sbb
js
cmp
mov
inc
push
sti
and
mov
jecxz
dec
or
aad
pop
test
ds
nop
movsb
stos
jp
popa
adcb
sti
mov
fwait
cmp
imul
lods
stos
cmc
and
sub
ret
aaa
lret
mov
and
cld
rorb
lret
mulb
loopne
sbb
scas
sbbb
jae
push
or
imul
cmp
js
clc
roll
add
loop
cli
iret
push
pop
mov
mov
fsubrl
dec
popf
xchg
out
jp
jns
push
fstpl
jbe
enter
xchg
jmp
adc
jmp
sarb
or
sarl
mov
xchg
scas
pusha
mov
and
adc
and
adc
das
scas
and
push
xchg
xchg
mov
jb
stos
add
enter
shr
ss
sbb
addr16
sbb
cld
pop
outsl
out
addb
test
les
lock
dec
lahf
xor
in
cmp
jge
jne
adcb
pop
in
adc
popa
jecxz
push
mov
mov
fnstenv
sbbb
pushf
mov
sbbb
xchg
sbb
sahf
arpl
rcl
fdivrl
data16
mov
mov
mov
jp
fnstsw
sti
fadds
sbb
cmpsb
insl
mov
add
fsubr
insb
aaa
pop
inc
insb
aaa
lock
icebp
lods
iretw
push
shrb
fs
addr16
leave
fmull
mov
out
add
repz
testb
cmpsl
or
inc
fmull
pop
adc
jo
or
lret
jae
cmp
add
jp
cmpsl
sarb
push
out
test
andb
push
xchg
cmpb
movsl
fcmovbe
push
scas
cmp
sbbb
mov
cmpsl
push
pop
pop
add
lods
fnstcw
xor
nop
push
lods
mov
or
jp
lcall
test
and
pop
repz
data16
pop
cmp
sub
inc
test
xchg
xlat
sub
ds
adc
push
aaa
push
xor
loopne
in
jecxz
cmp
dec
imull
add
outsl
xchg
xorb
or
ljmp
shll
iret
fdivrs
enter
pusha
ljmp
jge
fwait
mov
sub
lock
adc
lahf
fnstsw
jb
mov
mov
xchg
sub
fneni(8087
addb
loopne
dec
orb
dec
daa
into
add
ficoml
shlb
add
hlt
addr16
add
cmpsl
imul
lods
aas
mov
insl
push
push
and
imul
cmp
dec
into
das
pop
daa
jns
out
inc
pop
sbb
xor
push
or
bound
jbe
stc
mov
inc
or
idivb
jae
adc
cmp
incb
cmpsl
pop
inc
mov
fbstp
data16
dec
or
push
insl
fdivrl
iret
subb
inc
subl
pop
mov
sub
xchg
sahf
jp
dec
cltd
or
or
mov
repz
hlt
addl
dec
sbb
shlb
xlat
outsl
pusha
addb
fisttps
cmpsl
inc
add
imul
cltd
or
dec
mov
sbbb
xchg
out
add
jne
aam
cmp
ja
mov
andb
popf
mov
subb
push
fwait
mov
cmp
repnz
jecxz
popf
sub
sahf
nop
leave
push
sbb
imull
push
aas
ja
repz
pop
xchg
mov
and
roll
sahf
das
mov
js
jecxz
adc
scas
insl
hlt
xor
enter
sahf
or
into
jne
loopne
add
ja
cmp
loopne
cmpsl
pop
mov
rcrl
pop
fptan
xorb
or
push
hlt
mov
xchg
adc
jbe
fbld
mov
xlat
pop
adc
add
mov
fists
cmp
and
lahf
inc
mov
movsl
fiaddl
xchg
rcrb
dec
jmp
daa
aam
cltd
ja
outsl
nop
imul
mov
pop
xor
cmp
pop
addb
xlat
mov
and
int3
es
mov
mov
sarl
ds
xor
or
sti
push
or
mov
inc
adcb
lret
cmpsb
les
cmp
scas
fwait
or
and
xor
popf
aas
sbb
mov
in
jle
jmp
xor
push
subb
sbb
loop
loopne
stc
cmpsl
movsb
dec
jl
add
das
xchg
pop
icebp
movd
xchg
les
cmp
movhlps
jge
insb
sub
jmp
subl
cmp
xchg
mov
dec
movsl
pushf
fdivrl
orb
sbb
mov
mov
lahf
in
sbb
test
lods
fadds
push
lea
cmpsl
push
adc
mov
stc
and
xchg
filds
sbbb
icebp
adc
and
jge
orb
aas
jne
xchg
ret
cs
outsb
fstps
mov
in
push
push
mov
out
cmc
je
ficoml
mov
mov
in
push
js
cmp
decl
or
arpl
pop
add
out
pop
push
nop
cmp
scas
mov
xchg
sar
mov
gs
add
mov
es
and
scas
cmp
int
or
cmpsb
adc
push
fwait
cmp
aaa
dec
xchg
adc
push
mov
cmp
xor
push
and
jae
pop
nop
psrlw
shlb
mov
leave
xchg
inc
jle
subb
ss
push
pop
inc
sub
ds
jbe
data16
add
enter
andb
ds
adcb
dec
adc
adc
xchg
insl
dec
jno
and
leave
leave
xchg
rol
push
or
pop
les
cmp
test
data16
adc
sub
imul
nop
pop
mov
dec
idiv
add
push
push
cmpsl
push
movsb
negb
xor
jecxz
xor
push
sub
cmpb
jnp
sti
ss
movl
cmp
push
cmpsb
mov
arpl
dec
cmp
or
fisubs
push
xor
repnz
sahf
adc
in
mov
imul
popf
pop
jnp
call
rcrl
push
jbe
jge
stc
insb
adc
dec
mov
repnz
sbb
push
loopne
mov
mov
push
inc
loopne
xchg
xor
xchg
loope
mov
lcall
push
idivl
push
adc
jp
sbb
jo
mov
xorb
dec
cwtl
cmc
mov
int3
aaa
or
nop
push
loopne
ret
or
lea
dec
pushl
adcb
mov
cmp
pop
xorl
mov
mov
dec
shrb
jmp
das
fisubrs
data16
in
les
incl
push
lds
iret
mov
adc
repz
mov
and
orb
xchg
push
es
ror
fiaddl
ror
outsb
ffreep
mov
addr16
loopne
mov
pop
sbb
inc
pop
loopne
jle
jg
cmp
inc
cmp
in
stc
fiadds
pushf
cmp
pusha
mov
cmpsb
xchg
call
mov
push
subb
addb
movsl
mov
xor
jnp
sub
scas
fs
pop
orb
push
pushf
mov
data16
cwtl
cmp
dec
sub
inc
sarl
cli
subb
cmp
das
lods
xchg
frstor
cld
xlat
xor
aaa
or
push
int3
sbbb
outsb
out
sub
pop
adc
iret
cmp
mov
imul
mov
xor
pop
in
sbb
pop
cmp
adc
sbb
inc
pop
outsb
fstpt
jle
or
dec
jns
cmc
scas
out
mov
cmp
adc
cld
xorb
push
aaa
dec
mov
shrl
push
popf
add
int
push
movsl
nop
cltd
ja
jo
pop
xor
sbbb
sti
imulb
iret
ds
enter
jecxz
mov
xchg
sbb
mov
cmpsl
popa
add
jp
fadds
add
repnz
pop
xor
mov
into
adc
add
dec
fnstenv
push
sbbb
jns
pusha
movl
add
jg
cmp
shrl
ds
mov
or
add
test
or
push
incb
test
add
iret
xchg
mov
adc
push
mov
sahf
adcb
xchg
jmp
mov
lds
adc
shll
xchg
lock
shrb
popf
in
popl
inc
mov
and
xchg
pop
dec
cmp
cmc
push
aaa
mov
cwtl
incl
mov
bound
push
in
call
push
je
mov
jb
add
sub
bound
cmp
sbb
push
lea
xorb
lret
es
testb
dec
shr
jo
pop
add
loop
notb
stos
adc
push
subl
sbb
and
sahf
test
jge
cmp
pop
adc
sub
add
sub
dec
nop
sub
xorl
sub
add
ljmp
mov
adcb
movsl
jae
or
sub
loope
sub
push
or
mov
pop
mov
inc
push
test
push
cld
sub
js
pop
cmp
add
filds
push
int3
mov
and
or
scas
cld
pop
loopne
stos
or
stos
negb
rcll
mov
or
js
mov
out
stc
mov
xchg
sbb
adc
scas
shll
push
lcall
push
dec
dec
popa
fnstsw
sbb
daa
mov
stc
mov
and
out
add
gs
out
call
or
dec
inc
enter
mov
sub
pop
test
dec
stos
movsl
test
sahf
shlb
aad
sbbb
dec
das
push
fwait
subb
in
shll
data16
js
aas
push
cltd
inc
jo
addb
mov
or
fistpll
addb
mov
add
cs
out
sarl
inc
jmp
cmp
enter
mov
out
xchg
imul
popa
imul
jle
scas
sub
rcll
repz
in
lcall
and
push
es
aam
loopne
add
pop
push
mov
addb
mov
out
pusha
fwait
ret
inc
inc
or
cmc
or
shl
add
add
xchg
mov
mov
xchg
xorb
xor
pushf
cmp
cli
adc
daa
cli
add
inc
sub
add
and
pop
xchg
pop
push
clc
xor
ss
sub
jbe
rorb
sbb
dec
xchg
pop
fldl
data16
scas
sbb
out
pop
pop
dec
mov
jo
roll
xchg
mov
pusha
cwtl
add
scas
in
sbb
fimuls
leave
adc
nop
fnstenv
pop
xor
pop
sbb
add
mov
and
fwait
jp
loopne
repnz
andb
arpl
into
movsb
fiadds
aas
cmp
int
sub
dec
fwait
xlat
sbb
out
push
dec
sbb
stc
subb
cmp
cli
pop
xchg
movsl
add
cwtl
pop
subl
repz
pop
pop
inc
cmp
sub
sahf
cmpb
lcall
add
incl
dec
movsb
das
cmpsl
xchg
or
imul
inc
paddusb
xor
fnstenv
arpl
pop
sbbw
sbb
dec
sarb
fcoml
cmp
es
push
pushf
mov
fistpll
addb
mov
lock
sbb
movsl
pop
and
lock
adc
cmp
subb
pop
rcl
mov
dec
cmp
cmp
or
push
xchg
sarb
aad
mov
push
cmpsl
inc
mov
mov
lcall
scas
insl
pop
sbbl
lds
push
dec
divl
dec
jns
shrb
jl
adc
add
jno
inc
or
jp
and
cmpsb
sbb
adc
ret
ficomps
jbe
ficoml
push
cmc
test
sub
ss
push
xor
or
pop
ds
popf
ljmp
cmpb
push
jp
loopne
in
jbe
mov
cs
mov
pop
fnstsw
jmp
push
cmp
and
pop
repnz
adc
cmp
cmc
aam
pop
mov
pop
fdivr
fistps
adc
push
mov
or
cmp
xor
mov
mov
lcall
divb
idivl
push
lcall
inc
mov
int
mov
shrb
mov
movsl
pop
ss
ret
subb
and
lret
pop
daa
gs
arpl
sbbb
pusha
mov
and
je
loopne
or
add
out
out
mov
aaa
outsb
subb
jecxz
adc
imulb
out
add
push
cmp
push
add
xlat
mov
movsl
into
fcompl
ror
dec
xchg
sub
daa
push
or
jl
jo
xchg
dec
push
inc
lods
enter
adc
dec
cs
or
mov
loopne
cs
cmp
scas
dec
mov
mov
sub
dec
stc
xchg
orb
sti
imull
add
ret
dec
pop
imul
add
sub
leave
and
insb
aas
sar
lea
or
xorb
inc
data16
aas
jl
mov
iret
mov
sub
comiss
movsl
loopne
sub
lret
sbb
add
xchg
mov
mov
xchg
icebp
lcall
or
into
pop
xor
test
fs
les
lock
sub
clc
xchg
mov
jo
jle
push
inc
js
out
outsl
sbb
and
outsl
and
cmc
arpl
push
out
or
gs
cmc
cld
cmpsb
xorb
inc
xchg
movb
mov
int
je
shlb
mov
push
adcb
xchg
pop
adc
pop
cmc
ljmp
mov
ret
daa
data16
outsb
pop
add
mov
push
das
push
xor
imulb
sbb
mov
mov
jmp
push
jno
inc
add
movl
incw
cltd
sub
inc
filds
imul
sarb
shlb
out
xor
jp
in
iret
xor
xchg
aas
sub
add
out
pop
lcall
addb
push
pop
jp
or
mov
pop
pop
mov
cwtl
inc
rol
or
mov
les
inc
fs
scas
pop
icebp
pop
adc
mov
lret
or
inc
sbb
je
pop
loopne
mov
clc
cmpsl
mov
addb
loopne
sbb
jecxz
cmp
test
call
pop
xor
iret
xchg
cmp
ret
mov
mov
hlt
push
add
lds
mulb
cmc
out
es
mov
paddsw
hlt
imul
or
ficoml
insl
pop
mov
in
subb
dec
adc
aam
inc
lods
int
subb
rolb
add
lods
cwtl
sbb
push
scas
pop
sbb
bound
or
xchg
mov
rclb
jns
out
add
add
cmp
addr16
sbbb
adc
fldcw
inc
add
dec
and
aad
imul
fcmove
loop
jle
sbbb
sbb
mov
add
out
cmpsb
bound
mov
add
dec
aad
sarb
or
mov
dec
push
sub
stos
xlat
dec
mov
push
add
subl
cs
stos
in
xor
data16
mov
jns
jae
sbb
iret
xchg
add
sub
dec
popf
rclb
andb
sbb
xchg
or
sbb
movsb
add
mov
cli
cli
stos
push
andb
mov
fcoml
sub
das
push
divl
sahf
jecxz
iret
dec
xchg
mov
adc
fisttps
or
xchg
jno
les
subb
ret
add
js
jge
sub
lods
jp
pusha
dec
arpl
cmp
push
orb
fildll
adcb
or
pop
push
mov
mov
sub
add
clc
jb
dec
inc
inc
fs
cmp
subb
arpl
pop
push
add
jo
push
adc
ret
mov
pushf
mov
fdivrs
adcl
call
push
sbb
ja
test
gs
add
test
or
mov
mov
sub
jae
or
push
dec
mov
xor
ja
pop
mov
fisttps
push
fildl
insl
das
or
lret
sarb
mov
orb
in
adcb
or
and
dec
stc
mov
mov
xchg
jno
mov
jb
inc
xchg
xchg
mov
incl
filds
pop
cmc
push
add
fstpl
cld
fbstp
popf
jl
add
outsb
xchg
fdivrs
sbb
ja
orb
cmp
cmc
iret
xchg
std
addr16
bound
inc
fbld
subb
ljmp
push
data16
outsl
movsb
sub
lods
adc
rorl
xchg
mov
adc
idivl
pop
pop
mov
fs
pop
in
subl
mov
call
xchg
sbb
pop
jnp
stos
pmaddwd
ret
scas
adc
or
orl
push
lods
pop
inc
dec
popf
jnp
test
cmpb
cli
ja
ret
xor
and
fdivs
mov
cmpsl
cmpsb
nop
xor
fs
or
fnstenv
cmp
mov
dec
adc
cltd
icebp
jecxz
andb
shrl
sahf
shlb
mov
imul
sbb
pop
fdivs
adcb
adc
mov
ja
adcb
lcall
sub
xor
cwtl
mov
xor
or
xchg
das
dec
mov
arpl
ret
fisttps
es
mov
test
pop
call
dec
addb
sub
lcall
out
addb
std
stos
mov
icebp
mov
aad
rcrw
or
cmc
ljmp
lds
sub
nop
popa
xchg
fs
outsb
cmp
jecxz
addb
xlat
outsl
fnstsw
xchg
into
bound
gs
sahf
mov
inc
or
xchg
in
xor
add
sbb
stc
xor
in
clc
addr16
rorl
out
insb
pop
test
jmp
jns
lcall
movq
cmp
ljmp
push
push
aaa
dec
jns
mov
lock
je
icebp
mov
push
notl
jbe
sub
mov
insl
test
or
add
xchg
scas
mov
jmp
mov
sbb
jl
aam
es
ror
sahf
shrb
jb
dec
xchg
dec
adc
dec
add
cmp
push
popf
dec
adc
add
and
insl
test
icebp
dec
sub
dec
xorb
mov
ficomps
pop
mov
fnsave
cs
adcb
cmp
lcall
inc
cmpb
pop
aas
add
mov
loop
push
outsb
popf
add
data16
pop
es
out
sbb
mov
imul
popf
cmp
mov
sbbb
mov
rolb
push
lods
loop
cmpb
movsb
decb
jo
push
push
push
inc
in
cmp
xchg
fldl
mov
addb
add
mov
or
iret
xchg
ja
mov
or
or
pop
sub
pop
push
outsb
or
enter
add
sub
mov
test
pop
in
sbb
add
and
or
je
aad
pop
movsl
jnp
and
test
push
lret
push
outsb
fnstenv
inc
push
fcompl
dec
call
repnz
orb
add
mov
pusha
je
or
arpl
sbb
cmpb
push
addb
and
mov
push
pop
adc
add
in
cmp
and
or
jmp
rcll
sub
dec
xor
pop
or
sub
adc
rcll
jle
dec
stc
sahf
addb
repz
sbb
ja
jmp
push
or
xor
push
movsb
dec
enter
out
stc
add
div
pop
lcall
lahf
imul
nop
sub
sub
add
insb
hlt
mov
mov
cmp
jno
aas
add
mov
jp
ficoml
or
bound
push
add
push
pop
jns
loopne
jae
repnz
mov
inc
scas
rcll
aam
add
add
mov
daa
cmp
and
adc
fldl
push
insl
adc
mov
cli
call
sub
andb
shr
loope
sub
jnp
ficoml
xchg
sub
jp
adc
movsl
cmp
enter
cmc
mov
push
lods
inc
cmpsl
das
push
stos
push
aam
sub
push
pop
xlat
outsl
sbb
imul
cmp
fdivrl
xchg
aam
fstpt
push
mov
outsb
loopne
or
xor
mov
jb
inc
pop
add
push
push
or
rcr
addl
shrl
push
adcb
jl
or
mov
outsb
aam
dec
add
jp
imull
sub
pop
jnp
call
filds
sbb
rep
push
and
negl
sti
sub
jg
fldl
xor
mov
jnp
mov
fcoms
push
sub
jo
cmp
jns
xchg
sub
popf
sub
and
int
jbe
push
je
sahf
rcrb
movl
xchg
scas
gs
jae
mov
loopne
inc
jns
xchg
ljmp
mov
notb
rcrl
clc
enter
push
push
movsl
inc
int
out
cmp
addr16
pop
mov
fisubs
pop
cmpsl
arpl
in
push
sub
add
sub
stos
fnstenv
in
or
imul
xchg
mov
jmp
lds
cmp
jae
mov
sbb
sub
mov
xchg
sbb
mov
enter
mov
dec
xor
cmp
inc
into
fnstsw
mov
orb
mov
mov
ja
insl
lds
je
out
pop
jp
aad
xchg
lods
scas
imul
shlb
xchg
and
out
mov
mov
xchg
jecxz
js
repnz
pop
adc
or
xchg
adc
or
cmpsl
pushf
xor
lret
in
adc
gs
push
orb
icebp
ficoms
ljmp
daa
sub
aad
push
sbb
sbb
sub
stos
dec
add
fstpl
insb
xlat
movsb
adcb
cmp
fcompl
jb
dec
lea
scas
add
jns
push
push
cld
js
flds
cmpsb
lods
clc
daa
add
jns
push
cmpsl
enter
or
movsl
ret
nop
int3
pop
xor
orb
shrl
pop
clc
sub
lcall
jmp
popf
fidivl
bound
out
sub
cmp
push
icebp
adc
add
dec
push
dec
cltd
in
jno
push
xchg
cwtl
adc
dec
shrb
xchg
mov
pop
out
adc
or
adc
push
add
xor
add
add
pushf
pop
pop
mov
xchg
lcall
push
enter
mov
xlat
fcoml
fistpl
fsubs
lock
addl
jge
add
in
adc
add
pop
mov
out
outsb
pop
and
and
shlb
or
lock
add
xchg
push
mov
add
xchg
adc
add
adc
add
addl
add
add
pop
mov
sbbb
and
lock
sbb
addb
cmp
push
test
mov
test
mov
mov
mov
adc
adc
fwait
sbb
sbb
and
sub
lods
sub
xor
cmp
mov
ret
inc
les
leave
orb
lret
dec
int3
dec
int
rcll
push
rcll
adc
pop
ficompl
pop
faddl
loop
jecxz
and
in
push
imul
insb
in
insl
in
jno
jb
xorb
hlt
jne
jns
cmpb
sti
jl
jge
shr
shrl
orl
insb
int
dec
in
xchg
mov
mov
mov
and
add
lods
cmp
mov
mov
adc
imul
adc
outsb
in
or
arpl
mov
call
adc
xchg
or
lock
testl
sahf
push
push
adc
mov
icebp
inc
orb
push
jbe
fwait
sti
cmp
cmp
stc
movsl
adc
mov
jl
ss
xchg
filds
incb
clc
push
cmpsb
andb
je
addb
fistpll
inc
lock
mov
loopne
dec
push
sbbb
popf
test
cmp
out
stc
in
ds
dec
iret
cld
or
enter
lods
aaa
sbb
mov
mov
movsb
adc
pop
xorb
jno
in
in
mov
imul
cli
lahf
jne
add
lcall
andb
inc
test
es
enter
loop
rolb
mov
jno
sub
repnz
pop
sbb
adc
fistl
xorb
mov
sbbb
pop
lea
push
je
popa
jbe
flds
jle
add
test
or
mov
jnp
mov
pop
stc
nop
sbb
jg
lock
repnz
cmp
cmp
scas
incb
push
orl
hlt
addl
xorb
mov
inc
gs
jmp
sti
subb
mov
aam
std
movsl
mov
dec
enter
adc
mov
shr
cmpb
imul
sub
aas
dec
decl
add
and
andl
mov
rcpps
dec
imulb
jle
scas
rorb
add
ret
adc
add
iret
pop
rolb
in
jmp
cld
jb
add
or
popf
or
adc
cmpsb
cmp
add
jecxz
add
jp
adc
xchg
pmulhuw
cltd
mov
insb
in
pop
cmp
ret
fsubrs
les
pop
dec
icebp
sub
mov
scas
fisttpll
mov
cmp
dec
stos
dec
sti
inc
cmp
insb
add
xor
in
xor
insl
btr
add
xchg
rolb
movl
test
fcompl
imul
std
lcall
jns
dec
or
fs
lds
stos
or
cltd
jp
xchg
in
add
aas
mov
cld
shll
mov
pop
pop
movsb
xchg
fisubrs
jo
subb
cmp
gs
cld
pop
inc
rolb
dec
mov
outsl
movsl
in
jne
imul
pop
mov
test
jl
mov
pop
out
jmp
dec
pusha
dec
sub
sbb
orb
mov
add
push
cmp
pusha
cwtl
ficompl
insb
shll
jecxz
shrb
cmp
orb
je
lds
cmp
add
xor
xor
jb
icebp
pop
mulb
dec
pop
push
into
add
rolb
mov
pop
sbb
xor
andb
jle
xchg
dec
call
add
lock
dec
jns
out
mov
stc
cmp
or
pop
cmp
mov
fildl
jo
popl
xchg
xchg
bound
insl
popa
xchg
in
out
sub
jne
sbb
jp
dec
push
adc
push
in
and
test
xchg
int3
lret
subb
push
incl
or
jno
pop
movl
cli
adc
mov
movsl
cld
in
subb
and
adc
clc
push
inc
jno
subb
andl
aam
mov
add
lods
xor
lret
out
mov
dec
cmp
cmpsl
jo
mov
pop
lahf
xchg
clc
inc
xchg
mov
ret
repz
cmpb
inc
jnp
fnstsw
inc
sbb
mov
data16
mov
add
xchg
loopne
rorb
jb
pushf
cmp
fs
mov
insl
pop
mov
subb
stos
in
mov
xchg
add
out
push
xorl
out
in
insl
inc
loop
inc
gs
cmovl
xor
hlt
subl
std
inc
add
jne
scas
mov
pop
add
arpl
jno
insl
aas
mov
add
loop
push
in
cmp
pop
add
shl
cli
movsl
xorb
pushf
mov
popa
lock
into
xchg
lea
mov
inc
subb
dec
jo
addb
adc
xor
cmp
sub
push
cmp
adc
in
jbe
aas
or
bound
mov
lcall
cmp
fs
dec
arpl
jb
or
adc
mov
mov
movsl
call
add
fcmovbe
lock
and
mov
call
popa
pop
jno
mov
push
imul
adc
jle
mov
push
pushf
mov
incl
subb
fistpl
push
std
and
xor
nop
add
adcb
cmp
adcb
push
lds
dec
xorb
pop
mov
mov
xor
shlb
jno
je
imul
adc
dec
inc
and
outsl
pop
add
das
push
jecxz
int
loopne
js
jl
addb
jle
jp
int
mov
dec
xchg
pop
inc
pop
cmpb
insb
add
cltd
mov
test
cmp
lock
mov
loope
shll
mov
add
jns
sar
aad
fiadds
mov
xor
mov
cs
dec
lret
fsubr
lods
ja
out
out
inc
jle
pusha
mov
mov
dec
sub
dec
jecxz
lock
jnp
inc
rcll
inc
inc
cmpsb
pop
ret
subb
hlt
cmpsl
sub
repnz
int
bound
cld
data16
cmpb
icebp
and
sbb
fidivrs
in
arpl
sbb
dec
loopne
sbb
ja
push
popa
jmp
add
pop
jle
shl
xor
xorb
mov
scas
xor
in
imul
sub
mov
aas
sbb
adc
mov
xchg
pusha
inc
or
push
je
loopne
sbb
popf
scas
adc
add
jl
loop
and
adc
popa
xlat
add
xor
cld
jno
mov
loop
add
jg
cmpb
int3
outsb
mov
mov
or
mov
dec
push
subb
push
push
outsb
mov
frstor
push
call
jecxz
movl
add
insl
jne
mov
jecxz
aad
xchg
push
sbb
and
xchg
mov
jb
inc
lcall
test
iret
jae
jp
mov
insl
xor
ret
push
pop
xor
adc
push
cmp
push
dec
nopl
pop
add
and
cmp
push
sub
or
jb
adcb
adc
push
pop
push
jno
add
jge
pop
cmp
adc
stos
jp
in
dec
pusha
pop
popa
nop
cmp
dec
jg
push
ficompl
xchg
fdivrs
sbb
add
adc
popa
je
loopne
cmp
sahf
ja
js
andb
mov
cmpb
fists
sbb
enter
xchg
and
inc
and
add
mov
sbbb
mov
adc
cld
dec
loopne
rolb
pusha
bound
ja
dec
movsl
add
pop
ffreep
cli
jle
cmp
xlat
push
dec
sahf
je
push
xor
neg
es
das
shr
sbb
or
inc
jbe
nop
push
mov
cltd
idivl
das
add
loop
imul
lods
jb
jnp
sub
pop
sbb
jae
pusha
pop
cld
dec
andb
ljmp
lahf
int
rolb
push
int3
sub
inc
int3
out
pop
addr16
js
aas
call
dec
xor
sbbb
sar
cltd
movsb
xchg
mov
mov
xor
sbbb
fmuls
push
push
popf
cld
icebp
jae
andl
adc
and
int3
out
mov
loope
imul
dec
xchg
adc
sub
pusha
cmp
or
sbb
dec
push
add
fidivl
ret
rolb
cmc
ret
add
mov
mov
mov
add
and
stos
xor
andb
mov
xchg
test
adc
sahf
addb
adc
inc
add
mov
iret
mov
xchg
test
mov
sub
movsb
enter
adc
mov
movsb
lcall
mov
test
cwtl
and
mov
push
in
adc
mov
lret
ficoms
inc
dec
rcll
insl
das
push
xchg
enter
jp
ret
adc
mov
movsl
fsubs
mov
xchg
leave
inc
loopne
in
sub
dec
xor
push
adc
mov
lret
mov
or
mov
xchg
dec
les
aas
inc
mov
sub
enter
xchg
sahf
push
adc
mov
enter
inc
dec
int3
adc
insl
add
xchg
mov
mov
cwtl
fnstcw
inc
mov
mov
jg
les
inc
dec
dec
adc
scas
movsb
cmp
fiadds
mov
bswap
jnp
mov
dec
mov
movsb
repnz
mov
lock
pushf
loop
inc
dec
iret
adc
insl
ja
xchg
mov
mov
jne
cmp
xchg
dec
sub
enter
xchg
fcomps
adc
sub
inc
dec
cmp
shrb
push
xchg
shll
sbb
mov
push
xchg
push
inc
test
mov
bswap
push
xchg
xchg
adc
mov
mov
push
enter
inc
dec
aaa
cmp
xchg
roll
xchg
addr16
enter
xchg
mov
adc
movsb
mov
aam
fldenv
mov
popa
xchg
push
inc
cmp
or
sub
ror
mov
mov
gs
dec
push
adc
push
xchg
xor
xchg
addr16
movsb
enter
xchg
clc
push
js
rcrb
pop
mov
movsb
lock
enter
inc
dec
mov
call
pop
and
fsts
mov
outsl
xchg
fadds
xchg
push
sub
enter
xchg
int3
push
adc
xor
fxch
xchg
testb
mov
enter
xchg
pop
and
rolb
fiaddl
xchg
dec
sub
enter
xchg
pushf
push
adc
das
scas
xor
push
xchg
sahf
flds
mov
jge
pop
inc
mov
mov
fcoml
mov
movsb
cwtl
mov
pop
adc
sub
mov
aas
xchg
lods
inc
mov
or
push
xchg
cmp
roll
mov
bswap
cmp
stos
xchg
test
mov
mov
lds
movsb
repnz
or
aaa
mov
or
xchg
xor
bswap
psubusw
xchg
scas
push
adc
mov
movsb
mov
mov
lcall
movsb
insl
adc
xchg
loope
nop
shrb
push
xchg
test
xchg
fsts
inc
mov
xchg
sub
xchg
pop
sub
enter
adc
sbb
arpl
sub
daa
into
shlb
cmp
movsb
sbb
cmp
inc
fadds
or
push
xchg
and
or
test
movsb
repnz
aam
mov
rclb
and
mov
push
adc
mov
movsl
fcomp
mov
les
in
leave
stos
push
fcoms
and
enter
in
leave
lock
nop
adc
mov
movsb
stos
mov
enter
inc
dec
addr16
mov
flds
cwtl
sbb
out
xchg
enter
xchg
mov
mov
insl
adc
movsb
push
imul
mov
stc
adc
mov
xor
imul
hlt
rorb
mov
fldl2t
adc
sbb
mov
xor
movsb
es
in
movsb
repnz
ljmp
lahf
adc
jno
mov
and
loope
ljmp
rorl
mov
fstps
mov
push
adc
mov
enter
inc
dec
popf
adc
insl
inc
push
xchg
insl
and
pop
mov
enter
xchg
aam
pushf
jg
les
dec
outsb
adc
insl
jge
xchg
sbb
call
out
hlt
inc
mov
xchg
fwait
inc
in
in
sub
enter
xchg
loopne
adc
out
movsb
cld
mov
enter
inc
dec
jo
mov
jne
dec
sbb
fsubrs
push
xchg
lock
dec
cltd
adc
scas
movsb
jno
cwtl
xchg
jno
sbb
fyl2x
adc
mov
movsb
int3
mov
movsl
mov
mov
enter
dec
repnz
push
hlt
imul
adc
insl
pop
push
xchg
jae
hlt
repnz
adc
insl
addr16
xchg
xchg
and
in
mov
xchg
push
inc
mov
hlt
mov
bswap
arpl
xchg
xchg
mov
adc
jne
aam
mov
fldenv
mov
pop
pop
call
mov
and
pop
movsb
in
dec
int3
les
testb
fsts
push
imul
adc
mov
mul
bswap
push
fsts
push
insl
movsb
dec
js
test
mov
dec
cwtl
out
les
clc
mov
movsb
in
enter
inc
dec
jns
mov
insl
push
scas
movsb
adc
push
push
andb
stc
test
pop
movsb
nop
mov
in
enter
inc
dec
adc
mov
push
xchg
cli
and
popl
dec
inc
mov
ret
jnp
sti
movsb
cli
mov
lret
fidivrs
movsb
mov
inc
xchg
push
inc
clc
xchg
jg
cld
mov
bswap
inc
je
xchg
jge
out
flds
mov
add
mov
aas
xlat
movsb
mov
pushf
or
out
cmp
mov
hlt
pop
inc
dec
adc
insl
cmp
xchg
mov
mov
jg
inc
mov
xchg
or
xchg
or
enter
xchg
rcrb
or
insl
xor
int3
mov
adc
adc
mov
movsb
enter
out
icebp
and
fnstenv
mov
rcll
mov
das
xchg
mov
cmpsl
enter
add
push
movsb
dec
or
das
movsb
stc
xchg
ret
sub
mov
mov
pop
adc
insl
sbb
xchg
andl
fldenv
mov
sbb
adc
cld
dec
jbe
xchg
movsb
fsubr
mulb
xlat
movsb
mov
out
push
movsb
dec
add
and
add
xchg
test
xchg
pop
sub
lret
adc
rcrb
pop
mov
push
test
inc
fbld
xchg
and
sahf
mov
mov
mov
add
test
nop
adc
mov
movsl
xchg
movsb
scas
mov
movsb
imulb
pushf
mov
movsb
add
mov
das
movsb
xchg
mov
call
xchg
adcb
xor
adc
and
shll
mov
adc
out
adc
mov
xchg
inc
inc
xchg
push
call
mov
mov
add
stos
pushf
mov
mov
fsubs
push
mov
pop
fmulp
hlt
aam
sub
xor
in
out
mov
mov
arpl
cmpsb
shlb
mov
inc
je
test
add
cld
enter
lcall
fdivl
add
ret
inc
mov
pushf
out
repnz
cli
xor
loopne
or
mov
mov
xchg
mov
mov
rclb
in
mov
sub
mov
mov
fcoml
mov
test
xchg
mov
or
xchg
xchg
int3
fwait
mov
xor
movsb
adc
mov
movsb
add
pop
in
jmp
clc
cmp
xor
mov
cmp
or
inc
cmp
mov
inc
add
mov
mov
xchg
xchg
cmpsb
in
andb
xchg
mov
jecxz
into
mov
arpl
mov
rclb
mov
or
loope
xchg
mov
mov
popa
jns
sbb
xchg
loopne
or
pop
add
xchg
cmpsb
movsb
add
fisttps
mov
pop
mov
or
fiadds
negb
rorb
xchg
mov
sahf
cli
pop
inc
mov
faddl
pop
xchg
fisubl
fildl
add
ficomps
mov
fiaddl
xchg
mov
rolb
mov
ret
cli
fmuls
xchg
mov
mov
mov
or
xlat
sbb
inc
out
push
jge
add
or
mov
frstor
icebp
sbb
aad
or
dec
push
mov
and
jmp
jne
fbld
add
add
rcr
and
add
xchg
pop
sbb
mov
add
nop
cltd
inc
mov
fcoms
in
call
pop
add
sub
rclb
lods
in
rorb
xchg
cwtl
out
mov
hlt
dec
test
int3
mov
xchg
mov
faddl
movsb
enter
nop
pop
xchg
mov
fdivr
inc
mov
call
mov
aam
clc
pushf
mov
or
shlb
mov
pop
mov
or
fsubrl
mov
faddl
mov
xchg
cld
mov
dec
call
mov
aam
les
xchg
mov
subb
pop
xchg
mov
fildll
xchg
xchg
pusha
cmpb
rclb
mov
and
jmp
jne
fbld
xchg
and
sbb
mov
fisubs
xchg
jge
in
dec
mov
fisubs
stc
xchg
in
add
jne
or
inc
testb
popa
xchg
scas
mov
cmp
adc
add
stos
sub
xor
andl
mov
sub
sbb
push
cld
inc
aas
hlt
in
repnz
out
inc
out
in
loopne
fimuls
fcom
inc
into
or
mov
mov
lods
cltd
movsb
or
and
mov
in
fadd
and
xchg
int3
mov
or
jno
or
test
dec
push
addr16
sub
jne
fstpl
clc
sub
hlt
gs
inc
sub
into
in
mov
dec
test
add
test
jmp
mov
pop
stos
mov
daa
add
push
test
hlt
xor
or
mov
mov
xrelease
rcrl
stos
outsl
cmp
aam
aaa
pop
loope
rclb
cwtl
mov
adc
das
aaa
mov
jl
out
push
sti
test
add
sub
adc
inc
mov
decb
ret
addl
inc
pop
mov
pusha
test
dec
fmul
mov
fs
lock
fiadds
sbb
and
hlt
inc
sub
inc
mov
hlt
xor
mov
les
add
sbb
mov
hlt
pop
adcb
dec
pop
in
dec
fucomp
or
adc
loopne
cli
lea
mov
pushf
mov
mov
adc
cld
xchg
ret
mov
sbb
mov
jmp
sbb
leave
cmpsl
call
insl
shll
adc
or
xchg
fstps
cmp
test
sbb
decl
lcall
scas
and
adc
dec
out
cmp
dec
push
mov
mov
and
ljmp
daa
adc
xchg
inc
inc
adc
or
mov
mov
repnz
test
movsl
subb
mov
test
jns
rolb
int3
xchg
xor
pop
sar
xchg
mov
nop
xlat
insb
and
and
mov
push
lret
hlt
cmpsb
mov
leave
out
sub
lret
inc
and
inc
xchg
fisttpll
les
flds
mov
mov
rcl
stos
mov
faddl
dec
or
fists
sbb
call
inc
push
out
and
sub
mov
inc
jbe
ret
xchg
hlt
insl
sbb
bswap
loop
je
sub
or
inc
mov
ror
dec
bnd
pop
and
push
addl
int3
pop
psraw
xchg
fcmovnbe
mov
adc
sahf
mov
fsubl
adc
push
test
into
xchg
insb
ss
daa
push
inc
sahf
daa
and
lods
mov
and
rcll
std
insb
int
mov
test
loope
test
into
mov
xchg
into
test
xor
cwtl
fildl
xchg
aad
mov
icebp
pop
xor
add
insl
mov
or
sbb
in
jle
mov
xchg
mov
push
and
adc
sub
mov
mov
mov
adcb
mov
imul
dec
mov
cli
dec
mov
and
inc
aam
jmp
adc
ret
mov
or
aam
test
push
cmp
xor
mov
hlt
xchg
xchg
mov
shlb
jbe
jmp
mov
xchg
inc
leave
or
stos
xor
mov
sbb
movsb
outsb
test
es
push
std
or
xor
scas
or
pop
cmp
mov
ljmp
or
ret
xchg
fmull
fiaddl
leave
idiv
xor
outsl
cs
jae
xchg
enter
mov
mov
sarb
subb
or
fdivl
xchg
or
mov
sbb
pop
mov
test
or
inc
pop
inc
roll
pop
movsl
xchg
scas
test
mov
jnp
mov
xor
imul
or
inc
insb
imul
add
adc
and
fadd
out
test
inc
xchg
hlt
pop
jg
stos
clc
rcll
mov
mov
lcall
mov
mov
xchg
notl
add
into
or
push
xchg
jns
xor
pop
mov
mov
test
xchg
repz
or
test
xchg
adc
push
jmp
out
hlt
adc
mov
add
movsb
stos
pushf
ret
mov
in
xchg
out
dec
mov
cmpsb
xchg
movsb
push
lock
inc
push
jnp
test
push
repnz
mov
fwait
mov
mul
movsb
inc
pop
ljmp
mov
stos
in
into
fcmovnbe
or
icebp
loope
mov
test
or
adc
nop
and
dec
nop
sub
inc
or
xchg
mov
pop
mov
gs
add
movsb
outsl
adc
push
add
adc
mov
fst
xchg
std
sub
out
or
aam
cltd
pop
mov
mov
inc
xchg
xchg
pop
xor
cmp
lret
xlat
adc
xchg
and
loopne
enter
mov
xchg
add
movsl
and
mov
or
mov
add
pushf
mov
into
es
lea
mov
aas
adc
iret
hlt
out
or
and
popf
leave
adc
mov
je
ficompl
test
adcl
movsb
arpl
jns
fnstcw
mov
popa
push
js
cmp
sar
test
clc
add
mov
mov
or
hlt
lods
push
adc
js
bound
out
cmpsb
call
vcvttps2dq
lock
arpl
out
fs
out
sbb
rorb
mov
call
in
stc
in
fdivl
aam
pop
fisttpl
pushf
or
testb
outsb
add
imulb
andl
jo
lock
loop
cmp
sbb
jl
in
push
fmul
add
hlt
cltd
stos
aaa
jge
mov
scas
hlt
mov
les
fbld
ss
cmp
subl
es
mov
shrb
in
and
jl
dec
cli
mov
jae
sub
faddl
lret
lock
popa
mov
inc
loopne
dec
mov
daa
repnz
shr
xorl
sarb
pop
in
jo
mov
cltd
and
bound
xchg
enter
xchg
mov
enter
cwtl
lods
lret
movsb
jle
in
jno
add
xchg
ljmp
adc
jmp
add
mov
xchg
mov
mov
xchg
add
aaa
mov
mov
adc
adc
or
inc
cmp
icebp
jmp
or
push
push
dec
stc
in
adc
lods
or
mov
cltd
dec
enter
out
int
ror
js
repnz
or
add
mov
cltd
daa
out
aaa
movsl
out
bnd
inc
cmp
fdivs
inc
fnstenv
ljmp
arpl
loopne
stos
sub
insl
inc
lock
je
lcall
add
lea
mov
xor
lock
nop
loopne
fadds
leave
aam
jp
setnp
mov
mov
inc
or
jl
sub
xchg
test
pop
mov
mov
mov
leave
ljmp
in
daa
iret
jp
pop
icebp
loop
sub
push
mov
cmp
sub
ds
jno
cli
pop
cwtl
icebp
scas
push
loop
jmp
lock
cmpsl
pop
in
cmp
xchg
mov
lock
stc
sbb
mov
and
pop
test
movsl
dec
or
xor
shr
leave
sbb
push
sub
inc
adc
pushf
lods
scas
aam
call
add
xor
sub
pop
leave
mov
repnz
or
xchg
push
inc
nop
lret
mov
sbb
mov
int
mov
in
loopne
mov
and
cmp
loope
rorb
mov
or
or
movsl
rclb
insl
rcr
jge
xchg
adc
call
faddp
cmc
or
hlt
mov
push
repnz
pop
or
pop
mov
call
ret
in
ss
add
lock
aaa
add
sub
jne
jmp
dec
lcall
repnz
xchg
xlat
bound
xor
push
pushf
sub
sub
dec
test
outsb
shrb
in
lock
nop
in
cmpsb
ljmp
dec
xchg
cmpsl
sub
pop
push
sub
jae
pop
push
ljmp
xchg
push
sbbl
dec
sbb
aad
mov
sbb
cwtl
mov
ss
mov
add
mov
push
int
mulb
mov
les
daa
jp
testb
movsl
iret
jno
daa
out
andl
or
int3
xchg
sub
mov
call
jmp
and
pop
ja
mov
adc
add
pushf
or
sbb
mov
push
mov
dec
out
mov
out
adc
icebp
jnp
rolb
dec
fs
sbb
stc
and
adc
dec
jle
lock
xchg
mov
leave
test
addr16
adcl
aas
inc
pop
loope
lods
pop
aaa
mov
or
lea
pop
and
out
add
push
lods
mov
mov
push
mov
lods
add
pop
mov
icebp
or
mov
sbb
xchg
or
mov
inc
das
fsubl
in
mov
loopne
cmpsb
test
add
sub
rcl
or
out
sahf
cmpsb
jge
xchg
in
push
lret
bound
es
pushw
ret
stc
mov
adc
push
daa
stos
cmpsl
dec
xor
stc
pop
leave
mov
shl
cld
add
leave
mov
cmp
mov
mov
fidivs
mov
push
addr16
xchg
add
lds
pushf
sti
mov
sub
mov
cmp
push
in
and
out
xor
mov
div
dec
ljmp
jecxz
sbb
in
or
imul
scas
mov
adc
mov
fldl
int3
sub
sbbb
enter
cmp
std
aam
and
or
fadds
cmp
outsb
test
imul
in
lret
add
loop
bound
jg
sub
and
mov
adc
cwtl
fmull
fcmovnb
outsl
fimuls
xor
lret
scas
ret
push
jp
adc
and
push
inc
lcall
mov
push
sbb
xchg
dec
adc
les
sub
adc
int3
sub
xchg
in
je
dec
scas
in
stos
lret
fsubs
movsb
jp
xor
and
pop
cli
pop
into
mov
pop
xchg
jl
lock
aam
rcr
add
mov
or
clc
cmpsl
sbb
pop
mov
and
mov
ret
fistps
cld
stos
pop
mov
sarl
enter
mov
sbb
test
xchg
mov
and
inc
xchg
and
and
scas
aad
mov
sbb
add
out
add
cmc
or
push
cmp
dec
mov
xor
xorl
push
andl
mov
sub
lods
lods
stos
data16
ss
test
insb
fsubl
add
cmpsl
sbb
cmc
sbb
and
into
inc
cmpsb
insb
inc
pop
sbb
and
hlt
or
add
xlat
fadds
push
xchg
jno
daa
cmc
rolb
xor
cli
aam
fldt
or
xchg
loopne
adc
rclb
hlt
push
and
fcmovnu
push
movsl
test
cmp
inc
loopne
or
add
and
lcall
xchg
lret
rcll
fsubs
dec
dec
in
dec
aas
loopne
loop
addl
enter
stos
lods
scas
adc
sbb
dec
inc
inc
in
int
and
pop
lcall
pop
jmp
gs
inc
sbb
fistpll
mov
mov
cmp
jecxz
fmuls
repz
fsubrs
outsb
test
xchg
das
in
pushf
int3
es
xchg
pop
ret
rorl
icebp
shlb
aaa
lods
shl
xlat
into
pop
sbb
outsl
pushf
pop
sbb
cmp
and
fstpt
add
movsl
incb
jnp
adcb
mov
cmp
mov
mov
inc
in
in
mov
lcall
lret
les
test
xor
mov
int3
inc
shl
ret
dec
jbe
rorl
call
test
mov
nop
fisubs
adc
add
add
hlt
mov
mov
jns
cmp
or
xor
mov
out
sub
lock
into
enter
orl
cmp
sbb
ds
and
in
mov
jb
out
push
adc
repnz
movb
bswap
idiv
fimuls
ret
mov
mov
xchg
in
mov
sbb
in
repnz
test
addl
sbb
rclb
fbld
hlt
and
jecxz
ss
in
mov
movsb
mov
dec
lock
xchg
inc
pop
sub
inc
or
sti
and
mov
fcomps
xchg
inc
pop
sahf
xor
clc
mov
or
add
repz
outsb
fnstcw
std
fldenv
repnz
pop
sahf
orl
add
clc
out
jl
outsb
sbb
addr16
pop
mov
outsb
or
jmp
out
push
stos
fisttpll
jg
cld
xchg
ret
mov
ja
mov
addl
and
jnp
xchg
jmp
nop
cmp
repnz
jne
lcall
jae
data16
cltd
loop
sub
ficoml
or
sbb
jno
insb
mov
adc
movsb
jmp
leave
xchg
scas
imul
mov
jmp
in
inc
jmp
xchg
mov
adc
into
add
test
inc
stos
mov
divb
mov
mov
lods
push
hlt
inc
inc
fsubrl
test
mov
add
repnz
jp
divl
mov
mov
add
xor
daa
sub
pop
mov
arpl
dec
aam
mov
inc
or
enter
fxch
lods
int3
data16
push
sbb
xor
test
mov
lret
pop
out
xor
push
jne
lock
inc
xor
leave
jecxz
popl
enter
or
xchg
test
andl
cli
and
data16
mov
push
sub
adc
shll
loope
ret
ss
xor
enter
cmp
mov
fld1
sbb
imul
aad
call
ret
inc
fistl
xchg
mov
mov
mov
pop
or
loope
lea
xor
setbe
adc
insl
call
cli
mov
jmp
mov
ja
out
jecxz
into
fs
add
add
add
icebp
mov
add
repnz
fstp
xor
cltd
xchg
outsl
ret
shll
incl
xchg
mov
xchg
sbb
es
lock
pop
fs
mov
xchg
nop
mov
mov
mov
mov
sbb
cwtl
sbb
mov
inc
jmp
mov
push
out
mov
or
or
and
mov
add
or
scas
bswap
scas
fidivrs
xlat
test
hlt
iret
dec
mov
lods
ret
and
stos
mov
xlat
pop
or
cmp
pop
mov
leave
or
mov
adc
inc
test
ss
outsl
mov
pop
cmc
and
popa
out
adc
cmpsb
inc
sub
mov
mov
pushf
adc
aam
inc
or
mov
xor
fbstp
fs
sub
clc
ret
mov
movsb
push
adc
les
in
cs
or
mov
imul
aad
movsb
stos
and
xor
aaa
pop
and
lea
movsb
stos
and
out
roll
sub
dec
inc
lea
fisubl
inc
punpcklwd
cwtl
setbe
loop
xchg
lcall
xor
push
shr
sbb
xchg
push
mov
sub
lock
inc
test
addl
xor
adc
cmp
ret
cmp
inc
jge
xchg
nop
scas
adc
push
addb
or
jl
mov
rolb
xchg
nop
lock
sti
xchg
or
cmc
or
push
jl
adc
bnd
stc
call
decl
out
inc
xchg
je
test
rorb
mov
shrb
aad
xchg
push
loop
push
subb
adc
test
inc
mov
sbb
cmpsl
push
xchg
aas
inc
cmp
cmpb
adc
addb
rcrb
cmp
sub
faddp
loope
mov
mov
les
mov
hlt
cld
mov
subl
adc
orl
clc
incb
mov
sub
xchg
push
out
pop
test
test
insl
cli
decl
mov
inc
xor
cmp
hlt
pop
cmc
pcmpgtb
push
mov
mov
sub
jns
adc
insl
repnz
loop
int3
nop
pusha
pop
or
mov
mov
enter
sub
mov
jns
jg
popa
jge
out
sahf
mov
mov
sub
mov
cmp
mov
jns
mov
mov
mov
adc
call
incb
ret
add
mov
decb
out
cmp
incb
or
xchg
mov
nop
pop
adc
test
sub
mov
call
mov
das
loop
popf
stc
loopne
jnp
jb
call
dec
mov
add
mov
jge
loop
enter
xor
cwtl
divl
fmull
fcmovu
fimull
cltd
enter
or
cmc
jb
cmpsb
jp
xchg
fisubl
push
adc
insl
mov
mov
or
pop
aam
sahf
fstl
test
mov
mov
imul
aad
aam
aam
loop
das
out
adc
shlb
mov
cmp
adc
jo
mov
dec
mov
cmovns
aad
dec
mov
adc
sub
cmp
imul
aad
mov
mov
test
incb
decb
push
inc
add
sbb
adc
sbb
scas
xchg
rol
ds
mov
cwtl
jge
test
pop
inc
hlt
pop
fs
xchg
lret
mov
push
push
inc
mov
cmp
ret
cmp
std
push
mov
cld
les
inc
cld
les
inc
cld
les
inc
cld
les
inc
jge
xchg
shrb
sti
add
xor
mov
jge
xchg
mov
add
hlt
or
test
sahf
in
nop
test
mov
rcrb
stc
loopne
cli
adc
add
mov
cli
outsb
pushf
data16
loop
add
loop
add
loop
add
loop
add
in
mov
inc
xor
mov
mov
mov
xchg
and
mov
mov
sbb
or
aas
ret
lea
add
xchg
sbb
in
hlt
xchg
inc
imul
dec
push
xsavec
mov
loope
fs
inc
sub
xchg
mov
xchg
imul
jmp
adc
test
xchg
inc
sub
push
adc
push
daa
mov
mov
cli
mov
adc
xchg
mov
xchg
outsl
or
fucom
movsb
cs
or
test
inc
les
inc
les
mov
dec
sti
into
sahf
mov
mov
in
mov
cmp
sub
sbb
mov
mov
in
insb
cld
lods
addb
lcall
or
cmp
and
stos
and
cwtl
inc
mov
sbb
hlt
and
xchg
adc
orb
xchg
incb
or
sbb
stos
sti
mov
inc
push
mov
or
cwtl
jnp
inc
stos
sbb
stos
mov
cs
pop
mov
sub
aad
inc
sub
mov
mov
mov
or
mov
mov
test
adc
std
cmp
cmpsl
movsl
mov
insl
mov
les
outsl
sub
xchg
test
xchg
xchg
shll
les
adc
mov
addl
sbbb
fsubl
mov
nop
lock
inc
push
push
add
lock
inc
ret
inc
enter
inc
imul
mov
cld
jle
pop
test
xchg
sub
movsb
mov
movsb
imul
aad
cli
jle
cli
mov
add
clc
and
loop
jle
movsb
and
push
idivb
lds
push
rcr
fs
mov
jle
and
loope
cli
test
movsb
inc
push
sbb
movsb
inc
push
mov
repnz
clc
popa
pop
or
jae
test
add
sahf
add
sahf
add
sahf
add
bound
nop
xchg
xor
hlt
mov
push
test
mov
mov
in
push
ds
icebp
push
mov
stos
hlt
das
mov
cmp
divb
pop
push
inc
in
adc
mov
push
or
add
jle
call
cli
mov
les
pushf
stos
mov
sub
xchg
out
xchg
xor
mov
scas
mov
mov
mov
ja
or
out
mov
or
incl
jle
loop
in
and
fstps
fisubrs
ljmp
jecxz
lds
addb
mov
add
mov
faddl
loop
xor
sub
mov
sbb
fidivrl
mov
mov
adc
or
inc
test
mov
es
cmp
fdivrs
push
adc
insl
mov
mov
aam
inc
add
cmp
mov
adc
imul
aad
xchg
and
sarb
ret
add
jbe
or
test
and
loop
jle
xchg
into
jle
mov
test
subl
fs
stos
hlt
es
adc
mov
push
adc
aaa
jb
mov
jnp
clc
mov
inc
or
dec
filds
xor
js
jge
fistl
in
or
fisubrl
lret
sbb
mov
in
in
shlb
call
and
shl
cmc
daa
cltd
sub
in
stos
stos
hlt
sub
hlt
sbb
cmpsb
jmp
cmp
bswap
enter
sub
pushf
stc
mov
ss
aam
inc
adc
ljmp
fcomps
dec
mov
mov
hlt
mov
gs
and
lret
in
xchg
out
call
dec
out
xchg
lock
repnz
mov
push
shlb
mov
mov
jmp
sub
leave
push
stos
jno
repnz
pop
fwait
out
and
cltd
inc
sub
int
flds
and
and
xchg
jnp
xchg
inc
jbe
jne
scas
repnz
loope
cmp
jo
in
sub
pusha
call
add
adcl
nop
lock
flds
add
and
hlt
mov
mov
test
jne
mov
jle
mov
push
and
mov
mov
lods
movl
outsb
and
test
inc
inc
shlb
out
icebp
inc
loopne
adc
test
xchg
mov
in
push
pop
jle
out
call
cmp
int
sub
std
xor
rol
test
stc
out
js
and
cmc
inc
xor
xchg
and
rol
mov
addr16
ljmp
out
mov
mov
cmpsl
pop
push
push
outsl
into
adc
push
or
in
cmp
pusha
out
fiadds
stc
iret
pushf
aaa
push
xchg
cmpl
ret
adcb
dec
push
sbb
int
xor
xchg
in
adc
mov
lods
loop
dec
lea
xchg
dec
in
inc
or
lret
sbb
cmp
fstps
push
ret
sub
mov
xchg
sub
in
jmp
mov
and
jle
popf
shlb
add
hlt
mov
shrl
mov
fcomps
out
pop
scas
shrl
mov
imul
punpckhbw
adc
fcompl
in
adc
stos
mov
sub
roll
adc
lods
jle
test
mov
xchg
mov
add
adc
test
inc
arpl
push
dec
imul
jle
inc
inc
pop
and
mov
stos
mov
cs
xchg
sbb
imul
push
adc
jle
push
mov
mov
test
lcall
xchg
sahf
scas
xchg
test
mov
push
mov
mov
mov
aam
jb
jle
lcall
dec
adc
or
add
jns
add
jns
add
jns
add
stc
cwtl
bswap
cwtl
fimuls
mov
fwait
mov
adc
fnstcw
test
inc
pop
adc
push
push
jle
decl
das
pop
test
ret
adc
mov
add
jns
add
jns
add
jns
add
jns
add
stc
mov
enter
mov
movnti
adc
inc
sbb
andb
pop
xchg
adc
xchg
mov
mov
fidivs
imul
inc
call
loop
andl
popf
bound
orl
ret
out
popf
incb
ret
test
push
inc
or
call
ret
inc
icebp
jg
adc
push
or
or
inc
jge
popa
es
fwait
jle
add
mov
sbb
fcompl
hlt
test
stc
fcompl
std
push
mov
mov
stos
andl
stos
fadds
mov
addl
stos
jecxz
std
inc
mov
xchg
mov
add
cmp
cltd
std
or
sar
bswap
std
fcompl
sbb
adc
cli
mov
mov
cmp
cmp
inc
pop
and
xchg
pushf
pop
movups
enter
stos
mov
sub
mov
xor
sbb
sti
sbb
mov
inc
or
aad
in
outsb
out
sbb
cmp
xchg
aas
cmc
shld
out
push
adc
insl
enter
or
jb
rcr
sbb
call
push
push
jmp
mov
sub
rol
sbb
mov
cwtl
mov
ret
shl
lcall
call
sub
lcall
call
loop
adc
mov
push
adc
mov
outsl
or
fucom
fisubrs
ljmp
lret
jle
loop
inc
sub
mov
subl
aad
inc
cld
fdivr
inc
mov
mov
xchg
xchg
mov
std
lahf
sub
sbb
icebp
jno
enter
pusha
xor
outsb
jl
cmp
std
fwait
inc
fiaddl
fcoml
orl
stc
ficompl
aam
inc
pop
lods
fs
bound
push
out
adc
aam
inc
sub
lods
mov
sarb
xchg
test
rcl
rolb
lods
aad
into
insl
into
push
in
inc
dec
hlt
sub
popl
loopne
mov
rcr
rorb
dec
lods
fstl
aam
mov
outsl
mov
pop
cmc
punpckhbw
adc
imul
aad
scas
stos
mov
mov
sbb
shl
mov
sub
lea
scas
stos
and
fld
or
sub
xor
iret
and
loop
subb
les
push
adc
insl
scas
push
ror
or
mov
jmp
shr
out
jne
leave
loop
in
imul
aad
movsb
stos
mov
sub
adc
adc
mov
movsb
sbb
mov
mov
add
movhps
rcl
fs
push
adc
rorb
mov
jmp
mov
push
out
inc
inc
pop
mov
adc
cmpsb
inc
sub
sub
divb
sub
js
mov
cmpsb
aad
mov
mov
arpl
nop
inc
jnp
or
inc
decb
lret
das
or
mov
pop
mov
xchg
mov
xchg
cmpsb
xorl
shlb
imul
test
mov
mov
ror
sbb
imul
xchg
or
dec
mov
icebp
test
adc
cmp
cmpsb
std
call
decl
stc
or
mov
std
fwait
inc
test
add
jge
jmp
sti
adc
jmp
hlt
mov
into
andl
into
fadds
mov
addl
into
addl
into
mov
std
push
ret
add
sub
test
std
sahf
into
and
push
pushf
std
push
lds
inc
sub
leave
adc
aad
test
nop
dec
pushf
icebp
sahf
mov
mov
ficomps
hlt
into
inc
imul
pop
and
cld
mov
adc
aaa
add
xchg
std
scas
nop
jl
pop
test
xchg
std
cld
xchg
std
dec
call
xchg
std
or
mov
sub
hlt
lcall
adc
add
int3
mov
push
mov
stos
cli
call
mov
lods
inc
les
addl
xor
adc
loope
xchg
adc
std
jns
orl
mov
xchg
mov
xchg
popf
push
mov
orl
pop
xchg
or
mov
mov
mov
pop
pop
adc
cmp
test
sub
lea
xchg
mov
and
mov
and
mov
inc
mov
sbb
xor
mov
mov
mov
add
jge
mov
icebp
add
mov
or
xor
cld
out
xor
daa
shlb
sub
add
jo
inc
mov
dec
fucom
cli
jge
jbe
popf
outsl
pop
mov
or
and
les
and
fadds
mov
jge
clc
mov
pop
mov
pop
mov
loop
jge
les
cmp
inc
mov
sbb
push
enter
fs
test
or
dec
idiv
push
clc
ljmp
sahf
inc
and
lods
insb
dec
sahf
fucom
lock
mov
sub
inc
inc
sub
mov
out
mov
addl
js
aaa
imul
mov
xchg
mov
cld
adc
cmc
push
hlt
mov
add
xchg
cmpsl
ret
jno
jge
out
dec
sub
mov
sarb
jmp
imul
insb
cmp
push
pop
les
pop
loop
stos
xchg
adc
stos
enter
rorl
dec
ljmp
jbe
or
mov
mov
or
push
pop
in
jge
hlt
sbb
cltd
pop
in
stos
ljmp
data16
stos
pop
push
mov
mov
push
fisubl
loopne
lahf
pop
scas
sub
insb
dec
scas
and
push
scas
jl
test
xlat
inc
pusha
mov
add
sarb
ja
loop
test
into
mov
shrb
adc
cmp
cmp
enter
sti
int3
pop
cmp
into
out
aas
insb
jbe
pop
jmp
fimull
lods
cmc
xchg
loop
repnz
jns
xchg
aad
shr
int
js
sbb
pop
pushf
xchg
inc
sbb
pop
push
test
insb
jmp
xor
daa
jno
push
fistpl
mov
negb
jle
sbb
mov
sbb
adc
fldcw
sub
xchg
rcrb
jge
adc
push
bound
rol
repnz
push
bound
dec
int
movsl
sbb
push
ljmp
adc
mov
mov
fmull
dec
cmp
clc
mov
sahf
push
adc
stos
cmpsl
lods
pop
dec
icebp
cld
xor
or
adc
push
lret
or
mov
incb
leave
and
sub
imul
daa
dec
aam
jbe
xchg
push
movsl
lods
pop
xchg
and
aas
shr
jp
stc
or
and
cli
inc
iret
mov
mov
test
nop
push
xchg
inc
add
ret
lds
pushf
or
inc
movsb
scas
nop
in
repnz
cltd
out
stos
lods
jo
mov
es
pop
xor
push
add
adc
xchg
in
aad
jnp
leave
clc
add
in
mov
xor
push
in
repz
mov
jns
fisttpll
jl
addb
pushf
in
jbe
mov
movsb
pop
add
lock
sub
add
mov
mov
and
sbb
xor
into
mov
add
out
jp
repnz
test
mov
and
int3
test
repnz
int3
mov
aam
and
dec
cmp
pop
mov
les
ret
jge
dec
daa
mov
lock
test
xchg
orl
fidivs
loope
xor
sub
and
hlt
sub
xor
and
inc
daa
fdivl
mov
stos
mov
test
mov
pusha
enter
inc
mov
into
andb
cltd
or
leave
mov
enter
inc
jmp
sbb
fucomip
test
into
bound
ljmp
sbb
jle
mov
mov
sub
hlt
mov
nop
lea
sub
lret
test
mov
xchg
fdivl
ja
int3
xchg
add
or
sub
mov
loope
jb
xchg
mov
fiadds
cld
pop
mov
mov
mov
pop
or
adc
int
inc
add
xchg
mov
lods
add
sub
xorb
sub
andb
shrb
xchg
sbb
sar
outsl
jle
test
gs
popa
xorl
andl
icebp
hlt
mov
add
mov
xorl
call
cmp
mov
mov
sub
add
pop
or
mov
loope
in
inc
stc
fistpll
hlt
gs
movsb
pop
out
fisttpll
inc
add
or
les
xchg
push
or
pop
dec
mov
add
jo
jnp
nop
lahf
sub
fistps
scas
add
or
xchg
add
addr16
in
add
sub
outsl
insb
inc
pop
inc
in
fcmovnbe
mov
xchg
out
or
mov
test
jnp
adc
sub
mov
pop
pop
test
leave
out
or
int3
and
sub
mov
jl
shll
mov
pop
pusha
jg
shrb
addl
movntq
mov
mov
std
dec
enter
jns
in
fadd
mov
push
push
adc
dec
fists
loop
std
out
and
sub
inc
adc
in
std
mov
inc
scas
testb
sub
jnp
or
inc
mov
gs
cltd
jl
xor
out
fmul
inc
lcall
int
and
lret
insl
jle
pop
push
mov
add
insb
fwait
mov
rolb
call
mov
mov
in
rcll
outsb
popa
push
sti
shll
xor
mov
out
adc
loope
adc
mov
out
jno
adc
add
movsb
xchg
add
loop,pn
bound
cwtl
fs
popa
andl
dec
sti
mov
xor
lcall
sbb
inc
nop
mov
cwtl
and
bound
push
aas
stc
mov
sub
std
and
lods
lcall
dec
or
mov
xor
nop
sub
fs
mov
pushf
repz
shll
add
scas
hlt
mov
push
and
enter
punpcklbw
fucomip
int
ret
fcompl
pusha
dec
cltd
daa
mov
jmp
in
xchg
dec
lret
stos
push
cmc
sbb
jne
and
pop
mov
fidivl
cmpsb
loope
test
rorb
es
jmp
cld
sub
xchg
push
je
shl
mov
cli
cli
push
rcrb
push
icebp
adc
popf
mov
repz
clc
jnp
in
jg
jbe
adc
out
mov
fdiv
cmpsb
jne
xchg
inc
nop
push
arpl
mov
cwtl
mov
fstl
mov
mov
das
and
into
push
jno
in
mov
xchg
or
test
fstl
mov
cmpsl
push
shll
sar
and
inc
sub
psraw
repnz
xchg
test
shr
mov
mov
loopne
or
and
mov
in
sub
sbb
or
mov
das
nop
clc
and
xchg
aaa
pop
xchg
and
mov
scas
inc
out
pop
stos
in
dec
fdivr
adc
mov
mov
or
fcoml
test
mov
jle
and
or
mul
cmpsb
add
push
ljmp
repnz
hlt
bound
or
sbb
sub
hlt
add
arpl
mov
fiaddl
jae
subl
xchg
movsb
mov
adc
jb
lret
jle
xchg
daa
xchg
dec
mov
pop
xor
sti
jecxz
push
sub
insb
or
repz
cli
in
ljmp
movsb
xor
push
xchg
inc
addr16
pop
imul
push
nop
cld
inc
xor
mov
bound
das
jg
fcom
mov
idivl
xchg
sbb
fcomps
and
clc
cmp
lock
scas
mov
add
imul
push
mov
out
sub
ljmp
dec
movsb
arpl
adc
dec
pop
jmp
dec
ljmp
and
ljmp
xchg
mov
add
dec
push
aaa
mov
inc
and
shrb
fdivrl
daa
call
mov
pop
in
mov
sahf
pop
test
pop
loop
cld
shrl
loop
push
jecxz
outsl
notb
and
in
stos
mov
sbb
into
lea
mov
cmp
outsl
pop
jb
loop
int3
inc
xor
xchg
and
fidivl
xchg
nop
jne
pop
cmp
or
lret
icebp
push
mov
sbb
hlt
mov
test
mov
mov
aad
mov
int3
int
push
fdivrl
sub
jnp
mov
or
adc
ja
xchg
mov
ss
inc
xchg
mov
lahf
inc
inc
sub
add
imul
inc
mov
or
mov
or
into
pop
sub
xorb
inc
mov
pusha
sbb
lock
adc
adc
movsb
out
data16
or
sub
add
inc
hlt
sub
pop
ljmp
enter
fadds
xchg
xorl
jne
sarb
push
push
push
mov
stc
sbb
xchg
adc
aam
aad
mov
es
popf
arpl
fisubrl
or
scas
jle
sub
insl
insb
cli
aam
sub
jle
cmc
jmp
inc
fiaddl
in
or
in
sbb
je
nop
jmp
shrb
jle
das
dec
pop
mov
push
in
loope
and
pop
out
movsl
push
cli
ljmp
clc
cli
mov
test
fbld
jbe
xor
mov
repz
mov
mov
push
andl
fdivs
sbb
or
jle
and
hlt
inc
xchg
sbb
push
scas
and
loope
mov
movsl
or
jmp
dec
movsb
and
cmpsb
dec
jmp
paddsb
cs
mov
mov
loope
out
inc
data16
inc
outsl
adc
pushf
inc
add
lcall
in
fwait
or
insb
xchg
pushf
loop
dec
ficomps
inc
jp
inc
rclb
dec
jg
or
xchg
pop
int3
in
xchg
jle
cmovbe
aam
test
jbe
sub
jnp
test
xchg
cmp
stos
xchg
xor
xchg
bound
mov
in
dec
fists
hlt
mov
push
popa
adc
push
jle
cmp
outsl
subl
sub
xor
adc
push
adc
lock
sub
out
add
sub
rol
jmp
push
es
ret
ljmp
stc
mov
leave
and
pop
movsl
push
push
std
repnz
sub
mov
sub
inc
push
dec
mov
adc
es
insb
bound
test
xchg
lods
ljmp
mov
insb
cmpsl
xor
sub
mov
mov
jge
or
ss
iret
test
and
fdivrl
mov
jecxz
push
xor
insb
stos
repnz
ss
dec
cmp
cmp
ljmp
loopne
or
push
xor
or
xchg
les
inc
lods
scas
and
stos
enter
jns
xchg
subb
mov
cli
mov
jp
in
fldl2e
sub
out
fimuls
int3
sti
adc
dec
ret
pusha
loope
lret
push
jno
int3
lea
pop
cmp
dec
movsb
mov
cmpb
fisubrs
ret
jb
adc
fwait
adc
in
xchg
into
lods
sub
sub
mov
out
mov
sub
loop
jnp
xchg
iret
sub
test
xchg
xor
jno
out
cs
add
sub
test
push
sub
sub
outsl
hlt
mov
stos
aam
sub
push
mov
sarb
orl
and
xor
mov
int3
stos
hlt
out
leave
mov
xor
jg
pushf
mov
jle
iret
inc
aam
ja
testb
push
pop
outsl
dec
in
mov
sbb
pop
fcomps
jg
cwtl
out
shlb
add
enter
cmp
cmp
ljmp
leave
add
orl
jne
sbb
and
mov
pusha
lcall
ds
xlat
iret
pop
fldt
inc
push
pop
in
fwait
xlat
in
hlt
fcmovb
test
mov
out
inc
testb
add
cwtl
dec
xchg
ds
sub
pop
shl
fidivs
lock
or
pop
fisubrs
hlt
lahf
divl
in
cmpsl
fsub
loop
fsubs
clc
mov
or
jo
inc
sbb
stc
inc
push
out
mov
call
dec
roll
dec
pusha
ljmp
mov
jp
aam
inc
clc
mov
lcall
mov
shl
adc
mov
cmpsl
cmp
mov
xchg
adc
les
mov
in
or
sub
adc
fdivs
mov
sub
push
jb
mov
mov
icebp
enter
dec
push
jo
icebp
pushf
mov
in
push
push
rorl
cwtl
pop
mov
jae
xchg
xor
test
adc
stos
adc
add
movb
ret
mov
inc
jo
or
je
cld
mov
gs
hlt
sbb
mov
sub
hlt
test
mov
mov
pop
fsubl
mull
repz
mov
lock
mov
hlt
dec
add
stos
mov
xchg
push
ret
daa
test
lock
fsubl
mov
test
cmp
out
push
push
mov
or
adc
push
mov
or
repnz
out
xor
and
xor
test
push
cmc
pop
jb
dec
xchg
test
or
out
call
adc
mov
cmp
cli
adc
jbe
sub
or
cmpsb
mov
mov
mov
mov
mulb
adc
adc
dec
and
jb
or
pop
testl
mov
lods
or
das
xchg
bound
jno
ljmp
jo
adc
cmp
mov
cmpsl
xor
ljmp
js
pushf
inc
push
addl
std
ljmp
ret
pop
mov
adc
hlt
hlt
push
inc
les
pop
addr16
in
loop
loopne
jmp
pop
sub
mov
cmpsb
xchg
mov
xchg
mov
out
mov
fiadds
adc
enter
mov
cltd
mov
in
stos
sbb
pop
rcr
andl
adc
add
fiaddl
call
cmpsl
xchg
fisubrl
in
mov
jl
lahf
jmp
mov
push
sbbl
stos
hlt
pop
cltd
cld
nop
int
movb
mov
adc
adc
cltd
xchg
scas
mov
mov
xchg
cltd
outsb
push
decb
cmp
mov
mov
test
xchg
stos
loop
and
mov
jecxz
lock
xchg
aad
xchg
sub
sub
push
std
imul
add
jp
mov
rclb
in
imul
scas
pop
imul
jbe
add
cmp
push
aam
dec
movsl
xor
xchg
lds
scas
pushf
dec
lods
adc
hlt
mov
enter
jno
hlt
dec
dec
call
lods
dec
lock
cmp
dec
mov
adc
xchg
mov
int3
int3
fsub
in
test
or
sbb
dec
mov
inc
dec
loop
call
jno
mov
mov
nop
mov
insl
dec
sub
jecxz
fs
out
scas
lea
jle
dec
mov
in
cmpl
cmpsb
push
sub
fsts
cmpsb
mov
inc
cld
pop
icebp
fisubrs
sbb
cld
jg
sub
add
lods
mov
fisubs
inc
push
enter
leave
pop
mov
enter
mov
mov
adc
xchg
lcall
jecxz
hlt
loop
lea
sahf
fildll
sbb
xchg
in
cwtl
push
fmull
loop
lcall
xchg
fists
repz
sub
jnp
hlt
or
filds
xchg
xchg
xchg
mov
adc
enter
repnz
out
sub
insl
sbb
mov
into
es
push
sub
addr16
sarl
test
enter
lods
mov
in
sbb
incb
out
out
repnz
mov
call
mov
mov
sub
xchg
pusha
movsb
fidivs
or
push
test
sti
test
adc
dec
xchg
push
call
dec
push
xorl
imull
dec
ret
xchg
rcrb
or
sub
jnp
lcall
mov
or
nop
mov
addr16
arpl
pusha
loop
loopne
mov
mov
push
loopne
xchg
xchg
fisttpl
adc
ret
dec
xor
mov
cwtl
xor
xor
int3
lods
push
jne
mov
jb
xor
sub
xchg
dec
or
inc
shlb
loopne
hlt
rorb
push
dec
cld
rcrb
loopne
movsl
xorb
or
aam
lds
scas
xor
in
jno
ret
and
adc
mov
ljmp
fs
adc
insb
xor
inc
movsl
imull
inc
or
test
adc
shlb
cmp
fadd
pop
fisttpll
mov
sub
dec
pop
mov
inc
push
fisttps
mov
out
mov
xchg
mov
mov
fwait
mov
iret
dec
xor
lds
and
shll
mov
movsl
rcrl
cmpsl
xor
ja
ss
mov
cmp
inc
insl
ljmp
mov
mov
std
sbb
push
push
xchg
les
mov
inc
or
push
xchg
sub
call
test
hlt
insl
js
cli
ds
lock
enter
mov
xor
inc
imul
adc
dec
jg
pop
into
jmp
in
imul
push
bound
ret
add
dec
cmpsb
dec
xchg
test
pop
jae
ljmp
pop
lock
add
mov
jb
adc
jae
pop
push
fcmovb
fcoms
or
cmp
jo
clc
aaa
xor
stos
fucom
fmul
inc
mov
fmul
sub
outsb
xchg
fistps
hlt
push
ret
in
leave
mov
out
adc
popa
and
push
inc
movntq
ret
adc
pushw
mov
fistpll
add
jbe
scas
lret
adcw
jle
adc
push
pop
and
add
mov
pop
adc
cwtl
jae
in
fcoms
add
shr
or
movsb
stos
stos
xchg
ret
pop
andl
mov
inc
insl
in
push
push
xchg
mov
popa
add
inc
decb
mov
lock
adc
adc
push
stc
fisttps
hlt
mov
mov
mov
and
nop
nop
pop
xor
mov
rorb
pop
adc
jmp
adc
mov
hlt
sbb
cmove
movsb
lea
pushf
mov
cmp
js
test
bt
fsubs
cmc
roll
adc
xchg
cmp
and
jg
inc
mov
js
pop
daa
mov
jbe
fdivs
mov
mov
xchg
mov
lahf
mov
sbb
dec
jg
popf
xchg
mov
jne
fistpl
mov
test
dec
xor
mov
scas
push
cmpsb
mov
mov
pop
inc
sub
cmp
mov
mov
cmpsl
std
add
and
addb
movsl
lods
subl
ds
lcall
stos
std
lock
lock
xchg
fwait
gs
xor
movsb
arpl
sub
push
xor
push
jle
add
out
orb
mov
mov
into
outsb
ja
fimuls
out
out
insl
movsb
or
ja
sahf
mov
dec
or
es
sbb
or
dec
cmpsl
or
dec
jle
mov
enter
inc
imul
mov
sbb
mov
mov
mov
outsl
mov
or
mov
cmp
inc
push
fs
and
in
lods
mov
out
dec
lds
mov
imul
adc
jae
pop
out
jl
ljmp
das
or
bound
out
dec
inc
sti
sub
xor
and
fsts
or
imul
pop
lock
repnz
mov
imul
pop
aaa
imul
pop
pop
rcll
sub
push
adc
aam
std
sub
sti
pop
popa
push
or
pop
cmp
push
outsl
jae
adc
pop
inc
inc
pop
push
roll
and
jle
pop
pusha
push
imul
mov
sub
and
push
jo
pop
cmp
hlt
pop
adc
fdivp
subb
ja
jge
lods
mov
adc
pop
enter
or
jne
lock
aas
cmp
push
lcall
jbe
push
adc
pop
push
nop
test
scas
jecxz
xchg
cmpsl
popa
test
or
lods
bound
jo
mov
sbb
pop
nop
mov
jns
add
rcrl
adc
mov
sub
mov
pop
mov
add
adc
jg
adc
in
or
jo
adc
cmp
clc
lcall
imul
andl
int3
or
ret
mov
mov
cltd
mov
sbb
outsb
enter
sub
rcr
das
fisubl
mov
hlt
sahf
pop
cmp
es
mov
sti
dec
push
mov
in
mov
scas
mov
in
in
iret
mov
out
in
andl
cmpsb
push
cmc
cli
es
mov
mov
mov
movsl
push
cld
popf
jp
and
dec
adc
test
lret
mov
mov
mov
popf
mov
adc
cmpsl
ret
mov
aas
loopne
loop
mov
les
leave
aas
test
or
sub
jae
incl
mov
inc
scas
out
or
mov
xor
call
mov
push
sarl
rorb
mov
add
sahf
mov
push
lcall
adcb
mov
test
jb
mov
sub
test
mull
inc
jno
sahf
xchg
dec
ret
or
xor
icebp
dec
jge
mov
outsb
inc
loop
add
mov
test
mov
mov
or
mov
mov
sbb
push
out
jnp
jbe
push
jl
push
rolw
lret
into
test
mov
xor
push
mov
cmc
push
cltd
enter
and
sahf
leave
es
imul
daa
in
lea
mull
in
sub
ja
adc
jne
mov
or
nop
imul
call
adc
stos
xchg
mov
inc
rcl
mov
sbb
into
pop
mov
sub
call
push
nop
enter
mov
nop
sahf
inc
mov
sub
mov
mov
imul
or
subb
pop
jo
ficompl
push
pusha
xlat
mov
pop
shrb
in
adc
aaa
add
or
push
and
es
xchg
les
jl
dec
adc
adc
fldl2e
cmp
dec
push
mov
movsb
xchg
subl
loope
xchg
mov
mov
aaa
mov
xchg
xchg
and
xchg
inc
mov
cli
es
in
mov
loope
and
punpcklwd
test
inc
enter
data16
inc
sub
addl
in
test
out
jae
test
mov
cwtl
adc
in
sub
ret
lods
jno
jl
adc
adcl
jb
lret
pop
loopne
call
cmp
loope
push
mov
inc
and
in
je
xchg
mov
mov
push
sub
lahf
mov
ljmp
nop
pop
inc
outsl
enter
xchg
inc
lods
subl
xchg
adc
inc
call
add
cmc
jmp
gs
stc
pushf
add
into
mov
hlt
jge
add
nop
stos
add
xchg
lret
test
mov
adc
pop
ret
hlt
std
leave
fwait
cmpsl
lret
xchg
pop
xlat
lcall
pop
data16
mov
lret
pop
sub
mov
cwtl
mov
pop
and
push
imul
fisttpll
pushf
and
and
xchg
lods
dec
repz
xorl
mov
inc
mov
adc
hlt
mov
mov
mov
test
sub
shlb
or
xchg
cli
shl
pmuludq
and
int
or
out
inc
adc
add
or
iret
push
icebp
ficoml
xchg
add
pop
xchg
mov
hlt
sub
pop
jne
incl
loope
jno
xor
dec
mov
mov
mov
pop
mov
or
xchg
fsubl
fidivrs
cmp
lods
sub
or
rcrb
dec
stos
mov
jle
rcrb
popf
jge
mov
in
jp
rcrl
lret
push
ror
fldl2t
sub
loope
or
and
lret
rcll
mov
mov
ficoms
push
pushf
jns
aaa
dec
mov
xor
rcrb
mov
aam
shlb
push
andl
sub
add
pop
add
xchg
fimuls
addr16
push
pop
mov
test
out
mov
jp
sbb
nop
mov
imul
mov
and
cmpsl
dec
aad
int3
mov
mov
push
es
movsb
push
aam
lock
push
scas
jne
adc
push
cmpsl
fsts
fimull
dec
xor
dec
hlt
push
popa
roll
imulb
mov
test
inc
sysret
rolb
push
popa
or
pusha
lcall
inc
dec
jp
or
mov
or
xor
test
add
sub
mov
lock
shrl
mov
leave
add
lea
push
ret
enter
adc
mov
test
jp
or
dec
std
push
mov
adc
out
cmp
loope
fistpll
inc
jecxz
popf
pusha
mov
inc
mov
cmpsl
cmp
movsb
or
add
fsubl
sbb
out
jmp
into
stos
hlt
lcall
mov
mov
stos
icebp
addl
mov
nop
add
or
mov
push
add
sub
int
xchg
insb
inc
pop
cli
inc
mov
sbb
aaa
push
jne
lcall
mov
xchg
dec
shll
incb
cmp
or
sub
cmp
sub
mov
jbe
in
scas
inc
in
add
inc
in
into
ss
invd
dec
mov
xchg
mov
in
enter
sti
pushf
stc
or
notb
mov
mov
sub
or
mov
out
cmp
inc
xchg
cmc
push
jge
stos
mov
ja
push
cmp
stos
mov
test
subl
fstl
jle
popa
mov
or
pop
ljmp
pop
mov
sbb
sahf
cmp
xor
mov
loope
adc
inc
push
mov
data16
mov
xorl
hlt
pop
cmp
xchg
cltd
outsl
add
sbb
pop
mov
mov
xchg
inc
ljmp
stos
pop
gs
sub
dec
push
mov
mov
mov
mov
rorb
mov
cld
or
sbb
fdivs
jp
jno
test
test
add
repnz
push
ljmp
or
sbb
fdivs
sub
inc
stos
mov
clc
out
ljmp
inc
loop
adc
sti
pop
stos
mov
mov
loop
or
xor
mov
movsl
call
sbb
scas
addr16
or
push
push
inc
mov
and
xor
pop
std
mov
add
xorl
add
cld
lods
aam
aad
cld
div
lods
fidivs
insb
cmpsl
das
mov
movsl
sub
adc
jmp
adc
daa
shlb
sbb
sub
inc
int
ss
cltd
hlt
rolb
xor
xchg
push
pop
repnz
movsb
xchg
scas
dec
adc
out
scas
xchg
mov
movsb
mov
or
and
adc
mov
cmp
add
fsubrs
jns
orl
lret
pushf
dec
clc
and
loop
sbb
push
mov
mov
loopne
ret
mov
lret
cli
add
mov
or
push
pop
ljmp
xchg
nop
shr
or
mov
mov
jbe
push
iret
rcll
mov
cmpsb
mov
pop
cmpsb
std
or
clc
push
fistpll
jmp
jmp
push
pushf
fimuls
lcall
push
xchg
rolb
inc
nop
mov
movb
call
add
ja
insl
push
mov
xchg
xlat
jnp
or
fstl
das
sub
xchg
sub
test
call
jl
rorl
jnp
inc
fs
movsb
jg
fmul
adc
xchg
lods
dec
mov
inc
rcll
clc
mov
mov
mov
lahf
shl
push
dec
adc
mov
pop
push
test
stos
testb
mov
jge
cmp
sbb
les
mov
in
lock
jns
in
and
inc
rcll
mov
nop
lea
cmp
jae
mov
and
call
ret
hlt
aam
xchg
xor
ret
pop
test
push
lret
hlt
mov
or
call
incb
mov
push
test
lock
mov
lds
xchg
push
daa
jne
std
and
leave
test
pop
mov
sbb
pushf
in
movsl
pop
sbb
jno
or
jns
add
ror
or
mov
jns
and
push
outsl
les
add
int3
fstl
movsl
jbe
ret
repnz
notb
dec
or
les
imulb
in
lds
pusha
ljmp
inc
dec
cld
xchg
sub
mov
mov
stc
and
sbb
mov
cmpsl
push
cmc
sbb
jmp
jl,pt
dec
add
sti
gs
scas
add
cmc
dec
add
icebp
nop
andb
cwtl
cld
mov
mov
imul
int
enter
cmp
push
or
test
push
into
orl
fimuls
jne
pop
outsl
mov
ljmp
enter
mov
xchg
pop
outsl
cmpsl
or
jo
das
or
adc
fidivs
loope
mov
dec
add
bound
and
push
add
jns
subl
dec
jno
into
mov
push
stc
fwait
lods
insb
jle
outsb
repnz
pop
inc
pop
mov
lahf
mov
mov
mov
mov
pop
clc
jno
imul
imul
push
ljmp
pop
in
mov
nop
mov
iret
jo
jbe
or
mov
lods
or
sub
ret
mov
or
mov
in
lret
idiv
xchg
mov
xchg
roll
test
adc
lods
pop
inc
rol
or
jp
lds
or
sub
scas
dec
xchg
jnp
inc
mov
adc
mov
loopne
sub
xchg
pop
call
mov
out
nop
cmp
rorb
lret
loopne
jno,pn
or
mov
or
insb
dec
in
inc
mulb
in
add
adc
mov
loopne
pop
jmp
enter
dec
mov
mov
test
mov
arpl
add
shrb
cmp
push
std
mov
stos
push
xchg
and
cmc
push
sbb
sub
xchg
pop
shrb
push
shrb
push
std
xchg
ret
ljmp
mov
fs
push
sub
or
hlt
sbbl
sbb
add
fisttpl
pusha
insl
pop
mov
mov
pop
inc
sub
test
in
push
cld
sub
rorb
nop
shrb
jmp
sub
mov
enter
repnz
mov
xor
pop
imul
mov
push
pop
sub
incl
push
mov
test
lock
xchg
adc
jmp
mov
orb
pop
mov
xchg
xchg
add
mov
bound
rcrl
mov
stos
hlt
cwtl
or
and
add
pusha
jns
push
mov
add
shll
push
xchg
lods
or
push
inc
cli
add
shl
es
loope
ds
cmp
test
lock
mov
pop
stos
movsl
aad
jns
je
mov
mov
sub
aas
icebp
aam
push
enter
inc
jo
add
xor
les
mov
aam
enter
fwait
jns
hlt
mov
or
pop
or
pop
jmp
call
ss
mov
movsb
cld
add
or
rorl
or
adc
mov
jno
aam
xchg
sub
and
push
aad
xor
xchg
jl
mov
sub
stc
jg
cmc
mov
scas
fs
xor
hlt
pushw
nop
test
lock
shl
mov
xchg
sub
xor
repnz
mov
inc
or
mov
adc
fsubl
add
adc
shll
sahf
mov
xchg
inc
mov
inc
scas
xchg
lcall
or
push
dec
loopne
iret
or
imul
add
cwtl
sub
xor
sub
in
loopne
mov
and
xor
aam
cwtl
jne
hlt
xchg
lods
mov
adc
dec
sbb
iret
enter
mov
and
push
les
mulb
inc
or
xlat
nop
sub
js
aam
push
push
scas
popf
cmp
push
push
pop
nop
enter
subb
ret
and
lea
sbbb
push
cwtl
shll
lret
test
daa
inc
xor
push
adcl
pop
mov
cli
jno
cwtl
mov
imul
or
mov
test
inc
mov
hlt
add
outsl
mov
sbb
sbb
nop
xor
xchg
test
xchg
mov
insl
out
push
aam
dec
pop
orl
scas
mov
dec
jae
lods
add
stc
lret
in
fldt
in
test
push
push
or
repnz
xchg
test
nop
jmp
pop
add
mov
fidivrs
or
adc
xchg
jne
and
sub
xor
sub
push
loopne
sbb
fisttpll
adc
mov
stc
pop
pop
rcrb
lret
loope
loopne
mov
xor
xor
lods
test
popa
pusha
je
lahf
movsl
std
mov
cltd
sub
loope
add
mov
add
movsl
hlt
andb
mov
pushf
lahf
sub
clc
jmp
xchg
scas
adc
clc
jecxz
push
loopne
cltd
mov
pop
iret
test
or
insb
add
into
lea
mov
hlt
int
mov
sub
test
je
cmpsb
sti
cmp
cli
lcall
push
icebp
imul
push
fiadds
jnp
lret
mov
mov
sar
cmc
add
test
mov
andb
lea
and
hlt
push
and
movntq
lret
jp
setno
inc
and
sahf
jecxz
lods
mov
ret
das
lods
lcall
cld
add
push
pop
or
or
jl
punpcklwd
imul
pushf
movsl
mov
or
add
jo
shl
jl
mov
lcall
loope
mov
pop
xor
ret
int3
inc
lret
xor
inc
sub
loope
inc
dec
cwtl
movsl
and
sbb
push
outsb
adc
mov
cmc
cmp
fstpl
enter
cmp
in
pop
pushf
inc
sub
cmpsl
xor
inc
sbb
decb
mov
and
test
dec
sbb
cli
and
mov
sbb
mov
jae
lods
jge
in
inc
dec
sub
adc
lods
cmp
fldcw
xchg
cmp
rolb
sbb
fldcw
sti
mov
or
jne
jecxz
fmuls
push
dec
clc
pop
add
xchg
repnz
or
in
sbb
scas
jb
mov
fnstcw
fucomi
dec
mov
mov
hlt
jge
test
sub
bound
lock
leave
shlb
xor
mov
out
enter
loope
cmpsl
imul
std
test
pop
int3
scas
and
fsubrs
add
pusha
insl
mov
insb
inc
or
push
insl
lock
push
cmp
cmp
out
pop
sub
shl
cmpsb
mov
shrb
sub
inc
or
imul
sbb
sarb
inc
insl
rolb
push
xchg
adc
inc
movsb
fistl
test
das
aam
scas
lods
fidivs
repnz
pop
cs
icebp
mov
mov
cmp
jne
jmp
ja
mov
mov
jmp
and
mov
hlt
fiadds
sahf
add
aaa
push
add
jne
and
nop
dec
shl
jg
cld
pop
dec
push
jo
sub
mov
inc
std
xchg
test
or
repnz
add
sbb
int3
fadd
cmp
mov
mov
xchg
mov
bound
call
outsl
enter
test
pop
push
fsubrl
mov
pop
adc
stos
mov
imul
adc
push
mov
mov
mov
clc
or
xchg
and
scas
inc
insl
into
push
xlat
or
pop
inc
mov
in
mov
clc
test
into
or
mov
mov
mov
inc
nop
or
loopne
mov
push
fs
icebp
inc
stos
cmp
adc
subl
gs
adc
add
pop
jmp
loope
xchg
cmp
popa
nop
pop
push
mov
xchg
lods
test
push
adc
sub
xchg
fisubl
in
outsl
enter
test
xchg
xor
loop
mov
mov
sub
adc
and
adc
jp,pt
arpl
cld
push
cmp
jmp
pop
and
add
sahf
mov
mov
mov
jns
aas
push
push
push
mov
or
mov
repz
adc
push
iret
push
xchg
inc
test
call
jae
ss
pop
ljmp
out
xchg
and
sub
loope
orl
mov
aas
repnz
lcall
pushf
int3
cld
adc
add
mov
sub
mov
lahf
sbb
cmp
imul
and
pop
dec
xchg
filds
fs
push
jecxz
dec
stc
pop
pop
cld
and
xor
sbb
fnsave
lahf
stc
push
notb
xlat
sub
notl
mov
movsl
ljmp
dec
xchg
push
jbe
mov
inc
data16
mov
repnz
lahf
pop
lds
mov
fiadds
iret
push
dec
in
fs
out
add
jge
stos
pop
std
dec
es
roll
jg
mov
sub
js
dec
xchg
inc
mov
nop
pushf
jne
mov
jne
cmpsl
add
cli
dec
inc
xchg
mov
pop
sub
scas
mov
mov
push
lods
or
pop
push
or
fisttps
jmp
dec
das
cmp
cltd
mov
inc
wrmsr
mov
arpl
aaa
mov
adc
push
in
repnz
sub
push
inc
pop
icebp
mov
ljmp
push
pushf
mov
loope
sahf
dec
jns
sarb
push
mov
dec
and
push
sti
or
xchg
adc
sub
call
hlt
hlt
mov
or
icebp
aam
in
cmp
jbe
push
cmc
aas
sub
mov
fwait
or
clc
ds
clc
es
mov
clc
jae
inc
out
adc
mov
pushf
jae
and
sahf
rcll
mov
incb
jne
pushl
adc
mov
lcall
iret
mulb
fistl
adc
idivb
mov
in
imul
rorb
lahf
pop
lock
xorb
dec
outsb
jg
clc
das
loopne
push
scas
orl
or
xchg
outsb
dec
dec
dec
int
fisubrs
cmpsl
icebp
jmp
sahf
enter
call
inc
clc
and
lret
cmpb
cmpsl
fcmovnu
fsin
xchg
mov
mov
add
mov
push
movb
xchg
shrb
sub
in
xor
lcall
in
pop
sub
pop
dec
cwtl
xlat
or
inc
loop
cs
sbb
sub
mov
mov
jbe
mov
sahf
stos
pushf
ret
faddl
lock
into
mov
sub
fnstcw
pop
and
std
loop
and
sub
sarl
inc
cmpsb
cmp
popa
adc
jbe
movsb
and
jecxz
jb
pop
or
popw
inc
bound
adc
mov
enter
in
and
jnp
mov
adc
fadds
lock
dec
stos
mov
lcall
pxor
mov
jle
pop
ret
mov
mov
lock
hlt
mov
dec
stos
xchg
and
pop
cli
jg
rclb
xor
mov
sub
repnz
xchg
mov
push
cmp
xchg
or
push
adc
fimuls
mov
xor
sahf
mov
stc
in
and
cs
mov
out
outsl
inc
lret
xor
test
mov
pop
mov
inc
aam
and
ret
or
push
ja
stos
mov
push
or
and
loopne
lea
dec
out
mov
and
sub
js
in
dec
stos
sarb
shl
cs
xchg
or
cwtl
inc
imul
jmp
pop
dec
std
imul
orl
xchg
fwait
mov
add
pop
xchg
cmp
push
shl
push
sub
mov
cwtl
xchg
cmp
push
rcrb
mov
xchg
lcall
adc
pop
std
ret
or
nop
inc
mov
jb
jo
loope
test
adc
or
and
jb
pop
adc
sub
xchg
ja
in
push
int3
sub
scas
adc
xchg
mov
clc
movsb
dec
sub
cmpsl
push
jbe
aad
and
mov
shl
sub
out
jno
push
std
fld
mov
sarb
stos
inc
mov
dec
cld
xchg
xchg
xor
jle
loop
adc
or
loop
mov
xorl
cmp
stos
jns
outsb
mov
lock
fiaddl
cmp
popa
mov
mov
jmp
in
mov
mov
pop
call
arpl
lods
les
inc
lods
test
inc
faddl
cmp
mov
out
xchg
test
adc
stos
subl
lods
jle
nop
and
in
ljmp
lods
or
pop
pop
push
and
scas
in
jmp
and
or
jbe
lods
outsb
and
adc
popl
xor
or
xor
xor
cs
sub
iret
out
inc
fs
nop
sbb
ficompl
cwtl
psrlq
sti
mov
push
cmp
xchg
ret
aam
inc
sub
xchg
mov
jo
ret
into
mov
scas
fstl
mov
inc
sub
test
and
in
and
cmp
std
jb
shll
mov
in
aas
mov
adc
or
in
int3
fisttpl
pop
orb
mov
pusha
pop
loop
and
sub
shl
lock
jae
movl
adc
in
cmp
fsubrp
orb
xor
negb
add
call
xor
lret
cld
mov
test
sbb
subl
xchg
mov
inc
sub
addr16
or
mov
popa
cmp
cmp
repnz
or
cmp
ds
imul
mov
insb
sub
aad
inc
sub
mov
sub
mov
xor
bound
push
icebp
sub
cmpsl
dec
cld
nop
or
jne
push
dec
cmpsl
cmc
or
test
mov
sub
inc
mov
ljmp
or
cltd
sti
subb
and
jae
mov
and
mov
inc
sub
aaa
pop
or
nop
mov
jecxz
mov
sbb
cmp
test
std
in
and
lods
add
pop
adc
nop
and
sti
es
in
add
fisubs
pop
call
add
cli
dec
addl
outsb
notl
lock
test
add
mov
sub
sub
outsb
inc
push
andb
daa
out
xchg
cli
pop
adc
pop
jg
mov
and
adc
inc
nop
adc
stos
fwait
jmp
adc
jbe
ljmp
sub
cltd
pop
cmp
add
test
push
out
dec
rclb
inc
add
mov
sbbb
ljmp
rcrb
hlt
mov
lock
push
ja
cmp
adc
pop
inc
jnp
lods
and
mov
jno
mov
inc
mov
and
aaa
scas
mov
stos
adc
in
dec
and
jne
xor
adc
mov
push
int
movq
mov
xor
jns
andl
xchg
mov
ds
xchg
pusha
push
add
stos
xchg
lret
lcall
mov
and
dec
cwtl
or
popl
hlt
sub
ret
xlat
adc
test
or
loopne
jnp
hlt
pop
xchg
or
faddp
loope
and
call
push
dec
js
popa
dec
sbb
or
jb
pop
loop
and
insb
cli
jle
or
jb
fsubr
adc
push
nop
addl
out
jg
test
lahf
mov
pop
inc
loopne
adc
subb
dec
jns
sub
mov
push
gs
xor
adc
jp
push
lds
mov
cld
daa
sub
pop
cltd
dec
loopne
cli
addr16
movsb
out
add
pushf
enter
pop
into
push
shrb
hlt
lea
adc
jne
cmp
xchg
push
enter
pop
cmpsb
aam
pushl
add
movsl
les
pop
cltd
ret
pop
mov
adc
jmp
adc
fbld
pop
aas
out
test
adc
mov
jp
cwtl
hlt
pop
push
rcll
lds
lock
mov
ficompl
lds
push
mov
xchg
adc
mov
and
mov
push
ljmp
adc
pop
xchg
aam
sarb
dec
test
sbb
xchg
push
and
jecxz
ds
icebp
cmp
push
cmp
enter
mov
das
sub
cmpsl
cmc
mov
jb
adc
lea
testb
cli
mov
xchg
cld
add
sti
sarb
pop
scas
ret
ljmp
cld
pop
mov
mov
mov
dec
pslld
xchg
push
and
inc
mov
movsl
mov
out
loop
xchg
roll
sbbb
mov
popa
fdiv
test
stos
add
sub
jno
add
mov
mov
xchg
hlt
call
xor
add
pop
jb
add
mov
jmp
dec
or
push
test
dec
test
in
jb
test
fsubrp
and
imul
xchg
hlt
jg
in
outsl
and
imul
dec
test
adc
fwait
xchg
or
mov
test
hlt
pushf
jge
rol
call
hlt
cmp
ljmp
mov
jne
xor
sub
adc
mov
pushf
scas
andb
pop
cld
mov
adc
test
mov
adc
ret
popa
mov
cltd
adcl
pop
pushf
mov
movsb
lea
xchg
or
shrl
xchg
sub
arpl
jo
icebp
pop
mov
cmp
imul
pop
or
inc
add
mov
jmp
mov
xor
aas
add
mov
xor
mov
mov
hlt
or
rcll
mov
and
idiv
ret
xchg
imul
test
out
mov
mov
mov
arpl
test
sub
gs
fiadds
pop
mov
dec
nop
pop
jne
push
push
inc
ret
popf
movsl
jle
jae
inc
xlat
movsl
sub
lock
in
adc
call
add
sub
mov
insb
adc
call
stos
out
sub
adc
iret
jmp
xlat
pop
jl
loop
sti
cmp
mov
movsl
pop
std
jmp
xchg
pop
mov
push
idiv
mov
stc
xor
mov
lods
sub
loope
scas
xchg
or
shrb
mov
mov
rcrl
mov
xor
cwtl
pusha
test
inc
dec
mov
mov
aam
and
cs
pop
mov
cwtl
fsubl
rcrb
daa
les
sub
aam
pop
das
leave
insl
mov
std
fistpl
xor
cmc
jle
xchg
pop
lea
and
add
jbe
add
sbb
in
jmp
inc
cwtl
popf
stos
test
adc
pop
push
jmp
in
sub
in
int
mov
shrb
daa
lock
shrl
xchg
aas
fcomip
in
js
cmc
cltd
orb
add
inc
cmp
jg
repnz
movsl
cmp
push
roll
jmp
repnz
jge
imul
aad
das
mov
push
jmp
xchg
jle
out
inc
xchg
add
int3
jbe
popa
push
mov
pop
stos
jp
shl
clc
xchg
adc
pop
mov
push
add
pop
mov
xchg
cmp
hlt
mov
adc
fsubrs
jns
mov
mov
mov
loope
repnz
pop
and
rolb
push
mov
movb
icebp
out
jp
lahf
mov
adc
popf
and
in
outsl
enter
add
out
aad
test
sub
push
stos
mov
dec
inc
or
sub
and
loopne
jl
inc
lock
out
pop
pop
popa
sbb
push
imul
add
inc
mov
lock
pop
sti
mov
std
addl
data16
out
pop
dec
call
stc
and
xor
fidivs
adc
or
xor
inc
lock
mov
inc
aas
call
shrl
dec
out
pop
into
xchg
dec
mov
adc
adc
shl
sub
sarb
es
pusha
mov
stos
cld
add
add
inc
mov
or
cmp
jle
je
shlb
jmp
ljmp
popa
movl
fldenv
popf
jne
jmp
xchg
and
mov
fs
mov
or
push
mov
dec
push
push
das
enter
add
into
int
adc
fisubs
nop
pop
cmpsb
in
mov
or
fcompl
dec
mov
mov
mov
or
dec
lds
dec
hlt
cli
lds
lcall
jne
sbbb
mov
mov
out
pop
leave
push
xlat
mov
stos
in
push
mov
adc
jg
or
or
mov
test
xchg
fdecstp
push
fs
cmpsb
insb
lea
cwtl
mov
aam
xchg
fstpt
popf
jne
jmp
shll
iret
vandps
sub
and
hlt
jb
or
push
cmp
push
add
fidivrl
out
ret
int
dec
sbb
hlt
xacquire
add
mov
jecxz
xor
mov
iret
jmp
xlat
outsl
jae
jo
mov
inc
jne
out
lret
js
cld
and
inc
hlt
ljmp
das
dec
sbb
cld
cmpsl
aad
push
or
jne
mov
out
lea
mov
and
inc
jle
add
outsb
xchg
les
mov
dec
pop
xchg
mov
push
sub
xchg
sub
xor
mov
lock
inc
inc
dec
stos
pop
adc
cmp
cmpps
or
add
mov
inc
insl
faddl
aad
divb
adc
or
movsb
jge
aad
movq
mov
lock
arpl
lahf
out
insl
mov
cld
jb
cmpsl
cmp
mov
or
hlt
into
inc
sbb
pop
dec
jg
fdivs
sti
fdivr
rorl
in
lock
xorl
test
test
sti
push
shlb
xchg
js
fcomps
jmp
ja
cmpsl
mov
pop
es
ss
pushf
hlt
xchg
pushf
add
jo
push
ss
jbe
es
mov
stos
adc
or
js
cld
in
jno
add
mov
push
fadds
aam
or
sub
lret
mov
xchg
iret
leave
push
mov
test
lea
leave
xchg
outsl
ljmp
push
nop
and
xor
mov
std
push
out
sbb
sar
inc
xor
mov
mov
sbb
pop
mov
hlt
nop
and
adcb
xchg
inc
mov
jmp
pop
dec
popf
shl
stos
and
add
jecxz
mov
cmp
or
jl
mov
popa
leave
push
sbbl
test
addr16
ret
sbb
scas
ss
xchg
adc
cmp
mov
jle
pop
push
pop
cmp
push
loop
xchg
mov
ljmp
jo
add
shll
push
pop
mov
sub
repnz
data16
mov
dec
aas
push
mov
dec
bnd
popf
add
fstpt
jmp
push
fcmovnu
pop
cmp
idiv
ds
stos
pusha
adc
aas
xor
pop
mov
lcall
hlt
adc
xor
les
mov
loope
pop
xchg
fldcw
add
cwtl
push
bound
and
lock
inc
mov
mov
popa
outsb
loope
lds
out
mov
mov
fcom
mov
or
mov
push
cmp
mov
int3
shrb
cmp
dec
push
cltd
xchg
pop
loope
add
and
lods
rcrl
mov
mov
jge
pop
and
mov
or
fsubrs
dec
mov
outsl
enter
cmpsl
bound
mov
sahf
xor
push
lock
mov
inc
insl
loopne
aad
mov
jno
mov
xchg
jo
xchg
jne
call
into
mov
loopne
adc
sbb
push
sub
loopne
hlt
adc
sahf
lods
ret
sti
cmp
mov
cmp
imul
sub
ror
dec
and
xchg
cli
mov
mov
fiadds
pop
repnz
test
jnp
cwtl
mull
xchg
jle
pop
mov
orb
xchg
cmp
adc
enter
pop
cmp
mov
sub
cmovs
adc
hlt
fistpll
push
inc
lret
lds
pop
pop
sbbb
mov
sbb
clc
das
es
pushf
jmp
arpl
test
aam
pop
mov
ret
sub
fidivs
mov
add
data16
ret
sub
lret
stc
pushf
inc
or
sub
movsl
push
testb
jmp
stos
dec
nop
lahf
test
lahf
ds
lds
mov
loop
dec
out
mov
sbb
lcall
gs
test
add
sbb
cmc
mov
mov
icebp
hlt
mov
les
push
fidivrs
mov
xchg
js
and
jp
sub
mov
out
sbb
sub
je
or
dec
pop
sahf
xor
fstl
sti
popf
mov
cmp
rorl
sub
mov
enter
inc
loop
sub
mov
loop
xorb
dec
dec
xchg
push
loop
cmp
xchg
imull
aad
test
xor
jbe
cmpsb
adc
orb
movsb
inc
xor
js
and
xchg
loopne
clc
sti
mov
and
cmp
add
adc
pop
imul
pusha
dec
sub
inc
repnz
jnp
ja
mov
xor
mov
es
sbb
xor
push
sub
and
lds
and
imul
das
out
inc
neg
je
mov
sbb
mov
insb
xlat
je
sbb
add
and
stos
and
aam
xchg
cmp
xchg
push
xlat
std
incb
leave
icebp
mov
lods
add
mov
pusha
in
add
notb
lahf
xchg
lahf
es
mov
jg
pushf
fld1
ja
sub
stos
cmc
mov
in
out
nop
imul
outsl
pop
adc
stos
mov
imul
adc
dec
mov
fcmovbe
push
push
sub
imull
arpl
neg
movsb
div
inc
hlt
test
lods
movsl
les
inc
push
pop
cmp
fiadds
xchg
cld
idivb
lock
dec
roll
int
sub
adc
lods
jne
sahf
popa
mov
pushf
ret
jg
mov
pop
sub
sbb
adcb
mov
mov
pop
mov
mov
sub
adc
mov
mul
mov
jge
cmc
xorb
stos
bound
ret
nop
lea
push
cwtl
jo
pushf
out
lods
mov
lock
sub
pop
mov
inc
adc
or
imul
je
loop
xchg
push
sub
pop
xor
clc
mov
xor
or
dec
sbbb
and
jmp
mov
push
out
lods
mov
pminub
lock
addr16
adc
adc
add
testb
mov
or
inc
mov
sahf
pop
mov
je
or
push
fnstcw
sbb
mov
fsubr
lods
mov
sbb
adc
xchg
cmp
add
and
enter
lea
aas
adc
add
lea
sahf
mov
push
dec
mov
dec
lret
andb
lock
mov
sub
sub
push
data16
cmp
push
int3
test
mov
les
sbb
push
cmp
jl
add
mov
enter
mov
arpl
shrb
lea
movsb
sbbb
mov
aam
fs
push
ret
mov
cld
call
and
shlb
push
pop
subl
lret
sbb
stos
mov
scas
xchg
call
adc
cld
insb
dec
in
aad
test
mov
push
mov
bound
mov
addr16
hlt
shrl
mov
or
les
lcall
adc
jmp
aas
scas
loopne
mov
xorb
in
enter
jp
and
test
and
mov
xor
inc
loop
js
popf
pop
mov
sub
mov
pop
in
sub
fdivl
xchg
inc
faddl
leave
pushf
cmp
jb
repnz
fdecstp
fsubrl
movsb
loopne
mov
fidivrs
into
dec
jge
inc
inc
add
lahf
ficomps
loopne
push
mov
pop
mov
sbb
fistpll
arpl
scas
in
lods
mov
lods
jb
xchg
es
pop
les
imul
jbe
and
sahf
mov
mov
lea
or
or
mov
jmp
push
rclb
or
cmpsb
sub
test
xchg
into
popa
cmpsb
or
cmp
sbb
movsb
sub
xorb
mov
or
cmpsb
mov
addr16
movsl
lea
shlb
push
push
add
test
mov
push
cmpxchg
mov
mov
xchg
mov
aam
pushf
pop
adc
icebp
daa
push
sahf
cmc
mov
pop
adc
ljmp
xchg
pushf
stos
or
sahf
sbb
mov
mov
movsb
inc
sub
xchg
jne
or
cmp
push
test
test
sub
cwtl
pop
lods
push
xchg
std
inc
mov
jb
cld
or
sbb
mov
mov
loop
add
std
adc
mov
xchg
sub
in
inc
dec
lret
cwtl
mov
cltd
cld
in
push
in
or
test
stos
lds
cmpsb
xchg
and
inc
xorl
loopne
xchg
mov
inc
sarl
outsb
movsl
stos
push
adc
sti
testl
fsubs
loop
aad
add
jae
bound
out
xchg
loop
sub
out
jo
call
xor
mov
mov
andl
adc
and
push
leave
fcoml
or
or
leave
ror
or
ret
scas
mov
adc
lods
shl
pop
sar
push
inc
loope
xor
mov
mov
lea
push
and
daa
loopne
fistpll
adc
mov
xor
les
gs
sbb
fildll
xorb
fstl
sub
ljmp
mov
ret
inc
mov
in
sbb
hlt
sbb
xchg
mov
fisubrl
gs
in
xchg
add
lahf
jbe
insb
aaa
loope
or
repnz
in
sbb
push
cli
ja
jno
int3
cmpsb
leave
and
jmp
adc
mov
xchg
jg
scas
inc
fcomps
loopne
xchg
add
es
dec
mov
enter
mov
aam
call
shlb
bts
popf
push
cwtl
push
popa
and
mov
call
scas
mov
and
xchg
mov
xchg
adc
ja
jnp
cmp
call
hlt
imul
cmp
in
inc
les
loop
or
pop
pushf
jns
adc
inc
les
ret
loope
push
cmpsl
inc
icebp
or
loope
xchg
loopne
hlt
psraw
jne
jns
loope
adc
inc
pushl
mov
test
sub
push
sarb
lea
orl
hlt
das
lods
repz
int3
jo
dec
dec
adcb
cmp
in
stos
ret
mov
test
mov
movb
fnstcw
cmp
xchg
fcoms
mov
dec
push
inc
mov
cmp
or
orl
push
sub
or
or
mov
leave
xor
pop
and
imul
lret
lret
mov
je
push
add
rcr
insl
jne
aaa
add
push
shl
adc
ljmp
adc
lret
aas
lret
inc
mov
xchg
adc
hlt
or
add
mov
xchg
sbb
pop
mov
mov
mov
xchg
pop
js
nop
jae
lds
enter
dec
jge
mov
mov
xchg
stos
cmp
cmp
mov
ror
cmp
les
add
bnd
push
hlt
out
mov
inc
or
fldenv
xor
push
test
andb
mov
adc
fisttps
stos
hlt
pop
sub
xor
hlt
lods
inc
jmp
mov
popf
stc
or
jae
in
sbb
xchg
push
jno
rcl
adc
xchg
pop
orl
and
jg
push
inc
jmp
mov
cmpsl
push
inc
sub
push
cld
inc
pushf
mov
adc
icebp
ljmp
scas
push
rcrb
lock
shrb
mov
push
stc
test
cld
mov
sbb
xor
add
movsb
mov
rclb
int3
stos
mov
add
cmp
icebp
jno
sbb
mov
xchg
shl
aam
mov
hlt
outsb
mov
dec
add
mov
jns
mov
add
pop
or
hlt
insl
mov
mov
fcompl
cmp
mov
in
push
jo
imul
sbb
adc
add
in
sub
mov
mov
sub
in
inc
add
hlt
xchg
adc
roll
push
or
add
mov
ror
mov
xchg
mov
lods
or
jl
call
call
lret
test
jae
addr16
sbb
cmpsl
xchg
mov
rclb
stc
add
jp
add
call
mov
mov
maxps
test
ret
push
cld
lods
dec
sbb
or
xchg
int
bound
mov
mov
and
and
loop
inc
pop
pop
inc
pop
or
or
dec
adc
push
xor
xchg
lea
stc
and
call
cs
test
minps
cmp
add
lahf
loop
lea
cmpsl
aaa
hlt
adc
aas
les
jmp
lock
mov
or
popa
mov
cmc
in
pushf
mov
das
mov
mov
xchg
adc
test
inc
fsubl
push
rcll
push
pop
stos
mov
push
mov
hlt
and
xchg
roll
cmp
call
and
mov
roll
les
push
cmp
jle
pop
jo
xchg
dec
jg
jae
xchg
inc
negb
dec
sub
push
std
xchg
jns
mov
hlt
cwtl
sub
shll
lcall
in
or
jg
mov
pop
int3
mov
nop
fldl
int3
mov
ret
jbe
pop
in
lock
pop
fsubp
mov
push
test
andb
cmp
fildl
rorb
pop
insb
cmc
pop
sbb
cld
rcrb
jbe
rclb
scas
lcall
cmp
daa
ljmp
cld
sub
pmulhuw
shlb
xor
ja
loopne
dec
cmp
mov
imul
xchg
pop
mov
or
mov
sub
and
lcall
lret
adc
cmpl
mov
xchg
test
call
popa
dec
outsl
mov
in
xchg
xorl
test
lahf
loopne
cmc
enter
data16
call
inc
add
jl
xchg
lds
insl
pushf
stc
xchg
repnz
pop
in
les
mov
ret
mov
lock
and
jmp
push
push
cmp
adc
mov
vrcpps
and
inc
pop
or
push
test
dec
jbe
add
test
mov
sti
leave
lds
jo
aam
xor
fisttpl
inc
ret
icebp
inc
jae
sbbb
cmc
nop
lcall
or
adc
push
pushf
stc
add
lea
pusha
pop
sbb
inc
xchg
mov
test
push
inc
dec
sbb
or
cmp
push
cmp
add
stos
dec
mov
cmp
inc
pop
adcb
test
faddp
or
fsubs
cwtl
adc
nop
mov
pop
xchg
jp
out
pop
icebp
pop
mov
int
add
sbb
mov
lds
hlt
ret
push
scas
fisubs
dec
mov
adc
lcall
outsb
inc
jae
xchg
cmp
bswap
cmp
adc
sub
pop
scas
lret
adc
pop
mov
dec
adc
cmc
sbb
test
adc
loopne
mov
rcrl
mov
jne
lea
xchg
or
mov
ss
mov
xchg
loopne
imul
inc
rolb
mov
out
sbb
aad
mov
dec
je
out
add
test
and
xchg
mov
fcomps
xchg
cmp
test
int3
pushf
jp
stos
in
lods
ret
rcrb
xchg
xchg
shlb
aam
les
mov
mov
adc
fadds
xchg
movsl
sub
xor
push
ret
loop
je
icebp
cmp
nop
imul
enter
enter
sahf
jg
pop
mov
sub
loop
nop
sahf
pop
cltd
aas
push
xchg
in
scas
ja
roll
imulb
dec
xchg
dec
lock
mov
test
daa
xchg
dec
lret
mov
cltd
jns
aaa
shll
add
test
add
popa
pop
stos
xchg
cld
enter
movsl
inc
aas
scas
xor
xchg
jns
andb
mov
test
dec
inc
cmp
ret
mov
xchg
push
lds
sub
dec
sub
lret
inc
add
in
push
lds
mov
dec
dec
cmpsl
pusha
into
test
mov
xchg
stc
push
movsl
push
lret
pop
fists
mov
rcrb
lock
ret
mov
out
jmp
lds
dec
imul
lock
movb
mov
jbe
leave
sub
mov
mov
test
mov
jnp
inc
test
fmull
hlt
outsl
pushf
cmp
mov
add
movsb
fdiv
jmp
xchg
fldpi
and
mov
popf
adc
sub
cmp
jno
mov
mov
push
xchg
mov
mov
pop
rcrb
scas
hlt
mov
jg
xor
js
ret
sbb
or
arpl
mov
mov
cmp
das
into
scas
and
data16
dec
cmp
or
dec
popa
rclb
lea
cmp
xchg
mov
mov
dec
add
leave
fbld
nop
hlt
fistl
outsb
mov
xchg
adc
std
lcall
xchg
and
adc
andb
mov
add
pop
fimuls
jmp
or
cmc
adc
add
sub
jno
mov
nop
inc
test
inc
call
out
pop
xchg
dec
fisubrs
cmpsb
cmpsb
or
pop
ja
imul
mov
jmp
xor
scas
sti
pop
xchg
pop
pop
fcomp
mov
add
sub
mov
pop
push
arpl
pop
test
or
mov
lds
dec
mov
mov
push
sbb
hlt
hlt
jle
out
cmpsb
xchg
xchg
xorl
xchg
mov
pusha
andb
or
mov
or
test
jne
iret
roll
jmp
cmpsb
mov
cmp
mov
jmp
pop
inc
sub
sysenter
mov
fwait
ror
int3
push
call
push
fdivrl
bswap
jge
cltd
push
aad
test
hlt
xchg
pop
dec
sahf
add
lods
push
sub
je
test
push
movb
in
and
jb
subb
adc
push
adc
stos
rclb
add
dec
cmp
lret
mov
test
dec
push
pop
addb
addr16
and
enter
dec
push
lea
jb
in
xchg
out
in
mov
and
sub
movsl
cmp
push
push
jne
push
adc
ret
cltd
std
add
push
inc
push
or
mov
test
inc
mov
mov
sub
lret
fwait
out
adc
pop
mov
jns
push
adc
stos
sub
sarl
pushf
mov
adc
xchg
call
jbe
mov
fists
and
pushf
push
mov
mov
sbb
imul
add
xlat
push
imul
fmuls
dec
adc
xchg
sub
stos
movhps
loop
jp
scas
fmul
mov
xchg
sub
leave
sub
imul
and
xor
mov
pushf
dec
mov
je
mov
jns
ss
daa
ret
sarb
loop
push
xor
repnz
push
clc
or
xor
push
mov
fcompl
xchg
or
mov
orl
cli
ss
cld
roll
jno
jg
dec
loope
orl
pop
and
imul
loopne
jge
sub
cmpsl
cld
pop
fbld
adc
inc
xchg
xchg
notb
or
lods
out
jmp
shl
sub
hlt
pop
aaa
loopne
fwait
pop
push
dec
sub
lods
shr
arpl
sbb
dec
dec
add
test
stos
jno
aad
hlt
loop
addb
xor
add
aad
or
xchg
add
mov
mov
xlat
push
nop
fs
jns
arpl
jnp
inc
jae
lock
sub
jecxz
mov
es
xor
mov
add
js
mov
imul
ret
inc
adc
lret
xchg
nop
adc
daa
mov
icebp
enter
ds
lcall
daa
or
sub
xchg
int3
jp
movsb
test
cli
rorb
push
out
cmp
movb
repnz
dec
test
jl
jmp
andl
push
ss
mov
js
es
fwait
mov
mov
cmpsb
cmp
add
jp
jno
push
jle
mov
xor
aad
pop
mov
ds
out
ja
push
sbb
pop
les
sub
dec
paddsb
movsb
divl
imul
aad
sub
popf
mov
sub
test
pushf
cwtl
inc
mov
daa
enter
adc
in
mov
xchg
aas
enter
pusha
jp
xchg
into
mov
fisttpll
in
pop
lock
mov
int
push
insb
xor
cmp
ljmp
push
iret
es
ret
roll
dec
mov
inc
mov
movsb
test
dec
enter
jbe
repnz
add
hlt
imul
push
ljmp
movsl
cwtl
test
hlt
dec
sbb
push
lret
ficoml
icebp
movsb
enter
pusha
jl
xchg
lock
and
shrb
lret
cmovg
adc
sub
adc
ficomps
xchg
jmp
aam
rclb
add
imul
mov
inc
bound
mov
jne
pop
rorb
jp
sti
xchg
negb
outsb
out
mov
sbb
mov
shl
data16
cwtl
rorl
jle
std
loope
pop
pop
xchg
jg
sbb
mov
and
enter
stos
mov
mov
fstpl
loope
cmpsb
mov
lods
loop
mov
push
push
add
scas
xchg
mov
cwtl
mov
xchg
inc
pop
or
jno
or
iret
and
inc
js
negl
scas
aam
fimull
jb
lea
mov
jne
sub
cmpsb
mov
xchg
ret
hlt
xchg
mov
out
rcrb
ds
cmp
sti
mov
mov
bound
scas
cmpsl
loopne
inc
repnz
jb
icebp
mov
hlt
inc
ficoms
lret
loop
cwtl
mov
mov
into
lahf
mov
daa
in
shl
push
stos
test
cmpsl
loop
xchg
sub
add
inc
sbb
hlt
std
pop
and
push
xchg
pop
inc
loopne
and
jbe
test
mov
add
lea
add
daa
xchg
add
xchg
aam
mov
mov
sar
sbb
and
pop
pop
cwtl
popf
xchg
bound
int
cmp
arpl
test
addl
arpl
imul
add
enter
cmp
lret
imull
mov
hlt
out
jo
add
and
cld
add
mov
push
aam
lret
pop
test
jmp
push
and
arpl
push
mov
push
mov
popf
std
pop
cmp
mov
lret
fdiv
inc
sbb
es
scas
or
in
jnp
das
fs
fiaddl
movsb
lods
das
cmp
loop
stc
stc
xor
arpl
jg
jg
sar
or
ljmp
mov
dec
mov
xchg
add
mov
mov
rcll
push
repz
ss
lret
ss
sarl
roll
inc
dec
cmp
adcb
pop
sbb
out
adc
sub
inc
incb
lcall
in
inc
fiaddl
andl
push
mov
scas
mov
pusha
push
fstps
mov
in
push
xor
jge
ja
mov
mov
lock
mov
hlt
movsl
outsl
loope
stos
and
jge
movsb
mov
lahf
add
sub
int
push
xor
mov
std
loop
fwait
shlb
push
cli
in
sti
push
cltd
into
loopne
lods
push
jmp
inc
dec
push
mov
lods
hlt
enter
mov
ret
std
lea
sub
je
mov
dec
mov
add
jg
inc
rcr
push
mov
xchg
mov
and
mov
movsb
add
add
lret
out
aad
jmp
rcr
mov
mov
fsubs
ljmp
ret
aaa
test
js
aam
lcall
movsb
adc
lods
into
xchg
movsb
vphsubbw
or
or
mov
inc
lret
int3
and
out
jge
dec
aas
push
in
inc
sub
je
add
xor
xor
daa
sub
gs
inc
fxch
sub
xchg
test
jnp
adc
popa
mov
scas
lahf
fsubrl
jne
out
fsubrs
test
mov
inc
cld
cmp
cmp
push
ror
cs
push
push
into
cmp
test
cmc
mov
xchg
add
push
jno
rolb
rolb
leave
jle
or
mov
mov
loop
adcl
call
jns
mov
pop
scas
cli
xor
mov
hlt
and
push
popa
jmp
out
addl
mov
xchg
fdivl
mov
cmpsl
lahf
pop
cs
mov
daa
pop
mov
inc
pop
mov
es
ljmp
xor
stos
mov
inc
push
lods
xchg
adc
bound
pop
xchg
nop
ret
or
lods
fsub
or
mov
jns
ret
or
cbtw
xchg
adc
mov
mov
pop
push
inc
add
enter
sub
stos
push
bound
and
pushf
mov
and
inc
pop
xchg
imul
hlt
cmp
ret
ljmp
fcoml
cwtl
insb
hlt
mov
test
aaa
mov
fs
jnp
out
into
shll
and
xorl
mov
xchg
or
adc
in
or
xchg
or
dec
xchg
scas
fs
fsubrl
mov
stc
add
add
or
add
jle
or
sub
xor
mov
sub
pop
fstps
sub
xchg
aam
or
fimull
lahf
mov
fmuls
or
das
fdivrs
mov
gs
sbb
repz
outsb
sbb
push
dec
xor
inc
test
mov
dec
into
stos
or
stos
lods
movsl
jno
push
lcall
imul
lret
imul
push
xchg
xchg
loopne
mov
xchg
cs
jbe
or
xchg
xor
push
mov
mov
pusha
in
mov
sbb
push
test
cmpsb
cld
in
mov
xchg
test
shll
mov
xor
fstl
mov
arpl
inc
sub
xchg
lea
mov
inc
pop
jge
ret
add
lods
cmp
or
cmp
mov
lock
push
ja
gs
mov
out
adc
and
push
test
mov
adc
ret
pop
jne
test
lods
cmp
jge
adc
pop
cld
push
mov
arpl
aas
leave
mov
aad
dec
mov
mov
mov
sub
sub
loopne
hlt
dec
cmp
es
cwtl
xchg
pop
mov
shl
adc
insb
pop
adc
sub
insb
in
sub
sbb
sub
and
xor
in
lret
sbb
cmp
push
hlt
pushf
inc
inc
mov
out
mov
mov
and
movsl
pop
push
and
repz
decl
ret
xor
push
fcomps
fbld
or
inc
sbb
or
subl
jae
cld
cmp
sub
or
test
sti
adc
push
fld
pop
std
xor
pop
pop
lds
or
inc
in
ret
pop
clc
inc
test
mov
sub
mov
sub
out
push
in
cmp
mov
or
add
sbb
movsl
xchg
cmp
jns
or
dec
test
pushf
enter
lret
add
out
pop
iret
mov
subb
and
inc
xchg
iret
insl
jl
inc
hlt
movsb
orl
or
loopne
por
cld
push
add
cltd
ss
das
pop
lods
xchg
lds
mov
xor
movsb
fcmovnb
test
popf
push
push
mov
jo
or
ljmp
nop
insl
out
or
ljmp
ficoms
adc
in
cmp
rcl
mov
jecxz
imul
inc
sub
into
repnz
push
push
test
xor
push
movsb
dec
cld
addb
loope
dec
mov
lds
adc
jb
and
sub
cs
lret
mov
pop
data16
inc
imul
jmp
xor
dec
jo
leave
mov
add
out
dec
or
sbb
dec
jb
out
xchg
les
cmp
test
inc
rorl
lret
add
adc
lret
fldl
lcall
jno
adc
rcr
mov
or
dec
int3
xchg
xchg
shll
ficoml
mov
push
mov
lret
pop
in
repnz
pop
insb
out
adc
mov
sub
xchg
les
hlt
insb
jg
test
pop
mov
scas
sub
shrl
mov
pop
xchg
gs
fdiv
and
leave
xchg
insl
mov
into
or
cld
mov
mov
push
jl
rorb
or
scas
les
mov
arpl
dec
aas
sahf
repz
adc
test
xor
mov
add
stos
mov
mov
and
and
mov
mov
ret
pop
mov
stos
or
hlt
and
jns
mov
test
les
test
pusha
fmull
adc
sub
ss
stc
movups
mov
push
in
jno
and
in
lds
mov
pop
push
xchg
ja
add
jmp
push
sarb
cli
adc
andl
mov
or
pop
dec
sub
adcb
xor
fisubrl
sbb
dec
mov
dec
push
insb
inc
xor
fs
sub
mov
push
pop
pushf
fisubl
jae
add
or
ret
and
in
mov
cltd
lods
or
and
in
mov
cltd
mov
ret
and
adc
enter
mov
cltd
int3
nop
hlt
aad
test
test
repnz
clc
les
cmp
repnz
push
pushf
mov
rorb
test
dec
push
rcr
sub
data16
aas
and
sbb
dec
and
stos
add
jbe
ja
call
in
hlt
dec
inc
mov
out
popf
fstpl
push
adc
out
inc
stos
hlt
jns
mov
fidivrl
faddl
ret
xchg
out
hlt
rclb
test
add
dec
shll
bound
fdivl
aas
icebp
popf
fstpl
xlat
adc
mov
add
scas
sub
add
fmull
dec
mov
out
leave
popa
out
mov
popl
jb
mov
scas
or
sbb
rcll
adc
cmpb
mov
mov
add
aas
xor
cmpsb
outsb
lds
xchg
stos
xor
sbb
push
stos
into
aas
add
hlt
nop
or
shll
sbb
sbb
and
fstpl
int3
dec
testb
xchg
frstor
sbb
insl
int
pop
mov
xchg
push
loopne
mov
loopne
fcoms
xor
pop
lret
rclb
sbb
jo
fadds
push
ja
dec
adc
sub
or
fucomi
imul
insl
hlt
cmp
aam
popa
scas
mov
and
mov
or
ret
outsl
das
loopne
daa
dec
push
sbb
dec
ss
inc
cwtl
rcrb
mov
push
inc
inc
shrb
push
addl
sti
loop
cmp
cmp
hlt
cmpsl
cmc
sbb
leave
xchg
push
pop
stc
add
jno
lods
les
scas
int3
out
sub
shll
jo
outsl
jge
add
mov
stc
or
sbb
xchg
lret
insl
adc
lret
hlt
jg
mov
mov
cld
rcrb
or
sar
dec
dec
mov
ljmp
popa
mov
aam
mov
add
or
mov
arpl
jne
sbb
repnz
or
ret
inc
adc
loopne
xor
mov
jg
repnz
test
loope
lcall
xchg
cli
notl
sbbl
fcomps
inc
hlt
addb
jne
cmpsb
xlat
jbe
scas
fisttpll
fistl
gs
dec
mov
repnz
lock
je
sbb
movsl
or
push
mov
outsl
and
pusha
enter
test
add
push
arpl
test
or
mov
call
lock
dec
ret
push
aas
imull
inc
inc
lcall
cmp
lods
xchg
dec
out
mov
mov
iret
push
lods
hlt
jbe
sub
hlt
xor
xchg
ret
push
outsb
mov
or
lea
xchg
and
dec
pusha
pushf
stos
xchg
adc
test
hlt
testl
and
dec
cwtl
mov
hlt
insb
mov
jmp
xor
mov
out
in
cli
cwtl
xchg
ljmp
test
sbb
inc
xchg
or
mov
xchg
xchg
add
add
adc
adcb
push
movsb
mov
push
add
loope
insl
mov
pop
cmpl
loop
or
cmc
mov
jo
shrl
bound
cmpsb
xchg
push
sbb
fwait
shl
into
fwait
and
imul
ret
cmp
or
insb
in
xchg
mov
add
mov
hlt
sbb
test
lock
cmp
cld
rorb
test
test
test
sahf
or
mov
leave
enter
daa
out
inc
test
aam
in
fistps
mov
jmp
mov
xchg
mov
inc
aas
cld
cmp
pop
xchg
pop
inc
iret
cwtl
das
inc
inc
mov
push
ss
lods
jl
mov
inc
div
out
sbb
daa
aas
jae
je
fldz
andb
mov
cmpsb
nop
jno
and
cmpsl
and
mov
movsb
inc
sub
cmp
inc
jae
pop
test
jge
ss
add
sub
js
or
cmc
lea
pusha
mov
add
cld
lods
inc
fbld
addb
icebp
or
psllw
jl
sub
test
xor
mov
jge
and
movsl
hlt
test
dec
pop
sub
and
inc
or
ds
sahf
test
int
movsb
cmp
idivb
lret
daa
jl
push
lret
dec
hlt
mov
movsb
test
dec
mov
jne
mov
lock
in
arpl
aad
test
lods
cmp
cmpl
enter
pop
sahf
movsb
rol
sahf
psllw
fcmove
fdivl
daa
js
jae
popa
gs
in
inc
sub
lret
idiv
stos
mov
and
mov
xchg
clc
or
and
mov
sbb
fdivs
shll
in
fsubrs
imul
xchg
cmp
xchg
loopne
add
ret
fcompl
ficoms
xchg
or
repnz
mov
lcall
scas
cmp
les
or
ret
inc
pop
lods
sbb
hlt
xchg
lods
mov
ds
inc
pop
sub
push
subl
mov
xor
dec
xchg
or
arpl
repnz
and
testb
aam
test
in
pop
jnp
enter
jno
dec
pop
xchg
and
dec
pop
xchg
or
loopne
or
popa
mov
pusha
jecxz
cld
loope
or
mov
xchg
adc
loop
imul
fsubl
jge
xchg
xchg
std
sub
xchg
add
pusha
sub
pop
aaa
mov
cltd
push
mov
mov
pop
shlb
sbb
nop
out
fbld
in
sub
in
mov
or
sub
sbb
loop
add
insb
push
jo
scas
out
aad
ds
add
cmp
jmp
mov
jnp
inc
add
out
int
jg
add
mov
pop
enter
mov
mov
dec
mov
sub
mov
nop
inc
hlt
mov
add
sti
ja
popf
xchg
sub
jmp
sub
inc
inc
lock
mov
mov
lods
inc
test
xchg
inc
mov
cmp
adc
mov
jge
jmp
sbb
xor
mov
jecxz
push
stos
mov
dec
pusha
xchg
push
xor
imul
push
xor
mov
out
dec
enter
ficoms
in
mov
fisubrl
or
scas
icebp
add
mov
jae
cmp
push
add
or
aas
nop
enter
cltd
push
into
mov
add
aas
incb
inc
ljmp
mov
in
popf
bound
loop
lds
les
enter
hlt
xchg
and
aas
scas
inc
jno
mov
push
bound
or
add
out
arpl
std
and
and
ret
xchg
xchg
or
sbbl
mov
stos
mov
jno
push
xchg
test
pmuludq
out
mov
fisttps
sbb
out
add
hlt
fisubrl
push
test
enter
dec
inc
push
movsb
lods
add
aas
test
clc
push
jae
mov
ljmp
mov
lcall
xchg
adc
xchg
insl
roll
push
int3
test
sub
movsb
push
mov
pop
and
add
push
scas
test
inc
ljmp
mov
fsubrp
imul
mov
les
rolb
xchg
lahf
or
lock
das
add
dec
mov
jecxz
inc
pushf
dec
scas
and
mov
out
mov
pop
dec
inc
mov
aaa
popa
mov
xor
mov
dec
cmp
mov
sbb
aaa
call
pcmpgtw
jl
add
std
and
jo
in
inc
pop
sbb
js
pop
cmpsb
rorb
out
pusha
je
adc
arpl
loopne
hlt
scas
inc
enter
jno
xor
lahf
jmp
hlt
dec
mov
xor
in
repnz
les
lahf
or
jmp
js
sub
push
xor
jae
enter
jmp
and
push
loope
in
dec
jns
or
insl
lret
jnp
rclb
in
sub
mov
mov
imul
and
xchg
gs
dec
push
push
and
sub
aad
jecxz
lret
rcrl
lret
jne
pop
jnp
add
loopne
jno
jnp
es
pop
or
sbb
jns
sahf
xchg
fcompl
inc
subl
daa
push
sub
sbb
mov
repnz
and
mov
in
jo
mov
pop
hlt
mov
push
and
hlt
hlt
or
hlt
mov
push
xchg
jno
mov
jo
mov
dec
mov
cmc
mov
shr
inc
inc
sub
fnstsw
mov
mov
hlt
divb
mov
clc
mov
cltd
loope
shlb
hlt
cmpsb
fistpl
sbb
incb
mov
add
jle
pushf
lock
jnp
adc
jo
movl
clc
test
imul
and
mov
cvtps2pi
xchg
testb
incl
imul
scas
movsb
push
call
lcall
dec
clc
stc
negb
mov
push
ljmp
jle
pop
clc
out
inc
jnp
and
fistps
sub
loopne
js
in
dec
call
jle
lods
or
mov
loop
add
fnstcw
mov
xlat
add
loopne
ret
mov
movsb
mov
add
mov
fmull
js
jnp
adc
jo
imull
adc
insl
cmp
rcrl
jmp
ljmp
icebp
mov
leave
push
fs
xor
loop
fisubrl
adc
sub
mov
sub
mov
enter
mov
movsb
loop
js
imul
ja
mov
or
xchg
ljmp
hlt
jno
sub
cs
mov
mov
enter
loop
sub
popf
dec
or
pushf
inc
xchg
lock
cld
push
pop
add
xchg
popf
add
fs
test
ficoml
loop
inc
add
lods
xchg
push
out
xchg
ret
adc
subl
fwait
notb
and
das
in
dec
movsl
mov
repnz
rcrl
jno
cli
jnp
and
sbb
nop
dec
mov
aam
push
cltd
mov
sub
mov
lock
xchg
mov
mov
inc
scas
and
push
sarl
iret
xchg
test
or
adcb
jae
sar
push
mov
mov
fdivrl
pushf
pop
hlt
bound
push
jle
and
fmuls
inc
int3
mov
pop
in
add
cltd
or
dec
out
bound
out
out
xor
mov
lods
pop
push
sbb
jmp
lcall
jg
lods
loop
xchg
add
jo
fwait
push
push
xor
test
mov
mov
fdivs
xlat
mov
and
popa
lods
dec
push
xchg
mov
push
pushf
mov
xchg
inc
cs
movsl
movsb
nop
aam
fisubrs
pushf
push
mov
nop
ja
test
xchg
sbb
cmpsb
push
push
ljmp
insb
pop
push
xchg
jbe
je
push
mov
lret
mov
cs
push
outsb
dec
lock
js
jle
loope
aas
daa
lock
push
pusha
jle
fwait
mov
loop
repz
sarb
mov
xchg
mov
loopne
icebp
repnz
insl
mov
hlt
scas
xchg
lods
pop
mov
pop
hlt
mov
sub
out
mov
popa
lea
call
repnz
out
push
rcrl
jnp
mov
fistpll
push
ja
or
pop
ljmp
push
xchg
mov
popf
stc
clc
adc
push
hlt
hlt
xchg
loop
mov
ret
sahf
clc
stos
test
rorl
sub
push
lcall
es
int3
mov
or
enter
sub
lcall
xorb
jg
inc
mov
adcb
mov
and
xchg
iret
xchg
pop
clc
insb
mov
jbe
cld
inc
loop
icebp
lock
outsb
fwait
or
outsl
loopne
mov
dec
mov
cmp
inc
lods
jbe
clc
stc
cld
sbb
mov
ljmp
mov
and
pop
push
jnp
sbb
cmc
mov
adc
clc
adc
stc
cmp
in
cli
or
and
pop
clc
imul
test
sbb
adcb
pusha
mov
xor
mov
fadds
shr
xlat
jae
xchg
cld
mov
clc
das
popa
cmp
or
or
scas
int
and
cmpsl
jnp
clc
push
int
push
stos
out
in
pop
mov
test
push
xor
test
das
scas
mov
les
push
push
je
lock
ret
je
bound
inc
cmpps
insl
jae
cmp
dec
ret
pop
xchg
jle
cmp
push
lock
lock
adc
testb
xor
jbe
mov
hlt
roll
inc
add
jg
ja
jbe
iret
sbb
lock
hlt
in
mov
insb
or
mov
inc
scas
and
mov
adc
addr16
orb
fdivrs
jmp
data16
lahf
hlt
push
pop
mov
cli
or
push
mov
incb
add
inc
fs
repz
outsb
imul
xchg
call
inc
mov
lock
jl
imul
in
loopne
loopne
movsl
ljmp
mov
mov
dec
loopne
nop
popf
jl
inc
loop
sbb
mov
test
sub
hlt
stc
mov
test
out
fisubs
aam
mov
ja
mov
push
mov
jbe
mov
push
dec
ds
loope
sbbl
outsb
data16
or
jne
sbb
sub
pushf
pop
push
adc
inc
xchg
push
jg
and
popa
dec
jg
cld
negb
add
adcb
adc
shl
ret
popf
jno
add
imulb
hlt
jbe
mov
push
cs
rcr
movsb
or
leave
ja
addr16
push
fldcw
jbe
sub
inc
mov
jge
fdivr
pop
push
jno
lods
dec
rolb
in
mov
idivb
xor
mov
mov
and
push
pusha
hlt
or
or
xor
xor
sarb
xchg
enter
xchg
fiaddl
inc
test
cmpps
or
jge
pushf
pop
jp
push
mov
pusha
jnp
idivb
xchg
push
jmp
rol
mov
adc
lock
pop
lock
enter
test
jp
loop
adc
cmp
pop
xchg
lcall
or
mov
nop
inc
into
push
insl
in
xchg
mov
jge
dec
outsb
addl
add
mov
adc
and
adc
mov
pop
mov
dec
test
xchg
inc
hlt
cltd
sbb
test
dec
mov
jle
mov
movsl
into
jg
out
mov
mov
push
pop
inc
or
lea
faddl
fists
in
inc
jecxz
test
rclb
inc
cmp
daa
into
dec
mov
test
fisubs
mov
mov
inc
das
ror
xchg
into
int3
mov
out
mov
mov
add
aas
mov
or
jge
jns
pop
dec
test
jl
cmp
mov
icebp
or
inc
and
mov
and
adcl
aaa
or
sub
sbb
xchg
pushf
les
jb
ljmp
cmpsb
call
push
lcall
jne
push
jmp
hlt
xchg
movsb
push
out
sbb
mov
push
push
sbb
andb
jl
sbbb
mov
mov
cmp
and
lahf
jbe
sbb
rolb
and
sub
insl
adc
inc
aad
in
sbb
sub
stos
insl
adc
hlt
rcl
jmp
push
popl
push
negl
daa
lret
or
sti
subl
jns
and
stc
aam
fs
push
jecxz
stos
push
push
bound
adc
imul
or
adc
cmc
xor
add
sarl
jmp
lcall
mov
test
jns
movsb
enter
leave
pusha
inc
loopne
rcrb
lcall
dec
adc
lret
mov
push
pop
hlt
scas
push
inc
or
stos
and
cmpsb
push
ficoml
fisubl
mov
arpl
popa
sbb
test
mov
les
mov
sbb
cld
lret
scas
add
clc
dec
lret
mov
push
pop
jmp
push
dec
and
lret
push
inc
andb
and
push
pop
aas
mulps
add
je
sub
dec
mov
pop
shlb
and
sub
mov
and
not
out
pushf
lret
loop
and
inc
fcomi
inc
arpl
or
lahf
fldenv
adc
and
mov
pop
icebp
loope
addb
xchg
les
push
cwtl
push
fcoml
or
xchg
popa
mov
jge
xor
add
std
mov
es
mov
gs
loope
add
sub
int3
in
push
loope
add
mov
xchg
sahf
xchg
cmp
or
or
add
les
jecxz
pop
test
push
hlt
je
int3
fildll
push
push
and
and
xlat
ljmp
cmp
test
les
push
jg
popf
hlt
jecxz
fisttpl
add
add
shll
jmp
cld
stos
stc
mov
cmpsl
cmp
in
in
xchg
push
pop
test
test
inc
mov
or
leave
mov
subl
dec
mov
int
or
mov
add
sub
stos
push
adc
jg
loopne
orl
in
and
jns
bound
mov
cmp
and
or
enter
or
fdivp
dec
in
pop
pushf
popa
clc
fwait
sar
and
fldlg2
mov
lret
test
in
cmp
pop
mov
in
ror
push
xor
mov
shrb
mov
test
fsubs
das
pop
and
rcl
jno
fmuls
pop
sarb
or
in
ret
or
dec
repz
mov
hlt
xor
test
hlt
decb
lods
dec
rcr
mov
sti
or
out
scas
mov
push
in
aaa
mov
addr16
or
les
sbb
jnp
cltd
mov
imul
mov
or
mov
pop
jle
clc
mov
cld
hlt
int3
cmpsb
mov
xchg
jb
loop
adc
mov
lret
shl
ss
and
or
jo
fs
scas
adc
or
loopne
mov
sarb
push
mov
mov
repnz
into
adcb
shlb
shr
pusha
mov
ffree
sbb
push
call
pop
push
in
das
arpl
mov
enter
iret
dec
decl
fisttps
ja
sti
xchg
mov
inc
mov
or
stc
xchg
pushf
loopne
fcomps
adc
test
mov
pop
shl
add
mov
bound
mov
push
movsl
test
cmp
rcr
or
mov
call
cmpl
sub
test
imul
push
xchg
loop
outsl
bnd
ret
push
mov
mov
mov
shrb
jmp
jge
scas
inc
das
repnz
cmp
dec
adc
insb
sub
mov
add
aas
mov
inc
nopl
scas
or
fildll
scas
mov
xchg
adc
mov
les
fisttps
outsb
test
outsl
dec
mov
jge
sbb
jno
sahf
roll
inc
test
out
push
clc
shr
stos
lea
sub
lret
dec
movsl
dec
nop
xchg
mov
inc
inc
xchg
pop
add
nop
insl
xchg
inc
out
or
ss
or
or
sub
xchg
xchg
fisubs
sbb
push
mov
add
insb
sbb
add
sbb
popa
cwtl
xor
nop
mov
jne
mov
mov
scas
or
xorb
shl
call
xor
jno
je
fistpll
repnz
dec
push
add
cmp
ss
loopne
adc
jns
jecxz
sub
cs
jo
mov
cmpsb
xor
scas
lret
push
mov
push
fcomp
call
lret
imull
pushf
fsubrs
mov
sub
int3
out
jg
fidivs
icebp
clc
sbb
jge
sahf
xchg
ds
mov
adc
das
fcoml
nop
sub
sbb
xchg
jl
mov
mov
xchg
xchg
fisubl
jecxz
cwtl
push
mov
daa
mov
adc
decb
cwtl
push
cmp
seto
nop
es
scas
or
jbe
stc
mov
and
or
mov
lock
imul
mov
adc
inc
andl
les
hlt
in
jl
mov
or
in
fsubr
and
jae
jae
pop
xorb
dec
lret
popa
dec
sbb
adc
ss
clc
stos
hlt
lahf
fisttpll
loop
xchg
lahf
stc
nop
mov
inc
into
xor
in
test
pop
lret
dec
adc
mov
sub
push
adc
add
mov
imul
mov
add
sbb
subb
sub
clc
pop
mov
xchg
push
add
dec
mov
out
imul
and
adc
mov
adc
rorl
rorl
cltd
inc
jno
mov
aam
inc
out
mov
pop
mov
popf
bound
mov
add
pop
or
adc
repnz
in
sub
int3
adc
push
mov
push
ret
xchg
mov
push
adc
jnp
rorb
les
mov
dec
mov
test
inc
add
xchg
or
sbb
push
loope
in
nop
in
cmp
shrb
bound
push
pop
pop
xor
mov
dec
movsl
es
sub
mov
mov
xor
and
fstpt
ret
adc
pop
lock
les
xchg
cmp
in
sahf
xor
jmp
icebp
mov
ror
lret
enter
aad
mov
hlt
inc
mov
mov
mov
xor
lcall
hlt
cmpsl
jg
lock
scas
and
aad
nop
mov
movsb
jae
xlat
loop
xor
ds
enter
jp
mov
test
push
shrb
xchg
call
rol
into
lret
test
pop
nop
xor
fldl
xchg
adc
mov
add
push
test
lret
lock
aam
inc
jmp
scas
push
fcomps
xor
lock
stos
mov
mov
xchg
fwait
xchg
add
sbb
inc
enter
dec
clc
in
loopne
shlb
or
into
mov
mov
jno
fwait
popf
ss
fsts
sbb
enter
cmpsb
fldt
mov
loope
sbb
outsb
ljmp
int3
xchg
neg
ret
fsts
nop
pusha
adc
test
or
pop
les
pop
jle
or
dec
sbb
and
lock
or
popf
fldcw
pop
mov
or
les
sub
movsl
cmpsl
nop
push
ror
fisttpll
clc
arpl
in
popf
je
or
mov
rolb
xor
lret
lds
stos
repz
je
ret
mov
in
sub
xorb
jb
pop
mov
sub
fdivrs
mov
testl
jle
inc
enter
sub
int
or
push
icebp
mov
jne
loop
mov
mov
aam
adc
xchg
jns
gs
dec
shrb
and
decl
jne
mov
aas
loope
mov
lock
into
fimuls
hlt
cmpsl
jbe
test
and
scas
or
push
nop
std
ret
lahf
pop
lret
inc
mov
lahf
cltd
xor
sbb
mov
ja
lret
repnz
push
pushf
shlb
xchg
in
nop
ja
fsub
mov
jecxz
test
cmp
jge
xchg
sub
mov
je
inc
inc
mov
fsubrs
hlt
inc
and
in
jmp
into
lock
push
lods
mov
pop
les
jp
leave
mull
push
add
insb
in
jmp
fidivrs
pop
addl
dec
test
out
call
mov
js
fdivrs
lea
or
mov
subb
flds
push
loop
xchg
push
orb
rcr
or
stos
hlt
dec
movsb
iret
test
mov
shll
and
push
or
xchg
or
mov
hlt
add
mov
dec
cmp
xchg
ljmp
cwtl
wbinvd
xor
loop
es
sbb
mov
decb
adc
adc
inc
mov
inc
xchg
cmp
cld
loopne
mov
jge
pop
mov
adc
popl
inc
mov
in
shlb
push
inc
les
cmpsl
insb
mov
adc
xchg
fwait
lds
insb
loop
adc
and
ret
ss
adcb
cmp
sub
xchg
int
test
and
fsub
mov
inc
lea
nop
inc
mov
inc
xchg
mov
mov
and
sub
mov
pop
sub
adc
sarb
mov
hlt
lods
jo
pop
rolb
ret
rcrl
sub
std
loop
adc
clc
sub
stos
pushf
pop
and
fisubrl
adcb
mov
movsb
pop
mov
les
inc
hlt
lret
mov
cmp
jle
mov
test
push
out
mov
fsub
or
and
lcall
leave
stos
mov
and
cmc
adc
jl
in
fstl
xchg
cwtl
add
imul
jnp
rorl
enter
inc
in
pusha
dec
mov
jle
or
test
and
scas
loope
lds
and
notl
clc
mov
mov
or
or
cmp
push
shlb
stos
insl
arpl
popa
lret
mov
xchg
loopne
mov
in
mov
mov
xchg
rorb
mov
icebp
cs
add
lret
pop
lahf
loopne
call
dec
mov
daa
adc
or
mov
adc
scas
mov
lea
insl
lock
xchg
inc
in
inc
sti
push
pop
jge
mov
push
rorl
mov
push
mov
mov
clc
jl
loopne
arpl
or
and
add
mov
push
xor
sahf
orl
popa
xchg
or
xor
xchg
push
cwtl
add
mov
xchg
lock
mov
mov
jbe
pop
es
mov
cltd
mov
adc
push
jne
or
stos
mov
mov
clc
in
xchg
shlb
nop
mov
mov
nop
mov
and
cmc
adc
xchg
adc
hlt
hlt
sti
es
mov
test
std
jbe
rcrl
cmp
mov
mov
xchg
add
or
insl
test
fsub
ret
insb
or
pop
mov
divb
cmpsb
adc
push
fdivrs
xor
mov
xchg
roll
mov
dec
rcl
dec
sarl
dec
out
enter
fdivr
enter
mov
jg
adc
xor
dec
rcl
in
dec
fs
or
adc
sbb
lea
dec
loopne
dec
loop
sahf
push
notb
cmpsl
xchg
fndisi(8087
or
aas
dec
loopne
xchg
inc
mov
out
sbb
sub
bound
adc
xor
mov
xor
loopne
xchg
movsb
mov
mov
adc
sub
dec
xorb
jae
enter
mov
dec
lahf
xchg
std
subl
xchg
adc
cld
ss
push
xchg
cmp
lock
rcll
test
stos
inc
push
lock
dec
or
lock
sub
cmp
and
clc
movsb
popa
loope
cmc
enter
mov
xchg
enter
call
fmuls
cmpsl
or
imul
enter
or
lea
pop
popa
adc
inc
inc
jmp
test
mov
xchg
pop
jp
mov
mov
nop
adc
test
xchg
push
shl
leave
or
rol
divl
xchg
test
in
or
hlt
jge
sahf
insb
pop
and
adc
mov
ja
cmp
xchg
push
shl
sbb
push
adcb
mov
adc
movsb
mov
or
enter
call
pushf
cmp
cwtl
mov
push
dec
enter
cmc
iret
or
mov
inc
mov
xchg
stos
repnz
loop
cmp
hlt
pop
adc
dec
test
ret
xchg
inc
aas
dec
add
insl
mov
in
mov
and
adc
inc
stos
hlt
cltd
jmp
and
aad
lods
mov
lcall
hlt
and
push
adcb
or
xchg
add
popa
pop
enter
stos
mov
fcomip
xchg
xor
imul
cmp
mov
test
sarb
lahf
fcoml
das
enter
enter
dec
enter
and
xchg
aas
popf
fadds
enter
or
das
lcall
flds
mov
adc
lods
mov
leave
mov
icebp
rcrb
sub
push
rolb
mov
add
enter
mov
mov
xrelease
stc
sarb
fmuls
mov
mov
enter
xchg
mov
xchg
inc
mov
nop
and
enter
repz
or
scas
and
aad
mov
nop
loop
mov
jns
xor
clc
hlt
fmuls
mov
inc
lock
sbb
fsubl
scas
mov
xor
add
nop
push
cmpsb
inc
jmp
and
jmp
push
mov
idiv
push
push
inc
mov
adc
mov
enter
xor
xchg
enter
mov
mov
stos
subb
inc
decl
rcrl
movb
pop
push
mov
mov
mov
push
lock
adc
les
mov
rcll
call
movsb
adc
xlat
in
das
inc
cmpsb
mov
push
roll
inc
mov
popf
mov
out
in
adc
push
enter
hlt
sub
shrb
xorl
cmc
ffreep
aaa
mov
cmpb
xchg
cmp
xor
clc
stos
hlt
add
xor
test
popl
or
gs
scas
loope
lds
cmp
xchg
cmp
mov
jmp
mov
push
enter
push
loope
ljmp
rorb
test
adc
or
pop
or
test
add
stos
mov
test
sahf
push
or
xor
lret
push
test
pop
sub
andb
scas
int
imul
test
pop
xchg
push
xchg
sub
mov
shl
ret
xor
inc
adc
fsubl
dec
inc
loop
orb
stc
mov
sub
xchg
mov
hlt
repz
packsswb
and
xchg
mov
inc
pop
jo
lret
mov
mov
xlat
in
das
xor
cmp
push
mov
inc
and
cmpsb
mov
sbb
and
scas
mov
mov
xchg
mov
loop
shl
adc
aam
xchg
fwait
or
lret
sub
inc
scas
and
aad
ljmp
repnz
xchg
addb
arpl
inc
push
inc
sbb
orb
call
rclb
fdivrs
mov
xor
lock
adc
mov
movsb
dec
scas
mov
es
mov
jbe
fcoms
push
push
and
mov
sub
xor
or
fmull
push
in
int
fadds
push
fcoms
xor
push
mov
xchg
inc
dec
push
ss
fcoms
movsb
clc
test
out
subb
div
push
fdivs
hlt
cmpsb
mov
inc
mov
and
lcall
adc
mov
cmove
and
insb
cmp
movb
push
and
in
insb
loop
ss
clc
sub
mov
ss
fstps
hlt
mov
testb
fldenv
mov
sub
js
fdivr
test
mov
xchg
push
test
xchg
mov
repnz
rcrl
xchg
fcoms
xor
das
dec
mov
lods
mulb
or
push
xlat
in
jmp
mov
xor
gs
les
loop
adc
loop
mov
cmp
ss
sbb
fdivr
stos
test
ud0
mov
mov
add
pop
or
mov
sub
faddl
test
mov
and
sub
icebp
sbb
lock
and
sbb
andb
sbb
pop
lea
mov
xor
xchg
and
pop
aad
jmp
into
lock
ljmp
js
loop
ss
cld
push
loopne
or
icebp
aad
stc
sbb
dec
fdivrp
test
push
xlat
in
fsubr
es
add
test
enter
cwtl
inc
jno
pop
sbb
in
incb
or
adc
inc
hlt
jg
or
xlat
inc
mov
inc
xchg
lret
je
cld
enter
mov
ss
cmp
not
inc
mov
inc
or
mov
stc
sbb
dec
mov
xor
xor
dec
push
jmp
adc
sub
outsl
roll
inc
les
insb
mov
adc
inc
jmp
insl
lock
in
decb
and
test
loop
jo
fdivr
clc
inc
mov
inc
xchg
or
loope
dec
pop
inc
mov
enter
jg
or
orb
pop
dec
fcom
rorb
lret
jle
and
orb
pop
dec
fcom
fmuls
stos
xchg
or
xchg
push
pop
xlat
in
jmp
loopne
sub
cmpsl
mov
fcmovnbe
in
fsubr
and
lock
enter
jb
xor
sbb
lea
test
inc
or
mov
fprem
xor
xchg
xor
fnstcw
clc
mov
and
fld
sbb
mov
mov
or
or
mov
add
or
mov
cmp
das
dec
rcl
cwtl
dec
popa
sub
cmpl
inc
mov
and
hlt
mov
mov
cs
in
nop
or
xlat
in
jmp
mov
cmpsl
pop
xchg
inc
inc
test
pop
insb
mov
adc
xor
ss
clc
sbb
call
adc
das
fcoml
xchg
sub
adc
cmp
sub
add
insb
loop
ss
clc
jmp
lock
inc
or
les
adc
push
loopne
mov
ss
clc
test
pop
cmp
popa
insb
xor
clc
hlt
fstps
jns
les
enter
or
mov
clc
and
hlt
inc
xchg
rcll
dec
mov
inc
add
mov
mov
add
loope
jg
cld
enter
mov
or
mov
sub
call
adc
jecxz
dec
fcom
mov
or
push
cs
xchg
call
add
or
sbb
xlat
in
jmp
mov
loopne
cmp
clc
inc
mov
xchg
rcl
jg
fcoml
push
sub
test
sbb
in
cmp
rorb
sub
bound
or
js
or
stos
mov
pop
jns
data16
negb
add
add
mov
out
adc
xor
push
push
adc
bound
or
rorl
inc
xor
decl
dec
fcom
lock
mov
shrb
xor
fnstcw
add
push
push
popa
mov
call
inc
dec
pusha
fcomps
enter
aam
adc
icebp
cmp
sbb
in
decb
sbb
andb
cwtl
and
push
adc
push
in
and
mov
push
inc
pop
or
push
push
mov
stos
hlt
jae
adc
hlt
out
std
ret
jbe
subb
xor
push
or
ds
nop
cmc
mov
or
mov
loop
ljmp
sub
mov
push
mov
push
outsb
mov
adc
fprem
pop
fmuls
jge
xor
push
ds
fsubrs
fdivrs
sarb
mov
pop
mov
hlt
pop
mov
mov
das
dec
nop
fcom
int3
dec
icebp
mov
jo
mov
and
or
mov
sub
or
ja
fldcw
insl
test
fsub
fdivrp
subb
js
cli
mov
addr16
out
mov
push
call
or
hlt
jecxz
mov
push
dec
nop
ret
dec
push
cmc
cltd
subb
vfrczss
jno
xchg
push
hlt
mov
hlt
jns
js
push
push
pop
js
or
jae
and
icebp
mov
jmp
add
cmp
rclb
mov
and
mov
xchg
in
or
mov
xchg
mov
cltd
push
stos
mov
and
scas
and
aad
xchg
mov
mov
test
hlt
sub
aam
adc
test
imul
in
jo
movsb
cmp
lock
aad
mov
lods
cmp
mov
enter
mov
push
inc
hlt
loopne
popa
lret
fmul
call
or
xchg
scas
out
or
out
add
lods
jb
jno
xlat
push
popa
mov
fsub
dec
stos
icebp
cmp
sub
mov
mov
push
loopne
hlt
cmc
push
cmovs
ret
scas
or
and
scas
xchg
outsl
decl
call
cmp
inc
mov
push
movsb
pop
enter
das
add
mov
or
jnp
nop
mov
mov
icebp
inc
cmpl
test
or
xchg
pusha
fmuls
mov
popf
xor
xchg
enter
mov
or
clc
sub
pop
ljmp
hlt
xchg
and
enter
sub
push
pop
clc
push
orl
pushf
dec
mov
stos
hlt
jae
mov
int3
mov
scas
sub
popf
fdivrs
cmp
cld
imul
mov
js
not
push
jb
push
shrb
add
or
mov
mov
or
cmp
mov
clc
hlt
negb
or
clc
cli
ss
mov
jbe
push
imul
jl
xlat
push
clc
icebp
movsb
and
clc
scas
mov
test
adc
es
or
fsubs
or
xchg
adc
movsb
pop
enter
mov
xchg
sub
aam
loop
js
test
ss
mov
enter
sub
shl
loopne
ret
push
jmp
or
enter
or
jns
cmp
insb
les
mov
sbbb
aam
push
push
push
cmp
clc
push
adc
cld
stc
popf
fadds
mov
rcr
or
hlt
jmp
push
rcll
in
fsubs
dec
xor
jb
and
andb
sahf
fidivrl
sbb
repnz
enter
mov
adc
das
enter
into
push
aas
sahf
or
fdivr
hlt
mov
cltd
push
loop
sti
xchg
add
popa
out
add
pop
test
cmp
mov
test
arpl
mov
or
hlt
es
adc
hlt
jecxz
test
xchg
add
push
out
hlt
xorb
jo
xchg
cmp
lock
or
push
pop
sahf
cmp
sarb
dec
inc
insb
pop
add
hlt
add
scas
xchg
cld
mov
repnz
cmp
cmp
adc
enter
outsl
add
xchg
xchg
push
push
or
roll
test
mov
and
mov
add
test
mov
inc
lret
xor
jno
cmp
add
popf
mov
jae
in
push
push
cld
into
mov
hlt
aaa
mov
hlt
pop
stc
xchg
jae
push
arpl
sub
lahf
or
cmpb
pop
cmp
cmp
sbb
fmulp
call
call
or
mov
or
lock
out
inc
jmp
or
or
in
popa
xor
add
fdivs
test
es
sub
int3
pop
or
fdivr
mov
nop
xor
je
mov
mov
xchg
xor
es
adc
dec
or
insb
dec
xchg
pusha
loop
mov
addb
hlt
cltd
in
out
dec
sub
mov
xchg
andb
mov
mov
mov
mov
mov
enter
mov
push
subb
mov
es
rcr
movsb
add
pushf
rorl
xchg
insb
pop
and
adc
cmp
fsubrs
mov
inc
hlt
insl
fimull
inc
scas
push
fmuls
push
mov
fdivrp
xor
mov
hlt
xorb
jo
sarb
mov
mov
loop
mov
test
jmp
test
sbb
popl
lods
rclb
push
sub
fcoms
or
xchg
test
cmpsl
xchg
test
or
push
adc
xchg
inc
loopne
das
push
mov
ret
call
imul
test
icebp
or
dec
pop
imul
clc
pop
inc
mov
push
xchg
sbb
lods
fsub
idiv
int3
cmp
pop
dec
mov
fdiv
rolb
mov
in
xchg
inc
cmp
lret
cmp
pop
adc
sub
and
push
or
insb
mov
adc
xchg
mov
xchg
mov
mov
fdivrs
std
dec
mov
cmp
ss
sbb
cld
stos
cmp
adcb
mov
ss
fcom
and
in
insb
out
sbb
and
lock
enter
fiaddl
out
push
sub
hlt
das
and
fsts
cld
sub
hlt
repz
pop
les
hlt
xor
popa
or
adc
sub
pop
jne
ret
mov
sub
lea
xchg
xchg
js
or
mov
andb
push
mov
sub
data16
test
mov
mov
inc
pop
pop
or
jns
lea
sub
jno
clc
mov
or
xlat
in
fsubr
lock
scas
push
jno
mov
xor
mov
inc
and
inc
mov
stc
sbb
dec
xchg
frstor
pusha
ss
call
sub
in
or
sarb
and
lock
std
repz
scas
push
mov
or
mov
and
ret
pop
mov
mov
popf
mov
incl
jb
cmc
adc
mov
hlt
jmp
adc
or
imul
mov
shl
mov
jns
push
shrb
hlt
jecxz
pop
jno
lods
jno
cltd
inc
sub
roll
stos
xchg
mov
xchg
rcl
cwtl
mov
sub
call
lds
ret
ja
in
ljmp
out
test
test
sub
sbb
in
test
xor
pusha
mov
jl
mov
movsl
je
mov
ficoml
push
pop
cmp
mov
dec
sbb
enter
add
pop
out
das
cli
jno
sub
call
xor
mov
xchg
or
sub
cmpsb
hlt
scas
fnstcw
push
mov
subb
lock
inc
jmp
shll
clc
hlt
mov
or
cs
mov
sub
push
lock
add
aas
xor
test
xchg
jne
and
and
hlt
fldl
push
test
ds
repnz
xchg
inc
hlt
repz
mov
movsl
testb
icebp
cmp
scas
add
hlt
test
lea
cwtl
mov
test
push
jmp
pop
pop
ror
add
mov
xchg
cmp
mov
and
xchg
test
aas
loope
mov
xor
sub
je
xchg
xchg
xor
fsts
mov
adc
sub
jl
mov
mov
ret
xchg
test
cmc
pop
movb
mov
hlt
negb
cmp
test
adc
mov
cmp
add
movsb
daa
test
out
xchg
pusha
incb
cwtl
daa
loop
fiadds
mov
dec
call
or
cld
push
hlt
add
sbb
xchg
nop
xchg
xchg
repz
add
lea
mov
mov
push
cwtl
jbe
orl
sub
jl
cmp
and
jmp
mov
out
pop
jge
push
mov
js
and
dec
xor
push
cmp
mov
int3
test
hlt
push
mov
stos
bndstx
leave
cmp
repnz
inc
subl
test
inc
test
pop
sub
cld
test
enter
pop
leave
div
pop
cwtl
push
in
loopne
sbb
rclb
outsb
sub
inc
cmp
out
adc
sub
dec
sub
xchg
dec
sub
mov
dec
jg
cltd
leave
in
jmp
jno,pt
mov
sbb
negb
lea
xor
add
out
stc
jae
dec
mov
cmp
or
mov
jno
push
push
iret
fisubrs
daa
outsb
mov
imulb
hlt
pop
shrl
test
adc
hlt
je
jmp
hlt
pop
lods
lret
mov
test
xchg
fsub
sbb
gs
shlb
dec
repz
xchg
ftst
movsl
das
stos
cmp
xchg
push
aas
scas
inc
fs
or
loope
call
mov
pushf
jnp
pop
pop
mov
mov
and
fiaddl
popa
enter
mov
int
ror
loopne
andb
sub
xchg
and
inc
xor
shlb
mov
shr
sub
adc
mov
dec
loop
repnz
dec
movb
sub
mov
pop
sub
add
push
mov
push
ret
loopne
mov
or
add
mov
cmc
mov
lock
add
add
ror
aam
push
or
jecxz
lret
stos
dec
in
xchg
loop
rcrb
shl
and
cs
pusha
les
loop
sti
loope
fldcw
xor
cld
sbb
mov
pop
dec
mov
push
mov
rcr
addb
mov
xor
lods
mov
enter
adc
jae
lods
push
int
pop
sbb
int3
je
test
clc
inc
cmp
inc
mov
add
ss
leave
lock
mov
adc
cmp
inc
popa
add
mov
fidivl
mov
call
jo
jnp
movsb
jo
lods
mov
fcoms
mov
xor
or
xchg
pushf
adc
clc
lcall
or
mov
lods
xor
pop
enter
sub
pop
or
fimull
aam
jnp
jae
andl
enter
les
repnz
mov
xchg
enter
mov
cltd
test
cmpsb
xchg
enter
mov
decl
hlt
xchg
ret
and
adc
enter
mov
test
sub
orb
movsb
loope
rorb
mov
mov
and
lea
add
xchg
sub
rcrl
test
or
test
add
stos
mov
or
xor
rolb
sub
jno
xor
add
leave
pop
and
loop
mov
test
in
fsubrl
out
add
or
lahf
inc
jmp
xchg
cmc
test
lret
push
lods
mov
scas
daa
ret
cmpsb
mov
test
mov
add
add
in
push
rorb
xchg
push
inc
adc
orb
icebp
fadds
dec
and
in
in
cmp
xchg
mov
test
lods
jae
lock
push
mov
sub
mov
jl
push
sti
mov
test
xchg
in
in
push
loopne
push
xchg
adcb
and
mov
loope
xchg
pop
movsl
adc
cli
sbb
or
mov
stos
into
mov
das
sbb
jno
xor
mov
inc
inc
cli
mov
and
out
push
pop
jmp
jmp
out
cmp
je
insb
sub
int3
insl
add
jb
div
sbb
test
enter
add
call
mov
pop
and
je
sbb
in
and
inc
cli
xchg
push
pushf
or
in
mov
xchg
pushf
fadd
add
push
out
insl
push
fiadds
test
call
and
sub
lret
inc
xchg
add
mov
pop
jns
jne
push
sub
inc
dec
stos
push
mov
sub
stos
xor
inc
jne
ds
pushf
dec
test
or
mov
xchg
ds
dec
mov
cmpsl
loope
aas
inc
dec
push
mov
fdivrl
mov
sahf
xchg
pop
test
hlt
insb
mov
mov
movsb
sahf
outsb
andl
shrb
popf
cmp
add
adc
or
sub
sub
jb
movsl
mov
jo
int3
dec
xchg
data16
ljmp
mov
adc
sub
mov
jno
adc
dec
dec
push
pop
lods
mov
pop
mov
enter
sub
jae
mov
jne
inc
loope
popf
gs
mov
and
cmp
add
inc
pop
test
dec
add
push
mov
aam
aam
fsubl
push
out
jbe
scas
mov
push
xchg
pop
ret
and
add
sbb
roll
arpl
insl
hlt
mov
mov
adc
sub
ljmp
cmp
mov
mov
mov
enter
scas
xor
int3
lods
cmpsb
jnp
adc
lahf
std
push
jge
mov
push
or
pop
add
add
aam
xchg
lock
dec
addr16
add
scas
sub
pop
stos
test
ret
and
dec
es
icebp
sub
insb
cwtl
inc
jg
dec
mov
push
mov
pop
out
xchg
mov
pusha
sbb
into
cli
movsb
add
mov
ror
inc
xor
xchg
filds
hlt
mov
in
lret
cmp
daa
jbe
add
jne
imul
loop
push
es
jno
lret
cmp
lahf
push
jecxz
mov
add
mov
xchg
hlt
pop
jne
mov
or
add
push
mov
xchg
mov
sbb
mov
cmc
into
push
or
mov
test
call
and
loop
xchg
test
adc
les
push
add
fisttpll
daa
xor
push
in
jecxz
loop
jle
lret
push
and
xchg
add
xchg
fcompp
jbe
push
push
xchg
int3
icebp
pushf
mov
ret
leave
jle
je
push
hlt
dec
push
into
ret
addl
outsb
push
or
add
mov
jnp
mov
mov
mov
jno
jge
xchg
insb
jnp
inc
push
and
mov
or
mov
jge
insb
shrl
jge
mov
mov
or
xor
sahf
push
push
mov
stos
je
ds
inc
movsl
cmc
sysexit
pop
jp
call
mov
pop
mov
and
cld
je
pop
xchg
add
sub
out
adc
xor
pop
popf
or
addr16
sub
loop
xchg
outsl
movsl
push
int3
push
sbb
test
icebp
cwtl
repnz
inc
outsb
adc
push
aaa
cld
mov
mov
sbb
cwtl
lds
xchg
subl
push
aam
pop
mov
mov
test
hlt
mov
or
jb
xchg
insl
or
adc
outsb
out
loop
adc
lret
inc
push
pushf
sub
add
jp
test
add
xchg
aaa
inc
movsl
xchg
fwait
and
roll
inc
ss
pop
cmp
adc
out
and
xchg
sbb
andl
lock
inc
icebp
pop
fnsave
hlt
inc
ss
xchg
xor
add
mov
enter
sbb
lock
ds
jnp
aas
aam
ret
rcr
mov
adcb
icebp
test
les
mov
push
dec
enter
hlt
mov
jo
pop
loopne
inc
fisttpll
push
cld
js
sub
inc
insb
stos
or
sub
push
js
fs
jne
popa
sarl
jg
sub
mov
cmpsl
mov
add
inc
js
xchg
inc
stos
scas
js
movsl
out
ss
jns
mov
or
mov
mov
mov
inc
inc
test
or
mov
jmp
lea
mov
push
push
loop
mov
xchg
or
ficoms
adc
jg
enter
mov
test
mov
sbb
iret
xchg
pop
and
hlt
test
and
rcr
rcrb
sub
mov
sbb
incb
das
push
or
mov
lahf
push
sbb
dec
cld
lret
ds
mov
push
mov
in
jne
fmull
push
or
dec
push
outsb
dec
add
int3
mov
adc
xchg
test
lods
iret
sbb
inc
imul
pushw
xchg
loope
cmp
hlt
add
jp
clc
or
jae
mov
push
mov
lods
adc
dec
cmpsb
cld
lea
icebp
mov
or
out
mov
loopne
fsincos
jno
cli
add
popf
sub
jne
insl
dec
mov
stos
add
hlt
into
ds
in
xchg
lods
xor
inc
add
lahf
rcpps
jp
bnd
jbe
add
in
les
les
mov
fstps
jns
mov
add
cmpl
mov
and
iret
jno
lock
xor
mov
into
or
add
cmp
mov
sbb
pop
nop
out
orl
mov
mov
push
clc
jno
inc
inc
mov
das
faddl
les
aam
lods
in
adc
xchg
test
inc
inc
test
xchg
lock
test
dec
hlt
xchg
xchg
pushf
mov
adc
rcrb
sub
pop
jle
stos
test
add
dec
inc
sub
rcrb
and
sub
xor
rorb
xchg
push
loop
mov
in
push
or
adc
add
movaps
push
cltd
jb
pop
mov
in
imull
jmp
fwait
cmc
fisubrs
adc
hlt
call
mov
cmpb
mov
jp
mov
rolb
cmpsl
andl
cwtl
xchg
pop
xor
xchg
xchg
cmpsl
xor
in
push
mov
add
and
scas
shlb
cmp
pop
jb
mov
jl
push
push
hlt
or
loop
mov
lret
add
aam
out
mov
cmp
fwait
jl
sahf
mov
push
or
add
jne
mov
cmpsl
and
mov
fs
mov
call
cmc
or
cltd
add
sbb
push
test
adc
dec
rolb
lcall
xchg
loop
test
daa
jne
test
int3
jmp
andb
and
push
push
mov
xchg
push
add
iret
rol
adc
inc
push
push
xchg
or
outsb
add
jmp
dec
out
pop
daa
lret
mov
clc
cs
or
fildl
bswap
and
outsb
loop
sbb
inc
add
mov
shrl
sarl
xchg
stc
cli
mov
push
pop
adc
mov
pop
push
test
cmpsb
lea
lods
out
mov
mov
lret
shrl
ljmp
cwtl
lcall
sub
inc
not
xchg
and
dec
mov
jno
mov
test
add
and
mov
pop
pushf
mov
fisttpl
xchg
lods
pusha
ds
inc
add
nop
cmpxchg
pop
mov
scas
shl
xchg
enter
xor
cwtl
xchg
or
sbb
mov
dec
cmpsl
or
in
les
stos
dec
imul
adc
les
dec
and
mov
push
mov
loope
and
jno
jecxz
jbe
pop
dec
jb
in
xchg
adc
ljmp
rolb
scas
hlt
cmpsb
jg
movsb
pop
mov
mov
mov
sub
fldcw
lcall
xchg
mov
ss
mov
cmp
push
dec
enter
imul
xchg
cltd
push
jp
jae
xchg
or
and
subb
movsl
shlb
push
add
loopne
mov
dec
or
int3
rolb
mov
popl
fdivrs
cmp
mov
stc
fnstsw
jbe
dec
addl
arpl
mov
clc
jbe
xchg
dec
int3
fistpll
xor
cmp
push
xchg
insl
xchg
cli
dec
add
xor
dec
test
jne
mov
and
mov
pop
into
xor
mov
stos
dec
or
mov
hlt
sahf
pushf
xchg
or
sub
lea
jg
cwtl
and
dec
inc
sub
in
mov
out
into
lcall
push
inc
movsb
mov
in
mov
mov
push
rolb
pop
pop
sub
push
mov
pop
mov
call
xchg
sbb
or
jnp
cmc
into
frstor
movsb
pusha
mov
enter
mov
xchg
int
es
ret
aad
jp
xchg
in
daa
cmp
add
mov
mov
enter
sbb
sub
cmc
sub
lea
add
xchg
cmp
mov
rorl
jmp
movsl
test
cmp
movsl
push
mov
aas
popa
add
mov
inc
shrb
xchg
xchg
addb
fmull
fwait
push
push
in
ret
notl
or
jno
cmp
hlt
xchg
data16
daa
mov
lods
stos
add
sbb
pop
xchg
sub
inc
xor
pushf
sbb
mov
lea
lds
dec
mov
or
mov
test
aam
sbb
test
shr
mov
test
movsb
xor
enter
rorb
sbb
lahf
hlt
lret
call
movsb
jg
jp
or
inc
mov
mov
xor
mov
cmp
mov
pop
shl
xor
movsb
loope
andl
mov
mov
jb
loop
mov
stc
mov
lahf
xchg
inc
enter
xchg
mov
sbb
fimuls
xchg
cmpsb
mov
jo
mov
dec
aas
div
inc
mov
cmp
push
popa
jp
lea
nop
mov
mov
ss
adcl
inc
adc
add
test
cmp
jo
lods
mov
test
mov
mov
rcrb
ffree
mov
dec
and
xlat
mov
scas
mov
push
test
inc
cld
adc
inc
loop
xchg
mov
js
test
rcrb
or
in
push
mov
arpl
or
idivb
adc
mov
inc
mov
sbb
push
es
pop
or
loopne
mov
and
ret
jecxz
mov
pop
or
cld
fidivrs
inc
test
push
lods
mov
adc
data16
hlt
xlat
clc
inc
pop
shl
pop
push
mov
jnp
pop
jno
mov
mov
loope
je
pop
decl
aas
pop
fcomp
push
mov
hlt
jne
jge
cli
mov
lock
mov
leave
jns
push
cmp
sbb
mov
cli
mov
mov
xchg
mov
add
xor
lret
nop
lret
and
rorl
lock
lea
clc
ret
cmp
push
mov
mov
jp
outsl
nop
pop
pop
xlat
inc
sbb
add
cltd
pop
sbbb
mov
xchg
sbb
lods
mov
dec
sbb
adc
mov
ret
mov
dec
fdivs
jns
jl
leave
pop
mov
les
aaa
mov
or
and
pop
les
mov
iret
fdiv
hlt
mov
mov
imul
xchg
or
mov
cmp
mov
mov
aaa
mov
add
ret
lock
nop
js
jbe
mov
sbb
ret
mov
jns
mov
adc
call
les
jnp
add
sbb
stc
inc
mov
lods
xor
mov
sahf
jge
mov
mov
cmp
enter
xor
inc
outsb
xchg
mov
or
aas
pop
mov
pop
mov
out
mov
mov
mov
sahf
mov
adc
lods
cmp
loopne
xchg
dec
inc
dec
cmp
jne
ds
lret
lock
ret
scas
aad
add
and
outsb
sahf
add
fisttps
sbb
or
ds
movsl
cmp
fwait
xor
out
dec
mov
mov
dec
aaa
sbb
mov
xchg
push
outsl
mov
or
clc
into
mov
lods
dec
and
pop
cwtl
xchg
xor
cmp
stos
sub
aas
subl
push
cmc
lea
mov
cmp
push
divl
pop
xchg
dec
cmc
mov
hlt
cs
mov
inc
clc
paddw
dec
and
xor
mov
mov
mov
ds
mov
enter
rcrl
sub
lds
ja
out
sahf
dec
fmuls
insl
xchg
shrb
pop
cmpsb
insl
notl
ds
xchg
xor
int3
mov
fxch
or
subb
adc
and
add
insl
mov
fdivs
mov
jae
push
push
sub
inc
sub
dec
outsb
in
aam
xor
lcall
shlb
adc
shl
ffree
inc
js
push
jno
xor
in
inc
jne
push
add
mov
and
clc
fwait
mov
mov
mov
inc
inc
jno
jno
mov
out
or
ret
mov
insl
mov
cmp
lock
test
jmp
mov
mov
test
mov
in
dec
loop
adc
mov
jno
loop
test
xor
inc
js
mov
mov
mov
or
mov
xchg
add
xchg
add
call
test
mov
mov
or
jne
xor
div
mov
aad
cmpsl
dec
fdivr
lret
mov
jnp
or
fstl
or
fidivrs
or
div
xchg
fs
add
rorb
mov
cmc
adc
sbb
icebp
dec
das
jp
clc
jne
pop
int3
jg
out
cld
ja
lea
xchg
ss
xor
aaa
mov
sub
pop
mov
mov
hlt
addl
pop
sbb
sbb
js
les
or
jns
mov
adc
xor
ljmp
cli
adc
xor
das
nop
jne
pop
mov
cmp
hlt
mov
add
cmpsl
nop
jns
call
test
shll
pop
test
data16
out
arpl
or
stc
adc
stos
mov
or
or
fistpll
push
xor
mov
mov
push
lods
mov
dec
or
add
movb
push
add
inc
pop
pop
pop
loopne
test
sbb
or
clc
fisubrs
aad
rcl
ljmp
or
push
push
inc
iret
inc
mov
test
pop
pop
pop
lahf
lods
mov
adc
mov
xchg
sbb
lret
enter
mov
loop
add
adc
add
rcrb
or
stc
xchg
jbe
or
mov
mov
fisubrs
lods
push
adc
out
sbb
mov
and
cltd
dec
mov
jns
cmp
adc
shrw
mov
add
ficoml
lods
and
fdivr
sub
sahf
mov
call
into
mov
ret
popf
mov
push
jno
iret
or
add
cmp
daa
mov
push
lahf
adc
icebp
push
inc
nop
xchg
sti
add
outsl
mov
add
xchg
dec
xor
sub
inc
pop
nop
and
test
xchg
jno
aam
jmp
loop
xchg
call
sbb
jbe
enter
or
jbe
sbbl
mov
inc
cmpsb
mov
pop
mov
cmp
movb
pop
push
movsb
pop
rcrb
xchg
in
dec
pop
popa
hlt
fisttps
popa
lods
mov
hlt
cmp
and
adc
test
subb
pop
sub
mov
mov
or
xchg
mov
mov
sahf
daa
jne
cli
or
jns
testb
mov
cld
testb
hlt
mov
loop
cltd
adc
cs
dec
dec
imul
pop
pop
ret
mov
sub
and
mov
add
adc
add
mov
inc
xor
mov
mov
leave
or
fstp
mov
hlt
add
les
sub
push
pop
fldenv
mov
or
and
mov
xchg
jg
mov
movsl
push
test
push
daa
jne
or
adc
out
fwait
incl
mov
mov
in
das
loop
mov
scas
in
das
loop
mov
stos
in
das
push
sub
je
pop
notl
movsb
xor
mov
sub
pushf
push
int3
sbb
aam
adcl
dec
scas
mov
dec
mov
ret
push
daa
les
or
mov
and
mov
aas
fmulp
shrb
cmpsb
inc
icebp
int3
pushf
sahf
inc
inc
repnz
test
and
adc
lret
mov
sbb
mov
xchg
fs
push
ret
push
leave
addr16
je
test
inc
xor
mov
mov
outsb
shll
mov
loop
sbb
sub
jno
les
cmp
aam
mov
dec
rorl
sbbl
dec
mov
cmpb
insb
adc
sub
and
test
hlt
add
movsl
jge
imulb
or
cltd
loope
add
adc
dec
cs
cmp
lds
in
movsl
push
std
jo
inc
js
fs
xchg
call
sarb
xchg
outsb
hlt
cmpsl
jg
fmull
or
push
mov
and
sub
shrb
sub
xchg
xchg
jmp
shll
push
mov
lret
xor
xlat
int3
push
add
inc
cmpsb
addps
sbb
xchg
add
test
and
jne
adc
pop
ret
jge
frstor
outsb
jae
xchg
jne
push
or
inc
out
sub
add
push
add
scas
dec
movsb
sti
mov
adc
das
fbld
cmp
and
out
loope
push
or
inc
sub
movsb
scas
movsb
fmull
lods
inc
and
stos
test
pop
inc
xchg
push
cmpsl
fisubs
xchg
pop
jecxz
mov
or
shll
push
lds
inc
hlt
shrl
roll
add
or
mov
xchg
and
mov
dec
jno
sbb
inc
stc
movsl
addr16
adc
subb
inc
dec
add
dec
jne
les
inc
mov
xchg
orl
fmuls
or
call
xlat
and
add
xchg
lret
fidivrl
xor
add
out
fcmovb
outsl
mov
ljmp
adc
jmp
shrl
mov
push
out
stc
jle
sbb
mov
sub
shlb
jne
pusha
cmc
dec
inc
sbb
stc
mov
dec
mov
dec
xchg
pop
cmc
lods
lahf
sub
mov
dec
mov
cmc
das
jecxz
pop
jns
and
cmpl
cli
add
pusha
in
aas
dec
ja,pn
add
ficoml
and
cwtl
or
mov
and
adc
es
pop
call
cs
and
mov
or
jmp
hlt
mov
mov
aam
lods
sbb
loopne
frstor
push
lock
fsubs
ljmp
int3
es
or
in
dec
outsb
adc
bswap
mov
jb
repz
daa
jg
adc
jmp
orl
stc
pop
loope
jns
les
in
lods
xchg
loopne
and
mov
xlat
mov
jno
dec
mov
push
testb
pop
test
inc
out
inc
inc
in
test
fcomp
mov
push
ja
adc
lock
adc
xorb
andl
subl
clc
sbb
lahf
xchg
xchg
test
in
not
pop
cli
and
sbb
stos
dec
cli
add
ds
mov
stc
mov
in
or
pop
fidivl
jo
dec
testb
js
aas
cmp
loop
push
js
xorb
xchg
mov
nop
lea
rorb
mov
jne
in
xlat
in
push
sbb
xlat
dec
push
jbe
jl
push
push
ljmp
insb
int3
dec
add
lods
leave
lods
into
addr16
enter
shlb
add
sbb
dec
and
push
loop
mov
into
imul
dec
bound
xlat
inc
icebp
lods
test
hlt
sbb
test
or
cld
and
movsl
rorl
pushf
mov
sbb
test
xorb
sub
mov
movsl
in
call
jne
mull
xchg
call
or
dec
iret
inc
clc
xchg
les
test
popf
pop
mov
outsl
xchg
out
loope
mov
pop
or
sub
hlt
imul
ret
rolb
mov
sub
push
test
xor
out
dec
cmp
sbbl
or
fnstcw
fadd
mov
into
xchg
scas
or
and
hlt
lret
sbb
std
jnp
into
movsb
add
nop
mov
jmp
icebp
fdiv
sub
sti
div
mov
pop
or
lods
mov
sub
cmp
or
add
mov
dec
test
addr16
cmp
in
mov
loop
xor
movsb
adc
addr16
imul
jg
das
les
jbe
add
call
cld
fisubl
shrb
xchg
loopne
les
addl
out
sub
fwait
adc
cltd
cmp
add
repnz
sub
mov
mov
sbb
clc
ret
subb
ja
add
adc
stos
adc
cwtl
mov
add
xchg
mov
int
mov
leave
xchg
add
imul
lds
int3
mov
js
aam
mov
mov
inc
mov
hlt
push
pushf
rorb
ret
xchg
or
xchg
jo
shll
pop
insl
mov
bound
or
jge
loope
stc
and
in
or
leave
mov
push
inc
icebp
fcmovb
insl
leave
je
test
hlt
adcb
add
leave
or
sarb
push
rorl
sarb
xchg
dec
int
inc
shr
mov
sub
xchg
out
mov
in
add
add
lods
sahf
push
mov
mov
xor
push
in
mov
jl
and
xchg
inc
cmp
orl
aas
arpl
lock
or
lods
jns
mov
aad
inc
inc
sub
hlt
insl
mov
xchg
leave
addb
cltd
ja
sahf
xchg
jg
fdivl
sbb
mov
repz
xchg
or
cmc
dec
js
scas
cmp
test
xor
push
mul
dec
lods
jge
loope
xlat
lods
xor
popf
xchg
aam
lea
rorl
movsb
cmp
lret
cmp
push
cmc
scas
hlt
sti
fdiv
xor
incb
jecxz
pop
sub
fsub
movsb
js
lock
mov
sub
xchg
pusha
fwait
testl
hlt
loopne
and
addl
lret
jne
mov
adc
hlt
cli
push
test
lret
push
push
aas
add
inc
test
mov
push
mov
push
incl
mov
cmp
mov
pop
aaa
fwait
ret
cmc
cmp
adc
xchg
insl
lock
lret
bnd
pusha
add
jbe
lea
pop
mov
es
gs
jae
dec
cmpsl
adc
jp
push
add
out
adc
aaa
mov
pop
dec
sbb
mov
sarl
ret
inc
dec
pop
orl
cmp
inc
mov
cvttps2pi
xchg
xor
nop
movl
sub
fldt
ss
test
mov
sahf
aad
sub
or
lods
fs
les
cmp
cmp
lock
cmp
pop
clc
sub
rorl
pusha
dec
lret
lahf
xor
fucom
shrb
mov
and
xchg
jne
in
mov
xorb
mov
pop
nop
xor
push
hlt
xchg
nop
push
add
pop
test
pop
subl
stos
mov
sahf
rclb
mov
xorb
pop
xor
sub
dec
inc
les
call
filds
push
xlat
lahf
outsl
sbb
pop
add
and
cmp
add
arpl
loope
inc
repnz
pop
repnz
inc
and
pusha
add
iret
scas
dec
in
lock
outsl
dec
in
loope
sub
mov
push
insb
or
into
fsubrs
out
or
mov
xchg
popa
xchg
fisttpl
pop
adc
sysret
fsub
hlt
ds
xchg
mov
dec
jmp
cli
shrb
divb
enter
cwtl
mov
loopne,pn
inc
hlt
jbe
mov
sub
cwtl
pop
repnz
jns
stc
sbb
ret
adc
icebp
mov
rcll
add
jns
inc
ljmp
hlt
mov
in
lea
cmpsb
xor
hlt
fstps
add
xlat
lret
jae
add
addr16
mov
subb
gs
nop
add
ret
loope
daa
fisubrl
cld
adc
lods
pop
mov
loope
mov
fiadds
jne
mov
jo
mov
adc
and
push
movsb
mov
jno
or
xchg
mov
inc
xchg
jbe
insl
aad
test
call
divl
add
mov
mov
or
pusha
sbb
int
push
push
inc
ficoml
inc
frstor
fld1
ljmp
lcall
aas
mov
stc
xchg
sub
mov
in
add
cld
or
shrb
or
lahf
aad
rep
xor
push
cwtl
icebp
pop
rcrb
incl
cli
hlt
cmp
call
mov
jl
inc
pop
dec
mov
cmpsb
loopne
and
fstpt
mov
jl
push
icebp
or
fnstsw
lods
cmp
btc
cs
movsl
or
mov
lods
jb
mov
lds
scas
add
inc
lods
scas
mov
or
adc
mov
mov
push
sbb
inc
das
mov
loope
push
or
mov
mov
mov
cmpl
xchg
pop
pushf
jae
cmp
sub
dec
mov
xlat
jo
adcb
sbb
add
scas
xlat
mov
adcl
push
hlt
rep
dec
mov
loope
sub
pop
loope
pop
lods
mov
fcoms
pop
inc
mov
push
dec
mov
hlt
jg
mov
lahf
pop
inc
cmp
jl
or
push
mov
cmp
push
stos
mov
xchg
stos
adc
jg
xlat
sub
push
sarb
mov
xor
jle
hlt
mov
mov
lea
add
dec
jns
rcrl
jg
ret
stos
push
inc
or
scas
lock
out
add
fs
test
add
insl
cmp
mov
andnps
cmpsl
or
jl
sbbb
dec
add
fimull
add
mov
out
inc
cwtl
fisttpll
out
add
dec
loop
dec
int
xor
in
mov
sbb
flds
mov
mov
cmp
sti
dec
insb
adc
dec
insl
and
sub
push
cmpsb
out
je
mov
add
sub
test
mov
add
jmp
mov
push
das
dec
jmp
sub
loope
jb
es
adc
xchg
movsb
mov
mov
and
test
add
inc
orl
stc
sub
mov
fxtract
xor
addl
loop
popa
cmpsb
pop
test
xchg
pop
jg
outsl
mov
mov
xchg
xlat
outsb
inc
test
test
add
aam
mov
lahf
mov
sub
popf
or
push
lds
jne
pop
es
imul
gs
jbe
push
lret
xchg
or
out
dec
stos
cwtl
push
push
mov
or
push
jg
in
and
mov
ja
popa
inc
xchg
cmpsl
jb
add
xchg
pop
push
cmp
mov
push
mov
xchg
add
pop
cli
or
pushf
and
and
jge
jnp
ret
sub
cmpb
mov
inc
outsl
addr16
mov
xor
stos
adc
hlt
rcrb
or
pop
out
movsb
mov
les
sub
and
ret
pop
xchg
cmpsb
pusha
test
add
fisttpl
mov
int3
xchg
out
stos
bound
in
xlat
loop
cmpsb
push
jmp
out
orb
in
jae
or
and
daa
add
addb
scas
ret
rcll
xchg
out
scas
jns
movsl
xchg
jge
xchg
xlat
mov
imulb
pushf
cwtl
or
jp
fdiv
adc
pop
pop
sbb
mov
fadd
mov
cld
lret
push
xorb
mov
push
mov
sbbl
inc
push
jle
ret
movsl
add
push
rolb
xor
mov
sub
inc
mov
out
inc
mov
out
lret
pop
inc
int3
gs
sbb
cmpsb
icebp
fisubrs
hlt
movsl
pop
mov
push
test
imul
or
sbb
or
add
jp
push
inc
xchg
movsb
pop
cmp
andl
hlt
mov
fsub
out
testb
adc
and
add
add
inc
dec
push
pushf
or
push
dec
xor
mov
xor
mov
cmp
push
fsubrs
hlt
test
sbbb
mov
jne
push
add
data16
and
cmp
dec
and
nop
rolb
mov
pop
imul
lods
xor
push
data16
ljmp
cli
lods
inc
repnz
arpl
mov
and
iret
and
mov
sbb
add
push
mov
xchg
or
ja
mov
mov
push
sub
lcall
mov
cmp
and
and
in
and
and
sub
add
aaa
xchg
jp
std
movsl
and
mov
pop
sub
rorl
cmp
cs
jmp
xor
add
jnp
or
inc
add
insl
sbb
hlt
pop
push
mov
xchg
out
rol
fwait
pop
inc
push
mov
cmp
cmp
loope
les
lahf
xchg
xchg
xchg
or
gs
ficoml
jne
pop
mov
mov
fstpl
nop
repnz
xchg
mov
inc
shlb
add
push
dec
scas
shrb
mov
hlt
es
push
cli
cli
stos
mov
mull
repnz
leave
ficoms
push
mov
inc
out
je
mov
loop
popf
pushf
or
jns
test
xorps
je
add
push
mov
mov
popa
xchg
or
xchg
sub
push
and
enter
dec
insb
jge
adc
mov
jb
add
dec
xchg
or
lea
stos
and
cmc
movl
xchg
sub
cmp
test
bound
adc
sbb
mov
fsub
jge
mov
lcall
sub
bound
scas
mov
push
mov
mov
loop
xchg
ret
or
hlt
mov
movsl
fwait
mov
hlt
mov
pop
add
mov
fs
test
mov
xchg
cld
cwtl
and
jg
mov
pop
ds
jb
das
aas
jb
add
xchg
inc
inc
mov
push
cmpsl
sub
stos
xchg
push
sbb
xchg
push
mov
jle
insl
cltd
mov
icebp
cmp
push
scas
pop
mov
pop
lcall
xchg
or
loope
or
pushf
test
or
cwtl
sub
add
push
adc
dec
mov
mov
xchg
mov
rorb
mov
mov
lcall
xchg
inc
and
popf
cld
cmpsb
pop
or
mov
pop
sbb
mov
out
ja
ret
vmovss
mov
xor
sub
sahf
pushf
nop
xchg
cltd
outsb
lret
aas
rcll
ror
test
stos
mov
add
mov
les
or
stos
inc
lahf
outsb
mov
test
shlb
or
or
sub
mov
stos
or
out
enter
pop
push
xchg
pop
gs
push
add
cmp
adc
fdivp
mov
iret
inc
xchg
sub
jge
jne
cwtl
fisttpll
or
push
cs
mov
fidivrs
ss
adc
lea
push
mov
test
out
push
ror
adc
sbb
xchg
cli
or
aaa
mov
cmp
xlat
insb
inc
popf
cmpsl
and
out
pop
adc
mov
mov
or
fcoml
xchg
add
dec
push
iret
add
shll
adc
mov
mov
fwait
adc
xchg
jno
sub
sarb
icebp
jp
loope
mov
cmp
shlb
ljmp
pop
push
pop
xchg
ds
shlb
inc
jns
addb
and
stc
xchg
jnp
popa
pop
mov
ret
xor
xchg
aaa
pop
adc
adc
jo
and
dec
xchg
xchg
test
inc
xchg
stos
xchg
sarb
aaa
jg
shll
fiaddl
jae
lahf
pop
ror
out
mov
lcall
xchg
outsb
ja
cmpsb
add
jle
mov
aaa
lods
cmp
enter
xor
or
enter
push
or
imulb
test
je
add
aaa
pop
into
inc
test
or
rorl
int3
add
lods
in
pusha
pop
ds
mov
mov
mov
inc
mov
sub
scas
orl
add
mov
mov
push
cli
push
test
scas
loope
int3
push
or
and
cmp
pop
jo
dec
mov
test
inc
call
push
xchg
xchg
cmpsl
subb
xchg
or
xchg
roll
loop
rclb
stc
inc
clc
sub
inc
movsl
fldl
rolb
xchg
jge
push
mov
outsl
loope
xchg
mov
hlt
mov
lahf
adc
sub
mov
jbe
push
cmp
push
xchg
push
lods
test
call
mov
sub
and
fsubr
jge
push
xchg
jmp
test
daa
fdiv
repz
xor
inc
lea
xchg
xchg
push
mov
or
mov
sar
fimull
pusha
imul
mov
jmp
sbb
lahf
fsubs
lds
fcomps
sub
xchg
shll
imul
ss
ret
inc
and
ds
int
mov
jns
fwait
test
add
pop
std
xor
lock
add
and
add
mov
sti
int
fadds
jno
inc
xchg
xchg
inc
fucom
xor
hlt
dec
popf
or
mov
cld
mov
test
push
in
ret
icebp
sub
xchg
mov
push
sbb
xchg
lret
popf
jb
rcll
cmp
inc
into
fildl
xor
aam
xor
out
mov
add
mov
or
das
icebp
mov
pop
mov
test
les
mov
shll
mov
shrl
xchg
lahf
movsb
daa
scas
pop
cmp
cltd
mov
daa
and
insb
push
or
enter
lahf
loope
sahf
jl
mov
mov
xchg
js
daa
outsl
cmp
xchg
inc
mov
ret
mov
ljmp
or
inc
or
xchg
adc
test
sarl
mov
mov
test
mov
mov
adc
sete
out
mov
mov
jle
jnp
enter
pop
xorb
mov
cltd
xor
xchg
adc
sbb
ret
lcall
xlat
lret
fisttps
pop
fucom
fwait
push
and
mov
mov
mov
testb
sub
xchg
inc
movsb
xchg
rclb
jg
and
xor
mov
dec
push
test
inc
xor
call
pop
clc
ret
xchg
mov
shrl
and
push
mov
lea
sbb
or
xchg
jge
jmp
sbb
or
fcompl
and
or
xchg
enter
scas
and
cmp
decb
int3
mov
es
xchg
push
nop
stos
scas
inc
les
mov
jmp
mov
jp
add
pop
xlat
arpl
dec
loope
cld
sub
mov
arpl
add
pop
scas
inc
test
lods
daa
stos
mov
jae
adc
je
lods
cs
mov
mov
jmp
jecxz
mov
pop
sbb
out
mov
jp
std
push
cwtl
jnp
inc
mov
jnp
and
dec
sbb
mov
sbb
pop
or
subb
xlat
out
inc
outsl
mov
mov
xchg
or
inc
or
cmc
ret
xchg
loop
scas
test
xor
test
push
loopne
jge
je
test
in
add
inc
push
and
xor
cwtl
or
pusha
add
or
pushf
xor
pop
sahf
hlt
mov
mov
xchg
fistpll
sbb
xorl
mov
jne
cmp
ljmp
or
scas
movsl
or
cmp
xchg
jmp
jae
mov
int
inc
jle
es
hlt
or
rolb
cwtl
mov
xchg
or
xlat
xchg
or
ljmp
xor
mov
sarb
aas
pushf
push
and
cli
lea
pop
dec
das
js
jns
jg
fwait
sarl
inc
pop
insb
add
jmp
out
in
dec
sub
jmp
shlb
test
jp
push
pop
callw
inc
xchg
repz
pop
lods
pop
loop
lcall
mov
push
jbe
adcb
stc
sahf
insl
cmp
mov
scas
pop
push
stos
adc
jno
pop
add
lcall
in
jne
push
adc
shrl
lods
popf
dec
cs
xchg
adc
xchg
int
bswap
cmc
add
in
dec
div
or
fistpll
xchg
shl
data16
sub
scas
stc
scas
mov
scas
aam
xchg
adc
out
ds
and
hlt
in
mov
fsubs
mov
jnp
addr16
std
mov
shlb
hlt
xchg
adc
ficoml
cli
add
movsl
or
test
iret
pop
and
clc
lahf
sbb
jmp
out
or
in
fildll
mov
jne
pop
addr16
sub
or
mov
out
or
faddl
push
ja
fsubs
in
push
inc
bnd
shl
movsl
fstpt
cld
push
sbb
out
cmp
ret
mov
inc
hlt
mov
mov
das
or
add
push
andb
jno
push
pop
ljmp
mov
jmp
xchg
mov
mov
mov
or
lret
rorl
cmc
sbb
shl
mov
aam
aas
cmpsl
pop
mov
lcall
stc
jmp
lods
in
and
aam
leave
add
icebp
jo
mov
mov
mov
or
std
mov
mul
into
pop
sub
and
in
cmp
sub
sbb
popa
cmp
gs
imull
cltd
test
or
jne
and
mov
mov
in
add
adcl
fidivl
sub
jne
ljmp
xor
aam
mov
mov
and
enter
pop
int
cmpsb
pop
insl
push
imul
push
hlt
push
jecxz
out
shlb
test
fs
jo
test
pop
inc
sub
outsl
test
insl
mov
test
or
lds
insl
mov
enter
inc
push
cmpsb
mov
cmc
cmp
fildll
sub
push
pushf
mov
mov
inc
jmp
and
js
gs
push
push
lcall
lea
int
ret
mov
lods
push
adc
and
and
das
cld
jns
push
or
das
arpl
mov
adc
comiss
idivb
in
scas
aam
test
nop
adc
in
enter
sbbl
sub
add
ljmp
mov
mov
inc
push
fstps
dec
sbb
loopne
enter
or
mov
out
mov
sarb
mov
out
xchg
mov
push
add
push
stos
rcl
test
mov
or
jle,pn
repnz
inc
sbb
dec
mov
push
cmpsb
cmp
jne
push
dec
scas
lods
and
test
das
cmp
mov
mov
test
mov
mov
iret
jmp
dec
push
sub
test
inc
stos
lods
add
mov
jle
repnz
fs
adcl
add
xchg
ficoml
inc
push
sub
loope
jnp
xor
loope
stc
jae
jne
cltd
cmpsl
cli
loopne
popa
xchg
lea
notl
gs
pop
mov
andl
rolb
pop
std
movsl
jecxz
jb
add
insl
das
ficoms
ljmp
push
inc
aas
enter
mov
adc
or
mov
in
xor
pop
scas
jae
cmp
cltd
sub
ret
fidivrs
rcr
inc
xchg
dec
orl
popa
insl
cwtl
push
leave
push
sar
gs
inc
push
cltd
mov
cmp
sar
cmp
mov
or
mov
inc
dec
rcrb
xor
pop
rorb
pop
inc
subl
inc
add
cmpsl
ret
arpl
inc
and
dec
or
inc
mov
call
dec
out
bound
dec
push
mov
and
outsl
cmc
addr16
dec
adcl
movsb
in
add
sub
mov
enter
pushf
in
dec
push
cmp
and
stos
scas
cmpsb
mov
cwtl
mov
mov
dec
sub
inc
pusha
call
dec
mov
shrl
sbb
fistpll
or
test
push
movsl
loope
ret
xor
fcoml
cmp
xchg
mov
mov
insb
pop
notl
xchg
and
test
mov
pop
xchg
inc
orl
lock
xchg
in
sbb
fstl
leave
lock
cmp
gs
xor
cmp
loope
or
push
inc
in
add
inc
adc
xchg
loopne
mov
sub
add
or
cmp
mov
mov
xor
rcll
jne
mov
mov
add
lret
mov
orl
imul
adc
arpl
rorl
mov
sbb
and
mov
imull
es
and
stos
daa
fadds
sub
sub
xchg
mov
cs
xor
mov
sub
adcb
xchg
arpl
pop
lock
pop
pushf
les
lods
loopne
cmp
cld
insl
scas
pop
ss
adc
stc
xor
pop
loopne
cs
add
mov
or
aas
lret
testb
push
loopne
jge
divb
xor
dec
mov
sbb
daa
xor
or
xor
popf
call
or
add
cmc
sub
in
mov
insb
fsts
dec
xor
hlt
stc
xor
mov
inc
mov
arpl
jne
ret
mov
insl
or
xchg
inc
dec
int
fildl
inc
mov
lods
mov
mov
dec
and
shrb
adc
sbb
add
loop
shll
lods
movsl
and
cmp
fs
sub
sub
dec
mov
push
cld
xchg
dec
imul
pop
insl
dec
push
int3
test
sbb
and
fdiv
mov
mov
stc
ljmp
lock
xor
decl
xchg
int
dec
cmp
xor
xchg
dec
into
rol
add
mov
sub
loopne
call
adc
enter
mov
mov
cltd
rol
into
mov
xchg
pop
sub
or
loope
test
lock
into
cld
loope
iret
cmpsl
pop
hlt
add
or
vshuff64x2
js
push
bound
dec
stos
div
push
bound
enter
rolb
fstpl
xor
mov
adc
imul
loopne
adc
xchg
sbb
loop
out
jg
test
mov
mov
hlt
cmp
sti
cmp
mov
in
hlt
imul
xor
sub
ret
in
push
mov
hlt
xchg
push
or
sbb
test
mov
sub
cltd
mov
cmp
cwtl
add
fcoms
nop
xor
fs
inc
aam
lret
mov
testb
pop
sub
or
ficompl
inc
pop
cli
pop
ljmp
inc
dec
mov
jle
mov
inc
lcall
add
pop
aas
mov
cli
test
stos
jle
pop
in
mov
mov
pop
jnp
andl
nop
clc
pop
jnp
mov
outsl
shr
inc
imul
sub
out
and
test
test
and
push
cmp
test
xlat
mov
mov
ret
out
orb
and
adc
adc
mov
loop
add
add
jns
xorl
adc
repnz
out
mov
fldt
inc
and
test
and
push
mov
test
into
xor
jno
cmp
in
add
or
rcrb
mov
mov
and
scas
adc
pop
cs
decl
daa
xor
leave
dec
loop
xchg
stc
stos
inc
mov
es
push
jl
xchg
cmp
cmp
cmpsl
xor
aaa
pusha
out
movsb
or
in
fcomps
mov
popf
into
push
mov
fiadds
inc
loop
in
or
adc
cmp
xlat
adc
add
sbb
cltd
mov
pushfw
scas
adc
test
dec
dec
add
shrb
lea
imul
sub
das
adc
aaa
lods
adc
push
loopne
lret
dec
imul
into
add
add
das
sub
add
pop
aas
fistps
daa
scas
mov
js
repnz
leave
or
xor
aam
rolb
jge
test
je
mov
fwait
push
cli
outsl
pop
push
mov
mov
xchg
mov
fistpll
xchg
add
hlt
jne
mov
stc
sub
into
ror
test
cmpsb
sahf
mov
inc
movsl
cli
xchg
bnd
sub
jns
bound
pusha
and
cmovne
sub
fnstsw
cltd
loop
fnstsw
ret
lods
dec
fwait
mov
dec
testl
aas
inc
mov
xchg
add
mov
dec
xchg
adc
popa
call
adc
adc
movsl
jbe
mov
xchg
inc
dec
jnp
test
gs
in
into
xchg
cmc
stc
add
lods
cmp
movsb
xor
ljmp
push
hlt
ret
scas
push
icebp
fistps
nop
fxch
cltd
popa
das
mov
push
pop
lahf
leave
imul
aam
add
loopne
or
into
jb
jmp
mov
icebp
mov
mov
push
mov
fcoms
les
stc
or
and
jmp
popa
mov
call
mov
mov
mov
popa
mov
hlt
dec
jp
dec
call
fsub
xor
jmp
cmp
push
push
add
pusha
xor
inc
sub
lods
mov
sbb
je
lock
inc
jge
or
call
pushf
test
mov
pop
pop
rolb
add
std
dec
jmp
mov
cltd
scas
push
ds
std
sub
in
loop
mov
adc
hlt
add
push
mov
hlt
cmp
mov
aad
lock
enter
stc
jns
scas
jns
fcompl
lods
out
pop
fimull
inc
call
adc
mov
popf
out
add
mov
repz
add
lret
popa
cmp
adc
out
in
cmpsl
call
pushf
les
nop
xor
hlt
idivl
cmp
push
or
jle
xchg
jp
mov
movsb
or
fs
mov
mov
in
mov
nop
inc
in
lret
fisttps
cmc
les
xchg
push
rolb
lock
add
mov
sub
cli
dec
push
ja
call
xchg
in
or
in
dec
sahf
sbb
outsb
mov
dec
mov
dec
and
int
addb
adc
inc
sbb
in
cmp
jp
stc
push
mov
mov
pop
test
ljmp
jbe
jmp
adc
and
mov
adc
or
insb
xchg
repnz
push
repz
jae
adc
jle
shl
outsb
cmp
aad
pop
clc
ror
fsts
or
push
std
nop
push
cld
inc
lret
popa
jp
lods
aam
mov
mov
test
lret
movsl
xchg
sahf
mov
rcll
mov
iret
inc
addb
stos
inc
adc
xchg
mov
mov
rorb
data16
mov
xchg
add
pop
mov
and
mov
or
add
mov
das
adc
scas
test
mov
dec
xchg
adc
lahf
mov
add
je
lcall
xchg
jmp
push
icebp
xchg
jg
push
mov
call
and
std
rcll
adc
mov
dec
call
cmc
out
mov
sub
mov
mov
stos
sbb
adc
jns
in
xor
movsb
data16
std
lret
push
xor
xlat
leave
arpl
ret
xchg
adc
ds
int3
lret
mov
int
push
jbe
ficompl
adc
dec
xor
dec
shll
jae
push
xor
aaa
inc
dec
xor
cmpl
sbb
loop
jl
pop
in
dec
xorb
or
jmp
sub
sub
scas
aad
int3
loope
hlt
mov
das
mov
test
fstpl
popa
ljmp
test
push
mov
sub
push
es
jno
hlt
adc
faddl
mov
push
inc
mov
movsb
sbb
add
mov
lcallw
mov
adcl
xlat
fstl
call
ret
inc
inc
mov
cmpsb
popa
fcmovnu
or
jnp
push
ja
pushf
dec
xchg
lahf
cmp
lret
out
rolb
jae
xchg
push
or
ret
into
and
lret
call
or
ret
rcll
cld
mov
insb
mov
inc
pop
or
ret
pop
imul
hlt
dec
xchg
pop
pop
cs
dec
pop
lods
cmp
or
xorl
pop
mov
adc
out
or
ret
push
dec
shr
movsb
cld
add
push
cmpsl
adc
sub
test
mov
aas
jle
xor
into
mov
or
mov
push
lret
push
mov
sub
sbb
in
mov
iret
lret
add
fwait
mov
xor
mov
cmp
jmp
stos
cmpsl
inc
clc
mov
repnz
sbbl
jp
pop
jae
lds
imul
add
inc
xchg
pop
xchg
gs
negb
stc
std
cmp
lea
mov
nop
lcall
in
pusha
inc
hlt
dec
std
push
push
push
or
add
sub
lods
xchg
mov
xchg
repnz
cmpsl
add
xchg
xor
xlat
cmpsb
jecxz
jp
lods
rcrb
ffreep
mov
stos
push
pop
jo
xor
mov
addr16
cwtl
gs
mov
adcb
loope
gs
cs
push
push
stc
inc
jmp
add
and
mov
sub
or
inc
mov
inc
add
jle
or
movsl
shl
popf
jge
mov
lods
and
jbe
out
pop
ss
fisubrl
xchg
js
es
cmp
loope
push
inc
mov
cs
in
cs
fs
sti
test
hlt
adc
aad
sbb
mov
fisttpl
dec
push
fbstp
and
test
or
cld
cmp
mov
fdivrp
clc
xlat
adc
mov
cmc
jp
sub
icebp
xchg
add
mov
jmp
inc
mov
fstpl
xchg
jb
sub
out
jmp
xchg
ljmp
sbb
test
lods
cmpsb
xchg
or
rcrb
mov
and
pop
hlt
xchg
and
nop
inc
leave
inc
lea
cmp
adc
jge
push
mov
rolb
shll
dec
sahf
sub
lock
sub
mov
pop
adc
loopne
popa
mov
push
inc
in
or
enter
inc
neg
inc
shrb
fcoml
jbe
scas
cs
shl
mov
cs
sahf
add
test
pushf
mov
adc
mov
faddl
mov
dec
or
fistpl
fdivrs
mov
cmp
negl
cmp
mov
xor
aam
and
faddl
inc
or
mov
in
stos
and
push
jmp
push
push
ficomps
popa
add
xchg
inc
adc
push
sbb
arpl
add
mov
data16
dec
fadds
bound
pop
inc
mov
mov
add
lahf
decb
dec
fists
lret
mov
sbb
sub
inc
in
push
ret
cld
enter
fadd
xchg
inc
subps
mov
cmp
mov
idiv
je
rcrl
les
xchg
ret
jne
clc
nop
and
ret
mov
sahf
pop
ret
es
xchg
jp
pop
ret
loop
cmp
mov
fbstp
jae
adc
xchg
ja
inc
inc
rorl
inc
fadds
js
call
aam
aam
inc
mov
xor
xchg
mov
notb
incl
mov
cmp
jle
mov
mov
add
hlt
or
mov
sbb
mov
xchg
inc
mov
leave
shlb
test
enter
adc
arpl
fstl
mov
mov
mov
inc
call
stos
push
inc
divb
fisttpl
in
dec
mov
dec
or
scas
ret
ds
outsl
ret
mov
les
nop
mov
mov
in
stos
cmpsb
stos
fistpl
mov
out
or
rorb
mov
in
or
cmpsb
inc
mov
xchg
orl
push
rolb
sbb
movsb
push
adc
xchg
and
les
pushf
push
in
outsl
add
hlt
aas
scas
mov
icebp
mov
add
hlt
sub
push
fstps
fldz
aaa
cwtl
clc
loop
mov
mov
push
adc
adc
mov
mov
ret
add
add
out
insb
test
and
aad
jbe
jns
scas
inc
hlt
pushf
aas
push
adc
adc
sub
clc
lcall
add
nop
mov
mov
data16
jp
rol
inc
lds
inc
sbb
lods
mov
mov
scas
insl
mov
mov
fld
sbb
roll
mov
roll
mov
mov
int3
push
pop
cmp
or
rorl
sub
cld
fs
inc
xchg
inc
jge
es
add
fadd
xchg
xchg
pop
cmp
les
int
out
cs
out
add
mov
fadd
fcoml
ss
out
or
scas
ret
sbb
test
popa
hlt
mov
sti
mov
dec
das
lcall
out
in
lock
loopne
ficomps
fdivrl
mov
nop
xor
icebp
stc
nop
shlb
add
pop
cmc
adc
xor
lods
xor
insb
scas
lock
jecxz
mov
cld
sbb
push
out
sub
inc
ss
xchg
inc
add
fs
sti
aas
test
mov
xchg
cmp
and
inc
stos
or
arpl
scas
movsl
sbb
sbb
fidivl
inc
sarl
xor
xor
imul
mov
cmp
test
or
jnp
idiv
pushf
mov
xor
inc
jo
sarl
add
add
inc
dec
add
mov
pop
jne
inc
adc
mov
jecxz
push
adc
fidivrs
clc
pushl
mov
push
jns
enter
push
jecxz
sti
decb
or
jecxz
adc
aam
mov
mov
xchg
imul
inc
xchg
cli
adc
xchg
mov
or
mov
xchg
imul
scas
hlt
popf
pushf
cwtl
or
out
sti
decb
aam
xchg
call
push
stos
push
jp
mov
sbb
mov
adc
insb
mov
rol
cli
push
or
push
mov
ljmp
scas
dec
enter
inc
or
cmc
aam
aad
pop
mov
add
mov
xlat
pop
dec
arpl
mov
sbb
sub
xchg
cs
les
loope
hlt
movsl
scas
ret
insb
jnp
loop
add
dec
ljmp
mov
push
cmp
test
hlt
stos
loop
lock
ljmp
sbb
incl
sbb
jmp
mov
lods
leave
jno
sbb
pusha
mov
scas
fisttpl
mov
mov
mov
out
icebp
ficompl
xor
cli
test
loopne
mov
aaa
dec
xchg
sti
mov
lock
ret
fdivrl
daa
adc
hlt
push
insl
or
daa
mov
repnz
cs
fldenv
xchg
cmpb
sub
or
sub
sbb
push
fptan
sbb
repnz
xchg
xchg
or
les
mov
fwait
jae
or
lahf
jo
repnz
mov
hlt
popf
ja
mov
push
loope
enter
cmp
push
jno
fldenv
std
ret
xchg
xchg
lock
divb
push
shrb
pop
cwtl
push
ret
outsl
loop
pop
jns
mov
and
loopne
push
or
ljmp
ficoms
rcr
lods
mov
xor
or
test
xchg
mov
sub
fisttps
pushf
arpl
pop
lcall
jno
lds
cmc
cwtl
sub
lahf
addb
fisttps
in
fimull
lcall
hlt
xchg
xor
repnz
es
lock
mov
xchg
aam
lret
push
loope
xor
mov
out
inc
decl
out
dec
loop
fistpl
xchg
popl
rcr
mov
add
cwtl
xorb
roll
xor
jmp
aam
dec
jle
jne
sbb
add
les
imul
cwtl
and
call
sbb
or
ljmp
roll
xchg
xchg
inc
push
mov
dec
call
lahf
xchg
sub
repz
call
dec
mov
popa
mov
cmp
hlt
pop
jbe
cwtl
xchg
cmc
js
ljmp
xchg
cmp
and
push
lcall
hlt
iret
pop
jno
mov
adc
push
out
sbb
push
add
outsl
roll
pusha
stc
cld
scas
lds
mov
mov
in
pop
lock
or
sub
hlt
dec
jae
inc
or
mov
rolb
xchg
dec
xchg
das
ljmp
inc
icebp
jle
and
clc
hlt
add
mov
adc
shrl
adc
or
enter
and
jns
mov
insb
sbb
imul
or
leave
icebp
jb
loope
cmp
ljmp
adc
fisubs
fcompl
movsb
add
hlt
arpl
or
sub
cs
add
adc
inc
loopne
leave
ss
push
mov
adc
xchg
inc
js
mov
stos
hlt
test
mov
jecxz
pushf
rorb
pushf
inc
mov
lcall
mov
push
into
pushf
mov
shl
xor
bnd
mov
mov
pop
xchg
xchg
repnz
add
and
pop
mov
mov
gs
fwait
dec
pop
ljmp
push
sbb
inc
test
inc
icebp
add
or
add
jg
xor
test
hlt
in
push
sbb
sahf
and
mov
pop
push
xchg
jnp
xchg
push
dec
std
test
je
test
add
mov
pop
add
rcl
push
andb
or
push
add
call
lods
sub
or
xchg
mov
fmuls
cmp
and
push
adc
hlt
xlat
shll
or
loopne
add
arpl
jle
loopne
mov
lret
and
push
dec
lahf
add
mov
test
jno
or
xchg
enter
adc
cmpsl
lcall
sub
fsts
dec
or
aad
add
scas
mov
mov
nop
mov
mov
mov
repnz
scas
jns
dec
test
sbb
jecxz
lahf
scas
xchg
xor
add
mov
in
inc
mov
cs
pop
shrb
cs
inc
pusha
lret
stos
pop
test
test
ret
pushf
hlt
inc
test
lret
hlt
dec
outsl
xor
xor
bound
jns
mov
in
inc
xchg
std
jns
leave
test
push
pushf
cmp
adc
xchg
orb
jg
repnz
ffreep
cld
test
enter
adc
lock
cmp
pushf
call
dec
xor
addb
adc
sub
hlt
pop
or
sub
or
mov
cli
add
in
inc
scas
adc
das
add
lea
dec
iret
mov
mov
cli
pusha
stc
mov
test
lds
lock
mov
mov
lods
lret
lcall
sub
inc
sbb
or
mov
mov
jb
inc
hlt
test
lock
pop
stos
mov
push
mov
cmp
aad
xchg
inc
popf
xchg
popf
sahf
inc
loope
xor
popa
mov
popf
mov
mov
mov
push
pop
loop
inc
sbb
mov
push
or
jecxz
mov
xchg
sbb
repz
inc
cs
scas
xor
xchg
inc
cld
test
mov
sub
mov
sub
jle
dec
xchg
dec
in
fsts
adc
pop
movsw
pop
loop
inc
pushf
lods
jge
mov
mov
iret
outsl
sbbb
pop
cwtl
sub
pop
jnp
jae
clc
fiaddl
inc
inc
loope
inc
mov
inc
sub
sti
or
push
xchg
xchg
jae
in
fadds
inc
inc
loop
std
aas
cwtl
mov
mov
idiv
cmp
insb
and
dec
ljmp
outsl
push
jne
xorl
hlt
inc
pop
push
add
aam
sbb
sub
sbb
test
aaa
ror
in
adc
js
test
sbb
push
nop
and
xor
nop
add
lds
rcl
sub
imul
or
dec
shlb
sub
movsb
into
hlt
loopne
mov
cmp
inc
jle
dec
out
mov
stos
hlt
stc
std
lret
lds
call
std
nop
mov
inc
dec
push
stos
sbb
adc
mov
mov
iret
loope
mov
and
lret
xchg
xchg
jl
into
das
sub
test
dec
and
jb
lds
xchg
cmc
pop
mov
outsb
popa
inc
movzwl
mov
and
ja
jg
frstor
ljmp
iret
cmpsb
int
push
push
outsl
mov
mov
add
pushf
mov
icebp
les
cli
repz
mov
dec
test
pusha
andb
ficompl
cs
pop
pop
mov
mov
sub
pop
test
shr
add
cmp
mov
sbb
jge
cmpb
pop
lock
ret
dec
cmp
rorl
lock
push
roll
lea
sub
xchg
ljmp
mov
cmp
mov
sub
push
mov
ljmp
add
sub
xchg
xchg
xchg
ljmp
pop
nop
push
fstl
arpl
call
out
lods
mov
into
or
xchg
in
fsubrs
jmp
cmpsw
in
test
cmp
dec
mov
xchg
and
cltd
dec
mov
scas
dec
test
mov
pop
pushf
adc
movsb
pop
leave
xchg
pop
push
cmp
js
inc
jns
subb
es
push
insb
cmp
or
cmp
shl
inc
or
xchg
mov
fcoml
xor
inc
mov
std
into
test
push
loope
int3
andb
adc
shrb
or
pop
jno
jno
add
repz
xchg
cmc
cmp
pusha
jns
inc
xchg
cmp
xchg
mov
test
loop
add
jmp
xchg
enter
movsl
mov
mull
ret
jo
roll
hlt
mov
aaa
fldl
sub
div
lods
nop
ja
mov
in
jne
mov
loop
inc
imulb
mov
sbb
clc
inc
push
divb
jno
inc
bswap
fldenv
je
lcall
hlt
inc
xor
hlt
repz
add
cmp
adc
testl
or
sub
cmp
mov
sti
dec
jns
imul
les
mov
xchg
mov
pop
mov
xchg
cmp
xor
test
add
sub
mov
in
scas
and
cmpsb
movsb
xchg
hlt
mov
je
add
mov
mov
std
adc
add
xor
adc
mov
in
or
add
mov
mov
scas
loope
adc
adc
cld
push
jmp
outsl
lods
sub
or
mov
cmc
out
jno
inc
cmp
adcb
push
scas
mov
or
repnz
pop
mov
jecxz
push
shrb
lea
mov
adc
icebp
cmpsl
lods
and
ret
or
loope
hlt
xor
movl
add
imul
cld
adc
call
jns
cmp
pop
dec
mov
mov
rorl
adc
push
mov
adc
les
cmp
inc
stos
div
mov
cltd
push
sti
nop
mov
mov
jmp
ret
hlt
add
cld
enter
shl
clc
hlt
lcall
mov
pop
adc
or
int3
std
add
sarb
cs
mov
icebp
loope
jl
push
icebp
xchg
sub
mov
les
scas
sub
add
filds
or
xchg
or
test
sbb
pop
cld
hlt
jo
xor
outsb
pop
xchg
xchg
testb
mov
sub
in
xchg
xor
mov
and
push
jmp
hlt
mov
hlt
jecxz
dec
or
hlt
add
sub
out
sbb
pop
ret
mov
out
ret
test
hlt
inc
mov
hlt
enter
adc
cmp
adc
cli
and
push
movsb
mov
and
popa
push
jns
add
std
out
mov
lea
hlt
cmpsb
or
les
push
xchg
jle
addb
xchg
or
inc
loop
and
mov
push
or
add
jbe
mov
fistps
inc
scas
xchg
sbb
mov
push
mov
cli
and
test
push
sub
lahf
add
popa
aas
push
int3
fistpll
ljmp
pop
pop
adc
movsb
xor
icebp
sbb
mov
clc
inc
cmp
aas
mov
xlat
in
mov
push
push
les
out
ljmp
mov
fsubrp
es
shr
sub
lods
ss
pusha
scas
stc
add
outsl
mov
sub
or
cmpsb
adc
dec
push
in
xchg
jo
gs
adc
mov
pushf
in
adc
cwtl
hlt
in
sbb
and
mov
in
enter
movsb
push
pop
xchg
ja
push
testl
xchg
ljmp
xchg
or
or
xor
add
and
xchg
adc
test
sbb
sbb
testl
scas
outsb
pop
outsb
add
jne
cmp
mov
mov
inc
sti
push
cmp
dec
sti
hlt
adc
mov
xor
in
inc
xchg
or
inc
sub
inc
mov
mov
mov
mov
push
in
loop
and
iret
shr
mov
sub
sbb
xlat
inc
and
xchg
mov
mov
lock
fsubs
dec
test
sbb
sbbl
mov
cmpsl
pop
sarl
scas
nop
loopne
sub
add
call
mov
hlt
inc
sbb
pusha
mov
repnz
dec
mov
jb
mov
mov
push
inc
inc
mov
add
add
push
xchg
hlt
lock
jbe
setno
sub
scas
pushf
mov
jmp
repnz
pop
das
dec
and
mov
pushf
dec
or
shll
ljmp
lea
shlb
xchg
lret
imul
jb
jp
add
movsl
or
sti
inc
pop
add
add
imul
xor
xchg
pop
and
xchg
xor
jo
pop
sbb
xor
es
ja
sar
movsl
or
test
add
push
mov
push
fstpt
push
xor
fidivs
xchg
sub
stos
add
pop
jbe
inc
cmp
test
pop
or
hlt
enter
xchg
xor
mov
xchg
jae
cmp
syscall
or
loope
push
and
cmp
inc
cld
mov
pop
pusha
add
or
cltd
push
stos
shll
rcr
icebp
pop
or
mov
add
leave
pop
xchg
pop
in
cmp
int3
sbb
fmul
xchg
jno
sub
inc
hlt
and
mov
lock
in
cmp
rcrb
or
das
cmp
push
mov
add
lds
cmpsb
inc
dec
mov
andl
daa
sti
pop
cmp
adc
adc
lea
jle
outsl
adcl
and
orl
mov
iret
fdivl
xchg
stc
cmp
lock
cmp
and
push
push
inc
jge
push
and
lods
sbb
sub
negb
and
imul
pop
mov
cmp
enter
les
dec
mov
xchg
xchg
enter
jb
xorl
or
inc
fstpl
in
mov
sub
xor
mov
outsl
cmp
and
icebp
movb
aad
mov
into
or
xchg
not
aam
fmul
xchg
sub
mov
xchg
scas
int3
or
test
in
int3
sub
mov
mov
adc
rolb
xchg
testb
int3
inc
sub
sbb
insl
and
sbb
fstl
sub
add
mov
rorb
pushf
sbb
cld
jo
int3
jp
fs
pop
mov
pop
xchg
inc
jg
mov
sub
hlt
add
test
or
add
dec
dec
sahf
xor
shrb
mov
mov
test
jbe
out
mov
insl
div
jo
hlt
lret
test
mov
leave
push
in
ja
mov
lret
sub
mov
add
push
sub
adc
push
out
les
loopne
sub
lods
and
add
popa
or
sub
inc
dec
add
dec
aaa
fwait
mov
pop
mov
add
xchg
sarl
cld
out
xchg
dec
loop
jg
adc
lahf
pop
or
nop
lods
mov
ficoml
lock
mov
iret
and
adc
mov
add
jge
jmp
movb
mov
daa
push
mov
pop
xlat
adc
sahf
and
xchg
mov
ret
loop
push
test
cwtl
rcll
movsb
test
jl
mov
std
cmpl
sbb
xchg
inc
mov
xchg
mov
clc
and
lahf
dec
mov
add
inc
push
dec
inc
mov
mov
xor
fidivl
mov
cld
sahf
sar
neg
out
xor
scas
testl
adc
xchg
pop
dec
data16
add
incl
mov
data16
sub
push
cs
mov
enter
xor
popa
xor
inc
sbb
mov
shll
dec
hlt
push
int
push
lret
test
movsl
dec
and
sub
xchg
test
in
lock
dec
sbb
bound
dec
and
repnz
stc
stos
push
mov
test
hlt
int
subl
pop
pop
add
enter
ds
je
cmpsb
into
inc
or
cmpsb
sub
jmp
ret
neg
stc
or
icebp
push
mov
cmp
pop
or
or
push
mov
mov
ftst
xchg
in
and
mov
mov
int
cs
aaa
clc
loop
xor
decl
inc
add
in
or
ret
aaa
add
ds
les
test
mov
or
fidivl
divl
lret
popf
mov
inc
mov
repnz
inc
stc
aam
mov
adc
mov
les
or
hlt
sbb
outsb
mov
mov
cli
clc
data16
mov
inc
push
push
loop
push
inc
fdiv
cmc
push
mov
dec
inc
add
pushf
jge
cmpb
aam
movsb
xor
fcmove
inc
out
lcall
cmp
lock
inc
les
mov
insl
add
mov
je
push
je
loop
jmp
add
push
les
shll
hlt
hlt
xchg
mov
inc
jl
sub
push
in
das
hlt
jne
or
out
scas
clc
repz
lods
hlt
stos
pushf
out
adc
mov
mov
inc
xor
jge
ret
push
xchg
xchg
jg
push
or
mov
add
lock
dec
and
orb
lea
or
cld
ja
mov
inc
add
mov
inc
imul
inc
bound
sti
lret
hlt
pop
pushf
insl
add
sahf
sub
hlt
sbb
call
out
leave
adc
inc
mov
mov
xchg
ljmp
fidivrl
rorb
inc
cld
aas
mov
test
add
les
imul
sub
jp
adc
inc
pop
mov
add
test
xchg
nop
pop
mov
into
jb
fadds
test
inc
icebp
cmp
or
lea
loope
in
adc
inc
xchg
sub
test
lods
mov
or
popf
das
leave
iret
inc
rolb
pop
sbb
inc
aam
cmpsb
or
push
push
inc
add
nop
or
adc
mov
cli
sbb
push
hlt
ret
test
mov
shlb
jnp
inc
push
adc
push
or
sbb
ror
test
cmp
xchg
cmpb
and
sbb
inc
push
add
inc
add
push
xchg
addb
stc
mov
push
sub
addb
fdiv
or
mov
jl
pop
inc
push
xchg
mov
filds
jno
or
aad
hlt
inc
xchg
or
hlt
mov
ljmp
xor
leave
mov
out
or
incb
mov
sahf
or
lods
xchg
sub
ds
jbe
sub
cmp
iret
pusha
scas
aad
pushf
pop
inc
mov
es
loope
mov
cwtl
add
sub
pusha
push
lock
insb
mov
mov
faddp
enter
mov
fistl
fwait
mov
into
adc
std
mov
in
pop
mov
adc
notb
pop
pusha
enter
xlat
push
enter
mov
popf
iret
pop
inc
les
jge
xchg
hlt
mov
or
test
ret
xchg
movsl
fistpl
bound
inc
push
adc
jg
or
inc
into
jnp
push
add
push
adc
popf
or
cmp
push
adc
or
mov
test
xor
test
inc
lret
nop
jmp
jp
mov
jmp
inc
rorl
lea
cltd
leave
mov
cmp
mov
jg
clc
cltd
add
and
icebp
ljmp
jmp
pushf
and
jge
sub
jmp
insl
das
mov
adc
and
jne
cmp
xchg
cmpsl
mov
xor
imul
loop
and
in
or
insb
adc
mov
in
xchg
ud2
add
add
jp
jmp
jns
sub
rcr
or
ficoml
cmp
cld
cld
inc
sub
fimuls
into
cmpsl
cmp
hlt
jno
ficoms
out
sub
lods
push
sub
jl
mov
push
call
out
cwtl
arpl
xchg
pop
push
ret
mov
mov
iret
xor
ret
pop
push
and
inc
mov
add
jmp
push
or
ret
lahf
mov
ret
hlt
and
fcmovb
rorb
sub
fldenv
scas
psllw
and
into
movsl
rcl
adc
mov
orl
scas
mov
fcoml
out
xor
add
test
shl
mov
sbb
push
inc
pop
push
push
cmpsl
hlt
inc
push
in
cmp
or
fsubrs
or
sbb
pop
fstps
mov
popf
je
lahf
rcrb
add
sbb
and
inc
enter
mov
cmp
dec
aam
fmuls
nop
out
or
lock
lret
mov
sbb
lods
test
push
movsb
fimull
fimull
mov
sub
fisubrl
sbb
sub
sbb
mov
or
arpl
es
cmpsl
xchg
add
cwtl
xchg
or
cmp
adcb
pushf
sti
push
sbb
shr
stc
hlt
mov
or
sub
popa
and
cli
leave
out
mov
sarb
pop
xchg
sahf
sub
pushf
dec
mov
pop
icebp
out
test
test
ljmp
jne
orb
lret
ljmp
mov
or
test
xchg
daa
pushl
mov
xchg
dec
lret
mov
jl
mov
dec
jno
shrb
addr16
jno
jns
repz
dec
mov
dec
jb
cld
mov
lret
ljmp
xchg
ljmp
shr
sti
push
xchg
std
mov
push
cltd
das
mov
xchg
xchg
sbb
icebp
aad
popa
mov
insl
mov
jb
hlt
xchg
icebp
gs
dec
outsb
or
or
repz
jge
mov
test
repnz
jl
test
aas
sub
sub
jne
out
xor
inc
in
iret
fdivp
dec
sahf
jg
inc
sbb
mov
inc
sub
add
cmp
inc
and
mov
mov
and
push
cmpb
mov
test
mov
icebp
imul
mov
inc
loope
fdivrs
pop
out
jnp
xlat
ret
flds
rcl
mov
inc
xor
xor
push
popa
sbb
xchg
pop
cmp
adc
daa
loopne
sub
scas
popa
cmc
and
sub
cmpsb
les
arpl
adc
jnp
pop
jp
rcll
hlt
xor
push
dec
lcall
push
cwtl
shlb
sub
sbbb
les
inc
sub
andb
loope
push
pushf
xchg
xchg
mov
or
add
je
loope
icebp
mov
test
sti
stos
add
hlt
mov
xor
mov
loope
aam
adc
into
loope
or
jle
adc
and
hlt
mov
pop
fldcw
pop
or
and
lret
push
repnz
hlt
insb
inc
pop
lock
cld
push
jmp
hlt
hlt
xchg
in
fisttps
adc
daa
xchg
cli
filds
hlt
mov
rolb
test
xchg
dec
mov
push
or
test
and
push
fmul
aam
mov
jnp
push
imul
mov
neg
mov
test
jge
sbb
pushf
mov
mov
cmp
mov
adcl
jmp
repnz
mov
mov
dec
out
jne
xor
into
or
jo
adc
les
aas
imul
mov
data16
stos
hlt
cltd
pop
mov
and
add
hlt
jnp
pop
push
stc
stos
or
sysenter
mov
mov
mov
push
or
in
push
add
test
xor
xor
jne
xchg
add
stos
push
test
ljmp
popf
loop
add
in
cli
inc
lds
pushf
or
ljmp
add
cltd
xchg
or
fiaddl
pop
adc
ret
lock
jae
cld
mov
in
jnp
mov
das
xchg
push
ljmp
inc
fdiv
cmpsb
dec
enter
xchg
shl
loop
xchg
dec
adc
mov
push
stc
add
push
pushf
cmp
pushf
aas
imul
lahf
xor
cmp
hlt
imul
fists
mov
test
bound
or
ljmp
dec
das
lret
xchg
mul
xchg
add
push
std
jb
shl
push
mov
out
mov
pop
mov
aam
or
add
sub
hlt
ds
xchg
jbe
sub
ljmp
sub
mov
xor
jno
out
or
lea
iret
push
mov
add
outsl
data16
call
fcoml
rcll
int
sti
pusha
sub
out
add
rorl
mov
pusha
xchg
stos
or
mov
call
sbb
fisttpll
loope
pop
xor
sub
dec
cmp
arpl
lock
inc
jl
mov
adc
mov
mov
out
dec
loopne
mov
lret
lods
mov
scas
xchg
push
sbb
mov
jmp
sub
push
lret
mov
es
imul
popf
xor
pop
outsb
add
andl
sub
push
popa
cs
xor
fadds
dec
jno
dec
jbe
notb
test
testl
jl
repnz
xchg
add
xchg
xor
fdivl
sub
jl
push
ret
test
in
sub
test
push
jge
clc
test
mull
and
xor
js
add
or
xchg
mov
hlt
enter
mov
scas
mov
push
pop
mov
jbe
fsubrs
or
dec
push
popf
out
adc
mov
dec
jno
xchg
sbb
jae
pop
inc
pop
shrl
sbb
loop
cmpb
fnstsw
leave
shl
mov
cmp
jecxz
orb
pop
dec
mov
in
outsl
add
les
jmp
popf
out
out
or
pop
divb
aas
or
nop
addb
sub
je
and
test
test
inc
xchg
loop
pop
hlt
xchg
mov
sbb
adc
mov
sub
dec
pusha
mov
les
pop
ret
data16
mov
scas
pop
hlt
cmp
out
cmp
test
add
popa
or
testl
stos
repnz
mov
fisttpll
adc
jbe
xor
in
or
sbb
xchg
mov
sub
imul
ljmp
pop
cwtl
cltd
mov
imul
lahf
andb
push
mov
stos
sbb
loop
xchg
lock
fstl
repz
data16
fidivrs
mov
push
push
or
push
mov
pop
lret
rorb
aas
insl
movsl
stos
dec
idiv
ret
rorl
test
add
mov
add
mov
iret
mov
mov
pop
push
cmc
or
jno
inc
push
mov
push
push
andb
xor
pushf
pop
mov
lods
hlt
adc
xchg
test
notb
sub
int3
pop
pop
inc
jg
push
xor
stc
xor
stos
jno
pop
mov
mov
jecxz
aad
jnp
pop
repnz
ffree
push
addr16
ljmp
add
xor
mov
into
mov
stos
hlt
mov
mov
and
cmp
jno
ret
je
push
out
frndint
and
aas
adc
call
lret
xor
mov
outsb
out
and
jnp
inc
pushf
mov
fsubrs
pop
jle
inc
cmp
cmpsb
xchg
fcompl
adc
sub
xchg
or
sbb
hlt
mov
je
mov
sub
sbb
dec
cmp
add
and
shl
adc
adc
sub
loope
dec
and
ret
mov
inc
hlt
jmp
decl
or
and
dec
loop
ficoms
or
gs
aad
nopl
hlt
in
push
jno
sbb
push
sbb
push
ret
cld
adc
pop
aam
pop
mov
push
mov
pop
mov
loope
sti
push
xor
lret
daa
fisttpll
ret
or
dec
je
mov
jo
shl
sbb
into
xchg
xor
jb
inc
pop
pop
arpl
cld
sbb
mov
cld
lock
or
test
inc
cmp
stc
pushf
repz
inc
and
cmp
jbe
out
ret
xor
push
push
test
enter
adc
pop
in
pop
cmpsb
leave
dec
jns
clc
push
adc
ljmp
rcll
jmp
lods
and
out
mov
sub
scas
or
ljmp
popf
mov
jo
add
sub
loope
push
imul
hlt
lret
js
gs
mov
pop
adc
push
inc
dec
dec
push
andb
jbe
dec
jnp
inc
call
push
jle
subl
pop
mov
push
add
pop
push
ds
jne
adc
or
mov
jns
ret
mov
mov
and
hlt
xchg
je
sbb
jb
aas
mov
add
mov
cld
inc
dec
test
shl
and
in
inc
mov
icebp
cmc
std
push
jp
and
xchg
push
fwait
or
pop
xorb
subb
fsubrl
fsts
xchg
aas
repnz
sahf
mov
ret
mov
aam
mov
sbb
daa
or
inc
stos
hlt
mov
xor
lock
lahf
pushf
xchg
mov
jmp
mov
xor
or
push
js
dec
sbb
jp
mov
or
hlt
push
add
mov
cwtl
jecxz
cld
test
xor
test
inc
icebp
dec
push
or
roll
and
scas
negl
fiaddl
test
faddl
cmp
sbb
jns
add
icebp
addr16
into
mov
ficomps
xchg
xchg
icebp
adc
pop
das
inc
aad
cli
rcll
jae
les
pushf
push
inc
and
inc
pop
add
loopne
add
mov
cmp
pushf
or
inc
ljmp
pop
fnstenv
jmp
push
sbb
ja,pn
mov
xchg
cmc
or
push
cmp
xchg
add
adc
push
and
leave
subl
xchg
xor
cli
lret
xchg
flds
sbb
jns
push
stc
cmp
int3
incb
mov
mov
add
cltd
push
jle
mov
xchg
cli
xchg
push
stos
mov
push
add
les
into
addr16
push
dec
ljmp
ffree
ret
out
or
push
mov
xchg
cld
xchg
addl
cmpsb
xchg
insl
xchg
enter
add
inc
cmp
test
xchg
mov
adc
xorl
mov
sub
popa
hlt
xlat
scas
mov
mov
push
xchg
data16
pop
push
add
lods
and
les
sub
xor
and
lock
inc
call
lock
jl
xchg
mov
fmul
inc
push
lock
inc
mov
and
bound
mov
lods
push
sbb
xchg
dec
pop
movsb
outsb
mov
push
or
fcoml
int3
into
or
or
pusha
push
jno
and
jno
add
mov
pop
add
das
test
cmp
pop
mov
pushf
lahf
cmpsl
imul
loop
xchg
xor
pop
mov
cli
mov
xorb
adc
sarl
dec
repnz
mov
mov
ljmp
frstor
stos
outsl
xor
loop
lret
stos
hlt
mov
push
outsl
loope
pop
shlb
add
push
jae
xchg
movsb
mov
jb
mov
imul
xor
jns
mov
std
inc
mov
aam
shlb
roll
mov
xchg
shlb
dec
jge
cli
or
xchg
or
ja
roll
out
push
flds
sbb
lret
cwtl
faddl
cmpsl
mov
jo
jns
xor
sub
mov
pop
xchg
divb
or
push
lods
loop
inc
loope
mov
sub
mov
mov
faddl
movsl
icebp
cmpsl
add
test
jno
dec
xor
jl
enter
scas
adc
dec
sarl
adc
jl
rorl
hlt
mov
sub
pusha
mov
in
test
sub
pop
and
mov
stos
or
inc
sbb
inc
hlt
push
lods
or
push
dec
test
sub
adc
test
lcall
sub
addr16
aam
mov
xchg
faddl
jnp
hlt
mov
cwtl
out
dec
addr16
mov
mov
aad
lret
nop
mov
ljmp
or
pop
push
std
inc
andl
sub
add
mov
and
outsb
dec
push
lea
adc
call
pushf
gs
cmp
inc
push
xchg
cs
fldcw
or
jno
xor
mov
jmp
fwait
dec
jmp
insl
mov
aad
mov
jbe
push
call
add
adc
mov
orl
adc
in
or
or
in
push
subb
lea
fidivs
test
xor
inc
dec
mul
les
mov
aam
jnp
and
dec
mov
movl
add
das
inc
xchg
jmp
jg
pop
in
popa
into
xchg
loopne
and
mov
mov
inc
idiv
mov
fcoml
adc
test
hlt
clc
jl
mov
out
scas
or
lahf
mov
incb
test
pop
cmp
aas
add
call
inc
hlt
adc
testl
mov
dec
rolb
cmpsl
push
sahf
pop
push
pushf
jbe
xchg
iret
push
jg
adcl
mov
mov
mov
lock
arpl
cmpsb
les
testb
lret
lods
sahf
and
testb
scas
shl
pop
movsl
mov
mov
sarl
xor
add
xlat
sbb
pop
xchg
out
push
mov
hlt
cmpsb
sub
mov
ja
mov
jno
push
jge
insl
ret
xor
call
lods
sub
mov
mov
sarl
xchg
das
clc
leave
rclb
mov
ficoml
cli
inc
lahf
lock
dec
and
mov
mov
mov
xchg
inc
fs
jb
repnz
or
pop
dec
out
iret
das
popf
mov
fmuls
hlt
mov
fiaddl
imul
adc
or
pushf
into
or
jo
out
xchg
lcall
rorl
xchg
fs
ss
lcall
mov
flds
push
mov
pusha
lcall
cmpsl
mov
mov
hlt
cmpsb
gs
xchg
ljmp
xchg
lcall
ja
and
lcall
inc
sub
dec
inc
jmp
mov
cli
push
fidivs
add
mov
pop
stos
mov
xchg
mov
les
mov
or
cmp
popa
popa
test
jecxz
aaa
push
jae
out
and
and
out
lcall
out
lcall
test
mov
mov
inc
jne
subl
clc
push
push
loope
or
mov
jle
or
add
add
mov
out
sbb
or
mov
das
repnz
push
mov
mov
mov
lods
hlt
xchg
cmpsb
xchg
xor
in
pop
mov
xchg
cld
iret
stos
sub
imul
les
into
jge
shrb
js
imul
and
adc
repz
test
out
xchg
and
mov
popa
or
xor
lcall
jge
mov
jle
mov
nop
mov
xchg
and
sti
or
insb
push
pop
movsb
pop
adc
js
imul
popa
push
adc
xchg
adc
hlt
cmp
rorl
add
push
adc
sub
hlt
jg
or
das
sbb
or
push
add
xchg
out
ret
push
xchg
and
test
cmp
or
addb
hlt
in
adc
sti
mov
insb
add
test
adcl
mov
lcall
ficoml
hlt
pushf
sub
scas
mov
dec
xchg
cmp
test
cld
xor
hlt
push
mov
pop
imul
mov
lock
mov
pop
add
in
lock
xor
addb
pop
fldenv
mov
jnp
mov
mov
xchg
xor
mov
sub
lcall
ljmp
add
pushf
sbb
adc
mov
in
cwtl
inc
push
sti
jle
repnz
pop
insl
mov
out
push
fwait
xchg
repnz
lds
hlt
out
imul
pop
cld
sub
aaa
fiaddl
sub
push
fsubrp
sub
dec
jns
scas
sub
stc
rcrb
or
aam
call
pop
inc
sbb
jecxz
push
icebp
scas
and
repnz
sub
xchg
mov
shrb
mov
and
push
push
xchg
imulb
jecxz
ds
xchg
jecxz
js
adc
push
cli
hlt
loop
es
lods
lret
pop
imul
loope
imul
movsl
mov
cmp
mov
pop
cltd
or
sbb
lods
test
jl
cmpsb
dec
test
fxch
push
outsb
ja
add
mov
int
inc
pop
in
mov
filds
std
xchg
push
icebp
ljmp
pop
mov
inc
insb
xor
cmp
lea
fidivrl
dec
adc
rcll
gs
sbb
clc
stos
inc
ret
push
pop
xchg
sbb
mov
xchg
rcr
popa
adc
mov
and
repnz
mov
adc
cmp
addl
shll
mov
icebp
in
sub
mov
jno,pt
cmp
in
add
pop
lock
add
bound
pop
sub
add
mov
or
jmp
test
mov
nop/reserved
jbe
cmpb
daa
sbb
jg
sub
sub
fwait
jo
push
push
je
ljmp
add
or
scas
adc
jp,pn
fwait
insb
test
shlb
pop
sbb
adc
jmp
dec
lods
push
pop
adc
fisttpll
ds
adc
sub
adc
inc
lret
xchg
js
dec
sub
mov
test
push
jmp
xchg
imul
or
mov
cmp
gs
adc
arpl
clc
in
or
test
adc
mov
push
pushf
jns
xchg
mov
dec
ret
shrl
scas
dec
fistps
in
xchg
stc
mov
sub
add
dec
jge
xchg
push
leave
es
popa
adc
or
push
sbb
lds
sub
xchg
mov
mov
hlt
addr16
sub
int3
push
loop
and
int3
stc
lods
mov
push
rorl
stos
push
jno
adc
addl
sub
rorl
jle
subl
in
test
add
sar
add
lahf
push
flds
inc
ret
std
shrl
adc
out
cmpsb
das
aam
mov
adc
icebp
cmpsl
mov
aad
or
hlt
push
xchg
mov
dec
xchg
mov
adc
add
cld
hlt
jns
adc
incl
push
pop
shrl
sahf
sub
shlb
mov
mov
xorl
xchg
sbb
adc
es
mov
hlt
in
scas
jge
pop
lods
cmp
sti
adc
dec
imul
xchg
jle
mov
cmp
loope
test
or
cltd
sar
add
xor
mov
in
inc
lahf
cmp
lods
pop
mov
sub
mov
pop
adc
cmc
fsts
fadds
mov
roll
outsb
nop
jecxz
inc
mov
add
cmc
push
dec
movsl
shlb
mov
mov
in
out
push
movsl
rcrl
out
adc
pop
outsl
inc
data16
add
xchg
cltd
sub
int3
lret
cmc
jmp
js
imul
jo
pop
mov
pop
scas
subb
lods
std
pop
out
insb
lcall
add
clc
adc
push
pushf
data16
ret
data16
and
pushl
add
rclb
aam
test
fdivl
and
mov
xchg
and
inc
inc
inc
stos
xorl
lds
xchg
xchg
xor
das
inc
cli
mov
and
sbb
add
xchg
test
xchg
dec
test
jmp
mov
popa
cli
cmc
mov
jge
inc
popf
mov
das
test
hlt
pushf
push
jge
mov
bound
stos
and
jp
fimuls
adc
mov
ret
rcrl
jp
xchg
and
in
cmp
mov
push
repnz
jge
scas
mov
adc
inc
clc
or
hlt
jecxz
and
stos
add
addr16
dec
stos
push
clc
pusha
jl
enter
adc
sub
mov
pushf
bound
les
or
std
aad
push
sub
or
test
push
push
gs
xor
or
lock
fidivl
cmc
sahf
sub
stos
push
jle
idiv
cmp
jl
stc
sti
xor
or
lahf
fmull
push
outsb
ror
mov
sti
daa
lock
jp
insl
mov
mov
add
or
out
or
pushf
test
and
into
or
mov
rolb
out
sub
and
fdivl
mov
les
out
push
adc
jl
enter
jl
enter
mov
sbb
bound
ret
mov
mov
pop
pop
xor
sbb
jnp
loope
jle
aas
xor
es
hlt
cmpsb
stos
sarb
mov
or
or
adc
inc
pushf
into
mov
ja
and
pop
lea
and
iret
js
into
pop
ret
mov
pop
adc
in
adc
and
es
add
cwtl
inc
mov
data16
push
lods
adc
push
pop
nop
loopne
adc
push
mov
repz
mov
sarl
subb
in
inc
pop
cmpb
fdivs
mov
inc
fcompl
pop
je
add
in
inc
inc
mov
xchg
lods
in
mov
cltd
in
dec
cwtl
hlt
imul
call
lock
jle
cmp
les
filds
sub
mov
ror
shll
shlb
idivb
push
add
inc
hlt
add
or
rolb
mov
add
ret
loope
push
clc
xchg
add
hlt
and
add
mov
and
je
adc
jae
mov
pop
push
mov
push
icebp
ja
shrl
push
lods
and
fnsave
lods
sub
cmp
pop
sub
addr16
ficompl
hlt
push
ret
aam
lret
pop
clc
cmp
push
dec
xchg
in
aad
xchg
loop
xchg
lds
adc
ret
push
cmp
pop
fldcw
iret
push
jb
pop
fs
mov
popf
clc
lods
pop
lock
inc
scas
sti
inc
hlt
mov
jne
jbe
and
hlt
inc
and
pop
and
sub
pop
je
fwait
xor
loope
andb
xchg
mov
insb
cmpsl
adc
dec
cmc
and
imul
add
hlt
xor
xchg
mov
cmc
sbb
pop
xchg
add
shlb
push
cli
js
mov
sbb
pop
cmp
add
dec
pop
push
xchg
mov
in
arpl
pop
popa
fwait
data16
sbb
push
cltd
ffree
into
int
imul
shl
or
lods
xchg
mov
lods
cmp
hlt
lds
mov
test
lods
clc
pop
mov
stos
mov
out
pusha
pop
in
out
mov
cs
jbe
cmpsl
addb
out
lahf
aam
in
daa
or
imul
cmp
lcall
adc
xchg
imul
xlat
fcom
movsb
xor
inc
xchg
xchg
sbb
test
and
or
or
add
pushf
xor
test
lahf
scas
xchg
out
add
xchg
mov
adc
dec
nop
call
mov
sti
xchg
mov
push
mov
mov
dec
and
sub
adcb
clc
fiaddl
lock
cmp
add
aam
jg
fldcw
loopne
in
push
cmp
enter
push
lods
cmp
mov
mov
cmc
cmp
cmp
es
or
jns
aad
call
or
arpl
addr16
add
icebp
cwtl
sbb
pop
pop
sub
xor
sbb
dec
mov
test
cmpsb
mov
pop
lcall
push
or
adc
and
cwtl
xor
pushf
daa
or
push
push
lcall
add
xor
add
pop
xchg
push
test
aas
sub
es
out
dec
pop
mov
fisttpl
or
ret
clc
dec
xchg
mov
jb
mov
ja
pop
xchg
cld
adc
mov
cmp
dec
scas
popf
xor
inc
clc
inc
int
jge
insb
inc
fldenv
jnp
cs
xchg
xchg
pop
cs
clc
push
nop
mov
mov
push
xchg
add
cmp
push
in
push
push
sbb
nop
mov
sub
out
jne
js
jae
or
add
sub
sbbb
cmpsb
cmp
into
xor
jae
shrb
arpl
loope
and
imul
inc
inc
into
add
push
xchg
jno
or
dec
push
out
xchg
sub
dec
push
repz
out
jbe
aad
lock
and
fcmovb
or
dec
add
and
ficompl
fisubrl
push
stos
stos
repnz
cmpsl
in
jns
push
inc
and
es
popa
ret
ljmp
test
cmpb
xchg
jg
dec
adc
xor
xor
lea
ljmp
lds
addl
mov
dec
je
in
fwait
mov
lods
lock
lods
pop
mov
cmp
mov
xor
sti
and
arpl
inc
or
filds
jne
test
mov
subl
and
inc
pop
cld
add
pop
and
dec
xchg
das
xlat
sub
cmpsb
dec
lret
and
xchg
mov
jno
xchg
mov
mov
stos
jno
xchg
jmp
repz
inc
popf
sbb
icebp
mov
scas
pop
sbb
or
test
pop
aas
fsubrs
in
hlt
mov
and
lahf
jecxz
cltd
cmpsb
mov
or
test
and
fldenv
pop
cmp
bound
dec
and
pop
aam
mov
jmp
adc
jle
lods
xchg
inc
mov
add
call
dec
test
and
sbb
repnz
rcrb
imul
and
adc
mov
and
push
jb
cmp
shll
or
int3
cmp
sar
add
xor
jp
xor
mov
mov
popl
xchg
cmpsb
mov
sbb
and
xchg
pushf
clc
cmp
inc
dec
mov
xor
mov
pop
mov
jbe
cli
js
cwtl
push
add
imul
jo
rorl
lcall
cli
cli
add
ds
jg
dec
xchg
jl
or
cmpsb
push
loop
bnd
xor
push
mov
pop
sti
sub
fs
sub
fsts
push
push
jmp
cmp
stos
cwtl
lods
and
hlt
push
cmp
aas
ffree
or
add
popa
imul
inc
mov
xchg
cmpsb
pop
les
inc
imul
mov
mov
mov
cmp
adc
jmp
mov
pop
outsb
enter
inc
scas
pusha
sarl
or
call
icebp
mov
mov
inc
xchg
les
adc
or
add
outsb
mov
mov
hlt
movsb
jge
cli
xor
popf
xchg
les
or
std
or
ljmp
mov
movsb
push
pop
cli
and
rorl
fwait
mov
inc
rorl
rol
stos
lods
mov
push
jns
test
mov
or
mov
mov
adcl
inc
dec
mov
or
mov
dec
frstor
cmp
mov
mov
xchg
lret
push
sbb
mov
mov
xchg
rolb
stos
in
scas
mov
test
mov
mov
cld
insl
adc
mov
ja
pop
inc
in
shll
lods
push
adc
test
push
jo
stos
stos
inc
dec
in
pop
xchg
outsl
pop
loope
test
mov
push
jbe
insb
mov
mov
js
adc
mov
mov
test
scas
loope
pop
push
xorl
jns
test
mov
call
push
mov
mov
mov
fstps
pushf
sbb
scas
ret
lea
les
outsl
pushf
fmull
lcall
filds
cwtl
cwtl
inc
fsubr
cld
xchg
adc
or
mov
mov
cmp
sbb
inc
mov
xchg
les
stos
in
addr16
aam
or
push
pop
and
inc
dec
lret
cmp
or
pop
loop
add
fldenv
ljmp
jnp
xchg
shl
cmpsb
mov
pop
dec
mov
or
pushf
mov
adc
scas
sub
aam
push
lods
gs
adc
stos
and
nop
fldenv
xchg
jmp
movsb
fs
inc
adc
je
adc
mov
dec
cli
out
jo
inc
mov
pop
jle,pn
xchg
jbe
imul
stos
mov
fcmovnu
mov
mov
cs
icebp
shrl
ja
mov
cs
enter
lret
mov
mov
xchg
lock
xchg
dec
inc
insl
test
xchg
in
stos
and
jge
mov
cmpsl
or
or
test
jmp
mov
ljmp
jne
push
pop
cmc
sbb
cld
push
adc
mov
mov
and
cld
cli
push
mov
xchg
in
inc
in
sub
mov
clc
inc
mov
xchg
hlt
inc
insl
pop
xchg
push
jno
pop
mov
testb
fnstsw
outsb
or
in
stos
mov
mov
xor
xorl
repnz
dec
mov
mov
add
out
dec
jo
lock
lock
dec
xchg
fnstsw
or
jl
cmp
in
stos
mov
hlt
sub
push
adc
or
fldlg2
mov
cmp
jo
mov
dec
mov
inc
pop
xchg
call
mov
pusha
push
push
imul
outsl
xor
negl
inc
jns
test
in
les
lock
arpl
arpl
int3
mov
dec
push
push
push
testb
xchg
cmp
popa
jge
xchg
mov
dec
mov
cli
add
hlt
mov
imul
fisttpll
dec
loop
inc
mov
inc
insb
or
aad
sbb
pop
push
jns
test
sbb
cwtl
rorl
loop
push
and
and
add
clc
xchg
jnp
inc
sub
repnz
mov
pop
pop
fdivrp
sub
in
mov
mov
cmp
fdivr
xchg
mov
call
mov
pop
adc
push
adc
mov
mov
pop
adc
pushf
mov
fcoms
aas
shl
add
loop
push
adc
mov
xor
js
inc
jns,pn
cmp
aam
mov
ss
sub
pop
adc
sub
inc
fstpl
repnz
stos
add
rolb
rclb
lcall
sub
iret
and
pop
mov
into
push
adc
mov
mov
and
pop
mov
stos
mov
mov
aas
loop
push
adc
xor
pushf
insb
fmul
push
stos
mov
mov
adc
mov
or
pop
adc
sub
in
mov
jo
les
mov
movsb
outsl
inc
aas
adc
shll
fs
add
inc
and
or
dec
jbe
lds
inc
pop
out
xchg
scas
mov
or
pop
push
les
fs
mov
push
xor
mov
fsubrs
popa
pushl
cmpsb
mov
xchg
push
mov
lcall
jmp
or
test
loopne
mov
cli
cmp
push
mov
std
push
test
jae
inc
dec
push
add
inc
jl
lret
icebp
mov
pop
stos
enter
mov
cmp
dec
xor
adc
nop
sub
cld
test
inc
imul
andb
cmp
int
fimull
and
ret
pusha
inc
test
ret
frstor
pop
push
pop
pushf
cmp
push
movsl
icebp
xchg
loop
jmp
in
sbbl
push
mov
xor
in
insb
into
stos
dec
add
mov
mov
loop
repnz
pop
in
mov
mov
xchg
mov
fmuls
stos
pop
idivb
mov
dec
int
pop
xchg
loop
push
adc
rorl
sbb
mov
adc
test
add
mov
rcr
cmp
icebp
pop
adc
mov
fdiv
scas
inc
mov
pop
mov
and
lods
push
adc
or
adc
sarl
out
push
adc
ljmp
cmpsb
sub
clc
rcr
inc
jns
test
movsb
sub
aam
or
icebp
mov
cmp
movsl
pop
adc
pop
je
sbb
push
insl
sahf
test
xchg
imul
stos
mov
cmp
ljmp
and
mov
out
xchg
and
inc
les
icebp
fcoml
hlt
fs
sbb
sbb
fimull
and
push
subl
les
test
add
mov
inc
sub
mov
cmp
mov
xchg
stos
and
cs
insl
nop
test
nop
add
adc
outsl
enter
fisttps
jg
inc
sub
push
jo
mov
mov
push
jg
jmp
add
in
outsl
enter
dec
cld
inc
inc
fsubl
jp
ja
or
push
lock
xchg
or
mov
xchg
lret
adc
mov
jle
sti
out
fisubrs
ja
fists
subb
aaa
pop
test
add
xchg
mov
jg
or
jg
cmp
sbb
cld
sub
push
rcll
push
adc
mov
mov
and
es
clc
sub
mov
or
mov
pushf
inc
push
fisubrs
ja
fistpll
xchg
movsb
inc
push
sti
xor
lock
push
cmp
imul
sbb
push
into
add
scas
mov
adc
movsl
test
jae
decl
out
mov
jg
pop
repnz
lock
jnp
sub
mov
pop
out
jg
ret
mov
mov
sub
sub
mov
scas
cltd
jo
ljmp
cmp
push
sbb
arpl
push
adc
mov
mov
and
adc
jbe
scas
mov
bound
roll
in
lret
lock
inc
jns
test
loop
rorb
pop
push
mov
sbb
loopne
adc
mov
mov
repz
push
mov
mov
fmul
xor
faddl
push
fdivs
pop
lock
fiaddl
push
push
mov
in
and
enter
sbb
je
mov
stos
xor
mov
jnp
add
stos
and
jge
nop
std
mov
rolb
clc
cmp
not
inc
mov
inc
pop
aas
add
mov
in
stos
xor
mov
jno
loopne
int3
test
js
clc
lods
or
fldcw
cmp
jae
mov
imul
xchg
pop
cmp
push
sub
mov
cmc
shlb
cmp
adc
mov
inc
adc
hlt
andl
mov
cli
test
cwtl
mov
enter
in
imul
outsl
enter
dec
jns
in
jmp
les
cli
sti
jnp
dec
xchg
mov
mov
inc
iret
jge
dec
stos
or
rcl
dec
jp
xchg
imull
pop
jg
mov
ljmp
cmp
mov
push
cli
pop
mov
test
or
cs
fnstcw
cli
ja
dec
cmp
mov
cli
ja
aam
xchg
mov
gs
cli
decb
nop
pop
adc
sub
xlat
xchg
pop
adc
dec
mulb
push
icebp
mov
leave
mov
cli
ja
fimuls
and
xchg
mov
sti
lods
add
adc
mov
or
mov
dec
stos
add
cmpsl
mov
add
or
shrl
cmpsb
inc
sub
mov
in
sbb
cld
jns
mov
cmp
jbe
clc
and
test
mov
push
sbb
ret
mov
and
cmp
lea
cli
mov
push
push
cs
mov
fisttpl
adc
mov
mov
fisubs
sahf
or
cmp
jg
adc
jne
push
in
mov
stos
cli
jg
stos
ret
or
les
loop
sarb
inc
mov
inc
iret
pop
adc
mov
and
dec
ret
fists
xchg
sub
loope
dec
xchg
nop
push
adc
push
and
fists
mov
outsb
or
std
sbb
mov
adc
dec
or
adc
or
in
add
lret
push
pop
mov
and
jge
ss
lea
flds
cli
ja
pop
addb
fidivs
test
test
cli
xor
xchg
ljmp
cmp
cmpsl
loop
push
adc
xchg
movsb
pop
mov
or
jno
cmp
out
cwtl
push
pop
xchg
cmp
in
in
jp
jge
frndint
dec
enter
sbb
sub
rol
xchg
jno
mov
push
pop
xlat
ret
xchg
or
add
ret
es
mov
sbbb
mov
push
jne
dec
aam
data16
and
mov
clc
and
jg
dec
adc
je
xchg
or
decl
xor
fsin
jle
sti
or
mov
fists
push
scas
dec
push
mov
lock
in
sub
dec
jl
in
mov
out
inc
dec
fnstsw
lock
in
inc
mov
xchg
lret
outsl
ret
test
vshufps
icebp
stc
pushf
sbb
call
sbb
popa
dec
jnp
fucom
outsl
rcr
jo
pop
das
test
in
mov
mov
mov
dec
pop
adc
sub
mov
xchg
jns
movsl
in
sub
dec
mov
pop
jns
movsl
in
sub
dec
xchg
sbb
adc
fadd
stos
mov
pop
in
orl
add
movsl
in
sub
mov
mov
fsubrs
outsl
inc
mov
mov
stos
xor
mov
pop
add
shl
aam
xor
mov
mov
shll
rclb
mov
xchg
lods
pop
push
mov
push
pop
data16
cmp
lret
test
sub
or
rcrb
inc
sti
fimuls
add
inc
mov
lds
std
sar
mov
fcmovu
sbb
out
jl
adc
mov
test
sbb
lret
popf
push
push
add
lea
push
fstl
mov
pop
in
orl
or
test
and
cs
insb
add
mov
add
inc
jbe
test
add
and
pop
in
pop
xlat
or
cmpsb
fadd
adc
subl
lret
mov
repz
xchg
lods
xchg
and
filds
xor
or
ds
adc
gs
fs
stos
mov
fisttps
sub
aam
and
mov
dec
shrb
mov
inc
sbb
jp
push
test
jl
xor
std
mov
into
inc
loope
adc
in
or
repnz
mov
lret
lret
fst
or
enter
pop
jp
pop
push
fld
or
jmp
xchg
les
mov
jge
jle
scas
pushf
lock
ret
ret
sahf
popf
sar
mov
mov
inc
sub
loop
push
adc
pop
pop
ds
mov
mov
pop
jo
test
outsl
enter
dec
jp
mov
pop
lock
inc
insl
mov
pop
stc
mov
enter
mov
jno
cmp
fnstenv
fcmovne
or
shrb
mov
mov
jns
in
xchg
mov
mov
inc
sub
sub
scas
push
pop
xchg
mov
in
cmp
lods
stos
sub
xorl
pop
loop
push
adc
push
inc
jle
push
adc
push
mov
pop
and
cmpsb
jo
xor
stos
or
push
fmull
loope
xchg
scas
sbb
xor
adc
or
adc
add
mov
movq
mov
rcrb
mov
xor
adc
or
add
push
hlt
lods
pushf
movsb
or
movsb
hlt
sub
adc
stos
xchg
fldenv
mov
pop
hlt
mov
arpl
sti
push
ja
insl
mov
pop
decb
negb
sahf
sub
sbb
test
pusha
cmp
clc
cmp
lcall
jle
stos
mov
cwtl
dec
and
and
ficoms
mov
push
ss
stos
addb
aas
sub
cmp
xchg
stos
movsl
xchg
push
pop
lock
lock
inc
insl
xchg
test
xchg
add
stos
jo
nop
push
pop
xchg
outsb
cli
decb
cld
inc
mov
adc
xchg
mov
inc
ret
mov
mov
pop
adc
or
push
pop
mov
and
jge
testb
or
das
and
bound
push
int
mov
das
and
bound
mov
imul
in
sub
popa
rorb
pop
test
pop
pop
dec
addb
xlat
push
jmp
add
ret
push
js
lock
aad
fisttpl
adc
insb
add
hlt
push
adc
mov
pop
push
decb
fdivl
and
inc
dec
rolb
hlt
lds
ret
mov
int
aam
mov
loopne
ret
adc
lods
ffreep
push
movsl
or
adc
lock
mov
add
ljmp
or
lahf
aam
ret
pushf
inc
add
jge
pop
pop
sub
jmp
cwtl
je
jbe
xchg
mov
cmp
jb
cmc
leave
cwtl
jmp
bound
sub
notb
mov
icebp
jnp
xor
cld
jle
iret
jno
cld
jle
test
mov
idiv
mov
adc
and
lock
inc
insl
clc
movsl
in
sub
mov
shrl
mov
testb
pop
or
cs
pop
in
mov
inc
iret
into
add
repnz
mov
mov
mov
lock
push
loopne
inc
jns
test
out
sub
dec
mov
nop
outsl
enter
inc
dec
fnstsw
bnd
nop
fldt
ljmp
outsl
cwtl
ficomps
push
or
test
call
or
movsb
mov
push
or
loope
in
sbb
popa
xchg
lret
icebp
in
enter
sbb
pop
stc
or
push
or
loop
cld
sbb
adc
rorb
loopne
adc
mov
sbb
jo
push
fisubrs
stos
jb
dec
lret
fists
push
adc
mov
pop
mov
mov
jle
fs
or
fcoms
mov
xchg
movsb
inc
jmp
lock
jo
insb
sahf
push
and
add
addr16
test
push
incb
or
ffreep
sti
mov
rolw
pop
push
xor
mov
mov
fdiv
cs
xchg
sti
into
das
inc
out
add
outsb
xlat
out
push
sbbb
lea
lods
popf
mul
jle
add
jl
enter
leave
inc
mov
cmp
push
into
cmpsb
std
cwtl
xor
mov
lods
xlat
xchg
outsb
dec
pop
add
arpl
stos
adc
jle
fsubrl
aam
imul
imul
sarb
mov
jle
lock
push
pop
in
xchg
push
fnop
dec
enter
sbb
stos
adc
pop
cmp
into
into
inc
inc
ds
fisubrl
sarl
int3
push
adc
mov
mov
repz
loope
sbbl
push
adc
mov
mov
fisubrs
scas
cmp
enter
outsl
pop
mov
fists
sub
mov
xor
inc
mov
xchg
stos
inc
in
sbb
mov
inc
adc
jl
popa
mov
sbb
push
andl
push
mov
pop
aad
loop
or
sbb
sub
inc
gs
in
xor
xchg
inc
scas
add
fdivr
push
hlt
push
aas
mov
mov
lods
xchg
adc
add
subl
adc
or
and
push
mulb
lahf
rorb
test
or
sub
jno
test
sub
pushf
repnz
shl
pop
push
je
sub
mov
fstps
vpshlb
sbb
xchg
outsl
mov
cwtl
cmp
aad
cmpsl
inc
out
lods
xchg
test
cmpsb
fcmovbe
movsb
sub
test
or
dec
scas
xchg
pop
and
stos
pusha
mov
imul
lret
and
andb
push
andb
sub
dec
nop
jl
outsl
jmp
fisubs
int
lcall
add
in
xor
bound
inc
mov
fdivl
cli
insb
adc
test
sub
andl
cmp
or
test
sub
test
xchg
roll
jp
cmp
aam
or
mov
xchg
dec
rcr
sub
roll
sbb
das
nop
push
in
dec
inc
insl
in
cmp
test
loop
movsb
sub
cld
decl
inc
sub
mov
xchg
shlb
pop
or
adc
mov
xor
imul
jbe
jg
add
adc
mov
int
pop
lds
push
dec
add
dec
dec
sbbl
and
jo
daa
or
sub
cltd
xchg
xchg
xor
mov
push
xchg
hlt
push
lods
and
mov
lcall
les
lret
out
xchg
inc
and
hlt
jecxz
loope
sub
ljmp
test
out
add
or
xchg
fidivrs
inc
add
xchg
test
xor
or
cmp
enter
xchg
fs
cs
dec
add
enter
xchg
xchg
sub
jg
mov
lods
test
cmpb
movsb
adc
mov
xchg
and
mov
jle
cmp
cltd
push
inc
pusha
push
sbbl
insl
das
stos
out
les
insl
loopne
hlt
ljmp
andl
sti
loop
mov
roll
test
cmp
sub
xchg
jg
out
push
inc
faddl
leave
popf
inc
into
or
aaa
test
rclb
xchg
popf
add
loop
mov
push
mov
in
fimull
add
es
dec
or
mov
loopne
daa
int
push
jle
jno
add
adc
jnp
ret
stc
shlb
testl
mull
int3
mov
fcompp
int3
jno
lock
shll
hlt
loop
or
clc
roll
push
test
inc
mov
mov
pushf
mov
adc
sbb
adc
ret
inc
imul
orl
out
lea
pop
loope
mov
test
int3
sub
mov
inc
mov
add
test
add
and
mov
call
or
and
and
jae
rcll
sahf
mov
dec
inc
mov
pop
pop
movsb
repnz
cwtl
or
test
jg
in
ss
popf
mov
dec
test
ljmp
xchg
loope
imul
pusha
mov
cmp
mov
movsl
and
addl
cwtl
jae
in
popf
rol
xchg
mov
adc
test
es
inc
inc
jb
loopne
les
lea
add
mov
mov
stos
xor
pop
test
and
sub
je
sub
gs
cmp
xchg
xor
xchg
adcl
push
xchg
sarl
jmp
mov
loope
mov
repz
and
movsb
mov
dec
jl
mov
or
add
pushf
sub
ret
rcrb
dec
push
and
daa
enter
loope
mov
test
mov
jmp
out
xor
xchg
mov
inc
xchg
sahf
test
inc
fsubrl
and
nop
incl
lret
icebp
or
jle
int3
inc
dec
pop
stc
xchg
inc
or
fiadds
or
xchg
adc
mov
inc
push
or
bound
aad
mov
int3
outsl
pop
push
sbb
call
inc
test
hlt
repnz
js
push
push
mov
mov
fnstsw
and
lret
or
pop
test
stos
sbb
loopne
sbb
push
fiadds
mov
adc
adc
pop
sub
inc
lcall
movsl
xlat
dec
pop
xor
fs
pop
xchg
jno
loop
ret
cmpsl
ljmp
inc
jg
movsl
cmpb
cli
inc
inc
stos
movsb
mov
fiadds
or
adc
insl
notb
dec
push
push
sub
inc
scas
mov
cmp
jne
jl
push
loop
push
sahf
idivb
repnz
dec
jnp
inc
push
or
push
mov
fcmovnbe
dec
pop
mov
xchg
shrb
repnz
mov
scas
notl
movsl
add
shl
xor
mov
mov
cmp
mov
mov
dec
enter
add
mov
scas
mov
add
repnz
stc
mov
mov
cmc
adc
and
or
lock
jns
inc
shlb
adc
xor
xor
popa
add
in
jl
mov
punpcklbw
jp
adc
dec
push
inc
jbe
add
jno
bound
add
fiadds
xor
dec
gs
lcall
and
enter
pop
scas
clc
in
cwtl
mov
and
sub
movsb
pop
out
add
les
adc
cltd
scas
fsub
xchg
testb
nop
cwtl
mov
cmp
popa
sahf
mov
pop
ret
sbb
imul
push
les
xor
arpl
and
mov
xchg
inc
pop
mov
mov
xchg
inc
pop
mov
mov
push
mov
lcall
adc
mov
popa
pushf
sbb
pop
push
or
dec
mov
push
aam
ret
adc
test
cs
iret
mov
iret
popf
jno
mov
dec
jl
fbld
popa
sbb
test
test
mov
mov
or
xchg
fsts
test
sti
and
jne
sub
mov
iret
mov
and
adc
cmp
dec
out
nop
cwtl
add
loopne
xchg
mov
mov
mov
nop
xlat
jle
push
ja
adc
test
bound
lock
mov
adc
jo
sahf
mov
cltd
mov
jmp
jns
and
ret
roll
mov
test
mov
inc
or
mov
pushf
mov
hlt
stos
fcmovu
loope
out
pop
shl
dec
inc
lret
call
inc
cmp
dec
dec
out
enter
loope
jo
es
fcmovne
pop
xor
pop
add
cs
in
mov
sbb
cmc
flds
icebp
mov
mov
push
add
mov
lods
mov
pushl
imul
add
sub
mov
loop
mov
out
js
inc
or
gs
and
pop
sub
ficoms
ljmp
inc
dec
lds
loopne
fstp
jae
push
dec
xchg
mov
adc
stos
pop
pop
mov
testb
idiv
test
test
lods
mov
lret
jne
mov
icebp
es
adc
cmp
and
and
inc
je
scas
xchg
lret
ljmp
cltd
aam
lea
hlt
ds
inc
jnp
sbb
adc
mov
push
into
xor
mov
dec
adc
mov
loope
andl
out
jns
loopne
out
push
dec
addr16
and
hlt
sbb
xchg
or
inc
leave
or
cwtl
aam
nop
push
and
inc
xchg
stos
jecxz
lods
mov
cmpsb
outsb
das
mov
shrb
push
das
or
gs
jne
sbb
add
addr16
nop
sub
or
mov
mov
jl
sub
stos
xchg
push
jnp
addr16
mov
cwtl
adc
mov
addr16
dec
sbb
mov
out
xchg
les
mov
dec
xchg
enter
sbb
lods
mov
fisubs
xor
scas
out
inc
mov
or
and
and
cli
sti
add
push
vpcomub
mov
icebp
and
enter
je
cld
mov
ljmp
push
xchg
pop
push
cwtl
ret
out
xchg
add
shlb
lock
mov
mov
mov
fiadds
or
icebp
and
add
dec
jb
bound
cmp
xchg
inc
mov
out
inc
addr16
insl
sbb
dec
pusha
mov
and
out
jp
sub
cwtl
mov
inc
in
add
cmpsb
test
cltd
aas
repnz
faddl
mov
add
std
pop
scas
icebp
flds
mov
hlt
loop
lret
adcl
sub
jnp
xor
das
mov
subl
jae
je
push
cmpsb
push
pusha
mov
sbb
outsb
dec
mov
bound
hlt
push
aas
xchg
fldcw
addl
mov
nop
mov
mov
dec
mov
test
jbe
enter
and
rorl
push
test
or
stos
push
mov
mov
or
gs
data16
rolb
movsb
xlat
xchg
sub
imul
sub
mov
rclb
dec
mov
jmp
addb
mov
lods
push
stos
cmc
sbb
insb
or
inc
add
xchg
cmpsb
mov
or
popf
cltd
mov
ret
enter
sub
sbb
jecxz
push
loope
loopne
adc
add
out
test
iret
lds
lea
push
sbb
movsb
das
shlb
push
in
dec
es
pop
ss
inc
push
aam
lock
mov
in
mov
inc
adc
and
xchg
scas
add
xchg
sbb
sub
cmp
stos
mov
adc
cmp
pop
sub
insb
mov
adc
orb
addb
popa
xchg
xchg
inc
repnz
xchg
mov
fistpll
push
jbe
lds
mov
push
or
lret
adc
test
in
int3
roll
mov
fists
add
jmp
mov
jmp
cwtl
enter
jb
lea
in
dec
mov
mov
nop
outsl
hlt
sbb
mov
mov
sbb
mov
repz
lret
sub
fistps
cmp
inc
cs
fwait
in
inc
xor
pop
jp
test
jb
jbe
imul
mov
push
xlat
cld
xchg
fistpl
movsb
inc
hlt
push
adc
sub
int
sub
inc
fsubrl
in
xchg
je
hlt
push
mov
ss
test
mov
js
mov
arpl
xor
addr16
push
mov
push
jno
dec
data16
repnz
enter
sbb
pop
mov
jbe
pop
push
or
cmp
push
stos
adc
mov
add
lret
test
pop
hlt
cltd
push
shr
sbb
leave
cmp
mov
push
loope
in
adc
int3
test
test
mov
xchg
mov
outsl
xor
push
add
addb
xchg
sarb
jmp
add
enter
ret
dec
push
pop
mov
cli
outsl
ror
repz
push
mov
cmpsb
inc
bound
repnz
dec
pushf
subb
push
lock
sub
test
xchg
outsb
fistps
cmp
jmp
adc
stc
sub
sub
movsb
add
popl
sti
mov
dec
in
faddl
dec
add
dec
push
sub
mov
push
andl
cmp
inc
out
push
cmp
add
movsb
and
mov
outsb
rcll
lock
push
out
lock
gs
repnz
cli
test
iret
ret
loop
test
aas
or
cmp
xchg
jbe
jne
cld
xchg
adc
jne
inc
or
popa
je
insb
xchg
dec
xchg
nop
stc
bound
push
dec
in
push
inc
loop
or
cmp
lods
cmpsl
je
inc
inc
and
in
add
sub
adc
inc
push
andl
xchg
outsl
addl
pop
ror
ljmp
sub
sbb
sbb
and
repnz
mov
adc
into
or
xchg
inc
scas
pop
adc
mov
adc
mov
xorl
xchg
pop
ss
sahf
inc
inc
sub
push
ret
sub
test
lret
xchg
les
jecxz
or
pushf
gs
shll
dec
scas
add
cli
jbe
inc
inc
mov
push
es
add
sbb
shll
adc
loop
xorl
ror
pop
dec
mov
mulb
adc
and
mov
and
call
pop
xor
loop
sub
xchg
add
xor
dec
adc
add
sbb
ret
mov
in
mov
sahf
int3
push
roll
xorl
scas
pop
leave
sub
loop
cmp
pop
sub
lret
rolb
dec
sbb
cs
mov
in
test
xchg
call
mov
lds
call
dec
loopne
sub
lret
mov
les
cmp
add
inc
repnz
enter
xlat
sub
movsl
lahf
or
lea
test
movsb
ret
xor
movsl
test
fnstenv
mov
xlat
add
pop
cwtl
jae
mov
jae
gs
sub
mov
stos
clc
and
es
test
mov
setle
inc
lods
dec
and
popf
mov
int3
mov
scas
and
in
dec
or
mov
sahf
notl
jp
daa
fsubl
dec
add
das
leave
push
mov
dec
sbb
mov
icebp
cld
mov
and
in
cmpsb
bound
xchg
mov
sub
shrb
or
fisubrs
mov
movsb
push
or
movsl
std
inc
and
fmuls
aam
mov
mov
mov
adc
jne
into
loope
mov
jle
mov
xchg
pop
inc
movsb
addr16
mov
jg
sar
dec
xor
ds
sub
mov
mov
scas
hlt
pusha
push
xchg
mov
add
out
inc
stc
add
mov
jno
loopne
mov
cli
xchg
add
adc
jb
pop
xchg
inc
dec
push
scas
fwait
fsubr
adc
cmp
xchg
fs
xchg
scas
inc
lods
pop
xor
jp
lcall
push
jmp
fwait
mov
into
in
inc
push
pop
enter
lcall
inc
jmp
lea
mov
xor
xchg
add
or
testl
insl
test
cltd
jne
jge
adc
mov
xchg
push
mov
test
shll
call
xchg
repnz
ds
out
loop
into
mov
pop
pop
sub
andl
bound
jb
jns
pop
xchg
movsb
out
lret
push
out
push
pop
mov
sar
nop
add
ret
mov
outsb
cmc
repnz
out
in
mov
sbb
mov
nop
aam
rcl
inc
enter
push
mov
adcl
enter
mov
cltd
mov
hlt
enter
pop
cltd
shlb
nop
cmp
mov
mov
rcl
arpl
cmc
or
xchg
movsl
movl
and
in
mov
xchg
insb
pusha
enter
jae
and
out
pcmpgtw
cmp
mov
sbbl
in
in
in
mov
dec
push
stos
sbb
jge
add
out
in
inc
or
ret
in
lahf
sarb
cli
int3
dec
repz
xchg
enter
or
mov
mov
out
add
rorb
mov
es
data16
sub
adc
dec
adc
jmp
filds
in
mov
shrb
add
inc
shlb
out
jo
mov
sub
mov
fcomp
ljmp
hlt
mov
adc
sub
sbb
lds
loopne
mov
ret
rcr
xchg
mov
cli
lock
mov
cmp
mov
fcoml
outsb
popf
fwait
dec
mov
in
loopne
loop
pusha
std
add
xor
mov
sbb
add
hlt
mov
dec
or
inc
and
dec
das
add
dec
xor
pop
push
sbb
subl
pop
inc
clc
sbb
mov
or
mov
icebp
pop
jmp
xor
call
daa
call
insl
fcom
adc
or
xlat
int
cmp
js
dec
ds
sbb
mov
push
add
fisttps
dec
sub
xchg
out
movsl
inc
adc
cmp
jge
pop
es
subb
andl
inc
incl
mov
xchg
xchg
int
fistl
mov
sub
daa
dec
scas
or
xchg
loope
jb
and
jmp
ret
out
enter
stos
inc
arpl
mov
push
xor
cmp
hlt
xchg
jl
mov
add
or
xrelease
jl
stc
mov
lods
scas
cmp
call
jns
push
lods
leave
shll
adc
and
mov
pop
xchg
arpl
sbb
dec
in
dec
test
lock
sub
sub
push
rclb
mov
inc
jp
std
sbb
into
in
jle
dec
xlat
andw
push
ljmp
loop
enter
add
mov
xchg
or
adc
and
cmc
jno
sbb
mov
or
pop
and
or
add
lds
scas
jle
push
shll
loope
add
shrl
jne
mov
loop
decl
repnz
xchg
add
jae
das
scas
sti
out
xorb
mov
pop
jns
or
daa
pop
popf
pusha
test
scas
in
lods
cmp
jbe
sahf
inc
scas
ds
lods
pop
lods
xor
psubw
cmp
push
movsl
test
lret
loope
pop
enter
imul
push
mov
push
pop
jmp
ja
adc
movsb
push
mov
dec
fmul
adc
nop
push
out
ljmp
sub
pop
mov
rorl
xchg
sub
cmp
ret
and
cmpsl
js
cmp
sahf
mov
push
bound
shrb
dec
jo
iret
mov
dec
or
mov
mov
sbb
cmpsl
mov
pop
mov
jne
leave
std
cmp
xor
xor
or
sub
fisttpll
push
lock
hlt
jle
xchg
jno
or
sahf
ret
shll
push
data16
ret
jmp
fmuls
ffreep
xchg
fs
mov
adc
xchg
sahf
test
jl
ret
jno
shll
cmpl
arpl
icebp
mov
pop
testl
jae
fcomps
ret
mov
enter
cltd
shr
aad
sysexit
sub
adc
sarl
cmp
and
shll
mov
jge
ret
mov
cmpsb
cmp
mov
mov
mov
aaa
add
arpl
pop
adc
mov
fistps
pop
pushf
xchg
aam
push
mov
or
dec
leave
in
in
xor
mov
cmpsl
pushf
push
les
lods
add
xchg
mov
sti
inc
popa
sahf
lcall
xor
xchg
fiadds
jne
lret
jge
pop
sbb
xor
adc
popa
popa
hlt
imul
mul
cld
jnp
popa
mov
enter
hlt
pop
into
mov
cmp
pop
lods
sub
cli
mov
xchg
add
rclb
dec
xchg
push
dec
mov
popa
push
cmpsl
mov
vpackssdw
jbe
mov
or
pushf
pop
mov
adc
test
cmpsb
daa
test
inc
test
add
ret
xchg
ret
xor
sub
mov
mulb
rorb
add
push
mov
scas
sahf
add
loopne
loop
les
xchg
adc
fiadds
cmp
enter
and
iret
cmp
movsb
aas
jp
enter
out
sub
cmp
cmp
lods
enter
jo
loopne
mov
fdivl
repnz
hlt
pop
lcall
fldl
lret
xor
in
sub
xchg
sub
cwtl
ds
inc
jnp
insl
add
sub
orb
icebp
imul
mov
sbbl
mov
xchg
xchg
cli
fstpt
les
mov
aam
mov
cmp
mov
pop
inc
add
push
pop
imul
add
fwait
enter
and
mov
hlt
inc
scas
popa
fadds
push
pop
and
inc
inc
sub
jnp
test
daa
mov
add
pop
mov
jle,pn
push
inc
mov
mov
sub
sub
js
fsubrs
xchg
and
cmp
mov
adc
xchg
imul
adc
pop
jbe
into
jae
stos
mov
or
xchg
add
dec
movl
or
jb
mov
imul
jne
aas
shr
repz
dec
rclb
sarb
or
jno
jbe
lock
repnz
addr16
mov
insb
test
adc
inc
test
xchg
dec
roll
cmp
leave
pop
call
jne
jl
ljmp
xchg
ret
xchg
out
sbbb
jmp
pusha
adc
mov
mov
mov
or
mov
adc
ss
loope
pop
mov
and
adc
nop
or
popf
sub
pop
lock
or
in
xchg
in
ljmp
int3
cmp
xchg
mov
and
adc
daa
push
cmp
cmp
test
decl
jnp
mov
dec
adc
pop
mov
push
mov
xchg
push
mov
pop
stc
mov
int3
into
sub
push
and
pop
xchg
loop
outsb
xorl
push
mov
adc
mov
in
rcr
xor
out
test
push
movsl
rclb
mov
mov
pop
xor
mov
sub
push
out
jp
adc
mov
lcall
dec
mov
loopne
mov
aaa
out
lret
jmp
mov
iret
sahf
mov
add
and
sub
sahf
or
imul
stos
les
pop
popl
movsb
push
leave
mov
stos
adc
ret
and
inc
fbld
out
adc
adc
popa
add
fisubl
mov
jno
stos
and
testb
pop
iret
sahf
mov
or
out
pop
lret
xchg
rclb
or
jl
mov
fsubp
jmp
imul
jmp
sbb
inc
test
add
sbb
add
test
loop
pop
stc
mov
jge
adc
sbb
dec
mov
mov
fldenv
push
pop
repz
and
adc
pop
mov
into
fdecstp
and
xchg
adc
outsb
mov
das
repnz
lcall
dec
inc
sub
inc
mov
sub
enter
faddp
jne
sbb
sub
ret
mov
inc
leave
mov
or
xchg
enter
or
inc
sbb
jne
add
scas
insb
insb
mov
jbe
inc
mov
push
adc
sbb
mov
movsl
xchg
dec
cli
jns
xchg
rclb
lret
dec
mov
inc
xchg
jl
mov
mov
lods
call
lock
lret
bound
popf
in
subl
pusha
push
stos
or
les
sbb
dec
and
adc
setne
lock
out
jp
jns
loope
xchg
or
mov
xchg
fdivrs
and
lock
sbb
mov
or
lock
mov
mov
scas
mov
or
repnz
cmc
mov
loope
sti
jp
mov
or
mov
test
jp
mov
lret
loope
inc
lea
push
test
call
loopne
mov
xchg
sti
inc
dec
add
mov
loop
jnp
test
jecxz
imul
cmp
out
dec
in
popf
cli
cli
cmpsb
ret
adc
and
sbb
mov
xchg
aam
out
mul
ret
xchg
into
or
jnp
pop
outsb
xchg
aam
movb
jb
and
jmp
add
subl
lret
rolb
add
cli
repnz
mov
fs
inc
xor
and
icebp
out
insl
hlt
mov
mov
add
out
sub
or
in
test
adc
testl
mov
mov
mov
ret
mov
out
add
dec
push
mov
jmp
mov
pop
js
fidivrl
pop
mov
enter
or
das
adc
enter
inc
cmpsl
ljmp
lcall
decl
or
into
xor
hlt
insb
aaa
add
mov
push
fucomip
fnsave
insb
xchg
insl
lods
mov
stc
xchg
jge
movsl
aam
jnp
jb
push
bound
outsb
or
test
inc
adc
jle
icebp
jns
daa
ficomps
stc
rol
insl
adcl
js
mov
in
or
cli
test
jnp
je
mov
and
sub
aam
cli
loope
push
inc
test
pop
adc
or
dec
push
sbb
arpl
and
mov
cmp
sub
jle
psllw
mov
ljmp
movsb
sbb
or
cwtl
adc
imul
les
pop
cwtl
xchg
push
in
stos
cltd
cmp
adc
js
inc
mov
pop
mov
les
mov
ljmp
popf
or
add
push
divb
ret
rcrl
scas
popf
loope
idivl
xchg
into
xchg
xchg
adc
or
pushw
sub
cmp
call
add
mov
hlt
push
test
push
dec
andb
nop
sbb
sub
mov
lock
push
mov
test
push
je
mov
cwtl
movsb
mov
push
andl
scas
adc
mov
mov
and
js
test
fadds
int
ret
cmp
and
mov
mov
ja
push
sti
daa
rclb
fists
pushf
cmp
xchg
add
pop
sub
pushf
xchg
mov
orl
mov
loop
test
arpl
enter
mov
cmp
xchg
and
out
push
les
xor
ret
ror
mov
testb
pop
dec
enter
xchg
jg
icebp
add
and
repz
jl
lret
mov
inc
repnz
mov
sbb
sbbb
ret
cmpsb
inc
mov
xor
add
loop
jbe
and
sbb
adc
mov
fdivl
lock
add
fnsave
mov
dec
fisttps
insb
ss
dec
push
scas
inc
repnz
pop
dec
cli
xchg
adc
test
jnp
hlt
and
push
fsubr
mov
xchg
inc
fidivs
les
mov
ret
and
mov
sub
decb
dec
or
dec
inc
push
aam
xchg
pushf
push
andb
popa
adc
shrb
movsb
add
add
cmp
inc
mov
ret
push
adc
ficomps
push
pop
lods
dec
std
mov
jge
movsl
xor
xchg
fcmovb
push
add
hlt
int
out
push
jge
add
push
loopne
out
hlt
in
dec
int3
in
cmp
adc
add
jl
outsb
lea
sbb
loop
xchg
add
subl
or
sub
loope
stos
fsts
or
icebp
in
and
lret
inc
push
pop
movsl
push
mov
movb
push
enter
mov
or
sbbl
rcrl
lods
andl
pop
stos
mov
loop
sbbl
push
mov
xchg
hlt
xchg
mov
stos
or
shll
cwtl
xchg
ljmp
pop
mov
fsubrl
in
cld
jae
pushf
mov
and
xchg
fxch
lret
insl
inc
jecxz
xchg
cmp
pop
std
add
out
cmp
adc
xchg
inc
pushf
inc
dec
push
ljmp
jl
mov
dec
push
adc
add
pop
cmp
push
push
cld
mov
lcall
inc
loopne
mov
in
adcl
add
pop
sarb
or
push
adc
pop
int3
dec
aam
or
dec
pop
jbe
cmp
fmull
in
sbb
fcoml
mov
xchg
jne
mov
push
jno
xchg
scas
push
cmpsb
dec
aam
adc
test
and
ror
lea
arpl
orl
loopne
mov
test
xlat
sub
add
xchg
mov
sub
adc
xchg
into
adc
pop
or
call
add
lock
pop
add
xchg
xor
lock
jae
cs
pushf
lock
xchg
and
scas
dec
and
push
adc
lock
cmp
sti
ds
in
mov
test
repnz
in
mov
test
bnd
adc
lock
test
and
xchg
and
cmp
into
lock
push
icebp
sti
jb
imul
imulb
add
inc
aam
cmp
push
lahf
lock
ds
loope
gs
leave
lret
sar
clc
pusha
or
jmp
aad
popf
xchg
out
rcl
nop
loope
adc
add
mov
sub
mov
in
test
mov
sub
cmpsb
cmpb
jmp
enter
sbb
int3
sub
adc
into
iret
divl
or
hlt
rcrb
mov
push
mov
jae
jns
or
add
add
movb
jae
jns
test
mov
jg
xchg
repnz
push
into
push
inc
dec
call
jne
mov
adc
daa
mov
xchg
movsb
push
sti
notl
lea
xor
xor
mov
sub
scas
jnp
testl
push
ret
into
negl
and
sub
call
sti
push
out
sbb
decl
inc
inc
insl
mov
pop
clc
jecxz
and
pushf
idiv
mov
std
mov
loop
and
push
mov
in
ljmp
bound
pop
cmp
jae
mov
shl
clc
hlt
jmp
adc
or
inc
mov
out
add
xor
loop
jo
loop
mov
repnz
cmp
les
enter
repnz
jo
xchg
cmpsl
adc
add
add
jnp
stc
sahf
inc
enter
dec
add
pop
mov
add
hlt
inc
ret
inc
sub
or
mov
cli
dec
dec
lds
mov
pop
adc
mov
push
mov
dec
xor
stc
fucom
hlt
add
push
lods
inc
push
cmp
aad
inc
lret
xlat
mov
int3
mov
sub
stos
or
xchg
jo
push
add
adc
mov
dec
jmp
scas
ljmp
or
adc
fstl
loope
fisttpll
cmp
inc
test
out
or
push
add
jae
out
aas
mov
test
or
dec
cmpsb
push
dec
stc
into
sbb
movsb
adc
pop
push
fiaddl
or
daa
in
xchg
mov
cltd
xchg
nop
inc
aas
in
adc
push
add
add
mov
fwait
les
fisubl
shll
xchg
add
rolb
inc
mov
fmul
cs
adc
jno
roll
lods
lods
inc
cmp
sub
nop
mov
xchg
adc
push
mov
pop
cs
sub
mov
and
popf
in
inc
and
pop
iret
int
mov
push
lods
xor
adc
scas
iret
imulb
add
xchg
adc
in
rclb
aas
jp
nop
nop
adc
jb
in
cs
push
int
mov
mov
sahf
shrl
in
int
call
mov
inc
mov
jge
clc
daa
loop
and
or
and
adc
and
and
mov
add
dec
pop
popf
xchg
adc
in
ss
gs
jne
sub
cmpsl
outsb
dec
clc
or
insl
icebp
ror
xchg
sub
push
pop
repnz
ds
mov
stc
mov
cli
sahf
and
insl
pop
fildll
xchg
lds
fists
out
dec
popa
sahf
add
cli
sahf
je
in
ficompl
call
and
inc
push
in
pop
pop
lret
int3
adc
flds
xor
fistl
cmp
or
stos
hlt
mov
sbb
pushf
lret
cld
mov
mov
lds
loope
pop
insl
adc
inc
or
fistl
xor
mov
inc
mov
mov
cmp
ljmp
fstl
out
out
std
xchg
movsb
lret
aaa
rcll
dec
movsb
scas
cmp
repz
in
out
iret
pusha
adc
mov
fiaddl
out
mov
bound
cmpsb
mov
and
loop
clc
loope
imul
addl
mov
in
jns
inc
mov
test
repz
fs
idiv
push
pop
xor
dec
or
inc
test
xchg
jb
adc
push
xor
call
cmpsl
adc
jb
aam
lahf
cmp
in
push
imul
push
call
cmp
es
les
fnstenv
scas
pushf
dec
push
adc
scas
adc
sub
and
mov
fstp
inc
outsb
xor
lret
xchg
lea
mov
out
outsb
mov
movsb
xor
lods
in
leave
xchg
fisttpll
jo
sahf
and
mov
cmp
adc
cmp
leave
sbb
pop
cwtl
fsub
mov
jns
sbb
fld
aam
pushf
jge
adc
out
cmc
add
mov
fiaddl
xchg
inc
push
mov
cwtl
cmp
pop
lret
adcl
ret
sbb
in
mov
lods
rorb
insb
push
loope
jmp
cmp
les
cmp
sub
dec
mov
mov
fcoms
aas
mov
xor
ret
mov
sti
pop
je
adc
cmpsl
and
add
daa
jge
and
les
ret
push
inc
pop
mov
lret
loopne
daa
in
out
or
out
xchg
cld
ret
cltd
xchg
rol
icebp
mov
jb,pt
lret
xlat
sub
jge
fldt
jbe
mov
stos
mov
inc
aas
lahf
mov
mov
mov
js
negl
shl
cmp
push
rclb
sub
dec
add
mov
hlt
shll
in
in
add
add
fsts
add
into
sub
dec
jno
and
loop
outsb
add
subl
mov
ret
lahf
and
out
and
push
add
mov
lods
cltd
add
pop
xchg
pushf
std
cmp
pop
addb
je
and
test
push
xchg
mov
mov
mov
adc
sub
jle
ret
lods
in
lods
popa
test
rolb
cmp
jge
movb
les
mov
cmp
xorb
movsbl
inc
mov
ljmp
lods
xchg
ja
pop
mov
pop
and
mov
sub
leave
in
jge
les
out
sbb
mov
cmp
subl
dec
insl
fwait
pop
bound
outsb
push
or
adcl
in
xchg
or
mov
adc
mov
hlt
ret
dec
xor
test
adc
xor
mov
das
test
mov
dec
push
pop
pop
xor
mov
cmpsb
repnz
hlt
mov
push
mov
add
movsb
mov
js
mov
mov
push
test
rcrb
stc
mov
icebp
mov
hlt
mov
pushf
inc
enter
jns
mov
and
ret
push
fidivrl
in
js
repnz
push
push
and
mov
and
loope
out
adc
push
adc
xor
hlt
fistpl
inc
dec
movsl
negb
inc
bound
mov
add
pop
hlt
jno
leave
sahf
fdivrs
mov
mov
clc
inc
push
cwtl
pushf
out
mov
movsl
fcomps
add
or
and
mov
push
imul
jae
incb
inc
inc
cmp
jne
shrb
in
jl
mov
mov
in
add
hlt
cwtl
jecxz
xorb
sar
push
mov
mov
pusha
pop
fnstsw
mov
addr16
sti
out
push
sbb
out
ret
sahf
mov
pop
sub
enter
cld
jge
dec
gs
xchg
les
pop
dec
xor
inc
popa
mov
rcrb
xchg
test
gs
movsb
pop
ja
cmp
jb
mov
inc
add
test
mov
or
in
mov
sbb
adc
mov
aad
inc
xchg
xor
loop
adc
mov
pushl
stos
inc
fcomi
shlb
xchg
sbb
loop
mov
gs
inc
movsl
dec
mov
sahf
loopne
and
lock
adc
cmovs
das
lret
out
inc
in
mov
xchg
rorb
ljmp
and
out
dec
pop
pop
lods
icebp
or
fs
rcrb
dec
xchg
rolb
cmp
test
ds
fs
in
paddb
xchg
add
dec
add
sub
fistl
xchg
cltd
mov
jecxz
dec
test
test
xchg
add
icebp
cmp
ljmp
stc
aaa
xchg
mov
enter
test
mov
fiadds
pusha
cmpsl
fwait
mov
mov
aad
mov
mov
out
add
sub
roll
test
cmp
inc
or
pop
cmp
xchg
scas
or
ret
or
out
js
scas
sarl
out
xchg
rorl
push
ficomps
aam
mov
or
in
das
fildll
test
jmp
push
mov
movsl
inc
push
int3
enter
cs
cmc
ja
les
ja
rolb
mov
sub
adc
and
adc
add
fists
pop
out
dec
adc
sbb
jmp
pop
scas
out
pop
and
sbb
cltd
and
les
hlt
fscale
pop
mov
adc
sbb
lods
push
cmc
cmp
cmpsb
popa
add
cld
aam
add
daa
jp
fisubs
xchg
mov
sub
lock
daa
mov
fcmovu
lods
shl
cmovns
jge
lds
lret
lods
inc
cltd
push
push
dec
inc
icebp
inc
cld
inc
fbld
jg
mov
ret
stos
aam
adc
and
sub
or
outsl
repnz
lds
rol
jb
cli
pushl
hlt
pop
push
mov
popf
inc
dec
jg
dec
pop
and
in
mov
fisubs
add
icebp
lods
imul
aad
mov
jns
outsb
jo
outsb
dec
cld
jo
mov
stos
xor
jle
mov
sbb
push
or
inc
test
inc
add
scas
or
mov
lcall
es
add
add
and
dec
das
je
mov
fimull
mov
test
cmpsb
xorb
aad
mov
das
scas
js
out
xchg
addb
mov
lret
out
inc
rolb
lds
iret
push
mov
cld
int3
sub
cmp
xchg
movsl
xor
rclb
mov
xchg
je
sub
hlt
xchg
hlt
pop
cmp
adc
js
imul
xchg
andl
mov
sub
dec
out
in
jl
hlt
lret
push
mov
push
in
cmpsb
lea
scas
gs
gs
lds
test
aam
jb
popa
hlt
push
test
push
lods
pop
mov
repz
les
cmp
fldenv
or
push
xchg
adc
lods
lods
sbb
adc
cmp
leave
jne
push
push
xchg
insl
out
mov
xchg
inc
jnp
cmpsb
iret
adc
jge
das
out
push
shl
xchg
jns
push
dec
ds
pusha
in
ds
cmc
push
loop
xchg
lahf
pop
icebp
loop
pusha
loop
cwtl
rcrb
push
mov
es
sbb
out
leave
dec
test
and
nop
add
test
scas
inc
pop
dec
mov
inc
dec
mov
xchg
cmp
mov
in
mov
cs
or
xor
push
and
lods
xor
mov
push
mov
test
inc
lods
sub
mov
add
and
mov
ret
pushf
shlb
fdivr
dec
and
ret
sahf
xchg
and
cld
adc
negl
sti
adc
icebp
pop
pop
adc
xor
adc
pop
xor
fdivrl
add
sti
rcl
and
push
mov
xchg
sbb
push
mov
lea
push
or
adc
shrb
adc
mov
sub
in
mov
xchg
jp
mov
jl
push
stos
sbb
rolb
subb
dec
test
mulb
icebp
fdivp
xchg
jbe
repz
sti
sarb
pushf
cmpsl
pushf
mov
jo
and
hlt
mov
pusha
shrb
fsubs
add
popa
xchg
orb
cs
inc
push
jbe
adc
cmp
and
xor
xchg
push
out
sahf
sbb
add
pushf
jge
or
cmp
xchg
popf
xor
dec
cs
xchg
pusha
push
adc
movsl
mov
pop
adc
jmp
jno
je
jg
fimuls
pop
fwait
jne
mov
repz
mov
cmp
std
sub
jmp
add
and
hlt
movsl
mov
je
testl
xchg
sti
or
inc
xchg
ds
scas
and
psllw
idiv
dec
lahf
and
mov
orl
lcall
shl
inc
cwtl
loopne
cmovg
in
into
popa
cmpsl
adc
sub
inc
push
adc
inc
xor
xchg
adc
adc
pop
mov
adc
xor
ss
sub
or
xor
adc
out
inc
pusha
repnz
stc
mov
icebp
ljmp
fidivrs
add
xchg
mov
lret
test
mov
mov
test
sti
mov
cs
fsub
push
adc
mov
incl
jg
out
sbb
insl
clc
mov
sbb
cld
mov
cmp
mov
mov
arpl
pop
loop
add
inc
mov
dec
mov
stos
jmp
pop
pop
inc
push
xor
mov
sub
mov
adcl
sub
lcall
lahf
icebp
pushf
push
loop
hlt
xchg
xchg
cld
nop
or
push
lcall
jg
or
pop
aam
jns
movsb
lock
lea
cmp
push
jo
xor
pusha
xchg
lcall
stos
adc
hlt
in
dec
mov
xor
push
decb
cli
cmp
add
mov
cli
les
xchg
pushf
imul
jns
jnp
or
les
out
or
je
imul
mov
loop
test
pusha
mov
lret
jmp
dec
leave
shr
mov
loope
stos
leave
sub
test
adc
repz
cmp
roll
mov
push
into
cmpsl
push
dec
in
sbb
aaa
test
rcrb
lds
push
push
xor
out
mov
sub
rcrb
jnp
xchg
cli
not
push
push
xchg
xchg
hlt
xchg
mov
orl
shlb
cld
jne
lea
adc
pusha
cmp
push
push
scas
test
loope
out
xchg
insb
sahf
push
dec
mov
cmp
test
aas
cmpsb
es
jg
jge
jae
xchg
imul
xchg
pop
push
inc
push
inc
imul
repnz
xchg
lock
addr16
loope
movsl
xchg
movsl
fisttps
push
xchg
push
and
fsubs
pop
icebp
cmp
push
lds
adc
pop
jle
mov
stos
fwait
jb
xchg
push
repz
and
cltd
loop
dec
cmc
in
les
jg
call
cs
push
rorl
adc
xchg
rcrl
mov
nop
mov
sub
jg
mov
movsb
shll
mov
or
pop
inc
imul
and
fidivs
movsl
sub
outsb
sub
inc
xchg
or
lret
pop
mov
lret
or
mov
cwtl
inc
lret
icebp
mov
cltd
mov
stc
int
push
pop
cmp
test
mov
pushf
jo
dec
fnstenv
shlb
ret
stos
lahf
pop
inc
push
dec
jle
mov
mov
sti
mov
call
xchg
add
repnz
sbb
lret
pop
pushf
dec
mov
enter
scas
les
push
mov
jne
test
rcrl
mov
cmc
adc
xchg
mov
or
addr16
test
cmpsb
int3
ret
aaa
je
or
rol
sub
inc
sub
add
std
les
mov
sahf
idivb
hlt
arpl
ljmp
pop
mov
cltd
mov
outsl
dec
jp
pop
mov
test
sub
ret
test
popf
push
xchg
mov
mov
loop
subb
out
add
aad
pop
outsb
mov
js
push
dec
ljmp
mov
mov
mov
lret
lock
gs
loop
pop
les
loope
sbb
movsb
nop
or
arpl
mov
inc
les
and
test
dec
jo
add
enter
imulb
psllw
movsl
popa
add
fsubrl
sub
jns
or
add
cmpsb
adc
add
mov
pop
xor
mov
stc
adc
mov
jl
sub
call
and
adc
jge
movsl
fisttpll
push
ret
ja
xor
lret
xchg
mov
mov
out
pop
movsl
and
inc
rcr
jns
aaa
shrl
jae
push
and
loopne
adc
int
and
inc
fsubrl
mov
scas
lock
mov
xchg
roll
add
jne
mov
fldl
and
int3
pusha
xchg
jecxz
inc
loop
mov
and
inc
cmc
out
call
sbb
push
stos
inc
push
fninit
mov
inc
dec
idivb
daa
pop
clc
pop
movsl
es
lret
xchg
sub
lcall
xchg
inc
lds
lahf
pop
push
lds
psllw
jl
xchg
fmul
leave
fiadds
dec
ss
add
out
int3
loop
adc
sti
mov
or
out
movsb
test
dec
mov
clc
mov
or
icebp
fimull
das
shr
adc
or
sti
push
movsl
outsb
pusha
sarb
inc
hlt
inc
mov
mov
inc
mov
jne
or
pop
outsl
bound
aaa
xchg
aam
xor
inc
mov
rclb
pop
jns
or
inc
mov
inc
cmp
or
rclb
adc
roll
push
sti
push
movsb
cmpsb
inc
add
movsl
mov
in
movsb
mov
in
add
cmp
cmp
ds
cmc
push
loop
loop
loope
lds
je
pop
add
rorb
icebp
sbb
pop
pop
mov
negl
icebp
pop
jl
ficoms
jne
mov
dec
cwtl
xchg
shr
ret
test
mov
icebp
into
jge
pop
dec
das
shr
adc
int3
jmp
mov
test
lods
rcl
in
js
push
cwtl
fsubr
int3
stos
dec
or
sbb
adc
or
shl
inc
push
cmpsl
xchg
lods
or
shlb
icebp
lret
push
mov
add
pop
hlt
adc
inc
loopne
jo
fmulp
jns
ljmp
and
jne
pop
sbb
cld
mov
add
mov
pop
aam
or
mov
hlt
gs
add
stc
les
loop
add
xchg
push
nop
xchg
mov
pop
shlb
or
sbb
ret
sub
not
jns
jns
pop
adc
inc
shr
stos
lock
sarb
xchg
imul
jecxz
pop
push
outsb
mov
ret
scas
pushf
rclb
enter
sti
jnp
dec
inc
mov
js
rorl
fidivs
and
cld
imul
psllw
loopne
add
lods
cmp
pop
rorb
jne
push
jge
dec
popf
xchg
rclb
ret
iret
shlb
icebp
mov
jns
jp
fidivrs
or
and
loop
enter
push
loop
xchg
or
decb
add
mov
movl
outsb
rclb
pop
jns
or
inc
mov
add
dec
sbb
jo
hlt
mov
jns
inc
movsb
push
push
js
push
or
or
jnp
dec
lahf
xchg
shrb
lcall
adc
js
pop
or
jle
inc
inc
adc
pop
sarb
out
adc
mov
xchg
sub
out
and
inc
aas
xor
test
mov
push
mov
mov
sbb
or
lods
jns
loopne
hlt
outsb
lsl
imul
xor
or
and
mov
inc
pop
and
inc
mov
hlt
ja
mov
out
and
mov
mov
xchg
roll
aaa
mov
stc
mov
icebp
sbb
test
es
std
adc
xchg
or
stc
adc
testl
loop
pop
stc
mov
icebp
mov
mov
pop
jmp
lret
and
mov
in
jne
push
repnz
ds
sbb
and
mov
mov
addl
mov
mov
push
mov
mov
xchg
or
push
stc
cs
jecxz
xchg
jmp
or
pushf
jns
xchg
sti
cmc
mov
add
xchg
and
dec
cmc
push
and
ret
push
test
push
loop
inc
ret
lds
xchg
test
daa
andb
mov
mov
stc
imul
xchg
scas
or
push
loop
pop
stc
mov
cmp
les
xchg
sub
ds
jmp
mov
mov
pop
cmp
movsl
pop
lahf
cmpsl
popa
jge
or
and
mov
mov
loop
pop
stc
mov
and
xchg
sbb
dec
lea
sub
in
shrb
mov
nop
fisubs
inc
inc
dec
mov
inc
ljmp
hlt
jo
loope
push
fwait
sti
mov
push
fisubs
jg
fdecstp
mov
jb
push
mov
jns
loop
aam
cwtl
ss
xorb
push
je
xchg
cmpsl
dec
and
push
outsb
loop
xchg
push
mov
or
test
testb
xchg
dec
dec
mov
push
arpl
pop
and
push
dec
jae
dec
dec
aam
jne
push
ja
mov
int
xchg
int3
sbbl
xchg
repnz
cmc
push
loop
ss
test
loop
test
push
xchg
js
pop
rorb
mov
outsl
cmpsl
out
mov
roll
jmp
popf
cwtl
leave
jbe
push
dec
cmp
pusha
js
loop
pop
mov
out
adc
mov
adc
jg
mov
inc
jns
sbb
out
fcomps
insb
or
pop
out
adc
push
scas
subb
mov
cmp
adc
jg
push
adc
scas
push
sahf
mov
aam
xlat
jmp
cld
frstor
fldpi
add
negb
mov
or
movb
jecxz
mov
gs
nop
sbb
lret
mov
dec
add
xchg
add
xchg
aam
jnp
dec
xchg
jmp
loop
mov
push
int
jo
jbe
leave
mov
nop
sub
lcall
repnz
dec
hlt
stos
xlat
add
stos
mov
push
inc
imul
adc
xor
sti
arpl
andl
scas
adc
jg
movsb
xchg
hlt
xchg
sbb
rclb
and
xchg
mov
xlat
mov
hlt
or
adc
in
ds
cmc
push
loop
push
mov
hlt
push
pushf
adc
fisubs
push
add
mov
pop
aam
mov
ret
xchg
jmp
or
out
fsub
jns
inc
inc
push
lods
and
or
mov
mov
fadds
imul
jo
cmp
out
adc
test
dec
das
pusha
ret
insb
or
popf
mov
xchg
dec
scas
cld
loopne
fbld
xlat
les
ror
or
test
loopne
add
jns
ljmp
ret
jne
out
mov
loope
pushf
mov
aam
adc
icebp
enter
insb
mov
jle
bound
loopne
and
loopne
hlt
xor
cmpsl
xchg
lods
pop
mov
mov
cmpsb
js
jg
mov
sbb
bound
hlt
aas
test
sub
in
repz
push
or
sti
cli
pop
or
sub
cmp
pop
test
mov
adc
xor
fnstsw
in
mov
xchg
and
lret
sub
jge
mov
add
sbb
mov
inc
dec
int3
in
mov
mov
sbb
and
adc
add
sub
or
addb
daa
notb
adc
in
ljmp
call
std
dec
sbb
loopne
repz
xchg
sbb
arpl
out
ja
inc
xchg
loop
repz
testb
fists
cmp
lahf
mov
add
push
outsl
aam
cmp
cmp
scas
sarl
lods
jb
sbb
lods
push
clc
test
and
or
push
push
mov
mov
aas
ret
push
out
fstpl
fcomps
mov
inc
jo
adc
test
fdivrl
movsb
ret
scas
out
inc
hlt
int
inc
iret
enter
imul
jno
inc
jb
loope
and
stos
xor
imul
test
pop
cld
push
lods
jns
lcall
add
add
or
aas
aas
push
in
movsl
call
or
pusha
pop
icebp
arpl
test
cs
dec
and
enter
push
sbb
shlb
jl
add
aas
hlt
imul
mov
adc
shll
sub
mov
mov
cmp
lods
push
fs
and
hlt
mov
sbb
inc
orb
and
xor
ret
mov
notb
mov
adc
push
cs
dec
mov
pushf
mov
mov
mov
ret
pop
or
int3
jle
pop
add
addb
icebp
pop
add
add
notb
hlt
inc
mov
inc
mov
add
and
mov
mov
pop
sbb
adcl
ret
and
scas
ret
xchg
in
mov
xor
jmp
vmovsd
dec
dec
mov
xor
mov
movsl
xchg
or
fsubrs
mov
iret
jmp
mov
mov
sbb
push
pusha
in
add
rolb
push
inc
loopne
mov
sub
inc
std
cmp
es
mov
cwtl
inc
mov
sahf
shlb
fcomps
stos
cld
mov
test
xchg
add
pop
enter
test
imull
pushf
jne
sub
arpl
pop
scas
in
lret
rcll
loop
sub
adc
shlb
arpl
mulb
adc
in
push
push
mov
xor
dec
dec
insb
sub
cmp
jne
call
ljmp
loope
stos
push
insl
icebp
push
sbb
inc
das
leave
xlat
add
rol
out
insl
cmpsl
jbe
lret
adc
repnz
fiadds
in
ja
and
call
push
mov
xor
adc
xchg
enter
loopne
fisubs
push
mov
sbb
cmp
push
dec
xchg
in
xchg
add
repz
push
hlt
pop
es
fmull
hlt
call
or
mov
nop
or
mov
stos
pop
call
stc
rclb
or
call
pushf
add
and
les
add
stos
mov
pop
in
dec
push
fadds
lock
mov
popa
ret
std
loop
mov
and
es
xor
xor
push
sbb
out
cmp
call
sahf
xchg
movsl
xor
aaa
xchg
push
and
in
xor
lods
pop
mov
lds
fisubrs
mov
stc
sub
jno
test
fnstenv
sub
scas
pushf
faddl
jns
inc
in
adc
sub
xchg
clc
cmp
xchg
and
and
test
add
subb
add
and
jnp
xchg
fadds
loope
movsl
aam
ficompl
jae
shlb
push
inc
inc
inc
xor
or
xchg
xor
stc
in
mov
push
jns
xor
mov
addr16
sbbl
pop
add
or
ret
pop
mov
pop
mov
in
out
or
mov
bound
adc
mov
jne
xchg
sub
mov
nop
mov
mov
lret
movsb
mov
mov
xchg
mov
mov
mov
xor
popf
adc
scas
mov
adc
mov
stc
adc
scas
fwait
push
pop
ret
lret
ljmp
xchg
test
in
loop
das
sahf
sbb
mov
pop
sub
test
stos
test
imul
add
or
pop
shr
adc
add
lcall
divb
push
jle
push
add
inc
add
insb
push
sbb
outsl
jmp
out
fidivrs
scas
icebp
out
stos
and
add
fbstp
mov
jge
mov
insb
ret
mov
and
hlt
fwait
insb
and
fwait
xor
add
es
je
fs
push
sub
call
push
scas
and
push
add
push
adc
out
out
mov
loop
cs
popf
les
add
push
or
mov
mov
push
repz
sub
cld
add
inc
or
push
jle
fwait
mov
mov
fisttpl
inc
sub
lahf
mov
sub
push
loop
cmp
rclb
sub
repz
or
xchg
add
popf
arpl
hlt
sub
xchg
sbb
lds
mov
popl
fcmovbe
mov
mov
xchg
push
in
mov
repnz
vaddsubpd
rolb
sti
lods
mov
rolb
fwait
or
movsb
mov
aad
xchg
and
jge
test
sub
fldcw
mov
jge
dec
stos
in
jno
cltd
add
fucomi
mov
cmpsl
pop
mov
in
scas
add
pop
push
sbb
adc
icebp
ret
mov
jne
pop
sub
sub
test
dec
shl
lods
mov
adc
shr
sbb
ret
and
call
sub
xchg
out
ret
adc
loop
stos
data16
xchg
xchg
jle
xchg
and
repnz
enter
shlb
loopne
adc
hlt
sbb
and
xor
movsb
test
add
cmp
sbb
fisubl
jb
mov
in
ret
scas
mov
pop
or
adc
mov
mov
push
loop
lds
nop
mov
lret
fidivs
mov
loopne
mov
xchg
cmp
jge
shll
xchg
adcb
ret
cmp
into
jl
clc
adc
lcall
loope
add
xchg
adc
cmp
nop
hlt
push
addr16
jae
shll
mov
sub
je
lea
stc
sub
aas
cmp
add
fcmovbe
xor
jle
inc
adc
aad
sub
mov
pusha
je
adc
mov
push
std
loope
mov
push
adc
inc
mov
add
dec
push
and
inc
mov
sbb
jle
mov
push
xchg
jl
mov
dec
xchg
xchg
mov
pushf
push
dec
xchg
decb
push
mov
and
mov
flds
and
or
sub
cltd
filds
lcall
sub
inc
pop
xchg
in
jbe
xchg
loope
test
cwtl
stos
and
addl
inc
pushf
cmp
shl
mov
movsl
fstpl
or
mov
orb
mov
push
inc
in
pusha
adc
mov
pusha
repnz
fnstsw
neg
dec
mov
lret
and
push
test
out
push
add
adc
cmpsl
fistpll
mov
je
test
inc
inc
mov
shrb
push
fimull
test
add
cmp
jb
adc
and
leave
sarl
mov
mov
outsb
jnp
mov
dec
sbb
jnp
cmpsl
test
ja
pusha
stos
and
xchg
popf
jnp
push
test
sub
pop
xchg
mov
out
add
je
call
jnp
and
cli
leave
push
jnp
xor
clc
leave
push
jnp
xchg
mov
add
movsb
mov
jg
pushf
jnp
mov
pushf
out
je
cmp
xchg
test
sub
push
movsb
cmp
adc
jnp
aaa
test
cmpsl
test
sub
xchg
mov
inc
lahf
mov
icebp
mov
mov
or
adc
adc
or
adc
adc
or
adc
xchg
fsts
jnp
imul
sbb
mov
lret
jnp
test
imul
movsl
add
xor
and
mov
cwtl
push
cmp
rcrl
lds
repnz
leave
sbb
pop
jb
sub
pusha
jl
jno
cmp
sbb
test
movsb
mov
mov
mov
mov
jnp
and
fldcw
arpl
scas
lods
enter
and
es
mov
cmp
sti
xchg
repnz
sbb
jle
mov
aas
aaa
add
stos
sub
jge
mulb
dec
pop
xchg
arpl
push
int3
clc
lcall
push
mov
mov
movsl
dec
notl
push
nop
dec
mov
dec
scas
cwtl
in
jmp
jb
adc
cmpsl
stos
pop
inc
xchg
or
mov
adc
icebp
enter
adc
sbb
mov
xchg
mov
mov
add
ljmp
sub
arpl
cmc
shll
mov
fwait
test
jb
mov
mov
dec
xor
fs
push
aad
jns
into
faddl
ja
into
aas
cmp
loopne
or
add
gs
sub
mov
mov
mov
jl
mov
sbb
cmp
pop
fimull
mov
and
push
adc
arpl
or
xchg
sahf
pushf
out
jb
adc
test
fnsave
and
mov
fisttpll
out
sub
cmp
add
ja
mov
hlt
xchg
icebp
mov
imul
add
pop
mov
es
int3
mov
mov
sbb
jl
fsts
lea
xorb
lods
and
mov
arpl
jo
and
cmpsb
ds
add
mov
or
jg
bnd
and
call
sub
pushf
push
faddl
push
add
rolb
stos
test
les
dec
sbb
mov
xchg
or
mov
mov
or
mov
cld
shll
fadd
jbe
inc
add
test
xlat
pop
in
imul
mov
in
jge
mov
mov
and
stos
lds
adc
clc
cmp
xchg
and
inc
lret
lds
xchg
aam
in
std
mov
and
shrb
jb
mov
enter
lds
or
loop
loop
push
jns
rorb
pop
add
outsl
push
mov
std
dec
jno
or
add
sub
lret
in
aad
outsl
adc
jp
inc
pop
sub
out
mov
lcall
movsb
adc
outsl
jae
xchg
pop
stos
sub
lret
inc
mov
sub
lock
mov
fstp
daa
stos
fbld
test
and
add
jg
mov
and
sbb
push
pop
or
fcmovnu
stc
enter
mov
mov
les
mov
roll
mov
mov
mov
inc
in
add
loop
je
test
test
pop
mov
or
mov
push
sub
test
pop
mov
into
lret
xchg
pop
pushf
fisttpll
js
adc
fld
sahf
lds
hlt
jb
loope
jle
cmp
pop
lret
push
and
hlt
rcr
addl
ljmp
ljmp
cmpb
outsb
sub
pop
xchg
mov
mov
xor
or
push
inc
cmpsl
xlat
adc
es
fisttps
pop
lea
inc
jns
adc
xchg
or
jmp
sbb
push
xor
sub
xor
sbb
mov
sbb
scas
xchg
sub
pushl
fs
dec
lcall
movsb
jbe
push
mov
aaa
insb
or
sub
ds
ljmp
fadds
cmpsb
xchg
stos
into
add
and
jmp
dec
xlat
mov
and
push
jle
popa
arpl
fsts
roll
sbb
mov
dec
pop
mov
mov
mov
in
in
repnz
mov
movsl
pop
sbbl
orl
xchg
pop
daa
add
dec
and
test
or
adc
and
mull
pop
jge
pop
dec
daa
test
xchg
sbb
pop
imul
push
xor
pop
aad
movsb
dec
cmpsb
insb
adc
lret
movsb
adc
stos
negb
xchg
sahf
pop
xchg
or
clc
inc
ret
leave
test
popa
dec
sub
push
loop
lods
ret
push
ret
ret
ret
aam
cmpsl
stc
push
adc
js
pop
aam
mov
dec
dec
pop
dec
push
cltd
lahf
push
in
ret
in
and
push
loop
mov
stos
scas
push
stc
dec
aas
mov
add
mov
sbb
popa
aam
mov
sbb
and
push
push
cmp
push
dec
ljmp
shrb
scas
pop
lret
int3
mov
hlt
and
ret
rcr
xor
sbb
adc
js
rorl
pop
adc
sti
lods
in
mov
xchg
test
js
into
fisubrs
fbld
xor
in
stos
mov
mov
sub
mov
lret
lret
dec
pusha
mov
dec
mov
sahf
and
xchg
popf
adc
inc
sahf
jecxz
mov
stc
addl
out
in
add
sbb
xchg
or
mov
test
aas
adc
cmpl
dec
add
jmp
dec
xchg
gs
adc
mov
movd
out
adc
add
pop
dec
xchg
stc
les
jns
xchg
push
arpl
ret
aaa
and
push
cwtl
in
and
inc
pop
and
inc
and
arpl
mov
dec
insb
inc
loop
mov
push
add
daa
pop
dec
arpl
cmpsl
pusha
lcall
pushf
mov
and
in
inc
ret
mov
add
mov
push
or
testb
mov
mov
mov
mov
add
sti
mov
test
xchg
mov
push
in
scas
mov
sbb
push
incb
xor
xor
cmp
adc
stos
mov
sub
fcmovb
aam
pop
neg
fistl
negb
mov
leave
cld
insb
insb
dec
stos
scas
mov
mov
sub
cmp
fisttpl
cmc
xchg
lcall
mov
push
bound
cld
inc
mov
xchg
ret
cltd
add
push
xor
lret
xchg
addl
enter
inc
mov
add
sub
test
xchg
imul
or
in
sub
lret
cs
mov
mov
xchg
xchg
andb
add
mov
mov
mov
inc
popf
sbb
jecxz
adc
jns
in
aam
xchg
stos
and
je
fmull
dec
or
daa
mov
mov
daa
xchg
and
inc
enter
mov
adc
dec
clc
test
mov
int3
and
xchg
into
stos
xchg
push
mov
ret
pushf
scas
or
int
test
pop
inc
stos
and
jns
jb
enter
sbb
xor
mov
test
into
in
repnz
in
aaa
lret
mov
jp
mov
or
stc
inc
enter
sbb
enter
adc
mov
mov
mov
andb
dec
or
in
mov
dec
mov
arpl
arpl
les
in
imul
test
mov
int3
dec
sub
sub
cld
mulb
xlat
in
test
test
repz
and
xchg
cli
mov
adc
outsb
push
mov
fdivrl
mov
xchg
les
sbb
xchg
add
aas
and
mov
rol
mov
lcall
test
and
mov
cltd
sub
notb
jle
adcb
adc
sbb
xor
sub
loopne
insl
js
sbb
test
test
adc
mov
push
xor
xchg
and
inc
hlt
jmp
xor
and
cltd
and
out
add
push
jb
or
mov
hlt
xor
stos
out
movsb
nop
mov
cli
gs
add
pop
mov
or
mov
inc
out
add
das
xor
shrb
pop
stos
and
cmpsl
pop
insb
mov
add
rclb
cwtl
test
add
sub
rcr
lcall
popf
loop
sub
cmc
loop
movl
dec
decl
test
rcl
jne
xor
mov
xchg
cli
xchg
adc
cmpsb
mov
mov
aad
dec
mov
fidivrs
inc
into
cmp
pop
aam
pop
push
into
iret
adcl
or
xchg
push
add
int3
out
fs
fisttpll
aaa
pushl
sbb
inc
pop
pushf
sbb
push
add
lods
movsl
int
push
jne
xor
mov
stos
data16
adc
adc
inc
cmp
pop
sbb
add
sub
sarb
push
xchg
hlt
mov
add
les
xchg
data16
rcrl
imul
fdivrl
sub
mov
adc
jns
pop
adc
test
adc
or
or
push
sti
xor
cmpsb
sub
or
mov
jae
mov
jmp
xor
mov
jno
mov
mov
ja
push
cmp
xor
push
rclb
mov
pop
loope
and
push
mov
inc
mulb
data16
faddl
fxch
add
hlt
jb
or
ds
out
push
mov
stc
dec
sub
cld
cltd
ja
jbe
add
push
push
mov
enter
adc
aas
inc
test
add
scas
es
nop
sub
aas
and
sub
push
mov
or
and
div
test
and
push
jecxz
in
ljmp
sti
push
out
iret
lds
or
shlb
sbbl
rorb
inc
and
push
add
lea
ficompl
adc
hlt
push
xchg
ret
fiaddl
inc
inc
ficompl
addr16
or
xchg
ficomps
xchg
cmp
loope
prefetchw
xor
sub
fldt
gs
call
fwait
inc
dec
xchg
jmp
shrl
adc
mov
add
mov
ret
sbbl
test
aam
sub
insb
jmp
sbb
lea
sub
icebp
aam
sub
cld
dec
and
stos
aad
popf
fimull
fcmovbe
fsts
in
jg
mov
inc
push
xor
xchg
mov
js
pop
mov
sbb
cmpsb
xor
xchg
sub
cpuid
sub
fsubrl
mov
mov
xor
fidivrs
pop
jg
mov
sub
out
scas
pop
std
fcom
loop
sub
mov
iret
loopne
hlt
stc
mov
mov
lret
mov
faddp
hlt
dec
mov
jbe
xor
ljmp
int3
dec
xor
pushf
pop
jmp
mov
dec
fldenv
stos
mov
lods
adc
hlt
js
add
dec
and
mov
stos
icebp
lods
push
jno
fisubrl
aad
jno
ss
aaa
or
dec
loopne
mov
ljmp
sub
inc
test
fmull
lea
cmpsb
pop
adc
scas
adc
adc
or
or
push
dec
daa
enter
inc
xchg
xchg
mov
mov
movsb
or
lret
inc
into
sub
lret
das
popf
movl
xchg
inc
or
mov
aam
xlat
xor
dec
pop
mov
ret
xchg
lret
and
xchg
jg
sbb
imulb
rolb
jno
adc
in
dec
mov
xchg
jmp
mov
fsub
addr16
test
in
sub
or
stos
add
lods
outsb
or
jmp
mov
cli
in
or
adc
inc
movsb
cltd
lcall
test
sub
mov
shrl
cmpsb
outsb
nop
into
stos
repnz
mov
cltd
mov
sub
movsl
test
repnz
movsl
hlt
inc
lods
mov
and
add
hlt
jo
inc
adc
jns
adc
mov
jle
mov
lock
or
or
push
sbb
or
xor
inc
rorb
lds
ds
and
xlat
aad
adcl
sub
movsb
rorb
pop
es
dec
xor
xor
lds
push
movsl
xchg
mov
push
loop
jbe
hlt
add
mov
test
imul
iret
mov
mov
jp
inc
lods
jg
push
mov
push
enter
repnz
push
test
in
dec
sub
js
jbe
jl
pop
loop
xchg
and
test
cli
xchg
xchg
decl
into
repnz
out
enter
mov
mov
in
dec
rorb
int
mov
or
es
nop
insb
mov
mov
divl
loopne
pop
enter
mov
push
sbb
push
data16
daa
dec
mov
pop
loope
call
out
test
pusha
stos
lock
or
shlb
mov
into
pushf
push
test
gs
popa
fbld
sub
icebp
icebp
jg
sub
lcall
popf
mov
jne
xor
cmpsl
mov
mov
xchg
ret
les
lret
or
push
add
test
inc
mov
in
dec
addl
ret
bound
daa
pop
xchg
mov
in
rcl
mov
mov
and
xchg
pop
mov
fiadds
mov
add
and
or
inc
inc
adc
dec
jnp
and
pop
push
out
mov
stos
lret
inc
push
xchg
or
ficomps
fs
mov
or
and
loope
out
push
sub
mov
std
outsb
test
ret
lcall
repnz
adc
add
ret
movsb
repnz
mov
mov
stos
enter
repnz
repnz
loopne
adc
xor
sahf
insb
ret
mov
cmp
stos
inc
test
or
loop
cmp
repnz
iret
and
and
aam
stos
push
mov
and
test
sub
incl
enter
mov
inc
iret
dec
nop
insb
push
repnz
test
shr
inc
lods
pop
mov
cld
mov
push
or
or
ret
push
das
mov
repnz
push
jne
inc
les
mov
sbb
add
out
adc
sub
adc
mov
outsb
mov
mov
outsb
push
mov
mov
les
mov
mov
mov
inc
in
fxch
push
adc
cld
sub
ja
or
sub
out
cmp
sub
int3
jnp
out
cmp
cld
xlat
jp
sarb
inc
shll
jle,pn
pop
xor
stos
add
outsl
push
add
add
mov
add
sub
xor
jb
mov
mov
adc
mov
dec
inc
loopne
mov
mov
popf
sub
pop
adc
adc
lret
inc
test
adc
sbb
mov
into
pop
stc
sti
add
push
int
pop
sub
mov
mov
sub
push
dec
cmp
test
jl
lcall
scas
xor
mov
push
adc
or
cmpb
scas
fsts
jbe
pop
mov
inc
lcall
repnz
int3
pop
mov
adc
lock
hlt
jecxz
push
jle
loop
xchg
cmp
test
xchg
push
push
fldenv
mov
cs
stc
rorl
pop
mov
pop
dec
push
mov
or
xchg
mov
mov
aas
fildll
jge
and
ret
ret
jno
add
call
mov
movsl
cmp
cmc
jmp
xor
and
movsb
fwait
daa
stos
test
jne
idivl
mov
mov
mov
fs
add
adc
lcall
hlt
and
add
rorb
daa
add
xchg
dec
adc
mov
xchg
les
mov
or
sbb
xchg
xchg
push
xchg
adc
imul
lahf
mov
cltd
sub
cmp
in
mov
std
fs
add
jbe
push
ss
dec
inc
roll
call
cmp
loope
inc
push
sub
sbb
mov
xchg
into
test
add
mov
aam
daa
add
rcrl
mov
sub
hlt
fs
mov
xchg
adc
loopne
mov
jns
mov
mov
mov
jno
mov
jne
jno
add
mov
inc
cmpsb
cmp
sub
lods
test
cmp
dec
adc
xchg
mov
inc
test
mov
and
fcoml
ret
std
je
call
rclb
mov
inc
gs
xchg
adc
add
test
ss
xchg
cmp
add
mov
xorb
fsts
xchg
adc
push
xor
cld
mov
inc
stc
das
loop
adc
add
jae
xchg
icebp
xchg
push
test
roll
sbb
es
xchg
push
mov
sahf
xchg
test
repnz
into
xchg
sahf
ret
ja
xchg
ret
ja
aas
hlt
xchg
mov
inc
enter
inc
loop
xchg
adc
or
mov
mov
adc
nop
dec
enter
dec
enter
inc
leave
xchg
mov
es
xchg
push
mov
cmpl
mov
pop
fs
je
mov
test
lcall
adc
popl
je
out
lahf
pop
sbb
add
icebp
add
sbb
js
shl
xor
into
pop
jle
cs
cld
adc
imul
jle
xchg
jbe
fwait
lock
std
dec
jle
outsb
arpl
mov
inc
pop
out
mov
mov
pop
lahf
adc
dec
sub
aam
mov
pop
pusha
cmpb
ror
movsl
ja
adc
mov
shl
sbb
mov
ds
jne
mov
xchg
adc
push
shl
dec
popa
or
gs
lret
daa
add
mov
xchg
xchg
adc
xor
or
push
je
push
into
ret
lcall
pushf
jnp
adc
mov
std
adc
or
test
cmpb
sub
lret
outsl
stos
mov
sub
sub
mov
mov
add
pop
and
aad
sub
fisttps
js
lret
ljmp
mov
adcb
dec
ljmp
push
sub
xorl
mov
out
mov
test
sbb
mov
cmc
mov
sub
mov
xchg
ljmp
jae
aad
sub
add
jae
enter
adc
mov
xorl
mov
movsl
fidivrs
adc
test
add
ficoms
adc
iret
adc
stc
or
movsl
aad
sub
pushf
mov
je
xchg
pop
popl
adc
mov
jno
mov
xchg
fnsave
adc
movsb
in
jne
push
xchg
sub
add
lea
jae
pop
sahf
jbe
mov
mov
mov
lods
movsl
out
movsl
aad
sub
enter
add
cs
idivl
out
cmp
pop
inc
cwtl
add
push
stc
sub
xchg
sub
jne
bound
mov
mov
movsb
bnd
popl
in
pop
cmp
mov
clc
pop
add
test
out
add
or
sub
lret
xchg
or
dec
cli
jl
test
xor
lock
xchg
mov
cli
loop
pop
pop
out
out
xchg
cmpsl
movsb
cmp
xchg
cmc
adc
add
cltd
mov
out
add
mov
popa
push
push
mov
fsubs
inc
cmc
xchg
mov
lds
mov
das
daa
mov
int3
mov
add
xchg
int3
jne
mov
orl
loop
adc
stc
add
enter
stc
add
rorl
stc
add
pushf
jne
mov
faddp
add
mov
test
decb
cltd
push
sub
mov
mov
inc
les
stc
add
shlb
add
sti
mov
pop
inc
inc
jle
add
adc
gs
and
or
idivb
jns
xchg
xchg
mov
lret
mov
lret
lret
xor
in
sti
and
fxch
adc
stos
cmp
loope
mov
sbbl
pop
out
imul
shlb
jo
cmc
or
jge
jo
movsl
pop
outsb
push
push
mov
shl
mov
loop
pop
xchg
cmpsl
mov
and
push
jo
cmc
add
negl
inc
pop
add
adc
or
mov
test
fidivrs
adc
movsb
sub
or
xor
into
mov
ss
mov
sub
cmp
sub
xor
jb
xchg
int3
push
mov
sbb
aam
jno
or
scas
pushf
lods
sub
xchg
sub
inc
pop
mov
mov
scas
sub
jb
mov
xor
and
subl
mov
xor
rol
mov
xor
add
sub
pop
sbb
les
mov
scas
cmp
inc
pop
mov
sub
idivl
enter
push
movsl
xchg
rcl
hlt
mov
fisubs
aad
aas
cmpl
hlt
add
mov
das
out
rcll
mov
push
loope
mov
sub
adc
adc
loop
fcomip
rcrl
sbb
gs
jg
fcoml
sub
ja
dec
push
and
mov
pop
mov
push
jae
sar
lds
xchg
push
cli
loopne
insb
test
sub
adc
cltd
ljmp
mov
lea
loopne
xchg
mov
sbb
pop
lds
stc
cmpl
adc
cld
pop
ret
in
inc
xor
pop
ret
cld
push
adc
push
decl
ret
push
test
pop
fsts
xor
jno
lds
scas
mov
loopne
test
dec
fldcw
add
stc
scas
nop
loope
mov
dec
iret
outsl
add
shlb
stc
add
icebp
cmp
call
xchg
out
aam
xchg
scas
mov
loop
ljmpw
and
or
pop
imul
dec
stc
or
idivl
jae
in
lcall
data16
jo
dec
sahf
mov
dec
call
in
call
fnsave
jle
add
or
dec
jns
imul
imul
jo
or
movl
push
adc
mov
sub
or
or
jle
jo
sbb
jmp
ljmp
fsubrl
mov
add
add
jo
into
mov
insb
push
pop
dec
imul
insl
js
mov
cmc
movsl
loope
jecxz
mov
and
pop
in
jmp
enter
mov
shl
jmp
push
lahf
cltd
iret
xchg
bound
cli
mov
sbb
cwtl
enter
pop
out
jmp
jo
sbb
in
adc
and
and
jo
sub
or
mov
imul
out
add
jle
cmp
xchg
pusha
jo
loope
sub
jbe
mov
mov
xor
call
jg
idivl
pop
fildl
lods
jl
hlt
sub
lea
mov
pop
cmp
or
jbe
xchg
scas
jno
fsubrl
lret
inc
lret
jae
into
ds
cmc
xor
cmp
mul
add
pop
divl
icebp
stc
lcall
cmp
cwtl
scas
aad
mov
test
push
add
jo
nop
inc
test
sub
jno
xor
jle
jo
xor
stc
push
mov
rcrl
sbb
xchg
push
and
aam
fidivl
jae
or
xchg
wrmsr
jle
arpl
jbe
out
mov
inc
hlt
insl
cmp
mov
push
sbb
mov
xor
aad
roll
push
out
and
lds
jbe
inc
xor
pop
cltd
push
sbb
shlb
cwtl
mov
jecxz
stc
jbe
vprotb
mov
jb
lock
lret
jne
imul
add
mov
adc
mov
fadds
add
xchg
and
mov
mov
jle
aam
sarb
fisubrs
xor
cs
clc
cmp
fiadds
jp
insl
into
mov
or
test
push
dec
in
into
or
xchg
into
sbb
mov
push
adc
test
cltd
dec
outsl
mov
idivb
push
movsl
xchg
js
enter
aad
enter
fxch
pop
dec
enter
mov
and
in
leave
into
fdivrl
xor
in
enter
adc
adc
sahf
pop
ret
lret
mov
dec
and
pushf
shl
inc
enter
add
fcompl
ret
aam
insl
clc
outsl
lea
andl
jge
aad
fisttpll
scas
mov
bound
sub
aad
js
repz
mov
push
and
lea
mov
push
test
or
inc
push
push
xcrypt-cbc
cmpsl
push
sbb
mov
cld
and
jmp
mov
test
pushf
xchg
and
aas
loop
out
mov
or
xchg
pop
dec
dec
popf
mov
neg
mov
into
ret
mov
das
sub
in
adcb
xchg
repnz
and
and
mov
scas
mov
repnz
loop
jb
sub
cmp
mov
cmp
inc
jg
ret
es
sub
adc
test
add
ja
sub
ljmp
stos
inc
pop
repnz
sub
sahf
idivb
icebp
xor
movsb
pop
scas
and
jmp
and
cmp
pop
sub
sub
fldenv
jg
in
inc
sahf
loope
mov
push
lock
adc
cmpsb
push
xor
add
xchg
add
push
sahf
imul
les
inc
push
icebp
cmp
cmpsb
test
cmpl
add
and
stos
jno
or
int3
xchg
aam
fisubl
mov
pusha
cmpsb
aad
adc
xorb
subl
jle
mov
adc
mov
fcmovnbe
sub
sub
stos
mov
or
not
inc
push
mov
mov
pushf
xor
sub
or
xor
cltd
out
nop
push
xchg
push
pushf
loop
mov
push
or
push
faddp
dec
imulb
xchg
enter
repnz
lret
mov
mov
stc
subl
sbb
fldt
lret
pop
fldt
mov
in
or
push
call
mov
repnz
or
roll
or
ss
out
dec
push
mov
call
push
push
dec
lods
xchg
dec
xor
inc
subl
mov
xchg
inc
pop
movsb
sub
add
cmp
or
pusha
mov
push
adcl
scas
pop
dec
leave
add
stos
push
push
and
jne
mov
sub
pusha
call
popa
xor
cli
lret
shl
insb
shll
test
xchg
fcoml
insl
jmp
test
xchg
jns
add
scas
xchg
rcrb
mov
cmc
outsl
xchg
and
sub
push
lahf
sahf
xor
loop
outsl
xchg
and
dec
xchg
pushf
cwtl
inc
les
xchg
cltd
lods
std
addl
cmpl
cmp
lahf
pop
mov
adc
inc
dec
lret
sahf
hlt
pop
nop
mov
orl
sbb
jae
lea
cwtl
mov
inc
lretw
mov
jge
icebp
mov
lretw
xchg
add
out
stos
popa
popa
hlt
shll
mov
test
scas
cld
dec
mov
add
cmpl
outsl
scas
fsubl
out
stos
cmp
push
cmp
jbe
aad
insb
int
mov
scas
cmpsl
xor
push
xchg
push
mov
outsb
aam
outsl
dec
sub
inc
mov
mov
mov
lds
fs
aam
xchg
shl
jno
mov
aam
ret
ja
aam
stos
js
stos
fdivs
cmp
fwait
xchg
xchg
fistl
aam
lret
test
and
movsb
pop
stos
aam
mov
rcrl
push
mov
insl
fwait
push
test
inc
mov
mov
cmp
loop
rcll
rcll
inc
jl
sbb
mov
pop
adc
pushl
cwtl
pop
adc
test
test
test
add
and
mov
popa
jb
popa
jmp
cld
std
jnp
shll
stc
lahf
cmc
fld
dec
jo
adc
scas
mov
jnp
shll
mov
cmpsl
mov
shll
test
shll
pushf
fnsetpm(287
mov
test
push
loope
in
js
push
fucomi
jnp
shll
mov
push
adc
loop
mov
jbe
leave
add
shll
ret
mov
adc
dec
out
adc
xchg
push
mov
mov
add
push
sahf
rol
addl
shr
pmulhuw
pop
sbb
mov
push
cmp
sbb
jmp
xchg
enter
sarl
sub
mov
jmp
or
imul
jae
pushf
mov
sub
lret
adc
aam
cmc
test
mov
jecxz
push
push
cmp
and
outsl
mov
leave
and
add
popa
imul
scas
push
xlat
mov
adc
imul
test
stos
ret
sbb
cmp
jnp
fdivrl
subl
lds
out
ret
xchg
fistl
fnstenv
and
or
adc
or
enter
push
and
jbe
xchg
sahf
push
xor
pushf
movsb
sub
jmp
inc
cli
jno
in
decl
out
mov
mov
call
jb
inc
hlt
outsl
into
popf
pop
mov
test
mov
call
fbstp
out
aas
mov
gs
xchg
mul
cli
fcomip
push
fsub
hlt
mov
cmp
mov
push
xor
sbb
xchg
lahf
in
sub
test
xchg
push
movsl
xchg
hlt
mov
loopne
mov
xchg
push
enterw
popf
hlt
loope
or
push
inc
lods
or
in
mov
xchg
in
pop
add
sub
cltd
fdivl
filds
fistps
hlt
inc
hlt
fidivrl
aas
and
sub
bound
dec
dec
push
stc
sub
pusha
pop
aaa
icebp
call
add
xor
leave
fucomi
ljmp
ljmp
out
adc
out
and
fchs
data16
mov
sub
mov
or
cmpsb
test
not
roll
stos
sbb
in
sbb
and
aam
fistl
orl
fcompl
xchg
inc
inc
imul
test
jle
sub
movsl
sbb
push
pop
or
ljmp
jmp
add
xor
inc
push
cli
pusha
imul
int3
and
and
and
xchg
into
inc
in
xchg
and
mov
rolb
ficoml
fmull
xor
adc
mov
dec
adc
stos
dec
fsubl
hlt
push
mov
inc
inc
divb
push
pop
xchg
dec
mov
stos
add
scas
xor
inc
dec
sub
or
ret
pusha
nop
dec
sbb
dec
mov
jle
in
mov
cmp
dec
aad
cmpsl
leave
add
dec
add
inc
nop
shl
je
and
out
inc
mov
push
mov
inc
lock
inc
and
jmp
shl
aam
xor
loopne
dec
dec
test
mov
cmp
int3
lock
subb
pop
dec
lret
mov
testb
sbb
add
ficoms
or
out
add
adc
jno
lahf
dec
scas
fisubrs
stc
push
mov
mov
xor
and
out
add
jbe
movsb
dec
roll
inc
fimull
push
cmpsb
mov
outsb
mov
popf
hlt
sbb
faddl
mov
test
fildl
rcrl
dec
insl
dec
aad
test
les
pop
call
enter
and
out
push
and
jmp
push
out
xor
loopne
sub
out
inc
inc
dec
out
repnz
sub
es
out
adc
inc
out
mov
adc
hlt
jecxz
popa
in
movsb
loope
pop
xor
xchg
mov
mov
add
in
pop
mov
shll
pop
lock
bound
call
icebp
sub
ret
popa
pop
ret
or
test
hlt
adc
push
inc
shlb
test
je
and
ljmp
in
add
psadbw
in
scas
sub
mov
xchg
or
xlat
out
push
sub
push
pop
stos
or
push
jg
hlt
jle
jns
neg
out
xor
sbb
inc
scas
ret
dec
pop
jb
mov
cmc
add
out
mov
jg
orl
hlt
or
adcl
aam
mov
or
cmpsb
fs
or
enter
hlt
cmp
dec
mov
mov
add
cmpsb
pop
mov
and
loope
rorb
or
mov
mov
js
push
aas
enter
jbe
or
pop
iret
cli
rcrb
sub
stos
pop
dec
jl
mov
inc
pop
iret
iret
cli
push
jl
ficomps
outsb
mov
in
mov
xlat
push
mov
ljmp
imul
lods
xchg
std
add
xchg
push
fisttps
hlt
mov
aad
stos
inc
sub
mov
cld
add
test
or
rclb
sbb
sub
or
jg
dec
das
sarl
sti
pop
insb
fimuls
pop
movsb
flds
stc
pop
outsl
inc
hlt
mov
shl
inc
jnp
mov
mov
cmc
mov
mov
cmpsb
fdivrs
cwtl
add
jmp
inc
cmp
jle
add
push
pushf
mov
test
stc
stos
pop
sbb
or
das
stos
xchg
lret
jne
jmp
stos
hlt
insl
aam
ret
xchg
test
mov
cwtl
add
lret
mov
gs
sets
movsl
mov
scas
mov
add
les
hlt
mov
cwtl
sub
push
cmp
sub
lea
push
push
testl
add
call
jge
nop
push
daa
pop
shr
mov
hlt
sbb
sar
pushf
xlat
mov
mov
ror
jns
dec
movsb
ja
mov
mov
cmp
js
jbe
pop
sahf
rorb
rcr
cld
xor
dec
fadds
sub
ljmp
add
pusha
xchg
shr
lds
adc
rcl
andl
sbbl
add
shlb
cmp
pop
xor
inc
pusha
repz
xchg
das
sets
mov
rcl
or
rolb
mov
fninit
or
aam
rorb
fiaddl
or
add
inc
push
xchg
xchg
xor
sar
jns
xchg
es
shlb
or
push
mov
orl
or
jbe
xor
fcmovnu
shr
mul
push
mov
je
das
add
jo
loope
cwtl
je
adc
mov
or
push
push
lret
out
movsb
aad
xchg
insl
sarb
mov
mov
jmp
mov
lock
inc
sub
jo
inc
push
mov
or
sub
push
fisubl
mov
mov
lret
xchg
mov
es
cld
ljmp
outsb
or
sub
cwtl
dec
lods
roll
imul
fadd
add
or
test
add
shl
shlb
rolb
dec
mov
inc
loop
in
jns
das
into
fcoms
xchg
push
shl
and
jno
push
adc
inc
cmp
mov
cmp
and
repnz
jmp
xchg
sbb
out
mov
sbb
sub
cmpsb
pop
arpl
mov
test
dec
cwtl
clc
out
lret
addl
mov
std
test
stc
pop
cmp
sub
or
in
jge
test
enter
imul
into
push
mov
shl
cli
rolb
xchg
popa
xlat
mov
inc
adc
lahf
xchg
sbb
sahf
ror
roll
leave
mov
cs
pushf
arpl
inc
cmp
ret
ja
and
hlt
mov
or
adc
test
andb
adc
insl
xchg
enter
fisttpll
mov
inc
cmc
mov
pushf
imul
inc
add
pop
or
mov
rolb
xadd
pop
shl
hlt
fwait
aas
and
test
sub
xchg
mov
rcll
orb
vcmppd
push
mov
mov
lcall
sbb
fsub
mov
jmp
mov
add
hlt
int
pop
ret
hlt
mov
sub
repnz
pop
hlt
leave
jp
jmp
hlt
arpl
nop
jbe
and
or
add
sub
xchg
or
les
std
add
call
mov
ja
lret
popf
pop
movsl
push
mov
loope
fldl2e
push
loope
jl
subb
pushf
cwtl
xlat
nop
loop
ficoml
fimuls
insb
xlat
or
stos
movsb
out
adc
sbb
arpl
popa
clc
imul
movsl
in
outsb
into
adc
fsubrl
or
inc
and
cmp
inc
push
mov
jmp
call
lahf
int3
mov
cmp
rorb
ficoms
fisubrl
das
and
jno
xchg
fidivl
jecxz
gs
aas
sub
inc
pop
jg
sub
sbb
aam
mov
pop
mov
jmp
hlt
adc
or
mov
and
jp,pn
movsl
pop
mov
call
jno
xchg
leave
cltd
loop
adc
mov
cmp
ret
mov
cwtl
fisubrl
xor
ss
lods
or
out
add
es
pop
bound
jle
and
inc
inc
push
and
and
jmp
scas
daa
movsl
xchg
cmp
out
cmp
icebp
xor
dec
jns
sub
pop
xor
mov
lret
fisubl
and
mov
shl
xchg
mov
jge
or
enter
out
jnp
out
add
xchg
inc
rcrl
lret
icebp
jne
mov
into
jle
lret
mov
xchg
lahf
add
inc
push
lcall
scas
pop
xor
cmp
and
mov
repz
popf
and
fcoms
loop
lods
lret
mov
enter
test
hlt
enter
out
cwtl
into
adc
mov
push
ds
xor
xchg
dec
or
add
mov
mov
fisttps
fmul
xor
popf
loop
mov
pop
push
mov
hlt
and
loope
mov
mov
pop
pop
sub
jmp
hlt
lds
mov
or
mov
loopne
mov
shll
mov
mov
test
and
jle
and
xchg
or
and
jo
fdivp
inc
sub
mov
loopne
xorl
loopne
hlt
push
push
sti
pop
xor
aam
or
bound
dec
pop
aaa
loopne
fbstp
ja
sahf
loopne
int3
xor
std
jb
aas
sbb
dec
test
rclb
xchg
pushf
repnz
imul
test
popf
sbb
std
xchg
repnz
xchg
call
loopne
hlt
pop
scas
mov
dec
adcl
int3
test
dec
dec
popf
dec
nop
ficomps
imul
mov
sub
push
ficoml
lock
inc
negb
sub
roll
scas
dec
jge
rclb
adc
test
xchg
sub
insl
das
int3
lock
pushf
xor
fsubs
pop
rolb
test
mov
rclb
mov
in
jmp
mov
inc
jbe
sbb
jae
mulb
pop
pop
je
jl
add
iret
or
or
mov
bound
mov
fisubs
or
movsl
mov
out
mov
adcl
and
pusha
inc
xchg
mov
fdiv
out
or
fcmovnbe
mov
inc
cli
and
jbe
or
insl
pop
add
jg
decl
test
jmp
loopne
pop
mov
insl
adc
pop
mov
push
out
cmpsb
dec
aas
leave
fxch
insl
push
push
push
jno
mov
jno
pop
nop
movb
cmc
cmp
scas
mov
cmpsl
inc
repz
shl
dec
sarl
test
cmp
xchg
ret
adc
out
inc
shr
cmpsb
cmpsl
push
movsl
cmp
xchg
cmp
outsb
imul
push
lods
icebp
adc
mov
inc
mov
pop
push
push
dec
jnp
repz
scas
loope
in
das
dec
in
out
shrb
orl
insb
mov
rorb
in
in
mov
push
rcrb
sbb
add
mov
mov
pop
lahf
sarl
mov
cmc
fnsave
fidivs
cltd
pop
repnz
arpl
js
cltd
push
or
addl
mov
push
mov
mov
jp
or
test
pop
rorb
lret
push
out
test
add
fwait
nop
shlb
in
or
adc
xchg
cmp
sub
nop
dec
mov
jno
add
aam
push
sub
sub
or
daa
stos
inc
mov
jbe
mov
stos
inc
push
rclb
leave
test
stos
fs
mov
repnz
dec
or
stos
inc
and
mov
jnp
js
add
out
into
adc
clc
cmp
sbb
jle
out
sub
push
shrl
cmpl
push
mov
pop
clc
popa
dec
test
test
repz
xchg
pushf
dec
fs
cmp
cmpsb
pop
je
hlt
xchg
jns
sub
xor
pop
add
mov
call
xchg
mov
or
mov
frstor
mov
addl
pushl
into
std
lret
jg
mov
cmp
xchg
call
hlt
sub
pop
adc
fildl
outsl
hlt
pusha
adcb
out
enter
hlt
fs
mov
nop
fmuls
jne
xchg
hlt
cltd
dec
lods
jmp
inc
loop
push
mov
dec
testl
inc
mov
ljmp
into
sub
xchg
add
add
adc
les
adc
arpl
and
mov
frstor
fld
xchg
test
pop
mov
je
add
hlt
mov
mov
xchg
stos
std
sbbl
fdiv
das
mov
push
sbb
push
rclb
or
orb
jno
add
mov
and
rolb
mov
sub
dec
mov
hlt
pop
sbb
ret
jo
mov
iret
push
xor
adc
pushf
push
out
or
enter
fisubl
cli
and
ljmp
dec
mov
out
adc
pop
jns
loop
stos
sbb
pushf
sub
sub
out
inc
jmp
cmp
sbbb
cli
int3
xor
scas
pop
and
stos
xchg
xchg
fiadds
jecxz
scas
pop
iret
xor
test
scas
mov
sbb
adc
push
dec
icebp
adc
mov
repnz
orb
add
dec
sti
in
aas
jae
or
popf
loope
jb
fst
dec
xor
sub
sub
cmp
std
mov
call
scas
xchg
mov
fldenv
ret
ja
jp
adc
lahf
jno
test
mov
ret
inc
add
mov
cmp
pushf
mov
xor
mov
push
push
push
mov
out
aad
mov
dec
mov
add
mov
movsl
dec
in
pop
hlt
cltd
pop
cmpsb
les
sub
cmp
push
pushf
in
mov
mov
sbb
imul
pop
pop
adc
pop
or
xorb
push
pop
push
mov
push
mov
fisttpll
xchg
testl
ds
repz
push
lahf
fisttpll
pop
pushf
fldl
les
mov
in
cmpxchg
or
test
cmp
pop
into
inc
lret
mov
mov
mov
outsl
dec
and
hlt
mov
inc
add
cs
jp
clc
mov
dec
call
sbb
cmpsl
js
cli
test
mov
sbb
xchg
loopne
xor
mov
movsb
xchg
push
add
imul
cmp
inc
xadd
adc
test
and
out
mov
jne
lahf
push
enter
lds
push
je
sub
and
push
out
push
les
jl
scas
xor
leave
rolb
sub
push
pop
or
adcb
jno
dec
pop
std
adc
arpl
cmp
dec
jno
xor
inc
adc
xchg
cli
jno
fcomps
test
shll
xor
mov
cmc
pop
xorb
outsb
inc
mov
push
add
je
cmp
or
nop
dec
jne
loope
loopne
add
scas
push
mov
push
dec
imul
mov
push
pop
rorb
imul
loop
push
fdivrs
pop
mov
or
out
adc
dec
repz
in
out
sbb
loopne
fadds
xor
dec
je
cmp
clc
loop
inc
test
ja
dec
and
sub
adc
call
loopne
out
ret
inc
and
mov
hlt
loope
test
mov
sub
pusha
rorb
fdivrs
adc
cmp
call
imul
jno
sbb
cltd
xor
cmp
mov
mov
sahf
xor
cmp
hlt
xor
lods
lods
mov
cli
outsl
sarl
jg
outsb
mov
and
pop
stos
inc
leave
loopne
pop
cld
loop
movsl
xchg
rolb
push
fsubrs
subb
rcr
pop
fbstp
ljmp
mov
cs
movsb
and
pushf
inc
test
loopne
inc
nop
mov
jae,pn
insl
mov
jnp
dec
in
jbe
dec
and
lea
and
shll
push
mov
or
mov
and
orl
sbb
jecxz
sub
test
fistl
loope
cmp
lahf
cmp
fistps
mov
xchg
fisttps
rcr
push
pop
test
add
xor
adc
add
imul
xchg
inc
cmp
cmpsl
addr16
jge
pop
subl
out
mov
pop
test
mov
lods
push
xchg
sub
mov
adc
pop
adc
pop
push
push
sbb
imul
xchg
xchg
lcall
popa
aam
jl
sub
hlt
sub
rolb
aam
mov
or
mov
add
push
loop
sbb
shll
hlt
cmovne
incl
jbe
adcl
xchg
sub
mov
and
cmp
dec
les
hlt
sbb
daa
inc
in
jge
jne
pop
fsts
shrb
jmp
mov
mov
add
xchg
mov
aam
mov
jne
rcrb
sub
popa
enter
push
mov
push
cmp
mov
push
test
mov
ljmp
adc
or
hlt
cwtl
movl
sar
cmpsl
addr16
out
mov
in
push
and
movsb
push
pop
jge
jge
nop
sbb
dec
jp
cltd
in
faddl
push
in
test
jno
stos
into
add
lds
les
or
and
repnz
mov
ret
enter
test
ret
scas
movsb
iret
adcb
sbb
insb
mov
fistpll
xchg
xchg
addb
jnp
imul
dec
pop
jmp
repnz
loop
dec
ret
hlt
decl
cld
sbb
fadds
ret
repz
roll
subl
lock
test
loope
mov
push
mov
cmp
adc
outsl
js
fdiv
inc
insb
xchg
jp
mov
or
jbe
sar
mov
sub
push
xchg
addl
ja
add
xchg
icebp
aas
mov
mov
mov
loopne
fistl
cwtl
sbb
cmp
mov
lret
andl
hlt
dec
add
sbb
push
cs
cld
rcrb
movsb
mov
adc
and
insl
adc
add
inc
pop
lock
shrb
jg
lds
mov
icebp
push
pop
add
cmpsb
cltd
sbb
int3
out
sbb
bound
push
hlt
out
sbbl
add
enter
adcl
add
inc
xor
mov
mov
add
rclb
call
jecxz
js
and
dec
sti
shrb
aas
clc
repz
and
sub
pop
out
xchg
int3
ret
pusha
mov
push
int3
xor
mov
sub
test
out
and
fcomi
pop
mov
roll
push
mov
cmp
movsb
sub
ror
or
xchg
pop
rol
lahf
xchg
sub
bound
test
mov
sub
push
rcll
sub
add
push
clc
mov
scas
push
cmp
xchg
xchg
jg
leave
nop
pop
cltd
push
or
xchg
mov
fiaddl
mov
or
orl
lret
push
adc
adc
lret
imul
ja
out
mov
insl
ret
sub
adc
mov
or
lods
insb
in
jno
sub
repnz
inc
pop
adc
jo
sti
sarl
add
repz
hlt
jl
add
data16
in
adc
mov
inc
jbe
add
jmp
loop
adc
test
sub
vpunpcklqdq
sbb
mov
and
mov
mov
sti
jne,pt
fwait
xchg
enter
mov
jl
adc
lret
xchg
mov
hlt
push
ljmp
lahf
hlt
rcl
ret
push
call
popa
xor
push
xchg
bound
loopne
xor
fcomps
stos
mov
shrb
adc
out
xchg
in
mov
test
scas
xchg
test
in
les
sub
rep
mov
es
dec
data16
jp
loopw
outsb
stc
leave
jle
loopne
sub
ja
mov
mov
sub
jno
and
stc
sub
sub
jne
adc
stc
hlt
fcoms
mov
mov
stc
inc
fnstenv
pop
loope
stc
shrb
enter
stc
movsb
lods
repnz
ret
pop
stc
pop
loopne
ret
mov
in
mov
add
cmpsb
xor
stc
xor
xor
lret
cltd
stc
dec
sub
mov
js
pop
pop
add
stc
repnz
add
mov
mov
mov
or
fnstenv
jle
mov
shll
or
inc
adcl
push
mov
in
xchg
jno
and
insb
or
sub
dec
lea
test
sbbb
aaa
loopne
mov
mov
and
add
fisttpl
jmp
sub
jge
stos
adc
sbb
adc
cmp
in
loop
mov
inc
inc
mov
mov
xchg
bound
fadds
es
jbe
xor
pop
push
adc
xlat
inc
sbb
test
dec
xchg
xor
adc
sbb
int3
sub
push
in
stos
mov
mov
in
push
mov
jae
cld
pop
inc
loop
push
mov
pushf
cmpsb
dec
test
xchg
add
stc
insl
xchg
aam
xchg
fistl
enter
into
cltd
adcl
adc
adc
jl
cmpsb
out
enter
imul
outsl
shll
dec
incl
inc
rcrl
adc
mov
xchg
andl
mov
add
or
xchg
push
sbb
aam
inc
jbe
into
dec
push
bts
enter
push
xchg
cmpsl
pop
jno
fsubs
push
ds
jne
ds
mov
inc
ffree
or
aad
pop
pop
out
in
loop
movsb
and
shll
scas
sar
push
aam
mov
dec
xchg
pop
or
push
push
mov
or
push
jne
mov
cmpsl
out
mov
daa
rep
sub
outsb
les
pop
push
mov
shrb
sbb
fiadds
stc
jp
or
or
fiadds
test
mov
inc
mov
cmp
xchg
clc
jge
scas
or
int3
fildll
clc
cmpl
sub
jno
push
mov
ljmp
bnd
xchg
fsubl
hlt
ljmp
insb
jnp
lds
movsb
adc
popf
aam
test
arpl
jne
test
jge
leave
js
fwait
in
ds
cmc
push
loop
rcrb
mov
inc
add
mov
jge
movsl
std
dec
subb
fld1
mov
loopne
mov
cmc
and
iret
shll
sub
sbb
hlt
mov
subb
mov
jnp
sub
cmc
adc
add
adc
cmc
and
xor
fiaddl
loop
and
xchg
fnstsw
cmp
pop
mov
xchg
les
xor
adc
cli
add
add
jecxz
mov
lock
sbb
inc
into
rclb
xchg
in
mov
int3
adc
nop
arpl
and
std
gs
sbb
xchg
sub
cmp
pop
jp
ja
repnz
mov
movsb
mov
imul
push
jl
dec
and
add
hlt
sbb
add
fucompp
push
lods
sbb
pop
les
sub
cs
test
adc
cwtl
test
push
pushl
es
dec
xor
hlt
cmp
pop
mov
mov
mov
cmpsl
stc
stos
jo
inc
xor
cmpl
cmpsb
jbe
jne
mov
sbb
jmp
fiadds
insb
orb
insl
xchg
xorb
push
mov
fsubs
popa
nop
inc
daa
je
mov
loopne
xchg
inc
movnti
mov
or
lret
int
or
pop
aas
dec
jmp
fcoml
ss
mov
mov
hlt
fdivl
ret
dec
leave
push
orb
cli
sbb
fidivrs
adc
fidivs
sub
inc
inc
test
mov
orl
jbe
jo
jne
sub
dec
rorb
mov
leave
mov
mov
hlt
mov
dec
aad
xor
mov
pop
xchg
clc
push
inc
cmp
add
pop
mov
addl
nop
pop
push
in
aas
xor
xlat
repnz
test
dec
repnz
int
add
nop
push
xchg
int3
or
add
xor
stc
sbb
xchg
adc
lock
or
push
mov
ret
or
mov
rcrl
add
mov
fisubs
jmp
jae
xchg
lret
cmc
call
data16
xchg
jbe
scas
in
add
mov
jle
js
add
fstpt
orl
mov
cmpsl
mov
les
icebp
push
into
xor
inc
mov
mov
aad
lods
dec
nop
loop
andl
out
imul
push
ds
xchg
sub
mov
jle
xor
xchg
fisubl
ja
cmc
je
inc
mov
iret
jnp
cmp
inc
adc
adc
leave
lea
ljmp
cwtl
pop
add
jbe
mov
ljmp
pop
ret
adc
lock
inc
rcrb
xchg
cmpsl
mul
lret
cld
loop
mov
add
or
xlat
dec
test
loopne
cmp
hlt
or
mov
xchg
cli
cmc
fstps
hlt
adcb
fcmovu
scas
or
or
rcrb
lods
sbb
jo
add
cwtl
push
in
popf
pop
pop
pop
cmp
or
or
out
sub
cltd
sbb
ficompl
mov
fisubl
add
out
xor
pop
inc
gs
clc
jl
loope
imul
in
dec
cmc
pop
outsl
loop
shl
inc
cld
addb
jns
add
fstp
add
dec
insb
or
add
sub
cmpsl
add
stos
dec
insb
or
enter
mov
scas
scas
inc
mov
add
daa
ljmp
push
dec
cmpsl
jbe
lahf
movsl
loopne
fsubs
pushw
cmp
shrb
test
hlt
and
add
xchg
dec
mov
cmp
pop
and
leave
loopne
mov
or
shl
shld
adc
xchg
add
fadds
mov
dec
ljmp
inc
and
je
mov
scas
stc
inc
enter
mov
in
cmp
loop
bsf
es
popa
mov
pop
in
out
inc
js
out
dec
mov
es
es
mov
test
in
in
xchg
lods
sub
les
in
rclb
enter
adc
and
lock
cmp
leave
bound
lahf
xlat
dec
mov
adc
add
aas
scas
xchg
stos
push
fildl
hlt
lret
rcll
cmp
add
mov
jbe
jge
add
adc
xor
xchg
inc
pop
orb
sarb
je
jg
adc
inc
insb
movsl
mov
bound
mov
push
test
xorb
ret
mov
mov
add
adc
mov
mov
adc
push
cmp
test
push
pop
add
icebp
cmpsb
fidivl
and
push
push
sar
adc
pop
xchg
or
stc
jnp
loop
aad
xlat
jl
mov
test
cmp
sub
push
aad
jns
adc
test
mov
aas
scas
sti
sub
add
fimull
ret
sub
xor
adc
rcrl
aas
scas
imul
lret
inc
sbb
sbb
sbb
mov
sub
in
jb
hlt
data16
testl
mov
bound
frstor
xor
inc
mov
fisubs
shrb
es
jecxz
adc
fwait
dec
enter
mov
cmc
icebp
jo
movsl
xchg
mov
sbb
mov
mov
fwait
add
adc
add
outsl
fisubs
rcrb
mov
mov
ljmp
mov
out
push
andl
decl
sbb
loop
insb
xor
loop
push
gs
aad
lock
cs
out
xor
xchg
adc
rcrl
repnz
scas
push
push
out
pop
cmp
pop
push
hlt
add
dec
cmp
dec
push
add
pop
add
shll
add
mov
adc
or
adc
test
lods
push
pusha
scas
stc
jg
inc
and
pop
mov
mov
lahf
fmuls
dec
outsl
lods
arpl
test
js
adc
test
shll
push
ds
shll
mov
popf
sub
jbe
call
aas
jg
xchg
fnsave
leave
mov
dec
xchg
mov
mov
stos
mov
fdivr
mov
adc
mov
mov
test
andl
es
es
sub
push
xchg
inc
ret
shll
lret
les
std
fsubrs
das
loopne
push
xchg
jecxz
xchg
jb
mov
xchg
orl
lahf
sbb
fisubs
pop
jae
mov
push
out
xlat
cmp
fists
inc
mov
clc
add
repnz
ret
pusha
inc
int
fs
dec
pop
mov
mov
gs
lret
add
fcmovbe
insb
jbe
cmp
xlat
xchg
scas
icebp
ljmp
das
sbb
mov
inc
in
jg
movsl
lock
add
pop
and
pushf
sub
mov
sbb
add
push
ljmp
out
cs
ret
jne
add
push
sbb
repnz
stc
sbb
sahf
mov
ja
std
cmp
icebp
mov
sbb
mov
xchg
insl
add
or
inc
fbld
cmp
mov
icebp
or
jl
cs
les
add
push
mov
les
or
jmp
add
sti
push
xor
cmp
pop
aam
or
gs
scas
push
loop
bound
push
hlt
mov
xchg
or
jl
daa
xchg
inc
push
add
stos
imul
dec
jne
add
rorb
xchg
pop
jne
push
mov
and
sbb
psllw
add
hlt
dec
lret
jecxz
push
jmp
xchg
mov
jb
repnz
pop
aam
or
cmpsb
js
xlat
adc
or
in
js
filds
faddl
xchg
dec
add
aad
xchg
mov
out
push
fisubs
mov
mov
js
lcall
or
test
xchg
pop
mov
mov
lea
xchg
icebp
adc
mov
les
xchg
cmp
stos
pusha
loopne
push
or
sarl
mov
xchg
icebp
xchg
mov
push
inc
fcmovne
pusha
sbb
enter
cs
out
cwtl
cmpsl
push
in
pop
pushf
pop
add
stc
or
jb
hlt
add
add
cmp
xchg
and
push
push
or
pop
xchg
xlat
in
js
xlat
adc
or
aad
vcvttps2dq
test
push
lret
jg
mov
setb
sbb
mov
pop
mov
xchg
les
adc
jg
push
adc
scas
push
sahf
mov
jg
mov
inc
imul
popa
ds
xchg
fcoml
cld
stc
mov
icebp
mov
imul
sub
sub
fs
decb
sahf
rorb
loope
negb
push
add
ljmp
inc
pop
cmp
inc
or
add
cmpsl
aad
pop
lds
test
fildl
sbb
cmp
scas
dec
aaa
inc
addr16
dec
sub
test
dec
sbb
mov
inc
jle
gs
jns
in
mov
incl
ljmp
cwtl
mov
dec
lret
xchg
mov
in
decb
fxch
dec
imul
add
adc
mov
sub
movl
shrl
cmp
nop
gs
lods
ret
jne
insl
lret
mov
fldenv
mov
or
lock
clc
or
cmpsl
inc
adc
adc
or
jb
pop
xchg
fistpll
ret
stos
pusha
and
mov
scas
inc
les
add
or
insb
lods
xor
dec
and
pop
xor
js
rcrb
mov
or
inc
hlt
pop
pop
mov
leave
add
xchg
or
mov
jp
xchg
cmpsb
push
outsb
rorb
hlt
xor
lret
cmpsl
mov
mov
or
pop
repnz
ss
aas
les
shlb
into
add
push
push
push
js
xchg
sub
pop
cmpsb
sub
shrb
out
shrb
sub
movsl
test
or
sbb
pop
clc
hlt
xchg
cmpsb
test
icebp
ds
sysret
sbb
pop
pop
mov
sahf
xchg
sar
and
loop
adc
filds
adc
dec
int
rorl
or
sub
test
repz
pop
cmc
lods
dec
loope
push
push
fisubrl
add
hlt
aam
mov
test
jb
in
gs
cmp
mov
test
push
loope
dec
pop
mov
pop
idiv
call
dec
dec
adc
leave
pusha
pop
push
leave
pop
sub
and
or
repz
add
lods
hlt
dec
daa
out
hlt
or
cmpsl
jp
rorl
pop
xchg
or
fisttpll
out
and
xor
mov
cmc
mov
leave
pusha
jg
mov
sarb
pop
jmp
incb
and
mov
in
or
xchg
out
xchg
sbb
adc
insl
and
sbb
pop
push
jo
sub
xchg
out
or
adc
ljmp
inc
pop
or
inc
daa
pop
out
dec
jg
mov
fildl
pop
ljmp
sti
adc
push
add
mov
adc
xchg
loope
push
xchg
ds
jbe
lcall
mov
push
inc
adc
cmp
adc
and
mov
in
add
inc
or
test
jmp
xor
xor
lret
sub
lods
mov
pop
js
or
jo
out
push
xor
loope
or
movl
jne
cld
mov
aas
dec
ret
adc
mov
cmc
sub
sbb
movsl
int3
mov
test
or
dec
popf
mov
loop
sahf
xchg
push
lock
sub
inc
pop
inc
mov
xor
jge
pop
adc
ja
jmp
xor
add
pushf
into
or
lds
les
hlt
sbb
rcll
insb
mov
xchg
mov
sti
std
imul
inc
xlat
cmp
imul
mov
or
sub
mov
sarb
repz
push
pop
aaa
mov
push
lahf
in
lret
dec
sub
out
xor
sub
cmpb
sub
sub
rcll
inc
cmp
push
mov
mov
movsl
cmc
icebp
mov
jle
mov
jno
mov
cmp
pop
dec
arpl
mov
inc
sub
cmp
fisubrs
xor
mov
xchg
or
push
add
jno
roll
xor
push
lahf
out
bound
pop
jg
jo
mov
jge
xor
rcrl
adc
jecxz
inc
mov
jae
or
test
sti
xorl
ret
shlb
xchg
enter
adc
fwait
or
sbb
sahf
mov
iret
mov
hlt
in
pop
lret
sub
pop
dec
pop
pushf
sub
xor
sbb
test
dec
xchg
push
cwtl
sbb
loop
fwait
xchg
fdivrs
ja
jo
cmp
bound
and
mov
sahf
ret
mov
mov
sahf
shrb
xchg
fadds
mov
sub
jnp
inc
adc
gs
sbb
mov
xchg
mov
mov
cwtl
cmpsb
test
hlt
cmp
mov
xchg
inc
fbld
mov
mov
mov
cmp
jns
outsb
enter
mov
lea
nop
fisubs
les
mov
lret
pop
lods
loop
fstl
push
mov
sbb
push
rorl
jns
in
sub
jns
sub
hlt
lods
fldenv
in
je
push
mov
sahf
mov
fdivrl
addr16
mov
in
cs
or
lods
les
stos
xchg
jns
mov
adc
ljmp
and
mov
dec
jp
and
xchg
frstor
dec
mov
fisubs
mov
fldcw
enter
add
shl
lods
push
nop
adc
rorb
cmc
inc
sbb
loop
sbb
push
enter
xchg
rcll
jg
repnz
mov
xor
adc
hlt
mov
add
mov
pop
test
push
and
pop
sbb
test
pop
lods
push
lcall
hlt
mov
frstpm(287
das
fcmove
dec
sub
sti
dec
and
enter
adc
mov
push
aad
cmp
dec
aad
jmp
loop
fstl
adc
loope
fwait
sbb
mov
hlt
dec
push
cmp
ret
enter
fdivrp
mov
rorl
jbe
shll
jae
loope
add
test
add
dec
imul
mov
sbb
jne
dec
aaa
dec
enter
mov
sbb
mov
mov
mov
lret
cmc
repnz
lods
pop
cli
cmc
dec
push
jl
jmp
sub
cld
sbb
hlt
je
mov
mov
push
pop
decl
fbld
cmpsl
dec
push
add
dec
lods
lock
mov
decb
mov
dec
das
or
pop
and
or
scas
fsubrl
cwtl
dec
test
cmp
enter
sub
jp
sahf
es
fsubrs
jns
es
adc
jg
stos
push
fisubs
inc
fadd
mov
mov
mov
jle
int3
mov
enter
repz
shl
clc
popa
jle
xchg
out
or
pusha
mov
or
cmpsl
aad
movsl
cli
ret
mov
fsts
hlt
rcrb
shl
push
movsb
cli
pop
in
or
xchg
add
xchg
jae
shlb
push
push
dec
push
js
pop
aam
mov
or
or
inc
hlt
sub
ftst
push
loop
hlt
icebp
loop
jge
pop
dec
cmpsl
xor
inc
cmp
adc
sbb
mov
and
dec
loopne
pop
jae
loop
mov
aas
ret
adc
mov
xchg
inc
fiaddl
clc
insl
dec
loope
pop
adc
cld
das
mov
jl
cs
lret
jmp
lret
jmp
dec
cmp
ret
add
imul
sub
bound
push
dec
aam
inc
fbld
mov
mov
std
js
push
imul
push
mov
mov
testb
and
aam
js
flds
mov
and
mov
add
or
xchg
fcmovu
fisubs
sub
clc
dec
xor
enter
mov
cmp
rcrb
stc
mov
icebp
jae
imul
jns
in
inc
mov
or
and
repnz
cmpb
hlt
dec
pop
adc
js
pop
aam
mov
fmul
jns
icebp
lret
push
mov
enter
jno
fmuls
xchg
cmp
test
mov
jnp
dec
ret
mov
sub
mov
icebp
jae
imul
jns
pop
jns
cmp
mov
and
inc
or
inc
adc
mov
and
push
hlt
inc
mov
jae
add
mov
ret
mov
jns
out
pop
sarb
cmp
bound
inc
xlat
fcomp
stos
hlt
mov
sub
xor
ss
orb
repnz
mov
and
mov
cmp
mov
adc
mov
add
xchg
and
test
std
adc
js
sarl
aam
mov
xor
pop
jmp
lret
mov
xchg
xchg
aad
pop
jmp
in
mov
inc
fisubs
movsl
inc
add
and
mov
and
xchg
sub
inc
mov
out
and
push
pop
leave
arpl
sub
adc
fbld
jbe
mov
mov
call
fadds
sub
or
scas
ret
je
cmpsl
pop
mov
subl
cmp
adc
js
repz
adc
sub
pop
xor
lea
adc
adc
jns
xchg
jge
mov
inc
out
and
mov
mov
inc
jmp
movsb
mov
inc
pop
mov
or
mov
push
dec
lret
pop
and
icebp
mov
dec
and
adc
jne
stc
cmp
mov
add
cli
xchg
jp
addl
and
or
inc
pop
lret
hlt
adc
repnz
mov
push
dec
ljmp
or
jo
cmp
jo
cmp
out
adc
nop
lret
mov
push
add
dec
test
orb
mov
dec
lret
pop
and
icebp
xchg
jge
mov
xchg
js
rep
cmc
adc
ret
lock
mov
out
clc
jno
add
jge
mov
cld
js
dec
cmc
fcoml
fmull
inc
test
jecxz
mov
test
shr
in
mov
inc
jb
or
sub
pop
sbb
or
flds
in
and
push
pop
pop
loop
popf
pop
dec
xor
out
mov
shr
jns
or
sbb
repnz
cmc
push
loop
stc
test
loop
les
push
loop
pop
test
or
or
iret
fmuls
xchg
mov
aad
inc
hlt
js
mov
mov
fidivrs
jno
jg
mov
xchg
xchg
mov
push
lods
cld
jg
jns
dec
nop
pop
sub
xor
or
push
or
xchg
pop
icebp
mov
lret
lods
sub
push
iret
cmp
loope
test
popf
dec
out
mov
les
sti
leave
int
sub
stc
mov
js
push
inc
daa
mov
int
outsb
out
cmp
clc
jg
mov
lds
sbb
add
ds
stos
mov
adc
jg
leave
pop
xor
loop
les
sub
hlt
cmp
mov
cs
mov
addr16
push
and
les
std
adc
js
pop
aam
mov
ljmp
cld
les
pop
addr16
push
pop
sub
push
inc
pop
cmpsl
inc
xor
leave
mov
movsl
xchg
hlt
cmp
pop
push
lock
adcb
cmpsb
aad
out
cltd
ds
mov
adc
xor
in
out
adc
or
enter
sub
cmpsl
je
test
sub
call
outsb
sub
int3
lea
mov
or
testl
lahf
mov
sub
and
xor
adc
imul
cmpsl
mov
cmpsl
movsb
imul
movsb
inc
add
lea
push
int3
js
leave
mov
aaa
jns
mov
cli
shrb
les
mov
hlt
ficompl
lcall
push
stc
rorb
out
mov
out
add
ja
enter
js
stc
inc
lret
xor
aas
mov
xor
movsb
test
push
cli
rclb
add
stos
mov
jg
lcall
ljmp
jbe
mov
bound
test
test
orb
add
inc
and
add
enter
test
inc
xchg
push
roll
call
aad
sub
sbb
xchg
stos
dec
sub
push
dec
movsb
stos
ficoms
jnp
sahf
mov
adc
push
push
mov
loope
adcl
mov
mov
cmc
das
xchg
in
enter
push
inc
add
hlt
adc
sar
cwtl
bnd
fistpl
leave
and
iret
adc
stos
mov
jmp
scas
mov
out
add
mov
js
aam
mov
add
push
mov
cld
cmp
adc
aas
arpl
push
mov
arpl
mov
mov
jne
into
pushf
xchg
mov
fildll
pushf
inc
fbld
loop
mov
add
out
push
repz
test
icebp
fnsave
jp
or
sahf
outsb
lcall
xor
mov
mov
push
jge
rcr
push
add
inc
jae
std
sbb
std
sub
out
cmp
mov
add
cmpb
ljmp
sti
or
mov
sub
loop
rolb
xor
xor
int
test
movb
sub
loopne
sub
sarb
shrb
mov
ja
jne
inc
mov
cli
mov
inc
or
inc
push
push
sub
xor
in
pop
push
push
push
pushf
shlb
push
aam
repnz
dec
fistpll
dec
sbb
out
xchg
dec
outsb
or
stos
hlt
fwait
push
mov
loopne
mov
mov
int
pop
pop
ret
mov
mov
pop
and
jbe
cli
lods
pop
inc
nop
sub
dec
mov
testb
loopne
inc
cmpsl
scas
hlt
or
cmpsl
and
sbb
fnstcw
sub
adc
xchg
inc
sbb
inc
or
jns
js
mov
xchg
sub
xchg
sti
push
adc
or
rclb
cmpsb
popa
hlt
xchg
or
ss
shlb
pop
push
in
in
mulb
add
add
scas
fstpt
push
add
mov
lods
push
push
fdiv
mov
push
dec
dec
mov
aam
insl
pop
fwait
or
xchg
out
mov
sbb
jmp
stc
fimuls
les
dec
add
mov
daa
aad
cs
add
mov
mov
icebp
sub
out
and
jno
cmpsl
adc
sub
rol
loop
enter
cmp
fbld
and
mov
test
sbb
cld
outsb
push
xchg
push
mov
rol
or
ret
loop
pop
stc
mov
mov
mov
adc
mov
pop
stc
mov
enter
enter
loope
pop
in
xchg
pop
out
inc
mov
ljmp
pop
mov
arpl
jb
mov
int3
loope
add
jle
aam
jge
insb
test
insb
dec
jbe
jne
jne
jge
shl
xor
jne
xchg
cmpsl
and
cmc
out
sub
sub
les
and
inc
in
fimuls
int3
sbb
dec
jle
add
mov
pop
cmp
aas
fcompl
mov
sbb
popf
stos
or
shl
sbb
fistpll
jp
mov
repnz
mov
in
pop
orl
movsl
add
lret
int3
lret
adc
aam
jo
push
mov
stos
ficompl
scas
cs
js
lods
fistl
test
lcall
sub
xchg
enter
cwtl
xchg
es
sub
push
outsl
and
or
data16
loopne
ret
std
imul
rcrb
xor
inc
mov
sbb
mov
add
sub
ret
insl
daa
xorb
adc
sti
enter
xchg
lods
xor
fidivrl
cmp
les
push
dec
dec
test
in
call
sub
lahf
xor
mov
sbb
aam
pusha
mov
add
es
adc
mov
mov
sub
in
outsb
push
fsubl
sub
sahf
and
mov
jne
out
mov
xchg
leave
fstl
nop
push
out
ljmp
rclb
cld
push
pop
fldt
icebp
push
pusha
pop
push
or
icebp
mov
xchg
xor
test
push
divl
pop
lock
idiv
xchg
imul
mull
or
mov
fwait
test
xchg
xchg
push
push
and
pop
fnstsw
cwtl
test
nop
mov
test
mov
idiv
test
hlt
cmp
imul
movsb
add
movsb
imul
jle
mov
inc
mov
test
or
test
xlat
test
lock
jecxz
add
adc
or
popf
idiv
scas
push
loop
ret
or
rol
push
mov
test
ljmp
add
cli
adc
mov
pop
stc
mov
mov
and
mov
xchg
inc
movsl
mov
sub
imull
mov
mov
mov
cmp
cmp
cmpsb
cmp
imul
push
mov
mov
or
test
sbb
pop
idiv
mov
icebp
vmwrite
loop
xchg
mov
ja
idiv
loopne
test
adcl
or
test
sbb
jns
incl
mov
mull
sub
pop
adc
mov
fiaddl
ret
lods
lds
jge
divl
xchg
mov
int
add
in
in
leave
mov
lcall
adc
psrlw
es
mov
in
std
es
or
shr
jge
jmp
aas
loop
pop
clc
cmp
aam
rcr
outsl
dec
sub
xor
inc
leave
sub
stos
mov
stc
enter
sbb
adc
pop
jl
pop
inc
jo
leave
xchg
pop
in
and
cmp
lret
cltd
inc
ljmp
addr16
test
out
mov
icebp
add
mov
push
imul
stos
xchg
out
xor
ret
daa
out
push
fcoml
mov
fnstenv
xchg
fwait
and
xchg
and
hlt
lret
fcoms
test
mov
movb
popa
ljmp
dec
jbe
imul
adc
mov
hlt
gs
pop
pop
or
psubd
fsts
test
test
mov
mov
pop
push
fcoms
aad
cmpsl
adc
sub
aad
sbb
test
movsb
mov
xchg
aad
imul
add
into
repz
mov
and
xor
decb
xchg
gs
cmpsl
or
sub
pushf
push
cmpsl
hlt
and
ret
test
mov
xchg
push
xchg
xor
movb
sub
fildl
mov
inc
icebp
cmp
lock
dec
mov
pop
loope
ret
divl
and
add
out
jge
popa
adc
dec
push
mov
test
mov
fwait
jns
dec
inc
hlt
aas
insl
or
mov
add
cwtl
sub
push
insl
lcall
sub
dec
pop
cmp
flds
test
cmpsl
repz
sahf
mov
pop
in
sbb
jp
pop
pop
mov
cmp
rolb
jmp
icebp
addr16
or
insb
idiv
push
inc
pushf
lds
stos
push
mov
and
pop
pusha
lds
les
lods
jae
xchg
lods
int
cli
dec
adc
cmovl
cwtl
pop
ret
xor
js
push
in
mov
fisubrs
shr
in
loop
xchg
pushf
ret
cmp
jge
jno
sbb
add
lcall
inc
pop
out
push
stos
jmp
fs
mov
inc
daa
enter
test
adc
movsl
dec
mov
loope
addr16
pop
adc
les
test
idivl
outsb
cmpsb
dec
push
rep
add
mov
leave
xchg
stc
and
insb
popf
lret
cmp
cmp
dec
imul
mov
xchg
cmp
fidivrs
loop
add
gs
or
lahf
cmpl
cltd
dec
das
test
mov
sbb
xor
ret
in
sbbl
arpl
aas
sbb
loop
sbb
mov
push
aad
outsb
cmc
add
repnz
jg
lock
sub
mov
pusha
xor
push
lahf
mov
sbb
shrb
inc
out
cltd
subl
dec
lods
jge
in
enter
test
std
lock
sub
popf
dec
sbb
lods
mov
arpl
jne
mov
pop
and
and
or
cwtl
mov
test
xchg
int
cld
lods
xchg
xchg
stos
and
in
and
mov
push
adc
stc
das
sub
and
stos
hlt
adc
cmpsl
push
add
xchg
mov
int
cmpsl
int3
ljmp
sbb
hlt
xor
fucomp
push
icebp
dec
lea
jmp
pushf
into
and
adc
mov
in
pusha
and
dec
xchg
mov
call
sahf
and
sub
jnp
sub
inc
mov
pop
pop
loope
addr16
push
lods
cmp
inc
sub
aaa
cmp
pop
ljmp
cmp
fstl
cwtl
inc
fiaddl
mov
je
in
mov
inc
xchg
daa
jmp
fwait
dec
pop
xchg
test
push
add
ficoml
into
sub
jl
cld
dec
jecxz
jge
jae
mov
mov
sub
add
shl
and
mov
and
xor
or
mov
dec
cmp
and
fnsave
lods
pop
nop
fdivl
fs
out
repnz
add
pop
fidivrl
repnz
inc
jnp
insl
inc
out
or
loope
lock
scas
pushf
pushf
cmp
pop
or
cmp
mov
mov
decb
stc
push
jnp
jo
cs
mov
cltd
aam
cmp
test
xlat
pop
dec
sbb
enter
pushf
aaa
in
mov
mov
inc
xchg
jno
sub
inc
fsub
hlt
add
mov
inc
leave
pop
jae
ss
push
jmp
shlb
inc
mov
addl
inc
mov
aas
lea
cwtl
mov
iret
mov
dec
sub
jg
sub
leave
lcall
lea
and
outsl
xor
mov
test
cmc
xor
xchg
nop
push
sbb
jl
mov
rolb
inc
mov
inc
cmp
xchg
int3
push
jmp
mov
mov
nop
leave
test
dec
mov
sti
outsl
test
hlt
mov
repz
insb
mov
into
add
inc
xchg
mov
cli
pop
mov
hlt
mov
mov
iret
inc
scas
xor
nop
and
dec
test
dec
adc
into
rorl
jne
shlb
hlt
pop
jno
lock
xchg
add
xchg
adc
add
rorb
iret
ljmp
pop
dec
in
outsl
push
jno
add
aam
mov
xchg
orb
mov
insb
mov
mov
push
lods
add
addr16
clc
add
mov
mov
js
shl
sub
xlat
push
aaa
mov
inc
jno
aam
jno
mov
mov
pushf
xchg
xorl
imul
test
mov
dec
adcl
loopne
or
repnz
dec
inc
adc
jns
pop
pop
out
sbb
stos
shlb
inc
mov
cmp
dec
cmp
out
hlt
repnz
mov
popf
icebp
xchg
in
cmc
add
repnz
pop
lods
sti
pop
push
sbb
in
or
cmp
adc
fidivrs
imul
lahf
mov
cmp
adc
mov
jbe
and
xchg
std
inc
scas
call
mov
push
cmp
xchg
or
cmp
xchg
inc
call
insl
push
mov
add
mov
repnz
or
mov
rcll
mov
cmp
or
xchg
adc
mov
cwtl
mov
mov
ret
adc
mov
hlt
inc
sbb
push
js
aad
nop
scas
out
out
dec
inc
mov
out
inc
inc
mov
fildl
and
xchg
xchg
enter
in
or
aaa
sub
in
cmpsl
sub
push
xorb
dec
cmpsb
push
mov
hlt
and
jo
gs
icebp
inc
mov
ljmp
jle
add
adc
mov
inc
sub
aaa
add
push
pop
xor
aas
ljmp
mov
xor
pushf
sub
mov
ret
adc
or
sbb
cmp
lds
add
cwtl
jns
outsl
or
and
aaa
test
fistps
mov
mov
sahf
add
mov
sbb
test
or
add
loope
das
push
aad
lds
rol
aaa
xchg
arpl
fcmove
mov
outsl
ljmp
fisubrl
mov
mov
inc
int3
cmpsb
xchg
xchg
nop
mov
movsl
or
add
sub
jno
lahf
inc
pop
rol
aaa
mov
movd
pop
lock
jle
dec
jl
js
sbb
gs
rolb
shr
daa
hlt
or
mov
pushf
movsl
and
scas
jge
cmpsl
fwait
adc
pop
lods
mov
les
add
xchg
xor
inc
adc
into
adc
add
dec
or
lea
jecxz
xchg
push
mov
pop
cmpsl
pop
dec
sbb
shrl
cmpb
in
loope
in
clc
adc
inc
movsb
push
dec
xor
lret
inc
movsb
clc
test
icebp
pop
and
xchg
add
pop
arpl
ret
gs
push
cmp
lods
jne
gs
dec
push
mov
lret
loopne
pop
and
jmp
iret
add
dec
in
fisubs
and
lds
mov
stc
dec
outsl
enter
adc
les
xchg
cmp
xchg
pop
mov
fcoml
jl
enter
test
call
adc
lods
pop
xchg
xor
fadds
jge
test
xchg
sub
adc
icebp
mov
movsb
cwtl
push
push
or
push
cmp
mov
push
shrl
outsb
test
jb
insb
jmp
and
or
ret
pop
rcr
xchg
lahf
adc
mov
push
inc
enter
inc
mov
mov
inc
repnz
mov
dec
ljmp
and
adc
icebp
enter
imul
mov
mov
enter
inc
mov
shl
imul
enter
cld
xchg
ds
or
test
pop
push
jb
lea
or
mov
pushw
pop
push
or
out
fwait
xchg
les
xor
test
pushf
jnp
cmovns
adc
cmpsb
sbbl
nop
dec
mov
ret
loop
add
rcl
faddp
xchg
adc
lret
not
ret
cmpsb
ret
loopne
mov
xchg
sahf
and
sbb
xorb
add
xchg
mov
inc
into
mov
jp
jns
repz
sbb
and
fnstenv
mov
cltd
lret
stos
loop
ret
adc
or
test
jne
flds
out
cltd
or
int3
cld
leave
pop
loopne
xlat
mov
mov
xor
mov
hlt
js,pt
add
xchg
iret
stc
jge
mov
loop
pop
loop
add
test
rcrb
xor
jbe
add
fmuls
in
rolb
loope
test
mov
bound
or
sub
jbe
test
pop
hlt
mov
push
lods
fstpl
add
adc
xchg
repz
icebp
ja
cmpb
int
pushf
mov
lret
stos
mov
adc
lcall
shl
inc
rolb
sub
repz
adc
sub
push
call
js
inc
xor
hlt
adc
xor
fiaddl
cltd
enter
ds
in
and
mov
sbb
icebp
rorb
dec
sarb
cmc
aas
inc
pop
pop
sub
es
loop
movb
ja
add
cmc
stos
mov
cmc
cmp
xchg
stc
add
cmpsl
add
jge
cmp
mov
push
fbld
loop
add
pop
jp
cld
inc
ret
leave
mov
ret
jmp
insl
or
test
adc
inc
fidivrs
loop
out
dec
sub
pop
adc
xlat
sub
push
scas
push
push
jo
sub
pop
loopne
mov
pop
loop
adc
rcl
mov
andl
inc
and
and
cmpb
sub
in
sub
hlt
mov
inc
mov
xchg
enter
xchg
sbb
xlat
lea
imul
xor
jg
cld
lahf
pusha
cmpsb
clc
add
ja
jns
mov
loope
jnp
lds
inc
sub
inc
jmp
aas
pop
push
pop
fs
lret
ljmp
hlt
xchg
and
push
or
sub
ffreep
adc
stos
insl
mov
into
mov
and
stos
pop
push
jne
add
hlt
bound
xchg
fisubrs
hlt
inc
ret
int
jmp
mov
sub
or
add
cmp
xor
pop
jo
cmpsl
mov
push
ds
lock
dec
mov
xor
das
pop
xor
cmp
sbb
pop
cwtl
rcll
ljmp
into
mov
and
sub
or
testl
in
sub
scas
jns
call
ret
cmp
dec
lcall
data16
sub
test
cltd
mov
cmpsb
insb
xchg
mov
mov
xchg
nop
int3
sub
pop
or
push
pop
stos
loope
add
outsb
add
and
out
sub
fisubrl
xchg
ret
xchg
imul
or
mov
push
push
add
push
dec
jmp
push
sarb
mov
xor
jne
inc
roll
mov
imul
mov
jne
jbe
push
cli
xchg
cmp
icebp
pushf
lret
int3
fistpll
xor
psubb
and
test
out
pop
inc
in
sub
xor
pop
sub
in
test
push
mov
cmp
push
push
imulb
pop
cmc
lea
pushf
loop
out
andb
rcrb
sub
stc
incb
or
push
adc
das
andb
dec
ret
sub
mov
es
rcl
lret
jmp
cmp
cmp
addr16
je
xchg
and
mov
out
leave
ja
push
ficompl
fdivs
pop
mov
mov
cli
or
pop
mov
or
pop
dec
pop
dec
lahf
daa
push
ljmp
cmp
movsb
mov
pusha
into
cmpsb
dec
xor
stos
push
pop
decl
mov
cld
lret
dec
pop
xchg
pop
jnp
ss
jmp
mov
ljmp
and
mov
sub
gs
aam
mov
imul
push
shll
xchg
pop
jbe
std
aas
cltd
ret
pop
mov
movsb
scas
xchg
mov
pop
out
shrb
xor
gs
jle
push
pop
test
sub
pop
mov
mov
aas
or
pop
and
dec
cli
adc
sarb
lock
hlt
cmp
add
insb
inc
loop
mov
mov
lds
mov
pop
cld
repnz
addr16
mov
test
push
mov
out
push
shll
xchg
pop
jbe
pusha
aas
dec
inc
pop
mov
nop
pop
stos
hlt
les
mov
mov
das
repnz
pop
icebp
lcall
pop
mov
js
js
addr16
sbbb
test
dec
dec
cmc
pop
inc
jne
jae
mov
and
dec
add
inc
lods
lea
fwait
stc
sub
dec
mov
mov
mov
hlt
dec
scas
ret
jne
subl
adc
push
inc
pop
and
dec
out
push
jle
pop
mov
mov
mov
fstp
dec
movsb
xor
pushf
dec
gs
jae
js
imul
jl
pop
push
pop
das
jae
xchg
xor
lods
aam
push
movsl
js
pop
mov
dec
pop
push
lahf
jge
cli
out
rolb
sub
xchg
pop
lock
ss
aam
mov
cmp
mov
loop
movsl
js
ss
ret
xorl
mov
ljmp
xor
pop
mov
lret
stos
mov
mov
inc
push
mov
adc
dec
cmp
aaa
xchg
pop
call
mov
cmc
add
jne
inc
mov
xor
test
bound
filds
mov
pop
in
adc
xchg
cs
dec
ffreep
lahf
push
mov
or
inc
or
out
xchg
cli
jle
mov
cwtl
enter
dec
mov
and
sub
xchg
mov
mov
cwtl
ds
mov
cld
or
dec
pop
das
mov
bound
xchg
jne
dec
pop
div
inc
sbb
loope
cmp
add
loope
test
into
add
shlb
jnp
shll
pushf
rorb
jne
aas
lret
addb
or
outsl
jno
mov
jnp
inc
xchg
mov
scas
pop
sub
loopne
and
std
cmp
int
sub
andb
mov
push
jge
loope
incl
adc
pushf
ret
xchg
incl
pushf
push
push
dec
roll
es
arpl
dec
pop
addb
cmp
push
xchg
hlt
add
pusha
sub
je
mov
and
mov
xchg
mov
pop
mov
adc
push
repnz
in
mov
clc
pop
mov
jnp
xor
cwtl
and
icebp
pop
das
cmpsb
xor
jnp
sbb
aas
hlt
cltd
or
xchg
mov
add
pushf
ds
hlt
mov
xchg
mov
out
push
sub
subb
and
mov
xchg
std
mov
out
lcall
call
test
xchg
inc
sbb
fcmovnbe
faddl
dec
mov
sub
jne
out
aas
jae
mov
xchg
adc
and
in
repnz
push
cmp
sbb
mov
cld
fsubr
or
hlt
xchg
popa
mov
cmc
mov
dec
cmp
xchg
lds
sahf
dec
sub
fcmove
xchg
sub
cmc
icebp
mov
xchg
shll
ret
adc
mull
xchg
jne
mov
push
andl
addb
jbe
int3
mov
fbstp
push
sar
add
pusha
or
and
out
aad
das
loop
mov
mov
or
clc
inc
clc
push
lock
test
test
popf
inc
out
stos
lret
and
addb
mov
call
arpl
inc
cli
sbb
cltd
xchg
inc
shlb
xchg
pop
sbb
mov
int
in
sub
sub
jne
dec
mov
or
xchg
ja
gs
lods
lds
pop
out
jne
mov
push
pop
stos
push
sub
and
test
xchg
fcoml
xchg
test
ficoml
cli
js
add
pop
mov
into
and
jo
loope
mov
inc
mov
ret
in
adc
mov
add
in
xchg
xor
negb
and
lods
dec
out
shrl
jae
in
dec
lret
jbe
loopne
mov
stos
push
sbb
hlt
xchg
inc
jns
mov
jmp
pop
jp
loope
and
les
inc
push
movsl
out
leave
pop
mov
inc
stos
ja
movsl
in
fs
inc
and
movsb
mov
xchg
adc
hlt
cmp
dec
and
test
cwtl
popf
mov
dec
jp
xor
mov
sbbb
cmp
xor
inc
adc
lahf
mov
pop
test
fcomi
pop
add
decl
pop
mov
jno
push
lcall
jmp
gs
std
scas
xchg
notb
lods
cmpsl
fimuls
test
rclb
leave
icebp
mov
pop
mov
sub
inc
xchg
andb
pop
xchg
or
insl
idivl
cmp
popa
pop
and
dec
cmpsb
ja
xchg
xchg
lds
push
sbb
enter
and
mov
mov
incl
jle
jl
push
stc
imul
xor
pop
and
pop
push
icebp
mov
cmpsb
ficompl
cmc
aas
loope
push
aas
incb
leave
mov
inc
add
decb
push
popf
arpl
xor
rolb
push
inc
cmpsl
xchg
scas
jae
lahf
inc
sub
mov
mov
push
dec
sub
adc
lods
ds
test
ljmp
adc
in
call
mov
cli
ret
xor
or
jp
adc
sub
or
adc
push
imull
stos
hlt
loop
pop
test
xor
or
mov
cmc
sbb
mov
loop
mov
sahf
call
and
enter
shrl
cmp
rcrl
scas
pop
ljmp
les
mov
dec
inc
mov
push
sub
mov
xchg
cmpps
fbld
sbb
push
xchg
fs
pushf
sbb
lret
and
add
inc
jmp
push
inc
sbb
or
add
ss
fimuls
inc
jb
mov
fnstenv
pop
and
aaa
icebp
cmp
jne
pop
mov
and
pop
aam
jae
mov
jg
jnp
push
es
xor
push
stos
inc
xchg
mov
dec
test
cmp
jg
cli
mov
mov
jnp
mov
xchg
je
fbld
and
fisubrl
scas
and
push
adc
fisttpll
mov
mov
add
mov
sbb
addb
push
fs
fbld
mov
mov
cmpsb
push
or
dec
ds
pop
jne
shll
xchg
add
insb
sub
inc
pop
mov
pop
rcll
add
pop
pop
lods
cmc
cmp
loop
push
fistpl
mov
adc
dec
mov
loopne
lahf
mov
lret
mov
adc
test
in
sbb
jge
stc
dec
and
xchg
insb
cs
shrl
dec
repnz
jbe
xchg
pop
mov
fdivs
pop
sbb
mov
popa
xor
mov
adc
es
jle
hlt
mov
xchg
inc
lock
cltd
adc
out
fidivrs
push
and
dec
mov
cld
std
or
jg
mov
scas
jle
sub
pushf
xor
inc
notl
jle
mov
jg
jge
mov
sbb
mov
jg
fs
jmp
subb
subl
stos
loope
mov
loop
dec
stos
mov
mov
mov
pop
xchg
sarb
mov
mov
sub
pop
sahf
push
push
je
jno
insb
push
popa
push
xchg
hlt
in
aad
into
ja
enter
or
int3
js
jmp
lcall
lock
icebp
lret
jge
mov
sbb
loope
jg
les
lret
jl
sub
cmpsl
loopne
xchg
int
aam
xlat
pop
jns
xchg
mov
pop
sub
loop
test
push
rorb
pop
scas
push
or
cld
or
shll
jle
and
jno
jg
mov
or
shrb
cld
push
aad
mov
push
adc
push
inc
imul
or
sub
mov
mov
bound
xchg
mov
fnstenv
fdivrl
stc
mov
loop
popa
hlt
enter
dec
xchg
ss
popa
mov
dec
loop
pop
stc
mov
icebp
sbb
mov
icebp
mov
add
sub
pop
and
dec
pop
jle
lods
psllw
test
repnz
hlt
out
sbb
xchg
and
fisubrs
adc
js
pop
aam
or
adc
js
fucom
cmpsb
js
xlat
adc
or
mov
adc
mov
lock
add
mov
je
adc
test
mov
xchg
xchg
add
mov
sarl
icebp
scas
jle
fsubl
cmpsb
xlat
adc
imul
cmp
sub
push
adc
jmp
dec
xchg
sub
lds
cmp
fdivrs
add
repnz
mov
push
jno
xchg
or
dec
cld
ret
xchg
sti
push
or
into
cmp
cmp
orb
jl
lds
call
add
mov
out
ds
add
in
add
pop
pop
push
xor
or
icebp
mov
jge
mov
sbb
mov
add
cmp
out
mov
mov
loope
cmp
xchg
adc
mov
jg
push
iret
sahf
mov
iret
sahf
mov
lods
push
ja
testb
out
pop
inc
loop
mov
pop
aam
or
adc
mov
or
sub
call
sbb
push
xor
popa
sub
xor
loope
pop
adc
cwtl
je
fcoms
iret
sahf
jecxz
or
dec
sahf
and
enter
or
xor
jno
dec
andb
xchg
push
repnz
cmc
push
loop
icebp
clc
push
loop
hlt
test
les
loope
mov
dec
push
imul
inc
rolb
adc
pop
hlt
decb
repnz
ds
dec
jnp
loopne
inc
adc
test
dec
aaa
add
mov
fldl
pop
stos
sti
hlt
mov
add
stos
cli
hlt
mov
test
cwtl
dec
loope
decb
cmc
sbb
lret
pop
in
adc
mov
ljmp
call
pop
inc
sub
dec
or
sub
or
in
stc
mov
mov
fucom
loop
js
push
test
in
call
test
pop
std
ljmp
test
popa
ja
sbb
fdivrp
mov
mov
sbb
mov
sbb
sub
mov
mov
ds
cmc
push
loop
popf
mov
pop
jecxz
cmp
mov
push
add
fidivl
aam
clc
cmpsl
fsubrp
test
ret
cmp
rcrl
and
sub
adc
test
daa
mov
aaa
push
mov
test
mov
pop
mov
sbb
loop
popf
mov
ror
pop
pop
loop
jne
js
int3
inc
ja
popf
mov
mov
mov
mov
lcall
pushf
inc
sbb
lahf
mov
in
dec
mov
jns
call
jg
subl
jo
call
mov
adc
jge
scas
hlt
icebp
lods
ds
mov
ret
push
lea
push
xchg
xchg
call
clc
sub
xchg
xchg
adc
cmp
mov
test
bound
ljmp
adc
ds
jns
popa
in
jns
rorb
stc
inc
loop
pop
jae
lahf
loope
or
call
xchg
ret
sub
cmp
ljmp
push
sbb
push
lds
pop
add
mov
insb
and
mov
in
bound
inc
sub
push
push
nop
ljmp
mov
mov
cwtl
jns
and
cs
out
push
add
lds
add
cs
sub
inc
pushf
pop
addl
mov
mov
pop
aas
mov
pop
in
pop
mov
lcall
outsl
and
pop
cmpsl
or
in
xchg
adc
popf
sub
movsb
rcll
bnd
shlb
shrb
test
mov
hlt
lods
push
shrl
fildl
mov
ficomps
sahf
pop
mov
cwtl
daa
out
xor
frstor
cmc
cmpb
push
cmpsb
mov
sub
test
les
cltd
inc
ficoml
loope
cltd
orl
in
push
cmp
nop
add
mov
bound
pop
in
enter
mov
popf
and
lds
add
and
xor
push
cmp
push
adc
cmp
jo
adc
mov
jns
mov
pushf
rolb
hlt
loop
mov
ja
sbb
jnp
daa
sub
in
lock
frstor
rorb
mov
sub
jno
xchg
jne
stc
mov
sahf
or
adc
aam
or
cmc
push
pop
subl
xor
loop
ss
lcall
adc
xchg
fdivs
xchg
mov
lock
mov
or
pop
adc
in
test
movsl
notl
dec
dec
loopne
sbb
inc
mov
int3
jo
negl
and
addr16
inc
xchg
cwtl
fstps
xor
out
sub
ljmp
xchg
mov
repnz
jns
xor
loope
hlt
mov
inc
pop
mov
add
inc
cmpsl
add
cmpsb
fwait
imul
hlt
xchg
xorl
aad
or
and
xor
ficompl
les
mov
orl
push
nop
fistps
lret
push
cmp
push
dec
pop
lods
repz
inc
inc
popf
aad
dec
sub
out
cltd
mov
cmp
lods
xchg
clc
mov
cwtl
mov
popf
xlat
mov
pop
loopne
sub
push
out
and
xor
mov
mov
jecxz
lret
mov
and
jmp
sub
rcrl
add
lret
push
int3
ljmp
loopne
les
movsl
xchg
incl
adc
pop
mov
xor
sbb
and
sahf
cmpsl
jle
or
cltd
jb
mov
mov
in
stos
and
dec
jbe
sti
test
sub
jno
shll
imulb
mov
pop
ret
and
jp
adc
sub
or
mov
push
loopne
adcb
push
mov
movsl
xlat
sub
and
xchg
pusha
dec
mov
push
inc
adc
inc
daa
mov
hlt
jmp
test
mov
or
dec
das
lcall
pop
cmp
hlt
mov
test
adc
sub
in
mov
cmp
test
inc
in
test
test
loope
sub
test
mov
adc
sbb
enter
sub
mov
jbe
ja
push
xlat
xor
jmp
shrb
test
fdivl
pop
xor
push
add
leave
mov
jl
and
insb
hlt
fstpl
add
mov
arpl
add
pop
rol
inc
loopne
pop
sub
scas
nop
push
mov
out
pop
aam
jl
xchg
or
xlat
fisttpll
shlb
jb
insb
push
rol
or
test
and
in
adc
mov
in
fists
xchg
add
inc
dec
scas
cmp
or
test
insb
jl
push
xchg
repnz
mov
dec
dec
add
push
sbb
dec
xor
and
loope
lret
and
and
add
push
shll
int3
movsl
test
pusha
cmp
push
sub
push
add
mov
ss
icebp
push
cld
inc
dec
mov
movb
sbb
negb
rcll
add
faddl
adc
fld
sbb
cmpsb
mov
mov
mov
out
lock
inc
idiv
lret
jb
test
clc
xchg
mov
movsb
outsb
mov
in
jmp
adc
sub
int3
cmp
jg
mov
outsl
outsb
loop,pn
jge
sti
xchg
les
or
sbb
xchg
xorb
dec
shr
int3
scas
aam
popa
ret
push
bound
pusha
mov
test
leave
jbe
sarb
pop
xor
lcall
mov
cmp
fisttpll
add
testb
jle
jae
xchg
enter
fcmovne
inc
xchg
mov
cmp
inc
stos
mov
sub
and
or
dec
mov
lret
hlt
hlt
jbe
inc
jns
xchg
mov
gs
inc
scas
or
test
mov
adc
insb
sub
mov
lock
mov
jg
xchg
aaa
mov
cmp
rcrl
xorb
inc
mov
sub
testl
inc
stos
hlt
jp
xchg
fwait
add
mov
or
pop
and
push
jbe
pusha
mov
frstor
mov
test
mov
stc
icebp
ljmp
or
clc
inc
inc
mov
inc
and
jg
sbb
test
mov
inc
fdivr
mov
pop
popf
push
and
test
mov
mov
xchg
insb
push
cmp
sbb
movsb
or
inc
hlt
adc
mov
mov
and
jmp
inc
pop
jne
and
hlt
je
sbbb
cmpsl
mov
fldl
cmp
ret
sar
pop
aas
jmp
cmc
add
inc
mov
push
daa
in
mov
aam
xchg
sbb
lahf
xchg
jo
aam
rcll
out
lds
dec
cmc
icebp
out
lret
sub
data16
test
out
adc
fxsave
inc
adc
std
andb
hlt
adc
or
test
inc
pop
mov
rorb
neg
sub
adc
hlt
xchg
and
lret
jg
clc
call
pop
xor
inc
test
or
or
vcvtdq2ps
in
push
iret
test
mov
and
sub
pop
xchg
adc
mov
lret
pop
in
or
mov
outsb
mov
outsl
mov
mov
fucom
dec
cmp
jns
inc
arpl
sbb
loope
in
rorb
mov
adc
mov
mov
or
adc
inc
add
inc
xchg
sbb
pop
icebp
out
jg
mov
cmp
lods
xor
pop
repnz
in
fstpl
jnp
mov
mov
jecxz
dec
push
pop
movsb
sbb
fisubrl
jno
pop
fimull
in
mov
mov
add
add
hlt
cmp
jg
pop
rorl
mov
pop
test
push
push
mov
sbb
ret
dec
es
loop
stos
dec
js
dec
mov
adc
push
outsl
gs
js
mov
pop
test
xor
mov
dec
aas
mov
mov
ret
or
mov
fldcw
push
push
adc
lea
sub
add
dec
dec
dec
pop
inc
lcall
pop
ffreep
sub
fsubs
xor
ja
sbb
fists
cs
adc
fadds
sahf
repz
scas
pushf
push
pop
push
pop
and
std
mov
movsb
subb
pusha
adc
es
xlat
lahf
sti
mov
das
daa
test
stos
sub
jecxz
xor
push
cmp
cltd
mov
lcall
in
push
lea
ljmp
dec
mov
mov
cmp
inc
stos
test
ret
push
scas
pop
mov
sub
mov
mov
mov
and
or
mov
repnz
roll
subb
std
popf
cmc
iret
jmp
popf
pop
leave
xchg
sub
pop
jne,pn
cli
sbbb
mov
pusha
jae
addr16
xchg
cli
add
je
mov
mov
sub
dec
cltd
cli
and
data16
sub
xor
or
adc
int
jnp
loopne
cwtl
das
in
popf
scas
pop
mov
movsb
testl
push
xchg
cmp
aaa
jg
hlt
and
fdivrp
leave
inc
std
jmp
fistl
mov
test
lret
mov
sahf
rolb
sub
or
adc
movsl
sub
js
lcall
inc
out
xor
cld
cmp
loop
dec
pushf
cli
mov
scas
movsl
xchg
js
mov
jmp
stos
xor
in
fdivrs
cmc
pushf
cmp
adc
sbb
ret
leave
cmp
push
into
xchg
aaa
mov
mov
testb
outsb
push
adc
adc
pop
hlt
add
lret
in
xor
xchg
dec
sbb
ret
mov
jo
mov
arpl
add
add
sbb
addr16
xchg
outsl
dec
stos
or
jle
stc
mov
xor
or
pop
out
test
dec
mov
or
orb
add
mov
push
pop
daa
fsubp
hlt
jns
jno
pop
push
scas
out
push
test
mov
cmpsl
hlt
sbb
mov
mov
inc
sub
jbe
jp
adc
clc
fimuls
or
xor
and
jae
fld
cld
pop
adc
outsl
inc
cmp
andl
mov
scas
pop
pop
sub
adc
adc
shll
insb
cmp
pop
add
push
test
xchg
scas
mov
mov
in
jmp
mov
pop
add
cmc
sarl
fcomps
mulb
add
stc
mov
cld
out
pushf
lods
jno
jecxz
xorb
imul
pop
or
cld
jb
jp
inc
icebp
popf
pop
cs
loop
aam
movsb
mov
insl
jb
pushf
lods
mov
loop
push
imul
cld
xchg
ret
jg
repnz
loop
out
push
cmpsl
loop
cmc
stc
add
fmul
mov
out
adc
movsl
or
inc
xlat
xor
js
cmp
stc
push
loop
out
dec
or
lret
repz
fadds
sbb
push
xchg
pop
push
loopne
ret
xlat
in
fcmovu
fidivrs
movsb
dec
fiadds
inc
mov
add
and
pop
pop
mov
jne
pop
pop
enter
movsb
test
xchg
pop
jl
add
adc
pusha
out
add
movsl
icebp
mov
in
out
mov
add
pop
add
pop
es
fsubrs
mov
xchg
rorl
out
mov
jge
jo
lock
daa
mov
in
and
xchg
cli
ret
sub
test
mov
loopne
test
jbe
dec
mov
jl
push
jmp
or
xchg
mov
cmp
mov
sub
push
adcb
lds
sbb
adcb
mov
cltd
adc
sbb
cs
push
sbb
sti
shrl
xchg
loop
nop
test
adc
lcall
jl
mov
dec
jno
dec
ds
sub
xor
sub
cwtl
testl
inc
pop
jb
and
in
sbb
loopne
xchg
and
cmc
scas
sbb
cmpsb
mov
xchg
jg
call
lods
movsl
xor
fs
or
or
aam
rclb
out
int
lods
mov
pushf
adc
xchg
test
mov
cmp
mov
enter
mov
sbbl
mov
push
inc
mov
popf
lods
or
or
test
dec
daa
jp
je
cmpsl
xor
mov
cmc
scas
in
lods
outsb
jecxz
adc
pop
cld
or
sahf
stc
mov
ljmp
test
cwtl
and
imul
jb
push
mov
cmpsl
mov
stc
mov
stos
and
add
mov
into
andl
in
mov
mov
inc
neg
in
mov
mov
sub
adcb
or
or
cltd
mov
cmp
pop
mov
hlt
inc
cmp
push
xor
repnz
pop
inc
mov
hlt
shl
add
add
fildll
xchg
fiaddl
mov
cmp
enter
sahf
gs
insl
pop
mov
xlat
lods
xor
shlb
xor
lahf
sbb
inc
popa
and
jns
addl
ffreep
mov
add
int
dec
xor
fiadds
jp
and
jp
icebp
mov
sub
jge
add
lret
js
lds
jmp
jmp
dec
sahf
sbb
jb
test
push
xlat
ret
xchg
and
subl
or
jmp
outsl
arpl
je
test
popf
mov
add
sbb
add
repz
lds
hlt
subb
and
enter
cltd
mov
es
loop
sbb
jb
jle
jg
clc
outsb
add
leave
cwtl
mov
sahf
ror
hlt
mov
out
xor
jb
dec
pushf
fdivs
push
adc
push
pop
add
push
adcb
and
xchg
mov
sbb
and
pop
mov
jp
jle
fstl
hlt
pop
cmp
add
fsts
dec
xor
fcompl
pusha
and
test
and
adc
pop
in
xchg
outsl
add
fstpl
es
dec
out
xchg
add
imul
mov
stos
xchg
mov
mov
enter
imul
or
cwtl
ljmp
dec
or
stc
mov
pop
scas
push
stc
ret
cltd
mov
stos
std
shll
mov
push
dec
ljmp
inc
jbe
push
imul
cmpsb
and
movsl
cli
insb
insb
mov
ja
xor
jae
movsl
sbb
sbb
pop
out
out
std
std
dec
mov
inc
push
add
cmpsb
sub
push
stos
adc
and
popa
mov
loope
ret
or
xchg
jp
and
or
test
es
into
jb
int3
les
ljmp
inc
orb
daa
lret
sub
in
mov
sub
ficoml
jmp
test
push
push
rcrb
mov
shrl
enter
sub
jbe
sub
sub
add
lods
push
adc
mov
sub
adc
cltd
cs
scas
jp
pop
loope
push
cmp
add
inc
sub
cmp
cli
cmpsl
std
js
pushf
lahf
xor
nop
mov
or
popf
add
jmp
cltd
dec
daa
sbb
stos
ljmp
jge
jmp
lahf
cwtl
pushf
flds
mov
or
sub
adc
int3
testl
jmp
hlt
pushf
pop
adcl
mov
out
inc
lods
hlt
ljmp
sti
xchg
cs
cmpsb
cmp
mov
jns
cmc
push
push
fidivl
insl
cmp
fisubl
gs
fdivr
pop
je
clc
aas
mov
xor
lods
add
xchg
loopne
fisubrl
out
mov
add
xor
pop
jecxz
js
and
lret
insb
inc
out
aas
lahf
mov
inc
push
movsb
mov
ret
jbe
mov
jmp
add
inc
lea
sarl
loop
rolb
test
cmp
das
dec
lret
out
movl
aad
sbb
loopne
mov
fwait
cltd
sub
xchg
mov
mov
addr16
dec
sub
mov
mov
js
sub
je
daa
popf
or
shl
adc
add
in
push
mov
enter
mov
adc
hlt
jae
call
push
in
lret
das
lcall
dec
mov
adc
push
adc
sub
jle
adc
mov
adc
push
gs
adc
test
out
fists
jbe
push
daa
int3
rorb
stos
push
adcb
rcrl
adc
lret
shll
scas
les
stos
mov
or
popa
dec
or
mov
ficomps
sarl
js
and
cwtl
jno
orl
mov
dec
and
cmc
inc
push
out
push
leave
test
jl
cmpsb
sahf
ret
cltd
fsubrs
stos
inc
insl
faddl
jae
int3
pop
xchg
es
push
mov
outsl
dec
clc
mov
enter
sub
je
out
nop
aam
stc
testb
sub
xchg
fdiv
mov
orl
arpl
mov
push
cli
pop
aam
fimuls
push
andl
sbb
test
mov
pop
lds
inc
in
nop
pop
pop
jge
pop
push
cmc
cmp
mov
les
xor
cld
xor
mov
movaps
or
sti
roll
cmp
push
daa
adc
mov
or
scas
or
orb
icebp
and
testl
sub
push
cmc
sbb
mov
or
outsb
mov
xchg
dec
inc
xor
xor
pop
cmpl
jae
or
xchg
xor
inc
hlt
mov
jge
mov
push
and
pop
push
sbb
push
jg
arpl
pop
repz
lahf
ror
test
test
push
push
inc
shl
push
scas
mov
sbb
in
stos
xor
xchg
lret
ljmp
push
mov
sbb
scas
mov
cmp
test
loop
hlt
cmp
dec
mov
push
inc
lret
adc
sub
je
xor
adcl
cld
ret
lods
sub
adc
mov
dec
sbb
imul
add
adc
in
sub
rcrb
or
push
movsl
push
ficoml
pusha
fisubrs
xchg
push
stos
dec
inc
stos
dec
cmp
sub
ficoms
fstpt
test
hlt
xchg
out
insl
movsl
das
stc
nop
lahf
sub
adc
sub
in
aad
sub
fidivrs
jl
scas
cli
fsubrs
hlt
mov
mov
scas
stc
mov
decl
test
gs
sub
push
inc
xchg
adc
fwait
xchg
mov
or
add
xchg
movsl
push
fsts
sub
dec
jbe
mov
xchg
shll
ret
push
int
or
xchg
inc
adcl
scas
and
mov
adc
rcrb
mov
xchg
sub
add
jecxz
daa
push
scas
leave
or
fsubrs
add
repnz
add
jae
push
test
add
sub
sbb
pop
call
and
adc
cmpsl
sub
push
test
jg
push
sub
popf
movsl
xchg
shll
mov
in
jge
in
int
jnp
pop
enter
lds
xchg
aaa
xor
shl
adc
pop
push
push
mov
scas
add
stc
cmp
dec
or
jb
push
jb
jmp
in
sub
stos
mov
lcall
ja
in
mov
rcrb
bound
sbb
in
and
push
pop
push
mov
inc
add
hlt
mov
test
hlt
sti
jae
pusha
jae
cmp
enter
cmp
and
jg
fidivrs
fsubrl
add
rolb
mov
push
ja
jne
jo
aad
push
push
sub
sbb
imul
das
or
inc
stc
jne
rorl
pop
icebp
pop
popa
call
sub
or
scas
movsb
subb
adc
aaa
sbb
adc
fiaddl
loopne
mov
cmp
adc
lcall
push
jbe
add
mov
ficompl
add
fsubrl
xor
int3
xor
xchg
ret
jmp
push
js
subl
adc
mov
xchg
cwtl
or
add
push
pop
cmpsl
xlat
dec
aas
repnz
pushl
xlat
lds
inc
fsubrl
mov
pop
mov
daa
pop
pop
and
pop
incl
das
arpl
inc
pop
push
daa
ficoml
xchg
test
and
pop
and
push
lods
iret
pop
xor
test
dec
pushl
sub
cmp
push
mov
daa
adc
arpl
push
xchg
daa
stos
push
mov
jno
jae
popa
sti
popf
in
ficompl
dec
jg
js
subl
test
cld
clc
inc
mov
xchg
jne
fisubl
imull
movsl
add
push
loop
add
ja
jmp
int
mov
mov
lcall
jns
adc
scas
pushf
mov
pop
lcall
in
rcrb
jp
inc
lea
loop
lock
pop
ja
call
cld
or
lcall
jge
xchg
subb
pushf
enter
push
es
fsubr
es
stos
jo
ljmp
push
xchg
and
movsl
cli
aad
ret
sar
movsl
jno
mov
iret
mov
adc
and
xchg
push
cltd
cmpsl
adc
adc
dec
data16
cmp
wrmsr
mov
jmp
inc
push
leave
or
dec
push
dec
js
jl
js
repnz
test
sti
dec
jnp
ret
pop
push
shrl
dec
movsb
mov
mov
insb
and
mov
mov
mov
mov
inc
ret
mov
xchg
jno
notl
test
jge
pusha
jmp
pop
lret
xchg
push
lods
das
dec
sub
mov
jns
stc
mov
sub
in
aad
gs
fisttpl
push
subl
fdivl
xchg
fwait
roll
popa
js
and
test
jmp
add
mov
jo
popf
and
xchg
and
repnz
mov
adc
and
sbb
testb
mov
mov
mov
mov
adc
xchg
xchg
sub
adc
xchg
and
lahf
mov
hlt
or
inc
out
mov
mov
push
cmp
sub
loope
pusha
or
dec
fsts
test
and
ss
push
fsub
add
pop
not
dec
loope
rorb
fsts
and
fs
stos
out
loopne
in
mov
sub
dec
shll
push
stos
dec
stos
sar
xor
cmp
enter
imul
pop
dec
rclb
les
cmpsl
mov
es
xchg
adc
lret
and
and
inc
hlt
xor
adc
sub
stos
dec
xor
inc
imul
dec
sbb
mov
stos
fs
xchg
call
mov
es
xchg
pop
jmp
ret
inc
js
pop
fs
leave
xchg
push
push
pop
mov
mov
pop
test
mov
or
les
push
push
push
jecxz
lea
jecxz
and
jg
fisubl
addr16
stos
dec
cmp
sub
mov
mov
in
fcmovbe
icebp
mov
mov
rcl
je
leave
pop
fs
xor
movsb
das
mov
andb
inc
add
push
sbb
test
cmpsl
xor
jo
add
cmp
xor
dec
daa
les
mov
sub
mov
sub
stos
add
jp
or
jge
cmc
sbb
dec
aad
jmp
fldcw
add
dec
cmp
cmpsb
cs
bound
out
cmc
mov
in
shlb
call
js
xchg
les
pop
pop
je
je
in
stc
loopne
aam
es
xlat
out
adc
pop
clc
add
inc
hlt
ret
aad
xchg
cltd
and
hlt
testl
cmpsl
mov
faddp
jb
pusha
xchg
test
addb
or
mov
into
nop
sub
pop
and
or
add
inc
push
add
mov
sahf
aam
aam
test
pop
out
jo
sub
xchg
in
mov
mov
nop
add
mov
flds
xchg
lret
dec
addr16
hlt
add
and
loop
mov
mov
add
push
mov
push
or
mov
xor
mov
add
cld
hlt
leave
dec
jno
insb
and
xchg
add
mov
loop
mov
notb
or
cmpsb
cld
xchg
cmp
jbe
sbbb
loop
iret
loope
arpl
mov
push
lock
les
arpl
sbb
test
sub
pop
mov
cmpsb
nop
jae
hlt
cmpsb
xlat
mov
jg
stc
add
loop
loope
sbb
or
mov
pop
in
test
dec
push
sub
call
das
test
inc
jmp
and
sbb
loope
leave
sahf
subb
neg
and
sub
push
int
jbe
fimuls
xchg
or
mov
jb
or
inc
push
les
mov
mov
hlt
and
daa
dec
cmp
mov
dec
mov
jns
sub
push
rcl
rcll
cld
jb
add
aaa
push
add
out
cltd
lret
inc
cmp
mov
jnp
xor
cs
test
sbb
test
dec
hlt
gs
lea
push
jo
xlat
add
mov
mov
adc
xchg
sbb
or
fmull
xor
push
jae
int
incl
dec
pushl
popa
hlt
xor
or
adc
add
cmp
mov
adc
push
loop
cld
sub
hlt
test
out
mov
cmc
fxch
adc
cmp
inc
and
shr
fstl
cmp
sub
push
dec
mov
jae
mov
sub
mov
xchg
push
lret
mov
pop
out
mov
mov
mov
inc
inc
mov
add
dec
mov
hlt
and
ret
inc
mov
mov
out
pop
push
into
mov
cli
pop
dec
addr16
hlt
lahf
stc
or
enter
hlt
shll
xlat
or
jb
mov
cmp
jmp
aaa
mov
mov
repnz
dec
aaa
mov
jp
xchg
push
adc
cmp
xlat
out
loop
ss
cs
inc
hlt
dec
cmp
sti
ret
out
mov
cmp
add
movsb
inc
push
lret
sub
enter
dec
addr16
ja
mov
and
add
jl
and
xchg
push
stos
stos
popf
lds
mov
xor
outsl
jb
shll
rcrl
repnz
ret
jbe
jge
test
adc
nop
dec
cs
pop
roll
inc
gs
sbb
add
cwtl
popf
and
dec
fwait
mov
and
xor
add
pushf
cmp
call
and
pop
test
popa
adc
test
mov
jbe
jg
call
or
rolb
outsl
sbb
sub
insl
cmpsb
xchg
sub
and
clc
pop
jge
movsb
push
mov
add
enter
rorb
in
jns
add
sbb
aam
pop
in
mov
leave
dec
cmp
cmp
mov
jmp
inc
mov
ret
rcrl
push
imul
jae
sbb
mov
inc
jge
or
lret
adc
jge
xchg
lret
pop
dec
stos
xor
pop
jns
and
insl
jns
xor
pop
add
mov
mov
cltd
repnz
sbbl
test
loopne
repnz
pusha
sub
aad
fcomps
call
sub
jl
adc
and
ret
shlb
loope
push
lock
pop
daa
ljmp
inc
stc
dec
dec
test
adc
mov
lock
pop
adc
or
shlb
cli
xchg
sbb
xor
push
in
inc
jbe
lahf
or
push
jecxz
jae
push
sbb
mov
ret
mov
test
clc
jno
scas
adc
cli
xchg
xchg
xchg
es
incl
sbb
xchg
mov
add
ret
mov
push
inc
fdiv
lcall
aad
test
lods
fxch
adc
ret
mov
mov
insb
push
test
fadds
mov
sub
inc
and
insb
int
inc
dec
mov
adc
inc
dec
push
and
xor
xchg
mov
xchg
adc
mov
movsl
xchg
sub
loopne
sti
mov
add
mov
sub
dec
roll
daa
addb
mov
movsl
adc
ljmp
fxch
gs
pop
xchg
jae
jmp
lods
sub
mov
push
ljmp
pop
decb
inc
out
rcrl
cli
and
mov
mov
jle
loope
and
and
jecxz
shrl
in
out
imul
shlb
or
xorb
fimuls
jmp
repnz
ljmp
int
dec
mov
inc
insl
sbb
mov
fcmovbe
fcmove
lods
add
test
xchg
loopne
xlat
cmpsb
xor
fsubl
aaa
sar
inc
xchg
sahf
pop
orb
adc
inc
gs
and
movsb
cmpsb
mov
pop
lds
in
std
add
jno
fiaddl
mov
cmp
ret
ret
push
std
inc
jbe
lods
icebp
out
pop
out
test
inc
idivb
and
dec
fdiv
adc
popa
mov
repz
xchg
mov
shll
add
sub
pushf
cs
inc
add
fisttps
lods
add
rorl
push
xchg
fadd
push
push
out
and
cmp
test
test
cmp
rclb
pop
out
out
out
test
cmp
sbb
popf
pop
daa
out
je
fimull
mov
xor
add
roll
xchg
repnz
pushf
pop
jbe
dec
scas
xchg
je
jne
mov
bound
xor
call
scas
test
fsubs
pop
mov
sti
rcll
out
stc
xor
mov
cmp
add
inc
mul
xchg
fisubs
into
xor
or
in
sub
mov
nop
loop
fcmovbe
inc
lret
jg
and
adc
push
jmp
add
lret
aad
jne
int
cs
rclb
adc
adc
adc
mov
pop
add
orb
push
andl
sti
in
js
sub
mov
cltd
outsl
ret
mov
lahf
add
hlt
je
test
pop
cmp
mov
gs
sub
add
inc
cld
push
and
jno
jecxz
scas
loopne
mov
xchg
jecxz
or
loopne
fmull
cmp
rcll
sub
test
push
mov
mov
lcall
call
and
ja
enter
call
xlat
lock
subl
and
mov
jg
int
jno
fsubs
or
into
jge
push
in
rclb
mov
mov
or
xchg
mov
add
cmp
repz
or
and
push
in
sub
or
mov
sub
mov
enter
jmp
stos
hlt
imul
rolb
mov
mov
int3
imul
xorl
mov
push
bound
aas
and
xor
mov
add
cs
push
test
or
sub
stos
lock
xchg
pop
and
rorb
ficoml
je
sub
test
xor
and
loopne
mov
rorl
mov
decb
mov
lret
inc
scas
call
pushf
mov
and
lret
call
jne
loop
push
jge
and
add
arpl
lret
xchg
sub
cmp
inc
insb
add
imul
loop
out
cld
cmp
test
ljmp
flds
out
or
pop
mov
vorps
and
lea
rolb
pop
or
sbb
sbb
sahf
cld
sub
adcl
test
inc
mov
inc
dec
jns
sub
call
int
cmp
subl
add
je
bound
decl
xchg
pop
or
insl
xor
sbb
inc
or
jns
stos
movsb
in
cli
data16
loop
addr16
cmc
add
fsubl
mov
add
xor
lcall
aam
xchg
adc
fcomps
add
or
add
and
sarl
dec
mov
xchg
fstpl
dec
mov
dec
repz
sbb
push
shr
mov
sbb
aaa
mov
iret
arpl
movsl
cmc
sbb
xchg
sub
out
test
rorl
ret
cltd
pushf
insb
pusha
dec
pop
adc
fldl
xlat
adc
or
pushf
adc
les
hlt
jecxz
ret
clc
and
sub
mov
add
sbb
mov
rcll
cld
dec
ljmp
pop
pushf
mov
xor
cmp
cltd
cwtl
xor
shr
mov
or
lahf
adcb
aas
dec
mov
dec
ljmp
out
lods
or
jne
mov
pop
push
cmpsl
jne
xchg
jl
push
ret
push
lret
mov
and
mov
lock
push
mov
hlt
ss
push
mov
sahf
mov
hlt
fstpl
jle
cmp
xchg
sbb
mov
sbb
fmuls
lods
push
xchg
push
and
movsb
scas
dec
cmp
cmp
mov
xor
sbb
inc
je
leave
aam
sub
fstl
orb
pop
or
enter
cmc
push
ret
les
xorl
dec
jo
jmp
aam
lods
fisubrl
pop
fnstenv
loop
cmp
out
jno
addb
aam
inc
sub
mov
je
aad
out
flds
hlt
call
jl
inc
pop
xor
es
push
or
cmp
cld
pushf
scas
inc
mov
pop
lods
test
test
dec
hlt
icebp
arpl
push
fsubp
stos
dec
pop
xchg
imull
mov
ds
ficoms
or
insb
mov
orl
rcrb
hlt
push
mov
mov
ficoms
push
xchg
addr16
dec
gs
adc
enter
xchg
fsubl
mov
sub
lret
add
rcrb
mov
test
wbinvd
jbe
push
stc
orl
js
in
xor
or
xchg
sub
hlt
pop
ret
sub
adc
push
cwtl
jno
scas
fs
mov
sahf
pop
xor
orb
das
push
movb
enter
data16
cmc
insl
lds
xor
mov
cmp
lock
pop
mov
test
xor
scas
push
arpl
int
out
push
and
in
push
sbb
sub
stos
cltd
je
out
in
imul
dec
aas
and
jmp
mov
lds
sub
xchg
pmaddwd
and
sbb
call
jge
xchg
dec
jno
sti
jmp
or
jno
imul
jmp
mov
mov
sbb
rol
es
pop
in
mov
enter
pop
sbb
xchg
add
lcall
repnz
mov
jmp
xchg
ds
inc
mov
push
push
in
xchg
push
mov
movsb
test
inc
or
push
mov
inc
jl
aam
jl
sbbl
aad
mov
mov
inc
dec
testb
test
mov
dec
shl
lock
xlat
add
cld
mov
xchg
ret
adc
and
fcmove
add
xchg
cwtl
xor
or
in
test
shll
mov
push
es
shl
inc
sbb
ret
leave
test
jb
popf
test
rolb
mov
cld
add
jg
jle
sub
clc
inc
test
incb
sbb
jge
mov
push
mov
mov
xchg
ret
and
mov
nop
and
add
sbb
mov
sub
pop
inc
push
nop
lock
pop
lods
jae
adc
out
sbb
lods
cmp
xchg
mov
ljmp
test
popf
mov
mov
scas
in
pop
xchg
orb
pcmpgtw
ret
adc
stos
lcall
incl
jo
fisttpll
xor
arpl
cld
push
jno
andb
mov
mov
push
incb
aam
in
cmp
push
in
jl
lea
into
sbb
xchg
dec
sti
sbb
dec
mov
xchg
cld
mov
pop
in
lods
and
repz
das
pop
das
nop
icebp
inc
lods
roll
data16
inc
out
ret
mov
mov
popa
hlt
push
lret
out
jnp
mov
mov
cmpl
mov
mov
push
test
add
fdiv
jge
mov
out
jnp
adc
pop
add
sbb
add
push
lock
xchg
mov
xchg
inc
clc
ret
shl
es
test
dec
sbb
fadds
mov
lods
jle
nop
push
xchg
lods
dec
push
lods
sub
xor
push
xorl
mov
push
mov
mov
xor
mov
loopne
gs
or
or
rolb
pop
hlt
loopne
mov
hlt
dec
cmc
add
cmc
add
add
xchg
test
outsb
sti
pop
sbbb
adcb
mov
imulb
nop
mov
test
dec
jp
data16
inc
adc
mov
sub
or
mov
xor
sub
in
cld
sbb
stos
and
repnz
popf
movsl
insl
mov
cld
lcall
adc
cld
mov
pop
ja
into
hlt
out
or
sub
dec
adc
out
xchg
sub
pop
movsb
hlt
aaa
shlb
lcall
pop
mov
aad
into
xorl
fdiv
mov
ds
enter
filds
mov
or
mov
add
xchg
aas
xchg
push
dec
test
testb
mov
repnz
fidivs
add
shrl
aad
dec
insb
adc
loopne
push
jno
inc
mov
gs
rolb
push
and
hlt
xchg
lahf
or
and
cltd
or
popa
sbb
mov
popa
pop
gs
bound
insb
punpckldq
fs
and
fildll
subb
jecxz
loope
stos
push
bound
jecxz
inc
gs
lret
cmove
cmp
enter
out
xor
push
fisubl
dec
or
push
fdiv
mov
mov
lahf
rolb
cmp
xor
cmpsb
push
sub
xor
xchg
cmpsb
sub
dec
jge
sarl
cmp
ljmp
aas
call
out
dec
cmpsl
test
pop
xchg
push
enter
arpl
ds
xor
mov
roll
les
cmp
add
repz
cli
and
add
and
mov
push
dec
xorb
iret
jmp
bsf
aad
loop
in
test
xor
lock
jecxz
in
loopne
lds
add
add
std
icebp
fdiv
pop
test
xchg
enter
cmp
aas
bound
movsb
and
nop
fisubs
jne
xor
loope
mov
in
push
jle
dec
fmulp
fldcw
fcmove
mov
inc
clc
hlt
out
or
mov
lret
testb
ficomps
jmp
loope
mov
jge
jnp
out
dec
mov
add
out
pop
aaa
sti
popf
lcall
dec
or
cmp
loopne
hlt
or
lds
mov
outsb
mov
jmp
xor
fldcw
mov
mov
dec
hlt
xor
mov
dec
loopne
imul
xchg
mov
aad
cs
push
cmc
mov
jle
rcrl
flds
lret
pop
ret
sti
mov
jle
adc
pop
popf
lahf
push
hlt
mov
ds
dec
insb
pop
pop
jmp
cmpsb
test
or
jle
sbb
in
loope
cmp
aas
lock
mov
push
add
ret
je
adc
pop
test
xchg
inc
out
sbb
adc
fcomps
mov
cmpl
inc
lret
shlb
fucomp
int3
or
inc
jnp
test
sti
and
push
cmpb
fldcw
int3
xor
or
mov
lods
pop
ja
mov
mov
adc
xchg
mov
add
std
mov
cmp
mov
dec
adc
mov
ljmp
mov
inc
mov
jmp
adc
in
inc
mov
sbb
sub
sub
push
jle
cli
mov
cmp
xor
lock
mov
adcl
mov
ret
arpl
hlt
inc
inc
or
and
mov
inc
movl
or
lods
xchg
repnz
neg
in
fs
ret
ret
or
inc
repnz
add
xchg
nop
jno
loopne
add
fimuls
hlt
mov
xchg
mov
outsb
pop
xor
ficompl
xchg
aaa
aad
test
xor
mov
add
mov
out
test
mov
in
lock
lret
and
scas
inc
hlt
lea
or
mov
lds
lds
push
xlat
inc
jne
pop
ja
and
enter
mov
sub
and
fidivl
and
in
lods
push
cs
shlb
xchg
inc
mov
mov
or
sub
leave
pop
push
mov
adc
dec
lret
mov
xor
pop
insl
jae
add
push
gs
rol
xchg
sti
mov
scas
cwtl
xlat
pop
enter
fnsave
testb
rorl
fcoml
add
fstp
xor
mov
mov
mov
andl
xchg
xchg
xchg
rorb
push
push
hlt
add
jg
pop
jo
sub
lods
xchg
pop
push
xchg
mov
push
mov
sub
aad
and
xchg
loop
mov
jns
lea
scas
mov
mov
mov
adc
xchg
sub
mov
jl
les
push
imul
mov
adc
mov
fcmove
cmp
loope
dec
mov
clc
leave
inc
enter
sahf
adc
dec
bnd
mov
imul
mov
enter
xchg
and
mov
mov
sub
inc
dec
sbb
rcrb
jns
lea
mov
jnp
mov
popa
lods
xchg
adc
xchg
dec
push
xchg
sahf
push
fsubrl
dec
in
sub
dec
stc
loopne
and
ret
sahf
loop
dec
add
sahf
mov
movsb
mov
test
call
and
dec
dec
xchg
sarl
ss
imul
mov
icebp
rcrb
jns
lea
pop
jge
jp
outsl
adc
push
xchg
mov
mov
push
xchg
inc
or
mov
lds
mov
mov
xchg
jae
and
ret
pop
jnp
test
push
loop
mov
inc
dec
or
stos
lcall
mov
mov
sub
push
lods
xchg
adc
xchg
aas
dec
or
shll
fisubrs
push
adc
loop
mov
inc
dec
push
icebp
repnz
cld
lcall
test
mov
xchg
imul
xchg
dec
mov
les
or
stos
lcall
mov
push
loope
outsb
clc
mov
inc
mov
fstps
xchg
sub
mov
dec
lods
xchg
adc
jae
and
loopne
cmpsb
dec
daa
test
mov
mov
test
out
cmp
sti
add
sub
xchg
test
push
sti
mov
mov
pop
insb
or
xchg
lods
sub
icebp
mov
sbb
popa
cmpsb
mov
enter
repnz
cltd
inc
inc
jmp
hlt
sub
mov
add
sub
in
sbb
mov
pushf
jecxz
es
mov
jbe
or
gs
test
dec
subl
fwait
clc
cwtl
xchg
in
mov
inc
sbb
jge
mov
call
bnd
push
push
inc
sub
push
lcall
jnp
pop
ret
adc
jl
stos
es
jae
into
fld
adc
mov
pop
lret
sahf
mov
sub
sub
scas
mov
sub
aas
sahf
and
mov
sub
ret
dec
push
add
mov
movsb
cmovbe
in
xchg
xor
mov
movsb
es
dec
fcomps
sub
jmp
sbb
shl
inc
jne
push
arpl
rclb
cmp
enter
scas
ret
jb
test
mulb
daa
mov
push
mov
fwait
jg
pop
repz
mov
in
lock
enter
lcall
pop
les
pushf
ret
mov
sbb
out
mulb
rcll
shlb
cmpsl
jae
andb
sub
pop
adc
mov
popa
push
mov
dec
add
mov
cli
or
lds
test
cmp
scas
pusha
movsb
push
stos
adc
mov
add
or
je
sub
push
fsubs
rcrl
xchg
test
sub
push
adc
sahf
test
loop
jg
enter
shlb
jge
push
cmpsb
xchg
fimuls
addl
call
sbb
mov
mov
loop
mov
sub
cmp
ss
adc
mov
pop
loope
mov
mov
les
rorb
jne
mov
mov
loopne
pushf
xor
xchg
push
cmpsl
decl
mov
test
stc
push
sub
xchg
add
adc
add
xchg
dec
pop
cmpsb
je
mov
pop
std
cmp
jmp
movsb
jo
sub
adcb
ljmp
andnps
adc
add
hlt
adc
add
idiv
iret
enter
cmpsb
test
mov
les
mov
fsub
push
sub
mov
lods
cmp
sahf
add
mov
push
or
xor
mov
std
stc
cmpsb
or
stc
cmpsb
add
movsb
fst
cmpsl
xchg
nop
les
or
sbb
pop
mov
lock
inc
out
xchg
adc
cmp
call
adc
ja
std
sub
call
mov
cli
push
and
fisubrs
pusha
adc
in
aas
inc
bnd
mov
or
shl
pop
fisubl
xchg
arpl
sbbl
mov
cltd
inc
fld1
or
dec
imul
sub
rcr
xlat
jg
jmp
jnp
call
mov
aad
mov
pushf
xor
aas
scas
mov
adc
aad
shrl
pusha
inc
pusha
xchg
popa
std
adc
adc
xchg
and
cmpb
stos
mov
std
inc
lock
and
mov
aas
jp
int
xor
jg
fwait
mov
clc
push
lahf
scas
insb
xor
repnz
outsb
cli
xchg
adc
cmp
movsl
rcl
mov
in
fcomip
jge
push
stos
subb
or
call
mov
enter
stos
hlt
fists
aas
dec
sub
mov
cli
jo
mov
call
bound
je
stc
mov
xor
push
repz
sarb
lods
xlat
test
scas
mov
nop
jge
orb
mov
cmp
cmp
xchg
mov
scas
sub
cmp
push
or
fisubrl
push
movsb
xchg
inc
fwait
jmp
push
pop
pusha
mov
pop
mov
andl
xchg
pusha
jno
cwtl
mov
sub
lret
xchg
mov
pusha
sbb
mov
loope
and
mov
cli
pushl
enter
inc
call
lahf
out
fsubl
adc
dec
push
mov
push
or
scas
adc
mov
xchg
pop
mov
flds
xchg
mov
ja
jg
insl
lret
mov
jnp
cwtl
aad
add
add
ret
add
and
les
lret
push
push
push
lds
ficompl
push
test
jg
shl
fwait
jg
aam
inc
insb
enter
cmpsb
out
movsb
test
in
or
pusha
pop
lock
pusha
in
cwtl
nop
lods
mov
test
movsb
sbb
lock
add
in
faddl
or
xchg
inc
hlt
sbb
mov
stos
outsb
subl
cmpsb
lahf
mov
lods
mov
mov
ja
das
out
aam
add
sub
out
dec
jmp
int
sbb
dec
mov
inc
or
jmp
push
arpl
out
stos
sbb
out
mov
pop
xchg
or
mov
mov
ss
enter
push
inc
xor
inc
in
mov
xchg
cmp
ret
pusha
imul
add
mov
adc
push
ja
cmpsb
mov
xchg
jbe
add
push
fs
add
xchg
test
ja
xor
xchg
es
mov
mov
add
jbe
leave
adc
pop
mov
sbb
inc
jp
or
frstor
sbbl
sbb
int3
repnz
cli
pop
rcl
sbbb
fmull
dec
addl
insl
jo
pop
add
out
sub
and
mov
push
sbb
or
and
push
mov
inc
sub
into
xor
mov
push
inc
roll
rcll
sub
sbb
cmp
mov
xchg
test
xchg
or
test
pusha
out
leave
add
clc
add
jl
jnp
test
insb
mov
stos
subl
xchg
pop
loop
test
lds
div
pop
mov
add
sub
fstpl
sub
les
nop
pusha
aaa
rclb
jbe
adc
aam
out
fstl
jo,pt
sahf
and
iret
hlt
pop
cltd
frstor
cmpsb
push
pop
push
xor
mov
inc
loopne
or
je
or
mov
push
sub
hlt
and
repnz
subl
mov
mov
sbb
mov
cmp
sbb
or
push
or
add
lods
and
push
mov
push
mov
les
sbb
or
dec
mov
lods
aam
sub
sub
daa
insb
dec
cvtpi2ps
jns
movsl
mov
inc
loopne
mov
insb
sbb
pop
mov
hlt
mov
or
mov
int
dec
add
pop
adc
lods
call
cmp
std
xor
jmp
ret
cltd
dec
mov
xchg
or
push
lds
cmc
xchg
jnp
mov
rol
in
jbe
pop
add
into
orl
inc
cmp
out
mov
nop
fisubs
dec
cmp
mov
scas
add
in
mov
add
cmp
xchg
push
or
xor
iret
fisubrs
mov
push
adc
sets
or
pop
sbb
movsl
fisubrs
test
sub
test
in
adc
inc
mov
ja
mov
ja
pop
pop
cmp
jl
push
xor
nop
add
and
mov
clc
or
dec
sub
adc
loop
imul
push
and
pop
andl
pop
push
xor
aam
push
mov
repnz
clc
call
in
sub
or
ret
out
mov
fistl
xor
mov
mov
movsl
add
out
popf
xchg
dec
push
mov
int3
aam
jmp
cmpl
jmp
pop
inc
ficompl
repz
lea
frstor
and
sub
and
mov
daa
idivb
xor
mov
sbb
mov
dec
cwtl
loop
xchg
mov
sbb
cmp
lock
out
lcall
xchg
mov
roll
sbb
outsl
xchg
jmp
pop
push
jae
cmp
mov
lock
pop
mov
fidivs
sahf
adc
in
insb
pop
mov
xor
pushf
and
cmc
outsb
jg
sub
mov
das
xchg
and
loope
repnz
hlt
sbb
fwait
nop
mov
ss
mov
cs
nop
in
out
and
push
fwait
decb
pop
sarb
cwtl
or
nop
jno
pop
or
mov
mov
test
enter
int
inc
int3
pop
sub
mov
lret
push
std
out
mov
test
dec
inc
movsb
sarb
les
mov
shl
push
mov
fmuls
cmpsb
push
xor
outsl
popl
inc
cli
inc
jle
xchg
mov
inc
dec
loopne
enter
cltd
rorb
scas
scas
addl
add
jge
dec
test
mov
int3
out
xor
mov
out
nop
mov
rcll
daa
in
push
pop
js
or
xchg
cmp
xchg
les
ret
mov
nop
push
sbb
faddl
push
pushf
xchg
mov
xchg
cld
loop
cld
popf
jo
and
pushf
add
loop
add
cmp
js
cwtl
les
jns
int
addl
inc
mov
sub
int
mov
lret
test
mov
or
in
ret
pop
adc
test
dec
in
outsl
pop
mov
loop
clc
mov
stos
mov
mov
ret
stc
jae
loope
xchg
fsubrl
in
loop
loopne
fimuls
sbbb
repnz
fsubs
aam
in
rcrl
or
jnp
pop
fisubl
sub
mov
xchg
mov
andb
loope
out
imul
add
cli
xchg
xchg
loop
stos
loopne
mov
test
lret
in
sub
data16
pop
adc
test
icebp
arpl
es
movsb
sti
mov
lock
xchg
xchg
cld
add
and
mov
mov
lds
std
lcall
sub
cmp
ja
test
adc
movsb
inc
popf
shrb
cs
imul
mov
aas
and
xchg
int3
sub
das
in
call
outsl
insl
ret
adc
imul
aaa
push
shr
jg
mov
mov
out
xlat
fdivr
fldlg2
mov
decb
and
inc
pop
movsb
ja
dec
mov
es
ret
ja
popf
fistps
push
xor
mov
ja
movsb
test
leave
push
and
mov
hlt
scas
or
jno
hlt
pop
imul
mov
notb
mov
ret
repnz
pop
mov
outsl
lret
and
mov
shlb
adcb
add
lock
mov
fsub
nop
clc
int
or
cld
rorb
call
adc
push
pop
lea
repnz
ljmp
mov
cld
adc
add
scas
add
xchg
cmc
xorb
xchg
xchg
cmp
or
dec
jmp
in
sub
clc
sti
mov
ja
clc
and
mov
xchg
orb
in
jo
fbld
mov
dec
or
jne
and
push
xor
test
fdivrs
icebp
mov
and
icebp
fimuls
xchg
push
mov
pop
add
subb
push
les
cmp
cmp
fildl
sbbb
fs
rorb
popa
fwait
mov
addb
loopne
or
wbinvd
sbb
pop
xchg
push
sbb
mov
jbe
xchg
mov
jg
pushf
repz
push
jmp
outsb
mov
cli
int3
lahf
in
test
and
or
sbb
xor
jge
lea
mov
andb
jnp,pn
cltd
add
std
fwait
push
jns
fcompl
adc
and
and
jns
xor
push
clc
mul
mov
mov
in
xchg
pop
sub
nop
jnp
mov
adc
adc
add
mov
movsb
leave
faddl
aam
lods
lds
pushf
scas
mov
mov
cmp
dec
stos
dec
cld
mov
mov
add
enter
sarl
test
mov
push
mov
pop
adc
out
cmpb
cli
jle
ja
mov
ret
hlt
mov
xchg
cmp
sbb
lods
push
lea
scas
stc
cmp
js
loopne
mov
dec
inc
dec
sbb
leave
inc
or
insb
loopne
ficoms
stc
shll
in
fcmovu
add
or
mov
shl
sub
jo
push
jno
sub
in
sub
scas
sbb
sub
xchg
add
es
cmp
dec
out
das
cmc
lret
sbb
mov
mov
rclb
adc
hlt
into
rorb
or
loope
loopne
bound
popa
or
xchg
into
sub
sbb
cmp
pop
test
cmp
cmpb
inc
inc
gs
add
and
push
std
push
cld
mov
mov
sub
jbe
lea
jmp
mov
sub
repnz
add
movsb
mov
adc
lods
cmp
inc
lret
inc
icebp
push
mov
pop
xchg
or
push
cltd
in
jbe
or
jo
in
push
in
pop
je
adc
bound
je
jo
cmpb
out
mov
rcrb
scas
mov
out
in
mov
or
leave
clc
dec
dec
mov
xchg
dec
or
mov
inc
add
mov
mov
mov
and
mov
inc
sub
nop
jns
cmp
add
adc
scas
dec
call
addr16
pop
fwait
lahf
icebp
or
in
ss
mov
insl
mov
decl
fwait
and
xchg
sbb
repnz
pop
stos
repnz
xor
hlt
add
sub
dec
decl
loopne
bound
add
out
bound
scas
cmc
andl
and
add
rol
push
cmpsl
orl
add
mov
lcall
test
pop
mov
loope
hlt
pushf
ss
into
pusha
inc
mov
ret
hlt
cmp
xorb
mov
inc
loop
adc
test
aam
mov
push
or
repnz
and
fwait
xchg
push
ljmp
sbbb
aas
movsl
hlt
lcall
xlat
test
sbb
cs
sbb
jle
mov
test
rorb
aas
fistl
mov
adc
in
xor
orl
adc
pop
test
mov
movsl
inc
mov
ss
adc
push
cwtl
mov
mov
inc
lock
adc
xchg
sbbb
sbb
imul
and
mov
add
xlat
sbb
aam
or
subl
in
pop
sti
mov
push
ret
fildl
pop
fcomp
das
ja
push
pop
dec
mov
mov
ljmp
jae
push
mov
mov
or
lret
or
push
in
add
aam
cmpb
ret
sbb
sub
nop
ja
hlt
sub
mov
mov
cmp
adc
mov
cltd
movsb
or
and
mov
cltd
enter
inc
dec
leave
test
mov
inc
inc
test
cld
sub
or
xor
icebp
sub
cmp
cwtl
hlt
push
movsb
pop
in
mov
stos
and
mov
lcall
pop
rolb
xor
imul
xchg
cld
test
fisubs
or
push
imulb
or
cli
in
push
lret
and
xchg
add
cwtl
hlt
les
pop
add
inc
lods
fwait
lahf
enter
push
or
or
or
inc
sti
mov
lea
popa
imul
push
aad
inc
aam
pusha
int3
in
dec
dec
test
aaa
lods
inc
fcoml
mov
aam
push
or
jbe
cwtl
sub
or
lock
fldt
dec
xchg
hlt
ljmp
jg
fimull
mov
test
rcll
shlb
mov
je
lcall
mov
nop
inc
mov
lahf
sti
loop
inc
test
sbbb
leave
add
xchg
ret
inc
js
cmc
mov
push
dec
xchg
fwait
into
mov
mov
cmpsb
jmp
jb
or
and
out
sbb
andb
jne
lcall
cmp
aad
int
and
clc
jmp
jmp
fiadds
mov
imul
cs
cmp
les
sar
mov
add
mov
or
push
imul
dec
mov
sar
adc
mov
rorb
lcall
shll
aaa
push
shll
mov
dec
hlt
and
lcallw
rol
cltd
adc
mov
inc
mov
out
enter
mov
out
lret
mov
mov
adc
jo
mov
outsl
mov
jne,pn
mov
fsub
std
mov
inc
lea
lods
mov
aad
shl
xor
stc
jne
inc
add
cltd
mov
dec
movsl
and
orb
mov
aad
inc
lahf
pop
inc
out
mov
stos
and
lret
push
cmp
xlat
rolb
hlt
and
mov
ret
push
pop
test
repz
roll
xchg
scas
push
stos
inc
cmp
rcrb
pop
in
pop
rorl
cmp
mov
fmuls
movsb
lcall
pusha
mov
imul
mov
or
rcrb
iret
jno
aam
in
mov
lcall
or
outsl
adc
mov
sti
pop
leave
int3
loope
sbb
call
ja
in
push
cmc
or
sub
jg
or
xchg
sub
jmp
test
mov
fadds
xor
and
push
push
aas
xor
jo
push
gs
test
jg
call
mov
sahf
fsubl
add
cwtl
inc
nop
inc
dec
mov
outsb
test
test
mov
mov
in
inc
push
adcl
mov
mov
popf
insl
add
inc
jno
jg
jp
pop
scas
out
insb
mov
sahf
push
cltd
mov
push
add
ror
cld
push
push
xor
sbb
cwtl
movsl
lods
add
lods
dec
mov
in
dec
push
dec
outsb
push
in
sbb
hlt
xchg
test
push
inc
orl
fnstsw
call
icebp
or
fldt
roll
sub
insb
arpl
addr16
mov
std
fstl
add
or
cmpsl
inc
sub
cmp
mov
xchg
pop
icebp
sub
xchg
ret
xlat
jno
pop
scas
ficompl
mov
pop
jbe
jecxz
ret
in
push
push
repnz
add
test
mov
and
outsb
and
xorb
movsl
mov
loopne,pn
sbb
mov
scas
aaa
push
roll
xchg
mov
test
in
movsb
lret
testl
xchg
ret
or
xor
addb
test
stos
or
loope
sahf
adc
xlat
lret
mov
rolb
sbb
push
xchg
mov
in
mov
or
and
test
jmp
sub
add
pop
mov
call
call
divl
inc
or
mov
leave
mov
mov
cmp
cltd
jl
out
es
nop
in
push
stc
xchg
push
push
or
mov
inc
inc
dec
adc
test
lea
cmpsb
inc
mov
cwtl
cli
xchg
iret
loope
inc
pop
mov
hlt
push
xchg
or
mov
xchg
mov
sub
adc
mov
pop
in
lcall
test
mov
out
out
test
lods
mov
dec
mov
pop
push
popa
cld
cs
mov
or
insb
dec
rolb
jge
movsb
mov
lea
sub
cmp
push
ja
pusha
insl
jns
lock
pop
sti
insb
pop
mov
loopne
mov
jne
sub
loope
xchg
out
push
push
cwtl
shrb
movsb
les
jo
int3
xchg
add
shl
cli
imul
loopne
sbb
mov
testb
xor
outsb
push
mov
fsubrs
mov
add
std
pop
sti
out
cmpsl
in
or
in
mov
cltd
xchg
or
adc
ret
mov
mov
test
ret
fcomps
inc
and
push
imul
gs
sub
or
es
test
push
dec
fxch
push
movl
rcr
inc
btc
inc
and
adc
jecxz
push
clc
cs
andb
xchg
mov
hlt
decl
xchg
mov
lcall
fistl
mov
cmp
xchg
jl
nop
call
add
shrl
and
sub
outsl
mov
mull
xchg
in
cmpsl
xchg
dec
outsl
and
fiadds
cmp
stos
mov
incl
pop
pop
sub
stos
sub
stc
stos
cli
sub
repnz
mov
enter
add
dec
jbe
or
mov
call
xchg
cmpsb
sbb
shl
mov
push
jno
inc
imul
mov
mov
stos
lds
sub
push
in
add
cmp
mov
push
ds
mov
dec
add
shl
mov
imul
inc
xchg
mov
hlt
jp
lcallw
pop
rorb
or
pop
push
adcb
test
add
or
cmc
xchg
lcall
mov
mov
arpl
xchg
dec
pop
imul
adc
and
cltd
and
leave
xchg
sbbb
clc
loopne
push
es
pop
lods
les
inc
xchg
mov
lcall
mov
xchg
cltd
add
lods
dec
sbb
aam
movb
adc
movsb
cs
test
xchg
inc
hlt
jns
mov
notb
nop
add
jne
ret
popa
movsl
hlt
xchg
mov
fistps
xchg
sub
jge
xor
ror
mov
ljmp
inc
mov
and
inc
test
fldt
pop
test
into
imul
ret
les
bound
out
add
inc
push
popf
cld
mov
inc
lret
sbbl
pop
xor
pop
mov
testb
mov
and
sbb
sub
data16
ds
jl
sub
out
lret
movsb
ret
sbb
adc
dec
test
dec
sub
rorl
ja
inc
sub
in
pop
dec
movsb
push
jns
rcr
or
daa
into
rep
inc
jge
pop
sub
pusha
fs
dec
test
pop
mov
or
test
xchg
lret
pop
pusha
movsb
scas
fstl
pushf
arpl
and
loope
das
or
pusha
xor
rclb
dec
or
jp
inc
rorb
test
lds
jnp
xchg
add
mov
inc
jb
pop
xor
cmp
nop
jmp
lcall
pop
push
mov
xchg
das
mov
shrl
fisubs
cltd
jae
popa
pop
xchg
mov
mov
xor
jae
popa
outsb
mov
add
pop
add
cld
ds
mov
or
je
popa
push
mov
add
push
cmp
test
push
ficoms
repz
add
sbb
fsubrp
call
stos
hlt
jecxz
pushf
ficomps
xchg
shrb
dec
jne
push
bnd
popa
hlt
mov
or
lahf
iret
loopne
into
mov
fsubrs
syscall
inc
ds
and
and
push
hlt
cmpsl
adc
cmpsl
cwtl
repz
pop
in
faddp
hlt
dec
movsb
repnz
xchg
xor
lds
sbb
testl
mov
pop
in
rclb
lods
xchg
addl
cmpsl
mov
ss
sub
inc
imul
lds
iret
mov
into
shlb
std
flds
popf
in
aad
hlt
rcl
jmp
rcrl
mov
inc
sarb
popf
cld
shll
cmp
cltd
or
fstp
rorl
stos
sub
cli
imul
pop
test
out
shrb
pop
in
inc
sbb
movsb
ljmp
xchg
ffreep
and
jmp
mov
out
push
roll
pop
shlb
mov
jb
mov
leave
das
push
lcall
neg
or
das
into
xchg
mov
nop
pop
push
testb
ja
add
hlt
cmc
pop
mov
out
test
test
pop
mov
mov
push
mov
sub
test
shlb
cltd
mov
ljmp
and
mov
or
andb
out
and
and
mov
mov
das
out
jle
or
xlat
pop
xchg
adc
lahf
fmull
shrl
cmp
notl
mov
push
jg
les
aad
lahf
nop
in
and
sarl
push
sbb
cli
sub
in
test
add
into
sub
enter
jnp
push
jp
xor
pop
mov
jge
mov
test
dec
call
arpl
mov
ss
dec
push
xrelease
add
mov
sbb
add
cld
jnp
mov
mov
cwtl
ret
clc
inc
rorl
outsb
sbb
fadd
ret
xor
leave
pop
sbb
and
xchg
fwait
enter
xorb
ljmp
adc
mov
in
lea
sbb
repz
cwtl
decl
adc
leave
lcall
inc
mov
fisttpl
mov
inc
jbe
mov
and
dec
mov
cwtl
push
out
mov
iret
jb
add
inc
enter
lcall
dec
xlat
lds
aam
testl
loopne
jbe
mov
adc
sub
mov
sub
jae
test
add
dec
test
xchg
add
dec
sbb
and
clc
std
sub
mov
add
mov
sti
mov
add
cltd
pop
adc
test
les
cltd
ljmp
in
loop
loopne
fidivs
fadds
adc
enter
mov
cltd
lret
xchg
ret
and
adc
enter
mov
cltd
mov
ret
and
mov
or
mov
inc
clc
push
mov
xchg
xchg
sub
hlt
inc
cmp
add
jle
mov
movsb
add
adc
mov
nop
mov
adc
out
pop
or
xchg
jno
pop
and
int3
mov
sti
cld
adc
subl
or
hlt
pop
daa
mov
test
fisttpll
dec
rorl
incl
or
hlt
les
enter
lret
and
xor
les
push
inc
fs
sti
test
pushf
js
lea
xchg
dec
test
inc
loope
mov
les
sub
cld
into
fs
in
inc
and
popa
or
and
in
pop
imul
jne
add
movsb
std
insb
pop
arpl
pushf
sarb
sub
add
stos
inc
cmpsb
xchg
inc
and
mov
dec
stos
nop
inc
loope
ror
dec
outsl
xchg
mov
dec
sahf
rcrb
mov
sti
sub
adc
mov
adc
rcrb
test
mov
mov
addb
mov
sub
sbbb
fidivs
mov
jnp
lock
inc
and
jae
inc
cmpsb
jae
pop
lret
xchg
ret
rcrb
sub
in
push
sti
iret
xchg
cs
mov
scas
jae
jae
adc
rolb
inc
lret
mov
call
out
hlt
add
push
or
cmpsl
adc
xorl
movsb
sub
fisubrs
mov
hlt
and
imul
dec
rcl
cwtl
hlt
xor
outsb
or
ror
dec
lret
in
insl
int3
lea
lret
jg
cmp
or
pushf
pop
shll
mov
ret
pop
and
aas
mov
push
pop
movsb
lock
ret
xchg
mov
shll
test
mov
or
mov
loop
mov
sbb
mov
mov
into
shl
shlb
fadd
mov
fmull
fimuls
in
out
call
or
mov
or
push
movsl
mov
les
sbb
hlt
xor
loop
aas
mov
cmp
xchg
add
sub
nop
mov
adc
xorl
inc
mov
pop
movl
insl
mov
mov
mov
mov
mov
lret
loop
mov
sbb
mov
mov
fcmovb
fsub
fidivs
in
mov
ljmp
add
movsb
or
test
xchg
xchg
cltd
lcall
daa
cli
mul
into
dec
cmpsb
daa
movsl
bound
mov
aad
mov
sub
shll
dec
fldt
xchg
repnz
popa
movsl
or
hlt
insl
and
stos
add
test
cli
mov
loopne
faddp
sahf
cwtl
les
sti
sub
fsub
jmp
adc
loopne
inc
fidivl
pushf
xchg
int3
inc
les
mov
subl
mov
add
xor
jl
mov
sub
fs
sub
cs
pop
xchg
mov
mov
movsl
fs
clc
inc
rclb
jbe
mov
jnp
add
cmpsb
loopne
cwtl
inc
sub
sub
pushf
enter
mov
loop
and
jns
dec
sbb
nop
sub
insl
push
fwait
stos
mov
and
test
xchg
dec
sub
xchg
push
pop
mov
data16
sbb
test
xchg
outsl
cltd
inc
cs
pop
inc
add
int
xor
lock
and
daa
int3
popf
dec
iret
adcb
adc
repnz
flds
cmp
lsl
xchg
aam
or
and
dec
into
mov
adc
mov
and
daa
les
xchg
sbb
fldcw
jns
test
js
jbe
jg
jg
lahf
mov
aaa
mov
and
jno
pop
mov
lock
push
enter
int3
dec
xchg
push
push
fcoml
daa
les
scas
sub
mov
leave
fists
dec
sub
lret
inc
fwait
or
push
jg
mov
repnz
sbb
es
add
ja
mov
lret
xor
lods
mov
mov
je
mov
push
test
repz
mov
mov
mov
lea
mov
movsb
xorb
xchg
mov
enter
inc
stos
pop
adc
lret
dec
pusha
data16
fisttpll
lods
unpckhps
pop
inc
pop
xchg
nop
jg
cld
push
arpl
or
aam
mov
imul
cltd
xrelease
and
push
subb
mov
stc
mov
push
ja
push
pop
hlt
inc
movsl
negb
sub
mov
cmp
call
mov
call
jmp
cmc
xchg
push
mov
or
es
call
pop
sub
or
test
lods
rcl
lods
dec
sub
cltd
lods
fsubr
fsubrs
int3
mov
add
loop
xchg
rcrb
sub
jb
mov
fs
mov
cmpsb
cld
es
lcall
xor
sbb
movsb
inc
insl
sbb
and
pop
out
mov
out
loopne
hlt
sub
into
push
and
in
lret
jmp
and
pusha
lea
jo
mov
xchg
in
je
inc
test
cld
cli
jne
int3
ret
hlt
les
cli
dec
inc
xchg
pushf
mov
cmpsl
and
sub
mov
test
aad
add
add
lret
call
lret
pop
mov
sbb
pop
adc
cmp
roll
push
loop
xchg
loopne
cld
dec
mov
leave
jbe
sub
sub
sub
leave
cmp
inc
push
fcomip
dec
jne
leave
fadds
lock
adc
or
mov
lock
imul
add
subb
in
test
loop
test
and
add
lahf
outsb
push
gs
lret
sub
or
and
in
scas
inc
shrl
popf
aad
leave
test
into
xor
and
and
mov
int3
and
ret
add
dec
test
repnz
call
test
enter
adc
sub
rorb
push
add
adc
out
dec
out
sub
lods
mov
add
sbb
dec
loopne
test
mov
sub
or
incl
sub
and
or
aaa
mov
push
xorb
xchg
out
push
xor
sub
push
mov
mov
dec
mov
push
adc
repnz
out
mov
dec
arpl
push
hlt
in
lods
sub
mov
or
addr16
mov
aas
xor
or
popa
pusha
sbb
pop
pusha
mov
hlt
out
or
leave
jle
xchg
push
push
fisubrs
pop
pushf
add
xchg
xchg
inc
lahf
in
sahf
jne
shl
lcall
sub
shlb
iret
sub
xchg
pop
arpl
insl
shrb
les
adc
mov
test
outsb
xchg
xchg
push
out
or
add
gs
call
in
push
add
push
or
mov
mov
aaa
or
push
add
dec
jno
dec
rclb
mov
inc
pop
add
dec
mov
sbb
jbe
cmc
in
mov
add
mov
or
sbb
adc
cltd
lret
mov
xchg
sarl
jns
xchg
stos
sarl
mov
adc
int3
out
sbb
outsb
mov
test
pop
clc
movsl
adc
popa
mov
movsb
mov
adc
mov
aas
jbe
xchg
cmpsl
sbb
orl
pop
arpl
std
cmp
cld
stos
push
sub
cwtl
mov
mov
leave
lds
sti
or
jmp
mov
mov
ja
adc
push
lea
loopne
cwtl
inc
loopne
cmpsb
adc
adc
adc
or
or
test
out
push
cltd
call
out
add
mov
mov
leave
mov
push
xchg
les
mov
jno
mov
and
stos
hlt
push
dec
test
test
mov
cmp
lea
push
into
test
add
mov
add
sbb
xor
or
into
pop
cmc
adc
cmpsl
gs
lock
into
imul
cli
insb
mov
push
mul
loopne
mov
out
sbb
mov
hlt
or
mov
loop
repz
adc
repnz
pop
jo
rolb
mov
loope
pcmpeqw
in
inc
negl
mov
out
cmp
push
imul
ss
loopne
lds
hlt
aam
inc
mov
aad
fisubs
and
loopne
adc
test
leave
fs
das
dec
out
lret
adc
lret
out
jo
xor
shrl
sub
fdiv
pop
add
cmp
sub
hlt
rorl
mov
xchg
pop
cmp
pop
sti
adc
enter
and
rcll
mov
outsl
stc
mov
xor
insl
stc
xchg
pop
cld
pushf
icebp
xchg
push
cs
stc
push
pop
cmp
arpl
sub
arpl
aaa
mov
xchg
sahf
ja
adc
or
adc
insb
and
xor
std
lods
push
ja
test
sbb
mov
ja
xchg
rol
aaa
icebp
shrl
rcrb
xchg
pop
xchg
or
stc
push
setge
insb
mov
sti
inc
sahf
and
aam
inc
jae
movb
fidivl
mov
inc
mov
test
sub
adc
or
xchg
sub
and
ret
insb
call
mov
add
test
mov
jne
repz
out
incb
xchg
stc
fiadds
or
adc
aas
pusha
decb
or
mov
inc
es
rcrl
fdivl
int3
les
dec
adc
xchg
pop
xchg
leave
push
in
loop
inc
jbe
in
addr16
mov
pusha
vpcmpgtd
and
cmp
je
adc
cltd
je
cmp
or
and
sbb
mov
mov
xor
push
ljmp
mov
or
jge
adc
xor
mov
and
ficomps
push
pop
pop
mov
inc
lahf
lahf
cwtl
dec
mov
jecxz
js
stc
sub
sub
xor
adc
mov
loope
ja
or
inc
in
add
roll
sahf
ret
jmp
es
sub
xor
jp
push
jmp
cmp
jbe
mov
and
cmp
idivl
repnz
inc
xlat
rol
xchg
mov
arpl
jle
outsl
lods
jge
xchg
popa
xchg
or
pop
repz
pop
adc
pop
mov
imul
std
leave
xor
mov
sarl
sahf
lods
pusha
xchg
mov
imul
pusha
inc
xorl
mov
adc
push
cmp
mov
repnz
lods
cmp
add
and
call
lods
push
push
jnp
mov
mov
xor
leave
sti
testl
les
mov
xor
or
pop
add
mov
push
xor
xor
push
jmp
popf
add
adc
xor
mov
popf
add
dec
je
mov
ret
push
pop
out
cmpsl
add
xchg
bound
cmp
lcall
pop
pop
jb
jno
jne
shrb
sarb
mov
mov
das
or
loopne
adc
mov
push
mov
popf
or
mov
lods
mov
rcr
test
pushf
scas
repz
dec
fildl
fcompl
inc
xor
jno
fdivl
or
mov
push
fcom
int3
cmp
inc
and
inc
loop
and
aas
sarb
in
out
mov
inc
or
cmp
imul
mov
mov
sub
and
lcall
xlat
mov
mov
jnp
mov
test
xor
dec
mov
stc
or
movsl
adc
in
scas
and
inc
xchg
xor
in
dec
movsl
sub
pop
or
hlt
or
rcrl
fiadds
sub
and
mov
pop
adc
mov
test
sub
dec
int
cltd
daa
sahf
movsl
mov
rcr
sub
in
das
enter
xchg
pop
roll
or
notl
or
movsl
aaa
dec
push
std
movsl
fiaddl
daa
adcl
push
pop
push
cwtl
scas
int3
adc
clc
xchg
in
scas
enter
sub
push
movsl
in
scas
int3
repz
mov
xchg
xchg
cli
loope
fsub
pop
jecxz
ret
and
aaa
int3
mov
test
iret
xchg
lret
scas
sarb
lds
hlt
jge
test
mov
imul
xor
into
lcall
and
dec
mov
lea
adc
mov
les
ret
xchg
ret
push
add
sub
dec
xchg
fnstsw
xor
repnz
inc
mov
outsl
or
out
rclb
movsl
in
scas
rclb
sahf
movsl
sub
addr16
jle
sahf
pop
and
mov
in
dec
xchg
xor
push
lea
insl
lock
adc
adc
out
scas
mov
add
pop
stc
mov
test
pop
mov
mov
xchg
aaa
inc
rclb
mov
shrb
ret
idiv
inc
jno
and
popa
jne
adc
jp
sub
cmpsl
fstl
sbb
out
cmpsl
into
popf
mov
pop
cmp
mov
sub
pop
fdiv
mov
mov
stc
in
or
pop
xchg
cmpsb
xchg
test
int
imul
mov
lock
xor
enter
ljmp
push
or
repnz
hlt
push
movsb
mov
sub
jne
hlt
mov
sbb
pop
movl
fistl
jnp
out
data16
nopl
push
ficoml
xchg
scas
cmp
xchg
scas
add
aaa
clc
mov
cmp
hlt
into
push
inc
enter
pop
mov
add
enter
fnstsw
movsl
sub
dec
out
andb
xchg
xchg
stos
stos
bound
rolb
rclb
insl
push
daa
jno
mov
adc
imul
push
test
add
adc
mov
or
cmp
jae
mov
and
adc
outsl
jae
mov
mov
jno
andl
adc
mov
pop
xchg
and
dec
mov
xlat
xchg
scas
or
add
mov
lret
mov
dec
lcall
lret
mov
repnz
stc
pop
fisubl
lret
loop
mov
cwtl
lret
fcmovnu
hlt
popf
cld
jge
and
sahf
movsl
sub
loope
xchg
xor
mov
movsl
pop
xchg
arpl
shrl
inc
lret
in
mov
sahf
xchg
mov
lret
xchg
es
adc
xchg
in
scas
pmuludq
clc
pushf
adc
cld
scas
add
loopne
enter
push
cmpsb
push
xchg
fisttpll
outsl
inc
ret
sahf
rolb
aad
movsl
arpl
rcll
push
scas
fcomi
fisubs
adc
add
ficoms
ret
jne
cli
in
mov
mov
in
lret
push
shl
mov
push
movsl
in
scas
or
mov
scas
mov
lahf
outsb
or
clc
xchg
xchg
xor
xchg
imul
fdivl
jp
jb
dec
roll
insl
out
push
dec
adcl
cmc
fildl
and
adc
jl
fcom
pop
lock
xchg
mov
rcll
movsl
fisttpll
cltd
test
pushf
or
aad
xchg
in
mov
mov
pop
pop
xchg
daa
xchg
inc
sub
stos
dec
outsb
cmc
adc
jecxz
jmp
or
jb
lret
pop
adc
cmp
hlt
js
dec
mov
jno
scas
or
sarl
mov
clc
sub
fwait
adc
les
sarb
lret
stc
fmulp
lods
mov
adc
cmp
in
dec
mov
cs
mov
bound
push
add
jp
or
gs
movsl
test
xchg
in
mov
push
xchg
decl
adc
test
hlt
lods
or
fistl
lret
je
hlt
mov
sahf
testb
push
lret
add
aad
hlt
imul
data16
sbb
lcall
jle
mov
mov
jns
push
push
push
rcrb
loope
xor
addl
pop
mov
add
movsl
pop
adc
mov
dec
lcall
cmp
fmuls
push
fldl2e
or
fidivrs
lods
movsl
scas
mov
push
mov
mov
dec
xchg
push
icebp
pop
cmp
add
das
enter
lretw
mov
movsl
fidivrs
fsubrp
and
lret
pop
adc
mov
mov
pop
mov
jmp
pop
fiaddl
lcall
fdiv
popf
pop
retw
fildll
hlt
movsl
sub
mov
lock
inc
enter
pop
mov
ret
cs
iret
mov
ss
movsl
adc
repnz
hlt
pop
adc
mov
xor
inc
xchg
fldcw
movsl
inc
ja
add
rcll
xchg
out
hlt
loopne
inc
or
mov
movsl
in
mov
les
stos
or
loop
lret
mov
xchg
mov
enter
and
pop
push
xor
inc
or
shll
sbb
outsl
push
sub
mov
idivb
pop
mov
loop
pop
stc
lahf
das
jno
xchg
sbb
loop
lret
or
hlt
pop
pop
rcll
xchg
mov
xchg
mov
sti
hlt
inc
dec
test
lret
mov
add
ss
int3
or
jl
mov
lret
in
out
push
out
jno
add
lea
fdivrs
out
xchg
lods
xorb
pop
sbb
nop
out
or
add
call
or
hlt
cmpsl
fiaddl
fdivrs
pop
push
loope
dec
add
mov
xchg
in
cld
shll
mov
mov
dec
jmp
data16
rclb
xchg
scas
xchg
xchg
insl
add
xchg
in
scas
cwtl
mov
cwtl
cs
dec
mov
hlt
dec
movsl
lds
insb
outsl
or
jb
call
mov
push
repz
adc
hlt
sub
pop
addr16
lods
push
jle
call
mov
loope
fwait
sbb
mov
push
lret
pusha
inc
popa
lds
mov
outsb
aad
movsl
ficomps
jb
jbe
ret
and
movsl
scas
mov
fldl
lcall
fisubs
inc
hlt
dec
push
mov
push
inc
hlt
in
icebp
push
andb
pusha
stos
fidivrs
fcoms
movsl
in
scas
or
xor
xlat
push
mov
movsl
push
mov
test
inc
js
add
sti
cwtl
sub
outsl
fidivs
dec
jae
push
xchg
repnz
jmp
std
inc
mov
adc
mov
imulb
inc
add
jmp
punpckhwd
mov
js
lahf
hlt
lret
xorl
pusha
mov
test
jmp
cwtl
push
pop
shl
push
ret
rcll
mov
test
out
pushf
or
adc
repnz
xchg
in
scas
cwtl
mov
lods
aam
call
pop
fdivrs
lret
inc
icebp
mov
add
mov
arpl
shlb
mov
jno
loopne
inc
hlt
jl
add
lret
xchg
cmpsb
mov
and
push
movsl
in
scas
subb
jb
push
mov
inc
insl
icebp
adc
push
fcom
cmp
and
cltd
cmp
test
in
push
popa
inc
mov
pop
mov
cld
mov
add
adc
mov
scas
mov
cli
aam
mov
push
movsl
mov
call
call
push
mov
movsl
sub
imul
mov
test
push
lret
xchg
jno
icebp
mov
cmpl
js
jb
xor
aad
mov
push
movsl
cmp
mov
lds
dec
test
xor
add
loop
loope
add
out
mov
lret
or
loope
arpl
add
mov
movsl
cmp
fsubs
movsl
fisubrs
loopne
loope
mov
rolb
lods
in
pop
imul
fdivrp
sub
push
inc
mov
pop
adc
mov
or
shll
push
movsl
in
scas
lahf
nop
sti
out
int
xchg
xchg
das
inc
jns
cmp
mov
inc
lret
push
jecxz
cmpsb
mov
mov
bound
pop
cmpsl
test
mov
push
mov
lock
pop
and
or
inc
dec
add
hlt
lret
pop
fdiv
scas
rol
xchg
sub
test
inc
arpl
sub
or
in
xchg
imul
mov
je
push
call
jl
mov
das
lret
hlt
xchg
adc
add
cwtl
xchg
in
scas
subb
mov
xchg
js
mov
shll
xchg
xor
rolb
cmpsb
shrl
mov
mov
mov
insl
jg
movsl
inc
ds
hlt
imul
mov
mov
cmp
lret
pop
loop
or
rcrl
pop
mov
or
adc
sahf
int3
inc
insl
bound
leave
addl
mov
in
adc
movsl
cmp
push
and
movsl
scas
mov
jp
dec
movsl
adc
mov
xor
inc
mov
pop
adc
mov
or
repnz
xor
adc
and
push
movsl
in
scas
xchg
xor
mov
jns
loop
mov
test
adc
or
outsl
sbb
nop
outsb
or
movsl
stc
hlt
or
mov
and
addl
cs
lds
ret
add
mov
movsb
push
lret
push
inc
hlt
mov
push
movsl
cmp
mov
mov
or
clc
out
cmp
push
fdivrl
xchg
push
arpl
scas
or
clc
or
mov
xchg
movsl
add
scas
dec
add
insl
push
push
out
or
add
dec
push
jl
push
xlat
arpl
arpl
ror
negb
xchg
call
fisubrl
lret
fsubl
loopne
in
scas
mov
cmp
add
lret
push
je
jno
arpl
inc
sub
mov
push
mov
fwait
xor
aam
adc
hlt
push
xchg
loope
mov
xchg
in
scas
mov
jne
notb
sahf
sti
test
sbb
lock
fmulp
mov
sbb
jge
repnz
xchg
lds
mov
or
mov
xchg
mov
pop
push
mov
hlt
sbb
or
into
in
lret
je
mov
add
push
fcompp
xchg
dec
movsl
jae
xchg
roll
add
fidivrs
and
cmc
xchg
mov
aad
lret
test
mov
dec
enter
xlat
mov
inc
mov
mov
sub
aam
int
adc
mov
mov
mov
rcrb
test
stos
mov
enter
inc
icebp
loopne
popa
mov
movsl
scas
mov
xchg
mov
xor
jecxz
push
mov
out
movlps
in
scas
xchg
test
lret
adc
push
fs
and
call
sub
sbb
inc
push
lock
cmp
and
orb
fs
sub
imul
or
push
push
mov
subl
push
jb
fdivl
out
and
lcall
and
lock
xchg
xchg
in
movsl
sub
jl
xchg
fdiv
daa
jbe
mov
in
ljmp
test
loop
in
int
mov
xchg
pop
inc
in
test
and
pop
or
sub
movsl
sub
mov
pusha
in
or
mov
push
call
mov
or
fs
hlt
loope
mov
fnop
dec
movsl
repnz
cmpsb
pop
mov
mov
pop
push
cmp
push
xor
movsb
call
push
lret
push
fs
es
mov
movsl
pop
adc
mov
pop
ja
mov
xchg
xchg
arpl
in
mov
sub
inc
add
xchg
jb
mov
repnz
xchg
in
scas
push
hlt
and
test
pushf
adc
mov
xchg
addr16
repnz
enter
mov
stc
and
jno
xlat
push
ret
and
lret
pop
adc
cmp
pop
movsl
mov
xchg
in
scas
xchg
mov
out
and
cwtl
movsl
sub
jge
and
push
or
mov
cli
adc
sub
jge
lret
stos
jg
mov
gs
lcall
movsl
movsl
stc
rorl
hlt
jno
rcll
dec
adc
roll
mov
cmpsl
out
roll
not
push
lret
inc
xchg
pop
jb
jge
or
or
ja
xchg
fistpl
jno
neg
inc
jno
xchg
test
imul
pushf
in
movsl
sub
jmp
lock
inc
in
xlat
cmp
loopne
mov
testl
xchg
testb
jge
sub
add
shl
test
mov
adc
movsl
scas
mov
neg
sbbl
add
movsl
scas
sbb
sub
test
cs
mov
hlt
push
inc
and
mov
cli
xchg
lret
mov
push
xchg
insl
mov
movsl
stc
aad
inc
add
ret
sahf
mov
push
inc
stos
hlt
push
xchg
xchg
mov
ret
lds
cmp
xor
inc
mov
pop
adc
hlt
mov
sarb
popf
push
adc
mov
cmp
cwtl
add
pop
loopne
fs
imul
mov
lret
ljmp
fisubrs
movsl
movsl
stc
jno
xor
mov
ror
data16
mov
inc
lret
pop
adc
test
mov
movsl
loop
xchg
test
jae
or
in
lds
popf
orl
mov
pop
mov
push
add
lret
adc
test
cmpsb
out
faddp
adc
andb
push
movsl
in
scas
push
hlt
xor
lcall
inc
inc
shrb
fcoml
fdivs
in
out
cmpl
das
lret
fiadds
pop
mov
movsl
cmp
outsb
add
ja
and
mul
repz
pop
lds
lret
inc
icebp
stos
push
jno
shlb
jge
scas
stos
pop
scas
shrl
pop
nop
repnz
add
cli
hlt
addr16
movsl
adc
fildll
stos
lret
pop
addr16
hlt
cltd
mov
cmp
movsl
sbb
sub
sbb
in
das
enter
out
js
cmp
jecxz
lret
cwtl
pop
leave
pop
iret
mov
lret
push
lret
jbe
or
sbbb
cmp
leave
or
adcl
adc
push
add
mov
push
pop
add
xchg
pop
adc
hlt
outsb
lods
loop
adc
push
movsl
in
scas
repnz
adc
mov
mov
mov
adc
addr16
pop
lods
lods
popa
pop
add
flds
in
popa
out
mov
adc
movsl
in
scas
rcr
imul
aam
mov
popf
mov
add
fdivrl
movsl
stos
scas
gs
xchg
mov
stc
or
mov
pop
push
inc
add
icebp
stc
pop
mov
push
dec
jae
les
adc
lock
ficomps
cli
push
add
pop
gs
fmul
mov
inc
mov
pop
call
pop
ja
mov
lret
fs
int
adc
jmp
add
aaa
sti
fadd
sbb
inc
outsl
call
add
arpl
sarb
adc
jge
lock
xchg
test
cwtl
pop
mov
hlt
adc
dec
sub
mov
fldenv
call
mov
int
inc
cmp
insl
pop
push
dec
xchg
adc
gs
scas
mov
stc
mov
movsl
repnz
xchg
mov
in
mov
jle
outsb
hlt
hlt
lods
push
mov
lret
jmp
or
ficomps
out
or
add
lret
clc
xchg
test
adc
jnp
push
rcr
cmp
xor
xchg
xchg
dec
iret
mov
push
loope
scas
xor
sub
pop
pop
mov
lret
push
xchg
loop
push
fsubp
push
or
push
lret
rorb
lcall
push
ljmp
in
das
enter
adcl
add
push
pop
sub
or
pop
mov
inc
test
out
ficomps
pushf
sbb
adc
jae
push
movsl
in
scas
int3
xchg
or
test
xchg
dec
movsl
repnz
xchg
scas
rcl
pop
jbe
mov
jo
or
das
orb
mov
icebp
pmaxub
cmpsb
push
movsl
cmp
mov
lds
xchg
test
call
movsl
stc
jnp
add
push
stos
add
cld
mov
jno
jae
popf
mov
rclb
std
push
dec
xor
popa
rcrl
inc
aad
cmp
push
and
fsubrs
xchg
shrb
test
cmp
popa
or
xor
jne
rcr
dec
movsl
bnd
xchg
cmc
in
out
pop
sub
mov
mov
test
lret
push
dec
adcl
push
lret
dec
adc
cmp
movsl
scas
adc
mov
push
xchg
faddl
test
popa
pushf
in
xchg
adc
into
gs
iret
and
push
movsl
scas
mov
call
cwtl
fidivrl
mov
ljmp
lcall
xor
popa
jge
push
lea
push
lret
mov
push
pop
xlat
insb
mov
add
mov
pop
insb
inc
loopne
hlt
jecxz
mov
das
enter
or
les
dec
movsl
repnz
sbb
jmp
push
dec
or
mov
movsl
sub
in
in
pushf
add
sahf
jle
insb
movsl
lods
sub
lret
das
leave
out
popf
fiadds
movsl
movsl
stc
icebp
jb
in
pop
xchg
jns
push
lods
in
inc
xchg
add
sahf
in
cmc
mov
and
cli
movsl
scas
lods
clc
xchg
hlt
sub
cltd
or
stc
movsl
fsubrl
xchg
lods
add
pop
sub
fstps
gs
das
push
mov
out
inc
and
jne
in
mov
cltd
hlt
or
adcb
or
mov
inc
aas
add
add
sti
xchg
rorb
stos
cwtl
es
jnp
into
std
push
icebp
sahf
rolb
mov
imulb
mov
and
inc
test
mov
int3
sub
icebp
inc
xor
cmpsb
test
pop
test
enter
gs
stos
jae
adc
sub
repnz
cltd
fwait
mov
sbb
adc
shrl
sub
mov
enter
movsb
pop
lods
mov
sub
jmp
cmc
fldcw
or
aad
jge
add
popf
push
hlt
mov
ss
popf
lock
push
mov
inc
push
lret
aad
call
mov
cmp
and
ficompl
push
push
push
test
add
stos
mov
test
mov
into
add
loopne
xchg
test
adc
pushl
pop
xchg
adc
lods
pushf
inc
or
imul
js
inc
mov
xchg
or
cmp
jo
fisttps
mov
loopne
sub
gs
ja
jp
iret
mov
iret
mov
std
stos
add
shlb
jbe
cmp
jnp
push
sub
adcb
add
out
mov
in
test
mov
icebp
movsl
adcb
mov
sub
imul
rcr
push
out
test
enter
mov
test
adc
mov
mov
jne
mov
or
cmc
adc
lods
and
xchg
cmp
mov
in
loop
mov
sbb
std
call
les
out
cmp
roll
pop
inc
sbb
sbb
inc
sub
out
and
xor
jne
fcoms
nop
xchg
gs
fdivrl
and
xor
call
sbb
pop
xor
insb
sbb
int3
or
stc
xor
xor
cltd
xchg
mov
cmpsb
mov
xchg
add
ds
or
jb
cmpsl
fucomp
mov
xchg
mov
subl
inc
stc
mov
fmul
adc
data16
add
mov
sbb
mov
test
aam
mov
xchg
pop
jle
sbb
xor
shld
les
out
fmull
fst
repnz
inc
push
xchg
hlt
or
add
js
dec
lds
xchg
aam
js
dec
add
stc
fdivrs
mov
cmpsb
mov
enter
cmc
sub
js
les
lods
std
test
out
les
test
outsl
ds
fnstsw
in
mov
les
pop
cmp
cmp
scas
inc
enter
inc
loop
in
in
shrl
mov
cmp
add
es
xchg
out
sub
out
jbe
les
int3
sub
fstpl
mov
or
dec
shlb
inc
xchg
xlat
stc
decl
push
jnp
out
xor
call
in
lods
push
pop
aas
and
jge
xchg
dec
stos
mov
icebp
cld
cmpb
pop
sub
es
mov
loopne
add
push
test
mov
stc
jmp
scas
in
rcll
sub
push
popa
xor
je
add
jecxz
pop
add
fcoms
or
mull
pop
pop
or
es
aad
lods
push
adcb
jmp
shlb
or
add
fcomip
sub
inc
mov
call
adc
out
repnz
rcrb
aad
xlat
notl
in
les
and
les
fwait
popl
xor
pop
jmp
nop
idiv
add
test
int3
xchg
mov
stc
jae
or
push
mov
or
jae
popf
pushf
xchg
jge
push
xlat
push
hlt
das
push
sub
mov
orb
fdiv
gs
pop
inc
inc
and
jmp
outsl
or
mov
hlt
xor
das
ss
mov
add
nop
cmc
nop
out
repnz
jmp
test
xor
jae
rolb
dec
mov
sub
xchg
and
fstpl
adcb
icebp
int
testb
loop
add
shl
sub
sub
daa
notb
dec
lock
das
add
push
test
fsubl
test
rcr
fisubrs
stc
cld
les
jnp
je
cld
pop
dec
scas
mov
adc
pop
push
pop
xchg
sub
sbb
push
xchg
dec
jnp
xchg
daa
cli
and
fdivp
dec
jnp
sub
enter
cmp
dec
mov
jp
mov
mov
pop
cmp
mov
jne
ret
push
int
xchg
in
aad
or
shrb
mov
or
adc
and
popa
fldenv
mulb
or
pop
push
negl
sbb
hlt
mov
movsl
cld
icebp
call
cld
sbb
or
lret
mov
push
fnstenv
pop
xchg
mov
test
add
adc
lods
das
aad
mov
cltd
sahf
test
mov
mov
aad
vpcmpeqw
mov
test
gs
sub
adc
xchg
lds
ds
adc
xchg
mov
mov
add
lret
cltd
pop
push
cmpsl
mov
fists
push
and
enter
adc
add
jne
dec
fdivrp
pop
ljmp
add
aaa
sbb
mov
mov
adc
leave
std
push
mov
or
mov
dec
sbb
or
ja
in
mov
lret
nop
popf
dec
xchg
sbbl
jo
mov
hlt
jg
idivb
stos
call
mov
mov
dec
adc
popa
aam
push
mov
popa
int3
test
ljmp
pushf
add
pop
sub
test
cwtl
add
xchg
lea
out
test
test
pop
mov
js
sub
imul
xchg
test
mov
inc
popa
test
sub
and
and
add
xchg
test
mov
xchg
nop
ret
mov
lock
hlt
fxch
mov
sub
xor
inc
inc
cltd
loopne
mov
mov
arpl
mov
loope
repnz
mov
push
cwtl
into
daa
inc
inc
mov
std
mov
mov
in
scas
or
push
movsl
add
cltd
test
or
popl
das
push
dec
add
loope
cmp
enter
ss
xchg
sbb
add
dec
mov
mov
xchg
inc
aas
movsb
enter
lret
scas
lds
idivb
loopne
repz
xor
and
push
aam
ret
subb
add
cli
jmp
ret
and
push
adc
and
gs
pop
mov
mov
andl
cli
add
stos
mov
shr
xchg
roll
pop
aam
or
rolb
incl
les
arpl
andl
stos
imul
sub
or
arpl
or
or
cmpsl
mov
js
and
jns
ret
adc
hlt
push
xchg
add
shll
popf
test
out
adc
shl
mov
sbbb
add
mov
mov
sub
test
adcb
push
icebp
mov
push
dec
ljmp
rcll
mov
outsb
add
mov
dec
sahf
push
ret
jle
adcl
and
ror
dec
mov
mov
out
inc
sub
add
or
mov
mov
or
pop
add
outsb
mov
aas
add
call
mov
subl
jbe
jmp
addl
cltd
popa
adc
pop
jnp
and
std
jg
cld
mov
or
mov
iret
addl
or
mov
lods
pop
rorb
out
xchg
outsb
icebp
popf
lcall
aas
xchg
arpl
push
cwtl
xchg
repz
les
lds
bound
mov
inc
int3
mov
or
jle
stos
lods
hlt
jle
aad
sbb
test
jge
xchg
xchg
idiv
inc
sub
xchg
dec
or
loopne
mov
cli
sub
lea
repnz
add
mov
outsl
das
stc
push
ja
mov
pop
xor
adc
aaa
dec
mov
mov
xlat
je
jbe
hlt
push
add
inc
stos
mov
add
sbb
push
mov
lgs
push
fdiv
mov
shlb
add
in
fldcw
xor
adc
add
xchg
sti
inc
xchg
mov
add
hlt
cli
xchg
ljmp
in
adc
and
add
cmp
sub
fidivs
jns
push
jle
mov
iret
mov
mov
mov
enter
jne
ret
jge
daa
jl
xchg
dec
test
jb
mov
dec
popa
push
hlt
stos
jmp
add
mov
movsb
adc
xchg
mov
cld
mov
leave
and
xor
icebp
ror
xchg
mov
rolb
icebp
loope
movsb
xchg
cwtl
push
loopne
aaa
or
sub
aad
les
hlt
mov
and
addl
sti
mov
mov
inc
and
mov
icebp
scas
imul
test
mov
mov
popa
add
dec
or
xchg
fisubl
mov
and
xchg
cwtl
add
adc
or
rolb
out
icebp
dec
sub
test
sub
in
mov
pushf
dec
stos
adc
mov
test
mov
xchg
fadds
sbb
dec
mov
xchg
add
test
or
mov
movsl
dec
lods
xchg
mov
mov
rcll
in
xchg
hlt
mov
xchg
xchg
cwtl
movsb
lahf
dec
test
les
mov
xchg
fisubs
jno
xchg
or
fcomp
out
mov
xor
or
add
add
lret
xchg
or
mov
add
fsts
xchg
icebp
mov
movsb
repnz
inc
mov
sahf
or
or
dec
add
mov
cltd
pushf
and
iret
xchg
xlat
movsb
loopne
out
out
mov
mov
xchg
dec
mov
cwtl
dec
or
mov
mov
movsb
jge
add
movsb
in
in
add
adc
push
or
add
enter
add
add
loopne
add
pop
mov
test
ljmp
push
je
arpl
int3
jae
mov
sub
xchg
lcall
test
in
mov
fldl
xchg
mov
add
jecxz
ja
call
jne
or
out
mov
and
out
lods
inc
fs
mov
arpl
pop
orb
mov
inc
ja
jne
pop
lock
push
aaa
push
sbb
jge
into
jl
cmpsl
fildl
mov
xchg
push
push
mov
movl
shrb
sub
lds
push
insl
lods
mov
jge
xchg
icebp
flds
push
cmpsb
mov
inc
adc
cmp
idivb
rorl
fildl
add
adc
mov
repnz
cmp
sbbb
clc
jge
mov
test
out
out
in
mov
mov
into
call
adc
pushf
jl
push
mov
jmp
pop
in
sub
in
dec
xor
pushf
stos
fisttpll
cwtl
xchg
push
js
inc
push
movsl
mov
idiv
cltd
push
inc
clc
inc
push
cmp
jno
jne
sub
cwtl
shl
mov
nop
pop
ljmp
xchg
loope
mov
mov
in
xchg
inc
data16
fistpll
push
lods
inc
int
test
push
shll
add
stos
imul
ljmp
testb
and
or
xchg
add
cmp
xchg
jne
maxps
sub
adc
jg
add
mov
and
cmc
add
sub
push
add
jecxz
dec
test
add
rorl
push
les
or
sbb
mov
inc
jecxz
int
add
xchg
jne
sub
add
popf
shl
xor
aad
int3
fiadds
xchg
imul
lock
ss
mov
dec
subl
stos
into
jbe
and
es
enter
fcompl
pop
or
lds
cmp
test
lcall
sbb
add
sarl
aaa
lcall
addr16
inc
jecxz
into
cwtl
inc
cmp
push
ficompl
or
std
insl
sti
adc
call
loopne
mov
xor
mov
xor
test
dec
and
hlt
add
pop
rorl
xchg
mov
adcb
test
xchg
lods
jg
mov
sahf
push
push
inc
jmp
insb
inc
mov
inc
mov
dec
xchg
inc
pop
dec
lds
lret
mov
lcall
outsl
and
sbb
stc
xchg
push
repnz
adc
xor
sbb
add
xor
loopne
mov
in
jge
fs
repnz
cmp
ret
nop
add
fadds
rorb
idiv
or
iret
jecxz
mov
gs
pop
jge
and
ret
mov
xchg
test
mov
inc
cmpsl
jns
xchg
movsl
push
mov
pinsrw
test
adc
fwait
nop
leave
hlt
daa
fsubrs
out
out
or
mov
decl
add
test
mov
inc
shll
jnp
cld
cmpsb
push
popl
in
movsl
xchg
repnz
arpl
into
setle
adc
mov
cld
xchg
sbb
mov
cmp
pop
sub
sbbb
fsubs
push
inc
daa
push
mov
out
test
pop
mov
out
xchg
xor
mov
outsb
imul
or
mov
mov
add
adc
insb
ret
jle
popa
outsb
test
test
sbb
adc
sub
sbb
test
and
fs
data16
ljmp
divb
jmp
hlt
int
loop
jbe
and
mov
cmp
pop
ret
inc
jg
scas
nop
mov
mov
mov
xchg
pop
hlt
xchg
hlt
pxor
movsb
in
cmpsb
leave
roll
xor
xorl
inc
inc
pop
cltd
les
daa
ror
ret
pop
and
adc
rcll
add
iret
xor
leave
cld
popa
inc
cld
sbb
gs
xchg
imul
xchg
mov
roll
inc
scas
or
xor
sub
pop
ret
cmp
cmpl
mov
movsl
mov
or
test
and
pop
in
mov
add
jl
xchg
add
cmp
hlt
std
fstps
rcrb
ret
les
pop
fisubs
int
mov
popf
repz
iret
push
repnz
leave
mov
push
pop
xchg
insb
pop
stos
push
add
mov
jmp
aaa
pop
ljmp
mov
dec
sub
or
bound
hlt
mov
xcrypt-ecb
cmpsl
mov
je
jnp
lock
cwtl
sub
inc
sub
jnp
jmp
jne
lcall
inc
testl
and
sub
int3
sub
into
push
sub
or
sbb
push
loopne
dec
sub
sbb
jle
mov
mov
sahf
or
mov
movsb
inc
dec
call
and
fmuls
lods
incb
ret
lods
push
or
movsb
mov
stos
popa
nop
sbb
mov
cwtl
add
cmp
mov
jg
xchg
push
orl
xchg
cmpsl
adc
icebp
mov
cmpsb
dec
and
xchg
daa
dec
push
scas
out
in
pop
cmpsb
arpl
mov
pop
cmc
mov
inc
stos
inc
cmc
sbb
aas
dec
inc
mov
mov
movsb
out
shll
jns
enter
dec
iret
add
mov
xor
push
and
popf
pop
or
aam
adc
add
pop
jns
pop
out
scas
xlat
or
push
jno
add
cmp
enter
not
pusha
neg
jmp
not
bswap
pop
pusha
sets
movsbl
movzbw
mov
pusha
call
inc
sub
xchg
test
jp
pop
and
xor
data16
cmp
cmp
pop
add
sahf
sbb
cmp
call
cwtl
mov
add
xchg
ss
ja
imul
addr16
add
mov
scas
dec
rcr
nop
push
jg
call
popf
shll
pop
scas
pop
mov
fisttpll
adc
sbb
movsb
push
mov
mov
mov
lcall
fs
call
jmp
dec
push
push
inc
push
dec
xor
inc
dec
dec
add
add
cs
lea
test
stc
stc
bt
add
pusha
call
mov
pop
sbb
inc
ss
lds
stc
xchg
stos
stc
adcl
add
or
fsubs
ljmp
and
ja
inc
lods
insl
loopne
or
fcmovb
push
xchg
enter
mulb
ljmp
jo
pusha
lcall
pop
adc
out
mov
cmp
std
xchg
cmc
scas
icebp
xchg
in
cmc
lahf
adc
push
clc
adc
jbe
in
movsl
insb
or
cmpl
les
mov
jne
cmp
jae
sub
and
pusha
cs
mov
pop
outsl
movsb
lcall
xchg
mov
incl
cmpsl
and
mov
fwait
xor
pop
rcrl
loopne
cmpsb
cmp
int
ficomps
push
fcomps
arpl
pop
push
rolb
push
mov
pop
dec
or
push
cmpb
dec
pop
dec
rcl
outsl
std
enter
loop
test
imul
lea
push
adc
pop
add
sub
adc
pop
test
xchg
add
lret
pop
insb
adc
xchg
xor
inc
cmp
int3
fildll
or
xchg
and
in
xchg
hlt
mov
aam
sbb
mov
std
gs
adc
out
push
ljmp
jg
mov
div
mov
pop
call
loop
cmp
mov
mov
popa
xchg
into
sbb
mov
and
fnstsw
mov
and
adc
xor
sbb
orl
mov
test
add
sar
mov
shl
shr
mov
cmc
pusha
sub
movb
stc
jmp
inc
ds
mov
test
xchg
rcrl
leave
mov
cmc
ljmp
jle
jl
mov
aad
push
cmpsl
adc
dec
sbb
sbb
xchg
sub
sub
sub
data16
loopne
les
dec
shrb
cld
jp
lcall
add
pop
gs
sar
xlat
out
rep
divl
leave
hlt
push
sbb
lret
fdivl
stos
adcl
pop
mov
xor
xor
sbb
cmp
dec
adc
cmp
lods
jg
pop
jmp
push
push
nop
and
es
sub
fstl
push
nop
lcall
aam
pop
es
scas
mov
pop
imul
mov
xor
cmpsl
cmp
jnp
gs
test
int3
cmpsb
dec
jp
pop
dec
cmp
cltd
call
push
push
pop
bound
cmpsl
dec
mov
lahf
out
mov
sub
cmpsb
xor
lods
pop
cmpxchg
incl
inc
xchg
sub
insb
sbb
call
rolb
data16
xchg
cmc
arpl
outsl
fnstsw
push
std
jnp
pop
aad
arpl
jmp
dec
and
movsl
mov
cmp
lcall
jne
cli
pushl
jbe
pop
jl
pop
and
jge
dec
sub
popa
daa
inc
lret
pop
push
fst
rcrl
jp
into
je
arpl
bound
sub
add
sti
jmp
adc
insl
dec
pop
push
ljmp
push
out
sbb
push
cmp
nop
out
inc
repz
iret
mov
mov
cmp
cmp
ss
mov
push
xchg
int3
bound
adc
decb
cwtl
sbb
std
dec
out
xor
push
mov
mov
std
pushf
xor
and
xor
cld
ljmp
les
xchg
imul
sbb
xor
mov
dec
out
mov
sub
pop
int3
pop
test
and
sub
inc
rcll
aad
lds
mov
xchg
out
imul
test
je
data16
popa
pop
iret
mov
insb
out
outsb
push
out
sub
imul
jno
imul
fcmovnb
mov
fwait
sbb
cmpsb
jnp
add
rcrb
lret
les
push
jb
sbb
adc
dec
lahf
xlat
mov
js
fcomip
mov
cmpb
sar
mov
or
stc
stos
inc
call
adc
adc
mov
xor
and
pop
mov
jg
ds
popa
sti
popa
xor
aaa
inc
das
xchg
inc
dec
into
fcompl
jb
pop
dec
push
cmpsb
jns
std
out
or
push
mov
es
popf
int3
add
adc
lret
inc
sub
sti
nop
xchg
es
pushf
jmp
xor
fbld
mov
std
mov
sub
sbb
int3
mov
sbb
scas
sub
dec
repnz
cld
out
rol
sub
fsts
mov
mov
and
stos
pop
stos
cmp
aas
xor
ror
mov
movsb
movsb
scas
adc
test
inc
es
fstps
rcr
inc
push
clc
dec
out
andb
pop
out
mov
sbb
pop
jle
sbb
fisttps
xchg
jmp
es
loop
out
lods
fisubrl
jnp
mul
icebp
mov
xchg
add
push
inc
xor
jge
cmc
fcompl
adc
mov
jnp
lret
in
in
popf
imul
faddl
hlt
popf
ljmp
mov
jl
in
sti
pop
popa
push
pop
pop
inc
sbb
dec
out
notl
jge
push
call
fadd
int3
jmp
and
arpl
in
es
repz
imul
jle
push
cmp
xchg
xorb
xchg
pop
jae
jnp
dec
xor
addr16
test
insl
mov
pop
mov
jmp
jmp
lds
push
jle
inc
cmp
cmc
out
cltd
das
adc
mov
lcall
mov
xchg
add
sti
cld
aad
insb
push
lods
cmp
orb
add
sbb
cmp
adc
and
sub
xor
mov
lret
mov
xchg
cmp
rcll
xchg
insl
enter
daa
cwtl
out
enter
imul
in
stc
arpl
sub
dec
in
pop
dec
or
cli
xchg
mov
lods
mov
mov
jns
arpl
xor
xchg
mov
push
adc
loop
loop
bnd
push
out
rolb
insb
lcall
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
xchg
into
lods
sbb
mov
mov
fs
je
js
dec
es
add
aam
inc
or
icebp
xchg
mov
loope
adc
sar
mov
imul
xchg
cmp
add
mov
dec
pop
mov
rorl
dec
loopne
jae
push
dec
inc
mov
sub
pop
mov
push
les
popa
xlat
dec
pop
imul
test
mov
test
mov
adc
cmc
inc
sub
xor
scas
scas
popf
repz
testl
add
push
mov
imul
lret
xchg
je
dec
sahf
enter
negl
push
int3
push
mov
mov
gs
iret
retw
xchg
insl
enter
jmp
inc
out
loop
pop
arpl
popa
xchg
lds
ds
xor
stos
sar
push
inc
sub
fimuls
inc
loop
ret
inc
ret
and
pushl
lea
je
pushf
lea
jmp
stos
push
pushl
lea
jmp
push
lea
jne
sbb
clc
mov
cmc
call
movsbw
pop
lea
pop
movzbw
pushf
mov
push
not
lea
mov
pushf
pushf
push
mov
pushl
ret
push
pusha
call
cmp
pusha
jmp
pushf
popl
mov
pushf
push
mov
pushl
popl
mov
lea
jmp
push
call
cwtl
pushf
bt
cmp
push
sub
pushf
mov
mov
push
mov
lea
jmp
movsbw
mov
add
add
jmp
xor
dec
cmp
mov
clc
cmc
cmp
cmp
sub
pusha
push
jmp
shr
clc
setle
and
test
shld
mov
stc
jmp
push
sub
pushf
xchg
pushf
jmp
pushf
mov
cmc
jmp
jmp
add
sub
xadd
mov
shl
call
push
call
push
mov
pusha
push
pushf
mov
lea
jmp
and
sub
not
mov
call
pusha
call
jmp
mov
test
cmc
jmp
push
pusha
xchg
call
call
jmp
pusha
movb
call
movsbl
mov
cld
pusha
jmp
setno
mov
push
push
push
push
mov
jmp
pusha
pusha
pushf
mov
movb
lea
jmp
pushf
call
bswap
dec
pushf
bsf
mov
ror
mov
cmc
pushf
add
pusha
call
push
mov
jmp
mov
pushf
mov
mov
movw
lea
jmp
mov
pusha
pushf
pushf
mov
lea
jmp
cmc
lea
pusha
stc
test
bt
neg
pushl
pusha
call
mov
push
mov
call
call
sub
jae
pusha
sub
push
pushl
mov
lea
jmp
neg
xor
add
movsbw
seta
mov
test
pusha
cmp
pusha
shl
pushf
mov
shr
bt
stc
cmp
or
bt
cmc
xor
jmp
jmp
mov
pushl
pushl
add
mov
call
pushl
call
pushl
popl
movb
pushf
mov
lea
jmp
cwtl
setbe
lahf
mov
movzbw
mov
pusha
movl
movw
pusha
divl
pushf
movb
pushf
mov
jmp
call
lea
je
mov
pushf
lea
jmp
call
pushf
pushl
mov
jmp
bt
add
mov
pusha
sub
clc
push
cmc
add
movb
pusha
pushf
popl
lea
je
pushf
pushl
popl
pushl
lea
jmp
push
pushf
pusha
mov
movb
pushf
push
lea
jmp
jmp
cmc
add
push
pusha
cmc
shrd
pushf
pushf
mov
mov
jmp
call
aas
and
push
ror
mov
cmc
mov
call
pusha
pushl
mov
jmp
call
pusha
bt
add
pushf
shld
mov
call
xor
mov
test
stc
add
push
jmp
call
movsbw
clc
setae
mov
shl
pop
sbb
btr
pop
std
ror
pop
std
call
mov
push
call
pusha
mov
mov
lea
jmp
clc
cmp
pushf
add
pushf
test
push
mov
add
push
mov
jmp
lahf
push
jmp
pusha
mov
pusha
lea
jmp
mov
call
jmp
shl
sub
mov
pushf
xchg
clc
movb
add
test
neg
pushl
jmp
test
bswap
test
add
call
pushf
popl
pushf
mov
push
pushl
popl
push
push
pushf
pushl
lea
jmp
push
mov
pushf
mov
movb
mov
push
pushf
pushf
lea
jne
rcl
and
mov
cmp
and
push
jmp
call
sub
shl
movzbl
clc
xor
push
add
cmc
ror
bt
cmc
jmp
cmp
clc
cmp
call
stc
call
bswap
add
xchg
mov
stc
lea
movsbw
push
dec
xor
neg
btc
add
pushf
ror
bswap
rcl
cmp
add
pusha
btc
not
xor
btc
mov
pushf
pushf
add
pushf
mov
pushf
pushf
lea
jmp
sub
cmc
sub
pushl
mov
pushf
push
movb
lea
jmp
pushf
bt
neg
stc
clc
test
sub
push
clc
mov
pusha
clc
cmp
add
jo
sub
call
push
stc
pushl
popf
pushl
movw
pushf
lea
jmp
test
push
mov
stc
clc
add
pushf
pusha
pushf
lea
jmp
pusha
movb
mov
mov
push
mov
lea
jmp
movb
movb
dec
stc
jmp
btc
adc
xor
mov
sbb
mov
jmp
setns
setnp
bswap
push
mov
shl
not
movsbl
not
mov
bt
not
bt
stc
not
test
and
pushf
call
pushf
popl
pushf
jmp
xor
xor
push
shl
add
stc
neg
jmp
mov
jmp
aas
mov
push
call
neg
jbe
not
mov
ror
mov
push
call
mov
mov
pusha
pushl
push
pushl
lea
jmp
cmp
cmp
test
add
pushf
pushl
mov
pusha
lea
jmp
jmp
mov
mov
lea
jmp
pusha
mov
lea
pushf
call
shr
aaa
or
mov
sub
push
mov
test
call
mov
mov
movb
mov
lea
jmp
pushf
mov
pusha
mov
call
pushf
mov
pushf
pushf
lea
jmp
pushl
popl
mov
movb
movb
lea
jmp
jmp
inc
adc
call
not
pusha
not
bt
sub
cmp
push
cmp
test
and
pushl
mov
pushf
jmp
stc
jmp
pusha
pushl
popl
pushf
lea
jmp
pushl
jmp
movsbw
mov
pushf
call
movb
add
jmp
bt
xor
stc
jmp
not
repz
popl
bts
sar
add
cmp
mov
sets
ror
btr
mov
dec
setno
sbb
shl
mov
bt
mov
xadd
xadd
dec
xchg
movw
mov
pop
pushl
popl
pushf
add
movl
bts
mov
adc
sbb
sub
sbb
bswap
xadd
cmc
not
shr
shl
pusha
xadd
add
push
cmc
dec
add
lea
clc
xor
dec
shr
sub
push
pop
sub
add
mov
push
or
bswap
mov
clc
call
pushl
jmp
clc
and
movzbw
and
mov
clc
sub
push
pushf
mov
pusha
lea
jmp
lea
jne
cmp
test
sar
xorb
pusha
call
jmp
mov
rol
test
mov
cmc
clc
add
pusha
mov
movb
movb
lea
jmp
cld
pushf
rep
shl
movzbw
shr
shl
mov
push
sbb
clc
mov
bt
jmp
movw
xchg
pushf
call
pusha
lea
jo
push
mov
pusha
mov
mov
lea
jmp
lea
je
pusha
mov
pushf
lea
jns
pushf
push
pushl
popl
pusha
lea
jmp
pushl
mov
movb
push
push
pushl
ret
rol
movzbl
pusha
sub
call
mov
movw
push
mov
lea
jmp
bt
jmp
pushf
test
pusha
add
call
pushl
pushl
mov
call
clc
xchg
pushf
add
clc
test
bt
lea
stc
bt
bt
cmc
neg
pushl
xchg
call
jmp
adc
bt
test
cmc
notl
bts
mov
pusha
sub
mov
cmc
stc
and
jmp
movzbl
mov
sbb
mov
clc
sub
bt
shl
pushf
pusha
jmp
lea
mov
cmp
add
pusha
pushf
lea
jmp
jmp
dec
stc
jmp
shld
mov
jmp
rcr
aaa
stc
mov
bt
cmp
sub
push
pushf
movl
pusha
mov
push
pushf
movw
lea
jmp
pushf
popl
pushf
pushl
popl
movb
lea
jmp
mov
push
pushf
mov
pushf
popl
push
pushf
pushl
popl
push
movb
lea
jmp
pushf
test
stc
pushl
popl
bt
push
add
pusha
cmp
jmp
sub
pushf
test
cmpl
lea
jb
pusha
mov
pushl
call
pusha
pushf
popl
jmp
sub
pusha
bt
bt
pushf
shr
call
push
decl
push
mov
call
push
call
mov
pushf
lea
jmp
xor
shr
push
setne
mov
not
mov
bt
pusha
mov
sub
cmc
test
shr
pusha
pushf
mov
mov
call
shl
setno
bt
inc
mov
call
pushf
pushf
mov
mov
lea
jmp
pushf
pushf
popl
pusha
push
mov
pushl
popl
push
pushf
lea
jmp
aas
mov
pushf
sar
pop
or
mov
cmp
test
push
add
mov
call
pusha
mov
pushf
mov
push
pushf
mov
pushf
lea
jmp
rol
pusha
pushf
mov
inc
clc
add
pushf
test
movb
cmc
sub
pushf
mov
mov
pushl
mov
mov
pushf
lea
jmp
add
add
ror
cmc
xadd
rol
mov
test
add
call
pushf
mov
pushf
mov
movb
movb
lea
jmp
cmp
clc
shl
jmp
mov
pushl
movb
jmp
add
mov
rcl
call
pushl
popf
pushl
movw
mov
lea
jmp
add
movb
call
pusha
dec
clc
ror
movw
stc
sub
pushf
test
cbtw
jmp
jmp
push
pusha
mov
push
lea
jmp
jmp
bswap
bt
cmc
clc
jmp
call
call
inc
mov
bsf
stc
add
mov
bsf
cmc
das
mov
lea
push
std
mov
btr
rdtsc
movzbw
mov
clc
pushl
popf
mov
xchg
lea
jle
seto
pop
call
call
mov
call
jmp
jmp
mov
push
mov
pushf
push
pushf
movb
mov
push
call
jmp
push
mov
pusha
pushl
pusha
lea
jmp
call
push
pushl
pushl
pushl
popl
pushf
pushf
pushl
pushf
lea
jmp
call
shr
mov
jmp
call
jmp
push
pushf
popl
pushf
pushl
popl
mov
push
push
pushl
lea
jmp
sub
pushf
cmp
bsf
mov
test
setle
dec
mov
pusha
jmp
pusha
mov
push
mov
push
pushf
lea
jmp
rcr
mov
cmp
mov
push
jmp
pusha
pushl
mov
mov
mov
lea
jmp
clc
cwtl
clc
push
test
sub
pushl
mov
movl
pushf
pusha
lea
jmp
xor
aaa
mov
pushf
sub
movb
pushf
add
pusha
pushf
popl
mov
call
lea
jne
push
mov
pusha
lea
jmp
call
movw
movb
pushl
pushf
popl
movw
lea
ja
pusha
push
pushl
popl
pushl
push
pushf
pushf
lea
jmp
pusha
pushf
dec
call
pushf
popl
jmp
dec
jmp
pusha
mov
push
pushf
push
lea
jmp
jmp
pusha
mov
pushf
mov
pushf
pushf
pushl
lea
jmp
stc
xor
jmp
clc
cmc
add
push
pusha
pushf
pushf
lea
jmp
pushf
setg
mov
pushl
pushl
ret
mov
clc
stc
add
jl
sub
pusha
bt
clc
shl
movb
mov
pushf
pusha
mov
jmp
pushf
popl
call
pushf
popl
call
pusha
push
lea
jns
push
push
pusha
pusha
pushl
ret
call
bsf
push
mov
pusha
add
mov
pushf
lea
jmp
jmp
cmc
rcr
mov
sub
jae
sub
jmp
jmp
pusha
pushf
movl
jmp
pushf
mov
mov
mov
lea
jmp
pushf
sub
pusha
push
lea
jne
jmp
push
pusha
movb
pushf
pusha
lea
jmp
push
movl
mov
mov
pusha
lea
jmp
test
sub
cmp
sub
pushf
jmp
add
push
pushl
sub
movl
mov
pusha
mov
push
push
lea
jmp
mov
aam
pushf
clc
mov
movb
mov
rcr
adc
bt
mov
jmp
pushf
pusha
jmp
jmp
pusha
pusha
pushf
mov
push
push
lea
jmp
mov
pusha
push
pushf
lea
jmp
push
mov
movsbw
lea
pushf
mov
pushf
push
push
pushf
pushl
ret
jmp
pushf
pushl
popl
push
pushl
lea
jmp
not
pushf
call
call
mov
push
call
btr
pusha
shl
sub
call
clc
cmp
call
pusha
mov
jmp
clc
stc
sub
pusha
pushf
lea
jmp
jmp
push
jmp
lahf
shl
aam
cmc
mov
jb
add
pusha
jmp
add
cmp
call
inc
mov
not
rcl
mov
shrd
not
not
sub
ror
btr
sub
sbb
btc
pusha
xor
rcl
mov
neg
cmp
pusha
pushl
sub
ror
mov
cmp
add
jmp
pusha
mov
call
pusha
mov
pusha
lea
jmp
jmp
mov
movzbw
test
rol
movzww
clc
pushf
sub
jbe
xchg
cmp
bt
add
clc
jmp
rol
cmc
bsr
xor
adc
setb
add
sar
shl
sbb
lea
neg
or
and
rcl
mov
pushf
bt
clc
sub
pushf
jmp
call
lea
cmc
cmc
test
cmc
add
bt
add
jae
test
cwtl
clc
sub
ja
pushf
pusha
pusha
mov
push
movw
lea
jmp
jmp
shrd
mov
mov
dec
mov
mov
pushf
add
pusha
pusha
mov
push
pushl
pushf
mov
lea
jmp
pushf
pushl
popl
pushf
lea
jmp
mov
mov
movb
pusha
pushf
lea
jmp
add
out
jg
fildl
jg
scas
add
sti
add
out
jg
data16
int
jg
jmp
add
sub
jg
inc
add
lcall
dec
sbb
jg
pop
add
sbb
jg
rolb
jg
int
jg
filds
jg
lcall
push
add
jmp
jg
insb
add
jno
jg
or
jg
sbb
jg
addb
dec
jmp
add
sti
add
jmp
add
data16
lcall
inc
pop
add
mov
jg
pop
add
pop
add
sti
add
data16
add
jno
jg
add
stc
add
sti
add
inc
add
mov
add
sbb
jg
scas
add
sub
jg
jno
jg
xchg
add
mov
jg
sbb
jg
scas
add
out
jg
inc
add
jmp
add
mov
jg
int3
add
mov
jg
jno
jg
sub
jg
pop
add
sbb
jg
sub
jg
sub
jg
or
jg
cmp
jg
addb
push
sub
jg
insb
add
fildl
jg
add
sub
jg
dec
add
jmp
add
sub
jg
sbb
jg
stc
add
data16
sub
jg
insb
add
stc
add
int
jg
sub
jg
mov
jg
jno
jg
scas
add
sub
jg
stc
add
addb
inc
inc
add
sub
jg
jno
jg
jmp
add
sub
jg
movsb
add
lcall
push
sub
jg
jmp
add
jno
jg
sub
jg
addb
inc
xchg
add
cmpsl
add
sub
jg
int3
add
mov
jg
jmp
jg
sub
jg
xchg
add
sbb
jg
movsb
add
sub
jg
test
jg
addb
pop
addb
push
sub
jg
fiadds
jg
sub
jg
data16
push
add
jno
jg
int
jg
jno
jg
push
add
int
jg
test
jg
inc
add
push
add
sbb
jg
sbb
jg
jmp
add
scas
add
rolb
jg
rolb
jg
push
add
sti
add
stc
add
inc
add
push
add
fiadds
jg
sub
add
push
add
sbb
jg
data16
mov
add
movsb
add
jno
jg
add
push
add
int3
add
lcall
pop
push
add
pop
add
scas
add
int3
add
push
add
lcall
inc
int3
add
push
add
xchg
add
or
jg
add
push
add
stc
add
jno
jg
sbb
jg
push
add
mov
jg
addb
pop
addb
pop
push
add
jmp
add
inc
add
push
add
data16
or
jg
sbb
jg
addb
inc
jmp
add
or
jg
xchg
add
insb
add
fiadds
jg
sub
add
addb
inc
mov
jg
sbb
jg
out
jg
data16
scas
add
pop
add
add
rolb
jg
sti
add
sbb
jg
mov
jg
xchg
add
inc
add
fildl
jg
filds
jg
xchg
add
test
jg
filds
jg
jmp
add
cmpsl
add
inc
add
or
jg
mov
jg
mov
jg
stc
add
add
sti
add
sti
add
sti
add
test
jg
inc
add
add
test
jg
fiadds
jg
addb
push
scas
add
sti
add
addb
dec
dec
add
add
sbb
jg
sub
jg
pop
add
scas
add
mov
add
jno
jg
cmp
jg
mov
add
inc
call
mov
mov
movl
pusha
pusha
push
mov
push
lea
jmp
or
shl
mov
clc
mov
bt
stc
sub
test
clc
sub
js
xor
pusha
clc
pusha
neg
pushl
pushf
pushf
clc
sub
cmc
lea
jge
cmc
cmp
mov
cmc
bt
test
sub
bt
call
push
pushf
popl
mov
pushl
popl
pushf
pusha
lea
jmp
jmp
call
call
push
movb
mov
call
push
cmp
cmp
push
mov
movb
call
bswap
mov
mov
not
lea
cld
lea
jg
push
mov
pushf
call
jmp
bts
movsbw
lea
bsr
mov
rcl
neg
xor
clc
mov
bt
test
stc
test
add
pushf
call
pusha
ror
pusha
pushf
call
movb
mov
movb
jmp
lea
jne
dec
rcl
pusha
or
mov
test
clc
stc
pushl
and
test
cmc
clc
cmc
cmp
pushf
call
push
lea
jle
push
push
movb
pusha
pushf
lea
jmp
sub
clc
mov
test
jmp
cld
push
call
call
pushl
popl
pushl
pushf
pushl
lea
jmp
rcr
rdtsc
cmp
sub
call
mov
inc
movb
movw
jmp
call
movzbl
test
jmp
mov
call
setno
mov
movw
push
push
lea
jmp
stc
cmp
clc
mov
bt
bt
pusha
pushf
add
pushl
mov
pushf
push
lea
jmp
call
dec
shr
dec
mov
cmc
bswap
jmp
pushf
movb
mov
pushl
pushf
mov
pushf
lea
jmp
clc
test
sub
cmc
shl
call
ror
cmp
pushf
jmp
pushl
popl
mov
mov
pushf
lea
jmp
push
pusha
pushf
movb
mov
pusha
push
push
mov
lea
jmp
pushf
sub
jmp
mov
pushl
pusha
movw
lea
jmp
dec
jmp
cld
pushl
popf
pushf
pushf
mov
lea
jmp
adc
xor
pop
dec
cmp
or
xor
push
movsbl
pusha
not
inc
xor
inc
xor
and
xor
pushf
movzbl
shrd
bts
bsr
mov
sub
jbe
bswap
cmc
bt
bt
test
add
pusha
pusha
mov
push
mov
pushf
pushf
pushl
ret
push
lea
jne
sbb
movsbl
xor
xorb
setge
pop
pushf
pushl
push
lea
jmp
call
add
jmp
xchg
call
cld
pushf
rep
call
pusha
pusha
mov
mov
pushl
ret
pushf
push
pusha
mov
jmp
movl
mov
pushf
lea
jmp
cwtl
lea
pusha
mov
movb
pushl
push
lea
cpuid
cmp
pushf
clc
call
cmc
sub
pushf
dec
clc
rol
push
jmp
or
setne
jmp
sub
call
cmc
cmc
jmp
pushf
popl
push
pushl
popl
pushl
lea
jmp
call
push
lea
jp
push
dec
clc
jmp
jmp
mov
push
pushf
lea
jmp
movsbw
mov
pusha
call
shl
pushf
call
pushf
popl
pusha
pushl
popl
pushl
pushf
movb
lea
jmp
pusha
push
mov
pushf
pushf
push
lea
jmp
bt
rol
movsbl
shr
sub
movsbw
movzbw
dec
bt
rcl
cmc
ror
bsf
cmp
rcr
dec
sub
shl
inc
movzbl
test
stc
mov
pushf
or
mov
lea
je
stc
clc
push
cmc
xor
cmc
call
stc
rol
jmp
aaa
lea
movzbw
lea
pushf
clc
pushf
cmp
pushf
pusha
lea
ja
movzbw
mov
stc
lea
bts
aad
bsf
shr
sub
neg
movsbw
lea
bt
movsbl
adc
shrd
and
shld
stc
btr
sub
movsbw
lea
push
mov
pusha
mov
pushf
popl
pushf
pop
mov
call
pushf
mov
bt
sub
pushl
mov
jmp
add
pushf
jmp
push
mov
pushl
pushf
pushf
popl
push
pushl
popl
pushf
push
lea
jmp
add
mov
jmp
lea
jne
push
pushf
pusha
mov
movw
push
mov
pushl
lea
jmp
pusha
pushf
lea
movw
call
mov
movb
pushf
mov
mov
lea
jmp
rcr
shld
movsbw
setle
mov
add
inc
shr
mov
neg
neg
neg
and
mov
pushf
call
movb
bt
add
clc
test
sub
mov
jmp
pusha
mov
push
mov
pusha
lea
jmp
pusha
pushf
dec
bt
call
