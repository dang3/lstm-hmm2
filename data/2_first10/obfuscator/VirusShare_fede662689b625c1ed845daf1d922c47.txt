push
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
mov
cmpl
je
movl
mov
mov
sub
shr
mov
mov
add
mov
movl
jmp
mov
add
mov
mov
cmp
jae
mov
mov
movzwl
sar
cmp
jne
mov
mov
movzwl
and
add
mov
mov
mov
add
mov
mov
add
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jae
movl
mov
add
movzbl
mov
movl
mov
add
movzbl
cmp
je
mov
jmp
jmp
xor
mov
pop
ret
int3
int3
push
mov
sub
movl
movl
jmp
mov
add
mov
mov
cmp
jge
movl
mov
add
movzbl
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
push
push
mov
push
push
call
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
movl
jmp
mov
add
mov
mov
cmp
jge
mov
mov
mov
add
mov
mov
jmp
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
mov
mov
mov
mov
mov
cmp
jae
mov
jmp
jmp
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
pusha
mov
push
push
call
push
lea
push
call
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
push
lea
push
call
lea
push
call
push
push
push
push
push
push
lea
push
call
mov
cmpl
je
cmpl
jne
int
xor
jmp
movzbl
cmp
je
int
xor
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
push
push
mov
push
push
call
test
je
mov
xor
jmp
movl
movl
mov
push
call
add
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
movb
mov
push
mov
push
call
push
call
mov
call
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
movl
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
add
mov
add
mov
mov
add
mov
mov
add
mov
xor
mov
add
mov
jmp
movl
movl
movl
mov
push
call
add
mov
mov
push
call
add
mov
mov
push
push
mov
push
call
add
mov
mov
mov
cmp
jae
mov
push
mov
push
call
add
mov
mov
push
mov
add
push
mov
add
push
call
add
mov
add
add
mov
mov
add
mov
mov
sub
mov
jmp
movl
jmp
mov
add
mov
mov
cmp
jae
mov
add
mov
add
mov
add
mov
mov
add
mov
mov
add
mov
xor
mov
add
mov
jmp
mov
mov
mov
push
call
add
mov
push
mov
push
mov
add
push
call
add
mov
sub
push
mov
push
mov
push
call
add
popa
mov
pop
mov
add
push
ret
pop
pop
pop
mov
pop
ret
add
add
jno
inc
add
gs
add
inc
or
jae
add
imul
leave
inc
add
mov
popa
lods
imul
test
gs
mov
mov
outsb
xchg
insb
gs
jno
add
mov
gs
jge
inc
imul
je
push
popa
je
jno
add
ss
add
outsl
inc
jae
imul
jns
jno
add
ss
push
fs
adc
popa
outsb
or
add
add
inc
add
add
movsl
add
test
add
roll
inc
add
arpl
insl
arpl
fs
mov
insl
popa
fs
jb
inc
add
add
mov
outsb
push
insb
xor
xchg
fs
insb
jno
add
inc
jno
arpl
cs
insb
add
dec
arpl
dec
je
add
jbe
and
or
arpl
add
add
addr16
add
insb
inc
add
add
add
pop
insb
inc
lds
jno
add
pushf
outsb
insl
popa
rcll
add
insb
add
pop
insb
push
mov
je
add
insb
insb
outsl
xchg
add
add
jb
dec
insb
xor
fs
insb
jno
add
arpl
insl
arpl
jno
gs
jo
add
rolb
jno
pop
add
add
jno
add
jno
add
jno
add
jno
add
jno
add
add
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
jmp
add
jno
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
jmp
add
jmp
jmp
jb
add
jb
add
jb
add
insl
cmp
add
jmp
jb
add
jae
add
or
call
jb
add
outsb
call
add
call
addb
jmp
jb
jmp
add
add
jb
call
bound
jmp
jb
add
jb
sub
addb
add
std
ltr
or
lcall
std
lcall
jns
add
lcall
std
decl
std
lcall
lcall
decl
add
aam
add
add
lcall
decl
decl
lcall
std
lcall
std
decl
std
decl
std
lcall
std
lcall
std
decl
std
decl
std
fmuls
add
pushl
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
outsl
sub
nop
add
adc
jno
fwait
add
jno
jle
add
jno
add
jno
add
jno
add
sar
pop
popa
fisttpll
add
pop
add
mov
jno
or
jno
xchg
add
add
jno
add
jno
add
jno
add
xor
jno
xchg
push
arpl
jno
push
add
jecxz
jno
jmp
popf
jb
jmp
add
jmp
add
jno
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
add
add
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
add
add
jb
add
jb
add
jb
add
jb
add
sbb
add
or
add
or
add
fadds
add
fadds
add
enter
enter
fadds
add
fadds
add
enter
enter
cwtl
add
add
add
add
add
add
add
add
add
add
pop
add
add
add
dec
add
add
add
pop
add
add
add
dec
add
add
add
add
add
add
add
add
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
add
add
jno
cwtl
add
cwtl
add
cwtl
add
xchg
add
xchg
add
xchg
add
nop
add
nop
add
nop
add
nop
add
nop
add
nop
add
nop
add
nop
add
xchg
nop
jb
in
jb
icebp
nop
jb
ret
nop
jb
lds
jb
pop
xchg
jb
icebp
nop
jb
jno
jb
adcl
xchg
jb
dec
xchg
jb
inc
xchg
jb
sti
xchg
jb
lahf
xchg
jb
xchg
xchg
jb
popf
xchg
jb
jns
jb
dec
xchg
jb
dec
jb
jmp
cmpsb
jb
lods
cmpsb
jb
pop
cmpsl
jb
in
cmpsb
jb
frstor
jb
test
jb
add
jb
add
int
jmp
inc
int
lcall
add
decl
int3
pushl
int
incl
decl
incl
or
lcall
decl
adc
incl
or
call
add
decl
call
cmp
incl
loop
in
in
call
inc
add
std
pushl
add
incl
incl
std
jmp
std
lcall
lea
add
mov
add
lea
add
lea
add
mov
add
mov
add
mov
add
add
mov
mov
add
add
in
mov
add
mov
add
mov
add
lea
add
mov
add
add
add
add
clc
mov
add
mov
add
mov
add
mov
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
cwtl
add
cwtl
add
cwtl
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
test
jno
test
jno
test
add
test
jno
test
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
jg
jno
addb
add
jg
add
jg
add
jb
imul
cmp
add
jb
xor
add
jle
add
jle
add
jle
add
jb
xchg
jle
jb
popf
jle
add
jle
add
jb
popa
jle
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
jge
add
xorl
add
lock
cmp
add
icebp
add
xor
add
dec
lock
push
lock
and
add
das
add
add
icebp
icebp
add
aad
add
push
add
sti
icebp
add
out
add
xorl
add
pop
add
xchg
add
add
xlat
inc
add
lret
add
lahf
add
test
icebp
add
inc
sbb
add
push
add
sbb
loopne
add
jb
add
cmp
add
mov
add
mov
add
add
add
inc
add
addb
adcb
orb
orb
add
movsb
add
push
mov
add
push
mov
add
out
jnp
add
jnp
add
add
or
adc
add
adc
loopne
add
dec
jnp
add
add
or
add
sarb
movsb
jl
add
movsb
jl
add
adc
add
mov
jno
mov
jno
mov
jno
add
icebp
add
jno
mov
add
mov
jno
mov
jno
mov
jno
mov
jno
mov
jno
mov
jno
mov
jno
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
jno
xchg
add
xchg
add
xchg
add
xchg
add
mov
jno
mov
jno
mov
jno
sbb
jb
decl
jb
mov
fwait
mov
lea
jb
imul
add
lea
lods
lea
mov
lea
sub
jb
cmp
cmp
jb
mov
mov
fisttps
jb
arpl
jb
ja
jb
inc
mov
and
mov
add
out
ljmp
inc
loope
ljmp
add
lcall
lcall
call
loop
push
add
jmp
jecxz
ljmp
dec
add
lcall
call
pushl
lcall
incl
add
cli
add
decl
add
lcall
jmp
decl
jecxz
ljmp
jle
clc
jl
add
jge
add
jl
add
jl
add
jl
add
add
add
nop
add
mov
nop
add
mov
add
sub
add
push
jp
add
add
adc
add
or
lcall
add
mov
add
and
add
xor
add
insb
mov
add
or
add
dec
mov
add
jno
lahf
add
lahf
add
jno
lahf
add
lahf
add
lahf
add
lahf
add
movsl
add
movsl
add
movsl
add
movsl
add
movsl
add
add
jno
movsl
add
add
icebp
fildl
add
xlat
add
icebp
jecxz
add
loope
add
es
icebp
adc
add
movsl
add
movsl
add
add
icebp
or
add
add
add
jno
add
icebp
lret
add
icebp
repnz
icebp
ljmp
sub
jno
cmc
add
or
movsl
jb
fldenv
jno
ljmp
addb
jno
jmp
sahf
jb
sti
popf
jb
in
popf
jb
out
popf
jb
stc
popf
jb
repz
jb
pop
sahf
jb
adc
popf
add
sub
jb
cmp
jb
or
jb
pop
sahf
jb
addr16
jb
add
add
push
out
add
out
add
xlat
add
and
add
sbb
add
pop
incl
add
add
jmp
int
add
aad
add
int
add
add
dec
or
add
jmp
jmp
rdpmc
sub
lret
fwait
cmp
mov
pop
iret
xor
testl
and
hlt
cmp
rcll
pusha
nop
ja
and
cmp
dec
loopne
es
dec
es
inc
call
imul
push
xor
inc
movsl
or
adc
lahf
jbe
test
jge
fcmovb
dec
xor
sbb
aam
sbb
cltd
mov
sti
or
jno
cmp
cmp
inc
fsubrp
and
add
mov
adc
jbe
insb
dec
and
arpl
in
je
jmp
jo
dec
mov
outsl
xchg
sbb
add
and
mov
push
jnp,pn
add
jno
lods
inc
jno
stos
inc
jno
add
test
insb
jno
add
jno
add
jno
push
jne
mov
add
add
jno
addl
xlat
adc
notl
xor
incb
sbb
test
push
lcall
out
add
addl
xlat
sbb
dec
add
dec
add
jmp
add
xor
push
inc
js
add
roll
jno
or
add
in
imul
jae
clc
loopne
jno
call
add
jmp
add
jmp
or
add
add
loope
jne
mov
mov
in
add
add
mov
mov
in
outsl
add
add
add
add
add
add
add
add
and
sub
add
jb
add
addb
jae
add
jb
add
add
sub
add
jb
add
insl
add
jo
add
insl
incb
jmp
add
test
pusha
cs
jb
add
jnp
add
jp
add
push
add
push
add
add
add
jp
add
push
add
rolb
jnp
call
push
add
mov
add
jp
add
or
aas
add
hlt
filds
sub
add
add
notl
add
hlt
popl
jmp
cmp
fdiv
ja
enter
enter
test
mulb
enter
enter
cwtl
testb
add
testb
repz
add
notb
mov
adc
jge
loop
imul
add
jae
dec
divb
add
movl
pop
mulb
dec
mulb
add
cmpsl
add
or
xlat
or
xlat
or
jno
or
jno
or
or
xlat
or
jno
or
xlat
or
xlat
or
jno
or
jno
or
or
xlat
or
jno
or
xlat
or
jno
or
jno
or
xlat
or
jno
or
jno
or
xlat
or
jno
or
jno
or
jno
or
add
or
call
or
call
jmp
or
jmp
or
jmp
or
add
or
jmp
or
add
or
jmp
or
call
or
call
or
add
or
add
or
test
or
add
or
cmp
verw
push
add
push
add
jge
add
jp
add
push
add
push
add
jge
add
outsl
or
jmp
push
call
outsl
arpl
jmp
push
add
jge
add
outsl
sti
call
push
add
jge
add
jp
add
push
add
push
add
jge
add
add
add
push
add
push
push
jp
add
outsl
call
dec
or
add
ret
push
or
dec
or
dec
or
add
or
add
or
add
or
add
or
add
push
push
add
or
or
sbb
fmuls
xchg
add
add
jns
enter
fmuls
rolb
test
enter
enter
cwtl
or
add
or
cwtl
or
add
or
mov
adc
add
push
sub
or
out
xor
jno
push
or
jno
or
jno
or
jno
or
out
ljmp
or
jno
or
jno
add
jno
or
out
cmp
jno
add
jno
or
out
sub
jno
or
jno
or
out
cli
jno
add
jno
or
add
or
add
add
add
or
add
or
add
add
add
or
add
or
push
add
or
call
or
call
or
add
add
add
or
add
or
cld
add
add
or
jmp
or
add
or
jmp
or
call
or
call
or
fdivs
add
push
add
jp
ljmp
cli
jne
add
push
add
jp
add
jnp
add
jne
add
push
add
jp
add
jne
add
push
add
push
add
jp
add
jne
add
jae
add
push
add
jp
call
jae
add
push
add
jp
add
jne
add
jae
call
jp
add
jne
add
add
add
push
add
cwtl
pop
dec
add
decl
pop
adc
pop
pop
jae
pop
push
add
jo
pop
pop
xor
pop
or
add
decb
add
pusha
add
pop
and
sbb
add
pop
add
or
addb
pop
inc
add
or
add
incb
add
push
sbb
fmuls
xchg
add
std
cmp
add
push
js
fadds
cmp
fmuls
roll
cltd
std
adc
enter
cwtl
push
sub
cwtl
or
or
or
jno
or
jno
add
jmp
or
aam
jecxz
add
jno
or
or
out
leave
jno
add
jno
or
out
test
jno
or
jno
or
jno
add
jno
or
or
out
cltd
jno
add
out
jl
out
cmp
out
fnstenv
add
jno
or
jmp
or
add
or
jmp
or
add
add
jmp
or
add
add
add
or
addl
or
fadds
push
jmp
or
jmp
or
jmp
or
add
add
jmp
or
add
add
add
or
jmp
or
call
jp
add
imul
jmp
jp
add
add
add
jno
add
jp
add
jp
ljmp
jno
add
jp
add
jp
add
imul
fdivs
add
jp
add
jp
add
insl
movsl
add
push
call
jp
add
insl
in
fincstp
or
jmp
jp
call
xlat
bound
jmp
fmuls
ds
add
add
lcall
add
add
add
or
add
lcall
push
add
adc
or
add
jno
pop
or
add
ret
add
or
sbb
popa
add
or
add
add
add
or
add
or
add
add
add
add
pop
add
or
add
add
cmp
or
jmp
or
jno
adc
or
jmp
or
jno
or
jno
or
jno
or
jno
incb
jno
or
out
adc
jo
sub
or
out
xor
jno
decb
out
add
or
jno
or
jno
or
out
jmp
mov
pop
jno
or
add
or
or
add
cld
and
jmp
or
or
add
or
jmp
or
add
or
or
add
or
jmp
cld
jae
jmp
or
addb
or
add
cld
xchg
add
or
add
or
add
cld
jnp
jmp
or
jmp
or
jmp
or
add
fldln2
std
call
push
call
int
add
jp
add
push
add
imul
call
push
add
add
add
jp
add
jp
add
push
add
imul
fldcw
call
push
ljmp
dec
verw
jp
add
push
add
imul
fsubrs
pop
add
sbb
add
adc
sti
call
or
inc
add
aad
add
push
or
fcom
pop
add
xlat
push
add
aam
add
int3
push
arpl
fcom
jle
enter
enter
lret
add
xlat
add
xlat
push
add
xlat
dec
add
or
add
or
add
adc
jae
add
dec
or
add
or
adc
or
add
add
sbb
and
adc
add
jno
or
add
or
imul
or
jno
or
jno
or
imul
or
ja
or
mov
add
mov
or
jb
or
jno
or
inc
xlat
or
insl
mov
shll
add
add
jno
add
jno
add
jno
add
jno
add
add
add
jno
add
jno
add
jno
add
jno
jmp
adc
dec
add
xor
loopne
test
insl
fcomps
cld
cmpsb
push
out
ja
jb
jnp
add
lods
push
neg
pushf
loopne
stos
mov
pop
cmp
loopne
out
push
jmp
jo
repz
pop
and
mov
inc
mov
fwait
notb
dec
arpl
xchg
mov
pushf
ficompl
rcl
std
mov
jo
pop
pusha
ja
add
pop
stc
mov
add
pusha
aad
mov
std
cmp
sub
dec
mov
add
inc
push
push
movsl
mov
pop
mov
or
lods
mov
mov
mov
cmpsb
cmpsl
stos
fcoml
outsb
scas
stos
xchg
xorb
imul
mov
or
xchg
push
push
fisttps
mov
icebp
lret
pop
sbb
cld
mov
aas
outsl
das
dec
adc
mov
pusha
ror
gs
inc
fdivl
xor
rcrb
cmpl
push
add
fdivrs
call
movsb
mov
or
xor
push
mov
pusha
fs
mov
arpl
xor
imul
insb
sbb
hlt
fs
add
sbb
cwtl
add
cltd
test
addb
pmaddwd
lods
mov
jno
mov
xor
nop
and
jl
dec
roll
in
cmpl
sbb
mov
lahf
xor
dec
sub
adc
cmp
fsubs
xlat
ret
imul
pop
jl
or
mov
leave
and
idivb
or
lahf
dec
or
and
add
repz
sti
cwtl
push
xchg
loopne
data16
out
add
add
int3
das
das
cmpl
ficoms
loop
push
das
fcoml
or
push
loope
add
rclb
fimull
and
mov
loope
or
xlat
pop
dec
sti
inc
sub
repnz
js
into
popf
jno
aaa
outsb
outsb
dec
lods
jo
jle
cmp
jo
dec
ret
movsb
xor
aad
gs
addb
test
outsl
pop
outsb
lahf
pop
mov
or
mov
jnp
addr16
fldl
mov
xchg
nop
pusha
rcl
mov
pop
subb
cmp
lods
dec
mov
pushf
mov
and
dec
ret
imul
imulb
or
add
stos
int
fists
fs
sbb
xor
in
inc
jne
pop
lret
add
gs
pop
xchg
push
push
add
xor
int3
pop
inc
or
push
es
lds
leave
mov
sub
pop
mov
mov
mov
pop
fldcw
ret
outsb
mov
in
add
insl
add
decl
pushf
out
or
jb
push
add
mov
jmp
jnp
fidivl
xchg
xchg
jns
in
cmpsl
fdivrl
fisttpl
dec
xchg
roll
jno
xchg
fisttpll
mov
mov
cmp
xchg
inc
mov
sti
sub
pop
clts
add
popf
incb
addb
imulb
bound
out
imul
out
sarl
xchg
xchg
xchg
add
xchg
icebp
pop
shll
imul
divps
pop
lea
fidivs
imul
mov
mov
or
inc
add
lds
xchg
adc
pop
add
add
aaa
xor
xlat
dec
iret
lea
rol
jmp
into
sub
sahf
push
mov
jns
mov
pop
fidivl
jmp
adc
push
aas
push
stos
xor
push
fs
dec
outsl
mov
xor
icebp
jge
mov
arpl
mov
stos
movsl
cmp
fcompl
addr16
sahf
sahf
cltd
jno
mov
push
cmpsl
push
cmp
fldenv
and
aaa
push
out
sbb
icebp
jl
rcr
addl
daa
sbb
movsb
dec
push
out
pop
call
push
daa
int
data16
or
xchg
mov
movb
int
or
out
ficoml
sub
dec
inc
inc
sar
outsl
add
sub
cmp
sbb
and
sbb
sub
inc
lcall
sbb
mov
imul
lods
sub
adc
movsb
pop
nop
xchg
jg
pop
rorb
push
loope
test
cmp
cmp
jae
or
push
popf
aam
inc
fsub
fstpl
vmwrite
push
ds
jmp
push
fsts
xchg
mov
lea
and
mov
mov
and
lahf
xchg
jnp
outsb
lea
adc
cli
pop
mov
sub
rolb
pop
stc
dec
notb
aas
test
int3
cs
loope
pop
sub
lret
push
mov
orb
icebp
or
repz
cmp
inc
and
std
xchg
mov
cld
lret
or
aaa
jp
xchg
jo
data16
mov
cmpb
mov
xchg
xchg
mov
mov
addb
push
pop
sub
sarb
or
pop
dec
ds
xchg
cmp
fucomp
jns
adc
cmp
xchg
cmp
test
inc
clc
pusha
daa
rclb
pop
shll
je
lods
int3
mov
jmp
inc
incb
imul
mov
into
cwtl
xor
repz
pusha
mov
into
and
add
mov
daa
repz
aas
ljmp
dec
fsubrs
int3
push
xchg
out
adc
gs
jmp
jno
jmp
dec
inc
xor
push
pop
out
adc
push
jmpw
pop
lds
mov
xchg
xchg
mov
pusha
mov
xchg
es
pop
in
shr
xchg
cmpsl
not
idiv
lods
xchg
add
mov
pop
setl
mov
cmp
in
jo
aaa
xlat
pop
clc
out
loope
repnz
les
adc
push
mov
scas
mov
sub
test
xor
push
in
pop
fdivrp
orb
iret
hlt
sub
cltd
inc
sahf
mov
clc
subl
rolb
xor
push
or
jo
sbb
addb
jno
arpl
cli
lret
pop
lcall
call
movhps
pop
mov
inc
mov
jb
das
cmp
pop
adc
dec
pop
pushf
dec
push
insb
push
setns
bound
xorl
add
adc
add
hlt
dec
dec
xor
bound
icebp
push
jns
ret
test
inc
cli
roll
or
lea
inc
sub
ja
aad
ja
mov
push
cmp
cmp
inc
dec
sar
addb
or
inc
pop
clc
add
jle
mov
push
dec
in
jb
pop
add
mov
int
nop
mov
mov
movsb
movsb
mov
pop
rcll
hlt
adc
jne
add
sbb
pop
repnz
dec
aas
mov
cmp
pop
cs
movsb
adc
or
rclb
jno
mov
mov
add
jmp
lahf
mov
add
repz
movsl
add
push
shlb
jae
fs
xor
outsb
lods
mov
mov
loopne
or
or
in
or
xchg
arpl
lods
sub
fcompl
add
push
xchg
adc
bound
xchg
sbb
push
sbb
decl
adc
or
nop
adc
dec
adc
xor
cmp
add
int
adc
outsl
mov
pop
sub
dec
cmp
rorl
cmp
test
cmp
aas
ret
js
ds
mov
cmp
jg
pushf
aaa
mov
sbb
adcb
stos
xchg
xor
adc
xor
std
adc
clc
cltd
imul
test
daa
xchg
pop
sub
and
test
fwait
out
and
cmp
das
mov
and
dec
cwtl
or
jno
ljmp
dec
cld
fs
inc
imul
push
bound
repz
call
push
aas
sti
mov
inc
in
aad
loope
mov
out
jne
es
and
adc
pop
push
inc
or
add
sti
sub
cli
cwtl
out
mov
aam
mov
cli
aad
mov
bound
xor
mov
repnz
fisubs
ficomps
xchg
and
les
and
orl
daa
or
movb
jl
daa
pop
inc
dec
push
cmp
dec
lds
scas
dec
mov
gs
pop
jbe
dec
test
add
dec
sbbl
xor
out
inc
sub
pop
jbe
ret
movsl
sub
sub
movb
push
pop
and
loopne
push
push
jne
dec
push
subb
add
cmp
adc
jle
adc
loopne
outsl
loope
pop
pop
out
fs
mov
lret
out
xchg
test
insl
pop
imul
mov
outsl
loop
dec
xor
and
stos
mov
in
addr16
loope
out
out
xchg
mov
in
or
and
shr
out
cmc
stos
jmp
sub
daa
ljmp
iret
cld
ja
xchg
incb
fs
cli
push
not
sti
or
sahf
stc
std
sub
imul
ret
mov
inc
icebp
lods
inc
or
mov
xchg
notl
dec
idivb
pop
js
lahf
mov
fcom
mov
fiaddl
jne
fiadds
mov
fisubl
aaa
fdivl
loop
ds
aam
das
sub
ror
lret
jb
in
sbb
push
cwtl
pushf
les
jno
jmp
sbb
notb
aas
call
push
stos
adc
push
insb
dec
cmp
sub
aaa
leave
sub
adc
cmp
add
xor
rcl
shlb
jp
mov
push
mov
sub
mov
call
fisttps
scas
and
fs
add
imul
cmp
cmp
cmc
dec
cmp
mov
add
fistpll
fisubrl
icebp
stc
mov
pop
stos
mov
mov
mov
icebp
test
mov
xchg
insl
mov
mov
or
or
cmpb
sub
orl
pop
sbb
les
jbe
xchg
push
shrb
add
imul
addr16
insl
add
fsubrl
test
bound
push
sbb
sub
lods
in
jle
jp
cmp
inc
mov
jnp
cmp
add
cmp
cmc
daa
int3
mov
les
mov
imul
push
test
mov
loopne
mov
cmp
push
sbb
adc
xchg
mov
inc
nop
jl
bound
jae
push
loopne
sti
add
aaa
xchg
sbb
popf
xchg
xchg
insl
lds
or
int
outsl
call
xor
dec
fstp
push
mov
adc
pop
out
dec
sbb
mov
call
sub
inc
add
filds
in
push
or
jb
jbe
int
or
lods
xchg
and
das
movsb
aas
sahf
aam
xchg
gs
sbb
xchg
lods
movsb
lds
mov
xor
cmc
fistpll
or
std
xchg
int3
push
in
xchg
stos
insb
pop
test
nop
in
jmp
pop
cmp
jno
dec
mov
sub
in
test
pop
add
movsb
fucomi
mov
jns
imul
hlt
and
clc
daa
dec
mov
insl
pusha
inc
inc
rol
cld
xchg
outsl
rcrl
in
sbb
dec
mov
jecxz
jae
mov
subl
mull
cmpb
clc
push
jbe
cmpsb
imul
leave
jle
out
sbb
mov
pcmpeqw
int
pop
inc
insb
lahf
mov
mov
cmp
dec
faddp
mov
insb
lret
es
xor
mov
or
cmp
into
cmp
mov
mov
push
xchg
cmpsb
shr
dec
dec
mov
flds
das
cmpsl
rcrl
jne
jecxz
sbb
push
cmp
ljmp
scas
xchg
sti
inc
xchg
sti
andb
xchg
mov
and
insb
clc
mov
inc
push
jae
mov
xchg
xchg
jo
out
push
jle
push
jmp
fucomip
inc
sub
leave
mov
push
cmp
test
cmc
push
pop
adc
lcall
xor
in
mov
dec
dec
add
test
mov
adc
hlt
mov
test
dec
cltd
inc
mov
push
xor
dec
push
in
aas
ret
cltd
xchg
mov
movsb
incl
and
cmp
repz
mov
jle
jo
mov
sub
jns
nop
inc
inc
in
mov
or
pop
push
ret
gs
cmp
add
test
cmc
scas
jnp
and
sahf
adc
cwtl
xor
leave
hlt
js
sbb
pop
add
shrb
dec
xchg
div
mov
lahf
pop
ljmp
dec
sub
cmc
jno
shlb
shrl
sbb
mov
nop
cmp
mov
jmp
inc
or
push
cmp
outsb
pop
ret
je
mov
pop
or
test
jb
push
ljmp
int
outsb
in
fsts
jecxz
jne
pop
arpl
sbb
movsl
icebp
xchg
sbb
jp
or
subl
jae
enter
pop
lea
fiadds
lods
in
push
adc
out
mov
rol
ljmp
sbb
sub
add
jne
dec
outsb
cmpsl
nop
lret
insl
gs
or
sbbl
inc
push
mov
mov
mov
mov
loop
insl
mov
xchg
sti
xor
test
sbb
ss
imul
test
jbe
xchg
adc
adc
sbb
repnz
and
inc
mov
push
cmp
jge
sub
cmp
mov
jl
adc
les
adc
repz
or
push
jne
adc
sub
shrb
push
and
push
adc
mov
xchg
test
ds
int
xchg
cmp
in
cld
or
mov
add
mov
rolb
mov
aad
inc
in
push
add
push
mov
repnz
mov
fmulp
std
jmp
pop
xor
inc
mov
mov
push
sahf
les
movsb
clc
leave
jmp
mov
outsb
jl,pn
mull
sub
xchg
insl
aaa
adc
and
stos
and
inc
ficoms
aam
cmp
fdivs
sbb
cwtl
push
hlt
adc
stc
jnp
daa
leave
add
xchg
insb
enter
push
push
cld
or
frstor
and
je
inc
aad
sub
sti
add
shr
aam
cs
incb
aam
test
in
cwtl
adc
repnz
stc
xor
insb
push
in
pop
fcoml
sarb
sbb
loope
push
icebp
jle
popa
pop
clc
ja
in
je
push
out
xchg
clc
xor
data16
add
stc
clc
lcall
jae
cld
or
aad
insl
xchg
and
jl
aaa
sub
call
rclb
fidivl
jne
jns
jne
orps
shrl
pop
mov
hlt
jle
jle
fimuls
push
sbb
and
xchg
mov
rcrb
mov
and
enter
ds
add
loop
int3
sub
imul
ret
push
mov
cltd
push
bound
js
mov
or
aam
fmull
ret
repnz
and
dec
push
into
mov
je
dec
lock
mov
xchg
xlat
lcall
push
fs
cld
inc
push
js
mov
push
jb
jae
in
pop
cmp
jno
leave
mov
push
jae
stos
xchg
cmp
mov
push
xchg
mov
js
test
jbe
jecxz
ss
leave
cwtl
cwtl
rcrl
mov
xor
sbbl
sbb
and
sbb
or
xor
lcall
ja
mov
push
cmp
or
add
xlat
cmp
or
cld
lods
into
or
test
scas
daa
inc
add
mov
stos
xchg
inc
iret
lods
mov
repnz
rolb
les
daa
addr16
pop
mov
in
sbb
shrl
adc
into
dec
mov
sbb
je
xor
mov
rclb
ret
int
inc
mov
mov
mov
push
mov
jno
cmp
stc
sbb
xlat
pop
jp
bound
out
xor
ffreep
push
sbb
add
and
and
sbb
repz
lahf
xchg
cmp
decl
add
xchg
push
push
fldt
imul
shll
mov
aam
arpl
scas
icebp
lret
xchg
int
push
andb
jo
daa
ret
loop
push
adc
fs
insb
pop
sar
fs
add
test
add
imul
mov
adc
pop
fnsave
call
test
pop
std
push
cs
mov
aas
lret
and
into
aam
and
clc
out
add
outsb
push
mov
pop
mov
inc
ja
add
sbb
jo
leave
clc
jne
pop
jbe
mov
add
stos
rcl
mov
les
out
daa
jno
push
adc
ret
loop
cltd
push
adc
and
out
push
adc
fsubrl
stos
mulb
cmp
out
add
shll
push
sbb
jg
xor
jmp
sbbb
mov
xor
cmpsb
repnz
add
hlt
mov
sub
addr16
push
in
mov
mov
sub
mov
mov
or
std
pushl
xor
scas
popa
xorb
ret
xor
lds
pop
out
repz
jbe
cmpsl
xchg
xchg
mov
ret
jno
cltd
call
cmp
dec
insl
hlt
pop
jle
push
test
ss
lds
mov
iret
scas
jo
mov
pop
xlat
les
mov
fists
test
lret
lret
xor
stos
pop
insb
add
inc
aas
scas
or
out
jg
adc
mov
push
jns
ja
push
mov
mov
adcl
mov
add
push
and
sbb
fs
repnz
push
leave
fnstsw
aam
pop
mov
daa
inc
outsb
jb
xor
xor
mov
sbb
xor
pop
add
sub
std
mov
push
pop
iret
sub
jne
call
xchg
fwait
sub
mov
fwait
in
sub
aaa
cmp
aaa
pop
jg
push
test
insb
neg
inc
add
xchg
enter
mov
dec
jecxz
pop
cli
jmp
add
and
icebp
inc
pop
sbb
mov
add
inc
push
mov
adc
popa
test
aad
div
xchg
daa
mov
fstps
inc
aam
shlb
mov
pop
xchg
inc
sahf
sbb
mov
jl
adc
and
fisubrl
sbb
ds
add
sub
and
std
pusha
add
sahf
iret
out
out
subl
ljmp
ret
fildl
cli
loopne
push
pop
mov
sbb
sub
cli
jmp
fnsave
fsubr
xor
repz
push
pop
ret
rcll
cmp
push
mov
mov
xor
cmp
push
test
cli
mov
ficoms
jg
lret
aas
mov
rorl
mov
xor
sbb
outsl
sub
scas
adc
add
sub
or
iret
dec
mov
or
fnstcw
dec
ja
in
jge
testb
in
add
and
add
push
bound
sub
rcr
lds
xchg
hlt
es
cmpsl
cld
cli
xchg
xchg
pop
cld
push
jne
les
xchg
lcall
adc
push
aas
lahf
push
mov
mov
fsubrp
jno
sahf
loop
xor
jg
sbb
test
fisttpl
imul
xor
sub
mov
stos
movsl
jnp
js
cmpl
jo
cld
test
in
addr16
mov
shrb
mov
jg
mov
outsb
ja
xlat
lret
dec
mov
shrl
fidivrl
sbb
dec
ja
fisttps
push
or
inc
mov
popl
dec
pop
pop
fsubrs
ret
roll
repnz
ret
incl
cmpsb
rcrb
mov
pop
lcall
fmull
sbb
dec
push
cltd
pop
pop
dec
fdivs
or
push
xchg
sub
xchg
mov
sub
xchg
push
fnop
cs
in
push
fld
lods
sub
xchg
outsb
inc
jmp
das
add
xor
test
cltd
popf
fs
adc
dec
movsl
mov
sbb
jae
daa
fidivl
lea
loope
out
and
loope
sbb
jb
aas
outsl
sub
mov
ficoml
cmp
pusha
ja
lods
fsubrs
xchg
fistps
jno
xor
cmp
or
add
cmp
sahf
rcrl
cld
inc
xchg
add
jno
lds
xchg
xchg
setne
cmp
int3
ret
mov
push
push
in
test
mov
negb
ss
push
mov
clc
aad
mov
sub
je
jmp
leave
scas
stos
gs
xchg
and
fstpl
insb
fbstp
shrb
mov
cli
loopne
cli
cwtl
or
stc
adc
sub
pop
out
and
and
mov
adc
add
or
lahf
jecxz
mov
hlt
hlt
ret
cmp
add
xchg
jg
das
fdivrl
or
mov
jbe
push
mov
mov
sub
mulb
mov
sahf
pop
out
mov
dec
or
add
lret
jns
or
xchg
adc
rolb
sar
inc
rcl
jno
arpl
repz
push
ret
out
lcall
rcrb
negl
cmp
ds
sbb
cmp
sub
add
mov
dec
adc
or
or
cmc
adc
jbe
lret
lret
into
out
scas
int3
test
cmp
jmp
insb
and
jmp
xor
xor
sti
iret
adc
jmp
imul
std
and
aam
out
jecxz
mov
imul
pop
push
rcrl
dec
push
adc
arpl
push
add
lret
push
fidivl
movsl
sahf
enter
push
lock
lea
mov
xor
pop
jae
dec
out
mov
push
addr16
sbb
jp
shl
fldcw
adc
jle
shll
push
mov
dec
xchg
gs
xchg
jge
in
cli
jb
cs
sbb
xlat
sbb
xchg
jno
leave
push
iret
xchg
adc
and
int3
pop
addr16
ret
sbb
test
andl
sbb
hlt
shrb
loope
jo
mov
subb
subb
in
jmp
fimuls
lds
test
aaa
ja
inc
cli
jbe
inc
mov
sub
adc
add
inc
sbb
repnz
mov
cld
or
je
enter
mov
cltd
testl
rcrl
mov
call
cmpsb
adc
push
fimuls
aam
movsl
mov
push
stos
mov
mov
add
cwtl
arpl
sar
cltd
or
push
push
cli
pop
sub
lcall
fsub
jge
or
dec
sub
fdivr
sub
jle
sub
mov
test
in
lds
and
lock
hlt
sub
sbb
jo
sub
jns
pushf
ja
xchg
jp
fsubr
sbb
ficompl
pop
adc
ret
clc
jg
insl
iret
jne
out
xchg
insb
out
sbb
and
out
add
mov
jae
jge
lea
pop
mov
loope
scas
mov
test
fistl
mov
mov
or
out
pop
fcmovbe
add
push
push
aad
arpl
pop
cmp
push
jb
add
mov
repnz
into
repz
fisubrs
jl
stos
adc
in
adc
sub
and
mov
ljmp
inc
push
aas
mov
fwait
sub
inc
pop
std
fildl
xchg
add
mov
sbb
jp
cmpsl
iret
jb
int
adc
push
or
push
pop
mov
push
mov
dec
sbb
divb
je
addb
add
sarb
lret
jmp
add
jno
pop
addr16
or
cli
xchg
dec
scas
xchg
adc
xchg
es
mov
pop
dec
dec
mov
sub
lods
push
mov
push
push
push
and
add
xor
add
mov
adc
jns
pop
popa
xchg
push
hlt
out
rep
or
es
into
push
adc
push
loop
addr16
adc
bnd
aad
push
xchg
data16
mov
jecxz
leave
loopne
adc
push
insb
loope
cs
mov
iret
flds
mov
push
fwait
xorb
xor
daa
push
cmpsl
push
or
insb
add
jo
or
jg
mov
stc
inc
pop
push
sbb
ds
fdivp
test
jne
jecxz
mov
push
mov
ja
mov
call
dec
stos
daa
mulb
out
xchg
sbb
pop
jge
inc
sbb
pop
mov
insb
int
sub
clc
aam
mov
jmp
loopne
fsin
xchg
testl
mov
roll
pushf
add
test
out
push
loope
ret
mov
jo
out
xchg
push
mov
and
pop
fs
fidivrs
shl
popa
out
jg
and
das
push
fildl
dec
imul
mov
cmp
mov
cmc
xor
call
pop
aaa
sbb
out
daa
dec
add
cmp
out
aam
xchg
mov
jg
push
js
dec
ficomps
hlt
push
mov
add
sbb
ds
pushl
mov
pusha
sbb
lods
dec
test
jle
iret
sbb
filds
in
clc
sarl
into
adc
outsl
jae
xchg
dec
cli
push
inc
das
dec
jae
andb
out
mov
lahf
add
fiaddl
addr16
mov
jae
je
push
pop
pop
das
pushl
int
cwtl
xchg
sub
into
out
addr16
leave
inc
aad
fmul
lods
pop
lea
xor
and
mov
add
cmp
fnstenv
lahf
mov
push
into
test
stos
dec
fsts
mov
rcrb
cmp
imull
dec
imul
fimull
push
sahf
in
xor
xor
aam
movsb
inc
adc
idivl
jge
scas
dec
sti
loope
xchg
jae
subb
and
or
repnz
dec
pop
out
xchg
jo
addl
insl
pop
hlt
lods
jmp
sbb
repnz
testl
add
mov
dec
jmp
imul
inc
insl
cmp
cltd
loope
jno
shr
fsts
lcall
lahf
pop
mov
inc
mov
ss
or
addl
xor
sahf
imul
pop
add
test
jmp
inc
imul
sbb
push
and
popa
leave
fwait
add
xor
and
xchg
inc
popf
sbb
pop
int3
ss
out
push
fisubrs
arpl
inc
call
cltd
or
xor
cmpsb
mov
xor
mov
inc
dec
mov
bound
and
xchg
cmpsl
xor
xor
data16
cld
mov
jo
fs
push
ja
loope
sub
stos
fldt
andl
mov
cmc
adc
pushf
pop
mov
insb
test
push
in
shll
jecxz
into
lret
and
test
push
adc
inc
es
sbb
lahf
fcomip
aad
enter
push
negl
lock
mov
push
add
lds
js
pop
incb
icebp
mov
arpl
push
out
push
xchg
sub
icebp
lods
jno
cld
and
dec
or
and
xchg
dec
pop
scas
push
ja,pn
stos
mov
dec
and
sub
ljmp
loopne
xor
pushl
invd
outsl
add
add
jmp
add
jmp
add
jno
jmp
add
call
add
call
add
jmp
jno
jmp
jno
jmp
jno
jmp
jno
ljmp
add
add
ljmp
add
add
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
mov
imul
add
jne
add
jae
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
loopne
add
loopne
add
roll
add
add
add
add
add
add
add
add
add
add
add
add
add
xchg
add
add
add
add
add
add
add
add
add
dec
add
add
add
pop
add
add
add
dec
add
add
add
sbb
add
sbb
add
or
add
or
add
add
add
add
add
add
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
add
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
sbb
add
add
pop
add
repz
jae
imul
and
jns
roll
jns
push
add
addl
add
add
jecxz
jns
arpl
imul
adc
jns
and
add
push
add
add
add
add
add
addr16
add
add
add
add
inc
add
add
add
add
add
push
add
add
pop
insl
clc
call
insl
clc
call
jb
call
clc
push
jb
ljmp
clc
jmp
jne
call
jb
decl
clc
incl
jb
jmp
jb
lcall
clc
call
jne
jmp
insl
clc
lcall
insl
clc
dec
jb
jmp
jb
jmp
clc
jmp
insl
clc
jmp
jb
incl
clc
incl
insl
clc
incl
dec
add
add
add
add
incl
add
or
fcos
pop
add
add
add
dec
incl
add
incl
add
pop
add
add
add
incl
add
incl
add
incl
add
pop
add
incl
add
add
add
pop
add
or
roll
add
add
add
or
push
incl
add
add
add
add
add
add
add
add
jno
add
add
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
add
add
jno
add
jno
add
jno
cmp
add
add
js
mov
add
mov
add
cmp
add
add
fiaddl
add
js
pop
add
add
add
repnz
add
js
bound
add
add
add
add
and
add
add
rolb
push
add
js
push
add
add
push
add
add
loop
push
add
push
jne
call
idiv
inc
jne
incl
idiv
mov
idiv
mov
idiv
shll
shll
xor
pushl
jb
jmp
jb
jmp
jae
call
idiv
push
jb
in
jb
jmp
jae
ljmp
jne
jmp
idiv
lods
jb
jmp
jne
jmp
jb
inc
jae
decl
idiv
inc
jb
decl
idiv
inc
jb
dec
jb
inc
jae
aas
add
add
add
add
add
add
or
jg
or
out
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
or
aas
add
add
add
add
add
add
or
daa
add
add
add
add
add
add
or
xchg
or
movl
or
aaa
add
add
or
daa
cld
or
daa
std
or
jno
add
jno
add
or
add
jno
add
jno
add
add
jno
add
jno
add
jno
add
or
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
pop
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
outsb
add
jbe
adc
add
jbe
in
add
and
add
add
jbe
std
add
xor
add
adc
add
push
jns
sub
add
add
add
add
dec
add
jmp
add
add
add
add
add
je
in
insb
add
add
add
add
jecxz
sti
call
jb
out
jb
push
jb
jmp
jb
out
jb
jmp
jb
call
jb
fbstp
dec
jb
jmp
sti
push
jb
jmp
jb
jmp
sti
jmp
jb
jmp
jb
call
jb
in
jb
push
jb
call
in
sti
add
aam
add
loope
cld
pop
loope
cld
pop
lock
testl
jecxz
testb
mov
xchg
or
xchg
or
mov
or
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
mov
or
sbb
mov
std
mov
into
lea
push
fimuls
or
push
sahf
lea
push
sahf
lea
or
addr16
or
ja
cmc
or
mov
push
jg
adc
ja
adc
outsb
mov
mov
movd
adc
outsb
mov
adc
jle
adc
jbe
adc
outsb
mov
adc
jle
adc
jbe
adc
outsb
mov
adc
jle
adc
jbe
add
addb
adc
lods
sbb
stos
sbb
pop
add
sbb
jmp
sbb
lock
loopne
add
loopne
imul
iret
sbb
jmp
lcall
out
sbb
jnp
loop
imul
sbb
pop
out
sbb
mov
add
mov
icebp
push
jp
icebp
push
jp
loope
push
loope
push
rcrl
pop
in
push
pop
in
pop
mov
add
mov
hlt
pop
jge
in
pop
jne
in
insl
in
pop
add
call
pop
in
int
in
add
xchg
sbb
jle
sbb
jbe
sbb
outsb
in
frstor
sbb
pop
in
int
in
add
xchg
sbb
jg
sbb
ja
sbb
outsl
jecxz
fsubl
sbb
pop
jecxz
int3
push
jecxz
add
jecxz
cld
xchg
sbb
jg
sbb
ja
sbb
outsl
jecxz
fsubl
sbb
add
sbb
push
jecxz
add
jecxz
cld
xchg
sbb
jae
add
outsl
cli
push
add
hlt
or
ret
or
lock
out
or
sets
movups
in
adc
test
ljmp
imul
adc
adc
sbb
sub
adc
sbb
adc
sbb
sbb
pop
adc
adc
push
sbb
push
sbb
push
push
sbb
push
pop
sbb
pop
pop
sbb
pop
out
sbb
pop
fistps
pop
pop
jno
sbb
jns
sbb
imul
sbb
sbb
pop
push
sbb
mov
sbb
mov
sbb
jns
sbb
js
sbb
push
pusha
sbb
pop
push
sbb
pop
push
sbb
add
add
sbb
sbb
imul
imul
pop
push
sbb
pop
push
sbb
mov
sbb
mov
sbb
jnp
sbb
jp
sbb
push
sbb
push
sbb
pop
push
sbb
pop
push
sbb
mov
add
mov
add
jp
jmp
add
jmp
jno
ljmp
add
add
out
add
jno
out
jno
loope
jno
jecxz
jno
cmc
add
out
add
flds
jno
aad
jno
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jno
dec
add
test
add
add
jb
add
jb
add
jb
add
add
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jne
add
jb
add
jb
add
jb
add
add
sub
add
jae
add
add
jmp
jno
add
outsb
add
jmp
push
add
jle
add
addb
jmp
add
add
inc
add
add
inc
decl
popa
lcall
js
add
aas
add
aas
add
aas
add
aas
add
js
add
js
add
js
add
aas
add
add
add
add
add
add
add
add
add
sub
jnp
cmp
mov
add
mov
jmp
add
lcall
add
add
add
add
add
add
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jne
adc
pop
add
jno
add
add
jno
add
jno
add
insb
add
jno
add
sbb
add
jno
add
call
add
jo
add
add
or
jne
adc
pop
push
ret
add
add
add
add
add
sti
add
fiaddl
bound
aad
pop
add
add
incb
xchg
add
add
add
repz
loop
add
fldl
push
add
add
and
add
xchg
xor
adc
add
add
add
xchg
xor
int
je
cmc
xchg
mov
push
add
add
xchg
mov
popf
add
lods
xchg
mov
flds
add
popa
jb
add
sar
jb
add
sar
jb
add
sar
jb
incl
sar
jb
add
sar
jb
add
sar
jne
add
loopne
incl
add
mov
sar
jb
add
add
jmp
jb
decl
jb
add
jb
add
jb
add
add
decl
add
jmp
loopne
incl
add
add
mov
add
std
adc
sub
inc
add
and
enter
clc
add
mov
add
add
xor
js
inc
add
mov
push
std
or
les
sbb
cwtl
mov
cli
add
add
add
add
add
mov
add
inc
add
adc
add
cld
adc
hlt
xchg
jno
add
jno
popl
fiaddl
pop
jno
popl
xor
mov
and
or
jmp
add
adc
pop
jno
popl
cli
add
jno
add
jno
popl
mov
or
popl
add
jno
popl
roll
adc
add
add
jno
popl
dec
add
jno
popl
in
adc
xchg
inc
jno
add
jno
xchg
inc
jno
mov
add
add
add
add
add
add
add
mov
push
add
add
mov
cmpsl
add
add
mov
xchg
add
add
xor
fadds
insl
add
xor
outsb
add
das
add
add
add
xor
add
add
xor
and
add
xor
xchg
add
popf
xchg
xor
xchg
add
xchg
xchg
xor
xchg
add
xchg
xchg
mov
add
jb
add
insl
add
adc
sar
jb
dec
loop
call
insl
cld
call
cld
lcall
or
test
and
call
sar
insl
push
add
sar
jb
jmp
sar
jb
ljmp
sar
jb
add
loop
jmp
jb
add
add
jmp
jb
add
jb
ljmp
or
aad
sar
out
push
add
add
pop
add
inc
add
jnp
add
push
add
add
jnp
add
add
add
inc
add
das
add
push
add
sbb
nop
jnp
add
add
add
inc
add
cld
adc
push
cld
push
add
jl
add
inc
add
add
add
add
xchg
jnp
add
add
insb
jle
add
add
add
test
cmp
jno
xchg
push
add
jno
xchg
sub
test
xchg
adc
test
loope
push
jno
test
xchg
add
jno
xchg
cwtl
add
jno
xchg
pop
add
jno
test
or
jno
test
xchg
add
jno
test
mov
adc
pop
test
or
jno
test
jno
add
sub
add
xor
and
ja
add
add
cmp
jle
sub
addl
xchg
add
mov
mov
xorl
add
add
add
mov
aam
jae
add
add
sub
add
jne
adc
add
add
add
add
xorl
add
xorb
jo
jnp
or
jb
add
icebp
mov
add
icebp
mov
add
jne
push
out
jmp
cld
cld
sar
jne
add
mov
fdivs
add
jb
add
cmpsb
sar
jb
add
jb
add
jb
add
sar
jb
add
icebp
sar
jb
add
push
sar
jb
add
jb
add
out
pop
add
icebp
aas
add
add
test
aas
add
std
add
pushf
icebp
aas
add
std
add
cwtl
icebp
aas
add
std
add
xor
aas
add
fwait
std
pop
add
icebp
aas
add
cld
push
add
aas
add
aas
add
std
add
add
aas
add
or
clc
repnz
add
std
add
shl
add
repz
add
repz
add
sti
add
cwtl
repz
add
add
jno
jge
jno
add
jno
jge
jno
add
add
jl
jno
add
jno
jl
jno
add
jno
jl
jno
add
jno
jl
jno
add
mov
add
jno
jge
jno
add
jno
jge
jno
add
jno
jl
jno
add
jno
jge
jno
add
jno
jge
jno
add
jno
jge
jno
add
jno
jge
jno
add
jno
jge
add
inc
add
sub
add
jge
add
outsl
add
add
test
add
add
cmpl
add
mov
add
jge
add
jge
add
add
add
jp
add
insl
add
jp
add
insl
add
jp
add
add
in
jns
add
add
outsb
add
jns
add
jns
add
jne
fnstsw
add
divl
add
dec
sar
insl
add
in
cmp
jmp
insl
add
in
sar
insl
clc
incl
sar
jb
add
or
lcall
mov
add
jb
add
sar
insl
clc
incl
jb
incl
mov
add
cmp
add
popf
sar
jb
add
mov
mov
jl
incl
stc
fsubrl
filds
or
enter
mov
jmp
or
xor
aas
add
add
add
push
add
aas
add
jmp
or
lock
add
add
add
add
jmp
or
hlt
call
or
mov
aas
add
add
push
in
aas
add
add
add
aas
add
add
add
aas
add
add
call
add
jno
test
movsb
add
jno
test
xchg
add
jno
test
pop
add
jno
test
dec
add
add
test
rolb
adc
jno
add
jno
test
int3
add
jno
test
cs
jno
test
sub
jno
test
adc
and
test
pop
add
jno
test
mov
sbb
test
scas
add
jno
test
mov
pop
jno
test
add
add
add
mov
jge
lea
insl
test
xor
push
add
push
test
add
jnp
popa
test
add
xchg
add
add
test
add
add
add
test
add
add
cmp
push
add
add
xor
imul
xchg
add
xchg
add
add
imul
xorl
mov
pushl
mov
jmp
lock
add
lock
add
jne
add
icebp
mov
call
pushl
icebp
mov
call
icebp
mov
pushl
icebp
mov
add
sar
jb
decl
icebp
sar
jb
add
sar
jne
ljmp
sar
jb
add
sar
loop
or
jl
inc
add
addb
decl
fdivr
fdivr
dec
std
dec
std
fdivr
fdivr
dec
std
dec
std
lcall
pop
es
mov
sub
mov
add
mov
xor
aaa
nop
sbb
add
fs
arpl
pop
add
imul
insl
outsl
enter
mov
push
jns
dec
std
pop
pop
jno
loop
xchg
ret
fisubs
iret
fisubrl
mov
repz
xor
jne
pop
jmp
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
add
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
jmp
add
jmp
add
jmp
add
jmp
add
jno
jmp
add
xchg
push
fisubs
push
into
addr16
outsb
push
mov
pop
push
cmpsb
addr16
push
xchg
addr16
jae
in
je
lock
ja
push
push
jnp
outsl
addr16
push
dec
addr16
into
addr16
out
addr16
add
addr16
ficoms
cli
or
and
inc
mov
mov
mov
scas
xchg
jmp
lcall
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
add
add
jb
add
jb
add
dec
add
add
add
pop
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cwtl
cld
add
mov
add
mov
add
cltd
cld
add
cltd
cld
add
mov
add
mov
add
pop
cld
add
jno
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jo
add
jno
add
add
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jmp
add
jno
jmp
add
jmp
add
jmp
add
xor
divl
mov
sbb
sbb
pop
adc
or
ds
stos
mov
insl
notb
repnz
inc
das
xchg
sub
cmp
jno
inc
and
test
dec
push
mov
insb
mov
pop
sub
sbb
xlat
xor
mov
in
lea
aad
in
and
aas
cmp
pop
sub
add
leave
jg
mov
mov
xchg
sub
ja
xor
fisubl
popf
or
sub
cmpsl
push
aam
enter
movsl
jb
mov
mov
dec
xor
scas
mov
in
push
sbb
adc
pop
scas
xor
and
test
lahf
dec
jo
jne
or
mov
or
cmp
adc
mov
ss
jo
ljmp
xchg
jnp
pop
or
mov
and
mov
lea
pusha
inc
sub
mov
aas
push
popa
inc
pusha
push
add
add
scas
push
bound
jno
test
xchg
jns
cmp
and
test
sahf
cltd
dec
xor
es
xor
sub
mov
dec
outsb
jae
addr16
lret
int
pop
pop
cmp
sbb
test
repnz
xchg
cltd
lahf
into
or
cmc
out
push
fmuls
cmp
or
lock
xchg
mov
inc
lcall
clc
pusha
in
fwait
pop
add
lcall
jl
sbb
jmp
push
jg
push
push
nop
js
pop
sti
lret
mov
adc
cltd
adc
cmc
enter
add
addr16
adc
jo
cmpsl
adc
cwtl
subb
shrl
ss
add
add
push
test
int
ficompl
cmp
punpckhwd
mov
decb
push
fs
rorb
jg
or
jmp
cmp
dec
pop
ret
push
and
pop
aas
sti
or
loope
add
mov
lea
lds
sub
data16
xor
xchg
lods
add
xor
sub
cmp
jmp
mov
xchg
jl
iret
fidivs
or
add
in
and
inc
shlb
cmp
ljmp
mov
inc
lret
es
loope
mov
push
add
xor
clc
fwait
xor
clc
stos
xor
clc
mov
jmp
divl
cltd
popf
or
mov
add
loope
inc
pop
sub
repz
xor
clc
ret
xor
clc
lret
xor
clc
add
cwtl
cmc
jge
les
mov
arpl
or
mov
cld
inc
cmp
sti
push
cmp
std
ret
lock
sbb
mov
push
add
pop
fistpll
aaa
and
jmp
push
mov
push
shrb
push
add
mov
add
das
add
repz
pop
js
mov
jle
lret
fcom
ret
sbb
jecxz
fwait
test
sbb
int3
adc
xchg
add
fwait
pop
insb
add
jle
and
add
jle
xchg
dec
jb
fnstcw
popf
sbb
cmp
sbb
pop
sbb
add
loopne
inc
mov
push
push
out
xlat
gs
cmpsl
adc
cs
lea
mov
sbb
pop
cmpsl
sbb
push
inc
or
fstpt
and
rcll
ret
orb
xor
aad
mov
test
add
adc
aas
adc
adc
fwait
adc
adc
adc
std
mov
adc
es
cwtl
mov
and
aas
and
mov
sub
roll
popf
xor
pop
xor
jo
incl
pop
xlat
je
pop
test
xor
fsubrl
dec
aaa
add
aaa
inc
push
cmp
pop
popf
cmp
adc
push
push
loopne
fstl
fcomps
cmc
mov
sahf
imul
mov
jo
or
add
add
test
or
jne
enter
cmp
push
xor
imull
sti
sub
sub
lock
xor
out
and
sarl
ret
arpl
pop
pop
push
out
mov
push
loop
cmp
fisttps
cmp
add
cmp
cld
ljmp
es
test
pushf
sub
filds
dec
mov
cs
fistl
fildl
aas
cmc
test
add
out
inc
xor
adc
shll
mov
fcoms
add
push
push
push
inc
mov
adc
test
test
jg
jo
sbb
movsb
mov
out
fstps
mov
sub
pop
xlat
test
jb
pop
shlb
pop
pusha
scas
inc
sbb
jno
arpl
jno
add
jno
mov
pop
out
or
cmp
loope
push
imulb
xor
inc
add
add
push
cmpsl
push
ss
scas
push
inc
push
orb
push
in
arpl
mov
xor
popa
dec
lret
cld
or
fiaddl
bound
add
or
jo
decb
adc
shrb
and
aam
test
aad
mov
test
cmpl
cmpsl
cs
pop
jne
mov
lock
ja
cmp
mov
inc
jbe
add
jne
subb
movsl
ret
sub
mov
jb
add
jb
add
jb
add
jae
add
jae
add
push
icebp
imul
in
ja
psubw
icebp
adc
iret
in
push
loope
stc
sbb
cmpsl
cmc
push
leave
push
and
lds
daa
adc
dec
sub
or
bound
xor
pop
sbb
std
xchg
aas
test
aas
frstor
dec
jmp
outsb
cltd
and
jb
das
int
add
cmp
or
pop
pop
clc
popa
popa
arpl
xor
imul
sub
jne
mov
jns
lods
cmp
pop
jge
adcl
pusha
test
mov
inc
rcll
fwait
dec
fstps
mov
add
scas
scas
call
jo
mov
je
mov
cwtl
mov
ret
leave
lret
pushf
int
jno
xor
push
and
fiadds
gs
cld
pusha
out
xor
inc
push
push
repnz
idiv
aas
pop
cli
ljmp
add
add
outsb
dec
or
jp
or
jbe
hlt
adc
lock
mov
clc
sbb
push
cmp
es
out
sub
pop
add
cs
notl
inc
jmp
ss
stos
push
sbb
cmpsb
cmpsl
in
sarb
loopne
into
add
call
add
rcll
test
pushf
mov
mov
movsb
shrb
mov
cmp
pushf
lods
and
fs
xor
gs
jl
mov
mov
testl
jnp
jns
ja
jne
mov
iret
pushf
xchg
stos
fldt
cltd
xchg
ret
nop
xchg
popl
mov
cwtl
jge
daa
xchg
add
mov
ret
and
mov
inc
iret
cmp
sub
and
fistpl
xchg
pop
jecxz
mov
out
fwait
data16
out
fldenv
dec
test
aas
push
jmp
jb
add
jb
add
jb
add
jb
add
jb
add
add
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
pop
lcall
decl
decl
incb
pop
lcall
decl
decl
lcall
lcall
decl
decl
call
scas
incb
sbb
decl
decl
fdivr
incl
fdivr
dec
dec
fdivr
jmp
scas
incb
enter
enter
cwtl
lcall
decl
scas
incb
jno
add
jno
add
jno
add
jno
add
jno
add
jno
push
decl
push
incl
push
mov
add
jno
add
jno
add
add
add
jno
push
decl
pop
push
incl
xor
jle
add
jno
add
jno
add
jno
add
jno
add
jno
push
add
push
add
cmp
add
add
jno
add
jno
add
jno
push
call
add
add
jmp
add
jmp
add
jmp
add
jno
jmp
add
add
add
add
add
jmp
add
jmp
add
imul
icebp
jg
add
push
out
pop
hlt
in
out
mov
in
out
jmp
in
js
shr
push
out
cli
cmc
pusha
out
cli
cmc
pusha
out
cli
cmc
sub
cmc
addb
call
add
adc
test
adc
jl
adc
fs
pop
bnd
jne
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
add
add
jb
add
jb
add
jb
add
cwtl
add
add
add
add
add
add
add
add
add
pop
add
add
add
lcall
inc
mov
add
rolb
enter
lock
mov
sub
jmp
pop
inc
dec
xchg
rcrl
lret
add
in
popa
into
test
push
addr16
ror
or
in
dec
dec
insl
lea
std
inc
xlat
mov
sahf
out
jno
repz
sub
sbbb
adcb
push
jnp
cmc
or
jno
pop
or
jns
scas
ss
mov
cmp
insb
mov
mov
and
js
dec
inc
and
clc
aas
out
and
push
sub
bound
sahf
imul
pop
arpl
pop
imul
pop
aas
ss
movq
insb
push
jns
sub
sahf
bnd
mov
data16
fsts
lret
pop
ljmp
dec
cld
test
in
frstor
sti
stc
call
adc
xchg
push
cmp
inc
ret
out
in
mov
rclb
cwtl
lock
mov
pop
add
imul
jno
incb
jno
leave
std
decb
jno
flds
add
std
out
or
jno
mov
imul
add
jae
add
jb
add
imul
add
add
mov
add
jb
add
jb
add
enter
jb
add
fcmovnb
decl
sub
lock
add
jb
add
cmp
out
jb
add
cmp
add
jne
add
or
stc
jb
add
jb
add
add
jmp
aaa
aas
add
dec
lcall
incb
add
incb
add
incb
add
add
add
add
pop
add
dec
add
add
add
add
add
dec
add
add
add
add
add
add
add
add
incb
add
or
add
push
sbb
add
or
add
or
add
jb
push
add
add
jb
push
add
push
add
push
add
add
jno
dec
inc
jno
add
jno
dec
inc
jno
add
jno
dec
inc
jno
add
jno
dec
inc
jno
add
jno
dec
inc
jno
add
jno
dec
inc
jno
add
jno
dec
inc
add
add
jno
dec
inc
jno
add
jno
dec
inc
jno
add
jno
dec
inc
jno
add
jno
dec
inc
jno
add
jno
dec
inc
jno
mov
dec
xor
mov
add
add
add
add
add
add
add
mov
add
mov
add
rolb
xchg
add
jno
and
xor
inc
add
lahf
add
add
add
push
add
add
add
sti
add
jno
repz
insl
decl
dec
decb
mov
inc
add
decl
mov
incl
stos
add
in
xchg
jb
add
jb
add
jb
add
mov
add
jb
add
inc
add
filds
push
jb
add
jecxz
inc
jb
add
sub
aaa
jb
add
jb
add
jb
add
jb
add
or
daa
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
mov
add
pop
add
outsb
add
jo
outsb
add
add
add
mov
add
add
add
add
vmrun
add
add
add
add
add
add
icebp
add
add
jno
push
add
lar
add
cld
and
add
cld
das
add
std
sbb
add
std
es
std
and
sar
xor
add
lods
add
jo
add
or
add
jo
add
jo
add
jo
add
add
jo
add
jo
add
jo
add
jo
add
jnp
cmp
add
mov
add
jo
add
jo
add
jo
add
or
push
jo
add
jo
add
mov
jb
and
add
jl
dec
jo
add
pop
add
jo
add
jo
xor
add
aaa
add
sbb
inc
lcall
add
decl
add
inc
add
mov
add
mov
add
jmp
add
call
add
pop
and
jo
dec
jp
dec
pushl
dec
pushl
inc
jnp
jmp
xchg
adc
cmp
or
adc
test
bound
jl
pop
xor
pop
xor
inc
xor
dec
xor
lahf
xor
push
mov
xor
notb
xor
jno
xor
xorl
xorb
jne
lea
insb
jno
xor
mov
pop
jno
xor
jno
xor
jno
xor
jno
xor
jno
xor
jno
xor
jno
xor
jno
xor
addb
xor
add
xor
fdivs
data16
xor
fidivs
pop
add
xor
loopne
add
loope
imul
xor
xor
out
cs
out
pop
inc
call
xor
inc
ljmp
inc
in
xor
inc
out
xor
inc
repnz
inc
fwait
xor
or
inc
inc
sbb
aaa
inc
push
push
flds
push
lret
push
lret
inc
and
pushf
inc
and
lea
push
jno
and
ja
daa
add
sub
sub
sub
sub
sub
sbb
sub
ja
std
das
outsl
call
std
xor
std
xor
or
mov
xor
outsl
mov
aaa
ja
or
outsl
mov
or
outsl
cmp
inc
ja
or
ja
inc
ja
or
jge
inc
ja
or
jnp
inc
add
or
orl
or
cli
inc
or
cli
push
or
inc
or
cli
pop
or
cli
sbb
ret
cli
inc
or
cld
dec
or
cld
inc
or
cld
inc
or
lea
ds
nop
or
cld
jg
cmp
orb
cld
xchg
or
cld
mov
sbb
loopne
jle
dec
cld
push
or
pop
or
cld
pop
or
cmp
jo
xor
jne
cmp
add
js
add
push
testl
cmpb
jge
hlt
add
add
js
add
icebp
add
push
adc
js
add
js
add
push
js
add
imul
mov
jnp
add
imul
lahf
jnp
add
jnp
add
imul
mov
jnp
add
jmp
inc
add
cmc
inc
add
cmc
inc
add
or
add
or
add
or
or
orb
add
or
pop
or
pop
or
jle
inc
add
scas
or
push
or
add
or
add
or
add
or
or
add
or
add
or
add
or
add
or
add
or
add
or
out
or
add
or
add
cwtl
or
jne
or
insl
mov
or
insl
mov
or
insl
fimuls
adc
jne
or
rorl
pop
insl
ret
jne
or
jne
or
insl
out
sub
pop
xchg
pop
mov
pop
mov
pop
mov
pop
stos
jb
pop
mov
pop
mov
pop
stos
jb
pop
jb
pop
test
push
adc
jb
push
lods
jb
push
scas
jb
push
scas
jb
pop
pop
stos
add
add
add
mov
add
stos
add
roll
pop
aas
add
pop
add
sub
add
sub
pop
faddl
das
pop
out
es
fiadds
and
or
and
or
xor
sti
add
pop
cli
add
pop
in
aaa
pop
filds
cs
add
pop
adc
sbb
adc
mov
push
or
adc
mov
lar
push
or
add
outsl
outsl
add
outsl
jno
lea
add
jbe
xchg
add
outsl
ja
push
ja
add
jns
inc
ja
add
jnp
push
ja
add
jge
cmp
add
outsl
aas
add
ja
add
outsl
inc
add
add
add
je
add
insb
inc
add
je
add
insb
inc
add
gs
mov
and
add
or
and
or
and
lock
and
cmpsb
and
or
and
and
or
and
or
and
pusha
and
or
and
or
and
mov
and
or
and
pop
and
cmp
popa
or
and
aam
data16
and
popa
and
sbb
orb
orl
mov
sub
adc
jae
daa
xchg
push
sub
jae
xchg
jo
or
push
or
push
jb
and
or
push
mov
xchg
add
or
test
or
rorl
and
rorb
lea
or
mov
or
les
adc
sti
or
adc
mov
push
sbb
add
mov
push
xor
or
xor
xor
add
or
jae
xchg
jb
mov
jae
mov
insl
loopne
push
add
push
outsb
loopne
push
imul
push
push
jnp
aas
push
pop
loopne
push
loopne
push
push
in
push
xchg
loopne
push
mov
cmp
ret
push
mov
fistps
push
cmpsb
fistpll
cltd
fbstp
enter
lret
fbstp
je
popa
push
and
push
pop
fstl
push
add
dec
push
lcall
sub
ja
and
outsl
fisubl
mov
fisubs
mov
or
and
mov
inc
and
cltd
je
and
fs
mov
je
and
fs
pop
mov
je
and
inc
fs
aas
jl
and
dec
insb
and
dec
jl
and
inc
add
or
add
pop
jl
pop
push
je
and
add
mov
es
push
fmull
arpl
mov
or
test
and
cltd
or
and
or
and
or
daa
in
pop
daa
in
outsl
testb
es
inc
es
inc
es
push
repnz
and
push
cmp
int
sbb
add
push
push
and
add
ds
add
daa
and
scas
add
movsl
and
sub
inc
add
pop
add
or
push
adc
or
xchg
out
lret
mov
or
sub
inc
or
xchg
insl
or
xchg
inc
or
xchg
pop
pop
pop
push
dec
pop
shrb
shll
shrb
roll
je
pop
aam
test
aad
jg
insb
xchg
xlat
je
pop
fsubrs
fnstenv
fisubrl
fsubrl
fnsave
fisubrs
fbstp
loopne
clc
push
loope
sti
push
loop
add
pop
adc
adc
or
std
push
pop
paddw
push
cld
add
frndint
out
push
enter
lret
cld
xchg
jo
mov
add
mov
jb
test
insl
push
mov
je
xchg
outsl
push
mov
jbe
orl
js
push
or
inc
or
cmp
or
or
inc
or
cmp
addl
fwait
or
lcall
push
jl
test
ja
jg
add
or
push
pusha
js
push
arpl
push
push
add
push
dec
push
adc
aas
js
push
ss
loopne
test
fisttps
stos
imul
or
cmpsl
jns
or
mov
jns
or
mov
imul
or
cmpsb
imul
or
cmp
or
xor
add
or
push
jg
aaa
push
orb
push
mov
cmp
mov
cmp
inc
or
push
inc
or
push
js
inc
push
jns
inc
push
push
inc
push
imul
push
mov
cld
inc
push
scas
cld
inc
push
scas
cld
inc
push
sar
push
sar
push
mov
dec
push
mov
dec
push
in
dec
push
cmc
cld
dec
push
fdivr
dec
push
frndint
push
push
add
sti
push
push
jmp
push
push
fdivr
push
push
push
push
scas
sti
push
push
lahf
sti
push
push
jno
push
pop
rolb
mov
xor
push
xor
push
xor
push
xor
les
ss
ret
inc
roll
mov
mov
add
cmp
cmpb
sbbb
inc
add
add
pusha
mov
inc
pusha
lods
add
inc
aam
inc
inc
lret
add
inc
rolb
inc
roll
mov
mov
add
mov
add
scas
icebp
xchg
add
shl
add
ret
icebp
sub
movsl
icebp
sub
cmpsl
icebp
sub
add
dec
icebp
xor
add
sub
icebp
scas
add
icebp
movsl
add
icebp
mov
add
icebp
lcall
icebp
xchg
add
adc
lret
adc
add
adc
xchg
jae
adc
jae
adc
jae
adc
jae
adc
insb
adc
imul
jae
adc
jae
adc
js
or
ja
pop
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jae
adc
jo
adc
jo
adc
jo
adc
jo
xor
jo
xor
jo
xor
jo
xor
xorl
jo
xor
icebp
out
adc
clc
adc
ljmp
lods
and
push
add
or
fimuls
js
clc
sbb
and
sbb
and
sbb
and
sbb
and
sbb
and
sbb
cmpsb
and
sbb
test
inc
sbb
stos
and
inc
cld
call
out
call
out
decl
ljmp
mov
jnp
pushl
xor
jno
add
jno
xor
jno
add
jno
xor
jno
add
jno
xor
jno
add
jno
xor
jno
add
jno
xor
jno
add
jno
xor
jno
add
jno
xor
jno
add
jno
xor
jno
add
jno
xor
jno
add
jno
xor
jno
add
jno
xor
add
add
jno
xor
jno
add
jno
xor
jno
add
jno
xor
jno
add
jno
adc
jno
ljmp
add
add
jo
jno
lock
xor
faddl
jno
js
jno
flds
jno
jnp
jno
fadds
jno
pop
xor
mov
xor
mov
xor
lds
add
jg
jno
les
jno
pop
xor
movl
jno
movb
add
add
add
jno
or
add
jno
or
add
push
pop
add
or
add
add
ja
add
mov
mov
add
jb
add
add
add
add
jb
add
mov
dec
add
int3
jb
add
jb
add
add
mov
add
add
mov
add
mov
add
sahf
add
mov
add
insl
add
popf
pop
add
inc
insl
add
add
add
add
fdivrp
ljmp
add
add
fdivrp
ljmp
add
rcr
incl
jo
add
mov
incl
fdivrp
decl
add
pop
fdivrp
lcall
add
add
decl
add
dec
fdivrp
fildl
add
pop
fdivrp
mov
fdivrp
fldl
add
pushf
fdivrp
incb
add
fdivrp
lcall
add
sahf
fdivrp
incl
add
pand
call
add
jno
sub
add
jno
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
jno
add
jno
sub
jno
add
jno
sub
add
sub
add
sub
jno
add
jno
sub
jno
add
jno
sub
add
jno
sub
jno
add
jno
lret
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
add
add
add
sub
jno
jmp
jno
sub
jno
call
add
stc
mov
push
sub
add
stc
mov
sub
add
jmp
add
jmp
jno
call
add
add
jae
add
jb
add
sar
adc
incl
mov
int
jmp
mov
jmp
mov
fdivl
jmp
push
lahf
sbb
fisttpll
sti
mov
cmp
add
add
cmp
ljmp
xlat
lods
push
stos
push
fwait
jb
sbb
pushl
call
sub
mov
lods
pusha
nop
or
jb
sbb
data16
lods
push
add
outsb
idiv
flds
add
enter
test
add
push
add
add
add
sub
data16
mov
sub
insl
jo
cmp
je
insl
ja
jns
push
decl
fidivrs
add
inc
add
inc
add
jae
xchg
inc
ja,pn
outsb
sub
sub
jmp
pop
jae
add
ja
insl
sub
insb
cmc
inc
bound
test
fisubrs
scas
aas
jno
scas
aas
jno
add
addb
jno
add
jno
add
add
add
jno
add
jno
lds
in
inc
cmp
mov
dec
and
aad
push
leave
lock
sar
lahf
fs
negb
insb
xlat
mov
ret
sub
js
or
xor
out
xor
inc
sbb
add
add
jno
fbld
push
push
mov
jge
pushf
mov
addr16
lods
imul
fists
out
ret
movsb
mov
sub
cmp
inc
shll
cmp
or
push
faddl
ds
and
sub
push
leave
mov
inc
mov
ficoml
call
add
add
add
add
add
sbb
add
add
add
add
xchg
add
add
add
add
add
int3
jb
inc
jb
add
sub
fisubrs
daa
call
scas
decl
jb
add
fbstp
ljmp
mov
inc
pop
rcrb
add
mov
inc
dec
sarl
das
mov
inc
cmp
adc
push
add
mov
jno
sbb
mov
jb
add
mov
sub
jmp
ljmp
add
add
add
add
add
add
add
add
add
add
add
add
add
lods
add
lods
add
add
ja
jbe
and
cmp
incl
insl
cld
jb
jge
das
add
ja
mov
add
jb
decl
add
push
cs
mov
lahf
pusha
push
push
cmp
jno
cmp
test
xor
jb
jno
mov
lea
insl
jno
lahf
push
nop
arpl
pusha
popa
push
mov
push
outsl
rorl
les
pop
lahf
push
jb
jbe
sub
dec
pop
add
jno
lahf
push
sub
bound
mov
jno
or
add
lahf
push
mov
aam
std
sahf
jno
sbb
add
lahf
push
int3
loopne
pusha
xchg
add
iret
xchg
iret
aam
xchg
mov
xchg
and
push
mov
cwtl
decb
sbb
lret
dec
ret
mov
shll
mov
int3
add
nop
xchg
dec
popf
mov
and
pop
add
add
add
add
stc
jne
call
imulb
loop
jno
int3
stos
and
jecxz
and
pusha
mov
add
add
add
add
add
add
mov
jb
call
jb
call
loope
outsb
sbb
dec
mov
shll
or
mov
jb
add
jb
lcall
jb
jns
add
je
pushf
jno
fsubrl
sub
fwait
pusha
push
enter
les
insl
cmp
into
and
sub
cmp
test
jno
and
imul
xchg
pushl
pop
or
je
imul
sbb
dec
hlt
push
imul
mov
and
outsl
jae
js
ljmp
pusha
add
bound
sbb
or
cmc
push
pop
das
push
push
and
enter
add
std
bound
js
and
jne
jb
push
lcall
outsb
add
cld
add
cld
decl
push
insl
push
mov
jno
scas
lds
add
jno
mov
mov
mov
int3
pop
add
jno
mov
rorl
jno
mov
ret
xor
arpl
mov
sahf
lods
jae
pop
add
jno
add
pop
add
add
add
jno
add
cmp
jo
xor
jae
pop
add
jno
add
jno
add
jno
stos
insl
adc
mov
add
pop
add
jno
add
pop
add
jno
add
and
add
dec
and
add
mov
adc
add
add
add
add
lods
add
add
add
add
sti
add
movsb
add
add
add
popf
add
stos
add
mov
push
add
inc
add
pop
add
aaa
add
adc
inc
add
add
add
sub
add
add
add
lods
incl
mov
pcmpeqw
scas
lcall
jb
stc
jb
call
jb
mov
jne
call
jb
fnstenv
call
jb
inc
jb
mov
mov
add
dec
add
dec
fwait
add
fs
push
jmp
inc
jmp
add
shll
xchg
add
sub
call
arpl
popf
jno
jb
jb
arpl
jb
data16
jne
jb
dec
data16
jb
arpl
daa
insb
dec
jb
arpl
add
add
jne
push
sub
push
and
popa
sub
jae
sub
incl
jno
pop
arpl
call
jno
add
jne
insb
in
pusha
outsb
in
insl
fs
insb
arpl
cwtl
add
add
dec
add
push
add
add
flds
inc
jno
add
mov
arpl
add
fiaddl
outsl
jno
add
jno
add
add
jno
add
jno
add
inc
add
sti
add
add
cmp
jb
inc
add
cmp
push
jno
add
jno
add
dec
add
jae
push
jno
add
lea
imul
add
jp
je
arpl
and
jno
add
sahf
add
add
add
add
add
adc
sbb
add
add
jmp
xchg
pushf
stc
stc
inc
and
cli
loopne
pop
adc
adc
cs
xlat
es
fcomps
sbb
rclb
sbb
rorl
sbb
rolb
sbb
stos
test
mov
xchg
out
sbb
xchg
out
lret
xchg
ficomps
jmp
jae
jmp
add
loop
imul
or
repz
add
xchg
push
push
rorl
add
rorb
dec
outsb
mov
add
adc
add
push
popf
mov
push
inc
dec
adc
add
jge,pt
or
dec
adc
sbb
mov
in
dec
adc
sbb
sbb
test
addr16
sbb
push
pusha
or
sbb
das
adc
add
sahf
sbb
or
lods
inc
rclb
add
xchg
mov
mov
add
add
dec
add
add
dec
add
add
add
cmp
pushf
add
add
jnp
add
add
jne
sub
push
add
std
jno
and
jne
xor
imul
data16
cmp
jo
dec
add
cld
std
cmp
or
dec
add
decb
jno
add
push
add
jp
dec
jno
add
jno
add
jno
add
lock
jno
pop
inc
jno
add
jno
add
jno
test
insl
fisubrl
outsb
jecxz
stos
int3
or
jno
mov
xchg
cld
leave
dec
mov
pop
movsb
jno
add
pop
add
xor
lea
add
jno
mov
xchg
ja
push
inc
fs
jno
inc
pop
inc
add
xchg
inc
mov
jle
dec
lahf
cmpsl
adc
add
scas
inc
sub
adc
pop
lahf
adc
cmp
rorl
nop
int
push
mov
nop
rorl
mov
mov
lret
sub
mov
pop
lret
sbb
mov
lds
sbb
test
xchg
loopne
test
xchg
mov
push
mov
or
jno
or
pop
mov
lods
inc
movsl
stos
ret
pop
stos
test
lds
jb
add
lret
mov
jno
add
xchg
fs
xchg
test
or
lahf
je
sbb
jb
pop
pushf
pop
inc
lahf
arpl
pushl
add
lods
inc
and
and
mov
and
push
incl
lret
mov
lret
mov
jno
int
fistl
test
or
movsl
insl
add
insl
je
push
and
fs
insb
incl
push
inc
pop
add
dec
push
inc
aam
inc
pop
fildl
push
int
push
pop
aam
dec
inc
cld
dec
jmp
pop
jne
xor
arpl
sub
sub
gs
sbb
outsb
js
fs
lods
pop
jno
nop
dec
inc
pop
cmpl
inc
pop
nop
aas
inc
inc
lea
push
addr16
inc
dec
sbb
add
push
push
pop
arpl
jno
cmp
ja
jno
mov
add
jno
mov
inc
arpl
inc
xor
inc
jno
movsl
jne
subl
xchg
lahf
insl
and
dec
mov
ds
lds
jae
inc
cs
inc
cs
dec
and
shlb
xchg
fcoms
jb
fldcw
jno
mov
sahf
loopne
push
mov
int3
inc
add
clc
mov
ret
loopne
push
dec
scas
daa
add
jno
shlb
xchg
loopne
movsb
subb
mov
mov
lds
int3
xor
call
movsl
inc
lahf
test
mov
add
mov
xor
mov
cmp
and
cmpsb
cld
sahf
cmp
shl
push
movsl
add
mov
add
and
shll
mov
lds
add
cmpsb
movsb
mov
adc
fnstsw
mov
rcrb
mov
sbb
dec
or
popf
jae
or
mov
inc
lods
stos
mov
inc
sahf
out
adc
nop
int3
lea
add
lahf
pop
mov
loope
pusha
pop
testb
jmp
and
lods
inc
sub
and
push
adc
adc
adc
lea
or
dec
leave
cld
fwait
jno
sub
outsb
or
call
inc
pop
push
cmp
mov
push
push
push
sarl
dec
add
arpl
movsb
push
pusha
data16
jno
sti
pop
insb
jo
jno
gs
bound
pop
arpl
outsb
outsb
mov
bound
and
add
inc
pop
dec
inc
dec
push
xchg
dec
pop
inc
lahf
ds
inc
mov
dec
mov
incl
insl
jns
jbe
popa
jno
test
jae
push
jecxz
xchg
cld
mov
add
pop
test
test
jae
inc
add
jno
mov
inc
dec
enter
mov
es
push
aaa
jae
push
jno
xchg
jno
mov
fs
mov
ja
test
jae
lods
test
jle
mov
push
loopne
push
mov
mov
inc
mov
in
add
fwait
add
mov
or
mov
xchg
loopne
movsl
mov
test
xchg
add
lds
ret
xchg
arpl
int
inc
movsb
lret
xchg
push
add
mov
cmp
mov
movsl
enter
mov
xor
sahf
push
test
stc
call
loopne
mov
shlb
dec
lahf
pushf
decl
movsb
pop
dec
adc
leave
or
jmp
ffree
pop
sub
scas
addr16
mov
out
imul
movsb
call
fisubl
les
movsb
fs
jmp
lret
adc
push
jmp
lods
scas
addr16
mov
pusha
test
movsb
pushl
pop
push
shrl
fs
and
pop
add
arpl
js
pusha
imul
pop
push
mov
imul
and
pop
data16
insl
sub
bound
add
pop
pusha
imul
push
inc
pop
sbb
data16
insl
in
pusha
jae
fsubrl
and
pusha
pop
jne
outsl
pop
arpl
outsb
imul
push
popa
push
incl
inc
pop
dec
inc
pop
jne
test
fwait
fs
mov
pop
loopne
test
enter
ret
rcrb
bound
cwtl
or
inc
mov
rcrl
test
mov
xchg
jae
xor
fs
inc
popf
pop
popa
cmp
imul
bound
movsl
pusha
pop
dec
test
jno
mov
push
pop
rcrl
xchg
addr16
fwait
fs
jbe
pop
add
xchg
jb
jle
pop
adc
mov
shll
aas
mov
add
xor
fwait
inc
xchg
ret
lahf
or
cmpsl
cltd
sahf
call
cltd
xchg
mov
xor
or
mov
jno
mov
inc
mov
mov
mov
shll
test
add
lahf
mov
mov
lods
loopne
ret
cmpsl
mov
mov
mov
add
mov
stos
lret
mov
jb
add
roll
mov
xor
cs
lcall
mov
cmp
mov
inc
and
add
jecxz
dec
das
fidivrl
add
mov
jmp
mov
add
movsl
and
add
stos
adc
jb
add
jb
add
in
scas
ljmp
mov
clc
push
push
add
inc
inc
inc
cwtl
call
inc
dec
inc
xor
mov
popa
jae
lahf
push
lcall
sub
scas
push
arpl
jnp
insl
je
push
sub
adc
incl
pusha
outsb
add
gs
popa
insl
arpl
arpl
mov
inc
outsb
data16
bound
data16
mov
popa
fs
pop
imul
sti
push
jae
jl
add
add
insl
add
ja
push
jno
add
xchg
add
mov
gs
add
pop
add
jno
add
mov
add
jno
add
lret
jno
add
add
jno
add
testb
jno
add
add
jno
ss
jno
dec
lods
int3
jne
test
jp
add
nop
inc
daa
xchg
jne
dec
xchg
dec
pop
aas
cltd
dec
push
inc
mov
insl
cmp
mov
repz
ja
jmp
in
fs
fidivrl
iret
fcmovbe
add
std
fcomps
add
out
cld
or
fstps
add
sub
sarb
cmp
sub
cmp
dec
popa
rorl
dec
mov
dec
les
add
filds
insl
mov
hlt
movsb
jne
adc
push
std
rorl
stc
mov
dec
mov
out
lock
fsubr
or
xor
sub
rolb
push
ss
cmp
fisubrs
sub
fsts
and
mov
jg
lret
cmpsb
lea
faddp
gs
aam
pop
inc
fdivl
jle
out
and
mov
add
and
and
incl
daa
movsb
lahf
cmp
mov
xchg
pusha
push
pop
inc
insl
test
pop
fwait
nop
subl
add
add
xchg
xchg
mov
filds
push
filds
inc
call
popa
js
cli
popa
dec
inc
add
jl
push
push
xchg
inc
pop
outsb
sahf
push
inc
dec
pushf
jno
push
xchg
inc
inc
inc
pop
add
add
fs
pop
jae
dec
je
jns
add
add
cmp
xor
xor
xor
add
stos
ljmp
sbb
sub
cmp
popf
hlt
fsubs
lock
sub
mov
sbb
inc
xor
add
jno
mov
push
lods
inc
jno
push
mov
mov
mov
dec
nop
or
lods
pop
imul
mov
test
mov
jnp
out
pop
cmpsb
icebp
mov
add
rcll
cmp
jo
sbb
jnp
hlt
mov
insl
movsb
sbb
add
xchg
out
stc
xor
test
cld
popa
stc
test
sti
and
in
iret
push
popf
xlat
shll
call
popa
imul
jle
addr16
push
inc
xor
or
push
or
sbb
inc
test
das
inc
jne
aas
sub
das
sbb
add
fcmovnbe
pusha
int3
int
push
add
int3
pop
dec
push
push
add
add
bound
dec
stc
pushf
cmp
lcall
mov
dec
add
sbb
in
xlat
sub
shlb
xor
mov
sarb
iret
sti
sub
mov
mov
add
dec
mov
mov
inc
mov
mov
movsb
mov
dec
stos
pop
mov
inc
and
mov
arpl
add
ret
mov
ret
add
add
mov
movsl
adc
mov
in
lcall
rcr
rorl
mov
ror
rol
add
xchg
popf
sbb
popl
pop
in
xchg
lea
rorb
mov
sar
incl
inc
adc
jo
add
adc
sbb
jno
cld
adc
in
pop
mov
in
ret
call
add
jno
push
mov
pop
lahf
popa
mov
or
add
jno
push
mov
out
dec
mov
jno
pusha
mov
popf
dec
mov
les
fdivrs
add
jno
fnsave
add
xor
cltd
in
add
xchg
test
jo
mov
cwtl
test
lods
mov
add
adc
repnz
roll
jno
pushf
aaa
xor
loopne
xor
add
jne
cld
js
xchg
out
ja
in
test
and
mov
and
cmc
and
jbe
fnstcw
push
lret
dec
fnstenv
pop
enter
add
jge
xchg
in
jbe
jno
jne
daa
outsb
sahf
repnz
insb
mov
call
push
aaa
shl
push
mov
cmp
cmp
ljmp
dec
fwait
inc
enter
rcrb
push
xor
aas
leave
dec
mov
sub
decl
aas
mov
ret
add
dec
mov
jb
add
add
mov
cmc
add
mov
and
xchg
add
mov
lods
jge
sbb
add
dec
fld
sbb
sbb
mov
mov
push
mov
call
nop
lcall
and
cmova
pop
or
pop
add
pop
inc
inc
add
push
pop
pop
add
dec
pop
pop
sbb
pop
add
mov
add
add
xchg
adcl
sbbb
cmpsb
stos
mov
cwtl
add
add
jb
js
imul
leave
pop
push
inc
fstps
push
into
imul
insb
jp
cli
pop
arpl
fs
xor
cmp
pop
pop
push
add
insl
push
popf
xor
jmp
adc
or
or
callw
jno
push
push
je
and
pop
mull
cmp
nop
mov
sub
jno
pusha
add
and
fsubl
sbb
sbb
popa
jecxz
adc
rorl
jno
mov
rorb
movsb
ret
call
jno
test
jno
mov
add
adc
push
add
and
loop
jbe
or
add
xchg
aam
pop
add
add
and
ja
xor
add
es
and
add
jecxz
pop
sbb
add
cmp
jno
sbb
and
sbb
or
pop
or
sbb
xlat
pop
je
or
jge
iret
or
add
cmc
in
jo
shlb
push
add
add
in
mov
push
arpl
stc
add
std
in
movsb
mov
push
scas
mov
inc
std
decb
xor
popf
add
xchg
pop
inc
std
gs
aad
mov
lret
jb
add
test
out
dec
add
movsl
call
xchg
sub
xchg
add
scas
ds
and
jb
add
adcb
jb
add
mov
in
aas
lcall
and
add
add
ljmp
fcmovnbe
xchg
adc
shrb
shl
int
rclb
aam
xchg
adc
std
call
add
add
imul
push
push
inc
add
jae
imul
shl
incl
dec
dec
inc
enter
sub
jecxz
push
hlt
std
test
jle
xlat
lret
fists
hlt
in
rol
push
jmp
jmp
jno
fsubr
mov
clc
out
jno
or
adc
adc
insl
xlat
or
xchg
sbb
cmp
out
xor
in
daa
sub
pop
incl
add
orl
mov
sbb
add
jno
sub
popf
jmp
dec
push
inc
jmp
pop
inc
aaa
jmp
xor
sbbl
js
int3
jae
jno
sub
lds
add
jno
pusha
insl
sbb
mov
add
and
sub
mov
and
or
addr16
hlt
dec
lock
cmp
mov
cmp
mov
les
aad
add
call
out
adc
mov
add
pop
mov
test
clc
daa
push
sbb
jmp
call
add
pusha
cli
into
stc
out
ss
cmp
push
add
pop
add
add
ror
ds
xchg
fnsave
fmul
xor
add
sub
xchg
bound
stc
jp
test
cmc
clc
mov
dec
aad
cwtl
dec
stc
pop
jmp
xchg
pop
icebp
xchg
cmpb
mov
fs
movsl
push
mov
mov
cmp
mov
jmp
add
xchg
jmp
add
jecxz
add
ljmp
cld
pushl
int
xor
xlat
add
stos
cmpsl
test
mov
mov
iret
imul
out
add
jne
rcll
inc
add
add
jmp
in
es
imul
cmpsb
decl
pop
pop
push
orb
hlt
orl
cmpl
cmpsb
test
mov
cs
enter
jge
inc
push
fadds
add
mov
pop
pop
jno
add
jno
jbe
jno
sbbb
imul
inc
fdivrl
cmp
jno
mov
mov
push
add
jno
adc
mov
pop
xor
fstl
les
jo
decb
aas
stos
jmp
cli
in
lahf
lods
cmp
shll
inc
aam
into
nop
nop
incb
mov
hlt
scas
cmp
xchg
xor
push
imulb
addl
int3
cmp
add
xor
fsubrs
cmc
xor
jno
cld
xor
inc
jmp
jne
gs
pusha
divb
lret
sub
push
lret
xor
and
and
call
movsl
in
adcb
insb
xor
or
outsl
push
jmp
adc
sub
add
lds
je
jmp
addl
mov
jno
jno
add
in
xchg
cmc
lods
mov
arpl
stos
loop
add
mov
mov
lahf
stos
xchg
out
call
mov
addb
lcall
dec
pop
push
arpl
lock
bound
into
mov
in
sti
sahf
movsl
fsubrp
hlt
fcoms
lock
enter
in
out
sub
test
cmc
hlt
dec
and
fcompl
adc
push
sub
jmp
test
push
fldt
retw
add
rol
push
iret
int3
fcompl
out
fcmovnbe
pop
add
add
mov
mov
scas
cwtl
add
add
xchg
lds
xchg
stc
repnz
pop
add
add
pop
insl
imul
je
add
js
scas
je
jle
push
jg
mov
ja
pop
test
bound
dec
mov
and
push
push
or
add
jno
ds
dec
cs
pop
cmp
addr16
xor
dec
push
sub
inc
pop
or
pop
and
push
pop
jno
test
aam
mov
in
int3
mov
cmpsl
mov
jmp
dec
push
sub
dec
dec
insb
jp
pop
lret
pop
jno
sub
mov
fldenv
daa
xchg
lods
pop
and
cli
sub
and
lea
sub
mov
orb
loope
xchg
xchg
ljmp
fcos
cmp
outsb
sbb
ja
jo
pusha
push
jp
ja
push
pop
or
nop
inc
cld
arpl
lods
bound
mov
dec
adc
fmuls
inc
cwtl
cmp
push
add
inc
jno
int
pop
or
add
rorl
xchg
push
js
jmp
lods
pop
mov
mov
add
daa
sbbb
daa
insl
add
or
sbb
cli
xor
add
jne
xchg
ret
push
repz
pop
add
inc
or
add
cmp
add
out
mov
fwait
lcall
pop
leave
xor
je
clc
xor
xchg
add
add
jns
add
mov
add
pushf
xor
mov
and
add
cmp
jl
sub
cmp
add
pop
push
and
std
dec
jnp
sub
add
je
adc
add
mov
sbb
add
cld
js
arpl
dec
cld
ljmp
lcall
lock
mov
addb
mov
and
xchg
test
rclb
xchg
mov
cwtl
xchg
jp
cwtl
mov
mov
and
add
jno
or
sbb
adc
jns
add
jno
jp
xchg
jo
imul
gs
pop
outsl
push
xor
push
dec
pop
push
jbe
scas
cmp
mov
lahf
push
push
cmp
add
jno
add
dec
xchg
add
jno
adc
pop
in
or
or
repnz
sbb
push
or
cld
adc
iret
std
and
je
push
push
mov
or
sub
dec
sbb
dec
sbb
or
scas
fsubs
dec
cmpsb
imul
adc
cmp
push
add
dec
jo
push
sub
das
dec
sub
inc
popa
sub
dec
sbb
and
lret
push
sbb
aad
sub
jne
add
jnp
divb
jg
xchg
popf
outsl
cmpsb
mov
cmpsb
inc
mov
movsl
inc
mov
sbb
sub
push
push
ret
push
mov
push
add
pop
add
in
pop
repnz
mov
mov
fwait
cwtl
xorb
fwait
call
repnz
setg
fucomip
out
shrb
arpl
jmp
push
movsb
dec
mov
les
mov
fwait
imul
mov
cmp
fisttps
fmuls
fisubl
add
enter
mov
stc
mov
scas
mov
lock
lret
enter
jge
pushf
xchg
outsb
mov
in
mov
xchg
mov
outsb
popa
jb
fstl
insl
data16
push
push
data16
or
sbb
inc
imul
add
push
ss
add
in
sub
mov
pop
push
aam
pop
push
call
ds
dec
jno
sbb
jp
push
and
and
xchg
jae
pop
lahf
ret
and
fstps
push
xlat
add
sbb
cmc
or
iret
or
dec
iret
push
add
push
mov
pop
xchg
cmc
sarb
stos
mov
jg
out
xchg
jmp
scas
mov
jae
jecxz
dec
jecxz
jmp
iret
mov
mov
fnstsw
push
fcompl
add
seto
mov
push
jmp
jb
jmpw
add
jne
jl
jge
subl
jle
rcll
cltd
add
mov
ret
mov
mov
add
mov
mov
repnz
cld
fbstp
sub
stos
ja
lret
add
push
cmc
popf
out
pusha
subb
gs
std
fiadds
lret
lcall
jns
ja
lahf
mov
xor
addr16
decb
cli
cs
in
loope
pop
ljmp
add
inc
add
ja
lahf
rorl
pushl
es
mov
aam
lds
cld
xchg
insl
add
cmp
or
es
and
jge
jb
add
xchg
cmp
jmp
repnz
add
data16
xchg
sub
add
push
fwait
add
into
xchg
lea
dec
or
xor
aaa
outsl
push
xor
sub
cli
pop
add
cld
prefetcht1
add
cmp
loop
and
out
add
mov
movsb
mov
xchg
mov
ds
ljmp
add
daa
inc
dec
jne
inc
or
and
inc
xchg
add
add
pop
push
and
mov
imul
sbb
add
jno
sti
incl
ljmp
pop
or
lock
add
ret
xor
mov
mov
lret
ss
test
xor
mov
aaa
inc
jp
push
pop
mov
cs
pop
arpl
addr16
jbe
pop
jns
flds
add
and
add
in
or
jnp
or
ja
sti
or
and
or
or
test
dec
jno
jns
in
dec
test
fwait
xorb
mov
cmp
sub
xchg
inc
in
push
loop
int
lret
pop
mov
jae
mov
das
shll
jl
in
out
roll
mov
das
shll
addl
enter
les
into
pop
int
aad
lret
jno
popa
mov
mov
leave
add
push
adc
and
cld
jb
in
imul
cmp
add
imul
jb
add
and
cmpsl
ss
push
loopne
or
or
js
push
cmp
incb
inc
add
mov
add
aad
sti
sbb
xchg
inc
jae
xor
jg
sub
popf
or
pop
sub
cli
xchg
sbb
inc
sub
sub
out
cmp
jle
push
cmc
fiaddl
inc
sbb
sub
fadds
add
push
sbb
cmp
add
add
popl
add
mov
cmc
mov
cmp
sahf
cmpsl
fdivs
pop
outsb
pop
pop
sub
int
nop
xchg
pushf
xchg
je
cmp
in
xchg
popf
gs
mov
jge
add
fsubrp
add
gs
cmp
jmp
sti
adc
add
mov
jno
push
push
das
and
add
std
insl
es
daa
inc
xlat
add
jno
mov
xchg
mov
mov
jle
inc
jg
pushf
add
jno
cmp
jne
add
iret
inc
and
xchg
push
jle
cmp
leave
sub
push
mov
inc
adc
insl
xchg
cltd
mov
add
loope
jno
nop
cmpsl
add
dec
add
jno
jne
clc
add
into
mov
jge
xchg
call
jp
test
lea
clc
xchg
cmp
out
nop
mov
loop
stos
fidivs
xchg
shl
inc
add
add
add
scas
lds
jmp
xor
dec
leave
add
or
in
mov
pushf
js
sbb
or
cmp
push
push
or
fs
sbb
push
add
cmp
mov
add
jmp
fidivl
in
add
ret
sub
and
push
loop
sbb
mov
push
mov
cltd
jne
xchg
mov
aad
fcmovu
xorl
push
addl
in
jb
rorb
inc
ret
dec
mov
lock
jmp
movsl
jae
xor
mov
mov
jne
lea
adc
jne
addl
add
mov
int3
lock
inc
add
jb
or
adc
fmull
in
fdivs
inc
add
enter
mov
jno
mov
int
mov
nop
jp
loopne
jnp
or
aaa
in
add
cmc
ltr
decl
ss
aaa
in
pop
std
cmp
js
jne
nop
inc
les
fidivs
call
test
pop
js
add
add
jl
ljmp
stos
adc
ficoms
add
xchg
push
sbb
dec
push
and
jle
lcall
jo
sub
add
fcom
add
sbb
ljmp
lret
cmp
adc
jle
xor
jno
out
pop
in
adc
test
call
mov
lods
repz
outsb
insb
push
fadd
jle
dec
popa
fs
je
add
xchg
mov
shrb
popa
or
adc
mov
out
inc
mov
xor
cwtl
clc
sub
nopl
push
jmp
pop
outsl
push
mov
push
outsb
loope
push
xor
mov
jmp
cltd
call
or
mov
data16
loopne
fildll
jp
adc
add
clc
call
cmp
push
add
insl
add
cli
fdivrp
aaa
sbb
jmp
lea
mov
jb
test
out
or
sahf
shll
jp
mov
int
xor
cli
inc
sub
decl
dec
jmp
mov
mov
add
add
jb
mov
xor
mov
pushf
or
push
jge
sbb
xchg
push
push
add
add
or
mov
push
mov
shlb
push
xlat
inc
in
sbb
add
adc
movl
pop
lea
add
mov
adc
pop
sbb
into
aas
add
push
sbb
jne
mov
lahf
jbe
dec
add
dec
aad
dec
call
add
subb
add
push
xor
pop
or
in
xorl
add
mov
ljmp
imul
jae
push
or
sbb
xchg
xchg
add
add
rorb
movsl
call
add
sub
mov
jge
inc
gs
push
enter
mov
ret
jae
xchg
jb
push
inc
add
stos
xchg
sbb
push
xorl
pusha
sti
jo
or
addr16
add
xchg
iret
dec
dec
cmp
cmp
mov
sbb
cmpsl
cmp
xor
repnz
add
test
push
test
cmp
xor
or
ljmp
in
aas
icebp
xor
xor
adc
ret
and
jno
jmp
fnstsw
cli
inc
jno
rcr
dec
dec
mov
add
test
mov
mov
jmp
or
scas
or
jmp
and
add
test
scas
scas
mov
in
faddl
test
decb
sub
cmp
out
pushf
call
gs
je
cmp
pop
lock
push
daa
icebp
mov
jns
or
jmp
add
add
div
jo
call
xchg
push
add
int3
out
repz
incl
sub
mov
adc
ds
xor
mov
mov
sbb
or
jae
fwait
jmp
jl
and
pushf
stc
mov
push
mov
int
dec
call
jnp
sti
add
mov
jae
mov
call
idiv
inc
daa
cwtl
std
jnp
in
daa
add
sbb
cmp
outsl
add
jne
sub
jl
out
or
lods
fadds
clc
mov
inc
std
push
movsb
fnstcw
and
psllq
fsin
ds
std
jae
repnz
mov
and
jno
sub
je
pop
pop
jo
cmp
out
in
add
cli
and
test
jmp
and
xor
mov
pop
fistl
aam
add
jg
inc
inc
loop
nop
xchg
imul
sbb
add
in
test
into
mov
out
in
xor
lock
jl
add
jno
pop
inc
pop
add
jg
add
add
inc
loopne
xchg
fsubr
fldcw
mov
xor
cmp
cli
inc
jno
dec
xor
outsl
jnp
xlat
call
inc
popf
jg
dec
sub
les
add
xlat
addb
fimuls
mov
cmp
test
and
mov
orb
adc
or
cld
dec
lods
cli
dec
cs
repz
in
mov
cmp
shll
cmp
jb
fdivrs
scas
inc
push
cltd
add
je
cmc
mov
dec
jmp
outsl
xchg
jae
in
pop
or
mov
push
add
int3
out
mov
xor
popa
add
inc
add
repz
push
movsb
aad
inc
mov
add
test
std
adc
and
neg
or
sbb
mov
std
jg
pop
inc
jae
xchg
rolb
pop
add
xlat
sub
add
mov
add
lret
shl
cmp
jbe
xchg
stos
mov
add
jae
mov
nop
push
fadds
push
push
pop
cmp
xor
mov
xor
jmp
xlat
inc
out
pop
mov
xor
mov
adc
sbb
xchg
push
pop
std
cmpsb
add
pusha
ss
clc
pushf
incl
or
dec
out
imul
mov
add
aas
jno
shlb
movsb
sbb
jmp
pop
ds
cmp
mov
and
adc
pop
mov
out
xchg
inc
pusha
xor
inc
call
add
fs
call
scas
repz
scas
cmp
push
bnd
call
add
cli
mov
push
mov
add
mov
jno
mov
andb
add
call
push
jb
je
inc
mov
xor
scas
xor
adcb
pop
sti
jno
leave
cmp
add
test
sar
int3
sti
xor
lea
push
xor
mov
sub
add
jmp
dec
pop
sbb
movsb
in
add
aaa
out
jp
jmp
pop
shlb
dec
dec
push
jmp
dec
mov
ret
mov
out
cmp
mov
sti
cmp
push
push
stos
adc
and
ds
jb
fldt
sbb
or
imul
inc
lea
in
push
fdivr
add
jl
lea
push
call
adc
mov
test
xor
adc
adc
into
adc
add
loop
adc
decb
push
jecxz
sub
out
and
js
cmpl
inc
inc
push
movb
add
xchg
pop
in
adc
std
xor
xchg
inc
clc
cmp
fwait
sbb
cmpl
lea
xchg
mov
mov
or
jg
popa
lds
xchg
test
adc
cmpsl
pop
push
inc
push
adc
add
mov
xchg
and
mov
ret
in
add
inc
clc
ljmp
lods
inc
add
je
push
push
ret
jle
jl
out
pop
ljmp
sar
movsb
repz
mov
movb
je
jmp
shlb
push
cmpsl
add
fdivr
imul
push
loope
int
jbe
test
add
push
flds
cli
xor
leave
xor
andl
xchg
sub
add
jmp
lock
jns
jb
jno
fs
cld
inc
push
jns
outsl
xor
gs
push
lods
enter
push
in
fucomp
cmp
repz
push
fstp
dec
cmp
add
shlb
mov
jnp
fisttpl
je
aaa
inc
add
jb
pop
shlb
fs
iret
dec
fnstsw
mov
push
mov
aaa
call
arpl
iret
pop
jl
xor
or
push
int3
cmp
jl
adc
iret
jmp
xor
mov
into
subl
xor
aam
jp
sbb
add
jb
inc
cmp
clc
xor
mov
movsl
inc
jo
cld
mov
enter
jo
add
or
add
inc
cli
orb
jmp
aas
cmp
add
pop
int3
out
push
mov
mov
les
add
jmp
sbb
push
push
and
sbb
dec
dec
push
stos
rcll
fisttpl
lds
aam
jb
jp
out
dec
add
lea
add
add
cmpl
mov
mov
jno
add
loop
sub
mov
repnz
xlat
incl
mov
lds
inc
hlt
data16
jl
push
xchg
scas
sbb
pushl
rclb
xor
xchg
mov
js
jno
aam
xchg
xchg
xor
xor
lods
addb
push
dec
aas
cli
push
pop
fistpl
inc
add
add
pop
pop
pop
fcmovnbe
xor
subl
std
fsubrs
int
inc
insl
int
jp
add
decb
jnp
leave
adc
cwtl
lcall
add
inc
loopne
insl
clc
rcrl
sbb
insl
adc
ljmp
mov
cmpsb
fldt
jne
add
mov
jb
insl
fdivrs
ret
and
dec
mov
jge
add
ss
in
call
jg
int3
call
icebp
mov
imul
nop
add
lret
jmp
daa
and
das
lret
mov
or
adc
add
fs
xor
call
xchg
ja
inc
mov
add
ss
add
popa
cs
out
leave
lret
das
add
stos
mov
xlat
and
jb
inc
test
pop
add
popa
movl
jmp
sub
pop
cwtl
add
jae
xchg
ficoml
or
mov
sbb
add
fldl
adcl
push
dec
inc
incl
xchg
inc
lock
sbb
out
mov
inc
sub
mov
enter
popf
test
jnp
add
push
xor
lea
pop
add
or
incb
add
aaa
add
xchg
dec
scas
add
add
testb
aad
adc
dec
push
or
sahf
cs
add
insl
sar
mov
subb
adc
movb
mov
jno
inc
mov
sbb
xchg
dec
adc
fdivs
sbb
out
push
add
add
and
add
outsl
cmc
aas
jno
aaa
push
dec
ret
mov
xlat
jle
add
sbb
mov
mov
add
add
call
shrl
add
dec
out
mov
jmp
sub
daa
sbb
jne
jno
mov
or
inc
add
enter
or
cmc
out
enter
rcr
lock
dec
into
add
jno
jns
es
add
mov
bsr
leave
pop
jnp
sahf
enter
fdivr
inc
jno
mov
daa
or
mov
fistpll
mov
adc
jmp
jb
add
xor
shlb
and
sbb
ret
mov
sahf
call
push
out
aas
jmp
xor
loopne
mov
mov
push
ret
mov
stc
sbb
cmp
push
xchg
shufps
inc
mov
sbb
arpl
pushf
call
stos
xchg
pop
lods
divb
add
push
movsb
add
and
or
dec
add
push
rcll
pop
jl
or
add
push
add
ret
add
mov
in
sbb
add
fistl
push
push
incl
into
add
mov
fadds
in
inc
add
fadds
push
jmp
jnp
and
add
add
and
push
jmp
in
out
add
mov
decl
flds
push
repz
and
fadds
add
and
jno
aas
and
pusha
jg
adc
clc
xchg
push
adc
fwait
push
sbb
xlat
add
clc
fwait
push
adc
push
jl
jns
inc
add
xchg
push
xor
addr16
aad
adc
imul
pop
rorb
xchg
js
xchg
jnp
lea
jge
xchg
adc
in
sub
add
cltd
add
add
pop
jl
add
mov
sub
jge
add
add
mov
test
fdivr
inc
sub
dec
in
mov
jno
mov
sti
iret
adc
into
imul
add
mov
jmp
jp
fmul
insb
les
andb
call
xor
sub
mov
inc
jmp
testl
jb
je
lahf
mov
imul
cwtl
mov
mov
push
add
xchg
mov
dec
outsb
push
pop
popa
jb
add
ficomps
add
jb
inc
mov
mov
jae
mov
ret
incb
jnp
add
jle
mov
mov
push
adc
ds
imul
jb
add
in
aas
and
pop
dec
xchg
jns
push
gs
incb
enter
jl
pushl
mov
adc
inc
mov
lcall
les
mov
and
mov
xchg
add
mov
rolb
pop
clc
ret
dec
pop
jl
cmpsb
jmp
into
mov
lods
add
sbb
jne
icebp
int3
loop
add
or
setne
ret
dec
andl
decl
dec
andl
lcall
leave
xchg
inc
in
sarb
ja
add
inc
pop
ja
test
add
inc
jno
cmp
dec
dec
adc
xchg
ja
mov
int
jbe
lahf
adc
pand
and
lret
push
and
cmp
pop
or
outsb
push
std
ss
jae
sbb
sar
push
cmpsl
cmpsl
push
or
sar
push
add
repz
push
ficompl
aad
mov
jg
jno
call
add
pusha
xchg
xor
or
test
xor
dec
add
lock
call
push
jbe
imul
fadd
ljmp
push
mov
cmpsl
and
fwait
mov
xchg
mov
mov
inc
jne
jmp
push
push
dec
stc
mov
sub
sbb
ja
stos
inc
aaa
add
jb
push
je
push
rcl
adc
sub
cld
call
sub
dec
mov
mov
sub
icebp
mov
adc
sub
cld
push
xor
sub
inc
in
ret
je
out
out
jb
add
outsl
add
jb
push
jb
cmpsl
and
jb
mov
jns
add
pop
mov
xchg
mov
push
mov
xlat
pop
test
mov
xchg
adc
dec
ljmp
sbb
add
inc
cld
andl
push
add
add
adc
cmp
cmpsb
add
or
add
sub
jne
cmp
je
add
scas
add
pop
push
push
jmp
je
add
jne
push
pushl
rclb
jno
inc
add
data16
jo
add
and
or
dec
push
scas
jmp
add
add
pop
push
pop
inc
jno
xchg
mov
test
inc
add
test
add
lods
push
jne
xchg
ljmp
sub
lea
sbb
inc
outsb
inc
or
add
push
mov
test
jno
add
lods
scas
cmovb
sar
test
test
add
rorb
push
push
sub
inc
loope
mov
test
orb
sub
xor
add
sti
adc
jmp
enter
cmp
add
jne
mov
sbb
adc
add
inc
icebp
push
repnz
hlt
addl
cld
pop
xchg
repz
add
bndldx
gs
imul
push
rcll
cltd
pop
mov
jno
mov
aad
je
into
xor
push
dec
adc
jmp
push
adc
mov
push
and
jl
out
cmp
out
out
mov
stos
data16
push
push
push
sbb
xor
xorl
add
adc
push
daa
push
push
pop
push
inc
jmp
mov
mov
push
add
xchg
sub
test
add
push
adc
add
adc
addr16
ud0
cmp
add
add
add
xchg
dec
cld
push
xchg
dec
or
jp
or
cld
mov
mov
cld
pop
les
flds
mov
hlt
ss
clc
mov
enter
add
jl
cld
add
add
push
push
jge
push
inc
pop
mov
fcmovne
or
mov
jmp
add
mov
ljmp
call
jno
mov
jbe
mul
pushf
arpl
add
pop
pop
mov
jl
jmp
or
push
cmpsb
xlat
push
mov
add
jno
add
test
add
inc
lcall
pop
into
mov
add
and
scas
test
mov
inc
rorl
jno
mov
popf
mov
clc
cmp
adc
mov
in
and
cmp
fcoml
popl
mov
mov
imul
std
mov
out
inc
or
dec
add
lods
mov
out
xor
push
out
inc
adc
add
adc
shl
test
inc
pop
rorl
es
jmp
mov
xor
adc
cld
and
xor
stos
lret
add
inc
xchg
stos
or
add
jle
shll
or
aam
mov
test
popa
dec
xor
in
cmp
jmp
add
mov
mov
or
add
pushf
into
mov
subl
adc
inc
dec
jl
xchg
bound
mov
mov
sti
xor
shrl
lock
mov
shl
push
mov
inc
inc
add
cwtl
cld
mov
cmpb
addr16
je
add
xor
cmp
pusha
sbb
aam
add
or
or
mov
adc
cmpl
aam
push
lea
jp
add
in
mov
std
rcll
jae
inc
idiv
cmp
or
push
add
add
inc
add
jle
jae
filds
mov
das
push
leave
ret
inc
test
push
jno
pop
cld
add
mov
aam
add
and
cld
roll
push
es
or
jle
les
inc
xor
xor
mov
inc
adc
mov
add
mov
mov
mov
jns
roll
ljmp
mov
stos
pop
push
shl
jno
repz
shrl
mov
test
mov
jno
xor
xchg
mov
or
icebp
mov
xchg
imull
mov
adc
mov
stos
mov
shr
dec
test
inc
jno
jb
in
mov
pop
cld
cmp
pop
sub
mov
fs
popa
rcr
sahf
stos
add
inc
jmp
pop
mov
mov
push
and
aas
dec
scas
sub
mov
mov
xor
ljmp
bound
mov
in
pushl
call
sub
jle
adc
jne
div
orl
out
ja
aas
stos
jb
mov
sbb
ss
add
cs
rclb
jb
je
jmp
sub
mov
sub
push
scas
xor
lods
bound
jne
mov
cld
mov
mov
add
fwait
rcrb
ret
rclb
dec
mov
sbb
push
mov
pusha
jge
add
add
lea
lea
imul
rcrl
fiadds
add
jb
inc
hlt
popf
mov
cld
push
movsl
dec
hlt
push
inc
adc
fldl
mov
push
fldl
mov
push
addl
pop
pop
mov
xchg
push
jmp
lcall
add
shlb
add
push
out
jg
jmp
aas
clc
and
incl
and
or
adc
lcall
mov
lods
sub
sbbl
cmp
fstpt
pop
mov
add
mov
add
es
push
jmp
add
push
aas
adc
call
mov
ljmp
add
mov
push
leave
mov
add
repnz
add
mov
mov
mov
sub
mov
lods
ficoms
add
add
mov
cld
jae
jmp
call
es
jmp
xchg
incl
dec
imulb
ss
out
sub
sbb
cmc
mov
inc
jno
sub
movsb
xchg
push
sahf
test
lock
mov
dec
xchg
add
add
shl
scas
idivl
jb
dec
out
mov
push
pop
adc
fiaddl
push
insl
std
mov
jmp
scas
xchg
rol
dec
add
jae
cli
inc
jne
cld
dec
or
jmp
jae
mov
sub
xchg
or
adc
out
sub
or
jb
mov
in
gs
add
cwtl
std
fldl
add
sub
mov
lahf
add
fcomip
jo
add
cld
add
fcoms
xchg
sarl
incb
push
push
scas
testl
inc
cwtl
jne
sbb
jne
jmp
jl
or
call
std
incl
dec
sub
sbb
inc
adc
cltd
push
xorb
cld
dec
add
and
call
add
sbb
pop
leave
dec
stos
push
orl
add
dec
push
push
xor
mov
fidivs
ret
jge
add
aas
cmc
inc
add
jecxz
arpl
test
cltd
jge
pop
xlat
mov
add
push
push
mov
cltd
add
mov
cwtl
push
leave
xor
or
dec
jl
add
ljmp
fiaddl
add
out
add
pop
add
jno
xor
and
jae
add
loop
test
mov
inc
jmp
fcmovne
pusha
inc
jmp
add
addl
add
inc
jno
fadds
xchg
push
push
popf
adc
add
mov
call
pop
outsb
adc
adc
mov
jns
call
jno
out
jl
lcall
les
test
adc
push
test
add
fmul
mov
add
mov
and
les
jb
pop
add
lods
decb
out
insl
jae
cmc
in
daa
sub
mov
stos
jb
push
out
int3
adc
insl
sbb
xor
xor
sarl
or
loop
jmp
jb
mov
jb
add
test
dec
bound
movsl
xor
add
jp
cmp
adc
faddl
adc
mov
andl
imul
pop
leave
dec
add
push
xchg
pusha
and
fildl
add
push
lea
mov
fadds
lea
dec
cmp
mov
inc
pop
andl
adc
add
lock
add
or
add
cwtl
lcall
adc
jns
jne
addl
sub
dec
lea
and
sar
add
xchg
xorl
mov
inc
aaa
je
fnstenv
jo
jne
pop
jo
fisttpl
xchg
out
in
jne
pop
scas
gs
jae
add
out
mov
popa
push
mov
mov
push
call
out
jo
add
in
out
cltd
dec
jmp
and
and
jae
cmp
cs
jne
add
ljmp
mov
cwtl
add
mov
add
js
in
cwtl
outsl
jge
call
mov
stos
stc
ret
lahf
dec
xchg
js
dec
sub
add
push
jb
inc
push
insb
inc
fisttpll
add
fwait
push
lods
iret
test
cmp
jnp
jb
in
xchg
cmp
jmp
push
mov
add
out
test
mov
or
jb
jmp
inc
jno
cmp
xor
icebp
push
cwtl
push
add
pop
jbe
lods
test
jnp
sub
cmp
test
xlat
lods
pop
lahf
test
lds
cli
inc
aad
fiadds
jne
push
test
clc
out
fldcw
add
ret
idivb
jne
add
pop
aaa
test
je
lret
stos
sbb
add
sti
fisubl
mov
jmp
stos
dec
xchg
add
insl
call
sbb
inc
sub
clc
mov
sbb
mov
mov
add
mov
inc
or
jb
out
je
or
mov
or
mov
pop
aaa
pop
leave
mov
add
mov
cmp
add
loopne
push
std
mov
sub
add
sub
mulb
cmp
scas
push
jge
cltd
dec
lea
push
push
andb
call
add
xor
jno
jl
cmpsb
orl
call
arpl
leave
xor
jmp
cmp
add
jno
push
mov
push
xchg
out
mov
xchg
leave
lcall
lea
in
mov
add
jno
push
lea
int3
dec
mov
pushf
add
sbb
inc
and
inc
add
mov
ret
insl
push
dec
mov
sub
add
add
aaa
push
in
mov
jmp
add
out
jno
add
lret
jne
mov
jno
mov
mov
jmp
inc
test
add
fdivl
jmp
test
into
cmpsb
pop
aas
loope
xchg
add
es
scas
cmpsl
scas
cmpsb
arpl
jno
insb
jle
cmpsb
aad
jne,pt
pop
mov
call
arpl
cmpsb
push
jb
inc
add
or
jne
mov
or
push
pop
lds
add
outsb
add
jno
movsl
mov
push
call
insb
ja
cld
sbb
call
jae
movsl
call
fimull
cmp
leave
mov
jb
pop
add
mov
inc
jb
getsec
and
sub
std
call
fnsave
incb
mov
pushf
mov
mov
std
push
shll
pop
add
stos
cmp
mov
int
jae
aad
mov
negl
aam
jmp
lcall
cld
inc
add
daa
and
pushl
push
std
pushl
sub
push
add
mov
xchg
dec
push
lock
lcall
adc
add
add
neg
push
xchg
shl
cli
add
mov
inc
pop
sub
push
ljmp
in
lcall
pop
push
push
xchg
jo
dec
mov
in
mov
add
pop
cltd
and
fsubl
add
sbb
or
lods
adc
mov
add
cmp
mov
mov
aad
push
push
inc
sub
cld
inc
xchg
mov
insb
lret
mov
adc
jae
cs
cld
sbb
fwait
lea
add
add
test
movsl
add
out
add
mov
adc
add
sbb
call
ss
in
shlb
jne
mov
add
call
push
add
ja
push
sbb
push
movsl
pop
jne
scas
sbb
addr16
roll
jno
imul
mov
dec
pop
ror
pop
add
cltd
out
add
insb
aas
test
push
add
dec
clc
out
lea
pop
test
mov
jmp
mov
add
fs
inc
mov
insb
jecxz
adc
mov
dec
adc
mov
dec
andl
jl
addr16
dec
insb
lahf
vorps
cltd
out
jne
mov
lcall
jb
call
xor
push
fimull
jg
in
mov
add
lcall
pop
pop
add
pop
test
sub
std
push
mov
sub
inc
add
lret
nop
in
mov
loope
pop
pop
mov
in
mov
add
add
test
pop
pop
aad
sti
out
jmp
cltd
push
pop
std
call
cmc
jne
nop
inc
mov
or
add
je
or
aas
clc
je
jmp
decl
jno
xor
push
inc
add
jmp
or
push
push
jno
pop
test
push
add
scas
adcb
loopne
popf
aad
add
idivl
mov
or
xor
xchg
call
mov
jge
pop
into
jo
ds
int3
ljmp
stos
pop
stc
push
das
mov
pushf
or
add
push
push
xor
dec
adc
test
cld
fcmovu
ljmp
cld
test
add
test
fsubrs
mov
stos
data16
call
lret
mov
lods
daa
rcrl
jbe
sub
inc
cli
lds
mov
sar
add
adc
pop
js
mov
push
jno
fisttpl
cmc
mov
loope
fnstsw
data16
lahf
popa
xchg
cmc
xchg
sar
in
dec
lahf
out
sahf
cwtl
stos
pop
outsl
call
adc
pop
and
adc
fs
push
mov
sub
inc
xor
call
arpl
fnstenv
push
push
sarl
fdivr
call
rcrl
call
pop
movsb
mov
mov
jb
sbb
mov
jmp
in
jbe
inc
pop
call
fs
mov
or
jb
lea
add
bound
dec
call
decl
jae
push
inc
mov
inc
fsubr
add
fadds
add
cmc
fistl
andl
je
jge
push
add
jge
stos
pop
add
mov
mov
stc
add
add
jbe
out
pop
jecxz
xor
fstpt
bsr
push
push
stos
mov
call
xor
adcl
clc
push
jno
mov
cmc
dec
lahf
dec
cli
jmp
pop
fildl
fst
sahf
out
xchg
add
cli
testb
aad
sahf
and
ds
jno
stos
cmp
lahf
mov
pop
clc
cld
jmp
push
push
xlat
sub
mov
mov
fnstenv
add
call
mov
dec
arpl
ds
pop
xchg
into
int3
shll
out
xchg
or
cmpsb
sarl
push
xor
rcl
sahf
mov
inc
inc
jb
jmp
xor
mov
sahf
push
in
mov
add
stos
fwait
ss
xchg
mov
test
add
add
jns
aas
sahf
lahf
fwait
arpl
xor
ss
fisttpll
pop
xchg
add
mov
js
push
fwait
stc
xchg
add
add
ret
xor
addl
nop
imul
adc
out
mov
jge
jb
add
pop
in
push
fs
test
ja
add
insl
lods
or
mov
aam
jb
ja
mov
add
mov
mov
push
push
insb
ss
mov
mov
call
jge
jb
or
pop
nop
out
inc
lcall
or
rorb
jmp
fstpl
pop
mov
dec
add
repnz
int
pop
xchg
jl
mov
sbb
pushf
mov
int
add
inc
add
std
jg
xchg
dec
adc
decb
fistpl
sbbb
pop
jl
lea
gs
std
mov
adc
lcall
js
cwtl
std
jne
and
pop
mov
jbe
or
aas
test
xchg
addr16
inc
add
mov
add
ret
jne
out
add
xor
cmpsl
xchg
outsl
jb
jno
cmpb
test
mov
out
lock
add
fsubs
out
lret
sbb
or
cli
loopne
add
cmpsl
add
ljmp
je
xor
jo
xor
xor
mov
ret
xchg
mov
bound
xor
out
in
push
or
in
cld
dec
addr16
xchg
add
jno
pop
cltd
aaa
cwtl
push
adc
es
jns
test
call
stos
cwtl
mov
inc
rol
lcall
cmpsl
icebp
movsb
mov
xor
pop
cwtl
xlat
xchg
stc
mov
and
aad
scas
xor
call
scas
test
mov
mov
cmp
lds
adcb
sub
jno
sub
add
add
xchg
scas
test
mov
ret
push
call
pop
leave
shl
test
mov
mov
data16
je
sbb
sarl
inc
popf
xchg
je
sbb
mov
jb
pushf
dec
jb
jle
add
cmp
pusha
jbe
mov
jb
test
jle
push
add
call
int
pushf
fimull
xchg
ljmp
mov
mov
xchg
jns
push
movsl
ds
dec
add
mov
pop
decb
mov
add
or
mov
ja
in
shl
fldl
add
out
out
or
jb
add
rolb
cmp
in
out
int3
add
mov
mov
push
add
gs
add
push
add
ja
pushl
ret
cmpsl
xchg
xchg
je
adc
incb
cmp
hlt
rcll
in
arpl
cmpsl
push
inc
jno
add
jno
xchg
adc
mov
outsb
mov
imul
or
popf
xor
push
mov
push
xchg
add
ljmp
das
jno
cmp
iret
add
aas
arpl
add
adc
clc
arpl
jmp
xchg
sub
inc
jno
or
jae
jmp
xchg
loop
lods
movsb
iret
call
cwtl
push
xchg
sbb
icebp
adc
lds
and
jg
sbb
test
sub
cmpsl
sub
bound
push
or
add
add
add
xchg
out
cld
test
push
lret
xor
mov
push
push
stos
xchg
adc
add
nop
imul
xchg
jmp
mov
inc
call
rolb
xchg
in
adc
jmp
cld
xchg
xor
cmpsl
pusha
mov
xchg
push
bound
jle
add
lock
jmp
fcoms
or
clc
stos
test
insl
xor
bound
dec
inc
outsl
decb
sub
push
cwtl
lcall
push
xchg
xchg
add
jl
popf
cltd
movsl
adc
add
imul
add
jnp
mov
add
mov
and
pop
decb
fdivl
jmp
inc
insl
jae
xor
mov
ret
jg
in
std
je
out
add
call
dec
ljmp
iret
push
push
jge
notl
shlb
fsubs
repnz
insb
mov
xchg
incb
push
xorl
cmp
push
mov
mov
dec
jae
jno
divl
ljmp
adc
or
lea
mov
in
aas
jno
enter
pop
or
popa
jmp
pop
xor
dec
pushl
fwait
mov
cmpsl
add
lcall
jmp
lock
add
test
xor
add
xchg
outsb
sbb
add
cmp
fs
lcall
sbb
call
icebp
mov
aam
cmpsl
add
add
dec
jp
adc
in
or
mov
subl
das
rcl
popa
nop
fldl
add
pop
pop
cmp
push
add
jnp
jle
cltd
push
loope
nop
addr16
cs
stc
lods
dec
sbb
add
push
xlat
cmp
sbb
mov
adc
pop
or
lcall
add
inc
inc
xchg
add
cmpb
out
mov
mov
push
cli
scas
sub
out
insb
call
mov
call
rcrb
mov
je
xlat
inc
mov
sbb
mov
loopne
add
adc
inc
pop
out
mov
call
arpl
xor
jno
mov
jae
sti
ljmp
add
add
js
incb
jg
pushl
loope
add
ljmp
fsubrs
lock
mov
aam
add
push
push
xchg
dec
adc
pop
mov
bound
sbb
cmpsl
pop
add
ret
push
mov
push
push
xchg
inc
cld
push
jo
decl
push
lock
lock
inc
cld
mov
mov
stc
aas
push
add
and
adc
mov
leave
ljmp
add
mov
xor
mov
add
add
push
aas
sub
cld
and
call
ljmp
inc
insl
xor
xor
xchg
cmc
hlt
dec
sbb
cwtl
xor
jno
adc
or
cwtl
jns
add
xor
add
add
bound
leave
xor
jnp
mov
lcall
ret
cmp
adc
jae
xlat
mov
shll
ja
cmpsl
fwait
inc
loope
enter
repz
jns
mov
repz
fnsave
xorb
mov
popa
sub
shrl
pushf
test
add
mov
jmp
call
mov
adc
loop
sbb
mov
call
aas
lea
shl
xchg
out
or
bound
in
cli
cmp
mov
push
repz
clc
lcall
cld
mov
jno
mov
loope
mov
outsb
push
adc
jae,pn
dec
lock
jo
cld
sbbl
xchg
aaa
fadds
mov
sub
add
sub
jbe
call
xchg
add
fsubrl
mov
ret
xor
jl
orb
adc
dec
rol
call
mov
push
cmpsb
mov
in
repz
jns
add
sub
push
clc
mov
out
sub
cwtl
repz
mov
mov
jnp
add
lret
add
call
adc
xchg
add
xchg
pop
inc
add
mov
add
incb
pop
inc
add
mov
add
incb
add
rolb
movsl
pop
jmp
jg
je
jp
jmp
or
dec
out
jl
mov
push
je
xchg
jae
add
mov
sar
adc
jno
cmp
hlt
filds
lea
xlat
in
cli
add
xor
pop
mov
xchg
inc
add
mov
jg
jo
sti
jg
pushf
sub
xchg
jg
jno
cmp
movsb
lcall
pop
sub
mov
xchg
add
mov
xchg
add
add
mov
cld
mov
lock
jno
rorb
fwait
adc
mov
jmp
ret
or
push
test
mov
add
inc
cmp
ret
out
fisttps
push
mov
jnp
mov
push
call
adc
mov
ret
or
test
add
jle
push
je
inc
jmp
shl
inc
loope
cld
jge
mov
cmp
jl
ret
aam
dec
add
add
add
mov
in
mov
cmp
jne
stc
xchg
cmp
fldenv
xchg
sti
xchg
jmp
or
push
push
movsl
sbb
sub
jno
add
jne
pop
mov
sbbb
stos
repnz
aaa
add
fdivp
inc
jmp
jmp
mov
jmp
pusha
call
pop
sbb
movb
aaa
push
push
jb
add
jmp
cli
mov
mov
adc
sbb
jp
lea
lret
out
stos
cld
decl
sarl
jmp
add
mov
jnp
fmul
push
push
push
je
test
jns
test
add
mov
adc
call
adc
testl
mov
cmpb
out
push
xor
cld
add
jge
pushl
mov
mov
jno
add
dec
mov
int
mov
inc
add
in
dec
xlat
add
aaa
mov
lcall
cwtl
add
in
adc
xor
aas
sahf
daa
jno
jnp
mov
aas
sub
jno
cmp
pop
pushf
sbb
das
add
xor
and
imul
xchg
fcmovnb
pop
push
call
dec
push
jo
inc
jno
add
imul
mov
mov
test
sbb
jb
push
pop
iret
add
mov
sub
idivb
fwait
addl
add
pushf
mov
and
push
clc
pop
adc
stos
inc
and
mov
add
shl
add
stos
cli
add
xor
ja
adc
dec
add
js
fwait
adc
sar
call
adc
lcall
cwtl
cmpb
aas
add
inc
jle
xlat
out
orb
leave
lahf
jmp
bound
cltd
jmp
bound
mov
xor
mov
add
insb
add
imul
add
mov
enter
mov
add
jb
mov
xchg
and
mov
call
lret
call
arpl
push
jb
repnz
add
fs
addl
cld
incl
jp
add
push
jmp
xchg
aaa
cmp
mov
test
shlb
add
dec
jg
jo
inc
add
test
jp
incl
or
mov
in
jl
call
popf
ret
mov
fadds
lds
add
decl
jne
or
out
mov
enter
xchg
lret
cwtl
pop
xlat
testl
jmp
mov
jno
add
jbe
jne
dec
test
lcall
daa
clc
ljmp
inc
sbb
insb
sub
ror
repnz
decb
add
sbb
mov
scas
shl
mov
add
push
jge
add
hlt
aam
dec
in
sbb
sti
sbb
lods
and
ljmp
mov
sbb
je
sbb
jecxz
rolb
arpl
xchg
pop
push
imul
addl
out
std
ljmp
mov
cwtl
mov
adc
jl
push
andl
push
pop
iret
add
and
push
mov
cmpl
filds
call
jmp
call
mov
cmp
jge
push
add
jne
andb
add
test
push
jbe
repz
xor
sub
fstps
xchg
push
fcmovne
sub
push
jb
sub
outsb
add
push
or
cmp
xlat
mov
addl
addl
dec
xlat
adc
push
mov
jne
mov
nop
fildl
add
repnz
xchg
scas
jg
fnstsw
fistl
jg
jmp
repz
add
call
cltd
decl
loopne
jmp
std
jne
nop
inc
mov
sbb
push
cmp
mov
divl
les
xor
xor
popf
add
mov
add
add
js
mov
les
add
sbbl
mov
sub
add
inc
fadds
jbe
jb
pop
jmp
xor
setne
loop
imul
add
jbe
mov
and
addr16
xor
stos
or
jecxz
sti
jle
mov
movsb
jp
add
es
push
xchg
add
pop
je
hlt
test
inc
pop
jg
dec
sub
pushl
inc
xor
cs
mov
std
pop
push
cmp
rcll
mov
jno
add
jmp
push
sub
jno
test
aam
jg
flds
cmc
mov
imul
into
jnp
add
imul
out
ret
cmp
or
xchg
push
sub
add
add
inc
cwtl
imul
cmc
jg
ret
add
add
aad
movsl
adc
add
push
mov
pop
scas
jle
insb
loopne
call
fisubrs
shll
repz
add
sti
or
lcall
add
roll
jb
out
idivb
add
jb
adc
jge
icebp
sbb
jmp
jns
mov
adc
cmp
mov
call
js
add
add
and
jb
inc
or
ljmp
into
stc
jp
adc
shlb
inc
in
je
jl
call
cmpsb
imul
xlat
sahf
fwait
xchg
repz
lret
std
add
call
call
mov
add
decl
in
xor
enter
jnp
add
xchg
add
sbb
inc
cwtl
pushl
loop
pop
jmp
cs
cmpl
xchg
cltd
imul
add
out
and
decl
add
mov
je
add
decb
xor
popf
mov
xor
decl
sbb
mov
push
mov
jmp
and
imul
je
hlt
and
sbb
push
jl
cli
inc
es
pop
sbb
movsb
and
shlb
std
sar
add
jno
and
fisubs
add
add
mov
and
xchg
push
cld
add
ud0
inc
push
call
dec
test
mov
test
daa
inc
jnp
movsl
add
out
into
add
cld
and
sbb
add
call
pop
bound
pop
inc
call
adc
jno
imul
inc
je
test
sbb
lcall
add
sub
cmp
jno
xor
test
lcall
jmp
sti
ja
push
mov
test
adc
jmp
psllw
cmpl
or
inc
push
mov
add
cmc
aas
ds
mov
push
mov
xor
fiaddl
xor
jmp
mov
dec
cmc
push
ret
or
aad
call
mov
push
sarl
jmp
sbb
iret
bound
iret
add
in
ret
sti
fs
aad
jmp
sbb
cli
fistpl
cmpsb
jne
push
stc
jl
jecxz
jbe
jb
or
sub
mov
roll
sub
add
xchg
mov
cmp
lret
adc
pop
addl
or
dec
jmp
and
shlb
add
dec
pusha
cli
add
add
fmuls
std
push
push
std
adc
adc
orl
ret
inc
nop
mov
loopne
jno
pusha
jns
add
pop
mov
add
and
add
repnz
sbb
jl
or
inc
mov
jno
pop
div
mov
add
rorl
dec
pop
rorl
ljmp
push
cld
xor
adc
cmp
xchg
push
out
and
insb
push
adc
and
ja
push
or
imul
call
add
push
scas
inc
xor
push
test
mov
jae
mov
pop
push
push
sbb
repz
and
into
test
add
ss
add
les
sbb
push
jbe
dec
push
sub
jno
test
xchg
add
xor
push
mov
jecxz
xor
jmp
add
add
sub
add
pusha
stos
add
or
std
in
or
hlt
mov
or
jb
jmp
add
mov
js
mov
add
ss
jmp
add
and
xchg
mov
add
aas
jl
jne
lds
inc
or
popf
pop
add
jb
jae
jns
popf
insl
insl
add
ret
jmp
test
mov
add
push
mov
push
xchg
cld
mov
add
ds
pop
mov
push
mov
andb
jmp
push
aas
movsl
cmpsl
pop
jmp
sub
jb
outsb
mov
pop
add
xchg
subl
add
ljmp
sub
mov
out
sub
hlt
add
add
enter
add
add
push
pusha
pop
bnd
xlat
adc
cli
mov
loopne
jb
xorb
push
sbb
jae
ljmp
pop
in
call
jb
jno
setne
inc
hlt
xor
add
xchg
add
shll
jo
call
pop
fldl
mov
out
or
fwait
adc
out
jne
cmc
sub
pop
dec
dec
jbe
cs
adc
push
insb
adc
mov
das
fcomi
pushf
pop
inc
sahf
stos
push
fsubl
add
jno
outsl
clc
jo
jg
jne
jg
jo
adc
fs
repz
jae
out
jge
add
jo
je
xchg
rcrb
je
shrl
daa
shl
and
test
cmp
jbe
and
fdivrs
aas
in
leave
popa
jl
jmp
std
je
jmp
in
je
mov
lods
adc
jnp
out
outsl
leave
lds
cmp
sub
shrb
lock
sbb
cld
movb
add
and
inc
adc
mov
iret
in
sti
in
int3
or
or
lods
inc
std
cmc
lods
outsb
pushl
jp
xchg
ljmp
sub
mov
push
es
sbb
adc
insb
sar
xchg
add
add
jae
shl
lret
mov
and
push
lahf
in
std
adc
lret
jae
add
jae
pop
inc
call
insb
std
or
ljmp
mov
adc
call
mov
sar
mov
push
push
mov
add
jo
push
inc
dec
mov
or
sbb
add
aas
push
push
adc
xchg
pop
dec
jne,pn
add
add
and
pop
xchg
xor
arpl
xor
pop
pop
xor
int3
dec
xchg
add
sarb
clc
addl
pop
int3
xor
or
sarb
add
adcl
enter
int
out
mov
push
pop
pop
adc
add
jmp
daa
sbb
scas
jge
in
sbb
clc
lods
adc
pop
jge
insl
jb
pop
out
dec
inc
lea
add
ret
and
inc
jae
xchg
add
dec
pop
adc
pop
add
or
movsl
std
adc
jl
adc
pop
cmpsb
bswap
pop
cwtl
fwait
adc
ljmp
push
scas
and
and
scas
push
jae
adc
pop
xor
add
mov
mov
pop
andl
outsb
call
add
outsl
arpl
mov
punpcklwd
test
clc
push
and
daa
mov
add
lcall
jnp
sub
push
pop
push
test
sub
inc
add
repz
add
testl
add
stc
dec
std
xor
jne
jg
out
add
int3
daa
ljmp
shll
aad
push
outsl
mov
sub
xor
ljmp
jmp
or
add
pusha
nop
mov
mov
lret
call
jle
push
cmpl
icebp
jb
xchg
cld
add
test
es
mov
lds
fimuls
add
push
add
mov
jp
xorb
clc
cld
cli
push
inc
jmp
ret
stc
movsb
mov
push
inc
push
inc
add
dec
push
jle
sbb
aas
rorl
add
push
add
push
mov
push
addl
or
lahf
imul
inc
dec
out
push
sub
std
jne
out
call
rcr
cmp
and
outsl
out
call
xchg
out
xor
push
push
incl
mov
mov
call
jmp
pop
xor
or
xlat
mov
push
cmp
insl
je
ljmp
and
aam
add
lret
xchg
insb
xchg
adc
pop
cmpl
adc
inc
xor
inc
jnp
scas
inc
inc
or
jns
ret
push
cmpsb
imul
insl
push
les
add
pushf
jne
negb
aam
mov
inc
decb
cmp
in
inc
in
and
faddl
aas
in
cwtl
negl
das
push
add
jb
add
jno
adc
imul
cli
ds
imull
sti
insb
mov
std
mov
iret
mov
call
sarb
push
divl
push
jns
push
mov
call
sub
call
xorl
push
add
gs
sub
mov
jmp
and
hlt
in
js
insb
imul
mov
fistl
mov
jmp
xor
shr
jbe
ficompl
jbe
xorb
xchg
add
pop
les
lds
inc
adc
xor
jg
jmp
inc
jnp
call
jb
mov
lds
adc
fidivl
imul
insb
push
clc
call
outsb
jge
cmp
shl
rorb
add
scas
shrb
and
cs
sbb
and
dec
mov
or
pop
outsb
sbb
sbb
and
sbb
cs
int3
mov
xchg
roll
aaa
jo
add
sets
enter
or
jb
push
push
out
jne
pushl
mov
mov
std
jne
dec
fistl
les
decb
pop
and
pop
les
add
push
add
insl
pop
test
push
add
push
ljmp
imul
imul
and
cs
pop
push
test
mov
push
call
hlt
cltd
out
or
out
and
pop
inc
je
add
push
add
daa
bnd
insl
push
ljmp
imul
imul
sti
or
jo
inc
jae
adc
mov
popf
cmp
in
push
jno
aas
inc
jb
cmp
sti
jo
jge
jge
lock
jnp
mov
xor
fucomip
int3
adc
push
jno
iret
sub
pop
clc
jnp
xor
jo
lcall
subps
pop
shlb
xchg
jmp
adc
sti
mov
mov
out
jo
sub
int3
leave
sub
jno
lods
pop
jne
mov
jge
in
iret
jl
cmp
ret
addl
mov
push
adc
test
xlat
out
pusha
gs
jb
je
jae
jle
jb
test
sbb
add
sbb
sbb
jb
add
mov
into
hlt
ljmp
sbb
aaa
xor
push
mov
ret
cmp
cmp
orb
add
mov
add
mov
xor
fisttpll
dec
push
clc
andb
fildl
add
test
jbe
out
jle
call
push
call
pop
and
cld
mov
fisttpl
cmp
fiaddl
ja
insl
mov
repz
mov
inc
cmp
loope
push
insl
mov
das
inc
cmp
loope
call
jb
nop
sti
inc
xor
add
add
std
add
mov
or
mov
add
leave
add
jae
inc
pop
lcall
or
je
inc
mov
imul
clc
adcb
mov
data16
out
pop
jns
adc
jo
add
pop
cli
mov
jl
pop
jns
inc
push
jns
jp
icebp
or
dec
sub
gs
aas
pop
cwtl
lock
pop
lcall
lock
push
mov
jp
insl
testb
lret
add
outsl
jl
add
insb
data16
pop
es
sbb
jns
jns
in
in
aas
in
in
call
add
jno
ljmp
jnp
daa
jmp
int
or
adc
add
into
mov
inc
and
arpl
subb
clc
push
add
stc
stos
mov
dec
jae,pt
mov
dec
pushl
repnz
call
add
sahf
es
jg
jge
jg
mov
lahf
mov
cmp
sbb
inc
loope
mov
push
imul
inc
imul
and
jbe
xchg
mov
add
icebp
cmp
sbbb
mov
push
or
imul
push
add
lods
push
js
push
pop
ds
push
xor
jmp
mov
je
fcom
pop
jl
jge
or
sbb
ret
cmp
push
sbbb
movsl
push
jg
add
add
aas
out
cld
and
mov
cwtl
ret
push
je
jge
or
add
ret
push
mov
cmp
insl
imul
jmp
cmp
add
mov
cmp
lcall
dec
adc
dec
jno
nop
or
pop
add
jno
cwtl
pop
jno
xchg
fsubl
rcr
xlat
aas
jno
insl
add
jge
mov
add
or
jne
mov
or
mov
scas
rcr
sti
ljmp
mov
xor
insl
or
and
mov
imul
mov
ljmp
inc
decl
lea
mov
pop
test
and
xorl
jno
out
outsb
orl
or
jns
in
xchg
mov
mov
fs
outsl
adcl
add
lcall
pop
sub
pushf
cld
popa
xor
fsub
insl
inc
setbe
repnz
or
popa
or
arpl
in
mov
repnz
pusha
addr16
inc
fwait
cmp
adc
or
adcl
and
jle
add
inc
add
and
frstor
sbb
add
pop
add
sub
hlt
int3
imull
mov
jmp
frstor
mov
pushf
fs
andl
pop
mov
test
sti
out
xchg
mov
in
test
sar
mov
mov
mov
rorb
notl
in
sbb
aad
pop
push
pop
pop
add
mov
add
push
push
push
lret
sbb
xor
mov
add
jbe
jecxz
testb
mov
adc
in
mov
arpl
andl
sbb
xor
stos
pop
xorw
or
inc
add
fdivs
loope
adc
inc
decl
std
adc
pop
lock
lea
xchg
or
out
fadds
test
fs
cmpl
jae
pop
sbb
gs
push
pop
incl
pop
call
add
movsl
mov
adc
ljmp
jge
ljmp
xchg
inc
in
jne
lds
xor
idiv
lods
pop
cmp
pop
cli
es
inc
pop
jno
xlat
repz
idiv
out
testb
inc
and
dec
sbb
push
mov
or
mov
sti
pop
popa
shrb
js
test
aam
xorb
call
adc
pop
call
add
lcall
jle
pop
mov
push
xchg
and
add
popf
popa
or
pop
dec
jnp
dec
dec
fs
mov
or
pop
dec
or
outsb
or
aaa
pop
ret
xchg
or
dec
imul
ds
lcall
scas
push
mov
pop
repnz
test
sbb
stos
or
adc
hlt
getsec
mov
inc
test
add
add
pop
addb
je
shlb
xlat
loop
mov
movsl
jnp
and
add
pop
sub
push
jb
mov
lret
loope
imul
lods
push
test
daa
or
test
jb
xor
enter
mov
adc
cmp
jge
cmpl
jae
je
str
sub
jge
sub
outsb
cmpl
icebp
cmp
sbb
jmp
int
std
rcl
dec
push
mov
cmpb
xor
push
xchg
adc
or
xchg
or
pop
xor
test
pop
test
sbb
pop
adc
adc
xor
je
sub
xor
or
jmp
xor
mov
cmpsl
mov
ficomps
or
add
inc
pop
jno
add
mov
pop
jle
and
sbb
shlb
iret
adc
es
movsbl
test
xor
into
add
lds
inc
fnstsw
jle
ljmp
gs
mov
sbb
int
or
push
iret
sti
mov
cmp
incl
mov
jmp
adc
pop
or
pop
test
ret
dec
test
pop
cs
test
or
push
sbb
mov
outsl
out
call
pop
and
pop
idivb
add
mov
push
fisttpl
push
repz
add
mov
adc
sub
aas
int3
int3
pop
ss
les
sbb
call
mov
mov
mov
scas
jno
cld
mov
je
out
inc
mov
dec
mov
dec
push
fistpll
cmp
jge
xor
push
xor
call
mov
call
out
pop
das
sub
jb
mov
add
sub
movb
outsb
scas
or
push
enter
out
js
mov
repnz
call
sahf
mov
add
mov
imul
mov
sar
sbb
dec
cld
jo
repz
test
test
cmp
incl
out
in
add
rolb
mov
test
pop
add
mov
out
mov
add
out
movsl
add
ret
addr16
out
mov
and
jmp
adc
mov
add
inc
and
rol
jmpw
add
xor
std
inc
incl
push
push
std
adc
mov
push
mov
sub
cmp
addb
cmp
pop
pop
gs
faddl
pmaxub
push
rolb
clc
push
inc
add
add
hlt
cmpsb
ror
bound
mov
arpl
sti
addr16
or
pop
push
or
cmpsl
cmp
xor
mov
jae
mov
add
add
jne
jmp
mov
add
std
call
push
and
idivl
je
cwtl
and
imul
call
mov
mov
int
xchg
or
outsl
shrb
pop
enter
fs
xchg
popf
push
cmpsl
jl
shrb
aad
into
cmpsb
mov
outsl
mov
addr16
mov
sar
mov
mov
cwtl
add
or
inc
mov
mov
push
in
push
call
sub
ret
divl
decl
xchg
and
jle
ja
int3
jmp
cli
adc
mov
add
pop
call
cmpsb
pop
mov
jns
adc
stc
les
popa
push
push
cmc
test
int3
inc
lahf
xor
jae
add
lds
ljmp
jg
mov
add
xor
ljmp
add
aad
adc
arpl
lods
dec
lcall
xchg
rcll
cmp
cld
mov
inc
and
je
mov
clc
or
add
dec
adc
xorl
aam
pop
cmp
leave
cld
test
lods
std
inc
mov
imul
ja
clc
or
rclb
pop
lods
jle
movsl
cld
test
lods
std
mov
cmp
cld
addb
mov
cmp
push
test
lods
inc
hlt
shrd
cmpsl
push
inc
pop
loopne
out
mov
push
ds
inc
cmc
scas
inc
add
push
repnz
add
push
add
dec
mov
into
lods
add
popl
add
push
ret
pop
dec
jge
addl
pop
daa
int3
ror
das
bound
jno
add
dec
xlat
clc
sbb
ljmp
jl
mov
leave
cvtps2pd
enter
push
jbe
shl
add
jge
call
rclb
push
movsl
push
add
lock
push
aas
sarl
xor
sub
add
mov
nop
icebp
call
pusha
mov
lret
adc
jle
clc
xchg
mov
aad
push
pop
cld
rcrb
roll
jle
test
int3
xchg
jmp
cld
dec
add
stos
nop
or
add
mov
aad
jle
dec
filds
pusha
ljmp
add
mov
pop
test
bound
sti
call
add
addr16
jo
data16
cld
into
lock
jmp
scas
incb
cmpl
dec
adc
fisttps
add
jb
mov
lods
iret
add
xor
andl
add
sbb
mov
xlat
cmp
test
jb
push
add
cbtw
test
xchg
ret
pop
int
mov
cmp
dec
xchg
add
push
incl
push
inc
pop
lret
inc
clc
jae
or
add
inc
jle
sbb
jle
add
add
lret
inc
hlt
xor
jb
add
mov
test
inc
incb
rorb
adcl
jne
lret
push
divb
or
aam
mov
addr16
aad
jle
out
clc
sbb
push
jle
pop
rdtsc
push
jns
pop
xchg
inc
jae
rclb
push
push
sub
daa
loopne
fisttpl
testl
push
add
xchg
data16
pushf
out
push
push
je
jl
repz
jno
inc
jae
inc
lods
repz
jnp
and
mov
incb
icebp
enter
inc
dec
and
fdiv
sub
xor
je
in
shrl
pushl
jno
sbb
orb
fnstcw
sahf
dec
add
out
sub
jo
add
clc
ret
pop
mov
stc
cmp
test
mov
and
jle
fldenv
dec
fistpl
xor
jmp
movsl
sub
dec
gs
ret
push
ja
pop
lahf
stos
mov
adc
add
mov
ja
jp
inc
mov
push
push
jns
fbstp
lcall
incl
test
xor
lcall
js
mov
mov
fildl
dec
cmp
jo
add
out
fwait
call
mov
lret
lret
decl
jbe
fistpll
dec
and
addl
stos
xor
push
add
in
loope
mov
jb
add
push
ds
jmp
push
xchg
in
dec
loop
jb
jl
add
dec
outsb
jmp
add
inc
notl
inc
pushl
inc
pushf
pop
xor
decb
inc
cwtl
out
mov
shl
lock
fwait
add
aam
dec
lcall
aas
xor
mov
add
add
pop
cmp
adc
lret
std
pop
mov
add
mov
mov
fsubl
out
jnp
mov
insl
imul
outsb
out
mov
mov
jle
cmp
bound
mov
sbb
cmc
jecxz
pop
add
sub
mov
test
lock
jno
inc
je
loop
addl
pop
orb
add
xor
mov
adc
and
or
add
xchg
add
into
or
jne
adc
xor
inc
ljmp
mov
shl
pop
loop
int
repnz
cmp
scas
add
data16
inc
sub
mov
aaa
int3
lahf
scas
movl
ja
jno
outsl
xor
inc
cmpsb
adc
mov
adc
xchg
cld
mov
incl
jp
dec
das
adc
push
sbb
sub
mov
icebp
test
inc
dec
iret
iret
push
hlt
xchg
and
in
xchg
mov
add
jmp
sub
xor
enter
xchg
lock
or
lods
mov
negl
pop
cmp
xadd
inc
cmpsb
pop
push
mov
inc
test
jne
add
cmpb
lea
sarl
jmp
cs
add
ds
dec
not
aas
jmp
cs
add
mov
pop
fnstenv
push
sldt
jmp
xchg
testl
add
stos
call
cmpsl
add
add
je
roll
xor
add
xchg
mov
sahf
mov
ds
xchg
test
cmp
xorb
jae
ret
shrl
mov
and
sbb
std
jmp
add
add
add
adc
jne
lds
and
pop
rolw
pop
mov
add
not
dec
push
je
sub
fnstenv
mov
or
mov
pushl
std
xor
xchg
dec
lock
jmp
stc
push
fstps
dec
fsubp
mov
gs
gs
adc
push
test
pminsw
jg
cli
sbb
mov
adc
lock
lcall
icebp
add
ja
xorb
inc
cmc
mov
add
or
loopne
je
movsl
mov
test
and
mov
dec
pop
movsl
push
push
inc
jns
into
adc
push
dec
push
add
test
pusha
arpl
add
loope
std
popa
into
inc
add
clc
lock
testb
idivb
imul
clc
in
mov
inc
dec
cmp
pop
jo
cmp
add
add
mov
xor
repz
arpl
push
cld
repz
pop
sarb
jg
imul
cmp
cmp
cmc
call
xor
test
dec
scas
syscall
jno
movsb
pop
jns
add
sbb
dec
movsl
shl
lods
mov
jb
push
lahf
pop
ja
push
pop
packssdw
jmp
add
movd
jmp
mov
or
incb
push
ljmp
aaa
inc
add
jb
test
jns
je
dec
std
jle
pop
jae
jb
mov
ret
aaa
jmp
xor
lea
xor
movl
jl
call
dec
out
and
pushl
add
add
gs
test
cmc
test
xor
push
out
or
cmp
incl
push
test
xor
mov
sub
mov
mov
pop
pop
sarl
movhps
test
pop
loop
orb
push
sbb
decb
xor
sbb
dec
lcall
jno
add
movsb
dec
jne
jg
inc
repnz
mov
mov
stos
mov
jecxz
pminsw
pop
pop
imul
ss
ja
subl
repnz
orb
xor
push
fmull
cmp
mov
aam
xchg
fsubrs
pop
sar
incl
lds
inc
aam
or
in
push
data16
adc
repnz
pop
stos
add
dec
mov
in
cmpsl
jne
cmp
cmp
ret
cs
lods
push
dec
out
add
movsl
xor
call
sti
sti
stc
mov
sub
mov
repz
mov
cmp
jge
lret
clc
sub
push
call
or
stc
popa
push
add
inc
xor
hlt
inc
cmp
ds
scas
and
add
sbb
jno
jg
xor
or
jno
rcl
cmp
ss
sti
outsb
repnz
fstpl
pushl
jb
incl
pop
add
cli
push
xchg
addr16
inc
jb
nop
sub
test
bound
jmp
add
mov
xor
mov
mov
push
rcpps
push
aad
hlt
mov
jmp
cmp
call
xor
inc
inc
jmp
sbb
inc
jmp
mov
js
add
loopne
mov
add
pop
pop
std
adc
shll
out
mov
testb
add
mov
mov
jmp
mov
push
out
dec
ret
cwtl
js
adc
add
jae
mov
sub
cmp
jle
rcrl
push
mov
test
adc
xor
call
cmp
adc
inc
cwtl
pop
std
adc
jno
sbb
jne
insl
push
ficompl
cs
push
jne
daa
mov
sub
add
pop
pop
adc
xchg
mov
fdivrp
lahf
js,pn
mulb
add
jnp
mov
aam
adc
out
sbb
and
pop
call
daa
add
cld
aaa
incb
cmp
add
add
jg
sbb
jbe
repz
call
add
pop
sub
addb
lea
fldcw
inc
jb
push
push
add
fsincos
cs
jns
mov
test
or
mov
into
loope
orl
mov
pop
add
ret
jmp
add
add
mov
and
repz
fwait
or
sbb
call
push
jb
sbb
call
adc
jb
lret
mov
or
mov
jb
sbb
add
out
add
repz
mov
push
or
int3
mov
add
jb
jmp
add
cmp
xchg
idivl
jle
in
cmp
in
cmp
leave
jb
jle
in
cmp
or
jg
das
add
jmp
mov
sub
mov
add
cwtl
ljmp
inc
and
jne
addb
add
xor
cwtl
lea
xor
aas
rorb
mov
add
jmp
push
out
push
cbtw
push
aas
addr16
add
mov
xor
fdivl
add
stc
mov
fdivr
decl
cmp
dec
test
push
push
std
nop
mov
add
xchg
xchg
push
add
add
inc
shrl
xor
iret
popa
lods
inc
je
fadd
jmp
bound
sbb
jmp
out
movsl
mov
inc
gs
mov
pop
cli
stos
mov
data16
leave
sub
incb
push
sti
ljmp
pop
cli
out
enter
jmp
or
push
inc
jp
inc
ljmp
mov
movsb
jecxz
sub
add
or
and
sub
or
int3
xchg
mov
mov
sbb
and
adc
cmp
mov
arpl
ret
arpl
add
aas
repz
jge
aaa
inc
mov
inc
mov
out
lods
and
cmp
loopne
ret
es
lock
cmp
fsubl
in
add
fs
ljmp
imul
push
lret
popa
insb
sar
cltd
push
inc
in
ds
jb
rclb
divb
mov
call
std
incl
jmp
lock
jae
out
pop
sarb
mov
ss
xchg
je
call
push
jmp
sub
mov
cli
adc
out
or
fisubs
out
imull
ss
call
add
cmp
mov
lds
in
jg
dec
add
mov
cld
out
rolb
mov
mov
cmp
sbb
sub
and
push
mov
xor
dec
and
jo
xor
inc
dec
jne
pop
pop
pop
or
add
fisttps
ljmp
adc
in
push
sub
mov
xor
lds
add
jge
add
xchg
pop
ud0
mov
jmp
sub
jno
enter
jo
leave
mov
rcr
mov
addr16
into
clc
repnz
add
mov
jbe
or
jmp
sub
dec
jl
adc
daa
in
adcb
loope
push
lea
pop
sub
and
add
mov
mov
movsb
addr16
jae
idivb
push
add
jo
xchg
mov
pushf
jg,pn
cmp
pop
dec
mov
es
mov
outsb
sub
mov
data16
mov
add
jae
test
repz
add
add
xor
sub
inc
faddl
sbb
xchg
test
cmp
cmc
repz
mov
bound
mov
push
inc
xor
mov
leave
pusha
inc
fs
popf
stc
push
or
sti
imul
lcall
push
jbe
add
shlb
je
jb
add
sub
clc
int
mov
std
and
cmp
push
cld
cmp
fbstp
adc
mov
insb
pop
mov
jae
sub
sub
xchg
and
test
sti
stc
popa
xor
mov
cmp
mov
jmp
xchg
test
add
dec
xchg
xchg
mov
inc
hlt
xorb
leave
mov
js
cmp
sti
adcl
inc
repnz
mov
out
mov
xchg
add
jne
and
mov
adc
push
xor
xchg
pop
inc
jae
mov
insb
add
jmp
and
push
out
add
ljmp
or
xorb
dec
incl
add
je
add
inc
or
std
adc
jno
ds
loop
add
mov
mov
mov
std
dec
mov
pushl
add
jno
mov
stos
mov
mov
popf
cmp
out
xor
inc
xor
or
std
jle
std
sti
push
add
xor
mov
daa
in
xor
mov
lods
add
in
ljmp
fmul
xor
add
ret
jae
add
jae
jmp
inc
jmp
inc
loope
xor
xor
mov
test
mov
sub
aaa
out
adc
repnz
in
int
jmp
add
jno
arpl
inc
std
mov
sbbb
push
lret
and
and
sti
dec
jno
sti
cmp
mov
inc
cmpsb
call
int
test
xor
xor
or
inc
test
and
ljmp
ja
mov
jb
sbb
push
pop
xor
dec
or
sub
push
bound
adc
loope
mov
xor
add
add
fwait
sub
sub
add
jmp
fsts
call
insb
sub
fmull
insb
xor
add
jnp
xchg
xlat
out
je
add
mov
pop
stos
dec
xor
out
inc
dec
inc
je
xchg
add
xor
pop
scas
rclb
out
mov
rep
or
scas
les
lahf
repz
push
arpl
out
xor
mov
movb
mov
je
shll
dec
inc
or
insb
jae
pop
scas
les
scas
bnd
jmp
xor
enter
std
decl
repnz
or
inc
inc
and
sub
push
repnz
push
mov
inc
out
mov
inc
push
ljmp
mov
insb
add
or
add
test
inc
out
adc
mov
cli
je
pmuludq
mov
add
pop
jge
lcall
add
rcrb
and
test
push
js
jle
andl
lcall
in
adc
push
hlt
push
dec
mov
mov
leave
adc
add
sbb
xor
call
ret
push
test
mov
repnz
push
cltd
add
add
jb
mov
div
inc
mov
test
push
mov
inc
std
mov
lds
shr
jg
addb
rep
dec
xor
ficoms
adc
inc
push
or
roll
call
add
jmp
pop
add
inc
jmp
xor
add
pop
add
test
push
add
add
mov
hlt
lret
jmp
loopne
jmp
push
add
mov
sub
cld
es
sub
add
adc
dec
mov
cs
fs
inc
fiadds
ret
iret
mov
adc
mov
repz
cmp
add
push
jecxz
and
aad
or
ljmp
adc
add
sbb
or
inc
jmp
adc
je
add
je
add
sbb
jle
or
ret
loopne
mov
push
cmpsl
out
add
fildl
ss
xor
sub
or
or
push
dec
add
les
test
mov
sbb
inc
pop
int3
shll
push
inc
push
jnp
and
jmp
add
sbbl
ret
cmp
inc
jno
inc
pop
xchg
push
push
add
push
push
fists
rorl
sub
decl
dec
out
push
xor
push
mov
add
test
dec
jmp
adc
into
mov
or
xor
push
xor
add
jae
inc
shrl
mov
or
aad
imul
jno
add
add
sbb
sub
add
adc
cmp
sbb
and
jno
push
xor
mov
mov
stos
mov
cwtl
pusha
add
fs
outsb
rol
add
stos
lock
push
std
or
jno
stos
sti
stos
mov
push
add
xchg
je
std
cld
incl
bound
in
repnz
jmp
cmp
add
sub
cmc
cmp
adc
add
pushf
shlb
lcall
cmpsl
adc
negl
imul
mov
and
je
add
iret
std
jle
xchg
inc
add
inc
sub
jae
add
push
jnp
imul
xor
ret
out
mov
cmc
call
je
jge
xlat
std
pushl
std
add
cwtl
cmpsl
icebp
call
clc
add
rol
add
ljmp
mov
push
incb
pop
add
popa
mov
fdivr
mov
cmpsb
dec
hlt
and
push
add
add
jmp
inc
insl
clc
ljmp
jno
call
mov
inc
sbb
jne
fidivl
cmp
test
std
jno
sub
jo
add
jmp
sub
add
fnstenv
repz
out
mov
mov
add
ljmp
or
mov
cmp
add
xor
mov
add
mov
mov
add
jno
mov
pushf
sbb
pcmpgtb
dec
call
cmp
push
out
mov
pop
add
test
adc
add
orl
mov
ds
sub
mov
js
sub
scas
push
jae
xchg
or
push
xor
fisubrs
jg
out
out
jmp
shr
ja
call
clc
pop
int
sbb
adc
add
aaa
jge
negb
push
sahf
inc
push
adc
inc
sti
mov
jl
ja
clc
add
mov
inc
adc
icebp
inc
stc
mov
pop
jg
es
sub
jnp
sub
and
pushl
jb
test
cltd
es
in
add
add
decb
stos
cmp
icebp
jb
mov
cmc
movsb
or
mov
jp
cmc
repz
xor
mov
aas
aad
mov
out
add
inc
jb
jns
std
jne
mov
xor
and
mov
sbb
pop
mov
mov
mov
fidivrs
add
push
aaa
or
fldcw
mov
add
xor
push
pop
ret
push
mov
or
dec
std
jne
lods
jae
add
in
xor
faddl
jne
fdivl
daa
jb
lcall
fdivr
mov
add
pop
mov
cmp
ret
test
sub
push
adc
inc
add
enter
sbb
mov
jno
cmp
sub
adc
mov
imul
pop
inc
pop
icebp
mov
ljmp
cli
je
scas
mov
add
jmp
dec
inc
scas
or
in
filds
cltd
jnp
jle
inc
je
push
idiv
lds
notl
xchg
inc
jae
xchg
inc
add
cmpb
or
test
or
add
push
and
out
scas
and
addb
pop
daa
add
sti
imull
es
cmp
xor
xor
sti
daa
jne
sti
into
cmp
add
popa
dec
into
inc
adc
scas
jle
add
notb
loope
mov
je
mov
and
test
jmp
scas
outsb
sbb
and
push
and
xor
lock
mov
cmp
add
ss
lods
int3
punpckldq
jge
push
or
jbe
fstl
adcl
adc
push
mul
push
xchg
and
jb
jl
mov
jl
mov
dec
decb
in
jb
mov
jb
imulb
jbe
loope
jge
jmp
or
out
push
and
bound
cmc
push
add
data16
call
jb
popa
bound
lcall
xor
and
pusha
out
hlt
mov
pop
sbb
ss
add
call
or
enter
push
std
je
pop
sbb
push
lahf
faddl
and
decb
enter
aam
andl
add
std
lock
cmpsb
inc
add
add
mov
fmull
xchg
cmp
adc
rcr
xchg
mov
add
outsl
test
xor
add
call
mov
xor
xchg
push
ljmp
lea
xchg
adc
enter
mov
and
lods
ljmp
lcall
imul
mov
xchg
rorl
call
and
mov
cmp
aas
jno
push
push
and
jno
shlb
movsl
sub
pop
arpl
add
fucomp
add
fisubrs
in
sbb
sub
ficomps
fs
bound
sub
sub
add
lcall
movsb
push
add
mov
mov
in
adc
and
push
sbb
aad
jle
xchg
sbb
sub
adc
cmp
jp
bound
lahf
nop
push
mov
mov
bound
ja
xchg
mov
stos
add
sub
push
push
test
flds
orl
mov
inc
outsl
shl
insb
jnp
xor
cmpsb
pop
lds
outsl
imul
lds
aas
ffree
sbb
mov
add
out
pop
push
aaa
inc
mov
mov
add
ljmp
push
push
mov
push
mov
int
or
add
fistps
add
add
add
push
push
call
push
flds
add
add
cmp
jmp
jmp
cmp
or
cmp
cld
std
or
add
std
je
mov
mov
xor
pop
sub
pop
pop
adc
imul
dec
in
in
xor
jb
and
sub
paddsb
jecxz
ljmp
aas
jno
inc
or
jmp
and
push
test
sub
add
sub
cmpl
mov
mov
mov
add
or
das
or
jl
mov
jb
bound
bound
mov
cltd
mov
ret
add
cmc
aas
cmp
aaa
pop
mov
dec
push
xchg
push
add
mov
jbe
mov
fwait
shrb
test
jno
push
hlt
pop
ret
out
mov
clc
outsl
ret
out
mov
xchg
mov
hlt
imul
mov
push
gs
mov
out
outsb
hlt
imul
into
sub
pop
cmpsb
fdivs
xor
jmp
sub
andl
push
sbb
cmp
sub
ret
insb
sbb
stc
ret
pop
scas
out
mov
test
sahf
mov
jge
stc
mov
stc
jmp
sub
subl
out
adc
std
out
pop
sbb
fs
add
xor
xchg
push
jge
out
pop
sbb
cli
xor
pop
sub
push
bound
push
mov
in
sub
test
ljmp
cld
xor
test
adc
cwtl
add
lock
test
cmp
adc
callw
jb
movl
jae
call
add
sbbl
push
jg
sbb
add
mov
aas
jb
jmp
rorb
add
sti
je
inc
cmp
push
sbb
mov
sti
aad
inc
lds
fnstenv
mov
jae
orl
divb
loop
imul
mov
mov
aaa
or
xor
inc
sarb
mov
push
xchg
cwtl
or
nop
rcll
iret
repz
out
add
pop
add
or
mov
decb
lcall
aas
jno
sar
ljmp
aas
mov
hlt
into
fcompl
or
inc
inc
sbb
mov
dec
mov
call
and
fsubr
add
shl
rcrl
pop
lock
imul
dec
int
repnz
cmp
mov
mov
hlt
aas
int3
js
cs
adc
push
nop
sbbb
fiaddl
js
repz
or
sbb
sub
mov
inc
pop
sbb
sub
adc
push
cmpsb
ficomps
mov
or
jl
push
scas
call
into
or
test
xor
rcr
sarl
das
add
inc
lds
jne
mov
lods
orb
ret
ret
sbb
sub
insl
jne
add
add
add
gs
mov
js
jp
inc
lds
mov
mov
pop
push
fbstp
inc
add
js
pushl
js
mov
mov
pop
and
pop
test
leave
add
cmp
decl
inc
lcall
and
je
sub
je
xor
add
dec
add
mov
std
call
stc
xchg
cmp
daa
xchg
lidtl
add
je
sub
je
xor
add
insb
and
add
sahf
push
and
fcoms
aaa
call
es
cmc
mov
add
imul
mov
mov
inc
mov
xchg
mov
dec
pop
rorb
hlt
cmpsb
add
jno
mov
jno
cmpb
icebp
nop
insb
cld
in
push
mov
adc
sub
fstp
cmp
adc
sub
inc
dec
sbb
pop
pop
icebp
aas
jno
and
add
rclb
inc
cld
mov
dec
orb
adc
dec
xchg
push
movsb
fbld
popa
ds
mov
cmpsl
adc
out
pop
cmp
loopne
mov
pushf
fbld
lods
fbld
out
mov
xchg
fsub
mov
xchg
lock
xchg
in
jmp
cld
ja
sub
aas
adc
xchg
add
jge
sbb
mov
sbb
cmp
fidivrl
jl
jns
incl
add
data16
pop
push
jae
push
jg
and
popf
sbb
inc
pop
adc
movsl
sbb
cmp
pop
clc
cmp
shl
lods
mov
bound
pop
push
dec
in
std
negb
mov
mov
mov
lock
stc
in
or
lcall
sti
mov
in
mov
push
adc
add
mov
push
add
add
loopne
sti
jg
xor
lret
jg
rclb
decb
or
ret
mov
scas
add
fwait
popa
mov
pop
call
push
xor
xchg
xchg
mov
cld
test
mov
decl
nop
cld
subl
call
in
adc
push
decb
test
std
aas
test
lea
in
fdivrp
jmp
rorb
add
std
mov
pop
in
popa
jno
add
jl
sub
push
sub
mov
dec
inc
mov
xlat
in
adc
fadds
fstps
inc
mov
inc
dec
mov
and
popf
mov
dec
mov
decb
cli
int
cmpsl
add
popa
push
pop
sbb
adc
popa
inc
dec
cmpsl
dec
aas
ficompl
ds
xorb
fsubrl
pop
push
and
add
push
xchg
adc
mulb
idivb
add
shll
jmp
leave
out
and
sub
or
cltd
pop
subl
andl
scas
punpcklwd
adc
pop
pop
lcall
test
add
clc
add
test
repnz
enter
in
mov
mov
mov
inc
prefetcht2
callw
aas
jmp
test
f2xm1
cmpsb
subl
mov
jb
mov
mov
call
insl
lcall
inc
add
push
inc
inc
call
cld
into
inc
jb
fiaddl
outsb
pop
jb
imull
xchg
xor
push
push
xchg
jb
adc
mov
subl
add
pop
jb
push
out
sahf
jp
insb
jnp
jecxz
sbb
inc
push
sub
pop
add
push
dec
push
insb
out
sti
std
dec
push
dec
push
insb
out
sti
std
fistl
in
mov
loop
or
push
push
lea
std
mov
ja
add
mov
xor
out
std
inc
and
les
pop
add
add
pop
mov
xor
pushl
mov
incb
dec
lcall
adc
add
push
jno
xchg
add
gs
lock
add
jge
and
aas
leave
pop
add
scas
pop
mov
addb
cmpsl
xchg
xchg
and
cmpsl
mov
fxch
fs
ficomps
mov
jo
push
add
push
pop
leave
inc
pushl
mov
sub
mov
jmp
add
push
and
mov
inc
cli
out
mov
sbb
sbb
test
xchg
ljmp
jno
out
mov
pop
call
stos
jmp
sbb
daa
rcrl
add
add
push
out
push
jno
out
mov
add
addb
mov
mov
loopne
push
add
pop
jae
lcall
leave
mov
popa
sub
add
add
imul
rol
mov
mov
cmc
jo
add
jge
cwtl
call
addr16
mov
xor
push
stos
or
push
jb
mov
sti
imul
adc
add
jb
mov
stc
int
pop
mov
js
insl
fists
iret
jmp
and
pop
add
mov
jl
incb
and
jmp
lret
push
push
out
jb
jb
sti
inc
dec
add
push
lcall
mov
pop
cld
std
call
jecxz
push
pop
mov
push
ljmp
add
pushl
out
repnz
sti
add
cmp
mov
cmc
sub
sbb
xor
push
out
std
incl
xchg
les
jge
sahf
outsl
sti
dec
inc
rcll
enter
call
data16
sub
std
xor
mov
jmp
add
pop
pop
leave
dec
clc
call
jg
jno
push
add
ja
popa
sub
inc
jb
pcmpgtd
incb
inc
or
and
xor
cmp
addb
xor
lea
or
cmc
push
xchg
adc
jmp
out
mov
add
jno
addb
pop
jge
sub
xchg
or
pop
mov
popa
sbb
or
enter
jno
movsl
out
pushf
mov
xchg
add
or
add
hlt
jae
add
mov
movb
das
repz
sbb
jae
or
mov
cmp
mov
mov
adc
outsb
add
add
add
lods
lods
pop
adc
addr16
add
add
or
ds
mov
lret
movsl
xchg
pop
add
jge
adc
jnp
fsub
dec
in
pop
sar
jae
jb
cmp
ljmp
icebp
inc
je
bsf
jo
ds
loop
sbb
sbb
hlt
mov
xchg
loopne
mov
and
push
jb
sub
push
clc
push
mov
dec
mov
addr16
hlt
out
push
shlb
adc
mov
addb
or
or
add
ret
mov
je
push
dec
mov
decb
inc
je
xchg
jae
inc
out
ljmp
cli
push
call
loop
push
push
adc
int
dec
call
loope
testb
clc
std
adcb
ja
pop
shl
cmc
dec
add
lea
in
popa
or
lea
mov
sbb
add
mov
std
mov
cmp
and
add
add
sbb
mov
jno
sub
lcall
add
pushf
iret
std
sahf
into
mov
fsubrl
mov
xchg
jl
jns
xor
scas
add
lock
add
jno
nop
or
sbb
inc
add
stos
xor
lcall
jae
jl
fwait
pop
fcmovnb
sbb
push
push
push
mov
lret
ret
push
pop
add
xchg
movsl
imul
sar
dec
in
data16
out
jge
mov
jns
std
mov
dec
and
dec
pushl
in
or
mov
mov
mov
add
js
sti
es
xchg
jbe
cmpb
add
jp
int3
in
jl
mov
add
jle
push
in
pop
mov
add
xchg
inc
sbb
xchg
push
sbb
pop
daa
add
sub
sbb
pop
pusha
and
push
or
out
iret
test
inc
cmpsl
scas
inc
jb
add
pop
cmpb
add
add
into
mov
add
fcompl
icebp
aas
jmp
call
repnz
dec
call
hlt
mov
mov
repz
or
jle
in
stc
subb
mov
adc
push
rcl
sub
jae
test
mov
cmp
popf
xor
mov
jb
jle
jmp
mov
fs
jae
jmp
in
xchg
out
ljmp
cmp
adc
jne
xchg
call
adc
mov
cmpb
adc
lea
add
into
jg
std
inc
jo
pop
cld
dec
subb
cld
cmpl
inc
out
loope
call
add
lock
inc
cld
std
jmp
xor
cmp
or
call
inc
cli
add
add
clc
hlt
pop
mov
js
int
movb
xchg
pop
dec
pop
ja
jns
leave
aaa
outsb
fwait
push
incb
mov
ljmp
add
xor
add
ljmp
mov
add
add
mov
aaa
int
add
inc
das
adc
sbb
jmp
ret
push
mov
scas
xchg
add
subl
mov
push
cmp
cmc
sti
mov
movsl
mov
jno
out
out
hlt
jmp
pop
js
clc
sub
add
out
add
repnz
add
cltd
imul
mov
adc
pop
scas
cmp
push
add
cld
aaa
inc
mull
inc
add
mov
jmp
inc
mov
bound
push
add
and
in
in
sbb
jb
push
aaa
lcall
push
nop
adc
jb
inc
lds
jp
sar
inc
out
insl
add
jb
or
jmp
mov
fsts
mov
jl
fyl2xp1
std
or
jmp
dec
adc
addr16
add
jmp
jnp
std
idiv
out
xor
test
jmp
adc
std
testl
add
push
xchg
adc
dec
adc
call
add
jmp
lret
mov
dec
add
in
add
in
or
push
lret
push
add
pandn
push
call
inc
mov
add
dec
adc
std
lcall
add
add
push
call
mov
adc
in
and
and
add
mov
lea
daa
mov
lea
mov
mov
push
data16
or
and
sbb
sub
and
sub
ljmp
iret
cmc
inc
add
xchg
mov
jno
in
mov
outsb
decl
testl
xor
out
xchg
mov
incl
add
addr16
sar
std
pop
push
cld
std
pop
push
js
jns
movsb
mov
cmpsb
lea
add
add
sti
pop
addr16
xor
jmp
jmp
pop
fisubrs
mov
mov
aam
out
inc
jecxz
sub
out
inc
jp
xor
pop
xor
jno
imul
test
jno
fs
rcll
testb
xor
xlat
add
bound
mov
lea
outsl
loopw
mov
xor
xlat
xorl
mov
fidivs
mov
jle
rcl
xor
std
neg
leave
stos
std
adc
insl
sub
leave
mov
cmp
cmp
std
and
outsl
lods
fisubs
in
mov
pushw
mov
mov
add
fs
outsl
or
insb
outsb
jae
jb
shr
dec
mov
pop
cmc
ss
sti
pop
nop
call
or
outsl
or
xchg
add
out
push
rcrb
repnz
add
adc
inc
and
or
add
inc
add
push
xlat
add
pop
add
ret
fisttpl
mov
push
add
add
push
pop
and
add
gs
sub
push
push
sbb
dec
fdivrp
dec
add
xchg
mov
pop
mov
gs
out
or
sbb
adc
out
xor
sti
xor
add
add
test
add
pop
cmovo
adc
mov
testb
in
add
mov
pushl
icebp
mov
in
pop
out
lcall
gs
in
add
bnd
je
pop
dec
je
bound
lock
call
rclb
xor
or
add
jg
js
jne
or
cmp
sub
mov
push
pop
jmp
jge
daa
insl
add
dec
je
pop
fildl
divb
xor
adc
mov
stos
push
clc
jmp
inc
insl
jge
add
out
push
test
js
dec
cmp
scas
ljmp
out
mov
jecxz
jno
out
enter
add
mov
or
add
and
add
ret
and
repnz
call
jno,pt
call
jb
call
pop
ljmp
dec
add
mov
add
jmp
je
add
cmp
pop
or
push
inc
cmc
add
jmp
jbe
std
xor
jne
adc
inc
add
cmp
in
fisubl
std
xchg
fimull
jae
and
adc
lods
cmc
pop
ret
sbb
jmp
push
cmc
call
add
add
or
jp
mov
fcoml
call
lcall
push
xchg
repnz
mov
int
add
add
inc
cli
add
xchg
add
xor
push
add
jno
sbb
sti
decl
ret
fadds
xchg
push
jg
pop
jmp
out
out
mov
mov
jmp
in
cli
add
mov
pushl
mov
mov
cmp
std
repnz
call
add
or
jno
mov
add
and
inc
std
sahf
int3
ret
push
mov
ret
or
jno
xchg
mov
pop
idiv
arpl
je
cmpsb
insl
or
fs
sti
out
push
call
test
or
mov
push
cli
orl
cmp
and
add
outsl
jg
out
sub
mov
outsl
jne
mov
jge
mov
in
jno
jns
sub
ret
push
clc
push
test
jae
repnz
jnp
aas
fisttps
movsl
push
push
push
fwait
add
sbb
jmp
inc
push
out
fwait
add
push
mov
or
insl
jecxz
cmpb
cmpsl
outsl
jb
sub
enter
int3
push
and
pop
mov
pop
imul
adc
hlt
stos
adc
cltd
sub
std
lahf
lcall
sub
mov
or
divb
ljmp
cmc
call
je
stos
outsl
sub
rolb
xor
cmp
ljmp
into
lahf
cld
out
mov
insl
or
inc
add
inc
mov
enter
push
leave
mov
cmc
in
add
decl
dec
xchg
out
decb
jmp
rol
mov
enter
cwtl
incl
rclb
enter
push
jecxz
jge
pusha
add
add
push
mov
push
ret
inc
adc
inc
inc
push
add
push
aas
add
xchg
idiv
ljmp
dec
call
or
mov
add
sar
mov
into
cmp
test
add
leave
xchg
lret
incb
push
inc
push
ss
dec
xor
add
lcall
mov
ret
daa
push
mov
in
repnz
cmc
std
mov
test
add
repnz
or
repz
cs
stc
subl
push
push
mov
hlt
adc
cmpsl
jo
cld
sbb
push
hlt
add
inc
icebp
hlt
aas
addl
inc
adc
leave
icebp
cld
pop
and
aam
arpl
mov
mov
inc
sbb
xlat
sub
add
aam
jp
out
jno
jo
out
jae
jmp
mov
inc
pop
icebp
push
subl
dec
mov
mov
sar
out
cltd
add
inc
jno
hlt
lahf
addl
dec
mov
idivb
idiv
out
lahf
test
cld
sbb
inc
jmp
jne
std
mov
sbb
sub
xor
add
mov
push
outsb
push
cmp
stos
jb
xor
xor
std
aas
sbb
test
mov
mov
mov
fwait
sub
mov
je
mov
xor
mov
je
jnp
sub
add
lds
pop
add
sbb
push
fidivrs
adc
jne
les
iret
imul
inc
fdiv
adc
push
mov
inc
fdivs
or
dec
add
repnz
filds
mov
repnz
dec
inc
add
lea
inc
cwtl
push
xor
int3
adc
rolb
xchg
add
push
push
add
cld
xor
ja
js
or
xchg
int
or
jp
add
enter
jno
add
flds
mov
or
jno
pop
add
add
test
push
inc
jno
rorl
mov
jno
lods
std
mov
jb
aas
int
inc
add
xchg
pop
or
sahf
and
or
cwtl
add
jno
fldcw
push
aaa
repnz
mov
orb
decl
push
leave
outsb
jno,pt
xor
mov
pop
icebp
je
add
add
inc
jno
imul
jp
out
sti
daa
add
xor
std
cmpsl
add
jne
cltd
add
sbb
inc
jno
mov
les
stc
sbb
mul
outsb
icebp
mov
gs
xchg
dec
jb
sub
mov
or
jns
mov
out
insb
jae
leave
mov
out
inc
lods
es
add
dec
sub
add
mov
add
jl
xor
sub
ljmp
add
add
jae
lea
fs
call
insl
xor
pop
lock
jne
add
jae
sahf
inc
cld
mov
mov
jmp
insb
mov
clc
mov
add
inc
adc
std
dec
sbb
gs
sub
ds
jb
add
add
xor
pop
xor
stos
jb
les
sub
sti
andb
decl
add
int3
fildll
fmull
lret
das
fmull
leave
sbb
std
push
push
loopne
in
rolb
add
fwait
addl
push
mov
int
push
enter
movsb
sbb
movsl
out
inc
nop
pushw
lea
clc
std
das
fistl
add
push
call
test
add
dec
ss
call
jl
in
adc
ret
inc
ds
fdivl
in
xor
jo
lock
js
pusha
ja
push
in
mov
mov
jl
or
jbe
inc
cmpl
jnp
jmp
adc
sub
push
push
pop
fcoml
add
mov
adc
flds
aaa
and
jae
cli
sbb
push
or
jno,pt
out
xor
flds
je
and
jo
dec
lock
call
cld
aaa
xor
out
lahf
fadds
int
ljmp
mov
popf
mov
push
es
jno
sbb
movsb
xorl
xor
out
add
stc
sub
jmp
jb
mov
bound
daa
xorl
test
fldcw
jecxz
dec
shr
scas
jmp
cmp
sub
push
sbb
inc
shlb
bound
xor
stos
add
out
push
insb
je
inc
out
add
pop
jmp
lock
shl
jmp
clc
xchg
push
sub
add
aas
lds
add
test
mov
jmp
loope
add
in
ds
inc
jmp
xor
je
pop
inc
and
dec
add
in
jb
pop
cmpsb
xor
push
jb
jl
cmc
xor
sub
icebp
mov
std
insb
push
stc
negl
ljmp
fxch
or
add
dec
jne
sbb
je
imul
add
mov
call
mov
add
dec
dec
xchg
sti
cwtl
inc
pop
cld
dec
std
mov
jns
daa
in
adc
movsl
call
add
enter
fsubr
add
pop
in
lret
sti
test
jno
lcall
es
test
jmp
cmpsl
cwtl
add
test
cld
push
jno
insl
push
in
add
fnstcw
outsl
icebp
add
dec
loopne
js
inc
mov
jne
add
mov
jl
imul
adc
fidivs
push
jle
lret
add
mov
cs
push
adc
or
mov
push
call
std
jle
call
or
add
jne
data16
ficoms
decl
ficoms
or
xor
inc
ljmp
mov
add
sarb
adc
jno
adc
inc
add
mov
inc
out
lret
add
jae
decl
or
ljmp
cld
out
cmpsb
add
enter
mov
cld
ljmp
iret
repz
cmpsl
outsl
mov
cmp
inc
jno
xchg
leave
adc
add
fs
lcall
icebp
stos
scas
sti
pop
mov
mov
pushf
std
inc
pop
dec
std
aam
adc
test
ret
fcomps
test
sarl
mov
jb
std
fdivrl
adc
or
cmp
out
sbb
insb
add
cmpsl
jecxz
in
cmc
cld
sbb
add
jmp
std
ror
std
cmpsb
and
adc
sub
and
test
push
pop
push
adc
xchg
adc
jne
xlat
jno
psadbw
adc
lock
das
add
pop
shlb
push
lahf
push
or
add
fdivr
mov
add
sub
xchg
push
sti
jne
gs
pop
push
sbb
test
push
jmp
in
adc
push
inc
sbb
sbb
test
jno
call
push
mov
dec
xor
jno
sub
push
and
push
mov
outsl
and
fsub
jae
pop
jo
jne
outsl
or
xchg
sbb
movsb
into
pop
ljmp
sbb
mov
lahf
sbb
mov
std
mov
repnz
hlt
jl
add
dec
add
sarb
testb
incb
out
mov
push
pop
fs
jae
roll
xchg
jp
daa
add
add
lds
jnp
or
out
and
insl
jecxz
pop
xchg
insb
iret
dec
mov
test
aam
inc
jno
lods
pop
repnz
repnz
jno
daa
outsl
cmpsl
jne
xor
jl
outsl
scas
and
decl
movsb
and
push
imul
jno
jl
or
push
incl
in
in
adc
ret
call
aam
jg
add
xchg
insl
and
xchg
test
shlb
or
sbb
pop
stos
jns
mov
xor
mov
push
mov
out
add
jecxz
sub
sub
std
cld
lret
jmp
in
aas
and
mov
popa
mov
lds
jb
mov
jg
je
js
add
popa
testl
lods
sbb
dec
call
pop
adc
sub
cld
jle
pushf
cld
mov
in
movsb
jg
hlt
add
xor
add
call
faddl
dec
xor
dec
ds
add
dec
call
test
faddl
mov
loopne
inc
sub
or
fsubl
pop
jno
dec
push
clc
add
add
mov
repz
add
add
jno
fsubr
js
in
mov
aad
mov
vpcmpgtd
scas
lds
inc
lret
ret
cmp
insl
jmp
mov
adc
jmp
pop
test
mov
les
jmp
mov
jmp
mov
or
add
jno
in
cmp
loope
add
add
imul
es
xor
test
aas
jno
push
hlt
leave
in
add
add
rcl
jo
out
repnz
loop
das
inc
add
lds
xchg
bnd
loop
das
mov
add
mov
je
int
sahf
loop
aaa
xchg
clc
push
es
test
in
push
dec
out
test
add
mov
add
rcr
sahf
inc
negl
addb
test
xchg
add
loop
loopne
inc
add
sub
movsl
fstpl
loop
incl
add
ss
repz
mov
xchg
xor
adc
xor
aas
add
call
gs
data16
push
adc
or
xor
sahf
nop
mov
fs
add
xchg
das
xchg
dec
xchg
outsb
nop
xchg
je
cs
push
mov
push
sub
sbb
std
jmp
mov
paddsw
test
cltd
or
pushf
inc
xor
pushf
jle
call
arpl
xor
sti
incl
leave
ret
push
xchg
mov
clc
cmpl
call
fcmovnu
aaa
movl
adc
add
cld
bnd
pop
push
push
pop
push
pusha
add
add
fbstp
mov
enter
call
mov
and
mov
and
and
or
lcall
insb
push
inc
and
jns
ss
push
and
xor
fmull
xor
mov
add
jno
add
mov
ds
cli
les
ret
adc
js
sub
insl
jle
jno
cmpb
jae
pop
inc
and
xchg
inc
or
test
add
mov
in
sbb
and
pop
and
mov
jb
aas
and
xchg
inc
jg
or
add
js
xchg
add
fistl
jmp
and
add
mov
insb
dec
dec
lock
imul
out
idivb
add
out
pop
or
hlt
sbb
xchg
add
test
push
fidivl
push
lea
cmpsb
push
push
and
add
test
fimuls
flds
test
fisubrs
ss
jne
add
xchg
xor
imul
fidivrl
xorb
or
jmp
out
dec
fdivr
jb
jg
push
or
sbb
ss
inc
adc
mov
mov
in
or
push
or
jb
add
test
test
addr16
xchg
in
xchg
mov
add
adc
jae
fstps
inc
adcl
or
jmp
cmp
add
ret
in
addl
mov
movmskps
sbb
mov
cmp
mov
add
fildl
clc
push
inc
add
ss
xchg
add
mov
jno
add
inc
clc
pop
mov
or
into
mov
push
mov
xor
add
push
pop
mov
sti
jne
mov
out
sbb
add
jle
adc
fildl
push
lock
add
in
xchg
loope
jg
jg
jno
xchg
repz
xor
cmp
xor
add
in
jg
or
sbb
mov
imul
push
pop
dec
subl
xor
std
pop
je
push
and
fmull
orl
add
ljmp
xchg
jmp
outsl
add
iret
inc
dec
lods
add
jne
jae
add
push
roll
adc
mov
push
fcom
adc
add
test
roll
cmp
divl
sbb
fidivrl
pushf
xchg
xlat
adc
mov
bound
add
lock
out
ss
or
xor
call
cmp
hlt
and
adc
test
mov
add
clc
outsl
dec
imul
out
mov
cmp
shlb
std
lcall
sbb
or
mov
push
mov
jg
push
imul
add
mov
jb
inc
int
and
pusha
sahf
sbb
push
rorl
jmp
test
call
test
xor
cmp
pop
add
xchg
adc
sbb
adc
cmp
test
orb
or
xor
pushl
adc
add
adc
xor
mov
dec
incl
adc
dec
xor
cld
hlt
or
jmp
lods
adc
add
inc
mov
std
push
iret
inc
and
add
out
out
lcall
pop
inc
mov
ret
mov
ret
cltd
inc
add
xorl
jmp
cld
insb
mov
push
mov
divl
add
jecxz
xchg
pushl
addr16
add
into
imul
scas
add
imul
insl
mov
dec
add
adc
xor
add
add
mov
or
jne
in
aas
repnz
subb
xor
hlt
les
jmp
repnz
jno
pop
shlb
mov
jp
mov
sbb
lock
out
jb
movsl
inc
jno
push
xlat
bound
mov
clc
cmp
dec
test
cld
imul
lock
inc
jno
cmc
cmpb
loopne
jno
cs
outsb
lock
add
xor
jns,pt
scas
test
idivb
dec
jecxz
mov
mov
sbb
clc
cmp
sub
lock
inc
mov
ljmp
add
out
ds
ljmp
std
sbb
aam
mov
addl
shl
jns
xorb
std
hlt
outsb
shll
inc
or
hlt
inc
add
mov
inc
jmp
and
aaa
xchg
jbe
sbb
pop
push
add
cmp
fdivrp
jmp
jp
add
xchg
mov
dec
in
mov
out
rcrb
cwtl
mov
mov
addb
add
andl
add
jno
iret
adc
adc
std
ljmp
call
cmp
mov
add
aad
cld
push
jg
add
loope
invd
std
jle
pop
inc
add
sbb
mov
out
xchg
cld
repnz
mov
in
adc
push
ffree
call
incl
jge
xchg
out
or
insb
stos
sti
decl
packsswb
aam
in
cmpsb
dec
add
call
xchg
mov
xor
imul
in
jo
add
sahf
sub
adc
dec
or
icebp
out
adc
std
dec
shll
std
fmul
jmp
mov
into
je
push
ds
pop
xchg
test
das
pop
aam
les
add
mov
xchg
ret
cmp
add
fs
mov
push
inc
test
das
and
roll
lock
iret
pop
clc
stc
inc
fbstp
mov
sub
inc
jno
scas
add
pushf
push
sti
fcmovne
mov
shll
fadds
test
sub
popa
add
pop
addl
repz
addl
lds
push
jne
aad
inc
push
call
subb
call
jle
iret
xchg
sti
mov
clc
scas
jle
fdivs
jno
arpl
sldt
mov
mov
insl
add
pop
cltd
fadds
test
lods
into
jae
inc
iret
dec
bound
sub
imul
mov
add
xchg
lock
pop
into
je
cmp
fdivrl
jnp
addr16
add
std
dec
cwtl
cld
mov
and
cltd
inc
mov
ret
sub
mov
cmp
push
jmp
add
in
add
xchg
cli
push
call
test
pop
pop
xchg
ret
add
sti
orb
xchg
pop
jg
sub
cmpsb
not
lea
cmp
and
cld
sub
test
je
add
cmp
das
or
push
les
std
inc
std
adcl
mov
add
or
iret
das
leave
xor
sbb
icebp
rol
repz
inc
jmp
repz
add
sub
pop
adc
outsl
add
sub
mov
add
in
xor
sbb
push
mov
scas
aaa
mov
fmull
sti
in
xor
or
cmp
or
cmp
cmc
push
push
outsb
push
ret
mov
cmp
push
iret
std
jle
shll
pop
in
ds
int
inc
lcall
sub
sbb
add
xor
jb
mov
jnp
insl
leave
push
pop
rcrb
mov
aam
and
jb
pop
shrl
dec
in
jl
sbb
fdivl
daa
xor
xchg
jl
jg
pop
inc
xor
call
inc
pop
ja
int3
call
lret
jnp
test
int3
das
jg
hlt
sbb
sub
mov
out
add
jns
iret
sub
jmp
popa
dec
mov
enter
add
or
xor
push
fidivrs
cld
jmp
int3
sub
lock
adc
mov
or
test
cmp
cld
push
add
call
mov
mov
sbb
xchg
mov
fcomp
mov
add
fwait
ljmp
loop
cld
inc
scas
jne
cld
cmp
inc
lea
sbb
add
xorl
add
pop
aaa
int3
jae
sbb
into
dec
daa
js
add
inc
or
mov
inc
incl
push
mov
pop
lea
decl
pushf
std
lcall
inc
push
or
je
xor
add
dec
mov
call
test
xor
push
movsl
movsb
add
int3
test
mov
add
inc
nop
and
in
out
jecxz
add
jno
es
xor
mov
aam
outsb
inc
je
adc
lahf
std
cmc
xor
push
push
jle
inc
adc
sbb
incl
repnz
jmp
jne
add
scas
push
mov
mov
lods
fdivs
data16
repz
mov
inc
call
loopne
pop
xor
fcomps
jbe
inc
or
data16
push
inc
or
outsb
add
inc
insl
cwtl
flds
bnd
xchg
rol
hlt
int3
jmp
pop
sub
test
mov
and
add
and
add
and
add
and
add
and
add
and
add
and
test
or
add
cmp
leave
lods
iret
xor
out
and
popa
sub
jecxz
xor
psrlq
insb
jbe
jo
test
in
je
pusha
inc
imul
imull
ss
jmp
clc
cmpsl
stc
pop
sub
daa
adc
jns
cltd
cmp
jg
mov
push
cltd
push
loopne
sub
call
jb
inc
adc
iret
jmp
loopne
stos
les
sahf
cmp
jmp
stos
xchg
mov
pop
fnstsw
jae
sub
sbb
pop
insb
sub
std
push
repz
add
fs
scas
testl
repz
add
aam
or
xchg
dec
push
xor
dec
push
inc
add
add
adc
pop
shlb
xchg
mov
adc
adc
filds
call
xchg
or
inc
pushf
or
incl
push
inc
jns
inc
mov
je
mov
js
fs
xchg
psubq
jno
adc
test
cli
jb
pop
jge
dec
push
push
pop
inc
or
add
dec
clc
dec
push
mov
or
fmul
std
push
insb
jl
lock
xlat
xor
sahf
dec
aam
in
call
mov
inc
std
xor
call
cli
sbb
hlt
aas
jno
inc
cmpsb
dec
fbstp
lds
fsub
lods
xlat
add
leave
push
xchg
in
and
pop
hlt
jmp
cwtl
mov
xor
mov
out
ljmp
jge
jbe
mov
scas
inc
out
in
shl
popa
add
add
jge
rcrb
xchg
jbe
mov
enter
out
push
out
cmpsb
add
pop
adc
out
cmp
fidivrs
add
add
jge
int3
aam
xchg
jbe
mov
test
mov
fsubrl
out
add
rcr
jecxz
out
pusha
ret
push
das
or
lcall
jb
mov
std
sahf
cmp
add
pusha
mov
addl
sub
jns
repnz
inc
idivl
stc
jmp
mov
jb
cmc
roll
sar
je
mov
add
dec
inc
adc
std
push
jp
cmp
inc
or
add
fcoms
mov
out
dec
add
mov
dec
call
mov
pop
push
cmp
jg
add
inc
add
adc
mov
aas
testl
insl
xchg
inc
pop
jle
sti
dec
xor
or
cmp
jno
lds
push
cmp
or
add
mov
in
std
jmp
adc
jo
cmp
hlt
adc
call
jae
mov
js
movb
add
mov
es
test
add
jmp
inc
orb
add
cmpsb
mov
or
outsl
add
push
and
jmp
adc
add
aad
mov
mov
or
sub
add
mov
shrb
scas
iret
xor
mov
pcmpeqw
repnz
mov
sub
mov
ret
push
xchg
cmc
or
in
icebp
jb
mov
add
jbe
int3
je
cmpsl
or
add
hlt
add
mov
push
lock
pop
repz
push
addl
fstpt
or
rol
cmpsb
jbe
inc
ds
out
hlt
cld
inc
pop
add
sti
mov
xor
mov
pop
push
xor
ljmp
adc
int
in
ret
adc
popa
add
sub
test
sub
adc
test
rcl
mov
jno
incl
stos
xor
bound
mov
dec
mov
mov
pop
stos
addl
in
mov
and
cld
scas
aas
jg
mov
xchg
hlt
push
fsubs
movsb
aaa
pushf
jle
mov
add
bound
push
xchg
out
adc
mov
fs
sbb
mov
push
push
sti
cmp
sbb
test
push
sti
push
fs
decl
dec
adc
push
jns
adc
mov
xchg
mov
xchg
inc
and
jge
pop
hlt
xor
aaa
jne
dec
aaa
jge
icebp
dec
add
push
add
inc
call
jge
inc
decl
test
jle
jae
call
add
call
adc
or
pushf
adc
in
je
sub
in
iret
xor
push
aad
pop
lock
mov
out
jbe
flds
push
fmuls
imul
mov
push
loopne
icebp
sbb
add
in
jae
pop
dec
add
sbb
cmp
add
lods
aas
test
cmpsl
mov
fmull
mov
mov
out
add
fisttps
loopne
ljmp
into
add
or
add
xlat
subl
mov
mov
pop
mov
mov
clc
dec
filds
mov
cmp
call
mov
mov
mov
and
cmp
jo
pop
pop
mov
cmp
jle
cmp
dec
jae
stos
shl
shrl
pop
mov
or
mov
and
lods
filds
dec
add
stc
inc
aad
mov
mov
mov
ljmp
xor
repz
in
lods
cmp
sti
inc
sbb
orl
inc
adc
fisttpl
add
xorb
and
add
test
xor
add
sarb
push
xchg
test
mov
lret
or
jmp
add
add
orl
sub
cmp
dec
faddl
les
popa
dec
hlt
mov
incb
xor
xlat
xor
push
inc
or
div
decl
call
maskmovq
negl
hlt
mov
xchg
jge
in
jge
loopne
cmp
dec
ret
loope
mov
inc
adc
inc
decl
inc
pop
add
inc
aam
les
dec
mov
jle
jge
in
stc
add
jno
add
lods
dec
cmp
push
insl
movsl
jmp
jno
push
lods
jmp
mov
testl
pop
mov
or
xor
inc
fdivs
dec
enter
add
fs
cli
in
cmpsl
cmp
ss
in
mov
push
sti
in
adc
jnp
cmpsl
mov
repz
mov
cmp
icebp
test
ret
inc
push
test
inc
xor
cmpsl
or
mull
or
sti
add
sbb
cmp
jmp
divb
jb
fwait
mov
jmp
ret
out
cmpb
ret
jno
out
inc
aam
or
je
add
xchg
mov
movsl
mov
cmpsl
ss
mov
xor
test
mov
les
mov
sub
xor
pop
inc
push
test
jb
jne
jle
inc
add
scas
mov
mov
pop
icebp
inc
in
stc
jmp
rclb
adc
mov
ds
inc
call
call
loop
js
insl
sub
push
mov
sub
ret
push
mov
sbb
xor
mov
jg
int
push
hlt
pusha
inc
aam
dec
fucomp
push
fnstsw
movsl
call
gs
leave
cld
dec
lock
adc
out
xor
dec
add
xchg
dec
les
or
adc
ss
jo
test
add
lods
dec
sti
aad
std
decl
add
jge
test
popa
dec
clc
mov
loop
sbb
out
dec
mov
outsb
xchg
mov
adc
test
divb
inc
cmp
mov
jne
cmpl
clc
repz
clc
repz
mov
in
jl
inc
jmp
mov
mov
stos
int3
ljmp
shll
mov
aam
mov
push
call
pushf
cmp
or
fs
lods
jecxz
xlat
jle
xor
call
and
clc
xchg
popf
cmpb
mov
test
std
mov
or
rcrb
pop
lea
in
cmp
add
cli
adc
mov
fimuls
sub
popa
inc
dec
rorb
test
cmpsl
mov
jnp
ljmp
mov
pusha
aas
or
mov
lea
mov
shr
dec
aas
lea
jo
add
test
mov
mov
adc
xor
mov
int
bound
mov
dec
mov
sub
sub
push
mov
xor
sub
cmp
popf
cmpsb
ret
sub
cld
out
out
jl
xchg
or
shr
scas
mov
lock
adc
negb
outsb
jmp
inc
fdivl
mov
mov
test
sub
xor
int
push
jb
sub
bound
adc
mov
das
or
adc
dec
adc
mov
mov
inc
divb
dec
cmp
aaa
mov
test
xchg
call
and
add
decl
xchg
test
arpl
or
inc
roll
add
test
rorl
fprem
decb
pusha
mov
jge
test
xchg
pop
fmuls
fisttps
movq
mov
ja
jne
fs
ja
dec
aam
inc
hlt
pop
loope
add
filds
dec
loope
add
loope
add
or
mov
mov
jne
inc
lods
pop
inc
rolb
jo
inc
adc
int
cmp
jno
std
or
mov
outsb
add
into
inc
fdivrl
sbb
js
rol
lods
lret
les
cmp
popf
mov
roll
je
add
fs
lds
add
aad
pop
or
push
xchg
mov
outsb
inc
xchg
lcall
jno
jo
mov
in
dec
cmp
add
cld
hlt
add
shrb
push
mov
pop
mov
lock
out
repnz
out
jno
testb
xor
repnz
xor
movsl
push
int
ret
clc
mov
imul
add
sub
mov
mov
lock
idivl
insb
mov
sar
sti
jmp
out
dec
fdivr
pop
aad
std
push
shll
fcos
mov
fsubr
fnstsw
in
mov
test
jbe
mov
sbb
jp
push
or
jmp
clc
xchg
jns
xchg
xchg
cmc
jle
jns
in
jno
push
outsb
dec
mov
das
ret
sub
lods
add
inc
lock
jmp
mov
or
cs
inc
in
stc
jmp
mov
or
add
pop
mov
add
pushf
das
in
sub
dec
push
xor
mov
inc
imul
push
cwtl
sub
fmull
inc
add
add
hlt
sub
loopne
inc
adc
aas
addl
loopne
add
add
push
add
add
call
add
mov
cmp
dec
xor
jns
jno
in
or
jnp
xor
cmp
xor
cli
arpl
push
add
loop
adc
dec
or
jge
das
hlt
in
lcall
jno
sti
cmp
xchg
or
cmpsl
in
fldl
xor
ljmp
iret
mov
jl
adc
je
mov
int3
inc
clc
insb
leave
or
push
add
jle
sub
jle
enter
addb
add
jns
adc
sbb
mov
gs
xor
addr16
lea
jb
jne
sarb
pop
add
add
cmp
add
movsl
cmc
jmp
aas
and
mov
mov
movzwl
mov
mov
mov
incb
lock
jmp
pusha
ss
mov
ja
adc
ljmp
in
inc
cwtl
jmp
add
xor
daa
cwtl
mov
pop
loope
mov
cmp
adc
sub
lods
dec
rcl
clc
loop
aam
mov
add
aaa
sbb
decb
mov
xor
add
push
mov
or
push
jge
or
aaa
int3
mov
loopne
ret
pop
push
cmp
shlb
push
mov
push
inc
ljmp
push
ljmp
and
add
cli
xor
lds
cwtl
sub
mov
icebp
mov
aaa
shll
add
es
jmp
es
or
cmp
mov
aaa
rclb
mov
dec
jmp
ret
int3
jmp
es
int3
jb
push
mov
test
xchg
mov
hlt
jno
inc
enter
add
pop
test
mov
inc
lods
jae
leave
jbe
fucom
ss
mov
out
or
std
ljmp
mov
or
add
or
add
sbb
cmpb
lds
clc
fdivl
lods
xchg
ret
inc
inc
cltd
ret
inc
sbbb
jnp
cwtl
cmp
ljmp
cmp
mov
in
mov
mov
cli
add
inc
cmp
mov
fcoml
inc
inc
scas
cmp
push
add
mov
lcall
lods
cmpsl
jle
pop
xor
call
jne
iret
clc
cmp
sbbl
out
jb
mov
std
jo
jecxz
call
js
push
outsb
jbe
ret
pop
adc
xor
push
int
stc
inc
add
add
shr
mov
pop
out
jno
out
sti
add
jbe
cmc
add
xor
and
insb
je
jno
mov
push
sbb
icebp
pop
inc
push
call
orl
sub
add
or
daa
ss
ljmp
add
icebp
sahf
clc
lds
sub
je
or
push
test
sub
cmp
lock
mov
test
xor
divb
cmp
xor
bound
movb
add
nop
ds
call
cmpl
shrl
mov
push
call
add
sub
pop
push
int3
adc
rorb
out
lcall
inc
call
sbb
enter
mov
or
sti
incl
lahf
cmp
or
push
xchg
adc
cmp
cld
jnp
xchg
jo
dec
mov
pop
inc
icebp
pop
mov
lret
andl
inc
imul
xor
ljmp
pop
xor
jge
icebp
inc
add
mov
jno
and
mov
imul
jmp
and
out
icebp
and
inc
aas
pop
jecxz
negb
inc
cli
cmp
and
inc
mov
mov
or
fdivp
xchg
jg
inc
add
and
inc
out
xor
out
clc
xchg
jb
insl
cmc
xor
aas
mov
jns
and
cmp
out
jg
add
add
add
cmp
repnz
ljmp
add
cli
std
shlb
test
push
ljmp
mov
pushf
xchg
out
inc
and
jns
mov
mov
inc
dec
out
dec
and
sub
out
cmp
mov
dec
cmpb
add
add
sub
jmp
in
mov
sbb
inc
call
jo
int3
xchg
xor
add
and
lds
inc
jae
mov
cmp
xchg
xor
out
faddl
jmp
into
decl
mov
cmc
mov
icebp
jns
into
out
add
loopne
add
enter
mov
mov
dec
std
inc
clc
pop
cmp
xstore-rng
cmpsl
roll
xchg
ljmp
shlb
inc
mov
sbb
mov
jg
add
mov
call
sbb
lret
test
xchg
mov
adc
addr16
inc
repz
cmp
cwtl
aas
mov
mov
or
insb
jbe
jno
std
decl
cmp
rorl
cs
add
xchg
sarl
xor
push
mov
movsl
jb
jnp
xor
das
rorb
icebp
jb
push
les
dec
push
xor
jb
clc
cmp
ret
mov
ss
add
icebp
dec
add
add
mov
sub
cltd
add
leave
xchg
les
mov
push
sub
out
call
fnstcw
ja
icebp
jb
push
les
add
clc
test
stos
out
jno
jl
xchg
pop
cmpsl
add
xor
das
imul
test
and
jp
movsb
pop
aas
push
icebp
outsl
inc
add
xor
mov
fidivrl
les
mov
icebp
push
jno
out
xor
push
rcrl
sub
jns
pusha
adc
mov
sti
adc
mov
pcmpeqw
or
xchg
call
mov
cmp
push
cmp
push
or
xor
pop
popf
hlt
jae
or
adc
mov
scas
adc
push
test
aas
xor
inc
sbb
pop
andb
xchg
push
jle
enter
mov
sarb
sbb
jae
pop
dec
aam
xchg
push
inc
xchg
stos
std
fmuls
std
pushf
stos
jbe
xor
data16
cli
jns
add
test
and
je
lea
dec
in
loope
lea
mov
add
rcl
or
or
call
push
std
pcmpgtw
add
xor
inc
sbb
add
add
fwait
arpl
mov
test
ja
jne
fs
and
add
pop
shlb
repz
arpl
das
testb
push
sahf
and
pop
das
bound
mov
insb
jmp
mov
daa
xchg
dec
and
adc
jns
cmp
mov
repz
fs
pushf
mov
mov
ja
jmp
lcall
sub
or
jno
add
movsl
daa
xchg
mov
movl
xchg
adc
push
push
or
add
hlt
data16
stc
mov
dec
add
add
xchg
nop
xor
xchg
mov
jmp
hlt
repz
gs
add
sbb
sub
inc
in
add
fildll
imulb
shr
pop
xor
inc
testb
jo
in
xchg
popf
push
insl
xchg
nop
xchg
loopne
push
sti
inc
in
mov
fildll
xchg
add
xchg
adc
shrb
fdivr
out
sub
and
or
xchg
jb
lds
ret
inc
cmc
jo
add
iret
cli
xor
adc
scas
mov
add
add
add
sub
cld
jmp
adc
add
testl
sbb
inc
or
testb
out
inc
es
inc
clc
xchg
cmp
sub
out
inc
sub
in
hlt
push
dec
sahf
std
pop
xchg
lock
fs
dec
inc
cmp
add
mov
inc
dec
cmp
getsec
dec
or
fidivs
call
call
dec
sbb
nop
cld
xchg
test
add
dec
lret
dec
cmp
mov
add
popa
jbe
pop
xchg
rcll
add
call
dec
jp
addr16
leave
lret
decl
add
xchg
sti
jbe
popa
adc
call
fwait
in
jno
mov
stc
out
sbb
call
pop
inc
lods
mov
loop
push
cli
or
or
aas
jno
xchg
and
mov
out
sahf
ret
sub
mov
mov
call
jp
mov
aas
or
movsb
xchg
test
test
std
sti
sbbb
repz
add
pushf
or
imul
add
add
pop
out
call
out
and
bound
imul
cmpsl
add
sahf
lcall
jno
popl
mul
sub
lods
lret
and
imul
test
push
jno
inc
or
xor
out
push
rcr
cmp
out
stc
inc
scas
mov
mov
sbb
cld
test
inc
add
jb
mov
sbb
lods
jmp
mov
sub
shr
popf
std
ds
and
sub
mov
jb
mov
repz
mov
lods
xchg
fwait
push
in
jmp
in
bound
xchg
test
lock
jne
std
jmp
scas
add
jmp
adc
add
and
pop
out
xor
or
sub
xor
sbb
add
add
in
jp
inc
insb
jg
add
sbbb
enter
inc
sahf
add
fsub
aas
ja
cld
push
mov
add
inc
add
out
scas
cld
incl
xchg
cld
jg
jnp
mov
iret
pop
test
test
xchg
decl
pop
xchg
cwtl
xchg
aas
rorl
mov
jg
paddq
add
jno
int
mov
gs
sti
jmp
add
jno
add
test
inc
add
inc
pop
ljmp
and
mov
mov
mov
mov
dec
jp
ret
mov
inc
sahf
cli
fsubp
jmp
call
xchg
mov
icebp
mov
call
or
xor
inc
mov
cltd
mov
flds
cli
add
cltd
data16
pop
or
push
ret
inc
fldenv
ljmp
js
xchg
adc
or
movb
jl
or
out
add
jle
pop
das
jbe
rcll
push
add
jl
or
out
in
add
or
pop
inc
out
mov
xchg
out
jno
pop
xor
mov
xchg
xchg
addl
jno
jo
cmpsb
xchg
push
xor
fs
xor
mov
lock
pusha
adc
dec
pushf
jno
insl
mov
jno
add
mov
push
fidivl
test
adcl
add
dec
into
jb
or
jmp
popw
push
jmp
adc
shrl
in
out
std
cltd
mov
and
jmp
add
and
jmp
xor
call
jb
dec
xchg
adc
push
fisubs
mov
call
pop
test
dec
add
test
push
test
or
add
mov
divl
js
clc
mov
mov
jl
in
lock
or
into
out
std
jbe
incl
sbb
jnp
call
cli
push
jg
int3
add
test
sti
call
adc
popf
mov
inc
cwtl
imul
jge
call
push
aad
cli
push
jo
sub
dec
adc
bswap
mov
or
jno
jge
insl
test
jge
jae
add
and
dec
or
add
push
test
test
jle
jne
add
mov
decl
xchg
pop
test
test
test
cld
lcall
movsl
xchg
jns
add
test
test
mov
jno
mov
pop
mov
shl
add
jno
out
js
test
jns
leave
or
push
inc
out
jg
cld
out
sbb
jp
sbb
xchg
sbbl
add
sub
or
or
add
cmpsl
pop
in
push
jecxz
jno
lods
pop
call
sub
sub
sbb
xchg
inc
lods
adcb
sub
or
add
std
jae
mov
add
jg
add
jo
out
add
mov
push
inc
xchg
mov
fiadds
adc
insl
jge
inc
ljmp
inc
dec
aas
out
cmp
sbb
sub
or
add
clc
cmp
mov
adc
andl
inc
adc
pop
push
inc
push
sti
subb
cmpsl
or
fiaddl
ja
mov
push
cld
or
call
sbb
repnz
add
test
add
je
sub
cmp
cli
xchg
rcll
lret
mov
cmp
inc
jg
hlt
jle
adc
outsb
mov
jnp
add
enter
rclb
loopne
jle
inc
add
inc
push
jb
jl
enter
scas
addb
add
add
cld
lcall
xchg
mov
int3
mov
int3
out
sbb
getsec
shr
push
enter
jno
xor
ljmp
cli
xchg
mov
addl
cld
in
push
pop
shl
ds
sbb
xchg
jno
outsb
rolb
pop
rcll
push
and
leave
mov
jno
xchg
add
mov
mov
icebp
and
add
push
mov
fsubs
or
xchg
stos
mov
inc
xchg
mov
sub
mov
push
sub
int3
inc
add
add
out
mov
push
jae
out
mov
xor
xlat
shll
clc
test
add
mov
sbb
and
ljmp
xchg
leave
push
xchg
mov
adc
dec
lock
sbb
xchg
outsl
pop
mov
pop
sbb
xchg
sub
les
add
outsb
add
lahf
sbb
imul
add
add
mov
imul
xorb
loope
add
jmp
out
mov
call
jp
jne
jne
add
push
rorl
insl
leave
std
jmp
negl
dec
jmp
jb
add
cli
clc
mov
psubb
or
jmp
or
mov
ss
push
add
rorb
cwtl
jmp
push
lcall
imull
add
in
decl
mov
mov
out
mov
xchg
aaa
sub
sbb
mov
add
mov
mov
mov
or
out
leave
imul
out
mov
sub
xchg
in
add
mov
jne
or
addr16
adc
int
xchg
lret
inc
jb
push
mov
jno
inc
dec
cli
into
rcr
adc
mov
jmp
ret
mov
cmp
add
sbb
mov
nop
push
fistl
inc
add
ss
or
mov
jp
test
or
push
rcrl
cltd
nop
jno
jno
scas
jb
popa
push
cltd
lcall
xchg
in
decl
nop
jae
adcl
mov
bound
cmp
mov
sbb
inc
cwtl
loop
xchg
mov
add
loopne
decb
repz
addr16
add
or
add
cs
ret
fildll
push
inc
mov
push
imul
outsl
dec
fistpll
sarl
cmpsb
ret
push
mov
jno
lds
sub
lock
add
pushl
hlt
cld
aam
lock
jmp
fidivrl
push
out
icebp
inc
pop
xchg
std
inc
add
push
in
push
sbbb
cli
xrelease
in
ss
negb
std
pushf
jp
jno
decb
ret
xor
cwtl
enter
pop
aaa
xor
pop
pop
ret
sub
inc
mov
inc
dec
xorb
xchg
aaa
es
push
or
and
repnz
xor
insl
gs
test
and
incb
sbb
movsb
add
pop
std
call
xchg
fidivrs
add
mov
mov
decl
push
ret
jge
mov
add
call
or
iret
xchg
ret
xchg
iret
pop
jnp
cmp
les
das
rolb
decl
rcll
add
or
out
repz
inc
add
sub
pushl
ja
jns
inc
add
int
out
or
or
fdivrp
mov
aaa
cld
mov
xchg
add
push
test
adc
or
adc
adc
out
ljmp
clc
into
pop
adc
adc
aaa
adc
enter
mov
clc
into
iret
and
adc
jle
ss
dec
ret
cli
mov
push
mov
xor
push
cmp
ljmp
mov
popl
jo
notl
pop
jnp
ret
leave
mov
mov
jo
jns
cmp
ret
or
push
pusha
xor
test
jmp
jecxz
ret
loope
add
jns
out
rep
xchg
fsubr
add
bound
push
cmpsl
std
mov
repz
popa
cmp
mov
inc
insl
jnp
fcoml
mov
sub
sub
mov
ret
xor
jmp
jmp
add
jmp
pop
inc
cld
sbb
pop
outsb
cli
test
add
les
or
dec
mov
add
mov
mov
jmp
add
adc
sbb
std
push
outsl
adc
xchg
pop
jnp
popf
jmp
std
cltd
leave
inc
loopne
xor
call
jmp
add
std
into
sti
xor
call
xor
adcl
jb
add
mov
test
inc
loopne
ret
int3
imul
and
jp
lea
daa
sti
pushl
nop
addr16
inc
loopne
inc
imul
int
add
int
adc
pop
add
or
inc
cld
push
dec
add
mov
jecxz
lea
pop
push
movb
aam
add
fdivr
call
inc
pop
std
push
adc
push
hlt
out
mov
add
or
mov
in
jp
lock
add
xchg
xor
ljmp
or
aam
gs
clc
xchg
mov
lods
push
or
jl
clc
arpl
add
testb
test
rolb
jno
dec
inc
dec
xor
mov
add
pushf
xchg
fucom
add
shl
test
out
insb
dec
sub
or
cs
ljmp
cmp
xchg
stos
mov
int3
add
orb
jo
out
push
mov
sub
pop
pop
ds
mov
add
shl
les
out
add
leave
ret
lahf
and
jbe
xchg
lods
call
loop
mov
jne
mov
mov
add
jg
repz
std
jmp
aas
jle
call
int
jno
fistpll
mov
cmpsb
mov
add
jb
jmp
jmp
add
cmpsb
xor
jb
or
jb
rorb
sub
pop
xchg
mov
add
data16
icebp
and
call
arpl
adc
cld
imulb
call
gs
xorl
sbb
push
inc
inc
stos
jb
add
aas
fdivrs
fwait
mov
imul
call
cld
aas
jg
or
js
add
pop
jns
add
cld
mov
push
call
test
inc
fdiv
andps
add
mov
lea
clc
decl
out
fs
incl
cwtl
std
decl
push
inc
testb
jp
inc
push
int
push
sbb
jp
mov
pop
lock
jno
shll
cmc
jne
imul
jno
iret
shr
pop
mov
or
dec
ja
hlt
outsb
leave
inc
jne
in
mov
enter
xchg
icebp
dec
add
pop
cmp
enter
adc
xchg
cwtl
gs
repz
popa
lahf
cltd
add
add
rolb
mov
push
int3
adc
ret
jns
sub
mov
jbe
jns
pop
add
push
dec
push
add
ljmp
in
nop
out
fmuls
push
iret
sbb
add
aas
sub
movq
mov
imul
jae
dec
jnp
ljmp
jne
ss
lahf
stos
movb
fs
mov
jg
cmc
testl
loopne
sub
lds
jns
jne
add
and
add
jno
mov
fsubrl
fs
mov
jb
add
cmp
std
mov
pop
movsb
cmc
add
push
pop
jg
push
repnz
call
xchg
fs
jl
out
aam
hlt
xchg
adc
jmp
add
jmp
loopne
adc
bnd
push
repnz
test
jb
pushw
sub
xchg
adc
jo
sub
or
cld
data16
fsubrs
std
dec
repnz
jle
add
inc
adc
pop
add
incl
or
xor
addr16
js
sbb
xchg
xor
jo
mov
add
add
sbb
js
push
inc
jns
push
xor
clc
add
mov
add
add
in
pop
xchg
call
int
test
test
lret
inc
cmp
enter
jge
call
mov
jmp
jno
testl
xchg
imul
mov
sbb
addb
mov
jae
imul
add
jb
add
decl
std
ss
xorb
call
in
cmpsb
je
hlt
and
jmp
std
imulb
jg
jno
jg
leave
xchg
adc
mov
out
hlt
rorl
imul
or
jno
lds
xchg
in
xchg
inc
xorl
test
mov
clc
test
jg
jl
xchg
sbb
sbb
adc
jnp
sub
lret
jg
jl
bswap
jnp
xchg
or
sub
out
mov
out
repnz
out
and
add
shl
fadds
test
addb
lea
jnp
rcl
int
inc
icebp
jge
push
xchg
sti
data16
adc
lods
push
icebp
jge
insb
ljmp
jo
pop
push
pop
imull
std
es
rorb
xchg
push
test
jne
cmc
cmp
cmc
jae
add
cmpl
filds
add
inc
data16
add
sub
mov
decl
clc
xor
cmpsb
data16
and
sbb
jmp
dec
jge
add
mov
add
adc
lcall
dec
add
cmp
mov
decl
dec
add
xchg
xchg
cld
aas
sti
dec
call
xchg
mov
xchg
jl
cli
add
pop
add
cwtl
dec
dec
mov
adc
cmp
or
adc
enter
or
pushl
lret
mov
movb
rolb
dec
add
or
jne
fwait
jnp
icebp
pushl
nop
jle
jno
mov
sbb
pop
hlt
in
sub
sahf
fcmovbe
out
mov
pop
out
sub
ret
add
mov
std
clc
repz
data16
sub
cmpsl
add
sahf
out
or
mov
add
push
std
fwait
imul
popa
push
jnp
mov
add
or
or
fiadds
sbb
lock
mov
xchg
js
mull
call
insb
xchg
jbe
add
add
jge
sbb
ret
sahf
loop
xchg
push
jge
xchg
js
or
mov
js
mov
add
mov
or
inc
js
xor
test
pop
pop
inc
mov
inc
icebp
mov
testl
jl
js
sbb
fnstsw
add
std
scas
add
mov
ljmp
insl
sar
adc
jne
lea
ljmp
imul
divb
jae
out
adcl
jne
pop
insb
add
xor
add
inc
mov
jne
es
xor
mov
jb
mov
mov
mov
test
jbe
mov
add
std
ficoms
pop
add
movl
xorl
jmp
adc
xchg
sbb
les
dec
jns
pop
push
dec
add
fs
pushl
out
andl
add
aaa
dec
mov
dec
in
in
cli
cli
push
xchg
push
aad
xor
or
movsl
movsl
xchg
stc
cli
jne
insb
xchg
push
or
lds
cli
jo
aaa
adc
adc
jmp
xchg
das
lds
jno
mov
repnz
xchg
dec
ja
out
loop
pop
clc
aam
ficomps
xchg
mov
and
xchg
and
jns
int
sar
cmpsl
or
ljmp
add
lcall
lds
add
jb
xlat
clc
mov
push
mov
adc
jno
aas
inc
ds
add
xor
xchg
pop
push
add
ror
mov
jo
sub
lods
push
add
mov
xchg
lock
or
jnp
add
adc
and
cmp
mov
ja
jns
jmp
xchg
or
xchg
push
pop
insb
inc
pop
out
call
xchg
dec
cltd
in
pop
add
addl
test
out
clc
mov
mov
mov
mov
jns
mov
test
jl
xor
adc
rclb
rcl
xor
add
cmc
jne
out
frndint
into
add
std
call
insb
add
and
jb
or
add
cmp
sub
call
repz
std
hlt
adc
push
jbe
sti
out
and
push
jae
repnz
xlat
pop
mov
jb
push
push
je
out
mov
mov
add
xchg
stos
push
mov
aas
repnz
das
jmp
jge
decb
test
cli
decl
jno
jmp
jno
call
test
stc
pop
jmp
mov
in
and
or
fs
testb
mov
dec
mov
dec
cld
jne
xor
enter
movsb
stc
cli
adc
adc
cli
jmp
jmp
loopne
ds
ljmp
aas
cmc
sarw
jecxz
inc
jg
clc
pop
das
shlb
mov
mov
insl
push
es
or
mov
add
push
cld
add
inc
mov
shlb
mov
mov
mov
lock
cmp
out
rorb
inc
aaa
add
addr16
test
xchg
mov
imul
mov
pop
mov
add
sbb
call
in
daa
lock
daa
insb
cmpsb
jo
add
pop
out
jns
fldt
inc
push
imul
xor
pushf
imul
enter
and
push
add
dec
sub
add
or
sbb
out
ss
push
into
addr16
inc
adc
loop
test
xor
add
add
jl
jmp
add
dec
add
ljmp
mov
add
jg
jmp
mov
jne
andb
jne
jnp
lock
mov
out
cmovp
test
xchg
jo
xor
xchg
cmp
jne
sar
pop
pushaw
std
aam
adc
jmp
test
hlt
mov
xor
push
add
jne
jns
aad
jne
cli
add
fiaddl
push
add
fs
mov
out
mov
jne
cmc
xor
test
inc
mov
jae
add
pop
jnp
cltd
cwtl
outsl
dec
jle
or
sub
fisttpll
ret
iret
out
aam
jecxz
jne
test
jb
dec
add
lds
dec
out
dec
add
lea
je
add
lret
cmc
cli
je
hlt
jo
add
push
andb
jmp
xchg
addl
jno
test
add
push
xor
sbb
lock
test
lret
cmpsb
push
enter
pop
imul
inc
fistpll
out
enter
lock
add
in
and
adc
push
push
dec
push
call
add
fdivrl
jno
clc
pop
jbe
popa
call
cli
mov
call
repnz
jno
cmc
xchg
jb
inc
ret
inc
cmp
inc
sub
or
xchg
loop
loop
loopne
sar
sbb
mov
aaa
sbb
jle
repnz
jb
in
add
fimuls
add
inc
xchg
fistpl
sub
mov
pop
clc
pop
inc
fcompl
jno
pop
or
outsl
movsl
enter
push
pop
scas
ret
popa
add
or
outsb
hlt
bound
add
mov
fisttpll
push
cmp
push
mov
std
jnp
dec
test
cmpsb
pop
push
add
add
sarb
jae
out
bound
ret
jne
or
addr16
inc
daa
mov
sub
dec
xor
out
xchg
gs
shl
mov
add
xchg
inc
sub
repz
jecxz
add
test
cmc
arpl
dec
cmp
add
outsb
pusha
stos
jb
push
inc
jle
adc
mov
ffreep
andl
mov
ret
add
jns
push
jb
cmp
mov
out
xor
jmp
test
ljmp
pusha
sub
jae
cmp
rcrb
sar
mov
pusha
movb
add
push
pop
adc
adc
mov
dec
mov
mov
jmp
mov
and
decl
hlt
adc
aad
jae
pop
ljmp
sbb
adc
mov
or
pop
clc
pop
je
jle
in
adc
mov
adc
add
push
inc
push
add
aam
pop
adc
jbe
incl
xor
jl
cli
lcall
ds
insb
add
das
jo
jae
mov
add
inc
push
mov
push
pop
pop
xor
mov
add
xor
add
mov
arpl
inc
jno
cmp
sub
jp
jbe
inc
shl
add
popf
pop
sub
jge
xchg
shlb
sbb
pop
mov
gs
aam
out
outsb
adc
in
xchg
clc
add
jo
stos
outsb
inc
add
sbb
adc
add
loop
add
stos
jp
jge
outsb
sbb
imul
outsb
inc
imul
cmpb
lds
daa
imull
cmp
add
loope
add
shll
mov
add
rcrb
stc
imul
and
jg
add
out
cmp
cli
repz
jno
cld
cmpsl
add
xchg
push
mov
aad
add
ret
shlb
aas
dec
sbb
popa
inc
rcll
enter
enter
in
or
or
rcrl
cmc
mov
push
jae
sbb
add
mov
push
cmp
flds
cmp
pop
jne
inc
xchg
ss
sub
fimull
mov
and
add
std
out
incl
icebp
jl
decl
or
lea
pop
pavgb
jae
aas
leave
jl
add
cwtl
cli
xor
push
les
mov
mov
push
mov
in
xor
dec
push
mov
call
cli
dec
ret
jae
xor
pop
call
int3
ret
jae
inc
lods
incl
repnz
es
xorl
xchg
pop
out
lcall
inc
jno
add
add
jno
sar
lea
xchg
pop
mov
mov
imul
fldcw
lcall
stos
pop
or
push
pop
jg,pn
push
adc
push
imul
mov
and
add
jle
out
jno
dec
std
repz
jmp
leave
pop
lret
or
jle
bound
test
pop
rorb
pop
ja
incb
push
jb
pop
pop
add
lcall
sub
push
inc
mov
scas
add
sbb
ss
adc
js
gs
jne
sbb
fmull
shl
mov
incb
jl
cli
push
gs
mov
xor
loop
dec
pop
add
ret
jp,pt
pop
sub
push
gs
fwait
add
lds
sbb
add
or
pop
mov
push
jne
out
or
bound
std
mov
aad
in
sub
std
mov
fiadds
cmpsb
xchg
hlt
and
jb
xor
arpl
push
jo
jo
insb
data16
insb
data16
clc
gs
in
cld
pop
fdivrs
loope
xchg
enter
leave
gs
gs
xor
jbe
push
test
jb
jae
cltd
mov
xor
roll
and
add
mov
std
jmp
scas
xor
mov
scas
std
ljmp
out
std
fdivr
xor
dec
push
lcall
fcoms
pushf
movsl
aas
std
mov
jge
incl
xchg
push
dec
push
fsts
enter
push
jb
call
cmp
out
out
ret
fdivr
mov
les
xchg
je
inc
and
jmp
mov
or
pop
mov
dec
xor
cld
fs
inc
jno
adc
test
inc
jno
dec
call
aas
push
lods
cltd
add
mov
cmovo
inc
pop
push
mov
push
adcl
in
dec
jmp
and
sub
inc
jno
inc
jle
push
dec
sub
xor
push
add
add
cmp
add
add
stc
mov
loopne
jno
fs
mov
add
add
mov
out
out
mov
dec
lds
icebp
xchg
add
data16
pop
dec
enter
inc
cltd
popf
fwait
data16
ja
push
mov
fs
popa
cld
sti
or
call
loop
pop
xor
or
mov
and
add
mov
mov
jmpw
decl
jmp
stos
repz
sub
cld
mov
xor
sub
add
pop
dec
jmp
hlt
jb
inc
jmp
jb
sub
fdivrp
mov
rorb
shll
jae
pop
mov
ss
in
push
insb
cmp
stos
cmp
pop
adc
ds
add
jmp
pop
jbe
adc
mov
cmc
add
push
and
xor
je
or
je
or
xor
add
leave
mov
cli
shrd
rorl
mov
mov
call
in
or
enter
sti
jbe
fcom
dec
in
test
jo
adcl
in
enter
add
mov
and
add
xchg
cld
jne
inc
hlt
jb
push
decl
cld
adc
jno
dec
cmpl
add
pop
cli
addr16
ds
inc
je
loop
or
lock
dec
or
add
sbbl
lods
gs
imul
add
add
scas
sti
add
mov
bound
into
jge
sarb
fdivrp
jno
or
and
popa
adc
push
sar
loop
pop
test
adc
and
outsl
adcl
clc
mov
fildl
pause
mov
mov
jb
out
push
aam
dec
mov
call
leave
inc
icebp
or
pop
stc
icebp
out
and
push
stc
add
push
cmp
inc
cmpsl
dec
xor
cwtl
in
jb
daa
xchg
stos
pop
cwtl
ret
ds
ficompl
xor
stc
cmpsb
ret
scas
inc
jecxz
and
data16
mov
sbb
lock
xchg
mov
clc
cmpsb
repnz
sbb
jmp
lret
insl
mov
imul
test
mov
dec
mov
icebp
fcmovnu
xor
movsl
push
hlt
out
les
jb
add
test
stos
scas
push
push
dec
ljmp
xchg
ss
hlt
pop
std
pop
outsb
jg
faddp
xor
mov
push
mov
pop
arpl
shl
mov
xchg
in
imul
aaa
push
rcll
jne
xor
cs
les
xchg
cld
adc
and
sbb
jno
shlb
je
leave
add
xchg
inc
std
daa
fnstcw
std
lds
lds
call
and
mov
fldt
out
mov
call
inc
std
mov
mov
clc
fbstp
add
sbb
ja
test
inc
enter
sub
imul
mov
xchg
cld
lcall
jg
jno
inc
mov
xor
push
push
imul
sti
stos
cmpsb
aad
pop
sbb
std
pop
rol
pop
lcall
inc
inc
jns
jae
sbb
pop
mov
adc
in
sub
or
je
call
clc
stos
or
jl
pusha
adc
stc
xor
jmp
or
outsb
dec
ret
mov
cmp
stos
sar
mov
push
pop
cmp
jno
pop
adc
insb
popa
xor
out
and
mov
pop
xchg
mov
lods
ret
jle
sbb
jbe
in
arpl
mov
cld
aas
add
mov
dec
aam
mov
les
adc
jno
out
cs
cs
rcrl
sbb
pop
stc
push
add
out
jle
jg
out
orb
pop
out
cmpsb
add
add
mov
jge
mov
add
add
fbstp
pop
jo
movb
loope
in
cmpsl
cld
mov
das
test
jb
mov
xadd
movb
jmp
loope
mov
mov
sti
mov
add
jb
subl
pop
xchg
add
jmp
testl
imul
lahf
int
daa
sub
out
adc
jb
or
jmp
popa
jge
add
clc
leave
or
mov
dec
or
repz
lea
out
adc
add
pop
lock
pop
mov
cli
adc
int
or
scas
aas
test
inc
mov
mov
mov
add
sbb
jae
mov
xchg
cld
jne
mov
in
fidivs
mov
add
mov
push
dec
cld
jne
mov
jno
int
push
inc
sbb
mov
fnstsw
jno
out
push
imul
out
xchg
das
pop
adc
sbb
xorl
cmc
incl
add
in
push
inc
add
mov
test
jb
repnz
pop
adc
sub
dec
add
push
orb
divb
pop
push
mov
inc
leave
js
jae
gs
addl
add
add
add
insb
pop
push
into
inc
xor
jno
sar
popa
dec
push
jae
push
inc
orl
leave
subb
xor
pop
add
ja
push
jbe
ljmp
or
int3
push
pop
add
cld
ret
inc
mov
mov
mov
lock
out
rorl
pop
cli
mov
fists
and
mov
adc
clc
xor
xchg
out
cmp
jno
rcl
jle
loope
int3
and
out
testb
jno
je
mov
jmp
jmp
mov
mov
stos
add
push
pop
xchg
and
call
lret
sbb
push
sbb
jb
std
cld
push
out
aas
jmp
push
std
jmp
icebp
jecxz
cs
add
fidivrl
shll
cld
add
add
hlt
mov
cli
jne
mov
std
add
jnp
add
or
decl
add
ljmp
cli
push
gs
jmp
movb
in
orl
jo
xchg
push
popa
lret
or
push
jmp
testl
out
jo
mov
decl
add
testl
add
lea
ret
pushl
sub
std
ficomps
push
cwtl
int3
fdivr
into
xor
push
scas
fs
xor
call
scas
xchg
pop
lcall
sahf
ljmp
push
std
jno
sbb
sbb
std
mov
pop
inc
cmc
inc
inc
jle
lretw
adc
dec
inc
jno
mov
cmp
mov
cmpsb
add
mov
jae
ja
add
mov
push
pop
std
push
add
ret
push
frstor
cmp
pop
lahf
xchg
dec
xor
aaa
add
push
mov
dec
xor
sbb
push
fiadds
fimull
mov
mov
scas
jp
jmp
mov
movsb
fsubrl
add
sbb
xchg
idivl
xor
sbb
ret
add
mov
xor
out
loop
dec
fimuls
xorb
idivl
jb
and
les
cmp
add
call
pop
out
aas
jmp
xor
imul
jae
pop
xchg
adc
mov
push
mul
sub
test
mov
out
and
std
gs
push
scas
jno
les
insl
sbb
add
add
push
mov
adc
aad
enter
push
dec
pop
dec
inc
jmp
adc
enter
xchg
mov
mov
add
pop
ds
push
mov
test
std
jg
std
ret
std
jo
jo
stc
pushl
mov
add
ds
aaa
add
cmp
vpaddb
inc
fdivr
push
mov
mov
ret
in
push
jle
push
xor
cwtl
callw
std
add
lcall
sti
adc
jecxz
jle
out
xor
gs
jae
xchg
xchg
or
inc
jno
mov
mov
outsl
push
adc
sub
push
sbb
add
pop
stos
cld
add
aas
jno
push
incl
add
out
pop
mov
mov
mov
insl
pop
scas
mov
push
lods
and
mov
xorb
push
mov
cltd
lods
adcb
jmp
xchg
pop
cmp
mov
pop
or
jns
add
repz
add
hlt
sbb
in
incl
add
jmp
into
sarl
pop
out
xor
ljmp
fsub
adc
xchg
lods
or
add
cmp
rcrl
jge
ss
jne
fdiv
mov
inc
inc
out
jno
outsb
or
leave
push
push
add
fld
sahf
ja
cld
movb
in
push
add
jno
popf
sbb
jl
fdivp
add
cmp
scas
lcall
into
push
mov
stc
inc
je
sbb
jmp
ret
icebp
pop
dec
mov
imul
jmp
push
lock
inc
aam
fldl
and
inc
icebp
pand
jno
stos
ret
jb
jg
in
xchg
dec
mov
mov
mov
adc
sbb
pop
mov
std
adc
jne
rcrb
mov
subb
mov
inc
movl
jecxz
dec
push
int
cmc
push
fildll
add
inc
dec
js
je
into
inc
clc
xchg
mov
jmp
xchg
jmp
add
sbb
add
in
or
add
mov
and
aam
adc
std
test
add
jl
enter
jnp
push
lea
idiv
mov
add
inc
mov
inc
mov
add
repz
jmp
in
jno
dec
std
roll
jbe
pop
insl
pop
add
cld
sbb
sti
inc
jecxz
or
stos
dec
subl
pushf
push
jl
in
lods
push
stc
push
adc
pop
add
jno
add
pop
pop
dec
pop
add
mov
or
sub
adc
pop
test
lods
cmc
inc
lock
add
rcll
dec
nop
inc
or
dec
adc
pop
pop
out
sbb
jb
pop
testl
lds
push
push
push
out
jno
fdivrl
mov
add
mov
test
mov
out
shll
ret
push
xchg
add
pop
mov
dec
es
or
mov
push
inc
push
xlat
dec
jl
jmp
inc
testb
loop
jno
cmpsl
fsubrs
out
inc
clc
aad
jp
es
aas
cmp
xor
mov
add
xor
add
loop
ljmp
cmpl
ds
aam
push
sbb
dec
cmpl
insb
aas
xor
mov
or
lods
mov
and
push
fsub
mov
add
jb
dec
ret
jae
imul
jb
je
xchg
dec
adc
or
jb
jg
mov
xchg
call
cld
pop
mov
push
fidivrs
jge
aaa
cmpsb
outsb
roll
dec
lds
dec
add
mov
xchg
mov
in
or
dec
push
dec
push
push
inc
shrl
xor
xlat
jl
test
std
shll
xchg
add
movb
add
std
roll
incl
fs
add
lds
dec
das
outsb
xor
std
add
rorl
mov
jl
cwtl
enter
stc
mov
in
mov
cmp
jle
incl
in
std
jno
dec
xchg
pop
xor
inc
dec
mov
mov
and
test
test
cmc
jnp
pop
add
xchg
ljmp
jg
test
dec
pushl
sub
inc
dec
in
cltd
fmuls
add
aam
sti
cmpsl
mov
test
out
aas
jno
inc
jae
aam
jmp
scas
jb
ret
mov
inc
ret
jno
add
pop
pop
mov
outsb
addl
je
cmp
sar
dec
cmp
add
and
cmp
orb
jl
mov
insl
stos
dec
bound
fld
xchg
out
add
and
cmp
ret
adc
ret
push
jp
xchg
call
add
push
std
int3
xchg
int
js
adc
mov
jns
dec
bound
fld
push
subb
xor
add
shl
mov
jmp
in
inc
jae
push
jns
mov
cmp
incl
stos
mov
jmp
adc
aad
add
jmp
push
clc
dec
bound
pop
lods
inc
in
je
add
int3
ja
icebp
sbb
jmp
add
xor
or
mov
inc
mov
inc
std
aad
jp
or
mov
jl
mov
jns
or
push
rolb
jb
mov
jb
test
add
in
gs
lock
enter
ret
enter
test
out
cmp
movsb
dec
cld
mov
dec
decl
jmp
shlb
cld
adc
cmpb
mov
adc
jnp
adc
sub
test
xchg
or
or
push
mov
arpl
or
dec
push
test
call
das
cmp
sbb
push
jge
outsb
push
js
xchg
pop
mov
in
xor
add
mov
pop
out
aas
jno
mov
std
outsb
fildl
push
jl
xchg
sub
incl
or
or
push
jbe
jmp
test
aas
jno
add
pop
pop
clc
addb
pop
add
cld
sbb
dec
std
fiadds
in
jo
add
mov
adc
push
into
or
int
call
jae
add
out
in
push
ja
sbb
mov
in
jbe
mov
fs
inc
clc
lods
or
clc
js
enter
xorb
test
dec
inc
lock
int3
imul
incl
dec
and
pop
lock
fnstsw
call
mov
inc
inc
out
xor
mov
mov
inc
aam
and
ja
pop
jns
mov
aam
add
jmp
daa
out
cld
pushf
loop
jae
cmp
pop
add
mov
je
add
inc
adc
les
add
cmp
inc
std
faddp
push
adc
mov
movsl
pop
and
pop
pop
stos
cltd
inc
push
bound
sub
insb
mov
or
addw
inc
xchg
aaa
cmpl
push
lret
inc
push
outsb
xchg
popa
stos
push
std
ss
mov
pusha
xor
and
addb
das
add
add
js
roll
jns
dec
mov
je
sbb
lds
mov
xor
inc
mov
enter
jge
sbb
cltd
or
dec
mov
cld
nopl
iret
inc
out
jne
imul
je
push
push
lock
mov
out
icebp
xorb
jae
daa
pop
pop
outsb
ret
or
cli
jne
cmpsb
lods
cmp
in
pop
mov
aas
add
das
sub
push
push
flds
imulb
icebp
adc
jne
pop
shll
add
fst
push
sub
imul
push
scas
inc
jmp
inc
test
mov
mov
push
mov
ds
inc
mov
push
jbe
icebp
push
add
add
xchg
inc
xorb
imul
xchg
daa
hlt
in
sub
jno
pop
xchg
testb
inc
fwait
adc
iret
jbe
sahf
jb
inc
out
icebp
dec
inc
pop
stos
cmp
iret
push
jbe
out
aas
out
icebp
dec
push
pop
or
push
iret
jle
ds
aas
out
icebp
dec
negb
stos
in
inc
out
aas
out
add
out
mov
cltd
xchg
aas
fimuls
inc
lret
arpl
inc
je
jbe
js
jo
aaa
add
add
add
dec
or
sub
add
and
fstps
or
pop
jo
push
call
dec
inc
adc
xlat
xchg
cwtl
int3
jl
call
jb
cld
cld
ficoml
jmp
pusha
mov
je
add
cmp
jnp
aas
roll
mov
insb
aas
mov
mov
lahf
jle
pop
test
push
push
jno
out
cmpsl
cmp
push
sub
pcmpeqb
aas
add
jb
mov
add
jmp
pusha
push
std
decl
jg
dec
add
push
int
nop
add
add
test
sbb
xor
mov
call
add
push
xchg
pushl
mov
decl
lahf
dec
push
mov
loop
jg
mov
ret
dec
test
add
pop
mov
std
adc
out
and
cli
mov
xor
xchg
xor
decl
adc
mov
aas
push
jo
inc
call
outsb
testb
mov
xchg
pushf
add
jno
test
jbe
add
jno
dec
xor
es
push
jp
or
push
sbb
xor
xchg
insl
jmp
sub
ffree
add
jno
mov
daa
mov
cmpl
loop
jno
roll
sbb
push
add
lds
jp
rclb
lods
jge
outsb
sub
hlt
add
pop
cmp
sub
lea
dec
cmp
sub
xchg
lret
adc
scas
ss
cld
push
lock
outsb
sub
test
jmp
outsl
leave
aaa
out
jno
in
cmp
or
push
jo
rorb
fdivrl
add
add
push
repz
mov
dec
dec
stos
add
jmp
movsb
fiaddl
mov
jecxz
mov
xor
xchg
adc
fnstenv
add
jb
push
pop
fistpll
cmpsb
mov
or
adc
add
into
or
add
imul
cmp
pop
mov
mov
push
cmp
dec
add
jmp
push
or
call
add
mov
lret
jb
mov
out
cmp
bound
add
adc
mov
inc
add
ret
test
lret
notb
ret
mov
enter
sbb
cmp
lea
pop
call
jecxz
jns
shll
or
xchg
adc
addl
add
add
decl
shlb
sbb
decl
dec
mov
or
aad
mov
add
std
decl
dec
mov
loop
jle
mov
sub
cli
addr16
std
decl
dec
mov
jno
add
or
push
add
movsl
jbe
pop
daa
rorl
jno
add
cmpb
repnz
add
jno
test
outsb
daa
add
out
or
rolb
xor
mov
cmp
pop
jge
mov
into
arpl
out
mov
and
sub
and
sub
aad
add
jno
repnz
ljmp
subb
add
add
out
test
mov
cmp
jle
mov
iret
data16
aam
into
imul
into
movsl
xchg
xchg
divb
ds
outsb
pop
cmp
cmp
mov
into
push
mov
aaa
aam
movsb
aaa
fdivl
shl
mov
into
ljmp
fwait
lldt
inc
xchg
lods
dec
mov
out
imulb
not
stc
and
cwtl
mov
pop
mov
dec
in
fdivs
mov
shl
ss
std
insl
xor
cmp
jo
or
pusha
ja
xchg
sbb
sbb
dec
pop
std
std
dec
pop
std
aam
adc
sub
and
insl
mov
sub
or
imul
addr16
adc
push
xor
pushw
add
or
lret
push
push
addr16
add
add
inc
cli
adc
jg
jmp
ret
inc
xchg
push
dec
dec
push
leavew
mov
cs
fnstsw
add
jne
test
loope
cmc
incl
adc
pop
add
jmp
jle
add
push
mov
out
mov
jg
or
jmp
adc
jbe
ljmp
lods
in
xorl
jno
lahf
jb
jmp
sbb
xlat
inc
stc
cli
mov
sub
hlt
inc
adc
push
call
sub
xchg
sahf
jb
je
mov
data16
mov
cmp
add
push
mov
movsb
cmp
ss
fsubl
lahf
xchg
pop
cmp
pop
inc
cmp
xchg
std
cs
pop
adc
jne
iret
push
ljmp
imul
sar
testb
mov
xchg
sub
push
lds
mov
ret
add
stos
out
movsl
or
xor
fs
sbb
push
daa
add
mov
cmp
hlt
ret
jbe
lds
sbb
daa
add
inc
mov
jmp
test
loopne
orl
push
shl
and
add
mov
xor
lahf
jno
sahf
xchg
cltd
xor
cmp
aam
call
cmp
rcrb
je
cmp
push
mov
cmovo
jmp
addr16
xor
rol
insb
sarl
std
out
ret
push
dec
paddb
mov
cmp
mov
addb
std
cmp
mov
inc
int
insb
push
xor
sahf
and
std
cmp
cmp
or
add
add
test
outsb
pop
xor
push
insb
into
xor
push
sbb
andb
ret
push
mov
in
or
call
dec
add
inc
aam
dec
add
aas
jae
mov
je
sub
mov
lahf
out
xchg
gs
call
dec
hlt
test
add
cmp
mov
lock
incl
daa
in
addl
xor
ja
push
out
or
push
dec
in
fwait
jmp
inc
or
inc
cmc
sbb
mov
add
jle
test
ss
dec
sar
out
adc
fdivrp
into
fimull
test
add
pop
test
pop
add
pushl
mov
testb
std
cltd
fdivl
std
xchg
cmp
aad
jmp
pop
mov
mov
mov
mov
adc
inc
pop
dec
ss
cmpsb
cmp
mov
sbb
or
add
push
dec
xchg
adc
or
cmp
fistl
mov
mov
addb
lret
cmpsl
add
and
rcrb
add
aaa
push
lods
stos
int
out
imul
sub
das
lock
add
sbb
fisttpll
cltd
or
add
aas
push
or
das
fdivrl
add
subb
cmp
pop
sbb
add
xchg
rclb
jle
repz
xchg
jno
add
gs
push
xor
out
ljmp
lods
mov
jb
sar
mov
jb
into
push
test
js
cwtl
ret
cmpb
mov
pop
jb
shrl
add
jb
neg
mov
in
das
std
bound
divb
js
push
sub
insb
mov
dec
aas
cmp
sbb
and
sub
loope
shl
sbb
inc
je
add
mov
sti
bound
cld
add
cmc
dec
or
ret
jae
addl
leave
dec
ds
sub
or
stc
add
mov
push
dec
jmp
andb
xchg
mov
adc
push
enter
aam
add
inc
dec
cld
je
add
adc
add
faddl
push
xchg
push
push
add
push
jns
cld
push
jno
mov
movsb
xor
je
dec
jle
scas
shrl
in
push
mov
cli
and
sarl
hlt
xlat
mov
ljmp
cmc
ds
clc
xor
jle
ss
inc
or
xchg
jle
and
sbb
push
xor
je
lcall
and
aam
add
add
jle
fildl
aam
add
imul
jle
fildl
cmpsb
sarl
jns
fldcw
addb
adc
adc
jp
push
xor
sub
sub
sub
pop
mov
stc
ret
xor
mov
mov
cmc
test
aad
xor
loopne
dec
clc
add
imul
sub
aad
shlb
sub
and
add
les
pop
add
fwait
push
mov
add
hlt
pushl
sub
dec
std
mov
lahf
imul
lods
xor
jg
mov
shrb
inc
scas
pop
outsb
pushf
jg
fsubl
jae
jne
std
fcompl
add
mov
mov
lret
das
clc
mov
mov
push
bound
aad
add
adc
jb
xor
jmp
je
insl
sub
inc
xor
mov
hlt
cli
dec
jmp
fisttpl
int3
xor
decl
jb
pop
subl
sbb
ss
daa
andl
or
mov
dec
mov
dec
xchg
cmpsb
jo
xorl
cmovge
inc
hlt
jae
or
jno
cmovl
dec
push
stos
jg
lock
ret
rorb
test
sti
out
jo
add
out
add
sbb
xor
sahf
cmp
adc
push
ret
subb
jmp
jmp
fwait
daa
add
mov
push
jge
stos
andb
repnz
mov
mov
mov
sub
shll
ficomps
push
push
jns
xor
mov
add
in
jb
mov
popf
mov
imul
xchg
mov
xor
mov
cwtl
mov
jae
jecxz
jno
enter
psadbw
jle
push
or
rcrb
or
ret
sti
ret
and
clc
test
push
andl
stc
notl
das
add
adc
jp
sarb
inc
rolb
xorb
fdivr
stc
inc
and
xchg
cmp
mul
addb
movsl
sub
inc
rolb
outsl
cmp
add
dec
loop
inc
jmp
lock
cs
mov
mov
mov
cmp
pop
decb
scas
add
dec
and
stos
ret
testl
aas
jns
push
or
or
add
mov
mov
add
jne
inc
mov
je
dec
mov
das
sub
call
mul
mov
jb
sub
addl
popf
add
add
jle
pushf
and
cmc
mov
add
add
add
add
add
pop
add
add
ret
dec
ret
or
push
cld
add
add
jg
add
add
decl
xorl
in
mov
imul
imul
or
je
call
call
enter
sbb
add
jno
ret
pop
and
xchg
mov
mov
inc
imul
mov
inc
andl
inc
jae
inc
add
add
sbb
mov
inc
add
add
les
ljmp
or
cmp
xorb
ljmp
pushf
rorl
inc
or
call
cli
fs
xorb
add
jno
addr16
movsb
sub
sub
xor
mov
out
test
je
inc
inc
and
pop
stos
jmp
lret
fildl
mov
jns
test
jmp
jno
adc
jmp
shlb
std
fadds
mov
add
jno
out
jno
mov
ret
mov
sub
pop
sbb
jl
xor
test
add
bound
sub
div
xlat
add
jb
dec
add
add
clc
in
adc
jmp
ja
jo
inc
xchg
sbb
xlat
mov
pushf
jmp
jb
std
xor
jns
inc
jb
inc
pop
and
cmpsb
icebp
inc
or
call
ret
xchg
add
jne
cli
jl
and
jo
jb
std
faddl
cltd
incl
daa
std
dec
icebp
inc
or
fsubs
ja
test
out
addr16
decl
or
adc
jmp
inc
add
jo
or
or
or
lcall
incb
xchg
incl
arpl
lcall
inc
add
mov
or
cmp
lcall
hlt
cld
decl
icebp
mov
add
decl
jne
lock
je
sbb
push
jno
sub
jno
xor
jbe
pop
add
jno
cmpl
ret
jle
cmpsb
add
out
or
push
sahf
cmp
xchg
jmp
sub
into
arpl
and
inc
pop
sbb
repnz
clc
dec
cld
testl
inc
mov
sarb
jmp
sbb
mov
jb
inc
dec
mov
fsubs
add
in
repnz
mov
je
pop
ds
out
je
test
and
insb
mov
out
shrb
ret
pop
pushf
or
inc
add
jae
mov
rolb
or
and
or
mov
fs
ret
shlb
and
cmp
lret
ret
add
call
push
jbe
out
pop
add
add
cmp
es
xor
jno
lcall
mov
add
imul
popa
jae
inc
push
jae
add
sbb
std
cmp
add
test
sbb
xlat
add
cmp
out
push
add
jb
pop
roll
pusha
xchg
sub
bound
cmp
jno
je
sbb
add
xchg
pop
insb
xor
xchg
mov
push
xchg
repz
fidivl
dec
repz
mov
push
inc
cld
jmp
in
in
popa
pop
mov
cs
call
fisttpll
nop
adc
mov
fwait
dec
enter
jne
xchg
sub
cmc
pop
cmp
in
mov
cld
sbb
mov
out
roll
adc
sbb
insb
xor
call
ret
jae
ret
push
cmp
dec
sbb
sbb
push
pop
cld
pop
jp
jbe
jmp
cli
jmp
mov
mov
subl
std
fidivs
icebp
jbe
rorl
sub
push
call
push
and
clc
insl
jmp
cld
cs
insl
call
mov
jbe
mov
daa
and
test
mov
add
shlb
out
mov
pop
and
xor
lret
addr16
movb
mov
ret
xchg
sbb
mov
call
push
imul
add
xchg
adc
fucomp
add
out
jno
mov
mov
mov
xor
add
adc
mov
push
scas
ret
push
add
ret
sbb
ss
imul
add
das
sbb
outsl
mov
or
jno
jmp
and
sbb
add
out
inc
sub
add
sub
add
fabs
rol
pop
in
jecxz
xor
test
or
jmp
xchg
ss
cli
xor
std
idivb
jae
add
adc
aaa
xorl
ds
insl
add
xchg
add
sub
testb
mov
nop
sbb
clc
pusha
test
jb
push
jae
decl
call
loope
gs
cld
jmp
loope
test
incl
cmp
pop
hlt
repz
push
shl
cli
mov
pop
in
or
incl
inc
inc
jmp
xchg
jmp
cmp
add
test
add
add
mov
addb
lcall
cld
jmp
add
popa
dec
xchg
icebp
xor
mov
xor
nop
in
jbe
sahf
int
hlt
and
sbbl
cmpl
mov
mov
clc
test
sub
clc
jmp
std
jl
repz
jno
int
call
jge
jnp
loop
ret
jb
add
leave
stos
movsb
cld
scas
popf
mov
cmp
imul
xor
xchg
stos
in
int
pop
ljmp
inc
cli
insb
adc
popf
xlat
pop
adc
xchg
mov
lret
rolb
sub
mov
sub
clc
ficomps
mov
jb
or
and
jle
push
add
sarb
adcb
sbb
test
fcoml
leave
adc
int3
fbstp
lea
outsl
mov
scas
xchg
notl
push
mov
adc
lcall
out
outsb
sbb
scas
jge
sbb
or
test
je
outsl
into
mov
stos
jbe
push
jb
cltd
jmp
jns
add
adc
sbb
mov
adc
cmp
sub
mov
testb
cmc
mov
jmp
popa
jle
xor
mov
ret
fdivp
mov
ret
add
xor
add
and
in
mov
lea
jle
push
jb
mov
or
and
incb
adc
mov
inc
aad
or
cld
decl
lock
or
lea
cmc
cli
mov
jle
hlt
cld
push
mov
mov
push
fcoml
fucomp
idivb
cld
incl
test
filds
add
xor
dec
xchg
call
mov
xchg
cmp
cmc
push
call
jno
inc
push
mov
jmp
adc
or
jns
jnp
cli
inc
call
in
push
int3
cld
ss
sti
xlat
sbb
mov
mov
addl
add
sub
sbb
call
movsb
add
mov
hlt
sbb
pop
mov
and
pop
dec
jo
sub
push
sbb
sti
and
sbb
mov
fbld
ljmp
sub
push
jae
in
jo
jmp
xchg
outsb
adc
out
mov
in
stos
testb
add
xlat
testb
sbb
inc
cmp
insl
push
stos
xchg
add
cld
mov
arpl
pop
push
out
insl
jl
add
add
nop
jno
repz
ret
outsb
add
icebp
sbb
nop
jl
movsb
cmp
mov
dec
xorl
add
adc
and
bound
pop
popl
xchg
jb
movsb
stos
mov
test
add
sbbl
testl
jb
stc
imul
dec
scas
jnp
rcrb
inc
enter
in
jle
jae
out
enter
mov
dec
cmpl
into
pop
out
inc
jne
jmp
xchg
push
or
lcall
xchg
mov
mov
push
add
cli
push
call
outsb
sub
sub
mov
clc
out
pop
inc
cli
jle
dec
out
add
push
xchg
inc
mov
and
push
pop
cld
jle
adc
sbb
pop
mov
addr16
outsb
or
loopne
inc
test
jmp
push
adc
xor
jno
imul
scas
mov
push
std
inc
shr
jno
sub
ficoml
sub
add
mov
data16
xor
scas
imul
sbb
sub
xor
bound
out
ficoml
std
repnz
add
rolb
xor
push
jae
mov
out
pop
std
ljmp
inc
jno
pop
std
subl
adcl
mov
mov
mov
inc
mov
mov
test
call
lods
sbb
ljmp
mov
test
sbb
or
inc
call
stos
jmp
mov
push
repnz
es
out
sub
push
decl
mov
rcrl
xor
or
stos
popf
pop
idivb
arpl
adc
shlb
fsubrs
in
fs
mov
jp
or
fidivl
jl
or
xor
add
jmp
sarl
stos
mov
jns
add
add
add
xchg
addl
mov
sbb
mov
idivb
inc
stc
repz
out
jmp
jb
orl
lcall
jle
xlat
adc
xor
jmp
sub
or
inc
mov
xor
aas
inc
dec
add
aad
lcall
shlb
adc
add
test
adc
ret
cmp
sbb
pop
ret
and
inc
movhps
cmp
cmp
jecxz
pop
adc
adc
cld
cli
jae
jnp
or
add
in
sti
idiv
mov
cli
paddq
cmp
xchg
push
push
cld
adc
mov
or
fists
iret
jno
mov
movsl
push
cld
pushl
adc
jle
push
jl
add
dec
sub
std
sub
cmpsl
adc
cltd
sti
cmpsl
cmpsb
xchg
mov
ljmp
test
aas
jno
mov
inc
mov
mov
jne
sbb
inc
pop
sbb
std
les
stos
push
mov
inc
adc
add
leave
into
mov
es
std
imul
inc
or
add
xorb
jle
pusha
jle
in
pusha
movd
adc
inc
movd
jb
les
mov
or
adc
adc
divl
mov
mov
jae
movsb
sbb
repz
int3
out
outsl
jns
fcomi
mov
add
cltd
sub
inc
pop
or
mov
into
jg
sbb
fs
jb
es
sbb
das
inc
add
jb
mov
push
hlt
push
aaa
jbe
mov
js
lock
call
jae
sbb
jb
mov
jb
adc
jb
adcb
cld
test
jne
add
cmc
mov
cmpsl
sub
imul
adc
sub
push
jne
add
shlb
daa
dec
jmp
cmp
pop
jno
or
sub
add
std
pop
push
std
add
ret
lcall
ds
adc
xchg
dec
add
add
push
or
add
movsl
or
test
inc
mov
dec
bnd
dec
rorl
in
add
add
xlat
call
and
mov
sbb
add
cmp
sub
sub
mov
mov
aad
out
jo
dec
les
ret
mov
xor
xchg
out
repnz
jno
inc
xchg
repz
jecxz
push
cld
sbb
xchg
cld
outsb
icebp
jne
mov
hlt
adc
adc
inc
mov
pop
flds
xorl
mov
inc
test
jl
in
out
cld
cld
push
leave
cld
das
push
sbb
jbe
add
dec
cmp
mov
sarl
pop
icebp
mov
add
sbb
pushf
sahf
pop
orl
cmp
stc
popa
or
lods
adc
ja
adc
sub
bound
imul
fidivs
es
inc
jecxz
mov
bound
add
adc
adc
lret
fnsave
pusha
daa
fs
test
jno
mov
int3
add
in
pop
mov
add
jle
and
sbb
aad
adc
inc
jnp
gs
movsb
sbb
cwtl
das
mov
cmpsb
cld
fisubrs
addb
inc
jge
repz
imul
mov
sub
lock
push
xchg
call
jg
cmc
addr16
imull
push
sbb
add
ja
icebp
sub
subl
sub
add
sub
cld
call
mov
sub
xchg
addr16
jae
or
mov
inc
ret
lods
mov
jl
in
adc
push
push
mov
add
adc
mov
mov
ss
push
or
dec
adc
test
jo
jno
icebp
add
cmp
mov
xor
icebp
cld
dec
jge
push
arpl
es
push
cmp
add
in
mov
lock
idivl
push
call
cli
test
out
andl
dec
cmpl
inc
hlt
mov
in
mov
jno
or
std
fisttpll
jnp
sbb
orl
clc
mov
and
insl
iret
or
xor
shlb
sbb
std
jb
mov
andb
hlt
mov
jg
xor
or
roll
clc
mov
pushf
inc
or
jno
les
lcallw
js
pop
pushf
xlat
lds
add
mov
bound
jno
out
xor
rcrb
jge
std
repnz
out
jno
mov
shl
or
es
add
pop
cmp
or
mov
cmc
add
jb
xor
cltd
cmp
jne
popa
mov
outsl
jnp
repz
ljmp
lock
mov
sub
lods
xchg
negb
jae
push
or
notb
sub
lea
push
lods
icebp
test
xor
and
insb
jns
in
jmp
stos
add
and
dec
jg
add
jne
lods
mov
pop
jnp
jmp
scas
or
bound
repnz
jmp
mov
bound
add
push
idivl
jp
maskmovq
divl
incb
add
int3
mov
testl
fsubrs
push
bound
in
or
stos
xor
pop
push
mov
test
adc
in
iret
sbb
jmp
aas
jmp
jne
cs
into
or
push
jo
in
incl
mov
lcall
cli
jne
xchg
dec
or
push
in
add
cli
cli
test
or
mov
push
pop
or
hlt
arpl
mov
or
fadds
add
xlat
jp
add
add
inc
adc
test
jno
mov
jae
xchg
and
lea
cmc
cwtl
xor
nop
mov
push
xbegin
sbb
push
repnz
aaa
mov
nop
dec
add
in
mov
movsb
xchg
shll
pop
and
mov
je
add
push
jae
lahf
cmp
int3
or
in
pop
test
jge
jae
roll
jno
sbb
xor
jl
pop
add
lcall
or
test
add
leave
cmp
ljmp
xorl
loop
push
pop
xchg
out
into
cmp
add
sbb
add
or
aad
pop
cli
out
bnd
add
dec
cmp
push
out
es
rcll
jmp
add
or
push
jge
jg
testl
push
jne
sub
add
add
jmp
push
jne
arpl
mov
cmp
inc
test
xor
add
push
push
cmp
mov
leave
stos
jb
dec
testb
jb
add
hlt
jecxz
aaa
inc
jmp
jb
inc
lds
cmpl
xchg
enter
add
lcall
jne
inc
jge
enter
or
ds
cli
xor
ss
in
adc
push
leave
dec
add
push
adc
cli
jbe
in
imul
cli
jbe
in
imul
cli
jbe
in
imul
popa
imul
jbe
in
imul
jbe
in
imul
xchg
jg
je
sbb
gs
call
cmp
ret
das
jae
call
mov
gs
decl
jae
call
jno
scas
mov
fwait
add
cmc
dec
mov
add
cs
cmpsb
cltd
add
pop
mov
lcall
mov
mov
test
xor
xchg
lods
cld
loope
ja
add
jmp
jl
jo
add
sbb
add
testb
cld
push
jae
or
jle
mov
push
mov
fadd
incl
and
lcall
hlt
repnz
out
jno
sbb
cmp
and
add
addb
fildll
sub
repnz
mov
mov
inc
out
jae
xchg
add
cmp
jnp
lds
imulb
dec
push
add
leave
out
jne
aaa
mov
jo
fwait
bound
or
add
call
arpl
jmp
mov
std
cld
jmp
add
inc
pop
orl
jo
mov
fs
insb
mov
mov
insb
imul
lretw
mov
push
jbe
insl
jo
je
and
filds
add
aas
mov
sti
subb
data16
jb
imul
jb
and
jb
cld
pop
pop
and
lea
xchg
sti
cld
add
mov
inc
and
in
lcall
jne
lea
call
mov
test
or
divb
jo
add
call
js
and
pop
jo
fadds
push
call
add
jmp
xchg
xchg
je
mov
and
call
add
insb
add
add
or
mov
push
push
jno
leave
inc
dec
xor
add
mov
lgdtl
icebp
fildl
repnz
add
push
add
jno
dec
push
repz
out
je
fildl
adc
repnz
sahf
sti
adc
out
inc
push
cli
cmpb
add
add
jne
mov
sub
je
fucomp
in
sbb
pop
scas
rcrb
pusha
ret
add
call
cld
popf
lds
sub
dec
add
add
dec
sub
in
dec
pop
call
and
pop
inc
xor
pop
dec
xchg
and
lea
and
pop
flds
add
push
pusha
dec
xchg
and
lea
xor
test
sti
and
sbb
jb
push
sbb
cmp
ja
sti
testb
fadds
push
bound
sbb
cmp
call
jno
xchg
sbb
cmp
outsb
lea
push
add
push
push
mov
scas
and
cmp
std
mov
cmp
dec
std
mov
add
push
pop
ljmp
sahf
inc
add
sbb
test
jb
mov
outsb
push
xchg
jno
add
gs
push
call
bound
dec
dec
ljmp
lcall
add
jl
add
or
sub
add
add
in
addr16
cli
cs
xchg
divl
mov
add
rclb
ror
dec
add
xor
cld
dec
ss
lcall
xchg
aam
add
push
jg
out
sub
cld
lcall
xchg
shlb
add
movsb
or
add
mov
mov
std
incl
movsl
test
jne
cmp
rolb
jno
aam
mov
call
xorl
aas
mov
pop
aam
es
add
xchg
add
inc
mov
inc
jno
es
inc
iret
sub
mov
inc
xchg
shll
std
call
insb
inc
sbb
adc
call
push
je
cmp
adc
ljmp
dec
add
push
xor
rcrb
mov
repz
addr16
jb
test
ret
jno
add
or
rcl
das
mov
js
inc
or
test
sbb
ja
mov
std
pop
add
inc
popa
insb
loopne
mov
jo
jne
in
clc
mov
bound
xor
sbb
clc
jns
mov
add
sarl
jmp
jb
call
xorl
push
sub
xor
ret
pusha
push
leave
add
clc
cmp
jae
ret
lret
call
bound
hlt
cld
push
cmpsl
or
xchg
mov
cld
mulb
cld
out
and
and
add
cld
push
movsl
dec
call
scas
je
rcrl
dec
push
jb
pop
std
jno
add
ljmp
jmp
and
adc
popf
repz
mov
data16
repz
jb
add
popa
std
dec
inc
fnstenv
add
jbe
jecxz
or
popf
jmp
aas
sbbl
jmp
fldl
in
hlt
sti
mov
mov
push
xchg
add
leave
cmp
call
cli
sti
xorl
or
test
enter
sbb
clc
je
cmp
dec
call
and
out
mov
arpl
mov
lds
add
mov
cmp
jno
inc
add
movsl
push
pop
add
xchg
jmp
inc
test
jno
dec
push
push
scas
jae
push
stc
push
pop
icebp
pop
ds
jg
cmp
stc
dec
bound
push
push
fwait
loope
std
test
les
sub
xchg
mov
inc
std
cld
out
jbe
fisubrs
xor
into
out
cmp
or
pushl
jge
dec
add
pushf
call
xorl
out
cli
jp
cld
jge
mov
arpl
stc
inc
jno
ds
jne
inc
add
sarl
pop
pop
pop
test
add
data16
ret
mov
jmp
push
call
jo
pop
mov
repz
jl
sub
mov
and
scas
data16
ljmp
stc
aas
pop
push
add
add
repz
repz
mov
stc
jmp
push
push
call
add
inc
jno
jle
popf
repz
push
nop
call
mov
cld
mov
jb
cmpb
ljmp
xchg
aam
jle,pn
pop
jb
mov
test
hlt
cld
xchg
imul
jae
nop
xorl
imul
cmp
jae
in
repz
push
xchg
xchg
sbb
jge
mov
repz
cld
cmpsb
fisubl
sahf
mov
xchg
add
add
call
inc
or
mov
mov
sti
sbbb
sti
ljmp
mov
call
lcall
push
push
jnp
in
xchg
xchg
in
int
decl
dec
xchg
jo
fdivr
jno
cld
decl
das
notb
jl
fsubs
push
inc
sti
addr16
std
aas
lea
clc
decl
dec
sti
adc
jno
aas
cld
repnz
hlt
or
jo
add
push
in
cwtl
std
mov
xor
stos
dec
in
pop
jo
dec
mov
adc
push
aas
clc
sarl
pop
out
mov
dec
idiv
dec
xchg
cmc
jb
sbb
xorb
sub
mov
outsl
sub
mov
repnz
andl
mov
lock
jl
cmc
aad
cmpsb
insb
pop
test
cld
jb
jbe
jmp
inc
mov
stc
inc
add
adc
mov
lahf
adc
add
or
repz
mov
xchg
dec
jg
mov
inc
int3
mov
jb
icebp
jecxz
subl
lcall
mov
add
push
outsb
mov
adc
adc
jg
add
add
idivb
xchg
cmpl
mov
inc
jno
ljmp
mov
out
popa
cld
repz
cmp
xlat
jno
into
jmp
in
push
pop
push
lock
in
push
arpl
out
or
push
out
push
adc
in
jb
call
in
dec
inc
push
cmp
dec
lock
xor
inc
dec
ss
sbb
imul
and
cmp
jb
add
fadds
jb
std
sbb
mov
aad
push
push
ss
leave
addr16
mov
test
add
mov
add
aam
fwait
add
adc
inc
or
adc
or
cmp
adc
adc
adc
hlt
mov
add
sbb
mov
mov
mov
test
shlb
pop
jns
push
fidivrs
test
inc
add
jle
xor
lds
pop
subb
or
push
pop
sbb
lret
fildl
sti
mov
inc
add
fldpi
dec
fidivs
dec
hlt
cwtl
enter
aad
jmp
add
xor
dec
call
cli
cmpsb
push
std
add
inc
jno
fisubl
dec
mov
je
cmp
mov
mov
je
test
xchg
enter
or
in
enter
cmp
mov
mov
inc
jno
dec
pop
cmp
sbb
mov
xchg
push
push
mov
icebp
cld
fwait
stos
jg
fdivrl
fs
inc
mov
jle
arpl
jb
jge
sub
ss
jmp
lea
test
cld
jns,pn
in
cmp
fistpl
mov
out
ljmp
pop
pop
fldcw
jno
stos
xlat
repz
sbb
out
lock
cmp
insb
test
jno
insb
dec
sbb
add
add
jl
mov
test
fs
add
push
fdivr
cmc
out
addl
fnstcw
push
push
rorl
xchg
call
lods
cld
addl
add
lock
in
testb
jb
inc
test
add
cmp
jg
jne
xchg
inc
add
jb
bound
push
and
inc
cmp
call
int
dec
lahf
add
or
fwait
xchg
call
cmc
gs
jmp
jb
addl
xchg
add
add
dec
xchg
push
movsb
and
ds
imul
jmp
fsin
decl
add
and
ljmp
push
call
in
mov
incb
add
dec
or
inc
inc
loopne
pop
lcall
mov
adc
roll
cwtl
jno
push
imul
push
pop
sbb
xchg
xor
ljmp
xorb
sti
imul
add
xchg
outsb
inc
lock
sbb
or
lret
in
and
in
xchg
ja
fstps
std
pusha
inc
or
xchg
jbe
add
sbb
out
fadds
add
js
xchg
jg
push
jo
jns
subl
fdivs
push
xchg
repz
into
dec
in
mov
jns
inc
push
sub
jnp
push
or
fistl
sub
lods
add
push
mov
xor
lods
out
adc
cmp
jp
clc
sbbb
add
add
push
dec
add
mov
add
jne,pn
push
aam
xlat
out
inc
cld
into
or
jae
jp
call
ss
xlat
hlt
inc
pushf
call
stc
pop
clc
inc
stos
jns
and
jns
jge
in
lds
and
repz
dec
out
push
test
arpl
call
sbb
cwtl
sbb
mov
mov
call
std
jl
in
in
sub
mov
loope
in
jae
inc
jns
rorl
std
into
pop
inc
sbb
inc
and
mov
out
cld
scas
mov
jne
sub
enter
xchg
jge
sub
push
xchg
je
call
clc
mov
std
fsubrl
outsl
jbe
add
jae
lock
lea
xor
or
push
std
fiaddl
add
jg
jne
push
push
inc
ja
test
lret
pop
aam
inc
enter
popa
inc
add
pop
aad
decl
sti
pop
xchg
xchg
pop
and
mov
mov
repnz
mov
jge
jne
das
shr
add
add
and
test
jmp
ds
push
jecxz
dec
push
jno
jbe
dec
aas
xchg
decl
inc
clc
in
pop
jne
lret
loope
inc
inc
mov
jb
push
push
sub
xchg
add
add
lret
cli
mov
sub
push
call
inc
push
aaa
in
inc
pop
clc
xor
lock
add
mov
aas
cld
mov
in
push
inc
insb
add
inc
vpmacsdd
add
push
push
cltd
out
jle
les
or
data16
rclb
imul
jecxz
mov
add
inc
jmp
cmp
jl
jns
pop
mov
jmp
dec
cs
ret
xchg
fs
cmc
pushl
add
dec
jo
in
lret
sub
dec
inc
jnp
jo
inc
and
imul
mov
test
into
dec
outsl
clc
mov
add
out
subl
add
and
jl
outsl
push
inc
add
and
adc
dec
inc
repz
dec
dec
std
cld
adc
mov
push
push
jb
into
sbb
lahf
dec
push
and
jg
xchg
dec
jg
popf
popa
sub
cmp
imul
test
xchg
jmp
xchg
sarl
cld
cmp
enter
les
sub
pop
jb
dec
shll
imul
je
pop
fs
jl
inc
jo
sub
mov
inc
js
dec
sti
je
or
rcrl
add
xchg
adc
je
add
or
sbb
adc
sub
add
adc
jl
push
je
xchg
sub
mov
sti
xorl
sbb
cmc
ffreep
push
lea
sti
sarb
mov
cs
ljmp
cld
cli
adc
add
les
out
mov
out
cmp
pop
leave
cmp
in
std
jg
fisubrs
outsb
loope
iret
mov
push
std
mov
push
sub
xlat
add
mov
pop
aas
or
xchg
dec
sti
out
xor
xchg
sbb
cli
cltd
and
mov
pop
sub
xchg
sbb
cld
push
sbb
sub
jo
ja
repz
mov
mov
in
call
sub
and
add
sahf
loope
push
xor
jp
clc
jno
insl
jne
adc
xor
xor
cmp
das
je
mov
jno
insb
inc
lea
mov
inc
rorl
repnz
out
lret
sbb
and
fisttpl
call
mov
popa
loope
fistpl
sub
idiv
push
sbb
loopne
pop
jnp
mov
outsl
xchg
sub
adc
mov
inc
and
iret
mov
sub
les
xchg
das
std
xlat
mov
jge
adc
adc
aam
push
inc
jmp
dec
dec
pop
push
test
call
int
mov
mov
call
std
imull
fwait
std
push
psubsw
inc
mov
mov
insb
ss
cltd
imul
cmp
sub
insb
and
jmp
xchg
cld
add
or
and
mov
pop
aad
dec
and
add
incl
out
mov
and
pop
fmull
xor
dec
cmp
pop
xlat
in
sarb
add
data16
jnp
inc
dec
xor
mov
in
mov
cmp
sbb
push
cld
sub
test
add
mov
ja
mov
xchg
out
and
push
sbb
inc
sub
aas
pop
pushl
push
adc
pop
shll
mov
ljmp
mov
ret
sbb
jmp
mov
bound
icebp
push
clc
jmp
jge
jno
add
gs
push
push
mov
aaa
js
clc
lods
call
xor
xor
and
or
dec
call
jb
mov
add
add
lods
int3
dec
notb
fxtract
jmp
bound
shll
and
lret
in
out
fcmovnb
jecxz
sbb
pop
jns
mov
out
loope
fcoml
pusha
xor
add
es
popa
cmpl
out
xor
xor
xor
es
sarl
xor
adc
mov
int
mov
sti
inc
das
in
push
aaa
es
mov
popf
inc
jno
jecxz
ljmp
loop
mov
inc
loope
dec
clc
jb
fdivl
ret
push
pusha
cmp
cmp
test
dec
test
incb
scas
xor
mov
out
clc
nop
add
cld
xchg
sbb
adc
jb
mulb
xchg
fisttpl
or
imul
or
lret
jmp
sbb
loope
out
jnp
mov
addl
push
or
pushf
jae
add
inc
push
push
add
xor
add
inc
or
adc
fisttps
add
xchg
loope
or
mov
mov
aad
call
pop
push
test
incl
popl
movl
je
out
xor
pop
xlat
dec
call
dec
inc
or
add
or
inc
dec
mov
xchg
or
or
push
xchg
test
xchg
dec
je
push
inc
jl
jno
nop
lahf
stos
cmp
xor
add
pop
int
mov
pop
mov
mov
into
mov
xlat
xlat
push
cmpsl
add
sbb
in
sbbb
mov
pop
dec
add
push
ss
clc
and
cmpb
add
mov
pop
mov
mov
call
data16
adc
xchg
mov
mov
pushf
int3
out
cmpsb
repnz
mov
daa
add
stc
inc
sbb
sbb
es
push
jge
loopne
sbb
add
arpl
popa
ret
ljmp
push
daa
add
sar
and
into
fcomip
rcl
stc
inc
mov
pop
cltd
test
or
inc
add
fsts
lds
and
or
sbb
call
add
ljmp
push
repz
mov
pop
xor
push
add
in
out
pop
stc
cwtl
jb
repz
std
xchg
ljmp
xchg
sti
ret
mov
dec
jecxz
mov
pop
inc
mov
jmp
clc
adcb
je
cli
sbb
cli
xor
loope
test
arpl
leave
lcall
pop
insb
mov
add
fucomi
jmp
rol
jb
mov
pop
mov
rcrl
data16
xor
arpl
imul
adc
or
push
adc
sub
add
rcrb
in
mov
adc
fadds
dec
push
incl
test
leave
add
pop
mov
add
add
or
xchg
jg
add
add
mov
add
add
das
or
inc
cmc
jmp
mov
mov
add
jnp
shr
test
sti
inc
aas
cld
adc
or
rol
jno
add
insb
stc
movb
pop
je
mov
orb
push
adc
jae
call
cld
fsub
pushl
mov
in
leave
xor
cld
into
dec
inc
lock
inc
lds
push
cli
and
xorb
push
push
inc
cmpsb
push
in
cltd
pushf
xlat
cld
xchg
cmc
inc
pushl
inc
in
pop
sbb
xorl
cmpl
cmp
lods
add
or
xor
xor
add
dec
push
add
cli
xor
or
out
mov
jno
repnz
add
fwait
hlt
cmc
nop
add
lfs
std
xchg
in
mov
jno
testl
pop
das
aaa
in
movsb
sub
cmp
out
and
adc
inc
jno
adc
jge
jecxz
add
mov
dec
leave
sub
clc
mov
shrb
xchg
push
dec
jmp
add
add
ljmp
aam
inc
dec
add
je,pt
add
sar
popa
pusha
mov
stos
jb
sbb
pop
popa
insl
add
ljmp
xchg
scas
call
lods
jl
call
xor
push
into
inc
add
cmp
xor
aad
cli
mov
fsubs
and
jne
out
in
aaa
notb
aas
add
inc
in
roll
dec
int
jl
dec
add
cmp
mov
test
test
mov
jo
cmpl
or
mov
or
push
filds
dec
or
fcmovnb
dec
call
out
push
lahf
mov
xchg
test
test
mov
aaa
movb
dec
sti
jne
jp
sub
les
pop
mov
std
les
pop
cmp
xor
ret
sbb
loop
xchg
add
aaa
mov
jg
jmp
add
rolb
add
xlat
cld
ljmp
dec
fstpl
jo
mov
mov
pop
inc
je
fwait
in
inc
popa
mov
lcall
push
pop
xchg
mov
inc
jnp
sbb
xchg
add
fwait
verw
adc
lea
out
mov
lea
call
jno
popa
shl
out
push
add
flds
inc
xchg
ret
bound
aas
iret
ret
ljmp
dec
rcll
addr16
insb
adc
sub
pop
xchg
sub
rorl
inc
jno
mov
dec
mov
adc
test
sub
aas
push
mov
shlb
push
test
call
xor
lcall
pop
mov
mov
xchg
pop
mov
jge
jns
or
cmp
mov
inc
test
aam
std
sub
cld
jb
aam
mov
aam
sar
inc
jmp
mov
mov
or
push
add
or
in
scas
and
add
repz
std
faddl
out
aas
jmp
and
adc
out
pop
add
inc
pusha
push
insl
and
js
ja
lret
dec
cld
push
add
sbb
lcall
push
inc
dec
pop
push
mov
push
rcrb
fmul
mov
pop
in
mov
fsubrs
inc
add
sbb
decl
pop
or
incl
mov
adc
add
or
test
enter
js
aas
add
xchg
jno
push
or
or
mov
mov
adc
rcll
jo
fs
cmp
rclb
popf
lret
inc
add
sysexit
mov
adc
add
mov
push
insb
jno
mov
push
mov
mov
xor
sub
pop
push
enter
adc
ret
sub
cmpsb
es
add
jbe
iret
push
fimuls
ljmp
fwait
mov
ljmp
push
loope
and
ds
test
inc
jno
dec
ljmp
fisubrl
pop
push
jmp
into
icebp
mov
mov
xor
pop
inc
add
add
add
xchg
enter
cmp
xor
cmpsb
add
fiadds
ret
adcb
addr16
add
add
or
cmpsl
sub
add
xchg
out
jno
sti
pop
jno
arpl
insl
test
jno
shlb
std
ljmp
cld
jmp
lock
call
push
int3
subl
jb
mov
push
mov
add
mov
int3
cld
bound
cmp
mov
int
jmp
mov
aaa
movl
inc
decb
fcomps
arpl
fisttpl
cld
mov
and
adc
lret
cld
push
into
inc
std
pushf
loop
pop
lds
mov
or
pusha
mov
mov
test
call
fsub
adc
test
in
mov
jmp
mov
adc
daa
or
push
int3
sti
adc
fcmovnb
or
sbb
inc
inc
repz
cmp
paddq
add
inc
and
psubsb
popa
scas
sti
mov
and
test
xor
aam
dec
call
jmp
scas
adc
cli
aas
add
mov
rcll
and
inc
add
mov
xchg
xchg
jae
test
flds
mov
rcll
in
sahf
incb
repnz
sub
pop
jae
outsb
fnstcw
lea
add
dec
add
rolb
lods
mov
lds
mov
jne
xorb
mov
cld
jnp
push
dec
or
iret
jg
add
imul
lret
in
lcall
inc
out
inc
and
xor
sarb
hlt
scas
cmc
outsb
add
dec
sbb
shrb
movb
add
cmp
mov
sub
popa
inc
add
lods
inc
jge
jo
jns
jmp
dec
leave
ret
dec
flds
inc
lret
popa
leave
repz
mov
sub
andl
jns
xchg
daa
icebp
add
add
test
jl
lret
sbb
mov
jb
ljmp
inc
lds
int3
xchg
repnz
cld
jmp
add
sbb
push
sbb
and
and
push
and
sub
xchg
out
call
lock
shll
dec
and
sub
and
jbe
lds
call
jb
cmp
mov
cmp
sbb
and
push
jg
and
adc
add
add
and
call
push
cmp
into
inc
and
int3
xor
inc
and
test
daa
or
test
add
dec
sbb
push
mov
and
add
push
call
pop
xor
loope
and
lock
dec
jmp
cmpb
add
rdpmc
xor
xchg
inc
jns
and
and
stos
pop
cmp
jo
add
fdivr
cmpsl
ss
mov
mov
mov
cmp
cld
cli
xchg
and
bnd
add
xchg
pop
mov
popf
jns
popa
pop
inc
insb
jno
dec
pop
call
fmul
cld
hlt
sbb
fdivrp
xchg
bound
insl
push
cmp
inc
or
adc
outsb
sahf
xor
push
pop
or
add
ret
or
inc
pop
ffree
add
jnp
xlat
call
jno
es
mov
add
repnz
add
inc
jmp
mov
stos
enter
push
clc
or
fdivr
fstpl
pop
mov
jl
out
jb
xor
subl
dec
stos
andl
out
pop
jnp
fucomi
int3
repz
jmp
push
dec
aas
add
inc
jne
mov
in
ret
add
add
cmp
xorb
sbb
stos
lcall
inc
and
add
xor
movl
jae
add
imul
xor
aas
lds
mov
into
call
ss
pop
mul
mov
pop
inc
test
daa
idivl
test
insl
aam
add
movsb
jmp
add
lahf
cld
or
out
sbb
inc
insl
sub
add
insl
ret
adc
roll
push
mov
ltr
add
inc
je
std
jae
psubsb
push
sbb
add
ja
add
push
shll
jg
je
jge
add
sarb
pop
or
push
mov
mov
add
cmp
cltd
sti
jg
mov
mov
ret
sbb
push
pushl
cmovo
inc
jmp
add
inc
cld
push
jno
dec
or
fdivrs
jno
add
ror
adc
in
mov
dec
add
xor
ret
pop
jno
jge
mov
imul
out
lock
sbbl
fcomps
rcll
push
dec
or
inc
and
insl
fimull
aad
jb
stos
in
daa
popa
sbb
mov
cld
push
mov
std
jbe
into
cld
add
loope
adc
add
inc
jno
movsb
sub
mov
jp
pop
in
xor
ret
jle
out
push
jg
leave
pop
rcl
push
ljmp
fildll
out
cld
in
shl
add
stc
cmp
or
xor
mov
out
push
cmpsb
add
mov
sarl
mov
lea
cs
das
fs
sbb
arpl
xlat
inc
jno
add
insl
jge
sbb
ja
mov
cmp
adc
inc
add
insb
xor
mov
outsl
aam
outsb
mov
les
das
lds
ret
adc
add
add
pop
lcall
push
add
enter
lock
jmp
mov
add
call
xchg
mov
rolb
add
inc
ja
cmp
mov
dec
mov
push
daa
sti
xor
mov
add
dec
std
call
mull
adc
or
sti
jne
mov
jb
sbb
or
jp
and
je
adc
inc
ret
mov
out
je
dec
inc
cld
sbb
adc
xlat
dec
mov
cli
adc
jecxz
jo
adc
cmp
ds
mov
add
pushl
les
movl
ljmp
jno
cmp
imul
add
push
push
pop
scas
cmp
ds
lock
jge
jmp
sub
jno
mov
adc
flds
in
jmp
dec
inc
jno
lds
or
adc
les
push
iret
hlt
jmp
mov
pushl
rol
add
mov
lahf
adc
jg
pusha
aaa
jge
lods
dec
pop
sub
ja
push
iret
in
sahf
add
push
and
inc
aas
ja
mov
ljmp
push
pop
lds
add
jmp
repz
outsl
inc
out
mov
adc
bound
mov
aas
int
es
subl
pop
jns
or
inc
jno
adc
and
cmc
mov
mov
lds
pop
aas
or
cmp
xor
mov
mov
add
cmp
add
sbb
mov
je
insl
push
call
push
or
std
fmull
mov
xor
or
sbb
or
cmp
scas
inc
lods
mov
xchg
ret
xchg
push
fisubrl
add
adc
adc
repz
add
add
push
inc
lea
test
inc
add
stc
aas
add
shrb
stc
aas
add
div
mov
rcl
test
fistps
popl
pop
add
pop
test
incl
and
push
test
ror
dec
idiv
mov
mov
push
mov
jge
cwtl
push
or
adc
movb
std
or
fmull
mov
add
fwait
mov
mov
push
mov
pop
push
cmpsb
push
sbb
add
add
jno
push
push
notb
jbe
or
test
sub
jae
push
loopne
fmul
adc
sbb
dec
in
in
mov
lods
xorl
les
sbb
push
dec
lock
loopne
pop
jno
inc
add
cs
subl
mov
add
mov
aaa
jo
push
fimull
mov
movsl
dec
push
ret
xchg
mov
inc
es
and
out
jge
push
or
add
pop
icebp
push
daa
add
sarb
sarl
mov
rolb
add
jo
out
pushf
lea
sub
jge
and
ffreep
andl
rorb
push
mov
add
mov
nop
cmp
in
jmp
add
jp
cmc
idivl
adc
arpl
add
idivb
in
mov
sub
push
jb
cmp
dec
outsb
add
cmp
xchg
sbb
test
jle
mov
in
jmp
ret
xchg
mov
mov
loopne
mov
mov
cld
outsb
ret
icebp
add
ds
cmp
mov
mov
jg
cmpsl
adc
xchg
pop
lea
cli
jmp
call
fldl
inc
jmp
xchg
decl
jns
push
and
or
mov
mov
inc
mov
push
andl
jp
pusha
or
incl
pop
nop
xorl
jp
add
cmp
cld
decl
repnz
push
lods
sti
int
push
push
jno
pop
sbb
add
dec
xor
inc
and
mov
in
mov
mov
adc
inc
jno
add
sub
add
jno
test
xchg
test
ret
hlt
test
hlt
lcall
daa
mov
pop
xor
sub
jo
shll
push
push
in
or
mov
mov
fdivl
mov
add
mov
mov
push
divb
scas
nop
xor
aad
dec
mov
sbb
rclb
add
dec
xchg
mov
xor
insb
ret
and
and
mov
je
mov
aaa
jns
cmc
push
or
daa
add
xor
add
cld
lods
inc
push
add
jle
xor
cwtl
mov
mov
clc
mov
fcmovnbe
mov
add
mov
add
xor
data16
cmp
insl
daa
cmp
xor
subl
mov
push
mov
jle
xor
mov
mov
dec
hlt
jne
jg
cmc
ljmp
mov
cmpsb
mov
dec
inc
push
sbb
sub
mov
insl
xchg
repnz
dec
jo
mov
lcall
vpsubw
add
orb
or
jbe
imul
shlb
or
inc
pushf
mov
push
ds
adcl
aad
add
out
pop
mov
push
pop
mov
je
xor
pop
pop
popa
mov
into
inc
cwtl
jle
je
ret
in
add
mov
add
dec
sbb
rcrb
add
inc
add
lret
mov
pop
sbb
rorb
push
inc
add
out
inc
jno
mov
mov
arpl
out
mov
shlb
inc
jno
adc
test
mov
adc
repz
cmpsl
arpl
add
inc
add
arpl
inc
jno
push
mov
cmpsl
arpl
add
hlt
inc
add
cmovo
xor
pop
out
mov
adc
push
inc
jno
nop
mov
test
add
jno
sahf
adc
aas
out
sub
daa
add
shlb
jno
jbe
mov
dec
rol
aas
out
add
cmpsl
add
mov
cmp
xor
mov
cli
or
add
adc
jne
jno
ds
add
aas
out
orb
inc
jno
push
rdtsc
add
les
out
loop
daa
add
inc
xchg
inc
jno
mov
mov
mov
out
push
daa
add
and
jg
add
dec
test
jmp
jne
jg
lods
add
dec
std
insb
inc
jmp
add
lahf
lahf
mov
lahf
std
addr16
add
push
adc
test
sub
lahf
loope
inc
add
push
outsl
adc
xor
lahf
add
in
inc
jmp
jb
pushl
gs
add
sarl
pop
add
cmp
mov
sti
lods
mov
pop
pop
in
add
cmp
mov
mov
pop
mov
pusha
dec
cmp
mov
jmp
mov
or
or
cmp
add
jmp
mov
fcomps
mov
sbb
sahf
mov
cmp
inc
add
sub
and
pop
cmp
mov
cmp
mov
mov
sahf
loopne
xchg
inc
add
outsl
adc
xchg
mov
jno
inc
add
outsl
cmovo
adc
mov
arpl
push
aas
inc
add
repnz
hlt
mov
cmpsl
arpl
cmp
shlb
sub
call
mov
dec
mov
insb
ja
cmpsl
dec
std
lahf
mov
ja
xor
inc
add
add
xchg
jno
lret
lcall
jno
mov
sub
cmp
ret
cmp
push
inc
add
push
outsl
inc
jno
jbe
mov
je
mov
mov
test
fiadds
mov
inc
out
inc
sub
sub
inc
out
add
cwtl
mov
mov
sub
inc
sti
mov
arpl
testl
jp
sbb
icebp
push
xchg
adc
add
scas
roll
push
es
jb
xor
ljmp
jmp
push
mov
lods
xor
daa
inc
add
in
xor
addl
add
cmpb
jb
add
mov
inc
test
icebp
fbstp
xor
push
sbb
subb
test
jmp
dec
lods
call
add
mov
push
in
sub
loope
add
add
pop
add
cwtl
test
call
jecxz
fisttps
das
jns
in
loope
sub
pcmpeqw
pushl
movsl
mov
ja
sti
mov
pop
dec
mov
js
push
mov
in
sti
call
add
iret
adc
add
js
lea
xchg
call
pop
push
cld
add
pop
call
stc
imul
jno
sbb
xor
test
cld
and
adc
xor
aas
cld
xchg
jmp
xor
daa
call
adcl
add
xchg
push
mov
xchg
add
dec
outsl
pop
sbb
add
cli
jmp
clc
sbb
add
out
or
xor
int
jae
cmc
xor
mov
mov
pop
test
sub
pop
mov
cwtl
and
lods
mov
xorl
in
inc
jno
out
popf
add
enter
test
cmp
outsl
imul
mov
inc
jno
sahf
sbb
rclb
ljmp
fidivl
out
add
enter
clc
movsb
out
arpl
sarb
mov
inc
sbb
push
cmpsl
add
sub
jnp
or
push
icebp
jb
push
fisubrl
dec
push
push
dec
int3
cld
aam
cli
aas
jmp
scas
das
push
jno
mov
push
bound
adc
sub
ret
in
lret
outsb
lret
mov
lods
mov
insb
xor
cmp
loopne
mov
pop
xor
add
test
aad
dec
and
clc
xor
std
aam
stos
adc
adcb
add
fucomip
lret
call
pop
clc
decl
aam
push
cmp
sbb
int3
sti
dec
jle
adc
add
popa
cmp
cld
mov
cli
push
aad
jns
pop
add
sarl
cmp
std
jmp
int3
enter
test
push
cli
into
cmp
popa
aaa
and
mov
leave
pusha
pop
hlt
fcoml
jae
fidivl
adc
dec
xchg
mov
xor
mov
enter
outsb
push
js
add
xor
add
adc
xor
inc
stos
out
inc
jb
xchg
out
sbb
lret
cmp
mov
push
cmp
add
vmovshdup
jnp
lcall
jb
insb
notb
stos
cmp
cmpsl
mov
out
ret
dec
inc
xchg
add
lcall
ret
dec
add
or
rcll
jbe
mul
pop
call
jmp
add
mov
insl
jnp
lret
push
inc
cmp
in
and
clc
out
and
stos
out
xor
scas
adcl
inc
jno
mov
sbb
add
sti
sti
cmp
movsl
dec
push
add
add
shl
jg
out
push
jp
mov
add
dec
xchg
pop
adc
add
cmp
jb
icebp
xor
push
jle
cld
pop
icebp
xor
inc
stos
cld
dec
shlb
cmp
divl
scas
xor
popa
xor
inc
dec
push
cmpl
push
movsl
cld
fisttpl
test
ret
data16
mov
ret
xchg
cmp
jb
xor
mov
test
scas
inc
in
cmpsb
inc
nop
cmp
push
push
js
push
cmp
push
sti
push
jg
pop
movl
sti
adc
push
mov
repz
inc
shl
jg
sti
push
pop
mov
dec
call
test
ud0
mov
adc
add
push
sti
je
das
cmc
pop
xchg
dec
int3
sti
jne
push
shr
decl
in
shl
pop
sbbl
push
push
cmp
das
divb
daa
aas
dec
jle
je
insl
cmp
jno
add
popa
or
mov
stos
sbb
xchg
out
addr16
ja
cli
insb
clc
out
pop
stos
cld
in
xlat
xor
add
xlat
xchg
jb
icebp
fs
cmp
imul
insl
packsswb
push
js
hlt
repnz
hlt
adc
cli
jle
push
push
aaa
pop
sti
decl
push
cld
pop
sbb
jae
out
mov
into
cmpsb
cld
inc
pop
pushf
std
or
xorl
fiadds
xor
divb
dec
insb
sbbl
cwtl
mov
inc
insb
jae
lods
add
movsb
jne
dec
sbbl
mov
sub
jb
das
push
andb
sub
cmc
out
int
jno
mov
adc
cmpsl
add
mov
jno
imul
inc
outsb
dec
je
insl
jge
das
jns
mov
das
mov
cli
ret
mov
push
add
add
mov
mov
cmp
cwtl
dec
ds
int
sbb
add
jmp
inc
movsb
push
add
dec
call
jb
clc
mov
bound
inc
jmp
jb
push
cmp
jb
push
pop
lock
jb
std
cmp
call
jb
add
jb
push
testb
add
add
or
bound
xchg
mov
int
jo
int
jno
mov
lods
mov
push
mov
decl
and
lea
and
je
and
jne
adc
je
ljmp
rorb
push
or
and
call
inc
es
cwtl
incb
add
leave
cld
jno
xchg
fdivrl
add
dec
dec
mov
dec
xchg
jo
add
pop
and
decl
jno
jo
stos
pusha
ret
cmpsb
sarb
in
sbb
cmp
in
and
mulb
adc
or
xor
repnz
or
push
or
shll
clc
add
sbb
out
mov
jp
cmpl
loopne
or
rolb
jp
scas
mov
pop
pop
xorb
jge
in
add
and
pop
xor
push
cld
out
clc
ds
iret
xchg
mov
jno
inc
cmpl
inc
jno
sbb
push
or
les
mov
add
cmp
adc
fs
bound
jno
mov
outsb
insl
cmpsl
jmp
insl
pop
cmpsl
and
lods
ds
pop
mov
adc
add
xlat
xchg
xorb
sti
cmpsb
lea
adc
or
mov
aas
out
mov
add
ret
mov
popf
xor
repnz
and
add
add
mov
jg
jge
inc
jmp
add
xor
mov
repnz
sti
mov
adcl
jb
pop
adc
pop
les
ficompl
dec
mov
rcr
push
jne
cld
sub
xchg
jmp
repnz
xchg
mov
add
popf
aaa
ret
in
out
and
mov
push
clc
xchg
mov
imul
pop
sbb
sbb
cli
add
insl
cwtl
std
mov
out
rcpps
pop
dec
push
add
out
add
add
js
push
jg
or
call
adcl
jle
mov
xlat
sti
sbbl
das
rorb
add
xlat
arpl
lahf
lea
clc
arpl
adcb
clc
jno
int3
out
mov
cld
pop
icebp
dec
cmp
inc
pop
sti
ljmp
ljmp
add
testb
cmpsl
jp
lods
pop
add
scas
ret
fsubl
push
push
call
call
cmpsb
out
mov
jno
cmp
or
jo
push
mov
movsl
cld
fidivrs
lods
es
mov
cld
and
mov
cld
scas
adc
mov
out
mov
cmp
pushf
pushf
adc
adc
mov
jbe
fnstenv
rclb
pop
aad
mov
popf
in
es
sbb
sub
adc
sub
mov
es
mov
xor
popf
out
mov
mov
dec
imul
add
mov
out
call
add
popf
pop
mov
rorl
call
pushf
push
or
xchg
ljmp
lcall
daa
fldcw
lds
fldl
adc
rcll
add
clc
cltd
mov
and
jb
xor
adc
mov
mov
test
jb
mov
cld
mov
popf
aad
jmp
sub
movsl
push
add
sub
xchg
inc
sub
into
jb
std
mov
push
cmp
mov
gs
or
add
jg
test
sub
dec
push
addr16
xchg
add
xlat
jp
decl
repz
in
imul
lods
pop
sti
push
mov
push
lock
mov
pop
sbb
or
sbb
cli
adc
pop
cmp
clc
test
push
pusha
fwait
and
or
call
bound
xlat
andb
rorb
add
add
test
lahf
cld
inc
scas
add
jl
icebp
aas
jno
inc
clc
in
call
sub
jle
mov
shrl
jno
lahf
xor
sbb
cld
push
push
mov
incl
test
inc
cmp
mov
shrl
aas
jno
shll
inc
clc
add
addr16
inc
pusha
es
in
sti
out
orb
inc
and
cmpsl
lahf
xor
add
mov
mov
rcl
add
xor
stos
scas
pushf
and
push
test
fwait
stc
jmp
or
mov
pop
xor
iret
popf
cltd
in
adcl
mov
add
cmp
dec
jg
lods
das
cltd
out
clc
cmp
xor
out
xor
push
cli
inc
xchg
xor
sbb
adc
pop
ljmp
push
adc
mov
adc
cld
iret
cwtl
cld
pop
cmpsb
mov
subl
imulb
add
clc
cltd
dec
repnz
jb
xor
test
cld
es
pop
jae
mov
dec
push
add
mov
add
add
call
fcoml
cmp
repz
mov
mov
imul
pusha
cmpsb
out
jb
loope
or
jb
push
cmpl
ret
mov
push
and
add
add
add
or
push
call
stos
ret
cmp
mov
add
loope
jbe
mov
incl
inc
push
shl
out
clc
jne
mov
jg
je
cmp
xchg
cmp
lret
mov
pop
outsl
jne
jmp
mov
xor
out
es
mov
xor
push
test
add
fwait
xor
sub
cld
cmc
stos
lea
cltd
test
push
sbb
xchg
cli
push
lock
cli
mov
int
mov
in
mov
xor
les
jbe
test
fstpl
sbb
mov
notb
push
or
jno
add
int3
les
add
cmp
add
popa
adc
in
push
adc
sbb
imul
cld
fld
or
popa
adc
jnp
pop
jb
mov
fcoml
push
add
cld
mov
les
mov
dec
shll
pop
movsb
add
jno
lcall
fsubr
xor
imul
jae
mov
sbb
test
aas
jno
jo
add
in
mov
ret
adcl
aas
clc
lcall
inc
inc
out
mov
clc
stc
andb
outsl
add
je
loope
ljmp
pop
push
sub
lds
sub
xchg
cmpsb
fsub
mov
insb
xchg
cld
jmp
outsb
add
cltd
jmp
add
cltd
add
icebp
xor
or
in
out
pushf
lcall
inc
and
pop
xchg
cld
jmp
pop
add
movsl
es
adc
jb
lds
jb
mov
enter
or
inc
and
in
pusha
loop
jmp
add
add
and
inc
adc
push
lret
ljmp
iret
cli
adc
add
sarb
loope
inc
insb
cmp
ss
incl
mov
jg
decl
test
cs
and
outsb
aam
dec
outsb
int3
lea
cmp
cltd
iret
imul
push
test
cmp
aas
add
dec
xchg
cmp
and
jmp
lret
cld
pop
data16
in
fistpll
mov
pop
inc
add
push
fcmovb
sbb
out
test
loopne
in
mov
in
mov
or
mov
and
add
subl
mov
cmp
jno
test
shl
xchg
push
call
ficoms
add
jge
sbb
decl
jge
jbe
pop
ds
adc
loopne
add
es
out
mov
fsubl
xor
xchg
arpl
jle
or
sub
add
out
dec
add
mov
jnp
or
and
xchg
fsubl
xor
xchg
sti
xlat
pusha
inc
out
out
or
xor
subl
xchg
and
cwtl
test
lret
call
shrb
repnz
jecxz
cli
cmp
int
inc
call
insl
sub
insl
rcl
adc
jmp
push
jae
jmp
out
dec
xchg
cld
bound
mov
lock
jae
pop
loope
dec
ret
ss
adc
jmp
rorl
fsub
or
stc
or
pop
push
mov
add
jb
jb
std
cld
fisubrs
jmp
xor
cmp
jne
add
mulb
jae
pop
test
jecxz
add
add
test
dec
ja
fcmovnb
movb
jnp
push
mov
filds
add
xchg
lcall
shrl
mov
add
sbbl
test
dec
push
jbe
mov
push
jp
test
cmp
fmuls
add
jl
adc
add
push
or
shrb
push
cld
mov
lahf
lcall
add
out
imul
pusha
add
test
invd
cmc
fmuls
add
fldcw
jmp
lahf
jl
rcrl
inc
or
add
add
jge
jle
push
push
cltd
test
out
jne
repz
scas
fdivr
out
mov
mov
add
jno
pop
jno
cmp
xchg
xchg
mov
mov
cli
arpl
push
inc
sar
xor
pop
out
aad
mov
jmp
and
adc
jae
add
out
ret
clc
incb
notb
mov
sbb
xchg
movsb
cld
mov
mov
test
hlt
repz
pop
hlt
aad
fsubl
xchg
fnstsw
or
mov
xor
out
inc
jnp
jbe
repz
into
negl
xchg
lods
jns
popl
and
jbe
mov
mov
add
add
xor
and
dec
jmp
cld
insl
xor
or
movsl
inc
and
sti
inc
and
sbb
call
sub
lea
jns
pop
sbb
jns
or
adc
pop
add
movb
addl
test
sbb
add
das
push
data16
adc
imulb
call
jl
aaa
ret
mov
jb
push
xor
call
outsl
insb
adc
push
xchg
xor
pop
loop
call
cmp
imul
fdivrs
sub
cmp
outsl
sti
xor
or
adc
ret
jo
add
lret
and
outsl
adc
or
ud0
lea
in
inc
outsb
sti
mov
pushf
aaa
repz
inc
xchg
das
xchg
cmp
call
repnz
in
jae
testl
lea
xchg
lds
pop
in
clc
popa
lock
add
out
lret
sub
jno
jp
repnz
orb
inc
and
add
out
mov
adc
insl
and
in
jp
jecxz
flds
std
cmp
cwtl
xchg
inc
cltd
add
inc
add
mov
mov
out
clc
fwait
imul
inc
cmpsl
addr16
data16
jnp
in
jp
in
add
in
out
jno
fnstsw
in
fwait
ss
in
nop
repnz
es
add
or
hlt
mov
inc
jns
dec
out
add
cmp
mov
nop
cmc
test
add
adc
fstl
sti
sbb
cwtl
inc
aam
mov
insl
test
das
jb
add
add
or
add
cwtl
and
jno
popf
jmp
orb
add
cld
mov
add
add
fdivp
jg
call
loop
nop
outsb
fidivrl
or
jle
jae
add
mov
insb
cwtl
in
mov
or
loopne
xor
call
bound
std
lock
mov
dec
lea
add
cld
dec
push
xchg
vmwrite
ret
xchg
dec
pushl
cli
ljmp
call
and
xor
sub
lahf
fs
ja
je
nop
in
inc
std
decl
je
ja
call
addr16
das
aas
ja
inc
xchg
add
loop
fimull
xchg
mov
push
xchg
cld
mov
pop
sti
push
jno
xchg
std
mov
adc
in
dec
jb
and
push
adc
mov
xchg
and
mov
inc
clc
and
pop
clc
push
lea
sbb
jb
ficoms
clc
out
or
cmp
scas
testl
cld
xchg
and
pop
cmp
add
mov
mov
adc
fucomi
dec
push
testl
repnz
mov
add
xchg
into
xor
int
adc
mov
rorb
xchg
repz
or
mov
clc
ds
xchg
sahf
xchg
scas
jmp
rorl
and
ret
jns
orl
add
mov
xchg
mov
add
sub
imulb
ret
roll
jno
out
cld
add
add
jnp
mov
test
sbb
add
out
movsl
clc
cmpsb
in
xor
aas
jmp
inc
and
in
test
add
push
jbe
inc
jae
hlt
adc
je
popf
cli
pop
in
xchg
cmpsl
std
test
call
in
dec
xchg
cwtl
es
cmpb
incl
add
test
ljmp
xorl
in
orl
sub
into
mov
sti
push
adc
call
call
sti
pop
ss
ret
push
mov
lret
call
shrb
cld
add
add
mov
add
je
add
jo
imul
test
xchg
scas
mov
je
xchg
je
jnp
pop
std
add
add
test
fstpt
je
arpl
mov
add
and
or
jmp
jle
cs
push
inc
pop
sbb
flds
push
stc
cmc
fists
test
xor
int
jbe
inc
mov
test
aam
cmpsb
imul
and
std
out
inc
mov
int
cld
sub
clc
add
mov
out
cwtl
add
hlt
dec
fcompl
add
aam
add
and
and
add
mov
sub
aas
jno
ja
push
add
xor
or
in
stos
imul
jl
add
add
dec
in
add
arpl
stc
ret
frndint
mov
jnp
fdivr
int3
mov
push
movb
inc
fcoml
ja
fadd
xor
imul
gs
add
add
test
add
lcall
cs
cs
cmpsb
add
cmp
fstpt
inc
out
ret
dec
sub
out
sbb
mov
or
call
stc
test
inc
fsubl
cmp
dec
inc
or
scas
fdivl
gs
add
pop
jge
jno
jae
add
inc
mov
mov
icebp
call
stc
test
out
test
cmpl
mov
jb
add
xchg
ss
jae
xor
fcomps
jle
pop
add
fdivr
push
test
sti
adc
xchg
shll
out
push
mov
call
push
push
pushl
jns
js
jns
test
cmp
mov
add
add
cld
repnz
insb
cld
lcall
cld
incl
cld
incl
ss
lcall
cli
add
lahf
add
add
add
test
add
push
pop
stc
inc
dec
or
inc
add
in
xchg
xorb
add
es
cmp
es
jno
xchg
and
ja
mov
or
xchg
divb
inc
cmp
daa
xor
es
xor
cmp
icebp
cmp
ds
pop
rcrb
mov
imul
or
inc
ficoms
add
xor
jle
push
add
mov
cld
outsb
in
jae
loop
js
ss
imul
adc
add
or
js
lds
xor
or
xchg
out
sub
ss
imul
test
arpl
mov
xor
inc
xlat
adc
fldenv
push
out
mov
les
es
inc
or
call
or
mov
jno
jne
arpl
setbe
sbb
jmp
loopne
jmp
fsubp
ret
fcomi
repz
std
push
enter
jp
add
and
jb
adc
sti
add
cmpl
cs
cmovo
imul
pusha
mov
aad
inc
lea
das
cmp
adc
sti
xor
or
adc
jle
xor
jl
aas
sar
add
add
inc
dec
stc
mov
dec
add
mov
clc
xor
dec
xor
pop
xor
ret
mov
lcall
bnd
dec
mov
mov
xchg
xchg
and
add
mov
les
push
add
jae
lea
arpl
add
jg
jo
sti
jne
mov
push
add
mov
add
add
add
cwtl
mov
ret
push
mov
call
push
jno
xlat
push
loop
out
stos
add
iret
out
add
sar
push
push
pusha
je
add
addb
das
in
stc
add
cmp
add
ljmp
mov
push
push
inc
jb
loopne
jno
mov
lret
cmp
jbe
cmp
imul
mov
dec
jg
push
or
in
jp
scas
sbb
cld
inc
out
pop
in
jl
add
test
mull
xchg
sar
mov
daa
nop
test
ds
adc
push
pop
imul
cwtl
out
or
pop
rcrl
in
jae
pop
xor
jnp
pop
repz
pop
sbb
out
mov
cmp
jp
jne
icebp
imul
add
cmpsl
loope
xlat
scas
inc
add
xor
lret
js
jp
aam
fdiv
mov
adc
inc
pop
add
push
inc
or
lods
incl
xor
jb
dec
mov
cmp
and
pop
push
addl
imul
jb
mov
jge
call
lods
in
call
jb
jb
cmc
inc
out
add
jl
rcrb
out
mov
jno
cmp
popa
fnstsw
rorb
and
jb
jne
jb
sub
add
test
and
clc
aad
mov
add
inc
imul
loope
std
call
in
xor
pusha
mov
jle
jle
sahf
addb
dec
out
add
dec
std
ss
test
in
add
and
jge
or
pop
stc
push
push
xchg
push
in
mov
adc
fstpt
in
roll
jbe
inc
call
jno
mov
aaa
mov
out
jecxz
jecxz
call
out
or
jno
jmp
lahf
insb
add
imul
mov
mov
ret
jno
mov
in
xor
pminsw
insb
jno
mov
repnz
repz
popf
insb
mov
out
bnd
test
pop
insb
cmp
flds
and
jge
loop
out
clc
sbb
mov
add
jge
ja
enter
jl
in
fimull
inc
mov
repnz
ja
add
imul
or
roll
sbb
outsl
sbb
ja
add
pop
jmp
xchg
imul
jle,pn
jne
jle
fisubrs
pop
subl
and
decb
jmp
adc
pop
imul
int3
gs
loope
sbb
popl
add
mov
imul
and
call
cmpsb
or
adc
pop
xchg
iret
sbb
je
bound
push
out
sbb
jae
pop
push
inc
jne
std
aam
pop
jbe
fdivl
enter
inc
out
enter
sbb
sub
push
bound
add
sub
jb
add
insl
add
je
and
outsb
fsub
jle
je
xor
add
ss
cwtl
cld
imul
add
cld
dec
pop
int
les
je
add
or
sbb
orl
popf
ja
jne
xchg
sbb
mov
mov
data16
jne
inc
pop
outsb
push
adcb
jmp
pop
jg
sub
adc
addr16
int3
sbb
push
lock
inc
sbb
roll
jb
cli
shlb
xor
adc
rorb
jno
add
daa
add
xchg
add
xchg
push
rorb
jno
add
jae
add
add
repnz
shr
add
movb
cli
fisttpl
and
sub
test
push
add
xchg
rorb
es
adc
mov
test
gs
and
lds
incl
push
mov
jl
inc
out
jae
imul
into
jp
hlt
or
jno
xor
in
mov
sub
mov
jg
fistps
xor
imul
test
out
insb
jg
flds
lds
push
or
jmp
mov
add
add
syscall
jno
bnd
or
test
push
xor
adc
lock
and
js
lcall
sbb
fldcw
jae
bound
out
pop
rorl
mov
movb
mov
push
adc
dec
mov
xor
and
or
ret
pop
xchg
int
je
xchg
in
std
jbe
aam
test
cmpsl
xchg
mov
inc
pop
lds
add
cmp
and
adc
pushl
jge
xchg
add
xor
xchg
jne
inc
add
add
out
push
incl
fcoml
enter
or
std
fdivs
push
in
and
clc
xchg
inc
out
jo
inc
mov
push
dec
fs
ds
mov
xchg
and
cwtl
std
pop
add
add
dec
in
mov
sti
mov
add
ljmp
clc
pop
ljmp
jno
push
ret
fnstcw
dec
dec
das
dec
xchg
rorl
pop
popa
adc
and
mov
inc
or
shr
jne
add
out
mov
out
cld
add
ljmp
leave
fs
xor
insl
out
ljmp
add
sub
jne
call
jo
cmp
in
xor
stos
into
mov
subb
and
xor
je
insl
in
inc
outsb
testb
sbb
add
and
aad
neg
mov
add
imul
popa
sar
mov
das
inc
out
add
lret
or
rcl
cmpsl
rolb
dec
jns
popa
orl
add
pop
ror
sub
js
jl
int
cmp
sbb
jno
xchg
pop
xchg
jne
test
jmp
mov
add
add
add
add
add
mov
xor
in
jmp
jb
push
es
pop
cmp
pushf
insb
mov
repz
gs
data16
jb
mov
fwait
mov
js
add
jg
in
or
jb
mov
jno
cld
fcoml
aas
jmp
jb
shlb
aas
push
insb
jb
sbb
std
imul
mov
test
out
xchg
call
clc
fimuls
insb
iret
icebp
add
sbb
xchg
add
add
lretw
faddl
movswl
test
in
xlat
je
sub
jne
cmpl
cmp
int3
jae
subl
ret
add
fcomps
dec
hlt
jo
lcall
call
inc
jbe
test
pop
add
repz
mov
jno
add
sti
inc
in
cmpl
mov
jecxz
add
inc
clc
jecxz
or
pop
js
adc
loop
repz
movsl
xlat
xor
call
ss
out
cmp
arpl
push
dec
ljmp
mov
out
add
jno
out
cltd
int3
int
flds
inc
jae
sti
jno
and
inc
add
push
stc
and
add
divl
cli
xchg
inc
popf
loope
pop
loop,pt
out
in
xchg
testb
fnsave
cmp
add
pop
jb
sbb
imul
insb
out
mov
cmc
out
fwait
add
pop
xchg
adcb
into
ds
roll
lret
add
test
movsl
rcr
cmc
ficomps
push
out
repnz
cmp
or
jno
or
push
pop
jle
cmpsb
imul
imul
mov
cmpsb
clc
insl
test
jb
imul
insb
xor
push
lods
inc
add
dec
js
rorl
sbb
xor
pushf
inc
jbe
in
or
adc
add
out
aas
jmp
mov
jg
jge
cmpb
insl
add
cmpsl
inc
gs
xor
and
xor
arpl
cmp
adc
daa
jb
divb
test
in
push
jb
arpl
sti
test
in
cmp
das
leave
jbe
add
adc
inc
add
andb
pushl
shr
dec
in
jg
sti
xchg
inc
xor
pop
insb
cld
push
mov
jge
test
call
cmp
or
mov
int3
inc
jg
fistps
push
mov
mov
adc
sub
adcb
test
push
popa
push
test
or
dec
inc
add
clc
gs
jge
dec
pop
out
sub
cmp
jno
outsl
cld
call
sbb
test
mov
in
or
xchg
mov
cld
push
lock
orl
add
pop
js
imul
loope
cld
cli
push
jb
jno
push
xorl
insl
or
cld
inc
add
jb
pop
pop
cltd
mov
add
imul
add
jl
rcrb
add
hlt
push
mov
xchg
or
rclb
addr16
pop
and
in
add
add
add
mov
xor
testl
ret
in
push
ds
outsb
add
sbb
pop
cmp
pop
and
outsb
into
ret
fldl
mov
fld
data16
outsl
shl
mov
add
insl
jnp
int
push
mov
inc
pop
call
je
and
xor
cmpsb
or
inc
data16
jmp
xchg
fs
call
add
test
aaa
subl
jb
std
aam
adc
jmp
and
lds
hlt
orb
add
sub
ss
jmp
jb
addl
iret
push
inc
mov
cld
add
jge
jne
out
and
add
add
ret
sbb
or
sti
test
addr16
push
dec
ss
xor
in
and
dec
dec
lcall
adc
or
js
nop
pop
add
mov
push
lea
sbb
cmp
dec
or
mov
test
in
dec
sar
test
and
sldt
imull
sbb
push
in
adc
add
je
adc
add
push
cld
cmp
xchg
les
pop
das
rolb
pop
aam
jb
add
sahf
fs
xor
jnp
pop
add
jbe
and
pop
add
in
and
jno
add
sbb
push
jns
lea
jge
xchg
pop
aam
mov
repz
adc
add
mov
ret
push
jns
add
mov
les
cltd
add
mov
mov
lds
cltd
add
xor
jns
add
xor
imull
add
and
out
repnz
add
add
adc
out
dec
clc
popa
lock
adc
jg
sbb
pop
fisttpll
pop
or
lret
adc
test
jno
jno
xlat
push
push
push
jno
mov
pop
mov
icebp
out
add
mov
jl
add
data16
pop
popf
arpl
mov
in
ja
lock
push
fs
arpl
in
dec
loope
call
jb
std
cld
cs
inc
jmp
mov
cmp
jne
add
mov
fs
orl
fs
cld
arpl
pop
icebp
pop
cli
data16
mov
aam
add
stos
inc
pop
dec
lret
jnp
inc
mov
jae
scas
add
mov
jle
or
add
mov
in
jae
add
pop
jo
mov
aad
lea
stc
ljmp
fsincos
subb
cld
lcall
jmp
shr
je
incl
xchg
mov
cld
decl
sub
add
add
mov
sti
inc
mov
jns
push
push
push
movntq
call
add
sub
test
outsb
mov
in
or
xchg
addr16
fistl
cld
jb
les
into
int
imul
mov
add
pop
mov
jo
lahf
and
mov
cmp
push
mov
jmp
xor
jle
add
jne
dec
out
jno
jl
in
into
out
sti
data16
dec
dec
push
out
imul
xor
addr16
cld
and
mov
cmpl
push
add
imul
subl
push
loopne
out
into
add
je
pop
test
sub
ljmp
jmp
into
inc
loope
and
pop
cmp
call
adcb
out
insb
call
add
aam
fnstenv
sub
rorl
push
mov
pop
jns
clc
mov
ret
add
rcrb
inc
push
or
mov
xlat
leave
dec
je
pop
mov
movsl
push
inc
push
xchg
pop
jb
js
lret
push
loopne
mov
jb
ret
xchg
cmp
out
add
repz
sbb
icebp
xchg
call
lret
pop
sub
pushl
insl
xchg
icebp
lahf
or
sti
pop
cld
jmp
mov
cmp
add
add
imul
xor
int3
dec
pop
sbb
sbb
mov
cmp
test
pop
mov
adc
into
pop
dec
iret
pop
dec
decl
fildl
orl
dec
decl
flds
pop
rclb
gs
add
dec
je
test
add
gs
add
push
pusha
add
or
in
shrb
add
push
call
insl
add
sar
ljmp
pop
pop
jno
cmp
insl
addr16
sbb
lret
xlat
push
jle
add
out
les
jno
jns
push
push
jge
jl
shl
push
arpl
add
sar
outsb
or
call
cmc
cmpsl
repz
add
cwtl
push
add
jno
mov
and
stc
decl
imul
data16
jno
add
fcomi
je
xchg
aas
jmp
add
js
and
xorl
or
out
test
std
addl
subb
add
lret
lret
cmp
jmp
ss
xchg
clc
inc
adc
fadds
jle
jb
add
sti
scas
test
cmpsl
push
inc
add
mov
or
jns
das
imul
dec
xor
add
add
in
jb
jp
cmc
pop
ljmp
jno
rcrb
mov
push
push
lods
push
cld
push
out
and
lcall
add
inc
pop
cld
fs
sbb
pop
cld
insb
sub
sbb
push
mov
insb
cmpsb
iret
inc
jb
pop
sbb
bound
andb
add
loopne
and
pop
dec
shl
call
jg
inc
or
mov
push
sub
insl
add
leave
ret
mov
pop
addb
std
dec
jne
xchg
in
inc
fdivrp
push
iret
clc
fcmovnbe
or
cli
adc
jge
std
lcall
out
cmpl
sti
call
and
add
pop
pop
xor
add
jmp
in
adc
push
push
fbstp
or
rorb
sti
incl
dec
arpl
add
clc
push
mov
in
scas
mov
mov
sbb
sbb
das
rcrb
lock
xchg
jno
aam
pop
jo
std
and
mov
pop
dec
shrl
jb
out
or
pop
jae
in
fidivl
cld
mov
lcall
in
jb
dec
mov
dec
vhaddpd
mov
lods
sti
xlat
dec
out
movsb
or
scas
cmp
xor
lea
cmp
aam
sti
in
and
sub
add
mov
xorb
adc
xchg
popl
xor
xchg
jbe
ljmp
mulb
pop
sbb
insl
pusha
xorb
mov
add
push
stc
repnz
and
xorb
sub
mov
addb
pop
inc
shl
in
jb
sub
cmp
jo
jmp
push
or
jbe
dec
or
in
inc
dec
adcl
test
or
ja
lcall
repnz
xor
jg
pop
jbe
pop
add
add
or
mov
add
pslld
ds
push
jecxz
cmpl
add
loope
cmp
cmpsl
mov
shrl
xchg
lret
fs
rcll
imul
adc
imul
adc
not
mov
dec
call
mov
repz
add
mov
repnz
add
cmpsl
outsb
repnz
and
cmp
pusha
fiadds
cld
or
pop
fs
add
data16
pop
ret
sbb
data16
add
mov
je
mov
xor
cld
xor
lds
adc
inc
cld
cmp
das
pop
inc
fwait
shll
xor
addl
push
mov
add
mov
out
add
fmuls
cld
xor
mov
lret
push
and
inc
jno
push
ss
or
sahf
sub
mov
pop
call
xchg
push
ljmp
daa
daa
xchg
xor
outsl
xor
push
xlat
xchg
xorl
shlb
mov
add
inc
jno
sub
jp
xchg
pop
fistpll
adc
testb
clc
movsl
lock
xor
pop
clc
insl
and
scas
test
pop
jno
jno
sbb
add
mov
sahf
scas
vmovd
sahf
icebp
inc
add
cmc
jne
popf
aad
mov
dec
pop
inc
pop
pop
push
cld
sti
dec
jmp
pop
dec
mov
daa
add
dec
repnz
xor
xchg
inc
shl
push
jnp
xlat
mov
fldt
inc
shl
ss
xlat
cmp
push
out
insb
orl
sbb
lret
lds
into
sub
pop
int
add
add
mov
cmp
inc
jmp
cmp
stc
sar
lret
aas
push
bound
dec
pop
add
mov
iret
jo
dec
out
mov
add
cld
subl
add
mov
xor
xor
fbstp
out
dec
insl
aam
mov
out
fdivrp
jmp
stc
mov
sti
mov
pop
dec
or
jb
mov
add
inc
dec
push
jg
int3
inc
enter
add
add
mov
mov
sbb
or
pop
cld
data16
or
or
gs
inc
pop
mov
fcoms
mov
pop
test
xchg
jo
fstpt
or
inc
dec
sti
jne
mov
adc
xor
inc
sti
push
jmp
mov
leave
dec
arpl
push
jmp
xchg
or
aaa
ffree
std
xor
popa
sti
cld
incl
fsubs
iret
jno
add
test
repz
jno
mov
sub
das
scas
push
dec
push
in
subl
mov
pop
movsb
push
test
pop
lock
xor
sarb
rcll
cli
dec
add
mov
sbb
xor
add
test
jmp
faddl
mov
add
testl
adc
es
jg
outsb
push
push
add
jno
or
arpl
cmpsl
add
mov
xor
or
test
sbb
int3
mov
imul
popa
push
pop
dec
popa
es
adc
lods
add
mov
in
inc
mov
push
stos
imul
add
aas
repnz
mov
leave
inc
mov
repnz
repnz
es
sbb
mov
rolb
or
out
xor
push
or
inc
sar
sub
out
lods
push
std
cld
cmpsb
out
aas
jmp
pop
mov
jmp
push
add
pusha
cld
mov
push
push
jno
xlat
ss
call
push
push
jo
push
cld
lahf
lock
jae
jmp
rep
mov
dec
cld
xchg
icebp
jae
jmp
ret
pop
repz
pusha
sbb
lock
jae
repz
ss
mov
pop
add
mov
mov
mov
add
arpl
jecxz
or
xor
adc
add
add
fadds
sub
or
add
ja
iret
dec
add
lcall
add
pop
mov
addb
or
int
jno
outsb
xorl
jl
imul
loopne
or
dec
pop
cmp
push
pop
std
jmp
adc
in
add
mov
cmc
mov
mov
lret
add
xchg
inc
push
push
lods
iret
push
sub
xlat
or
out
in
lret
adc
lret
scas
sarl
mov
mov
les
xchg
and
add
jno
xchg
pop
mov
pop
fldl
jg
fsubrl
icebp
decl
add
test
call
out
lock
loop
stos
aam
dec
mov
pop
iret
and
out
mov
mov
pop
out
dec
jae
bound
mov
lods
test
ret
mov
jns
mov
rcrl
lds
add
inc
push
icebp
sti
ret
xor
inc
mov
out
cs
jmp
scas
xchg
xor
mov
add
jmp
push
mov
xchg
jns
cld
rcr
jns
adc
mov
scas
out
rcrl
mov
call
sti
roll
xchg
jmp
jae
pop
fldl
jmp
mov
inc
inc
add
dec
xchg
out
mov
out
add
out
inc
dec
cld
inc
int3
cmpl
jb
scas
mov
cld
mov
xchg
call
les
fs
push
push
fdivr
add
inc
add
add
addl
add
add
into
sub
inc
xor
dec
sub
pushf
pop
into
lcall
xchg
loopne
in
mov
sub
jno
dec
sub
mov
scas
sti
test
call
add
inc
les
inc
call
mov
fadds
jg
scas
jg
pop
incb
push
orb
jno
inc
push
inc
push
dec
ds
fiaddl
push
fs
sbb
es
mov
test
mov
pop
jl
jns
push
or
and
add
mov
mov
jecxz
or
mov
add
push
add
mov
jnp
pop
jnp
xchg
jecxz
or
js
add
push
add
jbe
mov
pop
stc
push
test
outsb
in
pushl
cmpb
sub
lock
mov
push
repz
cli
adc
ret
xorb
dec
pop
xchg
push
push
gs
push
mov
push
adc
dec
shlb
stos
dec
dec
push
std
dec
xor
jl
push
jno
mov
sub
add
xchg
inc
pop
mov
dec
cmc
test
aam
jge
scas
imul
mov
inc
add
imul
outsb
jne
cltd
jge
neg
in
adc
cmpsb
rcrl
aas
inc
out
inc
dec
cld
push
inc
pushl
push
mov
sahf
popa
sub
rorl
inc
pop
ret
add
fbstp
push
jb
mov
cmpsl
dec
cld
fwait
insl
xor
imul
dec
cld
insl
xor
arpl
jns
jae
add
testl
dec
cld
imulb
mov
xor
movsl
mov
add
add
mov
push
mov
inc
or
movsb
fimull
out
std
pop
push
mov
or
iret
or
mov
repnz
sbb
hlt
std
xchg
mov
call
call
clc
call
loopne
in
jge
xor
add
push
decb
and
stos
add
flds
xchg
push
cmp
adc
add
or
adc
cmpsl
addb
xchg
push
push
inc
sbb
sub
jno
daa
xor
pop
xchg
cld
add
and
inc
xor
jo
mov
mov
or
push
lret
push
incb
in
daa
sub
sbb
push
sbb
cld
push
int3
les
pop
mov
push
cmc
jle
dec
cmc
pop
inc
repnz
call
inc
stc
mov
dec
push
in
and
cli
and
lock
dec
cmc
xor
jae
rol
and
push
jns
push
add
jns
lock
add
xor
movsb
test
jno
jno
icebp
push
inc
mov
les
pop
bound
sahf
dec
dec
adc
mov
jmp
inc
lods
push
push
filds
jno
and
dec
mov
add
cmp
bound
jae
mov
out
xlat
out
pop
es
mov
fucomi
dec
int
mov
scas
inc
mov
lret
or
scas
xchg
call
bound
jg
jmp
loope
inc
jmp
mov
mov
cltd
rolb
mov
test
adc
inc
adc
pop
cmpsb
push
je
cmp
loop
inc
jb
inc
adc
and
add
cmp
dec
hlt
inc
or
jb
jp
jb
adc
dec
lahf
xor
cld
cld
cld
cmpsb
icebp
aas
jmp
fidivrl
sbb
outsl
cs
and
dec
cmp
adc
dec
test
pop
cld
cmp
fwait
add
jne
movl
pop
add
mov
cltd
loopne
add
ud0
xchg
test
push
fbstp
ret
cld
cli
jne
movsb
mov
mov
mov
movsb
jle
lahf
mov
inc
mov
mov
call
in
in
dec
and
mov
mov
pop
cmovo
scas
push
dec
dec
xor
into
dec
cld
ret
call
repnz
dec
or
pop
add
jno
imull
mov
add
imul
test
add
repnz
fldl
inc
add
mov
inc
xchg
loopne
out
pop
add
cli
sbb
cmp
inc
add
push
dec
jg
jo
add
jne
xchg
and
sbb
out
and
xor
jb
add
or
shlb
adc
mov
cltd
int3
cld
dec
movsl
test
in
xor
addl
add
jl
add
addr16
clc
repnz
out
jno
mov
jo
shll
mov
insb
rclb
out
jge
jbe
sub
imul
sbb
jl
out
push
xchg
das
dec
add
jne
repz
mov
rclb
ja
lods
jle
aaa
lea
or
jmp
add
pop
xlat
outsl
sub
test
xchg
jmp
sub
aam
inc
cld
jb
or
push
lcall
push
push
or
cmp
xor
pop
sub
test
and
andl
and
jge
jae
cmc
inc
or
jb
inc
lds
pop
aad
mov
inc
jae
xchg
stos
cld
add
pop
iret
mov
dec
mov
cmp
xor
mov
inc
aaa
ret
fmull
cmp
xor
ljmp
xor
sbb
xor
push
jne
xchg
sti
lcall
sbb
enter
cmpsl
das
and
inc
nop
pop
jmp
enter
fsubrl
inc
cmp
test
mov
inc
sbb
jle
addl
jo
inc
jle
mov
cmp
je
pop
cld
prefetchnta
add
add
or
inc
std
out
mov
or
je
adcb
bound
and
push
iret
pop
leave
mov
cld
scas
sub
pop
cli
lock
mov
add
out
iret
xor
inc
adc
in
pop
adc
pop
test
adc
les
bound
int3
sbb
and
dec
dec
stc
cld
ss
inc
cld
movsl
xor
sub
add
inc
cmp
and
or
push
cmpsl
inc
adc
scas
adc
jp
orb
stos
stos
lods
jmp
aas
and
std
mov
lods
mov
dec
mov
je
add
cmp
int
subl
lods
jmp
aad
jbe
and
push
std
roll
sub
jbe
cmp
mov
pop
js
sub
scas
sarb
xor
lea
or
add
call
add
andb
mov
or
orb
call
xchg
pop
ret
pcmpgtb
push
cmp
push
cs
xchg
pop
cmp
jge
sti
loopne
add
push
sahf
mov
imul
scas
adc
lods
cs
imul
mov
popa
mov
mov
xchg
shlb
jb
cmpb
cmp
pusha
or
mov
xor
jne
test
cli
jo
mov
sbb
sbb
lahf
dec
add
dec
cli
incl
imul
add
push
ret
jne
fdivs
rolb
ss
arpl
mov
adc
cmp
add
call
jnp
mov
cld
ljmp
subl
aad
sti
ljmp
movl
pop
rorb
sti
incl
mov
mov
scas
jno
inc
cld
clc
jecxz
scas
jo
dec
shrl
mov
mov
aad
cmpsb
mov
or
pop
xor
mov
rolb
push
jecxz
cld
cmc
jmp
add
cli
fs
repz
cld
jmp
jmp
out
xlat
inc
cld
clc
in
out
add
sub
outsb
dec
pop
dec
sub
adc
inc
add
jno
add
jno
push
xchg
adc
mulb
movsb
push
or
cld
mov
xchg
call
jno
cmpsb
nop
mov
cmpsb
nop
jp
or
pop
dec
inc
repnz
mov
hlt
sub
into
cmp
sub
sbb
inc
orl
cmpsb
test
out
test
mov
mov
bound
dec
test
jecxz
add
add
sub
cmpsb
in
push
fmull
ljmp
inc
jmp
rcl
mov
mov
imul
cmp
ljmp
cmpb
cmp
push
imul
mov
add
xor
pop
sbb
shrb
dec
cmovo
repnz
out
jb
test
add
bound
cmp
and
or
popf
into
out
into
mov
rolb
imul
pop
insb
repnz
jno
adc
inc
sub
loopne
cwtl
incl
sahf
sub
add
sti
je
adc
sti
mov
fwait
popa
add
or
jle
ficomps
mov
popa
pop
add
sub
inc
fmuls
dec
push
mov
std
xchg
test
popf
sub
inc
cld
mov
and
aam
and
mov
test
add
lahf
fwait
inc
cmpb
pop
add
mov
popa
inc
mov
cld
fs
push
mov
sbb
out
jne
aad
lods
cmp
mov
sti
fucom
addr16
adc
cmp
sti
dec
or
dec
stc
cmp
lcall
out
out
rolb
out
adc
inc
jno
xor
cmpsb
lea
or
popa
add
and
push
xchg
aaa
repz
add
nop
mov
es
fwait
lds
jmp
adc
jno
jno
dec
fcmove
add
cmpsb
mov
into
fnstenv
jne
repz
add
adcl
mov
in
or
sbb
add
outsb
mov
roll
sti
mov
mov
orb
mov
aaa
adc
call
cmp
add
mov
add
add
pop
lods
int3
xor
push
minps
push
mov
popa
xor
jge
jo
xor
xchg
ret
out
ret
aas
xor
out
add
sub
cld
add
adc
aas
adc
mov
push
sub
out
xlat
xor
jb
jl
daa
insb
mov
or
mov
push
inc
cwtl
add
push
dec
and
mov
add
mov
push
in
push
hlt
sti
cmp
sub
je
cmp
sub
push
add
insl
and
and
movd
and
mov
cmp
inc
and
push
mov
dec
push
outsb
add
mov
hlt
jg
das
outsb
sbb
fildl
adc
add
push
sti
jne
repz
xor
cmp
and
push
cli
add
sub
incl
add
jl
in
hlt
cmc
fildl
xchg
push
sti
jb
hlt
push
push
mov
jmp
inc
inc
lea
call
xor
adc
cld
push
inc
lods
and
fdivl
jge
adc
add
jno
cmp
add
jae
xor
jb
ret
jl
add
cmp
std
jecxz
in
stos
filds
mov
mov
and
fimull
adc
xchg
jg
cmp
adc
rclb
pop
call
sbb
mov
xor
shll
or
or
and
iret
sbb
ret
shll
add
push
lret
jno
cmpsb
scas
push
lret
inc
mov
out
add
add
or
gs
xor
add
fnstenv
cmp
lret
mov
cmpsl
add
jno
sub
in
jb
mov
jb
mov
shlb
mov
inc
aad
or
cmp
cld
pop
test
jb
lcall
into
push
std
pop
cs
sub
rcr
int
mov
jb
mov
jl
sbb
adc
dec
jae
out
mov
cmc
xor
sbb
dec
mov
mov
hlt
dec
cwtl
xor
aaa
popa
or
std
add
jne
dec
sti
jne
clc
adc
cld
pop
in
or
fldl
lcall
jo
xchg
int
push
xchg
push
arpl
out
out
sti
dec
cmc
sti
jne
dec
dec
sti
and
gs
call
lcall
mov
push
out
fcoms
pop
cld
xchg
in
in
xchg
jg
xchg
imul
aas
add
mov
mov
push
xorl
lods
add
sub
iret
cld
test
pop
sahf
inc
adcb
daa
sub
pop
daa
add
inc
or
popf
xor
outsb
std
notl
mov
sub
mov
add
std
or
add
std
adc
fwait
mov
jo
or
jb
adcl
jge
mov
orl
adc
add
pushf
or
mov
add
mov
into
test
jno
inc
ror
bound
add
test
mov
shll
adc
mov
inc
sbb
ret
jbe
pop
adc
cmp
mov
cs
add
into
jecxz
add
sarb
add
es
rcll
sahf
mov
jno
cmpsb
fdivs
add
sar
sbb
add
add
jmp
cmp
cld
hlt
push
aas
jmp
push
cmc
push
push
cltd
out
call
xor
call
jb
adc
sub
mov
aas
daa
shlb
mov
daa
cld
out
fwait
cmp
js
insb
out
cli
pushf
lock
xabort
dec
ror
mov
mov
call
cwtl
adc
insl
ja
cmp
sti
xor
xchg
and
add
pop
cwtl
mov
inc
and
xor
fiaddl
mov
jmp
xor
data16
cld
push
test
mov
insl
clc
aam
add
jl
xorl
loop
mov
add
xchg
test
add
dec
add
jne
rolb
hlt
sarb
pop
pop
rcrl
pop
hlt
call
jg
mov
add
call
push
cli
cmp
shll
or
cli
mov
int3
mov
dec
dec
in
xor
iret
xchg
sub
out
lods
pop
jnp
lods
add
daa
add
xlat
rcrb
sarb
jle
out
add
lret
pop
test
roll
jle
sbb
mov
mov
ljmp
add
sbbl
sbb
cld
add
xorl
add
mov
out
arpl
fadd
out
jl
xor
xchg
out
add
jl
mov
rcrl
lret
xlat
jbe
out
mov
xor
xor
mov
sahf
sub
push
arpl
inc
add
or
push
daa
jmp
aad
rcll
pop
inc
push
add
cmp
sarb
xor
jbe
jo
jmp
add
cmp
hlt
ret
lcall
mov
sub
xor
add
sar
arpl
std
mov
fnsave
cltd
aaa
sub
mov
mov
inc
jmp
mov
out
jb
add
jb
adc
fs
cmp
inc
sbb
repz
stos
jb
ficoml
jb
call
insl
xor
aas
sbb
sub
mov
or
inc
jmp
and
mov
sti
decl
cmp
pop
add
add
dec
sti
je
notb
call
movsl
sub
inc
cld
ljmp
sti
addr16
je
lods
or
cwtl
inc
cld
mov
xor
add
sbb
cli
je
cld
mov
dec
in
cwtl
lock
adc
aas
ror
std
addr16
pop
inc
cld
decb
cwtl
cmp
pop
aad
add
fisubrs
push
cmp
mov
pop
aaa
xor
shlb
add
sti
push
inc
jno
idiv
aaa
push
mov
popf
dec
das
jae
das
rolb
adc
push
inc
jno
adc
pop
mov
add
stos
and
xchg
sbb
jb
add
push
jp
movsb
das
or
cmc
add
add
fsubs
jno
test
sahf
push
jnp
insl
dec
add
jno
incl
or
inc
jno
adc
sbbl
repnz
in
iret
mov
out
fs
add
add
movsl
aas
std
add
insb
mov
es
sbb
ds
push
xchg
das
out
mov
cli
mov
out
es
add
mov
mov
into
daa
out
xchg
sub
add
in
push
ret
mov
es
cmpl
mov
stc
and
cli
mov
push
or
out
mov
add
add
push
std
out
mov
out
mov
into
cld
sbb
or
iret
sub
adc
fucomp
jmp
jb
jae
repnz
mov
mov
adc
insl
cmpl
aad
inc
add
into
cmp
jb
or
scas
hlt
and
jb
add
jns
adc
xchg
jg
call
jp
jb
orl
sub
int3
sbb
das
leave
mov
dec
inc
dec
cmpsl
inc
and
push
in
sub
or
pop
pop
andl
push
and
mov
push
push
out
or
xchg
popa
push
add
adc
mov
in
fadds
add
enter
add
or
cli
pop
add
jo
push
dec
or
xchg
jno
inc
jae
mov
jg
ja
stc
sbbb
pop
ljmp
cmpl
dec
sub
lret
pop
pop
in
cli
jecxz
andb
fdivrl
mov
xlat
add
adc
call
test
testb
push
out
dec
adc
pop
out
add
shl
je
sub
movb
imul
jno
ja
jns
lret
adc
push
ljmp
aam
lcall
adc
lret
ret
xor
push
inc
add
xchg
lods
loope
jno
in
push
jmp
sbb
shr
adc
and
adc
ror
sub
scas
fidivrs
lret
mov
insb
stc
ret
jbe
sbbl
and
cli
sbb
fmul
rcl
lods
or
jl
mov
and
mull
aam
add
jg
and
movsl
or
jmp
scas
add
aas
sbb
mov
pop
push
and
pushf
imul
mov
xor
data16
aas
jp
int
and
adc
jne
call
inc
test
cld
mov
scas
or
fistps
mov
adc
call
adc
jae
jp
xlat
xchg
mov
sub
adc
and
cmc
cmc
insb
jnp
mov
push
pop
sub
and
xor
or
jl
nop
sti
xchg
push
push
mov
or
or
cld
push
jmp
add
mov
push
call
mov
pop
lea
cli
call
add
dec
add
lcall
mov
dec
xor
test
test
test
test
in
sahf
sti
test
sub
add
mov
pushf
leave
jge
add
pop
fcompl
mov
insb
std
xchg
fwait
inc
jae
fisubrl
and
aad
jno
flds
pop
jmp
out
jnp
xchg
dec
lcall
ficoms
mov
lods
and
inc
jne
sahf
movsb
and
sbb
mov
xor
cld
mov
adc
or
or
add
jns
inc
lea
pop
and
lods
and
testb
fdivr
sbb
or
cltd
and
sub
lds
sub
or
add
aam
inc
mov
idivl
outsl
dec
mov
jp
dec
outsl
leave
and
test
xchg
ss
andb
inc
push
add
sbb
div
xchg
add
xor
sti
lds
add
fwait
popa
mov
clc
mov
jno
push
jo
add
xchg
dec
ret
dec
mov
mov
mov
daa
pop
fisttpll
call
xor
out
xchg
pop
cld
je
mov
inc
add
add
jmp
sbb
mov
pop
pop
cld
subl
pop
or
out
xor
cld
push
ljmp
push
add
jmp
push
sbb
sbb
pop
xlat
xor
subl
xor
mov
jno
mov
cmp
sti
xor
jno
aad
push
call
dec
push
in
call
idiv
cli
cli
ds
rolb
decl
adc
call
add
sbb
std
vpmulhw
jl
fwait
inc
hlt
addl
push
adc
in
mov
inc
call
pop
loopne
jno
jno
int3
jle
cltd
inc
or
mov
call
pushl
movsb
lret
jb
xor
fs
jp
push
lods
jmp
inc
inc
ja
movsl
xor
ss
dec
mov
or
xor
jg
jne
inc
jae
fidivrs
mov
out
xchg
jns
xor
insb
sub
int
add
mov
pop
daa
repz
add
cld
popa
or
mov
cmp
add
pop
rcll
cld
jl
or
stos
cmp
add
add
icebp
inc
bnd
cmp
jbe
pop
scas
movb
add
andl
jno
dec
sub
add
jg
or
scas
sbb
js
mov
fidivrs
in
cmp
out
lock
icebp
lcall
sub
out
test
jle
or
dec
sbb
js
or
add
push
mov
orb
stc
outsb
repnz
inc
jmp
fcompl
data16
mov
jmp
push
test
inc
popa
sbb
cmpsb
add
and
clc
cmp
or
jb
xor
inc
in
mov
jnp
call
out
sub
cld
jb
adc
mov
out
outsl
bound
subl
pushl
decl
and
jb
or
pop
push
test
hlt
fdivr
xor
adcb
sbb
bound
loopne
and
movsl
mov
in
dec
add
push
mov
lea
add
orl
sti
dec
inc
js
mov
mov
mov
inc
add
jnp
mov
push
xchg
mov
out
push
xchg
xor
sar
push
mov
add
or
add
ljmp
cmp
je
mov
push
inc
sti
add
sbb
dec
xchg
cmpsl
or
push
movsl
inc
jbe
push
xchg
in
out
push
and
repnz
add
in
aaa
mov
inc
dec
shl
fsubrp
sub
mov
cmp
cmp
sub
cmp
mov
mov
ret
call
fwait
mov
je
ret
pop
mov
call
sti
mov
mov
pop
decb
or
dec
cmpsb
inc
adc
stos
pop
outsl
add
cmp
frstor
mov
sbb
mov
and
iret
scas
and
out
and
adc
jge
cmpsb
rolb
jbe
sbb
lret
sbb
sub
mov
mov
sbb
xchg
out
xor
repnz
sbb
add
scas
cmp
add
test
aam
aam
xchg
mov
sub
sbb
sbb
add
fists
test
and
out
pop
cmpl
sti
xchg
xchg
jb
push
sbb
jmp
xor
subl
icebp
aas
jmp
lcall
sarb
mov
jns
test
add
pop
pushf
scas
jb
mov
mov
stos
and
jbe
ret
add
mov
shl
and
addr16
gs
pop
cs
pop
call
xor
pmaxub
push
add
pop
cmpsb
decb
mov
decl
mov
add
lea
push
call
xchg
ret
jno
cmpb
push
pop
ja
push
fsubrs
xchg
or
add
sldt
fcoms
adc
inc
ret
jo
and
add
je
add
ljmp
rorl
cmp
outsl
push
adc
adc
je
push
call
dec
pop
mov
in
and
cmpb
add
mov
inc
test
jno
int
test
cld
aaa
aaa
fsub
adc
stos
and
pop
pextrw
cmp
jbe
cld
cli
into
pop
push
int
xor
mov
add
incb
push
xchg
or
mov
xchg
stos
sbb
or
jg
push
fwait
icebp
aas
jno
rol
xchg
hlt
fildl
lea
push
test
push
mov
mov
shll
sub
xchg
sbb
sbb
aas
push
or
lods
inc
add
adc
es
mov
mov
mov
ficoml
jb
out
jno
test
stos
icebp
es
mov
out
jno
cmpsb
xchg
mov
mov
andl
sahf
jnp
or
or
ljmp
ss
aas
jmp
ret
pop
sub
or
xadd
adc
push
push
jl
mov
jno
or
cmp
clc
or
xor
and
mov
add
sbb
mov
mov
add
push
sahf
loopne
push
sub
mov
jo
pop
subb
mov
lods
inc
mov
pop
orb
mov
mov
call
mov
out
addr16
xchg
sub
adc
cld
xchg
jp
or
test
movsb
add
pop
sub
cld
decl
sbbb
aam
pop
add
pop
shrb
push
adc
bnd
hlt
test
sbbl
pop
call
bound
or
int3
jmp
xchg
push
jg
sub
xchg
vpaddq
in
or
in
testb
sub
push
jns
out
xorb
cld
cmp
push
mov
or
cmp
cmp
lea
and
insl
cs
subb
add
xor
inc
mov
aad
or
sahf
out
gs
add
test
push
out
call
cli
cwtl
rcr
clc
hlt
pop
mov
dec
mov
testl
add
test
dec
out
cs
cmpsb
add
mov
xchg
mov
sub
adc
dec
out
ret
sub
scas
add
sub
sbb
bound
cltd
mov
mov
sbb
adc
lahf
outsl
shl
ds
cmpsb
adc
mov
and
or
sbb
mov
mov
adc
sbb
xchg
mov
repz
shl
sub
imul
divl
call
sub
popf
out
mov
cld
sbb
add
in
add
pop
sarl
stos
gs
pop
or
jno
int3
add
in
daa
jg
and
ja
dec
xchg
pop
ljmp
lcall
inc
in
jae
dec
loopne
xchg
js
ljmp
xchg
xchg
cli
add
out
rorl
jmp
fcmovne
jg
add
push
sti
jne
notl
adc
cmp
mov
inc
loopne
xor
jg
movsb
fisubl
mov
fimull
xor
fidivrl
jl
shlb
add
add
loop
fs
cmc
inc
cld
out
popa
std
jmp
test
jl
cld
mov
sti
jg
sbb
aaa
roll
jg
add
pop
jb
dec
aas
push
mov
shll
movsb
aam
cli
out
add
or
ss
or
sbb
mov
nop
lock
add
insl
mov
xorb
rol
inc
sub
lods
incb
subl
add
jns
mov
movsb
inc
jae
addr16
sar
pop
sub
jle
adc
daa
sub
xor
push
in
int
mov
inc
jae
out
adc
sbbb
push
sbb
and
movsl
fiaddl
jno
jle
xchg
in
jne
lods
repz
data16
push
or
pusha
inc
inc
add
ljmp
scas
jmp
shl
mov
loop
add
insb
inc
loop
nop
add
mov
push
mov
notl
ret
test
nop
jnp
imul
xchg
in
mov
add
inc
out
enter
cmpsl
sbb
test
sbb
xor
cmpsb
lcall
adc
sbb
push
mov
add
outsl
pusha
or
jb
xor
scas
into
mov
pop
add
adc
test
clc
cld
xchg
call
cld
inc
repnz
xchg
jmp
jge
add
pop
aam
test
insl
sub
and
rolb
sbb
out
stc
inc
pop
inc
loopne
add
fnstcw
push
adc
add
loope
add
mov
pop
les
inc
cmp
or
push
lea
mov
adc
jb
push
mov
js
js
cmpl
pushl
sbb
and
and
inc
cwtl
sti
decl
push
adc
pop
mov
test
push
in
jo
add
dec
sbb
inc
dec
clc
mov
add
dec
jae
mov
das
cmp
jno
mov
sbb
aas
jno
xchg
and
shl
cld
fs
adc
jb
or
repz
cld
xor
inc
jno
lods
mov
jl
lock
add
mov
add
jl
jns
xchg
sub
fdivr
cld
add
jb
rclb
cld
in
adc
ljmp
add
push
add
data16
sbb
sbb
inc
dec
sbb
test
add
add
roll
xor
add
dec
add
push
testb
sbb
call
fldl
aam
popf
negl
es
inc
fldl
and
mov
scas
or
push
andl
jno
mov
dec
xchg
out
mov
add
jno
ss
in
sbb
mov
xlat
mov
test
jle
rcrl
adc
adc
in
add
xchg
add
call
and
ljmp
lea
jb
adc
popa
enter
sar
pop
adc
icebp
movsb
sar
incb
xor
cld
cmpsb
push
jle
pushf
popa
or
xchg
test
or
scas
add
int3
cli
jle
jmp
jb
adc
mov
mov
shll
call
xchg
or
inc
jg
push
test
xor
pop
aad
sub
mov
jmp
inc
lock
decl
mov
and
sti
dec
xchg
dec
push
jmp
push
incl
dec
sti
jne
enter
movsl
add
jne
notb
cmp
inc
cld
mov
jns
js
jns
je
cmpl
movsb
jg,pt
enter
dec
push
int3
inc
mov
adc
es
jae
lret
add
je
fs
ja
add
adc
aad
jo
jecxz
in
mov
sbb
mov
repnz
add
and
adc
pop
test
push
sahf
mov
sti
sbbb
leave
push
jb
rolb
sbb
lock
mov
xchg
adc
add
jb
sbb
push
cltd
inc
cwtl
cld
sahf
pushf
inc
jb
inc
sbb
mov
loopne
inc
imul
jb
pop
mov
mul
add
inc
or
jns
divb
inc
cmp
inc
popf
cmpsb
sub
jno
jno
icebp
adc
subb
add
adc
cli
cwtl
sti
cmpsb
out
mov
inc
negl
hlt
inc
jnp
sbb
lret
mov
and
arpl
sbb
add
decb
sahf
arpl
and
in
mov
insl
xchg
add
xchg
cmpsb
into
or
jl
cwtl
jae
les
inc
ljmp
sbb
jmp
add
add
add
push
std
add
jge
call
xor
jge
inc
add
fistpll
jnp
sub
lahf
aas
jmp
jge
dec
jb
sbb
subb
into
mov
fidivl
movsb
pop
xor
add
or
pop
sub
mov
jmp
push
jb
push
sar
cld
jmp
cmc
sti
cmp
xchg
add
idiv
jne
xor
sbb
push
lea
xchg
test
addl
hlt
adc
inc
cld
mov
pop
add
pushf
iret
add
or
adc
decl
push
mov
rcrb
rorl
inc
enter
mov
jo
cmp
inc
or
and
adc
call
inc
mov
pop
sbb
aas
jno
les
stos
fisttpl
inc
in
push
push
add
in
push
jl
leave
inc
jae
jb
lcall
sub
jmp
xchg
movsb
cld
push
and
push
testb
push
xor
int
jbe
mov
inc
sbbl
xchg
add
mov
or
adc
sbb
mov
aas
jno
sar
ss
fcomip
mov
or
popf
xchg
loopne
jecxz
outsl
lcall
mov
mov
jl
shlb
add
lcall
loopne
js
adc
pushf
sbb
in
sbb
orl
pop
stos
aad
sub
es
loop
repnz
out
jno
and
jne
cli
push
aas
mov
add
in
xor
pop
lds
bound
insb
jge
or
inc
in
jecxz
inc
mov
ja
addr16
jp
jae
inc
push
jb
xorb
add
je
xor
inc
xor
cmp
jb
push
ljmp
aad
sbb
cmp
push
cld
jp
pop
imulb
jg
jb
add
mov
cmpsl
ret
dec
push
add
je
addr16
idivl
sbb
add
adc
inc
add
out
movsb
add
add
notl
dec
lret
pop
adc
adc
cld
test
arpl
cld
incl
or
test
sti
mov
mov
adc
roll
add
imul
add
or
jnp
pop
sbb
cmp
nop
sbb
push
dec
add
add
adc
popa
adcl
add
xchg
add
inc
add
push
push
pslld
adc
add
inc
jno
mov
add
jmp
push
ljmp
mov
mov
adc
adc
ljmp
add
xor
jae
cltd
add
icebp
idivl
xorb
decb
ss
subl
inc
fdivrs
mov
imul
out
cmpb
sbb
lock
sub
test
inc
and
cmp
rorl
adc
ljmp
inc
add
push
add
add
mov
xor
sub
jno
sub
dec
adc
icebp
xchg
in
ds
jmp
cltd
cs
call
jno
jge
add
mov
std
std
cmp
clc
inc
stc
dec
data16
add
shlb
jno
dec
fiadds
push
rclb
or
cltd
rcl
mov
movsb
pop
push
int
outsl
push
lds
jae
mov
das
je
add
or
add
add
lods
call
inc
fstpt
test
std
sti
jmp
sar
sti
jmp
mov
xchg
movsl
adc
or
add
xchg
dec
insl
add
pop
add
rcl
xchg
test
pushf
add
jns
je
pop
cmp
test
je
dec
cmp
test
outsl
add
cmp
subl
add
cmp
ret
dec
mov
jg
clc
sbb
push
jge
or
mov
adc
int
outsl
lds
pop
in
jae
loop
push
incl
cmp
jnp
je
xorl
add
xchg
dec
push
and
dec
lea
sub
sbb
ljmp
sbb
call
in
test
pop
into
xor
add
push
xchg
idiv
mov
xchg
mov
incb
sarb
add
mov
daa
rorb
daa
mov
pop
test
mov
sbb
daa
xchg
dec
int
jns
push
xchg
nop
dec
adc
add
xchg
cli
fisubrl
push
shlb
ficoml
add
adc
push
xor
fs
inc
push
cmp
popa
out
add
mov
lock
dec
cmp
jmp
add
iret
addr16
cmc
push
enter
push
fs
in
inc
ja
or
mov
jmp
mov
add
add
popf
daa
jne
xchg
daa
insl
dec
adc
add
lds
add
outsb
add
push
jp
loope
inc
or
loope
dec
aas
dec
jns
int3
add
add
addr16
call
jmp
cmc
jne
jno
adc
xor
xchg
ss
call
jno
sti
aam
or
cmp
adc
fs
dec
sti
aam
adc
jmp
cwtl
dec
push
es
or
sti
pop
and
mov
pop
add
and
jl
mov
add
fdivr
add
fcoms
jne
call
adc
cmp
mov
test
filds
dec
push
call
pop
mov
add
pop
sub
xchg
call
cld
mov
add
add
divl
call
lock
add
aam
add
dec
cli
inc
and
std
push
test
repnz
add
jo
push
testl
add
outsb
pop
sahf
add
mov
dec
dec
sahf
out
jne
dec
or
jmp
lea
jno
imul
pop
add
daa
push
daa
cmpsb
sbb
pop
sub
pop
mov
sub
or
mov
adc
jbe
and
pop
sub
jns
js
or
or
jo
cli
in
cli
adc
pop
hlt
or
call
add
xchg
add
jns
mov
adc
js
inc
jno
movsl
daa
dec
mov
daa
inc
call
into
pminsw
rcrl
or
add
sub
roll
leave
adc
add
push
ret
inc
mov
mul
out
or
inc
jmp
inc
push
jmp
push
andl
daa
inc
mov
add
inc
adc
cmc
add
stc
adc
adc
jne
pop
insb
or
cltd
or
fsubr
or
jmp
add
pop
sbb
mov
add
jl
imul
jb
test
sub
sbb
aad
add
shl
loope
xor
jne
push
pop
call
lods
insb
sbb
inc
adc
insl
imul
push
adc
icebp
pop
stos
std
pop
fstl
push
out
sti
aam
push
sti
add
push
inc
add
push
mov
in
add
add
xchg
insl
or
sub
xchg
sbb
test
jl
xor
jge
divl
xchg
insl
or
aaa
cmc
idiv
mov
divl
repz
pop
repz
pop
push
rclb
cld
push
pop
ficoml
add
in
add
mov
jne
insb
and
inc
push
add
or
je
ret
sub
jne
add
push
mov
adc
fsub
out
dec
cmp
out
xor
ds
push
lods
pop
sti
test
inc
jno
pop
mov
add
cmpsl
incl
lahf
outsb
jb
test
out
fs
sbb
pushf
imul
sti
pop
stc
mov
mov
clc
sti
mov
int
jne
xor
jne
xchg
adc
add
cmpsl
adc
and
call
aas
jno
push
xchg
fsubrs
pop
add
in
push
xor
iret
cmpsb
add
adc
pop
xchg
aam
sub
push
mov
mov
xchg
repz
pop
sbb
cli
fs
inc
jno
pushf
lds
pushf
mov
ds
adc
and
outsl
add
jg
imul
jl
cltd
inc
jno
fsqrt
cmp
pop
dec
mov
sbb
cltd
dec
popf
cli
lcall
jo
dec
xorb
hlt
or
add
inc
add
enter
sarl
jno
into
stos
jb
push
push
sbb
mov
inc
xor
pushf
xor
stc
out
inc
adc
mov
push
idiv
adc
jne
sti
imul
sti
imul
jle
adc
insl
push
pop
stos
test
push
leave
out
add
in
and
in
dec
pop
call
gs
sbb
push
adc
jne
adc
popa
cmc
jne
and
sti
push
jecxz
jmp
jmp
dec
incl
notl
push
dec
mov
in
add
std
add
popa
adc
xchg
or
std
add
adc
cmp
in
divl
test
jmp
call
jae
divl
divl
cmpsb
divl
mov
adc
inc
fcoms
ret
push
mov
add
xorl
sbb
push
cmpsb
imul
mov
rolb
xor
push
jbe
or
jne
xor
pop
dec
in
orps
pop
sti
cmc
push
sti
mov
or
cltd
lcall
sbb
add
or
fld
or
jno
cmp
and
aas
add
mov
xor
jo
sbb
or
jno
daa
add
mov
mov
sbb
sbb
inc
call
in
je
mov
jno
cmp
cltd
mov
test
jo
jnp
add
negl
sub
pop
add
cmp
push
pop
mov
idivb
jns
xlat
in
adc
xchg
idivb
inc
jno
xor
insl
add
add
in
out
je
outsl
add
add
gs
pop
cmp
lret
ret
inc
adc
add
jmp
lea
jmp
loope
inc
add
lods
lods
add
and
repnz
mov
xchg
push
das
inc
sahf
add
je
lock
repnz
mov
add
in
cli
es
test
xchg
andl
mov
pop
js
and
inc
rcrb
jbe
adc
jne
leave
stos
jno
push
fldcw
sbb
add
add
aas
add
ja
or
loop
add
test
jo
test
jo
andl
or
and
idiv
or
xor
lea
mov
idiv
loope
fmuls
pop
cmp
adc
mov
shrb
mov
jp
or
adc
enter
or
add
dec
out
idivl
add
push
std
notb
dec
lods
or
jno
rclb
out
jno
push
sub
fisttpll
push
mov
push
mov
inc
jns
std
sti
or
add
mov
cld
dec
jbe
push
mov
hlt
jb
orl
add
int
add
push
jne
jno
or
gs
cli
test
cmp
add
mov
inc
pop
push
imull
xor
xor
lods
dec
mov
aam
sbb
push
ljmp
pop
add
call
push
call
mov
jmp
dec
movsl
jge
hlt
inc
jmp
jnp
inc
jmp
and
hlt
mov
cmc
push
sub
inc
jns
test
mov
jno
sbb
imul
mov
je
pop
jns
movsb
repz
std
ljmp
push
in
mov
mov
out
jl
adc
xorb
xchg
adc
jmp
jnp
add
jnp
fldenv
imul
sbb
adc
push
pop
lea
xlat
pushf
fsubl
stos
push
ss
lock
fidivrs
call
pusha
stos
mov
cmp
iret
addr16
mov
std
in
sti
arpl
adcl
inc
jmp
inc
and
stos
lcall
add
sub
insb
and
jb
push
call
add
add
dec
not
pop
rorl
lds
dec
out
bound
push
jnp
rolb
dec
mov
or
and
cmp
xchg
cmp
out
xor
sbb
and
or
out
divl
sti
into
fldt
inc
les
sbb
sbb
mov
mov
and
ds
adc
pop
mov
adc
add
sbb
jl
dec
in
into
mov
push
push
cli
mov
adc
xlat
pop
data16
lock
outsb
lea
dec
sti
cmp
lock
cmp
mov
dec
or
cmp
dec
dec
xchg
or
cli
add
inc
jno
mov
out
or
pop
sti
fmul
lock
push
fldcw
xor
sti
lcall
das
add
jl
jge
push
adc
stos
pop
mov
bound
and
xchg
frstor
add
and
mov
stc
sub
dec
jnp
adc
adc
inc
cmpsb
pop
not
data16
fmuls
and
inc
jmp
xor
add
jnp
call
sbb
pop
add
inc
jno
test
imul
jnp
and
inc
jmp
inc
jno
sub
sub
outsb
add
jb
call
insl
xor
fnstenv
pop
js
mov
adc
movl
out
ret
push
sti
mov
ret
or
call
xor
push
sbb
inc
add
insl
xchg
mov
sbb
sub
xor
dec
jle
aas
jmp
leave
fadds
pop
mov
stos
jb
xor
mov
sti
add
add
xor
jmp
lret
xlat
into
push
sub
ror
add
jle
cmp
or
cmp
sub
sarb
add
cmp
insb
or
cmp
pop
in
pop
clc
scas
add
jecxz
sub
inc
xor
lret
push
adc
call
int3
mov
add
sbb
add
xchg
dec
shlb
mov
sbb
add
mov
pop
in
push
jae
inc
pop
dec
mov
mov
jno
jno
xlat
cmpsl
cmp
in
cmp
imul
sti
adc
aas
add
mov
inc
mov
sub
lods
scas
shlb
fdivrs
jno
enter
add
inc
push
mov
or
xor
pop
sti
mov
mov
outsb
aaa
sti
int
flds
sti
mov
add
sarl
mov
and
jmp
shll
iret
add
in
add
dec
outsb
filds
lock
add
adc
add
jge
out
cltd
pop
jno
jmp
ljmp
test
fbstp
dec
je
test
mov
adc
fs
testb
lcall
pop
in
jno
je
imul
add
dec
or
lea
sti
pop
movsb
fdivrs
sub
dec
out
sub
pop
into
stos
jb
xchg
sub
mov
in
push
jb
inc
icebp
jne
push
mov
jb
add
int3
aas
jmp
insl
add
mov
push
jnp
icebp
push
inc
add
test
jb
lea
sti
mov
adc
sbb
inc
add
mov
cli
xor
test
add
aad
fisttps
int
clc
std
call
test
pusha
lret
arpl
adc
std
test
aam
testb
mov
jb
ret
vpunpckldq
int3
bound
or
in
inc
enter
aad
int
fdivr
jae
dec
jmp
fisttps
cwtl
std
push
pop
add
std
push
leave
lret
push
adc
sub
dec
arpl
push
jno
pop
inc
inc
push
add
inc
cmpsb
mov
push
pop
sti
mov
cmp
xchg
jmp
sarl
shlb
repz
jno
xor
mov
call
add
sbb
push
push
es
pop
add
sti
or
sti
out
pop
inc
jl
imul
push
leave
adcb
stos
push
vpsubsb
sub
jmp
sar
out
std
cmpsb
mov
jmp
call
sbb
lods
outsb
xor
outsb
shlb
cld
inc
jg
jmp
xor
aaa
adc
incl
flds
jmp
push
xor
jmp
test
test
loopne
and
ret
lea
hlt
test
out
fistpll
adc
pop
push
outsb
fisttpll
fdivrl
sub
data16
mov
push
out
mov
shll
data16
xor
mov
insb
test
sti
scas
movsl
adc
test
call
mov
inc
ret
sub
xor
pusha
add
fcmovne
push
sar
pop
xchg
je
test
jge
add
fists
jb
call
out
inc
rolb
mov
jmp
into
ficompl
and
push
xor
jecxz
push
jb
push
cmp
sbb
std
jecxz
incb
jne
pop
sbb
incl
cmp
in
test
dec
pushl
sbb
dec
push
jnp
adc
mov
xchg
shll
lock
adc
add
mov
mov
mov
or
dec
mov
pop
rorl
std
jmp
aas
add
repnz
push
add
into
lea
dec
push
jno
add
add
jl
or
bound
or
imul
repnz
jne
sbb
jo
inc
into
mov
in
cmp
jecxz
shlb
sbb
cmc
or
in
sbb
les
in
lods
in
push
push
imul
push
sti
push
or
in
mov
or
gs
inc
add
mov
xlat
arpl
jmp
in
shr
mov
shl
dec
add
rcrl
xchg
ret
inc
jmp
ja
and
in
jbe
jmp
fbstp
jmp
rcll
inc
jmp
add
out
jne
in
call
add
jns
pusha
out
fsubrl
push
sub
or
test
inc
loope
call
add
add
add
xlat
stos
call
pop
mov
pop
xchg
cmp
pop
stos
imul
in
in
in
and
jb
push
push
add
add
adc
sti
jmp
test
andb
ja
mov
out
sti
jmp
loope
and
lret
stos
jb
push
cmp
xchg
pop
call
lea
jne
inc
sbb
or
out
test
dec
out
cli
cld
push
or
xchg
popl
add
je
out
adc
xor
cmp
in
fiaddl
add
jmp
in
rolb
push
sbb
loopne
decl
xor
clc
adc
mov
inc
pusha
data16
fwait
add
fucomp
std
lcall
call
push
mov
jne
mov
cmp
call
lea
push
xor
addr16
cmp
jmp
std
or
out
lock
icebp
push
pop
add
cmp
fs
aas
jno
mov
add
push
or
xrelease
out
ret
xor
insb
lret
mov
jno
cmp
insl
xchg
sti
mov
scas
les
xchg
mov
frstpm(287
xor
in
and
sahf
bound
stc
fwait
loopne
es
xor
pushf
add
add
inc
add
inc
clc
or
test
cmpsb
add
add
add
mov
cwtl
xor
fnstcw
loope
fnstenv
pushf
jge
es
add
mov
add
xchg
mov
sbb
fnstcw
add
movsb
mov
inc
jno
movsl
mov
add
subl
xlat
pop
push
adc
xor
mov
fmuls
fadds
insl
xor
cs
fstpt
rorl
jb
add
movsl
cltd
fistl
adc
sti
imul
cmp
or
sbb
sti
adc
mov
jmp
xor
repz
mov
lea
dec
test
jmp
popf
test
movsl
ret
inc
add
das
in
mov
mov
test
dec
cwtl
imul
jb
call
popa
js
adc
repz
add
adc
call
mov
push
xchg
mov
aam
test
mov
push
push
xorl
pushf
sarb
add
jne
add
outsl
test
mov
jmp
push
add
mov
ljmp
not
sbb
mov
call
aad
inc
mov
lock
mov
push
xchg
dec
mov
add
mov
mov
sbb
add
dec
jo
roll
insl
nop
inc
add
xchg
xor
popa
pusha
pop
push
xor
mov
cmp
nop
inc
dec
ja
lea
das
lea
in
fcom
out
out
push
sti
repnz
fnsave
ret
neg
jne
pop
pop
insb
or
aaa
call
data16
imul
xchg
ljmp
jne
aas
faddl
jno
out
and
decl
ljmp
add
aad
xor
add
cmp
jb
inc
push
andl
fs
jmp
cld
and
ljmp
push
popa
xor
testb
dec
adc
mov
aam
enter
inc
or
push
fistps
cltd
mov
add
data16
imul
add
xor
add
xchg
mulb
sub
add
out
pop
scas
add
insl
push
mov
add
and
aaa
mov
push
jp
sti
jmp
xchg
mov
sub
add
adc
notb
xlat
sti
push
and
dec
jo
test
into
xor
adc
stc
add
mov
sti
pop
leave
aaa
rcrb
cs
jb
dec
icebp
jnp
mov
jb
xchg
mov
clc
cmp
add
add
orl
mov
addl
pop
xor
push
add
cmp
xchg
fwait
imul
sarb
pop
test
xor
incl
decl
add
ret
inc
mov
hlt
mov
decb
mov
mov
addl
std
das
cld
call
adc
cld
push
repz
fstpt
clc
add
divb
outsl
mov
adcb
jp
packuswb
add
sub
arpl
das
in
add
fdivl
lock
pushf
iret
aaa
add
sti
in
add
mov
insb
or
lods
or
sti
fadd
sti
mov
jae
inc
jno
sti
cmp
jmp
andl
xchg
cmpsb
sub
jb
decl
sti
ljmp
les
add
xchg
lret
fstps
inc
mov
rcrl
mov
dec
scas
xchg
fidivrl
mov
jmp
xchg
lret
pop
fstps
das
mov
fmuls
rcll
and
cmp
mov
test
fcmovu
in
adc
xor
jne
mov
aad
adc
xor
loopne
add
sub
xor
je
cltd
rcr
fmuls
test
and
xchg
flds
jp
add
out
test
cmpsl
cmp
push
sahf
cmpsl
lock
call
test
mov
mov
and
push
jb
sub
jb
add
jae
add
xchg
inc
add
cli
cs
xor
lods
mov
fcomps
pop
pop
rolb
addr16
inc
jg
cmpsl
push
sbb
fsubrs
test
xchg
mov
add
add
test
idiv
mov
call
int3
les
mov
and
mov
mov
mov
outsb
xor
mov
cmp
fcoml
add
aad
jl
jp
push
test
call
incl
dec
les
mov
testl
cmc
loop
sti
mov
idiv
xchg
pop
add
iret
adc
dec
add
les
xor
mov
call
test
push
mov
shrb
je
iret
call
dec
fimull
rclb
mov
jno
mov
incl
jno
pop
into
mov
lods
loopne
xlat
decl
in
cmp
jno
incl
jno
dec
daa
pop
daa
sti
jmp
aas
into
fbld
add
enter
or
out
ds
add
cmpsl
cmp
int
xlat
out
test
jecxz
mov
add
push
outsb
jnp
clc
test
ret
int3
mov
mov
add
add
sbb
in
mov
incl
iret
add
pop
and
jmp
lods
jno
jnp
outsb
mov
add
push
in
jmp
insl
pop
aad
add
mov
add
je
cltd
mov
int3
imul
adc
mov
add
ljmp
cmpsb
add
iret
les
adc
jmp
sbb
lea
inc
test
cmp
inc
cmp
das
mov
ja
lds
test
cmp
inc
enter
xor
xchg
rol
xchg
mov
call
push
clc
int
jne
addr16
and
gs
add
inc
dec
jno
inc
cmp
mov
into
sub
je
clc
dec
push
aas
clc
shrl
lock
add
dec
shlb
jmp
jmp
cmp
sbb
scas
call
pop
push
jns
jle
adc
mov
adc
add
jg
ss
add
aad
je
lret
mov
mov
adc
dec
jmp
lods
adc
dec
lea
idivl
add
mov
ljmp
dec
or
or
leave
ret
push
mov
and
jle
call
cmc
sbb
sbb
xlat
adc
fxch
call
rcl
incb
jp
sbb
xlat
aam
ror
xor
data16
clc
testl
loopne
je
pop
aaa
cmp
mov
xlat
pushl
cmp
pop
mov
adc
into
sti
push
out
mov
or
imul
cwtl
inc
sub
mov
add
fnsetpm(287
rcll
shr
inc
jno
leave
adc
jno
sub
push
call
shlb
data16
xor
lock
add
xchg
cmpb
sub
cmp
pop
jge
int3
lock
cmp
adc
pop
push
sbb
fistpl
pop
shr
mov
add
and
push
add
or
rol
inc
dec
sub
add
in
cmp
aaa
inc
and
lret
incb
shl
bound
sbb
and
mov
out
add
jmp
scas
ljmp
addl
add
jne
add
inc
js
xchg
add
sti
xchg
mov
pop
add
mov
aas
jmp
mov
mov
jno
xor
cld
fdivp
aas
jmp
fadds
jne
cmpsl
das
and
add
add
jl
sarl
jl
roll
test
popa
xchg
ja
and
or
adc
add
call
or
jne
adc
add
call
aad
and
dec
add
call
sub
push
dec
lret
int
sbb
outsl
or
mov
adc
add
sub
int3
push
xor
jno
or
add
xor
sub
ret
add
jl
cmc
aas
jno
aam
mov
ret
xlat
push
xor
xor
aas
jno
add
xchg
lret
dec
and
mov
sub
jo
clc
arpl
add
add
push
cmp
adc
xlat
jmp
aas
inc
xor
clc
push
xlat
sbb
addr16
mov
ss
cmpl
xlat
decl
fsubrs
ret
icebp
call
add
loope
test
out
add
hlt
scas
add
pop
sbb
out
gs
add
and
lret
repz
lretw
jo
mov
sbb
jmp
add
pop
call
xor
sbb
push
push
pop
fmuls
jp
pop
dec
xchg
adc
fdivl
jmp
iret
add
add
cmp
hlt
mov
bswap
xor
xchg
dec
ljmp
lahf
add
cmp
call
mov
out
lock
and
jb
jl
out
pushl
push
or
inc
cld
xchg
mov
jmp
jb
pop
cmp
scas
enter
jae
call
jb
xchg
push
je
adc
add
aam
sti
ficomps
pop
add
jne
or
sub
inc
or
test
and
sbb
fs
sbb
cmp
pusha
pop
add
inc
add
testb
jl
int3
sti
jae
mov
or
lahf
xor
fst
int
fsubs
imul
add
scas
js
idiv
add
lret
mov
jne
rcr
decl
xchg
add
pushl
arpl
divl
addl
adc
xor
out
sub
testl
divb
ret
fsts
rorb
ja
add
sbb
mov
cmp
fnstcw
dec
mov
mov
pop
fwait
add
inc
jl,pt
dec
fdivrl
xchg
movsb
add
in
dec
add
jno
inc
and
imul
and
fdivr
jmp
icebp
call
sarb
and
shll
insb
dec
push
data16
inc
and
imul
jno
sti
in
and
roll
add
fsts
mov
jno
lock
sti
and
jmp
ror
movsb
divl
lret
jl
xlat
inc
jno
jmp
in
int
mov
mov
inc
jno
adc
addr16
jmp
dec
jae
mov
lret
or
mov
and
jmp
dec
adc
jno
mov
jno
out
lret
pop
pop
inc
jno
sarl
xchg
fldt
cmp
negl
and
jge
and
fadd
sub
add
sbb
lds
jb
push
add
add
cmp
xchg
mov
lea
xor
xchg
cmp
and
mov
push
pushw
adc
clc
adc
les
pop
cld
mov
add
pop
sub
mov
inc
jmp
add
cld
jae
pop
dec
and
leave
cmc
mov
add
xor
hlt
out
aas
jmp
lods
add
add
ret
adc
jnp
push
inc
xor
dec
stos
push
pop
scas
xchg
mov
neg
add
neg
aaa
sahf
or
add
add
fdivs
add
xor
push
mov
jae
add
xchg
rol
add
subb
mov
repz
or
mov
shll
add
add
call
add
pop
rol
shlb
or
push
cmc
aas
jno
xor
add
repz
push
ds
jl
sub
sahf
push
xor
cmpsb
jnp
popf
int
repz
popf
adc
jns
cmc
inc
push
and
add
jle
cmpsl
daa
mov
std
cmp
enter
inc
mov
jnp
inc
decl
leave
in
out
dec
aaa
cli
imul
pop
test
cmp
aaa
and
dec
add
das
ret
inc
jns
add
call
fildl
je
in
rclb
fdivrl
dec
jmp
jp
or
add
mov
xchg
cmp
cmp
loope
mov
std
adc
das
pop
fldenv
push
sbb
fs
inc
jno
sub
in
sub
pusha
inc
in
lods
in
and
push
jns
lods
mov
add
fs
and
xlat
ret
cwtl
jb
add
fldcw
mov
inc
adc
xchg
and
xor
ret
inc
fprem1
imull
cmp
mov
lock
mov
mov
jle
lea
jb
mov
xchg
push
movsl
pop
mov
mov
mov
push
je
cli
pop
add
pop
sti
fdivl
dec
call
ds
dec
xor
xor
add
lods
test
fdivr
sub
and
add
test
inc
nop
pop
addl
mov
cmp
fcmovnbe
sti
jae
clc
jae
loopne
add
push
pop
flds
xchg
mov
mov
in
leave
fidivrl
sarl
sbb
dec
call
adc
call
xchg
mov
repz
incl
inc
inc
jbe
stc
add
inc
hlt
add
jnp
mov
adc
add
mov
add
sbb
or
adc
lock
mov
or
add
jno
mov
aas
add
push
lods
std
jno
or
rol
aaa
bound
leave
daa
xchg
mov
leave
pop
cmpb
pop
xor
mov
loope
cmp
sbbb
mov
sti
pop
xchg
adc
and
jne
add
imul
cmp
cld
repz
mov
cmp
call
popa
das
add
scas
sub
jo
inc
mov
clc
cmp
push
imul
jmp
int3
pop
dec
xchg
aaa
imul
ret
adcb
add
nop
cmp
cld
jmp
add
inc
push
ret
insb
ret
add
aaa
add
add
or
ss
jmp
pop
out
jle
imul
imul
nop
ja
jb
add
shrb
test
jb
ret
add
jnp
add
inc
imul
jnp
push
xchg
test
je
sub
call
add
inc
jbe
add
mov
lods
xor
in
jb
mov
test
inc
inc
lock
idiv
dec
les
push
inc
testl
ds
testl
aad
jne
or
cmc
add
inc
cmp
mov
cmp
or
addb
mov
insl
and
cmp
lea
push
pop
addps
dec
cld
test
or
jl
lock
or
pusha
lcall
pushl
mov
push
pop
dec
mov
jl
cmpsb
test
mov
pop
mov
mov
inc
or
les
ja
lock
and
cmpsb
mov
add
xchg
jecxz
sti
lods
or
aaa
movsl
out
es
ds
cmp
cmp
push
sub
stc
push
inc
test
insb
push
or
icebp
jg
jb
and
rorb
jg
jle
imul
jb
es
int3
fsubrs
js
pop
ret
imul
call
popa
add
popa
add
jne
mov
pop
push
outsb
mov
xor
loop
mov
cmp
or
shl
mov
mov
fs
cpuid
aaa
dec
add
aaa
push
add
cli
sbb
out
push
cmpsl
or
add
xor
adc
add
adc
pusha
cmp
jmp
and
xchg
add
pop
jb
or
enter
mov
mov
dec
lcall
cli
imul
mov
je
push
notl
inc
jg
pushl
lock
jmp
aas
aaa
xor
xor
scas
data16
cmpsb
pop
adc
hlt
add
mov
cld
add
testb
stos
scas
mov
ret
jnp
fdivr
je
push
cmp
and
inc
mov
out
or
mov
shll
mov
adcb
or
jns
jl
cmp
out
push
jnp
mov
add
push
mov
repnz
pop
add
repnz
jne
rcll
inc
xor
pop
add
inc
clc
dec
imul
xchg
test
in
movsl
sbb
xchg
cmpsb
incb
jns
push
jl
adc
test
cli
pop
adc
mov
push
and
xchg
fidivl
adc
test
and
cli
or
add
push
xchg
mov
push
sti
test
rorb
mov
xor
add
aaa
in
xchg
gs
repnz
mov
dec
add
orl
jo
repz
ss
bound
xorl
in
out
add
lcall
adc
inc
jno
mov
out
xor
xchg
cmpsl
out
add
into
mov
xchg
pop
test
in
les
ss
pop
sub
mov
mov
mov
mov
mov
xchg
fmuls
out
xchg
add
jb
dec
je
cmp
pusha
xor
jmp
and
ret
dec
dec
dec
adcl
inc
jmp
repnz
ss
push
xchg
mov
ret
cld
bound
test
jmp
push
pop
jbe
xchg
sbb
push
ljmp
idiv
add
jmp
divl
mov
jne
dec
jns
pop
dec
fs
divb
jl
addb
insl
sti
divb
test
lret
insb
add
sbbl
pop
adcb
idiv
pop
test
push
leave
ret
push
mov
push
and
dec
in
clc
not
ja
pop
mov
into
test
push
test
cwtl
ljmp
inc
mov
je
in
push
clc
in
sti
daa
xor
cld
in
sti
std
cmc
pop
sub
sbb
cli
push
xor
test
push
jmp
push
mov
xchg
in
cld
out
inc
mov
repz
fwait
lds
das
inc
pushf
mov
lret
jne
and
call
sti
ds
pop
leave
mov
call
jle
popa
cwtl
jmp
push
outsw
xor
add
ljmp
jno
cmp
sub
add
mov
ret
xor
pop
add
pop
stc
and
pop
std
sbb
mov
orb
mov
jae
ljmp
bound
jno
jmp
mov
fildl
jbe
into
mov
xor
fistpl
and
mov
jp
pop
xor
add
pop
sbb
dec
pop
stos
xchg
mov
cmp
xchg
cmpsl
dec
push
mov
std
pushl
in
bound
xor
icebp
add
bnd
ja
jg
outsl
cwtl
fcmovu
jb
addb
add
jo
fsubrs
inc
ja
popa
jmp
pop
sub
jb
sti
mov
jne
jne
fidivl
lret
jmp
movsl
outsb
or
pop
adc
out
stc
inc
add
jb
sti
add
add
int
pop
push
dec
std
jecxz
mov
movb
cmp
or
or
dec
push
sub
add
loop
add
mov
jp
adc
adc
in
repz
pop
jae
adc
inc
add
mov
add
xor
imul
call
adc
sti
cmp
add
dec
push
je
in
fs
add
xor
or
in
leave
lcall
pop
aad
adc
and
je
fstpt
sbb
xor
sbb
pushl
mov
mov
push
out
xchg
aaa
add
xor
cld
or
in
pusha
sub
cwtl
or
jb
cs
clc
lcall
add
inc
gs
add
push
xor
cli
adc
xlat
mov
add
jo
jmp
push
mov
or
xor
adc
xor
add
icebp
test
cmp
mov
int
jge
sub
add
add
or
inc
jno
pop
dec
popa
jg
add
enter
inc
xchg
lret
clc
call
dec
jne
jb
imul
sub
and
jmp
mov
xor
mov
call
xor
loopne
sti
push
add
cmpsl
xlat
call
ret
xor
je
in
xor
and
adc
stc
rorb
das
and
ss
mov
push
jno
jne
add
cmpsl
sti
arpl
cmpsb
jne
cli
loop
cmpsl
ret
jnp
cltd
ljmp
sbbb
push
adc
cmp
insl
inc
cwtl
xlat
jns
cmpsb
xchg
sub
insb
add
sbb
call
dec
push
xor
testb
bound
mov
adc
cmpb
loope
clc
mov
fstpl
mov
lods
orb
divl
or
push
test
dec
std
xor
data16
mov
sub
call
mov
je
fiadds
add
mov
add
sub
hlt
out
sti
jne
inc
call
mov
gs
in
or
push
jno
jl
popa
push
mov
lea
shl
out
add
jo
cs
jle
or
outsb
insl
lds
jne
push
out
sbb
sub
jecxz
bound
lahf
mov
mov
cmc
jmp
mov
shrb
push
call
icebp
aam
add
mov
push
dec
mov
add
xchg
jns
jb
jge
add
out
out
add
mov
jo
push
sbb
lds
mov
popf
adcl
inc
dec
fs
lea
outsb
cli
cmpsb
and
cmpb
inc
mov
add
lods
stos
jmp
ss
mull
dec
cmpsl
jmp
add
sub
repz
je
mov
sbb
dec
xchg
jns
rolb
cld
jae
add
push
xchg
sbb
sub
mov
jp
fimull
sub
data16
jno
push
sub
cmp
pusha
sti
sbb
add
shrl
sub
and
cmp
and
jo
jo
stc
icebp
out
mov
pop
or
fbstp
jae
aad
stos
sti
cltd
icebp
cmp
and
psubd
fdivp
mov
xor
sti
mov
push
push
pop
dec
cmpb
cwtl
insl
jle
test
lods
jmp
in
adc
arpl
adc
idivl
cmpsb
jg
flds
add
in
idiv
inc
roll
cmpsb
cld
lcall
push
mov
mov
mov
xor
call
cmpsb
jg
mov
add
std
test
xchg
add
add
lea
push
notl
lret
mov
adc
mov
xor
repnz
mov
cmp
cli
jne
or
pushl
mov
and
push
ljmp
pushl
inc
hlt
hlt
sub
push
call
sti
lcall
lcall
cmp
inc
cltd
data16
orl
ja
gs
lds
xor
out
jp
data16
lea
movsl
adc
mov
add
adc
je
fstpt
dec
cltd
lcall
fwait
outsb
adc
pushl
out
add
push
pop
inc
add
sbb
add
insb
jge
add
add
cwtl
shrb
dec
add
repnz
ds
ja
fwait
stos
sub
cmp
sub
and
or
mov
jmp
cld
aam
repnz
dec
xchg
jg
lods
clc
adc
mov
fs
sub
jge
pushf
pushf
mov
cmp
sub
add
mull
inc
popa
jne
mulb
push
inc
jmp
lods
sub
cs
mov
aaa
hlt
lret
andb
icebp
jb
or
pushf
xchg
cwtl
sbbl
xchg
jno
lds
movl
pop
dec
sbb
inc
pop
mov
mov
push
dec
aas
mov
std
xchg
add
jmp
movsl
inc
in
inc
add
call
sbb
decl
or
jp
leave
out
inc
lea
pop
notl
dec
loopne
add
je
adc
test
cmpsl
add
add
push
adc
orl
fmull
mov
cmp
push
push
cmp
inc
pop
and
sbb
jl
hlt
dec
sub
jno
cmp
jno
les
cmc
jecxz
pushl
cmp
jb
mov
and
das
xor
outsl
pop
cld
or
sbb
pop
xchg
xchg
incb
sub
clc
test
xchg
sub
clc
push
imul
push
xlat
popa
ljmp
popa
jp
sbb
aas
push
sti
dec
in
addr16
popl
pop
stos
dec
mov
clc
insb
imul
push
popa
ljmp
sti
nop
or
jbe
jmp
and
mov
arpl
clc
ret
inc
pop
test
hlt
test
rcpps
inc
cld
ror
aas
fisubrs
hlt
inc
xor
add
into
push
stos
mov
lock
lods
outsb
dec
gs
jno,pn
mov
fwait
mov
and
testb
nop
xchg
jmp
adc
jbe
clc
xchg
test
mov
data16
cmc
pop
or
add
hlt
adc
mov
jg
sbb
sbb
inc
add
or
cmpsb
pusha
mov
jne
add
xchg
push
inc
hlt
insb
jno
cmp
or
pop
fwait
sti
push
jbe
add
lods
lea
test
or
fcmovnu
add
adc
mov
sti
mov
data16
repz
or
mull
adc
inc
add
and
sbb
inc
mov
jne
xor
inc
sti
outsl
inc
push
leave
ficoml
jnp
hlt
andb
dec
cmpl
testl
enter
fdivs
bound
arpl
lock
add
add
in
mov
xchg
add
xor
add
mov
inc
hlt
add
fwait
xchg
add
dec
pop
mov
clc
jmp
outsb
jbe
popa
and
lcall
xchg
cmp
in
jp
or
fwait
dec
lea
pushf
or
mov
add
sub
jne
adc
cld
cli
fs
pop
jne
cli
movsb
arpl
imul
jecxz
xchg
sub
add
lcall
hlt
cli
pushf
sti
cli
sub
lcall
inc
clc
js
stos
or
mov
inc
leave
mov
js
ljmp
xorl
dec
call
jno
sub
ja
sub
test
insl
les
es
cmp
dec
out
lods
cmp
xor
xor
add
jmp
movsb
negb
cmp
sbb
iret
mov
loop
fmulp
pop
or
fisttpll
in
mov
cmc
movsl
lret
test
fwait
scas
movsl
cmp
sbb
sbb
dec
push
fwait
push
mov
stc
adc
js
test
aas
dec
testb
fcoml
add
xchg
add
xlat
add
mov
pop
adc
mov
int
or
das
test
cs
push
sbb
ljmp
jns
sub
inc
out
pop
and
mov
gs
mov
or
jne
in
stc
mov
cld
sub
mov
jl
testb
leave
mov
add
and
dec
push
mov
fistl
loope
cmp
add
jecxz
sti
out
cmpb
clc
sbb
add
call
cltd
movhps
jp
adc
shlb
inc
cld
pop
cmpl
cld
push
fxch
ret
dec
push
xchg
jne
inc
and
icebp
push
add
idiv
pop
cmp
test
out
negl
addl
add
sti
mov
inc
pop
mov
addl
dec
jno
adc
jne
les
xchg
mov
loopne
addr16
outsl
mov
cmp
add
mov
cmpsl
add
out
inc
xchg
mov
cmp
pop
les
shll
or
dec
add
add
stc
adc
add
outsl
lds
pop
test
sbb
pop
push
ljmp
leave
mov
mov
sbb
add
mov
add
xchg
call
add
sbb
cmp
xchg
sbb
fwait
call
nop
mov
dec
pop
add
cmpsb
test
mull
jmp
les
mov
mov
cmpsb
ret
and
mov
push
mov
sbb
mov
mov
or
sarl
test
inc
xor
inc
in
mov
jno
lods
bswap
cmp
add
mov
or
adc
jb
cld
data16
fwait
mov
inc
cmp
mov
jmp
xchg
test
add
test
jmp
repnz
ljmp
xchg
adc
ret
xchg
sti
fsubrp
mov
out
sti
dec
add
pop
leave
cmp
in
cli
mov
mov
add
lods
push
shl
add
sub
cld
cli
add
add
pop
fiaddl
add
and
in
enter
inc
mov
cwtl
add
mov
xchg
aas
ja
leave
lcall
mov
push
pop
jle
mov
mov
call
mov
cmp
jmp
aaa
push
data16
adc
inc
add
pop
mov
mov
arpl
add
add
negb
add
push
dec
testl
jne
adc
ljmp
pop
out
jg
mov
rcrb
cmpsl
cmp
cs
and
or
mov
sti
dec
hlt
imul
adc
fldl
jo
push
inc
xchg
jge
ds
adc
je
inc
xchg
push
pop
inc
sti
add
cmpl
mov
jae
and
and
negl
repnz
inc
mov
fxtract
mov
push
test
lock
push
xor
xor
jle
test
push
mov
call
and
jnp
movsb
or
ffree
add
mov
add
shlb
hlt
in
out
mov
dec
les
cmpsl
fsubs
pmaxub
mov
mov
cli
mov
shlb
inc
add
stos
fsub
aaa
es
sti
das
mov
xchg
push
jmp
fadds
shrl
sbb
jnp
bound
aaa
or
xchg
test
jmp
idivl
mov
cmc
in
adc
mov
jg
jbe
rolb
lret
mov
jg
add
cld
pushl
fwait
repnz
stos
push
adc
jns
insl
stos
testb
incl
push
pop
lock
xchg
movhps
jg
je
cmp
add
push
jnp
daa
xlat
push
ret
add
outsl
sub
push
int3
add
cmp
icebp
std
gs
xor
enter
adc
inc
pop
scas
icebp
xchg
mov
je
fdivs
bsr
push
filds
ret
sub
xlat
adcl
add
jno
nop
pop
cmpsl
data16
add
ret
out
inc
outsl
cmpsl
aad
bound
dec
imul
sti
std
out
mov
das
lea
das
sti
test
mov
add
mov
add
cs
les
mov
outsb
lret
mov
adc
dec
cmpsb
movsb
cli
push
and
and
xchg
push
inc
mov
mov
add
mov
das
mov
pop
adc
jecxz
fisubl
test
xchg
jae
cltd
cli
das
outsb
ret
enter
test
lods
rcrl
sbb
push
rclb
jp
stos
das
xorl
movsl
sbb
xor
add
lcall
fdiv
add
jge
lcall
or
cs
cwtl
cmp
sub
lret
mov
mull
mov
add
mov
ds
add
jmp
rorb
je
in
in
cmpsl
xor
xchg
ret
add
stos
push
sub
mov
test
pushf
stc
mov
mov
jmp
add
outsb
xchg
fsub
xor
in
jb
xchg
dec
push
xchg
inc
push
sti
inc
xor
dec
rorl
xchg
cltd
mov
push
popa
add
lods
sbb
mov
shl
rol
cli
mov
iret
dec
inc
mov
inc
add
in
addb
les
jge
and
mov
jae
in
cmp
adc
enter
js
ds
jne
add
and
mov
mov
rorl
inc
mov
inc
pop
add
pop
ret
loope
xor
rcll
out
adc
pop
pop
push
cld
gs
das
sahf
cli
inc
and
pop
jg
add
xor
testl
lea
mov
sti
mov
mov
add
scas
cli
out
jle
mov
sbb
adcl
das
sti
mov
sbb
out
sub
pop
or
mov
call
add
add
mov
call
stos
repz
fsubr
data16
mov
and
xorl
jnp
or
lea
dec
mov
lods
into
lea
fimull
xor
cwtl
adcl
xor
inc
int
stos
mov
mov
add
dec
sub
add
xchg
mull
jge
out
ret
stos
iret
add
inc
in
xor
inc
fnsave
push
add
jmp
decl
xor
popa
loop
pop
mov
pop
sub
fldenv
call
data16
push
mov
out
push
pusha
aam
xchg
lret
mov
add
notb
call
gs
sbb
jg
lea
sti
xchg
in
hlt
add
insl
xor
cld
jp
xchg
push
daa
xchg
push
lds
scas
addr16
leave
sub
or
push
repz
hlt
add
call
fisttpl
clc
jne
and
push
dec
jno
je
rclb
add
out
stos
jne
mov
pop
and
jge
adc
outsb
notl
ljmp
mov
jmp
inc
mov
xchg
jecxz
dec
outsl
testl
pop
dec
add
jge
mov
out
cwtl
incl
push
ret
add
xchg
sub
cwtl
jp
adc
divb
inc
jne
sub
and
das
mov
and
pop
lcall
sbb
and
call
ss
fwait
cmpsb
bound
nop
orb
iret
xchg
lcall
outsl
fwait
add
add
out
enter
jmp
test
mov
jg
out
aas
jno
sbb
daa
lret
push
shlb
push
repnz
ljmp
sbb
in
call
lahf
addr16
jmp
cmp
mov
outsl
add
repz
mov
ret
xor
mov
push
fwait
jle
jnp
mov
cwtl
jg
jno
xchg
and
xchg
sbb
push
in
sub
mov
and
flds
or
ljmp
inc
into
std
cmc
ret
sub
lea
jno
pushl
cld
adc
cltd
les
jno
add
and
jp
cmp
daa
xchg
jne
lea
sti
dec
or
jge
mov
jg
cltd
xlat
cmp
enter
call
mov
inc
push
sub
insb
testb
out
loope
test
ljmp
into
add
jg
into
ss
bound
xchg
add
xor
or
add
sti
add
add
xchg
pop
lock
rorl
enter
cwtl
add
mov
add
or
imul
jo
or
jo
sub
ret
pop
test
add
add
ds
mov
push
call
cmp
notb
xchg
ret
jne
sub
cld
cmp
push
lret
push
addl
or
ja
je
xor
pop
or
movsb
scas
dec
push
or
decb
or
test
out
mov
notl
pusha
mov
mov
pop
sbb
ljmp
jnp
cltd
aas
call
push
inc
or
adc
repnz
lods
aas
push
lahf
cli
je
xchg
dec
xchg
dec
mov
pop
xchg
imul
mov
adc
or
push
cli
adcl
sti
xchg
mov
and
adc
add
ss
add
and
imul
rolb
push
and
je
cld
inc
sub
push
xor
sbb
jns
addb
lock
jno
rolb
mov
cltd
jmp
mov
fnstsw
mov
mov
or
fwait
adc
stc
jp
xor
xor
jns
sbb
loope
or
movsl
mov
or
lea
cmp
es
notb
call
lds
inc
jmp
insl
cwtl
jno
add
mov
insl
or
sbb
jmp
push
hlt
test
pop
es
out
xor
data16
xchg
out
shlb
test
test
mov
call
std
jge
xchg
inc
jne
add
out
sti
cltd
cmp
clc
jb
jnp
cmpsb
scas
push
inc
jmp
add
sti
add
addr16
std
pop
jne
pop
pop
jne
or
clc
mov
iret
notb
or
push
test
idiv
and
sti
cmp
out
add
push
jnp
mov
scas
shlb
push
leave
mov
sub
arpl
decl
fbstp
add
dec
decl
lds
incl
or
mov
push
int
push
cmp
shlb
or
push
std
call
int3
popa
add
mov
cli
fimuls
inc
or
lcall
out
jne
ret
xchg
cmpsb
xchg
and
lcall
add
repnz
xchg
int3
and
xchg
js
cmc
sub
sbb
cmp
add
xlat
adc
cld
adc
cld
inc
shll
push
repnz
xchg
mov
xchg
cli
out
jp
hlt
adcl
out
push
push
push
sti
jle
xchg
incl
stc
das
ficoml
test
shlb
cmpl
mov
inc
jns
jl
pushf
popf
pop
jmp
adc
sub
jle
call
jmp
cli
add
cmp
xchg
xchg
jle
or
js
cwtl
data16
mov
mov
cmc
jle
loopne
xor
or
js
jl
mov
inc
jmp
fwait
daa
imul
mov
cli
out
call
push
cli
fisubs
test
mov
xchg
repnz
test
add
dec
pop
sbbb
and
inc
add
sbb
das
mov
in
sub
add
bound
add
clc
sarb
insb
sub
add
jb
lea
and
lahf
stc
rclb
fs
add
adc
sti
bound
ss
jmp
incl
pop
adc
jg
flds
add
out
add
add
xor
ljmp
lock
jne
jns
test
test
pop
or
idiv
out
xor
rorb
mov
addl
pop
push
fucomp
jg
mov
add
adc
xchg
aad
je
dec
mov
adc
fwait
mov
jae
push
loop
data16
hlt
or
imul
and
xchg
stos
xchg
ja
fsts
mov
sub
jae
cmp
add
and
xor
xor
xor
jnp
push
xor
fsub
sub
repnz
hlt
cli
add
jbe
mov
push
cli
add
xchg
jle
cmpb
adc
dec
mov
inc
movsl
mov
ret
imul
mov
pusha
jno
insb
inc
sub
orb
add
xchg
jae
gs
incl
fcoml
adcl
in
sub
fidivrl
inc
fldl
adc
add
js
js
sbb
add
out
outsb
call
adc
addl
sbb
jl
imull
pop
lea
mov
fwait
in
mov
pushl
sub
ljmp
adc
add
std
jp
mov
sub
xchg
inc
test
fisttpl
in
test
rclb
stc
test
cmp
hlt
into
pop
bound
sar
sbb
push
fnstsw
inc
or
jp
cmpsb
sub
jmp
movsl
int3
cli
cmp
iret
pop
jb
js
lods
insl
add
add
out
ljmp
sub
mov
jmp
out
bnd
mov
test
sarl
lea
jo
xchg
incb
addr16
pop
test
and
xchg
sub
xchg
lods
dec
push
xlat
out
xchg
add
incl
mov
push
movsb
mov
jecxz
lret
aas
push
pop
arpl
sub
xchg
les
cwtl
decl
pop
stc
jl
pop
stc
out
push
bound
call
pop
sub
adc
in
pop
sarb
sub
push
inc
jbe
popa
mov
outsl
add
adcl
push
mov
test
mov
mov
sti
push
push
test
lods
adc
push
mov
sti
in
add
mov
out
loopne
cwtl
xor
je
out
sub
xlat
or
add
adc
adc
clc
and
rol
dec
shrb
cli
sbb
mov
and
adc
hlt
jnp
call
sbb
xchg
inc
push
add
pop
mov
cs
pop
inc
jmp
push
add
inc
cmc
mov
cmc
testl
sbbl
test
xchg
xchg
into
inc
and
leave
cs
in
xor
imul
mov
push
cmc
sub
flds
test
sub
and
adc
nop
sub
ss
adc
xor
data16
repz
mov
add
imul
insl
test
call
dec
call
rcrl
mov
repz
xchg
lret
jmp
sub
add
out
repz
push
aaa
sbb
xchg
je
jb
inc
sbb
aaa
inc
or
jmp
repnz
ret
push
push
mov
mov
gs
div
dec
xchg
hlt
cmp
sti
push
sbb
adc
push
idiv
test
out
arpl
jmp
out
xor
out
and
out
adc
out
jecxz
testl
or
dec
sub
lock
sbb
fisubl
dec
lea
dec
sbb
lcall
push
jecxz
add
xchg
push
mov
test
mov
test
iret
jg
add
inc
notl
adcl
int
ljmp
repz
mov
ds
fdivrp
pushl
in
pop
hlt
mov
pop
dec
jecxz
add
leave
repz
es
rcll
cli
push
push
repnz
xor
imul
xchg
fwait
jbe
cli
xor
push
jo
jmp
sbb
fs
fmull
adc
xchg
pusha
dec
ljmp
add
jmp
jmp
sbb
cmpl
call
test
xchg
leave
push
outsb
leave
pop
mov
nop
mov
sarl
add
sub
mov
sub
jo
sbb
rorb
jg
fsts
adc
insb
pop
cmp
mov
push
xlat
cmp
ret
or
std
fld
mov
fisubs
jno
jmp
sbb
rorb
add
pop
jns
fs
xchg
xchg
cmp
jle
xchg
dec
pop
outsb
out
jne
lret
pop
xlat
jnp
jo
xlat
gs
or
inc
test
dec
and
inc
std
lahf
add
add
add
add
inc
push
bound
jns
push
jle
sti
gs
std
divb
fisubrs
jmp
xchg
add
out
idivl
movsb
jge
cmp
mov
cld
push
xchg
je
repnz
loopne
in
mov
loopne
dec
mov
dec
addb
pop
cld
div
add
add
ret
int3
fnstenv
xlat
imul
add
in
mov
mov
divb
in
cmpsb
jbe
cmpb
addb
or
dec
add
adc
add
mov
in
mov
cmpsl
add
ljmp
shlb
add
mov
push
lahf
xorl
repnz
decl
mov
adc
push
addr16
ljmp
sti
xchg
mov
jg
mov
jnp
outsb
fidivrs
call
mov
frstor
clc
inc
push
sbbl
in
loopne
jmp
xlat
fwait
add
shl
push
cld
jecxz
cli
push
add
dec
call
insl
ja
inc
pop
mov
adc
ljmp
jo
lret
insl
inc
and
dec
add
das
ret
mov
mov
clc
mov
xor
pop
or
lret
fs
ret
xchg
or
xlat
jae
ret
cmp
ret
test
mov
cmpsb
add
sti
mov
mov
aam
jnp
imul
stc
or
sub
or
or
inc
inc
nop
push
lcall
jno
push
bound
in
jne
add
cmp
jmp
xor
lcall
add
xchg
mov
mov
movsb
sbb
jmp
add
call
testb
jb
mov
call
fisttpl
sbb
xor
lods
mov
popa
add
jb
dec
insb
sub
xchg
add
out
cmp
and
hlt
fiaddl
inc
jmp
scas
decl
dec
dec
lea
fstl
js
rorb
scas
add
fadds
lea
dec
mov
dec
dec
mov
icebp
mov
add
add
push
les
push
enter
pop
divl
pop
push
fists
test
or
test
add
subl
add
dec
jge
aam
cld
mov
push
arpl
sbb
push
dec
push
xor
sbb
mov
xchg
lret
mov
cli
inc
inc
jp
jbe
js
jno
mov
repnz
lea
dec
push
mov
jbe
loop
pop
incl
mov
out
mov
pushl
shl
cli
and
lea
in
xor
xchg
jno
decl
imul
or
mov
lock
jno
aas
lret
loop
call
in
ljmp
out
test
jge
jnp
or
cli
jns
insb
movsb
jnp
or
rcrb
and
jns
test
dec
add
cmp
insb
mov
insb
ja
adc
cmpsb
push
sarl
outsl
pop
and
mov
add
or
leave
pop
pop
movsl
jle
outsb
push
bound
outsl
into
ret
dec
adc
in
push
mov
xor
mov
add
inc
imul
ret
out
jb
dec
xchg
imul
dec
std
sti
cwtl
addr16
xchg
mov
ret
shll
sar
cmp
inc
lds
repz
jb
sar
sbb
inc
leave
jmp
dec
cmpsb
movsl
add
or
push
iret
pop
bound
push
adc
sti
outsb
popa
cmp
aas
jmp
add
pop
les
sbb
add
cmp
sti
addr16
aas
add
push
jmp
clc
mov
loopne
call
in
mov
fadds
bound
jo
pop
jo
xchg
add
push
push
lea
mov
add
jp
pushf
add
rorb
in
mov
add
in
push
push
out
sbb
xor
add
xorl
lock
pushf
add
inc
clc
ret
cld
dec
pushl
add
xor
mov
shrl
adc
sbb
cli
pushf
arpl
mov
pop
iret
cli
sbb
or
das
add
jno
mov
inc
into
sub
sti
and
mov
addr16
cmp
ds
sar
pushl
mov
mov
rorl
hlt
push
sti
outsb
adc
jno
dec
dec
call
or
jge
insb
inc
mov
notl
cmp
pop
jle
imul
or
lods
in
divl
je
loop
jp
hlt
cmc
xorb
jmp
dec
jl
addl
xchg
inc
fs
gs
imul
and
jae
mov
shll
aas
push
adc
push
or
shr
in
mov
stos
jae
cmc
gs
push
jecxz
jns
sbb
jnp
mov
imul
jae
ret
js
clc
dec
outsb
and
xchg
rolb
dec
push
sbb
xchg
iret
pcmpgtb
mov
inc
xor
data16
es
std
push
push
sbb
fmul
jmp
stos
popa
repnz
bound
mov
xchg
or
pop
jae
inc
adc
dec
xor
mov
cltd
insl
sti
scas
sub
cmpsb
add
fwait
add
call
jecxz
mov
sub
dec
andb
inc
dec
push
cmp
lahf
ljmp
pop
jno
push
pop
mov
in
je
mov
lea
dec
outsl
mov
lock
mov
clc
fdivr
incl
push
not
inc
or
or
pop
dec
lea
idiv
mov
ja
call
jae
dec
xor
xor
movb
clc
add
divb
ret
pop
out
sub
pop
out
xchg
xor
dec
mov
outsl
jae
cmp
xor
ror
pop
inc
mov
sub
movsl
or
inc
call
adc
roll
lahf
xor
fs
lret
out
loopne
add
jns
movsl
xchg
push
hlt
call
ds
icebp
mov
push
push
cltd
jno
jl
jns
rcr
adc
lea
dec
mov
cmp
jnp
in
jle
insb
add
ret
insl
pop
insl
adc
mov
int3
pop
pop
pop
popa
orb
add
mov
xchg
dec
js
add
mov
pop
dec
or
jo
aas
xacquire
adc
jmp
testl
add
ror
outsl
lret
add
outsb
cmp
adc
add
add
add
loopne
pop
movsb
stos
ret
sahf
gs
jnp
xor
xchg
pop
outsl
or
add
jmp
insl
add
cmp
sti
jmp
inc
jle
lds
sar
lret
lods
xchg
adc
fldl
mov
mov
push
add
insl
mov
adc
add
rcll
call
into
inc
aas
jmp
xchg
or
sub
orl
insl
add
pusha
mov
call
imul
pusha
scas
and
add
xlat
cwtl
cwtl
add
and
lret
cwtl
mov
bound
aad
pop
dec
mov
add
lds
pop
pusha
les
fisttpll
add
sbb
push
mov
aad
and
addb
dec
push
push
or
adc
add
add
add
dec
push
gs
call
or
inc
cmp
and
push
decl
add
out
add
xchg
push
jmp
add
jp
push
and
dec
push
xchg
cld
sbbl
out
mov
xor
iret
push
dec
and
hlt
sbb
aam
pop
lds
inc
jno
inc
je
fmulp
and
and
sti
hlt
sbb
ds
test
je
jne
out
addl
cli
jne
and
fsubp
and
ljmp
mov
push
jmp
add
ds
or
inc
sub
pop
divb
insl
cmp
mov
xchg
or
je
push
sbb
inc
xchg
add
js
daa
mov
cmc
jb
daa
gs
xchg
sbb
cli
cmp
add
sbb
jae
sub
stos
mov
insl
data16
inc
adcb
mov
dec
cld
mov
hlt
or
repz
std
in
lcall
pop
outsl
push
jb
data16
iret
inc
dec
fcoms
call
mov
push
insb
mov
push
fdivs
scas
or
call
push
gs
mov
test
fisubs
sbb
cmp
or
popa
inc
jne
imul
daa
pop
cmp
mov
mov
lcall
es
pop
jmp
inc
or
add
std
mov
add
in
hlt
sti
out
mov
push
scas
call
adc
test
inc
testb
imul
clc
pop
inc
lret
cld
popa
add
call
imul
pop
or
testb
and
pop
int3
outsl
or
lret
sbb
ljmp
xor
imul
and
je
mov
ss
pop
push
mov
in
add
cld
call
mov
mov
xchg
pop
imul
mov
push
push
call
cmc
xchg
lock
repnz
add
mov
insl
jp
pop
sub
shr
out
mov
inc
jl
cmp
test
sti
aas
lcall
repnz
cmp
mov
fs
cli
ss
mov
mov
das
xor
add
sarb
pop
cmp
lret
xchg
lahf
add
cwtl
imul
add
jl
adc
jnp
pop
mov
mov
fcom
andps
pop
pop
clc
std
mov
fistl
mov
add
dec
in
out
int
fnsave
psubw
or
into
out
insb
push
add
repnz
call
paddb
xor
push
out
push
push
dec
add
ljmp
aad
jnp
pusha
shrl
add
shlb
cmc
sti
fnstenv
pop
dec
jb
mov
imul
pusha
mov
call
insl
xor
test
or
jmp
flds
jmp
or
mov
jmp
jb
mov
add
mov
jb
mov
addb
jb
aaa
push
insl
add
jmp
add
add
mov
inc
dec
jae
add
fnstenv
addb
or
lea
lods
test
fadds
call
jmp
inc
adc
add
lcall
rorb
mov
inc
les
pop
dec
not
or
add
add
push
add
pop
in
cld
in
iret
push
test
notb
int
jae
testl
cmp
in
cld
sub
test
pop
pushl
testl
push
adc
popa
cmpsl
incl
pop
push
clc
in
popa
test
arpl
pop
flds
jmp
ljmp
jge
push
test
out
in
sti
repnz
adc
mov
push
xchg
int3
xchg
mov
fs
jne
dec
lea
incl
hlt
popf
fs
ss
sti
sbb
jno
sub
ds
loopne
pushf
push
pop
inc
lds
add
lock
icebp
add
mov
testl
mov
fldenv
sub
pop
push
jecxz
cld
les
and
loopne
mov
mov
fs
pop
sbb
mov
sbb
inc
inc
insl
add
dec
addl
cld
add
les
jne
clc
adc
jne
ret
cmc
lahf
xchg
or
push
mov
inc
rorl
xchg
cmpl
vprotq
jb
dec
jb
mov
insb
ficoml
push
mov
push
sti
inc
jae
add
mov
jmp
leave
sub
test
call
mov
scas
mov
xchg
add
push
pop
clc
pop
mulb
rclb
fs
mov
add
repz
cmp
add
mov
add
jno
insb
scas
mov
mov
mov
fdivs
mov
mov
add
in
xchg
enter
xchg
mov
cmp
fimuls
mov
add
pop
sti
decl
add
add
dec
jecxz
mov
decl
fstpl
lea
cwtl
icebp
mov
dec
dec
push
pfsub
cmp
pop
std
dec
cld
and
jmp
cld
push
mov
pop
sti
inc
daa
jmp
sti
push
aas
push
mov
jmp
movsl
jmp
insl
add
jno
pop
sti
fsts
or
mov
aad
jg
imul
sbb
xchg
push
sahf
cmp
out
data16
lcall
aam
ret
mov
aas
mov
jno
mov
das
add
hlt
mov
popa
pop
mov
lahf
jno
mov
add
add
push
pop
sub
roll
in
jge
pop
sbb
mov
mov
negl
add
mov
xchg
pop
sub
push
data16
add
in
scas
add
add
test
add
cld
data16
push
decb
stos
int
imul
mov
dec
into
lods
pop
outsl
push
fs
in
int
fwait
in
add
jb
iret
pop
jb
xchg
insl
jg
jo
pop
das
test
pop
or
and
push
imul
jne
sti
stos
xchg
or
fistpll
push
pop
cmpl
mov
add
jmp
in
cmp
into
pop
sti
insl
xor
test
insb
add
ljmp
jae
push
int
negb
pushf
jmp
negl
fiadds
add
add
jb
xor
add
add
add
jbe
inc
pop
mov
mov
repnz
adc
test
pop
add
int3
sub
push
xchg
dec
push
nop
inc
pop
cmp
push
notl
enter
push
addl
jl
clc
test
jmp
test
jge
add
add
les
add
shlb
sti
pop
addl
mov
add
add
jno
clc
sbb
adc
add
ret
and
iret
mov
jno
addr16
add
mov
inc
scas
mov
data16
decl
outsb
add
shlb
mov
outsl
add
addr16
decl
pop
mov
add
mov
jno
shlb
cmp
addr16
add
call
in
and
pop
adc
cmc
or
cld
loop
cwtl
jno
decl
jmp
add
add
pop
add
sbb
mov
lods
shl
out
sub
inc
loop
sub
jmp
jnp
add
mov
in
arpl
xchg
les
mov
cmp
call
enter
pop
sub
push
ja
jno
insb
mov
jmp
pop
test
lods
sbb
mov
stos
xor
ljmp
xlat
in
lds
add
mov
push
xchg
daa
pop
test
mov
in
push
mov
int3
push
out
pop
adc
xchg
sub
rorb
jo
add
cmp
add
xchg
push
je
dec
jp
xchg
push
pop
sbb
push
sti
jmp
loop
xchg
imul
jl
out
jp
icebp
lds
inc
imul
je
xchg
mov
inc
or
jb
xchg
jns
or
sti
push
and
sub
pop
add
pop
sub
enter
xchg
pop
mov
xchg
and
mov
in
sbbl
sub
mov
mov
sbb
sti
adcb
jne
je
add
out
lahf
cld
decl
jmp
jle
add
out
add
add
nop
mov
mov
pop
mov
incl
pusha
sti
decl
jmp
enter
outsl
xor
jno
into
and
mov
js
cli
push
push
cli
sbb
jno
shl
int3
jg
mov
push
push
cltd
sub
jle
mov
jne
jg
add
addr16
incw
imul
cs
and
inc
lods
xlat
and
jno
mov
xchg
push
lea
hlt
out
sti
push
xchg
mov
push
sub
das
bound
stc
dec
inc
jbe
inc
jmp
movsl
jmp
add
mov
jg
pop
mov
push
stos
xchg
mov
rolb
inc
jmp
add
add
loopne
push
lret
push
cmp
pop
xchg
push
pop
push
adc
add
lea
inc
push
jno
ss
push
xor
jno
insb
ret
pop
cmp
sub
pop
sbb
out
jno
jmp
orb
rclb
xorl
jle
jmp
mov
adc
xor
pop
add
andl
callw
and
jne
add
mov
sti
out
sbb
call
int
add
ret
je
dec
xchg
sti
lret
and
fisttps
gs
dec
sti
jmp
in
add
jb
mov
out
idivl
lret
dec
nop
pop
jb
add
test
add
bound
jge
add
push
cmpsl
xchg
pop
test
add
in
out
pop
mov
add
mov
enter
movsb
jnp
cld
out
sub
adc
xchg
xchg
add
pop
xorl
rcll
and
dec
andl
lea
mov
pop
add
call
roll
or
cld
mov
dec
mov
xchg
dec
mov
add
and
fcoml
push
mov
fcmovu
and
addr16
xchg
jno
jmp
jle
add
cli
mov
mov
mov
imul
jne
loop
and
mov
fmuls
mov
cmp
jecxz
pushl
cmp
jno
xchg
xchg
cld
or
sub
jbe
xchg
add
incl
inc
daa
call
ljmp
mov
or
push
in
jae
add
call
jp
outsb
add
out
xor
jno
mov
aam
sbb
adc
int3
div
ret
sti
xchg
stc
fiaddl
jno
insl
pop
imul
add
jnp
jmp
rolb
call
dec
shr
aam
and
xchg
add
mov
jno
sbb
push
movsl
and
lods
mov
imul
adc
sbb
lret
ret
add
aad
push
and
and
pop
mov
cmp
test
rorl
inc
je
xchg
pop
imul
hlt
out
testl
adc
xchg
cli
loope
adc
vcvtdq2pd
les
in
jmp
add
icebp
out
mov
in
and
rcr
or
jl
outsb
addl
or
les
dec
js
push
pop
pop
push
mov
xchg
mov
in
mov
aaa
add
decl
dec
cmp
mov
add
addb
ja
push
jne
hlt
stos
mov
dec
movl
dec
sti
decl
lcall
add
les
std
aas
xchg
push
push
das
sub
cmp
sti
test
sub
push
xchg
arpl
adc
lcall
in
push
in
push
sti
add
orb
push
push
aad
cmp
jb
negl
add
jno
outsb
add
push
adc
sbb
neg
outsl
je
mov
mov
lock
incl
jno
xlat
cli
jno
call
faddl
sti
mov
out
enter
faddl
sti
jbe
adc
sti
sti
stos
add
pop
mov
shl
scas
xchg
mov
or
mov
cmp
xor
xchg
mov
stc
repz
mov
roll
pop
aaa
add
shrl
movsb
jne
test
lods
mov
dec
cld
hlt
add
lock
pushf
mov
into
dec
aam
je
call
jl
fs
dec
jp
rolb
push
dec
cli
push
fldcw
add
ja
add
je
xchg
dec
ficoml
lahf
jmp
jle
add
inc
mov
movsb
int3
inc
data16
mov
dec
cmp
dec
jle
jno
jne
in
mov
xor
add
jmp
ja
add
mov
push
into
jge
jmp
sbb
add
sub
test
add
sbbl
add
pusha
mov
add
jo
push
add
pusha
mov
mov
jle
aad
decl
inc
jl
inc
jb
add
enter
cmp
test
add
push
jnp
dec
lea
sbb
push
xchg
mov
mov
sbb
add
mov
jno
add
add
add
fimull
pop
sbb
pushl
xchg
addb
ja
enter
cmpb
jle
add
add
ret
js
add
mov
push
mov
call
xchg
mov
inc
clc
or
mov
mov
mov
in
lahf
push
sti
dec
call
and
push
jl
cmp
dec
sti
add
outsb
add
push
mov
jno
jbe
or
add
cld
mulb
daa
sti
jl
out
aas
jno
inc
jne
insl
dec
jne
fmul
andl
xorb
dec
arpl
push
push
pop
dec
mov
jle
sahf
ret
mov
xchg
push
out
push
dec
test
shrb
aad
rorb
leave
pop
jnp
add
fcoms
mov
jp
sub
mov
jmp
dec
sub
or
ret
jae
xor
scas
testb
test
fs
sub
enter
mov
inc
dec
dec
inc
inc
mov
inc
xor
in
add
add
clc
es
in
aas
ljmp
lret
add
movsb
push
push
ret
cld
jno
jge
sub
sti
out
pusha
call
adc
and
cmc
fld
fistl
add
jmp
jb
dec
lea
fistl
aam
push
mov
repnz
add
jb
dec
pop
mov
add
sbbb
pop
mov
add
jmp
add
lea
sti
ss
aas
call
insl
sub
jge
xchg
cmpsl
ret
mov
jb
sti
add
cmp
push
xor
mov
jg
call
mov
dec
jp
das
mov
push
fnstsw
decl
mov
mov
ret
dec
inc
mov
mov
ljmp
xchg
xor
xor
add
idiv
jg
je
or
push
mov
lock
test
jmp
popaw
jmp
inc
jae
jl
lret
add
loop
fwait
mov
add
jno
js
lock
ljmp
outsl
imull
stos
fcmovnb
jecxz
imul
fwait
clc
addr16
pop
dec
pop
inc
xor
dec
sub
push
jl
inc
dec
inc
or
insb
add
add
jl
adc
add
jl
sub
add
jl
sbb
fiaddl
pop
pop
ljmp
push
jg
sub
add
jno
pop
sbb
push
decl
add
add
jae
rcrb
add
add
jae
mov
add
roll
and
shll
jl
dec
insb
rorb
cld
scas
jae
push
cmp
mov
mov
mov
ret
push
jl
cli
cmc
mov
adc
dec
mov
inc
pop
mov
mov
out
jno
les
mov
call
add
mov
insb
dec
inc
sti
push
loop
inc
adc
jb
inc
sbb
push
xor
mov
jmp
and
test
test
jbe
call
movsl
cmp
insl
roll
add
jne
or
add
jmp
xchg
mov
jle
call
bound
into
aas
sti
jo
cmp
sub
add
lret
add
idiv
dec
les
and
leave
dec
lea
je
inc
je
test
cmp
leave
add
xor
push
add
jbe
pop
adc
mov
mov
nop
test
dec
jge
cmpb
je
mov
clc
mov
add
add
stos
push
stc
lcall
dec
or
jbe
call
pop
ret
jae
inc
jle
xor
mov
inc
jp
inc
leave
cwtl
jb
frndint
inc
sti
and
leave
jmp
jae
ret
xor
cli
add
dec
adc
in
call
dec
sti
xchg
out
aas
jno
mov
ja
jbe
add
inc
jne
inc
xchg
pop
imul
xchg
pushl
sbb
sub
push
cmp
pushf
sbbl
inc
pop
cmpsl
loop
mov
jl
inc
test
add
in
enter
mov
jno,pt
es
sub
pusha
mov
cmp
pop
scas
cmc
xchg
lds
add
js
xor
mov
test
inc
inc
mov
dec
add
repz
jle
push
jns
in
mov
and
jno
stos
jl
in
adc
rcrb
mov
mov
js
in
fistpl
add
add
mov
jno
jmp
inc
or
ljmp
and
jb
add
cmp
dec
add
test
testb
call
cwtl
decl
mov
dec
jb
loopne
add
test
and
repz
sti
out
adc
call
jb
data16
lods
cmc
mov
cld
sub
inc
jmp
mov
insl
add
jb
sbb
and
jne
add
xchg
cmpsl
add
add
add
fs
inc
sarl
enter
je
jg
fcos
decl
hlt
sbb
movhps
stc
xor
mov
xor
jg
outsl
add
xor
add
js
pop
test
in
mov
mov
push
mov
xchg
sarl
sub
jnp
xor
inc
and
les
mov
mov
out
lods
dec
fisttpl
in
and
jl
sti
jne
xchg
ffreep
and
sub
cmp
in
or
push
pushl
and
in
push
pushl
mov
inc
push
xor
std
jle
push
push
inc
xchg
inc
xchg
xor
out
xor
in
lock
or
inc
aam
jle
sub
sti
ss
ss
popf
add
in
pop
lock
ret
xchg
nop
mov
fmuls
jno
jle
hlt
mov
push
mov
xchg
out
jge
out
pushl
adc
stos
cmp
add
or
enter
add
pop
enter
cld
xchg
loopne
cmp
jge
hlt
cld
fs
frstor
sbb
mov
xchg
inc
add
negl
add
cmc
sti
pop
jmp
xor
sbb
mov
sbb
jb
sti
std
push
or
std
adc
je
leave
jno
ljmp
stc
dec
out
inc
adc
xor
push
bound
sub
out
cli
cmpsl
outsb
xor
inc
lds
add
sti
mulb
in
add
mov
and
lcall
add
and
xchg
ret
add
mov
sub
sbb
push
aas
xchg
mov
decl
in
aaa
sbb
add
add
inc
cmp
icebp
lea
aas
jecxz
fadds
add
or
add
lcall
inc
sti
orb
adc
rorl
shlb
pop
notb
int
je
sahf
pop
push
lea
hlt
dec
push
jno
add
lods
shl
in
ds
outsb
daa
and
addr16
inc
repnz
add
sub
xor
dec
add
ja
jno
jmp
daa
xchg
inc
sti
fisubl
inc
jne
rolb
mov
aad
pop
mov
cmpsl
sub
jae
decl
mov
inc
cltd
cltd
iret
cli
test
push
inc
jno
inc
or
sbb
add
pop
sti
inc
mov
adc
mov
insl
and
add
or
jmp
or
add
add
mov
jmp
xchg
in
mov
add
add
nop
test
js
add
sub
stos
mov
add
jmp
fdivrl
or
add
jecxz
jno
insb
mov
jno
inc
adc
sub
mov
mov
xor
out
jno
cli
sbb
adc
test
jmp
lds
and
sub
shr
sbb
jmp
pop
mov
add
and
inc
pop
and
sti
sbb
mov
call
lcall
jmp
inc
add
jmp
loope
mov
xor
cmp
test
xor
jo
sub
adc
test
add
add
call
inc
xlat
push
mov
jnp
std
das
testb
shl
mov
decl
clc
out
js
cmp
push
push
iret
or
shrb
inc
rorb
dec
repz
pop
mov
add
push
add
mov
orl
or
idiv
fdivr
insl
add
xorb
call
dec
jmp
jmp
jge
cmc
je
and
adc
jno
decl
pop
mov
jbe
inc
adc
hlt
call
lret
mov
je,pt
push
ret
outsb
rorb
testb
mov
cmp
shrl
push
in
aas
ret
lods
popa
add
jno
cmp
test
push
cmp
out
sub
sti
jl
adc
jno
mov
leave
xor
jmp
xor
dec
add
ja
jno
jmp
add
adc
cmp
mov
adc
xor
fsubrl
xlat
pop
inc
and
jge
out
adcb
push
fisttps
add
pop
bnd
xor
inc
lea
jmp
jl
push
jmp
mov
push
fiaddl
jno
outsl
sar
sub
add
lea
jmp
jl
and
add
push
xchg
sbb
outsl
shl
inc
outsl
jno
ret
mov
cmpl
mov
cld
jmp
in
js
add
mov
mov
mov
mov
call
aad
mov
and
js
lea
bound
pop
mov
inc
hlt
mov
call
push
mov
jmp
js
ss
add
mov
mov
paddsb
call
dec
aas
popf
jmp
cmp
and
call
inc
scas
mov
scas
addl
xchg
add
mov
out
mov
pop
mov
add
rolw
mov
add
jnp
add
mov
lods
aas
xchg
add
mov
mov
out
add
xchg
outsl
mov
add
inc
mov
bound
push
lea
add
outsl
mov
jno
xchg
xchg
aas
pop
jno
mov
jnp
sbb
popa
call
xchg
incl
cmpxchg
add
xchg
roll
sbb
fldenv
jmp
fistpl
shr
add
mov
pop
add
xchg
cmp
mov
jmp
jecxz
mov
mov
enter
xchg
lock
jno
mov
jnp
xchg
jmp
lods
sub
jno
outsl
mov
sahf
cs
mov
jno
sub
jmp
jnp
add
movsb
xor
jno
outsl
mov
push
orl
add
popf
jmp
out
add
ja
add
cmpsb
pop
rcrl
lock
push
or
daa
add
popf
add
ret
call
add
and
sbb
insw
add
mov
mov
in
ret
add
or
inc
icebp
sub
addr16
push
add
mov
mov
ja
add
cli
mov
inc
xchg
mov
movsb
pusha
push
bound
adc
inc
add
ret
mov
ja
rcrl
mov
imul
pusha
xor
mov
add
inc
push
xor
lock
jns
push
cmp
mov
mov
dec
and
cmp
cwtl
mov
add
dec
mov
add
and
out
dec
sub
xchg
out
add
pop
mov
mov
add
in
and
add
inc
sub
mov
inc
cmp
dec
xchg
add
mov
lock
pop
mov
mov
mov
out
add
dec
movsl
shrb
jno
addb
xchg
popa
enter
popf
mov
xchg
adc
popf
mov
ja
rcrl
jmp
pop
leave
mov
xor
decl
mov
or
jno
xchg
sarl
jno
popf
mov
jmp
jecxz
mov
dec
call
mov
lcall
ret
xchg
mov
mov
lods
add
cmp
jmp
fisubl
mov
jno
outsl
mov
add
or
dec
add
popf
jmp
xor
add
jns
mov
jno
outsl
mov
mov
ret
mov
pusha
mov
call
jnp
icebp
call
test
jno
pop
mov
jno
dec
jge
lcall
stc
ret
pop
insb
test
jmp
mov
jns
lret
add
cmp
ret
je
lods
movsb
push
push
subps
jno
js
push
sub
jg
outsb
jnp
jmp
es
imul
and
gs
bound
fs
cmpsb
and
mov
inc
and
or
lahf
rorb
lahf
push
sbb
ficoml
negb
lahf
mov
sub
cmpsl
push
dec
das
test
cmpsb
ds
or
mov
leave
fildl
in
fwait
loope
and
dec
push
aas
jg
and
xchg
mov
cli
arpl
mov
lods
inc
and
xor
push
mov
popa
add
pop
sub
ljmp
out
and
rcll
test
mov
cld
call
cmpsl
jmp
pushl
ds
cmpsb
fsubr
and
cmc
dec
ret
push
test
lcall
sti
pcmpeqb
jl
jns
jp
sbb
xor
repz
sbb
add
test
xchg
stc
jne
mov
mov
inc
push
or
nop
pushl
add
xor
into
dec
mov
jno
add
xchg
cmp
inc
popf
mov
mov
rorl
mov
test
sbb
mov
cwtl
imul
xchg
dec
sub
cmp
cli
ficomps
in
pop
xor
in
add
add
lods
xchg
imul
call
add
jnp
xor
mull
rcrb
scas
shlb
add
hlt
aas
sbb
out
lods
mov
mov
mov
hlt
xor
lods
mov
add
pop
loopne
jno
lods
das
out
negl
shrl
daa
sarb
xchg
in
call
imull
xor
mov
mov
in
stos
cmp
add
add
ljmp
add
je
and
mov
add
mov
jmp
jno
jne
insl
cmp
push
jge
ret
je
mov
cmpl
je
popf
mov
sub
insb
sub
dec
call
pusha
test
out
adc
adc
xchg
jb
loopne
cli
subl
add
mov
jl
add
jae
lock
jb
jge
or
test
into
pop
adcb
inc
hlt
xor
decl
stos
jl
mov
add
jl
mov
xchg
mov
add
aad
jmp
add
aas
push
inc
hlt
clc
or
push
jp
mov
test
push
bound
add
add
inc
test
je
sbb
jno
sub
add
jne
adc
out
push
sub
hlt
or
sti
movsb
inc
sbb
pusha
cmp
or
push
sar
mov
sbb
enter
push
ljmp
incl
and
aad
jns
ret
sbb
cli
pop
add
inc
jno
inc
or
test
mov
mov
push
push
movsb
mov
shll
add
mov
pop
sbb
add
add
and
add
add
xor
add
jle
inc
fldt
jns
sub
jl
sub
push
jne
pusha
add
mov
and
inc
sub
add
in
add
ss
or
jge
lret
not
addr16
jp
add
subb
aad
es
cmp
cmp
cltd
dec
or
mov
and
sti
push
icebp
ds
jne
icebp
mov
push
xchg
jmp
insl
add
rcl
sti
into
jbe
cli
cmp
sbb
pop
cmp
or
and
in
mov
add
insl
xchg
fidivrs
sbb
mov
and
sti
pop
test
iret
push
dec
and
idiv
and
cmc
incl
pushl
add
mov
dec
test
out
js
inc
shll
subl
dec
push
mov
dec
or
imul
and
sbb
cli
mov
pop
test
cmp
outsl
roll
aam
mov
cmp
sti
out
add
xor
mov
mov
push
divl
jno
jnp
lea
popf
cmp
mov
pop
xor
inc
jae
idivb
sub
inc
jns
mov
repnz
dec
sbb
inc
xor
and
sub
insl
push
sub
mov
sbb
jo
xchg
lods
inc
je
stos
sub
test
mov
sub
add
shrl
out
inc
call
es
and
cld
push
push
push
cmpsl
add
push
sbb
cmpsb
or
inc
push
sbb
insl
stos
out
xchg
mull
dec
xchg
rcrl
cmpsb
sub
or
jo
lea
push
jp
out
test
shlb
roll
mov
flds
push
add
and
mov
jnp
mov
cmp
test
cmc
loopne
mov
adc
fcoms
and
incl
add
pushf
test
pop
mov
xchg
push
out
or
pop
pop
xchg
lock
mov
roll
pop
push
adc
adc
adc
or
jge
adc
andl
pop
jle
jae
xor
mov
incl
mov
xor
sub
aad
int
call
pop
sar
xor
int
adc
cld
testb
add
mov
xor
add
jl
cwtl
out
insb
test
sti
test
cmp
add
jmp
dec
inc
in
pop
inc
in
jo
inc
sti
test
in
divb
in
lock
out
je
inc
sti
test
in
adc
fwait
pop
idiv
push
shll
sbb
add
add
or
adc
mov
sub
jl
out
das
stos
jle
sub
movb
gs
xchg
jnp
daa
and
cmc
out
cmp
imul
cld
arpl
push
hlt
imul
jle
daa
mov
and
in
jmp
and
push
cltd
pand
and
add
push
xor
stos
mull
sbb
jns
mov
aam
in
mov
dec
cmp
sti
inc
mov
lsl
xchg
lock
test
push
ja
call
aam
lds
xchg
rcrb
xchg
bound
sbb
mov
scas
mov
lock
test
mov
xchg
sbb
adc
push
mov
jmp
sarb
mov
or
rolb
jbe
sbb
int
int3
rorl
xchg
jle
xchg
cli
imul
es
sbb
jp
jns
xchg
cmp
lea
jle
adc
jae
jne
dec
test
iret
add
jno
stc
push
adcl
dec
xchg
dec
xchg
and
add
call
jb
cmp
cmp
out
lea
bnd
scas
push
idivb
test
ja
mov
xlat
push
lods
out
in
sti
add
test
push
ret
daa
jns
add
sbb
adc
add
call
pop
les
js
add
pop
jmp
mov
rolb
ret
fisttpll
dec
push
imul
lea
std
incl
sub
mov
pop
push
add
ficoms
dec
cmp
xor
mov
mov
adc
cld
mov
cmp
pushl
push
adc
fistpl
mov
push
test
jno
incl
jns
inc
jne
mov
or
jno
daa
mov
daa
call
push
push
jne
mov
incl
gs
dec
and
jne
into
imul
jge
incl
lahf
div
ja
imul
adc
jecxz
sti
cmpsb
jne,pt
outsl
push
adc
add
cmpb
inc
pop
or
mov
faddl
pop
shr
dec
pop
cmp
test
mov
jbe
sbb
leave
adc
sbb
in
xchg
clc
jle
outsl
mov
inc
in
add
imul
mov
test
idivb
call
out
mov
jo
jmp
mov
pop
call
stos
repz
jmp
notb
ljmp
add
aas
jmp
cmp
jmp
call
or
jae
xchg
in
jae
mov
out
xchg
in
pop
std
mov
xchg
jge
push
hlt
dec
pop
clc
jge
adc
jb
cmc
aaa
xchg
in
jmp
mov
xchg
add
add
sbb
sti
mov
mov
sti
mov
or
adc
sbb
xchg
jmp
cmc
xor
test
mov
or
add
data16
jbe
add
sub
sub
add
or
jl
or
add
ljmp
adc
jbe
fs
inc
dec
or
add
call
movsb
sbb
call
jmp
add
push
shrb
dec
movsl
sbb
lock
adc
call
je
std
mov
lock
sti
nop
inc
dec
push
sbb
cmc
out
dec
fwait
pop
sbb
es
mov
out
test
jge
test
push
add
rcrl
sti
test
idivl
jno
movsl
fildll
and
daa
xchg
xor
jmp
sbb
inc
shll
out
xchg
xchg
jmp
adc
data16
xchg
sti
xchg
adc
pop
sub
cmp
xchg
lock
mov
jo
rcr
in
xor
jmp
inc
mov
jp
push
add
sub
sbb
out
jno
mov
and
call
cli
jmp
add
iret
inc
sub
addb
mov
data16
jmp
and
add
add
add
add
sbb
jbe
bound
xchg
jno
jmp
fsubrp
inc
push
mov
add
add
lock
inc
jo
add
jg
loope
gs
arpl
xor
mov
sub
jge
call
leave
call
jb
xchg
sbb
bound
sti
xchg
mov
jo
pushf
add
jb
cmpb
push
pop
inc
cmp
jmp
add
xchg
push
add
add
je
repz
add
jb
je
repz
add
jb
jne
enter
sub
or
add
aad
sahf
sbb
in
xor
mov
push
mov
dec
gs
lods
mov
adc
mov
divb
cmc
adc
or
sti
test
jo
andl
add
fdivrs
cld
int3
push
test
leave
std
decl
add
push
scas
pop
enter
push
aaa
outsl
adc
cld
shl
add
mov
outsl
add
dec
pop
jp
mov
je
jno
ljmp
lea
sti
dec
repz
out
cli
fsubrl
push
jne
out
mov
call
ss
idiv
movsb
push
daa
adc
mov
xchg
add
decl
in
inc
pushl
sbb
addr16
push
add
xor
lret
mov
and
jg
daa
mov
enter
repz
adc
jmp
daa
pushl
dec
pop
add
mov
dec
add
mov
lods
or
add
add
add
ret
push
rolb
adc
mov
lods
call
pushf
jecxz
sbb
jno
jmp
lods
sbb
jae
push
out
fs
jmp
lods
clc
sbb
add
movsb
into
add
sbb
push
mov
adc
jno
jmp
xor
scas
sub
int
jmp
xchg
add
cmpl
movsb
jmp
xchg
add
jmp
jb
leave
bound
pop
callw
setae
cli
cld
xchg
aas
jmp
mov
out
inc
insl
add
jb
test
cli
repnz
psubq
jb
cltd
xchg
rcrb
add
xchg
cmpb
xchg
cmp
call
idiv
call
xchg
sbb
push
cmc
or
sti
add
xor
pop
test
xor
cwtl
pop
call
add
aad
cmc
ljmp
call
add
in
addb
inc
and
add
add
stc
xorl
call
add
pop
lret
adc
xor
add
lock
pop
mov
add
adcb
testb
push
sti
idiv
movq
ror
out
jno
adc
and
adc
icebp
xchg
call
cmp
daa
jg
sti
scas
push
cli
cmpsl
xchg
push
into
cli
call
outsl
hlt
add
mov
xchg
mov
sub
cmp
adc
pop
adc
jae
push
jno
push
dec
ss
sbb
xchg
call
lods
add
or
xchg
push
add
cli
ljmp
hlt
idivl
pop
mov
call
mov
outsl
mov
call
jg
add
add
stos
pop
orb
jb
out
jae
incl
loop
xchg
push
jo
and
popf
js
push
clc
lods
adc
aam
leave
jb
out
jae
es
mov
ja
sub
lods
add
jb
out
jae
cmpsb
hlt
divb
push
out
mov
in
mov
fsubs
add
jb
lea
add
add
test
mov
pop
sti
jb
addl
lock
repnz
out
jg
test
cli
hlt
sbb
aas
jmp
xor
shr
das
pop
sbb
xor
add
in
repnz
movzbl
push
std
xor
test
add
lods
xchg
sub
pop
sub
pop
pop
inc
pop
adc
jl
out
gs
loope
incl
popa
add
xlat
call
decl
dec
repz
ljmp
jae
imul
jo
ds
test
jp
test
jnp
cmp
jp
test
jae
jne
cld
lahf
dec
repz
decl
adc
jae
xor
popa
add
std
sub
pusha
dec
clc
incl
inc
add
or
mov
incl
sbb
adc
cld
cmp
xorl
jb
movd
hlt
push
test
aam
push
leave
and
jecxz
jne
or
test
inc
or
jg
inc
jge
enter
hlt
or
xlat
cli
testl
xor
dec
das
add
xchg
add
jmp
arpl
enter
imul
sahf
outsl
add
xchg
std
jo
cli
movsb
incl
jne
sahf
inc
call
bnd
jno
ljmp
add
fisttps
jmp
cld
mov
add
adc
mov
jmp
enter
cwtl
lcall
adc
mov
mov
add
in
jno
ds
pusha
mov
xchg
mov
jno
jmp
jno
sub
mov
add
or
sbb
xchg
fwait
out
add
jmp
jb
sti
pop
gs
xchg
and
inc
call
mov
jb
je
out
xor
out
or
out
add
adc
dec
inc
dec
test
lock
mov
lahf
add
cld
jbe
adc
enter
cmc
in
push
aas
jmp
shrl
ds
aas
je
sbb
or
sti
add
jb
mov
insl
add
jmp
and
mov
inc
sbb
add
pop
cmp
jecxz
lock
testb
sbb
test
outsl
sbb
fadds
add
call
incl
add
ret
xchg
add
shl
mulb
push
incb
rcrb
add
outsb
in
cwtl
scas
lock
pop
mov
mov
decl
dec
test
and
ret
incl
jmp
pop
aam
mov
idiv
pop
xor
sbb
jb
mov
pop
aam
out
push
aaa
or
sti
repz
in
mov
addb
rcr
call
ds
mov
or
mov
clc
jle
arpl
xor
mul
sbb
push
mov
ret
add
sub
int
pop
add
adc
add
rorb
test
hlt
jnp
shr
icebp
repz
jno
iret
mov
shrl
sub
mov
adc
sub
sbb
clc
ss
sub
inc
cmpsb
push
push
fdiv
ret
cmpsb
or
sti
lods
shr
inc
mov
jp
in
aas
std
sarl
hlt
add
stc
xor
add
add
in
push
icebp
add
add
loopne
sahf
outsl
in
outsl
aad
add
sub
in
dec
mov
lods
mov
stos
jb
inc
jl
push
mov
mov
mov
std
mov
jle
fcos
lcall
jnp
imul
je
add
pop
fwait
mov
pushl
sbb
jg
pop
test
gs
jmp
add
jmp
adc
sub
and
add
jo
jmp
in
scas
xchg
push
sti
push
dec
stc
ficoms
add
push
adc
sbb
sti
mov
jecxz
xchg
testb
decl
mov
add
imul
add
imul
pop
imul
scas
cmc
adc
jmp
sti
mov
dec
jecxz
cmpsl
repz
push
mov
divb
cmc
je
pop
push
jge
dec
lcall
xchg
push
loopne
idiv
pop
mov
adc
dec
sub
mov
inc
or
jns
xchg
adc
out
cli
mov
fcomip
aas
add
push
push
sbb
or
popl
mov
dec
js
push
lfs
ljmp
out
cli
xchg
es
jp
out
out
sub
and
mov
sbbl
mov
mov
or
ja
out
das
fmul
sbb
in
mov
sbb
mov
stos
pop
pop
push
cld
call
mov
ds
hlt
add
adc
sbb
inc
push
sbb
jno
jmp
out
ret
jne
jg
pop
int
push
add
push
lds
ljmp
pop
rcrl
sbb
insl
rorb
mov
shrb
xchg
xchg
cli
add
pusha
shrb
jns
fcompl
pusha
cmp
mov
int
or
add
dec
add
insb
cmc
mov
ja
fcomip
sarl
dec
mov
add
push
cld
shrl
icebp
add
jmp
cmpsl
dec
insb
jo
pushf
xchg
popl
rorb
dec
push
jg
or
cmp
lods
jb
daa
enter
inc
add
sbb
or
out
and
pusha
idivb
rorl
ret
xchg
clc
mov
push
push
addl
mov
add
pop
jbe
cwtl
xchg
mov
add
lods
xor
add
inc
pop
popf
cli
decl
out
sub
add
push
jbe
add
sqrtps
mov
adc
div
jle
or
add
js
add
pop
or
test
gs
jns
xor
decl
inc
mov
add
fwait
or
sbbb
cmp
add
gs
mov
cli
mov
cli
add
pop
jne
jbe
pop
pop
pop
or
imul
outsb
arpl
jno
jns
add
loop
sbb
or
hlt
xlat
pushl
jmp
adc
movsl
std
pushl
push
inc
jne
push
push
insb
sub
or
add
dec
lods
out
jl
jb
or
mov
add
push
gs
jge
dec
out
jno
incb
gs
clc
repnz
adc
xor
xchg
xchg
add
mov
loopne
add
cmp
add
std
sub
testl
mov
lods
adc
mov
jno
jmp
roll
sub
xorl
mov
inc
pop
dec
add
inc
push
test
inc
fs
mov
push
aaa
add
or
test
stc
add
push
in
xorb
call
jb
jg
addl
mov
mov
cli
and
xchg
inc
adc
mov
jge
ljmp
lods
xchg
and
xor
jle
jo
sti
mov
inc
cmp
nop
fldl
sbb
mov
out
movsb
dec
add
push
or
sub
lods
add
jb
mov
add
pop
dec
add
jmp
insl
inc
adc
push
adc
daa
int
scas
add
dec
aas
add
dec
inc
add
and
or
add
adcl
jne
jg
push
xchg
jp
add
cmpb
adcl
decl
inc
add
jne
js
ljmp
out
or
std
mul
cmc
add
jmp
mov
incl
ja
pop
mov
cli
add
loopne
idivl
call
decl
dec
in
pushl
cmp
jo
jle
mov
jle
mov
add
daa
repnz
push
adc
stc
and
jp
repnz
or
scas
add
mov
push
add
scas
mov
in
incl
pop
mov
mov
and
lods
rol
inc
push
loop
cs
mov
jbe
and
mov
inc
add
push
jg
out
xchg
add
xchg
add
jno
inc
mov
je
xor
or
jo
or
mov
jmp
in
cli
mov
inc
popf
jns
xor
insl
dec
test
and
clc
inc
jns
lods
adc
dec
xchg
or
stc
pop
mov
les
out
testl
dec
and
push
sar
out
sbb
loope
mov
rcrb
mov
stc
or
testb
ret
ds
sub
add
sub
xchg
daa
sub
xlat
repnz
mov
jae
sub
and
xor
icebp
test
cmp
cli
scas
sub
add
jb
ljmpw
jae
or
sub
or
ret
idivb
pop
xchg
mov
add
adc
inc
cmp
jb
add
add
jmp
adc
xchg
pop
rolb
cmc
in
adc
add
es
push
push
dec
lock
add
add
cld
mov
add
mov
cwtl
cli
lcall
adc
pop
or
test
adc
jmp
dec
adc
clc
std
dec
jmp
divl
add
mov
pop
jae
adc
aas
call
inc
inc
ljmp
movl
mov
idiv
add
dec
data16
cli
pop
rorl
je
jb
cli
inc
in
je
rol
mov
xor
cli
sbb
loop
sbb
pop
and
jno
mov
mov
pop
jp
add
icebp
scas
push
je
orl
scas
xlat
test
inc
push
jbe
repnz
clc
inc
xchg
call
pushl
dec
add
push
xor
or
jbe
in
xchg
bound
mov
jo
and
pop
inc
lea
push
push
cmp
dec
lret
popa
mov
jns
call
gs
jno
insl
mov
push
jl
and
les
insl
cmc
jns
xchg
xor
lcall
hlt
das
xchg
sbb
dec
insb
add
push
insb
fiadds
hlt
dec
ljmp
in
daa
jno
ljmp
dec
daa
or
clc
jg
sahf
insb
xchg
add
mov
insl
or
fcomip
jnp
lock
out
inc
or
lods
data16
push
cmc
out
mov
cli
mul
inc
add
fmull
cmpsl
xchg
cld
push
test
fdivs
inc
sbb
add
rcrb
outsl
mov
push
js
inc
jae
jge
xor
jmp
jb
or
mov
lods
add
add
xchg
jae
xchg
adcl
inc
test
mov
xchg
sub
mov
orb
inc
sti
or
push
scas
dec
int
inc
nop
xchg
lods
cmp
or
xchg
adc
adc
add
test
mov
xchg
add
mov
add
jnp
inc
cmc
lcall
mov
cmc
adc
jno
inc
add
sub
pushl
std
sbb
outsl
inc
sub
push
sbb
lock
cli
fisttpll
sbb
sbb
sti
je
fidivl
fnstenv
testl
and
mov
or
insb
and
add
mov
jo
mov
jae
fiadds
push
push
icebp
rcll
popl
scas
testl
cmp
add
xchg
jmp
add
cltd
add
loope
or
incb
pop
dec
mov
mov
sub
jno
mov
or
xchg
or
jmp
movsb
repz
pop
std
fcomi
arpl
mov
add
cmp
jno
test
sbb
stos
sub
ss
cmpxchg
add
scas
push
fiaddl
out
dec
leave
insl
jno
sbb
jp
icebp
push
push
fsqrt
fldl
jno
call
cli
fs
add
jb
or
lods
arpl
add
loopne
add
loopne
daa
adc
clc
jg
mov
push
clc
cli
push
out
cmp
mov
jmpw
sbb
ret
loope
mov
sti
je
cmc
je
fidivrl
mov
jmp
insb
add
addr16
push
sbb
jnp
inc
bound
sti
mov
mov
shl
inc
add
test
push
inc
call
push
push
dec
jmp
sbb
push
sti
incb
or
jmp
adc
or
aad
out
inc
ljmp
sub
jmp
pop
sti
lods
inc
fsqrt
lods
dec
lret
or
stc
negl
push
je
fstpt
jmp
pop
mov
push
shl
cld
mov
sbb
mov
jne
mov
jl
mov
jno
hlt
mov
repz
call
out
push
jg
rolb
incb
add
icebp
dec
pop
or
xchg
sbb
jno
notl
mov
clc
lods
into
jp
push
jg
lods
push
icebp
punpckldq
hlt
jno
add
mov
jb
mov
insl
sbb
pop
jp
adcl
jo
hlt
call
fdivrs
push
add
add
pushl
jmp
ljmp
adc
cmp
notl
jns
bound
push
jge
movsl
sub
pop
jo
testl
or
subl
mov
xchg
call
outsl
push
xor
std
out
std
pop
mov
add
add
inc
stc
ret
mov
jno
in
repz
addl
xor
js
ja
adc
inc
add
xlat
popa
out
mov
orb
out
cmp
lea
in
pushl
outsb
test
ljmp
push
out
test
in
inc
and
icebp
and
inc
lds
je
insb
cmpsb
in
dec
mov
cmp
je
add
je
push
push
hlt
cli
lock
or
add
cmp
jle
jmp
aad
adc
mov
and
or
or
jmp
inc
xchg
sbb
xor
test
nop
add
mov
test
cmp
xor
xchg
sbb
push
lea
ja
call
add
mov
add
repz
cmp
add
mov
enter
dec
sub
and
clc
sbb
leave
add
inc
and
incl
xchg
repz
push
push
push
fldt
fmull
jno
cmp
jae
cmp
and
mov
imul
in
sub
xchg
xchg
call
daa
sub
or
ss
add
repnz
pushl
pop
inc
add
je
jns
repnz
add
pop
adc
jg
mov
lcall
das
icebp
jns
gs
fldenv
inc
adc
push
dec
sbb
jmp
hlt
cmc
mov
jmp
cmp
test
imul
ja
xor
push
decb
add
jno
fisttpll
test
arpl
bound
jmp
cmp
cmp
sbb
out
addb
ljmp
int
sub
insb
add
add
and
ficompl
jg
inc
jnp
pop
idivb
stc
jge
je
les
ja
test
add
xor
add
daa
aas
sbb
fnsave
fnstcw
mov
jne
out
icebp
add
inc
ds
add
sub
sbb
cli
jle
inc
push
andb
loope
mov
js
shll
ds
sahf
aaa
xor
fdiv
pop
sub
pop
mov
xchg
pop
loope
imulb
cmp
ja
add
mov
fdivs
shr
std
lods
add
xor
push
add
shlb
push
inc
or
add
xor
cmp
std
xchg
ret
sub
xchg
ret
add
mov
loopne
repnz
jmp
ret
cmp
mov
divl
fstps
sbb
call
mov
cmc
test
test
dec
repnz
jmp
addr16
sbb
movsb
xor
xlat
testl
divl
addb
in
test
fsubrs
xchg
fiadds
xchg
test
add
cmpl
cmpsb
sub
jns
mov
jg
lock
ja
int
mov
cli
pop
add
push
dec
xchg
in
cli
dec
ret
ret
mov
bound
xor
inc
or
jne
jecxz
es
sub
or
fnstcw
inc
lcall
fistl
icebp
cli
or
push
jmp
fstl
jae
add
and
pop
inc
popf
inc
sti
pop
jns
adc
sbb
imul
cli
jb
out
test
sub
cmpl
mov
jmp
cmp
out
in
data16
imul
push
aad
gs
pop
out
add
add
test
pop
jns
jle
divl
std
sub
mulb
sub
pop
add
add
xchg
jns
inc
lock
pop
repnz
ljmp
cli
jno
in
in
or
and
decl
stc
sub
imul
jmp
ljmp
stc
lock
mov
fcmovne
xchg
mov
xchg
ljmp
sub
sti
sahf
push
cs
add
inc
ljmp
loope
add
mov
jb
fsubrp
mov
pushw
data16
lock
subl
add
out
cmc
incl
out
lcall
add
sub
add
enter
dec
aad
incl
in
jp
aad
cmp
xchg
jl
std
aad
pop
push
pop
std
incl
das
add
mov
jmp
cmp
shl
call
stc
mov
fwait
pop
shll
jle
shl
add
add
lcall
push
or
mov
in
ljmp
dec
in
sbb
cmp
mov
sti
cld
repnz
push
xchg
fsin
or
out
cli
add
fyl2xp1
sbbl
and
jno
sbb
mov
cmp
jmp
jmp
insb
push
xlat
cld
outsb
lcall
imul
mov
dec
in
sti
xorl
push
add
jno
xorb
sbb
add
repz
pop
jecxz
das
pop
and
add
xchg
sti
loop
jle
jmp
sub
dec
push
repnz
sbb
imul
cld
dec
jp
in
lret
jle
ljmp
sub
scas
loop
cld
repnz
fsubrp
fwait
and
and
add
test
in
in
inc
sbb
add
repz
in
in
jnp
and
push
and
xor
loopne
xor
test
xor
outsl
inc
inc
add
insb
hlt
mov
repz
fldt
sub
sbb
dec
mov
jns
lds
cmp
sbb
test
cli
jmp
sahf
xor
outsb
add
cli
jmp
xorl
shlb
or
cli
test
jmp
hlt
xor
pusha
mov
je
add
out
sahf
lret
xchg
dec
hlt
push
cld
out
sbb
and
sub
mov
in
mov
cmp
seta
fnstsw
inc
xchg
daa
cld
mov
aam
rol
mov
aas
aad
mov
pusha
sub
jg
sub
or
mov
outsl
sbb
mov
les
aad
rolb
pusha
je
mov
cli
pop
movsb
aad
adc
inc
adc
push
fdivrs
adc
cld
mov
pusha
call
jge
test
or
dec
or
jno
inc
cld
call
int
mov
lcall
mov
xchg
roll
push
cmpb
jmp
pushf
ljmp
push
and
movsb
ljmp
popf
cmp
xchg
aaa
jae
mov
mov
sub
mov
jae
mov
clc
cld
xlat
or
sar
pop
inc
pushl
leave
sti
push
xor
jo
pop
mov
in
fisttpll
push
jmp
lods
fsubs
jne
mov
add
arpl
addb
fadds
loop
add
inc
jo
std
mov
adc
imul
xor
inc
outsb
ret
jmp
fcom
aad
mov
xor
test
das
mov
call
test
pop
loope
inc
mov
rcl
testl
jmp
out
imulb
fisttpll
lahf
hlt
jns
int
clc
rolb
or
test
iret
in
lcall
hlt
or
repnz
call
fwait
inc
and
sub
jmp
inc
sub
adc
test
push
or
push
fld1
jno
xchg
lods
inc
aaa
sub
add
lahf
addb
call
push
hlt
add
add
add
mov
add
loopne
fidivrl
dec
mov
lcall
pop
mov
add
mov
add
movsb
add
loopne
fidivrl
pop
lea
fwait
pop
cld
add
lock
add
inc
xor
sub
sbb
popa
aas
cld
jmp
andl
push
aas
lock
arpl
mov
imul
sbbb
pop
mov
jno
cmp
jns
mov
cli
outsb
adc
imul
push
hlt
jle
inc
ljmp
pusha
xchg
rorb
and
push
mov
inc
cs
and
jge
gs
jne
add
cmpsb
sub
sarb
fdivr
loope
xor
jne
lds
and
in
scas
rolb
test
add
add
cmp
inc
enter
dec
cmc
sub
insb
or
aad
mov
push
lock
int3
inc
pop
inc
cmc
sub
pop
ds
pop
sbb
mov
mov
sbb
shl
adc
pop
in
pop
pop
add
test
xlat
sti
inc
cmc
or
out
xor
and
jp
and
outsl
lea
fwait
pop
out
or
xor
outsl
popa
stos
push
add
lret
out
xchg
inc
test
jb
aaa
xor
imul
stc
dec
cld
cmpsb
scas
hlt
add
jb
jg
add
and
lods
insb
or
xlat
cli
xchg
cmp
dec
hlt
divb
xlat
inc
hlt
jns
dec
enter
in
push
icebp
pop
in
jmp
ja
push
jmp
cltd
enter
ss
lcall
hlt
pushf
addr16
movsb
outsb
pop
inc
add
inc
jl
mov
or
sahf
repnz
pop
cmp
in
xchg
sub
ss
lcall
stc
pop
cld
aas
or
paddusw
inc
xor
jae
rcll
sbb
jecxz
jae
xchg
jae
aaa
or
xor
dec
xchg
les
pushl
cld
jae
jmp
negl
out
jp
nop
verr
or
divb
testb
into
mov
rcrb
or
sub
cmp
or
cli
cwtl
aaa
xlat
cli
xchg
cwtl
inc
jo
std
cmp
inc
add
dec
xor
push
pop
xor
cld
repnz
add
in
jmp
inc
add
ss
repz
xor
mov
sbb
push
xchg
xor
in
add
adc
fs
jmp
pushl
jmp
mov
mov
push
aad
pop
sbb
mov
pop
cmp
pop
xor
orb
mov
flds
jno
jmp
lods
gs
mov
lock
jo
les
adc
subb
add
mov
jge
push
add
mov
cmp
inc
sub
xor
mov
sub
jno
adc
imul
add
inc
pop
fwait
adc
aaa
mov
inc
jo
jge
add
push
and
cmp
push
out
call
and
or
cmp
or
sar
out
xchg
cmp
aas
aam
sub
pop
aad
lods
or
push
in
outsl
mov
or
add
jmp
cld
loop
push
cmp
mov
outsl
repz
xchg
push
bound
cmp
push
and
mov
in
jnp
sbb
jnp
fldl
or
add
cmc
rorb
xor
incl
lock
add
mov
incl
and
and
and
and
sbb
add
jne
mov
lcall
int3
cmc
jne
mov
or
loope
daa
xchg
add
xor
xor
jmp
shrl
cld
fdivr
lcall
add
sbb
pop
adc
cmc
incl
imul
push
das
hlt
arpl
inc
test
cld
add
rol
or
aad
cli
into
imul
outsb
fs
adc
mov
jl
ret
and
dec
hlt
add
lret
sbb
sub
out
bound
hlt
test
or
lret
inc
call
lret
mov
mov
mov
aas
cld
jbe
aas
cmc
add
dec
xchg
lea
bound
xchg
imul
dec
pop
mov
inc
pop
adc
loope
inc
jmp
icebp
mov
add
pop
mov
inc
lods
decl
movsb
roll
push
jecxz
call
les
shrl
jno
sub
idivl
call
add
sbb
add
loope
or
mov
fcoml
adc
mov
jg
add
inc
lea
mov
add
popa
rorb
popa
sarb
ss
cmp
xchg
cmp
cmpsb
fnstcw
or
add
push
test
mov
es
jmp
mov
shrb
decl
push
gs
mov
cli
cmp
jo
fadds
sub
fmuls
push
inc
aas
mov
jge
fdivrp
pop
lcall
jp
repnz
repnz
mulb
icebp
leave
inc
arpl
add
popa
or
lret
lock
inc
push
inc
insb
cmp
jnp
add
aad
jae
addr16
push
mov
mov
incl
shl
add
cld
jmp
adcl
fadds
inc
jp
add
shl
pop
mov
dec
pop
repz
sub
jno
xchg
sbb
shll
aaa
in
cli
call
mov
sar
mul
mov
mov
mov
jle
out
mov
in
decl
inc
sar
mov
nop
push
xor
add
repz
cli
repnz
add
data16
out
jmp
arpl
outsb
mov
add
cli
push
sbb
pop
rcrb
push
jno
fidivrs
add
push
addl
fisttpl
add
data16
pop
cmp
shr
push
fwait
pop
ljmp
xchg
cmc
inc
lretw
cmc
and
fcmovu
subl
jp
iret
lret
iret
addr16
add
add
jecxz
stos
iret
or
or
xchg
iret
call
add
data16
insb
hlt
je
call
fiaddl
xchg
aad
lret
mov
push
or
pop
outsl
call
inc
lret
data16
cmp
dec
aad
or
inc
adc
jb
add
add
insl
mov
sub
xchg
out
inc
mov
dec
mul
es
jle
outsb
sti
mov
cli
push
jb
andl
leave
cli
push
pop
hlt
cmp
add
jmp
jb
add
decl
testb
jmp
test
pop
test
jnp
push
stc
mov
test
adcl
jbe
cltd
stos
addl
add
test
cmc
call
sarb
icebp
or
add
cmc
leave
inc
sbbl
mov
add
jmp
lret
hlt
leave
inc
jae
insb
cvtdq2ps
or
or
xor
sarb
cmpb
test
push
adc
int
js
jno
lcall
unpcklps
lret
push
jno
lcall
or
insb
pop
ljmp
bound
xor
shl
ds
ja
or
mov
inc
adc
sbb
jns
cmp
decl
xlat
or
adc
sbb
mov
xlat
fcmovu
or
insb
outsb
pop
mov
jno
add
sti
stos
repz
testl
scas
cmc
inc
adc
movsb
ljmp
or
adc
sbb
mov
call
adc
aas
push
ss
gs
add
push
and
insl
sub
hlt
xchg
cmp
cmp
cltd
inc
test
sub
test
jge
dec
scas
lea
popa
jle
push
scas
sbb
cld
call
mov
pop
pop
cmpb
in
sti
arpl
ror
sub
dec
inc
ljmp
std
sbb
dec
mov
inc
pop
sub
in
jb
or
imul
sub
fisttps
out
loop
into
inc
movb
adc
or
or
in
cmpsb
lock
in
jmp
jb
xchg
dec
mov
push
testb
stos
std
call
loop
add
hlt
sub
dec
xchg
test
loope
push
push
ret
jb
jno
add
ret
mov
inc
cli
push
mov
cmp
add
pop
mov
mov
add
pop
cmp
fwait
std
xor
cmp
das
or
popf
shlb
xor
and
rorl
insb
mov
sbb
cmp
cmp
loopne
inc
jl
mov
or
icebp
enter
pop
cmp
add
imul
int
cli
push
push
mov
pop
cld
fistpll
lock
mov
inc
je
mov
mov
and
pushf
add
push
aam
jns
shll
dec
or
push
pop
call
sub
in
or
pushl
xor
loop
fsub
dec
mov
xchg
mov
jp
int
cmpsb
outsb
call
repnz
add
push
or
mov
int3
and
push
push
lret
mov
jns
xlat
push
test
pop
sti
jae
push
lret
jecxz
cmc
hlt
jmp
pop
sti
into
or
sub
or
fwait
nop
call
stos
add
pop
jp
rcl
fwait
enter
jge
cld
jnp
lods
rorb
stc
fs
jp
loope
mov
imull
enter
or
rorl
in
xor
mull
cmp
mov
int
dec
clc
xchg
adc
add
ljmp
inc
scas
les
dec
shr
pop
push
dec
push
loop
mov
aad
cli
jmp
xor
jae
fbld
ret
lret
cmpsb
cli
cmpl
ror
push
hlt
or
leave
cli
repnz
jmp
lods
leave
cli
out
inc
aaa
test
mov
sahf
inc
lret
mov
leave
cli
mov
das
std
jae
in
int3
push
sbb
mov
push
or
daa
jl
call
and
cli
sub
fdivrs
ror
movsb
fimuls
cli
dec
add
or
jp
xchg
adcb
decb
pushf
incl
xchg
adc
cmc
into
jbe
popa
inc
idiv
xchg
adc
roll
xchg
adc
and
incl
scas
add
pop
xor
pop
sar
push
int3
jecxz
incl
cmp
dec
adc
xchg
out
push
mov
mov
xor
aaa
inc
adc
add
mov
pop
je
jp
test
adcb
decb
flds
test
jno
sar
xor
inc
adc
mov
jnp
xor
cld
mov
sarb
cli
cmpsb
loop
insb
outsb
pop
mov
xchg
idiv
mov
push
cmp
fucomi
add
leave
cld
jbe
ds
mov
or
and
cli
call
into
jg
add
ss
cmp
jle
xchg
lret
and
aam
add
lret
jle
adc
adc
jnp
addb
test
push
lds
fst
fcmovnb
or
sub
les
add
outsb
ss
in
repz
bound
cmc
or
in
xchg
lods
mov
or
mov
cmp
cmc
xor
add
cld
outsl
mov
int
jnp
and
xor
loopne
xor
roll
jo
into
cmp
jb
cs
ss
roll
sbb
in
icebp
jg
call
pop
mov
ret
jb
dec
push
and
inc
xchg
jnp
add
xchg
divl
out
fdivl
lret
sti
pushf
lcall
fcmovnb
je
mov
loope
testb
out
cmp
test
add
add
cld
xor
push
test
enter
add
jg
ret
sub
or
inc
jge
jb
test
add
add
insb
std
push
inc
jl
arpl
cli
testl
in
cli
inc
shl
jne
or
jne
mov
or
sub
call
inc
mov
cli
jmp
xor
jmp
inc
dec
and
or
leave
push
divl
inc
ret
cmpsl
push
push
into
cmc
jne
mov
or
aas
jnp
pextrw
mov
pop
cmpl
inc
inc
mov
setp
clc
jmp
jno
fsubr
cli
or
or
ljmp
cld
sbb
cli
pop
sti
jbe
insl
and
ljmp
or
sar
mov
pop
pusha
inc
jno
push
or
add
cltd
imul
sahf
dec
movl
incl
je
ret
pop
xchg
pop
enter
jp
es
in
sbb
call
bnd
incl
je
dec
inc
or
push
push
ret
push
shrl
inc
cmp
test
ficoml
imul
lret
in
inc
rcr
divl
sti
decb
lret
jp
sti
cmc
out
add
into
stos
sarb
pop
and
sbb
xor
lcall
push
gs
cmp
test
push
inc
push
ljmp
or
push
imul
lods
cld
rolb
dec
pop
out
cmp
push
call
push
or
mul
aas
rorb
add
cld
fidivrl
adc
and
cli
faddl
lret
cs
test
shlb
mov
cli
jmp
jb
inc
lds
push
sti
jl
or
out
mov
pop
dec
mov
adc
mov
or
and
mov
add
cmp
nop
test
push
fcmove
ljmp
mov
push
std
loop
mov
jae
nop
jp
stos
inc
add
mov
enter
jb
jne
cmp
std
mov
cmc
test
xor
add
orl
jle
mov
cld
ja
out
addb
mov
push
inc
push
addr16
and
sahf
push
jne
mov
nop
or
dec
sbb
xor
add
xlat
jnp
ss
idiv
movsb
lahf
lods
inc
outsl
movl
xchg
cli
sbb
fsqrt
xor
and
cmc
das
add
pop
leave
je
ficoms
or
sub
je
stos
mov
cmpsb
decb
cli
loop
je
aas
pop
ficompl
and
or
xchg
test
enter
enter
repnz
adc
xor
pushl
testl
xor
in
jnp
pop
jo
sub
call
mov
lea
mov
jno
mov
outsb
and
add
inc
lds
inc
or
lea
jp
js
pop
inc
jmp
scas
add
push
sub
mov
icebp
fistl
mov
add
cmpsl
jae
add
jmp
call
call
je
mov
jae
loopne
cmp
mov
or
adc
test
adcl
cmp
pusha
scas
adc
inc
adc
xor
adcl
cmp
pusha
add
cmp
mov
cli
fst
addb
fwait
jmp
popf
addl
add
push
pop
mov
mov
sbb
in
mov
pushf
lcall
add
jbe
jne
ret
jo
fdivr
dec
cmp
lcall
out
call
push
dec
sbb
jle
je
jno
push
je
cmp
incl
inc
pop
cmp
dec
xchg
mov
xchg
cmp
mov
xor
decl
jae
and
sbb
cmc
mov
dec
inc
jmp
stos
mov
cli
mov
mov
add
arpl
jno
cld
push
mov
mov
shl
jg
cmp
icebp
cmp
add
ds
leave
testb
and
aam
and
ss
inc
inc
sub
imul
test
inc
andl
lods
mov
stc
mov
aaa
xor
shll
mov
add
jl
xchg
jno
cmp
in
out
add
test
incb
jae
ret
jno
ljmp
add
jmp
ss
xchg
jns
jle
imull
mov
daa
lea
or
les
loopne
ret
popf
sbb
iret
sbb
rcrl
xor
ret
lcall
mov
addb
add
in
xchg
add
sub
add
repnz
in
sbb
jno
ljmp
inc
mov
inc
mov
or
push
addl
jb
jmp
mov
mov
jmp
test
mov
xchg
mov
fs
out
div
inc
jecxz
xor
idiv
jg
mov
fsubrl
stc
jbe
out
cmc
push
idiv
jno
or
imul
xchg
in
xchg
adc
ret
in
or
adc
fwait
ret
cmp
xchg
push
jmp
dec
and
std
push
inc
push
addr16
pop
fstl
divl
imul
daa
roll
add
add
pop
mov
xor
addl
xchg
out
shl
add
mov
test
call
dec
mov
fistl
decl
add
sbb
cli
icebp
push
sti
and
mov
or
sbb
jae
ljmp
add
dec
adc
out
cmp
xor
mov
xchg
shlb
ds
cmpl
cli
fcoml
aaa
mov
cmp
or
mov
and
jae
mov
sti
pop
imul
or
mov
cli
jb
cld
jle
addr16
mov
mov
fmull
push
mov
sub
pop
test
ss
sub
popa
mov
jp
ficoml
shr
flds
mov
sti
mov
mov
xor
jmp
mov
scas
sahf
lret
mov
push
xchg
test
dec
xchg
pusha
ds
mov
mov
add
jns
add
and
out
enter
or
cmp
lahf
add
out
out
clc
add
stos
test
insl
rcrl
adc
dec
fsubl
mov
mov
push
push
test
sti
je
mov
loope
fsubr
mov
ljmp
dec
vmulsd
call
cli
add
loope
mov
fnsave
lods
rclb
ret
jae
xor
inc
adc
dec
clc
jl
data16
xchg
inc
test
movsb
push
xor
in
add
dec
fdivl
fdivrp
pop
mov
cld
popl
addl
jb
and
lret
jg
sbb
push
jb
adc
or
add
pop
call
test
add
decl
push
cld
jae
addr16
fbstp
pop
jnp
sete
fdivrp
iret
mov
mov
cli
loop
test
sub
cmp
mov
aaa
mov
xlat
in
inc
mov
test
inc
and
ds
xchg
testb
mov
pop
jge
jg
std
mov
xchg
lahf
aas
cmp
mov
sti
mov
dec
and
ljmp
je
bound
or
add
sti
mov
ret
subb
in
mov
mov
fcompl
test
mov
aad
hlt
ljmp
das
push
adc
cmpsl
add
add
mov
mov
dec
es
aam
sub
mov
dec
or
xorl
icebp
mov
pop
dec
out
jno
and
jbe
sub
mov
mov
insb
movsb
aaa
mov
mov
push
insb
fsubrp
cwtl
jecxz
mov
out
xor
pusha
std
pop
sub
cmp
negb
fidivrs
mov
fisttpll
sub
add
je
out
int
aam
jns
mov
pusha
add
mov
fidivl
call
jb
fdivrl
jo
fmull
pop
xchg
inc
adc
jmp
negl
jnp
xchg
ja
cmp
sti
addl
cli
into
mov
sti
add
fs
lock
xchg
mov
divl
imul
es
push
cmpb
enter
icebp
fdivrs
cld
inc
inc
adc
or
iret
dec
jmp
and
cmp
incl
lea
cmp
cli
jp
insb
push
addl
jle
sbb
ret
outsb
pop
add
push
out
push
add
ret
push
das
mov
pushl
lods
and
out
daa
sub
xlat
jb
xor
adc
cmc
imul
stos
or
pop
mov
hlt
testw
inc
jg
int
addl
cli
mov
adcl
mov
cwtl
jmp
fisttpll
ja
jg
mov
pop
xor
add
jno
jns
push
mov
pusha
data16
fisttpll
movsl
stos
jno
ss
add
mov
call
push
jp
outsb
add
es
add
jmp
or
dec
mov
imul
out
call
or
pop
ss
clc
mul
add
add
sbb
cs
xor
push
or
mov
xor
jnp
gs
in
call
dec
popf
mov
or
ljmp
cmc
ss
aas
add
dec
adc
fistpl
pop
and
add
adc
mov
ss
jno
pmaxsw
loopne
push
stos
inc
cmc
daa
xor
adc
je
sti
sar
cld
push
pop
push
xor
data16
aam
cwtl
add
fisubrs
jl
fisubrs
push
xchg
sbb
leave
sub
ljmp
out
in
push
imul
lcall
xchg
cmp
add
xchg
cmp
int3
xchg
cmp
mov
xchg
cmp
cld
xchg
cmp
cld
cmp
ss
cmp
ljmp
add
cmp
test
cmp
or
cmp
jl
add
cmp
mov
nop
cmp
jge
add
xchg
adc
add
jge
add
jge
add
jge
add
int
cmp
jge
add
mov
jno
xchg
cmp
jno
xchg
cmp
jno
xchg
cmp
jno
cltd
cmp
jno
xchg
cmp
jno
cltd
cmp
jno
cwtl
cmp
jno
xchg
cmp
jno
test
jno
cmpl
jno
xchg
cmp
jno
pop
cmp
jno
cmpb
fisubl
jno
pop
cmp
lods
add
pop
movsb
add
pop
xchg
add
pop
mov
mov
xchg
jl
and
add
add
add
jmp
ljmp
ljmp
aaa
and
imul
adc
test
repnz
push
out
sbb
in
push
loop
ffreep
loop
faddp
fisttps
fcoms
in
dec
xlat
jmp
sub
mov
cmp
mov
pop
fcos
lahf
xor
cli
xchg
xor
pop
hlt
xor
push
xor
mov
inc
in
cmp
jle
inc
jmp
add
push
add
jmp
aaa
add
lcall
jmp
scas
jecxz
inc
jecxz
call
loope
cmp
jmp
scas
push
jmp
cmpsb
push
jmp
add
loope
call
loope
call
loopne
call
ljmp
or
call
or
jnp
cmp
add
lea
cli
mov
lret
add
xchg
and
add
sbb
add
sbb
cmp
add
and
add
cmp
add
and
add
cmp
add
dec
cmp
add
cmp
add
and
add
and
xorl
orl
orb
xchg
pop
das
mov
pop
lods
mov
pop
fsubr
push
stos
mov
mov
cmp
ss
scas
sbbb
cltd
cmp
test
pop
or
scas
pop
add
push
adc
xchg
sbb
or
ja
mov
mov
lds
add
addl
mov
push
or
scas
jmp
jp
rcll
fwait
js
hlt
mov
outsl
push
mov
stos
stos
aas
ret
xor
je
inc
jmp
inc
shrl
cmc
mov
mov
push
popl
in
jnp
mov
cmpsb
cwtl
jl
cltd
pop
xchg
sub
pop
or
add
hlt
add
and
idivl
mov
test
ljmp
vmulpd
ja
int3
jnp
xor
mov
in
sar
lcall
loope
outsb
loope
mov
jbe
stos
xor
inc
icebp
sbb
aas
hlt
xor
ja
jns
inc
xchg
bound
aad
test
rorb
int
or
ljmp
in
out
sbb
out
fidivrs
icebp
sub
js
pop
test
rcl
add
sti
mov
jge
mov
jl
cmpsb
push
stos
add
jb
add
and
mov
js
add
cmc
incl
jbe
aas
push
xchg
and
inc
test
cld
and
test
pop
mov
incl
or
jae
cltd
test
mov
daa
inc
or
or
pop
fnstsw
dec
adc
je
mov
js
jae
jge
ljmp
or
adc
sbb
inc
add
add
push
add
jmp
call
or
enter
jno
test
pushl
in
xchg
in
inc
sti
add
sbb
sti
xchg
dec
xchg
and
lahf
inc
out
iret
jmp
js
jo
jbe
test
aas
data16
inc
push
or
cli
inc
cs
or
and
jg
xchg
jnp
push
xchg
lods
cli
cli
push
xchg
inc
mov
data16
iret
and
sub
lds
push
dec
repz
je
jo
lcall
mov
jmp
clc
mov
sub
sbb
add
inc
xchg
add
add
fnstsw
adc
inc
mov
arpl
stos
xchg
adcl
mov
add
cmp
pop
dec
jno
outsl
inc
add
std
pop
cs
jne
mov
and
pushl
leave
mov
in
add
jmp
stc
icebp
clc
cli
push
std
ss
scas
xchg
cli
jbe
and
jmp
sahf
mov
inc
std
or
cli
jmp
rolb
mov
xrelease
cli
push
add
add
lret
cmp
pop
lods
hlt
add
divb
sub
stc
orb
mov
add
les
gs
std
mov
and
aas
or
jge
xchg
jg
je
and
test
cmp
jmp
shr
cmp
daa
and
repz
aam
rcrb
adc
cmp
fcoms
decl
addb
xchg
imul
fldl
pushl
mov
call
xor
test
pop
inc
xchg
xor
xor
mov
orl
pop
sub
inc
movsl
add
jl
jo
jg
out
movsl
jae
out
ljmp
movsl
icebp
mov
jnp
sarb
cmp
filds
hlt
icebp
cmpsb
cli
sahf
xchg
jo
imul
mov
xchg
ljmp
test
add
andl
pushl
push
repnz
dec
lock
pushl
test
test
jbe
xchg
push
add
in
mov
call
add
test
inc
jo
push
ljmp
das
add
xchg
test
mov
sahf
insl
dec
lods
test
jl
inc
bound
pop
or
ja
lahf
inc
test
cmpsb
or
test
sbb
mov
pushf
cli
test
cmc
xor
test
adc
leave
in
pop
aas
out
leave
lcall
fcomps
aaa
xor
or
add
in
xchg
sbb
cli
sbb
movsb
adc
xlat
dec
cltd
mov
xchg
insl
add
cld
inc
in
mov
dec
mov
shlb
mov
movsl
fwait
dec
outsb
aad
fdivp
adc
jmp
add
ss
adc
adc
ret
xor
jmp
inc
inc
xor
out
std
cmp
ljmp
cmpb
sbb
mov
sbb
das
mov
enter
das
nop
pop
mov
cltd
cli
stc
dec
xchg
mov
xchg
sbb
nop
push
cmc
incl
jmp
sbb
mov
lcall
or
cld
das
gs
add
addr16
arpl
rorb
cld
ljmp
shlb
icebp
mov
stos
push
incb
cld
cs
and
push
repnz
stos
ljmp
pop
sbb
int
pushf
mov
mov
inc
std
dec
sti
add
dec
std
bound
into
jp
mov
in
mov
das
mov
jg
jle
cmp
test
xchg
push
sub
js
jle
mov
test
je
cli
xchg
divb
push
cmpsb
jno
xchg
jns
xor
cmpsb
cmp
call
cmpsl
imul
cmp
or
shll
push
orb
jge
mov
add
fistpl
arpl
cltd
add
fwait
mov
clc
sbb
jecxz
les
bound
movsl
mov
cmp
icebp
jnp
push
lds
cmp
mov
push
mov
mov
add
fs
jb
hlt
mov
mov
repnz
call
bound
test
popa
decl
addr16
jb
lock
imul
jno
jge
jb
jg
or
hlt
cmp
std
jnp
pop
std
mov
aad
cli
sbb
test
data16
jle
add
sbb
loope
xchg
adc
dec
or
fistpl
cmp
and
xchg
orl
or
jp
clc
arpl
lcall
jmp
add
ficoml
andl
jge
pop
kmovb
xchg
sub
mov
mov
and
mov
jecxz
xor
ret
jge
out
mov
divb
mov
push
jo
add
mov
adc
cld
cmp
out
lcall
lea
xchg
xchg
jae
add
sbb
imul
mov
imul
mov
dec
cmc
aas
jno
dec
or
pop
pop
mov
sahf
adc
pushf
ds
xor
sti
add
aas
jno
inc
sti
jo
adc
sub
incl
ss
fs
sahf
adc
fwait
add
and
dec
loop
mov
lea
mov
decb
cmc
xor
add
inc
xchg
pop
jmp
mov
cmp
add
clc
outsb
icebp
test
clc
cmp
sti
jmp
cwtl
or
add
fsub
add
movsb
out
xor
push
dec
hlt
and
rclb
jno
shl
sub
std
out
jno
xor
xchg
fldt
add
fistl
movsl
inc
jmp
add
test
cmp
clc
sbb
fldlg2
test
lcall
lods
inc
and
pop
movsb
push
push
pop
cmp
push
ljmp
insl
add
adc
cltd
sub
in
add
cld
inc
icebp
aas
jmp
pusha
jl
jmp
push
loop
xchg
lret
not
das
xchg
rol
test
pop
push
xchg
cli
ret
ds
adc
dec
fnstenv
add
in
loop
ds
sbbb
xor
mov
sarl
movsl
orl
mov
xchg
test
aaa
push
pusha
jle
xchg
cmpsb
adcl
orl
cmc
inc
je
cmc
inc
xor
xchg
pusha
outsb
and
imul
shlb
push
jo
sub
jmp
ds
int3
divb
notl
push
mov
jbe
lcall
clc
and
sqrtps
jl
xchg
add
cli
scas
test
and
outsl
jb
lahf
adc
cmp
and
and
test
xchg
imul
jno
rcrl
add
popl
pop
cltd
adc
cltd
ds
icebp
mov
movsb
mov
icebp
popf
xchg
test
mov
test
add
das
into
xchg
test
lock
or
cli
out
mov
mov
mov
jbe
hlt
inc
xor
xor
leave
jge
sbb
push
pop
and
loop
mov
jmp
mov
xor
cmp
cld
call
orb
push
sarb
jge
pop
jle
outsb
and
das
mov
or
push
add
in
icebp
and
rorl
mov
ds
mov
xchg
test
in
sbb
push
add
cmp
xchg
or
mov
sub
outsb
add
sbb
jnp
sbb
jge
adc
xor
pop
outsb
pop
push
jmp
jne
cs
and
jae
add
iret
aam
and
out
xchg
repnz
jle
push
test
inc
inc
xor
popa
fists
sti
push
or
pop
sub
push
adc
sbb
jmp
addr16
hlt
sahf
lock
jmp
aaa
xchg
cli
add
add
rorb
ret
cmp
call
add
push
add
popa
jns
les
pop
push
jg
repnz
mov
and
xchg
movntq
out
and
shr
sti
mov
mov
add
ja
add
add
xchg
jp
push
std
mov
jmp
xchg
push
xorl
push
or
shl
movzwl
xor
cmc
add
adc
cmpb
nop
fisttpl
out
push
dec
clc
in
push
out
sbb
inc
aaa
mov
cmp
lods
shrl
das
cmp
xchg
out
sub
test
scas
jge
ljmp
std
repz
aaa
xor
inc
push
add
insl
cs
in
cmp
fiaddl
ljmp
xchg
andl
cmpl
jb
xchg
xor
push
movsl
fwait
cs
add
cmpsl
incb
jmp
fwait
inc
cld
pop
fwait
into
push
and
jmp
adc
push
jno
les
jno
mov
adc
movsl
adc
sub
testb
adc
add
push
mov
xorl
call
pop
xor
insl
jns
cmpsl
jmp
cwtl
pop
cmp
popl
xlat
push
sub
fnsave
add
test
jb
xor
loope
pushl
clc
mov
mov
dec
mov
test
cmp
aam
adc
cmc
andl
mov
test
jle
daa
test
inc
lock
test
mov
add
inc
hlt
inc
hlt
push
mov
mov
in
sub
adc
mov
push
pop
jnp
xor
test
add
pop
sub
daa
mov
lea
call
roll
inc
std
idiv
add
lods
mov
mov
fimuls
cmp
jae
rcl
unpcklps
out
aam
adc
adc
sti
lahf
or
dec
jmp
or
rorb
mov
inc
add
mov
andl
cmc
mov
shl
adc
jno
cmp
pop
fimull
or
push
ljmp
insl
xchg
xchg
cli
aaa
fs
add
and
inc
insl
and
ljmp
je
and
ljmp
inc
jmp
and
in
jecxz
dec
xchg
dec
adc
xor
cmp
xchg
jle
imul
add
mov
xchg
xchg
adc
lods
add
hlt
fsts
addr16
add
icebp
ss
test
clc
inc
sbb
add
stc
das
cli
adc
mov
mov
inc
jmp
mov
mov
xor
push
or
cld
pusha
cmp
mov
cmc
adc
xor
call
xchg
jge
fildl
ja
or
add
cwtl
adcl
lock
test
icebp
or
add
test
jno
add
pop
adc
jns
jae
in
inc
psubsb
and
lret
lcall
xchg
aaa
movsb
add
or
outsb
cwtl
push
out
push
lahf
movaps
inc
icebp
mov
push
push
push
roll
cmp
xlat
shlb
outsb
dec
cli
hlt
scas
cli
aas
jmp
outsl
cmp
cld
out
test
xchg
inc
and
data16
xchg
insb
je
mov
add
popf
stc
lcall
jae
xchg
addb
add
test
push
addr16
notb
jae
in
inc
cld
mov
xchg
shr
jne
int
pop
lock
dec
cmp
fcomi
adc
pop
orl
aam
cmc
push
mov
jge
notb
std
mov
js
call
xlat
cli
mov
adc
push
push
xchg
mov
mov
mov
xor
sub
add
aas
mov
movsl
inc
pop
adc
mov
cli
or
push
or
push
push
mov
cmpxchg
xchg
fnstenv
cli
out
xor
adc
xchg
ds
push
sbb
or
or
push
xor
shll
xchg
jg
pop
mov
mov
add
inc
add
cld
dec
addl
sbb
mov
stos
pop
fcmove
inc
mov
mov
imul
dec
insl
sbb
xorb
mov
loopne
add
jo
sti
mov
in
sub
es
jbe
fisttpl
imul
xor
push
adc
xchg
jmp
inc
jno
test
add
clc
pop
cld
cld
mov
ds
jmp
jecxz
and
test
adc
pop
mov
xlat
fwait
icebp
in
mov
jmp
popa
clc
jae
pop
add
xor
loop
call
jb
out
insb
call
cld
je
fdivrs
adc
xchg
cli
pop
jno
adc
in
jmp
clc
shl
lahf
or
add
cli
xor
xor
fsubrl
sub
jno
repnz
mov
jmp
cltd
jae
mov
rcrl
jle
je
cmc
xor
iret
lea
shlb
jo
out
pop
pop
add
push
jg
mov
ret
out
add
add
xorb
es
adcb
jge
je
jno
jl
cmp
jmp
cmp
inc
enter
int
push
and
add
or
imul
add
add
fidivrl
add
lds
mov
sub
jle
mov
jnp
fiaddl
sti
jl
in
aas
jno
mov
or
pushf
sarl
ds
loop
add
movsb
mov
mov
or
pop
incb
mov
add
call
in
adc
dec
or
xor
ds
cmpsb
mov
inc
lret
pop
insl
les
jg
xchg
jae
inc
hlt
mov
mov
cmc
xor
adcb
mov
mov
mov
fadds
sbb
mov
loopne
pop
mov
in
mov
test
cmc
inc
jno
xor
push
sub
push
jns
jo
pop
adc
inc
jmp
jnp
xchg
repz
das
adc
shr
test
stos
daa
movsb
shrl
jp
mov
sti
mov
ja
cld
inc
or
pushf
arpl
rorb
lret
mov
add
sub
out
fs
andnps
dec
cld
je
out
sbb
jge
jno
out
or
jle
inc
movaps
jge
jb
sub
pop
pop
mov
add
clc
xchg
in
dec
cmp
adc
jb
xlat
shlb
cs
lahf
sbb
mov
add
ljmp
jne
out
out
adc
xchg
dec
out
fisubs
es
cmp
idiv
cmp
xchg
dec
jge
mov
jnp
je
call
out
dec
cld
cmp
cltd
decl
or
sti
decl
jmp
int3
pop
clc
inc
sub
xlat
jae
mov
jb
mov
jae
xor
jae
or
movsl
push
jae
filds
test
ja
cmc
push
lock
xor
push
ja
fs
lret
mov
lret
dec
mov
cmpb
jno
aas
sti
mov
je
adc
mov
cmp
xor
jp
leave
xor
shl
inc
add
adc
testl
push
adc
push
xchg
xor
cmpsl
jns
popa
inc
jns
aad
incl
cmpsl
aas
enter
pop
call
ret
adc
movsl
ds
adc
fcmovbe
cli
jl
in
aas
jno
lahf
jecxz
repnz
mov
xor
repnz
inc
add
in
hlt
mov
cmp
jno
sti
jg
cmp
jle
cwtl
inc
jno
xchg
jg
mov
and
add
fdivr
into
jne
cwtl
inc
jno
mov
ljmp
jl
call
fildll
std
add
add
or
call
mov
or
popa
test
jmp
mov
add
mov
add
xchg
jg
inc
dec
sbb
lock
hlt
test
sbb
xchg
mov
stos
addl
iret
push
mov
or
mov
adc
or
pop
xor
xchg
sti
aam
push
inc
jmp
jl
mov
cli
mov
adc
mov
jns
sub
jg
fs
idiv
cs
out
push
jg
jno
jnp
in
xor
cli
jmp
add
xor
pushl
xchg
inc
hlt
mov
js
cmp
or
movsb
or
or
js
inc
ficoml
xchg
inc
dec
jnp
cmc
jne
xchg
je
ret
enter
mov
out
insl
out
cwtl
add
sarb
stos
add
call
test
jb
adc
jle
add
sbb
push
call
dec
adc
push
xchg
loop
cmc
jae
pop
xchg
negb
xor
mov
jb
cli
bound
adc
jns
add
cmpsl
or
ljmp
pushl
or
sti
sub
out
roll
loop
pushl
sar
pop
cmpsl
in
aas
jno
out
ja
jnp
jge
ds
jno
aas
in
das
jg
imul
mov
cs
pop
stos
ljmp
lret
cs
loop
std
pushl
ljmp
add
xor
mov
add
or
ss
add
lcall
add
adc
gs
push
xor
mov
lock
mov
call
cmp
sbb
inc
jno
test
repnz
call
lock
call
js
add
add
sbb
xchg
jae
add
add
ja
shr
mov
fdivl
cld
les
mov
lcall
sub
addl
mov
call
sub
lret
jno
mov
out
test
jmp
mov
sti
aas
mov
and
jmp
in
out
jbe
out
imul
and
add
rclb
ss
xchg
push
sub
mov
and
inc
sub
pop
scas
call
xor
adc
sbb
xchg
xchg
cmp
jbe
pop
sub
cmc
cmp
or
cmc
xor
adcb
mov
inc
insb
out
xlat
or
or
clc
decl
push
push
cmpsl
push
adc
push
pop
fldt
dec
push
adc
inc
mov
insl
cmp
fwait
cmpsl
aaa
pop
nop
or
xchg
aaa
push
pop
inc
dec
mov
dec
mov
sub
add
cmpsl
push
mov
jno
xchg
or
cli
test
shlb
mov
ja
jne
fbstp
insl
iret
jbe
fldenv
mov
mov
jle
arpl
pop
rcr
pop
mov
addr16
dec
cmpsb
sub
in
sub
push
inc
loopne
clc
mov
xor
add
xor
or
fsin
pushl
and
jecxz
lcall
ja
in
cli
mov
je
inc
jns
jp
jl
mov
jg
repz
popl
push
cmpl
xor
adc
inc
add
inc
insl
pushf
sarl
fcomi
xcrypt-cfb
cmpsl
out
xor
jns
out
push
jns
sbb
js
iret
popa
shr
push
repz
lods
test
mov
xor
cmpsb
sarb
add
or
mov
xchg
cltd
pop
rolb
jae
sbb
lock
fstps
add
je
je
repnz
sti
xor
arpl
add
notl
js
sahf
add
or
jp
cli
hlt
sahf
add
shll
mov
pop
lds
aaa
outsb
ljmp
data16
add
into
mov
sub
mov
sub
outsb
xchg
pop
cld
shrl
inc
cli
daa
gs
hlt
into
add
ds
bound
cmpl
cmpl
adc
add
scas
pop
cmc
jne
gs
xor
test
fwait
sti
pushl
xchg
mov
add
je
je
dec
dec
ficoml
push
mov
sbb
lea
dec
cmc
adc
xor
dec
push
xchg
mov
int
sbb
adc
inc
cli
mov
or
jno
jg
xchg
pop
in
dec
decb
add
adc
andb
test
insb
or
jne
or
dec
push
shlb
push
cli
lret
into
dec
in
sti
rolb
jno
repz
clc
movsb
jp
insb
rorb
mov
cmpl
inc
in
pop
inc
outsb
icebp
or
in
jp
popf
addr16
ljmp
jle
inc
repnz
stc
pop
add
push
jg
pop
add
sub
insb
pop
add
xchg
insb
mov
jne
test
lret
mov
and
ret
cmp
dec
rolb
gs
jmp
test
int
mov
jbe
mov
jnp
idivl
fwait
adc
adc
add
dec
add
dec
roll
iret
andl
inc
push
xor
lret
adcl
pop
ljmp
add
insb
dec
scas
push
jnp
adc
shlb
add
pop
sbb
in
or
out
jb
add
fidivl
xor
std
cmp
js
jno
js
sub
push
bound
pop
sar
pushf
lret
in
or
addr16
add
push
xor
aad
or
stc
mov
test
jb
xchg
rorl
dec
aam
dec
push
dec
dec
push
xlat
js
mov
cmp
js
cwtl
cld
test
pop
sub
jne
bnd
js
push
xlat
js
incl
sbb
cmovo
popf
mov
divb
repnz
cli
mov
mov
fs
or
push
repnz
dec
xorl
sbb
dec
decl
mov
push
cmc
jne
repz
jne
push
mov
inc
je
lock
mov
mov
dec
inc
sti
and
xchg
pop
aas
jae
fmul
sti
shlb
je
push
jge
imul
inc
je
faddp
pminsw
sti
clc
movsb
jbe
jns
repnz
cli
push
xor
inc
jno
ret
ds
mov
mov
into
dec
inc
add
and
xor
jl
push
inc
jno
xor
test
add
inc
mov
xor
pop
inc
aas
ds
in
rcl
sbbb
add
mov
adc
mull
xor
bnd
push
arpl
daa
insl
add
xchg
add
add
data16
add
add
mov
fldl
pusha
in
or
jo
jmp
out
jo
mov
sarl
icebp
jne
icebp
imul
add
sub
insb
or
or
mov
ja
fdivp
cmp
sarb
icebp
clc
push
jp
sub
pop
mov
mov
out
insl
in
jne
jmp
clc
mov
test
imul
je
repnz
clc
push
and
hlt
or
sub
sbb
out
pop
sbb
addr16
clc
jno
repnz
cli
push
pop
data16
fbstp
push
inc
fadds
jne
dec
in
sbb
pop
push
jmp
mov
addb
push
inc
mov
je
and
jmp
add
je
or
xor
inc
sbb
push
aam
mov
add
out
jmp
stc
lods
ror
lods
mov
je
pop
sbb
daa
ljmp
ja
idivl
lds
iret
addb
jne
pop
in
sbb
imul
lcall
lods
lcall
mov
sbb
lods
sbb
movsl
sbb
add
sbb
jns
addr16
cli
xor
xchg
and
sbb
or
and
sbb
sbb
adc
and
sbb
icebp
inc
sbb
cmpsb
scas
mov
ljmp
xor
sub
jno
jns
jl
mov
jecxz
jae
add
in
repz
pop
addr16
mov
or
add
sub
scas
jns
jns
subl
dec
jp
or
pop
jbe
and
push
inc
sub
std
call
aaa
cwtl
repz
mov
repz
stos
and
aaa
push
hlt
enter
int3
aaa
arpl
add
mov
hlt
aaa
jg
clc
aaa
xchg
fdivl
xor
aaa
insl
hlt
in
fs
in
add
mov
adc
and
jo
and
sub
orl
imul
and
arpl
pmaxsw
add
jb
subb
add
inc
cli
mov
je
jle
inc
stc
and
add
scas
push
sbbl
insb
jp
js
addl
add
imul
cli
call
aaa
add
push
das
clc
cli
jae
in
divb
jb
and
in
ret
add
jmp
test
or
or
cmp
add
lds
add
icebp
or
fdivr
jg
rolb
test
inc
pop
add
adc
or
mov
push
adc
push
adc
cmp
adc
ja
incl
sub
inc
pop
sub
push
pop
shrb
and
stos
push
xorps
jp
jl
add
int3
icebp
cmc
pushl
jne
in
push
jno
jle
js
jp
push
inc
scas
pop
es
icebp
sbb
std
pushl
cld
mov
jbe
rolb
jno
cmp
jo
cmpsb
outsl
jle
add
ljmp
cltd
ret
mov
dec
pop
xchg
fidivrs
cli
mov
iret
repnz
je
pop
add
push
jno
cs
mov
inc
lea
test
add
sub
pop
adcl
stos
pop
dec
les
idivb
push
mov
ja
pop
cltd
jne
or
cmpsb
cmp
mov
out
push
outsl
enter
or
aam
sub
in
or
es
add
jno
loopne
sbb
mov
and
mov
mov
loopne
mov
stc
xchg
and
mov
mov
in
add
ljmp
jb
cmp
in
cli
pop
jmp
mov
sub
sbb
sbb
sbb
leave
cs
test
idivb
or
ljmp
xchg
mov
inc
testb
test
data16
fisubrs
mov
ss
jb
xchg
jb
xchg
jns
xchg
mov
cmc
insl
js
neg
rcll
arpl
sti
addl
add
add
cmp
adc
cmp
inc
icebp
aas
or
sbb
push
fs
push
add
xlat
inc
setne
and
xchg
cmp
add
cmp
adc
or
fadds
add
dec
inc
push
decl
add
dec
jl
or
pusha
add
push
std
add
add
cmc
decl
dec
syscall
out
lcall
inc
add
repz
cmp
and
ljmp
pop
add
pushl
fldcw
jle
add
dec
inc
jo
pop
shrb
jg
data16
test
lahf
add
or
stc
out
ret
ror
jo
dec
push
push
mov
dec
ficoml
push
loopne
imul
mov
imul
jo
push
xchg
push
jg
or
and
dec
mov
inc
popa
mov
add
iret
add
mov
outsl
lret
mov
xor
push
ja
jmp
cmpl
jmp
sti
mov
inc
ret
xor
jp
adc
lret
hlt
aas
xor
jmp
cli
mov
out
leave
xor
add
or
insl
jns
sub
out
mov
fsubrp
jnp
lods
jmp
mov
dec
jnp
adc
das
push
cmpsb
ljmp
pop
js
std
test
add
mov
xor
jno
out
jb
xchg
pop
sbb
in
jno
outsb
fnsave
lea
dec
loop
scas
data16
sub
or
or
out
sbb
call
xchg
ss
cmp
inc
int3
fs
imul
or
pop
xor
cmpsl
lods
shll
fs
imul
mov
add
sti
andb
push
add
movb
std
daa
jmp
enter
ljmp
sbb
dec
xor
pop
jl
or
add
push
and
add
adc
jns
add
test
add
cmp
xlat
orl
jp
or
incl
mov
fdivrs
repnz
aaa
cmpsl
outsb
inc
sbb
cmp
outsb
sub
or
stc
jae
movsb
outsb
sbb
push
add
inc
mov
hlt
pop
cmc
pushl
les
jnp
leave
shrl
les
jae
int
mov
add
mov
les
jno
rol
dec
pop
out
xchg
les
jge
and
sub
mov
imul
sbb
pushl
xor
inc
xchg
adc
scas
lcall
pop
inc
push
add
lret
pop
inc
inc
xchg
inc
jo
pop
add
jmp
add
leave
repnz
sarb
shrl
and
or
pop
repz
imul
loop
imull
insb
ds
call
mov
daa
aad
jp
jg
jno
imul
or
fdivr
xchg
imulb
stos
adc
jno
imul
add
sbb
jmp
add
stos
call
stc
and
add
repnz
pop
lcall
jmp
jae
sbb
mov
adc
lret
jp
call
pop
cli
jg
outsl
jmp
scas
add
jb
xor
add
hlt
sbb
das
sub
adc
loope
call
jno
and
mov
adc
dec
mov
xor
jmp
das
lods
push
add
mov
imulb
jb
ret
or
jmp
jl
add
imul
push
cmp
jg
add
jg
pop
add
dec
out
dec
pextrw
add
inc
push
dec
fistpll
out
lds
or
add
sti
cmp
pop
adc
cmp
lcall
jne
fistpll
and
fnstsw
and
pop
rolb
pop
mov
or
inc
leave
mov
addb
add
jno
adc
inc
add
xchg
or
imul
lcall
je
inc
inc
jg
arpl
psllw
jae
jmp
inc
inc
jo
pop
pop
mov
pop
fmull
test
loopne
or
push
rol
add
pop
and
dec
add
jns
jne
inc
jae
loop
and
mov
popa
repnz
cli
cs
in
sub
add
in
push
push
vhsubpd
test
cli
imul
fists
jmp
add
pop
or
bnd
add
int
imul
ret
iret
xchg
jmp
jle
pop
mov
and
jmp
shrb
jnp
sub
ret
pop
or
add
sbbl
icebp
jle
pop
pop
imul
int
add
cmp
push
mov
pop
inc
xchg
add
inc
push
lret
or
xchg
gs
xchg
mov
and
add
jmp
pop
fdecstp
or
inc
call
jb
lea
mov
icebp
jno
scas
leave
fisttps
addr16
jle
and
das
addr16
inc
call
jb
addb
add
andb
out
xchg
fwait
push
mov
add
pop
add
call
or
jmp
mov
pushl
jno
add
enter
and
test
xchg
fdivl
cmp
jne
add
push
sbb
mov
rolb
mov
sub
mov
loop
pop
hlt
inc
bswap
inc
decl
inc
add
mov
mov
pop
push
add
fiadds
add
pushl
mov
add
icebp
mov
iret
cmpl
cmp
add
decb
ljmp
testb
ds
ljmp
cli
mov
cmp
cmp
cltd
sbb
pushl
mov
xchg
xor
and
mov
pop
imul
gs
imul
imul
call
pop
sub
test
add
jle
sub
xchg
aaa
sub
gs
out
or
pop
call
adcb
out
fsts
stos
add
leave
in
test
call
sub
test
ret
mov
insb
jle
pop
call
ss
in
mov
shll
cmc
and
out
sbbl
in
imul
repnz
jmp
pop
cltd
add
add
ret
in
test
ljmp
lock
add
shlb
repz
jle
jb
imul
mov
add
jb
inc
ljmp
jb
lds
jle
jb
push
imul
add
jmp
sub
add
jb
testb
jge
in
add
ret
add
out
addr16
cli
imul
mov
and
jb
xchg
xor
adcl
xor
and
jns
enter
mov
pop
je
push
push
nop
fwait
or
jg
cltd
push
bswap
fsts
in
fs
add
daa
pop
cli
decl
or
sbb
add
mov
xorb
test
cli
incl
jmp
jae
jp
js
adcl
pop
test
or
add
push
adc
add
inc
fs
xchg
rolb
mov
sti
jno
xlat
dec
xchg
sahf
lds
push
imul
test
push
adc
xor
sub
movsl
add
mov
add
stc
mov
jle
xchg
jbe
lds
sti
cmpsl
cmc
and
rol
and
xchg
cmpsb
push
pop
jle
inc
repnz
jmp
dec
inc
jo
push
outsb
outsl
sar
call
aas
or
fsubs
test
repz
das
daa
add
jle
pop
incb
jmp
push
aaa
push
call
inc
sub
adc
push
adc
adc
adc
add
add
mov
jge
mov
inc
dec
out
call
dec
xor
jecxz
or
jecxz
js
push
xor
push
stos
add
jno
stos
add
imul
inc
jp
pop
insl
pop
push
jbe
call
adc
mov
add
iret
or
push
pushl
sub
dec
div
int3
call
int3
cmc
or
push
cli
jmp
imul
outsl
jns
add
insl
fiadds
xlat
push
pushf
adc
mov
hlt
pop
das
push
pop
push
cli
jmp
mov
or
out
xor
jmp
adc
lock
test
insl
add
scas
test
or
jl
cli
jmp
inc
clc
add
or
stc
pop
lock
adc
inc
ljmp
dec
ljmp
sbb
add
or
incl
jp
or
pop
test
cmc
lcall
decb
dec
ret
cld
dec
movb
jmp
testb
orb
mov
sti
incl
jp
or
pop
test
mov
lcall
mov
cld
decl
jecxz
add
jg
pusha
or
lretw
sar
inc
repz
fmuls
test
imul
push
addr16
imul
jg
pop
imul
imul
jmp
cli
repz
test
add
push
xlat
pop
sub
ret
adc
loope
add
mov
andb
imul
or
add
lds
imul
insb
add
push
mov
mov
push
mov
cmp
add
icebp
pop
inc
out
out
jle
fsubrl
jno
jmp
lds
aaa
or
int
mov
add
jns
xlat
add
xlat
jl
inc
dec
add
or
mov
out
jno
add
dec
mov
in
jno
ljmp
sahf
pop
ret
sbb
jle
add
jb
mov
add
mov
cs
lods
mov
mov
sahf
int3
sbb
int
bound
push
adc
push
sbb
push
and
cli
mov
add
jb
mov
sti
sarl
dec
insb
jl
jmp
add
jg
js
scas
jp
push
fnsave
add
dec
or
jmp
add
psubsw
cmpsl
lcall
mov
divb
jge
cmp
add
test
xchg
das
jmp
roll
mov
push
movsb
add
shl
xchg
mov
add
adc
out
add
std
jg
sbb
std
ljmp
push
testb
mov
inc
loopne
ds
mov
je
jl
and
imul
decl
in
add
incb
dec
aaa
xchg
rorw
push
faddl
loop
mov
xchg
push
je
rcl
and
xlat
and
fadds
mov
vmovhps
xchg
pop
push
mov
xor
or
out
or
lahf
mov
jg
push
add
cli
scas
lahf
add
cwtl
xchg
sbb
pop
xchg
mov
add
xchg
loop
and
and
into
dec
inc
jnp
pop
mov
sub
je
mov
or
rorl
test
or
cwtl
push
imul
xchg
call
int
push
pop
push
add
outsl
mov
inc
sub
popa
jnp
and
ljmp
and
xchg
push
outsb
ret
test
push
jnp
and
mov
sbbl
push
xor
aas
aam
out
repz
loop
xor
ds
jp
icebp
fucomip
es
into
jnp
xchg
dec
outsb
out
rorl
xor
and
and
add
mov
pop
sbb
test
pusha
and
test
adc
subl
test
jle
xchg
and
xor
scas
lea
cmc
mov
leave
in
mov
push
jb
dec
iret
lods
roll
imul
test
test
dec
cli
push
and
add
cmp
add
cld
and
dec
mov
jl
lcall
mov
pop
mov
inc
or
prefetch
or
jl
adc
movb
sarb
or
jmp
sarb
or
jmp
mov
add
add
cmpb
and
add
inc
pop
add
push
sbb
test
in
cwtl
or
push
imul
out
and
push
push
mov
ss
cmpsl
mov
jns
sbb
pop
pop
mov
cmc
ss
mov
pop
out
repnz
out
out
mov
aas
jmp
add
out
pop
xor
in
cltd
add
and
and
or
add
mov
sbb
jmp
jmp
in
push
xacquire
rcl
in
push
push
cli
out
add
mov
cmpsb
add
xor
add
xor
add
xor
add
xor
add
xor
add
movsl
cs
cs
das
es
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
sub
aam
jne
aad
jb
aad
jb
aam
jb
aam
jb
aam
jb
aam
jb
aam
jb
aam
jb
aam
jb
leave
stos
add
shrl
jb
leave
stos
jb
leave
stos
jb
aad
jb
stos
jb
sub
sub
sub
leave
sub
aad
insl
dec
sub
fldt
insl
imul
sub
xlat
sub
aad
insl
jne
sub
roll
pop
add
dec
add
dec
add
lcall
xlat
or
imul
xlat
sbb
xchg
xlat
sbb
xchg
xlat
or
xchg
xlat
or
dec
mov
mov
sub
mov
push
getsec
sub
gs
pushl
cmpb
cmpb
mov
out
je
jbe
shlb
cmpsl
and
dec
jns
dec
std
jbe
pop
dec
jns
and
push
cmp
xadd
scas
sbb
push
add
dec
lock
add
adc
push
out
mov
clc
mov
andl
das
jns
shlb
jne
mov
sbb
call
das
mov
pop
add
loope
add
shlb
mov
jno
les
jmp
sbb
add
xlat
adc
add
ja
inc
sahf
test
xor
jns
sti
mov
call
pusha
addb
add
scas
insl
push
xchg
or
and
jmp
es
pop
inc
mov
fldenv
inc
mov
es
pusha
lea
mov
int
fldl
jb
jb
jbe
insb
inc
loop
xchg
sub
jecxz
pop
mov
clc
push
sub
aas
push
in
movsl
fcom
push
arpl
inc
pushl
ret
dec
gs
fmuls
in
icebp
jnp
xchg
mov
or
jmp
gs
mov
in
imul
std
add
inc
dec
mov
xor
in
add
in
mov
mov
jge
inc
rorl
mov
mov
stos
call
xchg
sub
push
push
jb
je
in
dec
je
ret
lods
pop
insb
mov
pop
ss
shll
test
aaa
sub
jge
cmc
aaa
out
jle
pop
cld
test
jl
dec
jge
xorl
lods
insl
inc
or
cmc
addl
add
jne
xchg
lcall
loop
enter
fildll
cmc
jne
mov
enter
pop
mov
or
ffree
out
je
push
mov
mov
add
jb
cli
call
mov
cmovo
inc
cld
int
add
pushl
mov
add
out
pop
incl
cli
dec
xchg
or
shll
push
test
hlt
repz
mov
pop
decl
fcomi
out
loope
dec
out
dec
cli
iret
shr
and
mov
pop
flds
inc
dec
mov
dec
cli
dec
pop
xchg
pusha
shr
sbb
push
add
xchg
out
sbb
jbe
adc
xlat
inc
cli
add
add
dec
jbe
cmp
leave
dec
in
mov
mov
xchg
add
mov
xor
mov
int
pop
ja
pop
cmc
hlt
loop
mov
imul
dec
jb
fdivrl
pop
and
cmc
popa
fldcw
sar
ds
inc
cmpsb
enter
aas
cmp
or
mov
stos
int
dec
cmp
inc
sti
popl
fs
daa
mov
pusha
pop
sarl
mov
roll
mov
xchg
mov
cli
fdivs
jecxz
ja
lahf
pop
mov
jne
fwait
mov
daa
pop
aad
and
lods
test
pushf
mov
xor
int3
mov
sub
out
test
mov
pop
out
add
cmp
jne
inc
rorb
cli
jmp
in
fmuls
push
pop
int
jne
fwait
dec
add
jne
sub
push
out
inc
lret
mov
mov
dec
hlt
movsl
pushf
cwtl
fstps
pusha
jg
push
lret
outsl
in
mov
jecxz
mov
in
roll
in
loopne
clc
clc
movaps
loopne
mov
js
movsb
mov
mov
sarb
xor
gs
inc
xchg
mov
jge
adc
cmc
gs
inc
push
mov
fs
aad
imul
int3
repz
movsl
pushf
mov
adc
pusha
cwtl
cld
inc
jmp
adc
mov
loopne
jno
add
ss
bound
jecxz
pusha
out
jb
mov
add
in
rorl
sub
pushf
aaa
adc
mov
loopne
stc
lcall
popa
pop
push
in
mov
adc
lds
adc
stc
mov
leave
int
popf
icebp
sbb
push
leave
shll
mov
mov
lock
mov
lds
mov
sbb
std
pushl
rolb
or
jno
dec
add
divb
test
cmp
jle
mov
sub
subl
inc
dec
pop
inc
lahf
int3
and
call
dec
cmc
inc
push
cmc
out
inc
sbb
mov
stos
dec
cmpsb
add
arpl
or
pop
xor
mov
orb
add
cmpsl
add
cs
shl
fs
push
mov
adc
mov
mov
mov
out
sub
mov
rcrl
pop
daa
ja
or
out
and
pop
icebp
xchg
lock
pop
mov
jne
dec
ret
lret
jp
pop
jbe
fistl
cwtl
ja
test
mull
mulb
negb
sti
or
test
les
rcll
daa
push
jmp
add
repnz
rcll
inc
notl
shr
dec
je
push
mov
dec
int
lcall
mov
lods
das
lret
aam
nop
xchg
int3
xchg
push
push
sbb
dec
hlt
popf
cs
out
negl
cwtl
mov
jmp
int
into
adc
popa
lcall
in
push
repz
sbb
cmp
clc
mov
xor
mov
xor
fsubl
cwtl
xchg
shr
sub
das
fidivrs
fdivl
push
mov
xlat
xor
ss
jb
jbe
rorl
jno
jnp
lock
add
mov
mov
sahf
jno
xor
ss
out
bound
cli
insb
scas
cli
pop
out
aas
jno
dec
mov
jmp
jl
mov
stc
decl
mov
dec
push
adc
cli
fs
inc
jae
mov
testl
inc
push
call
jmp
jno
enter
dec
dec
mov
cmp
rcll
outsb
shr
mov
jbe
cmc
pop
and
iret
sbb
out
test
dec
std
test
imul
cmc
pusha
repz
pop
shr
in
mov
sub
inc
push
out
repnz
sub
subl
imul
jmp
sub
out
xchg
inc
test
icebp
mov
mov
mov
leave
stos
jmp
jb
ret
cmp
and
cmp
movsb
dec
lret
mov
negl
or
add
test
push
jae
jns
call
jne
add
mov
cli
jmp
inc
xorl
sub
movsl
adc
scas
adc
fidivl
cmp
jmp
sub
test
fdivr
mov
jns
push
lock
decl
mov
mov
dec
adcb
call
or
pop
mov
mov
pop
mov
add
orb
mov
add
lcall
mov
mov
lds
add
das
filds
adcl
jns
lcall
rolb
out
lea
cmp
cli
test
out
aas
jno
or
pop
orb
inc
cli
inc
lahf
inc
adc
ss
jl
int
add
jp
xchg
repnz
mov
iret
dec
cli
xchg
add
sbb
add
daa
push
add
push
cmpxchg
jns
in
fadds
mov
sub
hlt
stos
data16
pop
scas
push
dec
jno
jae,pt
sbb
add
cli
rcrl
push
inc
imul
xor
cltd
add
ret
dec
aad
inc
cmp
aas
jmp
jno
sbb
push
insb
inc
lret
daa
hlt
les
aaa
push
inc
pop
inc
pop
xor
inc
fwait
test
andl
js
iret
sub
xor
inc
mov
push
or
addl
inc
inc
cmp
xorb
ds
sbb
sub
and
inc
mov
aaa
fistpl
inc
jmp
mov
mov
push
scas
stc
mov
test
out
push
cmp
add
mov
shl
iret
pop
xor
out
cmc
cmp
bound
addr16
js
push
test
imul
negb
xor
mov
cli
push
cmp
pop
stc
mov
mov
cli
out
and
shll
mov
jb
add
mov
jl
add
ret
add
rorl
stos
clc
call
push
mov
test
mov
dec
mov
pop
ret
stc
in
sti
lcall
push
test
push
loop
pop
shl
jne
rolb
shll
add
adc
and
ret
pusha
inc
clc
jmp
mov
pop
xchg
mov
out
dec
add
push
add
adc
jmp
div
pushl
inc
je
mov
cmp
push
in
adc
or
cli
or
inc
jae
stos
mov
sti
fs
aas
je
mov
cmp
out
test
aaa
aas
adc
cmp
jae
pop
cmp
jns
sub
mov
shrl
hlt
and
das
jle
aaa
rcll
push
mov
mov
repz
ret
test
lcall
add
jno
imul
int
mov
shl
lods
jb
cmp
cld
or
xor
fmulp
arpl
loop
xor
aad
stos
in
inc
inc
cmp
in
aas
repz
mov
sbb
jno
fldl
or
jbe
mov
sti
and
mov
xor
hlt
mov
or
arpl
cs
call
hlt
push
xchg
arpl
xor
out
and
dec
push
dec
les
cli
xor
test
xor
inc
jmp
inc
ss
scas
cmpsl
jp
mov
pop
sar
test
sahf
or
fidivl
xor
jbe
ss
sar
sub
pop
cld
push
retw
cli
aaa
lret
lahf
mov
xor
ss
shlb
rorl
or
pushf
es
xchg
mov
mov
push
sbb
test
add
or
add
jbe
test
decl
test
push
jg
je
sar
gs
cmpl
divl
test
lea
dec
call
or
or
shl
pop
xor
mov
xor
cmp
mov
push
or
add
adc
jne
xchg
mov
add
cmp
dec
stc
push
mov
push
cld
lods
cs
and
outsb
jmp
add
mov
mov
fwait
ret
decl
out
aas
jno
add
sahf
inc
xchg
nop
fucomp
in
xchg
mov
push
jmp
in
fdivl
dec
push
mov
xor
fistpl
pusha
cmp
mov
cmp
push
inc
popa
add
add
xchg
xchg
and
sti
push
lock
jmp
cmc
mov
xlat
daa
mov
and
out
jb
call
jb
jo
jle
mov
xchg
stc
mov
push
jmp
jb
xchg
sbb
scas
movsl
jnp
cld
or
in
lods
movsl
dec
ss
cmp
xor
movsl
xor
and
add
shl
mov
cmp
stos
or
and
rolb
mov
fmuls
in
cmp
mov
dec
jnp
sti
scas
cltd
jns
icebp
sbb
lea
sub
shrb
or
divl
out
jp
ret
xchg
inc
cwtl
add
xchg
testb
mov
ljmp
cli
xor
sub
add
aas
les
pop
push
add
ljmp
jp
movaps
fwait
enter
or
jne
outsl
inc
out
and
in
add
xorl
dec
pop
jnp
inc
pop
ss
mov
push
xchg
jl
pop
lahf
inc
push
add
dec
add
mov
outsl
mov
push
loop
dec
ljmp
pop
push
xchg
jmp
sbb
inc
cli
or
bound
mov
cli
fwait
xor
out
lcall
inc
enter
mov
inc
pop
cmp
cli
jae
pop
jmp
or
ja
or
jno
xor
or
mov
inc
out
push
aas
cmp
and
sbb
push
adc
xchg
jle
dec
xchg
xchg
xor
adc
pop
jg
movsl
das
test
or
or
test
out
hlt
std
xor
mov
sub
add
adc
ficoms
cmp
and
imul
cmp
cmp
jnp
stos
or
mov
add
inc
fmuls
jno
sub
sub
mov
inc
loopne
movsb
jns
test
xchg
shl
das
arpl
jno
shll
sub
arpl
and
pop
mov
mov
sub
shll
add
sbb
in
lock
call
mov
dec
insl
inc
xchg
incl
jnp
test
pushf
insb
out
movsl
insb
aas
mov
aaa
mov
dec
dec
rolb
sahf
in
cmpsb
testl
add
jmp
sti
mov
adc
sbb
jmp
add
fisttps
insb
fsubp
dec
movb
jecxz
es
call
popf
test
push
cmpsl
jae
out
or
cli
jmp
dec
sub
jmp
cmpb
cmpb
loope
dec
unpcklps
adc
repnz
and
cmp
aas
add
inc
push
mov
jmp
je
add
pop
add
cmc
test
ljmp
push
outsb
xchg
or
mov
into
insl
push
repnz
outsl
cmc
ja
ja
push
aas
pop
inc
mov
orl
icebp
jle
xor
jns
test
inc
js
add
enter
jno
lahf
xchg
in
cmp
scas
or
add
cli
in
fsubrs
dec
add
mov
jbe
call
inc
adc
jge
insb
incl
sbb
mov
mov
dec
push
outsb
add
jns
xchg
mov
add
xor
push
ljmp
pop
repnz
cli
jae
add
fbstp
mov
mov
pop
mov
mov
add
stos
adc
xor
jno
inc
inc
sahf
sub
leave
mov
mov
jne
mov
insl
mov
lock
adc
out
ret
cmp
xlat
cltd
stos
mov
rcrl
in
aas
pop
lcall
ja
movsb
pop
sti
add
clc
leave
dec
mov
shrb
lods
and
out
mov
imul
stos
fisttps
cwtl
push
jmp
stc
mov
jle
lahf
mov
sbb
mov
ret
jo
mov
cmpsl
mov
sub
movsl
push
sbb
adc
call
es
mov
mov
lret
push
shrb
jle
ja
pop
stos
imul
jmp
pop
rclb
adc
icebp
rep
inc
xor
addr16
push
gs
imul
int3
cli
cmc
call
repnz
add
fcmove
add
mov
add
cltd
add
push
cs
pop
aas
in
adc
js
add
dec
mov
cmp
inc
cld
mov
add
xchg
pop
inc
lea
sti
pushl
mov
test
out
fs
jmp
push
imull
js
jne
adc
hlt
mov
dec
jns
sbb
shl
cmp
xor
inc
pop
jnp
jmp
jecxz
add
repz
adc
mov
sub
or
fldl
add
repz
or
loope
add
push
hlt
pop
into
sub
sub
sbb
test
cmc
push
cli
repnz
shrl
incb
pop
pop
mov
stc
inc
imul
jno
sub
add
sub
sti
or
adc
es
scas
add
rcrb
and
jge
and
inc
push
test
jp
xor
jmp
pop
into
jnp
mov
lcall
outsb
int
pop
cltd
adc
add
ds
outsb
scas
and
pop
lret
stos
das
jmp
xor
push
sbb
jge
cmc
push
subl
jp
loopne
lret
mov
push
mov
xor
int
fsubs
sar
stos
mov
lods
adc
jne
fiadds
out
insl
sub
inc
inc
int
inc
inc
scas
cmp
insl
jae
icebp
pop
es
sub
rorb
pop
push
adc
jne
mov
jns
call
popa
or
sti
mov
xchg
lcall
mov
lods
and
jmp
fimuls
mulb
repnz
and
add
jb
xchg
fiaddl
lock
incl
or
lcall
add
pushl
repnz
push
xor
decl
push
leave
sbb
in
push
cmp
sbbl
cld
fdivrs
jo
inc
cli
add
repnz
push
outsb
decb
addl
add
pop
outsl
mov
mov
cmp
inc
dec
xchg
decl
dec
incl
add
cmp
add
out
mov
add
cli
push
add
inc
xor
sbb
xchg
jmp
sub
lods
mov
xchg
subl
add
out
cmp
jne
xlat
xchg
pop
aad
inc
xchg
lods
pop
mov
inc
or
dec
arpl
jae
popf
les
cmp
mov
call
loop
xor
push
repnz
jmp
sub
add
add
shl
mov
fildl
mov
mov
out
cld
call
xor
mov
push
cmp
sti
stos
rcrb
dec
ja
jp
cld
outsl
int
jne
clc
push
inc
roll
xor
push
adc
lret
or
adc
push
sti
sub
add
add
inc
test
out
sub
pop
aaa
or
pop
and
adc
rol
cmp
fcomi
repnz
jmp
dec
mov
movsb
andb
xor
flds
test
sub
jns
loope
pusha
add
sub
inc
adc
icebp
mov
mov
push
inc
jmp
xor
sub
mov
or
jnp
pop
pusha
cli
cld
mov
lods
sbb
jb
jnp
std
sahf
jns
ret
cmc
jno
add
aas
in
fdivr
pop
pusha
mov
inc
add
pop
push
add
dec
stc
incb
sbb
in
addl
cmpl
lock
neg
adc
add
leave
ficompl
push
xchg
clc
jns
and
addl
popf
ds
sahf
cmp
popf
ds
xchg
jle
cli
mov
notl
add
add
pop
adcl
pop
test
add
add
lahf
and
icebp
mov
sbb
fadds
dec
jg
mov
lods
cmp
pop
pop
into
out
add
cli
cli
add
push
mov
es
addr16
arpl
sbb
ljmp
mov
adc
cli
jl
adc
add
and
or
mov
mov
lret
jae
adc
add
xchg
icebp
out
shll
jle
fwait
xor
and
push
add
sub
pop
push
aas
mov
test
or
pop
mov
xchg
or
or
out
mov
xchg
jle
mov
leave
add
jmp
add
sahf
adc
inc
sub
mov
sub
adc
inc
jmp
sub
enter
inc
sub
inc
loop
xor
sti
sub
sbb
call
mov
sbb
add
jb
push
jo
adc
mov
insl
cld
es
cmpl
add
pop
xchg
push
sbb
hlt
or
out
push
adc
sbb
sbb
xchg
or
dec
ja
adc
jne
ret
in
mov
jae
in
es
aas
mov
call
out
and
sbb
push
adc
dec
add
les
std
xchg
pop
addl
cld
pusha
rcrl
xchg
divl
pop
sahf
call
cli
dec
pop
scas
mov
call
jnp
and
je
xchg
dec
add
add
jp
pop
adc
lds
push
aaa
push
cwtl
inc
loopne
xchg
in
call
sub
dec
clc
incl
fiadds
xorb
add
cmpsl
fsqrt
cmpsb
sub
aas
fidivrs
cld
in
dec
cli
mov
and
xchg
mov
or
stos
add
retw
imul
mov
hlt
imul
sub
and
cs
cli
add
movsb
add
push
adc
mov
push
inc
or
gs
mov
sub
sub
fistl
jnp
and
jmp
adc
adc
pushf
add
ss
mov
add
outsb
mov
sbb
add
out
call
fwait
push
xchg
call
sbb
push
es
sar
xchg
inc
dec
dec
pop
sbb
jp
sbb
xorb
adc
add
xchg
pop
es
adc
and
and
sbb
pop
dec
cmc
xor
jmp
sub
sbb
jbe
sbb
jns
adc
in
subl
sbb
sbb
repz
and
push
xchg
loope
xchg
sub
sbb
sub
and
lea
push
adc
xorb
add
xchg
sarb
push
cmc
ud2
dec
shl
lods
out
xchg
sbb
repnz
push
loopne
add
xchg
lea
push
dec
mov
or
adc
adc
testb
call
or
push
push
rcl
cld
into
lea
std
pop
cwtl
add
in
orl
mov
xlat
addl
push
pop
add
mov
out
pop
jecxz
push
and
or
enter
push
xchg
mov
jmp
inc
movsl
cmp
in
fidivs
orl
aas
sbb
push
add
nop
ljmp
pop
sub
or
jae
jno
add
mov
lods
add
inc
movsb
pop
and
adc
add
or
enter
fldcw
and
andb
data16
sub
movsl
lods
or
hlt
xchg
fildl
xor
gs
push
pop
pop
mov
xchg
aaa
mov
popf
sub
xchg
jg
and
add
xor
lods
xadd
adc
addr16
mov
ja
lock
aam
and
shrl
pop
jno
shl
adc
push
jno
cwtl
mov
and
sub
or
cmpsl
and
in
imul
jo
loop
push
add
imul
add
cltd
and
mov
mov
ds
xchg
imull
mov
and
mov
sub
add
add
adc
mov
xchg
jp
sbb
pushf
mov
in
pop
divl
sahf
std
and
mov
pusha
push
inc
or
jg
leave
or
icebp
fdivr
rorb
mov
mov
movsl
lahf
cmp
test
addl
jp
aas
jmp
imul
popa
jb
shll
xchg
std
popa
loop
fwait
jg
mov
mov
pusha
xor
adc
jl
or
inc
pop
xchg
lret
mov
mov
in
test
sub
xorl
repnz
loope
dec
stc
or
push
clc
and
push
ljmp
incl
add
jne
fbstp
ljmp
call
inc
mov
out
lods
add
add
mov
inc
add
push
out
pop
and
bound
in
std
popl
je
data16
and
xor
mov
mov
test
scas
aad
stc
add
xor
jmp
stos
jno
out
dec
and
cli
pop
mov
inc
ss
cs
add
sbb
fcmovne
out
push
adc
push
sbb
repnz
inc
jae
mov
cli
pop
popf
inc
je
mov
data16
dec
cli
popa
push
ds
lahf
outsb
dec
mov
mov
jno
jmp
fisubrl
mov
add
cmp
inc
dec
imul
fcoms
jns
stos
movsl
cmpsl
orps
out
ds
inc
jnp
test
jno
xchg
mov
call
push
add
push
xor
cltd
gs
pop
lcall
sub
adc
jle
sub
add
jmp
add
xchg
js
fcomps
mov
mov
ret
cmc
repz
or
incb
data16
jg
or
dec
push
inc
xchg
ret
in
mov
arpl
add
je
out
out
fimuls
addr16
cli
into
in
xchg
pop
in
in
cs
mov
xchg
mov
in
cli
sahf
clc
mov
add
loop
cli
lcall
cli
cld
jle
cli
lcall
pop
push
jmp
out
mov
add
dec
adc
jns
incb
std
test
or
xorl
cmp
repz
call
cmpl
push
xchg
sarb
and
dec
mov
pushw
lea
repz
cmpsl
or
adc
cwtl
cld
test
jl
jg
cld
cld
str
imul
push
mov
fimuls
mov
and
add
add
pop
xchg
add
push
xor
sub
out
mov
cld
or
xlat
pushl
sar
inc
mov
cli
es
cmpl
add
xor
imul
push
pop
pop
push
pop
ja
gs
lock
pusha
flds
test
sbb
push
in
das
push
cli
pop
mov
popa
sbb
jle
pop
add
sti
push
jle
cwtl
adc
nop
or
xchg
add
add
pop
in
add
add
xchg
popa
jge
shlb
mov
stos
add
add
xchg
btr
stos
insl
inc
dec
cwtl
add
movsb
shlb
mov
nop
push
lods
shlb
sbb
push
icebp
sub
psubusw
cmc
aas
pop
aad
loopne
jae
fadds
mov
pushf
sub
les
or
cmp
lods
insl
jge
xor
mov
sbb
add
pusha
add
push
pop
pop
xor
dec
add
jmp
movsb
cli
push
popa
sub
test
or
mov
pushf
out
cmpb
or
les
or
push
cmc
jl
cld
pop
or
out
cli
insb
shl
mov
mov
dec
lret
int3
push
adc
mov
cli
scas
add
jns
mov
or
pop
jmp
or
cs
cld
add
out
mov
xchg
jmp
dec
decb
mov
lea
std
scas
out
decl
mov
xchg
inc
imulb
adc
add
out
adc
addl
dec
fmull
add
add
ret
push
out
mov
mov
out
int3
addl
add
add
jmp
push
call
mov
je
push
cmp
popa
lahf
testb
mov
lock
inc
lret
cmp
inc
lret
sub
lahf
pop
push
cli
int
xchg
sbb
sahf
rorl
and
adc
or
orl
iret
fcomi
jle
andl
inc
jae
cli
cmp
jge
insl
movsb
inc
jns
sahf
xor
inc
sub
xchg
mov
ljmp
sbb
add
jmp
jo
cld
hlt
hlt
out
push
xor
minps
jp
adc
or
mov
mov
cmp
dec
sub
dec
sub
test
add
add
insl
mov
jp
sub
nop
push
or
pop
arpl
call
test
fiadds
in
or
sub
or
push
inc
inc
fdivl
divl
test
mov
hlt
or
add
or
enter
aaa
or
jb
call
push
in
pop
mov
mov
cli
jmp
or
incb
repz
jmp
jl
jmp
dec
loop
fiaddl
icebp
test
cmc
addb
adc
pushf
and
fistpll
lods
lds
cltd
call
add
iret
call
push
mov
push
pushf
cmpb
adc
mov
ja
call
add
push
mov
cmp
mov
or
pop
or
adc
cmc
inc
inc
adc
dec
cmc
push
dec
cmpb
mov
ja
call
and
jo
add
push
or
push
outsl
push
mov
hlt
push
adc
leave
push
test
jae
cmp
mov
fdiv
ss
mov
jecxz
push
inc
out
push
jge
cmp
hlt
push
xchg
out
adc
xchg
cmovp
pminsw
sti
push
push
call
cmp
in
pop
xchg
call
ljmp
xchg
add
call
ljmp
add
outsb
cmpsl
test
push
add
int
clc
xlat
repnz
xchg
mov
testb
out
fmuls
xchg
setp
ficoml
cmp
nop
jbe
lret
jnp
in
and
gs
jp
test
mov
cltd
xchg
jnp
in
cmp
mov
adc
cli
imul
mov
mov
mov
hlt
aas
fsubrl
out
mov
pop
ds
push
std
ds
adc
adc
dec
lahf
in
pop
shll
andl
pop
adc
stc
mov
iret
and
mov
cltd
jle
call
orl
ret
jmp
sub
js
fs
or
into
cmp
or
sub
repz
xchg
or
or
mov
arpl
stc
mov
mov
cli
xchg
orb
out
ja
orl
gs
add
push
dec
mov
jle
push
jae
cli
cmpsl
or
mov
jb
std
cs
aas
pop
jae
xor
or
cld
pop
cmp
xchg
add
add
add
add
dec
dec
call
pop
mov
pop
pop
lea
sar
gs
jne
lock
xchg
ficoml
mov
jnp
mov
jge
test
and
jae
out
or
mov
add
scas
cmp
adc
adc
jne
lock
mov
jnp
adc
mov
dec
mov
aam
or
jno
loop
movsb
dec
scas
push
mov
pop
mov
pushl
add
clc
pop
dec
mov
incb
dec
dec
dec
sti
aam
ljmp
ss
lret
bnd
jae
xor
inc
mov
jno
in
psubd
jne
insl
xchg
mov
jno
cmp
jo
cli
push
mul
dec
or
clc
sbb
pushl
ret
pop
sbb
hlt
lcall
mov
in
add
jmp
mov
aas
pop
mov
jb
call
add
jne
out
mov
lock
add
jnp
call
cmp
stos
nop
fcompl
pop
add
mov
mov
lods
int3
repz
add
inc
lds
call
loope
imul
dec
jg
add
cltd
mov
adc
stc
pusha
shl
cli
addr16
rol
fildll
xchg
jp
gs
jb
mov
mov
mov
push
insl
lcall
jmp
jne
pop
pop
fisubl
and
loopne
cli
sbb
je
cli
push
negl
add
mov
xor
lret
bound
xchg
adc
dec
jb
out
push
stc
cs
jp
add
cmc
add
out
add
decl
imul
into
sbb
xor
add
xchg
fcmovnb
sub
repz
or
cmp
negb
push
dec
orb
inc
testb
xchg
adc
out
jecxz
outsb
pusha
jecxz
mov
adc
mov
lea
addl
adc
mov
repz
incb
mov
ret
fiadds
jg
rolb
je
mov
jg
loope
push
ljmp
aaa
out
arpl
xchg
adc
imul
or
shl
shrl
sub
pushl
pop
int3
cli
fcomi
sbbb
insb
xchg
lret
jle
xor
jno
xchg
pop
or
xor
jno
inc
jmp
fs
bswap
call
mov
xchg
inc
jbe
movsb
testl
lods
imull
jmp
orl
or
sbb
adc
mov
testl
out
js
add
cmp
or
or
or
mov
mov
pushl
testl
xor
xchg
dec
mov
fwait
mov
loopne
jp
arpl
and
lret
push
incl
jbe
cli
and
inc
aas
add
pop
adc
inc
aas
add
push
test
ljmp
movsb
add
inc
lods
add
shll
sbb
add
lret
add
mov
jp
cmp
int
add
sbb
nop
mov
arpl
les
or
mov
sub
add
add
push
scas
incb
add
add
mov
stc
mov
and
lcall
stc
add
add
cmp
jmp
mov
add
inc
add
nop
stc
or
rol
push
mov
fadds
add
fs
scas
or
xchg
cmp
test
fcompl
adc
test
out
cmp
fucomip
fstl
dec
add
or
adc
mov
adc
jno
inc
lret
xor
stos
cmp
and
sar
mov
dec
xchg
idivl
jecxz
int
pop
jnp
cli
stos
flds
cmp
ljmp
cli
sub
arpl
add
or
cli
lcall
sar
mov
mov
repz
fnstcw
dec
loopne
cli
sahf
jl
dec
xlat
adc
jb
xchg
or
loopne
push
fists
loopne
jbe
lock
xchg
xchg
xlat
into
mov
xchg
or
sub
inc
xchg
jl
mov
test
mov
cmpsl
jo
sar
jo
or
adc
cli
add
push
mov
jecxz
sub
mov
add
mov
add
add
or
outsb
pop
and
out
lock
jns
or
mov
fwait
sti
add
divb
jl
jmp
xor
repnz
test
dec
sti
je
lret
inc
or
cmp
sub
jb
dec
loope
call
stos
repz
mov
notb
in
cmp
push
and
mov
pop
pop
stc
push
add
jnp
jb
aam
or
outsb
push
test
insl
mov
jmp
imul
push
add
mov
add
cwtl
or
or
aad
pop
sti
arpl
push
rcr
mov
and
push
jns
add
and
adc
ds
jp
adc
imul
test
clc
mov
jmp
add
dec
mov
inc
adc
sti
stc
push
sub
fcoms
sub
lcall
cmpb
jno
cld
test
into
cli
gs
sti
jmp
pop
mov
inc
pushf
mov
cli
test
ja
les
jle
fistpl
add
es
sub
mov
je
adc
insl
push
daa
ss
jmp
or
repz
std
call
out
add
jge
popa
sbb
cli
outsb
cltd
jecxz
jl
jmp
jno
jmp
inc
xchg
mov
and
mov
push
hlt
mov
adc
xchg
jo
mov
stc
fsubrl
enter
xchg
scas
insb
aaa
inc
hlt
add
lcall
hlt
mov
mov
rol
dec
push
stos
stc
or
push
cmp
adc
add
imul
movsb
repz
push
lcall
mov
icebp
ret
out
imul
mov
add
jbe
frstor
pop
pop
sbb
dec
call
mov
out
jg
sbb
add
jo
hlt
test
push
sub
fxam
xorb
sti
stc
outsb
in
mov
fs
xchg
mov
dec
jb
xchg
stc
ds
mov
xor
jb
xchg
stc
es
mov
jb
xchg
stc
push
sahf
ret
test
inc
add
pop
dec
push
xchg
cld
or
cmc
les
testb
jecxz
or
xlat
orb
mov
mov
loope
sar
add
jmp
nop
out
iret
add
or
dec
add
cmp
fprem1
dec
test
bsf
add
or
ja
adc
jo
inc
add
jno
mov
cli
xchg
mov
adc
cmp
xchg
cmpsl
stc
stc
scas
push
or
push
add
add
or
or
sub
add
insb
in
sti
outsb
xchg
incl
pop
pusha
mov
push
jle
xchg
stc
stc
inc
pusha
mov
cmp
incl
jo,pn
enter
out
loopne
jmp
mov
inc
repnz
in
or
int3
dec
cmp
flds
loop
jno
out
push
xor
enter
movl
idiv
mov
mov
adc
cwtl
hlt
call
add
xorl
jno
rcr
add
test
lock
add
jg
imul
cld
sub
sti
gs
mov
aam
add
mov
hlt
pop
adc
mov
add
pop
repz
inc
pop
add
add
or
jmp
jno
sub
je
mov
cmp
jg
add
mul
gs
add
jmp
ja
jb
and
outsl
and
jne
in
mov
stc
mov
jle
or
add
repz
pushf
data16
stc
subb
call
test
loopne
or
cs
out
jne
add
sbb
je
repnz
xor
sbb
and
add
pop
xchg
lock
xchg
add
enter
sar
jg
bound
sbb
vmaskmovdqu
icebp
testl
nop
stc
lcall
nop
lock
icebp
adc
aam
lcall
nop
lock
icebp
and
test
call
cmp
lea
cmpb
insl
adc
clc
add
lcall
add
loope
decl
sub
jle
add
jl
lock
cli
stc
push
ret
cli
stc
sbb
popa
or
xchg
add
insb
or
jg
add
push
cmc
ja
add
js
cmc
outsl
add
jno
jne
cmc
add
jno
push
or
pop
add
jno
mov
pushf
lret
fildll
scas
stc
stc
xchg
add
in
cmpsl
js
cli
imul
dec
mov
stc
in
fdivr
dec
jp
xchg
dec
jb
xchg
mov
cmc
jmp
or
jno
fs
repnz
std
or
xor
mov
sub
or
add
pop
ret
pop
clc
mov
or
add
imul
lock
mov
jmp
add
add
data16
insb
testl
insb
out
dec
cmp
fs
jb
out
mov
mov
cld
lock
jmp
lock
cmp
sub
cmp
add
xor
sub
in
stc
pop
fiaddl
call
pminsw
div
xor
call
inc
imul
stc
out
add
adc
out
stc
jmp
aad
xor
jb
or
add
repz
hlt
mov
add
jo
add
lock
lcall
push
jp
or
jb
mov
push
jmp
stc
xchg
fisubrl
in
xor
in
ljmp
add
cmc
lcall
test
pop
test
stc
jmp
insl
or
cmpxchg
jl
in
jmp
mov
cmc
decl
jmp
add
add
jmp
pop
fcompl
push
jns
dec
cmp
and
mov
mov
push
add
cwtl
test
std
mov
add
idiv
test
mov
call
add
jno
xor
xchg
push
in
fs
ss
call
repnz
shr
clc
stc
push
fscale
pushl
adc
std
xor
stc
mov
out
add
jno
mov
clc
fs
movb
call
outsb
pop
mov
sti
add
inc
mov
or
xor
mov
jle
fdivr
jmp
hlt
sti
data16
or
mov
pop
aam
shrb
subb
bound
add
mov
xchg
xorb
push
jb
out
loop
push
stc
or
aas
mov
mov
stc
clc
addr16
mov
mov
testl
aam
out
popa
mov
add
orb
mov
jbe
inc
cmc
mov
cli
dec
ret
pushf
in
out
cltd
outsl
loop
icebp
out
js
dec
add
data16
adc
jmp
stc
jmp
call
outsb
clc
add
sbb
fdivr
addl
push
pop
or
stc
jmp
sbb
andb
xchg
loopne
push
or
call
div
sti
ds
add
call
out
lock
flds
fs
stc
push
jl
add
cmc
jg
add
jmp
add
cs
call
cs
cmpsb
gs
call
repnz
add
jmp
pushl
inc
xor
jbe
addb
mov
sub
call
loop
lods
call
dec
dec
stc
decl
cmp
aas
add
js
out
mov
testl
jnp
in
repz
push
fdiv
pushl
decb
cmpsl
fdivrl
xchg
icebp
testl
jno
std
incl
jno
cli
clc
les
in
mov
stc
sbb
clc
stc
pop
push
mov
sti
dec
xchg
xchg
popa
sbbb
dec
stc
in
clc
stc
es
sbbb
jo
fmull
bnd
repnz
adc
fs
sti
out
std
repnz
repnz
cli
pop
fsincos
cli
xchg
jo
add
negl
and
cmc
imul
testl
std
mov
add
pop
jge
add
push
add
stos
jg
jmp
cmc
nop
add
add
ja
sub
addr16
sbb
out
jno
bound
repnz
dec
cmc
clc
add
cmp
call
ljmp
fsubr
in
jno
add
adc
add
popa
imulb
add
movsb
mov
aas
je
insl
cmpsl
inc
int
add
jle
in
xchg
rolb
in
ljmp
mov
lahf
lock
mov
je
jns
jns
add
div
xchg
icebp
mov
pop
cmp
pop
pop
ljmp
jg
sti
inc
std
add
ljmp
adc
jmp
shrb
push
jae
add
enter
xor
fstpt
cmp
jb
mov
addr16
and
int3
cmc
incl
pop
subl
psllq
loopne
idiv
aad
ja
sarl
addl
dec
push
push
xchg
out
hlt
repz
push
xchg
lods
std
scas
repz
mov
push
fstpt
std
lahf
xrelease
inc
mov
add
ljmp
jno
std
call
in
mov
jmp
stc
add
jp
icebp
pop
xor
pop
into
and
mov
test
mov
stc
outsb
sahf
add
mov
das
inc
xlat
lock
xor
in
jae
stc
ds
out
jae
cmp
adcl
loope
push
inc
fiaddl
mov
fdivrl
and
out
mov
fcoml
out
jge
adc
push
lock
repnz
call
repz
insb
mov
jno
out
and
jecxz
icebp
pop
fcos
fwait
xchg
leave
repnz
int3
icebp
js
into
std
push
add
adc
jnp
out
pop
in
leave
repnz
movsb
icebp
dec
jmp
add
je
cmp
mov
sub
pop
aam
in
cli
repnz
insb
icebp
sbb
fistpl
add
stos
xchg
out
or
xchg
jecxz
icebp
movsb
pop
pop
fcoml
in
cmp
fs
shrb
out
fs
stc
push
inc
sbb
pop
cltd
call
hlt
mov
out
loope
insb
adc
fiadds
xor
testb
push
imul
jl
sbb
stc
cmpsb
jb
outsl
push
pop
loope
xchg
inc
add
mov
loopne
and
test
call
lods
insb
and
or
pop
ljmp
push
mov
pop
fwait
cmc
jmp
daa
in
incl
mov
movsb
std
addr16
stos
movsb
std
ja
test
adc
jmp
lcall
mov
std
cmpsl
roll
pop
add
sbb
jmp
shrb
mov
cmpl
loop
idiv
cmpl
add
in
test
imul
lret
dec
and
jno
fsubrl
mov
jle
and
movsl
adc
sbb
out
stc
into
sbb
cmp
cltd
std
jl
dec
out
stc
add
cmp
stc
cmpsb
insl
scas
fcompl
std
xchg
leave
lock
xchg
dec
pop
mov
inc
lret
ljmp
xlat
ret
xlat
std
jmp
daa
push
out
ljmp
xlat
push
push
movb
out
insl
ljmp
push
jno
repnz
push
loope
mov
leave
jecxz
out
in
xor
dec
cmp
cmp
xchg
addr16
movsl
add
mull
add
mulb
add
xor
lea
and
jne
add
loope
ja
mov
mov
dec
adc
mov
pop
insl
or
add
add
add
mov
add
push
pop
push
rcr
sub
out
push
or
xor
data16
fmull
add
clc
clc
mov
inc
jns
inc
pop
insl
loopne
ss
jmp
mov
adc
push
repz
and
icebp
lods
mov
mov
imul
xchg
insl
pop
jno
fistpl
aaa
fdivrl
jmp
in
insb
add
call
pop
fidivl
popf
in
cwtl
ficompl
mov
lahf
int3
int3
jnp
mov
pop
inc
add
adc
dec
mov
sbbl
or
sbb
mov
or
push
adc
pop
add
add
lahf
mov
int3
jl
int3
int3
mov
dec
mov
push
add
adc
sub
std
rolb
push
xor
add
lods
add
pop
add
mov
pop
mov
int3
cld
xchg
int3
int3
or
int3
int3
jno
in
cli
pop
jns
jns
cmp
jb
cmc
mov
mov
jae
inc
sbb
mov
add
test
dec
jne
jmp
push
lock
add
inc
jge
mov
rolb
xor
push
xchg
dec
pop
mov
cmc
addr16
inc
add
push
cld
jno
add
xor
dec
call
sbb
lods
bound
lcall
stc
push
icebp
dec
xorl
sbb
dec
xchg
shll
mov
sub
mov
hlt
inc
mov
mov
ss
add
jno
repnz
mov
arpl
ret
dec
ljmp
out
jno
xor
mulb
mov
int3
sub
push
or
dec
lock
mov
and
pop
aas
push
add
jecxz
lock
sbb
int3
in
inc
or
popa
add
fs
inc
xchg
or
adc
lock
icebp
cmp
add
add
bound
and
je
and
rclb
dec
push
push
sar
scas
sub
inc
gs
rcll
call
inc
dec
mov
cld
inc
enter
xchg
fmuls
jmp
cmp
lock
or
jmp
cmp
push
jb
cmp
adc
push
bound
push
adc
stc
push
add
mov
jmp
inc
and
les
lds
push
jle
insl
or
jmp
add
and
test
sbb
repnz
add
incl
add
add
add
jnp
inc
mov
add
jmp
adc
lahf
lcall
add
jmp
loop
adc
test
imul
add
dec
mov
flds
or
add
addb
push
add
pusha
inc
cld
sbb
ss
test
and
xor
and
jae
jb
jo
sub
hlt
test
daa
push
mov
adc
testb
std
pushl
sub
les
jge
mov
add
mov
in
adc
or
call
insb
test
loope
cmp
mov
xor
dec
add
xor
pop
mov
push
jle
pop
clc
jns
dec
push
mov
mov
and
push
inc
outsb
inc
gs
out
cmc
gs
push
sarl
pusha
stc
inc
jno
scas
adcb
std
ret
dec
mov
insb
fidivl
sbb
mov
jns
insl
and
push
xchg
mov
clc
push
jmp
subb
jno
and
jmp
push
add
or
jns
pusha
or
movsb
sti
fstps
xor
mov
movsb
out
pop
add
pop
add
xchg
jl
mov
or
or
insl
add
cs
stos
add
xlat
and
jg
add
enter
imul
jb
test
or
dec
in
mov
in
stc
outsb
js
sbb
mov
loopne
fnstcw
mov
bound
xorl
ret
or
dec
hlt
pushl
cmp
adc
sub
push
bound
or
ret
cld
decl
lahf
pop
scas
add
add
jb
sub
das
pop
je
lret
faddl
jp
negl
jp
mov
sbb
cltd
fcoml
or
idiv
out
fcoml
fcmovbe
stc
mov
jle
add
test
sub
inc
subb
pop
xchg
or
add
shlb
and
call
fmul
addl
inc
jno
mov
and
push
cmp
and
iret
jge
loope
push
pop
bound
cmp
test
sub
es
pop
cwtl
add
cli
push
sub
mov
xor
js
les
mov
xchg
xor
lds
jmp
dec
jge
push
aas
mov
add
fstpl
sub
add
xchg
mov
ljmp
testl
push
add
dec
lret
jecxz
xor
pop
inc
jns
syscall
and
outsb
adc
sub
ds
add
out
addr16
loop
insl
or
inc
pop
cmp
das
mov
mov
cmp
cmp
dec
mov
push
fisttps
and
lds
cwtl
and
popl
mov
xchg
add
aad
aam
ret
in
cmp
or
jge
call
jb
inc
test
inc
aaa
insb
push
add
sahf
inc
mov
arpl
and
xor
add
sub
sbb
push
out
mov
add
fsts
push
ss
cld
and
adc
cs
mov
jl
jns
or
add
jmp
test
das
cmp
inc
call
add
inc
je
fildll
int3
jnp
add
aad
ja
cld
outsb
cmp
and
pop
or
cmovle
stc
xor
aas
push
adc
addl
jge
add
icebp
jl
daa
loope
mov
mov
inc
cmp
mov
insb
add
cmc
mov
mov
jle
add
add
jbe
jne
add
add
int
cld
dec
call
pop
mov
or
xchg
sub
dec
sahf
les
jno
ret
insl
mov
sarl
out
pushl
lds
mov
out
data16
in
mov
fnstcw
mov
mov
sar
inc
ds
in
mov
dec
inc
or
xchg
flds
jno
cmc
jp
dec
pop
cli
js
movsb
dec
jmp
inc
je
bnd
jno
jno
cli
push
push
test
les
in
inc
add
jno
call
aas
hlt
sub
xor
jno
je
xchg
dec
jecxz
mov
mov
mov
sbb
mov
std
aad
pop
add
les
cs
jmp
adc
add
cmp
mov
outsb
push
in
imul
jmp
rcr
in
add
add
cmp
inc
sbb
test
out
pop
mov
xor
sysret
in
cmp
add
in
adc
addr16
mov
or
jmp
outsl
push
stc
in
inc
pop
inc
sub
stc
dec
sti
out
jl
ret
fs
xlat
stc
ss
rorb
jge
xchg
ret
jnp
mov
mov
cmp
add
and
push
cld
or
inc
test
loope
iret
cmp
add
bound
add
lock
sbb
stc
bound
loopne
lock
icebp
aad
out
rcrb
push
loopne
sbb
mov
xchg
enter
xchg
cld
clc
pop
fwait
mov
int3
mov
in
push
push
or
jge
ja
incl
enter
push
cmp
std
decl
pop
call
mov
sub
add
stos
pop
test
call
les
test
stos
sti
jno
jns
dec
sarl
mov
xorl
loopne
in
push
mov
sar
xor
and
push
mov
imul
push
add
xchg
push
add
ljmp
push
xor
xchg
add
push
dec
dec
ljmp
clc
int
xorl
mov
add
jg
pushl
jno
mov
dec
mov
add
jns
fimull
xchg
fdivr
dec
push
inc
insb
xlat
repnz
jo
dec
movsb
adc
mov
push
lea
lahf
pop
xchg
jge
mov
jno
push
movsb
addl
daa
or
jecxz
push
outsb
inc
repnz
ljmp
cmp
add
add
add
cmpl
add
test
iret
inc
add
mov
add
add
push
mov
mov
mov
or
mov
out
jo
cmp
adc
push
cmp
out
add
test
int
rcll
adc
out
in
inc
inc
or
mov
add
repz
jb
push
push
int3
outsl
cmp
daa
insb
jb
pop
test
movsl
orl
aas
cmp
add
ljmp
mov
scas
jbe
inc
mov
popl
mov
sahf
xor
in
divl
dec
mov
das
inc
std
add
push
cmp
call
jecxz
jge
jb
jmp
je
insb
jb
sub
cs
add
jb
mov
dec
jp
dec
fninit
pop
mov
add
sarl
mov
jecxz
mov
in
addl
add
mov
repz
push
lock
mov
push
add
enter
into
add
mov
sar
sahf
call
outsb
shlb
jg
cwtl
add
mov
dec
push
add
add
add
ja
push
mov
pop
xchg
lcall
pop
les
bswap
mov
mov
fs
js
dec
inc
cmp
in
arpl
add
inc
or
or
add
jno
inc
insb
clc
and
test
mov
stc
out
pop
or
test
sar
mov
sub
cli
push
subl
add
out
cli
jne
imul
push
add
inc
add
flds
pop
add
mov
cmpsl
sbb
add
lret
loop
and
pushf
cmp
das
sub
subl
fisubrl
sub
ljmp
mov
dec
out
lcall
pop
inc
pop
xorl
ja
xlat
fxch
lret
cmp
lret
outsl
jg
pop
jno
push
cmpsl
lret
mov
push
xchg
lret
mov
adc
pop
cmp
add
ja
cmp
xor
sbb
dec
mov
mov
sbb
es
in
bound
pop
test
mov
xchg
rolb
jb
inc
or
inc
test
mov
push
and
xchg
xorl
xchg
push
mov
jo
dec
xchg
icebp
shlb
sub
jb
insl
stos
sti
das
insb
bound
sbb
sbb
loope
call
aas
adc
lcall
add
movsl
std
jbe
in
xchg
mov
pushl
cmp
movsl
int
push
lods
pop
dec
jo
cmpsb
add
dec
std
insl
add
sub
clc
or
outsl
or
cmp
pop
xchg
pushl
dec
insb
popw
dec
add
insb
mov
jbe
movsb
cld
decl
and
mov
and
dec
mov
movsb
push
add
cld
ljmp
fwait
je
sbb
mov
mov
fdivs
fscale
or
sub
fstps
cli
inc
jne
jno
addb
mov
mov
fdivr
incl
rol
insl
insl
cmpsb
mov
data16
jle
mov
add
je
mov
xor
dec
xor
pop
decl
push
test
jno
mov
lcall
adc
mov
into
imul
mov
xchg
add
jns
out
cs
xor
jnp
addr16
jp
hlt
ds
mov
movsl
mov
mov
icebp
in
push
and
cmp
and
cmp
lcall
daa
push
sti
or
loopne
adc
cmp
lods
pop
pusha
or
add
add
imul
stos
pop
jno
out
mov
movl
test
xchg
das
repnz
mov
jge
icebp
add
in
addr16
push
mov
jb
test
cmp
xchg
inc
enter
dec
adc
jae
stos
aam
enter
rclb
inc
jns
insl
testl
ss
inc
icebp
and
clc
vpunpckldq
pushf
adc
jb
repnz
fs
bound
adc
jb
mov
jno
jne
repz
call
mov
add
add
add
mov
push
push
add
mov
daa
mov
adc
addb
mov
mov
xchg
dec
push
jg
xorb
dec
aas
pop
mov
test
orl
adc
push
sub
jno
test
stc
pop
test
push
decl
push
push
mov
aas
cmp
dec
mov
jg
xchg
std
test
jp
lcall
lret
out
idiv
xchg
cwtl
xlat
std
xchg
cwtl
adc
bound
xchg
push
jno
jno
jbe
add
pop
inc
pop
in
mov
or
xor
push
or
addr16
jne
jno
mov
mov
push
sahf
sub
inc
push
push
dec
pop
ljmp
repz
add
js
daa
or
fildl
xor
jecxz
add
mov
jecxz
and
test
and
sub
cmp
add
mov
ja
sti
popf
mov
outsb
inc
jge
sub
jns
out
divl
outsl
cmp
and
add
imull
insl
jns
add
aaa
pop
jge
sbb
pop
jns
adc
aaa
fistpll
fs
std
out
mov
fildl
icebp
jmp
jl
push
add
xor
sub
ret
jb
add
in
mov
leave
stc
inc
mov
rcrb
stc
cs
addb
mov
sub
sti
roll
xor
dec
test
shll
push
bound
sub
daa
cmpsl
in
mov
add
addb
adc
cmpb
inc
add
clc
jns
dec
sub
mov
fadds
xor
mov
and
cmpsl
or
inc
and
mov
mov
mov
stc
inc
push
or
sub
nop
mov
ljmp
pop
mov
lcall
adc
int3
mov
in
mov
idivl
add
cmp
dec
jp
add
std
jp
add
test
inc
insl
or
mov
or
inc
cmp
jno
sub
mov
sub
fs
inc
xchg
pop
sub
jno
sub
mov
inc
and
mov
cli
cwtl
adc
push
or
sub
jge
lret
add
sub
mov
jae
mov
insl
fwait
jbe
add
jbe
test
jecxz
inc
cmpsl
js
hlt
ret
ljmp
push
es
add
inc
sbb
test
ja
stos
add
add
clc
mov
testl
lods
int3
stos
mov
cmp
cmpsl
aaa
jbe
out
mov
mov
push
inc
out
xor
add
es
add
sbb
dec
inc
add
js
in
xor
add
jecxz
dec
mov
int3
aaa
subl
xor
out
jno
outsb
loope
ret
test
inc
add
mov
jbe
call
je
xor
in
xchg
test
je
pop
inc
sub
stos
sub
test
add
and
pop
or
jl
test
roll
add
jmp
nop
pop
mov
movsb
scas
hlt
rcrb
mov
push
mov
push
xor
sub
out
test
out
les
cmp
and
scas
or
add
dec
sub
icebp
dec
call
xchg
out
daa
addl
mov
jle
jmp
push
mov
rcrb
push
ret
arpl
sub
xchg
inc
or
mov
add
add
jae
push
leave
mov
adc
and
int3
int3
in
ds
mov
mov
jl
xchg
cmpl
testl
dec
xchg
pop
mov
add
add
dec
add
jno
jp
andb
add
cmpsb
icebp
decl
cmpsl
jl
jne
hlt
xchg
inc
add
and
cmp
jecxz
xchg
jnp
aas
xor
clc
jecxz
xchg
jne
shr
cmp
jno
std
push
dec
out
out
push
repnz
add
cli
insl
cmc
xorb
std
pushl
enter
test
and
add
repz
incb
roll
jg
sti
notl
add
or
mov
mov
or
add
xchg
add
sub
sbb
add
out
pop
mov
sbb
add
mov
inc
mov
pop
rolb
add
add
pop
repnz
mov
stos
xrelease
fwait
add
mov
call
add
xor
push
mov
mov
sbb
jae
jmp
lock
jae
lcall
icebp
mov
test
mov
inc
add
imul
add
fimull
push
add
lds
hlt
push
mov
add
xchg
and
ret
jb
push
fnstsw
test
or
sub
fdivr
imul
cmpl
fstl
sub
jmp
add
imul
stc
lods
stc
jmp
lods
mov
adcl
ffree
adc
jp
sub
orl
je
mov
add
clc
sti
mov
outsb
loopne
dec
jnp
mov
sti
xlat
pop
ret
adc
cmp
adc
or
adc
lret
sub
pushl
ss
xchg
les
stc
incl
cli
pop
test
faddp
out
es
jmp
popa
cmpsl
pushl
jecxz
pushf
mov
decb
adc
cmp
ret
neg
bnd
std
test
test
pop
sti
std
mulb
ret
lds
addl
std
jle
std
clc
xor
ja
mov
scas
jbe
test
push
dec
popa
sbb
xchg
mov
cmpsl
pushl
adc
xor
ss
dec
or
fiaddl
cld
jae
pop
mov
lcall
fsubrl
dec
iret
jp
sbb
test
or
lds
add
hlt
repnz
add
pop
add
inc
mov
roll
jp
mov
mov
push
fwait
mov
in
in
lret
push
add
dec
out
js
loopne
rol
add
sti
testb
xor
add
pop
in
sub
or
fists
jno
stos
test
cmp
add
mov
sbb
out
jbe
add
fildl
jmp
dec
xor
jge
add
add
insl
adc
add
xorl
inc
mov
lahf
mov
pop
xchg
movd
adc
sub
mov
jb
stc
add
mov
in
mov
data16
test
sub
pop
add
mov
scas
aam
ds
mov
mov
mov
add
sbb
incl
add
testl
pop
test
dec
inc
mov
addl
xchg
shlb
orl
shll
adc
aam
popa
in
xor
jno
ljmp
insb
mov
jb
add
ljmp
inc
add
ja
dec
cmp
mov
push
dec
sub
or
or
cmpsl
std
jae
xor
cli
fstpt
push
sarb
push
or
inc
sbb
jecxz
daa
lods
arpl
rcrb
pop
cmpl
adc
mov
inc
add
std
shlb
pushl
inc
adc
out
add
arpl
test
mov
adc
das
icebp
add
es
ss
jns
adc
dec
xchg
mov
in
dec
jmp
mov
or
mov
sahf
jecxz
add
inc
xchg
stc
cld
in
shlb
dec
test
sub
mov
jb,pn
mov
out
jno
sbb
in
inc
xchg
mov
pop
dec
add
xor
add
adc
idivb
add
in
hlt
shlb
std
cmp
aaa
in
jmp
clc
out
scas
or
jb
or
loopne
sub
shrl
roll
add
jmp
jb
icebp
cmpsb
bound
adc
jb
test
add
push
mov
fdivp
jb
jmp
dec
fdivr
in
add
sub
cld
ds
jb
loopne
sub
jle
cmp
cld
inc
aam
mov
adc
inc
xor
bound
int3
xchg
xchg
push
aas
inc
push
pop
clc
sbbl
cmp
jb
push
adc
or
clc
adc
sbb
dec
call
mov
xchg
add
push
test
dec
mov
push
mov
jmp
stc
lcall
mov
inc
cmp
add
pushl
jle
adc
std
pushl
inc
cld
jno
orl
pop
cmpsb
mov
int
in
ret
pop
clc
jb
jle
adc
adc
cmc
add
mov
test
mov
dec
sub
add
mov
loop
xor
std
dec
cmpsl
daa
add
cmpsl
std
test
inc
sbb
out
shrb
pushl
push
or
cmpsl
cmp
neg
jl
add
adc
loop
iret
mov
shr
xchg
movsb
jg
mov
outsl
add
jl
in
shrb
hlt
mov
dec
add
jmp
add
pop
sub
jno
out
in
cmp
out
out
inc
out
mov
mov
add
mov
jecxz
js
jmp
add
add
or
loope
jno
xor
out
inc
fisttps
stc
movl
add
icebp
sub
insl
test
popa
add
gs
cld
call
jle
test
fxam
out
jne,pn
add
jb
xchg
loop
add
jno
es
je
xchg
jmp
scas
lods
add
out
into
add
jmp
cmp
bound
or
test
and
test
lds
add
test
leave
outsb
xchg
mull
and
lea
add
add
out
lret
pop
aaa
or
add
push
xchg
into
sar
enter
mov
jecxz
sbb
call
dec
pop
cli
lahf
adc
add
adc
add
inc
sbb
add
add
dec
fistpl
call
ret
mov
ljmp
mov
pop
test
pushl
outsl
incb
or
popf
ds
fdiv
pop
xor
test
xchg
std
pushl
mov
adc
lret
jge
lret
incl
add
std
jle
scas
push
jno
mov
ljmp
shlb
add
mov
mov
les
inc
ret
insb
xor
xchg
ret
push
jno
out
stos
mov
dec
or
lods
mov
aaa
lods
dec
aad
mov
xor
and
test
rolb
xlat
sub
faddl
jno
orl
push
add
movsl
fnstcw
cli
out
push
lods
pop
lret
movsl
test
add
test
mov
in
mov
mov
xlat
shr
jno
pop
xchg
push
push
outsb
int
mov
ljmp
int3
add
xlat
push
stos
stc
jmp
pusha
test
mov
mov
icebp
scas
sbb
inc
adc
add
mov
psubsw
test
cmc
dec
and
testl
lret
cmc
daa
cld
jmp
jb
or
in
mov
dec
sub
ret
dec
clc
ljmp
test
mov
test
add
add
roll
das
jmp
mov
mov
add
pop
jb
sub
add
pushl
inc
mov
sbb
pop
js
and
call
push
lock
add
or
adcl
inc
push
call
inc
insb
mov
jnp
add
cmp
push
add
incl
mov
popa
adc
jmp
out
pop
decl
jo
cmp
or
add
add
cmp
mov
xchg
xchg
cmp
fisubrl
or
idiv
pushl
inc
push
mov
xchg
sbb
ljmp
xbegin
or
jl
jnp
or
mov
add
jno
imul
in
test
imul
mov
xlat
leave
cwtl
std
pushl
pushf
test
jae
push
imul
test
fsubrs
int3
testb
cmp
sub
mov
xlat
xor
jne
les
clc
loope
ss
xor
ljmp
add
std
fnstcw
mul
add
in
add
lods
pop
lods
lahf
and
dec
leave
cld
mov
insl
lods
in
xor
inc
psrlw
jno
out
cmp
stos
aaa
jmp
add
jne
lods
adc
adc
sbb
insl
xor
jg
or
negl
jb
add
movsb
add
mov
or
jb
mov
fnstsw
cld
bound
aaa
mov
bound
clc
cld
shr
std
pop
scas
test
flds
test
popf
mov
adc
test
out
jno
jmp
mov
test
mov
rolb
inc
hlt
push
cmpsb
call
pop
lock
psadbw
xchg
movsl
ss
inc
lock
pop
jle
and
add
add
out
sti
add
aaa
daa
flds
pop
add
mov
insb
inc
cld
sarl
faddl
or
push
jle
add
lock
and
mov
rorb
cmp
mov
jb
inc
test
xchg
jmp
cld
fadds
test
testb
sar
es
fcompl
mov
inc
and
add
push
dec
xchg
jns
fdivr
xchg
stos
stc
pop
out
fdivrs
inc
xlat
inc
in
xchg
std
ljmp
fs
sbb
lret
std
jl
stos
std
jae
xor
sbb
ds
clc
sarl
out
sbb
arpl
jb
and
jb
and
add
paddw
mov
or
call
cmpb
movb
cli
jge
or
fs
add
xor
lcall
lcall
mov
out
ljmp
sbb
out
sub
jnp
add
and
mov
jns
and
xor
jnp
mov
add
add
jae
dec
inc
dec
outsb
inc
push
mov
out
xor
jg
xor
jg
mov
out
mov
jo
leave
jp
add
ret
add
cmpsb
jge
mov
test
add
out
xor
jmp
jb
add
movsb
add
ja
stc
jmp
cmp
add
mov
lock
insl
hlt
test
mov
push
in
mov
jnp
and
cmp
xor
aas
or
hlt
test
test
icebp
push
xor
daa
cwtl
test
inc
inc
add
mov
jl
mov
dec
cltd
sub
add
cmp
unpckhps
decl
decb
jo
jmp
adc
mov
decl
hlt
decl
call
pushf
mov
dec
ret
sti
xchg
dec
sub
mov
push
into
cmpsb
ds
sar
add
jnp
add
or
cld
xchg
lret
loopne
jecxz
inc
pop
mov
stc
dec
dec
loopne
jecxz
mov
daa
add
jno
mov
mov
mov
push
xor
mov
std
cmpb
ret
and
aam
and
mov
xchg
inc
in
pop
leave
mov
and
je
dec
pusha
fidivrs
fstps
enter
test
stc
mov
arpl
pop
xchg
or
mov
jb
into
add
pushl
xor
jno
sbbl
push
int
jp
les
lret
push
pushf
loop
mov
sahf
imul
outsb
inc
lea
sti
testl
fwait
push
rcrb
jne
test
cmp
les
jmp
cmpsl
fs
mov
hlt
cmp
roll
or
idivl
mov
scas
ret
push
clc
jmp
enter
ror
aam
jnp
pushf
outsb
mov
dec
aaa
inc
lods
sub
scas
je
add
jb
ss
jb
test
pop
or
add
lds
add
jb
out
imul
or
or
test
jb
or
jb
or
or
dec
dec
je,pn
call
test
insl
rcrb
add
push
pushf
add
out
filds
jmp
lds
bound
loopne
lock
popa
ss
add
test
orl
stc
dec
add
loopne
push
dec
and
add
inc
jmp
stc
mov
or
add
fdivrl
mov
pop
adc
add
add
mov
dec
mov
sarl
pop
addl
add
rcrl
jmp
roll
xchg
aas
nop
fwait
out
sti
add
leave
add
add
mov
insb
inc
cld
xchg
pop
lret
loopne
fcoml
mov
or
xor
pushl
std
int3
shll
xor
dec
xchg
push
add
and
add
outsl
sub
and
std
ljmp
aam
fistpll
mov
test
sarl
dec
jns
push
push
loop
inc
xor
inc
jmp
js
ljmp
mov
fstpt
sbb
ffree
std
xor
mov
cld
jno
jns
jb
out
add
in
mov
mov
out
push
movsb
loop
scas
add
add
test
cmp
fwait
push
rcrb
mov
test
inc
pop
les
add
push
inc
xor
push
jmp
into
add
das
les
ljmp
jl
out
adc
idivl
movsb
dec
inc
test
shrl
movsl
pop
jmp
add
test
out
jl
fadds
dec
scas
jo
call
shlb
insl
lret
in
sbb
jmp
jb
or
ja
dec
jne
lret
aaa
sbb
icebp
sti
xor
ljmp
mov
sahf
lcall
dec
sub
dec
or
inc
movsl
and
idiv
call
jb
jge
loop
or
test
stc
lcall
sbb
out
mov
rcll
repz
sub
sbb
decl
push
and
fcomps
xor
mov
orl
inc
sub
sub
sarb
pop
nop
and
fsubrs
mov
orl
rcr
cmp
jl
mov
jbe
enter
mov
push
cmp
cmp
push
cmp
xchg
mov
mov
jne
mov
xor
dec
jl
xchg
js
jno
aaa
aam
mov
mov
or
pop
aaa
hlt
clc
jmp
jae
and
cmpb
test
std
pushl
lock
xchg
test
jnp
test
cmp
std
ljmp
or
insb
xchg
shll
pushl
adc
dec
test
jns
cmpsl
repnz
std
push
add
in
loop
and
sub
jmp
add
js
in
mov
mov
jo
jmp
loopne
hlt
inc
fidivl
nop
outsb
cmp
daa
adc
inc
sarl
fs
cmp
test
or
in
sbbb
out
daa
adc
fwait
aas
or
add
out
sub
outsb
push
imul
out
mov
jo
push
test
xor
fs
call
sti
pop
jae
test
sub
clc
jmp
jae
test
sub
roll
inc
or
sub
mov
inc
jmp
loopne
shr
add
jmp
lds
jb
jge
test
or
call
xchg
sbb
jne
test
add
out
or
cli
sbb
or
adc
jg
push
jo
jge
dec
fiaddl
jae
sbb
fcompl
inc
or
inc
add
pop
lcall
sbb
addb
idiv
mov
idiv
pop
ds
pop
xchg
ja
ret
addl
inc
call
xchg
dec
adcl
sub
push
int3
sbb
sbb
add
cli
lcall
ds
xor
push
lcall
cwtl
add
dec
stc
decl
xlat
std
xlat
pop
testl
and
lock
mov
xor
jl
add
into
mov
or
sub
pop
popf
test
loopne
mov
js
imul
popf
xchg
pop
movb
test
pop
cld
into
mov
aas
mov
imul
pop
test
pop
subl
cmpb
mov
xchg
aam
lcall
add
pop
dec
jns
xor
or
dec
adc
inc
jecxz
mov
xor
pop
add
xchg
out
mov
pop
dec
popa
mov
xchg
bnd
xor
add
out
stc
push
je
mov
out
add
xchg
out
sub
fnstcw
lahf
daa
xchg
or
js
add
das
jg
xorl
push
mov
xor
sbb
cs
pop
jae
cld
pcmpeqw
add
out
fsubs
sbbl
lahf
pop
cmc
push
adc
mov
and
cmp
rcll
mov
jle
aam
push
sbb
mov
or
inc
fcmovbe
decl
lret
jmp
push
aad
ljmp
sar
jnp
sar
lahf
pushf
sar
jo
sar
andl
sar
and
add
cmp
insb
scas
cmp
dec
lods
cmp
mov
cmp
jbe
cmp
fldt
cmp
sub
mov
cmp
fs
cmp
sub
movsb
cmp
int3
mov
cmp
aad
in
push
push
jmp
test
jmp
mov
mov
dec
add
je
test
push
mov
sub
pop
orl
dec
sub
inc
and
xlat
sahf
shl
gs
pushl
aam
iret
add
add
popa
lahf
stc
pop
xor
pop
xor
enter
enter
enter
mov
cli
jae
dec
cli
mov
mov
stc
push
test
test
sub
mov
stc
jno
lar
scas
xchg
stc
jno
div
rcll
lock
mov
hlt
pop
jp
test
cmp
sbb
repnz
cli
cmp
cmp
add
orl
out
jno
loop
jae
push
inc
inc
cltd
scas
sbb
inc
addb
add
adc
inc
xchg
sub
out
mov
sub
adc
int
cld
mov
xchg
or
ss
jne
push
add
mov
jno
outsb
push
and
xchg
pushf
mov
add
cmc
fwait
mov
jb
mov
insb
dec
fdivr
in
out
cld
mov
jae
std
mov
addr16
push
jmp
mov
mov
jae
std
xor
push
in
jae
std
and
push
in
jae
std
xor
push
out
jae
std
and
push
out
jae
std
xor
push
loope
mov
and
push
lock
std
xor
push
jecxz
mov
and
push
bnd
std
mov
dec
push
in
mov
mov
vlddqu
add
scas
push
add
add
add
lock
inc
prefetch
or
xor
jl
loope
pop
pop
imul
add
mov
scas
gs
cmovs
add
xchg
call
jge
daa
mov
add
add
sti
or
jns
sbb
mov
call
add
xor
std
lods
push
leave
add
add
std
lods
push
jno
add
jb
or
daa
lcall
inc
popf
add
jb
or
inc
pushf
add
jb
or
daa
lahf
add
jb
or
daa
sahf
add
jb
or
mov
or
nop
add
jb
or
jb
or
jb
or
jb
or
divl
or
jb
or
jb
jg
sbbl
pop
fmuls
loope
jae
lahf
inc
mov
inc
cmp
cltd
fisubrl
out
cwtl
add
addl
xchg
or
jp
addr16
cmp
mov
mov
out
cmp
xchg
aaa
addl
out
jno
cmp
and
rorb
jecxz
aad
xchg
mov
sub
fbld
movsl
cmp
add
loope
imul
jmp
jno
stc
sbb
test
icebp
test
xlat
xchg
jmp
jb
add
jb
les
xor
sub
sub
fsubrs
jmp
loope
jmp
icebp
out
test
testl
jmp
icebp
out
test
iret
idivl
sti
call
adc
dec
in
adc
cmp
pop
arpl
add
add
add
mov
inc
fdivs
push
mov
shll
add
sbb
add
mov
inc
cwtl
mov
popf
sbbb
jmp
mov
popf
push
lahf
cmp
xor
mov
test
cmp
imul
mov
imul
test
stos
cmp
xchg
dec
mov
decl
add
xor
sbb
jno
std
test
sbb
stos
sbb
jb
nop
pop
std
jle
xchg
std
pushl
stc
xchg
jns
inc
add
pop
stos
adc
push
mov
stc
jno
std
test
cmc
and
cltd
jle
xchg
cltd
std
incl
jb
pop
flds
test
lods
jb
nop
flds
and
std
jmp
pop
std
sub
xchg
mov
ds
std
incl
ljmp
test
stos
or
xor
out
jb
ljmp
out
aam
insl
scas
add
call
add
sti
mov
orb
adc
in
scas
pop
mov
xchg
mull
test
out
hlt
repz
cld
push
inc
out
lods
mov
add
cli
js
fldenv
add
cmpsl
test
add
fbld
add
mov
add
cli
subb
add
aas
hlt
xchg
mov
add
jecxz
mov
ljmp
lret
or
add
jmp
or
dec
in
ret
std
lcall
mov
jmp
lret
jmp
flds
outsb
sbb
scas
mov
stc
cli
jne
mov
xchg
orb
sahf
jb
add
inc
sbb
xor
test
adc
cmp
aas
jmp
dec
fdivrl
je
ljmp
sbb
sub
jle
add
jne
jne
rclb
pop
stc
adc
cmp
rolb
test
inc
enter
mov
mov
in
mov
jl
insl
mov
test
jnp
aad
negl
idiv
lret
cmp
pop
and
mov
xor
lcall
addl
push
jl
lods
add
adc
flds
jno
ss
inc
sbb
sti
inc
test
mov
and
and
adc
insb
hlt
add
fstps
ljmp
xchg
std
loopne
jo
std
and
ds
sub
adc
js
aad
sbb
xchg
add
data16
and
sahf
dec
pop
cmp
pop
xchg
lea
and
addb
or
push
add
inc
jl
ljmp
lcall
cmp
dec
stos
rcrb
lret
and
fbstp
push
dec
stos
fbld
sbb
cld
insl
pop
xchg
loopne
xchg
in
cmp
out
add
loope
enter
jbe
out
ljmp
jle
shl
pop
addr16
loop
xor
ljmp
add
jecxz
push
gs
pop
roll
pop
imul
jge
add
outsl
test
jmp
push
into
test
xor
mov
incb
jl
int
cmp
push
add
fidivrl
vmovq
cmpsl
inc
jnp
dec
or
in
outsl
nop
xchg
leave
std
or
jl
xchg
xchg
sahf
pop
mov
mov
sub
jb
xchg
pop
jnp
lds
jl
add
sarl
push
mov
pop
das
sarb
insl
push
mov
and
jae
js
pop
jae
movsl
sbb
in
pusha
insl
xor
pop
fs
push
cmc
fistps
add
mov
pop
pushw
and
jmp
popa
out
mov
pop
jb
pushf
jo
and
jae
cs
sub
xorl
int3
or
add
push
or
stos
xchg
clc
test
adc
in
pop
jl
jno
inc
sbb
std
sub
mov
xor
flds
inc
mov
lods
lahf
std
call
adc
and
xchg
shrb
repz
jae
jle
sahf
std
jmp
lods
std
call
cltd
jbe
add
adc
das
mov
mov
mov
int3
movsl
in
in
and
insl
push
pop
add
add
outsb
push
imul
add
cli
repz
mov
jno
in
in
dec
outsl
and
jl
ja
cld
cs
jge
repnz
jge
ror
push
rclb
imul
add
dec
outsl
das
insb
add
int
cli
scas
mul
cmpb
ja
jnp
mul
add
sub
incl
in
jns
add
xchg
es
push
inc
and
pop
cmp
cmp
out
pop
fs
pop
in
call
jge
mov
inc
std
call
jb
test
mov
vlddqu
insl
les
cmp
jecxz
xor
stos
xor
mov
mov
mov
sti
cmp
mov
mov
sbb
mov
int3
sub
pushf
dec
xchg
jge
stos
jl
in
cmpl
jne
xchg
movsb
test
jns
dec
mov
adcl
cmpb
ret
pop
pop
mov
push
ret
mov
roll
orb
add
orb
add
orb
add
orb
xchg
add
adcb
ret
rorl
enter
sbb
mov
pushl
jp
jo
std
mov
xchg
jbe
test
std
xchg
jne
test
cmp
add
cmp
cli
js
mov
or
ja,pn
mov
mov
ja
call
lods
jo
imul
xchg
movb
inc
aas
rolb
push
ja
adc
xlat
mov
fmulp
mov
sti
test
push
std
test
cld
mov
add
mov
ljmp
add
js
jl
push
cltd
andl
jg
mov
add
stos
add
insb
dec
jmp
mov
mov
gs
test
add
cmp
add
idivl
and
add
cwtd
daa
enter
add
cmp
out
pop
mov
mov
ffree
out
jle
mov
lret
add
mov
ss
add
pop
jmp
insb
fimuls
mov
add
repz
repz
bound
mov
jb
xchg
jmp
dec
jl
sbb
cld
jmp
loop
push
jl
ja
je
outsl
xor
cmc
pop
test
ret
cmc
bound
test
mov
jge
andl
adc
mov
cmpl
icebp
fildll
mov
push
outsl
movb
mov
roll
pushf
mov
int3
int3
in
jmp
mov
std
lock
push
lret
push
mov
ljmp
clc
inc
pop
or
adc
mov
fstl
sti
mov
mov
add
inc
lahf
inc
adc
shl
lcall
mov
cld
ret
or
mov
mov
mov
mov
ret
xor
int
xor
les
xor
int
pop
add
or
add
das
jno
mov
clc
pop
outsl
pop
stc
cmc
in
push
jno
pop
stc
imulb
sti
pushl
jo
pop
orps
imul
outsb
int
xorl
jecxz
jae
loopne
add
jb
jb
out
xor
xor
std
cld
js
in
xor
pushl
jb
xor
cmp
jne
xor
pushf
jmp
cwtl
pop
xor
mov
int3
xor
cmp
outsb
xchg
js
mov
jl
inc
movsb
xchg
fdivrs
mov
jbe
add
aas
mov
test
add
stos
ds
jmp
add
jno
ret
xor
test
xchg
out
std
mov
out
in
jp
push
popa
or
in
hlt
jp
cmp
hlt
lahf
out
cld
jp
mov
or
xchg
js
push
jmp
jnp
das
sbb
pop
pop
jno
out
aad
out
jno
add
mov
jp
jb
mov
adc
jb
and
movsb
add
scas
mov
outsb
add
jmp
std
pop
test
lods
loopne
jns
push
add
cmpsl
mov
xchg
xchg
jb
adc
fnstsw
inc
fldl
jp
jb
adc
cmp
sbb
fistl
scas
fnstcw
jns
fstpl
inc
bound
add
push
add
fwait
in
jecxz
and
test
lods
aam
or
sbb
pop
shrl
push
xchg
sbb
pushl
or
std
jl
xlat
stc
ret
std
xor
jb
stos
cwtl
std
decl
push
scas
jle
std
mov
arpl
xchg
add
mov
std
decl
cli
cmc
inc
or
shl
add
mov
dec
std
adcb
jg
push
std
incl
lods
ret
add
out
add
cli
scas
cmc
test
out
ljmp
testb
addr16
int
and
lds
xchg
test
ja
imul
cmc
push
std
cli
cmp
adc
cwtl
pop
pmaxub
or
xchg
fwait
test
bnd
hlt
mov
js
pushl
mov
push
inc
mov
movsb
jge
mov
aaa
idiv
ds
hlt
pushl
push
idiv
add
push
js
mov
dec
loope
in
add
xchg
xchg
xchg
push
inc
jns
or
aad
out
jae
movntq
hlt
sar
jns
mov
jmp
in
mov
pop
or
mov
mov
out
imul
call
fnstenv
scas
jbe
or
add
cmp
rorl
out
pop
fisubrs
std
or
jmp
mov
mov
adc
stc
ljmp
add
mov
jge
div
mul
insb
aam
xchg
push
loop
or
imul
loopne
mov
push
fisttpll
mov
in
ret
jnp
add
movsl
adc
jmp
imul
add
out
cli
jmp
lcall
mov
in
nop
mov
pusha
or
add
push
dec
add
data16
pop
or
mov
add
jg
add
shll
or
add
add
add
xchg
or
add
ja
mov
stc
popa
dec
icebp
mov
push
add
ss
jle
adc
add
in
pop
fiadds
in
add
mov
addb
std
or
xchg
xchg
rorl
mov
mov
add
adc
add
mov
mov
cmp
jmp
mov
xchg
pop
add
xlat
sti
xchg
loopne
mov
push
cmp
std
call
test
ficoml
add
or
sbb
pushl
jne
stc
mov
test
arpl
xchg
int3
xchg
loope
pop
add
sbb
js
mov
push
pop
loope
mov
insl
add
mov
xchg
sbb
nop
push
sbb
outsb
int3
jbe
rcll
in
nop
xor
jno
pop
lcall
add
dec
xchg
dec
inc
test
outsl
pusha
xchg
lds
out
xchg
mov
arpl
out
xchg
add
add
add
sbb
inc
int3
push
add
mov
jno
lock
js
mov
or
add
jmp
ja
out
and
lahf
xchg
or
mov
jno
add
jb
jbe
jmp
das
pop
jmp
pop
jge
aad
movl
jmp
in
mov
aam
jae
cmc
ret
xor
or
daa
imul
es
add
in
into
sti
xchg
mov
pushl
in
fdivrs
sub
sbb
or
mov
xchg
add
shrl
mov
add
sti
xchg
lret
stc
push
je
mov
pop
shr
test
loope
frstor
mov
push
sbb
cmpb
sbb
addl
push
adc
je
mov
xchg
nop
sbb
mov
xchg
fsts
mov
daa
ret
loope
ret
nop
mov
push
mov
push
enter
out
into
fldenv
lea
rorl
decl
mov
mov
or
jno
enter
std
decl
xor
fsubl
add
std
shrb
or
pop
std
pushl
enter
std
push
mov
gs
sub
push
mov
fistpll
xchg
xchg
inc
faddp
pop
ljmp
add
or
push
into
add
jno
jle
push
shlb
push
jecxz
add
ljmp
adcb
jno
arpl
out
and
pop
xchg
sti
xlat
add
adc
xchg
push
pop
out
hlt
out
cli
mov
jns
or
xchg
dec
push
jno
call
sub
out
insb
movsb
inc
je
add
outsl
xchg
push
out
or
rcll
out
test
inc
in
mov
lods
roll
add
lods
paddsb
push
jno
lahf
cmpb
pop
out
bound
cmpb
es
push
fstl
add
jmp
test
jmp
jae
adc
mov
jmp
stc
mov
mov
test
call
mov
lcall
mov
pusha
hlt
cmpsl
adc
add
or
loopne
cmpsl
adc
jb
mov
xlat
jb
test
add
push
insb
jge
jle
push
stc
dec
bound
push
test
xchg
jns
cld
idiv
lea
push
sti
addl
adc
add
push
mov
jge
psrlq
stc
pop
add
sub
arpl
call
xchg
test
add
pusha
addb
adc
add
fwait
ret
add
or
idivl
sub
add
add
mov
stc
frstor
int
mov
xchg
std
or
fisttpl
popa
cli
pop
fmulp
xchg
loop
adc
jo
mov
add
push
mov
out
adc
outsb
and
mov
dec
jge
into
pop
stc
push
test
rorb
add
or
sub
push
call
jno
xlat
adc
cwtl
jb
call
push
mov
or
add
out
bnd
aas
jno
mov
inc
push
fimuls
lock
or
out
inc
aas
out
add
stos
icebp
add
cmp
inc
insl
bnd
mov
jnp
jno
outsb
inc
cltd
mov
sbb
jnp,pn
mov
out
xor
jnp
insb
or
in
gs
inc
cmp
cmp
jnp
movsb
ja
or
dec
adc
pop
nop
inc
adc
fidivrl
jmp
add
insb
loopne
add
add
mov
or
std
xchg
mov
mov
fbstp
or
sbb
jo
xorl
js
pushl
xchg
add
out
loope
lods
jmp
adc
jmp
mov
lret
dec
popf
bound
fmulp
lret
std
mov
jo
addr16
loopne
test
jmp
cld
xchg
cmc
arpl
cmc
in
pop
jae
add
js
in
sti
popa
data16
test
or
adc
popf
push
test
and
out
adcb
jne
mov
dec
add
xor
out
rcr
mov
cli
leave
jno
sti
decl
cmp
xchg
mov
jecxz
add
pop
pop
rorb
push
push
daa
ret
jle
add
add
dec
lock
int
mov
lods
push
add
add
call
adc
inc
cld
add
add
lret
adc
xchg
nop
sbb
jl
stc
xor
adc
faddp
mul
mov
lock
mov
jno
fildl
add
adc
cli
jmp
add
push
std
popa
mov
or
jno
enter
mov
jno
xchg
dec
les
jno
iret
sti
clc
sub
or
and
mov
xchg
fiadds
pushl
jbe
ds
rcll
popa
pop
lret
outsb
loop
mov
js
pop
mov
add
pop
pop
xchg
vmread
out
sub
pop
sti
cmpb
in
xchg
or
subb
data16
mov
fsubrp
scas
push
jno
into
or
push
rcr
mov
push
jno
out
idivb
push
jno
sub
jp
add
add
and
push
pop
add
jmp
or
mov
or
mov
scas
jmp
js
fbstp
mov
jb
add
cmp
jnp
mov
or
or
push
bound
adc
icebp
decb
out
mov
cmp
sbb
add
adc
xchg
or
push
icebp
ljmp
jmp
add
adc
mov
xor
bound
push
mov
enter
or
cld
data16
mov
jno
push
or
js
mov
rcr
rorw
sti
into
popa
jnp
push
enter
inc
mov
push
or
push
test
add
mov
lods
fsub
inc
stc
mov
scas
push
add
add
notl
jne
add
out
mov
dec
push
pop
add
dec
test
mov
mov
mov
repz
adc
test
mov
cli
pop
sbb
outsl
repnz
dec
mov
pop
xor
int3
or
jl
mov
stos
sub
cli
pushf
cmc
xchg
in
add
adc
mov
adc
xchg
jmp
loop
repz
mov
jge
imul
cs
jb
std
test
adcl
jno
or
out
clc
add
xor
and
cld
add
out
pop
add
push
pop
jns
cld
out
ret
ja
dec
sbb
outsb
roll
add
jnp
punpckhdq
bound
pop
hlt
mov
jge
cmpsb
stc
add
jno
lods
jae
or
jle
movsb
roll
jno
cmpsl
pop
push
adc
cmp
sub
imul
jo
xchg
in
or
aaa
stos
addl
add
js
pop
jno
mov
out
ja
sbb
jge,pt
ret
cmc
scas
out
jno
dec
push
push
les
push
test
std
mov
jb
or
std
call
add
push
add
sub
xor
xor
movsb
stc
jp
inc
mov
add
jmp
aaa
arpl
fsub
ss
xor
into
inc
hlt
push
jl
or
out
xor
jb
add
jl
push
add
jmp
dec
add
jmp
jb
nop
dec
hlt
sub
push
jae
jl
add
sti
xor
dec
jnp
sub
ret
sar
decl
lret
int3
add
int3
int3
dec
mov
fiadds
and
mov
shl
push
mov
int3
inc
and
int3
push
out
push
fdivr
dec
xorl
ja
test
mov
call
out
adc
or
push
nop
ljmp
add
orl
leave
push
or
dec
adc
je
push
mov
xchg
push
cmp
out
stos
adc
jl
or
xchg
inc
int3
sub
xchg
inc
int3
cmp
sub
ljmp
jge
pop
std
shl
adc
jno
std
pushl
mov
push
jns
pfrsqrt
adc
add
jbe
mov
sti
xchg
push
pop
out
jmp
cli
cmpsl
cmc
test
inc
push
jge
jmp
cli
xchg
test
add
jnp
or
ret
add
dec
fldl
pop
mov
lods
ja
cld
hlt
add
jbe
or
cmp
cli
adc
lret
lds
inc
xor
xor
aas
and
xor
jnp
adc
jae
popa
inc
aaa
lahf
add
add
sbb
jb
ret
mov
je
std
cmp
add
sarl
ret
xor
sub
mov
cmp
repnz
jae
js
add
mov
xchg
fistps
dec
ljmp
movsl
daa
test
sbb
dec
int3
sbb
insb
jge
add
mov
loope
rolb
cmp
inc
stc
mov
mov
sti
scas
out
mov
jmp
jb
xorb
add
fs
fidivl
iret
icebp
sbb
jmp
popf
repz
call
jb
xchg
mov
inc
or
shl
lcall
adc
adc
addb
dec
sub
mov
dec
outsb
dec
xorl
jne
cltd
fnstcw
call
xor
push
and
add
or
mov
or
add
idivl
xchg
add
add
jle
push
add
test
je
pop
mov
dec
add
xchg
hlt
lcall
push
adc
add
jnp
fiaddl
add
xchg
adc
jno
pop
mov
repnz
jnp
jp
ret
pop
stc
jbe
add
in
jns
pop
loope
testl
std
pushl
jge
gs
test
in
movl
std
ljmp
addr16
gs
cmp
jg
ljmp
std
incl
repnz
add
or
jno
jne
gs
xchg
in
add
addr16
sbb
mov
addb
jl
mov
jle
test
mov
call
hlt
out
out
mov
lret
addb
xchg
xchg
xchg
testb
push
hlt
lret
testl
mov
popa
add
js
out
xchg
lcall
out
lret
mov
inc
jmp
sbb
bnd
pop
cmp
lea
popf
outsb
add
lock
jmp
cmpsl
pop
stc
flds
jne
mov
ret
imul
pop
loopne
add
pop
pop
xor
pop
pop
stos
add
dec
int3
lods
mov
mov
add
xchg
jmp
fsubrl
mov
mov
add
jmp
mov
outsl
movsl
add
lret
push
dec
pop
jge
fsts
ljmp
mov
test
jle
std
or
add
add
mov
insb
cmp
inc
stc
mov
cmp
popa
jl
sahf
imul
xor
add
xchg
xchg
cmp
or
cmpsl
push
sbb
push
ret
inc
rorl
sbb
test
fwait
test
add
cmp
jno
ja
jg
std
pop
mov
push
std
add
lods
mov
adc
mov
mov
xor
lods
fwait
jl
ljmp
add
gs
jg
push
ljmp
int3
push
iret
mov
mov
pop
loopne
adc
jbe
filds
pcmpgtd
mov
mov
jbe
test
roll
jmp
ret
or
jno
ret
adc
shlb
jbe
test
testl
in
mov
nop
jg
jno
cltd
lret
cmp
les
test
std
pop
jl
repnz
in
lret
fnsave
das
push
jno
pop
sarl
out
pop
push
fisubl
inc
jmp
adc
dec
mov
xor
dec
sbb
add
adc
jnp
or
cmc
jmp
add
mov
add
adc
negb
je
dec
into
cmc
dec
addl
jb
push
inc
andnps
inc
dec
xchg
jb
dec
inc
mov
repz
or
push
test
in
call
jb
jge
js
mov
daa
add
push
mov
or
std
arpl
add
add
or
sub
mov
cmp
pusha
mov
lods
jge
dec
call
scas
aam
decl
pop
or
sbb
test
cld
jmp
mov
jge
into
dec
add
jmp
jle
xor
fisttps
add
movsb
push
add
push
add
adc
testl
push
add
rcll
sbbl
add
call
adc
shll
add
rcl
mov
mov
mov
pop
bound
movsb
adc
cmpb
imul
mov
ljmp
dec
xor
jo
mov
imul
add
into
test
in
jg
add
jno
js
mov
lret
or
je
mov
ljmp
adc
pusha
ja
pop
addr16
or
mov
adc
mov
push
add
clc
imul
in
pop
mov
cmc
outsb
cmp
notb
lret
xlat
sub
pop
inc
push
lea
xchg
stc
add
pop
mov
out
out
aam
shlb
mov
out
out
and
out
jmp
icebp
add
dec
dec
add
inc
shl
mov
aaa
pop
js
dec
jns
adc
loop
repnz
push
or
cmp
push
lret
mov
stos
dec
and
arpl
sub
rcll
push
cld
pop
stos
mov
int3
mov
inc
int3
lods
cmpsb
inc
int3
sbb
arpl
std
push
stc
push
cld
pop
sub
inc
int3
sbb
cs
int3
sub
sub
add
add
call
loope
call
call
jb
add
jb
add
jb
add
jb
add
jb
add
jne
add
add
add
std
push
jmp
std
call
or
add
icebp
push
add
add
and
add
popa
stc
push
loope
pushl
clc
jmp
cli
call
call
push
add
loope
add
loope
add
loope
add
aaa
loope
add
testb
loope
add
testb
loope
emms
loope
pop
loopew
aas
ja
idivb
loope
fistps
in
inc
push
test
test
jecxz
std
mov
add
repnz
mov
xor
popf
add
mov
cs
xor
insb
jg
push
dec
xchg
test
in
test
cmc
mov
rol
and
enter
pushl
mov
negb
pop
and
cli
jno
int3
xchg
nop
xchg
mov
fmulp
das
cli
mov
xchg
cmp
adc
pop
popf
add
xchg
and
rclb
push
inc
je
mov
gs
add
push
aas
fs
hlt
mov
hlt
dec
inc
add
insb
fcoms
pop
fcoms
jge
add
out
jno
repz
inc
pop
push
xor
ss
push
or
inc
adc
xchg
jl
in
in
xchg
add
mov
jg
cld
lret
sbb
add
je
pop
or
daa
jg
shl
jnp
dec
or
dec
int
push
cmp
jg
pop
out
and
sbb
notb
xchg
call
push
jb
xchg
add
repnz
fwait
add
in
adc
jmp
shlb
add
sbb
nop
imul
inc
bound
subb
inc
loopne
sbb
or
add
test
sbb
inc
jmp
xor
push
sub
lock
add
xchg
pop
add
je
pop
jo
inc
xchg
std
lcall
rol
xor
enter
test
add
add
ljmp
enter
ret
test
call
or
sar
cmp
fnstcw
adc
jns
fbstp
xor
test
call
adc
sbb
add
jns
shll
int3
jno
cmp
mov
dec
test
push
subl
fwait
lock
push
jmp
adc
xlat
jl
ktestb
int3
push
bound
and
pushl
xor
mov
push
std
es
xchg
test
test
inc
shll
xor
or
lods
cld
pushl
enter
push
and
call
cmpsb
incb
jb
ret
out
insl
jl
pop
push
movsb
cli
mov
sub
sub
jmp
mov
pop
sbb
mov
insb
add
push
out
mov
pop
les
add
inc
jmp
pop
pop
iret
pop
add
jg
imul
out
adc
pop
mov
clc
insl
add
dec
aas
les
test
jno
aas
add
sarl
pop
mov
cld
insl
add
add
dec
pop
dec
hlt
les
adc
daa
outsb
rclb
incb
addb
ja
add
and
jnp
bound
jae
push
std
sbb
out
les
icebp
push
lea
lahf
in
inc
testb
iret
mov
sub
and
cmpsl
movsb
test
xchg
pop
in
out
ret
and
push
cmp
jbe
and
outsl
push
and
and
and
and
sbb
push
adc
test
movsb
test
pop
in
outsl
push
and
add
jb
in
test
out
and
repz
jge
and
fisttpl
incb
cmp
xor
outsb
dec
jle
psadbw
and
out
push
outsb
add
add
out
push
out
xchg
jp
and
popl
mov
adc
out
pcmpeqd
jp
sbb
ljmp
ret
sub
jne
pop
sub
mov
gs
xor
add
in
inc
mov
jl
dec
or
xchg
xor
adc
std
ljmp
or
mov
arpl
sbb
push
out
jbe
ds
imul
push
and
daa
or
sub
cmp
lcall
xchg
bound
sbb
or
sahf
or
cmpsl
xor
jns
fdivrp
jl
roll
sub
or
shr
in
or
pushl
pop
or
push
int
popa
out
pop
ds
repnz
mov
push
stos
pop
pop
pop
or
cltd
out
jno
sbb
test
add
ja
mov
in
inc
out
mov
outsb
mov
pop
jg
add
movsl
pop
iret
xchg
sbb
mov
cmp
mov
aad
sbb
int3
mov
insw
or
sub
mov
gs
insl
dec
cmp
insb
jno
jp
hlt
dec
add
clc
orb
testl
sub
or
ljmp
cli
add
cmp
mov
adcb
add
testl
sub
or
jb
sbb
add
fdiv
clc
out
cmp
stos
addl
xlat
bound
sbb
jge
jb
add
stos
lret
jnp
add
pop
mov
cwtl
pop
cmp
dec
cmp
inc
sti
dec
and
cmp
cmp
stc
lods
mov
jmp
sbb
and
in
jbe
std
jae
test
out
sub
enter
and
jns
mov
mov
adc
cmp
jmp
dec
add
sub
enter
leave
repz
out
sub
jp
repz
jns
and
jns
and
das
scas
mov
push
inc
stc
mov
xor
test
add
add
add
mov
jno
clc
mov
and
pushl
hlt
test
and
clc
add
jno
add
mov
popa
mov
loopne
in
ficoml
pusha
ret
std
add
xchg
sbb
and
std
mov
fbstp
ss
and
inc
mov
popf
std
divl
xchg
cmc
out
jb
add
mov
mov
test
test
pop
mov
pop
add
les
out
jno
xchg
insl
add
in
jbe
xchg
inc
push
and
dec
or
xchg
in
sbb
xor
dec
cld
dec
or
xor
add
pop
mov
lock
cmc
int
add
inc
call
mov
fs
sbb
jno
outsl
repz
jno
mov
cmp
sbb
stos
push
xor
jno
in
aas
add
mov
shll
adc
pop
shll
add
test
jg
adc
jmp
add
cmc
cmp
inc
mov
dec
test
jnp
roll
cli
xchg
add
inc
insl
roll
mov
inc
jns
jge
std
jg
jb
vpsubq
add
std
scas
lock
orl
add
xchg
inc
jl
or
std
add
add
pop
lret
rclb
in
mov
dec
cmc
mov
jl
pushf
add
cmp
lcall
jge
outsl
stc
decl
pop
sbb
push
in
std
in
sub
cmovb
mov
jbe
ret
int
jne
int
je
lret
mov
jae
push
adcl
mov
inc
jno
mov
es
std
in
imul
std
jmp
mov
dec
insb
fucom
cld
stos
push
mov
xchg
push
shl
ljmp
shl
fsubs
dec
jno
ljmp
test
push
outsb
ret
lar
push
cmc
fdivl
pop
xor
outsb
sahf
into
inc
jge
pop
xchg
repnz
je
xchg
rorl
cs
sub
mov
stc
or
out
stos
pop
into
adc
sbb
add
cmp
add
pop
inc
out
mov
stos
adc
call
jp
pusha
pusha
mov
add
add
mov
and
divb
add
out
xchg
push
jp,pn
dec
jo
mov
jle
cmp
into
mov
movsb
aaa
divb
or
push
fldl
mov
add
ljmp
inc
stc
jmp
xor
xchg
jmp
inc
xor
int
xor
roll
popa
cmp
ds
stc
jb
sbb
jmp
mov
ljmp
or
popa
bound
repz
xor
bswap
addl
test
test
jnp
inc
sti
inc
stc
jmp
cmp
jmp
lods
stos
jne
je
add
add
testl
mov
xor
dec
clc
popf
xchg
mov
fcmovnu
orb
mov
add
movsb
jl
add
jl
push
inc
xchg
push
icebp
add
cmpsb
stc
xor
jge
call
fdivr
pop
add
insb
sbb
add
add
imul
mov
mov
cmp
mov
xchg
lds
jno
jl
xor
lods
in
clc
dec
aas
adc
cmp
ljmp
dec
and
mov
push
sub
mov
xor
dec
sbb
insl
pop
push
int
xchg
cmp
and
cld
push
inc
mov
inc
xchg
ja
lods
mov
sti
mov
ret
sar
push
sub
clc
jo
cmc
jle
xchg
add
jno
idivb
rorb
lock
out
in
out
jno
and
adc
div
or
jnp
pushf
dec
jmp
cmc
insl
mov
push
add
inc
cmpsb
pop
mov
or
mov
adc
inc
and
mov
push
mov
repz
mov
dec
movb
xlat
insb
mov
in
int3
cli
js
repz
pop
outsl
mov
js
mov
xor
or
outsl
inc
clc
jno
add
jmp
add
xchg
test
sarb
dec
xor
and
test
or
jmp
sbb
pop
fildl
test
enter
in
stc
jmp
sbb
xchg
add
dec
int3
jb
jnp
adc
cmp
sahf
sahf
add
jb
push
jb
loope
jo
loope
fs
lret
push
add
mov
loope
adc
cmc
int
idiv
xchg
leave
addb
cmp
in
add
dec
add
mov
add
dec
insb
pop
pop
jecxz
dec
ret
pop
loopne
push
pop
add
int3
pop
jb
inc
add
rorb
dec
insb
xor
mov
jge
or
roll
enter
adc
insl
sbb
or
fcmovne
fcmovnu
fcmove
fsubs
xor
and
xor
xor
sub
outsl
xor
insl
jbe
mov
dec
mov
outsb
inc
adc
jno
inc
stc
inc
sub
pushl
inc
stc
ss
pushl
inc
stc
es
cmp
jae
cmp
sub
pushl
inc
stc
push
nop
mov
jno
mov
jno
std
pushl
inc
stc
out
lret
and
std
pushl
inc
stc
mov
jno
inc
aas
jno
std
pushl
bound
cmp
dec
pop
add
dec
push
add
add
inc
dec
add
add
inc
ss
add
and
cmp
inc
xchg
add
add
add
cmp
mov
imul
out
jno
loop
sub
mov
pop
add
add
ret
cmp
xchg
add
xchg
ss
add
mov
xchg
sahf
add
add
orb
test
jl
add
cmpsb
cld
call
jb
add
jb
add
lret
dec
lahf
sub
push
jmp
jb
push
jmp
jb
push
jmp
jb
psubsw
psubsw
push
jmp
jb
push
jmp
jb
push
jmp
jb
push
jmp
jb
push
jmp
jmp
jb
psubsw
push
jmp
jb
push
add
std
inc
adc
std
call
enter
cwtl
std
notl
cwtl
std
repz
std
cmp
cwtl
std
daa
adc
std
fists
mov
fistl
pop
std
xlat
adc
rcll
dec
std
jecxz
dec
std
sbb
pop
std
popf
adc
add
dec
std
mov
adc
sbb
mov
sbb
mov
or
ret
adc
std
sti
adc
std
jge
sbb
jecxz
or
lahf
adc
std
fwait
adc
cld
xchg
adc
cld
xchg
adc
cld
mov
std
popa
pusha
daa
std
ret
popa
daa
std
jg
daa
std
jnp
daa
std
ja
daa
std
jae
daa
std
addl
std
inc
pusha
daa
std
mov
pusha
daa
std
or
subb
add
sub
sti
popa
sub
mull
std
repz
sub
ret
popa
sub
mov
subl
std
mov
sub
scas
popa
sub
stos
popa
sub
cmpsl
popa
sub
das
popa
sub
sub
add
add
adc
add
out
imul
out
popa
adc
add
out
jns
out
add
out
jno
out
lea
out
mov
out
test
out
addl
out
jnp
out
inc
pop
out
or
out
pop
adc
add
movntq
dec
movntq
ss
add
adc
add
adc
add
pop
out
int
out
leave
push
out
lds
out
mov
jo
jmp
jb
or
add
or
jb
or
jb
or
jb
or
jb
or
jb
or
jb
or
jb
or
jb
or
jb
or
jb
or
jb
or
jb
or
jb
psubsw
psubsw
or
jb
or
jb
or
jb
or
jb
or
jb
or
jb
or
jb
or
jb
or
jb
or
add
or
jb
or
or
inc
adc
add
psubusb
sub
fadds
sub
enter
enter
fadds
sbb
fadds
sbb
enter
enter
cwtl
add
cwtl
add
js
add
push
cwtl
add
push
mov
hlt
push
mov
inc
adc
push
adc
cmp
dec
add
dec
add
push
pop
add
push
add
fmuls
dec
add
push
dec
add
push
sbb
or
sbb
enter
les
or
rorb
daa
std
mov
outsl
daa
std
mov
daa
std
mov
daa
std
scas
ja
std
stos
outsl
daa
std
cmpsl
addr16
std
mov
ja
std
fwait
outsl
daa
std
xchg
addr16
std
fistpll
std
std
xlat
outsl
daa
std
shll
std
iret
jg
std
lret
ja
std
movl
addr16
std
aam
sub
shlb
std
mov
sub
arpl
std
cmpl
std
mov
sub
imul
dec
ja
std
nop
outsb
add
add
add
add
add
add
add
add
add
add
out
xchg
add
add
add
add
pop
add
add
or
add
or
add
sbb
add
sbb
add
out
or
out
fwait
sbb
add
out
gs
out
dec
add
out
push
add
out
sbb
add
add
jb
or
jb
or
jb
or
jb
or
jb
or
jb
or
jb
or
add
or
jb
or
jb
adc
jb
adc
jb
or
jb
or
jb
psubsw
psubsw
or
jb
or
jb
or
jb
or
jb
or
jb
or
jb
adc
jb
adc
jb
adc
jb
adc
jb
or
jb
or
jb
or
jb
or
jb
or
dec
push
or
add
decb
or
popf
invd
incb
sbb
xchg
sub
or
mov
fdivr
pop
or
enter
enter
fdivr
prefetch
or
enter
enter
cwtl
std
jl
cwtl
std
sti
or
std
testl
std
out
or
std
jmp
mov
out
mov
jecxz
pop
std
daa
push
pop
std
and
add
pop
push
dec
std
sbb
pop
std
xor
xor
data16
std
sub
jne
std
mov
gs
std
mov
daa
std
scas
jne
std
stos
insl
daa
std
cmpsl
gs
std
mov
jne
std
stos
insl
daa
std
cmpsl
gs
std
mov
jne
std
fwait
insl
daa
std
icebp
addr16
std
in
jg
std
mov
outsl
daa
std
aam
jl
std
fnstsw
std
fnstenv
std
aad
daa
std
shll
std
int
sbb
pop
jne
std
pop
insl
sbb
push
gs
add
cld
out
lods
cld
out
test
cld
out
mov
out
pop
cld
out
pop
cld
out
inc
cld
out
inc
cld
out
dec
cld
out
dec
cld
out
xchg
cld
out
xchg
cld
out
jge
out
jns
out
add
out
popa
cld
out
insl
cld
out
imul
out
jno
out
popf
sti
out
cltd
sti
out
test
out
cmp
out
mov
out
push
sti
out
push
sti
call
jb
add
jmp
jb
add
jmp
jb
add
jmp
jb
add
add
jmp
jb
add
jmp
jb
psubsw
psubsw
add
jmp
jb
add
jmp
jb
or
jb
or
jb
add
jb
add
jb
add
pop
add
add
or
orl
add
add
jne
dec
add
or
add
or
add
or
add
or
add
fadds
je
fadds
and
enter
enter
fadds
adc
fadds
adc
enter
enter
cwtl
add
cwtl
add
or
add
or
add
or
std
jmp
imul
out
pop
std
jecxz
pop
std
out
imul
jmp
pop
std
out
pop
std
sarl
std
inc
push
std
lret
imul
xor
sub
imul
lret
imul
jnp
std
mov
pop
std
and
pop
std
stos
imul
adcb
mov
imul
fwait
imul
xchg
jnp
std
xchg
jnp
std
imul
mov
std
xchg
jnp
std
cmpl
jg
pop
std
mov
std
jmp
add
add
stc
out
add
out
add
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
sti
out
shl
add
mul
add
mul
add
mul
add
popf
mul
add
mul
add
out
pop
mul
add
out
gs
add
mul
add
out
jno
call
jb
pop
jmp
jb
pop
jmp
jb
pop
jmp
jb
pop
jmp
jb
pop
jmp
jb
pop
jmp
jb
add
jb
pop
jmp
jmp
jb
pop
jmp
jb
pop
jmp
jb
pop
jmp
jb
add
jmp
jb
pop
jmp
jb
pop
jmp
cwtl
incb
or
ja
cwtl
jae
mov
outsl
or
or
leave
or
pop
or
dec
pop
or
push
or
push
or
dec
or
dec
or
incb
sbb
inc
or
aas
or
cmp
sbb
aaa
or
xor
or
xchg
or
xchg
or
std
lea
fdivr
mov
enter
enter
fdivr
jge
fdivr
jns
enter
jno
std
and
std
jno
pop
std
sbb
std
imul
pop
std
popa
jp
std
pop
push
std
out
imul
std
out
pop
std
dec
push
std
imulb
std
bnd
std
out
jns
std
ljmp
std
loop
pop
std
xor
std
sub
imul
std
into
jns
std
lret
std
sbb
std
adc
jp
std
or
imul
std
scas
add
out
or
out
push
clc
out
shl
out
mov
mul
add
mul
add
mul
add
mul
add
mul
add
mul
add
clc
out
out
out
out
fdivrp
out
ret
add
sti
out
cli
out
sti
cli
out
out
out
jecxz
out
iret
cli
out
lret
cli
out
xlat
cli
out
sar
out
add
cli
out
out
pop
sti
out
add
out
out
cli
out
jmp
call
jb
push
jmp
jb
add
jmp
jb
add
jmp
jb
add
jmp
jb
add
jmp
jb
add
jmp
jb
add
add
jmp
jb
add
jmp
jb
add
jmp
jb
push
jmp
enter
enter
fadds
add
fadds
decb
enter
enter
cwtl
add
or
add
or
add
or
add
or
pop
add
or
into
or
lret
add
or
ret
add
or
mov
sbb
mov
sbb
scas
or
add
or
add
or
add
or
std
xchg
js
std
xchg
push
pop
std
mov
std
test
std
subl
std
jns
pop
std
jne
js
std
jno
pop
std
insl
push
pop
std
gs
std
popa
push
pop
std
pop
js
std
push
js
std
push
push
pop
std
dec
js
std
inc
js
std
inc
push
pop
std
cmp
std
xor
push
pop
std
sub
std
and
push
mul
add
mul
add
xor
add
out
jnp
out
outsl
mul
add
out
mov
out
stos
mul
add
mul
add
mul
add
mul
add
stc
out
aas
stc
out
inc
stc
out
daa
stc
out
cmp
out
das
stc
out
xor
out
idiv
out
jmp
out
out
jecxz
out
add
clc
out
call
jb
or
jb
or
jb
or
jb
or
jb
or
jb
or
jb
or
jb
or
jb
or
jb
pop
jmp
jb
pop
jmp
jb
pop
jmp
jb
pop
jmp
jb
pop
jmp
jb
pop
jmp
jb
pop
jmp
jmp
jb
pop
jmp
jb
pop
jmp
jb
pop
add
ljmp
or
jmp
or
lcall
or
adc
or
decb
or
es
fdivr
and
enter
enter
cwtl
cmc
pop
cwtl
icebp
pop
mov
in
pop
mov
jmp
pop
add
fldl
mov
flds
pop
aad
pop
roll
dec
dec
pop
dec
dec
pop
pop
inc
pop
pop
inc
pop
dec
mov
pop
sbb
mov
jno
std
mov
pop
std
mov
pop
std
lods
jbe
std
fs
pop
std
pusha
je
std
pop
insb
pop
std
pop
je
std
push
insb
pop
std
push
je
std
dec
insb
pop
std
and
mov
std
test
jbe
std
subl
std
xor
pop
std
xor
sub
pop
std
sub
imul
std
popa
outsb
pop
std
pop
jbe
std
pop
outsb
pop
std
push
jbe
std
push
outsb
pop
std
dec
jbe
std
add
pop
std
add
cld
insl
add
add
out
imul
add
out
arpl
out
pop
stc
out
pop
stc
out
push
stc
out
add
out
stc
out
mov
out
xchg
out
cmp
add
out
jnp
out
ja
out
jae
out
scas
stc
out
stos
stc
out
cmpsl
stc
out
mov
stc
out
fwait
stc
out
xchg
stc
out
xchg
stc
out
dec
pop
out
dec
pop
out
inc
pop
out
inc
pop
out
aas
pop
out
in
add
jmp
jb
add
add
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
add
add
jb
add
jb
add
pop
add
pop
add
add
add
add
sti
add
add
add
add
push
or
xor
or
cs
sbb
sub
sbb
es
or
and
or
push
push
fadds
sbb
fadds
push
push
enter
enter
fadds
or
fadds
push
push
enter
enter
cwtl
add
add
add
add
add
cwtl
add
add
mov
fiadds
pop
add
add
insb
daa
std
shll
int
daa
std
leave
je
std
lds
shll
insb
daa
std
mov
insb
daa
std
mov
daa
std
lods
insb
daa
std
test
insb
daa
std
mov
insb
daa
std
cltd
je
std
xchg
add
xchg
je
std
lea
mov
test
xorl
jns
daa
std
jne
daa
std
jno
daa
std
insl
insb
daa
std
imul
popa
je
out
movl
out
mov
add
add
add
add
add
add
out
pop
add
add
out
add
out
push
add
add
out
dec
add
add
add
add
out
jg
out
arpl
out
ja
out
imul
add
out
jae
out
cmpsl
add
add
add
add
add
add
es
jb
add
jb
add
jb
add
jb
add
jb
add
add
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
cwtl
ljmp
add
jmp
pop
lcall
pop
lcall
dec
call
dec
call
pop
decl
pop
decl
dec
incl
dec
incl
sbb
cmp
add
pushl
add
ljmp
add
jmp
add
sbb
add
adc
add
decb
add
incb
add
std
add
cmc
add
std
cmc
jb
std
icebp
jb
std
in
jb
std
jmp
jb
std
loope
daa
std
fnsave
std
fnstenv
std
aad
daa
std
shll
std
int
daa
std
push
jo
std
sbb
std
push
jo
std
adc
std
or
jo
std
cmp
std
add
std
jno
std
cli
add
std
divb
std
bnd
std
in
jno
std
ljmp
std
loop
daa
std
fidivs
std
fidivl
std
jno
out
ret
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
ret
add
inc
add
sub
jo
out
jno
test
ds
loope
mov
cmpsl
add
pop
roll
imul
leave
das
sub
xchg
call
rorl
ret
push
mov
mov
add
sti
or
sbb
jb
add
sbb
jmp
in
add
je
repz
adc
roll
inc
jecxz
jg
out
lods
and
call
jb
mov
add
stc
push
cld
clc
cmp
push
inc
call
pop
adc
mov
rclb
or
push
inc
jmp
and
add
or
xchg
xorb
data16
orb
ret
add
pop
lcall
add
adcb
xorl
jne
cmpb
xlat
mov
cmpl
inc
imul
xor
adc
sti
push
fnstsw
add
jne
or
call
ja
sbb
pusha
sub
jp
sub
push
rcrb
dec
mov
or
jge
sub
jnp
stos
mov
inc
push
sub
and
mov
sbb
push
jnp
dec
stos
add
fcmovnu
add
push
subb
stc
lods
dec
inc
jge
cli
ret
jb
fidivrs
incl
loopne
mov
repz
movsb
clc
mov
add
out
shll
stc
mov
inc
jge
test
mov
sbb
pop
fistpll
dec
hlt
jb
lcall
fiadds
out
in
mov
fs
add
xchg
andl
test
and
push
xchg
les
and
mov
in
mov
je
jmp
out
xor
jno
and
in
add
pop
push
pop
and
mov
cmp
leavew
push
add
xchg
sub
xchg
mov
movsb
out
inc
mov
jmp
jb
mov
out
sub
fists
adc
push
call
stos
out
rcrb
xchg
jp
mov
add
repz
stos
out
rcrb
xchg
jp
add
cmc
cld
test
stc
jl
dec
mov
sub
xchg
jmp
flds
call
sub
add
jb
subb
stc
push
push
push
adcb
stc
add
mov
jne
out
dec
loope
call
sbb
xor
cld
decl
jle
add
js
incb
or
sbb
lret
mov
insl
adc
js
out
test
adcl
idiv
iret
test
adcl
sub
and
inc
fwait
jae
pop
in
jp
imul
add
inc
pusha
jg
pushl
cmpb
xchg
add
jecxz
stc
out
in
sub
jno
std
mov
pop
and
inc
xchg
sbb
jge
daa
fnsave
cmpsb
rcrl
test
es
andb
jb
inc
jbe
xchg
pop
inc
call
mov
pop
stc
jle
inc
jge
push
mov
stc
mov
fisubl
xor
or
lret
stc
repnz
xor
addl
and
and
or
in
or
data16
pusha
add
xor
movb
out
jo
mov
enter
xor
out
pop
jge
jecxz
mov
mov
pop
cwtl
sub
mov
in
mov
gs
push
cli
movsl
sub
out
jo
add
pop
adc
out
insl
jge
loop
ds
mov
fsts
inc
pop
lods
xchg
rolb
mov
jmp
mov
jbe
jge
cld
adc
lret
push
push
test
mov
push
in
ja
call
push
out
push
ja
pop
into
push
pop
mov
and
push
call
push
shr
add
outsl
sub
xchg
pop
pop
mov
xchg
ret
adc
sub
push
mov
lcallw
lea
imul
addb
cmp
add
mov
push
out
out
fs
testb
xorl
jl
fadds
add
mov
cltd
incb
cmpsl
in
mov
je
xorb
cld
jl
cwtl
add
andl
push
addb
cwtl
fstpt
out
mov
je
xorb
cld
jl
pop
add
call
or
add
je
push
and
mov
pushf
sbb
xchg
inc
or
stc
push
fidivrl
pop
and
add
or
jle
xchg
xchg
or
mov
std
gs
and
mov
cmp
cmpb
xchg
pop
repnz
cmpb
xchg
or
pop
and
mov
xor
sbb
pop
sbbb
dec
sbb
pop
fwait
cltd
adc
add
push
add
inc
outsb
ljmp
add
sbb
push
dec
repnz
mul
xchg
jo
sub
or
cmpb
xchg
jo
dec
push
call
mul
xchg
jo
inc
push
fmuls
ljmp
or
jecxz
jo
pop
sbb
imul
cltd
jo
pop
sbb
ljmp
je
jg
add
addb
sbb
add
testb
leave
pop
pop
stc
sub
mov
jmp
out
test
stc
push
add
mov
push
mov
xchg
jo
cmp
pop
mov
jl
and
add
jge
or
lcall
pop
ret
add
mov
cli
into
mov
inc
add
push
mov
mov
ja
or
aaa
sbb
xchg
pop
pop
mov
call
add
fldt
add
out
ret
lret
push
call
ret
mov
add
adc
ret
testb
xlat
mov
pop
out
cmp
cld
je
xlat
test
mov
je
xlat
xchg
stc
iret
jmp
je
mov
sti
mov
or
sarb
ffreep
jp
cmpsb
add
loopne
repnz
filds
mov
pop
icebp
pop
stc
push
sub
pop
mov
mov
mov
test
push
inc
call
repnz
jmp
ret
repnz
out
incb
popf
sbb
mov
test
jge
pop
add
in
jge
pushl
out
adc
xor
fs
xchg
std
outsb
mov
out
xor
stc
repnz
sub
popf
dec
sbb
mov
jnp
add
mov
out
js
cmpsb
test
repnz
jo
jnp
pop
or
mov
jg
mov
dec
or
je
shr
dec
sub
sbb
ds
addb
lock
mov
repz
or
test
sbb
sbb
or
sub
push
or
and
lods
std
ffreep
lds
adc
fs
mov
or
pop
sub
faddl
js
xchg
add
xchg
jp
add
adc
repnz
jmp
jnp
stc
stos
repnz
jmp
in
out
gs
stc
push
add
in
icebp
mov
push
push
jle
mov
mov
and
popw
jge
js
je
dec
lret
pop
dec
jge
fdivr
jb
lcall
jl
std
jb
lcall
repz
das
sarl
mov
movsb
lea
add
add
call
jge
or
in
dec
jge
push
jno
call
repz
test
inc
adc
popf
and
add
dec
push
loope
mov
cli
cli
je
fcmovnb
cli
inc
out
mov
je
jp
rolb
insl
cmp
icebp
pushl
jp
mov
cmpsl
out
call
xorl
call
pop
jg
jg
mov
mov
add
clc
push
adc
mov
jg
jbe
aas
test
mov
inc
xchg
pop
mov
incl
fnstsw
sti
add
mov
cmc
add
scas
test
decl
jne
xor
lods
sbb
sbb
lods
cmp
inc
xchg
cltd
nop
sbb
movsb
add
stc
mov
rolb
incl
outsb
add
add
cmpsl
ljmp
xor
mov
movsl
adc
jecxz
mov
imul
sub
add
out
adc
call
xlat
sbb
in
insl
movsb
add
jnp
loopne
dec
filds
xchg
inc
jecxz
and
lods
add
sub
jbe
les
push
fiadds
lds
add
mov
mov
and
sbb
or
add
adc
in
adc
fstl
xchg
or
adc
add
jae
std
xchg
jns
inc
call
jae
or
std
call
pop
inc
inc
call
sysret
inc
or
mov
mov
jbe
sbb
dec
clc
mov
incl
jmp
add
add
push
out
cmp
dec
outsl
sbb
adc
icebp
test
cmp
push
or
add
cld
not
lret
icebp
cmp
into
aaa
sbb
push
call
mov
mov
addl
inc
out
iret
ret
push
cmp
add
add
mov
sbb
mov
cld
xor
add
add
jg
call
jp
div
jne
subb
call
ljmp
inc
xchg
pop
inc
shll
pushl
jl
push
adc
jo
dec
add
nop
adc
xchg
mov
jo
xchg
jl
sub
jp
jno
clc
outsb
bound
xor
std
je
xor
xchg
xchg
sbb
add
mov
jb
xchg
add
mov
mov
std
jb
xchg
add
popf
adc
mov
ja
div
jmp
inc
insb
or
xchg
jo
rorl
fadds
es
cli
jnp
fnop
adc
or
loopne
xchg
or
adc
pop
add
test
pop
movb
push
int3
cmp
xchg
out
add
mov
out
sub
out
call
add
xchg
pushf
sbb
dec
add
add
push
jecxz
out
dec
add
inc
cli
sub
inc
add
add
mov
cmc
jmp
sub
mov
push
cmpl
push
in
sub
mov
add
scas
in
lahf
mov
cmp
insl
add
push
mov
aad
popw
jge
xchg
jae
repz
out
out
jl
jg
jns
mov
out
jle
stc
stos
inc
inc
add
jb
xor
inc
out
lds
mov
test
in
jl
sub
add
repz
aam
sbb
dec
icebp
test
testb
adc
or
cli
out
add
xor
incl
aaa
sbb
sbb
aaa
adc
enter
or
sti
xor
cwtl
cld
jle
in
hlt
cmpsl
icebp
jp
scas
stc
jne
mov
mov
jnp
jge
roll
add
add
insl
push
loopne
out
inc
inc
call
mov
cmpl
sbb
inc
jno
cld
pushl
jne
push
notb
jo
dec
add
mov
or
adc
out
push
adc
jl
incl
jns
add
out
add
stc
mov
cmp
jno
mov
call
jo
jge
out
jg
insl
pop
idivl
mov
cltd
pop
adc
xchg
add
call
xchg
in
data16
jbe
add
rcrl
xor
cld
ljmp
cmp
jmp
add
clc
sbb
repnz
or
mov
dec
mov
cmp
shl
jno
int
das
rorl
shlb
orl
or
jbe
jmp
or
out
adc
add
and
sub
add
inc
push
std
sarb
into
mov
adc
sub
loop
lods
call
movsl
into
push
add
add
inc
jo
ljmp
sub
jmp
dec
xchg
clc
sub
testb
je
sarb
or
icebp
cmc
pushl
psubsb
xchg
clc
sub
testb
add
jl
icebp
idiv
out
addr16
sub
in
out
jp
inc
add
push
sbb
test
repz
clc
jmp
jb
add
gs
clc
popf
in
clc
jmp
jb
add
sti
clc
add
cli
decl
add
sbb
add
imul
decl
add
add
add
add
pusha
sti
cld
cmc
clc
lcall
sti
fadds
add
enter
add
decl
clc
lcall
dec
add
add
add
add
sti
in
cmc
clc
jmp
jge
decl
add
add
repnz
incl
add
pop
add
add
sti
pushl
in
decl
jp
inc
ljmp
pushl
arpl
cs
lock
dec
cmp
ljmp
jno
std
push
pop
in
gs
imul
cld
pushl
cld
pushl
pusha
std
out
call
xorl
jmp
pusha
std
mov
icebp
ljmp
jmp
cld
pushl
pop
std
mov
repz
jmp
jmp
pop
std
data16
icebp
pop
sti
out
jno
out
jno
out
jno
out
jno
out
jno
cmpsl
insl
sub
xchg
insl
and
push
insl
sbb
in
adc
cli
addr16
addr16
addr16
cli
stos
addr16
cli
les
cli
mov
in
jo
fdivr
inc
push
int3
cli
xor
cli
adc
cli
loop
mov
into
data16
and
cli
sub
cli
xor
cli
dec
addr16
outsb
data16
pop
data16
decl
iret
sti
clc
mov
sti
clc
mov
fdivr
clc
pop
clc
adc
sti
clc
std
enter
cwtl
sti
clc
dec
cwtl
sti
clc
lea
add
mov
sti
clc
or
xchg
sti
clc
in
sti
clc
cmp
add
gs
sti
clc
xchg
dec
sti
clc
jmp
push
sti
clc
test
clc
and
clc
jns
sti
clc
mov
sti
clc
mov
sti
clc
stos
or
clc
xchg
clc
mov
clc
add
arpl
incl
sti
decl
arpl
ljmp
fs
call
sti
lcall
jmp
sti
jle
sti
decl
je
push
jae
incl
or
sti
lcall
je
pushl
sti
jmp
sti
inc
jae
call
jae
pushl
jae
lcall
sti
ljmp
jae
jmp
jae
jmp
sti
ljmp
sti
mov
outsb
sti
mov
outsb
sti
decl
sti
pushl
outsb
std
xchg
jle
outsb
std
jbe
outsl
std
outsb
pop
outsl
std
data16
std
pop
outsl
std
add
outsb
std
dec
mov
inc
or
in
insl
std
ss
std
cs
insl
std
es
insl
std
push
cmpsb
insl
std
push
lret
push
shrb
outsb
std
notb
std
out
jg
std
out
outsb
std
fidivs
outsb
std
adc
into
jmp
push
std
mov
push
std
cmpsb
lea
sahf
add
xchg
mull
mov
mov
testl
insb
imull
pop
fs
pop
pop
idiv
pop
push
imul
pop
dec
notl
cmp
and
sub
mov
and
mov
je
imul
jae
testl
cld
notb
in
testb
fdiv
jo
aam
fs
notb
xchg
lods
je
idivb
sbb
cmc
clc
fstpl
clc
mov
add
clc
mov
hlt
clc
push
in
clc
popa
fdiv
clc
aaa
out
clc
adc
repz
inc
repz
and
repz
mov
movsb
repz
fistpl
clc
push
lahf
repz
cmp
jg
clc
cltd
add
repz
popa
addr16
gs
repz
lods
addr16
xchg
pop
repz
ret
inc
repz
scas
aas
repz
roll
clc
add
sti
dec
outsb
sti
call
nop
sti
mov
nop
sti
jmp
nop
sti
decl
nop
sti
call
nop
sti
lcall
nop
sti
call
nop
sti
pushl
test
push
test
incl
push
test
ljmp
sti
decl
add
add
call
cmpsb
sti
push
cmpsb
sti
decl
add
add
add
and
add
lret
or
add
cli
mov
pushf
cld
mov
out
pushl
pushf
cld
cmpsb
loopne
cld
sahf
in
cld
xchg
int3
popf
cld
mov
popf
cld
jle
popf
cld
jbe
popf
cld
add
popf
cld
pop
sahf
cld
pop
es
cld
push
adc
cld
inc
and
cld
ss
popf
cld
ficompl
cld
push
jl
cld
push
inc
lahf
cld
push
xor
cld
sar
push
jmp
popf
cld
out
cld
pushl
xchg
cld
add
fwait
fwait
mov
repz
repz
add
repz
repz
test
movsb
cltd
jge
nop
cltd
jne
mov
gs
cltd
pop
repz
dec
repz
pushf
inc
repz
pushf
cmp
repz
sub
repz
adc
repz
add
repnz
fwait
in
repnz
fwait
in
decl
jne
repz
sub
ljmp
aad
clc
xchg
or
hlt
clc
cltd
std
repz
test
in
repz
pop
in
clc
clc
jecxz
repz
ret
or
clc
out
cmc
clc
push
cli
hlt
clc
ret
hlt
hlt
clc
clc
lods
in
clc
test
fcomip
clc
fildl
cmc
clc
clc
mov
add
hlt
clc
mov
fcomip
clc
mov
hlt
clc
popf
fxtract
clc
add
incl
cwtl
sti
call
cwtl
sti
ficompl
sti
ljmp
sti
call
pushl
sti
incl
sti
incl
sti
pushl
xchg
sti
call
mov
ljmp
mov
ljmp
mov
call
pushl
pushl
sti
dec
xchg
sti
call
xchg
sti
incl
mov
xchg
sti
lcall
incl
xchg
sti
pushl
sti
incl
call
xchg
sti
incl
xchg
sti
pushl
xchg
cld
mulb
xchg
cld
out
adc
cld
out
xchg
cld
fidivs
xchg
cld
ficoms
cld
movb
pushl
cmpsl
cld
scas
pushf
cmpsl
cld
cmpsb
mov
cld
sahf
mov
cmpsl
cld
mov
mov
mov
cld
jbe
mov
cld
pop
mov
cld
push
or
cld
dec
sbb
cld
inc
shlb
fisubl
cld
es
popf
cld
push
push
sahf
cld
push
inc
sahf
cld
push
add
add
sbb
jno
jmp
jno
out
jno
jecxz
jno
loope
jno
xchg
add
movsb
mov
mov
lods
out
ljmp
out
jne
jno
andb
out
lock
sti
add
push
add
and
jno
aam
jno
call
add
lret
out
cld
mov
xor
and
jno
aad
jno
incl
jb
sub
add
push
jmp
pop
add
jmp
dec
push
in
clc
out
or
clc
fsts
clc
rorl
clc
pop
pop
in
clc
aad
in
clc
xlat
adc
clc
test
aam
clc
fwait
int3
jmp
xchg
aam
clc
mov
jmp
jns
jmp
addr16
jmp
addr16
clc
jnp
jmp
jae
in
clc
lea
clc
jne
in
clc
mov
or
clc
mov
or
clc
jmp
add
mov
sti
incl
sti
cli
mov
sti
decl
add
add
add
pop
insl
add
gs
pop
imul
add
lock
ds
popa
insl
cmc
inc
outsb
cmc
cmp
out
outsl
gs
adc
outsb
cwtl
add
push
pop
je
adc
gs
add
add
test
inc
scas
jo
jb
jbe
je
gs
insb
mov
je
pop
data16
call
add
xchg
jmp
push
arpl
stos
pop
je
aad
push
xlat
cld
fnsave
addr16
shlb
dec
rcrl
shrb
mov
push
lods
insl
stos
pusha
arpl
cld
ss
pop
pop
add
test
or
pop
adc
arpl
dec
imul
cld
jmp
aam
inc
outsb
fsubrs
push
arpl
sub
cld
xorb
jbe
popa
adc
jb
push
push
out
and
and
cmp
mull
cmp
insl
xchg
pop
shll
add
add
cmpsb
jne
je
data16
pop
xchg
pusha
sub
shrb
mov
jl
mov
cmp
add
add
mov
inc
out
aaa
add
inc
je
pop
sub
add
jbe
sbb
outsb
dec
jbe
add
shrl
rcrl
fstps
jbe
sub
arpl
lcall
mov
adc
mov
bound
cmpsb
pop
insl
jmp
xchg
je
enter
fistpl
jmp
aaa
je
mov
es
arpl
insl
cmp
mov
mov
dec
outsb
xorb
add
add
jo
xor
add
jle
insl
push
decl
mov
add
push
insl
add
add
sub
dec
imul
imul
je
inc
jno
insl
add
add
insb
je
inc
jno
jge
addr16
jno
pop
inc
and
add
add
outsl
mov
dec
pop
add
add
jne
jae
push
mov
arpl
jmp
cmp
push
je
or
mov
iret
dec
je
add
inc
out
data16
std
lods
add
jae
popa
add
push
push
jno
cld
int
pop
pop
pop
loope
pop
aas
lds
popa
pop
jno
std
inc
int3
cmp
adc
jno
std
inc
xchg
clc
jae
mov
sub
dec
outsb
sahf
negb
sbbb
pop
adc
pop
pop
popa
fwait
pop
insl
pop
lds
jno
incb
mov
arpl
cld
call
add
test
or
push
imul
outsl
pop
sbb
insb
push
jno
ljmp
add
adc
push
dec
jno
hlt
add
push
sub
jecxz
xor
mov
jb
push
or
add
add
pop
add
pop
cld
pusha
lds
test
or
dec
add
add
mov
fisttpl
push
xlat
cmp
inc
inc
push
les
add
add
pop
enter
ret
pusha
jno
add
pop
fwait
dec
push
push
xchg
push
dec
insb
jg
jno
ret
add
pop
xchg
pusha
cmp
push
add
cmp
insb
dec
and
inc
jne
sub
leave
arpl
mov
outsb
dec
shrb
iret
es
rcrb
adc
jo
imul
std
mov
fdivrp
and
cltd
arpl
cmc
mov
lret
xchg
cmp
xor
lahf
pop
fs
inc
addr16
add
lock
addr16
inc
insb
inc
nop
push
arpl
jb
jmp
lret
pop
addr16
add
fiadds
je
pop
insb
cmpsl
cld
icebp
add
test
jo
js
add
add
pop
fs
cmp
jg
gs
test
outsb
or
dec
add
jnp
jno
sbb
sbb
dec
sub
jbe
push
jno
les
dec
push
inc
addr16
ds
pop
jb
pop
outsb
adc
in
gs
popa
insb
jno
dec
imul
and
cmp
je
je
fwait
outsb
or
js
jecxz
push
add
pop
push
enter
rorb
outsb
aam
add
insl
or
mov
pusha
arpl
mov
inc
mov
inc
addr16
cld
push
addr16
hlt
inc
js
nop
pop
push
cwtl
jmp
inc
insb
test
popa
add
add
mov
pop
outsb
dec
mov
rclb
sub
inc
push
stos
inc
addr16
add
ret
ljmp
push
and
mov
xor
jnp
push
push
test
push
pop
iret
insl
push
imul
and
xor
inc
cmp
push
dec
pusha
rorb
add
sub
push
adc
imul
push
or
test
bound
nop
dec
out
cmp
push
aad
arpl
push
push
push
les
insb
lcall
cmp
outsb
mov
es
pop
fwait
inc
inc
pop
test
push
add
and
arpl
pop
push
push
jmp
insb
cmp
inc
into
inc
fs
mov
pop
pop
inc
mov
dec
push
fisubl
sbb
imul
xchg
lock
add
sub
dec
inc
sbb
add
add
sti
cmp
pop
je
fcompl
insb
mov
insb
jo
sub
outsb
stc
outsb
imul
add
ud0
gs
insl
cmc
pop
data16
data16
decb
movsl
pop
jo
rcrl
scas
ss
insb
lods
cld
int
insl
pop
gs
mov
gs
pop
inc
mov
pop
add
je
dec
inc
insb
gs
jo
popa
pop
pop
push
sbb
out
dec
imul
mov
inc
pop
add
add
jno
push
adcl
pusha
add
add
stos
cmp
adc
nop
pop
arpl
js
arpl
xlat
cld
cltd
jae
popa
je
bound
je
pop
cld
bound
mov
dec
arpl
xlat
cld
xchg
insl
es
dec
outsb
arpl
cmp
cmp
mov
es
clc
insb
je
add
cld
or
insl
mov
inc
jb
stc
ja
jno
incb
add
popa
add
stos
pop
cmp
out
mov
mov
pop
and
pop
sbb
out
sar
jb
pop
mov
pop
adcl
out
mov
mov
pop
insb
jl
adc
cmp
sti
nop
pop
fists
aad
dec
pusha
enter
jno
stc
or
xor
jae
gs
lahf
pop
out
repz
imul
xchg
popa
add
outsb
sti
push
out
add
sbb
arpl
xor
aad
pop
je
jb
movsl
pop
push
push
mov
inc
inc
fs
and
popf
sbb
xchg
or
jmp
sbb
add
popl
xor
jnp
aas
mov
jns
insb
pop
mov
insb
inc
add
add
cmpsl
jns
insb
cmp
idiv
sub
addr16
mov
insl
add
dec
arpl
orb
je
add
popl
aas
gs
aas
insl
call
sbb
insl
mov
add
daa
add
movsb
inc
popa
insb
mov
je
cli
cmp
hlt
imul
add
add
cmp
jbe
cmp
push
add
gs
add
push
push
jb
pusha
pop
jae
sbb
push
push
gs
pop
pop
push
mov
add
add
gs
gs
je
fs
gs
push
push
xor
arpl
add
testb
jb
outsb
imul
cmp
mov
add
jno
incl
xchg
popa
outsb
inc
pop
gs
xor
imul
inc
pop
jae
outsb
adc
addl
pop
bound
pop
jno
jno
ljmp
xor
les
pop
aas
jno
call
sbb
insb
mov
repz
insl
ret
jo
pop
or
add
pop
mov
jo
xchg
xor
pop
xchg
arpl
jbe
add
push
cmp
pop
sub
pusha
pop
xor
mov
xor
int3
outsl
jle
mov
inc
arpl
push
adc
mov
mov
fs
add
push
add
cmp
imul
push
push
popa
stos
imul
inc
pop
fistl
push
add
popa
lds
pop
add
pop
push
inc
lahf
pop
pop
or
mov
je
xchg
insb
dec
adc
push
sub
add
stos
outsl
dec
arpl
push
xor
dec
pop
insl
ficompl
push
add
xor
push
dec
pop
aad
push
mov
cmp
add
sub
ss
insb
jmp
sub
mov
insl
insl
mov
pop
push
jmp
fwait
int
push
push
out
jae
mov
add
add
push
outsl
jg
push
sbb
pop
add
je
jge
imul
addr16
ljmp
add
je
imul
dec
pop
add
add
jb
push
inc
arpl
cmp
add
push
imul
sbb
idiv
ds
xor
add
cmp
in
push
imul
cmp
push
push
outsl
cmp
mov
inc
add
cmp
jmp
pop
jb
cmp
mov
pop
std
inc
int3
inc
outsb
shlb
push
ret
dec
arpl
out
cld
inc
mov
xor
negb
pop
push
insl
jno
std
inc
mov
dec
addr16
or
mov
out
sbb
pop
insb
add
push
push
lret
inc
ret
jno
cld
cmp
mov
push
dec
leave
pop
imul
test
dec
jae
pop
popa
or
arpl
cmpsb
push
pop
add
add
add
mov
loop
inc
pop
loope
push
aam
out
stc
jmp
popa
rorl
cmp
aad
xor
add
inc
cmp
dec
adc
push
add
jo
push
sti
push
addl
or
sub
insb
lret
push
inc
imul
add
arpl
dec
push
push
push
inc
xor
add
xchg
pusha
or
inc
cmpsb
add
mov
adc
pusha
or
mov
aas
out
popl
add
mov
add
jae
arpl
dec
arpl
aaa
popa
inc
scas
add
fildll
arpl
xchg
imul
mov
add
inc
arpl
cmpsb
push
push
addb
sub
inc
arpl
inc
gs
arpl
inc
loope
add
push
jo
outsb
enter
enter
les
gs
into
adc
add
jne
arpl
add
jmp
movsl
adc
lret
add
pop
pusha
je
call
xor
mov
add
imul
add
mov
inc
outsb
push
push
arpl
add
xchg
inc
gs
push
std
xor
cmp
inc
cld
inc
gs
insb
addr16
arpl
add
inc
mov
lcall
gs
popa
outsb
mov
outsl
inc
lret
add
xor
pop
jb
stos
push
pop
add
js
jmp
pop
je
test
sarb
push
jno
incb
sub
int
jo
mov
and
inc
xchg
or
arpl
sub
jno
push
mov
out
sub
pop
pop
add
jno
call
in
push
addr16
scas
pop
arpl
std
inc
dec
mov
arpl
leave
push
pop
inc
ret
dec
je
mov
jno
incb
mov
pop
add
add
sbbl
pop
mov
arpl
xor
sub
push
push
fsubs
cmp
jno
mov
cmp
add
inc
inc
jb
sub
cmp
pop
or
push
add
add
add
push
push
sub
test
push
and
addr16
dec
out
ljmp
push
or
add
dec
je
arpl
add
sbbl
imul
adc
push
mov
push
cmp
data16
gs
dec
lcall
sub
mov
or
bound
cmpsl
addr16
adc
jne
xor
std
dec
inc
arpl
cmp
je
inc
add
and
imul
dec
xor
push
pop
push
add
push
insl
dec
fsubrl
inc
idivl
data16
decl
pop
push
insl
push
fcompl
dec
decl
add
pop
imul
gs
jmp
mov
imul
popa
pop
pop
gs
pop
push
inc
dec
pop
outsl
aas
cld
out
add
pop
arpl
addr16
cs
gs
cmp
add
pop
je
mov
pop
gs
jno
arpl
std
inc
adc
dec
arpl
mov
add
sbb
push
arpl
push
imul
cld
daa
jae
dec
arpl
mov
jo
out
jne
lcall
int3
inc
push
add
add
sub
test
outsl
pop
mov
adc
jno
cld
inc
add
inc
je
cld
inc
inc
jno
incb
shll
push
xor
rorb
add
add
dec
dec
int3
push
and
sbb
data16
enter
out
dec
cltd
push
adc
push
pop
mov
dec
mov
popa
jns
jno
cmp
aaa
leave
dec
mov
cmp
push
aam
push
push
add
sub
push
sarb
push
xchg
dec
push
push
jno
dec
add
xchg
imul
or
popa
stc
add
es
push
pop
repz
dec
addr16
sub
je
push
push
jmp
inc
insl
les
push
pop
dec
dec
mov
dec
movb
add
inc
bound
add
arpl
add
cmp
imul
flds
ficoml
xchg
add
cwtl
sub
je
jne
and
imul
cltd
pop
add
pop
pop
add
add
push
add
aam
popa
outsb
je
outsl
push
lahf
xor
add
add
add
je
ljmp
inc
lods
imul
movw
xlat
pop
je
icebp
pop
outsl
pop
cmp
incw
add
pop
je
jmp
add
mov
adc
les
add
adc
outsl
add
add
push
jne
je
jno
std
inc
add
pusha
outsb
cld
pop
je
add
je
lcall
dec
mov
add
dec
lds
adc
push
add
add
dec
pop
sbb
mov
push
jl
add
decb
jle
pop
fdivs
imul
jo
insb
int3
cmpsb
pop
data16
push
insl
jno
das
inc
mov
inc
jo
jno
std
inc
add
adc
cwtl
or
pushf
ljmp
sbbb
mov
push
adc
or
sub
imul
bound
cmp
test
push
inc
aas
push
inc
push
aad
insb
pop
mov
xor
add
add
push
add
pop
xchg
data16
mov
dec
fwait
add
cmpsb
push
ficoms
inc
add
arpl
push
flds
xor
test
push
lds
mov
pop
push
insb
jno
scas
add
push
inc
push
popf
cmp
dec
cmpsb
pop
inc
dec
mov
aaa
jo
mov
outsb
push
push
popa
insl
sbb
add
push
insb
aas
arpl
xchg
sbb
cs
fsubrl
pop
imul
jb
popf
inc
popa
push
or
enter
imul
insl
aas
arpl
and
aas
pushf
mov
push
ja
lret
dec
push
jb
ljmp
xlat
pop
push
lret
pop
imul
push
add
or
je
js
arpl
inc
dec
adc
pop
sldt
jg
dec
outsl
ja
insl
jo
xor
sbbl
insb
add
pusha
dec
add
xor
cld
push
arpl
punpckhdq
pop
insb
gs
pusha
imul
cmp
das
je
lods
xor
popa
addr16
je
or
add
je,pn
in
cmp
rorl
jb
push
add
add
jb
xor
dec
jno
push
imul
push
push
ja
or
adc
pop
ja
std
inc
bound
pop
insb
push
push
imul
dec
frndint
xor
pop
je
add
popa
inc
mov
addr16
frndint
imul
push
les
inc
mov
push
push
dec
outsb
sbb
pop
dec
sbb
das
add
add
addb
orl
jno
add
cmpb
les
push
add
pop
push
cmpsl
arpl
popf
pop
push
pop
lods
arpl
mov
push
push
arpl
arpl
push
sbb
arpl
gs
push
pop
push
pop
dec
out
and
adc
gs
dec
add
inc
add
sbb
rclb
pop
aad
dec
pop
ret
add
mov
and
fs
pop
sub
mov
std
inc
mov
add
pop
add
push
mov
pop
je
push
add
pop
insl
mov
push
dec
bound
pop
ret
popa
je
mov
insl
dec
ret
popa
jo
xchg
pop
push
jmp
nop
push
dec
or
dec
outsb
adc
inc
or
sub
inc
push
imul
jne
std
sbb
dec
add
dec
outsb
shlb
push
inc
les
inc
sub
inc
push
imul
jb
lcall
je
sub
lods
sbb
add
popf
push
arpl
cld
xor
lock
add
mov
adc
jbe
insb
jne
inc
js
sbb
add
insl
popa
mov
add
inc
cmp
sti
icebp
and
add
outsb
xor
jno
je
ja
add
xor
popa
outsb
les
push
popa
les
jae
adc
add
clc
pop
je
push
data16
push
insb
ficomps
mov
addl
pop
je
jno
pop
imul
pop
inc
enter
sarl
jb
dec
rorb
inc
ret
outsb
xchg
cmp
mov
jno
add
nop
add
push
dec
xchg
ds
push
jno
add
nop
in
push
pop
call
jo,pn
cli
pop
insl
ds
je
jmp
pop
je
add
jo
mov
cld
dec
sbb
sub
jno
cld
dec
adc
dec
arpl
mov
or
xchg
sub
add
add
pop
fwait
imul
xchg
push
jge
mov
pop
jae
cmpsl
pop
push
mov
pop
push
push
jno
dec
add
pop
ss
sahf
push
inc
inc
jno
add
cmp
adc
dec
sahf
add
add
cmc
xor
xor
add
sub
cmc
xor
add
pop
or
pop
rorl
adc
add
pop
dec
arpl
jb
mov
ret
sahf
jb
add
sahf
pop
ds
pop
insl
push
xchg
push
push
cmp
inc
inc
test
push
push
jne
dec
sbb
xchg
pop
insb
or
cmp
dec
arpl
sub
add
lcall
jge
arpl
sub
int
push
push
enter
jmp
adc
add
pop
pop
push
mov
push
mov
or
cs
and
add
gs
or
lret
insl
in
cmp
dec
add
mov
push
fs
mov
jge
dec
sub
dec
pop
dec
je
pop
pop
insl
add
dec
inc
xor
pop
popa
test
ltr
pop
je
xchg
pop
imul
gs
imul
pop
dec
outsb
jno
popa
je
pop
insb
imul
mov
arpl
addr16
stc
fdivr
pop
jno
cmp
xchg
inc
outsb
je
je
sbbb
jo
dec
lds
push
fwait
push
imul
lods
xchg
push
push
cmp
add
xchg
push
pop
imul
popa
mov
cld
das
jno
push
arpl
pusha
cmp
inc
lock
insb
dec
sbb
add
lds
and
pop
push
jno
dec
add
pop
mov
gs
push
jno
cmc
add
les
in
stos
inc
rolb
add
dec
andb
push
aam
push
add
pop
andl
mov
add
push
inc
lea
das
add
test
xor
dec
ss
add
push
xchg
pop
xor
aaa
and
pop
dec
push
out
dec
xor
pop
dec
adc
cmp
add
lcall
push
dec
arpl
add
aad
pop
pop
fstpl
jmp
push
pop
inc
int
push
push
cltd
xlat
dec
push
nop
iret
dec
jo
les
leave
cmp
inc
mov
adc
test
das
dec
test
pop
push
insl
cmp
bound
dec
dec
xchg
dec
add
pop
outsb
dec
cwtl
and
pop
push
xchg
add
pusha
jne
arpl
add
bound
insl
and
addb
add
push
pop
je
aaa
outsb
outsb
sub
add
aaa
outsb
gs
sub
lods
push
pop
je
cld
push
add
or
gs
movsl
sub
sub
jbe
pop
je
dec
add
add
repz
daa
push
lret
push
push
outsl
fistl
imul
add
pop
std
data16
and
add
and
push
pop
inc
insb
outsl
dec
sub
add
sub
adc
fs
add
out
push
inc
jno
cmp
mov
dec
je
mov
outsb
dec
test
data16
sbb
aad
cmp
pop
rcrb
lret
inc
outsb
push
int3
sub
add
cld
cmp
fwait
push
dec
loope
pop
dec
fcomps
jp
imul
cmp
cmp
popf
ds
arpl
pop
pop
outsb
xchg
test
pusha
outsb
test
pop
jae
ljmp
xchg
dec
pop
arpl
pop
dec
pop
add
push
push
add
add
pop
pusha
dec
and
pop
push
inc
add
cmp
and
data16
rcll
cmp
add
inc
iret
push
add
xor
xor
cs
mov
out
cmp
cmpsb
push
out
xchg
ss
xor
push
lods
pop
jnp
jno
cmpsb
xor
out
sbbb
inc
add
xor
push
cmpsb
xor
inc
cmp
aas
out
mov
xor
and
cmp
je
inc
sub
push
xor
jmp
das
xor
sbb
and
and
je
je
dec
sub
jb
ljmp
xor
je
pop
pop
cmpsl
sub
jmp
adc
arpl
iret
xor
cltd
and
add
mov
dec
arpl
and
mov
add
vpacksswb
and
nop
sub
pop
add
or
push
add
pop
fs
push
je
fadds
popl
xchg
pop
je
mov
push
pop
outsb
pop
add
add
je
mov
push
addr16
clc
pop
outsb
lods
push
pop
add
pop
push
cmp
push
jno
clc
dec
popa
outsl
out
add
mov
and
in
dec
dec
gs
repz
pop
inc
sbb
imul
push
je
mov
out
pop
xchg
ds
outsb
call
dec
je
push
pop
push
pop
pop
outsl
fs
je
loope
add
add
adc
pusha
dec
dec
mov
aas
js
test
push
je
xlat
push
arpl
aad
je
jbe
pop
add
mov
dec
std
inc
iret
popf
pop
outsb
movl
pop
mov
lds
xchg
test
push
je
add
xchg
xor
pop
scas
and
pop
xchg
and
and
xor
push
cmp
inc
pusha
aaa
and
sbb
jno
push
add
sub
pop
push
sub
sub
sti
xor
and
dec
sbb
or
push
or
adc
out
sub
push
aad
inc
and
pop
adc
dec
pop
cmp
add
test
int
test
and
pop
shrb
jbe
jno
xchg
cmp
push
sub
pop
cmp
sub
jmp
xchg
xor
cmp
inc
dec
inc
inc
push
cmp
add
insl
inc
arpl
ss
bound
outsb
or
add
jl
inc
arpl
push
sub
pop
es
jb
inc
mov
push
inc
sbb
arpl
jae
arpl
jb
add
add
adc
arpl
cmpsb
add
fstpl
jae
dec
add
mov
dec
addr16
std
sti
add
dec
push
insl
jb
sbb
outsl
add
push
imul
jmp
push
addr16
add
add
dec
insb
je
and
add
push
ja
push
popa
add
jmp
sbb
adc
mov
dec
outsb
arpl
push
add
out
pop
jb
and
add
and
ljmp
add
jno
pop
imul
pop
dec
push
cmp
xchg
jae,pn
pop
je
dec
add
je
pop
je
cmp
add
clc
push
dec
pop
imul
and
cmp
pop
imul
pop
imul
add
adc
pop
incb
inc
jae
pop
insl
or
push
addr16
or
dec
outsb
add
int
add
add
jp
je
jo
xchg
dec
je
add
rclb
push
addb
mov
das
adcb
daa
add
sbb
push
pop
fwait
sub
push
mov
inc
push
test
xchg
add
dec
arpl
inc
pop
push
cmp
sbb
and
sub
push
jno
inc
add
and
sti
sbb
or
and
pusha
xor
push
pop
and
push
sbb
rclb
sbb
add
add
push
in
iret
fistpl
lds
add
jmp
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
add
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
pop
add
add
add
dec
add
add
add
pop
add
add
add
push
sarl
mov
sbb
add
add
add
add
cmp
js
mov
sbb
add
or
add
or
add
fdivr
fnstenv
fldl
add
roll
add
cwtl
cld
jmp
cld
decl
decl
idiv
nop
add
add
add
add
add
add
cmpsl
pop
std
cmpsl
cld
pushl
cld
pushl
les
add
test
mov
pushl
cld
pushl
cwtl
or
test
rorl
test
cld
pushl
mov
mov
cld
pushl
cld
push
push
xchg
adc
test
cld
call
test
add
xor
enter
rorl
leave
lods
cltd
add
mov
sub
cmovo
pusha
jp
dec
sbb
in
inc
mov
adc
pushl
aas
xor
je
test
inc
push
jmp
pop
sbb
mov
jg
xor
test
subb
sub
xchg
stos
push
movsb
jp
mov
clc
sarl
outsb
das
aas
mov
add
cmp
adc
mov
lahf
mov
imul
inc
add
inc
inc
add
mov
lahf
add
xchg
inc
in
adc
repz
mov
mov
mov
jno
cmpsb
dec
mov
sahf
pop
fdivl
push
xor
push
into
pop
out
dec
or
icebp
pop
sbb
jl
bound
lret
int3
pusha
xchg
out
in
push
lock
sub
xor
mov
mov
dec
test
add
mov
lret
lods
scas
cmpsb
lods
cmp
scas
sti
rolb
cmp
xor
pop
sbb
xor
outsl
orl
sbbl
aas
mov
sbb
sub
aas
sbb
scas
imul
daa
xchg
aas
sbb
int
scas
xlat
fistpll
dec
jb
into
jmp
and
aas
pop
push
push
loope
enter
pop
sarl
enter
dec
lds
xchg
cmpsl
aas
fdivs
push
sub
mov
mov
mov
xor
or
push
mov
jae
adc
mov
hlt
stos
mov
add
add
mov
pop
fs
dec
sub
fists
jp
add
push
xchg
jle
sub
and
mov
inc
xchg
leave
cltd
mov
push
imul
addb
jb
pop
scas
aad
mov
fimull
dec
xchg
call
orb
repnz
adc
call
fmull
dec
xchg
fstl
clc
sub
int
in
pop
insl
fs
push
cmpsb
testb
mov
sbbb
shlb
adc
stc
pop
loopne
stos
adc
lock
adc
es
out
jno
out
jno
out
jno
aas
inc
xor
out
inc
add
add
add
flds
jno
add
jb
add
das
inc
add
inc
add
jb
add
jb
add
jb
add
jb
add
xor
jmp
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
in
clc
jle
add
in
call
jle
add
in
ljmp
in
incl
js
in
incl
icebp
in
incl
in
cmp
in
ljmp
in
call
lock
fadds
cmp
movsb
cmpb
test
cmp
rolb
add
cmp
lock
add
jg
add
jg
add
jg
add
jg
add
jg
add
cmp
inc
jg
add
cmp
and
add
insb
cmpb
and
add
cmp
test
cmp
pushf
cmpb
mov
cmp
faddl
cmp
clc
cmpl
sbb
cmp
jno
cmpl
xchg
cmpl
and
jno
test
jno
jl
jno
test
jno
xor
jno
xor
jno
xor
inc
jno
xor
xor
inc
jno
xor
inc
jno
xor
inc
jno
xor
inc
jno
ss
jno
ss
jno
ss
jno
ss
jno
ss
jno
ss
jno
ss
jno
ss
jno
ss
jno
ss
jno
jecxz
mov
mov
xor
cmp
add
xor
aas
cmp
add
xor
sub
add
add
cmp
add
cmp
add
aaa
xor
mov
xor
stos
aaa
xor
dec
aaa
xor
out
jno
out
jno
out
jno
out
jno
out
jno
call
add
out
jno
out
jno
jb
jg
out
jno
out
jno
out
jno
fldcw
jno
out
jno
add
jb
add
jb
add
jb
add
jb
add
push
ljmp
jb
add
jb
add
ljmp
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jmp
call
jb
add
jb
add
jmp
call
jmp
jb
add
enter
or
lcall
lcall
ljmp
fdivr
fdivr
incl
std
fdivr
fdivr
incl
std
lcall
std
call
cli
cmp
mov
lcall
std
decl
std
incl
pop
std
lcall
incl
add
lcall
lcall
dec
add
lcall
std
pushl
cld
pushl
or
jno
cld
pushl
cld
pushl
cld
pushl
or
jno
cld
pushl
cld
pushl
cld
pushl
add
pushl
cld
pushl
cld
pushl
add
jno
cld
pushl
cld
incl
jno
cld
pushl
add
pushl
cld
pushl
cld
pushl
add
jno
cld
pushl
cld
pushl
cld
pushl
add
jno
cld
pushl
cld
pushl
cld
pushl
or
jno
out
jno
out
jno
out
jno
xor
push
add
add
out
jno
out
jno
lret
add
add
out
jno
out
add
inc
or
add
add
out
jno
jns
ja
out
jno
out
jno
out
jno
add
jno
out
jno
out
jno
addr16
jno
out
jno
out
jno
sbb
xchg
add
add
out
jno
add
jb
add
outsl
out
call
jb
add
jb
add
add
in
call
jb
add
jb
add
in
call
jb
add
jb
add
lods
in
call
jb
add
jb
add
mov
call
jb
add
jb
add
mov
call
jb
add
jb
add
mov
call
jb
add
jb
add
in
incl
pop
add
add
add
dec
add
add
add
sbb
add
or
add
movl
add
or
add
cltd
cmpl
add
add
add
add
add
cmpl
fadds
add
fadds
add
enter
popf
jg
add
add
add
jg
add
cwtl
add
add
jg
add
add
pop
add
add
cld
pushl
jg
jno
cld
pushl
cld
pushl
cld
pushl
cmpb
xchg
cld
pushl
cld
pushl
jg
jno
cld
pushl
cld
pushl
cld
pushl
cmpb
xchg
cld
pushl
cld
pushl
mov
jno
cld
pushl
cld
incl
jno
cld
pushl
mov
jno
cld
pushl
cld
pushl
cld
pushl
jno,pt
cld
pushl
cld
pushl
cld
pushl
cwtl
jno,pt
out
jno
out
jno
out
jno
cmp
add
out
jno
out
jno
lock
add
add
out
jno
out
jno
or
dec
add
add
out
jno
out
add
add
add
out
jno
pop
movsb
xchg
add
mov
out
jno
lcall
add
das
xor
adc
xor
comiss
add
das
xor
pop
das
xor
and
xor
pop
das
xor
add
sahf
inc
add
popl
jmp
jb
add
jb
add
jb
add
jb
add
add
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
cwtl
decl
lcall
incl
pop
decl
decl
lcall
lcall
decl
decl
lcall
lcall
decl
decl
lcall
lcall
decl
decl
fdivr
fdivr
dec
std
dec
std
fdivr
fdivr
dec
std
dec
std
lcall
std
incl
mov
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
or
jno
cld
pushl
imull
push
add
in
test
xlat
jmp
cltd
aas
in
arpl
cltd
xchg
cmp
jno
add
jno
in
jp
in
jp
in
push
in
push
pop
jmp
in
lock
lock
push
shl
push
lock
lock
mov
lock
fstl
fstpl
jb
loop
fucomp
lock
fstl
icebp
sbb
lock
mov
lock
fstl
lock
add
rcr
push
icebp
ret
icebp
xor
and
ret
icebp
rcr
shl
loop
jb
loop
fsubrp
in
xchg
ficoms
out
sbb
in
xor
jmp
xor
or
adc
sbb
pushf
jae
insl
xchg
arpl
push
mov
cmp
pop
mov
lea
push
dec
xchg
cmp
add
in
repz
add
cmp
inc
inc
cmp
pop
and
xchg
movlps
popf
pop
cmpl
pop
jae
insl
pop
arpl
push
rcpps
cmp
fbstp
cmp
int3
xchg
cmp
les
add
jb
add
int3
xchg
add
pushf
xchg
adc
jl
and
pushf
xchg
xor
dec
xchg
inc
xor
xor
xor
xor
or
test
sbb
xchg
xor
mov
mov
xor
hlt
xor
xor
adc
jl
and
sbb
xor
int3
xchg
inc
xor
xchg
push
xor
xchg
fs
xchg
je
mov
xchg
xor
movsb
xor
les
sbb
aam
jno
in
jmp
mov
sti
subb
out
sbb
out
sub
out
cmp
in
dec
arpl
in
pop
inc
or
imul
jnp
sub
mov
out
fwait
mov
shr
mov
mov
dec
out
jmp
xor
sti
subl
sbb
out
sub
out
cmp
out
dec
bound
pop
inc
mov
imul
jnp
sub
mov
lock
add
shr
mov
stos
shlb
neg
rcl
idivl
aam
out
mov
or
pop
aam
out
pop
aam
lock
xor
sub
or
sbb
adc
cli
shrl
ljmp
lock
xor
pop
pushf
out
jno
mov
jno
jmp
ror
mov
idivb
iret
push
testl
pop
aam
out
stos
aam
out
stos
aam
out
lcall
lock
dec
loope
xor
mov
mov
mov
int
cmpsl
xor
into
fwait
clc
jmp
jne
add
xchg
divl
or
xor
adcl
xor
pop
ja
jmp
add
add
xchg
jge
xor
dec
jno
loope
xor
testb
cmp
clc
cmp
sbb
cmp
nop
cmp
mov
dec
aas
push
cmpb
cmpsb
enter
clc
dec
push
stc
clc
add
add
mov
xor
pusha
xor
loopne
pushf
xchg
push
inc
xchg
fnsave
mov
mov
xor
out
stos
addr16
cmpsb
sbb
lods
xchg
cmp
lods
sbb
add
cmpsl
push
das
cmpsl
cwtl
cmp
movsl
sarl
outsb
movsl
or
inc
lods
sbb
sbb
cmp
add
xchg
cmp
ljmp
push
loopne
movsl
jmp
call
sub
arpl
out
ja
in
outsl
jle
shlb
out
pop
pusha
out
push
cmpsl
insb
decl
mov
hlt
imul
stc
mov
cmc
in
push
mov
popf
in
jle
adc
mov
jge
mov
pusha
in
mulb
repnz
arpl
push
cmc
lret
int
hlt
add
mov
out
rcll
icebp
push
imul
dec
rcll
adc
fmuls
in
jp
imul
cmpsb
adc
jmp
aam
jmp
aam
out
fcoml
call
scas
sub
out
xlat
out
push
cwtl
data16
add
repz
rolb
mov
rcrl
rcl
repnz
sub
and
xor
push
xorl
add
xor
xor
in
xor
iret
enter
cmp
push
faddp
xor
fcmovbe
aaa
inc
int
cmp
popf
sub
adcb
xor
arpl
js
mov
add
push
cmp
dec
in
push
push
pop
cmp
inc
xchg
clc
leave
jb
add
inc
aas
xor
inc
stos
das
clc
cmp
mov
inc
mov
xor
xchg
dec
xor
nop
xor
push
xor
xchg
mov
xor
cmpsl
xchg
cmpsl
repz
jnp
lea
jge
insb
stos
out
cmc
test
cmp
cmpsl
int3
cmp
mov
sahf
pop
aas
xor
clc
jmp
sti
call
mov
xor
adc
push
xchg
dec
xor
jge
mov
xchg
lds
add
inc
xor
push
xor
out
outsb
subl
xchg
arpl
out
mov
out
shlb
in
lret
in
std
inc
nop
out
push
inc
scas
out
cmp
out
push
inc
out
insb
mov
mov
out
shll
out
in
andb
push
jge
call
xor
call
ficompl
call
daa
cmp
jmp
clc
aas
lods
jmp
cmpsb
adc
lret
jmp
cltd
xchg
in
cltd
aas
in
mov
pushf
jmp
fsubs
jmp
fsubs
jmp
fsubrs
jmp
fcoms
jmp
xlat
cli
ljmp
xlat
xchg
ljmp
fs
call
dec
fsts
adc
adc
sarl
mov
xchg
out
mov
inc
add
add
aad
iret
pop
aad
iret
imul
call
into
mov
fwait
into
xchg
aad
into
sti
aad
iret
mov
jae
nop
fadds
cmp
aaa
xor
and
add
orl
push
inc
sub
mov
or
fists
hlt
cmp
adc
mov
adc
insl
jne
add
ret
outsl
lds
das
ljmp
das
push
push
sub
and
jno
insb
sub
inc
mov
test
xor
lea
adc
pusha
xor
cmp
inc
mov
cmp
mov
cmp
jbe
lret
cmp
inc
cmp
mov
cmp
mov
cmp
mov
iret
jae,pt
xor
aas
xchg
test
aas
xchg
sahf
sarl
sahf
into
aas
sbbl
aas
add
stc
jmp
add
mov
sub
popf
scas
aas
xor
dec
xor
lods
pop
xor
lods
jle
jno
aam
mov
mov
or
mov
mov
int3
cmp
cmp
in
pusha
sub
shlb
dec
shl
inc
mov
push
inc
push
rcrl
inc
and
lcall
ror
mov
test
shl
test
push
and
rol
fs
rcrl
pop
and
aam
add
insb
pop
rcl
addl
fdivrl
add
neg
dec
mov
jg
dec
loopne
push
aam
fcoml
cld
fbstp
call
shl
loope
rorb
loop
sar
loope
rcrb
loope
rolb
ja
mov
jecxz
nop
lcall
shlb
mov
int3
rcl
int3
int3
ror
int3
aam
mov
int3
in
jo
in
xlat
push
sbb
test
shlb
es
push
shlb
pop
aas
dec
xor
inc
clc
lds
add
push
xor
sbb
fwait
dec
mov
ss
cmp
cmp
adc
cmp
mov
clc
movsl
jb
add
bound
mov
and
movb
mov
or
aaa
imul
jo
iret
add
xor
cmp
scas
cmp
scas
pop
ds
scas
clc
decl
add
add
and
sbb
xor
push
xor
bound
mov
mov
xor
mov
xor
xor
mov
xor
mov
xor
aad
data16
xor
adc
xor
repz
xor
mov
xor
cmpsl
push
xchg
test
xor
mov
sub
jno
shll
xchg
fbld
rcrl
pop
out
sarb
aaa
rcr
ds
aam
cmp
fdivl
test
jns
out
jbe
stc
cltd
mov
aam
mov
aam
js
aad
js
aad
push
mov
aad
add
inc
dec
dec
dec
jo
jnp
sbb
mov
ss
or
stos
in
in
lcall
fimuls
fstps
add
xlat
lret
xchg
faddp
lret
ficomps
into
fcmovu
ja
add
pop
into
in
fnsave
into
sbb
ficoms
into
or
jecxz
or
fucomp
int
fisttpll
dec
fldl
add
xor
add
lahf
inc
fstl
push
frstor
into
push
fnstsw
cmc
faddl
int
fcoml
int3
adc
push
int
and
mov
jno
not
shlb
shll
imul
mov
fldcw
sub
inc
das
js
push
cs
ljmp
cmpsl
shrb
add
push
sub
sahf
xchg
sub
inc
shll
cmp
xor
shlb
inc
nop
xor
and
xor
and
xor
inc
repz
out
sbb
in
stos
sub
xor
inc
push
add
push
cmp
lods
cmp
leave
sti
cmp
mov
test
cmp
repz
cmpsb
fistpll
sahf
test
and
cmpsl
jp
pop
cmpsb
clc
decl
add
add
mov
xor
mov
xor
mov
xor
mov
xor
mov
xor
add
sub
cwtl
lods
mov
cmp
stos
adc
cmp
test
mov
test
stc
lahf
rcl
xchg
or
jl
cmp
pushl
sarl
roll
push
shrl
pop
jne
lods
inc
mov
into
add
aas
cmpsl
into
aaa
cmpsl
mov
into
jnp
sbb
stos
sahf
dec
into
pop
mov
fsubrl
jns
aam
add
aad
imul
cmp
fidivrl
daa
ficoml
dec
lahf
rclb
cmp
add
xlat
dec
add
lcall
fimull
lret
add
fldcw
inc
lret
loop
lcall
leave
test
mov
mov
jae
mov
jno
out
fs
rcrl
scas
shlb
aam
shrb
aam
rclb
aam
rolb
iret
out
sarl
iret
std
shll
iret
inc
aam
iret
adc
shr
into
inc
shll
into
sar
xor
xor
and
xor
lret
repz
aas
xor
mov
cmpsb
push
cmp
sahf
cmp
pop
cmp
push
cmp
jns
mov
mov
cmp
cmpsl
iret
cmp
cmp
inc
push
cmp
cmp
mov
cmp
rolb
add
sbb
xchg
das
ljmp
sub
inc
and
xor
mov
xor
shlb
push
mov
js
xor
mov
xor
xor
push
mov
xor
jo
cmc
xor
mov
test
jmp
ss
mov
ss
pop
aaa
movzbl
aaa
push
stos
pop
cmp
and
push
stos
movsb
cmp
stos
sbb
xor
movsl
mov
cmp
pop
pop
das
xlat
or
dec
not
dec
dec
aad
cmp
cmp
xlat
and
movsb
shlb
lea
dec
test
push
jge
rcrb
jle
imul
jno
and
jg
adc
test
fcoms
inc
jp
cmpsl
cmp
push
fdivrs
movsl
push
xlat
iret
popf
inc
xlat
aad
push
xlat
jecxz
jo
jmp
idivl
fdivr
jne
rorl
insb
add
add
jle
or
dec
ret
stc
inc
ret
call
dec
ret
movsl
mov
mov
dec
ret
xchg
push
ret
dec
ret
fwait
pop
ret
mov
bnd
outsl
xlat
clc
ret
push
xlat
out
push
xlat
aam
inc
xlat
fcmovb
xchg
loopne
popf
faddp
stos
lods
ret
cltd
mov
ret
xchg
ret
ret
test
mov
push
out
jo
in
aad
sti
aad
jmp
aad
mov
xchg
pushl
inc
cmp
mov
inc
and
fnstcw
cmp
and
cmp
jne
push
and
cmp
les
mov
test
cmp
movsl
ljmp
movsl
test
jmp
push
jb
add
ret
dec
lds
xor
push
xchg
movsl
inc
das
rcrl
daa
das
inc
pushf
inc
cs
inc
ret
sub
jbe
dec
sub
nop
daa
test
xor
pushf
xor
test
xor
test
pop
andb
andl
and
add
mov
shll
cmp
mov
cmp
ljmp
cmp
in
mov
ds
mov
fnsave
clc
lcall
cld
jmp
xor
xchg
lods
push
xor
mov
mov
xlat
test
jge
xlat
pop
test
xlat
or
js
pop
xchg
aad
data16
mov
add
test
dec
test
cmpb
shlb
scas
cltd
lods
out
std
pushl
int3
mulb
in
shlb
andb
andb
in
bound
rorb
pop
jp
popf
inc
adc
stos
inc
pop
mov
cmpsl
inc
aad
lahf
add
fadds
jmp
lret
and
xchg
sbb
mov
adc
int
lds
int
test
inc
les
out
mov
mov
ret
add
jge
xlat
into
fwait
ret
scas
into
push
ret
xchg
into
inc
ret
fs
test
xor
iret
ret
cli
into
mov
ret
icebp
roll
sbb
push
shr
ret
iret
ret
in
sar
adc
add
cmp
sub
and
mov
es
cld
push
jge
push
inc
lahf
xor
leave
xor
xor
sub
xchg
test
cld
sub
aaa
sub
sub
pushf
ss
mov
out
enter
mov
jb
lods
mov
xor
mov
xchg
rcrl
test
dec
cmp
mov
scas
mov
cmp
pop
dec
adc
cmp
ds
xlat
dec
xchg
ds
into
ds
dec
push
aas
jae
cltd
aas
int
aas
mov
clc
decl
xchg
stc
push
add
add
fcoms
xor
push
scas
xor
xor
push
loopne
addr16
out
xor
push
adc
xor
push
pop
xor
push
jae
sbb
xor
push
mov
xor
into
adc
into
pusha
inc
cmp
jne
into
mov
cmpsl
into
icebp
mov
das
int
mov
int
addb
shrb
out
xchg
gs
pop
pop
cmp
and
pop
iret
lret
and
sbb
rorl
lds
cmp
add
outsl
iret
popa
pushf
test
ret
rolb
mov
test
cld
std
mov
add
jno
int3
inc
popa
in
test
ja
lret
aam
das
adc
adc
arpl
loop
mov
add
xor
shll
add
mov
xor
shr
xor
cmc
xor
xlat
xor
xlat
pop
xor
fcoms
xor
fsubs
xor
int
cs
xlat
or
ss
pushf
ss
aad
ss
ss
jnp
sub
shlb
test
add
add
lods
aaa
scas
stos
shlb
push
stos
cli
ss
mov
inc
ss
je
fsubrl
loopne
outsb
cmp
xor
mov
cmp
adc
cmp
xor
sub
cmp
fstpt
outsb
ss
cmp
es
xlat
mov
mov
cmp
scas
cld
cmp
cmp
mov
jl
out
push
cmp
xchg
dec
adc
mov
dec
outsl
adc
ds
push
aas
ja
pusha
aas
push
dec
nop
aas
lret
aas
rorl
aas
pop
jo
mov
push
ds
push
mov
xor
push
mov
xor
push
dec
xor
push
xchg
xor
mov
movsb
xor
push
mov
out
push
mov
xor
xor
push
in
xor
push
xor
push
adc
mov
and
jno
rcrl
xchg
imul
and
shll
rcr
bound
adc
sbb
xor
ret
iret
xchg
cli
enter
enter
iret
adc
pushf
add
xor
daa
iret
dec
jl
iret
pop
test
iret
xchg
mov
fs
into
inc
pop
mov
dec
inc
mov
into
mov
aas
sbb
into
out
cmp
mulb
add
rclb
xor
shlb
push
pushl
inc
ror
xor
shrb
xor
roll
and
dec
int3
add
push
int3
lods
aaa
mov
lret
sti
lret
cmp
fidivl
gs
divb
inc
lret
push
cmp
lret
adc
ss
int
ss
int3
fnsave
sub
js
jne
xor
test
add
cld
cmp
and
stos
or
add
add
fnstcw
xchg
test
push
cmp
xchg
jnp
inc
jne
add
ret
push
movsl
das
inc
popf
ljmp
mov
pop
cs
inc
into
sub
jno
xchg
sub
fwait
and
sub
incl
sub
cmp
jnp
leave
xor
and
xor
add
push
xor
add
add
dec
dec
xor
jmp
mov
js
aam
ret
dec
push
mov
dec
iret
ss
dec
sbb
sub
cmp
inc
cmpl
mov
inc
adc
inc
dec
addr16
dec
loope
mov
push
ds
aas
add
ds
inc
aas
mov
push
cli
lcall
lcall
push
push
xor
mov
push
adc
xchg
push
xor
xor
push
test
ss
push
lret
in
leave
push
cmpsb
cmpsl
les
cwtl
sub
inc
fwait
rol
leave
mov
sub
mov
clc
jp
ror
pop
adc
mov
outsl
fs
fwait
pop
lret
push
xor
mov
inc
dec
repnz
ret
call
push
or
sbb
jno
int3
rolb
int3
repz
xor
int
bound
ret
enter
iret
or
inc
cs
aaa
xor
insb
cmp
sbb
repnz
test
xor
xor
adc
fnstenv
out
mov
add
ror
das
sub
add
shrl
xor
mov
xor
jae
xor
shrb
cltd
shlb
imul
push
sub
int
cmpsl
into
inc
das
mov
lret
scas
cmp
sub
cmp
enter
and
in
pop
cmp
cmp
cmp
clc
jmp
jb
add
add
sub
test
das
xor
cmp
push
mov
add
mov
js
fldcw
xor
lock
xchg
ss
std
xor
pop
cmp
clc
jmp
jb
add
and
fs
cs
xor
and
xor
aas
shlb
add
inc
jg
les
ss
inc
iret
mov
aaa
jno
and
aad
xchg
aaa
cli
dec
cmp
dec
ja
dec
dec
fwait
cmp
ljmp
dec
and
adc
push
cmp
lea
das
dec
scas
cmp
out
cmp
inc
movsb
cmp
sarl
rolb
cmp
out
or
mov
decl
cli
ljmp
xor
sub
mov
jno
xor
pusha
mov
stc
pusha
pop
xor
arpl
xor
pop
xor
lock
mov
pop
xor
mov
cli
xor
xchg
xor
jle
ret
sbbb
mov
xorl
adc
xor
pop
sbb
add
jno
mov
jle
add
jno
cmp
and
ss
cmpsl
add
xor
int3
cmp
add
mov
jno
xchg
xor
jnp
xor
imull
scas
aaa
fs
mov
xchg
sub
sbb
pusha
cmp
sarl
mov
das
cmp
aaa
mov
inc
icebp
xor
stc
xor
loope
jnp
add
xor
adc
dec
inc
fnstenv
cmp
xor
inc
fnstenv
cmp
xor
inc
mov
xor
inc
xchg
xor
inc
pop
xor
inc
pop
xor
in
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
mov
cmp
int
call
cmp
xor
cmp
nop
cmp
cwtl
cmp
add
jmp
insl
add
loope
adc
leave
bound
roll
mov
inc
xor
sub
les
cmp
sub
xor
sub
xor
sub
xor
sub
sub
xchg
xor
sub
lods
xor
mov
shrb
xor
les
nop
sub
aam
mov
cmp
aaa
fidivl
cmp
xor
cmp
xchg
cmp
fdivrl
jle
push
cmp
xor
mov
cmp
ss
cmp
xor
cmp
add
loope,pt
lods
ds
and
push
xchg
cmp
and
xchg
ja
cmp
outsl
pop
cmp
data16
push
pop
imul
push
fnstsw
lods
dec
mov
cmp
jno
cmp
negb
add
sub
mov
mov
xor
add
xor
dec
xor
pusha
lods
xor
mov
jl
pusha
lret
pusha
sub
mov
or
fadds
xor
inc
add
xor
xor
xor
xor
or
xchg
xor
xor
xor
in
xor
xor
xor
aaa
test
aaa
dec
xor
aaa
mov
adc
xchg
xor
aaa
test
aaa
je
and
stos
xor
daa
cmp
xor
cmp
divb
xor
js
add
jge
mov
inc
aaa
dec
ss
subb
cmp
sarl
inc
sub
je
mov
aaa
fdivs
das
aaa
adc
mov
ss
lcall
stos
mov
jnp
xor
jge
mov
fs
cmp
mov
cmp
add
cmp
inc
adc
sarl
or
or
and
adc
add
jmp
insl
add
adc
xorl
xchg
xor
jge
xor
xorl
scas
pop
jge
add
sub
imulb
bound
out
sub
push
sub
push
jp,pn
sub
ds
xchg
ds
sub
ds
sub
ds
sub
ds
sub
ds
sarb
into
sub
imulb
loop
out
sub
xchg
repnz
cli
ds
sub
aas
into
sub
aas
out
adc
into
sub
aas
jbe
and
outsb
sub
aas
sub
aas
into
sub
aas
sub
jno
cmp
mov
push
push
movsl
cmp
test
inc
test
add
jno
pop
std
jbe
add
jno
xor
mov
pop
xor
xor
andb
movsl
xor
xorl
test
bound
sub
xor
cmp
rolb
cmp
cs
ds
xchg
sbbl
xor
mov
cmp
jns
xor
add
or
mov
sub
shrl
ljmp
es
cmp
dec
daa
mov
ds
sub
aaa
daa
sub
aaa
sub
aaa
jle
dec
cmp
sub
cmp
sub
cmp
out
sub
push
add
add
xor
lret
xor
xor
pushl
enter
add
cmpsl
ss
das
addr16
das
aad
cmp
xor
filds
xor
inc
xor
sbb
addr16
stos
aaa
lret
ss
divl
dec
aas
addr16
ds
cmp
test
call
cmp
cmp
jb
clc
cmp
add
pusha
orb
test
cmp
popa
lock
pop
in
xor
js
addr16
lea
dec
inc
mov
xchg
mov
cmpsl
xor
mov
dec
xor
and
jmp
xor
sbb
xor
fcomps
jo
sbb
xor
aaa
sbb
mov
aaa
mov
and
es
sub
add
or
add
adc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
popf
sbb
xor
sbb
cmpsl
sbb
xor
and
jno
cs
lahf
fldt
mov
xor
fnstcw
das
sub
test
jne
fnsave
outsb
fnsave
push
sbb
sahf
ss
incl
jno
xor
push
xor
inc
mov
cmp
cs
lods
pop
xor
jbe
add
sub
test
jle
cmp
js
cmp
js
cmp
push
cmp
cmp
pop
dec
cmp
dec
cmp
cmp
sbb
cmp
add
cmp
sub
cmp
sub
cmp
sub
cmp
dec
sub
cmp
sub
jmp
and
cmp
and
cmp
and
sarb
xor
mov
sti
and
cmp
and
lods
cmp
int
pop
and
adc
xor
lahf
es
ss
and
cmpsb
xor
sbb
clc
ss
out
adc
add
add
and
xor
cmp
cmp
cmpsb
jae
jmp
jne
add
mov
xchg
xor
jp
xor
push
dec
cmp
sarl
pop
repnz
xchg
arpl
mov
add
addr16
xchg
sub
add
or
and
sub
mov
xor
aam
cmp
xor
je
jns
test
dec
inc
xchg
xor
movsb
xor
fcoms
add
or
add
call
das
and
je
cmp
in
xor
xor
xor
das
test
adc
mov
sub
xchg
xor
das
pushf
xor
das
movsb
xor
das
lods
xor
mov
xor
mov
les
nop
das
int3
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
adc
adc
jo
sbb
jno
sub
cmpsl
sub
pop
xor
xor
sub
sub
sub
sub
sub
sub
sub
pop
out
xchg
gs
pushf
pop
mov
movsb
inc
mov
sub
pop
sub
movsl
and
int3
popf
xor
aaa
adc
cmc
ss
sbb
ss
fnsave
xchg
jl
ss
popf
ss
add
cmp
lret
cmp
and
popf
sub
cmp
sub
and
mov
sub
cmp
or
test
mov
cmp
arpl
mov
in
and
mov
sub
sub
lret
sub
mov
sub
sub
adc
sub
sub
sub
sub
add
jmp
jb
add
add
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
add
add
jb
add
jb
add
dec
decl
lcall
lcall
decl
decl
lcall
lcall
decl
decl
fdivr
fdivr
dec
std
dec
std
fdivr
fdivr
dec
std
dec
std
lcall
std
decl
std
incl
cwtl
std
lcall
std
decl
std
lcall
decl
decl
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
incl
jno
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
add
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
add
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
mov
add
add
add
pop
add
add
add
dec
add
add
add
pop
add
add
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
cwtl
add
add
add
add
addr16
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
incl
jno
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
add
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
add
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
cwtl
lcall
decl
incl
cwtl
decl
lcall
lcall
decl
decl
lcall
lcall
decl
decl
lcall
lcall
decl
decl
lcall
lcall
decl
decl
fdivr
fdivr
dec
std
dec
std
fdivr
fdivr
incl
jno
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
incl
jno
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
add
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
add
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
fadds
add
enter
enter
fadds
add
fadds
add
enter
enter
cwtl
add
add
mov
add
mov
add
cwtl
add
add
add
add
add
add
add
dec
add
add
add
pop
add
add
add
dec
add
add
add
sbb
add
sbb
add
or
add
or
add
sbb
add
sbb
add
or
add
jno
cld
pushl
cld
pushl
cld
pushl
cld
incl
jno
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
incl
jno
cld
pushl
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
add
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
add
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
jb
add
or
decl
lcall
lcall
decl
decl
fdivr
fdivr
dec
dec
fdivr
fdivr
dec
incl
enter
cwtl
lcall
decl
lcall
decl
lcall
decl
decl
lcall
lcall
decl
decl
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
incl
jno
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
cld
pushl
out
jno
out
jno
out
add
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
out
jno
xorb
dec
dec
add
sbb
cmpsb
ja
push
cli
fisttpll
fbstp
ss
ficoml
mov
pusha
or
aad
shll
push
loop
push
lods
sbb
xchg
pushf
xchg
cmp
clc
lcall
sub
sub
push
hlt
pop
lahf
lea
insl
sub
sti
test
pop
ds
pop
push
adc
fisttps
aaa
ret
fsubr
cmp
mov
jbe
inc
cmp
pop
fiaddl
pop
lcall
cmc
inc
jbe
adc
inc
xchg
movsb
mov
push
cwtl
mov
adc
sbbl
push
hlt
and
cmp
cli
push
call
in
jmp
pop
arpl
rorl
scas
movsb
mov
xlat
xchg
add
xchg
push
mov
adc
adc
test
jns
push
cs
jge
xor
scas
mov
sarb
je
mov
fwait
xchg
loop
mov
adc
iret
sub
and
push
cmp
ds
xchg
shll
add
or
rol
or
nop
sub
adc
mov
popa
ret
flds
ficoms
adc
test
xchg
mov
pop
sahf
xchg
dec
lock
in
mov
dec
adc
into
fdivl
stos
rolb
dec
icebp
jl
in
ret
xor
jnp
and
cmp
mov
add
call
loope
jl
inc
cli
or
pop
dec
repnz
jg
lea
lcall
jbe
cmp
or
insb
clc
dec
loop
sti
xor
fidivs
sub
stc
jge
insl
test
addr16
insl
mov
test
daa
xchg
idivb
mov
data16
incl
and
pop
add
fsubr
and
pushl
add
cmp
jmp
cli
lds
mov
dec
ljmp
push
mov
ja
xor
rorb
mov
jns
cld
ljmp
imul
aas
cmp
std
ljmp
mov
adc
test
jns
loopne
mov
pusha
cld
push
gs
in
sub
cld
dec
jns
dec
clc
cli
mov
mov
and
inc
imul
mov
and
push
imul
mov
jns
cld
ss
jno
add
js
push
hlt
repnz
test
ja
hlt
dec
mov
push
lock
fcompl
lods
add
decl
inc
add
add
inc
or
and
test
cli
mov
inc
jns
in
cli
mov
mov
test
incl
lcall
add
mov
rorb
cmp
lret
int3
and
jne
adcl
add
lods
pop
test
mov
sub
dec
clc
addl
add
jmp
std
aas
add
mov
and
mov
popf
sub
mov
jmp
std
aas
add
repz
call
flds
cld
jno
add
lret
push
lods
jge
add
mov
sbbl
jae
jne
cld
cli
cld
orb
out
jbe
and
mov
test
ja
lea
dec
xor
xor
cmp
int3
and
jne
mov
pop
jne
xor
mov
pop
pop
xor
int3
sub
cmp
int3
inc
jne
mov
dec
mov
dec
jl
call
int3
mov
lret
int3
lods
cmp
int3
movsl
cmp
int3
inc
jne
adcl
push
incb
fs
inc
jno
inc
clc
or
aas
jno
inc
clc
rcrl
dec
jl
imul
push
cli
lods
or
mov
sti
mov
int3
les
push
cs
add
push
inc
decb
std
or
and
push
jns
push
cld
jbe
std
mov
cld
dec
aad
mov
mov
pop
add
add
add
add
mov
movsl
mov
int3
lods
xor
int3
movsl
xor
int3
and
jmp
imul
push
mov
inc
jno
mov
int3
sub
xor
int3
movsb
jnp
adcl
inc
imul
add
jne
in
inc
pop
xchg
jnp
or
aas
pop
mov
mov
rolb
pushl
push
mov
jl
jo
dec
cld
ljmp
inc
cli
mov
or
jge
cmc
add
test
jp
lock
adc
popa
clc
add
or
mov
add
push
clc
cli
cld
push
add
push
or
out
test
js
or
test
imul
mov
clc
mov
mov
adcl
inc
in
mov
mov
push
movsl
ja
call
jmp
ja
lock
out
add
hlt
add
test
add
clc
stos
fisttps
addl
add
sbb
data16
mov
mov
cld
push
add
clc
adc
call
pusha
jl
jno
push
mov
jns
adc
or
jns
ljmp
inc
popa
ja
hlt
ljmp
adc
stos
jmp
sub
pushl
test
xorb
int3
or
jno
add
sub
pushl
test
popf
xorb
popf
js
adcl
dec
test
dec
inc
clc
out
mov
dec
gs
mov
inc
clc
subl
sbb
ljmp
push
cli
mov
cli
lcall
add
call
push
test
jp
mov
inc
hlt
cli
mov
xorl
push
nop
mov
jl
gs
loopne
repnz
mov
xor
int3
inc
ja
adcl
jl
call
clc
sbb
jno
inc
clc
and
std
outsb
inc
jl
jns
inc
cld
ljmp
push
cli
mov
sti
mov
int3
and
ja
mov
aaa
add
add
inc
jno
dec
add
xchg
movsl
mov
int3
inc
ja
adc
sahf
or
decl
cli
mov
int
ljmp
hlt
cli
mov
xchg
jbe
clc
call
add
add
aas
jae
repnz
testl
pop
add
dec
sbb
jne
clc
add
mov
mov
jbe
adc
mov
add
sbb
test
jbe
mov
inc
cld
jl
sub
or
in
inc
inc
test
dec
cmp
lret
int3
lods
xor
int3
movsl
xor
int3
and
jmp
aad
rolb
xor
jno
add
add
dec
mov
ret
or
mov
jne
clc
and
dec
mov
dec
push
inc
push
hlt
adc
inc
pop
mov
mov
jno
add
lret
jne
add
decl
pop
std
jmp
std
aas
add
ljmp
jno
jmp
inc
jl
jne
incl
xor
sub
jb
add
jno
enter
int3
out
jno
adc
call
mov
test
scas
out
lea
subl
cmp
jb
pop
mov
sub
push
fidivrs
movsb
mov
mov
add
sbb
int3
sub
dec
lret
int3
movsb
mov
adcl
adc
jno
inc
or
xor
test
add
call
and
mov
adc
push
rorl
inc
call
jno
or
call
iret
hlt
decl
xor
push
push
aas
push
lock
and
jns
test
shl
shll
addl
or
inc
sbb
sub
mov
inc
hlt
cli
int3
fisttps
rolb
cmp
out
imul
call
inc
cld
test
mov
mov
cld
mov
test
repnz
and
test
push
test
inc
cltd
mov
jb
adc
aam
mov
shl
push
pop
ds
subl
mov
jmp
mov
mov
jl,pt
insl
test
add
add
dec
sbb
ret
or
ret
fildl
jno
jae
cli
or
xor
dec
cmp
jl
pop
sub
jno
sbb
test
das
jno
test
rolb
add
push
lock
out
jno
adc
test
das
jno
test
shlb
outsb
shr
mov
repnz
inc
call
fs
aas
push
ljmp
push
and
call
adc
rcl
mov
inc
loopne
lret
mov
and
mov
inc
jno
out
add
cmp
xorl
mov
jno
add
cmp
mov
jb
lahf
add
xchg
mov
rol
out
jno
cmp
inc
jno
or
call
adc
dec
mov
clc
push
inc
or
lods
sub
jb
daa
mov
inc
jno
cmp
sar
add
decl
or
dec
mov
out
fnstsw
clc
subl
decl
ret
idiv
mov
mov
decl
jno
out
cwtl
cmp
xorl
adc
call
jl
out
jno
inc
sub
xchg
pusha
dec
mov
sti
incl
inc
jg
or
mov
shl
add
mov
add
jno
clc
push
and
cmp
mov
fdivrl
int3
movsl
dec
lret
int3
and
jmp
sub
test
fdivrl
inc
xchg
push
aas
roll
ljmp
xor
add
ficoml
dec
lret
int3
les
add
pop
imul
add
sbb
inc
pop
mov
gs
adc
inc
cmp
in
cmp
jmp
adc
add
add
inc
fsubrl
add
scas
ret
repz
add
sub
pushl
roll
add
jno
dec
or
call
add
test
adc
cmp
dec
cmp
add
or
insb
test
inc
jno
add
jno
add
inc
jno
pushl
cmp
mov
roll
add
add
cli
addr16
je
incb
pop
call
xchg
sub
call
mov
test
jb
cmp
leave
xchg
dec
fnstcw
add
add
insb
mov
add
test
add
add
add
sub
les
ja
mov
stc
adc
adc
jnp
mov
push
call
repnz
mov
shl
aad
cmp
subl
decl
jno
arpl
mov
push
call
repnz
mov
xchg
mov
mov
out
jae
mov
and
test
les
outsl
call
and
cmp
and
call
xchg
rolb
jb
sti
push
pop
dec
idiv
add
ret
or
int3
repz
push
in
mov
xchg
mov
pop
add
xchg
sub
pushl
in
ljmp
push
jmp
mov
or
incl
cmp
test
jb
mull
jb
testl
jno
test
add
divl
jnp
arpl
xor
std
inc
jns
pop
jmp
mov
push
pop
ret
pushf
shl
inc
jno
mov
mov
inc
jno
dec
imull
mov
call
add
lock
incl
jno
test
jmp
out
jno
push
call
jne
clc
push
cmp
mov
jl
out
jno
out
mov
stos
add
mov
and
inc
jno
ret
add
repz
js
inc
call
dec
cld
out
insb
xor
out
jno
mov
pop
xor
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
add
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
add
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
add
add
add
add
imul
nop
xor
xor
xor
rolb
add
cmp
lret
cmp
add
jg
sbb
pop
ds
ds
aas
jno
add
and
xor
xor
das
add
xor
xor
xor
xor
xor
pop
xor
xor
push
xor
imul
stc
xor
xor
xor
xor
xor
imul
and
xorl
xor
mov
xor
xor
cmc
xor
xor
xor
xorb
xor
in
xor
xor
je
adc
push
and
add
cmp
aaa
ss
ss
pop
ss
ss
dec
ss
pop
ss
cmc
ss
ss
aaa
mov
lods
add
jne
ss
cmp
xchg
loop
cltd
aaa
shlb
mov
aaa
push
xor
push
cmp
add
jno
add
jno
add
jno
add
add
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
add
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
add
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
add
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
add
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
add
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
add
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
jno
add
add
add
jno
add
jno
add
jno
add
jno
add
jno
add
add
add
inc
add
add
inc
add
add
inc
add
add
and
and
and
and
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
outsl
xchg
and
mov
aad
jge
jno
mov
mov
rorl
leave
push
dec
inc
insl
inc
jno
repz
mov
or
jne
sahf
push
or
cli
push
jnp
and
rcll
sub
xchg
das
pop
loop
pop
das
ja
sbb
enter
das
or
add
inc
or
fistps
sbb
sbb
ljmp
jl
inc
lds
xor
clc
repz
stos
add
sub
lahf
mov
inc
jle
dec
jmp
xchg
les
xor
sbb
dec
and
jge
icebp
pushf
mov
or
pop
call
sbb
lea
movsb
inc
cwtl
fists
push
pop
sbb
popa
inc
push
mov
mov
push
out
pop
test
jo
mov
js
sub
push
mov
xor
leave
mov
pop
dec
jl
in
rol
popf
inc
jmp
push
les
push
fldl
daa
mov
dec
sub
mov
ljmp
adc
clc
push
xchg
int
xor
divl
or
pop
jle
loope
frstor
cmpsl
leave
out
lods
push
pop
sti
fcompl
adc
push
cmpl
cli
lret
pop
dec
stos
lahf
push
xchg
fadd
mov
jl
mov
pop
int3
pop
dec
cmpl
dec
les
bound
repnz
int
icebp
mov
stc
loopne
lods
fmuls
cli
cmp
shrl
push
lahf
inc
mov
pop
jae
or
mov
pop
add
cli
sahf
cmpsb
dec
nop
shll
inc
nop
scas
fsts
in
mov
sub
sub
popl
cmpsb
jecxz
push
dec
adc
.byte
.byte
.byte
