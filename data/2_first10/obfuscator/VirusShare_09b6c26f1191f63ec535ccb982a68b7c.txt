push
call
ret
ret
or
jl
adc
adc
testb
adc
push
sahf
xchg
test
cmp
into
add
lret
sub
xchg
test
mov
lahf
and
fs
mov
jge
sub
sbb
add
in
cmpsb
nop
cmp
adc
cmpsl
rcrb
mov
mov
dec
push
mov
stos
ds
rcll
stos
fbld
xorl
xorl
add
mov
addr16
lods
lock
jnp
xor
jp
aam
sti
fsts
add
adc
dec
in
mov
push
push
stc
push
sbb
sub
sbb
fcoml
aaa
cmp
xor
mov
sub
push
and
or
adc
lcall
mov
jp
add
out
mov
dec
pusha
push
sub
fisttpl
cmp
hlt
call
add
adc
add
sbb
add
sahf
push
aaa
je
movsb
popa
movsl
aam
xlat
fidivs
dec
mov
fstp
xchg
aam
pop
push
test
repz
shrl
pusha
mov
nop
push
sbb
pushf
leave
rcll
pop
and
sub
js
stos
mov
into
ret
je
mov
adc
stos
fnsave
fstpt
push
out
scas
sub
les
inc
ja
mov
mov
test
push
cs
xchg
push
inc
xchg
rclb
lcall
imul
xchg
add
lods
jnp
js
mov
test
and
repz
call
leave
in
sbb
sub
imul
jb
fcomps
inc
cmpsb
out
push
into
jns
lea
test
repz
cwtl
out
scas
cmc
add
daa
bound
add
cli
inc
mov
xchg
movsb
gs
mov
cmp
icebp
inc
mov
push
popa
mov
xchg
mov
push
lret
cld
subb
jo
sub
lods
faddl
popa
les
sub
jb
mov
shl
mov
loopne
cmp
push
xor
in
adcb
adcb
mov
jge
es
or
in
shrl
pop
jae
jno
mov
hlt
pop
into
mov
inc
mov
xor
sub
fiadds
insl
daa
fmuls
fbstp
cwtl
pop
adc
inc
mov
mov
xchg
in
notb
xchg
repz
fs
push
test
fwait
subl
fs
dec
mov
mov
decl
gs
jg
out
adc
mov
add
cltd
mov
mov
std
xor
adc
push
push
jl
rcl
ss
lock
add
xchg
pop
dec
ds
insb
pop
arpl
mov
pop
jbe
mov
pop
pop
sbb
and
xor
icebp
imul
sub
negl
mov
mov
inc
mov
outsl
out
daa
xor
cld
aaa
repnz
orl
iret
sub
jb
and
push
call
mov
pop
std
push
fistpll
adc
and
add
sub
adc
sti
test
sti
scas
pop
mov
xchg
inc
in
push
cmpb
nop
mov
inc
int3
mov
adc
imul
or
add
sub
push
out
push
inc
sub
sub
loope
and
pop
ljmp
fwait
movsl
imul
jp
xchg
jmp
bound
push
mov
fisttpl
test
imul
jl
jb
and
in
out
test
mov
icebp
out
xchg
jnp
xchg
scas
scas
and
pop
or
ss
or
cmpsl
arpl
adcb
xchg
test
jp
movsl
or
push
fucomi
addr16
and
scas
dec
arpl
mov
mov
in
sbb
pop
push
lods
fnstsw
lret
icebp
pop
sbb
xorps
mov
dec
xorb
jl
pop
mov
clc
mov
out
pop
daa
or
or
add
jle
dec
add
mov
cltd
or
pop
sarl
repnz
cli
inc
pop
push
cs
rcl
out
pushf
mov
stos
sub
xorb
pop
push
push
inc
dec
in
imul
sub
bswap
jns
mov
xor
lcall
fcmovnbe
lock
mov
mov
mov
es
xor
inc
cmp
xor
testb
jmp
push
ret
push
out
lahf
sub
aam
inc
sbb
and
push
pop
adc
stos
fsubrl
nop
sub
mov
push
out
mov
mov
in
xor
sbb
adc
and
push
out
pop
pop
shrb
adc
add
sub
leave
mov
stos
dec
xor
notb
dec
pop
fdivs
sbb
jge
movsl
or
inc
pop
push
es
mov
or
xor
bound
fwait
cmp
imulb
sahf
xor
and
faddl
mov
inc
outsl
fcompl
repz
sbb
push
lret
pop
xchg
dec
cmc
arpl
inc
fcoml
jge
push
loope
push
mov
orl
movsb
into
fildll
sbb
xor
xor
adc
into
mov
movsl
sbb
adc
stc
or
pop
inc
and
xchg
aaa
lock
push
gs
test
lret
mov
add
mov
mov
imul
call
inc
jl
sbb
aas
pop
push
pop
sbb
mov
jbe
mov
mov
inc
mov
test
cmp
cmp
mov
les
fistl
push
cmp
and
inc
test
repz
jb
mov
out
push
xchg
imul
mov
mov
dec
lods
jno
push
xchg
insl
fildl
mov
into
cmp
cmc
insl
cwtl
fadds
pop
jmp
adc
cmpsb
cmp
inc
xor
fistps
inc
jo
jmp
pop
sbb
ret
or
in
rorl
jns
movsb
mov
lea
dec
adc
dec
add
inc
ret
inc
mov
mov
aad
sub
pop
adc
mov
add
clc
insb
frstor
push
out
sarb
sub
xor
andb
mov
inc
pusha
xchg
fnstsw
test
arpl
jb
sub
sub
xor
cmp
je
aaa
enter
mov
sub
rclb
rcll
mov
imul
dec
jno
fnsave
mov
loope
in
loopne
js
or
cli
xchg
and
fistl
adc
mov
mov
pop
out
pop
mov
pop
xor
gs
test
sbb
fisubrs
sahf
in
inc
shll
aam
pop
add
inc
mov
in
mov
push
push
imul
movsb
or
cmp
dec
mov
imull
testb
mov
inc
clc
insl
push
push
stos
cmp
push
bound
testl
test
cmpsl
ficomps
jne
mov
aam
loop
jp
fnsave
sbb
inc
push
and
testb
movsl
dec
pop
xchg
sbb
enter
inc
movsl
mov
dec
test
mov
cmc
imul
test
mov
lret
mov
fnop
leave
enter
lret
push
pop
std
mov
pop
daa
xchg
inc
dec
in
into
ror
in
mov
stos
cmp
rorl
sahf
mov
pop
cmp
cmpsb
jae
push
mov
in
inc
movsl
xchg
lret
mov
lea
sub
adc
cli
into
sbb
mov
mov
ljmp
jae
inc
push
add
lcall
cmp
aad
xchg
sub
stc
test
mov
cmp
cmpsb
mov
lcall
decb
fwait
push
and
add
mov
test
and
les
cs
roll
ja
jne
or
jg
in
jno
pop
clc
fistpl
inc
xor
pop
xor
or
lock
std
sbb
and
cmp
cmc
mov
scas
test
cmpsb
sub
xchg
shl
pop
xchg
push
jne
repz
xchg
mov
mov
jp
notb
outsl
shrb
lea
add
test
or
cmp
outsl
bound
pop
mov
xor
cmpb
pushf
scas
mov
cmp
lods
cltd
lock
and
loope
out
dec
mov
push
jb
mov
xor
jecxz
xor
push
add
cld
sub
add
push
ja
xor
sub
inc
aam
lock
sbb
ret
ja
orl
enter
dec
sub
sub
data16
push
sub
pusha
addl
int3
insl
mov
and
push
aas
push
cmp
dec
in
sbb
vmaxsd
fisubs
addb
lods
cmp
xlat
rcll
xchg
std
lods
out
mov
sbb
adc
fidivrs
add
add
stos
pop
dec
outsl
and
call
sbb
pop
dec
mov
sub
mov
int3
push
mov
daa
and
adc
pushf
sub
cmp
or
rolb
cmp
insb
ret
lea
inc
inc
test
and
xchg
test
add
mov
sbb
test
sub
jp
jle
pushf
and
ja
pop
dec
cli
sbb
fst
fnstcw
xlat
pushf
pop
xchg
inc
add
sub
sub
push
mov
loopne
fwait
xchg
cmp
pop
jae
xchg
adc
test
jp
bound
sahf
sub
lcall
dec
sub
mov
mov
out
mov
adc
outsl
imul
push
lret
lods
rclb
inc
and
fwait
mov
jae
push
xchg
cs
je
lea
sub
rcrl
pop
test
cwtl
cmp
decb
pop
icebp
das
pop
adc
out
shr
clc
rcll
pop
out
out
dec
dec
popa
sub
and
cmp
sbb
mov
es
xchg
roll
jmp
out
push
mov
rclb
dec
sub
or
mov
rcrl
imul
insl
push
inc
fdivrs
dec
in
cmp
ss
jbe
pushf
fdivrl
in
pop
and
add
adc
add
jns
mov
cld
inc
cli
mov
mov
ret
xor
sub
xlat
in
ss
jnp
int
lods
call
and
cmp
ret
mov
or
and
mov
xchg
icebp
inc
cmc
cmpsl
rcl
in
pop
fucomp
fs
dec
lock
gs
sbb
cltd
mov
push
push
movb
sahf
xor
sub
mov
aaa
negb
xchg
jg
push
lcall
das
or
mov
testb
lock
xchg
frstor
out
xchg
lret
dec
loope
push
dec
xor
xchg
outsb
xor
xor
lods
xor
dec
mov
fstl
imul
aad
mov
cmp
inc
dec
into
dec
push
jl
jae
inc
stos
jle
enter
ror
in
pusha
add
shll
xchg
loop
fwait
outsb
mulb
stos
inc
xchg
xchg
in
cmp
rclb
mov
ret
lret
dec
push
scas
jo
lahf
jne
add
xchg
jnp
addr16
add
xor
add
adc
call
in
enter
loopne
inc
testl
icebp
fst
in
out
movsl
xor
jle
scas
int3
inc
jnp
or
int3
jle
add
aam
ffree
leave
lcall
fwait
lods
push
jbe
add
jmp
dec
jp
gs
outsb
mov
cmpsb
nop
fs
mov
sbbb
sub
rorb
mov
jp
ss
xor
xchg
xor
adc
fld
pop
or
inc
lea
aas
jecxz
adc
or
ss
jo
push
push
mov
hlt
scas
aaa
mov
fs
sub
fdiv
sbb
or
pop
xor
mov
xor
pop
fmul
test
dec
xchg
and
mov
lcall
arpl
cmp
sbb
jo
rcr
mov
aaa
add
mov
fsubr
cli
and
notl
loopne
icebp
push
neg
pop
into
test
nop
jmp
jle
sub
and
rclb
mov
xchg
out
ljmp
mov
xor
sahf
stos
and
adc
lods
enter
sbb
in
jbe
bound
lcall
cmpb
mov
int3
mov
ret
test
in
cltd
xchg
mov
mov
rcrb
ja
pushf
push
ret
aad
das
sub
xchg
cmc
xchg
mov
les
cmp
cmp
push
adc
cli
push
out
mov
ret
ljmp
xchg
adc
xor
sub
sbb
lahf
lock
aas
dec
adc
insb
jecxz
loope
or
xor
pop
or
popf
jae
xorl
dec
repnz
lea
jmp
mov
imul
dec
dec
mov
into
mov
loopne
je
rorb
add
out
lret
add
xchg
lds
xchg
in
mov
cmp
and
or
mov
aas
dec
cmpsb
call
fdivrl
into
xlat
js
adc
rolb
das
das
push
bound
fmulp
push
jge
pcmpgtb
cmp
mov
jo
les
rcrl
mull
fiaddl
cmp
das
roll
sub
lods
and
int3
push
push
mov
ja
pop
jo
shl
int
out
adc
pop
xchg
or
sbb
xchg
mov
xchg
das
iret
loope
out
or
sub
add
xor
pop
leave
out
arpl
jecxz
test
mov
lds
mov
cmp
aaa
mov
mov
mov
mov
add
scas
pop
add
rorl
dec
or
es
and
in
pop
inc
jl
sbb
pop
notl
xor
inc
adc
cmpsl
mov
push
dec
sarb
int3
mov
ror
arpl
es
mov
xchg
mov
jne
adc
xor
fnstenv
cltd
in
xlat
adc
and
push
js
gs
insb
push
adc
sbb
cmp
and
bound
mov
iret
aam
mov
inc
mov
stos
dec
adc
mov
push
icebp
xchg
sbb
and
int3
stos
out
xchg
int
dec
jae
mov
test
ficomps
sbb
mov
jns
cmp
loop
mov
clc
mov
scas
aaa
jae
adc
adc
mov
jl
hlt
mov
cmc
xor
sbb
add
mov
test
rep
pop
lds
pusha
sarl
in
into
mov
daa
cmpsb
int3
dec
sub
cmpsl
inc
lret
adc
sub
sbb
sbb
mov
xchg
in
cli
out
lahf
mov
sbb
mov
pop
std
pop
enter
push
sarb
cmp
sti
ficompl
mov
adc
or
inc
lret
popa
sbb
addl
xor
or
jno
cmp
test
mov
sub
pop
loop
subl
push
pop
rolb
jo
arpl
test
mov
daa
cwtl
jae
enter
lods
xlat
shl
cli
xor
fstl
sbb
jle
lods
shll
adc
mov
scas
mov
lahf
adc
or
add
xor
adc
jne
inc
flds
out
pop
mov
xchg
test
jl
call
push
xchg
orl
punpckhbw
movb
dec
xor
insl
pop
inc
xor
sbb
ret
jle
cltd
xchg
cmp
addr16
and
lret
pop
mov
xchg
je
ret
leave
out
imul
mull
cmp
cmp
cmp
je
cld
pusha
repz
es
stos
sub
sbb
pop
popa
stos
push
shll
mov
fdivs
ret
gs
pop
movsl
mov
mov
jecxz
sub
mov
xor
jnp
and
inc
scas
mov
arpl
or
cwtl
add
or
test
and
push
lods
fisubrl
inc
mov
aaa
jg
cmpsl
imul
sbb
aaa
pop
xor
mov
ret
or
pop
fisttps
test
or
or
jb
and
stos
ffree
ss
pop
pop
adc
ds
jbe
cmpsb
int3
divl
inc
lret
lahf
and
xor
xchg
sub
jns
dec
and
cmc
mov
mov
pop
dec
jle
jl
ds
pusha
jns
cmp
and
push
or
mov
ljmp
pop
call
test
pusha
aas
js
icebp
aas
aad
cmp
dec
loopne
push
dec
pop
pop
push
inc
ss
mov
repz
sbb
int
addr16
mov
cltd
out
dec
xor
pop
aad
adc
es
cmp
pop
mov
inc
cmp
push
out
inc
cs
mov
sub
or
dec
ret
jl
cmp
fisubs
cld
out
mov
pop
jp
ja
dec
sti
insb
stos
pusha
shrb
cmp
cmp
and
std
addr16
lods
push
test
sub
aaa
and
sub
lret
mov
sbb
sbb
add
jae
push
dec
sarl
ret
popa
int3
sti
sbb
insb
nop
push
and
push
xor
sub
cwtd
arpl
xor
push
loopne
pushl
jle
and
sub
fsubp
push
call
je
lods
push
pushf
popf
push
ljmp
inc
and
mov
das
ss
jnp
into
les
push
imul
or
ja
int3
fwait
push
inc
fisttps
xchg
sub
xchg
cltd
stos
imulb
mov
and
outsb
pop
pop
arpl
add
lods
push
dec
dec
pop
test
test
mov
lret
xorl
dec
pop
dec
leave
sub
jmp
arpl
dec
popa
cmc
xchg
xchg
test
mov
mov
push
xchg
mov
stos
mov
loopne
dec
nop
aad
jp
setb
iret
mov
mov
mov
test
jmp
cmp
xor
aaa
cwtl
and
test
loopne
and
jp
ja
push
lea
jbe
pop
mov
fmul
test
mov
xor
lea
xchg
lret
js
outsl
xor
cmp
sub
insb
and
jns
inc
loopne
mov
enter
jle
scas
popa
cltd
loope
aaa
hlt
aam
outsl
nop
lea
movsb
lds
and
adc
mov
repnz
mov
pushf
xor
mov
fimuls
stc
int
cmp
xchg
fwait
imul
sbb
pop
or
mov
insl
jmp
daa
outsb
dec
mov
xor
in
xchg
or
xchg
cwtl
icebp
scas
push
scas
sbb
loop
jo
push
rorb
lahf
cmpsb
std
ror
enter
sbb
jne
std
pop
es
inc
xchg
cmpsl
es
xchg
aaa
ret
ja
mov
pushf
lret
and
fsubl
repz
cmpsl
in
popa
push
cmp
push
lret
inc
xchg
add
test
sub
orl
sahf
cmp
jo
or
pop
enter
jge
mov
adc
add
pop
xchg
push
pop
add
sub
cmpsb
push
aas
xchg
push
int3
insl
icebp
push
push
lret
pop
sarl
mov
inc
icebp
les
stos
jno
mov
and
imul
pop
mov
pop
push
fstps
mov
repz
jno
sbb
mov
pop
ds
pop
pop
add
jns
push
xor
in
insl
insb
addl
popa
out
dec
ja
nop
push
ret
pop
ss
data16
dec
hlt
in
jp
xor
adc
jp
in
cmp
xor
adc
adc
jns
sub
cmp
lds
push
sbb
loop
movsb
mov
out
sub
fimull
mov
adc
nop
arpl
pop
insb
mov
jmp
je
jno
arpl
ret
call
cmp
aas
jns
in
fs
or
insb
jne
mov
and
lahf
and
popa
sahf
lret
jmp
insl
movsl
inc
mov
xlat
test
imul
aaa
into
call
loope
xor
dec
or
sub
and
cltd
push
dec
int3
xlat
enter
into
and
test
aas
sbb
xorb
adc
mov
dec
and
mov
stos
jae
popa
fildll
add
mov
sub
pop
xchg
pop
cmp
or
jecxz
loop
pop
jle
push
jns
pop
push
rcl
cmp
test
jmp
add
or
mov
jnp
es
stos
xor
aas
mov
mov
test
fildl
clc
sbb
xchg
jo
sub
push
add
push
and
xorb
xchg
jge
inc
mov
test
cmpsl
mov
ss
cmp
sbb
xchg
adc
mov
xor
jnp
call
dec
push
in
bound
dec
pop
loop
sub
and
cmc
roll
dec
cli
inc
mov
add
dec
je
inc
adc
cmc
rclb
mov
mov
repnz
and
xor
in
dec
push
sbb
fidivs
xor
rclb
sub
push
popa
daa
outsb
mov
scas
mov
stc
xor
and
add
add
dec
and
imull
fdiv
mov
xchg
adc
jg
xlat
fs
sbb
sub
jl
testb
out
in
lock
xor
mov
test
call
mov
cmpsl
dec
mov
fwait
or
lret
mov
cltd
push
test
gs
xchg
mov
stc
aam
push
and
push
fwait
mov
mov
sub
mov
and
lret
icebp
push
lret
push
push
xchg
mov
jns
aad
cwtl
pop
pop
bound
shll
adc
out
sarb
or
pop
movsb
into
push
jo
add
pop
xchg
daa
jb
ss
mov
push
xchg
leave
in
xor
sti
jb,pn
shlb
push
xlat
arpl
jg
push
mov
arpl
gs
mov
fidivrs
iret
mov
mov
pop
cli
dec
rcl
mov
test
cmpsl
push
hlt
or
sbb
or
aas
mov
push
mov
int
jns
pop
shlb
pop
xor
mov
push
sub
and
mov
or
and
in
mov
mov
sysexit
imul
mov
sbb
push
popf
xchg
fsubl
jns
pop
mov
inc
dec
adc
dec
divl
or
sbb
inc
bound
dec
ja
add
leave
xchg
sbb
repz
jns
ja
cmp
jbe
or
push
push
lds
xor
fs
out
push
xchg
fisttps
rclb
push
fwait
cmp
js
push
test
cli
fucomip
push
xchg
xor
inc
mov
jne
pushf
xchg
xchg
test
sbb
and
cmpsl
xchg
mov
popa
xchg
pop
addr16
push
in
loopne
sbb
xchg
repnz
in
cld
js
jae
push
add
jge
cmp
jnp
mov
sub
repz
xchg
cmp
xlat
add
mov
negl
mov
lret
jno
fs
hlt
inc
loope
lcall
jmp
cmp
adc
mov
mov
dec
leave
movsl
cltd
inc
push
aas
arpl
lds
xor
fstps
xor
nop
mov
mov
add
mov
insl
out
sub
sbb
inc
push
push
sqrtps
arpl
sahf
pop
adc
cmc
or
lea
mov
popf
add
push
mov
dec
je
shl
movsl
or
inc
cmp
push
fisttpll
cld
and
iret
jl
xchg
push
es
mov
es
dec
addr16
or
or
mov
repnz
ljmp
insl
lds
pushf
pop
les
int
fidivl
hlt
sbb
or
out
movsb
test
pop
jno
and
dec
hlt
ljmp
jl
or
iret
xor
dec
pop
test
mov
fildll
push
push
sbb
mov
mov
imul
push
jo
push
fnstenv
xor
or
scas
and
in
cmp
push
nop
or
cli
sub
sub
xchg
inc
or
sub
rorl
dec
je
add
jl
dec
fdivl
push
sub
push
jns
rorl
repnz
mov
xchg
icebp
mov
add
mov
fiadds
or
xor
in
mov
out
sbb
dec
std
gs
fwait
lea
sub
ja
jmp
cli
push
sub
shlb
subl
sbb
jns
pop
fs
cmpsb
hlt
mov
lods
repz
mov
pop
lahf
sub
test
pop
or
mov
mov
je
dec
and
sahf
cld
adc
testb
push
mov
sub
aaa
cwtl
inc
dec
jnp
xchg
lods
int
dec
push
gs
xchg
pop
daa
xchg
xor
dec
mov
mov
inc
jmp
push
pop
xchg
mov
xchg
lods
adc
mov
fcmovb
xchg
pop
add
insl
cmpsb
xchg
ret
js
fsubr
popa
sbb
mov
sahf
hlt
les
and
jmp
jae
movsl
out
out
pusha
mov
add
and
and
test
jns
fdivrl
test
je
je
ficompl
cld
mov
adc
xlat
stos
imul
mov
and
repnz
enter
into
pop
aam
inc
aad
push
je
xor
or
shll
cwtl
sti
in
lahf
push
add
cld
jmp
repz
pop
xor
jg
mov
fiadds
out
fwait
jne
in
cmp
jecxz
icebp
ror
dec
in
in
in
push
rorl
xchg
scas
mov
pop
cmp
push
jbe
sbb
push
xchg
bound
mov
add
repz
sbb
jle
xor
sbb
pop
test
mov
call
test
mov
mov
mov
adc
mull
outsb
and
insb
rorl
out
cmp
test
push
push
out
cmp
inc
mov
dec
inc
mov
lods
jge
popf
fwait
rcrb
into
xor
stos
mov
ret
js
jno
sub
inc
and
mov
sbb
in
adc
mov
roll
xchg
fcoml
out
jbe
dec
cmpsb
cmp
mov
jnp
adc
int
lret
sub
sub
push
insl
push
das
dec
xor
xlat
mov
ljmp
or
arpl
mov
mov
mov
cmpb
mov
mov
or
inc
jp
enter
sahf
outsl
or
scas
mov
add
loope
test
cmp
aas
jns
fwait
mov
aaa
aam
xor
gs
fildll
push
out
negb
xor
lret
ss
sbb
sub
in
jp
sbbb
arpl
adc
xor
jnp
aaa
lret
cmp
add
cmc
cld
push
cmp
icebp
scas
or
pusha
add
jae
testb
xor
add
imul
js
ds
push
jle
push
adc
push
shr
inc
test
mov
and
xchg
iret
test
ret
and
sub
xchg
call
insb
mov
mov
add
jo
xlat
add
lds
movsb
mov
orl
int
push
ret
pop
jnp
xor
pusha
push
xor
ljmp
inc
pushf
sub
mov
sahf
add
inc
push
mov
push
fs
ljmp
mov
imul
sub
xchg
test
jnp
aas
fwait
sbb
popf
jle
insl
ljmp
or
inc
mov
or
mov
outsl
outsl
or
imulb
push
fs
ret
push
adc
negl
jb
adc
pop
sbb
out
enter
jle
xor
loop
aaa
arpl
addr16
dec
sub
mov
movsb
lods
inc
xor
push
sahf
jmp
test
push
in
xor
push
daa
dec
dec
iret
repz
dec
push
and
cmpsb
mov
adc
and
hlt
push
jnp
lock
divb
jno
push
sbb
add
dec
call
inc
fsubrs
ljmp
and
sbb
cmp
aad
xor
xchg
push
mov
int3
movsl
or
loopne
jne
add
pop
jnp
cmp
push
std
adc
mov
or
int
pop
cs
cmp
addr16
cltd
mov
pop
hlt
or
xchg
jno
mov
jmp
and
loopne
addb
dec
pop
mov
xchg
out
rcrb
loopne
test
pusha
pop
add
jge
int3
fildll
jge
jb
repz
mov
push
cmp
adc
jecxz
pop
inc
or
push
and
xlat
lcall
mov
inc
ja
sub
mov
lods
jl
jle
push
fwait
sub
push
xlat
aad
adc
sub
mov
add
cld
fcompl
repz
push
mov
mov
mov
sub
and
pusha
xor
jb
shrb
jmp
push
or
pop
fwait
mov
je
xchg
in
in
sahf
xlat
jnp
jnp
dec
mov
pushf
pusha
mov
adc
xor
repnz
cmovp
add
cmp
pop
aaa
mov
shl
push
ss
dec
sbb
fdivl
arpl
xchg
fstpl
movsl
call
and
sub
xor
fistpl
test
cmp
mov
push
data16
fimull
mov
sub
sahf
xchg
sub
cld
sbb
mov
sarb
ret
xor
jnp
nop
jmp
and
jne
cmpsb
dec
mov
dec
push
xor
aaa
ret
cmpl
loopne
or
sub
mov
mov
cmpsl
sbb
lahf
hlt
int
pop
mov
sbb
cmp
pop
sub
sbb
outsl
cld
pop
xchg
das
push
and
lea
ss
in
push
sbb
cmp
sub
aas
lods
push
je
xor
nop
jl
push
mov
inc
loop
xor
sbb
sub
stos
aas
bound
xchg
pop
imul
or
push
ret
mov
in
push
fwait
adc
xchg
or
in
xchg
xchg
add
and
mov
addr16
flds
add
rol
into
xchg
mov
xor
and
scas
ja
mov
jg
push
outsl
les
jecxz
leave
ljmp
sub
mov
push
adc
and
xchg
xchg
ljmp
inc
mov
pop
inc
inc
inc
jo
jns
aaa
mov
lods
adc
jecxz
gs
add
out
dec
push
adc
imul
fstps
incl
push
and
scas
cltd
leave
sbb
inc
out
sub
cmc
and
sub
and
xor
lods
sbb
loopne
outsl
add
inc
sbb
pushl
hlt
ja
pop
mov
addl
push
ficoml
divb
sub
push
xlat
sub
xchg
daa
inc
and
add
push
pop
add
add
fsubl
aam
pop
xchg
stos
pop
jg
lea
into
adc
lret
push
jno
nop
jp
mov
sub
or
and
clc
push
rorb
jmp
rcll
iret
jns
sub
push
xor
cmp
fisttpll
add
test
pushf
mov
out
push
les
push
mov
in
mov
lds
adc
fists
mov
loopne
stos
cmp
addl
sbb
xchg
adc
dec
adc
jb
push
dec
clc
pop
jns
test
rcrl
dec
pushf
xlat
cli
mov
enter
mov
popa
sub
adc
cmp
push
fcompl
and
push
fidivrs
push
push
pushf
pop
in
push
jg
mov
out
cmp
cmp
cmc
pop
iret
sub
cmp
sti
in
scas
jne
pop
pop
insl
mov
repnz
cmc
pop
out
stos
ret
cmp
inc
fadds
jmp
push
fists
sbb
push
mov
jmp
ja
xchg
cmp
std
pop
js
aad
cmpsb
repz
sub
sbb
and
mov
push
lock
fidivl
lods
lret
dec
fcoms
inc
pusha
call
dec
fidivl
inc
das
xor
ret
sbb
mov
sahf
and
jo
jmp
arpl
adcb
jge
cmp
xor
and
adc
outsb
cmpsb
fwait
ja
jno
aaa
fcompl
test
mov
xchg
adc
inc
pop
or
cld
push
jb
ds
cltd
sub
stc
inc
cmpsl
int3
clc
lret
mov
mov
aas
xchg
add
dec
add
mov
push
jne
and
inc
adc
jns
pushf
pcmpeqd
xchg
or
push
sub
xchg
xchg
jmp
das
xchg
and
mov
js
addl
loopne
mov
adc
sahf
nop
jg
add
leave
rorb
insb
mov
sub
mov
jne
and
push
arpl
sbb
fidivl
xchg
xchg
lods
xor
inc
popa
jae
push
out
jl
dec
shll
pop
sub
jno
sbb
dec
enter
insb
daa
popa
mov
sub
jns
pop
divb
lret
lahf
adc
push
imul
dec
rclb
xchg
push
icebp
inc
cld
idivb
fcmovbe
inc
xchg
imul
test
test
idivb
iret
mov
xor
into
icebp
xchg
mov
mov
push
pop
push
lods
jno
push
jb
inc
imul
mov
adc
loopne
mov
addr16
jo
cmp
jmp
pop
xchg
mov
mov
imul
int3
icebp
insl
leave
add
jbe
in
stos
adc
hlt
scas
in
clc
jg
inc
mov
jmp
dec
scas
sub
aam
push
mov
and
xor
adc
cmp
dec
iret
dec
xchg
mov
test
xlat
pop
jmp
loopne
mov
dec
xchg
aaa
dec
and
lods
xor
dec
mov
loope
lock
iret
xchg
jmp
orl
nop
ucomiss
mov
fs
or
mov
hlt
mov
scas
pop
pop
xor
andl
or
inc
inc
aaa
ret
jno
inc
cmpsl
lds
mov
je
lret
daa
sbb
lods
xor
pop
mov
into
pop
out
sub
stc
dec
sub
aas
xchg
jecxz
sbb
xor
cmpsl
insb
imul
ja
sub
push
std
test
inc
stc
dec
mov
cmpl
subb
pop
sub
rcr
xchg
adc
outsb
pop
ja
movsb
psrlq
neg
mov
pop
add
fcmovnb
sub
push
xchg
sub
jo
outsl
push
mov
mov
and
in
sub
aaa
cmp
sbb
jmp
std
test
lret
jno
stc
mov
cli
mov
cmc
out
leave
pop
movsl
xor
and
ja
es
inc
mov
repnz
mov
sub
adcb
lods
push
xor
xor
or
cmpsb
sub
arpl
cmpl
ret
inc
pop
xor
push
jle
push
adc
push
mov
outsb
lods
vmovhps
lock
add
popa
in
mov
lahf
xchg
clc
mull
outsl
popa
sbb
dec
dec
insl
lret
imull
les
push
lock
mov
pop
sub
adc
cmpsb
adc
fildll
jecxz,pn
pushf
push
ret
mov
xor
fisubrl
sub
sub
lret
cltd
inc
adc
add
fstl
out
xchg
push
fdivl
xchg
and
adc
or
mov
test
cld
nop
gs
sar
or
imul
ja
sbb
mov
xchg
aad
aad
sub
cmp
mov
outsb
cmp
shlb
mov
neg
xlat
mov
lea
xor
aas
dec
call
dec
jl
or
pop
cmp
pop
movsl
and
repnz
cmp
mov
mov
xchg
lcall
mov
adc
mov
mov
pop
addr16
mov
pop
mov
fisubrs
mov
and
jmp
pop
push
scas
ret
sbb
pop
fdivs
cmpsl
jmp
jns
jg
jmp
int3
movhlps
stos
xchg
data16
imul
data16
mov
gs
cmpsb
xor
jno
dec
or
cwtl
repnz
xchg
insb
repnz
enter
loop
pop
cltd
jge
mov
stos
ss
fsubrs
push
cltd
scas
adc
imul
neg
aam
shrb
out
inc
enter
ret
ja
mov
movsb
add
dec
mov
push
xchg
fs
mov
lock
aas
ss
faddp
fsubrs
push
movsl
sbb
mov
les
es
add
push
push
imul
xchg
and
repz
ficoms
dec
and
pop
push
leave
xchg
popa
pop
in
inc
sti
inc
orb
lahf
lods
fldl
jecxz
fs
cmp
lahf
jl
jns
in
mov
adc
ret
cmp
mov
adc
daa
shrb
jle
push
push
mov
das
inc
std
lcall
xchg
popa
xchg
loop
push
test
lret
mov
dec
inc
jno
loop
test
or
xchg
or
and
mov
test
xor
test
aam
dec
jge
cli
adc
or
loopne
das
dec
daa
call
cltd
stos
pushf
or
fwait
test
adc
popf
or
dec
push
dec
test
xor
sub
xchg
and
xchg
lret
mov
lcall
cmpsb
xchg
jb
stos
jl
pop
push
pop
push
dec
es
pop
aas
mov
jb
push
fsubr
cmp
cmp
lods
mov
lock
fs
push
daa
ret
repnz
mov
add
mov
popa
les
fiadds
stos
stc
or
xchg
outsl
or
xlat
xchg
jo
xor
xor
bound
cmp
dec
cmp
les
adc
add
insb
call
xchg
lea
in
data16
mov
fistpll
rcrl
cltd
mov
xlat
adc
push
cmp
cmp
incb
cmpsb
inc
inc
push
iret
jmp
push
xchg
mov
push
dec
mov
or
lea
testb
inc
sti
mov
sub
mov
jmp
repz
jge
jg
int3
jo
adc
pop
add
cmp
loopne
call
aas
push
sub
sbb
fs
addr16
jecxz
adc
inc
push
xchg
pop
dec
sbb
and
movb
pop
pop
je
sub
dec
add
inc
ss
setnp
dec
push
sub
and
sub
add
stc
cmpsl
test
jl
adc
in
mov
adc
adc
in
pop
imul
and
ljmp
pop
rol
push
xor
mov
cmpsl
out
pop
or
xchg
pop
jns
enter
mov
jb
arpl
or
cmp
popf
les
inc
pop
xchg
mov
fldt
jp
leave
pop
add
stc
mov
mov
lods
mov
icebp
das
out
jmp
sbb
hlt
or
mov
paddq
sarl
adc
xor
push
sbb
cmp
push
mov
mov
movsl
decl
lea
and
dec
cmc
xchg
mov
fmull
mov
je
dec
rol
mov
and
mov
repz
mov
or
test
mov
pop
mov
mov
data16
adc
or
pop
fdivs
mov
stc
int3
push
lret
xchg
cltd
rcrb
in
data16
sub
mov
and
dec
pop
mov
hlt
adc
adc
add
test
aas
xchg
sti
adc
lock
outsb
lcall
lods
pusha
push
add
push
js
in
xchg
jno
sahf
xlat
ret
push
mov
cwtl
or
and
in
mov
imul
xchg
pop
mov
add
jo
fwait
xchg
xchg
mov
mov
lea
repnz
mov
or
lret
out
and
xchg
aaa
xchg
mov
shr
shrb
movsb
das
add
push
pop
cmp
in
pop
out
sti
inc
lahf
jge
pop
lods
or
sub
mov
je
sbb
cmp
inc
sub
jno
jae
pop
add
mov
xor
nop
mov
sbb
adc
sbb
add
inc
adc
dec
sub
aaa
adc
fnstcw
lcall
leave
pop
mov
loopne
push
rorb
shlb
xor
fdivrs
sub
pop
or
jae
and
pop
adc
and
out
cmpsl
pusha
cmp
pop
stos
cmp
idiv
orl
dec
ljmp
pop
push
sbb
movsl
pushf
xor
sub
fdivrs
fnsetpm(287
paddsw
lahf
xchg
ds
pop
dec
cld
test
inc
insl
in
test
push
out
mov
jmp
int3
ss
inc
insb
jns
out
sub
sbb
pop
in
or
popa
xchg
jp
test
repz
inc
iret
cmp
xchg
jl
loopne
inc
dec
push
mov
pop
jge
test
repz
movsl
lret
add
mov
sub
add
mov
in
orl
xchg
mov
or
fldl
mov
enter
ja
rclb
mov
mov
into
in
or
imul
mov
jecxz
mov
jp
mov
xchg
in
xlat
add
enter
imul
enter
cmp
xor
arpl
pop
mov
adc
lret
scas
in
sbb
lods
enter
pop
lea
aad
pop
outsl
jno
into
mov
or
xchg
dec
lcall
loop
push
out
hlt
or
sub
inc
xchg
gs
pop
adc
and
jb
lret
lcall
xchg
xlat
add
adc
add
fmulp
test
mov
fstpl
arpl
data16
in
pop
sub
hlt
xor
filds
out
push
and
cmp
ljmp
mov
jmp
xor
pop
xchg
ss
pusha
dec
jnp
call
mov
jl
outsl
jno
pop
sarl
sub
pop
dec
cmc
pop
movb
or
adc
int
push
and
sbb
xor
ficoml
xchg
movsl
push
and
push
stos
sbb
mov
sub
into
push
push
ljmp
sbb
js
dec
dec
int3
lahf
in
repnz
xchg
mov
popf
jmp
pop
mov
mov
out
push
sub
cli
loopne
xlat
add
and
cmp
and
pop
cwtl
and
xor
leave
xchg
push
inc
or
ret
addl
and
jno
ss
mov
push
sub
jp
sbb
mov
add
into
lret
mov
pop
dec
pop
test
movsl
push
xorb
js
xchg
dec
pop
lods
mov
aas
ss
lret
out
or
push
mov
sti
jne
mov
les
jno
shll
ja
frstor
fs
in
lret
add
add
pop
lret
adc
jne
dec
test
jne
jecxz
jno
insb
leave
add
movsb
stc
es
pop
loope
xlat
cmpsb
adc
rol
xor
mov
xchg
mov
xchg
cmp
fcoml
pop
lcall
jnp,pn
arpl
mov
ror
mov
push
dec
jmp
push
dec
dec
mov
data16
nop
add
inc
pusha
mov
xchg
mov
in
or
jns
or
aaa
sub
dec
pop
mov
or
repnz
les
or
scas
frstor
in
out
xor
das
imul
loope
cli
lahf
fwait
cmp
dec
or
lcall
push
dec
push
sub
adc
cli
mov
and
insb
xlat
imul
jecxz
inc
inc
push
incl
push
jb
into
mov
sub
push
dec
sahf
stc
push
lea
lds
imul
test
aam
or
mov
push
arpl
adc
xor
add
sbb
push
inc
lret
out
sbb
jmp
mov
jb
jno
inc
shlb
mov
clc
mov
or
mov
shl
fwait
aaa
in
cli
mov
jp
cmp
mov
pusha
mov
dec
push
xor
sti
or
outsl
mov
dec
lock
or
mov
pop
subb
arpl
cltd
push
iret
xchg
jns
arpl
add
mov
es
ljmp
incb
in
pop
inc
jge
and
mov
mov
pop
sti
daa
neg
mov
cmc
addl
jbe
roll
sahf
in
mov
mov
pop
ret
xor
xchg
mov
xchg
inc
inc
aas
cmp
push
and
mov
jg
add
rolb
jmp
push
sbb
nop
inc
test
adc
pop
push
push
popa
pop
cwtl
int
sub
jo
fs
dec
adc
jae
dec
or
fwait
rorl
and
sbbl
mov
into
test
pop
sti
fs
xchg
shlb
not
fisttps
es
inc
mull
adc
int
lcall
and
ds
add
ja
gs
cli
imul
stos
movsb
hlt
cli
test
jb
les
xor
add
add
push
test
shl
aad
dec
inc
xchg
mov
aam
xor
mov
lret
sub
jmp
and
add
decl
movswl
iret
mov
dec
mov
xor
movsl
push
mov
inc
in
shr
xor
mov
mov
dec
std
xor
xor
je
add
call
xchg
jmp
adcl
inc
fldenv
xor
stos
xchg
xchg
mov
sbb
icebp
and
push
cs
xor
xchg
rorl
jo,pn
aas
mov
out
jecxz
lock
jb
sub
aam
mov
out
daa
mov
popa
out
mov
lock
out
fucomi
sub
cmpsl
sahf
push
scas
and
push
sti
pop
les
xchg
cmp
push
mov
xor
adc
inc
ljmp
adc
and
into
mov
jle
xor
imul
pop
push
lcall
adc
add
fisttpll
push
add
icebp
loope
arpl
push
or
inc
push
mov
addl
add
xor
loope
add
mov
push
sti
popa
xchg
andl
jmp
fwait
jo
dec
es
or
fbld
cli
xor
xrelease
mov
in
add
jge
test
stc
fistl
inc
aad
rorb
ret
mov
or
mov
icebp
dec
cmp
icebp
sbb
outsb
pop
add
pushf
adc
dec
pop
leave
mov
dec
mov
cmp
mov
aad
or
xor
xchg
cld
xchg
aas
inc
jnp
popa
es
xor
fs
daa
push
jg
mov
cmpsl
aas
arpl
ja
pushw
or
mov
iret
fmul
push
mov
lahf
ja
add
sbb
scas
and
xchg
sti
int3
aas
loopne
push
jno
xor
int
pop
shl
push
leave
sub
xor
mov
mov
pushf
cmp
xor
loope
adcl
fisubrs
xchg
loop
or
jmp
fiadds
cmp
into
fdivs
dec
lret
insb
jno
xor
dec
and
jo
jecxz
dec
pop
data16
adc
mov
loopne
aas
xchg
mov
or
mov
mov
jl
xchg
aaa
mov
dec
imul
jge
add
pop
xor
call
dec
xchg
xlat
testl
lock
xchg
ljmp
cmpsl
sarb
rcr
inc
xchg
dec
xor
pop
pop
dec
mov
imul
xchg
icebp
pop
dec
mov
sti
mov
int
fs
das
dec
lods
and
je
inc
xchg
js
jmp
aad
mov
dec
xorl
loop
gs
jns
aaa
stc
push
ficoms
lods
inc
shll
and
xchg
adc
add
xchg
fstpt
insb
xchg
jns
sbb
aam
ljmp
or
loopne
push
insl
cmpsb
and
pop
cwtl
or
inc
lret
mov
aas
push
xor
decl
cmp
dec
sub
sbb
adc
inc
movsb
stc
imul
das
push
mov
clc
ret
popa
shll
xor
test
cmp
mov
cmp
adc
dec
inc
mov
ret
pop
mov
hlt
sub
sub
mov
cmp
mov
clc
dec
pop
out
or
mov
iret
jmp
sbb
fildl
test
test
out
dec
dec
loop
stos
stos
adc
ds
jmp
sub
mov
ljmp
mov
jge
mov
inc
je
jne
push
pushf
jle
pusha
and
mov
xor
popf
lock
adc
mov
pop
mov
cmp
aam
cli
aaa
sub
lea
in
pushl
mov
mov
push
and
arpl
sbbl
or
push
adc
xor
adc
or
in
pop
insl
loop
sarb
xor
sub
jb
nop
lods
pop
shlb
or
jnp
jb
pop
lret
or
sbb
jae
jo
xchg
call
jmp
scas
xchg
lcall
repnz
pop
push
push
mov
xchg
test
icebp
inc
rorl
icebp
icebp
add
mov
inc
call
adc
add
enter
dec
pop
stc
enter
loope
adc
ss
xor
cmp
jo
ss
or
scas
or
test
push
xchg
stc
lds
jl
xchg
lcall
xchg
push
fimuls
jne
cmpsb
inc
rcr
mov
jmp
stos
add
popf
fcompl
pop
add
jmp
add
inc
jnp
sti
repnz
inc
sbb
fildl
les
xlat
int
xor
lods
std
or
hlt
push
inc
inc
addr16
out
ljmp
cmp
addr16
jg
scas
cmp
fdivrl
add
jb
inc
adc
xchg
jae
and
fadds
mov
test
dec
xchg
rcr
outsb
xor
push
sub
sbb
jg
movsb
pusha
xchg
leave
fcompl
cmp
jg
andl
int
cld
sub
and
cwtl
pop
sbb
js
jle
push
outsb
add
fstpt
cmc
les
nop
test
push
xlat
adc
add
rcrl
push
sub
pusha
shll
push
lds
lock
mov
cs
jmp
xchg
lods
fidivs
sub
mov
out
xchg
and
mov
jg
adc
xor
mov
in
fs
out
or
or
add
add
mov
mov
mov
pop
pop
adcl
stc
dec
repz
shl
fiadds
push
adc
mov
cmp
test
cmp
mov
pop
cmp
mov
lret
xor
or
leave
daa
in
out
fs
aas
repz
mov
scas
xchg
or
aaa
mov
jecxz
mov
movsl
mov
or
mov
arpl
pusha
push
or
adc
hlt
fistl
ret
jns
vcvtsi2sd
aaa
or
adc
mov
stc
in
fwait
xchg
into
push
call
push
inc
mov
cmc
pop
iret
data16
mov
jge
fadd
mov
fldcw
mov
aaa
xchg
pusha
sbb
movsl
test
jae
and
jbe
cli
pop
mov
dec
xor
sub
outsb
nop
jg
lds
dec
push
clc
imul
fwait
add
lret
mov
mov
test
repnz
lret
les
aaa
ljmp
icebp
cwtl
in
and
in
push
and
dec
scas
in
movsb
aaa
jne
loope
stc
mov
pusha
push
xor
push
aad
mov
jns
pusha
dec
lds
mov
nop
pop
push
cmp
lret
sub
les
pop
jne
aad
in
rcll
sub
push
je
or
fucompp
or
push
jnp
push
jns
js
push
jbe
jmp
mov
lea
dec
movsb
mov
mov
movsb
js
and
inc
ret
push
mov
jg
sub
loopne
ljmp
fnstenv
arpl
jecxz
sahf
aam
test
sbb
jae
imul
mov
xor
jmp
fs
pop
or
mov
mov
adc
cmpsl
jo
fwait
xor
in
xchg
sarl
lahf
out
hlt
addr16
inc
xchg
ja
mov
jecxz
pop
lcall
hlt
mov
or
pop
in
test
cli
cmc
pop
sbb
enter
push
mov
cld
pop
push
lret
rolb
xor
jno
or
in
das
xor
ffree
stc
in
loope
sub
shlb
sub
out
in
pop
sbb
testl
pop
ds
addr16
sub
mov
pop
sub
das
inc
scas
dec
outsl
call
mov
lahf
daa
or
sub
push
stos
pushf
stos
pop
nop
subl
mov
and
popf
xor
test
repz
outsb
xor
push
outsb
dec
loope
inc
mov
dec
stos
mov
mov
xor
or
leave
cmp
loopne
xchg
cmp
mov
dec
mov
aaa
in
imul
out
icebp
call
lods
ret
clc
dec
cwtl
push
xor
push
cmp
push
push
inc
testb
out
jno
or
jnp
ljmp
fstl
xor
loope
add
inc
imul
push
out
add
lds
fcoms
add
inc
dec
inc
jne
aaa
inc
add
cwtl
adc
jmp
pop
popf
iret
xor
fadd
in
fsubs
inc
cltd
xchg
add
add
adc
out
faddl
test
mov
popa
push
cmp
or
loop
sarb
xchg
inc
lret
in
xlat
cwtl
adc
pop
xlat
pop
add
push
test
add
int3
nop
arpl
or
xchg
mov
push
aad
into
out
test
inc
rolb
mov
fdivs
add
xchg
cmp
scas
cmp
cwtl
lahf
fistps
loop
jno
push
mov
fadd
xchg
push
shl
pop
xchg
dec
popa
or
push
pop
bound
and
inc
shll
nop
xor
stc
test
call
jae
fs
stos
jle
lret
out
outsl
mov
sub
inc
sbb
mov
rcrl
dec
dec
and
xchg
xor
xchg
mov
mov
rolb
cltd
mov
imul
mov
xlat
pop
sub
dec
icebp
fists
or
mov
xchg
ret
inc
mov
shrb
lret
jbe
add
jecxz
mov
pop
sahf
push
pop
imul
popl
call
add
lret
mov
mov
pop
pop
popfw
sub
dec
out
test
es
addl
pop
in
jne
xor
dec
pop
push
mov
push
dec
adc
xchg
jae
adc
popa
adc
pop
jmp
je
push
mov
add
inc
push
or
out
sub
fldl2e
mov
cltd
mov
repz
jae
repnz
in
xchg
in
dec
mov
ret
repnz
xchg
mov
aaa
cmp
add
jno
adc
test
sub
inc
call
nop
aad
dec
mov
push
xchg
mov
push
sub
aaa
dec
mov
jae
xchg
mov
lahf
xchg
mov
fisubs
jge
cmp
xor
mov
mov
mov
dec
mov
popf
mov
or
lods
xchg
repz
cmp
pop
pusha
push
ljmp
ss
out
push
sarl
add
and
repnz
xchg
lods
cld
bound
out
sti
fdivr
xlat
mov
imul
lods
or
jl
lret
rolb
lret
sbb
lret
mov
mov
test
icebp
jne
mov
jne
mov
or
sbb
rcr
fidivl
js
int
cmpsl
scas
mov
add
je
fwait
inc
pop
stos
iret
hlt
add
int
pop
divb
push
iret
add
ds
sti
jo
jle
lcall
insb
or
and
cmc
adc
pop
jo
fidivrs
jge
cmpb
popa
inc
adc
inc
xor
mov
and
cmp
cs
cli
xchg
jle
jbe
mov
or
mov
into
cmp
in
les
xchg
shll
xchg
mov
pop
mov
jne
pop
fwait
in
push
sahf
dec
fstpl
dec
xor
outsb
stc
push
cmp
xchg
pop
add
arpl
out
sarb
push
test
ljmp
pop
jle
inc
mov
add
pusha
dec
ret
dec
out
jecxz
pop
ret
sbb
mov
mull
jno
adc
in
repz
dec
mov
dec
push
scas
subl
mov
mov
aas
cli
and
inc
movsl
jp
xor
push
push
decb
push
in
ret
bound
inc
pop
gs
jmp
jle
imul
add
nop
sbb
mov
pop
inc
mov
fcoms
mov
lds
xor
int3
inc
out
sti
cmp
jmp
sbb
jae
lahf
shl
loope
push
sub
push
pop
jg
sub
inc
sub
gs
lahf
repz
fsubr
dec
scas
mov
test
test
xchg
sub
cmp
pop
pop
int3
jmp
inc
addl
mov
dec
or
inc
cmpsl
jbe
jmp
loope
mov
xor
pop
xor
pop
mov
push
pop
adc
cmp
pop
in
fimull
rorb
sbb
jl
dec
clc
pop
push
dec
push
cs
sbb
push
negl
jg
add
pop
sub
xorb
dec
dec
mov
cmc
xchg
aas
in
lahf
mov
pop
fistps
or
xchg
je
fnstsw
cmc
sub
mov
aaa
adc
mov
xchg
test
mov
inc
mov
shlb
mov
cmpl
fwait
mov
fcoml
in
movsb
sbb
cmp
add
test
push
inc
jle
sti
ror
imulb
push
ret
or
outsl
sbb
rcl
jb
xor
in
mov
ljmp
adc
cltd
xor
int3
push
inc
xchg
outsb
xchg
mov
lcall
insl
clc
jbe
mov
push
jbe
xor
cs
sub
repz
dec
lds
push
inc
movsl
sti
movsb
pop
cmp
dec
arpl
sbb
gs
jns
insl
mov
dec
imul
mov
sub
pop
es
call
mov
jmp
add
inc
addb
loop
push
icebp
mov
pusha
stc
in
nop
cmpsb
lret
or
xchg
dec
mov
add
lret
jle
stos
mul
adc
movsl
into
std
stos
lret
jecxz
mov
adc
push
xchg
setle
push
xor
int
mov
add
xor
fs
stc
sarl
adcb
rorl
jmp
loop
scas
or
cli
decl
inc
adc
mov
aad
cmpsb
sahf
jnp
mov
inc
mov
jae
iret
add
ja
mov
fwait
mov
mov
mov
mov
mov
out
adc
pop
or
std
mov
mov
mov
sahf
cmp
lahf
mov
int
cmc
pop
cwtl
xchg
mov
loope
in
movsl
sbb
xor
or
cmp
xchg
arpl
mov
push
mov
push
testl
cmp
dec
movsb
cmp
divb
sbb
lret
and
adc
push
push
cmp
fidivrs
adc
jle
cmp
stos
xchg
mov
xchg
dec
dec
push
and
mov
mov
test
js
cmpsl
jnp
dec
repnz
mov
mov
mov
lret
dec
loop
push
sub
push
mov
jo
jo,pt
inc
lahf
sub
dec
pop
fcmovne
adc
cwtl
xchg
push
or
dec
dec
mov
mov
pop
gs
daa
fwait
out
or
outsl
nop
mov
je,pn
xor
xchg
fs
in
push
mov
cs
mov
cli
es
fcoml
sahf
sti
jp
aad
insl
inc
add
jecxz
shrl
iret
idivb
int
repz
mov
ret
lods
addb
hlt
mov
into
out
inc
dec
jecxz
js
imul
mov
sub
or
mov
adc
aam
and
fmuls
push
test
jns
sub
push
push
dec
test
in
lret
add
dec
cmp
pop
pop
jbe
xchg
pop
test
das
dec
mov
addr16
aam
aam
sarb
ss
sbb
cli
push
test
inc
shll
subl
mov
xor
jp
cmp
sbb
mov
dec
mov
lahf
pop
add
mov
cld
add
jle
push
movsl
sub
or
jg
ret
outsb
sub
std
shll
mov
sbbl
pop
loop
pushf
sahf
mov
outsb
fdivrs
or
fldcw
gs
sahf
jmp
mov
inc
inc
sub
push
mov
sbb
mov
gs
sbb
and
or
cli
push
fcomip
mov
jo
faddl
pop
in
sub
mov
mov
cwtl
mov
fs
dec
and
mov
jmp
push
jns
pmulhuw
and
pop
jno
dec
inc
cmp
mov
xchg
addr16
lds
ret
sbb
icebp
fscale
mov
mov
sbb
repnz
push
xchg
call
dec
mov
inc
fildll
cli
aad
cli
and
push
inc
enter
cmp
jo
lods
test
or
cmp
xlat
stc
mov
test
cltd
jecxz
mov
push
jnp
xchg
mov
mov
imul
scas
push
out
jle
test
dec
mov
rcrb
mov
lea
bnd
mov
adc
adc
sbb
bound
and
xor
xor
mov
or
lock
out
das
jp
mov
imul
mov
cld
in
xlat
in
fisttps
inc
xlat
dec
inc
or
inc
mov
jle
lcall
cli
out
andps
cmp
or
fistps
cmpsl
mov
iret
mov
loope
and
push
fisubs
sub
mov
mov
out
jg
add
lret
sbb
adc
sbb
xor
js
vpsubq
cmp
stos
sub
sub
lods
call
mov
pop
and
jge
gs
jb
or
ret
sti
repnz
sbb
addb
jmp
in
or
repnz
imul
dec
pop
mov
sti
adc
das
push
jmp
clc
ljmp
scas
sahf
lds
lcall
test
jecxz
push
subb
or
stos
fsubrs
or
or
int
xor
aam
les
fwait
push
adc
mov
jecxz
out
sub
push
fldenv
fldenv
fnstsw
mov
or
rcll
test
lods
and
je
inc
dec
sbb
push
loopne
dec
mov
in
push
mov
pop
or
in
push
adc
inc
scas
or
adc
mov
xchg
mov
jecxz
adc
stc
js
dec
pusha
ja
pop
lds
loopne
adc
push
cwtl
push
arpl
pop
inc
in
push
push
push
dec
pushf
lret
stc
sbb
dec
dec
push
push
pop
aaa
push
add
out
xchg
adcl
aad
ds
test
not
mov
xchg
pop
push
int
rorb
hlt
test
cmp
add
icebp
mov
decb
gs
push
insb
cmpsb
inc
inc
xor
dec
cltd
jle
pop
js
aas
mov
mov
fmul
scas
add
xchg
mov
push
fldenv
xchg
inc
test
jbe
call
jg
rclb
adc
push
xor
xor
data16
sarb
lods
mov
aas
mov
push
mov
xchg
aam
hlt
lcall
pusha
push
dec
xor
pop
imul
push
test
jle
sar
aam
jmp
jle
push
adc
adc
cmp
aaa
mov
fldz
sarl
adc
daa
mov
pop
dec
cmpsl
xchg
or
enter
sbb
js
mov
push
cli
mov
sahf
sti
mov
adc
inc
jnp
pushf
sub
out
inc
add
mov
or
in
mov
xchg
mov
addr16
ret
pushf
out
fcomps
fwait
jmp
int3
cmpsl
sub
std
cmp
ret
cmpsb
das
int3
ja
aam
cld
or
sbb
xchg
pop
jp
xchg
cmp
add
xchg
jmp
sarl
cmp
mov
repz
shrl
jne
xor
inc
mov
pop
dec
xchg
fildl
sub
lcall
jns
stc
scas
xchg
jns
pop
sub
dec
ja
int
int
stc
jnp
sahf
and
es
ds
sub
push
add
popa
pop
les
std
add
cmpl
jbe
xchg
sbb
mov
dec
popa
leave
divb
mov
push
fisttps
mov
add
in
gs
jne
fs
mov
push
adc
mov
rcr
pop
stc
and
inc
mov
cmp
sbb
rcrl
jg
mov
sub
mov
mov
arpl
outsl
sbb
and
adc
in
fs
push
sub
dec
stos
mov
xor
loope
pop
clc
mov
and
int3
push
dec
cmc
inc
fists
mov
xchg
cltd
sbb
shll
sbb
inc
mov
imul
add
pop
sub
pop
je
mov
push
cmpsb
or
and
jg
adc
inc
jne
insb
imul
ljmp
jb
loopne
fimull
sbb
mov
adc
and
lcall
xchg
shl
scas
repz
or
mov
adc
into
jl
lcall
scas
gs
dec
pop
popf
lods
shlb
push
cmp
fwait
mov
xchg
repz
outsl
ljmp
lds
roll
sub
cmpsl
out
jp
ljmp
mov
push
shll
dec
lret
or
scas
daa
ret
push
je
je
xchg
lcall
aad
mov
pop
pop
xchg
je
cltd
mov
std
sbb
push
fsubl
rcll
jmp
bound
sub
js
mov
lcall
sub
sahf
int3
adc
push
dec
mov
ss
aaa
adc
inc
jmp
cmpsl
das
cmp
inc
jb
inc
jne
xorb
pusha
xor
test
mov
add
and
sarl
test
mov
or
cwtl
shrl
cmpsb
sub
insl
and
out
or
push
sub
lahf
jle
add
sbb
fcompl
pusha
daa
insl
pop
imul
mov
in
dec
xchg
lcall
pop
subb
out
in
std
and
dec
or
add
or
cmp
dec
fwait
add
popa
icebp
cld
jne
scas
xor
sub
shrl
inc
in
addr16
jnp
inc
mov
sbb
cld
mov
add
sbb
insl
mov
jge
push
lock
jns
vzeroall
cmp
aad
and
push
cwtl
cwtl
xor
cwtl
pop
movsl
test
jbe
in
xchg
orl
jle
mov
mov
jne
lods
pop
shrb
imul
sti
mov
xor
sbb
in
inc
in
and
imul
out
jl
push
outsl
ret
or
pop
imul
adc
cs
mov
lret
pop
add
xchg
imul
push
push
roll
daa
shll
cwtl
mov
aaa
sub
dec
sbbb
or
fadds
loopne
xor
cmp
sbb
xor
pushf
scas
jecxz
pop
push
test
cmpsl
push
mov
jbe
dec
and
sub
lods
nop
mov
pop
lcall
inc
add
ret
test
inc
ret
pop
jno
shll
dec
add
and
cs
push
scas
cld
stos
inc
fldt
and
orb
and
loop
sbb
mov
add
push
faddl
mov
push
cs
jne
lea
inc
lahf
jnp
imul
dec
sbb
rcl
xchg
mov
mov
cmp
in
imul
pop
sub
out
xchg
xchg
sub
pop
out
mov
xor
dec
loope
mov
sub
cld
jmp
cmp
lock
adc
mov
test
shrb
mov
and
repnz
loope
data16
scas
imul
mov
cmp
add
and
sbb
push
outsl
mov
inc
jmp
push
push
mov
and
out
hlt
test
pop
jge
subl
pop
sbb
mov
or
sbb
sahf
xor
idivb
adc
repz
arpl
and
jae
sub
mov
cmp
xchg
pop
fildl
mov
dec
jecxz
inc
aaa
lods
jmp
sbb
pop
mov
hlt
xchg
loop
pop
inc
mov
inc
mov
push
movntps
cs
push
inc
xor
mov
inc
push
es
sbb
xchg
push
and
jl
fdivrl
push
mov
adc
adc
imul
push
sub
jb
leave
dec
jg,pt
decl
ljmp
pop
popa
adcb
loopne
or
inc
sub
pop
jno
inc
sub
arpl
sub
jns
popa
inc
mov
cmpsb
testl
sub
xor
in
fsubl
call
lods
dec
loope
repnz
testl
and
roll
or
cwtl
fs
enter
cmp
das
dec
repnz
movsl
or
sub
lret
mov
addb
das
jbe
pop
gs
outsl
daa
insb
je
push
sub
xor
lods
sub
mov
or
loope
push
jl
and
pop
mov
jo
dec
mov
xchg
iret
aad
xchg
icebp
enter
ljmp
push
fnstsw
lret
adc
popf
xor
inc
cmp
pushf
mov
inc
sti
cmpsl
or
mov
repnz
aad
pop
cmpsl
mov
jnp
or
lock
cwtl
loop
test
popa
out
mov
xchg
sub
pop
jno
adc
fwait
int
jne
in
int3
jecxz
scas
insl
ret
inc
or
xchg
mov
and
sub
in
loop
cmp
mov
or
jle
push
aam
adc
xchg
sub
lods
jns
cmp
iret
pop
push
mov
mov
in
add
mov
jmp
in
arpl
lock
je,pn
lcall
xor
jmp
fcomps
xchg
movsl
aas
adc
mov
subl
and
in
ret
adc
push
shll
jle
cmpsl
icebp
ds
cmpsb
fwait
mov
jb
pushf
dec
stos
mov
in
sahf
mov
adc
and
in
and
mov
adc
out
daa
lods
jmp
sbb
es
inc
negb
and
out
aaa
int
cmpsl
notb
pop
das
pop
xchg
or
fwait
in
adc
shl
ret
cmp
ljmp
adc
pusha
xchg
pop
mov
clc
mulb
add
shrb
and
push
sub
xor
xchg
test
lock
das
adc
shll
jbe
push
lret
cs
xor
out
test
mov
out
pusha
or
xor
inc
adc
mov
pusha
shll
push
lret
jnp
mov
stc
jb
into
inc
adc
jp
and
fldt
jnp
mov
dec
imul
push
xlat
or
adc
xchg
push
cmpsb
aas
mov
and
inc
inc
popa
xchg
icebp
scas
or
iret
and
push
shr
aas
push
fisttpl
in
fisubrl
inc
lods
xor
call
and
insl
pop
xor
dec
js
add
jl
std
push
xchg
pop
lret
ljmp
cmp
neg
daa
cmp
adc
loop
jbe
lahf
in
push
mov
pop
jne
aam
jno
lret
jge
stc
pushf
popa
push
outsb
jbe
popa
push
jmp
jne
xchg
cmp
test
movsl
jecxz
xor
aam
aad
js
add
xchg
jle
pop
push
push
cmp
jmp
pop
fsubr
mov
test
add
push
loope
inc
sbb
lods
lods
jp
mov
lahf
mov
ret
push
jg
and
sub
adc
jne
jne
push
cli
push
clc
shll
rolb
lods
add
into
lahf
sub
jns
xor
and
or
fidivl
sub
mov
push
jns
jl
pop
jo
jns
mov
imul
add
arpl
inc
repnz
nop
push
add
pop
lcall
jno
lock
mov
cltd
add
inc
out
dec
sar
cmpsb
cmpsl
test
add
mov
or
mov
xor
lcall
lret
scas
adc
daa
jnp
cld
repz
cmpsb
xchg
and
mov
lods
pop
dec
in
or
std
out
addr16
push
xchg
ret
mov
jns
mov
popa
iret
jb
sub
or
xor
aad
or
pop
push
cltd
xchg
in
sub
inc
add
movsb
adc
dec
sbb
inc
fwait
push
xchg
jnp
cwtl
insl
pop
scas
add
cltd
mov
xor
loopne
popf
stos
test
imul
jg
push
pusha
dec
mov
fcoms
lods
cmpsb
dec
sahf
push
aaa
enter
jnp
leave
rorb
movsl
insl
mov
pop
xchg
sbbb
enter
shl
dec
dec
cmp
cmp
push
lret
adc
mov
xor
dec
loopne
jge
scas
dec
lcall
sahf
sbb
xchg
fdivs
xlat
add
or
repnz
int
push
or
cli
lret
aam
lods
aad
add
adc
mov
icebp
fldenv
xchg
and
fisubrl
xor
icebp
xchg
inc
adc
cmp
and
sub
cld
les
imull
mov
pop
adc
int3
sub
fiadds
pop
dec
push
adc
es
dec
addl
fs
xchg
andl
iret
les
shrl
jb
mov
sub
ficompl
cmp
and
inc
iret
clc
jle
adcb
ror
insb
lret
sbbl
jo
lret
sarl
fs
insl
popf
adc
or
add
pop
flds
jne
loop
nop
jg
scas
or
pop
push
leave
fwait
stc
mov
sub
lea
dec
add
sub
adc
insb
xlat
push
ds
pusha
mov
mov
popl
sub
sub
mov
int
jg
sarl
je
cmp
sahf
xchg
and
flds
xchg
pop
xor
cli
dec
mov
dec
jne
inc
ds
test
sub
inc
loope
les
mov
adc
ja
jae
mov
jno
add
int3
mov
push
sbb
mov
in
lock
cwtl
popl
jmp
jg
mov
inc
test
push
dec
pop
push
fisttpll
adc
or
rorl
rolb
sub
ret
gs
jp
flds
leave
push
imul
dec
sub
adc
fwait
and
cli
es
ja
nop
push
adc
and
mov
popa
mov
xor
rclb
xchg
lcall
into
dec
lds
imul
imull
inc
pop
loopne
dec
fs
xchg
daa
loopne
adc
mov
cmp
jb
push
xor
push
data16
and
sbb
sub
outsl
scas
dec
mov
push
outsl
std
iret
adc
mov
cltd
lret
and
pop
push
or
aaa
mov
loope
outsl
mov
xor
add
out
test
stc
xchg
fcoms
mov
push
mov
xlat
stos
enter
ret
push
pop
or
push
in
out
mov
jecxz
out
jle
push
pop
aas
push
mov
lcall
shr
inc
sub
or
pop
loop
out
or
xor
jp
xor
fsubrs
mov
ret
daa
cld
jmp
lods
fisubrl
daa
lret
mov
je
xchg
leave
inc
xchg
mov
mov
push
insl
cltd
dec
mov
ds
push
out
mov
jne
lods
ds
repnz
test
es
push
arpl
inc
xor
iret
lahf
addl
pushf
cld
jg
and
popf
inc
sahf
inc
out
mov
pop
hlt
mov
mov
loopne
push
and
lret
jns
aam
or
jae
mov
pop
lahf
jne
ds
ficompl
lret
inc
dec
popa
in
add
sbbl
es
mov
push
sub
pop
jg
hlt
sbb
bsf
call
or
fcmovb
push
sti
xorb
jnp
sbb
stc
jae
inc
add
dec
cmp
repz
xchg
rcll
push
push
pop
stc
xchg
insb
and
dec
sbb
mov
mov
test
ud0
cmpsl
xor
ss
jle
mov
xchg
push
mov
jbe
leave
popf
jo
clc
xchg
outsb
dec
popf
fisubl
cmp
or
xlat
in
ljmp
mov
xchg
mov
repnz
ficomps
jne
mov
fadd
sbb
xor
movsb
push
dec
stos
xor
cltd
mov
adc
push
jnp
test
and
int
sti
pusha
or
fwait
mov
sbb
lcall
outsb
sarl
inc
test
ficomps
insl
pushf
mov
jg
cld
cmp
jnp
mov
jae
ret
movaps
push
cld
int
lahf
pop
lahf
jl
fsubrl
cmp
popa
jno
mov
repz
aas
in
ljmp
inc
lock
stos
in
cmp
jno
fsubrl
fwait
ret
cltd
stos
std
stos
scas
out
scas
dec
jnp
out
sub
movsb
dec
inc
jb
outsl
out
push
cmp
mov
testb
popa
sub
ret
mov
sbb
mov
or
test
into
push
sbb
pusha
mov
mov
stos
imul
jl
sahf
aas
rorl
sti
mov
mov
push
popa
imul
push
and
xor
push
mov
mov
and
nop
or
lods
shll
cmc
xor
sub
xor
push
insl
mulb
sub
jp
jbe
out
push
in
test
inc
cmp
sub
icebp
popf
mov
jle
lods
data16
xchg
cltd
cltd
and
das
adc
pop
dec
sti
push
sar
add
out
std
pop
rcrl
cs
mov
enter
and
ret
and
in
fsts
loope
inc
jg
mov
mov
imul
xor
and
mov
pop
pop
jo
dec
pushf
cwtl
or
adc
popa
sbb
arpl
notl
push
sub
mov
push
push
mov
mov
daa
clc
or
fcompl
movsb
dec
pop
cmpl
and
jns
rorl
adc
pop
push
fs
popa
mov
ret
or
pop
mov
xchg
jnp
repz
sub
ret
pop
or
push
jge
inc
jmp
mov
xlat
mov
cmpsl
stc
mov
cld
inc
adc
popa
fildll
dec
sbb
cmp
sbb
repnz
or
loope
mov
mov
sbb
pop
push
mov
xor
insl
mov
mov
and
shlb
xor
inc
cltd
dec
jno
xor
mov
sub
sbb
mov
bound
add
imulb
cld
mov
fcos
lret
fs
xor
mov
xor
stc
insb
and
int
push
dec
push
cmp
fbld
jo
scas
testb
jo
lock
adc
mov
movsb
xor
aas
adc
hlt
mov
fbld
jns
push
inc
jp
push
mov
insb
fs
cwtl
jnp
in
loop
pop
sbb
push
xchg
jo
mov
pop
lds
mov
icebp
add
xchg
inc
mov
dec
push
xor
sbb
inc
fwait
xchg
mov
pop
sbb
pop
negb
das
les
and
and
adc
adc
out
xor
aad
pop
add
mov
loopne
xchg
std
push
inc
mov
shlb
out
push
repnz
pop
roll
sbb
imul
push
addl
and
mov
sub
lret
xchg
cwtl
dec
cmp
cmp
es
cltd
inc
je
jecxz
add
fstps
mov
cmc
push
je
mov
cmp
add
cltd
shrb
lret
mul
mov
lods
xchg
jl
fmuls
idiv
lret
lods
mov
jb
adc
jne
jo
mov
mov
push
jbe
mov
or
ret
in
out
or
jmp
jge
mov
add
pop
pop
cld
sti
xor
sar
inc
mov
stos
pop
pop
dec
pusha
imul
fucom
jo
sub
cmp
in
and
stos
push
dec
dec
lock
adc
and
imul
adc
addb
xchg
jp
mov
ficomps
lods
addr16
mov
jg
cmpsl
lock
pop
ret
jecxz
je
sahf
adc
rclb
stos
sub
stos
sahf
xor
mov
mov
mov
cmc
add
out
arpl
shrl
call
popf
jbe
adc
lock
pop
lret
ss
mov
push
popa
inc
or
sub
and
cs
pop
sub
les
mov
mov
div
push
ljmp
jo
scas
jns
fildll
adc
scas
lods
mov
mov
loopne
cmp
mov
and
jo
mov
mov
js
pop
fstpl
mov
pushf
sub
mov
call
les
imulb
xor
cmp
scas
sbb
inc
out
daa
mov
popf
int3
fidivrl
fisubrs
mov
enter
cltd
and
fcomip
jg
scas
pop
out
sub
sbbb
pop
fiaddl
outsl
jbe
pushf
mov
shr
test
jecxz
dec
xor
sub
hlt
es
jle
push
sbbl
fcompl
ds
call
mov
mov
pop
cld
stc
sahf
mov
xchg
enter
push
mov
insb
or
mov
pop
jge
popf
fwait
scas
jno
pushf
in
xorb
mov
lods
jbe
mov
in
js
xor
adc
push
and
mov
dec
pushf
call
test
cld
xlat
mov
fmuls
hlt
in
or
jno
dec
or
and
add
xchg
xchg
test
fwait
lods
adc
adc
loopne
xor
mov
jo
jg
cmp
xor
cmpsl
mov
mov
dec
nop
ja
lods
js
jecxz
loope
push
ret
out
in
repz
adc
fstp
and
lds
hlt
cmpb
push
iret
lea
mov
pop
stos
hlt
shrb
sti
sbb
pop
adc
adc
out
mov
fistpll
xchg
cmp
sbbl
rorl
dec
mov
cmpsb
mov
outsl
loope
jp
inc
push
xchg
add
int3
pop
mov
repnz
leave
adc
add
push
sbb
dec
mov
fcomps
icebp
lret
fldcw
mov
xchg
cmpl
cmp
scas
neg
push
jge
push
sub
inc
aaa
loopne
fdivp
inc
mov
mov
mov
jl
out
in
into
mov
and
add
imul
dec
incl
ret
loop
xchg
sbb
imul
xlat
push
data16
dec
jnp
insl
lcall
cmp
ret
mov
sub
jbe
int
inc
sbb
pop
jecxz
repz
cmpsl
pusha
dec
jo
cmc
xlat
pushf
in
pop
adc
adc
pop
pop
push
icebp
jp
mov
cmc
lods
scas
testl
test
inc
and
sub
mov
or
mov
xor
sbb
cli
mov
sub
out
adc
xchg
in
sbb
aad
mov
or
aam
and
leave
bound
cmp
decb
insb
adc
jo
mov
test
je
jbe
cmpsl
lcall
test
and
popf
push
jg
inc
dec
je
dec
ret
fimuls
mov
notl
shrb
jl
dec
ss
adc
in
mov
lock
ror
fbstp
push
jns
jnp
scas
mov
or
sub
push
cld
js
inc
mov
not
xchg
add
enter
aas
in
cmpsb
je
xor
loopne
push
push
cmp
mull
fwait
pop
mov
pop
xor
call
push
daa
pop
scas
dec
mov
sub
sub
jns
inc
loope
scas
in
sarl
cmp
loope
add
shrb
sub
inc
add
dec
or
and
sbb
imul
out
or
mov
lods
int
cmc
fistps
pop
js
or
push
into
fmulp
push
mov
inc
xchg
dec
add
dec
aaa
push
jbe
jl
adc
adc
js
jl
pop
mov
cld
mov
cmp
xor
add
or
imul
sub
mov
jp
xchg
mov
mov
push
shrl
shll
rcll
and
pop
cmp
fistpl
enter
mov
add
cmp
push
xchg
mov
je
xchg
mov
mov
enter
push
jle
lahf
cli
jae
mov
mov
pop
sub
out
xor
adc
iret
dec
pop
jo
cmpsb
xor
sub
sub
xchg
or
push
addr16
mov
cld
pop
inc
push
pop
xchg
push
mov
sbb
insl
pop
divl
push
out
lock
or
mov
push
add
mov
ss
or
clc
and
mov
pop
add
popf
repnz
cld
and
xchg
mov
out
and
mov
xor
in
into
mov
sahf
es
fistpl
sti
into
cmpb
fnstcw
cltd
pop
mov
push
cmp
xchg
dec
dec
outsl
scas
cmp
push
jno
das
jbe
mov
lds
add
xchg
gs
inc
inc
inc
mov
imul
iret
mov
addr16
jp
addl
cmp
test
rcl
sbb
pop
jge
jae
jp
dec
or
jne
add
pop
or
and
sbb
jge
sub
loop
push
loopne
lret
inc
mov
fstpl
mov
sbb
mov
sti
xlat
xchg
js
jle
cmc
fcomps
ds
iret
cmpsl
push
add
inc
fadds
cwtl
imul
push
and
xor
xchg
call
sub
fwait
out
or
mov
mov
push
pop
jle
popf
mov
dec
sti
pusha
xsavec
add
ljmp
pop
push
jle
mov
leave
pop
inc
jl
xchg
xchg
fbld
sbb
cmp
clc
jmp
enter
mov
xchg
fnstenv
out
jb
ja
leave
ficoml
cwtl
std
sahf
or
push
addb
pop
jae
rcrl
or
or
and
jg
dec
loopne
icebp
inc
inc
sti
fistpl
les
jo
cmp
fisubs
sbb
lods
in
fistpll
imul
out
xchg
pop
sub
out
mov
xchg
out
sbb
jg
sahf
lds
arpl
imul
scas
call
cmp
rcrb
sbb
cli
mov
mov
push
insl
mov
popa
aam
fwait
push
mov
rcl
xor
lret
das
loopne
popa
popf
mov
push
sbb
fstps
movsb
cli
sbb
fdivr
mov
inc
or
fldl
dec
push
jl
pop
push
mov
mov
cltd
jae
mov
xor
pop
insl
adc
pop
inc
int3
fisttps
and
adc
xorb
scas
mov
jge
push
out
mov
pop
inc
gs
repz
adc
cli
int
fwait
cli
jge,pt
push
mov
adc
xchg
cmp
inc
rclb
pop
outsl
jne
icebp
cmp
push
popf
pop
push
sub
cmpsl
sahf
nop
rcll
cmp
lods
push
or
imull
pop
stc
imull
hlt
loop
add
stos
mov
bound
sub
cli
cwtl
addr16
add
or
addr16
popf
mov
and
adc
dec
jecxz
xor
adc
inc
pop
ficompl
cmp
sub
ja
imul
repnz
shll
inc
add
inc
jns
mov
daa
mov
lods
shll
outsl
pusha
pop
ljmp
popf
mov
arpl
mov
adc
ret
arpl
popa
push
cmp
mov
sarb
sahf
and
out
or
cli
and
in
pop
scas
dec
js
mov
pop
cwtl
mov
dec
mov
hlt
mov
in
repz
pop
mov
sbb
xorl
fisubrl
xlat
popa
sub
adc
roll
sbbb
pop
lret
iret
cs
ljmp
int3
decb
push
dec
test
and
xchg
mov
mov
mov
subb
pop
dec
jmp
leave
dec
push
mov
rcrl
sahf
es
inc
push
sub
mov
mov
push
in
mov
decl
adcb
mov
cwtl
xchg
pop
stc
enter
loope
push
pop
pushl
loop
jb
sbb
add
das
inc
jl
xor
mov
cmpl
outsb
js
push
xor
add
mov
fdivl
sbb
jo
pop
dec
mov
mov
sub
imul
nop
add
and
xchg
int
stos
xchg
cmp
fyl2xp1
lahf
mov
jge
pop
mov
push
push
stos
int
jne
cwtl
je
stos
sbb
ds
ds
or
sbb
adc
aam
and
imul
sti
xor
sti
sbb
lods
mov
lahf
pop
in
loopne
xchg
inc
movsb
mov
arpl
add
sti
es
jns
add
lods
pushf
sub
cmp
dec
daa
push
stos
data16
addb
push
call
adc
flds
jb
jno
jo
push
stos
insl
sub
fwait
test
xchg
cmp
flds
ljmp
jl
inc
testb
cld
mov
sub
lock
inc
xchg
xchg
in
push
cmpsl
sbb
pushf
aam
fisubs
push
mov
mov
mov
imul
inc
add
mov
je
loopne
movsb
pop
jo
xchg
inc
ret
leave
inc
xchg
pop
js
jg
ret
cltd
in
sahf
or
hlt
test
test
lds
sarl
imul
add
jnp
mov
popa
cs
xor
adc
std
and
or
js
ret
or
adc
inc
fidivrl
scas
out
stc
testl
mov
mov
jg
push
sti
push
scas
dec
lock
ja
outsb
lds
xchg
ficompl
xchg
push
filds
jae
fistps
sbb
cli
inc
cmc
mov
or
xor
fsubrs
lock
js
and
xor
jb
cli
push
in
out
adc
in
cli
leave
jae
aas
adc
gs
into
dec
inc
mov
scas
loopne
adc
adc
scas
push
cmp
test
cmpsl
inc
jno
mov
xchg
movsl
sbb
sahf
ja
bound
hlt
cmp
popa
repnz
mov
imul
insb
mov
mov
and
xor
subb
mov
hlt
iret
cmpsl
jl
sub
jb
or
shlb
mov
dec
pop
push
push
mov
inc
daa
mov
add
mov
clc
jbe
call
add
mov
add
cs
xchg
mov
fldl
mov
push
ja
sbb
movsl
inc
lahf
filds
adc
add
mov
mov
jae
push
inc
out
std
cmp
mov
add
mov
inc
ror
jo
or
add
jge
mov
xor
xchg
aam
pop
icebp
dec
xchg
jle
cli
inc
lock
out
xchg
sub
mov
ret
and
cmp
cwtl
je
mov
push
loop
mov
adc
and
icebp
subb
pop
or
push
cmp
add
push
fs
mov
test
push
test
dec
dec
fisttps
pop
dec
decb
add
sarl
fs
iret
fdivrl
xor
test
jbe
xchg
pcmpeqd
sbb
jecxz
cltd
test
sbb
dec
pop
inc
jae
rorb
mov
add
or
dec
pop
cs
mulb
mov
push
and
adc
inc
aas
gs
mov
jle
popf
adcb
aad
pop
pop
cmp
xabort
mov
mov
mov
fisubrl
xor
mov
mov
and
ret
inc
sti
mov
and
xchg
imul
shrl
mov
ljmp
cwtl
jl
pop
ljmp
xor
sbb
negb
jmp
mov
mov
xchg
frstpm(287
pop
jmp
test
stos
jo
add
mov
loop
stos
cs
pop
ja
add
jb
fsubrs
loop
stc
adc
insb
push
fdiv
into
sbb
ret
add
push
xor
test
pop
xor
cmp
aam
pushf
mul
xorb
jge
cltd
test
dec
jle
pop
rcl
insl
xchg
fdivp
aad
pop
addr16
enter
cmp
mov
adc
inc
jmp
sub
adc
jg
pop
cmc
inc
je
and
lcall
hlt
cmp
in
dec
sti
repnz
inc
xchg
push
notb
adc
std
nop
es
xchg
adc
pop
cmpsl
leave
mov
cli
inc
imul
inc
bound
into
cltd
xor
and
mov
xchg
inc
aaa
xchg
dec
xchg
mov
out
iret
ret
les
cmpsb
inc
sbb
cmpsl
mov
test
or
xchg
sbb
sti
mov
mov
stos
dec
inc
in
cs
pop
les
loopne
push
aam
scas
ficoms
mov
jg
and
call
loopne
daa
cltd
ljmp
sbb
fdiv
inc
cmpsl
pop
int
inc
enter
sbbl
cwtl
cmp
or
loopne
xchg
mov
add
add
and
push
sbb
dec
ret
sbb
sbb
jecxz
jle
repnz
fsubp
popa
or
lret
stos
dec
pop
test
in
insl
insb
stc
shlb
cmp
data16
mov
lds
xor
jb
rorb
aaa
xchg
xor
fidivl
inc
ljmp
js
mov
mov
mov
int
jo
dec
js
push
mov
jp
inc
or
pop
cmpsb
adc
je
fmul
imul
das
cltd
jns
sarl
nop
or
xchg
dec
adc
sbb
dec
pop
adc
inc
ds
and
cmp
xchg
in
inc
fidivs
push
and
push
rclb
jnp
shll
addl
push
out
mov
adc
lahf
xor
pop
lea
jg
ret
jb
push
ss
mov
in
inc
fimuls
ja
js
sbb
les
push
or
data16
or
pusha
aad
fsubrl
cmp
sub
cmp
sti
in
sub
adc
mov
arpl
repz
xchg
bound
std
rcrl
xchg
push
out
adc
repz
pop
cwtl
dec
popa
cmp
lods
inc
shrl
movsl
jle
pop
jnp
dec
in
mov
inc
push
xchg
or
jl
cltd
push
cs
lock
js
gs
pusha
mov
enter
mov
inc
iret
cmc
imul
mov
fcomps
out
out
and
adc
mov
or
sub
aad
and
mov
repz
mov
mov
cmp
mov
add
xchg
and
push
test
ret
pop
push
mov
pushf
dec
adc
push
fidivl
push
add
cmp
add
in
dec
push
insb
insb
les
jne
in
notb
bound
leave
mov
sbb
setge
pop
mov
ss
and
push
mov
xchg
jbe
iret
jmp
jo
out
cmp
push
adc
pop
lods
or
cmp
mov
inc
adc
mov
pop
jl
jmp
repz
or
sub
repz
sub
push
flds
pop
insb
xor
jns
loope
xor
std
push
pushf
inc
fucomip
inc
and
add
leave
or
xadd
inc
push
daa
xor
push
cmp
mov
push
lcall
jmp
inc
pushf
jae
dec
jns
fcoml
inc
push
and
scas
mov
fwait
mov
loope
fildll
in
in
push
fsubs
xor
add
test
fbld
bound
int
or
pop
ficoml
cs
gs
sbb
cmc
loopne,pt
cmp
das
xchg
mov
mov
hlt
insb
push
add
jbe
or
pop
xchg
mov
xchg
movsb
test
aas
cwtl
jne
xchg
loop
imul
popa
add
and
inc
test
mov
repz
fcmovb
icebp
push
jmp
notl
mov
insl
leave
pop
sub
xchg
and
cld
or
mov
sbb
in
fstpt
es
andl
and
leave
mov
in
xlat
fldl
mov
pop
ret
or
add
adc
repz
lcall
sti
xchg
and
xor
xor
push
mov
test
sbb
stc
sbb
mov
addr16
mov
inc
jns
jno
popf
inc
pusha
out
ret
inc
fwait
sub
inc
scas
cltd
scas
lcall
jne
dec
jo
xor
inc
or
dec
xchg
sbb
fs
cmp
loop
popa
sbb
movsb
mov
fs
popf
and
or
add
lods
into
inc
and
icebp
pop
imul
cmp
in
and
imul
inc
lods
repnz
xor
stc
xchg
daa
jne
jle
nop
scas
xchg
sub
mov
aaa
sub
scas
jno
fcoms
inc
pop
jae
clc
jne
jg
repnz
or
aam
xchg
or
jg
in
stc
and
les
pop
sti
stc
iret
pop
xchg
gs
fwait
bound
iret
inc
lods
cmpl
adc
into
ds
inc
xchg
mov
aas
sarb
mov
pop
fstp
cmpsl
fstpt
daa
pop
imul
xor
shrl
mov
push
mov
cmp
ficoml
sub
push
cld
jp
imul
outsb
cmp
xor
jmp
insl
adc
jg
cmp
and
mov
pop
dec
mov
ss
pop
arpl
jl
imul
and
ljmp
scas
pop
lock
pushf
jne
sub
pop
inc
out
es
lret
ret
fcoml
sbb
inc
cwtl
inc
in
adc
mov
push
mov
inc
mov
nop
mov
xchg
cmc
ja
shr
mov
sub
cmp
shll
jle
out
subl
xor
mov
mov
xor
mov
je
ret
mov
movsl
lds
dec
in
push
lret
jge
dec
sbb
dec
inc
inc
je
loopne
lahf
mov
sti
add
jle
decl
push
sbb
in
lcall
mov
add
sbb
adc
lods
xorb
xchg
imul
cmc
mov
sahf
popa
sub
mov
add
cmpsb
push
imulb
repnz
cmpsb
mov
sub
add
mov
mov
push
or
repz
scas
and
add
push
jle
fs
mov
insl
cmp
dec
xor
push
cmp
cld
mov
cld
add
cmc
stos
shlb
insl
xor
or
xor
inc
xchg
jg
adc
mov
mov
ja
cld
or
sbb
shlb
jle
and
lea
mov
xor
push
outsl
fadds
or
cmp
pusha
je
test
cmp
sbb
push
pop
push
dec
int3
inc
cld
pop
sbb
adc
push
outsb
rorb
mov
das
dec
cmp
pushf
arpl
push
das
inc
out
in
push
adcl
sbb
jl
jbe
xor
jl
std
mov
in
add
test
je
mov
sbb
scas
into
adc
adc
clc
cmc
mov
scas
popf
add
mov
mov
ss
imul
xchg
push
pop
jno
ret
sbb
ja
rorb
and
adc
mov
in
mov
adc
sarl
pop
sub
inc
inc
cmp
les
fiadds
in
lcall
push
test
ret
jecxz
dec
loopne
or
sub
add
idivb
jno
push
roll
jbe
adc
outsb
into
lods
xor
inc
dec
xchg
loopne
mov
jmp
mov
lock
push
addr16
sub
inc
movsb
frstor
jl
mov
adc
sub
scas
dec
pop
movsb
add
je
jmp
jp
fistpll
mov
adc
mov
lcall
xor
and
sti
add
in
dec
pop
mov
sahf
dec
lret
add
xchg
jne
shlb
pop
pop
movsl
xchg
cmp
adc
cmpsb
cmp
xlat
in
mov
inc
hlt
dec
cs
repnz
and
sub
mov
inc
sbb
mov
inc
adc
lret
loope
mov
sub
sub
push
cmpsl
mov
test
lods
sbb
test
add
and
xorb
fdiv
dec
out
adc
in
test
cmp
scas
dec
dec
add
lods
outsb
pop
out
jno
pop
xchg
or
jae
movsb
pop
out
mov
pop
and
adc
or
xchg
jg
nop
dec
jge
jne
push
inc
jae
or
push
sti
sub
cli
xor
and
jecxz
lret
int
xchg
adc
dec
or
rolb
daa
adc
add
and
cmp
mov
dec
push
xorps
mov
subb
inc
adc
ds
dec
and
jo
repnz
int3
sbb
sub
sbb
iret
insl
mov
fmuls
stc
rcrl
mov
lcall
jnp
outsl
stos
outsl
or
or
sarl
jecxz
repnz
outsb
je
or
sbb
sub
fldenv
push
shl
pop
cs
and
or
out
lahf
add
xchg
push
push
jg
imul
jmp
xor
add
sbb
arpl
scas
call
popf
loope
pusha
mov
je
subl
dec
ds
and
dec
add
xchg
mov
test
mov
xorb
aas
mov
lcall
cmpsl
rorb
or
sbb
xchg
pop
adc
adcl
test
sahf
cli
mov
pop
clc
je
dec
inc
sbb
pop
pusha
cmpsb
out
iret
fistpll
push
push
jo
mov
mov
movsb
ja
pop
mov
fwait
add
adc
outsb
cmp
ss
dec
arpl
cli
nop
mov
jbe
shl
pop
mov
sub
test
sub
adc
ret
dec
ljmp
jg
add
pop
lcall
ds
pop
xchg
push
sbb
jp
idivb
pop
and
popa
adc
mov
in
stos
cmp
push
aaa
fldcw
das
jp
cs
xor
mov
jp
xchg
mov
pushf
jns
scas
stc
push
in
pop
adc
sub
mov
aam
sti
xor
push
push
out
jae
jne
add
mov
fisubl
mov
pop
xchg
lea
dec
push
cmp
mov
mov
push
fwait
jo
xchg
push
shlb
push
push
out
dec
pushf
sbb
fstps
scas
scas
and
pop
sub
pop
pushf
aaa
fcomps
sbb
jnp
lcall
sbb
sbb
fs
push
jmp
inc
dec
dec
lcall
xchg
mov
inc
xchg
jb
or
jmp
dec
mov
lods
sub
jbe
push
cmp
pop
sbb
fnsave
sub
jne
push
lret
das
xlat
aad
dec
sbb
mov
add
push
arpl
xchg
les
adc
cli
cwtl
cmp
sub
cmp
imul
adc
inc
adc
jb
fbstp
push
sub
add
and
or
daa
push
lret
shr
pushf
xchg
shlb
add
dec
into
mov
push
sti
cltd
inc
ja
or
cmp
jp
push
and
icebp
cmpsb
rol
jmp
sub
sub
aam
fimull
cmp
fisttps
and
stos
fiadds
pop
outsl
sbb
divb
jg
stos
and
mov
and
or
out
mov
loope
cltd
sbb
daa
aam
dec
rcl
mov
jle
mov
and
xchg
or
sbb
xor
test
in
dec
hlt
fdivl
js
enter
cmp
lea
daa
in
adc
xor
adc
mov
arpl
jg
aas
mov
aad
xor
inc
or
pop
int3
pusha
xor
jge
cli
mov
cltd
pop
insl
les
sbb
imul
sbb
nop
js
arpl
push
xchg
rorb
imul
lret
cmp
mulb
adc
inc
mov
push
leave
push
sbb
in
fidivrl
xchg
leave
xor
or
popa
push
sbb
lods
push
into
lret
push
xchg
arpl
loopne
rclb
cmp
sahf
test
aas
jmp
and
xchg
fldcw
cmp
lcall
movsl
pop
sub
test
jb
idivl
mov
xchg
jbe
cs
dec
dec
dec
adc
mov
push
inc
xor
inc
cmp
pop
jp
xor
xor
test
fwait
dec
ss
add
xchg
xchg
jno
stos
lock
sbb
popf
xor
and
daa
xor
and
sub
cmp
divpd
repnz
or
popf
repnz
pop
imul
sbb
ror
js
mov
pop
jecxz
stos
pop
mov
lcall
es
pushf
mov
mov
loopne
jg
fs
jns
mov
jecxz
shrb
lret
divb
mov
test
inc
jmp
add
out
xchg
lret
sub
nop
aam
or
mov
daa
jp
in
sahf
mov
sub
mov
push
adc
leave
lret
or
pop
xor
loopne
sbb
xchg
test
in
scas
ljmp
sbb
xchg
cmpsl
push
adc
popa
es
xchg
popa
hlt
das
xor
mov
mov
insl
test
sub
jno
pop
insb
pushf
out
cmpsl
dec
pop
js
adc
pop
aam
inc
push
jae
xchg
outsl
inc
fiaddl
scas
ficompl
subl
and
aam
sub
push
or
rclb
daa
js
or
jl
or
cmc
lahf
xor
jb
js
jg
rcrl
gs
loopne
xchg
mov
mov
add
outsl
push
int
jecxz
add
bound
into
cmp
icebp
fdivrs
out
cld
and
icebp
pop
xor
jns
push
pop
std
xchg
and
ss
cld
stc
mov
jne
lock
xor
add
sub
cmp
loope
inc
cmovne
xchg
push
dec
xor
fs
mov
cmp
push
shl
xchg
lahf
out
mov
cltd
mov
xor
in
cmpsb
sbb
jmp
add
jae
dec
fisubs
inc
icebp
jne
adc
jl
out
or
hlt
je
enter
outsl
jb
sub
in
push
fwait
roll
adc
movsl
inc
and
xor
push
cmp
outsl
in
inc
scas
je
pusha
xchg
cltd
popf
inc
imul
jo
jno
lods
xchg
xchg
push
movsb
shrb
nop
mov
dec
push
adc
sub
ja
push
stos
ret
cmc
adc
aam
test
xchg
pop
sahf
lret
push
xchg
les
mov
int3
pop
inc
das
xchg
push
or
shr
ret
pop
fdivl
loopne
inc
inc
cmp
loop
fistps
rclb
into
mov
push
mov
jbe
enter
mov
test
ljmp
std
fidivrs
cmp
rolb
add
cmp
repz
fsubr
mov
out
pop
ret
outsl
cwtl
cltd
mov
pop
mov
sbb
cmp
cmpsl
hlt
inc
add
mov
jnp
xor
jle
cmpb
adc
repnz
cmp
dec
xchg
add
subb
lock
jg
push
mov
jp
dec
jmp
adc
adc
xchg
cli
aad
pushf
lcall
popf
dec
xchg
lods
xor
ss
std
mov
xor
mov
lahf
lods
fwait
out
jb
inc
mov
jb
imul
mov
dec
das
push
jae
and
lds
xor
int3
movsb
insl
mov
sbb
rcl
sbb
lea
scas
mov
cli
mov
mov
movsl
pusha
scas
lock
lock
add
and
orl
mov
and
mov
fistpl
std
adc
les
mov
les
movsb
leave
stos
sub
xor
xlat
dec
stos
sarb
mov
mov
pop
and
mov
in
ss
mov
lds
dec
pop
dec
xor
push
add
and
repnz
inc
dec
int3
sahf
sbb
mov
sar
inc
xor
dec
xor
jmp
mov
dec
movsl
test
leave
push
mov
test
lret
stc
xchg
dec
hlt
std
leave
mov
jb
fnsave
jp
scas
das
cwtl
sbbb
mov
stos
mov
out
cli
inc
xchg
clc
cmp
mov
stc
aaa
adc
pop
push
xor
outsl
rcrb
jne
movsb
sub
fcmovnbe
sbb
dec
add
adc
jae
dec
scas
lret
push
das
cmc
xor
in
aad
jno
mov
dec
mov
xlat
cld
imul
mov
nop
divb
dec
inc
enter
cmp
cwtl
ret
xchg
rcl
and
andl
mov
sar
pop
sbb
insb
enter
inc
incl
in
aad
notb
insb
mov
in
aaa
ds
aam
or
out
sbb
cmp
and
pop
fst
add
std
dec
cmpsb
iret
inc
fsts
adc
pop
aam
add
faddl
popa
mov
push
mov
push
sbbb
pop
sbb
scas
out
and
mov
hlt
aas
pop
cmp
add
cld
jno
add
pop
or
add
push
cltd
dec
lock
cli
repz
fisubrs
movsl
sbb
jnp
sub
insb
sbb
call
cwtl
push
data16
mov
aad
ss
jp
inc
pop
dec
hlt
test
cmpsl
jae
adc
sbb
hlt
sbbl
mov
loope
jne
cltd
push
xchg
or
loope
and
add
push
dec
xor
outsl
jnp
test
mov
pop
fisttpll
test
adc
mov
divb
mov
gs
stc
jae
scas
sahf
add
daa
mov
mov
fidivl
or
jne
jle
lock
imul
and
lcall
cmp
xlat
mov
sbb
das
push
xor
mov
lea
push
sbb
fisubrs
mov
pop
pop
pop
stc
int3
sbb
cli
inc
arpl
and
sbb
xchg
test
xchg
sub
addr16
fcmovu
and
popf
inc
popa
fistpll
sbb
sbb
aaa
sarb
inc
lods
add
inc
test
lret
adc
dec
inc
add
xor
dec
xchg
mov
cmpsb
aad
cs
les
ja
dec
les
push
or
pop
cmp
dec
arpl
js
outsl
test
adc
and
insb
aaa
inc
shrl
xchg
icebp
xchg
xchg
sti
imul
lock
imul
jmp
and
xor
sub
xchg
aas
sub
out
inc
hlt
and
insb
outsl
movsb
push
mov
shll
aaa
shrl
mov
push
mov
and
fsubl
in
push
loop
rorb
push
dec
xor
push
adc
ret
adc
sub
jg
idivb
mov
scas
jge
data16
sti
sub
das
fisttpl
in
cmp
mov
dec
add
sbb
in
int3
inc
cmp
or
adc
out
cmc
push
xchg
stos
pop
push
ret
test
mov
dec
mov
or
shrb
xchg
movsl
adc
add
sub
call
hlt
push
adc
fwait
fs
inc
std
and
pop
push
jnp
gs
sub
or
push
sub
push
in
int3
push
jb
iret
iret
cmp
xor
sub
push
aad
test
in
cld
ss
aaa
lock
mov
lcall
sub
mov
mov
jbe
and
xchg
jmp
fadd
and
lret
jecxz
xor
jl
xor
popf
ljmp
arpl
test
jg
mov
pop
push
dec
fwait
dec
jns
ljmp
mov
mov
mov
out
rcl
mov
push
jge
jle
enter
mov
xchg
jne
add
mov
mov
push
es
dec
dec
sti
addr16
mov
nop
mov
nop
clc
jl
push
and
loopne
bound
into
inc
dec
rcrb
dec
sar
hlt
aad
ljmp
xor
jo
mov
dec
dec
inc
popf
xchg
sbb
loopne
adc
ret
and
nop
ret
leave
imul
pop
fidivrl
push
sarl
int3
das
es
push
mov
push
mov
sbb
pushf
inc
push
xchg
adc
shlb
xor
test
incl
push
mov
fistpll
mov
adc
mov
xor
outsl
in
mull
rolb
test
mov
adc
add
inc
push
or
ss
sub
fistl
dec
and
and
ucomiss
pop
sbb
mov
stos
shll
iret
dec
bound
ds
data16
fucom
ljmp
jmp
xor
imul
xor
fsubrp
or
or
mov
pop
insl
test
loopne
or
dec
stos
daa
or
add
xchg
sbb
fsub
inc
mov
bound
push
xor
fimull
xchg
inc
xlat
push
and
mov
inc
sub
inc
jecxz
pusha
mov
imul
mov
cmpsl
xor
arpl
mov
icebp
dec
gs
repz
cs
subb
test
mov
outsl
mov
xor
mov
jl
inc
sub
push
or
and
inc
negb
rol
xor
push
xchg
xor
scas
mov
movsl
lds
fs
dec
lea
cmp
sbb
mov
sub
jle
cmpsb
call
mov
mov
pop
inc
sub
jne
xor
rcl
inc
jl
test
in
enter
cmp
xchg
and
outsb
inc
or
add
xor
nop
pusha
pop
inc
mov
cmp
enter
out
cmp
scas
push
jp
inc
lds
cmp
fisttpl
out
addr16
jne
mov
cmp
je
pop
scas
cwtl
cmp
push
inc
out
sar
jns
xchg
xchg
aam
std
loope
push
sub
hlt
mov
fidivs
and
ja
mov
hlt
adc
pop
push
ret
cmp
ror
fs
fadds
pop
jnp
adc
test
adc
mov
pop
andb
sbb
push
xchg
fxch
inc
mov
xchg
nop
jnp
scas
or
push
cmpsl
cmpsl
add
ret
mov
rcrl
in
pop
push
je
ret
leave
bound
gs
cli
into
xor
clc
xchg
pop
dec
xchg
fwait
push
mov
aam
mov
jle
shr
cmp
xchg
push
ljmp
popf
lret
xchg
aad
sar
dec
xchg
xchg
test
jo
adc
add
cld
adc
mov
scas
adc
fldenv
rorl
lahf
dec
hlt
mov
jnp
shrl
int3
ja
sub
pop
xor
push
xor
ss
gs
push
push
sbb
or
jbe
mov
jae
cmp
push
scas
add
cltd
dec
push
push
inc
lods
inc
xorl
add
int
xchg
or
sub
sbb
pop
xchg
jo
fwait
adc
sti
jnp
dec
das
mov
add
mov
add
sub
jmp
xchg
and
dec
lcall
pop
fdivs
mov
add
and
mov
sbb
inc
ja
pop
ret
mov
shl
and
cmp
push
les
or
mov
cwtl
cmp
mov
jno
or
adc
shlb
stc
jo
out
sub
xchg
insb
or
inc
push
ret
and
xor
or
std
stc
cld
aad
and
pop
push
inc
shl
mov
repnz
scas
add
jge
std
or
cltd
cmpsl
mov
xchg
add
inc
jp
adc
rorb
shr
cli
lods
pop
enter
lcall
fisttps
in
ss
into
mov
mulb
sub
mov
jmp
gs
out
pop
fbstp
cltd
pusha
xor
test
sbb
adc
jmp
push
int
jl
jecxz
std
cwtl
sbb
inc
ret
nop
ret
and
adc
sbb
stos
aam
adc
in
add
jae
repz
push
push
sbb
cmc
and
les
cmpsl
jg
push
test
rcrl
pop
push
js
mov
enter
or
inc
adc
test
jae
rcr
dec
sbb
xchg
shlb
xlat
push
or
push
sbbb
adc
imul
rorb
ret
pop
ret
inc
out
loope
mov
xchg
stos
ficompl
iret
pop
lods
es
dec
in
dec
jne
xor
addr16
adc
inc
jnp
pop
mov
fstl
xor
test
add
inc
push
push
test
sahf
lahf
mov
imul
pop
dec
sbb
lahf
into
ljmp
icebp
into
and
or
faddl
mov
sbb
mov
inc
xchg
stos
push
pop
dec
stc
loop
in
insl
cmp
sub
scas
dec
loopne
test
pop
cs
sar
fbld
sub
lahf
cli
fs
rcrl
aaa
push
sub
pop
xor
xchg
lret
cmp
imul
adc
dec
clc
icebp
mov
ror
out
jnp
mov
outsb
mov
and
cmc
in
lea
xor
lock
xor
loope
shrb
movl
outsb
insl
pop
or
xlat
movsl
sub
xchg
rorl
and
sbb
cmc
loopne
arpl
dec
enter
dec
lds
mov
test
adc
cmpsl
adc
das
out
sbb
sbb
popa
jbe
lcall
xchg
mov
ret
and
das
std
cld
inc
add
mov
bound
cmp
add
cld
fwait
push
jo
xor
adc
or
mov
rcl
add
in
inc
out
xchg
leave
into
cmpsb
clc
jge
mov
mov
sbb
fistpll
xor
push
add
jp
iret
repnz
mov
pop
cmp
lret
mov
xorb
dec
mov
sar
add
repnz
push
ja
into
das
pop
mov
and
pop
or
fs
or
hlt
inc
mov
jnp
int3
or
pop
imul
lods
gs
push
jge
push
psrld
sub
or
jne
lcall
stc
shlb
mov
sub
aaa
fwait
int3
repnz
dec
aas
adc
cmp
movsl
outsl
fwait
sbb
add
mov
enter
xlat
dec
xor
or
sti
mov
mull
mov
add
xor
stc
jnp
or
mov
push
xorl
dec
int
jmp
mov
dec
fildll
das
mov
or
and
dec
popa
repz
and
cwtl
fucomp
cltd
jbe
mov
fnstcw
das
or
lret
adc
std
xlat
push
and
mov
jae
lcall
or
aas
repnz
imul
inc
cltd
mov
repz
jnp
outsl
add
xor
add
jl,pn
ret
nop
sbb
mov
frstor
mov
cmp
movsb
std
jmp
push
loope
add
rcrl
data16
dec
xchg
inc
popa
mov
sub
sub
xor
jle
leave
test
cmp
cmp
push
mov
cmp
in
xor
repz
or
mov
test
xchg
pushf
sbb
xchg
lret
xchg
sub
fldt
outsb
xchg
push
ja
add
repz
inc
cmpsb
jnp
sbb
and
mov
and
leave
sbb
inc
pop
inc
ret
inc
cwtl
idivl
call
inc
pop
imul
jae
xor
adc
and
loope
adc
inc
outsb
cld
test
xchg
push
test
dec
mov
pop
dec
mov
fsubrl
jg
mov
push
pop
mov
mov
and
lock
cmp
sbb
aas
mov
and
adc
mov
decl
cmp
jno
icebp
movsb
cmova
lret
pop
sub
es
push
test
movsl
push
mov
pop
and
pusha
pop
int3
xchg
popf
push
insb
sarl
es
jp
mov
xchg
fdivr
mov
popa
push
push
and
push
add
adc
movsl
adc
clc
scas
or
pushf
adc
sbb
test
dec
stos
lock
ret
cltd
std
push
int3
push
mov
mov
ret
out
sbb
mov
ror
sbb
mov
jne
dec
repz
sub
sahf
call
jle
scas
sbb
lods
jno
sbb
push
cli
cmp
fs
das
les
cmp
mov
mov
xlat
inc
rcrl
ljmp
adc
mov
push
out
add
int3
jmp
mov
sarl
jnp
sub
or
inc
mov
rorb
dec
sub
leave
mov
push
cmp
es
and
loopne
pop
loopne
mov
sub
jl
mov
xor
out
gs
sub
adc
sbbb
stc
out
ret
and
mov
clc
xor
js
push
cltd
push
std
add
movsl
jecxz
add
adc
mov
lods
aas
sbb
mov
dec
jge
out
pushf
je
inc
or
mov
mov
pop
stc
xchg
jnp
ljmp
outsb
pop
jns
call
insl
xchg
sahf
imul
je
inc
add
cmp
aad
fwait
int3
xchg
sbb
and
fcoml
dec
stos
jecxz
jl
fstpt
arpl
mov
xor
cmp
add
jmp
inc
mov
pop
dec
push
insl
pushf
rcrb
cmp
mov
out
mov
cld
push
jg
js
sbb
xchg
jmp
and
push
mov
jecxz
fs
mov
ret
dec
mov
and
or
pop
out
add
push
int3
pushf
inc
std
xchg
mov
pop
dec
xchg
xchg
inc
lds
sub
sahf
cmp
imul
in
dec
mov
push
and
js
push
insl
mov
xchg
dec
ret
jmp
bound
les
pop
mov
jns
loopne
stos
ret
add
stos
out
inc
xchg
fnstenv
push
add
dec
adc
inc
dec
inc
sbb
pop
testl
jp
jl
dec
inc
xlat
repz
loope
es
dec
push
mov
and
fldt
jge
dec
add
cmp
jbe
movsb
cmc
out
sbb
outsb
mov
cs
pushf
cwtl
sub
daa
std
hlt
pop
sub
dec
lock
push
mov
push
into
in
cmp
pop
scas
fcomps
rcr
push
adc
dec
dec
das
xchg
xchg
icebp
cltd
xlat
fwait
xlat
pop
inc
cs
es
adc
lcall
jge
cmpsb
out
adc
xor
mov
fistpll
xlat
repz
pop
mov
test
mov
push
arpl
mov
in
test
in
cltd
sub
ret
jne
jne
add
ja
mov
mov
sub
xor
pop
cmp
mov
jmp
call
cmp
cmpsl
push
sub
mov
push
mov
adc
cmp
pop
bound
cmp
rcll
and
out
repz
inc
js
cmc
fdivrl
mov
or
sub
lock
push
lcall
inc
imul
test
cmp
xor
dec
mov
daa
out
cmp
test
sbb
out
mov
sar
arpl
arpl
mov
push
pop
mov
int3
loope
sbb
mov
mov
pop
lds
dec
loop
mov
rorb
loope
fistpl
cli
pop
xchg
dec
mov
pop
mov
lds
sub
inc
cmp
add
mov
stc
push
mov
loope
jmp
cmp
fwait
mov
mov
fwait
cmc
inc
aam
mov
sbb
popf
inc
arpl
loope
daa
jecxz
jne
xor
repz
into
push
in
cs
inc
and
push
fwait
mov
mov
inc
jl
data16
inc
inc
cld
js
imul
mov
jmp
jnp
mov
and
mov
call
jg
add
lea
insb
cs
fildll
jmp
jbe
enter
ja
push
add
jb
cs
das
jmp
sbb
dec
pop
push
mov
lret
push
cmp
jne
icebp
xchg
xchg
push
cli
or
mov
push
or
pop
inc
adc
mov
adc
cmp
push
cmp
insb
ficoms
inc
popf
push
pop
lea
shll
lret
call
pop
call
push
pop
xchg
outsl
ja
cwtl
lea
fdivrl
jmp
fcoml
xlat
pop
xlat
sti
and
pop
cmp
push
cltd
mov
sub
pop
cli
push
negl
push
scas
mov
push
mov
add
cld
int
popf
or
paddq
cmpsb
clc
lret
mov
mov
rcrb
mov
je
aaa
cmp
xor
nop
arpl
mov
xchg
sti
or
cmpsb
xchg
push
xorl
cld
inc
push
pushf
and
inc
test
xchg
loope
pop
cmc
imul
push
lret
popl
mov
pop
test
out
fistpll
push
fistl
mov
dec
jo
clc
xchg
adc
test
or
jge,pt
test
mov
push
mov
jb
push
aad
jg
sbb
mov
or
imul
dec
aam
cmp
cs
inc
push
fisubrs
sahf
out
xchg
xchg
mov
test
pop
add
pop
data16
gs
push
shll
mov
imul
mov
and
adc
mov
adc
jg
rcrl
das
shll
mov
xchg
adcl
or
mov
jno
jg
sub
shl
scas
std
pop
pop
imul
mov
pop
and
xor
clc
jne
add
xor
cmp
in
push
test
cmp
jbe
sbbl
dec
jmp
negb
xchg
fdivr
movsb
shl
and
or
fisttpl
mov
ret
sahf
imul
and
pusha
pop
jbe
jns
dec
imul
shlb
mov
mov
mov
out
push
fisttpll
mov
fadds
push
inc
aam
xchg
push
sbb
sbb
inc
jl
fisubrs
mov
inc
xlat
lods
push
nop
pop
rcll
inc
push
aaa
mov
je
ret
pop
xchg
xchg
inc
jg
and
int3
jno
pop
out
jo
mov
mov
sbb
ljmp
loope
mov
lea
mov
jno
dec
xchg
ret
jle
repz
add
adc
sub
push
add
mov
subb
sub
imul
jbe
repnz
je
in
or
mulb
pop
push
test
icebp
mov
cmc
jg
aaa
sbb
or
pop
dec
push
sbb
mov
xchg
add
lret
cmc
sub
jge
dec
jno
stc
fs
cmp
leave
sub
dec
fidivrs
hlt
out
dec
inc
int
ljmp
stc
push
shll
ljmp
lds
nop
lcall
cwtl
mov
test
out
stos
scas
jnp
shlb
stos
in
push
or
movsb
jmp
data16
mov
imul
lods
jns
cmpsb
bound
lret
psrld
mov
popf
push
cmpsb
dec
cltd
pop
or
inc
lcall
arpl
adc
jl
cmp
pushf
stos
cmp
std
btr
mov
test
pusha
fstpl
xchg
push
scas
cltd
xor
jmp
cltd
jmp
mov
pop
inc
jecxz
insb
xor
sub
insb
scas
adc
jmp
addr16
adc
fnstsw
cmp
xor
lret
cmp
imul
nop
xchg
stos
xchg
sbbl
or
mov
add
jg
cltd
addb
and
rorl
pop
shr
inc
and
cmp
mov
jge
into
mov
data16
fstps
addb
testl
push
mov
es
xchg
pop
insb
jmp
cmp
mov
ja
xchg
mov
jo
push
push
push
jecxz
xor
cmp
push
in
cwtl
xchg
gs
cmpsb
adc
jl
iret
cmp
shrb
sbb
int
adc
mov
test
push
rcll
cmp
dec
mov
jno
gs
pop
out
test
negb
pop
stc
loop
xchg
fcomi
nop
lret
xor
scas
cwtl
ds
mov
push
insl
jmp
iret
imul
sub
inc
shll
cmp
and
inc
mov
inc
fcomp
xor
dec
scas
xchg
jbe
lcall
daa
push
adcb
cltd
call
inc
jp
jno
das
daa
test
or
pop
shlb
iret
imulb
mov
cmp
in
pop
pop
std
sub
cmp
bound
fistl
shl
dec
jmp
mov
je
int3
data16
cmpsb
xor
or
lret
leave
stc
mov
cltd
inc
inc
loop
push
mov
or
sub
mov
xchg
inc
adc
orl
push
pop
inc
and
pop
popa
in
jl
mov
dec
or
negl
out
pushf
dec
cmpsl
lock
jecxz
dec
or
xor
jp
sub
mov
mov
fdivrp
push
xchg
mov
sti
xor
cmp
jbe
cltd
push
xor
xor
ss
popf
sbb
shrd
mov
inc
js
add
and
and
dec
jg
pop
cltd
cwtl
mov
cwtl
lret
xchg
in
rclb
add
dec
insl
push
dec
fimuls
inc
mov
adc
adc
inc
lcall
pop
ljmp
jg
pop
push
push
xchg
sub
insb
sub
inc
iret
repz
fcoms
ret
sbbb
pop
mov
iret
pop
je
mov
in
int3
scas
lcall
add
movsb
ret
rol
pop
fs
scas
andb
or
lahf
dec
inc
inc
cs
ja
jne
ret
cld
pop
es
push
pop
shll
push
loopne
mov
in
mov
jl
lret
jg
nop
rclb
sbb
and
ja
aas
jp
test
enter
orl
aaa
cmpb
xchg
sbb
dec
mov
cltd
mov
sbb
jp
adc
clc
inc
fisttpl
inc
jo
loop
test
mov
daa
sbb
inc
jecxz
imul
or
test
lods
mov
bnd
push
lods
fisttps
movaps
xor
adc
mov
inc
mov
in
mov
add
stos
inc
sub
push
mov
mov
mov
lock
ffreep
fsubr
fisubrs
repz
jmp
mov
filds
mov
xor
jbe
es
leave
cmpsl
leave
dec
aad
and
mov
inc
inc
or
sbb
mov
sub
add
pop
or
imul
shr
sub
jae
popl
cmp
xor
ret
out
rcrl
mov
test
jmp
jge
push
inc
or
jle
shl
xor
sbb
int3
mov
fstpl
scas
adc
pop
les
adc
sti
sbb
call
xchg
add
dec
iret
shl
repnz
jns
neg
dec
xchg
subl
xchg
out
mov
dec
dec
icebp
cs
in
lock
outsl
push
xchg
fstps
ret
test
test
xor
scas
enter
cmp
cmp
int
icebp
xor
cmp
push
or
jne
push
loopne
int
mov
mov
icebp
mov
aas
mov
movsb
dec
scas
andb
sub
inc
xlat
and
les
subl
es
pop
mov
aaa
jne
into
xchg
mov
cmp
dec
test
dec
mov
mov
ror
mov
push
in
scas
rcrl
in
xchg
mov
cmp
xchg
sahf
cmp
sub
cmc
or
cmc
push
sub
aaa
pop
test
jge
xchg
es
cmpsl
mov
fildll
shll
pop
mov
cmc
int3
out
push
scas
sub
mov
mov
cmp
mov
cmpl
dec
mov
mov
xchg
jae
fstpt
test
jmp
mov
dec
mov
out
pushf
sub
lahf
push
mov
dec
into
insb
lods
sub
pop
inc
hlt
in
lock
jnp
fidivrs
jmp
popf
mov
imul
aad
mov
fimull
lock
cmp
xor
dec
cld
push
leave
xchg
dec
cmp
shl
add
jecxz
mov
sub
jmp
lock
inc
insl
mov
jle
pusha
outsb
sub
add
fidivrs
notl
out
faddp
sbb
pushf
cmpsb
jmp
sbb
pop
cmp
lea
and
adc
dec
dec
and
mov
loopne
ljmp
sub
add
inc
mov
fsubr
jae
cmp
aam
mov
pop
pop
pop
repz
pushf
jmp
pop
out
icebp
hlt
pop
jp
jmp
or
mov
addr16
int
jp
push
repz
insb
mov
jns
repnz
fidivrl
and
or
in
nop
cmp
mov
cmpsl
or
push
sbb
xor
sahf
mov
enter
out
popa
adc
test
push
pop
push
pop
cmp
cmpl
into
mov
push
jle
mov
adc
repnz
lret
push
cmp
xor
not
mov
idiv
dec
pop
ret
pop
and
mov
sub
outsb
push
inc
pop
pop
dec
push
inc
orb
xor
jecxz
xor
ret
pop
add
xchg
icebp
lds
push
add
mov
mov
icebp
cmc
outsl
lss
sub
gs
add
pop
xor
popf
imul
insl
mov
mov
inc
push
ret
or
arpl
jne
cltd
aad
and
xchg
and
rol
add
cltd
fidivrl
mov
jle
push
std
jecxz
adc
cwtl
dec
jge
add
lods
sub
xchg
sbb
add
mov
sbbl
xor
push
sbb
cmp
sbbl
xchg
pop
ret
inc
inc
pop
loop
cmpsb
movsb
adc
and
aas
mov
test
adc
sarl
push
lods
in
push
test
xchg
loope
insl
or
xlat
loopne
mov
rolb
sar
mov
adcb
sub
repz
lcall
fnstsw
ja
scas
and
pop
cmpsb
jne
lret
enter
xchg
lret
int3
movsl
and
mov
mov
push
and
cltd
mov
shl
mov
jno
or
mov
mov
add
lahf
inc
sub
enter
push
icebp
in
inc
adc
xor
out
lods
sbb
xchg
sahf
push
mov
adc
sub
pop
xor
jmp
or
lea
ljmp
and
imul
mov
add
pop
bound
addr16
icebp
or
loopne
stos
xchg
mov
cltd
mov
stos
sub
lods
std
fnstcw
shl
les
and
inc
fcomps
pop
cltd
inc
lods
movsl
imul
or
daa
jmp
push
adc
and
pop
or
mov
cmpsb
inc
push
and
call
loopne
inc
int3
mov
add
jg
jno
xchg
std
and
push
xor
add
sbb
jmp
jo
cmp
rclb
call
adc
insl
add
dec
jmp
cltd
rol
enter
push
push
loopne
frstor
test
inc
jmp
push
addb
fsts
sti
jne
and
push
mov
adc
dec
popf
test
lods
jmp
nop
imul
cmpsb
sub
inc
xchg
arpl
xor
sub
leave
hlt
dec
jg
and
jl
sbb
add
js
aad
sub
push
addr16
sbb
popf
pop
pushf
adc
inc
dec
mov
mov
stos
fisttps
jmp
mov
test
xor
jnp
leave
loopne
lret
pop
xor
sbbl
and
dec
inc
xor
scas
repnz
mov
inc
cmp
mov
icebp
xchg
sbb
cltd
cs
sub
shlb
in
jnp
daa
push
mov
xor
push
cltd
mov
inc
stc
cli
pop
xor
lock
rcl
test
cwtl
adc
lret
and
hlt
stos
mov
sbbl
std
nop
jb
aas
pop
fidivrl
mov
inc
add
mov
les
or
fwait
xor
jl
sti
sbb
lods
jo
mull
and
jl
and
imul
pop
nop
ja
into
ss
imul
movntps
xchg
push
and
leave
inc
arpl
xor
aad
or
gs
xchg
xor
adc
test
in
mov
push
andl
xchg
ror
mov
cs
jns
jecxz
pop
dec
sub
cltd
mov
and
das
dec
adc
mov
push
test
loop
loope
adc
sub
roll
daa
mov
loopne
jg
dec
ret
inc
push
bound
mov
xor
mov
movsl
scas
jmp
push
or
jns
clc
xor
or
or
inc
sub
inc
fists
clc
ret
cmc
addr16
inc
cmp
sub
adc
xchg
in
cmp
fld
pop
mov
xor
xchg
scas
movsl
and
cmp
mov
mov
aad
mov
dec
push
insb
xchg
ja
daa
mov
dec
xor
push
sbb
inc
or
or
gs
jle
add
lahf
push
push
dec
cmc
mov
pushf
loopne
mov
sub
sbb
aas
pop
jne
call
scas
mov
pop
and
addr16
push
mov
mov
fisubl
int3
fdivr
sbb
lret
ja
shrl
xchg
fldcw
in
ja
daa
mov
adc
popf
pop
adc
inc
mov
mov
sub
and
pop
repnz
enter
fstpl
and
popa
push
into
and
pop
sbb
pop
jge
lahf
mov
mov
pop
nop
jbe
aas
pop
cmp
cmp
ret
xor
cmp
ret
push
rcr
xor
hlt
fwait
cmc
mov
or
xor
int
push
arpl
jmp
mov
movl
outsl
or
mov
stos
ret
pop
dec
mov
out
hlt
adc
loopne
lods
out
pop
fs
inc
aam
push
mov
mov
pop
ja
xchg
add
push
jb
fs
outsb
lcall
ret
mov
vmovdqu
adc
add
sbb
aas
ficoms
cmp
dec
ret
imul
stos
adc
adc
mov
ss
fcomip
dec
std
lds
imul
jecxz
and
sbb
mov
sub
push
sbb
ror
not
mov
outsb
xchg
xchg
cmp
mov
xor
mov
mov
sub
push
mov
xor
pusha
xor
and
pop
out
mov
inc
sti
sub
sub
fdivp
dec
jmp
or
cwtl
xor
lret
sbb
gs
into
inc
lcall
push
mov
in
push
mov
cmp
mov
rclb
dec
ja
xchg
jae
sbb
and
fldl
test
mov
add
adc
lahf
cmpsb
enter
sysret
jae
out
mov
adc
mov
test
enter
mov
and
nop
enter
rcrl
stc
cltd
ret
jb
mov
stc
pop
shrb
cmp
stos
cmp
aaa
sbb
std
mul
mov
jae
or
adc
xchg
adc
arpl
mov
les
out
test
stos
fiadds
ret
pop
std
lds
sub
ss
or
ret
clc
add
fwait
push
mov
fsubp
adc
inc
js
lret
fsubl
lods
xchg
lahf
shrl
dec
mov
rcl
cmp
out
or
outsb
les
lcall
xchg
or
cld
inc
xor
insl
xor
push
add
cmp
jne
cmp
dec
shlb
push
test
mov
ret
inc
pop
out
sub
in
pop
inc
aad
imul
sar
jl
inc
es
xor
and
das
outsb
sbb
sbb
adc
jae
inc
enter
shll
sbb
add
pop
notl
mov
inc
mov
out
mov
pop
push
es
add
aaa
into
ret
dec
jbe
vmovq
shl
fstp
arpl
lcall
xchg
pop
push
jo
xchg
test
loope
in
lds
inc
cmp
icebp
xlat
fnstsw
cmp
dec
mov
push
mov
jl
pop
or
imul
xlat
lret
js
ret
shrb
jae
add
dec
dec
inc
shr
xchg
test
pushf
cs
pop
sub
cmpsb
xor
iret
aam
int3
jne
jno
test
into
popa
out
repz
imul
xchg
push
sbb
mov
cmp
jae
mov
popl
iret
inc
enter
int
pop
add
fisttpll
aas
jo
pop
inc
das
scas
jg
sub
mov
inc
int3
roll
sub
jne
pop
inc
insl
mov
rolb
into
jnp
rorl
orb
xchg
adc
and
fnstenv
test
inc
mov
fstpt
enter
pop
sahf
xchg
xchg
xchg
jp
mov
xchg
pop
mov
cmp
in
inc
lods
mov
mov
inc
test
push
out
sahf
jno
add
dec
pusha
pop
aam
orb
sahf
xlat
in
lret
or
lea
orb
mulb
or
and
sbb
imul
loopne
shlb
inc
out
push
push
cmp
sbb
mov
enter
mov
adc
jl
aas
xchg
outsl
sti
pop
ss
jge
clc
mov
mov
jno
in
jno
and
and
cmp
mov
mov
jns
inc
aam
scas
fsubs
push
out
and
mov
test
jbe
pop
stc
xor
xor
mov
lea
push
or
data16
mov
fcoms
adc
lods
or
or
mov
jne
test
push
inc
into
sbb
add
adc
pop
imul
sti
sub
neg
repz
add
dec
call
xchg
nop
xor
int3
popf
pop
jmp
mov
sub
in
cmc
push
xor
nop
pop
mov
mov
mov
xchg
sarb
xchg
lahf
insl
lret
pop
push
nop
sarb
loope
and
adc
xchg
jle
jmp
xchg
dec
jno
fs
adc
fcomps
jb
inc
dec
sub
mov
xorb
sub
mov
fs
jns
js
rcrb
fadds
pop
push
bound
aaa
out
test
ret
iret
stos
mov
ret
and
pop
jg
aad
insl
ds
push
mov
jg
cld
push
les
mov
psubsb
pop
sbb
inc
out
test
stos
push
jle
mov
data16
out
push
inc
xor
shl
and
aam
xchg
xchg
movsl
cmp
rol
adc
dec
cmp
ret
xor
leave
pop
dec
inc
or
shrd
or
insb
xchg
mov
xchg
cmpsb
xchg
call
gs
cmp
in
cld
add
inc
mov
ret
mov
fisttps
adc
xchg
xor
lret
das
push
aam
fsubl
aas
or
imul
inc
cwtl
fnstsw
mov
aas
rcrb
cmpsl
addl
jmp
idivb
sub
jnp
mov
dec
inc
fisttpll
cld
dec
jg
mov
mov
pop
jg
ja,pt
orb
adc
lcall
fisttpll
daa
dec
daa
pop
jge
sbb
push
or
fmul
or
mov
pop
outsl
xchg
ret
cmpb
scas
js
cmp
and
inc
mov
xchg
cli
adc
and
dec
aas
pop
pop
inc
mov
sub
xchg
adc
sbb
cmpb
rcrb
mov
xchg
fisttps
popa
aad
xchg
sbbl
into
daa
addl
add
fs
pop
mov
shr
dec
imul
push
push
ljmp
xchg
mov
cli
sbb
adc
xchg
cmp
test
test
lock
scas
in
in
fs
mov
fnstcw
repz
lret
test
xor
sbb
lret
dec
mov
pop
xchg
rclb
xor
pop
notl
in
ljmp
fs
jno
push
shll
ret
out
pop
mov
push
das
dec
add
out
cwtl
ja
ficoms
cmp
lret
mov
cmp
insb
cwtl
and
sub
and
mov
ret
pop
cmp
out
mov
outsl
scas
push
inc
loop
cmp
inc
xor
pushf
cmpsb
jle
push
sub
mov
sub
xor
cmpsl
stc
mov
sub
adc
js
rorl
inc
jae
ret
jg
xchg
or
or
imul
nop
push
mov
leave
sub
dec
test
sbb
push
stos
xchg
add
and
jmp
fisubl
fiadds
pop
dec
sti
in
and
and
xchg
jmp
push
lea
sbb
lods
xor
add
mov
xor
push
mov
int3
rorb
arpl
imul
shlb
test
in
test
and
adc
push
mov
cmpsb
sbb
int
enter
push
inc
jmp
cmp
shlb
fists
jp
inc
jae
mov
push
iret
or
addb
xor
and
cwtl
aas
cmova
mov
stc
sbb
inc
sub
dec
adc
jno
dec
dec
pop
sub
fisubrl
xor
mov
lea
in
sbbb
shll
leave
jnp
hlt
sbb
mov
std
fists
push
test
mov
xchg
out
fdivrs
inc
int
fadds
in
push
sbb
insl
cmp
push
sub
push
cmpl
mov
xchg
icebp
add
out
jb
iret
subl
sub
add
mov
sbb
mov
push
mov
mov
imul
ljmp
mov
movsb
sub
xchg
negl
add
jns
xor
lea
andl
dec
jge
not
cmc
enter
in
and
mov
mov
xchg
or
mov
ss
mov
sbb
mov
cmp
test
pop
mov
and
mov
out
int
lahf
loope
or
jo
mov
dec
push
push
push
and
jl
repnz
push
aas
mov
or
hlt
fisubl
data16
mov
or
xchg
mov
test
movl
lahf
enter
and
dec
xor
pop
dec
aaa
out
imul
sti
push
fwait
and
js
mov
pop
add
incl
push
jmp
pop
es
popf
xchg
push
ret
inc
ds
or
fcmovnbe
sub
mov
cltd
enter
addb
jns
inc
les
and
pop
mov
sar
or
push
cmp
test
jp
std
test
je
andb
push
pop
pop
and
mov
ss
jb
pop
movsb
pushf
mov
cmp
inc
rol
popa
aas
icebp
jp
dec
int3
mov
mov
movsl
icebp
inc
loop
or
mov
js
sarl
in
clc
push
pop
pop
mov
inc
jge
sub
add
sub
rorb
xor
fmuls
mov
shrl
jb
outsl
mov
xchg
sub
mov
pop
mov
mov
imul
ja
mov
test
pop
subb
jno
pop
xchg
sbb
mov
dec
inc
adc
lds
sbb
iret
das
lcall
jae
mov
leave
inc
cmp
test
dec
fstpt
jl
xchg
movsb
mov
int
jl
bound
insb
test
xchg
sub
test
adc
test
sti
mov
into
cmc
mov
aam
mov
add
pop
mov
jecxz
mov
pop
mov
ljmp
xchg
xor
mov
and
into
sub
test
idivb
jge
in
sub
xchg
cmpsb
aas
inc
gs
mov
and
push
xor
xchg
dec
xchg
push
rclb
fbld
and
lods
sub
xor
std
jns
jecxz
into
ds
leave
in
ljmp
shlb
mov
mov
aaa
xchg
dec
popf
or
divb
xorl
or
pop
fwait
jge
in
sbbl
or
sbb
inc
out
mov
mov
jns
test
int3
lods
jmp
repnz
and
aas
cwtl
inc
lea
pop
cmpsl
jnp
push
dec
jl
push
cmpsl
addr16
sub
mov
sbb
cltd
mov
lret
scas
insl
jmp
cs
dec
adc
mov
sahf
in
mov
popa
push
lret
nop
xchg
jmp
insl
test
mov
pusha
xchg
mov
sub
dec
imul
out
stos
rol
xor
jbe
daa
add
ret
sti
mov
js
pop
idivl
jl
mov
aas
cs
scas
test
sub
fildl
fwait
ret
les
in
adc
mov
sbbb
imul
or
loopne
inc
mov
leave
sbb
or
cmpsl
sbb
cmpsl
pop
and
mov
adc
pop
cmpsl
mov
inc
and
lret
scas
fistps
fidivl
inc
out
out
mov
and
jae
pusha
inc
jle
adc
out
sub
pop
mov
js
or
ljmp
xchg
addb
sub
add
push
sbb
mov
fistps
int3
mov
test
out
imul
aad
mov
clc
dec
fldenv
loop
out
mov
mov
or
add
mov
cmp
aam
stos
pusha
addr16
add
testl
push
push
out
push
and
jle
out
ret
or
dec
pop
adc
gs
jp
mov
and
mov
sub
cmp
and
dec
xor
and
mov
cmp
cld
push
ret
out
xlat
inc
pop
jno
pop
ljmp
cmc
cmc
movsl
sub
adc
adc
jb
out
mov
cmp
push
sub
push
sub
jle
pusha
sub
out
addr16
ljmp
adc
int3
popa
cmc
loopne
cld
pop
mov
sbb
cwtl
sub
out
cmp
ljmp
adc
jecxz
pop
or
leave
pop
jo
jp
add
mov
insb
xor
adc
loope
pop
mov
leave
pop
call
cwtl
enter
pop
rorb
mov
out
jo
test
scas
cltd
cmc
hlt
xorl
mov
xchg
sahf
arpl
and
ja
fwait
cmp
fwait
jle
call
dec
pop
push
dec
mov
enter
mov
pop
xchg
mov
fstps
nop
rorb
rcrl
in
xchg
cmpsb
sbbl
insb
ja
sahf
adc
sub
lcall
jno
test
xor
pop
mov
test
pusha
mov
pop
pop
cmc
popf
hlt
mov
ret
dec
cmp
push
xchg
jp
ja
jns
dec
xor
cmpsl
xchg
inc
mov
call
setno
adcl
mov
hlt
in
shrl
loopne
push
ret
xchg
hlt
mov
mov
inc
popf
inc
lahf
push
pop
sub
mov
in
mov
ret
into
sbb
mov
in
inc
push
bsf
xor
mov
or
jmp
cmp
jmp
es
rcr
push
or
and
lock
sub
shrb
sbb
or
add
mov
std
xor
xchg
and
ja
sbb
cmp
mov
xor
cltd
pop
or
adc
jae
xchg
adc
adc
xlat
lret
dec
ljmp
pop
or
repz
cmp
pop
cmpsb
jp
jno
mov
dec
popf
pop
fbstp
dec
push
dec
push
repnz
sbb
push
imul
lea
cmp
repz
mov
cwtl
out
push
jno
add
jg
dec
mov
test
daa
std
sbb
pop
sbb
mov
or
sbb
and
xchg
bound
ss
sub
adc
fwait
inc
dec
lods
aam
ret
fs
jmp
cmpsb
shlb
and
repnz
aas
jp
or
icebp
imul
sbb
fadd
and
dec
sysret
dec
daa
nop
pop
jmp
fs
ja
pusha
sub
aas
test
adc
insb
sub
mov
mov
daa
or
dec
nop
inc
cs
ss
mov
pop
xchg
js
int3
je
pop
les
fucom
jnp
es
int3
mov
push
mov
ja
inc
lods
nop
arpl
fwait
std
ret
ja
and
les
mov
dec
jl
jle
rclb
cmp
dec
lods
and
and
push
out
rcll
cmpsb
loopne
and
aas
pop
add
xor
fs
dec
mov
adc
arpl
xor
loope
mov
adc
inc
xchg
in
xlat
loope
arpl
dec
adc
push
xchg
xchg
push
jg
mov
insb
sub
or
cmp
aad
mov
out
pop
pop
flds
out
inc
imul
outsl
clc
pushf
jl
ja
lret
push
xchg
sub
sub
xchg
push
push
cli
jg
ja
dec
push
fwait
pop
jge
mov
imull
xchg
adc
fsubr
push
sti
imul
in
jb
inc
movsl
mov
jns
inc
in
jecxz
hlt
fcompl
test
cmpsl
insl
push
adc
adc
mov
mov
test
pop
xor
test
lret
ljmp
lods
int3
and
mov
lods
pop
mov
mov
shl
out
cli
dec
pop
mov
int3
mov
inc
adc
cwtl
mov
int
movsb
testl
aad
in
fcompl
push
lods
leave
les
and
xor
push
in
cwtl
push
into
test
push
or
rcl
jg
in
add
jecxz
jns
sti
sub
xchg
js
or
fs
cli
je
daa
dec
mov
arpl
adc
dec
cmp
shl
mov
jne
daa
mov
stos
cmp
test
jo
in
xchg
xchg
hlt
dec
cmc
cld
cmp
rcl
dec
jo
adc
sub
faddp
mov
icebp
jns
pop
lcall
mov
das
rcrl
addr16
dec
stos
adc
mov
cld
ss
aaa
aam
adcl
push
pop
test
sub
pop
xchg
loope
mov
push
inc
int3
sbb
sarb
sub
or
imulb
dec
ljmp
insb
mov
lret
and
pop
jbe
bound
xor
adc
or
dec
jns
xchg
push
fidivrs
hlt
inc
pop
repnz
fsubrs
mov
push
fs
add
das
fmull
add
repz
push
hlt
lret
mov
xchg
sahf
jmp
out
jmp
movsl
fnstsw
mov
divl
pusha
mov
xchg
lret
or
imull
out
mov
mov
adcb
mov
pop
xor
adc
mov
mov
loop
xlat
mov
lret
inc
sbb
fldcw
sub
shrd
out
cmp
sub
xor
loopne
sbb
fmull
pop
lods
addr16
int
popa
and
ret
mov
testb
xchg
pop
jo
scas
pop
ffree
addb
mov
out
jl
rcrb
or
inc
psubw
jmp
outsb
test
add
lret
sub
test
push
push
in
sub
xchg
and
cs
leave
inc
lahf
mov
push
xchg
xlat
push
sub
dec
push
push
xor
test
cmpsb
pop
pushf
mov
xchg
jo
mov
hlt
imul
inc
mov
and
mov
cmp
and
jle
jge
jno
andl
ljmp
imul
jl
scas
or
mov
repnz
jecxz
insl
cmc
addb
incl
sub
pop
fisubl
daa
pop
pop
sarb
or
inc
lods
inc
loope
out
dec
mov
loop
test
push
nop
sub
sub
js
xchg
push
sbb
imul
sub
ds
popf
jns
cmp
jg
push
adcb
jnp
cmp
fdiv
cmp
dec
scas
pusha
push
xchg
inc
mov
push
sub
sbb
test
int
and
mov
frstor
mov
imul
xor
pop
stos
ret
call
cmpsl
push
adc
jg
movsb
testb
loopne
mov
cmpb
mov
push
ds
xor
ret
es
lods
and
and
mov
xchg
or
pushf
jg
cmpsb
xchg
imul
sub
sbb
mov
and
mov
sbb
in
or
dec
js
sub
shll
outsb
lret
fisubl
stos
jno
dec
sbb
imul
mov
test
push
dec
adc
sti
lods
sub
add
sbb
xchg
sub
adc
in
mov
loope
sub
pop
and
adc
mov
aad
mov
dec
lret
push
dec
mov
and
jnp
push
std
pop
pop
jne
ljmp
lcall
cs
lcall
repz
addl
sbb
test
or
mov
lret
push
in
pop
add
mov
ja
or
or
pop
or
je
cmp
sbb
dec
arpl
mov
bswap
jno
inc
adc
mov
lds
push
xor
dec
je
sub
mov
mov
movsb
sbb
or
ret
pop
int3
jo
sub
ret
fnsave
add
cmp
lods
xor
mov
fistpll
fidivrl
dec
or
pop
aaa
inc
pusha
xchg
fsubr
sahf
push
fimull
push
sbb
out
ss
add
push
shll
cmc
jne
fidivs
mov
mov
and
call
inc
mov
mov
and
mov
imul
push
lea
inc
pusha
roll
sahf
sub
rcrb
inc
push
cbtw
cmp
pop
mov
sbb
jmp
movsl
aaa
loope
inc
cmp
hlt
mov
push
pop
cli
rorb
sub
sti
mov
lret
jmp
int
add
dec
adc
enter
adc
outsl
dec
xchg
xor
push
mov
pushf
addb
fdivl
inc
adc
dec
jmp
fstpl
inc
data16
xchg
fisubrl
hlt
jmp
pmulhw
es
ds
fistpl
xor
xchg
lret
shll
outsl
xor
inc
inc
add
stos
push
mov
out
push
push
cmp
data16
mov
add
dec
in
mov
into
ret
repnz
cmp
aas
add
fldcw
xlat
sub
mov
lea
mov
pop
mov
cmp
mov
xchg
inc
jmp
push
sti
mov
push
inc
xor
pop
jmp
adc
fildl
and
adc
enter
rep
fsubrp
cmp
pop
rol
push
sub
jb
ja
cmc
dec
adc
sbb
subl
pcmpeqd
jmp
mov
movsb
sbb
mov
inc
and
clc
cmp
mov
ss
scas
insb
clc
stc
test
stc
lods
mov
inc
cmpsl
inc
xlat
pop
into
inc
jns
mov
jns
push
and
fwait
int3
insb
jmp
adc
cld
jge
cmp
stos
iret
mov
mov
jno
je
jae
and
mov
push
ds
xchg
xchg
lret
sbb
xchg
jp
jg
and
je
fs
insl
out
lret
push
jno
addr16
ds
mov
mov
xor
inc
sub
jnp
jo
xchg
pop
adcl
mov
mov
push
mov
fisubl
sahf
jg
hlt
hlt
popf
or
ret
xchg
insl
shrl
sahf
lea
push
insb
les
cmp
mov
cltd
pop
pop
loope
arpl
cli
sbb
lret
movsb
in
mov
sahf
loope
push
mov
fwait
out
jb
ficoms
and
adc
or
fistl
insb
frstor
sbb
cmp
pushf
jg
movsb
aad
andl
lods
or
loope
add
add
mov
popf
lret
inc
inc
fdivl
test
sub
icebp
mov
inc
gs
add
or
mov
add
or
add
mov
jg
repz
xchg
and
cmp
cmp
xlat
adc
cmpsl
sub
or
lret
cltd
dec
fcompl
lret
dec
push
cmpsb
dec
cmp
add
imul
lods
cmp
scas
fsubs
jge
push
cmpsb
pop
jle
jecxz
inc
mov
inc
mov
inc
repz
incl
aas
mov
pop
cmp
mov
xchg
int3
inc
es
sbb
cmp
daa
jmp
jmp
xchg
jnp
xchg
mov
in
mov
sub
mov
lea
add
adc
dec
mov
pop
aaa
int3
scas
mov
cmp
pop
out
sub
ret
sahf
adc
shl
lea
mov
jmp
or
or
cltd
dec
sub
shrl
out
ret
dec
mov
xor
loop
das
xor
mov
inc
fstps
aas
rcrl
jae
cld
call
or
sbb
pop
xchg
sub
pop
inc
ja
lock
call
out
orb
mov
sub
sub
movsl
scas
jnp
pop
push
and
vfnmsub231sd
adc
stos
lcall
sbb
jo
cmp
pop
xor
pusha
or
pusha
or
out
sbb
cltd
add
movsb
add
fcos
inc
enter
push
icebp
adc
mov
push
stc
and
aad
mov
fsubl
inc
mov
xchg
mov
push
mov
add
inc
ret
out
and
dec
iret
ret
lret
enter
addb
in
testl
dec
and
ds
and
pop
mov
dec
xor
ficoml
push
xor
cmp
inc
loope
das
pop
jnp
jecxz
inc
movsb
inc
and
sbb
std
lret
in
sub
xchg
inc
scas
jbe
cmp
repz
fnop
sti
adc
enter
sbb
xor
rclb
ds
jg
fbld
push
insb
push
inc
pushf
arpl
loopne
push
cmp
and
mov
inc
sbb
jae
loope
xchg
pop
mov
inc
dec
aad
sub
aas
xchg
sbb
repnz
jns
call
lahf
sub
testl
inc
push
or
xor
jecxz
pop
aad
sbb
or
lds
jno
ret
subb
shlb
scas
xchg
pop
lret
in
mov
inc
inc
jns
jno
push
scas
mov
pop
xchg
cmp
cmpsl
loopne
mov
stos
test
mov
xchg
aas
jp
push
pop
adc
xchg
cmp
jb
lcall
aad
and
cmpsl
pop
mov
pop
adcb
jg
stos
push
loop,pn
loope
mov
or
out
test
inc
scas
inc
add
dec
fnstcw
mov
inc
push
popl
pusha
gs
aam
jnp
mov
insl
push
xchg
mov
dec
dec
dec
xchg
outsl
push
inc
jbe
movsb
push
push
add
ss
and
aaa
rol
add
add
xchg
and
cltd
aad
cltd
push
ljmp
xchg
pop
lret
mov
pop
mov
add
cmc
scas
pop
mov
push
and
xchg
add
adc
cld
subb
pusha
ret
push
xchg
jns
push
inc
or
push
int
dec
jnp
loope
bound
add
and
push
mov
jecxz
aad
cmpsb
into
push
push
sub
inc
subl
popf
cmc
dec
dec
sub
mov
cli
scas
adc
pop
sub
and
xchg
int3
movsl
psubq
lahf
out
jecxz
push
sbb
cmp
mov
mov
jb
inc
mov
inc
xchg
mov
call
lcall
push
push
popa
fistps
pop
xchg
mul
aas
fmuls
test
ret
push
sarl
sub
cmp
lea
fstl
or
mov
cmp
cmpb
xor
je
push
xchg
insl
dec
xchg
adc
pop
cli
mov
push
pop
cmp
adc
lds
dec
xchg
pop
pop
pusha
inc
inc
stc
push
jne
gs
cmp
dec
out
push
cmpsl
div
push
stc
ja
mov
xchg
xchg
ljmp
loop
in
adcl
adc
test
pop
pop
popf
jb
cmpsb
jmp
jnp
addr16
call
sbb
pop
sbb
bound
adc
pop
xorb
mov
adcb
fwait
mov
mov
cs
shll
call
sbb
les
sbb
dec
dec
push
fbstp
dec
fimuls
rcl
and
jmp
pop
popa
sbb
fwait
jne
pop
outsl
mov
push
pop
cmpl
popa
jns
sub
mov
jne
mov
lods
add
mov
push
push
jmp
out
and
sbb
dec
xor
shlb
jne
mov
pop
mov
jne
test
rclb
fst
in
imul
hlt
adc
rcll
andb
pusha
scas
dec
mov
cmp
mov
and
sub
imul
inc
xchg
jg,pn
push
lret
dec
lret
or
mov
insl
sar
sub
mov
mov
ds
xchg
jbe
fcmove
lret
mov
int3
pop
sbbl
outsl
or
es
addr16
lret
data16
iret
push
sbbl
fisttpl
and
loopne
cmp
leave
stc
push
sbb
jae
fists
loopne
lods
inc
xchg
and
imul
xor
cmpsl
aad
arpl
push
jbe
pop
mov
fnsave
out
lock
jne
pop
pop
mov
or
mov
dec
les
mov
stos
mov
add
in
in
mov
test
push
xchg
push
fisubl
loop
outsb
aaa
jle
sub
cmp
stos
dec
cwtl
ret
mov
dec
pusha
lock
xchg
xchg
rolb
dec
in
lock
dec
dec
and
fistpll
ja
sbb
or
cli
mov
aad
dec
sbb
or
cld
pop
dec
sub
sbb
nop
call
adc
js
xor
push
out
test
push
xor
bound
cmp
out
jne
xchg
cmp
ret
fwait
cmp
push
fcomip
jo
xchg
xor
adc
mov
out
add
xor
or
sub
xorl
push
pop
cmp
cmp
out
xor
sbb
and
loop
pushw
dec
or
pop
cli
int
data16
std
fisubrl
iret
ret
loop
nop
mov
dec
jno
stos
xor
mov
mov
push
mov
and
add
popf
mov
push
xchg
and
jp
outsb
das
stos
jae
mov
dec
mov
pop
pop
in
aam
mov
lds
add
into
pop
dec
dec
rcll
sbb
and
jae
or
jge
jo
push
mov
xor
lret
pop
sub
clc
cmpl
rolb
lock
inc
or
mov
lods
je
inc
loopne
mov
and
mov
sarb
sbb
mov
lea
stos
jmp
stos
stos
into
es
jg
cmpsl
rclb
enter
daa
add
lcall
xor
inc
je
jmp
push
mov
es
ret
sbbl
rol
mov
xorl
fldt
cmp
fisttps
ja
xor
dec
loopne
pop
xor
test
ret
and
out
rclb
xchg
mov
or
and
pop
popf
das
shrl
scas
pop
popa
and
mov
imul
pop
sbb
jo
sub
cwtl
shll
xor
sbb
and
das
add
pusha
or
fisubrl
cmp
push
mov
dec
in
inc
push
imul
stos
adc
stos
jle
and
sbb
dec
cltd
and
insb
lods
in
inc
push
std
pop
push
shlb
cmpsb
out
mov
cmc
inc
pop
pop
mov
inc
test
dec
push
push
mov
addb
test
mov
test
adc
sub
imul
sbb
stc
cltd
cmpsl
add
dec
je
cmp
iret
mov
lcall
jbe
jb
lds
mov
test
mov
mov
cltd
aam
test
sbb
sbb
call
jne
cmp
push
sub
cmp
out
out
outsb
dec
imul
add
pop
mov
sub
push
lock
popa
mov
dec
ljmp
pop
loope
fadds
add
pop
faddl
sysexit
adc
in
aad
pop
and
imul
jg
cmpb
ja
sbb
dec
push
lahf
and
mov
jo
mov
test
je
or
dec
fs
push
aaa
cmp
dec
divl
inc
ror
mov
add
inc
leave
ljmp
test
mov
jmp
jmp
and
repnz
ss
test
scas
jge
lods
and
sub
sar
popl
nop
xor
aam
cmpsb
cmpsb
aaa
cli
adc
sub
mov
repz
or
mov
jmp
mov
and
jmp
addr16
cmp
test
movsb
inc
outsb
jp
adcl
adc
jg
js
iret
dec
psubq
or
enter
pop
ljmp
aad
xchg
jbe
fs
adc
jmp
inc
add
or
and
data16
mov
out
adc
add
mov
jne
sub
xchg
outsb
in
stos
enter
stos
push
mov
cld
icebp
popf
pop
in
cmpsb
imul
mov
add
out
jb
mov
shrl
sbb
cmp
arpl
rclb
bnd
add
jns
push
mov
push
push
fistpl
lods
pop
sub
pop
stos
lods
pop
sbb
mov
fs
cmpl
fdivs
xlat
xchg
inc
pop
cltd
sbbb
out
hlt
push
sub
xchg
jecxz
out
mov
imul
repz
notb
out
sbb
inc
push
cmp
ret
jns
adc
js
decl
inc
fs
cmp
out
repnz
mov
fadds
adc
xor
sub
icebp
jno
mov
mov
out
mov
lret
and
push
movsl
xchg
jmp
mov
fistpl
sbb
push
sub
adc
jbe
mov
or
jg
dec
pop
or
iret
mov
push
xor
cmp
add
or
aam
sbb
dec
pop
sub
inc
into
pop
test
jne
pop
pop
dec
lock
mov
dec
dec
vmaxps
xor
js
dec
fstps
dec
call
repz
orb
repz
cmp
sbb
xor
daa
insl
andb
and
dec
cmp
jno
shrb
flds
shll
scas
andl
push
jmp
adc
jnp
je
inc
rcr
ljmp
rcrb
sahf
dec
dec
aaa
adc
mov
aam
xor
mov
shll
sub
fists
add
mov
xor
dec
jg
inc
fldenv
xchg
rcl
cltd
leave
lock
push
dec
xchg
lcall
fnstsw
loop
inc
ret
stc
fadds
pop
psrlq
jbe
int
xchg
push
int
pop
es
cwtl
cmp
leave
and
data16
jbe
pop
add
xchg
add
pop
mov
dec
out
dec
cli
sub
mov
mov
ret
sahf
adc
xor
jecxz
pop
mov
adc
add
mov
int3
push
pop
cmp
ja
jge
inc
mov
mov
pop
dec
push
xlat
mov
dec
aas
add
mov
fs
aas
les
push
fistps
fldcw
jns
push
sarb
mov
sub
mov
inc
rorb
mov
outsl
dec
andb
test
jmp
pop
jle
out
xchg
dec
xchg
jbe
pop
test
pop
sub
popf
call
pop
pop
rclb
adc
push
xchg
push
lods
inc
cmpsb
nop
outsb
stos
add
addr16
inc
pop
lret
mov
ja
sbb
call
xchg
push
mov
push
mov
mov
cwtl
mov
out
in
aam
mov
decl
call
adc
pop
rorb
push
xor
ss
aaa
in
cmpsb
jbe
dec
out
pushf
inc
mov
dec
push
or
xchg
fs
in
stos
call
xor
mov
enter
jbe
imul
adc
sbb
push
rcll
add
popa
mov
sub
adc
jb
sub
push
scas
dec
mov
mov
sub
es
hlt
jg
mov
lahf
adc
aaa
shr
xor
and
popl
outsb
cmpl
imul
mov
rolb
outsl
scas
dec
add
rcl
dec
ds
imul
cltd
stos
cli
push
loope
cld
jbe
loope
push
lcall
pop
cmp
test
jle
outsb
jmp
xchg
push
mov
icebp
mov
fsubrl
call
loope
stos
sub
out
test
fisubrl
sub
fwait
jnp
dec
imul
outsb
jo
scas
stc
cwtl
std
cmc
sahf
into
cmp
mov
stos
es
sub
push
xchg
mov
cld
and
lods
int
inc
popa
fstl
clc
inc
stos
nop
add
aas
push
adc
pop
mov
ret
lahf
loope
jo
imul
js
fdivrs
xorb
mov
pop
xor
pop
mov
inc
cmpsl
ret
add
pushf
lock
repnz
cmc
push
sbb
dec
inc
in
cltd
adc
xchg
jo
pop
aaa
jne
add
rcr
outsl
mov
mov
sar
negb
push
or
imul
xlat
out
dec
push
sti
inc
sete
push
add
mov
popa
fsts
xor
jmp
movsl
pop
cs
mov
jmp
loopne
and
sub
and
mov
push
push
jecxz
mov
jbe
inc
sub
arpl
lret
pop
sbb
dec
xor
movsl
lods
movsl
jecxz
orl
sub
mov
push
add
sbb
outsb
fisubrl
mov
outsl
mov
pop
add
es
test
repz
pop
stos
sub
dec
iret
leave
or
sti
inc
fisttpll
xor
enter
mov
pop
clc
lahf
add
cmpsb
xlat
ljmp
add
jmp
lcall
nop
lock
rol
inc
jle
stc
jo
dec
xchg
add
xchg
sbb
or
loope
mov
lods
lock
inc
push
nop
add
sarb
inc
or
pop
pushl
lods
ljmp
test
and
lods
mov
add
sbb
stc
cmpsl
mov
mov
cwtl
xchg
xchg
pop
inc
xchg
mov
or
dec
mov
or
jno
jo
inc
les
and
dec
jnp
scas
popf
movsb
push
int
dec
pop
jecxz
outsl
mov
pushl
jecxz
mov
insb
push
mov
imul
jge
jp
adc
xchg
stc
rorl
jmp
jp
add
psubb
sub
jnp
mov
fadds
jge
lret
pop
popa
dec
dec
repz
lods
push
push
sbb
aas
xchg
imul
adc
xorl
jle
call
bound
dec
mov
mov
xchg
incb
stc
loope
pop
iret
sub
add
fmuls
inc
cld
cmp
and
add
mov
xor
fidivl
xchg
shll
mov
jnp
inc
xchg
jo
mov
pop
adc
pop
xlat
adc
lods
insl
ficomps
jns
mov
hlt
add
sub
orb
sbb
cmc
leave
movsl
in
es
sub
inc
push
cs
cmp
scas
orl
cs
push
popa
test
mov
xor
dec
jae
les
sbb
mov
pop
loope
jb
xorl
movsb
or
or
fistl
ret
jmp
xchg
cmp
lods
pop
into
shrl
outsl
mov
mov
and
jmp
scas
push
inc
pop
inc
mov
or
pusha
lock
xchg
mov
xchg
sar
and
inc
fiadds
pop
inc
pushf
sub
cmp
shll
mov
pushf
adc
leave
cltd
xchg
rcll
in
mov
xchg
lahf
push
gs
jp
jbe
stos
lea
jl
popf
fbld
cmp
add
out
testb
inc
add
sub
popf
aad
mov
daa
lods
adcb
out
setns
xor
rorb
jmp
mov
sbb
mov
add
je
push
sbb
in
test
xchg
adcb
dec
rol
stos
mov
add
mov
mov
xor
add
xor
push
out
repz
mov
dec
movsb
ret
adc
pop
mov
jge
inc
sbb
stos
and
or
pop
adc
fldenv
out
xor
arpl
call
jns
mov
pop
push
push
jge,pt
fwait
lret
lahf
cmp
call
pop
xchg
cltd
jmp
add
sbb
jo
rorb
cltd
fwait
ret
jbe
dec
and
jbe
xchg
dec
les
fwait
jae
pop
and
lret
push
mov
xchg
dec
dec
or
cmpsb
mov
and
fidivs
push
or
ss
pop
xchg
sub
mov
stos
inc
mov
sub
mov
jg
xchg
imul
das
test
push
inc
testl
and
out
mov
xor
add
fdivrl
push
iret
ret
shll
std
lcall
jnp
push
xor
nop
loope
xlat
pop
lods
aam
rorl
push
popa
arpl
aas
popa
repz
lahf
in
aas
das
aaa
adc
movsb
push
and
jge,pt
push
push
dec
jge
hlt
notb
jge
push
xor
cs
mov
in
mov
add
and
xchg
lret
pop
fbstp
fdiv
mov
icebp
rcrb
in
add
jle
cmc
fiaddl
xchg
inc
mov
xchg
xor
sarl
cmp
xor
mov
popf
aaa
cld
add
push
fldl
adc
or
sub
mov
addb
pop
dec
push
jae
dec
and
movsb
and
or
cwtl
or
mov
push
js
xchg
inc
inc
jnp
add
jge
into
stos
fcmovbe
mov
je
mov
insl
enter
not
pop
sub
in
incl
pop
cltd
jl
push
jg
sbb
push
xchg
shrl
fs
mov
les
icebp
sbb
rcll
ja
test
pushf
mov
and
jno
pop
push
cmpsl
mov
mov
or
sub
xor
push
test
test
iret
dec
les
std
adc
jmp
inc
fsub
fs
bound
xor
std
js
int
mov
xchg
xchg
imul
and
and
xor
hlt
mov
mov
dec
scas
pop
dec
jo
push
cld
cmp
cltd
sbb
mov
jnp
lods
push
insl
pop
xorb
mov
mov
and
add
xchg
imul
push
hlt
lahf
aad
out
fistps
mov
scas
outsl
push
leave
xchg
lds
pop
shll
xchg
push
xchg
xor
or
jae
xchg
js
aaa
mov
dec
out
lods
rcll
pop
test
add
xchg
lret
jno
mov
mov
jo
hlt
jge
xorb
sbb
cmp
je
xor
dec
fmull
mov
sbb
sahf
lcall
xchg
aam
mov
jle,pt
inc
adc
mov
jbe
push
mov
std
iret
lods
les
ret
push
mov
les
cld
loope
repz
lods
xchg
lret
or
out
adc
sti
cli
das
into
addl
push
push
repnz
jno
mov
cmpl
outsl
sub
outsl
adc
xchg
pop
movsl
scas
scas
daa
xor
jmp
mov
rcrb
cwtl
fwait
and
mov
push
and
inc
xchg
testl
cmp
fwait
cltd
or
repz
mov
jo
adc
cmp
mov
fidivs
xchg
gs
in
cmp
mov
push
cmpl
pop
cmp
push
xchg
ret
lods
ds
fs
movsb
loop
mov
mov
ds
rcrl
xchg
and
nop
leave
mov
sbb
arpl
imul
push
mov
lods
mulb
lock
sub
notl
stos
fnstenv
cmc
cmpsl
pop
outsb
push
cmp
xor
push
orb
sub
stc
sbb
inc
fnstcw
bound
mov
pop
pop
and
cli
adc
xchg
xorl
loope
pop
or
fs
cmpsl
inc
es
lea
pop
insb
adc
mov
sbb
test
js
inc
imulb
xchg
and
pusha
lods
add
mov
lock
sub
popa
sub
jo
inc
out
fbld
xor
xor
repz
iret
popa
mov
push
mov
sub
and
xlat
mov
and
xchg
mov
jne
adc
mov
or
cli
push
cmpsl
loope
xchg
pop
bnd
adc
imul
lds
add
popf
roll
in
cmpsl
sbb
pusha
mov
pop
mov
test
aas
jecxz
mov
arpl
es
cmpsb
orl
loopne
jecxz
lods
loope
xor
into
mov
pop
fwait
mov
lahf
push
insb
pop
movsl
jae
rcr
inc
in
cwtl
adcb
push
push
dec
mov
and
iret
je
stc
or
and
insb
in
push
adc
dec
cmpsl
ss
inc
clc
add
cmp
ficomps
lods
ror
inc
cmp
ss
push
ret
lods
push
jecxz
adc
or
stos
lods
or
roll
or
iret
mov
iret
adc
inc
inc
hlt
dec
insb
fldcw
sti
pop
movsb
int3
xor
adc
jecxz
outsl
bound
movsb
mov
and
jg,pn
ret
inc
cmp
je
ficomps
dec
or
cmpl
mov
lods
aam
clc
push
add
out
or
or
cmp
aad
cmpsb
rep
out
out
jno
cmp
sbb
or
dec
add
roll
sahf
leave
pop
idivb
xchg
sub
jp
add
mov
arpl
inc
inc
inc
rcl
mov
mov
add
push
mov
movsb
mov
mov
cmp
ss
insb
and
loop
dec
push
add
mov
xchg
mov
mov
or
test
fs
pop
pop
push
jmp
mov
in
mov
or
and
add
add
pop
insb
out
js
jge
dec
xchg
out
dec
test
mov
adc
mov
add
leave
leave
inc
shll
inc
fisttps
inc
cvtdq2ps
sub
mov
addb
add
aas
shl
fstl
adc
pop
cmp
daa
data16
loop
daa
inc
pushf
mov
insb
push
lods
stc
fistl
mov
push
je
movsb
mov
xorl
mov
mov
push
mov
push
push
push
hlt
dec
inc
int
mov
call
inc
push
mov
lods
ss
xor
mov
mov
bound
imulb
mov
mov
lret
add
mov
jns
mov
testb
lods
and
lea
in
test
sub
inc
fcmovnb
mov
mov
or
inc
dec
loope
nop
test
lods
inc
insb
mov
dec
sub
lea
negb
loope
and
cmpsb
xor
popf
outsl
lret
cmp
or
adc
test
xor
repnz
scas
data16
fcompl
sbb
sbb
push
pop
ss
shlb
adc
aam
pop
push
sub
stc
sti
add
je
push
scas
mov
arpl
adc
sbb
pop
mov
push
sahf
add
adc
outsl
sub
add
mov
dec
xchg
in
mov
test
out
lahf
pushf
mov
jge
add
and
pop
xchg
popf
jl
ds
or
lret
fcoms
add
dec
inc
jp
imulb
ficompl
push
mov
jmp
ss
pop
aaa
enter
icebp
ja
icebp
or
les
call
jmp
fadds
xor
xor
push
pop
frstor
sti
jbe
loopne
pop
outsb
cld
movsl
mov
inc
mov
outsb
scas
loope
or
and
pop
push
add
push
in
lahf
pop
aas
pop
cmp
mov
jnp
mov
jo
xlat
push
in
jbe
xchg
adc
or
cmpsl
mov
add
hlt
out
sub
mov
jmp
jbe
pushf
dec
stc
sahf
sbb
mov
sbb
or
gs
jp
fstl
das
inc
dec
adc
mov
dec
lods
xor
inc
outsl
inc
dec
jb
mov
mov
pop
push
push
fcomi
shr
bound
cmp
sahf
jl
clc
in
xchg
mov
into
test
mov
in
cmpl
or
cs
push
js
dec
xchg
stos
jle
push
idivb
jmp
cmp
mov
pop
xchg
movsl
nop
dec
dec
clc
outsl
xor
and
out
insb
mov
aaa
push
dec
call
arpl
arpl
ror
in
add
sbb
jp
jae
sahf
test
xchg
pop
int
std
dec
cmp
lock
jno
and
push
das
inc
adc
test
sub
fcompl
loope
fdiv
mov
iret
nop
sbb
push
sub
ss
daa
ret
test
jmp
stos
push
adc
in
adc
mov
cmc
bound
aad
inc
jb
or
out
lret
fists
inc
sbbl
outsl
dec
sbb
inc
mov
push
adc
mov
mov
pop
push
inc
mov
sub
xchg
adc
add
andb
mov
push
push
inc
cltd
xor
data16
out
lret
scas
jno
cmp
rcr
xchg
sti
jp
cmp
cmp
jge
push
je
mov
cld
out
push
xor
pavgw
cld
adc
mov
sti
shll
cwtl
shlb
dec
mov
scas
mov
sub
scas
addr16
adc
imul
xor
out
stos
sbb
jae
cmpsl
inc
pop
lret
adc
call
cmp
pause
iret
movsb
mov
rcr
cmp
xor
mov
cmp
xor
inc
jo
mov
fiaddl
pusha
fstpt
idivl
fidivl
pop
add
rcr
ds
gs
add
push
aas
movsb
mov
or
sbb
mov
incl
push
inc
pop
push
mov
pop
jne
pop
ret
sub
test
add
lods
popa
sbb
jmp
mov
dec
mov
lods
mov
mov
sub
popf
xchg
outsl
rol
icebp
dec
xlat
fs
cmp
out
pop
dec
jae
mov
pop
jns
fcmovnb
scas
out
inc
sbb
lahf
rorl
xchg
bnd
push
push
xlat
push
mov
mov
fnstenv
outsb
dec
sti
daa
popf
loop
or
ret
fsubrl
cwtl
testl
and
jmp
jo
loope
cmp
daa
sbb
je
dec
sub
mov
popf
xchg
lret
repz
ja
test
jge
mov
mov
lret
push
jnp
lods
repnz
aas
outsl
mov
pop
pushf
push
stc
xor
pop
cmp
mov
ds
xchg
xchg
test
xchg
pop
jb
aad
fcmove
mov
rorl
pop
pusha
test
jle
scas
mov
mov
clc
dec
aad
add
lods
xchg
sarl
andb
dec
mov
mov
xor
and
sar
adc
rclb
mov
pop
dec
sub
add
mov
inc
cmp
int
jno
or
call
add
dec
cmp
push
push
stos
jle
push
fstps
fcmovnbe
leave
pusha
pop
sub
and
imul
pop
data16
and
pop
lds
jae
mov
inc
cmp
imul
lea
inc
mov
mov
pop
add
dec
jno
insb
btc
push
ljmp
xorl
int3
sbb
and
push
xor
dec
inc
es
mov
and
aaa
mov
test
jne
mov
push
std
out
xor
and
jne
sbb
push
adc
je
add
xchg
cmp
mov
out
jne
call
imul
rorl
mov
sub
repz
hlt
mov
lods
pop
daa
or
or
adc
jno
arpl
pop
cmp
test
jle
int3
cmpsb
daa
dec
movsb
sub
push
icebp
or
cmc
ficoms
cmpsb
xchg
add
or
pushf
imul
pop
cmpsb
js
push
cltd
pop
cmp
aam
xor
inc
imul
xchg
je
movsb
jae
icebp
cmp
mov
xchg
jns
xchg
stc
mov
cmpsb
shll
jno
and
add
in
les
shrb
pop
outsl
push
xor
or
lcall
xchg
jo
or
mov
call
push
add
cmpb
popa
lds
dec
mov
out
mov
sbb
jecxz
ljmp
repnz
xor
xor
pop
dec
lods
cmpsb
decl
inc
xchg
loope
jbe
inc
js
pop
outsl
mov
out
sbb
add
jb
cmp
and
push
dec
stos
add
lret
xor
stc
mov
add
push
fistpl
push
cmp
jno,pn
out
pop
sbbl
jge
mov
mov
ljmp
jle
or
addr16
push
lahf
and
fadd
sub
jmp
adc
inc
into
sbb
adc
pop
lods
xchg
mov
adc
icebp
inc
fsubl
sub
dec
test
cmp
sbb
dec
inc
pop
sub
std
push
cwtl
lea
pop
pop
mov
insb
jmp
and
pushf
mov
sbb
inc
xchg
repnz
cwtl
xchg
cmpsb
repz
or
mov
sar
push
pop
call
enter
sub
test
scas
mov
xor
iret
xor
lea
icebp
cmp
cwtl
push
push
xor
rcr
fldcw
mov
fwait
adc
xchg
dec
ss
orb
roll
pop
add
jge
inc
jne
cli
rcr
mov
dec
xchg
sbb
fildll
fiaddl
mov
shrl
ds
sub
jp
mov
lods
adc
gs
inc
push
sub
dec
subb
or
or
and
enter
mov
adc
mov
call
rcrl
in
dec
std
mov
ljmp
lret
xchg
add
into
pop
jp
mov
mov
test
pop
sti
and
cmp
and
cmp
das
mov
arpl
push
push
ret
mov
mov
cmc
inc
mov
lock
rcll
aaa
push
out
cmp
scas
push
cli
lods
cmc
nop
adc
das
jno
insl
shl
cltd
aad
jmp
fnsave
cwtl
fistpll
rol
lea
imul
pop
jno
push
inc
xchg
xchg
testb
pop
lds
adc
shrb
cwtl
aad
cwtl
pop
sbb
mov
fisttps
sbb
leave
jmp
dec
inc
je
pop
adc
mov
lea
xor
cmp
repz
test
pop
out
std
lock
xchg
jns
ds
and
mov
in
mov
jmp
shlb
data16
lods
push
mov
push
call
and
ja
out
icebp
orb
fwait
push
clc
and
lahf
rol
jecxz
adc
aad
sbb
lods
popa
ljmp
mov
js
rclb
xchg
loope
lret
sub
mov
mov
jnp
xchg
and
hlt
ljmp
out
xlat
cwtl
xchg
cltd
push
mov
add
dec
imul
push
out
cmp
or
add
ficoms
dec
mov
or
mov
push
popa
aad
or
daa
pop
xor
insb
add
outsl
stos
and
or
subl
fadds
mov
or
sbb
into
push
sub
inc
adc
dec
cmpsb
cmp
loope
out
cmp
mov
lds
mov
jae
pusha
fwait
sarl
dec
mov
addr16
pop
lret
sbb
clc
cltd
sub
mov
push
mov
leave
cmp
mov
adc
sbb
xor
add
mov
lods
xorl
aam
xchg
dec
xor
push
mov
push
repz
mov
sub
dec
mov
inc
xchg
je
imul
jg
scas
push
pop
pop
cli
mov
dec
in
dec
push
imul
xchg
sti
push
push
mov
nop
sbb
push
xor
jle
lea
test
push
push
insl
inc
out
cmp
ja
pop
xchg
sahf
mov
add
add
mov
pusha
fs
add
pushf
jno
and
fcoml
or
jbe
add
add
push
adc
jae
jg
mov
xor
push
cmpsb
sub
add
cmpsl
jle
inc
jb
pop
loope
mov
inc
int
dec
sti
outsl
je
imul
mov
fdivrs
ljmp
sbb
in
popw
data16
bts
movsb
or
jecxz
mov
sub
xor
jnp
xor
jmp
sub
aas
xchg
xor
pop
push
cli
mov
mov
push
insb
pop
jg
outsl
jns
pop
test
rclb
cmpsl
cmpsb
nop
pop
xchg
lahf
cld
hlt
sub
and
xor
aad
add
push
dec
iret
hlt
push
out
mov
mov
in
bound
stos
daa
in
adc
cmpsl
sbb
lds
scas
bound
xchg
cmp
fldt
jmp
jb
mov
mov
inc
inc
sbb
dec
std
jp
mov
ret
nop
mov
aaa
or
inc
cmp
das
mov
leave
nop
sub
movsb
mull
out
sub
xchg
adc
aas
sbb
add
out
mov
push
lods
outsb
push
in
inc
inc
xlat
inc
inc
adc
imul
insl
xchg
sahf
rorl
cmp
sbb
hlt
or
loopne
dec
add
mov
shll
mov
mov
mov
xchg
fidivs
dec
sbb
push
push
xor
repnz
pop
into
mov
push
stc
mov
stos
jno
xlat
or
fwait
int3
jae
in
test
ret
dec
test
enter
je
mov
cmc
ds
mov
enter
mov
out
fdiv
test
dec
ljmp
jno
sbb
adc
enter
push
and
sarl
add
leave
scas
xor
or
mov
add
sub
mov
scas
adc
shlb
xor
jns
dec
xchg
mov
add
subb
test
aad
mov
sub
stos
jnp
cmp
cmpsl
jbe
add
das
mov
dec
mov
cld
jae
in
je
test
fiaddl
xchg
cli
stc
sbb
mov
inc
lahf
xchg
adc
mov
icebp
mov
stc
push
scas
inc
inc
xor
push
movsl
push
jp
dec
xlat
mov
and
sub
push
cmp
and
test
imul
arpl
iret
stos
pop
lea
xlat
mov
dec
outsb
and
mov
cmp
into
or
mov
dec
fsts
xor
push
lds
mov
mov
loope
cmp
mov
push
lds
dec
aas
cmp
dec
dec
xchg
popa
sub
pusha
pushf
xchg
fldenv
or
dec
jae
cmc
xchg
add
push
stos
cs
rolb
outsl
xchg
iret
leave
nop
mov
paddb
and
inc
dec
pushf
mov
fidivrl
lret
dec
int
xchg
xor
push
cwtl
fistps
dec
shll
cwtl
mov
test
jle
and
ljmp
and
cmp
fildll
mov
fwait
push
fldt
or
lock
or
clc
xor
pop
aad
jecxz
cmp
or
xchg
inc
adc
or
ja
insb
xor
call
or
es
mov
insb
cld
add
mov
jmp
into
fcmove
mov
lock
imul
dec
ljmp
jl
test
out
or
inc
in
and
shrb
mov
outsb
hlt
out
pop
mov
jmp
push
jmp
hlt
ljmp
push
sub
clc
fidivrl
sbb
imul
jle
fistl
repnz
rol
loopne
insl
cmpsl
jg
lods
or
push
enter
xchg
inc
daa
pop
pushf
std
adc
leave
popf
stc
data16
repz
mov
push
pop
push
xor
mov
into
ss
xor
les
sub
push
adc
xor
ret
addr16
add
arpl
sub
scas
fisubs
adc
loope
sbb
push
sbb
and
cmpsl
fists
dec
movsl
adc
scas
or
lea
daa
sub
sub
test
in
and
cltd
sbb
cmp
hlt
aaa
int3
pusha
fmull
and
dec
mov
icebp
pop
imul
sub
xor
sbb
scas
out
pop
xlat
das
xchg
push
jmp
lods
dec
pop
shll
ja
setle
dec
or
pop
shrl
cwtl
mov
je
lods
xor
xchg
xchg
mov
loopne
fnsave
push
mov
dec
sub
mov
mov
loopne
mov
and
pop
xchg
pop
jb
test
notb
out
jno
scas
cmp
jmp
mov
flds
out
dec
fnsetpm(287
xor
les
pop
fmull
arpl
sbb
shlb
loope
call
jb
shld
sbb
les
cmp
shrb
xor
daa
cmpsb
add
pop
sub
xlat
pop
push
loop
int3
int
adc
xchg
shrb
bnd
dec
cmp
mov
or
push
or
movsl
fucomi
mov
test
ljmpw
dec
mov
lret
adc
ret
sub
dec
xlat
imul
jmp
xor
mov
push
dec
int3
xchg
lock
test
xor
fcmovnu
mov
or
ds
imul
clc
add
out
or
xor
popf
mov
xchg
mov
movsl
jge
int
mov
jns
iret
in
inc
repz
in
jb
xlat
sti
or
xor
sub
add
xchg
xor
sub
mov
and
push
adc
xor
pop
inc
mov
adc
fucomip
cmc
or
clc
sub
movsl
shl
push
mov
lods
cli
dec
addr16
jns
dec
push
daa
rol
mov
js
and
mov
jge
jnp
nopl
dec
mov
out
test
ret
imul
cmpsb
addr16
cmp
fdivrs
in
stc
cmpl
stc
shl
test
sbb
jg
ja
pop
mov
in
pop
pop
add
es
nop
movsb
cwtl
pop
in
aas
adc
jp
mov
or
mov
shl
das
mov
mov
mov
ja
stos
movsl
inc
aam
mov
flds
pop
fcmovb
loope
out
xchg
jns
inc
jp
lea
movsl
rorb
jl
mov
data16
mov
dec
mov
mov
aad
lods
and
mov
or
lret
orb
jae
outsl
ficompl
je
xchg
inc
das
int
rorl
mov
jp
aam
ficomps
cli
add
push
nop
or
xchg
aas
stos
loop
fwait
cmp
sar
addr16
arpl
mov
xchg
and
sbb
bnd
mov
mov
or
rorl
ficoms
adc
jecxz
call
iret
inc
repnz
xor
add
imul
add
xchg
sarl
add
jne
mov
aad
pushf
inc
out
pop
adc
adc
sub
jne
sub
sub
push
aaa
xchg
fldcw
sub
mov
mov
dec
out
iret
fs
push
punpcklbw
inc
mov
in
cmpsb
cltd
in
outsl
sti
frstor
in
mov
or
jns
mov
jns
pop
out
fldenv
movsb
mov
pusha
sbb
mov
fcompl
cmp
xchg
mov
inc
inc
mov
sahf
icebp
or
lret
jecxz
rol
sub
fnstcw
andb
mov
mov
xchg
sbb
cmpsl
add
leave
mov
inc
xchg
xor
arpl
rorb
fwait
push
test
xor
loop
cmc
out
push
adc
cmp
mov
hlt
jl
fldt
mov
inc
xor
add
mov
imul
mov
push
xor
data16
nop
sbb
dec
push
mov
icebp
add
mov
mov
push
pop
les
jmp
push
mov
popa
nop
dec
repz
gs
test
xchg
fistl
sbb
pushf
jg
popa
mov
mov
mov
push
les
mov
pop
fs
and
sbb
mov
lods
repz
lea
iret
movsb
and
jnp
sbb
imul
aas
ljmp
cltd
mov
sub
mov
and
insb
arpl
mov
adc
aaa
add
movsb
je
loop
add
xor
sub
sub
ficompl
or
xchg
fisttps
cwtl
hlt
lret
pop
dec
stc
xor
push
pop
add
clc
popa
adc
jae
and
es
orl
pushf
paddb
mov
ret
cmp
pushl
cli
mov
shlb
mov
shl
cmp
jge
mov
rclb
adc
je
mov
jno
fisttpl
mov
mov
dec
dec
lods
or
xchg
xor
icebp
mov
aas
data16
outsb
mov
jg
loopne
int
sbb
push
sbb
mov
ljmp
xchg
dec
inc
add
and
subb
clc
cmp
aas
pop
xchg
pushf
xor
pop
cmp
jae
stos
mov
lods
aam
popf
dec
mul
gs
mov
jp
mov
fmul
lret
jae
js
into
js
pop
enter
andb
out
test
popf
mov
and
nop
inc
movsb
in
mov
jae
mov
fwait
push
loope
mov
xchg
adc
adc
push
xchg
add
or
mov
adc
mov
and
inc
ret
xchg
out
repnz
outsb
inc
addl
mov
add
shll
pop
dec
rcr
add
jecxz
andl
sbb
sub
push
jno
sub
lea
push
sub
sbb
lods
or
mov
cmp
inc
loopne
xchg
mov
mov
int
jo
sub
ljmp
arpl
test
into
cmp
mov
or
cli
leave
mov
rclb
pop
mov
repnz
icebp
add
jecxz
cs
jge
iret
mov
fcoml
push
loopne
or
jmp
jne
jns
add
xchg
dec
dec
in
xchg
jno
xor
test
xorl
clc
jns
idivb
das
sbb
xor
dec
cmp
mov
mov
lock
pop
adc
cmpsb
cld
mov
push
into
dec
cs
mov
sbb
mov
or
mov
loopew
loop
nop
icebp
lahf
cmp
mov
sbb
fdiv
mov
lahf
dec
ss
call
test
mov
cwtl
pop
test
add
jmp
pop
sbb
push
push
popf
jp
dec
xor
out
push
jg
cmp
add
lret
rcll
insl
push
mov
fwait
loop
stc
cmp
fdivrl
adc
jge
xlat
iret
and
adc
andb
lds
jne
xchg
adc
dec
or
fwait
pop
cmp
and
lahf
fucom
add
add
ljmp
inc
nop
add
jnp
cmp
lret
orb
repnz
inc
mov
inc
and
sar
cmpsb
jge
xchg
orl
cli
cmp
cmpl
sub
iret
mov
out
das
jp
stos
push
mov
pushf
dec
stos
and
jb
inc
jmp
mov
xchg
xchg
sbb
xlat
ret
or
pop
hlt
int
sub
xor
push
or
add
popa
in
xchg
neg
fsubl
mov
out
pop
in
aas
xchg
mov
mov
test
or
fwait
popf
push
mov
mov
push
dec
arpl
je
push
xlat
into
iret
inc
and
shl
lea
lahf
call
lahf
sbb
sbb
dec
imul
rolb
ret
in
push
fiadds
stc
aam
xchg
repnz
add
adc
sbb
mov
rolb
sbb
xor
xchg
movsl
mov
inc
cmpsb
cmp
out
iret
dec
jmp
sub
inc
dec
add
popf
cwtl
sbb
mov
mov
jp
aas
mov
cwtl
outsb
ja
test
adc
clc
enter
mov
inc
dec
push
sbb
push
xchg
mov
cmp
push
mov
shl
mov
test
scas
in
mov
insl
xchg
cs
in
sbb
mov
pop
dec
aas
fidivrl
lahf
in
lods
jmp
hlt
pop
cmp
inc
and
dec
repz
cmp
cmpsb
loope
or
add
jecxz
enter
adc
xor
or
nop
push
jb
stos
push
orl
in
and
xchg
or
mov
mov
cmp
je
inc
xchg
cmp
lds
adc
xor
dec
out
rcll
mov
sbb
dec
mov
adc
inc
imull
jmp
sub
sub
adc
push
sbb
mov
iret
push
arpl
xchg
ss
int3
movb
jle
sbb
ret
adc
nop
cwtl
rol
stos
cmp
sti
pop
test
inc
iret
stos
rorl
pop
sti
pop
ljmp
insl
fldt
dec
sbb
leave
ss
mov
jo
lret
inc
add
pusha
lcall
icebp
mov
out
and
mov
mov
pop
xchg
aad
test
test
mov
lea
jne
adc
addb
mov
clc
outsb
inc
push
xor
rorl
dec
push
sub
jne
stos
int3
xchg
lcall
jo
or
dec
stos
aam
mov
je
inc
data16
dec
decl
lock
xor
cmp
xchg
dec
stos
out
shll
cmp
pusha
jmp
adc
mov
cmp
cmp
dec
lea
jp
out
ss
cltd
rcr
data16
push
sti
sbb
in
rcll
ljmp
push
imul
rorb
scas
mov
icebp
cmpb
jl
mov
and
push
lcall
jne
mov
xor
mov
or
js
pcmpeqb
add
push
dec
mov
andb
ret
jl
inc
cmp
cld
icebp
aaa
popf
xchg
notb
push
or
xchg
jge
push
lcall
js
jmp
je
test
aas
sbb
rcll
pop
sahf
repnz
pop
shll
into
jg
ss
cmpl
jbe
stos
xor
popa
sahf
inc
add
mov
push
xchg
mov
test
ja
test
sbb
cltd
pop
std
dec
jmp
repz
repz
arpl
sbb
xchg
orl
sar
loop
mov
xchg
popa
sbb
popf
sbb
loope
adc
mov
pop
ror
enter
cwtl
mov
rcll
inc
sbb
je
push
jbe
icebp
lahf
scas
xor
inc
movsb
aam
idivb
jnp
jnp
sub
fs
pop
dec
xor
lods
lea
inc
pop
insl
gs
cmp
es
test
jno
arpl
sbb
pusha
sub
adc
add
sub
clc
into
xchg
adcl
clc
push
pop
scas
jg
pop
jne
in
aad
or
jp
jnp
dec
fadd
mov
jb
mov
mov
mov
fists
adcb
shlb
mov
int
hlt
out
jbe
repz
or
cmp
rcrl
sahf
sarb
cld
and
daa
clc
jo
adc
rol
outsl
dec
push
loop
dec
pop
dec
js
repnz
gs
add
clc
xchg
and
lods
rol
out
inc
mov
xrelease
add
in
inc
shrb
pusha
or
mov
inc
mov
ljmp
sub
push
fwait
mov
insb
push
push
iret
jbe
mov
mov
rcrb
push
adc
sub
push
popa
adc
fistl
sub
nop
pop
ds
mov
loop
outsl
push
clc
gs
lds
xchg
outsb
sarb
adc
lret
push
mov
or
stos
subb
cmp
data16
pop
xor
mov
adc
push
lods
adc
fisttpl
adc
push
loope
inc
jl
jnp
nop
lret
jmp
inc
inc
push
ret
mov
xor
sbb
les
int
mov
fbld
movups
and
adc
ret
insl
lods
repnz
sbb
imul
push
pop
rcll
stos
dec
jne
mov
inc
inc
les
aaa
je
and
sub
out
ret
push
xchg
add
adc
push
push
or
sbb
push
je
loopne
test
test
add
mov
pop
mov
add
loop
repnz
xchg
stos
xchg
aaa
aaa
jbe
ds
and
jge
push
push
inc
js
leave
adc
jo
xchg
inc
sbb
sub
cmp
push
and
mov
xchg
in
lahf
xchg
hlt
inc
insb
or
lds
xchg
and
aam
mov
mov
cmp
xchg
xchg
fwait
add
lock
mov
jmp
fisubs
imul
push
scas
dec
test
ss
fbstp
int3
push
cmp
inc
rorl
mov
fisubl
adc
add
and
add
sbb
dec
lock
call
mov
inc
aad
lcall
xlat
fsubs
les
and
mov
add
out
pop
loopne
loopne
push
xchg
or
or
pop
xor
cmpsb
js
push
std
imul
hlt
pop
popf
rcl
jb
shl
filds
pusha
sti
clc
sub
mov
sti
movsl
xor
or
xchg
sbb
dec
gs
xchg
push
pop
loopne
mov
scas
mov
push
dec
sarl
in
pop
push
sbb
pop
loop
sbb
add
arpl
int
mov
and
and
cmp
xlat
add
movsb
sub
sbb
mov
inc
mov
jne
xchg
repnz
stos
pop
mov
sub
sbb
ja
sbb
pop
dec
mov
clc
shl
sub
cmp
or
or
xchg
jbe
add
lods
sarb
sbb
jg
xor
mov
adc
mov
pop
mov
push
xchg
push
xchg
mov
cmp
shll
dec
jnp
push
push
mov
les
dec
pop
push
cmpl
mov
or
sbb
cltd
push
ds
jns
or
add
or
xchg
pop
add
lock
daa
mov
jmp
cmp
in
push
cmp
loope
pushf
sub
cs
jp
fsubl
xchg
adc
call
jle
push
mov
aam
fadds
mov
or
clc
shl
shl
xlat
std
imul
ret
lods
sbb
mov
sub
push
add
mov
mov
cmp
popa
fs
cli
xchg
popf
xchg
pop
mov
dec
shl
or
adc
gs
test
cmp
fs
outsl
and
pop
push
movsb
loope
adc
std
lds
std
movb
ret
mov
js
jne
dec
out
pop
ret
or
stc
sbb
fcomip
push
insl
push
vucomisd
inc
dec
pop
mov
sbbb
push
daa
gs
movsb
xchg
dec
jl
cmpsb
fisttpl
ds
cs
scas
dec
mov
mov
loope
out
or
outsl
orb
or
push
stos
adc
mov
decb
enter
adc
shrl
adc
jo
jno
xor
lret
add
test
sarb
test
push
mov
loopne
aaa
push
lret
stos
icebp
sti
sti
xchg
inc
popa
lea
cwtl
or
fisttps
and
rep
push
inc
sub
push
push
jne
out
mov
scas
les
sbb
incb
mov
jns
and
les
add
jl
add
mov
nop
iret
adc
jbe
and
or
lea
sbb
add
sbb
rep
mov
sbb
xor
jo
or
jle
jp
or
cmp
xlat
push
jmp
push
fdivl
fchs
mov
clc
push
lock
shll
inc
push
test
popa
or
sub
pop
adc
sub
mov
adcb
add
add
lret
insl
and
xor
jae
das
in
loop
out
or
inc
cs
mov
ljmp
orb
push
sub
xchg
jno
pop
mov
jbe
push
and
xor
sahf
sarb
inc
push
aam
icebp
dec
inc
aaa
inc
mov
mov
dec
cltd
ds
jno
lds
lea
add
imull
ss
xchg
mov
push
clc
add
mov
xchg
cmp
sub
mov
testl
gs
xchg
push
xchg
in
clc
or
ffree
loop
dec
je
mov
push
xchg
sub
mov
daa
dec
stc
xor
aas
mov
ret
lret
lea
aas
or
test
xor
jl
aad
out
dec
inc
jp
pop
add
mov
aad
sub
sbb
leave
sar
int
sub
cld
jb
jp
xchg
cs
sub
dec
dec
cs
sbb
xlat
and
cltd
addr16
cmp
lret
sbb
dec
and
dec
bound
jmp
outsl
data16
mov
adc
aam
fwait
dec
sbb
jne
mov
dec
fisttpl
aaa
jns
inc
jge
loope
mov
aad
int
out
push
xchg
push
and
and
dec
dec
lahf
mov
or
pop
je
daa
add
pop
roll
xchg
stos
sbbl
iret
sarb
lods
jl
dec
dec
pop
and
pop
push
xchg
xchg
xchg
push
mov
aam
xchg
test
and
in
outsb
xchg
fmuls
adc
fsubl
mov
push
pop
jnp
adc
jl
rol
in
popf
out
repz
int3
push
pop
shlb
xor
push
xor
popf
hlt
jmp
hlt
or
enter
cwtl
loope
xlat
sub
leave
divl
dec
sbb
ljmp
repz
test
inc
dec
in
ret
adc
jl
bound
push
nop
jge
ds
mov
pop
mov
mov
pop
stos
andl
sub
lret
mov
fcmovnb
cs
inc
mov
or
push
stos
mov
fsts
adcl
cmpsb
and
push
adc
inc
xchg
repnz
sub
adc
or
pop
scas
adc
xchg
jle
pop
test
xchg
shrl
xor
sub
inc
xchg
xchg
mov
cmp
nop
sbb
and
mov
loop
push
or
insb
iret
jne
lret
inc
nop
jle
sub
mov
pushf
xchg
repnz
int
out
cmp
test
dec
xchg
cmp
mov
vpshab
cwtl
prefetchnta
inc
cltd
pop
push
sahf
dec
adc
sti
mov
inc
mov
loop
iret
xor
ret
dec
adc
xor
xchg
adcl
pushf
push
cmpsb
mov
outsl
dec
push
adc
or
inc
lret
jo
sub
dec
add
out
rclb
add
movsl
repnz
lock
out
outsb
ret
jne
fimuls
xchg
jmp
and
jno
jbe
jnp
push
lock
scas
pop
dec
int3
and
xlat
bound
cmp
sub
inc
jp
xchg
cmp
fisubrs
arpl
inc
stos
ja
add
outsl
daa
pusha
dec
fidivrs
cs
jecxz
stos
pop
inc
leave
lcall
lea
sub
subb
lea
sub
fs
dec
loop
sti
mov
jp
nop
push
mov
jne
arpl
dec
sbb
sbb
mov
jge
mov
xchg
pop
xor
mov
adc
add
outsl
xchg
adc
add
ret
cld
cmpsl
and
adc
xor
je
cmpsb
push
imul
and
dec
test
add
push
xchg
adc
sbb
cld
out
mov
pushf
unpckhps
cmp
add
rol
dec
je
vaddsubps
mov
pop
and
ja
mull
pop
add
mov
add
push
jle
out
lods
popa
inc
pop
shlb
mov
or
mov
imul
inc
daa
pop
and
pop
js
adc
subl
aad
sub
dec
mov
push
outsb
xor
mov
mov
pop
dec
inc
mov
aad
and
inc
mov
and
or
cltd
movsb
pushw
mov
and
push
jge
aam
pop
cld
sub
pop
push
or
push
sub
insl
fwait
fwait
outsl
imul
sahf
push
and
ds
aaa
int3
mov
jae
cmc
arpl
mov
xchg
das
sti
jmp
dec
andl
decl
loop
fsubrs
fstps
inc
push
call
jae
stc
aad
mov
data16
push
mov
dec
arpl
mov
shlb
sbb
xor
jns
aas
loop
xlat
lods
stc
in
loopne
out
gs
mov
lods
cmp
mov
repz
lret
std
mov
cmpsl
jb
sti
or
imul
flds
dec
lods
ficompl
clc
and
dec
jb
and
dec
sub
sti
or
xchg
fldt
pop
shrb
sub
mov
scas
stc
push
xchg
test
lcall
pop
push
ret
cmp
and
mov
iret
jecxz
jp
jo
adc
pop
out
and
cmp
and
lahf
shr
icebp
repnz
cmpsl
shrl
je
jmp
mov
das
pushw
and
repnz
push
xor
aam
dec
out
push
cwtl
push
leave
es
ja
sbb
addr16
mov
cli
stos
mov
add
pop
fnstsw
dec
gs
js
test
xor
stos
jo
addr16
push
shlb
mov
add
push
push
xchg
enter
rcrb
cmp
cltd
shld
test
pop
mov
adc
adc
ror
cli
test
loopne
or
scas
js
pop
jecxz
lds
inc
mov
jae
cmp
add
and
and
call
pop
mul
icebp
jbe
xchg
pop
inc
xchg
push
adcl
jl
data16
rorl
xor
mov
std
jg
or
add
jbe
pop
add
jle
roll
push
sbb
cli
lea
cli
push
sub
rcll
cmp
cltd
std
xor
sbb
lret
insb
push
mov
repnz
mov
sub
punpcklbw
out
push
cli
jbe
push
push
aas
dec
popa
roll
out
lock
sbb
dec
sub
and
jbe
and
xor
lret
cld
inc
pop
sbbb
frstor
ficoml
rcll
jmp
data16
repz
push
xor
out
mov
negb
insl
divb
cld
pop
cld
xlat
sti
sbb
lds
sahf
sub
sub
ljmp
sbb
xchg
stos
icebp
flds
imul
and
mov
test
cld
mov
adc
or
out
jns
mov
mov
pushf
mov
dec
insb
sub
mov
dec
orb
mov
inc
popa
rorb
mov
inc
pop
scas
jae
mov
sub
mov
xor
push
cli
jle
arpl
fnsave
test
out
xchg
les
mov
sbb
add
inc
incb
clc
jmp
loopne
mov
stos
sub
mov
xchg
ret
xor
insb
out
and
push
sbb
lret
add
stos
mov
loope
or
and
rcrl
adc
jge
std
fistps
ljmp
pop
pop
int
add
test
pop
mov
jb
mov
mov
jno
mov
inc
imul
add
cmpsb
cli
fistpll
ret
iret
cmp
push
mov
out
or
dec
je
cmp
cmp
jno
andl
ror
pop
mov
imul
and
adc
inc
xchg
dec
sub
adc
push
ss
sarb
cmp
ljmp
out
fs
xchg
std
scas
int
xorb
enter
sub
adc
mov
movl
and
fwait
scas
imul
fdivl
call
and
cmp
or
pop
cwtl
lcall
pop
out
and
arpl
mov
test
fcmovne
push
push
cmp
movsl
imul
mov
icebp
int
bound
and
sti
mov
dec
jbe
sub
mov
xchg
ja
or
mov
hlt
bound
out
xlat
mov
fidivl
adc
jmp
push
jle
adc
movsb
enter
mov
inc
jb
cmp
out
cmp
repz
xor
jge
divb
push
lea
mov
add
and
ficompl
lret
push
lods
int
pop
push
xchg
rcll
cmp
insl
mov
cwtl
cs
out
in
ret
out
jae
popf
hlt
or
sub
mov
sub
sub
cld
or
pop
sbb
lret
jae
xor
je
ss
lahf
dec
ja
and
fsubl
and
decl
lock
aas
add
push
add
test
dec
dec
jno
gs
ficoml
mov
and
movsb
call
sti
add
xlat
sub
fidivrl
push
movsb
icebp
inc
rcrl
or
in
or
into
inc
jo
data16
das
inc
xor
movb
mov
xchg
push
cmp
and
jb
dec
pop
out
aaa
mov
pushl
data16
xchg
cwtd
mov
jbe
jecxz
mov
mov
popa
sahf
mov
mov
fmulp
or
mov
pop
cmp
cmpsb
loopne
bound
das
cmp
jg
jne
add
sbb
adc
das
push
fs
inc
add
addr16
xor
imul
and
mov
jbe
sub
insb
pop
js
and
mov
and
in
add
cmp
xchg
scas
and
cmc
or
pop
mov
push
jae
inc
jno
lret
push
in
outsl
mov
cmpsb
or
mov
adcb
dec
xchg
jg
fcomps
test
xchg
lods
jle
fimull
jmp
clc
ljmp
inc
jbe
mov
dec
xor
adc
pop
test
jg
mov
lock
dec
inc
adc
xor
adcl
xor
adc
lret
pusha
xor
inc
cltd
imulb
pop
xchg
push
in
inc
shl
sbb
push
mov
xor
inc
stc
test
fsts
fucom
mov
fwait
popa
ds
dec
xchg
lea
fld
enter
mov
adc
inc
arpl
or
mov
xor
jno
sti
jmp
jl
or
sub
xchg
nop
lret
pop
insl
xor
dec
fimull
mov
dec
imul
mov
xchg
pop
cmc
adc
add
stos
pop
or
popa
sbb
inc
in
or
loope
test
stos
push
xchg
mov
add
inc
sbbb
sub
loopne
enter
andl
rcll
in
fucomip
jo
push
and
leave
lahf
cs
lret
push
xor
xlat
jecxz
push
into
shlb
adc
jp
sbb
push
out
sub
adc
ljmp
push
jg
jns
sub
sub
ficomps
test
pop
xchg
or
pop
popa
out
push
fidivrl
pop
cmpsl
inc
outsb
sub
add
adc
pop
mov
out
and
dec
mov
sbb
push
adcl
jb
pop
or
pop
sahf
enter
or
xchg
ror
jns
arpl
subl
mov
jae
mov
scas
jg
mov
ficoms
add
cli
xor
in
sbb
cmp
jmp
sub
pop
push
push
int
fstl
or
clc
sbb
test
gs
shlb
cmp
dec
add
or
add
loope
idiv
xchg
dec
mov
xor
sub
cli
or
xor
mov
jmp
xorl
sbb
lea
insl
xlat
jnp
stos
inc
and
in
cltd
lods
add
enter
mov
test
test
pop
and
xchg
jne
jne
cmc
jle
lret
test
push
adc
push
test
sbb
jae
mov
cmp
sub
hlt
push
lcall
fadd
jo
jns
mov
push
lcall
loop
mov
out
jmp
iret
sarb
stc
stc
bound
adc
inc
jns
xchg
push
scas
mov
movsl
cmp
sub
lock
mov
inc
add
aas
fwait
mov
mov
ja
imul
movsb
xor
mov
push
mov
pop
adcl
dec
outsl
movsb
sub
addl
popa
sbb
sbb
fwait
out
mov
scas
adc
out
insl
aaa
xor
jmp
inc
jl
popl
adc
mov
pop
shlb
jnp
xlat
call
dec
sarl
aam
out
icebp
cmpsl
aam
and
cmpsb
push
aaa
hlt
fidivrl
notl
pushf
pop
je
pop
jae
pushf
push
jmp
and
cmp
or
cmp
cmp
push
inc
lret
dec
shlb
mov
or
mov
jmp
jge
int
test
cmp
es
sbb
inc
les
bound
sbb
js
outsb
jno
pop
int
in
dec
dec
add
push
add
inc
add
sbb
xchg
into
fldt
cmpsl
iret
cmpsb
inc
jle
jl
je
xorb
leave
ja
xchg
inc
mov
shrl
or
aas
leave
jmp
xchg
jo
mov
sbb
dec
aas
imul
xchg
push
pop
pop
mov
mov
arpl
clc
push
xchg
cmc
cmp
jecxz
mov
xchg
adc
and
cmpb
jp
and
fnstcw
movsb
or
imulb
bound
fsts
and
mov
aad
push
movsb
hlt
nop
push
inc
aas
daa
icebp
mov
mov
dec
les
cmp
mov
stos
pushf
out
inc
jg
mov
and
cmpsl
mov
gs
jae
lret
data16
ds
xchg
pop
insb
icebp
repnz
int
repz
jmp
xor
xchg
outsl
pop
adc
lcall
fildl
push
xchg
ret
out
sarb
repnz
adc
dec
enter
dec
sahf
add
mov
cmp
pop
adc
icebp
mov
add
pop
adc
pop
mov
mov
lret
in
push
movsl
mov
inc
push
test
mov
jle
pop
data16
mov
inc
pop
dec
push
and
sbb
xchg
sbb
jle
xchg
roll
rcrl
dec
dec
mov
push
rcll
dec
cmp
in
call
or
mov
cmpsb
test
cmpsb
jg
inc
fwait
jb
imul
aaa
int
mov
lahf
and
or
cmpb
gs
in
sub
stos
imul
fdivs
popl
mov
sbb
jg
mov
pop
mov
loopne
jnp
xor
outsb
fsts
xchg
fwait
push
xlat
mov
lret
xchg
xchg
dec
xor
out
xchg
pusha
mov
cld
test
shll
jmp
sti
ljmp
sub
sar
sbbb
inc
test
sbb
repnz
mov
cmp
or
fs
cwtl
pop
lods
push
cwtl
mov
cs
adc
mov
mov
cmp
sbb
xor
adc
sarl
or
lret
scas
js
mov
pop
stos
xor
mov
cli
sbb
lds
pop
loope
mull
sbbb
pop
arpl
mov
lret
test
popa
add
inc
add
in
adc
cmp
cmp
stos
xchg
inc
sub
imul
pop
xchg
bound
cmpsl
xor
mov
inc
rorl
xor
pop
add
test
cmp
out
fistpl
test
divb
lods
sub
cmp
dec
in
cmp
rol
fmul
insb
shll
sub
nop
dec
mov
cmc
dec
pop
dec
cmpsb
in
aaa
imul
insb
push
adc
push
aam
sbb
dec
lret
out
je
dec
mov
mov
mov
dec
or
insb
ret
imul
push
lret
fisubl
jl
popa
mov
outsl
shrl
shr
xor
faddl
pop
xchg
xchg
outsl
les
int3
fnstcw
stos
in
movsb
sarb
lret
push
cli
mov
cmp
imul
xchg
scas
and
inc
fimull
int
add
outsb
outsb
sbb
mov
mov
dec
xchg
ffreep
mov
loope
pop
out
cld
shl
pop
sub
cld
mov
push
pop
int
push
arpl
and
loop
fdivr
lods
addr16
ljmp
dec
sti
xlat
dec
mov
xor
daa
pop
aas
xor
orb
int
cmp
lock
rolb
fdivrs
popf
sub
in
imul
inc
sub
adc
sub
and
in
in
fnstcw
adc
adc
pop
js
aaa
sub
mov
imul
or
sbb
mov
mov
mov
jmp
fiadds
xchg
or
dec
mov
addl
adcb
in
jbe
ljmp
enter
xchg
or
nop
inc
cld
sub
mov
jbe
jno
inc
lahf
sub
outsb
sub
addr16
mov
push
adc
in
dec
mov
xor
movsl
jne
adc
xchg
dec
and
idiv
cmpb
and
sbb
gs
ljmp
mov
fidivs
sub
jge
or
imul
lods
fbstp
lahf
inc
add
mov
inc
das
daa
mov
and
sub
lret
popa
xchg
les
sub
dec
fistpl
push
pop
add
lds
or
jb
cmp
flds
ds
cli
stos
jmp
dec
lea
or
inc
mov
or
loop
and
leave
jecxz
or
icebp
adcl
xchg
mov
addb
das
daa
out
push
fisubrl
in
xor
push
adc
dec
lret
push
adc
bnd
and
jle
aas
add
jne
dec
lods
out
push
cmp
int
outsb
icebp
aam
xor
sub
je
cmp
mov
mov
ja
xchg
cmpsb
cltd
jno
fldt
mov
inc
in
aas
sub
or
fstpt
add
lock
arpl
mov
sbbl
mov
ds
in
xor
pop
test
fmulp
adc
pop
push
in
scas
rcr
jno
stc
pop
ds
or
push
in
xchg
cmp
jle
xchg
cs
test
fcmovnu
outsb
mov
mov
mov
aaa
pop
xchg
cs
ficomps
adc
adcb
sub
stos
sti
or
aas
sub
outsb
iret
popf
iret
jbe
aad
sbb
cmp
adc
cltd
rorl
repnz
stos
decl
pop
add
jnp
sbbb
jae
stos
pop
add
dec
jnp
popa
int
pop
ret
sub
dec
cvtps2pd
gs
inc
into
cwtl
push
mov
mov
pop
mov
movsb
js
adc
mov
sbb
movsb
mov
or
push
and
repz
testb
sbb
lods
sub
sbb
xor
loop
nop
pop
es
cli
sbb
add
xor
cmpsw
pop
stos
add
pop
nop
mov
enter
or
xchg
in
out
push
and
sbb
roll
mov
test
xorl
in
jge
sbb
jns
inc
mov
test
cmc
notb
inc
out
cmpsb
test
insb
in
mov
shlb
or
cmp
sub
or
mov
xchg
xlat
jne
and
jae
mov
sahf
icebp
or
pop
outsl
fs
mov
xor
push
fdivrs
imul
pop
mov
test
xchg
jmp
leave
faddl
gs
mov
mov
sbb
or
xchg
pop
stos
pop
xchg
xchg
mov
dec
outsl
out
jbe
dec
insl
jp
fistpl
cmp
and
pop
and
leave
mov
jge
jae
jecxz
xor
fildl
sub
lods
add
mov
mov
cltd
aaa
mov
jmp
lods
push
sarl
jno
ret
mov
mov
subb
inc
jne
bound
mov
repnz
xchg
mov
mov
xrelease
mov
loope
hlt
mov
outsb
icebp
lret
stc
out
sub
and
pop
pop
xchg
enter
popf
lret
and
test
and
test
fldt
adc
adc
out
cmp
xlat
dec
into
dec
add
scas
pop
or
out
lea
cld
push
call
test
mov
scas
jnp
out
nop
mov
mov
int3
inc
dec
and
fst
fwait
xor
dec
jg
cmp
mov
les
loop
sub
aas
incl
call
and
mov
ret
je
mov
cmp
adc
icebp
inc
out
cmp
inc
std
pop
adc
fisttps
and
std
sbb
ret
dec
divl
xchg
and
dec
add
jge
loope
xor
mov
nop
cmpsb
ret
clc
aam
and
sub
outsb
inc
adc
or
pushf
mov
lds
push
cmp
mov
repnz
push
adc
sub
data16
imul
not
andb
iret
int
lea
jmp
out
ss
es
cmp
scas
lods
iret
push
xchg
mov
ss
shrl
pop
jo
scas
fwait
xchg
push
jp
xor
and
xchg
cmp
mov
push
lcall
pusha
int
fsub
cli
pop
xchg
sbb
xchg
je
test
cmp
in
ljmp
or
and
imul
loopne
out
dec
sub
dec
xchg
xor
test
sbb
movsl
es
int3
dec
pusha
or
jmp
dec
lret
push
mov
cli
cmp
xor
insb
xchg
orb
add
push
mov
pop
mov
fdivs
sbb
cmp
and
and
lods
xor
pop
push
out
lods
js
aas
fcmovnbe
xchg
add
mov
fs
inc
fchs
inc
es
ret
enter
jbe
notb
lret
stos
rolb
in
pop
xchg
leave
or
gs
sub
sbb
inc
and
xchg
pop
mov
stc
jb
add
push
faddl
sub
shlb
mov
jbe
lcall
mov
sbbl
or
cmp
pop
jbe
mov
stos
sti
or
inc
js
jecxz
notl
dec
test
popf
jg
cmpl
out
pop
nop
xor
add
mov
repnz
xchg
sub
pop
movl
jb
sub
sub
dec
mov
stos
scas
push
or
test
cwtl
and
inc
repz
loop
scas
adc
call
push
rclb
fnsave
add
rclb
ret
lds
jp
inc
les
xchg
mov
jmp
jno
pop
xlat
ja
lock
popf
inc
and
cmp
addb
pop
cmp
xchg
jmp
lea
sub
sahf
mov
xchg
mov
das
out
nop
shrb
mov
add
push
inc
xchg
gs
mov
ja
ss
gs
mov
jae
jno
les
loopne
adc
and
jge
jl
pop
pop
add
lret
gs
scas
ja
loop
xor
cmp
push
aam
fcmovb
mov
stos
mov
push
ficompl
in
inc
sub
insb
pop
pop
fisttps
inc
lods
out
in
or
cmc
cwtl
dec
shlb
bound
inc
hlt
fcomps
inc
imul
cmpsl
add
jmp
add
jecxz
cli
lds
sbb
dec
lock
sub
dec
rcll
das
push
mov
dec
lds
jmp
mov
and
dec
mov
mov
movsb
mov
hlt
imul
mov
shr
pop
jecxz
xor
mov
sbb
push
mov
and
dec
fistps
or
rcr
imul
mov
inc
and
pushf
je
jb
ss
mov
sub
in
xlat
xchg
movl
mov
fs
adc
xchg
popa
mov
inc
out
jb
int3
push
push
ret
cmp
pop
movsb
rol
inc
addr16
mov
cmpl
sub
sub
push
lcall
sbb
movsl
fistpll
fs
daa
je
or
popa
idiv
mov
lcall
rclb
fstpt
cs
test
xchg
jmp
jge
cmc
imul
jns
mov
dec
mov
add
mov
xchg
jp
inc
out
addr16
mov
dec
push
outsl
add
ror
and
iret
rep
mov
cli
ljmp
arpl
add
xor
cmp
mov
push
add
fcompp
adc
pop
mov
in
lods
insb
jb
mov
mov
push
lods
lea
push
ficoml
shrb
mov
pop
lods
cmp
ja
ds
js
jmp
stos
fstl
mov
push
and
mov
fucom
out
mov
and
repnz
cld
aaa
daa
stos
not
dec
js
jle
popa
dec
pop
sldt
stos
add
cmp
xchg
xor
out
decb
cmp
sub
sbbl
dec
mov
adc
enter
mov
sbb
lods
insb
sub
adc
xor
mov
jno
decl
repz
and
aad
imul
hlt
pop
pop
stc
cmp
in
movb
sub
adc
aam
mov
push
push
fs
adc
add
mov
std
rol
in
sbb
divl
dec
add
jbe
push
adc
insl
bound
push
int3
mov
and
into
xchg
rcrb
jae
or
popl
push
mov
dec
dec
lahf
mov
lret
sbb
cwtl
push
and
mov
mov
fmull
cmp
les
int
add
notb
pushf
aas
andl
adc
popf
int3
test
lds
lea
adc
les
popa
push
ja
adc
subb
cmpsl
imul
repz
lret
aad
mov
push
pusha
out
push
mov
mov
jge
repnz
or
in
pop
ds
das
lcall
cmpl
out
testl
adc
imul
mov
or
jle
int3
je
xchg
fsts
adc
lcall
mov
in
iret
xlat
push
nop
push
push
sahf
ss
dec
in
jl
xor
pushf
cmpsb
add
out
mov
jns
cmc
cltd
cmp
jg
jbe
push
push
push
mov
loope
adc
push
repz
lret
mov
rorb
push
dec
pop
dec
xor
push
cltd
and
daa
and
pop
pop
xchg
out
push
push
sahf
xor
stc
pop
repz
enter
lock
xor
xor
jp
inc
lock
sub
and
lods
lret
xor
dec
imulb
push
pop
jp
jge
cli
mov
dec
jnp
lahf
or
dec
dec
push
loope
mov
sub
lods
pop
push
add
pop
data16
add
lods
xchg
pusha
pop
inc
icebp
fcomps
mov
jmp
nop
xorl
scas
fdivl
cmpsb
xor
fldenv
dec
aas
pushf
xlat
jb
addl
mov
mov
xchg
adc
add
dec
add
inc
shlb
and
aaa
sbb
mov
mov
push
and
stos
sbb
add
pop
or
mov
xchg
add
daa
push
pusha
clc
add
adc
pop
xchg
xor
dec
dec
stc
cmp
aas
push
std
lods
cmp
jecxz
clc
repnz
xchg
adcl
adc
jb
add
or
cli
adc
test
mov
scas
idivl
dec
movsl
inc
or
dec
add
sbbl
jmp
jl
repz
xor
pop
push
mov
cmp
pop
lcall
adc
jne
inc
jns
add
imul
les
dec
push
adc
repz
dec
xor
inc
roll
out
mov
fsubl
jne
add
cmp
dec
cld
in
lea
mov
cmp
bound
lahf
pop
jge
and
jns
fs
mov
push
mov
loop
stos
ret
mov
cld
inc
mov
pop
fldcw
mov
cmp
int3
movsl
mov
arpl
decl
or
into
pop
mov
roll
xorl
les
in
and
push
add
pop
les
js
lahf
sbb
lock
repnz
jae
jg
dec
inc
mov
cmp
push
mov
pushf
pushf
int3
push
shrl
push
into
hlt
or
jle
mov
ja
xchg
mov
in
jg
fcmovb
in
jge
out
mov
movsb
push
cmp
pop
rolb
lock
sbb
push
mov
enter
sbb
in
out
or
les
jns
xchg
jno
scas
sbb
xchg
push
int
ljmp
outsb
mov
loope
lods
push
and
jns
xor
iret
mov
jmp
inc
fsubr
pusha
sbb
mov
test
aaa
jne
lret
mov
fdiv
loopne
push
inc
cmpb
dec
cmp
test
xor
adc
sub
cltd
out
pop
loop
jl
inc
iret
int3
mov
filds
add
push
aad
adc
int3
fiadds
ja
jmp
ja
ss
jge
xor
js
sbb
fcmovnbe
xor
adc
in
dec
xor
iret
rorl
mov
cwtl
mov
mov
lcall
sbb
xchg
inc
aaa
pop
dec
int
rolb
mov
inc
cltd
ds
push
cwtl
pop
movsl
mov
jo
xor
jbe
cmp
iret
cmp
rcrb
hlt
sub
adc
movsb
cmp
int
jo
mov
push
lods
jo
mov
mov
std
pop
icebp
push
pushf
and
and
and
dec
cltd
and
jae
out
out
jb
js
jmp
dec
jge
mov
cmp
aas
repnz
xchg
inc
and
cltd
add
daa
add
rcrl
ret
push
sbb
inc
mov
and
enter
add
adc
pop
push
aad
popa
sbb
mov
push
mov
sti
in
sub
ljmp
repz
int3
pop
xor
push
out
pop
xor
ja
imul
aas
mov
mov
icebp
push
lahf
lcall
adc
loope
mov
jmp
lds
pop
jne
pushf
mov
aad
stos
adc
xor
icebp
and
daa
push
push
insl
daa
cmp
or
xor
nop
mov
pop
mov
daa
mov
addl
xor
add
stos
jne
insl
pop
repnz
test
mov
mov
bound
sbb
loope
mov
bound
dec
mov
sti
aas
lcall
and
cmp
sub
cli
out
mov
mov
dec
jge
inc
mov
fnsave
mov
push
out
movsb
scas
jl
ret
pusha
pop
test
fcmove
popa
pop
orl
adc
dec
mov
mov
subb
sbb
arpl
mov
mov
rcrl
popf
nop
mov
aad
lock
rol
adc
daa
loopne
pop
test
ja
push
andl
shl
loop
das
inc
inc
mov
push
jo
popf
into
getsec
inc
dec
repnz
lods
inc
xchg
in
iret
dec
xchg
jmp
test
test
orl
mov
mov
adc
mov
in
int
test
push
sub
mov
shll
push
lods
aam
add
mov
mov
inc
and
push
pop
mov
and
add
inc
test
dec
xchg
pop
testl
dec
ss
jb
bound
cwtl
je
mov
add
into
mulb
mov
popf
push
sbb
in
shll
pop
lods
pop
push
fsubs
xchg
dec
clc
popf
mov
cmpps
mov
nop
lahf
cltd
pop
mov
push
lock
fadds
sbb
popf
iret
fadd
add
mov
mov
shr
xchg
push
or
addb
enter
push
and
sub
and
pop
mov
pop
scas
adc
subl
mulb
outsl
and
scas
lcall
mov
dec
jp
dec
dec
roll
fiaddl
push
setne
cli
or
xchg
rcll
sahf
and
jb
mov
subb
add
ljmp
push
sbb
je
or
movb
insb
imul
jo
aas
and
mov
inc
sub
push
rorb
push
test
jle
dec
sub
dec
out
clc
call
test
push
dec
inc
push
mov
aam
fldenv
and
mov
push
adc
in
jmp
mov
jl
inc
mov
and
int
fdivp
sub
jns
inc
dec
xorb
dec
mov
inc
dec
adc
jecxz
pop
jle
jb
in
cmp
mov
sub
or
inc
cli
inc
arpl
cmp
js
xchg
mov
lahf
not
decb
fs
xchg
outsl
xchg
outsb
aam
imul
push
inc
push
ja
mov
out
shl
and
mov
jo
ja
jmp
adc
sti
jl
add
inc
into
cmpsb
jns
test
rcrb
inc
test
xchg
cli
pushf
ret
pop
sbb
adc
push
lcall
adc
mov
scas
mov
sub
cmc
cs
pushf
lahf
movsl
in
lea
and
adc
adc
call
out
sbb
fdivs
and
mov
insl
jmp
push
dec
sub
add
push
imul
roll
mov
lds
mov
fwait
pop
mov
mov
pop
ficoml
pusha
mov
aas
inc
dec
in
dec
repz
test
std
lret
add
xchg
pop
ret
out
xor
gs
add
js
mov
mov
pusha
cmp
mov
inc
mov
inc
xor
popl
and
jne
jae
das
in
daa
sbb
sbb
pop
xchg
idivl
rorb
inc
stos
cmpsl
mov
add
sub
pop
in
stos
movsl
test
mov
xor
fnstenv
and
and
hlt
pop
mov
scas
xor
inc
call
mov
pop
call
push
pop
jg
and
leave
gs
push
jns
lret
in
mov
adc
ret
xor
std
adc
sbb
aad
cmp
xlat
adc
or
add
inc
add
sar
mov
xor
adc
arpl
add
loope
adc
xchg
mov
lcall
jnp
jno
cmp
and
jnp
dec
std
ja
adc
cmp
xchg
movsb
clc
adc
inc
and
ja
sbb
push
mov
insb
pop
test
gs
js
sti
bound
repz
clc
cld
sbb
jae
push
adcb
ds
mov
mov
push
out
mov
or
loope
or
movsl
hlt
lcall
mov
push
xchg
dec
push
mov
sub
sub
aaa
mov
jne
int
test
jp
lahf
out
xchg
mov
mov
subl
outsl
jno
je
xchg
int3
cmp
in
clc
insb
xor
sar
or
xchg
xchg
lcall
lock
add
mov
mov
adc
int
adc
sbb
push
xchg
movsb
sub
fwait
mov
jno
std
popf
pop
add
cmp
ror
push
cmpsl
and
nop
dec
daa
xor
repnz
xchg
adc
into
push
imul
push
aam
cmpsl
push
xor
or
ds
jl
out
scas
and
or
stc
call
cmp
loop
clc
shlb
outsl
lcall
sbb
inc
xlat
add
mov
adc
dec
iret
int3
stc
pushl
lods
test
cltd
add
sub
jp
mov
dec
cmpsb
loope
sub
arpl
icebp
test
jae
jno
fnstsw
imul
lock
or
mov
dec
fs
jns
lret
std
mov
cmc
arpl
aas
lahf
pop
dec
push
dec
dec
push
push
clc
jbe
shl
inc
xor
repnz
fisttpl
pop
mov
cmp
mov
lea
sbb
dec
mov
lahf
mov
and
xchg
push
bound
mov
es
imul
das
xor
mov
jno
icebp
cli
jbe
add
dec
mov
pusha
stos
pusha
mov
aam
stos
call
mov
inc
sub
adc
int
sti
push
sub
dec
cmpsl
in
test
jl
leave
inc
mov
push
inc
lods
mov
adc
loopne
sbb
orb
lret
sub
int
es
inc
mov
jmp
and
repnz
out
enter
adc
xor
sbb
xor
aam
shll
mov
xchg
cld
mov
test
dec
stos
xchg
jecxz
dec
cld
or
mov
sub
pop
push
cwtl
aas
test
adc
andl
ret
mov
loope
xor
fld
inc
mov
push
push
scas
xchg
negb
sbb
jmp
mov
xchg
movl
test
aas
stos
mov
pop
inc
adc
movsl
adc
stos
movsb
aam
dec
add
pushf
push
add
dec
dec
cmp
loope
clc
outsl
imull
mov
push
dec
add
pushf
shl
mov
xchg
lods
sbb
cmpsl
lcall
and
les
aas
jno
nop
out
jge
in
jecxz
xor
repz
jns
push
xor
pop
xchg
xchg
in
fistl
arpl
dec
xchg
negl
or
insl
stc
fnstsw
sbb
into
adc
jae
cltd
cmc
sub
adc
pushf
mov
mov
pop
adc
fistpl
rcr
pushf
xor
aad
jb
in
pop
and
fisubrl
mov
fs
fld
mov
push
dec
dec
add
cmpsl
int
sub
or
ss
and
stos
mov
sub
in
test
mov
leave
outsl
push
stc
jns
push
xchg
mov
jmp
xchg
jp
push
repz
imul
mov
fbstp
cmp
jns
push
orl
xchg
add
push
fdivr
imul
fistpl
aam
sub
dec
jmp
mov
scas
adc
fsub
int
fcomip
cmpsl
jb
aaa
xchg
pop
pop
mov
mov
out
add
pusha
lds
push
mov
sbb
ja
je
mov
inc
lcall
inc
ret
test
xchg
and
push
add
loope
in
sub
dec
mulb
shrd
cltd
repz
in
cmp
xchg
jns
mov
lods
mov
mov
bnd
out
cmpsl
pop
jns
sub
pop
mov
clc
sbbb
ds
hlt
jo
xchg
fadds
push
mov
arpl
je
pop
push
insb
lds
mov
sbb
and
mov
inc
bound
movsl
mov
mov
outsb
pop
adc
cmpsl
xchg
sub
mov
andl
or
jns
push
icebp
xchg
jns
sbbl
sub
ljmp
pop
pushf
das
daa
add
data16
cmc
popf
jmp
rorl
lea
mov
add
sub
push
add
inc
insl
sub
insl
in
cmp
lods
lea
lods
ja
jmp
jmp
lea
call
xor
xchg
lret
mov
cmpb
pop
mov
adc
push
mov
xor
xor
xchg
add
cmp
push
fldcw
fidivs
jb
push
pop
dec
mov
ja
or
and
ret
jno
fidivs
inc
sbb
mov
jae
pop
dec
push
pop
cmp
push
sub
in
and
cli
mov
xchg
in
shlb
adc
fimuls
push
inc
push
sbb
fmull
mov
dec
lods
es
xor
adc
test
or
in
clc
jne
clc
pop
lods
mov
cmpsb
lahf
ljmp
test
clc
pop
pushf
testl
mov
adc
xor
shll
sub
pop
arpl
shrb
cmc
xchg
out
arpl
pop
faddl
pop
push
xchg
cmc
stc
scas
mov
jg
cmp
outsb
out
cltd
and
jb
int
dec
lcall
mov
fldcw
shlb
pop
out
cli
mov
out
hlt
inc
neg
dec
lret
loop
pop
mov
adc
xchg
dec
xchg
loope
xor
push
jbe
xchg
push
pusha
mov
in
push
gs
lahf
lds
or
cmp
fsubr
sbb
mov
jne
dec
or
mov
fbstp
repz
ljmp
aad
pushf
test
mov
mov
dec
aad
mov
roll
hlt
push
mov
xchg
test
or
pop
inc
out
ja
sub
adc
loope
mov
bt
push
andl
movsb
sub
push
nop
int3
stos
mov
sbbl
push
or
mov
ret
jnp
enter
xor
test
cld
inc
mov
mov
data16
xchg
test
hlt
in
ss
or
or
cmp
inc
js
add
mov
mov
mov
jae
cmpsl
inc
xorb
jg
add
push
dec
fidivl
dec
lret
inc
jmp
dec
cmp
dec
and
in
cwtl
mov
push
fcmovnb
inc
ret
cmp
dec
pushl
outsb
shrl
push
cmp
cmp
mov
sub
pop
jecxz
fistpl
xchg
jle
jb
hlt
xchg
jg
stc
jbe
push
adc
js
mov
inc
add
inc
push
cmp
mov
dec
adc
add
mov
repz
mov
movsb
lret
and
mov
rcl
int
pop
xchg
fwait
scas
sub
jmp
adc
test
and
fstpt
push
cmpsl
inc
in
call
push
jle
cmp
orb
stos
test
movsl
call
cmp
int3
lock
mov
and
sub
orb
mov
movsb
icebp
mov
add
adc
or
mov
call
mov
test
nop
stos
shrb
or
or
cli
or
sbb
dec
dec
dec
rorb
sub
mov
mov
pop
in
pusha
lock
fstpt
or
push
and
jmp
leave
mov
popf
push
fistps
and
imul
psraw
add
adc
andb
gs
or
jmp
mov
arpl
dec
in
outsl
xchg
xor
xchg
jno
lret
dec
mov
xchg
jp
mov
mov
enter
xlat
xor
mov
int
pop
xchg
or
cmp
adc
or
jp
sbb
mov
pop
sbb
dec
mov
pop
push
mov
out
inc
aas
outsl
repz
aaa
inc
or
fs
jbe
out
xchg
gs
mulb
lahf
push
or
test
and
fisttps
jns
mov
ja
inc
daa
fisttpl
out
lock
jbe
sub
mov
or
mov
dec
fimuls
push
je
sub
mov
mov
jmp
jmp
das
shlb
outsl
jl
das
hlt
loopnew
xorb
pop
ja
cli
sahf
fstl
mov
xchg
cltd
xlat
cmpsb
std
and
inc
aaa
in
dec
fwait
int
popa
add
paddd
sub
repnz
jmp
jle
xchg
ja
in
stos
stos
cs
push
fs
arpl
mov
and
mov
jle
test
or
jo
sbb
jnp
sbb
push
je
and
push
jl
xchg
xchg
sbb
xchg
fnstsw
fst
or
fisttpll
lret
fs
or
xchg
jl
cmp
mov
int3
sbb
mov
cmpsl
jae
mov
test
inc
sbb
sub
xor
movsl
lret
insb
orl
ds
test
or
dec
aam
lret
std
gs
seto
or
add
sub
jge
call
stc
xor
jno
pop
push
adc
push
inc
icebp
pusha
fidivrs
push
push
jge
test
dec
cld
aas
bound
fldt
xor
mul
pop
fsubs
push
out
dec
fcompl
cmp
je
pop
idivl
lds
jb
std
mov
nop
cld
popa
pminub
inc
push
adc
dec
gs
push
mov
inc
testb
pop
les
cmpsb
fildll
cmc
test
inc
dec
sub
inc
add
scas
mov
movsb
rclb
repnz
fisubl
mov
repz
jno
sysexit
lret
mov
jle
pop
jne
mov
fildll
cmp
dec
sub
fimuls
in
jns
add
out
push
in
jns
das
scas
or
mov
lods
mov
push
push
jg
ss
pop
lods
sub
into
jo
shll
xchg
mov
xchg
adc
clc
nop
mov
jecxz
outsb
push
orb
shrb
dec
xchg
dec
cmp
stos
push
mov
incl
sub
xor
repz
gs
les
jb
mov
shl
andl
fisttpl
cmpl
cmp
out
dec
bound
xchg
test
adc
mov
push
insl
insb
mov
pop
orb
xchg
pop
mov
cmp
fmul
rorl
jo,pt
jb
mov
inc
xchg
lods
loop
stos
pushf
aaa
fidivl
jle
push
fwait
jge
test
xchg
iret
or
scas
pop
test
lcall
loop
aas
test
adc
dec
mov
hlt
or
sahf
lods
jle
push
push
pop
add
scas
fdivrp
movsl
pusha
fistpl
mov
cmp
into
mov
out
inc
cmp
imul
or
push
cmpsl
inc
sub
fcmovne
stos
sbb
iret
mov
sub
push
addl
scas
jmp
ret
push
js
pop
fsin
pop
bound
push
or
aas
inc
aam
dec
mov
adc
cmp
test
cmpb
fimull
pop
sti
mov
push
mov
ret
in
mov
mov
aam
and
xchg
orb
test
adc
int
xchg
rol
dec
jb
popa
lea
in
cmp
out
iret
fdivr
leave
imul
outsl
in
adc
icebp
mov
push
xor
dec
loopne
nopl
mov
outsl
sub
test
jmp
push
mov
pop
dec
push
cmp
lods
loope
mov
insb
jg
fadd
inc
test
dec
add
xchg
adcl
jo
bound
iret
push
lods
cmp
js,pn
popf
adc
xor
push
scas
jg
push
cmc
or
sbb
sbb
stc
dec
adc
push
bnd
shll
out
in
xchg
in
mov
push
out
xchg
lods
addr16
pop
popl
sbb
push
aad
je
out
pushf
cli
repnz
inc
idivl
or
sahf
or
xchg
push
add
popa
cli
adc
rorb
aam
adc
out
push
aas
xchg
ljmp
lock
loop
fbstp
mov
dec
mov
jmp
fs
or
xlat
mov
xor
sbb
or
idivl
repnz
aaa
aam
and
fisttpl
loop
std
pop
mov
jns
je
das
sub
push
leave
shlb
aaa
stos
mov
das
or
in
jmp
xchg
loope
punpckldq
sarb
lcall
fdivrs
sbb
cmpsl
ds
cmp
or
or
inc
pop
lahf
sbb
stos
orl
mul
and
mov
repz
push
xchg
sub
fnstsw
or
mov
outsl
call
push
test
adc
int3
bound
inc
pop
cli
xchg
push
inc
xchg
fadds
stos
dec
out
movsl
fsubr
cld
xchg
push
jbe
push
xor
js
mov
mov
test
ja
cmp
test
mov
jl
into
pop
and
orl
mov
daa
imul
imull
cmp
xchg
sub
adc
mov
mov
incl
or
sbb
ljmp
loopne
pop
fbstp
in
ffree
fld
jmp
je
pop
mov
add
stos
aad
push
lds
mulb
arpl
adc
xorb
xor
inc
adc
out
insb
rcrl
dec
push
rorl
mov
jecxz
addl
call
int3
lea
mov
outsl
jae
cltd
gs
pop
xlat
bound
daa
xchg
push
js
push
xor
jge
stc
sub
xor
pusha
ret
xchg
lea
pop
je
jl
sarb
inc
and
sub
dec
in
aas
cmpsl
mov
ja
mov
xchg
adc
cltd
ret
test
jne
xchg
ret
and
mov
icebp
testl
in
pushf
jecxz
lds
std
bound
xor
cmp
outsb
xor
pop
les
sub
pushf
sub
shll
push
aad
lods
icebp
dec
xchg
cmp
mov
testl
scas
or
mov
pop
and
jp
lcall
pop
cmp
push
ret
cmp
or
pop
cpuid
cmp
movsb
rcrl
mov
sbb
cwtl
push
cs
xor
push
rclb
pop
mov
xchg
jns
gs
sbb
dec
inc
and
adc
loope
jle
mov
push
add
rcrl
or
clc
xor
loop
mov
mov
cmp
int
sti
push
mov
cmp
ja
sub
fdivs
dec
mov
and
lock
js
insl
jle
dec
fidivl
ret
sarb
sbb
aam
stos
lahf
es
push
jmp
pop
lea
fisttps
add
xchg
xchg
mov
push
push
xor
test
iret
idivb
sub
push
sbb
fisubrl
push
and
mov
adc
lahf
pminsw
bound
jnp
adc
cmc
sbb
pop
pop
cltd
push
fst
insl
mov
push
push
ret
sub
sbb
mov
sub
pop
pop
pop
fs
das
out
adc
lahf
bound
mov
fwait
and
cmp
sbb
ret
push
jge
fs
daa
out
xor
xchg
sbb
movsb
mov
pop
fcmovb
flds
sti
icebp
jae
iret
movsb
cmp
push
inc
stos
mov
insb
rcrl
inc
std
in
testb
btl
movsb
push
nop
add
in
insl
inc
gs
cmc
insb
and
mov
and
imul
rcll
dec
dec
lea
xchg
inc
and
mov
push
jbe
pop
sbb
sbbl
jne
add
pop
daa
dec
mov
inc
in
enter
xchg
inc
push
xchg
and
out
jo
add
inc
aam
shlb
adc
je
cltd
inc
iret
cltd
dec
into
test
out
pop
inc
mov
push
jecxz
xor
mov
mov
lret
xor
cmp
cmp
enter
mov
add
mov
pop
fs
sti
xchg
xchg
cmpsb
pushf
std
jp
andb
sti
sbbb
mov
sti
sti
xchg
or
lret
out
aaa
and
mov
xchg
cmp
ja
pusha
add
popw
cwtl
adc
pushf
add
inc
adc
xlat
shrb
push
push
push
movsl
push
cli
dec
loop
roll
aas
xchg
inc
stos
out
int3
mov
cmc
out
test
mov
xacquire
jns
mov
es
xchg
jg
jo
push
sti
popl
ljmp
xor
ret
notl
pop
push
push
insb
in
xor
mov
dec
outsb
mov
insb
pop
and
dec
push
addr16
je
jbe
sbb
dec
sbb
scas
imul
xchg
iret
push
mov
pop
pop
sub
iret
xchg
mov
es
jecxz
cmpsb
lret
mov
inc
fsubrs
es
lahf
lahf
repz
adc
in
mov
jl
dec
arpl
ficoml
movsl
cmpsl
pop
cmp
pop
fdivs
mull
sub
incl
jae
arpl
inc
mov
mov
mov
dec
pop
lret
out
je
clc
mov
adc
mov
sub
pop
dec
jle
aad
loope
sti
adc
inc
adc
lea
dec
clc
fidivl
xor
rolb
push
add
in
mov
mov
or
adcl
mov
movsb
mov
push
pop
pop
aad
outsb
mov
loope
sbb
add
repz
and
in
jbe
mov
lret
mov
inc
add
into
sub
enter
in
dec
ds
mov
imulb
stc
test
xchg
inc
cmpl
mov
std
insb
ret
and
sbb
jmp
mov
pop
mov
lahf
pop
das
xchg
mov
imul
xchg
xor
and
and
add
and
cltd
loope
mov
jo
lret
pop
pop
pop
pop
popa
je
mov
lods
jae,pn
mov
mov
arpl
imul
pop
pop
test
dec
inc
inc
imul
mov
sbb
mov
add
xlat
inc
pop
mov
sbb
inc
inc
add
andl
aas
jl
push
jbe
repz
push
and
aad
in
in
int3
inc
mov
jo
lahf
jg
mov
or
popf
xlat
je
mov
or
clc
pop
add
lret
jne
loop
pop
or
testb
fnstenv
push
sti
pop
push
mov
sahf
orl
test
sub
insb
in
or
mov
aam
jl
jnp
or
popa
out
xchg
dec
fimull
test
out
aas
push
jno
mov
jns
dec
out
adc
dec
inc
shll
jecxz
mov
pushf
mov
lahf
cli
ss
or
sahf
push
push
rorl
mov
fdivl
iret
jge
pop
icebp
ljmp
inc
dec
cmpsl
mov
jge
into
cmpsb
in
mov
mov
sti
push
ficomps
les
addr16
rcrl
je
sub
mov
xchg
ret
fcomp
and
mov
mov
in
out
jo
notb
cmp
lods
lock
hlt
cltd
je
pop
mov
xor
pusha
mov
popa
and
mov
add
das
test
mov
lahf
dec
lods
les
mov
scas
movd
std
js
adc
push
xlat
mov
daa
or
idivl
xchg
mov
cmc
mov
push
ljmp
cmp
dec
xchg
push
inc
lock
movsb
mov
jmp
cmp
iret
jp
push
push
jbe
test
push
cmp
sub
out
out
pop
jl,pt
lcall
icebp
pop
sub
mov
push
dec
mov
pop
insb
movsb
cmpsl
xchg
jp
pop
dec
rorb
pop
pop
adc
jae
ret
dec
addl
gs
mov
jo
in
jmp
popl
pop
push
sti
fwait
xor
test
sbb
push
add
mov
mov
fdivrs
inc
test
mov
in
add
or
addl
sbb
inc
jb
ret
or
dec
xchg
inc
dec
push
mov
aas
fstl
pop
fwait
pop
addr16
adc
sbb
mov
movsl
jno
and
les
pop
loop
shlb
xor
icebp
fwait
popf
and
mov
or
or
xchg
cmp
orl
cmp
cmp
xchg
mov
adc
cli
in
mov
jmp
add
movsl
xor
in
test
mov
orb
fs
lcall
pop
jle
repz
sti
adcl
arpl
xchg
mov
popa
jmp
in
fnstsw
je
jne
int
gs
idiv
es
fildl
dec
jne
in
mov
mov
shl
add
jns
sbb
fidivl
mov
cwtl
xchg
xchg
pop
push
cmp
and
cmpsl
xor
in
cld
cld
fidivl
arpl
fldenv
stos
sahf
pop
in
fdivrl
roll
outsl
mov
ljmp
sbb
xor
divb
push
adc
push
jmp
add
mov
aad
enter
in
bound
push
and
out
mov
dec
mov
negl
aaa
pop
out
sbb
cmp
mov
and
mov
xchg
inc
shl
sbb
xor
es
jbe
push
ljmp
enter
repnz
into
repz
push
sub
dec
ja
push
xchg
mov
mov
mov
or
jae
mov
lods
xlat
or
jmp
pop
push
xor
push
flds
jne
cltd
add
pop
dec
cld
adc
loopne
arpl
pop
pusha
mov
shlb
jno
mov
addr16
pop
mov
mov
ljmp
and
cmp
adcl
in
add
jb
or
cmp
jmp
dec
pop
clc
jecxz
cwtl
out
mov
cmpsl
je
mov
jecxz
je
inc
cmc
pop
jg
push
lret
ljmp
outsb
lcall
pusha
xchg
out
or
les
push
cmp
dec
imul
idiv
cmc
dec
jge
xchg
xorl
shrb
ss
lods
jns
jge
das
flds
or
adc
push
int3
adc
rep
dec
hlt
sub
ss
push
loop
fists
mov
and
adc
stc
gs
xor
xchg
cmpsl
test
cltd
adc
mov
push
fcompl
push
movb
or
cmc
js
xchg
mov
loopne
mov
int3
adc
aas
inc
and
in
mov
not
cmp
das
push
scas
movsb
jg
xchg
pop
jle
mov
jo
aas
fisubl
gs
sbb
sub
push
dec
mov
imul
cwtl
dec
lahf
mov
cmp
and
fidivrs
xchg
shll
push
hlt
pop
sbb
dec
mov
test
pop
cmpb
out
pop
jno
adc
adc
les
xor
mov
add
inc
cmp
xchg
cmp
ret
iret
outsb
fistl
inc
call
mov
mov
test
outsl
insb
loope
int
mov
bndldx
mov
lods
sbb
jge
inc
out
dec
and
dec
dec
xor
jg
in
leave
push
mov
mov
mov
lahf
push
movsb
push
and
xlat
das
out
addr16
fsub
mov
fdiv
in
pusha
push
inc
add
enter
sti
das
rolb
in
pop
sub
lcall
outsb
pop
lods
and
cmp
lret
gs
inc
inc
pop
int3
xchg
ljmp
rorl
inc
rcr
inc
test
lea
rdtsc
call
lret
inc
test
push
inc
shlb
inc
imul
add
andb
and
call
pop
push
mov
mov
sahf
cmp
push
fs
or
jns
jp
add
sub
rcll
jno
and
push
cmp
sbb
adc
lock
test
jo
and
pushw
nop
pop
pop
sbb
jae
xor
xabort
incb
push
stos
nop
xor
xchg
xor
adc
adc
or
mov
movsb
xchg
mov
mov
lret
pop
lods
jbe
cmp
sbb
sbb
dec
stc
dec
push
scas
jns
sub
test
mov
cmc
into
fwait
jge
cltd
lret
and
ja
mov
dec
mov
imul
fldcw
or
gs
fisubrl
call
sbb
gs
mov
sti
cmc
addr16
push
out
outsl
leave
aad
cmpsl
les
fbstp
mov
test
adc
jno
enter
enter
lds
dec
cmp
xchg
repnz
mov
insb
and
outsb
jle
loop
xchg
iret
cmp
aaa
sbb
psrlq
cmp
and
cmp
jne
jbe
push
loopne
dec
sbb
lahf
sbb
xor
mov
faddl
jmp
inc
xor
lret
lds
cmpsl
xchg
jecxz
or
dec
mov
mov
add
push
pop
mov
dec
fidivs
pop
imul
lret
and
xchg
mov
std
push
aad
jp
fimull
fstl
xchg
movsb
jb
pushf
xchg
stc
or
cli
push
fwait
mov
out
jo
jb
cmpsl
push
clc
and
lret
fs
or
xchg
flds
jno
cmpsb
dec
je
shr
pop
pop
and
fimuls
jbe
rclb
push
js
sub
inc
cmpsl
mov
pop
xchg
addr16
or
lcall
iret
call
ja
ja
addb
cmpsl
adc
adc
pop
push
sub
loope
mov
subl
sub
sub
mov
pop
leave
cmpsb
push
fstp
mov
sbb
pop
adc
cmp
cmp
adc
mov
and
xchg
popf
ror
lahf
mov
addl
movsb
out
mov
jb
xor
push
cltd
addr16
int3
pop
push
push
fbld
mov
jge
pop
jmp
cmpsb
mov
xor
daa
add
cwtl
ds
mov
mov
mov
fyl2x
sub
mov
sub
test
cmpsl
insl
lods
push
add
jp
sbb
dec
jge
adc
adc
mov
hlt
int
push
push
pop
mov
shlb
cmc
testl
orl
es
xchg
sub
push
xor
adc
movsl
stos
or
and
xchg
sti
push
lods
push
or
push
xchg
fdivrs
cmp
xlat
loopne
sbb
imul
push
pop
sbb
stos
sti
pusha
pushf
pop
jp
mov
jle
add
dec
or
mov
and
outsl
xchg
lret
das
add
mov
dec
clc
push
push
stos
xchg
or
test
mov
iret
jl,pn
loopne
xchg
mov
and
ja
add
xchg
fcmovne
lret
ds
imul
loopne
fsubrp
jbe
dec
sub
aas
pusha
sahf
ficompl
mov
adc
call
scas
test
push
mov
adc
dec
arpl
jecxz
lahf
cmpsl
push
into
js
pushf
xor
sahf
jl
lahf
adc
mov
xlat
cmp
loope
xor
ficompl
in
insl
dec
shrl
cltd
inc
mov
iret
test
jmp
test
mov
test
movsb
jecxz
pop
and
lea
cmpsl
test
cmp
scas
imul
dec
mov
das
dec
popa
xor
xchg
or
das
adc
repnz
int3
cmpsb
push
in
dec
andl
aad
cmp
mul
ss
popa
ret
rol
cmpl
inc
mov
ja
sbb
lods
cwtl
adc
lods
aaa
cld
push
push
mov
lcall
gs
cmp
arpl
add
mov
mov
roll
mov
xchg
mov
mov
pop
pushf
shll
xor
mov
scas
aaa
ljmp
push
loopne
pop
inc
adc
jmp
jg
ja
lea
rcrb
pusha
cmp
sbb
xchg
sub
lds
aam
repnz
ret
and
pmaddwd
pop
ljmp
addl
inc
ja
mov
and
ja
add
lcall
ret
ds
pop
sbbb
popf
stc
sub
xchg
or
or
add
mov
sub
pop
add
or
sbbb
movsb
or
cwtl
dec
xchg
popf
imul
xchg
popa
mov
sub
xlat
ljmp
leave
mov
lods
push
fsubr
push
fdivrs
shrb
mov
jge
fsubrl
fs
jb
mov
sbb
mov
ja
xor
insb
xor
in
add
mov
in
cltd
xchg
mov
pop
ret
jb
add
inc
rcl
xchg
ret
cmp
sbb
fiaddl
es
push
or
pop
inc
call
xchg
popf
aaa
xor
pop
fadd
outsb
cmp
addr16
pop
fs
popa
adc
outsb
push
cmp
jge
jb
pop
and
popf
cmp
push
jle
mov
lds
xchg
push
pushf
push
dec
sarb
mov
mov
sarb
stos
mov
loopw
push
push
jnp
stos
into
in
xorb
xchg
cmc
inc
cmc
rol
loope
xlat
stc
test
shl
out
sub
aad
push
jle
cmp
pop
bnd
mov
push
mov
bound
push
add
aad
out
jne
xor
push
push
out
sti
int3
ret
mov
rcl
mov
std
sbb
arpl
cmp
inc
xchg
addr16
pop
inc
jmp
push
xlat
push
fdivrl
test
pop
adc
aam
sbb
push
cmc
sbb
lods
fsubrl
scas
sbb
lds
pop
insb
popa
fst
lret
jg
inc
push
movsb
xlat
aaa
adcl
fisubrl
sub
out
fdecstp
bswap
je
pusha
inc
outsb
jmp
xchg
sahf
lods
mull
mov
xor
or
stc
hlt
xor
dec
pop
adc
inc
jns
mov
mov
test
xor
sarb
cmp
mov
pop
add
cltd
insl
dec
xchg
pop
lea
push
cltd
push
mov
mov
xlat
testb
repz
addb
shr
mov
mov
lods
push
cmpsl
and
jp
push
out
pop
roll
scas
scas
shlb
mov
cmp
mov
popa
or
pop
pop
mov
xchg
ss
mov
xlat
pop
arpl
cs
pop
push
adc
and
shr
cmp
inc
hlt
sub
mov
mov
insl
jmp
inc
and
dec
push
repz
aaa
aad
jge
aad
sbb
or
pop
pop
mov
sub
mov
jmp
jnp
loopne
insl
push
mov
sbb
into
pushf
mov
pop
arpl
lahf
mov
int3
dec
cwtl
sti
pop
aaa
sbb
mov
loope
xchg
pop
add
scas
push
fcom
dec
mov
scas
cld
cltd
cs
xchg
in
cmc
shlb
jp
mov
inc
cld
cmp
cs
insb
fbstp
mov
in
test
mov
jmp
lahf
pop
clc
push
xchg
ret
or
mov
dec
cmp
stc
mov
aaa
lods
jecxz
inc
loopne
les
aas
pop
mov
push
cmp
jp
sbb
out
or
fistps
dec
fcomp
xchg
jno
dec
in
mov
repnz
add
or
daa
xchg
dec
pop
pop
inc
fisubrl
add
fsubl
dec
pop
fcoms
sbb
push
call
sub
aaa
fisttpll
lret
cmp
adc
hlt
shrl
xor
aaa
js
sub
insb
sub
mov
scas
inc
repz
sbb
je
inc
ret
aaa
sbb
dec
cmpsb
adc
dec
add
aaa
ret
or
xchg
addb
xor
sub
icebp
dec
inc
and
in
ja
pop
mov
fnsave
mov
loop
pop
xchg
sub
mov
movsb
xor
add
into
dec
fadd
ficompl
pop
sub
mov
in
data16
flds
xchg
outsl
ret
and
add
dec
out
push
out
and
dec
and
pop
fbstp
sbb
pop
lret
hlt
xor
or
push
test
xchg
lcall
xor
iret
lret
mov
icebp
adc
lcall
pop
jp
nop
mov
repz
xor
jbe
lods
jo
push
scas
lea
push
sarl
test
or
xor
sub
ljmp
and
and
pop
add
int3
adc
xchg
nop
ljmp
cwtl
sarl
and
movsl
out
addr16
sub
andl
cmp
sub
mov
out
cli
lcall
aas
mov
popf
xchg
xor
push
jae
divl
dec
movsl
push
rorl
std
test
cmp
xchg
inc
jmp
out
lods
call
mov
enter
arpl
xchg
imul
fdivrp
mov
mov
sbb
rcrb
into
mov
movsb
push
pusha
adc
mov
cmp
sbb
bnd
fwait
insb
mov
adc
jmp
fcompl
outsl
mov
xlat
dec
stos
jmp
xchg
loopne
mov
xor
jnp
out
jne
and
dec
idivl
inc
mov
les
mov
test
loop
dec
insl
sub
and
pop
iret
je
pop
add
std
outsl
xchg
mov
jb
lea
daa
and
pop
lret
in
and
popf
cmc
adc
pusha
into
or
xchg
nop
and
pop
dec
out
push
sub
bnd
fidivs
outsl
aam
xlat
sti
push
mov
sahf
ss
aas
call
popf
arpl
sahf
mov
mov
mov
daa
imulb
adc
inc
pop
mov
mov
jns
dec
jno
sub
push
xor
jae
mov
dec
cmp
xchg
mov
std
out
clc
neg
cmp
call
or
scas
in
enter
in
jbe
push
xchg
mov
test
sahf
cmp
xor
out
popl
stos
insl
in
inc
mov
dec
cmp
and
clc
add
mov
pop
outsb
xlat
and
test
je
sbb
or
inc
inc
lods
test
data16
jg
fdivrl
les
mov
cmc
sub
cmpl
insb
push
cmp
lods
mov
into
jbe
xchg
jo
mov
jo
push
cmp
ljmp
nop
jo
adc
adc
je
pop
sbb
adc
loopne
xchg
int3
out
dec
jbe
jp
fisttpl
cltd
bound
mov
pop
lret
xchg
test
or
loop
shl
popa
js
pushf
test
mov
mov
mov
repz
rcrb
sub
push
dec
lret
cltd
xchg
jb
push
cmp
cmpsl
push
xchg
cmc
mov
mov
aam
arpl
and
and
inc
lcall
outsl
pop
arpl
rcrl
or
xchg
and
and
mov
dec
in
dec
mov
xchg
ss
add
push
adc
divl
popf
out
int
add
sub
cmc
mov
push
stc
shl
adc
push
pop
insb
popf
insb
adc
adc
pop
test
ret
adc
movl
cld
xchg
lea
clc
xchg
in
popl
and
dec
scas
jge
and
cld
ss
pop
imul
xorb
mov
outsb
adc
call
stos
cli
and
xor
dec
ret
enter
push
dec
rcrb
mov
fucomip
jmp
jmp
jge
and
and
mov
out
add
lcall
push
roll
pop
sbb
xor
and
xchg
cs
jg
cmp
cwtl
cmp
mov
lods
mull
cmp
test
sbb
jge
fldl
xchg
inc
sbb
fldcw
adcb
je
or
cli
vmovntps
mov
repz
fcmovnu
adc
daa
jmp
pusha
repz
aad
push
mov
cli
xchg
push
adcb
mov
push
and
dec
push
xor
pop
xor
sbb
hlt
outsl
sub
mov
fcompl
mov
call
aas
jne
loope
jno
ljmp
imul
cmp
mov
shll
imul
push
test
pop
aad
jmp
test
fistl
and
inc
out
jae
push
inc
inc
clc
cs
arpl
push
outsb
cs
popa
pusha
sbb
in
test
pusha
pushf
mov
and
inc
push
dec
or
cmp
loop
int3
xchg
and
ficompl
hlt
cmp
and
xchg
movsb
xchg
sub
test
mov
mov
fs
pop
decl
mov
jle
mov
vrsqrtss
sub
push
mov
jb
mov
cwtl
aad
mov
sub
cmp
mov
jb
push
cmpsl
push
lahf
inc
xchg
mov
daa
xor
lret
test
lahf
cmp
movsb
movl
nop
cmc
push
sbbb
inc
xchg
dec
in
jecxz
fildll
xchg
testb
mov
scas
cmpsb
pop
jl
sarl
outsl
push
shlb
in
loope
cld
mull
loop
inc
int3
arpl
dec
jae
cmpb
mov
push
lock
add
jg
into
push
ljmp
mov
rcrb
jne
fmuls
push
sub
gs
gs
xchg
hlt
loope
cmp
pop
dec
adc
pop
loope
popa
mov
add
daa
rorb
rol
mov
mov
xchg
jge
jecxz
dec
sbb
cmp
int
push
lret
imul
shll
clc
push
push
push
shll
js
mov
xchg
repz
cmpsb
mov
cli
rclb
mov
dec
mov
and
pop
hlt
add
test
add
inc
ds
or
ja
pop
mov
push
mov
outsl
out
push
pop
or
push
mov
subb
arpl
test
push
mov
inc
push
cmpsl
repnz
out
pop
sub
in
adc
mov
lock
xor
imul
bound
out
fcomps
out
insl
inc
xchg
jo
pop
jb
rcll
std
repnz
add
lds
ret
icebp
test
icebp
movsb
stos
and
pop
xchg
xchg
pop
dec
cli
scas
lret
push
rcll
in
jns
aas
adc
mov
and
ret
std
add
je
rcl
sahf
out
xchg
push
stos
inc
and
scas
sub
mov
movsb
call
cmc
push
outsb
lcall
xchg
jmp
add
xor
sbb
loop
repnz
push
pusha
pop
dec
xchg
or
pop
repnz
popa
mov
mov
in
psrlw
jl
add
mov
jnp
shlb
scas
leave
or
leave
ror
jle
pop
pop
or
movsb
adc
or
mov
mov
sbb
js
jmp
mov
fstpt
push
call
arpl
push
cwtl
iret
aam
xchg
imul
push
cmp
cwtl
add
outsl
and
ret
cmc
or
mov
outsb
cmp
cmpb
sbb
dec
pop
outsl
lret
mov
cs
xor
cwtl
repnz
loope
mov
int
push
jp
nop
ljmp
ret
pusha
mov
fnsave
std
pop
push
daa
inc
subb
in
or
mov
repnz
inc
in
inc
jle
ljmp
ljmp
inc
lret
ret
mov
xchg
rcl
cs
faddl
or
jge
adc
pushf
mov
arpl
jno
push
and
jbe
fmul
sub
push
fwait
cmpsb
mov
cmp
add
fwait
or
lahf
add
das
push
xorl
pusha
aas
outsl
and
xor
pop
pop
ret
adc
adc
add
dec
push
or
fstps
pusha
xor
ja
repz
pop
cld
jle
jnp
mov
in
mov
inc
arpl
jmp
bound
insl
pop
cmp
or
cmpsl
pop
inc
pop
loope
scas
pop
add
stos
sub
aaa
icebp
mov
lock
and
rorl
ljmp
dec
mov
inc
outsl
test
add
lods
inc
daa
cmp
pop
sti
dec
mov
mov
dec
cltd
rcrl
mov
jg
xor
jne
mov
push
dec
or
sbb
jge
in
shrl
jp
rcrb
icebp
push
std
lahf
sub
pop
and
mov
pop
cmp
fisttps
lods
stos
cwtl
hlt
adc
xchg
jns
ljmp
inc
out
cmp
and
out
dec
test
sub
pusha
fists
nop
fstps
fdivrl
mov
lods
jp
jne
test
sub
xor
orl
push
repnz
pop
and
push
in
mov
jp
xchg
mov
add
pop
cmc
mov
shrb
jmp
imul
xchg
xchg
cltd
sbb
sub
in
mov
aam
or
dec
je
mov
add
loopne
scas
xor
add
in
fs
pop
cli
imul
stos
lods
xor
push
outsl
repnz
or
mov
outsb
ss
roll
pop
mov
fwait
xchg
pop
mov
mov
mov
ret
or
jle
ror
cmp
sahf
ds
lcall
aaa
in
sbb
cwtl
test
sub
jne
inc
test
mov
repz
jns
jmp
sbb
mov
or
stos
add
xchg
mov
pop
sub
out
push
sbb
inc
out
hlt
jmp
add
movsl
sbb
mov
imul
cs
data16
jne
shll
jmp
sbb
push
mov
stos
jne
repz
aad
test
push
scas
pop
sbb
cltd
bound
imul
lods
int3
ds
sub
into
clc
jp
cmc
mov
xchg
shl
push
pop
xchg
lret
movsl
mov
dec
out
addr16
ds
mov
cmp
int
inc
fbld
inc
in
les
mov
adc
lea
das
mov
xchg
add
mov
jae
vpminub
jl
daa
pop
hlt
movsl
fs
pop
cli
cmp
push
idivl
cmpsl
shll
pop
mov
addr16
test
push
int3
lret
jle
into
jo
cmp
std
roll
jmp
dec
cs
ja
and
jmp
sub
mov
xor
fwait
mov
inc
xlat
in
loop
push
inc
mov
cmp
ljmp
mov
mov
in
insb
sub
sub
stc
xchg
inc
lret
mov
sbb
lds
xchg
jp
or
mov
sub
daa
pop
enter
mov
out
dec
jmp
mov
sbb
xlat
mov
cmp
lcall
pusha
adcb
adc
gs
in
fldl2e
nop
pop
sub
fldt
or
mov
or
out
jg
js
imul
mov
cmp
stos
ljmp
lds
cmp
or
insl
movsl
dec
mov
dec
mov
out
and
int
in
icebp
pop
jmp
mov
or
mov
sahf
das
cmp
push
xchg
jns
stc
mov
lret
xchg
push
dec
inc
mov
insl
imul
cs
out
ret
mov
rcrl
mov
mov
cltd
jmp
dec
mov
mov
loopne
movsl
dec
outsb
pop
push
dec
mov
sub
stos
fsubrl
adc
jns
and
pop
push
jp
rcrb
stos
mov
inc
fstpt
jb
push
stos
add
in
nop
pop
mov
inc
movsl
mov
inc
cmc
or
dec
pop
imul
mov
test
mov
mov
in
xor
lea
les
mov
add
or
loope
sbb
fwait
pop
mov
shlb
das
and
cmp
repnz
jns
adc
mov
push
pop
ja
into
test
jno
inc
cmpsb
push
js
lahf
and
out
jg
outsl
push
xchg
cmp
in
stos
lret
mov
lcall
int
mov
xchg
leave
outsb
mov
xchg
test
mov
fisttpll
imul
sar
push
xchg
mov
xor
lahf
push
mov
dec
scas
scas
lods
mov
cmp
jp
jns
pop
pop
inc
and
inc
xchg
pop
adc
lods
fwait
shrb
or
cwtl
leave
aam
jecxz
adc
inc
negb
aad
aam
sbb
call
xor
scas
lret
mov
loope
add
xchg
data16
xor
cmpsl
imul
rorb
sub
out
dec
fisttpl
sbbb
dec
ficompl
cmp
mov
pop
jne
pusha
inc
pop
mov
loop
and
jo
mov
xchg
pusha
jbe
ficomps
loope
andb
lret
pop
jnp
ds
cmp
push
push
sbb
pop
push
mov
dec
cmpsl
pushf
and
inc
push
movsl
inc
mov
fistpll
push
jno
stos
sbb
inc
pop
jne
psadbw
jo
fsubs
in
push
mov
fsts
mov
bound
cmp
out
cs
mov
mov
push
je
ja
sbb
loop
push
icebp
inc
cmp
add
mov
add
cmpsl
lock
or
pop
push
xor
cmp
hlt
in
imul
and
inc
into
inc
mov
add
inc
out
call
mov
jmp
adc
movsl
scas
outsl
or
shlb
adc
rcrl
mov
fwait
push
xchg
or
and
cmp
sahf
lcall
dec
mov
jno
mov
dec
mov
into
fiaddl
sub
pand
mov
test
arpl
lret
push
add
test
gs
out
push
pushl
add
sub
and
sbb
sbb
push
fisttpl
inc
pop
push
ret
mov
add
shrb
cmp
rcrl
dec
sbbl
mov
scas
xlat
sbb
jae
mov
hlt
inc
fdivrs
mov
or
mov
inc
pop
or
push
aam
pop
push
cmc
jo
imul
repnz
sarl
je
ret
in
dec
or
imul
xor
mov
dec
pop
xlat
pop
dec
sbb
imul
aas
repnz
adc
push
or
add
or
or
out
push
popf
xchg
fcoml
mov
lds
jmp
fnsave
xor
or
movsl
dec
push
sbb
and
ds
movb
imul
xlat
mov
scas
ret
xchg
jl
xor
jge
jnp
insl
add
leave
pop
sbb
sub
cmc
jl
jae
inc
leave
adc
fmul
jb
push
xchg
jecxz
cmp
movl
fdivl
inc
into
fwait
outsb
xchg
jl
cmp
movsb
jae
dec
pop
inc
ss
pop
out
sub
sbb
pop
call
jb
in
test
sub
outsl
pop
arpl
inc
lcall
cmp
adc
shlb
stos
pop
push
push
jmp
inc
xchg
push
add
daa
in
hlt
mov
ret
shl
inc
cmp
mov
imul
add
lahf
jmp
cltd
pusha
jg
and
outsl
adc
cs
add
xchg
scas
je
shll
lahf
dec
pop
jns
mov
mov
sarb
shll
lods
pop
pop
dec
xchg
imul
adc
int3
pop
xor
mov
mov
cmpsb
stc
sub
hlt
inc
es
cwtl
and
xchg
dec
jbe
lcall
pop
in
pop
lcall
cmp
push
dec
nop
pop
mov
pop
shrb
or
mov
icebp
out
and
in
lahf
rcr
jg
jae
or
xor
in
xor
push
sahf
jecxz
pop
xchg
xchg
ret
cltd
ror
mov
mov
lea
mov
cmp
cmp
out
ficoml
adc
xchg
sahf
xlat
lcall
in
stos
divl
test
inc
add
push
mov
mov
mov
xor
mov
jl
jmp
mov
mov
lea
fcomip
std
pop
les
cmp
push
ror
inc
sbb
outsb
mov
movsb
aaa
sbb
stos
es
cmc
les
dec
mov
mov
push
fwait
push
insb
mov
fistps
arpl
cmpsl
subb
mov
dec
xor
lods
out
mov
mov
lret
sbb
sub
lods
mov
xrelease
pop
je
test
addr16
clc
repz
jnp
and
push
cwtl
xchg
push
test
mov
sub
mov
les
pop
xchg
mov
jmp
add
xor
lods
sub
stos
push
popf
xor
leave
add
mov
lock
add
mov
and
lahf
xlat
or
sub
sbb
ljmp
sbb
mov
repnz
call
vandps
and
mov
dec
dec
mov
mov
mov
pop
inc
xor
popf
movsl
dec
hlt
cmc
fsub
loopne
cmp
cs
xchg
fistps
fwait
xor
std
popa
push
sub
clc
mov
and
pop
test
pop
icebp
lret
lcall
pop
mov
lret
sub
xchg
mov
out
xchg
jne
pop
jmp
lods
or
push
sub
in
mov
adc
push
loope
push
adc
loopne
daa
loop,pn
push
inc
pop
and
stos
pop
int
xchg
push
outsb
fldcw
nop
stos
sbb
jnp
pop
loopne
icebp
std
xor
mov
in
push
dec
jae
sbb
xor
inc
movsb
imul
je
sub
jne
xchg
std
jge
notb
and
push
xor
rclb
push
test
sbb
popl
insb
and
std
filds
lock
xor
lods
stc
repnz
jmp
or
test
pop
jae
sbb
repnz
xor
out
add
loopne
mov
jns
sti
cmpb
lcall
pop
movsb
popa
xor
subl
les
push
int3
xor
cs
addr16
push
jmp
xor
test
dec
mov
ljmp
and
dec
inc
xchg
je
and
popa
sbb
aas
dec
xor
cmp
push
push
addr16
and
hlt
mov
imul
cmp
in
arpl
xor
cwtl
mov
ret
and
jge
nop
dec
int
xor
addr16
imul
add
sub
mov
add
cmc
xor
mov
test
repz
add
push
cmp
int
clc
mov
jne
lea
jmp
inc
xlat
add
inc
daa
dec
in
sahf
notl
imul
iret
lea
std
imul
jnp
jmp
loopne
ror
roll
dec
loop
push
out
lock
mov
bound
popa
fdivl
dec
sub
sbb
and
or
add
aaa
daa
fsubrs
leave
lds
sub
aam
sbb
pop
jle
add
xor
xchg
or
ficomps
out
mov
push
into
jae
lea
jle
and
int
pop
jle
sbb
mov
sbbl
jns
inc
popa
int
ja
push
cmpsl
add
mov
dec
inc
xchg
decl
insb
jnp
lret
lods
mov
jnp
add
mul
shlb
insb
push
loope
das
xor
push
xor
pusha
xchg
lds
xor
dec
les
mov
mov
adc
sti
fimull
push
xchg
mov
jo
pop
add
rorl
enter
mov
int
mov
push
dec
mov
mov
xor
out
in
push
lcall
popa
test
pop
pop
int3
pushf
es
cmp
and
jl
add
push
mov
ds
xchg
mov
sub
into
lock
push
ja
cmpb
mov
cmp
sbb
xlat
lock
out
sti
mov
dec
jl
pop
les
jl
dec
pop
fidivl
out
mov
pusha
xor
sbb
gs
inc
add
loope
roll
cmpb
arpl
sbb
jecxz
stos
jns
add
ja
push
stc
pop
out
les
lret
cltd
testb
mov
sti
fidivs
mov
pop
xor
sahf
cmp
mov
out
stos
xchg
jge
and
sub
dec
roll
cmp
jge
aaa
xchg
lcall
xor
pushf
mov
fstp
xor
shlb
lret
pop
das
mov
insb
pop
mov
xchg
inc
xchg
xchg
shrl
arpl
out
sub
pushf
pop
sbb
lret
pop
mov
xor
aad
arpl
inc
add
xchg
inc
sbb
leave
cmp
cmpsb
std
dec
mov
dec
push
sbb
adcl
lahf
or
loopne
push
mov
inc
cwtl
and
repz
ss
sub
movsl
pop
cmp
push
jmp
or
xchg
adc
cld
fcoml
sahf
fisubrs
pop
fcomps
sub
adc
lcall
inc
repz
ss
mov
mov
pop
inc
into
xor
sub
out
lahf
cmp
mov
testl
sbb
loop
repnz
adc
cli
insb
or
dec
pusha
pop
lret
xor
loopne
and
ss
pop
test
insb
sub
push
pop
insl
jmp
pop
fs
std
cmpsl
test
popf
push
insl
call
ljmp
out
and
cmp
mov
mov
push
push
and
and
inc
sbb
stos
les
cmc
xchg
pop
loope
push
aam
scas
fcoms
add
rclb
sbb
testb
sub
leave
sbb
scas
mov
cmp
push
mov
xor
into
add
idiv
loopne
add
test
jl
mov
fbld
pusha
mov
push
push
popf
cmp
mov
lret
outsl
pop
cld
call
fs
out
add
ljmp
pop
sub
sub
aaa
rolb
dec
push
pop
xor
stos
std
stos
ret
sbb
notl
push
and
subb
ds
mov
dec
jo
movsl
mov
das
push
add
nop
jae
mov
mov
mov
adc
fmuls
cmpsl
std
fidivrl
lahf
or
mov
bound
mov
fmulp
xor
and
test
insl
pushw
fbld
fs
xchg
jb
divl
lcall
out
or
push
arpl
adc
or
loop
stos
in
lea
adc
mov
mov
stc
add
or
lds
add
jae
clc
add
ret
js
or
ljmp
insl
xchg
pop
push
ds
push
mov
das
and
push
pop
jno
mov
pop
sti
add
lahf
lods
or
jmp
roll
mov
jae
inc
lret
or
xchg
rcr
push
dec
xchg
mov
loop
xchg
lret
nop
push
sbb
out
sub
js
jae
push
jle
lds
cmp
add
mov
push
arpl
repz
scas
ret
pop
add
lahf
into
mov
mov
mov
je
test
adc
in
out
mov
insb
das
in
inc
lods
push
dec
dec
jmp
push
insb
daa
jb
fdivr
adc
and
std
and
iret
aad
test
cmpsl
cs
cltd
and
enter
stos
int3
mov
into
mov
jmp
push
out
rorl
mov
adc
fidivrl
aas
pop
insb
jno
jp
or
lock
aad
jmp
jae
push
add
lcall
mov
add
lods
cwtl
repz
aad
xchg
fstl
sti
icebp
mov
ret
outsb
leave
test
push
jge
outsl
mov
add
jae
sub
add
aaa
pushf
cmp
push
push
and
icebp
jne
sti
adc
mov
lret
loop
lret
btr
shll
scas
out
pushf
mov
inc
fistpll
movb
adc
sbb
ds
out
xchg
rolb
test
xchg
sub
js
xchg
cs
push
call
addr16
mul
mov
dec
movsl
mov
mov
lcall
repnz
jnp
out
push
mov
push
ret
outsl
push
inc
cmpsl
int
mov
decb
shrb
inc
mov
push
xor
and
fbld
out
movsb
dec
dec
sbb
or
aas
in
data16
aas
mov
bound
inc
hlt
pop
inc
xor
mov
popf
filds
push
dec
jle
insb
dec
test
mov
or
pop
sub
insl
daa
cld
xchg
jecxz
mov
fiadds
dec
pop
add
and
push
bnd
pop
pop
xor
sbb
push
dec
mov
xchg
faddl
xor
mov
cmp
mov
jnp
shl
in
fcmovnu
cltd
lock
dec
shr
orb
xchg
mov
popa
jp
jo
mov
lock
adc
imul
xor
andl
sbb
jmp
scas
adc
lods
and
jl
lcall
push
push
fldenv
mov
scas
mov
ljmp
sarb
adc
inc
add
jl
jl
inc
insb
cld
pop
xchg
sbb
loop
fldenv
je
stc
xchg
inc
mov
push
lahf
xor
push
cwtl
mov
push
dec
in
xor
xorb
testl
orl
jo
sbb
ret
sti
cmp
adc
pushf
out
mov
dec
dec
out
inc
mov
dec
pop
scas
add
or
push
xor
pop
bound
mov
adc
pushl
push
or
fstpl
add
xchg
arpl
mov
into
xchg
mov
pop
push
dec
repnz
imul
xor
stc
inc
mov
fwait
imul
inc
rolb
dec
loop
pop
jns
pop
lahf
xor
out
lcall
pop
ficompl
fcomip
cmp
xor
rclb
pop
pushf
inc
hlt
dec
inc
scas
or
jle
sbbl
pop
lea
jle
add
out
je
jmp
clc
out
pushf
or
cwtl
mov
loopne
inc
leave
xor
xorb
and
adc
jl
lea
dec
iret
inc
sub
out
pop
jbe
mov
lock
cmpsb
out
mov
fildll
sub
or
mov
push
int3
add
icebp
lods
call
cwtl
cmp
nop
daa
in
sbb
pop
out
push
sbb
mov
and
pop
repz
jns
lea
or
sahf
and
xchg
xchg
pop
cmp
pushf
cmp
data16
mov
gs
push
int
es
mov
xor
int
adc
xchg
lock
mov
pushf
push
mov
xlat
mov
inc
inc
or
pop
dec
adc
inc
dec
nop
push
xor
cltd
es
cld
mov
mov
imul
xor
fnsave
pop
push
rcrl
jmp
jnp
adc
dec
pop
mov
mov
jecxz
xchg
xchg
fstl
xchg
insl
cmp
inc
or
push
inc
mov
loopne
add
hlt
call
push
mov
out
mov
pushf
imul
adc
mov
aas
inc
inc
add
pop
out
mov
aas
sbb
jl
andb
adc
dec
pushf
bound
decb
xchg
fidivl
push
jbe
cmp
fmuls
inc
push
test
dec
pop
aas
addr16
push
imul
mov
xor
sbb
or
clc
inc
jg
jl
xor
jmp
outsl
jecxz
out
cmpsl
mov
sbb
ss
cmp
push
fldl
repnz
mov
adc
adc
imul
pushf
movsb
loop
cld
jo
mov
mov
push
mov
loope
lock
add
icebp
pop
stos
iret
imul
adc
mov
sbb
stc
cmc
stc
mov
sub
inc
mov
addr16
sahf
or
xlat
or
ret
sti
or
adc
loop
popa
les
mov
fistps
gs
mov
test
cld
cld
insb
ljmp
xor
pop
rcl
fmuls
aam
or
aam
xor
lds
bound
and
popa
outsl
add
pusha
out
out
cmp
int3
sbb
and
cltd
aas
xchg
mov
fwait
push
insl
jo
les
fwait
insl
dec
int
jno
or
mov
andb
dec
icebp
or
fs
push
scas
arpl
jg
movsl
lahf
outsl
adc
push
cmp
out
xchg
orb
gs
int
out
ja
pop
mov
in
xchg
adc
js
and
xor
into
xchg
das
es
clc
push
shlb
mov
imul
js
fistl
push
jno
je
push
aaa
inc
lock
cmp
insl
inc
out
mov
cmp
or
jecxz
gs
push
cld
mov
push
and
xor
inc
fldcw
lret
cmpsb
call
rcrb
sbb
mov
inc
movsb
addl
cmpb
or
enter
dec
xchg
sub
dec
xor
xchg
out
cmp
xchg
dec
movsb
jo
shrl
ret
inc
js
lods
sbb
icebp
movsb
push
adc
mov
sbb
jbe
lahf
sahf
adc
xor
out
cmpsb
sbbb
pusha
mov
popf
pop
je
mov
jecxz
das
xor
mov
jns
popf
div
inc
jmp
pop
push
cmc
mov
dec
pop
fwait
std
lods
xor
sbb
outsb
mov
jbe
add
lret
cltd
call
mov
idivb
lea
mov
xchg
jb
push
lea
jmp
repz
nop
xchg
std
jecxz
ret
pop
pop
push
xlat
jge
fadds
and
loope
jae
push
cld
push
cmp
fidivrs
divb
movsb
dec
mov
xchg
lahf
and
mov
push
leave
insb
fs
filds
fmuls
jle
scas
dec
xchg
ja
pop
or
dec
cmp
repnz
push
dec
stos
push
sbb
mov
leave
mov
push
mov
int3
std
push
push
pop
or
outsb
jp
dec
movsl
jnp
push
pop
inc
or
or
cmp
mov
movsb
dec
imul
movsl
aam
fnsave
xchg
jge
mov
xchg
aas
mov
xchg
mov
jl
add
and
je
or
mov
push
imul
incl
xchg
fsts
jne
hlt
out
xor
add
aas
rclb
adc
test
inc
cmp
cmp
jnp
out
mov
loop
push
mov
push
jne
or
cltd
mov
mov
std
mov
mov
mov
mul
mov
sub
lods
jae
or
ret
ds
repz
outsb
pop
push
mov
dec
cld
das
fdivl
xor
mov
cltd
ljmp
sbb
cwtl
aad
or
cs
adc
out
lret
std
jns
shlb
mov
dec
or
mov
in
push
sti
arpl
cld
fiadds
mov
dec
sbb
xchg
push
pusha
push
bound
movsl
cmpsb
push
stos
xchg
inc
push
mov
prefetchw
jp
sahf
cmovp
pushf
imul
xor
mov
pop
jne
dec
mov
mov
jp
inc
popf
insl
push
dec
ret
mov
pusha
xchg
imul
xchg
pushf
test
stos
xchg
call
jle
mov
and
push
jmp
roll
or
xchg
pop
gs
jns
cmp
adc
imul
test
data16
jb
jae
xchg
xchg
add
ss
lds
inc
insb
cltd
lock
mov
gs
push
mov
jnp
mov
outsl
push
test
in
adc
jo
out
cmp
lods
xchg
pushf
mov
stos
mov
jp
mov
xor
push
dec
icebp
ja
insb
cmc
cmp
inc
jb
cmc
test
fisttpll
ljmp
sbb
clc
add
xchg
mov
jo
ret
andl
test
arpl
mov
sbb
ss
mov
jp
sti
add
cmp
fadds
loopne
xchg
cmpsb
out
push
jo
mov
in
fxch
and
daa
jg
mov
sub
and
add
mov
jl
jge
cwtl
mov
fisubs
mov
int3
mov
jbe
push
xor
movsl
and
int
in
fstpl
sub
or
jno
cmc
ret
sti
sub
or
cmc
mov
mov
sub
dec
xchg
sbb
mov
insl
xchg
xor
and
jle
lcall
push
add
mov
sti
insb
test
jecxz,pt
cld
and
and
rcr
jb
dec
jnp
cli
vmread
sbb
out
mov
xchg
shrl
xchg
jae
out
lods
das
data16
sub
jmp
and
in
in
in
shll
mov
repnz
leave
add
xor
shrb
cmc
aam
pop
adc
and
rol
rclb
sbb
jecxz
ja
xor
fdivp
and
inc
mov
test
xorb
sub
lret
scas
sbb
popf
mov
call
mov
xlat
push
xchg
sub
mov
mov
std
push
inc
clc
cmc
ljmp
xor
mulb
mov
aad
iret
mov
sub
push
push
js
shrb
pop
and
js
cmpsb
sbb
cld
pushl
sbb
pop
mov
lahf
xchg
xchg
mov
aas
cld
adc
jle
adc
clc
icebp
jbe
sbb
mov
je
cmpsl
imul
lcall
ja
and
or
cmp
sbb
push
cmpsb
push
in
mov
or
aaa
mov
mov
jbe
and
mov
movsb
xchg
out
mov
flds
test
int
cmc
mov
gs
popf
sbb
lret
add
sbb
idivb
mov
mov
in
jg
push
push
mov
mov
int
dec
jge
not
or
push
jmp
fiadds
ljmp
jecxz
push
call
pop
fsts
data16
jns
fwait
pop
cli
int3
rcrl
bound
add
es
inc
push
jmp
fs
ds
ss
nop
sub
lret
push
and
fldcw
dec
loopne
dec
js
mov
in
lock
push
cmp
loope
in
movsl
mov
ljmp
dec
lret
notb
nop
jmp
aas
push
and
rol
negb
imul
jmp
xchg
bound
popf
leave
mov
and
sub
sub
arpl
test
and
xchg
mov
roll
mov
testb
pop
mov
lahf
pop
push
pusha
push
pop
jle
xchg
pop
jg
push
sub
jbe
xchg
cmp
sti
xchg
push
cmpsl
jnp
dec
orb
das
repz
outsb
cwtl
xchg
jl
mov
xor
push
lret
xor
xchg
and
repz
shll
mov
jbe
andb
mov
ret
add
inc
dec
pop
pop
or
addr16
hlt
cmp
pop
push
or
pushl
push
sbb
es
sub
aam
push
dec
dec
xchg
xchg
aas
orb
mov
sbb
stc
cmc
out
movsb
mov
xchg
sub
jae
lods
push
dec
mov
jnp
xor
mov
add
lock
add
mov
cs
insb
mov
in
lock
mov
fstpl
mov
adc
int
arpl
sbb
inc
add
push
add
lahf
in
mov
and
push
mov
bound
xor
lahf
adc
cld
xchg
cltd
out
dec
inc
and
push
xlat
mov
or
inc
mov
fiaddl
push
or
xorl
jge
adc
fsincos
sub
sti
in
add
movsl
into
shrb
pop
std
nop
push
xchg
sbb
insb
sbb
decl
das
addr16
dec
out
mov
cmp
in
ds
jo
int3
xchg
gs
stos
ljmp
inc
mov
mov
push
leave
xor
stc
cs
fs
pop
adc
js
movsl
out
cmp
jae
in
xor
pop
orb
rcr
enter
leave
dec
arpl
inc
mov
and
push
xchg
sbb
rorl
xor
out
pop
or
fs
data16
iret
inc
add
mov
mov
cmp
inc
in
xor
stc
out
push
jb
xchg
jb
loopne
shl
mov
xor
ss
sti
jecxz
dec
outsb
push
or
repnz
jnp
cmp
cltd
mov
decb
jmp
inc
shrb
inc
les
fisttpl
aam
mov
sub
int
adc
adc
mov
push
dec
jno
sub
add
out
xchg
mov
mov
faddp
mov
push
mov
jp
fsubs
jmp
stos
or
pushf
ficoms
and
loope
das
rcr
lcall
repnz
fbld
addl
sub
out
mov
movsl
call
rcrb
inc
jp
push
mov
cmp
fists
push
enter
jecxz
push
inc
xor
pop
sub
push
gs
sub
pop
pop
aad
negb
cmpsl
je
inc
leave
loop
sbb
jb
sbb
mov
shrl
pushl
addr16
ret
fsubrl
jcxz
sub
pop
inc
data16
mov
leave
push
cmpl
ljmp
inc
clc
movsl
imul
rolb
cmp
test
mov
lret
mov
stos
or
jl
repnz
insl
cmp
pusha
lahf
je
cs
sbb
mov
loopne
and
jbe
sbb
shll
rorl
ss
ret
lcall
lea
imulb
rorl
in
scas
inc
rol
xchg
or
les
sbb
sub
in
sbb
ret
push
shrb
jp
sbb
hlt
mov
jle
aaa
or
inc
call
mov
rolb
cmp
jge
mov
jb
push
pop
cmp
jl
push
lret
ss
jl
push
cmp
mov
andnps
cld
clc
pop
push
dec
rcll
call
leave
popaw
inc
lea
mov
lea
sbb
pop
jle
scas
sub
stos
add
stc
jmp
pop
das
jl
mov
js
arpl
enter
push
jne
lret
stos
imulb
and
icebp
mov
jbe
pop
stos
adc
ja
push
push
inc
mov
xchg
mov
popa
mov
std
cld
and
xor
adc
call
cltd
xor
mov
push
push
push
mov
pop
imul
negl
pusha
js
dec
lds
sub
loopne
stos
inc
jnp
cmp
cmp
cltd
je
in
rclb
sub
test
in
mov
lods
push
push
mov
or
cmp
sub
adc
cs
fidivrl
jmp
shll
stos
cmp
sti
sub
int
leave
lods
or
imul
sub
cmpl
repz
lcall
sbb
stos
cmp
insl
jae
es
adcl
cwtl
into
mov
dec
in
xor
mov
in
pop
sahf
push
xchg
or
adc
mov
xor
adcb
sti
icebp
cmp
popa
fcmovne
mov
mov
adc
sub
fldl
imul
je
mov
bound
jnp
stos
and
inc
jb
and
xor
xchg
cld
inc
iret
pop
je
cmp
movsl
test
mov
mov
scas
jo
jo
sahf
jne
in
jge
and
push
dec
dec
fnstcw
mov
addr16
stos
push
inc
ljmp
or
fmuls
dec
dec
movsl
cmp
mov
xchg
lds
fimuls
pop
fcomip
mov
in
insb
add
jae
jnp
dec
dec
into
add
xchg
mov
orb
mov
mov
xor
mov
inc
adc
pop
xchg
out
cmp
add
push
pop
dec
popf
stos
int
sub
leave
js
cmp
push
or
adc
adc
push
mov
add
rcr
push
adc
xchg
mov
hlt
int
inc
ficompl
in
test
xchg
push
jbe
fldenv
pop
push
jmp
pop
push
cmp
stos
pop
cmp
mov
mov
lahf
ret
xchg
mov
add
adc
push
std
lret
add
js
in
sbb
das
mov
sub
push
mov
cmpsb
push
data16
orb
lret
dec
xorb
movsl
lds
adc
or
jbe
rcr
jg
lret
sub
popf
clc
mov
cmp
imul
jmp
scas
in
call
out
loope
xchg
pop
add
pop
adc
out
or
shlb
je
jae
mov
push
repnz
jbe
jp
sub
cmpsb
fsubp
enter
lea
test
ret
test
mov
dec
pop
cmp
ret
push
lods
enter
xchg
rolb
sub
push
imul
ret
test
jb
fdivr
mov
lahf
lds
lock
fdivl
sbb
xlat
inc
adc
inc
int3
stos
lahf
sub
mov
mov
sahf
enter
out
xchg
mov
jnp
dec
icebp
sbbl
xor
xchg
mov
dec
inc
adc
pop
jmp
add
std
and
jne
fisttpl
lret
iret
inc
mov
xchg
sbb
mov
addr16
stc
push
pop
int
fsubrs
pusha
dec
daa
lahf
xor
xchg
xor
lahf
out
sar
adc
ja
lea
xorb
sbb
or
test
sbb
sqrtps
push
loopne
dec
ror
mov
push
xor
sub
or
push
aam
imul
jmp
jmp
es
jns
ret
inc
iret
pusha
cmp
add
jle
shlb
arpl
jp
outsb
popf
idiv
dec
test
and
bound
push
aaa
sbb
mov
loopne
xor
mov
jl
mov
adc
pop
loope
xchg
mov
sti
sbb
dec
inc
imul
jl
ss
adc
dec
cld
repnz
sarb
jle
adc
xlat
into
popa
iret
call
dec
andl
jmp
cmp
mov
js
cmp
xchg
pop
adcb
pushf
repz
cwtl
xlat
adc
or
pop
inc
mov
and
cli
sub
adc
stos
cmpsb
cmp
daa
data16
push
cli
inc
inc
lock
call
lret
dec
and
test
sbb
sbb
and
dec
aad
fwait
aam
cmc
pop
cli
popa
enter
mov
outsl
data16
rorb
pop
push
xchg
xchg
test
into
sub
scas
out
call
or
lds
xor
stc
jg
jns
iret
and
xor
xor
mov
enter
rcr
lret
out
lock
nop
cmp
jp
aaa
inc
cmp
push
les
mul
cmc
push
iret
jbe
jmp
mov
and
push
ret
sbb
pop
shrb
mov
pushf
rolb
fwait
inc
lret
sbb
stc
test
ja
jae
cmp
jns
xor
xchg
or
xchg
or
rcrb
inc
jp
test
outsl
mulb
push
outsb
leave
js
mov
shll
adc
mov
scas
inc
test
cmp
test
or
cwtl
gs
testl
std
adc
cmpsb
xlat
ljmp
jns
imul
ret
xchg
sub
add
sbb
jmp
xchg
data16
pop
mov
das
push
es
fnsave
and
shll
jns
and
jge
mov
xchg
cli
jp
popa
hlt
push
fcoml
inc
pop
out
mov
cmpsl
out
mov
nop
xor
insb
mov
daa
sbb
and
pop
push
divps
cmp
sub
lcall
push
lret
cmpsl
test
imul
lods
lods
into
xchg
adc
pop
sbbb
sbbl
fnstcw
loope
into
ficoms
rcll
xchg
push
xlat
jo
repnz
jns
jo
cs
lahf
inc
pop
loop
idivb
hlt
dec
push
out
xchg
mov
push
adc
xchg
xor
push
cwtl
xor
fldl
in
mov
pop
push
sahf
lock
or
gs
pop
out
sbb
fwait
fwait
stos
lods
nop
stc
mov
sub
and
xchg
mov
mov
cwtl
cltd
xor
stos
pop
and
cs
cmp
repz
dec
fimull
xchg
sbb
fnstcw
pusha
jg
mov
cltd
rcrb
cwtl
popa
ljmp
sub
fsubs
xor
mov
clc
jbe
dec
imul
and
sti
xor
ja
mov
ss
mov
test
popa
imul
sbb
mov
ss
mov
and
and
jmp
call
dec
call
cwtl
scas
cmpsl
fs
mov
jae
stos
ds
cmp
in
testb
rclb
ljmp
jp
lcall
int
lcall
movsl
jge
test
std
jns
repnz
mov
lock
sbb
sbb
xor
jae
outsl
push
daa
jo
gs
xor
cld
in
lret
or
stos
jp
sub
scas
lods
xlat
sbbl
outsb
mov
shl
call
jbe
inc
test
lock
dec
push
cltd
ljmp
inc
fimull
inc
mov
mov
stos
push
mov
jns
cli
es
cmpsl
es
ret
adc
lea
adc
inc
sbb
mov
dec
dec
push
cli
dec
xchg
shl
sub
cmp
cmp
les
xchg
jle
imul
mov
jp
pop
add
loop
addr16
sbb
scas
adc
ret
mov
mov
cmp
dec
ljmp
leave
pop
mov
mov
xchg
cwtl
dec
adc
mov
dec
stc
xor
dec
fs
xor
xlat
lcall
cmp
and
xchg
sbb
add
fisubl
leave
iret
mul
xor
test
push
es
cmp
add
pop
inc
mov
inc
cld
push
cltd
and
mov
xchg
and
jl
xor
push
test
enter
dec
jge
mov
or
adc
sahf
push
jnp
xor
xor
ret
cmp
sub
cmpsl
sbb
add
loop
mov
faddl
or
xchg
or
jbe
hlt
repnz
scas
pop
push
cmpl
cmp
xchg
popf
inc
fcomp
xchg
sub
jle
repz
pusha
insl
lea
test
cltd
pop
out
and
sti
aad
int
mov
mov
shrb
insb
insb
sub
jne
insl
mov
test
sbb
test
rcll
call
adc
pop
insb
dec
sbb
inc
aad
pop
fists
les
int3
pop
cld
adc
lock
fstp
xchg
stc
and
js
sbb
test
lret
lret
mov
lea
mov
mov
imul
jbe
xchg
int3
pop
xor
fwait
imul
dec
popa
or
js
mov
nop
mov
push
add
aaa
iret
and
aam
in
imul
and
shll
inc
cmc
xor
aaa
repz
fmulp
insl
out
mov
jo,pn
sub
push
out
repnz
out
pop
adc
inc
out
hlt
push
scas
cmp
jmp
and
popf
stos
xor
sbb
es
stc
ljmp
clc
rorl
lods
push
adc
imul
test
pushf
adc
imul
push
loop
fwait
mov
fsubrl
mov
push
popf
mov
cs
out
mulb
jl
outsl
rolb
pusha
cmpsb
sbb
xchg
data16
mov
pop
push
mov
into
adc
sti
les
aas
add
into
push
sub
xchg
sti
neg
ret
inc
push
rcrl
sub
in
js
out
push
push
fistpll
outsl
sarb
iret
fdivl
lret
dec
xchg
movsb
into
mov
sub
add
mov
add
jmp
scas
sahf
mov
adc
sbb
xor
ret
pop
or
dec
or
xor
cld
jbe
cmpsl
jb
call
or
fcoms
fwait
sbb
outsb
push
jo
jp
insl
int
jae
cmp
cmc
es
or
sbb
test
fsts
cld
lret
and
jl
add
aam
xor
out
shl
clc
adc
inc
mov
rorb
mov
test
enter
sub
xchg
movsb
loopne
mov
fidivrl
or
cmp
lock
imul
daa
popa
rorb
mov
jp
daa
aas
xor
push
adc
pop
mov
push
add
xchg
jge
adc
int
imul
pushf
cmp
mov
callw
lret
iret
mov
dec
aad
call
insb
orl
dec
mov
icebp
les
sbb
mov
mov
test
add
cmp
inc
les
mov
movl
push
lods
fiadds
xchg
xchg
or
rcll
js
aaa
jne
imulb
ficoms
ja
mov
into
push
jmp
jmp
push
pushf
lahf
push
daa
popa
add
popa
scas
push
roll
xchg
clc
orl
lret
jl
jl
pusha
movsl
cmc
pop
repnz
ret
nop
mov
jo
sub
leave
sub
stos
out
ret
int
xchg
rorb
roll
push
aam
sarl
xchg
push
in
push
cmp
fcoml
nop
xchg
pop
imul
addl
enter
add
lahf
mov
jae
divb
shlb
xchg
jne
pop
add
sub
pusha
das
aam
add
push
movsl
mov
sub
out
in
sbb
std
pusha
es
dec
test
les
mov
adc
mov
mov
out
aas
fdivrl
mov
aam
mov
and
and
mov
imul
cs
inc
pop
adc
mov
cmp
fwait
daa
cmp
sbb
or
sub
lcall
je
out
gs
repz
pushf
adc
add
divl
rorb
push
lret
jae
push
je
xchg
sbb
fildll
mov
sti
test
push
inc
mov
ljmp
lret
adc
mov
aam
mov
andl
and
addr16
xor
and
add
jmp
stos
push
lds
imul
pop
popa
add
lcall
addr16
mov
xchg
mov
dec
es
dec
sub
jns
jg
jne
push
popf
sub
test
push
adc
popf
pop
push
dec
mov
stos
xor
or
cmp
bound
jle
pop
or
out
sub
stos
sub
dec
cmp
icebp
jne
or
sbb
or
inc
inc
add
sbb
jae
pop
push
mov
insb
inc
sub
mov
iret
or
subb
cs
loopne
movsb
jno
lods
mov
fsub
mov
sub
outsl
inc
mov
add
sti
das
mov
jl
cs
fsubr
inc
shl
ret
in
fdivr
and
mov
add
and
inc
or
jg
jecxz
mov
shrl
test
enter
mov
mov
xchg
call
icebp
jecxz
jp
jle
push
dec
jmp
cmp
cli
insl
push
pop
xlat
pop
pop
xor
scas
stos
pop
aaa
jl
push
dec
sar
lea
popf
mov
lahf
dec
add
inc
popf
pop
shlb
inc
mov
sub
add
xor
cli
sbb
popf
jbe
cs
mov
mov
push
out
lea
xor
imul
jae
iret
cmpsl
mov
in
ss
cli
enter
fnstcw
lahf
push
inc
push
aas
shlb
popa
into
loop
fdivl
push
sub
andb
jp
xchg
sbb
leave
test
pop
or
jge
mov
bound
push
xchg
aam
sbb
enter
xchg
inc
dec
fadd
js
adc
cmp
xchg
ret
push
xor
sbb
jmp
aaa
das
jmp
cmp
and
jmp
cmpb
pusha
and
int
inc
hlt
sub
inc
out
movsb
fists
pop
add
rorl
std
pop
les
stos
dec
push
xchg
je
in
mov
bnd
ljmp
mov
orl
roll
lods
aaa
sub
shl
stos
inc
jp
jmp
xlat
movsb
inc
imul
dec
push
ret
sub
xor
jecxz
test
jmp
and
es
int3
out
xchg
pop
cmp
into
adc
mov
or
data16
mov
or
dec
add
aaa
xorl
flds
outsl
lcall
xchg
xlat
int
or
dec
arpl
inc
adc
inc
and
cmp
and
out
xlat
cli
shr
fcmovnbe
push
je
or
add
pop
mov
daa
push
push
add
fisttpl
pop
mov
xor
add
push
incb
stc
ljmp
negl
xchg
lods
ret
push
out
jnp
mov
sub
mov
push
out
xchg
sbb
xchg
pusha
pop
jmp
cmpsb
das
bound
sbb
sbb
push
sub
rcr
pop
in
scas
sti
leave
loope
sbb
lds
ror
and
mov
mov
in
xor
daa
je
jne
ja
notb
cs
push
mov
mov
test
mov
movsb
or
in
jecxz
adc
shrb
mov
out
test
mov
sbb
cmp
add
jecxz
mov
fisttps
xor
fs
cmpsl
pop
pop
repnz
inc
sub
jle
push
cld
mov
xchg
inc
nopl
adc
pop
inc
jle
jns
stos
mov
loopne
sbb
xor
xchg
int
movsl
push
lds
test
in
dec
push
nop
lahf
cmpsl
jae
mov
stos
sbb
rcrl
pop
jns
dec
jb
mov
dec
dec
mov
repnz
cmp
dec
shlb
js
mov
mov
hlt
mov
shlb
stos
leave
in
cmpl
xor
pusha
in
xor
stc
xchg
xorb
push
add
mov
out
inc
rolb
add
or
cwtl
insb
pop
mov
testb
je
sub
pop
popf
mov
mov
push
jg
adc
cmp
jle
ja
call
xchg
fucomi
cmpsb
pop
mov
pop
push
mov
lods
cmp
cmpsl
sahf
test
lock
fnsave
cmp
je
add
fisttpl
mov
inc
roll
sbb
and
je
daa
sti
fs
in
mov
cli
fxch
repnz
ret
mov
in
dec
les
xchg
in
mov
cli
jl
cmp
out
pop
push
cmp
movsl
mov
sti
xchg
add
movsl
sub
sub
and
pop
or
enter
jno
in
mov
leave
fildll
xchg
scas
cltd
push
add
sbb
test
fldcw
arpl
lcall
outsl
iret
in
dec
ret
out
mov
test
repz
imul
movsl
mov
stos
mov
repz
pop
movsb
add
ret
lret
mov
push
and
cmpl
clc
or
stos
jmp
push
sar
mov
mov
sub
sbb
dec
fwait
cs
mov
xor
andl
test
cmc
sbb
mov
and
cmpb
ds
fcompl
pop
jb
fldcw
les
mov
movsb
mov
mov
mov
xor
pop
shlb
icebp
andb
js
ror
push
stos
rorb
mov
mov
inc
mov
hlt
sbb
popa
fimull
dec
dec
inc
popa
ficompl
scas
mov
xor
fwait
aam
xchg
xor
sub
jns
fisttpll
sahf
pop
add
test
aas
jge
jge
stos
dec
dec
aas
xor
popf
in
insl
cmp
fisubrs
test
dec
sti
cltd
mov
call
add
mov
stos
rorl
add
mov
mov
dec
or
imul
xchg
push
jp
push
fldl
dec
in
sbb
popa
stos
pop
jecxz
repz
pop
andl
sub
jb
fwait
rcrl
ja,pn
mov
pop
mov
mov
push
cmp
push
int
jnp
and
jno
sub
test
sub
push
or
add
mov
pop
xchg
mov
add
jmp
lock
push
sti
inc
mov
dec
cmp
cmp
mov
pop
lea
outsb
jmp
pcmpgtw
or
xor
leave
dec
xor
sbb
adc
and
je
addr16
sti
ret
jbe
jno
push
xchg
add
jge
loope
mov
nop
mov
addr16
xchg
dec
push
sub
adc
sub
sbb
xchg
arpl
addl
xlat
ret
add
jo
push
or
xchg
jo,pn
shlb
jmp
cmp
test
pop
mov
repz
inc
sti
mov
mov
jo
or
push
fimuls
add
push
and
xchg
in
js
out
arpl
cmp
jl
mov
pop
testl
push
dec
xchg
aaa
lcall
xchg
or
pop
js
mov
hlt
nop
fdivrs
stc
pop
pop
test
jmp
push
imul
jle
fstps
sub
arpl
out
sahf
sbb
sub
aaa
in
and
ss
sbb
movsl
adc
or
push
dec
inc
jmp
xchg
dec
rcrl
iret
mov
add
xchg
loop
mov
das
int
mov
fnstenv
in
mov
hlt
nop
lret
push
loopne,pt
ret
ss
sbb
dec
lret
jno
adc
lret
sahf
cmp
inc
lret
mov
mov
xor
jmp
and
les
das
in
xchg
jo
lock
pmulhuw
cmpsb
push
gs
ljmp
jae
xchg
aaa
sbb
movsb
popf
lods
jmp
lahf
pop
jmp
es
orb
lahf
insb
jns
push
ja,pt
cmpsl
or
add
adc
jmp
fidivrl
or
adcb
out
mov
mov
sbb
adc
sub
inc
mov
adc
mov
cwtl
mov
or
add
cmp
cmp
inc
lods
inc
inc
dec
pusha
dec
xchg
pop
outsl
fxam
jle
andl
int3
add
ljmp
int3
xor
xor
add
scas
push
sbb
mov
cmp
inc
lock
into
lret
sbb
cmc
pop
xchg
mov
out
add
lahf
lock
fiaddl
push
fcomp
sub
jmp
and
adc
testl
xchg
lret
xor
test
es
mov
adc
jnp
shrb
pop
cmp
sbb
push
dec
cs
ljmp
mov
xchg
cmp
scas
pop
mov
jae
test
add
xor
in
test
xchg
sbb
insb
imul
xchg
mov
fildl
cmp
add
xor
pusha
mov
adc
sub
xlat
iret
lret
rcll
and
mov
sbb
sbb
mov
ret
mov
les
out
fs
cwtl
cmp
inc
adc
sbb
cli
in
add
orl
and
repz
loopne
imul
faddl
and
cld
popf
jno
mov
or
inc
cmp
inc
sub
movsl
mov
movb
cli
cmpsl
stc
mov
aam
xchg
movsl
idivl
or
xor
cmp
xlat
hlt
popf
mov
sub
jo
or
add
into
dec
pushf
icebp
push
dec
cmc
leave
movsl
jp
mov
outsl
mov
jg
xchg
in
or
add
ds
sbb
inc
testb
test
or
xor
push
sbb
test
scas
cwtl
scas
cmp
jmp
inc
pop
outsb
and
test
iret
femms
cld
add
xchg
test
ret
mov
imul
aaa
leave
xor
scas
inc
int3
add
scas
mov
dec
pop
mov
jg
arpl
mov
mov
xchg
loope
out
fwait
repnz
xchg
xchg
dec
adc
xchg
mov
push
decb
call
sbb
mov
mov
test
mov
sbb
call
out
int3
loop
sub
mov
aaa
mov
jo
jl
pop
dec
pop
inc
enter
mov
mov
call
push
mov
in
or
stc
orb
adc
movsb
in
out
fnstcw
imul
data16
out
sahf
aaa
add
sbb
int
sbb
lret
xor
xchg
cmp
fwait
das
sbb
imul
add
push
movsl
leave
mov
cli
lea
adc
es
lods
push
cmpsl
or
or
cmp
in
pop
push
mov
jo
pop
stos
cmp
mov
mov
mov
add
xchg
test
sbbl
push
mov
dec
adc
out
mov
xor
mov
push
fimuls
hlt
stc
pusha
push
cmp
cmp
ficoml
or
sbb
fwait
cmp
jmp
js
jle
daa
and
outsb
push
outsl
cmpsb
jb
ljmp
add
or
adc
test
jmp
fcmovbe
loop
popa
imul
call
xor
outsl
mov
ss
sub
mov
das
or
repnz
mov
ljmp
mov
adc
loope
ja
sbb
and
fldl
clc
add
js
cld
dec
hlt
cwtl
cmp
adcb
inc
mov
or
xlat
dec
xor
fcoms
rcrl
repnz
ss
push
pop
pop
ja
sarl
je
jns
mov
repz
push
jmp
arpl
in
shll
scas
push
mov
mov
xor
mov
cmp
lret
adc
adc
cs
test
mov
clc
test
into
add
pop
adc
test
hlt
cmp
push
and
in
mov
add
ret
movsb
cltd
shll
mov
push
pop
sub
stos
pop
nop
inc
inc
insb
or
out
adc
pop
aad
jne
cmc
fisubrs
mov
outsb
push
ret
adc
push
fldcw
sbb
lds
and
cmp
cmp
jmp
lret
xchg
pop
pop
xchg
roll
ret
mov
scas
sub
sub
inc
scas
or
nop
addr16
ljmp
je
fnstsw
test
xchg
nopl
cs
imul
cmp
popa
and
repnz
enter
xor
inc
mov
and
es
xchg
cs
and
ss
adc
and
shl
cmc
pop
adc
add
jp
xchg
push
xchg
fs
into
add
repnz
mov
jb
mov
sbb
std
push
push
out
jecxz
insl
lcall
jo
mov
pushf
fisubrl
mov
add
mov
dec
cmc
out
aas
and
addr16
add
divl
outsl
push
cli
mov
xorb
pop
loop
add
in
xchg
sbb
mov
mov
mov
cmp
cmpl
xchg
loop
cs
movsl
dec
adc
xor
shll
loop
xchg
inc
fs
xchg
jp
mov
fistpl
adc
xor
add
mov
and
cmpsb
add
jmp
ret
push
rolb
mov
cmp
out
pop
aaa
dec
xchg
add
aam
movsb
fwait
mov
adc
or
inc
mov
sub
sub
or
pop
sub
ja
mov
stos
iret
jns
cmp
loopne
mov
pop
push
mov
std
mov
xchg
xchg
ror
les
aam
add
shrb
nopl
push
dec
imul
bound
mov
adc
fcomip
mov
call
sbb
lods
or
nop
fwait
xchg
into
dec
cmc
cs
jns
cmpsl
outsl
shlb
inc
xlat
imul
fwait
int
push
adc
and
mov
push
mov
add
lods
add
sub
negl
sar
mov
sub
aaa
inc
aam
arpl
ficoms
out
mov
ret
testb
push
dec
inc
xchg
push
aaa
shlb
sub
jb
add
imul
jle
fxch
fs
mov
jno
in
stos
sahf
jno
jno
test
and
in
mov
fdivrs
push
adc
cmp
push
ljmp
in
addr16
dec
push
les
icebp
ljmp
repz
xchg
mov
cltd
jbe
xchg
loop
dec
in
push
cwtl
mov
fs
ret
or
insl
add
movsl
jns
stc
push
adc
into
sub
mov
xchg
xorl
das
pop
mov
adc
cmp
add
shll
sub
daa
cli
xlat
inc
pop
fstps
sbb
incb
dec
xchg
out
xchg
arpl
adc
xchg
push
mov
lcall
nop
inc
xorl
adc
mov
jbe
sub
mov
cld
pop
std
subl
mov
cs
pop
mov
aam
stc
cmc
push
sbb
aaa
jnp
jge
mov
cmp
popf
hlt
shlb
lret
loop
adcb
push
imul
push
mov
sar
pop
mov
mov
test
les
push
sbb
xchg
mov
cmp
inc
cmpb
pusha
cltd
daa
dec
cmpl
mov
aad
loope
lcall
mov
inc
add
adc
clc
xlat
push
rcr
out
push
add
insb
cmp
push
repnz
and
je
and
outsb
pop
orl
out
xchg
int
div
xchg
lret
nop
lods
cmp
or
mov
sub
outsl
and
fstl
daa
adc
popa
cld
ret
xchg
xor
lock
pop
mov
or
cmp
cld
lea
test
das
lahf
int
stos
inc
cwtl
and
andb
xchg
test
push
imul
faddl
dec
mov
loope
xchg
call
mov
pop
lea
or
das
adc
fwait
je
add
xchg
inc
ja
testb
dec
xchg
fsubrs
cmp
addl
movsb
add
scas
imul
ja
int
stos
nop
add
outsb
mov
xchg
xchg
sub
stos
nop
fimull
or
pop
orb
add
jb
sbb
mov
jns
and
sbb
dec
jecxz
add
outsb
sbb
insl
in
jne
sbb
xor
push
or
aas
bound
iret
cmp
lcall
jbe
dec
ja
out
cmp
mov
xchg
sbb
sar
sub
add
adc
push
fmull
lret
fdivrl
adc
inc
sarb
lret
vpcmpgtd
es
repz
pop
jae
fs
imul
fs
in
adc
pop
dec
mov
adc
pop
xor
xchg
add
mov
lock
dec
mov
daa
sub
fisttps
cli
mov
lds
xor
xor
sub
movsb
addr16
repz
sbb
or
sti
in
rcl
cs
push
pop
pop
pop
adc
leave
outsl
sbb
push
fdivs
sbb
out
divl
jmp
mov
mov
nop
pop
lea
jo
test
jb
leave
lds
xlat
out
lret
push
movsl
outsl
mov
lret
mov
fcomi
mov
dec
inc
rol
xchg
pop
cmp
jnp
fisubrs
int
sarl
jl
dec
dec
popl
or
xchg
and
sbb
lock
das
cmc
addr16
insl
adc
push
mov
jp
mov
aad
xor
icebp
or
xor
ljmp
pop
shr
jmp
stc
push
mov
lahf
aam
ficomps
imul
fsubrs
imul
sbb
pop
aam
inc
inc
aas
scas
in
and
je
es
pop
popa
sti
xchg
cs
and
and
arpl
jno
fadds
data16
es
mov
nop
popa
imul
push
mov
outsb
aas
and
adc
dec
xor
jp
inc
repnz
pop
mov
push
aaa
dec
jl
jge
decb
xchg
or
arpl
rorl
fcoml
aad
je
pop
fidivrl
mov
popa
out
inc
sub
jnp
aad
in
cmp
fcmove
xchg
xchg
mov
sbb
xor
pop
aad
push
ljmp
sbb
out
fidivrl
and
rolb
cmpb
stos
add
pop
dec
jne
xchg
test
mov
clc
jge
add
test
mov
jo
xor
jne
xor
add
xchg
mov
dec
pop
xchg
push
jbe
mov
dec
dec
ret
rol
loopne
fstps
xchg
push
mov
imul
or
out
cli
fbstp
sbb
imul
outsl
jae
test
push
icebp
test
sub
lds
mov
mov
mov
repz
push
and
inc
sbb
jne
push
lret
sbb
xchg
inc
cmp
mov
pop
add
icebp
pop
push
jle
cli
cmp
stc
fisubl
sub
fbstp
adc
leave
pop
stos
mov
adc
pop
loope
jb
idivl
or
add
cwtl
sub
and
pop
xchg
pop
imul
mov
xor
imul
sub
push
sbb
mov
sti
movsb
inc
mov
cmc
lcall
jle
out
loope
pop
mov
pop
cmp
mov
sbb
dec
sahf
add
mov
mov
cmpl
and
out
and
adc
jnp
push
cwtl
fnstcw
sub
mov
cmpsl
mov
insb
out
pop
cmp
cwtl
xchg
pop
ljmp
and
call
call
dec
push
adc
out
mov
lahf
push
xchg
lea
and
xor
shl
ss
lock
add
and
aas
orl
add
andl
mov
push
xchg
pop
in
mov
ficompl
cmp
adc
in
aam
loopne
fimull
jo
arpl
cld
xchg
jp
sar
push
and
add
insb
sti
cmp
pushf
xchg
loop
int3
int3
les
mov
outsl
dec
imul
aad
xor
pop
aas
cwtl
mov
ds
imul
bound
sbbb
push
loop
shlb
loope
outsb
in
pop
outsl
out
lcall
in
filds
mov
jae
or
sbb
icebp
rcr
dec
icebp
stos
cmc
clc
dec
lahf
xor
cwtl
sbb
fbld
jne
xor
xchg
or
out
shrb
daa
out
cwtl
out
into
cmp
dec
xor
jmp
or
aaa
out
mov
and
pop
cmp
pushf
xchg
mov
sbb
lds
push
es
xchg
mov
ret
aad
xor
sbb
std
jmp
mov
push
xor
jl
pop
popa
lods
dec
jno,pn
mov
sbb
cmp
push
repz
lcall
addb
lock
lea
mov
xchg
outsl
lcall
pusha
and
jns
mov
es
sbb
xor
ja
inc
xchg
ljmp
sub
sub
or
jne
cmpsb
and
mov
andl
adc
and
popa
mov
adc
ficoms
int
mov
push
shlb
fwait
jns
rolb
push
sub
push
stos
sti
dec
into
xchg
jbe
adc
jno
imul
cmpsl
lds
in
xchg
jg,pt
jbe
push
lods
xor
cmp
outsl
addl
rorl
pushf
fwait
mov
add
jb
jecxz
outsb
in
xor
mov
subl
je
daa
lret
out
pop
adc
pop
jge
pop
inc
inc
or
subl
pop
inc
xchg
lds
fstps
mov
loopne
int3
pop
xchg
hlt
dec
jo
dec
lahf
jnp
cli
scas
dec
xor
push
punpckhwd
test
push
mov
cltd
pop
adcb
pop
sub
popa
loopne
fidivl
andb
mov
nop
adc
mov
data16
push
data16
cwtl
sub
call
pop
roll
xor
mov
je
mov
mov
dec
push
imul
lret
cwtl
cmp
shrl
in
frndint
or
dec
scas
jge
je
or
inc
jns
adcl
lods
cmp
andb
jo
in
cs
sti
and
add
adc
pop
bswap
hlt
int
popa
int3
mov
test
jecxz
push
sub
out
fisttpl
loop
lcall
out
cmpsb
jmp
jo
push
adc
jp
js
inc
dec
cmp
pop
in
xchg
pop
roll
out
jo
jno
lret
or
test
xchg
ret
gs
stos
pusha
xchg
push
addr16
es
pop
imul
inc
push
jo
clc
test
xorb
bnd
dec
dec
cmp
aaa
push
pop
test
pop
nop
or
shlb
iret
or
mov
cmp
xlat
jnp
icebp
jae
dec
or
mov
jae
pop
enter
xchg
test
test
cmp
push
push
outsb
pop
cmc
popf
in
out
push
push
mov
cmp
int
ret
cmp
je
mov
push
popa
sbb
pop
dec
mov
das
scas
das
xchg
push
or
add
cltd
jmp
test
test
jp
lea
add
lods
or
fists
fistl
mov
jmp
mov
push
pop
mov
jmp
mov
mov
xor
fwait
decl
scas
inc
cli
stos
bnd
nop
ljmp
ja
shll
mov
inc
cmp
inc
xchg
mov
popf
jbe
divl
xor
cmc
call
inc
aas
int
insl
or
test
add
mov
dec
add
mov
jnp
or
jnp
or
add
or
dec
dec
adc
or
xchg
test
sbb
movsb
sbb
cmpsb
lret
jns
jecxz
jge
pop
leave
mov
pop
popf
test
outsb
mov
fnstcw
ret
fiaddl
addb
addl
loopne
nop
mov
les
or
test
inc
in
int3
mov
xor
inc
lds
push
scas
lcall
movsb
push
stos
jle
jns
sahf
loopne
imul
imul
push
pop
adc
cmp
push
pushf
cmpsl
movsl
pop
int
lahf
jb
jno
xchg
xchg
iretw
test
push
sahf
cltd
pop
sub
jecxz
icebp
rcll
daa
jnp
add
push
cli
cli
rcll
fs
push
stos
xlat
in
mov
jno
fidivl
in
es
adc
fmul
sub
cmc
jb
test
outsl
inc
int
lahf
pop
lock
inc
jns
cmp
push
push
mov
add
add
stos
push
or
orl
sbb
ret
xchg
mov
cwtl
xchg
fidivs
rol
clc
cmp
sbb
in
pop
repnz
in
mov
fidivs
test
dec
cltd
cli
push
inc
xchg
js
notb
addl
mov
js
inc
shll
push
std
mov
xchg
and
es
stc
add
mov
mov
out
int3
push
mov
push
ja
fwait
cmp
fistpl
outsb
popf
push
pop
mulb
mov
insl
mov
adc
pusha
pop
mov
subl
mov
in
divl
and
fidivrl
or
and
das
sub
jle
fsubrs
mov
cmc
cmp
mov
adc
std
xorb
mov
rol
add
cmpsl
jbe
mov
mov
arpl
fistpll
lcall
or
mov
or
push
or
dec
leave
xchg
inc
ss
mov
and
mov
bound
orl
xor
into
push
mov
shlb
adc
pop
scas
in
jg
into
xor
sub
inc
lret
adc
adcb
aaa
lahf
fidivrs
cmpsb
adcl
ret
dec
test
pop
fnstsw
mov
xchg
iret
cltd
and
test
add
repnz
scas
test
push
jle
je
push
inc
stos
stos
cli
inc
add
inc
xchg
lock
xchg
xlat
pop
push
icebp
xchg
gs
mov
gs
lods
test
xchg
pop
xor
lods
mov
push
cmp
shrl
inc
repz
push
imul
dec
mov
call
mov
negl
cld
ret
rcr
push
test
cmpl
xor
mov
pop
repnz
mov
std
int3
imul
cmp
inc
pop
jo
dec
push
je
jno
test
arpl
xlat
loope
push
test
scas
fwait
adc
lahf
push
mov
fs
mov
cmp
in
fs
jmp
push
push
les
pop
xchg
insb
clc
fimull
arpl
and
sub
cltd
data16
les
cwtl
lds
or
push
out
push
mov
push
imul
mov
add
push
sahf
mov
or
or
sub
rclb
jo
add
adc
pop
add
add
and
jecxz
sub
push
divps
sbb
cmc
outsb
aaa
test
mov
xchg
movsb
mov
das
mov
imul
insl
insl
sbb
popf
aas
add
mov
mov
addr16
and
push
mov
and
xor
outsb
ss
clc
aam
ljmp
jecxz
lods
out
fyl2x
cmp
cmp
stc
inc
lods
mov
sub
mov
lock
pop
inc
sbb
pusha
dec
inc
in
int
inc
mov
jp
mov
push
out
jns
xor
inc
stos
and
sbb
fld
aad
or
jb
std
mov
inc
or
push
jecxz
mov
jno
cmpsl
decl
cmpl
mov
fiaddl
fcom
mov
nop
push
shrl
jmp
rcll
mov
jae
insl
adc
ljmp
pop
repz
jl
cmp
inc
cld
aam
stc
pop
loope
andb
ja
mov
pushf
push
fwait
sub
pop
enter
rcll
jmp
daa
mov
stos
inc
sbb
rorl
jnp
cmc
andl
hlt
inc
or
fwait
cmpsb
jbe
xor
stc
ret
pop
push
and
bswap
cld
mov
mov
xchg
daa
jo
out
out
pop
inc
sbb
mov
jg
mov
aad
ljmp
pusha
out
cmp
xchg
popf
mov
mov
inc
or
jne
aam
xchg
cs
cmp
outsl
cmpsl
cmpb
std
dec
pop
xor
hlt
adc
or
push
mov
jmp
cmp
test
mov
lods
and
sbb
jle
sbb
xchg
insb
and
nop
scas
mov
inc
scas
std
fmuls
mov
pop
or
inc
pop
mov
push
fs
or
shll
fimuls
push
cli
xchg
je
pop
adc
call
xchg
xchg
or
dec
cmpsl
fnstsw
mov
inc
pop
inc
cmp
dec
and
sub
sti
push
loop
mov
xchg
out
cmp
adc
push
fwait
sub
movsb
fwait
pop
cld
in
sub
loope
in
mov
pop
jle
pushf
sub
int3
mov
call
nop
mov
out
les
les
push
push
stc
out
adc
sahf
mov
jo
jecxz
jmp
flds
push
xor
dec
sbb
incb
inc
ficoms
addr16
hlt
gs
movsl
inc
xor
fs
jbe
paddb
xchg
mov
xorl
in
sbbl
paddsb
xchg
stc
stos
mov
ja
jbe
imul
xchg
scas
push
and
cli
nop
lods
mov
inc
push
jp
xor
jge,pt
mov
lret
insb
push
or
out
rclb
shrb
iret
push
outsb
in
jb
sti
addr16
das
movsb
dec
sbb
push
mov
subl
sbb
insb
test
rorl
push
mov
loope
fidivs
js
cmpsb
add
lods
inc
sahf
ret
dec
push
and
lcall
push
or
shll
mov
out
cwtl
and
push
pop
pop
mov
mov
push
cmc
mov
int
pushf
jp
aad
cmp
mov
sub
in
js
add
dec
aam
rcrb
jbe,pn
mov
dec
rolb
sub
imul
jmp
sti
sbb
add
aas
cmp
and
fs
mov
jge
dec
int3
aas
lahf
movsb
test
call
adc
std
xlat
test
fisttpl
cmp
test
mov
les
or
or
and
xor
icebp
xlat
lret
xchg
xor
ja
fsts
and
add
mov
loopne
mov
in
xchg
sbb
xor
aad
push
les
stc
or
loopne
cmp
jae
sub
xlat
sub
xchg
ret
daa
or
sub
fnstcw
sub
and
clc
stc
mov
sub
mov
loop
js
jo
inc
inc
iret
push
cmpsb
jbe
xchg
push
repz
pop
lcall
xor
aas
xchg
sbb
push
mov
and
mov
dec
xor
iret
push
push
add
idiv
movsb
bound
lret
loop
cld
in
popf
test
imul
popf
dec
fisubrs
sti
and
subb
jo
test
pop
lcall
cmp
push
popf
mov
in
or
push
xchg
cmc
mov
push
adc
stos
test
bound
ds
push
cmpsb
fadds
jbe
fildll
fiadds
repnz
mov
push
cmp
mov
ss
fwait
dec
mov
int
mov
push
loop
sub
jne
pop
lods
psubusb
xor
lock
ja
sbb
mov
cwtl
mov
ja
fcmovbe
hlt
xchg
pop
dec
cwtl
out
cmp
sub
mov
pop
cmc
push
fdivp
add
mov
daa
daa
lods
cmpsl
shlb
rol
jp
mov
out
jmp
mov
rclb
stos
fwait
cmpsb
nop
outsb
pop
adc
cwtl
inc
lret
inc
les
into
mov
rcll
and
cmpsl
cmp
ror
cmpsb
mov
test
cmp
leave
in
cld
scas
ja
dec
cmc
xchg
mov
fsts
sbb
mov
push
inc
cwtl
gs
pop
xchg
test
push
push
stos
fistpl
pop
mov
rorl
adc
dec
fcompl
or
incb
lea
sbb
pusha
jae
jecxz
xchg
addr16
or
imul
ret
icebp
sarl
iret
js
out
call
mov
cs
ret
xor
xchg
in
popl
inc
cmp
or
std
sub
lock
aam
rcrl
push
aad
jmp
push
push
mov
inc
movsb
push
inc
mov
pop
call
aas
sbb
pop
in
xor
pusha
sahf
xchg
sbb
rcll
rcll
or
lock
and
mov
ljmp
in
add
dec
popf
pop
push
mov
and
jns
lret
cli
aas
inc
pop
pop
pop
subl
ljmp
push
inc
or
add
xor
jle
inc
pop
mov
xchg
dec
inc
ljmp
shlb
cmp
adc
loope
xor
inc
das
ret
call
mov
adc
inc
sbb
loopne
push
lret
movsl
pusha
test
pusha
or
dec
enter
or
mov
and
bound
mov
out
jp
js
or
xor
lock
fwait
jnp
dec
sub
add
dec
jp
orl
inc
mov
jg
mov
pop
rolb
outsl
inc
dec
xor
jbe
pop
mov
lcall
movsl
hlt
mov
roll
pop
jbe
pop
adc
mov
mov
test
push
adc
push
cli
addr16
data16
scas
push
mov
aad
out
fldt
in
loope
mov
xchg
lcall
pop
mov
gs
or
mov
gs
test
dec
add
add
lcall
inc
and
xlat
lahf
bound
dec
test
nop
sbb
shl
mov
cmpsb
jle
mov
mov
scas
xchg
leave
cmpsb
shrb
adc
xor
rcrb
adc
daa
sub
sbb
lds
jp
add
xor
push
insb
lcall
aad
std
in
sbb
jmp
lret
lods
subb
leave
testl
inc
idivb
mov
rol
inc
mov
dec
fnsave
pop
sub
lods
das
cmp
mov
push
sub
cvttps2pi
mov
add
xor
loope
bound
pop
adc
cld
jg
mov
or
adc
je
mov
adc
sbb
jl
mov
outsb
nop
xor
sub
loopne
out
jl
push
daa
jo
out
andb
cmp
enter
stos
pop
outsl
jns
out
cs
and
ss
stos
add
clc
inc
in
ret
fs
xchg
out
mov
mov
lret
push
and
xchg
add
adc
mov
repz
push
and
ljmp
jl
out
inc
pop
daa
lcall
dec
pop
call
les
or
movsb
neg
mov
push
sti
data16
mov
stos
cmpsb
mov
xchg
xlat
in
ds
sub
xchg
mov
in
push
gs
mov
rorb
sbb
sub
dec
mov
cmpsl
into
jmp
movsb
add
ds
pop
mov
mov
xor
xlat
scas
jae
pop
daa
mov
lds
and
es
sbb
mov
jnp
unpcklps
jge
mov
and
out
xor
or
or
das
cmpl
shl
pop
das
roll
add
jl
mov
mov
addl
lcall
push
or
movl
xchg
pop
pushf
dec
out
push
in
jge
pop
in
cwtl
movsl
mov
inc
stos
mov
mov
fmuls
cltd
pushf
pop
rol
jns
inc
test
dec
stc
mov
mov
sbb
xor
push
cli
mov
mov
jp
xorb
inc
jnp
fsub
daa
test
add
pop
xor
popa
push
mov
decb
rorb
xchg
lret
jge
and
add
adc
outsb
cld
mov
xchg
and
xor
rcll
mov
out
and
sub
inc
inc
sub
push
outsl
xor
push
add
and
sub
icebp
sbb
push
lret
jecxz
push
cs
mov
xabort
data16
pop
gs
movsl
mov
and
in
lcall
sbb
sbb
sub
hlt
mov
inc
xor
cmpsb
mov
imul
sti
stc
bound
outsb
test
adc
mov
sti
or
lahf
nop
lahf
rcll
jno
inc
mov
lcall
add
rcrb
push
mov
push
stos
cmp
popf
inc
adc
xor
stc
ljmp
add
shrl
repnz
imul
test
inc
inc
lock
sarl
inc
mov
ds
xchg
xchg
test
xor
jno
or
insl
out
sar
jl
movsl
inc
out
xchg
sbb
inc
in
insb
mov
xchg
xlat
test
addl
inc
cli
xchg
mov
and
or
jle
shl
cmp
std
mov
xor
pop
hlt
js
inc
adc
or
popf
js
fstl
stos
lock
int
pop
imul
jl
stos
lods
jne
adc
jl
lcall
mov
sub
mov
stos
bound
mov
in
mov
push
pop
or
shlb
cmp
push
xchg
sbb
cmp
inc
mov
inc
xchg
lahf
pop
dec
imul
in
pop
sub
mull
shrl
imul
or
insl
sbb
cltd
and
and
es
xchg
jge
push
out
aad
fimuls
cmpsl
pop
data16
rcrl
mov
mov
mov
ljmp
mov
nop
mov
xorb
int
in
jbe
dec
pop
sbb
fnstenv
ds
jp
and
fwait
das
inc
je
sub
mov
jp
mov
lahf
repnz
or
outsl
inc
lcall
push
test
out
mov
loop
xchg
and
loope
es
push
jge
enter
mov
lods
stos
jle
inc
sub
mov
fdivr
adc
push
jge
mov
data16
xor
xlat
dec
or
mov
and
adc
jle
cmp
fdivr
cmp
pop
jbe
ret
adcl
and
cld
aam
ljmp
ret
in
out
mov
xlat
xor
xchg
arpl
pushf
or
aad
xchg
dec
sti
cmp
jno
negl
mov
or
push
push
mov
scas
cmpsb
cld
hlt
jnp
stos
inc
push
sarb
add
pop
fbstp
sub
test
shlb
mov
jnp
xchg
pushf
or
enter
cwtl
repnz
xlat
mov
xchg
push
aas
mov
cmpsl
jp
mov
sub
ds
mov
div
ljmp
jl
cmp
mov
ljmp
push
dec
mov
loope
or
lahf
fmul
int
fildl
xor
inc
mov
inc
js
out
mov
movsb
ss
jbe
mov
movsb
or
aam
lret
ret
jge
cld
movsb
daa
sbb
insb
and
mov
xor
shlb
mov
xchg
aaa
ljmp
xchg
adc
xor
adc
push
mov
sub
add
cmp
in
lock
rcll
and
mov
je
cli
or
mov
icebp
dec
jp
cmpsb
stos
leave
scas
sub
xchg
adc
jnp
pop
push
cmp
dec
mov
mov
js
mov
pop
inc
cmpsl
out
popa
inc
jge
dec
and
je
js
rcr
fcomps
push
movsl
xchg
nop
add
mov
pop
pushf
mov
mov
adc
jo
adcl
ret
sub
xchg
cltd
pop
xor
jg
pusha
aas
cmpsl
fbstp
testb
and
push
jl
xchg
mov
mov
push
mov
jle
push
adc
mov
es
out
imul
mov
fldl
mov
lods
mov
jb
push
and
sbb
pop
fistpl
inc
xor
dec
rorb
jl
adc
push
fwait
cmc
and
fs
and
cs
popa
cmp
stc
pop
xor
lods
mov
xor
mov
in
jbe
sbb
icebp
scas
xchg
mov
and
imul
sar
fnsave
out
sbbl
ret
mov
lahf
dec
lods
inc
xchg
add
mov
rclb
sbb
cmp
adc
cmc
inc
mov
les
dec
mov
pushf
and
andl
mov
sbb
push
cmpsb
out
adc
lea
fucomi
adc
lea
mov
and
dec
sbb
jo
mov
rcrl
inc
lds
out
pop
imul
imulb
mov
fs
mov
aad
mov
in
xchg
xor
cmpb
jns
lock
or
cmc
lds
rclb
cmp
jp
cmc
xchg
mov
pop
sbb
lea
mov
mov
jecxz
lock
fistpl
repz
fnstcw
fidivl
test
sub
mov
cmp
test
or
lea
inc
lock
adc
fadd
jno
ret
fucomp
jecxz
dec
pop
or
dec
push
arpl
paddw
aas
loope
push
scas
or
cmp
xchg
jecxz
insb
sbb
or
roll
leave
inc
lret
leave
and
cmp
clc
mov
cld
and
int3
into
das
adc
mov
cmp
adc
xchg
add
mov
dec
sub
xor
imul
inc
pushf
sub
mov
inc
enter
test
imul
push
mov
or
std
lret
mov
jg
jne
cli
sub
es
subb
stos
sbb
clc
sarl
sbb
or
lea
and
and
push
dec
mov
add
mov
cmp
lcall
cmp
jnp
pushl
xbegin
shl
sti
mov
and
int3
mov
cmp
mov
pop
lret
mov
outsl
call
repnz
or
ret
aam
and
xchg
dec
adc
mov
adc
hlt
adc
outsl
mov
imul
inc
nop
jle
in
fmulp
dec
and
sub
daa
scas
fsubl
add
imul
mov
sub
cmp
aad
gs
xor
pop
push
cmp
out
push
push
ss
pushf
les
cmp
or
pop
fisttpl
aaa
addl
jle
adc
ret
lods
jns
dec
pop
add
shlb
adcb
sbb
mov
movsb
inc
xor
pop
mov
jae
pushf
cmp
push
mov
add
sbb
xor
into
loope
sbb
dec
jns
aas
pop
inc
lahf
and
stc
data16
ret
pop
dec
push
sub
fstp
mov
std
out
test
xor
cmp
sti
xchg
loopne
inc
dec
jno
aas
ljmp
cmp
cmp
insb
inc
and
pop
ja
lret
pop
idivl
mov
ss
mov
enter
sbb
sbb
repz
xlat
mov
pusha
je
inc
xchg
rcll
push
pop
dec
dec
push
subb
add
inc
or
mov
mov
std
xor
aas
bound
adc
sub
in
popa
aam
inc
test
cmp
and
mov
jne
in
les
pop
cmpsl
mov
ss
repnz
stos
aas
rolb
das
mov
dec
fcoms
inc
es
mov
jecxz
mov
push
dec
cmp
jns
inc
out
test
mov
pop
pop
xchg
xor
shrb
mov
add
cmp
sbb
outsl
loop
fnstcw
movsl
add
aam
psrad
cmc
scas
push
mov
or
jp
filds
enter
mov
jp
push
fdivrl
push
pop
jns
fsubs
test
jecxz
in
insb
movsl
inc
fidivl
int3
cs
loop
ret
call
stos
sub
jmp
shrb
xchg
mov
xchg
popf
call
subl
mov
pop
lds
insb
inc
repnz
fidivrl
adcb
in
jl
jmp
scas
xchg
sub
jmp
cmpb
push
test
pop
cltd
add
adc
push
dec
push
and
aad
pop
or
dec
lret
out
or
xor
sub
or
push
mov
sub
arpl
fcomps
mov
jge
push
lods
cld
pushf
mov
loop
push
pop
or
pop
sub
cmc
cwtl
mov
sub
or
inc
in
dec
lds
mov
cltd
mov
jg
sbb
push
sbb
rcrb
dec
inc
frstpm(287
loopne
popf
jno
pop
mov
rcl
daa
imul
scas
sarl
dec
push
push
sbb
dec
and
out
sub
xor
mov
jl
xchg
inc
cmp
sbb
xor
push
sub
mov
or
call
sbb
bound
rcll
xor
push
and
test
cmpsl
in
andb
pop
aaa
xor
iret
cmovge
xchg
shl
jge
shr
mov
mov
mov
xor
inc
push
movsl
sahf
jne
in
cmpsb
fcomi
repz
jb
lods
mov
call
test
aad
cmp
mov
sbbl
dec
mov
aad
xchg
pop
int3
jge
fisubl
in
call
insb
adc
push
cwtl
pop
lods
neg
mov
cli
pop
mov
lods
push
nop
pop
sub
adcb
stos
fsubp
mov
jae
sub
mov
call
or
jae
cmp
sub
test
ret
cmp
adc
in
jbe
xchg
lahf
into
pop
inc
into
pop
lret
mov
js
fisubrs
push
mov
fistps
dec
test
in
jns
sub
mov
popf
icebp
jmp
mov
mov
daa
push
mov
xlat
iret
in
adc
stos
test
fidivl
ret
ja
jae
aaa
xchg
repz
push
mov
roll
mov
rclb
mov
push
icebp
cld
lods
pushf
pop
nop
jns
das
xor
cmp
iret
jae
mov
hlt
sub
xchg
leave
inc
xchg
enter
sbb
xchg
pop
fldcw
test
xchg
sbb
sub
jge
and
lock
xchg
xor
mov
push
je
mov
xchg
push
push
mov
jl
mov
std
fnstenv
js
or
push
pop
sbb
push
stos
xchg
pop
faddl
jle
cld
adc
add
cmp
push
xor
pusha
dec
push
nop
cmpsl
mov
xchg
cmp
fistpl
shlb
ds
stos
inc
mov
sub
imul
mov
fldcw
bound
popf
push
or
xchg
xor
and
dec
daa
imul
add
cmp
lods
xlat
aaa
sbb
mov
inc
mov
adc
pop
xor
stc
out
mov
push
xor
xchg
xchg
jns
repnz
mov
jo
push
jle
cs
icebp
mov
bound
jb
pop
stos
jle
iret
xchg
test
pop
pop
mov
popa
xchg
out
in
ss
mov
fisubs
shr
loop
in
xchg
stos
sub
jne
outsl
inc
pop
add
mov
dec
test
outsl
add
jo
in
mov
jnp
or
push
fs
in
jl
xchg
dec
lods
iret
int3
ds
stos
jg
pop
add
iret
mov
pop
test
sbb
ljmp
jno
js
andb
std
insb
mov
cmp
sbb
fs
fstpl
and
mov
or
xor
xchg
test
fisttpll
rorb
jne
jbe
ja
pusha
test
or
ret
loopne
fdiv
nop
add
jb
in
inc
add
pop
cmpsb
jo
daa
fdivrs
dec
jmp
out
mov
lahf
in
pop
mov
xlat
fwait
in
xchg
ljmp
inc
mov
nop
or
test
mov
bnd
xchg
dec
push
loopne
in
xor
rolb
movsl
pop
popf
inc
inc
mov
jbe
jns
add
js
lcall
dec
jge
movsl
pop
fwait
imul
stos
js
sbb
js
sbb
sub
fldcw
push
mov
cmp
push
xchg
in
arpl
sti
jmp
and
mov
mov
rorl
dec
rorl
stc
imul
xchg
mov
mov
xor
into
jne
mov
scas
ret
cwtl
imul
xor
movsl
and
pop
gs
dec
arpl
dec
jae
leavew
adc
test
insb
sbb
mov
je
imul
sub
jns
test
lods
push
inc
cmpsb
and
fidivrl
or
sub
pop
push
jno
std
rorl
mov
inc
movsb
xor
mov
sbb
out
or
sbb
dec
mov
jle
inc
test
push
or
push
mov
jg
stos
push
rclb
int
cmp
inc
imul
mov
add
push
out
imull
cmp
test
cmp
insb
or
in
sbb
sbb
repnz
add
les
jecxz
sbb
and
add
xchg
adc
lods
pop
dec
in
xor
sbb
xor
jb
sbb
cli
shrl
aam
jmp
subl
mov
mov
outsl
ffree
push
int3
stos
or
sub
mov
jno,pn
jmp
xor
cs
shll
les
test
ret
inc
iret
sub
hlt
adc
xchg
test
ret
ret
xor
mov
stc
pop
mov
adc
xchg
sbb
cmp
fcmovnu
jecxz
adc
add
xchg
mov
jg
and
sub
cmpsl
clc
gs
pop
mov
add
add
mov
aad
xchg
rcrl
dec
xchg
subb
outsl
sbb
dec
lahf
in
jle
push
lea
xchg
cld
aam
movsl
xchg
jecxz
ljmp
xchg
xchg
dec
mov
fcomps
movsl
loopne
std
insb
dec
shld
pop
and
xchg
add
mov
fidivrs
jb
mov
xor
xor
dec
pop
xor
jnp
lcall
enter
mov
xchg
aam
daa
push
sbb
cli
inc
scas
inc
nop
cwtl
mov
loope
jb
sti
or
mov
sub
ret
pop
add
sbb
cmp
pop
ret
lret
gs
xchg
lock
pop
mov
adc
shrl
aam
out
pop
rcll
mov
push
ret
mov
jecxz
pop
cmp
pop
sub
jno
movsb
or
xchg
fcoms
add
mov
repz
cli
call
adc
cmp
test
lods
adc
lods
push
rolb
in
ljmp
and
out
sub
out
or
pop
mov
pop
sub
mov
lahf
or
shlb
or
hlt
add
cs
iret
and
shll
adc
add
addr16
inc
cs
xchg
cmp
mov
jl
sbb
jle
pusha
xor
hlt
pop
push
dec
sbb
test
insb
bt
fsubl
mov
sbb
dec
stos
aaa
mov
sub
jb
rorb
mov
and
xchg
ja
call
js
aam
into
popa
sub
mov
filds
in
pushf
or
aad
aad
mov
mov
xlat
sub
pop
sbb
lods
hlt
mov
or
imul
in
and
add
sbb
sbbb
js
fisubl
js
cmpsl
clc
enter
cmp
mov
imul
out
push
pop
cmpsb
dec
aam
out
stos
negl
pop
cmp
sahf
pop
stos
arpl
jge
push
dec
imul
clc
xor
xchg
xor
iret
lahf
inc
mov
clc
fistpl
push
icebp
cmp
mov
mov
lret
add
je
pop
adc
std
ret
pop
movsl
mov
cli
in
sub
mul
push
mov
cld
and
xchg
cmp
jmp
repnz
sub
xchg
shlb
mov
ds
and
lods
arpl
push
pop
clc
mov
mov
ja
das
jmp
pushf
or
adc
call
mov
iret
shl
sbb
lret
popa
in
dec
pop
repz
dec
das
inc
insb
pop
hlt
cmpsl
loop
xchg
dec
fcos
and
mov
xor
scas
push
jg
inc
rcrb
out
or
out
enter
jmp
xchg
push
sbb
and
inc
es
add
mov
sub
mov
inc
lcall
mov
sub
jnp
ljmp
jnp
mov
dec
out
mov
stos
ret
outsb
std
pop
into
pop
loope
inc
mov
loope
loope
repz
xor
cmp
test
lods
pop
sub
jbe
push
popa
add
lea
mov
mov
rolb
mov
in
jo
js
or
aaa
lea
fcompl
nop
dec
jno
push
or
cmp
dec
std
jg
pop
aam
aaa
repnz
enter
cmpsl
jo
leave
inc
fadd
or
adc
test
sub
xlat
mov
mull
sub
mov
fwait
cmpsl
cmp
outsl
out
pop
in
adc
hlt
daa
jg
mov
in
adc
and
mov
cmp
decb
fidivs
add
sbb
sbb
incb
xchg
lock
sub
shl
mov
cmp
sub
cs
out
fldpi
andb
out
gs
rcll
sub
sbb
inc
or
lock
outsb
adc
outsb
sub
ficoms
loop
inc
or
int
pop
sbb
jnp
pop
scas
insl
fcomi
cmpsl
imul
fwait
repz
js
jl
and
imul
lea
jl
mov
inc
loopne
sbb
stos
xchg
lock
xchg
jo
movsl
push
mov
out
add
adc
xor
ret
cmc
xchg
clc
mov
adc
clc
xchg
push
mov
adc
mov
xchg
jmp
dec
pop
push
inc
fisttpll
fisttps
idiv
stos
cmpsl
je
sar
js
loopne
nop
std
xchg
cwtl
divb
mov
mov
mov
sub
push
imul
mov
pop
inc
xchg
xor
xchg
pop
xchg
loopne
aad
adc
pop
stos
int3
xchg
push
lret
rcrb
ret
pop
into
aad
mov
lods
loopne
call
cmpsl
in
push
aaa
xor
jecxz
int
push
in
and
push
add
in
popa
add
cmc
aad
pop
hlt
lret
je
sbb
pushf
jnp
pop
bound
inc
cmp
mulb
mov
jecxz
add
gs
xchg
test
mov
aaa
cmp
lcall
adc
enter
cli
push
inc
xchg
enter
neg
and
cmp
cmp
xchg
stos
iret
clc
mov
cmp
or
jp
out
sti
jle
mov
fucomp
xchg
leave
ror
adc
mov
fdiv
bound
mov
movsl
and
push
mov
fdivrl
xchg
dec
es
adc
sub
fadds
testb
and
leave
loope
ljmp
pop
gs
loopne
or
lahf
hlt
cmp
fistpl
mov
push
mov
xlat
fs
add
rcl
insb
xor
nop
gs
mov
lret
movsb
enter
add
jo
rcrl
mov
mov
into
mov
repz
mov
popf
iret
pop
push
push
xor
fs
cltd
and
push
or
xor
stos
es
clc
mov
movnti
cwtl
xor
fistps
mov
pop
mov
fisttpl
mov
mov
and
dec
mov
push
aas
mov
nop
adc
push
mov
js
add
sbb
clc
mov
push
arpl
lds
jl
pop
fcomps
sahf
pop
mov
or
jne
cmp
jecxz
jo
scas
in
sub
pop
repnz
push
dec
sar
jle
ss
mov
fcmovnb
mov
jno
pushf
jmp
scas
xchg
outsl
mov
adc
mov
lret
mov
xchg
fdivr
xchg
inc
lret
and
repnz
insl
mov
mov
lret
jge
fld
sti
jl
pop
es
loop
mov
and
xor
mov
fldt
es
cmp
out
jbe
mov
into
lea
enter
arpl
xchg
cld
inc
icebp
adc
cmpsl
xchg
cmp
out
fisubl
push
leave
sbb
in
jecxz
aad
or
xor
mov
jbe
cs
lret
dec
cmp
pop
sbb
das
and
sbb
lret
outsl
mov
rcll
stc
ret
inc
loope
movsl
es
in
mov
fisubl
mov
nop
mov
or
inc
and
add
mov
int3
push
dec
dec
repnz
aad
mov
add
cli
ret
mov
cmpsl
stc
sbb
xor
lds
movsl
repz
adc
cmp
adc
fldenv
jb
pop
adc
sbb
mov
test
inc
rcll
fmulp
lds
xor
cli
int
jbe
loope
mov
leave
in
xor
dec
test
mov
or
rol
add
lds
outsb
push
or
pusha
dec
jbe
insl
fwait
int3
cmp
dec
aaa
cmc
push
mov
fcomps
cmpsl
push
pop
lock
xor
pop
test
dec
xchg
shl
mov
js
orb
mov
xchg
addb
xchg
in
test
xlat
ss
push
jle
mov
cmp
movsb
or
cmp
out
dec
fidivrl
int
adc
arpl
inc
jns
xchg
fs
rorl
add
jno
push
ljmp
gs
roll
es
das
jmp
stos
rolb
mov
cmpsb
movhps
dec
sub
shrb
sub
jmp
pop
sbb
xchg
mov
lret
dec
sbb
pop
or
fiaddl
xor
sbbl
mov
out
out
movsl
xchg
rcll
mov
mov
aas
addl
fsts
fcmovne
xchg
out
xlat
add
jne
mov
orb
jno
mov
cmp
lods
mov
pusha
sub
popa
add
mov
sbb
xor
mov
or
mov
notb
lea
enter
inc
fs
dec
test
in
mov
push
lock
push
mov
int3
roll
arpl
cwtl
push
scas
cmc
inc
imul
push
arpl
mov
popa
push
xor
repnz
inc
rol
ret
or
std
sbb
rorb
dec
test
or
in
adc
fsts
je
adc
mov
xor
sub
xor
aas
and
stos
xor
into
syscall
jg
jnp
xchg
xchg
popf
repnz
xchg
clc
frstor
pop
int
fnstsw
jo
stos
sub
repnz
mov
cmc
mov
cmp
and
jo
push
cwtl
sti
xor
mov
jg
xchg
or
std
ja
cmc
xor
push
stos
aad
sub
ss
xchg
mov
jns
daa
call
ljmp
rorl
in
fs
leave
add
mov
and
sub
imul
and
pop
int3
fs
sbb
call
data16
mov
adc
in
lahf
inc
clc
pop
lods
and
popa
test
das
lock
lds
aas
and
inc
mov
dec
in
xchg
jge
xor
jg
inc
popf
add
inc
nop
push
outsl
pop
aad
out
cmp
push
test
leave
lret
clc
xchg
push
in
aam
cwtl
dec
jnp
loop
repz
cmp
mov
jo
jbe
es
outsb
adc
je
imul
aam
fsub
inc
push
or
sub
pop
push
gs
mov
mov
add
clc
mov
sbb
incl
push
mov
pop
pop
jnp
out
idivb
xchg
int
dec
popf
loop
pop
movsl
mov
pop
push
test
jge
fsubl
pop
or
and
insb
push
fcompl
pop
push
aam
pop
xor
mov
fs
xchg
test
test
cmp
mov
adc
in
sbb
fildll
cmc
insb
jmp
addr16
pushf
jle
stc
mov
bound
js
push
aaa
adc
lea
cmpsb
sub
fiaddl
inc
iret
inc
out
inc
or
jg
shlb
pop
or
adc
push
pop
and
es
sbb
aad
stos
dec
outsl
xchg
retw
and
pushl
mov
addb
mov
iret
popa
mov
or
ror
leave
inc
pop
or
leave
jg
and
aad
lods
or
inc
fdivl
sbb
mov
leave
inc
js
and
insb
jae
into
imul
and
or
andb
mov
jno
sub
add
sub
in
mov
fldl
insb
addr16
cmp
xchg
mov
repnz
loopne
xchg
pop
in
mov
incb
pushf
fiaddl
mov
mov
pop
clc
stc
frstor
push
mov
add
adc
sbb
arpl
pop
stos
jecxz
jge
sub
nop
and
mov
pop
pushf
test
dec
cmpsl
or
das
push
cmc
gs
jns
and
pop
or
push
xchg
mov
jmp
les
adc
in
lret
cmp
pop
sti
inc
outsb
or
dec
ss
fldcw
push
push
xchg
mov
add
pop
imul
mov
mov
test
rorb
jmp
mov
insb
xlat
push
pop
cmp
push
out
push
jle
hlt
inc
int3
movsl
jmp
mov
fcmovnbe
pop
mov
ret
lahf
xor
push
jo
fsubrs
pop
stos
into
add
les
sbb
sub
and
mov
add
gs
and
adc
cmpsb
dec
jecxz
adc
fiaddl
jno
pop
push
jb
lret
inc
mov
aas
inc
addl
mov
and
adc
dec
sbb
sahf
add
arpl
out
pop
aaa
lea
dec
jp
stos
jp
rclb
rolb
xchg
sahf
mov
mov
add
inc
push
adc
sub
push
out
mov
push
in
imul
bound
and
loope
pop
aad
aas
repnz
out
icebp
mov
cmpsb
cmc
xchg
loop
jns
fwait
fs
ret
aaa
rclb
test
or
jno
sbb
repz
and
aaa
movsl
xchg
fs
jecxz
bnd
mov
push
mov
push
gs
cmp
or
imul
lret
js
push
sub
mov
sbb
xchg
sbb
je
data16
arpl
adc
jg
mov
scas
push
int3
push
cltd
push
inc
insb
push
orb
movsb
dec
mov
ret
cmpsb
mov
adc
adc
xor
cmc
in
daa
adc
jge
inc
add
pop
mov
out
or
mov
mov
jle
xor
jecxz
aaa
add
lret
sub
adc
pop
sbb
loope
js
imull
popa
pop
jge
lret
jb
sti
arpl
addr16
cmp
int
xor
jmp
jg
fwait
das
jo
cmp
xor
cmp
add
jp
mov
mov
push
aaa
test
lahf
hlt
cmc
sub
mov
xchg
sub
movsl
xchg
adc
mov
aad
mov
imul
sbb
mov
lret
mov
ret
scas
jmp
jnp
clc
or
or
movsb
xchg
fwait
test
clc
lcall
mov
lahf
lcall
and
or
scas
adc
loop
mov
popf
push
xchg
test
outsl
and
push
sahf
wrmsr
movsl
movsb
scas
scas
sub
out
nop
loop
push
xchg
std
ja
and
mov
xchg
cwtl
lds
icebp
xor
xor
sub
lods
mov
inc
dec
push
cmp
out
push
xor
dec
fwait
sub
jl
mov
inc
push
inc
in
jo
ljmp
mov
mov
dec
js
in
aad
repnz
xchg
jmp
mov
cmp
shlb
push
jno
adc
jae
or
jb
sub
cltd
mov
adc
adc
repz
mov
jb
mov
cs
lea
jns
rclb
mov
pop
lods
fdivl
inc
jbe
mov
or
and
fdivl
shl
icebp
roll
lahf
sbb
arpl
fmul
xchg
icebp
dec
jno
popf
sbbl
or
cmp
sub
push
adc
push
pop
lods
cmp
pushf
push
sbb
fdivrl
jno
rcll
popf
add
xchg
jp
add
adc
mov
cmp
jb
and
fs
shll
ret
and
out
stos
negb
dec
cmc
mov
push
add
in
ficoms
outsb
sbb
push
enter
or
aam
mov
in
testl
sbb
push
cmp
imul
test
insb
jb
add
or
cmp
pop
mov
imul
cmp
and
mov
out
push
std
xchg
mov
js
lods
or
dec
add
push
xchg
not
lods
xchg
test
movsl
push
fs
xchg
aam
cmp
sub
js
lea
iret
test
aas
jle
mov
push
mov
ja
mov
add
stos
adcl
scas
pushf
xchg
cld
mov
inc
adc
mov
test
sub
movsb
push
push
mov
mov
out
sbbl
movsb
mov
pop
cmpsl
lcall
pop
sub
mov
sbb
fmul
jge
push
fwait
pop
cmpsb
jns
mov
jns
push
fiaddl
and
pop
xchg
into
or
pop
add
add
fwait
jmp
imul
mov
fwait
cs
fsubs
imul
fistpll
outsl
mov
pop
fwait
mov
jne
in
aaa
in
popf
mov
xchg
pop
inc
stos
sub
adc
dec
test
lds
ds
or
in
sub
sub
jg
dec
xor
dec
push
lea
dec
or
sub
jns
mov
and
push
mov
xchg
add
fldpi
or
push
lret
adc
jmp
clc
shl
xchg
jge
and
pop
pop
pop
bound
mov
xor
dec
loop
inc
loope
std
inc
orb
push
jmp
lcall
and
sub
lahf
testb
inc
add
imul
out
pop
inc
std
inc
lret
test
push
aad
ja
sbb
out
ljmp
mov
andl
mov
pop
xchg
mov
or
and
pop
daa
shr
cmp
scas
shrb
aaa
xchg
and
mov
pop
insl
xchg
daa
stos
bound
mov
ja
and
stc
movsl
or
mov
cld
xchg
jmp
sbb
push
rclb
push
stos
mov
int3
dec
jne
push
leave
inc
inc
jae
popf
cmp
neg
shlb
push
ja
cld
int3
and
push
imul
es
inc
imul
cli
mov
aas
out
rcrl
push
push
pop
push
jne
sbb
push
jle
jnp
add
stos
adc
bound
push
shll
fs
add
pusha
cmc
clc
mov
jl
xchg
mov
add
leave
js
mov
aad
mov
mov
push
out
adc
std
subl
cmp
push
xor
push
loop
or
push
daa
push
ds
inc
mov
xor
add
push
mov
cli
push
inc
xchg
xchg
push
popf
jno
rclb
aas
dec
int
sbb
or
and
arpl
push
xchg
scas
ret
jg
insb
xchg
adc
out
imul
jle
mov
ja
adc
lret
or
rolb
mov
and
mov
and
das
xchg
les
sarl
push
jmp
arpl
movsb
test
insb
add
fbld
add
ret
aas
mov
mov
fld
jle
mov
mul
mov
test
add
mov
xchg
sbb
ja
ret
roll
imul
js
sub
pop
jl
lcall
int3
sbb
stc
lahf
xchg
testl
lret
cwtl
jle
cmp
add
imul
bnd
in
dec
lods
stc
sti
mov
daa
sbb
in
adc
jns
cmc
sbb
fwait
mov
push
push
hlt
cmp
sub
pop
jno
dec
mov
xor
out
xor
xor
jnp
push
js
push
mov
cmpl
mov
jle
cmpb
inc
cli
mov
andl
icebp
mov
mov
pop
rorl
out
push
js
jmp
jecxz
mov
sbb
test
inc
pop
jno
cmp
int3
add
das
jb
jecxz
adc
pop
js
pop
mov
ret
aas
push
ret
test
cwtl
xchg
shlb
sub
mov
popa
adc
or
mov
aas
ds
adc
aad
ljmp
or
xchg
add
subb
aas
adc
cmp
arpl
inc
fs
inc
imul
fcmovnu
data16
in
mov
fisttpll
xor
xor
int
sbb
in
dec
rcr
cmc
cmp
sub
fidivrs
xchg
push
add
adc
test
jle
cmp
mov
inc
ficoms
and
cs
mov
orb
mov
scas
les
adc
ljmp
push
data16
sub
ds
stc
mov
clc
cmp
jl
or
repnz
pop
jp
mov
data16
add
and
jbe
fstps
ret
jno
ret
cwtl
addr16
lods
cwtl
or
inc
pop
xchg
out
shlb
pusha
add
push
inc
add
popa
adc
ljmp
jmp
sub
shlb
fdiv
dec
and
cli
xchg
mov
aaa
jl
mov
ret
sbb
imul
ss
and
jecxz
mov
add
in
fwait
dec
in
aad
adc
lret
push
repz
mov
ss
pop
xorl
xor
scas
mov
shlb
and
mov
scas
call
adc
and
push
in
push
in
push
call
cwtl
push
and
adc
flds
mov
xlat
mov
js
sahf
roll
aad
adc
sysexit
xchg
mov
pop
iret
lods
mov
mov
mov
int3
loopne,pt
jne
sti
xchg
and
jl
repnz
mov
addr16
test
push
and
or
push
in
stc
ds
ret
lret
dec
aad
dec
add
cmp
fbstp
outsl
mov
mov
cmp
mov
rol
xlat
inc
push
cmp
loope
lods
inc
daa
mov
insl
test
add
pop
lahf
inc
inc
inc
scas
cmp
adc
mov
cmc
popa
push
shlb
dec
rolb
pop
jb
lret
mov
cs
jge
es
scas
sub
sub
adc
cmpsb
xchg
cwtl
adc
sub
mov
fs
jecxz
cld
jno
sub
jne
or
dec
jecxz
or
sbb
fsubrl
fildll
mov
add
imul
cmc
gs
int3
cmp
dec
or
nop
push
add
loopne
jge
ja
mov
pop
mov
out
pop
out
and
mov
jmp
outsb
push
jae
cltd
cmp
xor
xchg
out
pop
fs
fnstenv
mov
sbb
les
or
cli
mov
push
mov
cltd
clc
add
inc
sahf
mov
jecxz
inc
in
or
mov
test
adc
lock
fs
popf
test
inc
and
ret
push
sbb
pop
dec
repz
jb
sub
and
inc
aaa
sub
out
repnz
inc
mov
icebp
out
mov
mov
test
cmpsb
or
adc
cmp
sub
ss
push
lods
shl
fstl
out
jp
adc
dec
mov
shrl
mov
popa
inc
jnp
mov
jmp
or
pop
cmp
pop
clc
jae
lret
pop
fwait
xor
mov
lds
jbe
cmpsb
loopne
push
and
mov
push
aad
ljmp
cs
clc
mov
push
and
sub
adc
test
pop
lods
sarb
mov
mov
pop
xor
ret
inc
stos
into
data16
push
add
orl
test
mov
jp
test
jo
sahf
in
sbb
and
push
ljmp
out
fcompl
jecxz
rep
arpl
scas
or
jge
push
mov
jnp
jge
lret
push
fcmove
ja
and
add
and
mov
pushf
aad
pop
and
sti
xchg
push
jo
xor
icebp
outsb
call
in
jo
sub
jg
add
les
mov
jecxz
movb
add
cltd
push
lea
pop
dec
xchg
into
icebp
push
enter
or
pop
out
enter
or
aam
dec
sahf
out
idivl
mov
enter
mov
out
fdivs
sarb
leave
lret
les
sub
jns
mov
xor
stc
add
add
pop
subb
popa
pop
aas
mov
sbb
imul
inc
adc
arpl
int
adc
xor
cli
fneni(8087
push
mov
mov
mov
adc
scas
push
or
stos
dec
xor
and
in
ret
fdivrp
jg
ss
add
sub
in
negb
cli
jbe
fisttpll
pop
mov
push
lock
push
inc
icebp
mov
aam
inc
divl
sub
pop
push
xchg
cmc
dec
cmp
jecxz
ja
inc
dec
dec
mov
sbb
ja
dec
pop
dec
mov
ret
sbbb
fnclex
fidivrl
adc
mov
jle
aad
cs
push
jo
jae
xchg
test
scas
xlat
movsb
jg
lret
lock
cmp
int
lcall
pop
xchg
jbe
ficomps
stos
cmpsl
pop
and
hlt
addr16
jmp
imul
aad
clc
push
xchg
pop
daa
in
push
sbb
test
fistpl
sarl
dec
aaa
aam
das
jecxz
jge
sub
lea
pop
xor
daa
movsb
inc
mov
adc
adcb
add
mov
push
adc
push
and
xor
popa
pop
ljmp
mov
dec
mov
inc
cld
jmp
dec
dec
xchg
dec
cli
jge
in
sub
ljmp
sbb
outsb
cmp
and
int
loope
add
fdivrl
sub
cmpl
inc
rcrb
dec
sbb
mov
loope
js
sbb
mov
ljmp
ret
cwtl
push
les
and
in
nop
adc
lds
in
mov
jo
and
or
les
xchg
cmp
out
ljmp
jecxz
mov
dec
clc
pop
loop
mov
cmp
or
push
push
push
inc
mov
push
jae
mov
cmp
cmp
jl
pop
cmpsl
adc
ret
cmp
lods
sub
test
imul
mov
pop
jge
lock
mov
enter
ret
and
int3
rolb
push
leave
sub
jg
mov
adc
cmp
or
lods
cmp
mov
pop
sub
mov
or
sbb
ja
mov
dec
push
push
jns
xchg
mov
loop
xchg
dec
es
test
mov
aas
movsl
mov
repnz
lock
fdivrp
incb
dec
ret
push
rorb
mov
or
andl
and
mov
xchg
aam
jne
adcl
push
data16
sbb
sbbb
sbb
pop
out
adc
popf
inc
pop
push
push
pop
inc
mov
iret
or
jge
and
fstpl
push
xchg
dec
and
mov
inc
jns
repnz
popa
inc
xchg
fwait
jno
dec
pop
test
xor
movsbl
outsb
lahf
addr16
mov
lea
imul
sbb
ret
out
and
xor
lds
add
addr16
and
sti
pop
pushl
cmc
fcoms
insb
xchg
lock
int
test
pop
cmp
idiv
pop
ret
mov
cmp
push
xchg
popa
pop
jno
jae
jge
inc
dec
mov
shrb
orb
iret
xor
mov
push
std
ret
jno
adc
clc
test
jmp
adc
jb
pop
repnz
mov
or
test
mov
jmp
cmp
arpl
mov
adc
push
xor
lret
cwtl
xor
sub
pop
stc
das
sahf
push
mov
sub
push
jmp
pusha
mov
jno
sbb
in
xlat
pop
repz
mov
mov
jno
insl
mov
rorl
jo
adc
popf
mov
cmpsl
add
popf
mov
dec
push
stos
test
fstpl
mov
xchg
scas
pop
mull
push
sti
xchg
and
jmp
inc
adc
mov
scas
shrl
pop
mov
lock
mov
push
in
cs
or
push
test
je
loopne
fbstp
mov
mov
cmp
aad
cltd
sub
daa
aam
faddl
xchg
and
jns
sahf
xor
jle
xor
fsubs
lods
fnstsw
aaa
dec
mov
and
sub
and
lret
lahf
shrl
mov
imul
dec
add
mov
cltd
fucom
gs
lea
nop
add
shll
and
pmaddwd
ds
sbb
shl
fstps
lahf
sub
insl
jae
jmp
or
or
in
xchg
sar
xor
sbbb
mov
jecxz
out
mov
mov
jo
test
mov
adc
stos
int
sbb
xchg
adc
rol
out
and
or
push
pop
in
arpl
or
pop
cld
push
inc
push
mov
clc
pop
mov
mov
push
arpl
fisubl
or
push
aaa
std
iret
jecxz
ret
int3
pop
pushf
sbb
mov
jp
roll
loopne
mov
out
arpl
push
inc
insb
pop
inc
into
inc
nop
xchg
pop
scas
mov
rclb
cmc
ds
in
fldcw
scas
add
cmp
jno
popf
push
ds
dec
pop
sbb
repz
out
dec
adc
daa
xchg
dec
in
rcll
lock
movsb
xor
pop
mov
sub
dec
pop
stc
cltd
mov
icebp
pop
xchg
insb
movsb
fidivrl
mov
inc
mov
push
ret
fldcw
stc
fnstcw
test
xchg
jmp
inc
data16
sbbl
shlb
push
clc
mov
test
pop
adc
sarl
cmp
daa
movsl
fs
fiadds
stc
sahf
ret
je
inc
inc
dec
outsb
dec
or
js
pusha
pop
cmpsb
inc
xchg
push
jb
jmp
and
lds
mov
adc
xchg
xor
pop
xor
pusha
ror
jnp
mov
outsl
sbb
in
ds
ljmp
fbld
test
aam
push
dec
mov
lods
jp
jae
int3
scas
push
pop
cmpsb
push
jnp
test
jp
das
jle
dec
jecxz
adc
push
ret
leave
dec
mov
outsb
push
jb
xchg
add
idivb
sbbl
sub
push
pop
push
mov
pop
add
ds
xchg
push
adc
lret
mov
addr16
movb
faddl
call
mov
cltd
icebp
dec
fsts
mov
imull
ret
inc
push
and
into
cmpsl
cmp
pop
dec
les
xchg
js
iret
lret
mov
call
iret
dec
xchg
rcrl
mov
cmpsl
dec
xor
insl
andb
fidivs
push
sbb
jmp
sbb
and
sahf
mov
cmpsb
jo
and
mov
call
test
sbb
jp
mov
jbe
inc
jp
xor
pop
aas
mov
dec
ss
mov
push
fildl
cltd
les
adc
ss
or
arpl
cli
cmc
loopne,pt
lods
push
fldlg2
cmc
neg
push
ficompl
xchg
mov
mov
jne
mov
sbb
pop
cwtl
jbe
jns
lcall
cmpsb
sbb
sbb
in
in
int
insb
cli
jb
or
jne
sub
add
repz
mov
je
jmp
cwtl
mov
ja
cmpl
sbb
das
shrb
frstor
sub
fisubs
sub
jl
or
cmpl
push
insl
jmp
push
dec
stos
adc
aaa
fwait
lret
dec
les
sbb
xchg
sub
or
pusha
movsl
xchg
iret
pop
sub
test
dec
push
jle
rcrl
mov
les
push
std
test
pop
int
bound
arpl
mov
dec
iret
sub
mov
outsl
cmp
mov
int
repnz
add
mov
push
cld
pop
das
pushf
xchg
and
and
mov
cmp
jno
nop
adc
add
xor
imul
imul
shlb
daa
aaa
mov
test
mov
fstpl
mov
inc
repnz
adc
pop
and
test
jl
test
mov
movsl
mov
jecxz
xlat
pop
ficoml
inc
arpl
fildll
rorl
scas
xor
repz
movsl
fistps
pusha
sti
adc
int3
jbe
ret
xor
test
adc
call
fnsave
or
inc
stos
pop
pop
and
mov
push
dec
aaa
out
mov
mov
jae
nop
and
sub
lret
es
pop
or
inc
dec
ss
js
int3
leave
mov
outsb
mov
loope
xor
clc
cmp
mov
cmp
rcrl
lcall
leave
cwtl
nop
es
fs
xor
mov
add
mov
inc
std
leave
rcrl
lea
inc
jl
pusha
rcr
jmp
jnp
scas
in
notb
mov
out
xlat
xor
aas
inc
aas
mov
dec
or
std
lea
pop
mov
idivb
pop
inc
jns
jmp
and
lret
call
jge
mov
call
je
es
sti
fidivs
inc
cli
movsl
pop
pop
sbb
inc
pop
pop
mov
movsl
cmpsb
aas
test
or
mov
je
xor
dec
xorb
xchg
cmp
test
adc
ds
pusha
ljmp
test
push
loope
xor
sbb
inc
loope
out
or
mov
sbb
cmpsb
jl,pt
pop
mov
faddp
dec
testb
mov
test
xor
push
mov
pop
adc
lret
push
sarl
sbbl
aaa
jl
pop
scas
jo
je
dec
jo
mov
outsl
mov
xchg
sub
mov
cmp
pop
mov
jnp
cmp
stos
push
sbb
aaa
cmp
cmc
adc
mov
mov
test
sub
lret
jnp
push
cmpsb
test
xlat
loopne
jecxz
nop
andl
lods
mov
cld
fimull
adc
and
mov
lret
stos
ljmp
ss
mov
jnp
pop
hlt
into
sarb
and
scas
mov
or
xor
mov
fwait
es
test
insb
adc
mov
push
pop
mov
les
lods
sti
dec
pop
push
push
push
push
popa
popa
mov
rorb
jbe
mov
insl
cld
daa
in
xchg
int
scas
pop
sbb
mov
aas
push
notb
data16
push
test
mov
lock
fstl
sub
into
ss
sub
out
push
cs
inc
fdivrp
mov
pop
test
mov
cmp
outsb
fisubrl
cld
stc
xchg
pop
ret
or
mov
into
lock
filds
incb
fstps
dec
xchg
pusha
add
mov
pop
dec
inc
mov
fisttpll
mov
mov
push
jle
and
fs
lods
xor
add
mov
xor
inc
mov
aad
aam
cs
mov
pop
sbb
shll
fcomi
add
lds
mulw
int
test
mov
in
adc
mov
push
jle
daa
movsb
mov
mov
sti
xchg
push
call
dec
mov
cmp
dec
mov
adc
xchg
xchg
daa
pop
les
addb
cmpsl
mov
test
int3
sti
cwtl
loop
rorb
push
push
mov
add
xor
add
out
es
or
adc
dec
mov
daa
xchg
xor
loopne
xor
out
pmulhuw
cmc
cmp
rcr
push
jne
mov
sub
dec
data16
and
aas
ror
repnz
adc
sub
js
push
cs
add
rclb
jo
cmp
sbbb
aad
out
cmp
dec
sub
repnz
flds
mov
mov
jae
add
mov
orb
sti
nop
ljmp
xchg
add
xchg
push
inc
shlb
popa
hlt
jge
out
and
cs
mov
sti
add
xor
iret
jp
popf
mov
push
cmp
jmp
sub
pushf
lods
roll
mov
and
pop
push
xchg
stos
mov
inc
faddl
or
jmp
cmp
fidivl
push
nop
rolb
jb
stos
inc
dec
mov
mov
and
inc
sbb
dec
inc
mov
movsl
test
or
mov
pop
dec
sbb
stos
addr16
or
test
xchg
cmp
iret
cmc
dec
or
pushf
pop
imul
stos
inc
xorb
ret
lods
xor
sahf
fs
movsb
aam
mov
icebp
dec
mov
lret
push
js
sub
inc
mov
cmp
mov
xchg
sbb
sbb
cld
mov
pop
in
arpl
lock
shrl
cmpsl
xor
shrl
out
cs
scas
sub
or
jo
mov
mov
or
push
cltd
outsb
je
dec
lds
rcll
pop
pop
rorb
cmp
xor
call
or
lock
fs
xchg
jmp
fisttps
add
cmp
xor
push
sub
loopne
test
insb
mov
jne
jp
out
pop
popa
jno
subl
pop
jmp
ficompl
loopne
jns
shl
pshufw
jge
mov
push
xor
fstpt
orb
mov
movsl
push
cmp
clc
adc
fiadds
addr16
xchg
mov
mov
lods
push
add
push
xchg
mov
inc
aam
fs
out
hlt
inc
orl
xchg
addr16
lock
sub
jl
ret
ds
or
cmp
xchg
movsb
xchg
pusha
or
adcb
cmpsl
pusha
and
pop
loop
or
test
mov
lds
es
pop
cwtl
mov
xchg
or
leave
jns
popa
adc
lcall
rorl
push
jne
lods
or
pusha
loop
inc
adc
inc
fstl
dec
jb
xchg
xor
imul
cld
pusha
aas
mov
mov
mov
fistpl
shl
jg
shlb
push
jns
orl
mov
sub
enter
daa
jecxz
inc
test
pop
in
jbe
xlat
and
push
addr16
movsl
fdiv
icebp
and
cmpsl
jle
sub
sbb
ja
cmpsl
dec
out
jmp
lret
imul
pop
inc
out
mov
aaa
xor
and
lds
andb
mov
rorl
mov
es
hlt
and
je
push
dec
test
xchg
push
fadds
fdivs
loopne
cmp
mov
movsl
and
out
pop
test
dec
inc
lcall
out
sbb
jbe
cmpsl
sub
pop
jmp
cmc
push
loop
mov
out
or
dec
mov
iret
stos
stos
stos
movsl
mov
jne
jge
mov
xlat
xchg
sahf
mov
adc
fs
sbb
ds
pop
or
pop
sub
xchg
testl
mulb
sbb
lods
jge
mov
mov
out
test
lsl
arpl
outsb
pop
adc
push
sub
or
add
testl
insl
lods
mov
cmpsl
sti
jecxz,pt
xor
sbb
cmp
fcoms
mov
mov
fmul
in
and
aas
ja
xor
mov
iret
push
cmpsb
scas
pop
fnsave
ja
cmp
js
add
sbb
mov
popf
mov
adc
or
shll
sub
jg
xor
cmpsl
das
push
imul
cli
test
stc
pop
xlat
push
lods
jo
and
xor
ja
cmpsb
mov
in
inc
add
jo
or
cmp
sti
add
xor
mov
mov
test
das
test
sbb
nop
and
mov
sbb
mov
sar
out
xor
orl
es
and
les
in
xchg
cmp
lods
dec
sbbl
mov
sbb
xor
inc
cltd
jns
cmp
int
leave
ljmp
fxch
mov
dec
mov
imul
dec
pop
imul
ds
shlb
jge
fisubrs
cmp
jo
movsl
pop
jno
data16
imul
pop
cld
int3
scas
jno
lahf
in
repnz
and
clc
add
add
mov
shrl
mov
cmp
dec
jmp
or
push
sbb
xor
pushf
or
cli
fcoml
mov
push
sbb
mov
push
or
dec
dec
and
xchg
cmp
push
sbb
and
add
scas
aas
and
xchg
cmp
jge
mov
out
repz
jl
push
push
std
push
push
mov
mov
clc
mov
ljmp
inc
rcrb
sub
and
lahf
or
sub
enter
test
cmp
cmp
clc
out
stos
cwtl
add
sub
adc
test
gs
mov
sbbl
xor
aad
mov
fcoms
gs
sub
dec
in
sbb
and
push
inc
inc
pop
scas
sub
test
xchg
push
out
dec
and
icebp
dec
mov
xchg
mov
imul
cwtl
xchg
mov
or
loop
std
aad
sub
and
cmp
and
movb
mov
mov
cli
pop
pop
inc
inc
or
sub
push
ljmp
aaa
jns
push
stc
sbb
outsb
js
add
xchg
mov
jle
xchg
jle
mov
jno
rcl
adc
lods
cs
xor
aas
lods
scas
xchg
jae
int
mov
inc
loop
xor
sub
ret
pop
cmpsb
fwait
xchg
movsl
testb
loop
push
mov
mov
cwtl
int3
pusha
xchg
shlb
mov
cmp
outsl
push
rcrb
cld
fistl
xchg
dec
insb
push
and
loop
lock
inc
add
enter
mov
push
mov
sarl
hlt
sub
push
xchg
adc
jl
idivl
cld
cmpl
sti
ficomps
icebp
pop
sbbb
mov
sub
mov
scas
cltd
push
in
jbe
jg
dec
adc
push
mov
lcall
imul
xchg
es
mov
sub
hlt
xor
pop
aaa
mov
into
push
mov
jb
idiv
sahf
push
or
jo
or
sarl
pop
inc
in
mov
pop
loope
aad
enter
jns
xor
or
aas
sahf
sub
or
mov
inc
add
in
ljmp
das
xchg
cmp
mov
scas
jae
inc
std
jmp
imul
movsb
pop
sub
pop
mov
shlb
jne
imul
mov
fisubs
adc
jb
mov
leave
movsl
push
popa
add
subps
dec
out
mov
pop
push
mov
stc
push
sub
adc
pop
aad
lahf
xor
cmp
popa
sbb
ljmp
push
or
cmp
lcall
or
mov
subb
mov
adc
jno
ljmp
xchg
mov
in
sub
iret
clc
lcall
dec
adcb
mov
pusha
ss
std
fdivrl
sub
ret
add
and
rcr
inc
imul
sahf
popa
sahf
aaa
loope
jns
push
xor
cmp
fnstsw
sbb
jle
sub
push
mov
inc
jle
aas
cld
in
sub
dec
in
jo
mov
sub
pop
lret
pop
xor
cmpsb
add
jne
cli
lods
mov
js
shrl
inc
xor
in
test
sbb
mov
adc
mov
sub
or
mov
lods
mov
pop
cmp
sub
dec
fldenv
pop
ret
and
adc
dec
cltd
test
jnp
jb
and
and
mov
cli
stos
sbb
jle
leave
ud2
jnp
bound
insl
cmp
cli
dec
sti
fidivl
lcall
cmp
dec
push
cli
daa
rcl
icebp
test
sbb
repz
cmpsb
jmp
pop
cmpsb
mov
jg
faddl
loopne
mov
arpl
push
or
xchg
mov
test
movsb
and
in
dec
pusha
ja
mov
push
xor
ja
fsubs
cmp
xor
insl
mov
xlat
rclb
mov
inc
mov
dec
push
pop
jns
adc
push
sbb
int3
stc
pusha
das
scas
inc
mov
enter
lds
int
subl
sub
aad
mov
stos
lock
mov
or
lods
mov
push
xchg
jge
xor
mov
xchg
xchg
aam
push
xchg
and
and
xchg
push
fistps
xchg
dec
lea
rol
xorl
jle
fsub
pop
pop
addl
dec
sub
sub
inc
jp
or
adc
dec
sti
rcrb
inc
testl
or
fmuls
test
outsl
fs
loop
dec
sti
xchg
loop
test
addr16
and
inc
or
pop
insl
fildl
mov
cmp
pop
cmp
cmpl
divb
icebp
xor
adc
int
jo
std
std
std
movsl
mov
mov
mov
repz
js
lcall
pop
mov
cs
test
sbb
jp,pn
outsb
dec
sub
ret
and
dec
dec
jae
inc
orb
test
ljmp
les
aas
lahf
xchg
adc
mov
sub
push
lea
ds
ja
push
sbb
xor
sbb
sbb
cltd
loop
mov
adc
xchg
add
movl
xor
xor
ljmp
pop
xchg
fiaddl
cmp
dec
xor
xchg
cmp
sbb
pop
cmp
je
jo
dec
stos
cmp
test
inc
and
and
mov
pop
mov
call
subb
xchg
adc
aam
fcmovbe
imul
cmp
mov
mov
ja
clc
les
jmp
mov
dec
cmp
popa
adc
inc
pop
aaa
pop
es
adc
lcall
ds
dec
inc
shll
xor
mov
jae
add
gs
into
push
xchg
cwtl
pop
jb
or
ret
inc
stos
xor
jle
out
or
or
stc
dec
jnp
adc
add
frstor
sti
lcall
js
xorl
jg
repz
std
and
mov
dec
popf
in
mulb
push
imul
clc
stos
sbb
and
push
rcll
mov
jae
add
and
dec
adc
ret
jne
sub
pop
inc
inc
xchg
test
xchg
leave
icebp
mov
insb
or
int
inc
fsubl
push
mov
jp
dec
add
pop
mov
hlt
push
scas
paddusb
ret
in
pop
cli
cli
jb
daa
insl
mov
cli
cmp
sarb
andl
and
inc
mull
and
in
sub
stc
subl
push
jnp
es
icebp
xorl
sub
stc
movl
iret
add
mov
shlb
sub
sub
pop
pop
insb
mov
mov
movsb
fwait
xorl
enter
fildll
lahf
inc
jno
cmp
and
into
lock
xchg
mov
lcall
push
sub
sbb
mov
push
cltd
and
xchg
sbb
lock
mov
dec
andb
push
pop
int
jmp
sub
rcrl
and
ljmp
dec
ds
movsl
sbb
popf
call
fwait
jl
jp
sbb
imul
push
dec
outsl
mov
out
xchg
js
sbb
fwait
sbb
test
mov
or
insb
dec
xor
and
xor
push
imul
push
into
sbb
nop
add
pop
andl
dec
or
mov
pop
sarl
push
add
inc
cmpsb
mov
and
inc
cmpsb
dec
xlat
mov
cmp
inc
js
push
xchg
addl
pcmpgtb
dec
test
aas
fnsave
sbb
in
xor
addb
imul
mov
sahf
xchg
jb
icebp
push
xlat
jns
adc
xor
lods
lods
fbstp
in
fucomi
inc
or
pop
shrl
push
gs
stos
pop
xchg
mov
fstps
shld
in
movl
pushf
test
xchg
arpl
pushf
sti
mov
bound
test
xor
or
xor
xor
in
andb
insl
std
test
call
cmp
out
mov
mov
jbe
cmp
add
jp
or
sbb
in
mov
adc
pop
jecxz
adcl
sub
push
inc
sti
cmp
mov
fs
pop
pusha
in
xor
mov
and
cmp
mov
je
mov
mov
push
mov
mov
stos
jns
sti
push
xor
push
cmc
sub
in
xor
adc
int
sub
sti
adc
sbb
jp
and
pop
imul
jge
leave
sbb
mov
lcall
mov
scas
rclb
in
in
push
and
push
cmp
xchg
stc
add
and
dec
cmp
dec
adc
andb
mov
and
outsl
clc
flds
mov
fninit
sub
pop
add
movsb
movsb
sbb
pop
test
dec
mov
or
mov
cmp
incl
jp
mov
adc
testb
add
add
mov
lock
fwait
imul
push
mov
adc
jp
push
add
ja
into
pop
jnp
stos
sbb
gs
outsl
repz
mov
in
pusha
and
ljmp
jbe
cmpsl
or
or
in
gs
ljmp
pop
mov
stos
dec
mov
push
clc
or
jno
push
sub
inc
cmp
stos
xlat
mov
in
mov
mov
incb
imul
xchg
or
pop
xchg
mov
sub
cmpl
xchg
mov
pop
xorl
mov
add
jecxz
leave
lret
jae
int3
pop
push
lret
fistpl
push
sarb
cmp
and
fisubrs
fcom
and
fs
gs
xchg
xchg
test
or
xchg
aam
push
xchg
fisubl
insl
mov
push
shll
mov
scas
xchg
or
xchg
imul
rol
sbb
insl
or
sbb
leave
push
add
inc
scas
bound
int3
stc
lods
xor
inc
iret
test
dec
leave
adc
enter
push
ja
lret
rcrb
mov
jae
add
or
xlat
into
adc
rcr
mov
fsubrl
fidivs
mov
aaa
sbbb
adc
mov
test
push
adc
mov
enter
stc
jns
mov
popf
imul
imul
cmc
out
dec
out
push
scas
sbb
sbb
aaa
and
jecxz
jg
pop
jo
mov
dec
cmpsl
in
add
mov
lret
inc
jb
cld
stos
insl
std
push
dec
push
into
sbb
mov
aam
push
lcall
les
js
mov
insl
xchg
into
in
mov
sti
pusha
sbb
push
and
add
xor
sbb
int3
mov
mov
mov
inc
data16
call
ret
mov
jne
nop
pop
mov
jnp
cwtl
pop
or
adc
sahf
ja
je
xlat
test
mov
mov
jle
scas
fbstp
and
aam
aad
jb
sub
notl
adc
loopne
add
in
in
pop
push
jno
lods
hlt
fwait
arpl
mov
jae
sbb
xor
out
faddp
stos
mov
dec
or
loopne
outsl
add
rcr
je
hlt
repz
leave
mov
out
loopne
addr16
in
jbe
add
mov
xor
add
mov
repz
dec
shl
or
xor
inc
nop
pop
or
push
or
rcr
inc
mov
scas
les
add
sbb
movsl
sahf
insb
in
mov
ficomps
push
in
aaa
das
arpl
jae
setle
hlt
jns
xor
sahf
cmpsl
add
inc
jne
scas
fidivs
aaa
inc
jae
push
mov
pushf
xchg
xlat
mov
daa
xchg
add
jge
out
call
pushf
xchg
imul
ss
rcrb
hlt
in
loopne
dec
fwait
push
les
movsl
or
stc
adc
shll
sub
mov
xchg
imul
push
push
insl
adc
loopne
ss
add
movsl
xchg
movsb
push
jno
add
pop
or
pause
mov
mov
test
repnz
mov
jb
add
pop
xchg
sbb
add
hlt
adc
or
add
push
sub
sub
mov
xor
jg
es
jecxz
stos
rcrb
inc
or
insb
mov
inc
xchg
adc
hlt
mov
and
mov
scas
scas
mov
and
das
bound
lods
icebp
icebp
jns
imul
or
pop
sbb
fs
out
loop
imul
mov
add
xchg
jb
in
adc
test
and
das
add
into
loop
xor
sub
cmp
mov
add
out
scas
push
loope
adc
cmpsl
addr16
je
jmp
cmp
pop
movsl
adc
adc
repnz
es
aaa
leave
mov
clc
push
icebp
push
mov
xor
out
hlt
sbb
lcall
test
pushf
mov
cltd
lea
lea
outsb
out
out
in
cmp
test
enter
jle
nop
jo
sub
push
out
cmp
inc
adc
flds
fwait
mov
or
jp
and
repz
push
and
push
sar
and
cmp
shl
gs
and
shl
loope
scas
adc
ljmp
lea
mov
out
add
ror
decb
dec
lret
jno
in
sbb
repz
adc
jmp
xor
and
xor
push
jle
jge
pop
mov
mov
push
pop
or
ljmp
scas
inc
inc
and
sbb
and
pop
jp
sti
ljmp
mov
lods
fs
mulb
push
jl
cmpl
ljmp
jp
dec
xchg
xor
fnstenv
push
xchg
push
sbb
sbb
xchg
imul
std
mov
pop
je
mov
loopne
mov
les
push
loope
push
test
fsubs
sbb
mov
push
ret
sub
stos
les
mov
fidivs
cmp
int
insl
in
pop
inc
push
push
popa
or
aad
leave
or
dec
mov
lea
mov
loopne
lcall
lods
cwtl
repz
lds
stos
js
add
les
lds
scas
inc
shlb
movsb
out
and
pop
fcompl
push
arpl
mov
js
or
ds
push
cwtl
mov
test
hlt
jmp
testb
mov
xchg
fucomp
repz
pushaw
aas
int3
outsb
fwait
stc
loop
sbb
aad
cli
lahf
dec
jnp
push
loope
and
fcoms
ficoms
mov
add
cli
jae
mov
or
aad
int3
push
cmp
jmp
mov
imul
test
loop
cmpsb
and
mov
pop
cmp
in
mov
in
or
fs
in
mov
loope
xorb
fdivl
cmp
jnp
f2xm1
call
push
jecxz
aas
sub
jle
pop
sbb
jp
mov
jne
scas
jmp
cmp
mov
jb
mov
inc
stc
and
mov
sbb
and
xor
int3
int
mov
push
mov
push
jb
push
dec
sub
arpl
divb
lret
rclb
aaa
adc
int3
mov
popa
xchg
pop
cmp
mov
out
mov
inc
pop
sub
mov
lcall
inc
pusha
sahf
cld
jbe
lea
mov
js
jb
dec
jge
push
js
jbe
outsl
push
push
sub
jg
shll
push
xlat
cmovs
push
and
rcrb
and
gs
pop
es
cmp
cmc
daa
and
jb
lods
lds
add
shll
inc
sub
mov
jbe
jmp
and
lods
rorl
and
cmc
and
add
lock
and
and
notb
call
push
push
pop
aam
out
in
es
pop
lea
les
mov
cmp
inc
gs
sbbb
mov
inc
into
mov
rorl
shll
mov
lods
jmp
mov
in
inc
inc
cltd
add
pushf
xlat
addr16
incb
into
movsb
popf
ja
jmp
neg
mov
dec
or
fnsave
and
xchg
ja
sahf
add
pop
xchg
inc
lcall
aaa
icebp
jo
and
adc
mov
into
movb
enter
std
enter
loope
je
cmpsb
or
jp
int3
ret
adc
repnz
sbb
enter
pop
sub
or
push
aad
sbb
enter
std
adc
xchg
cltd
pop
lds
scas
cltd
ljmp
mov
incl
fsubl
outsl
xor
sub
cmc
cmp
out
outsb
aaa
mov
xchg
or
jb
clc
test
mov
jmp
testl
and
jae
sahf
shll
sti
push
pop
inc
lock
pop
test
mov
iret
sub
dec
lret
xchg
lods
outsl
sbb
xlat
sbbl
es
push
daa
lahf
fs
les
lods
pop
in
je
out
cmc
dec
scas
rcl
xchg
insb
xchg
cmp
pop
mov
stos
mov
mov
ljmp
test
arpl
in
lret
dec
pop
rorl
into
xchg
dec
jp
test
dec
repnz
popf
jo
xor
fcomip
push
mov
pusha
mov
outsl
cmpsl
cmp
es
inc
lock
sbb
fldl
push
icebp
jnp
xchg
pusha
cltd
stos
subl
ret
outsb
sahf
arpl
fstpl
inc
or
es
fcomi
notl
ret
int3
cmpsl
in
outsb
push
lods
lret
pusha
push
flds
jne
mov
add
movsl
sub
es
nop
xchg
xor
mov
outsl
cmpl
adc
arpl
fmull
in
pop
test
add
into
dec
ror
lock
fstl
mov
js
les
dec
ja
xchg
pop
inc
jbe
cmp
cltd
fistpl
mov
lcall
jne
sbb
push
fstp
clc
int3
or
imul
insb
fcoml
rorl
mov
popf
cltd
add
jl
jmp
out
in
inc
xchg
ljmp
push
rclb
movsb
jge
jg
call
dec
stos
fbld
dec
imul
xlat
jle
pop
call
mov
aaa
sbb
shrl
lahf
xor
sub
push
scas
mov
sbb
mov
out
mov
rol
jbe
popa
pop
adc
add
arpl
inc
sbb
stc
xchg
mov
mov
enter
pop
cmp
mov
add
xchg
shrl
adc
sub
cld
mov
arpl
mov
or
cmp
test
or
clc
add
mov
data16
dec
imul
aas
xor
ja
push
std
adc
cmpsl
xchg
addr16
and
lret
xchg
inc
xchg
int
cmp
push
and
mov
cmp
mov
pusha
into
push
or
div
inc
fimuls
loop
shl
fldl
sbb
inc
pushf
add
nop
cmpsb
mov
sbb
adc
idivb
pusha
adc
jb
xor
mov
push
mov
jle
outsl
leave
xchg
in
scas
adc
js
jmp
cwtl
xor
out
fsubl
pop
dec
sub
test
test
sarl
inc
test
js
sarl
das
in
sahf
shr
stos
sbb
jns
dec
cmp
pop
daa
loope
aam
xlat
pop
shlb
ficompl
or
int
es
jl
mov
xchg
mov
stos
repnz
pop
dec
je
aam
mov
fcoms
xchg
divl
test
int3
mov
adc
ret
test
xchg
adc
aam
test
sub
ret
or
mov
add
or
or
add
mov
xchg
push
pop
push
test
leave
cmp
loopne
xchg
xchg
dec
insb
xchg
adc
push
add
roll
jnp
int
mov
add
fisttps
loope
subb
nop
fbld
or
xchg
icebp
jg
fisubs
xchg
shrb
fs
push
addr16
mov
mov
cld
add
scas
cmp
xor
repz
cmp
mov
cmp
fisttps
mov
mov
aas
arpl
sahf
fdivl
jecxz
mov
cmp
fcomip
xchg
leave
jnp
icebp
push
int
mov
sbb
aas
inc
xlat
sahf
and
inc
hlt
aaa
fisubrl
call
cld
jb
lret
pop
imul
pusha
leave
sbb
mov
mov
xor
mov
xchg
sub
repnz
cs
inc
jecxz
mov
sbb
mov
dec
or
mov
inc
mov
inc
dec
jmp
stc
pusha
xorb
pusha
cwtl
fs
sbb
adc
xchg
mov
and
rcll
add
mov
dec
dec
adc
fdivs
out
in
in
xchg
std
sub
icebp
pop
lods
pop
shr
add
out
shl
jbe
sbb
in
sub
add
jno
mov
testb
jmp
enter
xorb
jno
cmp
adc
mov
mov
xor
insb
add
popa
add
mov
xor
iret
insl
hlt
cmp
out
mov
pop
sub
ds
ss
mov
pop
in
out
dec
in
add
sub
mov
test
cmp
pop
lock
add
or
aad
mov
push
fcomi
icebp
fwait
pop
test
aad
aad
cmpsl
lcall
dec
pop
cli
movsb
aas
ljmp
in
add
dec
xchg
xchg
test
push
cmp
bound
inc
and
xchg
xchg
mov
inc
jmp
insb
jb
dec
jo
xor
std
jne
ficompl
jns
jp
shr
inc
jnp
mov
fdiv
jp
inc
mov
and
mov
cltd
shll
and
dec
pop
add
fcomip
push
pop
xchg
push
pop
or
fld
xchg
test
sub
jno
stc
ljmp
adc
push
std
xor
subl
mov
leave
pop
mov
in
and
sti
sub
rcrl
add
mov
mov
or
insl
xor
push
popa
pop
arpl
dec
inc
js
jmp
cld
or
cmp
push
xchg
sbb
jmp
mov
mov
mov
popa
daa
repnz
pop
cmp
xchg
push
jmp
dec
pop
fcoms
inc
mov
adc
ss
add
nop
pop
int3
sbb
adcl
xchg
xchg
or
fsubp
jnp
sub
in
ljmp
pop
std
decl
movsb
dec
shl
hlt
leave
pushf
jbe
xor
mov
adc
mov
int3
or
nop
push
scas
and
pusha
iret
push
inc
mov
push
jne
push
pop
jnp
mov
lret
mov
jno
mov
std
mov
dec
jecxz
xchg
push
notb
dec
adcl
das
cmp
lds
stc
mov
int3
dec
add
rol
bound
lea
into
xor
stos
dec
dec
sub
data16
sar
in
mov
shll
fisubl
movsl
popf
mov
push
jae
loopne
into
mov
aad
shrb
xchg
lahf
rcrb
loope
out
sub
sub
or
or
xlat
xchg
repz
out
pop
adc
loopne
xor
dec
jmp
xchg
lcall
into
pop
sbb
or
mov
ret
adc
xchg
mov
dec
xchg
sarl
xorb
pop
adc
pop
adc
sub
xor
dec
out
inc
xchg
mov
pop
ja
movsb
add
adc
outsl
stos
stos
or
pop
inc
inc
cmc
loop
leave
jnp
arpl
push
jmp
xchg
pop
jecxz
rorl
jecxz
movl
scas
inc
lds
jle
and
faddp
push
out
push
ffreep
xor
bound
mov
outsb
lcall
sahf
inc
xlat
pop
dec
mov
call
push
fnsave
imul
xor
out
aaa
jge
out
push
insb
jmp
in
dec
daa
nop
loopne
je
dec
clc
cmp
xor
insb
hlt
sbb
sbb
pop
pushf
add
movsl
adc
mov
test
xchg
push
sti
adc
pop
sub
mov
lea
push
lret
lahf
push
push
shll
xchg
mov
jp
jae,pt
jns
inc
xchg
pop
jecxz
or
push
pop
loope
ficoml
xchg
push
or
fwait
sti
sub
jb
or
mov
cmp
push
cltd
push
out
sub
and
rolb
add
test
inc
xchg
ss
xor
das
xor
in
push
aad
xchg
pusha
mov
bound
lahf
roll
es
jae
ficoml
mov
icebp
popf
cld
enter
les
pop
mov
in
inc
popa
out
mov
lock
in
dec
adcb
test
inc
xor
xchg
and
mov
adc
outsl
sbb
ljmp
mov
icebp
rol
pop
lret
mov
push
adc
sbb
filds
jle
sub
xor
mov
and
call
mov
rorl
rolb
xchg
adc
fstpl
push
push
imul
adc
fsubrl
xchg
push
loop
ss
dec
pop
push
mov
or
arpl
or
jle
cmp
xchg
jno
cmpl
in
cli
loopne
mov
mov
xchg
sbb
int3
ss
jecxz
inc
arpl
mov
rcr
imul
xchg
add
ficoms
cmp
mov
cli
cmpsb
mov
dec
lret
idivl
insb
icebp
mov
adc
xchg
sub
mov
push
out
mov
xchg
push
jns
xchg
rolb
add
adc
aad
loop
inc
insb
mov
mov
loopne
fwait
pushl
mov
adc
xor
mov
mov
lret
mov
mov
popa
jle
es
aad
pop
and
fdivs
cmc
nop
and
sub
mov
test
jg
cmpsl
and
fmulp
std
jl
orb
aaa
pop
pop
fimuls
dec
arpl
mov
repz
xchg
xchg
fs
sub
inc
test
xchg
pop
test
xchg
mov
out
add
cltd
fbstp
call
testb
insl
add
mov
sub
pop
mov
jmp
subl
and
lods
adc
lds
xchg
out
std
jno
scas
movsl
iret
mov
sub
sbb
movsl
adc
mov
icebp
push
add
loop
js
inc
mov
loope
inc
sbb
ret
aas
testb
std
out
loope
shlb
into
pop
adc
pop
xor
stc
scas
push
jmp
int3
test
cwtl
orb
inc
xor
pop
lret
ljmp
lds
into
mov
int3
add
dec
mov
sub
pop
fisttpll
nop
aas
inc
sub
mov
mov
data16
jae
and
xchg
xchg
jns
xlat
je
popf
mov
mov
jne
hlt
mov
jmp
stos
cmp
scas
cmpsl
aas
testb
negl
ret
pop
fmuls
push
movsl
in
std
xchg
xchg
jo
mov
aam
pop
lret
pusha
aad
mov
mov
ficomps
mov
insl
dec
aas
pop
nop
xchg
testb
dec
std
sub
sub
imul
stc
cld
fs
adc
fstpl
dec
inc
pop
add
sbb
sub
out
mov
je
push
popf
inc
pop
mov
in
sbb
adc
adcl
jmp
fstpl
adc
cmpsl
xor
jne
not
nop
into
mov
jmp
sahf
fsubrl
js
sbb
shl
jp
clc
push
jp
jns
mov
movsl
int3
pop
ja
aaa
mov
insl
sbb
out
int
mov
xor
int
gs
add
ljmp
lods
inc
fidivrl
or
and
scas
and
mov
imul
mov
pop
pop
pusha
idivb
sub
rcrb
push
xchg
aam
sub
pusha
xchg
daa
jo
scas
in
xchg
pop
inc
cmpsb
push
lahf
mov
mov
pushf
addr16
adc
cmpsb
stos
jae
sub
xor
ficoms
lahf
int
lret
adc
jl
xor
push
inc
stos
and
xor
jno
add
arpl
shrb
int3
ret
inc
inc
mov
and
xor
shlb
lret
out
pop
pushf
fnstcw
xchg
outsl
gs
stos
pushf
enter
cmpb
out
jnp
shr
popf
sahf
inc
fsubl
xchg
mov
cmc
fldl
aas
pusha
inc
jno
js
in
inc
in
xchg
gs
test
push
push
cmp
push
push
stos
pop
xchg
fldenv
out
sahf
cmpsb
hlt
push
xor
cmp
adc
cmp
lock
jne
dec
push
sub
pop
rcll
mov
cmc
inc
lea
mov
sbb
pop
int3
jb
lea
jne
repz
inc
mov
outsl
ja
mov
xor
test
dec
cmp
pusha
xor
int
sub
jb
push
ss
jmp
insl
jg
popf
dec
call
fwait
pop
jne
movsl
sub
sub
or
and
adc
mov
insl
aaa
mov
sbbl
xlat
or
les
dec
dec
pushf
dec
mov
leave
pop
jmp
pop
or
push
ret
add
push
mov
push
outsl
xchg
loop
iret
les
cmpsb
mov
pop
in
lea
jno
movhps
add
ret
jge
jns
add
lcall
test
jnp
fnstsw
sahf
mov
cmp
frstor
inc
mov
outsb
mov
jl
ds
addb
pop
shrl
xchg
mov
orl
les
ja
pop
cmp
mov
loope
dec
js
push
and
lahf
out
cmp
pop
pop
test
adc
mov
hlt
std
push
mov
push
dec
push
enter
outsb
mov
movsl
daa
or
ret
push
cmp
jge
sahf
inc
xchg
lods
dec
out
sbb
lea
xchg
xor
sbb
mov
cmp
dec
std
and
scas
sub
sbbb
popa
push
test
push
mov
jae
insb
in
mov
mov
sbb
sub
imul
out
jmp
cmp
jge
test
mov
hlt
or
inc
inc
jle
dec
repnz
sub
adc
pop
mov
mov
xor
mov
jbe
shl
add
fiadds
sub
popf
mov
xchg
xor
push
push
inc
xchg
jg
aam
mov
fldcw
test
pop
cmp
pop
jp
inc
cmp
outsb
jae
cmp
std
cmp
jle
arpl
and
inc
enter
xchg
fidivrl
and
inc
and
jo
jae
loope
iret
mov
sub
pop
out
and
loop
data16
dec
pop
outsl
inc
dec
ret
fnstsw
xchg
mov
test
movsb
sahf
lea
push
push
xor
outsb
push
call
sbb
popf
fiaddl
sarb
jnp
sbb
in
push
xor
and
scas
push
adc
call
xor
pop
mov
repnz
pop
and
inc
daa
adc
dec
int
rcrb
dec
arpl
xchg
sub
arpl
mov
movsb
pop
cmp
push
mov
or
jb
jmp
xor
jns
ret
mov
insl
daa
mov
sbbl
mov
adc
mov
sti
inc
fstpl
andb
cmp
mov
inc
je
in
mov
pop
push
leave
cmp
xchg
jne
xor
sbb
fwait
mov
add
cwtl
add
fstl
push
cmp
mov
jmp
jge
add
int3
push
xor
inc
sub
inc
pop
lea
jmp
in
sti
scas
xchg
sahf
mov
repz
adc
cmc
xchg
mov
mov
int
mov
pop
test
jmp
push
xor
and
stos
rorb
dec
pop
stos
repnz
in
pop
cmpsl
into
mov
jecxz
pusha
xor
xorb
daa
and
je
scas
imul
das
in
pop
jecxz
push
aad
or
movsl
movsb
insb
popf
add
rcll
pop
mov
out
fbld
loope
shrb
lahf
dec
aaa
jg
es
inc
mov
fsts
repz
in
cmp
inc
ret
sbb
dec
fwait
and
sub
xor
pop
inc
add
insb
sbb
aam
xchg
test
movsl
fmul
out
xchg
jnp
hlt
push
mov
mov
and
mov
fiaddl
mov
or
xchg
sub
xor
sub
cld
in
test
leave
loopne
ficomps
ljmp
repnz
aas
add
or
add
ljmp
jp
jns
ljmp
cld
dec
inc
pop
bound
inc
femms
adc
and
es
repnz
inc
add
in
rclb
adc
mov
mulb
mov
and
sub
rcl
jb
sbbb
pop
push
add
ja
repz
sbb
shll
mov
andb
cmpsl
push
orb
outsl
in
mov
out
add
sbb
mov
and
ljmp
add
fbld
cmp
mov
dec
push
test
push
inc
xchg
das
decl
test
jge
loopne
adc
dec
or
leave
mov
push
repz
cmp
out
push
das
or
insb
pop
sub
adc
lock
xchg
outsb
insb
cli
add
mov
aas
jp
jmp
enter
lea
leave
repnz
sahf
lret
mov
hlt
cmp
push
pop
mov
out
out
sbb
popa
jae
push
xchg
jae
xchg
in
pop
push
test
sub
leave
push
sub
cwtl
mov
push
push
mov
in
cmp
subb
fwait
loopne
aad
loope
ljmp
and
iret
lods
push
adc
aaa
push
iret
mov
lret
scas
pop
cs
pop
push
pushl
or
push
mov
or
dec
divb
cli
mov
adc
mov
cli
inc
inc
cmpsl
aaa
pop
push
addr16
push
cmp
add
xor
insl
int3
rorb
loopne
mov
xchg
cmp
imul
sub
daa
ljmp
jg
cmp
icebp
add
loop
fcoms
push
int
inc
mov
adc
and
dec
fs
nop
jb
daa
xor
jmp
out
icebp
lds
les
in
sbb
dec
inc
xchg
mov
jp
mov
scas
pop
dec
outsl
mov
xor
into
xor
shrb
cmp
inc
mov
inc
or
test
sub
add
mov
fucomip
adc
xor
int
push
lock
push
dec
fcmovnbe
pop
in
test
mov
inc
pushf
inc
xor
mov
or
push
inc
loop
sbb
inc
sarl
in
lea
cmp
jg
in
data16
push
and
and
adc
pop
sbb
in
inc
cli
js
xchg
cmpsb
inc
ja
pop
jno
cmp
lods
lods
push
push
xor
mov
imul
std
out
rolb
call
shrb
bound
adc
lds
push
cmp
dec
push
addr16
inc
or
sahf
push
ljmp
sub
sti
mov
or
pop
push
and
lcall
push
xchg
dec
not
push
cmp
mov
inc
cltd
xchg
ret
and
sbb
jae
mov
add
adc
out
mov
inc
cmp
gs
int3
pop
sub
enter
xchg
mov
cmpsl
xchg
push
mov
fsubrl
sahf
mov
test
mov
jo
jp
jno
push
inc
mov
jmp
shlb
mov
xor
and
enter
mov
jge
sub
push
fimull
mov
pop
jbe
js
andb
mov
pop
fisttpll
call
mov
loop
fnstsw
lods
or
scas
dec
ds
jp
lods
in
aaa
adcl
enter
and
cmp
mov
jno
loop
sub
icebp
xchg
ret
add
fadds
fs
incl
es
or
xchg
andb
xor
ret
ss
cli
es
xor
mov
and
mov
fmull
cli
push
rolb
scas
jnp
mov
pop
sub
sub
lods
push
mov
arpl
inc
pushl
pop
ret
rorl
scas
ljmp
jns
data16
jge
outsb
insb
stos
dec
int3
jnp
and
mov
in
test
fbld
daa
je
lds
scas
add
test
cmp
fcoms
aam
or
scas
jmp
jle
mov
sahf
std
pop
sub
sbb
shll
inc
ljmp
mov
pushl
negb
aad
push
xchg
inc
int3
out
gs
add
rcll
and
lcall
add
inc
pop
outsl
xchg
movsb
xchg
pusha
add
cmpl
mov
sahf
inc
add
push
mov
xorl
mov
lds
xor
inc
pop
ja
fisttps
inc
aaa
jecxz
mov
pushf
push
mov
add
pusha
cltd
fnstcw
in
mov
pop
xchg
test
insl
es
adc
gs
mov
adc
dec
add
or
divb
mov
or
insb
fwait
push
sub
test
mov
jle
xor
add
stc
mov
fidivl
aas
inc
and
mov
jle
jnp
push
add
or
dec
and
xor
les
fistpll
scas
sub
aaa
and
adc
fisubrs
addr16
cld
fiaddl
insb
loope
in
jbe
push
jbe
push
pop
lret
pop
jecxz
in
mov
fstl
push
mov
fsub
xor
xor
mov
jecxz
pushf
mov
sar
mov
mov
loop
push
mov
in
popf
mov
movsl
test
cmp
jle
and
popa
cmp
jnp
xor
addr16
inc
mov
or
int
xor
dec
out
xchg
sti
xchg
dec
or
cmp
stos
clc
mov
jne
xor
fs
loop
sbb
mov
push
mov
out
mov
fcoms
inc
cs
cmp
repnz
jecxz
les
movsl
cmpsl
ret
out
xlat
andb
fs
cmp
mov
mov
mov
loop
inc
rorl
push
inc
cs
or
icebp
out
sbb
scas
std
scas
and
dec
std
pop
mov
ficoml
dec
fcomp
shll
mov
sahf
jg
ds
test
sbb
fwait
mov
lret
idiv
mov
out
in
movsl
js
scas
mov
repz
aas
inc
adc
pop
xchg
sti
test
jae
mov
enter
or
fiaddl
ficompl
stc
testl
lahf
in
add
popf
sbb
jne
aaa
xchg
test
loopne
ret
in
mov
push
pusha
ja
push
adc
sub
sbb
adc
arpl
xchg
rclb
push
data16
je
jecxz
or
nop
pop
test
add
dec
jle
xchg
cmp
bound
in
and
or
mov
xchg
fst
inc
jmp
sbb
sbb
mov
xor
mov
or
int3
pop
popf
lock
pop
test
jge
mov
pop
das
mov
sti
or
mov
pop
mov
cmc
sarb
sbb
inc
lcall
into
je
rcr
xchg
rcrl
add
mov
adc
cwtl
cmp
inc
mov
nop
je
or
dec
aam
test
push
push
gs
gs
jbe
mov
mov
xor
test
bnd
pcmpeqb
add
clc
call
shlb
pusha
fisubrl
sbb
push
or
imul
cmp
cmpsb
movsb
outsl
jg
pop
or
test
xor
fstl
mov
or
push
cld
cmpsb
xor
push
jo
mov
shl
pushf
pushf
repnz
jnp
and
leave
test
bnd
push
in
or
outsl
repz
sbb
out
in
mov
mov
sub
loope
cmp
xchg
into
lret
test
mov
pop
gs
adc
test
pand
sbb
divb
push
loopne
stos
adc
dec
test
cltd
pop
jecxz
pop
mov
lret
stos
cltd
jno
mov
push
cmp
adc
arpl
data16
dec
adc
lds
jno
push
dec
add
fnsave
lret
xchg
mov
dec
leave
popf
js
inc
popa
out
iret
ja
dec
inc
cmc
xchg
mov
mov
jo
pop
and
adcl
rolb
inc
jmp
pop
loop
js
cli
lods
lea
out
ret
int3
mov
daa
or
add
loopne
in
dec
mov
adc
mov
cwtl
mov
sar
in
pop
int3
xorb
mov
stc
fdivrl
xchg
stos
movsb
out
lods
pop
xchg
inc
or
sahf
sbb
mov
sub
lods
repnz
xor
cltd
dec
jo
adc
cmpsb
mov
pop
jae
nop
popa
aam
mov
mov
xor
inc
movsl
ja
repz
push
test
out
out
mov
cld
jns
lret
xor
idivb
jl
bound
test
loope
sbb
repnz
call
es
dec
imulb
dec
leave
adc
stos
push
stos
adc
bound
inc
jbe
enter
cmp
add
sbb
addr16
mov
aaa
cld
dec
imul
inc
push
jne
aas
sahf
jge
inc
inc
or
add
mov
rclb
sti
lret
mov
leave
xlat
jmp
jae
call
sahf
add
sysexit
cmp
adc
sbb
pop
cmpsb
pop
lds
pop
cmp
lock
inc
imul
fwait
test
clc
sub
rcrl
cld
and
xor
add
xchg
mov
mov
outsb
sub
clc
push
push
lea
pop
jge
insb
xor
or
imul
dec
mov
jo
lods
stc
ret
lea
lcall
pop
ret
push
clc
push
sbb
mov
jl
fnstcw
iret
in
cs
pushf
or
shlb
pop
jb
adc
or
mov
outsb
pop
sbbb
pushf
sti
push
adc
fwait
lahf
cli
arpl
push
in
ficoml
into
lcall
xchg
cmp
hlt
add
lcall
mull
cli
jge
ret
arpl
mov
or
sar
cs
fsubl
pop
and
and
imul
les
push
test
inc
arpl
xchg
sub
cwtl
push
cs
xchg
sahf
nop
fnstcw
rolb
mov
das
loopne
in
mov
lock
shlb
mov
in
lock
subl
xchg
das
push
repz
mov
lea
sbb
mov
jno,pt
pop
arpl
push
aad
pop
cmp
pop
sbb
jns
xchg
ss
mov
jnp
scas
std
enter
frstor
movzbl
sbb
add
roll
shll
repz
xchg
aad
shll
dec
jo
rclb
enter
in
pop
sbb
push
mov
cltd
inc
cld
loop
push
outsb
dec
imul
rclb
ret
push
js
inc
xor
cmp
clc
or
out
gs
shll
pop
out
mov
mov
enter
pop
inc
fstpl
cltd
lea
les
jge
and
in
jmp
shrb
out
lods
jge
add
rcll
pusha
rcrl
ss
ficomps
jp
push
imul
push
andb
loop
jns
cmp
push
hlt
cmp
cmc
int
lds
pop
push
add
sub
mov
xor
push
push
or
sub
add
into
adc
in
scas
push
mov
stos
or
in
cmp
adc
mov
rorb
aad
aaa
xchg
adc
xor
fiaddl
add
rcrb
pusha
stos
inc
adc
push
fs
mov
scas
lcall
adc
sub
mov
testl
xor
xor
sub
jle
inc
outsl
mov
mov
lahf
es
xchg
pinsrw
push
ret
sahf
addr16
pushf
sahf
test
fdivrp
dec
xchg
seta
pop
push
outsb
dec
xchg
xchg
pop
repnz
pop
or
pop
push
test
pop
and
xchg
shl
sub
dec
push
mov
xor
sarl
adc
loop
jmp
sub
lret
jl
pop
mov
outsb
xchg
dec
dec
std
in
adc
int3
repnz
pop
mov
fimuls
push
inc
pop
loopne
mov
mov
inc
mov
fwait
js
or
js
icebp
jae
jns
fdivs
andl
loopne
mov
shll
arpl
clc
outsl
inc
adc
mov
adc
lock
iret
inc
and
cwtl
daa
push
repnz
shl
jbe
cmp
cmp
cmpb
inc
frstor
inc
aad
ficoml
inc
idiv
icebp
jne
sbb
inc
add
xor
mov
popa
test
enter
arpl
popf
enter
and
lods
mov
sbb
mov
je
idiv
stc
mov
xchg
sahf
fcompl
push
fistl
bnd
cmp
mov
sahf
neg
sub
mov
cmc
mov
std
sbb
push
dec
dec
movsb
gs
lea
cwtl
cmp
mov
pushf
repz
test
mov
mov
in
int
cmc
inc
repz
mov
pop
aam
xlat
inc
adc
mov
inc
cmp
mov
jp
stc
xor
add
insl
lcall
sub
and
cmp
test
dec
stos
rorl
dec
push
cmp
push
sbb
and
dec
aad
sub
imull
mov
jae
adc
iret
cmp
stos
sub
jbe
test
inc
nop
in
mov
push
mov
xchg
insl
push
mov
pop
xchg
mov
subl
int
ret
jp
mov
fdivrs
lcall
pop
cltd
xlat
repnz
shr
lods
sub
mov
cmpsl
xchg
jmp
shr
cmpsb
mov
leave
mov
hlt
sbb
incb
mov
add
or
sahf
das
fmul
pop
push
out
flds
hlt
std
ljmp
cmc
faddl
fimull
adc
and
dec
cmp
jo
sarl
pop
mov
nop
outsb
loopne
dec
mov
mov
je
dec
inc
dec
into
ljmp
mov
imull
xor
fwait
pop
arpl
clc
insw
movsb
fldl
aad
aas
lock
lock
cmp
fcmovbe
adc
rol
or
aaa
mov
sub
inc
outsb
stos
inc
cmp
adc
add
mov
sub
pop
lods
shrb
jmp
cmp
in
xor
jno
hlt
stc
jno
fstl
xchg
out
sub
mov
push
adcb
mov
pop
loopne
adc
push
jg
add
imul
in
rorb
mov
push
ljmp
mov
loopne
push
dec
fmuls
popf
mov
sbb
call
xchg
fcomp
jns
test
sbb
push
lahf
movb
push
in
pop
pop
xor
adc
dec
rorb
add
xchg
dec
jnp
stc
inc
add
sbb
insl
xchg
das
sahf
sarl
fidivrl
jg
jg
cmpsl
sbbl
jmp
mov
cwtl
mov
add
xchg
lret
or
insl
jle
xchg
and
imul
in
outsl
xchg
movsb
hlt
add
cmc
cli
cmc
sub
nop
jl
int3
add
dec
test
dec
and
jne
pop
pop
xchg
mov
out
pop
dec
int3
jecxz
inc
mov
mov
mov
int
xchg
sbb
loope
mov
imul
mov
fbld
or
out
xchg
push
mov
mov
or
mov
flds
rol
dec
test
imul
mov
jo
les
and
dec
dec
ret
lods
imul
mov
loop
mov
adc
out
sub
fimuls
mov
out
inc
sub
mov
out
xchg
imul
adc
arpl
jne
xchg
and
ret
lret
add
pop
add
fldenv
jp
jmp
inc
mov
push
sbb
shll
add
sub
cmpl
jmp
mov
dec
inc
dec
dec
or
cli
mov
jg
stos
cmp
dec
enter
push
test
mov
pusha
mov
or
rclb
and
add
jl
sahf
enter
push
hlt
addb
out
cwtl
lret
cmp
lods
loope
mov
xchg
adc
hlt
cmp
insb
loope
lods
sbb
imul
xchg
and
mov
xorb
pop
add
pushf
or
sub
bnd
lds
mov
xchg
push
es
xchg
pop
aaa
push
stc
fcmovu
xorb
insl
cld
jbe
fs
mov
xchg
cli
or
ja
pop
stc
insl
insl
pop
xchg
shl
out
and
dec
es
pop
das
js
sub
or
outsb
repnz
cmc
mov
movsb
les
sbb
mov
scas
add
mov
pmulhuw
mov
jecxz
inc
add
sbb
or
jmp
and
push
std
push
sub
cmp
jmp
push
mov
lds
xchg
pop
fdivrs
je
insb
push
lret
in
out
orl
pop
into
inc
xchg
jge
add
add
xchg
loopne
dec
sub
jae
out
adc
inc
mov
mov
loop
shl
popf
test
inc
add
gs
mov
lcall
out
push
lds
lods
pop
ret
jns
imul
outsl
cld
sbb
adc
call
sbb
or
mov
pushf
pusha
and
cmpsl
imul
cmp
cmp
add
hlt
lock
xchg
sbb
jne
in
pusha
push
loop
cmpsl
mov
dec
loope
insl
mov
jl
out
bound
pop
cmp
push
icebp
fstl
jno
and
mov
sbb
das
jb
mov
sub
xchg
mov
fmuls
sbb
dec
ret
aam
jmp
mov
clc
mov
das
aas
js
inc
mov
jecxz
fdivrl
sbb
pop
xlat
shll
push
cmp
or
imul
push
jmp
sbb
imul
sahf
ret
test
aad
popf
sbb
sahf
scas
cli
les
sbb
int3
mov
imul
mov
out
dec
mov
imul
mov
int
lahf
inc
mov
out
fnstenv
cs
pop
sbb
scas
mov
inc
or
repnz
xchg
rcr
fmul
add
xor
sti
jbe
xlat
inc
subb
rclb
shlb
adc
push
adc
fcmovbe
and
pop
add
sub
mov
ud2
daa
xchg
jne
jl
ret
push
pop
xor
mov
push
push
jbe
lods
loopne
inc
pusha
or
mov
adc
das
fs
sub
mov
es
or
and
rcll
repz
xchg
jno
or
out
sti
into
xor
ljmp
jmp
int3
push
pop
push
xor
aas
addr16
pop
mov
jns
ret
push
mov
inc
testb
add
movsb
inc
lock
gs
ss
mov
popf
outsb
aad
dec
xor
push
mov
push
fisttpll
xor
je
mov
mov
shrd
stos
or
push
mov
pop
inc
sbb
xchg
dec
outsl
pop
popf
mull
lea
xor
add
push
ficoml
pop
loopne
pop
cmpsl
aas
fiaddl
and
pusha
or
sub
mov
push
jl
jl
ja
mov
inc
lret
aas
cmp
stc
add
jmp
lods
mov
in
jge
xchg
subb
aam
cmp
mov
adc
test
jmp
jmp
mov
daa
inc
int
fwait
sbbb
lcall
fstpl
in
sbb
sub
cltd
mov
popf
js
jecxz
inc
icebp
sbb
xchg
fcmovnbe
loop
push
xchg
aas
fstps
movsl
es
rcrb
jge
inc
out
add
mov
rcll
imul
in
fucomp
mov
out
add
inc
mov
push
sbb
xor
cld
out
or
cmp
jno
mov
adc
mov
add
jnp
jbe
sbb
add
imul
push
in
loopne
sub
jb
sub
push
and
dec
stc
and
loopne
in
and
mov
mov
adc
cmp
xchg
mov
mov
inc
into
loop
add
sahf
call
xor
shll
sbb
mov
sbb
xor
lea
dec
test
mov
arpl
push
sbb
lock
adc
pop
and
ror
pushf
mov
adc
frstor
lahf
lea
mov
mov
lods
dec
pop
je
into
daa
scas
inc
cmp
add
fnstcw
lock
iret
sub
xor
xchg
add
adc
push
cmp
loope
popf
push
faddl
repz
or
aad
rcrl
out
lods
jmp
sarl
xor
in
inc
jp
sbb
gs
inc
js
fisttpl
inc
mov
or
dec
cmpsl
mov
or
sbb
sarl
push
popf
pop
cmp
insl
pop
outsb
lods
int
inc
push
arpl
jg
leave
pop
cld
aas
cmpsl
mov
pop
fadd
cmp
pusha
insb
xor
jmp
xchg
mov
fwait
insl
pop
mov
shll
clc
repnz
rcl
dec
jnp
or
addr16
enter
sbb
or
jmp
arpl
xchg
sub
imul
lahf
pop
sbb
fisubs
mov
inc
lret
or
mov
cld
fidivrs
push
sbb
outsl
jl
xor
mov
in
adc
mov
push
inc
mov
add
jle
dec
cmp
imul
int
xor
call
inc
dec
fld
loop
cmp
pop
mov
pop
into
movsl
insb
out
call
addb
leave
push
push
repnz
lahf
das
cmpsb
scas
arpl
inc
out
in
outsb
lahf
and
ja
push
cmp
xlat
dec
mov
fidivrs
push
or
push
inc
icebp
mov
popf
lods
pop
cmp
add
sub
inc
push
push
push
adc
jne
dec
xor
mov
dec
aaa
jp
shrl
call
push
and
repz
in
push
fsubrp
xchg
mov
push
xor
jo
idivb
xlat
push
pusha
iret
sub
pop
clc
es
test
ja
bound
xchg
cmp
push
xchg
push
push
xlat
sbb
rorl
pop
jl
cld
out
push
lret
sub
xchg
jae
push
mov
fnstenv
sub
push
add
sub
mov
into
lods
out
jmp
arpl
cmpsl
out
into
sbb
mov
jp
shl
out
push
cmp
mov
sbb
iret
in
xorl
loop
ljmp
adc
or
cmp
fisttps
push
xchg
dec
xchg
or
lock
test
push
fsubr
cs
dec
adc
aas
push
js
andl
into
std
adc
sbb
pop
fiaddl
xchg
ror
add
mov
lret
stos
push
xchg
out
push
jg
and
jo
enter
movsl
mov
lods
lds
repz
push
loopne
in
imul
jbe
xor
scas
sub
ljmp
stos
js
test
cwtl
out
jp
shll
push
ss
mov
inc
pop
lea
or
mov
mov
imul
repnz
test
movsl
cmp
jns
jmp
add
mov
idiv
fwait
mov
pop
inc
mov
add
stos
xchg
js
outsl
push
mov
push
inc
pop
xchg
leave
push
ds
push
pop
pop
nop
out
mov
jbe
popa
call
fbstp
xor
lret
mov
mov
mov
lcall
mov
idivb
fnstenv
outsb
and
insb
inc
xor
sub
scas
mov
fwait
stc
xchg
adc
mov
lods
cmp
and
out
out
out
xorl
into
and
out
cs
in
test
fildl
fldt
or
jns
mov
lds
sub
fwait
pop
cmp
cmp
fld
bound
into
add
sub
shrb
adc
inc
push
sub
xor
mov
mov
fisubrl
stos
test
outsl
mov
out
push
add
cs
push
and
push
xor
imul
inc
test
out
mov
jmp
fistps
mov
mov
les
testl
cmpsb
add
inc
inc
stos
daa
pop
mov
imulb
lds
sbb
inc
push
mov
seta
leave
data16
or
mov
orl
addl
imull
in
insl
xor
sub
push
jnp
lret
enter
loop
lds
lcall
lret
in
mov
loop
cmpsb
pop
mov
in
dec
xchg
mov
adcl
push
and
xor
push
jns
add
sbb
stos
adc
jmp
in
sbb
loope
ror
into
xchg
call
or
sbb
dec
xchg
scas
mov
push
cmp
mov
hlt
out
lahf
lods
jl
pop
xlat
pop
aas
lret
and
cli
xchg
pop
pop
popf
push
sub
inc
divb
push
sub
ficomps
adc
or
or
pop
xlat
jb
sub
cmc
xchg
hlt
adcb
les
sub
mov
daa
ja
call
jmp
iret
jmp
aam
in
inc
dec
mov
into
loope
sbb
stos
test
pusha
in
aam
idiv
dec
lret
xorb
sub
cmpsl
sbb
mov
aas
lods
ficoml
xor
fs
mov
pop
pop
or
and
sbb
int
mov
lret
xor
mov
dec
xorb
sahf
shrb
xorl
jmp
lret
stos
sub
and
xchg
imul
xor
dec
ret
std
fdiv
leave
sub
mov
icebp
push
addb
mov
lods
adcl
push
push
inc
pop
in
enter
mov
add
call
andb
jne
sahf
jae
mov
data16
mov
test
insb
add
scas
mov
jmp
lock
inc
cld
jno
mov
mov
mov
cmp
shlb
sbb
inc
into
or
movsb
call
mov
pop
imul
mov
xor
popf
dec
clc
jo
mov
mov
es
scas
rol
cmp
and
pushf
jmp
leave
es
insl
lcall
adc
or
mov
rcrl
adc
shlb
lock
mov
scas
jp
loop
ss
popa
lret
hlt
mov
lret
or
jg
sub
bnd
inc
xor
jne
cmc
js
outsl
cld
lds
jbe
cld
add
cltd
pushf
push
shrb
sbb
pop
jo
cmc
imul
adc
in
fldl
cmp
cld
ret
lds
mov
lcall
in
dec
enter
jg
jg
mov
xlat
inc
mov
and
jle
adc
or
sub
fs
out
and
sarl
xlat
jns
test
mov
mov
cld
in
ss
adc
jl
pushf
test
cmp
jle
ds
aad
rorb
push
add
fsubrp
pop
and
sub
pop
aad
mov
enter
mov
stc
sub
loop
add
sub
lock
jb
test
out
pop
push
out
lahf
xorb
in
cmp
mov
sbb
add
or
push
adc
int
test
jns
push
pushf
inc
jle
push
dec
subl
loopne
jmp
into
stos
mov
mov
push
insb
jg
mov
ja
xchg
inc
lahf
out
addr16
lds
js
subb
in
fnstsw
out
mov
inc
lcall
rcr
subl
lds
ror
and
movsl
aad
les
je
add
cmp
int3
repz
mov
inc
mov
jns
cld
sub
and
subb
ja
in
mov
inc
out
nop
call
fsubrs
lock
push
lods
sub
push
mov
sbb
xchg
test
inc
xor
sub
mov
cmp
jecxz
jb
clc
push
popa
fidivl
cmp
lahf
adc
mov
mov
lcall
xchg
mov
js
mov
insb
sub
mov
enter
les
and
insl
mov
fnstsw
pop
rcrb
push
cmpsl
divb
icebp
mov
mov
data16
cmp
and
pop
lahf
jb
enter
cmpsb
popf
mov
out
repz
jo
sti
mov
adc
push
shrb
jbe
js
xor
ficomps
mov
pop
push
loope
sahf
jmp
out
pop
add
into
and
cwtl
cmp
xchg
lods
iret
loop
or
pop
jmp
mov
out
fsub
fists
or
pushf
cmc
loopne
movl
out
jb
mov
iret
mov
pop
mov
jbe
test
xorl
and
inc
rorl
xor
mov
jl
inc
mov
xchg
or
lods
nop
out
add
mov
out
xchg
or
add
iret
por
icebp
push
mov
xchg
add
pop
sbb
dec
lock
sbbl
out
add
push
adc
outsb
jae
out
dec
mov
mov
jae
notb
dec
xchg
js
pop
rcll
cmpsb
cmp
mov
add
dec
stc
xchg
stc
out
movsb
test
mov
imul
cs
stos
ja
sub
lods
test
cs
test
and
xor
lahf
inc
jp
frstor
rclb
mov
loope
inc
test
jo
pusha
dec
mov
fs
aas
loopne
cld
insl
mov
jo
xlat
sub
cltd
arpl
test
lcall
mov
pop
cmp
shrl
sub
mov
cmp
add
or
xor
mov
jnp
repz
add
gs
mov
push
repz
neg
dec
cs
out
pop
into
leave
mov
sbb
adc
ret
sub
inc
out
pushl
popa
lods
or
sbb
xor
lret
ret
repz
or
pop
sti
and
dec
fisttpl
push
or
sub
xor
jo
jnp
ss
std
data16
imul
or
lret
jns
andb
icebp
adc
pop
clc
and
xchg
mov
stos
addl
cmp
mov
pop
sbb
pop
shlb
add
or
dec
pop
pop
movsb
popa
lahf
ljmp
imul
jno
psubw
leave
push
scas
roll
cmp
xchg
jb
sbb
fmull
xchg
xor
fdivrs
repnz
popa
aas
gs
divl
and
scas
mov
sbb
cmp
dec
mov
pop
mov
lea
bound
int3
mov
mov
xchg
int3
add
push
rolb
aam
cltd
sub
push
adc
mov
and
push
js
insb
stos
push
shll
call
push
mov
rol
adc
test
cmp
cli
xchg
push
int3
nop
cmp
dec
lcall
test
scas
mov
sahf
out
icebp
call
es
fs
aam
shll
or
mov
jae
aad
dec
testb
dec
popa
dec
fsubrl
lret
dec
cmp
shr
mov
xchg
inc
or
xchg
cmp
dec
or
push
sub
sbb
scas
xchg
leave
out
mov
sbb
jecxz
jae
cli
mov
shrb
mov
das
bound
push
cmp
pop
xor
aas
xchg
jge
or
push
loop
dec
dec
adc
sahf
jmp
aas
js
movsb
rolb
out
dec
sub
sbb
rol
push
addr16
leave
out
rcll
xor
call
inc
imul
out
movsb
jecxz
mov
pop
test
dec
addb
bound
icebp
enter
mov
mov
xchg
adc
setb
ret
adc
hlt
mov
aam
loope
int3
fwait
nop
div
aad
cli
aas
int3
iret
fnstcw
cltd
jmp
lock
cltd
mov
rorl
aaa
push
xchg
push
mov
clc
jle
fldcw
jb
movsl
and
je
pop
xor
inc
inc
lock
test
mov
cmp
nop
cwtl
dec
adc
movsb
cmp
insb
mov
nop
mov
ret
pop
add
loope
lcall
mov
inc
push
mov
inc
repnz
jp
int
adc
popa
sbb
pop
cld
pop
in
mov
out
push
repz
pusha
sbb
lcall
subl
and
test
mov
adc
jg
shll
jle
in
pop
popf
mov
pop
sbb
sub
jno
ret
pop
adc
mov
push
dec
push
arpl
mov
adc
cmp
jmp
add
aas
cmc
fisttpll
ja
lahf
and
pop
lret
testb
lahf
mov
aad
pushf
ljmp
insl
or
mov
es
dec
sbbb
repz
out
pop
mov
mov
sbb
cmp
push
xor
adc
add
enter
add
popa
mov
in
loopne
and
and
pop
add
cmp
ss
pushf
jns
xlat
mov
cmp
sub
inc
sbb
sahf
imul
in
leave
mov
sub
mov
inc
adc
mov
mov
aad
cs
adc
arpl
mov
scas
inc
hlt
dec
mov
test
xor
push
push
gs
test
push
scas
cmp
cmpsl
movsl
testb
imul
addr16
jno
sbb
pop
out
out
push
mov
leave
mov
aas
imul
inc
adc
push
add
add
dec
add
cwtl
aaa
jl
cmp
push
xchg
or
lea
jne
lods
fstpt
int3
into
or
cmp
loopne
jo
ret
mov
cwtl
pop
addr16
xchg
mov
rcr
sbb
dec
push
sbb
push
and
clc
xchg
mov
pop
mov
xor
sub
mov
sbb
xorl
mov
xchg
lcall
cmp
pop
xchg
push
outsb
in
bound
inc
dec
or
pop
fisubrl
ljmp
and
dec
dec
repz
nop
pop
xor
insl
std
adc
cmp
rcl
and
arpl
rcll
push
mov
stos
cwtl
and
mov
pop
jae
xchg
sub
push
out
icebp
push
xchg
jg
les
pop
fwait
dec
or
mov
jmp
add
in
or
dec
out
lock
jnp
cwtl
ds
arpl
inc
pop
cmp
sbbb
jg
sbb
insl
pop
pop
jecxz
or
and
push
fwait
in
push
xchg
add
mov
pop
dec
and
imul
xchg
push
insb
insb
and
jne
mov
imulb
aas
jmp
fiaddl
push
imul
loope
out
dec
push
mov
lods
icebp
fstps
out
jmp
adc
dec
addr16
shll
xchg
repnz
mov
cmp
and
das
inc
out
inc
addb
cs
lods
in
sbb
popa
scas
push
dec
pop
xor
inc
sub
mov
divl
jo
xor
ljmp
popf
inc
jp
cli
std
fwait
daa
cwtl
test
dec
test
movsl
inc
aaa
pop
nop
and
xchg
repz
fdivrl
decb
cmp
test
out
pushf
or
xor
fstpt
lock
dec
fldcw
adc
jl
sbb
out
shll
mov
inc
xchg
xor
mov
stos
cltd
ftst
sti
hlt
sbb
jmp
xchg
jge
mov
movsb
mov
loope
mov
dec
jg
out
shrb
cmpsb
sbb
or
mov
subb
push
add
xchg
inc
rcrl
movsl
lahf
test
pop
cmpsl
test
xchg
push
jmp
fxch
aad
aaa
push
orb
fmulp
jnp
jb
mov
scas
inc
dec
pop
push
pop
into
cld
ja
xor
xchg
outsb
xchg
sub
ficompl
xchg
hlt
jnp
adc
xor
mov
dec
push
pop
sbb
inc
dec
cmpsb
int3
fsubrs
lock
mov
jns
sbb
roll
and
dec
icebp
cmp
lds
test
adc
and
xlat
add
lcall
leave
ret
iret
push
pop
inc
mov
enter
mov
mov
mov
out
js
xchg
mov
lods
pextrw
mov
sbb
xchg
or
dec
mov
daa
mov
xchg
mov
mov
sub
xor
and
mov
mulss
inc
loope
lret
or
loopne
xchg
div
orb
inc
push
jp
dec
fwait
cmp
loop
lahf
and
mov
dec
repz
fidivrl
arpl
sub
gs
mov
inc
jle
push
sbb
dec
sub
andb
jo
jg
cli
sub
insb
cmp
mov
jnp
js
pop
xlat
out
mov
in
or
adc
sub
xchg
add
out
and
nop
dec
int3
adc
test
mov
cmp
das
pop
roll
aam
cs
ds
add
pusha
enter
iret
test
mov
xor
fs
inc
jp
movsb
mov
add
xchg
test
pop
mov
dec
pop
out
aad
rdpmc
mov
insl
jle
enter
outsl
popa
cmpsl
cmp
shlb
sub
pop
iret
stos
adc
icebp
mov
rcrb
iret
mov
push
scas
test
sbb
fisttpll
cmp
cmp
pop
xchg
shlb
mov
nop
ds
or
adc
xlat
mov
dec
scas
ret
adc
out
mov
fiaddl
jo
mov
test
imul
cmp
push
adc
mov
pop
xchg
call
sarl
jl
fildll
sbb
aad
out
xchg
sub
idivl
jecxz
push
rol
pop
mov
sbbl
nop
sub
popl
into
or
sbb
and
cmp
dec
movsl
stos
dec
inc
test
jbe,pt
stos
and
adc
sahf
cmp
pushl
inc
push
clc
push
lret
pop
fyl2x
xchg
push
fst
push
les
insb
mull
cmp
jo
fstpl
mov
push
test
sbb
mov
popa
pop
jmp
xchg
mov
jg
shrb
outsb
xorb
inc
not
add
enter
out
sbb
aam
test
push
jg
mov
dec
lds
sbb
push
adc
add
cs
mov
jecxz
enter
test
cwtl
adc
jle
movsl
or
jnp
ljmp
fxch
rol
mov
fiadds
cmp
xor
cmp
push
jge
movsb
jp
iret
push
xchg
es
lds
outsb
mov
push
xlat
leave
testb
les
fsubrs
iret
popf
inc
pop
test
rorl
es
and
fsubl
xor
cltd
add
inc
inc
mov
and
mov
and
xorl
insb
inc
test
adc
fstpl
out
data16
mov
pusha
or
idivl
pushf
inc
cmpsl
bnd
add
cmc
pop
mov
inc
int
xchg
test
push
jns
sub
cmp
dec
pushf
xchg
test
gs
lcall
mov
mov
cmp
stos
jnp
sub
repnz
jmp
fistpll
out
call
movsb
mov
in
out
jo
xlat
sbb
nop
inc
and
out
pusha
dec
pop
add
sti
push
enter
sub
leave
je
cs
or
lahf
xchg
pop
sub
aad
xchg
lea
mov
xchg
addr16
scas
push
xor
in
cmpsl
nop
xchg
or
mov
push
cmp
sub
adc
push
or
push
sub
lret
mov
sahf
cs
mov
pop
ja
ficomps
adcl
es
cmp
inc
mov
or
mov
testb
jbe
sti
or
fldenv
sbb
push
fs
sub
aad
icebp
adc
fcoms
sub
or
fbstp
repz
sti
sbb
mov
loopne
cld
testl
sub
push
movsl
test
repz
mov
or
adc
fmul
mov
mov
jne
int3
int
jb
dec
xchg
test
ret
add
mov
cltd
mov
add
daa
test
jns
adc
cmp
or
insl
cmp
mov
sar
ficoml
push
js
add
fistpl
and
mov
lods
cmpsb
mov
cmpb
mov
out
push
fadds
mov
jl
cltd
sbb
fcomps
sub
and
sti
popa
or
fimuls
mov
jo
sub
push
sbb
mov
pop
jmp
xchg
lret
add
outsb
adc
or
mov
cmp
mov
ja
sub
stos
mov
or
mov
test
imul
in
mov
xchg
ja
iret
pop
xchg
mov
mov
fldt
subb
out
cmp
popa
xor
cmp
es
insb
sbb
dec
and
xchg
add
sbb
xchg
loopne
cmp
xchg
xchg
or
arpl
cli
and
sbb
pop
sbb
push
gs
enter
scas
scas
jae
cltd
add
outsb
aas
fidivl
cs
mov
push
shll
ret
sarl
xor
enter
mov
out
xchg
jns
ljmp
xor
mov
movsl
xchg
insl
sub
daa
addb
adc
cmpb
jo
jns
push
push
aas
pop
inc
dec
dec
scas
mov
xor
jne
dec
pop
cmp
mov
jb
mov
stc
cli
jl
loopne
xchg
or
out
mov
out
and
sbb
jge
lahf
adc
cmp
inc
stos
pop
sub
dec
loopne
lock
mull
mov
into
xor
mov
xchg
push
inc
in
das
and
arpl
test
loope
out
lods
jge
sbb
and
mov
clc
inc
lcall
hlt
jl
lea
pop
in
sub
cld
mov
stos
in
int
pop
inc
int3
int
pop
mov
xchg
mov
mov
jae
sbbb
clc
in
lret
and
xchg
mov
lahf
push
pop
mov
push
sbb
cli
xchg
scas
jae
sbb
push
mov
std
fistl
pop
jle
jae
sbb
jle
imul
mov
incl
inc
dec
int3
pop
lds
inc
pop
mov
mov
push
mov
data16
xchg
jae
ss
mov
pusha
mov
leave
mov
and
arpl
mov
xchg
xor
in
add
xor
bound
or
lods
sarl
popa
loopne
push
popa
jg,pn
fisttpl
es
imul
shrl
sbb
or
inc
jmp
pop
dec
sbb
sbb
mov
cmp
dec
std
idivb
mov
mov
fs
add
push
cmp
stos
cmp
xor
je
mov
test
stos
loope
hlt
sbb
sti
ss
inc
inc
movsl
loopne
std
jae
xchg
inc
rolb
xor
ret
ljmp
mov
stc
add
pop
inc
jle
lcall
mov
add
movsl
dec
adc
xor
sti
xor
pop
xorb
inc
ss
push
jbe
cmp
xor
jno
xchg
cmc
push
and
sti
enter
stc
insb
mov
pop
push
cmp
cmc
pop
ds
and
xchg
imul
stc
imull
push
in
push
movsb
cmpsl
aaa
xchg
jmp
insl
stos
std
push
mul
ja
sub
sbb
mov
inc
jnp
or
rorb
ficoms
sbb
mov
inc
mov
cltd
fmull
mov
stos
or
movsl
pop
setae
sti
pop
push
lcall
mov
loope
outsl
stos
outsb
lcall
cmp
fidivrl
mov
sbb
mov
pop
and
adc
push
mov
mov
out
xchg
cli
or
repz
xor
notl
dec
push
out
and
andl
das
in
cld
fadd
out
or
push
nop
outsb
dec
jo
arpl
and
arpl
mov
jae
loop
shlb
cwtl
xor
loopne
push
sub
sbb
gs
stos
dec
mov
xor
add
cmp
mov
sbb
fwait
pop
iret
inc
bound
fiadds
cmp
fists
pop
rclb
mov
cwtl
pop
push
negb
adc
push
ljmp
xchg
jbe
mov
pop
sbb
imulb
in
repz
das
imull
ljmp
adc
mov
xor
sub
out
in
lcall
adc
daa
mov
mov
jbe
ss
pop
test
cli
push
mov
jno
outsl
loope
dec
adc
sti
test
jbe
in
ds
das
mov
sbb
lods
adc
stos
or
adc
daa
lods
in
jl
and
mov
mov
push
ljmp
lods
popa
adc
dec
mov
pop
xchg
push
xor
test
or
pop
sub
adc
jae
add
scas
test
cs
aas
in
negl
outsl
pop
xor
leave
push
dec
pop
pop
add
add
mov
sub
jp
orb
pop
loop
xor
popf
scas
xor
dec
push
pop
mov
fsts
hlt
mov
cmp
adc
dec
xchg
and
aas
mov
pop
pop
sub
popa
clc
shrl
call
and
mov
pop
dec
mov
stc
lret
int3
ja
jmp
push
mov
mov
mov
mulb
lods
and
xor
sbb
dec
fwait
push
enter
sahf
ds
ljmp
aad
pop
in
add
cmp
lret
mov
mov
push
mov
mov
ja
cmp
jmp
lock
xor
pop
xchg
sub
add
add
mov
cli
or
cmpsb
sbb
ret
sbb
mov
sub
inc
jb
jo
jle
dec
test
in
and
cltd
in
sub
fcompl
mov
dec
inc
push
cwtl
and
gs
push
je
sti
pop
int3
adc
or
sbb
mov
sub
cwtl
and
and
mov
movsl
nop
add
dec
mov
jl
push
fimuls
sbbl
loope
aam
dec
cld
jne
mov
dec
mov
add
mov
add
and
xbegin
movsb
fdivrl
pop
int
cmp
je
or
stos
xchg
add
stos
in
gs
mov
jle
cld
popf
ljmp
cli
inc
loope
jae
fcmovne
mov
test
fcompl
push
push
repnz
jae
push
std
xchg
lea
shl
mov
int3
jmp
xlat
mov
pop
iret
xchg
xor
movsb
xchg
cmp
inc
mov
and
lea
mov
and
sub
scas
iret
push
mov
repnz
jp
mov
cmp
pop
jmp
xor
cmpsb
push
mov
shr
test
pushfw
pop
int3
js
cmpsl
jns
in
das
sub
xchg
in
repz
in
shrl
pop
cltd
test
sub
sub
icebp
int
lret
and
cwtl
jo
sbb
pop
push
mov
mov
or
repz
imul
push
pop
scas
mov
int3
mov
stc
arpl
iret
adc
mov
jns
cmp
mov
ss
iret
pop
ficomps
test
sarb
xchg
pop
outsl
mov
lret
add
shrl
dec
lock
pop
inc
sbb
ljmp
jg
mov
scas
aad
iret
out
jb
sub
loopne
clc
xchg
adc
pop
and
mov
pop
sub
xchg
int
cli
mul
in
test
rorl
sahf
out
adc
push
jmp
and
inc
jge
push
inc
or
aam
cmpsb
cltd
cmp
mov
out
movsl
jle
pop
nop
scas
int
xor
mov
inc
dec
adc
adc
test
mov
test
push
cmp
pop
inc
pop
and
or
loopne
notl
dec
mov
call
hlt
into
sbb
popa
mov
shll
mov
inc
sarb
leave
test
push
lods
push
and
test
outsb
iret
leave
dec
mov
push
rolb
cli
frstor
negb
rcrb
hlt
push
cmc
shlb
fildll
mov
pop
aaa
es
iret
neg
jb
push
imul
subb
sbb
in
push
out
lcall
insb
in
iret
xor
dec
adc
fs
cmp
js
push
mov
jmp
jae
je
mov
loop
inc
sub
in
dec
xchg
dec
pusha
mov
jl
call
arpl
cmp
jg
data16
cmp
shlb
mov
xchg
sbb
cli
dec
cmpsl
fs
dec
jb
clc
test
nop
adc
in
adc
imull
subb
lret
les
hlt
insb
lret
loop
in
out
push
add
inc
dec
enter
cmp
loop
xor
insb
jp
clc
subl
ja
dec
ss
fcomps
push
add
xor
out
outsb
outsl
stc
pop
mov
or
lock
cmpsb
dec
mov
aaa
in
mov
sbbb
jge
pop
pop
aaa
jmp
mov
sub
jo
out
insl
jae
rcrl
fcmove
scas
jne
jns
icebp
inc
shrl
or
idivb
jne
inc
jg
outsl
mov
sti
out
or
xor
notb
jmp
add
and
fwait
js
in
push
add
shll
sub
fcomp
dec
into
dec
lods
and
subb
adc
add
ret
sub
inc
outsb
or
sub
mov
jnp
in
pop
adc
mov
movsl
outsb
fildll
fisttpl
add
ds
adc
adc
xor
xor
or
sti
adc
mov
mov
lahf
jne
clc
lea
push
insb
and
cmp
mov
mov
jo
mov
aad
test
sub
sub
shll
add
mov
decb
test
sahf
in
call
stc
jne
jmp
or
aas
inc
and
cmc
sahf
shl
cmc
push
inc
call
aas
jo
xchg
imul
or
dec
fdivrp
or
jge
pop
sub
loopne
jb
leave
xchg
loopne
xor
mov
mov
js
adc
call
imul
jecxz
arpl
je
adc
scas
push
scas
fldenv
mov
mov
jae
notb
adc
test
xchg
sub
cmpsb
push
imul
pop
or
mov
shrl
ja
outsl
adc
pop
testl
ljmp
mov
ret
sbb
xor
loope
and
and
dec
mov
adcl
adc
pop
cmpsl
and
aas
sbb
jno
pop
in
outsb
stos
xchg
cmc
jecxz
shr
jp
or
je
jbe
cmp
je
mov
mov
ljmp
fbstp
in
lds
es
ss
out
ficompl
pop
mov
jae
or
sub
and
sub
adc
lock
leave
cld
inc
adc
movsl
sbb
idivl
push
xlat
and
pop
mov
cmc
out
jnp
test
xchg
shrl
jae
mov
jnp
dec
pop
sbb
adc
pushf
shrl
sti
push
add
or
ret
cli
mov
cmpsl
inc
jge
repz
adc
mov
test
adc
popf
out
fnstsw
mov
sahf
jp
sbb
xchg
fdivrs
loopne
data16
mov
in
into
and
jle
out
loope
sub
push
rol
das
xlat
add
imul
ds
icebp
out
push
push
insl
push
stos
add
jmp
lahf
inc
cltd
cld
mov
popf
inc
in
aad
pop
xchg
dec
emms
repnz
aas
cld
mov
inc
xchg
or
iret
sbb
mov
aad
repnz
push
in
and
mov
cwtl
loop
insl
mov
fs
mov
daa
add
idivb
rorb
dec
xor
les
dec
dec
or
rcl
imul
mov
mov
call
xor
or
loope
adc
cli
mov
lock
shr
xchg
xchg
test
mov
sub
mov
dec
jns
packuswb
outsl
mov
xchg
icebp
rclb
mov
mov
mov
sbb
mov
ror
push
cmpsl
bound
in
or
call
inc
mov
iret
or
pushf
xchg
popa
cmc
mov
push
add
loop
icebp
repz
popf
ljmp
mov
stc
xor
cmp
std
jns
call
fbld
jg
jp
cmpsb
push
test
and
test
scas
mov
stos
inc
lret
leave
push
lcall
and
cmc
and
dec
pop
ror
pop
jae
mov
out
push
outsb
arpl
ss
mov
pop
mov
lods
in
addr16
cmpsl
out
mov
mov
pop
dec
add
xchg
mov
popa
sbb
int
out
outsb
stos
push
icebp
pop
lods
xor
rclb
jle
cmpsl
repnz
mov
adc
cld
lods
gs
push
in
mov
cli
jl
test
xor
mov
fcmovnbe
popf
or
inc
sahf
push
rorb
pusha
gs
ret
test
add
daa
mov
or
pop
sti
jl
scas
mov
mov
movsb
fsts
shrl
scas
mov
into
or
popl
xlat
cmp
xchg
or
push
add
cmp
and
lret
daa
fwait
loopne
sbb
pop
mov
dec
xchg
int3
jmp
fs
jmp
sub
sbb
rorl
push
aas
imul
sbb
mov
push
std
lock
in
xor
mov
xchg
pop
add
xor
xchg
inc
orb
mov
or
fst
xchg
outsb
or
add
and
mov
pop
stos
cwtl
int
insl
cli
test
movsb
out
mov
or
and
or
pop
insl
ds
mov
jp
xor
jecxz
push
add
dec
mov
cld
and
fs
movsl
pop
fldt
jb
adc
rcl
test
inc
sbb
rcr
lcall
enter
or
rcll
into
inc
shll
hlt
nop
or
mov
push
ss
in
mov
push
lea
dec
orl
nop
mov
inc
ret
jb
mov
jnp
cmc
test
cmp
jp
rolb
mov
cmpb
push
cvtdq2ps
add
adc
jns
dec
cltd
add
pop
pop
bound
inc
cmc
xchg
rcl
mov
dec
cmpsl
imul
clc
pop
out
fwait
and
lret
enter
mov
iret
inc
es
insb
pop
lods
push
inc
std
jb
mov
mov
push
rclb
loop
xor
insb
xor
test
mov
fs
out
fwait
imul
jp
sub
dec
push
imul
cltd
stos
or
lea
insl
pop
inc
imul
ljmp
insb
jno
ret
shr
inc
pop
add
sub
or
and
or
jae
push
pop
xchg
test
inc
decl
jle
mov
xchg
shrl
cmp
push
and
inc
leave
in
in
hlt
push
mov
fucom
aaa
fldt
sub
cmp
cmp
jo
call
int
sbb
divl
enter
cs
adc
jp
sarb
push
adc
dec
adc
pop
or
lds
loopne
push
jo
repz
cmp
pop
rcrb
mov
hlt
inc
jmp
call
stos
test
push
sbb
inc
movsb
sarb
fs
xchg
push
push
repnz
int
or
push
sarl
cmpsl
push
adc
lds
stc
loope
cmp
or
shll
mov
into
mov
jge
push
ds
addb
icebp
adc
pop
call
xor
insb
pop
mov
add
sub
cwtl
xchg
movsb
fs
popa
mov
movsb
in
adc
out
pop
stos
push
js
jno
xchg
jp
pop
xor
popf
dec
cmc
leave
push
fs
movsl
dec
addr16
incb
add
aas
xor
test
inc
inc
or
jae
mov
lret
jno
and
cltd
inc
xchg
xlat
xchg
dec
mov
adc
xchg
jbe
test
mov
inc
jmp
and
mov
pop
cld
outsl
mov
ror
adc
mov
aas
xchg
lret
xchg
mov
add
int
dec
adc
sub
pushf
mov
hlt
dec
mov
dec
call
stc
sub
dec
ficomps
xor
in
roll
jl
dec
adc
dec
test
movsl
mov
out
mov
cs
dec
adc
pcmpgtb
pusha
xchg
shrl
xchg
mov
insb
xchg
adcl
jns
cmp
or
lods
cmp
ds
psrad
sbb
aam
inc
mov
cltd
adc
dec
mov
xor
outsl
shrl
dec
pop
fldenv
call
js
xchg
sbb
popa
cli
adc
mov
cmp
testb
aas
add
mov
movsl
cmp
cmc
jle
push
inc
add
into
push
adc
xchg
enter
xchg
cltd
or
pop
cmp
adc
inc
and
addl
inc
leave
ret
sbb
cmp
aaa
hlt
inc
xchg
in
mov
xor
add
or
imul
in
dec
ja
js
ja
push
pop
add
pop
ret
repz
in
inc
mov
nop
rorl
cmp
test
insl
mov
mov
roll
movsb
popl
call
stos
dec
stos
mov
adc
les
jge
jns
loop
pop
push
out
sbb
mov
and
push
test
push
mov
mov
out
dec
and
mov
negb
sbb
push
enter
arpl
sbb
jecxz
mov
loop
sub
mov
push
inc
fdivl
mov
xchg
sarl
daa
push
inc
das
xor
stos
int3
jmp
lahf
jecxz
aaa
out
jno
movsl
clc
and
and
aas
imul
in
jne
jbe
jle
pushf
sub
cld
sub
cmp
mov
or
jg
popa
data16
push
push
inc
mov
int
push
add
and
or
sub
js
sub
sahf
fimuls
xchg
xlat
pop
cmc
mov
addr16
scas
mov
pop
pop
cmp
cwtl
pop
lcall
push
sbb
cld
scas
pop
leave
sbb
lea
xchg
inc
inc
pop
mov
sbb
pop
dec
xchg
cld
pop
or
pop
jnp
lds
xlat
rorl
dec
jecxz
pop
popf
sub
rorb
pop
fidivrs
nop
aaa
inc
pop
lret
mov
mov
ret
push
cmp
mov
add
adc
pop
cmp
sbb
mov
adc
das
cwtl
jge
ja
xchg
dec
dec
imul
adc
sub
pop
or
inc
imul
cld
stos
pop
xchg
mov
mov
or
add
or
pop
and
iret
insl
dec
aad
sbb
jmp
popf
mov
rorb
scas
out
cmpsb
sub
inc
sub
cmp
iret
insl
mov
mov
addr16
aaa
movsb
xchg
dec
fsubl
fcoml
mov
sbb
xor
cmp
iret
xor
stos
xchg
fbstp
xor
ja
jo
jmp
push
out
or
arpl
ret
xchg
loope
repz
and
ljmp
mov
pop
jb
jge
iret
into
fnstcw
mov
mov
fmull
push
cmp
mov
inc
push
adc
lea
fisttpll
ret
ffree
jnp
dec
inc
ret
not
int3
pop
lea
xchg
mov
push
xrelease
pushf
jne
out
aad
in
pop
in
imul
mov
mov
loopne
pop
xchg
mov
loopne
lret
movsb
imul
mov
out
sbb
xchg
pop
call
jns
xchg
bound
popa
lcall
sub
jbe
repz
imul
inc
subl
mov
jne
aad
fs
in
or
dec
xor
pop
cwtl
clc
insl
test
sub
push
pusha
lea
jmp
stc
push
fiadds
ficomps
data16
and
jno
add
ds
enter
out
les
pop
adc
xor
into
repz
mov
adc
cmp
sahf
and
lcall
mov
inc
cli
repnz
mov
cld
jbe
fistps
loopne
rcrl
mov
pop
fnstsw
xor
mov
push
pop
outsl
sbb
es
sub
in
test
push
and
popf
stos
clc
or
daa
mov
mov
cmp
mov
jo
pushl
xchg
mov
pop
sbbl
mov
adc
xchg
in
enter
pop
rolb
fimuls
xor
mov
xchg
sarb
sbb
inc
sub
sbb
jnp
xor
aad
jb
or
add
hlt
sarl
pop
imul
dec
pushf
add
mov
add
ja
mov
loopne
cmp
imul
cmp
dec
adc
pop
orl
mov
fimuls
sub
repnz
repz
out
in
jno
dec
int
outsb
daa
insl
bound
rolb
add
adc
pop
clc
movsb
jns
xor
jmp
dec
mov
les
inc
roll
scas
mov
mov
lods
loop
sbb
or
dec
rorb
xchg
jge
sar
push
inc
mov
xchg
fwait
call
mov
jnp
icebp
sbb
mov
mov
ret
outsb
mov
jp
add
enter
in
ds
ljmp
mov
jg
in
lods
sarb
or
jecxz
ds
sbb
push
mov
xchg
outsl
inc
in
mov
mov
mov
lret
js
adc
jae
call
je
mov
cmp
adc
lds
pop
jle
adc
icebp
mov
and
imul
mov
lcall
dec
loop
ljmp
lea
push
dec
cmp
out
dec
jmp
pushf
jmp
inc
cmpsl
dec
or
imul
dec
jno
lcall
or
sbb
setbe
fisttpll
pop
movsb
sub
cmp
imul
jns
xchg
or
insb
add
jmp
sbb
push
mov
mov
inc
fdivrs
nop
addl
inc
cmp
iret
jo
mov
xor
mov
in
xchg
or
add
daa
jmp
xchg
subb
and
push
aas
stos
dec
and
mov
push
jbe
pop
xor
jecxz
sysret
sahf
rcll
fildll
repz
or
mov
cmp
sub
cmpsl
push
mov
movsl
clc
mov
pop
pop
mov
xorb
or
int3
outsb
lea
ret
jge
sub
xchg
in
xor
iret
lea
xor
cmpsb
xchg
aas
int3
in
and
daa
add
imul
pop
testl
cmpsb
cmp
data16
xchg
add
jmp
shlb
add
mov
add
or
mov
fbstp
sub
cmp
push
pop
or
cltd
aas
jno
add
fs
stos
sub
test
call
jl
dec
inc
pop
repz
lea
push
add
mov
aaa
das
jle
inc
orl
mov
js
or
shl
fisubl
inc
sbb
mov
lahf
cmp
mov
sub
and
add
push
lds
adc
stos
sahf
jbe
push
and
insw
mov
push
fnstcw
add
imul
jae
inc
fdivr
jo
leave
sbb
movsb
mov
int3
mov
or
add
inc
aas
xchg
xor
mov
push
mov
stc
jmp
aad
xor
sub
cld
hlt
lahf
sbb
push
rolb
lods
fisttpll
outsb
push
adc
repnz
aad
fwait
mov
jmp
lahf
xchg
and
fstl
test
clc
jmp
pop
pop
pop
sbb
mov
sbb
xchg
xchg
fwait
mov
cld
or
popa
push
push
aam
scas
sbb
inc
and
push
mov
test
es
adc
shl
inc
mov
icebp
cwtl
add
inc
addr16
inc
cmp
fwait
pushf
out
fsubp
icebp
loope
and
jo
and
leave
rorb
lahf
mov
inc
and
jbe
or
cli
add
dec
insl
xor
xchg
mov
out
ljmp
pop
test
pop
into
popa
push
push
pop
lods
lock
jge
jne
addr16
mov
inc
nop
es
push
push
test
jo
mov
outsb
adc
jns
dec
imul
out
fsts
lds
mov
std
dec
mov
rol
dec
or
repnz
inc
scas
call
sti
divl
pop
jp
fnstenv
cwtl
cld
add
repnz
and
ret
dec
inc
pop
fcom
xlat
cmpsl
fwait
sub
xorl
dec
pop
dec
ja
mov
adc
jle
sub
pop
jnp
test
jns
test
js
lcall
or
js
hlt
sbb
cld
add
aad
or
aaa
xchg
mov
movsb
jp
mov
mov
jo
mov
cmp
mov
adc
ret
add
sub
sub
shrl
pop
jge
jno
icebp
xchg
es
iret
outsb
xor
add
int3
cmp
add
mov
rolb
mov
inc
scas
lahf
pop
scas
test
stos
das
pop
lret
and
outsb
xor
mov
lea
and
into
mov
rol
popf
dec
jbe
mov
mov
jno
mov
daa
and
pop
shl
sti
cs
push
and
sub
dec
sub
pop
sbb
rolb
jnp
fsubrs
sti
mov
popf
mov
sbb
icebp
push
enter
jle
repnz
sbb
ret
xchg
es
cmp
lret
fistps
push
int
aam
mov
das
in
shr
mov
jo
in
int3
pop
fisubrl
aas
mov
adc
aad
cmp
jmp
sub
inc
add
fwait
int3
bound
test
insl
out
inc
int3
stos
fpatan
or
pusha
dec
subb
mov
push
jg
sbb
addr16
imulb
jmp
cmc
mov
test
pop
bound
cmpsb
adc
push
ljmp
push
mov
mov
mov
daa
imul
nop
lahf
inc
imul
sub
fs
fwait
push
inc
sbbl
sbb
push
repnz
iret
call
sbb
fdivl
cltd
cli
lret
lret
xor
or
and
mov
cmp
or
fdivrs
inc
sub
loop
pop
mov
sahf
xor
jo
mov
mov
push
pop
adc
incb
mov
leave
dec
ss
lret
sub
adc
lods
jno
pop
mov
mov
jae
add
mov
xchg
push
repz
lods
leave
cwtl
int3
dec
arpl
aas
iret
sbb
sbb
test
adc
add
dec
mov
mov
push
fcoms
stos
decb
dec
dec
adc
repz
mov
mov
decl
pop
sahf
mov
mov
adc
cltd
adcb
adc
xchg
lahf
fcmovu
aad
aam
pop
add
push
fiaddl
test
in
pop
xchg
mov
imulb
xor
mov
int
jns
or
adc
mov
les
push
pop
xor
sbb
inc
hlt
xchg
add
loope
lcall
xchg
fiadds
inc
mov
sub
fwait
cmp
outsl
xchg
insb
test
lods
jns
xor
and
xor
enter
mov
pop
mov
or
add
lods
out
push
xlat
xor
push
xchg
jge
popa
adc
stc
ret
sti
push
sub
popf
js
pop
addb
das
aam
fimull
xchg
leave
cmpsb
cltd
add
ret
int3
fwait
adc
hlt
sub
sbb
rcll
int3
or
jns
add
jl
or
movsl
fsubrs
push
dec
mov
imul
sti
pusha
jb
sub
fwait
in
inc
add
imul
notb
cmp
fisubs
pop
je
mov
xor
test
push
xor
sub
add
negl
dec
imul
or
imul
fwait
jg
call
push
loopne
sar
push
xor
imul
xchg
daa
ret
sub
insb
fsts
xchg
sub
jge
idivl
xorb
mov
add
cs
xchg
lods
sbb
and
aaa
fistpl
inc
imul
fcmovnbe
fnstsw
loope
mov
xor
les
xchg
outsl
ret
xchg
lock
sbb
mov
fdivs
adc
inc
fldenv
sub
lcall
ja
shlb
call
adc
mov
in
insb
pusha
mov
dec
lahf
push
movb
jno
fistl
in
cmc
cs
mov
mov
push
iret
test
push
dec
sbb
stos
cmp
adc
aaa
add
sbb
mov
cmp
fwait
stos
mov
add
xor
fwait
mov
daa
and
or
lret
hlt
jecxz
call
and
icebp
imul
xchg
xlat
scas
push
xor
sub
mov
or
movsl
cmp
aaa
jne
xor
cld
fmulp
test
pusha
push
cmpsl
push
lock
lret
das
add
clc
push
push
push
sti
sahf
fdivl
pop
ss
or
jle
into
sbb
loopne
jmp
mov
stc
mov
mov
imul
push
mov
jne
and
mov
or
pop
lahf
mov
mov
mov
ds
adc
outsb
xchg
inc
xor
or
xor
adc
or
jns
mov
out
mov
in
adc
daa
fisubrl
cmp
adc
mov
xchg
ficomps
mov
cmc
dec
jae
into
es
iret
call
fsubl
mov
sbb
test
xor
cmp
enter
inc
jns
push
sbb
and
rclb
dec
xchg
pusha
add
sbb
loope
dec
inc
sub
cld
aam
push
in
in
jnp
or
dec
xor
jg
repnz
lds
mov
dec
test
adc
lea
loop
add
xchg
inc
movsb
adc
xor
mov
adc
mov
dec
lock
dec
cmp
inc
rcll
add
pop
into
add
xchg
dec
lock
jle
into
aam
jae
fs
clc
mov
jecxz
or
bound
adc
add
lahf
in
scas
stos
pop
dec
or
daa
mov
inc
out
add
lea
push
stc
inc
loop
xchg
gs
pop
aam
or
jle
dec
iret
fildll
xchg
mov
dec
cs
mov
adc
call
or
fs
in
adcl
fs
xor
out
xor
ja
repnz
out
rcll
out
dec
fld
xlat
adcb
jb
jge
inc
and
lret
mov
iret
xchg
and
out
sub
mov
popf
icebp
out
std
loop
aaa
rolb
fstps
int
xor
add
out
scas
clc
ficompl
test
sbb
or
dec
inc
inc
into
aam
into
mov
into
aaa
sbb
mov
xor
jl
sub
or
loopne
out
pop
cs
in
out
mov
mov
fs
lret
cmp
dec
xchg
rolb
dec
addb
popa
icebp
jge
jecxz
adc
das
leave
cmp
lods
or
orl
dec
inc
mov
fldenv
into
aaa
and
lea
pop
fisttpl
scas
popa
adc
dec
cmpsl
pop
daa
cmp
out
jmp
cmpb
mov
mov
adc
fcmovne
outsb
imul
das
call
adc
shrb
push
mov
sbb
repnz
aam
fs
outsl
jb
scas
mov
inc
push
arpl
mov
enter
xor
mov
pop
fstpl
jae
out
leave
pusha
ja
or
mov
aaa
sub
adc
dec
jle
js
dec
insl
adc
sbb
pop
mov
mov
jmp
and
sbb
jge
shlb
jl
mov
data16
cmpsl
push
jbe
jecxz
in
lds
push
shrb
fisubs
mov
jae
int3
mov
loop
rol
jae
inc
movsb
cld
mov
xor
cwtl
mov
cmc
or
aam
push
aam
inc
mov
inc
clc
and
popf
adc
jb
mov
movsb
mov
mov
clc
stc
faddl
push
in
add
xchg
nop
pop
int3
jbe
push
rcll
fwait
dec
cwtl
push
cmpsl
inc
mov
aaa
jg
jne
jge
xchg
stos
aas
mov
test
roll
lahf
or
aam
add
es
shrb
repz
pop
jb
scas
jl
je
addl
rolb
sarb
or
jge
or
xor
or
out
dec
jmp
ds
adc
and
movsl
rorl
jnp
xchg
xchg
push
sub
push
hlt
add
mov
cmp
out
imul
arpl
and
push
mov
add
dec
cmp
pop
xchg
sbb
cwtl
cmp
inc
xchg
xchg
cmp
loop
or
test
adc
pop
cmc
pop
cltd
into
xlat
add
aas
push
push
push
out
in
bound
cmp
mov
mov
add
adc
mov
out
cmp
test
inc
mov
and
scas
add
lret
imul
jnp
xchg
mov
xlat
cld
fldcw
jae
pushf
into
loopne
sbb
mov
loopne
add
jl
orb
out
lahf
decb
insl
push
mov
jl
mov
mov
js
fisubrl
xorl
push
test
shlb
pop
dec
pop
imul
jmp
jmp
add
adc
lea
dec
out
cmp
cmpsl
pop
add
cmpsb
xor
sbb
cmp
bound
add
add
in
inc
jmp
mov
add
pop
jo
dec
inc
inc
test
lods
pop
push
stos
adc
xchg
inc
or
out
ljmp
notl
loopne
out
leave
adc
inc
dec
in
int
inc
push
into
fcompl
repz
test
lods
pop
jp
movsb
mov
lods
add
dec
incb
push
pop
lret
mov
fcmovnb
mov
lahf
sbb
cmp
and
addr16
shl
aaa
jbe
addb
mov
cs
mov
fwait
xchg
add
jbe
jb
out
sbb
gs
popf
hlt
gs
rcrl
push
scas
loop
lret
cmp
mov
adc
addr16
mov
mov
jmp
adc
xor
orb
xor
out
add
inc
aam
push
push
xor
nop
push
sbb
xchg
js
adc
xchg
sub
js
dec
and
fmuls
fldenv
cmp
inc
inc
lods
scas
jge
loope
push
xlat
cld
enter
loopne
add
sti
and
adc
mov
out
rorb
stos
mov
shrb
inc
ds
test
mov
stos
mov
orl
ret
cmp
out
pop
cmp
cmpsl
repnz
addr16
cmp
js
sti
pop
cmpb
sub
push
daa
mov
jmp
push
loop
cmpsl
jg
mov
push
daa
ficomps
in
cmp
pop
iret
stc
nop
add
xchg
call
cltd
aad
xor
jnp
xchg
lods
gs
test
insb
loopne
dec
clc
xchg
test
ret
cld
outsb
mov
dec
or
dec
testb
pop
and
mov
in
ljmp
mov
mov
mov
les
xor
push
arpl
pop
pop
sub
hlt
hlt
inc
hlt
sahf
push
int
dec
pop
jp
add
push
xor
and
addr16
add
sti
lock
adc
fwait
mov
lahf
xchg
in
mov
inc
ret
and
mov
pop
add
and
or
and
xor
mov
inc
ret
cmp
mov
outsb
or
pop
push
imul
inc
cmp
mov
insl
nop
sahf
adc
adc
dec
je
sti
dec
jns
das
hlt
aad
punpcklbw
pop
cmpsb
or
stc
cmc
mov
addl
std
inc
push
xor
xchg
fucom
cmovl
push
xor
mov
xchg
cmp
adc
fwait
xchg
daa
mov
in
mov
testb
in
dec
lcall
lods
add
push
xor
ret
adc
in
mov
push
inc
fiaddl
mov
or
push
sbb
inc
add
add
cmp
fs
inc
xor
adc
repnz
xlat
jle
push
and
push
add
jp
stos
push
add
or
inc
pop
push
in
adc
jl
stos
mov
sbb
repz
icebp
push
pusha
outsl
or
push
ds
aad
sub
lods
xchg
cmp
fdivrl
xchg
xor
jno
mov
pop
arpl
dec
lock
xor
sub
adc
or
arpl
inc
xchg
shlb
in
inc
orl
inc
dec
wrmsr
subb
test
pop
stos
test
hlt
mov
scas
outsb
lds
rorl
jne
daa
or
insb
subb
imul
lods
lock
shrb
mov
add
jl
and
daa
fmuls
inc
and
gs
fcom
xchg
adc
cmp
cmc
inc
pop
dec
mov
rcll
cs
push
jnp
fcomps
gs
add
rol
or
ss
jmp
cltd
fistl
or
sub
data16
ret
dec
imul
ljmp
sar
dec
iret
mov
pop
cmp
dec
sub
mov
push
inc
stos
jl
push
es
mov
mov
jo
sar
xchg
fs
xchg
loopne
lea
icebp
lret
mov
out
jge
mov
mov
mov
outsl
stos
dec
insl
in
je
push
adc
subb
cmpb
in
inc
push
jp
jns
out
cld
inc
sbb
mov
jmp
lds
dec
push
fadds
adcb
repz
std
rcr
sbb
subb
mov
das
adc
mov
dec
adc
push
jl
pop
aaa
pop
push
aas
leave
adc
loopne
enter
mov
jecxz
fcomp
xchg
cmp
cmp
lods
jl
jmp
jb
or
loop
xor
std
sub
mov
addr16
sbb
pop
call
sbb
lods
xchg
in
jne
sbbb
scas
add
mov
pusha
fldl
pop
mov
call
lds
sbb
xchg
pop
or
je
jl
call
mov
pop
clc
mov
aaa
dec
les
bound
xor
jne
pop
pop
add
or
sub
mov
shl
pusha
out
shll
into
int
es
in
pop
adc
loope
js
cs
enter
fdivrp
adc
xchg
mov
pop
js
rcl
arpl
andl
addr16
bound
pop
mov
xchg
inc
jge
dec
cli
andl
shrb
jnp
dec
test
cmp
push
stos
mov
xchg
rcrb
push
in
sub
outsl
jecxz
aam
jecxz
and
mov
leave
int3
rcrl
in
in
sahf
add
xchg
ficoms
xor
ja
lock
sub
loopne
orb
push
mov
push
mov
inc
pop
or
jmp
sahf
adc
xchg
test
arpl
pop
fsubs
shlb
or
and
sub
push
pop
mov
jae
gs
js
movb
sbb
mov
pop
jo
test
or
adc
or
sbb
mov
add
stc
xor
jbe
call
in
mov
pop
xchg
mov
test
jp
jg
xorl
jns
stos
pop
push
push
lock
dec
cmp
out
sbb
inc
mov
lods
imul
fcmovb
mov
dec
fs
mov
xchg
je
es
dec
inc
inc
xor
push
pop
negb
js
mov
ret
mov
int
mov
pop
pop
test
mov
pop
sub
adc
test
or
adc
and
scas
andl
xor
mov
pusha
fcoms
lcall
mov
rep
xchg
mov
xor
jne
mov
mov
and
nop
pop
mov
lods
ljmp
sub
sarl
push
incl
ds
cmp
enter
iret
scas
loopne
mov
ret
outsl
leave
inc
enter
lahf
push
dec
push
aad
push
popa
pop
mov
push
imul
xor
hlt
mov
inc
test
xor
divl
aad
pop
cmpb
outsb
add
movsl
cmp
rcrb
push
loopne
cs
nop
hlt
icebp
adc
pop
cwtl
xchg
movsb
and
jecxz
aas
nop
clc
cmc
popa
shrl
mov
jbe
mov
mov
jo
es
fs
test
ret
iret
jge
sub
mov
in
sbb
data16
sbb
xor
rcrb
adc
icebp
pop
jge
mov
jne
mov
or
lret
add
sbb
cmpsb
mov
aam
add
nop
iret
mov
rcr
sbb
ss
das
lahf
lea
sub
or
add
mov
push
enter
decb
sub
mov
pop
or
add
xor
and
or
sub
sbb
in
mov
jmp
sub
sbb
ss
adc
in
nop
cmc
inc
cmp
aas
test
push
int3
addb
test
enter
dec
dec
push
scas
adc
repnz
mov
or
mul
mov
add
addr16
addr16
and
aam
mov
in
cmp
mov
out
dec
fbld
leave
dec
or
mov
mov
push
jb
inc
shrb
add
add
mov
inc
sub
bound
sbb
add
ljmp
inc
xor
std
jp
or
mull
lods
adc
mov
push
push
inc
xor
stc
or
mov
es
imul
test
mov
out
xchg
mov
pop
cwtl
loopne
xlat
test
sbb
or
sbb
lods
imul
pushf
fisttps
into
xacquire
aad
dec
jmp
mov
sub
mov
fdivrl
out
outsb
adc
cs
into
xchg
mov
addr16
xor
popa
repz
dec
nop
xchg
mov
pop
push
push
ja
cmpsl
sbb
movsl
xchg
sbb
and
xchg
das
sbb
pop
xchg
cld
mov
jp
sbb
or
cmp
cltd
mov
add
fnstenv
int
xorb
shl
cmc
jbe
cld
nop
loop
xchg
nop
cmp
and
movsb
lahf
scas
push
rolb
xor
sahf
loop
lret
jb
pop
test
sti
jg
inc
or
or
stos
mov
mov
inc
xchg
mov
fs
dec
pop
sbb
in
pop
adcl
jnp
xchg
outsb
in
sahf
xchg
cld
xor
out
mov
push
push
sbb
mov
pushf
add
and
pusha
je
xlat
aaa
xor
sub
dec
je
shlb
adc
xchg
mov
and
andb
shr
repz
lahf
in
sbb
or
leave
xchg
je
pushf
inc
test
add
lret
fwait
mov
in
push
pop
js
aad
lods
movsbl
mov
addr16
rorb
popf
lea
outsl
xchg
adc
lahf
cmp
push
mov
jmp
cmc
cmp
popf
shll
sbb
mov
lahf
xchg
ret
push
pop
add
and
lea
cltd
enter
lds
insb
iret
inc
popf
push
fmuls
scas
inc
sarb
adc
lods
jne
sbb
stos
clc
sub
repnz
fadds
imul
or
int
xchg
push
sbb
sub
ficoml
test
push
stos
push
add
xor
fcmove
lea
and
adc
cmp
and
sub
stos
or
mov
shll
test
push
pushf
fdiv
jb
cwtl
sub
neg
insl
pop
aas
jnp
jbe
xchg
jb
jo
mov
xorl
dec
sbb
jb
mov
cmpsb
shlb
cmc
je
cli
cltd
outsb
incb
and
lds
inc
ja
push
xor
arpl
jp
jbe
xchg
and
dec
jbe
sahf
xchg
add
mov
xchg
push
mov
mov
fistpl
rcl
in
inc
cltd
fwait
mov
cltd
test
ret
sbb
push
aaa
mov
in
push
int
add
aaa
fdivrs
in
mov
mov
data16
int3
pop
test
xorb
push
mov
dec
sarl
pop
adc
insl
scas
aaa
cmp
cmpsl
ret
push
shll
or
shl
jle
sub
fwait
idivl
movsb
dec
cmp
in
dec
mov
xor
dec
divb
js
incl
ja
lods
push
mov
push
jbe
push
test
in
pop
xchg
shr
and
movsl
lcall
nop
inc
cli
jbe
stos
cmp
add
mov
jo
popa
js
add
jecxz
repz
inc
std
push
imul
stc
nop
cwtl
popa
loope
in
fst
lcall
xlat
jecxz
fiaddl
lock
fdivs
xchg
or
push
mov
data16
push
aam
cs
imull
xor
xor
loopne
lret
lret
in
sahf
mov
push
inc
ljmp
popf
jae
pop
mov
adc
lahf
imulb
jl
cmp
outsb
push
ja
imul
dec
jb
add
int3
cld
pop
jno
rclb
sti
pop
pop
out
call
mov
xor
xlat
ja
mov
insl
imul
inc
push
int
cmpsl
cmp
aam
sub
int3
out
test
xor
xor
sub
xlat
pop
push
sar
outsb
mov
hlt
inc
lahf
dec
jns
shl
dec
xchg
pop
mov
xor
ficomps
sub
decb
mov
sbb
xchg
rclb
lods
inc
add
insl
sbb
vphadddq
lods
jg
data16
loope
popf
popf
sbb
sahf
jbe
scas
add
popf
and
lds
outsl
mov
xor
cmp
int
mov
clc
nop
test
cmp
daa
mov
add
or
aad
cmp
xchg
inc
aas
jns
data16
popf
outsb
decl
xchg
cltd
inc
repz
cmp
add
rcr
cmp
dec
lea
pop
cmp
push
sbb
xchg
jle
dec
js
adc
sbb
pop
jno
addr16
rolb
outsl
lods
xor
clc
and
add
jecxz
test
jbe
inc
adc
leave
jecxz
push
loop
xchg
inc
add
repz
or
rcrb
stos
in
test
xchg
pop
sub
dec
inc
pop
mov
dec
cmp
or
xchg
testl
add
sarb
aas
mov
pop
jl
add
xor
test
arpl
dec
sbb
xor
inc
cltd
popa
add
inc
cmp
or
daa
rep
lcall
mov
pushf
mov
mov
xchg
rcll
mov
xchg
mov
fiadds
xor
pop
lea
jb
inc
test
adc
inc
cld
sub
negb
jg
cmp
outsl
sbb
lods
out
testl
jg
inc
jns
pop
xlat
gs
shlb
xor
jl
mov
pop
imul
mov
fidivs
ljmp
imul
push
cmpsb
or
sbb
js
push
xchg
mov
and
fimull
in
dec
aas
ds
inc
xchg
clc
jl
leave
add
sbb
js
push
js
imul
dec
dec
int3
cli
sbb
addr16
and
scas
lods
mov
xor
lret
bound
jecxz
and
stos
jns
leave
or
insl
pop
imul
fisttps
xlat
cmp
sbb
or
pop
add
dec
push
bound
cmp
sti
sbbb
and
imul
jmp
pushf
inc
push
mov
inc
popf
lds
xor
lock
mov
fwait
pop
pop
xor
push
xor
cmp
hlt
add
js
sarb
outsb
ret
lahf
mov
or
in
and
push
push
shrb
xchg
inc
incb
shl
out
in
push
sub
sbb
and
in
mov
add
mov
add
movsl
pop
leave
repnz
mov
and
int
mov
in
out
outsb
in
pop
and
push
push
xchg
pop
push
jle
xor
mov
cmpsb
jmp
xor
push
and
pop
adc
adc
push
nop
mov
roll
shr
insl
ljmp
pop
cmp
das
xor
dec
sub
jge
repz
and
lret
xchg
aam
mov
gs
js
cwtl
out
fs
mov
orb
cmpsb
mov
push
sbb
sub
push
ret
pushf
test
or
roll
cli
jns
arpl
les
popa
div
add
shrb
or
mov
sbb
adc
sub
stos
push
jecxz
sub
adc
xchg
xchg
insl
dec
add
mov
dec
ljmp
aaa
xchg
mov
stos
out
fcomip
mov
pop
fisubs
cmp
scas
push
sti
subl
or
mov
sbb
sahf
sub
xchg
fldcw
jg
jmp
or
out
xor
adc
dec
std
nop
daa
jg
xchg
stos
outsb
add
add
ljmp
int3
jbe
adc
jmp
jb
jns
sbb
cli
call
loope
out
repnz
xor
cmp
mov
popa
jo
sar
fwait
push
pop
inc
inc
xor
cltd
gs
jae
adc
push
mov
out
fwait
les
jecxz
mov
in
jbe
sbbl
sub
or
push
jb
mov
xchg
xor
pop
sub
mov
inc
out
dec
fdivs
sbb
aaa
popf
aas
bound
fldt
jge
sub
sbb
lods
cmp
sbb
adc
insb
lahf
push
mov
movl
cmp
cmc
imul
idiv
push
push
imul
adc
cli
xorb
fnstsw
dec
cmp
or
nop
inc
push
scas
in
sti
js
jne
xor
jb
sbb
dec
in
adc
cld
cmp
pushf
pop
ljmp
adc
sar
cmpsb
loop
pop
xchg
pop
dec
popa
and
inc
inc
data16
js
int3
push
mov
add
fwait
inc
cmc
out
push
jns
inc
dec
mov
pop
sbb
daa
flds
mov
mov
sahf
or
jge
cmp
idivb
sub
mov
insb
hlt
mov
jecxz
ljmp
repnz
xlat
into
out
mov
pop
sub
dec
adc
mov
pop
xor
roll
out
mov
push
or
fsubl
dec
lods
adc
xchg
sahf
jnp
iret
scas
daa
outsb
mov
dec
insb
jle
imul
lods
mov
jmp
adc
aam
xor
mov
ja
or
and
shll
adc
or
xor
pop
sahf
movl
outsb
stos
inc
test
xchg
ds
sahf
gs
sbb
xchg
ds
or
hlt
out
sbb
sbb
cmp
ficoml
mov
out
cmc
mov
jl
xor
loopne
std
or
sti
aaa
xor
sub
roll
jns
stos
xchg
dec
jecxz
push
js
repz
add
pop
pop
or
add
jp
scas
ljmp
dec
dec
mov
xor
cmp
mov
sbb
xchg
xchg
xchg
mov
inc
cmp
je
inc
xchg
aad
popa
push
dec
inc
arpl
jne
xor
loope
mov
push
fidivs
in
ljmp
jo
enter
cmc
pop
in
roll
das
push
subl
stos
insb
cs
add
pop
xchg
js
push
popa
sbb
xor
mov
fildl
ja
mov
int3
push
xchg
push
sbb
mov
ficoml
lock
xchg
divl
pop
jnp
into
adc
into
mov
aam
mov
cmp
fsubl
pushf
fs
into
dec
jne
test
sub
das
add
fimull
addb
xor
sub
loop
push
jle
mov
sbb
mov
sbb
lds
xchg
enter
push
dec
aaa
mov
xor
sub
nop
push
and
mov
jmp
mov
nop
divl
push
push
js
mov
lods
pop
jl
adc
clc
xchg
jecxz
mov
cmp
xchg
imul
mov
cmp
jmp
arpl
add
cmc
pop
xchg
push
mov
dec
movsl
inc
sub
movb
mov
shll
cmp
lock
in
sbb
push
pop
xchg
inc
enter
stc
adc
jle
adc
and
setbe
push
sub
mov
xchg
loopne
jg
test
out
cmp
aad
mov
pusha
subb
dec
dec
mov
jl
mov
cltd
sti
xchg
out
add
stos
lret
mov
xlat
jb
fldl
stc
dec
mov
adc
fldenv
nop
sbb
movsb
rorl
fcoml
inc
lcall
rcr
cmp
mov
test
jl
adc
pop
xor
cmp
push
aas
mov
sti
dec
xchg
jnp
jge
inc
pop
in
scas
jecxz
cs
xchg
mov
repnz
cmp
pusha
cmp
out
jle
sbb
inc
mov
xor
and
dec
test
add
in
aad
repnz
jne
xchg
xchg
test
mov
test
mov
sub
mov
stc
ja
sbb
arpl
into
jl
lods
or
cmp
lahf
sub
mov
and
das
dec
in
jecxz
or
sbb
cmp
ret
stc
and
and
add
enter
ja
cmpsl
add
filds
cmpsl
mov
or
fs
aas
push
lret
xchg
pusha
sub
mov
stos
addr16
test
scas
or
mov
xchg
inc
xlat
push
lret
pop
enter
xor
in
add
pop
mov
pop
or
jae
add
clc
outsb
sbb
fistl
jl
add
scas
clc
xor
dec
push
inc
or
popf
cmp
popf
or
lods
cld
xacquire
inc
jp
ss
jge
test
xchg
adc
or
int3
sbb
add
pop
jecxz
lds
pop
shll
fistps
stc
lret
stc
and
xor
jbe
xchg
fdivrl
cmc
jmp
mov
add
jne
adc
and
shlb
add
shr
xor
mov
or
ror
fists
push
mov
jmp
inc
jno
sbb
lods
xchg
push
sbb
add
cld
das
lahf
xor
pop
scas
jle
ja
adc
push
sub
andb
ja
or
cmp
sub
out
mov
lods
loope
cwtl
hlt
mov
xchg
call
lahf
insl
and
mov
dec
xchg
clc
fcoms
out
fists
test
inc
rorl
jns
jmp
cli
pop
xchg
loop
pop
loopne
aas
cmpsb
sbb
daa
stos
pop
int3
test
push
pusha
adc
fwait
adc
add
mov
ret
jae
into
lea
sahf
mov
xor
pushf
jp
inc
and
jnp
pop
xorb
xchg
insl
leave
pop
cmpb
fs
int
jecxz
jnp
jge
xor
ret
push
adc
sarb
in
inc
dec
fists
mov
outsb
mov
into
es
xchg
scas
loope
jmp
subb
push
add
lds
xchg
ret
ja
jp
loopne
jmp
jns
fidivrs
inc
leavew
jp
imul
fcompl
loopne
or
into
inc
sub
mov
iret
imul
nop
stos
xor
mov
mov
sti
mov
pop
out
xchg
ss
mov
js
ljmp
pusha
pop
in
shrl
fisubrs
mov
adc
dec
mov
ss
ljmp
aam
repz
sbb
repnz
xor
push
arpl
xchg
sahf
lods
shlb
and
aaa
aad
cmp
jl
into
dec
sbb
into
notl
pop
mov
gs
xor
jg
loop
call
leave
mov
faddl
sub
mov
mov
cmpb
mov
inc
jo
decb
cmp
mov
lea
inc
sahf
push
inc
cmpsb
xchg
jp
adc
jecxz
fsubs
call
ret
movsb
sub
fldt
imul
xchg
bound
add
sbb
xchg
icebp
incl
rcrb
lock
inc
xlat
dec
push
out
cs
sti
fwait
lds
and
inc
mov
dec
scas
outsb
cmp
ljmp
cld
popa
xchg
popf
mov
test
popa
push
std
loopne
cmp
in
sub
scas
sarl
dec
shl
repz
sar
arpl
mov
fistpl
mov
push
inc
test
xchg
adc
xor
js
pop
add
lds
test
add
and
and
popf
xchg
mov
mov
iret
enter
jb
roll
cmp
push
mov
sbb
mov
mov
mov
mov
movsb
sbb
outsb
sarb
sbb
subb
outsl
jae
in
shll
jl
aad
sub
mov
adc
incb
mov
int3
gs
mov
fstps
sbb
add
mov
repnz
xchg
rcrl
clc
cld
xchg
xor
je
aam
push
outsb
pop
test
add
and
aas
jns
movsl
test
daa
jmp
decl
add
mov
mov
pop
loope,pn
cmp
insb
loop
dec
jl
fnsave
cmp
xlat
jle
jp
dec
inc
popa
cld
inc
push
jo
mov
les
and
mov
xchg
jne
push
xor
pop
cmovge
dec
mov
js
dec
cmpl
or
mov
dec
sahf
push
pop
xchg
xchg
int3
out
dec
mov
icebp
push
xchg
xor
into
sub
push
mov
jg
pop
inc
cs
and
mov
bound
das
int
je
pop
lret
xchg
add
cmpsb
test
dec
adc
lods
lret
push
inc
jae
fsubrl
adc
adc
jnp
lds
cmpb
xor
les
insl
arpl
sbb
and
lods
not
ds
repnz
sbb
cltd
lret
xor
imul
aaa
in
and
dec
or
xor
in
pop
jb
sub
and
mov
sbb
dec
js
fwait
dec
cmpsl
insl
ret
mov
movsb
fsubs
inc
ret
add
dec
dec
cmp
mov
push
xor
sbb
mov
sub
mov
and
shr
add
bound
dec
sbb
xchg
fisttps
fstps
cli
mov
mov
imul
mov
dec
bound
movsb
lahf
mov
mov
outsb
sbb
and
push
adcb
mov
mov
xchg
leave
cmp
stc
and
xor
call
mov
mov
jns
fsubp
jle
add
mov
cmp
pop
or
jns
mov
aas
pop
mov
cmp
cmp
insl
add
cwtl
outsb
popf
xchg
std
push
mov
leave
jmp
lret
mov
mov
push
xchg
adc
jo
mov
jp
push
nop
xlat
lret
fs
mov
outsb
sub
aam
sbb
sysret
adc
mov
xchg
rorl
stc
jge
stc
fcoms
shrl
sbb
sbb
lock
or
fwait
test
clc
mov
aad
mov
xor
daa
adc
push
mov
add
push
add
xchg
bound
jge
daa
fs
mov
and
pop
add
je
lods
cmp
pop
add
cmp
andb
pop
inc
inc
fwait
dec
and
daa
add
int
push
testl
mov
push
adc
movsl
add
fnsave
cld
inc
mov
sub
or
push
addb
xchg
adc
inc
jge
lods
xchg
adc
fs
mov
aaa
push
xchg
icebp
fistl
dec
or
or
rep
xchg
sub
out
inc
or
pop
das
mov
rolb
inc
cmp
sub
cltd
jle
push
jae
stc
mov
xor
and
pop
xchg
stc
add
shlb
divl
stc
mov
rcr
in
dec
ljmp
mov
mov
cmp
icebp
rcrl
cltd
rorb
lret
fcmovne
xchg
jl
ret
or
nop
aad
adc
or
fwait
sub
movsl
mov
enter
jecxz
push
dec
testl
cmp
mov
xchg
adc
mov
repz
sahf
xlat
mov
dec
jbe
mov
cmp
das
xchg
sub
jnp
aad
popf
jb
cmp
jns,pt
sbb
mov
jne
inc
sbb
add
cwtl
adc
mov
movd
daa
jae
pop
pushf
xchg
adc
xor
in
pop
cmpsl
fs
sbb
or
mov
cmp
sub
pop
loope
xlat
adc
push
mov
stc
movsl
cmc
sub
popf
or
jns
out
jge
push
mov
xchg
mov
jo
push
inc
xchg
mov
fmul
pop
xor
movsb
dec
mov
cmp
fxam
ffreep
dec
loope
mov
pushf
or
int
movhps
mov
enter
nop
cmpsl
inc
in
daa
aaa
and
outsl
enter
ja
repz
std
add
dec
mov
ja
addl
jle
sub
xor
lahf
pop
jo
aaa
lcall
or
lock
push
dec
outsb
mov
out
cmp
xchg
arpl
stos
nop
notl
pop
xchg
dec
movsl
inc
xchg
and
and
stc
cmp
scas
and
iret
notl
pop
and
pusha
mov
ret
enter
test
aaa
adc
and
cli
sahf
jbe
xchg
lcall
test
push
mov
add
ss
lods
lea
imul
cli
and
mov
shlb
jmp
sbb
cltd
or
lock
sbb
icebp
aam
xor
clc
stos
and
lds
xchg
sti
icebp
hlt
pop
in
popa
adc
pop
push
les
pop
mov
push
stos
mov
xchg
rclb
into
iret
lahf
pop
adc
ficompl
and
out
out
jle
scas
rclb
inc
je
jmp
inc
dec
js
xor
and
jae
dec
pop
xchg
fisubrl
sbb
xchg
push
or
add
sub
jno
xor
mov
jmp
pop
idiv
in
xor
mov
lahf
jno
dec
leave
jl
rcl
mov
or
xchg
out
jbe
clc
flds
mov
popf
scas
into
adc
jb
shlb
pop
lds
rcll
pop
dec
imul
dec
out
in
cmpsb
jg
and
jo
adc
outsb
jle
mov
and
and
jecxz
scas
pop
push
push
cmp
pop
loop
xchg
xor
test
xchg
jecxz
jne
mov
and
jbe
enter
cmp
js
push
iret
dec
sub
mov
xchg
mov
fwait
in
scas
enter
rolb
sub
out
adc
loop
rorl
std
paddd
lock
mov
decb
mov
mov
cltd
int
push
rcrb
mov
and
dec
jno
aas
incb
insb
int
cmp
add
pop
mov
nop
lea
jl
jp
jnp
rcrb
xor
out
std
cwtl
cmc
aad
test
push
add
fwait
pop
fisubl
aam
sbb
jnp
mov
not
add
pop
ret
or
stos
and
and
adc
bound
nop
incb
inc
nop
gs
inc
cmp
xor
adc
aas
sub
dec
fnstcw
fists
xor
call
ljmp
cmp
fwait
cmp
cs
js
add
dec
lds
lret
test
cmp
ljmp
lret
inc
jg
xor
push
push
and
in
mov
xchg
in
mov
test
ret
fbstp
dec
nop
sbb
mov
data16
xchg
into
and
fldcw
xchg
scas
xchg
cltd
enter
xchg
sbb
mov
repz
adc
hlt
add
pop
and
ficoml
or
mov
scas
sbb
push
aad
jp
rorl
push
push
lods
out
push
cwtl
xchg
pusha
addr16
pop
addb
sub
or
push
push
mov
inc
mov
fsubrs
adc
adc
rclb
push
and
inc
adc
cld
pop
shrl
pop
testl
ds
pop
mov
jae
mov
cmp
test
imul
xchg
rcrl
scas
aad
push
iret
hlt
push
lock
sti
push
pop
lret
jnp
out
fstpt
sti
test
or
aas
adc
loop
lahf
in
jmp
stos
xchg
push
loopw
add
test
fcmovnbe
jecxz
push
scas
lea
sub
rorl
js
stos
or
lods
add
scas
xor
aad
xchg
in
and
dec
test
inc
lods
fwait
mov
ds
or
jl
push
in
mov
jno
lcall
and
pop
xor
mov
loope
daa
jle
rolb
dec
pop
int
dec
cmp
dec
or
pop
js
xor
fmul
mov
int3
xchg
lock
pop
xchg
xchg
out
mov
testl
mov
jb
jae
add
or
repz
cmp
cmp
aam
cmc
inc
inc
add
jnp
mov
push
aaa
and
adc
out
pop
imul
lret
fdiv
xchg
outsl
imul
out
push
scas
or
sahf
sub
and
xchg
cmp
js
sbb
xchg
xchg
push
sub
icebp
je
push
lret
sub
xchg
std
leave
jge
movb
fsubl
imul
jnp
jmp
aaa
jmp
mov
dec
push
push
sub
dec
inc
inc
lods
enter
pop
loop
call
fcmovbe
test
sub
dec
je,pt
inc
xchg
jns
js
cmpsb
mov
pop
adc
fidivl
popa
pusha
enter
paddsb
push
scas
js
mov
addb
xor
mov
jecxz
hlt
jae
fdivl
fcoms
mov
xchg
push
push
cmp
and
ja
insb
jecxz
jle
scas
push
loopne
aaa
xor
dec
int3
imulb
push
pop
outsb
pop
movsb
testb
out
push
jecxz
divl
pop
insb
mov
lods
nop
pop
xor
jmp
cmc
pop
pop
mov
cmp
cld
outsl
lods
dec
add
arpl
sahf
call
jns
andb
push
adc
addr16
lcall
std
clc
and
dec
xor
sub
sbb
pop
mov
fsubrl
lcall
bound
pop
inc
mov
int
xchg
sti
test
pushf
adc
popf
in
sub
mov
clc
movsl
jbe
push
pop
xor
jne
and
xchg
cmc
sbb
stc
dec
cmp
test
dec
enter
imul
pop
outsb
lds
or
mov
cmp
sbb
inc
mov
aam
add
push
add
out
or
mov
ud1
push
mov
mull
cwtl
sub
and
stos
cltd
stos
cmpsb
inc
sbb
lret
inc
pop
jmp
clc
loope
sub
add
xor
pop
xor
lods
sub
rol
iret
mov
cmp
clc
sar
cmp
mov
repz
sahf
les
and
lahf
mov
addr16
int3
xchg
fstpl
int3
adc
sub
icebp
inc
inc
add
call
in
jge
inc
lret
insl
aaa
imul
loop
sub
scas
call
jae
cmp
add
mov
das
xor
icebp
xor
pop
movsl
in
inc
mov
push
cmc
cwtl
cmpsb
sub
jl
jo
clc
pop
shl
xchg
pop
and
push
xor
push
dec
and
jmp
add
enter
je
cmp
mov
stos
leave
add
js
mov
cli
mov
mov
pop
inc
scas
dec
popa
lds
cmc
divb
or
lret
jo
inc
sbb
pop
pop
out
insb
mov
xchg
test
or
cmpsl
lods
dec
int
cmc
add
dec
sub
fcomp
orb
sub
pop
xor
je
daa
add
adc
loope
aad
mov
cmp
add
mov
fldln2
nop
push
and
js
push
add
xchg
flds
mov
jl
mov
clc
out
int3
mov
jg
arpl
jno
ja
pop
pusha
pop
xor
dec
repz
mov
dec
fwait
cmp
sub
adc
adc
fimuls
xchg
stos
push
dec
clc
jns
fs
jmp
test
pop
js
push
inc
or
xor
outsl
out
mov
and
fists
ficoml
xchg
add
lcall
sarl
inc
test
inc
divl
in
aad
mov
and
jp
xor
xlat
ja
hlt
into
ret
out
mov
push
mov
shll
test
jle
xchg
pop
mov
jns
mov
bound
inc
mov
rcl
lods
mov
push
mov
and
xchg
arpl
int
sbb
fdivrl
movsl
mov
xchg
inc
cmp
cmp
push
mov
push
lret
hlt
ljmp
lock
div
ljmp
lock
pusha
cmp
int3
push
jne
xlat
xchg
stc
cmp
pusha
jp
jae
ja
daa
sub
mov
mov
out
sbb
and
out
imul
lods
ss
sbb
add
xorb
jns
mov
and
add
sub
xchg
fdiv
cld
loop
test
arpl
lahf
ja
adc
or
inc
ret
insl
mov
iret
mov
push
fld
or
in
inc
add
jb
cmpsl
adc
pushf
insb
call
jmp
pop
mov
dec
mov
and
xchg
rcr
into
insb
sub
sbb
clc
sub
cld
sbb
sbb
and
lret
js
test
aad
loope
fstpl
negl
movsb
rorb
xchg
fyl2xp1
cmp
fwait
xor
les
jnp
mov
daa
mov
inc
cmpsl
in
push
pop
test
dec
mov
jae
sarb
daa
pop
dec
jnp
lds
andb
scas
adc
pop
add
mov
xchg
push
push
movsl
xchg
inc
sub
bound
lds
cmpb
pushf
inc
add
sub
push
mov
lret
pop
je
sbb
je
mov
fwait
pushf
lods
cltd
loop
pop
cmp
inc
jno
in
pop
push
leave
shl
daa
cli
jo
add
out
movsw
out
call
sub
dec
sahf
out
cs
jge
sbb
nop
jg
mov
into
adc
push
in
int
jnp
or
xor
fs
test
pop
popf
dec
xchg
stos
popa
cli
ret
push
call
adc
push
add
and
xchg
jne
jg
jge
sub
scas
faddl
pop
ret
mov
push
repnz
mov
movl
xchg
in
out
pop
test
xchg
mov
outsl
pushf
sbb
jmp
icebp
xchg
mov
jecxz
shll
aas
jp
into
in
jo
add
mov
pushf
adc
cmpsl
or
into
loope
sub
or
dec
es
jae
mov
sbb
pop
movsl
call
mov
push
test
xor
enter
pop
cmp
scas
mov
fcmovbe
xchg
adc
test
mov
out
mov
push
push
adc
cmpsb
push
xchg
icebp
cmc
imul
jae
jae
stos
fcompl
pop
add
xchg
pop
xchg
sub
inc
push
and
fdivrl
aaa
fadds
out
lds
outsl
rdmsr
dec
dec
dec
jmp
aaa
jl
cmc
cmpsb
sbb
scas
mov
bound
pop
rorb
ffreep
mov
sub
mov
mov
clc
mov
mov
jb
mov
push
mov
dec
divb
pop
inc
stos
test
lahf
pusha
pop
fs
fisubrl
mov
xchg
test
mov
sbb
pusha
shll
dec
test
ja
jnp
hlt
sbb
lods
inc
inc
xchg
mov
enter
xchg
imul
sarb
leave
fwait
mov
dec
hlt
leave
mov
gs
xor
add
popa
cmpsl
adc
inc
imul
imul
push
loopne
adc
fwait
jo
and
subb
sub
jns
cmp
adc
mov
inc
pushf
jle
push
mov
inc
cmpsl
fcmovnbe
mov
in
enter
adc
add
cmp
imul
popa
addr16
push
les
popl
add
sti
push
cmp
and
and
test
or
ljmp
repz
daa
dec
add
aas
add
add
insl
and
adc
fcompl
mov
and
sub
sub
push
mov
daa
jl
pop
cwtl
adcl
aaa
fstpl
or
into
inc
fwait
push
call
loop
inc
pop
add
dec
jle
nop
push
je
aad
icebp
or
lds
movsl
mov
adc
sub
bound
dec
cltd
fnstenv
mov
leave
imul
push
pop
xchg
movsb
add
scas
loop
adc
and
fnstcw
push
mov
jmp
mov
jae
mov
outsb
imul
pop
jp
fsubs
add
mov
add
and
loop
scas
sbb
fwait
movsb
inc
jecxz
repz
icebp
push
imul
call
mov
sub
or
inc
or
mov
ret
add
jnp
lret
dec
dec
cs
sub
dec
ja
popl
rcrl
add
mov
and
mov
mov
add
jns
andb
aam
out
xor
xchg
repnz
xor
imul
lahf
lret
or
cmpsb
movb
aas
push
lea
mov
pop
outsl
outsl
mov
sbb
push
mull
movsb
sub
sub
out
pushf
pop
js,pn
stos
adc
xchg
orb
loop
sub
movsb
inc
lods
add
dec
xchg
fdivl
into
ret
jl,pn
mov
std
lret
xchg
mov
pop
addl
xor
inc
jbe
movb
xlat
in
xchg
loope
pop
lods
or
sub
cmp
aad
dec
dec
jbe
repnz
jg
cmc
push
mov
mov
push
popa
push
cs
xchg
xchg
or
iret
sbb
pop
cwtl
cwtd
or
sbb
adc
mov
test
sub
and
jo
jecxz
adc
jnp
or
add
test
cmpsl
jp
xor
sahf
pop
jp
iret
jle
pop
jle
arpl
mov
popf
and
movsb
in
cmp
pop
sbb
and
cwtl
mov
addr16
test
addl
mov
adcl
bound
out
cmp
stos
xchg
dec
and
sbb
pop
and
out
ja
inc
xchg
aas
in
jnp
cmp
push
pop
mov
shlb
add
cmp
in
mov
addr16
into
push
mov
mov
push
jge
clc
adc
xorb
stos
je
push
or
fdivp
fucomi
sub
xor
mov
pop
sarl
pop
mov
inc
out
outsl
mov
push
sub
js
sub
in
cmp
mov
outsl
inc
and
rcrl
imul
outsb
int3
add
into
aas
mov
mov
lret
xchg
inc
pop
mov
mov
adc
inc
shll
icebp
test
inc
jnp
fwait
out
dec
lret
loop
je
mov
mov
popf
sbb
repnz
rol
ds
in
into
push
lret
lea
adc
loopne
sahf
jle
and
outsl
mov
mov
or
pop
xchg
orl
push
adc
push
jmp
rcll
xor
ret
mov
sbb
mov
adc
outsl
dec
hlt
arpl
aad
test
push
mov
mov
ret
rclb
daa
jmp
mov
pop
xor
xor
mov
gs
and
aas
inc
push
test
lods
test
pop
sbb
or
cs
adc
jp
push
push
xor
mov
add
lock
push
cmp
or
and
cmp
dec
add
out
imul
jmp
fstp
imul
je
cmp
inc
cmp
sbb
and
cmp
jg
add
jae
mov
mov
cwtl
add
int3
adc
sub
dec
cmp
or
fdivl
int3
push
aas
es
popa
into
pop
fadd
cmpsl
mov
loop
sub
pop
add
cmp
jl
sub
xor
lock
mov
mov
jg
outsb
adc
in
dec
icebp
or
mov
and
daa
xor
test
dec
ljmp
add
lds
sbb
jne
push
icebp
push
and
scas
loopne
arpl
sbb
sbb
or
int
and
dec
fwait
mov
cmp
pop
insb
test
lret
aam
jns
ret
call
into
mov
dec
loopne
push
jg
insb
iret
sub
out
mov
jae
and
mov
pop
outsl
add
cltd
lcall
sbb
lds
test
scas
jle
leave
sbbb
jecxz
sbb
and
mov
adc
xchg
and
mov
pushf
mov
lods
lcall
xor
addr16
loopne
dec
mov
stos
jnp
lock
imul
adc
add
mov
add
push
lret
add
dec
insb
sub
lods
movsb
popa
mov
mov
xor
leave
in
repnz
fidivl
test
pop
in
xchg
mov
add
and
fwait
xchg
popa
cmpsb
and
inc
lock
cmp
inc
add
fmull
aam
jg
in
into
aaa
mov
les
sub
jle
sahf
jl
imul
testb
shr
daa
insb
xchg
loopne
insb
test
jg
jmp
pop
aad
sbb
sar
bound
pop
and
xchg
imul
in
pop
push
push
out
cli
pushl
inc
mov
add
outsb
fldt
aaa
rorl
dec
enter
outsl
mov
fistpll
pop
push
cmp
or
enter
dec
in
xor
inc
xchg
clc
xor
daa
jmp
insl
dec
in
mov
mov
cs
inc
cmp
cli
test
out
xor
setbe
mov
jbe
arpl
out
lea
mov
xlat
cmp
mov
bound
pop
cs
jl
fidivs
mov
mov
mov
add
ret
fwait
cmp
xor
jp
mov
xor
inc
int
popa
mov
mov
je
sahf
mov
and
std
dec
imul
lret
fisubs
rcrb
stos
inc
or
jb
push
or
mov
pop
inc
jmp
sbb
xchg
pop
adc
das
mov
pusha
sbb
mov
jle
popa
les
and
jecxz
sti
add
in
es
push
inc
mov
push
mov
pop
stc
popf
and
adc
adc
cltd
adc
and
xor
inc
shll
sbb
fldenv
insb
sub
jl
jne
mov
and
xlat
push
es
cmpsl
aad
fsts
push
adc
aas
sbb
ss
je
fisubs
dec
insl
add
loopne
cli
sti
mov
jbe
mov
sub
dec
scas
lahf
push
xchg
lcall
test
cs
push
mov
xor
sbb
lcall
ds
sub
jb
repnz
scas
mov
mov
add
call
stos
test
adc
xchg
repz
adc
imul
inc
sbb
cmp
sub
push
pusha
push
ja
push
pop
in
mov
jecxz
jno
sbb
sbbl
mov
cmc
mov
xor
mov
mov
int3
imul
imul
adc
jg
dec
mov
adc
and
movsl
pop
cmpsl
sbb
pop
sbb
sbb
add
push
shll
push
ljmp
rcll
adc
push
add
ret
lods
sub
xor
leave
or
mov
das
or
or
in
testl
mov
adc
rcrl
rorb
fistpl
stos
inc
inc
mov
inc
add
sub
pop
mov
fdivrl
adc
or
mov
cmp
mov
repnz
xorl
imul
leave
hlt
dec
and
push
mov
jo
mov
jnp
daa
mov
test
stc
leave
push
popf
popa
jbe
push
fs
filds
lret
sub
les
and
adc
pop
fdivrs
xchg
add
push
jp
pop
andl
xchg
add
push
xchg
das
mov
lods
xor
pop
adc
bound
xchg
mov
xchg
insl
inc
testb
fs
xchg
sbb
les
add
lahf
imul
fldt
sbb
cmpsb
hlt
daa
sub
out
lds
or
mov
daa
imul
cmpsl
out
mov
popf
xor
je
xchg
xchg
cwtl
fstps
xadd
push
push
cltd
sub
jge
loop
addb
pop
jl
adc
or
scas
jbe
sbb
stc
les
jmp
xor
aad
outsb
and
push
js
and
orl
fwait
xchg
nop
scas
jge
iret
mov
jae
dec
mov
pop
jge
outsl
hlt
mov
xor
icebp
cmp
iret
mov
cmpsl
popf
fisttps
lea
mov
push
insl
stc
mov
mov
or
mov
xchg
test
addb
mov
sub
dec
inc
adc
imul
adc
push
aas
jnp
push
jae
add
push
pop
pop
dec
test
xor
jp
pop
pop
sub
jo
lock
mov
popa
xor
lahf
dec
in
mov
ret
push
and
outsb
jecxz
adc
test
loop
jne
inc
jbe
repnz
outsb
xchg
test
sub
inc
inc
jae
mov
dec
mov
cmpsb
mov
cmpsb
push
push
sti
movsl
xchg
jp
cmpsl
divl
iret
jns
mov
imulb
mov
jne
test
xchg
mov
pop
js
idivl
add
sbb
push
push
loop
aad
mov
in
sbb
insb
mov
pop
xorl
or
fbstp
fwait
aad
daa
xor
push
aam
sub
pop
push
insb
pop
add
push
adc
mov
mov
pushf
pop
lcall
mov
aad
sub
je
pop
adc
movsb
adc
fstpl
hlt
cmpsb
dec
jl
cld
cmpsl
mov
sbb
imul
inc
test
jecxz
lods
fadds
inc
sbb
jno,pn
or
cmp
add
adc
int3
mov
push
dec
and
sub
or
inc
pop
cmp
cmc
notb
jae
adc
fcompl
xor
mov
ret
mov
fisttps
or
jge
outsl
stos
pop
and
sub
jns
mov
fwait
xor
sbb
je
sub
jbe
inc
call
inc
push
in
arpl
test
imul
nop
icebp
cmp
mov
push
scas
fsts
addr16
fdivl
fmuls
cmc
sub
fsin
pop
pop
inc
xorl
jp
cmpsb
jmp
pmuludq
push
addr16
mov
in
ret
rcrl
push
mov
roll
and
add
icebp
lods
jg
test
aad
or
jae
sub
push
mov
loop
xor
mov
xchg
aad
fs
aaa
cltd
xchg
loopne
jl
xchg
xchg
shll
and
testl
pop
mov
fucomp
mov
js
dec
sub
adc
xor
push
call
rcl
imul
jnp
jo
jns
or
inc
shr
rclb
jae
mov
inc
mov
sub
sbb
lcall
xor
sub
aaa
fnsave
in
sbb
and
inc
iret
das
out
pop
inc
and
in
sarb
adc
push
rcrl
aas
inc
or
adc
daa
mov
ds
mov
cmp
nop
filds
and
cmp
xor
je
pop
adc
pop
push
mov
jns
xchg
popa
ret
adc
dec
sti
inc
aam
or
not
jae
dec
fidivl
mov
xchg
imul
lret
sub
imul
or
nop
repz
sti
lds
pushf
xor
jb
fsubrs
rorb
aam
sbb
fcoms
xor
xchg
test
xor
sti
lods
loop
lock
movsl
iret
fucomp
pop
push
dec
or
leave
lods
fistpll
cmp
insl
outsb
subl
cld
inc
cmp
cmc
aas
jb
leave
test
pop
push
push
aad
daa
ret
in
imul
stc
sahf
int3
outsb
insl
push
mov
mov
mov
iret
lahf
mov
loopne
or
xor
xor
mov
js
xor
addr16
cmp
or
ja
adc
lea
lods
xchg
mov
test
mov
jmp
lods
add
pop
test
mov
shlb
or
jecxz
enter
mov
mov
push
xchg
ret
and
mov
jae
imul
adc
ljmp
mov
pop
loope
sub
hlt
test
or
sbb
lods
xor
push
or
dec
xchg
push
push
sub
out
xchg
and
lret
stos
sahf
cmpsb
sbb
insb
mov
xor
pop
fwait
ds
xabort
adc
mov
setns
xchg
decl
inc
insl
popf
mov
xchg
int
xchg
and
mov
mov
sbb
jmp
sahf
or
lret
push
in
dec
push
and
push
gs
lods
shll
and
push
jb
stos
or
and
xor
inc
cli
inc
push
pop
fs
push
hlt
mov
xchg
in
fnstcw
test
mov
jl
mov
xchg
gs
test
into
rol
jae
mov
rclb
repz
add
dec
or
adc
jae
lahf
clc
add
xchg
scas
ret
inc
clc
imul
mov
int
bound
addr16
mov
daa
pop
sbb
lock
stos
arpl
jnp
xorb
test
movsl
mov
add
in
mov
rolb
adc
xchg
shlb
out
popw
dec
jmp
in
loope
rep
lds
lds
mov
adc
mov
pop
ror
push
cltd
lcall
jbe
push
or
mov
rol
jle
jge
or
das
iret
xchg
shll
jge
pop
push
sub
sub
orl
cmp
lcall
mov
invd
lods
sbb
notb
xchg
das
or
xlat
mov
insb
pop
xchg
repnz
test
scas
movsb
loop
pop
xor
insl
sbb
cmpsl
in
fstpt
sub
into
push
push
sub
rcl
lock
mov
adc
jg
and
jge
push
push
push
daa
jge
jnp
push
xchg
loope
mov
imul
sub
call
jle
xlat
addr16
lret
out
cmp
out
add
dec
jmp
cmc
mov
adc
mov
dec
jae
stc
shl
and
lret
pop
pushf
daa
mov
stos
dec
mov
mov
xchg
pop
jp
adc
and
mov
xor
stos
test
rclb
mov
dec
mov
dec
or
mov
stos
repnz
out
ja
or
add
inc
pop
imul
lahf
sarl
pop
jmp
xchg
outsb
pop
into
lcall
scas
cs
out
lock
mov
cmp
jmp
test
imul
mov
les
cmp
ss
lds
lods
xchg
cwtl
lcall
and
dec
in
push
mov
adc
push
pop
push
arpl
ret
mov
cmp
out
cwtl
xchg
jb
test
mov
xchg
pusha
loopne
jae
push
test
pop
nop
xchg
pop
mov
adc
dec
mov
es
mov
dec
sbb
flds
push
sbb
loopne
insb
cmp
jo
mov
je
in
loopne
cmp
in
icebp
test
cmpsl
lcall
lods
jb
outsl
cmp
insb
mov
xor
pop
call
pop
mul
sbb
or
xor
sbb
dec
or
stos
shlb
mov
dec
jl
and
sub
xchg
cmp
insl
rol
xchg
pop
mov
push
das
sbb
pusha
out
dec
push
movsb
popa
add
enter
loope
mov
stos
push
lea
sub
sbb
cltd
or
icebp
lods
or
cmpsl
ds
adc
pop
pop
adc
mov
int
hlt
push
mov
sahf
jne
jo
pop
pop
imul
jecxz
dec
pushf
int3
inc
adc
xchg
call
sub
cs
gs
xor
insb
push
call
sahf
icebp
int
sahf
push
ret
cs
shl
xor
roll
push
fldt
xor
pop
arpl
lahf
idivb
repz
ret
mov
cmpsl
decb
pop
pop
cli
adc
pusha
fcoms
pop
test
mov
push
cli
inc
es
and
orb
lock
inc
xchg
pop
xor
mov
sbb
mov
xchg
push
frstor
in
ss
adc
mov
push
or
test
mov
adc
dec
mov
popf
sub
xchg
pop
mov
xor
xor
mov
mov
ds
dec
ror
nop
sbb
xchg
inc
jp
daa
shrl
lock
or
mov
sub
mov
call
in
xchg
xchg
pop
test
mov
pop
arpl
stos
aaa
jo
es
mov
jle
gs
loop
cmove
sar
mov
outsl
xchg
test
sbb
fdivl
cmp
jle
mov
jb
inc
push
push
and
add
push
aaa
cmp
loopne
inc
fcmovu
sbb
sub
sub
andl
jp
es
stos
cmc
mov
push
mov
mov
dec
sbb
testl
jmp
mov
jb
push
sub
imul
in
or
xchg
rol
jae
push
popf
jae
jns
dec
scas
xchg
xchg
mov
jge
dec
aaa
fcomps
rol
inc
and
push
ja
or
jb
imul
jg
adc
roll
mull
in
sbb
das
outsl
jmp
sub
cmp
cmc
inc
frstor
jmp
in
lret
xlat
shrb
lcall
mov
jle
cmp
enter
pushf
int
inc
aaa
pop
call
and
sbb
mov
dec
inc
and
adc
mov
push
int
add
jae
in
fdivrp
int3
test
fcoml
cwtl
in
push
aaa
decb
and
jmp
mov
lret
mov
popf
ljmp
adc
leave
test
inc
push
xorb
mov
stos
and
cmpsb
je
push
cmp
dec
adc
aas
pop
sub
and
testb
int3
ja
sub
xorb
add
gs
shll
movsl
data16
dec
mov
insl
std
lods
xchg
lret
push
shr
and
inc
and
mulb
and
lods
inc
cmp
and
mov
loopne
movsl
sarb
in
cmp
inc
mov
xchg
cmp
fsubrs
fs
sbb
mov
jl
lea
dec
inc
inc
pop
push
mov
pop
add
or
pop
loop
repnz
push
dec
sub
push
and
sub
or
jns
into
push
gs
outsb
sub
mov
fcmove
imul
mov
adc
sbb
jge
loop
xchg
pop
mov
cmc
sub
arpl
rcrl
jbe
nop
iret
jle
rclb
sbb
xchg
dec
adc
push
and
dec
int
and
insl
fsubp
mov
push
in
pop
inc
ret
jge
shl
mov
scas
adc
mov
pop
dec
add
ficompl
pop
mov
out
cwtl
addl
mov
frstor
mov
mov
jno
push
stos
pop
jne
sub
xchg
add
or
sbb
mov
cmp
adc
movsb
imul
fstpt
mov
shrl
push
mov
scas
push
add
roll
fstl
scas
or
sti
popf
data16
insl
rorb
or
imul
cmp
xchg
pop
pop
add
add
lret
bound
lods
mov
add
jns
jae
mov
push
sub
repnz
loopne
aam
loope
cmpsl
es
and
scas
imul
mov
into
jle
xchg
xor
cmp
mov
add
cmp
sbb
lea
adc
loope
int3
fisubl
mov
fcmovne
testl
out
std
pop
and
mov
jecxz
pop
sbb
fnstenv
pop
inc
in
and
inc
cmp
cwtl
pop
sbb
sub
lea
ljmp
bound
push
jl
movsl
xchg
mov
fidivrl
cmp
dec
add
cmp
jle
imul
sbb
pop
mov
and
push
push
inc
sub
je
push
cld
les
cmp
lret
mov
dec
xchg
dec
lds
xchg
cwtl
aas
cwtl
les
add
cmp
int
test
imul
xlat
sar
cmp
adc
cmp
xor
jnp
in
mov
push
in
pop
jmp
lret
adc
mov
fwait
and
cmpb
jno
inc
inc
xor
icebp
cld
dec
cld
aaa
sub
mov
ljmp
dec
adc
ja
cs
push
xchg
insb
popf
ja
sub
xor
aaa
and
cmp
push
repnz
pushf
mov
inc
je
sub
lcall
mov
pop
xor
nop
ljmp
mov
out
nop
sbb
ds
or
cld
add
cmc
cli
xor
dec
inc
scas
or
test
push
mov
cmpl
push
cld
sbb
ljmp
js
cmc
mov
sub
push
inc
cmc
jle
mov
notb
add
icebp
add
jg
pushf
mov
jne
pop
xchg
mov
push
mov
sbb
jo
ret
aad
mov
lods
dec
jae
push
cmpsl
icebp
fisttpll
cmp
mov
lahf
pop
out
cmp
and
sarb
mov
js
in
push
jmp
push
ret
pop
frstor
mov
inc
push
dec
subb
das
pop
dec
js
inc
stc
subb
fldcw
dec
sbb
test
push
inc
andb
mov
adcl
cmp
pop
push
ja
aaa
test
popf
sar
mov
xchg
loope
mov
add
loope
lock
daa
inc
in
lcall
cmc
jmp
clc
out
lcall
fisubs
shll
in
xor
mov
fs
push
clc
mov
imul
xor
mov
sub
dec
xor
xchg
pop
int
aam
fldcw
push
push
pop
mov
stos
pop
in
mov
sub
sbbb
xchg
popf
scas
mov
dec
outsb
testl
into
sti
mov
lcall
dec
cmpsb
mov
cli
cld
ret
mov
in
pop
je
movsl
xchg
lret
aas
xchg
mov
pop
mov
stos
aaa
pop
xor
or
cli
mov
rcl
cmc
push
cmp
bsf
fidivrl
cwtl
nop
push
dec
cmp
cltd
les
pop
fwait
dec
call
mov
rep
xor
in
push
stos
push
or
out
xor
mov
hlt
and
jmp
sbb
ja
lock
mov
cmp
outsb
pop
or
and
jp
cmp
push
dec
stos
mov
testb
icebp
lret
inc
xlat
outsl
cwtl
in
ret
ljmp
pop
add
stos
or
cpuid
enter
or
fwait
cmp
clc
rol
fcoml
cmp
out
xor
jo
mov
ja
cmp
sbb
int
push
or
inc
stos
and
mov
out
push
xor
or
mov
sbbl
mov
sub
sarl
xlat
fmull
dec
ss
test
in
or
adc
cmpsl
pop
imul
pop
xor
adc
jo,pt
jae
dec
cmp
xchg
test
outsl
mov
icebp
lods
mov
dec
push
testb
insl
xchg
sbb
mov
out
mov
cwtl
and
inc
mov
add
lock
push
xchg
push
mov
cmc
icebp
sbb
lahf
loopne
out
aas
cmc
sti
sub
icebp
mov
pop
xchg
inc
push
or
out
mov
mov
jecxz
movsb
lds
lret
mov
out
jge
rcrl
test
daa
inc
jbe
dec
pop
jle
mov
push
push
jecxz
sub
jne
lock
fidivs
jp
sub
hlt
dec
cmp
mov
int
stc
int
cs
sub
mov
pop
out
sub
lods
stc
push
cmp
fisubs
loop
es
enter
repz
xchg
aas
daa
rcr
not
dec
or
sbb
jns
jmp
scas
addr16
dec
sub
xchg
popa
test
test
testb
sub
xchg
or
ja
loop
lcall
push
dec
xchg
icebp
xor
jg
in
pop
pop
fdivrs
outsl
sarl
jae
cmp
mov
sbb
sbbb
xor
inc
ret
add
lcall
data16
sahf
cmp
jmp
jne
sub
sahf
fisttpl
outsb
addr16
mov
jg
out
xor
pop
cmp
and
mov
mov
mov
push
ret
data16
mov
adc
or
sbb
ret
aad
stos
cmp
mov
sbb
gs
add
mov
xchg
sbb
adc
push
ss
dec
leave
mov
and
sub
inc
pop
popa
mov
ljmp
js
pop
icebp
ja
dec
jmp
mov
xor
ss
int
add
xor
xor
xor
call
jbe
lahf
dec
lret
cmp
aaa
test
imul
xor
pushf
jle
daa
and
mov
and
xchg
icebp
cli
pop
or
das
xor
jmp
jns
jns
in
jnp
mov
pop
jae
dec
mov
push
out
or
insb
cmp
std
popf
sti
popf
or
pusha
repnz
mov
cmp
xchg
and
and
lods
xchg
jg
mov
lods
xlat
js
sub
lahf
jmp
addb
imul
call
push
or
sbb
dec
cli
pop
jne
int
jne
push
inc
xlat
in
add
mov
mov
lds
dec
ret
out
xchg
rorl
or
aad
xchg
stos
cmp
or
pop
into
shll
lods
cwtl
test
sub
cmpsb
mov
mov
xchg
lods
jle
mov
jb
cmc
imul
sbb
pop
xor
imul
loopne
mov
dec
stc
in
pushf
outsb
sub
pop
sbb
push
inc
mov
xlat
aas
add
mov
mov
xchg
fdiv
sbb
sbb
xor
jns
fistps
insb
repnz
ds
xchg
cli
aaa
in
testl
jecxz
shrl
dec
stos
ret
pop
jnp
pop
sahf
cmpsl
jp
cmpsb
push
orb
shll
and
test
push
mov
clc
sti
std
and
adc
xchg
fs
daa
sub
sbb
sub
cmp
inc
adc
imul
arpl
jno
xchg
xlat
mov
das
mov
loop
shll
xor
dec
mov
push
sbb
lock
in
clc
shll
leave
cmp
or
fsubl
cmc
imul
mov
insb
add
pusha
cld
jo
les
xchg
cmpsl
push
pushf
pop
mov
jb
mov
and
jecxz
scas
test
call
shll
xchg
xor
xor
movsb
xchg
mov
push
push
bnd
insl
dec
mov
jne
push
lret
mov
sbb
sbb
imul
fiaddl
insb
sub
inc
jne
test
int
xor
xchg
daa
jmp
cmpb
int
loope
mov
imul
and
jo
insl
pop
ja
gs
repz
ja
orb
push
imul
out
comiss
js
cmp
or
pop
sbb
mov
shrl
stc
mov
ljmp
jno
pop
hlt
clc
inc
sbb
in
aas
movsl
push
std
xchg
imul
int3
inc
test
sbb
shll
adc
pop
and
fwait
push
movsb
pop
xor
sbb
sub
stos
jns
jnp
pusha
icebp
sub
aas
loop
sub
les
negl
out
mov
and
push
jns
ficoms
or
xchg
jp
dec
mov
jmp
add
sbb
testl
and
iret
test
dec
mov
fs
push
sub
pop
into
mov
cs
pop
addr16
cwtl
fcom
loop
sub
adcl
dec
and
push
sbb
pop
out
or
jge
jb
mov
dec
add
push
dec
push
cli
ret
fwait
cmp
cmp
fwait
adc
mov
push
ffree
mov
rcl
dec
stos
cmpsb
enter
jg
lock
add
js
inc
hlt
mov
mov
adc
cmp
mov
sbb
push
push
lret
ret
jmp
enter
jg
outsb
or
xor
icebp
repz
lret
dec
sbb
inc
pop
jecxz
fsubrs
and
mov
das
ja
xor
xchg
or
das
mov
jbe
fdivl
inc
sub
sbb
and
test
daa
je
fistpll
out
out
adc
jmp
inc
mov
sub
lcall
inc
inc
or
sahf
jns
or
ss
js
adc
mov
lahf
fmull
push
xchg
lods
and
aad
pop
sub
sub
cmpsb
xchg
xchg
aaa
cmpsb
movsb
mov
mov
shr
xchg
mov
in
into
out
in
cmpb
or
mov
jle
add
inc
sub
ficomps
xlat
scas
fiaddl
push
lea
cld
iret
push
and
pop
pop
jno
xlat
add
xchg
xchg
cld
int3
cmp
dec
jns
pop
insl
sub
fsubs
fdiv
xchg
or
inc
adc
call
ss
ret
test
xor
loop
fisttpll
mov
mov
adc
lret
pop
mov
adc
fidivs
mov
movsl
out
hlt
push
xchg
jno
cmp
adc
add
xchg
sbb
bound
jp
lods
add
pusha
bound
push
jecxz
jb
add
test
jne
call
cs
sbb
aam
insb
adc
mov
sbb
pop
and
dec
dec
sub
cmovno
cltd
outsl
in
pop
and
mov
insb
xchg
mov
jp
loopne
out
mov
out
or
xorl
cmp
jnp
sub
and
cli
sbbb
inc
mov
jns
inc
stc
inc
daa
add
mov
daa
jne
sub
mov
sub
test
dec
dec
cwtl
sub
mov
pop
insb
pushf
bound
ja
cltd
rclb
fcom
adc
xchg
shr
cltd
dec
fiadds
mov
inc
jae
ret
in
addr16
outsb
mov
sbb
cmpsb
mov
enter
rcrb
call
imul
sub
arpl
cmp
sub
out
lods
jns
shll
inc
sbb
inc
push
nop
in
sub
push
inc
jne
push
mov
fistps
xor
icebp
push
daa
xor
lcall
xor
std
mov
mov
mov
icebp
or
out
ucomiss
pop
lahf
js
mov
jle
and
cmp
inc
xchg
mov
xor
jne
cmpsl
popa
int
dec
mov
es
inc
rcrb
xor
ret
xchg
push
mov
push
mov
sub
sub
mov
mov
jb
ret
inc
shlb
andb
fisubrs
lret
jbe
pop
mov
add
sbb
js
sbb
push
jns
dec
sub
mov
daa
or
dec
mov
mov
cwtl
mov
daa
pop
rolb
jnp
test
lahf
jne
mov
inc
pop
push
xor
dec
lods
jb
or
xor
adc
xor
xorb
and
iret
gs
cmp
and
ss
outsb
inc
cwtl
jne
fsubp
mov
adc
mov
xchg
push
cmc
mov
stos
cmpsl
test
rorb
loop
push
xchg
adc
fidivrl
and
mov
mov
dec
jns
adc
stos
mov
jle
test
mov
or
repnz
rcll
inc
push
push
mov
inc
sbb
rcrl
cli
icebp
xor
and
and
sub
mov
jnp
and
push
les
adc
cmp
das
aad
dec
or
in
call
lea
cltd
or
addr16
lea
cmpsb
push
into
je
int
sub
mov
sub
cmpl
mov
lods
or
cmp
dec
jle
rorl
loopne
sbb
add
mov
les
scas
push
jg
lcall
repnz
xor
cmp
cmp
ja
test
insl
imul
xor
push
test
sbb
addr16
int
mov
out
fcoms
mov
fs
orl
lahf
push
scas
enter
lock
dec
loopne
add
clc
fucomp
cmp
jmp
loope
sbb
cs
sub
and
mov
mov
test
int
outsb
jo
in
mul
mov
and
pop
es
ljmp
in
sahf
mov
js
insb
sub
mov
out
loope
flds
push
dec
add
les
fdiv
cld
and
or
dec
mov
mov
ret
inc
mov
cmpsl
in
pop
and
ljmp
lods
pop
pop
inc
push
sbb
dec
hlt
xchg
repnz
stos
xlat
pusha
out
add
divb
or
daa
mov
popa
daa
rolb
mov
push
incb
xchg
fwait
xor
xchg
loopne
loope
sbb
sbb
lods
cmpsb
pop
mov
mov
pop
outsb
mov
movsl
cmp
mov
sti
sub
mov
push
pop
aaa
pop
aad
jecxz
out
push
jo
dec
jo
pop
and
jmp
stc
sub
jmp
test
fidivs
fildl
hlt
sbb
push
loope
add
mov
mov
sub
loopne
mov
push
push
jns
fld
push
mov
xor
sbb
sarb
sbb
call
or
or
mov
xor
sbb
sub
xor
cld
inc
test
push
inc
jecxz
jl
jp
dec
mov
cltd
xchg
rcl
adc
stos
clc
xchg
mov
out
sub
xor
xchg
inc
cmp
jmp
xor
xchg
cmc
inc
getsec
fcomps
aam
das
fistpl
jmp
adc
or
daa
push
jbe
cmc
cmp
xlat
push
divl
push
sub
cmp
push
xor
dec
shrb
stos
dec
call
lock
stos
enter
xchg
pop
xchg
and
in
xchg
sbb
lea
add
and
jle
mov
and
movsl
dec
scas
sub
push
adcb
ret
inc
jbe
jns
inc
hlt
inc
sub
daa
std
adc
and
out
flds
jp
iret
and
xor
or
jecxz
les
pop
fs
ja
inc
mov
jp
dec
mov
out
inc
push
add
jecxz
in
aaa
jecxz
mov
jmp
push
push
in
and
and
adc
xchg
popa
in
mov
hlt
stos
mov
or
adc
adc
movsl
xchg
inc
jg
sahf
clc
sbb
adc
pop
cmp
pop
pop
xlat
mov
inc
loopne
testb
es
les
insb
jecxz
inc
push
sbb
adc
inc
lret
adc
sti
popf
lret
mov
jbe
mov
stos
mov
addr16
mov
test
sbb
movsb
loope
insb
test
ja
and
ret
pop
orl
dec
jg
jns
fistl
xchg
pusha
mov
push
dec
pop
fcmovbe
and
pop
test
cmp
das
aas
xor
jl
insb
in
lds
cmpsl
sbb
loope
aas
cli
sbb
rolb
jno
out
mov
aam
mov
stos
aas
jle
ljmp
in
pop
add
push
stc
and
es
outsl
clc
jns
mov
sub
fmul
dec
int3
fbstp
xchg
outsl
dec
mov
fwait
mov
enter
push
scas
nop
lahf
dec
dec
test
inc
xchg
mov
fwait
sbb
inc
xchg
js
push
sub
push
pcmpeqd
mov
xchg
xor
inc
xchg
push
rcl
loopne
stos
mov
lock
jbe
sti
xchg
and
xchg
xor
and
nop
stc
lods
out
lods
mov
push
cltd
push
pop
cwtl
xchg
xor
mov
into
fldt
loopne
dec
loop
cwtl
sub
jo
loope
bound
pop
mov
into
and
cwtl
adcl
popa
xchg
insl
pop
xor
les
jne
pop
push
and
adc
stos
inc
in
ret
mov
lds
lods
es
incl
cmp
mov
mov
lret
mov
sub
lahf
pop
xchg
jge
mul
xchg
dec
mov
mov
push
push
sub
pop
repz
xchg
xchg
cltd
xor
mov
xchg
and
fisttpl
and
outsb
cmp
jnp
sahf
in
shll
cmp
aaa
xchg
ficoms
pop
int3
xor
filds
pop
scas
xchg
jp
out
mov
mov
or
sbb
fucomip
dec
inc
lcall
nop
lcall
sbb
or
gs
fsubr
or
add
and
pop
sbb
shlb
inc
cld
push
push
mov
push
or
adc
icebp
insb
lret
in
dec
jmp
and
push
ffree
adc
or
nop
test
pop
inc
xor
mov
pop
or
or
lock
push
pop
ss
aam
sub
adc
dec
push
sub
pop
dec
xchg
cmp
adc
add
cmp
mov
pop
loopne
sbb
cmp
sub
jae
sbb
jbe
in
rcll
test
jg
mov
and
iret
test
ss
inc
pop
ffree
mov
or
call
sub
enter
test
and
sbb
mov
adcl
jns
cli
loopne
in
ret
mul
pop
fisttpl
xchg
in
or
mov
outsl
and
and
test
sahf
mov
cltd
imul
push
push
cmp
icebp
mov
xchg
in
mov
pop
fisttpll
jecxz
data16
jp
pop
sbb
out
add
lods
mov
mov
lods
dec
test
ljmp
mov
jbe
and
ss
hlt
fdivrs
xchg
aad
lcall
or
mov
xchg
mov
sbb
out
mov
lods
mov
ds
outsb
sbb
pop
add
push
notl
addb
dec
mov
dec
push
in
sub
dec
or
xchg
popa
ss
insb
dec
and
lock
jno
iret
cmpsl
lds
mov
pop
enter
int
ret
aam
adc
das
xchg
cmovae
adc
loop
aas
adc
orl
pop
mov
push
lock
add
mov
std
outsl
cmp
mov
in
pushf
popf
out
adc
push
pusha
fsubrs
lret
adc
push
shl
pop
pop
push
cmp
lret
scas
dec
cmp
pushf
and
mov
jbe
les
out
and
dec
cld
pop
lahf
or
pusha
jb
jae
test
pop
aad
pop
in
add
or
imul
jmp
cli
or
mov
mov
loope
fildll
xchg
ficompl
xor
inc
enter
rorl
shrb
sahf
jns
addr16
push
out
sub
xor
frstpm(287
repnz
lds
out
outsb
fadd
je
jne
andb
addb
mov
push
out
push
add
and
sbb
mov
lahf
leave
inc
repnz
inc
test
jmp
lods
insb
ja
mov
iret
ljmp
inc
sub
stos
pmaxub
add
imul
outsl
bound
ljmp
bound
lret
out
shll
push
iret
inc
inc
in
movsb
mov
jecxz
es
dec
push
aas
mov
add
je
mov
mov
data16
fwait
push
shl
push
dec
sub
add
fists
mov
xor
pusha
cmpsl
rclb
rclb
movsl
cmp
sub
dec
insb
or
loopne
push
outsb
insb
xchg
roll
dec
addr16
sbb
jl
and
stos
fwait
and
inc
loope
orl
pop
arpl
or
jb
dec
dec
repz
mov
lahf
ljmp
mov
ss
lret
sbb
xchg
lret
and
lcall
jne
mov
ret
mov
iret
push
sbb
mov
out
jno
dec
int
mov
imul
push
popa
and
xchg
sti
lods
or
mov
in
push
inc
test
aaa
fdivrl
in
pushl
enter
mov
sbb
insb
xlat
scas
mov
test
push
and
aad
dec
sbb
push
fcos
xor
enter
loope
ret
repnz
sub
or
mov
lret
imul
das
pop
and
push
xor
mov
int3
into
sbb
shll
fs
out
test
dec
jmp
leave
inc
jno
xor
fbstp
xchg
into
or
fdivrl
inc
xor
stos
insb
mov
sarb
jmp
push
dec
rcrb
or
inc
ret
and
inc
pop
loopne
xor
notb
fcmovnu
or
and
outsb
sub
and
scas
jp
in
mov
mov
int3
js
lret
fs
nop
xor
lret
pop
jne
sub
inc
mov
dec
and
push
jp
ret
js
ljmp
call
cmp
sub
rclb
xchg
ss
int3
cmpsl
mov
mov
das
in
cli
jne
loop
out
mov
ss
dec
lret
cld
int
sbb
imul
pop
lahf
cs
decl
or
xchg
jns
rcll
mov
and
dec
adc
push
in
out
add
out
xor
cmp
and
lcall
pop
push
xchg
pop
mov
scas
cltd
ss
out
ss
out
js
and
fst
bound
dec
mov
pop
xor
pushf
add
mov
imul
mov
jmp
or
cld
jge
dec
push
jno
jecxz
jnp
xchg
rorl
idivb
mov
mov
pop
pusha
xor
lds
sbb
mov
stos
cmp
fst
ljmp
sti
mov
xchg
inc
scas
roll
iret
sub
adc
jo
xor
inc
fs
jne
pop
sub
jecxz
and
arpl
ds
add
data16
lea
xor
sbb
cmpl
fidivl
cmp
push
push
enter
mov
popa
sbb
ds
add
mov
and
push
push
addr16
add
xorb
lret
lods
jge
fidivrl
imul
fisubrl
in
jmp
xchg
jmp
aad
adc
mov
xor
and
mov
add
rcrb
test
addl
jge
mov
mov
icebp
test
mov
in
lods
pop
xor
add
fildl
sub
mov
out
mov
dec
mov
xor
push
das
test
mov
mov
add
sub
dec
fcoms
jmp
pop
lea
stos
push
xlat
or
std
mov
sti
scas
outsl
xor
loopne
iret
jmp
dec
rorb
dec
stos
mov
xchg
mov
cltd
bound
adc
lcall
xchg
mov
add
test
fldcw
adc
mov
mov
pop
add
jl
cli
test
ds
mov
nop
jns
jno
pop
clc
sub
push
inc
bound
push
xor
dec
add
cmpsb
es
push
inc
out
push
pop
mov
out
jle
sub
movsb
mov
stos
mov
jg
popa
and
push
dec
push
pop
jo
jmp
lea
dec
outsb
xlat
ljmp
ja
adc
aas
push
popf
lea
push
xorb
xchg
pushf
mov
sbb
and
xchg
mov
sbb
lar
mov
scas
call
add
sbb
xor
pop
insl
cmpl
push
mov
mov
adc
repz
in
or
cmc
pop
adc
jae
pop
push
mov
pop
lods
mov
mov
push
add
sbb
lea
fistpl
xlat
mov
xlat
imull
aaa
pop
and
jne
into
fucomi
and
imul
jge
sbb
or
dec
je
aam
in
xchg
sarl
arpl
and
in
ja
mov
jmp
and
lahf
jle
in
mov
mov
pushf
notb
subl
out
lods
push
inc
insb
imul
pushf
push
push
pop
aam
xchg
test
xchg
jne
adc
push
test
xor
cmpsb
arpl
or
fimull
cmpsl
fisttpll
xor
int3
dec
jne
repz
mov
xchg
mov
es
or
out
scas
cmp
pusha
sub
mov
pushf
ret
push
dec
dec
out
mov
xorl
rcr
pop
xor
stos
pop
mov
test
sti
in
sub
jno
aad
push
push
loop
push
sbb
popa
jnp
pop
push
lods
addb
lock
push
lahf
je
stc
je
lret
push
adc
push
addr16
icebp
addl
jmp
imul
adcb
and
divl
jge
jno
jecxz
push
pop
adc
paddsw
xor
xlat
dec
jl
mov
adc
add
into
mov
sub
xchg
mov
loope
add
popa
scas
scas
dec
cmp
xor
xor
xor
xchg
xchg
adc
sub
or
fmuls
and
or
sbb
loope
fnop
mov
stos
and
sti
mov
daa
sub
xchg
push
test
sti
adc
sub
mov
mov
sbb
es
push
inc
xchg
mov
fiaddl
jl
testl
sub
das
out
leave
stos
cmp
mov
incb
xchg
fwait
push
gs
leave
insl
jnp
cmp
clc
sbb
lods
sub
out
fsubrl
lods
add
push
push
jb
xchg
test
test
pop
leave
or
test
mov
cmpsb
mov
xorl
out
mov
push
jecxz
fwait
mov
mov
cli
xor
jmp
data16
shl
mov
in
divb
push
in
inc
or
repnz
adc
mov
shrl
mov
xor
fdivrp
lret
aas
xchg
icebp
mov
xor
inc
or
scas
cmpl
out
mov
out
cmc
ljmp
ret
mov
or
and
pop
cmp
mov
div
adc
push
test
cmp
jp
lods
les
int3
test
outsb
in
dec
push
adcl
stos
dec
xor
pusha
divb
movsb
jecxz
mov
inc
mov
test
popf
cmp
nop
fistpll
popa
cs
sbb
sub
daa
fwait
adc
je
add
inc
push
push
xchg
pop
xchg
push
and
shr
incb
outsb
jae
stos
out
cmp
in
dec
xchg
outsl
jnp
loopne
dec
ds
sub
outsl
push
push
pop
sub
out
xor
bound
pop
sbb
xchg
mov
jmp
adc
adc
sub
mov
inc
test
dec
add
enter
negl
sbb
dec
maskmovq
testl
xchg
loope
and
or
in
bound
loope
dec
hlt
push
mov
add
mov
or
data16
dec
xchg
movsl
add
mov
call
scas
push
stc
dec
data16
out
lret
ret
std
cs
sub
push
jg
mov
mov
inc
or
xor
pop
push
cmp
into
cmp
inc
dec
cmp
pop
in
fsubp
enter
pop
cmp
push
and
jle
xchg
fidivrs
jb
inc
cli
cmp
js
and
sbb
cli
int
mov
add
les
subl
ljmp
pushf
mov
or
jl
push
cld
fsubp
dec
repnz
xchg
mov
ret
js
add
hlt
mov
mov
adc
js
sbb
data16
ret
mov
inc
in
repz
lret
je
out
mov
sub
or
les
in
mov
jno
cltd
les
inc
loopne
enter
jg
mov
push
shll
or
jae
ja
xor
mov
cmpb
mov
push
and
inc
movsb
addr16
outsl
jp
mov
dec
sub
cmp
cmpsl
inc
divl
fwait
xchg
cmp
mov
mov
pop
sub
and
inc
cmpsb
mov
stos
call
ss
xor
imul
nop
js
call
mov
lods
add
fld
mov
ret
jo
mov
adc
dec
call
push
cld
jne
and
dec
xor
mov
fimuls
jnp
adc
mov
rcr
mov
daa
add
or
add
adc
push
sub
pusha
mov
sbb
adc
mov
fwait
xchg
mov
pop
daa
pop
xchg
das
rorb
xor
cmpsb
pop
call
push
cmpsb
add
ss
xchg
mov
jne
in
pop
xor
lret
inc
pop
add
jp
in
ret
or
xchg
test
and
lcall
mov
into
stos
cltd
jae
add
sbb
insl
in
mov
jecxz
or
outsl
icebp
mov
into
int
sarl
adc
in
add
mov
in
pop
call
out
xchg
fistl
adc
cli
push
push
pop
mov
pop
ja
push
lret
stos
adc
sub
jmp
sarb
push
and
ja
sub
ljmp
repz
or
popf
pushf
or
pop
jge
xchg
and
cmpsl
jge
pop
repnz
fs
movsb
lock
push
sub
mov
jecxz
orb
ret
inc
jmp
lds
cmpsl
mov
in
jae
inc
int
or
or
mov
push
jno
pushf
sub
mov
push
movsb
jnp
cli
xchg
push
add
and
fstpl
cld
cmpsb
les
pop
out
and
and
outsl
in
push
movl
and
imul
add
hlt
dec
inc
push
sbb
icebp
xor
add
fistpll
enter
aaa
fisttpl
mov
cmp
lock
insl
test
repnz
mov
jle
pop
mov
cmp
mov
jg
mov
test
push
movsl
repnz
into
in
mov
push
mov
out
mov
lret
inc
xor
cmp
hlt
mov
and
cmp
movsl
and
adc
loopne
sbb
pop
jp
xchg
push
adc
or
mov
jo
outsl
mov
pusha
or
sub
in
cmp
xor
fmulp
fs
inc
inc
iret
cmp
scas
cmc
aas
xchg
mov
fnstcw
sahf
in
add
loopne
lock
inc
xor
repnz
aaa
fs
setnp
pop
pop
sbb
jl
loope
or
xor
cld
xchg
inc
xor
mov
lret
mov
and
dec
stos
push
add
push
ljmp
cs
mov
mov
jge
outsl
in
mov
dec
sbb
inc
fwait
shll
or
jnp
mov
mov
imul
shlb
xchg
jecxz
cmovae
loopne
sub
xchg
cmp
loopne
and
sub
cltd
out
mov
imul
pop
xor
popa
inc
stc
gs
mov
add
fiaddl
dec
mov
subl
adc
and
stos
dec
or
mov
lods
popa
mov
xchg
jo
sub
jmp
pushf
scas
mov
ja
jecxz
or
in
lahf
mov
pop
or
jge
pop
cmp
mov
fnstenv
xchg
sub
and
xor
xor
lea
inc
or
call
cmp
pop
movb
mov
cmp
push
ds
fcmovbe
lret
testb
cmp
dec
lcall
mov
add
ja
addr16
out
outsl
jae
mov
std
push
fnsave
std
dec
lret
ret
ja
jbe
das
andb
imul
mov
dec
fstl
scas
sbb
adc
fadds
and
fimuls
mov
imul
push
jae
sub
fmull
mov
les
das
xor
xlat
adc
into
xchg
and
aad
sbb
dec
mov
sbb
mov
stc
mov
mov
xor
dec
push
rcrl
or
test
add
cmovl
mov
lds
cmpsb
pop
or
cmp
popf
outsl
mov
push
jg
les
mov
mov
xchg
dec
fstpl
stos
xchg
cli
xchg
cmpsb
mov
loop
jl
xchg
or
sarb
push
outsl
stos
repz
xor
lcall
and
push
rorl
mov
xor
and
mov
out
ret
faddl
cmp
jecxz
jbe
pushf
gs
ret
mov
pop
xlat
int
cld
pop
arpl
mov
mov
lea
bnd
ret
lds
inc
inc
xor
shl
xchg
add
push
dec
mov
dec
xor
fcomps
mov
arpl
xor
adc
in
ds
jne
loop
test
and
in
cmp
sbb
adc
dec
push
sbb
sub
pop
rolb
jmp
jecxz
out
mov
mov
cltd
mov
in
enter
sbb
jmp
add
dec
cmp
das
and
inc
xchg
sbb
mov
cmpsb
ret
push
push
stos
add
jmp
das
inc
dec
mov
jge
pop
lret
dec
mov
cmp
aad
lret
inc
fstpt
lret
add
fidivrl
pop
mov
cmc
sar
insl
lds
stc
lahf
out
xor
inc
xor
lret
das
cmp
andl
sub
ljmp
or
dec
aaa
xchg
int
mov
or
and
mov
fisubs
jns
sbb
sti
xor
or
sub
adc
mov
insl
push
lock
gs
jecxz
cmpb
push
divb
insl
push
dec
lods
cmp
mov
xor
jg
dec
or
xchg
lods
aam
lea
cmp
es
xchg
or
dec
mov
fmull
pop
push
jno
fwait
mov
xchg
fnstcw
sub
pop
adc
mov
xor
mov
mov
roll
add
or
shll
push
or
popa
cmpsl
je
mov
das
adc
xchg
mov
adc
cmp
mov
adc
xchg
sub
push
clc
pop
int
aaa
pop
je
hlt
xchg
mov
cmc
inc
mov
cld
test
arpl
xchg
out
subl
cmpsb
lea
mov
int
sub
lret
or
repz
jb
ffree
cwtl
mov
sar
cs
shll
outsl
ret
lods
jmp
cwtl
sbb
jnp
movsb
push
hlt
fistpl
cmp
sbb
lods
adc
cmc
jge
or
loopne
pop
jne
popf
ret
outsl
aas
int
pusha
adc
leave
mov
xor
shrb
sub
push
fs
xchg
test
mov
xor
popf
lods
pop
ja
jne
xor
push
test
notl
fstl
rcrl
test
jmp
cs
push
push
dec
jmp
repnz
cmp
push
aam
mov
push
lods
xor
mov
adc
aas
inc
movsb
jge
scas
mov
mov
push
arpl
js
pusha
lcall
lahf
cld
insl
psubsb
stos
mov
mov
dec
stc
pop
mov
iret
inc
inc
mov
popf
push
in
loop
je
or
bound
jns
sti
push
sahf
push
cmc
push
and
pop
inc
mov
sub
sbb
cmc
test
jns
inc
jo
xlat
aaa
cmp
add
inc
jge
inc
inc
rolb
ficomps
cmpsb
les
test
sub
gs
movsl
mov
shl
sahf
dec
add
add
out
or
mov
dec
das
sbb
roll
call
cs
mov
and
in
sbb
stos
scas
push
lods
popa
lods
or
jae
test
repz
lcall
imul
int3
rclb
jmp
jl
popa
lcall
xchg
jge
xchg
int
jl
fbstp
inc
ficomps
cmp
sub
adcl
imul
and
rcrb
xlat
mov
cmc
loopne
jo
sbbl
in
sbb
lcall
insl
mov
pop
arpl
push
hlt
jle
leave
xor
dec
push
arpl
xchg
inc
bound
jge
push
loope
aad
out
mov
mov
fs
add
add
mov
scas
cmpsl
fs
ror
mov
fnstsw
sti
and
fsubs
ljmp
cltd
popa
pop
cmpb
push
ret
iret
mov
mov
bound
adc
adc
nop
push
push
clc
lret
fucomi
shrl
test
mov
mov
pop
jne
xor
xchg
cmp
dec
fistpl
lods
xchg
sbb
fwait
mov
cltd
ds
in
inc
pop
ds
push
inc
test
in
popf
fmuls
js
imul
add
out
or
or
pop
adc
in
xchg
xlat
mov
leave
enter
dec
outsl
std
frstor
cwtl
pop
pop
inc
push
or
addr16
jb
sbb
ss
cmpsb
imul
adc
daa
les
push
cmp
push
int3
push
out
mov
out
lret
mov
ljmp
adc
out
push
jle
and
jmp
insb
jle
fldt
push
push
inc
lds
aas
subl
pop
add
jo
cwtl
dec
lods
mov
jmp
xchg
int
popa
popf
fdivrl
scas
stc
pop
or
out
aam
sub
dec
cs
push
ja
ret
into
sub
loopne
in
dec
ljmp
iret
add
scas
cltd
cmc
jp
or
mov
inc
sub
push
ljmp
je
dec
in
dec
ficompl
stos
jg
pushf
repz
in
in
sbb
mov
sbb
mov
dec
roll
mov
dec
add
jl
in
cmc
fwait
push
in
push
cmp
jo
test
xor
and
js
xor
aaa
add
sub
aaa
shrl
or
ficoms
mov
mov
xchg
push
mov
movsb
push
hlt
adc
inc
cwtl
push
xchg
add
jl
jne
xor
pop
sub
and
outsb
loope
mov
nop
push
or
les
fisubrs
or
and
out
xchg
clc
mov
or
push
xor
ret
jmp
gs
pop
movsl
mov
iret
mov
pop
adcl
cli
mov
xchg
push
and
imul
xchg
fdivs
fisttps
ror
scas
iret
vmread
jg
pop
mov
mov
test
cmp
xor
cmpsl
xchg
leave
cmp
sub
or
add
add
das
dec
outsb
in
xor
pop
hlt
shr
idivb
inc
xor
mov
xor
movups
xchg
xchg
inc
js
jae
icebp
test
rcrl
out
shrb
in
xchg
les
or
add
xchg
test
jl
xchg
loope
pop
or
jp
ret
mov
sub
pop
jl
shrl
dec
or
inc
int3
sbb
xchg
clc
jnp
xchg
cmp
mov
jg
or
sarl
in
xorl
inc
out
in
je
insl
nop
ret
pop
movsb
ss
cmpsb
aad
jo
outsb
js
mov
cmp
jmp
das
push
dec
popf
lahf
fwait
jl
daa
or
movsl
out
mov
rcll
imul
mov
cld
fisttpll
iret
scas
xchg
nop
mov
leave
mov
insb
inc
insl
xor
xchg
pushf
faddp
sub
insb
lods
gs
and
sbbl
mov
mov
stos
sub
mov
dec
bound
popf
fiaddl
sahf
or
pop
insb
hlt
adc
mov
sbb
jecxz
push
xor
inc
inc
xchg
rcll
pop
jnp
mov
imul
pushf
js
nop
add
jl
fldenv
push
cmpsl
jl
lret
dec
inc
pop
dec
cmp
xchg
rcll
enter
mov
sbb
mov
mov
mov
sbb
pushf
loop
mov
es
or
mov
popa
iretw
dec
fsubp
arpl
mov
sub
adc
jno
mov
js
in
sbb
mov
mov
pop
pop
addr16
add
jge
mov
push
mov
mov
leave
les
dec
dec
or
push
ljmp
sbb
dec
stos
mov
cwtl
mov
jl
jg
jnp
daa
mov
fadds
test
push
mov
enter
dec
push
in
adc
push
pusha
mov
jno
fistpll
je
jge
flds
inc
dec
xorl
sub
inc
cld
push
or
add
mov
or
pop
inc
adc
jmp
mov
imul
mul
push
jnp
in
out
push
stos
mov
xlat
mov
jl
leave
jb
xchg
mov
das
mov
xchg
or
sub
in
test
cmpsb
jmp
and
andb
pop
rcrb
jge
mov
lds
sarb
mov
cmp
jbe
inc
xchg
pop
out
rcrb
into
movsb
pop
and
push
je
fildl
adc
test
or
iret
pop
add
add
movsl
je
sahf
xor
pusha
add
push
mov
push
lcall
mov
pop
cs
push
mov
sbb
pop
and
popf
loope
call
popa
xchg
fmull
mov
inc
popa
lahf
sub
lea
cmpb
mull
nop
int3
lds
inc
dec
pushf
andb
push
addl
push
iret
mov
xchg
fimuls
inc
pop
adc
and
push
adc
lea
cmpsl
pop
sbb
or
fisubrs
push
cmp
push
xchg
jb
sub
push
sahf
repz
and
push
jge
aad
test
mov
roll
sbb
adc
mov
insb
pop
push
mov
push
pushf
xchg
dec
lds
out
mov
pop
fxch
cmp
or
inc
stos
push
or
sub
nop
add
dec
push
addl
mul
xchg
dec
dec
xchg
iret
push
adc
scas
mov
or
add
jbe
cmp
es
inc
dec
gs
js
aad
rcl
loope
pop
fbld
mov
xchg
enter
add
loopne
pop
test
outsl
or
out
fbstp
imul
fstpt
xor
xlat
ds
ret
adc
fnsave
cmp
adc
stc
je
nop
sub
xchg
cmpsb
or
dec
notb
rorl
gs
lahf
clc
arpl
xchg
fxch
sbb
pop
mov
js
mov
fmull
mov
cltd
push
xlat
enter
sub
in
jnp
pop
mov
sahf
dec
mov
adc
sbb
xor
out
jl
mov
mov
sbb
fisttpl
pop
pop
js
jo
pop
xor
ja
or
adc
mov
repz
xchg
push
outsl
das
lods
mov
xchg
nop
ds
cmc
lock
cmp
les
iret
divb
cli
in
jmp
test
shll
incb
lret
adc
mov
inc
test
xchg
xchg
push
mov
mov
xchg
ja
xchg
fcomps
sub
cmp
dec
xor
repz
sub
mov
push
stos
jmp
mov
bound
stc
rol
ja
mov
or
mov
push
sub
and
in
mov
cmp
cli
andb
icebp
cltd
dec
loop
push
push
xchg
clc
ud1
jle
lock
mov
mov
lret
mov
or
out
icebp
cmpsb
push
popf
mov
fbstp
xchg
imul
xchg
ficomps
cli
or
pop
pop
mov
mov
ss
mov
lret
push
sbb
dec
sub
fwait
mov
xchg
repz
xor
add
int3
in
loopne
push
icebp
adc
fisubs
cmp
lock
outsb
nop
js
ljmp
iret
fdivrp
cmp
xchg
push
lods
sbb
shll
iret
and
sub
ljmp
std
into
addr16
fisubrs
cmpsb
nop
outsl
lahf
xchg
adc
les
fadd
cmp
cmp
sbb
sbb
adc
stos
pop
dec
push
mov
sbb
push
and
push
push
mov
out
dec
nop
in
mov
inc
fs
sbb
mov
jle
cmp
xchg
jge
or
or
add
jle
ret
aam
add
jno
ds
cmp
mov
outsb
jae
and
jecxz
lods
pushf
fcoms
and
add
mov
lods
fistpll
loop
cmpb
cmpsb
jns
mov
scas
sub
ret
pop
inc
jge
out
jo
movsb
mov
test
add
adc
subb
or
and
mov
daa
lock
xor
in
movsb
mov
mov
sahf
xor
add
or
rcll
leave
jo
hlt
fisttpl
roll
adc
subl
push
or
adc
push
or
inc
lret
jns
int
pop
lods
popf
sarl
adc
mov
push
ljmp
jmp
inc
lods
stos
int
les
sbb
mov
ret
testl
mov
cmc
test
jae
cmp
xchg
outsb
mov
inc
dec
cli
call
mov
mov
mov
cmp
inc
cs
xchg
js
pop
jecxz
jnp
outsl
fs
xlat
cmp
fwait
mov
int3
pop
or
mov
fdivrl
icebp
push
mov
push
push
dec
out
outsl
fiadds
push
xchg
inc
jmp
mov
scas
repnz
sub
lock
inc
lcall
fists
inc
outsl
mov
data16
add
push
xchg
imul
pop
dec
sbb
sahf
and
subb
pop
rolb
out
and
cmp
mov
mov
adc
in
and
mov
icebp
jecxz
sub
icebp
je
negl
aam
xchg
push
fildl
nop
aad
xor
rcrb
rorl
pop
adc
sarb
mov
xchg
jmp
arpl
push
sub
push
inc
mov
xchg
ficoms
inc
movsl
add
ja
ja
loop
xchg
and
iret
lds
cmpsl
sbbb
mov
lds
mov
int
in
std
aas
int
sub
inc
cmp
movsb
js
xchg
jecxz
jge
scas
js
lret
test
fwait
and
stos
in
fildl
rorb
arpl
icebp
and
imul
in
loope
test
cmp
call
fldt
pop
sub
mov
loop
push
mov
cmp
xchg
xchg
loope
inc
sub
mov
and
pop
movsl
rcll
or
add
insl
xorb
mov
hlt
add
inc
adc
rolb
repnz
jo
xchg
jo
hlt
ss
dec
fiadds
cmp
xchg
rcrl
or
cmp
push
or
cmp
pusha
fcomp
aad
push
inc
aam
sbb
xor
test
into
fcom
cld
inc
ret
lea
mov
sbbb
negl
cmp
pop
cwtl
cmp
push
inc
das
pop
mov
stos
cmp
jbe
enter
ret
je
test
mov
dec
fwait
cmpsl
adc
pop
adc
aam
dec
adc
push
test
xor
mov
loop
je
mov
push
clc
pushf
rcll
mov
lret
push
mov
mov
mov
cli
dec
rcl
dec
ss
shl
test
push
xchg
or
xchg
jne
movl
das
mov
add
es
sub
cmpsl
and
mov
or
ss
rorb
stos
mov
ljmp
movsb
add
mov
fwait
push
pop
cld
out
scas
std
push
mov
scas
inc
icebp
lcall
imul
lret
dec
scas
inc
and
in
xor
test
and
or
dec
pop
sub
jne
ljmp
xchg
fdivrl
scas
cmpsb
adc
notb
pop
fstpt
inc
sbb
cmp
popa
into
sti
in
cmp
loop
mov
ss
daa
lock
in
xchg
xor
mov
cld
xor
jb
incl
pusha
jp
and
shrb
dec
inc
cmpsb
jb
inc
sbb
popa
out
ret
lcall
mov
in
lcall
inc
popa
mov
std
mov
sub
or
add
in
loop
fstpt
ds
cld
adc
or
or
fwait
call
shlb
sub
repnz
mov
cmp
lret
xchg
xor
pop
pop
cmpsl
mov
outsb
xchg
popa
scas
cmp
mov
repz
sbb
or
imul
mov
enter
addr16
loop
mov
pop
rorb
push
jne
inc
jo
inc
xor
sbbl
adc
shll
xor
push
fs
addr16
ss
add
mov
into
jnp
cmp
xchg
mov
call
xchg
sbb
mov
mov
fidivrs
jno
popf
in
dec
repz
and
call
and
lret
dec
repz
jg
in
mov
and
loope
and
sbb
aas
cmp
add
adc
jbe
adc
andb
jne
mov
pusha
fisubs
rorl
jb
xchg
add
mov
bound
push
and
shlb
adc
sahf
dec
mov
movsl
dec
aad
pusha
in
push
std
lods
jno
test
adc
fldcw
int3
xchg
xchg
out
dec
and
decl
in
iret
nop
jmp
inc
test
js
stos
clc
sti
sub
jo
outsb
ss
or
lea
movsl
or
outsl
stc
adc
push
jbe
rcl
aad
mov
xor
or
xor
int
mov
inc
add
or
das
xchg
int
jle
sbb
push
mov
or
loope
jb
mov
clc
shlb
ret
cs
sub
data16
nop
pop
mov
adc
adc
js
shlb
lea
shlb
cltd
push
sbb
movl
or
sahf
sbb
push
cld
sub
movsl
jle
repz
sub
lea
in
cmp
pop
repnz
aad
dec
push
rorl
jne
sub
ljmp
mov
inc
cltd
imul
outsb
shl
pop
mov
inc
cmp
push
add
daa
fs
cmp
es
int
int
enter
sbb
lods
lret
fsubl
jmp
mov
sbb
pop
xchg
mov
push
jnp
in
inc
push
mov
sbbb
fnstcw
out
fnstsw
mov
xchg
repz
and
xchg
out
fcmovnbe
xchg
in
xor
sbb
jo
int
les
aad
xchg
jb
lcall
shrb
mov
push
je
outsb
xlat
fstps
and
push
xor
out
icebp
jmp
mov
ss
scas
repz
pop
cwtl
sbb
mov
js
andb
repz
xchg
mov
pop
adc
fsts
inc
mov
sbb
repnz
cmp
mov
jg
in
and
ljmp
cmpsb
cmp
mov
adc
out
bswap
stos
adc
jo
aam
and
add
ja
dec
mov
test
xchg
push
jae
pop
adc
sbb
mov
mov
or
orl
in
out
data16
sbb
pushl
dec
cmpsl
mov
cltd
sub
clc
push
or
sbb
xchg
and
lcall
and
xchg
or
dec
loope
xchg
subl
push
imul
add
iret
aas
lds
and
dec
int3
jmp
push
std
push
mov
dec
filds
jbe
js
repnz
jl
into
dec
dec
mov
stos
sbb
lahf
mov
push
cli
sbb
popf
jne
jmp
rcr
in
xor
inc
aam
ds
stos
mov
or
or
dec
cli
pop
mov
enter
push
mov
shlb
mov
xor
sbb
xor
or
ja
sub
inc
sub
adc
cltd
stos
mov
inc
ljmp
ds
or
out
cwtl
or
ljmp
add
xor
mov
xchg
mov
sub
mov
xchg
arpl
in
pop
stc
and
ja
and
pop
pop
fmul
sub
sarb
mov
add
stos
sbb
push
sub
dec
push
xchg
inc
jbe
rcll
pop
aad
pop
lds
fnsave
add
into
lret
bound
test
lcall
lea
out
test
cmc
test
sbb
popf
mov
sbb
add
or
ficompl
dec
adc
shlb
jg
test
dec
dec
jge
aam
cwtl
lret
mov
pop
inc
or
loope
rcrb
mov
inc
lds
imul
adc
sub
outsl
fnsetpm(287
pop
inc
or
mov
pop
ror
iret
and
sbb
cmp
mov
out
xor
aam
aaa
dec
mov
cmpsl
test
add
lcall
cwtl
jo
inc
int3
stos
pop
jno
add
push
adc
adc
dec
stos
scas
leave
cmp
ret
nop
cmpl
push
jle
add
push
mov
jg
push
fstl
mov
sbb
dec
cmc
and
ds
xchg
cwtl
nop
push
fbld
mov
cld
mov
adc
jmp
push
aam
adc
sahf
lds
aad
and
sub
fists
xchg
sti
test
rcr
adcl
adc
loopne
mov
jns
les
imull
xor
pop
fcomi
and
fistl
jp
xchg
cmpb
mov
add
test
insl
adc
pushf
cs
repz
stos
in
mov
icebp
or
scas
xchg
sbb
popa
sbb
dec
movl
cmp
mov
popf
dec
cmp
outsl
hlt
scas
mov
xchg
mov
cltd
add
movsl
jmp
push
mov
xchg
cmp
jecxz
adc
out
xchg
cmp
scas
sub
mov
adcb
fucom
mov
std
popf
out
shlb
aam
fs
pop
test
shlb
stos
xchg
mov
cmp
stos
insb
pop
sub
xchg
mov
test
cmp
scas
xchg
cmp
mov
jl
popf
and
add
loopne
loop
loope
imul
popf
mov
mov
ret
inc
cmpsl
imul
adc
inc
rcll
jno
clc
mov
call
add
add
inc
pop
ja
push
decl
push
xchg
sarb
jne
iret
add
jne
out
loop
and
dec
arpl
push
mov
sub
test
in
jbe
mov
and
add
test
imul
mov
push
xor
pop
fs
push
push
fldl
xchg
scas
mov
pushf
jp
or
data16
and
cli
rol
insl
xchg
pop
jbe
jb
add
idivb
adc
adc
inc
push
pop
dec
mov
xchg
aad
adc
mov
mov
in
pop
xchg
inc
inc
pusha
aad
aaa
insl
das
or
jns
inc
fsts
hlt
push
lea
xor
pop
mov
loop
leave
hlt
and
push
rorb
divb
call
push
aaa
movsb
mov
cmp
repnz
into
dec
daa
test
ljmp
in
imul
cmpsl
stos
or
push
jecxz
add
cli
add
shrb
repnz
or
or
jecxz
cld
pop
push
dec
stos
xchg
xchg
aam
jmp
popl
push
mov
cmp
jno
movsb
ret
and
test
dec
int
hlt
xchg
das
mov
or
test
fisttps
pop
ljmp
or
in
fnstenv
pushf
sbbb
xchg
movsb
mov
push
cld
sub
aaa
in
test
stos
out
lds
cmp
ficompl
jle
push
scas
inc
sbb
jns
movsb
mov
mov
push
xor
imul
clc
lods
adc
data16
push
push
inc
xor
mov
aaa
mov
lahf
movsb
jge
jbe
adc
mov
jmp
ret
pop
add
mov
int3
jb
inc
cmc
in
jle
adc
imul
cmp
sbb
stc
insl
add
or
push
mov
or
or
adc
jecxz,pn
sbb
dec
ljmp
ds
xchg
mov
sbb
adc
xor
stos
mov
push
iret
mov
test
xchg
push
faddl
iret
or
lods
test
fs
sbb
push
cmp
addr16
dec
iret
push
mov
fidivrl
xchg
stos
add
test
mov
xor
in
adc
ret
repz
sub
cmp
mov
cmp
mov
mov
dec
movsb
mov
pushf
sub
adc
add
fwait
push
pop
test
ret
mov
adc
add
dec
clc
rol
cmp
inc
push
push
clc
and
push
ret
idivb
xchg
mul
jne
mov
jae
mov
adc
cld
fidivs
inc
out
addr16
pop
mov
mov
lds
fistps
push
dec
and
jg
outsl
scas
loope
movsb
xchg
xchg
and
aad
mov
mov
imul
fnstsw
mov
lods
push
in
cmp
inc
sarb
jb
lods
sbb
push
mov
adc
adc
push
jae
out
dec
frndint
xlat
test
add
jne
xor
add
cltd
inc
daa
pop
pop
inc
cmp
lahf
aam
in
test
jl
lods
ljmp
xchg
in
iret
aaa
gs
and
jl
insl
and
sub
icebp
inc
fcompl
jbe
insl
jecxz
cli
loopne
jbe
push
xchg
fisttpll
push
out
sbb
and
arpl
jle
gs
xchg
xchg
popa
popf
push
cli
mov
xchg
aam
xor
lea
test
jno
cld
jge
cmp
xchg
aam
jns
xchg
xchg
imul
or
inc
pop
jne
mov
rcll
mov
sub
xchg
fstpt
and
add
mov
subl
sbb
jno
sbb
into
and
rcl
push
aam
out
mov
test
cmc
in
push
mov
mov
or
cmp
lods
mov
sub
xchg
fisttpll
adc
ftst
and
jl
shll
mov
lcall
loop
or
push
push
add
sbb
mov
fsts
shll
sbb
shll
pop
dec
ret
mov
and
sbb
dec
fnstsw
mov
adc
cmp
xchg
xor
and
js
cmpsl
arpl
fs
push
shr
loope
xor
ret
lret
cli
mov
popa
xchg
or
add
and
sub
ret
or
xchg
and
jmp
wrmsr
xor
add
dec
mov
xchg
mov
or
pop
push
adcl
mov
orl
out
cmc
aam
sbb
mov
pop
movsb
pop
jbe
sub
bound
imull
cs
xchg
inc
mov
sbb
push
call
push
aas
mov
jp
push
jmp
cmp
push
mov
out
clc
xor
mov
imul
push
in
mov
jne
jg
rorl
add
dec
dec
sbb
pop
insl
popa
xor
jp
mov
out
negl
push
das
cmp
adc
shlb
rcll
mov
sti
pop
jp
inc
rcr
imul
mov
test
adc
aaa
pop
xchg
sub
sub
pop
dec
mov
mov
int
dec
adc
and
hlt
xchg
dec
fisttpl
int
inc
add
insb
cmp
je
adcl
pop
push
lods
xchg
fistps
mov
div
test
sub
add
mov
lahf
or
pusha
push
mov
movsl
push
dec
aam
mov
mov
ja
pop
movsb
inc
lds
sub
popa
cltd
aam
jg
xchg
add
jle
lret
or
jg
pop
jg
push
aad
jno
inc
ret
pop
ss
in
cs
in
repz
int3
scas
jbe
lea
aam
notl
cmpsl
loopne
inc
jmp
rolb
and
ja
xlat
inc
je
lods
push
int3
pop
cmp
scas
adc
test
xchg
loopne
in
hlt
fisubrl
sbb
sub
push
adc
lds
jne
add
dec
das
inc
imul
dec
cmpsl
add
push
dec
xchg
fldl
loopne
mov
jg
or
into
sub
jmp
push
rorb
das
mov
stos
pop
arpl
in
aas
adc
movsb
and
pop
dec
push
cmpsl
int3
jns
pop
fucomp
pushf
aaa
mov
jo
mov
repz
xchg
call
leave
mov
ror
cmp
popf
sub
inc
mov
out
push
cmp
leave
or
insl
push
pushw
out
pop
mov
jae
lods
or
sti
fs
in
jns
adc
mov
adc
adc
notb
and
and
jmp
in
add
or
scas
sub
cli
push
cmovno
mov
or
lock
push
xor
call
icebp
loope
pop
je
cli
bound
xchg
or
mov
pop
adc
mov
mov
cmpsl
push
fldcw
inc
cmp
lret
test
xchg
jnp
mov
aad
shlb
pop
int3
pop
push
or
inc
shl
sub
movsb
cli
adc
cmp
call
jp
xchg
xor
pop
cmpsl
jbe
das
dec
andb
cmp
imul
mov
pop
xchg
das
and
sti
pop
push
xor
xchg
iret
fcompl
inc
jnp
xchg
add
lahf
adc
jo,pn
pop
loop
xchg
andl
push
ja
and
lret
push
dec
add
cmpsb
push
xor
sbb
xchg
in
adc
sbb
ficoml
adc
nop
push
push
popa
imul
lds
arpl
pop
scas
mov
mov
jle
imul
movsb
es
repnz
mov
add
in
jmp
adc
insb
mov
add
or
movsb
adc
mov
rorb
mov
jne
fs
xchg
pop
out
jmp
adc
xchg
insl
jg
push
push
ds
add
mov
jo
shlb
dec
js
push
push
fldenv
ficoml
movsb
daa
leave
lcall
mov
jns
add
or
fldl
jle
int3
popa
xchg
testl
or
shll
jmp
cmp
xor
mov
out
test
pop
push
sahf
sbb
cli
enter
ds
test
xchg
bound
cli
repz
xchg
bound
in
lfs
jbe
pop
nop
dec
mov
push
push
test
cli
clc
aad
sarb
insl
xor
xchg
cs
push
int
mov
and
xlat
insl
jae
sub
cli
xchg
lahf
fldl
or
cld
gs
sub
fcomps
in
push
lret
ret
pop
into
rolb
xor
jnp
xor
and
inc
inc
mov
lahf
repz
in
mov
xor
sar
cmpsb
mov
xchg
push
loop
and
out
or
nop
adc
or
adc
ret
in
out
int3
xchg
aad
std
mov
mov
inc
adc
sbb
mov
loopne
mov
stos
test
outsl
rol
inc
add
push
mov
or
jae
or
mov
repnz
lods
xchg
addr16
fistpl
inc
push
jno
int3
dec
mov
or
and
test
push
test
mov
aam
jae
nop
pop
nop
xchg
inc
sbb
jecxz
imul
insl
mov
cld
jp
popa
cmp
mov
sub
into
icebp
or
mov
push
mov
in
add
adc
shlb
iret
cmp
filds
or
sbb
test
jmp
addr16
xchg
ja
ret
dec
dec
mov
jg
push
aas
inc
cmc
shrl
sub
xchg
xor
xor
jns
mov
adc
mov
fdivs
mov
out
push
into
je
lcall
icebp
push
popa
pop
cld
jecxz
les
roll
xchg
inc
movsl
mov
ds
sub
idivl
mov
mov
jle
xchg
jbe
push
push
pushf
or
loope,pt
sbb
js
mov
stc
mov
arpl
push
mov
xchg
xchg
dec
cmpsl
in
shl
cmpsb
cs
jnp
ds
and
fcmovb
into
inc
icebp
dec
sub
pop
jmp
testl
mov
out
mov
lahf
sbb
xor
pop
adc
add
fwait
lret
mov
sub
sub
mov
xor
xor
jno
out
pop
mov
xchg
lods
or
push
repz
lcall
mov
mul
lods
xchg
or
cmp
aas
add
cmp
lods
xchg
xorl
inc
pop
stos
inc
add
and
nop
xchg
cld
xlat
int3
stos
dec
js
mov
loope
and
jmp
push
nop
add
jecxz
pop
test
movsl
in
cmp
add
or
aam
mov
leave
pop
in
cmc
and
dec
adc
cmpsb
aas
push
cmpsl
push
cmc
push
in
and
pop
fnsave
pop
xor
or
sbb
mov
imul
pop
subl
or
ja
sub
pop
adc
lcall
add
mov
imul
dec
adc
mov
fdivs
pop
or
add
mov
pop
test
inc
popa
sbb
jnp
in
je
mov
loopne
pop
pop
mov
inc
rorl
and
aaa
cmovl
push
or
fisubrl
xor
sub
mov
and
aaa
sarl
xchg
xor
aad
pop
frstor
jp
sbb
sbb
push
sbb
fsub
out
or
adc
push
cmp
incl
pop
dec
mov
mov
ret
filds
mov
jge
push
dec
in
sub
cmp
insw
mov
dec
movsl
jmp
scas
imul
cltd
lods
aas
sub
jbe
daa
call
in
lea
inc
xlat
out
shrb
and
pop
out
or
lret
sets
pop
jp
jbe
mov
int3
icebp
xchg
pop
aam
xor
jle
xchg
out
mov
or
negl
lahf
cmp
pop
ret
sti
mov
fbld
push
push
je
xlat
jno
push
mov
pop
int3
add
adcb
daa
bound
int3
inc
sub
xor
push
rorb
ret
fnstenv
mov
fnstcw
add
push
frstor
adc
lahf
in
stc
and
mov
pop
lods
dec
xor
mov
ljmp
mov
popa
xor
stc
xor
mov
xor
lahf
fxch
pop
or
sub
adc
bound
xchg
xor
add
adc
add
jecxz
aam
push
jmp
lods
or
orl
adc
pop
dec
mov
orl
lret
pop
jl
fdivrs
fwait
mov
out
mov
mov
sbb
cmpsl
insl
dec
roll
rcll
inc
add
inc
cmp
jne
xor
xchg
aaa
lahf
icebp
sub
testb
push
cmp
mov
push
xchg
pop
stos
das
sbb
jge
callw
or
sahf
push
push
pop
imul
loop
mov
sbb
xor
push
aam
in
insl
cmp
jg
andl
jbe
mov
hlt
jge
pop
sbb
cmpl
sarb
xchg
fs
xor
repnz
jno
and
repnz
mov
jns
and
or
out
ret
pop
fisttps
gs
mov
rep
add
add
inc
aas
rcrb
repnz
insb
fwait
int3
xor
pop
lods
pop
clc
loopne
pusha
inc
pop
in
jp
pop
push
or
das
addr16
lret
mov
dec
js
test
ss
insl
dec
push
mov
jg
fldenv
jb
iret
cmp
clc
lahf
hlt
pop
fucomp
mov
outsl
jae
sub
sub
repnz
mov
loope
jl
or
in
in
shlb
call
mov
push
rorl
aad
sbb
mov
andb
out
mov
xchg
fadd
or
mov
into
sbbl
mov
jp
xor
inc
or
nop
lea
lahf
add
test
jmp
imul
pop
leave
sub
les
sbb
popf
jecxz
pop
enter
jl
pop
push
sub
cmpsb
lcall
mov
stos
std
dec
and
aaa
inc
xor
inc
push
fstps
sbb
ficoml
jae
mov
int3
sbb
test
popa
cmp
add
inc
cmp
mov
add
data16
shrb
push
adc
xchg
mov
cmpsl
xchg
mov
dec
cmpsb
mov
pop
aas
sub
or
inc
mov
pusha
or
loope
and
shll
mov
jle
hlt
xchg
sub
dec
fstl
sub
sbb
div
or
push
adc
dec
or
pop
xor
jno
inc
pop
jecxz
add
xor
scas
and
insl
shl
pop
mov
xchg
pop
push
push
and
mov
and
push
movsb
xlat
jg
push
or
adc
add
std
mov
add
dec
adc
push
pop
test
fs
mov
fstps
add
arpl
jl
mov
xchg
cmc
mov
xchg
add
jo
push
push
xlat
inc
push
cld
out
stos
jo
outsl
test
xor
bound
add
sbb
or
mov
mov
insb
dec
gs
mov
in
mov
mov
xor
pop
andb
cmc
inc
inc
cwtl
pop
and
push
out
clc
out
scas
jne
cld
std
adc
mov
pop
adc
mov
xor
mov
push
sarb
in
jns
xor
stos
cmp
aam
into
mov
shll
adc
mov
pop
movsl
add
adc
sub
ss
dec
sahf
adc
push
les
xor
xor
and
mov
gs
cmc
loope
push
mov
sbb
dec
call
rcrl
mov
pushf
cs
cmp
movsl
jb
add
fdivs
mov
cmc
mov
push
fsts
dec
jns
cld
sahf
pusha
inc
lods
or
repz
mov
test
adc
out
xchg
and
aaa
rcll
pop
daa
adc
sbb
mov
cltd
pop
inc
stos
xor
jb
sbb
push
jb
in
add
popf
hlt
push
into
leave
mov
lds
pop
popa
adc
movsb
jbe
pop
clc
and
test
xor
adc
jnp
sbb
mov
sti
mov
fcomps
cmpsl
add
leave
fbld
mov
stc
xchg
push
jb
fs
stc
push
dec
inc
push
mov
inc
ret
cmp
push
mov
inc
cltd
das
inc
inc
and
outsl
or
imul
std
icebp
ljmp
lea
sub
mov
push
add
jno
stos
inc
fs
ret
aaa
aaa
mov
jge
dec
test
lds
jg
iret
adc
loop
pushf
pop
lret
jb
mov
cmpsb
xor
bound
clc
popf
scas
mov
pop
stos
pop
xchg
lret
mov
adc
add
adc
lods
mov
test
sub
fnstenv
inc
dec
addr16
cwtl
lods
pop
lret
into
es
xor
bound
lds
cmp
stos
push
cs
jp
fisubs
xchg
outsb
movsb
dec
xor
pop
testl
xchg
push
push
fistpl
stos
push
mov
fucom
out
pop
push
xor
ret
stos
sub
adc
ljmp
out
mov
cs
ja
xchg
popa
dec
sub
notl
fsubl
xchg
lret
xor
jl
subb
dec
push
imul
pop
jno
dec
mov
push
cmp
xchg
push
call
cmp
mul
into
je
jecxz
test
sti
pop
adc
lea
mov
movsb
xchg
test
add
inc
dec
fstpl
sbb
sub
adc
scas
orl
fcmovnb
inc
push
lret
sub
or
or
sub
in
jb
jb
xor
push
repnz
and
xor
imull
inc
xor
dec
call
cmp
std
xorl
loop
call
fisubrs
es
pop
add
out
sbb
clc
mov
push
out
xor
xchg
add
and
jne
xor
mov
sti
add
inc
jno
cmp
pop
mov
int
inc
mov
stos
lds
pop
xchg
push
inc
lods
nop
adc
inc
sub
movsl
mov
xchg
mov
sbb
mov
jmp
fldcw
stos
repz
lret
call
test
lods
or
dec
jge
test
sbb
lret
in
jmp
aam
xor
es
or
leave
xchg
inc
pop
pop
movsl
out
pop
test
dec
cmp
cmp
pop
dec
test
outsl
sbb
jle
and
xchg
push
adc
adc
inc
call
xchg
mov
jae
aad
mov
stc
or
mov
movsb
jge
pop
lcall
lahf
pop
mov
push
sahf
xchg
jns
xchg
outsb
js
scas
sbb
push
jmp
xchg
jl
mov
inc
push
dec
aas
popf
xchg
call
les
popa
and
xchg
ds
cwtl
outsl
push
rcll
repz
stos
ljmp
sub
jle
negb
adc
sbb
mov
lods
fimuls
outsl
jns
cmpsb
or
in
stos
movsb
xchg
dec
into
mov
or
pop
adc
int
addr16
faddl
repnz
test
push
stos
into
dec
or
fstl
repnz
scas
popa
sub
pop
xor
hlt
stos
add
jmp
faddl
pop
push
or
mov
or
dec
pop
xchg
stos
mov
mov
dec
iret
outsb
ds
push
or
push
out
pop
push
mulb
xor
in
js
add
negl
push
lods
int
mov
mov
fisttps
sub
addr16
cmpsb
movsl
jne
dec
loop
mov
sbb
outsb
xchg
sbb
mov
xchg
xor
push
sbb
xor
adc
repz
mov
mov
out
cs
push
out
pop
mov
in
ds
idivl
sub
sbb
fcomp
sub
jg
sub
sbb
or
xorb
inc
stc
mov
cmp
mov
mov
cli
rcrl
pushf
sbb
jne
stos
add
pop
cmpl
cwtl
jb
or
xchg
jno
lds
rcll
add
fisttpll
sbb
adc
pusha
stos
testb
movsl
mov
inc
rol
test
and
or
in
sub
jns
negl
mov
insb
pop
aam
sbb
xlat
test
add
insb
imul
aam
pop
jl
lahf
sbb
adc
sub
and
push
stos
fildl
ss
xor
aas
mov
add
adc
inc
inc
iret
movsb
fidivl
jp
dec
mov
dec
push
and
xchg
cmc
inc
aam
pop
test
out
nop
setbe
movsb
sbb
in
ffree
cltd
cwtl
add
dec
sahf
ret
lahf
js
test
js
ficompl
aam
sbb
jge
aaa
push
dec
mov
pop
lcall
ret
pop
inc
add
inc
jno
test
ret
mov
mov
lea
outsb
pop
and
stos
xor
lods
push
repz
cmp
xor
or
jecxz
shlb
lds
pop
mov
mov
imul
loopne
mov
addl
test
xchg
adc
dec
call
cmp
cmp
les
xor
inc
stc
push
xor
add
xor
sbb
insl
push
push
or
sbb
fcoml
leave
sub
movsb
lods
jb
dec
or
movsb
iret
push
mov
stc
jne
adc
dec
push
gs
lcall
inc
add
std
dec
repz
sbb
dec
push
sub
jns
jge
into
dec
out
push
dec
xlat
cmc
incb
xchg
xlat
out
sbb
sbb
test
xor
jns
mov
aas
inc
pop
lret
loopne
jnp
lods
cmp
xchg
or
push
mov
or
fistps
adc
jp
and
je
cmc
pushf
sub
push
xor
and
cmp
int
pop
lods
inc
sub
inc
mov
cs
scas
in
testb
pop
mov
push
xor
rcrb
push
int3
push
ds
fdivl
in
sub
ja
jnp
lods
pop
and
in
fwait
cmp
push
jnp
and
lds
jae
mov
cmp
push
jnp
arpl
jb,pt
inc
pop
mov
lods
inc
sub
xor
decl
shlb
xchg
jae
sbbb
push
aam
rclb
mov
inc
fcmovu
bound
mov
mov
fistl
cmp
gs
notl
pop
push
sbb
popf
pop
sbb
pop
cs
cmp
mov
scas
dec
pusha
cmp
fadds
cmp
jae
jg
xor
cmp
push
lcall
cmpsb
mov
idivl
pop
dec
fwait
sahf
sbb
add
les
cvtdq2ps
xorb
fcmovbe
cmp
js
adc
inc
daa
mov
cmpsl
sbb
pop
push
xor
cmp
sub
test
outsl
cmpsl
lds
adc
cmp
out
iret
cmp
push
ss
mov
add
push
mov
sbb
or
sub
enter
push
lods
lds
fwait
or
push
cmpsb
cmp
and
ret
clc
fnstenv
arpl
sti
cmc
and
mov
iret
repnz
ret
jl
adc
aaa
xor
fistpl
ret
dec
pushf
imul
cmpsl
cmp
inc
dec
addl
clc
stos
jecxz
out
int
pop
inc
out
push
cmpsb
jmp
push
ficoml
and
xchg
data16
adc
movsl
push
mov
cmp
loopne
cwtd
xchg
push
nop
jp
pusha
mov
add
dec
bound
das
jb
mov
fbstp
jb
xor
scas
mov
cmc
ss
jle
mov
inc
adc
pop
test
stos
and
shlb
inc
add
sub
enter
inc
jae
loop
addr16
inc
cmpsb
scas
lods
adc
int
mov
fstl
out
push
hlt
xlat
add
stos
jae
in
imul
mov
pop
or
sub
into
and
inc
add
lahf
mov
out
ss
gs
sbb
and
xor
sbb
cwtl
jns
sti
aaa
roll
dec
aam
sahf
pop
xor
lods
cltd
pop
pop
scas
cmc
cmpsb
and
popa
sbb
inc
pushf
mov
stos
cmpsb
pop
mul
das
and
ljmp
push
dec
int3
sbb
add
icebp
pop
inc
stos
les
stc
jge
cwtl
movsl
aaa
ja
xchg
rorb
add
jge
es
aas
out
sub
dec
rcll
int3
loope
rcrb
leave
out
iret
xor
push
cltd
sub
push
mov
xchg
insl
pop
pop
dec
out
xor
jae
cmc
stos
lods
sbb
int3
jp
add
mov
cltd
xlat
mov
cs
pop
mov
xor
lock
jno
pop
loop
adc
arpl
int3
push
lret
push
xchg
aas
les
xor
pop
int3
mov
ja
push
cmc
sbb
hlt
dec
cmc
stos
adc
out
pushf
orl
push
mov
incl
jecxz
jg
lahf
push
adc
cmpsl
js
cmp
aaa
push
push
sub
out
dec
test
mov
inc
ds
in
arpl
sbb
jl
sbb
fisubs
add
aaa
js
cmp
lods
sti
ret
imul
sbb
inc
xchg
fs
cmp
mov
imul
pop
jb
fwait
jp
mov
loopne
cmpsl
dec
jge
sbb
dec
jno
clc
loop
lock
pop
lcall
stos
inc
shrl
mov
shrb
pop
mov
mov
push
sub
mov
scas
fsubrl
xor
fiaddl
jno
pushf
int3
lret
mov
sub
sbb
push
test
popa
mov
jge
outsb
inc
loop
pop
aaa
leave
mov
lock
stos
cmp
cltd
enter
cmp
repnz
or
test
pusha
xlat
orb
bndstx
cmp
inc
rol
stos
xor
jecxz
es
scas
mov
out
dec
and
or
inc
lret
sub
repnz
imul
and
inc
push
push
or
popa
out
mov
push
mov
scas
push
sbb
pusha
test
sbb
sbb
mov
dec
shlb
insb
pop
xchg
es
fs
imul
lods
add
push
test
mov
jne
push
pop
loope
mov
sub
pop
or
push
xor
mov
jle
dec
mov
sub
inc
ljmp
inc
xchg
cltd
cmp
xor
or
sub
sbbl
sub
loop
fnstsw
mov
fdiv
loop
push
inc
push
ljmp
push
cmpsl
jns
outsl
outsb
les
mov
cmp
push
movsb
ret
das
sbb
shrl
pop
lock
sbb
call
out
or
mov
adc
lahf
sti
jbe
into
js
fimull
test
or
add
jecxz
mov
push
aam
push
mov
cmpsb
decb
cmc
popf
or
and
push
mov
xchg
lock
xchg
cmpsb
outsb
mov
iret
add
inc
ret
mov
cmp
ficoml
lods
fimull
mov
jo
mov
fistpll
sub
or
mov
dec
out
sbb
std
dec
or
ret
pop
add
sbb
loop
rep
fisubrs
mov
sub
add
in
lock
test
or
lods
fisubl
jp
xchg
loopne
push
add
push
out
call
inc
xchg
inc
dec
mov
mov
sti
pushf
adc
addr16
mov
or
shll
clc
call
pop
push
inc
leave
scas
cld
dec
in
sbb
cmc
pushf
mov
mov
outsb
test
or
loopne
xor
in
loopne
cli
mov
push
jb
dec
sbb
icebp
mov
pop
jns
push
add
std
mov
xor
test
add
dec
repnz
sub
pop
lea
mov
push
add
add
sarl
pop
adc
and
shll
xchg
and
mov
mov
pop
dec
xchg
arpl
dec
cmp
dec
push
rolb
cli
and
mov
adc
enter
cmp
ja
dec
jns
addr16
jp
inc
idivb
mov
int3
xchg
testl
cwtl
add
xor
pushf
insl
mov
mov
jns
fwait
imul
cli
or
hlt
xor
fbstp
xchg
sbb
out
inc
cltd
lret
mov
das
push
movsb
clc
xchg
xchg
xchg
das
enter
insl
and
pusha
fists
dec
ret
push
pop
cmp
out
mov
mov
push
push
sbb
pop
insb
dec
mov
pop
lods
jg
mov
call
fcompl
inc
shlb
fisubs
jl
shll
fwait
and
inc
sub
ja
xor
adc
inc
fsubrs
clc
shrl
fcoms
mov
das
lret
mov
rcrl
scas
loopne
jne
xchg
inc
inc
mov
mov
gs
aam
mov
sti
or
mov
fimull
lds
xor
jnp
ss
les
mov
jnp
rorb
nop
aad
jne
push
subl
push
repz
pop
xchg
cmp
ret
out
mov
std
inc
int3
mov
stc
out
sub
inc
enter
fucomp
clc
pop
sub
jb
orl
mov
pop
lods
xchg
cmp
dec
mov
leave
shlb
out
and
push
test
sbbl
mov
data16
cmp
sbb
lea
xchg
xor
adc
movb
or
inc
in
lea
inc
xchg
sbb
jae
inc
xchg
popa
out
add
test
pop
hlt
test
sbb
or
aas
cld
js
test
or
fdivrs
push
call
cmc
push
push
adc
fwait
cltd
mov
aam
inc
push
inc
addb
int3
pop
stos
cld
sbb
dec
ljmp
fnsave
pop
or
mov
push
xchg
in
scas
mov
inc
push
jecxz
push
sub
outsb
sti
jne
icebp
or
out
pop
mov
adc
insl
cmpsb
push
xlat
fstpt
fiaddl
iret
mov
loop
push
add
pushf
push
jo
mov
orl
inc
xor
jecxz
dec
cmp
loope
ss
xor
add
iret
cmp
mov
rorb
popf
insl
adc
int
dec
popf
sbb
xor
dec
inc
dec
mov
jae
std
int
orl
cmp
or
xor
jp
shll
std
ljmp
mov
lahf
adcb
test
aam
mov
adc
xchg
stos
nop
mov
mov
jecxz
xor
roll
cmp
sub
adc
push
aad
mov
jp
mov
push
cmpsl
repz
jne
iret
mov
xchg
mov
jns
js
push
adc
mov
out
sbb
jnp
push
mov
lea
jle
adc
dec
cmp
int3
mov
sbb
pop
shrl
sbb
mov
mov
int
sub
test
push
aam
and
pop
inc
pop
mov
or
adc
dec
sub
inc
mov
int
adc
mov
js
pop
scas
rcrl
inc
out
jecxz
gs
data16
sbb
mov
ja
rolb
mov
and
out
push
dec
sub
ss
jb
jo
sbb
dec
ja
divl
xor
pop
mov
aaa
addl
or
aad
mov
jg
and
movsb
lret
sub
stos
xchg
xorl
mov
aaa
iret
cmp
mov
loop
enter
ret
data16
mov
outsl
cltd
mov
xlat
loopne
cs
ret
test
ret
jns
mov
and
into
dec
enter
fnstenv
jge
pop
xchg
xchg
and
pop
idivb
inc
sbb
shl
xchg
jp
or
outsl
push
iret
int
jno
mov
or
gs
leave
fstl
nop
dec
push
push
sub
fdivr
outsb
xor
lahf
repnz
push
cmpsb
leave
notl
sbb
pop
mov
push
mov
push
clc
inc
lods
mov
jnp
dec
mov
nop
ja
xchg
or
pop
add
cmpsb
les
aas
jmp
aaa
push
into
test
repz
sub
imul
mov
outsl
push
sbb
jo
adc
mov
cld
jne
insb
cld
sbb
and
pop
xchg
push
or
test
pop
rcll
inc
jmp
and
inc
xchg
mov
ret
sub
push
jmp
test
aaa
ficoms
nop
and
xchg
adc
mov
aas
dec
and
test
dec
into
jecxz
mov
in
lock
lock
sub
dec
xchg
and
out
addr16
adcl
xchg
inc
sti
mov
lock
jmp
jae
lds
jp
mov
sub
mov
cmp
insl
add
ficomps
arpl
cmp
sbb
and
adc
or
mov
aaa
test
inc
icebp
test
insb
test
jg
cld
pop
data16
xor
outsl
ds
and
mov
jb
cmc
popaw
dec
mov
mov
add
xchg
cmpsl
cli
in
jns
mov
std
jmp
jmp
inc
shrl
pop
sbb
in
test
cli
adcl
mov
in
sarb
sbb
sub
xchg
test
push
mov
sti
or
sbb
testl
lret
testb
xor
stc
mov
jge
popf
mov
aas
dec
jge
cltd
and
xchg
jg
addr16
pop
or
pop
lds
add
pushf
pop
imul
xchg
or
xchg
sub
jnp
mov
data16
xchg
inc
fbld
fnstenv
and
push
jno
mov
xor
xor
test
clc
je
mov
adc
cmpl
lcall
popf
and
lea
insl
push
iret
arpl
dec
xchg
pop
dec
arpl
xchg
test
cmp
movsb
out
rorl
push
test
pusha
mov
orl
lcall
add
jg
push
pop
ja
mov
push
test
ss
adc
mov
lds
cmpl
mov
fstps
and
cmp
fcomps
xor
inc
outsl
aad
cltd
mov
cmpsl
push
cmp
leave
xchg
dec
imul
add
in
lcall
mov
mov
mov
jg
xor
stos
mov
pop
mov
xchg
pop
or
and
enter
shlb
jnp
mov
jns
es
cltd
jne
rorb
sub
or
xor
mov
mov
stc
push
aaa
dec
enter
inc
xchg
pop
fldl
subb
lret
dec
mov
pusha
ficompl
xchg
out
clc
sub
lret
jae
int
gs
cmp
ds
aad
sahf
dec
filds
cmp
push
popf
xor
pop
daa
nop
or
jecxz
push
dec
sub
out
push
addl
leave
sub
and
xor
ret
xor
inc
or
into
iret
jae
pop
js
popa
popf
inc
sti
daa
and
test
loope
adc
outsl
inc
aad
test
cmp
pop
fs
add
pop
sbb
adc
push
test
dec
pop
cmp
ljmp
nop
dec
and
xchg
or
enter
add
push
das
aas
lods
adc
adc
inc
ja
pop
xchg
out
xor
push
aam
scas
imul
enter
jmp
xor
mov
test
test
lret
popf
movl
inc
jnp
cltd
repnz
push
test
and
int3
push
and
and
aaa
js
mov
jno
popf
out
imul
push
push
pop
jne
add
add
in
or
aaa
dec
lds
push
flds
inc
pop
jmp
mov
rorb
dec
sbb
mov
loope
addr16
enter
loopne
jno
cmp
lcall
insl
mov
pop
dec
stos
adc
test
lahf
imul
inc
mov
push
movsb
or
add
rcl
pushf
add
or
rcrl
cmp
adc
or
dec
scas
adc
in
idivl
mov
adc
imul
jb
xchg
adc
adcl
sbb
push
call
sti
popa
gs
add
push
imul
fadds
jae
stos
and
ret
dec
cwtl
ds
lods
sbb
cmpsl
insl
pop
push
jae
and
sbb
and
jnp
dec
or
mov
add
pop
decl
xor
xchg
pop
lret
outsl
fcomps
pop
rorl
lret
pop
addr16
lock
sub
push
mov
lea
cwtl
repz
add
jae
mov
negb
call
sub
sbb
fsubl
int
mov
sub
pop
jae
pop
popa
push
xor
add
test
out
arpl
in
dec
outsl
mov
test
push
jae
dec
xchg
inc
ja
sub
les
add
jno
jge
mov
pop
shll
fnstcw
outsb
mov
loopne
mov
pop
xchg
pushf
rclb
loop
or
dec
lds
fsubl
push
push
mov
jmp
add
stos
sti
mov
lcall
xchg
cltd
mov
push
test
or
das
test
add
les
push
or
std
xchg
pop
add
and
call
into
xchg
nop
fisttpl
lcall
dec
call
aaa
mov
js
xchg
and
fs
add
mov
jge
push
inc
fstps
dec
sbb
push
mov
fldenv
fstpt
mov
xor
xor
pop
in
imul
call
dec
mov
loop
inc
and
pop
sub
mov
test
sbb
xchg
or
out
push
hlt
xchg
xchg
adc
nop
mov
jns
sahf
cmp
pop
xchg
jno
pop
jne
mov
loop
xchg
jno
shr
cli
inc
push
pop
mov
lret
cld
inc
pushf
rcr
push
adc
pop
inc
cwtl
out
pushf
sbb
cmp
ljmp
push
fists
in
add
stc
xchg
testb
cmc
push
inc
mov
fwait
mov
jl
xchg
cmp
push
push
cmpsb
xor
or
mov
sahf
push
mov
lcall
fdivr
xchg
insb
mov
pushf
icebp
xchg
push
mov
push
fidivl
mov
jmp
dec
or
inc
cmpl
push
outsb
loop
mov
inc
daa
jp
lahf
add
cmc
das
out
test
bound
leave
scas
aaa
or
dec
sbb
je
orb
cmp
popa
cmp
sub
out
and
out
xor
push
pop
jo
dec
jmp
xor
jge
and
bnd
outsl
pop
inc
filds
lret
ss
nop
mov
jo
inc
rcl
mov
mov
cmp
xchg
movsl
hlt
lcall
je
out
scas
pop
daa
mov
into
shlb
test
add
jno
jmp
std
add
or
stos
popa
fwait
pusha
imul
mov
rcl
pop
mov
pop
daa
cs
test
lods
cmp
in
lret
aam
inc
in
cmp
ss
shrl
sti
flds
xchg
orl
dec
leave
mov
xchg
jmp
and
jge
and
adc
out
cmp
jno
imul
iret
or
orb
loopne
mov
cmp
mov
jo
pop
inc
dec
cli
or
add
js
jl
sbb
gs
push
sub
lods
scas
enter
jns
and
ljmp
outsb
loope
sbb
mov
stos
cmp
sub
and
mulb
mov
or
hlt
clc
mov
packsswb
test
fwait
in
cmp
mov
test
jge
cmp
popf
orl
scas
jl
aaa
aad
sbb
popf
sahf
pushf
push
aas
and
sti
pop
clc
sbbl
rorl
stos
lea
mov
xchg
out
cli
add
cmpsl
in
in
mov
inc
and
loopne
push
es
pop
ret
out
jp
mov
sbb
aam
push
fisttpll
into
loope
mov
push
out
mov
xchg
sub
and
jmp
arpl
ss
jo
mov
dec
inc
add
lods
dec
xor
push
movsl
pop
ds
inc
into
pop
int3
test
subl
repnz
and
push
hlt
or
cmp
sub
dec
int3
push
xor
fs
in
mov
cmc
xchg
out
outsl
leave
fldenv
fisubs
mov
adc
inc
rcll
movsb
rcrb
pop
sub
aam
or
out
inc
scas
jnp
add
bound
pushf
sub
pop
cmpsl
inc
sbb
rol
mov
dec
push
dec
js
shr
jl
jmp
add
push
jp
mov
pop
aad
in
adc
mov
mov
nop
push
ljmp
inc
imul
lds
bound
fistps
loopne
in
xchg
hlt
mov
sbbb
fbld
sbb
imul
lock
adc
lods
out
sub
sub
and
sahf
xor
push
movsb
movsb
sbb
add
inc
push
roll
push
stos
shlb
sbb
into
and
push
mov
call
int3
pop
xchg
imul
jnp
out
in
xchg
hlt
mov
imul
inc
in
stos
or
outsl
jo
jmp
mov
cld
sub
xchg
xorb
xor
addb
jb
xchg
or
push
scas
sub
fistps
aad
xor
cmc
cmp
mov
inc
dec
xchg
lock
mov
jle
cmp
scas
out
or
jns
scas
imul
repz
sbb
fistpl
int3
xchg
pop
pop
aas
pop
or
out
popf
push
xchg
cmp
push
jmp
mov
mov
lahf
or
mov
das
inc
add
pusha
push
sti
movsb
ja
nop
call
jle
cmp
and
fdivrp
adc
inc
movsl
sarl
cmp
repnz
in
outsl
mov
loope
dec
gs
mov
cltd
fwait
dec
fcomi
fists
leave
je
mov
push
insl
lret
mov
das
insb
xor
add
mov
adc
inc
push
push
mov
fcomip
xchg
movsl
arpl
ficoms
adc
dec
add
stc
and
iret
and
in
pop
add
movsb
ret
push
loop
mov
inc
or
mov
and
imul
mov
sarb
cmp
out
xlat
xchg
mov
mov
cmp
cmc
xchg
out
xchg
outsl
popa
inc
xchg
add
cltd
stos
mov
pop
or
fistpl
out
test
add
cwtl
sub
mov
test
icebp
ret
add
clc
fidivl
mov
lret
data16
add
fcom
push
push
push
xchg
repz
dec
cmpsb
out
dec
adc
stos
sub
ss
repnz
and
out
mov
sub
js
cltd
push
sub
stos
xchg
dec
in
mov
sbb
dec
cmp
mov
add
fidivrs
mov
arpl
xchg
mov
mov
dec
dec
mov
cmp
jp
jno
mov
cmpsl
cmp
cwtl
adcl
adc
lahf
sub
adc
sti
sub
mov
mov
dec
bnd
test
notb
test
insl
push
jge
cltd
sub
jb
jnp
inc
cmpsl
rorb
sub
adc
into
insb
cwtl
insl
add
xchg
jbe
jae
dec
inc
xlat
mov
js
sahf
lods
add
ret
jae
add
imul
push
mov
inc
dec
dec
adc
push
fwait
data16
cld
jle
mov
sub
aaa
push
mov
negb
push
xor
iret
pop
sub
mov
sub
test
adc
cwtl
lcall
sbb
sarb
or
sub
in
movsl
mov
mov
test
loope
iret
jb
inc
add
lods
mov
movsl
xchg
adc
movsb
pushf
mov
mov
jl
lock
loop
pop
inc
ja
enter
shl
stos
and
cmp
jns
fldcw
ss
mov
mov
scas
out
cmp
sub
shlb
xor
or
mov
xchg
in
out
xchg
pop
lahf
sbb
jp
ficoms
pop
dec
or
mov
repnz
maxps
inc
push
pusha
into
sub
mov
jns
xchg
adc
adc
push
bound
dec
ret
lods
repnz
push
ret
imul
lock
cmp
sub
mov
jecxz
outsb
data16
jge
fs
test
jb
xchg
je
adc
add
imul
jg
sahf
mov
ficoms
mov
sti
les
sub
cmp
mov
popf
loope
dec
sub
into
je
out
sbb
add
lods
pop
push
jmp
jecxz
xor
add
out
fisttps
mov
pop
pop
popf
jmp
jge
and
xor
push
mov
dec
or
and
push
or
ljmp
daa
leave
sub
testl
imul
aam
mov
cld
push
shlb
into
or
and
and
push
imul
insb
cmp
xchg
pushf
das
icebp
sub
jg
jmp
adc
add
sbb
jmp
and
inc
mov
push
lea
pop
out
jmp
lock
ja
cmp
jle
es
test
mov
in
in
je
mov
xor
je
mov
pop
xor
mov
mov
insb
cmp
scas
nop
xchg
add
dec
faddp
xor
adc
mov
jp
fisttpl
insl
xchg
jo
ret
loope
xor
xor
pop
insb
into
inc
mov
cmp
ret
repz
out
aam
jnp
repz
push
sub
mov
sbb
leave
push
add
xor
jno
jg
xchg
jnp
ja
xchg
xlat
sbb
add
xchg
in
xor
add
jg
scas
outsl
fs
fisubrl
imul
mov
ljmp
push
sahf
lds
stos
pop
push
imul
cmp
cld
jns
lahf
lret
sub
jnp
mov
dec
lods
or
fdivs
cmp
jnp
xor
scas
out
sub
shll
arpl
scas
jp
mov
rorb
cwtl
adc
incb
nop
pop
pop
push
jge
mov
sbb
jb
pusha
xor
dec
pop
repz
rcrb
gs
imul
enter
mov
pop
aad
inc
adc
aaa
nop
pop
sbb
sbb
sub
icebp
fistpll
fsubl
or
sbb
dec
es
ljmp
jnp
imul
sbb
ljmp
or
mov
and
cmpsb
sub
in
fstpt
mov
hlt
sbb
pop
loopne
mov
aas
ja
rclb
jnp
add
icebp
testl
cmpsb
push
inc
fldenv
addl
inc
sbb
in
mov
cmpsb
daa
cli
mov
xchg
jl
push
sub
xchg
dec
mov
mov
adc
js
add
cwtl
enter
out
mov
arpl
mov
jge
aaa
lods
and
icebp
cmp
mov
cmp
cmp
jle
aam
ljmp
cmpsl
loopne
push
adcl
lds
mov
push
inc
ds
lods
not
jbe
std
ja
push
sub
inc
pop
mov
xor
cmp
cltd
cli
sbb
mov
mov
xor
ss
push
es
sbb
cmpsl
call
stc
adc
mov
add
adc
repz
addb
and
cltd
mov
sub
in
repnz
inc
xor
sub
inc
test
and
stos
je
add
cli
adc
out
lods
popa
pop
sti
mov
jg
mov
cmp
std
or
jae
pop
adc
stos
insl
mov
sub
fdivrs
std
xor
fbld
push
mov
fmuls
push
repnz
pop
in
mov
pop
daa
jmp
xor
jno
test
andb
rcr
int
leave
jb
adc
mov
orl
push
xor
in
add
lahf
sbb
xchg
fldenv
mov
addr16
fisubs
flds
insb
scas
outsl
mov
ja
xchg
dec
cmp
sbb
in
mov
gs
sub
mov
mov
xchg
mov
jp
in
mov
or
pop
push
cmp
xor
insb
mov
adc
or
pop
sti
jbe
add
mov
mov
in
cmpsb
jbe
rcr
pop
pop
xor
xchg
inc
xor
cltd
imul
lods
sbb
aas
sahf
mov
insl
outsl
mov
sahf
dec
jle
je
sahf
xchg
lret
push
cmp
cmp
ljmp
mov
loope
cltd
push
sbb
aaa
movb
xor
mov
xchg
in
ud2
pushf
jnp
into
sbb
mov
jle
xlat
add
jo
xchg
icebp
js
jo
inc
je
or
or
flds
push
jbe
dec
sbb
cmpsb
mov
jmp
inc
jl
enter
hlt
sbb
or
inc
ffreep
xor
arpl
pop
cli
and
shll
push
jl
jg
into
out
cmp
lods
aam
leave
mov
out
fcoml
pop
nop
adcl
sub
scas
add
lret
dec
inc
mov
push
or
ljmp
cmp
jo
push
insl
inc
jne
mov
pop
cmp
push
sub
mov
xchg
lret
xchg
mov
adc
in
sub
std
push
sbb
xor
icebp
pop
notb
add
dec
mov
pop
cmp
jl
scas
adc
dec
xchg
inc
dec
rolb
hlt
clc
pop
daa
mov
arpl
cmp
movsl
xchg
sti
jl
dec
inc
add
cwtl
mov
test
inc
je
and
add
fs
inc
xchg
and
xor
negb
lret
daa
arpl
sub
pop
sbb
ret
test
inc
jb
add
gs
in
sub
xor
jns
dec
pop
push
scas
jbe
mulb
in
arpl
jae
cmc
leave
xchg
lock
aas
lahf
out
gs
adc
in
push
mov
mov
xorl
sbb
scas
push
stc
inc
cs
cmp
call
xchg
cmp
sub
push
jnp
push
mov
dec
mov
enter
ret
js
mov
mulb
adc
sub
mov
arpl
aaa
mov
sub
imul
inc
xchg
pop
or
fld
pop
in
stc
cmp
addr16
mov
mov
jl
stos
outsl
inc
xchg
push
inc
mov
mov
push
adc
sub
imul
cmp
mov
push
xchg
adc
cmp
inc
addr16
xor
jp
jno
mov
out
dec
je
lahf
jbe
stos
pop
push
add
push
mov
cmp
into
clc
xchg
aad
adc
inc
std
ror
shll
outsl
mov
mov
les
shlb
mov
ja
jne
fiadds
std
inc
cmp
repnz
mov
pop
mov
jp
pop
xor
and
dec
adc
icebp
fcomps
adc
add
ret
and
jl
clc
or
pusha
mov
das
jle
cmp
mov
mov
sbb
das
xor
mov
xchg
andb
adc
pop
mov
pop
xchg
xchg
in
and
xor
aas
leave
shlb
aad
pop
int
jp
mov
sbb
and
push
sbb
sbbl
mov
shrl
setae
in
mov
sbb
jge
lahf
loopne
adc
pop
mov
mov
cmp
les
mov
xchg
xor
lods
ret
icebp
fisubrs
push
sti
addr16
data16
jp
test
dec
mov
lret
cld
mov
add
jl
repz
js
mov
and
daa
out
repz
hlt
or
sarl
js
out
add
in
mov
subb
mov
mov
in
cld
mov
mov
xchg
dec
ja
in
and
and
push
mov
and
push
in
mov
sti
insl
push
cmp
mov
inc
xchg
pop
push
jge
mov
xor
mov
ret
bnd
imul
stos
in
xchg
push
pop
mov
lods
xchg
inc
push
jp
pop
test
fistpll
push
inc
test
sarl
push
dec
data16
pop
ror
or
push
outsb
std
popf
adc
jmp
and
cvttps2pi
inc
mov
lods
push
xchg
call
test
pop
lock
dec
outsl
pop
fdiv
test
cmpl
add
je
lods
imul
insb
test
ret
in
sub
test
jmp
xor
pop
test
int3
rcrl
sub
in
mov
notl
xorb
or
pusha
or
mov
icebp
popa
xor
cmp
dec
mov
stos
and
xchg
roll
clc
sarb
mov
into
sub
sbbb
in
mov
pop
sub
mov
adc
repz
cli
ficompl
xor
jp
inc
sahf
fwait
imul
mov
sub
inc
jbe
mov
xor
imul
add
push
cltd
jnp
and
sbb
mov
out
mov
fsubs
jge
jns
rcrb
pop
push
sbb
add
out
push
repz
mov
and
and
add
mov
adc
std
aaa
jnp
bound
sar
push
sub
push
cmc
filds
cmp
movsb
aas
and
dec
hlt
cmp
incl
pushf
pop
gs
or
mov
lcall
lds
push
push
push
push
ss
fisttpl
ljmp
dec
sub
outsl
xchg
mov
pop
inc
mov
ljmp
pushl
stos
jg
push
push
jg
pop
push
shlb
jae
icebp
xor
xchg
rcr
sbb
dec
mov
adc
sub
xor
and
mov
lret
dec
loopne
mov
bnd
outsb
and
push
inc
sahf
add
cmp
je
out
xchg
outsb
dec
mov
sahf
inc
pop
cmpsl
faddl
sbb
inc
jp
mov
cmc
jg
or
subb
insb
or
out
jg
ret
js
xor
fwait
mov
cmpsl
pop
or
xor
xchg
xchg
pop
xor
jge
syscall
sbb
dec
out
or
andb
cmpsl
mov
inc
mov
jno
jle
and
xor
sarb
jl
dec
sub
aas
mov
pop
sub
cltd
add
cmp
addb
adcb
cmpb
and
jb
pushf
and
sub
cmp
lock
sysret
mov
or
andb
mov
shll
mov
cmc
push
jmp
sbb
test
xchg
inc
ss
cmc
adc
dec
push
pop
cmp
fisubrl
xchg
xor
add
and
sub
add
cmp
xchg
into
push
out
cmpsb
mov
fsubr
out
nop
es
and
call
cmpb
add
mov
sbb
fmuls
jbe
outsb
jg
stc
hlt
data16
ficoms
xchg
adc
xchg
lea
dec
or
xchg
stos
cmc
test
mov
pop
adc
jnp
xchg
outsb
add
sbb
and
mov
cs
pop
and
in
sbb
pop
leave
cmc
adc
push
out
roll
and
inc
sarb
pushf
adcb
xor
adc
std
inc
sub
fsubr
dec
ds
mov
xchg
negl
adc
movb
popf
sub
xor
inc
mov
sbb
push
jne
lret
inc
int3
add
iret
cmpsl
xchg
mov
dec
add
je
mov
imul
cli
aam
jmp
xor
aam
ljmp
rcrb
xor
or
sti
out
sbb
enter
sub
push
movsl
shlb
les
push
xlat
movsb
and
imul
jo
adc
imull
xchg
out
sub
inc
dec
or
sbb
mov
mov
adc
add
mov
ficompl
mov
jo
cld
push
dec
sti
xchg
sahf
stc
iret
pop
mov
lods
in
outsl
mov
mov
jmp
sub
xchg
data16
mov
xchg
xchg
mov
cmp
or
push
push
ss
mov
xor
pop
cmpsb
jne
push
insl
fists
scas
popf
enter
lea
mov
push
icebp
dec
or
cmpsl
push
call
fwait
and
inc
cmp
add
jl
std
jecxz
mov
mov
jne
outsl
mov
adc
or
and
in
jo
fstpl
call
decb
xchg
jnp
lock
gs
nop
and
mov
aas
dec
xor
jp
add
bound
adc
sub
aaa
imul
xor
cltd
mov
lods
data16
sti
mov
push
scas
mov
xchg
fisttpll
xor
or
xchg
pop
iret
pop
popf
cmovo
push
call
pop
inc
nop
daa
and
adc
pop
and
movb
dec
aam
daa
clc
push
mov
xor
outsb
aaa
jmp
aas
mov
push
mov
pop
sub
repnz
sbb
jmp
jg
lcall
mov
push
or
xchg
repz
jmp
test
nop
pop
cmp
add
push
cmp
pop
dec
out
add
and
jle
test
pop
mov
hlt
fsts
in
sbb
cs
hlt
jl
rolb
leave
fimull
push
out
movnti
lods
push
cwtl
ss
pop
scas
jecxz
outsb
fcmovbe
int3
pushf
jmp
mov
mov
mov
xchg
lcall
hlt
xchg
xchg
das
inc
sub
jno
setns
cmp
sbb
out
jne
inc
dec
and
push
iret
std
fldt
mov
pop
push
push
cmp
mov
mov
out
xor
add
mov
loope
jns
pop
inc
sti
add
lea
add
and
xor
mov
lcall
dec
pop
push
mov
popa
mov
push
ret
inc
fsubr
call
arpl
int
in
sub
or
call
adc
pusha
and
int3
stc
sbb
movsb
pop
add
test
sahf
pop
loopne
fs
push
pop
mov
jmp
lcall
jge
jne
add
mov
repnz
jno
jae
or
push
and
mov
mov
in
mov
loopne
nopl
sub
in
sarl
repz
cli
in
jg
push
xor
and
jno
push
cmp
pop
adc
and
lods
dec
cmp
sub
and
scas
pop
loop
aas
out
lret
mov
icebp
sub
scas
mov
jg
insb
add
xchg
movsl
cmc
repnz
lahf
sub
dec
lea
test
std
pop
pusha
xchg
daa
mov
mov
rorl
out
scas
mov
aam
mov
aaa
cmpb
addr16
repz
test
popf
sbb
aas
inc
mov
enter
mov
stc
pop
pop
xchg
bound
fldl
sub
mov
imul
inc
mov
jge
inc
dec
div
cli
mov
jmp
vmovntpd
test
roll
sbb
cmp
dec
cli
pop
hlt
push
inc
repz
pop
popa
in
jge
mov
into
test
cmp
les
pop
int
cmp
rcrl
aaa
push
mov
subl
enter
out
les
rcl
sti
rolb
xchg
les
jnp
ljmp
jmp
decl
fistpll
adc
jo
xor
mov
loop
lcall
lcall
aaa
dec
and
sbb
inc
xorb
pop
les
dec
fisubs
jge
es
and
pop
add
mov
push
lcall
cmp
mov
cli
ss
inc
or
jmp
push
je
sub
in
or
add
add
js
in
add
inc
mov
mov
in
sub
rorl
scas
mov
mov
or
mov
sub
aas
adc
jnp
jo
and
fwait
pop
call
iret
es
push
sahf
dec
add
pop
clc
pop
inc
imul
and
in
notl
and
fs
pop
or
xchg
cmp
lock
push
and
iret
mov
add
shrl
adc
inc
pop
dec
nop
adc
fistl
out
ss
jnp
in
xchg
clc
outsb
stc
dec
jle
xchg
aad
pop
mov
sti
icebp
rcrb
sub
jecxz
mov
xchg
insb
in
sub
sbb
das
stc
ret
lcall
sub
cltd
lcall
int
sub
push
mov
lods
mov
cmc
aad
mov
xchg
lods
sub
pusha
test
inc
push
pop
cmp
pusha
lds
and
gs
dec
dec
icebp
push
das
or
daa
sahf
and
stos
repz
jle
stos
push
fdivr
jb
sbb
and
scas
xchg
mov
rclb
out
inc
or
mov
int
mov
mov
mov
jo
pop
scas
add
mov
lcall
cmp
in
filds
int3
push
jne
sub
inc
or
clc
adc
mov
sbb
stc
mov
inc
xchg
push
dec
stc
mov
aaa
mov
xor
stos
or
mov
dec
jae
sub
add
movsb
cld
imul
push
push
dec
dec
aad
loop
cmp
ss
push
sub
lcall
push
sub
test
inc
lahf
cwtl
and
mov
jmp
push
je
imul
repnz
jns
jg
push
lea
sub
mov
mov
stos
xchg
fs
cmc
jecxz
les
popf
adc
cmpsl
sub
adc
out
je
xlat
inc
jle
mov
jge
mov
cmpsl
gs
pop
dec
xor
mov
cmpb
mov
pop
mov
mov
movsb
out
add
in
jae
pop
sub
jmp
or
ljmp
cmp
gs
fstpl
push
xchg
and
fcom
mov
sahf
jg
mov
insb
and
dec
outsl
movsl
mov
dec
jnp
pop
adc
test
movsb
cmp
daa
xlat
test
adc
mov
das
addb
xchg
jnp
repnz
out
pop
ds
mov
lcall
or
into
mov
stos
cmpsb
subl
imul
lock
sbb
sbb
push
ja
adc
mov
sub
cmpsl
pop
sub
xchg
xchg
out
inc
sti
and
or
jbe
pop
mov
mov
loopne
mov
pop
mov
adc
xor
dec
mov
inc
sub
je
push
mov
ds
push
mov
mov
cmp
sub
addr16
and
ljmp
das
add
idivb
fdivrp
fidivl
jle
test
mov
out
outsl
testb
jecxz
iret
ljmp
xchg
pop
push
pop
lret
and
push
ds
lahf
aam
xchg
add
repnz
jne
push
xor
sahf
dec
arpl
in
insl
inc
ss
movsb
fstpl
aam
and
cmpsl
jb
imul
pushf
sbbl
pop
add
or
adc
mov
adc
xchg
in
jecxz
xlat
push
add
jo
and
ja
jg
scas
or
and
mov
mov
add
xchg
aaa
sarl
xchg
mov
roll
fs
mov
out
mov
pushw
insl
jg
jbe
adc
xlat
xchg
nop
arpl
sbb
nop
xor
in
enter
adc
xor
enter
add
mov
add
dec
add
in
xchg
mov
cli
stos
fidivl
sahf
sbb
and
pop
js
add
jae
xor
pop
xchg
movl
scas
cmc
sub
addr16
cmpsl
pop
push
add
dec
add
adc
ss
insl
lret
pop
rcrb
test
shlb
pop
xchg
fwait
sbb
xor
enter
and
mov
sub
cmp
into
jmp
pushf
inc
jno
push
rorb
cmc
imul
jmp
sub
mov
loop
in
lahf
adc
mov
and
push
hlt
mov
mov
xor
xchg
into
mov
sub
ss
xchg
and
push
mov
mov
das
inc
jo
out
shlb
out
sub
idivl
outsl
pop
mov
push
sbb
adc
addr16
jp
ret
jl
xlat
call
xchg
and
cmp
cmp
pop
xchg
or
xchg
jno
mov
imul
movsl
push
adc
add
mov
sbb
fidivl
sub
ja
shl
cwtl
mov
fsubrl
call
push
dec
testb
popa
lods
aad
fadd
ret
stos
xor
sub
shlb
iret
push
mov
sar
xchg
cmp
fimull
add
addr16
xchg
in
and
adc
or
add
sti
clc
mov
rolb
test
cmpb
lcall
dec
xchg
mov
push
xchg
inc
imul
lock
cmpsb
push
jb
orb
pop
lds
mov
mov
sbb
mov
xor
dec
jbe
cltd
pop
fisubrl
mov
popa
dec
jno
dec
cmpsb
add
mov
cwtl
repz
xor
dec
bound
inc
xchg
int3
imul
push
sub
adc
jl
sbb
loop
in
in
arpl
xchg
inc
out
insl
jle
mov
enter
mov
pushf
jmp
imul
sbb
cmc
fisubs
aam
pop
lock
dec
dec
pop
cmp
adc
int3
icebp
pop
xchg
into
fldl
push
test
xchg
push
ret
fmul
ret
sti
pop
push
enter
scas
filds
out
lret
stos
jne
insl
xor
stos
mov
inc
dec
ds
mov
and
adc
xchg
test
pop
or
mov
outsb
fimull
fstl
movsb
pushf
mov
loop
xchg
mov
xchg
cmc
repz
repz
push
shll
xor
leave
mov
sbb
loop
xor
adc
loopne
pop
cli
ljmp
dec
insl
sub
mull
pushw
mov
jg
jns
add
shrb
in
push
inc
leave
shll
daa
dec
inc
not
sbb
xor
outsl
stos
out
jns
lods
cld
push
add
mov
pushw
dec
int
in
inc
jb
out
gs
mov
cs
push
dec
mov
mov
sti
xchg
mov
cmp
mov
sbb
stos
xchg
mov
add
stos
push
test
mov
add
gs
mov
lahf
sub
daa
inc
sbbl
cmpsl
sti
imul
pop
and
imull
insl
lcall
xor
fnsave
leave
mov
pop
cwtl
fcomi
adc
dec
xchg
dec
cmc
aas
stos
jnp
pop
xchg
push
lret
mov
cltd
je
mov
outsb
xchg
test
jecxz
jnp
sub
pop
inc
ja
inc
inc
mov
jno
dec
adc
mov
je
pop
mov
std
pop
inc
rcrl
mov
or
jg
adc
sahf
sbb
stos
aam
pop
cmpb
movsl
or
outsb
inc
scas
or
or
add
clc
pop
pextrw
or
xor
fs
adc
xor
sub
sbb
mov
mov
push
push
hlt
pop
loop
cwtl
sbbl
mov
mov
icebp
sbb
lock
subl
pop
fs
pop
out
mov
fwait
adc
inc
daa
and
or
jp
adc
mov
mov
or
pusha
outsl
sub
ret
dec
les
cmp
movsb
cmp
hlt
ret
mov
xor
xchg
popa
xor
add
jge
xor
fdivrs
push
jge
pop
add
or
in
mov
hlt
lods
and
and
fwait
test
fs
fisubl
movsb
test
in
inc
sbb
or
mov
pop
js
inc
sub
xchg
add
out
and
mov
cltd
xor
jne
cs
jl
popf
inc
xchg
lret
mov
and
call
jnp
sbb
mov
out
adc
fs
or
xchg
mov
inc
pop
popf
bound
sbb
fstpl
sbb
mov
ret
shll
jmp
fstpt
loopne
add
insb
cmp
cmpsl
xrelease
lret
sti
sbb
mov
xor
shll
mov
test
leave
mov
push
test
pop
rorl
int3
loopne
cmp
ds
icebp
icebp
mov
or
push
dec
pop
sbb
mov
mov
in
add
lcall
insb
sbb
cmp
jo
dec
xor
in
iret
arpl
sbb
std
mov
stc
cltd
scas
jmp
imul
out
inc
push
and
lds
daa
mov
in
adc
insl
dec
movsb
mov
xchg
insb
cmp
add
adc
pop
es
popa
xchg
mov
arpl
mov
add
lret
or
mov
xor
aam
mov
test
xchg
inc
dec
push
adc
push
dec
int
lock
inc
adc
jno
xor
lods
or
jne
jo
xchg
pushf
lea
cwtl
int
add
dec
clc
cs
adc
sub
sbb
adc
aam
popf
push
pop
mov
inc
imull
mov
mov
cwtl
lret
jle
rorl
jecxz
xlat
inc
mov
adc
push
repz
testb
sbb
int
dec
inc
mov
test
dec
jle
sub
pop
push
fistps
xchg
popa
repz
push
clc
mov
out
adc
repz
clc
sub
shl
popf
fistpll
ret
adcb
xchg
pop
out
data16
adc
mov
pop
outsb
xchg
daa
cmpsb
pop
out
call
xchg
fsubs
cwtl
or
lock
fsubs
jbe
fistpll
stos
inc
test
test
out
jl
cmp
cmp
jno
mov
leave
sub
lock
js
gs
xor
arpl
xchg
pop
test
pop
xchg
pushf
inc
insl
je
lret
add
jne
cli
inc
mov
mov
mov
xor
fisttpl
ret
mov
scas
les
sbb
push
fisttpl
mov
imul
xchg
pop
repnz
insb
imul
pop
mov
inc
lahf
jmp
mov
jne
std
das
clc
sub
sbb
mov
push
mov
mov
and
lret
adc
aad
shrl
and
mov
push
push
push
mul
ret
rclb
pop
sbb
loopne
push
into
push
xchg
mov
jb
jnp
lret
ljmp
int3
inc
xor
xlat
push
pop
add
js
data16
das
or
testl
push
mull
push
add
dec
jb
fisubrl
dec
mov
mov
rolb
mov
imul
hlt
jbe
xor
fucomp
dec
in
and
out
stos
popf
fwait
inc
pop
mov
sarb
mov
jg
jl
pushf
mov
into
cmpsl
shlb
sub
das
lret
int
lods
sbb
jp
sbbl
and
and
pop
jne,pt
jno
insb
rorl
add
inc
pop
push
test
ret
cmp
out
inc
roll
xchg
push
stos
insl
aam
out
aam
hlt
out
outsl
sub
mov
lock
xor
push
sarb
mov
bound
push
dec
enter
dec
andl
in
or
xchg
lea
mov
imul
xchg
push
xchg
into
gs
adc
stc
std
xchg
mov
lret
mov
test
sub
mov
mov
icebp
addr16
push
sub
enter
mov
jno
cmpl
push
lcall
movsl
cmp
adc
std
dec
int
scas
mov
sbb
push
loope
push
cmc
sub
and
rcrb
insl
or
pop
mov
sti
sbb
cmp
pop
inc
sub
cmp
mov
push
or
inc
add
loope
daa
lods
dec
xor
cmp
and
xor
aaa
movsb
rcl
int3
adc
sub
rolb
sarl
xor
sbb
shll
repz
test
in
jae
insb
dec
in
xchg
mov
lods
pop
sbb
not
ja
loope
inc
jmp
ret
cli
ret
in
orl
arpl
ficompl
stc
enter
jnp
mov
adc
and
js
mov
pusha
jne
sahf
cmp
mov
mov
push
mov
adc
fcompl
mov
jo
push
xorb
bts
fwait
inc
test
push
das
popl
js
cltd
sub
push
icebp
push
cmpl
pusha
dec
iret
in
push
cmp
idivl
cmc
cmpsl
and
in
jl
pop
shll
mov
in
mov
or
adc
add
test
cmp
stc
nop
iret
stos
add
jo
xchg
xor
adc
cltd
xchg
xor
dec
cltd
xchg
fucomip
loope
push
cli
pop
lret
jmp
jp
lcall
cld
xor
and
out
push
fcmovnbe
out
mov
xor
ja
mov
aas
sbb
ds
and
stos
rclb
sbb
sbb
iret
mov
jmp
pop
sti
aam
lods
call
jecxz
push
in
test
cmp
daa
adc
sbb
mov
add
sbb
dec
pop
and
mov
or
sbb
add
inc
js
ljmp
iret
fcoml
xchg
jns
and
mov
inc
movsb
xor
int
andb
mov
test
movsl
mov
mov
inc
cmpsb
bound
mov
and
sub
sbb
jp
enter
and
mov
stos
fists
movb
dec
jle
sti
arpl
call
test
cwtl
and
push
adc
test
jl
dec
mov
jmp
cmp
xchg
xchg
mov
imul
popa
pop
fistps
jnp
stos
push
or
lea
cwtl
in
stos
je
cmpl
lods
lret
mov
loope
adc
pop
mov
or
sub
jmp
data16
mov
or
pushf
ljmp
and
loope
in
xor
aas
out
xor
fcmovnbe
or
xchg
hlt
sti
stos
stos
out
ret
aas
push
jg
jle
xchg
nop
pop
and
xlat
ret
cmp
sub
jl
sub
pop
cmc
loop
xor
jno
cmpl
inc
add
lahf
xchg
test
int3
into
push
notl
dec
adc
in
jae
mov
ret
sbb
xchg
xor
rcr
jns
and
pushf
push
xchg
xchg
mov
ja
mov
adc
inc
inc
jmp
cld
mov
testb
int3
pop
push
push
xchg
push
in
ret
outsb
xlat
mov
cli
pop
adc
xchg
add
out
stos
ret
mov
iret
adc
repnz
sti
call
adc
lock
xchg
or
mov
push
push
jg
insl
test
leave
xlat
jp
jns
mov
outsl
sbb
nop
jb
ss
fiadds
adc
mov
pop
outsb
and
insl
test
movsb
out
adc
pop
xor
jbe
mov
out
in
lret
iret
push
out
sbb
mov
lods
lock
movsl
push
inc
cli
jbe
sbb
cltd
bound
inc
xor
pusha
repz
int3
pmaxub
sbb
in
jmp
sub
push
fs
popf
mov
jbe
xchg
dec
loopne
pop
js
add
mov
cltd
jb
mov
sbb
jbe
push
sub
jmp
mov
add
and
out
lret
adc
adc
sbb
jmp
mov
bound
ds
jbe
lret
cmp
stc
orb
stos
mov
mov
xor
adc
push
push
mov
fisubl
dec
fstl
or
pop
mov
inc
inc
lock
mov
or
jne
mov
test
scas
push
std
jbe
push
mov
cmp
enter
out
xor
dec
ror
jp
mov
or
lcall
lret
dec
dec
jl
fidivrs
int
add
scas
adcb
dec
push
fldt
std
movsl
xor
inc
cli
xor
sub
addr16
insl
pushf
jbe
jmp
or
sub
mov
xchg
mov
fdivrs
adc
iret
sub
cmpsb
fmull
pop
push
dec
imul
mov
sbbl
inc
stos
jne
ret
stos
xor
xchg
scas
xchg
add
jno
gs
cld
ret
popf
aaa
inc
fiadds
push
andl
xchg
add
push
into
pop
dec
call
cmc
imul
pop
ficomps
inc
or
pop
test
push
mov
mov
std
arpl
outsb
outsl
jmp
adc
lcall
dec
dec
imul
leave
iret
pushf
fcomi
mov
into
mov
sbbl
bound
shlb
popf
xor
jb
pop
push
jae
push
lret
repz
inc
ja
inc
and
mov
mov
jnp
test
cs
push
add
sahf
sbb
add
repz
dec
rcll
or
jo
loop
adc
andl
xchg
add
or
packuswb
and
dec
xchg
sahf
arpl
push
and
outsb
insb
int3
mov
cmp
pop
add
dec
adc
push
loope
fs
push
les
and
mov
leave
out
andl
or
add
push
iret
xor
push
sub
stos
ret
push
repz
inc
in
sub
bnd
xor
lods
xor
sahf
ds
push
in
mov
dec
push
push
adc
inc
and
mov
or
mov
lret
in
cmp
xchg
neg
jns
leave
jns
mov
jns
fistps
pop
scas
popa
mov
add
icebp
xor
shlb
pushf
or
push
xchg
rorb
xor
loope
push
add
inc
dec
jb
call
roll
push
adc
xchg
xchg
enter
pop
cmpb
hlt
stc
mov
adc
div
xchg
out
pop
shrb
inc
dec
out
popf
int
sbb
lcall
sbb
or
pushf
push
sub
lods
test
mov
adc
dec
out
pop
pop
test
leave
jns
aaa
mov
push
daa
ds
fwait
lcall
or
jne
mov
push
jecxz
or
lcall
hlt
in
movsb
testl
lods
lds
int3
jns
xchg
push
xor
subb
xchg
in
jbe
pop
pop
mov
js
loop
dec
sbb
adc
pop
jnp
jno
push
je
xor
stc
lret
sbb
add
xor
mov
mov
pop
clc
rclb
stc
movsb
sbb
xor
mov
loop
in
jecxz
mov
jne
ljmp
xor
mov
gs
push
scas
xchg
push
xor
lods
ret
in
lahf
stos
push
incl
dec
push
xchg
pop
jmp
mov
push
dec
mov
dec
out
adc
jp
pushf
sub
std
hlt
mov
mov
pop
and
stos
decb
fnstsw
popa
push
ja
test
cmpsl
divb
loop
jmp
adc
and
movsbl
pushf
bound
pop
enter
push
out
arpl
out
or
dec
mov
pop
fbld
inc
dec
repz
lcall
in
std
lods
hlt
cmc
flds
fwait
xchg
inc
aas
push
pinsrw
or
cmp
jbe
mov
lods
pop
cltd
xchg
in
data16
dec
aad
jl
ret
pop
mov
xlat
insb
push
mov
pop
sbb
arpl
insb
mov
jnp
mov
scas
sub
mov
xor
xor
aas
jmp
xchg
sahf
lret
movb
dec
push
sub
icebp
stos
xor
repnz
cmp
inc
jmp
jle
stos
out
mov
es
inc
add
out
aas
shll
clc
mov
and
shll
movsb
lods
mov
mov
fwait
or
push
lock
sub
divb
lds
xchg
stos
mov
cli
push
testb
in
pop
pop
pop
sbb
mov
fdivl
adc
mov
mov
shl
inc
mov
rcr
inc
iret
ss
jno
jge
add
nop
push
add
pop
jbe
aad
movsl
shlb
es
or
stos
mov
xlat
pop
test
movsb
dec
jmp
lea
insl
sbb
insb
xor
add
push
in
lcall
sbb
adc
pushf
push
out
imul
add
push
xor
pop
das
js
subl
and
loopne
adc
xchg
aas
and
inc
gs
sar
addr16
jb
mov
imulb
stc
outsl
xlat
or
stc
out
gs
and
into
sub
xchg
push
mov
ret
testb
loope
ds
insb
test
rolb
stc
add
jp
pop
mov
lahf
pop
dec
lret
xchg
xchg
arpl
aad
test
jecxz
xchg
out
movsb
dec
mov
push
sbb
add
shll
in
cltd
out
pusha
dec
mov
sarl
inc
je
loope
xor
mov
lcall
xchg
add
push
shrl
cmp
aam
clc
loop
pushf
cmpsb
cmpsb
sbb
out
jge
ja
leave
cmp
int
xor
in
dec
mov
mov
or
mov
fisttpll
mov
out
mov
push
ss
dec
lods
mov
js
or
inc
pop
xor
hlt
mov
pop
in
pop
andb
inc
test
repnz
mov
rclb
inc
add
popf
mov
idiv
jge
cmc
sub
xor
subl
or
repnz
inc
add
test
jne
scas
je
dec
push
mov
mov
lods
inc
sub
push
push
loope
insb
subl
adc
push
scas
stos
jmp
fstps
xchg
stc
push
pop
push
and
push
mov
movsb
mov
loopne
stos
mov
jecxz
test
or
cmp
mov
lcall
pop
ss
test
xchg
pop
or
sti
mov
mov
lahf
xchg
mov
imul
xchg
mov
push
in
subl
xor
pop
push
cwtl
mov
push
mov
jbe
or
mov
lods
sbb
repnz
xchg
hlt
mov
scas
push
push
rcrl
stos
dec
sub
adc
stos
movsb
and
fsubr
sub
popa
gs
mov
aaa
stos
aam
popf
pop
push
inc
inc
mov
rorl
fbstp
sti
mov
lea
mov
stos
sar
adc
shlb
stc
fistpl
mov
ret
jne
je
mov
fisubs
aam
mov
jecxz
fistl
dec
daa
test
jge
and
jbe
fs
dec
xchg
mov
test
jge
in
rolb
mov
jge
add
mov
sub
push
enter
into
mov
cmp
out
xor
popf
cmpsl
xor
push
mov
mov
push
xchg
adc
rolb
adc
pop
mov
inc
xchg
pop
xor
xchg
leave
adc
repnz
jns
punpckhbw
and
icebp
add
call
mov
lods
push
sti
js
push
in
out
out
pushf
clc
icebp
sbb
xchg
fiaddl
lds
pop
pop
pop
lret
mov
jo
repnz
incb
inc
inc
jle
outsl
or
sub
dec
aad
sahf
aaa
pop
shlb
scas
fcmovu
push
mov
xchg
sahf
adc
or
loopne
pop
cmc
adc
and
mov
popf
out
sarb
add
cmpsl
fldcw
mov
push
sbb
roll
js,pn
mov
xchg
rclb
jle
jge
xchg
push
in
mov
lods
outsl
mov
je
stos
arpl
ret
loopne
stos
adc
xorl
addb
cmp
xor
mov
dec
out
imul
ja
ror
xor
push
adc
jg
xor
mov
mov
cmp
ret
push
pop
insb
add
movsl
lods
test
or
mov
push
stos
sbb
lret
vpshab
inc
mov
inc
inc
inc
arpl
cmp
movsb
and
mov
sarl
shll
loope
fidivrs
sub
xchg
cmp
dec
xorb
xlat
pop
inc
lcall
icebp
cmp
push
add
scas
and
scas
shrb
push
les
pop
sub
inc
mov
sbb
stc
pushf
lock
mov
in
add
xchg
aas
cmpsl
fcoms
sahf
jne
lods
mov
pushf
dec
movsl
sbb
jg
mov
pop
mov
push
push
lcall
lret
pop
mov
pop
jecxz
sbb
inc
daa
jbe
mov
dec
xor
xchg
xor
jmp
lcall
push
or
fwait
lret
pop
pop
cmp
push
loope
jmp
or
in
sti
sbb
xor
dec
repz
jecxz
xchg
lods
pop
dec
pushf
pop
jle
mov
inc
mov
sti
fisubrl
pop
adcb
popf
and
shll
clc
pop
add
mov
jmp
lret
orl
or
add
cmp
adc
and
enter
or
arpl
cmp
sub
jp
lcall
mov
add
push
or
mov
cltd
xchg
rclb
mov
add
mov
cmp
jb
push
adc
dec
cli
add
test
mov
subl
mov
inc
mov
jl
scas
xchg
pop
mov
movsl
push
test
insb
mov
dec
lret
cmp
or
mov
pushf
mov
push
mov
jp
jne
or
or
sub
xchg
cmpb
jne
call
lods
cmpsb
es
cltd
cmpsl
mov
das
sahf
jp
pop
or
jle
jno
cltd
sbb
dec
add
repnz
in
test
jb
popa
insl
pop
test
jno
movsb
sbb
mov
sub
jbe
in
jmp
mov
arpl
ret
inc
or
fs
cmp
out
mov
popf
add
mov
and
movsl
outsl
in
cwtl
adc
pop
xchg
addl
out
xchg
pop
pusha
fstpt
push
adc
stos
push
push
dec
mov
add
in
or
xchg
jle
mov
dec
jbe
mov
out
pop
cmp
stc
sar
mov
shlb
sbb
les
pop
sbb
cltd
xchg
inc
sub
leave
dec
or
push
lods
pop
dec
adc
fisttpll
shlb
ret
dec
daa
pop
fadds
outsl
jns
dec
mov
jnp
cld
or
sbb
inc
shrb
jae
es
ret
out
xor
gs
je,pn
and
pop
ret
xchg
movsl
add
inc
adc
pop
cwtl
repz
icebp
mov
enter
js
and
std
push
or
insl
xchg
push
inc
nop
dec
sub
sbb
push
sbb
cmp
mov
push
xchg
mov
jmp
addb
sbbl
pusha
push
shl
sahf
out
push
popf
sub
pushf
arpl
sub
aad
rorb
sub
ljmp
aaa
mov
jbe
jmp
int3
adc
cmp
add
test
fidivl
and
aam
inc
push
icebp
lds
cmp
xchg
sbb
inc
mov
jmp
cli
mov
pop
xor
rol
inc
lods
rcrb
mov
adc
add
push
inc
push
push
lret
stos
push
cmpsb
outsb
js
in
std
mov
pop
insb
mov
imul
dec
andb
fadds
pop
dec
jne
push
inc
sub
notl
insb
iret
push
mov
arpl
cmp
cmp
mov
je
les
cmpsb
repnz
adc
pop
dec
rcrb
and
mov
inc
cli
push
jae
cmpsl
test
push
push
xchg
or
not
mov
mov
ds
iret
xor
sbb
pop
push
jbe
mov
dec
subl
lret
xchg
repz
add
mov
push
call
push
lret
jno
cltd
in
in
sbb
push
mov
jo
and
loope
sub
hlt
inc
repz
dec
cmp
sar
and
pop
mov
aas
jp
jg
pop
add
subb
dec
cmp
dec
mov
in
aas
push
inc
outsl
and
ds
jnp
and
daa
push
mov
add
test
outsl
mov
cmpsl
addb
outsb
fidivl
mov
adc
aam
int
inc
daa
pop
or
pop
xchg
lahf
adc
jnp
mov
les
cmp
psrad
jbe
daa
or
cmp
pop
mov
cltd
pushf
lea
mov
dec
in
popa
adc
movl
in
scas
int3
pop
or
out
aad
fnsave
loope
mov
push
push
imul
or
dec
add
stos
dec
movsl
xchg
popl
icebp
mov
jecxz
test
sahf
hlt
sbb
sti
ljmp
pop
dec
mov
in
dec
jo
add
or
popa
push
pusha
xor
int3
testb
cmp
lret
rcll
loope
adc
test
ss
xchg
mov
outsl
bound
sbb
test
out
push
movsb
rorl
cmp
xchg
and
cmp
ret
adc
out
pop
lret
pop
inc
aam
cmpsb
fldt
cs
pop
cld
hlt
mov
sbb
sbbb
rol
mov
outsb
ljmp
js
lods
push
adc
lahf
and
out
sbb
loop
pop
lods
jge
js
push
fwait
rcr
push
into
adc
add
xchg
pop
dec
das
scas
std
push
stc
push
cmpsl
pusha
push
pop
push
or
sbb
std
push
push
xor
cwtl
and
lods
push
push
fbstp
sbb
jae
scas
pop
ss
push
and
pop
into
xchg
mov
shll
rcrl
in
dec
sbb
xchg
push
xlat
push
xchg
cli
and
push
js
data16
jns
lcall
out
push
out
hlt
shr
mov
jo
mov
sbb
pop
stc
out
imul
mov
ret
jbe
jp
lods
lcall
add
lock
bound
fnsave
enter
and
sbb
stos
mov
rcr
daa
mov
push
inc
jl
or
mov
dec
adc
cmpsl
jecxz
add
pushf
imul
faddp
jge
stos
stos
push
dec
inc
inc
mov
mov
jo
call
call
cmp
adc
dec
cmp
or
stos
push
aad
andl
jae
sbbb
mov
bound
movsl
xchg
movsl
aas
dec
out
mov
scas
push
or
out
std
cmovs
mov
stos
cmp
in
inc
pop
pop
ljmp
inc
das
xor
ficoms
dec
cmp
xor
sbb
xchg
push
lcall
jmp
lcall
xor
jp
lret
xchg
mov
mov
stos
cmp
ret
mov
and
insb
or
fwait
push
enter
mov
enter
ds
out
int3
ret
movsl
sbb
adc
add
dec
sbb
xchg
ficomps
das
notl
ljmp
cmc
std
mov
outsl
jbe
or
jmp
or
xchg
xor
push
jg
testb
mov
es
xlat
sbb
jecxz
sbbb
pushl
popa
mov
mov
mov
out
jne
pop
sarb
inc
adcl
xlat
cltd
mov
inc
pusha
pop
add
mov
sub
int
aaa
and
data16
in
xchg
mov
mov
mov
adc
cmpsl
mov
xchg
xor
movsw
lret
imul
mov
adc
shlb
xchg
jl
cmp
sub
xor
popa
orb
popf
iret
das
pop
repz
je
and
test
xchg
or
jbe
das
add
push
jne
rolb
in
jecxz
add
data16
mov
lea
sbb
cltd
mov
leave
dec
ficoml
sbb
mov
cmp
jae
adc
and
add
pop
imul
adc
sbb
movsl
inc
adc
pushf
add
cld
clc
xor
mov
cmp
inc
xchg
gs
test
mov
or
jno
add
fimull
xchg
fcoms
nop
sahf
fs
xor
or
cs
or
leave
mov
aas
jp
mov
xchg
out
enter
fsubs
scas
and
adc
mov
mov
hlt
fnstenv
dec
dec
in
scas
and
jbe
jnp
dec
or
loopne
fidivl
xchg
pushf
jnp
repnz
xchg
jecxz
or
mov
jl
aaa
mov
mov
sbb
pop
pop
out
lahf
cmpb
sahf
cs
ds
add
stos
inc
dec
clc
stc
mov
nop
outsl
or
mov
outsl
jae
xchg
imul
cld
sbb
fstl
xchg
fcomip
mov
sub
mov
sub
inc
popf
add
idivb
xchg
mov
sbb
mov
sbbl
das
and
mov
mov
pop
xor
jns
ret
push
xchg
mov
inc
jnp
inc
cmpsb
subb
inc
es
fwait
pop
jno
popa
in
es
mov
mov
mov
add
insl
mov
cld
imul
cmpsb
insb
push
or
call
xchg
mov
es
psrld
mov
lods
xchg
inc
fsub
imul
mov
dec
mov
stos
fistl
mov
in
xor
xchg
xor
mov
and
lret
push
adc
add
in
in
mov
jo
lock
out
fs
daa
adc
sub
lds
into
jge
ja
and
scas
mov
mov
nop
adc
jno
lcall
sub
xchg
cmc
rorb
mov
icebp
loope
fs
xchg
dec
xchg
mov
push
push
sub
pop
mov
rcrl
add
js
imull
adc
mov
insl
ds
jl
inc
inc
insl
scas
push
into
js
cli
inc
mov
cmp
leave
js
sti
dec
rol
imul
jo
je
scas
fwait
daa
std
cltd
sub
js
push
mov
cli
and
fdivl
xchg
mov
jp
fucomip
jmp
jae
and
sbb
push
and
jbe
push
nop
jno
je
ds
xchg
inc
sub
sub
jne
and
rolb
add
adc
or
fld
pop
and
mov
or
sbb
xor
imul
in
pop
imul
fisttpll
out
adc
dec
jo
mov
xor
repz
pop
adc
push
in
dec
lods
movsl
lret
gs
dec
inc
mov
pop
test
aas
or
mov
pop
inc
mov
jne
pop
xchg
push
hlt
insl
loopne
loop
pop
int3
faddl
lcall
adc
add
sub
push
sbb
test
push
cmp
sbb
sbb
int
add
movb
mov
sub
rcll
sub
nop
aaa
push
movsb
fs
mov
mov
or
aam
fstpt
daa
inc
push
divl
and
cmp
mov
lods
mov
sbb
adc
sbb
xchg
mov
xor
lret
iret
sub
cld
mov
jae
data16
and
in
xor
int
ja
xor
dec
xchg
arpl
push
jmp
push
loopne
arpl
pop
cmc
clc
mov
add
sbbl
sub
loope,pn
dec
popf
xchg
mov
xor
in
mov
adcl
test
push
cmp
cs
sbb
xchg
and
ljmp
adc
jbe
shrl
ficomps
xchg
cltd
in
shlb
mov
inc
mov
jg
or
in
pop
ret
mov
lods
xchg
mov
aaa
out
mov
rcrb
aad
ret
mov
push
frstor
adc
mov
jge
cmp
sbb
pushf
movsl
mov
es
ja
sti
sti
push
mov
lret
lahf
push
or
sti
sarb
divb
and
inc
scas
cmp
movb
jl
repnz
add
gs
sbb
sbb
or
dec
mov
shrb
adc
push
cmpsb
mov
cmp
xchg
adc
bound
pushf
sub
mov
mov
out
cmp
xorb
pop
dec
jbe
aam
movsl
mov
dec
inc
push
pop
neg
push
inc
mov
and
mov
repnz
rcr
das
and
pop
cli
stos
mov
xchg
mov
notl
mov
dec
pop
cmpsl
jge
cli
jnp
cmp
test
sub
inc
fs
nop
push
in
pop
mov
dec
subps
xchg
add
jo
sti
cltd
loop
cmp
test
dec
mov
adc
mov
fldt
xchg
gs
push
iret
or
sub
addl
das
cmpsb
mov
shll
push
and
in
jae
mov
jno
push
fimull
sti
cltd
sahf
sub
add
stc
cmc
ret
aad
xchg
mov
pop
shl
ja
dec
rorb
loop
movsb
mov
push
dec
test
mov
jns
movsb
sbb
hlt
scas
sub
es
xchg
xchg
cltd
jp
adc
pushf
jg
adc
cltd
cmp
jno
rsqrtps
pop
cltd
out
push
shll
mov
jnp
push
arpl
mov
dec
gs
adc
in
xor
sbb
and
fstpt
nop
add
pop
outsb
push
dec
inc
mov
xchg
roll
cmpsb
pushf
outsb
adc
pop
dec
incb
and
fcmovu
adc
out
xor
mov
sub
adc
lret
pop
popaw
stc
fildl
push
push
adc
call
add
inc
pop
dec
push
mov
add
mov
sub
push
mov
cmp
mov
adc
popa
sbb
sub
xchg
and
inc
movsb
push
cmp
stos
ljmp
sub
popa
or
lret
aaa
push
jae
adc
str
cltd
loop
imulb
fsts
add
imul
mov
and
lret
sbb
in
inc
cmp
or
sti
sub
mov
movsb
cmp
adcb
outsb
or
call
or
repz
cmp
mov
test
sub
aam
rol
and
add
stc
ret
mov
inc
and
shrl
push
cs
in
arpl
mov
sbb
jmp
ret
nop
pop
lods
push
adc
aam
or
lahf
test
lods
hlt
mov
fptan
flds
xor
enter
out
inc
jno
pop
shl
cs
out
jae
cld
cwtl
xchg
int3
pop
mov
in
dec
jne
jmp
ja
cmpsb
dec
repz
xor
popf
and
shrb
nop
cltd
push
push
js
movsl
adc
cwtl
sbb
int3
ljmp
in
leave
sub
adc
push
aas
pop
jno
popf
pop
or
adc
push
dec
icebp
icebp
or
inc
and
loopne
pop
cmp
pop
test
scas
mov
push
mov
mov
xor
push
insb
pusha
cli
movsb
xlat
cmpsl
and
inc
or
lock
in
push
or
dec
cmp
addr16
add
les
mov
sbb
push
scas
mov
daa
sbb
xchg
aad
xor
jbe
repnz
mov
and
aas
and
xchg
fimull
test
and
pop
xchg
lock
aas
xchg
hlt
fiaddl
sbb
jp
mov
ljmp
cltd
mov
int3
shrl
lods
lcall
pushf
jecxz
pop
push
sahf
xor
ja
dec
addr16
push
imul
lea
stos
dec
mov
jne
dec
fs
xbegin
xor
arpl
cli
jg
add
and
and
lock
cmp
hlt
jno
in
fstps
add
ret
push
adc
cmp
imul
push
or
xor
sub
sub
hlt
rcrb
out
cmp
pop
xchg
rcrb
lret
jl
mov
adc
loopne
stos
inc
test
das
ret
shll
testl
arpl
mov
fildl
and
sti
jle
int3
mov
dec
dec
ss
call
jo
jle
into
mov
shrb
mov
adc
stos
fwait
inc
sub
jne
dec
sbb
dec
adc
xchg
mov
adc
adc
int3
sbb
in
cwtl
imul
dec
aam
loopne
sbb
pushl
ja
dec
in
addr16
int
arpl
push
mov
sbb
insb
call
mov
sarl
insb
aam
sub
jg
lock
popf
aam
inc
lahf
mov
test
loop
nop
dec
mov
mov
insb
fiadds
loopne
ret
cwtl
mov
or
sbb
push
inc
icebp
out
cmpsl
inc
and
cld
nop
sbb
add
sti
xor
xor
dec
mov
pop
rolb
lcall
pop
iret
hlt
cmpl
cmp
aad
push
cmp
inc
shrb
push
gs
jg
das
jo
es
lds
jbe
into
push
xor
inc
pop
leave
aas
sahf
mov
ret
cmc
pop
fwait
or
cltd
pusha
pop
daa
repz
addr16
dec
mov
mov
lret
gs
and
inc
mov
inc
test
pop
inc
clc
mov
mov
adc
imul
std
fmull
lods
or
jl
les
fimull
mov
pop
fisttps
sub
and
mov
jae
xor
sub
fs
or
sahf
adc
insb
dec
mov
neg
call
add
aad
hlt
shlb
jmp
fistpll
sbb
push
sarl
mov
dec
daa
sbb
xor
movsb
repnz
adc
sbb
ret
iret
sahf
jl
ret
pop
mov
mov
add
sarl
cmp
or
sbb
mov
repz
cmpsb
mov
cmp
push
in
ret
aas
lret
rcll
pop
pop
sbbl
inc
call
push
ds
jle
inc
sub
push
xchg
or
inc
jl
adc
jbe
int
push
movsl
cmp
lcall
sub
je
mov
aas
adc
sbb
in
adc
add
or
jno
xchg
mov
stc
bound
jbe
insb
sub
jg
sbbb
xor
sbb
nop
xor
xor
mov
movsb
xchg
xor
dec
sbb
pop
ret
hlt
jle
pop
jp
test
mov
adc
mov
mov
sub
imul
pop
lock
sti
int
fwait
out
leave
jo
cmp
sub
xchg
adc
cs
outsb
ja
dec
cmovnp
pop
jl
addr16
nop
movsb
adc
test
push
cmp
mov
movsl
xchg
inc
insb
pop
push
xchg
inc
loopne
imull
adc
insb
or
shl
enter
sbb
xor
in
adc
push
aam
jmp
mov
dec
push
jmp
movsb
fildll
push
incl
in
daa
std
adc
cmpsb
mov
scas
jmp
dec
xor
cmpsw
mov
xchg
ret
jecxz
std
jl
inc
add
xor
fimull
rcrl
test
adc
lret
and
xchg
push
fistl
push
test
jmp
popf
stc
push
fsubrl
iret
cmpsl
repnz
lahf
mov
inc
ret
pop
test
sub
push
push
or
xchg
int
sbb
xor
mov
mov
xchg
lea
pushf
xchg
and
xchg
and
sahf
rcll
sbb
xlat
xor
jno
push
ret
and
and
ja
jg
and
push
lcall
mov
xchg
mov
and
cmp
mov
or
arpl
test
mov
push
xor
fimuls
inc
xchg
or
out
xchg
xor
adc
stos
inc
insl
sbb
cmpsl
lods
gs
xchg
cmp
dec
shll
mov
pop
or
adc
dec
mov
int
or
pop
mov
into
dec
sbb
jb
jmp
mov
pop
and
mov
push
mov
pop
cmp
mov
js
push
mov
dec
arpl
pop
mov
sbb
adc
mov
push
push
fwait
leave
ljmp
push
pop
or
sub
lcall
xchg
daa
push
or
lods
xchg
mov
xchg
or
dec
mov
adc
xchg
fs
adc
jae
pusha
push
xchg
sti
pushf
in
and
mov
out
add
adc
and
mov
mov
lods
pop
mov
leave
mov
mov
adc
mov
mov
add
ds
dec
push
pop
je
pop
jne
push
xchg
imulb
xor
insl
pop
call
pushf
imul
rcrb
repz
adcb
pop
loope
adc
bound
inc
dec
sub
pop
test
incl
loopne
and
addr16
jnp
pushf
push
or
andb
in
pop
push
xchg
xor
mov
and
xor
xor
sbb
sub
aad
rcl
enter
and
pop
add
shl
xchg
ja
in
add
jnp
dec
jg
mov
in
pop
movb
shrb
insb
sub
rcl
js
xchg
fistpl
stos
xchg
popf
push
xchg
rsqrtps
adcb
std
dec
repnz
test
jbe
sub
jmp
add
mov
outsl
mov
sub
sub
ret
xchg
shll
mov
aaa
xlat
sub
and
mov
repnz
adc
cmp
inc
mov
test
add
jecxz
notb
push
jge
in
mov
jnp
and
inc
push
xor
fildll
loopne
and
scas
das
rcrb
push
jnp
mov
xchg
add
push
cmp
in
dec
or
xlat
pop
push
cmp
popf
call
sbb
inc
xchg
stos
push
xchg
loopne
adc
pop
lea
cmp
pop
jnp
dec
loop
xor
jecxz
ja
inc
inc
hlt
das
mov
fsubrl
cmp
ret
add
xchg
les
or
stc
push
cld
fdivrs
out
lods
inc
mov
pop
stos
dec
jbe,pn
mov
ja
sub
arpl
push
push
xchg
in
dec
and
jo
adc
add
cld
inc
push
xchg
push
mov
cmp
aad
cmp
push
pop
or
xor
lock
outsb
daa
or
mov
pop
pop
and
ljmp
mov
cmp
inc
pusha
roll
out
jae
cmp
dec
das
xor
mov
adc
jae
out
push
in
clc
repnz
cmp
sbb
ret
add
ljmp
push
lahf
mov
enter
outsb
jecxz
xchg
push
xor
sub
lods
push
ljmp
sahf
popf
hlt
aaa
push
push
in
mov
sub
call
aas
fbld
fmull
mov
mov
and
jmp
popl
push
adc
lods
cmp
and
bnd
subb
fs
jl
pop
hlt
xchg
scas
push
adc
push
mov
mov
mov
sub
inc
shll
ljmp
xchg
repz
nop
sahf
jbe
cmp
xchg
mov
mov
mov
fsts
movsb
inc
push
xor
loop
iret
fistpll
push
sahf
negl
movsl
lret
test
xor
xor
push
or
mov
or
aam
add
fwait
add
test
sub
jecxz
leave
jo
out
and
pop
mov
shrb
jmp
pop
jmp
push
and
and
mov
in
mov
push
sbb
mov
sub
pop
mov
test
lods
sti
out
cmp
nop
xorl
ret
jae
scas
cmp
mov
sahf
int3
mov
pop
or
bound
xchg
xchg
and
push
aas
dec
xchg
cli
xor
stos
dec
push
es
cwtl
adc
frstor
iret
shrb
stos
inc
insb
das
mov
popf
pop
jg
aaa
loope
cmp
pop
lret
inc
cltd
nop
jg
int3
push
andl
hlt
ja
sub
out
pop
rorl
xchg
cmp
push
scas
inc
mov
sub
push
shlb
scas
inc
pop
pop
testl
leave
xor
cmp
test
jbe
nop
cmp
mov
mov
lret
jbe
subb
jge
outsl
mov
int3
mov
sahf
xor
sub
in
rorb
test
inc
pop
fs
mov
adc
or
dec
cld
shrl
mov
xor
mov
mov
mov
cmp
ja
ret
es
out
in
in
jno
mov
and
jb
popf
push
add
out
repnz
inc
push
shl
xor
mov
and
adc
mov
outsl
and
adc
shll
add
push
lea
dec
cmp
or
out
add
sbb
add
iret
scas
pop
gs
mov
leave
dec
sbb
test
mov
push
gs
clc
cmp
mov
pop
fsts
loop
push
ss
call
xor
ss
inc
jge
inc
into
adcb
add
push
fdivrl
or
outsl
mov
add
dec
inc
or
in
jno
mov
insb
mov
and
aaa
cmpsl
popa
icebp
jns
into
std
and
inc
jnp
stc
xor
cmp
jbe
andb
and
pop
stos
xchg
adc
inc
jne
inc
xchg
mov
xchg
mov
daa
incl
xchg
int3
hlt
push
jge
xchg
es
xor
and
imul
paddd
lret
divb
cmp
or
test
inc
fs
inc
lock
dec
inc
mov
sahf
repnz
jecxz
roll
xor
adc
insb
fs
popa
add
fstp
jl
or
jo
in
mov
lods
bound
pop
pop
pop
rcll
mov
or
ret
adc
jp
into
cmpsl
sub
jg
mov
push
arpl
xchg
in
fildl
enter
jno,pt
adc
pop
lods
insl
ds
jle
xor
sbb
iret
popf
mov
adc
sbb
xchg
sbb
inc
mov
xchg
sbbl
clc
std
daa
jle
or
dec
and
pextrw
test
out
pop
cmp
pop
in
popf
test
cltd
iret
fwait
cmp
add
adc
sub
jnp
js
jno
les
repnz
or
and
sbbb
enter
faddl
dec
mov
pop
mov
inc
pop
dec
dec
shrl
cmp
inc
cmp
loop
ret
scas
pop
xor
test
mov
push
movsb
pusha
aaa
insl
xchg
pop
inc
mov
or
adc
lahf
test
xor
in
outsl
mov
mov
or
fsubp
xchg
scas
sub
mov
jg
xchg
les
mov
jl
dec
cmp
fnsave
xchg
jnp
jecxz
pmaxub
push
rolb
faddl
scas
iret
lods
mov
or
inc
add
pushf
dec
push
sbb
into
pop
push
pop
scas
into
add
sub
mov
out
in
push
inc
jle
es
inc
xor
sahf
mov
and
lds
push
je
inc
pop
dec
arpl
mov
xor
out
push
adc
lret
mov
cmp
jecxz
arpl
clc
enter
lret
and
je
xchg
lods
lods
stc
stos
outsl
cwtl
mov
paddb
xchg
mov
sbb
lods
push
sbb
sarl
out
and
mov
pop
pop
in
jle
loop
push
pop
inc
outsl
and
popa
into
js
mov
inc
jb
push
inc
and
push
sahf
pushf
or
pop
and
loopne
cmc
rcl
repnz
pop
fs
cmp
fnstsw
gs
decb
imul
mulb
or
bound
int
arpl
mov
fnsave
inc
mov
ljmp
jno
mov
mov
xor
or
adc
cmp
push
lret
cs
sbbb
lret
ret
scas
pop
and
push
and
test
les
dec
les
pop
sub
xchg
sub
in
in
loope
adc
sub
clc
mov
xlat
lret
xor
out
add
pop
shl
popl
jno
xlat
sub
repz
ror
ljmp
gs
mov
out
pop
mov
push
out
testl
aaa
push
hlt
pop
fyl2xp1
loope
mov
arpl
lods
dec
push
adc
sbb
cmp
jnp
jg
push
mov
incl
dec
cmp
nop
scas
or
and
pop
sahf
movsl
aas
fsubl
xchg
sub
jo
and
adc
jnp
out
push
xchg
cld
fdiv
cmc
loopne
and
jle
movsl
std
sub
scas
insl
les
mov
or
inc
xor
mov
jne
xchg
jl
or
into
jmp
dec
jl
aad
inc
xchg
outsb
stos
or
pushf
cmp
cmc
in
insb
mov
loopne
in
std
mov
je
xchg
mov
lea
inc
fstps
xchg
push
jge
cmpsb
inc
nop
ret
rolb
imul
sbb
dec
mov
pop
pop
rorl
movsl
repnz
dec
and
int
or
das
mov
mov
lcall
adc
dec
inc
sub
mov
lcall
aad
aas
insl
inc
inc
inc
push
leave
mov
sbbb
int3
jne
popa
or
inc
sbbl
adc
je
xlat
mov
xor
bound
push
in
xchg
pop
jo
cwtl
push
cmp
mov
push
sarb
loopne
dec
xorl
hlt
xor
mov
scas
outsl
mov
test
cmpsb
cmpsl
xor
xor
inc
fisubrl
mov
pop
jl
addr16
and
xchg
jmp
mov
push
orl
jmp
inc
testb
dec
mov
imul
sbb
js
mov
shrb
or
inc
test
test
adc
cmp
xchg
pop
mov
mov
shrl
pop
shlb
ds
jno
pop
rclb
aad
lock
sbb
dec
xor
sub
inc
imul
test
xor
insl
pop
movsb
mov
or
fwait
clc
dec
push
pop
repz
cmc
test
add
dec
xor
adc
dec
cmp
test
xchg
add
pop
lahf
cmp
popf
test
jle
inc
lcall
push
inc
push
pop
jge
rcl
dec
hlt
data16
adc
or
push
mov
or
in
jo
jge
or
loop
lea
nop
orb
out
mov
neg
inc
and
pop
hlt
sub
sub
mov
sub
jge
push
addr16
jo
out
jnp
and
sti
and
test
xor
dec
enter
sbb
lock
jbe
xor
cmp
mov
data16
ret
and
sbb
push
sub
mov
std
pop
jo
mov
xor
icebp
aad
in
lret
loopne
sub
dec
les
and
xor
mov
dec
xchg
add
sub
add
ljmp
outsl
xor
cmp
mov
arpl
lods
jne
pop
dec
cwtl
push
out
sarb
xchg
jge
fs
add
ret
inc
call
mov
inc
dec
push
shl
ret
mov
xchg
lods
mov
pop
movhps
in
adc
out
lcall
sub
inc
in
and
ljmp
xchg
mov
dec
mov
daa
addl
xor
rcrb
jae
fistps
sbb
js
jnp
push
fstpl
mov
mov
leave
jo
xchg
fs
js
int3
out
xor
ret
inc
daa
add
stos
movsb
adc
cld
inc
push
xor
cmp
test
mov
pusha
xchg
in
out
and
testb
mov
jl
push
jne
test
bound
addr16
push
sub
xchg
sbb
in
mov
or
mov
sbb
ret
push
cmpsb
mov
inc
xchg
xchg
sti
cld
mov
dec
cmc
and
sub
es
jg
push
inc
negb
push
or
mov
xor
std
int
cmpsb
aas
sub
aam
jnp
pop
push
jno
push
push
sbb
inc
fisubl
fisttpll
pop
pop
pop
jl
jbe
into
xor
or
loope
sbb
outsl
lea
jne
mov
cmp
xchg
stc
and
icebp
idivb
inc
cmp
ja
lret
mov
lock
pop
dec
xor
xor
jmp
cmp
lods
fadd
dec
jae
inc
or
jp
lods
xor
mov
dec
enter
aad
ret
lods
mov
and
lods
fstpl
test
mov
fwait
push
loope
add
xor
sub
mov
orl
icebp
popa
xchg
adc
jmp
push
test
in
movsb
pop
pop
pushl
mov
dec
jae
or
enter
aaa
lret
inc
cli
test
adc
fs
std
push
daa
push
sarl
inc
jmp
int3
in
div
loopne
and
push
leave
push
mov
repz
inc
sub
xor
addl
xchg
out
lret
mov
sbb
test
pop
jmp
xlat
xchg
xchg
add
xchg
hlt
ljmp
or
into
test
sub
je
scas
lods
jno
loope
sbb
pop
mov
mov
mov
fwait
jle
jo
push
mov
xlat
push
cmp
lds
ja
sbb
mov
or
repz
mov
dec
stos
pop
jp
xchg
mov
fnstenv
es
gs
into
pop
jo
jbe
insl
cmpsl
pop
cmp
test
ja
rcr
mov
inc
mov
mov
mov
addr16
je
xchg
enter
push
inc
sub
rcl
out
sub
add
cltd
aad
mov
sar
gs
lock
sahf
mov
pop
clc
dec
xlat
pop
ljmp
fdivr
or
dec
outsl
jecxz
out
shl
or
and
dec
inc
fisubs
sub
test
adc
ds
mov
test
lds
iret
pop
shrl
int
cltd
and
pop
icebp
sub
idivb
lret
sbb
mov
mov
lods
pushf
popf
xchg
inc
dec
fwait
lods
shlb
sahf
cmp
nop
notl
sbb
out
push
cmp
xor
int
mov
cld
les
out
inc
or
rcrl
in
repnz
and
mov
jl
sub
into
or
adc
mov
and
dec
mov
repz
dec
ret
int3
cmpsl
or
pop
ret
ret
in
stos
ljmp
and
test
mov
xchg
into
call
lods
mov
in
into
cmp
shrb
repnz
jl
addr16
sahf
lds
fwait
xor
stc
cli
mov
pop
push
enter
pop
sbb
sub
mov
push
fiadds
cmpsl
jle
mov
out
push
lret
and
mov
mov
adc
cmpsl
les
clc
outsb
lahf
mov
js
push
inc
jns
xlat
addr16
cmp
add
add
leave
or
sub
loop
data16
mov
adc
jae
lds
sub
sbb
cmp
mov
test
pop
sbb
mov
xchg
adc
fdivs
dec
xchg
dec
mov
inc
repz
xlat
mov
aad
shrb
sbb
cwtl
mov
inc
jg
push
int3
dec
sbb
outsl
jge
sbb
inc
mov
push
bound
rcrl
xchg
cmp
icebp
push
insl
scas
inc
ret
and
or
push
mov
dec
out
mov
cli
jle
sbb
test
mov
inc
es
arpl
push
insb
push
es
stc
pop
jns
andl
outsb
sub
test
cltd
mov
jmp
mov
pop
outsl
call
sbb
adc
sarb
imul
mov
xchg
sbb
clc
push
dec
lret
nop
or
notb
pusha
sahf
cmpsb
mov
jb
push
xchg
adc
addb
repz
imul
lock
insl
jb
mov
fcmovne
fwait
dec
add
leave
xor
jo
fsubp
movsb
inc
ret
cmc
add
sub
insl
and
loope
add
dec
leave
pushf
cmpsl
mov
in
add
jo
ret
test
test
std
mov
insl
jle
jg
adc
aas
pop
push
icebp
xchg
imul
cmp
ja
dec
rcrb
and
push
sbb
pop
mov
aas
mov
pop
loopne
push
mov
je
and
pop
cmc
mov
popf
out
add
nop
pop
outsl
stc
ja
push
out
nop
xor
neg
stc
sbb
ja
add
cmp
add
mov
cwtl
jl
movsl
mov
cmp
adc
mov
xchg
adc
mov
dec
push
add
jae
mov
insb
ljmp
add
mov
jo
inc
cs
cmp
xor
adc
stos
push
loop
mov
sbb
lock
sub
inc
in
mov
ljmp
dec
outsl
pop
insb
or
dec
test
mov
idivl
aad
push
jecxz
push
jecxz
xor
push
gs
rorl
movsb
inc
mov
insl
mov
jecxz
sbb
addw
orb
inc
xchg
es
cmp
sarb
push
jge
inc
adc
test
adc
or
lods
sbb
mov
aad
filds
cmp
xor
jmp
cmp
push
push
movsl
jbe
leave
pushf
enter
mov
call
stos
iret
inc
mov
jl
and
sub
ret
sbb
daa
cmpsl
or
test
pop
jae
pop
fisttpll
mov
ret
push
and
push
fcmovbe
xor
mov
fsubl
movsl
pop
adc
mov
call
ds
dec
mov
sub
icebp
or
dec
call
or
into
loop
iret
cs
jge
push
xor
sbb
sbb
push
daa
push
test
popa
inc
mov
enter
sbb
stc
xchg
or
cmp
and
inc
dec
jbe
jb
or
pop
mov
inc
frstor
mov
xor
cmpsb
cli
jbe
push
xchg
push
xchg
and
or
cs
sbb
push
rcr
aam
inc
sub
sub
jbe
das
cmpsl
gs
sbb
add
or
scas
cmp
repz
mov
hlt
xchg
sbb
push
mov
into
call
icebp
cmp
movb
push
insl
shrl
js
jb
mov
lea
mov
insl
mov
icebp
loopne
flds
dec
cwtl
pop
stos
mov
sti
jae
leave
popf
loop
test
pop
aad
out
pop
sbb
into
jae
jge
mov
cmp
jnp
leave
cmp
jnp
rol
shr
jecxz
jnp
push
sbb
outsb
cmpsb
pop
mov
push
jae
sub
testb
cmp
mov
dec
jl
mov
xor
ret
add
insl
dec
pop
xchg
adc
dec
fcoml
push
pop
sti
fcmovnbe
and
jl
pop
mov
ja
mov
fcoms
cwtl
lods
jne
xor
mov
loope
sub
jge
pop
ljmp
inc
fists
sarl
mov
lahf
mov
pop
inc
add
arpl
jne
inc
insl
mov
icebp
mov
inc
outsl
mov
mov
or
pop
mov
inc
push
js
lcall
sub
xchg
repnz
rol
es
cwtl
ficomps
jl
jmp
loope
shlb
jp
test
or
in
out
in
into
jle
fbld
cld
into
inc
out
xchg
fimuls
cltd
addl
stos
add
sbb
cwtl
popf
push
xchg
push
daa
stos
lods
in
sti
xchg
push
mov
and
sub
push
jb
popa
into
pusha
jae
stos
jp
test
ljmp
outsl
jmp
mov
or
adc
mov
popa
push
xor
fidivs
dec
jnp
pop
outsl
lods
fiadds
mov
jg
scas
sbb
and
cmp
movsl
sti
aam
xchg
xchg
mov
mov
test
cltd
sub
cli
jmp
in
or
mov
out
pop
mov
xchg
mov
ret
jo
aam
xchg
cmp
sub
adc
pop
push
push
mov
repz
daa
aad
push
push
sub
test
adcl
cmp
aas
dec
cld
popa
cltd
push
xchg
xchg
sub
dec
je
dec
mov
inc
loop
adc
psubd
repz
rolb
ss
inc
push
jnp
lcall
inc
lret
adc
daa
xchg
lret
push
fwait
adc
cld
call
mov
imul
push
cmpl
or
mov
nop
jns
aaa
xorl
test
mov
sbb
inc
kxnorw
sub
jp
clc
mov
test
xchg
dec
add
sti
les
mov
enter
mov
dec
loope
mov
pusha
mov
and
jl
jnp
jae
adc
inc
jno
orl
adc
divb
shlb
aad
in
dec
stos
xor
hlt
enter
mov
popl
sub
das
adc
stos
iret
imul
cmpsb
js
aaa
iret
lods
inc
inc
adc
imull
movsb
push
jecxz
dec
filds
sbb
dec
sbbb
fidivl
scas
pop
test
ret
inc
loope
daa
jle
retw
icebp
outsb
jbe
add
xor
push
or
test
add
ret
nop
loopne
xchg
cmpsl
fidivrs
jno
cmc
dec
pop
ret
scas
loop,pt
xorl
test
xchg
xchg
jl
fisttpll
lahf
mov
and
sub
jg
lds
mov
xor
pop
fmull
cmc
inc
sub
inc
cli
pop
push
xor
sbb
lds
stc
clc
sbb
or
xor
movups
push
dec
xchg
out
or
xor
dec
notl
xchg
gs
mov
or
scas
ja
push
xor
jb
mov
dec
insb
pushf
sbb
lods
jae
repnz
and
leave
lods
mov
lods
pop
cli
je
pushf
scas
enter
sbb
rclb
or
or
xchg
aam
xor
jne
mov
adc
lds
imul
pop
xchg
ja
mov
inc
pop
loop
jbe
push
mov
inc
xor
add
inc
and
push
pop
sahf
pop
call
add
pusha
dec
cmp
or
imul
fmul
scas
cmp
adcb
es
pusha
divl
mov
push
sbb
cmp
xor
sbb
pop
inc
ret
push
inc
jo
icebp
and
in
pop
push
push
xchg
roll
fimuls
rorb
or
lahf
push
adc
sbb
je
dec
int3
push
xchg
loop
xchg
ja
mov
adc
in
fucomi
stos
iret
pop
xor
shll
stos
mov
scas
fs
or
xor
dec
stos
mov
ret
das
jns
shrl
or
pop
xchg
mov
push
outsb
idivb
mov
pop
mov
outsl
mov
repnz
pushf
cli
xchg
lea
and
and
outsb
fildll
xchg
mov
in
mov
push
bound
loopne
and
rcrb
jbe
sarl
fists
cltd
andl
mov
mov
je
hlt
fdivrp
das
fisubs
bound
jo
out
dec
filds
dec
sbb
imul
loop
ljmp
sbb
call
mov
lea
mov
ja
shll
ret
adc
adc
push
sbb
jne
test
mov
lahf
repz
sahf
je
sbb
cld
sub
cli
cmpsb
mov
scas
outsl
dec
jecxz
xor
sbbb
add
in
sub
jge
jnp
dec
fisubrs
adc
sub
or
rolb
jle
add
push
mov
sbb
push
fwait
rorl
fildl
sbb
andl
cmpsl
daa
mov
mov
std
in
sub
mov
xchg
push
cltd
fistps
fwait
mov
fsubrp
lret
mov
jo
adc
clc
and
rcl
inc
imul
mov
mov
and
jb
subb
and
mov
shll
push
lds
xchg
dec
test
outsl
add
pop
push
test
in
fstl
inc
hlt
dec
adc
xchg
cwtl
mov
xor
mov
push
cmp
outsl
inc
add
mov
test
aam
scas
imulb
ja
pop
imul
in
xchg
cli
cmc
push
fsubl
stos
push
cmp
rcll
mov
mov
push
mov
mov
and
jge
out
pushf
mov
xchg
or
les
mov
push
pop
inc
test
add
fs
mov
aaa
xchg
or
fcoms
scas
ljmp
aam
mov
xor
jp
out
aaa
push
inc
fs
nop
xchg
les
pop
xor
inc
mov
scas
fldt
and
add
mov
adc
push
cltd
stos
mov
push
mov
jne
fsubp
imul
cltd
inc
aaa
pop
das
mov
mov
repnz
imul
mov
sarb
xchg
ljmp
nop
lea
mov
mov
inc
lea
xchg
ffree
cmp
outsb
jmp
push
test
sbb
mull
adc
adc
hlt
arpl
sub
xchg
cmp
fisttpll
adc
adc
xchg
mov
mov
or
cmpsl
or
pop
jle
hlt
lock
test
lret
sbb
push
push
push
cmp
popa
int
test
movsb
and
andb
data16
xor
dec
inc
xlat
cld
cmp
xchg
dec
push
call
pop
and
adc
stos
outsb
or
xchg
dec
pop
data16
mov
jmp
notl
pop
gs
jge
add
int
dec
add
out
inc
jno
mov
das
pop
dec
addr16
mov
cltd
movsl
insw
movsb
dec
jge
xor
push
gs
insl
aaa
add
mov
cmp
inc
sbb
ss
inc
mov
lock
nop
mov
inc
fidivrl
cld
push
cli
loopne,pt
or
aam
cltd
or
fsts
push
and
divb
gs
xchg
aam
rcl
mov
in
into
out
aam
xchg
lock
cmp
add
sub
inc
cwtl
loop
inc
cmp
add
rclb
sbb
jae
int3
and
int3
movsl
popf
push
sub
in
shrl
push
leave
pusha
in
mov
push
fs
rcrb
jns
je
sub
xlat
loope
aaa
ret
dec
and
sbb
cmc
filds
pop
test
cmp
add
mov
cmp
sub
sti
pop
cwtl
adc
arpl
out
sbb
in
dec
push
mov
sub
ds
mov
dec
adcl
popa
rcll
movsl
cmp
add
xchg
add
mov
and
jl
or
inc
out
aas
mov
into
pop
and
mov
mov
cwtl
jecxz
stos
stos
scas
mov
xchg
sahf
orl
adc
add
js
mov
mov
xchg
jmp
dec
mov
sub
bts
mov
decl
and
adcb
je
outsw
lea
test
jle
add
daa
sub
loopne
or
fwait
jns
push
xchg
xchg
push
loopne
xor
das
mov
xchg
add
sbb
lcall
ljmp
shrl
cmp
mov
in
ds
push
loope
push
sbbb
pusha
shrl
mov
enter
lea
and
into
or
inc
mov
push
xlat
popa
test
push
and
cmc
xchg
mov
cmp
stos
out
pop
push
jp
cmp
in
cmc
pop
mov
dec
push
pop
shll
jg
cmpsb
lret
sbb
mov
inc
sbb
mov
xchg
push
push
xchg
mov
sub
mov
fwait
testl
mov
mov
aaa
in
dec
stc
push
out
aad
inc
test
mov
push
add
push
pop
ret
cmp
gs
ljmp
in
stos
push
gs
cmpsb
push
cmc
inc
sub
clc
and
lock
addr16
mov
add
fidivrl
inc
jp
fisubs
ficompl
sbb
and
jg
jp
fstl
sti
jno
push
lahf
mov
mov
cmp
jns
lea
pop
int
outsb
imul
mov
or
imul
popa
ret
or
push
xor
push
cmp
lcall
outsb
sbb
gs
jb
sbb
insl
cwtl
fdiv
mov
pop
shl
add
and
pop
rclb
fstps
push
ljmp
adc
sbb
and
sahf
pusha
outsl
dec
lea
daa
or
mov
jbe
dec
hlt
xchg
add
mov
outsb
scas
stc
std
nop
adc
daa
xchg
pop
popa
cmp
cmp
test
jo
mov
std
and
push
lret
test
rcrl
inc
and
fisttpl
pop
sub
outsl
scas
jmp
mov
or
mov
roll
sub
inc
jmp
xchg
sbb
adc
ficoms
ficompl
fidivrs
ja
ret
imul
xchg
mov
jp,pn
scas
scas
cmpsb
xor
fldt
mov
pop
aad
popf
adc
iret
jp
and
imul
mov
insl
outsb
pop
push
out
loop
dec
pop
cmp
pop
popa
sahf
xchg
fimull
xor
dec
mov
adcb
arpl
lea
rcl
add
or
test
je
lock
fsubs
lock
push
sbb
adc
inc
enter
cmc
lds
stos
jb
fdivrl
mov
jl
pop
mov
testl
out
aaa
adc
jle
jno
stos
scas
in
cmp
repnz
jns
xor
lcall
lock
inc
popa
push
cltd
add
ljmp
test
push
xchg
mov
adc
fstl
or
mov
inc
adc
scas
bound
dec
inc
xchg
jnp
xor
mov
es
stos
cwtl
cmp
push
pop
ds
mov
iret
add
mov
imul
and
xor
push
addr16
fisttpl
fstpt
sbb
sti
gs
jmp
and
jb
cld
mov
rcr
iret
mov
into
sbb
inc
test
mov
cmpsl
mov
ret
inc
mov
or
cld
mov
test
popf
aas
push
test
cmp
lsl
mov
data16
mov
jmp
dec
subl
lret
and
or
leave
mov
inc
adc
jmp
push
push
sbb
xor
addb
nop
pop
lahf
arpl
cmp
stos
mov
xbegin
and
and
sbb
or
insl
pop
sub
aas
testl
in
aad
jl
add
shlb
popa
fnstsw
aam
icebp
scas
stos
sub
mov
enter
andl
rorl
stos
xchg
insl
pop
js
out
sbb
push
jnp
xchg
lahf
jge
jmp
xlat
push
icebp
inc
dec
push
cltd
ficompl
roll
popf
fistl
lock
arpl
mov
je
push
ja
test
xor
jmp
sub
pushf
int
xor
jno
das
testb
std
dec
inc
pop
rcrl
repnz
xor
sahf
adc
add
sbb
mov
lahf
sahf
mov
cmc
jle
std
jecxz
dec
dec
test
mov
jne
sbb
mov
sub
adc
push
clc
mov
push
pop
pop
or
xor
push
loopne
sub
jae
fcompl
push
pop
mov
into
xchg
dec
cmpsb
push
pop
or
dec
inc
stc
lods
adc
ret
xchg
xchg
jp
dec
pop
inc
pop
setge
jne
lock
ljmp
fstl
in
or
jl
cmp
inc
pop
sub
insl
fs
loopne
fldcw
stos
imul
stos
shl
and
inc
mov
cld
daa
jl
loopne
imul
out
les
rep
sbb
add
mov
imul
insb
sub
subl
movsb
into
mov
inc
fistl
addr16
jmp
adc
in
lods
sbb
addr16
jae
inc
enter
movsl
sub
dec
fists
pop
lods
or
mov
push
mov
add
jecxz
adc
inc
mov
iret
popf
push
rorl
dec
ret
and
ja
popa
sub
and
rorl
xchg
push
insb
sub
pop
lret
scas
rcrb
jecxz
ret
mov
cmp
mulb
pusha
aad
pop
lock
xchg
mov
test
in
les
jne
or
push
jmp
daa
test
and
sub
push
sbb
mov
xor
daa
ret
cmp
sub
js
imul
lahf
mov
mov
iret
mov
nop
rol
int
shrb
xchg
push
sub
mov
mov
lea
pusha
mov
out
aam
xor
mov
aas
add
add
leave
mov
and
insl
push
mov
mov
sub
sub
stos
sub
adc
stc
and
cmp
out
repz
adc
fwait
xchg
fidivs
adc
popl
cli
jns
mov
idiv
sbb
push
cli
insb
and
pop
pop
lret
cmpb
inc
adc
push
lods
pop
aad
push
xor
loope
mov
rorl
sbb
inc
scas
sub
fxch
in
test
mov
xchg
pop
int3
cmp
inc
out
jns
jo
ljmp
cld
in
movsl
scas
and
daa
add
sbb
pushf
mov
scas
adc
inc
push
dec
and
adc
popa
adcl
mov
mov
cltd
jge
das
aam
sarb
lret
jbe
add
inc
outsl
push
seto
cltd
inc
dec
js
jae
mov
cmp
adc
adc
test
mov
div
loop
sahf
adc
pop
mov
mov
dec
fisubrl
pushw
mov
insl
fdiv
jns
repz
dec
sarl
add
mov
pop
inc
jle
push
adc
std
sub
xor
add
adc
pop
add
jmp
xor
lock
jo
in
sub
cmc
cmp
sub
js
lds
sub
insl
enter
xor
mov
outsb
scas
xor
xchg
outsb
imul
mov
insb
loope
and
fildl
sub
insl
or
jl
aam
test
jno
subl
sub
push
lcall
pop
mov
sbb
cmpb
fisubrs
or
scas
push
jbe
int
in
addr16
inc
stos
push
and
clc
inc
aas
mov
pop
sbb
pop
mov
pop
inc
idivb
pop
add
divl
cmc
rorl
push
shll
push
daa
add
push
das
or
and
fimuls
call
xor
adc
cli
or
lcall
stc
mov
jnp
aam
ljmp
ret
jmp
and
or
sbb
out
into
pushf
das
sbb
mov
mov
inc
push
js
pushf
sarl
inc
ljmpw
push
jne
mov
aam
jns
mov
js
aad
mov
test
adc
push
fadd
jg
mov
xchg
loope
or
nop
mov
inc
and
push
adc
push
sub
fstl
fistpll
pusha
and
cmc
nop
mov
lret
inc
in
and
cmc
stos
fwait
shlb
jo
cmpsb
fcmovbe
xchg
pop
call
loop
add
ficomps
xor
das
xor
xor
les
test
jge
imul
dec
fnstsw
xchg
jl
xlat
lods
repz
imul
cmp
in
mov
jae
shll
mov
push
ljmp
mov
int3
mov
sbb
iret
pushf
bound
dec
mov
lahf
loopne
jl
into
add
in
inc
sub
flds
incb
or
xlat
inc
in
mov
ud1
loop
xchg
mov
pop
xor
inc
stos
adc
jmp
insb
cmp
adc
das
and
lret
jecxz
sarb
or
ja
add
inc
imul
lods
in
data16
inc
bound
idivb
ret
ss
insl
aam
out
push
adc
add
mov
mov
call
mov
lahf
enter
mov
xchg
push
add
and
addr16
pusha
pop
sbb
jo
add
daa
cwtl
sbb
pop
add
dec
rcrb
iret
stos
dec
mov
insl
testl
and
jecxz
enter
dec
clc
icebp
lea
jmp
jp
jecxz
cmpsb
sahf
aad
pop
jmp
mov
fs
and
in
xchg
xchg
and
and
lea
mov
sub
or
inc
imull
orb
iret
sub
xlat
sahf
dec
pusha
xlat
orb
int
pop
repnz
fcmovb
inc
int3
pop
fsubr
and
std
fsub
mov
mov
adcb
leave
push
data16
loop
dec
test
jp
add
or
in
sub
mov
ds
or
enter
xchg
mov
jge
daa
xchg
popa
jb
repz
mov
sub
or
rorl
repz
sbb
lods
out
imulb
sub
pop
xor
inc
das
push
dec
ss
out
outsl
add
mov
testb
sub
jae
adc
cwtl
shll
sti
lock
mov
pop
lods
add
xchg
ret
push
aas
fstpl
hlt
pushf
ljmp
enter
shrl
aad
push
loope
in
das
adc
rolb
shrb
bound
sarb
dec
imul
mov
fdivs
das
pop
ljmp
jge
sbb
ljmp
push
or
insb
mov
insl
and
jecxz
scas
leave
xor
ret
loope
or
loopne
scas
or
test
fsts
cmpsl
or
jg
mov
xchg
cmp
inc
jmp
je
loopne
jmp
ljmp
ret
lahf
cwtl
sub
cmp
aas
or
jbe
mov
ja
add
sahf
std
dec
fimuls
push
test
dec
pop
xchg
lret
enter
scas
jmp
or
popa
cltd
adc
and
cltd
inc
sub
mov
or
mov
jb
pop
fists
adc
insl
shl
mov
jno
aad
movsb
or
mov
sub
adc
les
xor
sbbb
mov
mull
jge,pt
out
fwait
idiv
das
repnz
and
mov
scas
and
das
shufps
mov
mov
sahf
sbb
movsb
push
es
leave
sbb
jle
push
xchg
scas
fiadds
cld
add
stos
adc
or
mov
mov
popf
sub
jae
sti
or
insl
cmp
lds
and
push
sub
lds
stc
mov
arpl
sbbb
or
mov
ret
ss
dec
fwait
fldz
push
test
sub
dec
jg
fbld
add
mov
xchg
andl
jl
mov
push
ret
dec
imul
or
pushf
aaa
lcall
cs
sub
push
fldl
cmp
lret
bound
add
push
outsl
fisubs
add
jecxz
lcall
jae
iret
mov
cwtl
push
subb
loopne
pop
push
dec
daa
divb
js
push
mov
jmp
push
ljmp
pop
push
stos
in
lock
push
jno
mov
scas
sbb
adc
int
and
sbb
add
lods
movsl
inc
mov
aam
rclb
jns
inc
add
cmpsb
or
lea
and
in
std
aas
repnz
gs
ret
add
xchg
loopne
push
mov
add
sahf
xchg
jae
pop
add
jl
loopne
repnz
mov
rcrl
mov
lret
std
push
fildll
sub
adc
jb
popa
imul
adc
jno
adc
jbe
jb
arpl
mov
int3
adc
jge
push
movsl
pop
das
xchg
sarl
mov
push
aaa
push
mov
stos
fisubs
lock
or
adc
push
lods
pop
rorb
repz
pop
fcoms
lea
in
pop
add
adc
aas
and
and
insl
inc
push
jp
adc
xor
mov
push
jne
xchg
fs
loopne
in
push
enter
and
pop
inc
in
es
push
cmpsl
inc
rorl
push
mov
xchg
sub
or
vpsrlq
and
mov
mov
cmp
jecxz
lds
xchg
fnstenv
mov
mov
nop
pop
sbb
incb
xor
rcrb
cmp
xchg
lock
shll
out
mov
mov
or
mov
rolb
and
aam
xor
cs
fisttpl
lea
aas
jmp
stc
fsubr
add
pop
inc
and
push
daa
movb
mov
ja
rcrb
xchg
imul
lea
fisubl
push
cmp
xor
add
repnz
xor
mov
inc
lea
ss
adc
or
in
jge
aaa
inc
or
add
push
push
ret
rcrb
test
js
adc
dec
jne
xchg
outsb
es
sub
movsb
mov
xor
idiv
lea
sub
mov
mov
notb
push
jbe
and
icebp
pop
sahf
pushf
pop
jg
push
rcrb
hlt
xor
sbb
adc
iret
jae
sbb
subl
or
jbe
xor
lods
incl
xor
and
sub
test
push
mov
das
or
xlat
fldt
dec
cmpsl
pushl
adc
mov
sbb
and
ror
add
call
xor
mov
sbb
aad
mov
ret
lock
pushf
mov
jmp
loopne
adc
jmp
sub
insb
stos
push
dec
lret
jnp
lods
push
fisttps
jg
mov
and
scas
aas
out
push
data16
out
loop
dec
mov
js
lods
fwait
add
cmpsb
cmp
mov
sbb
data16
mov
sarb
stc
sbb
jmp
pop
push
fdivr
add
pushf
into
xor
outsb
out
mov
and
mov
fisttps
add
test
imul
in
sub
and
stos
mul
inc
pop
adc
mov
cltd
ds
cmp
out
cmc
and
rolb
mov
arpl
pusha
mov
out
mov
idivb
bts
sbb
scas
mov
fisttpl
mov
shlb
int3
xor
lret
push
mov
push
mov
pop
dec
dec
xor
pop
jbe
outsb
scas
mov
cltd
ss
add
clc
popf
adc
mov
out
mov
jo
push
inc
call
sbb
in
iret
cmp
jns
call
mov
lret
dec
gs
push
adc
xchg
sbb
scas
into
dec
xor
dec
jecxz
sub
add
shl
and
mov
repnz
ljmp
insl
xlat
push
rolb
xor
sti
inc
es
cwtl
pushf
stc
into
xchg
shll
cmp
aaa
lret
popf
fdivrl
fmul
push
dec
mov
inc
test
loope
shll
mov
sbb
pop
js
ficompl
push
inc
int
xchg
or
push
or
sbb
aam
lea
aaa
cmpsl
mov
and
adcl
inc
repz
stos
sub
popa
out
mov
fsts
add
out
loopne
xor
jns
cmp
jge
jle
shlb
push
adcb
repz
dec
add
jb
rdpmc
scas
scas
push
adc
add
dec
movsl
jno
pop
ret
lret
out
push
push
push
jo
in
xchg
pop
push
pop
fcompl
mov
imul
push
add
test
inc
mov
ds
inc
test
and
out
out
inc
cmp
or
mov
out
mov
xchg
mov
cli
push
mov
mov
mov
push
sbb
repnz
xor
icebp
sbb
outsl
jae
loope
mov
dec
xor
add
jns
std
jmp
mov
jb
pushf
imul
fwait
or
xchg
xchg
xor
jb
jge
pop
xacquire
mov
jbe
sbb
or
out
pop
jnp
xchg
insb
dec
cmp
dec
out
mov
inc
cmp
call
enter
repz
xchg
lea
adc
mov
mov
mov
jbe
je
adc
xchg
jl
jmp
mov
outsb
push
mov
mov
addr16
mov
sbb
das
in
mov
stos
addl
pop
push
sub
rcl
inc
ret
xchg
cs
out
ret
ja
je
cmp
fdivs
stc
adc
jbe
jnp
loop
push
daa
loope
lods
add
mov
lea
pop
ljmp
insb
sahf
js
js
fistl
idivb
int3
rcrl
inc
dec
int
cmp
jmp
push
mulb
mov
xchg
push
mov
adc
xchg
add
stos
pop
xor
or
push
jp
dec
xchg
adc
sub
rcrl
cmp
mov
jl
dec
lcall
push
mov
push
xchg
call
incb
stc
shl
sub
je
ret
sub
movsl
cmp
xchg
mov
mov
test
aam
xor
sbb
mov
add
shll
incl
sbb
loopne
enter
lods
aaa
or
inc
popf
adc
stos
dec
and
daa
shlb
pop
dec
and
outsb
sti
in
test
mov
ljmp
sub
cld
sub
dec
rorl
sub
lret
hlt
xor
pop
sbb
mov
sbb
imul
in
nop
divl
jecxz
add
cmp
sub
add
fnstenv
xchg
arpl
add
jle
inc
popf
mov
into
dec
pushf
push
ja
cmp
or
and
mov
popf
push
jge
aad
jnp
fmul
icebp
rorb
stos
cmpsb
enter
fisttpl
mov
psubsb
out
xchg
icebp
mov
repnz
push
ret
fiadds
xor
pop
movsb
xlat
push
leave
or
test
and
xchg
pop
pop
add
and
dec
jno
lret
xchg
mov
mov
add
lahf
push
lods
in
xchg
add
stc
xchg
mov
add
js
jns
inc
testb
imulb
sub
sbb
rolb
adc
clc
rcl
mov
jns
les
pop
fsubs
jno
stos
call
sbb
pop
mov
lods
in
pop
adc
pop
adc
test
add
stc
push
pusha
imul
clc
dec
fisttpll
adc
test
xchg
mov
rcll
cmp
sbb
cmp
mov
or
in
cmp
jp
je
or
mov
enter
mov
sti
mov
inc
lock
jp
dec
xchg
enter
shlb
sbb
ss
mov
adc
mov
or
sti
inc
push
pop
in
pop
aaa
mov
pusha
mov
je
enter
adc
or
mov
sub
sbb
xchg
out
sbb
mov
testb
cwtl
lret
or
packsswb
sarb
ljmp
adc
rclb
jae
mov
das
and
xchg
movsb
leave
pop
dec
fs
sbbb
pop
sarl
push
cli
shlb
out
into
incb
insb
es
lds
pop
cmovle
leave
es
je
ja
loop
leave
mov
pop
mov
sti
ja
rcll
lods
xchg
mov
sub
pop
test
ss
insb
dec
lods
xchg
and
jbe
lret
out
cltd
xchg
cli
cmp
loop
pop
stos
mov
mov
flds
inc
mov
xchg
adc
test
push
add
frstor
push
push
call
fbld
aad
push
std
fmull
jmp
xchg
push
popf
xchg
mov
out
inc
rclb
mov
xchg
adc
pop
pop
adc
mov
in
ja
inc
mov
insb
stos
mov
ret
and
test
lcall
cmc
cwtl
cs
xchg
loope
cld
nop
xchg
sub
dec
sti
mov
stos
lahf
and
sbb
pop
repnz
push
jl
xchg
les
ror
sahf
xor
negl
data16
imul
xor
sahf
push
shlb
push
je
cld
xlat
xchg
add
mov
test
sti
aad
arpl
add
insb
call
sub
mov
push
mov
jp
and
aaa
push
mov
add
inc
je
bound
lret
mov
dec
test
pushf
ficomps
pop
fisttpl
dec
push
dec
mov
fs
icebp
xchg
dec
add
push
ret
mov
cwtl
outsb
sahf
icebp
cwtl
in
fcoms
cmp
daa
arpl
movsb
adc
dec
sbb
lret
stc
pop
mov
sub
gs
xchg
jnp
cmp
jmp
gs
mov
bound
mulb
arpl
push
cld
or
add
dec
nop
sub
stc
xchg
out
sbb
mov
loopne
push
ret
xadd
inc
fidivl
jnp
rolb
mov
pop
cltd
stos
cmp
xor
mov
jns
cs
cmpsb
xor
mov
andl
jb
or
dec
aaa
sub
xor
fwait
sub
jae
mov
ror
sub
dec
lods
out
or
jmp
fsubrs
xchg
repnz
dec
jmp
push
inc
loope,pt
aas
adc
insl
xor
sub
test
add
inc
out
rcr
shll
dec
nop
lret
add
sub
mov
add
sbb
lock
popf
adc
dec
pop
xchg
pop
add
mov
arpl
leave
outsb
cmp
loope
fwait
xchg
add
cwtl
inc
aad
mov
ds
cmp
lcall
jecxz
pushf
cs
xchg
or
mov
scas
cmp
or
dec
lds
mov
lock
popa
push
pop
pop
mov
jno
or
fucomi
ja
in
dec
push
mov
dec
enter
pop
sbb
mov
or
push
sahf
jnp
call
mull
cld
je
sub
sbb
testb
jbe
ret
popa
test
push
gs
mov
mov
arpl
ficoms
test
sbb
repz
sbb
aad
jle
dec
sbb
sbb
mov
adc
cltd
mov
mov
sub
std
push
loopne
mov
sub
jmp
push
adc
dec
lea
jo
les
or
or
xchg
cmpsb
incb
and
iret
aam
scas
cli
mov
gs
mov
and
test
hlt
jo
jb
mov
adc
xchg
out
cld
xlat
adc
xchg
xor
scas
inc
or
stc
lods
shll
js
bound
cmpsl
andl
jl
add
iret
hlt
test
fdivrl
jecxz
xor
and
out
scas
push
aas
les
fsubrs
or
movsb
bswap
dec
pop
push
in
fwait
push
dec
push
jmp
movsb
mov
outsl
shll
adc
ret
jecxz
stos
pushf
adc
cmpl
lea
jle
push
in
fsubs
insl
xor
add
and
jo
daa
pop
movsl
or
jg
push
adc
xor
cmp
mov
and
sbb
in
inc
jecxz
sti
mov
jp
sub
enter
fisttpl
jecxz
dec
push
cmp
cmp
add
fsincos
jbe
lcall
test
ss
nop
xchg
cs
loopne
idiv
mov
mov
lahf
out
ficomps
jb
mov
xor
fsubl
mov
lret
add
repnz
inc
sbb
inc
ficoms
sub
ffree
es
iret
repz
push
xchg
aad
dec
pop
adc
bound
sub
sahf
out
inc
mov
aad
inc
fldenv
jl
loope
shll
inc
dec
shrl
inc
dec
sub
leave
cmp
mov
mov
mov
js
lahf
xchg
lods
mov
das
rorl
pop
and
loope
mov
sub
mov
push
cmpsl
sub
jecxz
loopne
cmpsb
and
fdivs
add
mov
imul
add
ret
push
inc
shll
out
aam
pop
pop
dec
mov
cmp
add
add
ret
xchg
add
mov
mov
lds
repnz
subb
lods
leave
xor
push
negl
mov
scas
inc
sti
pusha
and
fistps
mov
prefetchwt1
push
loopne
dec
jle
in
cmp
sub
lcall
mov
iret
adc
and
es
mov
fiadds
inc
hlt
adc
cmp
gs
push
out
mov
das
xchg
test
gs
pop
aaa
push
add
and
mov
inc
mov
outsl
test
pushf
xchg
xchg
xor
lods
dec
mov
dec
jecxz
mov
jno
test
fdivrs
fistpll
outsb
xor
pop
es
sbb
mov
ss
add
and
add
js
test
jno
int3
in
ljmp
xchg
imul
pop
pop
or
jne
xchg
jecxz
mov
icebp
imul
inc
mov
testb
mulb
rolb
adc
add
cltd
dec
shrl
xchg
adc
popf
bswap
das
jnp
mov
sub
xor
mov
jmp
and
sbb
inc
js
pop
jmp
in
inc
push
mov
dec
xchg
jmp
sbb
mov
pop
xchg
jb
mov
in
ror
dec
repz
adc
lods
daa
rorb
stc
insb
jp
lock
adc
jp
sti
bnd
add
mov
ret
fiaddl
adc
ds
mov
lock
dec
mov
scas
in
aam
cli
mov
add
mov
dec
and
imul
popf
leave
fwait
mov
loopne
or
lock
std
mov
mov
repz
sbb
std
pop
pop
test
xor
fisubl
lock
xchg
xchg
nop
mov
cs
mov
stos
sti
push
out
mov
hlt
repnz
jns
pop
dec
mov
inc
push
lds
and
out
test
addb
push
or
mov
pop
dec
in
fsubrl
jmp
inc
xchg
rorl
add
testl
roll
hlt
mov
push
xor
lods
or
aas
mov
cmpsl
mov
jle
ret
cmpsl
mov
lods
aas
mov
xorb
roll
inc
divl
jle
cld
repz
push
cmp
loopne
fmulp
bound
ret
jae
add
adc
scas
add
sbb
rcl
cmc
mov
clc
ss
lret
inc
cmp
cmp
jae
fcompl
jnp
divb
xchg
shlb
dec
movsb
add
movsl
cmpxchg8b
lahf
jae
jmp
mov
scas
cli
xchg
scas
stc
xlat
jne
lock
out
push
xlat
jmp
movsb
jmp
push
vcvtpd2psy
aas
jns
push
jmp
pusha
fcmovb
out
lea
int
sti
sbb
mov
cmp
dec
dec
scas
adc
jle
cmpsb
jl
out
pop
js
pop
mov
jp
mov
pop
jno
xor
leave
clc
mov
fs
jecxz
loope
sub
les
mov
les
sbb
es
adc
xchg
test
aaa
mov
loopne
imul
outsb
gs
sub
pop
outsl
sub
adc
mov
std
pcmpgtb
mov
test
fcomp
mov
add
ss
or
xchg
shll
imul
jne
jge
sbb
xchg
jl
cmp
mov
aad
in
and
movsl
xor
mov
xor
and
popf
aam
inc
and
cwtl
aam
inc
cmpsl
hlt
xchg
shrl
add
cmc
jp
outsb
xchg
pop
enter
subb
add
scas
and
inc
movsl
andl
mov
xor
pop
mov
add
cwtl
es
sub
xor
imul
dec
cmp
push
pop
and
mov
imul
and
mov
ss
sbb
imul
mov
cmp
push
icebp
in
popa
mov
stos
sub
sub
aaa
mov
mov
scas
jle
scas
xor
js
in
sub
shll
xor
mov
add
xchg
inc
stc
push
rolb
dec
lahf
fidivrs
fisttpll
cwtl
xchg
faddp
mov
pop
and
lret
xor
dec
fabs
test
cmp
push
sbb
inc
jp
je
jns
rcl
push
adc
stos
mov
or
sbb
dec
push
mov
int3
pusha
sub
roll
adc
fs
int3
sbb
inc
shll
mov
stos
pop
sbb
imul
filds
std
fcmovbe
mov
cmp
enter
outsl
in
xchg
test
push
cmp
shll
push
sti
add
and
mov
xchg
mov
andl
lods
scas
shrb
lock
lret
subl
cmpsb
xchg
and
pop
dec
inc
les
add
leave
mov
adc
dec
repnz
push
hlt
inc
orl
pop
in
pusha
popf
lock
xor
inc
nop
int
xchg
mov
fs
cmp
es
mov
jmp
enter
int3
sub
and
icebp
fisubs
jbe
jbe
cmp
lret
xchg
std
push
dec
call
pop
inc
jae
sbb
jl
mov
dec
ret
xor
mov
subb
stos
into
movsb
cmp
jae
jbe
out
lods
cmc
mov
aad
sub
sbb
mov
jge
rol
sbb
ljmp
adc
movsb
aaa
shr
ljmp
sahf
inc
inc
jne
fdiv
lods
popf
loope
gs
gs
dec
mov
push
jne
adc
cmp
movb
popa
xor
push
mov
or
dec
es
rorb
cld
xor
pop
mov
sbb
sub
and
test
dec
iretw
std
nop
fwait
sub
push
aad
daa
hlt
stc
jge
insb
and
jg
inc
in
mov
dec
nop
inc
jmp
andps
jmp
je
mov
jb
add
shlb
mov
sub
nop
xchg
dec
and
xor
dec
movsl
les
mov
js
lods
stos
push
int3
pop
mov
insb
or
add
scas
pop
mov
mov
mov
imul
mov
mov
fsubp
movsb
repz
movsl
mov
xchg
cmp
cwtl
in
mov
add
ret
scas
aas
test
ljmp
inc
clc
mov
push
jge
sbb
ss
sarb
pop
sub
outsb
jbe
ss
sub
xchg
sbb
xlat
sbb
mov
fldl
push
jmp
and
adcl
fstpt
xor
bound
shl
pop
bound
mov
sbbb
fiadds
inc
jae
jne
icebp
push
inc
push
pop
cmpsb
imul
lcall
jp
cld
jp
imul
aas
and
mov
mov
lahf
or
pop
aas
and
icebp
mov
inc
cltd
dec
mov
popf
mov
rolb
jnp
mov
sub
les
adc
xlat
int3
lods
lods
xchg
xlat
sub
and
mov
add
divb
or
pop
data16
mov
loopne
jo
jp
scas
out
repnz
adc
addr16
shll
filds
out
push
mov
insb
fisttps
leave
xlat
inc
fsubl
adc
jae
mov
insb
cmp
mov
mov
sbb
sub
inc
mov
xchg
jb
andb
add
mov
into
mov
es
movsl
rcll
add
in
lds
test
les
mov
ret
test
mov
push
aam
mov
jno
inc
gs
std
out
xlat
cmpsl
jg
push
lods
dec
inc
insl
pop
push
outsl
pop
mov
fsub
jo
jno
pop
jo
xlat
loopne
dec
mov
enter
dec
sub
out
fnsave
mov
mov
cmc
outsb
jno
js
fcmove
pop
pop
dec
pop
xor
repnz
sub
lcall
testb
mov
mov
xor
es
adc
enter
sti
call
push
xor
out
outsb
push
sub
notl
jmp
and
cmpsl
sbb
push
in
jmp
aad
xor
fildl
push
xlat
pusha
fdivp
lds
add
aas
mov
lods
xchg
addr16
sahf
leave
adc
loopne
cmp
adc
cwtl
ret
aas
sub
or
lret
sbb
mov
test
cmpsb
xchg
insl
jno
shlb
cs
jp
adcl
dec
es
pop
out
or
aad
pop
ret
cmp
shlb
aaa
clc
pop
adc
jg
aas
sbb
mov
cmp
ret
test
test
and
jnp
inc
xor
mov
dec
add
call
negl
push
add
xchg
adc
pop
mov
inc
fmulp
push
pcmpeqb
lret
rcr
jle
fsubrs
movsb
test
neg
mov
out
inc
out
inc
push
xchg
mov
out
pop
jg
popf
in
in
and
dec
inc
mov
in
iret
pop
or
pop
add
cmpsb
or
pusha
rcrl
dec
pop
movsl
addr16
shlb
testb
push
loope
decl
aaa
int
loopne
mov
push
fdivs
push
mov
mov
popa
push
cltd
mull
mov
cmpb
subb
jg
cmpsl
adc
push
pop
inc
mov
ret
push
int3
or
mov
mov
dec
mov
mov
inc
mov
sbb
jecxz
cld
in
test
mov
ss
xchg
les
in
leave
lret
mov
mov
gs
test
inc
cmovo
xor
into
sti
dec
sbb
roll
das
push
xchg
xchg
pmaxub
iret
out
sbb
or
lret
mov
fs
mov
mov
scas
cmc
xchg
loop
cmpsb
adc
xchg
pop
repnz
sub
and
inc
test
fisubs
xor
adc
lret
adc
lods
xor
js
add
cltd
jnp
es
push
and
stc
scas
xchg
ret
sahf
movsb
in
cmp
insb
pop
dec
jle
inc
test
cmp
scas
aaa
sbb
jne
clc
out
test
scas
pop
into
mov
mov
cltd
jns
sub
mov
mov
adc
sti
loop
add
cs
cmpsl
mov
movsb
iret
pop
dec
sub
dec
fdivrl
mov
cmpsb
inc
in
mov
stc
stos
adc
das
or
lds
insl
or
pop
jae
sbb
pop
nop
sbb
mov
cmpsb
loop
fstl
jl
lahf
xor
jno
adc
mov
aas
imul
call
aam
and
and
mov
pop
arpl
add
mov
jl
das
jp
sbb
pop
sub
imul
es
inc
shr
rcr
add
cmpsl
sahf
inc
insl
jne
jp
mov
xchg
add
test
jnp
add
and
lret
lcall
or
fidivrs
mov
dec
push
fists
xor
sbb
add
or
push
or
fwait
shr
cwtl
mov
sub
scas
lret
pop
bound
mov
mov
push
xor
shl
stc
adc
adc
addr16
inc
or
push
hlt
fdivrp
fbstp
js
testb
add
cmpsb
jno
outsb
jno
sbb
ljmp
rcrl
aad
clc
std
stos
cmpsl
aaa
inc
adc
cmp
pop
mov
pop
inc
ret
xchg
dec
lcall
fcmovnb
cmp
jb
xor
sti
cs
mov
dec
mov
ret
scas
out
mov
dec
push
mov
cld
xchg
xor
adc
jmp
cld
xor
ja
pop
or
pop
scas
cmp
add
push
xchg
pop
stc
push
pop
jo,pt
mov
clc
cmp
faddl
sub
imul
fadd
dec
mov
and
and
inc
mov
mov
call
testl
xlat
mov
xor
push
jbe
pushf
ljmp
push
push
jno
roll
movsb
push
and
sbb
mov
scas
mov
aas
xchg
jo
scas
test
xor
stos
jno
addr16
iret
or
gs
in
lock
lcall
mov
pusha
inc
js
or
inc
xor
jecxz
fidivs
ret
addr16
data16
mov
add
nop
pushf
divl
shl
pop
xchg
fucomi
dec
fcoms
test
sbb
js
lds
cmp
ffreep
xor
mov
pop
pop
push
popa
fwait
adc
ja
inc
imull
inc
push
shlb
data16
sub
es
pusha
stos
adc
ss
cld
cmovns
clc
fnstenv
testb
mov
cmpsb
inc
fwait
sbb
or
mov
inc
std
js
push
inc
add
mov
fisttpll
cmp
mov
lret
ljmp
sub
loopne
enter
sub
mov
pop
mov
sub
mov
stos
mov
sub
cmpsb
lds
loope
add
jbe
imul
inc
mov
daa
int
enter
and
cs
jo
bound
addr16
ss
cmp
sbb
ljmp
cmp
iret
inc
lret
rcrb
inc
and
gs
sbb
mov
jecxz
clc
repz
mov
mov
sbb
mov
mov
add
mov
dec
adc
test
repz
jecxz
in
subb
idivb
jle
sti
adc
sub
mov
sub
dec
inc
test
mov
push
loop
pop
xor
xor
mov
push
jne
jle
sbb
movsl
or
loopne
adc
es
jmp
jns
sub
and
xlat
mov
ds
add
in
nop
hlt
out
push
lods
and
or
and
aad
push
call
xlat
mov
pop
lcall
ret
data16
addl
loope
popf
add
shrb
repnz
add
insb
sub
fs
fwait
loop
sub
xchg
orb
mov
leave
sbb
pop
leave
cltd
out
andb
and
lcall
push
lahf
mov
mov
stc
repnz
movsb
enter
push
pop
jno
or
jns
test
iret
jmp
shlb
dec
imul
fdivl
dec
jo
xchg
jnp
pop
mov
xorl
rcll
xor
addr16
sub
outsb
imul
pop
and
sbb
dec
stos
jg
fdivs
pop
cmpsb
ja
sbb
in
mov
test
loop
out
pop
xchg
es
xchg
loope
test
inc
fsub
shrl
sarl
hlt
push
out
enter
adc
cmpsb
jae
mov
fwait
sub
dec
lods
enter
or
loopne
xchg
pushf
xchg
imul
and
fsubs
stc
push
jnp
fld
xchg
cs
stos
sbb
imul
out
cmpsb
push
push
add
add
lret
int
fs
test
divb
cmpsl
dec
adc
movb
inc
fistps
xor
cmpsb
std
std
push
mov
cld
and
jno
adc
inc
ret
cs
pop
in
add
js
jecxz
mov
mov
xchg
jmp
pop
jle
cmc
bound
loope
dec
jnp
xor
shll
pop
mov
fcomp
sbb
jb
sbb
adc
cmp
jae
dec
sub
xchg
mov
ret
push
enter
inc
rorl
fimull
int3
hlt
fstpt
lahf
sub
mov
and
fs
pop
jno
sub
sbb
or
mov
sub
arpl
mov
lods
push
xchg
xchg
add
popf
dec
push
data16
push
pop
inc
pop
mov
sahf
mov
pushf
cwtl
push
add
pushf
imul
add
cwtl
ja
or
sahf
repz
aad
push
cltd
or
mov
jmp
popa
arpl
or
dec
rclb
mov
inc
lods
add
lret
lds
sub
orb
ret
cmc
push
das
cli
ret
cs
shrl
in
inc
lea
push
filds
sti
sbb
jnp
jge
dec
jecxz
lret
ja
pushf
fsubs
fildl
sbb
dec
mov
inc
stos
mov
adc
pop
or
stc
movsl
add
xor
lds
mov
pushw
hlt
out
sti
lods
mov
xchg
or
add
mov
lret
jne
mov
stos
test
outsb
cmpb
icebp
and
pop
ret
hlt
ror
gs
inc
pop
aaa
add
popa
sahf
push
das
sbb
out
enter
or
ds
push
xchg
gs
inc
mov
pop
popf
out
add
pop
cld
arpl
gs
xchg
ljmp
ja
xor
lock
pushf
xchg
pushf
pop
xchg
mov
sbb
push
fimuls
adc
fmull
pushf
or
cwtl
pop
mov
dec
movl
push
in
ficompl
cwtl
pop
fs
wrmsr
daa
xchg
pop
sub
xchg
mov
mov
call
movsb
xlat
lcall
cmp
xchg
addb
push
mov
outsb
pop
mov
mov
xor
addr16
xor
adc
inc
dec
test
stc
mov
dec
mov
inc
sbb
adc
pop
int3
xor
pop
jl
gs
mov
xor
shrb
mov
mov
xchg
stc
fcmovnb
mov
push
mov
xchg
cmp
fsubrl
add
push
mov
and
xor
adc
mov
mov
pusha
imul
mov
xchg
test
xor
ret
dec
and
or
and
rcrb
mov
pop
sub
xchg
adc
xchg
pop
add
adc
inc
jnp
pop
dec
test
mov
and
fs
jno
lcall
nop
jno
push
insl
pop
lret
lods
xchg
xchg
inc
testb
or
or
mov
out
lahf
mov
xor
mov
daa
scas
imulb
xor
mov
mov
cmp
ljmp
or
int
stos
cmp
loopne
aas
sbb
fnsave
out
mov
aam
sbb
xchg
out
xchg
cmp
cmp
add
fisubrs
arpl
das
and
push
leave
repnz
cmp
cmp
jb
lret
fsubrl
lret
push
bound
mov
imul
lret
insl
ja
mov
stos
ret
jae
sub
rol
pop
push
test
xchg
and
push
or
jne
sbb
dec
pop
daa
mov
xor
dec
jge
mov
xor
mov
out
sub
fidivs
fwait
mov
lcall
into
rcll
jo
sub
lcall
icebp
cmpsl
mov
insl
pop
xchg
sbb
adc
adc
in
gs
push
jno
mov
add
mov
lea
sub
mov
adc
daa
pop
loope
xchg
ljmp
push
cli
push
mov
add
add
cmp
out
in
mov
clc
push
mov
movsl
sub
xorl
cli
aas
jb
sbb
pop
aas
out
call
and
mov
mov
add
scas
out
mov
or
in
nop
add
repz
jnp
push
cld
push
xchg
sub
sti
repz
shll
or
add
xlat
dec
pop
adc
cmp
jmp
call
lcall
lock
adc
pop
mov
test
or
pop
cmp
pop
fistl
aaa
and
mov
mov
aas
cld
jns
ret
dec
or
femms
xor
add
mov
push
stos
mov
sub
outsb
data16
inc
sbb
mov
xchg
adc
andl
pop
sub
xchg
pop
add
gs
sbb
pop
getsec
sar
pop
bound
cmpsb
xchg
mov
inc
das
xor
or
repz
ret
push
aad
pusha
in
dec
jns
dec
cmp
sub
js
daa
aaa
inc
jne
push
outsl
jnp
gs
dec
aaa
sti
pop
bound
mov
in
je
enter
scas
adc
xor
push
fildll
mov
add
sbb
lcall
push
pop
rolb
sub
mov
mov
or
sbb
dec
es
push
pop
stos
in
icebp
push
mov
pusha
jae
and
add
mov
dec
scas
es
imul
repz
stc
scas
sarb
iret
dec
outsl
adc
jns
cld
sbbb
xor
aad
call
sub
stos
add
push
cli
addr16
lret
arpl
inc
xchg
sbb
inc
push
sub
ret
stos
inc
scas
icebp
mov
or
fcmovu
lock
mov
arpl
push
cmp
mov
xorb
cmp
mov
pop
mov
xor
cmp
and
lahf
push
pop
sbb
outsl
enter
or
pushf
enter
push
pop
xor
pop
imul
jge
xor
mov
push
mov
jmp
mov
mov
ja
mov
test
jnp
lea
fdivrl
mov
mov
xchg
push
lock
mov
lahf
test
push
jae
ret
mov
xchg
jl
and
repz
sub
call
js
jnp,pt
lcall
scas
cld
cmp
dec
ljmp
xchg
ja
shlb
push
jecxz
cmc
push
pushf
pop
repnz
dec
pusha
push
cmp
mov
jbe
mov
xchg
dec
outsb
mov
loopne
xor
or
notb
pop
roll
arpl
adc
xchg
in
fwait
shll
das
xor
fldt
fsubs
stos
pop
bswap
test
cmp
jle
jg
or
jbe
push
push
hlt
add
nop
fistps
jmp
mov
or
cmpsl
adc
pop
pusha
add
clc
or
xchg
adcl
out
into
push
lods
pusha
inc
cmp
and
test
or
scas
dec
out
lods
jmp
mov
xchg
pop
push
adc
fsubrl
daa
sbb
in
mov
cmc
xlat
push
pop
sub
movsl
sarb
ret
leave
les
or
mulb
inc
push
movb
ret
mov
icebp
iret
xchg
out
stos
int
xchg
negl
fsub
sbb
cwtl
pop
cwtl
push
adc
mov
popf
icebp
push
aaa
add
cs
and
pop
outsb
cltd
xor
pop
cmp
mov
out
les
je
aam
xor
inc
ja
pushf
jmp
cmp
lcall
mov
movsb
cmpsl
cmp
int
inc
sbb
sbb
icebp
pop
add
xchg
rcrb
stos
sbb
inc
out
shlb
mov
jmp
jns
loopne
jae
ret
and
dec
aam
adc
cmpsb
frstor
sub
xor
xchg
dec
and
shl
frstor
inc
repz
lea
mov
stos
dec
jo
mov
mov
cltd
mov
jnp
add
cmp
in
jmp
add
std
adc
aas
or
fidivs
inc
pop
adc
mov
dec
and
imul
cmp
in
test
dec
inc
out
push
cmp
sbb
push
and
aaa
push
xchg
ss
push
jnp
shll
or
cld
test
pop
rol
call
mov
dec
loop
cmp
xchg
mov
pop
pop
or
adc
inc
dec
arpl
or
cmp
xchg
mov
jo
dec
test
jb
movsb
repnz
add
or
inc
pop
clc
sbb
lea
add
cmpsl
pop
clc
iret
push
out
mov
push
incb
not
imul
test
sub
jmp
xor
and
adc
ja
jg
sbb
ret
push
xor
hlt
jp
xchg
mov
pop
icebp
les
aaa
sbb
fldl2t
ret
jbe
xlat
sahf
inc
call
subb
jge
mov
and
mov
mull
lds
imul
stos
inc
mov
jo
mov
in
in
xor
fmuls
pop
repnz
cmpsl
int
mov
stos
and
and
pop
cmc
movsb
sub
fwait
cs
das
or
sbb
push
scas
sbbb
fisubs
negl
std
push
repz
pop
mov
xlat
jge
mov
stc
adcb
push
jne
add
aad
pop
xor
lret
and
mov
mov
or
add
pusha
jl
dec
pop
sbb
call
out
mov
mov
sbb
mov
pop
jl
xor
rcrb
imul
addl
aad
dec
mov
fidivl
fsubrs
fsubrs
aaa
adcb
rcrb
adc
repnz
jno
adc
mov
cmp
data16
shl
movsb
xlat
dec
nop
syscall
mov
or
xchg
dec
sub
fwait
lock
sub
push
push
rclb
js
sub
jg
loopne
xchg
mov
jl
and
lret
or
fildll
pop
in
mov
mov
pusha
pusha
pop
mov
fcomip
jecxz
icebp
in
out
decb
in
or
testb
incb
pop
ss
add
mov
xchg
push
fstps
jne
pop
or
or
sahf
mov
hlt
loop
push
lods
idivb
ds
dec
sub
inc
inc
das
pop
int
add
ljmp
idivl
popa
jo
in
insl
bound
sbb
sahf
add
sbb
mov
adc
je
lds
jge
mov
mov
mov
movsb
adcb
loopne
cli
ljmp
jge
mov
lock
out
cs
pop
gs
pop
fstpl
adc
rolb
aaa
xor
inc
cld
pop
iret
es
jle
jmp
mov
sbb
test
mov
sub
out
rolb
pushf
push
lcall
roll
sbb
jp
xor
cli
mov
lahf
mov
sbb
inc
mov
add
jb
inc
mov
or
aad
cs
and
sahf
cltd
int3
paddusb
mov
dec
pushl
jp
pushf
lods
mov
push
aam
ds
repz
and
adc
mul
push
decb
push
sti
jb
push
fnstenv
pop
js
in
add
mov
or
cmp
out
add
push
js
lahf
repnz
loopne
aad
inc
xchg
shl
and
or
test
cmp
add
jmp
js
insb
inc
and
lret
mov
pop
push
mov
xchg
ja
and
fiadds
add
or
fnstsw
movsl
aam
mov
add
lret
fcoms
pop
mov
cmp
testb
pop
xchg
or
imulb
cmp
mov
push
std
push
ss
mov
fimuls
pop
mov
nop
add
scas
and
dec
lret
dec
test
sub
mov
jo
dec
daa
call
push
dec
mov
loopne
inc
dec
push
out
or
pop
insl
mov
insl
out
push
pop
stc
mov
sti
cli
add
int
fsubp
cwtl
or
mov
pop
es
insb
andl
mov
mov
xchg
out
add
or
adc
xchg
pop
add
jg
and
idivl
inc
lock
orl
sti
dec
jp
aad
push
inc
out
stc
mov
jge
jmp
or
pop
and
out
shl
inc
mov
adc
dec
out
mov
cmp
mov
fmulp
imul
test
cmp
inc
mov
and
outsl
outsb
repnz
cmp
pop
out
mov
adc
push
sbb
or
dec
fcoms
gs
jne
aad
and
fcmovne
je
sub
sbb
call
push
insb
push
cmpsl
bound
fidivrl
sub
push
cld
fldl
xor
dec
push
sbb
inc
mov
adc
lea
outsb
push
aad
inc
add
xchg
shrb
adc
lea
leave
cmpsl
add
aad
push
nop
xlat
mov
lea
out
inc
daa
cmpsb
mov
push
mov
mov
in
push
dec
mov
cmp
mov
sub
imul
or
lods
cmp
movsb
xchg
repz
lods
loop
mov
rorb
sbb
mov
sub
push
pop
insl
rorl
cmc
ljmp
loope
xchg
pop
mov
ja
leave
repz
push
jae
sub
sub
jmp
or
fiadds
rcrb
sbb
iret
add
out
mov
push
pop
cmp
mov
add
fsts
push
push
cmc
pusha
movsb
ljmp
lret
cmp
mov
mov
cmc
jmp
xor
icebp
adc
cmp
jg
mov
pop
cmpsl
sub
out
sti
in
out
imul
xorl
cmc
pop
dec
movsb
cmp
std
in
mov
and
pop
cltd
popl
xlat
aad
sub
pop
jge
push
stos
aad
mov
push
push
or
pusha
jmp
xchg
sbb
cmp
inc
movsb
mov
test
mov
push
mov
out
pandn
push
in
jge
add
cs
sahf
mov
mov
and
out
sub
je,pt
in
push
mov
add
inc
daa
repnz
push
xor
sarb
fstpt
es
insb
sbb
mov
call
dec
cmp
jo
int3
ds
hlt
sub
or
xorb
cmp
sti
data16
es
cwtl
pushl
sub
das
sbb
push
in
cmp
pop
jne
cmp
xor
cmp
push
gs
sbb
jmp
or
outsb
ficoml
imulb
or
cld
jmp
pop
cli
orb
and
sbb
ret
jae
in
jbe
pushf
and
sbb
push
mov
cli
int3
jmp
mov
setb
mov
xchg
inc
test
js
adc
dec
inc
pop
adc
xchg
add
divb
adc
loop
xchg
and
push
icebp
xchg
and
lahf
fcmovnb
add
xchg
add
fwait
shl
out
test
sahf
pop
fnsave
mov
lds
stos
ss
int
scas
jmp
mov
mov
adc
scas
into
pop
sub
mov
mov
cmp
sbb
ja
mov
mov
mov
mov
inc
adc
push
out
iret
out
lea
mov
sahf
xchg
and
iret
lret
inc
popl
mov
jl
jp
xchg
mov
jle
pop
out
stc
sub
mov
js
push
adc
sahf
mov
mov
xchg
fidivrs
stos
repz
pop
mov
xchg
inc
ds
rcl
loope
test
clc
fisubrs
xor
fildll
stc
inc
loop
inc
inc
pop
das
insl
adc
mov
jmp
and
sub
push
xchg
in
jnp
repnz
xor
jle
and
push
push
push
pop
adc
mov
shll
pop
cmp
aad
mov
stos
cltd
mov
stos
xor
cmp
pop
lahf
and
sbb
sbb
pop
and
xchg
les
or
sbb
mov
jns
mov
fcoml
dec
hlt
sahf
and
call
popa
adc
push
dec
pop
mov
xchg
push
or
add
gs
jmp
sarl
incb
xchg
mov
imul
icebp
xchg
sub
loopne
mov
pop
dec
lret
mov
int
fnstsw
cmp
xchg
lea
cmp
bound
push
test
add
xlat
jle
outsb
mov
sub
adc
fldt
ret
int
jb
jg
es
in
fidivrs
cmpb
or
imul
ret
mov
pop
jb
ficompl
or
mov
test
push
addr16
jecxz
add
pop
mov
push
les
jp
jle
mov
lods
andl
dec
daa
jg
ds
inc
inc
mov
and
cli
movsb
out
ljmp
cmc
mov
jbe
cmpsb
inc
cmc
rcl
inc
lock
sbb
mov
mov
fidivrs
mov
pop
xchg
inc
mov
scas
sbb
data16
push
lahf
sub
dec
add
and
mov
nopl
pushf
js
jnp
cmc
adc
call
jno
jle
hlt
push
mov
lock
ss
xor
xchg
cmp
sub
subl
loope
mov
jle
mov
fidivrl
inc
dec
jg
and
data16
stc
lock
push
lahf
or
fs
enter
xor
shlb
dec
and
out
lret
inc
cmp
into
mov
into
push
les
out
lea
loopne
loop
loop
mov
xor
push
int
popa
inc
xchg
sbb
iret
imul
ficoml
sub
outsl
cmp
sahf
add
pop
lcall
pop
jmp
inc
aam
cmp
xor
fs
lret
mov
jno
cmp
shld
push
sbb
mov
inc
push
ss
push
fcomps
in
jecxz
outsl
jmp
mov
fldl
inc
and
in
xorl
xchg
jle
mov
xor
in
sub
dec
lret
sbb
jle
out
pop
push
or
lods
jg
jge
ss
loope
cmpsb
inc
mov
es
js
mov
mov
jg
jmp
icebp
int
negl
lret
lods
jmp
mov
ja
icebp
shrl
fsts
xchg
fidivs
test
sub
push
sub
xor
fisttps
xchg
inc
mov
xor
or
inc
imull
out
pushf
sbb
in
scas
xor
pop
fmuls
sbb
out
and
inc
and
jge
cmc
push
xor
xor
xor
lock
je
xor
test
and
iret
dec
dec
xchg
les
xchg
jg
rol
dec
add
adc
divb
and
mov
int
jmp
jnp
ret
cltd
inc
lret
add
jbe
mov
adcl
pushf
inc
mov
xlat
pop
sbb
lods
lret
add
sahf
scas
push
sub
cwtl
insb
pushf
movsb
test
aam
icebp
in
cwtl
es
inc
cld
fsubr
jae
mov
es
add
icebp
repnz
cmp
cli
cmpsl
mov
pop
mov
sub
jge
sub
aaa
xlat
adc
fnstcw
jge
add
pusha
out
es
les
out
mov
and
in
rolb
xchg
pusha
lods
dec
adc
imul
pop
push
xchg
movsb
mov
mov
clc
pop
orb
push
ja
fwait
pusha
dec
jbe
call
imul
mov
pop
dec
jb
lret
and
add
int3
fadds
xchg
cmp
shrl
rorb
mov
mov
aas
xchg
into
inc
popf
mov
popa
mov
or
cmc
ljmp
sahf
xor
push
dec
mov
inc
add
inc
mov
jle
jbe
ljmp
dec
mov
inc
cs
loopne
push
faddl
js
mov
shll
pop
cld
call
aad
dec
pop
fildl
mov
std
lret
xor
lds
stos
loope
sub
stc
push
mov
add
mov
cmp
fisttpll
adc
sbb
iret
fnsetpm(287
xchg
rclb
xchg
inc
loop
push
data16
ret
scas
out
ljmp
xor
push
dec
or
hlt
lods
stos
mov
mov
aam
push
loope
imul
aas
lea
xor
ret
adc
push
aaa
nop
daa
inc
add
daa
xchg
mov
mov
lock
inc
fcomps
push
scas
or
test
sub
std
fsubs
mov
lret
or
repz
pop
jne
mov
enter
jae
das
orb
loopnew
xlat
insb
jno
cmp
pop
ret
pop
dec
jecxz
outsl
push
icebp
or
js
adc
sbb
sbb
aaa
cmc
sbb
rorb
ret
xchg
jno
ljmp
adc
cltd
sub
fstl
rorb
cltd
sbb
sub
xor
mov
push
push
adc
cmp
or
adc
push
test
in
mov
mov
out
xchg
jns
inc
adc
addr16
cmp
addr16
jp
add
faddl
sub
addr16
ja
pop
es
mov
push
push
cmp
popa
adc
mov
mov
aam
jl
je,pn
enter
loopne
iret
ret
inc
cmpl
add
scas
mov
into
push
out
xchg
xor
pop
cmp
or
loopne
adc
pop
lods
in
int3
jae
push
mov
pop
dec
lods
ja
xor
test
ja
js
xor
ds
jo
test
out
cli
int
loope
sbb
jle
sbb
icebp
sbb
mov
ljmp
fcomps
mov
cmp
inc
and
fnstenv
push
rorl
scas
inc
xchg
push
sbb
jo
jecxz
jnp
cmp
mov
xlat
ss
sbb
xor
in
jns
cmp
mov
fmuls
or
jmp
cmp
adc
add
jno
jg
out
test
push
push
in
jle
icebp
mov
call
inc
dec
fistpl
roll
xchg
mov
sub
jl
push
ljmp
mov
sub
mov
in
call
mov
pusha
and
dec
test
inc
jne
xlat
loop
int3
fidivrs
hlt
push
inc
jne
lock
fnstcw
stc
daa
inc
mov
dec
mov
stos
cltd
call
sbb
and
lret
dec
push
cmp
jno
mov
rcll
inc
mov
mov
xor
test
lock
jp
fidivs
arpl
inc
dec
mov
fsubl
cmpsb
cmpsb
test
cld
lock
pop
clc
call
mov
ja
cli
sub
adc
mov
dec
jle
cli
xor
enter
sbb
cltd
and
test
inc
cmp
aam
mov
push
fiaddl
or
mov
xor
test
jo
or
insl
sbb
dec
cltd
ret
sub
or
inc
movsl
jg
mov
ret
in
adc
lret
hlt
sbb
mov
out
push
outsb
cmp
sbb
or
jge
hlt
ret
push
insb
sti
lds
rolb
adc
bound
jg
xor
inc
cld
in
xor
sbb
adc
rcl
cmp
fcomps
loope
pop
add
pop
jbe
mov
sbb
ficoml
xor
nop
pop
sbb
iret
cmpsb
scas
dec
mov
sbb
cmp
fnstcw
jl
sub
pop
out
gs
or
xor
lds
scas
movsb
jg
mov
pushf
lds
std
mov
jae
mov
adc
add
out
dec
aaa
push
xor
jmp
aam
cmp
pop
loopne
movsl
cmp
je
cmp
outsb
lock
push
push
fisttps
je
add
xchg
lret
aam
pop
ljmp
xchg
int3
mov
or
mov
jg
inc
lods
test
pop
imul
cli
fxch
outsb
loop
dec
dec
inc
rolb
xor
sub
pop
dec
fs
push
popa
inc
add
lock
movsb
xor
mov
jg
jb
lea
aaa
rol
xor
aad
xchg
push
push
pop
add
push
sub
add
jmp
jge
add
or
and
popa
subb
xchg
stos
stos
fldt
movsl
xor
push
xchg
jno
sbb
pop
inc
inc
lock
fwait
jecxz
cli
push
xchg
sub
jg
in
das
pop
adc
xlat
fmulp
mull
stc
dec
adc
cwtl
js
cmp
cmp
int3
dec
lods
xchg
nop
push
fldcw
lcall
sub
out
sahf
sub
fisubs
jo
mov
push
push
std
jno
and
push
jbe
xor
aaa
mov
xor
mov
xchg
outsl
scas
ss
inc
ds
and
es
std
loopne
sbb
push
cs
test
repz
add
enter
mov
dec
mov
lds
adc
data16
xchg
cld
lds
jl
mov
loope
xor
jl
mov
dec
jg
mov
lret
test
sti
and
rorb
sbb
xchg
push
or
inc
pop
push
or
or
sub
cmpsb
addl
jp
in
jnp
mov
je
fwait
push
test
add
jge
jo
negb
ljmp
call
jb
and
aaa
push
loopne
xchg
test
add
fbstp
or
lret
jae
or
xor
dec
ds
push
xchg
clc
insb
aas
clc
scas
js
jge
inc
div
scas
jno
mov
fisubs
imul
aam
mov
out
out
jg
repnz
fwait
mov
scas
sarl
clc
rcr
daa
rcl
push
aad
outsl
xor
adc
xchg
or
sub
js
mov
sub
dec
je
sub
pop
cmp
xorb
xor
addr16
pop
sbb
inc
add
cmp
pop
sbb
dec
mov
sbb
das
ret
inc
std
adc
dec
scas
fistl
add
sub
stc
xchg
jns
jbe
filds
shlb
push
jl
mov
pop
icebp
aad
add
shlb
jp
xor
xlat
mov
xchg
fdivs
inc
pop
mov
sub
xchg
imul
cmpl
rcrb
mov
imul
push
enter
addl
in
sbb
fisttps
mov
lcall
hlt
push
pop
push
ljmp
mov
cmp
cmpb
pop
or
arpl
xchg
jbe
cmp
push
push
mov
lahf
shrb
push
out
inc
aaa
std
mov
mov
movsl
ljmp
lret
jle
jge
xchg
adc
mov
xchg
lods
pop
out
outsb
cmp
jg
mull
popa
mov
mov
and
insb
fistpl
clc
jae
shl
push
aam
mov
inc
in
pop
icebp
shll
in
and
and
fcomps
jbe
adc
hlt
cwtl
cmp
enter
dec
sbb
daa
test
lahf
lock
enter
test
imul
cwtl
pop
sbb
cmp
test
cwtl
test
enter
iret
cmc
mov
xlat
lcall
int
or
push
xchg
imul
loop
push
pop
mov
jne
pop
and
jg
adc
xchg
mov
sbb
push
jnp
inc
push
insl
pop
sub
mov
clc
push
test
shll
xlat
into
lahf
call
out
call
push
xor
push
add
push
xlat
ret
fistl
hlt
scas
or
ds
test
pop
inc
fstps
add
lret
pusha
lret
cmpsl
inc
mov
lret
clc
decb
sbb
imul
adc
add
lock
out
filds
xlat
icebp
fisubrs
mov
add
shlb
jnp
lret
lret
cwtl
addr16
movsb
daa
xchg
shr
sub
pushf
sbb
cmp
cmpsl
insb
aas
lcall
sbb
cmp
mov
sahf
mov
mov
and
mov
mov
lds
xchg
or
pop
ret
jno
pop
sub
in
outsb
or
mov
cmp
in
aaa
cmp
call
pop
jmp
xchg
lds
dec
lods
movsl
lds
xor
inc
jb,pn
call
adc
flds
les
stos
scas
imul
dec
xlat
inc
cmc
xor
cmp
xchg
inc
sahf
mov
pop
mov
push
mov
test
sti
jle
enter
or
xchg
push
repnz
roll
cmc
icebp
dec
les
les
jne
xchg
push
jg
mov
sbb
mov
jge
shrl
negb
gs
mov
jmp
cmp
pop
ljmp
jae
adc
xor
mov
push
imul
into
push
jle
emms
jno
nop
jne
dec
jmp
leave
add
test
pop
call
dec
lock
sbb
or
adc
xchg
push
inc
mov
push
mov
dec
lods
mov
popa
cwtl
ret
xor
add
dec
jecxz
in
xchg
insl
pop
mov
adc
or
les
outsb
scas
lds
sbb
pop
repz
xchg
pop
xorl
jbe
out
ret
gs
popa
pop
jb
push
sbb
hlt
add
mov
lds
and
xchg
loop
add
movsb
mov
xchg
cmc
xchg
lret
pushw
cs
inc
adc
lret
mov
ljmp
jnp
out
stos
repnz
xlat
iret
add
pop
int3
inc
mov
cmp
sbb
in
mov
xor
popf
call
and
xchg
pop
std
xchg
sbb
mov
fdivs
insb
push
dec
add
insb
cld
push
pop
daa
sbb
clc
sbb
jo
and
imul
or
inc
mov
cmp
pop
decl
add
rorl
cltd
jno
call
pop
mov
bound
rclb
repnz
enter
push
xor
add
xor
add
movsb
imul
push
jae
push
repnz
fisttpl
push
andb
add
adcb
stos
fs
stos
xor
or
push
imul
scas
adc
pusha
jmp
lcall
jne
lahf
adc
jmp
pop
push
negb
jmp
cld
mov
das
es
sbb
adc
test
in
jbe
out
pop
dec
adcl
adc
sbb
sahf
insl
mov
js
or
sub
fmulp
mov
pop
add
adc
ljmp
mov
cltd
sub
pop
popa
cwtl
pop
ds
sti
push
xor
repnz
imul
shlb
inc
sbb
repz
push
out
mov
sbb
icebp
ljmp
movsb
fisttps
and
clc
xor
jne
push
cmp
or
sbb
loop
push
sbb
sub
pusha
inc
jb
add
nop
lahf
dec
in
adc
xchg
dec
imul
push
cmp
aad
sub
dec
push
loopne
sub
and
or
pusha
add
inc
or
lahf
jl
int
lea
mov
jge
in
loope
adc
add
inc
mov
xchg
mov
addb
stos
jge
lock
jmp
and
and
xchg
ficomps
mov
pop
daa
cli
daa
cmp
lea
xchg
mov
dec
ljmp
dec
mov
jmp
enter
push
call
stc
xor
xchg
jecxz
test
xchg
adc
test
sub
xchg
mov
stos
stos
test
dec
pop
ss
lods
push
xor
imul
adc
mov
cmc
aam
jae
rep
jge
push
test
call
sbb
mov
mov
xchg
repnz
pop
jo
pop
lods
hlt
adcl
xchg
shl
xor
out
push
fsubrs
jle
sub
enter
repz
adc
cmc
push
dec
mov
subl
xchg
inc
pusha
ret
mov
push
imul
adc
xorl
jmp
sbb
lds
cltd
xchg
xor
movsb
pop
lods
mov
rclb
fs
loopne
mov
test
push
xchg
imull
test
in
lahf
sbb
dec
int
mov
pop
in
sub
aas
iret
adc
mov
and
push
inc
fwait
outsl
xchg
or
xchg
inc
jecxz
ret
clc
xlat
fdivrl
mov
or
insl
mov
dec
int3
lcall
or
popl
aaa
ljmp
xor
inc
cmp
add
daa
jmp
lret
dec
jne
ret
mov
dec
lods
jne
jne
movsb
jo
shrl
daa
jno
inc
jae
dec
sub
jno
in
sub
and
out
jmp
js
das
jge
add
hlt
sbb
subb
push
lods
imul
pop
inc
sub
icebp
add
and
jg
push
mov
aam
sbb
data16
pop
add
xchg
outsl
scas
inc
test
add
int3
push
ja
mov
cmp
ss
push
imul
push
jecxz
stos
stos
mov
inc
adc
mov
fs
mov
loope
and
sahf
testl
pop
mov
stos
mov
ret
pop
mov
stos
and
clc
pop
xchg
and
cmpsb
sbb
cmp
xor
stos
sbb
js
add
mov
rcll
xor
pop
sbb
inc
scas
aad
stos
fidivrs
jnp
stc
xor
out
mov
test
xor
aad
lcall
lods
cmp
cmp
imul
fdivs
add
lock
mov
scas
and
adc
mov
xor
insb
ljmp
into
xor
and
cmc
into
pop
and
ja
xchg
fcoms
loop
adc
mov
sub
adc
fmull
sysret
mov
or
int
ret
xor
imul
js
xlat
sbb
mov
int3
lret
and
pop
scas
in
andb
pop
arpl
xchg
jmp
out
inc
cmc
or
fs
pop
aam
pop
or
daa
test
xchg
ss
stos
ret
inc
cmpsl
lret
dec
cmp
pop
pop
pop
das
or
push
loopne
fmul
inc
pop
dec
lahf
movsl
loop
adc
cltd
push
cltd
nop
xchg
mov
mov
cmp
mov
sahf
jnp
dec
popf
push
fidivrl
fisubl
aam
xor
arpl
inc
add
inc
out
mov
stc
movsl
push
popf
jb
out
xor
lahf
inc
xchg
add
mov
mov
mov
jo
movsb
or
or
popf
mov
movsl
orb
push
jns
repnz
in
adc
lock
sti
call
adc
or
sub
mov
mov
xor
add
imul
adc
outsb
push
sbb
je
jmp
mov
cmp
xchg
adc
je
loope
sbb
mov
shr
inc
xchg
dec
pop
pop
pop
push
adcl
xchg
stc
inc
xlat
mov
sub
xchg
jmp
sbbb
inc
ret
and
jmp
and
addr16
xor
pushf
into
or
mov
xchg
sbb
cmp
sbb
outsl
repnz
sbb
and
fstp
rclb
xchg
mov
in
pop
sub
push
fdivs
imul
mov
mov
xchg
in
adc
cltd
arpl
stc
lock
inc
sbb
jecxz
jecxz
mov
or
and
das
cmpsl
add
pop
iret
lret
adc
or
jbe
jle
sbb
sub
and
mov
cli
pop
dec
test
outsb
inc
hlt
add
test
jg
mov
inc
cltd
push
pop
into
dec
jne
push
imul
rcl
test
in
popa
stos
mov
aad
aam
cwtl
ficoms
push
add
adc
sbb
and
in
stos
inc
lret
inc
xorb
out
sbb
test
gs
dec
cmp
push
mov
adc
sbb
jmp
push
xor
add
repnz
fnsave
ret
lret
push
adc
push
dec
mov
push
xor
imul
sub
jge
xchg
cmc
mov
inc
pop
and
shll
adc
cld
push
fisubrs
pushf
mov
xchg
pusha
fisubs
dec
fnsave
test
mov
pop
ret
das
pop
jo
jle
stos
ss
repz
repz
mov
lea
jnp,pt
dec
clc
inc
neg
or
mov
arpl
out
mov
or
sub
fdivs
fs
push
aam
pop
inc
jg
or
int3
mov
movsl
dec
adc
sub
sub
outsb
push
sti
outsb
cmc
mov
shr
mov
sbb
aas
test
leave
push
dec
push
fmuls
subb
testl
add
in
add
ret
xchg
cmp
ficompl
mov
and
int
mov
push
rcl
and
push
adc
std
jp
push
imul
rclb
out
clc
cmp
fistl
pop
jo
fists
pop
mov
xchg
pop
loop
js
lcall
mov
icebp
iret
jns
pop
sbb
out
repnz
cld
xchg
sub
mov
or
mov
test
nop
pushf
sub
divl
and
mov
mov
rolb
out
lds
repz
mov
push
icebp
pop
cmp
and
or
sbb
cltd
xor
push
fstps
push
or
shll
push
inc
insl
std
adc
and
lods
rolb
sbb
test
iret
out
hlt
or
jno
lret
rclb
fsubl
or
test
adcb
addr16
adc
mov
loopne
xor
gs
insb
adc
fdivrl
aas
pop
sbb
xor
add
in
fcmovnb
sub
push
lahf
sarl
jmp
into
push
inc
push
mov
arpl
cmc
jmp
call
lds
mov
int3
xor
jno
mov
popf
mov
pop
mov
cmp
adc
das
stos
repz
mov
mov
mov
les
or
xchg
mov
sti
pusha
inc
ljmp
pop
scas
leave
jne
mov
out
cld
aam
out
cmp
sbb
xor
clc
inc
in
lret
pop
cmp
ljmp
test
lock
dec
xchg
sbb
mov
out
pop
out
movl
dec
aaa
adc
or
fisubrl
dec
pop
sub
test
xchg
sbb
popa
ja
inc
jmp
inc
xlat
push
jge
mov
push
xor
mov
pop
imul
sub
adc
aam
push
and
sahf
out
xor
or
mov
repnz
inc
loopne
clc
dec
icebp
rol
movsl
add
add
push
jle
stc
add
sbb
xor
mov
cwtl
out
push
mov
dec
out
ret
dec
repnz
and
add
insb
das
bound
dec
mov
mov
cmp
inc
movsb
jae
ficompl
mov
test
xor
in
jo
adc
in
or
xor
daa
sbb
das
cli
fdivrs
test
inc
inc
xchg
or
xor
add
inc
jo
jae
lea
xor
dec
lret
imull
inc
mov
enter
aad
lds
sub
and
pop
mov
mov
sahf
xchg
fadd
hlt
movsl
movsl
aam
jle
sub
jb
dec
pop
adc
aam
call
arpl
jae
fsubl
mov
outsb
jo
aas
in
push
pop
rcr
push
daa
faddl
xchg
inc
dec
in
arpl
sahf
mov
pop
mov
pop
jmp
cmp
push
dec
std
mov
dec
jb
imul
mov
pop
push
stos
hlt
test
inc
cmpsb
in
repnz
js
mov
test
mov
daa
push
idiv
mov
and
jnp
hlt
sahf
lret
and
scas
inc
xchg
xor
and
mov
icebp
stos
sbb
add
and
sub
jmp
mov
xchg
cmpsb
enter
lods
rcrb
popf
and
add
filds
lds
jno
lret
adc
test
les
stc
jge
xor
ret
bound
add
xor
dec
aad
mov
subl
or
fidivrl
jb
mov
mov
or
insb
shrb
out
adc
mov
rorl
xor
and
out
cmp
das
sub
or
add
pop
fldln2
jl
pop
adc
xor
insb
das
cmp
in
andnps
sbb
mov
and
ss
popf
add
stos
call
jl
ret
popa
gs
insb
mov
pop
xchg
data16
adc
std
sbb
or
shrb
into
lods
loopne
idivl
in
ret
ja
dec
inc
incb
dec
jmp
in
and
shll
test
and
mov
in
cmp
in
jo
cmpsb
pop
dec
mov
cmp
out
mov
mov
test
fimuls
daa
loopne
xchg
cs
xorb
daa
or
and
pop
aad
out
push
or
lahf
or
pusha
and
xor
add
lahf
clc
sbb
fcoms
pop
jp
mov
clc
ret
mov
sub
cmp
shll
dec
xchg
les
lret
sbb
sbb
inc
sub
and
jle
rorl
idivl
lods
push
cmp
outsl
bound
out
cmp
dec
insl
fisttpll
fldt
es
mov
outsl
jle
pop
add
mov
add
jge
sub
inc
dec
inc
and
lods
sub
sub
outsl
push
adc
test
sbb
push
inc
aad
ja
rclb
shl
push
out
or
aaa
push
jg
dec
cmp
lock
xorl
push
add
inc
aad
jg
or
pop
xor
scas
ret
or
xchg
scas
repz
push
pop
pop
int
aaa
jle
sub
pop
lods
test
mov
add
mov
sahf
add
xchg
xchg
cmp
sbb
shll
daa
imul
fstp
ret
push
test
xor
cmp
out
mov
js
sub
std
xor
and
sbb
rorb
mov
inc
sub
sub
adc
pop
fcompl
in
push
es
sahf
inc
dec
mov
xor
test
ret
cld
mov
push
inc
cmpsl
dec
add
cs
call
sahf
sahf
mov
sbb
xchg
inc
xor
cmp
sbb
pop
ret
inc
mov
cmp
and
aaa
mov
jo
insl
adc
adc
or
mov
jl
pop
dec
lea
push
xchg
cmp
and
mulb
mov
dec
xchg
adc
scas
sub
cmpsb
mov
xchg
addb
inc
sbb
mov
and
sub
xchg
xor
xchg
loop
in
test
or
jp
mov
imul
sbb
ret
lcall
ret
mov
push
outsb
les
stos
mov
in
sbb
cmp
add
ljmp
adc
or
lods
repz
push
in
mov
mov
push
icebp
mov
add
inc
stc
or
cmp
leave
ljmp
xlat
mov
aaa
inc
or
ljmp
faddl
ljmp
xchg
xchg
cwtl
in
push
and
adc
xor
ss
or
sarb
sbb
cmp
inc
addr16
adc
incl
mov
xor
test
or
shll
mov
sub
jo
test
in
inc
sar
and
sahf
inc
or
bound
rorl
insl
shr
xchg
rorl
fisubrs
mov
sti
push
mov
jbe
les
add
shl
jmp
cmc
lahf
in
clc
inc
mov
mov
roll
scas
outsb
push
push
mov
loopne
ja
js
imul
mov
mov
cld
rcll
or
jno
cs
repz
mov
insb
decl
in
sub
imul
or
pcmpgtw
push
or
test
pop
lea
sub
xchg
addr16
dec
jae
movsl
dec
jno
cmpsl
shrb
gs
aam
xlat
dec
sub
insl
cmp
out
ja
ss
xor
sub
or
or
js
cmp
mov
loop
rcrl
nop
movb
and
xchg
in
sbb
in
or
cld
aaa
call
test
lcall
mov
outsw
xchg
mov
sahf
sbb
sub
and
xchg
mov
sbb
loope
ficomps
out
stos
pop
repnz
pop
arpl
jge
mov
push
cwtl
push
bound
adc
xchg
nop
fdivl
and
fdivrl
mov
addr16
push
and
push
mov
orb
das
sbb
jmp
pop
notb
mov
hlt
add
dec
xlat
jmp
in
aaa
jl
mov
push
rol
jecxz
loope
mov
adc
data16
and
mov
sub
lock
mov
inc
pushf
mov
mov
mov
insb
daa
mov
mov
xor
stos
int3
mov
gs
in
aaa
add
cmp
and
jmp
pop
cmp
inc
sub
pop
and
sbb
xlat
xor
inc
push
leave
or
inc
mov
repz
inc
mov
shrd
aad
int
sbb
cmp
or
sub
jl
adc
imulb
mov
unpcklps
test
mov
pop
and
and
jnp
mov
lret
call
xor
jle
sbb
stc
pusha
add
push
mov
sti
cltd
cmp
in
mov
into
repz
pop
lret
mov
lods
lock
push
mov
lea
std
lret
ret
shl
fs
shlb
jp
mov
xchg
lcall
jns
jnp
inc
rcl
jl
test
popa
ret
out
mov
adc
repz
fldt
test
jl
cmp
lea
jge
les
and
jo
sub
push
pop
add
mov
xor
fbstp
fildl
pop
mov
xchg
cmp
iret
psllq
push
movsl
add
jg
in
sahf
sahf
and
nopl
xchg
in
dec
mov
daa
jnp
ret
sub
mov
push
ds
pop
adc
test
pop
jmp
cltd
fcoms
out
in
adc
sbb
out
leave
movsb
stc
xchg
pop
pop
shll
movsb
push
subl
dec
das
xchg
push
stos
ja
subb
jmp
xchg
test
jbe
out
dec
sub
push
jge
lea
push
lahf
xchg
scas
cwtl
rclb
rorl
mov
fdivs
stos
inc
rorl
xchg
inc
or
mov
mov
div
pop
mov
dec
pop
mov
sbb
push
addr16
jbe
sbb
sub
pop
inc
or
push
std
iret
or
and
cmpsb
mov
ss
adc
inc
and
cmc
divl
xchg
fistpl
push
mov
cmp
cmp
mov
sub
enter
xor
xchg
mov
inc
jmp
pop
mov
mov
ds
fdiv
clc
jecxz
fcmovnb
ret
bound
pop
inc
mov
xchg
fadds
aad
mov
sub
enter
mov
push
cmp
or
jmp
dec
imul
clc
xchg
or
fwait
inc
das
jge
jp
fwait
add
lcall
imul
adc
dec
xchg
mov
xor
xor
dec
cmp
jg
pop
add
leave
push
aas
mov
or
mov
jae
mov
xor
adc
test
insb
inc
jbe
loopew
das
test
test
in
decl
insl
ljmp
hlt
xchg
arpl
mov
add
adc
sub
mov
loope
cld
fwait
push
mov
adc
push
sbb
sub
bound
jb
jb
ja
jae
cmc
popf
jno
sub
imul
lret
push
lret
mov
mov
int
iret
jns
cmpsl
negl
push
add
cmp
insl
js
jge
repz
lods
ficomps
cmp
fdivrs
movsb
mov
mov
cmp
xchg
ss
mov
movsl
mov
mov
dec
lods
in
movsb
sub
mov
cmp
in
cld
fidivrl
nop
dec
xor
insl
or
mov
fwait
mov
and
jno
in
pop
sbb
cmp
xor
cmpsl
in
jo
fmuls
push
rcrb
sub
xchg
pop
pop
lods
fdivs
clc
cmpsb
in
scas
shrl
xadd
clc
pop
xor
push
daa
lods
jmp
cmpsl
pop
mov
lods
cmp
inc
xchg
jl
inc
inc
lcall
test
cmp
test
lcall
lds
add
sbb
push
pushf
pop
xchg
jns
int3
aaa
stos
add
adc
pop
jg
aas
pop
mov
dec
adc
sahf
fwait
adc
or
jp
xchg
push
inc
pop
jne
cmp
adc
jmp
ret
out
cmp
fsubs
push
cmpb
xchg
mov
or
test
cmpsb
inc
movsb
hlt
nop
pop
jae
shl
arpl
test
and
movsb
iret
pusha
icebp
mov
add
xchg
enter
fdivrl
mov
pop
hlt
inc
out
in
or
imul
jl
jns
ds
cwtl
xor
repz
sbb
xor
mov
cmp
mov
sub
xchg
jb
adc
cmp
popl
rorb
int3
ds
fnstsw
je
xor
lret
inc
dec
arpl
mov
mov
xor
add
ret
icebp
int
and
rolb
clc
pop
out
add
addl
mov
sub
movsb
sbb
es
insb
push
sub
test
movsl
cmp
push
testb
cmp
dec
jno
xchg
mov
xchg
xor
jge
pop
int3
cmpsl
hlt
push
popa
shrl
pop
cmp
mov
jl
pop
movb
inc
enter
loop
mov
outsl
fildll
push
rcrb
dec
out
jle
inc
popa
nop
rcll
pop
cmp
sub
stos
sbb
shrb
sub
xchg
pop
cmc
fstl
mov
cmc
test
es
jge
clc
cmp
shrb
lds
mov
movsb
icebp
in
into
imul
bndstx
std
ss
popa
popa
ret
xchg
out
shlb
sbbb
dec
inc
scas
ss
jne
jbe
mov
mov
add
cmp
mov
xchg
sub
mov
fsubrs
push
enter
xchg
xlat
sbb
push
in
incl
adc
xchg
mov
out
push
cmc
fstpl
pop
adc
data16
xor
sti
lock
shr
addb
xchg
mov
sti
mov
out
aam
jae
push
scas
cmp
add
jns
mov
fwait
mov
lods
test
pop
sub
mulb
sub
arpl
jge
mov
cmp
xor
vphsubbw
dec
mov
lret
mov
je
test
sbb
xchg
test
dec
push
xlat
xor
in
popa
mov
repnz
outsl
mov
mov
pop
es
cmp
cmc
repnz
decb
mov
or
add
xor
imul
mov
fsubrs
jae
mov
mul
rclb
pop
test
out
jecxz
decb
cmp
cmp
push
adc
sbb
int
or
sub
out
xchg
lahf
outsl
popl
inc
push
stos
mov
push
aad
imul
or
push
jmp
mov
push
jmp
pushf
bound
scas
in
lea
jg,pt
mov
pop
cltd
punpcklbw
out
push
sbb
mov
and
outsl
clc
aas
lods
or
in
test
adc
cmp
adc
xchg
add
sub
outsb
jne
ds
enter
sbb
es
lret
or
lret
lods
out
js
dec
nop
lock
mov
cmp
push
stc
out
mov
outsl
jae
int
iret
ror
sbbb
icebp
leave
cwtl
mov
cwtl
shlb
and
mov
movsl
adcb
dec
stos
sbb
daa
lds
jne
xchg
mov
pop
mov
dec
xor
cltd
add
xchg
cwtl
popf
sub
lock
outsl
push
inc
or
movsl
fimull
shrl
xor
xchg
adc
mov
mov
fstl
orb
out
mov
pop
mov
sbb
and
dec
sbb
stos
mov
fistl
sti
aaa
or
sti
data16
jno
mov
fs
sbb
out
jmp
jnp
popa
mov
cmp
jmp
lret
lea
dec
and
mov
dec
push
lret
testb
into
jno
lods
mov
lds
adc
mov
sbb
push
or
lret
fwait
sbb
jge
faddl
scas
cs
ja
in
inc
xchg
cwtl
inc
push
stos
icebp
mov
aam
cltd
js
out
dec
test
loop
cli
push
adc
outsb
or
lahf
mov
dec
dec
out
ja
and
and
sub
ret
data16
add
or
sub
stc
mov
mov
test
pop
xorb
ds
aad
xlat
testl
adc
js
into
dec
icebp
out
pop
inc
outsl
fmulp
push
daa
into
shlb
pop
inc
sbb
adc
dec
rcr
inc
xchg
ret
push
push
out
jmp
aad
call
pop
and
push
sahf
cltd
mov
sbb
push
jne
fistl
adc
shlb
jns
movsl
pop
sub
xchg
dec
dec
push
aam
sub
stos
jns
iret
inc
sbb
cltd
out
leave
sub
jle
scas
dec
add
or
mov
pop
in
int3
std
xor
mov
aas
popf
cmpsl
lcall
pop
aaa
out
jge
xchg
xchg
sar
pop
sahf
pop
pop
hlt
xchg
pop
xor
les
int3
cmpsb
cld
pop
movsb
fdivl
aam
push
and
test
sbb
ficomps
nop
in
in
stos
mov
pusha
insl
fwait
nop
imul
sbb
and
fists
bound
inc
ja
jp
repz
cli
dec
test
and
sbb
imul
scas
xchg
add
shlb
xchg
and
int3
push
je
mov
movsb
mov
xchg
push
mov
cmp
push
or
sbb
adc
adc
jmp
jmp
and
arpl
popa
sub
mov
push
cmp
lcall
cmp
adc
jb
imull
jl
negb
xor
add
jae
outsl
dec
mov
sub
test
add
stos
dec
adc
jl
fldt
adc
repz
aad
sbb
mov
stos
andb
push
out
es
or
xor
add
test
cmp
aam
push
push
test
sub
add
test
cmpsb
popf
mov
push
dec
xchg
fdiv
lret
sub
dec
es
icebp
sti
xchg
loop
pushf
sbbb
push
outsb
or
xchg
loope
mov
test
push
pop
mov
xchg
jl
mov
insl
inc
adc
aaa
clc
bound
jae
aas
ror
pop
mov
mov
mov
in
mov
dec
push
mov
sub
jbe
jb
mov
sbb
xchg
mov
cmpsb
adc
and
and
lret
aas
mov
es
xor
aad
ficompl
das
jbe
inc
mov
sti
in
fistpll
lahf
rol
dec
inc
aad
xchg
stos
sbb
stos
adc
mov
outsl
aas
in
jge
mov
mov
loope
or
add
jmp
dec
or
cmp
jmp
add
lds
les
std
dec
movsb
mov
ret
or
mov
or
sub
ja
ds
fcoms
pop
aad
mov
insb
adc
ret
mov
or
push
adc
push
fwait
adc
sub
sahf
mov
outsb
jne
imul
outsl
push
in
in
push
out
and
mov
xchg
pop
movsl
int3
xchg
xor
cmpps
ret
pop
jo
fwait
xor
fwait
cmp
rcr
ss
jae
jle
subb
cmp
stc
and
rolb
mov
and
sahf
and
xchg
and
cmpsb
mov
std
int3
add
sub
pop
jle
scas
adc
mov
sub
into
inc
push
pavgw
cmpsl
or
jo
adc
cmp
out
std
or
jno
xchg
cmpsl
dec
jecxz
and
movsl
add
in
icebp
movsl
sub
jp
fbstp
aam
rclb
xchg
xchg
lock
push
xlat
pop
xorl
push
test
dec
ljmp
sbb
outsl
xchg
add
cmp
jno
xchg
das
cwtl
or
jo
out
or
sbb
cmpsl
imul
jbe
push
dec
push
jmp
es
or
xlat
pop
push
mov
and
push
fsub
cmp
ds
adc
adc
inc
orb
orl
xchg
iret
int3
popa
in
adc
enter
jns
mov
jbe
mov
cmpl
jo
or
xchg
xlat
mov
add
das
jns
cmp
push
fbstp
out
sub
shlb
enter
test
test
or
jb
insl
dec
lods
mov
push
shr
cmpsb
orl
jg,pt
cmp
mov
or
dec
js
sub
popa
nop
push
int
clc
mov
mov
ret
mov
dec
addr16
cli
test
scas
pop
movsl
push
cs
pop
lods
mov
jno
mov
pop
imul
out
xor
cwtl
pop
xchg
dec
shll
je
push
loop
add
adc
arpl
xchg
in
or
repnz
dec
out
sbb
fistl
push
sbbl
clc
xchg
ljmp
ja
test
sbb
sti
leave
or
add
inc
push
xlat
fsubrl
and
mov
shll
adcl
and
lahf
cmp
mov
test
sub
cmp
arpl
cmpl
and
cmp
mov
or
out
mov
lds
mov
sbb
into
or
xchg
mov
mov
cmp
xchg
xor
add
fstps
xchg
lods
mov
inc
femms
mov
loope
mov
push
inc
add
jo
sbb
and
jp
pop
push
addr16
enter
out
daa
stos
popa
dec
out
in
inc
mov
sbb
pop
pop
icebp
test
sub
mov
mov
lcall
gs
or
xor
andb
pop
jae
or
loopne
ds
mov
out
ror
lret
shrl
jb
inc
incb
out
push
fbld
mov
int3
insl
fisubrl
or
iret
mov
inc
aam
ljmp
in
lds
mov
mov
mov
adc
shll
cmpsl
push
arpl
sub
jns
adc
rclb
insl
mov
dec
insl
call
arpl
dec
outsl
sahf
mov
insl
mov
dec
push
push
iret
outsl
jo
movsb
mov
aam
pop
mov
mov
stos
je
jne
inc
sbb
or
adc
shll
jae
mov
jg
clc
and
cmp
movsb
jle
shrb
add
dec
push
aaa
cmp
aas
pop
and
lock
xchg
std
inc
jg
inc
xchg
pop
out
lods
das
mov
cmp
in
shrl
fisttpll
sarb
mov
jge
sahf
mov
sub
hlt
fdivs
mov
gs
cmpsb
jmp
lea
xchg
jnp
divb
mov
outsl
mov
push
inc
mov
int
inc
fisubrl
ds
stos
test
mov
jg
sbb
je
test
inc
dec
xchg
ljmp
add
orb
or
lret
sub
xchg
mov
mov
pusha
lock
rcrb
subb
in
xor
fs
lods
mov
and
outsb
mov
je
in
outsl
ljmp
xor
addr16
dec
pushf
ljmp
push
dec
push
or
aam
pop
out
daa
push
pop
inc
pop
imul
in
sti
mov
inc
add
ss
sub
jno
pop
or
frstor
jmp
inc
xchg
inc
sarl
mov
loopne
je
cmp
adc
data16
add
push
mov
lcall
cmp
orl
ss
shlb
repnz
push
inc
fcompl
jecxz
sub
inc
and
test
ss
testl
and
pop
popf
dec
xor
gs
xor
out
cmc
dec
fs
add
cmp
mov
jb
test
clc
aam
sbb
cmc
sub
fdivs
jge
or
sub
out
and
add
outsb
in
jle
push
sub
imul
dec
dec
xchg
and
or
pop
in
shl
mov
jge
or
mov
repnz
sbbl
adc
xchg
pusha
cs
cmp
xor
repz
lods
push
push
in
jne
hlt
aam
sub
into
sub
punpckldq
cs
loopne
sub
popf
enter
enter
jp
and
in
mov
inc
fisubrl
mov
push
xchg
mov
adc
cs
imul
sbbb
sbb
xchg
jecxz
sahf
inc
into
cltd
shrl
daa
pop
repz
pop
insb
push
divl
pop
lahf
repz
push
andl
push
xlat
xchg
cli
and
daa
fmuls
scas
dec
mov
packssdw
or
lock
negl
insb
pushf
test
mov
push
rcll
test
push
int3
adc
cmp
dec
fs
movsl
les
andl
cwtl
stc
push
mov
mov
lret
and
lahf
popa
mov
std
push
or
enter
leave
adc
jp
ret
repnz
outsl
sbb
lret
cmp
xchg
rcl
mov
jg
das
adc
add
dec
add
jne
push
cmp
bsf
pop
mov
popa
fisttpl
out
call
clc
add
aad
push
mov
loope
push
pop
jle
iret
push
pop
jecxz
dec
aam
in
pop
sbb
adc
out
arpl
popa
or
cmc
js
or
xchg
add
paddq
movsl
mov
xchg
jnp
leave
sub
mov
sbb
shll
int3
ja
mov
fs
sbb
add
negl
inc
pusha
addr16
cmpsl
movsb
xorb
shll
lods
pop
mov
adc
cs
xchg
popf
sti
or
mov
mov
insl
cmp
lahf
out
data16
arpl
repnz
sub
scas
jl
push
or
popf
sub
add
push
dec
sbb
inc
xchg
inc
data16
dec
lcall
mov
cmp
test
dec
sub
fbld
jno
adc
xchg
xor
adc
sbb
lcall
repz
sub
jnp
and
stc
ss
and
loop
dec
add
cmp
jno
scas
mov
inc
negb
pusha
out
pushf
mov
jbe
ss
icebp
push
jge
mov
and
dec
cmp
lret
sbb
das
adc
cmp
sbb
push
lods
dec
pop
dec
lcall
data16
cmpsl
lret
or
cmp
fildl
adc
mov
jle
ja
xlat
jno
mov
das
push
mov
nop
mov
dec
xchg
les
roll
adc
mov
cmp
rcr
or
outsb
and
add
jne
mov
out
inc
or
pop
imul
in
push
jns
nop
pushf
dec
lcall
andl
xorb
leave
sbb
mov
call
loop
and
outsb
sbb
mov
nop
mov
xchg
inc
mov
push
jo
or
filds
repz
notb
mov
pop
or
xchg
adc
sti
popf
dec
adc
dec
mov
test
mov
fmul
insl
mov
pop
xchg
xchg
or
leave
xchg
or
cmpsl
pop
fcmovnb
pop
lret
daa
movsb
inc
push
les
out
pop
test
pop
xchg
sub
jnp
negl
or
push
pop
inc
leave
adc
and
xchg
js
addr16
pop
pop
mov
dec
xor
mov
push
mov
repz
sbb
imul
pop
test
xlat
adc
das
lea
in
shlb
and
jge
sbb
push
cmpsb
and
push
or
dec
mov
ds
call
sbb
sub
andl
rcl
enter
cmp
or
test
and
mov
arpl
sbb
xchg
jle
push
sub
fildl
mov
sahf
dec
jbe
lock
fdivr
push
dec
cli
jno
cld
jno
call
and
mov
int3
leave
mov
mov
or
mov
adc
dec
xor
inc
xorl
push
js,pn
xor
xchg
sub
mov
imul
or
and
pop
js
sub
test
adc
sbbl
xchg
or
subl
mov
pop
das
mov
dec
lock
inc
mov
xchg
xor
mov
mov
aaa
xchg
scas
sub
lret
mov
xchg
mov
outsb
mov
mov
jnp
mov
cmp
testb
cmpsl
fisubs
sbb
pop
and
mov
xchg
movsl
dec
in
in
pop
fisubrs
xor
fwait
movsl
test
aam
xor
jl
cmp
jp
aas
lock
pmullw
pop
enter
xlat
sub
repnz
leave
lods
mov
flds
inc
and
andl
dec
sub
cwtl
and
add
cs
cmp
xchg
fnstcw
mov
cmp
and
out
js
xchg
dec
xor
push
and
pop
xor
popa
cwtl
mov
xor
mov
pop
cld
mov
add
stc
mov
mov
sub
push
xchg
test
lock
hlt
and
pop
sar
aad
fucomi
mov
fadds
dec
subl
lods
je
mov
punpckhbw
lahf
leave
xchg
nop
sub
shl
mov
add
dec
sar
mov
push
sub
sub
aas
or
ficompl
insb
mov
cmp
mov
inc
dec
xchg
lahf
dec
lods
outsb
push
inc
adc
mov
cmpsl
add
dec
ds
cld
dec
add
fs
scas
and
and
aaa
push
cmpsl
inc
push
dec
jge
in
mov
push
in
fcoml
repz
ljmp
in
ret
mov
into
jge
add
mov
mov
cs
cmp
mov
mov
outsl
pop
or
lods
out
sbb
pusha
loopne
addr16
in
xchg
addr16
call
mov
xor
fcmovnbe
mov
mov
int
lret
aaa
mov
lret
icebp
mov
lahf
fs
insl
cmp
push
and
jle
push
and
lret
mov
inc
mov
mov
push
add
lock
xorb
add
jo
push
xchg
insl
dec
sbb
fsubs
daa
xchg
adc
and
dec
cmp
and
jnp
pushf
xor
stc
mov
rcrb
push
ficompl
imul
out
push
mov
inc
push
xor
mov
jge
cmp
call
fucomi
adc
mulb
add
ljmp
push
or
call
xor
mulb
in
cmpsb
fs
mov
adc
test
movsl
mov
and
imul
pop
xchg
xlat
adc
jp
test
mov
imull
push
bound
add
cmpsl
ret
or
pop
dec
cli
and
mov
jbe
nop
cmp
sub
cmp
pop
mov
out
dec
in
or
aad
xor
mov
cli
stc
adc
mov
sbb
lcall
scas
adc
cmc
sbb
fst
call
js
test
outsl
push
stos
cmp
ljmp
scas
adc
in
outsl
pusha
clc
sbb
aas
daa
fcomp
cmpsl
aam
sbb
push
xchg
bnd
rol
xor
mov
xchg
or
popw
xor
addb
stos
outsl
mov
mov
mov
cmp
add
mov
xchg
stos
xor
xchg
cli
mov
inc
dec
icebp
mov
ret
push
in
sbb
cmp
arpl
stc
sahf
or
shll
fnsave
or
xchg
shll
xchg
out
dec
fs
jp
xchg
in
push
negl
dec
xchg
add
std
xchg
and
sbb
pop
icebp
dec
shr
or
xchg
gs
mov
rorl
or
xchg
and
insl
rol
addr16
jle
movsb
inc
lods
lods
mov
xlat
push
jmp
sub
in
das
xlat
fistl
test
mov
stos
dec
xor
or
subps
dec
jle
mov
or
xorl
stos
cmpsb
mov
pop
adc
dec
inc
xlat
stos
push
xor
clc
movb
in
cmp
jmp
cmp
addr16
sub
push
sub
add
adc
jmp
unpckhps
cmpsl
loopne
test
mov
add
mov
insl
cli
jb
add
xchg
pushf
subb
div
push
stos
mov
mov
pop
jmp
and
adc
mov
push
aad
mull
mov
and
cld
test
imul
ret
adc
es
push
sahf
dec
cmp
adc
jle
sbb
popa
bound
jle
cltd
aad
pop
popa
push
movsl
outsl
sub
pop
shrb
cmpsb
imul
repz
add
fwait
pop
fsts
cld
jo
leave
add
mov
movsl
pop
dec
jecxz
and
cmpsl
loopne
adc
outsb
cmp
insb
mov
cmp
or
dec
inc
imul
and
adc
xchg
sub
mov
cld
push
and
hlt
mov
enter
ja
xchg
jle
cmp
cmp
and
xchg
mov
loop
pop
lock
dec
jo
xchg
xchg
mov
pop
pop
pop
rclb
popf
xchg
mov
cmp
stos
ret
nop
push
dec
xchg
addb
jmp
adc
sbb
lcall
bound
mov
leave
mov
and
inc
mov
cmp
add
sub
mov
enter
cmp
pop
fdivl
xchg
insb
pop
stos
sbb
mov
iret
sahf
add
fbld
cli
lods
lock
out
xor
pop
mov
pop
cmp
add
test
jecxz
stc
pop
jp
je
icebp
jg
bound
stos
fwait
pop
scas
adc
xor
fidivrl
mov
and
push
xchg
in
subb
sbb
push
into
xchg
pop
cli
push
jmp
pop
aad
inc
xlat
rep
mov
cmpl
add
sbb
inc
dec
push
pop
jne
inc
adc
dec
mov
in
jnp
ret
leave
sahf
pop
fstl
loope
jecxz
push
jg
fs
inc
pop
mov
sbb
adc
cld
cmp
jns
inc
aaa
sub
pop
pusha
add
add
cmp
xor
sub
or
imull
mov
out
into
and
or
mov
popa
dec
arpl
stos
inc
sbb
push
rolb
xchg
pop
sub
negb
ficomps
cli
xor
sub
push
push
sbb
popf
mov
imul
jg
icebp
repz
inc
shll
xchg
cmp
fdivrl
popf
test
insl
rcr
inc
sub
jmp
jns
pop
pop
dec
jnp
std
test
xor
adc
mov
inc
cltd
fwait
movsb
rcr
outsl
in
inc
push
lods
outsb
xor
outsb
movsl
clc
lea
lcall
fimuls
jecxz
ret
rcrl
into
pop
cmpsb
addb
int3
movsb
popa
add
sti
cmp
mov
inc
mov
insl
das
lds
leave
lea
push
scas
mov
pop
lret
fidivs
add
aad
rcrb
ljmp
adc
test
xchg
xorl
push
inc
fisttpll
pushf
mov
test
rcrl
xor
cmp
lret
pop
jnp
sahf
out
xor
or
jle
aas
xor
mov
and
out
and
adc
movsl
pop
pushf
adc
push
loopne
jmp
jno
mov
jp
push
orl
pop
arpl
pop
push
mov
test
outsl
xlat
xor
stos
test
aas
fsubr
leave
pushf
gs
pop
mov
cld
push
and
fidivrl
andb
subl
dec
push
into
and
or
lods
sbb
cwtl
sti
andb
je
popf
xorb
mov
test
outsl
cmp
popa
jle
out
jno
sarl
test
sqrtps
lock
ret
nop
add
int3
imul
cmp
std
add
mov
sub
and
jecxz
push
pusha
test
cmp
leave
insb
pushf
loop
test
outsl
clc
bound
mov
test
xchg
ret
mov
std
or
jl
mov
mov
dec
jae
fldt
ret
fsubrl
dec
xlat
mov
sbb
std
or
jmp
ret
in
cmpsl
inc
std
js
sub
xor
cmp
xchg
xor
stos
lea
shlb
sub
xchg
cmpb
fisttps
jns
clc
out
jns
sub
shr
outsb
inc
repz
fdivp
outsl
daa
int
xlat
inc
inc
mov
pop
sub
lret
mov
rcr
and
lahf
xchg
pop
xchg
call
loopne
xor
pop
xor
gs
mov
scas
jnp
pushf
ljmp
les
lods
dec
out
pop
sbb
mov
je
mov
xchg
xchg
fsubrl
jge
dec
dec
nop
xor
in
push
hlt
loopne
jg
or
cmp
lret
fisubl
pushf
cmp
xchg
sbb
js
movsl
lret
mov
push
jge
or
int3
in
in
mov
push
scas
mov
and
pusha
nop
rsm
xchg
ds
inc
rdtsc
ffree
pop
lods
jns
dec
mov
cmp
mov
movsl
mov
xlat
rcr
jae
adc
mov
shlb
addr16
xor
loop
cmp
xchg
popf
add
and
js
mov
jmp
sbb
jae
sti
lret
pop
insb
mov
std
sbb
shlb
int
rcll
mov
xchg
or
fwait
pushw
sbb
mov
jl
int
fldl
cmpsb
pop
mov
sahf
lods
push
aaa
mov
pop
mov
int3
pop
cmp
mov
mov
sbbb
scas
mov
pop
xor
repz
mov
icebp
adc
dec
add
inc
out
and
test
push
ficomps
or
pusha
push
fimull
jmp
push
cmpsb
xor
jae
aad
ret
cwtl
mov
lods
cmpsb
int
mov
pushaw
aaa
jmp
mov
ja
fsubr
ficompl
loop
mov
and
scas
rol
pusha
push
test
or
rclb
popa
xchg
push
sub
in
mov
fdivrl
aam
shlb
inc
aaa
mov
aam
adc
sti
iret
inc
cmp
cmp
imul
mov
sbb
push
mov
inc
sbb
mov
adc
add
scas
sbb
lock
mov
mov
enter
das
inc
xchg
inc
xor
sti
cmpl
adc
push
data16
adc
add
fsub
mov
cmp
scas
lret
and
xlat
adc
push
add
and
adc
xchg
call
outsb
rcr
lock
call
gs
jae
xlat
rolb
js
push
int3
dec
mov
jle
insl
mov
jmp
insb
int
rcll
fnstenv
fildl
jo
ds
push
mov
sbb
in
inc
mov
mov
mov
lea
jnp
mov
into
bound
sti
fwait
and
idivl
cmp
dec
cmp
popf
call
add
push
imul
sbb
stos
pushf
outsb
xchg
stos
xchg
mov
xor
ret
and
xchg
ret
mov
inc
sub
add
js
mov
inc
adc
aam
aam
movsb
mov
fstpl
cmp
stos
test
aam
loop
imul
jbe
sbb
fiadds
outsl
cwtl
int3
pop
push
orb
addr16
loopne
push
mov
sti
cli
push
xchg
int3
movsb
imul
xor
imull
loopne
dec
jmp
or
pop
test
sahf
mov
std
and
into
out
add
mov
sub
aas
mull
pop
test
or
icebp
aaa
sub
sahf
jl
es
xor
ret
inc
std
into
mov
cmp
cmp
sub
mov
jno
inc
roll
and
loope
pop
loope
jle
ja,pt
cmpsl
add
stos
mov
je
popa
jae
push
xchg
mov
mov
daa
mov
jbe
push
lahf
sbb
sti
popf
cli
push
inc
sbb
movsb
fs
lahf
pop
mov
imul
stc
push
aam
cmp
pusha
mov
add
pushf
and
fst
lea
lods
subb
cmc
ds
mov
cmp
lods
out
xchg
into
es
cmpsb
xchg
into
pop
lcall
rclb
jmp
fwait
sub
pop
push
mov
aas
fdivr
xor
mov
test
push
pop
dec
sbb
movsl
or
jbe
cli
push
mov
or
shl
dec
mov
push
add
or
jmp
aas
xchg
xchg
int
imul
and
mov
fadds
pop
xchg
adc
adc
arpl
pop
addb
and
fsub
pop
out
mov
fcomp
xor
les
dec
rcll
aam
add
mov
push
jp
dec
movsb
mov
mov
sbb
adc
jae
ss
ss
movsb
rep
pop
add
mov
sub
adc
xlat
out
ret
xchg
arpl
inc
rorb
je
sarl
clc
aaa
push
cs
inc
push
int
sub
cmp
andb
je
jle
in
fistl
ds
ret
ljmp
lods
aaa
mov
sub
or
mov
in
add
and
popa
loope
sbb
sti
mov
sbb
add
or
fnstcw
ret
mov
in
xchg
mov
mov
ret
or
adc
or
sub
lock
out
lahf
xorps
inc
dec
mov
pusha
mov
fwait
mov
daa
shll
mov
xchg
pop
add
lcall
mov
sbb
cmp
pop
cmpsb
mov
int3
sahf
das
rcll
add
cmp
cli
mov
jle
addl
xor
leave
cwtl
lods
iret
jno
and
pop
adc
fsts
mov
clc
pop
aas
mov
mov
mov
rorl
mov
xchg
dec
dec
mov
xor
push
fnstsw
fsubl
adc
push
mov
cmpsb
add
lret
adcb
mov
xchg
or
shl
cmp
and
pop
inc
inc
and
pop
dec
aas
popf
stc
enter
dec
push
fdivrs
std
pusha
xor
xchg
sbbb
lahf
int3
mov
fdivrl
jl
psubusw
pop
dec
adc
je
cli
aas
cmp
mov
push
adc
stos
fsts
in
mov
movsb
pop
sbb
or
pop
scas
pop
mov
das
and
gs
xchg
push
mov
pushf
mov
ds
push
adc
aad
fs
sahf
es
xor
or
scas
pop
je
sbb
jmp
es
loopne
decb
stos
pop
push
mov
cmpsl
push
xchg
push
je
mov
and
insb
jmp
and
ss
mov
dec
cmp
jno
daa
jecxz
in
sub
xor
sub
pop
mov
jmp
stos
fs
push
pop
test
popf
mov
dec
testb
cmpsb
sub
aad
adc
pop
int
xor
sti
push
test
sub
or
sbb
add
outsb
mov
cmp
push
adc
je
test
and
jmp
push
xor
xchg
sbb
loop
and
fdivl
pop
ds
leave
mov
push
pop
imul
outsb
ffreep
in
inc
cli
stos
out
mov
rol
mov
lcall
dec
pusha
cli
fbstp
loope
nop
mov
add
aaa
sub
mov
ret
pop
push
jle
sbb
movsb
scas
iret
mov
stos
mov
cmp
lock
or
mov
leave
mov
mov
in
jbe
outsl
dec
sbb
cs
shlb
push
iret
or
out
inc
andb
in
mov
dec
jmp
addb
adc
pop
adc
cmpsl
mov
sahf
fcompl
into
xchg
push
mov
mov
testb
cmp
pop
inc
adc
ret
dec
pop
add
mov
mov
pop
xor
adc
jno
gs
adc
lahf
cmpsb
pop
divl
int3
or
inc
mov
outsb
ret
dec
sub
sete
stc
mov
ljmp
fistps
leave
push
xchg
pusha
stos
lcall
or
sub
ljmp
xor
xchg
scas
sbb
sub
insb
pop
icebp
ret
and
icebp
repnz
fmul
push
jne
shl
addr16
push
lret
loop
imul
fistps
fnsaves
pop
mov
out
movb
iret
dec
push
adc
dec
mov
and
data16
call
cmpsb
mov
movsl
or
jmp
mov
mov
sbb
sub
out
js
fldt
lds
or
pop
push
add
out
mov
in
dec
movsb
adc
pop
ret
jae
rcrl
lret
popa
aad
xor
inc
and
loop
dec
lret
cmp
std
bound
repnz
daa
sbb
gs
sti
ds
push
lcall
xor
push
push
push
icebp
cmp
lods
jle
clc
inc
es
mov
pop
pop
push
pop
xor
inc
sub
icebp
nop
dec
add
dec
leave
jbe
cs
add
pop
push
xchg
xchg
scas
and
sub
adcb
test
cmp
fstpt
inc
sub
push
mov
and
sbb
sahf
mov
inc
dec
jp
sub
or
adc
movsl
popl
sub
mov
lock
ret
jo
cs
mov
out
mov
icebp
jecxz
adc
inc
pop
mov
std
and
inc
cli
cli
xchg
adc
fmuls
jmp
jg
cmp
jb
jge
fucomi
sub
sub
xchg
in
mov
insb
aam
pop
pop
clc
push
add
clc
sub
rcrb
cmp
jle
dec
sub
leave
dec
mov
push
addr16
add
pusha
imul
out
or
pop
jp
das
mov
mov
icebp
sbb
add
jge
xor
push
mov
adc
push
adc
ret
mov
mov
mov
lret
insb
inc
pop
imul
stc
out
nop
mov
inc
dec
lods
mov
mov
lret
xchg
lret
pop
iret
mov
add
cmp
popa
mov
dec
fisubrs
pop
mov
inc
popa
or
adc
or
dec
fisttpl
xchg
in
arpl
pop
xor
xchg
or
aam
jmp
dec
test
pop
pop
jmp
xor
cmpb
mov
in
incl
adc
jne
xchg
fistpl
jnp
dec
negl
div
incl
cmp
mov
inc
sbb
push
mov
mul
and
sbb
mov
push
repnz
jnp
pushf
pop
sbb
jl
pop
pop
jns
xchg
daa
aad
add
lods
cmp
test
dec
test
push
popf
xchg
leave
cmpsl
xchg
mov
adc
pxor
fdivl
mov
je
cmc
ljmp
fimull
jg
cwtl
mulb
and
jbe
popf
mov
add
loope
dec
xchg
negl
mov
mov
rcr
lcall
cmp
orb
and
push
aaa
insb
test
int3
punpckldq
sub
pop
cmp
dec
sahf
jp
jg
dec
les
std
loopne
imul
cmp
repz
push
call
or
or
xor
sbb
push
js
popf
shlb
les
icebp
lahf
mov
and
into
pshufw
pop
pop
cmp
push
rolb
int3
push
jge
fwait
dec
les
in
adc
ds
and
movb
lahf
mov
sub
fists
push
sub
and
jno
pop
xchg
dec
repz
jns
fnstsw
nop
xchg
xchg
aas
inc
popa
in
loop
xchg
rcrb
jo
pop
pop
mov
sub
pop
scas
gs
int
aaa
insl
mulb
cmp
push
mov
mov
sub
inc
push
mov
xlat
mov
scas
push
xchg
mov
mov
adc
aas
mov
xchg
mov
lret
jmp
xor
rcrb
inc
iret
orl
push
jecxz
daa
mov
sbb
pop
subb
lret
testl
icebp
imul
sub
push
outsb
clc
inc
ret
add
sbb
je
xor
icebp
xor
test
dec
xor
nop
int
adc
ja
call
add
adc
sbb
adc
cmp
xchg
aad
shl
fiaddl
shl
xor
into
aam
mov
dec
sub
flds
jno
fnstsw
je
pop
js
out
les
adc
lret
ret
dec
outsb
jp
mov
enter
repz
xchg
mov
rorl
lret
cmpsl
inc
cmpl
pushf
cli
fs
fs
lahf
daa
adc
in
jne
dec
popf
mov
mov
scas
andl
js
mov
pop
jecxz
popa
adc
mov
inc
int3
adc
repz
loope
out
fistpll
xor
jle
jnp
mov
inc
rorl
push
dec
dec
dec
std
imul
dec
dec
js
seta
sbb
leave
sbb
pop
mov
in
adc
jae
adc
sbb
fimull
rcl
pop
push
mov
je
les
sarb
inc
push
lahf
jns
inc
in
stos
jecxz
jl
fsin
cmp
shrl
aas
mov
int
aas
jg
cmp
cmp
push
mov
sub
ss
loop
push
pop
lret
add
xlat
mov
inc
imul
and
or
or
mov
mov
out
sbb
xchg
pop
jbe
push
xor
test
das
add
sbb
mov
aad
cmp
popf
cmp
scas
out
dec
ds
inc
jns
cmc
negb
ljmp
stos
xor
push
dec
aad
pop
jne
cmp
lock
test
add
push
int3
sbb
mov
inc
stc
pop
in
dec
push
sahf
fistpl
adc
inc
in
push
scas
cmc
cmc
xor
insb
mov
add
imulb
stc
xchg
mov
leave
mov
adc
and
aas
in
pop
repz
fcmovu
push
out
sub
mov
mov
rcll
mov
xchg
stos
jecxz
pusha
adc
fs
sti
sbb
popf
push
jmp
jbe
xchg
and
sbb
adc
mov
adc
add
xchg
dec
jbe
aas
dec
lret
xchg
icebp
inc
cmp
fcompl
xor
sbb
mov
adc
sub
cmc
ja
cmpsl
xchg
sub
push
or
and
call
jnp
adc
andb
jge
notl
mov
mov
push
ret
outsl
sbb
lret
ret
stos
jno
cmp
fmull
push
fsubl
adc
sbb
jl
pop
jb
push
mov
xchg
out
mov
movsl
jno
add
jecxz
test
mov
adc
mov
mov
adc
inc
xlat
jecxz
pusha
xor
mov
je
inc
and
or
std
mull
adc
mov
xor
fadds
inc
insb
enter
push
fists
movsb
iret
jb
shlb
push
pop
fs
dec
dec
add
xchg
imul
xor
aad
mov
fsub
pop
stos
and
adc
jecxz
fucomi
ss
mov
pop
mov
or
daa
jmp
inc
repz
in
pop
xorl
ljmp
pop
mov
push
pop
jo
mov
cmp
push
or
jp
in
pushf
or
fildll
sub
cli
ret
mov
ds
rcl
negb
cmp
notl
mov
adc
or
inc
mov
shll
lods
iret
call
sbb
test
jecxz
adc
leave
mov
jnp
push
sbb
jmp
push
hlt
gs
jno
iret
test
lods
dec
sub
pop
mov
adc
push
and
fs
js
jo
jne
dec
jmp
out
xor
loopne
or
pop
stos
das
cmp
mov
inc
popf
loop
stos
imul
jmp
sub
mov
dec
testl
xchg
push
mov
je
add
int3
rcll
outsl
sub
jns
adc
aas
mov
in
leave
test
fnstenv
fnclex
push
mov
aaa
pop
lds
push
das
or
sub
sarl
hlt
or
sub
pop
test
lods
add
out
mov
sub
and
and
cmp
mov
out
mov
xor
in
push
xchg
stos
push
cmpl
jl
add
or
add
movsb
call
arpl
movsl
pop
fucomip
adc
cs
mov
fsubl
cwtl
xchg
enter
fidivrl
mov
inc
mov
jle
mov
in
test
dec
fisubrs
out
fstps
lcall
or
hlt
adc
adc
mov
pop
cmp
add
aas
adc
js
xchg
movsb
pop
hlt
pusha
int
sahf
fs
jb
enter
in
jne
test
ret
mov
sbb
jmp
decl
xchg
insb
pushf
sbb
cli
insb
fwait
mov
push
or
shll
fs
repnz
in
lock
push
sbb
jle
adc
cltd
and
shrb
or
mov
xor
test
mov
loopne
scas
mov
ret
dec
loop
lret
push
mov
sahf
sqrtps
loop
jae
popf
pop
loopne
cmp
vsqrtpd
out
xor
loop
push
sub
sbb
jp
test
sub
xchg
sahf
sbb
mov
cmpsb
pop
mov
dec
push
lret
sub
and
xchg
roll
push
and
inc
pusha
xor
iret
jg
dec
add
mov
xchg
jge
lds
fcoms
xchg
and
shr
fnstsw
in
xor
fcoms
das
nop
add
ja
add
push
sub
push
out
stos
xor
pop
adc
pushf
push
aas
arpl
xor
icebp
adc
and
mov
mov
cmp
aaa
jg
push
xchg
pop
insb
outsl
in
outsb
ss
lds
je
push
ss
mov
sub
mov
or
dec
cs
dec
fs
sbb
cmp
mov
xor
getsec
xchg
add
cmp
rcl
fbstp
out
mov
fisttps
mov
adc
push
nop
xlat
insl
call
xchg
mov
fnstenv
ss
pop
jbe
bnd
lea
dec
into
rcr
adc
cmpsl
xchg
nop
js
in
cmp
pop
xor
mov
mov
arpl
sbb
loopne
and
jns
cmc
adc
mov
mov
dec
push
popa
xchg
flds
jbe
mov
jbe
adc
dec
rcrb
imul
adc
push
dec
lods
dec
shlb
xor
xor
out
jecxz
inc
out
push
mov
fidivs
mov
in
stos
ret
sbb
pop
dec
nop
into
pop
lods
imul
dec
jecxz
idivb
adc
cmp
xchg
sub
call
aad
push
call
sub
adc
push
clc
into
subl
xchg
int3
pop
fimull
mov
sbb
in
mov
cltd
mov
sub
data16
or
mov
cmpsl
xor
mov
push
inc
xchg
daa
sub
mov
push
mov
sub
les
mov
mov
fwait
imul
or
cmp
out
dec
mov
je
imul
mov
jb
fdiv
lahf
fwait
stos
xchg
fidivrl
jmp
shl
leave
and
jge
bound
inc
push
fcmovb
rdtsc
or
inc
sti
dec
dec
lds
lahf
push
push
je
mov
les
mov
inc
loopne
push
das
test
in
xchg
cwtl
push
ds
ljmp
insb
imul
cmp
jno
mov
loope
data16
add
push
subl
sub
xor
pop
imul
es
ja
push
xchg
push
cltd
les
test
cmp
test
fcomps
daa
rolb
cli
cmpsb
ret
test
pop
xchg
jns
xchg
jne
cmc
mov
shlb
fisubl
inc
jae
dec
pop
es
jecxz
das
jmp
push
mov
rorl
pop
and
mov
sbb
xchg
mov
fstl
jbe
ret
insb
ss
mov
rcll
cmp
adc
add
imul
ret
mov
pop
lea
push
imul
mov
lock
sbb
adc
iret
sbb
cmp
cmp
call
cmp
push
cmpsl
ret
lods
inc
fsubl
pusha
divb
shl
adc
faddl
repz
mov
std
xchg
shlb
push
mov
pop
sub
stc
mov
stos
push
adc
jb
sbb
shlb
mov
jg
leave
jns
jg
pop
inc
mov
mov
cmp
mov
fcoms
arpl
pop
xor
push
jecxz
outsl
xor
cmpb
and
lret
ljmp
or
sbb
add
mov
insl
mov
iret
pop
adc
mov
cmp
shl
data16
gs
pop
cmpsb
mov
jno
pusha
add
fwait
insb
out
lahf
incb
mov
iret
mov
mov
push
pop
out
mov
test
popf
adc
dec
sub
scas
mov
repnz
loop
push
shll
negl
mov
arpl
cmp
cmp
mov
lahf
xchg
lret
mov
inc
cmp
cltd
adc
pop
sub
add
xchg
sahf
std
repz
xchg
imul
test
pop
rcrb
bound
pop
and
push
inc
add
enter
add
push
xor
loope
dec
jl
aas
jb
mov
int
in
jg
mov
cmp
mov
jmp
cwtl
int3
adc
lret
xlat
mov
pop
arpl
jecxz
mov
mov
scas
daa
jp
xor
rcr
stos
and
dec
sbb
and
push
sarl
iret
push
mov
cwtl
pop
mov
outsl
mov
cs
dec
adc
loop
cmpsb
jne
out
test
nop
adc
push
cli
out
mov
jecxz
sbb
out
repz
pop
and
xor
cwtl
cmp
or
pop
dec
leave
insl
lea
cmpsb
es
jno
lods
cmp
cmp
jns
popl
gs
ds
outsb
adc
in
xor
data16
fs
sub
mov
jnp
jae
das
mov
mov
fcmovu
mov
out
mov
leave
ljmp
sbb
fdivrl
pop
leave
mov
arpl
lds
pop
in
mov
jne
cmpsb
loop
popl
aad
hlt
imul
adc
jnp
mov
sbb
popa
loop
inc
push
jmp
inc
push
stos
pop
in
outsb
jle
shrl
call
fidivl
das
sub
and
mov
repnz
xorb
pusha
stos
add
scas
xchg
and
mov
fstpl
and
or
sub
test
fwait
daa
sub
jno
in
aaa
xor
push
sarb
rcrl
into
cmc
scas
sbb
jns
xor
das
sbb
sti
aad
orb
xor
insb
jb
stos
cmp
into
jnp
cmp
hlt
mov
jle
fstl
and
int
daa
lods
pop
jge
hlt
mov
pop
nop
xor
pop
js
pusha
jno
mov
pop
mov
clc
and
sahf
jmp
and
jl
arpl
jb
je
mov
mov
jb
cmp
and
lret
or
fnsave
daa
mov
mov
addr16
jb
and
xor
test
push
cltd
je
xor
in
dec
sbb
incb
mov
int3
clc
insl
jg
pop
ficoms
movsl
out
push
or
pushf
mov
sub
aam
jnp
inc
mov
ret
repz
pop
or
imul
xor
stc
es
jl
shll
data16
stos
jns
jecxz
pop
roll
mov
mov
mov
xchg
xor
adc
scas
popf
sbb
mov
mov
rol
mov
insb
in
outsl
and
inc
xchg
xchg
sbb
dec
mov
in
jne
dec
sbb
clc
les
lret
sub
jnp
mov
cmc
mov
inc
fidivl
fwait
xchg
lret
jne
jae
cmpsl
call
cmp
mov
cs
lret
push
ss
mov
xor
cmp
ds
jns
pop
sbb
xor
and
jo
sub
nop
nop
cmpsl
call
xor
add
fdivp
aaa
mov
loope
stos
test
xor
in
mov
stc
and
cmp
lret
pop
popf
outsb
jle
or
cli
xchg
push
or
ds
lods
call
cmp
data16
cmp
mov
data16
ss
and
xchg
stos
fisubrl
addr16
arpl
dec
lods
add
dec
ljmp
add
xchg
xchg
ret
cmp
jbe
push
lods
out
or
pop
sub
dec
ficomps
je
cs
push
add
rcrb
sbb
xor
push
cltd
test
push
mov
sbb
js
and
loopne
xlat
mov
and
test
sub
adc
push
and
or
push
cmpsb
cmp
fs
mov
adc
pusha
mov
push
jnp
adc
addr16
mov
or
jecxz
scas
sub
pop
sbb
and
lods
sbb
mov
in
pop
add
in
in
popa
jne
test
ljmp
faddl
iret
cmp
push
mov
mov
cmpsb
push
push
mov
divl
and
xchg
data16
cmp
call
nop
cmp
mov
in
add
xchg
cwtl
jns
testl
test
xor
movsb
in
or
icebp
cltd
lea
data16
movsl
jmp
test
mov
add
jp
cwtl
xchg
subb
nop
xchg
push
in
mov
add
lds
xchg
leave
xchg
outsl
pop
es
not
int
xchg
push
add
pop
adc
cs
push
xchg
scas
dec
push
out
jne
ficoms
push
je
out
cmp
xchg
imul
or
cli
test
fpatan
mov
fsubrs
in
shlb
inc
jno
popa
movsb
inc
jno
mov
scas
aaa
jbe
into
aam
ret
call
inc
adc
lret
inc
push
inc
push
cmp
dec
dec
sbb
popf
inc
mov
xchg
mov
es
pop
jo
adc
sbb
cld
enter
sbb
notb
std
repz
mov
jp
mov
aas
push
frstor
mov
fisttps
cmp
jge
not
aas
shlb
outsl
pusha
iret
jb
imul
stc
xor
icebp
cld
clc
cmp
movsl
xchg
jmp
or
movsl
pusha
add
sahf
pop
fcomps
mov
mov
cs
fwait
loopne
mov
add
sub
pop
jno
fdivrs
cltd
xchg
cmpsl
xor
fwait
dec
fnsave
xlat
scas
xor
sub
or
or
mov
outsb
sbb
pop
cld
rcr
scas
inc
int
push
sbb
jnp
xchg
pop
xchg
push
dec
cmp
add
mov
lahf
jb
shll
sti
stc
out
ljmp
sub
dec
mov
xchg
push
add
push
dec
xchg
mov
cli
mov
bound
mov
loop
and
ret
mov
loopne
mov
stos
sti
or
shll
pop
xchg
imul
sbb
in
pop
xor
inc
pop
shll
popf
inc
cmp
dec
mov
add
je
jnp
imul
call
mov
scas
into
mov
jle
mov
fistl
popa
push
xchg
mov
push
adc
fwait
mov
push
int
add
into
lret
test
xor
inc
pop
fwait
cmp
nop
cs
pusha
in
lods
push
lahf
sub
xchg
push
out
mov
add
mov
mov
insb
lds
or
test
sub
shrb
test
add
out
jle
outsb
jbe
cmp
mov
sub
jecxz
lea
arpl
imul
inc
ret
mov
inc
enter
pusha
and
fwait
jno
subl
inc
or
or
sub
jne
in
mov
fistl
enter
testl
cmpb
inc
pop
mov
sub
fisubs
daa
push
fldenv
insb
push
ljmp
mov
arpl
dec
andl
or
xchg
xchg
outsb
cli
pop
repnz
jbe
lods
jecxz
xor
lret
sahf
aas
ja
cli
mov
daa
push
add
movb
aam
out
mov
pop
test
jg
and
cmpsl
cmp
pop
cmp
mov
loopne
je
xor
dec
pop
fsub
jae
sub
jp
or
push
lret
adc
mov
shlb
pop
cmp
add
sahf
sub
aas
adc
jmp
rorl
movsbl
push
dec
and
lds
jp
std
pop
or
mov
adc
mov
or
jl
aam
push
inc
inc
pop
and
xchg
jl
lret
test
lret
cs
lods
sbbb
jnp
rcll
mov
sub
or
insb
or
nop
xor
shll
out
cli
xchg
sbb
mov
sub
insb
xchg
fldt
and
xor
jmp
cld
mov
test
push
adc
rcrb
adcl
pop
fisubrs
pushf
rcrb
in
leave
idiv
scas
jmp
mov
rol
clc
or
subb
in
inc
insl
divb
loope
jns
inc
imul
pop
jne
popa
mov
mov
adc
into
mov
outsb
stos
pop
xchg
lea
and
pop
dec
stos
adc
outsl
clc
es
jle
mov
and
ficompl
xchg
sub
jge
aam
fsubrs
imul
mov
mov
lret
inc
sub
lcall
ret
and
fwait
enter
push
push
add
fs
loope
xor
inc
mov
je
repz
rcr
and
cmc
jmp
int
xchg
insb
leave
pusha
and
mov
gs
daa
mov
push
mov
int3
xorb
aaa
imul
and
ret
cmp
xchg
dec
loopne
cmpl
je
dec
repz
cld
pop
sbb
cmp
outsl
xor
sub
push
js
in
push
hlt
jns
dec
loope
test
inc
sbb
test
rcrl
andb
enter
inc
je
sbb
addr16
dec
xchg
insb
js
pop
les
aam
jae
xor
inc
lock
fidivl
in
test
xor
xchg
mov
outsb
push
fnstsw
xchg
rcl
push
adc
xor
jp
stos
les
mov
ljmp
cli
mov
bound
mov
sub
or
mov
pop
and
pop
imul
inc
jns
mov
cltd
jb
mov
jge
jne
out
out
call
push
xchg
jno
test
adc
out
cmp
dec
jae
aaa
pop
pop
xchg
dec
mov
xor
mov
popl
sub
inc
testl
mov
sub
outsb
icebp
mov
fwait
mov
adc
sub
outsl
mov
sbb
sub
movsb
cmp
int3
call
inc
fsubp
andb
aam
out
popf
aam
sbb
jne
sbb
and
lods
sbb
int
repnz
cmp
clc
pushf
sub
fwait
inc
adc
jg
adc
push
js
pop
cltd
ret
inc
cmp
jmp
ja
pop
inc
mov
inc
inc
adc
or
xchg
lock
sub
nop
ljmp
mov
mov
ror
mov
jne
cmove
stos
hlt
clc
mov
pusha
mov
mov
mov
xchg
dec
in
and
fbstp
data16
add
jns
and
xchg
add
add
or
es
inc
jmp
inc
lret
aaa
pop
jg
lret
mov
xlat
adc
sbbb
and
lret
popa
leave
xchg
jns
cltd
std
mov
or
sub
clc
clc
int
xchg
mov
lret
es
into
xor
icebp
jecxz
xor
cmp
imul
push
repz
inc
or
pop
enter
push
sbb
icebp
cld
mov
xor
xchg
enter
mov
adc
jmp
and
mov
adc
mov
jbe
lods
stos
mov
inc
aas
mov
and
sub
push
outsl
and
and
jo
sub
movsl
aas
mov
imul
add
xor
insl
test
cpuid
fs
leave
into
mov
lods
in
sbb
xor
inc
inc
push
sub
sub
xchg
enter
test
andl
mov
push
cld
adc
pop
adc
mov
rolb
cwtl
outsb
jne
in
outsb
rol
adc
jge
enter
vaddsd
jle
arpl
mov
lds
xor
test
pushf
icebp
nop
sub
inc
subl
inc
dec
pushf
mov
add
pop
test
inc
leave
mov
dec
cmp
sub
mov
jmp
jmp
movsl
mov
cmpsl
pop
mov
cmp
arpl
sbb
mov
jmp
outsb
minps
test
rclb
mov
nop
xor
leave
inc
cwtl
jns
pop
testb
or
mov
popa
push
stc
out
lahf
popf
pop
jl
mov
adc
out
push
jmp
fldl
sub
mov
shlb
xchg
mov
popf
pop
jg
ja
or
sahf
add
orl
or
int3
lock
fdivrs
shr
sti
mov
sbb
leave
stc
stos
std
add
push
rclb
imul
std
into
push
adc
sbb
mov
pop
sahf
aam
push
push
jp
inc
fsubs
adc
pushf
dec
mov
nop
add
push
sahf
and
ret
pop
clc
rol
push
test
fwait
mov
push
mov
lods
dec
xor
outsb
xchg
ds
out
sbb
mov
or
or
inc
xchg
test
xchg
xchg
decb
adc
dec
dec
inc
adc
push
aas
cld
push
xor
arpl
insb
pop
xchg
adc
xchg
sub
add
jb
mov
sti
insl
shlb
mov
inc
pop
cltd
jns
or
inc
mov
mov
pop
xorb
lods
push
add
inc
mov
xor
mov
mov
dec
shr
jle
fs
icebp
das
inc
jno
lock
ljmp
inc
mov
and
sub
insl
xchg
sub
push
xlat
insl
inc
lcall
push
inc
jne
out
icebp
shlb
mov
jmp
mov
ret
and
and
test
test
lock
ljmp
imul
out
sbb
repz
push
jne
pop
repnz
mov
jmp
shlb
or
sbb
andb
push
dec
or
pop
loop
xchg
cmpsl
mov
mov
or
xor
popf
push
inc
divl
push
into
arpl
add
cmp
ds
add
add
jnp
pusha
lock
mov
or
push
cltd
test
ljmp
in
jns
mov
in
enter
push
inc
orb
nop
pop
ds
out
aas
push
pop
mov
jnp
mov
mov
in
out
fisttpl
addr16
mov
les
scas
loop
xchg
hlt
dec
pop
fdivl
jbe
adc
mov
dec
fdivrp
data16
jp
sub
out
adc
nop
and
sbbl
pop
mov
xchg
jae
mov
lret
jo
out
mov
sti
inc
lcall
call
into
pop
adc
pop
jnp
cltd
push
gs
arpl
call
pusha
adc
inc
and
cwtl
mov
sbb
cmpsb
mov
in
dec
insb
clc
jne
in
mov
mov
xchg
cltd
test
test
xor
push
xchg
lea
mov
mov
sbb
mov
xor
cmp
pusha
test
mov
inc
inc
cmpsb
stos
and
int3
and
mov
sbb
add
sub
ret
add
mov
lcall
mov
inc
adc
repnz
jno
or
mov
add
outsl
inc
add
add
xor
js
inc
inc
outsb
mov
clc
negb
mov
jmp
outsl
mov
add
out
push
xor
sub
jae
or
fidivrl
cli
fstp
inc
xchg
sbb
out
scas
push
int
rcll
cmp
xchg
mov
scas
lods
push
test
cmpsl
push
mov
push
into
std
cmp
pop
dec
jns
or
jp
repz
inc
daa
push
cmpsl
iret
add
or
sarl
js
jg
inc
xchg
ljmp
xchg
mov
addr16
sbb
jmp
mov
dec
adc
or
loope
or
cltd
jecxz
mov
fldenv
stos
lds
out
xchg
sub
mov
or
loopne
jb
addl
push
mov
fsubrs
lahf
jbe
sarl
comiss
sub
shrb
cmp
inc
and
or
ljmp
leave
sti
aas
out
or
lock
push
daa
and
arpl
mov
jno
xchg
sahf
or
out
outsl
movsl
pop
cmp
imul
add
pop
fstpl
mov
push
sti
movsl
sbb
pushl
lock
int
jae
in
in
out
mov
mov
adc
add
push
sahf
in
roll
in
mov
shll
std
fistl
mov
mov
jmp
mov
clc
mov
in
fstpt
xchg
loopne
les
mov
adc
xchg
add
mov
cmp
push
cmpsb
push
mov
aad
lock
xchg
bswap
xchg
into
xchg
add
mov
rcrw
sub
jns
xchg
and
pop
adc
scas
out
insb
stc
daa
xchg
cmpsl
adc
jo
orb
pop
pop
cmp
mov
sbb
jno
sub
sbb
js
dec
mov
cmp
ljmp
push
sbb
mov
comiss
popf
ljmp
lret
cmpl
aad
dec
inc
gs
jl
add
mov
ja
sub
je
inc
jg
loop
movsb
mov
sbb
and
mov
leave
lret
mov
jle
jae
add
add
xchg
mov
into
fwait
cmpsl
decb
push
push
ljmp
mov
mov
xchg
dec
sahf
jae
test
das
or
inc
pop
pop
or
add
mov
inc
mov
inc
ljmp
cli
mov
add
mov
fcoml
push
jno
aaa
pop
jbe
cmp
dec
sub
mov
sbb
mov
mov
ljmp
lahf
hlt
or
xchg
gs
mov
test
mov
push
pop
mov
and
fidivl
lea
adc
pop
mov
ret
out
xchg
int3
xchg
ret
pop
mov
push
lret
push
jno
or
xor
repz
test
inc
dec
sub
adcl
or
inc
sti
sbb
and
and
test
cmp
sti
imulb
rorl
add
sbb
ljmp
and
jns
push
sub
scas
push
pop
mov
ljmp
cld
cs
adc
leave
inc
addb
movsl
mov
aas
and
js
fisubs
jg
xchg
sub
add
or
mov
mov
ret
mov
sub
and
inc
out
ja
xorb
inc
cmp
pop
cs
sub
cwtl
cli
fadd
sub
imul
lcall
add
xor
cwtl
test
fcoml
jecxz
idiv
movsl
out
cmp
sub
pop
mov
stos
xchg
ja
cmp
dec
jne
sub
jp
dec
add
js
fcom
sub
sbbl
pushf
jo
mov
sbb
fs
mov
std
xchg
movsl
mov
pop
inc
pop
or
testl
pop
dec
sub
mov
ja
stos
pop
imull
sub
push
pusha
aaa
xchg
pop
xor
cmp
sbb
sti
jno
sbb
pop
push
adc
call
stc
dec
dec
mov
pop
lcall
dec
cmpsl
pushf
stos
pop
jle
ljmp
or
and
lea
fwait
jne
sub
daa
cmp
push
jp
cmpsl
scas
lret
lahf
lods
enter
mov
xchg
test
xor
xor
push
mov
test
imul
mov
or
mov
repz
inc
xor
stc
jle
inc
fcmovnu
cmp
movsl
mov
add
adc
xchg
push
movsb
dec
daa
jns
mov
sbb
aaa
push
pop
cmovne
insl
fs
rcrb
dec
inc
xor
fistl
out
jp
loop
mov
pop
bound
mov
jns
jg
lds
mov
cli
lcall
cmpsl
mov
mov
mov
test
insl
bnd
lea
push
jle
std
add
or
pop
addr16
mov
xor
outsl
push
mov
repnz
in
cmp
test
adc
push
sbb
cmp
push
iret
fstps
out
roll
jae
sub
icebp
arpl
scas
dec
mov
stc
out
in
cwtl
in
popa
nop
push
jno
in
adc
xchg
bnd
sub
outsb
push
jp
ret
add
sbb
das
imul
add
push
mov
testl
stos
push
and
jo
jl
xor
jg
add
lret
lcall
sub
shrb
subb
cltd
mov
pop
inc
insb
subb
dec
mov
lret
pop
addb
xchg
scas
pop
and
xchg
jg
or
ret
into
jb
adc
xchg
jge
pushl
xchg
push
ret
je
in
push
icebp
lods
test
outsb
xor
dec
inc
mov
pop
daa
fsts
pop
jnp
pop
add
test
xlat
insb
into
mov
addr16
cli
or
dec
push
and
push
inc
lret
aaa
sbb
pop
inc
stos
pop
outsb
mov
push
clc
jl
jnp
dec
or
push
inc
cmpsl
cwtl
adc
jl
popa
shrl
add
mov
loopne
jno
cs
sub
in
fwait
sbb
test
loope
js
nop
and
fwait
push
fisttps
mov
jo
sti
xor
push
mov
or
aam
or
dec
popf
inc
loope
jnp
pop
repz
dec
popa
testb
push
pop
mov
hlt
inc
mov
scas
sbb
xor
mov
jecxz
cmp
ret
mov
mov
dec
adc
push
jecxz
fs
xchg
mov
push
rcll
push
pop
in
test
movsl
mov
mov
push
jns
inc
dec
sbb
imul
dec
insl
pop
dec
jno
es
xlat
mov
pop
inc
push
ss
mov
pop
jne
push
cmpsb
repz
jg
pop
ljmp
sub
mov
mov
aam
das
xor
inc
pop
jb
into
daa
insb
jb
xor
les
out
out
out
je
sub
je
lods
scas
mov
leave
movsl
cs
adc
stos
mov
ficoml
ljmp
mov
jg
cwtl
fcomps
mov
inc
lcall
and
outsl
adc
xor
add
or
pusha
iret
repz
das
pop
mov
je,pn
iret
rcrb
test
xchg
divl
mov
xchg
lcall
push
into
movsl
sarb
and
cmc
ljmp
hlt
lret
sbb
cmp
sbb
mov
call
sbb
cmp
movaps
xor
xchg
pop
aaa
sbb
adc
mov
dec
scas
sub
push
fsubr
loope
mov
popf
pop
jl
xor
insl
adcl
sbb
data16
cmp
pop
in
ret
cmp
inc
test
test
out
inc
lcall
dec
lret
push
iret
mov
testl
or
test
adc
loope
repz
xchg
add
cmc
sub
xchg
scas
fs
imul
inc
xchg
push
mov
stos
lcall
pop
cwtl
in
decb
cmp
xchg
fwait
pop
cmp
xchg
lea
imul
mov
leave
sub
xchg
popf
pop
fisubl
in
cmp
or
mov
or
daa
dec
clc
es
mov
jmp
fmulp
jecxz
pusha
loop
jnp
pusha
in
inc
repnz
pop
fistl
mul
mov
popa
jno
inc
mov
push
pop
dec
push
jnp
mov
icebp
and
jns
dec
and
ret
pop
hlt
pop
push
xchg
xor
push
mov
cmpsl
push
imul
sbb
testb
das
inc
mov
push
inc
jo
scas
pusha
or
jnp
xchg
push
clc
movsb
std
add
pop
das
sahf
stc
out
fidivl
pop
or
xchg
xlat
cmp
push
inc
pop
pop
add
push
lea
movsl
inc
mov
aam
sbb
loope
call
xchg
aas
push
scas
into
imul
in
sub
dec
lods
into
xor
loope
mov
inc
inc
add
mov
push
fld
xchg
call
enter
stos
cmpsl
jns
dec
jbe
loop
nop
insb
pop
or
aam
xlat
adc
fbstp
pop
mov
rorb
js
mov
sub
adc
jp
xchg
mov
lcall
push
lock
mov
mov
shll
notl
negb
sbb
jl
movsl
cmpsl
cmp
mov
roll
inc
cmpsl
adc
outsb
jb
ljmp
lret
mov
aas
fnsave
repnz
sbb
shll
cmp
ds
cli
mov
cmp
cmc
mov
mov
mov
outsl
test
ret
mov
mov
xchg
dec
int
pop
cmp
mov
pop
std
movsb
stos
cltd
xchg
lret
cs
add
push
mov
jns
mov
mov
into
adc
cmp
leave
loop
jb
jp
sbb
sti
movsb
xchg
rcll
jl
shll
ljmp
imul
push
repnz
std
loop
mov
aad
lcall
stos
arpl
fisttps
aaa
fwait
mov
cmp
mull
inc
jne
jbe
mov
and
pop
add
test
sbb
inc
fdivs
jae
les
pusha
pushf
jecxz
mov
adc
std
jno
dec
mov
jb
pop
cmpsb
nop
out
cs
jno
push
cmp
aaa
fisttpl
cmp
outsl
and
movsl
push
adc
jmp
insl
int
xor
mov
ja
adc
lret
ficoms
fildll
stc
repz
mov
pushf
sub
lds
cwtl
xchg
pop
scas
pop
out
adc
cmp
mov
jp
sbb
jns
xchg
xchg
sti
ljmp
dec
insl
mov
shll
cs
jbe
jns
ds
testb
and
dec
test
ds
mov
ficoml
sbb
lods
mov
jmp
iret
push
daa
inc
pop
aas
lret
jp
jecxz
dec
test
cmc
jb
mov
or
dec
xchg
ret
addr16
bound
mov
and
adc
cmp
pop
scas
je
mov
movsl
inc
rol
movsl
leave
xorl
dec
push
repz
dec
sbb
push
test
jb
das
scas
bound
sub
push
jae
enter
xor
enter
lods
jno
push
mov
pop
xchg
iret
jno
ds
loopne
lods
cwtl
popa
test
lods
addr16
xor
xor
mov
lahf
pop
cmp
push
cmp
inc
shl
aas
ret
sbb
mov
xlat
orb
dec
fwait
insb
push
in
xchg
je
cmpsb
lcall
insl
aad
mov
mov
jge
xor
lret
fwait
push
mov
jo
pop
daa
inc
and
push
jmp
sbb
lcall
movsl
push
daa
mov
out
mov
inc
cmp
dec
mov
xor
cmpsl
or
jle
ficoml
jnp
push
inc
in
sbb
or
icebp
cmp
std
push
pop
pop
mov
cmc
push
in
stos
and
mov
jno
push
pop
xor
push
ljmp
mov
add
mov
imul
lock
adcl
or
cmovne
cmp
out
clc
inc
das
repnz
cmc
out
call
cmp
pop
sub
divl
test
adc
or
mov
out
rolb
pop
xor
sub
jp
movsl
loope
mov
xchg
inc
test
leave
or
pop
out
push
arpl
leave
adc
jge
rorl
mov
fbld
fwait
es
cmp
mov
int
ljmp
sar
add
inc
inc
fdivrl
pop
imul
aaa
xchg
dec
jbe
ds
setno
lock
cmp
test
dec
fstpt
mov
pop
adc
add
cld
and
inc
mov
push
mov
cmpsb
add
outsl
popf
inc
aas
push
inc
lahf
dec
mov
out
mov
or
and
xor
sbb
xlat
dec
cmpl
xchg
sbb
aad
push
ljmp
clc
shr
mov
daa
inc
stos
cmpsl
mov
movb
out
sub
inc
cld
xor
and
dec
jne
jo
mov
lds
rorb
inc
dec
xchg
cld
pop
xor
pop
inc
in
scas
in
rorl
pop
jecxz
std
arpl
push
cmc
lods
and
out
push
outsl
cmpsl
mov
jns
arpl
into
and
nop
hlt
lock
and
xor
mov
mov
daa
nop
sti
bound
shrl
xchg
jmp
icebp
movsl
fmull
or
mov
adc
add
aaa
dec
inc
inc
test
sahf
in
pop
aas
lea
nop
dec
rcl
lahf
mov
inc
ss
pop
jp
push
ljmp
subl
sarl
fmull
mov
add
adcl
int3
inc
push
out
adcl
mov
mov
mov
test
rorb
sbb
sub
iret
push
les
sbb
and
cmpsl
xor
adc
jno
fstl
int
inc
in
cwtl
adc
dec
add
out
loope
jne
lcall
int
or
aad
add
fs
jg
and
lret
std
mov
loope
pop
pop
push
cli
cmc
addr16
mov
pushf
enter
aaa
push
in
and
cli
pop
aad
movsb
shrb
mov
repnz
insb
adc
xlat
ret
sub
idivl
inc
cmp
imul
pusha
mov
mov
push
xorb
fisubrl
lock
stc
dec
lcall
pop
mov
cmpsl
popw
ljmp
mov
mov
je
mov
pop
pop
popf
sub
mov
push
insb
xor
sti
test
aam
imul
xor
push
jb
scas
in
sbb
test
cmp
push
lds
pop
xchg
lret
xor
adc
pop
out
hlt
pop
pop
repz
roll
ret
or
lsl
cmp
rcrl
data16
dec
pop
leave
or
dec
cs
js
xor
or
pop
mov
int
xchg
arpl
inc
mov
bound
or
push
fdivl
mov
shlb
int3
adcb
out
out
jmp
jbe
in
gs
daa
enter
lds
mov
insb
dec
stos
sub
push
cmp
repz
nop
icebp
sbb
lds
aaa
lea
rclb
xlat
adc
aam
jbe
and
mov
insb
mulb
mov
push
add
sub
mov
xor
cwtl
and
data16
mov
sub
mov
mov
add
adc
test
xchg
lock
andnps
xchg
adc
add
aam
push
inc
push
or
fs
bound
pop
arpl
cmp
int3
xchg
in
adc
push
push
lahf
das
xor
mov
mov
cmp
jb
imul
aaa
sbb
inc
fs
fmul
sbb
inc
mov
ret
cmpsl
pop
outsb
popf
jl
lcall
pop
lcall
adc
add
jns
fs
fstpt
jmp
fsubl
aam
inc
mov
or
data16
test
and
xchg
mov
rcr
xchg
aas
pop
in
xchg
xchg
pusha
clc
xchg
inc
aaa
ret
xchg
push
popa
dec
icebp
fnstcw
out
rcll
lds
repz
lcall
pop
xorb
xchg
jb
movsb
mov
fnstcw
test
push
in
es
addr16
dec
mov
imulb
fbld
inc
pop
test
movsb
mul
std
push
ss
sub
and
pop
jnp
dec
in
xlat
add
out
push
fmull
mov
stc
int
scas
push
insb
pop
mov
lahf
leave
fisubl
mov
daa
std
in
dec
xchg
inc
push
cltd
mov
cmp
icebp
xlat
and
fwait
inc
gs
pop
jno
jmp
mov
push
jmp
pop
nop
out
mov
cmpl
xlat
push
mov
sub
cmp
scas
add
pop
push
outsb
and
jbe
dec
inc
pop
sbb
xchg
push
in
jno
xchg
ds
pop
fldcw
jns
lods
xor
decl
and
add
fwait
xchg
movsb
jge
xchg
sarb
mov
inc
or
mov
lea
adc
inc
jecxz
aad
in
int3
xchg
testb
nop
mov
push
in
outsb
mov
lcall
test
pop
and
into
sub
adc
sar
cmpsb
dec
or
jge
dec
dec
movsb
arpl
mov
inc
popa
inc
jp
jmp
sbb
push
or
mov
and
repz
lea
aam
jno
pop
add
mov
leave
scas
jo
notb
add
mov
inc
in
mov
in
bound
sbb
fs
push
lods
mov
inc
shrb
inc
mov
add
or
clc
cmpsl
mov
lret
mov
mov
xorl
push
out
push
imul
call
imul
xor
int
mov
insl
fisttpll
jb
stos
lret
mov
pusha
or
mov
sbb
es
je
and
sti
std
int
mov
mov
in
pop
inc
hlt
jbe
enter
inc
je
rcll
mov
mov
cld
fwait
xchg
stos
daa
fcmovnb
cmc
bound
push
sub
adcl
xchg
mov
fwait
mov
adc
dec
aaa
in
mov
mov
int
dec
push
mov
hlt
and
jmp
add
cmp
sub
movsl
sbb
jg
push
loopne
mov
scas
loope
out
and
dec
int
cmc
cmpsl
and
cmp
sub
lret
inc
xor
ja
lds
int3
mov
xchg
ja
or
dec
psllq
cmpsb
add
inc
adc
mov
sarb
ss
mov
and
xchg
sarb
push
ds
stos
aas
dec
jecxz
cmp
xchg
sub
ss
jl
push
xchg
jbe
in
add
adc
out
cmp
and
mov
mov
sbb
xlat
popa
incb
shl
mov
dec
mov
or
xchg
shrb
sbb
fildl
mov
jecxz
fldcw
mov
xchg
cmp
gs
xorl
xor
aaa
es
pop
or
xor
jmp
ja
int
cld
mov
rcll
jb
push
xor
add
dec
mov
ret
lods
cwtl
mov
lahf
in
aad
pusha
int3
dec
inc
sub
repz
std
or
sbb
sbb
test
popa
cli
mov
sarl
and
cmp
xor
adc
in
pop
dec
cmpl
jmp
sbb
je
orb
push
shrl
push
add
loope
out
xor
push
xor
icebp
jecxz
or
xchg
cmpsl
jmp
xor
pusha
out
xchg
mov
pop
scas
mov
in
inc
xchg
mov
aas
repnz
shl
and
insb
pop
xchg
dec
add
inc
lret
mov
add
mov
or
inc
sub
push
sub
clc
pusha
jne
xor
adc
pop
ja
loope
enter
cmp
inc
outsb
and
ja
jg
and
test
and
enter
filds
movb
mov
popf
jmp
adc
mov
call
adc
loopne
mov
lahf
in
jns
inc
daa
push
mov
mov
bound
lods
push
lret
mov
sub
loope
enter
or
in
in
jle
and
pop
test
es
xchg
clc
sub
std
das
xchg
rcr
blci
mov
ds
dec
jbe
xchg
push
pop
lcall
or
xchg
popa
pop
fcmovnbe
loop
and
mov
test
addr16
push
lahf
repz
addr16
add
xor
jg
mov
mov
lods
xor
inc
fidivs
je
or
cmpsl
jbe
inc
mov
popa
or
inc
lods
movsb
inc
or
insl
nop
subb
xor
sarb
inc
cmc
pop
fidivs
cmp
inc
and
lahf
lods
lods
sub
xor
arpl
push
loopne
es
mov
cmpsb
or
outsl
push
dec
je
and
sbb
jne
jge
push
lods
mov
add
cs
xor
mov
outsb
or
and
fldcw
fwait
jecxz
repz
out
dec
adc
inc
in
call
lcall
xchg
daa
jbe
sti
imul
and
loop
in
pop
push
and
cli
xchg
jg
lret
insb
pop
and
and
cwtl
jne
inc
sbb
and
push
loop
out
or
lcall
add
pop
lock
pop
rcr
les
and
inc
jmp
into
xchg
loop
aaa
jl
jno
sbb
xor
jge
lahf
and
imul
loopne
pop
jmp
loop
pusha
lods
daa
sbb
clc
int
cmp
adc
outsl
mov
sub
jg
jecxz
push
mov
mov
jg
fbstp
xchg
xor
movsb
mov
and
adc
aas
add
data16
lret
jo
jle
stc
les
xor
jg
in
std
xor
out
add
add
push
std
push
sub
adcl
aam
pop
jb
sub
lret
call
and
es
xchg
mov
push
jl
or
jo
xor
movsl
mov
pop
and
imul
lods
stc
xor
ds
dec
out
dec
xchg
loop
rcrl
imul
push
sbb
out
shlb
jecxz
lods
outsl
sub
and
test
cmp
xor
lcall
ss
in
faddl
lock
test
mov
imul
iret
jns
outsl
xchg
pop
shll
fstps
fidivrl
inc
out
sub
or
jge
fcom
push
popa
lock
mov
dec
out
rclb
lret
jnp
sub
and
iret
es
mov
fstp
push
add
lods
fistpll
mov
lock
jg
lock
push
movaps
sub
xlat
push
daa
je
inc
push
jne
push
mov
and
aaa
cmp
mov
cmc
sub
fstpl
mov
xlat
cltd
outsl
arpl
sub
fildl
or
jne
outsb
jb
int3
test
mov
iret
inc
inc
bound
int3
xor
mov
lds
jae
sbbb
nop
mov
hlt
xchg
popa
jne
aaa
adc
add
push
adc
sbb
xchg
cli
push
inc
cmp
jle
sub
xchg
push
dec
test
aas
jecxz
cmc
pop
fcmovne
sti
fldl
pop
nop
xor
daa
sbb
fcomps
cld
adc
xor
jnp
mov
xchg
fs
and
mov
aad
dec
data16
fcoml
push
push
cmp
jge
in
dec
pop
aam
mov
test
adc
jge
adc
scas
xchg
jmp
cmp
call
decl
dec
cmp
cmpsl
shlb
xor
cmp
mov
mov
xchg
jl
les
imul
js
in
add
loop
lret
xor
jmp
pusha
loope
lss
cmp
daa
add
inc
loope
pop
cmp
fdivs
xor
cmp
mov
cltd
sub
pop
sub
fs
jno
fdivrs
dec
fsubrl
jnp
jecxz
jbe
push
mov
dec
fnsave
and
mov
mov
dec
jp
mov
ds
jle
frstor
out
push
pop
loope
and
rcr
jns
in
loop
clc
lods
arpl
fildl
fildll
mov
into
pop
xor
stos
dec
mov
sub
lcall
mov
xchg
sbb
addr16
mov
lahf
mov
push
or
pop
test
call
or
jb
push
and
les
mov
clc
cmp
out
out
cltd
cmp
jp
outsb
xor
sub
xchg
test
fwait
loope
cmp
jmp
and
popa
imul
mov
dec
lock
sbb
dec
shl
roll
add
int
and
ljmp
xchg
sbb
jmp
movsl
jb
sarb
lret
test
test
inc
ss
mov
clc
adc
or
mov
dec
popf
test
cmpsb
xchg
mov
or
jle
cmp
std
test
push
daa
imul
add
bnd
lret
scas
setno
divb
push
cmp
loop
iret
adc
and
mov
mov
subb
xchg
data16
gs
mov
mov
fcmovne
xchg
pop
push
sbb
adc
mov
aad
in
or
inc
cld
das
push
in
or
outsb
ljmp
push
pop
fucompp
mov
in
sub
stc
push
sbb
lds
in
sarb
sub
fdivp
jno
bswap
push
lock
sub
push
pop
inc
dec
stos
mov
dec
fwait
add
insl
movsb
push
xor
test
leave
into
bound
push
out
inc
xor
mov
xchg
out
inc
aas
or
and
out
mov
mov
std
sbb
push
pop
icebp
xchg
hlt
jp
pop
cmp
mov
lods
jb
int
cmp
jecxz
aad
mov
mov
popa
push
mov
or
cld
mov
je
pop
lea
enter
mov
jl
cmpsb
jecxz
sbb
pop
imul
push
repnz
mov
mov
stos
adc
jle
jl
lret
rolb
sbb
mov
push
sub
out
leave
cmp
test
dec
cmpsl
aam
out
cwtl
sub
pop
and
pop
jmp
inc
outsb
je
cmp
mov
fmull
pop
or
cmp
push
pop
lret
scas
pop
sbb
mov
mov
das
dec
lods
int3
and
cmp
add
push
sbb
scas
icebp
adc
pop
idivb
cwtl
xor
xor
lds
mov
mov
mov
jne
and
pop
and
fimuls
pusha
cmp
insb
mov
push
shlb
sbb
or
dec
int
adc
jg
cmp
data16
in
mov
aam
cltd
sarl
pop
xor
dec
sbb
xor
addr16
aaa
in
xchg
fwait
mov
lea
ja
mov
stc
addr16
popa
cs
sub
push
std
xor
les
int3
xchg
push
fimull
orl
insb
ret
or
jne
mov
jae
mov
int3
mov
or
sub
outsl
imul
jg
orl
fldl
fidivs
bound
mov
mov
aaa
xchg
add
mov
xchg
out
pop
mov
xor
loop
or
cmpsb
or
push
or
mov
dec
jmp
xor
mov
sti
dec
imul
jbe
xchg
mov
in
dec
adc
lea
jg
pop
mov
repnz
lcall
jmp
push
mov
sub
popf
jo
and
out
pop
jl
xchg
jmp
push
test
sub
fimuls
pop
push
push
sub
cmp
mov
fldl
cmp
or
dec
mov
out
fmuls
add
push
ret
or
inc
lahf
or
fdiv
mov
lea
xchg
fwait
mov
imul
int
sbb
sub
push
sub
mov
addr16
mov
call
mov
xor
aad
je
js
ljmp
cmp
xor
sbb
lds
pop
and
rcl
push
pop
cltd
sti
in
pop
daa
stos
jns
jp
cmp
xchg
dec
sub
mov
mov
push
lcall
sbb
xchg
out
ds
cmc
mov
adc
xlat
jl
and
xor
inc
xchg
xor
jae
stos
mov
sbb
sti
cltd
lret
js
loopne
mov
and
test
mov
dec
mov
sub
jp
test
adc
push
lds
add
imul
movsl
andb
int3
ja
mov
out
cmp
fnstcw
jp
fcoml
pop
or
cmp
cmp
gs
int
mov
test
fisubrl
and
push
aam
hlt
inc
shlb
push
jge
cmp
push
push
insl
int
aam
mov
out
push
pop
aam
ljmp
sub
push
pop
scas
adc
nop
mov
hlt
into
lcall
popf
ja
cmp
aad
rcrl
cmovbe
cmp
imulb
stc
sbb
xchg
sbb
pop
mov
mov
incl
shrb
popf
mov
add
orl
adc
mov
and
mov
dec
jb
fimull
imul
sub
out
xchg
sbb
arpl
sahf
or
mov
faddp
add
inc
test
lods
pop
push
insl
sbb
in
lret
xchg
std
lahf
cmpsb
inc
incl
aam
test
cmp
stc
and
fisubs
pop
cmp
scas
hlt
inc
movsl
push
stc
cltd
sub
jns
adc
ja
aas
push
mov
mov
jb
arpl
les
stos
cmp
cmp
push
inc
mov
ficoms
cmpsl
bound
lahf
divb
inc
and
ja
dec
mov
xor
or
xchg
mov
int3
sub
pop
stos
mov
or
cli
inc
push
mov
jb
inc
mov
dec
push
sbb
cltd
insl
mov
mov
incb
pop
data16
push
fdivl
pop
enter
xchg
cmp
shlb
mov
push
scas
pop
jge
jp
repnz
adc
xor
call
fdivp
shlb
dec
sbb
in
popf
sbb
ss
mov
push
out
sub
jmp
inc
inc
incl
lea
sbb
lcall
jno
aaa
sahf
lahf
jl
mov
popf
rcll
jg
jae
lret
loope
mov
and
dec
mov
lock
ret
cmp
pop
fdiv
ds
dec
mov
sub
scas
push
arpl
repnz
sti
cmp
dec
fmull
pop
stos
test
mov
outsb
mov
xor
adc
jmp
jnp
pop
and
mov
sbb
add
arpl
and
add
pushf
pop
das
rcll
jle
mov
mov
pop
mov
lds
mov
mov
fstl
cltd
mov
out
ljmp
cmp
rcrl
enter
shrl
lea
les
pushf
mov
sahf
push
fisubl
mov
hlt
inc
cmp
ret
push
jnp
lea
sbb
icebp
imul
jno
pop
mov
inc
adc
shrl
imul
and
push
jp
fcomi
sub
es
or
inc
jns
es
or
mov
outsl
sub
push
jns
jb
cmp
clts
lea
sbb
aad
cmpsl
scas
xchg
xchg
xchg
xchg
ljmp
mov
xor
outsb
sbb
push
lahf
rclb
sbb
lds
mov
mov
mull
das
sbb
add
or
mov
rorb
jmp
imul
stc
sbb
fcoms
xor
push
out
test
push
sahf
lahf
in
clc
and
mov
clc
mov
mov
dec
in
mov
int
add
xor
test
ret
push
mov
jns
ss
or
lret
flds
es
mov
and
out
jp
mov
pop
jecxz
dec
das
adc
cli
and
test
stos
cmp
mov
psrlw
fcmovnu
subb
shr
arpl
test
pop
pop
cltd
shlb
js
mov
imul
inc
pop
mov
xor
and
dec
mov
cmp
shll
sbb
xchg
cs
fisttps
in
mov
fnsave
negb
fists
mov
or
mov
xor
and
das
and
inc
dec
imul
daa
dec
pop
inc
sbb
inc
adc
imul
decl
cmp
iret
xor
pop
aad
in
jle
and
sub
test
mov
fsubrs
inc
inc
cltd
gs
mov
movsl
adc
shlb
fistl
push
xchg
int
cltd
sbb
lock
mov
dec
sti
or
xchg
mov
repz
rcll
mov
std
jnp
loop
repz
jnp
out
std
into
push
mov
loope
test
and
enter
xchg
pop
negb
or
dec
loop
and
frstor
jl
sub
imul
push
inc
testl
out
shl
repnz
adc
test
dec
cmpsl
and
movsl
dec
mov
pop
testb
jns
add
fstpl
js
ds
lret
out
enter
clc
les
sbb
xchg
sbb
popl
shlb
into
jb
xchg
mov
push
lock
iret
ficomps
mov
cmc
mov
scas
jno
add
or
add
sbbb
lret
out
in
call
pcmpgtw
je
inc
insb
or
cld
sahf
lods
dec
mov
outsb
ja
pop
fimuls
mov
push
in
in
or
xchg
cmp
dec
xchg
aad
incb
xlat
nop
adc
loope
xor
dec
in
int
add
fs
inc
cli
out
fiadds
and
rolb
xchg
sbb
movntps
cmp
inc
ss
and
sub
push
cmp
push
sbb
adc
cwtl
jbe
xchg
xchg
xor
push
out
mov
cmpsb
xor
lcall
push
xor
addr16
jne
test
pop
mov
add
nop
adc
pusha
and
arpl
les
mov
cmpsb
cld
arpl
sbbl
and
lret
or
mov
ret
sbbl
movsl
fst
es
and
imul
mov
pop
shll
mov
or
fdivrs
ds
mov
cmpsl
rorl
mov
jmp
or
mov
mov
clc
add
dec
cmp
adc
int
xchg
gs
mov
dec
adc
int
stos
push
mov
push
inc
out
and
cmp
pop
dec
imul
push
jb
ret
dec
popa
out
pop
js
lcall
ja
stc
pop
aas
adc
mov
popa
push
jp
push
jmp
bound
fadd
xchg
push
lds
xor
or
or
dec
inc
push
jg
cmc
add
lock
jbe
xchg
jb
mov
test
cmp
insl
jecxz
jne
pop
in
and
shrb
xor
cmp
divb
cld
adc
xchg
cmp
mov
outsl
test
inc
inc
cmp
ss
cmpsl
xchg
push
cmp
sub
mov
lea
les
xorl
loope
add
push
aaa
jne
pop
jmp
push
shrb
cld
jne
sbb
sbb
sub
push
jecxz
clc
aaa
inc
enter
int
pop
arpl
jo
or
adc
mov
lret
movl
mov
mov
mov
rol
cmp
xor
sbb
addr16
or
xor
mov
mov
adc
sbb
clc
popa
or
std
insb
shrb
fistpll
jg
jb
bound
add
bswap
scas
fwait
stc
dec
jb
xor
lods
adc
sub
ss
ja
std
and
lock
jne
icebp
mov
dec
std
add
jno
ljmp
cltd
es
lret
loopne
pop
inc
xor
cmpb
in
mov
js
fidivs
pop
scas
mov
inc
stos
xchg
dec
in
loope
addl
xlat
stos
pop
cmp
movsl
pop
and
scas
mul
rolb
fstpt
mov
sbb
aas
add
lods
inc
push
sub
mov
pop
cmpsl
or
scas
in
fistl
push
push
lret
push
mov
xchg
ljmp
xabort
hlt
cmp
mov
pop
lods
test
add
frstor
sbb
inc
rclb
xchg
jge
lods
mov
icebp
data16
lock
sub
scas
add
test
add
jbe
pop
add
sbb
cwtl
je
cmp
push
bound
sub
pop
jl
popw
je
ds
or
add
lods
fbstp
mov
or
push
arpl
jg
aas
push
stos
decl
out
dec
mov
mov
fwait
adc
lret
insb
mov
shll
cmp
push
xchg
insl
mov
xchg
imul
enter
ljmp
push
in
push
test
fsts
cmp
outsb
ret
inc
xchg
adc
movsb
xor
dec
mov
jno
jecxz
clc
imul
xor
adc
push
lock
gs
mov
push
push
addl
push
xchg
cli
cmp
pusha
int3
cmp
dec
pop
pushf
adc
mov
test
adc
lcall
pop
lock
xchg
cmp
loop
mov
jmp
pop
jo
shlb
shlb
xchg
jne
shll
dec
in
xchg
adc
inc
mov
inc
lods
jns
mov
or
data16
xor
add
bound
arpl
inc
ds
or
xchg
ror
mov
stc
incb
mov
mov
dec
push
pop
and
jns
mov
add
inc
inc
dec
and
outsb
fwait
jle
add
arpl
add
ror
or
or
mov
sbb
cmp
xchg
daa
add
sub
push
push
ja
aas
insl
xor
lahf
and
cmp
or
mov
enter
fiaddl
test
pop
andb
xlat
cmp
push
xchg
shl
fwait
adc
cmp
or
inc
inc
pop
dec
aam
sub
cmp
mov
pushf
ret
mov
cmp
or
pop
movsl
les
dec
mov
add
and
adc
add
stmxcsr
shl
mov
jmp
bound
cmpsb
push
das
add
dec
mov
mov
and
adc
cmpsl
sbb
jmp
cmp
cmpsb
mov
loopne
sbb
push
shrl
pop
int3
push
xor
inc
loop
stos
in
lods
or
lods
call
imul
inc
fldl
test
sub
jmp
aad
cs
rcll
mov
xchg
sub
pusha
xchg
xor
add
jae
mov
mov
and
idiv
insl
lods
cmp
lods
pop
or
aas
lcall
pop
in
xor
xchg
jecxz
cmc
sub
sbb
xlat
in
int
mov
inc
mov
adcl
subb
xchg
pop
pop
xlat
idiv
das
fisttpl
cmpsl
movsb
dec
xchg
leave
mov
lret
imul
jae
test
dec
popa
test
jl
lock
push
mov
sbb
dec
ljmp
jl
popf
pop
mov
fsubr
mov
addr16
pop
stos
insb
test
dec
rcrl
mov
adc
xchg
rorb
push
movsl
outsl
aas
inc
cmp
into
xchg
jno
sbb
adc
cmp
mov
pop
or
in
mov
push
push
sub
adc
xlat
bound
rcll
gs
out
push
addl
dec
xchg
push
add
mov
out
mov
aam
dec
inc
gs
out
or
cmp
loop
dec
ljmp
daa
mov
leave
stc
and
rcr
addr16
das
mov
mov
add
loopew
jnp
int
jae
int
mov
push
push
ret
xchg
mov
push
lahf
sarl
lcall
jns
cmc
xchg
mov
ret
push
pop
movsl
es
out
jns
out
fildl
leave
or
dec
cvtdq2ps
xchg
test
out
xor
mov
iret
imul
outsb
mov
mov
push
jg
mov
jnp
sub
add
mov
xor
fldl
jae
loopne
push
bound
jmp
adc
mov
or
scas
sub
addr16
xor
jae
sbb
xor
push
test
push
pusha
jo
arpl
int3
cmp
push
shr
dec
in
xorb
pop
pop
aam
out
aam
out
dec
and
cmc
cmp
es
add
sbb
fs
bound
pop
es
xor
add
inc
lea
jle
repz
out
push
mov
pop
pushf
add
je
stos
mov
xor
inc
sub
pop
push
push
mov
int
insl
in
pop
out
shlb
lret
mov
mov
sarb
mov
jmp
aas
pushf
lods
popf
mov
rolb
cmp
lods
dec
sti
mov
add
cmp
imul
loope
ret
jne
orb
lahf
aas
push
adc
fcmove
loope
dec
and
mov
mov
or
push
push
sbb
ret
push
in
dec
int3
sub
divb
add
sub
add
scas
lahf
jl
pop
push
push
pusha
insl
bound
or
stc
mov
adc
and
lods
hlt
repz
jle
andl
scas
enter
xor
cmp
push
or
pusha
inc
and
add
pop
push
push
jo
adc
int
mov
push
std
loopne
sub
or
add
loope
push
pop
rcr
stc
sbb
dec
aam
int
dec
mov
mov
xchg
mov
in
inc
pop
adc
or
lods
push
pop
lods
pop
adc
rorl
sub
es
nop
sub
pop
jl
out
lret
mov
xchg
aas
pop
addl
fildl
pop
inc
loop
data16
fsts
ds
out
push
or
das
mov
fisubrl
mov
jnp
arpl
jae
mov
test
lods
cs
jge
fwait
sarb
cs
cli
xchg
xor
imul
sub
loope
das
or
loopne
sbb
insb
filds
jae
fmulp
int
mov
je
pop
and
popf
or
in
adc
lods
dec
negb
dec
sub
lods
push
jne
loopne
sub
roll
push
insb
ds
pop
dec
ja
push
fldl
inc
outsb
xor
mov
clc
dec
push
mov
gs
stc
push
mov
sti
fs
punpcklwd
cmc
pop
lahf
sbb
jnp
mov
loop
mov
test
cwtl
test
mov
outsl
pop
insb
dec
add
repz
push
and
sub
jb
ds
out
dec
sbb
sti
in
mov
jmp
in
mov
rcr
repz
outsb
xor
jno
call
jno
arpl
repz
loop
add
lods
js
xchg
popa
sub
scas
sbb
xor
out
pusha
inc
cmc
scas
mov
cmpsl
or
pop
ss
add
xchg
xor
movsl
push
lods
jmp
inc
push
loopne
pop
test
aam
mov
push
pop
sahf
push
and
push
outsl
dec
sarb
clc
es
sbb
mov
stos
pop
mov
fcoml
or
daa
mov
push
add
and
fisttps
loopne
jae
imul
bnd
test
or
push
loopne
push
incl
cmp
adc
leave
ljmp
sbb
aam
xchg
loopne
js
inc
add
mov
sahf
xchg
jle
mov
mov
repnz
es
ljmp
mov
jo
shld
xor
mov
add
add
ret
add
sbb
jns
pop
sti
ljmp
hlt
roll
je
pop
negl
sbb
cli
sahf
imul
stos
mov
ljmp
stos
data16
pop
pop
inc
cmp
cmpsb
imulb
in
fstpt
loope
idivb
adc
xor
in
or
lret
ds
mov
inc
mov
pop
mov
scas
pop
bound
cmp
inc
cmp
cmpsl
pop
inc
fsts
push
pop
jl
and
jmp
rolb
mov
push
jp
xchg
aaa
in
stos
fstl
stos
pop
inc
imul
fldenv
dec
in
jmp
xor
jno
sarb
sub
xchg
inc
leave
insb
mov
xlat
sbb
xchg
insb
cmpsb
adc
push
fsubr
and
cltd
pop
jmp
cmp
sub
roll
add
sahf
loop
lds
fisubrl
xchg
xchg
add
mov
bound
sahf
mov
mov
mov
lods
scas
scas
cmc
inc
cmpsl
adc
adc
fbld
sbb
popf
pop
stos
cmpsl
cmp
xchg
ds
call
imul
shlb
sub
hlt
push
sub
and
push
push
or
jns
and
movsb
cmp
mov
fcomi
ret
std
cmc
loopne
repz
outsb
sub
xchg
push
pop
add
adc
cmpsb
sahf
sbb
insb
popf
pop
mov
sub
stos
mov
mov
push
adc
loop
cmp
aas
shr
test
pusha
lahf
leave
sub
inc
dec
inc
inc
jmp
enter
jnp
sbb
xor
inc
xchg
adc
fldt
sub
and
rcl
pushf
dec
cmc
mov
xchg
adc
sub
leave
cmp
pop
divb
push
cli
cli
mov
and
mov
cmp
cmp
jmp
push
jo
jns
mov
lret
outsl
repz
data16
push
bound
cmc
or
pop
insl
mov
or
daa
lods
push
cltd
rclb
in
jo
add
outsl
iret
or
fwait
inc
out
mov
js
or
imul
das
addr16
insb
and
add
into
jecxz
jmp
dec
cld
mov
jb
jmp
repz
xchg
sbb
cmpsb
roll
xchg
jno
inc
push
and
adc
movl
mov
ss
pop
and
ret
xor
push
out
jo
test
fdivl
xlat
jmp
mov
out
add
ja
mov
aad
loop
mov
add
adc
jle
pop
repz
push
inc
xorl
or
xchg
jno
pop
xor
leave
and
js
sbb
dec
icebp
fstpl
cltd
cmc
arpl
push
mov
mov
ss
sbb
inc
fildll
sbb
dec
sbb
inc
pop
into
pop
cmp
int
je
dec
shll
add
pop
in
fs
addl
sbb
daa
mov
out
inc
pop
sub
outsl
ja
into
lods
cmpsb
xchg
xor
pop
push
notb
sub
mov
pop
xor
icebp
std
movsl
or
push
mov
loopne
es
adc
in
and
loop
push
sub
scas
jo
push
inc
insl
nop
movntq
out
int
cmp
xchg
add
jl
das
push
test
imul
in
movsl
in
psubw
stos
cwtl
mov
ljmp
dec
dec
pop
mov
sub
xor
mov
sub
mov
mov
pop
push
stc
cmpsl
cmpsl
pop
dec
cmc
xchg
cmpsl
imul
cmpsl
mov
dec
lahf
icebp
xor
js
gs
push
ret
xlat
inc
ret
push
in
std
addr16
aam
sbb
adc
adc
jl
sbb
roll
mov
decb
jle
jae
fisubs
push
fidivrl
pop
out
jmp
or
jmp
xor
ficomps
int
in
sub
sbb
movsb
or
dec
adcb
adc
xchg
and
adc
jecxz
cmp
sub
lods
rorl
cmp
ljmp
push
cmp
push
push
mov
push
popf
shr
test
push
shlb
xor
scas
pop
push
out
adc
dec
pop
fstpl
hlt
jp
es
xchg
jl
pop
incb
sub
movsb
pop
mov
divb
test
bound
xchg
sbb
xchg
push
outsb
shll
imul
int
mov
or
imul
fidivrs
mov
add
dec
push
das
adc
or
imul
push
lds
jge
pop
pushf
in
dec
lahf
movsl
push
pop
incb
dec
out
cmc
bound
mov
mov
jg
mov
xlat
sbb
movsb
xor
lret
fdivrl
xor
pop
jge
bound
push
sub
xchg
ss
sbb
cmp
in
xor
cmpsb
dec
push
icebp
pop
add
sub
push
lea
out
mov
inc
stos
stos
mov
into
mov
xchg
add
sub
dec
adc
lret
fstpt
mov
pop
in
outsl
xor
mov
test
cwtl
inc
inc
popf
xchg
mov
xlat
cld
mov
xor
xchg
sub
mov
ret
cmp
sbb
je
popf
cmc
sub
adc
into
icebp
test
loopne
cmpsb
in
out
sub
push
xlat
int
xchg
cmp
or
cmp
ret
add
lahf
imul
inc
aas
ficoms
and
xchg
add
xchg
xor
sub
into
iret
cli
fiaddl
jp
dec
sbb
popa
jge
mov
or
pop
pop
pusha
out
push
xchg
ss
add
mov
push
scas
jp
pop
pop
pushf
mov
xor
xor
inc
add
sbb
pop
cmp
fwait
dec
xor
outsb
jns
push
push
test
imul
sbb
fisttpll
mov
fidivl
aam
gs
fcompl
int3
shll
lods
sysenter
jge
sahf
outsl
data16
aam
test
push
mov
mov
daa
mov
les
adc
jnp
mov
fcoml
cwtl
xchg
mov
sub
mov
pushf
cwtl
dec
mov
call
mov
jb
mov
fmuls
and
fnclex
ljmp
inc
ret
insl
shrb
mov
mov
test
jo
fmull
test
lock
mov
or
cmp
mov
lods
rcrl
pop
les
cmp
jno
push
dec
lret
mov
test
nop
fstl
inc
ret
inc
lcall
sub
pop
add
das
cltd
leave
andl
nop
mov
cmp
in
jmp
mov
aas
into
out
mov
lret
push
mov
mov
out
out
mov
mov
movsl
add
stos
ja
xchg
hlt
inc
jae
bound
sub
pop
dec
lret
add
std
mov
pop
cmp
sbb
outsl
add
ret
push
jp
movsb
stc
test
jnp
movsb
dec
nop
andb
int3
lahf
outsl
inc
mov
and
lahf
ss
jae
mov
xor
jp
sbb
pop
pop
push
mov
ljmp
lret
loope
sub
cmp
xchg
push
cli
shrl
mov
add
pop
adc
adc
cli
inc
inc
jmp
movl
movsl
repz
jnp
int3
notb
mov
mov
aaa
xor
ja
dec
lcall
add
push
and
pshufw
stos
cmc
test
sbb
in
lods
jmp
jnp
test
pushf
pop
adcb
lds
ret
xchg
fld
les
cmp
push
cmp
push
fists
roll
icebp
rcl
mov
lcall
push
arpl
mov
push
stc
sbb
push
movsl
imul
pop
pop
xchg
arpl
cmp
push
xchg
int
and
lahf
test
dec
imul
aas
sti
popa
dec
push
mov
es
mov
loop
pop
pop
xor
fxch
punpckhwd
mov
mov
cld
dec
pop
int
and
mov
mov
or
xchg
in
xchg
xlat
repz
and
sbb
or
xchg
sbb
ljmp
jl
js
mov
in
imul
subl
fdivr
popa
jns
scas
xor
sarl
pushf
cmp
mov
jp
leave
mov
insb
pusha
mov
pushf
arpl
cmp
push
xchg
xchg
imul
xlat
ds
les
popa
inc
int3
dec
pop
dec
inc
ss
add
sbb
add
out
mov
sub
cmc
cmpsl
ret
mov
sbb
mov
scas
test
push
fsub
pop
sub
repnz
insl
xchg
addr16
mov
pop
pop
push
fs
jecxz
push
add
xchg
cmp
ficompl
out
and
mov
jg
lea
sub
addr16
lahf
mov
pop
push
jno
test
jl
cmp
pop
jl
xchg
jge
jmp
push
xchg
hlt
je
mov
sub
or
cmp
mov
into
inc
cmp
fiadds
lds
hlt
sbb
mov
cmpsb
mov
mov
stc
push
fsubrl
fnstcw
jle
sub
mov
push
js
jb
cmp
mov
test
push
in
and
pop
in
sub
jp
sbb
push
fcmovu
or
jbe
xor
cmp
fnsave
loopne
push
scas
add
shrl
or
adcl
adc
lods
cmp
inc
movl
dec
in
jbe
fildl
sub
mov
mov
pop
jle,pn
cmp
push
scas
xchg
fwait
pop
inc
xchg
cltd
ficompl
fbstp
leave
sbb
popa
add
pop
and
mov
push
ficoml
push
pop
je
dec
insb
mov
push
mov
mov
data16
ss
sbb
sarl
cmpsb
pop
pop
xor
mov
cs
and
popa
xchg
sub
fcos
xchg
push
inc
or
movsl
pushf
cmp
pusha
pop
xor
inc
xor
lret
jae
sub
leave
mov
aas
data16
or
cmp
shlb
aaa
sahf
bswap
aas
mov
sub
jb
movsl
mov
xchg
int
fistpl
and
loope
lock
jns
cmpsl
outsb
jecxz
cld
in
xchg
jnp
add
dec
or
jns
jo
pop
clc
into
call
test
sbb
call
orl
outsb
popf
mov
stos
xor
push
outsb
dec
js
xchg
cmp
or
dec
or
or
mov
cmp
push
cmp
in
xchg
mov
sbb
icebp
sbb
sub
cmp
add
lret
in
mov
push
fdivrl
push
call
mov
jo
or
push
cmp
xor
in
jo
popl
cmp
enter
mov
aas
shrl
mov
fstpl
cmp
mov
xchg
pop
dec
and
inc
sahf
sbb
mov
push
mov
jmp
nop
enter
mov
sub
mov
xchg
das
mov
add
xor
or
setno
jl
jne
mov
scas
test
pop
shll
mov
stos
or
mov
movsl
mov
xchg
lods
test
mov
jecxz
lret
dec
orb
mov
pop
cmp
add
mov
add
fimull
icebp
adc
push
repnz
into
push
xchg
fwait
inc
std
or
in
jge
in
cmp
lcall
jb
imul
cwtl
lret
dec
sub
cmc
push
push
add
sub
or
lret
jne
and
pusha
shll
in
sub
in
push
jle
adc
je
xor
push
aam
test
loopne
pusha
xchg
mov
adc
daa
mov
jle
push
insl
mov
cmc
aas
imul
notb
cwtl
sub
scas
test
mov
xor
ss
gs
jno
adc
out
or
lea
lahf
xor
pop
jbe
rol
push
adc
lret
arpl
imulb
scas
inc
scas
cmp
mov
lods
add
das
sub
enter
mov
mov
cmpsl
sbb
lods
jb
nop
stc
rcll
mov
in
or
lahf
jnp
gs
push
std
repnz
dec
in
pop
pop
fisubl
cs
mov
leave
mov
rcrb
dec
mov
or
pushf
iret
xchg
add
ja
pop
sahf
inc
pop
pop
pop
loope
inc
mov
hlt
mov
add
inc
jno
inc
mov
int
mov
mov
jne
sbb
sub
pop
lcall
inc
cli
and
and
inc
cmp
xchg
test
or
or
mov
sub
mov
mov
iret
add
sti
push
inc
xor
xchg
aad
out
incb
sub
and
insl
push
xor
dec
orb
pop
roll
imul
cmc
ret
jns
loop
xor
daa
bound
mov
insb
cmp
cmpb
pop
lcall
xor
je
or
mov
jge
inc
dec
push
add
imul
decl
mov
outsb
rcrb
lahf
imul
xchg
push
push
mov
fidivl
std
in
ljmp
popf
ret
fsubs
fnstsw
sbb
cmp
shll
cmp
addb
cmpsl
fldl
mov
jmp
cmp
ljmp
inc
and
cmp
popa
insb
fnstcw
and
sarl
lods
cmp
xchg
push
and
sti
cs
ret
pop
xlat
or
lds
addb
icebp
ljmp
fistpl
mov
jmp
jno
cmp
das
mov
loope
data16
xchg
fcomip
push
mov
fildll
daa
test
bsr
push
fcoml
rcl
jmp
push
aaa
cmp
xor
and
mov
cmp
pop
push
xchg
or
leave
dec
xor
xor
dec
inc
test
ljmp
pop
rcl
add
adc
pop
xor
repnz
mov
cltd
adc
push
cs
cmp
inc
sti
push
stc
cli
xor
in
adc
mov
nop
popa
scas
fldl
ret
mov
cmpsl
das
push
mov
pusha
fbstp
icebp
in
adc
inc
scas
xor
repz
xchg
cmpsl
out
mov
push
loope
sub
sub
mov
sub
mov
shl
repz
aas
arpl
repz
nop
pop
mov
out
incl
cmpsb
xor
jg
inc
or
adc
into
push
xchg
xchg
call
mov
mov
and
jg
push
out
pop
jecxz
idivl
or
sub
sub
stos
cli
popa
sub
loop
jno
lock
add
ret
ja
dec
sub
push
add
push
mov
mov
mov
inc
fisttps
lahf
sbb
mov
mov
dec
jbe
mov
sbb
pop
jg
dec
mov
addr16
dec
push
int
inc
jp
pop
pop
lret
sbb
cmp
aam
cmp
fstps
mov
ja
cmp
lods
sub
es
insb
jle
lods
outsb
inc
push
mov
test
inc
lock
js
mov
cmp
and
jmp
jle
ja
sbb
loopne
cmp
icebp
mov
jmp
repnz
or
leave
insl
mov
test
repnz
rorb
mov
rcrb
sahf
pop
push
test
dec
jmp
or
add
sti
lret
pop
sbb
rcll
fnstsw
add
cmp
and
data16
sub
fildll
mov
mov
in
push
lods
mov
loop
sahf
xor
stos
jns
cld
stos
xchg
mov
xchg
enter
mov
rol
mov
mov
outsl
mov
or
push
pop
nop
xchg
aad
bound
or
jle
pop
fs
push
cmp
push
or
jecxz
inc
lods
es
mov
adc
sub
mov
fisubl
adc
add
push
mov
pop
mov
push
movsl
cwtl
jl
push
lods
sub
lcall
cmpsl
jb
pop
testl
es
aas
sahf
lods
jl
inc
fldt
cmp
stos
jo
cmpsb
in
mov
jle
movsl
enter
ljmp
in
js
insb
xor
mov
pop
sbb
daa
imulb
mov
mov
js
and
cmpsb
dec
add
xchg
int3
pop
cwtl
rcrl
mov
push
lret
or
jmp
popf
enter
cmc
ficompl
dec
mov
xchg
pop
gs
imul
loope
scas
test
dec
pop
rcr
mov
push
lret
mov
ds
inc
ds
aas
or
adc
xor
loopne
cmp
imul
sub
addb
cwtl
adc
or
jp
std
jge
or
dec
fwait
loopne
movsb
clc
aam
jmp
hlt
inc
push
out
adc
bound
out
mov
aad
mov
and
cmpsl
ja
cltd
xor
dec
rcr
ficoms
adc
js
pop
mov
repnz
xor
dec
les
push
test
mov
cmp
fucom
inc
mov
sub
shlb
fs
mov
inc
mov
xchg
test
loope
stos
out
adc
outsb
inc
jnp
pop
dec
dec
pop
add
dec
and
test
jb
and
ret
ficoms
movsb
lret
mov
mov
pop
or
sbb
subb
ljmp
sub
lods
xor
push
sarb
or
cs
sub
xchg
out
aas
call
lcall
fmuls
movsb
dec
push
push
daa
in
mov
or
pop
mov
pop
xchg
cmp
jecxz
insl
sti
idiv
into
add
sub
cmc
dec
es
push
ret
arpl
cli
test
daa
xchg
jno
insb
cmp
sbb
je
inc
fs
call
in
jne
cmp
adc
sub
or
aas
fsubrs
sub
push
stos
jbe
push
xchg
mov
sbb
cmp
xchg
out
xor
dec
lahf
pop
jmp
leave
add
fbld
in
jmp
sub
xlat
adc
push
icebp
scas
fisubl
push
mov
out
popa
sbb
and
dec
pop
sar
scas
fcoms
aaa
dec
scas
out
mov
adc
pop
loopne
and
rcrl
loope
mov
fsubrl
fstpt
notb
dec
pop
insb
sbb
in
lahf
jo
test
aam
pcmpgtb
push
pop
in
push
jmp
or
jne
lcall
adc
jmpw
test
iret
sbb
les
pushf
mov
mov
dec
push
fisubs
icebp
push
mov
pop
imull
js
aas
or
mov
daa
push
cli
insl
mov
fisttps
sbb
jmp
mov
push
mov
sub
jmp
push
adc
lods
je
inc
jl
outsl
sub
pop
dec
mov
add
lret
test
mov
or
push
mov
cltd
aaa
out
lret
scas
bound
in
mov
and
hlt
andl
xchg
cwtl
inc
movsl
sbb
icebp
gs
je
xor
lods
loope
sub
push
pop
cltd
dec
lock
inc
jg
inc
fbstp
pop
repz
and
insl
sub
and
xchg
and
jb
int3
cwtl
hlt
je
push
test
loopne
cld
icebp
add
push
sbb
lret
adc
aam
add
xor
pop
loopne
dec
push
mov
in
stos
sbb
rcll
out
cmp
enter
mov
mov
mov
test
scas
jle
or
sbb
out
cwtl
mov
jae
sbb
mov
popa
inc
stc
test
dec
inc
scas
hlt
loopne
out
cmpsl
mov
mov
inc
inc
dec
inc
daa
cmp
lret
inc
sub
test
arpl
sbb
dec
adcb
push
jmp
adc
lock
popa
hlt
cmp
adc
pop
loop
mov
jmp
pushf
in
je
flds
cwtl
enter
shlb
push
push
push
jne
add
lret
mov
jb
cmc
andl
repz
sbb
xchg
pop
test
sbb
adc
lcall
jns
fisttpl
and
adc
mov
sub
mov
das
sub
lcall
or
divl
dec
aas
aad
in
rolb
test
mov
mov
adc
aam
mov
ljmp
jge
mov
scas
pop
rol
test
add
les
xchg
mov
jae
ds
lahf
mov
inc
out
adc
mov
sub
dec
mov
aad
cmpsl
xor
add
test
fmul
mov
add
mov
xor
stc
sub
mov
cmp
sub
sti
cmp
pextrw
mov
mov
push
aaa
ret
and
jl
lret
mov
push
push
int3
leave
cmp
add
xor
jne
mov
in
sbb
loope
ljmp
push
aaa
mov
repnz
pop
lods
addr16
movsl
movsl
sahf
inc
mov
add
mov
les
mov
adc
movsb
inc
pop
push
fidivs
imul
cmpsb
mov
mov
adc
lock
fsubrs
xorb
pop
scas
ljmp
iret
imul
loopne
or
inc
loope
push
nop
push
js
and
mov
jb
jnp
cmp
cmp
sub
and
adc
out
clc
sarl
fcomi
ljmp
call
cmp
enter
ja
out
cmp
and
shl
pop
inc
mov
adc
pop
dec
dec
xchg
mov
dec
insl
sti
jl
pop
sahf
sbb
loopne
scas
cmp
xchg
adc
out
insb
aad
xlat
push
inc
inc
test
int3
movl
inc
loope
jne
mov
into
push
mov
and
fidivs
push
ret
icebp
repz
cli
and
sbb
arpl
mov
idiv
lcall
clc
push
add
mov
inc
test
cmpsb
xchg
int
mov
repnz
loope
push
mov
fs
add
pop
mov
mov
sti
jbe
pop
mov
add
ljmp
mov
outsb
jo
cmp
mov
xlat
jecxz
mov
lods
stc
xchg
sbb
inc
imul
mov
xchg
jl
movsb
popf
test
test
loope
and
add
enter
or
lock
cmc
repz
hlt
add
shll
ret
jae
mov
scas
mov
fwait
xchg
pop
mov
out
inc
or
cmpb
ljmp
movmskps
pushf
xor
and
ss
test
mov
dec
cli
adc
xor
lods
inc
mov
or
add
lret
or
call
jb
sti
cltd
sbb
aam
jle
dec
mov
cld
sbb
fsubl
lods
clc
les
inc
add
push
and
dec
mov
scas
dec
cli
imul
dec
push
push
stos
adc
sar
sub
pop
push
outsb
scas
mov
sub
daa
pushf
push
mov
mov
into
lahf
mov
push
sti
mov
jle
int
stos
xor
iret
adc
xor
sbbb
sub
mov
xchg
call
pop
push
pusha
push
mov
xchg
mulb
sub
repnz
popa
lret
inc
inc
jl
gs
stos
test
dec
push
and
rorb
aaa
ljmp
test
inc
or
mov
mov
jl
into
hlt
xchg
pop
ljmp
mov
pop
mov
ret
es
mov
das
and
push
outsb
je
stos
lods
cmp
ret
push
repz
es
dec
push
cmpl
imul
mov
inc
mov
pop
enter
mov
mov
movsl
cmp
test
fstpt
sub
add
dec
push
mov
repz
sub
dec
cmp
testl
in
insb
jg
jne
sarl
adc
push
outsb
fadd
call
sbb
dec
frstor
jbe
popf
inc
into
mov
out
in
adc
and
jb
mov
in
into
int3
test
mov
sub
mov
shlb
xchg
mov
fstpl
xlat
inc
jno
out
es
loope
jae
sub
addl
subb
dec
ds
mov
inc
cs
loope
xorl
pop
xchg
push
outsb
dec
sbb
sbb
mov
cmp
das
mov
orl
lret
xchg
sar
sub
or
fcmovu
push
out
out
inc
ret
dec
mov
dec
popf
pusha
cmp
ljmp
repz
iret
dec
jge
arpl
das
add
cmp
std
enter
sahf
dec
in
repz
outsb
and
inc
adc
test
adc
sahf
inc
icebp
idiv
pop
jno
mov
mov
mov
xchg
ljmp
dec
and
adc
subl
xchg
fisttpl
loopne
imul
push
lcall
call
push
std
push
jle,pt
push
pop
js
addr16
ret
subb
sarl
lret
mov
and
xor
pop
xchg
lcall
clc
sar
ret
mov
push
popf
push
and
xchg
push
sbb
in
lds
mov
push
rorb
adc
cmp
movsl
cs
jmp
repnz
jle
or
mov
in
or
jno
insb
fcoml
dec
pop
xchg
andb
adc
cmp
fnsave
inc
dec
push
lahf
mov
mov
or
out
scas
cmpsb
mov
cmp
out
int3
sbb
push
das
in
icebp
xchg
insb
sub
into
adc
cmp
js
sbb
flds
pop
cmp
jle
mov
mov
adc
enter
es
and
data16
mov
lods
or
insb
cltd
cs
inc
je
pusha
dec
xchg
mov
and
pushl
xchg
mov
lahf
dec
out
cltd
push
mov
mov
repz
or
mov
xor
sbb
pop
popf
push
das
xchg
test
js
inc
inc
sub
jns
ss
addr16
dec
inc
ffreep
rcrb
loop
mov
cmp
sbb
leave
jb
enter
adc
mov
out
cmp
repnz
rcl
push
in
or
cmpsb
add
pusha
call
mov
fwait
and
and
test
movsl
leave
dec
mov
repnz
movsb
jns
mov
sbb
std
or
push
repz
arpl
into
movsl
xor
shl
shrl
mov
fistpll
jno
jp
push
mov
jae
and
clc
mov
cmp
adc
push
inc
sub
cld
subb
dec
jmp
pop
push
xor
or
les
push
std
test
pusha
xor
or
jno
mov
test
mov
sbb
pop
imul
stos
pushf
test
shl
mov
mov
jnp
mov
inc
sub
jmp
xor
mov
rolb
mov
mov
out
cmp
or
adc
mov
jbe
mov
mov
imul
rcrl
imul
xor
mov
stos
or
movsl
or
cli
psrlw
sub
ljmp
xchg
cmp
dec
or
test
es
sbb
test
rcrl
or
cld
push
mov
imul
or
xor
mov
jo
fpatan
lahf
and
xchg
push
in
loopne
in
movsl
sbb
nop
or
in
and
insl
daa
cs
fbstp
jge
stos
lret
dec
lret
jle
jg
in
jl
and
jl
cmpsb
xor
sub
push
and
cmp
fnsave
roll
push
faddl
cltd
addl
jle
push
pop
add
into
sbb
push
dec
pop
adc
loop
lea
ss
andl
cmp
popf
sbb
dec
push
push
fsubrp
aam
add
dec
pop
mov
xor
cwtl
cltd
psllw
cmpsb
punpckhwd
inc
lods
push
jge
repnz
jmp
or
cmp
mov
jmp
hlt
mov
cwtl
mov
test
leave
jmp
lock
inc
pop
add
ss
cltd
test
mov
hlt
push
daa
seto
mov
pop
ja
dec
mov
mov
xchg
mov
fdivr
psubb
jo
clc
lea
jecxz
sub
xchg
mov
gs
xor
mov
jge
mov
inc
cld
enter
scas
imul
lods
mov
mov
mov
cmpsb
dec
pop
fdiv
addr16
out
mov
dec
add
inc
inc
insl
sbb
lea
fiaddl
inc
subl
push
mov
aad
addl
dec
ss
cld
jmp
inc
lret
daa
push
faddl
lock
negb
cld
push
std
call
mov
loopne
mov
sahf
int
xlat
sbb
xchg
lahf
int
fsubr
push
or
pop
xchg
adc
adc
test
xor
iret
add
int
leave
pusha
pop
repnz
loopne
cmpl
add
cwtl
jne
fs
js
fistps
fistpll
stc
dec
into
shrb
sbb
push
cmpsb
subl
cwtl
in
ret
dec
dec
xlat
xchg
xchg
icebp
mov
sbb
in
xchg
nop
leave
repz
adc
or
add
dec
popa
adc
aad
fstps
or
pop
stos
scas
subb
pop
cwtl
movsl
and
xlat
xchg
jmp
ds
push
cwtl
cmp
lret
ret
test
mov
or
adc
in
jne
popa
or
mov
imul
negb
sbb
repz
outsl
jle
sbb
push
mov
in
jmp
gs
or
int
es
push
mov
sub
adc
cmpsl
addr16
scas
out
dec
outsl
lcall
mov
in
mov
jl
push
icebp
outsb
jnp
pop
sbb
imul
xchg
push
das
cmpl
push
pop
in
and
lock
dec
jecxz
xchg
inc
cld
jbe
addr16
cs
mov
fisttps
jmp
hlt
jno
fildll
cld
cli
pop
push
sbb
or
daa
rclb
and
int3
loop
les
ss
fwait
loope
sub
mov
incb
hlt
sbb
inc
pop
int
mov
ja
sarb
inc
sbb
arpl
and
push
mov
loope
push
or
or
xor
sarb
sti
xchg
stos
gs
insl
loop
mov
imul
insl
mov
and
pop
xchg
pop
sbb
push
cmpl
sbb
lahf
push
pop
insb
popf
add
sub
sbb
inc
dec
cltd
imul
mov
cmp
pusha
push
mov
hlt
and
test
cld
mov
arpl
dec
sub
jae
pop
sub
test
fsubrl
fmuls
mov
repz
gs
aas
sti
pop
btc
bnd
xor
in
pushf
insb
std
sarl
fdivs
loope
mov
rcrb
push
mov
aad
outsl
cmpb
jno
xor
fsts
mov
enter
inc
xchg
inc
adc
testl
lods
and
adc
btc
mov
fwait
jnp
sbb
mov
jbe
push
out
xchg
in
mov
jg
pop
jl
cwtl
pushf
mov
std
js
mov
aas
cmp
cli
daa
pusha
scas
sub
daa
insl
inc
outsb
dec
inc
scas
enter
cmp
and
adcl
popa
outsb
dec
sub
lods
push
jb
add
sbb
sahf
dec
inc
pop
call
push
sub
fisubl
mov
mov
stos
rolb
in
ds
pop
pop
mov
jns
push
lods
repnz
inc
enter
push
inc
sub
jge
pop
lret
xlat
lods
jmp
inc
mov
leave
fdivr
mov
xchg
loopne
xchg
mov
mov
add
sahf
jbe
je
pop
mulb
jmp
mov
imul
lock
fistl
fdivrs
push
inc
ret
sub
sub
ficoms
lret
dec
inc
lret
cmp
mov
ret
sub
mov
xor
sbb
add
jne
fcompl
call
jp
push
mov
and
clc
adc
sbb
adc
out
mov
das
xchg
out
aas
xchg
push
gs
dec
dec
xor
sub
je
jge
fistl
inc
sub
dec
pop
std
rcrb
cwtl
arpl
les
mov
pop
pop
add
jns
mov
dec
lods
cmc
aas
clc
outsl
repnz
push
divl
cmp
xchg
clc
jo
and
xchg
jecxz
cmp
mov
iret
mov
ds
sbb
mov
lock
inc
int
icebp
repz
aam
adcb
xor
jge
dec
iret
cmp
cli
cmp
sub
out
push
stos
xchg
pop
jg
push
cmp
out
aam
iret
jle
xchg
cmp
hlt
cmp
fistpll
bnd
fiadds
cmp
in
out
fistpl
jno
cwtl
push
xchg
xchg
mov
sarb
cltd
jbe
pushf
jge
popa
mov
inc
gs
clc
lods
fadds
es
cmpsw
fistpll
les
and
jns
mov
and
fiaddl
mov
jl
xor
pop
sub
jl
mov
jae
sbb
adc
test
cmp
lds
jl
pop
push
xlat
push
and
pop
fnstsw
in
push
push
add
insl
out
enter
sbb
ds
pop
sbb
out
cmp
mov
rorl
ja
mov
rcrl
sub
adc
mov
andl
fdivrs
mov
pop
or
add
enter
loopne
out
mov
push
subl
mov
xchg
das
aam
in
push
fimuls
push
jne
test
lods
add
xchg
out
push
das
cli
xor
imul
out
add
adc
in
jecxz
nop
orb
pop
xchg
dec
lret
add
pop
leave
icebp
xchg
cld
xchg
adc
push
lcall
jmp
loopne
or
jbe
scas
xor
add
mov
mov
sbb
xlat
add
lock
dec
clc
pop
jb
stos
test
dec
xchg
mov
xor
lods
mov
jbe
xor
sti
aaa
mov
nop
inc
mov
mov
or
mov
xor
cld
insl
mov
push
outsl
fisttps
es
aad
dec
jle
or
mov
mov
or
in
rcrl
jo
hlt
push
ja
fs
test
fidivl
pop
in
cmp
stos
mov
xor
xadd
ret
xchg
cmp
int3
ja
stos
push
andl
mov
enter
xor
lcall
sbb
jno
or
aas
cmp
jge
sub
cmp
xor
test
sbb
push
mov
jl
sbb
adc
and
xor
sbb
cmp
and
xchg
inc
push
shlb
xor
mov
lret
add
add
jg
xchg
cmpsl
in
sbb
jae
sarb
pop
imul
jl
pop
or
or
push
jecxz
daa
testb
xor
loope
dec
sbb
gs
into
mov
pushf
pop
push
xor
push
adc
inc
in
ret
mov
cld
sbb
and
mov
cmp
fwait
or
and
int
pop
outsl
test
mov
jb
inc
fidivrs
fcmovnu
cli
dec
cmc
sub
sub
bound
repnz
aaa
mov
pop
outsb
pop
adc
inc
sub
jp
sti
jne
lret
lea
inc
jno
jle
mull
insl
lds
hlt
loopne
insl
hlt
pop
jb
fcompl
push
and
jmp
mov
ljmp
test
je
mov
stc
cmp
mov
lret
dec
xchg
std
clc
jne
int3
push
cmp
xor
mov
jmp
jmp
mov
jo
outsb
cwtl
popf
imul
mov
push
jo
loope
insb
stos
jb
mov
xchg
fstpt
or
fadds
subl
xor
lea
jae
outsl
mov
fwait
mov
stos
fucomip
pop
xchg
fstpl
xor
repnz
fsubs
pop
je
pop
or
sbb
orb
enter
and
xor
inc
push
lcall
mov
inc
aas
mov
mov
mov
mov
out
mov
sahf
adc
and
mov
cmpsl
mov
cs
dec
dec
popf
test
idivb
pop
addr16
test
xchg
sub
jnp
fcoml
and
fidivs
mov
popa
shlb
xchg
jg
mov
add
mov
and
leave
roll
xor
roll
add
add
push
cli
repnz
or
mov
lods
mov
cmp
fstpt
and
dec
push
std
and
push
jns
je
sub
cmc
fwait
leave
in
jle
int3
lods
incl
push
es
dec
xlat
push
inc
stos
jnp
cld
mov
cmp
aam
mov
cmp
shlb
xchg
sbb
mov
adc
jecxz
sub
into
mov
aaa
xchg
dec
into
sub
lahf
adc
fadd
sub
insl
lret
mov
idivb
subl
xor
in
inc
adc
push
sub
adc
stos
jle
rcrb
dec
add
pop
cld
data16
lea
or
inc
inc
fisttpl
inc
xchg
aam
insb
cli
std
push
xchg
ljmp
leave
push
popa
pusha
clc
icebp
or
adc
cld
stos
mov
movsl
xlat
test
mov
mov
ret
cmp
inc
repz
out
movsl
sub
out
push
clc
push
lods
mov
lods
orl
xor
fdiv
in
jbe
nop
push
mov
sbb
dec
xchg
repnz
mov
dec
add
ret
mov
xchg
or
movsb
inc
push
sbb
jecxz
mov
and
jns
lahf
sbb
std
cmpsl
dec
call
fidivs
hlt
sahf
call
sub
fnsave
jnp
sahf
add
jge
stc
jmp
aas
sub
xchg
roll
sbb
bound
fisubrl
push
pop
fs
ds
call
cmp
or
mov
test
push
sti
xchg
mov
js
insb
fs
adcl
adc
xchg
aam
mov
sbb
aaa
and
xlat
js
push
dec
cmp
mov
int3
mov
addl
mov
cli
les
daa
jno
shr
mov
test
lds
or
rcl
mov
and
and
pop
xchg
mov
xor
insb
repnz
mov
sub
notb
cmp
dec
cmpsb
out
push
xchg
or
into
out
nop
mov
sub
inc
shrb
cmp
xor
addr16
adc
sub
cmp
clc
test
mov
gs
xchg
xor
add
lods
lods
pop
dec
or
inc
mov
out
xchg
loope
in
jmp
dec
decb
ret
or
cmpb
adc
int
pop
pushf
push
rcrl
ret
inc
popa
and
nop
xor
lods
cmpb
aaa
sub
dec
jg
insb
sbb
lea
push
scas
aaa
cltd
mov
inc
fwait
xor
movsb
jnp
xor
psadbw
xor
inc
mov
adc
pop
das
out
dec
in
es
push
rolb
faddl
lds
aad
lcall
and
nop
insb
fucomip
sbb
das
cs
xchg
lret
lods
push
jno
shlb
push
mov
adc
jl
icebp
sahf
xor
xchg
push
cmp
mov
iret
mov
cld
or
clc
pop
dec
call
jns
in
pop
mov
sub
or
add
jbe
call
or
sti
mov
xor
fbld
rcrl
iret
fsts
test
addr16
mov
das
into
mov
xor
daa
mov
cmpsb
dec
add
xchg
jnp
cltd
jl
jne
mov
cmp
push
xchg
into
xchg
popf
insb
daa
es
dec
or
aam
mov
enter
leave
mov
movsb
xchg
outsl
shr
sub
clc
in
and
mov
or
sub
imul
sub
lea
enter
jae
aas
mov
add
ret
repz
dec
sbb
idivl
dec
iret
fwait
add
fldt
dec
or
call
iret
push
addl
adc
push
or
faddl
fs
push
pop
pop
mov
shr
pop
or
jmp
sub
sysexit
inc
movsl
out
outsb
mov
stc
pop
sub
add
sbbl
mov
dec
orb
dec
add
les
stos
mov
and
sti
subl
and
mov
mov
xor
push
mov
xor
jl
xchg
sub
insb
sahf
mov
loop
push
or
scas
and
je
scas
sub
inc
or
xor
pop
dec
add
sbb
aad
mov
insb
in
fs
pop
dec
pop
jecxz
into
cmp
push
loopne
sbb
cwtl
mov
daa
shll
loopne
pop
in
in
push
jge
jle
sub
bound
cmp
dec
push
push
test
out
cli
jns
and
xchg
adc
ss
mov
lahf
cmp
jbe
mov
pushf
aad
mov
loop
mov
xchg
xchg
mov
inc
dec
icebp
xor
cli
pop
sarl
sub
clc
mov
int3
xrelease
ret
mov
push
andb
cld
shrl
fldenv
movups
dec
add
adc
dec
sub
in
aam
shlb
mov
outsl
sbb
movsl
scas
in
push
xor
sbb
ficoml
jns
dec
pop
std
lret
dec
add
mov
inc
movsl
mov
shld
repz
test
jle
add
dec
xlat
in
adc
mov
sbb
mov
pop
push
or
out
inc
add
addr16
fwait
test
mov
dec
jno
fstpt
ja
sbbb
sbb
sub
add
sub
aas
adc
mov
mov
jge
rorb
data16
call
and
jne
jnp
and
inc
mov
xor
popf
in
sbb
sub
push
fcmovnb
push
pop
shlb
xor
cmpsl
sbb
mov
jae
or
jb
insl
out
sbb
cld
sub
cmc
jmp
mov
loope
je
mov
ja
rorl
pop
sbb
fisubrs
push
push
fidivl
pop
adc
push
outsl
fwait
stos
pop
adc
out
sbb
mov
jno
call
jle
xchg
xor
aam
outsl
lret
xchg
cltd
sahf
movnti
sbb
mov
push
cmp
fnsave
jo
cmp
mov
pop
dec
pushf
sbb
adc
sub
jecxz
mov
dec
jo
mov
pushf
movsb
pop
add
jp
ret
jecxz
test
insb
popf
jmp
in
cltd
fs
mov
in
sbb
aaa
push
sti
loope
outsb
pop
dec
pop
jno
mov
or
xchg
xor
insb
and
je
jg
movsb
lock
stos
test
pop
setle
jno
xchg
push
add
sbb
movzbl
idivb
pushf
nop
iret
pop
xchg
lahf
sbb
pop
or
popf
lahf
fwait
cli
dec
mov
or
ds
adc
popf
orl
xor
add
xor
inc
sub
mov
mov
adc
sbb
xlat
xchg
out
leave
ret
rorb
sub
leave
pop
jbe
add
xchg
adc
stos
mov
mov
or
xchg
adc
xor
mov
jbe
arpl
js
shll
add
lret
outsb
push
and
jb
push
inc
fistl
adc
pop
sub
int3
movsl
and
jecxz
nop
push
ficomps
sub
xchg
addl
nop
fdivrl
ja
mov
adc
push
mov
ja
out
imul
and
test
push
fisubrs
inc
test
bound
jl
cs
pop
inc
pop
jnp
xchg
jns
jno
adc
cltd
into
mov
dec
hlt
daa
inc
adc
or
sti
shrb
int
into
push
jb
stos
cmp
pusha
rcr
xchg
das
jb
outsb
mov
icebp
movl
pop
insl
ds
pop
jb
enter
out
xor
test
rcl
incb
cmpsl
rol
or
in
and
movsl
jbe
loopne
jae
fistpll
xor
fsub
mov
mov
test
xchg
aam
push
inc
pop
sahf
sub
scas
andl
ffreep
xor
mov
shlb
mov
out
cltd
jae
test
aaa
inc
sbb
inc
insb
fs
sahf
outsb
pop
sbb
push
cmpsl
cmpsl
loopne
ror
sbb
cmp
aam
icebp
xchg
pop
dec
mov
xor
imul
fcmove
insl
push
sub
add
lahf
jp
or
aas
mov
cli
cmpsb
sub
xor
seto
push
mov
adc
pop
adc
js
xchg
xor
inc
fcmovbe
sbb
inc
adc
pop
cltd
aas
daa
push
sahf
push
push
cmpsb
mov
push
dec
push
inc
sbb
cwtl
js
mov
orb
jg
dec
and
in
sbb
sub
cmp
nop
xchg
jo
sbb
addb
add
pop
jae
frstor
xlat
or
lahf
les
xorb
jno
mov
fisubs
movsl
ljmp
pushf
insb
push
cmp
pop
mov
mov
lcall
movsl
cmp
lret
decl
mov
lret
daa
xlat
stos
int3
pop
loopne
cmp
mov
add
aam
stos
xchg
mov
in
loop
pop
dec
jnp
adc
mov
out
insl
or
mov
div
or
test
loopne
inc
and
cmpsb
dec
inc
popf
cmc
push
repz
aam
push
jl
outsl
lcall
sbb
inc
mov
rorb
or
and
dec
adc
mov
sbb
xchg
push
test
mov
mov
movsl
jge
dec
mov
xchg
jle
jno
repnz
call
pop
mov
fsubl
fcmovnb
pop
inc
and
or
or
and
xchg
mov
cmp
add
ss
fnstsw
sbb
xor
pop
ss
cmpsb
out
fiaddl
out
mov
push
jnp
sbb
pop
xchg
insb
lcall
jmp
std
mov
pop
mov
inc
movsl
daa
adc
and
push
sub
jnp
jne
and
push
gs
pop
or
mov
add
js
adc
inc
xor
popa
xor
bound
mov
pusha
sbb
stos
jno
push
mov
aaa
sbb
cmp
pop
ds
cltd
loope
ret
xchg
sbb
sbbb
test
add
jbe
add
pop
xor
ret
call
jo
pop
je
int3
lods
jle
sbb
test
xor
xchg
jecxz
mov
bound
in
cltd
jmp
pop
mov
in
pop
jl
push
xchg
dec
clc
pop
cmpl
add
mov
out
dec
out
insb
lock
xchg
pusha
or
adc
sbb
sahf
lds
in
jmp
push
sahf
pop
shrb
outsl
int3
bound
xor
mov
xchg
xchg
dec
cltd
adc
xchg
lret
daa
mov
dec
inc
mov
mov
sbb
arpl
xchg
stc
inc
jle
test
push
sar
leave
popa
mov
dec
push
popa
lods
mov
ret
mov
mov
pop
das
pusha
sbb
inc
fisubl
sbb
pop
out
jp
add
shl
dec
jnp
pushf
mov
leave
adc
shrb
repz
push
aas
pop
inc
lcall
in
sbb
out
jle
ror
aam
push
xchg
js
push
xlat
dec
aas
dec
pop
push
jge
add
inc
rorb
std
push
mull
les
mov
loopne
pushf
or
mov
dec
shlb
jecxz
cld
jl
adc
fisttpll
loope
fisubl
and
dec
jp
scas
jo
dec
or
test
sahf
setg
stc
mov
jge
popf
pop
test
pop
in
imul
jmp
aam
and
mov
add
rolb
test
mov
dec
nop
pop
xor
addr16
pusha
pop
or
into
cmp
adc
inc
push
inc
dec
and
adc
and
xor
ss
and
mov
jb
xchg
sub
cmp
mov
jb
push
adc
mov
jle
out
adc
ljmp
fwait
xor
int3
sbbl
movsl
int3
call
adc
lahf
and
shrb
add
es
jle
or
jecxz
aam
jmp
ja
mov
pop
mov
stc
aaa
dec
cli
cli
inc
out
add
sub
cmpsb
ss
pop
inc
dec
mov
rorb
call
cli
cltd
stc
add
stos
dec
jns
mov
ret
das
cmp
xor
mov
arpl
jge
sbbl
add
inc
dec
push
mov
call
out
push
jge
and
stos
jae
fcmove
jns
hlt
out
push
add
push
cmp
in
mov
mov
fisubl
or
mov
sbb
inc
outsl
xchg
inc
into
mov
fldcw
push
xchg
mov
push
mov
shrl
popa
jmp
cwtl
aas
or
outsb
adc
pop
inc
sbb
insl
xor
cwtl
mov
mov
and
insl
das
adc
push
ds
adc
loopne
pop
adc
nop
stos
ret
push
ss
push
pop
scas
xchg
cmp
and
pop
xchg
rclb
arpl
xchg
jo
movsl
pop
xchg
xor
xchg
pop
sub
imulb
fdivr
pushaw
imul
mov
inc
xchg
xor
add
pop
fsubrs
enter
ds
xor
data16
repnz
pop
or
add
add
sub
mulb
xor
shll
test
xchg
leave
jbe
xchg
popa
mov
mov
repnz
xchg
mov
iret
std
test
js
int3
shl
clc
sub
lcall
outsb
cmpsb
dec
pop
lock
repnz
arpl
xchg
insl
lock
cmpsb
test
push
lcall
dec
push
clc
popf
mov
movsl
add
test
pushf
inc
fists
shrb
xchg
jle
lods
add
enter
xor
jge
xchg
add
arpl
dec
mulb
leave
cmp
sub
add
jns
js
iret
lods
fisubl
xorb
scas
ljmp
enter
sbb
in
orl
or
lret
dec
jge
loope
mov
loope
sub
dec
xchg
sbb
jle
mov
pop
xorl
xor
or
lret
push
mov
ror
cmp
enter
push
out
pop
mov
pop
lea
add
and
mov
or
adc
lods
sub
dec
in
faddl
xchg
loopne
hlt
inc
or
adc
dec
xor
scas
out
jbe
insb
out
fistl
xchg
push
push
mov
xchg
or
aas
sti
xor
mov
sbb
inc
lcall
mov
xchg
and
js,pn
pop
cmp
lret
gs
sub
leave
fmull
add
mov
dec
data16
hlt
inc
repz
sbb
cli
int3
push
xor
jae
sbb
aaa
add
push
jae
in
push
push
push
fstps
loop
fisubrs
loope
sti
jle
lds
call
and
cmp
sub
cmp
mov
fwait
xor
pop
pop
xor
sbb
xchg
test
aad
sub
loope
test
addl
dec
loopne
fs
daa
jno
jg
iret
out
sbb
mov
mov
movl
mov
cmp
push
enter
pushf
xlat
push
cld
xor
lret
push
test
dec
out
mov
sub
adc
lea
push
add
xchg
xorl
sub
test
shlb
push
mov
cmp
xchg
xorb
or
enter
lcall
adc
or
movsl
stc
mov
sti
or
adc
push
andb
cmp
stc
fisubrs
mov
in
inc
loopne
fbstp
push
jecxz
mov
sub
dec
add
add
addr16
sbb
dec
iret
add
pop
xor
mov
ja
fcompl
jae
sbb
in
in
sbb
and
repz
popf
sub
adc
jne,pt
movsl
and
outsb
movsl
imul
std
or
mov
adc
test
lds
sub
pop
cmp
or
nop
stos
lret
sub
ret
push
push
xchg
rclb
testb
xchg
mov
mov
pop
int3
decl
adc
loope
xchg
and
insb
andb
scas
loopne
iret
lcall
iret
in
imul
lods
dec
dec
mov
adc
ds
adc
sub
test
xchg
sahf
mov
call
cmp
bound
test
jg
movsb
inc
faddl
cli
sub
add
mov
xlat
mov
sbb
repnz
sti
sarb
push
lret
dec
testb
rclb
push
lahf
xor
popf
xlat
jg
and
fsubp
mov
jg
gs
push
inc
push
mov
neg
sbb
loope
mov
push
cwtl
mov
jb
loopne
mov
jg
adc
mov
pop
or
push
jnp
xor
adc
lods
nop
mov
add
dec
cmpsb
out
imul
pop
out
lea
sahf
loope
and
test
loope
sbb
ret
sub
icebp
bound
mov
addl
hlt
and
pop
aam
cmp
lea
xchg
mov
xor
movsb
pop
xchg
push
or
loopne
pushaw
ror
mov
jmp
pop
imul
fcmovu
js
add
rorb
sahf
xlat
sub
bound
rol
jno
inc
andl
dec
lods
adc
jb
mov
in
xchg
sub
mov
or
test
push
mov
pushf
xchg
rcl
push
rcll
pop
rcrl
and
mov
sbb
fidivrs
add
xchg
lret
pop
vpmacsdqh
dec
movsl
hlt
fwait
xchg
inc
das
cmp
leave
test
aam
sahf
mov
cmpsl
mov
mov
std
enter
push
xchg
cmp
fdivp
int
js
pop
imul
sbb
mov
xor
sbbb
sbb
push
popa
stc
jle
insb
imul
pop
mov
and
adc
mov
out
cmp
std
sar
inc
int
ds
xor
jb
lds
jo
pop
ds
pop
jae
push
cmpsb
addr16
cs
mov
mov
sub
xlat
adc
pop
mov
push
aas
fstl
adcl
jno
popa
mov
js
imul
adc
xor
sub
xor
mov
ja
pop
clc
pop
xor
pop
push
adc
scas
dec
mov
int3
sbb
jo
mov
ja
ss
push
dec
or
xor
xor
stos
outsb
pop
sbb
lods
jmp
xor
mov
push
outsb
and
jno
jo
pushf
aad
lret
sti
fcmovnbe
and
xor
sbb
and
rcrl
fwait
mov
test
lods
inc
mov
jnp
lods
sub
xor
xchg
push
jp
adcl
cmp
or
leave
leave
jae
out
aas
aaa
arpl
cld
fadds
lret
mov
fs
jmp
stos
nop
std
inc
add
cs
sbb
daa
adcl
adc
ret
addb
iret
mov
xchg
out
dec
insb
push
add
ljmp
cmpb
rorb
popf
adc
jbe
or
pop
daa
aas
jns
int3
mov
push
fiadds
cli
loop
xchg
mov
adc
test
movsl
sbb
mov
xor
outsl
outsb
pop
aas
std
mov
jp
mov
cmp
test
imul
sub
add
gs
xchg
ret
repnz
out
es
mov
enter
imul
or
mull
mov
sbb
orl
cmp
int3
inc
in
jl
lret
stos
flds
lret
cltd
setns
and
pop
mov
cwtl
out
in
sub
inc
jb
and
dec
jg
mov
stos
inc
pop
repnz
dec
mov
and
js
cmp
mov
shlb
jns
mov
xchg
test
out
inc
mov
add
cmp
adc
stc
pop
dec
jle
xchg
notrack
jp
add
pusha
popf
loope
or
popf
aam
lods
and
scas
mov
mov
push
ror
dec
ret
lret
jnp
xor
pusha
clc
and
cli
push
mov
jg
mov
sbb
ret
icebp
mov
add
shll
test
pop
mov
sub
lock
inc
xlat
jne
dec
or
rcl
sahf
jmp
addr16
shll
xor
xor
or
and
lret
jp
data16
jb
and
in
imul
xchg
mov
daa
mov
mov
mov
jbe
ficoml
sbb
adc
and
loopne
mov
cld
adc
adc
sbb
addr16
movsb
out
pop
stc
dec
scas
jmp
cmp
mov
and
aad
inc
int
mov
mov
in
pop
jge
imul
mov
fs
cmp
mov
sbb
cmp
dec
mov
ret
or
xor
es
sub
rcl
bound
in
pop
test
cltd
jp
cs
cmp
mov
std
and
xchg
jne
xor
or
pop
ret
out
in
fcomps
dec
jno
dec
mov
in
and
lods
push
jae
or
sti
adcb
in
shlb
pop
popa
cli
fmul
mov
xor
sub
jge
std
xor
jecxz
xchg
push
or
mov
jg
nop
sahf
mov
dec
lret
and
scas
cs
ja
mov
lahf
xlat
mov
clc
add
mov
rcrb
pop
cmpsb
cmpsl
testl
mov
add
inc
sbb
ficompl
inc
shr
adc
lods
push
mov
ret
xor
and
les
sahf
lcall
fcmovnb
sbb
fs
pop
xchg
out
jp
mov
sub
cmp
sub
adc
fabs
sbb
ljmp
mov
fmull
sub
adc
cmp
cmp
lods
loop
jle
jle
scas
fisubrs
movsl
out
adc
dec
or
int
jae
imul
lret
aad
mov
icebp
test
cli
add
scas
sti
mov
call
mov
jo
loopne
xchg
imul
jge
dec
sti
or
dec
dec
imulb
lods
mov
mov
push
call
add
push
xchg
stos
push
mov
dec
or
sbb
icebp
lahf
fnstcw
cmc
and
mov
sub
xchg
mov
pop
jp
dec
mov
fdivs
pop
mov
fs
fsub
imul
pop
lods
xchg
cmp
mov
xchg
icebp
add
inc
fdivrl
pop
bound
scas
dec
push
dec
hlt
shl
das
dec
adc
push
shlb
xchg
outsb
dec
cmp
call
pop
mov
mov
mov
outsb
in
jg
addr16
sti
adc
jecxz
mov
cld
mov
pop
lret
jmp
stos
push
adc
add
inc
rorl
xchg
push
outsl
je
add
push
push
lcall
pop
push
aas
std
lods
adc
add
xor
nop
jae
call
mov
dec
sbb
xor
push
pop
stos
mov
repz
cltd
push
push
xor
pop
inc
lods
fwait
pop
fcmovnu
lods
inc
ds
and
inc
pop
sbb
movb
jmp
aas
es
sub
cmpb
pop
outsb
xchg
sbb
jle
sub
push
aas
sbb
idivl
mov
lock
das
push
dec
out
and
push
faddl
mov
cmpsb
scas
add
sub
pop
sbbb
pop
inc
fxch
jl
inc
mov
pop
sahf
in
sub
cmp
fs
mov
pop
shl
xchg
lcall
pop
xchg
test
loopne
sbb
scas
outsb
aam
ljmp
sbb
dec
fsub
or
lcall
aam
jmp
pop
xor
xchg
add
push
push
aaa
test
xor
xlat
dec
popa
test
out
imul
fdivp
bnd
aaa
fdivs
lods
std
js
inc
xchg
leave
bound
jg
minps
js
jne
popw
lock
pop
sbb
mov
mov
fs
call
xor
mov
pop
push
mov
es
mov
pop
pop
stos
xor
imul
inc
xor
push
std
test
mov
int3
outsl
sarl
movb
repnz
int
jnp
js
pop
mov
mov
aas
bound
sub
in
mov
sub
mov
push
sbb
aas
outsb
fistpll
decb
sub
pop
sub
daa
or
scas
pop
dec
stc
iret
cmp
int3
xchg
adc
test
movsl
lds
mov
insl
lods
les
sub
xchg
roll
and
xchg
add
mov
int3
das
outsb
or
mov
out
xchg
push
sub
js
pushf
jge
dec
and
adc
push
sarl
sub
mov
push
rcr
jg
xor
or
pop
mov
sahf
pop
ja
in
sbb
xchg
add
mov
imul
mov
cmc
xor
shrb
dec
shll
daa
daa
shrl
push
dec
out
fdivl
mov
movsl
test
imul
inc
jnp
stos
dec
stc
cmpsl
pusha
dec
mov
adc
loope
and
cmpsb
mov
mov
std
sub
sbb
push
and
or
lods
daa
or
and
fsubl
cmp
push
cmp
sbb
mov
inc
lret
popa
call
mov
pop
mov
mov
jp
jmp
mov
jbe
int
inc
dec
jbe
inc
cli
dec
call
sbb
jecxz
int
aaa
lods
mov
cs
sub
or
jnp
popf
mov
fbld
leave
xchg
es
clc
jmp
dec
cmp
or
push
iret
fbld
sbb
mov
mov
test
inc
mov
adc
lahf
xor
and
scas
aam
pop
repz
orb
stos
sbb
or
jl
shlb
or
outsl
inc
stos
jno
pop
add
mov
and
dec
push
ss
stc
ljmp
into
es
sub
sahf
jo
ss
cld
rorl
mov
jae
xchg
and
pop
ret
mov
aaa
sti
sub
xor
pop
xlat
mov
jns
inc
pop
imul
mov
pop
lock
xlat
jg
outsl
daa
mov
cmpsb
loop
pop
jge
pop
mov
jo
lahf
pop
push
sub
mov
adc
adc
or
lret
sbb
ja
daa
rcl
loopne
cmp
push
mov
inc
sub
loopne
loop
stc
cltd
int3
xchg
cmp
imul
fcompl
vmovlps
sbb
adc
mov
je
sbb
lret
call
stc
jb
mov
cmp
rorb
insl
lret
insb
inc
mov
or
push
dec
pop
ficompl
lret
ret
mov
pop
or
shrl
fistpll
pop
and
icebp
lock
iret
jo
xchg
cld
or
fnstcw
bound
or
stos
sbb
subb
mov
addb
fistpll
xchg
push
cmp
sub
cmp
and
add
sub
cmc
inc
fdivrl
xchg
cmp
dec
pop
mov
mov
gs
or
pop
stos
scas
mov
mov
mov
lahf
enter
add
nop
adc
mov
sbb
cmp
cli
xchg
inc
imulb
and
xchg
stos
jns
testl
test
push
cmpsl
push
mov
and
into
fildll
dec
aam
stos
mov
dec
mov
push
daa
lods
mov
cmpsb
cmp
in
jle
and
mov
aaa
pop
les
xchg
out
sbb
pop
pop
es
fcmovbe
jp
outsl
out
xor
pop
in
add
jge
xchg
sarl
xor
andl
hlt
test
add
rorb
lods
cmpsb
shll
cli
shrl
mov
mov
into
insl
lahf
and
mov
cmp
lea
scas
or
cmp
jns
fldt
mov
call
mov
es
es
push
jg
cld
out
and
jae
xlat
lea
sub
mov
jecxz
push
sahf
test
imul
or
pop
out
je
loope
sbb
cmc
pop
inc
push
movsb
sbbl
or
call
and
mov
ds
mov
add
clc
icebp
icebp
dec
inc
jb
pop
adc
sub
xchg
sti
in
int3
xor
or
xchg
jge
cmp
std
test
mov
or
mov
bound
jmp
push
xchg
cmc
loope
fucomp
add
mov
sarb
mov
adc
dec
dec
lods
cmpl
movsl
add
dec
jb
mov
inc
bound
or
jns
stos
mov
cmp
push
andb
sub
cmp
int3
repnz
packssdw
or
scas
xor
pop
push
imul
sub
jmp
mov
jno
jb
cmpsl
std
jno
xor
cmp
push
negb
sbb
aaa
faddl
xor
push
pop
ret
add
cmpsl
fwait
push
xchg
or
roll
das
pop
leave
adc
pop
roll
jne
push
mov
push
push
jno
inc
stc
sbb
push
clc
sbb
pop
xor
sti
adc
imul
ret
cwtl
negl
dec
mov
into
mov
jl
out
push
push
ss
mov
sub
mov
dec
jae
pop
pushf
xor
outsl
inc
scas
divb
pop
push
jb
cwtl
cmp
pop
and
jae
sbb
jmp
mov
jl
xchg
xchg
nop
xor
fucomip
les
fnsave
test
adc
mov
in
pusha
dec
lea
in
jmp
in
xchg
pop
mov
inc
jle
push
popf
push
mov
xchg
stc
dec
mov
loop
push
add
mov
inc
inc
sbb
xchg
ljmp
rol
lods
ret
mov
mov
pop
sbb
adc
pop
or
ret
and
and
adc
and
enter
or
xor
imull
decl
test
pop
jno
roll
adc
mov
adc
adc
test
push
adc
xchg
in
mov
adc
enter
mov
mov
test
scas
testl
sub
and
or
aas
iret
ds
mov
cmp
mov
loope
insl
inc
jg
int
hlt
xchg
aam
rcrl
sbb
dec
push
pop
lea
adc
push
add
fdivrl
test
nop
imul
test
aas
add
sub
mov
mov
bound
pushf
pop
testb
movsb
mov
call
or
aam
jp
jle,pt
fcmovnbe
int3
pop
fldenv
shlb
or
shlb
outsb
scas
data16
pop
lods
push
fld
shrl
and
dec
fsub
mov
scas
lds
mov
rcll
pop
cmp
mov
rcr
lods
dec
lods
insb
dec
xor
stc
xor
in
pop
lds
dec
add
inc
and
push
dec
jl
dec
loop
sub
adc
or
ds
sbb
adc
cmpb
cmp
or
sub
and
mov
jb
adc
imul
push
cli
fiaddl
nop
stos
inc
cltd
adc
xor
cmp
dec
cmp
outsb
or
xchg
std
sti
outsl
addr16
add
sbbb
pop
cmp
scas
out
add
adc
shlb
aad
test
and
enter
jmp
imul
push
cmp
loop
or
insl
mov
ljmp
mov
xor
test
iret
or
sub
repz
sarl
mov
sahf
mov
mov
mulb
out
or
and
mov
repnz
adc
popf
sub
pop
inc
or
adc
aam
cld
fcomps
mov
add
daa
mov
pop
mov
jl
arpl
cltd
mov
dec
push
into
push
push
push
mov
mov
outsb
mov
dec
mull
push
fimull
add
in
mov
dec
inc
call
or
inc
xchg
das
cmp
jb
jl
imul
notl
or
call
push
sbb
or
add
xchg
add
and
ljmp
xchg
pop
jo
mov
mov
ret
shrl
scas
idivl
mov
insb
dec
mov
mov
mov
ds
rclb
dec
inc
lahf
xchg
push
jle
dec
gs
xchg
iret
test
mov
add
push
dec
push
jge
mov
enter
mov
fldl
movsb
arpl
mov
scas
lods
jno
pop
mov
leave
add
das
push
pop
xlat
call
sbb
cmp
lahf
dec
cld
sbb
cmp
test
fimuls
add
adc
mov
sub
pushf
not
inc
mov
test
int3
stos
jecxz
and
inc
je
out
cs
mov
test
mov
leave
call
inc
cli
dec
out
xor
adc
js
int
das
fstpt
sbb
adc
fcmovb
ljmp
in
in
mov
pusha
mov
and
adc
inc
push
lods
ror
lock
mov
fcomps
and
ja
je
andl
mov
in
aaa
aad
mov
add
andl
push
ljmp
cmc
mov
mov
pop
mov
out
mov
xor
mov
mov
outsl
mov
fnstenv
ss
scas
xchg
mov
lods
and
and
mov
jmp
xchg
and
repnz
adc
inc
pop
push
push
sbbl
and
xor
out
jge
sbb
lahf
jns
out
xor
xor
aaa
call
fsubrs
cmp
xor
out
inc
dec
sbb
and
mov
cmp
sbb
loop
iret
sub
push
fbstp
orps
and
repz
int
jns
popf
pop
adc
dec
jmp
and
sbb
bnd
jecxz
aas
inc
push
jecxz
pop
incb
fwait
int
cmpsl
cmp
cld
out
or
fs
std
pop
and
out
push
adc
adc
js
vpmacsdd
out
sub
jns
test
shrl
cli
dec
into
lea
jl
inc
push
jbe
imul
lahf
hlt
jbe
lahf
inc
mov
push
cs
mov
rol
sahf
aad
lahf
and
lret
xlat
mov
sub
push
xchg
fmuls
mov
mov
fldcw
jecxz
outsl
push
sub
mov
cld
ss
divl
adc
popf
lret
sub
fistpll
mov
loop
mov
sar
scas
push
lcall
and
addr16
cwtl
cmc
iret
cld
mov
add
mov
dec
xor
lods
and
xchg
fists
and
lods
jmp
popf
mov
clc
icebp
add
xor
iret
adc
xchg
jle
int3
push
and
mov
add
inc
mov
jo
and
fcoms
jne
popa
pop
or
xor
cmp
adc
cmp
sbb
aas
out
dec
stc
sub
fwait
push
adc
mov
ljmp
into
jae
popf
jl
cmp
sub
sub
push
and
jae
xchg
fbld
inc
fbstp
rep
sarb
fs
sbb
hlt
dec
and
fbld
cmc
sbb
ss
inc
dec
test
push
adc
aad
sbb
enter
pop
scas
shr
cmp
jge
stos
les
jg
icebp
push
jbe
xchg
and
inc
sub
push
mov
rorb
test
add
notb
ficoms
adc
loopne
js
mov
xor
inc
stos
andb
jno
xchg
sahf
add
sbb
jne
jo
leave
pop
mov
xor
orb
jbe
xor
loop
cld
push
out
xor
mov
cltd
subl
call
insb
dec
repnz
fcompl
fadd
sar
popf
bound
test
inc
fnsave
mov
lods
pop
outsb
shll
xchg
js
sbb
mov
adc
stos
mov
into
push
cmpsb
sub
add
or
cltd
jmp
jmp
aad
mov
mov
hlt
addb
and
icebp
js
sub
jae
adc
sub
pop
cmp
fldl
and
cmp
fwait
rclb
lea
xor
mov
push
xor
mov
pop
mov
imul
jns
loop
lods
flds
sub
cld
cmpsb
dec
jmp
aad
xor
bound
mov
push
cmp
xor
loop
popa
decb
out
jp
pop
movsb
insb
inc
je
ljmp
bnd
icebp
inc
xchg
pop
shrb
ror
inc
addl
jp
sbb
adc
sub
dec
or
mov
ds
in
sbb
sbb
or
sbb
gs
xchg
sub
push
xchg
cmpsl
pushf
adc
add
leave
fidivl
repz
pop
mov
lods
into
push
outsl
inc
cmp
out
jmp
pop
mov
sbb
cmp
rcrb
cmp
js
sub
mov
mov
imul
sbb
mov
lds
jle
or
sub
fisubrs
xchg
cwtl
js
mov
jle
dec
pop
pop
inc
sti
mov
les
out
mov
cmp
mov
ret
test
nop
dec
xchg
arpl
ret
andps
jne
mov
xchg
inc
rcl
lock
mov
movb
xlat
js
stos
push
nop
in
js
cmp
inc
mov
jns
inc
dec
push
pop
icebp
push
das
iret
dec
shlb
bound
stos
xchg
sahf
pop
in
push
or
push
mov
fisubs
test
popa
inc
cmp
int3
cld
sub
mov
sub
add
xchg
or
adc
cmp
data16
movl
in
sub
fsubr
and
adc
loopne
inc
fimuls
sbb
les
adc
in
and
fwait
jbe
and
jb
jg
outsl
scas
or
icebp
and
inc
jo
jno
ds
dec
push
adc
mov
aad
or
leave
adc
ja
xchg
mov
xor
lds
aam
sbb
add
lods
sbb
ret
dec
daa
dec
outsb
mov
stos
inc
sbb
pop
sarb
xchg
pop
shl
arpl
insb
sub
add
jg
mov
jmp
jns
call
push
outsb
cmp
push
in
jmp
aas
add
iret
mov
andl
js
sbb
int3
jae
xchg
test
sub
push
mov
add
jnp
sub
bound
lahf
sub
sbb
xor
jmp
xchg
sub
mov
shr
sti
insb
xchg
cmp
add
lret
push
mov
mov
add
sub
pop
shll
mov
inc
fwait
pop
lea
jo
or
mov
push
rcrb
std
cltd
xor
lea
rcrl
pop
or
push
lods
xchg
and
add
inc
sbb
add
dec
daa
xchg
dec
ss
push
imul
or
out
sbb
sub
insb
mov
sbb
lret
mov
sti
mov
int
mov
inc
test
testl
adc
mov
lahf
cs
xchg
xor
dec
cmp
outsl
mov
pop
cmp
dec
scas
pop
inc
push
mov
lods
or
sti
rcr
pushf
jg
and
mov
cmp
jns
push
or
enter
inc
fisttps
call
popa
std
or
ds
fadd
xchg
iret
dec
xor
xor
rcr
mov
int3
pop
jns
or
sub
int
adc
iret
mov
sbb
lahf
adc
lock
jns
and
sti
mov
mov
cmp
jb
cmp
and
outsb
cmpsl
out
fcoml
and
lcall
sbb
lock
in
pop
mov
push
inc
sbb
push
lods
fldcw
addl
adc
pop
or
rolb
or
fiadds
cmpsl
xchg
cmp
push
insl
negb
sub
lds
adc
push
inc
push
int
mov
rol
rcl
and
push
les
xchg
and
out
sbb
mov
jge
jl
xchg
sub
push
popa
outsl
mov
mov
xchg
adc
shl
pushf
cwtl
mov
jbe,pn
adc
jmp
loopne
dec
dec
insl
jo
daa
and
fs
xchg
ss
mov
add
xor
mov
add
lea
dec
movsb
push
enter
jle
jns
dec
jmp
insb
xor
pop
dec
jae
idivb
loope
or
cld
xor
mov
inc
dec
test
sbb
mov
push
test
dec
sbb
repz
inc
cmpsb
dec
fmuls
les
push
ss
lcall
and
xor
mov
cld
push
dec
or
mov
jmp
insl
ret
sarb
pop
mov
das
popa
and
iret
icebp
sbb
je
add
sub
clc
lock
mov
out
decb
nopl
cmpsl
jg
dec
iret
jo
pop
mov
pushf
pop
mov
jl
cmpl
insl
dec
cs
cmpsl
add
jbe
mov
in
mov
dec
insb
imul
dec
mov
mov
push
mov
add
inc
lahf
call
cmp
stos
mov
mov
sbb
sub
les
rcrl
popa
xor
repnz
cmp
cwtl
jge
sahf
xchg
jg
mov
inc
int3
lahf
fidivrs
mov
sub
mov
out
push
sbb
dec
int3
icebp
pop
or
push
out
es
imul
data16
mov
in
ds
enter
inc
call
mov
xchg
jnp
std
nop
add
in
and
or
lret
adc
call
xchg
push
push
jnp
jne
fistl
inc
cmpsb
mov
aam
mov
xor
dec
int
std
xchg
movsb
jns
or
lods
test
sbb
cmp
mov
mov
mov
mov
pop
mov
push
es
out
das
push
push
mov
add
pop
into
mov
sub
inc
sbb
ja
xchg
push
arpl
push
xchg
adc
mov
xor
idivl
cltd
inc
jecxz
leave
insb
cld
push
jecxz
call
fsubs
push
std
scas
clc
push
enter
push
lea
lcall
repnz
push
add
push
adc
push
test
shll
jl
adc
lods
xlat
mov
mov
sub
cmp
cwtl
pop
mov
ja
jae
jno
sub
sub
mov
sbb
aaa
and
lods
lods
icebp
cmp
in
push
into
push
loope
xor
leave
xchg
or
xchg
js
mov
mov
cmpsl
lock
xorb
stc
cwtl
cmc
into
ret
ja
jbe
pop
sub
xchg
lcall
sbb
pop
scas
push
in
insl
and
or
fwait
rolb
mov
cs
cmp
fs
cmp
pop
sub
loopne
adc
mov
cld
pop
mov
fdivr
xchg
cltd
jle
in
iret
add
dec
aam
cwtl
sbb
fisttps
mov
sbb
cmc
push
ss
jge
lcall
es
arpl
lock
xor
dec
arpl
test
aaa
push
imul
scas
sarb
xlat
in
push
out
push
mov
imul
add
es
pop
mov
das
xor
cli
sbb
and
push
rdtsc
lock
cmp
jmp
leave
cmp
adc
loop
lock
outsb
and
adc
aam
or
rcrb
xor
movsb
rclb
cmp
jo
add
cli
inc
dec
push
mov
gs
movsl
pop
leave
mov
inc
jmp
out
out
insb
sahf
pop
les
pop
aas
rolb
jnp
lock
jp
xchg
xchg
and
lock
adc
mov
lret
pop
cmp
jmp
aad
pop
mov
dec
push
aam
sti
add
out
pop
add
add
sub
loop
mov
out
mov
xchg
jnp
push
int
jl
mov
dec
push
div
dec
and
inc
xor
dec
inc
sbb
push
pop
cmp
stos
or
jno
push
int
cs
pop
jp
mov
push
enter
hlt
mov
ds
aad
cmc
mov
mov
mov
push
shlb
inc
out
hlt
repz
jp
or
fimuls
jge
add
xor
repz
mov
xchg
push
gs
cmp
sbb
add
cmp
int3
push
inc
inc
movaps
adc
loopne
sarb
data16
push
xor
jns
cmp
out
movsl
je,pt
cmp
pop
pop
add
and
in
and
insl
jne
movsb
sbb
add
addb
adc
adcb
push
push
adc
and
push
lahf
mov
xchg
jge
shll
sti
mov
in
mov
pop
inc
notl
dec
cmpsl
and
jnp
pop
out
icebp
aam
adc
xlat
lret
push
in
movsl
xor
enter
ret
iret
outsl
jp
icebp
xchg
shll
or
pop
mov
loop
sbb
or
sti
fisttpll
rorl
in
out
push
mov
or
nop
mov
rcll
mov
gs
cwtl
or
or
cmc
sarl
xchg
loope
sahf
shll
scas
dec
cmp
je
sbb
outsb
shlb
popf
loop
push
addr16
adc
cmpsb
adc
inc
mov
data16
mov
xchg
lahf
mov
xor
jecxz
pushf
aam
hlt
aas
shr
out
adc
lods
mov
jecxz
or
add
imul
push
push
scas
shlb
iret
xchg
aas
repnz
xor
sub
cmp
add
cmp
into
loopne
cmpsb
test
fldpi
sub
jmp
lock
aad
xchg
dec
fistpl
or
imul
test
sub
stos
push
ljmp
aaa
dec
inc
fldl
xchg
daa
sbb
push
xchg
mov
or
fsubrs
cmp
push
dec
cmc
mov
cmp
sbb
adc
sahf
addr16
sub
adc
pop
mov
in
lret
mov
ja
repnz
scas
jle
stc
push
je
mov
leave
xchg
in
ja
inc
inc
mov
mov
imul
ss
sub
mov
mov
mov
jb
push
bound
jg,pn
mov
jae
fimull
out
scas
in
idivb
sub
mov
xchg
sahf
subl
mov
outsb
fisttpl
cmp
fcompl
mov
je
es
xchg
xor
dec
and
sbb
mov
inc
stos
xor
adc
cltd
sbb
stos
sbb
sub
inc
xchg
fdiv
and
inc
mov
jg
dec
ss
pusha
iret
jno
mov
mov
dec
cmc
adc
mov
cmpl
push
pop
push
mov
repnz
or
es
out
jae
jns
sti
cltd
sbb
test
and
or
and
xor
out
rclb
pop
pop
xchg
cmp
mull
sbb
dec
out
cs
in
sahf
mov
fwait
mov
xchg
pop
and
cmp
jae
xchg
out
insb
rcrb
xchg
repz
pxor
jnp
test
sub
test
and
mov
js
push
or
nop
pop
adc
cli
movsb
pop
and
jno
xchg
dec
cltd
mov
repz
loopne
adc
jecxz
mov
mov
or
int3
mov
push
mov
test
or
cs
int3
fcmovbe
xchg
into
or
sub
fiaddl
dec
orb
addb
or
sub
pop
inc
or
imul
outsb
xor
ret
in
sahf
popf
jg
mov
and
arpl
and
mov
repz
loope
pushf
jmp
test
sub
sbb
xchg
arpl
fnstenv
cli
stos
je
shll
mov
xor
sar
call
sbb
ret
lret
adc
xchg
sbb
mov
out
cmpsl
push
xchg
inc
xchg
push
jae
outsl
jae
cmpsb
je
insl
lods
sbb
setae
mov
cmp
cltd
and
dec
out
inc
xor
xor
test
pop
mov
mov
std
mov
fsubs
sub
nop
aas
mov
xchg
movsb
int
fimuls
scas
or
jecxz
stc
lea
inc
pop
mov
iret
or
enter
push
clc
mov
xchg
mov
ret
push
sbb
ljmp
jns
jnp
in
cmp
mov
pop
sbb
mov
bound
mov
enter
xchg
or
test
jmp
cmp
push
mov
cmp
ret
mov
negb
out
leave
lret
test
ret
dec
and
mov
and
and
insb
fwait
jns
jp
fdivl
add
outsl
fildl
add
sbb
out
push
sub
les
je
fsubrs
xchg
pop
xchg
negb
jl
add
loope
lea
in
push
cmp
sub
pop
cmp
cltd
push
cmpsl
adc
add
iret
adc
jl
sbb
fisubrs
shrl
jg
mov
push
insl
pop
test
xor
mov
int
inc
dec
aas
cld
mov
add
mov
mov
inc
or
add
mov
negl
pop
frstor
aas
push
or
and
push
dec
das
adc
movsb
add
cmp
stos
adc
add
sbb
ret
out
lahf
test
push
adc
add
lds
out
test
push
adc
in
and
adc
in
sbb
jmp
fs
or
dec
mov
or
inc
mov
mov
hlt
shlb
repnz
jb
out
push
ljmp
loopne
std
lcall
in
jo
mov
ret
mov
mov
mov
mov
out
and
daa
repnz
adc
adc
shll
sub
inc
in
push
scas
jno
je
in
into
lret
sub
repz
mov
clc
add
pop
ss
push
je
xchg
dec
js
insb
in
pop
push
fdivrs
or
add
popa
shlb
push
jnp
mov
sub
cmpsl
aad
inc
insb
ja
sahf
adc
fbld
jns
add
rcrl
jno
dec
test
aaa
dec
mov
add
or
popa
mov
adc
xchg
or
inc
add
scas
mov
adc
mov
jnp
pop
mov
dec
lock
push
pop
andb
pop
mov
arpl
lods
mov
cmpsl
jmp
sti
loope
add
adc
or
shlb
cs
fimull
cmp
out
inc
mov
xor
mov
scas
nop
mov
ret
ret
les
or
xchg
mov
lods
sahf
sbb
imul
in
in
fwait
loopne
lret
pusha
mov
fs
scas
cmpl
imul
and
and
inc
mov
aad
fs
add
xchg
push
dec
dec
jp
cld
out
inc
fnstsw
sbb
movsl
dec
mov
push
mov
cs
cmp
aaa
dec
adc
popf
push
mov
cli
clc
out
insl
mov
rcr
filds
jo
bound
notl
arpl
cmpsl
ror
arpl
cli
xchg
xchg
dec
cmpsl
sub
cmp
insb
shlb
sbb
int3
je
aam
int3
test
call
xchg
testb
mov
mov
lret
imul
enter
enter
jmp
daa
pop
mov
aad
loop
ljmp
les
stos
pop
sub
scas
stc
xchg
jle
sbb
lods
out
test
push
inc
cmpsl
mov
fisttpll
cmpl
fdivl
out
pop
daa
dec
pop
mov
mov
je
fldenv
adc
sbb
sub
xor
sub
ret
xchg
testl
pop
mov
dec
inc
mov
cmp
mov
aam
cmc
mov
xlat
sub
add
outsb
mov
ja
jmp
xor
add
jb
sub
mov
cmp
ds
xor
adc
sbb
mov
jae
jb
mov
push
roll
adc
pop
cmp
mov
sti
fnstenv
adc
arpl
aaa
jl
fnstcw
or
fcmovnbe
pand
loop
pop
ficoml
out
sub
push
and
hlt
sahf
inc
jg
popf
or
das
push
and
rolb
scas
add
inc
std
push
mov
dec
mov
pop
sbb
xchg
notb
xchg
or
and
add
cmp
mov
or
inc
dec
in
in
jnp
mov
cwtl
lahf
scas
lods
aas
dec
jae
iret
jbe
out
push
pop
xor
mov
xchg
mov
les
mov
push
mov
lods
scas
xlat
mov
popf
repz
mov
cmc
lock
jae
cmp
sbb
and
mov
ret
inc
xchg
sub
sub
sti
xor
ss
sarb
xchg
lds
pushf
mov
insb
sbb
cmp
cmp
cmp
pop
add
leave
lahf
mov
sbb
adc
pop
sbb
andl
out
push
mov
mov
xor
imull
sbb
sbb
mov
orb
stos
xor
cmp
pop
mov
cmp
jnp
cli
mov
pushl
jae
inc
popa
xchg
push
jns
dec
nop
and
nop
lock
ljmp
xor
lods
jbe
xor
aad
push
subb
dec
mov
xlat
mov
sarb
adc
shll
or
enter
aas
jg
sub
mov
pop
adc
dec
mov
rol
mov
dec
mov
sub
pop
mov
adc
mov
ljmp
dec
out
push
jae
lret
push
mov
aas
cwtl
in
xor
jmp
add
jne
jb
cmp
lea
and
pop
mov
fwait
pop
loop
loopne
in
cli
sti
xor
movsb
sbb
jns
jg
std
lret
and
adc
jnp
push
sarl
jno
mov
or
cwtl
rcl
ja
and
lds
push
jae
or
out
or
lods
add
addb
jne
stos
push
adc
push
in
jge
mov
dec
pop
in
imul
mov
cmp
leave
mov
mov
lret
imul
test
ret
sub
sub
std
mov
jl
fs
and
or
mov
scas
and
jo
add
or
arpl
pop
and
add
aad
out
xchg
xor
stos
das
sub
es
hlt
sub
inc
mov
mov
pop
mov
push
rclb
jns
das
jg
push
lods
jl
cmpsb
dec
add
inc
jnp
pusha
pop
mov
jbe
dec
ljmp
pop
xor
fwait
cmpsb
jb
stos
sub
movsl
adc
fimull
mov
mov
mov
fimuls
mov
pusha
sub
addr16
jg
loopne
or
ds
inc
or
sub
mov
ret
and
inc
cmp
or
pop
xchg
mov
push
xor
ret
push
outsl
jns
and
stos
in
and
fisubl
mov
push
scas
enter
bound
std
pop
fists
lcall
cmp
andl
ss
addr16
xchg
mov
out
adc
sbbb
fidivrs
inc
pop
jno
lods
jae
jae
lds
xchg
cmpsl
lret
out
push
pop
and
in
bound
mov
sbb
cld
imul
idivl
ljmp
add
fucomi
or
test
sbb
rcll
jae
pop
insb
mov
xchg
lods
cmp
push
fadds
or
fs
cli
push
insl
imul
imul
add
nop
mov
stos
pop
adc
add
jmp
dec
cmpb
pusha
mov
dec
es
inc
ss
popa
push
and
aas
shll
repnz
inc
mov
jl
jo
inc
rorb
stos
loop
daa
mov
jo
int3
dec
and
arpl
into
pusha
cwtl
or
and
aaa
xchg
sub
popa
pop
push
inc
jecxz
xchg
pop
jmp
xor
mov
dec
dec
sbb
mov
shr
hlt
and
or
mov
sub
rcr
or
dec
jo
ja
and
es
sbb
xchg
call
lret
mov
lcall
jne
inc
mov
and
stos
outsb
das
pop
lret
push
jno
mov
call
mov
xchg
int3
cs
test
jmp
scas
inc
daa
jo
xor
lahf
pop
inc
fnstcw
out
in
xor
aaa
mov
sbb
or
pop
stos
or
mov
jbe
jno
sub
fnstsw
shlb
push
push
fisttps
inc
xor
jno
movsl
cwtl
dec
insb
cmpsb
jnp
fmul
xchg
sub
xchg
jo
jle
mov
pop
xchg
popf
xchg
mov
ds
or
jle
sysret
push
mov
pushaw
sbb
rcr
adc
test
xor
sarl
das
adc
mov
outsl
sbb
jbe
in
lea
fidivrs
mov
je
add
shll
dec
inc
mov
sbb
dec
dec
loopne
cmpsb
sub
xor
in
cmp
jle
fisttpl
scas
and
cmp
push
or
imul
mov
shll
mov
push
inc
jb
jp
test
cmp
std
lock
pop
dec
dec
mov
repnz
cmp
xorl
cmc
fdivp
mov
out
jne
fisubrs
inc
jae
call
pop
mov
insl
insl
pop
xor
sti
mov
push
adc
js
push
dec
gs
or
or
mov
and
mov
jmp
sti
mov
inc
repnz
sbb
jne
pop
lret
pop
or
sbb
stos
push
xor
clc
add
or
fcomps
cvttps2pi
inc
fwait
ret
andb
inc
nop
sub
inc
loope
dec
mov
xor
inc
adc
cmp
sbb
pop
outsb
push
ds
mov
sub
pop
add
in
out
fadds
nop
lahf
fldt
xchg
lea
shrb
leave
test
or
mov
in
aas
scas
inc
stc
adc
pushf
fisubrl
loope
out
xchg
adc
test
aam
cltd
adc
adc
push
ljmp
mov
xor
cmp
dec
mov
decl
jns
sub
mov
lods
mov
jmp
aaa
fisttps
flds
stos
mov
ret
jno
test
pop
jo
xchg
jge
stc
inc
inc
scas
addr16
mov
cmp
daa
cmp
jns
xor
fucomip
push
sbb
fsubrl
repnz
mov
imul
stos
mov
stc
or
hlt
lcall
fistps
mov
rolb
out
mov
clc
ja
in
add
into
test
out
pop
xchg
cmp
sub
movsl
outsl
leave
cli
cmp
orb
cwtl
push
and
and
sub
sbb
mov
popf
cmp
add
add
outsl
mov
xchg
and
mov
lock
adc
adc
insb
jb
cmp
sahf
lds
inc
pandn
test
fldcw
test
stos
inc
int
in
jno
clc
mov
int3
add
xchg
in
shrb
cmp
mov
or
rcll
fdivl
cmp
xchg
mov
mov
shl
fistpl
push
mov
popa
xlat
jge
mov
xchg
insb
mov
add
test
cld
cs
xorl
ja
inc
inc
cmc
lret
sub
ljmp
divl
jl
test
xor
xchg
int3
lds
mov
mov
add
mov
aaa
jo
mov
cmp
cmpsb
or
sub
jbe
fcom
outsl
lcall
sbb
xchg
nop
nop
das
iret
push
loop
push
ja
movsl
push
fisubrl
cmp
mov
ret
popf
mov
inc
push
push
pop
nop
sbb
sbb
sarl
inc
leave
in
jno
leave
cmp
adcl
int3
insb
out
daa
shrl
sbbl
pop
dec
outsl
xor
jl
lock
js
fnstenv
mov
cmpxchg
dec
int3
sub
pop
cmc
aas
cmc
in
dec
mov
adc
jmp
dec
test
fidivs
push
and
mov
hlt
sbb
pop
xor
adc
rcll
cmp
inc
mov
lds
jecxz
insl
out
jp
sarl
push
inc
dec
ss
inc
jl
jle
mov
jbe
xor
push
push
sarl
enter
xchg
les
pushf
fwait
mov
int
xor
out
loope
add
mov
adc
add
xchg
mov
aaa
adc
mov
sub
loope
inc
js
inc
push
jnp
mov
push
lahf
movsl
cli
push
add
aas
cmp
mov
pop
pop
mov
je
addr16
lds
in
repz
sti
fwait
ljmp
test
adc
sbb
addr16
mov
mov
cmpsl
pop
loopne
mov
push
movsb
fwait
out
mov
fisubrl
scas
inc
repz
cmc
adc
cmp
jg
sti
lods
sub
fstl
imul
fbstp
sarb
adc
ds
fsubs
in
adc
jl
les
loop
add
or
inc
pop
lret
dec
gs
loope
xchg
fnstenv
into
fucom
ss
xchg
jge
fnsave
jle
sbb
xchg
xor
popf
cmp
cmpsb
insb
test
xor
jl
dec
mov
mov
cwtl
imul
rorl
pop
aas
stos
mulb
adc
fwait
dec
jmp
pop
jb
shrb
fsubs
lret
jl
imul
shll
test
sub
sub
sub
lea
int3
mov
inc
aaa
cmp
test
aad
add
mov
sbb
nop
inc
sarl
fimull
jmp
sub
dec
in
shlb
xchg
push
lds
or
lods
adc
pop
and
dec
iret
daa
mov
push
add
or
adc
mov
cmp
repz
and
imul
sub
jmp
clc
scas
imul
push
push
sbb
repnz
mov
or
xor
jge
enter
jecxz
insl
aas
add
test
sbb
xchg
jb,pt
inc
shrl
or
inc
pop
sbb
dec
lea
cmp
jp
adc
fs
addl
pop
movsb
xchg
scas
cmp
dec
lds
sbb
icebp
pop
inc
out
inc
repz
int
pop
test
jo
pushf
js
mov
loope
cmpsl
cmc
jne
repz
icebp
and
mov
leave
mov
push
mov
dec
dec
out
adc
mov
repz
sti
testl
rcrb
and
sbb
mov
rcr
stos
jnp
inc
fnsave
fidivrl
jb
ljmp
mov
sub
xchg
popf
mov
gs
leave
push
out
cmp
dec
inc
mov
and
int3
sub
push
rcll
push
sbb
or
movl
scas
fdivrs
test
stos
mov
or
scas
push
cmp
lret
pop
repz
insl
cwtl
daa
test
sub
call
test
pop
mov
adc
lret
jnp
add
fst
or
in
jb
fmuls
dec
insb
push
jne
dec
aaa
loope
out
mov
fdivs
xor
subb
bound
push
aam
mov
test
loope
gs
out
add
xor
arpl
add
ss
or
push
icebp
push
mull
mov
inc
add
movsb
cmpsb
push
sbb
push
call
aad
cmp
mov
out
sbb
sarb
push
pop
mov
pop
mov
in
in
add
repnz
push
je
mov
imul
pop
xchg
lret
inc
jo
jecxz
je
fucomi
push
mov
lods
sbb
shrb
stos
push
sub
inc
mov
jge
rcll
std
xchg
fadds
and
mov
mov
push
pop
xchg
push
dec
mov
call
js
fistpl
adc
outsb
xor
int3
dec
mov
outsb
and
cmp
ja
sbb
sbb
movsb
mov
mov
inc
adc
clc
jmp
in
hlt
mov
call
adc
mov
cmp
sbb
andps
inc
shll
xchg
dec
and
repz
sub
repnz
jnp
idivb
jmp
pop
nop
sub
lret
inc
pop
scas
push
pop
inc
push
sub
pop
gs
fbstp
into
lods
ljmp
jbe
shlb
push
xchg
jecxz
push
jo
sti
sub
stos
xor
fsts
outsl
orl
inc
sub
stos
cmc
lds
popa
push
adc
in
ja
shll
lret
inc
mov
mov
aam
imul
mov
mov
dec
mov
mov
pop
dec
pop
inc
adc
sub
jl
cs
iret
cmp
into
adc
adc
lds
mov
ja
cmp
jge
jae
or
in
sti
repz
fs
loope
daa
or
outsb
lea
cmp
inc
mov
cmp
insb
in
loope
mov
dec
ror
nop
dec
jp
bnd
and
test
mov
xchg
mov
loope
rclb
cld
and
bound
mov
loop
loop
or
push
mov
add
test
test
pushf
pop
ret
mov
cmp
inc
aad
lods
pop
fiadds
pusha
pop
out
fwait
xor
push
push
insb
mov
fisttps
inc
inc
fimull
jp
fsubrs
xchg
out
cmp
out
and
or
or
sbb
fdivl
jae
bound
aam
adc
mov
mov
std
loope
popa
adc
cmpl
aas
ficompl
xchg
pushf
jne
cmpsl
mov
aam
cwtl
xchg
jb
loope
testl
xlat
xchg
dec
dec
push
loop
cmc
fmull
sub
aad
ss
orl
int
cmp
adc
push
jns
js
dec
or
pop
sahf
iret
sub
mov
repnz
outsl
fiaddl
add
xchg
out
fdiv
setne
mov
test
sub
lret
scas
add
pop
rcrl
add
lret
pop
pop
cmp
ljmp
sub
loopne
pop
leave
inc
in
mov
aam
gs
dec
inc
lods
in
lret
out
push
pop
dec
lret
in
mov
icebp
mov
aas
adc
icebp
adcl
shll
jnp
adc
call
or
or
lock
popl
test
and
or
jp
xor
jmp
test
mov
sahf
test
lahf
outsb
sub
lret
mov
movsb
jecxz
xchg
jmp
lcall
repz
pop
mov
cltd
jecxz
push
or
popf
xchg
xlat
dec
adc
int3
sahf
lret
ret
push
xchg
rorl
fdivrs
add
mov
test
adc
jecxz
cmp
dec
and
push
push
push
pop
test
jae
dec
in
das
out
je
xchg
pushf
adc
fucomi
mov
mov
push
cmc
or
xor
dec
xor
ds
cmpsb
jbe
pop
add
push
pop
cmpsl
mov
jo
repnz
mov
cltd
mov
pop
sbb
hlt
mov
in
xchg
outsb
sbb
outsb
lods
xchg
pop
test
cmp
sbb
in
push
addl
mov
xchg
sub
out
pushf
or
inc
in
sbb
mov
je
mov
jne
sub
pop
sbb
cmp
psllq
cmp
cmp
sub
ds
jb
testb
pop
add
cmp
pop
fmulp
push
jg
xchg
mov
sub
ja
dec
pop
rolb
lds
int
pop
add
cmp
jl
cmp
and
jnp
je
enter
nop
test
clc
add
negb
add
inc
int
test
les
mov
mov
add
xor
rcll
and
mov
push
in
daa
mov
into
stos
jne
mov
jns
dec
jp
and
inc
dec
mov
cmp
ljmp
mov
xor
add
lret
xor
lock
addr16
and
imulb
push
ljmp
adc
xchg
lret
inc
mov
test
jnp
mov
cmp
sbb
mov
icebp
ds
jecxz
mov
aaa
cld
xor
sub
mov
mov
loope
jnp
mov
andb
in
xchg
xor
sbb
mov
dec
out
iret
mov
inc
jg
xchg
scas
sbb
movsl
addr16
and
es
xchg
lds
pop
ret
call
dec
imul
push
dec
out
loopne
sub
test
push
imul
stc
in
std
add
gs
loope
ret
sti
jnp
xor
mov
push
lret
dec
sub
movsl
shlb
pop
pop
daa
cltd
mov
in
mov
fistl
inc
push
sbb
mov
dec
sub
test
mov
dec
cmp
pop
sub
addr16
xor
hlt
data16
lock
pop
adc
aaa
jno
js
and
xchg
out
jo
pop
pop
cld
cmpl
dec
push
rclb
mov
popf
dec
aas
rolb
push
mov
add
lds
movsl
and
in
xor
or
shlb
sbb
scas
enter
jge
xchg
mov
imul
mov
sub
adc
in
jle
push
loope
sbb
in
mov
in
addr16
or
cli
jbe
inc
pop
fstps
stc
data16
loope
daa
out
dec
jp
jle
leave
jne
int3
inc
adc
adc
adc
scas
and
add
ljmp
sub
cwtl
inc
pushf
mov
xor
stos
stc
push
pop
xchg
jecxz
ja
xor
xor
push
xor
mov
sbb
loop
ja
adc
push
lcall
push
add
and
cmp
shll
push
xchg
ss
lret
std
xlat
lock
adc
cmp
test
sbb
xor
dec
mov
mov
add
pushw
rclb
sub
mov
stos
jns
inc
in
insl
mov
out
dec
into
mov
mov
push
addr16
insl
push
lret
mov
and
stc
push
mov
in
inc
pop
mov
pop
sarl
rclb
mov
data16
cli
inc
fdivs
push
mov
inc
sub
sub
sti
icebp
mov
je
mov
stos
popf
fdivrl
xor
mov
inc
ss
push
and
mov
inc
xchg
mov
loopne
loope
cwtl
fdivs
mov
stc
mov
sbb
or
mov
in
sbb
fistpll
fwait
pop
push
cmc
or
adc
clc
sti
int3
or
test
mov
adc
stos
mov
insb
inc
mov
shll
sbb
push
adcb
aad
mov
lret
or
aaa
cmp
xor
popf
jbe
divl
into
pop
int
jge
adc
dec
and
jp
add
lds
imul
std
push
mov
lods
cmc
mov
jp
stos
mov
fimuls
mov
ds
sbb
in
ljmp
jbe
repnz
dec
lea
jo
adc
out
dec
and
mov
int
xchg
jo
lcall
mov
xor
into
clc
adc
push
jp
mov
inc
add
dec
rolb
inc
or
cmp
popf
negb
stos
push
mov
pop
ret
jle
push
cli
aam
aaa
loope
dec
int3
test
fists
or
dec
in
lret
mov
ret
cmpsb
xchg
mov
dec
mov
jne
addr16
xor
xor
pop
or
lret
lods
mov
out
cmp
pusha
adc
pop
aam
xchg
lock
es
hlt
mov
pop
push
loope
sub
mov
ds
jns
outsb
adc
data16
ss
stos
je,pn
push
inc
ret
outsl
aaa
dec
xor
icebp
outsl
nop
push
mov
add
pop
inc
xchg
test
shr
jae
or
cs
mul
mov
xchg
cld
sbb
cmpsl
lock
aaa
adc
mov
mov
mov
stos
dec
femms
pop
sub
roll
sti
add
push
pop
outsl
insl
sbb
dec
pop
cmpsl
and
sbb
fsubrs
ret
outsb
mov
inc
cld
shr
loop
jno
repnz
rolb
stos
sti
pop
loop
sub
mov
pop
push
cmp
inc
xor
das
daa
pop
and
mov
pop
subl
cwtl
mov
and
insb
les
daa
dec
jo
jae
cwtl
xchg
movsl
xchg
jbe
gs
jge
loopne
shll
movsb
aam
adc
sub
rorl
out
adc
cwtl
add
sar
in
rorl
jns
sub
sti
mov
in
icebp
pop
sbb
sub
cs
movsb
mov
mov
popa
lock
dec
popf
gs
lock
call
popa
shr
add
pushf
cli
repz
xlat
xor
sub
aaa
xor
sub
push
xor
push
jmp
pop
xor
ret
sbb
imul
scas
push
pop
shl
and
popf
xchg
add
mov
sub
add
test
xchg
mov
inc
ss
xchg
leave
aaa
in
mov
jno
mov
mov
out
mov
ljmp
push
cmpsl
cmp
mov
sub
insl
pop
lods
xchg
push
add
mov
mov
jae
aas
in
dec
aaa
out
iret
inc
sbb
in
test
add
push
push
mov
std
pop
mov
xchg
mov
lcall
lea
lds
mov
jne
or
popa
jmp
fbstp
call
mov
xchg
aaa
mov
fs
test
popf
xor
lods
sti
push
cli
lret
ds
call
sub
and
es
das
sbb
cmp
jno
in
mov
push
mov
pop
lret
xchg
inc
pusha
hlt
mulb
sbbb
mov
sbb
xchg
mov
jle
mov
stos
dec
dec
repnz
mov
cs
loope
add
cmp
cmc
ret
cmp
aaa
and
and
push
sub
jnp
pop
push
test
dec
dec
jge
dec
lret
mov
ret
fsubrl
lods
test
dec
push
in
xor
addr16
adc
mov
sbb
pop
pop
iret
inc
xor
loope
sub
mov
push
inc
dec
pusha
xorb
or
dec
shll
push
mov
inc
loope
cmp
cwtl
xor
push
daa
and
in
in
and
jne
ds
push
insb
dec
jno
cmpsb
xor
pop
mov
mov
sub
jle
mov
sub
pushw
jp
mov
out
dec
xor
xchg
and
ret
daa
pop
icebp
aas
iret
rol
les
daa
mov
xchg
push
mov
mov
aam
xor
or
rolb
scas
inc
les
lock
rol
xchg
nop
ljmp
or
out
xor
pusha
enter
clc
imul
and
cli
jnp
push
inc
jno
popf
cltd
clc
jl
mov
dec
int
and
xchg
inc
cwtl
xchg
dec
pushf
sub
mov
jnp
or
or
shrb
lods
aaa
jne
jno
das
out
fbstp
test
out
sub
jbe
mov
xchg
jmp
jno
out
inc
mov
out
push
ja
sarb
jle
cwtl
mov
test
or
push
shl
rcrl
pop
aad
add
inc
cmpl
or
mov
jmp
insl
nop
mov
test
outsb
icebp
pcmpeqd
outsw
jle
cmpsb
or
cmp
jne
nop
test
or
mov
xchg
mov
push
mov
pusha
sbb
adc
xchg
stos
jecxz
int3
push
mov
add
in
cld
or
dec
dec
xchg
mov
push
adc
jmp
pusha
xchg
pusha
movsb
loope
lock
or
pop
add
pop
push
cmc
pop
dec
mov
add
aad
xor
pop
mov
es
xchg
pop
dec
in
fnstsw
sbb
jae
mov
dec
popf
lcall
insb
js
shr
cmp
andl
push
inc
adc
pop
sub
setge
int
or
and
and
dec
aaa
xchg
jmp
lea
inc
xor
call
js
jecxz
or
jo
cmp
imull
dec
out
das
or
xchg
xor
dec
sub
mov
es
pslld
jne
ja
cmp
mov
pop
sub
or
insb
mov
mov
or
leave
push
clc
and
orl
inc
mov
popf
and
mov
pop
test
mov
or
xor
fcmovne
inc
push
mov
test
mov
lret
out
add
push
lret
test
cmp
or
pop
das
xor
push
cwtl
jne
sbb
fbstp
fcomps
adcl
mov
jns
and
fnsave
out
inc
scas
push
dec
pop
std
lods
sbb
mov
jns
roll
enter
pusha
imul
xchg
pushf
cltd
sub
rclb
sub
imul
fsub
inc
push
int
sbbl
push
add
ret
and
pop
mov
cli
and
cmp
push
aas
loop
push
mov
mov
jge
movsb
add
shl
inc
push
mul
mov
icebp
mov
into
leave
pusha
xchg
ds
mov
lds
roll
mov
dec
push
daa
int3
nop
cmp
pop
xchg
adc
mov
mov
xor
pop
xlat
pop
cmpsb
cmpsl
out
cs
pop
daa
loopne
idiv
cwtl
mov
cld
mov
adc
jbe
loopne
fwait
int3
fs
and
and
cmp
aam
or
pop
xor
jne
sbb
js
and
inc
lret
ds
rcll
push
xchg
enter
icebp
dec
fmulp
pushf
lahf
xchg
adc
shl
test
sub
pusha
push
adc
dec
cmp
lahf
mov
scas
in
pop
pop
sbbl
lock
std
xchg
jbe
stos
gs
cmp
push
push
int3
and
push
test
add
aam
push
pop
nop
cli
sti
adc
imul
jno
negl
xchg
sbb
adc
or
sbb
push
cmp
pop
adc
cmc
push
add
dec
inc
push
insb
pop
sub
addr16
daa
in
inc
dec
and
sbb
mov
mov
mov
and
or
daa
sarl
mov
idiv
adc
mov
mov
shll
cmp
repz
mov
in
xchg
js
mov
jmp
aad
fmull
and
orl
adc
loop
mov
hlt
mov
add
je
test
mov
dec
outsl
fs
inc
mov
ret
fnsave
or
pop
insl
scas
cmp
cmp
adc
jbe
ret
mov
sti
js
repz
sbb
xchg
jmp
adc
cmp
push
insl
cmp
jb
sub
mov
adc
push
loopne
lret
out
and
addr16
or
lds
test
loope
push
insb
daa
int3
pop
iret
mov
enter
adc
xor
cmpsl
fidivs
in
mov
sahf
fisubs
xchg
popf
add
pop
pop
push
add
xor
jnp
mov
push
sbb
jp
loope
lods
insl
sbb
add
mov
mov
jecxz
arpl
cmp
pop
dec
jmp
scas
movsb
pop
adc
pop
mov
js
outsb
je
pushf
mov
sbb
dec
lcall
dec
addr16
adc
std
mov
cmpsb
call
dec
cwtl
jo
jmp
dec
int
mov
out
shlb
sub
mov
cmpsl
popf
and
cmp
icebp
jo
jb
pop
pop
sub
cmc
imul
push
mov
out
insl
daa
pusha
addr16
loope
mov
sub
loopne
ficompl
sti
jmp
nop
lret
pop
aad
daa
and
jl
xchg
clc
fldcw
xchg
sahf
mov
mov
add
and
imul
xchg
addr16
cmp
cwtl
and
ja
aas
sbb
sub
mov
mov
xchg
jae
dec
mov
jne
lea
shr
jg
dec
shll
shl
dec
or
insb
mov
sub
and
xchg
push
ret
or
and
mov
cs
inc
jo
nop
jb
std
jmp
ror
sub
fcomps
pop
sbbb
shrl
adc
je
cmp
pop
mov
iret
cmpsl
push
test
xor
inc
loop
or
cs
cmpsl
jg
push
jno,pt
cmp
adc
subb
das
mov
call
fwait
xor
mov
lock
pop
cmp
cmpsb
stos
sbb
pop
mov
nop
xchg
jl
loopne
leave
cmp
movsl
andl
lea
scas
cld
push
mov
dec
sub
jb
call
push
movups
andb
push
aas
ljmp
jae
imul
negb
adc
dec
ja
or
xor
aas
sub
out
xchg
imul
addr16
adc
subl
and
dec
mov
lret
lret
loop
sbbl
xchg
dec
fcoml
fsubl
inc
xchg
jae
mov
mov
clc
mov
mov
les
xchg
jo
jo
sti
mov
hlt
sbb
fld
xchg
pushf
rcrb
mov
sarl
pop
pop
push
adc
dec
inc
mov
mov
sahf
mov
scas
test
xor
xor
xchg
xchg
lock
jecxz
fs
mov
add
cwtl
movsb
sub
sbb
push
lea
icebp
jmp
mov
pop
call
pop
shlb
or
sbb
fists
shlb
dec
addr16
iret
xchg
arpl
jns
lcall
xorl
mov
sbb
pusha
into
cmpsb
into
repz
xlat
dec
mov
push
aam
push
mov
xor
les
movsb
je
lds
je
iret
cmc
mov
xor
adc
imul
imulb
cmp
or
sub
stc
imul
jno
fdivr
mov
fwait
sahf
xor
daa
sets
icebp
or
sub
leave
cli
jg
cmp
mov
push
cmp
mov
cmp
jge
jbe
dec
pop
xor
imulw
cmp
aas
test
mov
outsb
pop
or
push
xchg
dec
xchg
inc
mov
push
sub
push
mov
xchg
je
dec
test
lret
shlb
aas
ja
filds
movl
ja
sbb
push
cltd
fisttpll
jg
jl
xor
xor
enter
out
mov
jb
sbb
in
and
inc
xor
mov
xor
dec
cltd
and
arpl
ret
ja
xchg
dec
xchg
inc
sub
gs
adc
cmp
mov
cwtl
popa
xor
icebp
mov
arpl
or
cld
sbb
imul
dec
roll
dec
mov
add
sbb
or
pop
rcrb
pusha
out
adc
dec
std
xor
fwait
pop
jmp
pop
xor
xor
inc
ja
pop
mov
sarb
xchg
sub
xor
scas
mov
jbe
cmp
lds
stos
jle
mov
mov
mov
mov
les
mov
sub
orl
mov
stos
aaa
jp
ret
repnz
cmpb
xchg
cmp
cmp
call
adc
mov
pushf
ja
dec
test
int
mov
aaa
iret
jno
pop
xchg
cmp
cmp
hlt
xchg
in
mov
into
adc
mov
lods
insb
nop
push
and
clc
push
rorl
add
push
loop
pop
idivl
add
mov
data16
xor
and
xchg
call
dec
pop
scas
ror
cs
dec
in
or
or
adcb
jmp
pop
sub
adc
sbb
pop
mov
sub
pop
rclb
pop
mov
xchg
mov
stos
push
cmp
adc
push
adc
in
popf
jp
sbb
loop
jge
mov
fsubp
jno
daa
mov
repz
dec
lds
inc
lcall
movd
jp
jmp
jae
bound
adc
fucomi
stos
orb
mov
outsl
pop
mov
mov
push
or
xchg
adc
cld
xor
popf
xlat
sub
and
lahf
inc
in
loop
insl
mov
lret
cmpb
cmp
cmp
mov
sarl
dec
fwait
sti
adcb
add
cli
cmp
add
js
in
push
mov
mov
xor
mov
inc
out
inc
das
jb
nop
or
lea
inc
popf
sub
clc
ja
loop
pop
test
xor
gs
pushf
cltd
pushf
aam
ds
pop
daa
adc
inc
mov
clc
jp
or
xlat
inc
mov
cmp
ja
test
outsb
xor
insl
jbe
sub
cmpsl
ja
push
inc
test
out
sbb
xchg
jo
mov
inc
sub
pop
lret
and
outsb
dec
lods
or
sbb
outsl
xchg
mov
cmpxchg
push
out
xchg
inc
and
nop
sbb
mov
mov
mov
test
or
mov
js
icebp
mov
push
and
sub
jne
lods
lahf
adc
cmp
sbb
leave
xor
mov
cltd
cs
rol
jno
sbb
movsl
jbe
push
scas
and
pop
stos
xchg
in
imul
mov
push
jmp
in
or
lahf
loop
xchg
lods
js
int
mov
pop
mov
lods
pop
cmc
add
mov
call
mov
xlat
sub
test
pop
aaa
andl
jmp
sub
xor
fnstsw
ljmp
lock
scas
icebp
icebp
call
mov
sbb
loopne
mov
and
mov
std
jg
jg,pn
xor
xchg
mov
inc
test
inc
xchg
scas
jl
inc
rorl
jb
test
and
jns
dec
adc
in
scas
orb
mov
xchg
fs
rcrb
divl
ret
adc
sbb
leave
mov
mov
cmp
pop
cld
aad
scas
stos
cmp
js
ljmp
iret
mov
mov
aam
dec
scas
adc
push
adc
ja
pop
and
jg
fnstcw
outsl
xchg
clc
pop
cmp
cmp
push
and
xchg
icebp
mov
fucomip
adc
popf
pop
push
mov
andl
ds
aam
cli
mov
add
ret
fsubs
pop
sahf
push
cmpsl
mov
mov
mov
and
in
adc
das
mov
insb
mov
and
jle
int3
lock
mov
stc
repz
ds
jmp
ror
into
cwtl
dec
push
or
mov
adc
popf
out
out
or
filds
jns
jg
mov
mov
lcall
dec
pop
lock
sbb
aad
ret
daa
adc
andl
adc
sbb
nop
pop
sbb
mov
sub
mov
inc
or
icebp
adc
ljmp
loopne
ret
or
pop
push
sub
testb
xchg
in
push
aas
outsb
sub
xchg
push
gs
or
repz
idivl
jo
stos
jmp
roll
sbb
push
lea
nop
xlat
enter
push
popa
cmp
mov
push
jno
cwtl
je
mov
rcrl
je
pop
movsl
adc
movb
out
in
or
int3
push
push
xchg
adc
push
xchg
and
mov
sub
rcrb
adc
cld
pop
imul
mov
adc
movb
bound
cmpsl
jg
push
jb
add
aaa
add
add
jp
enter
mov
or
cli
stc
cmp
testb
pop
ret
xor
adc
push
xchg
mov
add
cmp
pop
and
in
pop
fbstp
out
mov
adc
idivb
or
call
loop
ror
pop
sarb
add
fnsave
inc
in
insb
fisttps
push
inc
popf
sub
jae
push
pop
sbb
call
faddl
imul
xchg
mov
jmp
cmpsb
insb
leave
and
mov
test
aad
xchg
nop
movsb
xlat
movsb
push
outsl
jle
adc
test
push
sbb
jmp
clc
popa
pop
sbbb
das
sahf
insb
xorb
dec
sbb
out
aaa
test
push
jb
mov
ret
mov
inc
and
mov
and
rcrb
xchg
pop
xor
rcl
test
add
pushf
jns
inc
fdivrs
mov
and
pop
add
test
cs
dec
cli
and
xchg
and
pop
and
loop
jecxz
data16
loope
adc
cwtl
push
test
hlt
sti
hlt
add
hlt
add
jle
hlt
xchg
xor
mov
cltd
jnp
flds
pushf
call
pushf
jl
aaa
sub
push
movsb
sti
cmc
mov
dec
mov
pop
cs
cmp
mov
repz
je
fisttps
idiv
loop
pusha
test
je
mov
repnz
mov
xchg
xor
gs
int3
ffreep
imul
sbb
cmpsl
sbb
xchg
or
jb
xchg
sub
xor
movsl
test
add
mov
aaa
cmp
in
mov
sbb
inc
ret
and
shr
shll
out
mov
das
imul
add
ds
sar
inc
sahf
sub
loope
nop
shrl
jmp
adc
fwait
cmp
dec
push
gs
ja
push
sbb
int
cmp
adc
repnz
hlt
inc
cmp
movsl
cs
ja
mov
xchg
jno
lds
xchg
mov
popf
cmp
out
loope
movzbl
mov
dec
pop
out
es
cmp
jb
sub
cwtl
push
pusha
fwait
lods
ljmp
xchg
push
jg
jp
adc
xor
fdivs
push
scas
js
pop
mov
sub
mov
scas
in
dec
sub
scas
pop
sbb
sbb
aad
jns
divb
aaa
lea
pop
mov
jo
test
fs
fists
and
cmp
lret
nop
out
scas
sbb
mov
sbb
sub
jo
dec
lcall
xor
mov
inc
repz
loopne
inc
popa
ficomps
fsubr
jo
test
add
and
push
xchg
fsubrl
push
add
dec
add
pushf
out
jge
xchg
js
adc
addr16
sub
push
and
pop
aaa
lret
subb
aam
mov
xchg
pop
or
int3
and
hlt
int
pop
es
aas
outsb
mov
cmp
pushf
loop
ficomps
add
dec
push
stos
xchg
shrb
sbb
in
notb
inc
and
add
sahf
sbb
inc
mov
in
mov
sbb
lahf
pusha
adc
and
jo
and
mov
sub
sub
fidivs
cmc
stos
mov
jp
xor
xchg
pop
pushf
push
mov
mov
lahf
cmp
popf
outsl
and
push
fwait
push
or
adc
xchg
fwait
shlb
cmp
xor
lret
pop
fdivrs
lcallw
cmp
imul
loop
hlt
pop
xchg
jbe
aam
jbe
xor
pop
dec
test
xorb
jns
outsl
cwtl
pop
inc
dec
cmp
out
cs
dec
push
jge
cwtl
js
xchg
fsubr
scas
add
mov
sub
xor
lods
cmp
ficoms
rcrl
cmp
jmp
xchg
xor
xchg
cwtl
fdivrp
scas
mov
dec
int
arpl
lret
or
cmovnp
lret
jecxz
in
dec
mov
out
xorb
or
sbb
fbld
fwait
or
sbb
out
repnz
subl
test
cmpsb
and
sub
fsub
movsl
xchg
push
test
pop
fsubrl
arpl
arpl
push
cmp
outsl
sub
jge
add
in
sub
sbb
das
in
lret
rolb
rcrl
fldenv
sbb
push
mov
cmp
lret
jle
xor
push
push
ret
lret
mov
mov
jne
scas
sub
dec
sub
jo
jle
js
repnz
pusha
jbe
push
pop
push
or
loopne
and
das
push
mov
mov
dec
mov
repz
in
cld
pop
fs
stc
lds
int
xor
and
jecxz
pop
cmpsl
icebp
dec
push
sbb
fwait
cmp
mov
out
imul
mov
out
aas
pop
cmp
arpl
gs
ja
and
and
aaa
push
scas
insl
arpl
inc
dec
pop
sub
in
mov
lret
lret
xor
fadds
mov
jne
mov
out
jne
leave
int3
sbb
fiadds
inc
or
imul
fldt
fnstcw
mov
adc
and
add
es
aad
push
mov
js
adc
push
mov
pop
add
cli
bts
mov
xor
push
jmp
out
xchg
fdivs
jecxz
shll
push
push
stc
lret
mov
test
mov
lock
test
in
fiadds
push
dec
call
cwtl
imul
pop
or
je
push
mov
dec
cmc
fldenv
addr16
dec
xlat
or
cmp
testb
push
mov
test
cltd
add
lahf
les
jnp
repnz
xlat
pusha
mov
fwait
xchg
pop
lret
arpl
cmpsl
pop
jp
and
rcrl
shll
add
pop
xor
dec
add
and
jle
sti
cmc
mov
and
mov
or
invd
scas
aas
in
add
scas
jp
test
jo
jno
and
hlt
inc
movsl
push
xchg
pop
popl
jbe
push
sbb
cmp
and
fst
mov
call
jbe
mov
popf
stc
jno
mov
add
call
das
xchg
push
jmp
adc
out
mov
imul
pop
sub
scas
lods
sahf
xchg
testl
sbb
test
out
ss
data16
pushf
jns
scas
imul
dec
xchg
pop
mov
movsl
fmuls
rcll
mov
xchg
addb
daa
jmp
out
push
je
jg
and
imul
push
push
mov
cmc
fsubrl
cltd
repnz
daa
sahf
sub
inc
jb
add
cmp
push
dec
and
sub
push
fcomps
pop
dec
imul
cmpsl
mov
into
ja
fstpl
ja
inc
mov
and
pop
stos
out
mov
mov
ljmp
jmp
mov
sub
push
bound
sub
or
mull
inc
adc
loope
xchg
iret
aam
cld
insb
jl
add
mov
mov
ljmp
or
inc
cmc
out
inc
ljmp
dec
xor
fnstenv
or
fisttps
pop
xlat
out
sti
cmpsb
popf
loope
ljmp
insb
int
push
call
fldcw
inc
or
mov
push
aam
jecxz
daa
mov
xchg
add
mov
leave
ss
cmp
out
jge
xchg
dec
dec
mov
xor
fwait
notb
cmc
nop
orl
push
xchg
shrb
cltd
repnz
inc
jl
test
sbb
sbb
add
pop
mov
les
xchg
shrb
cld
fimuls
test
mov
aaa
mov
rol
aad
jg
xchg
and
pop
test
cs
imul
dec
stos
out
jne
or
loop
and
cmp
scas
inc
aaa
xlat
out
or
push
addr16
pop
sub
andl
test
mov
ds
mov
aaa
push
clc
int3
xchg
or
mov
lcall
in
outsl
out
pop
sbb
stc
sti
mov
and
stos
lret
mov
cmp
push
jle
inc
jnp
out
mov
shrb
push
cmpsl
xchg
in
xor
cmpsl
mov
int3
mov
xor
mov
jno
mov
inc
xor
notl
lcall
popf
loopne
jnp
sahf
into
loope
add
pop
cmpsb
fwait
cmp
mov
insb
fldt
sarl
fwait
jno
add
mov
call
xchg
shl
int
mov
mov
sbb
jae
loop
dec
mov
dec
mov
stc
std
sbb
lahf
push
lcall
fcomps
cmp
mov
std
stc
jl
aam
or
adc
add
sub
lea
jp
call
inc
mov
in
mov
and
pop
and
cwtl
push
xchg
dec
push
cmc
cmp
es
dec
ja
push
push
insb
jbe
or
dec
arpl
sahf
int
add
sbb
xchg
fmull
ret
shll
mov
pop
mov
scas
jecxz
test
ds
cmp
nop
bound
stc
mov
cs
xor
or
outsb
imul
outsl
xchg
mov
jmp
cmc
call
inc
shll
sub
scas
in
pusha
add
sti
push
xchg
divl
movb
cmpsb
sbb
nop
xor
je
mov
push
dec
cmp
iret
pop
cltd
mov
sbb
mov
loopne
xchg
adc
or
push
cwtl
cmp
loop
mov
arpl
dec
sbb
fs
xchg
mov
cltd
mov
add
push
nop
jns
sub
mov
or
dec
repnz
adc
sub
pop
dec
iret
mov
jp
push
es
mov
lcall
aad
int3
cwtl
adc
dec
ret
mov
or
jg
xchg
jne
stos
test
stc
cmp
sbb
pop
into
pushf
int3
test
movsb
jns
fstpl
es
scas
outsl
mov
mov
icebp
div
cmpsb
leave
test
lods
jl
orb
push
test
mov
cs
add
repz
and
inc
popa
sti
push
adc
ret
and
jecxz
std
push
fnsaves
and
inc
icebp
clc
outsb
mov
mov
mov
push
rcll
pop
fwait
data16
xchg
adc
movb
sub
mov
jae
leave
mov
jns
in
cmp
dec
fmuls
data16
in
call
push
pop
xchg
inc
inc
cmp
sub
sbb
fs
push
add
or
fidivl
testb
pop
jmp
cmp
add
add
or
adc
cmp
or
sub
inc
mov
lods
sbb
push
aam
test
clc
pop
xchg
xor
call
xchg
jl
addr16
pop
cltd
rcr
mov
test
and
xor
addr16
pop
and
mov
fs
faddl
xchg
insb
test
out
mov
cmp
mov
or
mov
add
jecxz
sbb
popf
js
shrb
movsb
mov
pop
fptan
dec
clc
push
mov
jo
and
fs
and
ja
add
pushl
ds
aas
push
mov
out
inc
pop
sub
mov
mov
add
dec
idivl
and
inc
jle
idivl
int
insl
xor
cmp
inc
ds
nop
inc
xlat
mov
in
mov
shlb
jbe
dec
sub
cltd
dec
push
les
loopne
lds
xor
xor
lds
sarl
std
push
in
xchg
loopne
subb
addl
pop
cmc
pusha
cmp
pop
sbb
xchg
in
ljmp
add
sti
dec
clc
loop
sub
cmpsl
mov
pusha
insb
inc
mov
pushfw
push
jns
neg
test
stos
int3
pop
cmp
xlat
iret
bound
xchg
sbbb
jmp
sub
adc
jmp
or
in
popf
scas
mov
in
sub
and
pop
and
pop
cld
cmc
or
frstor
or
pop
fstl
jae
mov
jae
push
stc
sarl
aam
xor
nop
imul
adc
into
dec
or
push
cmpsb
push
and
call
push
mov
cs
outsb
jecxz
ret
push
nop
cltd
int
xchg
pop
and
cmc
or
push
testl
xchg
loopne
sbb
cld
mov
imul
mov
cmp
rcr
repz
push
cmc
or
adc
mov
hlt
dec
in
dec
inc
dec
cld
jg
enter
loopne
dec
adc
in
push
pop
addr16
dec
push
sbb
mov
adc
fimuls
fisubl
dec
sbb
and
mov
sahf
pusha
inc
push
out
jge
jb
dec
ss
mov
or
jno
or
js
js
leave
mov
call
pop
or
int3
movsl
imul
push
mov
in
test
repz
daa
adc
shrb
fldcw
stos
cmp
jp
and
les
std
enter
insb
int
mov
ds
sbb
js
mov
shll
lea
stc
jbe
in
sub
dec
xor
stos
jae
sub
cmpsb
mov
xor
xlat
je
jne
shrb
cmp
lods
add
mov
es
fldcw
jns
fwait
scas
idivb
push
aam
and
add
push
lds
inc
aaa
nop
sbbb
js
mov
pop
inc
stos
or
outsb
push
jne
xchg
jne
int3
mov
fidivrl
xor
cmpsb
pushf
push
sub
xchg
sahf
loope
popf
xchg
int3
clc
sub
push
push
imul
push
xor
pusha
lret
fsts
dec
xor
fstl
mov
daa
push
mov
scas
push
mov
push
out
or
int3
pusha
gs
mov
lea
lcall
test
push
or
dec
jno
xor
fs
data16
pop
add
movsb
xrelease
pop
xor
out
pusha
xchg
aam
mov
out
xchg
andl
inc
test
movsb
std
arpl
jecxz
pushl
xor
lret
xchg
or
mov
or
rorl
and
mov
sbb
cmp
fstpt
xor
cltd
sub
xchg
clc
and
lret
lds
push
in
jge
lcall
sbb
add
cmp
inc
pop
adc
and
lahf
cmc
xchg
mov
lret
and
aam
mov
sbb
jns
mov
or
in
pushf
push
add
fldenv
adc
into
inc
decb
push
insl
lret
cld
stos
inc
je
subb
sbb
mov
xlat
add
dec
cmp
outsb
or
push
scas
daa
mov
inc
or
pop
mov
mov
mov
fs
adcl
xor
jle
mov
imul
movsl
cmpl
push
arpl
jne
ficoml
and
xchg
xor
or
mov
fdivs
push
push
xor
mov
adc
push
jb
sbb
sti
mov
inc
jle
cmp
stos
mov
popf
pop
into
xchg
mov
lret
ljmp
into
add
pop
xchg
and
adc
mov
inc
test
mov
mov
scas
mov
dec
rcl
xchg
test
sub
add
jl
insb
push
int3
repz
jp
mov
out
movsl
xchg
jmp
fstpt
dec
mov
inc
push
lods
roll
mov
jle
out
mov
data16
push
mov
outsb
js
add
cltd
in
mov
push
push
xchg
es
xor
stc
out
jno
mov
xchg
mov
mov
adc
ror
and
mov
cli
inc
sarb
xchg
out
or
push
sub
cmc
movsb
cli
sbb
imul
nop
push
fs
aad
pop
int3
sbb
sub
mov
gs
add
mov
push
addr16
fcmovnbe
xchg
cmc
and
xchg
sbbl
in
imul
pop
pushf
xchg
jp
xchg
out
fisubl
mov
mov
jle
push
mov
cld
cmpsl
xchg
push
jns
inc
out
rol
mov
insb
pop
xor
popf
dec
enter
jnp,pt
mov
cwtl
inc
cltd
ja
divb
pop
nop
dec
pop
adc
mov
and
pop
pop
mov
pop
sub
jnp
jo
inc
sub
call
push
inc
inc
mov
or
fwait
xor
cwtl
dec
dec
out
pop
int3
xor
xor
push
mov
mov
sub
popa
xchg
pop
push
pop
push
les
add
mov
cmp
sub
imul
cmovno
int
xchg
mov
mov
call
sub
sbb
add
cwtl
into
fwait
scas
cs
mov
leave
movsl
pop
out
rcrb
out
in
mov
pop
inc
cmp
dec
mov
jno
push
fcompl
aam
xchg
pop
in
sbb
repz
dec
hlt
out
shl
dec
ret
push
aad
or
pushf
xchg
int3
shll
sbb
pushf
gs
bound
sub
and
call
idiv
lea
outsl
inc
dec
sti
cwtl
mov
popf
in
sub
leave
ja
xchg
and
ja
dec
cmp
xchg
dec
pop
mov
mull
inc
ror
fldl2t
aam
push
pop
push
ljmp
movsb
mov
mov
out
stos
fnstcw
das
add
mov
inc
xchg
xchg
rcll
icebp
sbb
xor
sbb
sti
pop
fdivl
nop
pop
fists
ljmp
fstl
push
xchg
and
jmp
jb
inc
aaa
and
outsl
repz
mov
pop
pop
mov
fisttpl
push
rcrb
and
mov
push
enter
lods
and
dec
into
adc
subb
jmp
jb
js
pop
mov
pop
movsb
addr16
cmc
das
in
sbb
sub
add
loop
outsl
mul
add
mov
mov
or
leave
sbb
jl
icebp
icebp
scas
pop
cmpsl
popa
movsb
sarl
add
sahf
cltd
or
cmpsb
mov
jae
mov
or
mov
icebp
int
mov
xor
add
dec
dec
or
mov
push
jb
in
dec
push
pushf
mov
mov
mov
ja
jg
push
out
xchg
mov
cmp
cwtl
fiaddl
pop
cltd
push
repz
sbb
rcrl
imul
sub
test
add
in
push
scas
sarb
lret
mov
and
insb
pop
loope
mov
pop
pushf
int
cli
ds
imul
and
leave
xor
call
cmp
fcom
pop
add
xchg
push
pusha
mov
outsl
mov
lret
adc
push
dec
cmp
bound
jp
add
lret
pop
dec
sub
dec
popa
mov
mov
rclb
stos
jne
inc
xchg
mov
sbb
mov
call
inc
rcl
lret
shlb
fadds
or
gs
jecxz
ljmp
mov
faddl
dec
nop
outsb
xchg
pop
mov
mov
jb
fucomip
fsubrl
mov
mov
icebp
lahf
and
fbstp
inc
pop
inc
lcall
push
mov
popf
jns
popf
stos
xchg
cmpsl
mov
fnsave
pop
cmpsb
pop
jmp
sub
cltd
and
and
cmc
iret
test
mov
imul
faddl
out
cmpsl
adc
jecxz
loope
inc
push
mov
ljmp
add
mov
pop
stc
pop
add
pushf
and
jne
out
lock
and
push
pop
cmp
cmp
ds
pop
xlat
cmpsb
adc
vphaddubw
jne
clc
out
adc
sti
orb
ret
dec
sbb
in
out
push
xchg
int
js
jge
inc
sbb
dec
subb
mov
dec
scas
sbb
stos
mov
jno
lret
dec
out
aam
mov
mov
rcr
lahf
in
cmpsl
mov
mov
lds
mov
xor
dec
icebp
cs
int
daa
stos
adc
sarb
fs
aas
int3
stos
in
xor
mov
aad
imul
push
jl
jb
fstps
insb
aad
cmc
push
xor
xor
pop
shll
or
stos
cmp
jo
mov
pushf
sbb
out
dec
ds
call
int
ss
gs
imul
out
dec
jns
pushf
fsubrl
pop
push
sub
or
popa
pop
mov
xchg
neg
in
loope
sbb
out
int3
mov
jp
cmp
push
sub
dec
jb
pop
mov
pop
sbb
hlt
xor
aad
cmp
and
or
out
les
cmpsb
insl
enter
lods
loopne
pop
xor
int3
pushf
cmpsb
cmpsb
jb
fists
jg
call
pop
mov
leave
push
pop
in
negl
inc
movsb
cmpl
or
jnp
cmp
xor
icebp
sbb
dec
int
fnsave
fs
insl
mov
jb
std
popl
xor
addl
sbb
roll
add
lea
int3
pop
mov
sub
and
jno
cltd
icebp
adc
pop
bnd
scas
pop
dec
xor
mov
xor
stos
adc
sub
mov
icebp
jle
mov
pop
fstps
shlb
push
ret
add
pop
mov
mov
mov
jne
sbb
sbb
add
mov
sbb
mov
in
push
fcompl
lret
pop
cwtl
ja
fsts
fdivrl
inc
loope
sub
adc
add
cld
push
inc
test
rol
adc
aaa
xor
jo
pop
sbb
mov
sub
lock
jo
test
pop
push
mov
cmpsb
arpl
inc
xchg
sbb
sbb
cmp
adc
cmpsb
fisttpl
cmp
hlt
dec
sbb
inc
push
xor
push
sarb
shll
movsb
sub
insb
cmpsb
cmc
out
jns
or
and
enter
into
cmp
cmpsb
hlt
inc
lahf
mov
push
mov
cmp
in
xor
sub
mov
aaa
mov
pusha
jge
add
cmp
cld
xchg
cmp
push
xor
adc
roll
mov
data16
movsl
sub
les
dec
cmp
mov
loopne
imul
mov
pusha
jge
push
sti
iret
mov
les
arpl
xorb
sbb
call
in
mov
xchg
aaa
adc
mov
jg
xor
sub
xchg
xchg
adc
mov
es
lret
or
add
xchg
cld
lret
jp
adc
mov
pop
inc
push
mov
test
test
push
sahf
pop
outsb
loop
mov
xchg
sub
mov
ja
sbb
mov
fcompl
roll
hlt
xlat
ja
adc
lods
imul
into
jne
inc
sbb
sub
stos
daa
ret
xor
mov
fnstsw
mov
es
orl
lods
gs
jnp
push
data16
rcl
in
aad
int
in
adc
cmp
stos
jne
xor
dec
mov
in
scas
js
cltd
pop
mov
push
sti
jae
add
pop
pop
jmp
add
or
jns
mov
nop
dec
add
ret
xchg
sub
dec
roll
mov
jae
int
aad
rcll
ljmp
mov
sbb
cli
mov
push
sub
lret
sub
sbb
repz
inc
mov
dec
sbb
push
cmpb
in
xchg
xchg
pusha
jbe
test
repnz
dec
and
xchg
je
mov
aas
sub
dec
mov
xor
cs
jo
inc
mov
mov
inc
inc
pop
or
jmp
push
pop
and
jecxz
movhps
or
pop
test
xchg
lds
inc
inc
es
mov
lret
out
xor
jbe
adc
sbb
arpl
arpl
fisttps
push
lods
xchg
ficoms
jns
inc
fsubs
mov
push
ds
cmc
das
call
jp
cltd
mov
popf
pop
jb
hlt
ljmp
pop
iret
inc
lds
sub
fldcw
movb
mov
sbb
mov
xlat
adc
ljmp
jb
mov
lock
lock
cmp
or
lret
xchg
add
js
push
aad
or
movsl
into
mov
nop
pop
jae
mov
add
dec
pop
dec
dec
and
mov
out
enter
adc
push
pop
sarb
push
add
test
xchg
and
mov
stos
mov
loopne
insb
stos
les
sub
xor
adc
and
repnz
jmp
xor
and
sub
inc
std
sub
push
lea
fisubl
cmp
push
pop
leave
and
pop
out
sti
sub
sub
ja
xor
dec
pop
pop
outsb
cmpsb
mov
inc
cmp
jge
hlt
dec
inc
pop
xchg
jle
fnstcw
cmp
xor
pop
pop
inc
outsb
mov
push
pop
es
inc
in
scas
inc
stos
pop
test
cmp
sbb
int3
std
fxch
adc
jb
bound
or
insl
push
pop
push
ds
xchg
mov
cld
inc
std
imul
sub
popa
adc
clc
inc
sub
or
es
leave
sbb
les
or
shr
lods
in
imul
dec
stos
mov
gs
mov
dec
aam
jb
out
int
add
in
xor
mov
negl
xchg
loopne
pop
push
in
stos
pop
dec
mov
inc
insl
inc
adc
movsb
ret
loopne
mull
inc
xchg
mov
xchg
jp
out
stos
adc
xor
or
mov
sti
jns
andl
push
lret
orl
dec
test
cltd
pop
jmp
cmp
negb
sub
xor
xchg
fsubl
stos
xchg
in
mov
cmp
pop
outsb
mov
xor
ljmp
add
fstpl
cmp
sti
in
pop
xor
xor
data16
insb
jle
ret
mov
cmp
or
ret
push
adc
jbe
loope
das
push
push
pop
add
js
cmp
push
dec
and
sbb
aaa
popa
aaa
push
mov
inc
pushf
pop
cwtl
add
sub
inc
call
jno
loop
in
or
stos
xchg
add
push
jle
bt
mov
fadd
in
mov
inc
ret
in
test
inc
fwait
jae
int3
push
movsl
faddl
mov
or
xchg
sti
push
adc
cmp
andb
insb
in
mov
jp
jl
jae
fsubr
out
in
inc
test
mov
adc
adc
popf
dec
and
xor
data16
inc
push
mov
notl
ljmp
cmp
test
nop
pop
add
push
jge
inc
ljmp
das
repz
xor
ss
orl
repnz
cli
aas
sbb
sbb
arpl
aas
les
lcall
out
ja
jns
cmp
sbb
mov
and
or
mov
mov
lods
imull
jecxz
andl
dec
xlat
pop
sti
sbb
sbb
pop
ja
and
xchg
xchg
pop
std
push
lret
outsb
jno
adc
iret
mov
fimull
jbe
or
cld
and
adc
mov
loope
jl
int3
roll
testl
adc
sub
push
mov
cmp
mov
cmpb
or
mov
mov
fcmovb
enter
xor
aam
ljmp
enter
cmp
add
xchg
mov
xor
rcll
cmp
inc
aam
sub
mov
loope
cmp
pop
fiaddl
in
jp
cmp
and
jl
xchg
in
aam
xor
cltd
pop
iret
jmp
ljmp
or
inc
sbb
inc
mov
jne
push
clc
enter
stos
pop
inc
sub
pop
loop
dec
or
fcoml
add
and
fcompl
xor
xchg
clc
loop
adc
sub
lods
test
test
pop
add
xchg
sbb
mov
xor
jmp
mov
jmp
xor
adc
mov
es
add
flds
push
push
dec
dec
push
add
and
xchg
repnz
insb
mov
sub
call
jg
push
dec
xchg
imul
and
loopne
xor
jl
imul
das
pop
rol
adc
add
or
subl
dec
inc
jecxz
cmp
pop
cwtl
mov
ror
mov
lret
loopne
cwtl
gs
mov
rcl
mov
pusha
dec
mov
mov
addb
sub
push
js
inc
adc
fistpl
xchg
ficompl
mov
inc
daa
sub
repz
rcll
dec
mov
imul
jmp
and
jne
enter
std
dec
stos
in
dec
xchg
mov
or
pop
scas
xchg
xchg
cltd
in
dec
cmp
dec
dec
mov
pop
rcrb
xchg
fistl
push
xor
and
sbb
or
add
add
cmp
push
nop
lods
mov
pop
jl
test
loopne
stos
mov
mov
daa
xchg
push
mov
mov
into
test
push
mov
mov
dec
aaa
ret
cmp
mov
dec
hlt
cmp
shlb
pop
les
imul
push
xchg
lea
iret
mov
mov
jmp
fsts
inc
daa
das
jge
movsl
fadd
push
pop
repnz
fcmovnb
lds
cmp
dec
and
fildl
cmp
es
inc
or
fldenv
in
dec
xor
lods
call
iret
scas
fcoms
add
cmp
push
ds
repnz
js
nop
movsl
sbb
sub
es
das
inc
arpl
ret
in
mov
movsl
sub
bnd
les
jnp
out
jg
xchg
jne
call
int
stos
in
jns
pop
inc
daa
lock
dec
push
int3
fwait
idivl
rolb
mov
out
pop
fnstcw
repnz
ret
or
jnp
mov
push
out
imul
mov
clc
popf
push
adc
lret
sub
in
jne
stc
mov
lods
xor
ljmp
pop
sub
mov
push
adc
movsb
loope
aam
popa
shlb
movsl
pop
sbb
push
cmp
jnp
xchg
pop
daa
sbbb
inc
jae
mov
push
push
out
add
ret
sbb
imul
adc
shlb
dec
in
mov
and
rcr
fsubs
outsb
repz
aaa
and
mov
in
pop
sahf
xor
sarb
mov
pop
outsl
xor
pmaddwd
scas
push
test
lcall
popf
int
fstl
add
push
mov
sbb
jbe
cwtl
leave
icebp
popa
sub
push
ds
push
xchg
cli
cltd
push
mov
or
mov
mov
shr
xchg
xchg
jg
lret
push
add
clc
in
mov
test
orl
arpl
add
push
insb
sbb
add
mov
push
fnstenv
mov
cmp
cmp
repz
push
sbb
lahf
xor
imul
popa
pusha
mov
cltd
iret
fwait
mov
int
mov
inc
pop
scas
stos
hlt
push
sbb
sub
divb
or
ret
stos
scas
dec
cmc
adc
push
call
push
push
dec
pop
pushf
pop
aaa
jne
ljmp
pop
dec
fwait
sub
pop
test
xor
cmp
movntps
push
fldt
cmp
out
inc
adc
neg
inc
sbb
ss
out
scas
xchg
movsl
cmp
add
push
das
xchg
pop
lods
sbb
fs
cmp
lds
xchg
loope
xor
jo
adc
xchg
pusha
mov
mov
sarb
and
int
bound
xchg
mov
mov
stos
sbbb
stos
pop
into
push
cltd
loopne
stc
inc
es
mov
out
add
mov
repz
sub
mov
jg
xor
inc
and
pop
leave
mov
mov
outsb
icebp
in
jbe
push
xlat
pushf
arpl
lret
cmpb
out
mov
popf
mov
outsl
out
mov
cmpsl
lea
in
in
inc
pop
and
push
pop
sub
int3
sbb
mov
pop
inc
ja
das
adc
stos
jmp
cltd
imul
jl
adc
lcall
mov
jo
cld
push
pop
pop
jae
in
jb
xor
sbb
pushl
push
or
ret
or
jne
inc
fnsave
adc
push
adc
ja
inc
scas
dec
jns
iret
lahf
or
pop
cmpsb
or
and
test
mov
push
push
jb
daa
pop
movsb
jns
stos
xchg
jp
in
sub
filds
xchg
xor
cmpl
lods
rolb
push
lcall
cmp
loope
fadd
sbb
jne
imul
test
mov
mov
incl
jo
push
insb
push
and
repz
out
jp
mov
sti
pop
int3
jmp
xor
int3
movsl
loope
mov
or
lret
inc
shrl
push
cmpb
nop
dec
ret
loope
int3
es
nop
adcb
sbb
rorb
push
rorb
dec
pop
inc
xor
in
cmp
xor
std
aaa
xchg
popf
enter
jbe
lcall
insl
or
jg
sub
mov
mov
cld
push
xchg
iret
xchg
mov
cmp
stos
mov
pop
out
sbb
loope
inc
push
lods
pop
sbb
mov
ljmp
inc
pop
mov
pop
lds
add
cmp
lahf
je
dec
sub
sbb
mov
sbbb
xlat
bound
mov
gs
addl
mov
xor
dec
aad
mov
xor
fs
imulb
or
xor
xor
ja
adc
push
inc
jecxz
dec
xor
stos
stos
fistpll
sbb
cmp
out
mov
or
push
lahf
push
push
xor
xchg
fsubl
dec
sub
sbb
loop
rcl
xchg
push
mov
push
mov
jecxz
dec
jbe
call
popf
sbb
dec
sbbl
sub
jecxz
or
aad
xchg
shll
call
pop
inc
cmp
push
mov
push
jmp
in
push
adc
jns
rorl
outsb
sbb
in
xor
scas
mov
mov
cmp
addb
fbld
bound
shlb
mov
cmp
xchg
sub
mov
das
add
fdivs
outsl
mov
push
dec
int
fmul
sbb
xchg
jg
sbb
hlt
push
sub
in
aaa
lods
xchg
mov
sar
ret
sub
xor
xor
popa
mov
and
xor
test
pop
fs
ljmp
leave
lds
mov
or
jl
and
or
cltd
mov
inc
mov
or
inc
mov
xchg
mov
ds
lret
xchg
inc
dec
adc
mov
ror
mov
loop
push
adc
pop
cmc
adc
clc
sub
out
mov
push
pop
and
lods
cmp
mov
mov
ja
fs
es
stos
inc
pop
sbb
adc
cld
jmp
arpl
fs
jmp
sbb
inc
sub
lret
in
ljmp
push
push
mov
addb
push
mov
hlt
std
push
arpl
es
cwtl
and
andb
inc
pop
adc
stos
insb
bound
dec
or
loop
xlat
adc
aam
arpl
pop
jbe
push
in
out
rcr
mov
mov
loop
inc
cmp
jmp
xchg
inc
cltd
pushf
add
jbe
mov
mov
dec
sub
int3
cmpb
cmc
mov
out
mov
sub
out
in
popa
imulb
xor
mov
xor
sub
mov
sbb
mov
or
xor
into
fdivp
mov
out
or
sbb
fdivr
cmp
shl
pop
mov
pop
jmp
fisubs
jo
cmc
ljmp
push
mov
sub
xchg
aas
pop
je
sub
cld
lds
dec
arpl
rcll
jle
lret
xor
out
aad
fwait
add
negl
sahf
cmp
fidivl
sarb
pusha
xor
add
add
sub
je
jge
movsl
mov
add
outsb
iret
iret
mov
jmp
adc
add
lcall
jnp
enter
sub
scas
shl
enter
xor
outsl
stos
mov
out
aad
out
sub
xor
ljmp
movsb
cmpsb
enter
adc
push
pop
cmp
pop
dec
sub
sub
sahf
or
cmp
or
outsl
mov
push
hlt
pop
imul
test
jbe
and
popa
aad
lods
outsl
xchg
cmp
xchg
sub
cmp
outsb
sub
inc
fdivrp
rcr
xchg
stc
xchg
or
rcrl
xchg
sbb
cltd
mov
sbb
mov
sbb
insb
push
popf
es
push
adc
cld
add
mov
scas
fmuls
push
in
repnz
dec
and
jns
inc
sbb
stos
out
mov
jp
sbb
add
jg
fildll
add
push
xor
aaa
cmpsb
pop
out
enter
pop
icebp
mov
aas
into
mov
sub
bound
add
or
inc
sub
xchg
sbb
adc
push
std
push
mov
sub
pop
pushl
stos
out
in
es
mov
add
out
push
xor
les
mov
inc
mov
sbb
dec
mov
xchg
fmulp
jae
sbb
nop
jg
lcall
mov
cmpb
jns
cmp
push
jns
fistpl
repz
and
lahf
jg
movsb
jne
mov
pop
int
xchg
adc
sub
leave
add
cmpsb
adc
loope
or
sub
call
pop
mov
lock
mov
pop
pop
and
loop
pusha
and
jne
in
sub
and
push
pop
aaa
add
jns
add
movsl
out
cmp
pusha
xchg
add
or
mov
or
ret
mov
add
dec
mov
mov
pop
jne
mov
insl
outsl
and
adc
out
shlb
sti
pushf
ss
loop
fcomps
jns
cmp
insl
xchg
xor
movsl
mov
in
lods
sbb
and
xlat
pop
test
bnd
mov
enter
iret
push
repnz
and
fucomip
and
es
loop
aad
jbe
adc
xor
ljmp
out
mov
ret
and
cmpsb
icebp
jmp
cwtl
jl
adc
cmc
cmc
xor
shr
mov
cwtl
fidivs
mov
andb
out
push
push
mov
adc
mov
fildll
mov
outsl
out
and
loop
cli
mull
push
fistpl
sbb
ljmp
inc
ja
loope
push
aaa
xchg
and
jle
dec
popf
mov
push
mov
dec
sarb
ret
xor
or
addr16
jmp
push
xchg
lret
lea
mov
xchg
and
nop
lods
jo
mov
repnz
or
mov
mov
scas
pushf
daa
andb
out
xchg
pop
fs
shll
mov
pop
dec
cmp
xor
mov
sbb
mov
je
sbb
dec
icebp
lods
adc
popa
or
and
aaa
imul
loope
nop
dec
loopne
int3
iret
or
mov
out
push
push
adc
mov
or
or
jle
push
rcll
lock
jmp
pop
push
test
and
push
bound
mov
push
shlb
lcall
cmp
cmpsl
sub
data16
sub
push
mulb
jmp
sbb
out
int
add
mov
push
das
cmp
cwtl
fisttpll
cmp
test
push
sbbl
repz
mov
popf
ljmp
cmp
jns
push
ret
loop
dec
jmp
mov
push
testl
out
dec
sub
sub
stc
pop
dec
aas
pop
add
stc
and
sub
cmp
fimull
sbb
cltd
into
xchg
mov
arpl
movsb
fistpl
lods
cmc
fldcw
mov
cmp
ret
jge
mov
fldenv
shlb
push
xchg
sub
int
cmp
mov
add
loopne
sub
pop
js
movsl
sbb
aas
rcll
cltd
test
pushf
jbe
iret
xchg
mov
mov
cltd
data16
push
or
push
sub
in
and
xchg
xchg
jnp
push
testl
mov
adc
out
lret
fcoms
sbb
push
pop
orl
fs
jge
sub
fs
fwait
pop
mov
xchg
fiaddl
fsubrl
orb
pop
sbb
adc
call
outsl
fs
adc
cs
push
addb
push
gs
inc
insb
push
jle
dec
gs
and
scas
push
cmp
jmp
bound
jmp
ret
push
out
sbb
out
push
xchg
enter
cli
jbe
int
lds
mov
loope
xlat
outsb
add
dec
notl
loop
ret
insb
in
pop
orl
mov
mov
test
das
adc
xchg
mov
pop
mov
push
push
stos
in
xchg
sbb
push
fwait
xor
movq
hlt
inc
push
nop
sarl
inc
repz
ja
mov
das
aas
loopne
in
in
dec
scas
nop
shll
push
dec
cli
sahf
sbbl
test
sbb
pop
mov
and
in
sbb
imul
pop
xlat
jno
push
xchg
out
push
addb
lret
fstp
push
and
rep
or
adc
add
or
inc
out
arpl
push
lea
popa
push
push
adc
mov
icebp
xchg
dec
jmp
and
sub
out
push
lcall
jecxz
and
jle
or
in
add
xchg
lods
pop
outsl
dec
push
ror
mov
loope
sub
sub
sbbb
xchg
lds
in
mov
in
jnp
mov
imull
or
out
cwtl
out
loopne
mov
xor
aaa
inc
pop
aaa
pusha
mulb
adc
sbb
out
cwtl
mov
xchg
or
mov
or
repz
xchg
add
int3
inc
enter
or
adc
dec
or
xor
mov
jb
popf
sti
pop
fwait
or
mov
aas
cmp
mov
loop
fucomip
cmp
sbb
push
push
push
xchg
repnz
pop
imull
cmpsl
push
mov
mov
orb
cltd
lcall
ret
test
mov
push
inc
lea
pop
or
inc
mov
sbb
xchg
out
push
xchg
dec
lcall
pushf
cmp
mov
mov
xchg
and
push
fs
dec
fisubrl
call
stos
sbb
dec
lds
les
insb
cs
ljmp
pusha
jbe
in
aaa
inc
jns
test
dec
repnz
add
idiv
push
es
mov
das
xor
push
jmp
ljmp
loop
mov
jo
xor
sbbb
pop
sub
xor
jb
adc
pop
icebp
out
mov
mov
movsb
in
mov
cli
mov
fs
mov
sub
lds
xor
shrb
out
neg
out
push
jae
or
jae
push
into
add
dec
sti
push
adc
insb
jnp
mov
mov
fidivrs
cmc
and
sub
add
add
jno
cld
or
mov
pop
or
xor
pop
loope
fistl
bound
mov
mov
mov
je
xor
icebp
mov
rcrl
xor
adc
imul
leave
lods
iret
mov
cltd
jmp
iret
loope
jle
addr16
cmp
push
sbb
jmp
inc
imulb
ja
jb
cmp
push
push
cwtl
cmp
dec
bnd
fsts
imul
jge
or
inc
repz
dec
push
out
jmp
and
jg
pop
adc
adc
add
push
outsl
in
iret
rcl
pushf
jno
nop
es
adc
mov
adc
data16
xchg
jnp
mov
nop
js
sahf
hlt
lret
stos
insb
xor
aad
sti
in
mov
push
pop
sub
mov
add
enter
inc
mov
std
push
outsb
mov
rorl
mov
sub
lret
push
cvttps2pi
loop
cwtl
lea
cmp
mov
or
arpl
stc
lahf
add
dec
fucomip
and
jnp
in
aad
jae
outsb
test
ret
cmp
mov
js
push
adc
jne
xor
es
add
shrb
dec
adcl
rorb
mov
std
std
aas
cmp
clc
inc
mov
inc
add
pop
jmp
jb
in
mov
cmc
jecxz
fsubs
call
mov
mov
enter
gs
outsb
stc
sarb
mov
iret
pop
inc
out
adc
push
es
xor
xor
and
adc
push
mov
jge
dec
adcl
mov
cli
or
pop
cmc
les
loopne,pt
lods
ds
out
cmp
mov
fwait
rclb
push
enter
mov
jmp
cwtl
add
cmp
idivb
je
pop
shl
lret
and
popf
jge
ja
hlt
iret
mov
jg
call
dec
cmp
adc
loope
rcrb
dec
dec
jecxz
ljmp
loop
dec
jge
test
adc
inc
dec
pop
cld
iret
sub
jle
mov
out
pop
mov
xchg
repnz
jge
ss
loop
ja
mov
decl
rorl
or
imul
or
lahf
mov
mov
aaa
sub
dec
xchg
cltd
and
jg
mov
mov
mov
daa
jbe
mov
loope
fldl
add
pop
fstps
js
into
pop
aad
add
stos
adc
dec
insb
jmp
in
adcb
add
icebp
movsb
mov
inc
pcmpgtd
cld
out
lods
popa
sub
mov
mov
es
dec
aas
data16
jecxz
mov
test
cmp
stc
aad
jnp
push
pop
lods
jns
sbb
ds
int3
or
js
ret
jne
addb
pusha
cwtl
lret
mov
aad
in
push
jecxz
xorb
cmpsb
jne
filds
je
pushf
mov
cmp
add
xchg
add
mov
outsl
ror
notl
les
fs
popf
push
sub
lcall
inc
loopne
adc
and
pop
add
push
xor
jae
filds
daa
sub
mov
push
xor
xchg
adc
frstor
xchg
pop
or
pop
cmp
stos
imulb
aad
into
insb
adc
psubw
subl
pop
sarl
lods
sbb
push
add
stos
flds
test
mov
pop
add
aaa
xlat
jnp
lds
ret
xchg
dec
add
dec
xor
test
mov
pop
aad
jno
sbb
mov
fstp
cmpsb
jg
cmp
loope
lock
ljmp
pushf
ljmp
xchg
adc
dec
sub
lods
or
out
mov
popf
jle
lods
sub
addl
aad
orl
cmp
test
cmpsl
mov
fcmovne
sbb
cmp
push
jmp
lods
xor
mov
or
pop
out
sub
sbbb
mov
ja
aad
or
call
add
mov
add
mov
insl
push
insl
and
xor
leave
adc
xchg
mov
pop
inc
mov
xchg
ret
in
nop
das
sub
mov
push
movsb
push
pop
sbb
out
int3
and
xchg
popf
xor
cld
mov
pop
popa
test
rorb
or
and
inc
mov
ds
xor
out
cmp
ss
lret
pop
adcl
inc
push
adc
adc
push
popf
cwtl
pushf
rolb
jne
addr16
push
outsl
mov
jecxz
cs
adc
jns
and
loopne
pop
mov
test
daa
stos
mov
pop
out
mov
xlat
pop
xchg
jae
lret
mov
icebp
mov
in
xor
xor
add
lods
cmp
adcb
aam
int
aaa
xchg
mov
add
jmp
int3
pop
fadd
out
pop
or
mov
xor
fcoml
out
popf
in
jle
xchg
adc
mov
mov
inc
and
aaa
add
pop
mov
xlat
or
adc
xlat
mov
push
sub
or
sti
ficoml
lret
cmp
mov
arpl
adc
dec
in
jnp
and
les
cmpsb
loopne
mov
shrl
pop
sbb
mov
push
sub
pop
push
mov
mov
ret
jae
cmpsl
xor
adc
mov
inc
sbb
add
mov
andb
cmp
sbb
std
cmp
in
scas
mov
insl
and
imul
pop
jmp
out
in
insb
test
pop
aad
or
mov
ljmp
push
sbb
pop
shrl
xchg
rcrl
pop
int
push
test
xchg
out
iret
out
popf
sbb
clc
cmp
mov
test
lods
lods
aaa
cmp
ljmp
leave
mov
out
mov
int
dec
loopne
shrl
fucom
in
inc
or
push
mov
mov
mov
movsl
mov
insb
pushf
out
add
pop
test
mov
int3
addl
fwait
xchg
in
sbb
pop
ds
or
aas
xchg
pop
in
pop
scas
xchg
sbb
pop
mov
addr16
adc
loop
or
push
pop
and
mov
cmp
icebp
repz
or
add
stos
pop
push
std
dec
jecxz
adc
xchg
stos
mov
mov
or
sub
sub
pushf
mov
jae
adc
xor
jg
or
or
mov
push
aas
mov
cs
cli
test
pop
jl
xchg
sbb
loopne
cmp
out
rcr
stos
dec
inc
and
mov
cmp
mov
jmp
sbb
sbb
das
ret
cltd
arpl
push
into
lods
mov
add
mov
aaa
pop
scas
pop
aam
dec
push
dec
repnz
mov
cmpsb
adc
std
arpl
in
movsb
sub
and
shll
fs
clc
or
cmp
aad
push
stc
adc
inc
xor
mov
stos
jl
and
out
jle,pt
icebp
incb
in
jbe
inc
mov
out
mov
stos
push
leave
movsl
cmc
cmp
inc
dec
popf
push
stc
ret
bound
int3
push
insl
into
push
jl
jae
mov
fcoms
add
jge
fildll
mov
repnz
push
mov
jl
ret
jne
cmpsl
lcall
into
stos
pop
mov
insb
sub
push
sbb
add
outsb
fstps
popa
inc
rorb
jae
jl
dec
dec
imul
sub
daa
mov
test
jnp
mov
ljmp
popa
sbb
xor
repz
inc
dec
fwait
xor
dec
fucomp
and
mov
mov
sub
int
push
or
pop
mov
pop
arpl
cld
stos
xor
sbb
pop
pop
or
add
ja
in
xor
xchg
in
fs
sbbb
sub
loop
dec
dec
sbb
push
in
jb
xchg
and
aaa
or
cli
sahf
test
leave
ss
test
sub
xchg
mov
add
sbb
xor
sahf
add
sub
push
add
std
faddl
adc
inc
enter
loopne
es
add
std
ret
pop
jle
fstl
adc
ret
xchg
mov
jl
loopne,pt
popa
les
icebp
lret
cmp
dec
orb
ss
inc
rclb
jg
mov
divb
pop
fdivrl
popf
pop
lods
xchg
es
mov
pop
adc
mov
inc
cmp
cs
jmp
and
adc
punpckhbw
mov
fmuls
push
mov
cmp
mov
test
lods
in
mov
push
or
push
pop
inc
pop
jge
pusha
mov
sub
jne
mov
out
lret
test
sti
xchg
mov
stos
mov
or
gs
ds
sbb
ss
jmp
movsb
mov
lahf
notw
into
imulb
outsl
mov
xor
dec
lods
icebp
and
xchg
cmp
mov
das
ds
adc
out
and
push
dec
stos
xorb
mov
jle
mov
pop
test
sbb
sub
lods
cli
fs
movsb
pop
ja
pusha
xlat
jmp
lahf
ds
jne
aas
sub
sub
pusha
push
inc
sbb
popf
je
ja
mov
cmpsl
xlat
sbb
sub
dec
cs
test
out
sbb
jo
fimull
jo
sub
out
sbb
dec
jno
inc
dec
shrb
cltd
pop
lret
repnz
dec
out
adc
inc
xlat
leave
pushf
stos
xor
xchg
jne
sub
test
enter
xchg
xchg
jecxz
clc
rorl
cmp
dec
or
add
add
xchg
xchg
test
mov
mov
inc
xchg
jnp
push
movsb
pop
imul
rcll
push
in
cmpsb
jae
push
data16
das
cmp
sbb
insb
mov
addr16
and
xor
sbb
jmp
call
xchg
loope
push
loop
fs
adc
fiaddl
xor
jno
pop
sbbl
jmp
jb
lcall
js
pop
les
cmp
mov
cmpsb
rcrl
or
xchg
fsubr
rcll
mov
mov
push
sub
xchg
pmaddwd
sbb
sbb
int3
sbb
imul
sbb
jecxz
int3
or
nop
lods
cmp
xor
add
cmp
or
scas
aas
xor
mov
sbb
cmp
adc
xchg
xchg
rorl
cmpsl
mov
mov
mov
add
sbb
in
xor
test
int
mov
jb
push
jle
cmp
testl
outsl
or
xor
movsb
lods
data16
lods
push
sbb
sbb
mov
lret
in
jne
push
cmc
jb
loope
sub
sub
imul
daa
push
fs
dec
mov
pop
mov
jle
jno
lea
scas
dec
xor
push
xchg
incl
shlb
xchg
or
push
cmp
xchg
xchg
int
movsl
pop
gs
aas
in
jns
sub
es
fdivr
add
sti
popa
int3
mov
cmc
jns
mov
push
lahf
inc
mov
loope
das
jmp
imul
fidivl
or
into
mov
insb
push
ret
push
dec
jmp
cmp
push
xchg
sub
sub
pop
push
cmc
ljmp
dec
sub
jle
push
addr16
hlt
shrl
dec
ljmp
inc
mov
mov
cmp
push
data16
mov
or
mov
cmp
or
lock
xchg
mov
cs
dec
pop
dec
sti
hlt
mov
lods
gs
mov
add
cmp
xchg
or
jecxz
cmp
adc
mov
stos
and
pop
add
jo
mov
sbb
xor
inc
shll
mov
add
decb
negb
fistl
jno
cmp
gs
push
sbbl
sub
stos
adcl
mov
mov
scas
mov
sahf
cli
sbb
pop
int
mov
mov
cltd
sbb
and
xchg
push
lahf
sbb
mov
loope
dec
dec
popf
aaa
ja
outsb
pusha
gs
aaa
jge
cltd
dec
push
dec
shlb
cwtl
cmp
loop
fimull
mov
xchg
pop
cmc
mov
pop
lods
adc
mov
dec
int3
jae
mov
add
jle
shll
pop
jb
and
mov
ret
in
sub
cmpsl
ret
mov
aaa
or
sub
pushf
rcr
push
adc
sarl
dec
mov
inc
cltd
dec
js
insl
fwait
sub
or
and
aas
mov
mov
pop
xor
andb
stc
scas
loop
std
cltd
mulb
leave
xchg
js
cltd
mov
pop
mulb
mov
ja
test
negb
mov
scas
cld
leavew
push
in
xlat
pop
mov
arpl
cmp
scas
pusha
lret
cmp
cmpl
add
lods
cld
neg
test
fmulp
xchg
sbb
xor
pop
and
sub
add
cmp
and
popl
push
das
add
daa
js
jecxz
pop
sar
jle
inc
pop
jne
xchg
mov
out
pop
mov
loope
int
test
lcall
pop
rcll
popa
jo
xchg
lods
xor
jg
popl
jmp
shrl
cmp
pop
sbb
in
iret
sub
addr16
call
cmc
es
pop
rorb
xchg
inc
fiadds
aad
and
add
xor
xchg
lds
divl
ret
int
loope
mov
xorb
sub
mov
or
scas
idivb
and
add
pop
cmpsl
fsubs
mov
xchg
and
stc
xor
push
js
ljmp
outsl
orb
xchg
sub
sub
xchg
mov
mov
sub
sbb
daa
in
mov
or
test
std
mov
sub
call
repz
movsb
cmp
and
addr16
lods
clc
cmp
lock
mov
jb
sub
jmp
jle
xlat
lcall
outsl
enter
mov
adc
mov
push
mov
pop
push
xlat
xchg
je
mov
scas
sub
int3
jg
adc
mov
outsb
clc
ljmp
imul
mov
je
xlat
push
jmp
addl
rorl
ljmp
cli
cmp
mov
je
inc
mov
gs
les
mov
sub
orl
mov
cli
fmulp
jnp
in
cld
popf
out
push
in
and
jne
mov
fistpl
je
dec
movl
xchg
cltd
into
jmp
dec
gs
pop
cmc
addr16
add
adc
dec
pop
mov
cmp
inc
shrb
arpl
adc
push
rcrl
mov
lods
dec
mov
xor
out
lock
loop
outsl
dec
push
fs
xchg
sbb
or
push
xor
jp
ss
data16
and
fdivrs
roll
push
inc
mov
add
data16
mov
mov
clc
mov
mov
out
lea
daa
lds
popf
icebp
cmp
cmp
or
sub
pusha
cwtl
out
out
sarb
movsb
leave
push
icebp
aaa
pop
enter
lds
sbb
loope
jo
clc
sbb
jne
pop
jbe
sahf
xchg
aas
mov
jae
jo
pop
sti
iret
mov
mov
sbb
mov
int3
testb
mov
call
or
xchg
addl
sbb
jl
push
cmp
loopne
add
lret
es
insl
add
insl
sub
ret
mov
test
pop
cmc
lock
mov
cld
jl
repnz
dec
mov
test
rcrl
add
popa
stos
fcomp
call
mov
lret
jge
ds
stos
out
gs
psllq
mov
aaa
adc
and
ret
inc
add
out
rcrl
xchg
movsl
add
f2xm1
xor
pop
pop
and
lock
dec
pop
or
or
fiadds
xor
jge
push
jp
sar
adc
ds
aas
subb
mov
pop
add
or
bnd
cld
fiadds
and
jnp
mov
push
mov
cmp
push
add
sarl
loope
daa
pop
sbb
push
cmp
mov
loopne
and
push
or
mov
push
push
mov
in
leave
sbb
cmp
xor
iret
in
dec
outsb
add
out
les
mov
jbe
shlb
jo
stos
test
les
mov
adc
out
mov
gs
add
test
pop
popf
and
mov
cmp
mov
stc
daa
jb
and
cmp
or
lods
push
adc
pusha
cmp
cmp
jo
jne
shr
aas
jecxz
sbb
push
rorl
adc
push
sbb
ja
sbb
or
xchg
test
and
adc
pushf
add
adc
dec
mov
mov
push
adc
pop
cmp
lods
cmpsl
mov
testl
xor
and
fisubs
sbb
adc
mov
cmp
inc
clc
in
cmpsb
stos
dec
pop
les
push
int
and
mov
insb
dec
lock
push
mov
lods
lcall
mov
popa
das
or
dec
ja
pop
sti
in
xor
xor
ljmp
jecxz
jge
fs
mov
pop
imul
cld
fbstp
filds
aas
daa
inc
test
push
stos
fidivl
sti
push
cmpsl
insb
fsubrs
xchg
mov
sbb
xor
cwtl
lods
sbb
ret
pop
pushl
ljmp
adc
jle
ret
mov
jne
movsb
sbb
mov
das
mov
pop
fbld
iret
mov
lahf
das
in
jp
clc
add
dec
cmpsl
or
jb
jmp
and
ja
push
mov
fdivl
fwait
push
inc
cli
int
adc
divb
lea
and
cs
imul
mov
repz
jp
sbb
jmp
sub
fcoms
loop
fcomps
cmp
jmp
adc
jnp
orl
mov
pop
iret
xchg
int3
hlt
xor
lods
cmpsl
call
inc
lret
pop
inc
in
jecxz
std
inc
xchg
adc
add
and
add
mov
lea
mov
jno
movsl
aaa
out
dec
stc
add
mov
loopne
inc
add
aam
fs
loopne
scas
jno
inc
stos
lahf
das
jns
inc
lds
inc
sbb
imul
push
dec
xor
or
push
mulb
pop
mov
add
and
mov
in
dec
jecxz
call
jge
push
jnp
icebp
and
pop
lret
adc
push
xorl
fisubrl
sbb
dec
dec
aaa
imul
pop
cmc
xchg
dec
push
mov
sarl
repz
mov
pop
sbb
cmp
out
push
cmp
or
or
cmpsl
xor
in
movsb
loopne
pop
leave
js
sub
add
js
sbb
andb
push
pop
mov
ficomps
push
std
rcll
mov
rcr
lcall
test
and
or
sbb
push
cwtl
xchg
mov
iret
mov
fwait
testb
loopne
push
stos
mov
push
cmpl
mov
pop
out
cmpsl
sarb
jno
lahf
push
mov
add
les
cmp
jmp
aas
and
das
jb
mov
ret
test
es
sub
dec
mov
adc
ret
lret
dec
sub
pop
out
push
xchg
and
lds
pop
push
add
pop
decl
jle
rcll
imul
sub
int
std
mov
pop
push
or
xchg
adc
mov
rcrb
js
pop
aad
cld
sbb
int3
xchg
in
nop
add
sub
aad
test
cltd
movsl
sbb
cmp
mov
lods
fldl
jns
xor
mov
ja
xchg
out
js
iret
addr16
pop
mov
or
and
mov
out
inc
gs
dec
lret
adc
inc
loope
sbb
addr16
mov
jl
push
and
testl
test
scas
decl
movsb
pop
int
xchg
fnstenv
cmpsl
test
xlat
adc
cmp
inc
ret
xchg
hlt
sbb
dec
addr16
dec
mov
cs
push
aaa
testl
pop
push
std
outsl
sbb
cmc
xchg
sub
xor
cmc
cmp
dec
out
gs
sbb
imul
xlat
jae
call
ljmp
push
lock
push
mov
add
adcb
les
sub
adc
sub
aam
mov
xchg
or
mov
test
sub
mov
jmp
les
cmp
jp
add
and
lcall
insl
ds
popa
outsl
out
jp
popf
mov
xlat
psubsb
jo
gs
rol
in
outsb
ret
jge
sbb
jbe
stos
lea
push
add
mov
inc
dec
push
mov
inc
mov
je
mov
jecxz
or
andl
lods
mov
pop
fisttpl
xlat
insl
inc
cmp
push
or
in
les
inc
call
and
inc
add
mov
lret
xchg
xor
aaa
insb
bound
mov
xor
dec
and
lret
jns
xchg
mov
xchg
aad
popa
push
test
jge
ffree
call
mov
lret
ds
test
test
call
cld
sub
inc
and
std
and
sub
pop
sahf
aaa
mov
mov
mov
lea
jbe
fldt
js
stc
cmp
iret
and
pop
inc
cltd
xchg
sub
push
jge
dec
int
jns
or
push
ret
testl
outsl
jge
and
stos
out
rcll
ret
pop
outsb
pop
pushf
sti
adc
add
cwtl
xchg
das
dec
or
dec
jo
in
mov
dec
adc
xchg
mov
out
push
jns
cmp
xor
stc
adc
sub
cmc
and
xor
mov
xor
rcrl
adc
adc
fldt
sbb
in
jne
xchg
mov
mov
dec
mov
xchg
pop
loopne
jns
outsb
cmpsb
push
add
stos
fists
bound
roll
lods
mov
repz
dec
mov
xor
outsl
lods
mulb
cmpsl
inc
stos
sub
and
stos
mov
xchg
cmp
push
xlat
and
sub
xchg
sbb
cmp
push
scas
sub
inc
outsl
insb
mov
mov
pop
fdiv
push
xchg
jne
test
cmp
push
xchg
dec
sbb
out
scas
stos
leave
dec
ss
xchg
push
notb
loop
out
and
mov
pop
sbb
mov
stos
inc
cmp
pop
fwait
mov
frstor
or
pop
rolb
jno
jnp
cld
pushf
es
loop
push
pop
stos
add
repnz
and
mov
cld
cmp
inc
xor
mov
cs
jecxz
mov
mov
das
inc
dec
mov
int3
sbb
lds
or
sub
xchg
and
adc
sub
rclb
divl
xor
dec
iret
mov
xchg
jl
jb
imul
repz
bound
data16
cmc
dec
mov
hlt
es
aas
test
int
jno
xchg
mov
mov
pop
adc
loop
inc
fwait
insl
cmp
and
roll
out
sub
mov
stc
test
dec
adc
stos
fdivl
inc
xlat
dec
aam
sbb
jno
je
pop
add
arpl
fildll
xor
test
movsl
shl
call
pop
or
add
cwtl
ret
mov
filds
mov
enter
imul
xchg
in
pop
movsl
jne
push
pushf
testl
idivl
cmp
mov
xchg
push
push
mov
sti
negl
inc
adc
mov
adc
aad
push
in
in
adc
pop
nop
cmp
xchg
das
jp
mov
dec
sti
ficompl
mov
and
arpl
aad
xlat
test
jnp
pop
fimuls
jae
xor
shll
pop
push
repnz
repnz
cmp
add
test
rorb
repz
loopne
test
push
jbe
adc
dec
fstpl
sub
xchg
dec
cli
push
or
push
pop
nop
dec
repz
jne
sub
add
sub
adc
fmulp
or
mov
bound
int3
or
and
mov
xor
push
cwtl
add
jle
jae
fucomp
idivl
outsl
test
sub
jnp
push
ljmp
push
inc
xor
sbb
or
sub
dec
pushf
jne
xor
dec
pop
add
push
sarl
mov
mov
aaa
add
add
int
pusha
mov
and
movsb
icebp
ret
mov
insb
insb
add
and
adc
xor
cmp
fisttps
aam
cmp
cli
add
push
pushl
mov
rclb
pop
cwtl
sbb
test
add
push
push
fstps
mov
jecxz
xlat
pop
call
adcb
and
test
xlat
in
testb
adc
mov
pop
data16
and
or
mov
aad
jmp
movsb
sub
sbb
repz
scas
outsl
inc
adc
xor
data16
sub
adc
cmp
jp
pop
roll
ficomps
cmp
aaa
jae
sbb
dec
cmp
jg
movsb
rcr
call
inc
out
scas
loop
inc
dec
scas
adc
mov
mov
rorl
pop
in
inc
jecxz
xlat
repz
push
jle
xor
clc
stos
stc
jecxz
imul
mov
out
push
stos
mov
pop
adc
and
push
push
inc
repz
scas
lea
movb
shr
rol
pop
mov
je
pop
xor
sbb
lea
aaa
mov
and
test
cmpsl
xor
repnz
lods
mov
jge
push
incb
outsl
ficoml
addr16
sbb
add
inc
loopne
sarb
add
jmp
jg
mov
fists
pop
pop
dec
pop
mov
jp
push
fucomp
sub
stos
inc
cmp
mov
xchg
fs
inc
jno
push
shlb
xchg
jne
into
cld
or
repnz
or
loop
pop
adc
mov
mov
xchg
pop
ljmp
nop
and
cmp
mov
imul
gs
lea
cmp
popf
incb
jge
push
mov
loop
faddp
adc
push
mov
jns
cmpsl
push
addl
frstor
inc
call
inc
lea
cmp
jl
push
lea
inc
mov
movsl
mov
xchg
add
pushf
fsts
dec
rcll
sub
out
sub
lock
lcall
push
fidivl
push
popa
sbb
orl
int3
inc
inc
insb
nop
pop
lret
test
push
cli
pop
push
cltd
adc
or
outsb
lret
fidivrl
les
test
aas
in
jmpw
sub
leave
lret
pusha
data16
adc
jmp
adc
inc
cld
decl
and
push
sbb
aas
dec
shr
orl
ljmp
push
insb
xorl
jmp
in
adc
iret
jecxz
sbb
arpl
loopne
nop
mov
gs
pop
shl
adc
es
cmp
inc
hlt
pop
daa
push
sbb
mov
sub
xor
push
sbb
lahf
iret
pop
shr
add
dec
push
pop
cmp
ret
mov
daa
cmp
add
gs
dec
jle
inc
jge
and
mov
mov
push
arpl
sub
pop
mov
adc
sub
mov
aad
xchg
pop
push
aas
and
jo
xchg
outsl
adc
xchg
mov
loopne
xor
push
adc
sbb
mov
xchg
dec
or
std
pop
push
and
popa
cmp
in
jecxz
popa
mov
clc
ja
aad
mov
loopne
in
testb
notl
rcll
mov
cmp
sbb
xchg
mov
and
pop
or
pop
xor
xor
sti
cmc
and
sbb
ss
ds
shrb
dec
mov
or
sti
mov
fidivrs
adc
lea
popa
in
in
jae
in
rcrl
mov
sarb
jp
jb
inc
dec
push
and
sahf
cmp
pop
lret
shll
xchg
in
push
int
mov
sbb
xchg
and
inc
mov
and
push
stos
jne
insl
ljmp
push
mov
xor
fsts
push
popf
lds
xlat
push
hlt
and
sub
inc
cltd
mov
je
jle
enter
dec
push
add
fsubl
stos
xchg
sub
inc
rcrl
and
sbb
lds
push
dec
jmp
add
fldl2e
fnsave
mov
push
lock
dec
lahf
ljmp
inc
inc
cmp
sub
jb
mov
adc
outsb
faddl
rorb
inc
lods
mov
cwtl
sti
adc
xchg
mov
rcl
jg
jbe
sub
pop
xor
cmp
ljmp
in
in
mov
cmp
lcall
lret
mov
aaa
xchg
mov
sti
ficoms
mul
push
mov
ret
adc
xchg
vandpd
xchg
mov
push
dec
mov
xor
and
cmp
rcll
scas
in
repnz
and
xchg
push
out
or
xor
cmp
stos
pop
jmp
sub
dec
cwtl
xor
scas
pop
mov
add
xor
sbb
pop
cmp
jg
sub
mov
and
mov
ret
sbb
std
scas
mov
jo
sub
dec
nop
shll
shll
loopne
or
ret
sbb
jns
pop
ds
jmp
push
divl
push
fildl
inc
imul
stc
insl
mov
dec
xchg
push
idiv
push
dec
push
adc
pop
fldl2e
scas
out
add
in
dec
sbb
mov
jecxz
xor
push
jle
and
push
sbb
push
pop
jle
xor
jbe
ror
or
sub
add
jns
je
cmpb
fldenv
or
repnz
sub
fnstcw
loope
sub
dec
in
cmp
mov
push
jg
pop
test
mov
adc
out
sub
push
or
jns
cmp
pop
xchg
or
xchg
mov
lcall
and
jg
mov
mov
adc
cli
pop
push
or
sub
nop
ja
pop
mov
or
jno
imul
ds
stos
inc
xchg
jge
dec
icebp
xchg
jg
and
add
push
xlat
scas
dec
lret
cmp
xchg
adc
mov
mov
jbe
scas
imul
mov
xacquire
xor
popf
cltd
xchg
in
int3
sub
inc
dec
cwtl
pop
pop
popa
loopne
push
mov
mov
xchg
xor
sub
jcxz
les
or
xchg
pop
mov
je
nop
mov
pop
fs
xchg
or
int
and
jo
pop
jo
mov
xchg
mov
inc
test
xor
fbld
jns
inc
pushf
stos
inc
jb
ficomps
or
aaa
into
push
insb
fwait
mov
push
pushf
out
iret
test
shlb
mov
adc
mov
dec
adc
mov
test
jecxz
int3
cmp
fwait
inc
adc
stos
out
int3
push
inc
jg
dec
push
out
cmpsb
cltd
lods
cmp
imul
mov
sbb
imul
jo
xchg
in
mulb
arpl
mov
int3
push
jae
push
pop
ljmp
cmc
and
aad
and
repz
xchg
sbb
sub
xchg
unpckhps
push
cwtl
dec
imul
and
sub
rcr
fdivp
jl
shlb
cltd
mov
scas
femms
sbb
xchg
mov
mov
cmc
orl
mov
imul
das
hlt
xor
fimuls
hlt
dec
rorl
xchg
pop
pop
int3
test
and
cmp
stos
aaa
je
imul
divl
xchg
mov
fwait
mov
clc
mov
lret
inc
and
sbb
fwait
xor
bound
shr
lahf
sub
rcrb
add
xchg
les
jno
xor
cmp
stos
fstl
xor
xor
repnz
daa
add
mov
pushf
movsl
push
shl
shrl
mov
outsb
adc
adc
or
mul
adc
xchg
pop
stos
mov
call
lea
sbb
clc
xor
inc
loope
sbb
jo
xchg
xchg
fwait
mull
mov
das
jl
hlt
xlat
sub
xadd
mov
popa
inc
inc
cwtl
movsb
nopl
lods
out
popa
xor
out
jbe
inc
mov
cmp
ljmp
jnp
repnz
icebp
ja
xchg
es
call
mov
mov
mov
xor
clc
int3
lds
aaa
sub
outsb
mov
jmp
adc
mov
jo
xchg
sbb
out
in
scas
sbb
push
fs
xchg
jno
add
adc
mov
and
enter
idivb
testl
mov
sbb
push
adc
mov
sub
sbb
inc
icebp
outsl
cmp
mov
pop
xorl
idivb
jns
bound
xchg
cmc
repnz
repz
ret
lcall
mov
das
sbb
iret
jne
mov
pop
and
dec
lea
imul
adc
push
imul
imul
push
push
out
pop
movsb
pop
adc
sbb
das
sbb
call
stc
jle
or
nop
dec
jae
cmp
add
aam
xchg
cmpsb
pop
push
mov
aas
push
sbb
pop
lods
movsb
mov
nop
mov
fsubs
enter
enter
faddl
push
pushf
jno
lcall
jnp
cmc
std
pop
dec
aas
adc
imulb
jg
jl
scas
inc
jbe
mov
leave
pop
enter
xor
mov
xchg
js
icebp
subl
mov
fisttps
incb
inc
xor
call
jbe
jmp
lahf
adc
pop
or
enter
xor
sbb
jg
adc
add
mov
cmp
add
sub
insl
jle
and
aas
mov
out
roll
stos
pop
mov
or
outsl
sbb
sub
cmc
loop
jnp
sti
inc
das
jmp
cli
xchg
sub
int3
test
jbe
dec
shlb
pop
and
js
cld
mov
mov
push
or
outsb
jb
insb
leave
pop
cmpsb
mov
insb
scas
and
stos
cld
jmp
aad
aas
sbb
ret
or
fucomi
out
sarl
xchg
mov
mov
push
pcmpgtw
xchg
rolb
or
xlat
out
into
lret
sahf
add
in
cwtl
fisttpll
cli
aaa
test
sti
ljmp
ret
imul
xchg
push
addr16
add
addr16
outsl
nop
nop
pop
mov
nop
fbstp
add
enter
and
aam
xor
nop
cmpsl
mov
xor
jb
push
mov
pop
jae
mov
je
xor
mov
ja
sbb
xor
mov
adc
xchg
push
sbb
mov
out
ljmp
inc
or
push
xchg
clc
fimull
addr16
mov
pop
ret
lret
lcall
xchg
nop
xor
pop
scas
arpl
push
adc
enter
repz
mov
std
ret
mov
test
fdivl
sub
sahf
aam
adc
icebp
or
mov
push
xlat
in
fwait
push
inc
pop
jmp
push
lock
xchg
stos
inc
add
and
or
aaa
data16
ds
je
pop
pop
dec
dec
stos
imul
jbe
mov
lahf
adc
gs
xchg
mov
aam
adc
repnz
mov
loope
or
push
loopne
push
or
ret
shl
ret
sub
stc
push
fmuls
lods
jo
fwait
push
lret
xchg
stc
repz
pop
xchg
or
sub
loop
mov
cmpsb
stos
das
and
mov
sub
addr16
or
adc
cmp
mov
sub
insl
sbb
cmc
lock
jg
xchg
pusha
sar
sbb
fdivr
int
in
sbbb
or
lea
lock
inc
out
adc
mov
xor
loopne
push
xchg
cltd
jge
in
mov
mov
and
cltd
mov
xchg
lcall
dec
daa
xchg
mov
pop
dec
xor
dec
dec
lods
das
insb
pop
sub
mov
movnti
mov
call
or
cmp
imul
dec
sbb
mov
cmp
lret
cld
lahf
mov
lahf
inc
lods
aaa
mov
xor
inc
add
and
inc
enter
xor
lcall
adc
cmpsb
push
lea
push
pop
insl
out
ret
mov
movsb
xchg
adc
inc
jnp
add
lahf
push
in
lahf
cmpsb
cmp
inc
int
or
push
mov
inc
cmp
xchg
jp
popa
mov
and
lret
data16
lods
cld
inc
test
movsl
cmpsl
sbb
nop
in
push
xchg
and
mov
iret
pop
push
pop
aam
adc
das
sbb
pop
push
mov
pusha
leave
insl
push
inc
sbb
out
sub
test
pop
not
je
sbb
jle
jns
repnz
xlat
aaa
cmp
mov
mov
sbb
xor
mov
inc
mov
test
add
dec
inc
and
jb
fmul
push
add
sti
cmp
nop
sub
test
and
loopne
in
test
lea
mov
jmp
pushf
xchg
mov
mov
nop
aaa
jl
fwait
add
lds
and
fldt
inc
stos
mov
push
and
jge
push
out
repnz
jne
inc
pop
pop
xchg
mov
filds
imul
hlt
imul
inc
insl
test
xchg
sbb
in
cld
sbb
sbbb
and
in
popa
scas
mov
clc
and
std
push
jle
fs
add
aas
fcoml
movq
mov
lahf
les
pop
sub
xchg
jbe
mov
mov
pop
jbe
add
outsb
cmc
scas
inc
ficomps
cmp
lds
jmp
mov
ja
fwait
or
rorb
bound
daa
cmp
lahf
js
popf
cmp
arpl
cli
dec
sub
out
and
push
in
or
bound
and
xor
daa
add
mov
shlb
ret
lcall
sub
cld
xchg
loopne
ret
pusha
pop
mov
in
pushf
jge
loopne
out
lods
push
add
dec
sbb
pop
sub
and
cmp
or
stc
cmc
popf
jge
dec
imul
hlt
clc
sbb
idivl
lods
cmpsb
pop
push
gs
test
xlat
movsb
adc
fwait
leave
es
cmpb
insb
lcall
inc
jmp
test
pop
fdivl
hlt
mov
mov
outsl
xchg
es
dec
loope
ret
xor
adc
leave
and
imul
add
lods
shlb
sti
movsb
mov
and
in
sarb
cmp
ret
jbe
call
adc
sub
mov
mov
xchg
jecxz
outsb
sbb
and
sub
push
adc
bound
push
aas
cmc
out
stos
jmp
jae
xor
push
insl
insl
dec
xor
add
mov
popf
xor
dec
push
in
mov
cmpsb
nop
and
add
mov
icebp
push
mov
cli
lret
and
push
sub
ret
imul
outsl
orl
test
mov
pop
push
add
mov
xchg
cwtl
add
jne
aad
xchg
add
mov
loope
inc
mov
cltd
test
xor
xor
xor
iret
add
test
test
mov
jecxz
pop
lret
stos
sti
cmp
outsl
das
inc
sbb
sbb
mov
mov
scas
push
mov
lods
movsl
popa
add
cmp
adc
fs
lods
cltd
fldcw
push
mov
clc
adc
aaa
or
subb
push
testb
push
shll
adc
add
xchg
mov
imul
sub
popa
cmpsl
lret
jmp
mov
in
sub
gs
pusha
cmp
inc
sahf
inc
xor
xchg
mov
mov
cmp
cmp
jae
pop
jle
sahf
outsb
push
push
fldenv
jl
imul
shll
add
rcl
dec
xor
outsl
lock
adc
mov
adc
scas
int
push
dec
in
dec
xor
popf
in
jo
adc
gs
loopne
push
xor
mov
mov
shr
fsubrs
test
inc
cli
nop
cs
data16
push
sbb
outsb
imul
ficoml
mov
pusha
adc
shrl
push
dec
fisttpl
sahf
xor
cmc
sub
add
mov
mov
push
lahf
cmp
enter
inc
outsb
clc
cwtl
testl
fwait
clc
das
data16
fsubs
sbb
pop
jns
dec
ja
in
sub
in
or
pop
in
lret
or
xchg
rclb
jbe
cmpsl
loopne
dec
mov
mov
call
fwait
mov
mov
ss
dec
pop
aas
shlb
addr16
push
mov
adc
lods
push
dec
dec
mov
pmullw
stos
mov
jb
lret
test
addr16
idivb
xchg
add
push
ljmp
mov
dec
scas
cmp
xchg
or
add
data16
aad
jmp
fwait
shlb
inc
push
addr16
adc
mov
mov
jns
adc
push
rolb
xchg
cwtl
jp
int3
aad
xchg
mov
mov
aas
mov
insb
or
inc
or
aam
scas
inc
pop
lea
and
mov
jno
cmp
xchg
cmp
test
inc
insl
test
pop
subb
imul
adc
cmp
lock
jle
les
push
lock
adc
cld
inc
mov
test
sub
mov
bound
jge
test
pop
and
cli
test
dec
icebp
jo
xchg
fs
pushf
inc
pop
sbbb
sbb
or
lcall
clc
sbb
incb
cwtl
jbe
cmp
loop
pop
les
rcll
sub
fidivl
les
cwtl
mov
xchg
mov
pusha
mov
cmc
fucom
leave
push
pop
push
cmp
stos
lods
leave
or
out
sarl
orw
adc
xchg
mov
and
fsubrl
add
and
xchg
loope
jae
or
xchg
or
or
out
push
rol
dec
in
inc
cmp
imul
adc
gs
test
ds
mov
or
mov
mov
and
dec
sub
hlt
repnz
mov
fstp
ljmp
push
mov
aas
push
lock
jb
sub
mov
xor
xor
shlb
nop
mov
andb
arpl
ljmp
jne
or
jns
int
push
and
arpl
arpl
mov
mov
je
xchg
xor
jp
mov
shrb
pop
repz
adc
sub
add
test
fsubp
add
and
stc
mov
imul
xor
int
movsl
pop
aad
and
dec
inc
dec
gs
cli
addr16
sbb
shl
lea
pop
and
lods
enter
jp
push
sti
sti
ds
flds
jmp
xor
pop
dec
and
mov
and
mov
adcb
xchg
push
sub
jb
les
mov
lret
mov
testl
jne
adc
aam
xor
iret
push
rol
clc
dec
mov
mov
jle
ja
jne
cmp
pop
popf
push
push
cmp
pop
pop
mov
adc
or
lea
scas
das
dec
out
daa
mov
xor
jns
dec
shl
movsl
cmp
sub
push
leave
stos
cmpsb
push
mov
cltd
adc
jl
lcall
lods
dec
bnd
jae
sbb
es
mov
jp
iret
mov
pushf
nop
cmp
xor
loop
xchg
pushf
cmp
xchg
and
in
add
movsl
movl
test
jne
mov
mov
jle
xlat
sub
push
dec
movsb
or
addl
lea
pop
add
pop
pop
push
test
arpl
add
jg
nop
dec
jecxz
mov
sbb
adc
outsl
cmpl
sub
iret
pop
mov
jnp
push
pusha
popf
inc
pop
add
fistps
jno
push
hlt
xchg
xchg
lret
pop
mov
filds
inc
adc
sahf
gs
push
outsb
filds
mov
sbb
lds
dec
cmpsb
add
push
data16
out
cmp
jle
sti
fstpl
popa
pop
adc
or
stc
and
shrl
lods
jns
pop
movsb
mov
xchg
lea
pop
xchg
test
mov
ret
lods
movsb
pop
pop
push
xor
fnstcw
pop
sub
jecxz
pop
dec
mov
push
and
push
cmp
shrb
sub
mov
pop
push
lea
cmp
jecxz
loope
mov
inc
jns
mov
test
mov
aam
fidivl
adc
inc
rorb
lcall
cmp
nop
imull
xor
repz
hlt
or
push
pop
hlt
jnp
int
sub
adc
pushf
clc
nop
fbld
movsb
test
fcomps
sub
test
mov
dec
mov
xchg
inc
cwtl
psubusb
push
ds
mov
push
push
gs
dec
bsr
sub
pushf
mov
pop
push
xlat
adc
in
mov
cmc
pop
xchg
xor
mov
push
testl
xchg
les
xor
sub
ss
mov
mov
nop
jb
jg
pop
leave
cmp
outsl
fwait
arpl
push
les
pop
mov
daa
cmp
xchg
rorl
int3
xchg
sbb
xchg
dec
inc
scas
sbb
enter
xchg
push
popf
pop
js
adc
iret
add
mov
cmpsl
pop
ret
iret
mov
mov
pop
mov
rclb
pusha
inc
push
push
add
test
int
iret
jno
sbb
pop
jmp
xchg
ret
andl
sbb
out
push
cmp
mov
mov
dec
or
adc
leave
inc
pop
pop
or
jo
lret
sub
cmp
jb
insb
mov
or
jle
jae
mov
dec
loope
dec
mov
adc
and
fyl2xp1
xchg
dec
movups
idivl
sbb
dec
lret
jle
xor
gs
imul
mov
or
push
xchg
or
sti
push
sub
or
xor
movsl
mov
mov
mov
mov
mov
shl
cmp
cmpsl
outsb
stc
lds
arpl
dec
dec
fcmovbe
ret
sbb
add
xor
call
loopne
fwait
pop
pop
jae
pop
push
testl
imull
or
cmpsl
xchg
mov
jbe
push
pop
jnp
lods
ret
and
nop
or
jmp
in
std
mov
dec
mov
leave
and
xchg
call
xchg
int3
enter
adc
sub
xor
sbb
dec
mov
pop
movsb
push
xchg
sbb
lds
jne
out
push
and
imul
ret
hlt
xchg
pop
lcall
xchg
cmp
inc
lock
arpl
add
arpl
addr16
daa
mov
cmpsb
sbb
and
mov
jle
inc
jle
jae
jnp
scas
cmp
aaa
xchg
rorl
adc
add
lea
adc
push
push
out
jg
into
mov
mov
xchg
mov
in
aaa
mov
push
loope
sub
lds
in
lea
xor
xor
popa
call
fs
inc
out
outsl
inc
cld
inc
dec
xchg
aad
xchg
and
in
imul
fadd
in
fldenv
stos
pop
or
xor
outsb
and
out
shll
aad
dec
and
jae
cmp
cld
insl
lea
cmp
dec
mov
mov
push
xchg
les
xlat
inc
sub
stos
aaa
rcll
mov
lods
js
pop
subl
sub
fs
cmp
jp
sub
test
jmp
pushf
add
sbbb
cmp
addr16
rorl
movsl
xor
scas
or
xchg
repz
jmp
xor
sub
push
sbb
in
negl
loopne
pusha
stos
jno
or
pop
js
cld
imul
jecxz
mov
sahf
inc
nop
repz
aad
cmovle
add
push
xchg
xchg
test
ja
aad
adc
or
and
out
push
jo
lods
mov
jecxz
in
add
add
dec
ret
sar
mov
sub
clc
or
dec
out
cltd
sbb
add
ja
xchg
cmp
jl
ss
out
inc
add
rcrl
loop
int3
pcmpgtb
mov
ja
mov
sbb
popa
das
cmp
test
cmp
mov
sub
or
jge
std
mov
or
aam
inc
or
dec
sbb
sub
xor
sbb
adc
push
sub
cs
pop
jne
aaa
sahf
inc
mov
outsl
scas
mov
dec
cwtl
test
adcl
xor
xor
pop
fmul
mov
sbb
mov
idiv
rcll
add
push
sahf
mov
js
xchg
add
jae
je
das
in
sahf
jnp
inc
cmp
mov
xchg
hlt
in
jae
push
jle
and
jb
aas
scas
xchg
leave
sbb
xchg
pop
or
cmp
imul
jmp
leave
lods
add
mov
je
ret
mov
sbb
xchg
cmp
dec
xchg
sub
cmpsb
nop/reserved
jge
insb
pop
sbb
cmc
cmc
ja
cmp
jge
or
pop
aas
aam
sub
push
push
gs
pusha
cmpb
cmp
in
ret
ffreep
push
mov
sub
sar
mov
jmp
mov
ja
addr16
push
jg
adc
inc
ss
ja
push
push
popl
jnp
xchg
aam
mov
xchg
pop
das
out
jg
sub
mov
scas
jecxz
cmp
mov
add
push
jecxz
sbb
xchg
mov
arpl
scas
in
sub
mov
clc
ljmp
dec
nop
cmpb
sbb
inc
es
jl
pop
leave
inc
aaa
xchg
sub
es
imul
es
add
add
jp
sub
or
dec
sub
xchg
loop
xor
cli
push
push
pop
adc
pusha
cltd
fs
pop
stos
call
push
push
sub
xor
cmpsl
js
push
lea
sbb
xchg
xchg
pop
icebp
icebp
jecxz
cmpsb
pop
loope
push
jmp
sub
push
xor
mov
push
lds
sbb
mov
mov
ret
test
int3
lea
mov
inc
lock
sub
mov
jbe
mov
int3
mov
aad
sti
lods
cmpsb
sub
mov
mov
je
sub
shrb
cmp
es
shrb
jne
or
mov
sbb
push
or
scas
jle
mov
cmp
mov
jg
sbb
pop
js
pop
push
mov
imul
outsb
mov
out
negb
or
cltd
cli
rcrb
stc
xor
pop
insb
sub
push
sub
rol
sbb
rcr
mov
psraw
or
xor
cmp
mov
or
nop
mov
cwtl
jns
cmp
fwait
inc
fisttpl
inc
xor
add
mov
add
sar
rcr
outsl
pop
cmpsb
cmpsl
loop
mov
or
pop
loop
sti
xor
add
popf
lea
idivb
loop
or
jne
fcmovnu
adc
test
adc
adc
frstor
adc
rcrb
test
inc
flds
mov
aad
mov
lret
or
pop
int
test
mov
jmp
test
mov
jle
push
jg
daa
fisubrs
pop
sub
icebp
sbb
xchg
mov
aas
inc
loop
fmull
hlt
cmp
add
stos
js
and
lret
push
and
andb
jno
mov
xor
ret
pop
add
mov
push
movsb
sub
shrb
xor
test
jbe
fidivs
mov
jb
fstps
sbb
add
imul
xchg
push
mov
jo
dec
loope
mov
push
dec
or
xchg
inc
lcall
je
inc
sub
cwtl
aad
add
pop
nop
out
mov
lods
mov
inc
adc
andb
addl
pop
les
lea
push
adc
ret
sbb
mov
into
test
aas
adc
pusha
ret
cmp
mov
jge
iret
loop
mov
xchg
mov
cld
add
sti
xchg
out
pop
xlat
mov
add
ljmp
add
addr16
pop
mov
pop
fists
js
std
fildll
ss
add
add
fbld
lock
xor
ret
inc
xchg
add
sub
jge
testl
stos
adc
std
shr
shrb
lcall
sarl
sbb
les
inc
fidivl
sub
and
es
test
out
iret
sub
decl
jne
shrl
cli
mov
adc
cs
push
jae
nop
fcmovu
sbb
leave
sub
xchg
icebp
test
lock
push
ret
xor
inc
push
cmp
dec
pushf
add
cmp
and
push
add
sarb
cmp
xor
shrb
or
and
add
cltd
mull
inc
ja
cmp
mov
dec
jle
out
sbb
orb
loopne
inc
inc
fldenv
cmp
addl
mov
nop
jae,pt
mov
sti
cmp
mov
push
sub
loopne
js
xchg
ds
dec
xchg
std
stc
jns
hlt
dec
cmp
mov
pop
clc
cmp
cli
sub
mov
pop
clc
dec
jne
popa
in
xchg
aaa
cmpsl
loop
mov
leave
xor
inc
xor
or
mov
adc
cli
in
inc
inc
xchg
in
aas
jle
xchg
push
xlat
pop
shll
ljmp
inc
lea
adc
xchg
fisubs
xor
daa
arpl
push
aam
pop
add
fucomi
lea
xchg
xor
lods
aaa
push
test
xchg
xor
fisubs
pusha
int
mov
out
setg
lret
test
pop
pop
call
popf
movsb
loop
sbb
jae
outsl
rorl
js
mov
leave
loop
sbb
mov
push
stc
ja
mov
mov
mov
pop
or
dec
and
outsl
inc
xchg
ds
dec
pop
pop
xchg
aam
add
dec
into
aad
and
divl
ret
int3
sub
mov
orb
xchg
xchg
call
pop
mov
xor
adc
mov
push
lods
cli
pusha
adc
rorb
rcrb
fcom
in
enter
pusha
jno
icebp
movb
inc
dec
shll
repnz
add
push
rcll
adc
xchg
and
fs
cwtl
jbe
dec
mov
mulb
movsb
subb
in
pop
jmp
sbb
outsb
fs
dec
inc
jmp
shl
cmpl
iret
repz
add
gs
shlb
pop
add
call
mov
ljmp
ds
xchg
sbbl
je
mov
dec
xor
in
pop
sti
add
jecxz
test
aad
or
mov
das
sbb
pushf
stos
popa
leave
cmpsl
in
cmc
leave
in
les
cmpsl
imul
pop
adcl
cmpsb
lret
scas
xor
mov
jecxz
outsl
out
dec
lock
mov
outsl
out
popf
jbe
jno
dec
ljmp
imul
int3
mov
xchg
jno
jecxz
xchg
or
and
xchg
aam
into
mov
sbb
jns
xor
outsl
pop
pop
mov
push
inc
ret
jns
into
loope
xor
and
xor
jae
inc
nop
sahf
and
lods
sbb
std
sub
xor
out
cmpsb
dec
in
inc
dec
testl
cmpsb
popa
popf
push
sub
inc
dec
cmpsl
shlb
cmpsl
movsl
and
inc
xor
sbb
jl
out
sbb
adc
jg
dec
xchg
jno
push
xchg
loop
and
or
xchg
mov
xor
insl
mov
aas
jb
arpl
popf
mov
daa
ja
push
jl
and
jge
shlb
fisubl
fdiv
inc
ret
inc
fsts
adc
ds
js
xchg
jns
cmpsl
hlt
mulb
stos
mov
test
test
cmp
or
inc
cltd
jb
out
pop
icebp
cltd
int3
xor
es
pop
adc
add
bound
inc
push
rorl
lods
ja
shll
add
pusha
mov
add
xchg
and
shll
or
int
xchg
popa
addr16
pop
or
mov
jne
add
mov
xchg
daa
bound
out
pop
xlat
fisubs
fwait
mov
add
adc
push
out
addr16
cmp
bound
push
xor
orl
sarl
pusha
mov
pop
jb
test
inc
cmp
or
xchg
dec
inc
das
in
mov
or
sarb
inc
movsb
jo
jg
jno
mov
jns
jno
out
or
cltd
add
fisttps
les
cmpsl
call
int3
movsb
shrb
das
rolb
es
lret
push
mov
in
mov
pop
sbb
xor
pop
stc
inc
xchg
xchg
push
mov
cmp
ljmp
in
mov
js
out
cs
jae
xchg
or
lock
and
push
loopne
aas
xor
and
inc
inc
push
dec
sbb
sub
fidivrs
push
cli
cmp
shlb
stos
xchg
jb
dec
push
roll
lock
sbb
and
popw
mov
clc
nop
xchg
jne
push
mov
lahf
mov
pop
push
out
pop
cmpsb
add
out
je
in
and
cmp
andb
push
mov
mov
int
repnz
adc
fcoms
and
ja
add
xor
jae
pushf
ret
dec
xchg
scas
sar
repnz
or
iret
sti
lods
fcoms
mov
add
cmp
and
push
iret
test
iret
loopne
mov
into
lret
sub
or
fcmovnb
cmpsb
out
push
fsts
sti
push
addr16
or
jbe
push
leave
mov
add
mov
adc
jne
mov
in
fidivs
cld
rolb
mov
fcoml
xchg
mov
or
in
sbb
lock
shl
ljmp
add
xchg
mov
fiadds
push
cmp
stc
cmpsb
into
aam
out
aam
mov
or
cmp
adc
inc
mov
mov
call
sarb
rorl
std
scas
xor
jl
or
or
adc
stos
fidivs
dec
dec
int
movsl
es
ud0
ds
mov
js
jge
push
jge
mull
js
fs
jmp
rorl
cmp
stos
sub
mov
cltd
rclb
or
jae
sub
add
xorb
sti
gs
fadd
push
es
mov
es
daa
push
mov
loope
lea
jo
mov
shrl
sub
add
add
xchg
loop
inc
sbbb
nop
movsl
inc
push
adcb
pop
in
mov
ror
ficomps
fisttpll
pop
es
pop
sbb
std
movsb
mov
inc
cmp
insb
in
outsb
aas
rorb
push
inc
loop
imul
inc
mov
jae
mov
cs
shl
cs
and
xchg
jbe
cmpsb
push
mov
jnp
xchg
xor
mov
add
fldenv
in
mov
arpl
daa
in
insl
outsl
aam
lcall
cmpb
js
dec
mov
movsl
loope
sbb
fldl
insl
mov
push
mov
jo
dec
jl
ror
or
daa
mov
jg
notb
jns
dec
in
lods
mov
ret
xor
cmp
sbb
hlt
adc
adc
sahf
mov
shrl
mov
or
xchg
test
xlat
imul
pop
xchg
loope
mov
mov
push
pushf
pop
jl
cmp
jge
add
xchg
push
push
dec
dec
outsb
pop
arpl
aad
xor
cltd
fdiv
cmp
int3
gs
inc
mov
dec
faddl
movsb
inc
call
imul
sbb
push
loope
cmpb
and
push
enter
add
inc
sub
fidivl
ds
dec
mov
rcpps
cmp
push
lea
mov
adc
sub
lds
inc
loope
pop
xchg
mov
push
jle
push
es
leave
xor
pop
test
inc
sti
rcrb
or
inc
or
mov
push
sbb
fimuls
cwtl
pop
divl
nop
cmpl
outsb
rcrb
int3
mov
xor
insb
push
aam
out
push
addr16
shll
xor
ss
cltd
dec
mov
adc
and
testl
dec
mov
shl
mov
insl
out
movsb
cmp
out
pop
dec
mov
dec
sbb
jne
pop
dec
repnz
adc
push
sub
inc
xor
lcall
add
stos
inc
addr16
les
jb
push
add
adc
pop
ffreep
repnz
mov
mov
testb
xchg
gs
push
sbb
std
cmp
mov
pop
push
fiaddl
cmp
ljmp
pushf
outsl
pop
adc
jmp
and
dec
xor
dec
shrl
inc
sub
xor
addr16
cmp
stc
mov
das
jo
and
adc
pop
and
ret
mov
xchg
fiaddl
icebp
lcall
mov
roll
mov
dec
mov
loope
out
sbbl
test
lds
mov
icebp
lahf
cltd
sbb
cmpsb
adc
or
pop
push
mov
mov
popf
cmp
adc
xlat
test
pop
lret
fwait
gs
imul
cmp
mov
mov
mov
mov
lds
nop
inc
adc
cmp
jle
jg
mov
repnz
lock
push
test
sub
and
mov
jp,pn
rcrl
xchg
andl
fcoml
and
pushf
inc
inc
adcb
aam
and
ljmp
out
test
push
mov
loop
out
sub
test
mov
add
lock
mov
xchg
inc
add
push
in
inc
xor
mov
cltd
iret
mov
mov
das
sarb
cmp
or
and
cmp
rcll
xor
dec
clc
mov
add
je
cmc
lahf
add
jle
fstps
or
xlat
mov
jle
lret
sub
pop
hlt
hlt
and
sub
cmp
mov
xchg
jnp
cmp
in
mov
pop
movsl
cmc
nop
in
ret
jns
lock
and
aas
mov
adc
sbb
xchg
inc
cmc
mov
xor
jecxz
mov
pushf
xchg
repz
lea
xor
push
movsl
daa
into
push
ds
and
loope
cmp
push
ljmp
cmp
dec
cmp
stos
mov
lcall
jns
aad
lret
xor
and
sbb
sub
leave
mov
movsb
dec
jne
aas
cmp
pusha
clc
mov
xor
jmp
xchg
xchg
aaa
and
int
xchg
xchg
adc
cmp
outsl
push
out
lcall
ret
mov
repz
fsubl
sub
inc
in
repz
xor
lret
cld
cs
lahf
pop
sbb
sub
mov
ss
ds
loopne
std
aas
mov
idiv
push
fidivrs
ljmp
repz
inc
mov
mov
call
mov
je
and
loop
dec
inc
out
and
sarb
inc
imul
push
xchg
and
pop
loop
mov
mov
das
in
test
jns
sbb
pop
pop
das
or
jae
dec
adc
sub
mov
jmp
outsl
arpl
inc
xor
out
fsubrs
icebp
add
push
xor
push
sbb
pop
sahf
mov
popa
pop
push
sub
and
loope
outsb
mov
dec
lock
mov
mul
cs
fadds
aas
pushf
das
xor
mov
inc
dec
shl
nop
cmp
test
imul
sbb
add
imul
cmp
inc
shrl
stos
mov
repnz
test
sbb
in
outsb
pop
test
push
push
shlb
repz
loopne
xrelease
test
inc
inc
sub
dec
add
lods
cmp
popa
add
adc
out
adc
sbb
gs
fsubrs
insl
ss
and
faddl
daa
pop
push
bound
in
jns
fwait
jle
outsl
cmp
lds
push
xor
mov
shlb
fwait
in
jg
jnp
stos
dec
mov
jb
test
daa
jg
leave
adc
jo
inc
sub
sbb
stc
mov
and
imul
es
mov
pop
and
sarb
je
cs
jo
inc
cwtl
and
xchg
out
mov
dec
movsl
xchg
addl
mov
and
fstpl
jle
cmpsb
lahf
cmpsb
int3
add
push
add
add
outsb
orb
or
imul
idivl
and
lods
ret
lcall
cmp
int3
gs
sbb
enter
or
push
ljmp
ljmp
movsl
fisubs
pusha
enter
fwait
in
insl
test
dec
lods
aaa
xchg
sub
cmp
sub
das
stos
and
push
mul
fdivrs
fcomps
mov
and
mov
sub
dec
mov
ljmp
cmp
push
xchg
sbb
mov
ret
movsl
jne
andl
inc
popa
add
sub
aad
cltd
inc
and
mov
mov
test
shl
sbb
shll
data16
jecxz
dec
movsb
es
mov
clc
js
iret
ds
adc
push
xchg
sahf
push
sub
mov
fidivrl
mov
mov
jge
push
orl
mov
aad
test
cmp
fwait
xchg
mov
je
mov
inc
or
pop
mov
ret
sub
push
push
daa
cmpsl
push
data16
leave
xor
js
xchg
test
mov
sub
mov
mov
out
lock
fidivs
aaa
mov
out
shlb
jmp
xchg
mov
inc
adc
add
icebp
dec
or
inc
inc
ljmp
xlat
cmp
mov
out
sub
jmp
add
je
test
sub
mov
mov
add
sbb
nop
xchg
in
xlat
in
nop
sbb
jae
pop
stos
mov
xchg
pop
lea
fcoms
imul
or
add
sub
or
lea
mov
ficomps
cmp
jbe
loop
gs
scas
insb
add
mov
pop
stos
jecxz
pop
jno
in
pop
popf
mov
roll
push
test
lcall
inc
dec
es
mov
ss
loopne
pop
loop
lret
mov
jl
mov
xor
movsb
pop
mov
cmc
addr16
gs
daa
rcrl
xchg
inc
and
mov
or
aaa
mov
push
inc
std
jmp
cwtl
add
enter
cwtl
dec
sub
ja
xor
outsb
fwait
push
sub
idivl
xchg
mov
jno
or
inc
xchg
mov
mov
pop
daa
js
push
test
test
pop
outsl
cmpsb
sub
mov
push
in
add
loope
ret
xchg
mov
jo
sbb
xchg
stos
jg
jecxz
xor
sub
jge
out
inc
push
jle
push
push
pop
sti
mov
jns
xor
xchg
mov
dec
jmp
or
in
jae
push
loope
lods
rolb
fidivrl
fisttpll
cmp
inc
nop
cwtl
adc
mov
test
cltd
sub
mov
daa
leavew
sti
aas
adc
cmc
dec
outsl
fisubrl
es
xor
arpl
fs
test
hlt
xorl
push
ds
and
js
gs
xor
loope
and
out
sub
sub
cld
jecxz
push
sub
insb
jo
or
push
sub
xchg
add
dec
mov
dec
sub
pop
jmp
lds
test
lcall
mov
sti
loop
cmc
dec
fcomi
repnz
xor
dec
adc
mov
mov
inc
jle
sbb
xchg
xlat
scas
fs
xchg
jle
dec
pop
xchg
leave
dec
aam
dec
pop
push
daa
cmp
test
jge
lods
aad
push
scas
mov
scas
push
bound
add
xchg
and
push
cmpsb
jae
fdivr
inc
mov
xor
mov
and
jg
test
mov
push
add
outsb
dec
daa
adc
cltd
mov
out
sub
cmp
shl
xchg
push
aaa
jae
cwtl
jbe
roll
imul
ficomps
inc
movsb
pop
pop
or
mov
sbb
lock
call
dec
fiaddl
ljmp
daa
inc
aad
loop
xor
mov
or
cltd
dec
cld
xchg
push
push
std
jl
dec
pop
add
inc
loop
cmc
daa
adc
test
lahf
cmp
cmp
icebp
sbb
lds
arpl
cmp
sti
dec
ud0
and
bound
jle
xchg
bound
xchg
ljmp
push
cmpl
inc
pop
repnz
divl
test
aaa
daa
mov
shll
xlat
scas
iret
imul
cmpsl
aas
mov
scas
push
fnsave
and
sbb
sbb
into
xchg
ret
inc
cmpb
stos
push
dec
loopne
int3
aaa
and
adc
push
rcrl
xchg
cmp
xor
popa
sub
insl
cmp
outsb
repz
push
int3
mov
jle
adc
jae
and
cli
hlt
les
shlb
sbb
mov
xor
lcall
ds
popa
adc
mov
stc
sbb
lds
pop
mov
out
into
or
arpl
arpl
inc
push
shrl
daa
sbb
dec
fisttps
scas
pop
addr16
adc
into
dec
lahf
mov
pop
sbb
mov
mov
iret
and
pop
xor
lea
sub
push
xor
insb
jmp
dec
pushf
repnz
and
jl
cmpsb
push
inc
cmp
mov
jle
inc
shl
testl
and
add
out
inc
push
xchg
add
shlb
arpl
adc
arpl
cmp
mov
clc
imul
mov
sub
pusha
xor
fidivrl
fnstenv
xor
sub
or
pop
cld
addl
fnsave
mov
psllq
lret
inc
mov
outsb
shll
std
inc
or
idivb
stos
adc
jg
int3
jns
lods
push
xor
test
test
mov
dec
stc
test
or
mov
cmpl
sub
or
in
add
mov
push
pop
hlt
mov
cmp
mov
jae
mov
in
jp
dec
call
in
outsl
daa
xchg
orl
jle
aaa
sti
mov
sbb
jns
mov
cltd
pusha
dec
pop
mov
cld
je
daa
je
add
add
inc
scas
icebp
out
lret
push
push
push
ljmp
rcl
cli
movsb
push
add
add
sub
cmpb
sub
pop
fs
or
push
inc
pusha
push
mov
jns
jp
sbb
sbb
cmp
daa
pop
scas
ljmp
mov
std
ja
loop
pop
sub
dec
mov
cmp
das
or
fldenv
rolb
mov
cmp
push
sbb
dec
in
movsl
sub
rclb
xchg
fsubrs
add
cmc
stos
cmpsl
fst
push
icebp
mov
sahf
cmpsb
lock
pushf
sub
dec
adc
movsl
push
fadd
stos
jl
mov
add
mov
cmp
and
inc
fwait
mov
mov
inc
fstpt
or
inc
call
jbe
xor
fwait
lahf
ljmp
mov
insl
xchg
addr16
shr
jle
popl
mov
dec
subb
sbb
inc
cmp
mov
cli
inc
mov
xchg
push
xchg
adc
cmp
loopne
jnp
push
fisubrl
pop
into
rcrl
cmp
pop
bound
pop
xlat
xor
ja
jmp
add
int
mov
cld
in
or
scas
cwtl
sbb
leave
notl
pop
dec
repnz
add
fcmovnb
jno
xchg
mov
mov
jbe
out
and
sub
adc
or
icebp
ds
inc
rclb
dec
arpl
lret
add
fdivrs
sarl
jb
lds
sbb
add
mull
int
rcrl
fbld
inc
cmp
pop
push
push
cli
xchg
dec
or
mov
jno
pushf
inc
jg
xchg
mov
pop
xchg
js
adc
scas
cmc
jp
lahf
sbb
sti
cmpsl
aad
insb
adcb
or
hlt
sbb
push
lcall
std
and
ss
mov
mov
jmp
jae
jle
xchg
imull
int
push
ret
push
sbb
lea
dec
lods
pushf
aas
and
add
sbbl
push
bound
lods
js
in
jne
fsubrs
pop
aas
mov
sahf
sub
arpl
jb
test
out
repz
xchg
pop
jmp
fs
pop
pop
imul
les
adc
fidivrl
xor
fdivl
pop
les
cld
jns
mov
roll
xchg
or
cli
jb
outsl
inc
sub
jne
mov
test
push
sbb
repz
jno
sub
imul
add
mov
inc
sbbl
mov
hlt
mov
fisubl
xchg
fmulp
movsl
data16
xchg
cmpsl
std
push
out
push
in
xor
ffree
pop
mov
test
cli
mov
or
add
mov
sub
push
cmp
jmp
inc
icebp
push
cmp
sub
loope
xor
pop
jg
lcall
mov
outsl
xor
push
cmpl
arpl
xchg
out
leave
sbb
cld
xchg
imul
lock
in
push
out
pop
fisubl
clc
jns
repz
lods
cltd
pop
in
jnp
stos
mov
sbb
outsl
scas
add
fwait
pop
fwait
std
jae
jns
inc
mov
fcmove
pop
push
push
repz
pusha
in
mov
push
loope
mov
fisttpl
cmp
nop
and
sarl
push
cs
test
sbb
sbb
inc
fiadds
pop
out
push
flds
sbb
jae
loopne
decb
mov
imulb
inc
cmc
jo
daa
sti
add
sbb
push
cli
cmp
inc
sbb
out
fnstenv
sub
shrl
mov
imul
jecxz
sub
sbb
inc
mov
cmpsl
mov
dec
xchg
sbb
das
loope
xor
push
imul
testb
jle
jbe
pop
jmp
ret
mov
mov
add
mov
ss
xchg
fnsave
pop
rclb
push
mov
jecxz
rol
pop
movsb
pop
insl
jmp
fistl
jecxz
es
xchg
out
jmp
jp
pop
jmp
aad
jo
mov
mov
mov
aas
cmp
jecxz
jl
or
idivl
nop
outsl
mov
rcrl
arpl
jmp
inc
push
cld
and
std
shr
out
ds
lahf
sarl
fld
mov
shrl
paddb
jnp
adc
rorb
mov
xchg
mov
xchg
add
push
add
test
pop
aam
sbb
push
ds
arpl
imul
jb
push
ret
push
lret
cwtl
pop
push
and
xor
pop
and
out
fld
lods
fisubrl
aaa
jno
add
pop
ss
add
dec
int3
sbb
pop
jp
data16
scas
leave
sub
sbb
arpl
sahf
cld
outsl
dec
test
movsb
notl
sbb
cmc
fwait
movsb
mov
inc
ss
clc
mov
sbb
fistpll
pop
mov
cld
xchg
dec
add
sub
push
xchg
jbe
push
hlt
scas
ficompl
outsb
cs
sahf
in
or
pop
or
cmp
push
jp
sub
in
out
xchg
aaa
push
aad
mov
into
enter
lahf
xor
arpl
xchg
mov
sub
arpl
push
sti
cs
fmull
push
push
inc
xchg
movsb
in
incb
sti
lahf
stos
mov
mov
mov
stc
push
aam
dec
inc
or
hlt
jmp
dec
pop
les
sarl
sbb
mov
xchg
insb
inc
pushf
mov
in
push
popa
arpl
leave
fcmovbe
xorl
mov
cmc
inc
push
add
fidivl
push
mov
fisttpl
dec
xchg
loop
jne
std
xlat
vmread
sub
lods
out
ljmp
sbb
dec
test
icebp
dec
iret
or
mov
iret
je
xchg
mov
and
sub
enter
test
xor
cmp
xchg
mov
shll
add
test
out
inc
movsl
jnp
push
aas
idivb
inc
mov
or
scas
fwait
push
aad
fwait
and
idivb
sbb
jp
fldcw
jmp
insl
pop
xor
add
nop
cmpsl
icebp
nop
add
xlat
popa
or
insl
hlt
mov
lahf
jle
jle
fstl
jmp
das
repz
cmp
or
sub
inc
out
sbb
lock
cli
push
xor
lea
lds
lret
dec
outsb
in
mov
pop
iret
dec
jnp
lods
je
ret
pop
mov
sub
xchg
mov
into
add
pop
push
popa
lahf
inc
pop
jno
lcall
in
div
scas
push
push
add
pop
or
shr
daa
dec
inc
dec
ja
mov
dec
ret
push
loope
fldt
mov
xchg
and
or
cmp
pop
sti
bound
jns
je
icebp
adc
mov
in
pop
mov
mov
mov
adc
or
cmp
cmp
dec
int3
push
out
stos
out
movsb
cmp
subl
xchg
lods
movb
inc
fwait
in
jecxz
imul
jne
es
mov
inc
ss
mov
int
mov
in
lods
fwait
decl
pop
adc
stc
imul
xchg
xchg
sub
dec
mov
call
adc
or
pop
pop
out
mov
cld
in
mov
dec
jnp
repz
xchg
jmp
cmc
push
aam
adc
out
testb
pushf
je
sub
push
notl
pop
testl
dec
cmc
mull
xor
inc
dec
cmpsb
add
inc
inc
sbb
lods
lock
jmp
jnp
flds
xor
pop
leave
xchg
push
negb
test
adc
sub
sti
pop
mov
pop
add
sub
adc
loope
xor
dec
xchg
aam
clc
mov
adc
sub
sti
mov
mov
dec
push
jb
lcall
pushf
fldcw
push
sub
add
jno
xlat
inc
pop
sub
mov
push
je
push
push
pusha
xchg
sub
testb
add
pusha
xlat
sti
xor
xor
sarb
xchg
push
fs
and
loop
mov
add
icebp
aas
mov
fldt
out
mov
xor
pushf
adc
repz
sbb
imul
dec
andb
push
jo
lret
dec
mov
jns
xlat
or
inc
xor
push
call
ja
and
fldenv
scas
ja
lods
fildll
lea
or
or
pop
in
cli
movsb
cltd
add
inc
xchg
cmp
fxch
in
fcoml
sub
dec
add
iret
in
jl
loopne
sub
pusha
gs
push
lods
jg
push
jmp
sbb
adc
gs
pop
aam
push
pop
push
stos
dec
inc
mov
sbb
add
pop
xchg
clc
aam
fstps
mov
mov
clc
sbb
sub
out
dec
push
and
shlb
ss
pop
leave
and
outsl
or
adc
cmp
imul
pop
fpatan
cmpsl
mov
dec
lret
lods
jp,pt
mov
pop
fnstsw
xor
fcmovu
mov
jb
cmp
test
and
pop
lods
sbb
sub
jmp
push
test
jo
cmp
mov
test
dec
xchg
dec
int
jbe
push
loopne
cmc
push
rorb
shll
movsb
aam
outsb
imul
mov
jne
sub
idivb
aam
or
push
mov
push
daa
popa
mov
insl
ret
cld
std
xchg
push
mov
inc
mov
sub
mov
das
jnp
testl
mov
mov
outsl
inc
cwtl
inc
pop
cmpb
jl
inc
out
pop
lcall
cmc
push
inc
aam
adc
scas
xlat
outsl
push
cmp
adc
mov
dec
xchg
pop
or
cld
into
mov
add
mov
cmpsb
loope
jge
cli
cld
adc
mov
mov
gs
inc
loopne
pop
xlat
dec
popa
popl
lcall
insl
rclb
cmp
daa
mov
cmp
out
or
idiv
sbb
and
xchg
or
cwtl
push
lods
mov
in
xchg
stos
roll
movsb
out
cli
mov
shr
dec
in
jg
mov
xor
hlt
mov
sub
dec
lahf
lds
cmp
push
adc
jbe
pop
cmp
sahf
nop
movsl
loope
aam
and
jl
dec
xchg
mov
sub
loopne
imul
pop
push
ss
xchg
pop
add
and
daa
mov
pop
scas
inc
in
cmp
andb
pop
sub
mov
or
sub
out
xlat
adc
rclb
adc
push
cltd
nop
xchg
repnz
or
mov
sub
add
mov
sbb
xchg
push
xor
movl
fwait
cmp
clc
push
push
lcall
jne
fsubrl
jecxz
add
cmpsl
push
add
xor
push
cld
jb
push
sub
pop
fmul
daa
xchg
scas
jge
dec
std
and
sbb
lea
inc
push
mov
leave
movsl
hlt
cmpsl
mov
lea
dec
sbb
jno
rol
mov
scas
inc
aam
pop
mov
cmp
fildll
sub
push
sarl
jbe
cmp
push
add
lods
js
cmp
push
mov
jmp
inc
mov
sbb
cmpsb
push
lea
mov
sahf
sbb
ror
pop
lret
outsb
cmp
pop
mov
aaa
mov
add
adc
dec
inc
xchg
into
sbb
push
out
sbb
mov
sub
lods
cmp
les
jecxz
sbb
pop
cmp
xchg
ljmp
clc
dec
mov
imul
subl
dec
test
adc
ret
sbb
les
iret
enter
je
aas
dec
dec
or
stos
enter
xchg
or
dec
dec
push
pop
inc
lcall
mov
jnp
inc
push
pop
fs
les
repz
xchg
xor
test
jne
insl
add
imul
lods
add
je
test
js
dec
pop
push
imul
scas
sub
jg
daa
inc
pusha
dec
push
mov
mov
mov
std
rolb
cwtl
add
cs
push
mov
adc
std
push
sahf
int
shrb
sub
pop
push
imul
dec
cld
cmpsb
popf
and
std
sbb
fwait
xor
inc
cmp
mov
sbbb
test
jo
add
cld
nop
mov
out
xchg
push
mov
cmp
ja
das
mov
inc
dec
xchg
pop
nop
lea
jae
js
les
lods
push
adc
add
cmp
mov
ret
lahf
call
dec
adc
mov
xchg
test
mov
xchg
leave
sub
inc
xchg
pop
cmp
mov
nop
xlat
ja
int3
in
bound
and
xchg
inc
orl
arpl
sbb
mov
mov
add
and
pop
je
cmp
lahf
sub
je
pop
pusha
movsl
cmp
push
repz
and
xor
dec
dec
leave
orb
out
jle
sbb
inc
jne
mov
stc
pop
inc
test
and
stc
mov
xorl
mov
and
dec
notl
or
jne
jno
repnz
mov
repz
mov
sub
mov
fstpt
ficoml
sub
into
xchg
out
dec
or
dec
adc
or
push
je
hlt
or
fisubl
lcall
jnp
xchg
push
or
call
xchg
std
xchg
ljmp
add
xor
jle
imul
lcall
lret
and
or
or
icebp
add
add
movsl
push
push
mov
mov
in
lea
fisttpl
mov
sbb
fcom
xchg
and
xor
xor
bound
push
xlat
or
adc
out
stos
movsb
fwait
lods
dec
and
ja
push
cmpsl
stc
jns
imul
adc
jne
inc
mov
push
movsb
push
in
clc
loopne
dec
sbb
fadds
mov
pop
xchg
pop
mov
gs
jne
addb
xor
pop
xchg
jmp
xchg
jo
xchg
sub
pop
inc
push
add
dec
jg
jge
daa
pop
jmp
dec
lods
shll
add
dec
fwait
lahf
fsubs
fistps
les
mov
enter
pusha
fdiv
cs
loopne
mov
inc
sbb
cmpsl
dec
or
daa
push
mov
xchg
mov
pop
aad
push
or
xchg
cli
aas
popf
ret
push
je
adc
aam
mov
ret
fidivs
loope
xor
rorl
cltd
mov
xorb
cmpsl
mov
lcall
cmp
call
xor
jmp
dec
mov
jecxz
pusha
test
pop
pop
adc
jo
push
repnz
ss
pop
add
sbb
mov
jbe
xor
leave
jne
out
dec
and
outsl
popf
lret
gs
ret
adc
mov
mov
mov
mov
test
repnz
add
out
mov
xchg
push
inc
mulb
mov
inc
add
in
cwtl
or
jg
jge
outsb
les
lds
xchg
mov
cwtl
inc
lahf
xor
test
das
sbb
mov
cmpl
je
add
jns
xchg
idivb
xchg
sbb
js
flds
adc
leave
test
insb
dec
xchg
je
rorb
das
mov
jae
lea
addr16
js
sub
fisttpl
outsb
jge
dec
adc
mov
xlat
lahf
push
sub
push
xchg
sub
xchg
add
sbb
lret
arpl
jno
stos
jge
jmp
xor
adcl
lds
pop
mov
xor
fwait
rcrb
and
sbb
ja
xor
pusha
repz
push
lods
frstor
into
jmp
mov
jb
xor
cld
cltd
cs
in
xor
sahf
jl
scas
pop
mov
inc
sub
faddl
data16
dec
xchg
and
lahf
nop
pop
mov
cmc
mov
and
dec
xor
lahf
sub
lock
cld
popf
push
xchg
sub
sub
stos
and
mov
test
cmp
push
pop
rclb
xchg
vmovups
inc
inc
aam
data16
add
iret
sbb
xchg
jp
push
in
add
scas
push
lods
pandn
int
fs
scas
add
inc
lock
push
push
loop
mov
or
push
dec
lret
xor
mov
or
inc
xor
out
in
sub
pop
cmp
jmp
cs
cmp
test
push
jle
psubusw
jns
test
pusha
mov
xor
jb
std
addb
pop
test
sub
and
incl
pop
xchg
mov
mov
mov
in
cmpsl
mov
data16
pop
test
or
lcall
packssdw
add
push
sti
jp
xchg
cmp
cmc
pop
jb
hlt
inc
lret
pop
test
subb
mov
xor
xchg
pop
je
lods
and
dec
in
dec
popa
mov
aad
inc
jge
flds
xchg
test
out
inc
mov
jmp
mov
fs
xor
sar
cltd
or
mov
jns
xchg
mov
repnz
bound
shr
mov
sub
mov
xchg
push
mov
das
cmpsl
pop
inc
mov
pop
pop
hlt
mov
mov
mov
arpl
mov
ret
data16
loope
jg
lcall
into
push
and
into
lea
je
stos
roll
xchg
mov
out
pop
cmp
aaa
jb
jns
lret
push
and
movsl
sub
mov
sub
leave
fs
adc
mov
stos
adc
dec
pop
push
fistpll
scas
arpl
test
ror
mov
jle
test
add
jmp
sbb
int3
cltd
enter
push
sub
and
aam
mov
lcall
cmp
pop
loop
jne
or
adc
insb
jp
nop
fists
jne
push
test
lea
outsb
in
mov
jnp
jp
xor
or
hlt
cs
dec
xor
cmp
inc
sub
adc
mov
sbbb
pop
out
push
test
xor
mov
or
incb
cwtl
cmpl
iret
std
lret
insl
cld
cmpsb
pop
cmp
mov
enter
pop
jbe
shll
inc
sbb
inc
or
outsl
sub
sti
xor
ficoml
cld
loope
cmp
sub
adc
sahf
test
inc
es
dec
loopne
inc
fstpt
mov
jmp
or
jb
and
stos
cs
and
push
add
adc
in
push
cld
in
mov
mov
movlps
test
out
inc
cmp
mov
popa
mov
push
fiadds
sub
jecxz
daa
jb
outsl
push
mov
jge
add
pusha
popf
xchg
lea
test
outsb
push
int
repz
lret
push
ret
dec
out
dec
mov
mov
ss
je
mov
popf
shl
and
xchg
aam
cmp
dec
nop
imul
dec
lods
pushf
stos
pop
pop
daa
je
jecxz
ds
push
jb
xchg
mov
cmpsl
sbb
cmpsb
movsb
movsb
repnz
fdivrl
pushl
mov
bound
inc
pop
inc
pop
subl
adc
add
inc
mov
push
jmp
int3
sub
pop
lret
divps
lea
cli
pop
stos
adc
outsl
shrb
sub
inc
and
jns
ret
imulb
addl
fldenv
jmp
or
aas
ds
inc
add
in
js
push
insl
jle
adc
mov
fs
sarb
and
aaa
inc
fidivl
popf
mov
loopne
jnp
fsubl
or
push
rcrb
movsl
mov
aaa
cli
pop
jge
and
ja
push
mov
mov
sahf
iret
test
das
int
stos
dec
sub
push
xor
and
xchg
test
std
insb
pop
iret
adc
test
rcll
add
jp
mov
in
es
fsubr
stos
inc
out
rcl
lock
cmpsb
mov
mov
inc
xchg
popf
adc
pop
addr16
leave
loop
js
adc
ja
xchg
push
mov
in
movsl
call
jge
cmpsl
insb
pop
cwtl
add
lret
cmp
imul
int
in
shr
lret
stc
push
nop
or
ret
mov
and
pop
sbb
inc
inc
and
push
js
inc
mov
lods
popl
jecxz
sub
fisubrs
add
ja
sbb
arpl
cmp
jno
je
imul
stc
lock
daa
setae
xor
push
sti
fs
cmp
stc
push
fwait
aas
jl
call
shr
xor
imul
mov
arpl
jne
fs
dec
and
add
mov
mov
sbb
jecxz
cwtl
loope
push
aas
arpl
stos
push
mov
ret
repnz
jecxz
and
pop
sbb
in
subb
dec
ja
leave
jmp
jmp
rcl
into
fnstcw
leave
cwtl
loop
imul
test
jne
add
adc
sbb
push
xor
xchg
imul
mov
adcl
sub
xchg
inc
sbb
jge
sarl
nop
pusha
popf
jae,pt
adc
repnz
lcall
dec
push
repz
pop
mov
pop
mov
push
mov
xacquire
hlt
jl
lock
jae
or
or
and
fisubrs
xchg
cwtl
mov
push
pop
inc
popa
es
popf
inc
ljmp
mov
mov
bound
cmpsb
xor
mov
cmpsb
iret
mov
xor
cmpsl
andl
mov
hlt
fsubr
mov
pop
out
ffree
repz
sbb
bound
pop
pop
dec
inc
sbb
mov
pop
mov
pop
scas
hlt
cltd
jno
sbb
nop
mov
dec
addr16
out
pop
loopne
cwtl
adc
mov
inc
fs
sub
loop
adc
loope
and
xchg
ljmp
decl
clc
insb
stos
adc
mov
push
iret
adc
dec
mov
bound
sti
push
dec
nop
nop
sbb
cmp
test
arpl
arpl
faddl
popf
and
icebp
mov
cmp
pop
push
dec
sahf
xor
xchg
sbb
lods
lcall
rorb
shll
cli
dec
pop
leave
sbb
cmpsb
xchg
sub
sbb
loope
push
lock
pop
test
xchg
xchg
push
stos
sbb
imul
jmp
outsb
or
out
int3
andb
out
or
test
push
mov
xchg
pop
xchg
xor
insb
cltd
pop
cmp
add
sub
icebp
mov
mov
adc
push
sub
mov
fimuls
lods
inc
pop
lahf
stos
imul
sub
or
movsl
add
fwait
bound
add
adc
fwait
cmp
xor
loope
and
dec
test
dec
mov
aad
out
adc
add
adc
sub
int
mov
dec
xchg
cmc
lret
daa
or
dec
xchg
xchg
int
mov
test
into
ret
sub
test
stos
xor
outsl
cli
ss
or
xchg
cmp
and
out
sar
arpl
xor
pushf
inc
and
imul
fists
jg
pop
add
cwtl
data16
pop
jnp
in
dec
mov
xorl
out
add
mov
rcrl
dec
movsb
sbb
xchg
xchg
ja
mov
and
or
cmp
push
inc
pop
cmp
mov
icebp
ja
mov
push
cmc
push
in
cmp
lahf
jecxz
and
sbb
daa
jns
fs
test
pop
inc
in
mov
je
out
push
aad
lcall
fistpl
pop
pusha
sbb
hlt
push
mov
push
mov
xor
lcall
pop
mov
stos
pushf
xor
jg
lahf
test
mov
push
add
xlat
cli
sti
outsb
adc
loop
mov
adc
orl
in
enter
fnsave
or
dec
nop
mov
fbstp
pop
fcomip
mov
pop
pop
or
cs
sbb
mov
and
andb
cmpb
hlt
dec
add
stc
adc
icebp
out
lea
inc
in
or
test
or
aaa
mov
call
mov
add
add
ret
or
icebp
ja
push
mov
mov
popa
pop
pop
adc
adc
push
fdiv
cmc
inc
sbb
add
imul
pop
insl
xchg
sub
push
stos
scas
sbb
lea
xlat
xor
mov
sub
stc
je
jp
into
int3
adc
pop
adc
pop
mov
push
scas
or
and
jg
arpl
mov
out
mov
jae
sbb
mov
ss
jp
xchg
mov
dec
push
sub
inc
dec
ret
frstor
dec
ja
push
mov
sahf
sub
ss
ss
movsb
push
repz
test
nop
js
xorl
xor
and
inc
inc
in
outsl
push
mov
subb
sbb
lds
jnp
mov
dec
cmp
in
idivb
pop
dec
bound
cmpsl
adc
jns
and
xchg
fs
int
xor
subb
sbb
sbb
xor
xor
jae
dec
adc
out
sbb
jo
fisubrl
jbe
in
data16
add
loop
push
inc
or
out
or
in
fiaddl
jmp
xchg
sub
xchg
push
sbb
lret
pop
jmp
mov
cmpsl
leave
icebp
insb
ret
rol
push
push
bound
cli
stc
cld
lea
sub
sbb
ds
pop
jae
push
jb
xlat
clc
jbe
out
ja
je
adc
je
push
cmc
cltd
dec
push
push
and
outsl
add
push
push
jnp
rclb
sbb
mov
adc
mov
les
xor
fidivrs
xor
adc
push
and
fwait
pop
dec
inc
mov
sbb
push
imul
push
fdivl
in
mov
mov
insb
adc
sub
jo
hlt
mov
jae
sbb
shrb
cmp
flds
lock
outsb
ror
lret
lret
cmp
xchg
dec
xchg
test
std
add
adc
pop
pop
aaa
and
dec
cmp
rol
add
jns
imul
mov
inc
sub
sarl
iret
adc
or
loope
add
xlat
dec
idiv
lahf
dec
add
inc
fstl
aaa
sub
or
adc
xchg
in
ds
dec
sub
pop
dec
mov
sub
jne
mov
xchg
mov
push
icebp
cmc
jae
lods
fdivrl
negb
das
out
fmull
push
inc
lcall
sbb
adc
mov
inc
push
pop
jge
aaa
push
sub
cmp
leave
dec
sub
inc
xchg
push
test
ds
add
push
add
jns
fnsave
repz
cwtl
or
sbb
mov
outsb
fs
outsl
jle
adc
mov
in
pop
sub
pusha
add
mov
int3
ss
pop
jmp
lret
cmp
sub
divl
lret
jle
inc
xchg
pop
push
pop
jae
dec
repnz
mov
test
sbb
imul
outsb
out
ret
dec
gs
cmp
cmp
cmpsb
ds
inc
rcr
dec
aad
jnp
mov
outsl
loopne
stc
filds
add
pusha
cltd
adc
aas
xlat
xchg
leave
mov
call
sbbb
leave
fnop
push
pop
int
xor
xor
roll
clc
pop
cmpsl
cmc
aas
inc
fildll
icebp
fdivrs
nop
sbb
mov
add
imul
dec
push
adcb
xor
push
xchg
js
dec
insl
xchg
adc
push
push
push
add
das
fisubs
jb
into
pop
push
inc
cmp
pop
imul
and
jmp
jge
notl
ret
cld
dec
lret
dec
xchg
dec
jp
mov
mov
sarl
jmp
imul
cltd
test
scas
mov
stos
adc
je
mov
int
aas
push
cld
es
rol
adc
and
sbb
pop
mov
add
mov
cmpsb
mov
out
fstpt
popf
jecxz
hlt
lahf
inc
negl
shr
out
add
and
push
movsb
dec
mov
cmp
movsb
stos
lea
cmpb
ds
mov
leave
mov
inc
dec
push
shl
xchg
cwtl
fisttps
popa
aad
or
fwait
sahf
sub
push
jmp
adc
in
inc
in
pop
jns
aas
std
inc
push
mov
and
xor
loope
popa
pop
int
fs
ret
push
lds
add
lds
mov
sub
push
leave
add
dec
stos
je
shll
jle
push
add
enter
movsb
jmp
xor
fsts
and
dec
lret
and
out
call
mov
stc
sbb
fnsave
enter
jle
scas
jg
dec
mov
sbb
pop
xor
jne
fs
lcall
lock
pop
stos
push
fcompl
pushf
push
cmp
jg
je
or
fisttps
lahf
arpl
add
cmpsl
enter
cltd
rclb
andl
inc
cmp
adc
insl
cs
movsl
and
fidivs
cs
bound
cli
sub
in
mov
clc
shrb
add
dec
add
enter
cmp
leave
aaa
xchg
dec
or
jae
cmpsl
and
adcb
add
cltd
out
call
push
loop
add
inc
jp
in
test
call
dec
mov
dec
int3
jbe
mov
ror
cmpsb
dec
pusha
cltd
dec
icebp
mov
rcrl
das
pop
adc
xchg
cmp
pop
jl
inc
test
adc
int
or
ljmp
push
adcl
fsubrs
mov
push
shll
push
loopne
fwait
jo
in
scas
and
iret
outsb
dec
fidivl
push
mov
aaa
xchg
mov
fwait
popa
push
push
inc
call
jge
lcall
stos
jl
jg
fs
loopne
and
jle
idivl
push
movsl
sbb
mov
adc
mov
fistpll
add
and
sub
xchg
jo
leave
stc
mov
arpl
mov
sbb
gs
mov
cld
cmp
lods
xor
fmul
cmpsb
mov
jae
jae
cli
out
jp
repnz
loopne
xorl
sbb
xchg
movsb
mov
jo
sti
cmpsl
dec
lcall
lds
in
jmp
pop
push
mov
leave
or
sbb
mov
out
in
xchg
loopne
add
int3
mov
mov
lods
rorl
sub
fldl
outsl
jno
jnp
add
rcrb
cmp
sub
sbb
sbb
dec
mov
dec
xchg
mov
push
xchg
xchg
mov
push
aas
sub
pushf
icebp
xlat
pushf
sarl
or
nop
or
push
inc
sub
inc
inc
jne
xchg
rcrl
mov
movsl
pop
sbb
mov
loop
jo
iret
xor
mov
jbe
mov
xor
gs
and
fstl
les
or
sbb
loope
lret
rcrl
mov
push
xchg
add
cmc
adc
fisubrl
sub
mov
bound
xchg
mov
sub
sub
mov
in
add
hlt
xchg
sti
fidivs
inc
adc
mov
lods
push
mov
bound
cwtl
out
xchg
sbb
bound
mov
bound
inc
pop
les
sahf
jle
xor
dec
pusha
push
or
mov
cmp
mov
cmc
mov
pop
pop
xor
movsl
xchg
mov
or
cld
lret
ja
xchg
bnd
sub
push
js
aam
sahf
mov
ja
test
or
jae
pop
into
mov
icebp
mov
and
dec
and
cwtl
es
or
aaa
and
lahf
orb
mov
add
fs
rcrl
and
test
cmp
fdivrs
mov
jo
jcxz
jne
loopne
aaa
and
mov
xlat
add
xchg
sbb
aad
mov
ds
xchg
push
adcb
and
inc
sbb
mov
les
mov
xchg
and
stos
int
push
dec
hlt
enter
mov
imul
aam
cmc
push
sub
lret
int3
mov
aas
sub
imul
aad
es
in
mov
dec
mov
mov
add
mov
ret
imul
push
ljmp
sbb
pusha
popa
mov
cmpsb
divl
shl
pusha
sub
adc
js
mov
fs
ret
sahf
adc
int
imul
nop
mov
jmp
hlt
or
fdivrs
inc
cmp
inc
jae
les
sahf
jl
rcrb
stos
mov
cmp
push
scas
xor
mov
xchg
or
lds
pop
adc
hlt
mov
lea
or
ds
sbb
fstp
mov
outsb
sbb
mov
add
xchg
cmp
sarb
aas
mov
push
cmp
sbb
push
xchg
aas
inc
aad
or
cmp
in
loopne
hlt
mov
into
jl
mov
fstpl
ds
pop
pop
mov
push
repz
repz
imul
leave
ds
mov
sub
mov
fmull
adc
cs
roll
xor
pop
inc
lret
adc
lret
mov
mov
xor
sbb
push
out
cld
push
inc
mov
dec
xor
repz
push
push
xchg
adc
es
pop
jp
in
mov
mov
dec
jo
mov
testl
or
push
and
and
into
roll
addr16
popa
dec
dec
xchg
push
or
jl
into
nop
pushf
jp
notl
and
and
dec
xchg
pusha
pusha
push
inc
mov
or
cmpsl
add
mov
std
cwtl
xchg
push
jmp
je
add
imul
popf
dec
cmp
and
das
pop
addr16
push
xor
fsub
test
jo
push
mov
test
bound
out
jle
xor
dec
icebp
or
lods
jecxz
aam
cmpsb
cmc
mov
inc
loope
test
dec
or
cld
fucomi
push
xchg
xchg
loopne
cmpsb
dec
xor
push
addr16
push
cmp
imul
pop
in
test
loope
adc
lock
xor
and
sbb
daa
adc
jne
mov
sub
test
push
push
mov
inc
cltd
mov
aaa
loop
fmuls
scas
insb
adc
js
adc
pop
add
loopne
inc
repnz
ja
xor
in
push
nop
icebp
mov
popf
lret
test
dec
scas
inc
ficoml
adc
push
cwtl
std
push
js
je
pop
xchg
xchg
fstps
or
lahf
dec
ret
or
rclb
adc
or
js
loop
popa
jmp
fnstenv
mov
sbb
jb
xchg
scas
enter
adc
push
ja
xchg
xchg
cmpsb
mov
add
xchg
pop
lret
iret
push
or
mov
sbb
mov
call
ret
lcall
push
loope
insb
push
mov
sub
loope
xchg
push
aas
int3
pop
xchg
xchg
mov
test
pop
mov
in
test
ss
push
push
mov
pop
add
jmp
pop
or
and
xchg
jmp
cld
in
inc
sti
inc
cmp
lahf
insl
push
enter
push
pop
ret
loope
stc
mov
adc
pop
sbb
insl
shlb
hlt
xchg
popa
inc
inc
scas
or
cmpsl
inc
add
jns
test
imul
jnp
icebp
xchg
mov
or
mov
and
jo
add
adc
push
add
mov
push
iret
cmp
push
test
leave
daa
aad
inc
rcll
jp
xorb
dec
in
test
mov
sub
hlt
js
inc
cmp
inc
push
pushf
cmc
sub
loope
pop
mov
jl
and
pop
pop
sub
mov
xchg
ds
or
adc
sbb
mov
sbb
sub
pop
cwtl
lret
sub
mov
fistl
sbb
outsl
push
inc
add
cmp
out
xor
das
leave
mov
jno
test
aam
xlat
ljmp
int
mov
and
mov
aas
xor
lret
inc
repnz
jmp
mov
jae
cld
jo
dec
or
pop
jo
mov
scas
jno
add
clc
fwait
pop
js
push
lcall
popf
out
push
push
or
mov
fistpll
fbstp
xor
mov
jno
fildl
mov
pop
scas
cltd
sbb
xor
aad
cmp
cmpsl
loope
mov
out
insl
xchg
pusha
test
sbb
lret
jae
mov
insb
and
jb
enter
fiadds
sbb
cmpb
lock
mov
adc
fdivs
mov
adc
test
mov
inc
popf
adc
daa
loop
sbb
scas
xlat
dec
add
xchg
jae
or
loope
into
mov
adc
sub
mov
lods
pop
cmp
gs
insb
mov
orb
sub
add
add
fcmovu
std
stc
iret
ret
xor
lock
imul
test
jns
ss
pop
ret
lret
out
outsb
mov
cmp
outsl
and
adc
pop
push
addr16
mov
jg
xchg
jmp
push
stos
cmpsb
add
dec
pop
push
in
inc
jb,pn
ljmp
add
mov
dec
pusha
cmp
add
jno
xchg
orl
mov
or
scas
push
shll
test
icebp
fdiv
jb
lahf
outsl
xor
leave
adc
or
pop
xchg
daa
push
sti
insl
stos
ljmp
xor
fdivl
jle
fldt
push
inc
sbb
cmp
shrb
sub
add
dec
in
lds
xchg
outsl
xchg
or
mov
mov
sbbb
pusha
sbb
arpl
push
sub
lods
push
ds
adc
test
push
aam
pop
icebp
call
fs
dec
pop
ret
pop
ljmp
in
pop
repz
decb
xchg
stos
adc
jb
xchg
mov
jecxz
cmp
and
sub
cltd
cli
fwait
icebp
test
test
je
adc
cld
into
xor
sub
or
jne
leave
push
movsb
pop
lods
adc
xor
dec
push
out
aas
dec
jmp
sahf
adc
cmp
sub
imul
xor
and
inc
adc
pop
in
shl
stos
icebp
xchg
test
or
jne
imull
dec
int3
sbb
pop
jbe
inc
mov
lcall
mov
pop
adc
gs
icebp
test
xchg
mov
fnsave
inc
xchg
pushf
xchg
rorb
mov
or
fldcw
faddl
pusha
in
ds
mov
pop
leave
mov
jmp
std
div
mov
adc
pop
cmp
push
pop
enter
out
or
push
inc
mov
js
cwtl
add
jno
sbb
push
rolb
xor
pop
add
inc
mov
cld
fucom
fcomip
mov
jno
lods
cmp
jmp
lret
xchg
in
or
addl
dec
dec
ds
cmc
gs
inc
test
test
mov
popf
push
mov
xor
test
jmp
xchg
dec
shlb
mov
mov
mov
inc
mov
xor
pop
cmc
mov
and
jb
int3
jnp
movsl
pop
iret
mov
out
jb
andb
jg
lcall
loopne
or
scas
xlat
and
dec
xor
add
mov
ficompl
lret
mov
mov
add
xor
jb
mov
imul
and
jbe
iret
sarl
push
in
xchg
insl
scas
xchg
mov
push
mov
sbbb
jns
rcll
cmpsb
or
adc
jp
jl
jmp
pop
add
and
xchg
jle
xchg
pop
orl
cmp
loope
das
ret
sub
adc
sub
das
mov
aad
mov
push
mov
and
subb
icebp
gs
xlat
loopne
stos
ret
adc
rcr
fwait
pop
shll
in
mov
mov
push
call
icebp
fsubl
xor
or
mov
int
mov
cmp
sub
addr16
popa
cmp
xor
fisubl
inc
aaa
loop
xchg
sbb
xor
sub
mov
cwtl
adc
test
xchg
pushl
test
pop
imul
mov
push
xchg
cmpsl
loop
nop
das
add
pop
inc
pop
push
pop
mov
jp
inc
stos
imul
adc
insb
enter
or
inc
repz
and
in
pop
and
xor
out
push
inc
inc
pop
stos
dec
dec
xchg
test
pop
adc
cwtl
or
out
loope
push
cmovnp
cmp
and
frstor
jmp
int3
iret
bound
dec
fwait
mov
shl
aas
xchg
xor
mov
je
dec
out
in
cwtl
loope
hlt
out
jbe
pusha
push
adc
gs
cmp
mov
mov
hlt
xchg
sbb
inc
dec
add
mov
mov
xchg
aam
pop
push
sahf
or
stos
outsl
lods
lahf
andb
mov
ds
rcrl
jne
jg
daa
je
cld
push
xchg
cmc
cs
pop
cmp
daa
adc
mov
xchg
stos
rorl
test
cmp
or
test
or
pop
mov
sti
pop
xor
xor
inc
mov
pop
sbb
mov
nop
mov
and
sub
adc
mov
in
mov
xchg
test
cmp
std
jae
xor
pusha
dec
sbb
cmpsl
rorl
stc
dec
or
imul
pop
incl
mov
push
xchg
enter
jns
loope
xchg
mov
pop
sub
outsl
push
or
ss
cmc
dec
in
ss
lods
out
cmc
dec
and
push
xor
cmpsl
fnstsw
jmp
js
inc
jo
leave
mov
adc
or
and
test
inc
jge
cld
push
sub
inc
cmp
xchg
in
lock
fwait
jge
xor
stos
rcll
mov
lods
xchg
fdivp
xchg
cmp
repnz
mov
outsl
shr
or
xchg
push
cmp
jnp
bound
je
divb
sahf
sti
push
aad
mov
mov
push
jmp
xchg
xor
aam
cmpsb
pop
and
fs
sbb
pop
mov
xchg
insl
and
xor
mov
loope
out
data16
adc
jge
popf
xchg
fdivrl
xchg
jge
dec
sub
test
or
popf
jecxz
xor
insb
mov
and
mov
mov
inc
bound
fsubl
mov
pop
sbb
sarl
notb
lahf
adc
decb
jne
cli
mov
fnstsw
sub
xor
sub
adc
cmp
mov
and
cmpsl
hlt
jns
notb
sub
repnz
xchg
mov
sub
aam
xlat
push
arpl
cmp
jns
cmp
jp
sbbb
clc
sbb
nop
mov
nop
out
jge
jmp
cli
pop
cs
adc
mov
cmc
cmpb
inc
test
xlat
mov
and
stos
sub
mov
arpl
test
cmp
loope
shrb
jmp
add
out
jb
inc
testl
rorl
insb
dec
int3
repnz
push
add
jmp
pop
push
and
sub
shl
mov
inc
push
stc
xor
cltd
insb
xor
jo
pop
icebp
inc
inc
out
testb
or
mov
xchg
pop
outsl
gs
and
mov
xchg
jae
call
adcl
pop
outsl
dec
lcall
andl
sbb
clc
cmpl
fidivrs
pop
stos
xor
and
aas
or
push
data16
lods
cmp
cltd
and
outsl
mov
mov
inc
mov
aaa
rorb
cmpsl
loopne
imul
push
sub
dec
mov
mov
daa
rorb
xor
adc
int
das
aam
cmc
movl
loope
int
jl
mov
xlat
adc
mov
faddl
sbb
jg
arpl
jp
xor
or
aas
cmp
xchg
jl
test
xchg
jecxz
and
cltd
lahf
or
enter
sub
cmp
in
in
jge
inc
int
sub
aaa
and
jno
cmp
pop
pushf
sub
fisttpl
cmp
sbb
imulb
push
fnstcw
pop
insb
mov
adc
xorb
xchg
jbe
push
aad
push
mov
mov
xlat
adc
jnp
pop
xor
mov
scas
and
push
fstl
inc
repnz
rcl
iret
push
lret
mov
stos
insl
mov
lods
hlt
dec
jle
push
xchg
faddl
cmp
jae
cmp
push
sarb
loop
lret
cmp
nop
add
mov
mov
sti
dec
jl
or
add
jg
insb
into
lret
iret
or
js
adc
fnsave
add
jne
movsl
cmpl
xchg
loopne
int
adc
dec
mov
jnp
movsl
mov
in
scas
inc
insl
jbe
sbb
inc
add
test
test
jecxz
pop
repnz
rcl
das
dec
sub
mov
out
sbb
pslld
xchg
das
cmc
ds
cltd
add
mov
scas
jo
mov
adc
outsl
cmp
out
stos
test
aam
jmp
and
and
add
mov
jnp
mov
mov
movsb
fcomps
scas
sub
mov
out
push
repz
mov
or
xchg
outsl
mov
push
jl
aaa
mov
daa
pop
push
mov
cwtl
das
icebp
out
cwtl
adc
sub
dec
into
mov
mov
dec
in
icebp
xor
out
cmp
out
cwtl
daa
mov
pop
mov
faddl
xor
loope
cltd
add
fs
daa
inc
and
cltd
adc
test
addl
loope
sbb
orb
mov
sbbl
pop
adc
cli
push
outsl
stos
mov
xchg
bnd
or
add
add
add
add
sub
add
cwtl
add
adcb
add
fadds
add
add
add
add
add
dec
add
addb
add
jo
add
add
add
add
add
pusha
add
add
or
call
add
add
add
mov
add
push
icebp
or
sub
add
mov
add
addb
add
add
add
enter
sub
or
and
add
add
add
lock
addb
add
add
add
or
add
in
in
or
inc
add
add
and
add
add
add
mov
dec
es
jae
loop
xchg
mov
sbb
mov
fisttpl
sbb
cmpsl
and
add
jmp
sub
cs
js
repnz
dec
lret
int
fldt
cmpsb
pop
icebp
movsl
aaa
mov
pushf
or
push
mov
mov
xorl
jge
ss
notb
push
inc
nop
push
mov
adc
scas
fmul
test
pushf
jns
rolb
int
push
pop
cmpsl
aaa
iret
loop
and
xor
loop
mov
sarl
out
push
popf
in
jmp
pop
inc
dec
cmp
adc
iret
mov
inc
mov
fwait
mov
mov
test
pop
sbb
rcl
in
repnz
.byte
nop
pusha
call
jmp
push
ret
call
jmp
mov
add
sub
cmpb
jne
mov
cmp
mov
jne
lea
push
push
pushl
lea
push
jmp
add
push
push
add
pop
test
je
jmp
call
movsl
and
rclb
add
jne
call
pop
cmp
jne
xor
mov
test
je
push
push
pushl
call
mov
test
je
push
push
pushl
call
pop
or
popa
jne
push
pop
ret
xor
neg
sbb
inc
ret
call
cld
test
or
add
addl
jle
sub
mov
ja
or
pop
push
or
pop
add
mov
mov
pushl
xor
pop
mov
sub
mov
add
add
mov
mov
sub
jae
dec
dec
dec
sbb
dec
jne
mov
jmp
and
sahf
jg
xchg
stos
fwait
jmp
ja
dec
add
push
dec
dec
outsl
jl
jmp
mov
es
mov
cmpb
adc
movsl
movsb
ds
int3
jg
mov
in
shlb
add
push
push
add
jb
adc
cmp
movsb
mov
mov
and
fwait
add
movsb
mov
sub
and
cli
and
enter
jbe
pushf
mov
ds
scas
bound
push
out
pop
imul
dec
lret
ret
icebp
mov
arpl
mov
or
fnstsw
cwtl
shr
mov
add
imul
sub
lahf
sbb
xlat
out
and
dec
push
sbb
add
mov
hlt
pop
es
fwait
cmp
lahf
roll
add
pop
sub
andl
cmp
and
adc
mov
dec
jecxz
dec
inc
xchg
insl
and
and
cmp
cmp
ljmp
movsb
popa
xchg
mov
and
and
pop
popa
cmp
push
popa
dec
in
jmp
jne
sbb
sbb
movsb
xor
lock
jmp
fstl
inc
scas
cmc
lret
mov
and
lret
shrl
add
aas
aas
xor
mov
inc
mov
jmp
xlat
insb
jbe
or
mov
mov
pop
cmpsb
int
notl
lret
xchg
icebp
sti
inc
mov
push
sbb
mov
ss
push
fucomp
movsl
ffree
sbb
jno
inc
mov
jmp
adc
jle
shlb
jl
xchg
push
test
and
mov
push
push
jge
insb
and
fcmovnu
je
leave
and
fs
mov
lret
sub
call
push
or
std
pop
dec
decl
mov
push
jb
mov
js
inc
mov
inc
pop
das
fscale
sti
inc
jl
mov
dec
mov
xor
mov
and
fs
aas
jne
push
es
das
jp
out
inc
jle
shrl
pop
pop
data16
jmp
add
fwait
mov
mov
shrl
ds
aam
push
aad
push
and
roll
jle
jae
enter
sub
out
stos
mov
nop
fbld
stos
rol
scas
orl
push
or
sbb
test
mov
scas
cmpl
jp
int3
repz
push
loopne
and
inc
mov
xor
cwtl
add
popf
divl
mov
xchg
inc
fnstenv
fldcw
daa
int
xchg
mov
push
sbb
sbb
pusha
cltd
xchg
sbb
movsb
jmp
imul
add
sub
jge,pt
mov
lock
mov
xor
cmp
mov
rclb
sub
jae
cmp
adc
cmc
imul
mov
cmc
dec
dec
adc
jp
xor
repnz
adc
imul
rorl
dec
xor
imul
shrl
shrl
test
out
push
mov
imul
xor
scas
outsb
jno
jl
sbb
into
push
ss
rcrw
sub
cmpl
mov
stos
fisttps
call
jbe
outsl
and
shrl
dec
aad
xor
push
lret
push
xor
shr
push
xor
jo
sarl
fisubrs
imul
jmp
test
xor
rcll
ss
lods
xchg
push
lret
push
mov
stos
push
shrb
mov
xor
dec
mov
int3
push
mov
das
leave
push
jb
ss
out
xor
push
xor
push
jbe
repz
dec
dec
out
xor
push
je
in
lods
cs
xor
xchg
jbe
jecxz
insl
xor
fsubl
ss
xchg
jnp
insl
xor
das
in
add
rol
je
shrl
leave
in
sbb
xor
enter
or
xor
sarl
jecxz
insl
xor
sub
xor
aam
xor
aam
lods
cs
xor
xchg
data16
mov
xor
dec
movsl
dec
sbb
out
or
aam
leave
mov
insl
xor
dec
mov
int3
push
xor
ss
out
dec
dec
mov
fisubrs
add
mov
rcll
xor
push
shrl
icebp
shrl
shrl
ss
and
dec
dec
filds
movsb
jmp
xor
mov
jmp
add
sub
ja
pop
and
mov
not
mov
jmp
add
scas
and
push
xor
cltd
sub
ja
pop
and
sub
and
push
pusha
adc
ret
mov
not
mov
jmp
add
rol
out
dec
jno
int
mov
push
fisubrl
shrl
hlt
mov
not
mov
jmp
add
jl
fldcw
shrl
hlt
mov
or
mov
jmp
add
in
gs
xchg
cmp
xor
dec
push
xor
shrl
and
push
pusha
or
ret
mov
sub
push
rcll
xor
jecxz
lock
dec
popa
in
gs
xchg
jp,pn
xor
aam
jo
xchg
sbb
push
dec
pop
imul
shr
dec
outsl
and
jb
rcll
cs
sbb
push
dec
pop
imul
xor
int
mov
repz
push
ss
in
shll
xor
shrb
shrl
xchg
push
ss
dec
out
xor
push
es
add
jbe
gs
dec
mov
movsb
sti
or
pop
push
xor
push
test
xchg
xor
push
dec
shrl
jmp
pop
push
sub
es
int3
outsb
cs
push
aad
xor
xchg
sbb
test
push
cmc
sbb
jle
push
sub
sub
push
aad
xor
cs
int
or
pop
dec
adc
cs
jae
or
scas
int
icebp
es
inc
inc
cli
lods
insl
jno
lds
lret
rol
cld
shlb
or
ja
test
int3
and
or
cmp
les
lcall
xor
shrl
shrl
shrl
shrl
shrl
shrl
shrl
sub
xor
shrl
xor
shrl
shrb
shrl
shrl
shrl
das
shrl
shrl
shrl
shrl
shll
movb
sbb
xor
xor
sbb
or
xchg
shrl
imul
sbb
enter
inc
ret
stc
daa
call
sbb
insb
xchg
add
xchg
push
dec
pop
jno
adc
mov
sbb
mov
in
or
mov
jp
pushf
fs
dec
mov
and
or
xchg
jmp
sub
sub
lret
pop
lock
or
pop
ja
shl
ljmp
or
scas
push
fildl
mov
sbb
pop
rorl
push
scas
in
pop
popf
cmp
xor
ret
mov
cld
dec
xchg
and
add
sbb
pop
addr16
fimull
pop
js
insl
shrl
push
test
xorb
inc
iret
push
or
xor
push
stos
cmpl
arpl
aas
int3
xchg
test
inc
ffree
js
lret
push
jmp
xchg
add
jmp
sub
popa
inc
popa
mov
aad
push
and
xor
cmc
ret
mov
or
insb
inc
cmp
fimull
push
loope
sub
sbb
ja
test
mov
push
aam
mov
rorb
loope
ret
mov
movsl
jne
push
jne
mov
lahf
dec
push
mov
lock
push
repz
mov
jne
faddl
and
stc
jb
movsb
jle
inc
adc
sysexit
mov
mov
dec
dec
je
or
pushf
push
push
cmp
popa
andl
xor
mov
call
lds
xchg
shll
sub
sbb
insl
adcb
sub
mov
xor
sbb
jo
xor
lret
cmp
add
cmc
mov
sub
xchg
add
insb
add
shrl
das
shll
testl
lock
or
stc
imul
ljmp
lahf
stos
sub
fdivrp
pop
orl
aam
enter
mov
shll
xor
in
mov
jecxz
data16
bsf
dec
and
ret
ret
mov
dec
popa
test
and
insl
test
pushl
and
xor
mov
fimuls
or
and
xchg
stc
imul
imul
add
pop
nop
lods
test
das
mov
sub
lcall
jns
mov
adc
and
pusha
mov
lret
sar
icebp
xor
ss
sub
jo
or
lret
and
mov
push
xchg
in
in
test
lock
add
add
add
or
add
adc
in
or
cmp
or
imul
gs
xor
cs
insb
add
add
je
jb
arpl
fs
jae
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
add
fs
imul
add
in
or
hlt
jmp
add
in
or
movsl
in
or
mov
add
add
gs
jne
xor
cs
insb
add
jb
gs
xor
cs
insb
add
in
or
add
add
fsubr
or
add
add
add
push
popa
jb
popa
outsb
je
push
push
jns
gs
js
add
push
popa
imul
jo
imul
inc
add
add
add
push
add
push
add
push
add
dec
add
dec
add
dec
add
inc
add
add
add
mov
add
add
add
add
push
add
add
add
add
add
add
add
add
mov
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
jl
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
outsl
add
jo
popa
add
jns
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
push
add
outsb
add
add
add
add
popa
add
imul
je
and
push
add
insb
add
sub
add
add
arpl
je
outsl
add
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
je
sub
add
inc
add
insb
add
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
jo
jae
jo
pop
add
jo
xor
pop
add
je
insl
add
add
add
xor
cmp
xor
xor
sub
add
add
add
add
add
outsb
add
add
outsb
add
insb
add
popa
add
add
add
add
je
jb
popa
add
je
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
add
add
test
xor
add
dec
add
add
insb
add
outsl
add
jns
jb
imul
je
add
sub
inc
add
add
add
imul
outsl
add
outsl
add
je
and
inc
add
jb
jo
outsl
add
popa
add
add
outsb
add
add
add
insb
add
add
imul
je
jae
and
jb
add
add
jbe
add
add
add
add
add
jb
imul
outsb
add
insb
add
imul
outsb
add
insl
add
add
push
add
pop
add
add
inc
add
add
pop
add
and
and
and
and
and
and
and
and
and
and
and
and
add
add
je
sub
add
push
add
outsl
add
add
je
dec
add
insl
add
add
add
dec
add
arpl
jb
outsl
add
outsl
add
je
sub
push
add
add
add
imul
outsl
add
jae
sub
push
add
add
add
jo
add
popa
add
add
add
add
jns
jae
je
add
add
add
inc
add
add
add
jb
outsl
add
add
je
push
add
jb
jae
imul
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
add
add
add
and
adc
add
add
call
add
adc
add
add
sub
add
add
out
sub
add
adc
add
and
add
add
add
add
add
addb
add
add
add
addb
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
add
add
add
add
add
add
add
add
or
pushl
jo
xor
jo
push
aas
addb
idivl
divl
addb
icebp
pop
data16
dec
addb
stc
pop
out
dec
addb
incl
inc
add
addb
inc
inc
inc
jo
addb
mov
rcrb
jnp
jnp
pop
xor
rolb
add
add
mov
add
xor
add
add
add
loopne
xor
loopne
mov
loopne
xor
loopne
add
loopne
ja
sub
add
and
add
inc
add
add
add
add
add
add
addb
addb
add
add
addb
add
rol
addb
add
incl
add
incl
incl
add
incl
incl
incl
add
incl
add
xorl
xor
xor
xor
add
add
add
add
jnp
jnp
add
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
add
add
add
mov
mov
xor
add
add
add
jnp
jnp
xor
mov
xor
xor
xor
xor
xor
ja
addb
xor
aas
pushl
xor
push
addb
jg
aas
push
add
push
orb
div
aas
push
xor
push
addb
xor
xor
xor
add
testl
push
xor
testl
clc
mov
addb
xrelease
push
maskmovq
testl
incl
lock
addb
add
mulb
incl
addb
add
ljmp
cld
in
addb
add
jmp
cld
testl
push
addb
add
mov
xchg
ja
ja
ja
ja
ja
ja
add
add
inc
inc
inc
add
add
addb
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
jo
pop
jo
add
add
inc
inc
inc
inc
inc
inc
inc
addb
add
ja
ja
ja
ja
add
add
mov
mov
lock
push
add
push
add
push
add
jg
add
aas
lock
aas
lock
aas
lock
aas
lock
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
and
fdivr
add
lahf
add
add
push
pop
cmp
inc
stos
mov
sbb
testb
cld
dec
fsubl
and
and
adc
add
mov
out
inc
and
mov
pop
aam
and
xchg
out
mov
es
lock
or
sbb
mov
int3
and
ss
cli
roll
inc
and
add
jb
outsb
xor
and
push
out
mov
shrb
add
or
inc
aam
mov
adc
pop
sbb
push
dec
add
arpl
je
and
orl
lods
jb
cmp
movsb
sbb
mov
and
nop
in
jb
or
and
and
js
mov
cmp
insb
sbb
and
pusha
xchg
pop
enter
jb
les
push
sbb
push
dec
jle
or
and
xchg
int3
inc
add
cmp
cld
cmp
sbb
shlb
and
test
add
xor
mov
les
push
call
or
inc
shrb
je
add
mov
pop
sbb
mov
add
sti
pop
lods
or
cmp
xor
xor
mov
js
and
nop
add
push
push
mov
adc
push
int3
push
call
add
add
lret
add
mov
sub
mov
lsl
lea
mov
sbb
inc
cmp
jne
push
stc
jecxz
adc
cmp
arpl
push
inc
add
sbb
fadds
call
test
dec
add
mov
mov
test
or
ficoms
repz
add
push
add
push
lahf
mov
push
push
adc
add
push
push
clc
aas
mov
icebp
popf
adc
inc
call
xchg
add
push
pop
mov
sti
inc
pop
mov
or
push
jne
and
call
daa
inc
xchg
inc
mov
in
add
jmp
in
rorl
add
pop
sbb
hlt
jmp
jl
jle
sbb
call
add
sub
add
je
loopne
mov
add
pop
mov
insb
ror
add
mov
fcomps
int
pop
and
sbb
into
mov
add
stos
cmp
inc
gs
jmp
xchg
cmp
add
add
dec
xor
iret
inc
incb
sub
jmp
fldcw
test
mov
and
jne
add
iret
xchg
adc
shlb
addb
or
xchg
inc
sbb
pop
xchg
sub
mov
mov
add
cmp
sbb
pop
mov
cmp
adc
out
or
mov
add
cmp
push
push
dec
shl
clc
add
je
mov
mov
lods
fs
adc
mov
mov
or
dec
push
clc
stos
fs
and
mov
popa
sbb
pop
or
push
push
mov
jne
pop
jns
mov
cmp
ja
test
insb
in
hlt
dec
test
adc
or
add
add
pop
push
fs
lock
sub
in
add
jmp
and
push
jae
push
add
ja
dec
movb
fdivrs
in
je
inc
xchg
add
fisubrs
jne
xchg
add
xchg
or
add
sbb
adc
and
jp
int3
pusha
add
cld
xor
or
sbb
cmp
add
fsubs
adc
add
xchg
lods
sub
hlt
mov
sbb
xchg
addl
mov
fldl
and
loope
sub
xchg
dec
hlt
sub
inc
je
add
pop
cwtl
jle
add
dec
sti
nop
pop
jbe
sbb
cli
mov
loopne
add
adc
add
fsts
push
and
rorl
add
adc
bound
cltd
mov
or
xchg
ret
add
mov
repz
out
xor
adc
add
push
aas
adc
or
sub
cmovno
sbb
and
in
push
js
pxor
cmpl
inc
add
sub
dec
inc
je
pop
mov
call
out
loopne
int3
cmc
pop
aam
pop
add
movhps
pop
dec
aam
inc
add
pop
add
push
push
dec
pop
sbb
sub
pop
add
stos
add
and
das
and
int3
mov
add
pop
movsl
pop
and
add
call
fwait
or
push
add
cltd
pop
sub
ds
cli
aas
sub
bound
sbb
scas
add
loopne
lea
lret
pushf
cwtl
push
call
add
xor
leave
test
jne
mov
out
push
mov
insl
rolb
jmp
dec
bound
xor
jne
dec
ret
add
dec
lret
sbb
jne
cmp
dec
xchg
adc
jp
and
add
adc
inc
add
stos
or
adc
mov
push
lds
mov
jl
lea
dec
add
push
add
aam
or
add
fidivs
hlt
iret
xorl
add
and
mov
and
mov
or
mov
dec
add
adc
lock
sbb
notb
repnz
cmp
cmp
add
jmp
jp
push
mov
in
rcrb
dec
pushl
cmp
xor
popa
pop
leave
xor
pop
repz
jle
lock
sub
sahf
scas
roll
push
add
mov
arpl
adc
leave
mov
add
cmp
inc
mov
mov
movb
pop
pop
repnz
xchg
sub
ret
jmp
in
add
les
push
dec
iret
xchg
add
dec
sar
inc
sbb
xchg
enter
shl
xchg
push
add
lcall
je
add
mov
mov
add
aas
add
adc
add
test
jmp
xor
sbb
add
loope
pop
inc
loopne
cmp
pushf
adcl
dec
or
stc
jb
loopne
cmp
subb
leave
push
jns
add
add
imul
jmp
movsl
pop
add
fisubl
lock
mov
sbbb
add
popf
mov
add
jb
or
addr16
push
loope
cmp
call
add
scas
les
clc
xchg
cmp
loopne
add
jl
movl
mov
add
mov
add
inc
or
add
popa
or
incl
rcrb
sub
stos
loop
cld
cwtl
in
jg
add
adc
and
outsb
or
push
add
repnz
and
mov
ret
and
adc
dec
xor
or
inc
inc
push
je
pusha
in
add
jg
or
add
sub
add
ret
loop
into
mov
sbb
add
addl
sub
cmp
add
mov
mov
push
pusha
add
add
mov
xchg
fs
fnstcw
fdivs
mov
or
mov
sti
fadds
and
add
adc
repz
pop
xor
inc
or
push
pop
andl
movsb
mov
mov
clc
dec
inc
mov
dec
xchg
fsub
je
adc
repz
jns
iret
fs
scas
lds
push
xchg
imul
loopne
sbb
push
aaa
jmp
add
out
mov
jg
sub
daa
in
xchg
add
outsl
shll
ja
cmp
mov
lea
shr
aas
imul
xabort
mov
add
into
dec
xchg
xor
jae
cmp
sub
call
or
aaa
mov
shlb
add
nop
hlt
lcall
inc
pop
rcrl
pop
xchg
inc
adc
add
pop
fs
add
jl
mov
pusha
lahf
or
dec
add
mov
mov
cs
mov
sbbb
test
in
andl
adc
jmp
mov
add
adc
add
dec
sbb
loop
pop
es
imul
in
sbb
stc
or
rorl
inc
mov
andb
push
shll
call
mov
inc
add
lock
add
aam
and
aas
dec
movb
sbb
xlat
xor
adc
pop
lea
outsl
pusha
call
aam
adc
pop
add
adc
xchg
int3
leave
hlt
testl
pushf
xor
add
mov
jmp
sbb
add
inc
mov
mov
dec
lea
push
push
stos
adc
dec
pusha
popa
sar
and
clc
add
push
add
nop
stos
call
cwtl
pop
ljmp
push
cmpb
loope
and
add
sub
pop
mov
or
nop
xlat
lret
mov
pop
pop
sti
add
je
fbld
push
es
xchg
fmuls
dec
sbb
mov
jmp
dec
rdtsc
movsb
sub
and
mov
adc
andb
fsts
mov
add
mov
dec
mov
cwtl
mov
lret
cmp
roll
cs
xchg
dec
gs
adcb
orl
pop
lods
mov
dec
cld
pop
xchg
pusha
leave
sub
push
mov
pop
sub
push
add
nop
cltd
cld
add
pop
add
sbb
push
add
and
xor
adc
mov
faddl
aas
push
sti
addb
ljmp
xchg
leave
int
and
jns
or
movb
cmpsl
inc
inc
adcb
jne
add
nop
or
mov
pusha
sahf
and
inc
cmp
in
xor
test
push
add
or
push
push
shr
xchg
add
and
inc
sbb
lds
xor
cmp
and
or
jg
sub
lods
push
push
or
cmp
es
and
sbb
cmc
xor
lcall
xchg
and
add
int3
pop
fs
add
cli
inc
sub
and
data16
jb
mov
adc
cmpsb
and
outsl
pop
adc
jne
sbb
add
or
test
jns
add
mov
or
push
add
pop
je
mov
mov
pushf
push
or
add
dec
push
int3
aas
enter
or
inc
pop
sbb
and
cmpsb
xchg
push
add
loop
clc
cmp
jne
popa
jno
push
xorb
sbb
xchg
or
add
add
mov
testb
add
inc
test
add
add
and
add
orl
add
js
push
cld
rcrl
push
adc
or
icebp
adc
mov
roll
mov
and
cmpsb
fsubrs
add
movsl
xlat
adcb
in
out
decb
inc
jo
push
add
xlat
pop
mov
mov
add
nop
enter
add
mov
add
mov
pop
cmp
add
sub
add
data16
jge
jmp
cmp
mov
bound
or
testb
add
test
aam
cmp
movsb
clc
pop
sbb
pop
pop
decb
cmc
aam
xchg
cmp
rorb
test
test
addr16
lahf
jno
jl
cmp
subb
mull
lret
jb
add
xor
add
xor
sbb
sbb
or
mov
xlat
pop
sbb
add
inc
lret
fisttps
mov
xchg
js
ret
add
in
pop
cmp
jge
push
lods
cmpl
bound
in
sub
sahf
movsb
xchg
pop
and
leave
add
inc
or
sarl
cmp
add
sub
fcoml
mov
nop
or
fdivrs
adc
pop
and
je
ja
jmp
dec
jmp
lods
cmpsl
add
mov
jbe
cld
loope
adc
add
adcl
add
rolb
add
insb
sbb
orl
in
dec
sbb
pop
clc
adc
mov
xchg
call
pop
verr
mov
jo
and
cmp
add
and
xchg
xlat
adc
add
test
fmull
sbb
inc
jne
add
leave
je
push
sbb
mov
inc
and
sbb
cmpsl
popa
stc
call
lods
push
add
sbb
xlat
cltd
xor
out
hlt
cwtl
loopne
lock
scas
add
rorl
adc
add
add
repz
pop
mov
mov
jmp
lret
or
in
into
cmp
fadds
lret
add
cmp
jecxz
in
inc
add
push
push
mov
adc
adc
rcrb
popl
inc
setae
sbb
nop
push
push
enter
lret
jge
pusha
xlat
add
cmp
ja
and
sub
rep
jmp
aas
and
add
xor
les
cld
add
jl
jmp
aas
dec
sbb
mov
cmpsb
inc
or
add
in
add
push
adc
add
mov
add
aas
cmpb
cmc
or
jne
add
or
add
ret
add
jmp
rcrl
sti
cli
add
sbb
inc
add
inc
mov
test
and
sbb
dec
or
push
bound
add
sub
pop
into
xor
test
adc
mov
clc
or
rolb
je
lea
js
add
mov
sub
cmp
add
push
jmp
xor
inc
cmp
or
in
mov
jmp
arpl
loopne
scas
call
enter
add
mov
add
imul
jbe
pop
mov
jns
mov
add
add
call
sbb
testb
add
pop
in
add
sub
filds
mov
fwait
pop
pop
jge
jl
or
outsb
fstps
add
jo
sub
push
sub
pop
sbb
add
push
sbb
or
cwtl
nop
pusha
movl
fisubl
inc
adc
add
sha1nexte
out
roll
mov
add
adc
fiadds
neg
lret
add
mov
add
bound
add
fwait
loopne
inc
cmpsb
stos
daa
and
push
add
in
out
add
je
ret
jae
add
jne
dec
in
adc
std
pop
out
sbb
adc
testl
and
jmp
add
push
add
pop
lahf
add
je
mov
or
or
xor
xchg
dec
add
dec
lahf
mov
pop
push
inc
or
addl
repz
mov
cmp
fs
push
add
loopne
data16
or
dec
xor
or
jbe
add
dec
xchg
add
or
inc
add
mov
xchg
add
adc
xor
iret
orb
in
pushf
pop
add
icebp
xchg
add
xor
pop
out
mov
movb
orb
dec
add
dec
rclb
fnstenv
jp
xor
inc
sbb
and
dec
cwtl
jne
leave
push
adc
xor
jmp
repz
leave
ljmp
mov
push
add
je
mov
cmp
add
loop
add
and
js
popa
pop
pop
hlt
add
mov
sub
dec
test
add
or
add
mov
mov
add
jb
insb
fcoms
jne
push
out
int
add
jl
add
mov
and
js
movd
js
sub
fidivs
push
xchg
add
xor
ret
andb
sub
jbe
adc
addb
ret
or
add
pop
aad
jmp
cli
push
add
hlt
in
je
pop
add
sub
leave
jne
cmp
pop
jns
add
push
cli
add
rolb
push
inc
xor
fsubr
add
test
pop
sbb
push
cld
and
dec
mov
dec
mov
sbb
setg
pop
pop
loope
jo
jl
mov
push
dec
rolb
or
rolb
cmpsb
add
mov
and
xor
mov
and
jne
loop
add
xchg
add
mov
and
roll
mov
popa
mov
hlt
pop
push
push
inc
and
dec
clc
jae
ss
push
push
das
push
je
add
call
dec
sub
xor
xor
add
mov
in
push
or
mov
enter
lcall
sub
inc
adcb
sub
mov
sub
add
loop
ret
add
ret
pop
sub
dec
inc
push
push
inc
add
pop
inc
add
insb
popa
cmp
pusha
cmp
gs
jo
imul
rolb
push
dec
popa
jae
imul
jne
xchg
imul
rcll
pop
lods
add
xor
mov
and
sbb
add
inc
adc
jmp
je
mov
cmp
jbe
xchg
add
adc
mov
cs
rcrb
divb
mov
enter
lea
or
gs
cmp
cwtl
dec
add
add
ds
mov
inc
stc
inc
out
sbb
push
pop
add
mov
call
add
or
add
rolb
jp
inc
xorb
add
lock
rcrl
pop
addr16
sbb
in
cmp
call
rolb
fs
sbb
ret
jecxz
loop
rolb
dec
jne
je
pop
and
add
adc
push
and
movsb
daa
add
ret
mov
les
push
push
xchg
movsl
push
cltd
or
add
repnz
add
jg
shlb
enter
cld
jns
xchg
mov
adc
cmp
add
inc
sbb
add
inc
nop
pop
rolb
xchg
shr
ljmp
fstps
sahf
inc
lahf
add
test
push
push
add
mulb
loope
hlt
add
je
adc
add
in
pop
or
or
mov
mov
pop
add
pop
lock
inc
add
push
sub
or
je
setb
add
xor
pop
and
or
mov
call
cmp
in
jp
lret
aam
cli
add
jne
sbbb
add
add
adc
add
in
push
mov
int3
dec
sbb
fistl
add
bound
nop
cmp
mov
shll
loopne
adc
xorb
stc
jmp
pop
fs
add
daa
movsl
cwtl
leave
mov
addb
jmp
jmp
movsbl
jecxz
push
ret
add
push
add
imul
loope
pop
push
loop
adcb
hlt
mov
jbe
lds
bound
xorb
inc
imul
into
lock
cmp
inc
cmpl
add
cwtl
dec
adc
add
sbbl
push
or
mov
lock
push
dec
call
mov
loope
shlb
out
add
je
pop
stos
movsl
and
jb
add
sub
iret
ja
mov
insl
push
mov
cmp
and
xor
sub
xor
add
or
sti
mov
test
push
cmp
sub
incb
out
pop
cmp
loopne
dec
add
add
fnclex
add
sbb
out
sbb
push
add
aas
das
adc
or
add
mov
inc
and
mov
add
push
or
pop
add
shlb
push
add
stc
or
mov
jecxz
lcall
or
sbb
addl
pusha
lods
insl
movsb
add
inc
outsb
les
add
and
mov
shlb
jmp
sahf
enter
sub
je
dec
clc
addl
pop
add
push
xor
inc
lock
mov
add
je
clc
inc
cwtl
add
fcoms
cmp
add
add
adc
dec
das
or
je
jg
add
imul
movb
dec
xchg
rclb
cltd
adc
mov
adc
jmp
push
pop
xchg
mov
adc
pushf
das
mov
mov
push
adcl
mov
xor
and
mov
repz
call
arpl
ljmp
mov
andb
add
dec
xor
cld
push
push
or
and
mov
add
pop
push
push
push
or
enter
stos
adc
mov
add
mov
adcl
or
mov
pusha
add
std
lock
add
inc
mov
xchg
push
addr16
adc
inc
push
adc
add
sub
cmp
dec
push
cmp
scas
fs
xor
mov
jo
pop
cs
daa
mov
loop
and
add
xor
mov
add
xchg
mov
das
add
pop
xor
cmp
aas
jg
add
mov
push
sub
mov
add
jecxz
dec
rorb
pusha
jle
add
inc
aas
sub
xchg
mov
push
sub
cmp
cs
popa
adc
and
jmp
std
inc
inc
comiss
push
mov
es
sub
enter
leave
push
mov
and
iret
xor
sbb
xlat
xchg
push
mov
fcom
push
jecxz
repz
f2xm1
push
loop
add
or
and
push
or
call
sub
mov
or
xchg
repz
lock
es
add
pop
cmp
push
add
and
std
xor
pop
roll
mov
clc
popl
inc
add
je
out
pop
sti
roll
mov
jbe
ss
sbb
inc
leave
cli
inc
imul
bound
sub
nop
xchg
mov
push
adc
cmp
pusha
add
push
inc
stos
or
and
mov
mov
mov
or
test
enter
or
or
hlt
dec
add
add
and
dec
pop
pushf
xchg
scas
pusha
ds
je
add
push
or
jo
mov
add
out
xchg
xor
test
cmp
cmpb
call
addr16
ds
mov
movsb
sar
add
dec
xchg
xor
loopne
inc
pop
or
sub
orb
sbb
add
filds
daa
bound
shrl
in
xchg
pusha
push
adc
lea
mov
rep
popl
or
test
mov
or
inc
movsb
adc
add
ljmp
add
nop
mov
icebp
cld
call
inc
or
inc
mov
pop
mov
xor
add
add
add
adc
jne
or
add
call
ss
ret
and
testl
aaa
inc
inc
sbb
aas
push
push
push
mov
cmc
dec
out
adc
add
dec
dec
test
enter
add
adc
mov
call
mov
lcall
adc
or
repnz
cmp
push
mov
pop
add
pop
jo
add
fwait
push
pop
add
push
shr
lcall
leave
sbb
mov
add
push
and
add
dec
ds
push
cwtl
pop
push
add
sbb
inc
add
adc
mov
mov
or
cmpb
ljmp
fiaddl
add
lock
add
and
cmp
aaa
and
push
push
add
sub
add
mov
sub
pop
or
daa
jne
test
dec
adc
sbb
call
fsubs
sbb
add
mov
cmp
leave
push
cmpb
sysret
mov
shr
bound
je
sarl
push
cld
xor
push
sub
or
shlb
add
lret
pop
mov
mov
faddp
sub
push
outsl
sbb
add
and
add
out
shll
sti
rorb
add
add
mov
mov
lods
test
fistpl
inc
adc
cs
ret
sub
jl
lock
push
add
pop
push
lea
call
imul
pusha
sbb
mov
adc
movl
or
sub
mov
and
inc
jg
add
mov
add
scas
sbb
lock
pop
testb
xchg
mov
outsb
xchg
lret
and
adc
cmp
jo
sbb
jne
pop
dec
or
add
pop
or
xchg
cld
hlt
outsl
add
push
clc
inc
movsl
mov
subl
incb
mov
jp
add
xchg
pop
in
xor
or
cmp
xchg
icebp
flds
repnz
add
and
push
add
jge
fs
sbb
sub
push
add
jnp
xchg
or
into
cmp
xor
xor
in
mov
cmp
lds
loope
pop
add
xorb
mov
mov
pop
pop
push
and
xchg
or
in
das
adc
inc
sbb
pop
add
or
add
pop
jo
add
call
sbb
add
in
adc
gs
inc
xor
bound
and
xor
or
sub
sbbl
jmp
and
dec
mov
cmp
sti
and
in
nop
aas
cmp
xchg
dec
add
cmp
and
repnz
scas
pusha
add
rcrl
add
lcall
add
in
xor
add
ja
jnp
leave
xor
orb
mov
mov
jle
pusha
adc
push
cmp
add
call
inc
add
dec
lcall
movsb
cmc
stos
pop
testl
scas
je
mov
cmp
icebp
pop
rorl
inc
mov
sar
add
push
sub
push
jp
cmp
into
ja
imul
jne
and
add
mov
iret
lret
arpl
pop
and
push
pop
aas
jae
dec
clc
ljmp
jmp
add
push
push
push
aam
in
add
dec
xchg
adc
dec
jno
pop
inc
cld
dec
adc
xor
mov
adc
add
push
aam
fadds
into
inc
add
jmp
add
lods
dec
adc
pop
lea
and
hlt
loopne
fs
or
lret
cmpsb
jg
xchg
push
scas
jae
push
test
add
push
rorl
dec
push
add
and
or
add
movb
lcall
ret
add
andl
add
pop
fdivs
cmp
jg
add
pushf
mov
push
push
shlb
sub
stos
popa
jecxz
lret
pop
adc
bound
sub
lods
nop
movsl
add
add
inc
les
inc
xchg
adc
fildl
ja
sub
xchg
lldt
idivb
adc
nop
add
push
lds
int3
pop
pop
scas
add
clc
mov
and
sbb
dec
pop
jl
cmp
jge
add
rcll
sahf
add
push
hlt
leave
xchg
arpl
rorb
in
push
push
mov
cltd
pop
aad
mov
mov
push
sub
adc
rolb
addb
jle
sub
jbe
sbb
add
stc
add
lea
sub
jg
add
push
lock
cwtl
add
fildll
xchg
add
pushf
mov
add
mov
inc
pop
xor
jle
adc
or
cmp
repz
lds
or
inc
mov
pop
xchg
push
or
xlat
inc
cmp
jle
jno
add
dec
fwait
dec
cld
xor
mov
pop
add
dec
add
or
loopne
or
cmp
and
cld
scas
adc
fdivl
or
xchg
add
xor
cmp
push
cmp
mov
out
dec
add
xchg
pop
sub
test
push
lret
fildl
dec
enter
repz
jo
add
ficompl
ret
inc
rolb
inc
lea
sub
sub
adc
inc
sbb
sub
cmpb
pushl
lods
loopne
cmp
push
scas
push
pop
xchg
sbb
add
loopne
dec
pop
inc
xor
je
dec
xchg
mov
adc
leave
jmp
sub
lret
push
arpl
add
lock
fsts
int
cmp
add
push
and
mov
xorl
enter
cmpsb
adc
and
jmp
cmp
call
sub
in
and
cs
mov
and
inc
lea
les
push
js
cwtl
popf
ret
out
adc
ljmp
jg
in
sub
enter
sub
xchg
sbb
cmp
je
int3
dec
or
rorb
cmp
adcl
add
xor
jmp
clc
jmp
mov
adc
or
and
sub
aas
xor
adc
push
or
add
pop
in
add
test
shrl
pop
stos
sbb
and
push
lock
adc
sub
adc
add
mov
push
dec
xchg
loop
loope
fwait
mov
inc
bound
jnp
data16
mov
xchg
pop
dec
push
add
mov
or
add
jmp
nop
or
add
push
js
aas
pop
jge
aas
movsb
repz
sub
pop
or
xchg
sti
nop
add
jmp
push
lahf
mov
jae
fidivl
jmp
mov
aas
ljmp
inc
adc
and
add
and
lahf
add
push
and
xor
cld
xchg
cs
subb
inc
jo
and
mov
sub
xchg
cli
subb
sarb
movsl
sbb
mov
movsb
popa
push
pop
dec
cli
sub
aas
or
cmp
xor
and
daa
stos
adcb
rolb
inc
add
sbb
sbb
mov
pop
push
rorl
sub
xor
cs
leave
add
adc
addb
cmp
pop
push
push
cmp
test
inc
gs
enter
add
pop
mov
adc
cli
pop
adc
nop
dec
xchg
fxrstor
in
shr
adc
add
mov
dec
nop
aam
pop
loop
inc
xchg
jne
add
dec
and
in
movsb
call
adc
pusha
mov
movsb
add
cli
xor
adc
mov
add
xor
test
out
pop
test
addb
inc
movsb
lahf
shll
subb
nop
sbb
notl
popa
and
jge
xchg
or
pushf
leave
in
push
add
and
fdivl
add
xchg
xor
inc
sub
add
mov
data16
dec
cltd
add
add
add
ja
xor
add
leave
pop
aaa
xchg
inc
ljmp
loop
add
adc
pop
adc
ret
in
sub
push
adc
movsb
arpl
or
push
inc
in
and
in
add
mov
push
xor
loop
add
loop
xchg
into
mov
fs
add
jne
adc
aam
push
cld
jle
call
sub
call
jno
jl
imul
ljmp
cmp
or
stos
adc
pusha
daa
sar
enter
sub
sub
mov
cwtl
fdivs
dec
mov
inc
add
stos
lock
dec
push
push
xor
inc
fsub
movsb
jno
pop
pop
sbbb
popa
mov
push
js
mov
daa
add
mov
dec
sbb
push
pop
and
aam
adc
mov
lds
clc
jb
out
orl
adc
and
sbb
and
loope
mov
jmp
ret
mov
outsl
dec
add
xchg
add
sbbb
push
push
mov
clc
jg
je
jmp
call
mov
add
pop
aas
pusha
cmp
jae
adc
lods
add
or
fwait
ret
xor
filds
adc
movd
add
push
xchg
in
push
fmuls
and
adc
xor
ret
xchg
nop
add
mov
or
dec
pop
pop
sbb
int3
jnp
and
push
xchg
pop
vrangess
pop
xor
fcoms
lea
add
inc
inc
lcall
push
adc
ror
add
aam
aam
mov
mov
pop
jmp
rolb
mov
mov
dec
stc
and
xchg
push
jno
push
loop
add
dec
dec
cmpsb
dec
jmp
add
iret
movb
xchg
loope
add
lret
adc
push
push
fst
mov
add
in
outsb
add
mov
cmp
pop
clc
cltd
inc
push
or
sbb
jmp
cmpsb
dec
mov
mov
and
push
sub
cli
mov
inc
pushf
and
add
std
sub
sahf
fists
jnp
lock
add
test
outsl
xor
lds
xor
add
push
sbb
out
inc
addb
fldcw
outsl
or
jmp
pop
cmp
add
add
sbb
push
testl
flds
rolb
pop
xchg
pop
lcall
add
add
mov
roll
int3
push
orl
or
push
arpl
and
into
ds
repz
gs
cmp
icebp
shll
movsl
sub
xor
lds
mov
mov
rcll
in
outsl
orl
and
add
pop
mov
addl
pushl
js
addl
mov
ss
lcall
adc
addb
jl
loopne
push
popf
rcrl
pop
push
sbb
add
or
pop
mov
call
sarb
call
push
cld
xchg
lock
add
pop
lea
add
call
add
add
push
jle
push
cmp
lds
xor
rcrb
call
in
fwait
cltd
sar
jbe
or
aas
push
andb
or
orb
mov
loopne
mov
in
xchg
add
sbb
ljmp
scas
dec
push
xlat
cmp
lock
jg
add
in
in
inc
push
add
decl
fdivl
fadds
ficompl
imul
pusha
push
hlt
inc
sbb
dec
cld
popf
xor
lock
push
repnz
in
push
cs
adc
inc
sbb
sbb
or
ret
incb
adc
loope
cmp
xchg
sub
lock
sahf
jle
bound
fiaddl
add
cwtl
push
cmpl
add
cs
adc
pop
xchg
push
and
inc
sub
jle
add
lea
add
push
ret
xlat
incl
and
dec
jne
lret
mov
mov
push
sub
dec
cmp
imul
push
xor
dec
repnz
fisttpll
push
or
cli
add
and
mov
add
andl
mov
dec
rclb
xor
xchg
pop
adc
cwtl
sub
push
imul
inc
enter
pop
sub
add
rorb
movsl
cli
add
or
in
sbb
dec
hlt
pmuludq
rclb
in
icebp
push
jne
or
sbb
pop
sbb
clc
cmp
std
andb
or
inc
or
or
jne
cld
add
ds
xor
loope
pextrw
mov
pop
sbb
jne
pop
out
in
add
lret
sti
popl
add
dec
hlt
adc
xchg
add
jl
je
mov
sbb
cmp
hlt
push
aas
jae
orb
pop
sbb
mov
hlt
mov
call
add
cmp
js
adc
jne
add
add
sub
cmp
add
dec
je
lcall
mov
cld
nop
in
sbbb
repz
lea
pop
loope
push
mov
int3
add
loop
repnz
inc
add
cmp
xchg
add
xor
xor
repz
jge
pop
pop
je
lret
addr16
cli
loop
and
ljmp
dec
add
movb
movsl
inc
xor
aaa
addb
adc
inc
pop
test
decl
sbb
cwtl
mov
outsb
roll
xor
cs
mov
add
inc
cli
je
dec
outsl
outsb
add
popa
mov
add
inc
inc
adc
test
inc
sbb
dec
cmpsl
xchg
jecxz
push
std
fildl
leave
test
loopne
das
add
test
inc
or
cs
adc
je
and
ds
mov
and
call
push
mov
leave
mov
shrb
or
aas
sub
lds
pop
add
and
inc
push
cmp
dec
cmpsb
push
push
xchg
inc
add
inc
mov
push
int3
xchg
repz
nop
fisttpl
sbb
les
mov
add
scas
mov
js
out
jle
add
insl
dec
mov
add
rorb
add
add
adc
pusha
or
insl
inc
mov
dec
scas
pop
push
jne
add
xor
xor
adc
imul
jae
subb
dec
loopne
adcb
je
adc
gs
dec
movsb
sbb
lcall
fdivrs
movsl
add
mov
inc
cli
add
aad
or
mov
dec
test
daa
das
add
or
add
loope
inc
or
and
outsl
jae
lods
cmp
je,pn
add
mov
push
add
in
dec
adc
mov
cmp
push
inc
cld
cmp
sub
add
mov
je
je
add
jne
sub
xchg
mov
cmp
out
sub
ret
fisubl
cld
jae
add
add
add
loop
mov
or
js
pop
fs
in
cmp
pop
shl
lock
sub
decb
fwait
dec
jle
add
mov
cli
push
mov
stos
add
push
cmp
js
jl
aam
das
mov
imul
or
xchg
rcrl
pushf
fadds
xchg
mulps
and
xchg
dec
scas
out
repz
add
jle
sbb
dec
in
scas
add
rclb
add
imul
add
popa
daa
mov
lods
push
and
sbb
pop
xchg
in
mov
inc
or
adc
xor
sub
ud2
dec
fsubs
shrb
pop
cmp
add
mov
jmp
cwtl
add
fs
jmp
sbb
js
inc
add
push
movups
cmpsl
pop
sub
add
and
mov
add
adc
xor
fiaddl
xor
cmp
and
sub
mov
pop
decl
push
ljmp
enter
add
xchg
or
push
cmp
stos
sub
aad
popa
push
lea
add
ss
gs
clc
fsubs
add
add
push
or
lds
add
dec
sbb
adc
or
and
add
mov
pop
push
popa
sbbl
or
je
mov
mov
pop
leave
outsl
imul
jle
test
add
dec
add
xchg
mov
pop
ret
movsb
lock
add
mov
mov
jmp
sti
mov
fisttpl
inc
iret
adc
aam
orb
stos
lret
dec
in
add
sbb
fcomps
and
ljmp
jb
add
loop
orb
decb
int
call
push
and
cmpl
pop
inc
mov
idivl
pop
sub
sbb
test
ljmp
add
sbb
mov
in
push
ds
mov
dec
je
cmp
push
add
aas
imul
rolb
jne
mov
jecxz
sahf
sub
jp
add
adc
inc
xlat
clc
add
rol
xor
push
inc
mov
mov
mov
je
add
ficoms
jbe
pop
movsb
or
mov
push
add
sbb
mov
andl
inc
icebp
lret
add
sarb
add
icebp
inc
add
lds
jo
add
adc
lret
adcb
pop
or
fwait
sbb
stos
add
sbb
dec
or
xor
into
mov
aam
inc
test
pop
pop
ret
or
or
ret
pop
pusha
je
shl
sub
cmp
jne
jns
daa
add
push
xchg
pop
lock
sbb
nop
mov
add
add
call
add
sbb
push
fwait
dec
imul
data16
icebp
mov
mov
mov
mov
and
inc
enterw
cs
ds
push
mov
xchg
inc
or
add
inc
sbb
xor
push
pop
jmp
add
add
and
push
daa
sub
push
mov
pop
sub
pop
dec
mov
mov
ja
mov
mov
cmp
mov
addb
push
mov
xchg
add
or
cmpl
mov
push
sub
sub
jle
mov
adc
pop
and
std
pop
pop
dec
sbb
mov
add
jmp
fistpl
add
or
sbb
add
out
add
pop
add
daa
inc
pop
loop
lret
push
pop
adc
aam
mov
dec
add
cmpsb
pop
ss
push
jp
push
mov
stos
add
subl
scas
not
add
sbb
mov
xchg
add
xlat
inc
aaa
add
jl
je
inc
cmp
lea
jle
popf
loop
add
clc
xchg
fldt
push
in
dec
sbb
fmulp
shr
mov
rdtsc
xorb
jg
jo
and
add
fmuls
jge
add
add
xor
xchg
push
packuswb
sar
sub
fldz
cmc
ret
andb
aas
test
jp
push
adc
or
loopne
or
push
ret
sub
sbb
add
adc
adcb
mov
sub
sbb
stc
out
and
add
and
adc
mov
xchg
rcrb
and
sub
or
test
add
xor
mov
jl
aaa
cli
jbe
cmp
cmp
xchg
add
sub
add
jmp
lods
jo
add
adc
fdivs
add
xchg
add
aas
push
push
add
int3
pop
into
sbb
rorl
mov
add
pop
jp
pop
add
movsl
sbb
loopne
palignr
loopne
lret
into
pop
ret
or
cmp
or
mov
add
sbb
leave
repnz
bound
adcl
outsl
sbb
jp
aas
add
lds
aad
iret
decl
pop
js
mov
mov
cmp
inc
loopne
jmp
dec
mov
or
out
sub
inc
imul
add
cmp
shlb
cmp
call
pop
mov
popf
sti
add
jle
push
add
das
push
pop
sbb
add
sarb
aas
pop
repnz
test
nop
pop
fildl
daa
movsb
lahf
push
rclb
stos
clc
add
scas
adc
in
pop
pushf
push
mov
jmp
fs
aam
repz
xchg
bswap
shll
cmpsl
pop
faddl
fdivrs
mov
xchg
push
add
jecxz
outsb
or
add
addl
xchg
add
xor
in
sbb
cmp
sahf
add
add
rolb
movsl
mov
popa
sti
in
popf
and
stc
repz
mov
add
subb
and
pusha
les
cld
add
adc
add
stos
xchg
mov
lahf
dec
in
adc
adc
add
or
add
ljmp
ret
and
push
add
mov
jge
pop
jo
add
sbb
leave
jne
cmp
xchg
inc
pop
adc
cmp
or
dec
add
add
sub
inc
jecxz
mov
dec
dec
add
not
loopne
xchg
shlb
std
add
jb
ja
into
xrelease
rolb
add
test
add
in
movsb
xor
shr
push
pop
push
mov
xor
or
pushl
add
or
addl
pop
add
ret
pushl
mov
sti
mov
shrb
adc
test
push
jb
cmp
in
add
enter
cmp
loop
add
mov
sub
repnz
clc
dec
add
or
mov
push
and
or
stc
and
jl
icebp
shll
lods
sbb
mov
subl
movsl
cwtl
sub
mov
rolb
sar
mov
cmp
arpl
lods
dec
cmp
xchg
mov
inc
call
ljmp
cli
lock
push
push
add
aaa
repnz
dec
shrb
add
pop
or
inc
xor
pop
xchg
mov
xor
les
in
sub
mov
testb
clc
pop
push
subl
dec
mov
seta
icebp
enter
movb
push
inc
addr16
cli
insb
daa
jmp
int
add
or
xchg
sbb
xor
adc
es
add
pop
and
jl
add
adc
inc
or
sub
add
jp
mov
add
mov
ret
scas
jge
adc
jne
pusha
movq
andl
sub
push
aas
js
pop
sub
les
lret
ret
sbb
xchg
add
push
add
icebp
or
int3
scas
xlat
add
mov
call
sbb
push
inc
adc
dec
stos
bound
jl
add
push
mov
dec
in
jns
mov
lods
pusha
stc
loopne
str
das
mov
push
js
pop
test
inc
ja
adc
mov
dec
pop
push
sub
sub
mov
or
pop
test
mov
mov
ljmp
fs
adc
pushf
ret
addb
xor
add
loopne
cmc
adc
sub
rorb
neg
add
mov
inc
add
mov
add
or
mov
mov
add
call
outsb
or
jnp
add
mov
stc
cmp
cmpb
push
popf
sahf
leave
mov
in
aas
xlat
js
adc
add
dec
hlt
add
inc
dec
push
pop
and
je
enter
pop
xor
loop
sub
dec
pusha
cmp
cmc
and
inc
xchg
in
cmp
or
cmp
rcrb
and
icebp
cmp
sbb
sbb
ret
sbb
shlb
ja
addr16
or
add
test
cld
push
hlt
in
jb
add
call
rclb
xchg
loopne
and
stc
fcomps
rorl
int3
xchg
repz
mov
mov
mov
lods
shrb
and
in
jb
cmp
mov
test
xchg
or
in
jb
or
jo
insb
add
fs
pusha
enter
pop
jb
scas
pusha
arpl
cmp
add
call
or
aam
shrb
int3
add
enter
jecxz
mov
add
cmp
and
mov
cmp
in
mov
inc
dec
sbb
movzwl
rol
xor
adc
ret
pusha
call
loope
les
add
nop
cmpl
xchg
push
in
dec
add
jmp
cli
add
mov
lret
cwtl
adc
inc
pop
or
inc
or
adc
sbb
pop
lahf
push
sbb
push
jle
cmpxchg
ret
cmpsl
adc
pop
and
xor
or
and
push
repnz
and
xchg
cmc
enter
add
cmp
sbb
and
sti
jle
xchg
std
enter
add
jb
cmp
inc
data16
in
out
out
call
jmp
cmp
sbb
in
enter
out
jb
cmp
sbb
mov
jl
aad
and
xchg
xlat
enter
add
cmp
sbb
add
frstor
ficoms
in
jb
cmp
sbb
add
adc
xchg
movl
lret
lret
sbb
and
and
into
xchg
iret
call
mov
mov
mov
mov
adc
mov
and
add
enter
mov
sbb
mov
inc
movsl
aaa
call
ljmp
andps
push
inc
xor
xor
or
push
inc
add
outsl
dec
dec
nop
cmp
cwtl
gs
clc
push
sti
add
jb
push
pop
add
outsl
add
xor
lahf
add
mov
lret
outsb
mov
daa
jge
add
jo
loope
xchg
pop
test
cli
cwtl
jle
add
gs
inc
add
data16
sahf
mov
aam
and
sub
push
push
jo
mov
insb
add
sti
pop
pop
nop
push
fs
int3
cmp
dec
shlb
dec
add
jb
push
popa
pop
add
push
sarb
or
outsb
mov
jecxz
addr16
ja
xchg
or
je
loopne
popa
dec
insb
lock
fstps
mov
movsb
cld
jno
dec
pop
pop
je
ja
or
gs
xor
pusha
loop
adc
test
sub
inc
inc
imul
mov
pop
testb
and
push
or
popa
outsb
addr16
jnp
and
fimuls
or
test
add
xor
enter
out
xchg
fcoml
mov
stos
mov
popf
addb
inc
cltd
jae
add
or
jo
in
testl
hlt
add
mov
cmp
push
call
sbbb
sbb
xchg
mov
dec
xchg
push
add
fs
pop
nop
in
scas
pop
out
shlb
add
push
push
outsl
add
imul
and
xor
mov
es
jae
jo
movsb
xchg
in
xor
xor
mov
fadd
insb
add
lcall
add
inc
arpl
add
mov
cmp
cmp
adc
inc
pop
jns
gs
and
ja
orb
push
je
arpl
add
pop
dec
inc
add
inc
out
dec
jo
je
sbb
insb
in
cmp
cmp
push
popa
inc
or
mov
xchg
pop
push
mov
gs
sbb
inc
popa
outsl
xchg
fs
lock
push
test
push
bound
jae
mov
lcall
pop
cmp
and
stc
nop
push
repnz
pusha
sub
dec
add
add
and
mov
inc
imul
ljmp
inc
cmp
dec
adc
hlt
lret
mov
stc
mov
sbb
and
lods
into
imul
mov
xchg
lcall
ret
std
xchg
add
dec
aad
ds
adc
mov
push
lea
daa
js
lahf
pusha
inc
or
incl
sbb
ja
jl
dec
sub
movl
iret
test
add
outsl
push
sarb
ja
sub
and
add
jne
jmp
and
jbe
push
mov
subl
add
push
out
mov
rol
jbe
fistpll
loopne
add
cmpsb
je
mov
incl
lods
adc
or
adcb
jg
sub
sub
cmp
sti
je
fmuls
mov
push
add
sbb
rcrb
xchg
nop
in
add
adc
inc
push
ret
aaa
adc
ret
pop
fsubrs
pop
add
shll
add
cmc
inc
inc
rolb
mov
call
jl
sbbb
add
push
jge
mov
mov
dec
sub
adc
add
inc
ljmp
push
pop
xchg
popa
shrl
pop
dec
cmp
out
xor
mov
inc
xor
insb
dec
scas
add
adc
adc
and
inc
xchg
add
mov
loope
and
cli
dec
add
mov
cmp
mov
lret
leave
or
mov
fisttpl
adc
and
fistpll
cmp
xchg
addl
sub
add
fs
aas
cmp
fiaddl
hlt
xchg
fsubrp
cmc
sbb
test
jns
in
pop
add
stc
push
and
imul
popf
icebp
inc
cmp
pop
add
les
rorb
lods
bound
mov
js
push
push
jb
aaa
stos
xor
scas
mov
test
push
movsb
xor
xorl
cli
pop
dec
mov
add
xor
pusha
xchg
sub
sbb
xor
jo
ja
mov
test
or
mov
xor
add
mov
negb
adc
jo
stos
enter
stos
add
gs
mov
jnp
add
sub
rcrb
inc
cmp
inc
setne
stos
lods
cmp
andb
sbb
mov
jo
cmp
hlt
arpl
add
sbb
sahf
fdivs
loopne
inc
sub
xchg
push
adcb
xlat
rcl
lock
xchg
push
into
xor
out
aas
inc
mov
and
popa
movsl
cmp
mov
push
mov
fnstcw
loop
add
dec
fcompl
dec
mov
shlb
je
push
fwait
inc
mov
xchg
rcl
add
sbb
arpl
mov
sbb
les
and
adc
or
in
cmp
add
in
popf
inc
out
add
add
mov
add
adc
sub
packuswb
repnz
mov
adc
jne
dec
in
cwtl
jg,pn
add
inc
add
add
mov
andl
lock
es
mov
mov
out
xor
lret
daa
pop
push
sbb
xchg
test
adc
jl
stos
mov
adc
mov
sub
jmp
es
sub
rclb
push
rcrb
inc
xor
add
add
push
xchg
push
ret
and
add
cmp
jge
inc
cmp
add
add
test
enter
jge
sbb
mov
jnp
mov
push
xchg
xor
xchg
push
mov
lret
inc
es
hlt
add
mov
ds
repz
add
aaa
push
shl
lock
xchg
mov
mov
pop
cmp
sbbb
icebp
loop
cmpb
push
add
mov
sbb
sbb
adc
ret
daa
in
fimuls
xorl
ja
data16
and
movzwl
pusha
pop
adc
add
add
fwait
pop
enter
idivb
jo
fstpl
pushf
sbb
xor
cld
and
movsb
add
es
hlt
test
dec
pop
mov
add
add
fstp
imull
xchg
add
push
scas
xor
xchg
pusha
mov
add
push
cli
add
dec
lret
adcb
sub
shr
pop
jg
repz
jbe
decl
cs
and
add
out
jns
out
fadds
cmp
push
pop
xor
test
mov
pop
push
idivl
out
popf
fwait
lret
inc
sub
pop
movsl
push
xchg
add
sti
clc
rclb
enter
sub
pop
push
pop
add
movsl
mulb
push
mov
fiaddl
mov
shlb
add
or
cltd
jo
push
subb
aas
clc
dec
add
add
in
xor
add
and
cmp
in
ljmp
pop
cwtl
test
xor
jl
fcoml
xor
push
xchg
fldenv
in
add
mov
dec
shlb
leave
add
jne
cs
dec
test
inc
cmp
inc
cld
sbb
mov
push
sub
add
mov
xchg
fistpll
xor
push
lea
add
lods
and
adc
enter
push
in
add
jmp
pop
stos
cmp
arpl
dec
add
ljmp
push
xlat
xchg
test
icebp
add
bnd
int3
or
jo
cmp
adc
sbb
xchg
lock
jge
cld
sti
add
pop
jbe
mov
rorl
sbb
test
add
sub
call
ljmp
and
testb
push
cltd
pushf
add
sub
aam
fidivs
outsl
sbb
push
lea
imul
addl
into
add
pop
rolb
cmc
nop
push
add
and
and
or
adc
shlb
sub
or
cwtl
ret
add
add
xchg
push
decb
inc
jmp
sub
fiaddl
lods
call
mov
fnsave
and
add
adc
mov
mov
sub
loopne
jne
push
push
add
pop
sbb
mov
add
jae
push
fildl
lcall
js
loopne
add
push
aam
movsl
or
aaa
add
push
lea
sbbl
add
or
xor
sarb
push
aaa
imul
cwtl
cmp
pop
js
add
add
movsl
addb
xchg
loope
jmp
addb
cmp
ja
call
sbb
fstps
mov
shl
push
add
andb
mov
mov
cmp
iret
and
add
lea
xor
fadds
cmovle
adc
jle
mov
in
mov
or
jns
xor
and
and
lahf
push
hlt
xor
sub
add
call
loopne
lret
ds
movsl
mov
pop
ret
cltd
add
push
test
orb
inc
je
or
sub
pop
add
sarb
maskmovq
testl
adc
dec
std
pop
pop
icebp
call
mov
inc
add
push
dec
ret
cld
fildl
push
mov
add
sub
hlt
dec
adc
xchg
mov
cmp
push
sbb
dec
dec
dec
ret
adc
dec
call
or
jne
rorb
xchg
sub
fiadds
cmp
add
cli
xchg
pop
adc
test
loopne
push
xchg
sub
popa
or
movsl
mov
cltd
gs
jnp
orl
pusha
loopne
add
and
mov
ret
push
mov
filds
xchg
js
or
inc
xor
and
push
or
pop
mov
daa
loopne
cmp
sbb
aad
push
mov
xor
mov
add
jmp
test
add
divb
call
dec
loopne
push
mov
and
pusha
sbb
sub
xor
aaa
dec
stc
inc
inc
mov
and
add
sub
add
add
stos
test
mov
cmp
and
ret
xor
out
inc
je
aas
add
cmp
inc
mov
inc
in
add
dec
std
nop
cmc
dec
and
or
xorb
cmp
ret
and
lret
jbe
adc
lret
jbe
add
sub
addl
xor
add
mov
aas
sub
ret
pop
pop
pop
pushf
iret
iret
jae
add
adc
cmpsl
and
sub
pop
arpl
pop
mov
mov
or
xlat
pop
call
add
mov
and
imul
xchg
xchg
sti
lods
xor
sub
cltd
loope
hlt
imul
incb
mov
cmc
push
push
push
sarb
lret
jge
sbb
int3
jecxz
movsb
jne
dec
outsb
add
out
aad
add
jmp
inc
xlat
shlb
cmp
jl
xorb
fstpt
push
cmpsl
dec
push
dec
movsl
add
sub
adc
push
stc
adc
jne
pop
je
fisubl
cld
mov
das
setb
cmp
xor
leave
and
mov
push
out
push
ret
push
xor
inc
insb
mov
fdivrs
add
mov
add
out
insb
cmp
jo
sub
push
adc
callw
push
fldl
dec
subb
mov
cmp
cld
jmp
push
or
ss
mov
mov
xchg
adc
push
je
das
inc
call
add
dec
or
add
inc
add
pop
inc
rolb
call
enter
enter
ss
scas
sarb
add
push
sbb
ret
roll
lcall
fildl
fdivs
enter
xor
pop
fwait
cmpsl
add
push
add
dec
push
jo
fldl
push
imul
mov
jle
xor
jns
mov
loope
aas
mov
pop
xor
shrb
rcrb
fs
pop
rcrb
adc
pop
jle
hlt
fiaddl
clc
rcll
jge
repnz
xor
push
or
xor
push
xorl
inc
fdiv
sti
pop
dec
push
adc
sub
aad
inc
and
add
or
nop
daa
cld
add
call
divl
pop
cld
jb
test
enter
loopne
add
flds
mov
xor
xchg
testb
mov
add
xorl
mov
mov
enter
cli
inc
fwait
mov
sub
add
inc
adc
sub
add
add
lret
pop
xor
push
push
xor
jge
andb
xchg
call
add
aas
js
cmp
cltd
sbb
in
in
inc
loopne
adc
jle
mov
pop
pop
dec
incb
lock
sub
add
dec
mov
dec
mov
imul
rol
push
add
repnz
inc
dec
mov
lahf
add
mov
addl
mov
and
add
lock
pusha
in
add
cmp
add
mov
inc
cli
pushf
add
pop
or
hlt
inc
sbb
pop
adc
or
lods
push
std
enter
test
mov
aad
or
push
pop
mov
add
ret
dec
jno
and
daa
inc
jmp
add
cmp
jl
test
adc
jno
add
adc
in
and
push
orl
xor
add
or
add
dec
lock
cmp
jmp
fs
je
sub
mov
add
adc
push
in
loopne
dec
insb
sub
add
and
push
rcll
add
mov
icebp
aas
cwtl
je
add
pop
in
testb
adc
jmp
add
sbb
add
add
fldenv
push
hlt
adc
lret
inc
mov
ja
and
mov
or
add
jo
pop
mov
adc
orps
pop
jns
sub
cs
out
jle
fstl
dec
add
dec
bound
dec
xchg
add
dec
in
push
scas
or
sub
bound
orb
push
pop
add
call
fcompl
mov
fldenv
xchg
add
lock
dec
mov
sti
sub
fcoml
xor
mov
add
shrl
jmp
xchg
sbb
add
xchg
subb
mov
push
cwtl
sbb
add
mov
sub
fldt
jb
pop
pop
inc
add
and
push
add
idiv
test
in
dec
push
orl
mov
sub
mov
cld
lock
sbb
test
mov
add
sbbb
dec
add
mov
mov
pcmpeqb
mov
mov
sub
inc
hlt
js
push
andb
sub
iret
inc
incb
call
push
out
push
out
adc
dec
repnz
add
jno
rol
in
add
stos
je
adc
and
dec
in
rcl
aas
out
xchg
call
adc
iret
outsb
add
jecxz
sbb
jo
daa
sub
jp
popa
stc
adc
dec
cld
sbb
testl
cs
in
or
lock
xchg
out
popf
loop
rolb
mov
call
mov
stos
cld
in
mov
xor
ss
inc
jp
add
aaa
pop
dec
sbb
pop
dec
pop
data16
mov
lea
xchg
sub
dec
jne
mov
sbb
sbb
pushf
sub
or
add
add
cltd
jno
lods
push
xchg
fwait
add
popa
add
imul
cs
cmc
or
pop
aas
cld
shlb
add
adc
add
je
mov
xchg
adc
mov
mov
hlt
neg
pop
daa
lahf
adc
inc
test
ret
jmp
xchg
push
xchg
xchg
xorb
nop
enter
jle
cmovs
sbbb
cmp
add
jg
in
dec
loopne
imul
pop
movsb
mov
je
xor
jbe
jne
and
cmpb
xor
inc
enter
addb
push
inc
add
mov
mov
lahf
xchg
aam
sbb
adc
add
and
sarb
out
cld
push
fdivrl
add
addl
addb
sti
push
sbb
call
cltd
add
sub
adc
and
es
sub
or
dec
loop
add
mov
mov
inc
bt
add
stc
and
inc
stos
je
add
dec
add
add
cwtl
ljmp
int3
adc
jne
pop
clc
sti
add
add
add
fidivrs
add
xchg
orl
ud0
test
add
loopne
dec
hlt
push
pop
add
je
add
adcb
or
cmpsb
ljmp
mov
push
add
push
mov
andl
mov
jmp
xor
adc
clc
sti
pusha
adc
add
mov
push
dec
pop
scas
cwtl
rcrb
rorb
dec
mov
mov
cltd
mov
ljmp
sub
add
dec
dec
rorb
or
adc
add
xlat
mov
push
add
enter
dec
mov
add
sbb
push
xor
xchg
mov
test
adc
les
sbb
inc
cmp
aam
pop
mov
je
jae
popa
inc
push
addr16
dec
movsl
add
out
sub
or
ss
dec
add
and
mov
push
mov
and
fs
add
or
cmpsl
dec
xchg
jne
mov
add
shrl
sub
jl
or
dec
jg
add
and
or
or
push
jmp
ret
out
pop
shr
pusha
xor
push
inc
rcrl
xor
mov
shr
pop
adcl
adc
and
mov
sbb
add
xor
in
movsl
add
hlt
test
stos
int
arpl
xor
jo
add
dec
das
jmp
or
push
add
cmp
adcl
push
adcb
cltd
add
mov
popf
adc
dec
sbb
add
xchg
xor
out
bound
push
fstps
adc
rclb
xor
adc
mov
jbe
in
test
mov
add
sarb
pop
mov
adcb
and
sbbl
jbe
jb
inc
xchg
cmc
sub
add
xchg
mov
xor
hlt
jae
add
out
mov
mov
add
and
jno
arpl
xor
outsl
cli
push
dec
mov
jno
ljmp
fwait
pop
cmc
sarb
lret
add
fimull
add
psubsb
scas
icebp
or
and
mov
pushf
mov
fmuls
cld
add
push
sub
xor
pusha
lret
add
mov
xchg
lock
fwait
cmpsb
and
pop
sub
push
mov
mov
or
clc
bound
push
cmc
ljmp
adc
push
adc
cwtl
cmpsb
insb
cmp
stc
sbb
stos
mov
pushf
add
test
test
xor
imul
out
add
das
add
js
fimull
sbb
add
mov
dec
in
add
ja
mov
adc
testl
and
add
or
mov
push
cs
lea
loop
lret
int
add
repz
inc
ds
xchg
add
loope
and
push
sbb
inc
xchg
and
loopne
add
lds
in
lock
xlat
loopne
push
cmpb
mov
add
mov
push
decb
testl
push
xor
jle
add
imul
pop
add
add
enter
push
pop
rcl
xor
cmp
cmpb
inc
add
add
sub
jae
add
test
lock
xorb
ret
add
imul
or
and
mov
sbb
loope
push
cmc
movsb
mov
hlt
lods
clc
add
sahf
into
ret
adc
shll
add
cmp
mov
mov
pop
iret
sub
pop
sub
clc
lds
or
push
mov
or
lods
popl
lock
pop
mov
or
adc
incl
add
push
repz
mov
jne
ds
mov
pop
pop
cld
add
cmpsb
gs
mov
sub
add
cmp
sub
je
sbb
enter
cmc
pop
enter
push
jo
mov
call
push
xor
mov
inc
pop
cmp
int3
add
ffreep
push
nop
jmp
and
add
lahf
add
add
xor
dec
and
xorb
mov
inc
mov
xor
aam
add
adc
loopne
data16
movsl
or
jo
adc
pop
rclb
les
or
aam
out
shlb
sbb
je
test
jo
adc
cmp
sti
arpl
add
in
ja
ret
pop
xor
cltd
xor
add
sarl
add
out
fmuls
cmp
jle
adc
pop
mov
dec
add
xor
add
push
xor
fmul
xchg
cld
mov
or
adc
push
sahf
pushf
and
add
inc
out
add
pusha
dec
call
inc
mov
jg
fiaddl
dec
idiv
pusha
xchg
adc
sbb
adc
mov
adc
dec
mov
inc
add
pusha
xor
add
dec
jns
movsb
xor
out
call
jle
or
add
test
xchg
cmp
addb
adc
mov
mov
les
pop
pop
add
adc
ss
add
into
add
lock
mov
imulb
add
inc
and
sbb
es
add
hlt
pop
adc
adc
in
jmp
cmpsb
sbb
add
hlt
fs
fyl2x
push
inc
inc
adc
sbb
lock
ljmp
adc
or
add
js
jl
jge
vpunpckhdq
mov
out
push
add
dec
add
push
adc
and
add
scas
adc
clc
push
sbb
sbb
stos
add
cmp
jle
adc
das
and
xchg
add
adc
ret
mov
pop
push
jnp
cmpb
cltd
movsb
pushf
les
filds
sub
xchg
xor
mov
cmc
popa
jmp
lea
mov
inc
or
push
xorb
add
jge
xchg
cmp
mov
cli
mov
sub
add
je
push
dec
fcoms
adc
add
mov
faddl
mov
vmptrst
mov
adc
inc
xchg
int3
cltd
add
call
ret
daa
push
pop
xchg
gs
lcall
adc
push
js
sub
pop
test
dec
incl
or
or
daa
add
pop
and
es
xchg
adc
add
loopne
sub
dec
adc
mov
cwtl
or
mov
in
mov
movsl
xchg
inc
pop
xchg
imul
jo
fadds
adc
mov
fsts
sbb
aas
outsb
mov
fldl
xchg
insb
test
push
sbb
data16
rclb
mov
cmpsl
les
fiaddl
aaa
inc
iret
add
stos
or
pop
or
rclb
mov
inc
or
mov
or
js
mov
push
sbb
call
adc
mov
add
inc
in
sub
pop
cwtl
xchg
ja
add
flds
outsl
js
cmp
inc
sub
fldl
lea
dec
push
xchg
adc
inc
sub
repnz
xor
cmp
or
cwtl
xchg
adc
push
inc
cmpl
push
mov
in
shlb
pop
loope
nop
add
sub
cld
sahf
add
push
xcrypt-cfb
cmpsl
and
add
sub
cld
rolb
call
icebp
add
insl
in
or
js
in
pop
xchg
add
mov
rcl
mov
push
lret
loope
inc
mov
xchg
lods
aas
sub
add
and
mov
jnp
test
pop
ret
pop
mov
inc
fwait
clc
in
int
cmpsl
mov
or
mov
add
add
add
mov
faddl
in
dec
outsl
imul
nop
add
push
pop
add
jg
dec
fldcw
fisubs
inc
mov
mov
push
push
cmpsb
pop
and
jo
add
sub
hlt
sbb
mov
and
add
sub
loopne
stos
les
ss
xor
adc
jne
add
nop
sbbl
push
or
adc
shlb
dec
jl
pop
jno
dec
inc
mov
rcrl
test
xchg
add
bound
hlt
popf
and
jae
and
jmp
or
shl
cmpsb
or
push
ret
jle
mov
adc
pop
das
lock
stos
daa
add
or
mov
jp
jl
sub
cwtl
pop
add
lcall
mov
xchg
shll
push
int3
dec
scas
add
lahf
ret
popa
add
add
lcall
mov
push
ja
nop
jnp
or
sub
popw
rcl
add
dec
cmp
cmp
enter
mov
xor
mov
add
mov
mov
dec
jne
adc
mov
push
xchg
stos
inc
loop
cmc
mov
pushf
mov
add
mov
sbb
das
pop
in
repz
loope
in
adc
add
lcall
mov
cwtl
xchg
add
adc
stos
lea
je
xor
mov
sub
roll
sbb
mov
mov
fwait
sub
or
push
adc
shr
sarl
aad
imul
and
jge
mov
dec
xor
hlt
lcall
xchg
insl
mov
ja
add
mov
call
js
jmp
ljmp
and
inc
pop
xor
push
push
clc
pop
dec
in
aas
jb
xor
mov
jne
adc
aaa
adc
shrb
je
add
adc
sbb
mov
or
jno
sahf
andb
mov
jae
add
pop
into
lods
add
add
cmp
xchg
jns
adcb
into
push
add
cmp
add
ficompl
rolb
imul
dec
xorl
out
cmp
mov
aam
and
add
dec
sbb
mov
dec
push
out
or
nop
pop
sti
fstps
adc
inc
popf
xor
pop
and
daa
mov
call
shlb
adc
pop
cld
fnstenv
mov
mov
mov
add
in
call
xchg
jne
cmp
pop
fadd
mov
add
into
mov
and
js
add
add
test
inc
ficomps
cmp
push
subb
add
sub
pop
lahf
addr16
sbb
mov
add
push
out
pop
adcl
jge
sub
les
cli
mov
int3
adc
jno
add
in
fs
pop
dec
insb
mov
mov
add
add
or
test
cmpsl
pop
rcll
pusha
dec
and
xchg
dec
sbb
mov
inc
loope
push
andps
lds
shrb
iret
mov
add
ss
sub
jmp
adc
je
lcall
adc
and
pushl
add
aas
dec
cld
popa
ret
inc
add
xchg
cwtl
mov
jl
push
shrb
mov
add
jb
lahf
add
outsb
dec
or
leave
add
mov
cld
fiaddl
mov
lahf
xchg
add
pop
jmp
push
xor
mov
movsl
paddd
cmp
mov
mov
xchg
cmpsl
stos
xchg
jp
add
add
out
sbb
imul
push
mov
or
imul
add
push
fldenv
fucomi
add
push
sub
lock
push
add
cld
xor
fucomp
clc
add
adc
lock
call
add
cmpsb
sub
mov
add
dec
xlat
push
std
add
xchg
pop
inc
fmuls
pop
pop
sbb
adc
fstpl
jnp
add
rorb
or
sub
jb
jmp
add
mov
and
cld
adc
add
add
or
xor
pop
dec
icebp
iret
push
jge
add
xchg
gs
ja
mov
std
adc
mov
inc
cld
mov
pop
or
add
rcrl
mov
sub
add
ret
pop
inc
add
pop
push
lock
hlt
add
clc
inc
and
mov
loopne
xlat
sub
dec
es
movsb
add
jno
into
push
add
loopne
aad
ss
lahf
xor
mov
int3
pop
loope
insl
ret
xchg
cld
add
call
or
inc
sub
int
insb
and
pusha
fimuls
add
mov
fsubrl
lods
adc
inc
sbb
xchg
xlat
mov
mov
push
and
cmp
jmp
sbb
aas
add
xor
aaa
and
xor
push
jmp
das
and
push
add
add
rolb
or
or
jl
add
or
test
xor
xchg
mov
add
decb
push
push
sbb
fs
xor
xor
mov
lock
rclb
add
andl
adc
loopne
and
movsl
dec
sub
mov
nop
pusha
jae
xchg
sbb
add
int3
inc
or
sub
les
jge
mov
cmovnp
or
cmpsb
add
mov
or
test
xchg
cld
mov
mov
push
xchg
cs
inc
cmp
pushf
jp
cmpsb
push
inc
mov
dec
fwait
ret
clc
mov
les
leave
aam
enter
adc
aam
push
mov
xchg
mov
and
mov
adc
dec
pop
jmp
add
xchg
inc
xchg
and
and
test
jmp
ret
nop
and
sub
or
mov
mov
inc
mov
add
arpl
mov
aad
add
scas
jne
stos
cltd
pop
sub
xlat
arpl
mov
movsl
xchg
cld
cmp
rclb
add
or
lret
or
rcrb
or
jae
and
ret
stos
out
cmp
imul
add
je
pop
or
lock
adc
add
dec
sbbb
pushfw
add
xchg
pop
sub
add
sahf
jo
call
jnp
cmpb
sub
sub
cmpsb
out
insb
mov
add
sbb
push
mov
inc
ret
sub
and
cwtl
mov
or
and
pusha
push
nop
movsl
add
pop
lock
rcrb
add
in
sub
or
les
mov
push
cmp
fnsave
in
mov
movb
add
jg
add
push
mov
mov
mov
xor
xchg
add
fimull
mov
loopne
jl
add
incl
xchg
mov
popa
add
cmp
and
repnz
or
or
cmp
mov
in
push
adc
add
pushf
dec
mov
xor
les
sahf
jp
pusha
out
add
adc
mov
outsb
pop
add
dec
mov
dec
pop
cld
rolb
idivb
or
xor
and
jb
add
data16
es
cmpb
dec
aas
or
inc
test
add
mov
push
push
lret
cmp
jae
insb
xchg
mov
ret
pop
mov
std
addr16
jno
dec
jecxz
add
xor
add
sub
adc
add
cmp
mov
mov
pop
pop
cwtl
repnz
add
cld
sahf
sbb
rcrl
cmp
add
shrd
cmpsl
fildl
sub
sbb
adcl
mov
inc
sub
xor
pop
push
out
mov
dec
pop
daa
mov
shll
in
push
add
inc
mov
jmp
jns
add
imul
sbb
xor
pop
ja
add
ficomps
mov
testb
leave
dec
in
add
jle
xchg
int3
daa
add
push
in
push
shll
push
add
dec
pop
cmp
addr16
push
or
outsl
jp
pop
inc
add
pop
add
add
and
push
or
push
frstor
es
lcall
xchg
mov
cmc
cmp
xor
dec
jle
ja
add
cmp
hlt
adc
pop
pop
test
pop
sti
sub
std
inc
mov
mov
ljmp
and
push
add
bound
in
mov
movsl
lea
data16
mov
sub
addr16
push
cmp
test
pop
mov
sub
and
xchg
xor
add
je
add
hlt
loopne
add
xchg
sub
sbb
lock
inc
jecxz
xchg
add
xchg
dec
ret
sub
xor
rorb
cmp
cli
jbe
fisubrl
xchg
pushf
add
xor
dec
add
lock
sub
jp
movb
inc
dec
adc
mov
int
add
pusha
jne
push
add
loopne
adc
in
inc
jecxz
dec
mov
jne
lods
shl
cltd
add
inc
movsl
mov
inc
push
or
call
icebp
inc
inc
out
or
cs
jmp
push
pavgb
addb
leave
push
add
aad
add
call
pop
push
pop
rcll
popf
cmp
stos
sub
lahf
ret
add
pop
or
xchg
push
xchg
dec
rcl
addb
push
mov
pop
addb
fdivs
push
and
mov
cld
xor
jg
aas
outsb
incb
lret
jne
push
or
add
lods
or
pop
nop
jle
add
stos
das
sbb
xchg
mov
icebp
dec
adc
stc
push
xchg
cmc
push
cmp
or
dec
mov
jns
add
aas
mov
pop
movl
push
add
mov
imul
add
xor
addl
insb
lds
fwait
mov
sub
mov
pop
and
insl
adc
jo
outsb
jmp
call
mov
mov
jmp
pop
adc
fsubrl
add
dec
push
in
and
inc
ljmp
sub
and
faddl
and
xor
out
push
add
lret
rorb
mov
orl
sbb
add
insl
divb
mov
shl
add
scas
jle
xor
lods
sbb
sar
loopne
dec
and
pop
clc
xor
dec
xchg
enter
and
sarb
ds
lret
setnp
fldl
xor
and
cmpsl
mov
rol
adc
sahf
bound
hlt
mov
cli
loopne
push
add
xchg
cld
push
adc
mov
push
jb
pop
sub
rorb
or
js
xor
pop
gs
jae
imul
xor
jb
and
jo
je
ljmp
add
popf
push
mov
add
push
add
jo
dec
adc
and
mov
jp
add
xchg
adc
nop
sbb
into
xchg
test
fistps
fdivl
adc
push
aam
and
sub
sti
fisubrl
lret
jmp
nop
mov
inc
pop
add
dec
jne
or
imul
je
xchg
add
mov
dec
adc
sarb
imul
add
popa
jle
sbb
add
adc
adc
ret
hlt
xchg
getsec
and
shlb
enter
xchg
rcrb
js
movntps
mov
int3
add
xor
sbb
xor
mov
sbbb
clc
fiadds
and
sub
push
adc
and
js
push
mov
add
cmp
inc
es
inc
cmp
pop
in
xchg
push
adc
sub
mov
insb
cmpsl
jbe
repz
adc
add
or
pop
push
mov
add
les
call
or
outsl
add
sub
movsb
or
loopne
cmpsb
sbb
sub
mov
js
sarb
add
ret
enter
or
les
cmp
cmp
repnz
push
mov
call
inc
lods
enter
test
jno
rclb
inc
adc
cwtl
arpl
xchg
insb
sbb
nop
cmp
mov
inc
test
inc
sbbb
and
jl
clc
cmp
sahf
je
movsb
cmp
jo
xor
insb
in
jg
addr16
negb
pusha
outsl
adc
add
adc
push
aam
cmp
aam
adc
loop
scas
lods
cmpsl
or
addr16
or
add
dec
dec
jb
je
mov
es
or
cld
mov
orb
add
add
data16
jle
sub
pop
or
push
add
add
daa
jb
push
pusha
and
and
add
inc
lds
add
jae
enter
mov
dec
daa
jl
pop
mov
jmp
mov
mov
adc
je
add
or
add
jle
pop
add
and
pop
add
ret
mov
cltd
sub
dec
and
mov
les
jne
mov
inc
mov
inc
push
stos
inc
insl
leave
cwtl
dec
arpl
push
xlat
cli
jg
pop
addl
std
jl
or
leave
lret
sbb
dec
stos
and
div
outsl
fldenv
add
stos
inc
inc
add
loop
or
or
stos
push
stc
pop
pusha
int
add
incb
movl
bound
or
mov
dec
fcoms
xchg
or
add
add
pop
add
out
jo
in
dec
stos
or
jne
mov
adc
jge
cmpsl
push
add
fidivrl
mov
add
stos
xchg
add
add
push
add
aad
test
jmp
add
cmp
ret
add
cmp
add
mov
dec
add
mov
fistl
mov
rorl
notb
pushf
faddl
inc
mov
jne
daa
hlt
mov
jmp
ljmp
add
jae
loopne
inc
loopne
movsb
sub
in
test
icebp
cmpl
or
nop
test
in
add
jbe
std
cmp
fwait
out
mov
cwtl
mov
pop
je
push
push
add
sub
mov
call
lock
add
pop
or
loop
jne
add
test
loope
dec
cld
or
add
add
outsl
or
add
sti
lods
dec
sub
sub
add
add
aas
dec
push
jg
test
sahf
std
mov
lea
adc
mov
mov
adc
sub
add
inc
mov
and
adc
imul
cmp
shr
add
or
push
out
pop
add
dec
testl
call
pushf
mov
push
pop
pop
add
lock
add
xchg
pop
mov
cmc
les
add
cmp
or
push
stc
fsts
jle
jne
push
mov
sbb
cmp
icebp
les
add
inc
xchg
jmp
xor
ret
push
push
mov
xlat
je
cmp
div
push
add
push
or
lahf
add
jne
jecxz
dec
pop
fldl
daa
je
inc
and
rcll
out
loop
in
mov
add
and
dec
ret
add
shrd
dec
shlb
add
imul
out
ljmp
xchg
adc
mov
push
add
push
addb
xor
and
cmp
xor
xor
leave
cmp
lea
ss
icebp
inc
orl
lcall
lret
sti
xchg
lods
sbb
mov
push
in
lahf
pusha
arpl
mov
jno
scas
xor
scas
sub
mov
add
rcrl
jmp
xchg
pop
in
test
sbb
add
jle
sub
or
push
aam
xchg
loopne
aad
push
push
in
push
pop
ret
sub
test
aas
pop
jns
in
adc
sarb
sub
push
jmp
in
faddl
lock
pop
ret
or
stc
pop
clc
xchg
add
mov
mov
loopne
and
sbb
xchg
and
add
mov
push
sub
pop
pop
hlt
loopne
cmp
fdivr
or
xor
scas
and
add
mov
movsb
stc
mov
add
add
mov
add
iret
nop
lea
xor
mov
sub
pusha
mov
dec
jl
std
xor
mov
dec
hlt
jne
idivb
jmp
mov
xor
pmulhuw
stos
inc
add
inc
xchg
pop
or
mul
cld
xor
mov
cs
push
sahf
sub
add
and
sub
mov
leave
adc
lea
jne
mov
dec
xor
and
icebp
add
pusha
mov
test
cltd
cs
rorl
and
add
pop
pusha
pop
and
testw
adc
or
add
inc
adc
movb
or
aas
fisttpl
mov
rclb
add
inc
add
loopne
rolb
loope
xor
add
in
fnstsw
cmpl
cmp
inc
pop
je
fidivrl
xor
fbstp
lea
jnp
mov
mov
in
add
fsubrl
mov
jno
mov
add
dec
ror
in
out
or
movsb
lea
or
cmp
cmp
push
adc
fmull
inc
mov
js
adc
add
sub
cmpsb
xor
bound
pop
adc
xchg
xchg
and
and
cmpsl
icebp
adc
push
fnstsw
add
shr
mov
mov
push
add
mov
pop
push
add
test
or
mov
loope
jns
out
pop
repnz
repz
jg
and
pop
mov
add
cmpsl
addl
add
dec
nop
mov
lock
insl
add
sub
nop
add
fidivl
repnz
fwait
scas
add
testl
rcrb
pop
in
add
and
pcmpeqw
dec
bnd
popa
pop
shll
repnz
and
lea
xor
rorb
pusha
push
push
pop
aad
inc
aas
roll
imull
jmp
add
sub
push
mov
pop
xor
push
and
pop
lock
xchg
jge
add
loop
sub
loopne
call
ds
popa
lds
aam
push
add
call
add
add
add
inc
stos
add
inc
pop
cmp
xor
sub
fbld
jo
inc
add
push
call
push
adc
inc
cmp
enter
ret
cwtl
or
push
add
fstps
push
fistpll
jmp
fildl
sbb
test
cs
or
mov
nop
test
ret
add
dec
mov
sub
loopne
jae
pminub
xchg
xchg
push
ljmp
lret
cmp
push
xchg
stc
sub
leave
imul
fiaddl
cmp
sbb
add
add
adc
mov
test
push
rolb
jnp
dec
aas
sahf
mov
addr16
sub
and
and
add
out
mov
add
pop
movsb
cld
jl
add
mov
dec
pop
aad
daa
pop
fdivr
pop
pop
nop
xchg
adc
test
inc
or
adc
xrelease
jae
mov
add
cld
xor
inc
clc
enter
loopne
test
int3
movsb
lods
cli
mov
mov
push
adc
hlt
xor
dec
xchg
pop
sti
add
lea
pop
hlt
and
leave
lret
loope
and
sbb
outsb
cmpsb
add
mov
mov
jb
xlat
mov
and
xor
js
inc
rorb
mov
xchg
pushf
ret
daa
adc
fdivr
pusha
clc
push
inc
inc
dec
cmp
xchg
adc
xchg
dec
icebp
add
gs
je
lea
push
dec
pusha
pop
xchg
jbe
push
xchg
add
pop
add
xchg
sbb
fdivs
loopne
add
add
popf
andl
add
sti
test
add
js
stc
fdivs
jae
add
adc
jl
push
jo
add
mov
rcl
aas
out
dec
pop
mov
lock
repnz
mov
cmp
in
addb
mov
add
cmpsl
sarb
cmp
sub
pop
fsts
push
add
cli
jae
ds
sarb
dec
adc
push
lods
test
xchg
out
add
sbb
mov
cmovg
sbb
sbb
add
jne
mov
jp
data16
adc
mov
in
ret
jne
or
xchg
inc
inc
fsub
adc
add
xor
jge
outsb
add
sbb
in
cmp
jb
adc
call
dec
loope
sub
or
mov
enter
setle
movsb
sarl
jmp
adc
add
lea
add
jg
fisttpll
lret
and
test
jbe
mov
int
or
push
add
add
or
adc
mov
jl
movsb
pop
test
popf
clc
mov
xor
add
int3
add
scas
sub
pop
xchg
jl
sub
add
sub
lock
testl
movsb
scas
popf
adc
dec
in
push
xor
cmp
or
mov
movsl
pop
int3
scas
test
dec
shl
popf
filds
scas
push
cmpsb
adc
addl
mov
push
xchg
mov
cld
jl
ljmp
xor
lea
mov
pop
bnd
xchg
jb
pusha
aad
add
add
inc
inc
inc
decl
lock
add
dec
cmpsb
mov
add
xchg
mov
mov
nop
add
loop
pop
add
jns
xor
adc
inc
inc
push
dec
jne
fldenv
cmp
mov
jle
push
sahf
in
add
cld
add
pop
mov
jo
add
xor
aam
fstpl
cmpsb
xor
jbe
inc
mov
mov
loope
clc
imul
and
dec
loop
add
pop
mul
jl
lea
sub
dec
xor
adc
pop
sbb
and
xor
jne
pusha
ret
sbb
add
sbb
add
aam
dec
in
stc
xchg
jle
jecxz
xchg
jno
cmp
cmp
sbb
clc
inc
fists
inc
subl
fldt
mov
hlt
ret
and
push
adc
xor
ljmp
dec
in
sbb
bound
xor
repz
shlb
test
add
inc
cmp
jge
mov
pop
jmp
mov
pop
sub
add
rcrl
cmova
adc
je
pop
and
sbb
add
push
sub
sbb
test
in
mov
inc
shll
pop
sbb
jecxz
inc
mov
xchg
jno
add
je
clc
out
jl
jno
mov
into
mov
addb
push
inc
inc
inc
inc
add
dec
dec
dec
add
dec
add
push
push
add
mov
pop
pop
popa
loopne
add
gs
push
add
outsl
jo
xorb
pop
jne
ja
jns
jp
xor
push
xor
cmp
das
add
sub
sub
cmp
and
nop
mov
or
clc
dec
xor
inc
pop
mov
xchg
aaa
mov
cmp
jmp
add
test
ret
add
push
test
lahf
xchg
mov
insb
outsl
aam
pop
add
popf
fs
insl
ss
adc
add
add
sub
sbb
push
sarb
mov
add
hlt
sahf
jp
push
cmp
pushf
rorb
add
sub
mov
add
adcb
or
scas
mov
fwait
repnz
sub
lret
add
ret
out
add
sub
lock
ret
imul
pop
dec
shrl
mov
loop
sbb
or
inc
dec
dec
sti
add
aam
mov
aad
add
add
add
dec
mov
shr
dec
subl
lahf
jg
dec
push
jle
bound
jno
add
and
or
f2xm1
add
xchg
mov
stos
add
aam
dec
leave
dec
clc
inc
add
pop
ud2
cmpsl
add
jae
lcall
loopne
add
repz
xor
pop
movb
js
scas
rorl
out
cmp
clc
xor
and
cmp
mov
out
add
clc
addl
xor
xlat
test
adc
ja
cltd
adc
leave
je
inc
jmp
xor
jns
mov
inc
dec
or
js
adc
je
mov
arpl
pusha
or
add
jmp
shlb
jo
add
fisttpl
mov
fldcw
nop
xchg
insb
push
pop
add
aam
jp
inc
sbb
bnd
add
lcall
mov
lds
in
outsb
jp
iret
sub
xchg
add
lods
shll
xchg
out
dec
push
hlt
adc
push
sbb
notl
and
inc
in
and
mov
sbb
sti
cld
mov
add
add
cltd
lods
fbstp
add
add
push
in
je
mov
sbb
or
jbe
dec
xor
mov
stos
pop
sub
in
adc
outsb
dec
fbld
movq
mov
or
call
loopne
push
mov
and
add
xlat
adc
cli
pop
add
sbb
pusha
out
sub
add
push
fdivrl
cmp
add
ss
inc
pop
lcall
lret
test
push
inc
sbb
pop
fs
add
xor
jno
add
cltd
sbb
ret
jge
pop
push
or
lock
loop
and
adc
clc
aas
jb
out
push
rcrb
jp
add
shrd
sub
imul
jae
mov
out
test
dec
sbb
cwtl
xchg
cmp
add
or
out
int
jnp
and
rolb
mov
add
rolb
lods
mov
sub
aad
cmp
xchg
pop
mov
not
jb
add
mov
push
or
data16
dec
add
sub
jle
add
lcall
add
push
movsb
stos
repz
mov
dec
loop
out
icebp
inc
and
add
das
into
sub
cmp
sub
scas
add
or
in
aas
xchg
stos
adcb
imul
or
add
mov
popf
xchg
push
lcall
pop
push
xchg
add
lea
aas
xchg
movups
adc
dec
pushf
or
inc
add
pop
push
lods
add
jle
daa
pop
push
inc
add
adc
sahf
add
scas
jno
xchg
lret
or
dec
sub
leave
add
add
stc
xchg
in
add
mov
arpl
dec
jg
mov
mov
add
cmp
or
inc
jle
pop
mov
jo
hlt
pop
xchg
mov
ds
xchg
aad
adc
enter
flds
scas
das
ficoml
fsubs
push
add
inc
add
js
insb
xlat
fs
pusha
xchg
add
andb
add
cld
jne
xor
out
add
xchg
pop
push
sub
xchg
jl
pop
dec
pop
lock
outsb
add
cmp
mov
push
hlt
les
dec
sub
add
add
fsubl
push
add
inc
fstpl
idivb
pop
xor
mov
add
xor
sub
mov
inc
js
dec
xchg
inc
add
nop
jl
xchg
push
mov
cmp
xor
cmc
adc
in
inc
int
add
ja
mov
lea
cld
push
or
xchg
dec
or
and
add
les
jmp
bound
enter
ljmp
jmp
add
outsl
jl
cmpsb
nop
mov
fstl
pop
clc
fwait
repnz
add
loop
dec
out
ja
and
shll
popf
sub
sbb
jb
xchg
adc
jae
add
jbe
and
inc
out
call
add
cli
dec
add
pop
dec
xor
adc
and
add
push
pop
clc
iret
mov
sub
cwtl
std
jo
pop
add
addr16
xor
jns
xor
or
adc
or
sub
loope
and
add
cld
xor
js
daa
lret
pop
and
xor
mov
jae
jle
add
mov
sbb
por
push
fmul
or
addl
dec
jne
add
ror
dec
out
aad
pop
pop
mov
inc
hlt
ljmp
fwait
pop
popa
lahf
pop
add
pop
sub
add
in
cli
popa
mov
pop
jecxz
ja
cmp
xchg
dec
jno
outsb
sbb
and
andb
push
adc
sbb
push
mov
pop
add
clc
xchg
dec
fsub
xor
jae
jp
in
or
xchg
cli
dec
loop
mov
and
call
in
mov
jecxz
inc
mov
in
xchg
and
pop
lods
fadd
sbb
shrl
cmp
ljmp
lock
xchg
cmpb
add
rcrb
add
inc
cwtl
push
icebp
fld
pop
add
add
cmp
dec
into
in
rol
or
mov
clc
mov
add
jl
das
mov
pop
rorb
xor
mov
dec
adc
add
add
shl
ret
mov
imul
shrl
out
xchg
push
add
stc
lret
je
mov
mov
xor
in
lods
jo
or
mov
shrb
add
push
test
cmp
jns
mov
pop
jle
dec
les
push
lcall
into
jns
add
shlb
cs
nop
cmp
pushf
push
mov
mov
push
mov
xchg
call
imul
xchg
iret
repz
xchg
movsb
adcl
jle
push
pop
sar
add
mov
add
roll
and
push
cmp
push
xor
call
xchg
add
push
stos
adc
shlb
add
or
mov
sub
nop
sub
fadds
cmpsl
loopne
and
test
decb
dec
adc
add
movsl
cmp
add
mov
inc
in
push
and
lock
jle
cld
jge,pt
mov
test
sbb
xor
loope
clc
add
pop
pop
ret
mov
push
lret
addb
shr
shl
or
cmp
xchg
orb
pop
fcomps
lret
add
fldpi
add
out
ljmp
popf
push
dec
repz
or
mov
add
imul
add
xchg
adcb
int3
and
out
add
inc
enter
add
dec
adc
add
xor
sub
rolb
loope
jmp
out
xor
pop
jae
mov
loopne
decl
add
or
movb
push
cmp
andb
addr16
es
fimuls
jl
sbb
cmpsl
jnp
sahf
cld
aas
arpl
jp
jo
or
pusha
xchg
push
mov
sub
fwait
js
sbb
sbb
movsb
andb
pop
mov
cmp
mov
mov
xlat
inc
aam
test
add
and
fimull
test
inc
clc
add
stos
enter
add
ds
sbb
test
add
cwtl
outsl
shll
xor
pop
push
ret
xchg
pop
sub
popa
lock
aam
dec
rclb
fiadds
add
push
loopne
jb
push
sar
popa
sbb
jle
sbb
xchg
mov
mov
push
mov
sahf
clc
sub
add
lock
push
add
or
sbb
out
or
or
jo
data16
and
testb
aad
cmp
stos
cmpsb
loopne
fdivr
push
and
inc
adc
add
and
add
das
shll
repz
sub
jnp
movsl
or
sub
test
enter
and
movsb
add
nop
idiv
into
add
ds
xor
scas
xchg
hlt
out
aam
add
sbb
pop
add
leave
in
pusha
xchg
test
testb
sbb
movsl
add
pushf
and
sbbl
test
js
push
pop
or
loopne
mov
std
add
cli
cmp
push
push
jnp
add
or
into
inc
push
cs
add
jns
or
push
add
jae
pop
in
push
ficoms
daa
in
test
jge
push
add
mov
xchg
sti
add
cltd
pop
loop
push
shll
enter
jmp
repz
out
dec
enter
pusha
cld
mov
daa
jg
add
or
xchg
add
push
test
add
clc
xor
xchg
sub
or
cmpsl
dec
add
lods
jb
push
mov
pop
mov
jne
mov
gs
mov
fwait
hlt
jp
add
pop
xchg
repnz
cmp
and
add
dec
mov
movsb
inc
or
cmp
add
add
jmp
ds
call
js
andl
lahf
jnp
ret
push
mov
das
add
xchg
test
out
mov
lock
pop
mov
fcomps
movb
xor
mov
mov
xchg
add
rolb
dec
call
mov
add
adcb
lcall
add
mulb
hlt
adc
bound
aam
adc
rcll
imul
add
and
ds
in
push
pop
cmpsb
frndint
add
stc
jg
call
test
sub
pop
add
and
or
cmp
hlt
in
mov
xchg
add
lea
add
xorb
mov
cmp
push
loop
mov
and
out
in
inc
adc
fisubrl
push
mov
xorb
lret
add
addr16
pop
sbb
fisubl
dec
sarl
add
sbb
les
cmp
mov
rcr
outsb
shl
jecxz
xchg
add
je
cmp
push
dec
inc
pop
mov
pop
cmp
lcall
adc
pop
add
ret
inc
adc
xor
dec
dec
push
and
repnz
sti
cwtl
out
or
or
xchg
cmpsl
pop
add
fwait
stc
test
aam
push
add
adc
out
xlat
cltd
fistl
mov
and
xchg
ss
pop
in
inc
flds
push
hlt
inc
sub
ljmp
inc
pop
fiaddl
sub
loope
add
lcall
loopne
jnp
andb
cltd
les
sbb
push
in
add
xchg
xor
out
add
fstpl
or
mov
cmp
fwait
pushf
std
shrl
add
mov
movsb
pop
push
sbb
and
pop
pop
data16
shl
lea
push
mov
add
popa
imul
faddp
cmp
test
shrb
or
std
or
adc
mov
adc
aad
rcrl
push
lock
push
shrb
sub
std
add
enter
xor
xor
push
pushf
and
add
fildll
add
add
and
jae
je
push
popf
jl
ret
cmpb
push
push
add
popa
hlt
adc
push
mov
add
xchg
int3
jmp
adc
cmovnp
testl
js
mov
inc
nop
movsl
add
adc
mov
jns
sub
add
fldl
jb
xchg
clc
loop
outsb
pop
add
add
push
add
adc
add
sbb
dec
add
and
sub
cmp
dec
pop
mov
cmp
and
add
add
movsb
scas
jns
arpl
push
gs
lock
and
pop
add
sahf
dec
mov
push
pop
push
xchg
mov
and
in
adc
dec
out
sub
sbb
add
push
into
js
inc
call
push
stc
lock
inc
xchg
sub
sbb
or
or
adc
movsl
sbb
addr16
in
xchg
cmp
sbbb
inc
test
dec
decl
add
lock
cli
jg
pop
cmp
jne
mov
test
and
push
mov
fadds
das
add
xchg
dec
pop
addb
hlt
jne
icebp
add
loopne
jp
dec
xor
fdivl
mov
add
inc
insb
popa
jae
jno
add
sbb
loope
test
lock
add
bound
add
mov
sbb
mov
sbb
loope
data16
in
mov
add
pop
loop
and
lret
movups
jo
mov
mov
or
movsl
cld
lock
adc
inc
xor
hlt
jmp
add
arpl
adc
sbb
lahf
or
dec
ds
addb
iret
movsl
sub
popa
dec
pop
loop
mov
lds
cmp
fsubrl
mov
jle
ljmp
jp
inc
and
data16
xchg
pop
aad
adc
add
int3
or
add
scas
cld
fnstcw
push
mov
lea
mov
push
pop
stos
inc
nop
and
cmpsl
jecxz
xor
add
clc
xchg
cmp
gs
push
into
jnp
jge
scas
cwtl
ljmp
js
xchg
push
insl
and
clc
push
xchg
adc
call
ja
lock
sub
mov
rcrl
out
in
fdivrl
jge
push
pop
add
ret
pop
popfw
and
or
iret
in
xchg
push
cmpsb
test
pop
xlat
or
pop
pop
lcall
clc
es
add
mov
ret
pop
jg
fs
es
mov
dec
xchg
imul
add
inc
push
cmp
jne
ja
add
and
adc
sbb
mov
je
ds
shlb
or
add
sub
add
in
mov
add
mov
clc
pop
dec
inc
jl
mov
add
push
push
mov
push
rorl
mov
fildll
cmp
movsl
sub
adc
adc
pop
addb
test
fstpl
minps
scas
lock
xchg
dec
mov
cmp
test
int
sub
dec
lds
bsf
orl
pop
push
or
movsb
jmp
shll
es
sbb
or
push
xor
inc
add
rcrl
cmp
adc
call
fistpl
cmp
sbb
mov
mov
dec
sbb
lea
mov
mov
cld
mov
es
clc
in
sbb
lcall
dec
mov
cltd
add
imul
mov
jp
mov
mull
xchg
adc
xor
jecxz
pop
cwtl
pop
push
push
or
adc
sbb
nop
ret
mov
or
dec
pop
and
cmp
add
das
or
jge
pusha
cmpsl
pop
xchg
add
push
adc
sbb
add
mov
or
and
popw
adc
pop
or
push
mov
pop
add
add
lods
mov
push
mov
push
mov
out
jno
mov
add
adc
addb
xchg
mov
ja
scas
or
ret
sbb
inc
pop
add
mov
adc
in
int3
add
stos
fdivs
add
xor
or
imul
sub
cmpl
aad
pop
mov
cmp
xchg
mov
inc
adc
push
mov
pop
es
xor
or
mov
push
iret
sub
xchg
or
add
pop
test
test
jbe
shlb
std
add
jg
dec
out
and
aaa
add
pop
rolb
movsb
or
jne
jae
jnp
iret
or
xor
xchg
adc
or
clc
sub
mov
pop
mov
arpl
add
mov
in
jg
mov
add
or
adc
std
loope
inc
cli
orb
cld
push
xchg
add
popa
cmpsl
dec
hlt
popf
sub
add
mov
repnz
rol
notb
jg
in
and
hlt
xor
ljmp
dec
cltd
fsubrs
sub
adc
add
push
leave
jo
adc
ret
mov
clc
rorb
sub
push
and
in
rolb
adc
sub
add
inc
xor
add
data16
into
ret
add
lcall
add
jns
or
push
loop
pop
add
cmp
jb
rolb
cwtl
mov
sub
inc
push
pop
cli
cmp
mov
or
sbb
add
test
pop
popf
clc
push
or
sbb
mov
inc
dec
nop
or
jbe
mov
sub
outsl
inc
addl
mov
push
dec
cmp
fdivrl
jecxz
adc
in
rorl
fwait
mov
lret
and
je
add
dec
ja
or
icebp
jb
or
sbb
andb
inc
jae
adc
dec
xchg
push
mov
aad
mov
sbb
sub
and
or
jp
add
inc
adc
add
imul
addb
jns
daa
lods
sbb
add
adc
and
mov
dec
inc
xor
sub
xchg
add
nop
dec
and
in
push
es
testb
add
mov
adc
inc
ljmp
xlat
movsl
insb
adc
enter
adc
addb
rolb
fidivl
inc
lret
sbb
imul
dec
mov
dec
or
mov
pop
pop
das
pop
pop
mov
add
pop
xchg
cmpsl
aad
sub
call
add
adc
lock
add
xor
dec
inc
scas
xor
push
add
cltd
sub
xchg
in
xchg
adc
das
mov
call
aam
inc
add
add
lcall
loop
in
xor
nop
subl
int
push
pushf
inc
aam
push
subb
mov
dec
scas
sub
pop
push
xchg
mov
and
sub
add
adc
or
nop
inc
jl
add
push
mov
pusha
repnz
cmp
call
cmc
into
add
lods
xchg
cmp
or
xor
xchg
jne
je
outsl
insl
adc
imul
mov
push
out
mov
scas
xchg
cmp
loop
and
faddl
dec
add
push
xor
sub
push
mov
push
mov
out
adc
jb
add
je
mov
add
iret
incl
jmp
out
or
add
sbb
les
shrb
add
dec
mov
fwait
dec
dec
loopne
add
neg
push
roll
out
leave
add
push
pop
jle
test
xor
or
xchg
movsb
add
icebp
push
scas
mov
mov
int
push
fwait
aaa
inc
mov
dec
add
xchg
push
arpl
mov
push
mov
add
es
inc
sarb
cwtl
mov
fwait
enter
add
cmpsb
jo
jp
add
hlt
icebp
xor
mov
rol
imul
add
jmp
mov
bound
scas
add
roll
pop
push
inc
insb
fiaddl
add
adc
pusha
and
push
mov
cmpsb
add
push
mov
es
add
stos
cmc
loop
xor
in
mov
push
lock
inc
cmp
add
xor
push
mov
cld
push
jo
add
pop
lock
sahf
lea
add
and
loopne
mov
xchg
adc
add
dec
pop
push
loopne
adc
test
mov
repz
enter
ljmp
stc
mov
mov
in
mov
inc
repnz
pop
out
enter
xchg
push
loop
mov
lods
insb
add
xlat
dec
sbbb
add
imul
push
pusha
add
pop
icebp
and
fdivr
inc
add
pushf
hlt
fistpl
inc
cmp
and
mov
repnz
aaa
mov
add
hlt
xchg
jae
jmp
mov
int
cmp
in
dec
push
pop
jle
cld
es
add
jmp
inc
test
sbb
adc
shlb
dec
inc
enter
daa
xor
xchg
push
mov
pop
dec
push
dec
das
iret
mov
addb
popf
push
jb
sar
add
xchg
sub
add
ficoml
enter
mov
dec
push
pop
sub
mov
xchg
xor
adc
movsb
cltd
pop
xchg
clc
mov
adc
xchg
adc
add
xchg
lds
cmp
roll
adc
sar
daa
xchg
fists
orl
data16
insl
dec
add
jbe
jge
xchg
lods
mov
ret
fistpll
add
adc
stc
add
ds
push
and
jns
mov
shl
ljmp
or
popa
pop
call
adc
stos
and
mov
add
sub
dec
movsbl
pop
cmp
jae
cs
sub
rcr
or
add
or
pushf
add
sbb
sbb
rcll
adc
shlb
pop
loope
adc
push
push
add
xchg
sub
daa
inc
sbb
cmp
pop
in
sbb
add
sbb
mov
push
ret
nop
mov
aas
dec
out
jbe
inc
std
repz
mov
push
mov
nop
or
sbb
sbb
cmp
and
push
and
sub
sub
xor
int3
fmull
pop
ja
xor
leave
call
xorps
mov
outsb
add
neg
and
adc
sub
add
lea
or
mov
into
adc
and
mov
mov
les
add
sgdtl
out
pop
imul
insb
pop
loop
roll
loopne
lods
gs
filds
sub
inc
sti
out
xor
cld
or
sub
mov
test
imull
popa
and
in
cmp
add
jbe
call
add
movb
cmp
add
push
in
xchg
cld
leave
cmp
xor
pop
or
add
pop
test
mov
aas
fdivrp
xor
fs
sahf
and
rclb
add
mov
add
jecxz
or
mov
or
gs
es
stos
add
cmp
addl
jl
xchg
fs
sub
test
enter
fsubs
mov
mov
js
aas
push
push
std
pop
pop
call
mov
cltd
adc
mov
mov
nop
and
inc
fcomp
mov
add
add
nop
movsb
dec
in
filds
mov
adc
adc
hlt
cs
and
push
ja
add
into
nop
out
add
out
andb
mov
sub
jp
push
xchg
add
insb
les
add
iret
roll
scas
add
jmp
std
mov
and
add
daa
mov
and
js
pop
cmc
add
pop
pusha
mov
insb
iret
jo
je
lahf
sarl
or
mov
inc
add
ror
arpl
xor
mov
add
repnz
into
adc
adc
scas
sbb
push
inc
add
xchg
in
add
push
in
inc
subb
fs
cmp
add
xor
or
push
cmp
inc
je
dec
mov
push
add
and
mov
nop
add
push
push
je
in
xor
and
push
inc
js
xchg
sbb
lock
nop
pop
repz
mov
xchg
inc
pusha
sbbl
pop
dec
xchg
cmp
and
sarl
out
add
xchg
pop
sub
int3
xor
add
or
sbb
add
sbb
lret
jnp
inc
add
adc
push
test
push
int3
inc
test
dec
xor
icebp
and
loope
add
outsb
jo
cmpsb
adc
jge
or
and
adc
add
add
jmp
cmc
inc
in
rolb
jb
lds
or
pop
and
adc
add
inc
add
inc
xlat
add
mov
call
mov
inc
add
divps
in
test
or
jecxz
mov
adc
xchg
test
cmp
mov
mov
pop
cltd
push
mov
add
or
dec
pop
addb
adc
or
adc
pop
inc
sbb
add
pop
xor
xchg
icebp
xchg
add
jl
xor
insb
test
pop
dec
sub
add
pop
pop
sbb
pusha
cmc
adc
mov
inc
rolb
dec
stos
adc
nop
push
lods
fidivrs
aam
cltd
pop
sbb
dec
mov
jecxz
int
addb
or
and
cmp
pop
adc
mov
sbb
mov
ret
out
dec
dec
push
inc
lods
add
nop
or
jns
cmp
add
cmc
std
push
addl
and
dec
or
sub
or
add
xor
xor
sbb
add
sbbb
notl
dec
mov
inc
inc
adc
mov
jae
icebp
jnp
addb
movl
push
push
and
scas
repnz
adc
outsb
cmp
sub
sbb
dec
movsl
add
jg
push
inc
push
add
mov
fwait
add
pop
stos
add
pop
add
int
loopne
pop
pop
push
incb
outsl
push
mov
add
stc
shll
push
sbb
and
sub
nop
shrb
push
ret
add
enter
int
leave
add
outsl
xchg
imul
in
subb
add
incl
addl
rcll
cwtl
hlt
or
cltd
aas
jg
sub
push
xlat
aad
lock
sub
inc
sub
mov
sbb
addr16
add
call
jae
int
or
sub
cmc
push
cmp
jb
test
enter
inc
gs
out
iret
add
jae
lea
orb
call
jg
or
add
enter
xor
sbbb
filds
faddp
aam
dec
add
add
adc
aaa
jbe
outsb
icebp
inc
dec
mov
sub
xor
loope
nop
sarb
add
adc
jo
ss
sub
xor
cli
xchg
cmp
dec
js
ja
add
cmp
sub
mull
bound
mov
jg
mov
and
ss
jg
inc
pusha
ret
jo
mov
mov
add
sub
mov
dec
in
nop
xchg
in
add
jnp
rolb
mov
and
dec
int3
push
and
cmpsb
add
ss
rcll
aas
sub
orb
ret
push
cmp
aas
sbb
outsl
xor
pop
enter
cmp
jecxz
aas
fsubs
add
push
dec
push
pop
cmp
mov
int
dec
add
movsb
fadds
faddl
adc
or
push
add
ss
loopne
insb
fs
jae
les
mov
jno
add
push
lret
ljmp
jb
xor
xchg
mov
scas
jne
add
jecxz
push
add
add
cmp
mov
ret
xor
add
lock
cmp
dec
add
ret
movsb
pop
cmc
mov
push
inc
lods
cmp
fstpt
orb
shlb
leave
pop
stos
loop
lcall
mov
sbb
test
mov
lods
gs
jge
pop
sbb
mov
fiaddl
sbb
jecxz
push
pop
dec
mul
push
pop
aas
inc
push
add
sti
shr
not
add
call
cmp
cmp
shl
out
jmp
cli
pop
add
sti
and
fcmovnu
ror
add
or
jmp
add
cmp
mov
add
mov
in
clc
jmp
adc
insl
push
fadds
out
cltd
out
adc
sbb
outsl
add
js
jmp
add
cmp
cmp
xor
jmp
or
add
cmp
scas
je
pop
test
sahf
inc
push
add
js
mov
iret
adc
sbbb
mov
and
mov
loop
cmp
sbb
or
stos
xor
inc
add
and
pusha
enter
repnz
cmp
shr
scas
in
std
iret
xor
lds
cltd
jns
pop
jp
scas
jg
inc
movb
fisttpl
loope
push
pop
add
sub
ret
insb
ljmp
push
and
push
xchg
call
mov
das
jecxz
or
cmp
mov
push
inc
out
pop
das
cli
push
movsb
in
rolb
xchg
gs
push
adc
xchg
xchg
sarb
in
add
xchg
stc
add
shll
and
nop
pop
cld
mov
push
orb
out
push
xor
or
push
std
add
cmp
ja
mov
lcall
adc
sbb
fnstenv
and
add
mov
inc
add
and
cmp
add
outsb
xor
nop
call
add
test
and
pop
cmp
jae
cld
nop
add
adc
adc
pop
jg
mul
pop
xor
add
mov
jmp
push
clc
imul
add
xor
jl
xchg
mov
jno
add
and
adc
mov
add
push
sub
xchg
add
inc
sti
les
xor
sbb
imul
pop
dec
or
mov
or
lcall
out
insb
fcoms
sbb
add
or
push
add
clc
xor
add
add
xchg
scas
rorl
xchg
adc
and
dec
loopne
adc
dec
test
and
jns
or
ljmp
dec
das
testl
loopne
add
pop
fcomps
mov
inc
orl
add
fsubl
mov
jbe
xor
rol
rol
pop
pop
pop
mov
pusha
cwtl
mov
fs
int
mov
inc
and
add
sub
rolb
pop
lock
pop
loopne
aas
add
inc
cwtl
or
cmp
push
outsl
sub
xor
mov
jnp
jp
mov
and
push
add
shl
jne
sbbb
or
insb
sbbb
mov
mov
push
pushf
add
aad
ja
out
int3
pop
flds
adc
jle
aam
outsb
xchg
pop
in
add
add
mov
filds
jge
mov
and
xchg
push
test
cmc
inc
scas
lcall
sbb
sub
int
sub
inc
ffree
add
call
jl
mov
packssdw
mov
jge
lea
lds
push
jns
cs
xchg
movsl
nop
mov
movsb
push
roll
or
and
inc
fiadds
std
and
inc
decl
cli
push
add
shll
loope
mov
call
mov
add
or
sbb
xor
add
jo
and
imul
mov
clc
lahf
hlt
stos
add
into
mov
ja
add
inc
incb
int3
push
call
push
sahf
mov
jl
test
mov
inc
add
adc
sub
xchg
stos
icebp
pop
mov
inc
sbb
adc
inc
xor
sbb
jmp
xchg
shl
and
fcomps
push
lock
push
pusha
pop
or
scas
testl
xor
push
mov
inc
xor
sub
mov
jnp
lock
js
add
and
adc
mov
and
add
shrl
ror
mov
inc
jns
cmpsb
mov
add
adc
mov
xchg
pop
lock
mov
rolb
adc
imul
add
enter
dec
mov
pusha
es
icebp
imul
stos
cmc
rclb
add
jle
cmp
sub
adc
addl
sub
add
movsb
cs
in
rorl
jbe
add
pop
adc
sbb
xor
inc
mov
adc
adcb
push
and
add
mov
adcb
mov
cs
cwtl
or
add
and
jmp
movsb
pop
cmp
out
cmc
inc
and
push
repnz
dec
nopl
adc
clc
aaa
pop
ret
or
rorb
adc
or
mov
mov
cmpl
nop
mov
xchg
rcl
push
in
or
clc
mov
lock
test
adc
flds
outsl
jne
add
in
and
pop
nop
xor
mov
lea
add
lahf
call
jmp
push
orl
sar
pop
jno
and
mov
or
adc
insl
hlt
test
inc
and
cmp
or
in
sbb
add
repz
nop
pop
es
js
inc
ljmp
add
jecxz
icebp
add
sbb
mov
mov
imulb
jo
cmp
pop
adc
movb
fwait
sub
add
adc
add
pop
out
inc
daa
subb
addb
out
pop
aam
mov
repnz
add
rorl
and
add
cmp
aam
xor
inc
addr16
add
and
sbb
lcall
xor
test
push
lods
les
push
out
and
popa
hlt
inc
sub
fstp
add
out
fdivrl
adc
pop
ljmp
add
testb
pushf
push
repnz
xchg
add
add
or
pop
mov
cmp
sbb
mov
add
dec
or
cmp
adc
sub
lds
xchg
push
int3
ljmp
subb
hlt
out
adc
add
test
pop
ficoms
inc
add
dec
sbb
push
pop
adc
loopne
out
xor
cmp
movsb
inc
sbb
adc
frstor
pop
repz
mov
jns
push
cmpb
rcr
adc
lcall
ret
push
aas
daa
xor
xchg
adc
mov
mov
arpl
pop
xchg
push
pop
nop
adcb
mov
add
pop
xchg
arpl
cli
add
shl
popf
fidivrs
mov
loop
inc
cs
sbb
pop
add
push
pop
std
jl
add
aas
cld
test
lock
add
lret
and
rcrb
sbb
dec
mov
and
imul
or
pusha
aad
lds
adc
mov
js
mov
jae
call
sub
pop
int
adc
repnz
pop
lea
adc
jb
test
ljmp
adc
cs
adc
sti
sub
jmp
loop
jns
add
or
adcl
pop
enter
mov
mov
dec
sbb
leave
mov
push
or
cmp
add
out
cmpsl
xlat
into
xchg
add
or
rcl
sahf
pop
not
push
orb
hlt
adc
jno
xchg
mov
mov
sbb
and
icebp
cmp
add
xor
or
test
jne
scas
adc
mov
xor
adc
insb
and
enter
and
stos
pop
cmp
and
test
adc
jae
push
push
and
subb
mov
aaa
xor
mov
sarl
movsl
popa
mov
in
sahf
cmp
jmp
insl
enter
sbb
pop
adc
mov
mov
add
push
aaa
and
add
aas
shll
add
pop
lea
or
mov
test
mov
cli
sbb
sub
aaa
xchg
or
adc
lret
inc
and
les
add
add
aas
adc
out
icebp
push
or
mov
pinsrw
pop
or
add
xor
lods
pop
dec
sbb
mov
or
or
sub
jle
mov
cmp
les
push
outsb
popa
in
popa
sub
or
cwtl
divl
cld
and
les
adc
jecxz
mov
dec
xchg
inc
in
pop
sti
call
push
or
lds
sbb
and
fnsave
dec
add
cmp
adc
push
xchg
mov
iret
add
push
and
cli
jl
sbb
mov
sti
and
mov
push
adc
jbe
ja
call
jmp
mov
sbb
dec
incl
adc
out
rorl
adc
pushl
cmc
lock
loope
icebp
push
shlb
jo
iret
xchg
shrb
mov
aaa
sbb
sub
incb
lock
mov
imul
add
sbb
sbb
push
or
out
add
sub
lea
scas
std
push
or
ljmp
pop
movsb
mov
mov
mov
xchg
aam
call
popf
mov
pusha
ljmp
call
pop
fdivrl
xchg
pop
loop
jmp
mov
xor
mov
push
mov
lahf
xorb
cltd
jns
ja
add
aaa
shrl
or
ret
out
shr
mov
push
jbe
and
add
inc
in
fucompp
jb
cli
mov
lcall
and
add
xchg
xor
mov
lea
icebp
or
xchg
arpl
or
orb
lcall
add
ljmp
andl
sbb
xchg
rolb
adc
inc
pushf
and
orb
xor
mov
and
sub
sbb
dec
cmpxchg
xchg
adc
mov
push
test
out
cmp
test
mov
pop
aas
cmpsb
xor
outsb
sbb
adc
add
and
cs
cmp
add
sbb
add
sbbl
sub
xor
minps
add
aam
mov
les
sbb
and
inc
mov
dec
add
ficoms
loop
add
cmpsl
and
pop
mov
pop
and
aad
cld
sub
sbb
add
ss
sbb
test
out
sbb
lods
jle
neg
pop
loope
inc
inc
xor
std
rorl
xchg
or
jl
jg
lcall
xchg
pop
xor
add
flds
fsubrs
sbb
pop
test
inc
call
pop
fsubrl
or
lahf
dec
push
or
xor
psubd
add
cmpsl
and
sbb
or
ret
nop
ftst
pop
add
adc
and
xchg
xchg
in
leave
xchg
pop
cld
out
mov
adcb
add
and
mov
out
call
add
and
xor
add
lock
xor
add
and
adc
jmp
loop
lods
ds
xor
das
loope
and
imul
les
mov
das
xchg
popa
loope
add
and
jnp
mov
pop
or
and
gs
xor
xchg
out
repnz
std
es
and
push
std
and
stc
and
rorb
push
adc
mov
call
bnd
unpckhps
jns
out
stos
icebp
or
rcr
cmp
ljmp
daa
xor
ret
dec
sub
jg
inc
sbb
pop
mov
dec
or
pop
xor
sub
xlat
mov
cmp
cli
test
pop
cmp
lds
jp
jecxz
call
sti
add
sub
push
ss
dec
add
xchg
jnp
pop
icebp
push
outsl
mov
adc
jb
loop
xlat
and
dec
jg
les
das
hlt
and
imulb
sub
inc
lret
pop
add
pop
sbb
and
pushf
push
push
and
inc
cs
pop
dec
cmc
lahf
add
in
mov
cmpsb
dec
sbb
xchg
jmp
out
lret
in
dec
jmp
inc
sub
inc
loopne
dec
jbe
pop
sub
xchg
mov
jecxz
add
repz
add
add
mov
icebp
mov
or
sub
movsl
insb
mov
lret
pop
ds
xor
mov
sub
es
push
push
stc
arpl
loopne
aas
dec
call
xor
ss
divl
rolb
jp
pushl
test
mov
and
jg
or
mov
mov
movsl
repnz
push
dec
sub
loope
or
jge
and
cmp
inc
clc
subl
cld
mov
inc
xchg
pop
jo
sub
js
shlb
lret
sub
mov
cs
sbb
ret
adc
mov
and
out
lahf
inc
jle
push
pop
push
xor
test
and
cld
std
push
stos
mov
filds
test
pushl
sbb
add
je
loop
das
jle
add
and
cmp
jmp
pop
add
and
into
in
outsl
inc
add
loope
das
add
mov
cltd
add
or
and
das
pop
aas
add
aaa
fs
aas
imul
push
inc
cmp
inc
xchg
dec
enter
xor
push
mov
add
xor
lods
outsb
subl
add
and
add
mov
xor
out
adc
push
or
dec
adc
inc
insb
adc
iret
subb
icebp
push
add
adc
add
cmp
pop
dec
mov
pop
jae
inc
shl
or
insb
cld
xchg
or
jmp
cltd
pop
icebp
addr16
or
mov
mov
sub
jg
cmpsb
adc
xor
inc
cmp
mov
int3
pop
mov
in
add
mov
gs
cli
inc
xor
pmaxsw
in
cmpsl
lock
adc
in
mov
int
push
loop
int3
stc
sub
adc
or
add
pushf
cmpb
pop
jns
xchg
fsts
jg
lds
call
leave
jno
push
filds
xchg
or
mov
sub
les
inc
cmp
daa
adc
scas
sbb
inc
xor
aas
adc
test
hlt
pop
or
inc
add
push
pop
sub
adc
out
mov
or
push
xchg
pop
add
js
subl
movsb
jg
add
bound
dec
or
push
dec
push
adc
xlat
mov
push
jns
rsqrtps
push
shl
xor
lret
decb
push
dec
adc
or
ret
inc
push
repnz
aas
call
inc
lock
jo
push
aas
jne
add
ret
jg
sbb
push
push
jle
or
cmp
jge
ret
mov
stos
push
mov
inc
aam
sar
in
jne
jp
cs
xchg
add
mov
in
int3
cmp
scas
mov
inc
cmp
inc
dec
loopne
pop
enter
xchg
shlb
ljmp
lret
in
std
add
sub
mov
loop
push
dec
jo
sarb
add
pop
add
or
dec
add
and
xor
jbe
pop
shrb
shl
add
sbbl
rolb
xlat
sub
xor
das
pop
leave
xchg
add
repnz
addb
int3
loop
out
add
stc
test
xor
dec
and
xchg
dec
or
add
lods
test
loopne
in
sub
repz
imul
pusha
inc
adc
into
push
cmp
testl
and
adc
add
push
cmp
mov
jecxz
push
add
cli
cmp
add
pushf
stos
adc
inc
sbb
push
mov
mov
dec
into
add
inc
sbb
and
enter
sub
and
dec
pop
xchg
add
cmp
add
fs
imul
jg
xchg
dec
mov
push
add
pop
or
cmp
enter
add
outsl
clc
push
hlt
push
mov
test
xchg
ret
ss
hlt
psrad
dec
mov
lock
jo
mov
fldl
nop
js
jl
pop
mov
cmp
and
and
pop
pusha
dec
mov
stc
jge
mov
cld
scas
xor
rcll
inc
pushf
jp
jo
adc
movsb
mov
inc
mov
jl
jg
xor
jnp
adc
and
add
sbb
sbb
dec
cmp
xlat
outsl
movb
pop
sbb
add
push
inc
lods
or
or
aad
aas
inc
xchg
outsb
sbb
pop
in
inc
out
enter
and
mov
add
mov
mov
rolb
pop
cmc
mov
fadd
jb
int3
add
inc
shrb
aam
and
adc
add
push
mov
and
jl
mov
add
daa
aas
add
jp
loopne
xor
add
inc
hlt
jmp
clc
sbb
shll
lret
cld
xor
adc
pop
mov
cmp
cmc
jbe
or
xchg
incl
mov
adc
ljmp
and
cmpsl
add
adc
ljmp
xor
sarl
add
mov
push
call
mov
inc
shlb
push
addl
or
push
stc
add
les
ds
xchg
pop
enter
mov
mov
adc
mov
mov
push
or
or
mov
rcrl
and
out
inc
cmp
call
loop
add
adc
push
jmp
repnz
jecxz
jnp
jns
add
add
add
dec
sub
cmp
add
xor
rorb
je
jcxz
icebp
and
fildl
or
sbb
ret
mov
add
xor
pop
push
scas
inc
pop
sub
jmp
xor
xchg
xorb
nop
jle
leave
mov
inc
ret
mov
or
sub
adc
shl
or
xadd
iret
or
cmp
or
leave
shlb
std
fdivr
sbb
sbb
fld
sbb
add
sbbl
add
sbb
add
add
rcrb
faddl
adc
aam
aad
ret
xlat
rolb
adcb
js
xchg
shlb
roll
add
shrb
shlb
popa
xor
shlb
add
xor
ss
call
add
shlb
hlt
cld
sarl
and
add
aas
cmpb
cmp
cli
cmp
cmp
add
loopne
add
stc
addl
sub
inc
sub
jnp
pop
sub
lock
and
out
loopne
inc
int
sub
in
and
into
and
loopne
and
and
and
data16
and
mov
popa
cmp
mov
stos
mov
bound
or
add
andb
sbb
shrl
stc
shrb
sbb
stos
fisubrs
imul
add
test
push
mov
add
nop
push
jg
jg
ja
sbb
cmp
cmpl
shlb
mov
loopne
into
mov
mov
inc
jbe
jb
mov
mov
jae
add
inc
mov
push
rcll
add
inc
xchg
push
xchg
ja
xchg
push
push
xchg
rclb
xchg
adcl
pop
sbb
sbbl
fwait
inc
pop
mov
sbbb
std
mov
dec
std
dec
fmuls
mov
orl
and
lea
orl
jmp
addl
add
inc
mov
pusha
push
out
add
ret
push
push
add
jecxz
in
pushf
loop
pop
repnz
loope
pop
push
bound
popf
push
mov
mov
cmpsb
mov
sbb
push
push
push
fimull
or
add
rcrb
fcompl
dec
pop
mov
dec
and
adc
and
in
and
jae
call
mov
out
add
cmp
sbb
adc
and
push
inc
xor
push
rcll
test
jo
mov
mov
and
fistps
xchg
pop
xchg
inc
arpl
call
add
xadd
fwait
data16
add
scas
fsubrs
cld
mov
add
or
xor
ret
shr
jae
push
mov
cmpsl
sar
jne
cmp
leave
loope
add
call
push
ljmp
ds
sub
lods
pop
repz
movsb
add
inc
shl
scas
daa
add
hlt
aaa
in
sbb
cld
movsb
and
add
out
xor
pushl
pusha
add
verw
stc
inc
inc
je
and
or
mov
loop
push
adc
xchg
sbb
push
rorb
add
hlt
jns
xlat
mov
icebp
pop
add
add
add
push
xchg
push
add
pop
xchg
add
inc
shl
jbe
add
sbb
push
add
sub
mov
sbb
int3
hlt
add
xor
sub
push
cmp
adc
sub
pop
jg
add
sbb
rclb
add
or
dec
dec
adc
cmp
add
inc
mov
adc
repz
add
and
jmp
add
push
jae
test
add
ret
jecxz
add
xor
cmp
push
lods
faddl
cmp
rol
or
and
cs
or
bnd
dec
rep
popf
mov
into
roll
adc
addl
xor
cmp
push
fadd
addr16
fdivp
lock
stos
fsts
out
adc
add
outsl
and
xchg
jno
or
test
cmp
push
je
sbb
push
adc
push
out
mov
adc
dec
aas
test
adcb
movsl
incl
adc
jo
in
xor
adcl
add
pop
daa
dec
repnz
cmpl
dec
add
mov
xor
sbb
hlt
stc
mov
scas
or
pop
push
lods
mov
push
jo
enter
xor
ret
sub
adc
pushf
lods
pop
mov
add
cmp
dec
nop
adc
push
movsl
sbb
cmp
lods
adc
and
das
adc
movsl
sub
or
cmpsl
in
mov
xchg
inc
sbb
fdivl
xor
add
add
repnz
clc
repz
and
add
lock
arpl
dec
mov
pop
pop
in
aaa
add
inc
add
adc
inc
push
rclb
leave
push
xchg
cmp
mov
inc
adc
mov
push
fcoml
sarb
sub
sub
adcb
repz
adc
sub
inc
or
enter
mov
adc
stos
and
and
int3
cmp
dec
addr16
or
pop
xor
lret
pop
cltd
or
inc
nop
push
adc
push
stos
enter
xor
lock
or
arpl
cmp
xlat
shrb
mov
pop
decb
xchg
mov
cld
test
repnz
xor
pushf
and
add
or
sbb
push
mov
out
push
loopne
adc
mov
dec
sbb
inc
loope
andb
dec
and
dec
repz
sub
fmuls
subl
les
adc
push
pop
je
jne
cmp
or
or
cld
mov
cmp
inc
push
je
push
or
and
daa
lock
pop
add
mov
jo
and
add
repnz
cwtl
loopne
lar
daa
shr
insb
pop
pusha
xor
push
sbb
xor
dec
nop
mov
dec
add
aad
sbb
test
sbb
jmp
pop
mov
inc
dec
loope
mov
cmpsb
push
pop
push
pushf
and
in
push
jo
or
mov
enter
jmp
or
jnp
vunpckhps
andb
mov
clc
add
pop
and
scas
xor
push
and
aas
fists
xchg
sbb
js
xor
pop
add
sti
out
cmp
pop
mov
add
loopne
sub
add
mov
sbb
pop
xor
pop
pusha
dec
and
loop
lds
sub
add
cld
into
aad
mov
cmpsl
add
and
movsb
jne
mov
insl
lahf
aas
mov
adc
add
sbb
test
scas
push
adc
or
xchg
bound
insb
add
dec
cmp
sbb
jmp
sub
call
outsl
cli
out
push
or
cmp
imulb
xchg
clc
xchg
dec
inc
lods
inc
jecxz
bsr
mov
adc
dec
add
mov
enter
xchg
push
cs
add
loopne
mov
je
pop
ficomps
mov
pop
xchg
jl
cmc
rolb
adc
sub
lret
xorps
ret
std
pusha
mov
jo
add
jecxz
jb
in
jnp
cmp
daa
pop
jo
adc
cmpl
loope
shlb
jne
add
lea
add
cmc
call
or
jg
sub
push
add
or
nop
js
push
in
dec
adc
sub
adc
add
das
aam
movsb
lods
add
fimuls
add
jns
inc
cwtl
mov
rorb
cmpsb
shll
mov
lcall
adc
ljmp
inc
arpl
fiadds
sbb
jb
es
push
pop
add
and
pop
sub
xchg
jo
add
aam
dec
or
lahf
les
aas
push
mov
push
mov
cmp
add
sub
lock
lret
dec
shrb
jo
add
stos
shl
icebp
cmpb
mov
sarb
in
push
add
push
push
data16
sti
pushl
loopne
ljmp
sub
cld
add
mov
cmp
adc
add
repnz
jne
push
dec
adc
cld
repz
aas
add
mov
scas
add
loope
hlt
sbb
add
pop
sbb
sub
fwait
add
xchg
jl
add
mov
sbb
mov
add
sar
sbb
jl
mov
mov
hlt
inc
cmp
pop
gs
dec
jne
outsl
and
sti
insb
dec
fnstsw
rol
add
imul
cwtl
orb
xor
js
or
mov
and
or
xchg
insb
mov
test
lahf
pop
nop
add
add
fbstp
jnp
jecxz
lret
sub
clc
mov
in
mov
add
les
imul
push
cmp
sub
pop
in
cld
add
mov
je
scas
pop
mov
adc
scas
dec
add
pop
push
into
add
sub
int
mov
movsl
pop
xchg
in
lahf
add
mov
mov
cli
outsb
stc
push
adc
mov
or
add
movsl
or
or
sbb
pop
faddl
push
lret
xchg
or
pop
and
jl
pop
push
inc
jg
call
movl
sbb
out
add
inc
cmpsb
push
mov
and
and
cld
push
push
pop
addb
and
lock
cmp
add
dec
add
jl
add
gs
adc
mov
jmp
cmpsl
jns
or
daa
bound
add
or
mov
adc
hlt
scas
add
addl
add
push
jne
decl
jmp
mov
stos
push
loopne
cmc
xchg
xor
add
pop
rorl
call
lock
add
insl
fdivrs
jecxz
sbbl
dec
push
xchg
and
and
sbb
js
sbb
dec
dec
xlat
rclb
mov
neg
js
call
push
sbb
add
data16
add
es
dec
jne
flds
inc
push
test
add
pop
sub
icebp
push
das
cli
mov
dec
sbb
fstl
fdivrl
inc
sbb
mov
jge
in
adc
adc
loop
lea
js
add
lcall
jbe
cmpxchg
cmc
or
inc
movsl
dec
xor
jl
add
push
and
rcll
xor
sbb
adc
js
add
imul
sub
mov
jl
add
addb
lret
dec
test
lea
add
cmp
jge
repnz
pop
stos
sbb
or
sbb
pop
push
xchg
add
test
or
jnp
push
incl
sub
out
push
xor
cmp
rolb
or
push
sbb
adc
push
mov
dec
or
bound
rol
js
je
jle
es
inc
lahf
fs
sub
dec
insb
lock
mov
or
jecxz
testl
sbb
mov
pop
call
push
and
sbbb
bound
sub
push
es
mov
xchg
add
sbb
jns
jge
xor
sub
add
cmp
pop
or
jo
shlb
and
nop
mov
rolb
cmp
incb
sbb
pop
xchg
inc
jb
out
and
divps
add
aad
mov
and
lret
push
add
dec
sbb
pusha
sub
xchg
jnp
add
mov
mov
xor
shlb
mov
lods
repz
sbb
add
sbbb
cmp
pop
jb
add
movsl
mov
mov
data16
clc
inc
mov
jo
add
incl
jle
adc
cmp
push
ficoml
add
push
inc
mov
fisttps
cmp
mov
call
sub
btc
dec
mov
push
inc
andb
ljmp
inc
mov
add
mov
push
mov
jne
pop
add
adc
cmp
cmc
adcb
push
push
mov
mov
mov
gs
add
mov
cmp
lcall
add
loope
dec
sub
testb
pop
add
xchg
add
sbb
add
es
add
dec
push
add
pop
out
pop
out
enter
xchg
stos
mov
mulb
add
or
test
push
loopne
test
or
and
or
add
sbb
or
cmp
lea
mov
xchg
pusha
rclb
fmull
jo
aam
add
add
cmp
sbb
pop
mov
test
xorb
mov
mov
sbb
add
xor
scas
pop
push
add
jno
divb
lret
inc
add
sbb
ja
push
and
add
insb
mov
test
jmp
lock
or
push
or
and
aas
lods
sbb
push
ret
xor
loopne
adc
and
mov
sbb
push
fidivl
cwtl
loope
push
sub
pop
inc
pop
jl
push
push
icebp
mov
out
rcrl
jmp
xchg
into
ljmp
lock
inc
adc
hlt
pop
test
imul
cld
mov
push
int
mov
mov
adc
xchg
add
sub
xchg
adc
and
test
add
pop
cltd
test
and
lds
int3
push
arpl
pushf
mov
cmp
clc
jb
inc
cmp
jbe
dec
push
pop
sub
push
inc
push
pusha
push
shr
test
add
les
mov
dec
add
push
cmp
je
mov
xor
jno
movsl
add
stos
pop
adc
test
scas
test
jmp
xor
inc
or
rolb
pop
pushf
fisubrl
jbe
push
pop
jmp
aad
mov
or
jne
adc
mov
call
sub
pop
mov
inc
clc
test
in
jmp
repnz
jns
loope
and
pop
leave
cmc
mov
adc
xchg
push
fisubrl
lahf
std
insl
sbbb
inc
push
add
cmp
pushf
jo
xchg
add
jmp
mov
cmp
cli
add
popf
enter
fidivrs
add
add
adc
add
pop
ret
dec
or
incl
inc
jge
lock
fcomps
push
adc
mov
dec
sub
ret
mov
es
xor
adc
sbb
add
rorb
rorl
out
mov
push
add
loopne
sub
push
les
sbbb
cmp
sbb
adc
inc
add
mov
ret
xchg
add
mov
push
add
test
dec
inc
mov
ds
enter
and
inc
test
js
sbb
aad
cmovp
popa
fidivrs
gs
and
add
cli
xor
pusha
scas
mov
rep
mov
sarl
add
inc
jb
cmp
stc
mov
inc
cmp
clc
push
ror
sbb
cld
cmp
out
sub
xor
mov
out
popf
sbb
inc
fisttpl
icebp
add
add
inc
adc
fiaddl
pop
or
cmp
or
add
imul
fnstcw
push
int3
incb
iret
dec
cmpb
jne
add
cmpsb
out
je
pop
cwtl
in
add
push
xor
and
add
inc
in
aas
loopne
fmull
add
sti
dec
sub
add
or
scas
jne
or
mov
fs
in
inc
xlat
repz
add
xchg
js
and
inc
jns
cwtl
fstpt
mov
call
cmp
pop
jne
xchg
aam
inc
or
mov
ret
rclb
add
pop
adc
xchg
push
pop
mov
sub
add
sete
inc
insb
mov
push
push
je
pusha
shll
add
jecxz
jo
loopne
push
pop
les
rclb
inc
pop
pop
fnstsw
or
sbb
test
add
inc
pop
add
adcb
mov
jle
xchg
loopne
mov
mov
gs
push
and
loopne
sbb
xchg
jo
add
cmp
call
push
jae
fbstp
mov
or
mov
out
pusha
add
xchg
xor
xor
sar
add
shr
lock
mov
jnp
test
add
pop
add
pop
aam
clc
xchg
add
fcoml
xor
xor
xorps
add
inc
cmp
addr16
ljmp
mov
adc
dec
jg
cmpsl
inc
pop
sub
loopne
add
sbb
xchg
cmp
aas
add
adc
adc
pop
add
or
loop
add
dec
add
fmul
cltd
inc
imul
or
mov
add
fs
outsb
jbe
and
push
leave
mov
add
dec
into
cltd
cmp
adc
jmp
insb
pusha
and
add
cmp
fmuls
cmpsb
std
or
divb
adc
pop
test
pop
ljmp
enter
add
sbb
daa
pop
add
add
add
mov
lods
rcrb
add
stc
repnz
jns
jge
mov
enter
add
pop
or
insb
mov
dec
das
add
jg
xor
mov
loop
je
aad
cwtl
scas
push
mov
insb
or
add
cmp
ds
xchg
in
inc
add
addr16
jmp
inc
or
call
dec
adc
push
jg
add
pop
ret
int3
xor
cmp
pop
or
sub
cmp
or
add
inc
lcall
out
repnz
push
sbb
jne
add
clc
aad
stos
outsl
xor
cmp
and
dec
mov
mov
add
dec
cmp
or
sub
and
pop
in
enter
add
add
cmp
push
push
aam
pop
loop
adc
addr16
enter
add
add
adc
add
cmpsl
stos
and
pop
cmpsb
shrb
ret
sti
add
add
gs
addr16
sub
mov
add
jae
pop
je
cmpsl
push
addl
add
std
mov
mov
sahf
pop
mov
test
jle
cmpsb
sub
add
push
pop
ret
inc
dec
loope
add
or
xchg
xchg
cmp
pop
xor
hlt
sbb
pop
mov
repz
cltd
dec
sub
pop
out
lods
mov
sub
daa
lret
pop
in
call
test
jne
sub
or
jae
inc
adc
xchg
jge
insb
jg
lahf
push
adcl
push
jl
mov
push
push
lcall
adc
or
xorb
add
push
data16
mulb
or
shlb
pop
jne
dec
inc
out
adc
or
jo
inc
xorb
ret
inc
in
scas
loopne
add
or
and
incb
add
push
imul
sbb
add
fwait
lock
mov
adc
rcrb
addb
loop
add
add
adc
maxps
mov
push
stos
movsb
lret
les
add
fdivrs
add
or
lcall
inc
pop
pop
mov
jb
xchg
xor
mov
adc
add
mov
push
cli
sub
or
subl
bound
or
pop
movsb
shl
mov
push
stos
adc
fsubs
or
lock
jno
je
clc
lds
cld
loopne
xchg
push
nop
mov
inc
push
pop
cwtl
xchg
or
dec
add
adc
fstps
pop
or
add
add
push
lahf
lods
mov
sub
int
sbb
xor
cmpl
push
push
adc
call
jge
stos
fisubl
mov
cmovb
add
xor
jecxz
and
lea
push
clc
out
add
jbe
dec
add
mov
push
xchg
and
push
push
ud1
bound
sbbl
jb
or
int
pop
adc
xor
or
or
ss
sbb
add
xchg
addb
xchg
subb
sbb
popf
lock
add
xchg
popa
movsl
lcall
cltd
jo
mov
and
mov
add
movsb
add
jmp
or
ret
pop
inc
add
mov
repnz
adc
pop
jo
or
cs
and
push
int
out
fimull
test
adc
add
xor
shl
stos
mov
add
int
adc
push
sub
or
mov
cld
test
add
xor
or
inc
arpl
stos
mov
rorb
enter
inc
xor
clc
loope
jae
rcr
adc
call
push
pusha
push
mov
mov
add
jecxz
adcb
add
add
lretw
and
jp
mov
lods
je
bound
fs
enter
loopne
cld
add
imul
es
mov
mov
sub
pop
dec
add
mov
mov
mov
mov
mov
mov
movsl
push
rol
push
add
mov
shrb
add
add
adc
and
add
pop
stos
xchg
mov
add
rolb
push
lds
mov
aad
and
add
xor
mov
add
les
jne
push
jae
add
add
mov
push
pop
test
loope
mov
mov
fimull
add
outsb
push
pop
push
push
push
mov
add
std
adc
xor
test
clc
cmp
pop
inc
insl
push
inc
js
add
sub
jo
sub
jns
or
fadds
aaa
or
and
add
cmpsb
or
push
fsts
std
and
dec
test
xchg
orb
push
mov
lods
dec
dec
pushf
mov
inc
pop
cmpsb
and
mov
mov
sbb
nop
inc
adcl
mov
fwait
xlat
repnz
jl
push
out
push
andb
mov
pop
xchg
clc
ret
add
sub
imul
je
adc
cmpsl
clc
andps
or
outsb
xor
pop
push
hlt
and
mov
add
mov
push
pop
xor
addr16
repz
mov
jo
stos
sub
add
test
inc
add
lods
push
cltd
mov
adc
test
repnz
cltd
cs
orb
add
pop
sete
cmp
pop
mov
add
stos
mov
adc
push
mov
subl
ljmp
jge
sub
ret
add
dec
adc
lahf
mov
fbld
js
pop
adc
add
dec
pop
int3
add
push
ret
mov
add
gs
sub
aad
inc
mov
mov
movsb
add
push
and
aam
imul
push
stos
push
cmp
or
cmp
ds
push
or
mov
mull
mov
add
inc
or
dec
add
lds
jno
jb
call
les
repz
push
inc
addps
and
lahf
jp
stos
add
out
and
push
add
xchg
repz
add
mov
jmp
push
bound
xorb
xor
dec
or
nop
fs
add
pop
xchg
test
and
call
pop
xchg
js
mov
add
inc
mov
fdivr
fisttps
fwait
sub
outsb
add
push
xchg
test
in
add
adc
rclb
testb
add
jl
stos
or
add
call
add
push
sbb
jns
inc
or
push
lds
lea
movl
popa
xor
jp
nop
xlat
pop
inc
inc
push
xor
push
out
mov
sub
cmp
popa
ljmp
pop
ret
jmp
add
loopne
in
dec
cld
insb
dec
cs
out
jbe,pn
sbb
pop
inc
jae
call
movntps
test
les
add
mov
add
inc
jle
mov
inc
sbb
mov
mov
push
stc
jg
add
jnp
sub
ljmp
pop
and
jno
pop
lret
clc
xor
rcrb
add
cmp
cmp
and
and
aas
sub
outsl
jbe
and
xchg
push
fisttpl
add
pop
and
pop
sti
sub
bound
add
hlt
scas
xchg
ja
cli
xchg
les
lock
cld
fidivl
insl
add
leave
xchg
cmpsb
or
bnd
pop
xchg
add
outsl
lods
mov
jg
dec
test
test
add
sbb
in
or
aam
adc
jo
inc
xorb
aaa
addr16
add
in
ss
and
sub
jo
dec
shlb
and
cmp
sbb
push
add
in
movsb
pop
mov
and
xor
pusha
test
push
adc
push
hlt
cmpsb
pop
test
push
mov
and
popf
cltd
pop
pop
add
test
sub
and
pop
mov
cmp
push
add
or
mov
stos
out
ljmp
push
mov
andb
movsb
push
aas
sub
mov
flds
sbb
push
mov
in
or
sub
and
adc
leave
mov
imul
adc
xor
fisubrl
xchg
pop
scas
dec
mov
test
and
imul
lods
lds
xchg
jle
add
push
and
push
add
movsb
mov
inc
call
loope
add
sbb
push
lods
hlt
bound
add
xchg
pop
enter
std
jle
repnz
inc
mov
mov
clc
and
cwtl
faddl
mov
pop
sub
sarb
icebp
xor
jno
rorl
add
inc
or
push
add
leave
adc
jno
add
clc
repz
mov
mov
loop
add
jl
pop
adc
scas
addb
cmpsl
bound
adc
leave
push
int3
loope
js
jnp
or
clc
cli
shlb
int3
add
subl
js
mov
in
add
cmp
lcall
sbb
test
cmp
xchg
sbb
fsubrs
in
mov
pop
fcomip
cmp
xchg
mov
xchg
pusha
sub
hlt
push
push
cmpsb
cmp
jge
adc
add
jns
test
jnp
add
ja
cmp
adc
scas
cmp
add
push
mov
sub
add
jmp
or
and
mov
mov
xchg
mov
mov
pop
sahf
out
test
imul
aad
xor
hlt
lret
mov
add
or
add
mov
leave
xchg
add
int
push
daa
iret
test
aam
xchg
sub
xchg
xor
fcom
and
mov
pop
pop
mov
jb
shr
in
xor
cmp
push
int
add
test
jns
imul
jp
out
inc
pop
mov
add
mov
insl
pop
pop
add
adc
mov
xchg
mov
mov
inc
ja
mov
dec
add
xchg
xchg
js,pt
sbb
add
and
rolb
ficompl
pop
add
adc
jnp
pop
add
js
orl
mov
add
inc
fldln2
mov
push
vmwrite
jae
inc
fstpt
pop
sar
sub
andb
xorl
sbb
test
jp
dec
loopne
add
or
mov
and
cltd
sldt
inc
mov
clc
notl
xchg
or
jle
push
xor
mov
adc
sbb
out
add
mov
rclb
or
mov
jb
aam
inc
push
pop
and
push
std
mov
jo
push
mov
and
bound
popf
adc
enter
popf
sarb
add
cmp
and
test
cmp
cmp
lods
pop
mov
test
ljmp
jns
popf
ror
add
pop
add
test
fs
xor
scas
adc
mov
repz
pop
or
xor
ret
orb
push
sbb
jae
cmc
movsb
loope
add
jns
add
lret
sti
push
out
jbe
add
mov
mov
or
inc
lock
cmp
inc
mov
in
push
add
push
and
or
adc
pusha
mov
inc
add
ja
push
jo
icebp
rcrb
add
push
arpl
popa
inc
cmp
jge
xchg
outsb
imul
inc
dec
push
add
jl
pusha
jbe
add
popf
dec
fdivrl
imul
pop
imul
inc
push
ja
sbb
jns
add
sbb
cld
bound
out
xchg
or
pop
xor
outsl
add
add
pusha
push
mov
hlt
inc
sti
jmp
movsb
and
xor
add
jp
in
ds
movsb
sbb
aaa
daa
arpl
add
popa
jb
dec
pusha
smsw
jl
data16
push
inc
jp
adc
jno
call
arpl
pushf
jl
jg
sbb
dec
push
jbe
ja
inc
dec
js
jb
shrb
add
inc
outsl
out
bound
push
ja
imul
arpl
jo
in
js
aaa
addr16
mov
jns
inc
je
mov
adc
outsl
xor
mov
icebp
push
pusha
iret
inc
jg
and
push
dec
shlb
movsl
rclb
ret
xor
pusha
dec
iret
in
mov
sub
dec
jecxz
pop
into
adc
add
inc
addr16
jbe
pop
les
sbb
shlb
data16
test
lock
jp
add
outsl
imul
push
jecxz
jno
jne
xor
mov
xor
stos
ja
dec
arpl
mov
cmp
popa
imul
add
insl
jnp
inc
ret
sub
add
je
in
or
add
xlat
int
add
das
push
loopne
add
sarl
orl
pop
cmp
mov
jl
adc
lods
push
xchg
cmp
js
xchg
in
or
xchg
cld
add
mov
pusha
mov
dec
popa
sub
adcb
js
lock
dec
or
add
rcll
and
mov
cwtl
sbb
nop
adcb
xor
test
das
jle
clc
xor
std
shrl
jecxz
fs
stos
insb
push
lea
xor
or
imul
push
nop
popf
jl
jnp
mov
push
out
daa
push
sbbb
cli
pop
xchg
add
push
cmpb
mov
ret
pushl
and
repz
in
scas
imul
loope
jle
pop
stc
pop
mov
and
add
push
les
clc
rolb
mov
mov
bswap
fnstcw
cli
and
loop
aas
mov
pop
hlt
xor
loopne
add
shlb
sbb
pop
push
push
mov
psubb
leave
dec
or
adcl
stc
jle
add
mov
mov
add
xor
and
add
fistl
adc
cmp
adc
pop
ljmp
add
mov
xor
fisubs
in
inc
adc
mov
add
loope
push
push
rolb
and
mov
pusha
inc
pop
mov
iret
sub
rcll
repz
and
pop
jg
push
or
xor
and
data16
out
and
call
mov
sti
adc
sbb
and
sub
sub
enter
inc
xor
cmp
inc
xor
add
dec
or
lcall
mov
aam
imul
je
cmp
sbb
pusha
test
pop
adc
loop
in
xchg
xlat
push
out
movsl
mov
pop
pusha
ljmp
and
push
jo
inc
je
add
xchg
jl
mov
mov
jecxz,pt
push
cld
mov
out
lods
xchg
inc
mov
pop
xchg
mov
out
out
clc
add
or
int
fstl
jecxz
xchg
imul
into
cli
inc
call
sub
movsb
mov
or
leave
fsubrp
add
mov
and
adcb
add
xor
jmp
jne
add
pusha
insl
cli
stc
call
enter
stos
mov
mov
jnp
pusha
pop
in
cs
pop
add
les
int3
pop
call
fcoms
loopne
mov
mov
stos
and
rol
jp
nop
lock
call
mov
sar
or
mov
push
lods
call
sub
test
cmp
adc
adc
inc
sbb
add
loop
aas
cmp
aam
cmp
xor
pop
xor
and
icebp
cmp
sbb
lds
add
sbb
and
roll
add
mov
sbb
das
pop
rcrb
test
add
add
daa
xchg
add
jge
add
mov
pop
popa
add
xor
xlat
adc
inc
gs
scas
lret
ljmp
dec
or
aaa
or
adc
inc
mov
popa
sbb
add
xor
lea
sub
xor
lock
lahf
or
add
out
jg
add
lds
scas
cmp
add
ja
sub
sbb
cmpsb
decl
add
ljmp
add
adc
jne
pop
roll
add
push
clc
xchg
cli
aas
stos
stos
add
sbb
add
scas
cmp
mov
sar
sbb
lret
mov
push
nop
and
gs
in
aas
mov
pop
push
adc
in
push
cmp
jne
pop
add
jae
jmp
add
push
pop
iret
cmp
cmpsb
mov
add
adc
test
lcall
int3
add
push
cmp
jle
movsb
cmp
sub
aam
jl
lods
lret
jmp
sub
lea
stos
outsl
addr16
fsubrs
insl
pop
push
or
fcmovnb
and
pop
popf
lret
mov
test
add
jbe
cmpb
aam
jb
xor
push
aaa
add
movl
add
or
or
dec
sbb
or
shlb
std
cmp
ret
andb
lock
pop
roll
xchg
cmpb
pusha
pop
test
mov
cmp
pushf
adc
jbe
add
insl
inc
das
sub
add
cmp
sbb
and
rol
add
or
mov
mov
ret
gs
push
je
push
push
outsb
fs
js
outsl
jne
or
data16
jb
std
or
test
enter
jbe
push
lret
sar
mov
loopne
mov
insl
cwtl
int
jge
add
dec
sti
test
aas
dec
add
or
addb
shl
insb
xor
cmp
call
add
out
je
jg
loope
add
sub
push
mov
ffree
add
xor
es
outsb
inc
dec
loopne
pop
sub
ret
fcoml
enter
inc
add
call
inc
or
les
inc
nop
mov
push
out
jmp
mov
leave
je
movsb
add
icebp
mov
clc
addl
push
lret
mov
testb
add
pusha
bound
jmp
ret
add
subl
popa
in
mov
push
loopne
dec
clc
int3
jno
mov
or
stos
aam
les
rcrb
loop
mov
cmp
push
cmp
lods
pushl
or
pop
xchg
movsl
add
mov
and
scas
jg
movsl
pop
add
dec
push
sbb
push
jo
flds
add
mov
loop
into
pop
cmp
and
jns
push
dec
adc
imul
add
lret
jae
nop
lods
sbb
in
jge
fldl
les
cmpl
mov
shr
cmpb
es
xlat
pop
sbb
add
xor
sub
fdiv
mov
cmp
lea
push
call
xchg
js
add
cmp
in
inc
mov
add
jmp
cmpb
je
inc
mov
shl
mov
xor
and
sahf
xchg
clc
jns
cld
or
pop
cltd
inc
lds
ror
inc
push
pop
pusha
shll
arpl
cmp
das
cli
aaa
sub
pushf
and
rorl
stc
gs
sarb
rcll
add
orl
shr
pushl
dec
push
fs
stc
and
add
pop
pop
call
mov
and
add
mov
rsm
or
adc
xchg
add
shlb
sahf
mov
test
sbb
out
xor
inc
xchg
push
iret
and
add
in
addr16
adc
add
sbb
nop
stos
sbb
mov
popf
cmc
in
or
je
add
ja
fstps
nop
test
mov
movsb
add
or
das
sub
sub
push
sbb
gs
pop
jmp
or
and
dec
sub
add
lds
aaa
outsb
orb
in
inc
inc
jle
adc
test
xlat
or
add
add
inc
jmp
add
pop
cli
std
push
inc
clc
jo
add
cmp
xchg
test
jae,pn
mov
and
in
and
lods
jbe
nop
imull
or
mov
sbb
add
or
dec
add
mov
mov
inc
pushl
pop
divb
inc
mov
std
add
jp
cmp
jnp
xor
cmpb
pop
es
cmpsb
out
jge
pop
jne
xchg
jle
xor
inc
call
mov
or
and
lea
imul
in
cmp
lock
sbb
je
popa
jnp
mov
add
insl
ljmp
int3
adc
mov
add
xchg
shlb
popf
std
xchg
add
rclb
sbb
cmp
rorb
add
lock
rcrb
shll
ljmp
dec
add
call
jne
add
sti
jae
test
sub
daa
loopne
xorb
pop
iret
sub
cld
shlb
pushf
add
or
insb
pop
cmp
mov
icebp
mulb
dec
roll
cmp
xlat
loope
jb
inc
aas
and
orb
lcall
xor
popa
clc
loopne
sahf
pop
aam
sbb
sbb
add
jbe
dec
add
mov
sub
jmp
cmc
and
ds
jo
mov
aad
sub
mov
outsl
andb
adc
mov
pop
adc
daa
push
sub
test
add
add
sbb
or
lock
fs
cmp
cld
mov
mov
dec
xchg
inc
inc
dec
jle
add
jb
jbe
test
xor
mov
dec
mov
ss
pop
aad
sub
mov
lea
add
or
cld
arpl
cmp
dec
pop
sbb
mov
xor
push
loope
lret
jmp
cmp
pop
xchg
pusha
lcall
dec
sbbb
movsl
ret
imul
and
adc
sbb
push
add
fs
and
and
nop
jle
push
jp
inc
shll
loopne
fisubl
inc
cmp
movsb
adc
loope
dec
repz
fcompl
cs
loop
rorb
add
mov
ja
movsl
scas
nop
outsb
xor
repnz
add
je
jle
popa
clc
fs
add
jmp
addb
jge
pop
ret
xchg
out
mov
dec
xor
inc
xchg
adc
pop
cmp
add
cmp
or
jne
lock
xor
add
jle
dec
pop
push
lldt
sub
add
jbe
xor
outsl
mov
inc
and
or
int
mov
cltd
adc
clc
jne
and
mov
test
xchg
sbb
out
and
jg
or
jae
mov
addb
add
add
jle
cwtl
data16
ret
dec
dec
popf
fmul
mov
add
or
fs
cltd
mov
add
mov
add
push
mov
pop
or
pop
jp
loopne
add
pop
dec
movb
add
jl
inc
jne
pop
dec
mov
nop
fs
mov
imul
je
and
mov
cli
cltd
inc
xor
test
mov
andl
add
aas
sbb
push
jmp
adc
ja
jo
dec
sub
daa
call
push
add
mov
dec
lods
add
pop
push
cmp
test
scas
xchg
jg
push
add
incb
filds
lods
mov
jo
adc
mov
cld
mov
shl
add
or
add
add
fstpl
das
sbb
jne
les
adc
pop
pop
pop
gs
dec
pop
add
rcrl
pushf
sarb
mov
adc
push
mov
imul
in
push
sub
jp
std
fcoml
pop
pushf
add
ljmp
dec
and
mov
add
out
pusha
jno
shll
adc
loope
pusha
nop
push
push
shll
add
inc
and
sbb
sub
mov
shlb
lea
nop
push
fadds
sub
add
push
xor
add
movsl
rorb
or
cmp
sub
test
aas
mov
xor
sbb
pop
in
out
pop
loop
add
xchg
lods
push
dec
jl
mov
add
dec
ret
or
add
push
out
dec
cmp
add
imul
cmovb
out
sub
sbb
fistl
imul
add
push
jecxz
add
mov
movlps
jmp
push
repnz
sarb
cmp
shr
loop
pop
sub
or
loopne
pusha
sub
cmp
and
lock
push
or
enter
cmp
cmpsb
test
incl
jmp
sbb
add
popf
enter
mov
add
in
add
cmp
std
jae
mov
fsubr
imul
out
jb
test
sbb
inc
out
sub
mov
ret
ds
add
sub
xlat
jle
pop
jbe
pop
dec
int3
shlb
pop
adc
in
add
repz
je
sbb
mov
icebp
sti
pop
arpl
pop
add
push
mov
or
push
add
push
dec
in
jmp
lock
pop
shl
jle
icebp
jne
sbb
pop
fs
sbbb
mov
shrb
por
add
mov
push
mov
call
cmp
sub
xchg
add
xor
jg
inc
push
addl
add
adc
mov
add
jmp
adc
pop
push
mov
cld
sbb
sti
pop
and
xchg
std
xchg
nop
or
loopne
ret
jae
xchg
arpl
cmp
mov
ret
jno
ret
add
sub
xchg
pop
sub
gs
and
adcl
ret
fadd
shrl
lock
push
pop
inc
add
xor
lahf
adc
inc
fldl
mov
fmuls
imul
mov
cmp
inc
mov
push
xchg
mov
or
push
and
add
mov
scas
inc
mov
test
cltd
int
adc
mov
out
mov
jmp
es
dec
sti
add
movsb
rorb
leave
add
or
xor
testl
out
push
fbstp
divb
sub
sbb
jge
sbb
nop
lods
scas
int
push
add
ljmp
adc
sub
mov
add
sub
pop
stos
sbb
shrb
mov
loopne
fsubs
nop
xchg
dec
xor
add
clc
call
pop
add
cmpb
adc
cmp
jmp
in
xor
and
and
xchg
sub
sahf
lds
out
or
xchg
sbb
and
movsb
lock
add
repz
sarl
add
jl
movsl
xor
sub
hlt
xchg
add
in
pop
jle
hlt
adc
push
pop
pusha
call
add
leave
sub
lds
adc
adc
add
xor
stos
or
inc
jnp
or
push
xchg
negb
cmp
push
jae
mov
push
loopne
daa
test
hlt
movl
and
loop
add
lcall
fsubs
repnz
add
jno
mov
lahf
jle
nop
mov
loop
add
dec
jbe
add
add
mov
push
hlt
xchg
ret
or
xchg
jno
sub
clc
in
add
daa
mov
mov
xor
lods
repnz
sarb
mov
dec
xor
int
and
cmp
xchg
push
cvtpi2ps
andb
add
leave
inc
inc
sub
roll
adc
push
test
popf
mov
out
mov
or
inc
cmp
movsl
push
lahf
add
xor
daa
test
in
rolb
mov
push
xor
inc
add
xchg
inc
outsb
sub
add
movsl
or
sub
mov
mov
or
jge
cmpb
lea
ret
scas
ja
dec
stos
movsb
mov
mov
lock
or
adc
movl
loopne
adc
xchg
movsb
je
xorb
ljmp
add
adc
shlb
add
fldenv
aam
addr16
stos
mov
call
lods
add
dec
mov
inc
pop
pop
sbb
dec
push
in
add
or
xorl
cmpsb
adc
cli
sbb
fsubrl
xchg
ficoms
dec
add
shll
sbb
mov
add
dec
test
add
cmp
hlt
and
xor
jl
and
imul
iret
into
es
in
add
mov
xor
mov
test
dec
addb
in
ror
cmp
mov
ds
jne
popf
popa
and
push
cld
and
mov
mov
mov
adc
push
sbbl
jno
mov
js
push
adc
rcrl
add
bound
sub
ljmp
cmp
aad
out
popf
je,pn
add
cld
mov
jae
iret
push
bound
jp
gs
adc
cmp
popa
cmp
cs
mov
jns
or
pushf
cwtl
hlt
add
and
push
jne
repz
mov
int3
dec
mov
popa
scas
add
aas
mov
lret
call
xor
add
inc
mov
popf
adc
add
adc
xor
push
movsb
add
push
dec
int3
add
icebp
inc
xchg
shr
sahf
pusha
pop
test
mov
bswap
loopne
data16
adc
pop
pop
or
loop
ja
clc
push
cmp
dec
je
rorb
mov
add
cmp
xor
rorb
xchg
pop
daa
out
loopne
mov
add
call
push
or
xor
jmp
add
sub
add
aaa
pusha
add
ffreep
rolb
inc
das
jmp
lret
jb
xor
add
sub
and
jne
add
clc
adc
pop
add
pop
xchg
or
adc
add
in
cmp
shlb
jne
andb
or
jo
test
add
sub
dec
ret
and
shlb
xor
add
cmp
int3
add
hlt
mov
js
sub
or
in
dec
lods
mov
in
hlt
cld
test
inc
incl
bound
int
nop
jge
cmp
leave
add
adc
and
loopne
lcall
mov
cmp
movsb
addl
clc
and
dec
fldl
push
pmulhuw
insl
mov
and
add
inc
adc
mov
in
stos
xchg
loope
jge
jmp
jecxz
add
loopne
mov
add
sbb
out
testl
cmc
lock
pop
and
jge
add
push
mov
jmp
add
or
sbb
inc
jp
adc
xor
enter
pusha
shll
add
cltd
outsl
sub
int
mov
fcom
cwtl
shll
dec
lods
lock
daa
add
jmp
jbe
add
ret
call
add
adc
pop
aam
inc
pop
xchg
subb
pop
add
stos
sub
mov
call
ds
add
push
outsb
outsl
xor
or
jle
fwait
lds
xor
rcrb
in
mov
push
add
xor
loopne
sub
cmp
or
sbb
fistpll
daa
pop
push
xchg
add
push
adc
inc
shrb
fsubrp
dec
ljmp
or
call
add
jecxz
pop
aaa
mov
xchg
enter
dec
stos
leave
add
jnp
lret
pop
xchg
add
out
andb
mov
cs
scas
cmc
or
cmp
add
mov
sub
sbb
sub
psllq
add
hlt
lret
add
rcll
sub
push
xchg
dec
jnp
jl
jmp
xchg
sbb
adc
call
mov
mov
out
jg
add
mov
or
xorb
push
inc
inc
push
push
mov
pusha
and
add
cmp
fstpl
adc
adc
mov
adc
loopne
inc
mov
cwtl
xor
popa
jae
xor
xor
push
dec
add
je
and
add
push
jb
std
hlt
js
out
fs
decb
popa
mov
aaa
jp
push
adcb
mov
add
sbb
jg
in
movsb
adc
push
add
inc
adc
leave
add
xor
movsl
addb
addb
in
adc
insb
dec
push
lret
pop
add
negl
push
cmpsb
xchg
jg
dec
sbb
lahf
mov
fsts
adc
mov
add
bsr
mov
stos
out
add
int
sbb
add
mov
fwait
rolb
sbb
scas
mov
xchg
push
add
outsb
in
cmc
mov
or
xchg
mov
xor
out
lret
fnsave
jnp
add
movsb
dec
and
xor
subb
pushf
dec
xorb
enter
add
jno
push
add
push
lahf
adc
xor
push
cs
out
add
jnp
pop
push
sbb
and
mov
lea
cmp
add
xor
gs
add
ret
push
sub
popa
add
dec
sbbl
movsb
enter
sbb
mov
xor
fwait
xchg
sbb
les
leave
jo
add
adc
mov
inc
js
out
lods
test
pop
dec
cwtl
add
fisubs
addr16
loope
aaa
or
adc
push
lret
sbb
bound
pop
cmp
dec
repz
add
cli
or
mov
jne
out
idivl
popa
add
pop
scas
cld
sub
add
xlat
jbe
push
mov
add
push
mov
test
pop
jbe
add
push
add
pop
daa
cli
les
sbb
fcoml
add
mov
inc
add
fnstcw
dec
add
jge
pop
add
jmp
repnz
rorl
cmpl
je
int3
jmp
fdiv
pop
cmpxchg
inc
mov
leave
rolb
lea
mov
mov
dec
push
pusha
idivb
or
jge
je
jg
and
add
sbb
xor
aad
insb
sub
cli
add
hlt
mov
cmp
inc
push
push
fiadds
xor
mov
jge,pt
mov
mov
inc
xchg
loope
inc
add
mov
push
pop
adc
sub
mov
add
stc
or
add
jbe
movb
sub
mov
pusha
shll
add
cmpl
jbe
mov
sub
sub
enter
add
sarb
repz
mov
repnz
add
ret
push
cwtl
dec
mov
bound
add
cwtl
xor
mov
pop
dec
or
lret
xchg
or
push
and
icebp
outsl
push
push
mov
rcr
mov
cwtl
add
inc
push
jne
into
imul
add
sub
andl
dec
add
push
stc
or
call
cmpsb
sbb
and
xchg
movsl
add
lds
cmpsb
add
jecxz
imul
add
scas
sbb
add
sub
stos
cltd
nop
inc
in
jae
insb
cmp
mov
xchg
push
loope
add
sbb
inc
add
xchg
sub
push
jne
jbe
add
push
bound
aam
cmp
repnz
mov
das
addl
jae
dec
adc
ret
mov
jmp
loop
cmpsl
ud1
xor
pop
or
cmp
adc
pop
aam
push
add
pop
adc
add
shll
and
add
or
jo
inc
nop
incl
shrl
es
dec
fs
add
xchg
cmp
mov
add
add
mov
aam
dec
inc
sub
das
cmp
mov
inc
add
das
and
jb
or
and
xchg
mov
cmpps
adc
adc
in
jb
inc
sbb
cmp
cmc
js
add
inc
fsub
jp
in
mov
xchg
fdivrl
and
add
lret
adc
sub
pop
ret
xchg
cwtl
mov
adc
mov
sti
jne
les
dec
out
lds
mov
jp
fldt
incl
jl
xchg
hlt
rolb
and
fwait
in
aas
push
lea
sub
js
add
cli
cmpsb
mov
jno
clc
pop
jg
mov
into
sbb
shl
iret
or
add
or
std
sub
sub
subb
xchg
loop
inc
push
xor
add
push
add
je
mov
cmp
adc
dec
jne
js
sub
add
jg
push
cmpb
dec
out
pop
mov
adc
dec
in
lahf
aam
and
inc
sub
pop
add
mov
mov
and
test
lds
add
lock
jle
add
xor
pop
inc
insb
or
mov
outsl
jg
ret
mov
xchg
xor
add
lea
cli
cmpl
lock
je
dec
pop
mov
xlat
cs
daa
lds
shrl
rcr
and
pushf
sbb
lods
lds
add
cmp
pusha
or
jmp
out
pop
add
sbb
aad
lahf
loope
or
andb
cld
jb
add
enter
push
call
push
outsb
mov
adc
adc
mov
icebp
add
mov
add
jg
push
or
or
or
or
add
sub
add
xchg
mov
mov
aas
js
or
push
cmpsl
xlat
ljmp
clc
lds
or
and
pop
mov
lock
pavgb
mov
push
jg
add
inc
outsb
pop
call
xchg
mov
mov
lods
nop
adc
jge
sbb
and
mov
cltd
add
push
ds
dec
in
inc
jmp
xor
movsl
jb
add
das
and
aas
sbbb
sbb
jmp
add
fwait
enter
pusha
sbb
and
add
adc
pop
in
add
add
loope
in
add
movsb
or
dec
pop
add
sbb
mov
add
jecxz
leave
mov
dec
in
add
call
hlt
add
out
mov
add
xor
add
out
enter
ss
add
inc
mov
dec
cmp
fsubl
lock
loop
call
mov
inc
add
push
fdivl
and
cmp
mov
addl
popf
jecxz
dec
movsl
mov
mov
in
lds
nop
mov
push
mov
push
xchg
mov
xor
lahf
out
xlat
shlb
js
jnp
cmp
inc
add
push
jg
inc
push
add
push
addb
je
pop
aas
add
adcb
cld
rorb
fdivrl
pushf
xor
cwtl
mov
std
pop
mov
add
add
test
jns
push
xor
or
loop
fldl
and
leave
iret
push
call
mov
jo
add
je
jo
xchg
std
add
inc
dec
outsl
pop
add
sub
or
fmuls
out
dec
add
loope
nop
adc
jae
add
addl
in
add
sbb
inc
add
sbb
mov
cli
xor
sub
jmp
in
lea
das
sub
pop
adc
ror
xchg
lock
movl
push
mov
or
lret
add
sbb
adc
test
in
push
nop
mov
add
add
lock
sub
lret
push
sub
call
and
or
xor
or
adc
roll
jmp
das
mov
insl
imul
or
enter
in
add
add
dec
hlt
adc
and
cmc
inc
lock
lcall
addr16
ljmp
out
mov
mov
jp
add
mov
mov
xchg
mov
sahf
les
jp
fxch
add
cmp
adc
loopne
lods
add
je
cwtl
movb
cmp
imul
popa
add
scas
jno
push
mov
sti
aam
sbb
out
dec
xchg
and
lret
les
movsb
push
ret
adc
in
pushf
cld
push
or
push
in
inc
shl
add
fcmovne
aam
ret
in
cld
lock
add
out
repz
adc
pop
fadds
add
jo
mov
arpl
push
imul
aad
dec
cmpsb
add
adc
not
sub
adc
mov
or
xchg
imul
mov
leave
test
xchg
sub
mov
pop
scas
enter
jo
or
cmp
xchg
ror
inc
jge
rolb
mov
pop
mov
test
out
add
ss
mulb
xor
inc
repz
push
add
jne
mov
andb
incb
sbb
imul
ja
cs
mov
and
je
add
ret
cmp
int3
test
inc
iret
stos
xchg
adc
mov
loopne
adc
pop
dec
add
cmp
shlb
push
nop
addr16
mov
jae
xlat
dec
push
jmp
adc
add
adc
int
lods
jp
ljmp
daa
xor
mov
xor
push
gs
repz
pop
shrb
into
sbb
add
adc
mov
cmp
mov
jno
sti
pop
mov
jge
lahf
dec
test
mov
stos
iret
rclb
std
sbb
fstpt
pusha
scas
pop
insl
iret
mov
pop
xchg
test
loop
push
mov
cmc
pop
pop
clc
add
jnp
jnp
add
jg
ret
pause
mov
dec
add
or
fs
cmpsl
ror
add
fsubrl
add
lods
and
cmpsb
in
sub
push
mov
out
push
pop
jmp
add
into
mov
push
jno
sar
les
mov
adc
mov
mov
aam
mov
mov
mov
fwait
clc
adc
add
ljmp
add
mov
add
push
movzbl
loopne
pop
add
and
int
jb
mov
and
in
int3
fs
dec
ljmp
repz
movsb
push
push
mov
adc
adc
ljmp
dec
sbb
push
je
lock
test
sarb
and
cltd
add
or
icebp
dec
add
adc
mov
mov
push
pop
and
push
xchg
adcb
call
dec
mov
sub
jnp
in
xchg
pop
mov
xchg
pop
cmp
or
call
out
adc
or
add
add
outsb
orl
xor
jne
mov
push
cmp
cmp
sub
inc
jbe
add
je
dec
or
or
and
cmp
shll
jecxz
jno
lea
ss
mov
mov
mov
rcll
pop
sub
jl
add
and
jo
inc
add
inc
pop
push
jae
mov
je
or
sbb
xor
addb
and
add
cmp
sub
test
ret
arpl
jae
hlt
push
push
mov
shll
ja
addl
xchg
je
push
xchg
add
sbb
icebp
or
mov
aaa
jmp
call
pop
push
add
mov
rolb
les
loopne
ds
dec
sub
fsubrs
or
out
push
jl
sbb
ret
xor
add
cmp
aam
add
cmpsb
pop
xchg
stos
mov
add
jecxz
loop
add
xchg
icebp
jg
loopne
xchg
mov
adc
loope
out
and
mov
cld
add
leave
testl
dec
push
inc
mov
pop
add
test
insb
fiaddl
sub
push
rol
inc
mov
xor
add
mov
ret
in
bound
push
ja
pop
add
in
out
add
dec
mov
push
jmp
loope
jle
leave
mov
add
lods
cmc
xor
sarb
cwtl
sbb
pop
dec
add
adc
jno,pn
add
adc
xor
add
stos
clc
loope
push
jns
hlt
insl
xchg
jns
ja
add
arpl
push
mov
cmp
in
inc
push
mov
cltd
push
jo
test
add
mov
mov
scas
jnp
add
dec
popa
insl
icebp
jp
push
pop
or
addr16
cmpsl
inc
pop
movsl
mov
mov
lahf
xlat
xchg
lock
nop
lock
in
sbb
ljmp
push
inc
outsb
inc
loop
jno
inc
mov
push
mov
pusha
lods
sarl
adc
sbb
cmp
sub
add
fcom
inc
sbb
add
cvtpi2ps
sub
cli
xchg
movsl
or
sbb
jno
mov
xchg
mov
or
mov
fisubl
shlb
in
lret
pop
jmp
scas
adc
jle
jg
and
fcom
push
and
daa
mov
fists
jl
jg
add
cmpb
inc
sbb
fs
or
call
fmuls
push
out
dec
inc
dec
dec
mov
cmovb
pop
inc
lds
xor
pop
in
add
push
outsl
add
loopne
sub
dec
cmp
xor
xor
add
hlt
add
fcmovu
push
adc
cmp
xchg
scas
mov
mov
push
test
cld
test
fsubrs
add
in
or
sub
pop
les
incb
or
movsb
and
inc
lock
mov
adc
repnz
in
xor
add
fldcw
mov
add
jmp
lock
iret
xchg
cld
or
add
mul
in
inc
add
add
mov
mov
adc
scas
xor
mov
add
enter
adc
dec
add
push
jne
mov
or
pusha
add
fs
add
movsb
adc
sub
add
sbb
cmp
pop
xchg
jae
add
or
shl
add
push
adc
adc
pop
pop
sbb
sbb
sbb
push
pop
push
and
and
add
sub
sub
sub
cs
add
bound
cmp
dec
pop
clc
dec
inc
icebp
sbb
add
subl
jb
cmp
and
jp
cmp
adc
flds
inc
pop
adc
jo
ret
faddl
lock
addb
js
jge
jns
ljmp
fstl
repz
add
xchg
stc
add
pop
jne
inc
sbb
add
jmp
pop
sbb
enter
mov
cmp
lods
scas
scas
cld
hlt
jo
add
mov
int3
cmp
rol
cmp
enter
int3
cmp
into
add
rcl
rcl
aam
add
push
xlat
fcomp
fiaddl
add
lock
and
in
out
jmp
add
sub
icebp
repnz
cmp
testb
std
add
jo
or
add
or
les
xor
pushf
and
popa
jne
fsubl
andl
dec
add
lcall
or
pop
jae
loope
ja
add
jnp
cmp
xor
test
xchg
iret
add
xchg
cmp
xchg
xchg
lcall
sahf
lahf
add
loop
out
movsl
das
cmpsb
cmpsl
lock
jae
add
adc
jge
add
lds
lret
lcall
rcl
lret
add
in
or
lds
add
std
mov
fsubr
xor
icebp
cmp
outsb
add
stc
incl
cwtl
enter
mov
add
or
or
or
sarb
and
add
inc
xorb
rorb
mov
jge
add
cwtl
and
mov
mov
mov
mov
rol
sbb
dec
adc
fstl
rolb
or
aad
xchg
clc
ds
ret
mov
mov
icebp
mov
hlt
in
mov
jecxz
mov
sbb
inc
shlb
add
and
add
imul
inc
add
mov
push
pop
loopne
loopne
add
dec
outsl
adc
loopne
adc
cmp
jg
cmp
test
mov
lds
push
push
rolb
add
inc
out
mov
add
push
xchg
les
and
loop
loopne
filds
cwtl
fildl
in
xor
cmp
aam
add
faddl
xlat
aad
add
adc
test
add
mov
and
in
scas
pop
mov
lds
adc
loope
inc
xchg
mov
push
rcrb
andl
int3
push
cmpb
loopne
xlat
shl
add
jecxz
out
xor
add
pusha
addr16
mov
das
in
add
je
roll
xchg
aam
push
dec
jmp
sub
mov
adc
mov
adc
push
cmp
ss
xchg
jl
leave
and
add
xlat
cmp
add
divl
test
jp
mov
mov
add
or
adc
or
pop
jmp
insb
jecxz
pop
leave
add
sti
or
cmp
fwait
or
ret
push
pop
andl
jl
xor
cmp
and
sub
sub
ss
adcb
or
jle
or
push
dec
in
orb
gs
ret
ja
add
cmp
jbe
sbb
push
cmc
les
or
adc
addr16
fnstenv
nop
push
pcmpeqb
xor
les
push
out
pop
daa
sbb
scas
mov
and
pop
jno
push
add
push
fstl
lret
add
xor
stos
ret
negb
sub
add
mov
stc
push
repz
cmp
dec
mov
shll
out
inc
out
mov
sbb
push
jp
cli
push
ljmp
pmulhw
sar
mov
rolb
mov
cld
jns
inc
mov
push
push
test
add
xor
mov
cmp
or
imul
dec
popw
mov
add
repz
ret
xlat
in
mov
mov
loop
adcb
pop
cmpsl
pop
shlb
movsb
pop
jl
add
out
and
add
adc
jne
ret
add
push
out
cmpsb
mov
notl
clc
cmp
add
mov
lret
mov
faddl
sbb
je
adc
sahf
pusha
dec
cwtl
add
aaa
push
fdivrp
push
jae
add
cld
mov
push
sub
add
jecxz
lock
inc
or
adc
es
aaa
inc
cmp
out
add
adc
testl
mov
push
ja
add
jg
fwait
sbb
add
in
dec
mov
sti
in
add
xor
jl
mov
movsb
xchg
jecxz
les
int
add
out
xor
dec
jno
jo
add
mov
mov
loopne
add
shlb
add
sbb
jle
andb
inc
pop
adc
das
stos
xchg
add
cmp
lret
add
cmpsb
addl
out
add
and
mov
mov
fildll
add
rorb
imulb
stos
and
addr16
add
std
movsl
mov
incb
cmp
inc
jo
inc
or
out
add
inc
adc
hlt
pop
out
push
je
add
sbb
loop
fwait
inc
ret
lea
sbb
and
xchg
adc
add
stos
mov
mov
in
iret
popf
mov
mov
add
icebp
mov
insl
push
or
loope
add
jle
jg
add
cmp
mov
adc
rolb
ror
jno
cmp
jo
add
insl
mov
dec
push
sbb
cmp
cli
jo
ja
mov
push
loope
cld
add
ret
mov
mov
add
leave
jno
sbb
leave
in
add
cmp
in
sub
mov
pop
out
in
sbb
add
xchg
dec
and
ljmp
xchg
ss
mov
sub
mov
xchg
add
lock
mov
cmc
jno
mov
out
outsb
loopne
scas
aas
jle
cmpb
sub
lods
pop
hlt
loopne
ja
add
xchg
cmp
jb
imul
lods
and
aas
or
mov
xchg
pop
pop
inc
dec
loopne
cmp
sti
subb
roll
insl
pop
pop
lds
test
pop
jnp
pop
lahf
nopl
shr
inc
daa
add
rcl
mov
movsb
lret
add
mov
xor
arpl
ja
jo
and
mov
pop
inc
add
add
fildll
dec
nop
divb
lea
xor
or
add
loop
push
or
lcall
mov
cmp
cmp
fistpl
mov
mov
mov
dec
and
std
in
cmp
add
subb
js
jb
adc
mov
jle
add
dec
and
add
jb
add
sub
push
pop
int3
pop
test
add
mov
jp
push
lock
adc
add
pushf
adc
sbb
in
dec
mov
imul
das
xchg
les
push
rep
and
jb
bound
mov
movsb
cli
cld
sbb
add
xchg
insb
cmp
pop
xchg
mov
cmp
mov
add
sub
jne
ds
lds
or
add
sub
add
jl
jle
imul
add
add
mov
inc
and
aas
and
orb
iret
hlt
rorl
repz
sti
mov
mov
inc
or
repz
lret
jb
add
sub
test
pop
and
sbb
mov
pop
mov
sbbb
mov
xchg
jg
pop
add
or
add
data16
mov
cltd
mov
push
or
adc
cmpb
rcrb
dec
inc
addl
xchg
push
or
add
aad
std
jmp
or
shl
movsl
push
test
xchg
sbb
sub
pop
loopne
jns
repnz
or
and
aam
dec
aas
jecxz
add
xchg
dec
cmpsl
push
add
or
leave
adc
add
inc
lock
adc
add
add
add
loop
das
sub
sbb
push
es
mov
mov
or
xchg
mov
jmp
in
push
inc
add
sbb
pop
lea
add
pop
sbb
and
dec
fsubs
flds
test
sub
sbb
inc
adc
sub
enter
jmp
mov
ja
iret
add
pop
stc
repnz
cmp
and
arpl
jecxz
sub
sti
push
call
cmpb
arpl
test
stos
fs
dec
jecxz
inc
xchg
out
subb
mov
push
adc
iret
cmp
xchg
add
pusha
pop
popa
pop
mov
jno
cmp
shll
push
fmull
dec
add
inc
movsl
jne
in
paddusw
and
test
fsubs
or
add
mov
inc
in
ret
add
and
cmpb
imul
mov
mov
sete
sub
pusha
and
imul
pop
out
cmp
sar
xor
roll
fbstp
mov
and
sar
add
and
je
or
dec
shlb
cmpb
jle
add
add
cld
add
fcomi
cli
pop
je
add
pop
dec
mov
cmp
add
divb
adc
mov
or
fiadds
push
mov
or
xchg
lret
push
mov
xchg
jbe
pusha
test
ficoms
je
into
dec
sahf
inc
pop
add
icebp
fmull
add
and
rorb
lock
jne
addb
inc
pushl
inc
aad
repnz
pop
add
pop
scas
mov
bswap
fcoml
add
pop
fsubrl
in
aaa
lcall
and
pop
ljmp
mov
add
inc
gs
sahf
decb
mov
inc
or
add
cmp
jbe
adc
js
add
push
int
or
mov
mov
adc
fadds
jmp
add
and
addr16
pop
adc
adc
push
cmpsb
add
push
ds
roll
sub
outsl
cld
dec
clc
adcb
pop
cli
inc
add
lahf
or
test
imul
mov
mov
lock
shlb
xor
or
loop
jp
std
cs
shlb
cmp
add
lds
add
int
and
clc
popf
cmp
icebp
jno
shlb
shrb
daa
aad
cmpb
jge
insb
or
test
addb
jle
es
cmp
sbb
loopne
add
lock
notl
cmp
add
add
mov
shlb
add
pop
insb
ret
stos
lds
int
bound
roll
orb
add
xor
repnz
mov
lods
mov
mov
sbb
jno
mov
cmpsl
popf
popa
sbbb
std
pusha
mov
jno
add
mov
mov
inc
add
push
ljmp
fadds
mov
repz
mov
jp
sbb
testb
das
orb
adc
loope
sbb
xchg
pop
rcr
ret
add
add
fidivrs
hlt
loopne
nop
addl
sub
out
aaa
fildl
xchg
cmp
notl
adc
mov
mov
aad
add
inc
ret
add
mov
add
rcl
or
fwait
test
sti
cmp
sbb
dec
mov
jecxz
cmp
orb
add
mov
nop
rcrb
int3
sub
imul
add
pop
icebp
mov
jge
add
sbb
movsl
mov
mov
inc
xlat
ja
xchg
cmpb
rorb
popa
subl
push
add
and
das
mov
stc
xchg
xchg
les
or
add
dec
inc
sbb
mov
repz
imul
clc
mov
jbe
push
lea
add
iret
lock
shl
mov
mov
scas
clc
sub
add
or
pop
arpl
sub
inc
lods
or
arpl
stc
mov
mov
scas
enter
adc
adcb
or
cli
repz
xorb
cmp
out
movsb
adc
rorb
add
add
add
pop
out
jmp
mov
xlat
add
adc
or
lock
in
mov
push
imul
add
sbb
fdivp
pop
and
jne
add
mov
pusha
in
cmp
je
inc
repz
cltd
inc
jnp
adc
mov
pop
inc
or
jae
push
cmpsl
add
data16
push
or
call
jne
add
out
scas
adc
cmp
inc
pop
in
and
lret
pop
les
and
rorb
lock
add
movl
jl
cmp
lods
in
movups
loope
popl
sbb
rclb
add
stos
mov
lock
test
js
push
fildl
loopne
outsl
pop
movsl
push
add
sub
enter
jbe
pop
in
movsl
decl
xlat
inc
jne
sbb
push
inc
cli
mov
cwtl
sub
fwait
push
add
or
lods
xor
adc
stos
test
hlt
push
inc
mov
sub
jo
ret
mov
push
mov
jbe
add
sub
test
pop
sarb
mov
testb
je
and
jae
nop
mov
sub
dec
insb
add
mov
rclb
add
enter
adc
mov
mov
pop
inc
adc
aad
mov
push
xorb
jg
movsb
nop
and
add
add
jo
bound
dec
pop
and
jo
add
loop
jmp
fdivrs
mov
cmp
jge
cmp
loopne
dec
movl
inc
pop
dec
add
inc
fs
in
adc
dec
add
clc
inc
fmul
lcall
mov
add
icebp
add
das
stos
aaa
xor
cmpsb
subb
xchg
inc
or
dec
es
push
jg
dec
rcrl
lock
sbb
movsl
jge
pop
sbb
mov
add
sbb
pop
std
mov
mov
mov
add
das
add
mov
loopne
add
cmp
testl
add
out
add
loop
test
xchg
dec
dec
loope
imul
lret
cmpsl
push
push
cmp
mov
mov
data16
xchg
jg
lahf
lea
sub
mov
js
jns
push
lahf
and
rorl
inc
or
js
outsb
lret
sub
adc
push
sbb
mov
outsb
jns
sub
add
mov
insl
add
jno
scas
stc
mov
lret
dec
ret
je
leave
les
sbb
sbb
sbb
add
sub
jnp
add
incl
pop
mov
aam
and
adc
sub
add
mov
les
add
sbb
adc
mov
fbld
nop
add
nop
sbb
mov
xor
in
stos
loope
testl
cmp
cmpb
addl
cmp
imul
scas
popa
aas
jo
add
nop
int3
jae
stc
pop
fnstsw
ja
sbb
xchg
rclb
popf
call
loope
jb
in
pop
cmpsb
lds
jo
scas
mov
aaa
sarb
testl
xchg
ret
ss
or
xchg
jne
pop
pop
shlb
jo
adc
loopne
shufps
pop
fadds
add
push
jle
add
cli
loop
push
sbbl
loopne
or
sub
adcb
lds
add
push
sub
lock
or
sbb
je
adc
inc
cwtl
add
mov
fldt
mov
pop
repz
inc
add
mov
das
insl
jne
cli
lret
rcrb
lds
add
test
nop
daa
adc
inc
arpl
add
enter
js
lea
addl
push
pop
push
lock
pop
adc
mov
scas
add
pop
es
inc
add
sub
lret
out
add
pop
ss
mov
cmpsl
xchg
cmp
adc
sub
leave
pusha
in
push
negb
ss
imul
xlat
popa
movl
das
adc
fisttps
sbb
scas
jnp
sarb
inc
and
add
rcrl
xchg
jbe
jno
cs
sub
int
rolb
sub
test
loopne
cmp
push
cmp
shlb
inc
movsb
add
ja
pushf
sbb
xor
mov
add
add
repz
das
xchg
ret
inc
jge
cmc
loopne
sub
and
add
test
mov
add
and
sbb
pushf
test
and
aad
les
loop
fisttpl
jmp
jmp
pop
andb
int
rolb
dec
and
in
pop
shll
sahf
push
pop
jg
imul
loopne
xor
popf
sar
bnd
sub
add
jb
push
ffreep
fadds
cli
sub
xchg
sub
xchg
jno
es
add
sarb
or
rorb
out
sti
pusha
jo
add
push
mov
add
fsubr
cmpsl
xor
stc
add
rclb
shrb
iret
add
sub
leave
push
add
or
loop,pt
add
add
fwait
jg
push
xor
cmp
xor
js
mov
pop
push
pop
add
filds
sbb
mov
mov
pop
pushf
add
jmp
and
das
add
cmp
lea
pop
loop
loopne
jnp
icebp
test
xadd
lea
push
call
xor
pushf
in
movb
or
mov
sub
and
pop
sbb
jb
or
mov
test
insb
lods
in
push
pcmpeqw
pop
jp
add
dec
enter
or
subb
cmpsl
mov
mov
mov
add
fistpl
add
inc
scas
and
sbb
xchg
inc
stc
sbbb
sub
pop
inc
add
gs
or
push
je
std
loope
stc
jne
cmp
icebp
mov
sbb
add
add
push
add
addr16
cmp
addb
lods
adc
in
daa
add
jno
adc
cmpsl
mov
sahf
xchg
fisttpll
hlt
out
mov
add
cli
jmp
add
aad
and
stc
paddb
jmp
sbbl
mov
out
movb
mov
loopne
xor
cmp
pop
sub
cmp
xlat
add
push
xor
popa
pop
shl
ret
inc
sbb
sub
nop
pmullw
fsubrl
rcrb
inc
addb
rcrl
ds
aad
jae
add
inc
nop
mov
setg
dec
push
push
icebp
add
or
ficompl
lea
xchg
push
pop
cli
add
lock
test
test
sti
adc
js
cmp
data16
andb
or
pop
xor
xor
xchg
push
push
sahf
sub
daa
mov
sbb
jne
cmpsb
mov
outsl
adc
enter
mov
add
sub
add
jne
mov
jo
lahf
fstps
and
out
rorb
loope
stos
mov
add
dec
pushf
cmp
add
cmp
popf
add
sbb
push
inc
test
mov
in
cs
dec
add
jmp
mov
lods
cmp
mov
add
or
xchg
or
je
push
pop
ljmp
or
add
das
inc
ret
add
cmpb
cmp
push
in
fwait
add
push
iret
in
xor
add
jmp
inc
popf
sub
dec
mov
pop
xor
mov
xor
inc
adc
dec
mov
sar
nop
gs
pop
push
and
sbb
stos
loopne
ror
test
imul
and
push
dec
jns
add
js
xor
and
add
sti
idiv
pop
add
mov
in
xor
cmp
dec
popa
dec
jle
les
sbbb
incl
test
ljmp
out
xchg
mov
push
push
lahf
pusha
mov
iret
or
mov
verr
mov
mov
das
xor
mov
sbb
fldl
repz
mov
out
push
ljmp
jle
dec
add
leave
fmull
jne
adc
ss
jmp
popa
xchg
inc
and
movsb
xchg
add
cmp
jnp
add
mov
mov
sbb
fucomi
movl
dec
lock
mov
test
jo
add
cmpl
jns
loopne
add
aam
sbb
add
daa
ds
add
aas
dec
jnp
add
xlat
push
lret
pusha
call
psrlw
iret
xchg
loopne
hlt
ss
pop
mov
dec
out
add
inc
mov
jnp
loopne
aas
lret
mov
ja
jg
add
xlat
xchg
outsb
push
or
mov
movsb
clc
sbb
adc
mov
or
loop
fldenv
loopne
ljmp
cs
jmp
cmp
shll
fcompl
ja
lea
lods
cwtl
es
mov
loopne
jb
rorb
ficompl
add
add
push
and
jle
add
sbb
add
xor
jo
add
fcmovb
inc
mov
lods
jb
rolb
sub
sub
les
cld
fldenv
jecxz
sub
pop
iret
fs
cmp
test
inc
negl
add
popf
xchg
add
push
jb
pop
inc
sub
push
cmc
sub
add
sarb
sbb
fbstp
xchg
in
jge
pop
mov
push
push
dec
add
shl
add
push
pop
sbb
jmp
and
xor
mov
add
mov
add
push
add
sub
aas
add
sbb
jmp
add
pop
cmp
add
lret
mov
fimuls
mov
cmp
add
sub
push
cmp
scas
add
lret
inc
out
arpl
add
jl
dec
add
loope
orb
sbb
xchg
popl
js
cs
adc
pusha
idivl
push
mov
in
pop
imul
lds
and
out
add
stos
pop
sbb
leave
pushf
sub
shrb
fisubl
sub
dec
jo,pt
addl
les
pop
add
or
clc
nop
add
sbb
loop
sub
ret
jle
ja
jne
cmp
jne
push
push
or
shlb
and
mov
adc
lret
mov
mov
xchg
cmc
xlat
push
and
xchg
and
rorb
push
ds
stos
push
sub
xor
sub
mov
pop
jb
and
sbb
dec
cmpsb
mov
xchg
stos
add
lcall
dec
mov
push
enter
hlt
adc
add
sbb
inc
out
add
sbb
repnz
push
dec
add
in
add
verr
test
jge
mov
push
pop
add
inc
jno
inc
ds
add
and
add
mov
push
mov
pop
add
icebp
movsb
inc
mov
add
loop
pop
pop
pop
rolw
js
mov
daa
mov
leave
add
fcoms
in
dec
add
dec
fimull
int3
mov
ljmp
jo
lock
and
mov
cmp
xchg
lret
popf
add
in
cld
imul
je
pop
call
enter
or
sbb
pop
pop
sarb
fildl
sbb
add
add
jge
sub
jle
mov
jo
dec
add
adc
and
add
push
sub
xor
hlt
cmp
or
xchg
sbb
movsb
outsb
push
add
sub
shrl
mov
jmp
push
push
lret
dec
mov
lea
pop
and
hlt
inc
adc
add
add
jb
and
bound
inc
jno
add
lea
inc
ds
jb
loope
add
mov
lcall
or
stos
add
dec
adc
jle
cltd
sbbl
and
les
call
sub
decb
cmp
add
xchg
push
lock
add
adc
pop
xchg
and
adc
or
inc
lcall
add
sbb
pop
fdivl
add
fstpt
add
and
push
lods
fdivrs
sub
dec
out
jp
add
push
mov
cmp
in
movsl
pop
sub
cmp
jge
sbb
mov
daa
mov
add
sub
std
in
adc
fcoms
jbe
cmp
call
or
dec
lret
adc
xchg
add
cmp
jno
clc
test
add
adc
pop
mov
loopne
fdivs
filds
inc
std
stos
add
js
stc
sub
ljmp
or
pushf
push
adc
movb
pop
pop
mov
and
and
add
mov
dec
das
add
iret
fwait
cmpsl
or
andb
outsl
pop
pusha
or
fiadds
fwait
or
out
jo
mov
and
sbb
pop
jne
or
or
jae
add
or
add
cld
jmp
add
push
fimuls
dec
jmp
add
and
mov
test
push
add
out
sub
cmpsb
prefetch
aas
add
add
jle
dec
xchg
mov
imul
sbb
aas
fwait
lea
lret
mov
xorb
es
push
push
mov
or
inc
call
and
cs
xchg
add
adc
add
or
sahf
ja
sub
pop
mov
mov
add
repz
adc
push
pop
lods
xchg
cmp
inc
arpl
dec
enter
mov
or
mov
or
call
inc
lea
adc
and
pop
test
dec
das
in
or
or
dec
add
jmp
outsl
mov
repz
add
lods
dec
xchg
add
dec
or
sti
and
cli
mov
fnstsw
into
arpl
jmp
ljmp
pop
cmp
cli
add
pusha
add
inc
cmpb
cmp
pop
cmp
mov
out
pop
xchg
jle
cmpsb
and
inc
and
inc
add
jne
mov
dec
and
jge
shrb
cmpb
orb
arpl
shlb
xchg
inc
clc
and
inc
sub
mov
pop
sbb
mov
icebp
je
add
pop
fdivrs
or
lcall
xchg
aam
pop
loope
ds
adc
repnz
loopne
add
bound
push
scas
fisttps
es
mov
hlt
pop
mov
fisttpll
adc
adcb
loope
add
stos
rcr
mov
push
jmp
and
pop
lea
fucom
jno
call
pushl
sub
inc
add
inc
nop
adc
mov
lods
inc
jle
sbb
add
add
incl
mov
cmp
add
xchg
hlt
and
test
pop
push
push
outsb
cltd
mov
cmp
dec
insb
pop
lods
cmp
add
lock
adc
xor
filds
dec
mov
dec
jge
jl
add
and
sbb
adc
pop
pop
jo
pushf
stc
mov
add
pop
test
add
jo
and
nop
lds
xchg
sti
push
loop
inc
add
orb
movsl
imul
addl
mov
cs
sbb
dec
sub
jne
sti
cmc
add
xlat
cmpsl
outsb
loop
ja
dec
add
aad
inc
lret
dec
pop
or
inc
insb
jecxz
or
inc
pusha
xchg
test
shlb
lods
hlt
pop
test
icebp
lock
pop
jbe
add
push
das
int
xchg
aaa
jo
fdivr
in
into
and
sub
pop
add
enter
xchg
dec
test
adc
add
inc
insb
adc
adcl
dec
in
cmp
pop
add
pop
mov
je
add
pusha
scas
lods
dec
fisttpll
add
push
cmc
inc
out
add
pop
xchg
mov
dec
pop
add
or
adc
or
mov
push
stos
fwait
nop
dec
cmp
cld
add
fdiv
push
ret
add
aaa
sub
andb
cs
rcr
repz
neg
inc
mov
add
xor
push
das
adc
nop
dec
xor
mov
add
sbbl
hlt
test
jl
imul
inc
int3
sbb
xorl
sbb
test
pushl
or
and
into
add
inc
cmpsl
jg
xchg
mov
fwait
pop
add
inc
and
dec
add
cmp
jmp
je
push
fistl
movl
mov
test
xor
adc
add
stc
in
add
or
add
push
and
inc
add
jg
sbb
out
aas
or
addb
decl
or
je
add
cmpb
adc
push
fildl
pop
add
inc
inc
fisubs
sti
add
add
loopne
xor
shrb
or
add
adc
xor
or
push
mov
add
rcrb
add
mov
and
push
pop
or
xchg
into
add
inc
sub
cmc
pusha
decb
ds
adc
dec
mov
into
xchg
add
shr
fiaddl
pop
dec
mov
mov
or
sbb
jle
add
gs
sub
xchg
shrb
subb
popf
ret
sbb
sbb
mov
icebp
mov
fmull
sbb
sbb
pop
orb
lea
out
pop
fwait
xchg
add
jne
cmp
lds
mov
lock
stos
xor
mov
push
add
sub
sti
and
lock
fiaddl
sub
adc
add
arpl
pusha
mov
jne
sub
pop
stos
add
sbb
sub
mov
mov
stc
add
dec
mov
daa
ja
add
cmpsb
aam
push
push
add
ljmp
jne
loopne
xchg
add
add
sub
add
push
popf
pop
ret
dec
filds
into
sub
mov
cmp
jmp
jle
add
jge
shll
mov
cld
mov
add
mov
pop
push
xchg
cmp
sub
add
fsubrl
cld
rcrl
or
sbb
or
cwtl
das
pop
ss
and
lock
or
mov
add
mov
or
add
ss
out
or
or
test
sub
out
lea
or
sbb
add
inc
cmc
inc
add
popf
add
std
loop
sbb
sub
add
inc
pop
inc
add
aaa
xor
sub
bound
arpl
jp
jge
add
sarb
sub
clc
pop
add
xchg
push
flds
sub
aaa
sbb
adc
jns
cmp
push
adc
mov
or
add
push
jle
adc
add
inc
je
sarl
xor
fs
or
outsl
cmp
add
mov
pop
lock
pop
xchg
add
xorl
fsubs
and
mov
add
in
mov
add
test
cmpl
incb
adc
sub
pop
push
pop
mov
and
lods
lret
cs
dec
hlt
clc
add
lea
and
and
adc
xchg
add
pop
inc
xchg
adc
daa
dec
add
lret
orb
testl
sbb
iret
jns
lahf
sub
fwait
or
sbb
cmpsl
adcl
cwtl
adc
add
adc
sub
std
mov
mov
sbb
push
movl
fcomp
xchg
cs
cltd
cmp
push
test
add
icebp
shl
adc
inc
mov
or
add
add
bound
fucomi
sub
add
or
mov
push
adc
cltd
lods
bound
or
jno
lods
sub
mov
dec
cmp
jb
or
enter
add
dec
mov
cmpsl
pop
rcrb
sbb
pusha
ds
dec
inc
aas
pop
fsubrs
cmp
xor
sbb
or
and
mov
ljmp
xor
in
dec
or
in
push
add
xchg
movsb
mov
mov
mov
mov
movb
jle
adcl
jmp
pop
add
adc
mulb
lods
push
andl
sbb
push
lcall
push
nop
and
decl
mov
fldl
inc
pop
cli
add
dec
inc
sbb
inc
cli
push
add
adc
push
rolb
scas
stos
sub
sbb
add
mov
shlb
int3
add
jae
jo
decb
xchg
call
in
push
sbb
and
sbb
push
incb
fdivrl
adc
sbb
jp
push
cmp
mov
push
mov
loopne
dec
mov
adc
push
sar
or
pop
inc
nop
add
push
add
dec
fldl
add
and
mov
add
popf
sbb
pushf
test
pop
int
setae
pop
lock
and
inc
add
jne
gs
call
out
jns
dec
js
add
push
cmp
aam
push
pop
xchg
scas
lea
and
sub
sbb
xchg
clc
xchg
aas
add
es
adc
xchg
sub
loopne
and
add
clc
adc
lcall
movl
dec
xlat
sbb
inc
add
leave
and
cmp
es
arpl
add
add
and
lock
das
pop
movsb
or
pop
stc
adcb
mov
out
aad
add
loop
lock
xchg
in
or
dec
pop
adc
sbb
jbe
mov
add
loop
sbbl
aaa
inc
ljmp
in
aam
lock
push
inc
mov
cld
fwait
add
cmp
push
sub
dec
pop
in
add
xor
mov
lret
fildl
shlb
add
mov
add
lea
jno
movsb
aaa
cmp
hlt
movsl
lahf
sub
or
test
and
and
pop
rorl
mov
dec
push
sbb
inc
add
orl
push
inc
clc
jp
push
jmp
aas
sbb
notb
incb
inc
clc
cmp
and
rcrb
lret
jmp
xchg
sbb
inc
sbbb
push
adc
aas
inc
push
repnz
xlat
push
xor
cmp
sbb
add
jae
cltd
clc
mov
add
push
sbb
mov
pop
adcl
jle
aad
cwtl
add
test
jmp
or
cmc
mov
and
sub
adc
add
jp
cltd
out
and
popf
mov
sub
mov
loop
jecxz
smsw
xchg
lds
jnp
add
je
add
push
inc
jle
sub
stos
andl
add
or
add
inc
inc
dec
jne,pn
xchg
pop
xchg
out
pop
cwtl
lods
xorb
daa
insb
aas
pop
sbb
push
add
js
notl
jbe
lods
jb
pusha
push
jmp
jge
cwtl
cmc
or
push
dec
inc
das
pop
xor
mov
add
or
rclb
mov
add
outsl
sbb
or
add
cld
jmp
lcall
cli
test
dec
idiv
cmp
push
cli
test
xchg
and
add
cld
jne
les
pop
stos
cmp
mov
xor
sub
jmp
or
inc
jae
and
ret
scas
push
rcrb
aaa
add
and
add
and
jnp
pop
dec
sub
add
push
push
add
cmc
test
jle
xchg
cmpsb
ficompl
outsb
daa
in
es
inc
pop
dec
verw
loope
adc
inc
add
test
aas
dec
jge
push
or
inc
mov
add
adc
pop
je
add
add
js
inc
popf
std
cmovle
outsl
cltd
test
sbb
call
out
ltr
imul
mov
cmpsb
movsl
bound
adc
pop
xor
xor
adc
daa
jb
ds
pop
loop
jmp
mov
or
pop
mov
inc
push
or
add
and
and
or
or
fiadds
nopl
mov
jl
test
imul
sbb
add
sub
cmp
mov
sbb
clc
inc
out
sbb
icebp
or
adc
add
sbb
add
fs
scas
or
inc
call
dec
add
pop
add
add
rdtsc
je
jbe
add
repz
xor
add
xor
and
add
adc
cltd
adc
dec
xchg
dec
std
cmp
sub
jg
add
mov
sub
mov
mov
test
push
pop
cmp
push
and
ss
outsb
test
add
add
das
adc
sub
or
lock
add
lods
dec
ficomps
add
out
in
cmpb
scas
push
jp
push
cmc
stc
incl
cmp
icebp
add
adc
sub
mov
pop
mov
cmp
loopne
or
sbbb
push
xchg
add
aad
ljmp
pop
add
dec
dec
test
push
sbb
inc
adc
pop
inc
pop
addb
das
dec
pop
loop
stos
ss
sub
jae
mov
pop
inc
adc
mov
or
arpl
inc
out
shr
imul
ret
sub
sbb
add
cmp
push
and
imul
loopne
test
fucom
push
ret
insb
out
js
add
push
sar
call
inc
cli
dec
rep
pop
pop
add
add
push
pop
lock
ficoml
xor
lahf
out
loop
sub
mov
daa
jge
add
cld
pop
add
mov
inc
jp
add
stos
pop
neg
shlb
out
gs
js
pop
scas
mov
mov
sbb
aam
cli
loopne
cmpsl
or
loop
add
push
mov
lods
in
add
inc
sbb
add
shll
testb
adc
xlat
add
in
and
mov
lret
pop
xor
and
dec
push
insb
pop
mov
pop
push
sub
inc
xchg
fsub
mov
mov
lods
add
lea
xchg
lock
outsl
push
jmp
rolb
add
xchg
cmp
adc
cltd
and
mov
nop
dec
or
mov
shlb
jns
add
or
cmp
push
adc
inc
clc
ja
jb
shld
push
mov
sbb
mov
je
xchg
iret
xor
push
pushf
in
movsl
dec
loopne
in
scas
fucomp
ljmp
inc
pop
pop
iret
adc
fisubs
cs
std
loop
add
jne
and
loopne
and
or
pusha
and
mov
shl
cli
and
int3
pop
sbb
mov
nop
dec
dec
add
hlt
test
mov
jae
cld
push
add
popa
aam
jp
add
xor
inc
cmpsb
dec
xchg
add
mov
add
xor
mov
pushf
adc
repnz
adc
repz
jle
popl
mov
sub
and
jl
push
cmp
or
inc
and
cmp
fmulp
mov
dec
xor
enter
test
push
imul
pop
sahf
or
push
push
adc
mov
das
dec
xor
push
mov
inc
pop
push
jge
mov
in
cmp
push
dec
stc
in
lahf
lods
fists
or
shlb
xor
add
dec
pop
cld
add
lahf
shll
dec
jl
pop
dec
push
sub
shlb
sbb
fdivrl
shrb
cmp
dec
xchg
add
test
push
dec
cld
or
and
pop
adc
or
push
push
int3
jmp
hlt
add
jo
push
xchg
in
push
inc
xor
sahf
mov
or
pop
adc
push
lret
pusha
test
filds
aam
movsb
jp
jbe
fcoml
popa
dec
cmc
sar
xchg
add
mov
inc
imul
cmp
lods
pushf
xchg
add
mov
cmp
clc
movsb
mov
test
mov
add
add
ret
and
je
shlb
push
loop
test
fmull
lds
mov
and
je
psubsb
in
hlt
jmp
add
dec
leave
adc
add
aas
movsl
sbb
add
je
mov
xchg
incb
pushf
mov
jg
cmp
dec
cld
in
lock
and
sbb
iret
jecxz
mov
mov
ficoms
dec
pop
push
repz
xor
cmp
and
test
pop
mov
mov
inc
add
or
and
inc
loopne
and
call
push
add
cli
mov
cmp
cld
xor
push
add
jo
sbb
jg
add
aas
inc
mov
ds
jp
stos
or
cmp
or
mov
out
add
cmc
incl
fldl
pop
fiadds
loop
xchg
sbb
add
xorl
iret
pusha
mov
adc
jb
cld
add
add
fwait
add
inc
push
push
imulb
ss
pop
fbstp
lods
inc
sbb
or
inc
aas
push
add
fsubl
std
dec
test
aas
add
call
adc
lahf
xchg
addl
xor
add
adc
loop
testb
pop
pop
add
add
and
add
rcrl
xor
add
inc
add
inc
push
sub
mov
inc
xor
add
data16
add
xchg
pusha
popa
or
fs
addb
adc
bound
mov
cmovno
mov
test
pop
push
cwtl
jns
inc
daa
and
or
das
adc
xor
shlb
mov
add
adc
testb
or
jne
cmp
je
mov
ret
int
mov
xor
roll
lds
pop
into
or
jae
and
push
fdivrs
add
enter
addl
in
lock
leave
sbb
ret
add
into
inc
negb
mov
mov
lock
int3
push
shll
mov
xchg
add
jne
mov
shr
int
and
push
and
mov
mov
add
insb
lahf
and
shufps
add
les
and
lock
jnp
xchg
out
sub
cltd
add
ljmp
xor
inc
aaa
je
or
add
add
pusha
xchg
lret
jmp
adc
fcomps
test
add
in
mov
dec
xor
add
jge
add
inc
lods
aam
adc
rcrl
and
add
add
mov
or
add
hlt
orl
jmp
lret
fldl
sub
lea
push
add
sub
jb
scas
aas
and
mov
xor
add
add
cwtl
stc
push
call
dec
mov
adc
cmc
out
xchg
lock
pop
lea
ljmp
add
jne
cli
or
adc
imull
add
in
add
add
adc
push
sbb
add
add
pop
cmp
jmp
jbe
add
out
add
int
hlt
test
int3
call
dec
dec
loopne
sub
jmp
call
cmp
push
push
xor
sbb
or
les
jb
icebp
cli
test
test
sarb
adc
insb
xchg
adc
in
test
sbb
std
or
lods
add
pop
inc
cmp
push
aad
add
outsb
jne
insb
dec
aam
jae
fisttpll
pop
lods
jo
leave
jg
add
mov
loop
add
jle
jmp
gs
pop
rcll
in
imul
add
xchg
shlb
xor
lods
cltd
dec
fmuls
add
or
test
adc
sbb
inc
mov
loopne
push
add
jl
inc
pop
inc
jbe
xor
fwait
cmp
add
in
jo
add
inc
es
push
and
imul
fs
rol
push
mov
sbb
lret
dec
ret
cwtl
sub
inc
add
out
inc
jno
ret
xlat
add
jecxz
jge
xchg
mov
jo
lock
add
mov
jge
cmp
xchg
add
or
add
cmp
add
sarl
test
rorb
add
push
rolb
cmp
loop,pt
std
adc
scas
push
les
dec
add
popl
iret
jg
shl
adc
mov
test
push
xchg
fsubrl
add
lcall
mov
add
stos
loopne
sbb
add
loop
filds
ljmp
mov
mov
adc
jg
aad
shl
cld
loopne
add
test
xor
mov
clc
pop
add
insb
xor
loopne
add
stc
mov
dec
inc
movsb
jo
pop
pop
out
mov
nop
push
cmpl
je
add
adc
outsl
jmp
bound
sub
or
push
xor
je
add
and
jge
addb
pop
xor
out
push
pop
jmp
popa
jp
lahf
out
loopne
add
cltd
bound
xor
jne
cmp
aam
subb
push
sahf
outsb
setae
sub
loop
add
andb
push
add
rclb
sub
adc
push
sbb
cmc
adc
pushf
mov
stc
mov
sbb
scas
cmp
aam
mov
mov
pop
mov
jo
pop
mov
add
mov
xchg
or
popf
mov
mov
out
add
mov
jg
push
inc
push
stc
sub
jb
scas
sti
cmpsl
pop
mov
cli
inc
xchg
mov
iret
xlat
xor
inc
loopne
add
negb
add
pop
dec
xorb
scas
jb
test
cmp
cmp
lods
add
cwtl
ds
and
loopne
add
mov
jo
stos
mov
les
sbb
ret
mov
faddl
shrl
push
in
sahf
mov
jnp
add
and
push
ret
or
sub
call
and
inc
jo,pt
add
loopne
push
jp
inc
gs
add
or
xor
add
inc
loopne
or
cmp
sub
int3
rcr
mov
jno
add
sub
ljmp
rcll
pop
xchg
sbb
cmpl
mov
movsl
push
test
and
jne
je
add
adcl
loopne
xchg
push
add
int3
nop
fmull
inc
je
mov
xor
xchg
cmpl
lods
xor
mov
pop
rorb
fistpll
mov
xor
push
aas
stos
or
adc
sub
mov
adc
mov
in
in
out
pop
add
testl
xchg
jne
push
push
push
lahf
faddl
jnp
repnz
push
sub
xor
lea
test
push
bound
rcr
sbb
push
jmp
add
cmp
add
or
jae
stos
sbb
inc
add
lret
adc
flds
lods
test
jo
mov
add
out
pop
jae
mov
cs
xchg
jl
push
inc
repz
sbb
je
add
pop
push
ror
and
sub
or
add
xchg
or
hlt
xor
and
aam
push
add
mov
inc
mov
sub
add
jnp
push
in
lds
sahf
adcb
add
jae
call
dec
add
push
andb
or
stos
jp
push
lahf
add
ret
add
aad
call
lods
jbe
test
pop
testl
js
xor
add
inc
dec
mov
add
insl
in
es
inc
aam
mov
xchg
add
cli
movsl
push
in
mov
aaa
cmp
shlb
mov
aas
mov
mov
xchg
imul
mov
add
jne
add
and
aam
inc
fdiv
in
pop
or
inc
mov
jle
fiaddl
loopne
xor
add
sbb
xor
aad
notl
call
mov
push
addl
call
add
inc
jo
sub
inc
push
mov
add
or
xchg
ret
add
jne
popf
je
dec
rcr
add
cmp
push
and
les
or
add
into
add
or
inc
add
xchg
add
or
test
push
loopne
jg
clc
xorl
and
aaa
push
inc
add
popa
enter
dec
and
push
inc
jl
jge
cmp
arpl
test
inc
jmp
mov
insl
ret
stos
push
mov
and
sub
sub
dec
std
or
adc
sbb
xor
add
xchg
scas
movsl
out
shl
adc
xchg
pop
push
add
insb
mov
add
inc
cwtl
and
je
pop
out
add
jb
jle
xchg
sahf
rorb
add
adc
add
outsl
dec
pop
jecxz
mov
push
es
test
mov
sahf
mov
aas
lea
mov
sub
pop
andb
add
adc
add
push
lret
rolb
jns
xor
add
pop
lock
sub
into
mov
je
dec
add
repz
clc
add
xor
add
sahf
pop
ret
cmp
pop
add
dec
adc
in
call
ljmp
sbb
stos
add
inc
push
push
jmp
pusha
hlt
or
pop
add
dec
movsl
pop
jne
cmp
sbb
ret
pop
add
test
push
pop
cmpsb
xor
inc
jmp
push
or
sbb
add
inc
add
adc
nop
lahf
in
add
jg
test
and
adc
xchg
mov
in
and
clc
pop
or
inc
add
jl
xlat
std
inc
adc
mov
add
loopne
or
lcall
pusha
cmp
sub
mov
adc
dec
aas
fstpt
jmp
push
or
add
imul
sbb
roll
adc
inc
xor
xchg
push
and
fcoml
lock
inc
pop
sahf
out
add
add
or
cmpsl
fwait
push
or
sbb
fidivrs
sub
sub
add
cmp
out
mov
mov
pop
cmp
sldt
sub
jl
adc
adc
mov
add
testl
std
push
add
scas
or
mov
cmp
nop
push
int3
xor
adc
fs
inc
or
xchg
loope
imul
xchg
adcb
inc
sbb
xor
popa
ret
pop
pop
mov
or
or
add
fs
jb
ret
nop
add
lcall
add
je
inc
adc
mov
sbb
xor
daa
aad
dec
cmc
inc
dec
jns
cmp
dec
stos
adc
orb
pusha
jno
lret
loop
out
xchg
xchg
pop
mov
mov
cmp
cli
mov
test
sub
inc
add
add
pusha
and
jbe
mov
into
and
rolb
add
inc
inc
jae
mov
adc
add
mov
jge
sub
rolb
add
repz
jge
rcrb
sub
ja
jno
rolb
pop
cmpsb
fcoml
or
xor
pop
das
mov
mov
mov
ja
or
leave
pop
test
shll
pop
pop
sub
push
add
pop
adc
cld
je
lcall
cmp
lsl
xchg
lods
rclb
push
sti
add
stc
and
jne
cmp
push
inc
xchg
inc
dec
cmp
je
push
mov
testb
shr
xchg
mov
fcomps
adc
out
ljmp
sub
mov
add
adc
shlb
flds
ret
cmc
gs
repnz
mov
movl
add
pop
or
adc
add
cmp
hlt
inc
add
hlt
jae
cli
jnp
pop
adc
shr
adc
inc
dec
xor
add
inc
xlat
jg
movb
push
pop
push
add
jbe
out
add
filds
cmp
cmp
js
addb
jo
in
stos
ja
add
iret
dec
adc
cli
pop
int
jp
aaa
cwtl
sbb
mov
and
jecxz
adcb
pop
pop
inc
aaa
orb
add
ja
push
and
xlat
inc
daa
dec
adc
imul
out
pop
or
sub
nop
pop
hlt
pop
jp
cmp
insb
seto
sti
inc
cmp
daa
in
xlat
mov
add
push
loopne
dec
dec
add
hlt
sbb
insb
add
adc
cmpl
or
and
cmp
adc
and
test
jbe
sub
push
and
pop
and
add
lock
fstps
xor
leave
add
inc
mov
mov
dec
add
add
push
call
add
add
jo
xchg
rolb
daa
jnp
cli
add
cwtl
movq
cmp
addb
and
sub
push
jo
enter
xchg
xchg
adc
les
ljmp
lods
add
js
push
orl
lock
inc
rolb
repnz
ja,pn
adc
out
lret
xchg
call
and
fcoms
cmp
mov
sbb
nop
jne
add
incb
nop
xchg
cmp
and
js
push
cmpb
inc
adc
add
rclb
jae
verw
xor
add
scas
push
lret
or
pop
push
cmc
mov
adc
sbb
or
lahf
cmpsb
add
stos
adc
in
lret
shr
xchg
dec
xlat
andl
mov
adc
ret
lock
cli
popl
lahf
jne
ss
mov
xchg
mov
loop
adc
or
cmp
movsb
in
add
std
pop
int3
cmp
or
fnstenv
jmp
dec
xor
xchg
loopne
inc
clc
hlt
out
add
adc
and
nop
in
jp
inc
mov
add
pop
in
add
mov
test
dec
pop
add
scas
lock
lods
pop
jecxz
cld
xchg
cli
les
xor
cmp
inc
ror
and
shlb
lods
mov
mov
and
push
cmpsb
dec
dec
xor
mov
push
or
test
cmp
aam
sub
add
push
add
add
dec
add
sub
outsb
cmp
repnz
cmp
or
sub
aam
xchg
ja
ljmp
jb
push
push
hlt
lcall
jg
pop
sbb
insl
cmp
aad
add
sub
inc
push
jg
jl
add
push
dec
fdivrs
in
adc
insb
pop
add
mov
sub
mov
lsl
je
into
dec
call
mov
rolb
add
cmp
cmp
mov
sub
cmc
xlat
mov
add
gs
int
sbb
mov
pop
lods
jne
add
add
adc
add
inc
add
adc
movsb
and
or
nop
mov
in
xchg
add
inc
push
xchg
ds
insb
adc
out
xchg
push
fwait
cvttps2pi
xchg
inc
mov
add
mov
push
fs
cmp
adc
inc
and
dec
sub
mov
cmp
popa
inc
add
out
in
push
dec
cltd
call
sahf
popa
out
nop
loope
jmp
jle
cmp
hlt
jne
xchg
movsl
scas
mov
add
jl
sub
mov
insb
pop
add
pop
in
and
xor
or
push
add
out
or
add
shl
in
lea
adc
jmp
int3
roll
insl
xor
out
add
pop
movsl
aam
mov
mov
inc
fcomps
jns
xchg
sub
sub
and
add
jl
inc
push
repz
add
enter
cs
add
test
rorb
pusha
aam
sub
add
mov
pushf
adc
sbb
pop
enter
add
jno
pop
xchg
inc
icebp
add
cmpsl
adc
push
les
adc
adc
jo
jle
pusha
mov
mov
add
inc
xor
adc
mov
dec
inc
or
cmp
xchg
sbb
aas
push
aas
push
or
dec
xchg
sub
cmc
jno
xor
or
movb
add
jns
movsb
setne
rolb
sbb
push
add
and
ds
shll
or
mov
adc
adc
xor
dec
sbb
xchg
pop
cmp
and
or
inc
stos
mov
dec
add
mov
int3
pop
dec
add
mov
add
mov
mov
push
lldt
lahf
fidivs
add
inc
sub
dec
add
push
sub
xor
arpl
clc
rcrl
pop
xor
pop
pushw
mov
or
mov
stos
fdivrs
xor
add
sub
push
andl
rolb
push
fsubrp
jb
clc
add
ret
add
daa
mov
adc
cmpsl
cwtl
jmp
jbe
leave
fadd
jmp
and
pop
push
in
daa
mov
mov
pushf
add
cmp
and
in
push
dec
and
fdiv
sbb
push
dec
mov
dec
add
repnz
in
push
ljmp
inc
in
mov
mov
push
add
sub
repz
loope
pusha
xor
in
xor
mov
dec
and
jle
add
int3
pop
push
int
push
add
into
add
test
dec
add
adc
or
sbb
mov
movsb
pop
inc
fwait
hlt
gs
adc
das
gs
cmpsl
mov
adc
add
rcrl
fs
pop
sub
popa
outsb
cmpb
and
sub
stc
pop
add
sub
or
add
ds
add
inc
xor
sti
or
movsl
adc
cs
loopne
or
add
add
jp
adc
push
arpl
sbb
scas
or
jle
sahf
mov
add
lret
push
xor
sub
dec
or
je
add
fmuls
push
add
lds
pop
hlt
cmpb
test
xor
push
add
stos
dec
int
cmpsb
pop
jae
packssdw
cmp
dec
test
scas
push
stos
cmpb
lock
mov
es
and
repz
clc
mov
test
call
lock
or
add
outsb
or
mov
jge
push
pushl
orps
push
inc
adc
or
add
out
and
in
jae
pop
xchg
ror
add
out
sub
push
add
cmpl
jbe
dec
add
int3
push
shll
adc
sbb
aam
shl
xchg
add
pop
jge
movsb
cli
mov
add
mov
and
pop
inc
mov
mov
inc
leave
xlat
jbe
sub
xchg
in
adc
sbb
pop
in
push
repz
or
lret
or
xor
fdivs
push
dec
mov
lahf
rcr
lret
xchg
dec
add
pop
inc
push
fsubs
adc
sbb
jno
sbb
dec
fstps
in
sub
mov
stos
cmovg
ret
dec
movsl
push
mov
jl
push
scas
adc
cmc
lahf
fisttps
jp
loopne
dec
aad
pop
pushf
mov
call
inc
add
test
js
add
lock
in
mov
xchg
fs
adc
cmp
dec
sbb
mov
idivb
aam
push
inc
mov
shlb
or
pop
add
push
mov
add
orl
add
inc
sbb
mov
pop
call
rorl
mov
cmp
push
adc
jbe
xchg
mov
loopne
xor
push
rorb
data16
or
mov
loopne
pushf
js
ja
dec
in
pop
and
xor
add
or
cmpb
add
popf
popa
mov
adc
xor
fs
xor
andl
cltd
xor
aas
gs
add
das
fs
lds
es
cmp
shrl
xlat
and
rcrb
movsb
adc
pop
aad
pop
repz
or
sti
jno
add
xor
mov
xchg
out
add
pop
cmp
aam
mov
dec
sbb
pop
clc
cmp
cmpsb
xorb
inc
and
sbb
jl
js
add
lea
add
jne
mov
pop
cmp
jbe
hlt
sub
add
pop
lock
cmp
dec
cmp
dec
add
pop
lea
jg
xor
adc
inc
push
mov
dec
shl
call
add
test
fiaddl
push
xchg
xor
add
cmpsl
popf
push
lods
jl
leave
add
bound
add
mov
and
or
mov
pop
push
repz
mov
adcb
dec
sub
stc
add
lea
and
pushf
outsl
dec
rorl
inc
fstl
jmp
std
sbb
std
dec
outsl
or
repnz
sbb
push
lea
push
dec
jg
inc
mov
es
mov
push
adc
aas
cltd
in
adc
enter
sbb
das
xor
add
jb
out
sub
cmp
orps
add
loopne
adc
lds
xor
pop
repz
mov
sub
into
xchg
in
mov
inc
pop
adc
rolb
sub
in
test
add
inc
mov
add
pop
or
adc
cmp
add
cltd
adc
push
add
push
mov
inc
test
aaa
lea
push
loopne
mov
test
aam
push
pop
xchg
or
pop
inc
nop
stos
mov
repnz
dec
inc
pop
mov
or
and
inc
inc
jecxz
push
pop
xor
or
push
inc
dec
xor
jle
movsb
sbb
lods
testl
xor
and
pushf
add
jmp
add
xchg
cs
mov
cltd
push
jmp
pop
cld
adc
xor
ja
hlt
xchg
add
sbb
add
or
stos
lock
bound
dec
repnz
or
ss
sbb
pop
add
test
lds
lret
ret
or
add
and
push
add
xor
cld
jno
les
push
xor
add
push
movsb
add
iret
les
xlat
mov
and
test
pop
dec
or
push
jmp
enter
ror
in
adc
jmp
arpl
test
or
and
pusha
jne
lods
and
cmp
add
sub
push
je
call
xor
xor
or
into
push
ja
sub
or
sub
adcb
sbb
out
outsl
add
cmpsb
pop
cmpl
or
push
iret
clc
scas
incb
ret
orb
popf
pop
jno
dec
xor
repnz
ret
pop
mov
test
mov
cmpsl
xorl
mov
add
imul
dec
pop
add
orb
cltd
add
adc
jno
jmp
add
xor
mov
push
hlt
ss
adc
add
mov
push
push
mov
bound
xor
xchg
mov
addr16
in
push
add
pop
adc
push
jno
inc
jp
pop
push
xchg
or
hlt
loope
sbb
xchg
dec
dec
or
pusha
and
or
and
fidivl
cmp
xlat
mov
add
shlb
pop
add
adc
lret
lea
or
cmp
adc
mov
dec
add
cli
mov
dec
lahf
add
xchg
fisttpl
test
fldl2t
je
dec
cli
inc
add
outsb
sub
jg
inc
sahf
dec
lods
cmp
fldcw
sarb
adc
xor
pop
mov
inc
add
out
fadds
xchg
mov
insb
add
sub
add
sub
jb
mov
push
dec
pop
lds
xchg
add
out
mov
and
xor
lods
pop
and
add
push
xchg
in
inc
mov
and
lods
adc
or
push
and
lea
jecxz
add
adc
jp
ds
inc
andb
bnd
dec
mov
outsb
cmp
jl
sar
test
fmuls
dec
xchg
mov
das
lock
and
rolb
cmp
add
xchg
cmp
and
dec
ficoml
and
push
inc
adc
and
dec
insl
xchg
jl
mov
push
daa
ja
xchg
rolb
aad
aaa
push
ret
leave
adc
jmp
jbe
sbb
addr16
pop
repz
adc
mov
ficomps
mov
sbb
push
add
addl
jne
cmp
jnp
pusha
push
xchg
subb
sbb
lds
rol
notb
dec
adc
push
daa
sbb
adc
test
lret
add
fsubs
adc
pushf
ds
sbb
loop
pop
add
inc
test
cmovl
fiadds
jecxz
lods
mov
xlat
testl
shlb
jae
push
xor
gs
push
sub
cmp
les
push
jg
pop
sahf
das
jns
lods
je
in
mov
jb
inc
hlt
inc
add
fs
mov
push
sti
addl
mov
inc
aaa
add
je
inc
movsl
sbb
rcll
xlat
mov
clc
mov
jne
cmova
and
lock
ret
loop
scas
add
pop
ret
cwtl
and
add
inc
push
mov
xchg
hlt
push
add
mov
out
add
mov
in
dec
gs
sub
leave
fs
mov
ljmp
jns
add
fistl
test
aas
fdivs
test
push
imul
or
cmp
bound
mov
loopne
mov
aaa
add
push
pushf
test
inc
xorb
cmp
rclb
add
jmp
test
push
daa
not
mov
rorl
mov
lcall
push
fsts
fcomps
adc
sbb
push
pop
inc
movsb
and
add
into
invd
add
pop
lret
dec
xchg
popa
xchg
push
sub
inc
repnz
mov
jg
xorb
out
daa
pop
push
repnz
test
imul
test
jecxz
lods
fistl
int
call
jnp
inc
xor
outsb
pop
add
inc
or
mulb
cmp
insl
cmpb
jmp
pop
sub
dec
outsl
add
cmp
add
mov
dec
pop
ljmp
test
and
in
adc
adc
repnz
adc
jmp
sbb
lods
sbb
sub
dec
loopne
add
loop
or
sub
xor
inc
shld
aas
add
rcrb
lods
or
cs
push
adc
mov
push
rorl
adc
jg
add
das
sub
pushl
sbb
add
pop
fs
call
subl
jmp
cmp
add
aam
push
lcall
xorb
cmpsl
hlt
ret
popf
stos
mov
int3
mov
je
and
sub
push
add
in
js
movsl
cs
cs
mov
mov
push
jle
add
rorl
mov
pop
push
add
in
push
test
jg
add
pop
pop
in
rolb
jno
add
or
mov
pusha
adc
cltd
sbb
jecxz
movsb
mov
jmp
sub
mov
dec
or
dec
jmp
inc
add
in
mov
fs
cmp
addr16
mov
fimuls
sbb
sbb
aaa
adc
add
add
and
fstpl
lds
les
push
js
mov
and
fdivs
es
cli
jo
sbb
mov
or
mov
jbe
rcrl
call
ficoms
or
ret
sbb
inc
ja
ljmp
aas
in
ret
rolb
sbb
dec
inc
add
sub
aam
popf
or
add
cmp
push
pop
in
pop
je
test
jp
inc
out
and
dec
shlb
xlat
inc
xor
fists
daa
or
add
ror
jg
in
or
mov
les
in
pop
push
cld
push
cwtl
xchg
inc
add
mov
dec
sbb
hlt
and
pop
mov
pop
cmp
loope
movsb
inc
loop
pop
jecxz
jl
push
and
das
xchg
enterw
add
cmp
shrb
jmp
loope
out
adc
push
gs
add
xor
inc
pusha
ss
lret
push
push
outsl
andb
xor
cld
pop
xchg
add
rcrb
add
cmp
mov
addl
push
mov
insl
cmpsb
jo
add
sbb
test
in
daa
push
jno
es
add
dec
add
call
loop
or
test
nop
add
and
adc
xlat
pop
int3
or
rcl
add
jnp
cmp
sub
out
add
xor
push
sub
push
add
mov
pusha
jle
push
xor
popa
or
stos
int3
jne
or
jbe
push
xchg
add
and
shlb
lock
je
push
rorb
hlt
cld
scas
add
imul
cld
frstor
cmp
repnz
xor
mov
repz
push
movsl
xor
test
orb
nop
sbb
mov
sbbl
mov
rolb
dec
rorb
int3
jo
sub
jmp
je
push
xchg
enter
and
loope
jbe
and
cmp
adc
idivl
scas
in
int
jno
dec
and
push
cli
pop
and
frstor
pop
xchg
add
shrb
add
add
push
push
add
pop
cmp
and
sub
xor
faddl
cld
dec
mov
add
rcll
xlat
adc
out
cmc
add
adc
pop
mov
or
jmp
pop
cmp
dec
cmpsl
jmp
lret
add
add
scas
out
leave
insb
sbb
addr16
rcl
test
mov
lock
mov
add
inc
adc
insb
int3
or
and
enter
in
push
mov
aaa
add
add
addr16
add
into
sub
lock
add
mov
pop
hlt
rolb
adc
inc
mov
adc
xchg
xchg
hlt
and
adcl
add
rclb
lcall
lret
push
sti
sub
dec
jns
mov
inc
pushf
les
test
lds
dec
in
pop
das
add
es
inc
mov
xor
push
sbb
xor
int
and
cmpl
and
add
jnp
out
adc
add
sbb
xchg
sbb
mov
loop
inc
and
xor
push
fildl
xchg
cltd
mov
fcom
cmp
mov
xchg
xchg
push
add
mov
add
push
mov
les
sub
pop
mov
test
mov
add
or
cwtl
gs
push
rolb
jmp
sub
pusha
cld
or
sbb
rolb
jecxz
rorb
xchg
mov
cmp
imul
psubsb
push
pop
sub
or
stos
add
nop
push
mov
xor
add
add
add
add
sub
add
adc
sbb
fnsave
dec
shrl
cmp
pushf
pop
lods
mov
push
or
mov
les
add
adc
pop
dec
repz
pop
xor
mov
xchg
or
subl
push
inc
or
test
mov
sub
jbe
add
push
cmp
call
jmp
test
sub
fs
bound
cmpsb
addb
xor
add
sub
add
sbb
mov
repnz
pop
inc
add
adc
xchg
sahf
cmpsl
hlt
call
push
add
insb
and
inc
scas
pop
push
sarb
add
jne
mov
jbe
push
jg
mov
sub
sub
inc
shlb
adc
add
js
mov
popa
hlt
add
inc
add
adc
xlat
pop
add
loope
pop
loopne
cld
add
inc
pop
in
add
leave
and
imul
add
push
pop
sbb
lsl
xor
pusha
mov
inc
adc
push
and
incl
xchg
mov
fwait
stc
lods
mov
cld
lock
add
lret
jecxz
lahf
jnp
rcrb
dec
int3
and
imul
push
push
adc
mov
add
test
ja
mov
ss
jp
add
push
pop
add
mov
jb
adc
les
adc
add
cmc
or
and
movsl
scas
or
jecxz
test
inc
jl
xchg
rcrl
fsubr
jnp
aas
dec
xchg
mov
push
jbe
mov
mov
adc
bound
leave
andb
or
jb
dec
xchg
stc
loop
test
pop
insb
xor
cld
add
dec
lds
jp
add
dec
add
inc
das
mov
xchg
int
xor
hlt
cmp
mov
mov
divl
sub
jmp
inc
gs
enter
xchg
test
add
insb
jmp
mov
mov
daa
inc
addl
add
or
adc
or
adc
or
fisubl
lahf
xchg
roll
into
in
repnz
mov
cmc
lock
ret
test
rcll
dec
out
sti
xchg
scas
lock
les
lahf
pushf
add
push
pop
mov
call
loopne
cmp
stc
mov
inc
loopne
push
je
call
and
lods
fs
adc
add
dec
and
sbb
xlat
add
repz
dec
ljmp
shlb
ficoms
and
and
mull
fsubs
push
or
pop
nop
lret
add
pop
push
xor
add
push
mov
not
and
test
push
pop
push
sub
fiadds
mov
add
dec
inc
insb
jmp
mov
cmpsl
loopne
or
hlt
add
push
jmp
add
and
push
push
mul
add
mov
mov
add
insb
xor
ss
shlb
cmp
outsl
cltd
mov
push
aaa
mov
add
std
push
lret
hlt
xchg
mov
cmp
pop
cli
and
scas
jmp
jnp
inc
push
popl
pop
jmp
mov
xor
jae
add
addl
std
sarb
push
add
dec
push
adc
shrb
cmp
pop
sub
stc
addb
call
add
push
and
adc
xor
arpl
and
daa
paddusw
jmp
popf
add
nop
in
jmp
mov
add
dec
and
jbe
xorb
push
movsl
cmp
popa
jmp
jl
add
lea
loopne
and
arpl
or
fsub
rcll
pop
add
xchg
mov
rol
add
pop
dec
xchg
hlt
enter
pop
jno
testl
icebp
push
sbb
cmp
mov
jmp
cmpsl
add
inc
mov
lret
pop
add
add
or
in
xchg
int
mov
shlb
and
jmp
pop
in
add
cmpsb
and
call
out
xchg
push
inc
dec
adc
outsl
add
push
sbb
add
adc
add
add
adcb
fldenv
sbb
or
mov
adc
add
in
lret
nop
enter
fcomp
insl
lods
and
and
cs
cmp
sbb
enter
push
xchg
andb
sarl
pop
dec
sbb
lret
jecxz
adc
add
sub
sahf
or
fdivrl
rcrb
rolb
push
into
or
lds
cmp
aaa
mov
jle
cmpsl
in
and
mov
repnz
movsb
aaa
push
mov
pop
sbb
sub
js
and
adc
mov
inc
cmp
xor
mov
jmp
adc
pop
jae
pop
scas
shlb
and
out
fldenv
out
xor
fstps
hlt
pop
orb
sti
add
adc
add
pop
and
mov
inc
xchg
push
pop
xchg
push
cmpsl
imul
fldpi
mov
stos
add
pop
cmp
and
inc
push
rorb
ret
ficoml
push
or
shrd
dec
popf
mov
add
outsb
pop
jle
mov
add
mov
test
add
sub
cmp
das
mov
push
arpl
popf
cmp
add
and
or
push
pop
lea
inc
outsb
add
cmpl
jae,pt
imul
add
das
cwtl
fs
dec
add
add
insb
pop
lcall
dec
mov
add
lock
push
hlt
push
inc
add
mov
xor
and
test
loop
divps
rol
pop
sub
das
fdivrs
sbb
xchg
in
add
pop
ljmp
xchg
mov
cmovae
add
daa
jns
adc
push
jp
pop
dec
or
add
lcall
out
aas
and
sets
add
div
and
mov
rorl
addl
sbbl
add
lods
push
es
xchg
add
stos
cmovae
movl
jp
and
add
jmp
jge
nop
and
add
test
inc
leave
adc
ja
or
dec
add
sarl
lcall
pusha
shll
movzwl
stos
add
push
mov
rorb
mov
test
add
jne
jns
inc
movsb
orb
pop
inc
decb
mov
add
xor
pushf
mov
lcall
dec
inc
je
stc
insl
roll
mov
inc
ja
add
dec
jmp
stos
or
add
inc
or
add
mov
leave
pop
nop
mov
pop
jmp
adc
stos
enter
incl
stc
test
add
mov
jle
cmc
jne
ret
cwtl
popf
rorb
mov
push
shll
pop
test
add
sub
and
add
jmp
sahf
sub
movsl
mov
inc
or
inc
cs
jno
jle
add
call
out
nop
add
push
testl
je
mov
pop
test
int3
scas
test
dec
addl
cs
push
add
stos
int3
loop
cmp
orb
pop
xchg
and
fdiv
mov
fwait
dec
in
pop
jl
or
fnstenv
add
add
sbb
pop
clc
cmp
add
jecxz
push
add
pop
loope
xchg
loopne
add
mov
inc
pop
sbb
arpl
jo
mov
mov
loope
pop
repz
out
push
xchg
adc
aad
jbe
and
and
popf
push
push
repnz
in
adc
adc
jp
add
call
das
jg
sbb
cs
inc
adc
push
in
movb
mov
mov
cmpl
stc
pop
add
sub
cld
fdivrs
dec
adc
add
cmp
add
push
jmp
add
loope
sub
sti
popl
jb
mov
push
add
fcoms
xchg
mov
add
leave
pop
icebp
push
mov
push
in
xchg
and
cmc
mov
loopne
add
orl
xchg
jbe
dec
mov
cmpb
add
mov
or
leave
xor
test
push
and
loope
and
nop
or
push
adc
je
cwtl
dec
pusha
aam
mov
loope
mov
les
or
mov
and
adc
rolb
sub
scas
notb
or
incl
pop
shr
or
mov
push
dec
pop
dec
push
jp
ret
xor
cmpsl
pop
add
pop
add
dec
push
push
mov
xor
leave
roll
add
sbb
jns
cmp
add
mov
ljmp
xchg
xchg
sti
pop
mov
out
pusha
sub
jge
adc
adc
adc
add
adc
mov
add
rcrb
add
inc
popa
or
adc
inc
cmp
add
lcall
pop
mov
cmp
add
notb
pop
or
es
sbb
inc
ss
add
enter
sub
testl
out
jl
add
inc
push
mov
fdivrp
or
cmpsl
add
pop
add
lret
add
adc
sbb
loop
cmc
lock
add
sti
push
add
jnp
sbb
iret
add
dec
stc
icebp
aam
or
dec
push
in
scas
jne
jae
pop
scas
out
mov
mov
xchg
dec
inc
idivl
ret
mov
xchg
xchg
xor
clc
adc
and
mov
in
pop
call
mov
adc
adc
xor
or
or
add
loopne
and
icebp
je
add
jp
in
dec
cmpsb
xchg
add
mov
push
adc
cmp
fsubs
xchg
and
pop
mov
inc
push
xchg
add
fstpt
lahf
xor
lds
imul
pop
inc
cmp
shrl
ret
xchg
test
jb
out
mov
lods
dec
mov
add
std
fdivs
and
popa
cli
mov
in
hlt
lods
sbb
call
out
push
dec
or
in
es
xchg
pop
mov
adc
add
test
inc
das
rorw
or
into
push
ffreep
and
incb
push
sub
push
shrl
outsb
subb
add
jmp
push
clc
cltd
repnz
icebp
shll
mov
lret
add
jle
daa
cmp
in
xchg
jno
pop
cmp
sub
loop
add
lea
lods
pop
adc
pushl
popf
call
popa
ret
jle
push
push
idivl
sub
mov
fidivrl
sti
mov
push
das
mov
pop
rol
adcb
and
div
xchg
shll
or
inc
cmpsl
add
add
lods
lds
clc
mov
inc
jmp
scas
sub
and
repz
jl
add
sub
add
shrb
sbb
or
and
movsl
xchg
push
addl
and
adc
leave
jle,pt
fldcw
jo
jae
cmp
iret
dec
clc
jg
dec
jge
pushf
dec
mul
add
enter
sub
mov
add
xor
cmp
mov
jg
mov
mov
popf
pop
ds
sbb
jecxz
cmp
add
push
sarb
xchg
inc
loop
sbb
mov
mov
aas
fs
movb
je
add
movsl
and
pop
sarb
sbbb
sub
dec
add
xchg
das
xchg
mov
inc
hlt
adc
sbb
dec
mov
push
or
ret
int
and
addb
nop
cmp
jnp
inc
sbb
sti
push
daa
or
or
ljmp
inc
out
mov
jns
add
xchg
and
sbb
clc
and
jae
andb
mov
sbb
shlb
test
or
and
cwtl
lods
mulb
add
xchg
fs
call
xchg
xchg
push
jo
cmp
lahf
bnd
sub
mov
adc
dec
xchg
int3
cmp
add
rolb
add
ja
cmp
in
fs
add
xor
add
xchg
imull
adc
lock
dec
orb
lods
in
sub
push
aam
lret
add
into
enter
mov
add
sub
sbb
push
ds
test
push
sub
and
loop
add
inc
insb
sub
pop
dec
lods
and
test
scas
clc
push
pop
movsl
stc
xchg
inc
in
cmp
daa
jne
in
and
add
mov
dec
scas
lret
add
mov
add
add
jmp
fdivs
mov
insl
and
out
in
add
inc
lods
dec
repnz
mov
adc
dec
je
xchg
cmp
and
adc
ds
xchg
add
inc
or
jns
adc
or
test
add
adc
dec
pop
out
mov
cwtl
shll
add
jb
enter
add
icebp
push
jo
in
push
or
adc
mov
call
mov
mov
or
xchg
dec
out
xchg
js
add
xchg
fs
jnp
add
pop
in
mov
and
jmp
cli
and
push
add
pop
jae
mov
xchg
das
and
call
pop
cmp
and
adc
or
sbb
jnp
sbbb
mov
bound
push
xchg
add
sbb
jp
sub
mov
push
pop
shlb
push
loopne
test
sub
add
sub
and
xchg
cmpsb
push
cli
jnp
add
cmp
sbb
incl
loop
stc
ds
adc
push
adc
xchg
mov
lea
dec
push
lahf
xor
add
add
jl
dec
roll
scas
pushf
in
cmpsl
dec
test
add
loopne
hlt
std
popf
xchg
push
or
pop
mov
mov
xor
mov
add
pop
mov
add
and
ja
sbb
pushf
mov
cmpxchg
pop
push
shlb
mov
lds
add
dec
test
add
xor
add
or
sahf
inc
shr
add
cld
adc
sbbb
push
negl
push
lock
mov
daa
or
inc
add
lods
add
and
mov
ljmp
jae
nop
xor
test
add
scas
dec
loop
sub
aad
jbe
xor
xchg
pop
xor
jno
outsb
lahf
lret
loopne
das
cmpsb
imul
cld
pop
adc
push
push
cvtps2pi
jg
sbb
jle
popa
add
jnp
scas
pop
xchg
mov
xchg
les
inc
jle
xchg
clc
jp
roll
stos
mov
andl
mov
adc
xor
gs
pop
jmp
arpl
sbb
lret
jg
mov
int3
inc
repnz
xchg
dec
pop
push
sub
cmp
xchg
call
and
xchg
out
dec
mov
aas
icebp
flds
cmp
add
aam
movl
jb
in
xorb
loop
out
pop
cwtl
or
add
xchg
lds
lret
pop
mov
jp
test
push
jnp
and
test
xchg
xor
sub
and
sbb
add
not
adc
out
adc
and
add
add
add
rol
stos
sub
sub
lock
ss
add
lds
shlb
mov
subl
add
inc
add
je
iret
cmp
enter
add
mov
in
add
es
mov
mov
xchg
pop
sub
mov
repz
push
push
cmp
aas
mov
xchg
add
lods
lea
cltd
dec
add
sbb
nop
mov
jg
sbb
jbe
insl
testb
or
daa
push
popf
jge
mov
stos
jl
adc
enter
clc
lcall
pushf
sub
movsb
or
fcoms
push
and
and
mov
jne
lods
cmp
filds
sbb
inc
add
cmp
inc
mov
pop
rcrl
mov
pop
or
cwtl
add
and
inc
add
add
pushf
out
aas
adc
add
clc
adc
call
add
cmpsl
es
pop
lods
outsb
add
jg
mov
add
jge
jbe
mov
shrb
movsb
add
add
movsl
inc
bound
or
testb
push
int3
xchg
mov
jmp
loopne
lcall
imull
and
sbb
jnp
add
test
aas
adc
jmp
pop
clc
aam
testl
int3
xchg
xchg
push
add
lret
lock
fwait
test
loop
sbb
jmp
and
call
mov
rolb
repnz
add
popf
repz
dec
or
cmp
and
adc
xchg
js
xchg
jg
add
mov
jne
cmp
in
movsb
dec
faddl
mov
cmp
dec
and
aaa
pusha
add
cmp
jmp
add
or
pop
inc
fadds
xor
cwtl
adc
test
clc
call
push
add
or
add
adc
push
sbb
loop
add
je
repnz
mov
pop
daa
call
dec
repz
add
or
xor
jg
add
push
shrb
add
xchg
mov
add
inc
fimull
aam
jp
xchg
cmpb
je
sbb
cltd
mov
sub
xchg
sbb
push
or
dec
pop
dec
clc
add
leave
xchg
flds
add
dec
jl
add
add
test
loope
or
add
movsl
adc
push
scas
xorl
sbb
out
push
cltd
lock
push
es
scas
add
sarb
lods
push
and
nop
push
loop
add
inc
mov
or
daa
and
inc
std
sbb
orb
jl
cmp
addb
iret
push
adc
sbb
add
notl
mov
add
mov
inc
mov
and
adc
jp
add
jno
dec
push
inc
add
outsb
sbb
daa
inc
data16
orb
adc
add
pop
bound
inc
ja
cmpsl
in
add
xchg
das
add
ror
jl
into
mov
rcr
mov
sbbl
repnz
sbb
mov
add
lahf
add
push
std
test
mov
or
push
addr16
xchg
add
or
pushl
out
and
sbb
nop
or
das
and
push
fadds
data16
add
add
clc
xorb
push
outsb
lret
test
cmpsb
and
insl
call
cmc
lods
fildl
jmp
pop
lret
fs
add
test
add
lret
sbb
sub
jl
hlt
jmp
in
add
lret
pop
out
add
jnp
mov
pop
stos
add
inc
clc
shl
add
pop
rorb
inc
pop
not
sub
and
push
movsb
cmc
lahf
sbb
and
or
xchg
aaa
nop
pusha
lods
adc
pop
jl
mov
pop
rcl
or
xor
clc
sbbl
inc
xor
cmp
in
in
lret
add
fs
sti
mov
xchg
push
insb
inc
sbb
mov
mov
mov
mov
push
sbbb
xchg
or
xchg
mov
add
test
push
jmp
sbb
add
and
icebp
mov
ret
add
scas
push
pop
or
out
and
add
push
jmp
int3
pusha
jnp
inc
mov
sub
stc
add
stc
loope
js
outsb
sahf
clc
or
fcomps
sub
repz
mov
inc
inc
add
and
sbb
mov
out
jns
add
adc
and
cvtps2pi
and
verw
les
push
ss
mov
fs
add
aas
and
xor
jle
mov
and
add
mov
dec
push
add
repnz
push
clc
mov
and
cld
mov
cmpsb
adc
mov
shlb
add
push
add
xchg
lods
pop
inc
xor
mov
xchg
pushl
in
add
xor
test
mov
data16
add
sahf
dec
daa
call
dec
dec
mov
je
ret
sahf
adc
push
pop
cmp
add
popf
mov
mov
ja
or
das
dec
in
ficomps
imul
test
push
mov
push
push
push
cmp
adcl
cmpsb
mov
lock
jnp
fiadds
sbb
repz
rcr
push
pop
lds
stc
ror
add
dec
jecxz
in
and
cld
jg
add
or
lahf
jbe
repnz
pop
cmc
scas
cmp
xlat
add
jg
or
lret
or
sub
sub
inc
sub
cmp
add
adc
nop
shr
inc
rol
daa
or
ds
add
sub
jns
std
cmp
shll
ret
mov
xor
sbb
or
rorl
and
add
iret
sar
adc
aaa
mov
cltd
or
test
in
add
sar
cmp
mov
mov
push
loope
loopne
aas
add
jg
add
stc
jecxz
mov
mov
xor
push
push
cmpsb
sbb
or
xchg
mov
fdivrs
in
push
ja
xor
add
or
dec
nop
addb
sub
jbe
add
sbb
cmp
add
loopne
stc
out
pop
mov
inc
mov
push
add
cmpl
jl
add
setg
leave
shl
call
sbb
add
lret
dec
sbb
mov
jmp
jp
add
rcll
clc
push
test
dec
xchg
leave
push
mov
orl
mov
call
pop
add
xor
int3
in
cmpl
icebp
or
mov
aad
add
jmp
incb
sub
or
out
dec
int
add
inc
add
pop
add
sbb
push
inc
xchg
stos
add
mov
cmpb
inc
mov
mov
cmp
inc
or
orl
push
cmp
jp
xchg
jnp
inc
mov
les
add
pop
addl
adc
adc
sbb
and
dec
aaa
pop
inc
lock
sbbl
lret
add
pop
add
pop
mov
orb
je
mov
faddl
and
arpl
add
call
xchg
add
cmp
out
sub
mov
dec
sti
add
fdivl
dec
leave
xor
sti
adcb
test
adc
add
rorb
mov
lock
je
dec
mov
aam
pop
pop
mov
clc
fs
call
sbb
jl
add
ljmp
cli
xchg
jb
add
xchg
ds
and
pop
lock
cmp
xchg
test
call
insb
inc
je
sub
jb
xchg
adc
mov
cwtl
ror
and
sbb
dec
and
cmp
mov
dec
out
jnp
or
push
add
mov
dec
cmp
clc
xchg
jne
enter
add
js
sub
in
aam
roll
stos
xchg
adc
add
in
shlb
xchg
fwait
cld
inc
in
movsb
add
cmp
push
xchg
rcrb
sub
mov
or
maskmovq
idivl
in
sbb
cmp
sti
xor
add
pop
jl
sbb
mov
rorb
ret
add
pop
inc
iret
add
mov
mov
xor
lea
push
movsb
mov
sub
adc
push
pop
add
or
int
pop
adc
adc
push
jg
and
dec
les
cmc
test
sub
or
mov
jle
in
cmp
add
imul
mov
fisttpl
andb
jge
or
add
adc
in
sbb
pop
mov
rorb
bound
mov
leave
and
cmp
add
mov
add
stos
ret
adc
fstp
add
ljmp
add
add
cmp
push
adc
lahf
mov
and
add
cmp
sbb
ss
sbb
loopne
shrb
sbb
jne
xor
jge
jmp
and
or
inc
data16
dec
imul
or
cltd
lret
iret
mov
push
sub
test
push
push
xchg
fs
or
push
xchg
pop
sub
inc
clc
loop
pop
add
push
rorl
fildl
iret
cmp
cs
test
or
cmp
addb
out
mov
add
pusha
cli
jle
arpl
push
add
cld
sbb
adc
lea
notl
push
movswl
or
into
sub
stos
pop
cmc
imul
aam
add
fnstcw
lea
adc
add
test
add
add
mov
out
sbb
add
pop
push
cmp
aaa
mov
scas
push
int3
inc
sbb
addr16
inc
test
pop
aas
jns
push
and
loopne
pusha
rcrl
into
add
sub
mov
add
lcall
push
push
dec
push
sbb
imul
mov
add
add
push
inc
add
shrb
add
sbb
icebp
jg
add
pop
add
ja
pop
sbb
dec
out
cs
test
jo
test
rolb
sti
mov
adc
lock
mov
xchg
and
add
rclb
or
jge
add
pushw
jbe
and
mov
dec
adc
xchg
in
jl
pop
add
mov
sub
fadds
out
pop
dec
cmp
pop
add
add
inc
cmp
roll
ds
out
stos
add
mov
iret
pop
mov
add
mov
mov
adc
subb
push
cltd
shrl
inc
or
add
cmp
jecxz
adc
add
movsl
adc
jno
add
in
imul
mov
enter
sub
addl
mov
stos
add
jne
sbb
xor
sub
push
mov
push
xchg
aam
notb
pop
and
mov
scas
add
fsubrs
add
sub
and
add
jo
gs
jb
xor
sarb
dec
dec
and
add
dec
or
push
push
data16
popa
add
lret
arpl
add
call
arpl
ss
loop
bswap
pop
add
mov
inc
les
hlt
sub
cmp
mov
pop
xchg
dec
sbb
hlt
push
mov
add
mov
push
add
dec
mov
out
mov
leave
mov
inc
xor
sahf
mov
mov
inc
adc
or
das
rcrl
pop
sub
out
jno
dec
sbb
inc
hlt
cs
xor
push
mov
push
sahf
add
nop
add
call
push
cmp
ret
sub
jge
movsb
adc
pop
and
cmp
jl
mov
add
xor
dec
add
mov
or
jns
sahf
sbb
inc
popa
shrb
gs
insb
rcpps
imul
or
push
jb
pop
out
dec
mov
add
mov
cs
jle
out
xor
adc
js
inc
xor
push
icebp
or
push
addb
push
push
andl
push
bound
pop
add
or
jmp
jnp
add
es
adc
mov
push
pop
inc
jmp
adc
xchg
lret
in
push
adc
sbb
cmp
call
data16
jns
mov
mov
scas
mov
pop
in
adc
sub
xor
pop
inc
mov
mov
sub
gs
dec
add
ljmp
int
popf
or
ds
add
fnstsw
add
mov
lock
or
stos
dec
inc
lds
mov
add
push
add
cmpl
fcomps
rclb
addl
shrb
cmp
mov
push
mov
add
gs
dec
add
dec
or
jmp
out
dec
insb
add
or
sbb
adc
orl
es
xchg
jg
test
add
sbb
enter
and
and
mov
shlb
aad
lcall
push
add
ret
or
mov
xor
xlat
mov
adc
add
mov
inc
in
mov
push
jb
arpl
push
dec
dec
adc
test
inc
add
pop
mov
imul
mul
jmp
cmpl
jne
mov
add
insb
or
or
mov
test
out
mov
add
jne
xor
xor
jecxz
cmp
add
inc
xor
push
pop
daa
add
jle
sub
add
push
mov
lds
add
inc
jl
add
or
femms
and
and
add
cwtl
cs
pop
xlat
shl
dec
add
inc
mov
cmp
clc
jae
pop
add
nop
cmp
add
inc
stos
or
sbb
cwtl
xchg
push
test
xor
add
jo
jno
decl
call
sub
sbb
mov
or
add
push
cmp
test
add
push
and
pop
fnstsw
movsl
add
inc
loope
fucom
add
loop
jecxz
mov
push
add
cmc
sti
adc
sbb
and
mov
push
cmp
mov
fwait
mov
pop
ljmp
jge
add
jb
sub
stos
inc
pop
mov
cmp
insl
pop
dec
cmc
add
push
cmp
dec
inc
test
add
aaa
sbb
mov
iret
push
test
dec
inc
jmp
rcr
std
testl
xchg
xchg
dec
add
mov
rolb
xchg
pop
stos
adcl
test
ja
add
out
jnp
ficompl
out
mov
ja
sub
mov
xchg
aas
xchg
addl
repz
fimull
and
out
roll
div
ljmp
subl
js
jge
add
call
mov
mull
pop
in
in
add
dec
cmc
dec
out
movl
pusha
xor
add
jl
mov
cwtl
insl
jo
je
add
dec
imul
cmpsl
dec
add
adc
inc
push
push
insb
imul
mov
ljmp
pop
in
push
push
fsubrl
sbb
js
add
popa
and
mov
fs
add
cmp
movsb
enter
sbb
adc
push
cmp
pop
or
pop
push
jle
outsb
push
push
outsl
or
jae
add
out
and
daa
inc
jo
or
js
sahf
jmp
mov
fimuls
scas
test
repz
out
add
jmp
les
jno
incl
push
add
xchg
lcall
out
ljmp
add
pop
xchg
jle
mov
pop
ds
push
push
cmc
pop
push
icebp
outsl
inc
pusha
testl
add
or
fidivl
test
pop
cli
fldt
fcompl
pop
jb
jl
std
mov
cmpsb
outsb
add
mov
in
mov
loopne
add
loopne
jmp
or
cmp
xchg
or
add
movsl
in
cmp
aaa
sub
add
aam
mov
xor
xchg
jmp
nop
pop
in
sarb
add
ja
jbe
jno
test
pop
pop
mov
mov
cwtl
inc
xchg
pusha
mov
sbb
in
roll
push
xchg
jo
or
mov
mov
in
mov
ja
outsl
jmp
jo
int3
pop
orb
lcall
in
out
movsb
add
xchg
push
inc
mov
fs
sarb
cmp
or
repnz
add
jl
cmp
js
fcompl
pusha
add
ret
jbe
out
pop
imul
add
inc
mov
fcoms
add
mov
pop
mov
jmp
pusha
jmp
movsl
pop
xchg
and
gs
cmp
add
jle
loopne
add
push
dec
jp
dec
leave
push
pop
in
test
out
pop
sub
and
mov
rcrb
jmp
ljmp
mov
xor
xor
jno
push
out
test
lock
pop
add
addr16
adc
clc
gs
call
out
es
add
sbb
outsb
pop
push
add
adc
jmp
cltd
test
dec
inc
in
pop
mov
popa
sbb
nop
sahf
dec
outsl
add
cmp
and
cmp
add
dec
scas
jmp
out
jmp
add
int
push
test
movsb
in
mov
es
pop
ds
cmp
add
jmp
jmp
test
mov
cmp
aaa
cmp
mov
dec
dec
jp
inc
fldenv
xchg
fsubs
cmp
imul
jo
aam
cmp
ror
pop
mov
sbb
mov
in
in
push
iret
f2xm1
pop
add
or
call
js
add
add
mov
push
mov
xor
adc
mov
gs
pop
push
add
dec
mov
xchg
fsubl
ret
roll
clc
xchg
xchg
es
pushf
movlhps
sbb
push
xchg
cmpsb
loop
fildl
lahf
out
icebp
dec
das
mov
mov
xlat
push
shll
rol
add
push
outsl
jae
jl
jle
jb
paddsb
pushf
ljmp
and
iret
aad
lahf
dec
loop,pt
hlt
test
bnd
into
arpl
xor
fwait
push
or
and
jecxz
xchg
popl
cmp
mov
mov
mov
mov
xchg
rolb
rcl
aad
loopne
out
out
jecxz
in
ret
dec
push
cmp
push
xchg
xchg
jne
cs
pusha
jb
add
clc
fs
cld
adc
jmp
inc
xchg
xchg
xor
addl
dec
sysret
and
add
subb
add
jp
daa
movsb
add
jae
push
stos
xorl
mull
xchg
add
movsl
out
leave
lret
mov
mov
sub
lea
enter
cmp
js
or
pop
inc
ret
add
lret
mov
add
lcall
test
dec
out
add
fimull
add
mov
stos
add
add
stos
and
cmp
lds
enter
inc
dec
jo
add
in
stos
mov
add
cmp
pop
dec
jnp
dec
cmp
add
jo
inc
ja
inc
jae
mov
dec
pop
xor
cmp
add
fbld
push
lods
out
jae
mov
test
mov
add
mov
add
jnp
insb
stos
es
add
mov
mov
jno
cmp
push
rcrb
add
jns
xor
jbe
add
sub
lods
sbb
ret
adc
add
sbb
dec
inc
mov
popf
add
lcall
push
lods
rcrb
movsl
int
xor
add
pop
loop
add
mov
push
push
add
sbb
cmp
mov
pop
jp
cmp
and
xor
scas
stos
jo
add
dec
xchg
mov
test
mov
jbe
pop
add
out
xchg
dec
test
sbb
xchg
add
std
xchg
ffreep
pop
cmpsl
sbb
rolb
add
test
mov
loopne
add
scas
cmpsl
test
arpl
sbb
inc
pop
adcl
enter
inc
in
lock
xor
add
mov
movl
push
cltd
jnp
add
test
cmc
jmp
adc
push
sbb
fnstsw
scas
mov
imulb
add
cmp
push
and
add
push
push
push
mov
xchg
push
insb
mov
test
xor
xor
inc
push
mov
push
aaa
lock
call
xor
lcall
ret
xorl
xor
repnz
ljmp
in
cmp
cmp
ja
fs
xchg
add
sar
popf
fcom
cmp
jo
add
mov
cmp
jbe
add
addb
mov
cmp
ljmp
in
les
gs
add
xor
xchg
mov
fwait
dec
jle
mov
sbb
jge
scas
clc
mov
aaa
sub
push
jecxz
or
push
xchg
sbb
pop
ja
fadds
fldt
dec
dec
std
fmuls
mov
or
add
or
test
add
inc
leave
inc
test
mov
cmp
add
out
decl
add
push
mov
int
add
lret
adc
or
cmp
jg
add
sub
or
inc
push
inc
inc
add
clc
out
repnz
fidivrl
jmp
ret
cwtl
push
add
loopne
jo
cmp
daa
out
add
ror
and
push
inc
inc
jne
filds
or
push
subl
dec
push
sbb
loope
ds
lock
pop
xchg
add
add
pop
mov
jmp
scas
lock
insb
loopne
add
in
jl
pop
mov
dec
arpl
insb
ret
stos
stos
add
add
aaa
jno
xchg
mov
subb
or
sbbl
sbbb
ror
int3
mov
or
ss
dec
mov
add
divl
scas
jmp
cmp
shl
stos
enter
mov
add
outsb
call
add
cwtl
mov
add
jne
mov
adc
ljmp
movsb
cwtl
pop
jmp
xadd
lret
and
addr16
pop
mov
jnp
loop
dec
call
jo
data16
or
mov
push
ja
pop
les
cmpsb
aad
cmpsl
aam
push
add
xchg
mov
push
mov
add
xchg
lods
jb
mov
imul
inc
add
jmp
ret
pop
int3
js
add
loope
int
dec
add
fcoms
add
push
out
lahf
imul
sbb
add
gs
jmp
out
ret
test
fstpt
aam
and
xchg
call
test
add
dec
push
jnp
dec
adc
xor
mov
shlb
add
lds
aas
aad
mov
and
jecxz
insb
iret
addl
mov
xchg
jno
repz
stc
jae
addr16
pop
jmp
rolb
movsb
adcb
insb
push
pushf
add
add
scas
rclb
push
add
pop
mov
pop
aas
push
ret
push
and
clc
dec
jle
add
clc
ds
mov
cmp
iret
in
add
test
lods
ljmp
add
push
and
loopne
rolb
push
sub
popf
sahf
add
sub
js
mov
aad
or
lahf
mov
dec
aaa
push
movsl
push
jns
add
lahf
test
adc
out
roll
incl
out
jmp
daa
add
xlat
mov
dec
adc
and
lock
inc
inc
sbb
rclb
xor
rcll
sbb
pop
sub
aas
dec
sub
push
sbb
outsb
add
or
cwtl
jb
imul
push
ss
add
loopne
aad
je
and
sub
push
add
adc
xchg
inc
jae
int3
add
inc
rolb
je
cs
push
adc
roll
dec
sub
add
mov
sbb
xchg
mov
and
loope
dec
fisubs
syscall
xor
cmc
jne
clc
fstps
xchg
loopne
pop
add
add
daa
shrb
xor
hlt
add
call
add
mov
enter
addl
add
xor
push
or
push
jmp
dec
cmp
mov
add
mov
add
lret
add
jmp
push
std
inc
hlt
cmp
pushl
lock
jo
add
mov
inc
fiaddl
int3
mov
push
lahf
add
repz
xor
in
mov
dec
cmp
inc
add
add
call
lods
mov
push
and
push
mov
add
bnd
cmp
or
test
pop
das
fadd
ja
mov
sub
pop
add
cmp
daa
enter
pop
repnz
jmp
add
add
push
aaa
call
push
xor
sub
add
daa
ftst
fsubrl
mov
out
add
test
mov
add
and
adc
dec
verr
pop
mov
arpl
jmp
leave
add
scas
xchg
mov
mov
scas
or
mov
inc
loope
sbb
xchg
lea
stos
int3
pop
lods
pop
pop
sub
sbb
clc
push
jns,pn
pop
push
jno
into
sahf
xchg
pop
mov
and
sub
cmp
adcb
jnp
cmpsb
add
and
jle
xchg
jl
or
icebp
outsb
out
hlt
in
fs
gs
or
fcmovnu
rolb
addl
dec
inc
jle
jne
cmp
jns
pusha
pop
je
dec
movsb
pop
adc
aam
xchg
add
mov
arpl
and
sbb
flds
xchg
cmp
in
pop
push
fistl
mov
xor
ror
cmp
jne
push
adc
or
add
enter
outsb
arpl
jb
add
jge
rclb
and
mov
xor
push
add
ss
add
dec
cld
inc
push
xchg
aad
dec
push
mov
sbb
push
call
je
add
push
pop
mov
outsl
jmp
mov
push
add
pop
mov
aad
rcl
inc
push
pushf
and
inc
mov
add
popf
adc
movl
aam
adc
cli
test
out
fcom
mov
incl
loope
insb
adc
bound
rep
roll
add
imul
mov
jb
jo
out
negb
popa
jne,pt
data16
imul
jle
sbb
popa
rolb
add
pop
call
jne
sbb
int
adc
jae,pt
cwtl
or
sub
sub
sub
arpl
jo
cmp
add
cmpsb
xchg
sub
cwtl
add
or
push
je
inc
call
dec
mov
push
outsl
call
sbb
xorb
notl
mov
add
xor
out
push
sbb
stos
lods
faddl
add
das
push
or
stos
xor
flds
add
lret
xor
or
add
in
jle
jle
add
sbb
push
push
outsl
add
dec
add
sahf
adc
xor
dec
clc
cli
add
lret
dec
dec
scas
jp
mov
stos
mov
and
add
mov
or
jge
mov
push
je
cli
add
sub
sahf
das
and
ja
test
popf
push
adc
pop
mov
mov
add
sub
add
or
in
test
xor
add
mov
adc
add
adc
mov
lods
cmp
sahf
loope
inc
pop
out
mov
lock
cmpsb
sbb
jg
rol
lds
add
dec
ljmp
add
loopne
jne
xor
or
cmp
add
call
or
jne
cmp
gs
adc
in
jl
mov
bound
add
mov
incl
clc
test
mov
inc
std
mov
in
test
adc
xor
sti
add
add
mov
cmp
outsl
or
push
sub
lds
nop
mov
lea
adc
movsl
fwait
and
sub
in
stc
sbb
ja
add
fwait
icebp
jnp
adcl
push
mov
add
movsb
orl
add
and
sub
loope
popf
subl
loope
jo
push
cmp
mov
add
cmp
cli
mov
sub
sbb
loopne
add
mov
push
adc
test
mov
test
cmpb
je
nop
push
psubd
xor
cmp
mov
jg
mov
sti
mov
not
scas
mov
leave
xor
iret
add
adc
sti
add
mov
fsubs
testl
test
daa
movl
lldt
mov
mov
push
popf
add
nop
dec
shlb
pop
aam
push
pop
mov
xor
or
ljmp
jbe
mov
add
cld
loop
jmp
mov
add
outsb
or
testb
mov
call
lds
adc
jecxz
call
mov
andb
mov
cmp
clc
push
pop
or
mov
add
movsl
jg
les
and
xor
outsl
sbb
dec
push
push
xor
cmp
push
sbb
repnz
sbb
add
cmp
dec
push
loope
add
and
and
in
add
xor
jo
add
ja
jae
lahf
sub
decl
add
push
add
xlat
repnz
xchg
pop
in
pop
shlb
add
sub
sti
add
sub
ljmp
push
add
xor
les
scas
shlb
jne
mov
mov
jo
mov
rep
mov
dec
fmuls
pop
rcrb
pop
ss
add
lea
cli
sarl
push
push
jmp
pusha
fdivrs
aaa
daa
mov
xor
pusha
cmp
add
inc
sti
arpl
mov
dec
mov
mov
add
popa
pop
dec
sbb
adc
rcr
sub
dec
shl
inc
cmpsl
add
ret
test
cmp
aad
mov
ljmp
xchg
xor
push
add
lock
add
add
sub
aam
rolb
inc
mov
test
xchg
lea
out
push
fnstenv
add
icebp
and
popf
mov
xchg
in
inc
push
int3
add
int
popf
repz
or
test
mov
add
iret
nop
mov
xor
aad
xor
mov
xor
insl
add
or
test
out
jnp
add
adc
ffree
sbb
jno
test
jmp
push
pop
dec
ja
sbb
mov
test
out
fiaddl
mov
push
mov
aaa
dec
jle
mov
sbb
push
leave
les
adcb
add
sub
mov
add
adc
cmp
pop
push
add
out
sbb
add
push
jg
jge
add
lret
jecxz
mov
add
mov
scas
cmp
or
cltd
daa
mov
enter
xchg
lods
test
xor
das
or
pusha
in
cmp
mov
mov
cmp
inc
push
or
push
pusha
out
loopne
fdivrl
xchg
mov
cli
sbb
and
add
aas
mov
jg
cld
add
cmc
adc
pusha
or
cmpsb
in
xchg
adc
add
aas
cmpb
call
add
dec
das
cmp
ret
cmc
stc
dec
adc
add
or
add
inc
add
cmp
ljmp
pop
add
jb
xor
cmp
shll
sub
lret
ret
add
inc
cli
and
dec
fnstsw
add
rcrb
rolb
cmp
mov
es
xor
mov
sub
add
dec
jge
dec
cmp
and
or
dec
aam
rorl
pop
xor
sar
mov
mov
lods
xor
or
pushl
pusha
adc
pop
clc
jmp
add
sbb
inc
cmp
add
add
repz
lods
in
add
dec
and
jge
lods
cmp
sti
cltd
inc
sub
add
xor
inc
push
loopne
push
std
push
sub
ret
xor
jae
mov
push
dec
dec
add
jo
das
ss
push
cmp
js
inc
mov
mov
pop
sbb
xlat
push
mov
mov
out
push
test
dec
lock
jb
ja
outsl
cmpsb
add
cmpsl
inc
data16
adc
out
incl
jnp
add
mov
loope
shll
jns
cld
icebp
pop
fwait
sub
jmp
sbbb
bswap
or
add
xchg
rcrb
xor
je
add
sub
es
movb
pop
jns
in
mov
push
jmp
fs
lock
rdtsc
jle
sbb
jmp
or
cmc
ret
cmp
imul
add
push
scas
in
add
adc
test
ja
add
out
popf
imul
sbb
xchg
xor
push
enter
add
dec
pop
cltd
sbb
xchg
lods
insb
les
aaa
fwait
cltd
xchg
mov
add
jb
mov
xchg
je
loope
jbe
jmp
out
mov
std
xchg
inc
push
and
dec
stos
pushf
pop
pusha
outsl
jle
add
inc
imul
int3
or
gs
add
adc
mov
xchg
dec
ja
xlat
movsl
sar
scas
lock
mov
and
jne
cmp
sbb
popf
into
int
sub
jbe
addb
mov
clc
mov
mov
fcom
in
adc
mov
cs
imul
add
lods
push
movsb
mov
add
xchg
sbb
mov
mov
sahf
sbbb
inc
out
add
pop
call
push
inc
dec
outsl
or
push
es
fldcw
sbb
lds
mov
les
lahf
sti
ret
add
fdivs
incb
aas
lea
filds
mov
mov
sub
push
push
adc
rorl
mov
add
aad
sti
mov
or
inc
push
orb
jp
mov
or
adc
jne
lea
jle
call
add
sarl
fiadds
add
je
push
push
loopne
mov
or
ret
cmpsl
mov
cmp
jge
mov
ret
movsb
negl
and
test
fisubrs
fcos
fnsave
push
mov
pop
cmp
jge
add
ret
adc
jmp
adc
rcrb
jne
loopne
sub
add
daa
rdtsc
cld
hlt
les
cwtl
adc
jo
enter
mov
push
fxch
inc
faddl
add
xor
loopne
inc
aam
addr16
mov
imul
jecxz
js
add
lret
das
loope
dec
aas
or
jle
dec
add
jmp
add
js
xchg
mov
pop
and
lret
dec
jae
outsl
add
inc
push
sub
rorl
mov
jae
arpl
push
dec
pop
jecxz
in
hlt
repz
xor
rorb
add
movsb
aaa
pop
mov
add
mov
pop
cli
inc
and
sub
js
xor
pop
inc
lods
add
push
sub
xchg
mov
jo
ss
mov
cltd
or
lods
jg
sub
inc
mov
add
and
enter
xchg
mov
call
add
mov
push
loope
inc
sbb
movsb
filds
insl
xor
sub
cwtl
push
cmp
fdivs
fdivrp
pusha
add
add
add
add
stc
mov
add
ja
and
add
repz
rolb
je
xchg
inc
mov
loopne
add
sub
cltd
xor
jmp
lret
xor
xchg
sub
mov
pop
and
dec
fiadds
push
jno
sti
cmp
mov
xchg
pop
mov
repz
in
add
lock
sarb
add
jl
jmp
notl
xor
out
lea
mov
add
orb
add
or
aas
add
nopl
movsl
jno
add
xor
add
push
or
ja
xor
add
popf
jno
sahf
inc
leave
mov
add
dec
ret
sub
cmp
pushf
neg
adcb
mov
inc
sub
adc
sbb
sub
inc
xor
adc
daa
add
mov
testb
add
pop
fcom
push
addb
enter
cmp
rolb
pop
addl
fidivl
lods
or
add
sub
mov
add
sub
jp
jns
faddl
adc
add
sbb
inc
adc
or
inc
dec
add
call
int3
add
clc
sub
add
enter
test
orl
cli
add
add
mov
cmc
fs
mov
fwait
add
aaa
shlb
add
adc
pop
add
mov
xor
lea
jnp
sub
add
arpl
mov
lcall
push
pop
nop
addb
mov
in
das
stc
adc
hlt
mov
push
mov
clc
adc
pop
sub
push
mov
rol
or
adc
or
adc
sub
add
mov
mov
xchg
add
dec
sub
xchg
test
add
rclb
add
movsl
push
jb
or
sbb
adcb
sub
cmpsl
adc
pop
das
push
test
push
fsub
pusha
add
sbb
adc
and
mov
unpcklps
fwait
subb
mov
push
adc
stos
lock
add
mov
or
pop
in
cwtl
scas
add
icebp
mov
test
push
and
repnz
roll
std
test
push
or
and
dec
and
jne
aam
or
andb
cmp
inc
pop
in
add
mov
aam
pop
xor
jmp
scas
push
pusha
mul
out
sub
mov
sbb
jb
bound
fbld
inc
pop
outsb
push
jmp
movsl
pusha
fsts
pop
push
imul
add
push
pop
dec
shl
dec
pop
inc
loopne
lret
add
pop
mov
xor
and
enter
adc
hlt
int
mov
dec
mov
xchg
fsubr
cli
push
add
dec
lods
outsb
push
fiadds
adc
mov
enter
add
adc
inc
inc
cmp
add
test
pop
out
bound
add
lea
mov
mov
cmp
inc
xchg
jmp
add
jo
imul
add
test
push
inc
dec
lret
adc
jl
cmp
ucomiss
add
in
mov
mov
stc
mov
test
xor
lret
add
pop
dec
xor
cmp
subb
xchg
xor
fsubs
or
mov
movsl
add
dec
pop
aam
loop
sub
rcll
add
push
mov
add
dec
mov
pop
mov
add
inc
add
pop
mov
add
pop
sbb
jmp
sbb
adcl
pushf
add
add
mov
xchg
push
and
xchg
mov
shlb
cltd
lds
cmc
cld
out
add
mov
adc
cwtl
andl
adc
xchg
add
enter
xor
adc
add
adc
and
nop
ret
inc
dec
add
pop
mov
insl
mov
push
sub
lods
adc
add
sub
ret
shll
repnz
in
xor
xchg
icebp
xchg
inc
jl
sbb
in
shll
xor
mov
in
jne
imul
inc
insb
cmp
xchg
aas
lods
add
add
test
adc
jp
test
add
les
push
jb
subb
gs
lahf
sbb
add
outsl
in
ja
fs
inc
push
dec
and
addps
inc
sbb
or
sub
adc
mov
je
add
stc
js
mov
add
subl
addb
test
loopne
push
pop
push
push
add
push
push
jbe
jae
push
jle
adc
sahf
xor
add
imul
add
and
sysret
mov
rorl
add
xchg
cmpl
mov
adc
das
das
into
dec
ffree
xchg
sahf
lea
adc
imul
je
xor
mov
and
xchg
cmp
jmp
dec
inc
pop
rorl
fdivs
popa
pop
fs
jmp
and
and
jmp
arpl
sarb
mov
mov
cmp
mov
xchg
js
mov
add
test
roll
hlt
jl
and
mov
aam
adc
push
inc
jae
lock
add
je
cld
cmpl
mov
cmp
jmp
xor
pop
dec
jg
out
adc
addr16
adc
mov
pop
mov
repnz
shll
inc
push
test
inc
push
add
push
add
jne
pop
in
xor
or
loopne
insl
in
scas
mulb
add
cmpb
or
jge
add
shll
push
fnstsw
pop
js
inc
andb
pop
dec
mov
test
inc
add
add
add
sub
mov
add
or
ret
or
repnz
clc
add
sbb
push
cwtl
dec
add
test
jmp
fiadds
ljmp
inc
add
mov
sbb
pusha
sbb
inc
imul
shrb
loop
cld
push
or
test
hlt
in
pop
pop
pop
sbb
pop
int
fcoms
add
sub
mov
mov
std
dec
push
lea
in
add
xchg
cmc
sbb
in
mov
inc
pop
adc
in
enter
cwtl
and
add
jmp
xchg
push
sbb
pusha
test
mov
dec
repnz
pop
dec
push
shll
and
pushf
add
pop
jmp
pop
mov
rorb
push
jl
push
mov
std
and
push
jmp
jb
add
test
pop
mov
add
sbb
mov
aaa
jb
push
and
repnz
rclb
dec
les
icebp
add
out
or
add
jl
add
test
push
mov
pop
lea
shlb
jle
dec
pop
clc
sbb
mov
in
or
add
es
adc
icebp
lret
loope
clc
adc
jmp
add
or
inc
add
xor
pop
shlb
add
sub
add
and
add
mov
mov
in
push
or
enter
xor
cli
cwtl
jnp
add
mov
call
xchg
xchg
cmpsb
and
fcoms
jmp
jbe
add
sub
adc
rolb
pop
enter
add
test
push
fcoms
nop
add
mov
sbb
or
loopne
xor
in
inc
ds
xor
add
pop
pop
sbbb
cmp
push
add
adc
dec
jb
mov
in
repz
add
lahf
add
shlb
jae
ds
mov
jl
adc
sub
test
jle
add
mov
subl
sub
or
or
add
pop
pop
repnz
xchg
pop
xor
lods
nop
lea
clc
sbb
lods
add
rclb
add
push
dec
mov
add
inc
add
lahf
sti
add
adc
pop
add
movsb
stos
or
js
add
stos
sahf
cmc
dec
fldt
push
cmp
roll
movl
push
rclb
mov
dec
mulb
enter
dec
or
xchg
fs
roll
and
mov
or
push
ss
or
cmp
pop
inc
in
and
inc
dec
or
cmp
mov
pop
sub
cmp
dec
clc
cwtl
xlat
scas
flds
pushf
inc
loop
push
out
pop
mov
ja
or
add
fs
mov
jg
out
pop
call
push
popa
add
imul
daa
add
xchg
not
dec
dec
mov
mov
mov
add
add
sahf
adc
jnp
add
into
push
jp
mov
and
mov
outsl
add
lock
push
mov
scas
or
mov
nop
lcall
stos
repnz
lock
add
xor
jge
add
fimull
and
xchg
inc
push
push
push
lods
loopne
add
push
xchg
stos
sub
mov
lret
orl
lea
loop
xchg
sbb
cmp
mov
cld
jmp
add
in
pushl
dec
mov
addr16
pop
sub
mov
movsb
add
inc
adc
movsl
std
in
xchg
stos
outsb
adc
pushf
add
aad
adc
or
add
insl
xor
xor
test
les
bound
or
jns
jmp
mov
inc
pop
cmovns
movsb
popa
decb
aas
aas
or
pop
cmpl
mov
sbb
arpl
adc
add
les
add
sub
aam
xorb
sti
add
jb
insb
dec
mov
xor
add
push
pop
loope
pushf
nop
ds
jmp
add
sbb
cmp
jae
mov
add
dec
mov
nop
test
enter
sbb
adc
push
je
push
cld
pop
add
sbb
movsb
push
lock
xchg
inc
fadd
popf
sub
add
inc
jne
dec
fs
mov
popf
add
xor
fcompl
add
push
xor
out
add
xlat
cltd
sbb
add
or
adc
inc
push
pop
and
adc
sbb
inc
sbb
add
jb
dec
out
inc
jg
cld
adc
inc
ds
add
xchg
loopne
dec
inc
sub
add
cmpsl
xor
nop
call
iret
inc
mov
psubusw
sbb
call
adc
sub
sub
dec
stos
lds
add
imul
add
add
outsl
xchg
sub
mov
mov
adc
fnstenv
fcmovnb
jo
movsl
icebp
add
rcl
sbbb
mov
push
push
add
add
call
xchg
add
cmpsb
cs
xchg
pop
cmp
xchg
dec
cld
scas
aas
or
push
ss
jl
orb
xor
jmp
add
rcrb
mov
fwait
and
xor
xor
add
cwtl
add
dec
cmp
or
add
clc
ja
testl
xchg
imul
cwtl
add
add
mov
cs
inc
or
mov
lock
adc
adc
mov
imull
xchg
sub
movsb
push
insl
in
insb
mov
pop
add
push
lds
jle
adc
repnz
fiadds
stc
fsubrs
cli
add
mov
lods
pushf
cmpb
je
add
sar
xchg
adc
dec
clc
les
ja
repz
mov
add
imul
inc
add
or
cmp
or
jp
and
xchg
add
bound
add
stos
mov
cmp
adc
ja
call
enter
ret
popa
add
fcmovbe
add
pusha
in
test
mov
in
lcall
xorb
add
or
or
mov
cmp
add
mov
jle
sbb
push
cli
add
jmp
cmp
scas
sub
add
push
inc
daa
push
lea
add
stos
mov
mov
add
and
cmp
xor
repnz
jns
mov
cmp
jmp
inc
xchg
xchg
shlb
pop
mov
je
or
xor
pop
mov
add
adc
cmp
jo
xchg
add
mov
xchg
xchg
pop
xlat
add
push
nop
pop
push
mov
push
out
jne
and
je
add
xor
push
add
adc
test
fistpll
jl
add
and
adc
daa
or
clc
popf
or
sahf
shrl
mov
xchg
add
xlat
in
and
mov
arpl
or
cwtl
js
add
je
jle
mov
lods
add
scas
xor
xor
add
unpcklps
loop,pt
pop
xor
sbb
and
add
adc
jmp
js
js
add
movsl
sbb
xchg
pusha
and
adc
add
add
and
testb
mov
sub
dec
repnz
fidivrs
mov
lods
test
and
mov
and
pusha
testl
and
add
loope
sub
xor
mov
xchg
lock
add
das
test
movsb
sub
in
and
xor
push
jnp
pop
stos
cmp
hlt
leave
cmp
add
lret
mov
call
and
ss
add
inc
arpl
mov
xlat
xchg
inc
enter
vfrczpd
add
cmpsb
pop
fisubs
les
fmuls
outsl
push
mov
cli
cmp
rcrb
adc
xlat
fcmovnbe
aam
enter
mov
test
les
mov
nop
add
mov
shl
and
mov
mov
add
or
jmp
call
daa
sbb
pop
push
movsb
sbb
pushf
or
and
mov
add
mov
pop
out
jecxz
xchg
shlb
sub
in
add
and
ja
push
xchg
add
jb
sbbl
cwtl
lods
add
and
in
mov
insb
sbb
push
push
pop
or
in
sub
mov
cmp
hlt
imul
add
sbb
sbb
cmp
ret
rcl
mov
xchg
cli
push
fisubrl
push
xchg
add
jl,pt
daa
testb
js
sbb
dec
or
sbb
jne
filds
mov
out
sar
mov
jbe
dec
push
cmp
syscall
jg
mov
in
adc
add
push
mov
sbb
cmpb
jne
ret
pop
add
mov
lds
mov
jle
xchg
add
xchg
push
add
movl
cmp
or
pop
pop
lret
rcll
mov
add
mov
clc
pop
mov
fidivrl
cmp
add
mov
dec
push
jo
add
mov
xlat
sbb
scas
lahf
sbb
sbb
add
call
add
rcrb
jns
shl
cld
add
xor
sbb
mov
add
into
adc
inc
fmuls
pop
aas
or
lock
add
test
sbb
lods
mov
pop
add
incl
mov
sbb
aas
dec
add
xlat
faddl
add
cwtl
add
stc
jle
cmp
sbb
add
imull
xor
mov
inc
loope
cmp
push
jg
js
dec
jne
add
icebp
movsb
stc
and
sbb
xchg
outsb
jnp
inc
mov
cmpsb
sub
or
mov
sbb
addl
push
or
mov
sub
jb
mov
cmp
xlat
or
mov
add
in
lods
cmpsb
sbb
enter
xchg
mulb
andl
fadd
clc
sub
stos
insl
and
js
lods
repnz
mov
add
push
add
data16
aad
add
fidivl
jge
popa
lfs
jmp
and
push
adc
mov
jo
fnsave
and
inc
sbb
adc
jo
or
or
adcb
add
dec
mov
xor
loope
mov
lahf
add
push
mov
inc
mov
sub
ljmp
add
dec
pop
out
shlb
pop
jnp
packssdw
inc
cmpl
push
jne
mov
movsb
dec
dec
and
hlt
daa
test
sbb
and
jne
add
push
xlat
sarl
and
xchg
sbb
nop
popf
repnz
push
test
inc
adcb
call
add
je
add
xchg
dec
xor
das
data16
xchg
lods
clc
out
add
lock
push
push
imul
dec
mov
test
cmp
dec
cmp
add
das
pushf
hlt
je
add
cmp
xor
mov
dec
adc
push
and
test
jp
fucomip
dec
in
xor
jo
mov
call
test
push
mov
sub
add
imul
dec
in
xor
addr16
imul
nop
sub
fadds
adc
cmp
or
imul
add
adc
dec
adc
mov
rsqrtps
lds
fiaddl
jno
dec
mov
push
rorb
nop
jnp
sbb
mov
addb
sub
pop
inc
dec
push
mov
addl
js
sub
add
adc
sub
daa
mov
and
shlb
dec
mov
add
rorb
add
mov
dec
xor
pop
jb
jmp
add
jmp
out
arpl
push
pop
subb
inc
repnz
cmp
js
stos
cmpsl
push
ljmp
dec
sbb
xlat
dec
pop
and
sub
mov
add
dec
mov
sbb
push
xchg
add
jne
das
cli
ss
sbb
mov
jmp
or
and
or
dec
and
aas
sbb
fs
je
ja
mov
add
inc
dec
dec
and
out
add
push
imul
insb
xchg
mov
repz
cmp
pop
testb
xchg
fcomps
adc
imul
les
add
mov
dec
add
in
xor
movsb
and
xor
pop
rolb
mov
mov
int
push
jg
clc
jle
aas
sub
cmp
pushf
or
jo
mov
jp
stos
inc
cmp
adc
dec
ja
js
andb
inc
movsb
add
loope
and
push
or
add
dec
and
rol
mov
outsb
mov
mov
cmp
and
push
inc
push
push
jb
das
dec
cmp
int3
add
mov
fimuls
out
pop
mov
push
cmp
scas
into
xchg
add
sub
xlat
ds
int3
add
cmc
and
dec
cld
mov
lret
pop
lock
inc
xor
mov
sbb
cmpb
jo
sbb
rorl
rcrl
add
or
add
lods
nopl
add
sbb
lahf
repz
inc
jb
cltd
fsubr
push
add
test
insl
xchg
xchg
and
out
shlb
add
jmp
jge
cltd
adc
sub
mov
sub
xor
add
xchg
insb
scas
andl
rol
clc
cmp
dec
sub
stos
xor
jp
outsl
add
pop
mov
hlt
add
mov
pop
fstpl
push
adc
push
jne
push
push
out
inc
push
add
add
outsb
ret
in
add
and
sbb
int
adc
cmp
mov
iret
add
mov
mov
lds
xchg
mov
and
add
out
fcmovnb
loop
fcoms
jg
sbb
push
aaa
add
adc
rolb
mov
add
pop
movsl
hlt
loopne
addb
mov
add
call
pop
in
in
mov
xchg
jnp
inc
add
imul
and
outsl
pop
jo
jns
in
inc
addb
je
ret
add
and
jne
mov
insl
mov
push
adc
lea
cmp
inc
dec
popa
nop
push
mov
or
js
psadbw
jge
clc
decl
jae,pn
mov
cmp
push
outsl
sub
sub
imul
dec
add
and
push
test
std
cmpl
sub
sarl
add
xchg
sbb
dec
xchg
add
xchg
test
mov
mov
inc
push
sahf
pop
pop
add
movsb
aaa
xchg
notl
inc
add
aam
pop
leave
mov
lea
add
jp
and
add
stc
sub
xchg
sub
mov
jge
xchg
enter
add
jle
dec
add
cmp
in
xchg
xchg
rolb
push
mov
in
and
mov
outsl
ss
nop
cmpsl
add
sub
mov
add
mov
std
add
aas
sub
sbb
addb
sahf
and
jmp
rolb
add
xchg
push
cmpb
or
xchg
jne
mov
add
jmp
ds
mov
sub
roll
pusha
lds
or
and
movsb
xchg
pop
add
ds
incb
or
fidivrl
sub
sbb
minps
leave
mov
lahf
fdivs
inc
movsb
mov
std
out
sub
sbb
dec
push
pop
or
and
cmovne
ds
jle
stc
fdiv
daa
add
dec
aam
push
sub
lds
pusha
xlat
clc
push
add
cmp
or
daa
inc
sub
ds
adc
pusha
hlt
call
scas
idivb
lret
sbb
inc
hlt
jnp
rcr
push
jo
je
movsb
stos
mov
mov
inc
cmp
adc
xchg
imul
and
adc
in
cmpsb
push
adc
sbb
add
cmc
subb
shrb
add
scas
jl
fstpl
loopne
add
push
orb
and
jno
jb
add
pusha
push
fs
pop
clc
bound
cmp
orb
xchg
pop
sahf
jo
inc
mov
jmp
dec
test
imul
loope
mov
test
sub
andb
incl
inc
add
mov
mov
mov
lods
and
inc
enter
mov
or
sbb
faddl
loopne
pushf
xor
cmpsl
xchg
test
lock
insb
pusha
mov
xchg
fld
cmp
pop
mov
fdivs
test
add
push
adc
jne
imul
dec
js
jns
clc
cmpsb
or
arpl
adc
arpl
adc
es
add
imul
into
jne
and
xchg
cmp
sqrtps
add
pop
push
call
lret
or
xor
ja,pn
aas
jle
subb
aad
mov
add
pop
bound
add
int3
mov
aam
jbe
mov
cs
in
addb
xor
mov
in
lret
sbb
mov
addb
insl
add
aaa
jbe
cmp
sbb
xor
or
adc
insl
jno
imul
aas
cltd
mov
push
pop
sbb
mov
aam
pop
in
add
add
jns
test
mov
jmp
xchg
pushf
dec
dec
inc
add
pusha
les
dec
psadbw
dec
mov
xor
push
cwtl
cmp
adc
cmp
dec
and
sub
jne
sbb
mov
shr
movb
push
add
pop
dec
in
and
inc
inc
in
add
jg
add
sub
mov
ds
add
push
dec
add
nop
fs
sub
movsb
push
pop
sub
cmpsl
or
ret
push
fcompl
lea
xchg
mov
aad
jno
addb
push
mov
mov
divl
sub
adc
xchg
aas
ficomps
test
test
out
push
or
daa
xchg
add
inc
test
mov
add
mov
xor
add
and
pop
nop
movsb
inc
shl
pop
xchg
pop
adcb
pusha
dec
ret
shl
mov
fldenv
or
and
mov
or
mov
pushf
mov
mov
xchg
aam
repz
pushl
add
lea
pop
add
sub
xchg
out
and
cmp
leave
xchg
repz
xor
add
mov
icebp
rorb
push
and
pop
fs
push
add
ret
fwait
cld
repz
add
jae
pop
ja
addr16
add
inc
pop
and
pusha
jg
cli
adc
cmpsb
push
add
and
sub
insl
push
dec
xchg
mov
and
lock
adc
xor
mov
enter
adc
dec
ret
lret
push
add
xor
cmp
jb
dec
push
adc
push
mov
lods
inc
test
cmp
pop
sbb
jmp
inc
add
daa
cs
adc
add
cmpsb
sub
or
mov
outsb
pop
stos
adc
imulb
movsb
cmp
test
in
nop
lods
insl
push
xchg
push
pop
jbe
add
mov
ret
ss
pop
add
dec
jo
pop
shl
in
mov
sub
mov
jae
leave
rcll
add
pop
movsb
int3
sub
popa
mov
and
lahf
push
cmp
jo
insb
imul
fimuls
push
cmp
jp
push
shrb
sub
fldt
cld
and
ss
adc
mov
fldl
sub
cmp
jbe
fstpl
aaa
lock
add
xor
cmp
lret
clc
adc
add
jmp
stos
movsb
adcb
in
movsb
add
frstor
rcr
adc
and
cwtl
aaa
add
dec
imul
leave
push
lds
mov
push
pop
push
adc
mov
inc
add
repz
cmp
add
inc
xor
in
pop
adc
std
jle
cwtl
xor
cmpsl
sub
ss
cmp
je
jo
jb
addr16
inc
bound
fs
sub
call
and
mov
add
outsb
add
gs
add
bound
jnp
loop
rclb
cltd
push
mov
mov
and
jo
and
pop
dec
dec
add
sarl
or
push
shrb
jl
push
movsl
out
add
jno
xchg
fisttpl
daa
jb
xchg
or
mov
stc
pop
jno
ja
jae
jbe
jne
add
jo
fwait
nop
in
ljmp
subb
sub
fs
pop
sub
cs
pop
and
jg
stos
and
lods
rclb
push
add
call
jle
les
mov
cltd
sub
addl
cmpb
enter
add
je
dec
into
decb
adc
push
push
add
fwait
jg
sub
das
pop
insl
cmpl
mov
cmp
and
daa
roll
xor
add
cmp
and
or
mov
mov
pop
push
nop
cmpsb
jp
sbb
dec
jne
push
cli
int3
sbb
cmpb
dec
inc
ljmp
mul
ret
add
or
aas
mov
bswap
ja
or
shll
push
add
mov
jl
rcl
jmp
push
adc
dec
push
adc
popa
push
ss
xchg
pop
push
add
leave
mov
add
enter
mov
pop
add
xlat
movsl
cmc
cmp
repz
daa
cmp
imul
call
mov
nop
add
xchg
and
cli
mov
sbb
sub
sub
push
in
inc
push
add
orl
mov
pusha
divl
adc
jo
inc
xor
insb
add
add
mov
inc
push
push
xor
add
orl
inc
sub
gs
mov
test
inc
jecxz
adc
cmp
fsubl
imul
out
sub
cmp
inc
mov
xlat
xor
xor
pop
idivb
jne
sub
push
cmp
inc
add
js
popa
ss
jo
add
repz
fwait
push
les
add
or
push
loopne
jb
ja
adc
xorb
das
pop
sbb
dec
adc
jl
pop
add
xor
hlt
test
aas
cmp
cmp
push
clc
jmp
cmp
and
pusha
cmp
lret
test
inc
xor
mov
jmp
sbb
or
xor
inc
push
add
add
adc
lcall
or
mov
adcb
fisttpll
test
and
inc
pushf
lods
adc
jnp
or
jle
aas
mov
je
daa
sbb
inc
sub
add
enter
and
add
xlat
lock
mov
or
cwtl
dec
scas
add
nop
les
loopne
cmp
bound
arpl
sub
fsubrs
mov
cld
xor
leave
dec
cmp
rorb
pop
pop
aad
jmp
bound
mov
in
add
pop
not
add
shlb
std
movsb
mov
add
out
mov
mov
lret
sti
add
push
add
jecxz
dec
jb
add
push
scas
xor
popf
push
mov
test
mov
loopne
or
add
ljmp
cs
inc
ljmp
sbb
add
push
fs
mov
or
loopne
inc
fsubr
xor
inc
fstl
cltd
add
add
or
pop
sub
test
out
or
std
push
xor
mov
or
add
jge
mov
add
push
add
lret
sub
scas
shlb
test
add
stos
add
cld
int3
call
add
scas
dec
jne
imul
and
cmpsb
adc
add
xor
mov
sbb
lea
imul
mov
sbb
pop
fmull
addb
cli
and
scas
in
cld
movsb
add
push
rorl
fcoms
insb
pop
mov
pop
mov
loopne
movsb
cmp
mov
add
cld
lock
out
daa
clc
jo
add
icebp
xorb
mov
add
or
loop
add
into
loopne
or
call
xchg
pop
ret
nop
out
aaa
sbb
pop
add
add
add
inc
orl
pop
and
or
add
mov
loopne
mov
std
xchg
pushf
mov
out
fmull
add
push
and
add
movb
add
add
or
or
push
ljmp
cld
xchg
repnz
add
xor
inc
call
add
push
dec
add
mov
out
add
sti
pop
cmp
loop
filds
repnz
cmp
je
add
cmp
xor
out
fstpl
add
add
mov
mov
jp
jae
add
rcrb
cwtl
aam
mov
mov
enter
loopne
xchg
lock
adc
das
pop
stos
and
aad
xchg
add
hlt
sub
sub
pop
aam
xor
js
cld
add
les
cs
inc
andb
pop
aas
or
push
mov
mov
add
cmpsb
cmp
ret
add
and
nop
lock
xor
jge
pop
add
jnp
inc
in
xor
js
add
sub
dec
lods
push
jmp
inc
and
ljmp
adc
incl
cmp
xchg
jb
test
enter
mov
jp
cmp
add
sub
scas
nop
loope
mov
push
ja
sbb
jnp
mov
int
xchg
ljmp
fists
inc
iret
push
and
sbb
notb
add
stc
cmp
in
add
test
mov
jne
aaa
sbb
stos
add
adc
xor
or
xchg
mov
movsb
cmp
xchg
or
pop
jnp
mov
dec
test
cmpsl
js
lahf
in
out
add
add
mov
mov
jne
add
cmp
mov
dec
mov
pop
xchg
push
jecxz
xchg
les
rcrb
aad
ret
add
sub
call
movl
pop
fiadds
filds
scas
sahf
popf
or
clc
jae
cmp
mov
cltd
and
lcall
or
lahf
mov
add
xchg
jae
push
xlat
push
or
hlt
mov
adc
mov
add
ljmp
lea
icebp
add
fs
mov
sti
and
and
adc
jne
add
add
jge
cmp
mov
addb
add
lret
and
pop
or
inc
sub
push
jbe
and
xlat
cmpb
int
sbb
adc
sbb
loop
jmp
mov
sti
fwait
add
enter
push
test
sub
sbb
aaa
add
sti
stos
sbb
lea
pop
in
lds
shrl
add
clc
hlt
mov
sbb
jno
xor
scas
imul
push
mov
add
sbb
and
push
fstpt
sbb
xor
add
fidivrl
verw
pop
lcall
xchg
pop
jne
rcrl
add
mov
inc
and
hlt
pop
push
sarb
movb
sub
inc
cld
mov
add
icebp
jae
mov
add
std
shll
pop
cwtl
or
mov
bound
push
sub
and
movl
xor
push
in
add
pop
out
jbe
add
stos
iret
addb
cld
jne
push
incb
inc
and
mov
clc
add
or
stc
cmp
xor
sbbb
ds
stos
add
cmp
sbb
adc
dec
pop
sbb
push
int3
xor
movhps
inc
aas
inc
into
adc
add
dec
mov
cmp
jl
sub
or
sub
in
pusha
out
daa
add
xchg
or
lret
sub
ficoml
xor
sbb
in
stos
das
cmp
test
sub
pusha
fwait
mov
shlb
mov
inc
clc
out
add
xchg
hlt
mov
push
push
shrl
jl
xlat
mov
add
push
adc
pop
push
sub
sbb
inc
gs
aas
movsb
icebp
add
in
jmp
and
imul
arpl
fildll
loopne
loop
pop
rclb
adc
cmp
xchg
mov
rolb
in
ret
mov
les
cwtl
test
lock
pop
jbe
jl
add
fs
jne
enter
inc
adc
out
in
fadds
cld
loope
ss
cmp
add
add
aam
cmp
xchg
mov
fcoml
mov
cmp
mov
lods
mov
or
pop
adc
pop
sub
push
mov
lret
repnz
mov
mov
orb
call
out
repz
pop
xchg
test
lock
push
add
push
push
or
add
mov
sahf
insl
xchg
out
jp
add
mov
push
filds
into
add
je
push
inc
dec
sub
jecxz
and
test
ret
mov
int3
push
fistps
push
mov
inc
add
mov
pop
orl
inc
add
ret
xchg
inc
out
add
cld
dec
ss
push
gs
push
inc
fisubrl
loopne
add
cmp
add
push
cwtl
xchg
pop
shr
leave
rolb
sbb
push
clc
testb
pop
icebp
outsb
inc
cmp
or
lcall
jmp
sbbb
sub
subl
add
shlb
psadbw
iret
call
das
je
lret
or
add
inc
mov
test
lds
push
inc
cmpsb
pop
ret
mov
rcrb
ja
add
or
test
aaa
cs
push
nop
pop
mov
fildl
mov
clc
repz
jne
idivl
shlb
dec
xchg
adc
call
sub
loopne
testb
loop
sbb
jnp
add
jl
cmp
pop
popl
sbb
add
icebp
jae
jo
pop
add
dec
nop
and
imul
clc
sarb
dec
dec
pop
mov
dec
aaa
movsb
mov
out
mov
pusha
shrb
clc
xchg
test
add
loopne
push
add
test
push
je
cld
push
cmpsl
inc
aam
dec
repnz
or
push
lahf
popf
add
xchg
rolb
test
push
push
fs
clc
outsl
aas
adc
mov
jne
cld
mov
in
lods
dec
ja
push
dec
add
jge
in
lahf
pop
insl
ja
add
xor
sub
jge
dec
dec
add
ror
push
lds
sbb
fs
lea
addb
imul
js
shlb
rclb
add
adc
xchg
aaa
mov
sub
into
or
mov
xlat
movsb
adc
rolb
push
add
lock
add
jg
mov
cli
add
loope
mov
jp
xchg
ljmp
iret
or
jae
sbb
enter
adc
xor
push
sbb
add
mov
je
pop
mov
mov
xchg
call
dec
or
adc
dec
jmp
adc
inc
add
or
test
cmp
xor
cli
xor
cmpsb
sbb
jne
cwtl
jno
add
enter
mov
jmp
rolb
bound
stos
and
je
test
cmp
inc
add
imul
dec
cli
and
cmp
fwait
inc
mov
in
add
adc
push
or
mov
dec
add
push
repz
loopne
add
cmpb
orl
lea
shrb
std
lcall
dec
push
add
shr
ljmp
jmp
je
shrb
cmpsl
shlb
dec
test
jl
add
add
pop
jbe
push
aas
loope
cmpb
fisttps
dec
jne
add
cmpsb
das
fcoms
sbb
dec
lret
test
repnz
scas
repz
stos
inc
int
sbb
sbb
mov
inc
push
outsl
clc
xlat
lock
or
ret
add
adc
gs
add
out
sub
add
push
inc
mov
test
xchg
add
mov
pusha
add
xchg
pop
inc
mov
or
rorb
stos
sub
fdivrp
add
mov
pop
inc
xor
inc
adc
add
add
cmp
pop
aaa
jne
int3
stos
add
lods
pop
xchg
push
jp
cmp
cs
aad
popa
cmp
in
push
jl
jb
and
daa
mov
add
xor
sbb
xor
test
push
sbb
movsl
or
movsb
add
nop
xor
enter
push
adc
add
xchg
add
sbb
and
cmp
sbb
jmp
in
or
adc
push
xor
push
or
test
add
and
shrb
cltd
sub
sbb
adc
adc
pushf
xchg
out
loopne
pop
jmp
mov
mov
filds
js
hlt
ljmp
and
stos
mov
lods
sbb
add
les
addb
enter
mov
sub
repz
mov
rcrl
jbe
add
jmp
or
inc
dec
sti
add
xchg
xor
add
pop
and
add
jg
loopne
adc
or
push
add
outsl
leave
fdivrs
pop
or
mov
cmp
mov
push
push
int
addr16
add
jne
sub
cmp
test
or
imul
scas
mov
add
in
mov
cmp
je
inc
jmp
jecxz
add
mov
ret
push
andl
enter
pop
add
loop
lds
shll
shll
fildl
cmp
lock
sbb
js
or
cmpb
out
loopne
pop
inc
popa
add
pop
jnp
pop
sub
lret
push
filds
fnstcw
cmp
add
xchg
enter
push
jno
stos
dec
add
inc
stc
pop
cmp
flds
lea
pop
pop
jmp
add
loopne
cld
pop
cmp
mov
dec
data16
mov
mov
mov
rorb
sbb
inc
xchg
cmp
sbb
in
push
pushf
lock
sbb
mov
call
jle
aas
add
add
out
push
icebp
pop
add
sub
sti
loopne
add
push
push
cmpsl
les
add
and
jbe
aam
fildl
jg
pmaddwd
lods
mov
rorb
gs
push
lock
add
or
loopne
add
loopne
xor
rcrb
add
divw
out
inc
push
jge
mov
or
sub
pusha
mov
data16
xchg
mov
loopne
in
bound
add
add
add
leave
adc
loope
mulb
mov
bound
cmpsb
mov
aam
mov
stos
xchg
into
loopne
adc
or
add
dec
je
xor
shrb
adc
pop
and
cmpb
add
aaa
je
jne
sbbb
add
dec
shr
add
adc
pop
mov
aad
sub
call
push
add
xor
add
ljmp
call
jp
mov
pop
clc
mov
popa
inc
mov
test
rcrb
cmp
inc
add
aam
mov
scas
hlt
repnz
mov
ja
test
add
fiadds
decl
xchg
nop
inc
mov
push
add
push
aas
movsb
push
or
push
add
or
bnd
fcomps
popf
jno
push
mov
lret
sub
pop
lahf
std
fmull
add
inc
add
test
add
push
add
mov
ljmp
mov
dec
or
mov
fistl
xchg
add
add
inc
mov
or
add
popf
sub
add
pop
mov
das
testl
jb
adc
add
cmp
rolb
push
mov
add
cmpsb
stc
jle
add
mov
adc
dec
or
clc
ja
xor
addb
inc
pop
pop
cli
loopne
add
jb
cmp
cmp
ds
out
pop
testl
test
mov
sbb
int
clc
lcall
lret
add
loope
push
add
arpl
cwtl
jo
add
mulb
test
xchg
iret
xor
out
out
shrb
setae
mov
popa
mov
test
add
xlat
mov
pop
loopne
or
add
pop
faddl
jle
pop
mov
add
xlat
imul
push
cmp
roll
cli
xchg
jo
sub
nop
lret
lods
pop
mov
jmp
and
inc
aam
iret
adc
les
push
inc
sbb
xchg
add
cmp
pop
sub
out
and
je
jo
push
jmp
cmpl
das
push
hlt
xor
add
inc
push
dec
into
inc
and
add
rcrb
sbb
push
ret
sbb
popf
testl
push
mov
cmp
ror
sarb
paddusw
pop
lock
sbb
cld
nop
sahf
outsb
rorl
sbb
insb
cmc
jle
pop
or
add
mov
or
clc
and
push
enter
dec
jo
add
adc
inc
cmp
xor
inc
cmp
jo
add
sub
rep
dec
add
xchg
scas
and
add
arpl
adc
pop
add
jb
ret
push
mov
imul
sbb
aas
cld
pop
cmp
inc
mov
mov
push
push
sub
rorb
xor
inc
add
orl
je
ljmp
pop
test
mov
add
push
mov
enter
pop
xlat
push
or
adc
lds
shl
mov
add
sub
pop
and
add
push
inc
add
inc
call
loope
add
cmp
sub
movsb
dec
out
xor
pusha
leave
notb
sar
mov
add
pop
push
sub
push
jmp
sbb
cmpsb
cld
sbb
movsl
and
adc
add
repnz
lea
add
mov
aaa
rol
sahf
pop
pop
ds
inc
add
mull
mov
inc
pop
add
ja
daa
mov
insb
psrlq
mov
sarl
mov
sub
or
jl
or
mov
mov
shll
xor
add
or
add
add
adc
jne
sbb
mov
loopne
and
adc
add
pop
movsl
jge
in
pop
add
insb
je
rcrl
ret
pop
or
rcr
add
aad
roll
test
dec
mov
add
cs
and
add
sub
mov
repnz
and
pop
call
inc
roll
jle
inc
add
adc
lock
jge
rolb
sar
add
out
or
popa
push
fsubr
add
test
xorb
and
pop
aam
add
sbb
push
xchg
dec
ret
popl
or
leave
mov
add
xchg
ds
push
scas
adc
dec
xchg
insb
push
add
or
cmp
mov
jnp
adc
add
and
add
mov
inc
mov
repnz
push
imul
dec
sub
push
es
sti
add
inc
mov
js
sbb
xchg
mov
int3
mov
push
add
leave
and
dec
jbe
and
jnp
rcrb
pop
cld
inc
add
lods
jp
imul
add
push
sub
ret
mov
cld
pop
aam
xor
jnp
cmp
xchg
sub
call
repz
mov
add
push
add
or
das
test
movsb
call
adcl
cld
std
and
sbb
cmp
xor
or
fdiv
xor
cmp
and
loopne
ja
sub
inc
fs
mov
dec
push
inc
push
insb
sbb
pushf
pop
ljmp
stc
movsl
inc
push
mov
int3
pop
push
sbb
faddl
add
mov
test
cli
nop
notb
xchg
icebp
test
adc
jmp
bound
stc
lret
inc
add
cmpl
inc
test
clc
or
stos
test
cwtl
add
out
xchg
insb
pop
and
out
jg
rorl
iret
add
and
loopne
jl
add
jp
out
push
sbb
cmpsb
pop
xchg
fsubl
add
aaa
lods
pop
pop
dec
add
iret
inc
pop
mov
mov
loopne
cmc
mov
roll
mov
ds
add
mov
cmp
add
andb
clc
repnz
das
xchg
mov
bound
sbb
das
sbb
sbbb
pop
mov
sub
sub
push
fisubrl
out
pop
repnz
call
sbb
pop
mov
push
int
sub
cwtl
roll
inc
dec
jae
adc
jb
sub
dec
daa
sahf
sub
jmp
xor
mov
pop
mov
mov
push
mov
aaa
xchg
sbb
push
dec
push
push
aas
mov
lret
mov
fnstcw
movsb
dec
repz
nop
xchg
or
stc
je
out
xor
adc
jnp
pop
inc
sub
fwait
pop
add
xorb
cli
dec
add
jl
lods
aad
cld
sub
add
call
inc
cld
jae
and
jg
xor
dec
add
rorl
jecxz
jl
clc
outsl
push
add
and
enter
testl
add
rolb
ds
add
jmp
push
sbb
test
cmp
dec
popa
sub
add
fnsave
inc
je
mov
push
cmp
andb
mov
subb
mov
jmp
mov
inc
pop
mov
pop
and
pusha
xor
xor
add
int3
arpl
cwtl
dec
jnp
push
push
rcrb
jl
aad
pop
pop
cli
imul
pusha
adc
lods
ds
loopne
test
and
js
jmp
lock
jecxz
mov
xor
sub
xchg
mov
ret
add
dec
add
mov
inc
mov
push
jl
and
push
push
jns
repz
nop
cli
loop
test
fs
roll
jbe
les
jnp
and
cli
jecxz
stos
mov
add
ret
das
jle
inc
aaa
mov
fistpll
insl
inc
add
dec
rolb
pop
xor
adc
lahf
xchg
andb
negl
fldenv
xchg
lcall
pop
inc
in
inc
sbb
pop
cmpl
ret
test
dec
stos
add
imul
sub
in
repnz
mov
sar
add
mov
scas
fldenv
loopne
push
add
inc
add
inc
and
sub
ja
or
in
cs
pusha
stos
cwtl
jb
add
push
jge
movsb
dec
add
adc
sbb
pop
repnz
add
lock
dec
movsl
aam
mov
bound
ror
or
inc
arpl
mov
adc
cs
add
adc
push
sub
jbe
push
add
push
pop
adc
inc
inc
and
cmp
nop
ss
or
sbb
adc
and
xchg
fdivrs
nop
sub
movsb
push
js
push
mov
popf
pusha
xchg
adc
adc
aas
je
cmp
sub
add
add
cmp
jne
jnp
jmp
pop
add
or
sbb
hlt
sbb
adc
rclb
lods
push
xchg
jbe
add
cmpl
add
inc
iret
push
test
mov
and
stos
pop
popa
add
and
aam
mov
stos
scas
insb
cmpsl
dec
and
add
jmp
dec
popf
nop
xchg
aad
add
xlat
pop
loopne
dec
fmul
xor
aam
clc
push
pop
xor
cmp
test
cmp
add
ljmp
test
or
cmp
xor
outsb
pop
scas
sub
idivb
adc
enter
jmp
inc
das
xlat
or
push
add
cmpsl
testl
add
lods
sub
in
push
pop
cmp
in
negl
not
add
imul
test
sti
sahf
mov
loop
cmp
test
cli
pop
mov
xlat
push
fnstcw
add
movsl
addl
cltd
mov
pop
mov
add
add
movl
jecxz,pn
push
add
sbb
push
lea
inc
add
lock
or
inc
and
and
push
pop
mov
neg
sbb
clc
je
mov
fadd
xchg
pop
es
mov
andl
jmp
sbb
fnstenv
sahf
in
syscall
lret
scas
xchg
test
pop
xchg
add
adc
inc
fsubrl
sub
mov
add
and
ss
xor
adc
sub
mov
cwtl
pop
push
lret
pop
or
lods
xchg
jne
mov
addl
test
mov
movsb
adc
push
cmp
mov
mov
adc
inc
add
xlat
cmp
in
icebp
rol
rcll
dec
add
stc
aad
pop
dec
movsl
ds
cmpsb
inc
ret
pusha
mov
push
add
jp
mov
pop
sub
add
or
dec
aaa
sbb
add
addl
test
and
cmp
add
bound
add
sti
bnd
cwtl
mov
cmp
mov
inc
daa
xor
add
add
add
test
adc
cmpsl
filds
xchg
outsb
add
pop
add
sub
push
push
sub
mov
sbb
bound
dec
dec
or
mull
cli
nop
inc
adc
add
cmp
hlt
fnstsw
and
mov
xchg
xchg
add
jbe
clc
je
imul
idivl
addr16
pop
and
add
pop
mov
ds
rolb
bnd
fdivrs
idivb
sbb
mov
jbe
in
flds
inc
add
sar
fsub
add
leave
jg
add
push
jne
or
scas
pop
xor
xchg
mov
jmp
inc
loopne
in
add
dec
iret
call
dec
inc
lret
cmp
jg
dec
xor
mov
cmp
sti
inc
lods
sbb
and
lods
pop
movsb
js
cld
or
out
rolb
ss
pop
stos
jb
add
outsl
mov
add
movsl
addr16
arpl
and
adc
pop
aas
sub
jns
mov
nop
push
mov
add
je
ds
xchg
add
insl
ret
clc
movb
sbb
dec
fdivrp
add
xchg
adc
cwtl
nop
add
adc
add
lahf
add
jmp
ljmp
xchg
xchg
push
mov
loopne
scas
mov
mov
sub
mov
dec
and
or
movsb
pop
leave
fidivrl
addl
jg
xor
jmp
cld
dec
stc
enter
xchg
add
loop
add
mov
add
cmp
shrl
cmp
incl
mov
shrb
sub
adc
mov
movsb
add
es
pop
and
clc
mov
jno
mov
xor
adc
xchg
pop
xor
pop
arpl
xchg
mov
jmp
xchg
lds
add
xchg
xor
je
fisttps
jmp
fucomp
cli
dec
in
roll
fimuls
insl
inc
in
jmp
loop
out
les
dec
popf
sahf
and
aam
movsl
aas
xor
ja
dec
mov
add
or
xor
pop
sti
ds
or
aas
jo
add
add
stc
test
or
sbb
push
xchg
hlt
divb
dec
jg
dec
stos
mov
test
xlat
sbb
les
test
xor
cmp
insb
movsl
cs
sbb
fsubl
shlb
push
cmpl
xchg
cmc
adc
add
add
lea
add
jmp
mov
inc
push
cmc
out
test
mov
fs
sub
jnp
sbb
nop
pop
scas
dec
cwtl
les
mov
adc
add
and
lret
arpl
pop
add
jp
pusha
cmp
adc
lods
or
push
ret
or
and
inc
inc
adc
hlt
mov
add
out
in
rorl
pop
xchg
jl
jb
add
test
lea
or
jne
adc
mov
faddl
rolb
jmp
xchg
daa
pop
adc
mov
notl
dec
nop
jb
add
cmp
add
inc
test
xchg
add
sbb
cli
xor
adc
fldenv
ljmp
ds
add
add
cmp
ljmp
pop
lsl
sti
jo
inc
lcall
jge
lock
or
ret
ds
imul
testl
stc
sbb
add
sbb
add
or
clc
lea
or
leave
and
push
xchg
das
add
fists
sti
test
cmp
add
sub
fdiv
xorb
add
dec
addl
sarl
push
sub
out
add
mov
imul
mov
mov
std
mov
sbb
jae
roll
push
orb
into
sub
jp
add
sbb
lea
jg
sti
insl
shll
cmp
add
pop
jmp
push
std
cs
add
dec
mov
xchg
pop
add
add
add
sbb
sbb
addr16
add
xor
push
jle
add
inc
lds
add
push
adc
add
and
or
lods
stos
imul
push
fidivrs
push
dec
add
mov
aam
clc
in
adc
add
pop
xchg
adc
mov
jecxz
push
pop
inc
inc
and
jp
xor
xchg
jmp
jl
out
jmp
test
scas
insl
jg
add
pushf
rcrb
lret
push
icebp
xchg
xchg
ja
clc
fdiv
pusha
fdiv
mov
repnz
push
jg
out
icebp
and
in
in
push
sub
movsl
add
dec
enter
jmp
cmp
sbb
sub
xchg
add
mov
push
scas
jp
add
mov
subl
pop
ret
stos
xor
add
testb
adc
pop
loopne
lea
mov
mov
ret
pusha
xor
sbb
push
into
xchg
mov
arpl
subb
push
pushf
inc
xor
scas
pusha
xchg
aas
xor
sti
cmc
add
jecxz
lret
mov
repnz
stos
lods
loope
xlat
loope
jmp
rclb
ds
xchg
cmp
xchg
dec
js
jno
in
add
xchg
daa
or
dec
adc
pop
pop
add
repz
enter
add
mov
sbbl
jne
pinsrw
adc
xchg
adc
inc
add
xor
nop
shl
add
and
lods
fstps
and
out
adc
loope
lock
dec
sbb
maxps
sbb
mov
inc
jne
je
or
jno
and
test
repnz
add
sub
or
push
add
addb
and
mov
jecxz
call
cmpsb
add
mov
cld
mov
lock
xchg
orl
out
add
pop
mov
jg
rorb
cmpsl
push
adc
sbb
inc
cmp
jle
cmp
add
mov
inc
sbb
push
lahf
movl
std
mov
iret
out
loopne
mov
xchg
mov
sub
dec
test
dec
cmp
xchg
inc
add
stc
cld
pop
adc
mov
mov
nop
pop
sub
xchg
lcall
add
and
sub
aam
and
roll
mov
pop
shll
add
jmp
scas
add
push
cmc
xor
add
xor
loopne
adc
cmp
mov
into
cmpsb
sbb
mov
mov
inc
dec
cmp
mov
sub
add
inc
push
sub
popa
sub
loope
jmp
sbb
in
lods
shrb
decl
test
idivb
iret
dec
pop
ret
leave
rcr
cmpsb
adc
add
add
sbb
xor
stos
cmp
jo
push
add
pop
or
pop
xchg
mov
test
sbb
das
dec
add
cli
dec
and
inc
test
or
xchg
add
add
incl
adc
out
dec
mov
ja
cmp
xchg
adc
push
adcb
rorl
jmp
pop
cltd
icebp
movsl
add
movsb
dec
das
jne
loopne
xchg
add
cmpsl
pusha
inc
and
or
and
shll
scas
adc
mov
push
dec
in
add
aad
adc
xchg
sub
add
pop
jb
gs
lods
and
sub
lret
pop
fstp
dec
inc
jb
not
xchg
adc
lea
xchg
dec
cmp
movl
adc
scas
mov
jmp
and
dec
xlat
pop
sbb
mov
add
mov
fisubrs
mov
flds
ss
clc
push
mov
dec
lahf
loop
pop
clc
and
add
sbb
sbb
inc
jae
mov
pop
add
jne
cwtl
hlt
cli
and
or
mov
pop
add
fdivr
mov
and
mov
loope
popa
mov
xchg
or
dec
and
insl
jl
mov
adc
xchg
mov
jmp
mul
add
daa
adc
or
dec
adc
xor
cmp
jae
mov
inc
lock
cmpsl
add
pop
mov
and
add
and
xor
rorl
cs
and
fcompl
dec
push
xchg
push
mov
inc
or
sub
cmpsb
cmp
pop
daa
add
fs
xchg
push
shl
cs
pop
bound
fadd
sbb
jecxz
pusha
adc
or
pop
add
or
scas
sbb
push
mov
add
hlt
mov
mov
cwtl
xchg
add
dec
out
dec
push
xchg
pop
jns
mov
movb
subb
add
mov
pop
or
sub
es
test
adc
dec
faddl
jne
xchg
imulb
mov
jg
pop
orl
fs
xchg
orb
mov
movb
daa
in
jae
or
insb
les
mov
fists
add
add
or
push
jns
loop
lret
pop
roll
mov
adc
jl
add
dec
mov
or
sub
jnp
sti
repnz
mov
add
xchg
or
add
inc
jnp
decb
cli
add
adcb
jae
push
dec
xchg
xchg
shlb
mov
sub
add
lret
stc
test
adc
xchg
lret
ja
pop
add
push
xchg
or
jae
mov
jmp
sahf
sub
nop
cmp
add
push
pop
push
or
pusha
add
jne
movl
or
xchg
clc
dec
or
dec
adc
and
mov
inc
add
dec
dec
xchg
push
jg
sbb
pop
mov
movsb
negb
or
sub
nop
mov
js
push
insb
out
and
lods
arpl
dec
aad
add
jne
bound
int
add
daa
addr16
test
xor
pop
xor
inc
imul
pusha
fmull
adc
xchg
cmp
and
push
popf
inc
fists
add
jne
sti
int3
jle
jb
dec
mov
pop
mov
repnz
pushf
clc
add
out
stos
jno
lret
sbb
shll
lods
out
add
es
add
sub
jg
stos
loope
add
or
cmp
add
negl
rcrb
shll
mov
adc
insb
and
ljmp
je
scas
test
mov
jo
lahf
add
pop
popf
arpl
pop
sub
add
push
call
add
ret
jmp
mov
push
cmc
aas
imul
mov
pop
int3
sbb
push
pop
push
std
rcrb
xor
mov
adc
push
mov
push
repz
jne
add
adc
add
mov
xchg
int
xor
mov
dec
popf
out
pop
jne
xor
mov
sbbl
xchg
hlt
movsb
ds
cmp
xchg
dec
mov
ret
push
xchg
pop
repnz
add
xchg
pusha
jmp
inc
lret
and
jno
push
shlb
push
fwait
insl
cmp
daa
popa
xchg
add
pop
add
xor
dec
mov
add
push
gs
jbe
jo
add
xchg
sarb
notb
xchg
cld
xchg
in
xor
push
sbb
lret
cmpl
xchg
and
inc
sbbb
pop
jno
xchg
add
xchg
add
push
mov
jbe
out
add
add
inc
xlat
lret
pop
hlt
and
into
add
aad
xchg
lods
and
mov
flds
sub
sub
hlt
loop
mov
stos
push
cmpsl
pusha
dec
and
adc
jle
adcl
mov
push
lods
mov
sub
sarb
add
fwait
jg
sarb
or
push
mov
pop
iret
cwtl
push
and
jb
adc
shlb
std
mov
mov
pop
dec
xchg
hlt
aad
mov
add
add
adc
pop
lds
jmp
out
test
into
andl
add
leave
daa
pop
sbb
inc
cmp
jmp
pop
push
insb
adc
pop
lcall
cmp
mov
sub
scas
clc
pop
jl
push
fidivs
push
adc
or
call
das
jne
mov
mov
sbb
adc
push
xchg
orb
and
or
add
pop
sub
pop
loopne
add
xchg
dec
add
das
pusha
pop
loope
popa
les
bound
scas
arpl
xlat
mov
out
fs
cmp
or
jbe
in
add
int
int
jo
push
add
inc
add
rclb
cwtl
add
and
inc
add
sbb
test
xchg
sbb
add
push
add
cmp
add
pop
xchg
scas
add
pop
xor
inc
negl
aas
test
cmpsl
sbb
cld
add
mov
bound
mov
out
lret
xchg
gs
inc
stos
cwtl
shlb
sub
outsl
jl
dec
lret
adc
ret
push
in
mov
lock
popf
pop
push
rolb
add
xor
sbb
inc
cmp
scas
addb
add
cld
aas
dec
mulb
test
or
or
xor
add
add
out
xchg
jle
cmpsl
push
sub
cmp
mov
imul
ds
in
popf
ja
cwtl
scas
sbb
sub
mov
mul
mov
add
or
xchg
cmpsb
or
fs
push
jl
push
nop
lret
imul
andb
mov
shlb
divb
jne
push
in
ds
add
call
cmp
dec
test
sub
or
add
mov
jmp
mov
and
push
add
aam
dec
je
add
jns
in
test
sahf
cltd
ret
mov
add
add
movb
and
pop
push
rorl
push
test
mov
adc
pop
cmpsl
add
mov
sub
lahf
shlb
cmpsb
scas
jl
loope
aas
sub
add
pop
cmp
mov
and
and
or
cld
or
pop
pusha
mov
insl
aad
mov
add
sub
je
add
dec
pop
mov
hlt
sbb
or
or
cmpsl
cmp
push
lcall
push
jbe
jp
add
movsb
or
and
and
add
push
add
xchg
mov
popl
test
xchg
mov
sub
add
jbe
icebp
push
adc
fwait
push
pop
sub
pop
or
add
sub
rolb
push
adc
inc
out
ljmp
and
lods
push
js
repnz
call
rcr
int
add
shlb
push
pop
jl
pop
lock
xchg
dec
add
out
iret
mov
dec
pop
mov
xchg
dec
shrl
mov
hlt
repnz
jne
mov
adc
loop
inc
push
mov
jae
shl
dec
add
cmc
sub
aaa
add
sbb
xorl
sub
add
cltd
dec
jge
jl
movsl
dec
leave
pop
inc
mov
add
xor
adc
dec
adc
push
mov
fstpt
add
fs
lcall
pop
leave
pop
jno
cmp
shl
rcll
or
cmp
daa
jae
dec
jge
pop
cmp
and
adc
add
push
adc
sbb
sub
cmp
in
add
mov
xchg
rclb
call
and
lods
dec
mov
fistl
les
xchg
arpl
add
lcall
sbb
shl
add
mov
adc
dec
pop
adc
mov
sub
js
dec
push
ja
add
pop
jmp
ds
push
and
shlb
add
adc
mov
sub
inc
sbb
xorb
cmp
sbb
mov
push
cmp
ja
mov
xlat
inc
call
stc
push
adc
movsl
add
and
and
dec
pop
xchg
imul
push
nop
mov
je
push
mov
xor
add
test
xchg
iret
lret
xor
push
lods
add
pop
or
js
adc
sub
arpl
scas
ret
testb
sbb
add
roll
hlt
inc
mov
dec
or
cld
and
aas
pop
mov
pop
cmpl
jnp
cmpb
xor
xor
leave
das
cmp
mov
mov
test
cmpsl
xchg
fmuls
cli
ret
hlt
loope
cmovns
lock
adcb
xor
mov
and
adcl
lock
insb
and
mov
outsl
and
ret
ss
push
cmpsl
add
sub
or
lret
cmp
xor
test
call
or
inc
sub
add
and
inc
xor
push
adc
repnz
xor
or
xchg
loopne
and
leave
inc
bound
push
imul
xor
out
lret
add
sti
adc
imul
jg
cmpsb
out
mov
mov
mov
clc
cmp
addl
or
or
push
lcall
scas
repnz
mov
sbb
inc
add
and
and
add
sub
pop
test
imul
or
in
ds
or
lcall
je
cmpl
test
sbb
and
fcompl
push
ljmp
sar
movb
inc
dec
stos
cmpsb
ret
jg
add
mov
push
add
push
mov
jbe
mov
or
std
pop
jp
daa
add
out
cltd
add
push
xor
jg
mov
daa
cmp
in
add
sub
pop
and
sbb
in
xor
xor
test
adc
push
adc
inc
and
xor
popa
dec
pop
outsb
xchg
jnp
mov
xchg
mov
sti
leave
clc
test
imul
jmp
adc
and
jl
add
test
jno
mov
pop
inc
jae
mov
adc
data16
xchg
pop
ja
jnp
dec
mov
sbbl
xchg
mov
sbb
bound
lea
mov
sti
add
movl
push
add
adc
xchg
cmc
nop
pop
sbb
inc
ret
addb
andl
add
pop
enter
add
sbb
pusha
test
inc
mov
lock
dec
push
add
push
aam
lcall
jne
sbb
imul
adc
mov
add
aas
or
lock
fiadds
pop
inc
dec
movl
adc
test
jno
insb
sub
add
mov
add
shrb
add
lds
mov
add
call
mov
popf
jecxz
dec
pop
ret
movsb
push
std
inc
mov
jae
cmpsl
bound
mov
scas
call
imulb
jnp
addb
push
adc
or
add
and
cmp
sub
imul
or
add
aas
push
test
add
cmpsb
loopne
add
xchg
add
add
test
arpl
mov
or
mov
rolb
outsb
adc
mov
ret
add
inc
jae
add
inc
fwait
add
mov
and
add
jl
pop
ret
sahf
jl
add
dec
ljmp
xchg
orb
push
cwtl
cmp
push
sbb
aad
mov
add
mov
xchg
mov
cmp
adc
lea
jnp
es
add
cld
dec
jae
or
ja
push
mov
jo
test
xor
fmull
ret
scas
inc
pop
fs
pop
add
decl
jae
xor
out
loop
push
es
or
dec
jb
andb
lock
jbe
push
lods
out
add
pop
cs
dec
or
inc
pusha
adc
add
xor
mov
aas
imul
test
add
icebp
and
repz
aam
inc
hlt
testb
daa
mov
mov
or
push
loop
pusha
popa
mov
add
cmp
or
addr16
and
cmp
inc
inc
lahf
xchg
in
push
repnz
sub
and
add
ds
adc
xor
xor
add
xor
add
cmp
mov
in
add
xor
jnp
cs
add
aad
inc
popa
pusha
je
push
arpl
mov
jle
loopne
dec
add
stos
add
push
or
add
mov
lcall
loop,pt
add
push
cli
or
add
lds
xchg
mov
add
add
idivb
in
jle
add
das
mov
jnp
test
inc
fsubs
cwtl
imul
dec
and
jae
bound
inc
or
dec
sbb
adc
ret
fcoml
pop
in
shlb
push
inc
and
and
and
cmp
mov
sub
add
sub
cmp
add
test
mov
add
xor
push
out
int3
sub
aam
cli
imul
push
pop
arpl
sbb
and
add
xor
notl
enter
add
fstps
or
or
add
inc
mov
out
cmp
in
add
test
push
bound
inc
and
scas
leave
xor
sub
xor
add
cmp
xor
shl
adc
fcoml
pop
in
ret
aas
mov
push
inc
movsl
xor
add
fldt
fidivrs
add
call
testl
sti
mov
jle
call
repz
cmpl
insl
roll
jnp
and
add
adc
sub
xchg
test
inc
aam
mov
push
mov
sbb
clc
push
clc
ret
push
iret
rcrl
loopne
arpl
fdivrs
sub
pop
call
add
je
lea
insb
adc
aam
add
push
and
int
aad
xor
aas
or
add
add
mov
or
ja
adcb
inc
lods
xor
js
mov
rorb
rep
pop
push
xlat
or
ljmp
mov
sub
es
ret
out
add
iret
push
push
test
pop
jno
add
pop
mov
shlb
add
ds
enter
mov
int
mov
movb
pop
and
adc
add
fisttpll
lea
xchg
and
jne
insb
sti
push
ss
data16
pop
add
adc
jae
sbb
push
lock
orb
add
push
sub
in
and
jmp
pop
cli
xchg
nop
inc
in
test
sbb
mov
aad
enter
add
stos
cmp
mov
add
mov
clc
sub
add
cs
add
fisubs
mov
cwtl
sbb
mov
inc
lret
push
add
lock
jge
lock
push
cli
int3
add
lret
pop
in
cmp
inc
lret
xor
pop
add
or
or
push
gs
add
xchg
push
sub
xor
add
jnp
ror
es
clc
addb
out
mov
jno
add
jl
popf
adc
leave
cltd
mov
add
jg
ss
stos
add
sbb
pop
pop
add
aas
or
jne
sbb
cmp
daa
add
mov
xor
and
iret
adc
xlat
adc
aas
push
pop
enter
mov
adcb
add
dec
pushf
sahf
mov
insb
clc
and
push
jae
dec
sbb
inc
je
push
add
add
sub
fildl
sbb
andl
mov
add
sub
dec
mov
mov
jns
movsb
fwait
std
rolb
add
mov
sub
sub
add
out
xor
mov
pop
inc
cltd
dec
sbb
push
adc
dec
pop
xchg
or
jo
cmp
out
pop
mulb
xchg
loopne
mov
inc
dec
push
lret
push
add
xchg
fstpt
mov
clc
out
add
mov
sbb
lods
xor
cmp
fimuls
call
mov
xchg
gs
in
push
call
pop
xchg
cmpb
mov
pop
mov
in
fsubrl
mov
sbb
pop
in
sbb
add
push
loopne
xchg
popf
in
lods
add
fimull
out
cmpsb
add
fistpll
in
test
mov
sub
add
xor
dec
xchg
cmc
fildl
and
inc
add
mov
nop
pop
add
push
or
add
scas
adc
movsb
mov
mov
imul
ret
call
sub
andb
std
pop
mov
inc
cld
add
clc
cmc
inc
loopne
fistps
pop
scas
into
pop
jge
pop
mov
pop
das
incl
push
inc
add
add
std
test
adc
mov
add
imul
sahf
roll
pop
scas
add
incb
add
push
shrl
cmc
cltd
add
hlt
rorb
add
test
and
push
imul
movsl
pop
add
or
je
push
jbe
mov
lret
pop
add
mov
mov
add
mov
xchg
test
sbb
add
fucom
sarb
add
mov
and
or
stos
and
jle
jle
pusha
adc
sbb
inc
stos
jp
mov
jmp
add
out
cmp
cli
mov
inc
lods
jp
ja
jge
cmc
add
scas
and
mov
add
fnsave
movsl
push
push
and
mov
push
mov
sbb
pop
mov
push
push
stos
push
out
nop
clc
repnz
inc
cmp
bound
jg
or
adc
add
xlat
xor
popa
lret
jne
ds
push
shr
pop
cmp
ljmp
lods
nop
sbb
pushf
add
inc
adc
ror
jl
xor
jp
lods
aam
js
incl
in
push
mov
dec
ret
mov
andb
es
jl
add
jge
jmp
pusha
mov
add
adc
jmp
jno
add
mov
nop
inc
ret
cmp
cmp
adc
hlt
jo
push
add
mov
dec
add
xchg
pop
and
lock
xor
bnd
xor
jne
jb
add
sbb
jae
jns
repnz
fwait
int3
push
add
inc
sub
adc
int
add
xchg
or
roll
jns
or
mov
icebp
loop
sbb
adcb
lcall
loopne
xchg
xor
daa
adc
addr16
push
and
cmp
mov
out
and
add
lods
hlt
shr
movl
pop
lock
push
cs
mov
xchg
pop
lds
test
push
adc
sub
out
leave
stc
mov
mov
shrb
mov
jge
add
xchg
jne
add
add
outsb
ds
ret
add
dec
aas
lret
iret
mov
not
sub
xor
adc
lcall
push
add
and
push
sarb
push
clc
cs
cmp
add
test
leave
jne
xchg
push
movsb
repz
add
call
jle
add
rcr
je
mov
add
dec
and
mov
sbb
or
jle
xchg
jmp
cwtl
mov
in
add
xor
adc
add
xchg
fmulp
pop
mov
or
cmpsb
je
sub
add
jmp
inc
add
xor
lcall
sub
ret
sub
mov
pop
xor
push
popf
aad
fsubs
movsl
add
iret
mov
inc
mov
pop
mov
xchg
mov
incl
daa
xchg
mov
cmp
cs
adc
je
inc
lcall
cld
movaps
jbe
dec
popf
jae
mov
das
shlb
push
inc
add
and
roll
je
sbb
sbb
jo
or
movsl
daa
jg
add
push
jns
je
add
adc
outsl
add
fdivl
pop
jge
stc
incl
jno
and
or
lea
inc
aad
jns
call
adc
push
loop
add
ds
clc
mov
dec
add
ljmp
cli
fldl
fwait
cmc
push
add
push
inc
pop
inc
or
add
call
inc
or
push
bswap
adc
mov
pop
cmpl
add
imul
add
adc
push
shll
adc
mov
out
incl
cmp
subb
add
inc
inc
stos
push
icebp
push
ljmp
xlat
pusha
adc
sbb
mov
aam
and
add
sub
jge
pop
unpcklps
and
cltd
lock
jno
in
fs
mov
mov
add
and
lea
dec
jle
aam
add
xlat
jmp
add
inc
inc
mov
mov
leave
add
cli
fsub
repz
in
add
leave
pusha
cmp
mov
mov
mov
mov
add
add
iret
mov
mull
ja
incl
xor
push
adc
lds
add
add
mov
dec
jns
in
push
cmpsb
imul
sbb
je
add
lock
lret
sbb
cli
into
xchg
fmuls
sets
leave
add
dec
cld
dec
hlt
dec
es
add
jl
cmp
pop
rorl
leave
or
imull
inc
pop
cld
fcom
cld
xor
pushl
lock
jecxz
jne
add
lret
pop
testb
cs
dec
pop
add
jl
add
bound
add
pusha
cmpsl
adc
cmpsb
add
inc
add
add
jle
out
jmp
sbb
out
add
xor
mov
test
pop
imul
push
cmp
mov
xchg
addl
mov
mov
and
push
add
adc
sub
xchg
pop
mov
inc
dec
or
lahf
xor
cli
int3
dec
lock
sub
jb
jl
adc
clc
cmp
sbb
pop
call
add
mov
aas
rorb
loop
dec
pusha
push
sub
pop
xchg
push
in
and
aam
jne
in
add
mov
cmpsb
iret
mov
add
fcoml
push
lds
and
ror
mov
sbb
jbe
pop
in
ret
push
leave
add
fsts
xadd
fsubrl
imul
rcll
mov
sbb
xor
mov
add
iret
bound
adc
add
dec
jmp
cwtl
and
daa
movsl
roll
cmpsl
fnstenv
add
xchg
insl
idivb
int
push
push
ja
bts
loopne
loopne
mov
testb
jmp
or
cmp
cmpsb
or
call
incl
je
jbe
test
mov
es
fsubrs
push
std
adc
xchg
nop
or
pop
pop
dec
mov
push
mov
add
xchg
mov
sbb
push
xor
mov
fwait
les
pop
iret
dec
mov
lock
fdivs
mov
pop
pop
call
cld
and
add
add
pop
xchg
push
jne
mov
xchg
push
out
subb
push
add
and
add
fildll
rcll
dec
xor
and
nop
hlt
jne
lsl
and
adc
stos
sbb
or
add
test
ds
add
cmp
in
jb
add
adc
dec
xchg
adc
insl
cld
jl
lods
add
lock
push
hlt
out
and
iret
jmp
mov
outsl
sub
movsl
mov
pop
aad
dec
addb
fadds
cmpb
add
dec
mull
fldenv
xchg
ret
push
dec
adc
and
stc
int3
add
cld
add
cwtl
movsb
addb
ja
push
jne
push
add
or
push
sbb
ljmp
xchg
clc
push
jne
pop
stos
add
in
jns
jle
call
daa
pop
ljmp
add
push
out
cmp
sti
add
stc
pop
push
lock
pushf
test
xrelease
jp
or
addr16
adc
xor
xchg
mov
mov
xchg
imul
mov
jge
push
shrl
xlat
dec
mov
loop
cs
insb
inc
cwtl
add
leave
jl
add
xchg
pop
mov
test
dec
jne
daa
jmp
movsl
mov
cld
cmp
lcall
xchg
jle
dec
insl
xor
addb
in
pop
cmp
jne
add
adc
mov
test
fadds
mov
cmp
jge
js
xchg
aad
adc
dec
roll
test
add
sahf
loope
xchg
aam
and
nop
fmul
add
fs
loopne
xlat
add
cltd
cli
adc
int3
pop
add
aad
stc
les
jp
mov
sub
adc
inc
cmp
sbb
xorb
incl
int3
or
loopne
loop
pop
add
pcmpgtb
insl
mov
adc
outsw
cltd
add
fdivrs
inc
pop
cli
je
or
add
fisubrl
ret
inc
lods
cltd
dec
jecxz
inc
repnz
cmp
cmp
xor
ss
add
fisubs
dec
add
or
xor
jns
sub
mov
xchg
add
xorb
lret
or
add
in
inc
iret
sbb
add
cmpl
add
xchg
popf
ja
xchg
add
cs
dec
repnz
dec
inc
pop
call
pop
mov
xlat
or
add
std
call
jge
push
pop
es
js
add
mull
cmp
rolb
mov
or
push
push
xlat
testb
push
pop
ja
flds
and
loopne
and
iret
pop
bound
jo
push
add
add
ret
add
dec
inc
test
add
lcall
xor
add
jmp
add
inc
inc
mov
cmc
dec
insb
ret
ds
add
inc
xor
fidivs
adc
push
mov
jo
jbe
add
mov
fdivrl
out
xor
fmuls
popf
jl
pop
xchg
aas
loopne
pop
iret
in
sub
orb
rorb
xorl
add
int
pop
ja
add
add
jne
arpl
mov
out
cwtl
add
dec
cs
fcmovnb
jb
pop
jne
clc
sbb
and
out
push
inc
add
sub
or
add
jo
pop
clc
in
test
ds
add
or
addb
bound
out
mov
push
inc
in
xor
pop
mov
xor
mov
orl
fwait
pop
call
loopne
or
cmpl
add
int3
inc
mov
xchg
scas
aam
lods
add
push
sbb
adc
pushf
and
or
mov
es
jb
fsub
icebp
testb
mov
loopne
add
aas
jl
mov
shll
jns
adc
adcb
mov
test
sub
and
sbb
andl
pop
add
int3
push
std
cmp
sbb
ret
pushf
xchg
insl
xor
add
adc
mov
add
dec
inc
sbb
bnd
push
pop
clc
daa
add
lock
xorl
push
call
hlt
sub
sbb
hlt
rorb
add
xor
stc
cli
mov
adc
push
arpl
sbb
pop
out
imul
xor
cmp
pop
and
je
icebp
mov
daa
cmp
add
das
cmpb
sbb
cmp
push
jl
inc
mov
push
pusha
inc
rol
add
shlb
insb
add
sbb
lock
sbb
pop
lret
leave
push
aaa
enter
jo
mov
icebp
add
mov
sahf
dec
cmp
sub
lret
cmpsl
jl
inc
inc
sbb
arpl
stos
jbe
push
je
xor
add
dec
hlt
mov
add
dec
in
push
and
or
inc
lret
add
sbb
jp
inc
fwait
data16
cmp
cmp
inc
lcall
or
push
lcall
add
dec
in
lret
cmpb
test
push
jmp
add
shrb
fadds
fdivrl
stc
cmc
fildll
aas
adc
out
sbbb
insl
add
mov
xlat
orb
xor
ficomps
push
push
or
adc
shl
cwtl
repnz
cwtl
dec
mov
and
lret
mov
les
jnp
dec
clc
iret
cmp
mov
cld
ja
add
cltd
sub
jle
dec
addr16
xchg
in
mov
mov
call
and
pop
bswap
mov
push
out
dec
add
in
or
aam
xchg
cli
repnz
mulb
rclb
add
mov
pop
push
or
test
rorb
ficompl
psubq
mov
or
add
jne
and
add
pop
mov
leave
add
add
cld
sub
inc
mov
pop
add
jg
das
stc
inc
pop
cmp
ret
js
xchg
xor
push
push
ljmp
je
and
enter
mov
sub
sbb
test
testl
aaa
fildl
cmp
pop
pop
dec
fs
push
je
clc
push
add
in
ja
sbb
loope
adc
cwtl
add
add
and
adcl
add
das
cmpsl
pop
sti
scas
add
adc
cmp
dec
rolb
cmp
call
stos
mov
addb
insb
cmp
ljmp
outsl
ret
mov
lahf
sbb
inc
pop
movsl
and
fsubrs
orl
popa
jp
bound
push
sbb
push
xchg
lods
sbb
cmp
movaps
push
dec
mov
leave
ret
xchg
mov
dec
pushf
xlat
and
pusha
iret
data16
mov
add
je
cmc
inc
add
mov
push
adc
jp
push
lds
sbb
icebp
add
sub
lahf
dec
jne
jle
popf
hlt
aad
xchg
pop
jle
pop
flds
mov
adc
xor
add
cmp
dec
cwtl
popf
aam
pop
sbb
mov
sub
cmp
adc
sub
mov
add
xchg
inc
sub
sbb
add
cmpsb
mov
fldl
lahf
cwtl
push
pushl
and
int
and
add
repnz
add
rcrb
mov
les
or
jbe
cmpb
pop
mov
lock
mov
pop
pop
cmp
cld
push
lahf
mov
and
push
das
mov
jmp
cmp
ljmp
out
cmp
inc
movsl
in
add
add
or
pop
push
leave
pop
xor
ja
cmp
push
push
cmpsb
or
sbb
sub
sbb
mov
rorl
pop
lods
pop
cli
movsb
add
add
sub
sub
pop
xchg
rcll
or
mov
out
mov
mov
ret
pop
in
pop
pop
sub
jmp
test
jno
enter
fwait
xor
std
and
mov
div
mov
cli
call
adc
dec
clc
mov
add
pop
mov
add
add
std
mov
idivl
cmovae
add
push
mov
push
and
out
adc
test
cmp
movsb
add
dec
sub
mov
mov
jb
loopne
rcr
mov
int
push
jno
pop
xor
xchg
pop
pop
cwtl
adc
cmp
xor
add
cmp
adc
jecxz
dec
pop
push
jae
ror
in
jmp
or
test
iret
jecxz
icebp
mov
sarb
and
faddl
nop
xor
cwtl
pop
iret
into
sub
jne
xchg
pop
fbstp
sbb
pusha
in
test
xchg
cmp
dec
stos
lock
mov
push
sub
sub
inc
adc
add
jl
cmp
call
inc
mov
add
adc
mov
jne
gs
add
pop
jge
push
leave
aad
bound
xor
mov
xchg
in
mov
dec
std
add
xchg
verr
jae
pop
dec
fdivrp
and
inc
mov
adc
adc
add
push
sti
pop
jecxz
int
add
jecxz
pop
sub
push
add
lods
aaa
pop
add
lock
mov
shlb
leave
or
mov
mov
inc
pop
mov
push
push
and
test
daa
mov
add
test
dec
xchg
jle
sub
jl
add
fsubrl
inc
push
add
dec
je
nop
push
sbb
add
jmp
loope
mov
jae
xchg
push
test
sub
rcrb
and
add
rcrb
movb
enter
shll
and
dec
add
outsl
addl
mov
pusha
imul
and
adc
call
push
mov
cmp
cmp
popf
test
inc
shlb
js
push
movsb
xchg
or
inc
incl
adc
leave
insb
and
mov
pop
or
pop
pop
loop
adc
cs
sub
pusha
mov
mov
push
inc
int
outsl
sub
sub
nop
std
inc
incb
es
call
cmp
mov
aad
cmp
rolb
loopne
pop
xor
lcall
jmp
add
insb
pop
mov
push
push
lret
push
add
dec
dec
lcall
inc
call
sbb
out
jl
addl
mov
ja
adc
fs
or
shr
ss
push
shl
add
jmp
xor
mov
and
jecxz
inc
imul
dec
and
shlb
inc
orb
mov
pop
pop
inc
jne
or
mov
mov
or
insb
push
xor
flds
adc
jne
lcall
jecxz
inc
sub
cwtl
dec
push
or
add
pushf
lret
fcomps
jl
inc
add
or
cmp
add
mov
push
mov
jbe
jp
scas
outsb
mov
xchg
add
and
cltd
ror
mov
and
adc
in
add
sarb
loopne
xchg
pop
add
and
dec
sbb
daa
sbbl
or
rcrb
in
xor
mov
movsl
push
sub
adc
xlat
decl
mov
int3
pop
lds
add
insl
cmp
push
lcall
hlt
rcl
add
in
addb
sti
lcall
test
add
add
xchg
inc
sbb
call
cld
lcall
sbb
or
stos
pop
and
add
jb
cmpsl
sub
lock
fadds
ljmp
cmpsb
add
inc
jge
add
mov
ret
add
in
dec
in
out
add
dec
sub
cmp
in
movsb
cmp
pop
inc
jmp
add
mov
out
lock
lods
lahf
push
out
fwait
stos
push
push
fmul
xchg
dec
int3
out
or
enter
push
ret
add
sbb
dec
leave
add
and
adc
or
mov
sbb
mov
pop
xor
mov
add
jecxz
out
into
dec
mov
out
add
jne
fldl
clc
in
add
xor
std
or
add
xchg
pop
enter
stc
fnstcw
jg
pop
cmp
fidivrs
sti
inc
sub
pop
shrl
mov
add
scas
loop
mov
fimuls
mov
pop
shlb
fdivl
mov
dec
pop
mov
rorb
shrb
mov
pop
test
lods
in
loopne
add
fcoml
rclb
jbe
pop
sti
or
and
inc
stos
pop
call
xor
scas
jb
pop
xchg
mov
arpl
mov
add
hlt
addr16
add
dec
scas
nop
xchg
push
cmp
sbb
adc
add
test
ljmp
sub
mov
or
cmpsl
push
fistpl
dec
add
mov
mov
nop
cmpsb
pop
push
nop
fiaddl
adc
inc
jbe
push
orb
pushf
call
xchg
mov
and
cli
ret
add
cmc
sub
cmp
daa
mov
xlat
push
test
lret
cmc
ljmp
lock
cmp
dec
or
int
xchg
repz
xor
pop
lret
les
adc
mov
jno
ja
jae
add
aam
push
ss
xor
lock
push
ljmp
xor
js
add
ds
fadds
je
pop
pushl
push
dec
fsubl
add
pushf
lea
add
push
mov
add
inc
inc
jge
inc
jg
add
inc
add
push
push
add
mov
add
mov
sub
push
flds
das
push
insb
sbb
mov
es
push
addb
rep
jmp
test
mov
and
jg
dec
xchg
lock
jns
pop
pop
loope
adc
push
pop
out
es
jo
add
sbb
add
mov
or
sbb
cmp
arpl
add
js
dec
add
push
and
insl
subl
push
sub
add
leave
mov
add
xorb
add
call
xchg
adc
mov
inc
xchg
cld
sbb
movsb
aas
jo
add
xor
orb
pop
add
and
les
xor
in
add
pop
mov
push
clc
add
xor
dec
jmp
mov
jnp
rep
push
stos
xchg
jp
add
sbb
mov
rorb
adc
fwait
addr16
inc
clc
jne
ja
jno
mov
xor
add
add
push
lock
add
and
adc
loopne
add
and
fisttpll
int3
sub
pop
cltd
add
ss
sub
jecxz
lock
je
add
xchg
cli
push
fcoml
rolb
jb
add
jns
push
daa
inc
fidivs
add
inc
push
add
add
lock
fbstp
aas
fisttpl
add
mov
sub
loopne
pusha
in
push
add
push
mov
rcl
cmp
je
sub
pop
or
ds
push
rcr
sub
sub
add
adcb
mov
add
cwtl
nop
or
xchg
add
adc
movsb
scas
int
aas
sbb
pop
data16
mov
sub
insl
xchg
add
sub
mov
add
inc
add
add
adc
xor
pop
lea
fcomp
push
add
mov
into
jmp
lock
lods
push
pusha
or
psrlq
jg
mov
adc
xchg
pop
mov
sub
call
cmp
test
xchg
push
lahf
sbb
adc
add
cmp
jb
or
add
ljmp
das
sbb
or
cmpsb
ja
add
cmp
push
shl
push
dec
add
cmp
dec
xchg
call
in
adc
pop
pop
mov
add
jl
loopne
pop
mov
adc
dec
bound
xlat
pop
aas
adc
stos
add
movsb
add
pop
xor
jo
sbbb
inc
daa
push
cmp
add
bound
xchg
sbbb
test
add
cli
mov
jo
add
mov
ljmp
xchg
ficoml
cmp
loopne
add
hlt
jge
or
adc
cmp
shlb
dec
sub
add
out
pop
rclb
sbb
andb
pop
lds
jl
dec
lret
add
xchg
mov
adc
movb
mov
inc
cmp
adc
push
add
cmc
sub
xchg
ret
push
push
add
andl
jns
xor
or
jmp
mov
add
xor
pop
mov
rcrl
and
add
push
push
clc
push
addb
cmp
add
or
je
js
dec
lods
aaa
add
sbb
inc
add
sub
or
out
sbb
jbe
pop
je
xor
cmp
cmc
jne
add
rol
sub
fsubrs
mov
inc
test
fwait
xchg
add
adc
pop
cmp
add
add
xor
mov
pop
iret
xchg
push
add
xor
lahf
cmpsl
add
cmp
xorb
mov
push
xchg
ret
out
xor
mov
add
inc
aaa
lods
addb
cmp
das
xor
add
pop
and
inc
in
fst
test
add
mov
add
test
imul
add
add
push
or
jns
push
les
mov
lgs
in
add
pop
mov
cs
pop
pop
adc
sub
jne
and
cld
add
pop
xor
add
jne
fincstp
adc
popf
or
add
or
shll
add
dec
jo
add
lahf
sbb
sbb
mov
add
shl
movsl
mov
in
cltd
xor
pop
loop
push
daa
or
pushf
sub
push
mul
sbb
bswap
pop
push
ja
in
or
mov
cltd
mov
imul
sbb
adc
test
cmpsl
in
mov
clc
ljmp
sbb
mov
sbb
dec
pop
ds
mov
arpl
sbb
push
mov
cmpsb
nop
add
add
loopne
add
mov
mov
or
cwtl
in
adcb
mov
test
cltd
pop
inc
inc
xchg
and
push
adc
jl
rorb
xchg
fistps
test
xchg
jb
in
fwait
jmp
sahf
out
cmp
sbb
inc
adc
jb
add
movsb
iret
lea
push
or
and
call
adc
mov
xchg
jecxz
pushf
mov
adc
test
mov
mov
jge
cmp
lret
add
in
jo
add
push
jo
mov
test
jg
xor
cmp
mov
add
test
stos
push
rorl
mov
ljmp
cmpsl
cmp
add
and
adc
pop
ss
add
pusha
clc
dec
pop
or
add
aas
push
lret
stc
pop
cli
ret
xor
jno
pusha
cmp
jo
movl
cmp
and
and
and
inc
cs
adc
mull
icebp
or
cmp
cmp
nop
pop
mov
js
loop
sahf
add
cmpsb
sub
mov
dec
add
es
pop
aam
imul
andb
or
dec
or
ss
jo
lds
cmp
js
in
int
add
xchg
scas
mov
pop
out
push
lods
scas
push
add
jo
push
shll
mov
push
mov
call
pop
addr16
lret
or
mov
jecxz
xchg
add
in
out
sbb
das
call
arpl
add
orl
add
jae
pswapd
ficoms
js
inc
iret
jmp
jle
cwtl
dec
mov
sahf
roll
mov
das
dec
add
mov
addr16
and
mov
jns
and
movb
dec
xlat
xchg
hlt
jne
sub
mov
push
cmp
jge
cmp
ret
popf
add
pop
sbb
add
mov
adc
push
add
arpl
sub
or
adc
je
lcall
xchg
add
in
mov
adc
add
test
ret
out
add
hlt
in
xor
mov
mov
insb
scas
popf
or
mov
sbb
dec
addb
repnz
adc
rolw
lock
xchg
movsb
pop
jo
add
test
and
loopne
add
xchg
sub
mov
add
push
hlt
lods
loopne
sub
add
int3
out
jo
jl
rolb
jmp
imul
nop
das
ret
ds
add
sti
pop
sub
jmp
jnp
or
fs
das
xchg
mov
xor
push
pushf
add
and
enter
lods
adcb
andb
arpl
push
inc
andb
mov
repnz
push
not
push
insl
add
std
add
subl
lcall
pusha
jb
jo
add
inc
lods
dec
mov
xchg
into
pop
ret
cmp
add
mov
push
add
inc
mov
and
xchg
cmp
fiadds
fs
int
sbbl
stos
add
rcl
mov
add
cs
divl
arpl
movsb
mov
xchg
and
add
cmp
sbbb
pop
xchg
or
aas
and
xchg
add
mov
pop
cmp
jg
pop
adc
faddl
sbb
mov
mov
daa
pop
push
adc
push
shl
add
testb
sti
out
filds
jo
iret
pop
sbb
rclb
add
test
outsl
ja
aas
add
sub
inc
neg
lret
sbb
scas
mov
dec
aad
loopne
jae
in
dec
test
mov
hlt
scas
rcrb
lock
decb
jb,pt
mov
add
xor
mov
fisttps
add
int3
sbb
sub
mov
add
push
lahf
lcall
repnz
fwait
pop
mov
adc
ds
add
mov
lds
fcmovnb
andb
add
gs
inc
es
cmp
das
push
sbb
adc
mulb
add
lock
lsl
xchg
pop
lret
insl
push
add
or
in
xchg
jae
aad
jns
jne
add
hlt
xlat
nop
les
dec
add
jo
mov
js
pop
stos
push
das
mov
inc
and
push
cmpsb
and
arpl
add
push
cld
filds
nop
jbe
push
aam
mov
cmpsl
clc
jge
xchg
repnz
pop
and
ret
jnp
inc
pop
push
fdivl
dec
xor
into
add
pop
pop
das
dec
or
hlt
adc
fsts
add
xchg
dec
roll
mov
mov
inc
push
adc
mov
jle
repz
das
or
cld
jmp
cmp
arpl
sbb
sahf
aad
enter
test
outsb
cmpsb
xor
mov
jne
cmp
xlat
add
repnz
ljmp
mov
dec
out
add
stos
flds
pop
clc
mov
add
jb
add
adc
cli
cmp
push
ds
popa
jne
mov
rep
sub
or
inc
loopne
push
jmp
sbb
cmpsl
fstl
push
je
and
cs
test
add
add
out
sbb
lea
rolb
push
aam
jmp
aas
lret
add
jnp
or
repz
mov
cli
mov
dec
sbb
test
mov
push
or
and
adc
shll
add
or
addb
add
ds
add
sbb
es
add
mov
dec
add
cmp
sti
add
pusha
push
jbe
clc
adc
sbb
dec
ret
rcl
adc
xchg
jnp
jae
jne
add
fwait
adc
jb
mov
adc
cmp
pop
and
xchg
add
dec
dec
mov
test
lods
push
dec
pop
repnz
and
inc
adc
adc
aad
xchg
adc
or
push
jne
adc
jb
adc
lahf
add
shlb
xor
lcall
and
ret
xor
mov
mov
and
in
jp
sbb
pop
pop
add
daa
xor
in
add
lock
dec
call
add
push
add
adc
shll
ror
pop
bound
cli
xchg
jo
sbb
les
int3
and
insl
inc
or
add
add
adc
sub
add
inc
xor
sub
lock
aam
add
cmp
int3
gs
and
jb
add
mov
jbe
popa
rorl
movb
or
pop
add
sbb
out
jmp
loop
ret
dec
adc
insb
and
add
xchg
inc
mov
jmp
loopne
sub
or
cmp
mov
outsl
push
dec
add
cltd
add
add
add
faddl
mov
dec
add
add
dec
cmp
rolb
dec
sbbl
adc
out
or
test
lahf
pop
add
insw
jbe
add
jne
outsb
test
rorb
cmp
add
jno
inc
add
xor
adc
in
xchg
in
lock
mov
dec
idivb
adc
jmp
int
push
jns
leave
loope
mov
cmp
sub
xchg
cmp
test
std
ja
dec
add
add
call
pop
enter
push
add
lea
in
add
dec
inc
out
mov
add
adc
or
outsl
hlt
push
fsubr
flds
sbb
push
aad
add
daa
mov
js
mov
adc
mov
cmp
lods
test
adc
clc
cmp
das
sub
add
or
push
sub
mov
flds
sub
lock
cld
dec
mov
push
in
mov
push
pop
call
nop
in
pop
cld
pop
repz
mov
rolb
filds
dec
inc
xchg
inc
stos
shlb
mov
sbb
push
nop
dec
sbb
cmp
mov
and
hlt
jmp
add
inc
add
cli
or
push
jmp
add
ficoms
mov
int
xchg
cmp
sbb
cmpl
sbb
in
add
sahf
movhps
jb
adc
and
or
clc
pop
push
je
inc
mov
fldl
mov
or
mov
loope
mov
jnp
aam
add
mov
or
xor
aam
xor
out
add
or
fdivrs
aad
and
jo
incl
fmuls
lahf
cmp
sti
into
daa
outsl
insl
add
scas
inc
or
ret
add
mov
sub
filds
add
cmp
xchg
mov
test
add
xchg
stc
loopne
xor
add
inc
push
ja
js
loopne
add
pop
aad
inc
adc
loopne
pusha
adcl
mov
or
mov
lock
loop
add
pop
add
repz
sbb
out
mov
ja
and
sub
xchg
ljmp
sti
lret
pusha
pop
sub
or
addb
mov
mov
test
popl
add
lret
cmp
into
add
lods
push
add
push
ss
sti
xorl
fldl
cmc
pop
mov
jnp
clc
mulb
add
stos
andb
sbb
cmc
add
icebp
sub
in
cmp
xchg
inc
jp
pop
adc
loopne
pop
les
pop
mov
in
shrb
add
pop
in
iret
daa
xorl
leave
inc
add
or
add
lds
loopne
pop
sar
add
push
pop
dec
add
aam
pusha
popa
in
inc
jo
add
loope
shlb
adc
nop
imul
inc
adc
popf
bnd
add
movsl
push
cmp
add
add
loop
mov
jmp
add
push
add
adc
repz
popf
cmpsl
inc
clc
add
adc
push
xor
mov
sbb
and
andb
dec
mov
add
negl
pop
add
lret
jo
add
xchg
push
sbb
bound
out
pop
ss
arpl
adc
fsub
push
outsb
cmp
ret
es
rolb
addb
cmpsl
push
jecxz
js
push
pop
push
and
rep
test
shlb
aam
sti
xchg
lret
mov
lods
sub
fstpt
sub
mul
xchg
add
push
sub
dec
cmp
pop
fsubp
sahf
mov
and
jg
addb
add
fsubrs
dec
add
sub
xor
mov
call
fwait
push
sahf
leave
sbb
lahf
xchg
dec
jbe
fcompl
ffreep
push
dec
les
jmp
xor
mov
sub
or
dec
add
cmc
enter
dec
scas
mov
mov
cmpsl
add
dec
mov
js
xor
or
dec
add
ds
add
popf
jecxz
push
push
cmc
aas
or
add
loop
jne
popf
int3
jl
add
fcoms
push
and
lock
je
scas
xor
sbb
cmp
dec
cld
sub
jnp
add
xchg
decb
and
lock
incl
mov
jge
jno
cld
xchg
add
scas
cld
loopne
add
les
cmp
sbb
adc
add
and
ret
hlt
sub
and
test
leave
lret
add
push
lea
scas
addb
pop
mov
dec
out
bound
mov
xchg
dec
jno
cmp
and
sub
dec
jnp
cli
pop
add
scas
loop
test
js
cmovnp
mov
fucomip
ja
xchg
fcom
jno
bound
fldl
rol
ret
jnp
leave
add
or
dec
add
icebp
insb
dec
lahf
ret
fld
out
enter
call
lods
ds
cld
fdivl
xor
loopne
inc
stc
sbb
mov
movsb
je
add
add
add
and
pop
sbb
ja
aaa
mov
add
jle
cltd
clc
loope
sub
jae
adc
mov
add
test
xchg
add
addr16
dec
adc
mov
loopne
or
popa
cmp
and
mov
cmc
push
repnz
push
add
test
add
icebp
mov
add
mov
int
adc
les
popf
loope
call
add
push
fsubrs
adc
mov
add
add
jne
out
xor
rolb
dec
sub
pop
add
subb
or
aas
add
popf
mov
jg
xor
pop
cld
push
or
pop
ficomps
mov
test
add
ss
adc
add
lock
adc
fldt
sbb
add
subl
add
or
push
adc
pop
sbb
adc
daa
fstpl
inc
xchg
jne
push
add
sbb
sub
mov
push
adc
jmp
mov
and
xchg
leave
pop
loopne
push
add
or
int3
divb
sbb
rorb
pusha
add
push
and
aam
or
das
add
call
or
or
adc
sbb
and
xor
inc
push
aas
pusha
jo
andb
nop
xchg
add
dec
add
pop
add
loopne
sbb
xorb
je
jbe
js
jp
jl
jle
jle
sbb
push
adc
loopne
push
mov
push
mov
cmp
jb
pop
push
mov
add
inc
mov
inc
inc
add
in
jp
pop
sub
incb
mov
jmp
jge
add
shll
stos
jb
add
inc
adc
into
xor
adc
std
add
iret
and
lock
xchg
leave
pop
inc
push
cmp
xchg
arpl
ds
add
mov
lods
into
andl
sbb
mov
mov
stos
add
addl
add
rep
mov
inc
out
sbb
jbe
mov
or
mov
je
add
inc
inc
cmp
add
mov
add
fincstp
push
inc
xchg
or
xchg
jne
add
decb
sbb
sub
shl
add
andl
and
sub
xor
orb
pop
pop
ret
cmp
out
rolb
and
add
jne
out
outsl
push
pop
pushf
push
and
out
adc
add
and
add
add
aam
pop
add
aaa
adc
adc
jmp
lret
sub
xorl
iret
leave
inc
sbb
inc
dec
mov
pop
or
jno
or
cwtl
add
jge
aas
push
std
popf
inc
add
rorb
add
xchg
adc
xorb
mov
adc
add
xchg
sarb
mov
fidivs
and
add
int3
loopne
and
sub
cmp
inc
out
jb
mov
jo
add
pop
js
jge
add
mov
mov
adc
icebp
aaa
popl
adc
loope
jmp
pusha
xchg
test
cs
add
xor
sahf
pop
stc
add
adc
lret
icebp
sbb
sub
push
inc
fs
mov
enter
add
roll
jmp
les
xor
addb
rcr
xchg
cld
iret
adc
jmp
add
and
sbb
or
clc
inc
cmp
cmp
cs
fstpt
jns
add
cli
mov
mov
sbb
pop
call
lcall
mov
sbbl
rcrb
loop
decb
pop
mov
ret
shl
add
jb
xchg
mov
push
lea
push
push
add
pusha
push
ljmp
xorb
test
nop
adc
rolb
pusha
add
cvtdq2ps
fwait
jmp
sbb
rcll
pop
in
outsb
mov
ds
andb
xchg
lds
push
cwtl
push
inc
inc
add
outsb
out
and
pop
push
or
add
xchg
pop
dec
cli
add
rcl
pop
daa
jns
add
xor
add
int
sub
sbb
inc
ss
push
push
pusha
cwtl
sub
add
sbb
adc
in
add
push
repz
push
xchg
or
cltd
fcompl
inc
or
insb
xor
sbb
pop
cmpsb
push
push
lods
pop
into
scas
faddl
xor
inc
jmp
jne
aas
sub
pop
sbb
bnd
subl
cmpb
add
dec
mov
mov
mov
mov
gs
add
add
sub
push
pop
push
xor
ja
cmp
pop
mov
dec
pop
lret
inc
inc
jl
jb
hlt
adc
adc
push
stos
call
sub
out
mov
mov
loop
cmovs
aam
lods
pop
andl
data16
or
pop
sub
pop
sbb
aas
test
gs
rolb
loop
mov
adc
jne
mov
inc
add
dec
pop
pop
fcoml
cmp
inc
lds
in
aad
test
ror
add
push
mov
in
mov
add
jmp
push
add
xchg
push
jae
xor
add
push
cmpsl
sub
and
jmp
xchg
dec
jae
lods
stc
mov
inc
or
shr
add
jmp
inc
cld
jne
mov
dec
or
add
enter
xor
and
int3
jecxz
addr16
push
or
cmp
push
jo
nop
roll
pop
std
ret
pop
xor
jp
add
int
jo
rcr
ljmp
shld
fisubl
jp
push
add
xlat
test
lret
add
and
inc
push
nop
addl
lock
cli
add
incl
add
out
pusha
push
outsl
std
add
add
lds
or
inc
das
cmp
xchg
xor
clc
add
jecxz
scas
push
mov
cmp
iret
jns
xchg
inc
loopne
add
rcrl
out
and
adc
and
pusha
jo
xchg
add
sub
or
movsl
insb
inc
fsubrp
add
mov
pop
in
xor
add
push
sbb
outsb
fadds
dec
rolb
sbb
dec
inc
add
mov
aas
jmp
lods
xchg
dec
add
mov
pop
add
mov
cmp
xchg
pop
pop
adc
sarb
ret
xchg
jae
add
add
mov
loop
dec
and
jnp
xchg
test
mov
add
loopne
into
cld
imul
outsb
sub
addb
std
lcall
insb
dec
and
les
sbb
sub
or
lret
add
pop
sbb
arpl
loopne
jae
call
sub
add
sbb
dec
into
movsb
add
dec
enter
sub
cmp
addr16
sub
fs
xchg
notb
push
push
inc
mov
ljmp
pop
mov
adc
fldl
adc
sar
push
mov
add
pusha
pushf
pop
or
pop
or
push
leave
sbb
cmp
push
cwtl
adc
or
mov
dec
rorl
movl
mov
add
inc
test
insb
testl
adc
pop
or
add
mov
sbbl
add
sbb
push
mov
jp
call
pushf
adc
xor
test
inc
push
clc
xchg
xor
inc
sbb
rcl
fcomps
in
or
sbb
inc
pop
cwtl
arpl
or
cmp
mov
loope
sbb
sbb
sbb
push
inc
popa
and
and
jo
aas
call
dec
push
sbb
jl
mov
movsb
add
je
jecxz
bound
cld
test
cmp
jmp
nop
xchg
arpl
and
push
sbbl
loop
jg
inc
ss
mov
add
mov
mov
and
mov
mov
mov
or
pop
stc
ret
lds
leave
jl
call
and
cmove
arpl
push
int
jns
sbb
jmp
repnz
idivl
loopne
enter
test
or
sbb
std
sub
fcomps
add
out
sub
rorb
mov
mov
inc
mov
fs
or
xor
out
mov
dec
mov
mov
shlb
jo
dec
adc
and
pop
add
mov
loope
test
adcb
or
pop
pop
or
scas
and
pop
inc
mov
sub
or
inc
add
fists
xor
or
pushf
xchg
insb
add
and
in
ss
in
or
sbb
adc
or
fistps
adc
and
dec
test
add
lock
les
sahf
call
and
and
push
add
xor
add
mov
push
lea
add
mov
cmp
adc
add
mov
xor
dec
rclb
outsb
je
insl
rcrb
loop
pop
out
addl
loopne
xor
xchg
inc
push
inc
sbb
xor
xor
ss
cmpb
inc
add
inc
inc
inc
push
and
add
or
mov
or
test
xor
stos
adc
sbb
jo
sbbb
push
ljmp
aad
clc
cld
add
jo
xor
adc
subl
movsb
dec
sbbb
and
mov
int3
dec
add
xchg
fsubl
in
in
hlt
adc
add
adc
sbb
ljmp
mov
dec
sti
push
clc
pop
mov
je
cmp
xchg
and
jle
or
sti
int3
sti
aam
fdivr
in
scas
cli
push
dec
add
enter
jb
cmp
push
push
and
fmuls
jno
punpckhdq
xchg
mov
movsb
add
inc
pusha
adc
outsb
icebp
aam
mov
pop
addr16
xor
sbb
mov
inc
dec
dec
dec
push
dec
dec
dec
push
add
push
push
push
add
push
lcall
dec
je
add
arpl
push
rcl
add
add
ja
js
jbe
and
imul
jmp
and
push
divb
inc
pop
cwtl
das
mov
add
iret
add
shlb
add
push
cmp
adc
pop
jo
add
sbb
cwtl
loopne
add
fadds
pop
adcl
rolb
or
je
pop
loopne
add
mov
andb
jae
jno
ja
add
in
inc
mov
cmp
int3
dec
mov
jmp
je
fsubrl
add
cmp
test
daa
add
pop
mov
inc
add
arpl
push
pop
addr16
adc
add
mov
cmp
and
cs
pop
insl
sub
add
or
or
mov
add
ret
push
sub
xchg
mov
dec
popw
sbb
ret
insb
push
sbb
xchg
add
and
cltd
sbb
xor
mov
sarl
dec
ja
sub
mov
mov
sbb
cmp
pop
fmuls
sbb
add
outsl
cs
ja
push
arpl
enter
mov
mov
shld
mov
jno
jge
mov
inc
sbb
adc
pop
sbb
call
xor
pause
sbb
int3
and
or
add
xchg
and
dec
rclb
nop
and
or
lcall
das
icebp
fisubrs
adc
add
and
add
cwtl
test
or
pop
lahf
fmull
test
fadd
cmp
inc
movsl
enter
jne
pop
or
dec
roll
loopne
or
add
rorl
inc
mov
mov
mov
jp
or
add
lods
sbb
sbb
xor
cmp
jo
loopne
pop
popf
add
js
or
inc
add
sbbb
add
js
add
inc
xor
add
loop
in
add
repnz
push
inc
data16
in
jl
repnz
adc
rorb
add
and
xor
cmp
push
stos
push
rcrb
cmp
movl
sbb
cmp
pusha
dec
int3
push
or
movsb
sbb
cmp
add
and
add
clc
or
push
mov
mov
cli
pushf
jbe
add
dec
sbb
and
std
movsb
jl
sbb
push
fadds
mov
sarb
jo
add
pop
or
or
or
testb
movups
test
push
add
roll
or
mov
ret
ret
sbbl
mov
sarb
cmp
enter
add
ss
sbb
add
loope
nop
cmp
xor
sub
xor
cmpsl
clc
flds
fidivrl
and
fiadds
inc
fmuls
loope
rcl
nop
ucomiss
test
js
inc
rolb
mov
and
inc
jl
mov
mov
call
aaa
push
pop
shlb
cmp
mov
sub
xorb
xchg
xor
lcall
loopne
pop
out
sub
add
bnd
or
daa
add
and
sbb
or
lods
cmp
movsb
xchg
popa
mov
mov
cltd
inc
pusha
push
adc
sbbl
leave
jl
sub
mov
mov
add
xor
lods
pushf
ds
xor
sbb
jl
adc
stc
and
or
sub
xor
or
add
cmp
lea
xacquire
and
leave
adc
imul
jmp
add
or
insb
dec
inc
push
xchg
fs
orb
or
bound
test
add
xchg
push
cwtl
add
add
xchg
pop
sub
inc
mov
pusha
mov
hlt
stc
cmp
loopne
mov
add
imul
nop
adc
add
inc
xchg
les
xorl
mov
dec
popl
fsubs
add
or
imul
jl
inc
js
call
ds
push
mov
mov
fidivl
int3
dec
mov
mov
cltd
aam
fsubl
aaa
xor
out
popa
subl
and
mov
call
add
cmp
add
add
rcll
xchg
lock
and
adc
ss
icebp
aam
dec
adc
in
sbb
adc
add
add
jl
inc
int
pop
inc
ret
mov
xor
and
decb
sarb
loopne
jns
and
in
dec
lock
mov
add
cmp
add
or
js
nop
add
mov
adc
cmp
add
mov
mov
add
adc
jp
mov
mov
enter
ljmp
push
ja
dec
andb
inc
pop
outsb
jns
cwtl
out
test
mov
mov
mov
sub
sbb
cld
adc
and
sbb
stos
jl
ds
cmp
add
adc
test
lcall
int3
aas
fsubl
enter
xor
dec
inc
cmp
push
pusha
stos
inc
adc
test
loopne
movsb
mulb
sbb
cmp
xchg
inc
push
mov
adc
orb
xchg
lcall
lock
jbe
gs
sub
cltd
push
adc
add
xchg
mov
cmpsb
stc
mov
hlt
das
bswap
lret
adc
es
inc
outsb
insb
mov
pop
sahf
xchg
lods
fistpll
jb
int3
add
jno
add
xchg
inc
and
insb
or
mov
mov
aaa
add
loope
rol
adc
adc
mov
or
lea
fiaddl
mulb
or
add
sbb
sub
push
cmpsl
add
data16
test
pop
xchg
pop
jg
lods
push
lret
or
ror
in
sbb
cmp
loopne,pn
push
dec
push
xchg
out
stos
out
out
aam
out
mov
pop
push
rorb
and
testl
std
xchg
hlt
pushf
dec
and
scas
mov
xor
xor
gs
outsb
pop
insb
add
xor
fs
aam
add
je
jne
push
into
add
push
push
add
jbe
inc
mov
jb
mov
push
push
fnsave
mov
ja
dec
add
fcompl
inc
jle
mov
add
and
jp
xor
hlt
jne
mov
in
mov
push
inc
xchg
outsl
call
aad
sbb
sbb
add
in
adc
push
imul
popa
adcl
insb
sbb
sub
or
cs
and
je
fisubrl
inc
loope
or
jo,pt
or
xchg
je
imul
inc
and
inc
pusha
jmp
add
and
push
xchg
mov
loop
outsw
inc
loopne
push
jb
jnp
jno
into
push
jae
cwtl
addl
stc
add
dec
adc
inc
imul
insl
push
push
pop
push
dec
and
jb
cmpsb
in
push
shrl
add
xor
add
push
sub
mov
dec
xor
pushf
inc
xor
cli
sub
rcrl
push
mov
pop
outsb
push
inc
cmp
inc
sbb
movsb
je
adc
sbb
outsl
xchg
inc
adc
rclb
jo
mov
or
pop
push
sbb
stos
add
push
mov
dec
cwtl
dec
add
mov
inc
cwtl
mov
mov
imul
jo
add
jp
cmp
xchg
aam
dec
add
jne
jb
lret
pop
xor
inc
mov
and
xor
outsb
addr16
dec
lcall
inc
outsl
js
cmpsb
add
lahf
dec
jge
xchg
nop
jnp
sub
imul
add
push
inc
xchg
dec
add
add
sub
cmpsb
outsb
jb
pop
adc
add
mov
sub
jo
cmp
mov
les
jne
add
push
sub
nop
add
dec
adc
in
adc
subb
push
pushf
daa
cmp
mov
push
lcall
sbb
ficoml
rorb
mov
sub
addl
inc
fisubrs
xchg
add
jne
dec
push
xchg
movsb
or
clc
lcall
outsl
popaw
ret
int
in
jmp
xchg
imul
push
adc
cs
andb
add
andb
jns
xor
push
pop
push
aam
ja
movntq
orb
lods
add
inc
jne
xchg
scas
lods
jp
mov
dec
mov
add
repnz
mov
cwtl
pop
mov
push
jp
stos
sbb
lcall
ja
jae
int
cmpsb
add
pop
push
ss
leave
pop
lock
aad
push
jns
loopne
mov
sbb
xchg
xor
jmp
sarl
add
mov
in
dec
sub
xchg
cmpb
pop
push
mov
pop
mov
jl
test
push
add
andl
hlt
or
test
jmp
add
inc
es
inc
das
mov
imul
mov
jne
jl
pop
add
subb
pop
cmp
push
mov
sub
jmp
movhps
stos
loop
outsb
lods
mov
inc
xchg
and
sub
divb
and
dec
pop
inc
push
add
insb
fisttpl
dec
add
movsb
or
xchg
and
dec
les
add
fstl
xor
mov
mov
mov
lods
inc
loopne
sbb
addr16
sub
xchg
stos
mov
inc
dec
inc
cmp
and
add
inc
mov
add
push
cli
push
sub
mov
inc
into
out
push
sub
add
push
mov
push
and
jo
or
add
dec
jno
lods
adc
addb
imul
mov
dec
je
push
add
dec
lods
dec
push
xchg
pop
roll
mov
fwait
jbe
push
dec
add
sti
pop
or
test
cmc
int
pop
inc
aaa
add
pop
xchg
xor
bound
cmpsl
in
cmp
add
adc
call
and
aas
dec
and
enter
adc
and
loopne
loope
jo
and
or
add
jp
cmp
pop
inc
push
inc
clc
stos
or
mov
push
cmovl
sbbl
xlat
mov
push
clc
xor
add
mov
cld
inc
lcall
jns
mov
and
cli
mov
mov
and
push
xchg
je
mov
add
lcall
or
and
cmp
je
ja
imul
out
adc
mov
add
inc
inc
sarl
add
sbb
pop
xlat
jl
movsb
sbb
sbb
adc
je
inc
xor
adc
out
lods
repz
nop
jbe
or
or
xchg
ret
stos
sbb
dec
outsb
add
addr16
in
push
add
xor
xor
sub
cmp
mov
dec
outsb
add
add
xor
sub
cmp
cmp
inc
cmpsl
inc
dec
out
dec
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
loope
xor
leave
adc
push
sbb
and
cmp
jb
je
jbe
js
jp
jl
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
add
clc
push
xor
je
add
js
jp
jl
cmp
cmp
add
sbb
xor
popf
aad
pop
sbb
call
pop
leave
imul
aaa
sbb
cmp
lret
push
fstpl
add
xchg
cmp
daa
add
push
dec
clc
push
pop
je
jbe
js
jp
jl
jle
jl
jle
jle
jle
jle
jle
jle
jle
add
xchg
cmp
pop
inc
push
xor
cmpl
push
fimull
movb
cmp
add
xchg
cmpsl
fld
loopne
add
in
pop
cmp
add
sahf
dec
push
push
lahf
pop
pop
je
jbe
js
pusha
fwait
mov
xchg
stos
popa
push
add
sbb
sub
xor
sub
icebp
mov
ret
in
mov
inc
and
xor
jb
je
jbe
js
add
jl
jle
xchg
mov
dec
rcrl
and
out
add
push
and
es
cmp
mov
pop
pcmpgtb
add
lcall
sbb
xor
popf
cmp
pusha
add
xchg
pop
pushf
call
xor
daa
adc
cmp
cmpsl
add
mov
lock
mov
insl
xor
leave
mov
mov
and
das
jbe
js
dec
mov
cmp
mov
push
fwait
aaa
mov
xlat
mov
jns
add
repz
cmp
in
call
icebp
inc
ljmp
mov
rolb
cs
add
in
mov
nop
lcall
or
xor
int3
adc
or
add
add
bsr
xor
lret
xor
in
out
pop
add
js
jp
jl
add
xor
popf
sub
jp
pop
inc
jl
fiaddl
xchg
mov
cmp
xlat
cmp
add
stos
inc
daa
pop
inc
ja
add
jnp
xchg
out
cltd
inc
lds
sahf
iret
lahf
icebp
add
loope
ss
pop
push
shrl
fldcw
icebp
cwtl
adc
pop
fildll
repz
add
sub
cmp
cmp
push
dec
aaa
subl
xor
loopne
pop
xchg
les
sbb
push
xchg
sahf
stos
adc
inc
cmp
pop
cmp
cmp
aas
cltd
sub
inc
cmp
addb
mov
add
or
cmp
outsb
xor
adc
xor
ss
xchg
sbb
add
inc
mov
cmpsl
jae
adc
scas
jle
jle
iret
xor
shl
cmc
in
lock
push
cmova
xor
cmp
dec
in
call
jae
ja
jge
in
sarl
mov
mov
fnstenv
icebp
out
lock
cmp
in
call
add
hlt
inc
clc
jno
jge
xchg
shll
pop
jle
cmp
cmp
sub
pop
add
aas
jbe
mov
xchg
in
mov
xchg
pop
jle
add
push
add
or
mov
sbb
and
sub
js
jp
jl
jle
js
jp
jl
jle
jle
add
lcall
lahf
mov
js
jp
jl
jle
jle
add
ret
add
or
mov
subb
xor
cmp
jb
je
jbe
js
jp
add
mov
ja
lret
iret
fcmove
loop
ljmp
pusha
xchg
add
xor
add
dec
out
in
pop
lret
push
lods
or
lock
cmp
add
repnz
inc
lahf
dec
pop
push
jmp
and
ljmp
add
mov
jmp
sbb
in
stc
hlt
clc
cld
lock
add
or
adc
sbb
and
sub
xor
cmp
jb
je
jbe
pop
pop
lcall
jl
test
sbb
sub
int3
cmp
cmp
cmp
hlt
and
and
sbb
lock
xor
sbb
repz
orl
fsubrs
popa
add
test
mov
pushf
cld
jb
je
jbe
js
jp
jl
jle
jle
jle
cmp
or
mov
pop
cmp
cmp
cmpsb
sub
mov
push
jle
cwtl
mov
jle
jle
add
xchg
in
shr
lock
call
push
ss
sbb
cmove
dec
loop
xchg
push
icebp
pop
popa
fwait
loope
jmp
pushf
stc
mov
rcrl
pavgb
leave
mov
out
cmp
add
out
pop
aaa
add
or
inc
or
adc
inc
xchg
xor
xchg
pop
cmpsl
pusha
fs
out
out
out
out
out
out
in
xchg
mov
repz
repz
fsub
cld
pop
je
cmp
mov
adc
add
and
push
ret
pop
shll
fs
repz
js
jl
mov
lods
repz
mov
dec
es
nop
sub
xor
jl
adc
adc
add
fstps
and
and
sbb
stc
sub
xor
push
lahf
je
js
jl
andb
mov
jle
jle
jle
jle
jle
jle
jle
add
mov
fsubs
iret
pop
and
add
inc
xorb
push
adc
jo
je
js
jl
orb
mov
mov
nop
repnz
pop
in
call
cmp
push
sub
test
inc
xor
stos
cmp
or
popf
cmpb
notl
nop
jecxz
repz
repz
repnz
loopne
fsubr
xchg
fimull
fdivrl
clc
add
and
loope
imul
add
dec
and
and
add
sarl
cwtl
repz
in
call
push
dec
mov
aas
enter
lock
cmp
cld
leave
test
out
or
or
adc
mov
aas
dec
and
xorb
pop
xchg
insb
mov
xchg
test
outsb
in
shrb
pop
sub
idivl
or
sahf
adc
sbb
xor
cmp
pop
hlt
pusha
lcall
lret
xchg
js
daa
xchg
xchg
mov
orl
gs
int
popa
iret
push
and
jns
sbb
cmp
push
push
pop
add
xor
cmp
loop
aas
stos
xor
cmp
cmp
xchg
sahf
xchg
push
lcall
lcall
repnz
call
daa
cmp
inc
mov
cmp
sbb
lcall
rcll
xor
xchg
mov
or
inc
je
jbe
add
push
lcall
add
enter
push
call
lock
hlt
jno
pop
jne
jns
push
or
lea
cltd
iret
popf
rolb
pop
add
xor
inc
xor
nop
add
dec
add
cmp
add
call
sub
ret
and
add
push
xchg
dec
mov
inc
nop
popf
add
minps
dec
cmp
call
mov
jl
add
and
rcrb
dec
add
pop
inc
pop
outsl
xchg
les
jnp
lea
pushl
add
jbe
lock
xchg
add
aaa
mov
in
call
push
negl
cmp
daa
insl
dec
mov
xlat
ret
adc
xchg
xchg
mov
into
xchg
ret
adc
pop
push
inc
mov
push
mov
daa
jbe
ss
dec
push
or
cmp
shr
test
inc
push
ds
call
aas
jb
pop
push
cld
mov
add
ss
jl
in
sbbb
loope
clc
jmp
xor
leave
aaa
roll
cmp
cmp
shrl
out
testb
push
dec
icebp
sub
xor
xchg
dec
mov
gs
ja
mov
cmp
inc
and
jb
js
mov
pop
fidivl
jmp
aas
decb
add
or
mov
iret
sbb
and
sub
xor
aaa
movsb
cmp
xchg
test
cs
xor
mov
mov
sub
enter
test
push
aaa
psrlq
clc
outsb
ret
cwtl
out
mov
jecxz
lock
inc
in
add
mov
hlt
mov
nop
mov
pop
in
pop
cmp
filds
push
or
adc
mov
iret
push
cvtdq2ps
jbe
mov
xchg
leave
mov
sahf
ficomps
adc
paddb
test
popa
xchg
out
or
add
dec
sbb
cmp
push
add
es
mov
inc
cmp
dec
adcb
popa
fsubs
dec
sar
aam
fdivrs
in
call
mov
cwtl
inc
mov
jl
add
xchg
or
add
cmp
sbb
sbb
and
and
sub
mov
xor
pop
mov
pusha
inc
fs
push
add
xchg
cwtl
or
int
lds
xorl
and
je
pusha
push
xor
test
cmpsb
pop
inc
xchg
dec
orb
push
inc
mov
jo
mov
add
bswap
sbb
iret
rcrb
loopne
call
mov
or
jle
push
sbb
sbb
lret
ret
add
into
aas
inc
and
pop
mov
push
addb
das
add
cs
lds
cmp
cmp
lcall
aaa
add
test
cmp
je
popa
add
sbb
cmp
inc
roll
pop
fldenv
outsl
jmp
mov
cltd
sahf
pusha
pop
scas
sub
int
fcoms
mull
inc
pop
pop
cmovg
imul
and
aad
ret
into
movsl
repz
in
call
js
sbbb
push
sahf
add
outsl
aas
jnp
add
inc
rcrb
nopl
sub
pusha
mov
xor
sbb
xor
add
pop
icebp
or
xor
sarl
leave
xor
dec
cmp
pop
cmp
add
mov
adc
ds
mov
dec
add
mov
iret
xchg
jmp
cmp
cwtl
jl
inc
add
movsb
xchg
mov
ret
sbb
shll
mov
add
inc
xor
or
in
cmp
dec
test
add
mov
movsb
mov
jge
loope
clc
aaa
and
add
push
in
mov
xchg
hlt
add
clc
idiv
cmp
outsl
out
mov
xchg
sbbb
cli
pop
call
adc
add
jae
lea
aas
add
push
das
cmp
mov
or
sbb
add
xchg
lock
sbb
es
sahf
pop
mov
inc
stc
xchg
jno
in
mov
cwtl
stos
jb
dec
add
inc
loopne
pop
mov
sbb
daa
lock
out
cmc
leave
push
pop
mov
xchg
pop
repz
addr16
addl
adc
aam
push
cmp
arpl
add
or
and
jno
jl
sub
popa
pop
pop
fsubs
pop
outsl
push
push
jg
xchg
dec
mov
or
push
stc
pop
in
sti
test
sub
xor
push
xor
inc
inc
cmp
stc
inc
inc
dec
js
aas
push
add
mov
popl
jle
cwtl
leave
mov
loopne
in
jp
push
stc
mov
je
jbe
add
jp
pop
sbb
mov
add
fcoml
lock
or
xor
dec
rcr
add
loopne
xor
push
int3
bnd
add
xor
xchg
daa
imul
stc
clc
loop
add
jb
dec
mov
mov
jmp
add
mov
push
cli
loope
xor
push
cmp
out
xor
arpl
js
jp
jl
dec
add
stos
jb
into
add
shr
repz
mov
ret
enter
arpl
xchg
pop
or
pop
rcrl
jecxz
pop
repz
das
add
hlt
adc
clc
aas
repnz
mov
dec
xchg
push
mov
sahf
sub
stos
enter
add
repnz
in
enter
jbe
add
dec
dec
push
shl
add
pusha
jmp
pusha
call
mov
inc
or
adc
adc
dec
sbb
in
sub
xchg
xor
dec
cmp
pavgb
iret
into
leave
call
stc
xorb
jo
or
clc
or
sub
pop
rolb
push
repnz
mov
insl
mov
mov
push
pslld
int3
sub
add
sub
mov
inc
adc
rcrb
gs
test
sub
lods
sbb
add
push
cmp
sarb
jb
add
andb
stc
mov
sub
adc
lahf
loopne
call
sbb
jno
mov
fs
sub
push
jle
push
ret
jl
orb
add
rcrb
subl
add
add
add
lea
cmp
sub
dec
ret
cmp
fldt
pop
jcxz
jmp
cltd
dec
cmpsb
inc
inc
adc
push
test
mov
push
subb
nop
lods
call
sti
fdivrs
out
out
clc
push
cmp
cmpb
sub
cmpsb
shll
inc
rorl
out
mov
sbb
add
leave
outsb
or
dec
add
mov
xacquire
imul
hlt
add
cld
pop
sub
adc
popf
add
xchg
cmp
xor
aas
pop
repz
cmp
sbb
xor
mov
xchg
xor
cmp
mov
push
cmp
and
in
fadds
pop
xchg
jle
pop
xor
sbb
popf
adcl
dec
cmp
mov
adc
sub
add
mov
push
pop
int3
add
inc
and
into
icebp
pop
loopne
in
jnp
xchg
pop
cmpsb
xchg
add
cmpsl
lods
add
loope
cmp
push
and
add
ss
pop
mov
sbb
push
mov
add
test
mov
dec
je
jbe
sbb
xor
cs
setge
pusha
mov
xor
fstl
push
sarl
in
jp
add
lcall
pushf
mov
mov
sub
add
add
loop
pop
cmp
push
cmp
cmp
fstpt
pop
mov
pop
ja
js
data16
jl
dec
sbb
cmp
punpcklbw
roll
aas
imul
loope
mov
in
shl
sub
test
scas
add
js
clc
cmp
sub
es
sub
ret
adcl
or
nop
mov
cmp
push
pop
add
inc
jmp
jae
or
and
inc
inc
xchg
and
dec
push
ficompl
push
test
pop
push
push
add
add
fiadds
mov
shlb
in
psubsb
out
movsl
cmp
add
mov
xor
jb
je
jbe
shll
outsb
pshufb
shrl
pop
stc
xchg
add
push
mov
outsl
les
inc
adc
call
add
pop
js
dec
add
push
hlt
pop
pop
sbbb
mov
add
lock
inc
hlt
enter
not
push
clc
dec
fadds
cld
adc
mov
inc
add
ljmp
cmpsl
hlt
roll
xor
rorb
dec
dec
and
push
repnz
jp
add
ret
xor
sub
pop
sub
xor
mov
movlps
sub
xor
test
fadds
cmp
xchg
pushf
mov
mov
add
shlb
add
xchg
nop
mov
mov
pop
xor
lea
dec
daa
cld
inc
jnp
inc
add
sub
scas
ds
loope
jmp
add
adc
lock
hlt
add
pushf
je
cmpb
ja
mov
and
add
push
sbb
xor
xchg
adcl
mul
add
out
pop
loopne
push
xor
gs
addl
sahf
mov
add
or
jnp
or
add
outsl
shll
add
ret
push
sbbb
cmp
test
test
cmp
push
cmp
xchg
sbb
push
outsl
add
jle
dec
test
add
pop
push
fstpl
sub
push
lock
shlb
outsb
dec
movsb
loopne
or
lret
mov
adcb
gs
and
cmp
cltd
adcb
inc
xchg
movsl
add
enter
roll
mov
jle
and
add
int
rolb
dec
xor
push
adc
mov
mov
adc
mov
aas
addl
roll
mov
mov
les
sub
mov
push
jns
sbb
in
lock
pop
cmp
or
xchg
dec
sbb
xor
push
add
pop
dec
outsb
cmpsl
xor
stos
aad
ret
and
popa
xchg
add
sti
nop
or
sbb
add
mov
jb
out
cmp
xchg
add
test
cmp
or
dec
cmp
jbe
add
lcall
sub
in
loope
loopne,pt
and
or
pop
pop
mov
out
cmp
loopne
cli
mov
sbb
rcrl
out
add
push
mov
sub
test
sub
pop
push
sub
add
int3
jl
pop
cld
data16
add
fdivl
rcr
add
mov
sbb
inc
popf
movsl
sbb
or
nop
aaa
movsb
add
jmp
cs
or
stos
je
pmuludq
ret
pusha
pop
mov
dec
cwtl
test
add
jbe
xchg
mov
dec
add
cmp
sahf
jno
data16
xchg
jp
push
pop
test
mov
mov
cmp
rclb
push
adc
inc
push
loopne
push
lods
mov
pop
sahf
push
clc
xlat
inc
add
outsl
movsl
fiaddl
cwtl
add
sub
movl
xor
roll
mov
outsl
in
add
sbb
xchg
sbb
push
push
inc
or
adc
cmp
xchg
and
mov
lahf
pop
xchg
cmp
imul
subb
lock
cmp
rorb
test
fdivs
aas
jb
cmpsl
nop
mov
stos
lret
xchg
mov
pop
add
in
pop
inc
shlb
xor
add
pop
push
cmp
mov
xor
and
mov
sar
loop
daa
leave
mov
push
xor
or
mov
in
jle
loope
orb
adc
pavgw
push
adc
repz
jl
je
xchg
movl
data16
adc
xchg
cs
add
jo
divl
test
push
sahf
push
lahf
pop
clc
lods
add
fs
push
insb
enter
xchg
shlb
cmp
fsubp
add
jb,pt
fwait
or
and
dec
hlt
mov
xor
aaa
inc
mov
pop
add
push
xor
pop
popa
cmp
and
imul
mov
add
sub
ret
sub
repz
cmp
jg
movsb
dec
aas
push
add
pop
orb
call
in
aas
add
sahf
imul
ja
test
pushf
jmp
jb
mov
mov
sbbb
das
ret
pop
xchg
ljmp
sub
cmc
jb
imulb
add
lock
push
mov
ds
xchg
fsub
add
pop
inc
push
cmp
and
push
popf
pop
sbb
fs
push
adc
js
lahf
pop
imul
cli
xchg
lret
cltd
cmp
test
add
addr16
dec
pop
out
pusha
add
inc
sbb
das
push
lret
push
pop
add
repnz
and
nop
shufps
fadds
jae
mov
xchg
sbb
es
sub
jle
add
jo
test
mov
add
dec
mull
or
push
push
cmp
dec
jnp
sbb
pop
icebp
and
daa
add
sub
jb
je
jbe
popf
js
add
leave
mov
mov
mov
lock
leave
cmpsl
push
shl
aad
pop
cmp
call
sbb
in
and
xchg
popa
pop
data16
add
mov
and
and
cltd
xor
xor
sbb
fwait
aas
add
inc
xor
in
push
aaa
sbb
push
push
sub
mov
cmc
xchg
mov
add
push
rclb
adc
push
cmp
bnd
test
inc
xchg
outsl
lock
pop
cmpsb
mov
push
xor
lock
cmp
mov
push
and
shlb
aam
in
and
nop
loope
js
lods
add
lods
pop
icebp
hlt
or
dec
xor
xor
mov
hlt
add
js
sub
add
lods
sub
aas
les
nop
popl
cmovno
insb
jo
mov
flds
xchg
insl
dec
add
clc
mov
popa
loop
enter
inc
cmp
ret
mov
filds
and
andb
or
sarb
push
jl
jle
dec
imul
add
inc
pusha
xrelease
xor
pop
mov
and
push
out
nop
xchg
rcrb
ret
add
stos
sub
xchg
add
mov
add
push
aas
sbb
inc
xchg
push
shll
fdivrl
sti
mov
xchg
dec
inc
push
rcrb
add
pop
into
ret
dec
push
pop
je
vmread
addr16
add
or
and
in
push
loopne
push
cld
jle
add
mov
push
cmpsl
and
test
sub
pop
leave
and
xor
enter
push
popa
ljmp
das
mov
dec
fdivr
loope
push
xchg
ds
mov
xchg
inc
jns
mov
mov
loope
xor
leave
push
xor
cmp
loop
inc
push
cmp
or
js
pop
stc
fsubr
xchg
push
scas
pop
mov
fimuls
sub
xor
mov
icebp
insl
cmp
xchg
jge
rolb
roll
add
popf
add
cmovne
pop
shlb
clc
mov
cld
ret
add
popf
mov
push
inc
hlt
dec
pop
cmp
mov
loopne
jmp
repz
xor
mov
loopne
rolb
aas
fwait
xor
dec
shrb
jmp
hlt
xorb
popa
out
add
stc
loop
addps
ret
xor
add
sbb
xor
xchg
mov
push
push
sbbb
add
cmp
cld
daa
cs
add
scas
mov
push
loopne
add
std
ret
dec
cmp
xchg
mov
sub
add
sbb
push
cmpb
pop
dec
subl
outsl
iret
add
pop
jnp
mov
inc
and
mov
add
fwait
in
add
femms
ror
enter
jmp
cs
or
xor
adc
orl
xor
test
into
out
test
dec
aas
lahf
cmp
sbb
jl
sub
and
inc
mov
or
hlt
add
fsubrs
js
pop
jp
sbb
xor
imul
jmp
fxch
pop
cmp
xor
push
addb
bound
insb
add
leave
sub
sbb
pop
cld
xchg
nop
cmp
add
bound
mov
adc
les
adc
in
mov
dec
sub
sahf
xor
jle
cmp
inc
add
xchg
lcall
cmp
or
dec
test
cltd
hlt
lods
clc
roll
test
jmp
add
pop
mov
mov
mov
sub
cmp
add
adc
mov
jle
jg
adc
xchg
cs
fadds
push
fsts
push
pop
mov
in
or
jae
mov
xchg
add
cmpsl
clc
push
jle
nop
fimull
push
int
roll
enter
xor
in
xor
push
leave
pop
shrl
movsb
pop
or
or
mov
add
stc
fwait
push
sbb
leave
cld
into
push
inc
loopne
in
clc
add
rcrb
mov
xor
test
push
cmp
cmp
mov
jl
mov
xchg
arpl
mov
je
jge
nop
mov
dec
movsb
add
or
shll
cmp
popa
nop
hlt
xor
jg
push
pop
ret
pop
or
orl
int3
fdivrl
shr
stc
lock
add
mov
add
xchg
pushf
and
inc
jno,pt
cmp
and
in
aas
dec
add
mov
add
loopne
xor
add
shlb
push
js
add
push
mov
incl
xor
test
add
loopne
jmp
add
lock
test
jp
jnp
std
pusha
mov
and
loope
jl
fcompl
sub
jno
dec
mov
sub
adc
repz
testl
sbb
adcb
incb
inc
loop
jns
adc
mov
jle
dec
testl
add
xchg
dec
add
push
clc
or
bound
mov
mov
sahf
add
sbb
vpshufd
sub
add
les
mov
mov
inc
fldl
jl
and
loopne
xchg
add
ret
outsb
je
xchg
lock
iret
mov
sarb
mov
int
in
inc
pop
xor
xchg
jge
je
jmp
push
mov
enter
mov
xor
xor
sub
imul
add
repnz
pop
fmull
in
das
aam
jle
cmp
or
in
mov
test
rcrl
and
fisubl
rorl
popf
dec
mov
test
repnz
jae
xorb
neg
xor
and
std
add
lcall
repz
repnz
fcoml
add
mov
add
idiv
push
rorb
mov
je
xor
cmp
dec
push
loop
pop
repnz
jns
ficoms
in
movb
mov
jne
add
rcll
xchg
add
nop
in
mov
cli
push
popa
loopne
xchg
mov
pop
mov
lock
sbb
pop
xchg
add
add
in
add
aam
sbbb
sti
sbb
stos
sbb
lock
pushf
sbb
xchg
popl
adc
dec
aam
leave
mov
mov
pop
popf
or
cmp
dec
addb
addb
adc
mov
mov
or
mov
lock
cmp
mov
sub
and
inc
mov
add
in
lods
cmpb
add
faddl
jo
lahf
add
loopne
das
xchg
rorb
push
or
add
jecxz
inc
in
and
sbb
add
jg
jmp
mov
add
pop
mov
enter
pop
loope
lock
insb
add
stc
and
pop
mov
negb
paddq
push
jne
jp
dec
mov
addb
mov
rcll
repz
jno
in
adc
push
les
add
das
clc
xor
dec
in
mov
addr16
xchg
subb
mov
xor
add
rolb
je
stc
dec
sbb
push
clc
add
cwtl
test
mov
pop
hlt
add
in
mov
dec
cs
pop
roll
ds
sbbb
add
mulb
pop
add
cwtl
in
ja,pt
xor
adc
xchg
push
add
fs
or
scas
xchg
and
divl
xor
add
js
dec
dec
rol
leave
jo
mov
fwait
or
mov
loopne
pop
invd
mov
das
mov
aaa
pop
jg
add
enter
mov
jle
or
pop
pop
or
push
xchg
add
pop
in
push
in
lock
or
dec
cmp
sti
pusha
mov
mov
add
sub
add
push
push
mov
aas
sub
push
out
pop
cmp
push
and
js
dec
addb
mov
pop
add
frstor
mov
push
pop
add
mov
je
inc
dec
repz
and
arpl
xor
in
call
lahf
idivb
xor
pop
adc
je
add
lea
fadds
xor
mov
mov
addb
jnp
pop
add
xchg
test
ret
mov
popf
sub
mov
call
lahf
inc
cmpsl
lds
clc
push
dec
add
aas
xor
xor
fidivrl
cli
dec
pop
ds
das
repnz
into
addr16
outsb
cmovo
ja
jo
pop
jg
inc
xchg
pop
dec
cmp
lock
push
mov
add
inc
pop
js
pop
dec
push
adcb
popa
jp
add
bound
or
push
mov
jb
jbe
add
scas
xor
or
cmpsb
ret
loope
lret
sub
fcoms
stc
test
push
lcall
add
mov
data16
pop
outsb
sub
jl
add
nop
dec
pop
cmp
or
add
xor
add
inc
movsl
dec
in
pop
aas
jb
add
pop
ret
out
add
imul
je
push
add
inc
arpl
jae
js
jnp
jg
addl
xchg
xchg
add
dec
roll
shll
sbbb
mov
and
je
nop
cmp
jbe
in
out
and
dec
inc
out
gs
adc
push
loopne
daa
js
sbb
shll
jmp
or
push
xchg
inc
add
fs
sub
in
mov
aam
add
xchg
dec
and
xor
xchg
inc
adc
add
sarb
arpl
mov
in
mov
loopne
inc
jo
add
or
or
adc
mov
ljmp
cld
xor
xchg
add
clc
shl
pop
mov
dec
xchg
insb
push
in
mov
cmpsb
add
aaa
stos
mov
clc
incb
daa
mov
outsb
das
add
cmp
jo
pop
pushw
add
rorb
rolb
xchg
nop
pusha
js
push
pop
add
and
inc
add
daa
xor
insb
push
mov
pop
mov
aas
jbe
sub
aas
xor
fiaddl
imul
in
mov
loopne
aad
pop
cli
pop
pop
cmp
lock
add
in
mov
in
call
or
adc
add
xchg
dec
jg
pop
dec
cmpl
stc
roll
push
dec
add
cmp
scas
add
push
leave
sub
jbe
sub
adc
popa
mov
jb
je
jbe
add
and
leave
in
les
jmp
mov
sub
sub
xchg
popl
and
in
test
sub
mov
faddp
lret
push
add
mov
std
add
hlt
cmp
sub
rolb
pop
in
mov
cld
add
mov
int3
es
push
loopw
add
fisubrs
add
aas
int
xlat
add
sahf
das
incl
adc
es
jp
pop
inc
ret
mov
lahf
jae
jg
or
out
in
mov
mov
add
out
or
add
fisubrs
jp
loopne
cmp
out
pop
mov
add
xchg
lock
adc
add
mov
xchg
pop
add
add
lcall
add
xchg
add
loopne
mov
cld
add
cmp
adc
popf
push
mov
pop
mov
scas
repz
dec
pop
sub
cmp
add
xorb
push
add
cs
lret
aad
cli
fadds
mov
inc
loopne
pop
hlt
data16
xor
mov
cwtl
add
mov
in
add
cwtl
popa
mov
mov
xchg
adc
jl
pop
aam
mov
neg
mov
or
and
push
inc
add
call
jmp
and
sub
insb
les
add
pop
add
pop
cmp
xchg
xchg
cwtl
call
rolb
or
jbe
fcomps
add
mov
sarb
xor
or
inc
lods
mov
jp
mov
mov
xchg
into
loopne
psrld
data16
add
dec
movsb
andb
and
add
xor
cmp
inc
xchg
add
pop
pop
lahf
lock
xor
pop
inc
clc
das
aas
lods
mov
jecxz
mov
mov
cmp
sbb
push
sbb
sub
js
pop
add
mov
cmp
and
stos
xchg
cs
push
and
add
loop
mov
add
push
mov
mov
sub
add
sub
jp
hlt
pop
clc
push
mov
pop
lcall
or
cmp
push
popa
subb
outsl
or
add
sahf
lods
jne
sbb
clc
pop
add
dec
pop
ret
repnz
pop
pop
andb
loopne
pushf
lahf
test
roll
push
aas
cli
or
cmp
shlb
xor
cmp
add
xchg
loope
add
pop
or
xchg
je
dec
and
pop
cmpsb
pop
mov
xchg
dec
add
jb
sub
add
lcall
fadd
leave
ljmp
inc
mov
pop
pop
mov
loopne
sub
cmp
add
lahf
jecxz
in
les
add
rolb
jb
je
dec
sbb
xchg
mov
jge
ds
iret
stc
add
jecxz
in
cld
push
and
ficoms
add
stos
pop
jo
dec
sub
outsb
add
xor
add
ljmp
add
push
pushw
in
fldl
loop
dec
out
daa
push
clc
add
dec
nop
mov
cld
pop
enter
mov
xchg
bound
jns
jb
pop
pop
inc
sbb
add
jbe
pop
jle
dec
and
cwtl
add
lock
mov
adc
add
fldenv
icebp
sbb
and
and
sub
mov
cmp
ret
pusha
inc
repnz
fdivl
js
in
pop
dec
dec
nop
aas
mov
pop
jo
pop
xchg
hlt
add
pop
call
dec
lcall
add
mov
leave
jl
out
in
mov
jp
in
jle
dec
movsb
ret
xor
and
mov
add
push
push
and
das
clc
aam
cmp
pusha
rclb
les
add
pop
out
fs
scas
and
jnp
pop
adc
mov
js
les
test
jno
adc
pop
cli
inc
mov
cld
inc
sar
int3
sub
add
xchg
in
dec
int3
subb
mov
xor
popf
cmp
push
in
cmp
jne
sarb
es
mov
mov
nop
pop
xchg
adc
pushf
add
mov
aad
and
sahf
or
xor
mov
and
jb
add
mov
push
add
push
sub
scas
pop
cld
add
pusha
xchg
fs
mov
adc
mov
in
decb
add
shl
insb
dec
sub
adc
mov
and
inc
inc
decb
jo
aam
stc
xchg
leave
cwtl
aas
add
movsb
xchg
or
sbb
push
cld
mov
les
leave
clc
sbb
sbb
add
xchg
or
adc
lahf
sbb
adcb
xchg
inc
cmp
aas
gs
lret
sub
mov
jl
gs
inc
lcall
mov
lahf
mov
leave
add
int3
ds
push
add
cli
int
add
fsubrl
add
nop
pusha
sbb
inc
push
push
jmp
lods
adc
test
push
add
sub
nop
add
sub
mov
mov
push
rdpmc
test
ja
mov
add
push
call
fcompl
push
mov
lea
sub
jns
cli
and
inc
jge
in
inc
dec
sbb
push
inc
stos
xrelease
sub
xor
push
call
enter
unpcklps
sub
lret
ss
push
test
out
pop
cld
ret
add
add
add
or
cmp
rsqrtps
mov
xor
and
mov
notl
xor
add
mov
or
in
add
xchg
lea
add
rorb
sbb
inc
mov
shl
cltd
cld
push
adc
cmp
lcall
push
mov
jbe
sub
sbb
add
sub
incb
add
dec
push
orb
ret
pop
cmpsl
xlat
ds
cld
ljmp
push
push
mov
aas
xor
or
je
add
sbb
mov
dec
and
in
add
push
add
int
repz
dec
cli
loopne
out
ror
int
les
roll
stc
add
movsl
loope
add
cmp
pop
push
mov
push
addb
jge
jp
nop
shr
decl
test
sub
xchg
push
dec
ja
add
shlb
das
lock
add
mov
insl
add
dec
pushl
push
dec
add
jge
lods
add
pop
shr
xchg
sti
add
je
or
push
push
cmp
add
adcl
pop
cmp
add
aam
pop
mov
mov
sub
add
mov
popa
dec
mov
add
shlb
push
add
jno
and
or
es
pop
push
push
lock
add
dec
dec
mov
inc
add
inc
data16
add
push
sbb
sbb
mov
or
movsb
mov
add
add
push
push
mov
add
lods
mov
push
mov
pop
jne
cmpsb
and
sarb
cwtl
gs
xor
inc
fsubr
cltd
sub
cmp
fdivl
push
fmull
pop
rorl
rolb
jl
jnp
adc
js
adc
mov
pop
push
push
and
orl
aaa
jmp
sbb
adc
sbb
fld
jmp
and
test
movsb
push
cmp
add
adc
add
popa
jne
mov
dec
cmc
sub
add
xchg
sbb
pop
adc
lods
rcr
push
jbe
push
fiadds
dec
pusha
mov
add
fistl
push
cmp
les
pop
push
cwtl
mov
dec
sbb
inc
sub
xchg
cmp
push
pop
je
sub
mov
dec
add
data16
cs
paddb
mov
or
sbb
ret
pop
std
out
jo
add
dec
mov
dec
pop
mov
xchg
fiaddl
ds
jns
xor
inc
aam
verr
mov
cmp
mov
mov
inc
xchg
add
in
mov
add
out
sahf
xor
and
jnp
add
xchg
push
add
xor
fnsave
add
cmpsb
int
fxch
dec
add
sbb
push
sub
pushf
jne
cmc
mov
mov
sahf
xor
repnz
out
xchg
push
hlt
test
xchg
mov
repz
rorl
mov
jmp
andb
jns
add
testb
sub
push
ljmp
test
pop
mov
or
dec
add
mov
add
pop
aam
pop
push
sbb
cmp
std
popa
addr16
mov
fiadds
cwtl
daa
fs
add
movsl
das
pop
add
sub
add
lods
xchg
les
int
push
into
sarl
mov
not
push
sbb
pop
or
and
fwait
inc
test
mov
fdivrl
push
imul
out
mov
jp
lcall
das
shl
sarb
push
xor
add
jo
sbb
xor
pop
add
cmp
in
jmp
sti
or
xlat
pop
mov
fcomps
call
notl
loopne
cmp
add
or
mov
push
adc
jle
mov
adc
aad
pop
enter
rolb
sub
add
cmp
push
loopne
add
aad
push
and
iret
adc
dec
rcrb
mov
pop
popa
or
mov
add
and
mov
add
pop
ret
mov
jb
mov
and
pop
ds
mov
negb
ret
or
cmpsb
add
push
add
and
xor
add
jmp
cmpsb
cld
roll
push
lea
bound
mov
es
add
int3
ja
scas
cmp
cmp
ret
add
adc
pop
sbb
rcrb
mov
insl
mov
push
jg
stos
pop
push
data16
add
stos
std
call
ret
xor
ss
add
popa
mov
add
out
nop
or
cmp
int
xor
and
add
adc
pop
mov
xchg
iret
add
faddp
sbb
cs
pop
frstor
gs
or
aas
sbb
into
adc
fcoml
sbb
cltd
clc
mov
add
and
in
dec
mov
xor
xor
jge
pop
stc
mov
jne
hlt
push
hlt
adc
jae
out
or
or
adc
sarb
je
push
sub
loope
pop
mov
jbe,pt
jb
sub
or
mov
sub
dec
add
cmc
rep
pop
jmp
mov
mov
pop
xor
cmp
sbb
add
inc
adc
mov
addl
adc
xor
shr
je
xorl
out
add
andl
cltd
cld
popa
loopne
or
mov
std
adc
scas
outsb
pop
push
imul
inc
mov
outsl
arpl
sbb
push
outsl
jg
arpl
js
clc
mov
inc
jne
push
mov
dec
sub
sbb
push
ja
jo
imul
dec
loop
inc
arpl
je
repz
jo
ds
mov
jns
jl
aas
and
jne
pushl
rcl
bound
test
push
cmp
fistpll
js
insl
clc
arpl
and
or
push
aam
mov
inc
ret
sub
rclb
lods
lahf
add
icebp
lahf
inc
mov
and
xadd
aas
outsl
inc
lods
inc
daa
dec
jnp
cmc
rclb
mov
sti
out
cmp
add
sub
sti
push
push
add
add
add
inc
repnz
adc
mov
sbb
cmp
fs
stos
jno
or
out
add
data16
mov
jne
iret
notl
push
pop
ds
popf
xor
call
test
in
sbb
jnp
fldcw
push
jp
ljmp
in
sar
push
sub
pop
pop
mov
push
push
es
cmpsl
or
int3
rcrl
jmp
mov
pop
cmpsl
mov
dec
out
jl
shll
mov
movsb
idiv
add
pop
mov
mov
mov
ret
sub
arpl
xorl
pusha
leave
or
test
jae
mov
out
fsubl
lea
mov
lods
add
gs
push
popa
jne
sub
lea
pop
das
sub
into
lret
lret
outsl
pop
in
sub
fwait
inc
mov
dec
mov
cli
scas
mov
add
cmp
mov
fistps
pop
insb
or
sbb
adc
in
es
imul
mov
inc
mov
mov
push
out
mov
lock
out
inc
jle
stc
xchg
adc
mov
ljmp
lods
imul
insb
int
lods
jo
jecxz
adc
sbbb
adc
lock
test
mov
cmovb
imul
mov
sbb
or
jmp
mov
pop
rclb
ficoms
mov
sub
pop
push
dec
inc
stos
rcrb
inc
aam
insb
push
add
stc
add
push
xor
push
pushf
mov
rorl
in
sahf
imul
push
push
icebp
sar
and
dec
adc
call
pop
jecxz
xor
inc
mov
mov
into
icebp
inc
inc
insb
into
lds
inc
xchg
cld
push
mov
inc
jle
adc
js
sahf
sub
xchg
ret
mov
xchg
std
add
shlb
pusha
out
cmovbe
clc
dec
xlat
outsb
sbb
in
test
or
std
js
dec
cmpsl
in
or
sarb
ret
mov
mov
mov
jno
popl
adc
mov
xor
mov
or
mov
inc
lret
push
push
mov
sbb
xorb
sub
mov
pop
orl
imul
mov
jno
dec
or
pop
lahf
and
adc
xchg
loopne
cli
mov
negl
add
mov
leave
pop
fadd
sahf
adc
cmpsb
in
pop
push
xor
add
lods
jb
inc
fistps
in
sbb
sti
test
mov
and
ret
jae
and
jecxz
jmp
test
fs
in
jg
dec
mov
add
jo
outsl
mov
outsb
enter
adc
lcall
or
ds
lds
jmp
mov
xor
add
shr
mull
loopne
mov
pop
push
push
fwait
inc
icebp
jmp
inc
aaa
sbb
aam
popa
push
xor
mov
inc
test
mov
xor
test
loop
mov
or
jg
cmpsb
div
mov
sbb
jle
imul
pop
pop
orb
or
leave
andb
cmpsl
pushf
daa
xor
xchg
mov
pop
scas
mov
cmc
push
clc
pop
repnz
xchg
aaa
imul
pop
sub
lret
lods
movsb
xchg
sarb
movsb
adc
pop
dec
mov
daa
xchg
xor
cmp
mov
push
jnp
and
movb
pop
jb
lds
sbb
bound
jmp
in
pushf
sbb
ljmp
cmp
cli
dec
mov
sbb
lds
push
fistl
mov
dec
roll
and
mov
js
adc
pop
jp
xor
add
mov
notb
sbb
enter
int
cltd
mov
mov
mov
test
mov
hlt
mov
lea
out
mov
push
hlt
pushl
mov
loopne
je
pop
imul
pusha
lahf
inc
mov
jle
cli
movsl
push
cld
lods
mov
dec
push
test
iret
inc
call
ja
pushf
push
jg
mov
mov
pop
dec
and
pop
into
cmp
sub
mov
push
mov
fnsave
pop
cltd
pop
aad
xor
lea
jbe
in
pop
inc
xor
or
xor
std
into
shll
mov
imulb
xchg
jecxz
jl
xor
inc
testb
inc
addr16
push
and
sbb
mov
mov
imul
das
cmpsl
std
mov
mov
add
xor
idiv
stos
negb
adc
push
dec
xor
cmp
mov
bound
popf
add
hlt
xchg
imul
mov
repz
in
sarl
out
sub
int3
andl
outsl
insb
sbb
scas
dec
xor
xor
stos
mov
fisttps
shll
mov
xchg
mov
test
push
lock
lods
ret
lds
sbb
dec
xor
leave
jb
lcall
movsb
push
mov
clc
mov
add
xor
sahf
repz
and
pop
es
adc
mov
jp
xorl
mov
lods
xor
lds
andl
pop
dec
sub
loop,pn
jg
int3
push
or
enter
int3
outsb
xchg
inc
pop
add
jl
push
loopne
dec
sbb
movsl
cmpsb
dec
or
lcall
into
xchg
stos
loop
jne
cmc
fstp
mov
mov
out
popf
jecxz
jno
jnp
enter
jge
pop
nop
decl
stc
mov
test
sbb
loope
loop
and
or
inc
mov
pop
add
aaa
dec
aam
and
sbb
stos
into
jg
jmp
leave
mov
inc
sbb
lahf
call
cld
mov
shlb
mov
xchg
pop
jmp
adc
icebp
ret
push
les
sub
repz
stos
incb
push
popf
dec
jbe
ljmp
jne
jl
or
addl
fucomi
mov
or
or
jg
lock
into
add
pop
pop
imul
lcall
leave
mov
sbb
mov
jmp
jle
out
dec
enter
push
jmp
dec
sbbb
addr16
ret
movsb
sub
mov
lds
fdivs
insl
sbb
jmp
gs
test
jbe
ljmp
jp
int
int
cltd
cmpsb
pop
inc
aad
or
iret
rcrl
cmp
out
imul
cli
pushf
xchg
dec
mov
push
pop
adc
cmp
mov
xchg
nop
cltd
ds
arpl
js
scas
aaa
stos
js
test
push
pop
repnz
xchg
into
push
inc
push
push
jb
xor
loope
js
call
xor
pop
adc
sti
outsb
mov
sub
and
imul
loope
fcomps
lcall
adc
push
xlat
outsb
cmp
xchg
lahf
adc
lods
pushf
mov
adc
add
inc
popf
xchg
mov
fmul
dec
push
cmpl
mov
xlat
pop
lahf
iret
test
gs
xchg
push
andl
mov
xor
loop
ds
in
inc
insb
loop
fisttpll
loope
mov
scas
mov
je
test
sbb
in
push
out
fstpl
lods
cld
inc
mov
bound
xchg
inc
xor
pop
jns
cmpsl
xor
sarb
pop
loope
cmc
add
sbb
add
cmpsb
sbb
jns
pop
and
loope
lea
xchg
mov
int3
xlat
sub
lea
les
and
jae
push
mov
push
mov
inc
insb
push
pop
cmpsl
loope
push
or
fldcw
fsubs
pop
call
test
dec
add
mov
mov
fs
jle
push
pop
mov
dec
sub
scas
xchg
mov
test
mov
movnti
pushf
and
sbbb
test
cwtl
mov
imul
adc
loope
mov
dec
push
jae
jecxz
xchg
mov
xchg
fwait
jns
mov
int3
push
clc
xor
xor
rol
ret
fmul
mov
sub
out
fisttpl
cltd
aaa
pushf
in
inc
inc
in
dec
mov
xor
or
cltd
dec
call
test
lods
adc
sbb
aaa
test
outsb
cltd
inc
pop
leave
lds
ds
sub
insl
dec
or
pusha
mov
dec
test
pop
in
mov
stos
test
pop
sbb
out
cli
shr
sub
in
pop
and
cli
ret
bnd
sbb
adc
and
lahf
scas
invlpg
pushf
xchg
or
xor
andb
mov
je
sti
pop
mov
cmp
add
mov
add
xor
mov
fs
mov
inc
les
xchg
xchg
hlt
shll
fildll
lock
into
cmc
mov
fs
and
sub
fs
xchg
jge
xchg
iret
or
push
cmp
outsb
and
push
test
add
dec
jl
enter
mov
mov
xor
push
pusha
fcoms
jecxz
adc
scas
cmc
push
xchg
inc
addr16
jle
fwait
lds
pop
fadds
mov
mov
and
sbb
jo
pop
mov
nop
jle
lahf
jg
inc
cwtl
sub
stos
sub
xchg
cmp
in
roll
lock
sub
or
xchg
lcall
cwtl
cwtl
insl
pushf
loop
rolb
shrb
xchg
xor
xchg
mov
sub
pushf
scas
sub
adc
fdivs
lods
pop
add
jmp
mov
sub
clc
shrl
push
jge
jnp
and
jmp
lret
hlt
in
out
shll
shl
rorb
testl
fnsave
into
loop
jnp
lds
jp
push
outsb
lahf
mov
sbb
cmp
dec
mov
or
ret
push
in
add
stos
lds
and
cmp
hlt
add
fsubrl
push
sbb
les
and
iret
adc
pusha
adc
into
xorl
aad
sti
sbb
add
mov
push
into
ljmp
mov
push
lds
insl
add
cmp
aas
mov
lahf
cmpb
xchg
pop
jae
sbb
rol
xlat
mov
fidivl
dec
rorl
mov
mov
pop
push
jo
xchg
dec
ja
push
sbb
fs
ret
fdivrs
jno
jne
fldl
jle
mov
pop
insl
mov
adc
ret
mov
jbe
cmp
int3
cwtl
andb
and
mov
fwait
dec
addr16
test
mov
inc
dec
xlat
repnz
popa
gs
insb
cmc
ss
xchg
in
inc
dec
ja
nop
mov
je
add
mov
push
mov
mov
in
and
pop
js
imul
call
mov
adcb
jge
xchg
or
adc
data16
push
add
gs
repz
add
lock
insb
cltd
jno
jae
dec
mov
cmc
enter
dec
hlt
add
movsl
ljmp
in
mov
mov
scas
xor
stc
fcoms
sub
dec
test
push
xor
imul
into
jl
mov
scas
add
xchg
popf
lret
push
push
xor
in
lret
aam
or
push
rclb
inc
pop
sub
mov
out
arpl
fistpll
adc
jae
mov
lcall
push
and
xor
dec
xchg
cmp
nop
mov
cmp
out
pop
mov
cli
sub
repnz
cld
cld
mov
lods
fmuls
jno
inc
sub
xchg
xor
mov
xchg
repnz
jo
pop
fnsave
jp
cmp
daa
push
mov
or
pop
lea
pop
sbb
aad
and
pushf
rcrb
jl
xor
jae
jmp
scas
adc
lock
jno
iret
and
int
mov
pop
mov
jnp
xchg
popa
popf
push
pop
mov
je
je
xlat
pop
test
incb
mov
subl
lea
sti
dec
in
push
or
lods
orb
push
shl
and
and
dec
dec
jecxz
cmp
inc
ret
inc
fwait
clc
dec
int
sbb
mov
rcr
cmc
sti
mov
mov
scas
scas
mov
das
int3
add
xor
out
insl
out
aam
cmpb
loopne
lock
xor
test
pop
dec
filds
cvttps2pi
cmp
jecxz
mov
movsb
sarl
scas
outsb
lahf
bound
mov
add
and
addr16
jne
pushf
adc
dec
fsubrl
div
or
mov
shll
in
int
mov
xor
retw
fldl
iret
sub
iret
addr16
hlt
clc
icebp
and
push
xor
ja
cmp
dec
dec
push
mov
pop
imulb
mov
jns
cmp
out
loop
stos
cmp
sbb
rcll
push
pop
mov
fistl
jg
xchg
movsl
or
insb
std
push
sbb
ja
dec
fucomi
inc
inc
jg
sub
test
scas
subl
lahf
add
cmp
ret
pop
dec
cmp
dec
jmp
mov
sub
adc
or
jo
rolb
pop
shlb
push
xor
push
loope
inc
into
xchg
orl
dec
pop
and
pop
scas
fmuls
and
add
xchg
push
insl
add
pop
mov
mov
or
jg
cmp
push
inc
loopne
rcrb
fistl
mov
int
jmp
lret
dec
fwait
or
or
lock
lods
in
icebp
dec
cltd
or
cmpsb
int
xor
inc
pop
fwait
dec
add
and
jb
adc
xlat
jno
xchg
shlb
gs
loop
scas
cli
cmp
jae
xor
xor
add
push
lods
pop
dec
rcrb
jae
push
fimuls
jmp
lret
cmp
orb
insb
add
lret
les
repnz
cwtl
dec
cs
fmuls
xchg
adc
testl
jl
int
pop
inc
stos
cs
fs
dec
imul
dec
and
test
cmp
xchg
cltd
call
rcll
mov
mov
lahf
push
pop
adc
addr16
and
push
push
or
mov
out
lret
cmp
popf
std
mov
mov
or
inc
mov
fnstsw
stos
ds
inc
mov
add
pop
or
leave
js
mov
xor
popf
fsubrp
inc
jecxz
icebp
xor
adc
aad
inc
or
pop
jns
or
sub
loope
mov
cmpb
pop
scas
mov
fistpl
cli
les
mov
xor
xchg
mov
fdivl
mov
add
jns
xlat
lods
aad
jae
sbb
pop
xor
add
data16
push
ds
shr
dec
pushf
pop
dec
adc
adcb
into
sbb
rolb
std
xorb
inc
out
hlt
dec
cld
mov
cmp
mov
mov
pop
or
jl
pop
pop
clc
sahf
aas
rcr
mov
mov
test
sub
xor
mov
sbb
adc
repnz
lcall
adc
daa
int3
imul
or
jp
pop
and
jbe
cmp
dec
mov
xor
ret
cli
xchg
add
jmp
bound
sahf
sub
lods
mov
inc
ljmp
inc
pusha
movsl
mov
mov
cld
imul
mov
lret
scas
lock
nop
push
mov
mov
stc
pop
cmp
lock
sbb
aas
data16
xor
fcompl
ljmp
pop
leave
popa
fistpl
mov
lock
gs
test
cmpsb
sub
sub
dec
pop
imul
bound
jbe
push
aad
je
fdivrl
jle
cmp
dec
aaa
negl
sub
in
push
push
xlat
into
dec
adc
aad
xchg
fs
lds
addr16
mov
mov
and
sbb
lcall
mov
cmpsl
push
pusha
psrad
lods
xor
lahf
outsl
pop
in
jle
push
lahf
mov
out
jmp
fstl
fidivrs
aas
shlb
dec
jo
daa
orb
push
orl
les
add
in
cli
push
popa
std
mov
pop
or
cmp
inc
push
pop
inc
adc
aas
sbb
add
push
xor
sub
repnz
loope
jo
cmp
inc
fwait
rcll
and
jl
icebp
cmp
inc
in
mov
xlat
test
leave
xor
sarb
mov
divb
sub
push
adc
mov
inc
cmc
sub
test
jmp
fidivl
mov
das
lret
jne
stc
xor
and
stos
dec
stos
pop
dec
mov
in
adcb
cld
xchg
clc
push
sbbl
fbld
mov
sub
sbb
notl
xchg
popl
xchg
cmpsl
pop
inc
push
adc
push
ret
pcmpeqd
xchg
iret
das
xchg
push
mov
fdivrl
psubb
jp
into
divl
pop
pop
dec
vpaddw
sbb
out
das
movsl
jmp
xlat
jno
stos
cltd
adc
cmp
pop
mov
push
cmp
int3
jae
push
std
notb
test
add
out
mov
daa
ret
enter
je
es
shll
aas
or
push
inc
mov
sti
movzbl
iret
mov
sub
jne
sub
mov
mov
fmuls
dec
or
dec
fistps
loop
mov
test
jb
mov
outsl
repnz
xor
push
cwtl
loop
inc
hlt
pop
fdiv
cmp
push
movl
jbe
fs
call
call
cmp
sti
stos
lret
repz
movsb
mov
mov
push
push
lahf
or
sbb
add
cmp
or
mov
sub
aaa
push
sub
adc
int3
shlb
shrl
push
in
inc
push
or
fs
in
pop
xor
xor
push
sbb
stc
arpl
lock
push
fcomp
test
and
adc
xorb
std
lahf
out
cmp
je
jg
mov
inc
dec
les
test
ficoml
clc
mov
icebp
arpl
outsl
xor
dec
cmp
jno
fnsave
xchg
jno
test
mov
pop
push
lcall
inc
xchg
pop
call
mov
jns
in
lock
fldt
fnsave
inc
adc
aad
pop
sbbb
jle
es
or
mov
lfs
sbb
rcll
and
sbb
or
sbb
ljmp
stc
test
adc
dec
inc
push
leave
sub
ret
int
mov
outsb
cmp
mov
into
les
sahf
call
leave
lret
dec
imul
pop
rorb
lea
dec
mov
test
and
push
std
mov
xchg
sub
mov
add
pushf
push
lods
fcoml
hlt
repz
fmuls
bound
nop
and
rolb
mov
mov
repnz
xchg
cld
pop
cwtl
int3
jg
inc
stc
gs
mov
push
pop
sub
test
lahf
mov
xchg
push
and
test
mov
enter
xchg
stc
lods
mov
bound
push
xor
insb
sub
hlt
dec
xor
xchg
sub
imul
adc
xchg
rcll
pusha
inc
lods
mov
sub
push
jg
adc
xor
sub
or
ss
jge
sub
out
repz
jg
xchg
sti
mov
cmp
cmp
int
inc
fs
cmpsb
mov
shrb
das
push
xchg
aas
jno
imul
test
sbb
pop
mov
jns
fidivs
dec
mov
mov
jns
cmp
out
mov
fcoms
xor
mov
or
mov
les
jg
mov
or
out
insb
mov
and
mov
into
jno
cmpsl
cwtl
in
cmp
pop
add
cld
mov
ss
jp
rcrb
push
jbe
out
outsl
jo
push
and
adc
mov
inc
movl
add
xor
push
mov
das
fxch
mov
push
jle
pop
lds
movsb
cmp
test
jb
pushf
xchg
cmp
je
xchg
fdiv
sub
into
mov
push
dec
jmp
leave
lods
and
mov
rcll
sub
nop
das
inc
jle
dec
adc
jbe
xlat
or
loopne
adc
mov
xlat
cld
push
mov
pop
push
mov
clc
sub
ja
jno
popf
movsb
idivb
push
xor
pop
orl
in
inc
dec
or
xor
push
sbb
dec
pop
out
mov
andb
jecxz
mov
fadd
loop
jle
mov
or
iret
cmp
stos
imul
ja
mov
inc
push
jmp
imul
pusha
pop
mov
add
sbb
sub
pop
jbe
test
arpl
out
out
jp
dec
test
rcll
mov
hlt
jge
sub
add
xchg
insb
add
in
fcmovne
dec
scas
aad
ds
xchg
cmp
mov
push
jnp
int3
cmpsb
insl
mov
adc
out
mov
sbb
test
int3
xor
sti
jne
adc
imul
jge
sbb
add
into
ds
fcompl
xor
shll
sub
mov
jecxz
xchg
lods
out
pop
ljmp
and
ret
ret
call
loope
xchg
cmp
ja
pop
mov
add
stos
aaa
jecxz
les
adc
fwait
sub
fs
xchg
jb
repz
popa
mov
mov
cli
pop
mov
mov
popa
sar
pop
push
sub
mov
dec
add
dec
cmpsb
jae
mov
fdivrl
pusha
outsl
test
mov
push
leave
fwait
pushf
inc
loop
cmp
and
sub
jp
insl
jle
mov
movsb
gs
or
pop
int3
xchg
push
ret
cmpsl
cmp
cmc
mov
xchg
mov
fs
and
jecxz
jbe
frstor
dec
ljmp
jne
in
imul
negl
popa
int
jno
sub
mov
sub
fadd
cmp
ror
mov
add
lds
js
loope
adc
popa
fsubl
mov
jne
xor
out
sbb
lock
or
mov
into
jge
sar
loop
add
push
clc
jo
add
cmp
cmpsl
ja
mov
stc
jbe
xchg
xor
cs
lea
sub
adc
mov
or
loopne
ret
cmp
loopne
fs
imul
in
daa
loopne
mov
ret
sub
stos
pop
mov
jo
inc
pop
mov
add
add
leave
cmpsl
xchg
bound
ret
out
mov
in
or
bound
mov
jo
mov
cli
in
adc
mov
adc
push
repz
sub
inc
push
popf
das
push
mov
lods
clc
pop
dec
push
push
cli
test
pop
adc
sbb
jl
add
in
lods
mov
stc
in
xchg
or
mov
aad
cmp
or
ja
jnp
orps
sti
jge
push
shl
roll
mov
hlt
das
xorl
roll
cs
shrl
cmp
shrl
or
shll
push
ss
mov
fwait
xchg
or
fwait
mov
xchg
ret
popa
sbb
loop
mov
gs
loopnew
mov
push
dec
in
mov
imul
insl
adc
jg
in
add
aas
sub
pop
adc
jmp
jmp
push
je
or
sahf
imul
inc
fidivl
or
fs
cld
mov
stos
shrl
mov
xor
pop
ret
xchg
pop
xchg
mov
nop
mov
ret
add
cmc
pop
rep
add
ds
test
stos
popf
sbb
pushf
loope
mov
push
jnp
ret
hlt
stos
das
mov
cmp
inc
and
adc
dec
cmp
pop
add
leave
push
mov
jae
push
mov
mov
jo
mov
mov
jne
addb
dec
dec
pop
stos
push
aad
ret
nop
xor
cmp
sbb
mov
jns
push
lds
out
mov
xor
pop
lods
cmp
std
push
or
in
jbe
mov
decb
shll
xchg
add
mov
movsl
and
addr16
add
add
sbb
std
out
fmull
sub
test
cmp
inc
xor
cmc
jo
adc
std
pusha
mov
ret
lods
sub
loop
es
mov
adc
test
ret
aad
outsb
add
pop
push
andb
xchg
mov
call
push
push
aas
inc
inc
mov
inc
inc
add
movsb
bound
inc
outsl
push
js
daa
stos
aam
inc
enter
rol
mov
push
test
push
inc
addl
addr16
push
add
or
mov
test
lret
push
ret
outsl
xor
arpl
inc
push
mov
arpl
test
adc
scas
sub
and
lret
mov
mov
push
jp
xor
and
adc
or
cltd
imul
loopne
mov
arpl
xchg
je
in
stos
test
addr16
mov
xor
pop
xor
dec
test
lea
sbb
jne
out
xchg
adc
xabort
rorb
or
inc
and
adc
in
ffree
data16
mov
movb
cmp
sbb
pop
push
test
pop
loop
enter
int
push
loopne
cmp
mov
std
dec
jae
test
lret
js
rcrl
pop
push
lcall
fisubrs
pop
cltd
cmpsb
jne
dec
add
sub
out
movsb
cmpb
in
sub
and
adc
arpl
mov
int3
divl
js
lds
test
jle
dec
pop
mov
lods
sub
lahf
cmp
int
shll
int
orb
push
xchg
cmp
rclb
nop
xor
xchg
mov
stos
xor
jae
pop
cwtl
dec
filds
pop
stos
test
pusha
cltd
xor
push
fsub
or
fcmovu
je
std
pop
cwtl
and
push
ret
dec
shrb
jno
add
icebp
adcl
jmp
push
jle
mov
cli
fiaddl
add
jle
icebp
popa
sbb
xchg
xchg
loopne
mov
call
in
notl
pop
in
dec
sti
stos
cmp
mov
jp
int3
out
and
rorl
int3
lret
cmp
cmp
cmpl
mov
sbb
cmp
cmc
xchg
shlb
scas
std
rcrl
scas
and
jbe
push
xchg
cs
xchg
sbb
popa
inc
ficompl
outsb
mov
outsl
repnz
loopne
cmp
addb
mov
and
and
xchg
dec
rcrb
inc
push
push
cld
lods
inc
or
lds
ljmp
add
sbb
mul
enter
ret
and
push
out
stc
test
movsb
jle
or
xor
jmp
out
fidivrl
jae
lcall
in
push
dec
mov
jecxz
fwait
ja
or
inc
test
incl
mov
inc
jle
hlt
inc
stos
cltd
lods
adc
ret
jae
pop
cmpsb
inc
xchg
jg
and
outsb
es
sbb
rol
jmp
nop
cmpsl
sbb
jb
ffree
sbb
pop
dec
push
shll
imul
jbe
cmpsl
xor
mov
repnz
push
jge
cld
cmp
ret
std
sbb
inc
pop
jmp
out
mov
fimuls
add
fcomps
mov
fldt
mov
inc
mov
sbb
adc
insb
adc
test
jb
push
insb
cmc
jp
pusha
pushf
out
mov
in
jnp
lods
sub
lahf
cmp
jl
ror
and
loop
insb
cli
jmp
pop
add
push
push
in
movb
fistpll
leave
jl
xchg
adc
cmc
bound
mov
sbb
es
lds
mov
sar
mov
add
jb,pn
sub
mov
arpl
jbe
dec
or
mov
xchg
ja
hlt
push
loopne
inc
lods
and
jg
or
addl
dec
mov
mov
adc
mov
mov
cmp
shll
fldcw
mov
cmp
pop
sarl
mov
xchg
inc
cltd
mov
mov
cmp
mov
mov
mov
mov
or
push
push
stc
rcl
sub
jae
pop
aas
addr16
mov
popl
ss
insl
and
aaa
pop
mov
cmpsb
int
decl
arpl
mov
mov
pop
cwtl
in
and
sub
test
sbbb
mov
jo
sbb
and
and
lock
mov
fwait
xchg
stc
push
mov
pop
cld
or
adc
scas
mov
jne
xor
cmpsl
loope
xchg
pop
jp
cmpsb
mulb
lret
pusha
and
into
out
in
sbb
fadds
push
mov
scas
push
dec
cmpsl
mov
pop
jmp
pop
add
std
ja
mov
mov
lods
hlt
push
aam
scas
mov
dec
aam
mov
dec
cmp
jnp
subl
cmp
loop
xchg
sub
lods
mov
ljmp
nop
cmc
sbb
pop
sarb
push
jae
sub
es
jmp
lock
jg
ja
js
call
push
testl
cltd
ljmp
push
das
popa
jb
sub
or
cmp
pop
mov
repz
fstl
jbe
sarl
in
insl
or
jbe
jno
clc
mov
push
repz
les
or
ror
jg
fdivp
out
hlt
cmp
add
outsb
cld
cltd
adc
stc
out
or
das
mov
pop
push
das
sbb
fwait
sbb
sub
inc
rclb
xchg
aas
insb
ja
dec
aas
sbb
adc
or
jg
fimull
aaa
rcr
push
or
ljmp
xchg
xorl
mov
cmp
enter
and
pop
orl
sbb
cmp
pusha
cmp
lds
jae
test
mov
xchg
sbb
out
xchg
mov
testl
mov
xor
jecxz
mov
cmp
shll
test
sbbl
add
mov
lods
rol
loope
adcb
mov
cmc
out
in
dec
xor
mov
adc
ret
sub
loope
cmp
inc
cs
enter
sti
leave
cld
ss
repnz
push
addr16
push
dec
sub
jge
shlb
push
push
mov
push
inc
andb
pushf
xor
mov
cld
jo
cwtl
lods
aad
jae
mov
test
and
push
in
fsubs
cwtl
pop
and
dec
in
pop
cmpsl
jl
in
cli
push
ret
cmp
outsl
pop
repz
rorl
outsl
jb
leave
ret
cs
xorb
addr16
add
aaa
stos
mov
xor
sahf
bound
ficompl
push
lcall
lahf
js
mov
inc
or
jb
imul
fstps
xchg
and
xor
push
sub
xchg
xlat
cmp
repz
add
sarb
push
cmc
push
gs
dec
xchg
pop
loope
mov
mov
aad
ret
mov
jae
mov
cmpsb
jae
dec
inc
cwtl
xchg
jb
push
inc
int3
shl
nop
jge
sbb
js
aam
sbb
jbe
mov
je
lods
push
inc
cmp
inc
push
dec
ss
enter
and
dec
call
jno
inc
into
mov
pusha
mov
add
and
lret
xchg
aam
shlb
aas
mov
jne
sbb
inc
jg
and
mov
lret
icebp
add
insl
and
ror
movsl
lcall
xchg
mov
xor
out
lcall
test
cmp
push
mov
leave
popf
clc
stc
outsl
xorb
test
mov
sarl
and
inc
sbb
nop
sbb
push
pop
test
daa
sub
pop
jmp
dec
or
mov
js
es
xor
pop
sbb
sbb
movb
ud0
sbb
lods
shll
sub
dec
inc
scas
or
fwait
push
aaa
insb
int3
fidivs
dec
loope
test
jbe
add
and
aad
xor
ret
outsl
in
scas
out
inc
loopne
mov
mov
sbb
inc
les
fidivs
movsb
push
mov
sbb
jne
mov
xor
mov
mov
add
fadds
mov
fisubrs
fimuls
mov
in
nop
push
xchg
dec
xor
sbb
clts
rclb
ret
adc
jl
pop
insl
fimull
and
push
and
dec
leave
aaa
mov
ss
and
push
test
cmp
shrl
sbb
jmp
iret
lret
jns
push
mov
call
pop
lcall
pop
cwtl
inc
pop
ds
sbb
out
add
clc
mov
pop
std
insb
je
jbe
jno
call
mov
pop
pop
xchg
adc
repnz
rcr
icebp
mov
xor
cltd
and
xor
sbb
insb
xor
clc
and
inc
in
sahf
pop
cmpsl
jae,pn
push
push
xor
xchg
adc
xchg
int3
in
test
into
or
mov
sbb
push
and
adc
pop
adc
pop
bound
movsl
enter
mov
push
fstpl
faddl
and
les
sub
fimuls
jge
mov
fwait
and
sbb
repz
outsl
sbb
mov
pop
mov
sub
nop
xlat
mov
inc
add
push
mov
sti
dec
mov
add
adc
pop
cmp
sbb
gs
lods
stos
mov
cmp
push
mov
lret
mov
sbb
cmp
sub
stos
push
ret
xchg
cwtl
sbb
arpl
mov
push
pushf
xchg
test
sub
add
cmp
test
out
clc
xchg
sbb
dec
jno
add
push
mov
pop
aaa
push
xor
push
adc
out
scas
js
sahf
scas
sbb
daa
rcrb
push
cmpsb
enter
mov
pop
fbld
mov
jmp
outsb
aad
fnstsw
xchg
fstps
dec
xor
insl
cmp
rcrb
jle
xchg
fbstp
pop
cmpsl
dec
scas
or
sbb
inc
cwtl
pop
dec
fs
movsb
stos
cmp
imul
and
push
mov
jp
fisubs
cltd
mov
mul
mov
sbb
in
push
mov
inc
pop
imul
mov
stos
nop
pop
mov
pop
mov
jns
or
inc
jp
sbb
sub
loopne
daa
movsl
mov
scas
ret
fisttps
mov
mov
je
mov
insl
shl
mov
push
gs
xchg
js
sbb
mov
mov
cs
orl
pop
push
lock
fnsave
sub
mov
adc
mov
inc
movsl
stc
ss
js
cmp
rorb
sub
lret
out
fcmovnu
jmp
push
mov
sub
int
dec
xor
into
dec
in
les
adc
xchg
dec
icebp
adc
in
pop
jle
jl
inc
mov
pop
bound
insb
lret
jmp
popf
cli
jl
lcall
ret
xlat
xor
popf
or
lock
cmp
test
imul
jb
mov
out
sub
insb
dec
cmp
mov
adc
cmp
insb
imul
xor
xchg
sub
inc
mov
cltd
xorl
repz
inc
xor
xor
not
mov
dec
flds
adcb
inc
sarb
mov
nop
xchg
scas
jns
xchg
movsl
shr
stc
jne
push
mov
jnp
xor
cs
xchg
dec
and
incb
in
fmuls
add
repz
in
jnp
add
hlt
pop
add
fbld
into
adc
sti
jno
lods
mov
scas
nop
mov
cmp
jnp
and
movsb
jbe
sbb
stc
shr
adc
in
mov
add
enter
add
inc
sbb
pop
sbb
ret
jno
ds
les
dec
xor
test
xchg
dec
add
fbstp
add
loope
pop
popf
inc
dec
cmpsb
adc
ss
mov
mov
adc
pop
cmp
jecxz
fwait
adcb
movsl
pop
inc
or
push
xor
xor
pop
fnstenv
stos
inc
or
cmpsl
adc
fdivrl
fisttpl
ja
in
pushf
add
dec
rorb
test
jmp
pop
adc
pop
cmp
mov
dec
aad
xchg
cmpsb
in
push
loope
xor
mov
arpl
js
cmp
scas
test
adc
jno
mov
sub
fcomps
adc
pop
push
call
sub
sub
ss
imull
dec
ficoml
push
push
addr16
aaa
mov
sbb
mov
push
mov
ds
xor
inc
andl
mov
or
pop
add
popa
push
fiaddl
mov
mov
lret
add
inc
pushf
inc
in
and
fiadds
movsb
lods
cmc
jmp
sbb
jne
mov
negl
cmpsb
push
fsin
and
inc
or
cmpsl
ret
test
adc
outsb
mov
idivl
pop
jl
add
sbb
add
inc
jmp
idivb
pcmpgtd
mov
fisubs
sbb
cmp
sub
xchg
mov
xchg
xor
mov
test
push
std
mov
aad
scas
xchg
sbb
jl
xor
sub
sub
insb
rclb
lret
sbb
xchg
and
pop
call
nop
ds
addr16
push
mov
sub
lods
inc
fbld
imul
xlat
sbb
dec
jbe
in
rol
es
lret
adc
and
fildl
aad
lock
sbb
push
jbe
enter
int
pop
xor
mov
adcb
dec
inc
rcr
pop
loop,pn
inc
and
sub
out
cmp
xor
pop
jno
fcomps
clc
add
pop
or
ret
mov
rcrb
aad
mov
scas
lods
repnz
mov
cmpb
leave
mov
jg
push
js
mov
enter
pop
cld
pop
hlt
pop
xor
js
add
lret
jl
xchg
jl
push
push
ljmp
sahf
push
push
lret
mov
ret
mov
sub
cmp
xchg
xchg
stc
outsl
fwait
out
clc
cmc
mov
xlat
pop
pop
and
xlat
xchg
test
xor
aaa
jnp
push
sbb
lea
inc
lods
bound
inc
pop
mov
xchg
mov
push
pop
out
hlt
das
sahf
int3
xchg
pop
out
test
aam
xchg
ret
xor
out
les
push
jbe
pop
call
cs
fidivrs
xchg
adc
mov
out
lcall
jle
loope
out
mov
xchg
inc
scas
test
test
mov
push
and
js
or
mov
xchg
imul
mov
in
stc
adc
push
sub
jo
mov
dec
cs
push
sub
jge
scas
ds
xchg
cld
inc
mov
mul
divl
mov
adc
jp
in
add
push
arpl
lock
pop
mov
and
imul
adc
movsl
jg
push
jae
in
fsubrs
subl
xchg
adc
cmc
ja
dec
xor
outsb
dec
sbb
inc
mov
pop
hlt
in
push
jp
scas
xor
push
mov
xchg
test
imulb
mov
jge
sbb
int
adc
mov
push
imul
and
cmp
sbb
bound
mov
sbb
inc
in
mov
aam
pop
pop
pop
push
xor
outsl
add
rorl
mov
and
fcmovne
dec
aaa
cmp
lsl
mov
inc
imul
xor
and
int3
jge
in
pop
les
lret
lock
pop
enter
add
in
and
pop
cltd
fpatan
push
test
test
add
or
dec
mov
cld
push
push
lret
lea
es
sbb
int3
cld
cli
push
imul
lcall
or
xlat
sarl
inc
adc
xlat
nop
sbbb
cmp
lods
lods
repz
repz
fstl
inc
fwait
adc
mov
test
lock
dec
push
outsl
xor
scas
sub
test
fadd
inc
pslld
adc
in
cs
pop
call
jns
sbb
sub
mov
sahf
jb
cmp
scas
icebp
leave
outsb
sub
push
in
inc
call
and
repnz
xor
and
inc
inc
mov
mov
pop
loop
stos
sub
dec
sarl
push
xchg
jbe
or
out
shr
test
mov
xchg
cld
cwtl
loopne
push
mov
popf
daa
xor
imul
lods
test
xor
popa
int
or
cli
addl
ret
in
cli
cmc
jnp
push
or
adc
pop
sahf
popf
jl
xor
test
or
jge
push
or
fucomip
inc
xchg
mov
push
mov
shrl
mov
int3
mov
sbb
sar
sub
js
xlat
loope
imul
push
jg
bound
out
mov
and
movsl
fs
adc
and
mov
sbb
iret
or
int3
rorl
das
ret
mov
push
fsubrl
andb
stos
imul
mov
int3
inc
mov
jecxz
imul
fildl
cli
cmp
dec
cwtl
fwait
mov
in
xchg
outsl
pop
pop
and
int3
mov
inc
xor
adc
roll
and
fisttps
rorl
fwait
xchg
test
pop
adc
fiaddl
jecxz
dec
outsl
cld
rcll
mov
push
pop
orl
push
sub
mov
dec
dec
iret
orl
in
sti
push
adc
or
cli
pop
cld
sub
jg
mov
or
fs
testl
pop
les
insl
sti
lahf
xchg
mov
push
inc
xor
mov
adc
or
dec
fdivl
arpl
pop
jl
push
add
lret
int
xchg
fldenv
cli
in
mov
js
mov
hlt
xor
sub
in
cmp
int3
test
jl
inc
aam
loopne
cmpsl
outsb
jle
lret
adc
lock
inc
xchg
imul
xchg
icebp
mov
mov
std
xchg
pushf
xchg
sbb
xor
cmpps
jb
mov
cwtl
push
xchg
mov
mov
push
or
mov
jecxz
dec
ret
inc
out
int3
pushf
imul
inc
sub
sbb
push
std
add
sahf
lret
lds
sub
outsl
sbb
mov
scas
aad
sbb
std
movsl
or
nop
jnp
xlat
xlat
lock
and
rcll
out
push
dec
mov
jbe
pop
push
and
xchg
mov
ret
fistpll
mov
dec
sbbl
push
mov
loope
stos
js
dec
daa
mov
jl
push
imull
or
lods
mov
testb
rorb
shrb
aas
lret
jle
das
mov
pushf
sub
subl
mov
sub
cli
inc
dec
popf
fs
hlt
pop
mov
aam
mov
pop
adc
test
sub
scas
and
xchg
ret
xchg
shlb
subb
inc
addl
and
inc
cmpsl
test
xchg
xor
orl
hlt
es
jmp
inc
cltd
in
inc
imul
aas
sbb
cmp
xchg
movsl
fsub
push
xchg
stos
mov
filds
jne
js
jbe
cmp
notb
sbb
loope
fiaddl
das
mov
pusha
gs
jge
sub
in
leave
orl
fiadds
cmc
aad
and
out
inc
xor
mov
jge
push
cwtl
mov
inc
popa
adc
push
mov
sub
das
fsts
cmp
xor
hlt
adc
addr16
jnp
loope
pop
sbb
pop
jbe
add
dec
dec
les
nop
decl
data16
mov
and
or
pop
lds
verw
sbb
cmpsl
je
lea
or
cmp
and
push
jnp
pop
jp
mov
cltd
or
xor
xchg
call
cmp
ss
sti
mov
lea
or
adc
add
cmp
sub
or
inc
mov
and
aaa
fldt
inc
jmp
test
jmp
dec
loopne
ljmp
stos
aaa
add
xchg
ljmp
dec
jae
mov
dec
rclb
pop
xor
mov
imul
and
cli
out
adc
lock
fcompl
xlat
sahf
xlat
adc
fwait
cmp
lock
inc
xor
shrl
jo
cltd
push
push
add
pop
roll
pop
stos
inc
shlb
cmp
lds
pushf
xor
push
sbb
clc
adc
lea
add
popa
loop
adc
cli
pop
push
fnstcw
mov
mov
jge
ljmp
push
rclb
imull
xor
repz
lds
stc
mov
mov
icebp
pop
push
adc
cmpsl
sbb
push
pop
sti
sub
dec
push
or
sbb
jbe
pop
or
inc
aaa
inc
fistl
outsl
and
jb
cmp
fsubs
gs
mov
imul
and
ss
xor
psubw
mov
push
mov
scas
adc
lahf
rorl
pop
push
lea
and
fwait
pop
in
in
or
shrb
push
fs
jge
jl
hlt
jnp
pop
mov
stos
cs
mov
push
shrb
and
movsb
push
fcmovnbe
js
test
add
lock
mov
add
adc
xchg
sahf
cmp
xrelease
xchg
dec
int
adc
imul
mov
sarl
int3
lret
in
pop
xor
imul
pop
mov
pop
jmp
test
mov
add
add
pop
into
mov
enter
mov
inc
mov
les
adc
xor
mov
pusha
icebp
push
and
notb
out
daa
sub
mov
outsb
xor
dec
dec
gs
pushf
lahf
in
inc
push
push
jmp
in
push
pushf
js
out
sbb
mov
mov
mov
hlt
cli
decl
jnp
sbb
sub
inc
dec
imul
cmp
scas
ds
insb
or
cltd
pop
ret
jl
scas
shlb
dec
stc
je
in
rclb
insl
push
push
sub
daa
or
rcr
cmp
subl
jns
adc
jmp
add
mov
mov
test
add
jb
test
inc
xor
sub
jp
pop
pushf
dec
inc
pop
pop
inc
mov
sub
jo,pn
in
rolb
add
andl
pop
xchg
je
jecxz
lods
dec
outsl
mov
arpl
and
repz
rcrb
pop
add
shl
or
mov
aad
xchg
fidivrs
orl
das
clc
lret
mov
and
addr16
fsts
push
mov
out
insl
push
mov
adc
in
aad
lret
jb
adc
dec
icebp
jb
test
js
in
enter
or
imul
xchg
mov
je
sbb
pop
je
repz
push
ljmp
inc
sbb
out
xorb
in
fwait
daa
loopne
mul
cwtl
lock
loop
and
and
rcrb
imul
addr16
jp
pop
jne
imul
loope
xchg
mov
mov
neg
mov
xor
or
mov
cli
cmp
mov
cld
loopne
shrb
mov
loopne
pop
jg
scas
sbb
cmp
popf
cmpsl
sub
inc
lds
jns
loopne
es
ret
gs
jo
inc
add
shrl
in
mov
popa
xchg
cltd
push
js
pop
xchg
repz
mov
js
inc
sbb
xor
mov
mov
sub
test
outsl
leave
push
fists
cmp
adc
pop
pop
mov
mov
adc
aaa
inc
dec
xchg
xchg
lods
roll
mov
daa
jnp
lock
mov
ja
rcrl
mov
aad
or
add
xor
adc
cmp
int3
ds
dec
ror
adc
adcb
loop
int3
fnsave
les
or
test
aad
loop
enter
and
or
xor
push
sbb
inc
cmpb
mov
mov
or
lock
or
sti
pop
xor
jle
push
pop
jg
or
adc
mov
adc
push
mov
mov
sbb
stos
push
stos
xor
cwtl
cmp
inc
xchg
ds
sub
mov
leave
imul
bound
push
pop
pop
sbb
lods
xchg
addl
sub
or
jecxz
pop
or
subb
sub
or
popa
xchg
roll
popf
sarl
imulb
pop
add
push
jo
outsb
inc
add
movsb
or
lock
adc
movsl
dec
test
enter
data16
or
add
lret
cmp
dec
and
xchg
jne
and
fwait
divb
cltd
scas
arpl
sub
push
mov
adc
fs
sbb
ja
scas
dec
int3
lods
xchg
lds
repz
fmulp
pop
cwtl
cmc
or
adc
dec
sbb
sbb
lods
xchg
mov
mov
test
mov
push
mov
xchg
lret
stos
adc
cwtl
mov
add
mov
repz
sub
sbb
lods
das
jg
fidivrl
xor
mov
and
add
test
outsl
sbb
mov
es
push
enter
ret
rol
push
ss
xor
std
mov
jnp
in
lods
jo
pop
adc
pop
mov
sbb
mov
test
in
cmp
xorl
call
fdivs
in
push
lret
xor
cmp
dec
sbb
ret
jb
repnz
push
sti
ja
movsb
push
out
xor
jno
loopne
js
mov
adc
imul
nop
js
leave
mov
sahf
mov
fsubrp
jne
stos
push
stos
jbe
stos
jae
call
pop
lret
and
mov
cwtl
jle
xchg
movsl
adc
das
pop
sub
andl
sbb
pop
sub
loopne
or
push
mov
fdivrs
out
mulb
sub
xlat
cmp
mov
in
jecxz
jg
xlat
and
data16
push
cmp
mov
or
dec
iret
lods
ja
ja
xchg
or
jp
add
fs
xor
outsb
imul
in
mov
mov
xchg
call
repnz
mov
mov
inc
repz
les
inc
ret
in
xchg
subb
adc
inc
int
and
sahf
imul
dec
frstor
es
pop
cli
inc
push
mov
xchg
aam
call
cmp
pop
cmp
in
fcomps
cmp
adc
mov
jg
mov
pushf
xor
mov
pop
push
add
or
jmp
pop
cmp
imul
cmp
test
sub
and
sbb
push
arpl
stos
jns
or
or
push
outsl
out
sub
inc
inc
xor
xlat
fstpt
loop
mov
mov
lds
sub
xor
xchg
int3
xor
pop
push
xchg
lods
push
sbb
xor
call
daa
push
push
inc
dec
mov
js
push
notl
in
std
or
leave
pop
jbe
fnsave
xor
lea
and
lea
outsl
sti
in
cmp
sbb
fcmove
adc
jmp
in
aas
push
push
loop
into
xor
adc
into
fistpl
adc
xchg
rcrl
jecxz
push
pop
pusha
xchg
jno
xchg
mov
push
xchg
mov
scas
lret
xchg
mov
push
shll
dec
sub
and
xchg
mov
leave
daa
adc
jo
and
sub
outsl
add
lds
xchg
js
dec
andl
test
dec
fwait
dec
jmp
out
push
cwtl
ds
jns
push
mulb
in
jbe
xor
sub
push
in
daa
cli
pop
pop
cwtl
jmp
inc
popf
cmpsb
rolb
xchg
loop
push
adc
loop
rcl
das
arpl
out
clc
lret
mov
lahf
aaa
inc
lret
xchg
dec
in
incb
adc
xor
mov
cld
stos
sbb
sbb
repz
dec
rcll
imul
cmp
or
sbb
shll
mov
lds
mov
inc
movsl
outsl
cmp
cmp
data16
call
fnsave
filds
ret
test
ret
stc
dec
dec
xchg
inc
or
shlb
sub
sbb
adc
mov
movsl
outsb
mov
pop
inc
addr16
sbb
mov
out
movhlps
inc
cli
leave
jl
lea
cmp
dec
and
cli
and
mov
shll
call
mov
mov
test
shll
iret
mov
cli
inc
push
scas
addr16
mov
jle
or
inc
mov
aad
cmp
stos
orl
icebp
xor
popa
mov
pminub
out
sbb
dec
xchg
sbb
mov
fidivrl
xchg
jae
dec
mov
scas
and
rcll
xor
cs
gs
inc
ret
es
cli
hlt
stos
mov
rcr
mov
and
ficomps
sub
popf
push
push
es
or
filds
inc
lods
xlat
rcll
xchg
pop
push
jle
clc
jo
outsl
inc
cmp
xchg
mov
xor
mov
fcom
lds
fiaddl
fisubrs
pop
aaa
int
call
fnstcw
cli
shll
ret
nop
pop
stos
dec
inc
xlat
push
mov
pushf
xchg
mov
inc
mov
dec
fbstp
outsb
and
push
popa
outsl
xchg
lret
addr16
insb
dec
xor
xchg
sbb
jp
stos
aam
aas
movsb
aas
in
aam
xchg
mov
push
xlat
lods
mov
stos
clc
mov
adc
call
push
xchg
test
imul
mov
das
mov
sbb
out
xchg
shl
mov
sti
imul
sub
arpl
adc
fsubrl
push
rdtsc
cs
sbb
lret
movsb
lock
mov
mov
out
icebp
cld
push
xchg
ja
lods
enter
jmp
sub
insb
and
repz
call
xor
inc
cmpsb
sbb
dec
test
or
push
jge
aas
popf
cltd
cs
jmp
out
push
jae
std
inc
and
push
js
je
loopne
dec
popf
imul
fbstp
icebp
cmp
ret
mov
fwait
addr16
in
es
jne
mov
xchg
and
add
aad
or
iret
or
mov
xchg
sub
push
lods
daa
je
cmpsl
xor
test
insb
add
push
dec
mov
push
imul
cmp
dec
test
push
movsl
adc
popf
pop
in
shlw
and
sbb
loopne
fsub
cwtl
addr16
lcall
jnp
adc
scas
pop
or
ffree
rorl
mov
add
and
pop
out
mov
xor
in
stos
lock
idivl
insl
sub
dec
stos
sub
and
jne
movl
gs
out
aam
roll
aas
cltd
pushf
pusha
xor
cmc
adc
cli
pop
cmc
dec
in
sarl
stos
xchg
mov
and
pusha
jo
mov
xchg
adc
add
mov
or
push
cld
pop
iret
enter
sbb
pop
and
test
mull
out
lods
les
and
into
clc
jg
sub
or
mov
loop
cmpsl
add
aaa
and
dec
icebp
push
daa
sbb
fisubrl
sbb
mov
sub
jo
sub
push
xorl
jl
mov
jp
test
mov
mov
mov
addb
jg
lret
imul
sbb
dec
mov
rorl
and
jle
xchg
xor
and
inc
call
mov
adc
int3
jbe
sarb
add
jg
test
das
adc
mov
mov
dec
std
stos
mov
stos
ret
ret
mov
clc
scas
lock
mov
lcall
mov
flds
add
jp
push
and
rol
subl
xor
sbb
and
push
jp
idiv
cmpsl
adc
or
pop
adc
inc
aam
pop
cld
clc
sbb
xchg
rclb
shr
inc
je
in
rcr
xorb
cltd
or
popf
mov
lret
dec
push
out
inc
in
add
lods
lret
addr16
out
inc
popf
mov
insb
cmpb
cmpsl
int3
inc
ds
push
pop
lds
push
lret
adc
lea
out
in
sbb
xchg
push
inc
je
shl
adc
imul
adc
xchg
cmc
out
mov
fisubs
xlat
incb
pusha
out
loopne
fidivl
push
outsb
insl
subl
xor
incl
ret
js
xchg
mov
push
repnz
push
cmpsl
xor
sub
test
mov
pop
icebp
mov
inc
out
cmp
dec
je
lea
push
cmp
lods
dec
sbb
mov
rorb
daa
adc
shll
xchg
sub
or
pop
jbe
imul
cmpsl
sbb
or
lods
aam
bnd
push
jecxz
adc
cld
cmp
enter
sbb
pop
pusha
add
neg
in
push
lahf
sbb
jbe
jb
sti
ret
xchg
ret
jnp
or
jle
scas
lea
nop
scas
scas
insl
in
sub
es
adc
mov
fiadds
push
pop
xorb
scas
sbb
mov
insl
xor
ret
xchg
xor
int
mov
bound
and
sti
fimuls
lods
cmp
fwait
mov
sub
scas
add
fcompl
icebp
test
shlb
mov
xlat
xchg
lcall
je
xor
clc
aad
sub
sbb
xor
clc
adc
aaa
push
test
repz
aam
bound
ljmp
push
mov
loope
mov
into
inc
push
bound
dec
push
xor
jl
fbld
ror
cmpsl
test
popa
ds
fmulp
jbe
imul
adc
mov
iret
push
or
and
sub
mov
adc
mov
icebp
fldenv
dec
dec
arpl
xor
sldt
push
popf
push
hlt
add
sub
push
notb
pop
lahf
sbb
mov
pop
insl
xor
jmp
aad
sarb
cmpb
and
lret
inc
sbb
or
adc
es
std
outsb
fmull
dec
inc
jmp
pop
outsb
cmp
cmc
in
jbe
std
aas
ds
pop
clc
and
dec
notl
push
jne
or
and
lods
and
cltd
or
es
scas
push
adc
loope
jnp
inc
jp
popf
dec
xorb
xor
pushw
xchg
and
subb
adc
cmp
pop
ficoml
jo
add
int
iret
out
or
mov
push
lds
cmp
jbe
popf
vpunpckhqdq
xchg
jmp
and
adc
and
pop
lret
into
push
pop
mov
test
cmpsb
xor
rcrl
lcall
mov
pop
fucomi
nop
out
ror
es
fistpll
cmc
mov
lret
enter
or
mov
xchg
lock
push
addb
daa
sti
ret
sbb
dec
push
out
xchg
or
push
dec
and
inc
push
icebp
inc
cmpsl
dec
push
xor
xor
cwtl
fnsave
cmpsb
pop
mov
sbb
adc
adc
push
jo
xor
lahf
inc
cli
inc
inc
dec
pop
aas
dec
inc
mov
loope
outsb
push
sub
xchg
cmp
mov
cwtl
insb
ret
xchg
bound
and
mov
iret
pusha
sub
sub
ret
pop
add
jge
out
fistpll
arpl
movsl
dec
mov
pusha
mov
inc
lods
ret
inc
push
loope
fldcw
dec
lea
ljmp
sub
pop
cwtl
jbe
mov
lret
push
or
test
xor
mov
test
pop
xchg
cmp
rorl
mov
ds
mov
add
fbstp
nop
push
fistl
shlb
mov
subl
cltd
mov
sbb
sub
scas
std
ret
xlat
fnstenv
mov
nop
popf
cltd
mov
cmpsb
pop
jecxz
outsl
mov
nop
imul
mov
mov
gs
push
movsb
push
push
lret
xlat
cltd
cmp
add
xchg
imul
incl
hlt
notb
push
aam
sbb
mov
int3
in
repnz
scas
outsb
xchg
je
jl
inc
int3
pop
mov
adc
test
jo
mov
mov
sbb
mov
and
imul
xchg
add
out
mov
scas
pusha
outsb
cmp
dec
mov
sbb
cmp
in
and
xchg
popa
mov
lcall
push
in
in
xchg
cltd
pusha
ljmp
xor
cs
jp
push
movsl
lret
loope
std
mov
cwtl
fdiv
pushf
fwait
mov
xor
lds
notb
sub
xchg
pop
xchg
scas
cmp
xchg
insl
out
sub
out
or
lcall
push
cmp
inc
fmull
push
aam
cld
sub
inc
push
mov
inc
aaa
add
mov
in
inc
in
insb
stc
mov
sbb
xchg
jne
dec
inc
int3
int
add
hlt
dec
xor
rolb
fistpl
dec
dec
xchg
xchg
sti
sarb
aas
push
mov
adc
mov
pop
out
xor
sub
fwait
xor
outsb
pop
xchg
adc
sti
mov
add
fadd
int
popa
in
add
out
push
aaa
ficompl
insb
daa
insb
in
stc
cld
xchg
or
in
mov
add
xchg
xchg
sarl
call
imul
icebp
pop
inc
stos
mov
or
pinsrw
in
mov
inc
iret
pop
inc
push
movsb
test
sub
mov
and
fcoml
xchg
xchg
jo
or
jne
int
mov
mov
popl
xchg
pop
int3
dec
sbb
pop
rcrb
cmp
test
cmpsl
add
and
shrb
ja
cmp
dec
cwtl
jge
sbb
jmp
mov
inc
push
dec
ret
and
data16
lahf
rcrl
mov
jmp
js
mov
mov
jae
int3
dec
pop
and
jp
push
rolb
pop
xor
mov
xor
cmp
adc
pop
cmp
xchg
or
xor
std
daa
inc
xor
leave
cmp
scas
cmp
pop
add
or
lock
lret
xchg
sti
lahf
lock
adc
int3
mov
cwtl
or
out
pop
cmp
jns
loope
xlat
or
cmp
xor
insl
inc
ljmp
sbb
jge
or
or
mov
test
or
mov
mov
xchg
movsb
repz
adc
mov
loop
setle
and
pop
jbe
adc
xchg
cmp
loop
mov
sub
xchg
fadds
fwait
mov
fldt
mov
xor
out
out
fcmovnb
movsb
les
icebp
js
and
fcomp
xor
xor
inc
or
jl
mov
gs
movsl
xchg
cmp
std
mov
fistps
and
cmp
xchg
jl
push
cmp
xchg
lods
add
inc
mov
scas
fwait
jmp
jecxz
dec
jns
in
mov
aad
mov
imul
jnp
or
xchg
loope
xchg
aas
pushf
add
mov
cld
xor
push
sbb
cmc
xor
rcrl
stos
xlat
shll
inc
ret
mov
sub
mov
cmp
adc
mov
jge
adc
mov
lcall
pop
shrb
cmp
mov
pop
std
push
or
call
add
orl
xchg
stc
mov
ret
xchg
pop
scas
inc
jmp
mov
pop
pop
fs
outsl
das
cld
adc
fstp
add
mov
push
shufps
iret
xchg
sub
test
inc
mov
addr16
testb
xor
bound
test
add
test
mov
stos
cmp
push
fbstp
cmp
fstp
adc
fimuls
pop
lahf
sub
or
rorb
adc
div
jns
mov
mov
jbe
xor
sbb
cmpl
mov
jns
mov
sbb
cld
outsb
inc
and
sub
cmp
inc
cmp
aam
ja
out
rcrl
push
mov
ss
jns
out
rcrb
outsl
add
subb
stc
insb
dec
dec
lods
scas
dec
add
xchg
mov
pop
dec
mov
pop
mov
lahf
stos
xlat
or
fstpl
dec
mov
jno
adc
jp
xlat
test
repz
stos
push
fidivrs
sbb
mov
adc
dec
in
add
push
ss
inc
loop
sub
or
leave
test
jg
enter
cmp
mov
sbb
inc
add
sbb
cmp
arpl
aaa
rorb
xchg
jbe
xor
xor
sub
out
xlat
loop
cmp
mov
cmpsl
mov
add
repz
push
addr16
sub
mov
rorb
frstor
lcall
nop
xlat
ficoml
sahf
inc
enter
fistl
jecxz
out
mov
pop
mov
pop
clc
cmp
lods
mov
call
pop
or
xchg
fwait
xor
rorb
scas
mov
cld
ret
dec
jbe
lea
arpl
pop
aaa
out
addr16
daa
scas
xchg
iret
mov
fidivrl
adc
popf
shl
pop
lret
pop
sub
test
add
and
divl
jmp
icebp
jg
push
outsl
rolb
into
in
aad
push
cmp
or
clc
aam
shl
dec
push
out
jg
rolb
and
sbb
push
xchg
cmp
mov
mov
out
xor
cs
mov
outsb
mov
rorb
and
push
inc
xor
sbbl
sbb
ret
gs
out
mov
jmp
xchg
bound
mov
pop
in
push
fwait
cmpsl
ds
push
outsl
cmp
arpl
sarb
dec
pop
push
xchg
sub
sbb
shlb
in
and
outsb
int
arpl
pop
and
outsl
xor
sti
mov
scas
inc
fsubrs
clc
add
mulb
ror
and
dec
fsubrl
xor
adc
xor
clc
mov
inc
fs
enter
mov
movsl
dec
jp
pop
cmpsb
out
and
jae
mov
stos
dec
repz
pop
adc
outsl
faddp
call
adc
test
fs
out
ljmp
or
mov
aam
pop
jns
ret
and
mov
insb
es
sbb
insb
pop
mov
inc
loope
and
cmpb
imul
and
sarl
xor
xlat
test
jl
jl
stos
movb
mov
test
pushf
rcll
cmpsb
mov
pop
dec
sub
das
shrb
xor
cmp
pop
push
cld
fwait
push
in
shll
jmp
adc
mov
xor
sub
xchg
dec
xchg
lods
leave
subb
sbb
adc
rcrb
mov
cmp
mov
mov
mov
jb
ret
dec
xorb
add
push
fidivrs
jl
and
insb
inc
aad
rcll
cmp
dec
xor
and
lcall
pavgb
pop
inc
cli
sahf
pop
rorl
lret
mov
mov
clc
loope
in
adc
xchg
ss
inc
ljmp
lea
or
pop
in
sub
add
stos
ljmp
daa
je
add
cmc
in
lock
pop
add
out
adc
lods
jmp
js
loop
cmp
mov
pop
fwait
mov
or
das
je
lds
mov
xchg
iret
xchg
test
xor
sbb
adc
int3
jae
hlt
dec
pusha
or
inc
push
je
lock
and
push
jb
xor
dec
shrl
sbb
mov
jbe
aaa
imul
ss
movl
in
inc
lea
ficoml
mulb
lcall
int3
push
pop
cmp
ljmp
pop
mov
push
les
pop
mov
movhps
cmp
sub
shll
fistl
mov
movsl
add
pop
xorl
ds
ja
aam
js
scas
jo
xchg
cmp
jo
xor
sub
mov
pop
dec
jo
mov
pop
cmp
push
cmpsl
mov
data16
inc
aaa
push
mov
sbb
xchg
mov
add
or
ljmp
mov
jo
into
ljmp
xchg
hlt
movb
es
lahf
xor
pop
lahf
jb
std
sarb
mov
jne
imul
repz
push
adcl
sar
jb
mov
and
mov
stos
xchg
lds
mov
jge
push
cld
les
xor
push
nop
or
jle
outsb
jl
shrl
popf
sarb
cmp
pop
push
cmpsl
dec
and
mov
insl
iret
pushl
cli
mov
scas
mov
mov
xchg
dec
xchg
lods
ds
xor
push
push
aad
xchg
outsl
cmpsb
xor
das
sahf
jmp
sarl
mov
mov
adc
pop
out
lahf
xor
fisubl
xlat
pop
lea
daa
inc
pop
rclb
movsb
fs
mov
in
or
sub
jne
dec
sahf
lcall
mov
imul
pop
adc
pop
xor
insb
push
in
cmp
mov
clc
lea
fdiv
push
add
push
cltd
pop
aam
sti
lds
add
push
lret
outsl
jb
fistps
iret
inc
pop
mov
xor
cmpsl
inc
jae
mov
push
cmp
sarb
sub
mov
subl
andl
pop
xor
aam
scas
fucomi
loope
stc
cmp
push
pop
push
cmpsl
jae
scas
arpl
dec
add
sub
jnp
ret
xchg
inc
cld
add
jbe
cld
movsb
inc
jle
ret
cmpsb
sbb
pop
icebp
xlat
out
add
data16
jp
push
push
stc
andl
push
insb
cli
cwtl
or
or
pushf
lods
sbb
sbb
adc
test
clc
roll
int
fcoms
or
stos
out
arpl
cmc
or
loopne
cmp
fsts
xor
mov
insl
fs
loop
adc
mov
gs
mov
or
pop
mov
cs
cmp
push
lcall
shr
cs
loope
mov
xchg
and
test
cmp
pop
stos
sahf
sbbb
fwait
adcl
jae
pop
loopne
push
lret
out
xchg
dec
enter
xchg
lea
xchg
jl
pop
sahf
mov
mov
lods
dec
xchg
push
or
jmp
out
scas
cmpsb
xlat
shlb
push
js
xor
pop
lret
jle
push
sub
sub
lds
mov
roll
and
dec
mov
cmc
les
cmp
sti
jne
dec
lods
jmp
jno
dec
cld
pop
cmpsl
orb
dec
ss
pushf
dec
bound
pop
pop
into
jmp
scas
jge
sbb
in
add
pop
pop
arpl
or
negb
out
inc
xchg
dec
mov
call
and
call
lods
cmpsl
rcll
pusha
xchg
in
add
jb
cmp
dec
pop
sti
leave
add
lods
xchg
fdivl
inc
mov
outsl
inc
push
sbb
push
sbbb
push
pop
pop
fnstenv
lret
pop
popf
mov
fdivrs
mov
jnp
inc
dec
lods
mov
rclb
scas
jbe
repnz
mov
addb
int3
push
xor
das
xchg
leave
sub
insb
daa
or
push
xchg
jo
scas
or
adc
imul
xlat
ret
or
aaa
mov
je
xchg
lods
cs
xlat
lea
xorb
imul
cmp
adc
out
std
pop
push
mov
movsb
mov
xor
ret
loope
push
dec
orl
cmp
rolb
xchg
rcll
scas
pop
pop
inc
fs
aaa
pop
lds
mov
push
ficoml
pusha
fisttpll
jae
pop
dec
sti
cwtl
inc
push
enter
ljmp
les
call
dec
push
divl
into
or
lock
xchg
dec
mov
icebp
movsb
inc
mov
mov
jl
push
icebp
jg
mov
lcall
jge
inc
adc
and
cmpsb
outsb
mov
int
dec
dec
sahf
push
or
orl
popa
pop
add
mov
jecxz
add
mov
push
mov
cmp
mov
pop
push
xchg
mov
insb
in
xchg
cmpsb
mov
repnz
jl
push
push
jae
or
pop
xor
call
jl
and
loop
mov
mov
xchg
je
push
fimull
test
pusha
xchg
mov
pop
pop
mov
sarl
inc
cmp
data16
lods
fs
lods
cs
mov
cmp
jb
dec
push
out
loopne
rep
fidivs
enter
and
inc
sbb
loopne
inc
lods
pop
repz
push
mov
sbb
imul
mov
flds
add
dec
mov
mov
inc
out
ss
and
dec
in
mov
jmp
add
xchg
pop
sar
sub
das
out
ss
cld
adc
xor
popa
adc
inc
sbb
fldl
cmpsl
cmc
hlt
inc
cmpsb
sbb
cli
loopne
jb
je
xchg
lock
and
cs
mov
jno
add
stos
jmp
fs
jno
loope
lods
dec
inc
adc
mov
clc
es
aas
lcall
call
enter
push
mov
pop
push
sub
xlat
roll
fucomi
inc
rclb
sub
int
stc
or
add
jne
aas
adc
cmp
xchg
cmp
shlb
cmp
mov
xor
int3
iret
mov
mov
int3
test
inc
dec
xchg
add
mov
push
and
xchg
gs
icebp
jnp
les
test
stos
mov
aas
sub
sub
cltd
mov
jmp
subb
jl
fildl
sub
out
and
adc
jl
aam
movsb
test
mov
xor
fnstsw
cmp
lock
out
inc
push
cwtl
mov
push
shll
jo
fidivrs
inc
dec
mov
mov
out
call
mov
mov
jnp
sbb
repnz
inc
mov
leave
sbb
mov
mov
mov
sbb
es
and
xor
mov
push
gs
ds
rorl
and
fsincos
or
icebp
inc
cmp
sbb
into
cli
sbb
fistps
in
and
jae
std
jne
jae
gs
push
je
call
repnz
int3
mov
cmp
mov
sub
shl
push
or
xor
std
sub
pop
rorb
jae
mov
inc
lret
cltd
jmp
and
push
or
jecxz
mov
int3
fsubl
stos
mov
sarl
fisubrs
mov
test
lea
sbb
fadds
xor
pop
addr16
xchg
aam
pop
loopne
stos
pop
and
sbb
add
lods
sbb
jnp
and
cmp
pop
cmpsb
cmp
sti
adc
or
es
push
mov
mov
mov
shll
cmp
xor
test
push
dec
stos
call
mov
xor
lods
push
sbb
andl
test
lds
add
mov
mov
inc
test
loopne
dec
out
sub
pop
jno
sub
mov
pop
sar
sbb
loop
xchg
in
xor
cmp
pop
jns
loop
mov
fisttpl
push
sahf
leave
lret
insb
imul
jge
int
jmp
sbb
ja
cmpsl
push
xchg
pop
out
jo
pop
sbb
sbb
loope
out
shrl
mov
or
inc
mov
pop
and
test
jecxz
jae
sub
sbb
push
adc
flds
stos
pop
cld
adc
jmp
lock
aad
arpl
scas
pop
mov
aaa
dec
lea
pop
pop
sbb
ljmp
scas
into
inc
adc
repnz
fdiv
mov
mov
xchg
add
pop
loope
fldcw
and
iret
pop
idiv
xchg
push
stc
xchg
inc
loope
mov
ds
or
lret
mov
bound
pop
ret
push
rorb
xor
cmpsb
mov
hlt
in
pusha
rcr
pop
lret
lea
imul
daa
int
pop
xchg
lcall
scas
push
push
mov
dec
jmp
dec
push
dec
hlt
jle
outsl
popa
jle
je
and
push
movb
and
stos
cmp
inc
inc
jge
sbb
out
pusha
sbb
int
out
movsb
inc
mov
fld
add
pop
mov
lock
push
sbb
ficoml
mov
jo
bound
push
out
frstor
lret
lea
lret
cmp
mov
xchg
movsb
mov
or
gs
imul
cmp
out
jg
loope
push
adc
jle
push
mov
adc
rorb
and
lahf
roll
sbb
sahf
mov
push
sbb
repz
test
std
pop
pop
mov
add
sub
cmc
sbb
mov
aad
stos
nop
aas
loope
mov
pop
repnz
jbe
test
jecxz
jae
sub
es
les
repnz
cmp
sbb
sub
pop
sub
iret
inc
imul
cmpsb
jne
out
dec
mov
mov
pop
call
lea
pop
dec
pop
pop
inc
pusha
jmp
mov
add
mov
not
inc
stos
sbb
xor
sub
add
int3
push
sbb
movsl
popa
movsb
cmp
jp
mov
ds
fisubrl
push
test
ret
cmp
cmp
push
push
aam
fisubl
bound
or
hlt
dec
pop
jg
aam
mov
mov
shr
clc
mov
mov
pop
je
fsubrs
dec
cmp
mov
pop
dec
bnd
or
repz
and
sub
xchg
jno
in
mov
jp
mov
addr16
mov
lods
cltd
adc
lea
cld
jnp
sbb
test
fimuls
mov
iret
outsb
mov
nop
lcall
call
pop
mov
fdivrl
out
or
enter
or
jmp
aam
in
jl
int
mov
dec
push
lret
push
dec
test
jge
repnz
inc
mov
ljmp
std
sbb
push
xchg
xor
jle
xlat
andb
outsb
jae
pop
jmp
in
add
movsl
cltd
imul
sub
out
repz
js
aad
cmp
mov
pop
stos
inc
dec
mov
cli
pop
fnstenv
cmp
jle
fdivl
out
sub
adc
das
push
mov
enter
xchg
add
idivl
mov
jno
popf
movsl
aaa
scas
cld
sbb
mov
insb
outsl
mov
jge
or
pop
add
clc
cmp
push
cmp
adc
dec
pop
decb
sub
pop
lods
mov
cmp
out
push
out
std
or
repz
mov
pop
lret
jnp
or
mov
lcall
cmp
add
push
mov
jae
push
out
bound
push
dec
pop
lahf
std
clc
fwait
incb
sub
sti
pop
leave
out
xor
add
add
dec
test
mulb
pop
call
xor
das
test
sbb
pop
xor
mov
pop
movsl
pusha
mov
mov
mov
xor
fwait
and
lcall
jno
mov
nop
sub
imul
pop
adc
mov
xchg
nop
xchg
push
nop
fisubl
xor
packuswb
mov
cmp
cmc
dec
mov
cmc
mov
pushf
ret
clc
jge
aas
and
sbb
lahf
dec
popf
js
jmp
pusha
mov
data16
mov
repnz
xor
shrb
sbb
adc
imul
call
mov
xor
xchg
addr16
neg
inc
dec
in
push
xor
pop
popa
xchg
push
or
pop
sub
xor
test
stos
popf
sub
push
xchg
sub
and
xor
adc
inc
sbb
inc
ss
jg
out
leave
or
inc
bound
test
out
adc
int
cmpsb
lea
or
clc
or
adc
mov
jle
sub
aam
subl
aaa
push
adc
xchg
shrl
mov
jb
and
je
scas
inc
scas
js
lea
lretw
out
cld
push
enter
or
hlt
lidtl
fwait
sbb
repz
mov
cmp
mov
fidivrs
out
mov
cmp
cmpsb
jg
fildll
dec
dec
int
not
mov
jno
shl
popf
cmp
dec
adc
lock
leave
stos
mov
jo
xchg
push
pop
jb
push
jns
xchg
push
jecxz
mov
sub
mov
cmpsb
out
scas
out
popa
dec
mov
gs
or
icebp
pop
jp
dec
or
inc
xchg
and
xlat
in
pop
outsl
cmc
scas
ss
imul
lds
mov
movsl
sub
jmp
shlb
add
push
pop
jbe
add
in
add
lea
hlt
fcoml
dec
es
mov
imul
cmpsb
mov
add
out
fwait
gs
sbb
aad
pop
and
out
fisubrl
mov
xchg
sub
nop
mov
pop
mov
lods
or
stos
mov
es
mov
push
and
dec
ret
les
imul
popl
mov
sub
lea
pop
and
add
push
stos
add
mov
lcall
test
pop
dec
imul
mov
sbb
push
add
imul
push
fnstsw
sbb
inc
adc
cmpsl
in
xor
pop
es
es
in
pop
int
add
test
pop
insl
add
mov
mov
mov
jp
pop
mov
push
dec
test
jp
add
cmp
inc
jb
cmp
dec
int3
jb
dec
mov
adc
shlb
and
and
ficompl
cmpsb
sub
mov
sub
int
aas
jecxz
imul
iret
mov
fbld
push
mov
out
mov
jl
ss
push
lods
imul
dec
push
inc
cmpb
pop
and
out
pushf
mov
ret
in
adc
fwait
incb
mov
iret
out
push
arpl
or
xchg
sarl
pop
jmp
fs
xor
push
pop
shll
pusha
lea
std
adc
push
push
mov
xor
jp
lock
sub
enter
out
cs
push
shrb
sub
jmp
aaa
add
xor
mov
xchg
into
or
aas
xlat
cmp
mov
xchg
cmp
push
pushf
fistps
sub
and
mov
add
shl
stc
push
hlt
and
mov
ss
mov
pop
pop
push
adc
jnp
pop
rclb
fdivr
fs
aad
jecxz
sbb
or
ret
sub
arpl
inc
sub
adc
jne
stos
dec
fcomip
pop
add
sbb
inc
xchg
cmp
push
in
adc
adc
lods
out
or
ja
xchg
jg
inc
ja
cld
push
icebp
in
out
xorb
cmp
jl
and
aad
jbe
sahf
xor
cs
shll
sub
fadd
inc
lret
mov
push
mov
jnp
push
xchg
and
xlat
and
or
popf
pusha
test
mov
jno
daa
mov
pop
cmp
xchg
jae
imul
push
cmp
icebp
xchg
sbb
add
cmp
inc
sbb
shl
jno
and
sub
cmc
insl
lods
or
je
jmp
arpl
lds
push
sbb
aaa
nop
jns
insl
das
orl
push
cwtl
pop
loope
add
loopne
add
pop
add
mov
scas
mov
cmp
dec
bswap
fildll
and
rcrl
pop
ds
push
jl
xor
push
mov
faddl
push
int3
push
adc
fucomp
dec
pop
mov
sub
jge
ljmp
dec
mov
dec
xor
and
mov
mov
jne
or
mov
divl
and
in
aam
stos
leave
xor
lret
js
sbb
and
mov
adc
mov
mov
inc
dec
clc
in
xor
mov
cwtl
mov
xor
mov
jne
xor
inc
int3
nop
cmp
sti
test
cmpsb
pop
mov
inc
xor
mov
dec
sbb
jae
or
movsl
xchg
subb
sbb
dec
mov
outsb
ficoms
popf
cmp
inc
mov
pushf
fs
cs
push
dec
cmp
cmp
or
loop
sub
inc
fs
or
ljmp
divl
xchg
scas
push
jne
subl
iret
mov
lret
test
aam
push
xchg
inc
adc
daa
and
stos
push
mov
popf
xlat
adc
mov
xchg
addl
dec
sub
pusha
bsf
mov
sub
and
push
cmp
divl
js
pushfw
aam
fstpt
fwait
clc
sbb
pop
and
popf
stos
test
bnd
push
xor
cltd
out
aas
js
dec
mov
gs
mov
insb
aaa
ret
dec
lcall
popa
fldt
adc
jg
data16
push
sti
andb
bound
fisubrs
jne
add
pop
pusha
subl
loope
inc
clc
out
inc
inc
push
in
jbe
inc
mov
sbb
ror
sub
push
stos
xchg
and
mov
push
pop
xlat
xchg
sbbb
cwtl
outsb
pop
sbb
xor
and
add
mov
loopne
lods
lcall
addl
aad
adc
rol
xor
adc
mov
pop
mov
jae
jg
iret
gs
mov
sub
je
icebp
xlat
xor
dec
mov
jge
lock
insb
cmpsb
sahf
pop
mov
add
and
cmc
lds
nop
cmpl
jnp
dec
shr
mov
mov
pusha
pop
rcrb
jb
add
pop
test
mov
out
pop
dec
cwtl
or
int3
outsl
outsl
orb
sub
dec
xchg
fwait
pop
cmp
pop
jns
rolb
rclb
inc
mov
push
sub
jmp
ret
insb
movups
insl
jo
aad
popf
stos
mov
out
imul
jnp
gs
xor
jae
xchg
push
pop
shrb
sub
sahf
lahf
push
andl
jle
or
and
lods
iret
orb
pop
in
dec
xor
xor
and
fstpt
nop
jb
pusha
jo
and
shlb
sti
sub
adc
lock
ret
ss
sahf
jp
sub
dec
aad
mulb
ficomps
dec
mov
cmp
movsl
add
mov
jp
imul
scas
ret
add
xchg
lods
inc
xchg
cmp
xor
mov
out
insl
and
sub
aaa
dec
and
sub
hlt
sbb
xchg
ret
jno
fsubrp
aam
or
neg
out
aad
lds
cmp
enter
push
dec
push
fwait
jne
add
and
xor
out
xor
int3
adc
call
pushf
jl
sti
movl
std
loopne
mov
lea
sar
mov
es
mov
out
sub
cmp
test
sub
adc
push
xor
nop
xor
loopne
pusha
roll
decb
push
jmp
and
test
mov
je
push
xlat
fsubs
data16
imull
mov
inc
push
push
mov
int
or
xchg
and
jb
leavew
push
scas
push
and
mov
sahf
and
imul
cmp
pop
push
cmp
mov
adc
push
insb
lods
das
mov
test
test
out
and
gs
lahf
lcall
and
lods
pusha
dec
imul
test
sub
repnz
dec
dec
lcall
xchg
ss
inc
outsl
addb
mov
jge
pop
cmp
cmpsb
sub
data16
lods
shl
xor
out
cmp
pop
repnz
jl
add
mov
repnz
push
sub
adc
lock
cli
insb
mov
inc
and
mov
mov
inc
or
jecxz
pusha
add
std
mov
pop
sub
roll
sub
psubw
xlat
movb
jae
dec
in
aaa
pop
aam
sbb
fsubrl
jmp
ss
jb
or
fnstsw
lods
or
jle
mov
shlb
scas
mov
mov
adc
or
xchg
scas
scas
adc
dec
mov
es
xchg
stos
cmpsl
add
add
frstor
adc
pop
xorl
popf
push
nop
out
cmp
pusha
loope
cmpsl
add
arpl
fstpl
addr16
jle
mov
mov
pop
jo
ret
aas
movsb
fiaddl
or
jns
xor
pushw
or
adc
jmp
xor
ss
sbb
adc
dec
pop
xor
outsb
mov
xchg
in
cmp
push
and
mov
ja
clc
loopne
cmp
adc
mov
lea
call
fwait
bound
call
rcl
xchg
insl
arpl
ret
push
mov
xor
sub
cs
data16
ja
scas
scas
ficoml
pop
in
inc
imul
enter
xchg
sbb
insb
xchg
push
cmp
rorl
mov
push
or
test
in
out
jo
xchg
push
lahf
ja
push
ret
mov
fisttpll
cltd
xlat
push
int
sub
enter
sbbb
push
fsubrl
mov
pop
adc
xchg
loopne
pop
push
xor
cmp
xchg
insl
or
xchg
lea
cmp
jne
jmp
jmp
leave
lret
rcrb
out
lds
ja
dec
fucomip
mov
pusha
sarb
clc
jnp
mov
xchg
sbb
sbb
popf
jecxz
or
mov
adc
fs
out
inc
loope
xor
xor
adc
adc
mov
mov
sti
pop
loop
dec
xlat
das
pop
pop
mov
jb
xchg
and
loopne
lds
adc
outsb
jle
in
mov
sbb
mov
insl
jno
inc
and
pop
dec
dec
xor
sahf
cmp
out
movsb
shll
andb
push
push
lods
jne
mov
popa
mov
fimuls
inc
jb
lcall
popa
test
cmp
cmpsb
test
add
das
aad
or
mov
inc
popf
in
xchg
cmpsl
das
sbb
das
inc
outsb
push
movsl
push
fidivrs
mov
movsl
idivl
mov
push
cmpl
mov
inc
and
push
outsl
jb
sub
lcall
sarb
js
jle
mov
mov
lret
out
mov
cmp
cld
leavew
sahf
jg
loopne
es
es
cmp
in
int
add
xchg
psubq
push
add
and
int3
jp
test
in
inc
int3
popa
xchg
xor
dec
clc
jmp
lret
jecxz
cs
sbb
jo
in
nop
sub
push
stos
cmp
dec
int
clc
cmpsl
orb
sbb
repnz
cmp
rorl
loope
icebp
sbb
cmp
lods
js
add
sub
jae
dec
out
push
pusha
gs
add
rorb
je
nop
test
jle
fwait
mov
xchg
sbbl
sbb
hlt
outsl
push
push
idivl
jae
ds
sbb
inc
adc
mov
and
xchg
data16
out
je
sub
shrb
mov
std
ret
adc
mov
call
loop
bound
stos
addr16
call
jecxz
add
shrl
adc
insb
mov
es
int
test
fs
push
insb
fiaddl
xlat
add
test
xchg
and
sbb
xchg
mov
push
out
inc
xor
sbb
inc
or
rcrl
xor
int
mov
mov
fdivrp
adc
mov
sub
mov
pop
mov
jns
in
cli
xor
inc
mov
add
add
stos
cli
mov
and
add
and
sub
rcl
jne
push
ss
xor
cmpsl
mov
fistl
push
xor
add
push
lcall
sub
inc
cmp
scas
and
je
inc
gs
inc
idivb
sub
cmp
fisubs
mov
jmp
xlat
sub
testb
lret
inc
mov
sub
les
lock
add
lods
cld
iret
shll
jno
xchg
popa
fidivs
xor
push
rclb
push
adc
jmp
enter
pop
mov
jl
lret
cld
sbb
lock
jbe
rorb
cld
scas
lret
mov
sub
pop
xor
int
pop
add
stos
jns
push
outsb
popf
bound
rcr
fwait
mull
daa
repnz
jmp
lahf
xchg
add
roll
enter
addb
mov
mov
push
adc
inc
jge
sub
mov
jnp
jne
mulb
int3
jmp
sbb
push
lods
sub
sub
mov
fadds
scas
test
pop
inc
inc
data16
cmp
xor
mov
jp
mov
sar
dec
ss
dec
sbb
sub
push
icebp
arpl
fwait
cmp
mov
rcrb
aas
movsb
stos
sub
popa
jg
jns
ss
mull
aaa
mov
les
and
movsb
push
mov
adc
mov
cs
lret
shrl
test
mov
or
mov
mov
lds
xchg
mov
cmp
jge
cmp
adc
loop
popf
aam
jmp
aas
add
popf
test
aam
cmp
push
cmp
inc
test
cmp
inc
dec
cmp
xchg
and
loopne
lahf
push
cltd
xadd
or
mov
int
fistpll
pop
xchg
sub
jne
or
dec
sti
adc
adc
jge
popf
test
aas
fwait
sub
and
hlt
pop
jle
or
jmp
add
call
shr
sahf
xchg
das
or
push
pop
lods
icebp
movsb
pop
int3
pop
sbb
leave
push
mov
mov
les
stc
pop
push
arpl
push
iret
mov
loope
les
adc
mov
call
xor
cmp
push
xor
and
or
push
sub
inc
cmp
movsb
negb
push
add
jbe
sti
je
lahf
xchg
in
pop
cwtl
stos
cmp
xchg
popf
xchg
mov
cmp
loop
add
aam
fld
push
cmp
push
add
push
xor
gs
leave
daa
xchg
int
ret
test
lahf
add
xchg
and
add
out
cmp
push
retw
stos
and
loop
cmc
in
imull
daa
aaa
xchg
sub
sub
out
pop
mov
mov
jbe
aas
das
lods
sbb
loop
mov
aam
test
push
xchg
sub
insl
lods
fldcw
cmp
insb
out
mov
cmpsl
sbb
pop
data16
cli
inc
mov
cmc
daa
je
imul
xchg
dec
fneni(8087
call
outsl
jecxz
mov
sbb
popa
xchg
aad
cmp
aas
push
cmc
push
out
outsl
fwait
repz
and
cmc
jg
incb
cmp
in
lret
popf
jge
enter
sbb
test
sub
aas
mov
ret
xchg
mov
sbb
hlt
inc
das
aas
push
cmpb
loope
cmpsl
ret
lea
rclb
xor
pop
outsb
in
sub
xchg
xor
lcall
adc
pusha
add
mov
repz
or
xchg
stos
mov
adc
pop
and
fbld
fdivrs
test
aad
sbb
xor
adc
pop
cmp
jecxz
dec
daa
arpl
test
mov
test
dec
sarb
jle
push
dec
ljmp
mov
mov
aam
adc
sub
std
sahf
add
mov
jmp
nop
shrb
stc
mov
fcomi
cmp
add
aam
bound
pop
or
dec
lret
push
jns
jno
fisttpll
loope
in
xchg
cmp
aas
in
jns
pop
mov
sbb
mov
push
mov
sbb
dec
sub
and
sti
jecxz
adc
rcrb
addr16
mov
dec
lcall
and
inc
cld
adc
rclb
add
add
jnp
fiaddl
inc
pop
add
mov
pop
xor
out
jecxz
jmp
or
lret
nop
dec
and
pushf
aad
cmp
bound
inc
dec
xchg
stc
aad
out
imul
jecxz
pop
pop
dec
mov
mov
pop
xchg
jb
mov
sbb
pop
pushf
adc
cmp
rep
pop
pop
bound
ds
jge
clc
adc
mov
jns
and
xchg
cmpsb
sub
cmp
mov
adc
push
pop
xor
sub
pop
loop
jmp
test
sub
push
fld1
outsl
test
add
movsl
lret
das
mov
clc
jl
mov
in
and
je
divb
xlat
ljmp
push
loop
xchg
fdivrp
mov
cmpsl
dec
push
fcoms
dec
repz
sub
arpl
dec
or
fistps
inc
lahf
cmp
dec
insl
cmc
pop
jb
repz
add
or
mov
sbb
negl
mov
push
test
call
test
mov
add
mov
outsb
mov
adc
enter
scas
xor
xchg
iret
cld
repnz
movsl
lods
and
fcoms
call
mov
adc
ret
fists
push
xor
int3
sbb
mov
cli
loope
mov
adc
mov
fimuls
sahf
es
sbb
jle
stos
shll
inc
ja
xor
sub
or
mov
in
cmp
bsr
cmp
and
pop
sub
pop
mov
enter
add
sub
sbb
mov
cmpsb
push
add
cli
clc
xor
mov
decl
call
fstps
mov
lcall
in
fisttpll
sbb
cwtl
cmp
xor
xlat
xor
pushf
dec
loop
mov
lods
das
dec
and
adc
push
rep
xchg
ret
jmp
cmp
push
and
jmp
inc
dec
cli
dec
xchg
out
lret
xchg
jp
sbb
pop
xchg
test
js
dec
xor
rorb
or
inc
add
sub
shlb
ficoml
push
adc
into
sti
call
dec
lret
ljmp
push
lcall
orb
pushf
mov
jns
shrb
ja
scas
xor
cli
fimuls
sub
subl
dec
mov
insb
push
dec
mov
out
or
dec
lods
scas
pop
cmp
cmp
mov
add
jle
aaa
add
add
dec
push
clc
lcall
aas
adc
hlt
or
cmp
das
testl
mov
loopne
cli
int3
or
ds
repz
add
jecxz
xchg
sahf
imul
push
insl
dec
or
out
dec
xchg
xchg
pushl
sbb
mov
jbe
ljmp
pavgw
jp
aad
test
into
mov
popa
sbb
cmpsb
xor
scas
pushf
hlt
sbb
sarb
in
dec
jbe
and
inc
and
mov
dec
loopne
stc
mov
icebp
out
push
aad
mov
mov
enter
mov
jle
lods
fcomps
push
adcl
mul
sbb
out
sti
imul
sbb
cmp
into
or
add
jl
lods
int3
cld
dec
add
inc
cmp
or
fdivl
jae
push
and
pop
pop
pop
or
fwait
ss
scas
test
sub
sub
or
and
sub
jg
ret
lcall
call
jnp
ds
xorb
cmpb
jmp
loop
adc
sub
sub
or
lock
pop
and
pop
test
fmull
add
test
sahf
aad
mov
and
mov
out
and
in
fwait
dec
and
out
push
scas
les
test
js,pn
and
ror
xor
das
dec
sahf
out
and
out
stos
loope
repz
hlt
mov
call
sub
lds
push
or
fs
mov
mov
xchg
repz
data16
dec
sbb
fisubrl
dec
jae
push
xlat
or
loop
lock
in
outsb
inc
cmpsl
loope
sbb
je
push
push
aas
lods
push
out
ret
add
ds
mov
or
push
sbb
dec
sub
cmp
cmc
adc
lcall
addr16
enter
scas
push
addr16
add
loope
xor
fistpll
pop
in
es
sub
imul
adc
or
jae
popf
bt
lahf
fidivrl
int
shll
stos
mov
fidivs
jae
sub
int
sbb
dec
mov
mov
mov
add
popf
aas
push
loop
xchg
bndstx
negl
adcl
xchg
jmp
aas
cmp
cmc
cmp
rorb
ficoml
adc
idivb
push
scas
mov
fs
out
cmp
lahf
les
inc
in
cld
jl
or
stc
jno
test
push
pop
or
dec
pop
sub
insl
push
push
popa
fistl
lret
pop
jns
sbb
dec
loopne
fs
int3
insb
and
lods
adc
or
sub
movsb
in
cmpsb
leave
in
push
and
dec
nop
pop
clc
sub
out
push
inc
loope
xorl
stos
fstps
cmp
push
cmpsl
xor
xchg
inc
cltd
test
push
xor
clc
ficoml
xchg
ret
pop
dec
dec
hlt
and
data16
push
sbb
pop
mov
shr
addl
loope
xor
cmp
sbb
dec
jp
std
ss
dec
sahf
popa
pop
lret
sub
or
daa
test
xcrypt-cfb
cmpsl
and
jno
imul
shlb
bound
hlt
cmpsl
mov
ret
loopne
loopne
das
pop
inc
ds
jbe
xchg
sbb
mov
rcrb
cmpsb
mov
xlat
or
or
addl
jp
popa
sub
pop
test
push
aad
mov
xchg
dec
push
cmpsb
xor
jbe
ljmp
mov
test
push
inc
and
test
dec
or
stc
adc
sbb
movsb
nop
cmp
mov
clc
and
lret
int
pop
cmp
out
sti
movswl
mov
or
pop
aad
aam
sahf
insb
mov
out
mov
scas
push
sub
cmp
popf
dec
jne
xor
adc
das
popa
fwait
or
repz
cmpsb
dec
icebp
enter
lret
mov
shrb
dec
inc
addl
jmp
xor
and
sti
mov
push
aaa
mov
aad
aas
add
je
inc
jns
xor
and
xchg
movsl
in
int3
repz
pop
push
mov
sbb
mov
pusha
add
mul
mov
add
sbb
pop
xchg
les
mov
adc
push
dec
mov
mov
repz
adc
xchg
outsl
fs
mov
mov
stos
sbb
sahf
stos
bound
jecxz
sti
sti
xor
inc
pop
add
pushf
xchg
rcll
pop
push
test
cmc
cmpsl
jo
lods
or
mov
xor
je
mov
xor
scas
dec
divb
insl
test
clc
xchg
ret
aad
push
repnz
arpl
xlat
or
cmp
jae
mov
pop
adc
mov
mov
and
aad
out
push
icebp
jge
aad
movsb
jne
and
sbb
adc
jo
aam
sarb
out
fucom
sti
cmpsl
add
sbb
repnz
dec
popf
lock
pop
paddusw
lahf
popl
aas
pop
ljmp
cltd
cmp
push
test
mov
jo
and
fmulp
loop
jae
mov
push
leave
movsb
outsl
or
mov
lods
jae
xchg
leave
test
xchg
sahf
test
fistpll
movsb
and
fcompl
jmp
dec
fsubrs
pop
out
repz
imull
sbb
mov
pop
push
sbb
cmp
cmc
mov
mov
xchg
add
mov
fsub
shlb
sub
push
movsl
dec
scas
jle
ljmp
cmp
xor
stc
imul
adc
and
cs
cmp
addb
std
xchg
jle
pusha
xlat
add
mov
fs
ljmp
inc
cltd
addr16
adc
leave
sub
ret
ljmp
mov
pop
cld
imul
push
mov
addr16
adc
push
cmc
add
push
inc
out
cmpsb
jmp
sti
xchg
fwait
hlt
popf
sbb
ja
adc
and
xor
push
xlat
xlat
repz
mov
mov
outsb
xor
imul
gs
pop
popf
out
xchg
xchg
je
ljmp
ja
or
or
inc
pop
imul
out
call
xchg
ficoms
and
not
cwtl
jecxz
stc
mov
aad
sbb
mov
scas
mov
sub
push
pusha
bound
xchg
mov
std
cmp
cmp
fs
ljmp
push
movb
popf
js
push
cmp
ret
mov
xorb
add
les
mov
and
bound
cli
test
jecxz
out
lcall
mov
scas
lret
or
adc
hlt
out
lret
add
push
aad
fistps
lcall
cmp
dec
sub
cltd
or
and
pop
adc
ret
mov
inc
div
imul
push
xor
cli
cwtl
enter
ret
loop
mov
jb
jb
jae
imul
sub
pop
push
pop
lret
jmp
xchg
xchg
mul
xchg
push
das
aad
subb
sbb
insb
push
call
ds
xchg
or
out
push
loopne,pt
jne
insb
push
mov
xchg
sbb
or
sbb
jae
mov
hlt
pop
fsubrs
popa
es
lods
inc
leave
xor
cmp
ljmp
cmpb
dec
mov
jb
inc
into
jb
repnz
addb
push
jae
fimuls
std
sti
adc
xlat
bsf
jge
in
cltd
mov
inc
subl
and
mov
repz
imull
sbb
clc
mov
stos
cmpsb
pop
jl
pop
sub
inc
lcall
push
push
xchg
pop
xchg
cmp
xchg
adc
js,pt
pop
inc
jg
dec
fsubrp
inc
loope
mov
and
div
jnp
ljmp
imul
lcall
jl
dec
shll
mov
dec
into
xor
adc
push
xchg
dec
pushl
pop
mov
outsl
mov
cltd
dec
adc
mov
sbb
punpckhbw
jne
jmp
int
mov
lahf
sub
add
test
and
cmp
lea
pop
loopne
loope
bound
popa
add
and
dec
pop
gs
jl
jno
cltd
mov
add
mov
bound
xor
repz
rcrl
test
push
mov
call
dec
push
push
push
and
sbb
jmp
mov
in
dec
gs
repnz
fsts
cmp
aam
fwait
mov
outsl
rol
lret
jbe
cmpsl
repz
fiaddl
push
arpl
iret
popa
mov
or
sar
add
aas
pop
mov
inc
mov
test
xchg
in
stc
bound
cmp
cmp
and
rclb
dec
push
cltd
iret
mov
sti
lret
sub
in
add
je
mov
pop
xor
push
repz
ljmp
jmp
dec
adc
mov
xchg
mov
mov
add
scas
nopl
into
xchg
outsl
jnp
jge
dec
lods
iret
inc
add
pop
jle
imul
cmpsl
je
fwait
jne
rol
les
bound
rolb
adc
aad
shrl
mov
pushf
scas
in
dec
sub
jg
in
inc
arpl
mov
negl
std
ret
lea
lock
and
or
enter
jmp
rep
and
lret
ficompl
xor
cmpsl
and
fisttpl
lock
push
je
mov
cli
jne
fdivp
adc
cmp
pusha
pop
insb
xchg
and
mov
push
pushf
push
jle
adc
pop
or
sbb
push
les
jbe
test
jns
out
es
cltd
loope
push
dec
lock
sarl
push
test
andb
call
shll
jg
mov
dec
cltd
shl
loopne
or
sub
adc
mov
push
push
mov
jne
cltd
mov
push
pop
inc
dec
outsb
outsb
icebp
ja
dec
pop
sub
dec
unpcklps
push
call
std
push
repnz
adc
xchg
pusha
or
pop
add
xchg
notl
mov
lret
test
sub
mov
ret
cmpsb
xchg
pop
adc
outsb
pop
pop
filds
cmp
test
ret
adc
or
popf
call
lods
push
xor
add
andl
inc
leave
lds
sub
mov
adc
adc
sbb
push
rcrl
mov
xor
adc
cmpsb
out
mov
sahf
mov
data16
and
mov
loopne
movsl
fcoms
xor
aas
adc
add
call
jg
out
fisttpll
sub
mov
pmaddwd
dec
sahf
in
push
pop
and
jbe
popl
rcll
and
fwait
cmp
outsl
inc
push
xchg
ds
add
out
xchg
inc
xchg
jno
mov
out
xor
mov
mov
es
xchg
cld
orl
ret
inc
sbb
addr16
insb
dec
pop
or
cltd
je
adc
xor
sub
xchg
scas
cld
xchg
in
jg
push
add
cli
mov
mov
push
shll
lods
fldl
cltd
sub
cmpsl
mov
call
movhlps
jp
flds
loope
stc
push
pop
mov
mov
in
mov
push
sbb
push
cmp
rcrb
sbb
je
mov
mov
mov
out
in
inc
lds
ds
movsl
rsqrtps
push
xor
mov
sub
mov
idiv
adc
je
stos
inc
jns
sbb
insb
dec
cmp
lahf
push
fstpl
mov
insb
or
adc
mov
cmp
push
sub
call
out
arpl
push
push
lcall
std
arpl
rorb
addr16
adc
or
data16
lcall
adc
clc
xorl
rclb
mov
cmp
lcall
and
push
mov
scas
fcmovne
and
fmulp
or
sub
fldl
adc
pop
mov
in
cmc
lret
aas
sbb
push
div
xchg
call
pop
and
shr
xchg
jg
scas
sub
push
and
jmp
in
repnz
jle
push
dec
xchg
movsl
xchg
ljmp
ljmp
jle
lcall
gs
cmpl
cmc
mov
mov
push
mov
enter
jg
and
sbb
mov
xchg
test
or
enter
mov
push
mov
xchg
icebp
mov
arpl
imul
or
push
lret
sti
out
imul
fimuls
int
insb
pop
clc
lds
lods
data16
xchg
imul
pop
pop
lret
pop
pop
fidivl
cmp
and
loope
dec
test
and
cs
lds
das
dec
xchg
jo
xor
cmp
jmp
push
popa
xchg
aaa
mov
dec
roll
pushf
outsl
pop
pop
pop
inc
pop
jg
dec
sub
ljmp
in
inc
mov
pop
cmp
mov
ds
push
ss
jno
es
push
nop
into
sbb
outsb
sub
jmp
adc
aas
repz
movsl
ds
or
aad
in
sahf
and
in
xchg
subb
loopne
add
dec
dec
mov
push
aam
inc
or
or
jns
lret
je
js
fs
aad
fucom
xchg
mov
sub
add
lret
ret
and
movsl
imul
in
aad
xchg
loope
dec
data16
mov
add
mov
push
xor
out
cmp
xor
in
icebp
xchg
incl
dec
movsb
mov
xor
enter
push
dec
fwait
dec
lock
rolb
lock
inc
mov
xchg
test
jne
ret
es
mov
out
mov
test
push
je
xchg
sub
pop
mov
inc
xchg
mov
push
movsl
movsb
sahf
cs
add
aad
mov
repnz
stos
push
mov
sub
lret
or
lcall
jle
int3
out
mov
out
cmp
mov
mov
xor
add
fcoms
dec
xchg
dec
dec
xchg
pop
dec
xchg
addb
cltd
jp
bound
ja
mov
in
jge
iret
or
pop
popa
jae
or
xchg
ds
enter
adc
and
stc
out
fwait
mov
mov
dec
sarb
out
lods
sbb
fldcw
xchg
jne
pop
rcrl
jae
adc
lds
repz
out
jp
mov
mov
and
xchg
mov
push
cs
inc
bound
out
arpl
subb
mov
cmpsb
push
vorps
lods
dec
xchg
or
jp
adc
shl
scas
cs
jnp
es
mov
aaa
int
sbb
dec
mov
sbb
adc
inc
add
and
sub
cmpsl
lock
mov
xor
decl
or
outsb
ja
cmpb
dec
fst
xor
add
xor
cli
push
mov
push
lds
cmp
jge
or
and
rclb
stos
movsb
push
in
aam
push
mov
and
out
mov
mov
mov
insb
sti
pop
jl
adc
rcl
cmp
int
outsl
outsl
pusha
int
and
or
and
or
repnz
loop
add
fstl
lahf
jecxz
test
test
mov
lcall
push
xchg
out
shll
pop
les
cmpsl
or
xchg
stc
aaa
addr16
loope
jg
fistps
mov
mov
mov
xor
subb
lods
mov
aam
sbb
jo
inc
pop
lds
xchg
adc
aas
sbb
int
es
sub
add
in
mov
mov
orb
push
int3
cmp
xchg
xor
je
xchg
push
add
add
inc
pop
and
stc
add
js
movsb
or
dec
jl
xor
adc
test
sbb
stos
cli
nop
stc
fidivl
mov
fdivrp
cmpsb
out
loope
pop
push
shll
sbb
and
sbb
icebp
mov
mov
pop
push
push
and
push
lret
push
mov
mov
movsl
bound
push
shlb
adc
mov
out
insl
jl
les
pop
fdivrl
mov
fistpll
jle
pushf
mov
sub
adc
in
mov
mov
aad
test
stos
dec
repz
pop
xor
stos
das
cmp
push
xchg
xchg
rorb
ljmp
aas
repz
jae
filds
xor
es
loop
stc
and
lods
sbb
and
sbb
add
mov
call
jne
mov
ret
lods
and
mov
or
jo
mov
lret
xor
mov
loope
mov
cld
shl
daa
lea
loope
jne
add
sbb
mov
fucomip
andl
out
inc
adc
enter
fwait
jae
xlat
xchg
and
shlb
add
lea
dec
pop
daa
push
and
inc
loope
lock
mov
clc
fistpl
mov
flds
lods
fdivs
push
leave
out
lea
inc
xor
mov
into
dec
out
mov
cmpsl
sub
add
ret
aaa
imulb
add
inc
and
and
pop
loope
mov
and
mov
dec
daa
cmc
mov
or
fsubrp
pusha
repnz
xchg
and
mov
or
stos
cltd
dec
xor
adc
cmpsl
das
sub
xchg
and
mov
out
ret
lahf
orl
outsl
stos
or
aas
fldl
jno
add
leave
xrelease
xchg
jge
jle
jge
ror
outsl
adc
cli
cmp
mov
push
je
xchg
push
jns
inc
rol
outsb
or
jo
mov
shl
mov
cld
rcrb
gs
jge
xchg
add
or
leave
or
les
mov
enter
sarb
xlat
and
pop
jl
mov
jno
xor
hlt
sbb
repz
out
cmp
out
jl
imul
mov
fists
out
jnp
in
sbb
test
test
nop
je
fists
scas
std
jbe
mov
or
movb
adc
insb
mov
cltd
mov
xchg
xor
push
sub
addr16
or
and
out
std
or
mov
mov
ds
mov
lahf
fstpl
add
pop
jle
jno
shrb
ret
mov
ret
out
lret
inc
jp
out
push
enter
cmpsb
or
shlb
pop
sbb
in
lds
iret
aaa
mov
prefetchwt1
or
enter
addl
dec
cmp
xchg
nop
enter
in
or
in
mov
stc
insl
mov
nop
add
les
mov
xchg
add
xchg
xor
lcall
inc
pop
fldt
sub
loop
add
les
or
aas
jge
into
mov
pop
inc
xchg
mov
mov
mov
addr16
push
xchg
adc
inc
ja
add
cmp
jns
into
lock
cltd
push
cwtl
imul
outsl
mov
inc
loopne
pop
out
push
arpl
gs
or
adc
in
mov
and
add
nop
push
jg
xor
and
jmp
icebp
xor
add
jae
sbb
push
mov
test
dec
cmp
sarl
leave
loope
int3
fstl
fldt
cmp
lret
ret
shlb
jle
xchg
dec
test
adc
loope
scas
jl
push
jns
adc
xor
or
pop
jle
mov
cmpsb
cmp
lds
pop
inc
jnp
das
xor
dec
stos
loop
mov
mov
mov
lock
xor
push
bound
add
addr16
cmp
sbb
dec
lock
inc
mov
cmpsb
scas
push
inc
dec
and
subl
adc
add
inc
mov
outsb
and
inc
lret
movzbl
in
mov
jno
js
clc
mov
add
inc
xchg
inc
mov
aad
out
js
dec
int
enter
lret
inc
aas
loop
or
jmp
call
insl
arpl
mov
push
jno
popf
rclb
daa
mov
mov
int3
mov
dec
cmpsl
lods
add
outsl
jb
or
movsb
adc
lea
ljmp
sbbb
mov
add
mov
dec
lcall
enter
mov
cmp
or
fldz
mov
test
gs
inc
pushl
xchg
movsb
or
lahf
sub
mov
in
push
jl
xchg
mov
pop
push
xor
in
and
push
flds
jno
xor
loop
jnp
lcall
std
ret
jmp
push
mov
arpl
addb
and
loopne
sub
xchg
fcoml
jo
jne
clc
pop
jecxz
pop
or
dec
sbb
mov
into
mov
hlt
stc
sub
mov
popf
sub
push
aam
movsl
pop
push
cmp
inc
lock
in
loop
xchg
dec
rorl
js
jecxz
jnp
ret
bound
push
pop
enter
xchg
scas
xchg
xchg
test
in
pop
test
sbb
xchg
test
dec
pop
sbb
push
mov
pop
jno
repnz
cli
and
adc
imul
repz
std
in
cmp
mov
ss
int
enter
and
push
bound
cmpsb
xor
push
sahf
cmp
push
inc
xchg
nop
insb
cltd
inc
sbb
std
data16
lcall
sbb
lcall
insb
in
adc
cltd
jecxz
sub
sbb
xor
and
inc
std
inc
jno
xlat
aad
in
inc
and
outsb
xchg
jno
icebp
jnp
int3
jmp
push
enter
cltd
out
xor
stos
pop
xor
inc
lahf
jns
ds
add
rorl
decb
lods
out
xchg
jl
fisubs
xchg
in
insl
ret
cmp
sub
stc
lahf
aam
sbb
cmp
inc
pop
sbb
pushf
repz
push
int3
stos
adc
mov
mov
movsb
pop
dec
scas
dec
enter
sbb
push
sbb
out
jbe
push
ret
out
ret
mov
imul
add
mov
ffreep
inc
adc
incb
dec
hlt
pop
mov
pop
xor
pusha
inc
inc
push
pop
pop
gs
mov
mov
sub
sub
ljmp
push
lret
sub
cmp
fcoms
rorl
sbb
je
adc
test
outsl
loopne
iret
inc
push
dec
mov
pop
sbb
sbb
testb
jmp
xchg
jb
adc
mov
outsl
pop
shr
lea
aaa
mov
test
mov
stos
mov
push
cli
cmpsl
arpl
scas
loopne
cmpsb
and
fmuls
je
cmp
adc
lock
rclb
insl
ljmp
xor
push
xor
mov
test
fisubs
inc
jp
or
and
sub
pop
arpl
mov
out
push
push
cld
sbb
pop
in
into
cmp
movsb
add
mov
outsb
cmpsl
lds
negl
test
push
enter
iret
jnp
clc
jmp
js
andb
lea
dec
mov
sbb
lret
rcll
test
and
test
mov
jmp
scas
mov
xchg
sbb
push
pop
jecxz
in
cmpl
and
jno
loop
pop
push
scas
xchg
inc
push
dec
bound
or
nop
cwtl
fs
aas
cmpsl
repz
push
jl
cs
push
clc
lret
sub
push
imulb
xlat
pop
ret
mov
clc
imul
push
jl
dec
mov
les
arpl
lock
insl
adc
iret
inc
adc
or
clc
popa
sbb
sbb
xchg
push
std
pop
hlt
hlt
xlat
fwait
and
sub
inc
repnz
mov
adc
xor
mov
enter
bound
in
sub
std
adc
ljmp
lret
mov
daa
push
cmpl
icebp
jbe
cmp
scas
xchg
cmpsl
cmp
cs
jg
add
mov
popf
dec
or
jns
pop
ljmp
mov
jmp
mov
fsubr
and
cmp
pop
and
jb
test
cmpsl
cltd
mov
xlat
insl
fwait
cmpsl
mov
adc
sti
std
scas
in
out
aam
adc
nop
les
jecxz
xchg
push
std
outsb
dec
pop
xchg
icebp
ss
mov
inc
mov
xchg
jno
add
enter
loop
shrb
and
jge
push
xor
test
xor
and
sbb
cmp
fldt
mov
arpl
adc
lds
jne
mov
mov
testl
lods
icebp
fwait
add
std
call
inc
lock
movsl
loop
xor
mov
pop
pop
mov
mov
xor
inc
adc
dec
push
int3
push
push
aas
jnp
cmp
sbb
mov
dec
add
mov
in
popf
in
inc
xor
rcrb
lds
pop
jnp
adc
rolb
sahf
mov
add
aaa
idivl
mov
scas
ljmpw
lock
xchg
mov
nop
loope
mov
inc
cmp
mov
ljmp
aas
push
push
cmp
or
mov
pop
sti
adc
mov
cltd
popa
sbb
sahf
or
dec
inc
xor
mov
lret
orl
cmc
push
popf
adc
bound
push
movsb
lock
sbb
mov
pop
lds
imul
enter
scas
add
js
addr16
adc
sub
les
sbb
or
pop
arpl
fidivrl
aad
sub
ds
push
mov
jg
mov
idivb
ss
xor
jg
mov
add
jp
fbld
mov
dec
popf
mov
lea
xchg
addr16
sub
dec
sub
adc
outsl
pop
fstl
jl
int
sub
insb
lret
lds
rorl
nop
jmp
int3
sti
cmpsb
fsts
and
mov
ds
inc
aad
add
inc
int
bound
inc
test
mov
jo
bound
xchg
xor
xchg
add
mov
mov
and
aam
stos
adc
and
jnp
stos
xchg
pop
je
das
aad
icebp
jg
pushf
pop
jae
xor
cwtl
sub
inc
jno
cmc
jmp
or
push
nop
jno
lret
stos
fnstcw
aas
outsl
out
mov
in
sbb
fwait
pop
and
loop
xchg
pop
insb
or
push
add
lea
fsubl
jo
adc
sahf
add
dec
push
loope
cli
xchg
shrl
mov
add
lods
xchg
cli
jmp
jl
xchg
or
xchg
les
jno
stos
aam
nop
pushf
cmp
lea
das
shrl
fistps
aam
in
mov
cld
jmp
data16
and
out
into
lock
push
inc
cltd
jno
test
call
pop
inc
jns
stos
xor
in
scas
add
adc
adc
insb
ss
cmp
imul
aam
and
pop
sub
mov
pop
and
pop
jmp
loop
fistl
jge
cmp
pop
mov
jno
out
mov
jg
mov
ficoms
inc
inc
daa
or
pop
mov
sbb
xor
and
subl
jae
leave
jns
jae
dec
mov
lret
push
nop
cmp
pop
lret
mov
js
sub
fisttpll
sub
jmp
testb
or
jae
jnp
jle
inc
adc
mov
pop
xor
loopne
sti
adcb
das
mov
andb
test
mov
add
ficoms
sahf
faddp
cmp
aaa
repnz
nop
cmpsb
mov
mov
mov
xchg
adc
mov
das
mov
fisubrl
cmp
ja
mov
mov
jl
mov
cmp
cltd
pop
test
loopne
daa
cld
inc
mov
loope
imul
cwtl
icebp
mov
or
push
push
add
test
aam
push
movsb
test
sbb
dec
addl
push
xchg
push
cmp
push
hlt
faddp
pop
cmp
out
mov
xchg
fs
cmpsl
xor
and
mov
mov
pop
loopne
and
mov
add
xchg
pop
xchg
clc
rcrb
fdivrl
sbb
cmpl
mov
and
test
xchg
fs
int
xchg
ja
movsb
jl
ret
sub
shlb
push
jnp
xor
pushf
syscall
dec
dec
aaa
lahf
out
arpl
dec
test
stos
iret
lds
xchg
jl
pushf
jmp
loope
loop
ljmp
cmp
outsb
cmp
cli
and
movsl
mov
shl
pop
pop
cmp
dec
adc
jo
out
test
dec
shlb
push
mov
insb
pop
fcomip
cltd
mov
or
ret
mov
pop
mov
xor
push
xchg
push
in
mov
push
stos
inc
push
fs
enter
jge
cmp
pop
jl
cmp
adc
clc
cmpsb
rolb
and
mov
sbb
jg
jmp
add
out
adc
and
add
sub
pop
les
sti
cmpsb
dec
cmp
pusha
jmp
mov
ds
xor
lcall
mov
push
or
xlat
sti
push
push
pop
add
pop
push
repz
jnp
stos
nop
sar
pop
sti
ficoml
cmpsb
inc
loope
pop
xchg
xor
cltd
mov
mov
pop
lret
sbb
mov
ds
gs
jmp
dec
xor
outsl
test
pop
pop
jecxz
jb
pop
xor
ja
jno
pop
icebp
insl
in
imul
lea
pop
pop
je
sbb
test
dec
xlat
push
sti
inc
push
fwait
push
pop
lret
scas
mov
add
fiadds
jns
in
mov
sub
movl
mov
sbb
ss
xchg
adcl
push
push
push
lods
pop
cmc
adc
or
xchg
pop
dec
and
xchg
pushl
sti
push
adc
jno
int
adc
fcoms
cmc
arpl
out
jbe
xor
jle
jg
call
lcall
and
jns
cmpsl
movsl
addb
pop
add
xor
fisttps
test
in
and
ja
or
mov
mov
std
leave
loopne
sub
pushf
dec
pop
js
std
xchg
jno
xor
cwtl
adc
movsl
push
stos
and
nop
push
mov
jns
push
iret
in
pop
decb
bound
jnp
sub
movb
std
lret
aad
insl
jne
aaa
cmp
mov
xchg
push
outsb
sub
push
push
dec
shl
scas
jne
inc
roll
xchg
or
push
aas
sub
cwtl
jg
xchg
jl
xchg
mov
adc
and
xchg
loopne
or
sub
outsl
ss
xor
int
push
inc
inc
add
adc
dec
stos
scas
jmp
mov
dec
stos
popa
je
and
rclb
test
xchg
cmp
arpl
jle
xor
cltd
ljmp
subl
push
fldt
add
rclb
out
mov
loopne
cld
xchg
dec
std
mov
or
outsb
xchg
mov
shr
mov
je
mov
out
js
add
mov
mov
out
insl
ret
repnz
and
jne
movsl
mov
mov
mov
xchg
insb
mov
mov
inc
arpl
in
and
cmp
jae
test
ds
bound
stc
xchg
and
outsb
adc
add
mov
fcompl
add
repz
sbb
fs
pop
pop
out
push
adc
jno
pushf
inc
add
sbb
sbb
pop
add
pop
sbb
jnp
mov
jbe
fisubl
std
xchg
add
xor
dec
jmp
mov
mov
or
or
jle
xor
scas
andb
in
fdiv
adc
pop
mov
dec
into
das
cmc
mov
mov
xchg
adc
mov
and
sbb
test
rclb
adcb
int3
aas
pusha
xchg
xchg
and
dec
std
cli
or
testb
pop
dec
fdivrl
cmp
xchg
or
mov
cwtl
cmp
shl
es
aaa
out
stc
scas
xorl
mov
rcl
dec
jmp
scas
push
cmp
push
cmp
popf
in
gs
aas
leave
pop
mov
push
or
sub
sbb
xor
inc
push
pextrw
cmp
bound
sub
hlt
mov
insl
repz
mov
mov
or
in
push
lret
xor
fldl
cmpsl
lods
mov
mov
xchg
fs
push
mov
pop
jo
pop
loopne
les
adc
shl
mov
test
push
sub
lods
int
lods
pop
sbb
sbb
pop
dec
sub
sbb
dec
pop
xor
test
sbb
std
sub
fdiv
mov
cli
insl
ja
push
insl
imul
push
xor
cld
adc
rcrl
push
lcall
cmc
test
inc
mov
mov
cmpsl
imul
mov
lret
sub
push
pop
lock
mov
ds
mov
hlt
test
jle
push
push
push
push
pushf
and
dec
pop
mov
bswap
xor
popa
clc
insb
mov
enter
dec
adc
jp
ret
mov
cmp
test
mov
push
sub
jnp
cmp
sbb
mov
les
dec
fiaddl
fs
xchg
sbb
int
mov
xchg
ds
pop
test
sub
cwtl
divl
les
inc
or
fsubs
xorb
sbb
addb
jle
xchg
dec
push
xor
cli
jg
push
add
or
popf
or
mov
mov
sub
push
xchg
lret
scas
cmp
sbb
incb
out
push
mov
cmpsb
adc
push
ds
and
sbb
popa
jns
sub
add
inc
stos
addr16
jle
adc
jl
jle
mov
mov
mov
pop
jb
ss
scas
add
or
outsl
mov
add
hlt
push
or
lcall
dec
push
bound
jl
mov
out
into
pop
in
outsb
adcl
jge
les
push
test
scas
mov
out
sbb
cwtl
xchg
push
lahf
adc
ret
pop
lret
xlat
lods
lret
xor
jns
sbbb
stos
rolb
les
lock
push
dec
rolb
jo
pop
push
int
inc
add
lcall
fidivrs
lods
cltd
jnp
sbb
mov
push
rclb
xorl
rorb
lock
mov
xor
mov
mov
sub
mov
pushf
dec
je
mov
push
jmp
sub
mov
or
popf
rorb
xor
and
fs
out
adcl
push
and
je
jp
mov
xchg
adc
pusha
rcl
shrb
ja
add
jnp
pushf
into
pop
cmc
sbbb
jg
mov
data16
fsubl
pop
in
mov
push
cwtl
mov
xchg
jno
fbstp
sub
add
enter
dec
data16
daa
sbb
cmpsb
lds
cmp
fdivrl
xchg
shll
inc
pop
pop
scas
subb
repnz
mov
lcall
inc
aad
push
jbe
xlat
and
scas
xchg
frstor
inc
add
sub
lds
or
xorl
pop
mov
fdiv
jp
cmp
insl
jb
rcll
sbb
out
add
loopne
shl
loop
mov
lea
mov
xchg
aad
lock
in
mov
lahf
pop
mov
pop
xchg
lock
mov
xor
mov
stos
xor
std
pusha
jg
jns
and
popf
jae
mov
push
inc
push
leave
cmp
jmp
xchg
push
jbe
cmpsl
mov
movsl
xor
add
pushf
std
push
test
mov
loope
jo
inc
cmp
mov
nop
cmc
insl
rol
jge
xlat
repnz
lods
movsl
outsb
sti
push
out
mov
or
xor
sbb
push
clc
mov
sub
dec
xchg
add
dec
mov
mov
and
mov
repz
xchg
outsl
loop
imul
sub
arpl
pusha
and
mov
sbb
lret
push
dec
popf
push
xchg
stos
sub
outsl
push
inc
mov
in
testl
and
cltd
in
xor
ljmp
mov
mov
or
cmp
add
ss
xor
dec
lock
les
fcmovbe
jp
arpl
sbb
into
xlat
cmp
loope
xor
daa
xor
or
xor
sti
rolb
imul
push
mov
push
scas
pop
jns
add
cmp
mov
lods
addr16
mov
testl
push
fiaddl
mov
add
fs
push
in
pusha
mov
pusha
outsb
push
mov
outsl
repz
xchg
pop
popf
sub
and
push
push
sub
cmp
add
sbb
xchg
xor
mov
cmpsl
or
mov
cld
push
aas
scas
fisubrs
insl
fisubrl
pushf
mov
arpl
enter
jge
test
fbstp
shll
mov
push
mov
xchg
fldcw
mov
stc
ljmp
sub
lea
lcall
push
sub
push
add
mov
in
negb
sub
jno
fisttps
aaa
inc
pop
fsts
mov
adc
adc
push
insl
fcoms
flds
rolb
faddp
lock
sahf
mov
inc
pushf
sub
lods
sub
in
mov
addr16
cmp
mov
jle
lret
mov
pop
pop
lods
xchg
push
push
das
sbb
movsb
mov
mov
lret
sbb
inc
out
jecxz
and
mov
sti
inc
or
dec
cmpsb
enter
xchg
jae
sbb
xchg
or
push
xor
jmp
jo
mov
imul
adc
xor
out
aad
and
push
ja
lahf
dec
rclb
shr
mov
dec
jp
mov
gs
mov
fistpll
cmp
xor
xor
shl
aas
mov
lret
cmpsb
sarb
mov
dec
out
lea
stc
enter
outsb
inc
clc
nop
jl
lds
das
outsb
cltd
cld
or
addr16
inc
push
xchg
lods
loopne
add
or
sahf
push
fistpl
jge
movsl
int3
ret
inc
mov
pop
idiv
push
adc
and
jge
sub
mov
xchg
test
lods
xchg
out
or
mov
inc
out
cmp
lahf
adc
jmp
jb
mov
insb
or
fdivrl
jne
sbb
sti
or
lods
int3
jns
ss
aam
rcr
fists
adc
sbb
movsb
ret
out
cld
xlat
fldt
mov
loope
mov
test
dec
adc
and
popf
icebp
xor
iret
cmpsl
push
das
lret
cmp
js
fcomi
mov
adc
sahf
test
lods
xchg
xor
inc
out
movsb
sub
xor
mov
loopne
dec
lock
in
ret
gs
dec
test
outsb
aam
rcrb
test
sub
cmpsl
mov
pop
pop
mov
cli
aas
sub
daa
jns
xchg
pop
xchg
pop
imul
dec
arpl
in
jb
mov
hlt
cmp
mov
enter
dec
bound
mov
xchg
jecxz
push
out
jno
mov
xor
insb
push
cmpsb
andb
movsl
xchg
shrb
jns
mov
xlat
faddl
loopne
dec
jge
push
sarl
push
cmc
dec
xchg
pop
xor
pop
popa
pop
pop
andb
lods
jne
pop
push
lods
data16
andl
les
data16
test
ret
cltd
mov
lahf
xchg
push
adc
loope
sbb
into
fcomps
jp
out
mov
or
in
call
jp
xor
mov
mov
fbld
xor
movsb
xchg
xor
imul
ret
mov
dec
push
fwait
sbb
xorl
cmp
stos
test
adc
mov
test
lods
shlb
inc
sub
push
ficompl
sar
jg
adc
xchg
lret
pop
sti
fdivrs
pushf
and
rorl
xchg
xor
push
repz
sbb
filds
dec
xchg
cs
sbb
sbb
std
mov
cs
sub
add
or
rcll
in
or
stos
cld
lock
in
sbb
xlat
fsubrs
into
mov
out
orb
ja
cmp
aam
add
push
mov
cmp
sub
and
in
lea
sbb
adc
imul
xchg
pop
xchg
rorl
xchg
aad
sbb
outsl
les
xchg
rcll
cmp
loop
popf
sbb
enter
xorb
out
ljmp
dec
js
arpl
mov
push
push
sbb
das
das
shr
jle
dec
cmp
mov
leavew
mov
mov
jae
mull
xchg
push
xchg
leave
push
push
jp
loop
clc
mov
sar
aad
pop
cmpsl
xchg
inc
stc
into
repz
sub
mov
ja
movd
out
mov
andl
push
or
std
enter
mov
push
dec
ret
cmp
jge
scas
addb
daa
lret
rolb
mov
cmp
mov
inc
int3
mov
xchg
pushf
cmp
mov
jp
pop
dec
lods
pusha
sub
inc
pop
fsubr
addb
xchg
fwait
xor
imul
xor
xlat
cmp
cmc
or
popa
push
test
das
jno
jle
scas
lock
adc
mov
mov
decb
pop
cwtl
and
adc
jmp
in
xor
loope
lret
inc
dec
call
cmpsb
fistpll
pushf
ss
iret
pop
fildl
cmp
xchg
inc
or
mov
ret
xchg
mov
or
push
insl
hlt
xchg
adc
icebp
cli
hlt
mov
mov
shlb
xor
add
mov
dec
in
jmp
test
les
sti
je
cltd
cmp
daa
stc
mov
cmpsl
shlb
add
sub
mov
mov
insl
nop
push
movsb
out
inc
cwtl
pop
shrl
push
jo
cli
sbb
enter
cmc
jae
add
adc
mov
pop
add
pop
test
scas
cmc
xor
cmc
add
mov
and
scas
push
push
in
dec
mov
shll
mov
pop
sbb
push
scas
test
sub
stc
pop
arpl
mov
pop
cmpsb
icebp
add
std
adc
in
xor
dec
cmp
sahf
daa
push
cli
dec
jae
jo
jle
lods
mov
in
ret
fwait
cmpsl
imul
enter
jnp
outsb
xchg
jnp
stc
pop
scas
pop
xchg
inc
sti
lods
sub
mov
rcl
jecxz
outsb
std
sub
js,pt
imul
mov
push
ret
hlt
adc
sbb
lds
push
push
pop
jo
fs
mov
out
popa
sbb
or
shrl
jno
jle
push
pop
ja
xchg
in
mov
arpl
mov
stos
call
ja
shr
sti
sbb
adc
push
fcoml
mov
cs
pop
jne
fwait
or
test
add
or
mov
sbb
dec
xchg
push
fucomp
adc
pusha
not
iret
les
scas
scas
in
cs
fwait
push
popf
pop
sbb
popa
inc
sub
dec
jb
adc
jp
jg
outsl
sbb
dec
pop
sub
data16
sarl
jmp
and
dec
sub
sbb
or
movsl
lds
dec
cltd
jbe
hlt
and
dec
cmp
inc
daa
mov
outsl
and
jge
lds
dec
jns
mov
and
pushf
inc
repnz
repz
fnsave
aad
pop
cmp
xor
fnstsw
sub
mov
and
cmp
add
mov
adc
or
popa
push
fdivrl
dec
inc
cmpsb
mov
pop
dec
xor
adcl
jp
insb
inc
sbb
lret
arpl
mov
pop
mov
jge
mov
daa
sbb
jecxz
pop
test
jge
dec
add
dec
lods
xchg
aad
cmc
lods
into
aas
xchg
mov
xchg
mov
adc
push
pop
bound
pop
cmpsb
mov
scas
adc
mov
and
insb
nop
add
push
cmc
sbb
sbb
dec
imul
add
cwtl
cmp
clc
repz
dec
jo
lcall
int
or
mov
pop
mov
rcl
dec
xchg
inc
repnz
test
jbe
lods
and
movsb
mov
dec
pop
xchg
repz
cwtl
push
lret
int3
pop
shl
fmull
mov
add
test
repnz
repz
pop
in
sbbb
int3
dec
push
cmp
xchg
xor
daa
mov
inc
rorl
push
dec
push
enter
nop
cli
les
cmp
sub
aam
or
in
sbb
adc
les
adc
int
sbb
shll
adc
call
inc
scas
cmp
jmp
sub
mov
gs
out
nop
adcl
dec
push
shll
mov
push
sub
jp
cltd
cmp
mov
xchg
push
fnstsw
push
jno
push
push
imul
je
pop
inc
repz
xchg
lcall
lret
shlb
sarl
fists
movsl
inc
cmp
out
jae
cltd
or
sub
adc
adc
ficoms
fnstenv
imul
imul
push
stc
rcll
cwtl
pop
addl
sbb
movsl
xchg
ret
mov
gs
xlat
add
mov
inc
daa
mov
inc
inc
cmp
jmp
add
pop
mov
imul
out
mov
leave
adc
shll
out
in
jg
push
aam
mov
test
scas
add
mov
or
ficoml
test
scas
stos
nop
jmp
mov
cmp
jge
dec
sub
mov
roll
sbb
mov
mov
jno
stc
into
sbb
push
sub
fs
adc
mov
lret
add
scas
je
scas
dec
pop
or
out
js
sbbb
outsb
gs
out
add
pushf
inc
stos
cmp
push
lret
dec
xchg
nop
xchg
int3
jns
test
push
mov
inc
cmpl
dec
mov
in
push
xor
loope
jb
mov
enter
icebp
es
mov
pushf
push
nop
sbb
fcoml
and
adc
add
test
lret
jo
test
imul
pop
add
or
loopne
arpl
or
outsb
xor
and
pop
inc
sbb
push
data16
cltd
jb
in
outsb
adc
or
or
inc
mov
mov
xchg
clc
dec
pop
and
mov
cltd
outsb
mov
jae
stos
pop
dec
add
cs
mov
jge
pusha
xchg
push
xchg
jae
pop
jae
mov
orl
jns
xor
je
insl
ja
jmp
jb
pop
cmp
add
fistpll
mov
xchg
sub
cmc
xor
movsl
dec
inc
sbb
roll
cmpsb
out
in
jecxz
mov
inc
xor
es
fs
or
out
out
cmp
mov
pop
xchg
mov
mov
pushl
jge
cmp
mov
add
repz
adc
sub
push
add
insl
pushf
sub
xchg
sti
shr
fimuls
rol
jo
xor
inc
repnz
jo
outsl
dec
and
cmp
or
sbb
push
into
call
fistps
rol
xchg
lret
decb
jns
sbb
movsl
add
mov
in
push
mov
movsb
xchg
mov
cmp
dec
xchg
xor
push
inc
jae
adc
xchg
mov
adc
xor
arpl
mov
sub
ja
mov
jmp
scas
cmpsl
lret
iret
clc
bswap
stos
hlt
scas
cwtl
inc
cmpsl
scas
xor
jns
push
cmp
test
dec
jnp
xor
push
je
test
inc
pop
cs
xchg
sub
jae
popa
filds
fidivrs
outsb
mov
xlat
stos
jne
or
sbb
xchg
loop
sub
sbb
in
gs
xchg
not
cmpsb
cmp
outsb
cmc
mov
push
xchg
jg
pop
clc
sarb
enter
xchg
icebp
fbld
outsl
add
and
imul
and
add
lea
and
int
aaa
les
inc
xor
or
push
inc
mov
les
mov
inc
daa
js
leave
push
pop
es
js
dec
and
sbb
ss
repz
xchg
pushl
and
cmp
inc
cltd
daa
mov
loopne
inc
add
xchg
arpl
dec
fwait
sahf
daa
cli
mov
jle
test
scas
mov
js
test
inc
cltd
sub
pop
push
or
popa
leave
cmp
sub
inc
cltd
push
mov
fsubs
xchg
pop
adc
mov
call
mov
sbb
push
cmpsl
pop
jns
mov
rcrb
lahf
pop
loop
jno
jo
xor
aaa
pop
push
ljmp
push
or
shl
ret
aad
adc
dec
pushf
dec
push
mul
pop
ss
fiaddl
mov
int
xchg
pop
pop
aaa
jecxz
test
shll
test
rol
xchg
sbb
cmpsb
lods
dec
xchg
jo
cltd
leave
mov
cmp
mov
sahf
pop
lea
loopne
bound
mov
mov
add
fisubrs
int
mov
mov
aas
pop
or
popf
push
stc
test
movsl
jns
mov
dec
lods
xor
xor
mov
sub
jae
adc
mov
or
jbe
push
lds
xor
mov
dec
out
push
movsb
jg
xchg
mov
adc
out
jo
aas
ja
lcall
inc
sbb
nop
rep
push
loop
data16
mov
ja
aaa
pop
es
jae
dec
repnz
lret
inc
xor
jns
lret
mov
push
and
dec
jne
push
xor
sbb
out
loop
inc
pop
scas
iret
cmpsl
insb
sbbb
in
pop
loope
jno
sbb
test
loope
repz
je
divl
or
rorb
sub
mov
or
push
pop
aad
inc
push
daa
sbb
or
dec
jno
icebp
push
pop
pop
stos
cmp
clc
sarb
test
push
xor
adc
and
adc
pop
stos
cmp
ljmp
pushf
inc
es
aas
js
or
jl
adc
mov
repnz
xor
xchg
cmp
dec
icebp
xchg
fs
push
dec
xchg
pusha
jne
add
ror
mov
ret
xchg
pop
iret
inc
mov
mov
cmp
lea
mov
aam
pusha
or
push
outsb
add
mov
and
push
sbb
xor
cltd
inc
test
mov
pushf
addb
addb
arpl
mov
adc
mov
int
inc
mov
mov
dec
inc
lcall
dec
gs
into
fs
js
aam
nop
xor
dec
iret
xchg
dec
stos
fldenv
pop
gs
mov
adc
mov
lahf
hlt
cmp
xchg
dec
jo
sbb
cs
cmp
xchg
pusha
cld
jne
push
scas
add
sub
dec
xchg
adc
roll
movsl
push
fildll
mov
or
pop
xor
fs
add
push
into
adc
mov
arpl
adc
ds
jo
cmp
mov
xor
mov
insl
or
dec
outsb
icebp
adc
jmp
jo
push
sub
fildll
cltd
inc
mov
in
and
adc
lahf
pop
rorl
sti
cmp
ja
std
int3
ficomps
les
push
jmp
inc
jmp
das
cmpsl
xchg
pop
enter
jne
fwait
decb
cltd
xchg
dec
leave
fwait
add
and
bound
fdivrp
or
mov
push
add
sub
dec
fnstsw
cmp
push
adc
cld
sbb
xor
in
std
lods
stos
jb
jae
inc
xor
test
ja
ljmp
shrl
scas
add
stc
push
fwait
outsb
pop
out
dec
xchg
ljmp
icebp
add
popf
add
add
decb
sbb
icebp
lds
or
lret
lea
lods
dec
mov
sub
xor
or
repnz
inc
pop
or
lods
ljmp
push
sbb
cs
je
into
mov
fsubrs
scas
and
jb
nop
and
inc
mov
pop
or
bound
in
scas
mov
ja
cli
test
jns
xchg
cltd
push
push
mov
xor
loop
and
loope
popa
jge
fstpt
aaa
lahf
push
jae
mov
divl
pop
sub
xchg
in
mov
and
inc
fisttpll
mov
or
mov
jbe
sub
jns
xchg
mov
lods
jmp
lmsw
add
sub
ret
jl
push
or
sub
mov
stos
add
adc
xchg
mov
js
call
es
cmp
jns
cmp
notl
cld
iret
mov
sbb
pop
pop
xchg
xchg
in
shrb
js
and
cs
xchg
outsl
lods
and
insl
fwait
sbbb
mov
push
lods
pop
fwait
pushf
jmp
push
xchg
insb
adc
adc
rcll
pop
mov
sub
and
loop
clc
cld
aas
scas
dec
test
or
pop
mov
pop
call
push
into
sub
xchg
xor
movb
lods
sub
mov
push
push
test
fcmovnb
dec
pop
xlat
sbb
lcall
imul
mov
mov
loope
pop
je
pop
lcall
or
jmp
jo
xor
sbb
fs
mov
jecxz
sbb
push
mov
test
mov
pop
jmp
mov
add
lods
jns
inc
adc
inc
mov
outsl
pop
mov
and
jge
in
ret
sub
movsb
adc
jg
inc
adc
test
dec
arpl
iret
les
mulb
scas
jmp
or
popf
fstps
lret
cmc
push
jnp
push
mov
fsts
inc
lahf
mov
xchg
scas
int3
xor
cmp
iret
pop
sbbb
adc
outsl
mov
addr16
out
test
pop
xor
push
das
xor
xchg
jl
pushf
xchg
xchg
xchg
sbb
xchg
xchg
push
adc
xchg
dec
cltd
aaa
outsl
rcr
jp
push
sub
sub
imul
pop
gs
repnz
mov
mov
or
loopne
push
int
bound
icebp
stc
dec
enter
add
bound
inc
das
mov
dec
negl
push
add
movsbl
dec
inc
loopne
out
xor
xchg
adc
xchg
jge
lret
mov
cmp
imul
xor
je
and
mov
pop
sub
jle
shll
mov
pop
xlat
ss
cmp
or
jecxz
gs
mov
xor
inc
xchg
cmp
and
jo
out
scas
stc
neg
lock
mov
fcompl
jmp
imul
or
popa
jge
xchg
adc
imul
adc
cld
add
add
lret
inc
daa
aam
dec
pop
fidivrs
repnz
xchg
sbb
out
dec
arpl
inc
add
lcall
push
adc
call
movsb
push
cwtl
rclb
push
imull
and
sub
xor
sbb
out
cwtl
out
dec
cmp
cmp
xchg
or
movsl
ret
out
out
mov
mov
cbtw
jmp
ds
add
dec
ljmp
lea
xchg
pop
pop
pop
mov
inc
rolb
cmpb
add
sub
sbb
es
cmpsl
sbbl
mov
mov
add
sti
xchg
call
stc
jg
dec
bound
cltd
push
push
sub
or
jno
push
cld
enter
mov
test
inc
push
and
cmp
out
and
and
mov
xor
and
sbb
xor
inc
call
sbb
add
mov
cwtl
out
or
sub
cmp
cmp
xlat
xor
enter
or
mov
dec
shll
test
cwtl
dec
fwait
cmp
inc
xchg
pop
cmpsb
pop
gs
jl
int3
ds
pop
rcl
dec
mov
lods
fsts
lea
sbb
pop
lock
clc
or
lock
loope
adc
ret
sbb
mov
pop
push
pushf
gs
cmp
adc
int
shlb
aad
mov
add
sbb
mov
mov
dec
sbb
fcompl
mov
out
addb
fmuls
sbb
sub
mov
add
and
pusha
sub
lods
push
xor
jp
or
cmovno
pop
lret
cltd
lcall
push
das
cmc
pop
outsb
jo
stc
mov
sub
cli
and
fdivrp
imul
in
vcvttsd2si
lods
xchg
fs
xchg
xor
cs
push
std
lret
sbb
xor
and
dec
cmpsb
test
iret
outsl
je
aam
data16
out
dec
fsubrp
leave
mov
addb
xchg
data16
fidivrl
mov
and
jmp
add
push
lods
push
lds
dec
mov
hlt
jmp
inc
mov
mov
and
leave
cli
inc
clc
inc
test
mov
outsl
je
in
scas
popa
dec
outsb
xor
cmp
xor
xchg
or
enter
push
cmp
cmp
or
ret
pop
in
jmp
mov
xchg
in
ja
push
das
je
mov
xchg
fwait
or
cmp
adc
cs
out
xor
inc
fxch
mov
mov
insb
inc
test
lahf
ss
or
out
mov
movsl
aad
cmp
popl
adc
jnp
inc
imul
inc
inc
xor
mov
shll
xor
lret
mulb
xor
ret
cmp
jnp
jae
mov
pushl
dec
xor
je
sbb
xor
mov
mov
fistps
das
xchg
and
sbb
xchg
jl
pop
add
out
jbe
jp
dec
or
pmaxub
pusha
push
pop
push
inc
add
dec
stos
dec
jle
jae
cwtl
pop
pop
mov
mov
jmp
pop
xor
lock
or
inc
das
and
xchg
repnz
pop
adc
xor
sbb
or
out
dec
bound
out
cld
cmp
sub
inc
test
das
pop
mov
inc
cmpsl
cmpsl
gs
aam
push
xchg
cmpl
lock
pushf
mov
xor
stos
lret
xchg
insl
inc
jg
test
nop
mov
jecxz
push
sbb
sbb
call
cmp
and
movsl
outsb
and
push
in
outsl
loopne
push
lods
std
cmpsb
jmp
pop
and
push
ljmp
adc
das
nop
orl
sbb
addl
mov
lea
leave
loop
mov
xchg
adc
push
inc
adc
sti
xor
out
xchg
hlt
dec
xchg
sbb
inc
add
inc
push
inc
inc
push
xor
in
mov
jp
arpl
fs
fimuls
mov
sarb
jne
test
insl
call
into
mov
imul
jmp
aad
mov
pop
jmp
xchg
adcb
jbe
popf
lods
sub
idivl
push
xchg
lret
inc
add
pop
test
jge
fdivl
xor
js
mov
outsl
dec
les
xchg
lcall
in
jo
or
adcb
inc
push
test
mov
and
subl
inc
push
pop
cmc
sub
sub
xchg
jp
shrl
ret
and
pop
push
shll
dec
jl
mov
cmp
dec
ss
dec
mov
fisubrs
cmpb
outsb
jbe
sbb
mov
aaa
xchg
dec
jae
pushl
pop
sbb
das
std
mov
mov
pop
push
add
lock
imul
les
xor
dec
jmp
push
and
lea
mov
jns
dec
std
ficoms
lea
dec
xor
out
xor
ds
mov
into
fistl
aas
pop
dec
sahf
call
pop
cs
lahf
or
packsswb
mov
push
shlb
es
xchg
pop
aas
mov
or
aaa
and
cmp
mov
mov
shrl
cwtl
test
pop
ret
jo
sub
pop
into
ljmp
fistl
xchg
mov
pushf
fldcw
fistps
mov
icebp
pop
lds
jmp
push
mov
cld
add
data16
pop
incb
inc
adc
loop
xor
sbb
out
xchg
adc
jb
in
and
repnz
fildl
popf
xchg
mov
popf
stos
les
mov
lahf
lea
mov
addb
fwait
xchg
js
ret
xor
popa
and
out
scas
push
xor
ror
loope
dec
lock
mov
xchg
cmp
inc
loope
into
pop
movsb
shll
cs
dec
xchg
test
repz
cli
xchg
pop
iret
or
push
sbb
enter
pop
mov
jl
mov
mov
sub
sbb
push
xor
fwait
cld
popa
pushf
test
fwait
insl
pop
stc
addr16
stos
cli
and
out
stos
aam
orb
sahf
int
out
pop
dec
adc
pushf
mov
fildl
jns
mov
lods
fsubr
and
dec
adc
pop
mov
pusha
lahf
xor
lock
ss
gs
pop
xchg
std
dec
pop
insl
xor
cmc
xor
test
push
pop
fldl
ds
sbb
data16
aad
out
in
add
adc
lock
or
push
add
loope
cmpsl
aaa
popf
lret
ljmp
mov
push
ret
repnz
fcompl
sarl
test
shlb
test
mov
mov
shll
lcall
xchg
fs
or
and
inc
jecxz
push
les
pop
mov
xchg
movsb
push
jne
mov
cmpxchg
jb
test
push
jl
mov
xor
push
sub
sub
sub
fisubrs
inc
lahf
cmp
push
sbb
fnsave
cltd
pop
sbb
test
xor
mov
mov
in
push
fptan
fistps
and
cld
push
or
cltd
and
sar
fcoml
sub
mov
pop
pop
inc
pusha
push
into
ds
pop
sbb
stos
repz
dec
scas
mov
push
add
sbb
adc
add
test
mov
out
jp
test
adc
pushf
cwtl
cmp
inc
xchg
in
inc
decl
cmp
push
divl
mov
mov
mov
jae
sub
xchg
ljmp
in
pop
pop
mov
adc
or
pop
notl
jne
lret
out
adcw
es
lods
mov
push
jbe
js
daa
daa
loopne
dec
mov
mov
adc
dec
int
pop
dec
cmpb
imul
or
and
dec
jae
mov
sub
xchg
nop
jo
rcll
pop
mov
mov
fs
enter
dec
cld
push
rolb
cmp
iret
in
mov
aaa
mov
mull
push
push
xor
adc
repz
xlat
sbb
scas
lods
mov
gs
add
mov
jnp
nop
sub
dec
push
ljmp
and
fwait
pop
jb
xchg
rcr
or
push
jmp
pop
jno
or
inc
and
mov
imul
xlat
jne
mov
std
mov
out
leave
ds
mov
decl
into
pushf
jecxz
adc
stc
mov
sub
pop
mov
mov
pop
fldt
aaa
push
adc
fdivr
add
test
in
cltd
std
sub
xor
popf
mov
ror
and
data16
enter
loopne
shl
ja
data16
mov
add
mov
loope
or
mov
jl
mov
and
jbe
call
sub
test
shrl
dec
loopne
mov
stos
pop
adc
jno
jmp
push
in
pop
fnstenv
adc
std
mov
sbb
ss
jle
dec
les
insl
jecxz
xor
in
push
adc
lcall
les
aas
scas
push
out
out
icebp
stc
jno
cmp
xor
push
test
sub
std
mov
popa
pop
xchg
sub
loop
push
lods
mov
movsb
push
push
loope
pop
loop
mov
repnz
mov
mov
call
leave
jne
sbb
xchg
movsl
outsb
ja
loop
add
mov
mov
fucomip
sbb
loopne
xor
int
jns
xor
sbb
bound
mov
or
aam
out
data16
mov
dec
mov
rclb
and
addb
popf
dec
push
ret
mov
and
jl
add
in
inc
xchg
in
jb
xor
jae
push
and
jecxz
mov
inc
and
les
xchg
pop
imul
cmp
jo
stos
push
jecxz
push
mov
pop
push
cmp
scas
jecxz
jmp
lret
cmp
push
pmaddwd
add
xchg
stos
test
push
adc
in
notl
aad
je
std
pusha
scas
jp
or
cld
push
add
ss
mov
test
push
mov
mov
jno
lods
dec
jl
stc
outsb
aas
arpl
mov
outsb
test
icebp
jmp
xchg
in
ja
jecxz
xor
pop
sbb
mov
aaa
pop
dec
mov
jae
fcoms
data16
mov
int3
in
mov
sbbl
shll
enter
out
scas
cmpsl
andl
cmp
addr16
jge
popa
addr16
sub
dec
daa
adc
or
add
sbb
cs
lea
xchg
aaa
int
adc
ds
jge
jo
icebp
out
mov
adc
nop
aas
adc
iret
xor
add
cwtl
iret
int
sbb
scas
mov
movsl
sbbl
hlt
call
lahf
mov
push
lcall
mov
das
scas
dec
push
push
insb
mov
add
adc
sarl
xchg
dec
ja
subl
jne
or
sbb
mov
iret
inc
in
push
push
xchg
out
jbe
xlat
and
mov
jmp
inc
adc
ljmp
test
scas
cmp
xor
fxch
in
jbe
adc
imul
mov
adc
mov
lret
les
fnstsw
and
dec
int3
testb
jge
jecxz
cltd
mov
and
mov
xor
dec
lahf
or
lock
pop
dec
or
pop
adc
add
jae
push
mov
arpl
mov
fcmovnu
inc
pop
and
ror
cmc
rcrl
leave
mov
dec
inc
test
push
sti
in
lds
jo
dec
aad
je
dec
test
test
mov
int
jmp
xchg
cmp
push
cmp
js
mov
push
jge
xor
mov
mov
push
pop
out
ja
sub
scas
push
fwait
lds
inc
insl
es
pushf
out
add
push
cld
shrb
jecxz
andb
push
fwait
and
or
xchg
repnz
ret
cmp
cld
sub
inc
loop
cli
popf
outsl
xor
scas
and
mov
or
ret
sub
jp
ljmp
jle
test
hlt
out
outsb
xchg
or
mov
lock
jne
mov
mov
fs
in
xchg
cmpl
lds
insb
push
cmp
js
fmull
int3
scas
inc
enter
jb
cli
jbe
push
outsb
hlt
in
xor
loope
aas
mov
sbb
in
xorb
shr
mov
rcrl
ja
cmp
ss
gs
cli
fcos
sub
aaa
cmp
scas
mov
cmp
lods
or
cmp
int3
data16
stos
lods
test
sub
xor
cs
sub
inc
out
ljmp
pusha
push
pop
int3
ret
leave
rorb
scas
push
push
negb
jns,pn
sub
pop
jb
data16
mov
dec
or
loope
aad
stos
lock
jno
gs
in
or
xchg
movsb
jno
pop
sbb
cwtl
aaa
lods
and
cld
dec
out
sarb
fsub
xchg
jge
jp
sti
lret
mov
in
xchg
mov
sahf
jge
jmp
negl
sub
push
scas
test
cmpsb
xchg
es
leave
cmpsb
xor
add
xchg
je
addr16
push
sbb
ja
hlt
cs
pop
dec
and
dec
xor
jl
test
shlb
xchg
addr16
loopne
jp
push
ljmp
int3
cltd
sub
push
aad
and
dec
mov
xchg
pusha
insb
mov
in
jne
pop
mov
push
xlat
mov
fsubrl
push
loopne
mov
popa
or
fimull
or
shlb
loope
push
dec
mov
rcll
inc
and
rclb
mov
shl
int3
outsb
jb
ret
das
pop
lds
mov
cld
sub
leave
scas
and
and
movsb
psubw
aam
jo
in
arpl
inc
popa
adc
lcall
out
hlt
mov
push
out
xchg
push
scas
sbb
mov
imul
add
dec
or
leave
inc
cld
sbb
sub
xor
shll
cmp
cmp
in
add
sbb
testb
test
das
mov
fwait
gs
sti
jbe
add
gs
data16
test
xchg
pop
ficompl
adc
jle
cmpsb
cmp
fsubp
gs
adc
loop
push
shrl
dec
inc
stc
test
or
adc
arpl
mov
std
loop
push
bound
or
in
sbb
repz
sub
add
iret
lret
adc
ret
cmp
sbb
mov
jbe
mov
adc
mov
sub
and
mov
sub
movsl
sbb
cld
mull
scas
sbb
stos
jle
je
in
mul
test
arpl
xchg
cmp
pushf
sti
cmpsb
lret
mov
ds
mov
scas
or
outsl
inc
mov
and
push
push
insl
fsubr
lcall
adc
lret
cmp
lcall
sbb
ret
lock
int3
sub
mov
pop
movsl
pop
cmp
shrl
cmpsb
imul
pop
push
es
mov
repz
add
cwtl
cmp
jae
mov
jb
test
xor
and
fwait
and
out
mov
iret
pop
gs
push
and
stc
ljmp
xor
aas
jne
adc
int
lret
mov
leave
fistps
mov
sub
sub
stos
mov
xchg
cld
lock
and
mov
xchg
sub
shr
outsl
push
inc
xchg
out
jmp
add
popf
aas
sub
ret
insl
cmp
outsb
pop
jecxz
aaa
xchg
pop
mov
scas
mov
repnz
xchg
and
and
jmp
pusha
and
fstpt
mov
andb
sub
cmpsl
mov
stos
mov
pop
lret
jo
push
nop
pop
movsl
mov
mov
mov
and
cmp
push
sbb
fdivrs
pop
cmp
shl
mov
mov
mov
mov
into
dec
cli
mov
push
push
and
and
repz
mov
xor
negl
hlt
testl
pop
mov
and
cli
leave
cmp
sbb
mov
mov
repnz
stc
hlt
mov
dec
jp
mov
xchg
fwait
lea
lahf
roll
inc
push
imull
std
lcall
pop
sub
loop
repz
je
dec
lea
cs
xchg
xchg
aaa
cmpsl
inc
mul
mov
dec
loopne
xor
adc
xor
xor
push
jp
mov
movsb
test
sbb
inc
push
cmpsl
add
xchg
sub
sti
jmp
fisubl
popa
cmp
sarb
mov
cmp
repz
sub
xlat
pop
icebp
arpl
jmp
adc
iret
or
test
add
test
stos
mov
cmp
cmp
arpl
dec
push
lds
lea
and
xchg
int3
in
jl
jle
in
add
pop
pop
xor
push
sbb
dec
idivb
mov
lahf
andb
lret
aad
xor
mov
adc
les
int
jns
cmc
adc
pop
popl
mov
mov
xor
daa
scas
lock
pushf
cmp
inc
test
push
leave
shll
jp
jo
aaa
rcrb
add
call
and
push
mov
pop
fisubl
adc
cmp
mov
test
negl
pop
lock
dec
xchg
pop
sar
into
aad
or
std
frstor
fiadds
mov
arpl
cwtl
inc
or
andb
mov
les
add
imul
xor
mov
add
jae
add
xchg
jmp
and
cmp
mul
sub
lock
lds
and
mov
fsub
mov
pushw
scas
cmc
cmp
mov
gs
in
add
xchg
das
insb
xor
jb
mov
ss
sub
leave
sbb
jge
inc
fmul
mov
push
pop
test
mov
insl
pop
icebp
js
push
mov
cmpsl
ljmp
sub
sub
hlt
fisubrl
icebp
xchg
push
push
xor
addl
mov
ret
lcall
pop
mov
movsl
ret
incb
dec
push
mov
jge
add
push
inc
pusha
movsl
xchg
cmpb
mov
ss
add
cmp
cld
jge
test
pop
add
pop
mov
subl
std
adc
out
push
or
push
shll
sar
dec
jo
add
push
push
mov
mov
xor
mov
sbb
or
fistpll
imul
mov
ret
xchg
fnstcw
mov
adc
divl
or
mov
leave
mov
scas
pusha
cmp
jg
jmp
cmp
rorl
adc
jns
cltd
xor
jle
and
add
lods
jno
add
or
adc
sbb
mov
mov
mov
xchg
sbb
jmp
cmp
repnz
xchg
leave
adc
insb
aam
aaa
imul
insl
dec
adcl
and
xchg
lods
mov
cltd
rcr
mov
insb
inc
clc
pushf
pop
sub
ficomps
fmulp
in
or
xor
xchg
sarb
loopne
push
test
xor
sub
adc
push
mov
das
lea
lea
outsb
out
daa
cmpsb
fwait
lods
cmp
jp
arpl
stc
adcl
fldt
mov
push
imul
repnz
dec
faddl
sarl
sti
push
xor
pop
jmp
daa
inc
or
subb
leave
into
adc
call
sbb
cltd
push
and
fs
fstps
push
cmpsl
or
pop
and
sbb
andl
adc
inc
push
lcall
or
out
mov
jns
cmpl
loopne
test
xchg
pop
jle
bound
cmp
call
mov
fidivrl
lds
aaa
cmpsb
mov
shr
push
mov
sbb
pop
mov
fs
cli
out
orb
iret
out
mov
push
sub
sub
inc
mov
pop
and
pop
rsqrtps
dec
dec
jo
test
sbb
pop
pushf
push
adc
mov
or
mov
ret
xchg
add
imul
repnz
daa
leave
daa
or
ja
fsubrl
call
lret
mov
rcll
mov
sbb
test
cli
es
nop
pushf
mov
iret
jnp
or
mov
in
inc
inc
les
daa
xchg
aam
sbb
movsb
sub
scas
fiadds
jnp
bound
ror
stos
ds
sbb
cwtl
and
mov
int
cmp
subl
aam
sarl
pop
push
jae
pushf
inc
test
stos
test
adc
fs
decl
imul
js
test
or
stos
mov
jmp
lret
mov
xchg
js
aam
test
jge
dec
leave
mov
rorb
pop
lret
inc
cmp
fimuls
fnstcw
sub
cmc
test
rcll
movsl
pusha
inc
rcrl
ljmp
sub
pushf
xor
out
sahf
add
outsl
out
adc
pop
mov
outsb
ficoml
xchg
scas
call
jle
pop
scas
outsb
popl
subl
out
adc
add
andl
dec
and
xor
jno
xor
mov
movsb
xorl
test
xlat
movsb
dec
add
inc
dec
jecxz
sbb
xor
shlb
aad
repz
repnz
scas
fcmovnu
mov
xor
sub
repnz
push
jbe
inc
leave
dec
in
cmpl
push
and
negb
xor
iret
cli
jmp
sub
and
test
lods
or
test
mov
clc
out
push
shl
test
sub
add
repz
mov
inc
sub
leave
and
cmpsl
insl
addb
cld
push
xchg
add
push
es
sub
imul
imul
es
mov
arpl
add
adc
cwtl
adc
push
pop
sbb
add
shl
stc
es
mov
iret
pop
icebp
jle
loopne
and
orl
jge
pusha
add
add
repnz
mov
and
inc
pop
or
dec
add
dec
push
stos
push
mov
sbb
adc
shl
out
pop
bound
cmc
lds
mov
lcall
jo
outsb
insb
pop
sub
push
das
sbb
aam
leave
jnp
inc
cld
mov
inc
pop
gs
out
push
stos
lds
out
or
push
sbb
push
push
iret
shll
scas
and
push
shl
lahf
pop
les
inc
jl
adc
popa
in
sub
stc
lret
sub
inc
pop
mov
stos
mov
xchg
jno
push
popf
mov
ja
sarl
or
fisubs
sbb
cmp
push
jmp
movsb
loop
xchg
fdivrs
cmc
out
mov
mov
jns
jnp
vunpcklpd
fsub
test
movsb
cld
push
sbb
dec
and
sub
jnp
mov
dec
int3
shrb
into
jmp
sbb
lock
mov
out
cmc
cmp
sub
dec
mov
incl
push
fimull
cmpsb
jae
fldl
outsl
mov
mov
dec
arpl
addr16
inc
cmp
int
in
inc
mov
adc
sbb
fdivs
shr
negb
pop
sbb
xchg
jmp
cmp
xor
cli
jns
sub
sbbb
adc
mov
leave
enter
dec
mov
dec
addr16
mov
adc
negl
inc
sbb
add
or
jns
fwait
lcall
scas
cs
shrl
cmc
push
xchg
sti
inc
rcr
xchg
xor
add
xor
les
lret
inc
xor
push
push
es
jecxz
insb
pushf
push
inc
lock
loope
in
jp
and
sbb
js
js
adc
jo
xor
popa
sub
fidivl
lahf
enter
or
xchg
icebp
call
leave
mov
cld
fwait
enter
popf
mov
inc
sub
into
ds
or
pop
test
or
cmp
xchg
outsb
sti
mov
cmpsl
push
sbb
adc
push
mov
out
dec
xchg
dec
pusha
scas
int3
mov
mov
jp
outsb
pop
cmpl
clc
adc
jb
jmp
gs
aam
test
lea
push
and
aad
cmp
push
pop
mov
out
and
pop
test
pushf
sbb
psubusb
cmpsl
pop
dec
dec
sub
lret
mov
or
shl
jle
loope
mov
or
arpl
push
es
fldcw
and
cmpsl
dec
jmp
or
out
hlt
repnz
repnz
negb
pop
loop
push
mov
bound
shl
inc
sub
sub
xchg
bound
mov
std
mov
jecxz
adc
call
mov
loope
ljmp
adc
imul
loopne
jae
inc
aaa
push
shld
jns
cwtl
adc
jp
aas
pop
or
mov
jg
sbb
inc
jle
and
lea
adc
lret
dec
notb
cmp
cmpsb
jp
or
xchg
loopne
les
push
bound
pushf
add
sub
test
or
cmp
mov
imul
das
xchg
jge
pop
jp
gs
in
outsl
sbb
vphaddubq
aam
sub
lret
imul
and
ret
sbb
xor
and
mov
jge
test
insb
xchg
lods
ja
cwtl
sbb
and
jb
in
adc
aaa
xchg
mov
add
iret
or
mov
dec
leave
out
dec
sahf
sub
push
and
mov
xchg
add
jno
add
int
inc
mov
jmp
mov
xchg
aad
push
mov
out
xorl
cmp
jne
and
pop
imul
mov
lds
add
dec
stc
mov
icebp
push
sub
jo
jp
call
mov
pop
xchg
xor
cltd
loopne
std
in
cmpsl
xchg
sub
inc
dec
test
cmpsl
lret
mov
xchg
cmp
jno
fistpl
imul
icebp
imul
hlt
sbb
mov
sti
mov
inc
int
pop
lret
imul
xchg
dec
loope
mov
xchg
jb
pop
pushf
imul
xor
ljmp
pop
jle
leave
test
inc
jl
or
cmpsl
adc
sub
xlat
cltd
mov
cli
xor
cmpsb
cmp
jmp
sbbl
andl
rcll
hlt
inc
cltd
sbbb
addr16
mov
or
sbb
inc
scas
aas
inc
mov
inc
mov
push
flds
ss
in
xor
mov
das
popa
jp
je
aad
insb
sbb
cmc
adc
and
jl
aaa
sbb
xchg
lret
lret
push
out
lret
mov
fbstp
out
aad
pop
testl
mov
xor
fs
and
mov
in
add
loope
mov
insb
xchg
sarl
lretw
shll
fwait
out
cmp
jae
popf
sbb
xlat
add
inc
js
ljmp
adc
dec
or
fmull
push
add
lock
pop
ja
hlt
out
test
push
movl
repnz
xor
inc
jp
ja
test
mov
or
mov
test
inc
fildl
mov
mov
stc
mov
adc
stos
xchg
mov
adcb
lea
mov
sub
pop
mov
test
insl
inc
sub
inc
add
mov
mov
add
dec
out
or
insl
loope
jae
xor
pop
mov
fsubr
paddusb
int3
jecxz
add
or
mov
inc
push
imul
add
out
fsubl
push
xchg
loope
push
out
sbb
mov
out
std
jmp
fidivs
sub
jg
add
xor
out
jecxz
cmpsl
xchg
jecxz
xchg
inc
jl
pop
dec
lret
iret
cmp
loopne
enter
pushl
push
push
push
adc
and
or
mov
mov
and
sbb
jmp
cwtl
sub
xchg
jp
inc
pusha
add
loopne
test
or
movsl
mov
sub
dec
cltd
loop
fwait
mov
mov
nop
jne
xchg
rcrb
ja
lock
inc
ret
subb
pusha
cld
fiaddl
xor
sbb
jmp
add
enter
les
jo
pop
sbb
mov
dec
dec
add
push
sub
clc
xchg
sbb
xchg
sub
fcmovu
test
inc
or
sub
cmp
lods
inc
jle
cmp
mov
jns
sahf
mov
xor
push
rcll
mov
sub
mov
pop
dec
xor
sbb
in
scas
out
lret
inc
mov
inc
dec
fwait
mov
pop
and
fidivrs
js
out
icebp
jp
inc
or
ret
pop
or
imulb
dec
fnstenv
sbb
xchg
in
pop
sbb
mov
jge
data16
js
or
fisttpl
clc
mov
ja
mov
mov
andb
lret
jecxz
add
mov
xor
sub
loopne
sub
mov
faddl
fisubs
ljmp
daa
jb
cmpsb
scas
test
lods
inc
mov
pop
pop
jo
mov
push
out
sub
add
cmp
mov
push
icebp
mov
or
mov
enter
xchg
cld
ja
mov
std
sti
xchg
adc
mov
inc
in
inc
stos
and
xor
pop
cmpsb
in
xor
movsl
testl
jg
fisubs
in
rorl
and
xor
sahf
adc
jge
and
push
out
mov
movsb
popf
or
or
jle
mov
push
leave
sbb
cmc
mov
jg
pusha
and
or
jmp
mov
out
mov
sar
repz
ret
sub
out
mov
xor
push
mov
xlat
jno
pusha
push
dec
add
pop
nop
push
cmp
mov
lahf
jl
inc
inc
inc
or
fsub
adc
mov
aas
adc
sub
cmp
mov
sbb
aad
xor
mov
cmpsb
jnp
sub
fadd
stos
out
and
addl
mov
mov
inc
mov
clc
aas
xor
push
stc
sbb
dec
jecxz
or
add
jb
int
negb
out
decl
bound
dec
cmpsb
mov
insb
or
mov
std
in
jmp
jbe
aad
das
sub
cld
lret
dec
inc
adc
je
daa
shlb
cs
clc
or
shr
mov
jmp
mov
pop
fs
daa
call
mov
iret
adc
and
rclb
cmpsb
cwtl
jbe
out
and
or
jnp
mov
adc
inc
dec
pusha
hlt
sub
imul
shlb
pop
adc
push
jle
push
aad
stos
mov
jl
cwtl
addl
jp
fidivrl
xchg
pop
xchg
sub
xor
daa
mov
and
push
mov
call
adc
ja
or
loop
cld
arpl
addr16
mov
cmpsb
and
stc
xchg
cmpsb
mov
ljmp
xor
jp
sbb
call
rorb
cmp
iret
pop
scas
aad
push
jno
xor
aas
sahf
les
push
or
outsb
cmc
or
cmc
aas
lods
xor
inc
sarl
dec
or
fnstenv
fscale
cmp
stos
sbb
sahf
das
shlb
mov
shrl
test
or
lret
scas
leave
push
mov
jecxz
push
push
lcall
mov
dec
daa
add
fwait
cld
out
rorb
and
adc
outsl
and
fst
or
sub
dec
nop
or
sub
das
pop
cmp
sub
cs
dec
scas
repz
push
push
movsb
mov
or
cmp
jl
iret
scas
movb
or
fistpl
in
sub
icebp
inc
ja
sub
cmpsb
loop
enter
shrb
mov
out
data16
jecxz
cld
lea
add
sbb
jns
mov
pop
outsb
inc
dec
jl
sarl
mov
roll
test
and
ds
cmp
mov
cmpsl
shrl
push
add
fmuls
movsl
sbb
in
inc
addl
cmp
fsubr
loope
cmp
cld
xchg
fdivs
lahf
xchg
cs
mov
pop
shl
pop
leave
mov
cs
lret
in
dec
adc
in
mov
fbstp
inc
out
add
cld
fistps
in
shll
andb
insb
daa
xchg
pusha
sbb
lock
pushf
and
repnz
lahf
or
and
cmc
in
push
mov
adc
dec
fnstsw
cmp
mov
das
aad
mov
fidivrl
cltd
jl
and
xchg
cli
mov
loopne
push
sbb
push
push
sub
pop
call
lock
pop
sbb
push
xor
pop
daa
xor
mov
pop
fstl
jecxz
pushf
xor
test
in
rorl
addl
jbe
scas
arpl
inc
jp
mov
inc
xchg
ret
xchg
loope
lahf
scas
int
push
paddd
add
int3
jns
aaa
xchg
test
add
jns
pop
adcb
ja
sbb
dec
mov
lds
shrb
xchg
cmp
push
fwait
imul
or
pop
repnz
insl
fwait
dec
add
jne
loope
xchg
cmp
sahf
jecxz
push
in
push
jns
lahf
adc
add
addr16
xchg
push
iret
mov
or
out
lea
iret
insl
loopne
bound
mov
aam
mov
cmpsl
imul
movsb
mov
mov
andb
in
adc
lret
lods
shl
aam
cmp
cmp
dec
sub
ret
mov
aas
js
fsubrs
mov
cmp
ret
add
lahf
scas
ret
cmp
push
out
jbe
leave
lock
jnp
push
daa
dec
imul
sub
outsb
das
dec
mov
xchg
mov
cmpsb
aam
inc
cli
rcll
lds
push
jmp
add
call
rorb
shr
mov
mov
push
mov
mov
shlb
jo
cltd
add
jmp
push
pop
test
insl
jp
cmp
test
inc
leave
mov
push
jae
ja
xchg
movsl
pop
pop
lret
ss
inc
int3
cmpb
lret
lahf
mov
add
stos
push
arpl
mov
or
ret
jg
cld
insl
jg
or
shlb
ljmp
addl
cmpsb
jle
test
mov
cli
pop
mov
rorb
dec
xchg
movsl
or
and
notl
add
mov
test
lret
xchg
loopne
nop
adc
movsl
mov
rorl
jne
xor
jmp
sbbl
ds
mov
adc
lods
es
scas
int
pop
lahf
pop
xchg
jle
adc
mov
rclb
addl
cmpsb
data16
leave
cmp
cltd
out
cmp
enter
mov
lods
movsb
cltd
xchg
or
jg
fmuls
sbb
rclb
scas
es
dec
xchg
jns
popa
fldenv
inc
mov
mov
pushf
mov
pop
test
enter
mov
cmp
mov
pop
xlat
cld
dec
jns
push
fisubs
int3
jo
andl
xchg
addr16
test
pop
mull
iret
pop
insb
push
lret
sub
xchg
mov
lods
mov
mov
push
dec
jae
ret
les
add
test
xchg
inc
mov
pop
inc
or
mov
repz
push
sbb
test
ss
cltd
mov
inc
add
push
mov
jns
jmp
in
inc
gs
aas
filds
testl
repz
int3
mov
pop
mov
mov
out
das
xchg
lret
rcr
out
lock
mov
adc
mov
iret
add
mov
jge
std
scas
aas
cmp
jo
pop
mov
adc
add
out
ret
loope
aaa
push
push
rorl
xor
or
clc
xchg
leave
shl
outsl
adcb
push
mov
xchg
es
sub
mov
fs
adc
push
mov
push
cltd
imulb
shrb
and
xchg
pushf
xchg
cmc
orb
mov
cmpsl
mov
andb
pusha
lcall
std
pop
xchg
nop
sti
jmp
push
mov
movsb
nop
ja
pop
out
mov
in
jae
stos
fiadds
cmpsb
sub
pop
stos
cmpsb
rol
sbb
aaa
jne
or
pop
or
aas
mov
fnstcw
xor
adc
jns
sbb
test
cwtl
daa
add
neg
push
dec
pop
jno
push
push
ret
mov
push
ja
dec
enter
push
push
iret
or
test
push
movsl
aam
pop
insb
xor
mov
fnsetpm(287
cmp
dec
es
outsl
filds
fistpll
data16
bound
outsl
pop
movsb
repnz
popf
ds
ja
xchg
pop
jge
arpl
ret
xor
das
mov
xor
add
or
xchg
adc
mov
sub
repnz
dec
jo
ret
jecxz
icebp
mov
mov
aas
xor
pop
ja
js
or
lods
xor
push
push
fwait
dec
or
out
add
dec
xor
imul
xchg
or
cmpb
subb
and
lods
or
or
popf
mov
pop
leave
pop
jg
lods
push
addr16
repz
push
xchg
cmp
loop
pop
mov
rcll
lea
lcall
shll
mov
push
xor
enter
stos
cmp
jne
rcll
popa
clc
and
ljmp
xor
dec
and
lds
xor
int3
mov
fsubl
adc
repz
xchg
outsb
or
or
in
ret
add
int3
popf
outsl
dec
ljmp
push
fisubrl
pop
cmp
jge
nop
push
clc
pop
movsl
mov
out
sub
in
test
jmp
je
pop
insb
in
xor
xchg
push
std
outsl
in
push
lods
push
push
gs
fcompl
sub
inc
xchg
je
pop
imul
push
or
fmull
xor
xor
pushf
or
mov
pop
inc
movsl
fidivrl
insl
mov
mov
call
adc
lods
push
mov
xchg
pop
loope
clc
test
adc
xchg
dec
sbb
ret
mov
cmp
test
mov
mov
xor
push
xchg
imul
js
cli
aam
push
fwait
das
jge
inc
jae
adc
in
pop
out
lods
inc
out
push
xor
lret
int
ljmp
data16
into
jne
frstor
lret
in
inc
cmp
jp
fists
push
cmc
cld
out
dec
xorl
push
shl
in
sbb
pop
push
mov
sbb
push
add
sarl
mov
mov
les
or
add
mov
outsl
xor
lret
ret
push
fst
cld
mov
test
sub
dec
ror
push
daa
repnz
dec
lock
xchg
cmp
divb
je
imul
daa
je
pop
mov
shll
dec
lret
cld
add
popf
pop
cmc
flds
xor
fstpt
dec
out
dec
das
sti
sub
xchg
sbb
adc
and
fnstcw
push
push
ret
test
pop
cmpsl
dec
jmp
filds
rcr
cmpsl
ret
ljmp
xchg
out
push
std
adc
inc
in
jae
xchg
call
cmp
and
or
sbb
mov
fsub
idiv
xchg
cmc
or
test
bound
scas
lods
push
jns
push
inc
sbb
iret
push
mov
mov
xorl
fsubs
jle
xchg
movsl
hlt
pop
inc
xor
add
xchg
inc
jg
lds
test
mov
bound
and
int
mov
pop
mov
xchg
ficoms
inc
cmp
mov
sarb
jo
mov
stos
cmp
pop
data16
dec
scas
jb
dec
int
add
repnz
jl
lret
inc
or
pop
mov
enter
ljmp
adc
add
add
adc
xchg
mov
mov
add
dec
mov
jmp
test
mov
jne
movsb
stos
dec
mov
andb
pop
rol
test
ljmp
ja
push
mov
jae
inc
and
mov
std
shll
les
icebp
push
aad
xor
pop
xor
adc
push
in
addr16
movsl
sti
fisttpll
xchg
sub
dec
adc
cwtl
je
mov
into
cld
outsb
mov
jne
jnp
nop
mov
sarl
sbb
inc
sahf
loopne
mov
dec
xor
je
jno
jecxz
outsb
xor
jmp
pop
cmpl
mov
mov
pop
mov
mov
out
ficomps
cli
sub
cmp
adc
mov
mov
xor
or
cltd
mov
cwtl
add
bound
lods
add
int3
dec
lahf
push
sbb
xor
and
aam
sub
or
in
enter
pop
dec
je
adc
xor
int
or
push
adc
mov
or
mov
into
das
sub
loop
scas
or
cmpsl
loopne
jg
jnp
xchg
mov
gs
inc
dec
imul
pop
je
mov
pop
xor
sub
mov
xchg
cmpb
hlt
dec
imul
mov
ret
or
out
ja
lods
test
fcomi
pop
outsl
dec
xchg
in
out
shrl
sub
lock
notl
sub
ret
roll
pop
ret
pushf
push
popa
mov
push
int
xor
sti
daa
pop
or
jg
dec
arpl
pop
cmpb
pop
loop
es
out
stc
dec
pop
les
arpl
lret
sub
xchg
sub
out
jae
mov
int3
mov
lods
lcall
mov
shr
jo
cli
popw
in
clc
mov
mov
cmp
jne
xor
inc
lret
in
cmpsb
test
test
lret
les
in
into
nop
repz
xlat
imul
xor
jg
jp
rcrl
sub
mov
fbstp
jbe
xchg
pop
cmp
daa
push
adc
xchg
sub
inc
jae
lcall
loop
cmpl
les
leave
jb
fdivs
js
mov
xchg
stos
fwait
lret
xchg
or
cmp
add
xchg
fcoml
hlt
or
ret
xor
add
inc
pop
sbb
lea
xchg
sahf
pop
mov
popa
pop
je
sahf
push
ds
in
and
jmp
mov
xchg
sti
cmp
into
pop
push
cmp
lret
pop
mov
lret
notb
aad
mov
lret
xor
pop
lret
pop
pop
fwait
jmp
push
sub
pop
and
or
popf
sub
cwtl
mov
xor
lea
dec
xchg
mov
mov
mov
lcall
inc
jns
mov
or
push
push
call
xor
aaa
mov
adc
add
jmp
lods
shrb
mov
int
mov
and
ljmp
and
sbb
fildll
xchg
jbe
cwtl
and
orl
dec
cmc
cmpsl
out
out
pop
push
push
xchg
or
inc
aad
xlat
xlat
test
movl
xor
lahf
fwait
ljmp
sti
movsl
cmpb
jecxz
add
popa
cltd
push
sbb
mov
icebp
jge
mov
mov
add
repz
mov
xchg
pop
add
or
mov
adc
idivb
pop
ret
adc
push
js
jo
push
mov
addr16
sub
in
dec
or
inc
cmp
jae
cmp
add
and
loopne
push
shlb
ljmp
mov
xchg
test
iret
pop
fisubrs
mov
std
pop
je
sbb
cmp
ds
into
mov
das
pop
fcmovu
out
adc
xchg
jae
rcll
shlb
pop
jmp
jne
xor
and
data16
and
inc
add
mov
jmp
xchg
pop
xchg
mov
std
aam
imul
lods
iret
mov
dec
insl
insl
ret
jmp
push
notl
enter
ss
bound
xchg
jle
push
inc
push
pop
push
aas
adc
inc
mov
enter
in
outsb
adc
gs
fmull
test
sbb
pushf
mov
pop
out
stos
frstor
sti
push
in
arpl
call
lahf
ds
insl
and
aam
sarl
cmc
movl
dec
aaa
loope
or
out
lock
cli
rcl
out
mov
dec
push
into
lods
outsl
mov
outsb
sbb
stos
fcmovnu
aas
es
ja
sbb
push
fsubrs
push
or
adc
xor
cltd
mov
jae
dec
dec
inc
insb
jno
sbb
mov
push
clc
insb
and
mov
flds
and
cmp
add
mov
mov
push
push
dec
icebp
clc
ds
mov
call
mov
imulb
sbbb
inc
cmp
xor
test
xchg
mov
xchg
or
incl
fmull
push
fwait
mov
add
fmuls
cli
add
adc
cmp
add
sahf
movsb
or
cld
lret
sub
mov
and
int
adc
xchg
xchg
xor
cmp
cmp
aam
jne
cli
or
push
fucom
or
cltd
ljmp
rcrl
mov
xorl
out
mov
mov
out
push
arpl
sbb
ret
ss
mov
or
ss
xor
pop
inc
test
pop
pop
cmpsl
popa
imulb
pop
jge
sbb
scas
loop
loopne
mov
adc
rclb
in
cmpsb
rorb
lcall
adc
pushf
pop
inc
cmp
sbb
dec
and
test
popa
xor
insb
sub
mov
xchg
testb
dec
jmp
stos
in
mov
test
in
xlat
pop
leave
lret
ret
stos
out
fldenv
or
inc
fcoms
rorl
mov
xchg
pop
push
fisubs
mov
adc
and
insb
outsb
stos
daa
sub
ficoms
sbb
imul
inc
fnsave
mov
imul
and
gs
push
in
xor
dec
xchg
out
adc
mov
or
addl
push
ljmp
fcomip
hlt
daa
out
jecxz
iret
jp
loop
idivb
daa
or
inc
push
dec
in
sub
repz
shl
in
jno
xchg
stc
lcall
mov
js
clc
jbe
and
out
adc
pushf
sbbl
jl
addr16
arpl
ret
or
clc
add
test
stc
lahf
notl
lock
icebp
pop
adcl
adc
ficomps
xor
xchg
dec
ljmp
or
mov
mov
jl
sub
call
test
inc
xchg
mov
in
sbb
inc
sti
add
cmp
ret
sahf
mov
dec
outsl
mov
push
add
mov
xchg
sub
movsb
in
out
push
or
mov
sbb
daa
scas
mov
clc
cltd
imul
insb
jl
orl
out
adc
dec
dec
leave
inc
in
nopl
cs
into
sarl
mov
mov
aam
ficompl
mov
mov
mov
or
test
xor
jge
in
pop
push
bnd
mov
movsb
mov
cmc
adc
pusha
jo
mov
out
mov
dec
or
inc
daa
sub
mov
das
popa
mov
adc
mov
push
push
mov
ds
inc
or
je
pop
xor
lret
mov
add
stc
into
pop
cmp
in
mov
push
sub
dec
or
jecxz
leave
sub
jmp
in
jp
addl
fmulp
outsl
mov
ret
gs
and
xchg
mov
int3
repz
loop
mov
mov
pop
scas
mov
xor
lock
lds
movsb
ficoml
movups
xor
push
ss
hlt
mov
loop
lahf
sbb
jb
sub
roll
push
sbb
pusha
push
hlt
je
push
inc
sub
cld
cmp
mov
addr16
fsubl
add
mov
adc
adc
pop
pushf
das
push
je
or
fdivr
scas
xor
int3
sti
loopne
idivl
fcoml
add
xchg
adc
pop
push
jle
notb
mov
sbb
push
insb
imul
inc
jnp
inc
mov
movl
nop
bound
jl
cwtl
test
aad
in
and
fisttps
lret
icebp
or
cmpsb
add
cmpl
or
xchg
and
mov
pop
pop
and
daa
daa
mov
lcall
inc
stos
ss
loop
sahf
mov
xlat
sub
mov
test
add
mov
lret
xlat
lret
lock
sub
dec
aam
subl
sbb
inc
sbb
push
roll
cmpsb
cld
push
jbe
call
cmp
push
xchg
mov
test
fistpl
mov
sub
movsl
push
mov
mov
enter
mov
mov
pop
pop
inc
int3
stos
xchg
icebp
inc
mov
mov
js
push
adcb
cli
in
adc
xchg
orl
leave
cs
mov
pop
or
sub
dec
ss
imull
lods
push
test
pop
dec
outsl
add
inc
mov
int3
jmp
cmp
hlt
sbb
fsubrl
not
gs
dec
sbb
fcoml
xor
pop
dec
xor
test
pop
mov
pop
inc
jno
call
out
out
mov
mov
push
mov
xor
js
je
outsl
aaa
icebp
sbb
rorb
fs
inc
cmc
mov
das
xor
mov
jmp
jo,pn
mov
stos
repz
inc
and
les
out
std
in
pop
popf
jae
mov
jb
cmc
popf
add
aad
cmpsl
and
pop
or
je
mov
adc
and
mov
sbb
insb
aad
mov
test
add
pushf
imul
jp
repnz
jns
imul
test
aas
dec
push
andl
in
sbb
add
jge
xor
add
shll
call
out
ljmp
dec
sub
cmpsl
bound
shlb
adc
js
jp
daa
fnsave
aad
lods
in
js
inc
mov
pop
dec
enter
dec
js
mov
mov
ret
lcall
xlat
pop
test
cmp
es
add
ds
movsb
push
xorb
testl
jle
pop
cmp
mov
in
sti
fs
mov
add
xchg
sbb
cmp
mov
push
imul
push
push
jmp
int
jmp
clc
repz
mov
stos
mov
xor
sub
mov
mov
mov
jne
mov
mov
sahf
call
lock
dec
enter
imul
jb,pn
pop
push
adcb
push
lods
mov
push
dec
std
mov
dec
test
orl
cltd
stos
sbb
bound
into
repnz
aaa
stos
pushf
imul
or
das
leave
lods
adc
popa
aaa
push
inc
stos
mov
fildl
cmpsl
mov
sub
push
daa
pop
mov
jbe
mov
sarl
inc
js
ss
xlat
pop
xchg
mov
jg
pop
xlat
pop
repnz
jo
jge
gs
arpl
mov
loope
call
pop
push
xchg
push
jg
insb
sbb
mov
lock
cmpsl
jecxz
cs
mov
mov
pop
stos
xchg
test
push
adc
ret
sub
mov
pop
in
jnp
or
sarb
lock
lock
jmp
sbb
sbb
xor
jmp
push
popf
js
test
lea
adc
dec
imul
jge
cmp
pop
sbb
mov
ds
jecxz
xchg
and
icebp
xlat
push
repz
jmp
in
ss
in
cmp
xor
pop
mov
or
and
pop
adc
push
cmpsl
fisubs
ljmp
sub
push
jb
loopne
arpl
fbstp
xchg
mov
xchg
pop
and
cmp
les
hlt
adc
rclb
xchg
jne
adc
or
aam
pop
mov
daa
sub
add
or
pusha
rcll
sbb
aam
xchg
mul
imulb
movsb
cmp
pop
call
dec
iret
add
push
xchg
inc
jecxz
inc
xorl
ljmp
adc
lret
sbb
loope
xchg
pop
pop
jecxz
cmc
push
into
test
iret
inc
ret
out
inc
sbb
leave
add
stc
rolb
jae
push
filds
mov
fiaddl
jns
mov
adc
fmuls
outsb
and
mov
sbb
or
cli
incb
sbb
das
mov
xchg
xchg
rcrl
jno
mov
add
or
mov
bnd
sahf
mov
aad
out
inc
fcomp
fldenv
sbb
sub
addb
push
lods
inc
pop
cld
dec
xor
push
aam
and
clc
mov
js
mov
mov
loopne
dec
pushf
mov
fdivp
mov
pop
ficompl
jle
mov
lock
loop
xor
inc
lea
lcall
insl
ret
mov
in
call
mov
jp
cltd
cs
sbb
cmp
adc
popa
dec
in
mov
fisttps
ds
pop
xchg
rolb
jbe
xchg
in
xor
arpl
mov
inc
adc
fmuls
ss
insl
jl
xor
sahf
out
scas
test
push
mov
mov
movsb
incl
jp
mov
mov
push
push
ljmp
sbb
popa
lea
sub
pushf
stc
fsub
or
jbe
movsb
or
and
add
jb
stos
es
hlt
in
loope
repz
sub
js
insl
add
leave
mov
fists
jmp
cmp
sbb
jmp
popf
loopne
jno
and
xor
scas
or
leave
gs
aam
jl
jecxz
push
jle
jl
fs
mov
cwtl
ret
ljmp
cld
sub
pop
ja
addl
sub
int3
pop
cmp
sub
cmp
ss
mov
pop
int
sbb
jnp
or
adc
cmp
xchg
sbb
scas
push
lret
clc
dec
jbe
push
jae
sahf
jb
inc
sub
and
dec
push
ret
pop
mov
movups
scas
insl
push
push
cmc
push
daa
cld
mov
les
aaa
arpl
mov
test
sbb
or
push
adc
imul
enter
std
jne
scas
sbb
imul
lret
mov
stos
adc
pop
sub
adc
sub
mov
xlat
outsl
pop
jb
ljmp
cmp
jge
lahf
add
sar
movb
stc
mov
in
push
fcompl
imul
push
jns
add
test
insl
inc
mov
dec
inc
add
add
adc
repz
out
out
inc
cli
pop
mov
ret
inc
mov
inc
pop
xchg
aas
mov
push
pop
xchg
loopne
sarl
addr16
jmp
cli
push
push
ror
jns
mov
push
jo
stos
mov
jbe
and
sti
pop
adc
movb
adc
xor
xchg
and
jnp
fldcw
pop
nop
sbb
or
out
mov
and
lods
cmpsb
test
or
lahf
push
dec
pop
out
rol
cltd
sub
pop
mov
sub
pop
rorb
int3
xchg
xchg
out
add
inc
out
cmpsl
popf
sbb
int3
shlb
push
add
push
xchg
pop
mov
test
mov
dec
daa
iret
pop
lds
xor
jo
idivl
pop
add
inc
pop
popf
dec
add
jbe
and
or
out
sbb
and
mov
mov
sbbb
mov
cmp
fbstp
jmp
out
push
xchg
mov
xchg
mov
cmp
xor
bound
dec
jns
addb
xchg
sbb
dec
sbb
std
push
dec
push
test
out
jp
pop
in
mov
mov
mov
in
arpl
push
or
lea
shrl
inc
push
add
mov
jle
scas
xchg
inc
sub
popa
mov
pop
adc
mov
mov
jge
pop
sbb
fwait
pop
in
mov
stos
jge
jl
mov
push
pop
dec
adc
or
int
jmp
rclb
test
or
outsb
and
cmp
aaa
mov
xchg
xchg
xchg
arpl
and
add
imul
pop
in
scas
adc
frstor
ljmp
mov
and
in
mov
jg
repnz
fcomi
pop
pusha
pop
mov
sarb
int3
addl
mov
into
add
addr16
jne
test
mov
ror
mov
xor
inc
ffreep
xchg
outsl
inc
and
dec
dec
fisubs
out
sbb
popf
pusha
jo
in
insb
insb
jmp
mov
and
outsl
cld
lea
mov
arpl
and
mov
pop
push
sbb
imul
lret
adcl
mov
jne
out
jp
push
pop
ret
cltd
stos
clc
cmp
xchg
popa
ja
sbb
push
mov
out
bound
xlat
jo
sbb
pusha
arpl
fisubrs
imul
lret
scas
pop
adc
sub
addr16
mov
adc
jecxz
outsl
mov
jnp
or
adc
dec
dec
cmp
mov
scas
pop
aam
dec
addb
loope
pop
mov
cmp
lds
dec
jno
mov
pop
inc
mov
add
bound
and
in
int3
shrl
lret
push
cmp
sar
das
inc
xchg
jp
pop
shlb
jne
mov
in
mov
in
inc
das
pop
test
xor
push
dec
popf
xchg
sub
mov
je
sub
loop
sbb
mov
pop
inc
mov
in
out
adc
lods
cmp
inc
and
pop
lea
loopne
fnstsw
add
mov
xor
std
adc
jns
mov
mov
ja
dec
lea
test
xchg
out
arpl
das
pop
jge
xorb
cs
loope
movsl
bnd
xchg
dec
cmp
es
clc
jno
pop
test
popf
outsb
fcomp
loope
jne
repz
in
jl
test
or
imul
pop
shrl
sbb
cmpsb
sahf
subl
call
lcall
and
lret
cmp
or
xor
in
adcl
or
xchg
pop
insb
sbb
add
and
imul
lods
fistpl
adc
mov
outsb
mov
xor
or
pop
inc
int
sbb
mov
ret
icebp
push
cli
mov
fildll
sbb
sahf
divl
pop
mov
sbb
sub
out
cmpsl
xlat
push
out
sbb
push
push
test
mov
xor
test
jno
dec
lock
xchg
into
leave
das
mov
pusha
stos
push
cs
pop
lea
pop
fstpl
push
jmp
cmp
inc
inc
pop
pop
ret
add
clc
sub
xchg
ljmp
pop
cmp
cmp
movsl
pusha
push
int3
mov
test
push
loop
pusha
inc
pop
js
xchg
shlb
int
cmp
or
bswap
test
movsb
testb
cmp
or
outsl
std
pop
mov
cmpb
gs
hlt
mov
ja
pop
shl
pop
pusha
shlb
pop
pop
pop
push
adc
bound
scas
lods
loopne
es
xor
mov
cli
push
hlt
mov
lcall
in
lods
lret
inc
arpl
je
cs
pushf
jne
sbb
jnp
popf
jb
cli
mov
movsl
test
insb
mov
xor
push
push
pop
add
sbb
mov
sub
outsl
jl
stos
leave
or
and
ja
ret
pop
popf
bnd
and
roll
lcall
xchg
or
mov
cltd
jae
push
fldt
test
push
cli
rcrl
jmp
push
inc
cmpsl
mov
or
stos
stc
sbb
mov
or
jae
cltd
in
enter
mov
lahf
js
xor
cmp
pop
adc
aas
adc
push
xor
inc
test
insb
pushl
cwtl
loop
lret
dec
iret
scas
pop
and
fwait
mov
xchg
or
in
and
xchg
lock
cmc
jno
enter
mov
jae
call
imul
lods
jmp
dec
jle
aaa
test
shlb
pop
sbb
jns
hlt
jecxz
or
jl
add
mov
cmp
push
flds
frstor
sbb
pop
mov
loope
add
mov
iret
jne
lret
inc
repnz
xor
push
xor
xorl
add
pop
imul
mov
jb
cmpsb
out
push
or
mov
nop
and
ret
mov
mov
mov
xchg
insb
cltd
in
out
dec
xchg
dec
push
ja
adc
pop
call
pushf
mov
nop
subb
mov
jne
popa
cmp
jns
fisttps
daa
inc
test
push
xor
mov
data16
push
push
cwtl
outsl
jae
lds
pop
jae
add
and
daa
iret
adc
out
aas
pcmpeqb
loope
xchg
fwait
lahf
jae
xor
fnsave
stos
arpl
pusha
fbstp
jb
daa
clc
push
out
ret
mov
xchg
add
add
lret
add
mov
sbb
xlat
push
add
mov
imul
adc
pop
ds
jg
pop
insl
jne
mov
cmp
popa
mov
jecxz
repnz
shr
xchg
pusha
popa
test
cmp
lea
insb
sbb
sbb
push
test
jmp
loope
xor
mov
cmpsb
adc
and
or
push
call
into
daa
jmp
mov
in
ss
scas
movsb
lods
fcom
js
mov
pop
cmpsb
mov
inc
pusha
orb
mov
add
add
lock
shl
mov
int
lcall
sub
jno
stos
lret
loopne
in
mov
or
jmp
sbb
data16
aaa
outsb
cmp
andl
adc
aam
and
or
out
dec
nop
jns
xchg
jns
addr16
gs
dec
hlt
dec
in
ja
dec
shrb
adc
nop
cmp
adcb
mov
aam
and
jnp
imul
ret
aam
dec
icebp
aas
jno
sbb
jle
ret
mov
jge
inc
ficompl
lahf
mov
xor
and
js
pop
xchg
sub
dec
or
repz
scas
add
xor
cmp
shlb
push
jb
sub
out
and
pop
dec
adc
mov
idivl
or
outsl
mov
pusha
or
sub
fsubrl
dec
orb
stos
js
out
mov
test
mov
sbb
imul
dec
icebp
popf
mov
pop
jne
movsb
add
cltd
out
xor
int3
push
xchg
arpl
les
xchg
lods
dec
ljmp
xor
aas
int
add
js
xchg
arpl
popf
out
add
or
leave
dec
sti
pop
ficoms
faddl
cmp
pop
xchg
das
jmp
jno
mull
out
insb
mov
enter
mov
repz
push
jo
mov
test
icebp
mov
mov
aas
mov
mov
addr16
jmp
xchg
xorl
pop
cmpl
cli
daa
mov
js
mov
mov
daa
out
adc
outsl
std
or
cmpb
xchg
daa
call
and
scas
or
mov
dec
add
ficoms
adc
ss
add
aaa
sub
ljmp
mov
push
jl
stc
mov
nop
pop
fisttpll
mov
sub
push
dec
loopne
loopne
jmp
inc
mov
pusha
sbb
push
xor
pop
gs
fnstsw
jmp
scas
jle
int3
xchg
push
in
lahf
arpl
inc
fs
xor
cli
sub
je
lods
mov
mov
loop
push
and
lods
rcrb
call
fidivrs
es
ss
pop
mov
das
sahf
shr
jge
jecxz
outsb
out
shrb
inc
xchg
aaa
xchg
xor
imul
imul
and
cltd
jae
xor
arpl
aas
push
mov
repnz
inc
xchg
adc
or
imul
daa
inc
notb
jo
mov
dec
adc
jg
cltd
dec
mov
jo
fistpl
fildl
sbb
jno
lcall
mov
pusha
xchg
mov
pop
lret
cltd
fcmovne
insl
pop
fs
push
sbb
jp
pop
out
out
inc
xchg
dec
push
inc
dec
jo
jg
cmp
lds
movsl
or
mov
adc
or
mov
jnp
enter
lea
sbb
push
int3
jo
adc
mov
andb
jbe
sbb
push
or
popf
iret
aam
sbb
xchg
fsubl
adc
icebp
aas
mov
sbb
test
jl
arpl
mull
adc
add
mov
inc
aam
or
aam
rcll
mov
insb
loope
jns
mov
adc
jb
adc
icebp
int
dec
std
iret
adc
pop
mov
lea
fildll
pushf
push
lods
cmp
xchg
mov
adc
add
notb
mov
dec
nop
jg
lret
inc
popf
or
bound
sbb
loopne
sub
cmp
mov
xchg
mov
cmc
sub
push
dec
std
mov
xchg
inc
leave
adc
rcrl
pop
jne
lcall
std
sbb
jno
pusha
cltd
std
pop
nop
aad
pop
lods
xor
shlb
testb
and
sub
cli
sar
ds
or
mov
pop
sub
xor
jae
lret
out
or
add
ret
sub
or
iret
mov
pusha
push
insl
mov
sbb
push
cmp
push
sub
shll
out
out
pop
in
jle
mov
popf
pop
mov
xchg
movsl
jg
std
lods
inc
jle
sti
call
leave
cltd
xchg
or
adc
imul
leave
add
jb
cwtl
or
add
or
xchg
hlt
ss
scas
jne
push
lds
fsts
popf
cli
je
add
jo
mov
adc
xchg
jmp
xor
fs
xchg
cmpb
fisubrs
sub
mov
lcall
jbe
xchg
das
lods
dec
xchg
jecxz
push
icebp
ljmp
test
ljmp
and
push
xlat
inc
and
xor
cmp
jo
mov
sbb
mov
arpl
stc
stos
imul
int
adc
ljmp
and
mov
sbb
cltd
out
sub
adc
pop
data16
gs
or
loopne
xor
pop
mov
in
popf
jo
stos
xchg
cld
cmpsb
lcall
push
mov
sub
stc
int3
xchg
div
scas
adc
sbb
imul
pushf
mov
stc
outsl
pop
jb
mov
fsubrs
test
je
xchg
hlt
mov
adcb
arpl
sbbl
mov
dec
or
decb
in
sti
jo
lock
mov
inc
das
add
jmp
adc
rcrl
std
faddp
mov
ret
pop
imul
pop
cmp
ljmp
movsb
jnp
repnz
mov
jbe
loop
pop
cmp
jno
or
sbb
mov
rsm
test
adc
das
lods
mov
loopne
inc
mov
push
push
dec
sti
mov
jg
xor
ret
scas
hlt
cmp
xor
adc
outsl
jnp
in
inc
push
dec
lods
sbbb
pop
pop
pop
push
cmc
pusha
sbb
pop
dec
mov
push
cmp
pop
icebp
xor
dec
mov
les
add
ds
mov
push
in
insb
inc
inc
add
pop
inc
dec
daa
inc
push
or
ljmp
xor
stos
add
xchg
stc
xor
daa
push
push
jmp
dec
jo
es
daa
lea
repnz
sbb
and
xchg
dec
pop
push
push
out
dec
xchg
sbb
into
shrb
xorl
hlt
jle
push
stos
add
jmp
push
lret
stos
fwait
mov
mov
mov
add
sbb
mov
jbe
inc
sarb
rdmsr
mov
xchg
jle
fsub
ljmp
shrl
outsl
in
fstl
jno
inc
dec
inc
mov
mov
and
and
test
add
pop
xchg
adcb
push
jmp
cmpl
ret
je
or
jns
pop
sbb
ja
aam
ret
fucomi
jne
and
dec
lcall
and
ret
fsub
loopne
adc
pop
lds
sub
out
clc
fcmovnb
cmc
test
stos
bound
dec
icebp
mov
int
add
push
dec
leave
add
shrl
and
or
mov
mov
popa
mov
mov
ss
and
out
jnp
outsl
stos
xor
fsts
mov
mov
lahf
mov
inc
cltd
sbb
dec
sbb
das
pushf
xchg
aad
sbb
push
sub
mov
inc
mov
push
mov
aad
cltd
sbbb
ja
push
les
mov
sub
scas
push
sub
mov
lcall
add
pop
out
xor
sbb
xchg
adc
inc
mov
fcomps
das
iret
mov
jmp
fs
sbb
enter
orb
xor
mov
ds
mov
cmpsb
mov
jle
imul
inc
push
cmpsl
pop
mov
es
ja
cmp
inc
mov
or
rorb
push
int3
les
mov
incb
lret
add
dec
cwtl
dec
cmp
das
ss
cltd
xchg
enter
int
out
cmp
cld
test
inc
outsl
ljmp
jecxz
inc
push
test
rcrl
pop
mov
test
mov
loope
in
inc
dec
add
cmp
out
sub
and
imul
out
sub
push
std
jae
or
xchg
mov
xor
out
cli
inc
mov
subb
push
cmpsl
pop
test
sub
jns
pusha
jbe
mov
jnp
popa
lea
sub
cmp
loope
mov
bound
mov
dec
repz
add
lods
push
push
rcrb
loopne
pop
jg
cmp
lea
repz
mov
pusha
cmp
popa
mov
fidivrl
enter
test
xchg
fmull
mov
aaa
das
jl
pop
push
pop
es
or
jo
sbb
lret
pop
js
imul
imul
nop
rcrl
mov
aad
or
insl
jp
loop
ficompl
cli
adc
movhps
jnp
stos
and
std
xchg
adc
fwait
push
sbb
mov
sub
dec
dec
mov
in
cmpsb
pop
cli
mov
lods
cmp
movsl
inc
push
daa
lret
jge
push
sbb
or
cs
xchg
mov
loop
movsb
gs
push
jb
ljmp
fld
loop
xchg
lods
adc
out
adc
xchg
shl
pushf
adc
daa
lahf
xor
arpl
jle
mov
gs
xor
jae
cmovne
xchg
sbb
rclb
jae
xor
dec
xchg
in
mov
and
xchg
push
jnp
mov
and
aas
out
ss
pop
out
dec
int3
push
call
pop
jae
insl
mov
push
sub
adc
scas
xchg
iret
xor
outsb
mov
rol
leave
gs
mov
xchg
and
or
pop
repnz
popfw
dec
pop
movsl
cmpsl
jl
dec
adc
enter
pop
fs
inc
subb
xchg
or
and
jnp
push
pop
icebp
fmuls
cmp
lds
lahf
dec
insb
mov
insb
jbe
out
scas
jecxz
jb
pop
lods
icebp
xchg
hlt
fwait
jae
jb
je
je
sub
push
mov
mov
fstl
sar
iret
cmpsl
lods
pusha
xlat
sub
ss
push
sar
jge
xchg
mov
jl
mov
adc
jle
and
and
or
mov
lods
popa
pushl
xor
divb
mov
mov
into
sub
inc
repz
mov
xor
out
push
pop
out
mov
test
inc
es
push
lods
ret
outsb
sbb
mov
inc
mov
xorb
dec
pop
cli
adc
sub
add
xchg
lea
lea
imul
call
insl
mov
mov
jns
adc
cmp
subb
in
call
insl
ret
ret
pop
sbb
testl
or
push
int
cmp
mov
mov
stos
orl
jnp
insb
sarb
lret
push
inc
lret
cmp
push
pop
pop
shrb
or
xor
fisubrl
int3
dec
sub
push
sub
push
dec
test
seta
sbb
mov
and
jg
pop
cmp
mov
stc
cmp
ljmp
mov
add
push
and
or
icebp
dec
out
or
jns
adc
jg
test
lret
dec
div
test
lods
push
cwtd
pop
pop
call
push
mov
movsl
out
ret
adcl
mov
cltd
lcall
cs
sahf
mov
push
stos
in
lret
push
roll
jecxz
jo
pop
pop
fs
mov
push
fistl
mov
push
push
enter
push
dec
mov
test
ljmp
mov
insb
inc
jp
popa
inc
mov
insl
mov
sub
out
outsl
or
xor
cltd
adc
jb
add
inc
fldcw
sahf
push
shrl
loope
cli
sbb
les
shl
pop
mov
pop
gs
sub
dec
out
lea
decb
adc
dec
sahf
dec
ds
adcb
cmc
aad
incb
push
pop
mov
jno
and
jge
sbb
and
cmpsl
into
push
inc
cmp
idivb
inc
pop
es
xor
xchg
mov
mov
lods
sbb
in
mov
mov
mov
int
movsb
scas
jae
out
inc
xchg
pop
mov
jl
push
pop
add
inc
fistpl
fimull
cwtl
mov
int
dec
or
dec
addr16
mov
pop
popf
xchg
fidivl
inc
xor
and
pushf
imul
stos
stc
in
lea
mov
sub
stc
in
and
cmpsl
jbe
xor
out
and
sbb
mov
mov
fiadds
das
icebp
and
in
mov
jbe
imul
test
lock
lcall
mov
fnstenv
hlt
push
jl
fwait
lcall
test
jg
cmp
inc
jg
cmp
mov
push
insl
dec
sub
pop
ret
loope
push
jmp
dec
pop
and
fs
shll
xor
inc
jo
ret
push
xor
incl
popa
xor
mov
dec
jno
jecxz
lock
or
sarl
mov
loope
idivl
inc
push
xor
sbb
mov
std
cltd
out
fsubs
mov
or
addb
insb
sub
aad
push
mov
shr
cmp
int3
mov
in
jecxz
cld
leave
dec
jle
sahf
jno
ss
mov
inc
lea
jbe
fsubs
nop
push
test
sub
sti
loope
mov
dec
int
xchg
ret
dec
icebp
dec
inc
sarb
xchg
in
xchg
ds
movsb
hlt
out
mov
aad
jnp
gs
cwtl
flds
sbb
lea
mov
mov
xchg
es
imul
imul
adc
stc
mov
les
cmp
je
and
adc
xchg
inc
std
push
mov
ljmp
push
pop
pusha
shl
ret
push
stc
sbb
xor
pop
popa
jmp
cltd
xchg
std
rcll
mov
add
ljmp
test
rcll
std
arpl
xor
insb
mov
push
loop
and
in
pop
out
std
in
mov
movsb
mull
insb
pop
aaa
lret
fsts
xchg
mov
jno
jne
fldt
jns
push
shll
lret
push
jle
enter
mov
push
xor
or
mov
push
jbe
xchg
inc
pop
testl
dec
in
std
notl
inc
cmp
lods
ret
lret
cmpsl
cmpsb
and
mov
clc
xchg
stos
cltd
mov
sbb
mov
cmp
jo
mov
push
jle
jl
xor
sub
pop
hlt
stos
cmp
out
aaa
lods
xor
popa
mov
andl
das
test
imul
inc
xchg
es
mov
lds
xchg
cmp
jp
adc
out
sub
fisubl
lret
lahf
out
vpunpcklbw
inc
dec
mov
sbb
hlt
fsts
mov
mov
adc
pop
dec
mov
cmpsb
pop
sbb
push
testb
and
jmp
in
shr
icebp
lds
mov
dec
push
cld
fdivrs
nop
nop
shlb
jns
push
xchg
popa
push
aam
mov
fs
lret
inc
test
insl
cld
mov
push
cltd
aad
mov
aam
cmp
lods
mov
push
push
inc
xor
add
out
cmpsl
dec
idivb
int3
subl
fmuls
xor
or
mov
in
sbb
fwait
push
pop
outsb
cmpsb
push
shrl
add
shr
pop
dec
mov
cmp
and
out
mov
and
hlt
cld
mov
jb
mov
loope
mov
cmpsl
ret
push
popa
or
dec
xor
add
outsb
push
insb
int3
mov
and
dec
stc
sub
lock
gs
adc
push
mov
ret
sahf
mov
test
test
repz
out
push
push
jne
js
outsb
or
das
ds
lock
xor
mov
pop
stos
push
mov
fwait
test
jb
sub
xchg
push
and
add
mov
std
mov
aam
sbb
mov
adc
int3
inc
int
arpl
loopne
pop
ja
fldcw
in
sub
shl
aad
add
mov
nop
xor
fisttpll
or
cmp
sub
insb
popa
loopne
or
mov
push
push
movsb
repnz
mov
pop
scas
mov
jne
scas
jle
les
jge
cld
fwait
jmp
xlat
mov
mov
insl
cld
test
rolb
push
adc
out
roll
or
enter
bound
xchg
std
fistpl
and
mov
es
cmp
push
out
addl
xlat
ja
shll
imul
scas
pusha
cmp
arpl
push
addr16
sahf
and
jl
insb
leave
movsl
into
dec
add
adc
je
rorb
push
mov
gs
add
in
scas
cld
sub
clc
aam
dec
pop
sub
mov
cli
aaa
pushf
je
cmp
lret
aaa
xor
adcl
add
add
cltd
cwtl
mov
dec
iret
dec
cmp
and
fstps
aam
xchg
add
fwait
cli
imulb
stos
aam
aaa
dec
es
mov
mov
pop
lods
lahf
xor
ret
pop
mov
rolb
xchg
test
cmpsb
cmp
push
xchg
xchg
push
loopne
arpl
mov
fs
sbb
mov
mov
jmp
adc
int
push
or
test
adc
xlat
clc
ret
and
mov
jbe
ficompl
xor
pop
mov
das
pushf
fmull
and
cmp
das
repz
jne
jl
fdivr
sbb
mov
sub
loope
insl
jnp
nop
in
or
push
out
cmpsb
fs
insb
xchg
xchg
dec
aam
jbe
pushf
mov
rorl
inc
repz
sbb
aas
pop
fnstenv
mov
or
filds
mov
inc
push
test
fldl2e
sbb
xor
sbb
mov
mov
popa
js
std
addb
rolb
dec
mov
lret
out
dec
add
enter
in
xor
std
subl
mov
sub
jg
lods
jmp
iret
mov
jb
adc
cmp
popa
fisubrs
bound
adc
xchg
mov
repz
cld
adc
fistpl
mov
stc
repnz
stos
push
clc
mov
popa
mov
popa
adc
mov
xchg
sti
push
mov
pusha
inc
add
test
fidivs
imul
sub
dec
ja
lahf
ljmp
les
hlt
mov
push
pop
out
iret
ds
push
fs
add
add
lock
gs
add
and
rcrb
mov
mov
mov
dec
xchg
xchg
jnp
addr16
je
xchg
or
push
jecxz
scas
shrl
jns
sti
pop
mov
lock
and
jp
repz
shr
orb
int3
push
lret
mov
pushf
outsl
pop
dec
sub
sbb
fprem
mov
test
cmp
out
push
sub
sub
int3
jge
fstps
mov
sbb
jecxz
cmp
push
imul
push
mov
dec
mov
ss
in
notl
add
pop
mov
or
mov
lods
xorb
popf
jge
sarl
jecxz
aas
push
fimuls
push
and
icebp
inc
test
mov
add
int
cmp
mov
popf
mov
push
push
add
dec
into
ss
repnz
inc
mov
xor
stos
pop
add
cmp
xchg
dec
imul
cmpsb
mov
push
adc
sub
push
lahf
into
inc
and
add
pop
loope
dec
add
or
pop
cmpsl
jo
stc
insb
jns
cld
divl
fnsave
mov
aaa
cmp
fcompl
sub
cmp
cmp
push
fldcw
mov
adc
or
dec
fiaddl
jle
int
fwait
push
daa
push
test
fcoms
rorl
ret
mov
sbb
repz
adc
mov
pop
popa
out
test
lret
jmp
or
and
out
jge
xor
cmp
sbb
aas
xor
jb
jae
fisubrs
or
sbb
adc
and
xor
pop
or
lcall
daa
stos
mov
pop
pop
lret
fldt
xchg
loope
add
je
mov
movsl
cltd
in
fsubl
or
je
fcoms
int
xchg
hlt
out
mov
stos
adc
push
das
sub
push
push
push
sarb
push
adc
lret
mov
jge
and
add
js
add
jmp
pop
repz
xchg
add
lea
loopne
mov
in
iret
out
jp
lds
cs
outsb
mov
andb
stos
addr16
mov
lahf
and
in
sahf
test
out
daa
jecxz
ljmp
rcll
xchg
in
fimuls
or
xor
jnp
jnp
pop
sti
outsl
hlt
cmp
dec
xchg
jnp
and
aad
fs
pushf
movsl
lret
dec
jl
cld
adc
inc
loop
mov
lcall
push
push
enter
push
cmp
stos
outsb
sub
loop
outsb
loopne
sbb
insb
int
push
das
pop
sbb
cmp
imul
orl
adc
sub
pop
outsl
xchg
jp
std
add
les
sub
and
sbb
sahf
in
push
hlt
sbb
faddl
jbe
aas
mov
iret
sub
jge
inc
test
and
mov
push
loop
rcrb
call
jl
push
cmp
pop
mov
or
lret
or
rcll
cmc
and
jl
js
jne
cmp
jp
nop
xor
add
out
sbbb
rcrb
aaa
jecxz
inc
pop
out
into
jle
andb
nop
fwait
cmp
adc
xchg
ds
out
or
sarb
arpl
ss
inc
mov
aas
mov
ljmp
push
scas
lods
rolb
inc
jbe
or
sbb
push
dec
push
mov
lcall
aam
sub
outsb
push
mov
fdivrp
imul
mov
dec
push
inc
jmp
pop
jge
out
scas
roll
add
xchg
call
mov
fisubs
jmp
inc
jb
subl
push
jge
sbb
dec
je
xor
lcall
cmpsl
mov
dec
push
test
adc
scas
sbb
sahf
jle
scas
xchg
test
fwait
xor
jae
jns
push
mov
fcompp
xor
mov
pop
push
pop
or
pop
movsb
pop
cmpsb
test
pop
pop
rolb
pop
jecxz
fsubs
adc
xor
add
jbe
in
inc
int3
inc
push
dec
pop
pushl
cs
lcall
xchg
and
jbe
mov
cmp
sarl
lcall
add
dec
mov
push
pop
sub
das
lock
cmpsb
jne
sbb
push
jae
or
gs
push
das
scas
jo
imul
dec
or
sbb
lods
inc
inc
jl
jmp
dec
jle
cmp
push
call
shrb
pusha
dec
stos
mov
dec
sbb
outsl
test
or
test
pop
pushf
sbbl
mov
pop
mov
hlt
push
mov
mov
stos
stos
xor
adc
sbb
push
inc
dec
jbe
data16
ss
stc
adc
int
xchg
sbb
aad
cmp
jecxz
lcall
add
or
shrb
shlb
stos
aam
inc
test
mov
sub
jb
fwait
and
xchg
add
fdivrl
int
fwait
icebp
push
rorl
sbb
stc
add
fidivs
dec
test
fimuls
and
dec
jecxz
scas
out
push
and
sbb
mov
jo
movsb
js
loopne
xchg
dec
clc
jbe
sub
sbb
fstl
lret
rcl
pop
push
cmp
ret
shr
jbe
mov
ds
iret
sbb
imul
sub
jge
lahf
add
jle
sub
divl
dec
orl
pop
pop
jecxz
jns
sub
mov
mov
and
mov
jg
mov
out
cmp
xchg
dec
in
das
icebp
jnp
inc
push
and
inc
xor
out
mov
xor
popf
loope
xor
aad
and
push
push
cmp
dec
xchg
add
mov
aad
cld
jg
push
push
je
mov
jns
push
adc
pop
into
sub
jae
and
xor
and
and
adc
cmp
daa
cwtl
outsb
cmpsl
les
push
add
xchg
je
jne
cmp
inc
xlat
aad
fisttpl
mov
icebp
push
shr
push
pop
mov
mov
inc
pushf
pop
fmul
jbe
stos
inc
sub
imull
or
aaa
int3
pop
jmp
ds
xchg
sub
lods
adc
mov
lds
push
ret
fcoml
push
jno
stos
mov
js
out
outsl
iret
aam
xchg
xchg
shrb
sub
cltd
testb
std
cmp
push
std
pushf
push
jle
xchg
rcll
mov
or
pop
inc
hlt
dec
mov
das
xchg
jge
jg
addl
sahf
push
or
dec
jbe
dec
es
sub
arpl
js
addr16
addb
adcl
or
int3
cmpsl
mov
out
xchg
lret
or
push
mov
jmp
mov
inc
dec
out
mov
jne
adc
fcom
push
cmp
aam
test
dec
roll
lret
cmp
mov
pop
push
mov
ja
jge
mov
arpl
cmp
mov
or
add
add
pop
mov
and
pop
fistps
jo
jns
xlat
repz
scas
inc
mov
fcoms
xchg
jl
lock
scas
popa
repz
das
call
push
adc
rcrl
inc
dec
fldt
stc
xchg
inc
adc
test
dec
addr16
add
imul
das
lret
int
sahf
frstor
lods
jl
addr16
aaa
sarb
cmp
lret
dec
and
dec
mov
sbb
std
inc
xchg
push
mov
push
add
adc
sub
add
pop
adc
or
rcl
mov
aam
int
mov
aam
dec
dec
fs
push
mov
push
xchg
pop
daa
sbb
mov
jb
dec
cmpsl
jmp
cmp
adc
mov
dec
insl
dec
sbb
ret
xor
pop
imul
mov
inc
xchg
stos
insl
xlat
xchg
lods
out
or
pop
dec
js
hlt
push
adc
scas
xor
sub
mov
pop
shlb
lods
ret
in
fildl
in
jno
mov
and
ja
fsubrl
popa
rcrb
shlb
cli
test
xor
jmp
pop
xchg
jmp
jp
test
cmp
in
push
incb
inc
mov
inc
mov
adc
and
int3
mov
jo
adc
mov
mov
xchg
cld
repnz
or
repnz
mov
das
mov
enter
test
push
and
mov
cwtl
add
push
jno
add
sbb
push
test
cmp
xchg
das
sub
std
and
outsb
in
out
adc
adc
mov
mov
nop
iret
or
dec
inc
mov
clc
adc
mov
jmp
int
lcall
and
adc
test
outsb
ljmp
xchg
mov
add
mov
sbb
push
test
adc
dec
push
ret
test
jnp
inc
in
sbb
in
movsb
callw
mov
xchg
in
and
inc
orl
jge
mov
ret
push
ficomps
lcall
nop
cmpsl
cmpsb
ja
pop
mov
cs
mov
mov
sub
jo
sub
cmp
push
inc
xor
add
sbb
pusha
repz
fwait
and
test
imul
mov
mov
sub
mov
mov
pop
xchg
iret
imulb
fsubl
push
imulb
and
mov
popf
sbb
out
and
push
and
mov
fldenv
test
cmpsb
cmp
aad
imul
lcall
mov
out
ret
je
les
xchg
mov
repnz
stos
insb
inc
mov
jecxz
adc
popa
icebp
mov
sbbl
ffreep
data16
xchg
repnz
insl
pop
push
bound
adc
clc
aam
loop
notb
mov
jnp
xchg
cmpsl
xlat
add
adc
mov
sbb
inc
push
cmp
mov
cmpsb
int
pop
lock
ret
popa
xor
popa
movsb
out
mov
fwait
arpl
cmpsl
mov
cwtl
push
addr16
popf
ficompl
mov
pop
jl,pn
ja
cmpsl
insl
xchg
cld
and
das
add
inc
cmp
xchg
add
lret
push
adc
adc
push
in
xor
push
adc
inc
ret
push
loope
adc
insl
jmp
xor
cld
jne
ds
add
lcall
aaa
lock
into
out
outsb
fbld
mov
inc
adc
rol
mov
and
sbb
mov
shl
jne
jno
adc
test
pop
cmp
add
jbe
mov
jmp
cmpsl
sar
outsl
mov
mov
xor
jge
je
lods
test
xor
jp
or
sbb
add
jnp
loopne
mov
pop
inc
ss
push
cmp
xchg
rorb
or
xor
pop
pop
dec
mov
and
aas
sub
ss
out
dec
push
jb
push
cmc
mov
pop
xor
adc
out
dec
sub
insl
mov
sarb
insb
cmp
mov
stc
stc
movsb
sahf
and
outsl
sbb
mov
push
jne
adc
addl
mov
dec
dec
insl
xchg
out
push
push
dec
jecxz
cmp
cmp
cwtl
jne
mov
mov
mov
xchg
dec
mov
data16
iret
cwtl
add
lods
jmp
out
int
lret
xchg
out
xchg
or
nop
leave
shlb
js
fadds
pop
mov
xor
mov
and
pop
cltd
xchg
fisubl
and
mov
xchg
xor
dec
jbe
jo
lret
cmp
lea
push
movb
add
add
call
scas
mov
jo
or
stc
stos
test
jmp
in
push
sbbl
add
mov
or
sarl
sbb
push
rcrb
jl
xor
add
pop
lock
outsb
lret
dec
mov
loopne
cs
movsb
or
and
and
push
testl
lods
cmp
sub
jnp
sbb
inc
sub
rolb
jge
out
jg
or
vaddpd
mov
testl
xor
cmc
cwtl
xor
shrb
add
rcr
xor
sub
ja
dec
pop
mov
in
mov
addr16
or
ret
shrl
push
jns
add
cmpsl
xorl
pop
stos
nop
pop
sub
sub
fcoml
sub
pop
pop
loop
enter
orl
mov
jge
stc
ljmp
and
aaa
xchg
push
cmp
sub
mov
fwait
inc
dec
loopne
rclb
or
jmp
sbb
pop
jmp
and
ds
sbb
add
adc
or
stc
mov
nop
ret
mov
cmpsl
sub
sub
sub
cs
and
scas
or
ss
inc
sub
pop
jo
xor
out
aaa
and
rolb
out
or
inc
xchg
movsb
inc
dec
ljmp
cmc
jmp
dec
xor
mov
scas
insb
clc
push
dec
push
sbb
pop
dec
sbb
popf
pop
stc
int3
lods
jne
push
cmpsb
fwait
inc
cmp
jb
mov
push
fdivrs
cwtl
pushf
jnp
fs
idivb
xchg
nop
sbb
iret
frstor
xor
test
hlt
insb
int3
xor
push
or
adc
cmp
jb
xchg
xchg
inc
mov
xchg
stc
mov
xlat
jle
mov
test
sbb
mov
int
mov
je
hlt
mov
daa
cmp
and
fs
loopne
xor
sbb
inc
dec
pop
aam
leave
je
mov
mov
jns
pop
aam
ret
ficoml
sbb
xchg
rcll
lret
jne
ret
fildl
shlb
xchg
cmp
lcall
outsl
cmc
mov
dec
jno
cli
or
mov
lret
sub
adc
out
out
pop
sub
sbb
jp,pt
loopne
jmp
or
dec
add
pop
jnp
movsl
push
mov
pop
pop
mov
xchg
jecxz
fwait
jg
jge
xchg
push
cmp
adc
ficoml
aaa
shrl
sub
mov
jmp
addr16
adc
pop
stos
mov
push
jne
lea
bnd
bound
fists
les
inc
pop
cs
push
mov
sbb
mov
bound
or
pop
mov
sbb
push
mov
mov
jmp
stos
aas
xor
fs
call
stos
cmp
adc
xlat
mov
dec
xchg
lret
popa
das
stc
mov
xchg
leave
mov
lret
fdivp
in
push
pusha
xorl
mov
adc
movsl
fidivrs
icebp
jle
push
lret
lahf
xchg
adc
fiaddl
mov
mov
ret
shrb
test
xor
cmp
xor
sbb
fdivrs
pusha
mov
mov
andnps
jb
loop
adc
cs
in
adc
xchg
mov
lods
dec
imul
dec
std
xchg
iret
mov
xor
pushf
adc
in
into
mov
incb
ret
mov
pop
jne
cmp
sbbl
les
dec
shll
push
into
scas
fwait
sub
xchg
dec
fisttpll
mov
test
inc
aad
orb
pop
in
cltd
inc
movsb
pusha
sub
lock
hlt
inc
sahf
cwtl
sub
fnclex
jne
jns
cwtl
dec
mov
out
fisttpll
jg
or
and
push
js
and
cltd
iret
mov
push
mov
xor
clc
shll
inc
icebp
sbb
lock
push
dec
mov
or
arpl
in
test
rcll
mov
fiaddl
inc
mov
lret
lods
cmp
test
jno
pop
or
cmp
and
icebp
and
popa
aad
aaa
jb
lea
mov
jne
movsl
jp
sub
cmpsb
mov
das
inc
ret
fcoms
xlat
mov
jmp
pop
rcll
inc
pop
or
jno
and
mov
xchg
loop
cwtl
ljmp
pop
fcoml
pop
outsl
leave
cmpsl
mov
mov
dec
pop
out
mov
push
fwait
jns
loop
loop
outsb
push
repz
insb
or
xchg
mov
adc
rolb
inc
pop
lret
out
pop
and
or
mov
je
data16
in
mov
imul
insb
mov
repnz
xchg
stc
xor
leave
pop
sub
mov
pop
js
push
jbe
pushf
cmp
dec
mov
mov
ja
cmpsb
and
mov
mov
add
sub
dec
jno
cmp
cmpsl
push
dec
mov
and
lds
mov
rclb
push
xchg
jae
es
and
les
in
shrl
adc
les
js
scas
ja
pop
mov
sarl
test
jnp
out
mov
and
arpl
sbb
jo
inc
and
enter
mov
or
cmpsl
ret
cmp
push
push
les
xchg
hlt
ficoms
cwtl
adc
or
loop
stos
sub
popa
loop
fbstp
adc
mov
movsb
inc
std
xchg
imul
xor
lods
popf
adc
jmp
adc
out
cmp
and
stc
daa
test
sbb
cld
ret
clc
arpl
jmp
mov
inc
push
push
clc
pop
adc
arpl
stc
xor
pop
jno
shlb
rclb
mov
clc
jo
sub
cs
push
mov
pmaddwd
outsl
cmp
xchg
fcoml
jp
int
sbb
nop
lds
push
shlb
push
pop
aad
mov
inc
pop
ja
out
or
mov
icebp
decb
in
sub
or
loop
jnp
sbb
cmp
add
adc
ret
orl
fidivl
daa
or
mov
shrl
pop
int
ret
mov
or
jne
es
xchg
add
test
mov
push
mov
xor
jecxz
out
xlat
dec
push
shl
cmp
jno
and
test
lcall
lds
enter
int
test
aam
sbb
pushw
enter
mov
xchg
jmp
popf
iret
cmp
add
out
xor
pop
aas
xchg
jne
jge
lods
dec
enter
std
mov
rorl
in
je
and
loope
mov
mov
jp
lcall
jb
push
inc
aad
pop
insl
pop
pop
outsb
pushf
sbb
pusha
iret
dec
adc
inc
enter
adc
cmpl
test
mov
adc
push
mov
jge
dec
xor
gs
sbb
pop
adc
loop
push
mov
popw
mov
out
xchg
test
and
xor
test
outsl
loope
adc
test
xchg
das
subb
stc
test
les
stc
aas
mov
sub
jp
and
push
xchg
xchg
pop
call
and
int
clc
adc
xchg
xchg
mov
pop
push
insl
adc
rorl
jo
jne
mov
adc
pop
aam
xchg
dec
inc
out
pushl
decl
and
stc
jne
xchg
cmp
es
push
scas
shlb
sbb
cmc
or
add
mov
test
xchg
mov
rcll
scas
or
jmp
sbb
movsb
cltd
test
adc
cmp
lret
mov
fnclex
lock
jecxz
and
pop
sbb
int
jne
sbbb
cwtl
mov
dec
dec
into
stc
pop
xor
std
pop
xchg
sbb
test
sti
lret
push
pop
pop
jns
sub
sti
sub
lahf
push
pop
scas
dec
mov
inc
lods
loop
and
cli
mov
pushf
aad
jo
xlat
or
push
sets
dec
dec
push
xchg
jo
sbb
mov
push
or
orl
xor
mov
push
cld
shl
inc
rolb
pop
xor
jb
mov
in
mov
push
mov
mov
mov
xchg
std
push
aaa
add
adc
adc
xor
in
push
es
add
dec
es
fdivrl
mov
adc
mulb
iret
push
xor
daa
jle
mov
mov
pop
test
pop
in
sub
pop
ja
iret
cmp
xchg
addr16
inc
jns
out
fnsave
xchg
mov
jnp
mov
pop
aaa
adc
insl
cmp
rcrl
cmpsl
out
ja
add
cmc
mov
lret
jb
pop
jae
pop
mov
daa
fcmovbe
aam
dec
xlat
shl
jno
addr16
push
repnz
pop
jnp
cmp
pop
in
out
lods
cs
sub
push
and
fnstcw
rorb
movsb
popa
sub
or
fidivl
imulb
lret
xchg
pop
std
xchg
fmuls
popf
cli
mov
incb
jns
mov
xor
flds
push
test
push
out
pop
and
test
lods
shlb
dec
cmp
jbe
aad
icebp
mov
xor
pop
adc
mov
das
insl
int3
push
into
sbb
adc
sub
scas
add
popa
das
xor
and
adc
aas
and
lret
into
cmp
cmp
sub
in
cwtl
mov
inc
push
mov
add
inc
ljmp
cld
mov
cmc
jne
add
adc
inc
dec
inc
and
fiadds
pop
mov
pop
es
pusha
popa
mov
aaa
xor
mov
xor
ds
fisubrl
inc
mov
xchg
outsl
subl
insb
movsb
lods
lret
loopne
movsb
pop
inc
mov
movsl
push
add
in
outsb
loope
xor
or
cs
fs
addl
shll
and
adc
arpl
outsl
lock
or
iret
push
sub
lock
in
xchg
adc
enter
lahf
cmp
es
sbb
daa
mov
cmp
pushf
pop
xchg
addr16
int
mov
test
push
aam
pop
mov
repz
ret
inc
icebp
mov
imull
mov
xchg
push
leave
stos
lock
test
jle
std
fdivrl
or
xor
jno
mov
add
popf
fstpt
pushf
fcoml
int3
sbbl
fstl
daa
fstpl
dec
pop
adc
rcl
test
add
pop
adc
push
fs
cmpsl
cmp
cmpsl
rorl
fisttpl
adc
shl
fldl
jne
add
mov
jge
mov
or
mov
sub
inc
inc
stc
imul
push
les
pop
mov
xor
rol
std
popa
or
mov
pop
cmp
daa
and
jbe
int
jl
cwtl
in
cmpsb
lods
pop
in
pushf
xchg
adc
adc
test
mov
popa
sbb
pushw
dec
sub
add
icebp
mov
icebp
cmp
int
adc
inc
cmp
loope
fisubrl
jmp
ret
push
lock
push
cmp
xor
or
inc
pop
push
dec
and
stos
cmp
dec
rol
jle
test
mov
jno
push
addr16
scas
cmpsl
dec
and
inc
pop
fninit
push
aad
pop
mov
dec
lock
les
mul
dec
in
mov
mov
jmp
pop
sub
loop
sbb
fsts
adc
movd
shrb
outsb
and
sub
es
push
lock
sub
pop
cmp
or
gs
xchg
pop
or
sti
js
jae
cmp
test
fidivrl
mov
jo
cmp
sub
jle
sahf
das
shl
and
or
mov
std
mov
addr16
shrl
push
jne
pop
sbb
dec
aad
dec
pop
nop
pop
ljmp
fisttpll
pop
jmp
int
sbb
iret
xchg
lods
sti
lahf
or
or
jno
jecxz
add
test
mov
clc
push
mov
call
sub
aam
lock
pop
inc
out
sti
cmp
jno
xor
dec
adc
dec
jge
cwtl
jg
inc
sbb
movsb
add
cmp
das
jle
xor
out
mov
cmp
ficompl
sub
mov
in
ljmp
jge
sub
add
sti
aam
test
aas
and
ret
or
popa
fdiv
mov
mov
mov
popf
lret
fstl
add
dec
dec
sub
add
sti
push
mov
daa
add
jnp
test
out
sbb
inc
mov
xchg
shl
push
ret
xchg
xchg
insl
frstor
sub
inc
stc
in
inc
xchg
push
adcl
lods
adc
ret
cli
ss
aaa
fisubs
or
cmc
cmp
and
inc
sub
mov
cmp
jl
cmpsb
xor
aam
out
movsb
xchg
pop
fcomps
daa
pusha
je
jge
clc
pop
fwait
xor
xchg
dec
cmpsl
repnz
adc
lock
dec
stos
and
adc
sub
enter
rcr
lock
inc
xlat
imul
mov
stos
inc
jns
es
in
mov
cld
sub
mov
mov
adc
cmp
push
cld
decl
cmpsb
into
adc
cld
repz
pop
dec
mov
lods
fldenv
inc
ret
leave
in
add
add
adc
cs
sub
into
sub
lahf
movsl
adcb
push
mov
add
inc
clc
aad
mov
adc
out
cmp
push
fists
inc
mov
fs
std
pusha
push
mov
fpatan
inc
sti
bound
push
cmc
jno
divl
mov
cmp
js
mov
jae
pop
pushf
xor
fldt
jns
mov
jl
pop
push
ds
sbb
adc
pop
jb
rcl
cmp
add
cmp
inc
rorl
push
push
or
push
imul
rolb
mov
imul
fmul
sub
and
bound
popa
sub
jns
lcall
dec
cwtl
insb
jp
es
lods
sbb
pop
mov
sbbl
pusha
inc
dec
jl
inc
inc
push
adc
jmp
cmp
sbb
dec
xchg
adc
xchg
test
dec
jg
test
push
xchg
push
push
in
scas
cmpsb
inc
daa
cmp
sbb
das
fisubs
lahf
fsubs
mov
ljmp
test
or
aam
ljmp
ss
xlat
movsb
shrl
mov
push
jge
mov
out
and
fidivl
icebp
imul
pop
sbb
push
loop
inc
addb
mov
cmp
sub
mov
cwtl
push
adc
scas
loopne
in
jg
out
inc
cli
into
in
mov
stc
pop
sarl
outsl
les
pop
push
and
push
dec
pop
mov
pusha
adc
pop
cmp
mov
out
cmp
es
add
insb
not
rcl
xchg
or
mulb
jae
dec
push
sub
loope
push
fisubl
and
sahf
push
xor
aam
xor
popf
cwtl
mov
outsl
jo
mov
jnp
jecxz
inc
mov
lds
jmp
jp
andl
xor
int
jae
lods
cld
xchg
scas
stos
add
xchg
mov
inc
and
sbb
clc
jl
sub
mov
adc
inc
out
push
nop
pop
cmpsl
out
add
pop
out
scas
shld
shrb
xchg
in
mov
ljmp
dec
sbb
or
xor
dec
pop
mov
inc
scas
je
dec
mov
cwtl
clc
jmp
add
mov
xchg
adc
sbb
repnz
out
adc
lods
int3
sub
mov
xchg
int3
mov
daa
pop
loop
cmpsb
push
fisubs
mov
les
dec
jecxz
and
hlt
pop
jp
test
les
stc
push
imul
stos
inc
adc
mov
leave
fsubrs
mov
sbb
pop
pop
shll
icebp
in
sarb
cmpsl
testb
mov
imul
movzbl
dec
rcrl
add
lods
loopne
mov
lcall
data16
cltd
xor
lock
xchg
jbe
addb
clc
mov
xchg
test
jo
cmp
cmc
dec
sti
pop
fidivrl
sub
dec
cltd
add
std
or
inc
mov
cmpsb
mov
shlb
mov
in
test
lret
or
aaa
dec
ds
cmp
fnstsw
insb
outsl
in
dec
sbb
xlat
rcrb
and
push
dec
inc
xor
pop
stc
xchg
dec
mov
in
fcompl
ja
pop
repnz
jecxz
dec
out
push
adc
fsubrp
xchg
out
xor
add
int
add
inc
ja
test
sub
je
daa
and
push
testb
and
daa
push
add
push
cmp
adc
negb
dec
insb
int3
sbb
rol
xchg
test
jo
fmuls
sbb
pushf
xchg
sub
sbb
or
dec
mov
rcl
push
mov
jmp
aam
jae
or
push
mov
or
sbb
aaa
sti
jno
loope
sbb
sub
lea
and
insb
dec
push
sbb
in
and
addr16
push
jne
inc
pop
xchg
test
or
fistpl
mov
je
rorl
loopne
lret
sbb
mov
clc
sbb
mov
lahf
sub
pusha
sub
decb
pop
lods
rcr
aad
cld
jmp
aad
repnz
mov
shl
or
testb
or
out
lret
repnz
cmp
rcll
push
push
rorb
xor
mov
push
pop
xor
add
sub
xorb
mov
out
dec
movsl
shlb
push
test
mov
pusha
popf
ljmp
xor
mov
mov
lret
jo
sub
dec
fisubl
mov
xchg
adc
push
in
xchg
xchg
data16
repz
outsb
mov
push
pop
push
xlat
mov
and
lds
iret
mov
inc
mov
lods
sub
mov
sbb
js
cmp
pop
mov
jne
stos
mov
adc
push
sub
or
sahf
add
cli
scas
sub
cmp
ljmp
aaa
mov
sbb
adc
mov
mov
int
mov
and
ss
in
sahf
outsl
aaa
jl
lahf
mov
pcmpgtd
fwait
lods
out
xchg
scas
call
xchg
cs
sbb
inc
cmpsb
fldl
xor
pop
lock
jbe
xchg
arpl
insl
repnz
pop
dec
loop
or
xor
rcl
popl
adc
jg
sti
jl
bound
sbb
jo
jg
clc
adc
fsubl
cmpsb
mov
sbb
jg
add
mov
xor
xor
aaa
dec
sarb
push
mov
inc
xor
push
scas
sub
cmp
push
icebp
jge
out
jne
rorb
inc
push
cmp
push
cmc
outsl
or
xor
mov
or
mov
cmpsl
icebp
dec
stos
bound
rcrb
out
cmpl
push
adc
rorl
inc
insl
addl
faddl
xchg
jle
jne
push
mov
in
push
fxch
lahf
repz
mov
dec
inc
lock
dec
sub
xor
mov
sub
js
ljmp
mov
mov
xchg
xor
xchg
add
push
dec
inc
pop
pop
and
inc
cmp
fistpl
and
sub
add
xor
push
xlat
jne
mov
xchg
js
push
xchg
pop
jle
aad
sub
sbb
sbb
pop
es
dec
or
lcall
mov
fidivrs
dec
lcall
pop
shll
dec
cmp
outsb
fbstp
sbb
cmpsb
ss
sbb
out
xchg
adc
push
dec
and
push
cmc
popa
pushf
xchg
push
cwtl
inc
mov
rorb
lret
and
jae
cli
mov
in
cltd
cmpsb
scas
push
imul
jno
lods
push
mov
popf
push
cmp
push
imul
in
repz
jne
cltd
sub
repz
fsubs
and
jecxz
lret
dec
out
jbe
adc
or
mov
jg
js
fiadds
jbe
push
outsb
mov
xchg
push
lahf
adc
sub
cwtl
xlat
jae
les
into
pand
jl
push
lods
jnp
inc
mov
mov
mov
dec
dec
inc
es
fdivrs
cmpsl
pop
mov
popa
and
out
loopne
mov
test
dec
movsl
mov
inc
insb
int3
lret
xchg
xchg
sbb
push
mov
jecxz
arpl
xor
lods
arpl
mov
mov
stc
xor
pusha
lahf
or
cmpsl
inc
aas
subb
pop
ja
adc
cmp
adc
cltd
scas
cmp
cmpsb
ja
mov
mov
dec
push
aam
mov
sbb
loopne
shr
jle
mov
dec
adcb
jge
call
into
pop
movsl
mov
lea
sub
push
mov
sahf
xor
mov
mov
pushf
dec
frstor
inc
pop
mov
jge
movsb
xor
add
mov
shll
push
ljmp
mov
mov
adc
lret
cwtl
pop
repz
fnstsw
add
lods
fnsave
out
sub
pop
test
test
pop
push
pushf
lock
jecxz
mov
mov
xchg
int
test
cmp
mov
shrl
in
in
rcrb
in
insb
xor
jb
jnp
sbbl
sbb
mov
outsl
mov
add
dec
pusha
sub
testb
je
and
mov
subl
sahf
inc
subl
mov
jecxz
stc
mov
movsl
lret
mull
outsl
lret
cmp
or
repnz
xchg
ljmp
aad
outsl
pop
roll
sub
or
std
pop
sbbl
loop
ss
mov
sbb
adc
inc
cmp
and
sbbb
js
or
popl
pop
out
push
xchg
mov
push
push
cmp
jae
test
sub
scas
fcoml
or
push
or
mov
lods
ret
push
addr16
sbb
cmp
movsl
jge
fs
add
add
or
in
and
cli
and
popa
add
rcrl
lods
jmp
insl
in
cltd
and
jb
nop
test
xlat
hlt
pop
fwait
cmc
dec
dec
jecxz
mov
mov
scas
inc
dec
jae
ret
fmulp
adc
and
test
dec
dec
sbb
jnp
push
rclb
sbb
lods
jne
add
inc
fs
jg
das
cs
out
inc
stc
push
scas
test
js
cmpsl
int
shrb
js
mov
lret
out
cmp
scas
fisubl
stos
insl
inc
hlt
sbb
orb
mov
adc
mov
out
jnp
xchg
push
ret
js
dec
fimuls
xor
lahf
nop
xor
mov
ljmp
inc
movsl
ret
add
jnp
jo
mov
add
sub
xchg
xor
pushf
sha256msg2
xchg
es
jg
pusha
push
sub
dec
push
xchg
cli
xchg
cmp
xor
push
push
shll
aam
imul
repz
jp
into
push
adc
mov
push
or
xlat
push
pop
lret
out
clc
sbb
fdivs
bound
mov
rcr
frstor
mov
mov
rclb
dec
mov
stos
sbb
push
xor
cmp
or
add
imul
or
cmp
out
arpl
out
sbb
jb
pop
sbb
sbb
mov
cmp
bound
adc
mov
aas
dec
lcall
data16
jnp
imull
xor
mov
addb
xchg
ss
data16
aas
leave
and
jae
cmp
or
cld
gs
les
movsl
les
cmp
dec
pop
jns
in
movsl
mov
bound
lcallw
dec
mov
or
sarb
pusha
push
xchg
xchg
or
mov
dec
fmulp
inc
scas
mov
sar
out
cmp
pop
in
cmp
dec
sub
cmp
sti
pop
or
mov
push
fwait
jl
fs
or
xlat
adc
ret
fidivs
cld
and
fsts
inc
xchg
setbe
jbe
xchg
jge
jno
or
xlat
pop
leave
bound
sbb
sarl
push
repnz
gs
add
call
in
mov
aaa
or
mov
out
test
cmpsw
jns
int
cltd
sbb
xor
fsub
iret
leave
or
pop
pop
pop
cli
cmpsl
xchg
push
jmp
fildll
xchg
sarb
push
push
shll
faddl
cmp
popf
adc
xchg
popf
lcall
scas
daa
aam
cltd
test
push
fildl
pushf
sbb
ss
into
cmp
cmc
dec
scas
test
pop
in
mov
xor
fwait
mov
aaa
test
lods
ds
lcall
movsl
adc
mov
pop
mov
mov
mov
push
mov
sub
and
fldenv
and
les
daa
data16
pop
cmp
cmp
jmp
jge
xchg
mov
iret
dec
stos
pusha
fcmovnbe
push
xor
push
sbb
pop
pop
cmp
test
fadds
dec
xor
fcoml
adc
mov
dec
add
lds
sti
or
mov
mov
fsubs
icebp
sbb
pop
imul
ds
xchg
dec
cmp
jl
dec
adc
or
inc
jecxz
shl
jmp
push
cmp
in
aad
jb
loop
add
into
pop
enter
pop
stc
sbb
sbb
pop
push
in
dec
pop
popa
inc
stos
add
outsl
adc
dec
cmp
jg
sbb
sub
jbe
cltd
mov
adc
inc
push
lods
mov
sub
lahf
into
sbb
pop
test
mov
mov
int3
bound
js
ds
pop
cmp
and
dec
rorl
sbb
and
pop
sub
sub
xchg
int
fwait
rcrl
aad
sbb
imul
cmp
sbb
scas
imul
fsub
fsubrs
or
dec
dec
cwtl
sub
insb
jae
mov
addl
loopne
or
mov
movsl
loope
rcl
push
mov
in
aas
sbb
fimull
xlat
jnp
or
xchg
cmpsl
cmp
pushf
dec
push
and
mov
imul
pop
sti
lods
repnz
xor
insl
xchg
js
inc
test
sub
jmp
sahf
pusha
popf
rolb
pop
test
jecxz
xor
pop
idivl
imull
out
or
and
aas
lock
pusha
fisttps
mov
or
sbb
into
fldlg2
jg
push
scas
leave
outsl
push
out
push
jecxz
xchg
in
xor
and
mov
sub
jg
xor
mov
movl
in
and
add
int3
mov
fldl2t
repz
cld
ja
inc
fisubl
in
adc
cmp
fisubl
push
andl
sbb
ret
pop
aaa
into
in
call
insb
ss
ds
xor
sbb
dec
mov
xlat
jl
dec
rcrl
out
fcmovnb
imul
or
mov
out
into
les
jne
cs
mov
jmp
xor
mov
add
out
mov
mov
rolb
xor
adc
pop
ret
dec
iret
mov
fcmovnbe
es
addr16
or
pop
lods
cltd
cmpsl
xor
or
test
mov
xchg
xchg
repnz
addr16
dec
or
push
push
dec
add
dec
add
adc
jge
mov
and
ja
in
sti
clc
cld
dec
lcall
lods
dec
add
adc
adc
and
scas
lcall
jnp
cmp
icebp
sbb
cs
pop
stc
inc
in
mov
sbb
push
xor
and
push
aam
sahf
push
cltd
loope
mov
pop
mov
pop
cmp
inc
ds
mov
cltd
pop
iret
scas
lret
dec
dec
addb
mov
cmpsl
xchg
sbb
shlb
out
cmpb
xor
movsl
mov
or
add
adc
mov
insb
scas
nop
andl
mov
mov
fbstp
repz
loopne
mov
cmp
pusha
cmp
ja
pop
dec
xor
mov
push
xchg
or
and
outsl
aad
cmp
popf
sbb
xlat
sti
jbe
add
subl
xchg
xchg
imul
jp
sahf
imul
fisubs
loopne
jnp
shll
adcb
jg
lahf
or
inc
pop
and
add
jns
arpl
xor
aam
test
mov
adc
push
dec
jb
mov
insl
lock
stc
rol
xchg
dec
jbe
iret
sub
popf
xchg
mov
aam
mov
pop
dec
int
mov
sbb
popa
cmp
xchg
jns
sub
cli
jmp
fisttpl
inc
pop
sub
add
push
xor
mov
xchg
cli
and
cmp
loopne
mov
inc
idivb
mov
xchg
jb
das
cmp
ja
cmpsb
das
lret
enter
jecxz
daa
push
in
dec
sub
cli
or
inc
movsb
mov
loop
aaa
ja
jne
test
jle
loope
ss
arpl
push
push
test
mov
jge
mov
push
pusha
pop
xchg
mov
xor
lcall
xor
iret
lcall
ret
into
sbb
mov
or
pop
mov
and
xor
pop
dec
push
jmp
xchg
cmpsb
in
fiadds
pop
in
repnz
sub
loop
dec
mov
pop
or
pop
sub
push
cmp
jno
scas
adc
test
fwait
shl
sub
cmpsl
jbe
sbb
fdivs
ds
mov
sarl
adc
inc
or
add
inc
cmpsb
fdivrl
push
rcll
sbbl
data16
das
sbb
and
mov
popa
jbe
or
xchg
mov
inc
in
sbb
jno
jns
aad
xor
sub
xchg
cltd
mov
ljmp
sub
aas
lods
sub
fcomip
imul
sbb
pop
mov
jle
xor
mov
xchg
cmpsb
daa
nop
mov
mov
dec
popa
sub
push
pop
adcb
clc
xor
inc
cmp
and
pop
hlt
mov
push
mov
cmp
cwtl
cvtpi2ps
js
or
ss
movsl
mov
sarl
mov
in
sbb
icebp
adc
adc
mov
inc
daa
cmc
adc
mov
xchg
jg
movsl
xor
pusha
cmp
jne
fs
xchg
iret
pop
mov
jp
cld
jne
mov
add
scas
sahf
and
scas
sub
sti
aas
sbb
int3
xlat
std
popa
adc
jo
fs
dec
dec
insb
push
movsb
mov
repz
pop
push
adc
add
push
jge
or
scas
jl
imul
inc
add
add
faddl
fcoml
sbb
aaa
loopne
xchg
bound
test
popf
or
add
mov
sahf
push
adc
out
pop
sbb
rorl
mov
jmp
pushf
scas
xorl
or
sbb
jae
sub
and
jb
pushf
push
cmp
int
pop
ret
sub
xchg
xchg
mov
jecxz
stc
lcall
xchg
mov
mov
jne
xchg
mov
sub
ds
pop
xchg
mov
add
adc
sbb
lods
ljmp
shlb
aaa
cmp
out
sbb
jns
pop
subl
cmpxchg
mov
pop
insl
test
xor
xor
pop
test
out
stc
cmp
mov
pop
pop
pop
int
test
fistps
mov
icebp
mov
sbb
jo
xchg
jb
mov
int
pop
jp
cwtl
xchg
pop
mov
dec
cmp
jl
cmpsl
push
or
mov
pop
fsin
push
into
jbe
pop
rcll
jo
rorb
sbb
adc
mov
out
leave
sbb
popf
sub
in
dec
jmp
jo
clc
lock
pop
sub
mov
inc
mov
mov
adc
lret
mov
movsl
rcrb
and
push
fsts
dec
add
xor
lds
inc
outsl
xchg
mov
adc
cmp
cmpsl
in
mov
faddl
aaa
out
cli
insb
lahf
push
call
ja
pop
push
pushf
lret
sub
pusha
mov
push
mov
xchg
arpl
out
ljmp
aam
push
dec
out
lods
lret
in
mov
ds
daa
in
dec
xor
inc
and
fs
clc
in
push
xchg
and
aad
lcall
scas
inc
push
ss
xchg
inc
mov
adc
je
subl
cmpsb
jmp
push
sbb
jmp
pop
js
ret
xchg
dec
mov
lahf
jl
lret
and
pop
shll
add
pop
iret
addr16
adcb
and
leave
aaa
dec
mov
call
test
or
popa
fmuls
lcall
inc
mov
ret
pushf
push
xor
repnz
adc
sub
out
jecxz
xlat
jge
push
or
repnz
das
pop
adc
inc
pop
cmpsb
mov
sbb
aam
cmp
push
mov
ljmp
xacquire
sbbb
sbb
ret
test
mov
push
cmpsl
xor
shll
insb
int3
shrl
aad
imul
les
cmpsl
push
lock
outsb
cmp
cmp
mov
data16
loopne
mov
cmc
inc
sti
mov
push
insb
aaa
es
push
cltd
or
rorb
cli
sbb
fistl
incl
pushf
sbb
fstpl
fisubrl
add
cmpsb
mov
xchg
push
rorb
pop
outsl
lds
pop
incl
push
xchg
js
xchg
imul
and
mov
ljmp
and
adc
sub
pop
insb
add
inc
outsl
lret
aam
cmp
cmp
icebp
inc
xor
iret
xchg
and
std
cltd
and
pop
into
mov
jbe
xor
push
mov
xor
sahf
push
cmpsb
fidivrl
imul
into
mov
sbb
movsb
mov
rclb
add
push
orl
push
inc
addr16
jl
sahf
out
sub
lods
ret
lcall
or
fwait
cmp
out
mov
iret
scas
push
add
int
adc
xchg
push
scas
add
inc
iret
add
adc
xchg
jg
fldcw
movsl
push
mov
aam
push
pop
cmp
adc
in
adc
adcb
outsl
mov
paddusw
sbb
push
hlt
pop
pop
daa
mov
pop
ret
jmp
jbe
jp
ret
cmpsb
cmp
jns
push
daa
insb
push
jae
popa
out
adc
pop
inc
adc
int3
inc
adc
cli
xchg
cmpsb
inc
jns
inc
fdivrl
inc
stos
mov
leave
sub
xor
inc
jecxz
xor
xchg
cld
repnz
dec
ss
ds
clc
pop
scas
leave
or
and
adc
outsl
sub
pop
or
adc
mov
mov
test
loop
or
mov
sub
mov
mov
dec
or
jle
lds
fcompp
in
push
fcmovu
adc
sbb
outsb
push
mov
sahf
xchg
ss
push
adc
xor
and
sub
mov
adc
test
vpshlb
inc
notb
bound
leave
dec
repz
lret
mov
cmp
fwait
mov
add
movsl
jne
mov
sbb
icebp
aad
mov
in
int
adc
xor
jo
popa
and
and
add
cmp
dec
and
dec
dec
pop
mov
lret
nop
dec
adc
xchg
adc
hlt
pop
and
dec
pusha
mov
or
sub
aad
add
es
lods
sbb
fisubrs
inc
aam
push
in
mov
int
insl
cli
iret
dec
loopne
cmpsb
jg
and
out
call
sub
fdivs
add
xor
and
cmc
mov
xor
lds
mov
fs
popf
aam
mov
or
andb
ja
rcr
add
pushf
or
pushf
push
and
sti
or
mov
movsl
fidivrl
jno
out
and
pop
imul
sub
mov
xor
lret
dec
icebp
sub
mov
jnp
and
and
nop
cmc
and
jl
das
popa
push
pop
inc
or
scas
imul
in
sarb
les
clc
pop
nop
popf
dec
pop
out
adc
clts
mov
dec
mov
mov
repz
and
jg
sub
xchg
rorl
pop
cld
in
iret
imul
scas
js
inc
int3
orl
mov
shll
das
push
ret
arpl
and
ljmp
mov
shlb
pushf
out
mov
or
mov
xorl
adc
cli
popa
js
cwtl
dec
popa
lahf
pop
mov
dec
push
lods
sub
xor
mov
fcmovbe
pop
xchg
xor
sbb
rcll
daa
nop
lahf
push
movsl
iret
fsubs
and
or
stos
jecxz
rcl
cmc
add
test
sarl
mov
les
pusha
xchg
aaa
and
mov
rorb
aaa
sbb
insl
inc
jmp
xor
cmpb
xchg
xor
mov
movsl
mov
ss
pop
fiadds
cwtl
and
mov
ljmp
arpl
adc
cltd
push
fiadds
clc
mov
xlat
pop
and
and
or
jno
add
lock
cmpsl
and
xor
popf
fiadds
lcall
add
lcall
outsl
fidivrl
cmpsl
or
push
lret
mov
mov
fmul
pop
mov
sbb
jb
push
mov
sarb
or
xchg
lret
lret
adc
add
jno
pop
push
or
or
mov
sub
mov
inc
cmpsb
mov
mov
popa
fwait
inc
sahf
mov
addb
and
cmpsl
leave
stos
pop
fidivl
sub
lcall
movsb
outsb
xchg
xchg
ljmp
mov
and
jnp
mov
fimull
es
push
pop
mov
popl
enter
jnp
push
cwtl
xchg
lgs
mov
ss
lcall
dec
or
jo
add
push
mov
mov
xchg
pop
std
mov
into
jns
js
sti
push
aad
repz
sahf
in
int
movsb
mov
bound
mov
xor
in
sub
xor
pop
xor
pop
movsb
in
mov
xchg
mov
pop
dec
add
int
mov
or
mov
xchg
mov
popf
xorl
std
push
mov
jnp
pop
imul
loope
enter
cmp
enter
push
add
and
jg
push
lock
xorl
push
into
cmp
testb
jae
out
cmp
mov
scas
pop
rorb
rcll
mov
add
ret
jae
ret
mov
jp
cmc
andb
cmp
dec
push
push
mov
mov
dec
push
cmpsb
add
aas
xor
push
ror
mov
mov
add
or
and
dec
sbb
mov
subl
xor
arpl
fsubr
jno
xor
sbbl
cwtl
mov
daa
and
pop
fwait
xchg
mov
jno
cmp
rol
bnd
lods
mov
fiaddl
aam
into
or
cmp
iret
daa
xchg
outsl
lods
arpl
loopne
mov
aaa
jne
ror
lea
enter
and
imul
enter
and
iret
mov
sbbl
fistpl
in
push
dec
out
sbb
mov
xlat
or
nop
mov
dec
es
jmp
lds
push
and
push
popf
ret
dec
loope
cmp
sub
adc
dec
pop
lds
adc
sbb
arpl
pop
in
xchg
stos
xor
fisttpl
iret
jo
call
xchg
ss
adc
loopne
std
pop
jmp
imul
pusha
lahf
mov
inc
sub
xlat
rorb
sub
push
movsb
popa
pusha
or
dec
jo
mov
xor
mov
lods
add
xchg
lea
add
cli
adc
std
je
inc
xor
pusha
test
adc
inc
rorb
pop
pop
xchg
fisttpl
iret
cmp
rclb
fdivl
sbb
push
xor
add
push
aaa
aam
cwtl
leave
push
dec
popf
in
ficompl
and
mov
cmp
cmc
mov
les
adc
imul
sti
cmp
add
cmp
movsb
stos
icebp
and
mov
dec
mov
xchg
fiadds
mov
sub
shrb
gs
push
outsb
push
push
jp
adc
mov
pop
mov
push
dec
fisubl
aas
xchg
mov
xchg
jb
repz
mov
fs
xor
jno
stos
dec
cmpsl
and
out
mov
cmpsb
cmp
dec
jnp
fadd
insl
xchg
add
mov
mov
pop
mov
scas
mov
pop
call
add
cli
into
rorl
mov
out
mov
mov
ja
ret
sbb
out
xchg
outsl
adc
mov
mov
push
lahf
push
into
or
outsb
sbb
mov
mov
rol
lret
and
and
leave
rorl
sub
sahf
inc
sbb
fistps
jl
xchg
dec
rcll
cmp
gs
ror
mov
test
xchg
xchg
add
push
andb
inc
mov
jp
int3
jle
imul
fbstp
dec
dec
gs
int
sbb
adc
xor
stc
lcall
mov
jnp
jmp
sub
adc
xchg
shrb
mov
jl
dec
daa
and
lds
sub
ja,pt
mov
rcll
jmp
fadds
test
out
movsb
aam
xor
icebp
inc
push
sub
js
cmp
adc
xchg
fs
xor
fisubrl
and
add
ficomps
pop
push
sub
mov
add
xchg
pop
aad
mov
pop
leave
xchg
outsl
lods
add
das
sub
adc
jecxz
xchg
addr16
mov
fstl
jg
sbb
jl
pop
out
sbb
cli
test
pop
push
inc
cli
call
add
mov
or
cmovno
jge
push
add
pusha
adc
cmpl
cmpsb
sbb
sbb
les
test
pushf
xor
push
pop
scas
mov
pop
imul
ret
sbb
fs
test
jns
cld
mov
mov
mov
testl
das
stc
test
fnstsw
push
jmp
mov
xor
mov
dec
push
xchg
xor
mov
lds
xor
mov
es
cmp
mov
jnp
sub
sub
and
sub
cmp
js
sub
fisubrl
jns
nop
leave
mov
pop
sub
push
arpl
mov
fbld
jle
add
dec
js
xchg
push
jl
stos
xor
push
nop
jg
es
testl
and
jno
adc
dec
stos
leave
out
adc
dec
repz
dec
jle
jb
pop
out
sub
cmp
sti
sub
ljmp
adc
mov
mov
pop
leave
subb
push
loope
out
into
fprem1
test
ljmp
ja
mov
fldcw
mov
inc
or
sbb
xor
cld
ja
sub
push
cmc
pop
stos
rcrb
fwait
scas
in
mov
jge
pop
insb
jns
or
int3
xor
fdivrl
add
xor
sub
imul
lods
sbb
jo
in
enter
lcall
stos
hlt
inc
ficompl
mov
and
push
pop
sub
cs
xor
ja
fwait
mov
add
xchg
push
lret
out
push
adc
pop
jp
mov
cmp
add
adc
jecxz
jnp
into
lea
ljmp
cmpsb
sbb
outsb
jbe
jb
sbb
cli
dec
sbb
xchg
mov
dec
sub
lret
enter
pop
das
xchg
les
xor
push
std
pop
dec
fcmovnbe
add
adc
and
movsb
popf
repnz
clc
xor
push
jnp
or
mov
xchg
fisubrl
pop
sub
sub
popf
mov
pop
inc
pop
xchg
jae
repz
fmul
or
lods
dec
test
xor
pop
mov
jmp
sbb
rorb
fwait
lret
in
test
adc
dec
push
adcl
pop
jae
adc
lods
push
jge
push
lock
push
lahf
jns
aas
xor
or
and
sub
pop
mov
mov
xchg
push
ja
shl
jns
rol
fucom
mov
icebp
sbb
out
dec
adc
mov
push
ret
fnsave
sbb
jmp
dec
jmp
mov
repz
ss
xchg
xchg
push
mov
fcmovu
iret
xor
push
test
icebp
xchg
sbb
pop
sahf
loope
xchg
int3
cmpsb
add
icebp
mov
sahf
sahf
or
xor
mov
adc
sbb
mov
adc
into
out
aam
and
cltd
lret
pop
lock
cltd
repz
pop
lcall
mov
daa
imull
push
testb
ljmp
repz
ljmp
stos
inc
xor
lret
lock
mov
test
add
sub
clc
in
pop
fs
jbe
push
loop
xchg
inc
fists
das
aad
pop
jno
cmpsl
stos
cmp
cli
sti
xchg
mov
mov
pop
lods
iret
scas
pop
adcl
cwtl
out
sbb
daa
dec
sti
mov
and
cmp
mov
dec
xchg
cmp
cmp
rolb
imul
jl
mov
test
adc
xor
aas
sbb
push
xor
ficompl
leave
adc
test
xor
jle
mov
sbb
loop
and
and
and
pop
cmp
add
and
repz
jecxz
sbb
and
jnp
pop
clc
cld
out
mov
das
lcall
sub
sahf
pusha
fwait
jge
dec
push
popa
fidivs
ffree
add
xchg
lcall
mov
ljmp
mull
jl
jo
jo
jl
xchg
decl
adc
mov
adc
inc
fldl
ja
jl
sub
stos
add
mov
xor
xchg
decb
movsl
push
jl
stos
jp
mov
mov
cwtl
in
jmp
aaa
lock
mov
inc
adc
xchg
cs
push
outsl
fimull
or
jl
push
lret
lods
aad
mov
push
mov
int3
dec
pusha
mov
loopne
stos
aaa
mov
jno
jb
ss
dec
and
imul
dec
and
mov
cmp
rorb
icebp
ja
mov
ds
pushf
cmpb
add
out
sbb
or
enter
stos
mov
xchg
mov
lea
leave
cmpsb
pusha
imul
es
inc
xor
add
lds
xchg
xor
push
pop
ljmp
mov
call
test
pusha
or
xorl
int3
xlat
dec
jg
dec
stos
ret
imul
push
hlt
repnz
bound
inc
fsubrs
rcll
jl
mov
and
js
pop
dec
filds
or
xchg
std
jecxz
cwtl
jmp
mov
inc
xchg
mov
jge
mov
stc
adc
iret
and
shll
test
icebp
hlt
lds
out
movsb
add
or
stos
mov
fldcw
fistpl
jecxz
fwait
outsb
pop
dec
fidivrl
pusha
xlat
shrb
test
call
scas
jmp
add
lcall
push
fsub
sbb
pop
mov
jbe
xchg
push
inc
das
scas
movsl
push
out
adc
inc
mov
xchg
xor
fsubl
dec
sbb
nop
sbb
mov
xor
inc
xchg
es
xor
ret
icebp
mov
adc
or
jge
loope
mov
cmp
add
fwait
dec
test
movb
lock
cwtl
jmp
mov
ret
mov
push
cmp
and
inc
fs
iret
inc
shll
cli
fnsave
lret
mov
inc
cmp
dec
sbb
and
pusha
cs
or
mov
xchg
fs
cld
cs
cmc
pop
repnz
loop
mov
xchg
push
repz
scas
leave
jbe
sbb
lcall
pop
sbb
inc
ret
and
push
outsl
xchg
dec
gs
fwait
dec
adc
pop
dec
adc
ret
jbe
mov
mov
into
cmp
jmp
add
fildl
lahf
loopne
jo
and
sub
jmp
sbb
pusha
shll
mov
adc
and
test
lahf
leave
push
cmp
xchg
cmp
mov
jnp
add
xor
call
fwait
pushf
je
daa
inc
cmp
xor
jbe
icebp
or
or
and
inc
call
pop
das
and
sub
push
je
mov
pushf
mov
mov
mov
jg
sub
or
fldt
mov
je
dec
mov
dec
inc
xor
sub
popf
mov
xchg
testb
insl
aam
push
fwait
adc
mov
jg
sub
inc
aad
jp
jle
push
xchg
mov
jae
lret
pop
ljmp
aad
leave
int
std
jl
jbe
test
shlb
pusha
jae
pop
jp
add
into
xor
addr16
sbb
jo
mov
push
jae
inc
nop
xchg
xchg
hlt
idivb
pop
push
out
inc
scas
pop
xchg
jne
arpl
int
ficompl
cltd
push
or
shr
es
std
ret
cld
jp
in
sub
fwait
mov
sub
mov
adc
por
push
push
sub
pop
pop
clc
hlt
jle
or
mov
in
outsl
cld
jge
inc
imul
xor
lods
seta
ret
loope
mov
lock
add
pop
lock
and
cli
inc
movl
add
out
aad
cld
adcb
mov
mov
stos
mov
pop
int3
dec
lods
sub
pop
mov
mov
movsb
popf
mov
sbb
lods
loope
ret
inc
mov
pop
and
inc
ds
sti
mul
test
inc
aam
cmpsb
pop
adc
repz
pop
scas
shll
xchg
sbb
outsl
cs
jae
in
inc
and
xor
addr16
or
je
mov
ja
and
int
mov
add
dec
fsts
cmp
andl
movsb
ret
ret
mov
pushf
jns
jle
jnp
js
push
je
adc
push
push
push
cli
adc
jno
lea
mov
clc
stos
in
aad
jns
lret
loop
jb
ja
mov
mov
rcrb
es
pop
icebp
dec
test
subb
xor
adc
dec
mov
dec
dec
sub
mov
sub
adc
cmp
aas
mov
jnp
dec
push
jnp
ret
or
jmp
mov
shlb
mov
push
dec
mov
jle
out
fs
ret
xchg
cmp
int
xorb
mov
mov
fwait
cmp
das
mov
jp
add
les
push
mov
jb
aas
adc
sbb
es
or
pusha
xchg
loopne
frstor
std
or
sti
push
fdivl
aaa
lret
sub
sbb
out
sbb
jbe
out
pop
lret
out
pop
sbb
sbb
inc
rorb
and
pusha
fisttpll
jae
xor
lret
jae
out
dec
cmp
xor
mov
mov
leave
sub
cli
mov
pop
mov
rol
xchg
jecxz
dec
gs
negb
push
inc
clc
sbb
sbb
push
mov
xor
jl
mov
in
or
or
hlt
ss
je
fsubrs
or
outsl
nop
pop
jbe
int
lds
cmp
jg
fdivrs
xor
add
loopne
lcall
mov
mov
es
xchg
mov
lods
jg
in
jmp
push
nop
or
cwtl
bound
adc
and
cwtl
inc
push
fcmovb
movsl
je
xor
pop
ljmp
ss
rol
xor
inc
out
cmpsb
xchg
hlt
push
out
jp
push
pop
cmc
sbb
ret
push
push
xchg
and
xchg
push
sub
xchg
or
ficoml
fbstp
repz
push
and
rcrb
in
in
pop
sahf
jmp
test
cmc
xlat
sub
and
bound
in
cltd
shl
mov
mov
jmp
daa
cli
mov
and
pop
cs
sub
sar
inc
and
xor
test
data16
js
int3
test
pop
mov
mov
jecxz
pop
pop
pushf
imul
cmp
jb
das
cmp
push
cltd
je
in
adc
or
cwtl
cld
outsb
cs
lds
xlat
popl
dec
xor
mov
fwait
and
and
adc
xor
mov
inc
lock
xor
adc
xor
dec
sti
cmp
in
inc
cltd
or
imul
mov
shlb
mov
mov
mov
sbb
bound
test
push
pop
mov
mov
sub
mov
arpl
cmp
call
mov
mov
ret
ret
mov
movsl
add
mov
sub
int
test
in
popa
pop
xchg
insl
lds
call
cs
jae
xchg
cmp
pop
mov
mov
sbb
xor
jecxz
push
lock
aad
add
jp
mov
mov
fdivr
jnp
push
sbb
pop
out
mov
call
movsb
inc
cmp
bound
or
push
push
or
jb
ret
push
repz
cmpsl
fwait
ret
bound
xlat
fisttpl
popa
sub
sar
pop
rorb
mov
inc
hlt
jbe
rorl
inc
insb
mov
movsl
mov
mov
aas
fsubl
pop
ret
insl
mov
jmp
lods
push
sahf
stos
dec
push
dec
adc
aad
pushf
adc
les
pushf
dec
cmpsb
adc
adc
pop
popf
mov
cmp
das
add
into
or
push
lret
xlat
pop
mov
into
jno
in
jmp
test
mov
pop
jmp
sbb
add
add
andb
rcrb
xchg
mov
mov
adc
inc
ja
cwtl
xlat
mov
inc
add
aas
lcall
imul
jg
inc
push
insl
cmpsl
or
hlt
jnp
dec
xchg
divl
xor
pop
xchg
dec
stc
inc
mov
bound
xor
jne
mov
cld
xchg
js
int3
pop
shlb
dec
in
sub
push
enter
je
and
notb
xor
xor
cmp
or
inc
stos
out
mov
dec
mov
and
movsl
leave
xor
pop
xor
jecxz
mov
push
sahf
jno
outsl
lods
and
dec
xchg
push
adc
jno
into
lahf
rep
aad
add
bound
movsl
scas
aas
and
adcb
sahf
mov
mov
shll
mov
loopne
jb
xchg
sbbl
ret
adc
jns
test
inc
daa
jae
and
int
repz
daa
add
pusha
in
sbb
jg
test
es
aas
sbb
push
dec
xchg
dec
std
cwtl
push
add
adc
mov
fwait
lahf
imul
arpl
adcl
flds
push
insl
jmp
call
adc
cwtl
mov
push
inc
mov
aas
shlb
loopne
xchg
movsb
and
mov
mov
sbb
mov
imul
nop
mov
mov
ret
push
cmp
clc
test
sub
jbe
add
sbb
fidivl
test
repnz
lret
loop
and
xor
mov
or
popa
nop
push
repnz
es
cld
jno
loope
sub
jg
xchg
je
dec
js
mov
dec
mov
adc
push
xchg
imul
or
mov
mov
adc
outsw
aad
outsl
fistpl
out
scas
xchg
imul
mov
stos
push
jns
dec
hlt
nop
mov
mov
loopne
jge
es
adc
sub
xchg
lea
xchg
xor
enter
inc
arpl
sahf
jae
js
cmp
jne
test
mov
out
mov
cltd
bound
lret
xchg
std
subb
or
adc
movsl
jno
cmp
jecxz
or
mov
fbld
clc
sub
push
into
xor
or
cmp
cld
cmp
xchg
mov
imul
add
mov
stc
iret
cld
pop
repz
xchg
and
je
popa
sbb
repz
xlat
mov
lods
pop
mov
repnz
cmp
dec
fcoms
repnz
bound
xchg
jmp
cmp
or
add
pop
outsb
sub
iret
and
pop
and
cmp
in
decb
int
and
int3
mov
pop
xor
fs
lods
insb
inc
cmp
jge
jb
push
es
inc
adc
cltd
std
ds
add
adc
sbb
mov
popf
arpl
ja
sbb
xlat
out
rcrl
cmp
add
dec
mov
notl
sub
aas
mov
int
pop
outsb
or
xor
out
inc
xorb
std
cld
pop
pop
ror
push
mov
stos
stos
push
int
add
ficomps
data16
and
and
adc
cltd
outsb
add
mov
push
pop
insb
cmp
adc
inc
cmp
add
insl
pop
fucomip
sbb
adc
or
mov
sbb
push
stc
mov
pop
pop
insb
and
mov
xchg
mov
movsl
mov
mov
ljmp
jno
mov
cli
out
xor
push
popa
test
ds
xchg
mov
add
aas
push
push
xchg
outsl
ljmp
dec
sbb
mov
mov
and
inc
push
sub
xadd
repnz
scas
push
mov
sub
sti
aam
cmp
push
out
popf
sbb
lret
in
arpl
cmpsl
pop
xor
clc
mov
sbb
icebp
cmpsl
inc
cmpsb
sub
bound
stc
mov
and
sub
test
jl
std
inc
mov
pop
lods
lahf
mov
inc
inc
pop
push
add
push
daa
std
clc
cmp
add
add
xor
movsb
jle
js
xchg
bound
push
jle
xor
cmpsb
test
inc
mov
sub
sub
rcrb
sbb
inc
pop
pop
pop
cltd
xor
xorb
add
mov
inc
adc
imul
mov
xor
pop
popf
xor
push
sub
jl,pn
cmpsb
mov
adc
aam
inc
outsl
pushf
enter
or
rcl
and
mov
sti
enter
clc
xor
push
inc
cmp
adc
pop
jg
dec
pusha
int3
insl
cmpsb
orb
jae
mov
cli
aaa
cmc
add
adc
jl
enter
mov
or
iret
enter
cli
sbb
into
push
loope
frstor
inc
negb
stc
cmpsb
xchg
lahf
xor
test
mov
xchg
xchg
int3
repz
testb
xchg
xor
or
lcall
jbe
fildll
cmp
sbb
cmp
inc
xchg
cltd
mov
mov
adcb
gs
int3
push
outsl
scas
stc
push
xlat
out
xlat
test
xor
adc
ret
jecxz
cltd
cmp
mov
test
jp
mov
addb
movsl
pop
outsb
cmp
stc
imul
rcrl
push
addb
dec
and
pop
arpl
repz
pop
popa
sub
rclb
xor
pop
sbb
cmpb
ds
mov
lcall
xchg
or
add
mov
push
mov
xchg
insb
xchg
mov
test
pop
xchg
lret
jae
mov
push
repnz
in
push
in
mov
dec
jl
adc
pop
jne
in
mov
test
test
jg
les
shl
lcall
scas
pop
xor
inc
pusha
cmp
push
sar
jmp
int3
inc
xor
sbb
repnz
mov
imul
hlt
shlb
inc
pop
out
adc
lds
jmp
mov
push
mov
dec
test
or
stc
shrb
je
or
sbb
jns
mov
pop
mov
pop
xchg
pop
mov
testl
inc
out
sti
inc
mov
or
pop
add
pop
adc
lret
stos
stc
jae
in
lcall
or
sbb
in
sbb
je
and
xchg
and
or
xchg
xchg
repnz
mov
push
xor
inc
pop
ss
sub
hlt
fadd
cld
scas
outsb
adc
push
andb
das
shlb
jp
cmpsl
jb
std
sbb
nop
loop
mov
fisubrs
mov
sub
adc
xchg
movsl
lods
dec
xchg
adc
sbb
lods
push
push
lret
push
inc
lock
movsb
int3
fstpl
dec
lock
call
pop
push
stos
cmp
inc
cmp
aas
inc
loopne
push
and
xchg
inc
int
lret
inc
mov
or
lret
inc
test
out
push
push
outsb
lahf
hlt
out
hlt
mov
fimuls
fbstp
popf
je
js
out
pop
xlat
lret
add
inc
push
pop
and
push
xchg
mov
mov
sub
sahf
pushf
mov
mov
mov
pop
fs
adc
adc
jbe
sub
push
xor
dec
push
stc
sbb
or
outsl
ss
imul
push
loope
fs
popf
jp
or
add
jo
test
mov
shr
mov
dec
sbb
ret
sub
je
enter
ret
pop
pop
or
sub
sub
dec
ja
rcrl
ds
iret
xor
mov
mov
test
mov
pop
jae
push
jo
xchg
ficomps
push
push
das
fnsave
push
xor
les
arpl
jo
in
out
push
dec
or
mov
sub
es
leave
pusha
jno
adc
clc
sub
mov
repz
cmp
push
mov
xorl
bound
xchg
ja
cvtps2pd
clc
js
jno
sbb
inc
in
test
fbld
mov
xor
cwtl
lock
gs
pop
insl
outsb
mov
scas
in
xchg
pop
repz
loop
repz
add
lret
pop
xchg
stc
shl
jo
lods
aad
push
add
in
fcmovb
xchg
add
pop
adc
and
call
dec
cmpsb
cli
ds
scas
clc
incb
lcall
pop
arpl
push
insl
in
popf
out
inc
clc
and
xchg
pop
cmp
lret
out
in
ret
jbe
jecxz
lods
xor
or
cmp
mov
pop
daa
cwtl
jae
icebp
push
movsb
fcoml
cmpsl
cmp
lret
add
cs
adc
pop
inc
mov
mov
enter
out
cmp
outsb
mov
push
mov
loope
sahf
es
repnz
vcvttss2si
xor
idivl
aad
je
pop
rorb
mov
clc
ja
rorl
test
lods
sub
jle
mov
mov
jmp
mov
mov
jno
loope
push
pushf
xchg
hlt
out
push
sahf
lahf
sub
mov
shlb
cmp
inc
mov
dec
push
lahf
pop
sahf
xchg
sbb
jl
add
sbb
inc
pop
pop
pop
imul
or
mov
movsl
xchg
lods
xor
ds
push
sub
loopne
jb
xchg
jmp
repz
sti
inc
add
mov
stc
xor
mov
cmpsl
xchg
outsb
in
sbb
das
push
pop
pop
mov
sti
mov
mov
or
sbb
mov
sbb
jg
ds
dec
jg
cmp
ret
mov
cmc
mov
cmp
fnstsw
pop
push
xor
shrb
mov
das
inc
sbb
or
icebp
jecxz
test
lock
xchg
decb
jns
in
mov
sar
push
cs
adc
cwtl
sbb
push
pop
icebp
sbb
cmpsl
jp
aad
loopne
dec
jnp
and
cmp
dec
idivb
cs
imul
sub
fwait
icebp
lds
add
mov
mov
mov
dec
sbb
loopnew
mov
push
addl
fs
fbld
stc
jbe
xchg
iret
scas
inc
push
mov
push
int3
dec
add
push
popa
dec
inc
push
dec
pop
or
sub
test
mov
enter
ljmp
aam
jge
nop
imul
lret
pop
fistl
pop
push
adc
dec
cmp
xor
adc
xchg
adcb
lea
out
rolb
loope
pop
adc
sti
adc
ja
popf
sbb
pop
fsubp
fndisi(8087
in
cmc
cmpsl
xchg
mov
add
outsb
aam
push
dec
in
pop
mov
insl
adc
pop
mov
std
lea
mov
push
repz
push
ret
mov
inc
pop
mov
mov
das
das
or
out
sub
out
rcll
add
insb
mov
push
test
ficoml
add
pop
mov
jno
pop
push
pop
in
xor
popf
jle
push
std
lea
lock
mov
cwtl
into
pop
pusha
push
hlt
or
cmp
cmc
xchg
inc
sti
xchg
cli
xorl
sbb
mov
xchg
loope
clc
jp
call
mov
shlb
mov
fadd
mov
in
ret
test
dec
or
cs
fnstenv
lea
lock
cmp
mov
int
dec
cld
out
outsl
jae
arpl
inc
les
push
insl
sub
mov
mov
and
adc
xor
leave
mov
push
pushf
and
scas
aas
jle
popa
and
repnz
adc
mov
pop
pop
fwait
lcall
or
lods
rol
inc
add
inc
xor
sarb
inc
insl
inc
int
mov
add
push
pop
inc
les
test
xchg
lcall
pop
adc
xlat
cltd
ja
roll
aam
fnstsw
mov
xchg
jmp
ja
insl
fnsave
stc
outsl
aas
mov
addr16
scas
adc
test
cli
inc
jp
hlt
flds
mov
or
adc
sub
xchg
subl
xchg
add
stos
adc
push
sbb
jo
add
fwait
cld
xor
cli
leave
addr16
mov
fwait
pop
ror
push
stc
mov
clc
sub
push
push
gs
lea
lret
mov
cmpsl
xchg
fwait
hlt
jp
and
icebp
rolb
mov
jp
loop
pop
lahf
stos
addb
aas
mov
ljmp
sbb
jns
es
jne
dec
and
inc
or
jmp
mov
es
adc
es
dec
xchg
or
fs
jnp
mov
std
mov
mov
lock
addr16
cmc
jne
lcall
adc
sarb
das
mov
stc
mov
iret
ret
dec
les
and
push
ret
jmp
jb
xlat
cli
and
stc
xchg
inc
aam
jae
pop
xor
repnz
mov
bound
xchg
xor
rclb
in
cmp
dec
je
fs
xchg
scas
mov
fdivrl
test
imul
imul
sbb
cmp
sub
enter
jle
adc
hlt
xchg
ret
cmpsl
mov
ja
push
les
xor
movsl
cli
int3
cld
pop
sbb
mov
mov
and
icebp
sub
in
mov
popa
ja
adc
lea
cmpsl
arpl
jle
xor
dec
lret
jecxz
mov
pop
enter
mov
aad
aas
push
aad
xchg
call
add
inc
jmp
push
pop
xor
aaa
test
mov
push
fcmovu
pop
mov
sub
and
into
sbb
mov
mov
std
or
xchg
add
mov
or
movsl
loope
sub
std
fwait
inc
scas
push
mov
dec
orl
negb
pop
xchg
imul
notb
adc
stc
daa
pushf
inc
aad
fistps
mov
dec
mov
xor
call
or
add
pop
push
inc
jmp
lock
lods
loope
repnz
pop
aaa
cmpsl
cmp
repz
jns
inc
or
or
pushf
ljmp
inc
adc
or
sbb
mov
xchg
divb
sub
fstps
pop
lret
pop
cmp
loope
les
inc
clc
xor
sub
cmp
push
fld
or
xorps
mov
xchg
insb
mov
bound
repnz
inc
rclb
clc
jns
xor
jmp
adc
in
bound
cld
adc
mov
push
push
out
pop
and
ficoml
sbb
add
fimuls
mov
aas
cld
jns
into
jno
out
lahf
sarb
gs
inc
lretw
pop
cmpsl
hlt
cltd
jg
stc
pop
aaa
fadds
or
push
sti
andl
sbb
dec
add
daa
imul
stc
xchg
push
mov
out
shlb
stos
add
jo
cmc
das
filds
repz
insl
jge
mov
cmp
xchg
cmc
push
push
jb
xchg
sub
test
loope
jl
mov
lock
push
mov
cs
pop
loop
rclb
fimull
push
inc
outsb
xchg
ja
lock
cmpsb
sub
out
and
inc
inc
int
inc
fadds
ficomps
cld
inc
or
lods
mov
cld
out
sub
xchg
pop
in
mov
push
push
les
sbb
cmp
jle
sti
push
dec
shlb
xor
ljmp
rorb
insl
inc
dec
sbb
push
ret
rclb
sub
decb
sub
inc
loop
jmp
mov
xorb
int3
int3
fldcw
sbb
ret
xor
ret
lahf
mov
push
mov
or
mov
stos
or
fiaddl
mov
adc
out
inc
xlat
pop
xor
cld
sbb
cs
jno
addl
out
sbb
xchg
mov
push
inc
dec
push
js
nopl
lret
stos
bound
pusha
dec
mov
fimull
jle
inc
sub
mov
pop
test
sub
jno
xchg
fidivrl
fxch
sti
stc
scas
neg
jnp
push
add
cli
dec
push
xchg
cmp
roll
movsb
cmp
incb
fmuls
cwtl
mov
mov
addr16
inc
dec
pmaxub
cmp
imul
ljmp
push
mov
ret
jecxz
mov
and
dec
aaa
stc
sub
xor
adc
mov
ret
lds
outsb
cmp
test
insl
jns
je
fwait
js
adc
shll
pop
jne
add
pop
and
mov
flds
cmp
aam
jo,pn
stos
dec
stos
gs
scas
and
sub
push
cld
cmp
mov
xor
ja
pop
dec
push
push
cmp
xchg
mov
addr16
mov
orb
sbb
ja
cmp
sbbb
cs
repz
ficoml
fimuls
dec
dec
paddusw
outsb
pop
ja
inc
mov
dec
xlat
clc
pop
outsl
test
outsl
mov
sti
icebp
adc
mov
cmp
pushf
dec
into
les
jae
add
outsl
repnz
mov
xor
stos
fwait
in
jl
in
fcomps
stc
xor
fsubl
jle
fs
movsl
scas
int
call
and
jge
add
es
imul
inc
push
inc
les
xor
cli
push
adc
inc
std
nop
out
mov
lcall
adc
push
in
inc
clc
rcrb
xlat
mov
movsl
outsl
pop
push
pop
mov
lods
jae
fs
cli
xor
lds
aad
sub
jb
mov
adc
hlt
sub
lods
dec
addr16
xor
xchg
hlt
cld
cld
push
shrl
xchg
jg
clc
jecxz
pop
mov
je
or
mov
stos
je
jle
lahf
xor
jecxz
pop
cmc
int
bound
mov
repnz
fmulp
in
dec
and
neg
xchg
ja
test
and
pop
ja
call
arpl
pop
std
cmpsl
sub
out
or
pop
aas
popa
adc
xchg
inc
jno
mov
sbb
xor
imul
fsubs
loope
fcoms
xor
fdivl
push
movsb
nop
add
mov
loop
scas
icebp
mov
xchg
stos
adc
mov
and
stc
aam
mov
adc
out
add
pop
lahf
mov
test
pop
cmp
push
inc
sub
push
sbb
adc
jmp
inc
movsb
or
sbb
sbb
mov
sbb
ds
add
mov
pop
push
out
push
sub
stos
aaa
xchg
jecxz
pop
es
sub
loope
push
mov
divl
pop
inc
test
sub
popa
push
sbb
dec
lret
aaa
icebp
idivl
sub
push
mov
and
cmpsb
cmp
inc
lcall
imul
pcmpgtd
adcb
inc
adc
xor
xor
outsl
xchg
cmc
pop
cmpsb
in
push
int
mov
add
mov
pop
mov
bound
push
xchg
cmpsl
lds
push
jae
lock
mov
cld
inc
cmp
ds
pop
insb
lods
inc
test
loope
mov
je
jecxz,pt
out
or
sarb
add
mov
lock
xlat
jo
fbld
inc
push
fdivl
lahf
dec
mov
jl
pop
pop
or
insb
sub
sti
sub
add
mov
cmpsl
and
cmp
leave
xor
mov
frstor
das
mov
ret
cmp
mov
add
push
faddp
ja
lahf
sbb
sub
push
in
dec
jecxz
xchg
roll
dec
pop
jb
pop
ror
or
xchg
mov
push
mov
adc
movsl
repnz
mov
cmp
xchg
scas
inc
in
or
lods
imul
push
daa
inc
out
mov
dec
imul
in
sahf
pop
std
mov
add
cld
add
cmp
test
inc
add
mov
jecxz
mov
mov
sub
push
and
shll
mov
and
mov
test
adc
pop
int
lds
stos
dec
ret
out
push
addr16
sub
movl
loop
jmp
cli
mov
fcomi
cmpsl
gs
pop
pop
and
dec
push
aaa
or
hlt
scas
mov
dec
out
into
jecxz
push
xlat
loop
adc
les
shll
sub
cmp
jns
cmp
scas
mov
xchg
sti
int3
mov
shrb
pop
fcompl
push
std
add
xor
sbb
stos
aaa
fnstenv
repz
xor
shll
fisubs
mov
xchg
pushf
les
outsb
movsl
jg
in
dec
cmp
pop
sub
push
inc
enter
cmpsl
cmp
adc
mov
inc
jmp
xor
test
and
fstl
push
pop
in
cmp
or
mov
xor
ja
jno
push
insl
xchg
pop
lcall
cs
cli
jae
mov
xchg
dec
rol
call
mov
and
pusha
push
jge
mov
sub
and
sbb
sub
mov
inc
aaa
stc
mov
sbb
jp
xchg
ss
sbb
mov
sbb
jo
out
mov
push
test
sbb
and
out
mov
mov
fwait
jns
das
pop
cmp
scas
cltd
xor
push
xchg
pop
idiv
add
lds
push
mov
jge
xchg
push
jnp
mov
aas
or
xchg
sbb
mov
mov
dec
addb
mov
xor
sub
cmp
bound
clc
add
dec
or
ss
imul
lock
es
adc
sahf
inc
pop
into
nop
repnz
or
cs
testb
pop
and
pusha
lods
sbb
sarl
int
or
movsl
outsb
std
pushf
adc
and
mov
int
test
adc
cld
outsb
pop
xor
xchg
xchg
jb
sbb
int
xchg
xlat
push
out
push
sub
adc
ret
dec
mov
and
and
stc
cmp
mov
xchg
jbe
loope
aas
outsb
inc
test
pop
inc
ds
push
das
jl
xor
mov
fnstenv
cmp
adc
aam
mov
xchg
mov
cmp
sbb
push
stos
mov
divb
aad
and
mov
imul
xchg
imul
sbb
and
cmpsb
mov
xchg
popf
xor
push
aam
lods
cltd
leave
sub
mov
jg
ret
rcr
incb
aas
rorl
test
fidivs
add
lds
sbb
fbld
pop
cs
testb
and
aam
adcl
or
sub
mov
testl
mov
mov
bound
adc
aaa
adc
add
lret
ljmp
pop
cmp
movsl
push
cmp
sbb
popa
shl
fwait
insl
lock
mov
pop
jns
clc
sarl
pop
std
push
imul
push
adc
rcrl
addb
aam
jl
cmc
mov
sub
jmp
insb
out
xchg
mov
cli
stos
and
cmp
lock
ss
negb
push
xlat
sub
add
lcall
sar
fistpl
jge
roll
jle
or
push
cmp
inc
in
rcrl
daa
dec
hlt
fs
mov
jmp
xchg
fs
out
xor
mov
ret
mov
xor
push
divb
adc
pop
mov
push
add
fadds
inc
mov
xor
in
out
jg
push
jbe
mov
jnp
wbinvd
loop
pop
adc
adc
xchg
int3
sarb
int3
lahf
cwtl
dec
xlat
outsb
or
mov
push
adc
mov
icebp
dec
xor
imul
xor
xchg
jg
push
xor
push
je
inc
sarl
cli
dec
sub
imul
fwait
inc
popf
addr16
arpl
adc
cmpl
aam
xor
or
push
lds
shlb
fisttps
test
cmp
ret
sub
mov
add
xchg
repz
pop
mov
insl
pop
mov
les
sub
pop
mov
xor
repnz
fisttpll
sub
inc
iret
repz
cmp
sub
mov
adc
repnz
adc
adc
dec
inc
loopne
fdiv
mov
cmp
push
sbb
mov
rcr
data16
nop
pop
idiv
outsb
leave
les
sbbl
std
lret
loope
fs
arpl
ljmp
pop
call
and
out
fdivr
shll
push
rorl
mov
data16
adc
mov
leave
fcos
ret
jecxz
mov
mov
int3
fsubrp
mov
sub
dec
dec
fnsave
loope
jno
or
adc
mov
daa
mov
jno
jne
repnz
lods
add
fnstenv
cmp
push
fnsave
add
inc
icebp
cmpsl
add
icebp
loop
mov
outsb
outsl
fdivr
mov
fsts
cli
jle
or
add
std
bound
or
movsl
fstps
add
imul
aaa
or
jmp
mov
xchg
nop
mov
leave
adc
jo
sbb
add
lods
push
hlt
jbe
arpl
pop
mov
push
mov
xor
sbb
push
dec
arpl
ja
adc
jl
pop
add
aam
cmp
xor
cmc
push
repz
push
in
jge
add
cld
and
out
mov
movsl
mov
xchg
into
and
sub
add
insl
stos
enter
cmc
addr16
dec
out
sbb
icebp
adc
mov
add
loop
enter
in
aam
dec
imul
xchg
mov
rcl
loop
jecxz
or
outsb
inc
push
mov
shll
out
mov
sub
pop
repnz
cmp
lods
or
outsb
dec
popa
push
daa
sbb
ja
jp
push
shll
stos
roll
adc
xchg
arpl
sbb
insl
pop
sbb
bound
jnp
pop
es
out
dec
incl
arpl
xchg
mov
lret
fdivrl
jl
push
pop
pop
and
lret
cmp
jne
mov
pop
and
shlb
cmp
pop
jle
push
mov
jmp
loopne
xchg
xchg
stc
push
cli
mov
cmpsb
xchg
adc
loopne
mov
cwtl
push
lods
cli
dec
dec
test
pop
iret
sub
hlt
cmp
xchg
or
out
lods
mov
sbb
cmpsb
fistl
mov
or
in
and
insl
xchg
enter
bound
nop
jnp
popa
aaa
sti
ret
mov
adc
xor
xor
xchg
cltd
cs
cmp
jo,pn
push
mov
jnp
mov
push
roll
data16
notl
jecxz
inc
add
and
ds
rcrb
and
push
data16
cli
push
lods
cwtl
or
mov
loop
pop
push
pop
out
fwait
loopne
lock
not
pop
push
daa
inc
adc
andl
stos
pop
test
sbb
adc
jno
aas
mov
adc
les
inc
mov
push
outsl
fbstp
orb
mov
add
jo
pop
enter
loope
pop
push
movsl
outsb
jle
cwtl
and
jmp
mov
in
testb
mull
cmc
inc
adc
popa
cmp
ljmp
jg
les
and
push
or
jmp
sub
out
mov
inc
fcomp
push
inc
sub
mov
fwait
push
fsubl
mov
adc
and
sub
outsl
pop
cmp
jo
adc
adc
add
cmp
push
test
insb
nop
int3
xchg
les
std
fildl
cs
stos
popa
shrb
out
push
mov
mov
and
ds
jb
mov
jl
subb
or
cmp
in
cmc
jecxz
pusha
imul
cmc
xchg
out
fadd
add
mov
jnp
sbb
xor
cmp
hlt
pop
inc
out
jo
gs
lods
push
dec
cmp
sub
and
icebp
xor
shll
imul
test
std
sbb
fcoml
sub
clc
mov
insb
out
pop
dec
push
push
ljmp
xlat
pop
mov
adcb
sbb
push
dec
std
aam
loopne
jecxz
pop
pop
repz
testb
bound
sub
adc
lods
cmp
les
jnp
add
lock
cmp
mov
dec
mov
or
pop
enter
lcall
xor
fdivrl
pop
ror
mov
add
dec
dec
out
mov
scas
lods
daa
cs
mov
push
push
jb
das
dec
jg
and
mov
xchg
mov
xchg
lea
push
add
iret
dec
pushf
arpl
mov
inc
mov
ficomps
clc
andl
add
xchg
fbld
adc
call
mov
adcb
fcmovne
int
into
or
movsb
test
das
xchg
loop
js
sub
test
roll
sbbl
frstor
mov
jbe
outsb
xor
sbb
lods
int3
mov
pop
icebp
out
mov
ret
pop
mov
les
pop
mov
xor
insl
xorl
and
movsb
lcall
rorb
subps
xchg
pop
push
push
mov
cmpsb
adc
test
lcall
pushf
loope
dec
mov
or
jmp
cmp
addr16
push
xor
add
out
xchg
nop
dec
ljmp
js
sbb
inc
cmp
mov
lret
test
mov
dec
cltd
or
cmpsb
dec
aam
loop
inc
adc
dec
pop
push
and
push
sub
sub
addr16
dec
and
nop
or
popa
gs
stc
xor
fildll
mov
add
popa
or
cld
xchg
faddl
sbb
insb
loopne
pop
out
lret
lret
pop
cmp
lret
mov
mov
dec
mov
cmp
or
cmpsl
sahf
in
test
xchg
dec
ret
lods
jne
shlb
push
xchg
dec
fidivrl
push
cli
mov
cld
fidivl
sbb
jmp
pop
jae
or
xchg
jg
add
mov
mov
adc
adc
mov
dec
pop
push
cmpsl
xor
sbb
mov
aas
mov
adc
inc
ret
mov
jp
mov
inc
push
ljmp
sbb
push
das
adc
pop
mov
lret
mov
pop
sub
xchg
sbb
jmp
dec
sahf
adc
sub
fnsave
lahf
into
test
jae
loop
es
lods
cld
mov
mov
cmpsl
popa
pop
mov
cmp
or
stc
dec
int3
mov
outsl
adc
and
mov
sub
mov
push
repz
or
ret
xchg
imul
sub
cmpsb
adc
push
cmp
jmp
push
and
test
sbb
push
fwait
lods
out
into
mov
bound
mov
inc
stos
add
jns
mov
in
push
fwait
push
jg
inc
and
inc
int3
pop
push
pusha
imul
adc
mov
push
jp
inc
sub
test
inc
das
dec
int3
cmp
mov
andb
out
pop
pop
or
adc
xor
dec
push
clc
ja
sarb
adc
mov
addl
add
int3
das
es
sub
and
jp
iret
jno
push
adc
dec
cli
fisttpll
sbb
inc
pop
inc
fwait
test
in
and
xor
ja
divb
daa
in
cmp
mov
lret
mov
push
js
adc
mul
xchg
jns
js
pop
sahf
mov
mov
popa
xor
ret
mov
jmp
mov
cmp
sahf
fisubs
cmpl
out
fwait
loop
cmp
dec
sahf
shlw
test
cmp
out
push
les
xor
fwait
add
push
call
sub
fs
mov
or
in
sar
pop
jne
pop
mov
lcall
cmpsl
jmp
cld
rol
adc
shlb
mov
aam
mov
lds
or
loopne
dec
sub
or
push
in
mov
inc
stc
lret
xor
push
pusha
jg
js
test
cmp
mov
aad
aaa
cmc
add
dec
stc
adc
dec
test
arpl
sub
lea
mov
sub
ja
mov
bound
inc
push
outsl
ds
dec
pop
cli
mov
inc
fistl
pop
sbb
sbb
add
sti
jp
or
repz
xchg
mov
ljmp
mov
push
or
pop
cld
mov
xchg
push
dec
push
loopne,pn
pushf
mov
mov
mov
dec
or
or
repz
pop
cmpsl
int
mov
jge
add
sbb
jg
lock
lret
fstpl
mov
ror
add
mov
dec
push
pushf
and
scas
ret
push
rolb
jae
pop
xchg
inc
sbb
inc
scas
sub
jp
jge
test
bound
inc
and
or
inc
mov
mov
add
std
insb
sbb
mov
inc
adc
icebp
into
cli
test
divb
fsubl
sub
mov
mov
dec
lea
adc
into
xchg
fprem1
cmp
xor
mov
sbbl
lret
and
lahf
push
out
xor
adcl
sbb
jecxz
xchg
jb
jbe
pop
psraw
imul
push
loop
sbb
jge
xor
call
test
scas
cmp
call
fcmove
pop
lds
dec
call
push
add
xlat
jl
iret
in
movsl
add
lea
ret
lods
cltd
and
jmp
push
push
sbbb
sahf
lahf
nop
scas
enter
test
jl
push
inc
mov
in
sbb
jmp
fwait
enter
xchg
adc
cltd
dec
push
or
arpl
test
sub
mov
int3
outsb
clc
add
movb
sub
jg
das
push
sbb
cmc
dec
add
ss
xchg
or
stos
adc
xchg
mov
push
xorl
ja
mov
xor
dec
fimuls
or
xor
sbb
jo
push
mov
mov
adc
stos
pop
cmpb
addr16
fwait
out
scas
jmp
daa
pop
sbb
xchg
daa
movsb
and
addr16
jp
loope
add
sbbl
sahf
lock
jecxz
add
mov
lret
sbbl
xor
inc
jb
dec
mov
mov
lahf
pop
adc
popa
jmp
int3
xchg
loopne
loopne
mov
mov
cmp
fwait
push
jne
push
imul
fldl
xor
imul
adc
jbe
test
orl
cmc
test
fcoml
push
iret
xor
pop
je
mov
sub
fs
jb
sbb
push
enter
out
je
push
rcll
jnp
adc
cltd
push
fsubl
outsb
mov
sbb
inc
dec
ror
xor
fsubs
es
ds
push
stos
fdivrp
mov
out
inc
mov
fs
mov
int3
jns
push
mov
mov
pop
lret
bound
push
mov
subl
mov
or
fs
divl
addb
mov
dec
push
mov
ret
cmp
outsl
fdivrl
mov
addr16
stc
sub
mov
loopne
aad
and
xor
xchg
lods
dec
mov
lds
push
lea
xchg
push
andb
xchg
xor
jns
mov
popa
xlat
sub
int3
loopne
fisubl
dec
push
push
mov
push
mov
mov
and
dec
dec
stos
jns
mov
test
fldln2
stc
push
mov
add
ret
jg
lahf
lret
jb
cmc
sbb
cmpsl
int
adc
addl
dec
pop
scas
cmpsl
shrb
mov
ja
pop
pop
push
add
and
mov
cmp
cs
rolb
pop
shlb
add
xchg
sti
loop
leave
mov
jnp
popf
dec
jle
sbb
dec
sub
fistps
dec
out
adc
sbb
adc
lcall
aad
or
push
fstpl
xchg
fwait
dec
lods
jecxz
mov
aad
mov
ret
jns
roll
push
xor
inc
sarl
mov
incl
inc
pop
shrb
int3
or
fsts
xchg
push
mov
dec
cmp
pop
insb
xchg
dec
pop
cmpl
mov
mov
add
arpl
dec
adcl
sub
sbb
sbb
ja
es
out
stos
ret
pop
push
stos
push
sti
lahf
xor
loopne,pn
pop
lock
add
or
mov
stc
lea
icebp
rol
cwtl
lods
xor
push
aam
rcr
mov
jne
test
mov
fildl
sub
inc
stos
add
mov
mov
xchg
sbb
aam
loop
iret
push
test
test
loop,pn
fwait
xor
and
pop
add
repz
bound
cwtl
xor
or
mov
cmp
daa
das
aas
test
je
divb
xchg
push
cmp
inc
sbbb
xchg
cmp
jbe
mov
mov
lret
mov
leave
and
fstps
mov
jb
ret
and
movsb
in
sub
push
add
je
cmpb
mov
cmc
push
aas
imul
dec
cmp
xor
stc
push
leave
inc
daa
add
push
je
notl
mov
mov
jnp
or
sub
pop
test
lock
ret
repnz
mov
mov
mov
cs
mov
fidivrl
jp
int3
mov
pusha
xor
popa
xor
fimuls
das
push
aas
push
sbb
rcll
cmp
imul
xor
pop
push
movsl
test
push
push
adc
std
xor
inc
ja
out
cmp
inc
mov
and
ret
jp
jmp
or
pushf
js
cmp
add
cli
das
xor
jmp
or
roll
cwtl
dec
fdivs
cwtl
adc
add
scas
xor
rcll
push
mov
lret
xchg
dec
insl
test
fbld
mov
inc
dec
stc
inc
inc
das
mov
pop
lock
add
shl
adc
aam
pop
dec
and
mov
cmpsl
es
xchg
xchg
push
scas
and
data16
mov
add
addl
loop
aas
loopne
lods
or
jecxz
fistpl
sbb
in
into
rcrl
lret
xchg
jmp
call
jmp
sub
pop
loope
dec
adc
inc
cld
or
xorb
fcom
jle
pop
test
add
push
fucom
or
stos
shll
sub
loopne
data16
popa
pop
std
inc
sbb
js
je
or
jae
loop
or
push
aaa
hlt
mov
lret
movsb
xchg
and
adc
addl
xchg
dec
sub
or
movsl
mov
inc
pop
adc
jmp
imul
sbb
in
push
xchg
xor
aam
mov
rorb
xor
lea
jns
jge
push
dec
push
outsb
push
gs
pop
test
loop
std
out
mov
jno
cmp
loop
leave
jg
xor
and
add
mov
add
mov
sub
push
pop
arpl
jmp
aam
push
add
pop
ret
gs
ret
cmpsl
sti
in
cmp
sahf
dec
repnz
cmc
xchg
or
mov
test
or
bound
lcall
test
enter
inc
dec
jno
pop
icebp
repnz
data16
je
and
xchg
mov
je
outsl
insl
or
mov
pop
jns
sub
fistl
movsb
movsb
repnz
pushf
pushf
jb
negb
cwtl
subb
nop
xor
mov
scas
sarl
pop
xor
lahf
out
sbbl
nop
mov
add
inc
xlat
xchg
adc
leave
sbb
xor
xchg
xchg
push
xchg
mov
mov
sub
mov
xchg
inc
mov
movsb
mov
adc
cld
sbb
cmp
test
xchg
fists
lahf
push
jecxz
adc
push
subb
cmpsl
adc
sub
out
xor
je
mov
mov
rcrl
jmp
cmp
inc
dec
jg
dec
mov
pop
or
mov
mov
hlt
aad
mov
lock
negb
add
fnstcw
dec
out
push
mov
sbb
jmp
push
add
cmpl
jne
cltd
mov
push
rorb
js
add
je
stc
rep
jb
in
push
mov
sub
jae
and
fstpl
in
push
mov
fcompl
add
pop
cmp
lret
xchg
fdivp
xchg
aaa
cmpsb
and
adc
xchg
lods
lahf
dec
ss
xlat
xor
add
or
aas
enter
imul
mov
fs
and
xchg
mov
push
adc
xchg
push
sub
mov
mov
mov
loope
sahf
cmp
sub
xor
lods
cltd
and
pushf
lahf
shlb
repz
mov
push
sbb
jns
mov
ret
test
sub
sahf
imul
pop
push
iret
popf
rorl
sub
jge
mov
add
dec
outsl
sub
mov
ja
push
bound
imulb
inc
inc
sti
xchg
sub
jmp
adc
mov
cld
sub
cmp
xor
ss
lods
in
cmp
das
push
lds
enter
test
repnz
imul
iret
ret
jns
cmp
enter
xchg
pop
adc
dec
int3
test
dec
ja
insl
add
xor
push
fisubl
sbb
js
sub
and
out
xor
xor
loopne
sbb
pop
push
dec
add
push
addr16
test
cltd
dec
xlat
jnp
cmp
dec
mov
xchg
test
xchg
pop
stc
add
psubsw
je
mov
lods
in
daa
xchg
iret
ss
add
lds
add
mov
rol
mov
push
xor
pop
clc
aas
fs
adc
sbb
or
sub
enter
repz
ja
rolb
call
stos
adc
cli
fdivrl
cmp
loopne
scas
jge
cmp
test
cwtl
push
and
aaa
push
mov
sub
xchg
jg
sarl
add
clc
fildl
movsb
ss
pusha
mov
test
imul
subl
aaa
loopne
xchg
sbb
fmuls
hlt
xor
cmp
jae
leave
cmp
inc
dec
and
push
cld
stos
nop
mov
imul
inc
call
test
hlt
test
inc
cmc
rcr
sub
dec
or
add
movsl
popa
int
mov
sbb
daa
and
daa
jle
scas
scas
xchg
sbb
lcall
push
hlt
cmp
dec
cwtl
mov
aad
inc
fildll
inc
xor
dec
pop
in
xor
insb
inc
dec
sahf
clc
test
or
xchg
dec
dec
push
pop
push
sub
inc
pop
add
int
test
decb
inc
mul
stos
sub
div
popf
ffree
test
cmp
xchg
std
jns
icebp
addb
push
mov
cli
fcmovu
jne
cmp
mov
mov
mov
inc
imul
xor
add
xorb
dec
and
popf
cmp
sub
inc
stc
dec
cmp
cmc
lea
pop
pop
aas
inc
xor
out
sub
data16
sbb
jbe
jmp
add
xor
cltd
iret
mov
lods
fwait
mov
in
outsl
xor
jg
daa
test
add
in
popa
cmp
sub
xchg
dec
mov
fwait
fmul
pop
dec
addl
repz
movsl
pop
push
push
xchg
inc
jmp
ja
lcall
and
aam
sbb
jecxz
or
fsubrl
and
push
and
bound
mov
pop
jle
bound
test
sub
push
nop
dec
cwtl
call
shrl
mov
dec
push
sub
cmp
imul
or
lods
adc
or
ljmp
push
dec
push
out
inc
add
add
test
loop
mov
xor
inc
inc
add
push
mov
jp
xchg
mov
out
push
rolb
and
mov
orl
sar
jnp
inc
sahf
cltd
fcompl
lods
movsb
mov
insl
pop
or
jne
movsl
inc
and
mov
jge
jne
pushf
push
sbb
fwait
orl
pushf
div
mov
xor
dec
mov
xor
lret
xlat
mov
dec
sbb
ret
fists
hlt
leave
inc
rcrl
cmp
mov
movsl
push
inc
testl
test
push
cmp
ss
jo
int3
outsl
push
jbe
call
mov
mov
add
outsl
xchg
sub
sahf
popa
pop
cmp
inc
inc
pop
pop
inc
mov
dec
loopne
adc
popf
xor
xchg
rorl
imul
adc
lcall
popa
test
mov
idivb
cmp
jae
push
dec
or
xlat
int3
test
hlt
pop
cwtl
mov
pop
shll
js
add
or
outsb
and
popf
std
rclb
xchg
xor
dec
push
pop
pop
arpl
mov
addb
push
out
push
adc
out
cmpsl
cs
xchg
cmc
push
push
stos
mov
mov
lahf
mov
loopne
cmp
pop
sbb
sbb
icebp
out
or
jmp
out
mov
adc
dec
clc
fnstenv
lcall
pop
mov
cmpsb
imul
cmp
lods
mov
sbb
adc
clc
jae
xchg
and
imul
jo
add
mov
cs
scas
aaa
dec
cmp
rcrl
mov
mov
mov
jmp
mov
xchg
xor
jns
or
sti
adcb
std
lcall
outsl
mov
lcall
je
orl
mov
ror
sbb
push
rcrb
mov
notb
inc
out
mov
test
pop
bound
int
and
enter
ljmp
fadds
pop
js
arpl
mov
and
xor
mov
mov
aas
pop
add
dec
test
jecxz
mov
mov
arpl
sub
add
inc
jecxz
fnstsw
jns,pt
test
mov
lcall
add
daa
pop
faddl
pop
jl
cmp
adc
inc
mov
or
adc
aas
dec
shr
cmp
pop
and
xchg
in
pushl
js
sbb
pop
cmp
sahf
dec
scas
enter
mov
cmpsb
sbb
movsl
pop
push
movb
push
xor
sahf
test
push
andl
divl
mov
xor
fldt
loope
mov
sbbb
lahf
inc
add
cltd
dec
sbb
mov
mov
sbb
insl
stos
cmp
mov
lods
loope
fs
insb
notb
adc
pushf
xchg
mov
inc
adc
mov
xchg
xchg
or
sub
lock
aad
fucom
cltd
add
push
mov
test
push
xor
int3
or
pop
pop
pop
test
test
sub
mov
cmp
rcrl
jl
xor
cmc
cmc
js
add
mov
mov
xor
mov
mov
int
imul
push
jb
ja
psubd
push
inc
mov
cmp
rcll
xor
sahf
sub
inc
add
fadds
mov
iret
sub
in
cmpsb
mov
xchg
fstl
sbb
jmp
mov
idivb
sub
sarl
fldl
mov
cld
je,pn
or
lret
cwtl
out
jo
jnp
sbb
cmp
jnp
cmc
push
push
sub
push
dec
add
aas
push
sbb
pushl
or
xor
cmp
cmp
cld
jne
es
xor
or
mov
cli
add
push
dec
xchg
push
pop
inc
xlat
lods
lcall
xchg
ds
and
dec
sbb
cvtps2pi
nop
cmp
pop
movsb
jmp
jl
lret
repz
sub
push
stos
call
dec
loope
push
in
pop
jae
cmpsb
mov
adc
pusha
and
mov
sbb
loopne
dec
xchg
mov
dec
cmp
jno
push
inc
xor
cmp
xchg
jmp
jmp
push
ljmp
idiv
ret
inc
xor
xchg
pusha
push
iret
arpl
stos
mov
icebp
mov
mov
lock
xor
sar
es
pushf
mov
xchg
jl
lcall
addb
push
in
cmc
jge
in
loope
add
dec
daa
cld
lea
jmp
test
xchg
inc
ror
adc
push
test
xor
jl
xchg
mov
test
cwtl
mov
pop
push
and
or
jmp
test
lock
mov
xlat
pop
dec
jns
cmp
shlb
mov
out
xchg
fwait
sbb
mov
mov
lret
push
mov
jbe
push
push
mov
ficompl
adc
and
push
jbe
int3
and
das
jg
sub
sahf
inc
jb
movsb
sahf
dec
jmp
jb
mov
loopne
dec
jno
xor
fld
or
inc
mov
fwait
cwtl
adc
mov
stc
in
push
insb
jp
out
pop
aas
or
movsl
or
addr16
out
mov
test
pop
int
in
imul
push
aas
mov
repnz
sahf
jno
inc
lahf
adc
shlb
jns
or
or
or
outsb
adc
stc
js
ss
lahf
cltd
jecxz
decl
mov
sbb
jp
popa
mov
adc
pop
sbb
popf
or
jl
mov
or
dec
sub
and
xor
insb
aad
fdivl
mov
aas
test
in
adc
aam
out
inc
popf
pop
push
ret
push
pop
mov
push
int3
nop
out
pop
int3
add
fimull
jecxz
add
sbb
fcmovb
insb
push
inc
pop
mov
dec
adc
gs
scas
dec
movsl
icebp
cld
je
cmp
mov
repnz
subb
rolb
test
inc
bswap
push
mov
out
xchg
jp
pop
push
adc
adc
sub
or
sub
scas
inc
arpl
inc
or
lods
adc
lcall
and
imul
mov
call
xchg
or
fstp
push
rorb
out
lret
repnz
and
call
inc
inc
dec
or
xchg
jne
movsb
icebp
jne
pop
cltd
and
jne
movsl
cmc
mov
xor
fisubrl
xchg
mov
cmpsb
shl
adc
pop
imul
test
dec
jns
test
jle
cmp
xor
and
fcmovnu
and
sub
es
outsb
xor
fsubr
rcr
xchg
addr16
push
xor
pop
fiadds
jo
add
dec
divl
ficompl
nop
xor
lods
je
insl
xcrypt-cbc
cmpsl
push
nop
add
push
pop
or
loope
lock
sbb
mov
add
sahf
mov
pop
mov
cmp
call
adc
rcll
jge
inc
xchg
das
mov
inc
mov
or
dec
sub
push
negb
push
outsl
xor
pop
xchg
out
pop
call
or
jle
pop
mov
lds
sub
pop
jecxz
movsl
sbb
je
pop
les
push
repz
lds
fisubrs
mov
ret
stc
xchg
daa
mov
sti
jbe
dec
por
or
dec
sar
cmp
jp
pop
cld
fcoml
vunpckhpd
int3
mov
mov
lcall
imul
and
inc
std
leave
mov
sub
pop
dec
inc
mov
subb
mov
jmp
loop
mov
lahf
pop
and
push
aaa
push
inc
lock
pop
jmp
jnp
popf
sahf
pushf
cmp
sub
push
pusha
icebp
stos
xchg
lret
inc
inc
lret
mov
popa
aam
or
js
push
xor
dec
xchg
and
fstpt
data16
sarl
outsl
ja
xor
pop
jle
divb
ret
cli
sar
mov
outsb
jg
test
mov
aam
aam
dec
fisubrs
jae
or
push
xor
push
push
es
adc
fdivrl
jl
inc
in
mov
sub
mov
add
sub
push
add
test
xchg
push
xchg
mov
cmp
in
sti
inc
dec
dec
mov
add
loop
push
dec
es
cld
xchg
je
ljmp
sub
sti
push
fidivrs
jae
ret
aad
inc
fildll
lahf
dec
orb
insl
sbb
cmp
sbb
cmovg
pop
sarl
push
fsubs
cmp
inc
mov
cwtl
addr16
negb
cmp
pop
lcall
insl
imul
xor
jne
xor
cmpsl
pop
jns
jne
cmpsl
xor
out
pop
pop
add
mov
cld
adc
mov
fldcw
clc
jmp
mov
mov
idivl
xchg
jmp
je
out
dec
pushf
insb
or
dec
data16
ret
loopne
in
jno
pop
mov
push
xchg
pop
push
lds
repz
push
jmp
mov
mov
pushf
sub
int
leave
ss
aaa
sbbl
scas
ljmp
cmp
rclb
sarl
inc
lcall
ss
mov
aad
fucomi
sub
sbb
leave
fisubrs
lret
cmp
add
sub
xchg
xchg
jge
jecxz
push
ja
or
scas
xor
jne
mov
fsubrl
cltd
rcll
lret
dec
xchg
aad
pop
mov
hlt
sbb
cmpsl
aaa
test
enter
cs
sub
or
or
into
sbb
cmp
fcmovnb
push
jns
mov
aam
mov
insb
xor
push
inc
jg
mov
adc
sub
dec
xor
jge
or
add
inc
orb
add
scas
sbb
pop
test
add
cmp
cld
mov
jno
cs
mov
push
xchg
imul
push
in
pusha
cmpsb
cmp
inc
out
mov
bound
or
xchg
sti
or
repnz
dec
gs
jmp
jo
dec
or
cs
inc
jno
xor
mov
pop
or
addr16
das
into
mov
sub
push
mov
sub
push
out
pop
cmp
xor
mov
pushf
insb
or
mul
jmp
rcll
adc
add
jmp
inc
loope
and
dec
jae
sbb
mov
mov
cmp
mov
dec
clc
push
pop
or
pop
mov
cmp
scas
cmp
mov
test
decb
in
mov
scas
ja
je
inc
or
adc
ljmp
and
jo
add
test
sbb
insb
inc
add
mov
cmp
pop
popf
push
aaa
pop
fcmovnu
fstpl
cmp
jo
arpl
ficoms
in
sub
cmc
mov
and
hlt
test
test
scas
push
test
fidivrs
mov
fdivp
cs
push
imul
or
mov
movsl
clc
jl
les
lds
bound
inc
bswap
in
insl
lahf
push
cmc
cmp
addb
pop
movsb
push
insl
addr16
fdivrs
outsb
or
ret
loope
sub
ss
jo
xchg
rclb
iret
hlt
adc
mov
add
es
mov
xchg
cmpl
add
shl
punpckldq
cmpsl
shl
mov
cmp
mov
mov
dec
pop
fldt
mov
call
dec
dec
mov
rdmsr
xchg
int
fstps
leave
mov
out
es
aaa
xchg
gs
jns
scas
jmp
sbb
sbb
leave
adc
sub
add
scas
ja
in
push
jns
dec
sbb
push
lods
adc
ja
push
xchg
mov
out
movsl
pop
sbb
dec
loopne
lret
mov
popf
lock
adc
jns
mov
iret
dec
dec
inc
pop
or
pop
push
or
adc
fcmovnbe
jo
mov
pop
cmp
mov
jb
fwait
nop
lods
or
rorl
ret
arpl
rolb
iret
addl
rcrb
lods
mov
test
insl
scas
jmp
sbb
scas
out
pmullw
inc
ljmp
out
sbb
pop
shlb
dec
hlt
mov
fbld
repz
mov
cltd
dec
mov
aad
and
dec
outsl
jmp
sbb
imul
test
add
and
popf
cmpsb
and
sbb
imul
stos
frstor
mov
xorl
bnd
fimull
pop
push
push
aam
subl
pop
aas
in
outsl
movsl
bound
aad
mov
aaa
sub
into
mov
outsb
or
in
mov
mov
or
mov
or
cli
outsl
jp
push
and
in
nop
xchg
sbb
gs
ret
movsb
and
gs
stos
insb
lret
lds
popf
fstl
and
cltd
mov
inc
and
xchg
pushf
not
mov
fldcw
out
add
mov
ds
movsb
sub
push
xor
mov
sti
mov
mov
xchg
call
push
mull
mov
pop
das
pop
or
sub
fdivr
add
xchg
ret
xchg
cltd
mov
xlat
mov
jg
dec
pop
fdivr
into
and
mov
dec
fisubs
pop
fldl
popf
shr
push
xor
popl
mov
mov
outsl
arpl
aad
push
add
test
mov
movsl
and
ret
lods
movsl
addr16
mov
pushf
push
aam
in
leave
lock
xchg
mov
je
xor
push
adc
jmp
pop
dec
ss
imul
pop
pop
loopne
sbb
sub
mov
sub
cmpsb
cmc
inc
sbb
loopne
pop
xor
in
cli
mov
inc
adc
adc
xor
jecxz
dec
mov
jmp
mov
fwait
stos
inc
aas
add
push
in
ss
aaa
jle
lahf
inc
push
dec
push
pop
dec
dec
xor
popf
aad
jbe
mov
pop
pop
data16
subl
mov
cmp
js
imul
mov
xchg
int3
dec
rcl
cld
mov
xor
inc
and
add
or
cmpsl
pop
jbe
add
inc
pop
mov
scas
dec
jecxz
push
int3
lea
lcall
bound
subb
fs
int
inc
mov
testl
cld
push
xor
sbb
pop
adc
pop
pop
lods
cmpsl
inc
cmp
xor
jmp
lahf
fmuls
rcrb
xor
adc
jge
xor
inc
jecxz
aaa
add
nop
cmp
pop
and
inc
dec
subb
outsl
sbb
test
mov
testb
lcall
dec
sub
sbb
sbb
push
lods
roll
xchg
push
jnp
hlt
enter
int
test
scas
ds
dec
imul
pop
mov
bound
mov
idivl
adc
ljmp
jne
ja
mov
fs
insl
or
sub
sbb
call
cmpsb
pop
lea
enter
loopne
or
adc
cltd
je
inc
insb
or
mov
orb
fstpt
popl
xchg
jp
sbb
fstpl
jbe
add
sub
adc
icebp
adc
stos
out
das
lcall
add
add
call
pop
push
imul
dec
subb
sub
mov
fldenv
and
cltd
mov
push
das
jnp
mov
inc
jmp
push
sbb
sbb
jo
fdivrl
jne
in
and
pusha
pop
xor
icebp
scas
cwtl
insl
gs
lahf
pop
inc
jns
testb
rcl
lret
jge
mov
mov
enter
xchg
int3
mov
lcall
js
mov
les
lcall
mov
inc
mov
sub
shl
test
lret
imull
popa
mov
adc
push
ror
outsl
insb
leave
repnz
call
or
cltd
xor
pop
cmpsb
pushf
ljmp
dec
sbb
lods
outsb
jns
cwtl
xchg
loopne
pop
out
fistps
inc
insl
mov
sub
adc
dec
push
cmpsb
sbbb
addr16
cmp
adcl
push
jbe
pop
jmp
jb
mov
mov
mov
sub
inc
jnp
test
pop
leave
movsb
mov
in
mov
out
dec
in
ljmp
push
mov
mov
jle
xor
mov
inc
mov
movd
rcr
popf
jge
gs
jno
xchg
add
mov
fcomps
cmp
imul
jbe
mov
loope
adc
xchg
sbb
arpl
jne
pop
adc
xchg
cmp
jns
loop
pop
data16
shl
xchg
repnz
inc
jmp
jae
xor
add
cmp
inc
pop
lock
ds
mov
loopne
sahf
movsl
gs
jbe
inc
mov
insl
stos
fidivrs
xor
pusha
sti
gs
imul
mov
jnp
test
pushf
addl
lret
imul
stc
fstp
xor
jg
lcall
jle
movsb
mov
mov
cltd
in
cmc
cltd
je
fdivl
push
ret
jl
std
cmp
jp
sub
repnz
jmp
negb
ja
inc
les
movsb
jg
xchg
bound
test
stos
jl
fwait
xchg
jbe
or
inc
xchg
mov
pop
or
xor
pop
imul
mov
dec
stos
aam
pop
arpl
jb
push
pop
rorl
scas
pop
sub
jbe
adc
mov
insl
nop
jmp
add
lcall
int3
dec
inc
dec
adc
xor
stc
jg
pop
xchg
push
ja
sub
jbe
jae
sbb
mov
jmp
imul
lods
adcl
xchg
sarl
jp
sbb
daa
pushf
xchg
xchg
fadds
pop
push
icebp
inc
shll
sbb
or
jb
adc
pop
js
nop
mov
push
enter
jg
add
mov
dec
jbe
jmp
aas
lret
jbe
hlt
jge
adcb
mov
arpl
xchg
xchg
lods
pop
adc
inc
pop
push
add
xor
repz
mov
cmp
and
mov
sbbb
scas
ljmp
sub
insb
and
into
testl
in
pop
in
shr
insl
mov
jle
fdivs
and
push
dec
jnp
xorl
and
loop
dec
and
lret
xchg
and
adc
mov
je
movsb
inc
scas
mov
push
imul
flds
add
jmp
mov
movsl
push
push
add
push
icebp
add
sub
sbb
fsubrs
mov
fimuls
push
loope
es
addl
add
popa
add
arpl
pop
mov
mov
lcall
add
sbb
int3
or
lds
sub
in
push
jmp
in
pop
outsl
in
adc
push
jo
pop
and
cli
subl
out
cmp
scas
pushf
xor
test
sub
mov
and
testl
sarb
xchg
mov
pushf
mov
jecxz
sub
cltd
ss
lods
leave
inc
push
inc
cmc
mov
cld
imul
cmove
xchg
inc
mov
mov
adc
pop
clc
xchg
ret
lcall
movsl
xor
mov
mov
sbb
lcall
dec
xchg
enter
push
fistpll
daa
xor
jns
and
mov
adc
push
jge
xchg
shll
add
cltd
into
jge
fbld
sbb
add
insl
aam
push
daa
jl
daa
int
mov
and
or
push
icebp
lcall
xchg
bound
push
xchg
arpl
popf
popl
lea
inc
sub
push
insl
mov
xchg
ret
std
adc
dec
shr
xor
inc
mov
sbb
popa
pop
ja
dec
lods
adcl
lcall
stc
popa
test
outsl
jb
xchg
xor
mov
add
rorb
mov
out
lea
mov
out
sub
mov
sarb
bound
fs
add
xchg
loopne
aad
in
sbb
ss
lret
mov
daa
lea
add
mov
mov
xchg
pop
in
loop
andb
ret
popa
cwtl
flds
cmc
hlt
jge
jp
dec
sub
jns
fistpl
fistl
push
add
xchg
or
scas
movsb
dec
les
out
mov
cmpxchg
sub
nop
arpl
outsl
jp
inc
pop
sub
sub
xor
mov
out
or
rorl
add
mov
mov
inc
sti
lret
cmp
sbb
test
daa
test
cmpsb
or
test
inc
sub
sub
insb
inc
mov
stos
mov
in
mov
outsb
int
push
and
test
mov
lock
loope
pushf
sbb
mov
mov
mov
lods
mov
leave
movsl
lods
add
jo
cmp
aas
mov
jnp
ja
cmc
xor
test
js
inc
pop
roll
sbb
inc
scas
ja
jo
mov
int3
addr16
aaa
mov
mov
fwait
jns
inc
aad
cmc
cld
bswap
sbb
jmp
dec
jle
cmp
add
cmpsb
xchg
out
dec
mov
mov
cld
pop
out
dec
sar
adc
xor
jmp
aas
dec
neg
imul
and
push
add
mov
and
add
jns
sbb
xchg
shrb
xchg
sub
cwtl
pop
inc
inc
cmp
imul
push
orps
xor
les
je
cmp
cmp
fisubs
sbb
xor
popf
inc
adc
sti
adc
mov
out
clc
scas
jb
mov
lahf
or
jle
out
jp
dec
adcb
andl
mov
sub
mov
add
out
loopne
cmpsb
jle
out
pop
loopne
mov
in
and
lea
mov
push
in
fidivrl
aad
rcll
cltd
jg
popf
ja
dec
loop
and
andb
divb
out
sub
pushf
outsb
test
adc
loopne
dec
in
push
jecxz
xchg
cmp
out
leave
outsb
js
mov
cmp
push
mov
test
push
and
adc
lret
push
adc
inc
cs
dec
jp
inc
add
sub
push
roll
jae
push
xchg
jmp
sub
pusha
push
es
cmp
xor
pop
lods
push
addb
fs
jp
fwait
dec
mov
shrb
push
mov
xlat
mov
fiaddl
dec
sti
test
outsl
xor
and
xor
sub
lods
sbb
jecxz
test
ss
mov
repz
and
mov
xchg
les
jg
sub
xor
mov
arpl
cmp
jae
inc
mov
mov
pop
mov
cmc
call
add
fcoms
subb
scas
aaa
jne
icebp
jecxz
std
xchg
xchg
ljmp
imul
xchg
dec
loope
jno
push
int
xor
or
nop
adc
pop
jb
fs
mov
xor
mov
pop
xor
adc
adc
fsubrl
gs
in
fnstsw
test
call
pop
inc
inc
movsl
add
fistps
sbb
and
adc
sbb
cmp
pusha
ret
add
push
mov
cmp
sbb
xchg
pop
pop
jbe
das
mov
fnstcw
mov
rorl
in
lds
push
sub
negb
pop
clc
shlb
pop
test
cltd
popa
mov
clc
stos
jo
cli
mov
jecxz
mov
fcomi
fdivrs
mov
sbb
out
add
popf
iret
lods
movsb
push
dec
jmp
dec
sbb
inc
dec
jae
fcmovu
mov
sti
nop
inc
push
outsl
add
bound
fsubl
shrl
loope
stc
lcall
insl
pop
push
push
or
int
inc
add
sub
mov
aaa
addr16
xor
test
sbb
lahf
pushf
rol
cmp
push
dec
repz
ja
push
pop
mov
push
subb
outsb
xchg
icebp
repz
nop
jns
adc
or
decb
and
inc
outsl
enter
adc
pop
adc
add
cmovg
adc
lahf
lcall
xor
into
int
stos
mov
push
xor
sbb
jmp
pop
fcompl
fstps
inc
aam
adc
dec
nop
repnz
addb
mov
mov
ret
fistpll
out
rcrl
and
fnsetpm(287
fildl
adc
jge
pop
xorb
sub
mov
push
add
sti
pop
cmp
ror
inc
push
ret
ljmp
lret
sar
lret
lcall
cmp
popf
xchg
sub
fdiv
pop
pop
mov
xchg
inc
pop
xor
mov
mov
jmp
pop
cmp
and
mov
mov
xchg
fwait
and
mov
jae
stos
rolb
rcrb
daa
sbb
push
push
cmovbe
pusha
mov
push
out
sbb
push
lods
addl
popa
sarl
jl
mov
pop
hlt
inc
add
std
inc
xorl
fldt
mov
aas
addr16
int3
je
stc
lret
inc
test
and
add
mov
push
clc
xor
repz
sub
daa
dec
jl
mov
pop
test
jae
pop
and
fsubrp
gs
mov
lock
cltd
mov
lock
out
push
or
jbe
mov
and
mov
in
push
loop
int3
mov
into
out
addr16
das
push
push
and
insb
dec
push
clc
test
ret
ss
gs
mov
outsb
lods
cwtl
outsb
in
mov
int3
add
data16
ret
stc
adc
movsb
int3
xchg
push
scas
inc
pop
les
faddl
and
loope
ss
push
cmp
movsl
mov
sti
or
or
cmp
roll
stos
or
xchg
xor
xchg
lods
push
popw
inc
mov
stos
fsubrs
es
setge
and
inc
and
mov
pop
mull
clc
dec
add
lods
jecxz
call
js
pop
inc
addr16
jp
pop
iret
scas
push
cmp
pushf
dec
mov
jmp
and
mov
adc
add
pushf
mov
leave
jbe
das
les
dec
cltd
mov
shll
dec
jo
call
push
sti
je
cmp
xchg
call
das
mov
adc
fsubp
fmuls
ret
test
cmpb
rol
adc
divl
sbb
das
in
mov
sbb
cmp
fdivs
fidivs
push
insb
aaa
mov
inc
jp
fistpll
add
loop
les
insb
jmp
sub
mov
jp
call
mov
dec
or
cmp
or
mov
sti
cmp
in
mov
imul
and
gs
jns
jo
icebp
add
addr16
jno
inc
jmp
and
dec
mov
mov
loop
arpl
inc
repz
sub
xchg
and
mov
push
stos
int
pop
push
ficompl
pushf
shrb
movsb
jge
idivb
stos
add
ljmp
loop
inc
arpl
fnstsw
lret
loope
adc
xchg
jle
jle
in
in
faddl
xor
push
push
loopne
xlat
fwait
add
xchg
push
adc
ss
sub
inc
push
cmpsb
lcall
pop
xchg
out
xchg
sbb
mov
ljmp
int
or
lds
insb
out
jae
es
pushf
ss
out
cmp
sarb
cmp
inc
adc
lea
in
call
pop
dec
cs
pushf
ja
push
les
int
decl
cmp
cmp
dec
jle
adc
filds
push
cmp
cmpb
lods
js
push
ret
add
adc
sbbl
cmp
xor
pop
ficomps
pop
mov
in
jbe
sti
xchg
jmp
mov
fsincos
into
testb
lea
jl
sbb
xchg
outsl
repz
xor
mov
fstl
cli
cmp
dec
lcall
test
ja
or
sbb
cmc
nop
mov
jno
incl
mov
hlt
fiadds
jge
cld
fistpll
sarl
lcallw
cltd
xor
mov
loop
sbb
ja
xor
or
adc
inc
xchg
dec
lock
xchg
fnstcw
lods
cltd
xor
and
ficompl
test
jnp
xchg
xchg
es
cltd
cmp
loopne
mov
xor
sti
cmp
test
fists
dec
and
cmp
mov
fwait
imul
ljmp
add
cld
lcall
mov
mov
xor
ljmp
push
faddl
cmpsl
cld
cli
jecxz
inc
adcb
hlt
inc
cs
test
dec
cwtl
push
cmpsb
lcall
xchg
popa
xorl
cmp
pop
movsl
jbe
aaa
jnp
test
mov
dec
pop
or
rcll
and
je
lods
push
ja
xchg
push
out
test
mov
push
push
push
xlat
repz
pop
out
push
aad
sub
cmp
sub
movsb
test
adc
cmp
lcall
add
sbb
sbb
stos
aam
mov
mov
mov
int
fdivs
jg
mov
incl
and
lock
mov
dec
jae
fwait
push
lods
lcall
add
out
fcomp
dec
mov
or
dec
sbb
movb
push
inc
cmp
aad
cmpsl
jmp
fldt
or
les
out
scas
iret
imul
jns
das
enter
mov
add
mov
cmp
in
imull
loope
lcall
push
pop
sti
mov
cmc
sub
cmp
push
shlb
dec
movsl
cltd
or
mov
xlat
inc
mov
ljmp
inc
inc
pop
sahf
mov
mov
shr
out
pusha
dec
aaa
shll
add
inc
icebp
outsb
repnz
int
jbe
data16
popl
cltd
hlt
adc
inc
fisttps
call
ljmp
lock
scas
or
nop
sub
outsb
add
and
fsubrl
iret
jp
cmp
daa
mov
in
mov
js
jp
cs
mov
xor
mov
lock
outsl
ds
jle
inc
and
mov
andl
jmp
fwait
sbb
test
sub
ljmp
jle
movsb
mov
aad
loop
pop
add
aaa
mov
pop
adc
or
sbb
or
fcmovne
orl
jae
sbb
jno
dec
mov
pop
mov
adc
sti
jge
dec
fwait
divl
and
sbb
jl
orl
push
iret
jae
shr
or
push
sarl
cmp
adc
xchg
mov
jo
ficompl
push
mov
icebp
cli
loop
arpl
mov
sbb
xchg
and
scas
cli
outsb
pop
mov
clc
int
mov
lret
add
sahf
xchg
xchg
stos
sahf
sbb
xchg
cmpps
add
pop
shr
mov
sbb
jge
push
ret
cli
jmp
shrl
lods
clc
test
xchg
imul
pusha
xchg
xor
jg
imul
inc
dec
add
dec
xchg
inc
inc
aaa
jp
push
push
cltd
fdivrp
mov
je
add
call
in
push
dec
or
repnz
es
mov
mov
xchg
adc
jp
and
shlb
add
loopne
cmp
mov
mov
mov
push
outsb
cmp
mov
push
lcall
ficoms
lods
iret
loop
pusha
daa
stc
in
cmp
jae
repnz
fwait
scas
sub
push
sub
mov
inc
inc
ja
ljmp
mov
fdivl
test
pop
push
into
std
incl
lock
ror
or
push
shrl
aaa
pop
cmp
pop
in
aam
adc
cld
jle
jne
out
cmpsl
mov
out
js
mov
cli
xchg
mov
mov
pop
sub
jge
shlb
mov
xchg
jp
jbe
movsb
arpl
nop
mov
cmc
outsl
mov
add
fisubrs
add
fcompl
jecxz
fwait
enter
xor
int3
test
loopne
lods
push
xchg
imul
into
sub
jp
or
repz
inc
ljmp
cmpsb
jae
mov
stc
lcall
loopne
and
add
and
ljmp
aam
popf
aaa
ret
int3
mov
es
dec
ja
or
outsl
push
push
adc
in
cmpb
jp
dec
out
lds
mov
mov
ljmp
sub
sbb
repz
ljmp
jle
jnp
gs
sbb
mov
cmpsl
xchg
jmp
cwtl
mov
adc
inc
add
or
jg
stos
into
dec
lods
mov
sub
add
ret
mov
test
rolb
stos
pop
jne
inc
in
xor
lret
imul
arpl
jnp
jge
int
loope
cmp
ret
dec
xchg
arpl
and
movsb
cmpsl
jecxz
xor
pop
addl
call
out
push
cmp
jns
mov
jmp
jl
and
aam
das
mov
das
xor
clc
shl
inc
addr16
jge
sbb
sti
inc
cld
popa
fisttpll
add
clc
popf
ss
add
xlat
sub
pop
out
jbe
into
out
sbb
dec
sbb
mov
mov
stos
test
jb
lcall
mov
dec
jg
fstpl
cmpsb
insb
pop
loopne
jl
in
sbb
leave
mov
clc
mov
inc
pop
xor
mov
add
xor
xchg
jbe
and
mov
dec
adc
sub
les
jl
imul
pop
mov
mov
add
stc
sbb
fildl
xlat
leave
sub
inc
xchg
leave
imul
pop
push
popf
int
xchg
out
mov
dec
mov
rcr
cmp
mov
jno
jo
cmp
cmpsb
cli
sub
popf
and
test
shlb
ret
cmpsb
jb
test
push
int3
push
inc
test
pusha
test
or
mov
push
inc
outsl
mov
xchg
mov
dec
jns
xchg
fidivrs
out
mov
sbbb
mov
push
mov
xlat
xchg
mov
push
dec
xchg
xchg
dec
stos
mov
and
add
loope
lahf
ret
iret
cmovno
out
push
lret
out
add
cmpsb
aaa
inc
or
jecxz
aad
push
xchg
popa
sbb
popa
and
mov
add
iret
loopne
or
cmpsl
out
nop
scas
cmp
in
imul
mov
or
sbb
jbe
fildl
movsl
pop
xchg
jle
pop
nop
movsl
iret
add
imul
dec
cmp
push
push
pop
xchg
orl
mov
inc
pop
xor
int3
xor
lods
cmp
and
aam
adc
xchg
cmp
imul
loopne
adc
inc
jle
adc
push
xor
dec
xchg
xorb
shlb
mov
or
nop
insl
mov
std
mov
iret
push
pop
in
faddl
dec
mov
cli
dec
aad
arpl
iret
in
std
sub
stos
and
mov
aam
xlat
fistpl
mov
nop
mov
shrb
frstor
roll
ret
nop
fs
rorb
sbb
in
add
mov
dec
scas
pop
stos
push
in
inc
sub
in
jg
add
loopne
insl
pop
adc
icebp
lods
xchg
fsubl
jo
hlt
inc
std
loope
and
test
lret
jp
or
and
rorl
cmpsl
and
or
dec
jb
adcl
sub
jbe
cld
push
scas
or
subl
or
inc
push
enter
icebp
dec
push
iret
mov
xchg
xchg
add
sub
pop
leave
cwtd
iret
mov
notb
subl
sub
and
pop
push
fcoms
xor
push
cli
jne
std
mov
imul
and
jmp
jecxz
test
lods
ds
cltd
xchg
mov
sbb
adc
sti
xchg
jns
loopne
fdivrl
rorl
pop
xchg
je
imul
sub
mov
dec
movl
pop
pushf
mov
sbb
fstps
cmpl
pushw
mov
insl
mov
arpl
imul
pop
push
mov
adc
ljmp
sbb
sbb
lcall
popa
jae
jge
add
lcall
mov
aaa
inc
and
push
test
xor
das
repz
pop
xchg
in
test
sub
or
into
adc
xchg
mov
pop
fldln2
mov
push
pop
aaa
scas
fsubs
clc
sub
cmp
add
shl
inc
bound
testb
div
or
pop
and
push
push
jnp
fstps
clc
mov
lret
ret
cmp
and
sub
cld
inc
jne
lcall
mov
push
push
xor
lods
ja
or
fs
lock
inc
pop
test
test
adc
aam
int
cli
dec
sub
aad
cld
pop
xor
loopne
jnp
cs
inc
sub
jmp
jge
dec
adc
test
dec
aad
cltd
jmp
mov
andl
inc
push
sub
mov
leave
or
push
lods
mov
fldl
ret
mov
insl
mov
dec
insl
xor
leave
push
adc
inc
loopne
mov
cli
xchg
jne
jge
lds
imul
and
inc
test
jl
frstpm(287
dec
les
fsubs
aaa
fsts
fisttpl
ds
lods
cmp
arpl
add
jno
test
bound
xlat
sub
in
and
in
cltd
push
or
popf
enter
or
test
in
fcoml
leave
aaa
jne
jbe
in
push
sub
add
cmp
and
pop
shll
push
imul
pop
push
ret
nop
pop
cmp
add
lret
jmp
lock
jne
div
test
inc
mov
or
into
sub
cmp
hlt
jno
cmp
mov
mov
neg
ja
jge
xor
call
popf
nop
iret
lds
shll
out
fisubrs
adc
into
sbbb
es
mov
popa
ljmp
mov
pusha
mov
lods
or
mov
push
mov
jnp
mov
dec
push
test
jae
jl
aam
xchg
icebp
jge
xor
adc
jo
inc
jno
mov
or
dec
sbb
push
jae
ret
das
mov
addb
bound
lret
int3
xor
cld
out
dec
adc
into
dec
cmp
push
push
sti
mov
xor
enter
jo
xlat
push
inc
mov
je
nop
sbb
xchg
mov
sub
push
jge
dec
sbb
cld
mov
or
xchg
cmp
gs
fisubrs
push
test
and
xchg
jno
addr16
adc
inc
fstl
cmp
cmc
mov
sarb
and
ret
int3
pusha
xor
cmp
clc
dec
mov
repnz
mov
jb
mov
xor
sahf
nop
ret
mov
or
cmp
or
or
sub
outsb
xor
inc
fs
pushf
mov
sbbb
push
cmp
sub
mov
test
cmp
xchg
or
jle
imul
xor
in
addr16
push
test
jmp
jae
ds
lcall
and
lds
inc
pop
or
pop
sbb
mov
call
and
xor
sti
stc
enter
add
cli
jp
cld
xchg
mov
leave
ss
xlat
movsb
arpl
ja
cmpsl
or
and
cmp
adc
xchg
and
pop
xor
inc
lock
jecxz
fisubrl
sbb
add
or
fs
cs
dec
test
test
push
outsl
jb
xor
mov
clc
inc
bound
pop
idiv
xchg
add
mov
xor
test
mov
mov
into
pop
cmp
imul
xchg
xlat
fsubl
repz
cmp
and
divl
iret
imul
cmpb
lahf
cli
ret
fs
movsl
jae
mov
inc
jle
xor
int3
mov
pop
ret
xchg
cld
xchg
pop
sti
daa
sbb
or
sbbb
jl
shrl
into
xchg
je
sbb
xlat
sti
sahf
sti
push
dec
int
or
aaa
shlb
mov
mov
or
mov
repz
out
pop
imul
jns
hlt
popa
fisttps
and
dec
fimuls
and
push
add
pop
jp
fisubrs
and
sub
inc
sbb
mov
jmp
enter
gs
lock
cltd
mov
adc
rcll
sbb
mov
xor
and
mov
add
iret
iret
jmp
sbb
push
loopne
in
adc
or
pop
adc
lods
repnz
cmp
stos
ret
add
mov
cmpl
imulb
jb
movl
mov
pop
int
xor
sub
adc
adc
jbe
dec
stos
sti
mov
cmp
aad
std
leave
pop
mov
mov
shlb
push
push
aam
out
cmp
out
daa
mov
and
xchg
jle
movsb
dec
inc
daa
cmp
pop
lods
push
xchg
cltd
xchg
hlt
sarl
and
negl
push
push
testl
adc
cmp
adc
pop
shl
push
stos
cld
arpl
or
pop
inc
push
das
cmp
mov
jmp
adc
mulb
outsl
inc
xor
pop
ret
outsb
je
nop
inc
xor
mov
jl
mov
mov
cld
push
pushf
pop
push
xchg
jb
cwtl
inc
aam
inc
rclb
add
mov
rorb
xchg
mov
ljmp
out
lea
and
sub
inc
enter
imul
sahf
fstpl
fidivs
jno
mov
addl
jle
add
pop
inc
dec
mov
dec
clc
popf
inc
incl
adc
xchg
dec
cmp
jbe
loope
jp
sbb
outsb
imul
addr16
insl
aas
int3
xor
push
mov
mov
outsl
repnz
loopne
push
into
int
outsb
mov
das
pop
mov
or
mov
xor
hlt
jnp
out
into
pop
mov
inc
cmp
jo
lret
notb
out
add
pusha
out
aad
iret
imul
ljmp
lret
ret
mov
mov
cltd
sub
xchg
or
sub
adc
ficoms
xor
stc
ljmp
or
mov
ljmp
call
and
aaa
pop
das
sbb
push
xchg
push
jns
adc
mov
xor
or
mov
mov
sahf
jb
adc
out
mov
test
jns
jecxz
push
pop
dec
xchg
pop
outsb
fnstsw
fsubl
enter
inc
xchg
lea
inc
mov
repz
clc
ret
mov
lret
in
pop
lret
jmp
shlb
sbb
inc
sub
mov
cmp
mov
ss
fdivrl
int
push
mov
mov
push
stos
mov
fadds
into
dec
rolb
inc
loop
out
adc
dec
push
add
mov
or
dec
sub
les
adc
cmp
cmp
mov
scas
jmp
ret
call
scas
mov
adc
cli
pop
jp
lcall
add
sti
repnz
ret
in
pop
and
mov
jb
mov
adc
pusha
movsb
or
push
shr
pushf
cmpsb
out
dec
push
dec
rorl
cmpsb
cmp
push
push
ja
adc
push
lods
dec
jns
roll
mov
cmp
xor
fsubrl
outsl
sbb
in
cmp
xor
adc
sbb
lods
dec
dec
notl
sub
cmp
sbb
sub
xor
sbb
jp
pop
inc
orb
in
dec
jae
lret
xchg
mov
out
arpl
cmpsb
xchg
push
aam
xchg
xchg
cs
fstps
push
loopne
leave
bound
xor
ficompl
leave
add
das
push
mov
sub
nop
fmuls
popa
cmc
lahf
add
inc
or
ror
gs
data16
adc
pop
out
pop
push
xchg
mov
mov
inc
pop
lret
mov
std
xor
and
jne
mov
mov
mov
hlt
fistpl
dec
mov
ss
inc
xchg
js
xchg
jmp
adcl
pop
and
push
ficoms
jno
les
jbe
dec
lcall
xor
jecxz
cmp
xchg
adc
popa
sub
xchg
call
outsb
sub
jo
stc
sbb
sbb
lcall
mov
sbb
mov
aam
outsl
add
or
sar
xchg
roll
insb
adc
xchg
mov
sub
popf
cltd
insb
pop
push
jp
add
push
jge
stos
sbb
leave
or
orb
pusha
pop
cli
decl
xor
sub
imul
dec
mov
fbld
test
xor
bound
or
orb
sahf
in
cmp
lahf
xchg
mov
xlat
sahf
sub
adc
daa
and
arpl
out
jo
mov
loope
add
adc
sbb
sub
int
js
lock
cmp
hlt
cwtl
mov
and
adc
push
push
ljmp
xchg
lahf
imul
call
xchg
xchg
lea
jns
xchg
adc
jae
inc
xchg
mov
sar
cmp
add
mov
cmpsb
push
das
add
icebp
popa
jae
sbb
lret
popf
cmpsb
test
dec
cmp
popa
jne
xchg
sti
cs
pop
push
lds
inc
stos
jp
mov
imul
jl
mov
dec
stc
sub
filds
push
gs
push
inc
out
push
or
add
iret
scas
mov
xlat
xchg
cmp
ret
sbb
jp
jno
pop
pop
xchg
or
mov
xchg
loope
and
divb
jmp
fwait
push
inc
pushf
stos
add
jmp
movsb
mov
cmpsb
popf
mov
pusha
testl
stc
mov
imul
data16
fcompl
push
push
sbb
and
stos
mov
pop
repnz
add
jle
loopne
mov
push
xor
pop
adc
add
mov
sub
cmp
push
dec
mov
pop
mov
cli
push
push
outsb
fiadds
aad
aam
clc
in
adc
ja
andl
es
inc
mov
fidivl
mov
xchg
ret
leave
adcl
je
repz
cmpsl
pop
mov
aad
dec
add
mov
cvtpi2ps
push
push
mov
xchg
jl
cs
sbb
push
cmp
push
or
in
cmp
fsubrs
nop
in
jl
pop
dec
repz
cmpsl
lods
jae
push
jp
clc
jl
jb
pop
adc
in
test
mov
stos
movb
fincstp
mov
dec
mov
lret
push
fcmovnu
in
pop
mov
lods
push
loopne
loopne
enter
in
fstpt
pusha
or
lods
and
mov
shrl
jmp
out
lahf
xchg
mov
out
xor
lods
inc
rcrl
fld
sti
sub
mov
daa
or
faddl
lret
mov
add
into
fwait
mov
adc
addr16
fiaddl
pop
xchg
sbb
fwait
pop
xchg
out
or
sbb
xchg
push
sbb
fwait
inc
mov
xor
adc
mov
hlt
mov
mov
mov
dec
push
pop
inc
icebp
loope
jmp
mov
xchg
or
lcall
cmpb
push
mov
cmp
xchg
pop
das
dec
dec
dec
xchg
rorb
jge
stos
push
roll
add
insl
push
shlb
xor
ss
adc
push
fidivs
push
adc
clc
mov
push
stos
jne
mov
in
xchg
xor
out
ret
cmp
out
mov
in
int3
or
or
lcall
xchg
out
push
insl
push
das
test
push
push
jp
xor
lret
adc
loope
push
ret
mov
enter
nop
fchs
sbb
ljmp
cmp
mov
push
or
push
jmp
push
adc
sahf
repnz
dec
clc
adc
loopne
jmp
inc
push
push
mov
cltd
sub
mov
inc
sub
dec
out
mov
popf
jle
lock
or
or
in
fsubs
enter
sub
movsb
insl
push
mov
jae
sbb
pop
cmp
ljmp
xor
or
push
lea
daa
jns
sub
mov
pop
inc
and
xor
aaa
mov
mov
cmp
xchg
adc
imul
fs
aam
ror
aad
enter
rolb
movsb
or
popf
inc
clc
test
or
int
cli
imulb
into
test
fwait
sub
fldcw
xchg
ja
cmp
mov
mov
insb
fsubrs
cmp
jecxz
in
lods
and
cmp
int
in
cs
cmpl
pusha
or
ss
mov
mov
cld
sub
es
pop
dec
dec
dec
addl
addb
mov
xor
rcr
rcrl
sub
movsl
loopne
mov
cld
dec
out
mov
mov
mov
das
add
or
jmp
dec
push
xor
fs
sub
xchg
leave
jno
rcrb
int
xchg
mov
and
in
pop
sbb
add
lcall
sbb
mov
sbb
cmp
or
push
cmp
mov
xor
jne
jle
pop
mov
adc
outsl
pop
ds
pop
ficoml
popa
dec
fstpl
jecxz
inc
cmp
mov
push
pop
aaa
push
outsl
jb
ret
dec
mov
lahf
popa
in
sub
and
jecxz
lock
jbe
repnz
cmpsb
sub
pop
cwtl
pop
rcr
movsl
pop
xor
push
cmp
cld
dec
and
sbb
fmulp
sarl
jnp
add
push
movsb
aas
dec
pop
jmp
aad
in
dec
dec
pop
pop
push
pop
jne
or
mov
lods
cmp
movsb
push
push
add
insb
enter
mov
or
inc
imul
xchg
pop
mov
mov
test
popf
lods
and
lods
jmp
jns
xor
call
insl
int3
add
scas
pop
mov
jecxz
dec
sti
jecxz
sbb
sbb
dec
fnstenv
cmp
inc
add
ror
adc
xchg
daa
sub
pop
cld
sbb
cs
jl
cli
mov
gs
xchg
pop
bound
in
fistpl
inc
test
movsl
or
idivb
mov
out
sub
aad
les
bswap
pusha
out
jecxz
daa
es
insb
in
push
pop
sub
fdivl
inc
outsb
rcrl
mov
popa
pop
iret
scas
or
mov
inc
xchg
incb
add
xor
cmp
icebp
dec
cmpsl
gs
insl
pop
fimull
mov
decl
iret
mul
jb
sti
stc
mov
sbb
cmc
in
xor
sbb
cs
nop
add
push
push
cs
jne
mov
movsl
fdivl
mov
test
mov
adc
xchg
push
out
jne
jno
lret
xor
jb
dec
jecxz
xor
and
or
pop
out
xchg
jmp
clc
pushf
popfw
cwtl
lcall
gs
enter
in
mov
inc
cwtl
ret
sub
idivl
cmc
inc
push
iret
ror
fldenv
outsb
clc
es
ja
adc
shr
nop
or
inc
or
push
cltd
sub
jl
lcall
or
ds
jmp
testl
pavgb
xchg
xor
das
cmp
lds
dec
mov
rorb
and
jae,pt
fwait
mov
lret
inc
mov
inc
jg
outsb
cwtl
mov
popf
lock
lahf
int3
xor
stos
aas
mov
and
and
int
or
jecxz
cmp
jecxz
mov
mov
pushw
inc
pop
xor
and
stos
popa
rolb
out
adc
push
in
shll
and
push
push
inc
pop
idivl
flds
dec
xchg
sbbb
push
cmp
pop
xor
mov
push
cmpsb
stos
jae
fildll
rcll
bound
sub
rcr
xor
mov
push
nop
mov
rcll
scas
pop
jmp
lods
outsl
fucomp
sarl
xor
dec
dec
ret
daa
jl
mov
clc
pop
pushf
cmpsb
jo
aaa
les
or
or
cmp
or
imul
jae
mov
fs
xor
inc
lret
aaa
jp
incb
fimull
shrb
dec
outsl
lcall
cmp
sbb
jmp
adc
inc
mov
ret
lods
outsl
pushf
adc
lcall
mov
mulb
mov
fwait
js
xor
mov
ja
and
popa
not
repz
mov
arpl
adc
int3
jle
je
mov
mov
jg
push
xor
xchg
adc
scas
sub
and
jne
loope
faddp
mov
pop
scas
test
ds
sbbl
jbe
nop
in
mov
clc
xlat
cltd
shl
popa
pop
rcrb
add
lahf
loop
aaa
jbe
test
insb
popf
stc
daa
popf
testl
jo
out
stos
mov
daa
add
std
pop
stos
decb
fs
xchg
jg
or
cvtpi2ps
or
ret
fdivs
xchg
jne
shrl
or
push
mov
or
push
insl
pop
out
bnd
flds
sub
fisubl
leave
or
shll
cvtdq2ps
fstpt
mov
adc
mov
add
add
jl
scas
xchg
push
testl
mov
mov
int
ret
fistl
mov
mov
addl
mov
test
mov
into
push
scas
and
fs
mov
nop
rclb
sti
cmpsb
mov
sub
push
cs
mov
xlat
fs
inc
arpl
lds
adc
shlb
in
ja
add
popl
subb
ds
fisttps
enter
mov
xchg
add
cmp
aaa
loop
imul
lahf
popf
rcll
jl
push
lret
idivb
push
ucomiss
sbb
mov
out
cmc
movsl
cwtl
js
loopne
pop
repz
cmpsl
fildl
aas
pop
cmc
adc
les
push
cmp
ja
mov
or
testl
popa
xor
popf
xlat
aas
xchg
sahf
mov
dec
sub
push
nop
inc
nop
and
pop
nop
push
and
mov
std
sarb
in
popf
xor
xchg
int
dec
cmpsb
addr16
cli
jp
xor
push
test
pop
cmpsb
jns
int
ret
mov
pop
add
faddl
cmp
popf
outsl
mov
std
test
jne
xchg
fs
jle
cli
mov
mov
or
inc
enter
jecxz
cwtl
stos
mov
cmc
mov
mov
mov
cmc
addr16
sub
mov
cwtl
sub
xchg
cltd
popa
mov
cld
leave
and
or
pop
cmp
clc
sub
ror
mov
mov
fisubs
xchg
call
mov
push
mov
cmp
repz
lods
xchg
dec
sbb
add
xchg
js
cmp
inc
ret
mov
and
lcall
sub
movsb
xchg
scas
out
cmp
jae
sahf
jno
sbb
insl
loope
mov
ret
xor
out
xor
mov
aam
fmuls
cmp
mov
cmp
repnz
pop
jecxz
jl
xchg
mov
movsl
xchg
shlb
pop
jbe
push
inc
inc
addr16
push
es
repz
adc
nop
clc
das
cld
ret
je
mov
lret
or
out
adc
test
xor
add
aas
cltd
insl
jns
sub
lds
dec
fdivrl
dec
out
cmp
push
inc
mov
lods
test
push
icebp
jle
xchg
sbb
jmp
das
lcall
daa
mov
adc
in
xlat
pop
adcl
add
sub
xor
mov
dec
lods
mov
mov
sbb
sahf
mov
adc
pop
rol
int3
aad
xorb
ja
test
push
adc
es
inc
mov
fsubs
mov
pop
rorb
loope
inc
ss
xchg
xchg
inc
in
leave
or
into
aas
fsubr
mov
adc
fwait
pop
xor
fiadds
out
scas
fnstcw
sahf
push
andb
jae
mov
inc
mov
es
fmuls
lcall
fcmovnbe
out
jne
cmp
filds
loop
cmp
or
xor
inc
dec
push
xor
dec
mov
push
sub
scas
das
push
bound
and
out
fildll
adc
pop
stos
inc
mov
sbb
fdivl
pop
in
pop
outsl
cld
pop
sarb
gs
or
sub
data16
jl
jno
stos
sbb
mov
test
and
xchg
in
insl
push
jae
adc
inc
popf
add
movsb
add
shlb
fyl2xp1
shll
xchg
xchg
cmp
ret
cmp
sub
push
scas
div
dec
add
mov
mov
dec
ja
shr
jmp
repnz
xor
push
je
adc
adc
mov
mov
adc
aad
mov
jge
inc
adc
push
or
xlat
dec
fcmovb
addb
mov
inc
mov
add
fisubrs
cmpl
ret
repz
test
xchg
cmp
idivl
jae
ficomps
mov
inc
cmpsb
aam
out
fdiv
repnz
mov
fidivs
jp
jmp
into
and
jle
push
insb
lods
icebp
lods
repz
sarl
mov
sub
bound
push
or
cld
cmp
xor
clc
rcrl
out
add
stc
aam
mov
add
lret
fdivr
inc
jbe
add
test
push
insl
jmp
xchg
xchg
xor
pop
test
pop
dec
xor
sbb
fmuls
decl
scas
mov
cmpsb
mov
push
js
insl
ret
out
lock
fchs
xchg
and
loopne
dec
pop
addl
fmul
and
add
dec
ret
push
pop
dec
sbb
andl
xor
push
dec
in
xchg
cmp
or
dec
add
ja
lods
or
adc
lcall
xor
jno
js
adc
pop
and
inc
cmpl
pushf
cmpsl
mov
add
sbb
or
mov
out
rcl
cmc
test
mov
lcall
xchg
in
add
xchg
ret
mov
aaa
cmp
add
ds
dec
lds
inc
cld
shl
mov
sub
negb
push
popf
push
jp
or
mov
or
dec
adc
lods
or
cli
dec
ljmp
dec
cld
sub
mov
arpl
mov
nop
outsb
add
pop
sub
push
xor
add
aas
jnp
test
sub
lods
lret
ljmp
clc
inc
adc
ljmp
jge
ds
in
and
inc
clc
in
sbb
push
es
mov
cltd
loopne
jmp
shll
leave
popa
in
int3
adc
pop
xchg
in
clc
js
mov
sbb
loopne
out
and
fmull
xorl
fsubr
jle
int
test
shlb
mov
pushf
xor
inc
repz
shl
mov
daa
pop
inc
and
pop
adcb
xor
fidivs
xorb
xor
js
and
enter
movsl
push
arpl
addr16
in
and
xorl
mov
push
stos
add
insb
jno
xchg
hlt
sub
inc
and
nop
pushf
loop
push
jno
inc
sbb
outsb
test
xlat
sarl
icebp
ljmp
or
fmull
in
mov
es
out
pushl
hlt
in
push
jae
shlb
loope
pop
lock
xchg
fwait
scas
test
shl
mov
jne
loope
jl
fwait
cmp
ret
mov
js
add
or
sbbl
mov
test
push
das
popa
dec
sbb
into
mov
sub
stos
add
dec
vprotb
inc
cmpsl
xor
icebp
fnstcw
and
pusha
fisttps
ret
subb
push
mov
push
leave
inc
rolb
fstpt
pop
xchg
xchg
and
push
xlat
in
dec
lahf
jg
pop
int
scas
mov
inc
jbe
hlt
xor
sub
outsb
mov
sub
stc
into
push
pop
sbb
add
pop
int
fistl
cmp
subl
inc
scas
add
mov
ret
dec
fimuls
test
mov
nop
test
mov
aam
stos
jl
cld
adc
or
in
jbe
sub
sahf
sbb
fdivl
lcall
inc
fcmovb
jno
push
push
ss
jp
repz
or
adc
xor
and
punpcklbw
jp
xchg
inc
das
outsb
ja
imul
push
jmp
sub
cltd
sub
das
js
jge
mov
in
dec
adc
mov
add
lods
mov
add
xor
fs
sub
aad
iret
mov
outsb
idivb
ss
mov
or
arpl
mov
enter
imul
push
imul
and
int
pop
lcall
leave
das
xchg
mull
imul
call
insb
outsb
or
cmp
fisttpl
sub
xor
test
add
shll
mov
outsb
fs
je
jle
push
scas
scas
imull
sub
xor
mov
ds
lods
notl
lret
xor
pop
jo
push
cmc
inc
les
sub
sub
cmc
or
sbb
push
sub
or
cmp
test
repz
xchg
es
cmp
lds
movsb
push
dec
and
decl
lahf
ret
push
in
ljmp
jnp
and
lds
jbe
add
fwait
movsl
jo
aaa
pop
addr16
sbb
mov
dec
cmp
mov
icebp
add
scas
push
mov
and
aaa
inc
cs
add
jbe
inc
movsb
scas
mov
lret
shll
lret
lret
mov
pop
jmp
xor
and
jp
jo
xchg
fstpl
push
inc
cmp
or
outsb
xchg
cmpsb
xchg
and
lods
sbb
push
mov
mov
mov
mov
bound
pop
mov
ja
and
push
icebp
or
out
ret
int3
push
xchg
inc
cmp
pop
jbe
lds
in
sbbl
or
cmp
mov
sub
std
add
sbb
imul
inc
push
xor
adc
cwtl
cmpsb
bound
nop
call
es
jae
sub
stos
nop
dec
push
mov
mov
jl
sarl
pop
nop
loopne
pop
outsb
cwtl
xor
adc
xchg
repnz
lods
lea
or
ljmp
adc
in
mov
shlb
mov
jbe
xchg
or
xchg
xchg
inc
push
jmp
pop
leave
cmpsl
jecxz
cltd
xchg
mov
and
or
imul
push
aam
and
fstp
test
jp
mov
xchg
movb
sbb
mov
push
stos
mov
pop
sti
jns
push
and
clc
lods
and
in
push
pop
dec
std
xchg
mov
add
inc
sahf
testb
xor
faddp
cmp
pop
xchg
inc
aam
in
ret
ret
push
es
in
mov
and
adcl
xchg
add
addr16
jl
shlb
call
jg
test
push
inc
imul
lods
ljmp
lcall
jp
adc
rorl
adc
inc
sti
ja
lods
and
lret
outsl
or
sbb
popf
jge
jge
movsl
jns
jbe
stos
imul
cmp
push
sbb
fbstp
dec
cli
je
testl
adc
mov
int
cmp
cmp
sbb
in
push
scas
jl
fimull
lock
js
faddl
jb
push
sub
mov
mov
mov
imul
outsl
sti
and
aaa
shl
ud0
lods
fldz
adc
push
lea
jmp
adc
icebp
out
scas
mov
mov
and
outsl
lret
ds
es
jno
dec
push
dec
fistpll
nop
insb
jle
negl
in
push
fwait
arpl
dec
out
xchg
int3
insl
int3
inc
xrelease
sub
and
pop
mov
inc
jo
sti
mov
sahf
xor
imull
bound
push
sar
xlat
dec
pop
popl
js
mov
sbb
addr16
or
lds
and
xlat
mov
xchg
movsl
dec
xchg
pop
sbb
popa
movsl
inc
mov
dec
mov
xchg
push
xor
xor
or
daa
sbb
in
jl
add
cli
div
insb
cltd
int3
pop
push
fs
sbb
sbb
sub
push
in
fnstsw
bound
int3
pop
jmp
inc
or
pop
xlat
sahf
mov
cmp
jp
inc
xor
lock
sub
sldt
add
cmp
out
sub
adc
lods
cwtl
aaa
sbb
rcll
inc
push
into
inc
pop
lock
mov
sbb
mov
inc
ljmp
call
adc
xchg
packssdw
and
psubsw
and
arpl
movsb
nop
js
push
jmp
or
leave
cs
add
test
adcl
into
aam
sbb
popf
cwtl
faddl
lods
hlt
dec
push
fucom
sub
or
lods
mov
loop
jl
in
jg
jno
pop
lods
out
mov
cmp
sbb
dec
jbe
adc
lahf
cld
sub
inc
push
pusha
lods
pop
push
popf
adc
or
or
add
daa
xlat
mov
sahf
dec
mov
mov
movb
test
push
jl
sub
xchg
mov
dec
shlb
lds
mov
das
xlat
shrl
insl
pop
out
pop
or
aam
push
jp
ret
push
ds
cmp
or
inc
pop
clc
mov
pop
fnstsw
lret
cmp
bound
ds
mov
hlt
jns
idivl
repz
inc
xor
cmp
mov
push
ds
inc
push
mov
inc
cmp
insl
xchg
xchg
sub
jne
jnp
leave
sbb
test
or
bound
sub
xor
andb
mov
fmul
stc
mov
stos
sub
add
sbb
mov
mov
pop
mov
mov
dec
inc
sub
flds
push
and
scas
sub
jne
mov
repnz
aas
push
xor
pusha
push
dec
add
inc
insb
test
mov
out
xor
ret
xor
cmpsl
ljmp
not
enter
lods
test
add
jecxz
out
push
scas
pop
add
test
and
mov
pop
mov
int3
pop
mov
sbb
jae
xlat
pop
movsb
cld
fbld
jecxz
insl
shrb
and
nop
and
aaa
cmp
cmp
push
cmp
and
cmc
cmp
pop
arpl
jno
imul
sbb
push
dec
test
dec
fbstp
shlb
xchg
inc
mov
mov
pop
add
xchg
andb
orb
cmp
outsb
mov
aas
and
add
push
sub
xor
lock
push
arpl
es
shl
pop
ss
mov
sub
outsb
add
nop
or
stos
xchg
inc
cmpsl
push
jecxz
and
std
test
and
adc
push
xchg
or
jbe
cs
cmp
mov
mov
sub
sti
mov
xor
imul
jo
int
loop
and
aas
aad
pop
call
les
inc
ljmp
lods
mov
sbb
idivb
fnstcw
add
sub
popf
aam
xor
jle
lea
rep
inc
imul
mov
insl
je
int3
sahf
xchg
cwtl
jecxz
movsl
aaa
and
repz
sbb
push
sbb
dec
adc
popf
lds
push
dec
xorb
sti
xchg
pop
scas
hlt
mov
mov
aaa
rorl
mov
fs
cmc
push
pop
incl
test
out
push
sub
mov
or
mov
les
sbb
hlt
inc
push
dec
test
ss
loop
icebp
call
pop
mov
inc
pushf
cli
pop
cmpsb
and
movsb
lcall
mov
jmp
push
inc
popf
jp
xor
jge
repz
mov
sbb
fldl
mov
mov
sbb
outsl
add
and
pop
sar
or
inc
into
pop
aas
into
sub
inc
daa
and
dec
xchg
cmp
sbb
dec
shlb
lock
std
sbb
adc
mov
sub
inc
mov
xchg
orb
ficoml
push
call
sub
xchg
inc
mov
sub
sbb
sti
inc
loop
popw
filds
add
outsl
testl
rcl
loop
fldl
jne
add
pop
pop
mov
testl
xchg
xchg
addl
rcrl
je
xor
scas
add
out
push
ret
dec
je
sbb
mov
ds
cmpb
test
in
sti
and
ss
sbb
adc
outsl
pop
or
addr16
lods
mov
lret
aad
popl
push
mov
push
mov
notb
fs
imul
dec
or
push
movsl
dec
div
adc
ss
pop
and
and
pop
cmpsl
jae
xchg
cltd
xor
hlt
fldcw
pop
jle
imul
sub
xchg
sub
pop
pop
pop
outsl
xchg
out
jg
jg
shr
out
scas
cwtl
xor
lret
fmull
loopne
jo
add
or
mov
lods
lods
sbb
int3
mov
sbb
mov
in
xor
jl
mov
rolb
cmp
xchg
scas
sarb
inc
fildl
jecxz
or
mov
ja
cltd
stos
stc
leave
push
daa
dec
es
push
scas
push
dec
xorb
in
test
outsb
xchg
ljmp
call
cltd
loop
mov
das
add
lds
pop
movsb
ds
fmull
pop
insb
mov
in
sbb
dec
lret
jle
int3
adc
mov
dec
aaa
mov
ds
push
push
in
xchg
cmpb
mov
dec
aas
or
mov
fimull
or
pop
xchg
mov
push
shl
ss
jbe
push
std
push
jmp
push
jno
jecxz
popf
adc
cli
xor
adc
dec
hlt
int3
mov
addr16
aad
pusha
out
in
push
pop
sbb
mov
shlb
mov
mov
andb
lahf
and
inc
mov
andb
pop
push
pop
and
jl
aam
stos
fisubrl
pop
notb
cltd
cmpsb
mov
sar
dec
dec
into
lsl
scas
dec
jns
adc
adc
inc
aas
stc
nop
js
adc
xor
out
xchg
cmp
adc
hlt
cmp
fildll
xchg
xor
test
arpl
xchg
mov
lea
pop
pavgb
xlat
push
ret
jge
aam
in
pop
std
sahf
int3
and
add
fstp
jbe
xlat
jb
lcall
fdivr
dec
rcl
jae
shlb
nop
inc
mov
adc
insl
pop
sub
in
stos
call
pop
jl
sbb
jns
fstpl
lret
negl
adc
add
sub
jb
mov
push
mov
push
les
push
jno
es
jnp
js
mov
loopne
ljmp
push
loopne
mov
sub
lods
jne
fmuls
mov
orb
xchg
into
outsl
push
lods
call
stos
jecxz
dec
dec
xlat
in
mov
gs
leave
dec
and
sub
and
add
arpl
add
cmp
pop
test
lea
pop
je
insb
out
lahf
pop
aam
sbb
sbb
add
inc
out
add
add
fwait
ror
testl
repnz
sub
lret
shrl
mov
pop
stos
fdivrs
repnz
sbb
cmp
loope
into
sub
enter
or
push
in
pop
scas
xchg
pop
adc
mov
std
out
and
push
ljmp
imul
lret
jmp
dec
test
cmp
xlat
and
leave
push
test
pop
das
xor
xor
in
or
test
jns
repnz
jno
inc
adc
outsb
jmp
push
int3
and
dec
aad
lret
icebp
rcrl
sub
push
xchg
cmc
adc
cmp
inc
pop
insl
dec
mov
jnp
out
jmp
push
jmp
mov
fs
mov
xchg
xchg
lret
int
adc
pop
andl
mov
and
mov
push
mov
pop
inc
jns
ljmp
xor
push
pop
arpl
test
outsl
add
jo
cmp
lret
decl
lcall
mov
and
enter
cmpsl
xchg
dec
fsubl
pop
xor
push
je
mov
fdivrs
mov
popf
imul
loopne
imul
mov
bound
mov
mov
imul
mov
or
cmc
dec
insl
jne
or
and
cmpsb
adc
push
jo
add
outsb
mov
icebp
dec
sbb
or
shr
in
outsl
sbb
inc
idivl
xor
push
xchg
sbb
out
adc
jo,pn
inc
pop
jp
mov
ja
clc
pop
xchg
aam
movsl
pusha
mov
push
cmp
inc
lods
cmp
pusha
jg
jmp
xchg
cli
add
mov
add
mov
jp,pn
fcoms
add
enter
and
add
fs
jo
mulb
std
insl
xor
dec
or
ja
aaa
sbb
dec
lahf
mov
dec
pop
push
mov
push
stc
inc
out
cmp
jg
or
mov
sbb
pop
shl
sub
or
inc
aas
repnz
fcoms
lahf
ds
cs
sbb
setl
xchg
out
jbe
movsl
ss
xchg
les
lea
or
outsl
outsb
int3
test
xor
sbb
adc
jns
push
push
and
shrb
movsl
xchg
add
mov
aas
xchg
pop
shrl
xor
inc
nop
jno
cltd
jge
sbb
outsb
dec
roll
ret
sahf
dec
mov
adc
imul
cmpsl
scas
mov
add
mov
xlat
dec
leave
inc
push
jg
test
iret
lahf
sti
js
add
pop
mov
xor
js
aad
in
outsl
push
lcall
sub
jecxz
jecxz
adc
mov
mov
in
push
rcrl
pop
cld
sbb
fsubrp
push
je
push
es
into
shr
outsb
cli
sarl
jnp
cmp
pop
mov
out
jns
sbb
hlt
lret
test
push
aaa
lcall
fwait
aas
dec
loope
adc
add
dec
xchg
xorl
inc
shll
add
shlb
in
pop
lret
push
int
adc
inc
sbb
xor
mov
daa
imul
test
pop
ss
push
enter
cld
mov
jg
test
cmp
push
in
xor
mov
and
outsl
aas
mov
sbb
pop
sub
sub
xlat
insb
sub
mov
xor
fnstcw
push
aaa
into
dec
outsb
dec
jg
adc
xor
ficoms
stos
jnp
cmp
movsb
cli
add
in
pop
mov
lds
popa
dec
xorb
jmp
popa
jbe
xor
fbld
and
sbb
push
xchg
fidivl
and
pop
adc
xchg
insl
call
mov
or
pop
xchg
fisttpll
dec
es
aaa
push
das
gs
pop
int
cmpsl
int
je
fwait
scas
or
mov
ret
dec
jp
push
loop
adc
jb
jnp
dec
push
push
fcompl
jae
add
negb
cs
lds
jb
mov
jns
pusha
mov
fnstsw
jb
pop
mov
mov
aam
or
or
xor
dec
sbb
clc
cmp
pop
out
xchg
dec
xor
mov
adc
sub
call
mov
push
jmp
das
jns
xchg
roll
bound
cmpl
or
ror
mov
divb
dec
outsb
jne
jo
js
into
ljmp
jbe
or
add
daa
push
mov
iret
test
jno
adc
stos
jl
add
sbb
in
cmp
mov
pop
pusha
mov
mov
aad
iret
int3
add
mov
clc
cmp
adc
hlt
fists
mov
cmp
into
xchg
xlat
stc
ja
fcomps
movsb
and
sti
cmpsb
in
je
mov
inc
jno
push
adc
jns
dec
cmp
je
scas
lods
inc
sti
bound
in
jp
lds
xlat
and
push
mov
adc
xlat
adc
mov
sti
adcl
out
sbb
cmp
pop
outsl
or
pop
cmp
daa
pop
sbbl
mov
out
push
xor
mov
xchg
scas
fdivr
sbb
std
imul
mov
mov
mov
cmc
mov
add
pop
cld
rcrl
jo
mov
xor
cmpb
push
or
mov
add
fiaddl
pop
jle
jae
pop
out
pop
jmp
testb
pop
mov
xorl
mov
seta
push
popa
nop
fstps
sbb
push
ret
sbb
or
sub
or
sbb
mov
sub
aas
into
dec
cmpsb
scas
jo
and
push
jle
adc
xor
lods
mov
rol
mov
push
add
gs
jne
push
lea
push
push
or
pop
cmp
jmp
mov
or
sub
push
sbb
lcall
pop
scas
rol
adc
pop
dec
enter
jmp
dec
aas
into
scas
and
xor
dec
aas
aaa
xlat
data16
repz
out
push
sub
clc
cwtl
cmp
xchg
jecxz
loop
xchg
or
movsb
xor
push
push
stc
and
popf
hlt
jmp
cmp
mov
adc
cmc
in
dec
cmc
call
test
mov
sbb
dec
popf
imul
shrb
or
fstl
add
dec
lods
and
sarb
cmp
je
aas
inc
and
add
pop
dec
push
ss
mov
pop
pop
inc
scas
mov
fs
jmp
pop
cwtl
jmp
pop
imul
aad
repz
cli
mov
push
or
scas
test
rcll
pop
push
shll
mov
lret
sbb
jns
outsb
xorb
orb
imul
pop
testl
jne
jne
test
cmp
push
cs
or
or
cmp
int3
out
push
pop
cmp
xchg
pop
mov
xchg
add
jns
pop
ror
aam
lea
xlat
inc
and
jle
xrelease
out
bound
xchg
jg
mov
mov
push
xchg
pop
ja
ljmp
test
aam
mov
mov
data16
pop
mov
push
mov
or
nop
inc
je
mov
rorb
xor
fldcw
and
rcll
ret
dec
mov
jbe
xchg
mov
clc
fisttpll
xorl
adc
aam
cs
test
or
pop
pop
jo
sbb
fnstenv
inc
fwait
pop
mov
jp
cmpsb
inc
and
xchg
adc
lods
cmp
push
cli
and
out
rep
sbb
stos
cmp
ljmp
push
sub
push
daa
clc
inc
sbb
xor
jg
loopne
mov
sub
out
sub
mov
insb
pop
mov
mov
xchg
mov
fdiv
xchg
push
jmp
mov
dec
xchg
pop
movsb
rep
pop
mov
lret
xchg
mov
xchg
out
jnp
notb
mov
out
sub
inc
nop
push
es
and
fisubrl
das
inc
sbb
rcr
mov
ss
out
push
in
mov
sbb
fwait
ret
xchg
shl
sbb
sub
fildll
xchg
fisubs
mov
outsl
in
js
dec
mov
outsb
loop
dec
pop
repnz
add
ja
int
and
sbb
xchg
push
dec
dec
push
in
aam
push
jnp
adc
jne
adc
adc
jg
das
gs
out
stos
pop
bound
pushf
or
lret
ljmp
cltd
xchg
and
and
sbb
inc
insl
fcmovb
sahf
imul
pop
int
aaa
es
lods
cld
jmp
int3
fs
cld
outsl
push
jp
or
ja
inc
pop
mov
ficoml
jbe
adc
cmpsl
addr16
add
sbb
mov
mov
test
cmovbe
js
xor
repnz
xchg
and
lock
sti
cs
sub
repnz
dec
nop
jmp
ret
lds
xchg
pushf
push
sbb
xchg
inc
outsb
decl
test
xchg
aaa
test
xor
insl
iret
mov
enter
lahf
lcall
pop
sub
aaa
mov
jg
push
cmp
in
lods
sbb
cltd
std
lods
or
loop
adc
and
fiaddl
cmp
mov
mov
enter
ss
sub
add
inc
aaa
call
jmp
and
in
ss
ja
roll
cltd
call
fwait
jno
pop
sysret
sbb
pop
andb
aad
cltd
and
sub
adc
add
ss
or
fadds
dec
sub
cmpsl
fwait
add
into
jecxz
lret
xor
and
popa
sbb
adc
ret
out
insl
aad
xor
movsb
dec
or
cmc
mov
pop
inc
pop
lds
js
sti
push
mov
mov
mov
bound
xchg
cld
and
mov
iret
inc
mov
stc
shrb
rol
inc
ds
dec
lahf
push
jle
adc
pop
sub
loopne
sbb
and
sbb
xchg
imul
adc
fs
pop
and
int3
jge
sarb
out
push
and
repnz
out
sub
test
xchg
andl
cmp
loope
inc
xor
and
push
fildll
push
or
ljmp
pop
dec
sub
fildl
or
mov
fidivrl
add
jmp
mov
pushf
xchg
and
jns,pt
push
cmc
xchg
mov
and
jbe
notl
outsb
fisttps
or
adc
int3
xchg
add
mov
pusha
testl
insl
dec
or
int3
imul
xchg
out
push
and
xor
xlat
pusha
sarb
jae
mov
xor
inc
push
ss
xchg
mov
insl
xor
cmpsb
mov
dec
clc
adc
inc
jge
lcall
xchg
in
xor
rcr
add
adc
pop
mov
add
cmp
inc
pop
scas
and
pop
sbb
out
jle
inc
test
jge
jo
xchg
aaa
push
inc
lods
pop
outsl
gs
xchg
jle
in
div
cltd
cs
mov
jbe
test
sub
clc
push
cmp
arpl
jo
mov
push
aam
add
sub
sub
mov
pop
sub
insl
leave
mov
and
fildll
sarb
adc
pop
lret
test
notb
hlt
inc
adc
outsb
mov
cmp
jno
xchg
push
push
rcrl
mov
out
push
sbbl
sahf
daa
aas
mov
inc
or
sub
mov
inc
push
dec
sbb
push
dec
shlb
mov
sub
mov
sbb
fwait
std
arpl
ss
jo
inc
xchg
or
inc
scas
fildl
adc
push
xchg
aam
mov
mulb
cmp
sub
sub
movb
sub
dec
es
inc
adc
and
in
ljmp
sbb
inc
jne
and
imul
out
insl
xchg
pop
mov
dec
outsl
cmp
enter
sbbb
jmp
popa
sub
testb
std
xor
dec
sbb
cwtl
xor
lods
out
scas
mov
ss
es
rcrl
ss
shll
test
and
enter
push
testb
das
add
popf
sub
mov
xchg
inc
dec
and
jne
push
mov
mov
jl
dec
sub
add
sub
mov
or
cmp
in
push
mov
popf
push
test
cmpsl
aad
jg
outsl
dec
lret
push
clc
fsubs
inc
in
mov
cmpsl
cmp
shr
mov
test
cmp
les
jp
adc
mov
jmp
ret
test
loop
gs
mov
repnz
gs
push
daa
xchg
sub
imul
jne
iretw
push
jbe
add
rcrb
inc
pop
cmpsl
out
enter
icebp
jno
mov
out
mov
fwait
cmc
mov
or
or
jp
je
ja,pn
mov
and
arpl
data16
loopne
cwtl
and
stc
lds
adc
fnstsw
dec
fisubrl
out
inc
adc
out
adc
push
pushf
aam
mov
iret
mov
ror
outsl
aaa
jecxz
movb
jne
sub
push
pop
and
out
pop
push
mov
movsb
add
mov
dec
cmp
and
add
rclb
stos
adc
cmp
xchg
test
movsl
push
add
sbb
das
xor
sub
cmp
or
cld
sbb
xlat
pop
or
mov
enter
ret
dec
xchg
inc
lods
in
xor
shrb
icebp
sub
sbb
mov
push
in
bound
and
or
sub
sbb
sbb
fnstsw
clc
add
es
inc
into
pop
popa
std
cwtl
enter
xchg
into
push
nop
ret
jb
and
aaa
popa
loop
mov
add
ss
sub
add
jne
es
sahf
aad
addr16
xorb
loopne
push
add
mov
pop
icebp
aam
push
je
cltd
xchg
jl
pop
dec
aas
inc
outsl
jl
mov
sbb
push
jp
mov
or
dec
notb
shr
int
fnsave
fldcw
xchg
movsb
cli
dec
cs
sbb
fsubrl
out
aas
add
push
rcll
mov
jb
pop
roll
mov
bound
dec
cmpsb
adc
movsb
test
dec
cmp
or
push
xor
xor
fptan
insl
xor
and
dec
les
xchg
push
out
xchg
push
sbb
or
pop
cmp
xor
lahf
les
mov
cmpsb
jge
sub
xlat
pop
push
inc
jl
adc
sahf
sbb
jno
sbb
xchg
push
mov
loop
add
push
pop
jno
cmp
xchg
adc
repz
rorb
stos
mov
dec
mov
repnz
aam
sbb
xchg
andl
jl
ja
mov
test
pop
jns
sub
pop
in
addb
push
out
push
mov
or
jns
xorl
sbb
adc
push
sbb
add
dec
movsl
mov
sub
arpl
jge
mov
loop
in
mov
mov
pop
jo
and
sti
sbb
inc
imul
inc
xor
mov
and
pop
imul
sbbb
cmp
into
cmp
lods
loop
xlat
xor
cmp
imul
aam
pop
dec
xor
lcall
imul
pop
cmc
jecxz
or
mov
popa
xchg
or
xchg
xor
shrb
cmp
cltd
add
jp
test
cmpsl
inc
cmpb
cmovg
mov
pop
sub
or
mov
jl
push
dec
jmp
jbe
cmpsb
lret
jo
popa
cmc
sti
hlt
in
mov
fdivl
mov
pusha
push
jae
loope
inc
mov
pop
push
movsl
sbb
pop
push
in
and
in
and
fcompl
pop
pop
mov
test
cltd
dec
int3
movl
js
jnp
xor
shlb
fisttpl
mov
mov
sahf
cmp
adc
jecxz
push
iret
aaa
add
inc
ja
out
and
enter
int3
outsb
cld
push
out
in
arpl
cld
icebp
sbb
mov
sbb
mov
loop
adc
divl
outsl
adc
or
subl
out
or
push
subl
mov
mov
in
inc
sub
dec
inc
das
adc
pop
int
or
inc
imul
xor
mov
cs
or
xchg
sub
leave
les
xchg
das
mov
push
dec
xorb
stos
adc
aas
pop
dec
xchg
in
and
cmp
rolb
nop
or
cmp
hlt
xor
push
mov
cmp
and
shrb
mov
add
leave
or
dec
cmp
enter
fbld
jne
jge
adc
test
pop
mov
js
pop
jo
sti
es
mov
mov
insb
outsb
testl
fadds
ret
fadds
aad
pop
pop
inc
add
in
mov
xchg
xchg
in
iret
popa
mov
out
xor
fisttpll
cmp
pop
jl
out
insl
lret
les
test
loopne
into
sbb
int3
mov
cmp
push
es
das
sbb
pop
clc
loop
shl
jo
fdivrs
je
xor
dec
leave
mov
js
or
pop
cmp
orb
mov
inc
pushf
pop
test
xchg
das
cmp
pop
sahf
pop
sub
dec
fcoml
fadds
sbb
sub
pop
inc
frstor
les
adc
aaa
notb
movsb
inc
rol
push
mov
mov
or
or
jmp
push
cmpsl
and
mov
cmp
stos
or
jns
xor
cmp
and
jge
icebp
mov
mov
popa
scas
dec
lret
mov
mov
sub
push
lret
cmp
add
cwtl
sti
test
mov
push
loop
cmp
test
lcall
inc
pop
pop
jg
or
dec
in
lock
jb
adc
xlat
dec
mov
mov
stos
shlb
cli
paddusb
outsb
outsl
dec
aad
mov
mov
xchg
movsl
lods
sbbl
jge
or
and
mov
inc
pop
out
mov
dec
add
scas
push
sbb
aas
lcall
xchg
sbb
inc
mov
fistps
mov
cli
shll
xchg
nop
scas
cmpsl
or
in
jmp
pop
push
lss
cwtl
lcall
out
movsb
xchg
imul
xor
inc
add
cmpb
xor
mov
dec
fldl2e
lcall
lods
scas
hlt
jbe
lods
in
push
jbe
xor
imul
popa
inc
decl
jb
outsb
fisubs
dec
sbb
stos
xchg
sub
or
stos
xchg
rcl
cmpsb
leave
jo
pop
and
sarb
nop
sti
sub
movsl
push
hlt
sti
or
xor
lret
cmp
cbtw
loope
negl
std
lcall
inc
and
cld
ffreep
enter
fnsave
push
cmp
fsubs
mov
addr16
lea
mov
and
sbbl
cmp
arpl
xor
inc
push
jg
and
data16
push
test
pop
pop
movsb
shlb
dec
clc
sub
sub
cmpsl
fdivr
shrb
loop
cmp
out
paddq
push
push
js
fstps
imul
fbstp
sbb
and
sahf
fcmovne
jno
sbb
xlat
jecxz
xlat
push
addr16
fbld
sbb
aad
pop
pushf
bound
add
mov
pop
shrb
or
addb
mov
es
jbe
mov
ret
mov
mov
std
iret
adc
mov
pop
jge
inc
callw
std
mov
inc
xchg
sbb
test
cmp
lret
jb
in
jge
int
pop
push
popf
mov
bnd
repnz
insb
ljmp
test
sbbb
jnp
xor
arpl
gs
hlt
sbb
andb
aaa
pushf
adc
in
out
imul
je
andl
sahf
sar
pusha
in
mov
or
lea
lahf
and
sti
mov
rclb
xchg
and
and
lea
xor
adc
sbb
adc
cld
aaa
cmpsl
jns
ds
fisubrs
pop
out
jge
dec
push
cmp
lods
push
cmp
sub
dec
xchg
aad
dec
inc
pop
mov
sahf
mov
sti
dec
xchg
shrb
ds
rorb
mov
mov
xor
jmp
scas
dec
cmp
push
inc
fnstsw
repz
in
orl
fdivs
mov
sbbb
jnp
sub
dec
xor
int
add
jmp
sti
xchg
pop
das
pop
add
test
out
divb
stos
scas
push
sbbl
xchg
mov
rorl
xchg
cli
fsts
out
xor
jecxz
sbb
lea
js
xchg
xchg
xchg
fstpl
fmulp
xor
rcrl
rcl
cmp
call
add
into
mov
xchg
adc
dec
lock
ficoms
adc
and
push
imul
jnp
test
mov
repz
push
push
pop
mov
test
jmp
hlt
aas
push
push
sahf
sub
loop
and
mov
lret
pop
and
pop
mov
gs
stos
xor
mov
aas
out
mov
fwait
adc
add
inc
sub
lret
cmpsl
cmpl
outsl
lds
mov
and
xor
sbb
xchg
add
cmpsb
mov
add
test
shll
addr16
test
aaa
shlb
out
xchg
jp
jbe
sbb
add
cmpb
stos
in
out
xchg
add
jmp
or
mov
sub
pop
test
fwait
je
jmp
es
bound
fwait
xor
pop
pop
stos
daa
jnp
dec
jp
insl
nop
jo
mov
mov
sbb
inc
mov
repz
scas
clc
nop
out
stos
icebp
push
sbb
aam
int3
cli
sub
rol
xor
push
dec
ja
fiaddl
dec
cs
imul
cmp
push
inc
cmc
push
push
cld
pop
or
movsl
rcl
xor
cmpsl
dec
movsb
jp
jae
cwtl
imul
loope
dec
lret
pop
pusha
out
mov
pop
cmp
in
data16
popa
pop
rolb
xor
xchg
outsl
scas
adc
pop
outsl
ja
icebp
fwait
imul
or
subb
out
iret
mov
xchg
out
sbb
xor
cmpsl
cld
gs
sub
dec
stos
xor
popa
pusha
loopne
out
out
push
xchg
movsb
insl
push
dec
jle
xchg
test
push
and
out
shr
adc
call
lds
js
jbe
jbe
in
sub
push
or
xchg
fwait
sub
inc
mov
jp
bound
and
add
pop
inc
je
sahf
or
jg
fsubrp
repz
in
inc
movsb
fidivs
pushf
xchg
push
and
pop
lods
inc
nop
jecxz
xchg
or
or
xor
aaa
int3
sbb
stos
sti
mov
add
fxam
cwtl
mov
in
lcall
xor
xchg
lods
or
add
jmp
jg
cmp
outsb
mov
in
notb
fmull
push
or
mov
lea
cmp
pop
add
rclb
xchg
mov
and
insb
cwtl
mov
orl
mov
xor
sbb
clc
bound
insl
repz
scas
xchg
pop
enter
inc
or
mov
xor
enter
out
ljmp
movsb
fdivrp
out
std
sbb
lods
clc
xor
pop
repz
cmp
sbb
mov
xchg
iret
and
pop
push
movb
imul
cmp
xor
ret
cmpsl
or
jg
cmpl
and
sahf
mov
mov
addl
mov
test
cmc
rolb
sbb
lcall
aaa
ret
push
jnp
jae
cmp
pop
jne
ds
cwtl
aaa
jae
and
sub
cli
in
in
aam
inc
sbb
push
add
xor
std
sub
inc
mov
sbb
mov
ror
cmc
mov
pusha
cld
mov
fcompl
pop
jl
lea
or
mov
cmp
les
or
inc
inc
cld
rcrl
pop
jb
shlb
xor
cltd
fsubrs
scas
std
ja
push
adc
and
idivb
inc
push
clc
inc
pop
dec
or
sti
cwtl
out
into
out
pop
xor
pop
test
push
popf
xchg
xlat
mov
int
ror
sub
cld
mov
adc
aam
mov
push
push
into
mov
aam
mov
cli
push
test
and
in
leave
out
or
pop
int
dec
pop
out
inc
shlb
scas
out
pop
mov
scas
lcall
adc
or
stos
sbb
mov
push
xchg
inc
stos
rcrb
and
loop
inc
mov
repnz
fiadds
xor
sbb
xacquire
xor
lret
push
cmpsl
pop
and
leave
mov
pop
imul
push
or
dec
sub
daa
xchg
icebp
pushf
add
ja
insl
cmp
clc
lock
int3
dec
push
cmpsl
jo
addr16
pop
out
push
jle
out
jo
add
pop
notl
lods
leave
loop
aam
xchg
sbb
push
mov
pushf
adc
aam
mov
adc
ss
inc
hlt
shlb
push
cmpsl
mov
pop
inc
inc
mov
push
mov
lcall
fwait
repz
stos
and
arpl
scas
xor
xchg
pop
es
push
test
mov
je
popa
sub
push
mov
push
mov
mov
push
xchg
lret
jge
adc
aaa
fwait
ret
leave
xchg
and
xchg
cmp
or
stc
ljmp
jl
jecxz
xlat
mov
pop
out
sub
xchg
push
and
pop
repz
mov
cmp
cld
es
roll
xchg
fwait
popa
cld
sbb
push
pushw
in
cld
sbbl
lret
pop
jge
and
nop
pop
sbbb
and
mov
and
call
aas
mov
addb
xchg
fstpl
jmp
out
cmpsb
cmc
push
jmp
and
push
cmp
pop
sbb
dec
xor
shll
xor
stc
lcall
inc
int
sahf
js
mov
mov
stos
mov
dec
and
mov
and
jns
loopne
orb
pop
xchg
dec
test
inc
scas
pop
mov
dec
sbb
int3
test
js
arpl
aas
icebp
and
jns
pusha
or
imul
fmuls
scas
pop
adc
js
jnp
dec
xchg
or
jmp
xchg
xor
int3
xor
mov
inc
lods
and
jge
dec
mov
add
hlt
mov
shrl
lods
bound
inc
inc
xorb
pop
and
jmp
nop
popa
jno
bound
and
dec
jge
pop
cmp
mov
fwait
xorl
movsb
std
popa
shll
xor
jge
pop
enter
popa
push
mov
and
push
and
mov
or
cmp
and
mov
mov
and
leave
xor
nop
je
mov
pusha
enter
pop
ret
pop
lods
mov
dec
mov
fdivrl
mov
jb
sub
sbb
sbb
aad
ljmp
sub
inc
mov
inc
test
cltd
rcrl
movsb
push
test
out
or
or
inc
pop
dec
jecxz
inc
mov
out
push
sbb
push
dec
dec
inc
test
xchg
repz
or
push
lahf
repnz
jo
add
out
xchg
sbb
scas
lods
lods
add
int3
popa
xchg
in
loope
rcl
push
pop
mov
movsb
out
sbb
out
push
sub
aas
stos
pop
icebp
xchg
std
setp
xchg
and
sahf
mov
xchg
div
inc
ficoms
inc
lea
or
outsl
cmpsl
fcmovu
adc
xor
or
outsb
bound
mov
call
aam
repz
mov
push
lret
add
mov
jbe
daa
decl
mov
pop
cli
push
mov
divb
pop
adc
mov
mov
sub
push
push
mov
cli
xor
popa
push
mov
imul
add
sub
add
out
nop
adc
sbb
test
mov
stos
shr
cmpsb
cmp
mov
jno
lods
cmp
pop
mov
inc
mov
push
lret
stos
mov
xor
dec
push
enter
push
mov
jge
mov
jbe
or
fnstcw
and
mov
and
fdivs
int3
adc
mov
adc
ss
nop
sub
inc
xadd
fs
das
add
cmc
jecxz
aad
xchg
jnp
in
add
dec
push
push
sub
mov
call
and
aas
or
out
loop
scas
outsb
fcom
cmp
clc
ljmp
push
lret
ja
xor
sub
lcall
call
add
call
aam
push
shlb
xor
out
push
mov
or
ljmp
cmpsb
aaa
dec
add
xchg
es
dec
mov
sub
add
mov
cmp
inc
ljmp
xor
mov
mov
iret
pop
lret
jle
aaa
add
ret
xor
loope
cltd
aad
sub
mov
mov
push
inc
mov
sbb
cmp
hlt
push
push
lea
mov
test
loop
inc
daa
out
iret
xor
inc
call
or
push
sbb
sbb
jl
inc
push
imul
arpl
inc
dec
and
ret
js
adc
aam
hlt
movsl
subb
xchg
imul
inc
dec
ds
repz
aaa
in
lods
jecxz
out
in
shrb
test
add
jb
cmp
dec
call
push
dec
or
and
mov
pusha
orb
es
mov
rolb
add
sbb
pop
mov
and
int
push
lods
cmpsb
subb
lock
out
es
pushf
inc
leave
and
aaa
mov
push
fnsave
xor
out
fsubs
sahf
push
push
xor
and
lea
lcall
dec
xchg
xchg
loop
fsubrl
pop
aad
push
ret
jae
xchg
mov
push
xor
fsubrs
sbb
shll
jmp
jge
dec
test
fisubl
add
cltd
adc
mov
cmp
mov
cmp
outsb
or
sub
add
int3
in
or
bound
pop
std
leave
or
in
lock
adc
add
enter
xor
adc
add
sbb
mov
pop
lods
xchg
or
push
push
inc
sarb
xchg
jns
iret
lcall
mov
push
sbb
mov
and
arpl
add
add
adc
adc
repz
lock
lock
in
adc
sub
loopne
mov
roll
lret
jecxz
les
loope
adcl
mov
cmp
push
jnp
aam
das
mov
xor
fildl
adc
cmpsl
jl
aam
gs
jnp
jns
mov
pop
sub
les
lea
xor
je
in
and
ds
imul
jecxz
sbb
xor
mov
xlat
outsl
arpl
and
shll
je
mov
or
xchg
sub
inc
sub
push
xchg
fstpt
mov
add
jmp
mov
fwait
cmp
ljmp
test
push
sbb
js
arpl
mov
lods
sahf
call
sbb
inc
push
das
mov
cs
inc
notl
popa
jmp
xchg
jp
pop
push
jae
jnp
ficompl
test
lret
dec
lock
sub
arpl
test
ds
sahf
test
out
cs
or
xor
pop
rcr
ja
in
xchg
ja
imul
mov
icebp
push
call
push
xchg
pop
pop
cmp
pop
cmp
sti
ja
popa
adc
mov
ljmp
inc
shl
fiaddl
subl
jecxz
int3
push
enter
jbe
in
xlat
cmc
adc
push
mov
roll
pop
imul
pop
les
ret
or
enter
out
std
jmp
dec
xchg
adc
pop
inc
ja
pop
cmpl
mov
add
aas
or
pop
sub
push
mov
xchg
xor
dec
jle
mov
sub
scas
aad
mov
sub
sti
lods
sub
lock
enter
scas
fadds
imul
leave
jle
jmp
scas
lods
ret
mov
inc
push
sti
mov
movsb
cmp
dec
out
bound
mov
rcll
fs
cs
or
mov
lahf
push
xchg
push
test
xor
stos
test
mov
push
jmp
xchg
nop
mov
cwtl
imul
jns
int
test
movsl
xchg
mov
and
sarb
sbb
adc
or
mov
mov
mov
into
add
jmp
lods
mov
fs
aam
adc
xchg
mov
test
daa
mov
pusha
inc
jae
aas
aad
add
pop
shrb
sbb
cmpsl
into
adc
aaa
xchg
call
pop
dec
lret
fs
movsl
dec
sbb
shll
fs
cwtl
sub
push
in
mov
test
sub
sub
test
in
sub
mov
sbbb
mov
add
pop
enter
push
lods
leave
das
push
adc
sar
int
xor
in
fs
in
test
or
push
gs
into
in
lea
lahf
lock
fs
and
mov
and
push
pop
out
jb
xchg
and
cli
push
sbb
rcr
jno
jae
mov
cs
movsb
mov
in
and
lock
test
xor
jp
pop
sub
adc
clc
push
cmp
test
mov
pop
imul
cmp
insl
push
test
out
add
or
push
fidivl
xor
push
inc
shll
lcall
shlb
lret
outsb
xor
test
leave
fs
lcall
mov
mov
xchg
sbb
jmp
lcall
jbe
lea
dec
out
pop
arpl
push
ror
push
pop
fildl
mov
fwait
mov
ret
jnp
call
or
pusha
inc
sti
mov
pop
xchg
out
js
gs
sbb
jne
repz
imul
ljmp
mov
jp
adc
stc
or
hlt
clc
imul
jmp
ds
add
dec
cld
dec
subb
ret
scas
lret
icebp
inc
test
mov
cmc
mov
int3
ficompl
dec
pop
sub
lcall
push
jno
inc
push
dec
data16
xchg
loop
sub
or
inc
xor
sbb
fistps
repz
inc
and
outsl
pop
push
addr16
roll
ficoms
sarl
pop
cmpsb
imul
fcom
test
mov
push
cli
or
decl
pop
add
je
inc
rol
lret
mov
inc
pop
outsb
jns
lret
add
icebp
sbb
lcall
cmp
adc
mov
out
mov
les
repnz
adc
push
out
in
in
or
mov
jnp
out
popa
sub
icebp
mull
enter
mov
fildll
mov
lcall
aad
and
push
ss
pusha
push
stc
or
sbb
and
xchg
sub
inc
pop
mov
imul
fists
mov
dec
cmp
jno
test
push
movups
adc
lret
add
add
rorb
je
enter
or
inc
fs
aam
xchg
xchg
mov
inc
ret
pop
lret
adc
mov
fmulp
push
add
sbb
mov
cmpsl
addr16
movsb
jge
repnz
in
push
movsl
mov
mov
mov
iret
and
daa
cld
ds
xchg
ret
stos
xchg
or
fwait
mov
jae
les
lock
mov
dec
push
bnd
adc
aam
test
inc
sbb
push
test
inc
sub
lahf
movsb
or
mov
adc
scas
mov
sub
shlb
je
pop
lock
add
mov
ljmp
add
sbb
xchg
or
xchg
mov
push
in
es
clc
testl
addr16
jo
inc
divl
cmp
pop
xchg
jmp
pop
outsl
jle
jb
in
and
sub
jl
xchg
sbb
mov
inc
xchg
pop
mov
dec
mov
sti
fidivrs
mov
fcoms
xor
push
or
sbb
enter
idivl
adc
insb
int3
mulb
push
xchg
test
pop
movsl
jne
ja
mov
and
sbb
inc
jg
mov
or
dec
inc
popf
sbb
imul
lods
repnz
imul
pop
sub
jecxz
jecxz
in
sub
nop
ds
jle
push
sbb
mov
imul
push
cld
imul
inc
loopne
dec
ljmp
std
lret
out
dec
sub
dec
push
gs
xor
lret
aaa
imul
push
mov
es
cmp
or
mov
popf
jle
cltd
fs
shrl
sbb
lds
or
dec
orl
sub
sbb
pop
repnz
and
inc
inc
hlt
in
dec
ror
xchg
push
jge
sub
push
dec
ljmp
push
and
xor
lds
stos
pop
cmp
dec
fists
movsb
imul
imul
xchg
jne
cmpsl
sbb
in
call
fs
dec
test
pop
mov
pop
sbb
jecxz
adc
scas
xchg
sub
cwtl
stos
sub
cld
mov
loope
inc
insl
mov
sbbl
stos
mov
pop
jle
xchg
lcall
repz
leave
imul
insb
xchg
shrl
je
or
or
rcll
rorl
fidivrs
mov
cmp
push
addr16
or
mov
mov
inc
in
xchg
inc
lea
inc
jecxz
pop
mov
cmpsl
push
ja
inc
mov
into
mov
fisttps
loopne
mov
jb
or
mov
cmp
push
cmp
pop
xor
popf
sbb
mov
int3
inc
clc
leave
jo
jno
adc
jne
sub
icebp
or
aam
xchg
repz
mov
int3
out
jp
cwtl
mov
dec
sub
pop
scas
scas
push
das
movsb
cmp
pop
leave
jg
inc
cmc
insl
loope
lods
std
out
jne
pop
sub
es
fldl2e
push
jnp
cmpsl
test
xor
rolb
mov
inc
in
int3
pop
fdiv
cmp
lret
arpl
les
jg
sub
adc
cmc
mov
mov
cmp
sub
or
int
orl
xor
xor
flds
fidivrs
pop
and
fiadds
push
xor
fsub
push
jb
dec
les
sub
push
mov
sbbb
mov
daa
loope
or
mov
sub
lods
loope
popf
ret
lock
cwtl
push
jne
mov
or
das
insb
data16
insb
fs
hlt
inc
aas
mov
repnz
or
ljmp
pop
sbb
sbb
lods
inc
lret
xor
adc
add
sbb
cld
dec
loopne
cmc
dec
adc
xchg
mov
xchg
out
lret
inc
shrl
inc
lds
mov
or
fldl
xchg
je
sub
push
nopl
xchg
test
stos
mov
imul
mov
mov
jnp
ja
add
int3
in
pop
subb
mov
mov
push
pop
adc
jo
jbe
insb
pop
sbb
mov
jae
adcb
cmp
sbb
push
jp
mov
in
iret
xor
imul
aam
adc
jp
mov
cli
jecxz
xor
ss
cmc
dec
inc
cmp
cld
or
push
test
ja
sti
jb
adc
xor
add
adcl
mov
out
lret
mov
sub
cmpsb
sti
test
leave
stos
xchg
pop
or
aas
xor
in
sub
mov
loope
cwtl
inc
ljmp
wbinvd
mov
mov
mov
or
nop
ret
mov
fistpl
dec
sti
xchg
mov
out
adc
xchg
sub
pusha
dec
push
cmp
push
daa
mov
or
enter
pushf
fwait
cs
jnp
jle
and
fcoml
ficoml
inc
mov
fldt
sbb
mov
xchg
pop
popf
pop
xor
shl
shrb
fildl
xor
test
ds
sbb
insb
shrb
inc
push
push
cwtl
sti
sub
test
out
imul
cmp
les
cmc
xor
push
test
sahf
nop
dec
stos
cmp
ds
sbb
mov
cwtl
add
dec
loop
mov
mov
add
cli
dec
xchg
pop
in
jl
std
notb
pushf
cltd
loope
mov
cmp
mov
or
imul
inc
cwtl
aam
outsb
int3
mov
mov
or
push
dec
jns
jns
aad
adc
adc
xor
xchg
adc
inc
mov
jmp
es
adc
xchg
dec
loop
loopne
data16
das
xor
in
adcb
lods
gs
test
xor
pop
cmp
cmp
mov
add
inc
dec
stos
inc
lods
push
dec
into
jg
push
push
and
je
lods
mov
mov
sarb
iret
daa
inc
test
aaa
cmpsl
push
push
adc
add
cwtl
aam
scas
jle
out
cli
sub
jge
aam
enter
test
and
fbstp
out
lcall
call
je
rolb
cld
enter
dec
aad
xlat
test
inc
mov
adc
cmpl
addr16
lock
jns
rol
cli
xchg
push
add
jle
inc
scas
lret
cmp
jmp
adc
dec
xchg
in
ja
aad
lods
adc
sbb
sahf
push
repnz
pop
scas
rcll
push
and
nop
fwait
mov
adc
mov
iret
mov
or
mov
sbbl
add
lret
jo,pt
add
jge
pop
xchg
test
inc
push
sub
mov
ljmp
sub
gs
nop
xlat
cmp
shlb
out
in
cvtps2pi
sbb
outsl
inc
push
adc
lahf
pop
pop
or
cwtl
sub
ljmp
lods
mov
jno
cmpsl
jmp
inc
arpl
push
xchg
popf
out
push
dec
out
arpl
bound
jmp
pop
icebp
xor
mov
lcall
out
adc
push
xchg
rorb
xchg
mov
dec
pushf
and
cwtl
pop
in
mov
mov
movsb
rcrl
pusha
enter
and
decb
loopne
mov
mov
jmp
mov
lods
push
mov
imul
cmp
jno
loope
in
push
fstpl
pop
adc
mov
push
ret
inc
jae
xor
sbbl
iret
lock
pop
sbb
stos
je
xor
sub
pop
out
push
notb
lds
rorb
out
imul
xchg
aam
mov
jp
and
jns
pop
mov
pusha
cmc
hlt
adc
ljmp
testb
aad
cmp
loopne
pop
into
scas
and
cmp
mov
pusha
outsl
mov
dec
xor
xor
and
bound
mov
xchg
mov
cwtl
mov
fildll
pop
fadds
xor
pop
rorl
jg
or
sub
mov
cli
bound
lret
adc
push
jmp
dec
xlat
ret
jne
xchg
jp
iret
push
pcmpgtd
ljmp
mov
sti
and
mov
cmpsb
sbb
jo
push
mov
dec
xor
push
loop
test
les
add
and
push
sbb
mov
jne
mov
clc
jne
test
lret
sarb
jecxz
pop
out
nop
mov
jne
xchg
movsl
movsl
sbb
pop
or
pop
ret
push
xchg
cltd
insl
mov
and
fistpll
mov
jecxz
adc
sbb
mov
lds
dec
lods
xchg
fnstcw
fiadds
stos
adc
lea
xorb
xor
xor
icebp
sub
push
sbb
int
or
push
call
outsb
int3
lahf
inc
leave
or
stos
test
mov
xchg
xchg
push
sub
mov
in
cmp
loope
xor
test
ljmp
fidivs
clc
cmp
cmp
in
enter
dec
push
mov
sub
popa
mov
mov
test
into
cs
mov
and
out
loopne
rep
rorb
imul
clc
pop
sub
test
dec
cmp
fldl
stos
cmp
fucomi
jle
mov
and
mov
int
sbb
btc
rcrl
cwtl
sub
mov
lods
scas
scas
pop
clc
icebp
xor
shrl
and
add
lea
mov
jmp
mov
cmp
repnz
mov
bound
mov
mov
push
adc
outsl
adc
inc
push
daa
mov
jmp
dec
in
pop
mov
insb
push
dec
es
inc
mov
imul
stc
in
cmc
int
push
dec
mov
jecxz
jg
sbb
mov
mov
bound
or
jo
fnsave
mov
add
pop
test
sahf
xlat
sbb
cwtl
add
inc
push
aam
jecxz
mov
je
push
and
bnd
pop
iret
mov
stc
fmuls
ret
add
dec
push
add
xor
stos
push
daa
pushf
sbb
xchg
ret
or
xor
xchg
clc
sahf
mov
enter
out
jecxz
add
cmpsb
push
or
fs
jp
les
insl
mov
sub
pop
mov
mov
lea
orl
or
cmp
mov
and
test
in
insb
dec
enter
cmpsl
sub
mov
mov
ret
or
inc
push
lods
sarb
std
lods
fldl
pop
rcrl
lock
ja
and
mov
mov
aaa
dec
mov
hlt
loop
jecxz
dec
dec
iret
fiaddl
jecxz
mov
push
jns
movsl
aaa
fcomps
test
pop
mov
cmp
xor
push
xchg
and
into
daa
cmc
aam
adc
adc
xchg
les
mov
sbb
xor
pop
cld
inc
pop
test
not
xchg
sbb
fcomip
loopne
dec
fsub
inc
pop
jae
mov
lret
or
sbb
incl
xor
fsubr
xchg
dec
mov
xor
sbb
sbb
cmp
jo
push
test
loope
clc
push
jns
xchg
add
jge
rorb
test
lock
insl
inc
push
xor
fcoms
insb
jne
out
scas
push
pusha
call
or
dec
adc
fcoml
mov
pop
ret
int3
fwait
test
int3
sbbb
int
dec
xchg
inc
or
sub
cmp
addr16
push
mov
test
dec
popa
cmp
jnp
dec
ss
pop
pushf
out
fcmovnbe
xchg
xor
in
inc
imul
push
cmp
outsb
sarb
jle
mov
rcrb
inc
movsl
sbb
loopne
adc
lea
xor
xor
dec
add
push
cmpsl
jne
jns
add
inc
pop
xchg
test
and
pop
mov
lcall
cmp
dec
pusha
and
adc
sbb
lret
sbb
mov
andb
xchg
jns
popa
jns
push
pop
pop
icebp
mov
inc
cli
dec
cmp
sbb
into
shrb
popf
dec
jns
leave
lret
cld
stos
mov
jne
and
push
inc
inc
int3
mov
mov
frstor
repz
mov
aad
rorl
lret
push
out
pop
out
pop
cmpsb
and
mov
stc
movsb
or
pop
movsb
stc
cwtl
xchg
xchg
cs
loope
mov
jo
xchg
add
cmp
push
scas
fstps
int3
subl
inc
push
mov
hlt
pop
mov
sub
mov
and
mov
dec
xchg
mov
lahf
outsl
ja
jo
pop
out
fwait
pop
or
sub
les
aas
and
lahf
adc
addr16
mov
enter
and
xchg
pushf
mov
pop
lret
push
rorb
stc
pop
lret
loope
xchg
xorb
dec
cmp
aaa
loopne
imul
sbb
call
test
inc
and
push
jmp
inc
pop
jle
jbe
mov
lods
or
xor
jp
pop
aam
or
push
addr16
js
cmc
mov
lcall
sub
aad
pop
aam
scas
nop
scas
xchg
xor
pusha
adc
cmp
mov
std
jp
pop
pop
cmpb
daa
cltd
jno
out
inc
psrlq
mov
stc
or
cld
sub
mov
test
sub
pop
scas
outsl
xlat
negb
xchg
loop
mov
xor
movsb
out
stos
and
cs
fildl
or
aam
push
outsb
jae
adc
test
hlt
sbb
push
or
mov
jno
pushf
fsubs
adc
hlt
push
jle
or
repnz
mov
iret
insl
fwait
xlat
fiaddl
sbb
fisubrl
xor
enter
mov
lahf
fcomps
fmull
xchg
imul
cmp
inc
fimuls
movsl
lcall
scas
jl
cltd
loopne
pop
repnz
xchg
mov
and
xor
insb
or
jecxz
sbb
dec
pushl
push
mov
js
insl
mov
in
dec
insb
xor
mov
or
or
cmp
jae
jg
mov
push
scas
jmp
mov
push
and
imul
loop
in
pushf
lds
jno
incl
jno
push
xchg
imul
mov
xor
and
xor
mov
jle
inc
ja
mov
clc
push
pop
sbbb
jne
xchg
inc
pandn
test
add
jb
sahf
cmp
dec
fiaddl
add
daa
inc
fdiv
test
pop
adc
mov
cltd
shlb
ds
test
pop
ret
pushf
xchg
adcb
cmp
leave
sbb
int
pop
rcll
arpl
dec
cmpsl
int
je
std
push
and
cmpb
cli
cltd
mov
sub
mov
fwait
gs
mov
dec
pop
xor
clc
fs
push
std
sbb
mov
js
cs
mov
push
xor
call
in
inc
mov
jle
sti
dec
adc
and
shrl
mov
inc
loope
call
inc
jmp
and
lods
pop
cmpsl
xor
stos
add
dec
xor
int3
push
mov
sti
pop
sbb
sarl
fidivl
jns
jle
enter
cltd
jne
pop
call
call
imulb
shll
pop
mov
and
sbb
test
fbld
and
lret
jbe
bound
pusha
stc
cmp
mov
movaps
rcrl
rol
lock
fisttpl
xchg
outsb
push
xor
nop
sbb
mov
fldt
inc
ffreep
cld
imul
xchg
jge
cld
mov
aas
jmp
loope
fsts
push
daa
ja
out
js
push
inc
pop
and
insl
xor
sahf
push
cmp
fisubs
insl
mull
mov
jae
pop
ret
loope
lock
inc
sub
in
lds
inc
scas
std
stos
outsl
ljmp
icebp
dec
jns
cmp
test
frstor
mov
add
std
lret
mov
and
dec
iret
shll
repz
addl
sbb
fiadds
bound
dec
fdivl
xor
and
outsb
fcmovnbe
pop
addb
outsl
mov
rolb
loopne
mov
sub
add
push
sahf
in
adc
shll
test
pop
xor
sub
jmp
mov
fdivrp
pushf
into
imul
push
sub
jl
and
mov
ja
jne
decl
std
fcmovne
push
imulb
and
shll
std
lods
add
stc
inc
and
scas
fs
cmpsb
mov
jl
in
mov
lea
xchg
sbb
xchg
sbb
hlt
xlat
dec
jne
mov
jbe
jno
lods
push
push
lret
clc
dec
in
std
and
shlb
cmp
xlat
jp
mov
cmp
rorb
sbb
cmp
inc
xchg
mov
pop
cmp
inc
fisttps
in
out
testl
sub
out
das
push
and
inc
dec
es
lahf
test
test
cmpsl
inc
loopne
add
sub
test
test
jle
mov
and
mov
mov
xor
mov
rorl
cmpl
fs
xor
mov
repnz
xorb
mov
outsb
sub
aaa
inc
mov
gs
pop
ror
sub
loop
mov
cmp
and
repz
and
and
fidivrs
test
adc
aas
inc
loopne
cltd
ror
jle
or
ret
adc
sub
and
stc
outsl
rolb
out
je
push
cli
push
test
adc
mov
nop
lea
andl
push
in
add
mov
test
in
cmp
popf
inc
dec
rclb
and
jno
out
pop
pop
dec
aam
stos
sbb
pop
or
inc
outsl
pop
pop
int3
push
pushf
jae
andl
int
jmp
lods
clc
inc
loope
add
push
mov
test
fistpl
lea
lock
adc
jbe
out
imulb
cltd
xchg
pop
mov
pop
repnz
aad
mov
ficoms
in
jbe
sbb
xchg
mov
add
ret
pop
arpl
enter
sarb
out
lods
imul
adc
xchg
xchg
pop
mov
dec
mov
inc
push
and
xchg
jle
pop
mov
scas
push
sub
sub
or
mov
es
clc
inc
fstps
jp
aam
add
sub
gs
gs
ss
sub
xchg
scas
mov
insb
jno
jno
shlb
dec
mov
pop
mov
es
xchg
enter
mov
or
mov
mov
sahf
cmp
sbb
and
push
mov
cld
mov
leave
jp
pop
cli
cmp
shr
int3
movsl
addr16
pusha
out
stc
ljmp
mov
sub
sub
add
pusha
cmpsl
xchg
pop
cld
cmc
adc
pusha
pop
sbb
adc
push
daa
xchg
mov
xchg
xor
ficoml
dec
add
sub
scas
pop
leave
testl
int
jmp
push
cmp
sub
test
mov
cmp
mov
adc
and
xchg
lahf
fmull
decl
mov
mov
inc
sbb
or
xchg
push
fcmovne
mov
cmpsb
popf
movsl
mov
and
add
mov
cmp
jg
mov
mov
aam
dec
loope
in
push
jbe
div
jg
inc
add
mov
dec
xchg
stc
fldt
jp
mov
popf
popf
lret
sahf
cli
xor
daa
ds
xchg
cwtl
imul
and
mov
xor
mov
xchg
ret
add
push
jl
insb
dec
fnstcw
in
mov
mov
ffreep
add
pop
nop
stos
push
dec
inc
mov
push
dec
push
scas
movsb
ret
xor
repz
cmp
imul
cmp
xor
inc
add
push
stc
and
cmp
cs
pushf
lret
scas
inc
sub
shlb
cmp
dec
push
jne
dec
cmp
cmp
inc
test
sub
out
sbb
inc
sub
jecxz
mov
xchg
xor
mov
pop
jbe
xchg
sbb
sub
arpl
into
xorl
aam
mov
je
dec
cmp
int
add
in
ret
loop
movsl
push
mov
lret
cmp
mov
jb
in
cltd
inc
test
jp
in
pop
push
jl
icebp
fs
dec
and
xchg
add
jo
dec
test
sahf
ja
jno
enter
dec
and
mov
shll
inc
xchg
xor
and
loop
test
aad
int3
adc
xchg
mov
add
and
add
push
adc
push
adc
ss
pop
mov
add
mov
jmp
mov
or
sqrtps
jl
xor
pop
cltd
in
pop
into
adc
xor
ljmp
movsb
idivl
cmp
jb
nop
leave
dec
push
loope,pt
push
add
dec
sbb
xorb
test
pop
jmp
sbb
popf
cmpsl
mov
add
cltd
dec
dec
gs
loop
test
sub
mov
js
cltd
arpl
addl
sbbb
mov
dec
mulb
push
adc
xchg
push
fstpt
jns,pt
mov
xchg
mov
sub
push
test
cmpl
insb
push
pusha
pushf
cmp
jmp
lods
lds
xor
clc
mov
mov
cmp
mov
rcr
stos
jmp
push
xor
cmc
lret
aad
int3
pusha
jl
mov
into
and
loop
pop
dec
or
push
cmp
pop
dec
xchg
in
shll
jmp
insl
cmp
dec
dec
jns
pop
dec
add
imul
adc
stc
int
or
mov
and
inc
fsubl
nop
nop
cwtl
push
xor
bound
push
jne
fldt
or
jnp
jp
pop
pop
inc
mov
jl
xor
inc
push
xor
pop
js
push
inc
das
mov
add
push
in
bound
test
dec
gs
xor
push
cmpsl
in
arpl
out
psrlq
arpl
test
lds
mov
mov
out
jo
mov
dec
aaa
cwtl
ds
xor
cld
je
and
mov
xchg
fiadds
xchg
add
je
mov
arpl
jl
das
scas
mov
xlat
xchg
ja
incb
push
idivb
jnp
repz
aaa
xchg
sarl
outsb
xlat
mov
mov
hlt
mov
dec
sub
jno
sub
pop
lds
and
xor
sbb
rolb
adc
pop
pop
lods
push
inc
es
cmp
push
stos
stc
jge
mov
mov
cmp
mov
xor
je
mov
cmpsb
jns
ss
imul
inc
xchg
lods
cmp
push
int3
fisttpl
jns
cmp
jo
das
mov
fs
add
xor
pop
jmp
and
aaa
push
mov
sub
push
outsl
fucomp
sub
sub
std
inc
imul
cmpsl
and
cmp
cwtl
gs
in
test
xchg
inc
mov
cltd
mov
add
jae
icebp
out
cli
mov
add
scas
xchg
push
sbb
icebp
nop
inc
hlt
lcall
aad
out
addr16
sub
ljmp
sbb
sub
jb
cmp
fisubrs
cli
xlat
jno
sub
or
jbe
inc
shrl
add
add
adc
pavgb
fdivp
inc
aas
inc
xchg
mov
fabs
dec
mov
inc
cmpsl
mov
stc
fnstcw
push
pop
call
adc
xor
cmpsl
repnz
and
stc
jge
adc
add
leave
movsl
mov
enter
insl
mov
ret
lahf
in
lret
pop
xchg
mov
cld
enter
cmpsl
dec
xchg
adc
mov
cmp
jb
push
popf
lock
pop
inc
in
movsl
pusha
push
jnp
jnp
jne
dec
sbb
int
lea
mov
xorl
test
les
pop
cmc
xor
inc
in
call
inc
div
pushl
out
in
mov
ljmp
mov
in
inc
mov
dec
insl
push
adc
sbb
jge
sbb
cs
add
xor
push
inc
lock
testl
pop
fimull
out
inc
scas
sbb
mov
data16
or
xor
adc
cltd
fwait
xchg
shl
jns
inc
lret
lds
xchg
jnp
cltd
aad
mov
sub
mov
repz
shrl
lods
inc
stc
mov
inc
cmp
scas
add
fucomp
jne
push
adc
leave
or
add
lods
sbb
mov
ss
int3
xchg
cmp
mov
aam
sub
jne
xor
xchg
add
dec
mov
call
mov
mov
cli
jl
adcl
lret
jl
rcr
out
dec
sbb
jg
mov
push
pop
xchg
cmp
dec
inc
xor
arpl
mov
dec
pop
inc
push
cmpb
adc
and
sub
mov
or
pop
jno
in
xlat
inc
movsl
mov
outsl
mov
test
daa
push
movsb
mov
or
fisubs
dec
sbb
fisubs
add
movsl
icebp
xor
les
fisubrl
insl
and
dec
fnsave
pop
orb
xor
push
subb
lea
rolb
push
filds
cld
adc
jae
addr16
and
loope
push
clc
add
mov
imul
lock
lcall
into
sbb
or
push
movsb
xchg
ljmp
or
cmp
adc
int
dec
jns
cmp
shr
jge
or
stc
xor
jmp
popa
pop
ret
enter
lods
movsb
lods
out
out
mov
rcrb
push
mov
in
add
pop
mov
lds
les
mov
xchg
je
iret
add
in
addr16
dec
imul
pop
jg
sub
cli
pop
sbb
cmp
cltd
cmp
pop
pop
lcall
lret
enter
jae
subb
jmp
pusha
loopne
and
adc
push
int3
add
xchg
repz
push
or
addr16
cmp
cmpsb
gs
shl
jns
insl
push
push
sub
xchg
xor
sbb
adc
xor
aaa
fistpl
call
ss
jmp
leave
loope
add
ss
addr16
mov
bound
jb
cmp
sbb
dec
movb
jle
ja
ret
sub
andl
mov
xchg
jg
jbe
adc
sbb
cmpsl
mov
mov
mov
int3
es
lret
and
dec
iret
sarb
adcl
sbb
divl
loopne
mov
popf
mov
lea
jnp
stos
repnz
xor
hlt
mov
jmp
repz
xchg
add
and
divl
jle
and
add
push
lods
pop
leave
jns
jp
cli
shr
fidivs
and
mov
movsl
jmp
or
xchg
dec
cmp
ficoml
and
jnp
cltd
test
out
cli
test
outsl
jno
jp
cltd
mov
fisttps
pop
mov
sbb
cs
fcoml
lahf
lret
test
and
sahf
sub
xor
sub
stos
add
cmp
int
push
sbb
daa
pop
mov
xchg
cmp
inc
cwtl
mov
call
notb
bnd
xor
push
pop
stos
push
and
add
mov
xor
nop
mov
shll
ds
inc
jmp
mov
push
fdivrs
loop
and
sti
popfw
das
lcall
out
cmp
sbb
push
fucom
mov
jecxz
dec
push
or
scas
inc
mov
and
clc
sub
pop
addr16
pop
lock
lock
loopne
aaa
cmp
mov
jo
jle
sti
sbb
jp
scas
insb
mov
lods
in
jmp
arpl
jmp
mov
xor
xchg
sbb
push
jp
cld
test
pop
arpl
mov
pop
pop
jecxz
aam
stos
insl
insb
out
out
lea
movsl
jp
test
cmp
dec
out
out
cld
jp
jmp
mov
dec
push
scas
enter
out
cs
push
xor
jo
adcl
sbb
cmp
ljmp
in
mov
inc
dec
shrl
mov
mov
hlt
ds
push
and
repnz
mov
mov
dec
push
shrl
jns
daa
push
xor
fcomip
pop
adc
jns
mov
pop
add
inc
jecxz
loopne
pushf
mov
out
mov
shl
out
or
es
imul
cltd
xchg
les
sahf
loop
mov
mov
and
lds
mov
insl
mov
fs
je
xchg
cwtl
add
loop
xor
clc
inc
sahf
mov
lods
popa
inc
repz
sbb
in
jp
test
ds
inc
sub
and
lock
imul
and
inc
out
dec
call
scas
movsb
cmp
and
inc
orl
lods
cmp
orb
add
jp
jg
and
lret
xor
fnstenv
jle
cmp
xor
fmuls
ret
xchg
aas
mul
mov
idiv
enter
pop
cmp
mov
movsl
pop
cmpb
pushf
sub
cli
mov
mov
int3
repz
jle
loopne
sbb
ja
xor
dec
fisttpl
dec
out
pop
es
daa
mov
fidivrl
pop
dec
stos
gs
fisubrl
jno
mov
sub
out
push
jge
sbb
xchg
fcomip
sahf
cmp
imull
xor
lcall
lea
pop
sub
sub
mulb
mov
in
xor
out
xor
or
push
test
iret
xchg
sbb
fldt
jb
fstps
mov
and
clc
outsl
int3
into
addr16
mov
incb
jg,pn
jmp
xchg
xor
or
pop
loopne
xchg
xchg
imul
mov
out
mov
pop
fsub
addl
lock
add
sub
jge
fmulp
sbb
jns
es
sarb
dec
mov
push
out
imul
rol
stos
pop
cmp
sarl
xor
or
sub
and
test
jae
jle
aad
pop
adc
andl
xor
lret
enter
or
and
fwait
pop
gs
out
push
push
pop
fnstenv
xor
scas
cmp
enter
cmc
dec
int
ret
xor
sub
xchg
push
lcall
xor
mov
mov
lds
pop
cmc
lret
inc
inc
mov
mul
test
clc
loop
jl
add
jo
adc
cmp
adc
sub
or
mov
dec
shrb
popf
push
jbe
imul
rorl
arpl
rolb
rcrb
lret
pop
inc
aaa
mov
rorl
pushf
call
inc
fcmovnu
inc
or
sti
add
push
mul
hlt
jno
fs
shr
push
fisttpll
sub
jnp
jl
push
push
rcrl
ss
inc
cld
fsubl
and
out
mov
sarl
inc
shlb
fiadds
xor
repz
test
add
and
fmull
or
daa
xor
in
lret
jmp
mov
fdivr
jmp
push
xor
call
je
cmp
lret
or
jp
cmp
inc
push
pop
clc
std
dec
jl
loop
hlt
aad
nop
cmp
add
xor
call
lret
stos
pushf
or
sbb
mov
jge
adc
or
mov
xchg
mov
add
mov
arpl
push
push
xchg
mov
mov
pusha
or
push
adc
pop
mov
mov
je
xor
cmp
push
dec
repz
mov
insb
data16
in
shlb
push
xchg
and
das
out
pop
loopne
sbb
fdivs
sbb
aam
call
and
movsb
aas
mov
loopne
dec
fsubr
scas
fsubl
push
sub
int
inc
fsubl
xchg
mov
aas
pop
dec
out
sbb
pop
nop
aaa
sarl
xchg
cld
sub
cmp
jbe
inc
xchg
repnz
std
fildll
adc
jb
or
lea
add
aaa
fnstenv
ss
mov
ds
cltd
das
repnz
push
xchg
into
push
inc
push
inc
and
mov
les
je
stos
pop
mov
test
or
jb
or
cmp
jo
add
xchg
in
dec
inc
cmp
pop
jns
mull
ja
popf
or
std
arpl
push
jp
je
shl
add
and
jo
lret
enter
mov
or
add
cmpsb
aas
adc
pop
stos
icebp
mov
dec
scas
sub
adc
and
jl
mov
jns
or
js
flds
ret
cmp
or
xchg
push
pop
jno
inc
mov
mov
adc
gs
popf
ds
sub
je
repz
or
call
xor
es
pop
int
std
xchg
sarl
pushf
xor
push
sub
roll
pop
loopne
mov
jb
xor
out
push
pop
loopne
add
sahf
push
ljmp
mov
es
xchg
xchg
mull
jle
jecxz
or
mov
int3
sarb
mov
lods
and
sub
push
xor
ja
mov
or
xor
jmp
mov
jo
sbb
inc
sbb
dec
dec
mov
fstpl
je
push
pop
pcmpgtw
push
pop
test
maskmovq
imull
loope
add
push
cmp
lock
ret
fdivrs
imul
xchg
scas
mov
dec
sub
sub
lds
out
jle
enter
jbe
cld
pop
sbb
jae
idivb
cmp
dec
dec
rcrl
je
cmp
dec
sub
icebp
pushf
int3
imul
andb
in
push
lea
xor
faddl
jge
out
inc
daa
cmp
testl
push
lcall
cli
or
repz
inc
push
push
jecxz
cwtl
in
out
out
pop
ja
pop
outsb
je
lds
iret
ja
jbe
test
xchg
xchg
es
adcl
adc
nop
and
jmp
sub
call
adc
stos
imul
xchg
cmp
dec
gs
sub
add
int3
addr16
mov
sub
mov
or
into
push
pop
xchg
jns
fwait
mov
movsl
les
mov
sbbb
mov
and
xchg
dec
icebp
leave
dec
repnz
es
jo
popa
push
imul
push
cmpsb
xor
jno
mov
stos
lret
pop
sti
and
dec
dec
jno
arpl
xchg
test
push
push
js
mov
cwtl
out
addl
fld
cmpsl
aas
inc
out
push
pop
adc
jb
int3
icebp
add
stos
dec
sbb
stc
enter
in
in
popf
fsubrl
dec
jge
push
sub
aas
out
mov
and
cmpsb
and
es
scas
and
xlat
jns
mov
pop
test
test
cmp
fistl
and
mov
mov
jb
nop
jmp
popa
cmp
adc
dec
pusha
pop
add
mov
shll
stos
rcrb
pop
fbstp
push
mov
inc
loope
dec
fistps
add
xor
xchg
int3
imul
push
adc
inc
enter
push
clc
mov
aas
shll
inc
mov
pop
mov
cmpsb
adc
sbb
fists
paddb
subl
roll
xor
mov
fadds
lahf
mov
dec
sbb
push
sahf
in
sbb
leave
daa
andl
or
rcll
mov
int
push
ret
int
dec
js
outsl
arpl
fs
ret
sbb
jb
adc
cmp
rorl
imul
dec
mov
xchg
adc
cld
jp
mov
imul
mov
and
inc
shr
xchg
mov
add
loop
mov
cmp
into
das
inc
aas
rcll
icebp
xor
xchg
jne
dec
inc
mov
mov
jno
inc
lock
dec
push
adc
test
mov
dec
push
enter
enter
lcall
icebp
mov
push
negl
mov
test
pop
sub
dec
mov
sti
dec
fsubr
push
and
popa
fs
lret
dec
dec
mov
jae
push
push
ret
pop
xchg
xchg
xchg
push
std
fnstcw
pop
notb
pop
test
pushf
sahf
clc
jmp
xchg
mov
fadd
push
inc
fmulp
movsb
lock
mov
lods
adc
or
aam
lret
sub
in
xchg
adc
sar
pop
dec
sub
xor
imul
mov
in
adc
mov
mov
lock
mov
je
in
loop
int3
fs
movsl
xchg
mov
out
ds
jge
jecxz
push
pop
loope
or
mov
iret
scas
dec
xor
jecxz
jle
popf
sahf
xchg
out
das
push
lret
lds
sahf
sbb
test
xor
rcll
out
orb
out
ljmp
lret
mov
shll
shlb
push
mov
dec
mov
imul
lods
xor
lahf
arpl
or
add
jp
shl
aam
dec
add
mov
push
mov
ja
hlt
xlat
aas
xchg
negl
jge
or
in
ja
addr16
test
rcrl
aad
dec
stos
sub
and
out
mov
jae
cwtl
mov
incl
push
aas
cmpsl
pop
dec
xlat
jmp
add
adc
push
jns
shrl
aam
mov
mov
movsb
fildl
test
lcall
jo
loope
push
sbb
mov
aaa
mov
push
dec
nop
jne
stos
nop
jmp
std
mov
xchg
or
cmp
jecxz
lret
test
js
add
and
lret
test
test
shl
les
sahf
or
mov
pop
std
cli
or
js
mov
push
push
and
push
or
dec
jecxz
insl
popf
jmp
add
jne
leave
and
popa
or
inc
pop
cltd
xchg
or
mov
incl
xlat
loope
pop
test
sub
and
mov
ljmp
inc
mov
push
mov
lcall
cwtl
mov
mov
das
sahf
sbb
ret
ja
movsb
mov
pop
pop
xor
lcall
pusha
fs
je
fdivrs
inc
or
cmc
xor
pop
jno
push
imul
or
aam
mov
cmp
das
lods
cmpsb
mov
fsubr
test
fildll
push
movb
inc
ja
jge
pushl
subb
fdivrl
loop
inc
or
cli
or
xor
pop
dec
loopne
sub
sbb
fcoml
stos
xchg
cmc
mov
stc
mov
imul
lea
idivl
hlt
je
outsl
es
cld
stos
mov
xor
in
out
mov
sahf
adc
mov
enter
cld
push
popaw
jo
mov
mov
and
repnz
push
sbb
push
or
push
xor
mov
sub
xchg
shrb
cmp
popf
test
das
jg
inc
cltd
push
xchg
mov
mov
inc
popf
add
sub
cld
cmp
incl
pop
jae
mov
movsl
hlt
aad
int
or
mov
dec
in
fbstp
leave
mov
push
xchg
xor
add
sub
jle
jl
in
movsb
xchg
adc
adc
pop
or
mov
nop
lea
add
imulb
ja
jb
lods
cmp
inc
imul
pop
gs
out
mov
pop
cmc
push
jnp
add
push
or
add
mov
dec
or
adc
mov
push
je
jp
out
and
mov
or
pop
pop
stos
mov
cmp
fimuls
inc
sahf
push
loopne
sbb
dec
pusha
cmp
lods
add
mov
xor
push
pop
out
in
out
jns
movl
sahf
imul
nop
repz
and
sbb
iret
outsl
inc
outsl
mov
jg
aad
call
cmp
cmc
and
repz
rdtsc
int
add
sub
cmp
repnz
adc
jecxz
cmp
mov
or
test
push
inc
xor
mov
ror
sahf
js
scas
ja
ljmp
push
cmp
inc
and
jge
mov
dec
adc
jno
pop
push
dec
das
daa
lahf
mov
std
ja
and
sub
jo
cwtl
sarb
add
clc
lcall
cmp
iret
adc
xor
xor
ss
jae
adc
push
sti
out
das
cltd
fwait
push
inc
mov
dec
js
popf
pop
push
pop
mov
daa
into
cmp
btr
imul
mov
xor
pop
cmp
inc
dec
insb
push
shlb
xor
add
js
shrl
insb
sbb
mov
jns
ds
mov
es
sti
add
jg
push
or
scas
push
xchg
cs
lds
inc
popa
rcr
lods
xchg
lock
loop
test
lcall
lret
dec
daa
je
push
cmp
xchg
dec
sbb
adc
mov
jg
pop
cmp
push
inc
jl
pop
test
xchg
mov
cld
mov
aad
xlat
sub
cmp
arpl
xchg
sbb
pushf
and
xor
push
push
xchg
sub
jge
pop
ret
dec
test
idivl
je
jae
cld
push
xchg
pop
ja
enter
cmp
cwtl
pop
mov
stos
mov
jg
in
nop
push
lret
insl
mov
cmp
sysexit
mulb
ret
adc
mov
mov
hlt
loopne
loopne
scas
roll
cmpsb
test
decb
xor
dec
leave
dec
rol
xchg
lahf
lock
std
or
mov
inc
repz
sti
jmp
sahf
sbb
push
cmp
adc
shrl
cmp
rsm
inc
insb
mov
and
adc
mov
mov
jecxz
mov
pop
inc
add
stc
jle
pop
iret
dec
push
scas
in
addr16
lea
dec
out
ret
sahf
mov
stos
xchg
dec
mov
jnp
inc
lea
pop
add
js
repz
ds
fildll
in
popf
scas
jb
mov
out
sub
stc
fnstsw
xchg
dec
mov
aaa
jecxz
xchg
inc
cmpsb
lock
jg
mov
clc
cmpb
adc
sbb
cmp
aaa
out
xor
mov
inc
sub
rcll
jae
fs
mov
jmp
or
ret
jle
pop
jnp
adc
jmp
repz
sub
sub
std
adc
test
and
adc
mov
lahf
cmp
cs
pusha
mov
repz
pop
or
inc
loop
cmc
xor
ljmp
imulb
adc
pop
sbb
ficoms
push
outsl
xor
jl
or
subl
mov
fwait
scas
inc
and
mov
in
repnz
mov
add
and
aam
cmp
ja
jne
sub
xor
lods
cmp
addr16
shl
lea
inc
xchg
imul
jno
ss
xor
fcmovnbe
shll
mov
icebp
lret
or
mov
int3
daa
push
inc
mov
xlat
push
sbb
adc
in
adc
movsb
or
jbe
mov
mov
dec
lahf
pop
outsb
lret
pop
cmpsb
fsub
pop
push
adc
or
jp
sti
push
data16
mov
cmpsl
cmp
shlb
notb
icebp
inc
and
fdivl
iret
pushf
cltd
in
mov
mov
aam
testl
lcall
aas
test
push
aad
fidivrs
sti
and
sbb
idivb
lahf
fbld
lret
repnz
sub
mov
and
mov
leave
mov
ret
push
lahf
sbb
mov
movsb
js
jmp
pop
lret
fistpl
mov
test
and
and
shlb
jle
jge
add
xchg
mov
push
jae
les
cmp
mov
mov
cld
in
xchg
inc
jecxz
jmp
push
cmp
pop
push
test
xor
sbb
aaa
iret
std
jb
xor
jecxz
adc
pop
mull
push
push
mov
rclb
mov
ret
inc
pusha
adc
cmp
insl
add
js
adc
scas
in
sbb
popf
leave
inc
inc
mov
sbb
orl
mov
sub
pop
js
ds
jo
cmc
pop
daa
inc
adc
pop
pop
jp
dec
shrl
cmc
popf
mov
mov
jne
xchg
mov
ljmp
icebp
xchg
aaa
icebp
shll
loopne
pop
push
mov
jl
push
mov
lret
jnp
ja
mov
inc
cmp
jecxz
sarb
or
mov
data16
jp
ja
mov
and
and
pushf
stc
pop
mov
and
pop
aad
scas
dec
xchg
mov
aam
cmp
scas
sub
mov
inc
pop
in
out
mov
cli
or
mov
or
rcr
outsb
sbb
out
fadds
outsl
xchg
insl
adc
and
fdivr
or
mov
sbbb
dec
imul
into
dec
inc
arpl
xchg
popf
inc
adc
mov
pmulhuw
add
jbe
xchg
imul
aam
push
je
mov
inc
push
push
and
lea
mov
push
xchg
leave
xchg
rolb
xor
sbb
jo
mov
and
xchg
div
mov
pop
aaa
pop
xlat
out
fisubrl
jecxz
mov
mov
dec
sbb
imul
data16
repz
pop
cmp
pushl
xchg
test
ja
pop
ja
push
sbb
arpl
call
lea
mov
jb
mov
pushf
sub
cwtl
insb
ss
pop
xchg
inc
fdivr
shrb
stos
adc
push
push
addr16
or
jmp
jge
mov
ljmp
xchg
jno
xchg
icebp
dec
addr16
sbb
repz
scas
aad
push
cmpsb
mov
inc
insl
xchg
aad
cwtl
test
sub
xlat
js
sub
jecxz
mov
or
repnz
rcr
test
andb
addb
out
ret
mov
gs
std
int
push
ja
push
pop
ficomps
sub
ss
ds
lock
ja
rcrl
popf
inc
adc
rol
pop
insb
mov
dec
push
cmp
movsw
xlat
in
repz
sbb
inc
mov
mov
stos
mov
sti
jbe
or
mov
mov
jge
mov
dec
icebp
sbb
lods
call
and
mov
cmp
test
xor
pop
aad
lcall
leave
sarl
jl
jp
adcl
mov
sbb
rcrl
dec
stc
lds
xchg
mov
aas
test
shll
gs
mov
fidivl
sub
jp
movsl
push
sub
insb
lods
sarl
adc
sbb
add
sbb
adc
bound
xchg
cmpsl
mov
aas
int3
dec
loope
xor
add
mov
inc
fldt
or
mov
call
pushf
cmc
pop
lea
repnz
outsl
int
sarl
mov
je
sbb
fiaddl
add
cmp
les
mov
lods
int
ja
inc
xchg
dec
je
scas
sti
mov
rolb
add
add
inc
or
cmpb
lods
mov
or
pop
dec
addl
add
xor
push
add
cli
movsb
mov
ret
inc
mov
inc
nop
sbb
pxor
xchg
xchg
aaa
rcl
fldcw
loope
loopne
mov
dec
data16
repz
sbb
dec
pushf
jg
xor
int
imul
cmpsb
cli
mov
jo
dec
jno
mov
mov
push
cmp
cmp
mov
jo
sbb
rcrb
int
push
xchg
movsl
ljmp
fwait
sbb
jl
cmp
cmc
mov
push
pop
call
adc
movsl
ljmp
mov
orl
or
aad
dec
push
cmpsb
out
add
jno
lahf
out
clc
dec
or
xchg
dec
test
cmpsb
cmp
and
jns
mov
lret
rclb
add
aaa
mov
dec
iret
jg
adc
repz
xchg
cmpsb
std
push
push
mov
roll
jbe
cmpsb
mov
cmp
nop
in
push
mov
and
push
mov
scas
lret
lret
idiv
int
cmc
mov
mov
notl
or
and
fcompl
inc
lea
cmp
push
hlt
cmc
mov
and
repnz
or
mov
shrl
push
out
movsl
pop
stos
pop
pop
mov
sbb
inc
cwtl
xchg
int3
mov
mov
sbb
inc
je
jae
popf
rolb
jp
inc
mov
mov
sub
sub
cli
popa
sub
dec
subl
ficompl
mov
enter
ret
add
add
xchg
adc
popa
and
jge
in
cmpsl
mov
lret
inc
aad
or
ret
adc
or
int
or
inc
cltd
and
cmp
mov
mov
or
push
stos
mov
bound
adc
jp
xchg
ss
fnstcw
inc
push
pusha
mov
cmpsl
pop
hlt
nop
outsb
jns
and
fistpll
leave
ss
lds
fs
jge
nop
xor
aam
in
repnz
movsl
inc
fs
scas
repz
xchg
xchg
xchg
mov
pop
addb
stc
pushf
nop
or
dec
fcoms
adc
in
mov
cld
push
inc
add
out
cli
push
xlat
test
sti
loopne
inc
data16
in
or
push
enter
jmp
cmp
sub
idivb
and
test
inc
inc
xor
dec
test
jns
adc
pop
sbb
dec
stos
cmp
lock
jl
xchg
imul
cmpsb
dec
and
xchg
xor
dec
push
or
cwtl
xor
xlat
lods
adc
xor
addr16
out
dec
add
xchg
mov
push
push
rcrb
enter
cli
mov
pop
add
cmpsl
mov
sbb
or
dec
repnz
pop
sub
popf
dec
aad
cmp
imul
pop
xchg
bnd
adc
mov
dec
xchg
mov
andb
icebp
shll
add
fiadds
add
dec
shl
ljmp
mov
out
pop
loop
arpl
ret
jl
cmp
les
fisubl
sbb
mov
mov
push
out
lcall
stos
xchg
fwait
push
cmp
adc
lret
ja
and
sub
mov
and
push
add
dec
stos
inc
stos
jbe
shrb
mov
std
movsb
add
ffreep
sahf
aam
mov
dec
push
fdivrl
xchg
cmp
sub
ljmp
pop
incl
bound
andl
inc
out
adc
push
push
hlt
aam
ja
scas
divl
or
cltd
xchg
xchg
cmp
mov
mov
push
dec
cmpsb
addr16
or
fiaddl
pop
testl
add
fisttpl
ljmp
les
or
out
xchg
or
push
pop
pop
mov
bound
pushf
int3
sbb
inc
xchg
aaa
xor
xchg
xlat
ds
xchg
out
dec
and
mov
out
testb
dec
loope
dec
inc
ret
xchg
das
xchg
shll
iret
xchg
add
mov
mov
inc
mov
imul
sub
jae
inc
mov
and
pop
in
jnp
popa
mov
idivb
outsl
cmp
xor
mov
icebp
push
and
ss
aas
sbb
xorl
push
sub
mov
cli
movsb
lock
dec
in
js
sub
jae
dec
inc
sbb
mov
mov
mov
add
adc
jbe
mov
enter
daa
scas
cmc
and
pop
rorl
jge
push
daa
inc
dec
xchg
arpl
arpl
lods
jmp
push
test
iret
lret
pop
js
mov
inc
xor
ret
xchg
add
xchg
inc
ljmp
mov
jmp
aam
mov
jnp
sbb
mov
repnz
test
stos
push
fld1
mov
pop
mov
and
sbb
outsb
mov
mov
popa
test
ss
mov
jge
fwait
jo
mov
popf
aas
xchg
or
push
pop
jecxz
sbb
lret
es
push
mov
rclb
sbb
ffreep
jmp
lods
pop
cmp
les
or
jno
push
fwait
shrl
lret
inc
lea
jp
outsb
push
ja
addr16
or
loope
sahf
push
das
fsub
cli
or
push
les
xchg
sub
je
sbb
xor
sub
sub
mov
push
push
or
cmp
test
ljmp
xchg
popa
jae
mov
push
test
inc
decb
jbe
mov
test
gs
mov
dec
mov
scas
hlt
push
and
das
add
or
xchg
out
das
jg
cmp
mov
xor
fdivrl
mov
movl
aas
or
je,pt
xor
inc
jg
jp
int3
mov
jo
inc
pop
fldt
xor
pop
std
mov
lcall
jo
ljmp
pushf
out
and
add
xlat
cmpsb
lret
popf
cs
cmp
test
pop
lods
push
mov
fwait
push
sub
daa
jb
dec
mov
jecxz
ss
mov
pop
or
xor
aam
fs
sbb
loop
mov
ds
inc
jp
hlt
mov
movsb
hlt
sub
clc
call
xchg
push
or
and
insb
adc
inc
insl
fwait
ret
cmp
sbb
cmp
mov
push
nop
pop
jl
arpl
ret
mov
inc
mov
cmp
lds
push
inc
shrl
pusha
mov
stos
mov
sti
test
fstpl
xchg
ror
scas
push
sub
jb
dec
scas
push
adc
xlat
sub
cld
fs
or
dec
dec
ret
xchg
add
dec
fistpll
leave
std
shll
push
addr16
in
cmp
xchg
cmc
bound
das
add
dec
adc
jns
xchg
jg
hlt
arpl
push
in
xor
dec
mov
addb
test
pop
flds
push
xor
and
dec
jns
mov
test
stos
inc
and
jae
scas
outsb
mov
jb
adc
push
jo
stos
mov
xchg
mov
data16
dec
inc
inc
jb
js
mov
jmp
rcll
mov
or
pop
adcl
jl
xor
popa
or
xor
lds
std
das
push
stos
cmpsl
and
orl
cmp
cmp
out
js
sbb
mov
cmc
sbb
jae
jne
cmpsl
inc
inc
es
and
dec
mov
scas
ja
fucomi
jg
jae
or
add
sarb
cmp
out
push
movsl
adc
push
pushf
cmp
lea
rcll
add
test
rcrl
insl
jbe
inc
test
xor
and
repnz
movsl
mov
pusha
mov
cli
and
fnstenv
es
inc
pop
mov
popl
xor
pusha
jae
inc
or
int
dec
imul
out
push
inc
mov
gs
loop
pop
stc
xchg
and
test
jns
pop
xor
push
call
or
xchg
and
jecxz
jge
aam
lock
adc
lods
das
fisubs
jns
jg
xor
stos
cmp
dec
arpl
into
icebp
adc
cmp
mov
push
adc
sbb
dec
cld
bound
xchg
nop
mov
filds
mov
mov
adc
mov
or
adc
std
test
sahf
jne
bound
jl
lret
jne
scas
sub
lods
pop
sbb
sbb
std
pop
loop
lods
lea
xor
xor
xchg
negb
xor
dec
cmc
add
out
pushf
dec
xor
cmp
and
mov
daa
mov
out
mov
add
pop
outsl
push
sbb
je
adc
icebp
jl
cmp
inc
push
xor
aam
aas
sahf
jne
out
out
sbb
mov
mov
sub
adc
sub
adc
and
insb
pinsrw
xor
mov
pop
mov
push
jp
pop
jns
stos
dec
jge
decb
stos
das
mov
movsl
dec
nopl
int
jle
lcall
and
inc
sub
fsubr
out
mov
xchg
loopne
jmp
ds
push
xchg
dec
sub
lds
sub
sti
jo
mov
push
and
iret
loopne
in
push
stc
fs
mov
mov
fcomps
add
sub
mov
dec
in
adcb
jae
inc
in
mov
xchg
js
loopne
outsb
mov
cltd
push
mov
imul
xor
pop
push
mov
cmpsl
loope
mov
adc
xchg
or
lret
sbb
imul
ja
mov
or
psubsw
mov
pusha
pop
cs
cmp
mov
mov
fists
loop
out
inc
lret
or
rcll
js
xor
push
add
inc
pop
dec
aas
add
and
test
nop
out
sbb
xor
push
into
cmp
cs
in
push
adc
add
orl
outsb
loopne
lock
fldpi
mov
movsl
add
popa
addb
clc
mov
adc
in
xor
and
ret
aad
pop
or
addr16
sti
push
test
adcb
jb
dec
mov
mov
ss
aad
icebp
rdmsr
or
push
test
aam
jne
cmc
push
loope
inc
mov
push
in
pop
insb
xchg
leave
and
pop
mov
push
mov
fisttps
or
xchg
test
lds
insb
sub
es
andb
mov
cli
xorl
inc
fs
in
imul
jge
arpl
mov
cmp
pop
xchg
insb
cmp
mov
mov
shll
sub
xor
and
test
ljmp
pop
test
loope
mov
xlat
out
mov
pop
jmp
pop
stc
xlat
pop
mov
test
inc
pop
pop
mov
push
rorb
xchg
fisttpll
movsb
loop
leave
dec
aad
push
sub
ret
cld
push
clc
pop
out
addr16
xorl
mov
dec
sub
cs
xlat
xor
mov
je
add
mov
fists
out
movsb
enter
jne
bnd
mov
outsb
int3
lods
sbb
add
rolb
cmp
xor
sub
les
sbb
sub
xlat
mov
aad
hlt
jle
cmp
stos
popf
decb
ja
add
inc
mov
mov
push
pop
dec
add
sub
sbb
imul
push
data16
in
cltd
test
repnz
mov
add
lret
lret
and
aad
sbb
mov
cmpsb
jmp
sahf
ja,pn
pop
lods
js
in
int
shrl
sbb
lret
call
adc
fistps
cs
push
jno
fildll
testb
add
rorl
nop
mov
lahf
jno
repz
mov
cmp
add
divl
mov
stc
adc
aas
rolb
push
leave
sti
fiaddl
sub
orb
mov
mov
insl
shl
scas
mov
dec
cmpl
pop
pushf
xor
repnz
mov
xlat
xorl
filds
ficompl
push
dec
inc
daa
xor
mov
shlb
push
mov
insl
lds
bnd
and
cwtl
dec
inc
fbstp
cmpb
test
cwtl
scas
imul
inc
and
push
out
lods
and
mov
iret
test
cmp
cwtl
fnstcw
pop
adc
cli
mov
out
sahf
je
or
push
mov
jl
add
rol
popf
mov
inc
jnp
aas
pop
lock
mov
dec
mov
fldlg2
test
add
mov
idivb
jbe
int
cli
and
mov
sahf
or
and
jne
mov
mov
inc
pop
int3
mov
dec
adc
or
mov
cmpsl
movsb
neg
cmp
sub
mov
hlt
jae
pusha
xchg
rcrl
xor
test
xchg
iret
movsl
call
mov
sub
ss
lea
mov
push
xchg
cmp
adc
cld
push
fs
push
push
jns
lds
mov
xchg
mov
inc
dec
xlat
lcall
repz
fnstcw
sub
push
cs
cmp
mov
pop
ss
ret
inc
mov
mov
sub
out
insb
mov
scas
mov
ret
and
rorb
test
mov
mov
mov
fldl
int3
loope
imul
dec
mov
mov
cmc
out
aas
jge
fnstsw
jne
jp
mov
jecxz
mov
mov
mov
repnz
test
jge
movsb
xchg
push
shll
pop
out
icebp
xchg
cmp
lods
add
orl
mov
mov
fsubl
xlat
movsb
or
mov
add
stc
stos
sti
scas
fstl
lods
arpl
adc
mov
imul
mov
pop
or
data16
pop
pop
movsb
repnz
pop
dec
push
inc
inc
push
cmc
rorb
push
xor
pop
mov
sahf
fisttpll
mov
mov
jae
insb
mov
sbb
mov
add
sub
fisubrs
movsb
inc
mov
jmp
lods
pushf
sbb
lcall
xchg
add
cwtl
xchg
mov
out
push
lcall
push
rol
cmc
sbb
rcll
cmp
ja
fldl
xlat
fwait
imull
mov
push
pusha
hlt
dec
int
shll
cmpsb
movsl
xor
mov
outsl
xchg
xchg
addr16
lahf
fs
shlb
add
mov
mov
mov
insb
sub
hlt
sub
fstl
jo
xor
push
dec
aad
mov
lret
xchg
pop
xlat
cmp
jl
lahf
and
push
mov
cmp
in
cmp
and
jb
leave
mov
ds
mov
cmp
lret
dec
cmpb
jns
rolb
shll
ret
pop
in
add
sub
xchg
mov
fwait
sbb
aas
sub
inc
ds
jecxz
add
out
pop
jnp
xor
adc
push
enter
push
movd
addl
lahf
add
mov
mov
iret
pop
or
mov
ss
aaa
sahf
cmp
adc
addr16
divl
mov
adc
iret
dec
sti
mov
jo
jae
xchg
pop
xlat
test
sti
sti
cld
ret
out
mov
jb
rcrb
cmp
and
xchg
adc
add
into
es
inc
push
cli
int3
mov
mov
push
dec
bound
in
in
push
or
rorl
sub
aaa
mov
arpl
sbb
out
int
inc
jne
mov
cmp
cmp
scas
test
jl
dec
push
xchg
or
inc
in
std
pop
nop
rclb
fxch
or
bound
push
pushf
cltd
es
out
dec
adc
repnz
push
or
xchg
int
fdiv
loope
pusha
insl
add
cli
mov
sub
mov
cmp
ja
adc
repz
test
das
push
mov
arpl
enter
cmp
or
aaa
leave
inc
xchg
add
out
ss
xlat
aam
push
insl
aad
xchg
mov
rep
loop
and
xchg
mov
test
or
jge
iret
in
sbb
test
test
jge
aam
fnstenv
lahf
push
popf
ficoms
and
lea
movsb
xlat
test
mov
xchg
add
jp
dec
sbb
xchg
sub
inc
mov
aas
pop
aam
pop
adc
outsb
int3
es
adc
pop
loop
xchg
push
iret
andl
push
pushf
dec
in
xchg
mov
push
in
xchg
les
test
scas
test
add
push
xchg
stc
jp
ds
imul
mov
sub
push
pop
push
sbb
in
mov
sbb
call
lea
sub
sub
cmp
daa
mov
andl
push
js
sbb
mov
mov
mov
cmp
xchg
cmp
testb
in
jmp
movsb
rcr
addr16
mov
mov
dec
cmp
iret
jnp
sub
mov
and
xchg
adc
lods
inc
xor
and
pusha
cli
push
dec
int
push
hlt
jb
xchg
out
dec
loope
pop
adc
push
in
jae
scas
dec
or
stos
es
add
dec
mov
mov
adc
push
std
mov
push
mov
xchg
push
cs
es
repnz
frstor
mov
rorb
icebp
hlt
outsl
fsts
out
rorb
mov
cmpsl
outsl
pop
cwtl
add
jbe
adc
sub
mov
dec
xorl
loopne
push
sbb
or
ret
pop
cltd
xor
or
arpl
bound
mov
js
cmp
call
adc
mov
aam
sub
cmp
cmpsl
flds
dec
movsb
icebp
push
push
jno
add
inc
dec
out
inc
cmpsl
insl
xor
sub
sbb
push
stos
push
lahf
repnz
inc
xchg
loope
out
lods
and
inc
aad
cmp
cmp
out
cli
cmp
mov
mov
add
loope
rol
dec
lds
ret
lret
or
adc
jb
push
sub
cmp
sbb
stos
je
pop
jne
cmp
in
les
jae
mov
add
pop
shll
cmp
mov
mov
iret
mov
in
dec
adc
scas
insl
push
clc
pop
std
dec
out
outsl
xor
mov
rclb
fstps
popa
cmp
sub
test
std
fsubrs
cmpsl
pushl
fisttpl
test
jmp
jno
push
pop
fidivrs
icebp
jle
sub
insl
fsubrs
mov
and
shlb
inc
test
jns
lea
cltd
jle
nop
cmpsl
daa
popf
testl
sbb
mov
sbb
push
and
lods
je
jnp
sbb
sub
sub
pop
add
bound
add
adc
push
and
inc
je
xchg
push
out
nop
xor
sbb
ficoms
out
pop
cltd
testl
stos
push
ret
std
test
iret
lret
addb
xchg
pop
xchg
scas
bnd
cmp
mov
jns
int3
jmp
clc
push
lea
cld
loope
lahf
dec
mov
xlat
addr16
int3
adc
iret
xlat
ret
sub
and
cmp
div
mov
inc
xchg
lods
in
mov
sbb
test
scas
pop
push
mov
cld
lret
stos
push
mov
xchg
pop
xor
repz
das
jno
ret
push
ja
sbb
sbb
inc
or
fidivs
repz
sbb
int
cmpl
lahf
fcomp
mov
jns
addr16
fstpl
xchg
popf
cmp
jl
mov
pop
data16
cmp
add
or
inc
jno
sub
ficompl
test
cmpsb
mov
sub
nop
orl
mov
or
movsl
push
lods
mov
sbb
adc
shll
pop
leave
icebp
inc
mov
jge
fmuls
pop
pop
orl
add
mov
xlat
gs
push
enter
mov
add
mov
mov
pop
inc
fwait
mov
dec
lds
add
into
fstpl
je
fwait
add
ds
rolb
or
mov
sbb
pusha
fs
push
es
lret
fadds
and
mov
popf
clc
xchg
xor
les
mov
jo
aaa
lods
xchg
test
push
xchg
dec
into
lcall
xchg
out
or
mov
pop
divl
mov
nop
scas
icebp
imul
ds
movl
sub
shl
cmp
popa
popf
jns
in
push
mov
push
ret
bound
lods
push
push
jg
push
nop
or
hlt
sbb
cmp
lahf
outsb
inc
enter
and
xor
mov
mov
repz
mov
into
mov
clc
mov
pop
cmp
sub
ret
pop
inc
fcompl
xor
aaa
int3
sbb
popf
sub
mov
mov
ret
in
arpl
mov
pop
ja
mov
pusha
mov
bound
mov
xchg
mov
dec
das
in
sbb
addb
push
ret
rcrl
jno
jbe
add
jnp
adc
mov
mov
in
adc
mov
imul
dec
mov
mov
xchg
and
jl
stos
insl
add
or
test
push
dec
xor
mov
fidivl
and
push
adc
in
xor
lret
jle
jge
push
jnp
dec
cmp
in
xchg
fdivs
jmp
imul
jge
je
aam
aam
mov
sub
mov
push
es
inc
jmp
addr16
repnz
loope
sbb
or
adc
fwait
dec
push
js
jecxz
mov
inc
dec
lds
data16
repnz
push
mov
out
insl
les
insl
js
mov
rorl
pop
clc
lahf
inc
cwtl
cmp
icebp
mov
xor
mov
lcall
cwtl
push
sbbb
out
inc
cmp
sub
xchg
dec
pop
iret
or
mov
adcb
xchg
subb
sbb
push
dec
xor
and
std
fistpl
rorl
int
sub
push
dec
movsl
jno
lds
xchg
xchg
sbb
cmp
mov
pop
jnp
jns
adc
dec
int
adc
ja
push
pop
scas
popf
out
mov
pop
fstpl
sub
mov
adc
shrb
add
into
or
pop
out
out
aas
inc
mov
scas
iret
call
daa
sbb
scas
push
mov
stc
out
xchg
push
mov
push
or
in
test
fmuls
push
imul
das
adc
pushf
adc
mov
int
mov
jge
ret
xchg
hlt
push
push
pop
xor
inc
je
je
js
push
lret
sbb
movsl
sub
xor
xchg
jmp
outsb
inc
mov
leave
sbb
mov
xor
clc
popf
movsl
shl
mov
push
add
movb
daa
jg
cli
ljmp
xchg
cmpsb
repz
out
int3
andb
inc
push
adc
lret
cli
imull
arpl
loopne
cmp
arpl
mov
outsb
es
push
fwait
xchg
testl
mov
daa
jle
mov
cltd
sbb
mov
fbld
mov
out
outsl
xor
shll
je
outsl
adc
into
inc
xor
in
inc
xchg
rorl
enter
pop
in
inc
sbb
lock
push
sub
mov
jo
mov
jp
lcall
push
inc
inc
mov
das
cmp
popa
adc
mov
stc
loop
mov
pop
dec
or
scas
jmp
inc
scas
insb
push
loope
sub
cmpsl
js
test
in
xor
add
into
aaa
leave
fdivrs
or
push
and
mov
loopne
adc
adc
push
push
cmp
stos
mov
fdivrl
adc
adc
ds
out
and
movsl
pop
mov
test
iret
paddusw
iret
pop
lcall
mov
clc
out
mov
gs
xchg
or
xor
pop
stc
xor
or
popf
pop
icebp
icebp
add
fwait
add
es
pop
inc
mov
daa
fwait
dec
and
push
orb
xor
add
mov
ret
fxam
lret
cmpsl
mov
adc
cli
pop
je
test
sub
arpl
sub
je
sub
mov
movsb
cs
cmp
jo
cli
test
pop
rclb
push
inc
xchg
lea
mov
jb
ljmp
dec
mov
gs
imul
mov
jbe
and
lret
scas
xor
aaa
faddl
out
repnz
or
lcall
test
jl
lods
insb
sbbl
lahf
stc
push
xchg
repz
lods
mov
mov
xlat
call
jmp
jg
xchg
je
add
dec
cmpsl
rorl
mov
dec
pop
sahf
stc
dec
mov
mov
cmp
dec
cmp
or
ds
mov
pushf
jbe
mov
divb
mov
push
add
iret
and
add
push
sub
into
lods
push
mov
lahf
cmc
and
scas
or
in
adc
dec
add
dec
sub
xchg
cmp
into
mov
ss
mov
mov
shrl
fsts
mov
imul
lea
xor
enterw
nop
mov
sbb
fistpl
inc
push
inc
aad
mov
push
outsb
jae
cltd
cmp
imul
cmp
xorl
stc
push
mov
int
scas
hlt
fiadds
push
xlat
inc
push
sub
dec
js
inc
in
xchg
add
adc
xorl
frstor
push
or
pop
pop
mov
mov
sbb
or
into
jp
mov
xor
mov
dec
cmp
fistpl
mov
pushl
dec
test
push
push
push
jp
dec
and
pop
lods
xor
cmpsl
aad
and
sub
mov
and
mov
jp
adc
aad
dec
in
sbb
mov
loope
ja
dec
loop
xchg
lds
push
pop
dec
sbb
dec
mov
cmp
push
stc
cmc
push
sbb
repnz
xor
outsl
xor
and
sahf
es
out
popl
in
xor
sbb
mov
xor
mov
call
pop
jo
repnz
xor
lods
imul
xor
and
push
push
cmp
movsl
shll
jae
mov
jecxz
sbb
das
fucom
test
ret
cmp
ja
dec
dec
add
and
out
mov
adc
mov
dec
jmp
or
push
xchg
inc
cmpsl
stc
and
or
xchg
dec
lods
loopne
decb
jbe
push
or
pop
or
dec
inc
cmc
or
mov
pop
scas
xchg
xor
jmp
lret
xlat
repz
jbe
dec
das
and
mov
test
push
sub
mov
fisubs
jmp
insb
out
sub
test
inc
mov
xchg
shlb
cmp
pop
in
out
xchg
es
xchg
in
mov
add
inc
inc
xlat
ficompl
dec
test
push
out
or
inc
addr16
in
push
add
xchg
jg
les
xchg
jno
dec
fdivrs
jnp
pop
jns
arpl
mov
sbb
jne
xchg
cltd
jae
ficoml
lods
ljmp
out
sbb
outsl
cmpsl
jne
movsl
push
inc
and
add
hlt
adc
mov
scas
scas
sbb
int
pop
dec
lret
jg
push
in
push
mov
bound
xchg
loop
pop
test
hlt
sub
and
xchg
inc
sub
lret
leave
sub
aad
jb
scas
inc
xchg
hlt
in
jmp
mov
jb
pushf
jo
xor
shrl
add
pop
outsb
push
adc
int3
ja
jmp
push
cmp
sub
lods
pop
jmp
clc
dec
subb
stos
xchg
std
ss
mov
push
add
popf
dec
sub
xor
in
lods
dec
in
cli
or
arpl
data16
pop
sub
lcall
inc
and
mov
mov
dec
xchg
xchg
ds
sub
jo
pop
mov
call
dec
pop
mov
xchg
ja
mov
mov
fwait
dec
cs
push
add
mov
mov
sbb
adc
neg
lcall
movsb
ret
pushf
stos
mov
or
data16
pop
int3
dec
sti
jp
xchg
sbb
jbe
adc
test
popf
push
imul
add
mov
add
mov
stc
xchg
ret
sub
lods
rorb
scas
mov
daa
or
andb
mov
popf
stc
sbb
imul
pop
jno
cmp
fmull
imul
fmuls
shrb
scas
aam
jno
imul
mov
sti
cli
pop
push
cmc
rcll
mov
push
sti
fisubrl
movsl
mov
jbe
mov
imul
pusha
and
mov
pushw
and
je
rcll
mov
lea
movsb
or
leave
sub
push
ss
pop
enter
mov
pop
xorl
xlat
or
xchg
xchg
pop
sbb
inc
mov
xor
jb
outsb
fucomip
repz
or
sahf
mov
ret
mov
or
lods
into
xlat
testb
mov
in
jg
mov
push
sarl
cmpl
xor
and
mov
cmp
out
push
jge
nop
arpl
sbb
xlat
inc
jmp
pop
test
mov
scas
mov
enter
push
in
cwtl
push
shl
and
lea
or
push
je
test
xor
adc
mov
mov
cld
arpl
sub
fxam
pop
jo
sub
daa
mov
out
pop
push
jns
je
pop
lret
push
int
arpl
shll
pop
es
in
bound
mov
into
xlat
mov
mov
adc
inc
pusha
pop
outsb
mov
xor
mov
cmp
cmp
add
jb
cmpsb
mov
mov
pushf
inc
imul
dec
aam
sub
pop
mov
jmp
fprem
leave
lret
lock
sbb
insl
call
test
scas
pop
scas
and
pop
xor
pop
jo
adc
jp
dec
aam
add
push
clc
sub
adc
pop
hlt
jl
fimull
movsl
or
mov
push
aad
mov
enter
cli
and
je
pusha
add
aaa
sbb
xor
loope
adc
aaa
icebp
dec
mov
dec
ss
imul
cld
push
add
mov
or
jl
pop
stos
sahf
push
int3
clc
xchg
fstpt
jge
push
and
cmp
inc
adc
mov
sub
dec
add
aas
mov
add
xchg
test
fxch
ja
mov
idivl
in
mov
movsl
iret
push
push
pop
loope
js
nop
loop,pt
aam
aad
xchg
cmp
xchg
jnp
in
or
ljmp
cmp
imul
int
shrb
arpl
hlt
scas
push
aad
inc
and
imul
mov
sub
test
cmp
sbb
daa
sti
xor
jl
lock
rclb
or
cmp
out
xor
pmullw
mov
xchg
sbb
pop
les
pop
or
lods
into
cmpsw
add
out
and
inc
aad
lahf
sbb
mov
cmpsl
popf
mov
dec
sub
sbb
mov
cmp
imul
or
scas
test
fs
loop
leave
sbb
push
ds
pushf
fdivrs
mov
sbb
xchg
scas
imul
imul
mov
in
xor
jmp
or
cmc
lcall
xchg
adc
add
scas
mov
dec
adc
jns
loopne
xor
mov
sub
imul
leave
sbb
add
mov
push
daa
mov
fildl
pop
pop
mov
into
mov
jmp
cs
pop
hlt
cmp
loope
adc
inc
sahf
inc
mov
int3
mov
stc
out
inc
mov
inc
rcr
stos
dec
inc
or
mov
jmp
cmp
push
daa
arpl
imul
cli
stos
xchg
lock
aaa
out
mov
sbb
push
push
mov
cmp
lcall
push
mull
les
add
push
int
fcmovbe
popa
fistpl
popa
pop
in
jne
test
push
fimuls
aam
leave
sub
or
or
fcmovnb
mov
in
xchg
aaa
test
and
pop
mov
xchg
adc
gs
mov
cmp
adc
mov
mov
xchg
scas
inc
int
jne
cmp
test
push
ficomps
mov
shl
movsb
lea
dec
jmp
fmuls
roll
rcll
push
and
cld
out
add
sar
mov
cld
bnd
lea
insb
insl
repnz
add
inc
inc
xchg
loop
test
jp
ret
push
out
add
data16
cs
rcl
out
daa
sbb
or
mov
popa
sbb
pop
call
sbb
and
pop
ret
ja
sbb
mov
and
or
mov
xorb
or
add
mov
pop
pusha
xchg
add
cmp
sub
ss
mov
dec
or
xor
add
inc
out
and
mov
ds
fwait
pop
xor
aaa
cwtl
fs
dec
inc
inc
test
sarb
sti
add
es
adc
pop
mov
stos
push
pop
frstor
pop
and
dec
push
icebp
and
stos
les
mov
mov
sbb
cwtl
push
sub
imul
aaa
mov
test
adc
test
and
out
popa
out
sahf
jle
adc
add
call
inc
mov
push
add
cwtl
add
adc
outsl
lds
orl
lret
bound
mov
xor
insl
push
jnp
loopne
fadd
popf
jo
mov
movsl
jle
je
push
fsts
insl
xchg
outsb
mov
dec
jle
dec
add
loope
idiv
mov
in
cltd
out
add
cmpsb
adc
sti
mov
or
scas
sub
gs
adc
xlat
fidivrl
jne
jo
daa
pop
push
fisttps
sahf
jecxz
xor
mov
add
out
mov
fdivs
adc
mov
cmp
mov
inc
imul
adc
cs
icebp
sub
std
lds
mov
sbb
dec
test
mov
shlb
decb
add
push
xorl
mov
lret
jl
jb
jb
iret
mov
cmpsl
cs
xchg
sbb
jb
mov
mov
sub
xor
mov
cltd
mov
fcmovb
test
ja
test
cs
dec
mov
mov
fistpll
push
sti
push
out
push
and
inc
push
je
cmpsb
pusha
push
sbb
mov
mov
xorb
push
push
in
push
fldenv
ss
fwait
nop
rolb
gs
cli
push
xlat
mov
mov
ret
lds
lock
xor
push
fisttps
fiaddl
jl
cmc
push
jle
jmp
sbb
dec
jbe
lea
loopne
inc
sub
add
es
and
cs
and
out
inc
repz
and
adc
idivl
aad
jae
sub
push
xor
stos
and
in
dec
popf
mov
mov
mov
daa
jne
aad
lds
jo
cmpsl
inc
or
pop
les
or
lea
icebp
xchg
mov
adc
mov
mov
sbb
fucom
dec
lods
mov
mov
push
scas
jbe
or
mov
cwtl
jne
sgdtl
stc
outsb
pop
xor
cmp
sbb
sbb
fwait
dec
mov
mov
popf
add
nop
xchg
push
or
sub
in
mov
adc
mov
leave
dec
mov
notrack
out
in
cmc
sar
outsb
xor
dec
lret
mov
inc
sbb
ret
mov
sbb
pop
pop
mov
call
push
icebp
mov
js
xor
push
mov
xchg
and
pop
push
jnp
out
shll
mov
bound
cmp
addb
push
adc
lret
jne
popa
fisubrs
xchg
ljmp
cmp
movl
shrb
xchg
xchg
xor
pushf
sub
js
dec
and
in
orb
movsl
arpl
xlat
loope
push
out
jmp
jo
in
xchg
push
enter
pop
cmpsb
mov
pop
mov
imul
ja
and
pop
mov
ficompl
call
jae
cli
jmp
xor
sbb
adc
outsl
in
inc
cmp
sbb
jge
sub
mov
movl
xor
pop
inc
adc
pop
add
jecxz
int
dec
dec
fisttps
mov
icebp
push
or
pushf
movsl
es
inc
or
jns
lods
sbb
mov
jg
inc
sahf
jecxz
pop
out
xor
shlb
rcr
aam
push
dec
mov
fstl
nop
sbb
cmp
mov
loope
pushf
mov
in
inc
das
xchg
in
in
movsl
xor
fdivrs
nop
leave
sub
mov
lock
test
lds
shlb
cwtl
mov
icebp
cmpsl
xor
shll
add
cmp
push
scas
cmp
in
test
in
icebp
icebp
test
aas
adc
jl
inc
loope
dec
inc
shrb
test
into
sbb
outsb
mov
pop
mov
mov
lret
test
xlat
test
jb
mov
inc
and
jg
ljmp
adc
dec
test
scas
inc
popf
movsb
inc
mov
icebp
adc
ljmp
sbb
lcall
rcrl
cmp
adc
and
and
mov
push
ss
cmp
sub
mov
rorl
cmpsb
mov
add
out
and
push
jns
das
adc
ret
cmp
mov
lods
cli
jno
sbb
inc
loop
out
pop
or
or
lods
mov
rclb
or
imul
jp
negb
jo
mov
push
aas
imul
jg
fistl
clc
cli
es
jl
jns
and
and
xor
out
std
shrb
loopne
adc
and
fldlg2
xchg
push
imul
inc
jno
imul
or
cwtl
push
repnz
pop
pop
push
aaa
sub
or
xchg
mov
out
mov
test
scas
insl
lret
mov
dec
and
mov
fists
rcll
das
ja
mov
lahf
out
adc
mov
insb
scas
pop
mul
addr16
das
inc
add
dec
mov
fbstp
aad
pop
dec
mov
imul
sarb
jle
and
repnz
in
outsl
mov
xor
xor
repz
jae
test
xchg
ficompl
inc
or
out
call
xor
cmp
cmp
xchg
mov
inc
or
push
sub
pop
jg
in
fdivrl
sbb
jae
clc
lret
sbb
mov
jmp
mov
cmp
addr16
inc
into
repz
lock
mov
mov
inc
jb
jmp
dec
iret
mov
mov
ret
scas
imul
xor
mov
mov
sbb
mov
mulps
lcall
and
lock
lea
lret
pusha
lods
pop
std
sub
cld
lret
add
dec
mov
out
sti
test
mov
xlat
jnp
xchg
fsubrs
mov
lahf
xor
fld
in
test
mov
ss
js
testb
mov
psllq
xchg
fcmovnbe
push
xor
inc
jp
cmp
adc
bound
loop
imul
push
xor
ss
pop
inc
fmulp
or
fidivrs
lds
lods
sub
gs
or
sti
and
pop
xchg
loop
jnp
pop
cmp
or
dec
pop
mov
inc
push
cmp
enter
je
out
mov
test
lahf
xor
mov
cld
jp
mov
lods
int
jnp
mov
jb
pushf
mov
add
adc
jno
cmp
imul
icebp
dec
mov
loop
mov
jge
test
mov
add
call
cmp
fldenv
ret
in
mov
pop
orb
mov
push
push
shlb
in
cmp
xor
stos
mov
dec
mov
je
mov
pop
loopne
shr
lret
adc
in
adc
or
dec
dec
and
lock
cs
dec
sbbb
int3
icebp
scas
adc
stc
xor
add
xchg
or
adc
pop
lcall
nop
out
dec
push
xor
xor
cmp
jb
pop
lcall
push
inc
mov
sbbl
xor
test
xor
inc
adc
push
rclb
out
cwtl
mov
inc
cltd
xlat
add
enter
stos
sub
jge
sub
lds
xchg
push
adc
sbb
dec
push
pop
call
ja,pt
xor
rol
push
jae
adc
dec
mov
nop
clc
lcall
lahf
cmp
mov
or
mov
call
daa
aad
ficomps
adc
mov
adc
out
xchg
mov
test
xor
push
aam
sub
into
xchg
jle
push
pop
xchg
pop
mov
push
outsl
mov
mov
pop
out
in
pop
test
pop
jge
js
or
in
jne
xorb
cmc
fsubrs
cmp
mov
xor
xchg
mov
xchg
xorb
rol
cmpsl
imul
or
aam
push
fwait
lods
insl
mov
test
xor
jae
sub
pop
clc
mov
dec
add
es
jp
daa
or
mov
xlat
xchg
and
lods
adc
xchg
int
jmp
sub
mov
add
jnp
push
inc
pop
add
es
mov
inc
xor
mov
out
inc
shl
push
mov
lahf
movl
fiaddl
push
mov
or
sahf
push
jl
mov
cmovno
push
mov
xor
xor
xor
adcb
sbb
cld
or
cmp
loope
xor
std
scas
divb
in
or
aam
jno
jo
mov
xor
daa
outsl
inc
adc
into
sbb
sub
das
xchg
cld
outsb
repnz
cmp
clc
fabs
bsf
mov
inc
loopne
pop
push
push
ss
jo
adc
mov
outsl
frstor
mov
movsb
sub
mov
mov
dec
jmp
sub
andl
out
mov
popa
fdiv
repnz
push
or
pop
roll
and
cmp
push
mov
shlb
ret
jae,pt
and
outsb
jne
sbb
pop
sbb
sahf
cld
repnz
loopne
add
push
test
lds
scas
xchg
sti
mov
mov
mov
xchg
mov
xor
add
add
je
ss
sub
mov
out
pop
cmp
leave
jle
lods
cld
or
in
add
popa
jns
pop
xchg
cmp
test
fstpl
xchg
rdtsc
sub
aas
or
jg
sbb
inc
and
imul
jmp
loope
test
stos
dec
lock
xor
push
jno
stos
xorb
cld
pop
sub
push
mov
das
add
pop
aad
ss
pop
aam
pop
add
shlb
xchg
xchg
sti
daa
jo
jns
push
leave
inc
je
dec
mov
xchg
xchg
mov
and
cmpl
mov
subl
dec
dec
xchg
pop
mov
mov
xchg
cmp
xchg
stos
cmp
dec
mov
into
push
pop
adc
addb
addb
ret
subl
push
es
add
test
jae
add
out
lods
leave
bound
or
push
iret
and
jno
mov
repz
fadds
pusha
aas
adc
xor
lret
rcrl
or
sbb
xchg
sti
jmp
enter
loope
jbe
movsb
pop
push
mov
cmp
push
scas
clc
jl
ss
in
jle
adc
js
mov
jle
les
adc
ret
out
jmp
fists
loopne
inc
push
int3
jae
inc
push
mov
xor
sub
mov
lret
repnz
xor
sahf
xor
or
add
into
sub
push
gs
clc
jnp
stc
xor
pop
xor
sbb
mov
orb
movsb
push
mov
in
pop
mov
testb
fdivr
mov
sbb
loop
mov
imul
jb
int
pop
shll
cwtl
jnp
xor
xlat
cmpsl
xchg
jnp
xor
and
lahf
in
je
arpl
inc
jns
jg
call
dec
dec
in
adc
cmpsl
outsb
push
outsb
lods
out
push
daa
fnstcw
adc
xchg
insl
or
and
loop
test
jbe
movsb
push
out
sahf
push
mov
sub
movsl
xchg
stos
pop
sub
dec
int3
push
lods
sti
adc
push
inc
dec
jae
xor
inc
jno
outsb
push
mov
pop
sbb
push
sahf
call
pusha
shll
rcrl
mov
fs
shl
aad
mov
bnd
jmp
or
pop
call
cli
xchg
fidivrl
sbb
int3
and
sub
stc
jno
nop
outsl
stc
push
jnp
cli
popl
popf
jae
cli
test
fisubs
mov
test
push
push
sub
xchg
dec
jnp
stos
sbb
popf
fs
sub
sbb
inc
xchg
xor
arpl
adc
mov
popf
jge
iret
aad
ret
pop
ds
and
mov
push
mov
inc
add
jle
imull
imul
sbb
daa
sbb
xchg
jle
push
pusha
icebp
push
lcall
imul
mov
fidivl
fisubrs
xor
shlb
jnp
das
cli
in
mov
sbb
sbb
das
jp
and
mov
int3
sbb
mov
xchg
iret
pop
and
shlb
add
jnp
stos
fwait
bound
sbb
mov
pcmpeqw
push
and
mov
out
mov
and
scas
mov
xchg
call
add
data16
repnz
lods
ret
cld
out
adc
clc
jecxz
addb
es
je
ss
adc
cmp
mov
sti
or
out
insl
ds
xchg
push
setbe
fldl
leave
dec
mov
jno
out
fs
xor
stos
mov
xchg
les
lds
shr
dec
test
test
adc
test
mov
insb
pop
pushf
push
xchg
imul
dec
mov
and
into
gs
inc
ljmp
enter
dec
out
scas
idivb
fistpll
cmp
test
adc
dec
je
fistpll
or
push
xchg
popf
adc
sub
insl
stc
cmp
push
lahf
sub
and
fbld
xorb
xchg
in
add
jae
dec
sti
ret
inc
pop
xchg
mov
stos
or
jo
int
repnz
lahf
cs
inc
inc
jno
aad
je
into
outsb
dec
mov
imul
call
mov
fwait
ss
add
data16
rcr
decl
add
and
and
jnp
lret
rorl
ds
fwait
ret
pop
es
jne
sbb
lds
add
and
jae
jno
xchg
in
out
sbb
je
add
push
inc
mov
add
dec
inc
sti
pop
aad
nop
mov
jp
ljmp
push
push
fisttpll
pop
lret
xchg
xor
cmc
add
mov
inc
jne
add
testl
iret
cmp
shr
scas
or
sahf
lret
pop
mov
pop
cmp
fmull
addr16
clc
xorb
loopne
inc
lret
dec
lods
sub
daa
mov
stos
fnstenv
push
cmc
js
dec
and
mov
sub
inc
cmp
cmp
lds
adc
mov
push
mov
pop
xchg
cwtl
popf
lds
mov
fidivrl
out
push
pop
loopne
xchg
fwait
mov
pusha
pusha
sub
xchg
scas
loopw,pn
pop
cmpb
imulb
clc
sub
divb
jp
jecxz
cmp
mov
ret
push
mov
push
stos
outsl
daa
add
jne
dec
addr16
mov
ja
xchg
sub
fistl
jl
sbb
jp
pusha
out
cmpsb
dec
cmpsb
call
push
sbb
out
loope
adc
test
xchg
hlt
cli
scas
mov
nop
test
mov
mov
in
aam
scas
push
mov
mov
and
mov
mov
mov
stc
mov
testb
mov
push
loop
ja
test
shrb
or
test
lea
movsb
xor
ficoml
dec
out
jb
xchg
jo
xor
adc
test
and
jno
sahf
fimuls
cmp
xorl
ss
xchg
fsub
int
xchg
paddusw
xchg
js
xchg
imul
fcomps
mov
jnp
mov
add
push
imul
push
sub
nop
push
out
xchg
push
loop
out
mov
jne
repnz
ret
js
adc
dec
js
mov
xorl
lcall
jnp
jle
cs
repnz
lods
scas
jnp
mov
shl
out
or
xor
ja
test
es
jns
lock
loop
rolb
mov
adc
sub
xchg
fisubs
jp
test
call
add
or
jmp
push
push
pop
sbb
cmp
jno
das
dec
fidivs
xchg
jns
insb
insl
loop
loope
ret
sub
out
cli
push
stos
lds
outsl
xor
jle
mov
push
jge
test
add
stc
sub
pop
ljmp
xchg
leave
insb
fists
xlat
push
pop
ss
inc
sbb
outsb
mov
or
int3
cmp
imul
movsl
arpl
mov
push
mov
fildl
jecxz
dec
out
mov
out
jg
push
pop
push
int3
sbb
je
mov
aaa
stos
stos
repnz
xchg
rclb
test
mov
mov
jp
into
lret
ja
add
sub
push
sbb
push
cld
sub
ret
cld
mov
ss
sbb
xchg
inc
sahf
inc
mov
and
fbstp
jp
mov
aam
mov
popf
xor
and
sub
pop
test
pushf
pop
test
test
ror
out
pushf
mov
mov
in
aam
lea
out
push
in
adc
inc
cli
sbb
pop
dec
inc
xor
push
ja
push
loope
add
push
rclb
xchg
sub
xor
mov
cmp
push
insb
outsl
sbb
popa
repnz
bound
ljmp
int
pushf
shll
xor
rcll
jae
inc
je
lds
nop
out
xor
cmp
repnz
cmpl
cmp
xor
xlat
rcll
dec
or
xchg
dec
adc
push
pop
and
sbb
push
std
mov
mov
mov
mov
jo
mov
into
in
das
adc
add
pushf
inc
pop
aad
inc
shlb
push
testl
enter
adc
pop
into
mov
add
outsb
adcl
and
lahf
ss
inc
mov
sub
shll
push
pop
pop
imul
or
ficoml
stos
sbb
mov
dec
hlt
hlt
sub
repz
and
gs
mov
lock
pop
xor
mov
jle
and
push
xchg
xor
jle
insl
mov
fnstsw
cmp
outsb
adc
pushf
mov
pop
sarl
arpl
inc
mov
inc
xchg
mov
sbb
or
lcall
loope
hlt
jecxz
out
push
or
adc
or
sub
ds
add
pusha
jecxz
mov
push
gs
fwait
inc
pop
rorb
push
test
icebp
les
cmc
sub
rcrb
icebp
std
popf
pop
inc
mov
movb
dec
dec
out
js
push
push
stos
mov
mov
jmp
cli
or
adc
out
xor
andl
jo
dec
cmp
cld
jne
ljmp
ja
movsb
stos
add
das
pusha
and
ds
mov
fs
fnstsw
outsb
out
daa
mov
lahf
jl
enter
cs
push
je
push
loope
lods
pop
mov
ss
and
in
dec
mov
sub
cld
popl
sar
test
pavgw
mov
push
movsl
in
mov
out
mov
jbe
fistpll
lcall
cli
bound
into
iret
pop
cli
inc
aad
imul
xlat
pop
pusha
mov
aam
lret
cmp
sti
xchg
jno
xchg
pop
ss
shll
push
lahf
sbb
or
rcrl
push
js
repz
lods
adc
popl
popa
addr16
pop
pop
icebp
enter
out
mov
mov
setb
push
mov
mov
lock
ficomps
adc
mov
mov
push
shlb
imull
sub
lds
push
cmc
pusha
xchg
lods
pop
and
insl
adc
icebp
call
mov
mov
cmp
cs
test
scas
lods
and
sub
jnp
clc
mov
loop
outsl
dec
cmp
dec
sub
push
cmpsl
std
or
pcmpeqd
and
adc
push
fidivrl
adc
fcompl
ds
movl
add
add
cli
mov
in
fisubrs
pushf
push
testb
imul
hlt
stos
push
adc
fcom
cwtl
pushf
mov
xor
inc
cmp
out
jb
sbb
or
int3
fisubs
jl
test
xchg
cmp
fnsave
loop
mov
push
add
sub
sbb
mov
jae
mov
push
push
subb
mov
cmp
jb
cmp
bnd
xchg
stos
lock
add
inc
lret
shr
xchg
pop
mov
mov
in
xchg
add
adc
push
jb
xor
es
fsubl
faddl
scas
out
scas
push
mov
or
sti
rolb
js
mov
filds
movsl
push
fnclex
imul
push
lret
add
test
sub
icebp
lods
outsw
inc
mov
popf
fdivrl
dec
pop
dec
je
jb
or
adc
xchg
pop
inc
shrl
aas
dec
dec
daa
arpl
std
lods
mov
mov
pusha
popf
ljmp
dec
clc
aad
ss
xchg
or
out
jge
or
mov
push
sbb
xor
sub
jns
add
add
repz
stc
pop
mov
add
xor
fsubrp
cmpsl
add
clc
stc
popf
loope
inc
shll
iret
popf
or
imul
push
mov
sub
mulb
je
push
shlb
mov
xchg
out
add
daa
add
mov
jnp
sbb
mov
in
inc
add
imulb
jmp
cmp
push
lea
aad
ja
movsb
mov
and
leave
jne
aas
adc
gs
je
jecxz
div
std
repz
andb
mov
pusha
xchg
pushf
xorb
cltd
or
test
sub
and
mov
shl
pop
sub
mov
lock
push
bound
pop
mov
stc
mov
incb
xor
data16
insb
push
mov
push
sarb
mov
test
clc
push
dec
pop
daa
sbb
adc
sbb
jo
jecxz
mov
std
sbb
or
and
jbe
mov
xor
sub
xchg
icebp
sbb
and
scas
stos
loopne
roll
inc
and
ss
jg
cmp
mov
mov
lds
sub
int
sbb
imul
loop
lcall
sub
pop
cmpsb
roll
sti
loope
add
int3
clc
ror
cltd
sbb
mov
dec
and
pop
adc
sub
sbb
jnp
mov
push
jns
loope
les
add
je
ffreep
shrb
xorb
out
hlt
xor
mov
int3
sub
adc
xchg
and
lcall
or
push
jle
aad
pop
mov
inc
call
cmc
jg
hlt
clc
adc
pop
sbb
ret
test
push
adc
jg
adc
sub
pop
add
lds
push
push
lods
mov
jl
dec
negl
jnp
xchg
mov
jb
jg
cld
lret
stos
xchg
pop
imul
inc
sub
xor
jne
xchg
lea
jmp
jne
