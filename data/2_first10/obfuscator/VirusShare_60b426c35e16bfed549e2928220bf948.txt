pop
pop
cltd
adc
add
and
jo
push
jnp
test
sbb
pop
jae
sub
fstpt
fstl
add
mov
ja
jbe
jl
cmp
cltd
push
jmp
adc
js
lahf
leave
test
in
out
clc
enter
and
cmp
inc
mov
dec
sbb
lods
pop
or
ja
ss
cwtl
pop
leave
in
lock
movsb
xchg
or
pop
xchg
xchg
xchg
mov
or
push
ja
je
xor
jl
and
movsb
adc
mov
or
insl
or
mov
hlt
lods
or
fcmovu
stos
data16
add
mov
mov
stos
inc
popf
cmc
fistps
scas
inc
dec
push
mov
in
dec
push
jp
movsl
add
inc
fcoms
jp
leave
je
jg
fimuls
pop
mov
lcall
ret
sub
pop
icebp
ja
xchg
xchg
nop
mov
pop
mov
mov
mul
jb
cli
mov
jp
stos
dec
cmp
jnp
stos
bnd
fldt
lods
push
jp,pt
ja
adc
jmp
mov
add
xor
call
mov
cmp
je
imul
je
rorl
gs
ret
movl
pushl
mov
pushl
mov
lea
jmp
xchg
lcall
scas
iret
cmpsl
xor
mull
and
es
daa
imul
add
sbb
vmwrite
jno
sub
jge
push
add
js
cld
push
push
aad
repz
addr16
in
stc
dec
inc
push
pop
or
inc
shr
cmpsl
mov
out
hlt
sub
dec
jbe
outsb
aas
push
mov
rcrb
jge
jl
mov
or
xchg
cmp
jmp
movl
sub
mov
rep
movsbl
call
pusha
imul
enter
or
or
sbb
and
or
cld
fnstcw
outsb
mov
jmp
out
in
xor
rcr
mov
add
mov
dec
insl
ljmp
lods
mov
mov
ljmp
mov
mov
arpl
pop
loope,pt
dec
roll
jae
xlat
lea
jae
call
jbe
and
xchg
xor
sub
jae
ljmp
mov
pop
dec
mov
dec
lods
mov
push
hlt
adcb
mov
jmp
pop
les
icebp
dec
and
xchg
cmp
cld
jnp
insl
push
mov
lret
push
jno
pop
arpl
push
jno
fwait
cmp
jmp
jecxz
mov
push
movsb
icebp
sbb
clc
and
or
mov
lods
test
js
sbb
and
insl
dec
insb
lcall
outsb
inc
inc
sub
rorb
adc
sbb
add
aad
mov
push
jg
sti
jnp
cmp
lret
lahf
mov
mov
mov
sbb
lret
cmpb
ljmpw
lret
popf
push
mov
in
push
sub
test
cltd
test
inc
lcall
push
jbe
add
xor
add
adc
out
repz
mov
or
movsb
mul
xor
cmpsb
xor
cltd
fs
shrl
mov
into
call
fnstsw
shll
xor
xlat
lret
dec
roll
enter
shld
mov
cmp
clc
cmc
cmpb
pusha
jmp
pushf
lea
call
call
popl
jl
adc
pop
les
push
pushf
dec
pop
pop
dec
rol
pop
sbbb
leave
xchg
cmpsl
push
dec
insl
cmp
or
lret
lods
push
pop
pop
popa
xor
xor
daa
inc
dec
dec
int
call
xchg
out
cmpsb
pop
sbb
mov
push
or
stos
adc
test
je
mov
cmp
xor
sbb
pop
test
add
shrb
std
xchg
xchg
imul
ret
jae
lret
lds
pushf
mov
pop
xor
xor
aam
mov
jge
jmp
inc
lods
and
aam
pop
into
add
out
sub
test
adc
jecxz
push
xchg
xchg
push
push
test
out
js
iret
pop
or
adc
jmp
sbb
dec
pushf
push
dec
stc
bt
pushl
bt
not
call
rcr
into
sahf
cmpl
gs
mov
mull
data16
adc
mov
rolb
out
fistpl
push
dec
repnz
and
add
imul
imul
inc
mov
jl
push
loope
roll
mov
out
neg
xchg
scas
xor
xchg
dec
scas
xchg
and
test
and
mov
lret
xchg
dec
push
dec
lahf
in
xchg
lcall
sub
jae
ja
push
inc
cwtl
mov
pop
rorl
xchg
insl
add
les
and
in
mov
in
mov
mov
jp
push
adc
subl
in
adc
inc
mov
sbb
push
arpl
outsl
mov
sub
iret
mov
ja
scas
sub
mov
adc
pop
fcmovb
push
stos
loop
sarl
or
rolb
pop
sbb
lea
lea
cmp
pop
adc
outsb
inc
in
cmpsl
lret
call
and
mov
ror
nop
jae
int3
sub
cmc
xlat
dec
roll
mov
push
inc
push
xor
xor
fs
insb
add
stos
mov
je
mov
jnp
lock
pop
lods
out
mov
mov
push
lods
fistpl
and
lods
mov
push
rcrl
shlb
ds
sbb
mov
mov
xchg
leave
dec
and
nop
jmp
out
out
rol
cmpsb
std
repnz
jno
mov
add
cld
mov
nop
into
ljmp
jle
push
mov
ret
dec
and
popa
pop
add
pusha
pop
in
jmp
testb
andl
pop
push
adc
sahf
xor
jecxz
sbb
gs
andb
dec
roll
aad
aaa
out
shlw
and
add
into
xchg
inc
cmp
ficomps
push
dec
int
daa
sahf
das
in
pop
fldt
outsb
jbe
cld
daa
stc
scas
cmc
clc
fxam
loopne
popa
aam
sbb
pushw
pop
xchg
pop
cwtl
inc
and
sbb
mov
pop
push
dec
nop
daa
sahf
das
cmpsl
imul
scas
cli
cmpsl
mov
nop
or
add
jp
add
je
or
adc
add
add
mov
sub
add
jmp
push
pusha
call
popf
rdtsc
nop
jmp
pushf
pushl
pushf
mov
push
pusha
pushf
pushf
lea
jmp
mov
movsbl
jmp
mov
imulb
scas
cmp
mov
or
dec
jne
jns
or
add
test
into
icebp
mov
cmpsl
dec
inc
sub
stos
pusha
inc
sbb
in
aaa
inc
mov
cmp
inc
test
lock
jns
out
mov
shrb
dec
xor
popa
fsubr
shlb
cmp
mov
movsl
and
mov
sub
test
jno
insl
pop
roll
push
mov
dec
jle
add
pushw
or
aam
sub
jo
imul
adc
pop
mov
das
iret
adc
sbb
int3
dec
fdivl
lcall
or
fisttpl
mov
lock
mulb
xchg
scas
icebp
dec
out
sub
lods
les
int3
add
shl
cmp
leave
das
adc
jg
sbb
push
mov
cwtl
lds
add
fdivs
outsb
imul
imul
popa
insl
bound
inc
inc
push
aas
and
push
jb
imul
fs
inc
inc
jae
fs
inc
dec
inc
inc
pop
pop
pop
add
stc
rol
jmp
add
dec
outsl
arpl
inc
jb
gs
flds
int
and
add
into
pop
push
sbb
faddl
outsb
lock
into
xlat
xor
or
dec
adc
push
pop
dec
test
gs
jmp
dec
flds
mov
clc
push
call
push
xor
or
jb
sub
ret
adc
enter
or
or
aad
and
pop
pop
xor
pushf
mov
out
cwtl
mov
sahf
push
sub
jb
push
ds
mov
cmpsb
mov
stc
loopew
adc
lret
stos
or
subb
in
icebp
cltd
mov
add
pop
rol
inc
pop
loope
mov
inc
pop
dec
roll
cmp
andb
push
pop
ds
std
out
sub
jl
cli
outsl
into
and
shrb
dec
and
pop
shl
add
cmp
dec
xor
add
ss
ja
in
mov
xor
aam
xchg
xor
lods
cli
inc
daa
std
xor
decl
mov
jne
into
sub
push
pop
lds
shl
push
clc
in
mov
push
push
or
mov
in
and
inc
mov
push
add
cmp
or
mov
into
scas
or
dec
push
dec
sar
cld
fidivl
shll
sbb
xor
xor
xchg
mov
jb
pop
ret
das
ja
sbb
mov
cmp
xor
mov
aaa
leave
adc
xchg
ljmp
lods
fnsave
xchg
int
mov
xchg
xor
dec
out
dec
dec
sar
inc
and
jmp
stos
aaa
inc
pusha
pop
push
push
insl
in
movsl
mov
lods
cmp
fcmovnbe
data16
icebp
loop
cmp
sub
cs
xchg
out
jno
pop
sub
stc
or
imul
add
pop
fs
je
sahf
out
or
xchg
out
nop
adc
iret
shl
mov
js
sbb
cmp
fidivl
data16
in
mov
lcall
xchg
out
rorb
daa
jnp
pop
jbe
jecxz
out
adc
test
mov
popf
into
popf
ret
mov
mov
decb
jmp
shll
pushf
pop
pop
add
sbb
sbb
rcl
call
pop
sbb
push
mov
inc
loope
call
mov
aad
aas
dec
jne
pop
jg
mov
mov
fldl
popa
sub
jmp
mov
xor
lock
mov
lcall
mov
add
pop
cltd
mov
mov
lahf
pop
andb
adc
xchg
nop
fimuls
mov
add
pushf
fiaddl
cmp
lea
daa
jb
stc
scas
jne
je
mov
jg
sbb
mov
mov
insl
inc
sub
das
adc
push
arpl
iret
fistpl
cli
nop
test
test
movsl
push
dec
leave
icebp
in
nop
cmpb
sar
push
cmp
aad
leave
ds
hlt
mov
int
xchg
adc
es
and
xchg
in
aad
and
xchg
inc
pop
mov
xor
or
into
call
jb
xor
sar
daa
add
or
inc
and
pop
call
push
pop
dec
pop
inc
jl
mov
dec
push
sbb
popf
push
xchg
sbb
and
in
test
pushf
roll
dec
popa
stos
lea
mov
sub
mov
adc
out
cvttps2pi
add
jo
jo
push
or
enter
add
inc
loope
insb
incl
cmpsb
mov
inc
push
je
dec
push
mov
dec
scas
or
or
mov
inc
fwait
sarl
call
mov
mov
jg
sar
adc
data16
lds
cmp
loop
out
mov
mov
jl
stos
dec
cmp
pop
jo
add
add
ds
or
add
daa
daa
cmpsl
in
jae
sub
add
mov
or
ret
fiadds
push
fldenv
mov
inc
mov
out
or
movb
mov
xchg
dec
xor
dec
stc
ds
jns
ret
mov
mov
test
xor
xor
jo
hlt
ja
jmp
sbb
nop
xor
pop
fsubp
jnp
and
inc
push
call
repnz
jge
pop
stos
inc
ret
jmp
pop
dec
in
rcrl
out
rcll
outsb
adc
lcall
xchg
sub
shlb
xchg
pand
outsb
cmp
sbb
push
out
jle
cli
fstpt
push
outsl
repz
jp
xchg
inc
pop
pop
pop
imul
roll
in
mov
nop
pusha
push
pop
or
jmp
push
enter
mov
dec
adc
cmc
imul
sti
dec
and
and
jb
clc
bt
cmpb
jmp
ds
xchg
inc
aam
fstl
aas
xchg
push
inc
xchg
xchg
or
rorb
xchg
jecxz
pop
mov
inc
fsubrp
mov
and
push
jge
sub
cmpb
lods
mov
lahf
mov
push
nop
mov
mov
imul
adc
add
xchg
in
movsl
rol
call
or
jbe
xchg
or
xor
sub
js
mov
incb
paddusw
aaa
loop
out
icebp
test
shlb
scas
aaa
push
testb
pushf
jp
mov
movsbw
pop
mov
pusha
pushf
pushf
pushf
pushl
ret
and
mov
scas
cmp
movsb
mov
daa
jb
dec
out
xrelease
insb
adc
daa
aad
jmp
stos
inc
mov
inc
adc
mov
dec
pop
pop
movsl
or
and
out
dec
mov
mov
setns
push
mov
gs
pop
neg
jae
dec
xor
scas
jmp
shlb
cmc
sbbl
lret
inc
daa
hlt
mov
mov
sti
lahf
inc
sahf
shrb
xor
ljmp
jns
les
pop
leave
sbb
sub
jb
xlat
xchg
push
mov
jo
dec
leave
dec
sar
lret
movsl
int
xor
rep
pop
lea
clc
adc
mov
push
faddl
jg
jg
push
jne
stos
lods
mov
adc
dec
test
dec
xor
icebp
clc
cmpsb
cmpsb
mov
stos
inc
lock
jno
hlt
repnz
lret
push
lret
mov
add
gs
adc
lods
mov
int
mov
shll
stc
test
lea
call
jmp
mov
movl
pushf
pushl
push
lea
jmp
or
dec
sbb
pop
sbb
sub
mov
insl
jle
aaa
outsl
xchg
or
dec
and
outsb
xchg
sar
iret
gs
add
outsb
mov
xchg
mov
mov
aad
shll
rcrb
add
lret
incl
test
rclb
and
mov
xor
iret
sti
rcr
inc
add
repnz
scas
push
mov
mov
aaa
loope
jns
xor
adc
add
sbb
mov
mov
dec
xchg
lea
inc
lcall
xchg
inc
ret
mov
lods
cltd
inc
pop
push
cmpsl
adc
xchg
sub
nop
mov
push
nop
jbe
xor
sar
imul
inc
and
incl
and
lret
lds
push
pusha
pushf
movl
pushf
lea
jmp
pushf
mov
pusha
push
pushl
push
pushl
ret
pushl
popl
pusha
push
pushl
pushf
pushl
ret
mov
jae
cs
jge
cmp
in
mov
jmp
add
pop
out
jne
test
push
sub
and
and
pop
ds
mov
pop
test
mov
stos
pop
das
in
mov
jmp
popf
leave
out
xor
inc
jnp
cmp
mov
pop
or
jns
jp
gs
sti
pushf
jp
pop
cli
fadd
cwtl
add
mov
shl
mov
call
dec
or
pushf
push
mov
dec
pop
mov
insb
adc
xchg
xchg
cld
xchg
mov
mov
lcall
dec
or
pop
dec
in
test
xchg
xor
imul
adc
aaa
out
addr16
lods
divb
and
jb
mov
leave
push
shl
jle
fdivr
enter
pusha
sub
pushf
push
stc
push
rol
stc
stc
clc
not
jmp
push
mov
pushf
lea
jmp
mov
movzbw
pushf
jmp
jg
in
ljmp
js
stc
sub
shrb
xor
int3
enter
lret
mov
xchg
das
dec
iret
insb
pop
inc
sbb
fidivrs
mov
xchg
test
or
loope
sub
adc
pop
icebp
adc
xchg
rcl
lahf
jns
cmpl
jecxz
ffreep
xor
or
add
push
imul
push
jecxz
xor
inc
arpl
xor
xchg
pop
nop
mov
add
lods
leave
mov
ss
outsb
int
dec
call
rclb
or
mov
rcrb
cmp
mov
je
mov
xor
mov
jne
hlt
test
mulb
cltd
stc
sub
pusha
push
push
lea
call
push
jmp
mov
lea
jae
pusha
mov
not
mov
inc
pushf
pushf
call
seto
inc
call
push
lea
jne
movsbw
xor
cmc
cmc
mov
mov
cmc
add
sets
xor
rol
pushf
mov
pusha
movb
pushf
test
jmp
jmp
xchg
lods
pusha
pushf
dec
rcl
bt
stc
pusha
neg
mov
sub
call
imul
sub
jge
stc
clc
cmc
add
pusha
lea
jmp
push
movb
lea
ja
call
es
add
dec
jb
ljmp
mov
imull
scas
mov
cmpsl
leave
mov
pop
scas
shl
mov
or
mov
addr16
sbb
and
je
ljmp
jne
stos
ss
pop
or
mov
ret
and
sub
cli
lods
mov
jo
mov
or
dec
shl
pop
cmp
nop
test
int3
xchg
cmp
inc
sub
es
jmp
push
lods
cmp
sub
cmp
jae
inc
mov
inc
adc
inc
cwtl
in
jge
fldcw
testb
or
pop
pop
mov
pop
nop
js
mov
insl
push
dec
inc
sahf
repnz
lock
aam
sub
or
push
mov
or
das
dec
push
dec
dec
shl
or
cmp
inc
and
add
add
lahf
lea
jmp
movb
push
movl
movb
mov
pusha
pushf
lea
jmp
roll
cwtl
iret
fwait
bndldx
xchg
sub
mov
mov
mov
jmp
xchg
into
scas
lea
sti
and
sahf
adc
cmp
fadd
mov
test
mov
jo
dec
shl
gs
push
leave
push
insl
shll
adc
dec
ret
adc
fisttps
jnp
sahf
adc
cmp
mov
push
sbbb
sub
cmp
inc
adc
add
popa
cmp
jge
sub
sahf
adc
cmp
stos
mov
jmp
and
ret
movsl
dec
shl
out
lds
sarl
fs
call
pushf
lea
jmp
pushf
mov
pushl
pushf
lea
jmp
lea
je
pushf
pushf
push
pushf
cmp
pushf
call
mov
clc
clc
test
add
cmp
test
lea
js
pushf
lea
jne
pusha
mov
call
mov
aad
sub
cmc
push
dec
push
cmp
lea
and
cwtl
push
bt
push
shr
rcl
movzbw
mov
pushf
test
call
mov
jae
jns
xchg
push
or
mov
mov
mov
adc
loopne
cmpl
mov
ljmp
adc
cmpsb
adc
or
or
out
sahf
lods
int3
mov
std
mov
mov
xchg
popa
pop
aad
push
sti
jg
lcall
push
mov
adc
pop
int
mov
jecxz
pop
xor
inc
inc
dec
and
pusha
int
aaa
mov
fs
push
inc
dec
daa
pop
inc
jae
rorl
push
out
mov
pop
adc
pop
gs
loope
or
cwtl
mov
pop
ss
adc
cmp
dec
and
adc
addr16
dec
icebp
into
aad
cmp
xchg
sti
iret
outsb
xchg
pop
or
mov
fs
cli
ss
jmp
imul
enter
shl
outsb
dec
enter
add
test
add
pushf
stos
movb
pusha
mov
lea
jmp
xchg
sahf
inc
cltd
inc
cltd
cmp
in
mov
jo
jns
repnz
test
stos
push
incl
push
xchg
mov
mov
scas
xchg
cmp
fildll
push
arpl
pop
xor
aad
mov
jae
mov
dec
ja
scas
int3
push
cld
repz
cli
jbe
aaa
sub
mov
xor
aam
mov
ror
in
mov
imul
test
icebp
ljmp
xor
cmp
lcall
add
xchg
out
es
mov
mov
adc
or
mov
repnz
cmp
xchg
mov
sti
iret
sub
aad
pop
stos
mov
insb
xchg
ret
or
push
jo
iret
mov
or
repz
cmp
loopne
out
sub
push
cs
mov
mov
and
mov
insb
lret
fadd
sbb
pop
inc
loopne
arpl
inc
dec
shl
push
and
shl
bt
mov
sub
cmc
test
test
push
dec
shr
stc
mov
cmp
clc
sub
jmp
lea
call
pushf
jmp
cmc
rcr
mov
movsbw
movsbw
add
add
add
shl
sar
sbb
call
sub
pusha
push
stc
repnz
jmp
lea
jae
call
call
add
xchg
add
add
add
add
add
add
add
fmull
add
loopne
add
add
add
add
out
add
ja
jge
repz
sbb
gs
xchg
mov
sbb
imul
cmp
jle
out
dec
or
fimull
ljmp
inc
lcall
addr16
lea
jno
enter
flds
fnstcw
in
jnp
orl
jno
popf
fistpll
iret
ret
test
or
stos
incb
cwtl
jle
pop
adc
int
loope
jnp
scas
lods
out
jns
adc
xor
ss
xchg
fmull
mov
pop
mov
push
hlt
sub
and
scas
mov
out
insl
jmp
xchg
jmp
or
or
sti
mov
jecxz
ret
pop
movl
test
adc
sahf
int
or
mov
clc
jno
dec
mov
cmp
cmp
mov
pop
aad
icebp
cmp
mov
adc
insl
lds
jp
mov
popf
xor
clc
test
jecxz
push
adc
jns
insb
sub
orb
mov
push
stos
jl
xchg
loope
testl
xor
sbb
jno
pop
adc
insl
xor
in
test
dec
pop
mov
dec
mov
sub
adc
stos
ja
or
xor
imul
inc
jle
inc
in
movsb
inc
imul
sarb
cmpl
jg
pushf
inc
mov
sbb
jl
mov
mov
adc
je
popa
inc
int
and
imul
sub
cmp
pop
mov
push
scas
out
xorb
call
mov
push
loop
inc
inc
add
int3
aad
mov
cmp
dec
pop
andl
pop
pusha
stos
add
push
mov
lds
mov
xchg
mov
arpl
or
sub
ror
xchg
repz
lcall
imul
iret
std
sti
jge
mov
aas
xchg
repz
outsb
cmp
pop
dec
push
pop
mov
mov
mov
ss
bound
cmp
fdivs
std
rorl
sbb
mov
mov
nop
sbb
movl
mov
mov
push
inc
out
pop
inc
xchg
es
loope
xchg
jb
fsts
lods
push
mov
mov
pop
xor
enter
cmp
cs
pop
or
pop
and
mov
xor
jno
cltd
inc
imul
jle
mov
jns
fwait
clc
popa
lods
pusha
inc
rclb
adc
ljmp
aas
xor
mov
out
lcall
mov
test
popf
cwtl
insl
adc
cmpsb
mov
iret
pop
stc
mov
fldenv
and
and
test
push
mov
out
addr16
outsb
outsl
mov
insl
nop
jo
int3
fs
push
dec
ss
push
adc
std
inc
sbb
bound
push
jmp
push
dec
out
mov
inc
pop
xor
inc
mov
push
incb
in
or
filds
xor
jge
cld
xor
stos
pop
pop
orb
cmp
add
jmp
popl
repz
mov
pop
addr16
test
jge
fmulp
jnp
sub
test
in
addr16
stos
icebp
dec
cmp
or
nop
lods
jp
test
jbe
into
aas
jns
enter
jns
movsb
lock
cmpsb
and
dec
pop
push
lahf
nop
outsl
push
inc
jo
or
mov
push
addr16
xchg
dec
fs
outsl
fsts
xor
push
and
insb
pop
stos
test
insb
js
sbb
loop
sahf
mov
xchg
or
xor
mov
outsl
mov
and
cmc
jo
sbb
mov
out
sbb
rcrb
and
movsl
jmp
cmp
lods
lock
push
cld
and
mov
mov
outsl
mov
mov
mov
xor
xchg
dec
test
mov
push
lds
mov
stos
and
add
lcall
push
jns
dec
jg
pop
push
mov
jl
repz
push
and
aas
daa
stos
or
pop
or
and
je
cli
lds
ss
into
stc
imul
xlat
cmp
repz
xchg
imul
sub
es
push
ss
test
negl
stos
sarb
ljmp
clc
mov
hlt
repz
push
test
leave
push
iret
pop
and
cld
ljmp
jmp
sarb
testb
mov
inc
aam
or
push
loopne
rcll
push
stc
mov
insl
and
lea
jnp
push
jecxz
add
pop
mov
cmp
inc
jns
sub
inc
addr16
xchg
jno
lcall
negl
cmp
mov
in
sub
inc
loop
pop
sbb
xor
loope
inc
cs
sar
ja
lcall
aas
jns
mov
insl
test
or
jnp
fdivrs
xchg
test
mov
outsb
xchg
cmp
shr
enter
push
lea
mov
mov
out
lea
call
add
dec
or
xor
cwtl
mov
int
movsl
add
or
add
jp
das
pop
fcoml
add
or
nop
push
rolb
inc
push
xor
mov
gs
pop
adc
loop
enter
nop
in
adc
subl
fisubl
sub
sahf
push
sub
out
out
jg
fdivrp
push
mov
insb
pusha
and
mov
and
xchg
lock
arpl
jb
out
les
movsb
lahf
xchg
and
inc
inc
test
jno
push
add
jno
dec
clc
int3
fld
fld
outsl
mov
add
popf
and
jno
movsb
ret
push
shl
push
add
stos
imulb
xchg
pop
cmc
movaps
mov
cmpsb
gs
lock
outsl
mov
cmp
add
sbb
and
bound
sbb
jo
aas
cli
es
pop
mov
ljmp
inc
addb
mov
scas
les
test
xchg
sbb
push
sarb
cld
and
jb
cld
imul
sbb
xor
lock
and
pushf
mov
pop
jmp
mov
jle
xor
lret
sbb
inc
lds
sub
sbb
ss
add
pop
lods
std
mov
aas
jle
mov
mov
dec
push
lods
enter
inc
pop
jecxz
push
sbb
xchg
lea
mov
insb
test
mov
les
sbb
cmp
pop
adc
inc
lock
or
gs
dec
dec
lahf
mov
push
mov
leave
jns
mov
pop
mov
fs
addr16
insl
arpl
insl
testl
inc
decb
mov
dec
lods
or
add
jge
ret
insl
lahf
cmp
adc
lahf
dec
ds
mov
mov
in
xor
pop
mov
inc
insl
fidivl
mov
adcb
mov
jecxz
jp
inc
add
repnz
insl
gs
test
xchg
inc
lcall
cmp
adc
add
xchg
dec
bswap
mov
aam
jmp
loop
pop
mov
pop
int3
dec
xchg
les
push
testb
imul
fisttpl
test
pop
mov
or
ret
cs
push
in
mov
int3
add
cmp
lock
push
pop
jbe
fwait
cmpl
jg
aaa
test
and
mov
pop
push
inc
sub
pop
dec
aam
insl
pushf
inc
mov
incb
jns
mov
mov
or
inc
insb
push
dec
pop
lods
std
push
std
xchg
arpl
rcrb
dec
das
xchg
push
imul
push
sahf
sbb
inc
in
xchg
xchg
leave
shll
bound
mov
add
dec
jo
push
xchg
push
xchg
mov
jl
add
add
lds
int3
mov
pusha
fnstcw
and
inc
int
stc
dec
mov
lcall
pop
sbb
sub
repz
daa
or
scas
mov
mov
sti
mov
sub
je
xchg
sti
js
fwait
mov
fidivs
iret
shll
cmp
jecxz
xchg
cmp
jle
sub
jns
std
hlt
sub
popf
repnz
lea
mov
out
incl
and
not
adc
out
and
dec
cmp
outsl
xlat
push
test
cli
loope
mov
scas
call
rsqrtps
pop
jle
dec
push
sbb
ret
xchg
jecxz
pop
imul
mov
inc
add
mov
not
sbb
jbe
bound
std
addb
jbe
fadds
mov
jle
inc
cmp
scas
pop
sub
fs
sbb
xchg
int3
stos
das
inc
jnp
xor
test
pop
data16
cs
rorl
lret
add
mov
daa
pusha
cli
ja
xlat
sub
push
pushf
sbb
test
cltd
arpl
icebp
add
dec
sub
stc
pop
dec
lods
outsb
sub
jecxz
ja
push
outsl
cwtl
and
jo
fwait
sarb
repz
rcl
mov
gs
jno
lea
mov
outsw
inc
or
jecxz
adc
dec
inc
in
mov
movsl
push
test
rcl
xor
popa
sti
mov
or
cmp
cmpsb
neg
add
xor
jb
xchg
addr16
stc
out
pop
xchg
pop
je
cmp
fwait
adc
dec
xchg
ror
scas
je
fistpl
sub
lret
dec
and
dec
dec
std
sbb
ds
stos
mov
sti
jecxz
fdivs
add
dec
jo
sbb
insl
fmull
int
out
imul
mov
ficompl
xor
cmp
das
stc
pop
je
mov
test
lahf
daa
push
popa
xor
adc
into
mov
sbbl
sub
leave
sbb
aam
jnp
adc
cmpsl
cmp
pop
inc
push
push
inc
imul
lret
pop
push
pushf
inc
pop
fimuls
xchg
cmp
xor
out
aas
cmp
jne
jl
sbb
dec
mov
jne
push
push
test
pop
aaa
or
addr16
daa
mov
mov
cmp
stos
enter
aam
insb
mov
and
sbb
mov
es
je
movsl
dec
in
les
inc
ds
std
movsb
jmp
divb
testl
and
mov
lea
xchg
or
repz
pop
cli
scas
mov
lods
mov
jns
ljmp
xchg
daa
dec
adc
loopne
mov
inc
and
nop
and
fimuls
jne
ss
mov
ret
fiadds
test
add
add
jmp
pushf
movb
movb
pushf
adc
pushf
call
dec
inc
adc
jecxz
in
daa
inc
rcl
adc
add
fisubl
stos
or
outsb
jnp
into
test
imul
xchg
cld
fiadds
dec
or
cmp
cs
cld
inc
bound
cmp
cwtl
faddl
call
aaa
or
enter
jle
mov
pushl
std
and
pop
mov
mov
mov
xchg
xchg
jp
out
data16
outsb
movsb
cmp
xchg
cmp
cld
out
dec
shl
das
or
lock
jmp
lea
jae
not
adc
neg
mov
rcr
mov
sub
mov
cmc
cmc
push
jmp
lods
mov
les
lahf
mov
test
int3
pop
add
fs
inc
cltd
shl
out
imul
xchg
mov
and
cwtl
add
pop
popf
enter
inc
sub
into
push
sbb
lods
aam
xchg
fistps
and
cmp
pusha
adc
mov
and
shrb
scas
fildl
mov
xor
push
cmpsb
adc
mov
mov
push
int3
xor
mov
notb
stos
mov
loop
inc
cs
push
call
push
push
mov
push
mov
xor
add
pop
jbe
add
jecxz
enter
push
lea
inc
jno
mov
leave
frstor
dec
iret
testb
adc
sti
jg
pop
cmpsl
push
outsl
call
movsb
scas
mov
sbb
mov
es
testl
add
and
add
xor
ljmp
mov
inc
fnstcw
addr16
and
shl
in
lret
inc
setbe
push
pushf
seto
mov
call
mov
movsbw
cmp
shl
movsbw
add
pushf
movzbw
movl
sub
cmc
mov
add
cmc
call
or
cwtl
int
adc
inc
xchg
adc
push
inc
aam
fadds
sub
jbe
pop
or
or
push
cmp
push
lods
mov
mov
mov
mov
ret
mov
push
in
dec
add
loopne
push
fistl
imul
mov
mov
pop
das
pop
mov
pop
lcall
sbb
lods
aam
adc
dec
call
lock
cmp
fmull
mov
call
imull
shl
pushf
jle
inc
inc
and
rol
call
testl
add
sub
xor
mov
push
inc
cli
mov
jnp
add
loopne
fsubs
push
and
inc
int3
push
imul
les
xlat
mov
lret
push
or
psrld
dec
dec
shl
dec
sub
bt
pushf
clc
xor
clc
pushw
popfw
pushf
movb
movb
inc
call
pushf
pushf
xchg
jmp
adcl
push
adc
mov
jnp
je
sti
lods
aaa
and
mov
adcb
lret
lea
outsl
ficoml
pushf
sbb
cwtl
cmpsl
xchg
stc
push
dec
ja
das
dec
js
jo
mov
fwait
mov
sub
xchg
adc
xor
adc
xchg
push
inc
dec
in
dec
jmp
cli
cvttps2pi
lret
xchg
dec
ja
fsubs
das
daa
hlt
jnp
jo
movsl
pop
popa
and
add
paddusb
cli
cmpsb
popf
leave
ret
lret
jb
js
pop
loop
incb
stos
fcomi
mov
adc
mov
push
ret
jge
aam
rorl
xchg
outsb
repnz
sti
cs
insb
mov
dec
imul
dec
data16
sub
cmp
jnp
jnp
xchg
inc
mov
dec
rcr
mov
in
pop
mov
outsl
mov
aaa
daa
je
xor
jecxz
addr16
and
dec
rcl
shll
mov
adc
pop
jp
mov
mov
jle
fstps
sbb
mov
push
repz
mov
dec
lock
pushf
push
movsl
faddl
mov
fwait
mov
dec
or
dec
adc
addr16
test
imul
jle
test
shll
adc
dec
xchg
dec
rcr
ret
popf
cmc
call
clts
xchg
xchg
adcl
lods
dec
sub
pop
sti
inc
mov
gs
pop
mov
mov
das
das
dec
pop
mov
popa
push
and
insb
jno
xor
rep
lock
cmpb
movsb
mov
sbb
xor
or
add
mov
mov
hlt
sub
mov
jecxz
jl
pop
mov
pop
lea
pop
jp
mov
fimull
fidivrs
inc
push
dec
jg
fsubrl
lahf
pop
xchg
dec
sahf
psubusb
jo
or
or
enter
or
mov
pop
roll
mov
popa
and
sub
or
cwtl
push
dec
outsb
adc
aam
push
xchg
xor
cld
add
sahf
add
sub
xchg
dec
xchg
lret
xchg
mov
mov
mov
fldl
loop
scas
shll
outsb
jnp
jns
hlt
cs
mov
adc
cmp
cmp
push
sub
xchg
jle
push
or
mov
cmp
std
sub
neg
lahf
mov
cmp
cmc
pushf
mov
shl
push
lea
je
pushf
movb
pushl
mov
call
not
pushf
bt
bt
mov
ror
mov
dec
jmp
inc
push
rcl
mov
jae
and
call
ss
and
mov
ds
clc
jge
daa
mov
jg
pop
shll
or
iret
gs
mov
sahf
test
jecxz
rorl
es
lret
ljmp
dec
icebp
pop
aas
pop
inc
outsl
out
pop
dec
push
push
mov
xor
cmp
flds
pop
jnp
repz
pop
repnz
pop
adc
push
mov
or
test
add
push
xlat
dec
xchg
loop
fsub
movsl
pop
jmp
daa
sbb
mov
mul
mov
cmpsl
rcl
mov
xchg
pusha
and
sti
cmp
je
cld
les
movsl
outsl
ja
inc
pop
pop
sbb
adcb
sbb
hlt
shr
and
ss
or
test
mov
aam
and
lods
mov
mov
insl
bnd
and
cmp
into
out
addl
subl
inc
xor
jmp
mov
and
and
aam
xlat
adc
xchg
scas
cmp
lret
gs
lahf
xchg
imull
jbe
xchg
mov
xchg
cmp
sbb
in
rcl
lret
sub
inc
pop
xor
adc
and
pushf
add
aam
mov
sbb
cli
popa
add
out
out
xor
fwait
push
hlt
fcmove
pop
pshufw
lds
add
faddl
jmp
cmp
mov
lahf
xor
inc
xor
xchg
or
sub
rorl
dec
rcr
bound
movl
pusha
mov
pushf
lea
jmp
sbb
lds
adc
lcall
dec
sbb
push
ss
mov
sbb
xor
adc
imul
daa
arpl
xlat
cmp
sbb
ss
xchg
jmp
data16
push
imul
mov
out
ljmp
xor
lret
sbb
in
cmp
sbb
out
xor
fisubrs
outsb
xchg
fbld
testl
sbb
sahf
add
sbbl
ficoml
test
xor
movb
push
pushl
ret
dec
inc
pop
inc
ficoml
jmp
cmp
nop
add
adc
shrl
jbe
jmp
xchg
fldt
das
fisttpll
in
out
sub
call
mov
push
pop
int3
cmc
jno
je
out
inc
sbb
sbbb
lret
adc
push
or
or
fisttpl
out
shl
mov
cmc
pusha
clc
cmp
pushl
lea
jb
clc
cmp
cmp
call
pusha
movl
pushl
call
arpl
imul
imul
xchg
add
inc
sbb
test
subl
mov
fisttpll
shlb
dec
gs
adc
test
or
adc
scas
hlt
pop
xchg
loop
test
mov
mov
ret
pop
inc
in
xor
in
cmp
mov
fcomps
bound
push
add
xor
imul
fs
add
imul
aaa
adc
push
mov
lock
pop
in
and
loop
jecxz
and
ds
aam
jae
sub
and
jbe
sbb
popa
ret
xchg
ja
lea
jnp
movsb
sti
cmp
shrb
loop
in
sti
mov
and
ret
dec
sbb
test
outsb
fcmovne
popf
sbbl
fnstenv
ja
cmpsl
and
insl
pop
jg
dec
push
add
and
and
sti
dec
rcr
cltd
ja
cmp
sub
push
pop
adcb
pop
cs
fnstenv
js
mov
jg
cmp
xlat
jo
inc
add
test
jno
or
mull
jmp
adc
cltd
inc
or
mov
mov
sub
sub
in
je
lret
sub
rcr
loop
aam
fs
jl
lea
push
movb
call
pusha
movb
pushf
adc
pushf
mov
pushl
movb
pushl
ret
push
call
pusha
xchg
call
pushf
jmp
leave
stc
pop
pop
bt
ror
pushl
mov
dec
jmp
ror
rorb
xlat
hlt
pushf
or
seta
push
enter
dec
push
cmp
xor
filds
ss
pop
in
test
lock
das
jge
out
loop
je
hlt
dec
jg
xchg
mov
and
cmp
jmp
mov
pop
push
inc
clc
push
aam
mov
jge
lcall
in
in
jne
mov
ja
mov
leave
stos
mov
dec
rcl
push
cld
pushl
sub
cmc
pusha
cmp
lea
jmp
call
clc
cmp
push
lea
jae
pusha
lea
jmp
cmp
bt
cmp
push
movw
lea
jae
bt
clc
jmp
dec
inc
adc
cwtl
test
mov
or
dec
adc
faddl
popf
dec
sbb
mov
cmp
pop
jle
negb
bnd
push
sahf
sub
int3
xchg
jae
push
sub
inc
sub
orb
inc
push
push
jl
mov
inc
fcoml
iret
mov
fisubrs
mov
xchg
mov
jns
push
add
inc
loop
cli
rcr
cmpsb
cmp
clc
in
jo
pop
ljmp
jl
adc
lea
xor
sub
in
xchg
or
ds
cld
mov
push
lret
outsl
lea
mov
jae
sbb
mov
lcall
int3
xchg
stc
aas
push
mov
rcl
sub
add
incl
mov
test
or
add
lret
push
or
pop
inc
lahf
fdecstp
pop
mov
mov
inc
cltd
lea
fwait
mov
add
negb
jge
jbe
stos
test
sahf
add
jns
lahf
cmp
push
inc
add
xchg
xchg
xor
cli
shl
shrl
jmp
insl
xchg
cmpb
xchg
adc
movl
hlt
adcb
inc
adc
push
pop
jae
lret
outsb
xchg
ds
jg
inc
jg,pn
ja
fdivrs
lea
dec
xchg
or
adc
adc
dec
rcl
dec
daa
jae
mov
jo
lahf
or
pop
clc
adc
aaa
in
cld
scas
cmp
stos
imulb
pop
test
xlat
cltd
adc
pop
lea
cltd
int3
adc
xchg
stos
jbe
xchg
or
add
stos
xchg
stos
adc
loop
int3
jecxz
loop
loope
mov
loope
rcrb
inc
or
sub
or
sahf
fstpl
test
jge
pushf
jg
in
repnz
jge
mov
sbb
fnstsw
fsubs
jnp
xchg
imul
pusha
jl
xchg
sarb
sbbb
fidivrs
aad
sub
and
or
add
loopne
push
fsqrt
sahf
add
inc
adc
push
cltd
ret
pop
add
or
addr16
add
shrl
adc
xor
scas
loopne
jbe
jns
mov
sbb
push
les
addl
in
push
in
fnstcw
mov
pop
lcall
cltd
pusha
cmpb
xchg
cs
sub
mov
jg
aas
sbb
inc
pushf
sbbl
dec
rcl
push
call
add
das
dec
push
enter
test
imul
pop
mov
sbbb
sub
sahf
mul
xchg
sub
sub
je
adc
daa
xor
sbb
mov
daa
mov
lret
mov
stc
xchg
add
rorb
fiadds
xchg
aam
imul
lcall
in
imul
jno
cli
imul
push
push
and
in
and
xchg
movsb
stos
sub
or
or
and
fcmovnu
mov
add
iret
cmp
js
cwtl
lods
stos
stos
mov
outsb
iret
add
test
nop
jmp
aam
push
push
adc
pushf
stc
test
ss
ficoms
rclb
rolb
cmp
mov
popf
push
hlt
jmp
and
inc
cmc
popf
movsl
cmp
adc
gs
loop
dec
lock
lods
inc
sub
jmp
lret
je
push
mov
cmpsl
fwait
je
aad
pop
pusha
je
xchg
outsb
xchg
sbb
in
push
scas
roll
out
pop
add
sbbb
inc
fcmovb
sbb
sarl
push
scas
dec
stc
stc
pushf
not
jmp
mov
pusha
movb
pusha
movl
pushl
ret
daa
cmp
das
shl
pop
andb
mov
xor
jae
xor
enter
sbb
pop
test
shrl
xchg
addb
pop
mov
loope
jmp
repz
dec
rcl
and
inc
js
je
jb
arpl
jae
mov
sub
bound
shl
mov
dec
cwtl
ret
adc
jbe
mov
cmpsl
rcl
jno
mov
fs
pop
ss
pop
inc
push
cmpsl
mov
sbb
js
fimull
pop
ljmp
jg
jle
sbb
pushf
cmpsb
add
addb
outsb
sub
xchg
xor
fiaddl
jle
mov
mov
imul
and
call
dec
das
lock
cmc
push
imul
mov
lea
call
jmp
dec
push
push
inc
push
xor
xor
fs
insb
add
sbb
add
pop
jl
bound
imul
hlt
and
xchg
mov
clc
or
pop
mov
aas
and
pop
jbe
cmpsl
jnp
jp
lret
sub
inc
loope
xchg
and
cltd
aam
lahf
clc
jl
jle
xor
lods
push
jnp
test
popf
cmpl
imul
dec
cmp
mov
cli
test
pop
iret
mov
pop
std
sbb
int3
scas
pop
pop
adc
cmp
out
bound
dec
push
fstps
mov
popf
jae
lahf
add
jp
pextrw
pop
sub
std
popa
adc
adc
xlat
dec
adc
adc
xchg
mov
inc
and
add
scas
mov
mov
in
mov
out
mov
in
push
lret
test
jge
add
jno
cmpsb
add
pushf
pop
xor
test
rcl
leave
push
push
fadds
mov
test
mov
add
xchg
mov
pop
add
stc
mov
push
inc
lcall
inc
pop
add
push
lahf
jl
lds
rorl
loopne
ljmp
stc
stos
jge
mov
mov
jae,pn
bound
or
sub
cmc
dec
outsl
test
jbe
es
push
pop
mov
jmp
mov
inc
mov
loop
push
sbb
inc
test
jns
jno
stos
call
sub
cli
add
pop
add
pop
add
pop
ret
and
rorl
jmp
mov
icebp
repz
in
cmp
mov
enter
cmp
mov
aad
lods
adc
lds
scas
nop
fadds
jle
mov
adc
xchg
xor
mov
jmp
lahf
jne
xchg
sub
popa
iret
nop
or
lods
test
aad
jp
mov
cmp
arpl
ret
daa
pop
stc
jae
popf
jecxz
lea
and
ret
push
lret
nop
int3
sub
rorb
mov
ss
inc
or
inc
rolb
into
nop
mov
and
jae
in
push
sahf
cmc
push
fiaddl
sbb
daa
mov
fdivl
pop
out
repz
jb
add
mov
and
lahf
add
mov
insl
mov
aas
sub
xlat
jno
xor
mov
ror
loope
popa
rol
jmp
call
clc
cmp
push
lea
ja
mov
pushf
inc
dec
call
lea
ja
call
xor
jae
mov
shll
mov
mov
or
divl
loop
jbe
int
mov
or
jae
inc
fs
jbe
push
lds
es
adc
adc
out
icebp
or
movsl
aad
fnsave
xor
adc
aad
frstpm(287
sub
mov
fcomps
sbbb
nop
shr
xor
stos
mov
xchg
push
jg
push
or
jno
sub
rcr
pop
pop
stc
loope
add
ja
sbb
jne
cmp
xchg
in
push
sbbl
xor
dec
xchg
stos
jnp
aad
adc
xor
sahf
stos
ja
mov
sbbl
push
push
add
sahf
in
push
dec
aam
mov
cld
sub
pop
popa
sbb
iret
pop
fwait
les
pushf
ret
mov
jge
sbb
mov
jecxz
repz
xchg
arpl
jp,pt
jae
pop
xor
xchg
jge
mov
mov
ljmp
mov
cs
leave
inc
cmpsb
mov
sbb
push
dec
shlb
xchg
mov
xchg
cmpsb
mov
divb
popa
adc
pop
pop
sub
sub
ss
pop
data16
push
push
pop
inc
mov
iret
cs
or
hlt
idivb
push
mov
imul
mov
popa
jge
pop
aam
mov
jno
add
jnp
xor
mov
inc
or
imul
mov
outsb
repnz
mov
popa
mov
push
dec
add
cmpsb
cmc
scas
fadd
mov
xor
sbb
xchg
dec
cmp
inc
adc
mov
cltd
fs
mov
fimull
push
mov
and
movsl
fldl
xchg
mov
or
stos
test
loope
hlt
mov
pop
push
sarl
lret
jns
repnz
inc
mov
out
and
xchg
insb
aas
and
or
sbb
pop
pop
insb
dec
sub
mov
mov
mov
scas
fiaddl
pop
xchg
xchg
xchg
test
mov
bound
bound
mov
push
xor
test
test
stc
movb
sub
pushf
rol
mov
jmp
not
adc
movzbw
mov
pushf
mov
push
xor
call
pusha
call
push
call
lea
jb
push
movw
mov
pushl
ret
jmp
movb
jmp
jmp
aam
lea
sti
mov
pop
ret
xchg
add
push
ds
add
loop
add
sti
loope
xor
push
and
push
jno
daa
cwtl
cmp
scas
dec
jo
and
scas
xor
lcall
popf
pop
and
sti
data16
adc
mov
int3
fdivs
pushf
cmp
pushf
pusha
mov
lea
jb
call
arpl
adc
in
in
je
and
jmp
jmp
ds
push
mov
add
pop
pop
mull
shl
or
cltd
imul
lea
cmp
popf
icebp
mov
inc
sub
mov
jb
test
and
push
sbb
sbb
sbb
lret
clc
mov
lcall
cld
rcll
mov
pop
les
mov
jp
stc
pop
lods
cli
adc
xchg
out
std
xchg
pop
mov
cmp
mov
jge
and
pop
je
pop
hlt
and
cmpsb
repz
mov
test
mov
lea
mov
cmp
cli
cmpsl
xlat
xchg
mov
cmp
xchg
test
icebp
stos
imul
jae
xchg
dec
mov
pop
pop
sbb
icebp
adcb
add
mov
mov
pop
and
xor
mov
lret
ja
lods
jo
fldl
push
adc
xchg
cltd
jmp
mov
imul
cld
xchg
lods
in
mov
pop
aas
loopne
xchg
cmp
xchg
mov
cwtl
mov
loop
ror
jo
es
pushf
pusha
movb
inc
pushf
pushf
pushl
lea
jmp
lcall
push
test
out
fs
bound
loope
cmp
pop
push
pusha
jae
adc
outsb
cmp
scas
lods
sbb
mov
fcmovu
xor
lahf
lahf
sti
sbb
repz
fadd
ffreep
cmp
cltd
or
pop
fsubs
fmuls
fnstcw
movsb
push
fidivrs
shrb
cltd
test
push
add
inc
pop
test
pop
add
mov
shll
cmpsl
loope
repnz
xchg
lret
xchg
das
mov
enter
aaa
imul
cmp
push
inc
sub
lcall
lcall
dec
xchg
dec
ror
sbbl
js,pn
pop
inc
ljmp
cmp
mov
movsl
shll
sub
and
or
mov
cmp
mov
aam
fsubl
dec
dec
cwtl
out
dec
in
mov
sbb
and
ret
insl
jnp
sub
repz
or
addr16
or
xchg
negl
xchg
mov
jmp
cmp
ret
pop
mov
lods
mov
call
jmp
push
movl
pusha
push
movb
mov
movl
movw
mov
pushf
lea
jmp
pushf
movl
push
pushf
movl
lea
jmp
mov
ja
aad
sarl
xor
stos
jp
ds
mov
andl
jle
iret
and
xchg
jae
enter
in
mov
in
rcrl
jne
lea
scas
cs
jne
sbb
fs
in
jp
dec
stos
aaa
stos
fiadds
outsl
pop
adc
pop
cli
mov
push
dec
fs
faddl
filds
sbb
dec
ror
mov
pop
push
push
adc
lcall
sbbb
pop
add
and
ss
rorl
push
xchg
or
jle
ds
jb
mov
and
pop
cmp
push
outsl
mov
enter
dec
adc
js
mov
cmp
inc
les
lods
shl
or
adc
outsb
into
sub
adc
iret
imul
dec
ror
fbstp
jmp
not
cmc
ror
seta
inc
dec
shl
not
shr
pushf
sbb
clc
xor
pushl
pushl
mov
stos
pushf
push
call
movl
call
pusha
cmp
call
lea
and
in
mulb
mov
enter
ret
out
sbb
outsl
jb
mov
and
adc
cmc
sub
sbb
xor
adc
je
loop
push
lret
ror
mov
dec
je
jmp
pop
and
out
imul
or
xchg
repz
outsb
xchg
pop
adc
repnz
push
sub
mov
rol
out
sahf
jg
cwtl
les
dec
rol
cmp
fwait
mov
push
test
adc
rolb
push
dec
rol
push
mov
push
clc
mov
rorb
and
iret
iret
cmpsl
dec
mov
xlat
sbb
jae
dec
nop
aam
mov
aas
inc
push
mulb
adcl
mov
pop
mov
pop
inc
cmp
lahf
ret
add
ret
dec
cmpsl
push
pop
mov
ficomps
movsb
add
insl
pop
inc
sbb
dec
fdivr
loop
xchg
cmp
add
pushf
mov
push
clc
notl
fcmovb
jnp
jne
ret
pusha
mov
jne
icebp
cld
loope
mov
aas
adc
aaa
and
in
xor
jp
dec
inc
push
fs
push
or
add
test
or
lea
sub
cli
and
lret
ss
int
pop
mov
dec
rol
inc
sbb
push
shll
pop
sub
rcr
xor
sbb
lcall
jmp
mov
sub
mov
add
jl
dec
push
aas
addr16
js
mov
out
jns
jp
or
or
pop
push
dec
pop
sub
and
jnp
sbb
cs
mov
rolb
sbb
ljmp
clc
cmc
mov
push
push
push
pop
cwtl
jo
mov
into
push
jae
pop
push
outsl
repnz
shlb
mov
and
es
jns
insb
jge
cmp
fmull
push
push
sub
lods
dec
sub
add
repnz
lret
imul
jmp
rol
sbb
jle
add
je
jb
gs
gs
fs
imul
mov
ret
fadd
sbb
icebp
loop
jge
xchg
sti
es
jno
push
cmp
mov
and
mov
mov
dec
rclb
mov
cmp
insb
into
aas
adc
ljmp
ret
xlat
and
adc
sub
arpl
test
outsb
scas
daa
dec
jnp
mov
sahf
jl
jmp
shll
loopne
pop
xchg
pop
mov
sub
fidivl
mov
inc
movsb
add
pushf
dec
rol
mov
clc
add
stc
adcb
ss
cmpsl
xor
repz
test
mov
lret
pop
inc
xor
popa
jmp
shlb
repnz
push
push
mov
daa
shl
fstp
insl
xor
sbb
jle
sub
sub
lret
popa
movsb
scas
pop
fldt
adc
dec
nop
loopne
cld
and
dec
pop
shlb
cld
stos
push
in
ss
cmp
jg
jns
sub
push
adc
movsb
mov
out
jo
mov
pusha
add
inc
aas
loopne
cltd
stos
mov
jo
pop
push
adc
mov
mov
dec
out
rol
mov
fidivrl
data16
jne
aad
mov
test
mov
subb
add
lods
stc
lods
icebp
lods
lret
add
fs
xor
mov
test
mov
in
dec
adc
sub
inc
aad
pop
imul
pop
push
arpl
mov
sahf
or
mov
dec
inc
pop
imul
cmc
sub
jnp
lock
int
fwait
cmp
mov
inc
push
pop
outsl
sarl
aas
lret
ljmp
rorb
xor
sahf
lret
add
mov
cmp
pop
mov
js
mov
aad
or
or
daa
push
adc
mov
insl
jg
jecxz
dec
pop
rcrl
sbb
xchg
or
or
cmpsb
ss
fisubs
mov
lret
adc
and
xlat
mov
lahf
daa
jmp
fisubs
xor
cmp
push
cmp
clc
lods
jne
cmp
fidivrs
xchg
mov
mov
mov
inc
xor
pop
xor
aam
push
jp
mov
outsl
imul
or
jae
xor
and
leave
ret
pop
mov
xchg
xchg
lods
xor
inc
repz
call
xor
scas
iret
insb
fs
pop
push
int
int
sub
inc
xchg
or
aad
bound
xor
inc
test
push
aas
pop
lcall
jecxz
stc
rcr
pop
lahf
rorl
and
jbe
in
push
sub
dec
out
dec
in
ret
sbb
in
mov
sub
ret
lock
push
outsl
and
fcomi
fwait
test
dec
push
dec
cmpl
inc
fld
cmpsb
clc
pop
test
les
inc
pop
les
dec
rol
lret
movsl
and
lret
ljmp
pop
iret
xchg
add
iret
push
add
loope
out
mov
xchg
and
in
xor
mov
je
scas
xor
nop
jo
cmp
push
lock
sub
hlt
xor
push
cmc
xchg
mul
pop
sbb
fcmovne
outsb
jnp
paddb
ljmp
rclb
test
pop
cs
fisttpll
cwtl
in
pop
pop
mov
jp
hlt
push
add
push
mov
pop
cmpsb
push
sbb
das
inc
aaa
aaa
pop
dec
push
lret
testl
push
inc
div
jle
jle
jb
xchg
sub
cmp
xor
ret
sarb
inc
pop
add
dec
lret
pop
in
outsb
add
cmp
inc
or
push
daa
mov
inc
in
repnz
lret
and
jno
test
enter
dec
sbb
cli
test
sti
loopne
add
loopne,pn
xor
hlt
je
js
lock
test
add
mov
in
sbb
and
sahf
mov
fimull
dec
jmp
xorb
cmp
push
cs
movsb
pop
push
or
roll
inc
jnp
mov
inc
fdivs
sub
aad
pop
insb
and
movsb
enter
jecxz
test
repz
out
fs
xchg
xchg
in
push
sbb
lea
and
in
dec
inc
dec
mov
xchg
push
mov
xor
cli
loope
push
xchg
popw
call
adc
cwtl
pusha
insl
cltd
dec
orb
aad
sahf
cld
sarl
push
lret
xor
mov
pop
fmull
dec
mov
adc
and
lgs
ljmp
dec
xchg
mov
enter
cwtl
jge
sbb
mov
outsb
subl
push
stos
jae
pop
sub
jmp
dec
adc
fidivl
sbbb
scas
adc
out
notl
mov
lea
adc
xor
pop
fstpl
push
int
push
xchg
ja
pop
mov
cmp
pop
xchg
mov
sub
popa
std
popa
xor
icebp
mov
scas
jl
popf
adc
push
pop
pop
nop
icebp
in
imul
lahf
mov
stos
add
mov
std
stc
xchg
add
cmpb
sbb
in
repnz
lds
dec
adc
outsb
les
push
sub
pop
inc
pop
mov
cmp
xor
je
push
dec
xchg
add
or
div
fnstcw
sbb
std
mov
and
fnop
mov
jbe
mov
into
cmpsb
xor
inc
daa
ja
sub
inc
push
outsl
gs
dec
dec
es
mov
dec
mov
jp
lret
sub
jno
movsl
xor
dec
and
ret
sub
f2xm1
out
lahf
out
add
imul
es
das
inc
les
jmp
gs
lahf
lds
adc
sbb
cmp
js
daa
sarl
sbb
out
mov
push
lret
cmpsl
xor
xor
pop
dec
aad
enter
and
jle
sbb
in
jmp
leave
out
je
jl
mov
pop
inc
cmp
test
add
mov
ret
cmpsb
cmp
dec
mov
sbb
xchg
cmpl
jmp
clc
mov
ret
or
repnz
and
add
push
aad
daa
mov
fs
push
rcrl
dec
rorl
push
mov
pop
ja
add
xor
xchg
dec
aas
mov
push
daa
ss
hlt
cwtl
or
adc
mov
les
movsb
shlb
cmp
mov
cwtl
and
les
xchg
outsl
outsb
dec
aaa
bound
loope
sbb
sbb
daa
mov
leave
pop
shr
dec
push
test
repz
out
aaa
aaa
push
cmc
imul
jnp
gs
jle
mov
add
push
popa
jle
push
mov
int
jecxz
push
orl
icebp
stos
jl
sbb
lcall
daa
add
xchg
insl
imul
test
cmp
clc
sub
fldl
push
push
stos
stos
icebp
mov
clc
jmp
outsl
adc
rorl
bound
jne
lods
test
andl
arpl
pop
or
jmp
mov
ja
mov
dec
call
rcrb
mov
incb
icebp
or
adc
ljmp
xor
push
jp
push
cmp
mulb
std
lahf
dec
dec
xchg
push
cmpsl
add
pop
lds
fdivrs
pop
imul
pop
mov
rorl
dec
jp
sbb
mov
dec
mov
in
aad
movb
sub
dec
push
loop
out
stc
stos
repnz
dec
in
inc
pop
xchg
outsl
push
xlat
andb
jl
je
popa
xor
aaa
stos
sbbb
or
ja
dec
enter
and
cmp
xlat
mov
ss
adc
outsb
ror
inc
jecxz
lcall
jmp
rorb
sub
rcl
roll
cmpsl
add
sbb
cwtl
add
inc
mov
scas
scas
cs
mov
shl
jno
sbbl
jo
in
aas
fdivrl
sbb
pop
lahf
mov
add
pop
imul
cs
sahf
add
mov
adc
dec
out
push
inc
inc
push
lret
add
pop
push
jl
or
adc
dec
fcomps
push
out
andb
je
jecxz
cmp
data16
mov
outsl
adc
adc
lahf
inc
in
insl
add
negb
lret
pop
test
xchg
aaa
dec
pushf
shrl
and
mov
div
sahf
or
das
enter
in
jg
ljmp
adc
jmp
ss
add
jl
daa
test
inc
idiv
push
pop
je
inc
adc
cwtl
ret
je
dec
das
mov
mov
lods
jae
icebp
pop
aaa
call
lcall
cmp
xchg
push
nop
add
dec
in
jae
mov
mov
or
dec
jg
cmp
repnz
xor
cmp
pop
pop
xor
mov
jmp
mov
mov
mov
stos
call
mov
fisubrl
cmc
jmp
xchg
push
mov
cmpb
mov
cmp
pop
inc
adc
inc
fbstp
cmp
mov
gs
xchg
cld
push
and
and
enter
jecxz
arpl
jl
das
cmpsl
add
test
repz
pusha
inc
loope
cmpsb
cld
add
pop
inc
mov
ljmp
inc
pop
inc
inc
shll
xchg
mov
jmp
hlt
cs
and
in
push
imul
movsl
and
int
out
cmp
aaa
mov
cmp
xchg
push
and
mov
insl
pop
mov
insb
fs
pop
pusha
mov
leave
mov
sbb
inc
ds
clc
cmc
dec
inc
jmp
mov
mov
enter
adc
add
xchg
andb
std
push
ret
pop
jb
xor
repz
inc
dec
ljmp
jmp
mov
lahf
lods
mov
aam
push
insl
lret
fildl
inc
pushf
ljmp
les
movsb
xchg
fcompl
mov
nop
sub
shlb
jl
ds
sbb
xor
out
mov
cmpsl
js
push
mov
rcl
scas
add
test
sbb
hlt
sub
cwtl
xchg
mov
cmpsl
xor
jo
xchg
aad
inc
or
sbb
ret
pushf
mov
fimull
or
je
test
and
lea
pop
add
push
push
ucomiss
repnz
xorb
das
mov
incb
mov
loope
xchg
outsl
adc
mov
push
lret
jne
shrb
rcll
push
adc
inc
inc
sub
daa
arpl
xchg
sbbb
xchg
mov
ds
dec
in
repz
mov
dec
inc
inc
mov
mov
adc
stos
xchg
and
outsl
pop
movsl
movsb
sub
lods
popf
xchg
xor
stc
inc
pushf
lock
cli
pop
push
and
insl
imulb
out
xchg
xchg
aas
push
inc
pop
aaa
test
jl
xor
int
pop
xor
shll
add
add
pop
jmp
adcl
push
icebp
jnp
cmp
adc
or
fisubl
sub
movsl
leave
fcmovb
fiadds
mov
mov
stos
dec
jg
popa
es
shll
movsb
fistpl
push
jle
rorl
push
sbb
push
movsb
cwtl
xor
les
cli
cmpl
xchg
xchg
notb
imul
fdivs
sarb
inc
popf
cltd
sbb
adc
mov
insl
dec
dec
call
xlat
push
scas
mov
jae
adc
pusha
into
sbb
jl
fwait
aam
rcll
xor
sub
in
aaa
xor
jns
iret
cld
push
jg
ja
iret
push
nop
data16
jns
dec
stos
cwtl
push
push
aaa
imul
dec
and
inc
pop
xchg
push
daa
mov
mov
cli
xchg
test
dec
push
xchg
or
mov
repnz
clc
fcom
push
xchg
adc
adc
lahf
add
dec
sbb
dec
mov
add
fwait
mul
decl
adc
mov
fnstsw
xchg
push
nop
loop
push
xchg
loop
sub
jnp
mov
pop
sahf
inc
sahf
sbb
mov
les
outsb
xlat
pop
pop
mov
bound
cmpl
inc
xlat
dec
xlat
jns
or
jge
jno
xchg
adc
add
dec
jb
or
add
dec
pop
jno
pop
dec
push
loope
or
fsubl
push
inc
jns
gs
mov
cli
loopne
out
bound
sahf
push
cmp
movsb
jns
clc
lock
es
push
push
ret
fmull
icebp
loopne
cs
jbe
jl
cmpsb
mov
in
gs
dec
shlb
sub
sbb
sbbl
sbb
xor
mov
or
in
mov
bt
push
jmp
mov
lea
pusha
call
pushl
movl
push
call
jmp
inc
push
movsl
addb
sbb
pop
dec
lcall
inc
aam
mov
test
sbb
les
out
lcall
cmp
push
push
xor
shr
cld
push
aam
cmp
or
xchg
sub
or
lahf
cmpsl
pop
sar
mov
xor
xchg
icebp
insb
or
outsb
das
insb
push
dec
jns
ret
insb
out
loop
adc
pop
clc
inc
jle
jp
rolb
mov
add
and
stos
ret
aaa
xchg
or
inc
das
iret
jl
cmp
mov
xlat
sbb
xor
jo
xchg
xchg
cmpsl
daa
push
cmp
fs
movsl
pop
add
pop
inc
clc
mov
mov
or
or
leave
push
enter
shlb
lret
sbb
loopne
and
push
adcl
lea
out
xor
iret
lods
outsb
jbe
out
fmuls
push
jmp
sahf
js
mov
mov
push
sub
inc
pop
xchg
jb
pushf
outsb
js
inc
push
out
fldenv
jo
mov
add
pop
or
pop
pop
mov
xchg
adc
lea
fstpl
push
rcrb
mov
cmp
test
aam
push
sub
fnstcw
pop
js
mov
add
cmp
mov
dec
int
sub
adc
push
push
pushf
mov
pushl
ret
push
lea
je
pushf
call
data16
dec
cs
or
icebp
notl
pop
rol
push
lds
inc
pop
dec
xor
outsb
int3
mov
pusha
inc
fisttpll
inc
adc
mov
mov
mov
popf
mov
pop
pop
sbb
mov
lcall
mov
mov
mov
push
jmp
jno
push
jp
xchg
dec
pop
mov
jp,pt
inc
and
xor
adc
dec
shlb
fucomip
inc
insl
add
aad
pusha
xor
inc
mov
js
cmp
jle
cmp
cmp
xor
cltd
dec
aam
inc
out
aaa
push
leave
adc
xchg
loope
arpl
shlb
jns
mov
push
hlt
cmp
icebp
pop
popa
sbb
add
push
jg
sbb
std
negl
jnp
jnp
mov
mov
mov
inc
inc
or
into
lcall
sbb
out
jmp
mov
div
mov
mov
inc
jns
dec
adc
aad
inc
pushf
mov
call
fyl2xp1
aam
repz
shrd
out
fwait
xchg
sbb
cmpsb
xlat
pshufw
mov
js
xorl
push
push
sub
outsb
es
adcl
addr16
cmc
and
test
and
cwtl
jnp
add
mov
ret
dec
jne
xchg
aaa
sub
sti
pop
subb
mov
shlb
push
or
and
insl
ja
mov
test
aaa
loopne
mov
rorb
stos
jo
push
nop
dec
sbb
cmp
inc
popf
enter
repnz
mov
sub
xlat
stos
xchg
mov
mov
jl
iret
mov
mov
pop
cltd
dec
shlb
add
popa
insb
inc
insb
insb
outsl
arpl
and
movsl
cmp
dec
sahf
lret
pop
dec
adc
push
or
or
xor
insb
mov
jmp
fisttpl
or
inc
pop
xchg
imul
sbb
mov
fwait
movsb
int3
xchg
xchg
loope
adcl
dec
sbb
mov
xchg
loope
cmpsb
cmp
pop
cmpsl
xor
outsl
int3
test
lcall
cmpsl
jecxz
inc
orb
inc
sbb
inc
rol
or
cli
cmpsb
sti
mov
cmp
stos
cmpsl
jbe
sbb
pop
inc
lods
mov
dec
jae
pop
int3
xchg
or
es
mov
sahf
loop
stos
push
inc
hlt
in
pop
adc
push
movsl
test
add
pushf
les
sub
lods
xor
or
pushf
mov
jno
loopne
mov
pop
ljmp
call
ja
dec
jo
jo
rolb
xchg
subl
add
add
sbb
xchg
out
mov
add
add
popa
arpl
cmpsb
fisttpll
ret
arpl
int
mov
sbb
mov
push
dec
cmp
mov
icebp
push
add
cltd
lds
shll
in
aad
mov
jecxz
adc
dec
xor
pop
sti
popf
xchg
fdivrs
push
jle
mov
sarl
jnp
mov
aam
in
sbb
mov
scas
cs
flds
mov
enter
filds
inc
faddl
fisttpll
fnsave
repnz
mov
pop
cmp
lret
xchg
insb
out
sbb
push
push
sti
fcoms
fldt
addl
in
xchg
test
and
push
pusha
fldcw
xorb
cld
mov
sub
add
mov
js
aad
push
push
sub
mov
dec
adc
push
pushf
mov
sbb
fiaddl
std
pop
dec
shlb
call
add
ror
xchg
int3
insl
mov
mov
xor
sub
sbbb
roll
mov
out
fldenv
jb
jb
mov
xchg
lods
mov
dec
cmp
repnz
mov
cmp
ss
std
arpl
es
insl
sub
sbb
mov
ljmp
out
cld
fstp
lock
je
mov
mov
loop
pop
ret
cmp
mov
leave
mov
mov
imull
dec
push
xor
mov
jmp
and
cmp
call
popl
xchg
sahf
mov
push
add
aam
rolb
jae
ds
stc
push
int3
stos
jno
lds
add
movb
incl
cli
div
lcall
bound
sub
jno
arpl
pop
lods
adc
jl
inc
fwait
cmp
jb
loop
cmp
sub
mov
popa
mov
inc
and
cld
and
add
shrb
xor
pusha
lea
jne
call
pusha
movl
pushf
movb
lea
jmp
xchg
test
rcrl
or
pop
lcall
sub
ljmp
xlat
roll
enter
push
outsb
inc
fdivrl
or
or
sbb
xor
out
scas
out
mov
xor
call
data16
push
mov
cwtl
cmp
rcrl
ret
shrb
leave
fdivl
xchg
movsb
cltd
mov
rorb
inc
pop
nop
mov
jecxz
and
mov
mov
clc
push
iret
mov
cmp
mov
fwait
mov
and
fs
push
stos
xor
fstpl
push
sti
push
popf
lret
sbbl
cld
cmp
es
sub
popa
pop
test
adc
subb
aam
xor
fcomp
iret
mov
aaa
enter
es
pop
ret
sti
mov
sub
mov
sbb
pop
andb
fdivp
pop
fs
inc
pop
mul
dec
out
mov
pop
fsubr
xor
imul
dec
pop
into
pop
stos
lea
push
jb
cmp
sub
nop
add
hlt
mov
mov
sub
add
pop
loop
mov
out
cmp
nop
mov
bound
outsl
push
dec
lea
add
fxam
outsb
les
pusha
loopne
bound
stos
cmp
push
lea
in
cld
xchg
mov
mov
mov
hlt
in
repz
dec
sub
dec
shrb
jmp
and
sub
and
jnp
mov
xlat
cmp
in
das
movsb
mov
sbbb
pop
cwtl
aad
push
shll
loopne
in
push
int3
mov
lret
xchg
push
lods
popf
add
pop
mov
pop
shl
in
jecxz
sti
sub
add
stos
inc
sbb
fistpl
lret
mov
fldenv
jmp
cmc
test
inc
pop
stos
cwtl
or
xchg
push
test
in
lcall
loope
les
xchg
inc
push
fs
add
xchg
mov
rorb
dec
push
or
int
dec
shrb
push
add
repz
mov
push
sbbb
pop
les
js
mov
cwtl
inc
push
call
and
stos
mov
stos
xchg
inc
mov
cwtl
dec
push
sbb
jge
fstpt
mov
mov
pop
in
rcll
sbb
fwait
addr16
and
fldl
or
push
mov
lock
leave
test
sarl
aaa
outsl
or
inc
cmp
or
pop
movsl
jl
cmp
mov
ss
lea
je
bt
cmc
sub
clc
cmp
push
mov
jmp
inc
scas
or
cwtl
ja
push
jae
iret
xchg
sbb
fcmovne
lahf
mov
lret
push
iret
mov
cld
daa
stc
shlb
in
mov
cltd
fisubrs
push
pop
loope
push
jmp
int3
ljmp
or
out
fldt
cltd
fs
enter
dec
pop
push
leave
sub
dec
lods
sahf
jbe
dec
aam
outsl
lea
push
or
lods
add
mov
enter
bt
cmp
jmp
cmp
shrb
and
dec
faddl
aaa
rorl
cli
shrl
jmp
std
ss
aam
xor
sub
sub
lds
add
pop
cmp
pushf
pushf
inc
jp
icebp
dec
jp
xchg
std
cmp
loope
sub
je
or
dec
xor
pop
push
inc
push
aam
insb
push
mov
or
dec
loop
enter
xchg
out
push
stos
mov
mov
xor
mov
jbe
xor
dec
shrb
lock
stos
sahf
in
mov
je
mov
xchg
cmp
xchg
fsubs
addr16
cmp
sub
fnstenv
pop
into
mov
xor
lea
daa
stc
push
jecxz
jns
or
scas
jae
xchg
mov
jecxz
add
filds
add
out
add
les
test
xchg
xchg
js
cmp
mov
jg
push
sbb
jno
dec
movsl
test
arpl
pop
push
jne
inc
andb
push
fiadds
stc
in
sti
and
cmp
ret
xchg
xor
sbb
pop
das
push
fisubs
jnp
jbe
rcrb
out
dec
pop
cmp
xor
addb
js
popl
nop
mov
push
mov
aaa
mov
stc
movsl
out
and
into
subl
les
lcall
xchg
dec
sub
mov
xchg
ficoms
mov
add
or
add
adcb
xchg
lret
dec
sub
cmp
or
or
add
int
push
sahf
pop
pop
pop
jo
dec
jo
mov
and
and
xchg
ficoml
sahf
call
mov
mov
dec
mov
mov
loope
out
test
hlt
push
pop
loope
movsb
mov
mov
decl
test
call
gs
cmp
test
out
sbb
rcl
xor
shll
and
pop
ss
in
scas
xchg
mov
push
out
dec
adc
xchg
paddq
mov
dec
shrb
pop
mov
xor
fwait
inc
sub
pop
mov
xor
pop
fwait
mov
mov
xor
sbbl
mov
jl
mov
and
xchg
mov
mov
orl
bound
test
xchg
inc
push
int3
push
sbb
push
jl
rorb
pop
push
mov
dec
xor
mov
test
iret
pop
scas
cmp
cltd
cmp
imul
jp
les
clc
in
add
test
jo
jl
dec
sti
sbb
dec
pop
dec
push
mov
leave
push
dec
shrb
in
and
push
adcl
push
ffree
xchg
or
push
xchg
jle
leave
push
es
adc
sar
pop
adcb
jg
test
out
mov
pop
inc
cmc
jl
add
xchg
or
cmpsl
adc
dec
out
pop
scas
jo
rcl
jmp
mov
dec
in
insl
add
cltd
mov
sbbl
inc
adc
cld
add
arpl
cmc
fnsetpm(287
adc
lea
xor
imulb
sub
push
mov
cmc
dec
shlb
cld
add
and
jae
call
movb
movl
pushf
mov
lea
jmp
in
mov
inc
test
mov
or
or
push
inc
add
pop
jmp
mov
orb
mov
pop
cs
cmc
adc
popa
and
std
xor
loop
leave
leave
xchg
fisubrs
sahf
cld
jl
cld
push
mov
loop
cmc
mov
out
scas
lock
fsubl
enter
or
add
imul
and
sub
mov
bound
daa
sarl
lea
dec
mov
aad
dec
shlb
inc
rolb
xlat
adcb
adc
call
mov
mov
jge
cmpsb
push
std
sub
inc
sub
mov
push
int3
ljmp
jl
pop
dec
lods
mulb
movsl
jnp
push
ret
xchg
push
insl
push
mov
cmpsb
jge
fisttpl
pusha
lods
pushf
push
mov
pushf
dec
mov
bt
jmp
call
call
movsbw
mov
pushf
movw
pusha
pushl
ret
cmp
jne
ss
jnp
cmc
popa
insl
jo
cmc
call
cmp
push
lea
and
xor
repnz
jne
mov
dec
and
add
mov
sbbb
dec
shlb
lea
jb
cmc
jmp
call
movl
pusha
jmp
stos
pusha
lea
jmp
jmp
lods
lock
pop
sahf
dec
mov
jne
mov
mov
add
push
and
lds
and
sbb
or
movsl
sbb
out
jns
fsts
or
scas
jl
xchg
mov
sub
push
add
sbb
mov
cld
push
dec
lret
sub
push
dec
int
cltd
xchg
sub
or
mov
das
mov
mov
mov
cmp
int3
dec
dec
aad
pop
in
inc
push
mov
xchg
fimuls
stc
jecxz
idivl
js
in
scas
gs
xchg
pop
add
cmp
and
data16
xchg
aad
xchg
lds
jmp
push
ds
cmc
pop
sub
adc
lock
nop
xchg
inc
js
and
jp
mov
addl
sub
pop
lds
paddq
xchg
loop
push
movsl
adc
sbb
and
pop
arpl
fsub
outsl
fs
and
lock
lcall
nop
rclb
push
les
es
dec
inc
in
jl
add
test
inc
mov
push
repz
xor
mov
dec
jo
jge
mov
outsb
xor
aam
movsl
rdpmc
lods
das
mov
lea
cmp
in
mov
lods
mov
shl
cmp
std
and
pop
mov
mov
push
xor
lret
adc
movsl
movb
push
test
pop
dec
aam
push
sahf
shll
ss
fldl
leave
xchg
out
out
in
push
push
negl
adc
xor
push
or
movsb
add
cmpsb
dec
in
or
fwait
inc
sbb
ret
js
xlat
mov
add
xchg
sbb
aas
daa
js
jmp
cmpsb
mov
mov
pusha
lea
jne
shl
rol
movzbw
movzbw
sub
movzbw
aad
rcr
btr
mov
shr
add
rcl
not
ror
adc
mov
bt
test
pushf
lea
je
call
in
loop
cmpsb
sti
outsb
jae
jbe
dec
rorb
pop
iret
sbb
xchg
add
or
inc
cmp
inc
call
js
insb
add
mov
data16
or
lods
dec
xchg
repz
into
adc
mov
pop
pushf
inc
lcall
ds
jns
clc
sub
flds
xlat
xchg
bound
cmp
adc
jns
lret
pop
das
mov
push
mov
mov
xchg
fsts
cmpsl
vpunpckldq
or
push
dec
pop
push
shrb
scas
sarb
or
rorb
mov
insl
xchg
pop
inc
les
movsl
push
pop
pop
pop
sbb
jle
test
xchg
loop
dec
fadds
pop
mov
mov
mov
stos
clc
test
pushf
sub
jmp
fcomp
inc
adc
filds
dec
sbb
add
sbb
repz
imul
mull
mov
mov
add
fcompl
pop
adcb
adc
sbb
dec
pop
xchg
je
out
and
sub
xor
mov
cld
clc
lock
push
idivl
das
jle
adc
outsb
mov
mov
sub
xlat
or
sub
push
int3
scas
int
mov
dec
shlb
mov
mov
xchg
imul
jae
cld
jmp
in
js
jp
mov
gs
push
clc
jnp
jno
ja
test
adc
pusha
mov
dec
push
adc
in
or
incb
stos
pushl
movsb
shl
xlat
inc
out
imul
pop
arpl
lods
xchg
sahf
xchg
or
repnz
movsl
shrb
test
leave
fldl
test
sbb
inc
in
xchg
push
ret
push
push
add
nop
cltd
xchg
push
pop
out
inc
sbb
ss
rcrb
lret
push
inc
and
inc
in
sub
loope
out
xchg
nop
and
dec
pop
imulb
and
add
icebp
repnz
mov
jmp
arpl
dec
push
aas
pop
cmp
and
jnp
pop
les
pusha
sbb
push
dec
pop
and
push
int
mov
mov
dec
shlb
iret
cmp
pusha
lea
ja
clc
add
push
ror
call
not
cmp
xor
movb
lea
call
push
cmp
pushf
push
lea
jb
jae
pushf
call
call
movzbw
mov
call
jge
ljmp
or
out
cli
scas
mov
addr16
std
fs
add
leave
dec
rcrb
imul
push
sbb
inc
lret
jno
dec
in
ja
stos
cmpsl
or
adc
lcall
mov
pop
push
push
cmc
test
mov
xor
or
out
and
and
sbb
call
cmpsl
mov
hlt
adc
mov
mov
imull
mov
push
and
lcall
inc
push
or
push
xchg
xchg
fdivrp
push
and
add
pushf
aam
adc
fwait
inc
xor
cmp
pop
xchg
je
xchg
dec
push
mov
out
test
inc
pop
push
jl
xchg
scas
sub
outsl
gs
mov
push
ret
push
fnsave
ret
into
fisubrs
xchg
mov
aaa
mov
aaa
not
sarl
and
clc
mov
fisubs
decb
hlt
imul
arpl
mov
in
dec
rcrb
ror
sub
mov
push
add
inc
push
pop
push
adc
sbb
cli
in
rcl
pop
mov
push
movsl
inc
cs
xor
mov
mov
sub
addb
jp
dec
es
ds
and
rorl
cmpsb
add
jnp
out
push
loop
mov
sub
shlb
adc
mov
jns
push
xor
push
lock
add
dec
and
ffreep
flds
kxorb
dec
rcrb
bswap
setae
movb
not
mov
mov
lea
pushf
jmp
movl
pushf
pushf
lea
jmp
movzbw
movzbl
pop
movsbw
not
xchg
pop
lea
pop
pusha
movb
jmp
repnz
and
ret
fsts
add
in
mov
mov
ja
mov
xor
jbe
testb
jbe
mov
stc
jbe
add
mov
aaa
sbbb
lcall
sarl
mov
push
cmp
jno
pop
jo
jl
jmp
xor
sub
testb
imul
push
dec
cmp
sub
popf
add
cmp
push
and
lcall
add
movsb
in
rcrb
adc
fadd
insl
sub
out
mov
jmp
test
mov
mov
add
nop
jmp
jo
mov
adc
and
adc
jmp
hlt
mov
andb
cmpsb
add
add
popf
jns
int
sub
in
repnz
aam
stos
ret
rolb
xchg
dec
xchg
dec
rolb
int
mov
jae
mov
cmp
into
adc
int
inc
cmp
leave
mov
inc
and
imul
rorl
or
push
movsl
int
int3
mov
int3
pop
or
jbe
sub
adc
jbe
repz
push
or
dec
rcrb
xchg
sbbb
lea
imul
in
cmp
aas
in
pop
jle
adc
pop
faddl
adcl
repz
lcall
sbb
cmpb
pop
or
mov
ss
data16
mov
pop
jecxz
jnp
jno
adc
mov
outsl
cld
fldt
cmp
add
and
mov
mov
std
sbb
insb
add
xchg
pop
lahf
add
sbbb
stc
fisttpl
pushf
jns
icebp
xor
mov
lea
call
bt
cmp
pushf
push
call
pushf
pusha
bt
or
pusha
mov
lea
je
mov
setg
mov
jmp
push
pushf
jmp
stc
std
pushw
popfw
call
stos
lods
mov
jg
xlat
ret
dec
push
enter
add
cltd
ret
sbb
add
dec
cmp
push
stos
ljmp
and
cmp
rcl
int3
shrl
push
or
inc
inc
jne
push
es
insl
test
scas
pop
test
mov
or
lret
xchg
mov
xchg
dec
out
or
rcrb
dec
sbb
mov
dec
and
out
fs
cmp
xor
stos
mov
push
and
lods
icebp
push
inc
sub
enter
mov
inc
adc
jge
cli
adc
ljmp
inc
bndldx
sahf
cmpsb
sti
xchg
stos
fwait
xchg
cwtl
jbe
rclb
or
mov
popa
pop
xlat
adc
adc
mov
push
arpl
add
shrb
lock
and
imul
scas
cmp
jne
popa
call
jb
test
fildll
cmp
cmp
vcvtdq2ps
das
mov
dec
push
enter
mov
dec
rcrb
fs
jae
push
cmp
push
pushf
mov
lea
jae
clc
pushf
stc
movb
cmp
pushf
pushf
lea
ja
pusha
inc
lea
jmp
pusha
movb
lea
call
jmp
loope
ffreep
cltd
ficompl
cmc
jno
mov
jge
std
arpl
gs
in
out
cmc
unpcklps
cmpsl
out
add
cmp
data16
lcall
sbb
mov
pop
outsl
jg
imul
pop
arpl
les
lock
fmull
je
out
arpl
jle
dec
imul
hlt
mov
xor
sarb
fdivrl
jne
fiadds
inc
ljmp
hlt
hlt
jb
repz
rcll
sub
punpckhbw
push
pop
inc
push
fs
mov
jnp
es
jb
adc
jmp
ret
inc
jg
pop
ds
icebp
or
imul
daa
dec
ja
adc
jl
cmp
jge
cmc
mov
xor
cmp
int
shlb
adc
out
fisttpl
push
or
mov
xor
notb
jne
lcall
xor
lret
dec
rcrb
jbe
jg
push
sbb
mov
prefetchnta
fisttps
test
scas
add
pop
shlb
out
adc
xlat
stos
dec
daa
pop
pushw
cmp
pop
add
mov
cmpsb
cmp
xor
es
pop
pop
push
outsl
xor
jo
clc
nop
jno
sahf
and
xor
movsb
pop
or
push
cmpl
push
xchg
or
xchg
jae
sub
dec
add
dec
dec
mov
cmc
and
fidivrs
daa
pop
gs
and
dec
rcrb
shll
push
pushf
pushf
movl
jle
pusha
pusha
movl
mov
mov
mov
lea
jmp
add
mov
add
pop
adc
js
inc
xor
push
aas
adc
sub
or
test
mov
xlat
xlat
sbb
and
sbb
sub
mov
mov
test
pop
and
out
jge
movups
adc
adc
stc
out
gs
std
bound
lds
out
rcrb
rcrl
inc
push
insl
fdivrp
xchg
into
rolb
push
inc
push
add
mov
cmpsb
cmp
or
cmp
push
mov
scas
dec
popa
mov
pop
add
jo
xchg
xor
xchg
mov
lea
arpl
mov
mov
mov
mov
je
or
xor
dec
rcrb
rcl
sar
mov
clc
cmp
test
stc
repnz
pushf
movb
jmp
inc
dec
pop
cmc
xchg
sub
bound
daa
jb
xor
es
mov
pop
addr16
add
inc
sbb
pop
dec
pop
addr16
sub
lahf
subl
fistpl
mov
test
pushf
jmp
bound
data16
popa
ss
push
cmp
nop
out
mov
arpl
jle
movsl
sbb
push
cwtl
xorb
mov
int
push
or
imul
xchg
leave
dec
aaa
shr
xor
cmp
and
pushf
jecxz,pt
dec
rclb
jae
jb
xor
fs
insb
add
sbb
hlt
push
pushf
pushf
pushf
lea
jmp
jmp
xchg
jmp
lea
jbe
cmp
rcl
neg
sub
rol
bt
cmc
bts
mov
btr
rcl
pusha
clc
mov
btr
call
mov
movl
pushl
ret
mov
call
jbe
icebp
fnstcw
or
dec
inc
inc
popa
or
or
push
cwtl
pminub
fiaddl
outsl
mov
jb
repz
cmp
scas
sub
sbb
dec
cmp
popa
andb
mov
or
movsl
lods
jnp
movsl
jns
xchg
add
es
cld
daa
xchg
imul
mov
rolb
sub
xor
test
sahf
mov
sbb
push
ss
in
shl
adc
test
loope
outsb
xchg
pop
insb
xorl
in
mov
ss
ja
jbe
xor
dec
rclb
jns
cmp
cwtl
xor
xchg
dec
pop
lds
dec
lahf
mov
cld
and
or
std
and
push
inc
push
or
cltd
dec
adc
jnp
add
insb
fcoms
arpl
mov
in
ss
jne
jae
ljmp
jmp
js
pusha
adc
cmpsb
add
call
sbbb
pusha
fwait
loop
and
and
push
pop
mov
jecxz
dec
rclb
pushf
movl
pushl
pushf
push
movb
lea
jmp
movzwl
lea
clc
cmc
mov
pushl
stc
pushf
add
call
call
jns
and
jmp
ret
insl
push
daa
dec
sbb
push
or
sete
mov
insb
rcl
sub
out
in
pop
fildl
mov
jmp
lret
insb
test
cli
daa
pop
jns
mov
imul
inc
cmpsb
js
mov
sbb
mov
cld
arpl
in
cmpsb
jg
xchg
dec
adc
imull
lods
ss
repnz
mov
mov
inc
in
movl
mov
push
movb
lea
jmp
pusha
jmp
dec
pop
dec
pop
sbbb
fmuls
pushf
or
fcmovne
pop
dec
pop
or
add
sbb
mov
rolb
sub
in
out
push
dec
fidivrs
pop
pop
ja
shr
xchg
push
ljmp
sbb
xchg
testl
pop
and
lret
lret
pop
push
dec
aad
cmpsl
or
sbb
fildll
fiaddl
repnz
les
js
ret
lods
mov
jle
fmull
pop
mov
ss
xchg
leave
rorb
leave
xchg
dec
rclb
call
pushf
movl
pusha
mov
pushl
lea
jmp
lea
jne
shr
bts
stc
pusha
mov
test
pushf
cmp
add
call
dec
inc
ffree
inc
and
stos
mov
mov
dec
push
test
mov
mov
jae
mov
fcompl
shl
out
icebp
in
test
jne
popa
test
pop
or
cltd
lds
mov
push
sub
fiaddl
cltd
test
sbbl
sbb
dec
rclb
fs
cli
popf
mov
adc
pop
ret
xchg
enter
ret
push
and
in
das
push
sub
jg
and
mov
popa
jecxz
dec
mov
pop
fsub
mov
pop
pop
pop
sbb
or
dec
in
faddp
mov
fadd
notl
pusha
loopne
mov
sbb
push
fimull
mov
flds
movsl
cmp
dec
rclb
bt
rol
clc
not
movb
ror
call
sbb
mov
dec
addr16
inc
xchg
pop
add
push
into
or
roll
fcomi
dec
mov
in
sbb
jl
out
jmp
sub
sbb
cmpsb
cmpsb
into
lret
cwtl
mov
xchg
dec
jnp
jmp
fcompl
jge
mov
mov
rorb
testb
mov
arpl
call
dec
dec
push
mov
inc
pop
dec
or
jno
jo
fstpl
push
adc
sub
aam
pop
pop
pop
daa
and
ret
xchg
sbb
xchg
cmpsb
xchg
in
and
fimuls
add
adc
call
clc
nop
jno
jbe
std
xor
push
xlat
jmp
hlt
popf
loop
lock
popf
lods
sub
and
add
and
push
cmp
rolb
enter
aas
push
sub
mov
sbbb
rcr
dec
rclb
add
inc
pop
jecxz
or
jno
out
xor
jle
jle
jo
icebp
gs
xor
imul
repnz
jo
sbb
jno
shrb
push
movsb
andl
sbb
sub
rcr
pop
add
idivb
mov
test
imulb
jmp
stos
dec
test
in
iret
xchg
mov
dec
rclb
push
mov
cmp
pushf
lea
jae
test
add
push
pushf
pusha
mov
pushf
lea
jmp
jmp
stc
ljmp
mov
and
ss
popa
jns
mov
cli
sbb
jno
enter
aad
pop
jg
push
inc
push
cmpsl
data16
lods
aam
sub
cmpb
ss
fbstp
push
outsl
adc
adc
popa
pop
xor
pop
and
inc
cmp
and
nop
xchg
cmpsl
outsl
sbb
cwtl
mov
cwtl
mov
jg
stos
mov
out
jne
mov
dec
xchg
xor
xor
nop
loop
data16
dec
gs
popa
addr16
outsl
js
add
sbb
xchg
or
cwtl
fdivr
xchg
add
cwtl
add
push
leave
das
jno
loopne
mov
sti
jb
adc
sub
jne
mov
mov
dec
jg
mov
sub
xchg
into
pop
out
dec
xchg
mov
mov
popf
or
mov
push
insl
movsl
popf
dec
jnp
pop
cmp
and
hlt
xor
shlb
xchg
lea
into
scas
lea
jge
aaa
clc
add
call
xchg
jmp
push
out
cmp
in
mov
xor
pop
mov
cmp
dec
mov
dec
xchg
outsl
cmp
test
call
xchg
ret
int3
sbb
js
pop
repz
cmpb
cmp
in
dec
push
xchg
pop
sbb
cld
hlt
xor
mov
add
adc
sub
mov
add
scas
jo
mov
jae
or
dec
and
inc
sbb
outsb
shrb
test
dec
xlat
push
sbb
add
bound
adc
jb
jg
cmp
mov
xor
lea
mov
insb
add
sti
ret
fcompl
in
pusha
sbb
fistpl
dec
outsl
jno
adc
ss
iret
sub
out
mov
adc
mov
mov
add
jbe
and
cmp
ja
ret
int
aad
dec
jne
inc
dec
popl
xchg
jns
lahf
cmpl
adc
mov
add
loope
cld
stos
shrl
cmp
sti
ret
addr16
or
add
xchg
mov
mov
mov
sub
dec
js
or
adc
inc
push
jecxz
incl
roll
xor
outsb
test
rorl
push
or
mov
mulb
mov
mov
int
xor
adc
dec
rorb
mov
mov
movl
pushf
pushf
lea
jmp
call
mov
pusha
push
pushf
pushf
lea
call
pusha
jmp
pusha
pushl
mov
pushf
lea
jne
pushf
stos
pusha
pushf
movw
pushf
lea
jmp
and
icebp
imul
pop
or
in
sbbl
or
adc
in
push
xor
ss
xor
jg
dec
cmp
cmp
popf
movsb
dec
testb
sub
xor
sbb
mov
inc
outsl
dec
pop
repz
lds
or
jnp
fcmovnbe
jmp
sbb
adc
pop
jl
in
stos
mov
xor
hlt
adc
sub
int
movb
pop
push
call
lea
call
pushf
test
sub
pushf
mov
movb
lea
jne
pusha
call
push
push
inc
push
push
xor
fs
insb
add
add
fs
imul
add
mov
sub
add
orl
add
shl
inc
not
mov
mov
pusha
pushf
lea
call
push
mov
pusha
adc
movb
lea
jae
jmp
in
pusha
movb
pushf
pusha
movl
call
out
sbbl
cmc
jae
fsqrt
xchg
pop
fisttps
ret
aam
sbb
or
popf
xlat
negl
lcall
aad
cmp
popa
jne
push
adc
outsl
outsl
pop
aas
arpl
and
jo
daa
cli
mov
pop
adc
mov
push
sub
pop
mov
mov
sub
call
popf
out
or
jg
pop
mov
addr16
nop
sub
and
shl
lret
sub
mov
cwtl
mov
mov
dec
rolb
push
mov
lcall
mov
mov
sahf
cmpsb
mov
cld
mov
or
ljmp
imull
cmp
jl
int
iret
lock
in
loopne
dec
ljmp
xchg
mov
icebp
and
cmc
jae
jnp
pop
cmpsl
scas
cmp
imull
xor
xor
stc
xchg
dec
inc
pop
test
and
or
pop
mov
mov
or
or
rcl
xor
loop
add
push
xlat
enter
push
dec
mov
pop
jl
mov
hlt
inc
sub
repnz
in
sahf
mov
and
cmc
out
xor
sub
pushf
mov
dec
adc
mov
sbb
push
mov
cmc
xchg
lock
dec
rorb
xlat
xchg
xor
and
faddl
nop
add
test
mov
insb
jb
sub
sub
mov
and
popa
jo
pop
adc
arpl
or
scas
dec
fcmovbe
jl
pop
loopne
repz
repnz
mov
cli
xor
int3
into
sub
sbb
bound
inc
lcall
or
xchg
rorb
pushf
lea
call
cmp
jg
xor
mov
test
adc
adc
pop
adcl
lret
mov
add
sub
notb
js
push
push
sti
adcl
or
cmp
mov
add
cmc
popf
movsl
insl
int3
mov
movlps
lods
and
adc
add
fiaddl
mov
pop
dec
rorb
enter
sti
bts
seta
bsr
test
lea
add
bswap
cmp
mov
jmp
adc
xchg
rcrl
dec
fmuls
sbb
pop
dec
and
xor
or
push
jbe
fldl
xor
mov
sahf
and
aaa
dec
push
push
gs
push
push
mov
xor
lds
xor
mov
insl
xor
icebp
out
aaa
push
jns
or
cmp
out
outsl
jle
std
sub
mov
xlat
push
insl
lods
mov
lods
les
mov
sahf
mov
into
movsl
fwait
js
jl
pop
pop
fcmovnu
std
adc
cmp
divl
aaa
repz
and
mov
cmp
lods
xchg
std
lahf
sbb
or
mov
lea
mov
pop
test
or
push
xchg
stos
aad
inc
into
dec
int
sbb
dec
enter
or
test
fsub
sti
xchg
xchg
movq
push
imul
dec
ret
push
sub
xchg
cli
pop
mov
mov
loop
dec
xor
push
cli
jnp
lcall
and
into
adc
aas
push
jo
imul
ret
jecxz
sbb
add
ret
lcall
xor
outsb
std
ljmp
sub
out
push
cmp
loopne
and
in
dec
ds
jbe
cltd
int
adc
lods
and
and
dec
fldl
loopne
sbb
rorb
jbe
xchg
shll
in
mov
cld
daa
cmp
lods
mov
jbe
scas
cli
pop
adc
xor
cmp
enter
push
push
xor
sbb
dec
addr16
dec
sub
imul
jb
iret
shll
out
sub
push
cmp
xor
mov
repz
dec
rorb
jmp
hlt
sti
add
add
add
js
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
inc
das
add
inc
in
add
cltd
movl
add
cmpsb
add
add
add
call
push
xchg
or
or
in
hlt
bound
cmp
mov
stos
je
pop
inc
add
mov
jnp
out
jne
out
mov
pusha
ret
cwtl
cmpsb
mov
lret
lahf
xchg
cmp
mov
jns
sbb
nop
das
pop
shlb
xchg
jg
les
shll
in
cmc
ljmp
dec
aas
add
fadds
jle
inc
fidivrl
fwait
mov
cmp
into
lods
pushf
mov
jne
push
inc
push
lea
inc
adc
fiaddl
adc
sbb
inc
mov
jae
imul
dec
fiadds
mov
lret
adc
and
ret
cmpsb
pop
movsb
sub
idivl
shll
cwtl
in
out
jno
in
in
je
fmull
push
jmp
mov
in
push
sbb
adc
addr16
aaa
seto
push
enter
inc
pushf
add
jmp
inc
dec
adc
mov
scas
out
or
arpl
lods
icebp
test
jbe
dec
cmp
push
fsubs
rcll
cmp
repz
xor
inc
dec
pushf
mov
fldcw
repnz
adc
push
mov
stc
out
fnstcw
rolb
lea
jne
jmp
push
ja
mov
push
or
pushf
jno
cli
outsb
jle
ljmp
jae
repz
push
pop
rcr
sbb
call
pop
enter
setb
push
adc
sbb
insl
mov
adc
xchg
andl
mov
sbb
aas
cs
mov
mov
cmpsb
mov
loop
je
cmpsl
cmp
and
jg
pop
dec
adc
mov
add
cli
add
mov
and
and
pusha
dec
rolb
sbb
decl
test
xchg
mov
decl
push
dec
inc
dec
xor
cs
insb
add
pop
add
xor
jecxz
push
cmpsl
jge
clc
out
cli
imul
inc
idivl
enter
in
dec
out
xchg
loopne
jno
jne
mov
xor
mov
mov
lods
mov
push
mov
cmp
stos
and
cld
xchg
pop
repnz
jb
nop
adc
cmp
push
pop
bound
mov
inc
pop
mov
movsl
getsec
mov
mov
dec
and
and
push
push
sbb
popf
test
ret
cltd
xchg
sbb
jg
dec
push
sub
sbb
das
int
xchg
aas
sbb
out
es
dec
rolb
bswap
bswap
pop
push
jmp
jp
loopne
sub
lret
push
add
adc
stc
jmp
xor
jmp
adc
movsl
addb
jns
cmpsb
xor
push
into
cmpsb
cmp
es
lods
push
and
xchg
xor
adc
lds
fwait
and
sbb
mov
loopne
int3
cmpsl
add
loopne
and
jbe
rclb
hlt
testl
rorb
leave
shrb
xor
inc
adc
xchg
pop
inc
mov
movups
pusha
add
and
loope
pushf
jle
dec
rolb
mov
push
arpl
jb
jl
cmc
lods
mull
push
int3
hlt
mov
jmp
aas
or
leave
push
and
roll
xchg
test
cmove
mov
hlt
mov
insl
mov
cmc
int
stc
jge
inc
call
icebp
call
sub
aas
mov
js
jle
inc
pop
aaa
pop
sahf
xlat
cmp
cmc
out
jno
or
xor
icebp
insb
icebp
mov
xchg
cmp
inc
adc
insl
xchg
push
dec
rolb
mov
shll
cmp
lods
dec
mov
pop
mov
adc
insl
push
ret
push
lret
lahf
sbb
cwtl
rcrl
cmp
dec
mov
jne
je
jo
icebp
test
sub
pop
mov
test
repnz
mov
mov
rorl
test
lea
jg
dec
push
call
push
sbb
int3
xor
pop
rolb
xchg
test
into
push
dec
pop
and
dec
mov
mov
repnz
hlt
push
jmp
jno
lret
inc
cmp
cmp
imul
in
push
repz
xchg
or
mov
mov
movsb
dec
push
pop
je
sub
xor
mov
sbb
dec
cmp
push
sbb
xchg
aas
mov
jle
mov
dec
rolb
push
lret
not
and
dec
push
push
and
cmpb
push
adc
mov
cmp
fdivr
fsub
and
and
cmp
sbb
mov
adc
mov
lock
or
push
cmp
push
sub
xchg
cmp
mov
ds
xlat
fildl
ret
fwait
les
or
shlb
shr
jl
inc
push
ret
adc
iret
sbb
shll
fs
pop
xor
fdivl
pop
js
ljmp
clc
mov
pushf
dec
daa
xchg
aad
mov
xor
push
aas
mov
in
push
cmp
sub
xchg
inc
sbb
stos
dec
adc
jns
add
lods
fmul
push
jo
fwait
test
test
orb
add
test
jmp
lea
jne
call
ret
adc
lret
xchg
jne
pop
push
jl
mov
xchg
mov
jne
and
and
lret
mov
fsincos
icebp
xchg
popa
sbb
icebp
cltd
sub
dec
pop
dec
lahf
ret
cmpsb
loopne
mov
inc
mov
mov
mov
adc
cmp
cmp
faddp
flds
sahf
rolb
jmp
xlat
mov
mov
xchg
fnsave
fmuls
ret
sbb
cmp
sbb
mov
lcall
cmc
in
rorb
je
jb
cmp
leave
stc
test
rcll
xchg
stos
cld
aam
adc
xchg
clc
add
pop
sbb
pop
inc
lahf
andb
filds
pop
les
orl
outsb
sub
pop
and
cltd
rcrb
int3
pop
xchg
sbb
push
insl
je
mov
adc
loopne
imul
dec
aas
stos
aaa
pop
sbb
mov
clc
and
pop
sub
xorl
sar
pop
push
lcall
mov
mov
cli
mov
pop
inc
mov
or
pop
push
cmp
mov
bound
aaa
push
jmp
mov
aam
cmp
pop
inc
cmp
cli
add
paddsb
lea
sbb
mov
pop
mov
insb
dec
push
cli
notl
adcl
sbb
ljmp
test
inc
pop
dec
rolb
inc
and
lahf
pusha
movl
pushf
lea
jmp
sbbb
inc
mov
je
mov
arpl
jno
jle
insl
or
stos
pop
xor
sbb
test
dec
sub
mov
cltd
cmc
mov
inc
or
jmp
movb
int3
mov
mov
cmp
mov
dec
push
and
scas
int3
mov
roll
adc
mov
mov
mov
aaa
test
push
mov
xchg
pop
mov
dec
fwait
dec
push
sub
lcall
pop
ret
fiadds
pop
dec
rolb
in
arpl
es
aas
pop
mov
leave
xlat
test
adc
nop
dec
push
iret
xlat
sub
ss
dec
fbstp
inc
push
scas
jno
push
mov
push
neg
cmp
mov
int
in
jo
cmp
cmpsb
xchg
loopne
cmovns
cmpsl
mov
rcr
call
bound
jbe
lods
xlat
adcb
arpl
push
or
inc
pop
mov
lea
and
cwtl
in
cmp
push
mov
jbe
inc
and
mov
xchg
push
ss
roll
insb
jge
sub
sub
jnp
or
jo
xor
push
mov
mov
mov
mov
pop
daa
test
fiaddl
dec
sarb
adc
lahf
cmpb
icebp
std
sahf
mov
adc
sarl
roll
popf
push
pushf
mov
sbbl
pop
jmp
sbb
mov
testl
fcoms
and
xchg
lods
dec
out
popa
popa
ret
imulb
mov
jo
fisubrs
or
clc
andb
pop
shl
xor
andb
adc
filds
aas
cmp
movsb
stc
lds
sub
aam
push
sarl
or
add
pop
dec
ror
lods
xchg
mov
or
jmp
push
pop
out
cmp
push
jae
psrlq
loopne
dec
sarb
cs
not
stc
ror
pushf
pusha
lea
jl
dec
bt
cmc
not
cmc
cmc
jmp
lea
call
call
movw
lea
je
push
add
pusha
cmp
mov
pusha
lea
jb
stc
clc
jmp
dec
add
add
adc
pop
cmc
or
jne
adc
aas
cs
and
dec
sub
or
out
xchg
imul
jo
fldt
mov
and
adc
data16
sub
pop
add
bound
xchg
int3
nop
mov
int
mov
dec
dec
sarb
jecxz
and
add
pop
dec
insb
in
ja
ds
mov
sub
test
imul
cmp
repnz
subl
push
push
xlat
shl
int
sarl
sub
lea
aad
sub
int
aam
outsb
std
xchg
mov
scas
call
lahf
jns
mov
inc
push
and
rcr
sbb
sub
call
fmuls
and
leave
jmp
idiv
outsb
jnp
stos
inc
lods
add
mov
mov
movsb
lock
mov
outsb
adc
ds
bswap
test
fldenv
icebp
cmp
pop
mov
xchg
leave
lret
mov
inc
sahf
push
aam
or
loope
and
mov
mov
in
sbb
adc
and
arpl
pushf
mov
jl
ja
jmp
shll
sbb
xchg
add
or
add
sbbl
loopne
cmp
mov
push
sub
notl
xchg
xor
int
push
adc
jge
fisttps
and
loopne
jmp
sub
pushl
pushl
pushl
popl
test
cmp
pusha
jmp
add
add
sub
add
add
add
add
add
fs
add
popf
cmpsl
add
or
add
insb
icebp
add
stos
incb
add
add
je
add
cmp
add
sbb
add
jl
add
push
loop
add
add
test
add
nop
repz
sub
add
add
push
adc
xchg
mov
std
movsl
mov
push
mov
pop
cmpsl
rcrl
or
cs
jg
xchg
mov
inc
aaa
and
pop
mov
xchg
rcrb
and
cs
std
adc
sbb
call
nop
mov
test
xor
xchg
jnp
jbe
shlb
aaa
and
loopne
mov
cmp
jnp
mov
test
stc
bsf
mov
clc
cmpb
call
push
dec
dec
dec
dec
inc
push
cs
insb
add
enter
rcl
neg
cmc
sar
pushf
sub
movb
not
cmc
pushf
rol
stc
jmp
int
movsl
dec
scas
pusha
pop
add
dec
rol
pop
dec
pop
enter
mov
mov
cld
outsl
adc
jp
int3
cwtl
cli
cmp
pop
std
flds
xchg
or
push
push
and
or
divl
mov
push
mov
or
insb
mov
or
push
mul
aas
mov
das
mov
lea
adc
and
rcrl
mov
faddl
cli
sbb
jp
adc
sub
jmp
movb
clc
mov
jmp
adc
mov
pusha
cmpb
call
lea
jae
push
cmp
call
pushf
jmp
addb
movsb
jge
dec
into
pop
or
pop
push
mov
fsts
call
mov
in
fwait
int
stc
lea
push
xor
mov
shll
mov
fistpll
inc
repnz
sub
es
in
ror
divl
xchg
into
adc
test
xor
shr
or
mov
push
add
sbb
dec
fs
das
push
je
mov
xor
push
mov
movsl
jne
xchg
xor
push
popa
mov
adc
or
outsb
hlt
dec
fstl
dec
and
and
popf
jp
adc
ror
xchg
dec
call
mov
xchg
dec
sarb
push
sti
pusha
imul
add
adc
xlat
dec
push
add
ret
xlat
cmpsl
mov
sbb
gs
xchg
jmp
pop
sub
lods
mov
call
adc
xchg
das
repnz
jmp
fstl
mov
cmc
or
push
cmp
sbb
inc
jno
das
pusha
cld
xchg
imul
andb
lock
mov
shrb
sbb
mov
mov
mov
loopne
lock
lret
in
iret
in
mov
jb
dec
sarb
add
pushf
or
call
add
pop
arpl
insl
outsl
fs
add
call
mov
inc
push
mov
daa
inc
sahf
or
dec
sbb
push
dec
sbb
inc
aad
aas
xor
cs
fld
sbb
sub
dec
sbb
shrl
es
outsb
and
gs
or
hlt
test
jmp
int
outsb
add
es
mov
mov
mov
xorb
push
cmc
stos
lea
notb
xchg
enter
aas
sbb
jg
in
mov
mov
xchg
clc
xor
cmc
popfw
pusha
inc
pushf
movw
jmp
stos
movsb
xor
fsubrs
add
dec
xchg
dec
adc
adc
mov
xchg
mov
sbb
shlb
cmp
stos
xor
jmp
mov
bound
lods
dec
or
test
and
mov
adc
leave
imul
cli
arpl
out
inc
jg
fcoml
decb
mov
cltd
mov
xor
mov
movsb
and
in
xchg
jp
pop
add
pop
and
test
movsl
or
or
pop
outsb
mov
pop
xor
js
fdivl
xchg
in
dec
push
das
nop
cld
in
clc
push
mov
mov
imul
test
pop
cwtl
ficompl
sarb
mov
push
notl
iret
outsl
mov
xchg
dec
shlb
pop
lea
jg
je
pusha
mov
cmp
lea
pushf
pushl
ret
push
jmp
pusha
push
add
movw
mov
push
lea
jmp
cmpb
jmp
add
push
jne
fs
jb
popa
je
push
gs
outsb
je
popa
insb
add
or
add
cmp
add
pushf
mov
pusha
mov
lea
jmp
lods
mov
or
jnp
and
lret
sahf
xchg
dec
rol
sbb
mov
clc
fidivs
stc
scas
jae
xor
pop
ds
dec
mov
inc
push
sqrtps
adc
ret
pop
xchg
testb
test
sub
pushf
dec
sbb
rclb
push
pop
icebp
cmp
ja
mov
test
imul
pushf
lea
out
mov
inc
cmp
lea
mov
lds
jl
imul
fldl
jno
das
or
push
or
push
pop
xor
xor
iret
sub
push
xlat
cwtl
outsb
push
lret
jmp
imul
into
xchg
enter
test
adc
or
dec
shl
push
or
dec
shlb
lcall
rcr
not
rcl
push
bt
clc
ror
jmp
lea
jne
sar
setb
btc
neg
mov
bt
bt
or
push
movl
pusha
movb
lea
je
pushf
pop
movzbw
lea
bswap
lea
movzwl
movzbl
lea
pushf
movsbl
movsbw
mov
pusha
pusha
jmp
push
pushf
movl
call
arpl
xor
jae
clc
cli
scas
outsb
in
arpl
xchg
add
clc
push
cld
cwtl
shll
popf
sub
inc
outsb
nop
inc
arpl
repz
jne
mov
arpl
clc
adc
arpl
add
clc
iret
aaa
fwait
push
arpl
adc
jno
cmp
adc
das
add
clc
ljmp
das
add
clc
mov
outsl
daa
arpl
cmp
hlt
loopne
aam
sub
jo
clc
data16
scas
arpl
add
clc
xor
mov
das
add
mov
arpl
add
mov
arpl
clc
sub
mov
add
jnp
mov
arpl
dec
das
add
clc
sysenter
xorl
xchg
dec
das
add
clc
lock
xchg
arpl
jp
add
js
cld
cwtl
and
pop
adc
inc
mov
pusha
arpl
add
clc
cmc
cmp
pop
arpl
clc
mov
push
add
test
add
mov
arpl
add
clc
sarb
ljmp
fidivrl
and
and
xchg
xor
repnz
es
lds
lds
mov
sbb
inc
cmp
add
cli
lret
testb
lods
xchg
dec
push
imul
dec
dec
inc
adc
outsb
es
push
enter
outsl
das
sbb
lods
lret
xor
add
cmp
pushf
cmpsl
and
push
jbe
lods
imulb
sub
sub
mov
fwait
mov
xor
in
mov
ja
fists
xlat
add
inc
sub
pop
push
mov
in
inc
popf
jae
rclb
mov
int3
mov
push
jge
push
mov
mov
mov
stc
loope
pop
sti
cmpsl
jp
xchg
loope
add
lcall
sbb
lods
push
push
into
push
dec
xchg
dec
dec
shlb
and
adc
aad
xor
ret
icebp
xchg
ret
sbb
mov
mov
iret
xchg
mov
rcl
jmp
movb
and
and
ret
incb
mov
dec
in
dec
imul
dec
adc
aas
inc
cltd
sti
xchg
or
jns
sbb
and
sub
inc
mov
sbb
out
lods
jp
inc
pop
jae
jno
inc
repnz
dec
aam
rorb
ss
and
popa
leave
mov
adc
add
lods
test
or
lret
adc
dec
shlb
inc
sub
cmp
lcall
cwtl
dec
xchg
xchg
xchg
shlb
cmp
mov
xor
jo
aaa
mov
cmp
xchg
dec
cmp
shl
xchg
sub
or
mov
mov
pusha
add
ss
aam
jno
adc
mov
sbb
jl
sub
std
push
pop
mov
mov
jle
je
xor
cmpb
xchg
bound
mov
jle
out
loope
inc
xchg
in
aam
idivl
mov
jp
iret
mov
pop
pop
bound
and
daa
mov
cwtl
pushf
jle
fs
xchg
lahf
add
add
adc
lods
or
sbb
dec
xlat
sbb
insl
push
or
jle
mov
pop
imul
scas
shrb
test
repz
fiaddl
push
push
ret
into
mov
inc
jae
pop
shrl
in
int
mov
scas
xor
jge
dec
ret
mov
pop
fists
jno
mov
xchg
daa
dec
pop
iret
cmpsl
mov
add
sub
xor
shr
stc
mov
mov
loop
xchg
cli
cwtl
movsb
push
sub
cli
push
push
xchg
push
mov
push
mov
movsl
shll
cmp
daa
ds
std
fnstsw
jg
shlb
repz
inc
push
into
shll
add
xchg
rcl
dec
cmp
repnz
sub
or
sbbl
std
pop
negb
sub
lods
lret
xlat
dec
shlb
fwait
pop
dec
inc
roll
adc
push
inc
adc
test
xlat
cmpsl
ds
mov
xchg
sbb
xchg
xor
mov
inc
ret
sti
daa
pop
outsl
mov
add
push
or
lds
out
ror
imul
jmp
mov
pop
das
hlt
les
or
jg
xor
daa
pop
cmpb
rorl
js
ret
pop
xor
pop
and
adc
push
outsb
push
gs
fisttpll
loope
inc
jl
fisttpl
addr16
imul
pop
add
sbb
jno
xchg
shrb
sti
daa
mov
fbld
cwtl
mov
pop
daa
test
daa
mov
inc
ds
dec
lds
or
jg
loope
outsb
cmp
mov
cmpsl
jl
adc
adc
jno
mov
mov
imull
outsl
jmp
imul
bt
xor
bt
bt
clc
call
mov
mov
stc
add
test
push
mov
shld
pushl
pop
mov
pushf
clc
clc
push
cmp
pushf
movb
lea
jbe
jmp
cmp
push
push
call
sbb
cmp
xor
fs
in
fs
les
sbb
bound
pop
fwait
mov
mov
xor
sbbl
mov
jl
mov
and
xchg
mov
mov
orl
bound
jmp
lea
js
pusha
rep
pushf
movzbl
jmp
push
adc
add
movsl
mov
sti
stos
stc
and
mov
int
lahf
repz
gs
out
jae
stos
ds
and
in
cltd
addl
mov
dec
ds
xor
ja
ljmp
scas
xchg
adc
scas
add
pop
add
mov
cmp
push
lods
adc
fs
lret
ror
insl
jno
push
call
sbbb
in
sti
fnstsw
sar
pusha
inc
sarl
pop
pop
sbb
mov
cld
mov
sbb
or
jmp
jp
jl
ss
push
adc
adc
sbb
mov
enter
arpl
test
jecxz
push
test
xor
loope
faddl
mov
fdivrs
ljmp
mov
aaa
xor
and
push
daa
cmp
and
push
pop
int3
mov
mov
pushf
in
xor
mov
test
loop
into
xor
sarb
js
push
fwait
sbb
insb
push
jbe
mov
lret
cli
cwtl
call
mov
mov
mov
scas
icebp
subl
sub
or
out
call
ds
andb
pop
cltd
imul
lods
xchg
mov
jne
lret
mov
add
adc
aaa
ja
neg
mov
test
shrb
scas
lea
je
cmc
and
mov
mov
shl
rol
add
jmp
movl
movb
pusha
lea
jmp
setp
inc
call
jmp
call
push
pushf
test
fs
sub
ds
sub
cmp
sbb
test
cmp
pop
push
sub
add
in
xchg
jnp
mov
imulb
int3
aas
sub
out
imul
hlt
pop
clc
movsl
cmp
out
test
sub
mov
clc
outsl
pop
aas
je
cmp
jp
mov
movsl
dec
dec
push
add
movsb
xchg
jb
in
mov
inc
dec
nopl
inc
xchg
add
sbb
dec
in
imul
jp
movsb
lds
xchg
jl
jl
xchg
cld
js
scas
adc
jbe
idivb
cli
icebp
scas
mov
pop
xor
into
test
jl
mov
mov
lcall
inc
cltd
hlt
movsl
stos
and
jnp
je
cmp
inc
stc
fwait
in
stos
test
cmp
cwtl
sbb
and
mov
mov
les
stc
push
jmp
mov
xlat
cmc
cld
adc
cmp
mov
cmp
test
pop
sti
negl
push
hlt
jle
orb
add
lret
repnz
cmp
rclb
jp
sub
into
mov
bound
or
mov
add
sarl
xchg
sbb
out
mov
inc
jns
dec
andnps
cmc
inc
jp
jne
cld
fdivrl
push
cmc
je
xchg
je
fisubl
imul
sbb
xor
pop
and
xchg
inc
mov
adc
pushf
push
divl
pop
andb
sti
mov
mov
xchg
mov
iret
mov
mov
jnp
and
xchg
stc
pushf
adc
or
sbb
mov
push
insl
sbb
mov
or
hlt
test
add
cmc
cmp
jbe
pop
ja
mov
out
and
mov
fs
lock
cmp
cmc
mov
sub
push
xor
in
out
lods
out
inc
adc
fistpll
cmp
dec
cli
enter
aam
pop
and
or
pop
pop
jae
cmpsl
fiaddl
inc
push
hlt
mov
popl
push
test
imull
out
aad
loope
lds
and
sub
mov
dec
xchg
pushf
pusha
pop
stc
inc
jecxz
jmp
mov
cli
fneni(8087
icebp
rcrb
xchg
mov
fsubp
cmp
jl
daa
xorl
jmp
das
mov
jge,pt
cmp
aas
inc
pop
mov
push
cmp
in
jbe
jnp
stc
call
push
lods
jns
std
sbb
repz
ljmp
dec
std
fsubs
std
xor
mov
fucomi
sbb
lods
mov
pop
sub
test
es
test
stc
cli
loop
add
dec
mov
cmp
xor
and
xor
xchg
in
adc
movsb
fxch
jmp
fists
fs
inc
cmp
dec
mov
or
pop
in
out
adc
je
pop
mov
mov
fchs
or
mov
sbb
xchg
sbb
sbb
push
and
sbbb
push
clc
sbb
and
mov
xchg
iret
push
xchg
push
shlb
test
cli
rcrl
test
jle
mov
adc
cmp
mov
push
lods
push
mov
mov
das
pop
dec
mov
mov
jno
lods
mov
adc
jp
dec
xor
push
pop
xchg
repz
imull
adc
ja
test
stos
xchg
xchg
add
paddd
cli
pop
inc
fadds
aaa
hlt
pop
fwait
jg
pop
aad
xlat
in
nop
cmp
repz
jl
bnd
lds
pop
adc
and
or
test
and
inc
cltd
or
ja
movb
pusha
movl
call
pushf
lea
call
jmp
add
add
add
inc
add
pusha
inc
add
adc
sar
add
add
add
pushf
bt
cmp
push
movl
lea
ja
pushf
inc
call
jmp
ret
adc
xor
ret
mov
dec
adc
or
or
adc
rorl
hlt
movsb
ffreep
int
inc
popf
rcrl
sbb
pop
les
arpl
test
xor
xchg
imul
add
dec
push
and
aas
dec
fstpt
mov
loop
mov
pop
dec
xchg
ljmp
enter
gs
mov
mov
fidivs
clc
out
and
sub
pop
xchg
lcall
js
test
jmp
imul
aas
sbb
js
xchg
push
xlat
pushf
pushf
sub
pusha
bt
cmc
cmp
movw
lea
jmp
in
cmp
lock
je
mov
in
ja
icebp
mov
pop
cli
mov
push
cmp
movsb
add
les
dec
insl
xchg
test
fstl
jne
add
adc
filds
in
sbb
dec
shlb
sub
in
rolb
add
test
ljmp
add
in
mov
dec
jns
repnz
in
cmp
cli
pusha
icebp
loop
mov
cmp
xor
pop
push
cmp
sahf
push
aam
sub
movsl
mov
sbb
sbb
mov
inc
jae
add
dec
jae
mov
test
repnz
cmp
inc
leave
daa
adc
test
mov
mov
pop
int3
mov
mov
mov
loop
push
iret
mov
inc
roll
add
sahf
je
mov
pop
xor
fmuls
out
bound
and
aas
and
mov
repz
arpl
and
or
cmp
fcompl
xlat
rclb
scas
insl
mov
jp
jp
xchg
stos
mov
jp
xchg
or
insl
mov
clc
mov
arpl
and
std
arpl
push
or
push
inc
les
popa
clc
fstpt
stc
push
hlt
rcl
adc
scas
icebp
pop
sbb
fnstenv
add
xchg
sub
xor
jae
add
add
pop
sbbb
dec
shlb
outsl
add
fs
je
clc
add
pushf
movb
lea
jmp
pop
push
rcl
sub
push
dec
cs
xchg
dec
nop
inc
rolb
xchg
subl
adc
inc
aam
mov
sbb
loop
out
cmp
lea
lods
jns
int3
hlt
sub
sub
mov
call
inc
cmp
mov
pop
jae
movsl
cltd
push
mov
add
sbb
lods
shr
xor
push
pop
icebp
repnz
pop
clc
pop
push
xor
mov
jne
xor
jae
repnz
jae
dec
shlb
ret
scas
in
adc
repz
sti
in
clc
pusha
cli
outsl
aas
fs
xor
jo
sbb
push
pop
test
xchg
insl
push
sub
mov
pop
pop
fucom
cld
sbb
mov
pop
insl
rorb
bound
ret
aad
mov
movsb
jns
add
test
stc
and
dec
shlb
jb
imul
data16
andl
fisttpll
sbb
or
jno
cltd
inc
inc
and
ret
xlat
push
xor
cmpsl
xlat
cli
mov
xorb
dec
hlt
cli
and
test
push
mov
jge,pt
jg
xchg
into
into
shlb
mov
insl
movsb
leave
scas
rclb
push
cli
inc
insb
pop
inc
push
lock
int
mov
leave
jbe
or
gs
jnp
mov
pop
push
inc
popa
in
loopne
mov
mull
faddl
inc
mov
mov
inc
push
insl
mov
mov
stc
cmc
loope
cld
pop
int3
jb
lods
inc
inc
cmc
pop
pop
cmp
sarb
ret
jno
xchg
sub
cmp
mov
negl
outsb
mov
shrb
push
cmc
int
adc
loope
jg
adc
test
and
inc
outsb
push
fdivrs
mov
jle
int3
pop
cmpsl
fcmove
xchg
dec
adc
shll
push
dec
shlb
ja
add
insb
bound
lea
jae
push
seto
mov
jmp
cmp
bt
add
push
lea
jne
mov
seto
pushfw
call
jmp
pop
pop
int3
adc
lods
fwait
jle
inc
sub
jg
xor
sub
push
leave
addr16
ds
std
and
add
cmp
mov
repnz
adc
adc
data16
add
insl
mov
xchg
icebp
lods
nop
pop
lahf
js
filds
sbb
out
lcall
dec
sub
fwait
sbb
and
pushl
lea
jmp
jmp
pushf
jmp
movl
pushf
jmp
js
loop
imul
iret
jmp
test
inc
cwtl
push
adc
nop
xchg
dec
push
and
mov
xchg
mov
imul
jmp
jne
call
fwait
pop
cmp
adc
add
sar
scas
xchg
mov
cltd
jge
fwait
gs
sbb
dec
sub
cmp
insb
push
int3
mov
lret
fwait
pop
xchg
scas
mov
dec
sub
inc
roll
ret
push
sub
pop
sti
jg
adc
in
icebp
out
dec
adc
lret
push
dec
shlb
sbb
adc
sti
nop
mov
mov
jmp
je
xor
cmp
mov
or
lret
pop
int3
sbb
fldt
scas
pop
inc
pop
sahf
lcall
inc
in
lret
les
and
push
adc
adc
ja
xor
inc
push
push
or
add
clc
mov
mov
fistl
or
sub
mov
into
mov
push
add
ljmp
int3
adc
sbb
xchg
xchg
outsb
arpl
in
fdivrs
mov
mov
ja
inc
dec
lcall
cs
iret
cwtl
lea
dec
sbb
mov
or
sub
cltd
adc
aad
inc
loope
mov
inc
cmp
pop
add
xchg
mov
push
mov
xor
jnp
adc
shlb
inc
adc
dec
or
dec
cmp
and
sahf
in
adc
sbb
jne
sub
cli
cmp
sub
testb
add
es
mov
insl
push
mov
or
push
scas
pop
sbb
fldl
es
push
repnz
xor
movsb
fcmovnu
subb
lods
adc
xchg
or
out
sbb
or
in
aam
jne
fwait
sub
lcall
xchg
int
mov
inc
xor
fldt
imulb
xchg
leave
sub
pusha
sub
outsl
clc
ror
pushf
push
dec
cmc
jmp
xor
cmc
mov
add
clc
push
call
call
test
and
mov
mov
cmpsb
jmp
sti
movsl
mov
loope
ret
inc
xchg
dec
out
addr16
rcll
adc
sbb
sbb
cld
loopne
leave
mov
imul
sub
fists
xor
mov
add
mov
or
sbbb
inc
insl
sub
test
leave
lea
aad
imul
push
push
mov
and
mov
mov
lret
adc
and
call
mov
mov
aaa
call
popf
mov
and
loop
mov
les
and
sbb
sbb
test
adc
pusha
add
mov
adc
and
cmp
pusha
lea
jmp
call
call
call
pusha
jae
mov
and
add
push
pop
ret
xchg
mov
dec
xor
lahf
int3
mov
imul
lock
jbe
lcall
out
mov
mov
nop
push
sbb
add
out
mov
adc
mov
into
mov
dec
cmp
outsb
shrb
bound
push
mov
bnd
fisubl
xor
aad
cmp
je
pop
lcall
jb
sti
pop
push
repz
mov
sub
fnstenv
push
cs
movb
imulb
adc
mov
xchg
push
dec
xchg
cmpsb
push
and
cmpl
aad
sbb
mull
or
cmpsl
sti
sbb
lock
cmp
stos
push
and
sub
fs
push
clc
push
adc
add
ret
stc
rorb
mov
enter
bound
sub
movsl
xor
iret
adc
sub
mov
cmc
stos
aaa
stos
dec
rcrb
inc
cs
lret
push
dec
cmp
cmp
dec
adc
mov
imul
inc
gs
imul
and
add
or
jno
xchg
xchg
inc
ficompl
jmp
mov
mov
cmpsb
jl
cmp
dec
push
push
pushf
sbbb
mov
dec
rcrb
pop
in
bts
mov
cmc
test
pusha
lea
je
or
shrd
btr
shr
add
call
pushf
mov
pusha
pusha
mov
lea
jmp
mov
push
lea
jmp
pushf
xchg
add
dec
push
test
sub
cmp
cmp
outsb
cmp
in
adc
into
inc
mov
leave
popf
sbb
pop
jns
sub
mov
mov
fnstcw
pop
mov
cmp
add
sti
mov
arpl
sub
mov
adc
add
mov
data16
in
mov
adc
push
fcompp
ret
push
int
jg
and
sub
and
stos
mov
ljmp
lock
in
jo
add
repnz
ficoms
bound
cmp
pop
jl
pop
xor
rolb
in
nop
repnz
filds
push
ret
loope
pusha
sarb
arpl
adc
pop
xor
xor
testb
adc
push
hlt
pop
push
pop
add
sub
das
xor
cmpsb
loop
push
xor
xchg
pop
xchg
dec
and
loope
sbb
adc
pushf
test
cmp
jle
dec
aaa
sub
fs
pusha
cmp
jle
pusha
lcall
data16
jg
rcrb
and
and
xchg
mov
nop
jmp
or
fs
nop
hlt
sub
xchg
fs
lahf
dec
cwtl
or
mov
cmc
mov
std
adc
push
jns
dec
mov
cmp
sti
and
test
dec
aas
cmp
mov
pop
cltd
test
jle
mov
insl
scas
icebp
out
or
in
inc
push
call
movl
pushl
pushf
movb
pushl
lea
jmp
pushl
xor
lea
cmc
cmc
pusha
or
pushf
call
inc
and
mov
ret
adc
adc
pop
dec
xchg
add
and
inc
push
mov
mov
mov
fxtract
mov
test
or
outsb
outsb
xchg
rorl
test
or
push
sarb
mov
mov
cltd
xchg
cmp
push
jb
inc
jbe
sub
pop
mov
stos
adc
out
jb
push
adc
sbb
lret
and
std
mov
cmp
andl
jl
add
fs
ja
cmp
stc
bt
add
cmp
stc
test
or
pushf
call
add
bsf
shr
pusha
not
mov
rcl
pop
sub
add
pushf
mov
lea
pusha
mov
pusha
lods
jmp
lds
jnp
sbb
pop
jge
pop
cmp
out
mov
ja
mov
mov
test
icebp
les
lret
scas
mov
adc
push
addl
shr
xor
and
lret
dec
inc
cli
ds
mov
fcmovbe
ret
pop
lock
jo
sbb
mov
lcall
jmp
cmp
stc
and
or
stc
cmpsl
je
pop
mov
push
dec
push
sahf
inc
xchg
les
lds
out
cmp
xor
out
fcmovnbe
lock
xor
jno
or
and
adc
jge
push
lods
movsb
lret
push
lods
int
mov
jb
mov
sbb
js
daa
cmp
test
mov
je
and
lods
popf
popf
adc
mov
jl
xchg
xor
fiadds
adc
cld
js
xchg
xchg
mov
jne
aaa
aad
rcrb
cltd
cmc
lea
jbe
fyl2x
and
mov
jb
xor
mov
sub
cwtl
dec
sbb
adc
fldcw
push
cld
and
sub
cmp
aaa
sahf
mov
rcr
mov
adc
inc
movsl
cltd
cmp
lds
push
dec
shrb
cwtl
xchg
and
jmp
mov
test
push
shlb
outsb
test
or
add
xchg
loop
cmp
mov
inc
arpl
sbb
loopne
push
and
fimuls
pop
mov
push
rol
or
lea
pushf
mov
mov
dec
fwait
into
pop
inc
adc
ret
mov
mov
outsb
xchg
stc
adc
outsl
repnz
mov
inc
xor
xor
fsub
mov
insl
mov
fs
mov
pop
out
dec
jb
mov
jo
lds
push
lret
pop
out
aad
mov
push
push
adc
cmp
cmp
pop
movsb
fucomi
jbe
les
mov
xlat
scas
inc
je
sahf
and
stc
or
push
mov
fwait
push
pop
loope
add
into
push
or
shl
xchg
push
scas
xor
push
stc
lea
call
push
pushl
lea
jae
cmp
sub
push
lea
jnp
call
push
jmp
movzbw
xor
lea
movsbw
pop
movsbw
movzbw
pop
not
push
pusha
mov
movzbl
pushf
mov
call
into
scas
jg
jne
shrb
data16
daa
aas
gs
jbe
jbe
sti
adcb
and
test
sarb
pop
dec
push
out
mov
dec
imul
out
jp
movsl
pop
pop
jnp
xchg
xchg
arpl
pop
push
cmp
add
in
int3
jnp
add
jg
and
fs
mov
adc
sub
sbb
or
sahf
cmp
sub
pop
sub
fsts
sbb
and
jnp
sbb
ret
jmp
jp
lea
mov
mov
dec
addr16
pop
inc
jl
popf
add
push
mov
xor
push
mov
push
add
and
or
int3
ret
popa
sbb
bound
mov
jp
sbb
lahf
aam
add
mov
clc
ljmp
xor
or
stos
mov
rclb
or
movl
and
lea
call
push
adc
pushf
pushl
lea
jae
jmp
lea
jae
jmp
add
add
inc
bts
push
rol
btr
mov
cwtl
pusha
daa
not
sub
jmp
push
push
pusha
or
jmp
lahf
mov
gs
jle
mov
jns
xor
fs
aaa
sub
inc
shrl
sti
jg
xor
bound
daa
and
pop
pop
add
add
sbb
sarb
aam
mov
lret
push
or
dec
scas
icebp
insl
int3
out
dec
rclb
inc
push
dec
pop
inc
sbb
stc
mov
pop
test
push
inc
aam
xchg
inc
xchg
mov
das
jbe
and
xor
mov
into
xchg
loop
ljmp
jecxz
and
add
push
packsswb
mov
xchg
leave
jne
sarb
lods
jp
mov
sbb
xchg
adc
add
or
int
inc
sub
dec
adc
pop
popf
cli
push
xchg
es
xlat
mov
mov
xchg
outsb
push
or
enter
or
push
push
pop
push
rcrl
fadds
fisttps
push
mov
jne
popf
dec
push
int
sbb
push
dec
push
dec
push
notl
adc
adc
imul
inc
and
sbb
mov
mov
or
mov
push
mov
sub
cmc
vmovaps
mov
int3
ret
ror
push
push
xchg
out
jno
pop
mov
mov
fcmovnu
mov
lock
mov
cmp
ss
push
cs
add
ss
jo
sbb
lods
test
mov
shrb
push
mov
pop
push
dec
xor
sbb
adc
ret
sub
jle
test
enter
aam
in
jecxz
rep
popf
lods
sub
ja
das
pop
adc
mov
or
add
cltd
pop
repnz
push
inc
fisubrs
loop
or
or
sub
fstp
pop
dec
xor
leave
mov
sbb
push
xor
mov
aad
fmulp
sarl
outsb
test
xchg
inc
sub
lods
xchg
mov
test
add
test
fadds
daa
test
dec
rclb
cmp
mov
icebp
out
inc
mov
jno
aas
in
daa
xor
sub
scas
std
sbb
jmp
adc
or
ds
jp
fcomip
xor
imul
mov
dec
inc
out
cmp
push
or
out
fimull
fsubrl
mov
push
sub
jmp
dec
rclb
outsb
insl
or
iret
push
inc
xchg
popf
mov
push
add
mov
adc
xor
pop
pushf
and
xchg
frstor
imul
sub
pushf
movsb
sti
mov
cmpb
stc
lret
inc
xor
lods
or
ljmp
lcall
xchg
mov
popa
inc
push
sub
aam
std
ret
xchg
xchg
imul
icebp
test
insb
sub
mov
dec
adc
sbb
push
dec
mov
fwait
jmp
mov
sub
pusha
sbbb
sbbb
pop
dec
rclb
aad
lret
sbb
jl
and
sbb
cwtl
lret
pop
mov
cwtl
cli
mov
dec
jnp
imul
inc
push
mov
std
mov
mov
in
mov
in
and
loopne
pop
stc
cmp
into
push
in
mov
ja
push
push
jp
loopne
subl
jno
xor
shrl
inc
jo
sbb
and
call
es
repz
dec
test
sbb
mov
addr16
push
add
jmp
push
in
cmp
mov
fistpl
dec
jae
mov
cs
inc
ja
subb
std
and
inc
jbe
stos
sahf
mov
sub
popa
es
out
aad
out
sarb
shll
enter
idivb
mov
lods
cmpsw
pop
clc
dec
scas
repz
mov
jbe
dec
rclb
cmp
fstp
push
add
test
std
dec
scas
mov
jp
push
push
popa
dec
add
or
cmp
cmp
fiadds
andb
cmp
mov
fimuls
mov
loop
mov
scas
nop
add
xchg
mov
mov
jle
or
xchg
outsl
mov
cmpb
das
push
lret
mov
dec
dec
stos
xor
dec
jge
mov
fistps
ds
out
xor
in
or
pop
loope
hlt
xor
hlt
or
push
cs
leave
cmpsb
xchg
mov
jae
mov
inc
gs
cld
pushf
movl
pushf
push
pushl
pushf
movl
mov
lea
jmp
xlat
mov
xor
cs
jmp
dec
fld
sbb
aad
adc
pop
lret
mov
pop
lea
xchg
js
rep
push
push
adc
daa
mov
pop
int
jecxz
pop
xchg
jns
or
arpl
nop
scas
cvtdq2ps
sbb
mov
sub
mov
hlt
lret
jmp
xor
outsb
test
cltd
pop
notl
mov
popf
and
js
lds
mov
fstpt
and
xor
imull
adc
nop
add
xchg
lea
ffree
mov
sahf
cli
mov
mov
mulb
mov
push
mov
adc
out
xchg
cli
jbe
cmp
inc
jne
xor
push
jo
xor
notb
lock
dec
rclb
addl
inc
and
sbb
inc
out
pusha
pushf
pushf
lea
jmp
add
hlt
sti
add
add
add
js
add
add
add
add
add
add
add
add
add
add
add
add
add
jmp
add
inc
das
add
inc
in
add
cltd
movl
add
cmpsb
add
add
add
add
jae
add
imul
pop
aam
adc
mov
inc
xchg
pop
xlat
inc
push
or
jae
xor
mov
mov
aas
out
insl
mov
xchg
add
aad
jl
movb
movsb
sbb
sub
dec
sbb
push
cmp
cld
fidivs
popf
loop
fsubrp
add
out
insl
adc
pop
fwait
inc
aad
call
imull
decb
insl
rclb
scas
push
hlt
test
and
pop
ret
xor
cmp
fdivs
rorl
rorb
dec
rclb
loope
out
cmp
cmc
push
sub
int3
fadd
xlat
dec
rorb
dec
xchg
or
push
pop
cmc
sbbl
cmp
hlt
adc
std
pop
mov
inc
ret
pusha
xchg
out
test
sbb
pop
inc
cmp
push
int3
lea
imul
mov
out
popf
cmc
shrl
mov
ljmp
stos
dec
jg
mov
push
cld
loopne
popa
js
jp
dec
rorb
jp
cmp
xlat
sbbb
rcrb
fcmovnb
push
lea
dec
pop
adcl
adc
rcl
stos
or
loop
lds
add
scas
xor
cmp
divb
jp
jae
mov
jns
addr16
or
dec
mov
mov
jg
jns
in
cwtl
mov
inc
xor
movb
xor
jne
cmc
gs
dec
or
mov
test
mov
adc
loope
in
pop
ret
pop
add
dec
push
cs
pusha
movl
call
aaa
and
cmp
insl
faddl
call
je
jnp
dec
in
mov
pop
or
mov
fld
inc
xchg
ljmp
js
fdivrl
icebp
sbb
xchg
push
rolb
mov
mov
adc
adc
or
sti
repnz
mov
frstor
pusha
cmp
xchg
addl
dec
ja
inc
jne
daa
dec
cmp
mov
adc
xchg
cltd
push
int
mov
pop
sbb
imul
nop
icebp
test
rolb
and
rcll
mov
jbe
js
cmp
cwtl
mov
repnz
pop
push
push
lret
div
test
xchg
loop
scas
lock
mov
lahf
mov
movsb
sti
orl
jge
dec
mov
ja
icebp
cmpl
pop
mov
icebp
push
sbbl
lret
hlt
cwtl
inc
pop
je
es
cwtl
add
sub
fmull
sub
inc
and
sbbl
pop
adc
xchg
jbe
mov
dec
xor
pop
xchg
dec
adc
sub
in
sub
clc
enter
cmpsb
jmp
push
sbb
int3
mov
jae
push
les
jno
into
cmp
ljmp
pop
inc
out
aad
xor
fwait
data16
push
shll
dec
rorb
outsl
cmp
inc
or
add
push
rcrl
push
aas
mov
call
cld
push
cmc
sub
inc
movsb
fcoms
loopne
push
and
mov
outsl
push
xchg
mov
xlat
push
outsl
xor
xor
sbb
pop
cmp
sub
int3
jl
and
in
test
ljmp
fnstcw
stc
in
test
pusha
ret
sbb
lcall
dec
rorb
mov
loope
loope
insb
mov
and
push
mov
cmp
mov
stos
xor
cltd
in
xchg
jecxz
divb
push
sub
inc
flds
push
in
enter
daa
inc
fdivrs
rorb
lret
push
adc
and
fwait
mov
cld
jmp
lods
mov
sub
add
insb
or
dec
or
adc
dec
leave
xchg
ljmp
mov
adc
aaa
testb
cmp
iret
in
mov
push
push
mov
adc
stc
outsl
icebp
xchg
adc
push
adc
pop
ja
lds
xchg
ja
sbb
jo
ret
mov
sub
bound
into
or
cld
jecxz
movsb
cmp
lahf
mov
xor
inc
dec
scas
cmpl
pushf
jmp
fstpt
and
sbb
das
out
push
js
dec
call
jae
cmp
mov
jmp
pusha
cld
mov
insb
and
mov
pop
add
and
addr16
cmpsb
dec
lret
xchg
mov
enter
mov
xchg
dec
rorb
popf
leave
test
lcall
outsl
cmp
mov
jmp
rcrb
jnp
pop
mov
cmpsl
mov
dec
and
subl
cmp
sarl
xchg
jo
mov
jbe
ja
fldenv
sbb
add
arpl
add
movups
rorb
xchg
push
xor
pusha
lea
call
call
movb
pusha
jmp
cmc
jmp
push
push
lea
jne
shl
add
mov
rcl
sub
lea
sub
or
sbb
mov
cmp
stc
sub
test
pushf
cmp
test
pushl
popl
bt
stc
cmp
pushf
lea
ja
test
call
add
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
jbe
add
pushf
call
movb
xchg
not
clc
or
mov
push
mov
test
movw
mov
call
frstor
gs
jbe
mov
mov
js,pn
jno
jge
repnz
mov
fcmovbe
xor
lahf
enter
call
cwtl
mov
push
ffree
lahf
mov
push
dec
push
pop
fwait
gs
or
fbstp
mov
xchg
lea
pop
and
push
mov
adc
cwtl
or
push
adc
subl
push
sbb
push
mov
mul
and
gs
pop
test
mov
fnstenv
add
dec
xlat
out
xor
out
mov
rorb
or
dec
or
rcr
mov
aad
idivl
cli
pusha
clc
mov
xor
out
jg
cltd
in
incb
add
lret
ja
xchg
lahf
cmp
or
arpl
stos
stos
mov
and
test
lock
fsubrl
nop
shrl
mov
movsl
gs
nop
mov
stc
add
pop
ret
pusha
inc
and
xchg
inc
dec
rorb
in
test
mov
jmp
lea
jb
pusha
pushf
pushl
ret
sbb
xor
adc
mov
sbb
pop
sbb
aam
je
aaa
ds
mov
mov
mov
ret
ljmp
jl
fldl
sbb
mov
cwtl
mov
jg
loope
mov
mov
fs
lock
mov
mov
in
lock
add
cmp
mov
arpl
lods
dec
scas
xor
mov
lea
dec
out
lods
pushf
aad
daa
mov
rol
and
push
bts
push
test
sub
btc
neg
sub
lea
movsbw
lahf
lea
push
mov
push
mov
pushf
jmp
inc
sete
inc
mov
pushf
movl
pushf
pushf
dec
movw
cmc
jmp
jmp
push
movb
push
movl
jmp
mov
adc
sub
notb
lahf
adcl
inc
lcall
stos
in
jle
pop
add
in
jg
daa
pop
or
lahf
add
repnz
push
sub
pop
add
sbb
push
cmp
std
jecxz
pusha
cmp
loop
mov
add
shlb
and
xlat
dec
or
adc
in
adc
xor
mov
lods
mov
jns
push
cmc
enter
lret
subl
pop
mov
or
dec
sub
jle
cmp
repnz
movsl
stc
fimuls
push
dec
rolb
sbb
mov
gs
sbb
xchg
rcr
ss
jle
cmp
cmp
dec
cmp
xor
lret
sbb
xchg
sbbb
pop
in
cmpsb
jno
std
test
sarl
lret
dec
js
sti
addr16
and
cbtw
shll
scas
addr16
mul
mov
xor
inc
lock
hlt
imul
dec
rolb
add
int3
fiadds
pop
and
adc
inc
sub
mov
cmp
jg
clc
test
mov
je
xchg
cmc
push
outsl
pop
sbb
in
add
push
scas
testb
fiaddl
mov
push
cs
scas
cmc
or
xor
inc
loop
mov
xchg
loope
and
sbbl
dec
sub
testb
pop
cmp
fs
ja
add
sub
bts
shld
add
bsr
mov
and
sbb
neg
mov
mov
stc
test
repnz
pushf
jmp
adc
mov
push
mov
into
lahf
or
inc
fwait
dec
fiaddl
popf
jmp
repz
cmp
cld
cmp
xor
and
push
cs
mov
ja
jge
jb
aad
out
mov
mov
imul
aas
cmp
cmp
fmull
std
push
jne
push
sbb
sub
repz
xor
aam
das
xor
xchg
pop
les
mov
or
cmc
bound
icebp
mov
arpl
mov
dec
rolb
dec
and
and
scas
sti
arpl
shll
inc
fcomps
push
jb
jle
mov
ret
cmc
mov
aas
sub
sub
mov
movl
dec
xchg
mov
loopne
or
stos
sarl
jge
test
sub
push
aaa
ja
rorb
jg
push
aam
adc
or
or
data16
scas
inc
push
or
cs
aam
dec
mov
xchg
dec
push
shrb
in
mov
xlat
cltd
jmp
in
push
mov
dec
push
inc
push
sub
and
arpl
flds
push
dec
push
rcrb
sahf
cmp
int3
movsl
movsl
ljmp
jle
mov
sub
lahf
dec
jecxz
imul
adc
jl
jnp
adc
mov
out
push
xor
lcall
scas
aas
inc
rcl
pop
adc
movsl
mov
out
jne
jle
mov
xor
jnp
sbb
scas
bound
fdiv
adc
bound
mov
nop
mov
aaa
jmp
dec
rolb
mov
and
pop
test
cwtl
rcrl
scas
data16
push
dec
cmc
mov
cs
shrl
xchg
pop
cli
imul
mov
mov
cmp
xchg
mov
rclb
xchg
xor
data16
fidivl
xchg
adc
xchg
lea
ds
pop
psrld
scas
leave
sub
push
or
inc
cmp
loopne
sarl
clc
ljmp
mov
les
inc
mov
fs
jae
pusha
dec
mov
pushf
push
mov
inc
mov
mov
lea
pusha
lea
call
jmp
sbb
fmull
test
fwait
lret
fxch
fisttps
int
lds
imul
cmp
sbb
pop
cmpsb
jg
dec
cmp
xchg
mov
rcrl
sub
std
pop
xor
test
xchg
rcrb
adcl
inc
out
in
pop
or
das
mov
pop
mov
icebp
packuswb
subl
fisubrs
mulb
cmpsb
cmpsl
leave
cmp
cmpsb
rol
fnstcw
pushf
pop
and
ds
xchg
shrl
std
add
loope
fucom
and
fidivrl
sbb
out
lcall
insl
mov
sbb
push
lods
fildl
repz
sub
into
jecxz
xor
jno
xor
inc
bound
lea
jae
jmp
dec
mov
jl
mov
add
jmp
mov
clc
jl
jle
dec
sub
movsl
movsb
loope
fucomip
sbb
pcmpeqd
cmp
pop
pop
fdivl
jle
stos
jbe
push
push
sbb
sbb
ud0
mov
pop
mov
cmc
inc
adc
jae
addr16
mov
arpl
in
out
inc
jne
xor
jle
sti
jnp
jns
mov
in
mov
jae
in
hlt
scas
fs
shll
lahf
jbe
dec
add
fs
rcr
cmp
mov
mov
jbe
mov
jl
clc
mov
dec
add
jbe
lods
xchg
inc
adc
pop
pop
out
mov
fisttps
icebp
dec
cmp
sbb
jl
inc
mov
fcmove
or
jmp
js
fcompl
movsl
cmp
call
ljmp
cltd
cmp
dec
jl
cld
mov
xchg
pop
and
mov
jne
rcrb
cmp
jle
imulb
lcall
aad
xor
jbe
lcall
add
or
jl
xor
mov
push
sub
in
push
adc
adc
xor
ljmp
fwait
fs
roll
ljmp
pop
or
jbe
sub
jp
mov
add
jne
fidivrl
jle
jg
pushl
cmp
lods
xchg
in
xor
clc
in
int3
out
pop
jno
dec
push
das
xor
fdivr
popf
jnp
mov
cmp
lods
in
mov
hlt
push
test
xor
sarb
jno
pop
adcb
pushf
jp
cli
js
mov
out
mov
mov
cmp
dec
aaa
mov
jle
lcall
mov
xchg
pop
sub
aas
bound
addr16
fwait
mov
sbb
sub
mov
js
mov
ja
mov
divb
jle
ljmp
out
cmp
push
mov
sub
jl
xor
jmp
call
rcrl
insl
shlb
mov
cmp
xor
sbb
sahf
fs
ss
fdiv
pop
lcall
xor
sarb
xchg
sbb
sbb
adc
stos
push
pop
popf
fwait
pop
dec
mov
cli
decl
cvttps2pi
sbb
cmpsl
jnp
jb
je
out
adc
add
stos
cmp
xor
jg
jno
test
mov
clc
stc
hlt
lret
xchg
inc
jnp
das
repz
adc
dec
jae
scas
aaa
lods
sbb
adc
incl
cmpsb
sti
test
sar
mov
mov
pop
or
lods
repz
jns
aas
test
jns
lret
sti
repz
pop
xchg
mov
test
enter
cmp
pop
or
sbb
sbb
push
ljmp
leave
cmpsb
sti
mov
jae
stc
sbb
jno
push
add
pop
and
cmp
push
or
clc
cmp
mov
cmp
jbe
int
mov
push
popf
add
aas
xor
dec
add
cmp
jl
out
lock
insl
adc
xor
imul
sub
xchg
sahf
sti
les
jl
gs
xchg
pusha
xlat
mov
xor
add
jl
aas
jl
mov
imul
dec
mov
scas
mov
fistpll
jnp
btr
lods
imul
sub
xor
lods
repnz
jl
adc
mov
pop
sbb
pop
lock
add
fistpl
sbbl
pop
jbe
push
or
jp
jp
fisttpl
mov
pop
fidivrs
movsl
in
push
sti
pop
or
cmc
xlat
cmp
push
negb
or
fisubs
imul
nop
pop
sbb
mov
sub
cmp
jle
inc
and
mov
repnz
jle
das
cmpl
clc
imull
outsl
jmp
stos
vmwrite
inc
jb
mov
pop
movsl
pusha
mov
js
xchg
test
mov
repnz
jle
mov
inc
roll
mov
xchg
and
hlt
hlt
in
cmp
fucomp
mov
cwtl
fwait
mov
and
jae
mov
sti
fidivrl
mov
pop
movsl
jle
adc
add
cli
jmp
mov
mov
jae
xor
mulb
rorb
xorl
sbb
je
clc
xor
push
add
mov
f2xm1
addl
test
xchg
repz
mov
sub
mov
push
sub
icebp
cli
sub
sbb
sbb
mov
mov
sbb
inc
jbe
pop
sbb
out
fs
push
xor
xor
jae
mov
jp
loope
int
add
outsl
fcmove
and
or
cmpsl
clc
fs
sub
stc
push
mov
lahf
cld
aas
cmp
lds
insl
xorb
cmp
add
pop
stos
stc
push
or
jns
cmp
fs
jbe
sub
clc
jns
push
sub
mov
mov
nop
jbe
xlat
test
mov
lahf
mov
inc
pop
out
cmp
test
mov
fiaddl
add
xchg
fistl
dec
mov
dec
xor
mov
inc
mov
mov
das
push
add
in
clc
sbb
les
sti
faddl
cmp
mov
idiv
in
add
dec
movsl
jl
sbb
or
je
fcmovnu
xchg
add
insl
aas
clc
lods
xor
push
add
sti
cwtl
clc
inc
jo
cmp
sub
mov
push
push
cwtl
aas
inc
sbb
fidivrl
repnz
sub
mov
jne
repz
push
movsb
push
adc
inc
or
lds
je
out
lcall
subl
repz
mov
in
sti
in
dec
xor
push
dec
dec
mov
rorb
rorl
sbb
std
stc
lock
push
outsl
idivl
hlt
int
je
xor
dec
jne
movsb
das
xchg
sbbb
add
push
cmp
jmp
pop
pop
or
cmp
add
cmc
lods
inc
jne
jns
popa
sbb
nop
or
enter
pop
dec
ds
lock
test
es
push
loope
pop
test
cli
cmpb
inc
int3
pop
cli
xchg
or
orb
mov
xchg
cmp
test
fwait
lds
jl
mov
cmp
aam
test
sub
mov
cmp
push
pop
hlt
mov
clc
xchg
dec
pop
add
nop
clc
pop
xchg
stos
es
cmp
scas
jb
mov
repz
repz
cmp
lods
xchg
xchg
cmp
adc
push
gs
sub
mov
test
movsl
leave
fisubrl
jp
push
sbb
push
add
pop
mov
push
adc
or
js
je
adc
mov
jbe
pop
in
jo
stc
out
test
jl
cmp
add
adc
aas
mov
int
sbb
push
cli
jae
imul
dec
mov
stc
sub
sbb
bound
lahf
ljmp
clc
jp
lret
mov
sub
xor
call
fadd
loope
rcrl
mov
cmp
in
cmp
jg
mov
jge
jb
out
add
arpl
imull
sbb
lcall
add
movsl
xlat
jbe
in
dec
dec
cmp
sti
dec
sub
sti
out
call
jmp
cmp
aam
das
add
pop
in
js
int3
in
jno
jg
pusha
adc
pusha
sti
pextrw
xchg
sub
jmp
sbb
jnp
add
jae
test
jmp
mov
mov
sbb
incl
rcl
fimull
sbb
rcr
rcrb
dec
lods
mov
stos
sbb
leave
and
ja
gs
out
or
icebp
sbb
ljmp
iret
int3
or
imul
jbe
dec
adc
clc
ret
sbb
cmp
aam
push
mov
or
bound
lcall
xor
jno
cwtl
pop
js
nop
mov
cmp
pop
icebp
mov
mov
pusha
rorb
and
jmp
push
out
pop
pop
mov
aam
sar
mov
jbe
mov
fidivrl
mov
jecxz
call
adc
xchg
jae
shll
aam
sub
lret
in
or
mov
shl
in
jl
add
or
aas
mov
lods
pusha
fmul
out
inc
pop
loopne
dec
mov
sbb
in
cmp
fisttps
inc
fistpl
xchg
xchg
mov
movsl
add
fdivrs
sub
out
jbe
pop
cmpb
inc
fisubl
jle
fsubl
sbb
jo
xchg
enter
mov
xor
cli
cmpb
sub
jp
push
cmpsl
dec
inc
sbb
or
xchg
mov
cwtl
dec
lods
pop
mov
imul
jl
inc
adc
popf
jbe
xlat
mov
clc
inc
inc
inc
xchg
jo
lock
pop
imull
cmp
nop
jp
sarb
jp
jno
sbb
ljmp
outsl
xchg
xor
pop
dec
lcall
cmp
xlat
xor
repnz
pop
xor
xor
loopne
push
xchg
ffree
insl
cmp
mov
cmpl
inc
jle
out
mov
xor
int
inc
xchg
aas
or
ds
cmp
scas
cmp
mov
sub
test
mov
sti
mov
cwtl
jno
jmp
scas
push
sbb
lahf
int
in
repnz
adc
mov
out
adc
sti
repnz
jnp
jmp
ds
push
push
cli
sarb
xorl
jg
add
inc
js
stos
and
outsb
data16
dec
xor
aas
or
das
pop
cmp
push
xor
ljmp
inc
lahf
icebp
fildl
rcr
pop
adc
mov
out
shlb
mov
mov
std
mov
add
or
stc
lahf
pop
and
lcall
mov
mov
movsb
mov
sub
xchg
sub
jno
sub
jmp
inc
jbe
ss
jg
fcoml
mov
and
or
je
adc
push
idiv
inc
movsl
cmp
push
and
aad
cli
sbb
cmpl
cmp
push
cmpl
mov
and
cli
and
mov
inc
icebp
pop
in
aas
pop
lcall
xlat
xor
mov
fists
lds
mov
das
jbe
xorl
add
cmp
jo
add
stos
movsb
add
imul
cmp
or
sar
and
repnz
bound
mov
xchg
push
mov
mov
adc
subl
int
xor
sbb
cwtl
jbe
and
cmp
dec
sub
jo
aas
out
divl
loop
jmp
lret
pop
lock
pop
cwtl
outsl
cmp
jl
jnp
lcall
jecxz
pusha
add
stos
mov
addr16
std
mov
pop
jl,pn
mov
sbb
rcrl
call
mov
loopne
dec
out
das
aad
inc
add
and
jl
add
push
xchg
or
enter
imul
cltd
mov
pop
mov
mov
stos
mov
xlat
mov
lret
push
rcr
mov
int3
lret
hlt
or
jbe
js
inc
stos
lods
mov
pop
sub
adc
push
ficoms
insb
add
jno
push
repz
or
push
cmpsb
xchg
mov
mov
je
pop
jnp
dec
pop
add
jg
cld
aad
mov
mov
sub
adc
shr
enter
daa
jp
cmp
data16
mov
jle
js
xchg
test
addb
jp
outsl
pop
jo
decl
mov
sub
sbb
push
xchg
xchg
into
movsl
stc
aad
fprem
xchg
dec
add
fwait
dec
push
mov
cmp
xchg
sbb
xchg
and
sbb
ja
jle
xor
jecxz
inc
or
inc
sti
dec
xor
adc
sbb
xchg
cmpsl
je
cmp
fcomps
repz
pop
add
mov
je
mov
sti
jo
dec
hlt
lcall
in
lds
jno
xchg
add
pop
int
mov
stc
push
mov
push
rcr
imul
sbb
icebp
jge
in
jmp
loopne
cltd
jp
add
sbb
nop
jne
jo
add
add
pop
lcall
dec
inc
xor
imul
fidivl
jne
mov
popa
mov
sbb
hlt
icebp
inc
fdivrl
fwait
jmp
or
pop
lret
repnz
imul
iret
repz
clc
insb
jnp
and
test
jmp
lods
jecxz
sbb
sub
scas
cmp
push
jmp
and
xchg
push
imul
xor
in
or
cmp
xchg
inc
pushf
mov
sbb
out
js
in
gs
leave
rcll
test
dec
add
mov
dec
jl
or
lock
shl
gs
mov
cmp
push
mov
rcrl
xorb
pop
jno
jp
inc
call
mov
sti
inc
cmp
cmp
xchg
add
sub
in
adc
cmp
lcall
cmp
or
repz
scas
sti
and
cltd
mov
and
stos
insb
mov
fildl
fbstp
adc
jl
jnp
inc
shrb
sahf
rcrl
std
icebp
push
xlat
out
cld
loopne
sti
loopne
jg
cmpb
jl
push
mov
aam
mov
jno
cmc
jp
rolb
jnp
dec
arpl
mov
xor
clc
push
add
cmp
dec
jo
data16
nop
mov
sub
push
cmp
inc
out
add
fnstcw
jae
jbe
jg
cmp
lods
test
lock
out
out
adc
sbb
push
jne
fdivl
into
mov
sub
xchg
popa
xchg
popf
sbb
fnstcw
xchg
testl
vmaskmovdqu
icebp
testl
icebp
pop
cmp
sub
mov
jbe
enter
lods
mov
lods
xor
je
mov
roll
or
xchg
insb
jecxz
insb
sub
cld
or
cmp
lret
fists
jne
fstpl
stc
add
cmp
flds
sub
adc
adc
das
hlt
inc
dec
lcall
jnp
fisttps
jns
das
sahf
stos
pop
xchg
lcall
push
daa
push
jl
mov
repnz
cli
mov
popa
les
cltd
or
cwtl
or
mov
xchg
push
jnp
adc
testl
mov
push
outsb
imul
jns
jns
and
cmpb
push
mov
in
movsl
in
daa
shrl
xchg
mov
mov
dec
imul
arpl
sti
and
fiaddl
xchg
imul
inc
xorb
inc
imul
js
xorl
jno
dec
push
addb
xchg
dec
js
pop
cmp
mov
aam
pop
mov
mov
xor
jns
add
mov
jge
xor
jbe
aad
add
std
mov
mov
dec
int3
hlt
jge
idivb
push
testl
sbb
shll
lock
call
fcomip
cmc
leave
lods
jo
enter
mov
push
mov
test
imul
dec
fwait
ljmp
dec
int
jmp
cmp
decl
adc
test
mov
int3
inc
das
push
repnz
fs
or
sbb
repnz
sbb
daa
pop
loope
mov
outsl
insl
push
mov
stc
ljmp
jbe
add
ja
dec
out
sbb
outsb
int
sbb
push
test
rep
adc
cmc
jle
mov
pop
push
jb
inc
mov
cmc
andb
jle
repnz
mov
sbb
dec
mov
js
lahf
jmp
mov
rorl
cmp
push
in
dec
jbe
out
in
test
cmp
repz
imulb
pop
in
in
mov
jmp
xchg
add
ja
imul
fistpll
jg
jnp
dec
scas
fucomi
cmp
push
jae
cwtl
dec
nop
leave
mov
test
sahf
mov
sbb
jmp
cmc
add
push
fdivs
dec
push
cli
les
push
in
aam
lsl
fwait
mov
dec
pop
jecxz
cld
cmp
hlt
push
lds
sti
inc
and
loop
js
aas
int
xor
or
fcoml
in
icebp
mov
jl
pop
push
adc
push
test
sbb
fisttpll
xchg
jmp
jl
or
cli
jge
pushl
sbb
aaa
in
mov
mov
xor
cmp
fdivr
xchg
je
movsl
lcall
or
enter
mov
mov
enter
or
sbb
or
pop
mov
or
stc
or
adcl
rclb
sub
cltd
xor
dec
ljmp
jo
mov
xor
push
jmp
jne
rol
les
jbe
sbb
insl
test
and
push
call
in
daa
cld
ds
xor
jge
pop
xor
mov
mov
test
clc
lds
jbe
sbb
iret
pop
jno
cld
imul
xor
pop
addr16
cli
cmp
pop
lods
gs
xchg
push
adc
daa
mov
js
xor
xchg
sub
not
test
int
pop
ljmp
xchg
test
lods
mov
or
mov
jbe
add
add
lods
pop
sbb
jnp
xchg
inc
xchg
subb
sbb
sub
sti
and
jb
or
inc
and
and
mov
ja
hlt
mov
dec
subb
out
xor
xchg
push
xor
lock
outsl
or
aad
sub
add
outsb
cltd
jl
or
ljmp
insb
mov
jmp
xchg
lock
mov
mov
cmpb
insb
in
adc
jno
adc
nop
sbb
call
clc
push
sub
dec
fwait
adc
xchg
xchg
dec
pop
sbb
add
mov
jbe
xchg
maxps
test
fcomps
mov
gs
push
sub
xchg
cmp
aad
sti
xchg
sbb
stos
pop
ds
mov
je
fsubrs
in
sbb
add
inc
les
jno
fstl
xor
mov
add
cmpb
js
ss
js
out
adc
adc
outsb
fsubrs
shlb
cld
inc
xor
push
leave
mov
or
xor
sub
push
push
cmp
and
inc
xor
lret
lock
jle
imul
dec
add
xchg
subb
cmpsb
mov
sti
scas
je
jecxz
jg
es
scas
loop,pn
dec
push
mov
pop
mov
rcrb
rcrb
sbb
not
cmpsl
loopne
push
movsl
cmp
jnp
jmp
xchg
mov
mov
add
fildl
fimull
fld
iret
icebp
sti
mov
pushl
jnp
shll
mov
mov
test
inc
push
xchg
out
xor
out
xor
lods
subb
mov
push
js
rcrl
icebp
cmp
jo
adc
cmpsb
push
aam
std
mov
mov
pop
sbb
xchg
imul
pop
xor
inc
cwtl
pop
add
mov
or
push
sub
push
or
jb
imul
fsubrl
inc
stc
cmpsb
aaa
int
adc
pop
jmp
ja
aam
jecxz
dec
int3
je
loop
lcall
add
divl
xchg
push
pop
cmpsb
and
xor
inc
andl
lds
movsl
jg
jne
repnz
xor
cwtl
pusha
test
lods
dec
pop
mov
insb
lcall
xor
mov
fimull
fsts
fstpt
pop
lock
addl
stos
push
fidivrl
bound
xor
push
repz
repnz
add
shlb
dec
movsb
add
sarl
loopne
fidivl
dec
fsubs
je
shr
xor
ss
mov
jb
stos
dec
je
push
ljmp
lock
stos
cmp
hlt
add
jl
or
and
leave
mov
popf
out
push
mov
stos
sti
js
test
paddusb
dec
aad
ret
ds
pop
je
cmp
jno
popa
xlat
daa
pop
pop
fs
icebp
lods
mov
test
pop
fiadds
inc
test
out
data16
sbb
cmp
mov
jl
jl
fcmovne
inc
fdivr
daa
dec
cmp
mov
inc
dec
test
jbe
inc
or
std
or
jns
push
jl
and
mov
test
or
daa
jbe
pop
in
in
jbe
gs
jle
sti
inc
sti
pop
cmp
fstpt
sub
adc
fcmovne
jae
jne
fs
mov
xlat
shl
add
shr
pop
xor
lods
jbe
sti
pop
mov
cmc
jo
jne
pushf
mov
dec
mov
sub
pop
pop
or
pop
sbb
in
pop
shrl
or
mul
mov
jmp
fs
inc
sub
and
mov
jne
add
rorl
cwtl
xor
add
mov
fsub
call
add
cld
and
out
test
mov
pop
mov
lea
sub
push
cmp
dec
and
inc
sub
scas
lds
hlt
je
popa
lods
outsb
dec
adc
inc
mov
in
fcoml
cmp
mov
mov
sub
pop
xchg
sbb
sbb
sbb
jl
jbe
adc
data16
cmp
int3
or
ret
sbb
xchg
ss
pop
jbe
cmpsl
mov
rolb
mov
pop
pop
pop
loop
loop
adc
mov
jbe
cltd
ljmp
call
push
and
xchg
fbld
nop
inc
roll
jecxz
cli
sti
dec
jle
lret
xchg
loope
sbb
cmp
xor
and
dec
ss
insb
jle
xor
jb
repnz
dec
pop
xchg
mov
icebp
ljmp
dec
xor
sti
cmp
mov
in
mov
push
and
insb
out
mov
mov
adc
add
xor
cmp
jnp
mov
xlat
dec
inc
cmc
mov
push
sbb
adc
adc
data16
in
push
or
xchg
in
icebp
push
imul
rcr
lock
pop
stos
jbe
add
adc
mov
jle
insb
cmp
jbe
sbb
inc
jecxz
sub
jno
imul
xorl
sub
sub
fmull
sti
loop
stos
out
in
sbb
pop
imul
stos
dec
loop
fsubrl
decl
lcall
push
movsl
decl
add
jp
or
rorb
or
add
and
sbbb
jbe
ja
or
push
mov
int
sub
leave
add
push
je
cmp
dec
dec
mov
inc
xchg
dec
rcrl
or
jecxz
negb
loopne
lods
out
sbb
mov
jp
push
jbe
dec
xchg
call
push
dec
mov
fcmovnbe
cmp
enter
mov
or
push
clc
mov
or
ljmp
jno
cmp
jmp
adc
jno
adc
insl
sbb
xorb
sub
ds
jl
shrl
addb
imul
mov
mov
add
sub
jp
add
inc
rorl
into
cmc
repnz
xorb
push
dec
xchg
cmp
mov
cmpb
jo
ss
stos
cmp
test
pusha
jbe
dec
sarl
push
test
call
mov
paddusb
loop
in
push
ror
cmp
dec
clc
dec
sti
rcrl
jno
lret
push
mov
testb
int
mov
dec
mov
dec
jb
lret
xor
mov
dec
push
ja
adcb
notl
jl
mov
sti
inc
neg
les
dec
add
fnstcw
fnstsw
imul
aas
and
test
cs
mov
stc
bound
hlt
loop
aaa
dec
repz
rcrb
xchg
lcall
fisttps
lock
loopne
pop
or
mov
jl
sarb
push
test
sbbb
sbb
pop
adc
out
mov
push
mov
popa
iret
sub
jle
sbb
jns
in
iret
sub
xchg
adc
es
xor
mov
or
sti
push
xchg
mov
dec
dec
ss
mov
dec
sbb
pushf
sahf
xor
mov
loopne
mov
cmp
and
popf
jo
in
fistpl
cmp
add
outsb
adc
inc
push
in
cmc
xchg
dec
mov
cmc
jle
mov
fs
test
push
and
or
dec
test
inc
cmp
cwtl
pusha
cmp
js
idivl
rcrb
cmp
jnp
fsubl
int
sarb
dec
ret
jecxz
cld
dec
pop
in
sti
in
mov
cld
add
lret
jecxz
imul
test
orl
test
clc
fdivrs
je
or
les
mov
jno
outsl
xor
mov
push
lods
push
movsl
mul
test
fldl
xor
fwait
sarl
aaa
xchg
mov
xor
fstpl
js
std
lock
call
jmp
jnp
mov
fsubrs
aam
js
and
dec
mov
sbb
das
add
jl
push
mov
sbb
test
in
xchg
in
jp
pop
push
jbe
pop
lahf
pop
mov
jle
je
dec
mov
add
cmp
xchg
inc
fistps
adc
pop
push
pcmpeqb
jae
lret
xchg
jle
mov
add
jbe
and
arpl
xor
add
mov
pusha
lock
push
ds
pop
or
push
pop
mov
dec
sbb
in
xor
jp
adc
push
inc
mov
jbe
mov
dec
inc
jl
enter
jne
and
lods
das
mov
out
or
imul
pop
mov
mov
dec
add
test
icebp
in
jmp
es
mov
mov
or
jge
xorb
lods
xor
and
mov
sbb
inc
in
int
xor
mov
cmc
xchg
fildl
or
lcall
lahf
lcall
sub
and
cmp
neg
inc
popa
push
sbb
add
sub
gs
cltd
push
lret
push
inc
cmpsb
add
mov
mov
cmp
lds
jg
into
jl
loopne
pusha
mov
js
jbe
adc
add
cltd
xor
arpl
mov
es
ss
push
jns
fisubl
mov
jbe
mov
neg
push
inc
or
jb
mov
xchg
outsb
push
std
dec
test
adc
adc
mov
je
add
and
xor
fnop
jo
repnz
sub
mov
ljmp
pop
mov
sbb
inc
mov
test
aam
add
jnp
testl
jp
jbe
xchg
mov
push
inc
xor
xorb
cmc
sarl
fldt
xchg
xor
arpl
jbe
adc
int
jl
mov
scas
jns
fwait
das
add
ficompl
dec
add
pop
push
adc
pop
pcmpeqd
jl
xor
sub
stc
xor
xlat
dec
test
or
jl
and
fdivrl
loopne
cmpsl
pop
fbstp
jle
push
lock
loop
fldl
insb
mov
int
mov
xchg
lret
dec
movsl
sub
adc
dec
mov
xor
into
cmp
sbb
mov
sub
xchg
pop
jb
into
dec
cmc
stos
and
inc
lock
dec
jno
shlb
sub
ret
out
fs
mov
fwait
sbb
sbbb
inc
mov
pop
jae
mov
cld
pop
or
dec
push
insl
push
cmpsl
pop
insb
lea
adc
cltd
inc
push
ret
inc
daa
not
addb
dec
addr16
movsb
int3
push
and
push
jecxz
fwait
mov
pop
xor
fwait
jno
mov
and
inc
lods
jno
add
imul
outsb
pop
mov
in
shrl
cs
jne
add
mov
mov
into
call
push
lods
icebp
lods
jo
shlb
loop
aam
bswap
setg
lea
pusha
xchg
not
pushl
popl
pushf
mov
movsbl
seto
movzbl
movl
not
not
not
movsbw
lea
pushf
mov
mov
movl
pushl
jmp
cmp
test
mov
pushf
test
movb
jmp
sarb
cld
jecxz
sbb
push
and
lahf
inc
pop
xchg
enter
mov
loop
lcall
adc
test
jbe
cmp
adc
test
pop
fsubs
loopne
lods
test
addr16
shrb
iret
mov
filds
push
mov
movl
lret
cmp
test
sbb
mov
inc
or
dec
sub
cld
add
pop
arpl
pusha
nopl
lahf
outsb
addl
sbb
outsb
roll
insl
insb
imulb
mov
sub
shlb
sub
push
push
or
cmp
inc
adc
cmp
sub
push
xor
addr16
cs
gs
out
data16
xor
jo
jo
dec
xchg
mov
std
stc
xchg
xchg
testl
inc
fisubl
pop
push
dec
push
add
pushf
cmpl
hlt
and
mov
push
xor
lds
sbb
pusha
jns
mov
pop
std
loopne
and
fs
xor
pusha
pushf
lea
ja
pusha
call
jmp
lea
jne
btr
bsr
mov
clc
push
clc
add
cmc
pushf
stc
movzwl
sub
bt
mov
stc
pushf
pushf
jmp
lea
je
pushf
pusha
adc
push
lea
jmp
inc
and
loopne
or
cltd
xor
fld
sbb
xchg
into
push
adc
inc
aam
lcall
or
pop
sbb
test
lret
xchg
or
jns
dec
pop
aam
xor
mov
cmp
mov
stos
or
inc
testb
xor
xchg
dec
push
dec
mov
dec
adc
out
negb
jp
adc
call
sub
jecxz
shll
inc
and
xchg
inc
lea
je
not
mov
mov
not
push
mov
lahf
lea
push
pushf
pusha
call
mov
pushf
lea
call
jmp
dec
sar
not
sets
rcl
cmc
rcl
xor
movb
stos
jmp
iret
les
pop
data16
fwait
fs
mov
and
lcall
cmpsb
xor
jns
iret
mov
aas
nop
outsb
mov
jno
add
add
mov
xchg
inc
pop
je
mov
pop
aaa
xchg
jo
lock
jg
cmp
sahf
xor
xchg
loop
mov
test
pop
aas
inc
repnz
es
mov
mov
inc
cmpsb
mov
mov
mov
cld
dec
push
mov
addl
push
or
adc
pop
xor
fucomi
in
mov
subl
sbb
imul
xacquire
fdivrs
adc
lcall
out
mov
sub
fistps
xor
dec
scas
xchg
jmp
movsl
aas
adc
ds
mov
inc
add
mov
pop
out
jge
ds
loopne
mov
push
in
ret
sub
call
adc
jge
cld
and
jl
in
aam
dec
mov
arpl
movsb
pop
hlt
sub
mov
push
xchg
negl
pop
adc
adc
mov
jno
das
inc
sub
outsb
test
or
stos
cmp
pushf
jns,pt
into
mov
mov
hlt
in
into
lods
xor
sub
das
jo
dec
rcrb
sahf
fdiv
mov
das
cmc
movsb
mov
es
testb
lods
repnz
cmp
jge
lock
mov
fistpll
jge
mov
sub
dec
push
and
mov
mov
dec
test
inc
bound
das
mov
jne
dec
rorb
hlt
cmp
out
je
sbb
or
fimull
pushf
lds
in
xchg
aas
xor
hlt
pop
rcll
outsl
jle
lcall
pop
xor
mulb
cmp
push
push
mov
lret
xor
int
mov
mov
mov
dec
daa
and
fmuls
sbb
js
in
mov
xor
pop
fisubs
mov
dec
int
dec
ljmp
push
in
mov
scas
xor
mov
lock
rcrb
sub
dec
dec
push
add
movsb
inc
cmp
cmp
aaa
cmp
push
test
int
mov
incb
sbb
in
imul
jns
arpl
pusha
pop
push
int3
push
in
ljmp
xchg
fs
and
cmp
ja
mov
fsts
negl
sub
mov
std
sub
je
loope
mov
sahf
stos
jnp
cmc
xlat
clc
div
lods
adc
jge
test
mov
pop
test
rcrb
add
ss
int3
xchg
lods
inc
cmp
mov
xchg
jp
jno
mov
sti
dec
add
cltd
mov
dec
out
movsl
lods
cmp
in
mov
pushf
test
pop
jae
mov
cmpsl
add
sbb
jle
mov
cmp
xchg
in
jl
sub
shll
and
stos
les
in
lds
push
mov
addr16
popa
jl
mov
sbb
test
sub
test
shll
adc
jle
push
jp
repnz
fwait
jmp
test
fsts
jbe
aas
push
cli
in
xchg
or
mov
sahf
cmp
adc
adc
test
aas
lret
sub
sbb
shlb
pop
add
aas
xchg
xchg
arpl
sbb
jbe
fdivl
xor
push
loope
ret
lret
ja
inc
out
insl
sub
or
aad
xchg
push
mov
jl
out
sarb
xchg
lds
sbb
mov
add
jne
out
aad
jle
push
jnp
imulb
inc
pop
out
es
cli
les
data16
jecxz
sbb
push
mov
int3
mov
out
in
mov
and
jg
je
xchg
xchg
filds
negl
fs
int3
xlat
mov
xor
dec
sbb
jbe
pop
daa
cs
loopne
arpl
movd
out
roll
cli
idivl
adc
scas
cmc
jle
in
jecxz
xor
push
out
add
cmpl
vcvtdq2ps
daa
and
adc
xor
leave
mov
xorb
jbe
clc
push
or
in
in
clc
sbb
push
jle
into
jae
int
pop
mov
sti
cwtl
jl
adc
or
push
or
mov
dec
adc
fdivs
fucom
test
movsl
fucom
or
inc
jnp
push
jbe
imul
lods
repz
cs
jl
ljmp
adc
pop
mov
imul
aaa
stc
inc
lods
incb
push
sbb
xor
rcrl
cmpb
stos
inc
aas
cmp
lods
jns
js
dec
push
push
add
sahf
repz
andb
xor
dec
fdivl
test
cmp
or
xchg
sbb
imul
sub
movsb
pop
clc
xlat
sbb
lods
jns
add
mov
out
cmp
bound
leave
popf
stc
in
and
dec
repz
mov
lret
lods
rolb
enter
jb
adc
push
shrl
mov
cmp
pop
xor
pop
xor
je
ljmp
sub
jns
inc
add
icebp
pop
in
mov
call
mov
icebp
pop
dec
ror
test
cli
les
lea
mov
jl
xor
imul
rcr
movsl
push
dec
adc
jb
mov
loop
mov
sub
mov
loopne
bound
jns
insb
lods
and
fistpll
pop
sbb
add
inc
sbb
ret
mov
mov
mov
or
test
fdivrl
dec
enter
adc
xor
pop
sub
rorl
cmp
and
mov
push
mov
out
in
insl
cmpsl
sbb
jnp
insl
repz
jmp
and
inc
adc
jne
pop
xlat
in
xchg
pop
or
cli
into
lahf
jb
aas
imul
push
and
arpl
jecxz
sbbb
les
fcomp
pushf
add
xchg
pop
dec
movsl
mov
sub
rcl
ss
lahf
sub
das
adc
fcomip
mov
add
dec
mov
hlt
cli
jl
stos
sarl
pop
addl
xchg
subb
shll
test
imul
int
iret
pusha
adc
sbb
pop
sbb
fldl
fs
outsb
xor
xlat
testl
sbb
dec
push
jae
push
inc
rcr
pop
not
jle
pop
fwait
mov
out
or
and
aam
je
cwtl
sti
dec
adc
sub
dec
xchg
jb
mov
jae
testb
cmp
je
mov
adc
add
cli
sub
lret
mov
and
test
adc
sbb
mov
push
dec
enter
pop
jg
cmc
push
push
je
es
fisttps
xchg
mov
or
call
or
ds
jle
repnz
xchg
jl
xor
test
mov
cwtl
fldt
es
inc
sub
jp
shl
inc
mov
push
sub
rolb
mov
shlb
jecxz
add
mov
out
movsb
jp
scas
imul
lods
dec
xor
jl
test
je
mov
xchg
cmp
movsb
mov
bound
inc
sahf
lret
xchg
rclb
add
addl
mov
push
xor
push
hlt
cld
ss
mov
mov
mov
aas
enter
cs
icebp
mov
pop
ret
in
add
jns
pop
daa
sub
pop
lds
bswap
pop
clc
push
mov
pop
cli
xchg
into
xchg
stos
mov
pop
and
fdivrp
sub
int
sbb
xor
push
cli
xchg
push
jo
add
push
nop
ljmp
cmp
push
fcompl
mov
js
aad
xchg
fildl
clc
fdivrl
iret
test
lds
pop
stc
cmp
cmp
fwait
mov
xchg
aas
fmul
pop
push
fsubs
xor
dec
inc
sti
inc
js
jbe
sbb
int3
stos
mov
stos
and
ret
enter
dec
pushf
jmp
lds
aam
sub
jl
add
mov
adc
cwtl
fadds
aam
daa
shrl
test
xlat
out
jbe
popa
or
xchg
cld
cmp
fmull
jl
inc
in
dec
sub
aam
xchg
das
repnz
arpl
mov
dec
pusha
scas
adc
shll
fidivl
fistpll
ss
popa
hlt
cmpsb
mov
jne
mov
mov
dec
and
or
cmp
cmp
outsl
push
and
fldt
popa
push
and
mov
jmp
jl
jnp
in
pop
jbe
mov
dec
ljmp
cli
je
push
xor
outsb
les
cmp
push
lods
in
or
mov
dec
or
lahf
nop
sbb
inc
push
in
dec
xlat
testb
xchg
mov
xor
mov
nop
das
jb
mov
ret
mov
pusha
hlt
imul
decl
aas
addb
fidivl
adc
jns
mov
inc
lds
test
lret
or
sbb
mov
cmp
lea
mov
push
cli
rol
push
cmp
test
add
push
sub
movsb
pop
push
or
adc
pop
jne
dec
inc
jl
mov
inc
fildl
test
subb
int
cli
ljmp
sub
sti
jb
jle
lret
stc
push
add
mov
sti
repz
scas
sbb
loope
nop
fmul
lret
stos
dec
jbe
imul
lret
adc
jge
nop
jecxz
add
iret
push
jp
cmp
sbb
inc
ds
push
pop
xor
sub
mov
fnsave
aad
mov
add
and
push
hlt
lods
and
pop
or
mov
push
call
sarl
xor
shrb
jns
lock
cmp
mov
mov
lahf
mov
jns
cwtd
inc
mov
decb
dec
es
mov
fs
pop
adc
cld
mov
fmuls
mov
pop
stc
cwtl
or
hlt
adc
cmp
jmp
in
and
or
lds
enter
xrelease
xchg
stc
mov
jle
pop
jb
leave
jbe
mov
enter
out
xchg
jl
es
mov
mov
inc
jl
mov
jbe
pop
scas
hlt
arpl
or
xlat
jo
sarl
insb
movsl
push
push
mov
mov
enter
lahf
gs
dec
xor
test
iret
xor
data16
mov
mov
idivb
and
stc
mov
movups
mov
rorl
sti
pop
cs
loope
xlat
insb
push
jecxz
mov
xor
mov
xchg
imul
sbb
push
and
int
fnsetpm(287
inc
mov
out
add
xchg
andb
int3
pop
clc
hlt
cmp
or
nop
lahf
mov
mov
int
pop
adc
mov
xchg
pop
loope
hlt
xor
jecxz
xor
insb
add
sub
fstpt
or
shr
insb
xchg
adc
mov
popf
mov
ss
add
aam
add
clc
jecxz
cmp
jl
dec
pop
jae
hlt
cmp
cmpb
push
push
lret
cmpb
fdivl
aad
xlat
mov
push
and
pop
jbe
ret
mov
lds
mov
xor
outsb
mov
xlat
rolb
mov
pushf
loop
sub
xchg
add
cmp
lods
sub
aad
not
and
adc
mov
cmpsl
sub
hlt
icebp
lock
pop
lods
jns
fcomps
gs
sahf
sarb
test
jo
dec
push
jmp
xchg
xchg
jbe
adc
cld
aas
lods
jae
jle
subl
mov
xor
jb
mov
mov
mov
pop
mov
fiadds
lcall
testl
mov
test
dec
jbe
andl
or
outsb
or
mov
popf
jmp
or
jmp
fistpll
jmp
mov
lcall
outsb
xor
repz
out
cmp
ucomiss
dec
mov
nop
xchg
test
loope
mov
shl
je
aad
mov
cmp
mov
mov
pop
and
jl
mov
decl
dec
add
push
inc
add
add
add
ds
out
pop
ljmp
cli
push
jge
cmp
push
movswl
cmp
std
popa
add
je
adc
jl
xlat
pop
out
cmp
ds
mov
xor
cmp
xor
mov
sarl
mov
jl
test
mov
cli
mov
cmp
icebp
add
push
mov
cmp
dec
js
sub
sarl
fdivrl
sub
sarl
jp
add
push
aaa
loope
loopne
cmp
shl
call
sarl
jl
cmpl
mov
cmp
jns
cmp
cld
xor
notl
repz
push
jb
and
hlt
ret
mov
aas
sarl
mov
xor
mov
mov
repz
ss
xor
jns,pt
mov
inc
int
push
je
pop
nop
cmp
divb
cmp
mov
cli
hlt
mov
aam
fnstenv
mov
js
inc
bound
hlt
fstpt
je
cli
pusha
cld
aas
mov
xor
mov
ja
je
mov
jb
xor
aaa
cli
mov
sti
sar
loope
and
js
decl
jp
inc
mov
repz
or
mov
mov
sti
inc
cmc
mov
stc
sarb
cld
aaa
cmp
add
cld
mov
je
pop
cld
aas
aam
xorl
mov
hlt
jge
jne
sbb
xor
mov
cmp
fnstsw
mov
cmc
cmpb
jl
mov
rcrb
cmp
xchg
repnz
adc
not
icebp
cmp
ret
int
mov
xchg
fidivs
decb
or
push
sbb
mov
xchg
sub
inc
pop
xchg
and
jns
fldcw
adc
cwtl
and
outsl
insb
push
movsl
rcr
out
jbe
jbe
sti
adc
xchg
cli
inc
inc
xchg
cmc
xlat
clc
or
cli
cmova
adcb
shrl
mov
pushf
xor
or
mov
cmp
sub
adc
add
xchg
dec
adc
add
lcall
inc
arpl
lock
lcall
repz
out
push
xor
pmulhw
mov
mov
pop
pop
insb
and
insl
gs
stos
fcmovu
rorb
loope
jp
mov
mov
sbbl
hlt
xchg
fstpt
add
stc
loopne
add
sbb
aas
pop
sbb
xchg
arpl
push
and
cld
xchg
hlt
gs
pop
test
sti
jns
lcall
push
sahf
and
or
pop
add
jbe
insb
cltd
cmp
xchg
fdivrl
aas
pop
cmc
pop
cmpl
sbb
inc
xchg
mov
enter
cli
addr16
cmp
mov
in
cmp
int
imul
mov
in
xchg
enter
test
xadd
fisttpl
test
js
add
cmpsl
jbe
aad
insb
jge
js
mov
rcrb
xlat
negb
mov
pop
nop
arpl
push
push
dec
jle
addb
daa
loop
es
aad
stc
xor
int3
cwtl
xchg
push
jle
mov
dec
cmp
dec
jnp
cmp
jle
pusha
mov
ja
pop
rorl
sbb
je
xor
xchg
jae
push
adc
push
mov
pop
or
cmc
enter
fldcw
je
mov
test
and
xorb
dec
push
mov
je
cmp
add
lret
filds
add
sbb
jle
pop
jl
xchg
inc
insb
arpl
cmp
push
dec
jle
jbe
sbb
xchg
insl
aad
push
adc
xor
xchg
push
or
negb
or
ficomps
or
inc
jle
jge
cs
push
out
movsl
jne
hlt
dec
mov
scas
xchg
addr16
inc
xchg
imul
out
fistps
hlt
out
scas
sbb
fsts
pop
outsb
mov
jne
in
mov
and
pop
mov
jne
je
test
mov
jbe
faddl
add
ret
mov
nop
je
pop
outsl
or
fs
test
jbe
bound
cmp
xchg
mov
test
mov
add
cld
stc
ja
xchg
clc
jbe
sarl
movsl
dec
outsb
jp
push
mov
jl
stc
jns
adc
jbe
bound
arpl
imul
jle
add
nop
xchg
out
mov
mov
push
cs
cmp
fiaddl
test
fnstsw
shr
xchg
xor
jp
push
mov
test
inc
mov
and
jne
fcoml
inc
ja
rolb
ljmp
push
scas
dec
cmp
push
push
xlat
push
hlt
sarl
fistl
sbb
jb
pop
xor
push
test
ljmp
mov
mov
shll
insb
outsb
mov
sub
push
jae
mov
adc
rcrl
ret
jo
fildl
leave
cmp
push
inc
xor
push
shll
lods
push
xchg
fcomps
aas
push
sti
aam
mov
jbe
mov
or
pop
inc
cmp
lds
jo
xor
cmp
mov
and
ljmp
mov
cli
xor
fistpl
lea
xor
popa
fisubl
aaa
decb
stc
sti
push
dec
test
clc
add
flds
das
push
inc
jge
mov
loop
inc
out
popf
jecxz
fmuls
je
inc
repz
lahf
inc
mov
dec
or
mov
inc
inc
dec
outsl
jg
mov
jne
test
jp
mov
dec
xchg
aad
pusha
fcomps
scas
push
add
loopne
jbe
bound
cmp
icebp
repnz
mov
cmp
or
inc
lahf
aas
mov
mov
cmp
ret
mov
shrl
fadd
je
dec
test
push
fiaddl
cmp
pop
aam
xchg
jmp
flds
out
jl
sbb
test
movsl
jbe
repz
insb
xor
sub
jg
mov
adc
sbb
adc
arpl
xchg
mov
cmp
sub
addb
push
cmp
mov
push
mov
and
xor
fnop
adc
jb
incb
sub
mov
sub
jo
leave
cmp
ret
mov
or
ret
addr16
xlat
jbe
daa
lahf
insl
hlt
dec
jle
mov
sbb
jb
inc
xor
jg
insb
clc
xchg
jns
xlat
xor
hlt
push
adc
mov
adc
lods
sbbl
sub
stc
aad
inc
jnp
mov
mov
fmull
sub
mov
div
xor
ret
rorl
push
sti
repz
mov
inc
je
les
sti
fdivrs
rolb
mulb
jle
shr
lods
jl
pusha
mov
pop
xchg
aam
repnz
cld
xchg
js
negl
aas
and
xchg
insb
jae
cld
aaa
addr16
and
clc
stos
out
xchg
inc
ret
jne
in
cltd
jnp
or
pusha
int
cltd
sar
fnstsw
enter
inc
mov
daa
xor
sbb
and
mov
popf
mov
jo
xchg
sbb
mov
pop
les
adc
ret
xor
test
in
jle
sahf
xor
orl
loope
jbe
pop
into
int
mov
jl
push
lds
cmpsb
hlt
xchg
fprem
xchg
push
mov
fsubrl
aas
out
cmp
jp
out
test
js
mov
ss
add
cmp
stc
test
mov
pop
mov
cmp
insb
pop
jbe
mov
mov
mov
test
jns
xchg
jno
or
adc
add
sub
jg
dec
pop
inc
mov
and
pop
fmuls
data16
jb
jle
imul
mov
jmp
enter
out
mov
or
inc
mov
shlb
fldt
mov
out
icebp
xor
jne
pop
and
dec
mov
fmull
insl
push
lds
mov
lds
jb
jg
fildl
mov
mov
iret
jl
pop
test
push
decb
push
xor
mov
pop
fnstsw
or
dec
loop
jb
fildl
out
std
ror
sub
jne
or
adc
mov
popa
loopne
adc
addb
push
into
nop
push
mov
loop
je
sub
cld
ret
push
loop
adcb
inc
push
enter
fcmovnbe
call
lea
push
mov
jge
pop
ret
push
cld
out
aad
jle
je
dec
js
or
sub
cmp
repnz
outsb
cmp
push
push
stos
es
add
outsl
adc
aaa
jle
sbb
fstpl
dec
inc
push
jbe
daa
sbb
xchg
inc
push
dec
fdivl
pop
out
or
pushf
inc
pop
shl
mov
movss
mov
dec
push
adc
dec
data16
repnz
les
adc
loop
adc
mov
push
stos
fdivl
adc
stos
mov
xor
pop
adc
add
add
in
ret
mov
call
movsb
mov
inc
lods
cmp
popf
jl
jnp
clc
lods
xchg
lahf
sarl
jne
test
inc
xor
mov
lcall
cld
loope
add
push
and
or
aad
lahf
mov
cld
cmpsl
jl
sbb
jbe
mov
mov
add
and
mov
mov
je
dec
dec
incl
jmp
mov
repnz
mov
xor
inc
shl
pop
andb
push
pop
js
les
mov
mov
mov
in
faddl
jne
enter
sarl
mov
aaa
mov
mov
dec
das
and
aam
fs
test
fdivp
sbb
cld
cmc
movsb
pop
mov
push
das
dec
aam
fwait
push
cs
aas
inc
push
ficomps
sub
inc
mov
push
pop
adc
mov
cmp
pop
sbb
adc
nop
gs
icebp
and
sub
aas
xchg
or
div
dec
xchg
repz
xor
sub
imul
inc
data16
and
dec
movsb
mov
mov
hlt
mov
push
test
xchg
dec
clc
popf
fisubrs
rorl
mov
mov
dec
enter
sahf
adc
and
push
push
cmpsl
cwtl
or
aas
mov
mov
sbb
nop
mov
mov
ljmp
adc
mov
push
push
add
je
sub
in
inc
mov
pop
ret
std
cmp
sbb
test
addb
repz
and
jg
rcrl
mov
test
jge
test
pop
lahf
inc
popf
mov
test
cs
mov
pop
das
loope
into
mov
repz
mov
pop
xor
xor
out
jle
push
mov
jne
mov
sbb
jmp
xlat
mov
std
fs
pop
cmp
roll
pusha
adc
xchg
roll
stos
mov
pop
sti
cld
aad
push
dec
int
adc
ret
add
pushf
mov
scas
fistps
lcall
sti
adc
scas
inc
push
or
pop
xchg
movsl
jb
sub
add
cmp
aam
fcompl
std
xchg
ss
add
aas
pop
or
stc
jle
mov
cwtl
xchg
test
mov
mov
incl
adc
push
jnp
xor
mov
repz
add
hlt
sbb
scas
cmp
or
mov
mov
xor
shl
mov
sbb
lea
into
add
insb
fnstcw
jo
dec
xchg
jg
xor
or
mov
mov
addl
or
lds
nop
and
jne
cmp
fadds
dec
or
mov
xor
jge
dec
mov
ja
jbe
rclb
aad
loope
jp
jne
push
insl
add
shlb
leave
jb
icebp
jmp
sub
jbe
xchg
sub
push
clc
test
jmp
les
xor
fnstsw
mov
jle
push
or
cpuid
dec
jbe
mov
popf
dec
and
ret
fists
js
jle
dec
fnstenv
cmp
mov
outsl
sarl
loop
push
xor
mov
jbe
nop
orl
pop
hlt
mov
dec
out
mov
out
outsb
jge
and
xor
fnstenv
ret
cli
jae
cld
inc
jp
adc
fldl
push
mov
and
mov
inc
dec
mov
aas
je
xlat
pusha
or
fstps
sub
and
imul
inc
xorb
sub
push
mov
cmp
cmp
inc
jo
add
jmp
mov
push
bound
push
rcr
ret
aad
or
or
out
or
jge
repz
and
in
fdivr
jbe
mov
push
and
dec
xlat
pop
xchg
cmp
add
sub
add
cmpsb
scas
jo
mov
jg
filds
incb
push
jp
cmc
sbb
ds
cli
inc
call
jle
insl
cmp
je
mov
fcompl
fisubrs
fmuls
out
test
adc
adc
mov
int3
in
ss
mov
push
and
lret
push
or
addr16
cmp
cmpsb
fwait
mov
adc
and
xchg
add
mov
xchg
add
or
out
lock
xchg
jge
adc
ss
imul
dec
xor
and
stos
xchg
in
loope
mov
cmp
clc
divb
in
je
xlat
fildl
test
dec
dec
jbe
inc
in
jg
dec
icebp
inc
loop
mov
xchg
icebp
lcall
pusha
xchg
incl
fildl
int
inc
jbe
xor
fisttpl
xchg
mov
aas
push
in
adc
fs
jecxz
lea
cmc
jne
add
pushf
xchg
mov
push
pusha
pmaddwd
ret
dec
push
int3
jno
mov
mov
arpl
pop
jle
bound
mov
mov
pop
es
aad
cmp
jns
dec
add
shlb
adc
xchg
gs
pop
inc
or
ret
mov
xor
mov
pop
std
das
xchg
cmpsb
mov
dec
sbbb
test
aas
jo
mov
ret
gs
mov
push
clc
dec
lcall
cmpsl
insb
dec
xor
jno
imul
fstpl
mov
add
mov
sbb
decb
shl
gs
dec
test
sbb
adc
mov
sub
xor
mov
mov
outsl
rorl
pop
aad
idivb
push
pushf
push
inc
kmovd
imul
out
mov
rclb
pop
add
insb
fdivrs
add
push
insb
es
leave
xlat
and
movsb
xor
xchg
sub
mov
or
pop
js
cmp
push
push
jo
jbe
das
mov
jl
arpl
sahf
xchg
in
sbb
test
fcomp
push
xchg
hlt
ljmp
jbe
cli
and
adc
jbe
inc
xchg
pop
repz
pop
jnp
repz
enter
pop
add
rcrl
fs
cli
aam
aaa
shll
jbe
pop
sbb
lret
or
loop
das
pop
and
cld
addr16
cwtl
xchg
popa
in
dec
int3
insl
or
adc
rep
les
out
movsb
pop
and
xlat
ret
js
cld
insl
inc
sub
pop
xlat
ds
pop
shlb
push
push
clc
pop
repz
into
mov
sub
dec
push
add
jl
push
divb
and
loopne
fdivrs
sbb
inc
dec
xchg
outsb
repz
sahf
dec
out
xchg
dec
mov
int
lahf
mov
jp
cmp
lods
mov
dec
pop
sti
jbe
fwait
test
rcl
pop
clc
popf
nop
inc
mov
js
jl
lods
ljmp
test
and
jg
cs
pop
inc
sbbb
jno
sbb
push
jl
div
add
jnp
jle
loope
cmp
cmp
and
xchg
cmp
pop
mov
push
ljmp
push
hlt
lret
push
mov
dec
int
mov
xor
jno
neg
mov
xchg
stos
add
cs
ret
aam
test
adc
in
mov
pop
xor
cs
fsubs
or
pop
cmp
repnz
dec
adc
popl
pop
xor
lea
add
or
repz
pop
dec
and
pop
sbb
mov
sbb
mov
fiaddl
and
outsl
daa
push
mov
push
aaa
imul
add
repz
adc
iret
shlb
fs
mov
lods
mov
aad
xchg
jbe
sbb
addr16
pop
mov
mov
jl
les
jae
data16
sub
mov
je
fisubs
rcr
push
jo
push
ss
pop
mov
lods
mov
dec
mov
dec
hlt
fimull
int
cmp
insb
addr16
jnp
addb
repnz
push
fisubl
lds
sbb
xchg
jg
add
in
jmp
ret
fwait
jbe
aam
mov
out
mov
adc
xor
daa
sbb
lret
lret
inc
leave
orl
leave
aam
fdivrs
dec
push
sti
hlt
lds
inc
dec
cmp
push
mov
mov
sub
mov
mov
push
mov
jnp
mov
pop
lret
or
sbb
sbb
push
jns
jb
mov
xor
dec
subb
adc
outsl
popa
dec
pop
push
dec
aaa
ljmp
pop
mov
out
dec
sub
xor
inc
xor
xchg
mov
sub
mov
lea
add
repz
icebp
pop
cltd
dec
jo
push
stos
adcl
xor
ljmp
sub
lahf
stos
cmp
out
in
repz
xchg
push
push
inc
sbb
pusha
jne
dec
stos
jle
int
inc
jbe
mov
out
mov
insb
inc
xchg
shll
lcall
and
movsl
aas
push
dec
rcl
mov
cld
mov
and
stos
loop
inc
mov
jnp
sti
das
cmpb
test
dec
popa
rorb
rorl
xchg
push
ret
jno
jl
jmp
popf
mov
adc
add
cmc
xchg
stc
iret
push
loopne
std
xchg
pop
mov
sub
lods
xchg
fcoms
add
xor
pop
int
mov
jo
out
aam
rorl
icebp
sbb
scas
lret
popa
adc
xor
and
clc
jae
lahf
xor
daa
aam
movsb
ja
hlt
adc
test
inc
aad
jl
sbb
mov
inc
jl
push
xchg
xchg
arpl
rcll
shrb
add
ss
sub
inc
xlat
fwait
push
inc
sub
shll
aas
aaa
jb
push
xor
jbe
js
shlb
hlt
mov
sub
push
aad
jmp
mov
jl
dec
xchg
ds
fmuls
xchg
jle
orl
leave
cmp
int
adc
pop
dec
subw
pushf
cmp
dec
inc
push
rolb
test
ljmp
push
pop
idiv
stos
test
add
imul
sbbl
dec
daa
in
inc
pop
sarl
xchg
movsl
fwait
add
insb
or
and
dec
jle
push
arpl
in
js
ss
push
mov
inc
sub
jg
imul
call
or
fldcw
pushf
hlt
les
cmp
insb
and
lea
jbe
mov
or
mov
push
pop
jp
xor
sub
pop
cmp
push
sahf
fsubl
data16
cmp
sub
push
sub
jmp
ficompl
mov
lods
mov
pop
or
cmpsb
pop
fdivrl
adc
xchg
cmp
repz
mov
mov
sti
adc
push
or
in
and
cwtl
ror
sti
clc
lret
int
shlb
jbe
subb
fdivr
mov
cmp
cs
pop
dec
inc
mov
repnz
or
adc
mov
fldenv
popf
jecxz
jl
stc
sbb
xchg
ss
cli
sub
mov
add
fstpt
sbb
xchg
or
icebp
push
hlt
dec
imul
pushf
adc
jno
cltd
jb
push
rcl
adc
and
dec
cmp
int3
add
sbb
jae
push
je
cmp
jle
mov
mov
loop
mov
cld
in
jbe
push
sti
pop
in
lret
divl
out
hlt
inc
jne
pop
idivl
movsl
jge
mov
outsb
adc
xor
dec
xchg
mov
lock
xchg
dec
push
aas
cli
mov
sub
ror
je
or
and
sub
sti
aaa
cmp
and
push
repz
test
push
dec
jo,pn
adc
mov
jae
enter
shlb
pop
sarl
jl
cmc
sbb
lcall
add
cli
adc
cmp
arpl
xchg
rclb
dec
pop
shrl
bound
or
inc
shrb
xchg
mov
jecxz
adc
pushf
or
dec
insb
in
sbb
mov
call
pop
jne
mov
push
lods
xchg
adc
pushf
stc
or
adc
mov
scas
les
cmpsb
cmp
dec
xchg
jg
mov
lcall
xor
repz
lods
scas
sbb
gs
sbb
push
add
dec
dec
popa
ror
mov
lret
jle
mov
enter
mov
idivb
sub
clc
pop
mov
add
adc
int
cs
popa
push
xor
fstp
jbe
incl
and
jmp
fwait
dec
jb
adc
iret
mov
cmp
cmp
gs
cli
nop
popa
and
repz
jo
xchg
fmull
push
sbb
sbb
mov
cltd
in
test
filds
mov
das
push
xor
xor
imul
mov
inc
repz
push
test
xor
mov
and
xchg
xchg
pusha
test
mov
lret
lods
add
repnz
jae
pop
imul
out
pusha
ds
cmp
movsl
int3
mov
fsubs
outsb
mov
addr16
mov
mov
jns
in
xor
dec
aad
mov
sbb
pop
fs
push
aas
xor
cmc
dec
not
ljmp
dec
insl
xor
into
out
sbb
out
insb
dec
cmpsb
nop
sti
dec
mov
sti
and
lods
jle
add
and
sti
jb
sbb
pop
fidivrs
and
int3
add
mov
xor
dec
add
out
jne
mov
cld
fwait
sbb
lods
adc
mov
jle
mov
dec
sbb
mov
cmp
pop
xchg
ficompl
test
stos
cmp
movsb
jo
lcall
inc
jge
and
stc
xchg
cltd
cli
outsl
outsl
decl
xor
jbe
stos
push
dec
and
js
mov
mov
mov
sbb
cmp
enter
jo
add
rolb
sti
pop
xor
inc
push
movsb
xorb
pop
adc
test
fidivs
out
aas
jbe
lea
jge
mov
jno
push
mov
pushl
cmp
or
ss
dec
sti
icebp
fwait
scas
insb
sbb
ret
pop
pop
cmp
mov
inc
clc
lds
mov
stc
in
inc
sub
lds
xor
jnp
mov
sub
mov
and
insl
ss
push
pop
sbb
cmp
jbe
popf
and
dec
inc
cli
repz
xlat
sub
pop
je
xor
inc
stos
mov
sub
mov
pop
mov
xchg
pusha
xlat
scas
fists
or
jbe
rcll
mov
jb
test
ficoms
or
pushf
jecxz
jbe
jo
mov
das
mov
jg
dec
jnp
xchg
repnz
clc
jns
insb
jbe
or
mov
incl
adc
push
mov
or
lahf
mov
jb
aas
aam
mov
mov
cmp
inc
pop
mov
fistpll
aaa
daa
push
mov
jecxz
jg
jle
inc
jns
xchg
mov
mov
aam
xlat
inc
clc
popf
mov
push
cld
jl
xchg
push
lods
push
dec
pop
cmp
lret
or
mov
and
sub
aam
into
scas
pusha
cmc
xor
outsb
cld
pop
lds
scas
popf
or
xor
jb
inc
les
ja
jle
add
sub
and
and
jbe
jg
jno
jno
push
movsb
into
mov
aad
push
and
mov
jb
mov
movsb
fisttpl
decb
lods
xor
push
leave
stos
dec
testl
xor
xchg
repz
icebp
clc
gs
ljmp
or
loopne
arpl
cmp
in
jcxz
jl
push
dec
jno
cli
stc
mov
pop
gs
hlt
aad
adcl
decb
ret
shrl
adc
sbb
sti
imul
aas
popf
hlt
das
jle
sahf
mov
mov
mov
lahf
scas
into
adcb
dec
add
inc
fs
fisubrs
inc
ds
mov
jle
cmpsl
ljmp
repnz
mov
xchg
inc
repnz
jno
cmp
pop
je
jle
inc
stc
sbb
enter
je
push
cmp
and
sahf
or
mov
ficoml
pop
mov
inc
cmp
and
push
lea
lret
or
add
repnz
insb
and
cmpsb
mov
fld1
repz
clc
dec
repz
push
call
cmp
fcoms
pop
mov
pusha
das
add
call
mov
and
lret
push
jp
push
mov
pop
jbe
pop
add
xchg
mov
sbb
jmp
hlt
jbe
cmpl
fisttps
pop
inc
rcrl
movsb
int3
aad
sbb
out
aaa
xlat
imul
push
fisttpl
adc
xchg
push
out
dec
fcomip
jbe
mov
add
idiv
mov
in
mov
sbb
mov
mov
idivb
push
lods
mov
ret
rolb
rorb
in
shl
inc
mov
sbbl
add
icebp
scas
push
push
cmp
pop
inc
pop
mov
mov
jecxz
add
and
stc
xchg
add
inc
jbe
loope
dec
jb
cld
test
jo
add
push
and
cmp
xorb
jmp
lret
aam
filds
or
mov
and
lock
in
sub
lods
xor
jns
dec
out
lods
xor
leave
dec
mov
push
rcrl
pusha
stc
pop
jbe
outsl
push
push
add
jle
pop
aaa
int
test
inc
adc
sahf
sbb
mov
popa
and
repz
popf
xor
in
ljmp
push
fisubrl
inc
je
mov
cli
aad
push
jmp
mov
jbe
jp
stos
pop
cmp
sub
push
aas
out
loope
lea
xchg
adc
mov
adc
mov
mov
add
jbe
mov
dec
inc
aas
aad
fdivl
xchg
jb
sbb
add
icebp
push
aas
inc
inc
xchg
jecxz
jp
imul
jnp
push
cmp
jne
lea
and
push
scas
scas
gs
test
jne
arpl
xor
sub
cmpsb
loope
jno
fwait
inc
push
in
les
fcomip
mov
jno
inc
add
xchg
dec
push
gs
jbe
jb
jle
cld
test
jno
inc
insb
fisttpl
sbb
xchg
mov
dec
push
adc
lahf
add
ja
dec
jp
andl
mov
adc
adc
aas
push
flds
jmp
test
or
cli
mov
daa
pop
xor
mov
cmp
adc
xchg
mov
mov
jnp
add
lods
dec
jae
fisttps
popl
cmc
push
xchg
xor
push
repz
out
aam
aad
dec
mov
and
iret
add
jbe
sub
mov
xorb
dec
incb
mov
dec
jle
loop
clc
adc
mov
dec
add
adc
js
and
xchg
push
testb
decb
xorl
andl
fldenv
std
xor
cltd
cmp
sbb
lea
lcall
jbe
movsl
pusha
fdivrl
mov
dec
jle
xchg
cmp
or
or
andl
cs
xchg
pusha
sti
pop
xor
or
adc
fdecstp
jns,pn
dec
outsb
add
push
mov
jle
pop
sub
testl
rol
fstps
dec
jl
jl
dec
cmp
jbe
sarl
sub
insb
lods
sahf
inc
and
idivb
sbb
inc
xchg
test
push
cmpsl
cmp
enter
cli
icebp
sub
mov
int
lahf
lods
sahf
or
shll
clc
movsb
cmpsl
push
jbe
insb
mov
shl
cmp
jbe
cmp
gs
ss
cltd
cmp
cli
xchg
fimuls
imul
out
subb
ret
mov
and
in
xor
push
and
and
fcoms
ror
mov
or
cld
js
push
negb
jle
fwait
leave
lds
dec
or
popa
mov
out
gs
in
mov
mov
mov
dec
shl
aam
cmpsb
jnp
lret
inc
bound
gs
add
mov
iret
jg
push
mov
loop
fidivrs
fisttps
pop
jbe
xchg
pop
inc
cmp
sub
jnp
popa
jmp
sbb
jo
jl
outsl
arpl
test
out
push
rsm
fisubrl
mov
sub
out
mov
imul
xchg
mov
popa
nop
xor
cmp
daa
mov
clc
mov
sbb
fstps
add
fldenv
add
aas
ja
leave
rcl
fsubl
dec
mov
or
loop
xor
mov
xlat
adc
pop
hlt
das
push
adc
pop
fs
sub
repnz
mov
pop
adc
out
fnstcw
sub
fistps
fildl
jno
mov
out
aam
jne
js
mov
out
dec
jle
aam
hlt
mov
add
jae
insb
pop
shll
cmp
lcall
pop
lret
pushw
sub
ficomps
pop
test
das
mov
inc
dec
mov
fisubs
test
daa
jl
jae
insb
sbb
jecxz
push
mov
cmc
dec
add
and
adc
cmpsl
pop
pop
pop
cmp
dec
jle
mov
mov
in
xchg
lods
insb
sbb
sbb
inc
icebp
mov
mov
loope
mov
dec
sbb
incl
dec
std
outsl
insb
xchg
xchg
xor
das
jbe
xor
add
xchg
jg
xor
inc
comiss
xchg
jbe
cmpsl
xor
cmp
test
pop
lods
xor
fcmovne
insb
lcall
fbstp
rcll
jae
cmp
imul
inc
inc
fistps
movsb
pushl
rolb
int
test
or
cmc
lock
sbb
mov
repz
xchg
sbb
or
cmpsb
jbe
inc
and
add
or
jp
into
pop
sub
add
jl
mov
xchg
pop
inc
xchg
dec
lds
ja
or
icebp
pop
fidivrl
jnp
xor
mov
int3
rcr
inc
loopne
push
push
cmp
adc
or
movsl
jmp
out
roll
lcall
nop
jno
or
leave
push
and
cmp
mov
fsubrl
or
popf
into
enter
out
mov
fildl
pop
adc
lret
inc
shll
xor
and
xchg
ja
cld
stos
cmp
lret
fs
testb
xor
sarb
inc
mov
pushf
jae
jmp
pop
lret
jl
dec
adc
cmp
fs
jb
mov
lahf
or
push
dec
fs
stos
jle
aam
mov
out
jno
jbe
aas
mov
fwait
movb
jbe
sbb
push
loopne
es
inc
rolb
or
dec
jbe
push
xchg
in
in
stos
repz
inc
test
lret
pop
inc
xchg
add
sub
mov
dec
jnp
cmp
jmp
jne
cld
cmpsl
xchg
cmp
gs
adc
xchg
lcall
jge
ja
cli
jmp
lret
out
fidivl
pop
addr16
jecxz
jmp
ja
loopne
movsl
test
mov
sub
cmp
push
pop
add
xor
cmp
cmp
xorb
icebp
clc
mov
sbb
inc
dec
xchg
aas
repnz
addb
cmp
or
push
into
fdivr
jle
pop
adc
nop
cmp
arpl
jb
dec
pop
ficoml
or
mul
subb
inc
cli
daa
stc
aas
divl
pop
or
sbb
mov
jnp
add
jle
jle
fistl
cwtl
fsubrs
inc
ss
add
dec
sbb
stos
adc
mov
test
fcomi
push
ret
repz
xchg
mov
pop
add
dec
movsb
inc
sahf
sahf
stos
jbe
fbstp
cmp
int
lds
mov
dec
enter
jo
xchg
mov
mov
cmp
leave
lcall
jle
pop
les
test
add
mov
add
sbbl
les
cli
aaa
in
cmpsl
push
push
jg
push
andl
mov
rclb
xchg
push
rcll
jno
imul
cmpsb
inc
jne
fstl
cmpsb
inc
out
mov
out
adc
mov
cmp
inc
jl
cmpsl
xor
shll
jb
gs
jmp
mov
mov
cld
dec
and
jp
dec
jno
shlb
jg
jbe
mov
mov
dec
flds
data16
jns
or
add
push
push
dec
sbbb
sbb
repnz
or
cmp
js
movsl
mov
jbe
das
pop
leave
jnp
xlat
cmp
mov
dec
mov
ljmp
testl
adc
ljmp
daa
stc
test
adc
lea
nop
mov
shll
out
filds
cld
xchg
fistps
push
adc
mov
mov
cmp
jecxz
xchg
inc
xor
test
pop
sub
mov
repz
or
push
sbb
lcall
cmp
mov
jg
push
insb
scas
repnz
outsl
lea
pop
pop
xor
stc
fwait
jle
mov
sti
or
gs
in
lea
dec
gs
in
inc
sub
sub
jg
mov
imul
pop
pusha
out
fsqrt
lahf
mov
stc
aam
ret
mov
pop
mov
add
adc
call
mov
or
mov
jnp
cltd
push
icebp
insb
push
cmp
push
and
sub
out
aad
fnstcw
fsubl
fcoml
test
mov
mov
xchg
stc
and
or
ss
fdivrl
rorl
sub
push
pop
ss
push
nop
inc
repnz
push
enter
lock
daa
fbstp
xchg
lahf
and
jbe
mov
push
add
jg
or
das
shlb
or
mov
mov
imul
jle
clc
cmp
sbb
test
mov
adc
push
stos
jecxz
mov
lahf
lods
push
adc
adc
mov
stc
lret
sub
push
fnstenv
in
aam
push
jg
repz
int
push
into
lods
aad
cmp
dec
xor
jno
lods
push
jae
jl
jp
lds
push
iret
xchg
loope
push
jl
popa
sbb
mov
test
push
mov
mov
test
sub
mov
push
adcb
rcll
jbe
jns
loopne
lock
jae
adc
inc
push
jne
inc
mov
xchg
dec
pushf
mov
push
jecxz
jo
and
int3
test
pop
testl
out
jle
sbbl
into
enter
or
xchg
mov
jbe
lock
testl
or
pop
mov
js
test
nop
stos
mov
mov
loopne
mov
dec
or
rcr
mov
arpl
in
or
push
mov
mov
inc
stos
mov
repz
stos
xor
jno
jg
xchg
push
icebp
lret
mov
movb
scas
dec
pop
mov
jno
pusha
lds
mov
pop
and
outsl
test
dec
push
add
cmpsl
lods
out
adc
lahf
cwtl
and
push
aam
add
sbb
je
lret
mov
cmc
xchg
fwait
or
jns
mov
inc
fiadds
xor
add
push
mov
ja
pop
mov
lret
test
push
add
jle
sti
out
and
jg
mov
pushf
add
xchg
test
sub
add
jle
inc
mov
ja
aas
fsubrl
xchg
mov
push
inc
fdiv
lods
cwtl
jbe
jg
mov
mov
and
adc
mov
icebp
dec
jle
mov
inc
repz
jbe
mov
lret
test
xlat
push
mov
or
test
jl
ja
cmp
sub
push
or
ljmp
repz
cmp
punpckhbw
xor
dec
add
jg
jo
inc
call
or
loop
mov
fcompl
sbb
sti
push
in
test
xchg
inc
test
inc
jbe
sbb
mov
mov
je
jbe
shr
sti
bsf
int
mov
xor
icebp
outsl
cld
add
in
nop
out
jno
xor
or
jmp
inc
test
outsl
je
mov
fs
cmp
push
or
mov
imul
hlt
scas
movsl
jp
das
jno
decl
cmp
scas
inc
adc
jae
sub
xor
sti
xor
xor
fbld
xchg
mov
sbb
push
xor
push
arpl
jecxz
mov
aas
stc
cmp
pop
push
or
push
insb
les
cmpsl
sbb
cmpsb
sub
adc
or
push
mov
sbb
cmp
mov
repnz
xchg
lock
pop
and
pop
jle
jmp
xchg
jl
add
loop
enter
rcrb
das
jb
notl
sbbl
mov
movsb
mov
and
xchg
call
testb
mov
sub
jbe
out
push
lds
sbb
mov
stc
cmp
dec
test
lods
cmpsb
mov
pop
mov
mov
mov
sti
scas
rcr
inc
cmpb
xchg
iret
aaa
adc
fdivrs
cmp
lds
ljmp
cmc
push
cld
mov
popa
mov
fcomps
or
jl
sub
cli
mov
dec
scas
imul
test
inc
cmc
repnz
lret
jbe
inc
cmpb
jae
add
jno
pop
jbe
cmp
push
jno
inc
imul
xor
mov
inc
add
jge
jbe
pusha
sbb
lods
lds
sbb
push
add
mov
push
dec
shrl
insl
lds
jp
cmpsb
xchg
stc
add
sub
aad
fcoml
enter
sub
sbb
mov
mov
icebp
repnz
ljmp
loopne
scas
mulb
add
push
mov
dec
pop
popa
push
lds
imul
jae
push
cmpsb
sbb
repz
adc
fs
das
jecxz
pop
xchg
les
or
jp
sbb
jbe
push
sub
aas
mov
sub
jae
push
test
gs
xor
dec
and
out
xlat
icebp
ljmp
in
cmovnp
subb
icebp
inc
aas
pop
popa
ret
fs
call
outsl
mov
xor
xchg
jmp
xlat
inc
jg
add
sarl
and
test
lret
aas
pop
sub
movsl
popf
pop
ficoms
add
insb
mov
xor
cmp
outsl
pushf
push
imul
lret
sbb
mov
test
mov
xor
pop
cli
fimuls
sti
jbe
adc
cmp
andl
jg
cli
push
mov
xchg
cli
ret
mov
cmp
mov
clc
jle
add
mov
jnp
xchg
dec
cmp
push
mov
sub
dec
jecxz
mov
add
test
lret
repnz
mov
cmp
xor
jge
and
jecxz
jl
mov
xchg
dec
cmp
je
das
and
sti
fdivrl
inc
repnz
add
fnclex
mov
cmp
int
push
or
aam
cmovge
mov
jp
xor
and
inc
push
mov
ja
sbb
dec
jle
adc
mov
mov
xchg
pop
jns
test
mov
fnstenv
out
test
mov
out
ret
outsb
hlt
adc
pop
addb
mov
lea
mov
sbbb
mov
out
push
xchg
aaa
sbb
adc
xchg
adc
and
ret
push
cmp
std
stos
pop
addl
or
and
add
andl
inc
lods
test
pusha
mov
cwtl
cmp
lds
mov
mov
add
xorl
jno
cmp
inc
cmp
fcoms
push
pop
lcall
loop
sbbb
lods
xor
mov
cmpsb
inc
sahf
push
je
xchg
push
rcr
gs
mov
sbb
jo
imul
lcall
test
sbb
divb
movb
pop
mov
or
cmc
push
sub
fisttps
arpl
hlt
ljmp
lods
popf
adc
addr16
std
jae
adc
jbe
popf
repz
sbb
xchg
or
or
cmpsb
jbe
enter
inc
and
daa
je
and
jns
adc
jle
je
and
push
inc
cli
sbb
push
cli
repnz
enter
mov
push
dec
cmp
adc
ds
ljmp
pop
popa
adc
adc
adcl
add
mov
mov
cmp
dec
popa
pop
sti
bound
jb
inc
pop
je
insl
nop
xchg
xchg
cwtl
mov
dec
outsl
js
inc
push
add
push
lret
mov
call
or
stos
leave
jbe
pop
pop
jle
jbe
push
divl
mov
jmp
sbb
add
fdivrl
shrb
decb
je
cmp
jge
pop
shlb
adc
xor
int3
ss
fdivr
jle
lahf
xchg
call
inc
push
dec
jmp
dec
mov
insb
or
outsb
stc
test
lcall
aad
loope
pop
cmp
xor
lcall
popa
out
int3
xor
scas
xchg
jb
nop
or
lods
inc
scas
sub
into
repnz
mov
pop
fs
add
xor
sbb
mov
call
lock
fcoml
jae
repz
rcll
fsubrs
jne
mov
cmp
add
fstpt
sbb
dec
jnp
lcall
mov
xchg
int3
adc
insl
inc
dec
add
push
andl
hlt
jle
or
xchg
sbbb
mov
push
mov
jle
enter
sbb
jle
arpl
rep
stos
sbb
sub
nop
ja
sub
jbe
cmc
loope
inc
insb
push
popa
lahf
adc
mov
ret
mov
dec
adc
rorb
xorb
push
jl
out
lea
mov
ja
mov
leave
jno
daa
jle
lahf
and
xchg
mov
cmp
test
jnp
sbb
call
xor
addr16
add
sub
pop
mov
mov
jo
orl
add
decl
cmp
xchg
not
rcr
mov
scas
pop
icebp
aam
mov
rdtsc
fiaddl
xlat
or
aam
sarl
add
test
pushw
xor
ret
xchg
orl
xchg
jge
cld
notl
sub
cmp
mov
aaa
inc
aas
inc
mov
pop
cmp
or
cmp
pop
dec
testb
mov
clc
in
pop
scas
imul
in
mov
xor
dec
sub
cmp
cmpsl
popa
sbb
jmp
adc
lret
adc
mov
mov
insb
jbe
in
mov
nop
sbb
xlat
sbb
lret
and
xchg
pmullw
lds
in
jo
pop
fcmovu
mov
dec
fstps
test
std
xor
mov
out
or
xor
aaa
pop
divb
mov
add
sub
test
xor
lret
in
mov
rcrl
mov
imul
test
loope
pop
dec
dec
dec
cli
push
mov
fs
outsl
jno
xchg
test
mov
mov
in
aad
lret
movsl
push
shrl
fwait
add
outsl
fs
cmc
lahf
mov
fstpt
aas
push
cmp
jnp
cmp
ja
xchg
repnz
and
push
cld
mov
popf
xchg
ds
add
push
xor
lret
mov
pop
je
pop
lds
lods
popf
cli
lea
aas
enter
dec
dec
cmp
fists
aam
jg
cmp
adc
pushf
ja
xchg
jl
lds
loope
lahf
arpl
add
je
dec
cltd
pop
clc
xchg
fdiv
xchg
add
in
add
and
ds
aas
adc
cmp
testb
sbb
ss
mov
push
jo
repz
sbb
mov
dec
xchg
xorl
sub
je
insb
loop
adc
out
insb
lock
add
lods
add
shr
fidivrs
repnz
ja
pop
hlt
imul
add
cmpsb
movsb
mov
cmpsl
cmc
sbb
jns
adc
xor
mov
and
in
shrb
ret
lea
arpl
cmp
in
pop
mov
incl
dec
jg
ret
lahf
dec
nop
xchg
test
fnsave
mov
je
sub
shll
outsb
loopne
mov
dec
jae
fistpl
aam
mov
loopne
pop
pusha
js
pop
idivb
xchg
and
into
push
xor
cmp
fwait
test
jnp
inc
sub
cmp
test
inc
loope
jecxz
mov
pushl
mov
mov
push
mov
and
mov
add
mov
add
shlb
lcall
add
pop
orb
add
mov
lea
sti
fdivrs
mov
test
xchg
xchg
jbe
dec
sub
and
add
mov
pop
xchg
add
btr
call
idivb
mov
test
addr16
ljmp
mov
dec
loopne
jg
loope
xchg
ror
mov
lock
pop
fdivr
jle
jmp
cwtl
scas
imul
mov
adc
popf
cmp
mov
jae
pop
loopne
mov
and
ret
sbb
imul
cmpl
mov
sbb
aas
popf
mov
jbe
inc
dec
fnstsw
and
rcrb
cltd
xchg
sub
lds
xchg
cmp
fisttpl
add
jle
mov
lods
fs
ja
inc
jae
or
adc
imul
inc
fildll
insb
cltd
mov
scas
xor
rclb
mov
xchg
add
shlb
jmp
adc
add
fmulp
mov
sbb
lret
pusha
jecxz
rolb
cmp
or
pop
push
pop
dec
test
mov
cld
dec
add
ja
push
mov
xchg
inc
push
jne
pusha
ja
in
cmp
shll
cmp
popl
cmc
xchg
cmp
daa
and
mov
insl
jo
scas
outsb
test
sarl
inc
jb
sub
dec
or
push
inc
mov
mov
sar
xchg
je
repz
adc
cltd
hlt
jle
pushf
mov
mov
push
aas
add
jbe
aad
shrb
dec
jbe
fdivs
mov
pop
dec
adc
hlt
mov
jbe
addr16
mov
jecxz
iret
push
popf
xchg
add
aaa
mov
fcompl
scas
jbe
sub
pop
in
dec
mov
xor
xchg
ljmp
stc
cld
mov
jge
adc
cmpsl
inc
repz
inc
shlb
into
mov
sti
jo
cmp
cmpsb
es
mov
pop
push
enter
frstor
mov
and
and
insb
jo
pop
daa
jo
call
sub
jg
orb
mov
negb
dec
jbe
jl
hlt
pushf
sbb
fcomip
add
push
sbb
jae
mov
inc
add
dec
aam
xor
lret
adc
pop
cmp
fs
jne
and
shll
stos
sbb
andl
sub
jle
mov
mov
inc
push
jbe
loope
sbb
cmp
jb
xchg
aas
jae
pop
das
shll
inc
jmp
test
dec
pop
xor
dec
scas
ret
cld
xchg
ret
das
adc
or
pusha
and
js
ret
adc
jmp
jno
xchg
fcompl
push
mov
in
jnp
add
jb
repnz
xchg
fucomip
sub
inc
fdivl
push
les
mov
aad
xchg
ljmp
rolb
sbb
sbbb
push
pop
xchg
dec
ljmp
cmp
jbe
je
jle
les
add
xchg
pop
aaa
add
insl
inc
scas
test
hlt
mov
push
or
fimull
mov
and
pop
pop
test
movsl
imul
ret
sahf
jmp
push
push
jmp
add
inc
bound
lcall
sarl
out
js
aam
or
mov
fcomps
pusha
xlat
rol
int3
mov
jo
ljmp
fdivl
and
push
pop
pop
add
inc
sti
xchg
dec
jbe
xchg
cmp
std
imul
leave
movsl
push
dec
push
mov
lahf
cmp
incl
popf
ljmp
pushf
imul
or
xchg
sti
mov
jnp
jl,pn
pushf
jle
test
fs
xchg
jbe
enter
mov
pop
into
mov
xchg
dec
scas
xor
cli
icebp
das
xchg
pop
mov
repz
rcll
add
mov
cmpsb
lret
in
stos
jmp
pop
add
out
stos
lret
shll
xchg
mov
xchg
jae
xchg
adc
out
hlt
imul
xchg
jl
mov
loope
ja
movsb
sti
dec
in
jmp
sub
pop
gs
push
fdivl
fnstenv
cmp
mov
cmp
leave
inc
imul
into
daa
dec
sahf
push
mov
into
mov
mov
aad
mov
movsl
ret
lock
mov
and
push
lcall
nop
pop
cmp
sub
test
xchg
mov
push
lea
mov
lret
out
addr16
fsubl
pushf
or
xchg
sub
js
jb
popf
in
and
outsb
xchg
lahf
push
repz
dec
mov
leave
xchg
rclw
cmp
das
stos
xchg
push
daa
scas
test
add
lea
sub
dec
movsl
push
mov
push
test
pop
xchg
pop
imul
loop
stos
mov
xchg
and
push
jmp
lahf
lret
mov
add
lods
es
faddl
sub
out
mov
and
insb
sbb
jg
pop
adc
jbe
andps
push
shl
pop
lods
jecxz
push
jle
roll
stos
push
mov
xchg
loope
imul
mov
daa
add
fs
jle
aaa
push
inc
movl
push
add
mov
pop
movsb
jl
cmp
push
fisttpl
sbb
dec
int3
adcb
js
xchg
mov
test
fildl
rorb
jmp
mov
mov
in
push
mov
inc
push
or
pop
jo
mov
or
leave
fdivrl
sbb
adc
jecxz
cmp
adc
clc
mov
lock
aaa
lcall
mov
icebp
lea
lahf
xor
pop
test
pop
aas
dec
xchg
xchg
adc
fs
lds
or
sub
repz
js
jbe
aam
and
ficompl
fneni(8087
mov
cmpsb
xchg
cld
cmp
cmp
mov
aas
js
mov
std
inc
mov
xor
test
ffree
mov
or
jbe
fdivrl
stc
sbb
mov
xchg
jp
cmp
jnp
les
ds
test
popf
fiadds
xchg
inc
or
cltd
xor
scas
xor
push
ret
jle
pop
dec
mov
jbe
pushf
aas
popa
ret
push
sbb
in
aam
hlt
mov
inc
fsubr
mov
test
xchg
in
add
jle
stos
iret
pop
fcmovu
cltd
fildl
test
loopne
xor
hlt
pop
arpl
push
push
cmp
add
cmp
aas
inc
xlat
stc
addb
fdivr
rcr
sub
adc
xor
cmp
inc
mov
xchg
jne
mov
mov
ljmp
outsl
arpl
mov
cmp
ja
or
adc
mov
jmp
addl
rcrl
jo
push
pop
mov
pop
div
xchg
and
in
jbe
stos
leave
shll
jle
or
inc
mov
jle
xor
or
pop
or
pop
dec
repz
add
sub
xchg
mov
pop
fs
int
push
cmp
xor
sub
shlb
das
dec
inc
xchg
jbe
inc
shrb
ss
mov
aas
fdivrl
hlt
subl
outsb
fwait
fs
jne
xchg
pop
pop
loopne
fnsave
in
cmp
lahf
xchg
jle
rcll
fldt
inc
fwait
test
gs
icebp
outsb
pop
inc
jb
sbb
hlt
jle
fwait
arpl
out
push
jp
insb
jns
mov
cmp
loopne
dec
jle
add
and
mov
inc
aas
adc
add
mov
push
cltd
xor
inc
cli
jno
jle
fildl
jp
fwait
mov
enter
lret
pushl
push
sarb
sub
pop
lret
jbe
pop
mov
jno
mov
js
jns
xchg
aam
call
pop
aad
xchg
subl
jb
daa
jne
pop
test
jle
dec
rep
cmp
mov
mov
pop
out
rolb
add
jnp
repnz
dec
xchg
add
add
test
adc
mov
test
fwait
nop
add
push
sbb
rcr
cmp
adc
int
mov
mov
cli
subl
inc
pop
or
clc
sti
loope
mov
ret
sub
fiadds
add
xlat
cli
jmp
mov
call
in
or
fimull
jnp
add
cmp
cmpsb
ficoms
dec
jno
or
sarl
sbb
or
fsubrl
push
cli
mov
mov
dec
cmpsl
cmp
jnp
mov
or
mov
enter
jl
ja
mov
imul
push
mov
stc
sub
mov
jnp
aaa
push
sub
aas
or
xchg
nop
dec
sbb
sti
pop
pop
cli
jnp
sbb
and
repz
dec
cmpb
add
lock
call
xchg
mov
mov
divb
outsb
mov
push
test
sbb
stc
dec
add
ds
or
cmp
mov
jnp
cmpsl
fmull
jno
mov
jns
pop
jp
xchg
xlat
inc
jnp
mov
push
ds
les
aad
js
clc
mov
mov
sbb
xchg
pop
push
sti
ficoms
add
sub
jmp
push
and
cmpsl
repz
aam
push
dec
push
hlt
shll
push
ljmp
jbe
xchg
outsb
lret
inc
mov
add
fimull
enter
nop
mov
mov
jns
fcoml
push
xchg
pushf
xchg
stc
push
add
mov
pop
or
stos
sbb
add
pop
or
insb
lret
jns
je
mov
inc
test
jb
mov
adc
cmp
cmpb
fnstsw
push
jno
jb
out
repnz
or
in
out
adc
lea
xchg
mov
cmp
dec
mov
pop
mov
or
pop
ljmp
test
and
ficomps
jnp
cmp
dec
je
lahf
cmc
fidivrs
mov
inc
jb
jbe
sbb
cwtl
fiadds
or
ret
push
inc
fidivl
lcall
mov
jnp
push
or
aad
pop
sti
insb
sbb
xor
inc
cwtl
fildl
push
mov
cmpsb
jae
loopne
add
fistpl
jbe
lea
xor
cmp
dec
test
sbb
rcr
lea
mov
cmp
fwait
hlt
dec
mov
out
mov
jb
idiv
mov
push
dec
adc
stc
lret
lahf
nop
cmp
sahf
xchg
ret
ja
lea
sar
inc
hlt
adc
xchg
add
lock
fwait
or
cwtl
cli
fidivrl
insl
mov
test
jnp
nop
jb
mov
stos
pop
cmp
popf
sti
ret
cli
popa
push
stc
push
lea
mov
lret
mov
loope
jg
addb
push
xchg
sti
test
xchg
cli
aad
into
das
xchg
or
sti
mov
sbb
dec
push
je
mov
or
mov
jl
and
pusha
jl
jb
push
cltd
lods
fsubr
div
mov
or
shr
jg
cmp
dec
lret
dec
enter
mov
cwtl
push
stos
sti
jg
fistpll
xlat
add
xor
adc
in
lds
xorl
cmp
outsl
add
pop
sbb
pop
or
imul
sbb
pop
or
mov
jg
sbb
jae
pop
shll
std
mov
in
push
jae
xchg
or
mov
fidivl
enter
xor
jbe
mov
arpl
sbb
lret
incb
ds
jnp
je
sbb
jb
pop
cli
jg
ja
sahf
ret
sbb
cld
or
cli
int
jge
dec
mov
mov
dec
imul
stos
lods
mov
mov
inc
insb
hlt
mov
pop
mov
jle
daa
sbb
mov
pop
ds
filds
inc
popa
lcall
cs
or
outsb
xor
sub
cld
andb
out
sub
jg
rcrb
adc
sbb
sbb
repnz
lea
sub
aas
js
sub
bound
pop
and
hlt
cmpsl
mov
idiv
or
pop
dec
cmp
sub
xor
cmc
push
push
jns
jbe
in
cmpsl
imul
in
pop
stos
negb
add
in
and
sub
cld
dec
add
incl
mov
stc
or
cld
push
push
xlat
or
das
nop
jbe
sub
cwtl
and
negb
adc
mov
dec
vpcmpeqd
push
das
mov
fdivrs
imul
dec
popa
mull
outsb
test
sub
je
inc
or
push
jmp
cmpsb
jp
jle
iret
mov
adc
fwait
cmc
or
sub
es
dec
mov
negl
repz
ret
rolb
xor
std
stc
fwait
mov
jg
cmp
pop
push
fstps
in
mov
shll
dec
test
prefetch
lahf
fisubrl
mov
jbe
leave
ret
clc
scas
dec
fs
stc
mov
sub
jl
mov
loopne
sti
std
xor
inc
inc
add
into
scas
das
xor
cmp
in
nop
or
sub
outsl
mov
push
pushf
push
xchg
push
cli
das
and
sbb
addr16
aaa
mov
cmp
pop
or
jmp
cld
pusha
inc
lret
dec
jp
loop
hlt
mov
sahf
loop
or
inc
scas
loopne
cli
mov
xchg
js
jbe
fcomp
or
cmp
mov
sub
jle
in
gs
aaa
pop
lods
dec
mov
jecxz
popf
pusha
ret
cmp
mov
scas
test
fwait
inc
ja
faddl
imul
sti
xchg
int3
lea
lahf
mov
test
shll
iret
xchg
pushf
lret
loop
int
sbb
jmp
les
inc
dec
cwtl
pop
cmp
adc
fdivl
popf
nop
inc
ds
jb
sub
aas
test
pop
add
arpl
and
out
add
sbb
jbe
push
pop
les
xlat
sbb
xchg
cli
inc
xchg
pop
jo
imul
fwait
mov
or
cmp
mov
ret
jbe
sahf
stos
scas
lds
daa
adc
cmp
mov
push
dec
push
jecxz
ds
repnz
pop
xchg
push
jmp
stos
xchg
inc
in
mov
addr16
lods
pop
sub
lds
addr16
inc
repz
scas
jb
jo
loop
or
jp
into
jo
push
mov
inc
pop
dec
cli
pop
int3
add
inc
ret
xchg
out
sbb
sub
stos
mov
cld
mov
xor
cs
hlt
lds
cmp
decb
dec
mov
jp
sbb
sbb
dec
popf
repnz
push
add
xor
or
and
xchg
sbbl
inc
addb
das
pop
or
loopne
lods
xchg
xor
out
ds
push
stos
cmpb
jge
pusha
movl
mov
xor
push
dec
cmpsl
lods
adc
jle
in
xchg
mov
or
and
nop
lds
fmuls
pop
jge
addb
dec
sub
and
repz
xor
adc
cmp
fbld
xchg
sub
xchg
push
mov
mov
stos
push
inc
or
mov
cmp
call
fdivrl
mov
scas
aas
rcrl
cmp
or
xor
cmp
loope
sub
hlt
jle
mov
push
insb
sbb
adc
xor
nop
imul
outsl
and
popf
lods
stc
scas
sti
adc
pop
loopne
mov
adc
sbb
sbb
notl
sub
or
negb
pop
cmp
pop
jb
rcl
jmp
cmp
shrb
jl,pn
jbe
das
mov
lcall
add
std
mov
push
in
jmp
xchg
inc
jbe
pop
cmpl
xchg
cmc
cld
jle
push
cmp
xor
dec
xchg
orb
cli
jbe
pop
imul
and
popf
inc
rclb
xor
aas
dec
rcl
jg
push
sbb
out
pop
int3
cmp
cld
sbb
lds
mov
shll
add
imul
xchg
nop
add
mov
aas
popf
stc
out
jle
and
pop
call
cmp
jl
addr16
mov
lcall
jae
jo
dec
popa
push
mov
dec
inc
cli
mov
mov
inc
jge
xchg
xchg
movsb
fildl
lods
push
imul
jb
mov
jno
outsb
in
out
push
pop
aas
add
js
inc
dec
hlt
mov
xchg
sbb
mov
mov
sub
add
add
jle
pop
aas
cli
add
shl
ljmp
pop
mov
push
or
cmp
or
les
lahf
dec
mov
inc
aas
aas
mov
outsb
cmc
cmpsl
pop
outsb
inc
inc
fldl
stos
and
cmp
aam
mov
xor
in
inc
pop
inc
shl
mov
mov
mov
pop
sahf
repz
push
pop
add
inc
aad
cmp
testl
aam
push
mov
push
mov
mov
outsl
add
or
adc
pop
mov
inc
minps
jle
hlt
jl
clc
mov
lret
mov
add
mov
jno
lcall
and
in
mov
or
or
movsl
pop
jb
mov
test
sub
pop
pop
lret
xor
aad
sub
bound
cld
add
xchg
push
xorb
fistpll
dec
shr
arpl
sub
cwtl
dec
pop
fadds
mov
dec
and
arpl
dec
repz
mov
insb
inc
rcll
in
cli
mov
mov
fistpl
cmp
lods
push
or
sub
enter
icebp
mov
push
sahf
or
test
dec
movsb
sub
inc
in
push
or
fdivrl
out
push
mov
mul
cmc
fldt
jbe
xchg
cmc
lret
aam
mov
xchg
adc
push
scas
sub
xor
mov
xor
loopne
fildl
arpl
inc
xchg
inc
in
icebp
cmpsb
rol
and
mov
xor
inc
inc
mov
mov
imul
jbe
push
and
sub
inc
mov
nop
mulps
idiv
jae
xchg
adcl
loope
pop
out
sub
xlat
adc
enter
pop
decl
xchg
inc
pop
stos
fdiv
jbe
dec
cmpps
shll
or
popa
test
test
jbe
add
push
push
lret
out
pop
in
jp
jbe
dec
iret
cmc
repnz
ljmp
ret
jns
mov
pusha
mov
fnstsw
jge
fs
mov
negl
xchg
in
xor
adc
push
inc
mov
enter
jbe
pop
ret
pandn
sub
sbb
xchg
fadds
repz
fnstenv
sar
cmp
push
icebp
xchg
jbe
ss
insl
ds
cmp
ljmp
mov
mov
xor
push
jno
push
push
pop
mov
xchg
movsb
xlat
push
cmp
xchg
adc
push
jae
mov
mov
push
xor
push
comiss
mov
in
lds
pop
nop
flds
or
dec
pop
pop
dec
dec
dec
cmp
xor
mov
sti
pop
rcrb
aad
imull
sbb
dec
mov
dec
ret
movsl
cmp
js
mov
pop
inc
mov
cmp
stos
jg
dec
shlb
dec
mov
sar
cli
insb
das
xchg
leave
inc
or
scas
cwtl
ret
arpl
sub
sahf
jmp
xor
xchg
cli
cmp
arpl
arpl
jp
adc
je,pn
aam
int3
lock
mov
or
push
mov
loopne
adc
push
lea
mov
stc
xchg
aas
push
sub
xchg
js
or
xor
jmp
lahf
inc
mov
jp
push
lcall
popa
dec
or
notl
pop
std
shrl
and
mov
xlat
popf
sub
pop
mov
pop
cli
shll
dec
dec
xchg
adc
test
test
push
xchg
lahf
call
divl
mov
fcomi
ret
xchg
ja
dec
inc
aam
arpl
inc
add
js
mov
out
jnp
inc
dec
clc
jne
fs
sbb
icebp
sub
push
aam
mov
mov
pop
and
hlt
xor
aam
inc
retw
and
insb
sbb
movsl
je
jmp
mov
xor
bound
sub
test
xchg
pop
ss
in
jl
cmp
fstps
cmp
lds
mov
xor
mov
jg
shlb
jns
cmp
fdivrl
add
repz
pop
jmp
xor
lds
pop
dec
mov
push
mov
test
mov
outsl
insb
movsb
xchg
int
jne
mov
popf
pop
and
push
xor
pop
fadds
popa
ja
add
arpl
hlt
xchg
out
and
test
fs
imul
push
sub
and
mov
sbb
xor
lds
pop
cmpb
jnp
rolb
rclb
repz
adc
lock
jg
xchg
imul
aaa
jbe
ds
lds
xchg
sti
stos
jge
mov
push
enter
xchg
adc
adcb
mov
ljmp
fidivrs
les
into
mov
push
inc
jl
mov
adc
aad
lret
sbb
loop
push
test
lret
jae
aas
adc
sub
inc
repnz
jbe
fs
imul
push
and
cmp
call
inc
push
nop
mov
mov
pop
ret
clc
jl
scas
rolb
dec
jb
or
popa
mov
jmp
sub
andb
adc
loopne
mov
lods
or
daa
and
xor
xchg
scas
pop
outsb
add
inc
pusha
popf
or
xchg
lock
push
cmpb
mov
ret
push
stc
xchg
dec
das
xchg
xorb
ret
fsts
cmp
cmpsl
hlt
cmpsb
arpl
jl
lret
sbb
loope
ret
loopne
rorb
xor
jne
sub
inc
clc
add
push
or
adc
dec
insl
pop
cmp
push
inc
mov
jl
lret
inc
aam
test
dec
jle
mov
pop
stos
cmp
loopne
and
push
clc
movsb
daa
in
or
add
jo
aaa
mov
out
ds
bound
pop
pushl
and
stos
andl
xor
or
or
add
fildl
jecxz
loop
fdivrs
xchg
out
mov
lds
inc
lock
mov
lods
mov
sub
ret
das
inc
scas
mov
rolb
push
xchg
pop
clc
dec
insb
xorl
cmp
xchg
sbb
incl
add
and
sbb
ficompl
aad
jbe
adc
repnz
add
mov
mov
out
data16
mov
and
test
ret
xor
scas
add
jle
pop
pop
sub
sub
add
lods
enter
lea
cmp
loopne
xor
pusha
cmp
cmp
ret
fdivrl
sbb
jg
mov
rorb
inc
inc
loop
pop
andl
jbe
dec
lods
mov
push
pop
sar
ja
cmpsl
mov
mov
pop
ret
icebp
add
sarl
xor
mov
mov
fdivl
mov
or
rol
je
cmpl
xchg
inc
arpl
inc
cmp
mov
dec
jle
pop
jmp
jbe
xchg
popa
fsubs
scas
aas
xchg
inc
xchg
push
inc
fwait
jle
and
sub
mov
jae
push
sarb
insb
aas
mov
cmp
cmp
or
sti
ja
dec
call
pusha
lcall
xor
ss
mov
sbb
outsl
jl
repz
adc
or
mov
mov
sub
fsts
cmp
sub
adc
inc
lods
sti
movsb
ja
mov
sub
mov
jns
scas
out
jl
mov
pop
xor
mov
test
xor
jmp
xchg
les
pop
out
stc
out
dec
add
sub
xlat
xor
lea
mov
out
sub
inc
cmp
jecxz
mov
dec
adc
scas
pop
fstpt
xlat
cltd
push
dec
enter
add
cmp
jbe
jmp
xchg
leave
cwtl
inc
leave
cmp
and
aam
xchg
push
daa
xor
push
or
out
adc
scas
mov
and
sahf
xlat
je
lea
lret
test
fsubs
mov
mov
arpl
out
pop
add
push
ret
mov
xor
jbe
popf
call
aam
xchg
sbb
jecxz
push
pop
and
jmp
int3
jmp
ficoms
ds
mov
dec
mov
loop
mov
cmp
pop
jbe
cmp
repnz
push
and
fcmovnb
leave
jmp
jl
mov
pop
pusha
mov
mov
push
loopne
sbb
fstpt
cmc
xor
xchg
xchg
xchg
fiaddl
aam
sahf
call
or
xlat
or
sub
adc
adc
dec
jp
mov
mov
in
xor
bnd
cli
jmp
pop
js
lods
pop
outsb
lock
lret
movsl
icebp
mov
cmp
sbb
cmp
daa
xor
out
mov
aas
jno
cs
orl
push
cmpsl
jl
sbb
fistps
pop
inc
cmp
push
dec
jmp
pop
hlt
jle
sahf
mov
mov
shl
dec
popl
xor
or
jp
stos
jae
push
cmp
xchg
popa
jnp
imul
repz
mov
icebp
xor
fsubl
inc
mov
xchg
jae
xor
sti
cmp
sub
xchg
push
outsb
jle
xchg
pop
add
dec
decl
cmp
outsb
cmc
fwait
pop
cld
call
inc
jae
dec
loope
mov
dec
fnstsw
jmp
or
test
push
or
lcall
push
cwtl
stc
jl
dec
mov
adc
push
xchg
xchg
shlb
mov
pop
data16
fildl
test
dec
push
hlt
int
inc
adc
repz
adcl
sbb
inc
in
mov
mov
xchg
dec
push
mov
inc
cwtl
data16
ret
fnstcw
pushl
test
mov
stc
sbb
lods
sarl
mov
rclb
mov
repnz
and
fwait
cmp
xchg
jb
xchg
fwait
mov
outsb
xchg
cld
xor
mov
shll
xor
jbe
insb
mov
adc
es
insb
jg
jbe
imul
sbb
dec
dec
or
imul
fs
cli
mov
insl
cld
mov
mov
xchg
cmpsb
push
jns
fadds
scas
adc
popf
adc
jl
test
pop
mov
inc
pop
xchg
lods
sbb
les
push
cmp
sti
sbb
cs
jbe
ret
and
repz
test
push
push
fmuls
jle
les
xchg
push
jae
or
mov
push
fldcw
stc
push
jle
jmp
mov
or
nop
out
adc
je
sbb
jle
cmc
rcrb
mov
fwait
add
movsl
and
fists
roll
pop
test
ljmp
xor
xchg
shrb
repz
sub
cmp
mov
mov
orb
rcll
pop
push
jnp
lahf
out
nop
inc
out
and
ret
mov
pop
inc
ret
sbb
push
cwtl
mov
inc
rcl
jbe
jbe
inc
inc
sub
stos
pop
push
jecxz
clc
into
cmp
xchg
xchg
xor
cmp
mov
fidivrs
pop
jle
test
rclb
mov
insb
les
test
aaa
std
pop
or
test
inc
cld
xchg
loopne
lahf
jle
mov
mov
pop
add
fbld
sub
or
xor
jno
ret
movsl
sbb
sbb
jb
into
push
outsb
mov
add
push
xchg
pop
adc
data16
bound
mov
sbb
shll
aad
and
adc
add
inc
roll
outsl
data16
jmp
aam
mov
mov
fiadds
mov
movsb
inc
inc
nop
cmp
mov
stc
cmpsl
add
jle
aam
and
ss
mov
lea
mov
mov
xor
jbe
sub
adc
test
nop
test
aas
adc
ret
mov
insb
push
movsb
bound
rcl
cmpsl
fcomi
mov
jg
cmp
ja
clc
jno
call
mov
cmp
jbe
mov
das
jnp
cmp
inc
add
shl
xchg
sub
pop
mov
xchg
sarb
add
lods
repz
je
mov
scas
xor
scas
jle
rcrl
or
call
out
adc
or
jl
mov
sbb
stc
jmp
xor
xor
bnd
adc
test
popa
mov
push
pop
jp
cli
xor
jbe
repnz
mov
push
mov
js
fstl
insb
jp
add
inc
push
mov
dec
push
decl
fldenv
mov
jbe
push
orl
shl
sub
rcr
cmp
push
mov
out
or
cmp
or
pop
repnz
add
vpaddsw
fwait
fs
pusha
andb
xchg
mov
dec
mov
cmp
push
leave
ret
lcall
dec
fisubrs
insb
jl
mov
add
mov
inc
mov
stos
mull
sbb
dec
xchg
add
mov
cwtl
push
mov
data16
mov
xchg
outsl
pop
ret
or
sub
lahf
fdivs
cmp
fstpl
xchg
mov
pop
sub
push
pop
repz
shrb
std
mov
and
mov
mov
mov
je
pop
lret
lods
les
add
sub
aas
clc
mov
sbb
in
jle
lret
jp
aas
je
mov
jae
cltd
dec
sbb
movsb
gs
das
icebp
dec
notb
lods
mov
aaa
out
stc
inc
xor
push
fstpt
pop
ja
fsubrs
dec
add
lds
test
fldcw
repz
pushf
pop
shll
xor
sarb
adc
xchg
dec
sahf
aaa
int3
dec
inc
or
test
pop
xchg
out
or
jbe
fisubs
enter
jae
inc
xchg
push
fldt
loope
arpl
daa
xchg
pop
aaa
dec
pandn
cli
outsl
mov
testb
les
sbb
lret
cld
sti
aad
lods
jle
mov
stos
mov
les
or
lahf
int3
out
add
sbb
and
pop
mov
jl
ficoml
push
pop
les
sarl
or
mov
inc
js
xor
inc
fstps
sub
cltd
hlt
push
roll
clc
repz
mov
push
dec
jbe
or
mov
cltd
aaa
lods
test
sti
insb
push
movsb
in
lods
test
in
stos
cli
cmp
push
sahf
inc
rcrl
add
andb
inc
cmp
fs
add
push
mov
mov
sub
add
dec
in
pop
xor
cmp
cmp
mov
mov
pop
loop
jmp
shll
jne
jmp
or
cwtl
cmp
jle
hlt
dec
mov
dec
fcmovnbe
in
aaa
stc
jp,pt
fcmovb
into
lret
shlb
lock
mov
cmc
inc
push
mov
mov
stos
test
xor
push
jo
das
jo
push
aam
lcall
xchg
test
pop
jp
insl
inc
mov
jl
push
aam
test
int
xchg
adc
imul
cmpsb
inc
aas
idiv
mov
xor
fistl
rcl
test
cmpl
and
pop
and
xor
inc
add
jbe
call
pop
js
xchg
mov
xchg
jmp
mov
scas
jae
mov
hlt
xchg
icebp
fimull
pop
jns
mov
shl
cmpsl
pop
loop
dec
sti
xor
stos
rolb
adc
jbe
inc
inc
sub
in
fs
xchg
cmc
jle
loopne
push
fstpt
jo
inc
in
lods
aam
outsb
call
test
pop
mov
cmpsl
ss
inc
xchg
pop
jbe
ja
xchg
and
mov
into
mov
push
xchg
repnz
jmp
ret
repnz
dec
adc
cmp
stos
fldenv
pop
repz
jae
dec
cmp
jle
cmp
cmpsl
fs
clc
sub
pusha
xchg
fistpl
fnclex
inc
bound
mov
out
inc
insb
pop
add
jmp
lret
xchg
loopne
inc
mov
xor
xor
pop
or
mov
scas
xor
int3
out
leave
add
jbe
nop
xchg
ja
mov
int
mov
cld
lods
xchg
sarb
mov
dec
leave
ds
ret
push
sub
mov
and
movsb
lcall
add
xchg
movsl
dec
rcrb
push
pop
fisubrs
push
popa
or
fsts
stc
lret
jle
loope
mov
and
lcall
loop
dec
cltd
mov
outsl
mov
sbb
pushf
and
ror
test
xor
int3
pusha
icebp
subl
in
xchg
jl
stos
cmp
jb
inc
sub
aas
adc
js
and
in
pop
mov
and
mov
out
mov
push
mov
sbb
mov
dec
sbb
pop
pop
cmp
xchg
lds
xchg
mov
leave
add
unpckhps
xor
test
sbb
lods
add
xor
gs
xchg
mov
adc
adc
stos
movsb
mov
sbb
pop
and
mov
rclb
adc
add
cmp
loop
imul
out
inc
aas
outsb
mov
fdivrs
movsl
sti
push
lds
sbb
arpl
ret
out
cld
jle
xchg
js
dec
mov
jl
incb
fs
popa
mov
inc
add
xchg
push
adc
stos
and
jns
inc
pop
push
add
test
adc
mov
push
imulb
loop
icebp
push
daa
jmp
jns
push
inc
jecxz
mov
mov
cmp
sub
and
mov
adc
mov
aad
xor
jbe
aam
mov
xorl
outsl
pop
stos
cmp
pop
pop
andb
mov
sti
push
dec
out
pop
dec
pop
into
arpl
daa
cmp
jno
jbe
mov
negl
cmp
inc
nop
test
cmp
add
je
jb
xor
jl
cmpsb
or
lret
out
inc
pop
dec
dec
mov
mov
movb
dec
popf
push
mov
jge
ret
fs
sbb
sbb
xchg
mov
loopne
mov
sti
push
adc
aam
cmc
push
std
icebp
cmp
sahf
push
add
xor
icebp
cmpsl
sarb
xor
xchg
or
sub
xchg
mov
jnp
aam
push
inc
inc
fsts
push
dec
scas
icebp
xlat
enter
lret
fcoml
stos
jbe
and
sti
insb
shll
nop
data16
popa
cmp
insb
lea
add
out
sbb
jle
sub
addr16
and
stc
adc
adc
lahf
sub
mov
imul
mov
mov
in
adc
aam
xchg
testb
cmp
and
gs
or
sub
jnp
mov
pop
fadd
xchg
repnz
loop
cmpsb
sub
fsubl
push
dec
lret
popa
cli
mov
pop
pusha
sbb
popf
inc
jo
push
jne
jle
inc
push
lods
movsb
push
out
aaa
mov
je
mov
jle
sbb
shl
gs
popf
adc
test
dec
adc
dec
xchg
or
dec
mov
dec
add
jmp
push
mov
jbe
fcmove
xchg
sbb
outsb
inc
stos
cmp
mov
decb
sarb
mov
dec
xchg
fistpll
cmp
pop
decl
and
lods
scas
mov
popa
clc
mov
and
sbb
mov
stos
fidivs
pop
sub
or
arpl
or
pop
xor
jbe
add
pop
pop
divb
rolb
loop
je
xchg
mov
mov
pop
mov
mov
jle
push
jg
and
incl
push
sbb
ljmp
ret
push
in
jle
or
mov
hlt
adc
sbb
xlat
outsb
filds
add
xchg
jae
sti
mov
mov
ret
push
jae
and
pop
faddl
movsl
jl
insb
enter
sbb
inc
orl
repz
dec
push
nop
mov
add
in
fdivl
ds
push
adc
xor
adc
dec
push
repnz
stos
in
sub
arpl
mov
mov
insb
cltd
in
insb
test
add
sub
cmp
shr
jo
int
jbe
jae
addr16
sahf
xor
int3
dec
mov
ret
test
imul
jmp
nop
out
rolb
mov
lahf
test
xchg
stc
dec
xchg
xchg
insl
loopne
xchg
popf
pop
add
jecxz
adc
fs
or
insb
jle
and
pop
fildl
push
insb
adcl
add
cmp
fsubr
stc
lahf
cli
add
scas
mov
mov
fs
dec
add
insl
adc
inc
fsubs
rcll
inc
mov
dec
pop
rcl
daa
cmp
rcl
xchg
aam
xchg
push
or
and
movsl
mov
sarl
dec
jle
jl
adc
loop
pop
mov
cmpb
movl
jle
mov
daa
sub
jmp
orb
mov
ret
in
cmp
jbe
ret
adc
jl
test
ss
and
test
rol
insb
jae
dec
aam
adc
adc
aad
push
and
lock
pusha
test
jo
adc
mov
aaa
jg
jge
leave
pop
cmpl
aam
mov
push
mov
aam
popa
les
cmpsb
leave
pop
push
sub
test
mov
mov
jnp
push
cmp
dec
dec
xor
adc
in
mov
add
mov
dec
mov
incb
in
sub
cmp
mov
mov
lds
std
dec
jl
dec
sar
inc
lret
push
mov
popf
fildl
sti
les
test
adc
int
jbe
lea
or
and
jle
lods
cmp
repz
and
mov
xor
mov
xchg
inc
mov
nop
and
cltd
out
jae
inc
mov
fildll
in
cli
or
test
inc
pop
hlt
xchg
and
aam
mov
inc
pop
xor
jle
push
sahf
nop
ficomps
jg
int
ja
fsts
neg
jbe
test
sar
adc
fsts
cmc
cwtl
lds
testb
out
setg
mov
jbe
hlt
jp
movsb
mov
cli
push
rcrb
or
ret
cmp
pop
mov
or
add
jmp
sub
imul
scas
icebp
cmp
add
inc
or
aam
jbe
notb
insb
or
or
lea
dec
mov
pop
out
mov
push
lods
cmp
gs
icebp
popa
scas
mov
movsb
jae
sti
loope
clc
mov
jnp
sub
or
hlt
js
jle
lret
xor
mov
push
leave
sbb
mov
xchg
loop
adc
repz
pop
scas
sub
add
pop
mov
and
xchg
xchg
mov
shlb
lahf
fistl
push
mov
arpl
js
and
insb
push
ret
cld
das
sarl
repz
sbb
push
decb
or
faddp
pusha
test
stos
mov
outsl
mov
sub
cmp
pop
out
mov
ss
and
cmpsb
cmpsl
imul
mov
or
rclb
xchg
sub
loop
or
mov
jo
loopne
jo
clc
inc
cmp
push
mov
push
sbb
sub
adc
sub
pop
out
xor
xchg
mov
bound
adc
outsb
lahf
mov
mov
jmp
xchg
test
jb
push
insb
push
xchg
mov
pushf
xchg
jnp
and
jbe
rcrl
push
fwait
inc
cmc
push
fildl
popf
and
dec
push
mov
xor
pusha
stc
into
mov
inc
and
mov
jmp
inc
rorl
and
clc
and
mov
jl
fsubl
sti
jb
dec
xchg
daa
pop
mov
test
sub
andl
xlat
jno
js
xor
and
jmp
dec
xor
bound
push
data16
lods
aam
mov
jo
nop
or
rclb
jne
jecxz
sbb
push
lock
jecxz
inc
jbe
push
add
int3
sub
xchg
push
test
gs
cmp
pop
loope
out
jne
incl
jb
sti
sbb
lret
adc
jmp
mov
loope
ficoml
lods
pusha
ds
add
inc
xlat
arpl
xor
push
lahf
arpl
add
mov
jle
loope
dec
divb
lods
int
hlt
movd
or
lcall
fisttpll
inc
push
dec
jns
xchg
cmpb
push
sar
mov
lock
mov
popa
inc
and
gs
or
jbe
jne
stos
xor
loop
xor
mov
jle
inc
sub
sub
xor
xchg
testl
aas
add
sti
lods
cwtd
xor
movsl
mov
or
lds
push
mov
lock
mov
or
cltd
in
mov
jo
rcl
insb
xor
shlb
inc
int3
imul
dec
sti
mov
xchg
jb
icebp
xchg
push
jg
push
aam
inc
sbb
dec
add
mov
jno
xor
cmp
mov
cmp
mov
xchg
in
jecxz
out
test
adc
jae
mov
das
lods
lock
pop
sti
ja
daa
rolb
mov
icebp
fsub
pop
dec
or
in
adc
enter
jp
fs
add
jg
xchg
xor
mov
adc
repnz
jle
cmp
or
mov
xchg
dec
jl
cmp
hlt
xchg
repnz
out
scas
and
mov
popf
jbe
bound
test
movsb
xor
fistl
cs
incl
pop
mov
fadds
mov
cmp
outsb
negb
jbe
inc
mov
pop
dec
lahf
adcl
jp
pop
cmp
mov
xchg
sti
sbb
gs
ja
and
adc
mov
in
mov
mov
mov
insb
inc
or
dec
push
inc
pop
push
and
lods
xor
mov
xlat
xor
cmp
cmp
push
pop
stos
clc
push
stos
push
in
sub
iret
mov
repnz
js
scas
stos
cld
decb
mov
insb
sbb
fsubrl
mov
dec
pop
push
negb
int3
into
std
mov
jle
mov
aaa
das
out
mov
hlt
fimull
mov
sub
lret
or
fstpt
clc
mov
fwait
sbb
push
je,pn
sbb
adc
cmp
mov
xchg
lock
cld
lds
sarl
sub
test
std
jne
lock
lcall
decb
cli
lods
sti
and
fsubs
lret
inc
add
jae
loopne
cmp
or
out
dec
jb
sbb
add
add
lods
xor
and
in
cld
enter
inc
fcmovb
lret
add
jg
aam
idiv
mov
lods
xor
rcrl
js
pushf
mov
call
cmp
and
cwtl
cli
cs
cmpsb
pushf
movsb
mov
dec
jno
shl
scas
aaa
aas
sub
mov
xlat
jp
js
sbb
ss
cmp
add
mov
lret
stc
cmp
adc
bound
cld
sahf
xchg
mov
fsubp
icebp
je
aaa
lock
xchg
sub
push
cwtl
xor
std
xor
scas
sar
pop
cmp
fsubrl
sub
sti
das
idivb
mov
cld
inc
adc
adc
pop
add
mov
pop
cli
pusha
jnp
jae
and
cmc
shll
in
xor
and
sbb
popa
cltd
cld
inc
lret
sub
je
addr16
sar
hlt
and
in
scas
ljmp
orb
or
iret
stos
scas
or
pusha
adc
push
mov
inc
paddb
nop
fnstcw
xor
mov
pop
xor
sbb
xor
pop
cld
inc
push
adc
mov
jp
cli
push
adc
mov
flds
hlt
mov
cmp
mov
into
add
adc
scas
lret
decb
add
and
std
mov
fnstsw
xor
pop
aaa
jnp
pop
pop
mov
mov
mov
int3
cld
test
roll
push
popf
cld
xchg
in
imul
in
pop
cld
dec
push
jmp
test
xchg
aad
repnz
mov
ss
dec
lds
rcrl
adc
loope
mov
mov
hlt
lods
leave
push
or
cmp
negl
aam
or
mov
clc
aaa
aaa
ljmp
push
dec
cld
js
and
xor
cmpsl
ret
cld
rorl
add
lods
or
hlt
cmp
cmp
mov
call
sti
mul
push
push
xor
fsubs
mov
cmp
sahf
sti
das
sub
clc
add
mov
repz
xchg
cmp
sarb
pusha
sbb
rcrl
xor
cld
enter
lahf
or
mov
push
fdivr
enter
inc
fwait
dec
dec
lcall
xor
fwait
hlt
dec
mov
mov
push
cld
ret
xchg
push
aad
xchg
jne
out
push
frstor
ss
imul
jle
xchg
in
pop
dec
leave
fildl
inc
mov
lods
stos
sbb
fst
cmp
and
mov
xor
stos
cld
aam
loope
mov
jge
xor
aaa
out
cmp
jb
movsl
add
repnz
stos
lea
not
lods
clc
pop
cmp
sbb
repnz
cld
out
addr16
jl
clc
xor
insb
sub
cld
daa
mov
cmp
or
mov
dec
out
shr
cmpsl
clc
inc
mov
adc
mov
gs
xor
cld
add
adc
inc
scas
jns
testb
mov
xor
pop
cld
pop
fsubl
pusha
cld
push
aam
inc
sbb
out
cld
mov
out
push
ret
cld
movsb
inc
mov
mov
dec
jo
shl
pop
mov
xor
cld
orl
ret
adc
dec
xlat
iret
xchg
stos
cld
sub
pop
jmp
in
sub
xor
cld
pop
insl
sbb
in
cmpsb
pusha
int
dec
pop
icebp
movsl
or
sbb
inc
fcomi
stos
push
test
cld
in
dec
and
inc
mov
ja
jle
cwtl
ljmp
clc
jmp
pusha
and
decb
cwtl
loop
int3
ss
jbe
cmp
sub
call
and
cli
fstpt
mov
cmp
cld
mov
xor
ret
jecxz
je
addr16
ja
lods
loope
sbb
popa
das
stos
dec
add
jge
cmc
lock
push
cwtl
mov
jns
push
fbld
inc
das
mov
icebp
xor
stos
add
add
cld
push
test
cmc
inc
adc
cs
shlb
push
dec
loop
mov
cmpsl
sti
inc
or
cmc
es
aam
inc
sbb
add
pusha
insb
jbe
movsl
cli
cmpsl
lds
cld
rol
out
sub
mov
mov
mov
lock
scas
mov
jl
leave
repz
out
ljmp
cli
and
pusha
ret
es
xchg
out
mov
into
je
cli
jg
stos
sub
insl
pushf
sub
add
sub
fs
xlat
or
sbb
xchg
out
jne
xor
subb
xchg
fisttpl
pop
cld
xchg
in
out
adc
cld
ja
or
pop
out
xor
insl
cmc
fdivrs
xchg
jbe
test
in
fdivl
dec
inc
divl
inc
nop
dec
jecxz
mov
repz
addr16
sub
pop
movsl
imul
inc
dec
sahf
mov
lods
or
add
and
jne
inc
cs
dec
stos
push
xchg
stos
test
pop
push
dec
adc
ret
jbe
or
add
jns
or
stos
mov
shrl
aam
pop
push
addr16
pushf
call
das
cltd
and
mov
fsubrs
pusha
out
cmp
fidivl
jg
les
add
loop
cld
out
repz
jecxz
movsb
cmp
or
int3
sub
imul
into
stos
cli
xchg
dec
or
jno
jl
cmp
xchg
fdiv
pusha
sbb
xor
jle
or
into
xlat
dec
pop
les
cld
mov
pop
cld
cwtl
mov
jmp
or
fs
add
cld
mov
add
cmp
mov
hlt
je
stos
add
xchg
mov
repnz
cmp
mul
vmovlps
lret
xchg
xor
cmp
das
fwait
dec
sub
jo
ret
cmp
jecxz
lret
inc
fbld
dec
jle
sbb
or
inc
pop
test
push
ret
and
cld
jns
dec
add
in
sub
push
std
stos
add
shll
loopne
aam
cld
and
mov
jno
shlb
mov
cld
ret
mov
jns
shll
ja
aam
mov
outsl
jg
stos
jl
cld
fldt
in
dec
add
sti
das
dec
repz
jge
pushf
inc
testb
cld
pusha
lret
cs
cmp
das
out
dec
push
sti
add
dec
cld
push
mov
xor
out
test
jle
lahf
xor
dec
inc
jne
nop
lods
mov
incl
cmp
loope
mov
scas
add
sbb
in
mov
pop
orb
xlat
or
movsl
cmpsb
or
imul
mov
idivb
enter
lods
jbe
addr16
mov
outsb
xor
pop
movsb
cmp
sub
hlt
fldt
mov
xor
dec
shlb
hlt
sbb
mov
xchg
dec
inc
je
insl
ja
xorb
push
cld
in
sub
dec
cmp
pushf
andl
cld
sbb
idiv
push
dec
aam
aad
cld
push
popa
adc
cld
in
mulps
int3
mov
aad
insl
rcr
ljmp
and
jle
fmul
bswap
mov
xchg
add
cs
addb
xchg
cli
sbb
fadds
mov
repz
sbb
repnz
cmp
fidivrl
js
cmp
adc
xchg
pop
out
push
sub
ss
loope
or
add
pop
jae
lods
or
sbb
fdivr
pop
cld
int
jmpw
ds
and
mov
cld
mov
divb
icebp
inc
pop
js
xor
add
imul
mov
pop
mov
push
into
shlb
ja
jle
sbb
sbb
or
stc
cmp
lcall
adc
fucomi
xchg
pop
adcl
test
cld
and
inc
mov
add
dec
rolb
inc
lods
cli
cmc
mov
push
lcall
xor
jl
push
test
cmpsb
ret
jmp
jecxz
adc
cld
sub
sbbb
addl
xchg
jg
sbb
cmp
cld
out
lods
mulb
fisttpl
and
gs
pop
add
out
adc
fimull
bound
outsl
cwtl
cld
pop
jmp
sub
push
test
fwait
in
pop
jne
inc
das
je
loop
sbb
hlt
fisubrs
mov
ret
pushf
sahf
in
repnz
sub
fsubrl
jo
or
jle
movsl
or
fmull
mov
out
lods
test
cmp
mov
cli
lea
pop
into
xchg
sub
xchg
and
xchg
cli
fisttpl
add
inc
decl
ds
adc
out
inc
cld
push
in
test
xor
pop
cld
ja
xchg
inc
jb
imul
sti
lods
add
fsubl
xor
sbb
jl
mov
mov
flds
shll
lock
je
cmp
sub
cmp
int3
fldt
es
lods
mov
mov
clc
xor
in
pop
cmp
cli
mov
enter
cmp
shlb
clc
cmp
jae
cli
jmp
xchg
cld
or
pusha
insl
cs
dec
push
xor
pop
repz
xchg
call
dec
push
or
lods
sbb
sbb
sbb
fldt
cld
sbb
push
sub
sub
fwait
xor
lods
ljmp
popf
repnz
mov
cld
fdivr
ss
pop
mov
sti
out
mov
add
jb
cmpl
pop
fcmovne
pop
stos
push
inc
hlt
mov
sti
int3
dec
sub
into
and
cltd
cld
mov
xchg
cld
sub
inc
out
lds
hlt
lock
xchg
in
pop
dec
push
clc
subb
mov
xor
ds
je
xchg
inc
cmp
scas
xor
movups
stos
add
cld
lret
out
enter
mov
sbb
clc
adc
push
hlt
outsl
cld
imul
jmp
jmp
mov
cwtl
cli
in
sbb
jo
loopne
out
scas
add
in
cltd
loope
sub
inc
cld
out
imul
add
scas
testb
stos
mov
js
jns
jbe
or
ja
inc
xor
cmc
push
not
push
sub
cmp
push
or
push
movzbw
mov
bsr
movsbw
shr
movsbw
mov
xor
clc
clc
mov
shl
dec
inc
sub
je
push
xchg
lods
call
cmp
clc
test
clc
sub
test
jmp
popf
cpuid
nop
push
movl
pusha
call
pusha
pushl
lea
jae
pusha
cmp
bt
xor
pushl
call
dec
inc
push
add
aad
jbe
xor
and
arpl
scas
mov
mov
adc
sbb
das
mov
test
mov
loope
adc
dec
mov
mov
dec
aaa
mov
mov
add
inc
daa
aas
xchg
xchg
mov
mov
dec
sahf
xor
rcrb
negb
imulb
sti
test
ds
jns
mov
xchg
daa
xchg
fsts
inc
mov
xor
mov
pop
filds
popf
sbb
xchg
es
rcll
mov
stc
mov
or
into
jo
pop
ss
hlt
lock
mov
adc
sbb
push
fsubr
cld
push
push
dec
jb
fiadds
mov
loopne
cmpsl
xchg
mov
test
fsubl
sbb
xchg
sub
or
ljmp
inc
popf
and
jmp
dec
mov
adc
inc
sbb
pop
mov
push
and
bound
enter
jae
popf
lcall
inc
push
jne
cmpsb
lret
xchg
sti
mov
shrb
xor
in
mov
mov
scas
fwait
setae
pop
in
jg
mov
imul
mov
ja
xor
lcall
or
addl
jmp
fisttpl
clc
bswap
mov
shrd
mov
jmp
pushf
pushf
add
pushl
pusha
clc
movw
cmp
jmp
call
pushf
call
adc
lea
movsl
loopne
xchg
dec
pop
adc
xchg
int3
push
adc
popf
dec
xor
jp
and
cwtl
insb
add
mov
adc
std
cmc
and
sub
fs
jbe
sahf
lahf
aas
add
mov
adc
dec
iret
test
add
mov
fmuls
lea
stc
sub
jecxz
call
jle
fstp
cmp
add
xchg
scas
mov
sahf
sbb
cmovo
mov
and
insl
cs
loopne
jno
scas
icebp
cmp
inc
jle
loop
push
jge
jecxz
insl
adc
addl
int
add
repz
dec
sarb
pop
stc
lods
jae
rorl
dec
out
iret
sub
jae
mov
iret
cltd
pop
xor
pop
jle
add
incl
mov
jmp
jmp
mov
roll
and
stos
repz
pop
cwtl
call
shrb
cmpsl
lcall
cmp
sbb
dec
pop
xchg
mov
movsl
mov
sbb
rol
xchg
push
or
imul
cld
cltd
les
push
inc
xchg
mov
xor
rorl
adc
leave
dec
iret
cwtl
mov
sbb
push
lahf
jl
mov
call
inc
jecxz
aaa
cltd
shrb
jl
cmp
loopne
inc
mov
test
push
add
and
push
jmp
lcall
enter
pop
adc
popf
ja
fcmovne
add
mov
mov
xchg
push
fcoml
dec
fisubl
sbb
sbb
test
mov
lcall
and
insb
jns
jns
and
jp
clc
pusha
lcall
aaa
fimull
dec
sbb
mov
int
dec
dec
iret
cwtl
inc
cs
and
and
xchg
or
adc
mulps
push
ds
or
xchg
or
cmc
mov
sub
mov
das
xchg
mov
nop
dec
mov
ret
fld
movsl
ret
fadd
fldenv
cli
sbb
push
xchg
adc
lods
or
cli
ja
das
pop
jb
popa
add
inc
loopne
iret
xchg
mov
fcoms
pushf
pusha
call
das
jbe
xor
test
rolb
sbb
pop
ret
pop
lea
sbbb
or
outsl
ror
andb
dec
jne
and
das
push
sahf
add
popa
in
out
fs
sub
and
jnp
pop
or
das
rclb
or
inc
ds
adc
push
jb
cmp
outsl
test
jge
and
add
push
add
push
or
add
add
pop
fcompl
hlt
push
mov
push
lock
test
mov
add
in
test
mov
mov
dec
cmc
jmp
and
mov
inc
movsl
cmp
jmp
and
xchg
repz
in
jae
push
movsb
jo
jae
xor
cmp
mov
enter
roll
add
xchg
push
xchg
ljmp
dec
jo
xor
and
dec
jbe
push
mov
add
je
out
test
cli
cs
or
sub
inc
mov
in
push
fidivs
movsb
lret
pop
ja
sbb
cmp
sub
or
xchg
or
xchg
cmc
sub
xchg
dec
xchg
dec
iret
xchg
sbbb
call
movl
pushl
pusha
movl
pusha
movb
lea
jmp
lea
jne
pusha
pusha
push
pushf
stos
mov
mov
mov
lea
jmp
and
push
rclb
and
cld
mov
bound
push
jo
xor
jno
adc
push
in
popf
gs
dec
loope
clc
xchg
push
pop
test
jb
mov
cmpsb
aaa
dec
cld
aas
xchg
jnp
shl
cld
test
mov
rcrl
and
cmp
push
out
mov
les
call
outsl
push
je
sar
std
fwait
out
adc
test
dec
daa
lock
sub
adc
cld
pusha
cmp
xchg
aaa
data16
mov
dec
ja
push
cld
and
push
mov
mov
outsl
mov
or
aad
sbb
mov
shrl
lods
mov
ljmp
fdivrp
jp
cli
cmp
sbb
ds
cmp
pushl
fs
jmp
mov
and
inc
stos
xor
add
int
pop
cmpsb
mov
jg
xchg
lret
fsubr
leave
cmpsl
in
xorl
jne
pop
out
xor
fdivrp
and
cmpsb
stos
sbb
outsb
cld
jg
pop
pop
imul
cmpsb
leave
rcrl
addr16
incb
pop
idivl
mov
cld
cmp
clc
stos
and
xor
xor
push
cmc
mov
inc
xchg
jae
mov
aad
xor
into
testb
insb
mov
sti
loopne
jp
mov
inc
or
mov
adc
mov
or
mov
loop
mov
sub
pushf
insb
pop
xchg
pop
jmp
int3
xchg
cltd
dec
cld
xchg
lods
int
lcall
dec
xlat
and
cltd
lds
jmp
jnp
cld
fmul
push
cmp
mov
fwait
andl
out
mov
add
cmp
adc
lods
mov
lods
sbb
push
jno
jbe
scas
insb
mov
cld
lods
loop
hlt
xor
mov
or
adc
add
hlt
cmp
or
mov
jnp
lret
or
icebp
subps
jl
fimull
das
mov
pop
in
js
fnstsw
int3
dec
pushf
pop
stos
or
cmp
rcrb
sub
scas
pop
mov
lcall
sahf
ds
sub
dec
sbb
scas
mov
test
dec
out
dec
out
lods
pushf
fstpl
pop
shrb
add
xor
out
outsb
scas
stos
fldcw
cmp
and
scas
jge
or
dec
jmp
cs
mov
scas
mov
cmp
xor
inc
cli
lret
js
lea
dec
stc
cs
mov
or
or
cli
stc
jle
or
pop
jb
js
pop
fisttpll
cmp
out
scas
iret
std
pop
dec
xchg
mov
xchg
sahf
push
lcall
sarb
sbb
mov
add
push
loopne
dec
xor
cli
push
pushf
scas
mov
out
push
pushf
lock
xchg
pop
aam
cmp
cwtl
adc
fstps
jns
fsubrs
jns
enter
cmovp
and
lret
orb
jle
pop
cmp
cld
jle
push
push
sub
jnp
decl
movsb
adc
push
stos
cmp
sbb
cmp
mov
jnp
dec
mov
mov
inc
xor
cmp
add
cmp
add
mov
shrb
jno
sahf
adc
shlb
mov
dec
sbb
cmp
stos
xchg
outsl
cmp
pop
mov
cs
lock
push
cmp
inc
lock
fsubp
movsl
dec
adc
sbb
push
fwait
jle
shr
cs
or
aas
push
jmp
cmp
jnp
jl
fs
push
sbb
inc
lds
pop
or
jle
subb
test
or
out
imul
cmp
sahf
mov
jno
pop
push
or
cli
cs
mov
dec
fcmovnu
push
dec
ds
fidivrs
jp
sti
mov
sbb
ds
ljmp
incb
imul
adc
jmp
mov
stos
cli
cli
cli
hlt
or
sti
fimull
mov
aaa
jg
pop
shlb
insb
cmpl
add
inc
cmpsl
in
mov
test
icebp
cltd
addr16
cld
sub
jo
cmpsb
mov
js
xchg
xchg
cld
fldenv
cld
xchg
jb
stos
and
pusha
cmp
divl
pop
push
push
adc
dec
imul
mov
repz
xor
push
push
fucomip
fldl
cmpl
xor
lock
jo
fsubrs
cmp
mov
and
dec
ds
outsb
jne
scas
out
sbb
psraw
pop
and
out
into
sarl
int3
sub
fyl2xp1
or
and
xor
jns
xor
fistps
add
movsb
pop
nop
fmulp
dec
xor
mov
bnd
repz
icebp
or
xchg
cli
mov
push
movsl
fmul
dec
mov
dec
mov
jbe
orb
jle
or
popl
jl
fidivrl
repnz
in
jg
mov
cmp
mov
xchg
jae
jl
neg
or
sar
sub
mov
jle
fsubrl
jge
in
add
jmp
or
xor
imulb
jns
mov
mov
mov
jge
cwtl
or
inc
cmp
jl
lds
or
xor
ret
inc
mov
cmp
push
pop
jno
jb
dec
jbe
xor
jnp
or
jno
divb
fidivrl
loopne
aad
fwait
add
js
outsl
hlt
add
mov
sarb
hlt
ljmp
cmp
hlt
popf
ljmp
or
movsb
ja
jmp
push
mov
outsb
movsl
xchg
imul
ret
mov
xchg
adc
std
cltd
cmp
lds
pop
lcall
jae
jno
dec
jp
mov
ja
int3
mov
xor
in
mov
hlt
fdivrp
mov
push
add
xor
jns
inc
cli
shlb
adc
ljmp
add
xor
sbb
mov
mov
sti
clc
mov
mov
stc
test
jns
hlt
mov
and
sti
cmp
add
je
mov
mov
test
cmp
rorl
repnz
jp
std
aas
push
mov
xor
fnstsw
shl
std
mov
je
cmp
cmc
std
lahf
out
divl
jp
mov
mov
xor
ljmp
aaa
add
aas
cmp
mov
sub
pop
cmp
ds
jno
or
adc
icebp
lahf
test
mov
repz
add
icebp
repnz
leave
jecxz
cmp
cmp
or
pusha
jle
std
test
jo
ljmp
aaa
inc
mov
or
inc
shl
fnsave
mov
mov
mov
mov
cld
int3
mov
dec
std
cmp
mov
movl
stos
add
fcoms
cld
cltd
push
push
dec
cld
xorl
ljmp
jns
add
pushf
ja
inc
jno
pop
and
xchg
sbb
scas
mov
std
mov
mov
inc
cmp
test
or
pop
xorb
popf
xchg
sbb
jae
mov
ljmp
fidivrl
test
mov
je
or
ficoml
inc
adc
test
sbb
sti
cmp
mov
add
xor
pop
xchg
cmp
jnp
mov
xchg
cmp
je
cmp
cwtl
outsb
imul
add
mov
stc
fistpl
inc
cmpb
lahf
fcmovbe
inc
mov
test
add
fidivl
xchg
or
jnp
lcall
pop
cmp
xorb
pop
fidivl
inc
adc
test
repz
mov
xor
sbbb
adc
adc
mov
mov
fmuls
xchg
jmp
or
jmp
sahf
cld
or
sbb
pop
or
mov
mov
cld
lock
test
cs
clc
in
rorl
inc
adc
jmp
cld
jno
mov
xchg
sti
outsl
out
test
pop
cld
jb
aaa
rolb
data16
pop
sub
iret
hlt
cld
fcomps
fdivrs
jno
push
repz
and
fdivrl
dec
std
sub
push
aad
adc
in
cmp
les
mov
push
xor
and
fmull
push
fs
frndint
cmp
cmp
sub
dec
imul
jle
repz
sarl
cld
push
push
dec
xchg
xor
adc
push
incb
sub
xchg
pop
repz
testl
xchg
lcall
pusha
loopne
sub
repz
cld
aad
cmp
mov
shl
cld
outsb
or
and
das
pop
or
stos
lret
cld
mov
or
cld
inc
shrl
lret
cld
fstps
mov
inc
adc
or
stc
push
in
fwait
lock
mov
cmpsl
sbb
sub
cld
sub
in
cld
mov
hlt
jb
je
cld
clc
cltd
jnp
lret
ss
dec
cld
shrd
sbb
cld
sub
sbb
cld
sub
mov
fs
pop
lret
in
mov
insb
ja
push
movsb
pop
popf
sub
imul
mov
std
sub
dec
hlt
ljmp
cld
inc
test
mov
cld
icebp
out
arpl
and
jns
cmp
cld
dec
mov
test
cld
inc
jecxz
hlt
aaa
ljmp
std
add
sarl
into
adc
inc
cmp
lock
cld
mull
mov
mov
cmp
add
push
inc
mov
or
into
aad
mov
adc
push
call
leave
icebp
clc
adc
pop
mov
fildl
lret
hlt
jecxz
fsubrl
fisttpll
inc
ljmp
pop
movsb
cltd
cwtl
in
mov
jmp
mov
cld
test
sub
dec
aaa
pop
shlb
outsb
sub
dec
add
aad
mov
mov
scas
push
sub
or
pusha
push
das
jl
mov
dec
or
pop
out
ds
cmp
mov
dec
test
cld
sub
insl
pop
xchg
xchg
stc
cld
and
or
loope
scas
rcrl
in
jno
cld
add
dec
pop
fsubl
inc
mov
add
adc
xchg
cld
mov
push
xor
cld
xchg
jge
xlat
loop
outsl
xor
mov
push
jp
lods
out
cld
cwtl
and
mov
sub
sbb
cltd
outsl
in
sbb
xchg
and
inc
mov
cli
push
incl
or
jl
imul
inc
std
mov
cld
dec
bound
in
push
cld
movsb
call
lods
jno
arpl
sbb
sub
sub
jecxz
push
mov
outsb
js
test
shll
into
mov
imulb
pop
or
ss
das
xlat
pusha
cli
fisubrl
jg
dec
fs
cmp
cld
jecxz
pop
movsb
inc
push
jbe
cmp
lea
dec
fidivs
mov
mov
or
cmp
stos
adc
popf
cmp
and
or
cs
inc
push
ror
imul
repz
fsubrs
push
subl
stc
sahf
push
cltd
inc
out
popf
std
sbb
cmc
sarl
out
int3
mov
pop
push
sub
or
fdivr
xchg
inc
scas
in
push
inc
daa
test
pop
jnp
and
outsl
cld
data16
pop
mov
cld
cmpsb
jge
das
fdivrl
pop
icebp
in
jg
pop
aaa
push
std
int3
xchg
clc
hlt
push
aam
inc
fdivr
jb
sbb
repz
fdivr
pop
inc
movl
repnz
cmp
cmp
sub
cld
xorps
xchg
pop
in
mov
repz
sub
xor
loope
cld
loopne
adc
or
imul
cmc
pop
mov
pop
cmp
sbb
rclb
insl
cwtl
sahf
cli
jp
mov
and
lds
out
fwait
adc
mov
sub
or
mov
inc
fcmovnb
leave
sub
and
sub
in
mov
push
in
mov
pushf
sarl
fdivl
ljmp
imul
inc
xchg
cmc
mov
mov
sub
sub
cmp
in
jae
and
jno
adc
fimull
push
dec
pushf
int3
and
call
sbb
roll
mov
push
cld
pop
stos
std
sar
scas
bound
adcb
loopne
lods
roll
push
add
dec
push
pop
out
negl
scas
cld
hlt
rol
imul
arpl
add
mov
cld
add
inc
pop
push
jmp
xchg
sarb
insb
movsl
fildll
jnp
hlt
cs
jmp
sub
lea
fidivl
cmp
movsl
mov
insb
or
loope
cmp
xchg
sbb
cld
mov
adc
aad
mov
cld
cmpsb
sbb
inc
stos
xchg
sar
jae
cmp
pop
test
mov
pushf
jl
xor
cmp
roll
stos
cld
je
push
jo
push
pushf
int
cmp
test
inc
clc
test
das
cmp
xchg
mov
testb
xor
stc
outsl
jno
jp
cmp
adc
inc
cld
or
sbb
scas
sahf
mov
mov
jns
adc
test
into
jo
loop
arpl
fdivr
divb
mov
xchg
pop
imul
test
cld
fistpl
cmp
je
ss
mov
cld
outsb
hlt
jp
mov
aas
addr16
push
addb
clc
cld
adc
mov
std
imul
xor
dec
loop
lret
lods
mov
sbb
das
cld
rolb
cld
negb
js
subl
cld
cmpsl
pop
or
dec
lret
sub
lock
push
into
enter
mov
mov
hlt
push
inc
xor
lret
cld
and
std
lds
popl
cld
mov
add
push
fisubs
gs
stc
test
dec
jecxz
cmp
mov
sub
jae
rol
aas
push
std
xchg
sub
adc
pop
add
lret
and
xor
das
sahf
or
enter
sbb
dec
mov
or
and
jnp
cltd
or
popa
inc
arpl
xor
movsl
and
mov
or
pop
xor
mov
jno
int3
push
and
out
repnz
lahf
cld
leave
adc
or
cld
xor
mov
lds
mov
and
or
out
in
loope
pop
fwait
ljmp
mov
inc
fcomps
out
pop
fnstcw
xchg
cld
movsb
lahf
les
test
mov
mov
mov
js
pop
movsb
stc
sbb
daa
inc
jmp
xchg
or
cmpsl
push
pop
mov
push
pop
cld
sbb
andb
jb
add
in
xchg
out
cld
pop
into
jmp
mov
clc
push
rcrl
int3
or
lock
gs
mov
xchg
fadd
adc
lret
jmp
dec
cld
sub
ljmp
scas
ss
inc
scas
dec
cld
cmp
pop
sbb
je
mov
jb
adc
sub
dec
dec
sub
mov
ret
test
and
test
inc
mov
xor
lods
mov
lock
stc
popa
cld
or
dec
pop
cld
loopne
dec
scas
fadd
push
js
push
out
inc
sub
clc
in
sar
jg
cmp
mov
loopne
mov
cmp
popf
adc
mov
scas
jmp
fstpt
jb
enter
les
imulb
and
mov
xchg
lea
dec
in
inc
pop
cmp
pushf
movsb
scas
or
mov
pop
testl
ds
cld
add
sbbl
mov
cld
or
in
add
jnp
insl
mov
cld
shl
lret
jno
or
pop
cld
or
adc
ds
or
data16
mov
xor
int3
rorl
imul
clc
push
cld
les
aad
std
cmc
test
ret
cmpsb
pop
and
pushf
dec
rcr
pop
sub
icebp
in
or
shlb
pop
lret
ds
sahf
and
cli
jns
mov
rcll
xchg
pop
or
push
dec
push
lahf
gs
andb
out
cmp
xor
pop
in
jae
mov
jne
adc
cld
scas
sbb
es
clc
outsb
or
inc
xchg
jp
and
cmc
das
xor
and
jbe
in
rolb
sub
int
xor
push
shr
test
icebp
insb
popa
test
nop
sti
inc
jp
clc
cmpsb
push
jae
cld
add
xchg
sub
sbb
adc
xchg
cld
sti
popa
mov
or
mov
cld
fisubrs
jp
and
test
outsb
sub
inc
repz
push
mov
pop
orb
mov
or
or
ss
add
and
push
in
mov
stos
clc
enter
clc
adc
fistps
adc
mov
pop
adc
or
xor
popf
jae
dec
dec
jge
in
out
lahf
pop
inc
hlt
hlt
cmpsb
jnp
scas
cmp
dec
mov
sbb
mov
outsb
jge
ret
xor
cwtl
icebp
lcall
insb
out
sub
dec
cld
call
cmp
stc
cld
cmpsb
out
shrb
std
insl
je
pop
shlb
mov
idivb
fadd
jl
mov
call
xlat
cld
pop
mov
cwtl
cld
dec
clc
pop
popa
out
mov
push
push
sqrtps
push
mov
sub
dec
mov
mov
clc
mov
cld
testb
aas
mov
ret
call
lret
pop
jns
loope
jno
mov
xchg
jg
ss
test
stos
lcall
cld
pop
loope
push
adc
faddl
cli
cmp
cld
and
mov
add
add
push
cld
outsl
pop
std
inc
mov
pop
test
jg
inc
lea
or
inc
outsl
and
xchg
mov
lock
lods
hlt
mov
push
mov
popf
cld
lret
iret
stos
mov
cld
mov
or
pop
sahf
jnp
inc
test
jge
dec
hlt
data16
adcb
cld
fisubl
add
mov
mov
pop
lret
xor
and
cld
pop
inc
sub
xor
dec
shlb
cmc
in
xor
into
jecxz
daa
imull
insl
test
push
stc
mov
cld
adc
popf
sub
pop
and
stc
mov
adc
or
mov
push
call
cld
xchg
push
cld
int
cmp
ret
xor
in
aad
aas
xchg
pushl
stos
in
xchg
clc
dec
sub
inc
cmpsl
clc
cld
jnp
jmp
frstor
jp
dec
mov
cmp
mov
xor
fcmovnbe
mov
mov
jae
lods
fcomps
lcall
call
and
icebp
mov
repnz
pop
pop
lcall
test
int
sar
jo
sub
and
dec
push
push
pushf
push
es
sbb
addr16
cld
mov
lret
cmp
mov
ja
mov
add
dec
sub
and
divl
jns
mov
insl
inc
aas
aam
in
mull
lret
mov
xor
adc
shr
inc
dec
int3
aad
cld
arpl
sbb
clc
mov
cld
xchg
cwtl
cmp
or
loopne
in
rorl
test
repz
negb
jecxz
clc
xor
pop
mov
in
cld
scas
repz
hlt
test
cld
lahf
shl
push
lods
mov
fsubrl
mov
or
or
iret
push
add
lock
or
imul
insl
push
sahf
imul
mov
or
sbb
mov
movsl
mov
lahf
jge
sar
dec
or
jp
mov
cmc
xchg
dec
icebp
out
inc
jmp
xor
pop
mov
lds
mov
cmp
insb
hlt
push
or
cltd
test
or
fisubs
push
ss
incl
outsl
sbb
or
mov
dec
cld
and
cmc
or
fmuls
insb
cmpsl
repz
pusha
pop
test
mov
test
ret
dec
notb
lods
pop
in
or
push
loop
cli
fcmove
jge
mov
push
xchg
idivb
cld
pop
out
ljmp
les
inc
out
push
adc
scas
ljmp
pop
cld
push
sarl
cld
mov
vunpcklps
rolb
cld
jnp
rolb
fsubl
ret
add
cmp
push
fisttpll
xor
cs
clc
push
std
or
cmp
pop
sbb
aaa
mov
inc
clc
fisubrs
cld
mov
xor
leave
cld
sbb
or
cmp
lret
mov
ja
pop
jge
sub
and
fsts
adc
rorb
inc
mov
cld
fcoms
nop
repz
test
roll
call
fneni(8087
maskmovq
testl
dec
ret
xchg
in
xor
mov
cld
mov
iret
cld
lcall
sub
sbb
outsl
mov
call
xlat
cld
pop
mov
popa
xchg
ds
push
cld
mov
push
adc
scas
add
xor
sub
jge
stos
cld
push
mov
pop
mov
cmp
test
mov
test
or
cld
pushf
pushf
movb
dec
bt
shl
mov
lods
call
push
jmp
movl
movw
push
pusha
movl
pushl
lea
jmp
add
inc
gs
jne
jb
outsb
je
push
dec
add
adc
push
sub
pop
movsb
xor
filds
cltd
push
sbb
sbb
cwtl
aam
dec
rolb
sbb
mov
pop
xchg
or
fistps
cmp
aad
jp
push
je
xor
lods
inc
mov
pop
sbb
out
xchg
sti
xchg
stos
testl
cltd
sti
lret
outsb
dec
mov
xchg
add
repnz
add
out
enter
xor
mov
repz
les
sahf
scas
movsl
dec
shll
inc
int3
ret
aad
push
rclb
addl
in
mov
jg
xor
aas
repz
cmpsb
test
enter
and
cmp
cmp
fdivrs
cmpsb
ror
mov
ds
lea
push
fisubs
and
mov
iret
jle
cld
push
jmp
ljmp
or
pop
push
xchg
inc
pop
dec
xor
pop
xor
popf
repnz
and
scas
das
jo
sbb
lret
dec
lock
mov
movsb
push
xor
dec
fnsave
mov
lahf
sbb
mov
or
pop
ret
imul
xor
add
sbbl
faddl
test
jl
test
bsr
call
mov
test
pop
repz
adc
mov
add
push
sub
mov
out
or
mov
test
xchg
insl
pop
dec
xor
xchg
xor
imul
fadds
pop
sbb
mov
mov
movsl
jno
shll
mov
adc
or
dec
sub
lret
dec
iret
jl
push
rorb
fwait
les
cmp
roll
inc
fwait
test
jge
dec
xor
sti
mov
push
ror
ds
movlhps
mov
ret
arpl
rcll
mov
dec
mov
sarl
fnstcw
lea
jg,pt
push
in
test
mov
pusha
mov
imul
mov
imul
and
pushf
cmp
cmp
mov
lods
jno
icebp
mov
jg
loop
push
fwait
test
mov
jb
jecxz
jno
pop
out
jbe
mov
mov
fldcw
xchg
stos
xchg
daa
sub
inc
or
xchg
adc
test
adc
test
mov
add
mov
in
push
mov
repnz
jo
jae
repnz
xor
iret
jnp
into
fs
out
or
clc
adc
jns
jb
jnp
cli
das
jnp
jns
aad
pop
push
jle
ret
lcall
test
mov
sti
sbb
xchg
or
adc
lock
popf
fldenv
out
hlt
shr
js
mov
jge
cmpsl
lds
int
sbb
testb
inc
movsl
clc
enter
mov
scas
adc
sub
addr16
call
cmp
imul
movsb
cmp
and
out
mov
into
push
push
xlat
out
mov
jp
sub
inc
mov
jae
xchg
sub
clc
xchg
dec
add
cld
hlt
push
and
jl
loop
aaa
das
cli
jmp
add
inc
sarb
jne
inc
jge
pop
jp
adc
sbb
leave
sub
stos
hlt
add
fsubs
clc
pop
jnp
mov
and
dec
iret
jp
or
loop
push
movl
jmp
xor
sarb
pushf
enter
or
add
mov
or
and
stc
pop
aad
mov
sahf
mulb
or
aam
outsl
insl
iret
repz
push
xchg
loopne
sub
adc
ds
pop
mov
fisubl
lock
sahf
stc
sahf
stc
cmc
jno
lock
inc
inc
dec
add
pushf
and
out
push
xor
xchg
and
jmp
repnz
inc
incb
mov
push
sub
dec
push
push
aas
pop
lcall
sub
push
xchg
cli
xor
or
aas
ja
outsl
gs
fidivrs
sar
bound
lea
out
cmp
out
pop
iret
repz
nop
lret
sbb
pop
cmp
pop
call
bswap
xchg
stos
or
mulb
dec
jb
mov
jmp
divb
rcl
jmp
in
and
mov
xor
cmp
pop
adc
sbb
adc
std
jl
fdivrs
enter
dec
sub
mov
jp
inc
jp
dec
outsb
adcb
je
in
push
cmp
cmp
jnp
enter
dec
and
int
add
lret
repz
fldenv
push
xchg
aam
insb
push
inc
or
inc
cwtl
xchg
das
cmpb
ja
jo
into
in
mov
xor
mov
iret
js
jnp
pusha
jmp
add
add
push
loope
outsl
xor
push
aam
push
rcl
xchg
dec
aam
push
aas
popa
cmovs
push
rcl
in
adc
pop
mov
jl
push
xor
inc
mov
and
cmp
popf
pop
inc
mov
push
ds
mov
gs
test
nop
dec
adc
adc
dec
adc
out
repnz
and
sbb
jg
test
add
xchg
je
int
mov
int
iret
js
mov
bswap
pop
pushf
pushl
ret
setns
lea
mov
jmp
jns
and
jmp
and
enter
or
test
andps
mov
push
xchg
clc
out
jbe
fidivs
rolb
pop
inc
push
hlt
mov
xor
inc
jle
pusha
and
cwtl
push
mov
jecxz
inc
repnz
adc
adc
jne
mov
insl
ficompl
ja
cmpsb
cmp
add
test
inc
fsubr
cli
icebp
cld
test
loop
movsl
mov
and
inc
in
test
dec
nop
mov
imul
dec
dec
iret
js
in
push
mov
adc
xchg
enter
mov
push
cmp
pop
or
dec
filds
sub
js
mov
cmp
sub
mov
lret
test
and
test
inc
addr16
inc
imul
test
inc
out
fildl
sub
cmpsl
sti
call
scas
mov
mov
mov
jo
xor
mov
daa
jp
rorl
into
outsl
addb
sbb
dec
add
dec
sti
fs
test
push
xchg
outsb
pop
inc
xor
subl
dec
mov
xor
xor
jae
fdiv
sub
pop
jae
adc
shr
inc
and
mov
sub
lret
xor
xchg
jb
lret
psllw
xchg
or
aad
sub
xchg
cs
jb
popf
add
push
sbb
dec
iret
jbe
and
add
sub
mov
lea
call
push
pusha
mov
pusha
adc
push
movl
lea
jae
pushf
lea
jne
call
pusha
lods
call
icebp
mov
std
ljmp
mov
test
xor
dec
sub
or
dec
adc
push
int
or
dec
pop
enter
sub
imul
push
mov
dec
iret
jne
mov
rcr
enter
mov
push
dec
push
add
adcb
mov
sahf
cmp
les
sub
jae
add
movsl
jle
cmp
mov
insl
adc
inc
mov
scas
test
aaa
aas
cmp
dec
push
int
and
icebp
call
jg
or
sub
mov
hlt
and
pop
pop
call
mov
aaa
call
or
jno
enter
add
push
ja
mov
sub
rcr
pop
aas
sbb
dec
iret
jne
sbb
call
lock
cltd
cmp
hlt
jbe
mov
mov
or
pop
das
jl
push
fdivs
rcrb
ret
sub
shll
cmc
jmp
lods
mov
insb
sbb
xchg
sub
or
mov
mov
sub
ja
lcall
and
stc
dec
out
xor
mov
fwait
add
push
sbb
int3
push
aad
add
and
push
add
in
xlat
sar
in
dec
lcall
pop
xchg
push
jne
lret
fistps
loope
gs
mov
jo
out
dec
mov
insl
icebp
subl
mov
test
cmp
ret
mov
add
add
dec
nop
outsl
leave
stos
enter
lret
dec
iret
je
pop
fcomps
sub
pop
popa
outsb
jmp
es
jbe
repnz
mov
push
outsb
mov
add
inc
mov
mov
mov
data16
ss
jg
push
sbb
xor
mov
xor
pop
mov
mov
mov
lods
xchg
jecxz
ret
or
in
adc
fiadds
arpl
xorl
or
addr16
jp
bound
add
loopne
sbb
fistpll
rcrb
iret
jae
adc
add
call
jno
js
cld
orb
push
dec
xchg
dec
pop
lret
sbb
fisttpll
repz
sar
or
or
push
out
in
xor
stos
stos
ret
movsl
xor
fildl
cld
mov
int
lahf
dec
or
aad
mov
sbb
popa
jp
push
cs
push
or
xor
jae
fwait
in
das
push
ds
testl
bound
lods
pop
fmul
mov
lods
daa
xchg
mov
mov
xor
jbe
push
jb
mov
and
sti
inc
adc
js
aaa
pop
sub
adcb
je
jp
in
rolb
dec
jg
sbb
fwait
push
jbe
adc
mov
pushf
andl
ds
cli
into
cmp
leave
test
push
dec
fsub
scas
sub
std
adc
lds
push
pusha
mov
dec
div
adc
jno
std
mov
cmp
and
jecxz
dec
iret
jb
xor
call
jb
push
push
adc
call
rep
movzbl
mov
pushf
push
mov
pusha
lea
jmp
fcmovnbe
sub
out
insb
mov
mov
xor
jg
mov
test
lock
fs
sub
push
test
lods
cmp
sbbb
cmp
mov
pop
popa
sbb
arpl
pop
ljmp
cmp
loop
out
cli
adcl
out
dec
shlb
das
lods
out
mov
cmpsb
inc
add
mov
mov
add
subb
inc
das
mov
sub
frstor
lods
rsqrtps
movsl
inc
pop
mov
dec
iret
jno
xor
str
pusha
jmp
xor
in
cmp
je
mov
pop
fisttps
fimull
push
test
gs
push
inc
imul
inc
xchg
or
in
pop
or
lcall
or
aaa
add
imul
push
push
sub
dec
jbe
aad
lods
rorl
insl
iret
jae
push
cld
mov
mov
aam
push
dec
mov
stos
leave
mov
push
ja
pop
xchg
push
xchg
lods
push
mov
imul
outsb
test
pop
outsl
xchg
mov
mov
sub
mov
popa
std
mov
dec
iret
jo
dec
and
shr
outsl
push
decl
mov
pushf
inc
lea
push
call
push
aas
imul
in
fwait
int3
cwtl
lea
or
je
int
loopew
pop
inc
insl
mov
mov
clc
xchg
dec
cmp
mov
jg
lea
faddl
mov
xchg
pusha
pop
xor
ror
jb
dec
idiv
pop
pop
js
or
pop
ss
shr
cmc
pmullw
adc
jmp
pop
and
insb
or
divl
add
xchg
add
jle
cltd
jle
inc
cmp
lea
sub
inc
rol
fimull
cmpsl
test
ja
loope
inc
add
aaa
pop
xchg
xorb
shll
cmp
add
jns
pop
enter
mov
insl
mov
add
fs
gs
es
lods
mov
imul
sti
movsl
pop
push
push
outsb
push
hlt
clc
xchg
sbb
mov
fs
iret
std
aaa
jp
popa
jl
mov
out
lea
into
adc
or
outsl
lret
movsl
icebp
pusha
movl
pusha
call
pop
dec
pop
aaa
adc
jge
xor
mov
lock
movsl
test
pushf
or
push
dec
sbb
mov
fdiv
mov
inc
out
in
xor
jl
scas
push
sbb
jne
dec
insl
sub
ljmp
pusha
dec
xchg
mov
stos
pop
xchg
push
pushf
xchg
dec
push
sub
sbb
sbb
ja
lock
xor
mov
mov
shr
jle
jmp
hlt
popa
mov
roll
inc
pusha
mov
imull
jnp
std
movsl
jg
xor
jp
shrl
out
repz
push
xchg
mov
aaa
or
cmc
cmc
sub
repz
enter
sub
adc
mov
mov
stos
out
cltd
repnz
push
pop
lret
sbb
fwait
xchg
mov
iret
outsb
shlb
cmc
repnz
jmp
adc
maxps
push
into
test
pop
push
adcb
sbbb
jo
mov
test
mov
xor
push
das
inc
push
sub
pop
ret
sbb
loop
xchg
into
imul
adc
ljmp
mov
xchg
scas
mov
imul
mov
mov
or
fmuls
fistps
pop
xchg
js
dec
jae
push
push
mov
stos
jg
add
loop
sbb
cmp
cli
mov
icebp
ret
imul
pusha
mov
cmc
mov
test
jmp
add
xchg
jl
aas
aad
jle
jo
xor
in
cmpsb
mov
lock
jae
fsubl
out
lret
repnz
push
mov
cmpsl
xor
imul
inc
hlt
lock
mov
fadds
pop
in
mov
or
xchg
sub
test
pop
cmpsl
add
pop
rcrl
and
dec
iret
insl
mov
push
lea
je
bt
cmp
cmp
push
pushl
ret
sete
mov
call
push
jmp
xchg
test
sbb
adc
pop
cmp
stos
aas
out
sub
scas
mov
arpl
dec
sbb
aas
pop
or
mov
js
jp
fnsave
fwait
mov
or
and
mov
inc
inc
pushf
cwtl
cli
mov
push
aam
test
je
cmp
cmpsb
fnstcw
aas
push
or
mulb
dec
mov
jae
inc
jnp
sahf
mov
pop
inc
out
aad
sub
inc
rol
test
fs
jmp
xchg
lret
insb
mov
nop
jns
sub
mov
test
sbb
icebp
mov
inc
sbb
and
insb
clc
cltd
jg
cmp
fs
in
and
mov
mov
adc
sbbb
pusha
jge
inc
adc
lahf
add
mov
mov
push
roll
scas
popf
xchg
imul
in
mov
ds
xchg
mov
lret
xchg
cmp
push
dec
xor
mov
cmp
mov
es
sahf
test
and
mov
push
insl
jns
daa
pop
cmp
adc
adc
movsl
jg
xchg
rorb
jne
adc
add
les
push
add
into
xchg
leave
push
lea
xchg
push
dec
iret
insl
add
add
sarl
fwait
cmpsl
stos
popf
cmpsl
bound
pusha
jle
cld
push
decb
jp
jne
cmp
stos
addl
add
cld
push
mov
lret
cld
xchg
je
push
inc
cmp
push
jb
cmpsl
jle
xor
xrelease
mov
js
lods
rol
lret
aas
hlt
push
pop
push
xchg
sub
mov
enter
loope
dec
jo
js
pop
das
add
shrl
hlt
pop
xor
inc
sub
mov
sub
xchg
lods
jo
pop
adc
pop
dec
ret
mov
adc
add
fistpl
pop
cmp
adc
lock
inc
sahf
mov
push
xchg
add
push
sub
pop
divb
pop
pop
movsl
mov
push
lret
ljmp
imul
outsl
or
cld
xchg
inc
pop
adcb
adcl
rcrl
neg
iret
cmpsl
aas
lods
push
inc
dec
repnz
push
pop
sti
push
xor
lret
push
lret
add
test
test
cmp
adc
push
iret
mov
fisttpll
faddl
jno
rcll
outsb
stc
fs
loop
jecxz
fdivrs
addr16
lret
inc
repz
int3
movsb
mov
movsb
push
adc
pop
inc
out
arpl
xor
test
add
mov
movsbw
pop
movl
lahf
push
cwtl
lea
movb
push
movb
jmp
xchg
popf
lds
jne
mov
enter
int3
sbb
push
lret
rorb
call
fimuls
jg
loop
sub
sub
add
add
xchg
shlb
push
in
xor
push
imul
inc
pusha
jae
mov
push
enter
xchg
jecxz
xchg
mov
nop
xor
fldenv
xchg
or
push
gs
lods
int
int3
sub
dec
js
jne
je
mov
add
ret
push
sub
in
fs
mov
imulb
mov
mov
xor
imul
push
add
fcmovnbe
or
popf
lret
jl
inc
ffreep
push
inc
xchg
inc
sbb
pop
aad
pop
inc
xor
cmc
faddp
jmp
ljmp
pusha
outsb
inc
cwtl
or
js
jecxz
adc
inc
dec
aaa
or
lock
pop
jle
mov
daa
and
ja
jge
dec
xchg
cli
ret
jns
test
shrl
repnz
push
xchg
cmpsb
mov
popf
rorb
scas
ljmp
push
xchg
repz
jnp
jge
sub
inc
mov
loop
push
push
dec
xor
popa
dec
leave
mov
aam
sbb
stc
dec
jne
jno
and
xor
push
cld
rep
mov
mov
repnz
test
test
scas
test
cmpl
dec
call
inc
insb
add
add
subb
pop
pop
add
jp
inc
fadds
sbb
iret
imul
and
testb
add
cmpsl
stos
jle
pushl
popl
pushl
pushf
movb
pushf
pushl
ret
lea
jge
push
lea
ja
pusha
lea
jb
call
lea
jne
stc
bsr
bts
sar
sub
inc
dec
daa
mov
shl
clc
ror
add
ror
sub
stc
sbb
mov
bt
test
call
pusha
call
jmp
jnp
mov
inc
add
push
or
lahf
lret
pop
push
sbb
adc
sub
sub
pop
sub
dec
push
jnp
mov
ror
dec
dec
outsl
sub
jecxz
dec
push
gs
in
dec
jg
decl
and
push
add
sub
outsl
pop
in
int3
repnz
cmp
sub
mov
addr16
movsl
sbb
sub
mov
les
sbb
leave
lock
adc
adc
dec
incl
cmc
inc
cld
push
xchg
lahf
addr16
dec
sub
or
cmp
sub
mov
push
in
adc
xchg
jl
inc
push
sub
shrl
xchg
push
sahf
lods
lds
add
cltd
icebp
cmc
xlat
fsub
xlat
nop
adc
mov
mov
push
shll
mov
ja
int
xor
mov
dec
das
jo
dec
iret
cmpsl
lea
mov
push
ficomps
xchg
dec
imul
dec
pop
add
inc
pop
pop
push
or
arpl
test
xor
incb
add
js
adc
jmp
andl
mov
push
cmpsb
lret
jmp
dec
mov
or
ljmp
mov
dec
jmp
mov
fldl
loopne
daa
cmp
dec
daa
mov
ljmp
jl
icebp
jmp
mov
and
xor
dec
fidivrs
add
jns
adc
fndisi(8087
sub
inc
jns
add
int
dec
imul
adc
mov
dec
iret
retw
popf
cmc
out
icebp
jmp
and
insl
mov
mov
jo
std
stos
cmp
sub
shll
xchg
cmpsb
jecxz
adc
jnp
jnp
xor
cli
movsl
adc
jg
in
aad
mov
xor
cmp
imulb
not
sbb
mov
jl
sbbb
repz
cmp
pop
adc
rorl
jbe
dec
cmp
pop
xor
mov
dec
cmp
dec
out
jo
leave
aam
sub
pop
or
data16
mov
or
sbb
stc
xchg
inc
push
ret
xchg
enter
inc
sbb
adc
fidivrs
cmp
mov
jl
dec
cmp
test
push
js
scas
jne
sbb
out
ja
adc
jnp
add
and
inc
jns
mov
clc
shrb
out
and
fcoms
push
or
push
jge
jge
jle
add
pop
xchg
dec
iret
gs
aad
pushl
popl
pushf
pushl
pushl
ret
jmp
pusha
call
pusha
pusha
movb
rep
lea
jmp
into
mov
sahf
les
mov
aad
nop
cwtl
dec
sbb
sbb
mov
inc
out
arpl
notl
sub
adcb
cli
mov
shl
imul
fnstenv
shrb
jg
mov
in
pop
xchg
cltd
lret
fcom
sbb
sub
ljmp
mov
xor
repnz
mov
hlt
xchg
dec
sub
cs
iret
fs
aas
xchg
hlt
out
push
in
or
in
mov
mov
repz
xor
mov
mov
shrl
sub
rorl
fidivrl
cmp
clc
lods
mov
les
mov
cvtps2pi
shll
loopne
insb
mov
inc
jl
ret
inc
out
or
mov
push
jae
js
mov
xor
aaa
int
js
in
js
lcall
lcall
jno
dec
jmp
fs
rorb
aaa
add
add
adc
pushl
lea
jne
bt
shld
shl
bsf
mov
bts
sbb
neg
sub
bswap
mov
pushf
call
je
lcall
mov
push
rclb
push
nopl
or
dec
movb
dec
xchg
insb
sbb
sbb
adc
dec
jno
loop
sbb
ret
fmuls
or
jmp
lods
xor
enter
and
xor
or
insl
push
dec
stos
cmpsb
xlat
movsl
jne
mov
js
inc
cmp
rorl
xor
js
cmc
lock
cmp
cld
enter
jns
lods
out
repnz
pop
xor
push
outsb
pop
inc
adcl
in
push
test
lret
push
shlb
in
rol
js
loopne
mov
test
cwtl
mov
push
sbb
add
pop
push
aad
int3
mov
popf
dec
xchg
hlt
out
mov
in
iret
mov
add
flds
pop
add
popf
cmp
rcrb
ja
cmp
xchg
cli
jmp
shrl
test
dec
mov
call
fstpt
mov
or
pop
mov
iret
pop
rcrl
sbb
jl
pusha
sub
pushw
imul
std
aam
inc
hlt
leave
and
jge
in
cmp
pop
sub
daa
cmp
cmp
shlb
testl
mov
sbb
mov
jb
insl
sub
push
mov
xor
sbb
inc
test
scas
cmp
clc
cmc
pusha
jl
andl
jg
iret
arpl
jmp
jnp
jne
or
filds
sahf
les
jmp
push
and
aam
sbb
stc
jns
sbb
mov
inc
sbb
add
dec
out
int
sub
std
pop
push
cmp
xlat
xor
decb
stc
sbb
mov
jae
jb
hlt
out
xor
ljmp
stos
add
cli
push
dec
mov
dec
lret
pop
mov
bound
out
xchg
push
mov
sbb
mov
bt
mov
shld
movsbw
lea
mov
test
pushf
sub
jmp
inc
call
xor
mov
jno
mov
jg
imul
cld
mov
push
rcl
dec
add
add
popf
fidivrs
pop
mov
std
xor
dec
jg
or
insb
push
mov
jne
ja
mov
or
dec
iret
bound
std
pop
cmp
jg
sarb
xchg
stc
xchg
movsl
sarl
hlt
ret
inc
xchg
in
jns
jno
jl
xor
mov
scas
dec
adc
cmpl
test
mov
xchg
mov
dec
add
in
fildl
jae
cmpsb
jg
in
mov
and
fisttpll
out
and
mov
ss
pushf
pushl
mov
movl
pushf
lea
jnp
pusha
movb
movl
pushf
mov
pushf
pushl
lea
jmp
lds
xchg
test
inc
xchg
orb
icebp
adc
cld
mov
inc
movsl
sub
in
inc
rolb
push
xor
add
add
inc
pop
sti
pusha
mov
test
pusha
call
jns
and
and
arpl
mov
pop
fidivrl
mov
test
ror
cltd
repnz
ds
xor
pushf
addr16
faddl
mov
xchg
cmc
cmpsb
add
mov
sub
sub
inc
frstor
lods
bndldx
sbb
and
rcrl
fmuls
pop
mov
adc
lea
pushf
pushl
ret
call
push
lea
jne
pushf
mov
pusha
push
mov
call
out
rolb
sub
mov
stos
cmp
cmc
loopne
mov
cmp
push
adc
repz
dec
inc
push
xchg
mov
push
das
cmp
data16
dec
jb
aas
pop
in
gs
inc
mov
popf
push
lods
push
push
mov
add
fidivrl
arpl
andl
aam
push
jns
lds
das
sub
pop
out
mov
mov
cmp
mov
xchg
dec
imul
adc
and
sub
push
rorl
movsl
mov
xchg
iret
sub
das
lret
icebp
stc
xchg
lods
jb
inc
jbe
stc
ret
fimuls
pushf
aad
mov
mov
xor
rclb
push
mov
cltd
adc
fidivrs
xchg
popa
pop
test
pop
es
cltd
test
dec
daa
lea
mov
dec
shll
int3
jmp
add
add
adcb
dec
nop
cmp
sbb
aad
popf
fwait
pop
nop
insl
jp
dec
mov
mov
add
ret
fidivrs
fisttpll
pop
mov
adc
pusha
lds
inc
shl
call
cmc
out
mov
call
les
dec
insl
sti
push
cmp
xchg
push
add
les
sbbb
and
sahf
mov
ret
mov
dec
leave
push
leave
cmc
and
inc
dec
inc
fisubl
fsubrs
fimull
inc
pop
jge
popa
adc
mov
or
test
inc
dec
lds
int3
sbb
mov
je
je
or
dec
iret
pop
mov
pop
std
std
xchg
imul
ret
jno
add
cmp
mov
pop
fwait
ss
inc
cmp
jge
mov
loope
dec
inc
fwait
and
aam
pop
int
mov
dec
lahf
movl
xchg
mov
sub
push
inc
stos
push
xor
add
xor
jmp
adc
dec
int3
popf
jmp
lea
je
push
add
pushf
pushf
lea
jmp
dec
call
into
lds
inc
dec
ljmp
cmp
mov
pusha
jne
xor
jae
push
inc
lds
fs
iret
ret
fwait
repz
les
sub
mov
and
mov
inc
stos
xchg
sbbb
loope
push
inc
ljmp
lds
jle
loopne
cmp
jmp
jae
punpcklbw
outsb
cmp
inc
addr16
and
cmp
dec
iret
pop
in
lret
jae
xchg
sbb
mov
rcrl
cmp
stos
ljmp
bnd
cmc
out
adc
jno
lret
jge
into
push
test
xor
repnz
xchg
jmp
and
std
push
fs
mov
mov
jl
or
test
xchg
lods
daa
pop
mov
std
in
dec
push
push
add
xchg
jcxz
or
out
je
jg
pop
add
aam
aad
mov
pusha
ja
outsl
imull
and
mov
call
loop
push
push
jp
adc
mov
inc
fsubrl
shll
sub
pop
call
fsubr
push
mov
rclb
mov
adcl
lcall
mov
and
out
cmpsb
add
cld
fs
movl
push
sub
inc
bound
test
mov
iret
jnp
pop
add
in
stos
scas
repnz
cmc
push
movsl
jb
jne
jbe
lret
xchg
jae
push
loopne
inc
sub
shrd
inc
pop
jmp
jl
add
jne
push
imul
pushf
jp
movsbw
lea
pushf
movl
jmp
add
inc
gs
outsl
fs
gs
imul
add
dec
idiv
call
call
push
movl
pusha
push
mov
pushf
lea
jmp
add
xchg
iret
xchg
jecxz
xor
insb
lea
sbb
add
ret
mov
into
test
cmpsl
or
popf
imulb
in
rclb
lret
xor
xchg
shll
inc
jb
scas
gs
jecxz
dec
roll
xchg
push
lahf
inc
cwtl
pop
jnp
adc
outsl
adc
mov
cmp
push
mov
push
mov
enter
imul
jb
mov
dec
adc
aad
sub
jg
pop
test
and
int3
outsl
je
or
xchg
dec
shl
push
leave
dec
iret
pop
lret
movsl
icebp
cmp
lahf
and
mull
mov
xor
subl
mov
mov
shlb
cmp
xchg
std
fdivs
push
or
mov
pusha
mov
movsb
cmp
dec
iret
pop
mov
imul
jbe
xor
and
mov
out
imul
pusha
jmp
js
fmull
push
icebp
xor
inc
aam
sub
cmp
mov
adc
push
int3
in
iret
scas
dec
lods
or
push
dec
iret
pop
lret
bt
mov
clc
rol
stc
sub
test
xor
jmp
cmpl
and
mov
inc
push
int3
xchg
iret
pop
dec
xchg
push
lahf
adcl
push
cmp
in
cmp
mov
mov
mov
stos
jmp
jg
int3
adc
jg
out
pop
arpl
jbe
sub
jg
inc
and
add
and
mov
xchg
push
cs
and
and
lods
test
or
notl
cmp
hlt
push
add
push
sub
std
lcall
scas
mov
leave
jmp
je
mov
iret
pop
pop
cmp
mov
stc
ljmp
xchg
mov
push
or
mov
or
add
mov
cmp
out
popa
in
js
mov
xchg
popa
xacquire
jnp
pop
jge
addl
sub
out
repz
lock
icebp
jle
inc
cmpsl
lret
sbbb
nop
out
jge
outsb
jl
pop
push
cmpl
pop
insl
xorb
pusha
mov
outsb
xor
je
or
adc
jne
or
or
out
or
pop
inc
and
call
rcrb
movsl
lock
ja
mov
lret
xchg
rcl
or
mov
out
push
int
xchg
jle
dec
out
mov
ret
inc
sbb
sub
hlt
loopne
lock
jae
shlb
cmp
ljmp
adc
outsb
jle
imul
cmp
mov
roll
push
cmc
imul
xlat
xchg
mov
or
dec
aam
push
sbb
add
mov
test
sahf
mov
into
adc
iret
pop
dec
es
sti
in
stos
aaa
and
aas
jp
inc
fmul
adc
pop
adcl
mov
sahf
mov
hlt
mov
push
xor
rcr
in
fnstsw
or
ja
push
push
pop
in
data16
int
sbb
int
sub
scas
shrb
mov
or
xchg
xchg
imul
add
stos
aas
jmp
ss
popf
cmp
sub
xchg
nop
shlb
push
add
stos
jb
mov
mov
enter
loope
inc
mov
adcl
or
pusha
cmp
int
pop
data16
mov
add
lahf
popa
dec
add
cmp
and
iret
push
push
sub
pop
or
mov
test
cld
mov
js
add
xor
push
mov
add
mov
mov
inc
cmp
jbe
add
sbb
popf
sbbb
sub
or
jg
and
push
arpl
mov
data16
movsb
jb
jp
cmp
inc
sbb
daa
dec
iret
push
in
lret
cmpsl
clc
in
xor
and
aas
pop
cmp
out
cmc
test
xchg
sbb
mov
push
rclb
in
out
add
scas
pusha
mov
inc
shrb
push
lcall
shl
insb
jne
notl
fnstenv
add
and
add
push
dec
dec
iret
push
dec
sub
and
shlb
mov
stc
sub
test
gs
imul
adc
das
and
nop
pop
lds
aam
add
add
cmp
pop
sub
jne
fistl
pushf
aas
sub
outsl
aam
pusha
icebp
push
rorl
out
adc
or
sbb
fildl
cmp
sbb
iret
push
push
call
movsl
cmp
sarl
pop
mull
in
mov
jle
sbb
je
dec
or
push
jae
adc
fnstsw
in
mov
jmp
xor
xchg
dec
xchg
jmp
push
inc
sbb
out
lahf
jle
add
inc
pop
sub
pop
dec
fmuls
cmpsb
or
stos
dec
mov
mov
adc
fs
dec
and
add
inc
and
cmp
je
add
fs
jl
popl
pusha
pusha
pushf
pushf
lea
jmp
mov
pushf
call
and
sbb
mov
cmp
pushf
pushf
mov
sub
jmp
pusha
push
repz
popl
pusha
mov
push
jmp
pusha
xor
mov
cmc
xchg
pushf
pushf
bt
xor
lea
js
inc
cmp
pusha
cmp
cmc
neg
stc
cmc
jmp
call
movw
push
pushl
popl
pushf
movb
lea
jmp
pusha
pushl
popl
pusha
movl
pushf
movb
push
lea
jmp
pushl
popl
movsbw
pop
setge
movl
lea
jmp
not
jmp
pushf
movl
pushl
pushf
lea
jmp
jmp
adc
xadd
pop
setns
mov
das
and
pop
aaa
xor
pop
sub
shr
pop
shld
test
call
mov
pusha
pushl
push
mov
jmp
pusha
call
mov
pusha
movw
movb
mov
call
mov
push
call
pushf
jmp
push
pushf
mov
mov
jmp
mov
pushf
pushf
call
call
aas
not
xor
mov
bts
adc
mov
stc
stc
pusha
cmp
add
mov
push
pushf
call
pushf
mov
pushf
pushl
ret
mov
mov
pushf
mov
mov
movb
pushl
pushl
mov
movw
lea
jmp
mov
mov
jmp
pusha
call
mov
pusha
call
mov
pushl
pusha
call
dec
cmc
cmp
neg
jmp
jmp
pusha
mov
movw
mov
mov
pushf
push
lea
jmp
call
shl
pushf
mov
jmp
das
shld
daa
aas
mov
shl
mov
pushf
inc
mov
push
sub
movl
bt
pushf
jmp
movb
pushl
popl
jmp
inc
xor
rol
shl
mov
push
pushl
jmp
test
call
mov
pusha
mov
mov
pushf
push
mov
push
call
jmp
call
jmp
mov
pushl
movw
mov
pushf
movl
mov
pushl
popl
movw
movl
pushf
push
mov
movb
lea
jmp
pusha
cmp
and
call
mov
mov
push
mov
call
mov
push
movl
pushf
lea
jmp
mov
mov
push
call
jmp
pusha
mov
jmp
movb
call
movl
pushl
lea
jmp
pushf
mov
jmp
pushf
call
jmp
mov
pushf
pushl
pushf
call
call
pushf
mov
push
mov
pusha
mov
pushf
popl
call
movl
push
movb
lea
jmp
repz
popl
push
push
jmp
mov
push
pushf
mov
lea
jmp
mov
pushl
mov
call
shl
movb
pushf
push
lea
jnp
mov
push
pusha
pushf
popl
pushf
mov
lea
js
push
pushl
popl
pushf
mov
mov
lea
jmp
pushf
push
pushl
popl
push
movb
lea
jmp
mov
jmp
lea
jmp
mov
mov
movl
movw
mov
lea
jmp
dec
stc
sub
jmp
push
mov
mov
mov
pushf
mov
pushf
jmp
pushf
pushf
mov
jmp
bsf
mov
cmc
clc
pusha
cmc
sub
cmp
pushf
pushl
add
movw
pushf
popl
call
call
pushf
call
jmp
pusha
pushl
popl
call
mov
call
jmp
mov
pushf
lea
jmp
pusha
mov
pushf
mov
pushf
mov
mov
call
bt
mov
cmc
call
mov
call
mov
call
btr
rol
pushl
shrd
shld
btr
lea
pushf
inc
sar
stc
sub
test
adc
mov
ror
pushf
btc
bswap
mov
inc
push
or
add
lea
sbb
pushf
call
pushl
popl
push
call
mov
mov
movb
movb
push
lea
jmp
mov
movb
pusha
push
pushl
mov
lea
ja
push
push
mov
jmp
pushf
mov
pushf
pushf
push
push
lea
cpuid
test
cmc
sub
clc
cmpl
jmp
pushl
jmp
pushf
pushf
mov
jmp
jmp
das
pusha
mov
btc
stc
mov
pusha
test
cmp
test
add
pushf
jmp
lea
jns
mov
push
mov
pushf
lea
jmp
not
cmc
sub
jmp
sub
pushf
mov
mov
lea
jmp
jmp
bswap
pushf
cltd
lea
mov
pop
cwtl
jmp
push
jmp
xor
rol
aas
mov
clc
call
neg
call
pusha
jmp
mov
pushf
pushl
mov
jmp
call
lea
mov
cld
pushl
mov
lea
bswap
mov
pushf
jmp
pushl
mov
call
mov
mov
jmp
movl
push
push
pushl
push
lea
jmp
or
mov
push
add
mov
pusha
pusha
pushf
lea
jmp
push
pushf
pusha
repz
popl
jmp
rcr
mov
ror
and
pushf
sar
mov
pusha
pusha
add
pushl
jmp
mov
dec
push
pusha
call
pusha
jmp
call
shr
pushf
call
mov
pusha
test
pushl
add
mov
movw
mov
pushf
lea
jmp
push
mov
call
mov
pushl
popl
jmp
pushf
jmp
mov
pushf
call
and
movb
stc
jmp
call
stc
sub
movb
pushl
mov
pushf
lea
jmp
mov
pushl
call
push
movb
pusha
lea
push
mov
mov
movb
pushl
ret
xor
jno
pusha
xchg
movb
call
jmp
jmp
pushf
popl
mov
pushf
pushl
popl
mov
lea
jmp
mov
mov
mov
call
rcl
inc
aam
test
mov
not
mov
jmp
not
jmp
sub
movb
jmp
pushf
cmc
cmc
cmp
call
cmp
shl
pushf
mov
push
call
add
add
pushf
jmp
lea
ja
push
mov
mov
pusha
mov
jmp
mov
call
jmp
jmp
pusha
pushl
popl
movb
jmp
mov
mov
movb
pushl
popl
push
jmp
mov
pushf
lea
jmp
mov
jmp
pushl
popl
pushf
lea
jmp
pushf
rol
cmp
xor
mov
xor
mov
movb
add
push
pushl
pusha
mov
push
push
mov
lea
jmp
add
lea
jno
push
sub
lea
jae
push
pushf
pushf
mov
pushf
lea
jmp
not
pushf
pushf
jmp
call
xor
pushf
mov
sub
mov
test
cwtl
mov
mov
bt
sub
push
pushl
call
push
sub
bt
cmp
pushf
stc
shr
call
mov
jmp
push
mov
mov
pushf
pusha
pushf
lea
jmp
pushf
popl
push
movw
call
seta
inc
xadd
mov
shl
mov
bt
push
sub
pusha
jmp
call
ror
push
sub
push
pushf
push
call
movl
push
mov
lea
jmp
mov
call
pushf
pushl
mov
call
pushf
movb
mov
push
mov
movb
lea
jmp
bt
movsbw
mov
or
sub
btc
inc
sub
movsbl
not
call
stc
stc
bswap
cmc
sub
bt
cmp
stc
add
mov
cmp
sub
push
mov
pushf
pushf
lea
jmp
add
mov
pusha
jmp
pushf
movl
push
movw
lea
jmp
mov
pushf
push
mov
movb
lea
jmp
mov
push
pushf
lea
jmp
push
pushf
push
repz
popl
pushf
movw
pushf
movw
mov
jmp
xchg
bswap
mov
movzbl
inc
btr
btc
btr
call
mov
jmp
mov
call
push
movw
mov
jmp
lea
mov
bswap
pop
xchg
not
not
mov
lea
push
lea
mov
mov
lea
xchg
not
jmp
adc
daa
xor
neg
mov
bsr
pusha
neg
bsf
mov
pusha
pushl
bt
jmp
push
movl
pushl
lea
jmp
pusha
pushf
add
call
call
push
pushl
pusha
repz
popl
pusha
mov
call
push
pushl
popl
call
clc
add
pusha
push
lea
jmp
bt
test
pushf
pusha
add
pushl
call
pushl
popl
push
pushf
pushf
pushf
lea
jmp
mov
pushf
movw
pushf
push
mov
call
call
mov
push
movb
pushl
popl
pushl
call
lea
jne
jmp
jmp
pushf
mov
pusha
lea
jmp
test
stc
stc
add
pusha
pushl
xor
pushf
cmc
neg
push
pushf
call
pusha
call
dec
cmc
push
cmc
cmc
ror
movl
dec
mov
jmp
pushf
push
mov
call
clc
cmp
pushl
cmp
add
bt
bt
stc
push
pushl
popf
push
movb
mov
pusha
lea
jmp
pushl
mov
mov
lea
jmp
pushl
dec
jmp
clc
xchg
call
mov
call
jmp
mov
pop
mov
sub
aad
aaa
mov
xor
mov
movsbw
bsf
mov
lea
mov
clc
shl
shl
push
mov
pushf
cmc
bt
mov
pushl
popf
pushl
movb
pushf
push
pushl
ret
stc
lahf
call
mov
mov
pushl
jmp
sbb
mov
call
movl
pushl
mov
movb
lea
jmp
pushf
pushf
repz
popl
call
mov
jmp
shr
rcl
pushf
cmp
mov
mov
xor
pusha
dec
setns
movsbw
inc
xor
xor
rol
sbb
not
bts
bt
rcl
xor
call
call
call
jmp
push
jmp
pushl
popl
jmp
pushf
pushl
popl
push
push
movb
lea
jmp
pushf
push
mov
movb
mov
movw
mov
jmp
push
pusha
repz
popl
pusha
mov
push
mov
mov
pushf
push
jmp
push
mov
push
pushl
sub
lea
jae
pusha
pushf
pushf
not
movw
call
lea
stc
sar
sar
mov
dec
rcl
shr
btc
mov
clc
bt
bt
add
jmp
roll
add
inc
add
inc
add
sub
add
inc
add
inc
inc
add
inc
add
inc
add
sub
popf
cmp
add
inc
add
xor
cmpl
inc
add
sub
add
inc
add
cmp
test
cmp
push
cs
add
es
add
sub
je
inc
add
cmp
enter
enter
enter
bound
inc
add
sub
es
add
add
xor
inc
inc
add
inc
add
sub
xchg
inc
inc
add
sub
fdivrl
inc
add
inc
add
xor
hlt
sub
adc
dec
inc
add
inc
add
inc
add
and
inc
add
xor
lods
cmp
aad
inc
add
inc
add
push
inc
add
sub
inc
add
dec
inc
add
inc
inc
add
inc
add
dec
inc
add
push
inc
add
cmp
add
inc
add
sub
dec
xor
add
es
add
sub
xor
sub
add
cmp
test
cmp
popf
cmp
add
dec
inc
add
inc
add
cmp
enter
enter
enter
dec
cmp
cmpl
inc
add
inc
add
cmp
xor
add
das
inc
add
dec
inc
add
cmp
inc
add
inc
add
xor
je
inc
add
cmp
inc
add
sub
js
inc
add
sub
add
and
inc
add
dec
inc
add
sub
inc
add
sub
push
xor
cmp
inc
add
push
inc
add
das
inc
add
inc
add
inc
add
dec
inc
add
and
inc
add
inc
add
push
inc
add
inc
add
xor
mov
inc
inc
add
inc
add
inc
inc
add
xor
dec
xor
add
dec
inc
add
cmp
test
cmp
push
inc
inc
add
das
inc
add
dec
inc
add
cmp
enter
enter
enter
sub
dec
xor
add
inc
add
inc
add
inc
inc
add
das
inc
add
das
inc
add
inc
add
xor
js
inc
add
das
inc
add
inc
inc
add
inc
add
sub
inc
add
inc
add
inc
add
and
inc
add
xor
add
cmp
dec
xor
add
inc
add
inc
add
inc
inc
add
inc
add
dec
inc
add
inc
inc
add
sub
add
inc
inc
add
dec
inc
add
inc
add
inc
add
inc
inc
add
cmp
inc
add
inc
add
inc
inc
add
inc
add
inc
inc
add
cmp
test
cmp
dec
inc
add
xor
jae
inc
add
cmp
enter
enter
enter
inc
dec
inc
add
sub
inc
add
xor
xor
add
dec
inc
add
push
inc
add
inc
add
inc
add
es
add
inc
add
inc
add
inc
add
es
add
inc
inc
add
inc
add
inc
inc
add
add
inc
add
inc
add
inc
add
das
inc
add
sub
add
inc
add
add
sub
add
inc
add
daa
inc
add
inc
add
xor
cwtl
mov
pushf
pushf
pushf
push
mov
pusha
mov
push
mov
mov
lea
jmp
mov
push
push
mov
jmp
mov
call
mov
call
pushl
jmp
pushf
push
mov
movb
movb
mov
call
movb
movb
mov
call
add
rol
shl
movzbl
call
movw
push
mov
pusha
call
mov
pushf
movb
movb
call
mov
pushf
push
pushf
mov
mov
push
pusha
lea
jnp
push
mov
pushf
lea
jle
jne
shrd
mov
call
pushl
popl
pushf
movb
push
movl
lea
jmp
call
bt
cmp
push
lea
jne
shl
sar
clc
push
xorb
lea
movsbw
not
lea
pop
push
pusha
mov
lea
jmp
pushf
mov
pushf
call
call
pushf
mov
call
mov
push
mov
pushl
push
jmp
jmp
jmp
mov
call
jmp
cmp
sbb
aad
mov
call
jmp
push
jmp
jmp
test
pushf
sub
jmp
pushl
popl
call
mov
lea
jne
pusha
pusha
pushf
mov
lea
jp
push
pushf
pushf
mov
pushf
mov
mov
pusha
call
pushl
pusha
call
rol
rol
bts
movzbl
add
shrd
btc
cmp
not
movsbl
xor
lea
jmp
movl
mov
movb
call
rep
stc
mov
ror
push
inc
mov
clc
pushl
popf
pushf
lea
jmp
mov
pushf
pushl
push
mov
push
call
mov
movb
mov
pusha
mov
jmp
mov
mov
pushf
pusha
lea
jmp
call
adc
cmp
mov
bt
pushf
stc
clc
add
pushf
pusha
mov
push
movb
pushl
pushl
lea
jmp
push
mov
pushf
jmp
bt
movzbl
mov
movsbw
rol
clc
test
shrd
rcl
add
shl
not
setnp
and
rol
cmc
shld
rol
mov
push
sub
pusha
mov
push
lea
jmp
xor
movb
mov
call
pushf
pushf
popl
push
pushl
popl
pusha
push
pushf
lea
jmp
pusha
jmp
lea
jne
pusha
pushf
pushl
popl
jmp
pusha
pushf
push
repz
popl
pushf
call
bswap
push
pushf
add
mov
call
mov
pushl
call
aas
sbb
cwtl
shrd
mov
inc
or
mov
shl
neg
shr
mov
cmp
pushf
add
call
jmp
call
movw
mov
pushf
jmp
xchg
cmc
stc
xor
pushf
pushl
test
test
add
bt
cmp
clc
mov
sub
pushl
mov
call
jmp
push
jmp
cmc
and
movb
pusha
pusha
movb
mov
pushl
pushf
popl
jmp
pushf
mov
mov
lea
jmp
pushf
pusha
pushf
mov
jmp
jmp
mov
pushl
call
xchg
cmp
cmp
xor
clc
cmp
call
call
pushf
mov
call
pusha
lea
jnp
jne
clc
mov
call
dec
rcl
push
mov
cmp
sub
jmp
movl
push
movb
push
mov
lea
jmp
movsbw
lea
mov
call
repz
popl
pusha
movb
pushf
call
pushf
call
rcr
shl
movzbl
movzbw
shl
bt
add
clc
shr
dec
xor
neg
lea
xor
rcl
or
rcr
neg
jb
mov
inc
adc
adc
setge
add
jo
cmc
mov
jle
add
pushf
jmp
movl
pushf
mov
pushf
lea
jmp
pusha
pushf
mov
pushf
mov
pushf
mov
jmp
pushl
push
movl
call
pushf
call
movw
call
pushl
popl
jmp
and
adc
jmp
jmp
pushf
push
pushl
popl
movb
mov
lea
jmp
movb
mov
pushf
popl
pusha
push
pushf
pushl
popl
mov
movb
mov
mov
lea
jmp
pushf
mov
pusha
lea
jmp
divl
call
pushl
cmp
movb
push
pushf
pushf
lea
jne
sar
adc
bt
xorb
not
pop
push
push
pusha
mov
lea
jmp
push
mov
pusha
mov
pushf
popl
push
lea
jae
push
pushl
popl
movb
pusha
push
lea
jmp
clc
sub
pushf
mov
mov
mov
lea
jmp
pushf
btr
mov
cmp
mov
test
bt
sub
call
pusha
pushl
call
mov
call
call
push
pusha
repz
popl
pushl
pusha
lea
je
push
push
call
pusha
cld
push
call
push
movw
mov
pushf
jmp
lea
jne
pusha
pusha
mov
push
mov
push
lea
jmp
jmp
lea
mov
pushf
not
stc
xor
cmc
jmp
mov
call
push
pushl
movb
mov
jmp
sub
pusha
lea
jne
jmp
pushf
pushl
call
jmp
not
movzbl
jmp
push
pusha
movb
push
mov
push
pushf
movb
lea
jmp
pushl
jmp
call
cmp
mov
stc
pushf
mov
mov
stc
stc
jmp
pushl
push
lea
ja
aad
movsbw
mov
btr
rcl
shrd
sub
lea
sub
sub
neg
btr
lea
btr
bt
bt
shl
and
sar
rol
ror
sub
lea
pusha
mov
movzbw
bswap
pushf
cld
push
std
lea
mov
call
sar
mov
cmp
cmc
mov
mov
pusha
bt
sub
pushf
pusha
stc
call
mov
cmp
sub
pushf
mov
bt
add
pusha
pushf
popl
call
jmp
pushf
dec
pushf
call
mov
movb
jmp
call
jmp
push
pushf
mov
jmp
mov
call
call
pushl
movl
push
lea
jmp
pushf
pushl
popl
pushf
lea
jmp
pushf
popl
push
jmp
pushl
movb
lea
jmp
call
call
movb
pushl
popl
pushf
push
movl
push
push
mov
lea
jmp
pushf
movl
push
pushf
pushf
mov
lea
jmp
xor
ror
and
mov
ror
mov
pusha
clc
add
call
and
call
pushf
pusha
jmp
mov
shr
pushf
mov
pusha
push
mov
pushf
pushl
pushf
popl
jmp
movb
mov
push
lea
jmp
movl
pushf
lea
jmp
mov
pusha
pushf
pushf
movb
lea
jmp
push
inc
ror
bswap
rol
cmc
add
ror
push
jmp
test
add
call
call
pushl
popl
jmp
mov
pushl
pusha
pushf
lea
jmp
mov
movb
pushf
jmp
movb
pushf
popl
mov
pushl
popl
movw
mov
mov
mov
lea
jmp
mov
xchg
call
push
jmp
xchg
jmp
call
mov
aam
mov
pusha
jmp
push
mov
pushf
mov
jmp
movw
push
movl
push
lea
jmp
mov
movb
call
jmp
cmc
cmc
jmp
jmp
inc
mov
movzbl
xor
setno
inc
inc
rcl
not
movb
shl
add
bts
xor
btr
xor
jmp
bsr
cmc
cwtl
mov
pusha
sub
pushf
mov
pusha
pushf
lea
jmp
decl
mov
lea
jne
jmp
pusha
pushl
pushl
repz
popl
push
pushf
pushf
jmp
pusha
pushf
repz
popl
jmp
push
movl
pusha
push
pushf
push
lea
jmp
call
not
mov
bswap
push
sets
call
movl
jmp
mov
pushf
pushf
lea
jmp
mov
pusha
push
pusha
pushl
mov
mov
mov
movb
push
mov
pushf
jmp
jmp
add
mov
jmp
mov
mov
pushf
pushf
push
mov
pushf
push
push
pushl
mov
call
lea
jns
push
call
pushf
popl
jmp
shl
mov
stc
stc
clc
mov
bt
call
jmp
mov
call
movl
pusha
mov
pushf
lea
jmp
mov
call
push
mov
pusha
inc
push
mov
neg
stc
pushf
jmp
mov
call
shld
test
lea
cmc
cmp
mov
jmp
clc
stc
call
ror
setae
shl
shl
mov
cmp
jmp
pusha
push
pushl
popl
pushf
lea
jmp
and
mov
ror
add
add
bsf
sub
add
shld
mov
cmp
shl
cmc
shr
cmc
stc
clc
cmp
or
test
cmp
xor
pushf
inc
lea
jbe
push
decl
pushf
push
call
mov
mov
call
stc
clc
sub
push
mov
pushf
pushf
lea
jmp
adc
xor
neg
mov
cmc
jmp
dec
ror
rcl
ror
add
sub
cmc
dec
cmc
bsr
lea
shrd
movzbw
movzbl
jmp
movl
pushf
lea
jmp
cmc
mov
sbb
push
movzbw
mov
pusha
pushf
cmp
add
mov
pushf
mov
pushl
push
push
pushf
lea
jmp
call
pusha
pusha
pushl
popl
push
pushf
pushl
lea
jmp
jmp
mov
jmp
mov
mov
pushf
mov
call
pusha
bt
test
shld
movb
mov
call
pushl
jmp
call
mov
pushl
pushf
pushf
pushf
lea
jmp
mov
pushf
jmp
pushl
popl
pushf
pushf
lea
jmp
call
mov
pushl
lea
jmp
bswap
jmp
pushf
movl
pusha
mov
lea
jmp
mov
pusha
push
pushl
pushl
lea
jmp
mov
call
pushf
pushl
popl
pushl
jmp
mov
push
movb
lea
jmp
pushf
movb
repz
popl
call
jmp
pusha
mov
push
pusha
lea
jmp
pushf
pushf
jmp
pushf
movzww
cmp
xchg
call
not
not
movzbw
mov
pusha
lea
jo
mov
jg
pushf
pushl
push
mov
pusha
pushl
mov
pushf
lea
jmp
mov
push
push
lea
jmp
call
mov
push
push
mov
movw
call
push
mov
pushl
pushl
movl
mov
lea
jmp
pushl
popl
jmp
jmp
call
pushf
jmp
jmp
call
movb
mov
call
pusha
push
call
push
pushf
jmp
push
call
call
add
pushf
mov
pushf
movb
jmp
jmp
sub
inc
jmp
add
push
pusha
sets
push
mov
pushf
movl
movb
mov
movb
pushf
lea
jmp
mov
pushl
popl
movb
push
movl
mov
lea
jmp
lea
jo
add
cmc
add
call
jmp
pushl
call
bt
mov
cbtw
bt
cwtl
movw
test
bt
jmp
inc
shl
rol
dec
rdtsc
jmp
mov
bswap
movzbl
seta
movb
bswap
inc
mov
push
inc
lea
jns
lea
jle
push
pusha
pusha
pushf
pushl
ret
lea
jg
push
call
pushf
movb
lea
je
pusha
xor
cmp
clc
xchg
cmp
clc
cmc
mov
push
cmp
clc
call
movw
mov
mov
jmp
clc
add
pushf
pushl
mov
mov
jmp
sub
push
lea
jne
mov
jmp
mov
pushl
xor
call
pushl
pushl
popl
pushf
push
lea
jmp
movsbl
movsbl
mov
call
cmp
add
pushf
cmc
shrd
mov
push
call
pushf
mov
push
mov
mov
mov
push
jmp
pusha
inc
cmp
pushf
clc
neg
jmp
mov
pushl
movw
mov
movw
movl
pushl
push
mov
push
jmp
add
call
call
not
test
cmp
clc
cmc
not
push
cmp
push
and
movl
movb
mov
push
pushl
call
mov
dec
push
push
mov
cmc
ror
pushf
pushf
push
call
pushf
repz
popl
movw
pushf
mov
movw
mov
pushf
call
mov
mov
movb
pushl
call
jmp
call
push
pushf
mov
movb
pushf
pushl
popl
mov
pushf
movl
pusha
pushl
movl
movb
lea
jmp
push
push
pushf
pusha
jmp
jmp
call
push
push
mov
call
mov
push
mov
mov
call
mov
mov
push
call
call
repz
popl
pushl
pushl
movw
mov
push
push
pushf
mov
pushf
mov
push
push
pusha
mov
pushl
pushl
mov
mov
mov
push
pushl
pushf
mov
push
movb
jmp
cmp
sub
test
cbtw
cmc
cwtl
pushf
call
jmp
repz
popl
jmp
cmc
sub
push
jmp
inc
cmp
movb
jmp
mov
pushf
pusha
movb
jmp
add
jmp
push
mov
call
pushf
popl
movb
pushf
pushf
call
jmp
pushl
popl
jmp
mov
jmp
xor
pusha
inc
call
mov
mov
call
mov
movw
movl
pushf
pushf
pushf
lea
jmp
pusha
mov
jmp
pusha
call
call
jmp
stc
mov
pusha
pushf
or
call
call
call
pushl
mov
push
pushf
jmp
pushf
mov
movb
push
pushf
pusha
lea
jne
stc
shld
mov
cmc
cmc
test
jmp
jmp
bsr
mov
dec
add
cmc
sar
add
push
mov
mov
mov
movb
pusha
lea
jmp
add
xadd
adc
clc
mov
rcr
mov
mov
stc
sub
push
call
not
btc
mov
btc
stc
shl
mov
jmp
pusha
movb
lea
jne
movzbl
inc
movsbw
mov
push
and
test
clc
cmc
cmp
jmp
repz
push
jmp
mov
pushl
popl
jmp
mov
call
jmp
pushf
mov
call
jmp
call
aam
or
notl
rol
das
bswap
dec
mov
clc
pusha
sub
pushl
and
pusha
push
pushf
jmp
pushf
pushf
mov
pushl
pushf
pushl
ret
pushf
pushf
mov
movb
movb
jmp
push
pushl
popl
jmp
pushl
popl
call
mov
lea
jl
pushf
mov
push
mov
pushf
pushf
call
call
call
push
pusha
movl
repz
popl
push
push
mov
movb
pushl
pushf
pushf
mov
jmp
jmp
mov
mov
mov
pushl
push
pushl
mov
pushf
pushf
mov
pushf
push
pushf
pushl
popl
jmp
pushl
lea
jb
push
jmp
jmp
pusha
mov
push
pushl
ret
push
mov
mov
pushf
pushf
jmp
mov
push
mov
movb
jmp
mov
movb
pushl
popl
mov
pushf
pushf
movl
push
movb
movw
movb
lea
jmp
mov
movl
call
pushl
pushf
lea
jne
shr
bsr
ror
xorb
lea
pop
push
push
lea
jmp
mov
push
mov
lea
jmp
movb
pushl
popl
pushf
call
mov
mov
pushf
movl
pusha
lea
jmp
mov
movb
mov
mov
pushf
call
push
movl
push
mov
pushf
mov
lea
jmp
lea
jne
rcr
xorb
pusha
mov
mov
push
mov
pushf
pushf
lea
jmp
bsr
bswap
std
aaa
mov
xadd
jmp
movl
push
movb
movw
lea
jmp
movw
jmp
add
add
add
add
sbb
add
push
inc
add
add
add
cmp
add
inc
add
cmp
add
add
stos
inc
add
fadds
add
inc
add
sub
add
add
mov
add
inc
add
or
add
cmp
add
test
add
add
add
push
fldl
add
add
nop
loopne
add
sbb
add
sbb
add
add
inc
sbb
