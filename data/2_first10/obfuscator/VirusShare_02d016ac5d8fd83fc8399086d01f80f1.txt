push
in
mov
in
dec
add
lea
popf
outsb
xchg
lods
packssdw
je
imul
push
pop
nop
es
mov
xchg
pop
loope
in
leave
test
push
jnp
in
inc
mov
mov
cmp
jne
into
pusha
inc
aad
pop
adc
nop
adc
out
push
mov
sbb
jle
test
mov
out
xchg
nop
or
scas
daa
call
mov
jmp
inc
fstpt
outsb
push
sbb
fldenv
out
repz
mov
enter
push
dec
shll
mov
sbb
and
loope
xor
and
mov
sbb
adc
cmp
lcall
mov
jbe
and
es
push
pop
vsubsd
sbb
cld
mov
cmp
mov
in
mov
icebp
stos
iret
lods
xchg
xor
bsf
bswap
shl
push
bt
jmp
fisubrl
add
shlb
ret
leave
and
out
and
test
and
repz
add
into
and
jge
and
push
repnz
dec
lods
and
inc
mov
and
imul
add
ret
cmc
mov
add
add
orb
add
add
add
or
add
adc
add
add
add
mov
frstor
mov
sbb
test
and
test
and
cmp
and
sbb
xchg
and
test
sbb
movsb
mov
and
or
add
out
add
and
mov
repz
xor
and
cmp
and
adc
sbb
pop
and
push
fsubs
rol
add
lcall
add
and
repz
fxtract
sbb
mov
mov
and
jb
and
leave
fisubs
lret
add
and
ror
and
ret
fsubl
mov
sbb
mov
lds
add
and
jg
and
lods
hlt
and
cmpsl
and
sub
and
jge
and
jo
sbb
lock
add
add
in
sbb
lret
and
fmuls
sbb
cmp
iret
and
xor
and
and
mov
sbb
jle
sbb
jae
and
add
add
and
cmpsb
shlb
push
hlt
sbb
and
shll
div
sbb
loopne
and
div
sbb
mov
into
and
cli
repz
ja
and
fs
add
nop
and
cmp
sbb
sbb
and
ja
and
aas
ret
xchg
out
mov
add
lds
add
leave
and
data16
mov
and
xchg
frstor
adc
and
test
and
dec
icebp
sbb
scas
ret
and
xchg
mov
and
xchg
icebp
sbb
std
iret
and
mov
icebp
and
mov
xchg
and
jnp
and
aas
and
mov
mov
sbb
push
out
and
and
or
sbb
jmp
into
and
xchg
shlb
das
lds
add
into
and
push
and
adc
and
inc
mov
and
ret
add
shlb
dec
mov
and
scas
lock
xchg
mov
add
into
and
ljmp
add
and
jg
and
jp
and
xchg
leave
and
mov
mov
add
and
add
and
repz
jg
and
stc
out
sbb
repnz
and
nop
mov
add
sbb
jp
and
add
add
out
int3
and
js
and
stc
jmp
add
and
mov
lret
enter
jns
and
cmp
and
iret
ret
ror
and
cli
lds
add
sbb
shl
sbb
cli
lods
and
cmc
mov
add
add
mov
add
in
sbb
push
ljmp
cltd
hlt
and
dec
ret
and
sub
aam
add
in
sbb
call
and
sub
and
insl
mov
and
outsb
hlt
sbb
data16
and
aas
mov
add
icebp
and
or
sbb
ret
add
xchg
and
scas
mov
and
dec
leave
and
xor
shll
rol
add
mov
add
out
sbb
mov
jmp
add
mov
add
and
mov
and
adc
sbb
in
iret
and
xchg
out
add
and
leave
lods
and
int
sbb
mov
call
sbb
add
and
add
sbb
cmpsl
hlt
sbb
icebp
leave
and
mov
jmp
add
shlb
aas
repnz
sub
pop
int3
and
ljmp
add
sbb
xchg
jmp
add
lock
dec
call
and
cltd
aam
add
and
adc
and
mov
sbb
sbb
and
out
and
jg
sbb
jb
and
sbb
sbb
std
movsb
and
xor
and
xchg
mov
add
lea
add
repnz
or
and
adc
and
mov
lret
int
and
push
and
aam
and
xor
and
enter
test
sbb
fstpt
and
sahf
xchg
and
adc
ret
add
and
fdiv
sbb
dec
les
add
and
ja
and
out
and
xchg
into
and
cmp
and
popa
shll
mov
sbb
sarl
add
and
cmpsb
repz
daa
lea
add
and
in
lock
out
and
xchg
and
jnp
and
std
lock
mov
cmc
sbb
adc
sbb
inc
and
jno
and
push
mov
and
mov
out
and
lea
and
fisubl
and
push
lock
mov
add
add
ret
and
iret
and
ja
and
jle
and
push
lea
add
ret
and
inc
into
and
jns
and
aad
and
jg
and
into
mov
and
or
sbb
imul
and
or
xchg
and
jge
sbb
inc
shll
fs
and
adc
and
xor
add
sbb
mov
sbb
sarb
add
lods
and
mov
lock
ljmp
add
icebp
and
lods
into
and
dec
and
dec
sahf
and
xor
and
cs
and
mov
and
jns
and
aaa
mov
and
pusha
mov
and
xor
sbb
sub
and
ret
mov
sbb
mov
and
cmpl
add
into
and
into
and
sbb
and
jle
and
jge
and
xchg
iret
and
xchg
and
ret
add
and
div
and
inc
ret
fwait
ret
std
shll
cmpsb
icebp
and
pop
xchg
and
daa
and
add
lods
and
lods
xchg
and
mov
and
daa
cmc
sbb
jle
and
sub
and
add
add
aad
add
shll
cmp
add
cmpsl
mov
add
lret
and
data16
sbb
fstl
and
add
add
ljmp
add
add
add
lds
add
and
sbb
lea
add
ret
and
mov
add
add
add
cmpb
add
mov
add
orb
add
or
add
adc
add
add
add
pop
cmc
sbb
dec
int3
and
push
fisubs
cmpsb
add
add
adc
add
add
and
or
sbb
mov
add
and
dec
icebp
sbb
add
add
sub
add
mov
bsr
bsr
pushf
mov
rcl
cmc
cmc
or
mov
push
repnz
call
add
dec
outsl
popa
fs
insl
popa
addr16
add
add
data16
popa
je
push
arpl
adc
pushl
push
pusha
lea
jae
call
add
inc
gs
je
arpl
bound
arpl
add
je
inc
add
fs
jne
shld
mov
bt
cmp
pushf
push
push
jmp
lea
ja
sbb
sbb
dec
sub
cmc
and
add
sar
mov
mov
pushf
rcr
sar
mov
cmp
repnz
pusha
lea
jne
jmp
clc
cmp
bt
cmp
and
stc
cmp
add
pushf
pushl
pusha
pushf
lea
jmp
call
dec
stc
movb
pushf
pushf
xor
bt
ror
movb
call
mov
jmp
push
pop
pop
loopne
pop
mov
sub
add
sti
jns
jecxz
rol
movl
cmp
fdiv
push
in
idiv
xor
mov
outsl
mov
popf
sub
cmp
popf
into
add
frstor
stc
xor
hlt
jne
mov
mov
mull
or
inc
cmp
dec
cli
xchg
mov
jmp
inc
idiv
pop
or
pop
fisttps
push
in
add
sbb
cmpb
xor
sub
pop
pop
mov
lea
jae
btc
shld
jmp
lea
jae
jmp
add
inc
gs
gs
outsl
popa
jb
dec
popa
jns
jne
add
xor
xor
fs
insb
add
pop
add
add
jb
je
push
call
movzbl
call
add
push
dec
inc
gs
jo
arpl
insb
inc
outsl
insb
fs
popa
je
inc
add
add
je
gs
popa
addr16
add
add
je
imul
pushf
pushf
mov
pushf
mov
mov
pusha
pushl
ret
mov
clc
add
and
mov
pusha
stc
add
xor
movl
add
mov
cmp
sub
jle
pusha
bt
cmp
call
push
ror
and
mov
cmc
stc
pushf
cmpb
push
call
add
push
gs
imul
outsb
addr16
add
xchg
cmc
or
inc
bt
bswap
sub
bsr
mov
dec
btr
shrd
mov
bts
add
movzbw
movsbw
shr
shr
rol
not
mov
bt
add
jmp
add
inc
imul
mov
cmp
jmp
cmpb
pushf
pushf
lea
jne
push
btc
shr
sbb
mov
cmp
jmp
add
inc
outsb
popa
bound
imul
add
add
shrb
dec
add
add
and
sbb
add
add
add
add
add
add
or
sbb
push
in
sbb
or
sbb
jae
or
add
adc
sbb
aas
aas
xor
aas
test
aas
test
add
dec
xor
fidivrl
cs
insb
add
add
bnd
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
xchg
add
pushf
call
add
push
gs
jne
jb
push
popa
insb
jne
inc
add
add
jne
inc
imul
gs
imul
add
je
inc
dec
inc
push
add
decl
and
xor
push
add
movl
clc
jmp
add
insb
jae
jb
insl
jo
add
cmp
or
add
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
mov
pushl
lea
jne
pushf
pusha
jmp
bt
sub
bt
cmp
pushf
mov
movb
lea
jae
push
lea
jmp
lea
ret
add
bt
clc
bt
cmp
pusha
pusha
movw
jmp
pushf
mov
pushf
push
pushf
movb
mov
call
lea
mov
movw
pushf
movl
call
add
inc
jne
insb
imul
outsb
fs
gs
cmp
adc
pop
mov
push
frstor
in
jge
nop
xchg
ret
pop
rcrb
jb
retw
ljmp
mov
adc
je
scas
dec
xchg
mov
ficompl
push
fmulp
xlat
or
lock
lea
outsl
inc
pushf
xchg
cwtl
cmp
xchg
pop
sbb
dec
lds
inc
test
add
stc
leave
ret
jae
outsl
popf
xchg
out
mov
rcll
xchg
sub
test
lock
mov
mov
out
mov
das
push
outsl
aas
mov
push
lret
mov
mov
test
jbe
orl
lret
aas
js
ret
xchg
lods
sbb
sub
ja
or
fwait
sub
push
add
out
sbb
roll
addr16
mov
xchg
inc
rolb
in
fcompl
mov
lock
adc
loopne
loopne
scas
adc
cs
push
mov
xor
pop
loopne
xchg
mov
and
inc
fimull
shrl
xor
ret
mov
arpl
cmpsl
pop
shr
mov
inc
pop
cmp
add
jmp
adc
ja
adc
dec
mov
stos
xchg
or
jg
ja
out
testl
in
popf
or
add
je
outsl
jo
imul
add
je
gs
popa
addr16
outsl
jae
mov
call
cmp
pop
sbb
hlt
push
sbb
adc
das
stc
int
jno
pushf
push
mov
jns
in
xlat
xor
jbe
dec
call
xor
daa
jmp
xor
push
sbb
shl
lods
rol
jb
loopne
jl
mov
jecxz
dec
ljmp
aaa
loope
push
popf
dec
ja
out
sbb
data16
or
xchg
push
pop
repnz
jp
jo
sub
int
dec
bound
ret
adc
es
mov
cmp
add
cmpb
mov
daa
add
fildl
popa
xor
enter
add
inc
insb
outsl
bound
inc
imul
inc
add
add
je
jb
outsl
arpl
fs
js
push
add
add
je
je
dec
popa
outsb
fs
add
add
je
imul
add
stc
pushf
cmc
pusha
neg
jmp
add
push
gs
arpl
enter
push
bt
jmp
add
push
outsb
jb
imul
popa
jae
inc
add
data16
add
xor
lea
jne
stc
neg
shr
mov
bt
cmp
add
clc
pusha
stc
movzwl
pushf
lea
mov
pushf
stc
add
call
add
inc
gs
push
dec
outsb
outsw
add
add
outsb
fs
insb
outsl
jae
add
je
sbb
je
or
sbbl
cld
add
loop
jmp
add
push
popa
bound
fs
gs
dec
jne
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
je
outsb
jne
je
insl
inc
outsl
jne
je
add
push
popa
je
push
outsl
push
imul
out
add
add
je
insb
popa
jae
dec
outsb
outsw
inc
add
add
je
arpl
gs
imul
outsl
mov
inc
js
je
jb
arpl
jae
pushf
lea
call
pusha
call
cmc
push
clc
setb
mov
cmc
bts
and
neg
mov
or
bsf
rcr
clc
mov
pusha
stc
clc
or
jmp
add
dec
outsb
imul
inc
jb
je
arpl
push
arpl
outsb
add
sbb
inc
gs
jns
je
insl
dec
gs
imul
cmc
pushw
popfw
push
call
lea
ja
mov
not
inc
mov
call
add
inc
gs
jne
jb
outsb
je
jb
arpl
jae
add
dec
outsl
popa
fs
imul
add
sbbl
add
cli
or
push
cmp
pop
xor
setns
mov
call
add
inc
gs
imul
outsb
addr16
add
add
imul
jb
jo
jb
dec
gs
fs
mov
movsbw
mov
jmp
pusha
jmp
add
inc
gs
outsl
arpl
add
add
gs
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
add
add
add
dec
jae
popa
fs
gs
fs
je
add
add
popa
jb
push
popa
add
add
outsb
fs
gs
popa
addr16
add
add
outsb
outsl
ja
jb
insl
push
outsl
imul
and
je
pushf
movb
cmp
pushl
or
jmp
add
inc
gs
jb
jns
arpl
add
xor
add
je
imul
dec
dec
dec
cs
insb
add
insl
fs
xor
cs
insb
add
add
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
sets
xor
pushl
inc
pushl
dec
add
xor
pushf
ror
jmp
add
push
imul
insb
insb
outsl
arpl
cmp
pusha
mov
lea
ja
bt
imul
clc
add
push
lea
jmp
add
inc
gs
jae
jb
gs
jne
je
inc
dec
inc
add
mov
jmp
movb
call
lea
je
cmp
stc
push
test
or
mov
lea
je
sub
shrd
mov
bsf
sub
shld
mov
inc
mov
cmc
rol
shr
btc
bsf
shl
ror
mov
stc
or
call
xor
call
pusha
pushf
movb
inc
lea
call
jns
add
push
lea
jmp
add
dec
outsb
je
jb
outsl
arpl
fs
arpl
insl
outsb
je
add
inc
outsl
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
not
pusha
pusha
lods
test
bt
xor
push
jmp
add
push
je
outsb
push
arpl
add
je
popa
jae
inc
arpl
gs
outsl
jo
jo
add
dec
popa
jo
imul
imul
inc
gs
je
jb
jne
dec
outsb
outsw
inc
add
fs
call
cmp
jns
clc
sub
call
add
push
gs
arpl
imul
add
je
arpl
insb
insb
push
outsl
jae
add
push
gs
je
gs
push
outsl
fs
les
fildl
push
add
add
je
imul
addr16
js
add
inc
gs
popa
jbe
inc
imul
add
add
push
add
add
inc
jb
add
add
je
jns
je
insl
dec
outsb
outsw
add
add
imul
pushl
dec
push
clc
push
xor
stc
ror
jmp
add
inc
gs
outsb
jne
add
push
popa
insb
imul
je
lea
jne
rcl
shld
setg
sub
inc
mov
and
cmp
rcl
add
setb
inc
cmc
mov
clc
pusha
test
jmp
add
inc
gs
imul
imul
jns
add
movsb
jmp
call
add
inc
insb
jne
push
inc
jne
data16
add
aas
popf
pop
add
pop
in
roll
jbe
sahf
movb
out
dec
jmp
je
push
sbb
fisubrs
sub
les
fs
sub
mov
shr
jp
jg
stos
cmpsb
mov
nop
mov
mov
fidivs
or
push
or
mov
movsl
out
dec
mov
mov
mov
int
ficoml
outsb
aad
cmp
icebp
cmp
mov
add
je
outsl
jb
addr16
jne
fs
imul
add
je
popa
jae
inc
jb
outsl
jb
add
push
gs
arpl
insb
insb
push
popa
outsb
add
aaa
mov
mov
cmp
xor
mov
or
add
insl
imul
gs
jb
dec
gs
fs
add
inc
outsb
fs
outsl
arpl
add
push
imul
jb
add
pop
repnz
decb
es
or
push
roll
mov
ja
pusha
call
inc
pop
out
rcll
aad
jg
pop
mov
repz
fdivs
mov
sbb
pop
xchg
ljmp
jp
and
mov
ffree
movsb
es
inc
or
push
add
in
fidivl
repnz
jo
outsb
cltd
mov
lods
xor
in
inc
mov
sbb
in
sbb
lea
out
add
lock
jnp
inc
sti
xchg
and
adc
mov
int
aas
stc
loopne
jg
lret
imul
out
fsts
push
add
and
cmp
pop
mov
xchg
daa
sub
movsl
std
dec
push
inc
lds
push
xchg
push
cltd
inc
jne
mov
adc
xchg
sub
xchg
xor
push
mov
jmp
push
push
inc
push
xor
cs
insb
add
push
sub
add
subl
xchg
fmull
add
insb
or
and
stos
sbb
jne
and
jg
cwtl
sub
cli
jbe
pop
pusha
scas
jmp
mov
fldpi
scas
mov
xchg
jmp
out
pushf
out
sahf
test
fwait
xchg
adc
jl,pt
or
jb
mov
dec
sub
int3
cs
repz
int3
xchg
stos
adc
popf
aam
rcrb
add
adc
testl
scas
in
sub
adc
jns
push
lcall
cmc
lea
fwait
mov
lahf
and
sbb
les
insb
scas
push
push
adc
pop
pop
into
sbb
or
test
adc
fisubl
sbb
rcll
lock
clc
jl
in
inc
cli
addr16
adc
sbb
jo
outsl
inc
sti
sbb
adc
in
sbb
push
dec
stos
adc
mov
cmp
pusha
cmc
jnp,pn
inc
mov
pop
and
cld
test
cltd
mov
hlt
ret
rol
ds
mov
add
dec
mov
fs
movsb
loopne
in
outsl
inc
loopne
les
jmp
sbb
mov
ror
cltd
clc
sbb
dec
imul
cmp
loop
loopne
push
call
in
jl
adc
lods
sbb
loopne
push
push
iret
in
adc
adc
sub
pop
jge
lea
sbb
cld
fdivl
dec
adc
push
cmpsb
je
jle
push
popf
ficoms
imul
jns
jg
iret
stc
jl
dec
sbb
faddl
int3
pop
mov
jns
in
lock
lock
outsl
sti
pop
stos
jb
les
adc
outsl
push
outsb
dec
pop
adcl
std
test
mov
cwtl
sbbb
cmp
stos
bound
leave
cwtl
jecxz
xchg
ja
pop
dec
pop
testb
sbb
mov
mov
scas
pop
ljmp
lock
push
in
dec
fisttps
jg
jae
dec
pop
xchg
mulps
cmc
icebp
stos
outsl
jae
test
imul
jle
fsubl
jg
ret
cmc
jecxz
sbb
outsl
or
dec
cmc
out
pop
sub
lods
mov
lret
lock
test
sub
lods
negl
js
jno
pop
cmp
roll
mov
mov
push
dec
sub
aad
pop
xchg
popf
sbb
into
ss
imul
adc
push
push
adc
sbb
sbb
cs
pop
outsl
inc
mov
dec
mov
sub
push
adc
cmpsb
scas
mov
push
mov
aas
out
pop
push
out
pop
pop
out
out
or
aas
pop
push
push
add
xor
ljmp
cmpsl
push
jb
push
scas
sub
sub
cmp
fisubrs
mov
mov
mov
vmwrite
mov
aaa
jb
mov
cs
cmpsb
dec
jle,pn
push
sbb
sbb
push
sub
scas
data16
mov
xchg
inc
pusha
xchg
mov
pop
or
imul
lds
dec
and
outsb
popf
xchg
cmpsl
add
adc
dec
sub
pop
mov
pusha
cmp
adc
mov
popa
dec
xor
inc
stos
and
shlb
mov
inc
adc
and
sbb
jl
push
hlt
aad
jns
xor
jge
fs
call
mov
cmp
sti
data16
pop
push
mov
jmp
sbb
adc
cmc
scas
inc
jle
mov
cmpb
out
push
push
xor
xor
mov
arpl
or
and
or
aam
inc
inc
or
out
cmpsl
arpl
fdivl
and
fmull
xor
dec
rcl
loope
push
inc
dec
add
mov
push
xchg
xor
test
or
in
cs
push
add
jp
leave
mov
jbe
dec
aas
and
fiaddl
or
shlb
iret
jns
dec
ret
das
movq
mov
push
pop
jl
jg
mov
js
aas
je
and
aas
push
dec
negb
ds
or
lds
aas
mulb
mov
sub
add
sub
xchg
movsb
data16
leave
mov
movsl
in
mov
dec
cmp
pop
jmp
push
jl
dec
push
add
jmp
pop
pop
dec
bound
mov
pop
fistpll
fs
imul
fs
mov
xor
dec
ljmp
ss
out
cmp
leave
out
fcomps
jle
cmp
leave
aas
cld
cmp
sti
movsl
in
aas
cmp
dec
aas
aas
div
data16
leave
adc
scas
fs
aas
ja
in
cmp
or
icebp
push
sahf
mov
pop
xor
xor
leave
or
les
push
imul
inc
aas
cmp
stos
dec
mov
ds
imul
das
js
mov
dec
mov
inc
xchg
jne
pop
push
lods
lock
xor
mov
fcoml
and
sub
and
mov
xchg
push
rorl
jl
dec
sub
push
lods
push
jge
lods
cs
lods
push
insl
leave
lods
jne,pn
push
sbb
fs
ds
or
adc
dec
sub
add
sbb
mov
sub
out
ss
mov
sar
out
in
xor
std
sub
rorb
cld
jl
out
cmpsb
es
adc
push
in
mov
lock
dec
call
sbb
push
mov
aas
loop
movsl
fwait
cld
dec
xchg
in
in
dec
fisubl
xchg
popf
add
stc
xor
fmul
mov
xor
xchg
and
xchg
pop
imul
dec
inc
push
mov
add
shll
sub
enter
dec
add
push
mov
movaps
les
cld
cli
dec
or
mov
push
dec
mov
and
aas
jb
or
fidivrs
leave
xlat
sub
les
imul
push
fnstcw
mov
cmp
dec
cmp
ficoms
ficoml
leave
and
cmp
notl
dec
and
or
aam
or
push
mov
adc
es
in
pop
insl
cld
int
and
push
mov
jge
sub
fsubrs
loop
sub
push
movlps
pop
xorl
cld
pop
scas
push
inc
mov
xor
and
push
test
iretw
push
test
push
push
enter
cmp
pop
or
xchg
imul
and
mov
leave
and
jns
pop
push
mov
inc
ret
add
inc
jle
inc
pop
dec
cld
inc
dec
inc
inc
push
mov
sub
inc
ja
loopne
push
sub
pop
cld
pop
and
or
push
ja
fs
sub
mov
pop
add
and
xchg
jo
test
push
adcb
add
out
sub
or
sahf
dec
or
sbb
add
fwait
add
add
mov
stos
sbb
sbb
dec
loope
dec
sub
inc
shll
pop
fs
icebp
imul
fs
aas
add
loope
decl
fs
and
fs
dec
subl
xor
dec
mov
ss
mov
mov
js
sub
sub
push
fnstcw
sub
sub
push
leave
js
sub
sub
push
stc
js
sub
sub
push
jmp
xchg
cmpsb
xor
sub
orl
scas
and
mov
cld
push
and
dec
push
sub
fisubrs
pop
pop
inc
js
scas
and
aas
inc
popa
dec
jp
inc
shl
cld
inc
pop
imul
mov
push
xlat
in
add
js
scas
stc
bound
mov
cltd
add
sub
into
xor
mov
rcl
cmp
hlt
add
into
push
das
adc
shlb
test
fadds
and
xchg
roll
mov
lret
cmp
and
push
js
sbb
aad
or
xor
retw
mov
andl
jge
cld
push
sbb
sbb
pop
sub
jbe
xchg
addr16
or
inc
pop
cmpsl
xor
les
cmp
ljmp
scas
repnz
cld
jg
pop
push
fidivs
dec
aas
add
inc
and
imul
cmpsl
cmp
mov
movsl
push
jge
shlb
adc
dec
daa
loop
adc
mov
cld
mov
lret
std
jo
mov
mov
jle
inc
dec
dec
adc
daa
xor
sti
daa
loopne
jns
inc
or
movsb
adc
movsb
mov
stos
lea
loope
inc
adc
dec
shr
hlt
pop
sbb
ret
repz
cmp
or
out
push
mulb
add
cmp
push
and
hlt
xorps
repnz
cli
cmp
les
mov
ds
cmp
movsb
mov
js
out
mov
mulb
sbb
shll
adc
out
aas
dec
xor
mov
add
mov
cs
cli
icebp
mov
test
jle
in
cmp
dec
sub
dec
out
nop
xor
leave
push
or
ss
stos
push
scas
fisttpl
js
stos
push
jge
cld
jle
sbb
in
stos
cmp
jmp
aam
aad
or
les
repz
dec
sub
leave
pop
dec
aad
sub
pop
sahf
jg
leave
xlat
scas
fs
clc
icebp
push
mov
ss
jge,pn
cld
dec
aas
movsb
mulb
aas
push
insl
iret
je
decl
leave
cli
dec
pop
bnd
xchg
xchg
stos
arpl
and
or
stos
inc
cltd
scas
loope
adc
fldt
push
lods
sbb
push
mov
sbb
jge
inc
stos
repz
mov
sbb
xchg
aad
pop
lcall
sub
mov
sub
mov
sub
mov
mov
stos
int
pop
imul
sub
fimull
ficompl
pushf
sub
add
repnz
xor
arpl
jnp
loope
sub
cs
push
test
aam
pushf
test
dec
cmp
and
sbb
leave
inc
mov
and
nop
jnp
sub
pop
dec
dec
sub
les
sub
add
nop
sub
dec
loope
or
arpl
aaa
sub
ljmp
les
pop
lds
push
insb
sub
mov
inc
push
subb
aas
xor
and
aas
xor
movsl
insb
ljmp
pop
jp
data16
xchg
adc
leave
xchg
subl
out
sub
es
or
and
add
imull
es
hlt
movsl
xchg
imul
imul
mov
scas
cmp
mov
leave
decl
fisttps
pop
inc
lods
dec
and
aas
push
insl
dec
inc
pushf
push
arpl
or
pop
fistps
imul
and
sbb
clc
add
aaa
jno
and
int
imul
sbb
inc
push
mov
insl
jge
mov
sbb
xchg
insl
jge
mov
sbb
xchg
insl
jge
mov
xchg
das
push
cltd
leave
das
subl
mov
das
imul
das
sti
fs
das
mov
das
jne
les
sti
call
stos
dec
cld
das
out
icebp
push
add
mov
aas
push
shll
cld
dec
enter
in
leave
pop
out
inc
push
cmp
in
sub
cmp
lock
mov
mov
leave
pop
dec
je
xor
in
inc
out
leave
xchg
cwtl
fnsave
gs
fnstsw
aas
dec
fnstsw
jbe
data16
leave
adc
scas
fs
jo
insb
aam
arpl
xor
mov
adc
pop
cmp
leave
and
aas
sub
popa
pop
shl
std
aas
shrb
inc
addr16
xchg
adc
jo
xor
stos
invd
shl
push
sub
pop
dec
pop
pop
and
data16
adc
fs
pop
jnp
push
add
in
pop
adc
test
push
push
paddb
jmp
push
paddsb
call
incl
pushl
jmp
call
rorl
out
push
roll
repz
shrl
sub
push
cld
fwait
push
shl
xchg
push
dec
push
adc
leave
and
aas
sbb
out
leavew
leave
adc
scas
popa
push
or
leave
pop
stc
sbb
jge
dec
arpl
sarb
out
aam
aad
or
or
loopne
sti
arpl
in
ds
das
xchg
push
dec
or
pop
push
in
clc
mov
jns
jo
es
leave
adc
out
aas
outsb
xor
mov
xlat
pop
push
cmc
movsl
in
sarl
add
icebp
data16
leave
adc
scas
out
or
pop
jae
leave
xor
sub
xor
push
stc
adcb
lret
xor
mov
xor
pusha
add
pop
dec
pop
dec
lretw
push
inc
pop
or
pop
stc
sbb
imul
ss
jmp
mov
lea
jmp
xchg
imul
fwait
insl
jae
mov
cmp
cltd
cmp
fwait
insl
jae
mov
cmp
fwait
insl
jae
mov
cmp
dec
xlat
mov
xlat
sti
fs
cmp
dec
xlat
mov
xlat
imul
xlat
repz
aaa
jne
push
xlat
les
pop
jne
inc
sbb
mov
pushf
dec
push
mov
xchg
popa
pop
and
add
leave
pop
lock
sahf
push
leave
out
aam
pop
pushl
mov
stos
dec
mov
out
pop
std
leave
cld
pop
into
xor
movsb
xor
mov
ss
shrl
push
stc
add
dec
call
and
aas
ds
daa
shll
adc
out
or
pop
jecxz
leave
mov
daa
aas
or
push
dec
and
sub
stos
leave
pop
xlat
data16
sti
das
sub
pop
leave
jp
fcomps
dec
push
adc
stos
pop
movsb
xorl
mov
pop
test
mulb
jae
insl
mulb
ds
mov
leave
fisubrl
push
leave
fisubrl
into
ficoml
leave
fisubrl
ficoml
leave
fisubrl
out
ficoml
leave
pop
cs
pop
push
xchg
pop
mov
dec
loop
pop
push
mov
pop
mov
pop
imul
pop
sti
repnz
enter
jno
repz
pop
cmp
psubsb
push
cli
cltd
dec
fistpl
cmp
mov
xor
mov
push
xor
jbe
adc
add
add
xchg
lods
pop
sti
aam
aad
or
inc
xchg
out
sahf
int
leave
cld
into
lret
push
iret
shll
leave
adc
out
je
fadd
or
sub
pop
push
push
cmp
divl
iret
mov
ds
imulb
push
pop
cmc
stos
mov
dec
es
das
xor
js
sub
leave
adc
scas
fs
icebp
icebp
push
or
loope
in
xor
mov
jnp
or
dec
dec
pop
dec
ja
adc
gs
pop
mov
cmc
movsl
in
pop
cmp
std
mov
cmc
leave
pop
cs
ficoms
leave
fisubrs
ficoms
leave
fisubrs
mov
fisubrs
lods
ficoms
leave
fisubrs
fstp
push
and
ficoms
leave
fisubrs
std
ficoms
dec
fidivs
fidivrs
adc
mov
add
fs
sbb
xchg
mov
pop
jnp
imul
dec
inc
rcrb
out
xchg
xchg
fcomip
pop
pop
cli
icebp
push
ss
pusha
jecxz
test
daa
aas
or
jns
cmp
test
nop
pop
cmp
add
aaa
leave
pop
and
mov
rcr
aad
or
les
jae
outsb
sub
pop
dec
imul
fsubrl
or
and
adc
out
or
pop
aad
leave
and
mov
mov
xlat
pop
cwtl
inc
add
decl
pop
nop
cld
jecxz
push
leave
pop
leave
pop
scas
push
mov
aaa
je
dec
and
aas
push
insl
mov
sbb
decb
int
and
and
das
iretw
pop
or
dec
inc
aaa
jo
and
pop
xorb
mov
dec
adc
dec
mov
fmuls
rorb
enter
dec
mov
clc
dec
adc
dec
mov
mov
xchg
cwtl
sbb
xorb
ret
mov
ret
rol
inc
pop
ret
dec
fadd
in
cs
inc
cmp
movups
push
imul
lods
leave
and
aas
push
addb
leave
or
add
arpl
cld
lods
leave
and
aas
push
ret
lsl
imul
or
xchg
pop
movsb
arpl
cmpsl
mov
pop
cmpsb
arpl
ja
xor
das
xor
mov
int
sbb
call
shll
leave
adc
scas
out
or
pop
je
leave
and
aas
and
push
shrl
push
stc
xchg
sarb
out
aas
lods
leave
and
aas
sub
ret
aad
or
les
movsl
or
test
inc
mov
add
xor
and
cmpsb
mov
data16
adc
fs
pop
jle
in
cmp
out
mov
sbb
arpl
pop
rcrl
sbb
leave
shrl
rcll
shrl
rcll
shrl
inc
push
lahf
leave
inc
xchg
mov
push
mov
inc
rclb
pushf
filds
push
inc
inc
sti
fs
cmp
inc
mov
inc
imul
aaa
arpl
push
mov
and
pop
dec
push
test
aam
inc
enter
inc
push
sub
cmp
pop
pop
inc
and
in
mov
dec
inc
cmp
inc
cmp
test
cli
leave
nop
out
push
scas
push
sbb
stos
dec
or
xlat
pop
push
cld
movsl
clc
lods
leave
nop
scas
imul
cmpsb
das
mov
leave
cld
jge
cmp
leave
pop
stc
xchg
inc
jge
dec
jns
or
cs
jnp
xor
and
aas
xchg
leave
cld
jg
sub
fists
les
movl
pop
dec
adc
out
stos
xor
arpl
adc
cmp
xchg
jmp
sti
add
sub
pop
and
pop
ljmp
mov
mov
mov
adc
aad
push
aad
push
aad
jb
aad
lret
push
aad
cli
aad
jmp
aad
ljmp
sbb
pop
adcl
mov
scas
pop
sub
push
inc
dec
out
aam
arpl
rcll
jnp
pop
sahf
imul
cmpsb
es
imul
mov
xchg
pop
movsb
in
and
add
aad
or
inc
inc
or
es
adc
push
dec
push
pop
jp
jns
dec
inc
lods
mov
data16
adc
addr16
bound
lock
pop
dec
in
daa
adc
cmp
dec
lret
aas
arpl
mov
movsb
scas
sub
pop
lods
leave
and
aas
and
jg
loop
and
aas
es
cmp
dec
stos
dec
xor
pop
add
mov
pop
lretw
cs
add
dec
mov
xor
popa
add
sbb
scas
push
movsw
clc
ss
nop
and
pop
fwait
icebp
shlb
pop
dec
xchg
pop
lretw
pop
stos
popa
aaa
jl
dec
and
ds
mov
ror
dec
ror
cs
dec
push
icebp
leave
dec
cs
dec
push
loope
dec
cs
leave
cs
leave
push
or
push
mov
leave
cs
leave
mov
leave
imul
leave
sti
fs
leave
cmp
dec
leave
mov
leave
jne
cld
leave
sbb
leave
pop
out
dec
adc
in
dec
cmp
dec
dec
adc
leave
and
aas
push
adc
adc
out
or
pushf
in
arpl
xchg
cmp
gs
cmp
nop
xor
add
pop
leave
cbtw
jb
add
js,pn
scas
in
xor
dec
fcomi
ja
sub
pop
dec
push
sub
shll
or
sbb
iret
cmp
leave
pop
dec
mov
clc
push
leave
nop
inc
imul
out
mov
std
leave
cld
cmc
into
sub
or
pop
pop
jg
data16
pop
scas
decb
dec
adc
loope
adc
clc
outsb
dec
adc
int3
and
dec
negl
int3
std
xchg
int3
and
in
push
in
leave
int3
cs
dec
push
pushf
leave
dec
test
leave
dec
cs
push
mov
dec
push
lods
leave
dec
cs
push
fmul
dec
les
leave
dec
cs
dec
sti
fs
dec
cmp
dec
dec
mov
std
imul
std
sti
fs
std
sbb
icebp
push
stos
std
les
sub
pop
dec
dec
daa
in
adc
loope
pop
stc
xchg
jge
pop
dec
jle
add
arpl
xor
dec
leave
aaa
test
and
aas
push
push
add
dec
leave
adc
out
or
cs
repnz
pop
or
ss
pop
and
xor
das
sub
leave
pop
dec
test
cmpsb
jo
jns
leave
cld
push
cmp
jb
out
jb
pop
jmp
aam
aad
or
ret
rol
aad
or
les
pop
mov
pop
adc
loop
jg
repz
mov
std
leave
lcall
scas
push
push
jno
es
adc
loope
adc
aam
jae
adc
aaa
sub
aas
pop
add
es
dec
adc
mov
test
jmp
adc
lock
fcomi
adc
lock
lret
lock
lock
sti
lock
lock
jmp
adc
jo
push
jo
cld
mov
xor
pop
mov
jo
cld
fnsave
pop
jo
pop
jo
loop
pop
std
jo
push
out
adc
arpl
or
xbegin
imul
cmpsb
mov
leave
push
scas
loope
sti
cltd
or
leave
pop
dec
call
add
decb
jno
adc
data16
leave
adc
scas
jae
sti
repz
pop
dec
jbe
adc
clc
jmp
and
xchg
xor
dec
cmp
xlat
pop
push
imul
cmpsb
movsb
mov
leave
cld
pusha
dec
and
das
xor
jbe
pop
pop
pusha
icebp
ds
adc
scas
stc
dec
pop
shll
leave
adc
scas
out
or
pop
popa
lods
leave
test
testl
aaa
lret
negl
adc
add
lods
sahf
arpl
insl
inc
inc
pop
mov
ja
dec
push
ja
pop
popf
std
cld
test
push
ja
push
ja
push
hlt
mov
xchg
adc
hlt
mov
mov
adc
hlt
mov
cmpsb
hlt
xchg
aaa
hlt
jb
hlt
pmaxub
out
inc
hlt
inc
cld
std
hlt
inc
jp
scas
pop
loopne
out
imul
shl
xorb
je
out
mov
std
leave
cld
push
lret
nop
and
lret
leave
pop
hlt
dec
push
sti
sub
pop
stc
sbb
or
lds
mov
push
leave
adc
or
movsb
pop
lds
enter
adc
adc
popa
pop
mov
aas
adc
inc
leave
adc
or
leave
adc
jle
cli
imul
aaa
cli
adc
scas
leave
adc
scas
out
sti
jo
jge
pop
dec
jle
sub
sub
jp
pop
lret
xor
leave
push
and
pop
sub
pop
dec
pop
dec
lods
mov
aad
or
push
ja
push
xor
shrb
sub
dec
pop
dec
movsl
daa
adc
sub
lea
in
jnp
mov
jnp
lods
jnp
in
jnp
fnstsw
in
jnp
int
insl
in
jnp
std
jnp
in
jnp
in
jnp
in
jnp
popf
clc
imul
clc
sti
fs
or
mov
clc
imul
clc
repz
cmp
pmovmskb
imulb
clc
inc
cmpsl
cmp
jp
leave
or
sbb
js
cld
mov
jnp
sub
stos
add
mov
repnz
push
pop
das
mov
lods
leave
test
stc
xchg
pop
movsb
divb
mov
mov
js
add
das
leave
xchg
xor
xor
add
cld
imul
movsb
test
push
jns
add
jns
pop
xor
clc
and
pop
leave
pop
dec
dec
test
popf
out
push
jns
jns
and
incl
incb
mov
movsb
leave
pop
shll
filds
je
movsl
aaa
movsb
xchg
shrd
sbb
pop
or
or
and
pop
shlb
pop
dec
adc
fs
xchg
in
es
jg
and
jp
in
mov
lcall
lcall
lcall
lcall
leave
jg
cwtl
jg
or
mov
mov
jg
mov
jg
sub
push
xlat
jg
fs
jg
lret
mov
jg
push
jg
jmp
ljmp
jp
or
cmp
mov
aad
or
les
imul
mulb
inc
call
ja
cmp
adc
lds
leave
or
inc
sbb
leave
adc
out
sbb
add
push
pop
out
mov
lret
adc
leave
leave
adc
scas
out
or
cltd
imul
sbb
or
stos
dec
lods
insl
out
sti
xor
leave
push
inc
clc
pop
pop
inc
xor
mov
inc
pop
adc
push
dec
loop
or
jmp
data16
and
adc
and
inc
dec
adc
addr16
xchg
inc
and
imul
pop
in
xor
dec
bound
iret
aam
out
insl
in
bound
jecxz
xchg
insl
in
jecxz
mov
insl
in
jecxz
cmpsl
jecxz
push
leave
jecxz
xlat
jecxz
jecxz
movsb
jecxz
iret
jecxz
fs
cmp
mov
jecxz
push
adc
fs
arpl
push
iret
arpl
add
mov
mov
pop
leave
pop
dec
mov
sahf
loopne
leave
out
loopne
pop
gs
loopne
xor
aas
addr16
stos
leave
adc
scas
cmpsb
pop
sahf
dec
std
leave
cld
jnp
nop
and
xchg
pusha
inc
lahf
pusha
scas
dec
imul
imul
and
and
mov
js
pop
dec
jne
pop
and
pushf
dec
loope
dec
loope
or
leave
pop
popf
imul
ret
leave
nop
lock
and
push
leave
test
popa
inc
and
push
mov
sub
pop
leave
pop
int
and
jbe
dec
and
ds
out
fs
mov
ds
cmp
dec
and
mov
inc
dec
nop
jb
lret
repz
xchg
sbb
cs
data16
push
ror
data16
pushf
insw
in
pushfw
repnz
in
pushfw
loop
insl
in
pushfw
xchg
out
in
out
and
fs
cmp
dec
out
mov
out
lods
out
movsl
iret
out
shl
mov
xor
dec
out
stc
out
daa
and
cmp
addr16
leave
push
mov
rcrb
or
add
mov
cld
jmp
ficomps
or
in
in
xor
clc
pop
push
popa
shll
adc
lds
pop
shll
leave
adc
cltd
jnp
and
cltd
sti
repz
ror
pop
dec
fsubrl
gs
adc
movsl
in
cmc
cmp
icebp
cmp
adc
scas
jb
xor
stos
pop
into
js
xor
shll
adc
xchg
in
jne
ss
jne
or
lods
dec
mov
outsl
jecxz
jae
fwait
imul
push
js
in
ljmp
pushf
rcrl
cs
ljmp
ljmp
ljmp
push
or
push
mov
push
mov
push
test
push
fldcw
fs
push
int3
dec
push
inc
push
push
jecxz
sti
fs
jmp
push
push
mov
sti
jecxz
es
pop
dec
push
stos
sbb
pop
mull
push
adc
jmp
imul
xor
imul
cmp
pop
dec
clc
jnp
clc
add
loope
push
and
shrl
push
incb
les
add
mov
mov
aad
or
cmp
xor
mov
xchg
pop
movsb
ja
adc
mov
test
mov
lods
leave
and
aas
sub
xchg
inc
call
and
imul
aaa
leave
pop
leave
and
aaa
or
push
ds
dec
pop
dec
outsb
sub
or
imul
jno
sub
mov
mov
pushf
leave
out
cs
push
mov
out
cs
push
mov
out
push
lods
leave
out
cs
push
fmul
out
cs
out
push
int3
leave
out
cs
out
push
cld
leave
out
cs
push
in
dec
out
mov
push
sti
xchg
imul
imul
pop
mov
xor
dec
outsb
mov
push
aaa
data16
pop
cltd
out
imulb
out
inc
dec
loopne
cmp
leave
and
mov
shrb
into
addr16
push
adc
adc
pop
loope
outsl
fwait
repz
sub
leave
pop
xchg
imul
pop
test
repnz
nop
ljmp
ss
sub
in
push
roll
mov
aad
or
cltd
xor
pop
dec
push
mov
cld
leave
nop
jmp
xor
pushf
arpl
stos
mov
enter
sahf
dec
std
leave
pushl
push
pop
int
dec
xchg
addr16
jmp
xor
lret
xor
adc
movsl
dec
nop
inc
imul
cmp
imul
pop
xchg
mov
sbb
sbb
jmp
jmp
jmp
jecxz
jecxz
jmp
jmp
jno
fwait
xchg
jmp
jno
mov
jmp
jmp
jmp
jmp
scas
int3
pop
xchg
jmp
jmp
jmp
xchg
repz
cmc
xchg
jmp
jmp
or
adc
pop
add
shll
adc
scas
loope
sbb
jmp
loop
pop
xchg
xchg
lods
leave
push
aaa
dec
xor
mov
or
dec
shll
adc
scas
jae
sti
das
sub
pop
dec
outsb
stos
xor
popa
inc
clc
adcl
xor
sub
pop
dec
push
and
or
lds
sub
xchg
cmp
pop
pop
nop
xor
sbb
js
mov
xor
push
leave
pop
inc
data16
es
cli
leave
pop
out
aad
sti
das
scas
sbb
jge
in
adc
test
dec
and
ds
pop
adc
dec
push
jo
pop
mov
dec
andl
stos
pop
mov
xchg
dec
pop
and
pop
into
dec
loop
out
adc
xchg
mov
xchg
adc
adc
mov
mov
mov
adc
adc
aaa
adc
adc
ficoms
jb
adc
into
adc
notb
inc
jg
scas
pop
cmc
adc
sub
xchg
inc
cld
cwtl
xchg
inc
add
out
pusha
xor
xchg
imul
leave
push
dec
pop
aaa
dec
mov
jecxz
xchg
cmp
push
pop
inc
add
xor
clc
stos
leave
nop
xlat
imul
je
dec
mov
or
popf
xchg
leave
push
fcomps
pushf
insl
clc
xor
nop
sub
test
aam
nop
shrl
dec
jmp
es
pop
sti
ja
lahf
pop
jge
out
pop
lods
pop
jmp
aam
aad
or
inc
rorb
leave
or
les
jb
add
push
xchg
and
fiaddl
mov
pop
movsb
jnp
sub
leave
push
pop
adc
dec
and
aas
push
nop
and
sbb
adc
adc
pop
inc
mov
stc
mov
std
dec
cld
sub
pop
dec
sbb
dec
push
jge
jp
in
lea
in
in
lods
in
in
in
fucom
insl
in
in
int
insl
in
in
std
in
in
in
in
in
in
in
popf
gs
in
gs
lea
fs
cmp
dec
gs
imul
gs
fisttpll
mov
gs
shlb
jle
iret
gs
dec
clc
gs
popa
xor
dec
lcall
add
mov
pop
mov
dec
movsl
leave
pop
inc
mov
dec
stc
leave
pop
ljmp
sbb
pop
out
sbb
mov
ds
das
xor
leave
push
jo
movsl
aaa
es
mov
jmp
push
fwait
aad
sub
inc
popf
sahf
or
rcl
leave
or
les
rorl
sbb
jno
leave
and
aas
and
imul
xchg
xchg
pop
mov
leave
adc
dec
fmul
pop
leave
data16
sti
das
sub
pop
pushf
loop
adc
data16
dec
adc
pop
jbe
jge
sub
dec
pop
dec
pop
sub
jb
pop
jg
cli
pop
aad
jnp
adc
add
shl
jae
enter
les
sahf
insl
xlat
sahf
insl
in
cltd
pushf
cwtl
cltd
insl
in
cltd
pushf
mov
pushf
mov
cltd
pushf
test
insl
in
cltd
pushf
fcomps
sti
fs
cltd
cmp
mov
cltd
imul
cltd
repz
sbb
in
jb
sbb
jmp
and
mov
aad
nop
imulb
push
cmpsb
inc
adc
push
sahf
push
pop
push
jl
sahf
inc
cmp
leave
pop
pop
push
or
xchg
imull
xchg
sti
je
sbb
adc
mov
mov
lret
ss
dec
sub
pop
dec
dec
stos
cmp
mov
jno
dec
loope
xchg
lahf
lock
pop
sti
icebp
push
xor
test
pop
dec
and
or
pop
dec
js
adc
leave
adc
movsl
data16
ss
nop
and
pop
aas
pop
adc
dec
in
aas
push
insl
dec
push
imul
out
pushf
stos
pop
sub
add
sub
push
and
pop
out
loop
lahf
sbb
xchg
mov
mov
mov
mov
lcall
xlat
sbb
fistps
sbb
push
sbb
push
sbb
pop
adc
out
orb
mov
scas
pop
ds
loop
stos
lea
cld
pushf
rorl
repz
dec
popa
and
ja
cwtl
dec
or
sub
aas
leave
pop
sub
les
ret
leave
pop
int3
data16
out
sahf
data16
leave
call
pop
sub
mov
out
mov
std
leave
cld
pop
lret
adc
std
leave
adc
scas
dec
or
add
in
xor
jge
stos
add
push
clc
pop
aas
pop
xor
mov
and
push
pcmpeqd
aad
or
les
jb
add
jbe
inc
pop
adc
outsb
mov
jmp
xor
dec
adc
mov
dec
cld
inc
enter
cmpb
or
rcrb
mov
orb
xorb
mov
lret
repnz
xorb
add
addb
push
add
mov
add
sub
add
pop
add
add
sub
add
out
in
arpl
xchg
cmpl
sbbl
xchg
xor
js
cmpsb
out
mov
leave
cld
jg
add
rclb
cmp
gs
add
int
and
fldcw
cmp
in
xor
imul
pop
test
xchg
adc
fwait
clc
daa
leave
nop
push
imul
sbb
push
hlt
js
sub
leave
adc
push
push
push
pop
cld
stos
lss
imul
mov
push
leave
pop
inc
data16
sti
das
sub
leave
pop
dec
out
in
adc
inc
xchg
adc
pop
sub
mov
mov
ffree
and
imul
adc
loope
in
xor
pop
mov
leave
iret
stc
mov
leave
pop
cs
test
leave
test
addl
leave
test
mov
test
roll
roll
test
fs
cmp
dec
test
add
add
mov
aaa
jne
push
movsb
add
loope
sub
pop
dec
dec
test
mov
aam
aad
or
les
repz
mov
pop
jbe
loop
fidivs
enter
es
leave
adc
fucom
daa
mov
std
leave
out
adc
xchg
xor
cmp
and
xlat
leave
pop
dec
shlb
sti
adc
jp
pop
dec
addr16
xor
mov
lds
sub
mov
ror
repnz
sub
jnp
pop
adc
push
mov
stos
dec
test
out
out
xor
mov
add
push
jo
dec
or
ret
adc
mov
aam
push
xlat
stos
aam
aad
or
inc
inc
pop
mov
std
dec
cld
dec
enter
cld
pushf
in
add
or
movsb
or
aam
mov
fmull
adc
or
hlt
or
in
mov
in
or
mov
test
out
mov
mov
aaa
mov
sub
push
cld
ret
mov
popa
jecxz
into
mov
sti
mov
or
xor
js
xor
push
leave
adc
lds
pop
shll
leave
adc
scas
xchg
cmpsb
dec
nopl
fnstcw
dec
in
mov
mov
inc
std
leave
cld
jae
xchg
out
sahf
ljmp
pop
gs
or
jo
nop
fisubrs
cmpsb
das
mov
leave
cld
insl
lret
nop
and
xchg
mov
scas
enter
cmp
leave
cld
and
nop
and
pop
enter
adc
data16
leave
adc
cmpsb
test
pop
clc
pop
push
dec
adc
push
and
cmpsl
jge
sub
dec
or
push
jge
pop
jle
dec
pop
sbb
pushw
dec
adc
push
std
pop
pushf
shll
cs
push
repz
cs
push
jecxz
cs
push
xchg
leave
ucomiss
insl
in
setl
setl
ucomiss
movmskps
dec
lfs
imul
psubq
cmp
dec
lfs
jne
xchg
mov
mov
mov
and
nop
pop
imul
cmpsb
mov
std
leave
cld
icebp
enter
aam
aad
unpcklps
xchg
fstps
or
leave
push
mov
or
pop
dec
pop
daa
or
pop
imulb
enter
gs
inc
or
mov
stos
scas
lds
leave
pop
dec
push
cmp
in
sub
leave
pop
stc
popf
cmp
pushf
pop
cmp
jnp
out
stos
aad
or
inc
fucom
pop
sahf
dec
std
leave
cld
jnp
push
or
sub
mov
jcxz
xor
pop
leave
and
pop
pop
adc
dec
push
inc
clc
pop
mov
lods
dec
mov
sub
stc
jecxz
add
pop
out
xor
xor
and
gs
push
lcall
jb
mov
mov
jb
mov
push
mov
push
mov
push
mov
push
mov
pop
pop
xor
sub
xor
xor
sub
pushf
shlb
arpl
int
cmp
and
ja
pop
dec
pusha
daa
xor
and
fwait
mov
test
ds
leave
cld
sub
adc
ret
iret
scas
stc
andl
lods
pop
pushl
xchg
xor
in
xor
mov
pop
aas
pop
xor
mov
jnp
or
adc
mov
mov
arpl
out
pop
mov
pop
sti
ja
dec
pop
dec
jmp
aas
or
or
xor
icebp
add
mov
ret
cs
aas
xor
push
jno
mov
mov
imulb
mov
dec
popa
pop
push
lods
dec
and
aas
pop
insl
dec
call
jne
mov
mov
ss
ss
push
std
leave
ss
push
in
leave
ss
ss
popf
leave
mov
in
push
leave
mov
xchg
mov
mov
mov
lods
dec
mov
sub
sti
fs
mov
mov
repz
mov
ljmp
push
addr16
or
stos
leave
aaa
loopne
pop
shll
leave
adc
scas
out
sub
and
mov
xchg
mov
leave
xorb
pop
dec
and
sbb
lods
leave
and
mov
jg
leave
add
xorl
xor
enter
sub
push
push
xor
pop
and
leave
pop
dec
mull
imul
mov
imulb
test
jae
push
lods
leave
and
aas
sub
jo
hlt
aad
or
les
std
pop
xor
leave
pushf
add
jnp
and
cmp
dec
and
ds
stos
or
inc
lods
dec
and
aas
pop
ret
push
push
adc
mov
push
sbb
clc
jp
in
enter
loopne
cltd
jbe
push
nop
leave
cmp
cwtl
cmp
leave
cmp
mov
push
mov
cmp
mov
cmp
cmp
fdivrs
pushf
sarb
in
cmp
cmp
fs
mov
lcall
dec
mov
mov
jnp
jae
pop
aad
or
sbb
or
pop
in
lods
leave
and
aas
push
sbbb
incl
cmp
lods
cltd
pop
aam
aad
or
inc
ret
rorb
leave
or
into
adc
out
aad
sets
push
lds
mov
mov
xor
mov
mov
aad
or
xchg
nop
roll
cmp
xchg
mov
into
cmp
leave
cld
sub
adc
es
std
scas
stc
xchg
pop
dec
addr16
xchg
adc
mov
cmp
and
cs
pop
xchg
loop
pop
aas
out
data16
xchg
add
fimuls
adc
cmp
in
and
cmp
dec
cld
sub
pop
xchg
stos
jge
inc
lods
dec
and
ds
mov
dec
pushl
jb
cmpsl
mov
xlat
mov
xchg
daa
mov
maskmovq
idivl
movntq
seta
jb
lahf
ja,pt
ds
cld
mov
scas
pop
test
ds
cmp
leave
ds
cli
mov
aad
push
sbb
add
mov
inc
lods
mov
push
aad
or
roll
pop
in
lret
push
sti
dec
cs
aas
pop
or
cmp
gs
mov
push
sub
leave
adc
dec
or
cmc
aad
setbe
clc
or
sub
lods
lods
leave
and
ds
pop
xor
leave
gs
xchg
sti
je
xchg
cmp
cmpb
bound
cmp
pop
dec
daa
and
leave
pop
dec
lret
daa
or
insl
lods
leave
movsb
outsb
cmpl
lods
jge
out
lods
stos
pop
cmpsl
mov
pop
dec
push
sub
jne
lods
lahf
sarb
xor
in
sub
popf
push
dec
sub
cli
sub
ljmp
lcall
mov
mov
rsm
mov
pminub
ror
out
jbe
sar
out
jne
add
push
pushf
and
ja
and
xchg
adc
out
sahf
std
leave
cld
lock
push
aaa
inc
xor
leave
pushf
pop
mov
cmp
mov
rcrb
leave
or
or
add
loop
push
scas
push
adc
stos
dec
add
popf
loop
mov
lret
push
or
es
leave
adc
lds
leave
xchg
cmp
jb,pt
add
xor
xor
clc
stos
leave
nop
xlat
imul
pop
or
pop
dec
jp
sbb
leave
in
and
sahf
add
jae
or
leave
pop
leave
sub
movsl
mov
movsl
mov
pop
jle
dec
and
ds
aas
push
sbb
mov
sti
mov
sbb
dec
push
push
clc
jp
in
loope
sbb
and
leave
and
mov
push
mov
and
leave
and
shll
push
fxch
and
shll
leave
leave
and
icebp
and
leave
and
loope
rclb
cmpsb
sti
fs
cmpsb
cmp
cmpsb
imul
cmpsb
repz
cmpsb
adc
shll
aas
sti
icebp
data16
adc
data16
cmp
jno
mov
std
leave
cld
sub
adc
int
adc
scas
out
aaa
add
pusha
mov
loop
je
cmpsl
inc
dec
popw
sub
cmp
test
iret
leave
nop
clc
imul
adc
daa
mov
or
leave
pop
mov
cld
mov
aam
aad
or
int
sbb
cld
ljmp
movsb
imulb
movsb
inc
mov
leave
adc
scas
cli
inc
inc
shll
leave
adc
and
mov
dec
xchg
gs
pop
xchg
in
and
ds
and
push
push
dec
adc
addr16
cmp
clc
jnp
xchg
es
jp
in
mov
jae
lods
mov
aam
insl
in
mov
les
pushf
hlt
mov
in
mov
in
insl
in
mov
xchg
xor
pushf
test
pushf
mov
insl
fs
imul
xor
cmp
dec
xor
push
sti
xor
out
stos
dec
xchg
stos
out
lcall
ss
test
aad
xor
add
jns
sti
adc
add
adc
jp
aaa
lods
leave
and
mov
fcmovne
nop
les
lods
mov
jle
leave
or
xor
xor
stos
sti
repz
and
pop
dec
push
mov
aad
pop
dec
imulb
lock
xchg
gs
adc
arpl
mov
sub
pop
dec
pop
mov
mov
jae
push
add
adc
inc
test
ja
aas
lods
dec
and
ds
pop
push
xor
dec
push
jge
std
stos
pop
pop
jne
dec
scas
push
sub
xchg
xchg
jns
push
sub
cmp
pop
rcrl
lret
and
jecxz
adc
sub
fwait
test
jnp
test
jmp
adc
test
adc
test
adc
test
out
out
inc
cld
outsl
test
pop
add
loop
mov
inc
dec
loope
test
arpl
cmpsb
sub
or
mov
pop
adc
clc
cld
leave
nop
jmp
xchg
add
repz
daa
aas
or
dec
mov
or
aad
push
fwait
cs
pop
or
cmp
scas
dec
in
clc
ror
nop
ret
mov
leave
pop
dec
popa
mov
dec
scas
mov
andl
leave
pop
dec
sub
test
jp
ret
lods
leave
and
cmp
test
leavew
adc
das
inc
jmp
mov
jge
cld
mov
cs
das
xor
mov
mov
mov
push
lods
push
dec
ret
lods
dec
push
incb
lods
les
adc
cmp
xor
push
dec
dec
pop
dec
and
pop
sahf
xchg
push
sub
push
sub
call
sub
fisubrs
inc
sub
into
sub
push
sub
sub
jmp
sub
out
sub
call
jb
xchg
inc
paddusw
sub
fldl
test
inc
push
dec
enter
or
xchg
aad
add
gs
dec
pop
mov
lods
leave
and
aas
add
aad
or
inc
fucom
pop
pop
sbb
imul
or
shll
cld
scas
push
cmpsl
sub
and
aas
xor
sti
inc
in
xchg
xchg
push
lock
pop
jae
push
xor
inc
mov
es
leave
adc
scas
out
or
pop
jb
leave
and
aas
and
imul
adc
or
movl
fxch
pop
lret
andl
andl
push
mov
jae
clc
sub
push
imul
inc
adc
dec
dec
pop
dec
js
pop
pop
cmp
sub
rolb
stc
or
fstl
jb
std
rorb
in
rorb
cmc
shlb
popf
push
pmulhw
decl
jb
mov
jb
lods
push
lgs
fstl
and
push
inc
cld
enter
push
scas
pop
call
sub
cld
nop
rol
jecxz
lahf
rcrl
mov
adc
clc
and
nop
das
imul
and
lods
leave
and
aas
push
shlb
jne
xchg
push
push
fnsave
arpl
mov
aam
aad
or
xchg
into
pop
shl
aad
or
ds
das
xor
dec
mov
or
mov
mov
pop
leave
pop
dec
dec
daa
or
loop
leave
and
aas
ds
cmp
push
stos
dec
xor
dec
and
data16
adc
scas
popa
or
pop
dec
lods
leave
and
ds
adc
in
lods
leave
test
xlat
xchg
pop
movsb
pusha
xor
dec
xlat
mov
sbb
push
inc
clc
pop
mov
lods
dec
and
ds
mov
test
add
xorps
mov
jp
in
loopne
jae
cwtl
aam
adc
in
aam
mov
insl
in
aam
mov
aam
rcl
insl
in
aam
rcl
in
aam
lock
in
aam
loopne
insl
xlat
dec
aam
adc
lahf
push
sti
fs
cmp
push
jne
cmpsl
push
sti
jmp
rclb
fists
lret
jno
leave
cld
enter
in
stos
dec
xchg
data16
adc
dec
fmul
pop
leave
dec
push
sti
js
arpl
pop
pushf
imul
or
xchg
mov
leave
cmp
stos
pop
push
clc
jge
and
clc
into
leave
nop
sti
imul
and
fidivrl
jp
mov
leave
or
add
inc
imul
shll
leave
adc
scas
lds
pop
inc
or
mov
leave
cld
lods
lret
ror
xor
or
les
imul
fcmovnb
xchg
sbb
cs
cmp
xchg
clc
push
dec
nop
inc
imul
in
xor
pop
addr16
jp
in
mov
jae
scas
pop
pushf
xlat
pop
insl
in
pop
cltd
jle
push
iret
leave
pop
negl
dec
pop
cs
push
out
leave
pop
cs
fcoms
leave
fsubrs
xchg
push
mov
push
mov
fsubrs
rcr
sti
fs
fdivrs
rorl
dec
fdivs
cli
fdivr
ljmp
or
rolb
imul
xor
jge
dec
lcall
test
leave
and
mov
dec
leave
pop
dec
js
test
jp
xchg
fldenv
pushf
fnstcw
repz
ss
pop
dec
and
mov
std
leave
cld
push
cmpsl
cmp
leave
pop
dec
push
add
pop
pop
mov
clc
dec
xor
mov
std
sub
les
cmp
mov
rol
add
fiadds
cmpsb
leave
and
push
aad
or
fst
adc
test
jecxz
dec
cs
pushf
gs
arpl
xchg
clc
ds
nop
sub
sbb
cmp
dec
imul
and
adc
xchg
or
decl
filds
test
add
fbstp
xchg
pop
mov
lcall
mov
mov
mov
mov
mov
stos
pop
adc
pop
mov
ficompl
maxps
lret
repnz
out
jnp
inc
cld
loope
ret
sbb
sub
add
shrl
faddl
mov
pop
aad
cld
enter
es
adc
scas
popa
push
or
pop
arpl
push
sbb
cmpsb
leave
nop
shrl
pop
pop
xor
leave
push
jbe
and
jmp
int
shrl
int
cmp
loop
std
leave
cld
int
shll
leave
cld
pusha
dec
cmp
xor
dec
lock
pop
outsb
icebp
ds
adc
scas
decb
leave
adc
scas
lds
leave
xchg
adc
lock
pop
jbe
push
mov
push
and
data16
adc
int
jge
adc
incb
inc
mov
xchg
fsts
cmpb
dec
or
pop
movsl
inc
or
dec
dec
daa
adc
xor
mov
insl
in
ret
pushf
mov
ret
pushf
rol
insl
in
ret
pushf
rol
in
ret
pushf
icebp
ret
insl
in
ret
pushf
loope
insl
pop
leave
ret
cs
inc
push
cltd
leave
inc
addl
mov
imul
inc
sti
push
dec
inc
mov
inc
jne
faddl
lahf
adc
lret
dec
inc
mov
gs
outsb
leave
adc
shlb
stos
dec
mov
add
push
leave
pop
inc
data16
pop
jp
data16
scas
cli
into
ja
sub
call
shll
leave
adc
out
add
dec
imul
pop
out
leave
stos
nop
rcll
shrl
roll
aaa
rol
jecxz
scas
leave
pop
dec
jge
pop
dec
jle
and
stos
into
andb
pop
jle
xor
leave
push
and
mov
dec
fmul
pop
aad
dec
cmp
or
pop
cltd
loop
adc
adc
sub
xor
and
into
clc
aam
aad
or
pop
inc
inc
cmp
adc
out
inc
mov
adc
insl
in
inc
pushf
hlt
inc
insl
in
inc
pushf
in
insl
in
inc
lahf
xchg
and
cltd
insl
lock
mov
push
mov
mov
and
lock
movzwl
and
lock
mov
and
lock
mov
inc
imul
add
sahf
inc
inc
mov
mov
aam
aad
or
inc
les
pop
bnd
push
sti
inc
and
mov
or
stos
dec
test
out
icebp
movsb
data16
leave
xchg
data16
repz
adc
scas
jae
adc
add
add
mov
ds
leave
pop
dec
dec
mov
in
leave
pop
dec
out
test
sahf
das
push
add
stos
dec
cmp
mov
es
pop
dec
lods
leave
and
aas
sub
das
inc
out
leave
adc
push
jmp
imul
leave
push
leave
aas
aad
lds
push
dec
pop
dec
inc
and
or
jne
lret
lds
or
lret
icebp
es
adc
mov
test
sbb
push
dec
mov
mov
mov
mov
jb
fisttpl
ret
dec
jb
lret
dec
psllq
sti
dec
pavgw
cld
jmp
inc
adc
scas
pop
sahf
lret
out
pop
lret
inc
cld
mov
test
dec
imul
fmulp
xchg
mov
leave
cld
insl
dec
sbb
out
xor
lock
push
lcall
and
add
leave
or
inc
xchg
into
adc
aad
or
sbb
push
xchg
stos
push
or
inc
and
add
xor
and
es
leave
adc
scas
lds
pop
shll
leave
xchg
sbb
mov
xor
dec
imul
add
push
leave
pop
inc
data16
sti
leave
pop
in
push
es
sub
push
dec
leave
mov
pop
pop
mov
aas
shrb
inc
movl
shlb
push
adc
dec
jmp
xor
dec
dec
xchg
cmp
mov
lods
dec
and
mov
inc
lods
dec
and
ds
mov
nop
into
insl
in
into
pushf
fmulp
insl
in
into
cltd
sbb
insl
in
into
pushf
out
insl
in
into
pushf
xchg
dec
insl
in
dec
pushf
xchg
in
dec
pushf
mov
insl
fs
dec
mov
dec
imul
dec
mov
dec
jne
lds
mov
dec
mov
adc
pop
iret
arpl
xor
popf
repz
sub
stos
push
fiadds
aad
or
inc
or
sub
dec
inc
ret
push
aam
aad
or
inc
inc
or
es
jae
sti
xor
js
pop
dec
jne
adc
mov
or
and
pop
popf
imul
jp
leave
pop
dec
lock
xchg
movsb
push
pop
aad
xor
push
mov
mov
clc
pop
leave
nop
pop
imul
cmpsb
xor
loop
ffree
xor
adc
leave
adc
std
cmpsb
push
jp
cmp
sub
inc
aad
or
ret
xchg
addr16
push
adc
pop
pop
jmp
push
cld
add
cmpsl
push
in
jge
cmc
jge
lcall
jb
repnz
jb
mov
jb
lods
repnz
bnd
bnd
int
pmullw
jb
std
repnz
jp
scas
pop
loopne
out
imul
inc
sbb
test
fstps
jb
dec
mov
pop
leave
adc
sbb
or
and
aas
push
push
jmp
insb
sub
add
sbb
or
stos
push
cmpsb
push
inc
std
leave
cld
jno
ficomps
call
jae
pop
or
add
jae
dec
cmp
dec
rcl
or
inc
rcrb
jbe
pop
arpl
out
pop
lcall
sbb
adc
scas
stc
dec
pop
shll
leave
adc
scas
incb
aad
push
sbb
pushf
test
cs
jnp
xchg
sub
adc
fnstsw
pop
lds
adc
pop
fs
sbb
daa
imul
nop
dec
push
pop
dec
pop
dec
and
pop
cwtl
stos
loop
mov
adc
jno
push
jno
push
jno
push
jno
push
jno
push
jno
call
jb
xor
or
scas
pop
mov
out
cmp
inc
cld
stos
testb
test
fstps
imulb
loop
mov
leave
loope
jbe
repz
mov
jbe
fadds
mov
pop
aas
pop
xor
mov
inc
pop
adc
sbb
mov
mov
pop
dec
test
test
pop
or
pop
dec
dec
daa
xor
and
out
pop
stc
xchg
ja
pop
shrl
ja
ss
or
test
les
jb
add
jns
movsl
or
xchg
nop
hlt
arpl
hlt
jnp
inc
xor
mov
lds
sbb
and
mov
jle
leave
push
imul
stos
pop
xchg
add
or
lds
inc
sub
pop
dec
push
mov
dec
dec
nop
jp
clc
pop
or
inc
pop
lds
pop
fisttpll
scas
loop,pn
inc
bswap
lds
test
jmp
lds
out
lds
xchg
inc
setg
incl
jb
mov
movswl
jmp
adc
inc
scas
pop
pop
inc
out
lret
cld
jae
inc
stc
inc
scas
pop
inc
loop
xchg
cli
xchg
mov
imul
mov
adc
cmp
adc
scas
lds
leave
adc
scas
loope
pop
xor
leave
pop
adc
fstps
jp
dec
mov
int
dec
add
cs
xchg
sbb
into
and
repnz
or
ds
das
xor
dec
sti
mov
pop
xor
clc
jnp
or
imul
cmpsb
das
mov
std
leave
cld
jmp
push
add
dec
or
xchg
fstps
aad
or
inc
fucom
pop
sahf
dec
std
leave
cld
ja
sub
bound
out
lods
leave
test
clc
xchg
pop
movsb
xor
clc
sti
adc
adc
push
dec
nop
inc
imul
xchg
loope
into
jnp
dec
push
scas
lds
int
sbb
push
cld
or
push
xor
and
push
and
pop
loop
loop
lcall
mov
adc
stc
mov
mov
mov
stos
stc
adc
stc
mov
xchg
psubw
lret
repnz
jb
cli
stc
psrad
jb
ljmp
cltd
jns
sub
jns
cld
mov
add
jns
fstps
jns
dec
fnstcw
jp
or
inc
inc
inc
or
sub
incb
xchg
cmp
adc
scas
add
add
fisubrs
xchg
sti
je
insl
leave
pop
dec
outsb
daa
xor
and
cmpl
shl
inc
mov
xchg
out
sahf
enter
pop
xor
xor
sbb
stos
dec
mov
mov
leave
cld
inc
lret
adc
cli
leave
adc
scas
dec
or
jg
dec
or
pop
add
lods
leave
pop
scas
inc
cs
jnp
inc
mov
sbb
dec
test
cld
mov
cli
movsl
in
cld
cmp
int
lahf
je
push
mov
pop
test
stos
pop
popa
clc
jp
in
mov
sbb
jl
fxch
jl
sarl
jl
icebp
jl
stc
leave
jl
loope
rclb
in
pushf
cltd
in
insl
in
in
pushf
mov
insl
in
in
pushf
mov
in
sti
lods
in
cmp
in
imul
in
repz
in
in
or
jecxz
pop
push
dec
in
mov
insl
mov
call
aaa
xlat
data16
js
dec
leave
adc
stc
dec
pop
shrl
loop
cld
sahf
loop
xor
pop
sub
dec
aam
pop
shll
xchg
jnp
mov
stos
xor
add
call
jle
inc
xor
push
bound
push
bound
inc
bound
scas
dec
xchg
pushf
jno
jmp
je
or
push
out
add
lock
and
in
sub
rorb
xchg
ds
cwtl
inc
and
mov
ret
lock
sub
jmp
dec
adc
icebp
leave
call
sbb
sarl
mov
repnz
inc
xor
repz
out
mov
in
or
cli
addr16
sbb
dec
and
sarl
subl
ret
add
or
pusha
sbb
sbb
dec
add
testl
test
adc
or
cmc
mov
mov
movsl
adc
sbb
push
add
xchg
push
insl
lahf
or
movsb
dec
push
jmp
inc
push
pop
or
sub
xor
repz
mov
test
fs
sub
or
pop
inc
lods
mov
ja
jl
cwtl
outsl
or
sub
jle
arpl
les
add
rolb
ss
push
dec
movsb
mov
push
arpl
dec
mov
dec
jle
adcl
xchg
pop
push
or
jmp
outsl
scas
pop
out
push
ja
cmpsl
cmpb
jmp
dec
xor
popa
adc
adc
adc
adc
shr
xlat
rorl
or
lahf
int
stos
or
sbb
jge
cwtl
test
leave
stc
push
push
scas
movsl
shrl
movsl
push
adc
out
xor
or
jecxz
add
popa
push
cmc
push
test
cltd
or
xchg
gs
jne
lods
pushf
jo
popf
push
inc
pop
imul
cmp
adc
push
sub
inc
out
sub
mov
mov
mov
ja
push
jmp
push
dec
int3
sub
and
mov
mov
repz
add
arpl
stos
add
fwait
pusha
aaa
dec
or
iret
lret
int3
cmp
andb
adc
cmc
lret
scas
push
ja
pop
cwtl
push
call
jno
add
and
or
scas
dec
push
mov
push
pushw
cwtl
hlt
jno
insl
inc
pop
shl
repnz
jnp
cld
jns
push
dec
rorl
adc
cs
nop
dec
push
sbb
mov
clc
subl
mov
add
dec
in
rol
mov
ljmp
add
shrb
jbe
popf
lds
cmp
cmpsl
pushf
push
cmpl
lods
cmp
mov
sbb
sub
inc
ja
mov
outsb
xorl
stc
push
orb
daa
bound
xor
lret
insl
outsl
out
stos
dec
outsb
les
xchg
testl
xor
insb
imul
push
jmp
sbb
dec
xchg
mov
sub
push
cmp
push
lahf
jl
jns
push
ficomps
imul
pop
dec
mov
pop
push
pop
cs
xchg
and
and
inc
jnp
pusha
das
not
inc
arpl
ljmp
xor
dec
orl
push
or
mov
call
rcrb
dec
pop
cs
lods
cli
hlt
pop
cmpsl
mov
das
incb
pop
push
jns
or
push
sbb
leave
call
and
dec
pop
popa
adc
cmp
inc
cld
dec
out
lds
jl
cltd
ja
aas
cmpsb
ja
xchg
data16
jnp
pop
sub
sub
in
push
add
push
mov
imul
pop
add
sahf
mov
or
xor
scas
fs
data16
repz
sbb
cmp
fs
mov
outsl
and
adc
gs
push
or
add
out
mov
adc
ja
cmpsl
bound
popf
jecxz
pop
out
iret
popa
dec
lock
cmp
jmp
in
adc
cmc
lods
push
sbb
fidivs
jnp
cld
lods
adc
fimuls
pop
or
add
and
outsl
push
addr16
add
inc
jns
in
jecxz
jns
or
mov
pop
sbb
xchg
in
testb
aaa
push
addr16
xor
nop
sbb
insl
sbb
pop
dec
sub
stos
popa
sbb
rorl
loop,pn
mov
fs
cmp
push
dec
pop
pop
out
pop
mov
mov
rcrl
dec
push
mov
fisubrs
inc
xor
arpl
lahf
mov
or
sub
test
xlat
sbb
sub
mov
jge
or
out
pop
jb
dec
fs
fs
dec
fisttps
cmp
arpl
imul
inc
cld
pop
cmc
fidivs
ja
ss
lock
push
cmp
loop
add
jo,pt
sbb
inc
push
scas
aas
sbb
roll
mov
popa
adc
mov
call
cmc
and
xor
push
add
pop
push
xor
int3
or
ficoms
lret
pop
lock
jmp
and
or
cmc
mov
dec
adc
cmc
popa
stos
mov
sub
jg
jne
cld
mov
repz
popa
insb
dec
jne
pusha
mov
mov
stos
loopne
or
jo
pop
jl
jmp
push
jne
mov
stos
sbb
xor
stos
and
test
mov
xchg
mov
cmp
sbb
dec
or
into
adc
xor
mov
imul
movd
test
stos
out
gs
pop
pop
stos
or
dec
fs
push
jmp
out
into
inc
sti
incb
mov
bound
cs
ret
cwtl
mov
cld
ja
dec
in
adc
je
dec
dec
cmp
xchg
shrb
fidivl
and
and
in
add
mov
ljmp
mov
pop
mov
push
stc
pop
in
push
sbb
outsl
out
mov
dec
jmp
jle
std
outsb
popf
cli
push
cli
imulb
ds
aaa
insb
fs
mov
sub
outsl
aad
in
jl
test
jecxz
push
mov
fdivr
push
pop
jb
jp
jp
mov
mov
sub
js
sbb
imul
add
addr16
cwtl
addr16
js
sbb
pop
inc
xchg
adc
sbb
aas
xlat
enter
add
mov
ret
push
inc
sub
fsubrl
push
dec
jmp
pop
adc
push
in
or
xlat
mov
imul
popa
jle
imul
xchg
negl
xchg
in
imul
inc
jnp
sub
mov
sbb
dec
rcrb
fiadds
cmp
push
es
pop
xor
dec
push
push
movsb
xchg
jno
add
mov
xor
stos
pop
lock
push
ljmp
rorb
or
push
js
testl
repnz
sbb
cwtl
fucomip
jo,pt
and
jns
push
cld
push
call
fld
dec
xchg
in
pop
loop
pop
sbb
push
mov
xchg
mov
push
add
ret
cmc
stos
ss
outsb
addr16
mov
mov
ret
push
repz
push
stos
pop
mov
inc
add
jmp
xchg
pop
xchg
inc
pusha
sub
fsts
inc
sub
push
push
leave
push
rcl
and
mov
adc
ret
or
fs
les
std
les
pusha
lds
lods
out
aas
jmp
stos
testl
stc
out
cmc
test
fwait
xchg
mov
xchg
fisubrl
sbb
push
pop
scas
imul
cld
pop
ffreep
nop
test
dec
jg
sub
sahf
mov
idiv
sbb
cmp
popf
push
pop
test
data16
xlat
aas
call
cld
mov
cmp
outsl
es
aaa
mov
pop
mov
push
lock
popf
test
sbb
inc
mov
int
pop
push
mov
cmp
cltd
out
or
in
or
xor
dec
ret
outsb
cmp
data16
mov
inc
cmp
cld
pusha
dec
sbb
adc
roll
jnp
fs
mov
push
sbb
das
stos
jmp
outsl
mov
jl
adc
inc
loopne
dec
enter
ret
inc
ss
pop
scas
adc
lcall
out
sub
leave
lods
push
push
mov
inc
inc
sub
push
sahf
icebp
popa
xor
mov
das
pop
sub
push
imul
in
test
in
lret
sub
aam
adc
pop
sub
iret
push
push
xchg
clc
int
pop
mov
out
dec
push
int
push
add
mov
shrb
push
pusha
jmp
pop
ret
pop
inc
repz
mov
and
shrb
fs
sub
ror
push
into
in
pop
xor
sbb
mov
add
push
adc
jle
inc
incl
push
out
push
inc
and
mov
dec
push
push
shrl
sti
repnz
mov
dec
jno
shlb
pop
xor
sbb
outsl
xor
fnsave
sbb
xchg
mov
fimull
mov
mov
into
sub
enter
es
aad
jmp
push
into
mov
ret
push
mov
and
aaa
mov
loop
rcr
jl
sbb
aam
aad
sbbl
ret
jl
adc
mov
in
pop
xchg
dec
jl
sbb
cld
add
inc
push
sub
jle
mov
insb
add
cmpsl
add
adc
adc
push
out
xlat
or
pop
add
insb
popf
imul
imul
aad
dec
mov
out
cmp
mov
das
xor
jmp
xor
dec
lret
aam
jne
xor
imul
mov
and
dec
test
faddl
scas
mov
sbb
sbb
cmp
sub
mov
fldcw
sub
mov
push
and
jns
fcmovbe
pop
idivl
cmp
lret
repz
dec
adc
jnp
mov
popa
pop
or
bound
jne
outsl
mov
and
jp
dec
sub
hlt
inc
outsb
repz
loop
push
pusha
ss
inc
scas
repnz
add
inc
ljmpw
jo
scas
fwait
outsl
mov
pop
inc
jecxz
out
sub
popa
cli
and
mov
mov
mov
mov
push
inc
outsb
push
jl
mov
xor
jbe
loopne
jg
push
dec
push
or
clc
dec
ljmp
test
dec
sarl
sbb
iret
mov
imul
repnz
xor
out
test
inc
sbb
negb
inc
rclb
cmpsb
es
scas
out
out
xchg
test
xor
mov
cmp
push
sbb
and
stc
sub
stc
negb
xchg
cmp
xchg
and
hlt
mov
jmp
daa
pop
jo
pop
inc
dec
test
mov
mov
jo
fs
das
adcb
adcl
xchg
inc
cltd
jmp
mov
lret
out
data16
dec
xor
sub
push
or
push
dec
push
sti
clc
in
into
and
cld
sub
inc
cmp
dec
jg
outsl
inc
jbe
sub
cwtl
das
clc
lea
or
cmp
out
adc
pop
xchg
insl
xor
ja
push
cld
push
adc
lds
scas
ja
add
add
mov
mov
xorb
cli
dec
movsb
adc
dec
call
mov
and
cld
or
cmpsb
jmp
xor
adc
inc
and
mov
adc
xor
stos
push
imul
popl
je
and
or
jae
ljmp
fucomip
pop
adc
inc
lcall
adc
scas
xchg
imul
inc
sub
lret
xchg
test
jns
clc
inc
mov
lods
addr16
insb
and
push
cmp
sub
push
dec
mov
or
or
or
cmpsb
repz
xchg
imul
jge
inc
rcll
ret
jnp
arpl
cmp
gs
jmp
in
pop
mov
loopne
jecxz
popf
enter
xchg
aas
testb
mov
sbb
push
movsb
fisttpl
fmul
xor
dec
pop
sarl
mov
cmp
rorb
adcb
data16
addr16
xchg
add
test
leave
dec
rolb
jmp
xor
pop
pop
movsb
xor
inc
testb
mov
mov
sbb
mov
inc
sub
adc
mov
rcrb
adc
lds
push
xchg
adc
fisubrs
js
ds
leave
enter
dec
add
cmpsb
xor
lods
nop
daa
adc
xchg
mov
test
mov
cld
mull
jl
sbb
clc
sbb
lock
jmp
in
scas
xchg
cmp
jmp
inc
sbb
jo
xchg
lods
push
mov
jne
adc
inc
aas
fwait
out
cmp
inc
imul
mov
mov
insb
sub
push
push
xor
cmp
push
sbb
clc
dec
stos
pop
push
loop
push
in
dec
cltd
cmpsb
or
sahf
test
test
sbb
mov
push
les
cld
pop
dec
or
sbb
and
aas
xor
pop
jne
adc
les
inc
imul
cmpsl
add
nop
push
sbb
dec
adc
in
cmp
xor
in
sbbl
push
add
scas
jg
push
cld
xor
lret
mov
adc
push
mov
push
sbb
out
sub
push
imul
insb
addr16
int
and
loop
dec
imul
xor
dec
push
and
aas
cmp
push
das
dec
inc
pop
dec
movl
mov
or
into
sbb
or
xchg
dec
sbb
jns
inc
dec
push
mov
xor
cli
mov
push
or
das
sbb
call
push
jl
jge
mov
push
sbb
and
mov
push
push
mov
and
push
movsb
jecxz
and
rcrl
sbb
xchg
bound
adc
push
out
sbb
bound
int
or
add
out
dec
and
jg
fwait
movsl
jbe
ljmp
add
addr16
test
jmp
fwait
lret
in
outsl
out
and
push
pop
jo
outsb
enter
loope
test
movsb
in
clc
sub
inc
inc
stos
outsb
orb
or
aas
mov
jge
mov
sahf
mov
push
cltd
push
jecxz
aaa
mov
out
les
jnp
xorl
pop
pop
or
popa
pusha
scas
iret
sbb
xor
stos
scas
jno
or
shlb
adc
ficomps
xor
lea
in
push
outsl
xchg
fisttpll
loop
xor
dec
cmc
int3
lods
or
cmp
out
jg
out
and
mov
les
fistps
stos
sbb
adc
inc
js
das
fsts
sub
pop
pop
jbe
fiadds
shr
notl
cmp
aas
xchg
xlat
out
rcl
xor
movsl
mov
test
mov
mov
mov
jl
sbb
inc
fs
cmp
out
push
imul
test
cmp
jmp
lock
cmpsl
pop
mov
xchg
push
jmp
daa
mov
adc
cltd
mov
repz
outsb
mov
out
aaa
mov
inc
push
push
out
outsb
iret
ljmp
sti
sub
jp
xor
loopne
jae
or
sub
cltd
push
add
or
ror
mov
sub
cld
xor
fcomps
push
lret
mov
in
fstpl
scas
call
dec
ja
xor
negb
lea
sbb
out
sbb
daa
pop
pop
xor
mov
outsb
cld
jl
in
sbb
and
sub
mov
sub
or
xor
mov
shll
push
shr
sbb
addr16
sbb
adc
xchg
loope,pn
lds
gs
sti
in
sahf
aaa
push
and
add
xor
add
cmp
aad
mov
js
stos
cmp
cwtl
or
or
pop
push
sar
lock
jl
mov
xchg
data16
repnz
lock
inc
out
mov
fwait
jno
iret
dec
adc
iret
push
gs
push
cmp
cld
push
repnz
aad
fs
cs
loop
jecxz
stc
sbbb
cmp
ja
or
jno
jge
leave
push
repnz
inc
pop
sti
and
or
loopne
mov
imul
push
cld
xor
outsl
pop
and
fstpt
outsl
popa
cwtl
test
and
mov
mov
push
stc
call
outsb
clc
fisubs
cld
notl
add
in
mov
sub
adc
dec
push
ss
ss
cmp
cld
lahf
imul
imul
adc
fidivs
push
push
adc
fldenv
inc
add
mov
mov
movsb
mov
cmp
in
lcall
enter
decb
scas
scas
fs
sbb
enter
sbb
mov
les
int3
pop
pop
clc
cltd
push
jbe
test
push
dec
arpl
data16
test
mov
push
push
popa
sbb
sub
inc
icebp
sbb
pop
neg
dec
scas
push
xor
adc
inc
and
jmp
adc
scas
and
adc
xchg
and
or
lret
pop
les
clc
mov
pop
popf
jb
jle
xor
subl
data16
cmp
inc
outsl
lods
xor
les
adc
mov
sub
xchg
out
jmp
jg
loope,pn
gs
inc
mov
sbb
test
iret
jp
test
jne
aam
or
xor
lds
cmp
push
outsb
push
rolb
jmp
rcrb
add
mov
icebp
mov
dec
das
add
jo
ja
mov
fnstenv
jne
xchg
mov
les
adc
push
bound
and
xchg
mov
push
jmp
flds
pop
outsl
fs
test
push
lods
sbb
test
test
jmp
dec
iret
lea
pop
xchg
lds
ret
rolb
push
sub
inc
das
data16
inc
push
add
int
repz
outsl
loopne
in
or
roll
or
pop
jb
clc
cmpsb
inc
sub
mov
push
test
push
mov
hlt
push
cwtl
shrb
push
cld
sub
jns
js
lock
sbb
dec
cld
jl
adc
stos
adc
pushf
subb
clc
pop
lea
mov
imul
adc
mov
fdecstp
fs
imul
sbb
push
sbb
mov
or
iret
cmp
lock
movb
repz
adc
or
push
scas
xor
addb
scas
es
cld
or
add
or
mov
cld
add
ja
sub
pop
cmp
cmc
aad
xlat
test
mov
mov
jb
push
scas
decb
out
and
sbb
mov
cmpsb
inc
inc
cld
mov
pop
push
mov
xchg
add
or
push
mov
mov
sub
push
push
adc
imul
mov
adc
scas
test
fisubrs
iret
je
popf
inc
inc
lods
pop
dec
data16
push
and
add
inc
test
div
pop
stos
add
xor
sbb
xchg
jae
aad
into
fwait
sbb
scas
sbb
xchg
add
mov
dec
jmp
mov
jno
imull
adc
fistl
call
push
mov
and
les
cmpsb
test
les
add
aam
aaa
mov
add
jmp
cltd
add
pop
xchg
jo
jne
cld
dec
adc
pop
jmp
jge
jo
pop
sbb
or
test
aaa
cld
subb
stc
lret
add
push
jp
xor
rolb
cmpsb
movlps
xchg
outsl
inc
js
nop
jp
cmp
mov
outsl
outsb
lret
in
jb
out
cld
dec
lds
addr16
jmp
fisubrl
je
sbb
clc
sbb
push
inc
js
xor
lcall
aad
inc
ja
mov
cld
ja
lds
pop
cmpsb
mov
pop
adc
leave
sti
jb
ud0
mov
push
cld
out
lds
cltd
and
xlat
sahf
mov
dec
push
stos
in
lds
fidivrs
movsb
push
js
std
xor
mov
imul
pop
fwait
leave
ljmp
adc
or
xchg
adc
cmp
add
xchg
orl
fsincos
mov
out
mov
mov
pop
ds
fdiv
int
clc
insb
call
in
mov
jo
out
mov
mov
dec
sub
push
dec
adc
sbb
and
sub
stos
push
imul
mov
scas
pop
add
idivb
sub
js
push
outsb
pop
dec
sbb
cs
inc
scas
mov
push
xlat
mov
test
mov
ficomps
mov
imul
loopne
pusha
test
sbb
jp
sub
scas
repnz
pop
cmp
push
xor
adc
movsl
addr16
xchg
jbe
stos
aas
fs
xchg
push
js
mov
pushw
mov
imul
scas
aaa
xchg
sbb
nop
loop
int3
negb
mov
xor
ljmp
xchg
mov
pop
push
xor
iret
icebp
push
and
pop
lahf
sbb
cs
bound
cld
push
push
mov
aaa
mov
mov
mov
pop
in
push
sarb
mov
arpl
pop
or
push
push
dec
adc
cmpl
dec
adc
test
in
mov
out
add
js
inc
adc
cmp
addb
mov
jb
cwtl
mov
xor
jo
cld
mov
push
push
push
jnp
pop
pop
cmp
popa
push
aaa
js
xchg
sarl
dec
pop
adc
lds
pop
jns,pt
cwtl
pop
inc
dec
jo
leave
mov
divb
mov
ss
movsb
loope
xor
mov
sub
push
xchg
sahf
addb
push
sti
add
push
pushf
stos
test
pop
test
dec
mov
push
jge
push
incb
cs
sti
xor
push
mov
add
in
add
inc
insl
js
add
sbb
jmp
xchg
scas
inc
setne
push
rclb
loop
inc
xchg
repnz
adc
push
cld
pop
jp
sbb
add
jmp
cmp
add
or
dec
mov
or
insl
or
or
into
xor
xor
cmp
bound
jl
dec
cmpsb
inc
enter
out
jecxz
sti
fs
in
hlt
int3
and
sub
lock
dec
adc
xor
cwtl
inc
insl
adc
pop
nop
push
imul
lret
outsl
push
test
mov
ja
mov
inc
pusha
out
xor
nop
sub
cmp
out
ret
std
push
decb
aas
mov
sbb
inc
mov
xchg
stos
sti
mov
adc
cmp
xchg
sti
repz
adc
sbb
in
jg
and
pushf
pop
or
fidivrs
daa
test
push
pusha
and
lock
inc
es
jnp
push
xor
xor
sbb
xor
ljmp
les
loopne
jbe
cmp
mov
dec
movsb
imul
jne
out
jge
dec
ss
sub
lahf
cli
add
aad
lahf
push
sub
popa
cmp
repnz
dec
jnp
jno
call
cmp
mov
js
sub
rcrb
cltd
mov
adc
mov
lock
and
jns
xor
push
pop
mov
pop
pop
mov
xor
std
enter
inc
and
fidivs
in
mov
inc
out
pop
inc
shll
sbb
jecxz
xchg
or
int
loope
push
data16
inc
mov
xchg
mov
inc
or
aaa
inc
and
pop
sub
jecxz
xor
in
int3
mov
mov
rclb
sub
pop
lcall
aaa
or
and
iret
push
pop
push
mov
cmp
jbe
shl
push
jl
dec
iret
iret
sar
dec
cmp
decb
push
sbb
push
imul
in
or
mov
mov
lods
clc
push
and
stos
or
pop
adc
push
adc
pop
or
xor
and
pop
dec
mov
mov
in
lea
jne
bound
push
mov
adcb
outsb
push
scas
ret
cltd
insb
xor
into
jnp
in
dec
xchg
inc
mov
add
ljmp
pop
push
jg
stos
ret
jnp
sbb
jae
repz
mov
les
mov
sbb
jns
roll
inc
fwait
cmp
lret
sub
inc
int
pop
inc
dec
sub
ss
cmp
sub
dec
inc
jl
sbb
cmp
inc
in
sub
dec
cmp
cmp
fs
imul
mov
sbb
aas
daa
cltd
dec
fstpl
add
dec
pop
or
ds
cmp
sbb
je
sbb
sub
mov
scas
in
cmpsl
lahf
clc
lcall
cltd
jmp
ljmp
jb
and
mov
scas
cmp
mov
sub
cmp
es
adcl
test
lods
push
mov
les
sub
and
cld
jl
dec
xor
repnz
push
ret
int
ror
in
fwait
mov
push
popf
xchg
ja
in
das
xor
js
popf
lock
or
sub
mov
insl
aam
jns
rcrl
les
sbb
shlb
outsl
movsb
pop
lret
aam
in
aaa
cwtl
sbb
inc
add
imul
jge
imul
mov
jg
test
nop
out
jmp
adc
xor
cmp
dec
cld
pminsw
scas
pop
xor
lods
cmp
xor
adc
dec
je
popa
mov
lahf
push
add
sbb
xchg
push
cli
pop
sbb
jnp
in
in
add
cld
out
data16
fsub
push
in
lock
cmc
sub
cltd
imul
mov
fs
cmp
cmp
aaa
sub
in
xchg
cmp
push
ja
add
popa
xchg
push
sub
add
dec
cli
test
push
or
pop
std
pushf
sbb
xor
push
das
or
aam
xor
lea
fdivrs
gs
mov
jbe
add
aas
cwtl
push
mov
arpl
mov
inc
jl
es
nop
xchg
xchg
js
add
xor
iret
xor
outsl
or
addr16
mov
xor
xchg
loope
mov
lods
in
mov
sub
add
stos
into
ss
call
cmp
adc
push
popa
imul
cli
pusha
fimull
pop
xchg
mov
xor
stc
cmp
and
xor
fcompl
dec
dec
inc
stc
push
xor
nop
lret
mov
sub
fidivs
pop
dec
cmp
scas
mov
ret
addr16
add
insl
dec
int3
and
sub
dec
and
push
out
out
sub
cs
mov
js
lret
adc
call
scas
mov
pop
push
dec
fidivs
jae
xor
pop
pop
xchg
cmp
emms
js
mov
mov
push
sub
mov
adc
test
leave
cli
mov
push
jmp
push
lret
pop
jle
push
or
add
mov
popa
jmp
ss
sbb
jle
mov
sahf
cli
mov
lret
mov
mov
mov
scas
jb
mov
clc
leave
pop
inc
test
fisubs
inc
popa
dec
cwtl
jae
sbb
dec
decl
pushf
aaa
les
sub
or
mov
aaa
in
pop
push
cmpsl
sti
cld
es
jecxz
call
xorb
imul
inc
dec
incb
aaa
push
sbb
or
stos
pop
pop
sub
cld
or
iret
adc
or
out
xor
push
and
sub
mov
jle
ja
inc
in
jecxz
inc
push
cmp
int3
rcr
or
sub
dec
inc
in
outsb
jp
mov
jbe
mov
sub
test
lahf
adc
adc
call
sub
push
mov
out
push
enter
popa
push
xchg
sub
aad
add
fstl
scas
into
jae
push
cld
stc
cwtl
in
in
mov
outsl
imul
test
in
test
mov
xor
xor
sti
test
cmc
fdivrs
jne
xlat
lods
xlat
pop
mov
jg
sbb
mov
sub
jle
xor
and
mov
cs
add
xchg
xor
in
add
cld
jl
xor
mov
push
dec
sub
gs
inc
jmp
sahf
xor
out
dec
jl
push
xchg
call
cs
push
sub
imul
cs
addb
push
repz
xor
into
in
jnp
jp
jns
je
loope
sub
dec
fs
sub
cmp
stos
mov
arpl
in
lds
popf
xchg
outsl
imul
cmp
inc
dec
and
sbb
mov
xor
in
cmp
cmp
or
scas
and
popf
cmc
aas
cmp
push
jg
cmc
out
sbb
addr16
mov
in
jecxz
outsb
or
push
pmaxsw
in
push
cltd
push
iret
ljmp
rorb
inc
mov
push
pop
cmp
push
mov
push
inc
sbb
mov
sbb
lret
rolb
clc
ljmp
repz
push
mov
pop
cmp
pop
dec
pop
jnp
cmp
inc
mov
inc
mov
push
enter
pop
xchg
js
pop
xorb
test
cmp
push
sbb
out
out
fsubl
pop
xchg
jg
mov
cmp
jl
push
mov
xlat
icebp
dec
adc
loopne
repz
in
inc
pop
mov
test
mov
jecxz
jae
je
adc
dec
cwtl
jmp
int
cmpsb
push
scas
push
mov
das
sbb
int3
mov
cmpb
pop
cmp
and
inc
jb
lods
faddl
xor
cmp
mov
add
out
pop
lods
movsb
sbb
inc
scas
mov
mov
jl
test
and
incl
jb
mov
xchg
cmp
pushf
leave
cmp
scas
in
jns
mov
and
adc
cmp
lahf
mov
xchg
inc
mov
outsl
adc
iret
mov
cmp
adc
nop
pop
cs
cmp
push
nop
push
inc
cmp
in
pusha
jo
dec
call
loope
cmp
cld
or
add
inc
mov
mov
pop
inc
mov
mov
enter
pop
dec
clc
out
mov
in
push
sub
scas
pop
in
popa
test
fs
test
xchg
out
stos
sub
ds
stos
outsl
fisubs
stos
and
push
lahf
adc
mov
stc
jg
adc
push
xchg
push
out
and
pop
jmp
mov
scas
pop
adc
adcb
lds
loope
push
clc
aas
out
xor
mov
dec
mov
out
stos
mov
pop
movsl
mov
push
adc
jle
push
aas
inc
push
mov
push
add
sbb
inc
cld
mov
sub
cs
lods
stos
push
call
adc
xchg
mov
pop
std
cmp
push
fs
divl
dec
pop
mov
lods
imul
in
jecxz
mov
sbb
lods
xchg
cs
aaa
iret
sub
mov
les
hlt
ja
cmc
push
lret
in
fcompl
mov
aam
add
jg
mov
mov
and
popa
xor
sub
cmp
dec
mov
pushf
jg
push
iret
mov
adc
inc
in
cmp
leave
and
mov
mov
push
cs
in
push
dec
and
jo
out
inc
sar
adc
in
and
cld
in
cs
pop
cs
mov
jo
test
inc
mulb
dec
cmpsb
and
sub
lcall
jbe
push
cld
lds
je
sub
sbb
mov
and
scas
pop
cmpsl
sbb
push
sbbl
cld
daa
and
fwait
sub
xlat
and
xor
sub
fwait
dec
inc
decb
mov
test
aam
imul
mov
cmp
add
fistps
push
iret
mov
repz
sbb
jbe
xchg
fildl
out
cwtl
aaa
or
cmp
js
add
cmp
cwtl
mov
inc
inc
and
xchg
cs
sti
fs
cwtl
sbb
iret
cmpsb
mov
es
jbe,pn
sti
outsb
cmpsb
jge
popf
cltd
push
sahf
es
push
cltd
out
in
aaa
cltd
cmp
iret
es
cs
cltd
sbb
sbb
daa
cmpsl
imul
hlt
iret
cmpsl
cmc
lea
xchg
sbb
cmpsl
movsl
fs
sahf
cmp
daa
mov
sahf
arpl
daa
cmc
negl
or
xor
sbb
out
push
xlat
in
mov
aaa
push
mov
popf
in
sbb
ds
dec
sar
jmp
rcll
movsb
mov
sti
dec
and
push
out
adc
cmp
scas
and
aam
lahf
add
jge
push
push
stos
inc
and
pop
push
jne
sub
rcrb
and
xorl
mov
enter
je
mov
mov
icebp
pop
xor
xor
sti
aas
popa
add
fmulp
xor
mov
outsb
xor
hlt
sahf
stos
cmc
add
xchg
mov
mov
repz
cld
mov
sbbb
adc
loope
mov
mov
jnp
cs
stos
adc
enter
dec
jl
adc
into
je
fs
loop
mov
fnstenv
inc
xchg
and
sub
add
xor
and
mov
lds
xchg
and
lods
sub
push
jb
divl
xchg
adc
pushf
stos
mov
sub
push
or
sub
fs
fwait
pop
shrb
xor
xor
push
xchg
shufps
mov
es
test
insb
pop
dec
imul
or
xchg
jnp
jnp
hlt
and
lock
push
in
fs
add
xchg
fs
sub
pop
pop
ja
add
mov
cmc
stos
sahf
mov
outsl
cwtl
gs
movsl
loope
xor
repz
mov
pop
in
sbb
popf
inc
mov
lods
pushf
call
stos
inc
push
js
and
mov
js
test
mov
lds
push
pop
imull
fs
ret
and
inc
pop
in
push
inc
sbb
mov
mov
lds
andl
jo
sub
jecxz
scas
push
fs
jmp
jg
cmp
or
stos
inc
push
pop
aaa
dec
jle
test
jl
and
bound
pusha
cmp
data16
fs
push
ss
mov
out
jg
xor
pop
test
add
stos
push
jle
push
adc
outsb
or
sbb
ret
ss
std
sub
scas
pop
mov
test
ror
sbb
in
cld
jecxz
sbb
dec
mov
xchg
and
mov
outsl
mov
inc
lds
das
es
test
jmp
popa
dec
fmul
fnsave
sbb
jbe
sub
mov
popf
stos
push
ljmp
xchg
dec
pop
push
bound
mov
stc
fs
test
test
cli
push
mov
mov
std
mov
push
enter
mov
push
jle
es
push
scas
mov
mov
add
mov
cmc
sbb
pusha
sbb
add
adc
pop
xor
jg
jmp
test
sub
orl
mov
or
aad
xor
mov
sub
je
push
cmp
dec
mov
push
ljmp
popfw
lods
ja
out
xchg
mov
sub
fisubs
push
cwtl
xchg
jno
shll
adc
sbb
cmc
aam
inc
dec
mov
or
jb
adc
add
cmp
mov
sbb
sub
lahf
adc
jno
or
mov
pop
roll
cmp
mov
push
aam
lahf
subl
jno
jae
in
and
dec
mov
nop
push
and
cwtl
mov
pop
or
pop
lods
lock
cs
pop
add
mov
xlat
cwtl
call
mov
ror
mov
cld
js
bound
pop
fwait
mov
test
push
mov
add
inc
xchg
mov
xchg
adc
into
inc
jle
add
or
or
test
mov
push
jecxz
repz
push
cwtl
popf
mulb
push
jo
dec
push
inc
scas
repz
scas
pushf
cmp
push
dec
adc
adc
pop
cmpsb
xchg
xor
adc
mov
push
pop
inc
cld
mov
pop
or
loopne
or
add
int3
push
cs
in
or
cwtl
fwait
jo
scas
pushf
mov
pop
push
push
lcall
roll
lret
imul
sbb
mov
stc
and
cld
push
inc
mov
cli
xor
inc
aam
pop
sbb
mov
sti
inc
sbb
jp
sti
push
adc
mov
sbb
jb
pop
sub
jp
pop
dec
outsl
adc
jb
into
cmpsl
dec
xchg
js
fs
fisttpll
loopne
xor
es
xchg
fisubs
pop
push
mov
pop
mov
sbb
mov
xchg
and
cmp
aad
rolb
mov
add
cs
frstor
cmp
xchg
mov
jae
pushf
dec
fnsave
leave
cmp
jle
jp
sub
orl
adc
divl
sahf
cld
sub
mov
test
mov
push
testl
enter
adc
js
and
das
cs
ja
repz
dec
test
jo
adc
sahf
push
adc
cmpsl
xchg
fs
inc
insl
call
decl
popa
iret
jbe
cs
jmp
xlat
mov
scas
mov
push
or
pop
mov
pop
les
push
loop
repz
push
sbb
mov
mov
sub
mov
mov
push
pop
movsb
pop
rorb
call
or
inc
lock
scas
cmc
in
jmp
aad
cwtl
push
rcrb
xchg
push
mov
sub
daa
dec
lods
andb
stos
into
pop
mov
xor
adc
jnp
cmc
stos
mov
movsb
pop
outsb
negl
push
daa
jg
sbb
cmp
cmp
xor
fidivs
repnz
and
add
dec
add
hlt
adc
das
shrl
pop
sbb
sub
add
fmuls
add
cmpsb
ret
sbb
lock
outsb
sbb
imul
lock
push
scas
or
ljmp
mov
and
aad
mov
and
push
loop
ds
popf
lods
pop
mov
imul
xchg
jmp
inc
mov
repz
scas
cmp
xchg
pop
ds
mov
arpl
icebp
dec
into
add
mov
std
adc
adc
enter
scas
push
outsb
mov
sti
sbb
in
sbb
sbb
jo
ret
enter
or
push
mov
inc
mov
xchg
sbb
and
cli
sbb
mov
add
negl
push
test
outsb
sbb
or
adc
push
jg
cmc
outsl
sbb
mov
or
nop
pushf
mov
xchg
imul
ss
into
mov
or
les
outsl
dec
aaa
pop
cs
sar
loope
sarl
add
xchg
sbb
scas
push
in
movsb
cmp
out
bound
outsl
movsl
push
stos
push
jge
call
push
sub
lahf
inc
or
out
cld
sub
in
icebp
pop
test
scas
pop
cs
fdecstp
push
push
mov
jae
xorl
mov
imul
jns
dec
sti
mov
paddsw
lods
shrb
inc
imul
ljmpw
xchg
cmp
ret
mov
fldcw
lods
sbb
sahf
push
loope
loopne
inc
add
mov
imul
pop
xchg
adc
aas
and
sub
xlat
push
fstl
dec
xlat
test
je
push
ja
jae
stos
cli
hlt
inc
adc
das
xchg
test
dec
lret
sti
xlat
inc
sbb
outsl
fidivrs
pop
dec
push
xor
cmp
scas
jl
fs
pusha
jl
orb
inc
cli
repz
push
pop
stos
push
lock
mov
pop
dec
jae
push
inc
inc
mov
adcl
outsl
jno
jge
push
outsl
or
js
sub
mov
pop
cli
or
add
cmp
and
xchg
mov
aam
and
cmpsl
aam
jb
ss
mov
in
cld
lods
push
push
sbb
mov
jns
push
aam
pop
add
imul
daa
aas
rorb
imul
cld
dec
push
lcall
push
jo
leave
mov
outsb
aad
sub
fcoms
inc
mov
sar
mov
mov
repz
and
dec
dec
jb
iret
hlt
mov
mov
and
xchg
frstor
pusha
clc
in
add
adc
in
hlt
xor
jne
push
mov
or
imul
fs
movsl
mov
in
movsl
adc
dec
movsl
cmp
movsl
cmp
movsl
xor
movsl
xor
leave
fidivl
fisubrl
pop
repnz
clc
popa
lret
lahf
fbld
sbb
pop
xchg
outsl
lods
jecxz
sti
stos
loop
or
cli
or
push
in
adc
fisubrl
lods
mov
scas
ucomiss
dec
cld
popf
mov
lcall
aas
sbb
jp
adc
or
push
ss
sarb
add
push
mov
aam
pop
aaa
dec
jno
adc
cld
test
dec
repz
sbbb
dec
and
xchg
nop
sbb
cmp
mov
fstpt
mov
sub
dec
nop
mov
xchg
fiadds
push
adc
push
lret
sub
add
cld
adcl
mov
in
mov
fdivs
lret
lock
fisttpl
push
in
sbb
adc
push
dec
push
add
fsubrs
int
xor
adc
fs
inc
mov
mov
bound
scas
and
decb
sbb
pop
out
js
popf
imul
add
in
movsb
pop
jnp
pop
jmp
push
lock
aas
or
cmp
pushf
push
push
mov
mov
add
sbb
sub
das
subb
mov
xor
dec
sub
in
test
sbb
flds
fs
int
inc
sub
mov
bound
int
adcl
sub
pusha
dec
stos
sub
ret
cld
xchg
push
inc
xor
push
out
jnp
xacquire
inc
jno
pop
stos
int
push
test
dec
inc
inc
loop
popf
cmp
xchg
xchg
nop
inc
int3
jae
aam
xchg
aaa
mov
dec
in
push
jg
sub
in
mov
xchg
sub
stos
push
jno
mov
fsts
pop
pop
popf
inc
out
sbb
incl
pop
inc
cmpsl
dec
cld
sub
inc
jb
pop
clc
fdivr
xchg
stos
jmp
rclb
sub
ds
into
adc
push
clc
sub
cwtl
cld
mov
mov
outsl
push
ss
mov
mov
jecxz
push
cs
rorb
mov
adc
sbb
sub
mov
jo
int
stos
or
in
mov
mov
cmp
stos
mov
jle
daa
jo
js
pop
outsl
jg
jno
outsl
mov
mov
inc
pop
xor
int3
addb
or
push
mov
mov
sub
inc
rolb
sub
imulb
ret
push
jmp
jg
adc
pop
cmp
mov
punpckhdq
mov
lock
imul
sbb
scas
in
fs
or
fmul
xor
ljmp
cmp
stos
stos
and
pop
shl
loopne
pop
xor
sbb
mov
sub
pop
inc
cld
push
leave
push
hlt
dec
gs
scas
dec
cmc
stos
fnstenv
cmp
cmp
ja
pop
mov
push
out
add
test
inc
sub
sbb
xor
or
or
sub
stos
xchg
ja
xor
push
cmp
popf
add
test
dec
jle
mov
imull
dec
int
aaa
pop
xchg
test
ja
mov
push
jmp
popa
jle
sbb
push
xchg
mov
push
out
je
xchg
sub
in
push
sar
lds
popl
addr16
dec
xor
dec
push
cmp
pop
dec
ror
out
dec
mov
mov
add
fsubrs
lret
test
lods
lock
and
pop
inc
sti
mov
shll
push
inc
sub
lcall
ret
fs
pop
jnp
dec
enter
push
lret
rclb
out
sbb
push
pop
aam
push
sbb
scas
aam
imul
out
dec
inc
sub
adc
lret
xor
mov
inc
pop
push
mov
push
fcmovne
mov
cmp
inc
cmp
int
mov
pusha
push
lods
inc
fcoml
jb
jmp
cmp
push
sbb
lods
in
and
fs
add
sub
bound
jo
rolb
stos
mov
dec
add
fidivrs
aas
add
jae
subb
lcall
lea
iret
dec
xchg
dec
popf
in
mov
mov
sbb
jp
xchg
ret
push
es
cli
jns
dec
mov
mov
into
xor
mov
imul
sub
mov
mov
movb
inc
mov
pop
mov
push
ret
jbe
mov
add
push
lods
std
push
xchg
jle
bound
lods
or
sbb
fs
fs
mov
pusha
int3
cmp
xchg
fld
push
cmc
push
bsr
xchg
bound
int3
test
stos
sub
inc
je
sbb
dec
int3
cmp
fwait
sub
loopne
imulb
or
fistpl
push
xor
int3
movsb
jno
sub
fsubr
dec
iret
hlt
jmp
fimuls
dec
mov
push
mov
xchg
cmpsl
test
jbe
mov
lret
and
xchg
iret
dec
or
fs
or
add
lret
xchg
xor
cs
cwtl
aaa
aas
and
adc
mov
dec
jg
data16
in
sti
xor
and
sbb
dec
fadds
cwtl
cmp
fldz
out
sti
push
daa
cmp
or
inc
xchg
scas
pop
paddw
jno
push
dec
mov
scas
mov
cmp
xchg
jg
nop
xchg
jns
push
aaa
dec
loope
divl
popf
adcl
ret
push
lds
rclb
imul
or
xor
shr
daa
jae
cmpsl
inc
ljmp
outsl
add
cmpsb
iret
aad
dec
loope
hlt
ss
rcll
out
jmp
repnz
fs
mov
repnz
repnz
pusha
xchg
scas
pushf
jns
lds
lret
xor
jecxz
inc
fistps
push
cmpsl
add
adc
inc
mov
jmp
add
jo
jecxz
test
arpl
sbb
adc
repnz
dec
jb
xchg
aaa
clc
mov
clc
out
add
dec
sbb
mov
arpl
and
push
cmp
leave
jl
mov
bound
xchg
lret
movsb
clc
icebp
outsb
sahf
clc
cmp
dec
jp
cmp
sbb
pop
stc
pushf
push
sbb
xchg
icebp
ret
outsb
mov
cmpsl
inc
cmp
mov
lcall
inc
cld
pop
repz
enter
jle
sbb
fcmovu
shll
and
and
xor
ds
inc
push
jae
scas
push
dec
push
push
cmp
cmp
sahf
inc
sahf
push
movups
repz
jae
cld
mov
push
insl
xor
mov
push
lcallw
lret
popa
xchg
scas
fdivs
in
jae
enter
fs
fs
xchg
lock
cltd
leave
lock
lea
jle
adc
xor
scas
out
sbb
sti
sbb
or
not
dec
xor
les
std
popa
test
imul
popa
outsl
cltd
loop
sbb
gs
iret
int3
dec
pop
sub
test
gs
mov
or
cmpsb
xchg
stc
gs
pop
aas
jo
pop
add
dec
fs
in
nop
jbe
xor
fs
sbb
dec
or
adc
pop
adc
sub
imul
add
mov
pop
shrl
cmp
mov
add
shll
dec
adc
jl
add
cli
sbb
cltd
push
icebp
xor
mov
adc
arpl
sbb
and
mov
ret
orl
loope
dec
icebp
imul
jbe
push
mov
lods
ss
shl
mov
sub
or
sbb
lods
cmpsl
sub
xchg
cs
add
push
jno
mov
or
out
cmpsb
mov
test
xchg
rol
dec
hlt
test
mov
jle
pop
es
repz
mov
push
jno
xor
mov
jno
stc
cwtl
repnz
out
stc
iret
jno
mov
arpl
test
clc
int
fidivrs
or
dec
ljmp
push
scas
dec
int
sahf
xchg
repz
mov
push
call
add
cmp
repz
rcrl
fs
fisubrs
xchg
scas
movsb
push
jne
dec
out
dec
mul
js
ret
xor
jp
cli
jne
aaa
add
jns
jecxz
xor
jae
dec
xor
push
popf
push
lcall
and
xlat
imul
scas
xor
inc
mov
nop
xor
out
xorl
cmp
fldt
push
lods
test
dec
mov
jbe
je
push
mov
xchg
sbb
std
mov
test
hlt
cwtl
mov
pop
lcall
dec
sahf
mov
mov
shll
or
lret
sti
cmp
pop
sbb
nop
lcall
push
mull
shll
adc
in
sbb
bound
mov
adc
mov
adc
inc
into
inc
dec
push
mov
ja
mov
fisttpll
bndstx
ficoms
jp
xor
xchg
lds
ja
mov
imul
push
sub
pop
fstps
jbe
clc
push
aaa
insl
popf
and
call
in
cmpsb
rorb
call
in
mov
popf
ja
fisttpll
pop
hlt
insl
dec
inc
cmp
mov
dec
mov
hlt
jb
adc
lcall
insl
mov
inc
mov
imul
xchg
sub
hlt
pop
stos
jg
mov
lds
outsl
jg
in
push
cmpsb
dec
arpl
cmp
dec
mov
in
je
daa
js
cs
cmpl
roll
lret
lcall
sub
cmp
gs
inc
xchg
cmc
cli
push
es
pushl
sbb
fs
xor
leave
cs
lds
dec
vminps
leave
add
lock
bound
daa
xchg
jb
aam
lds
test
jbe
bound
cmpsl
es
enter
or
sbb
and
lds
add
std
sti
jg
in
in
pop
call
sbb
inc
mov
notl
adc
stc
cmovns
shlb
cmpsb
pop
or
mov
lods
push
push
jp
dec
inc
mov
inc
arpl
nop
mov
sbbl
cld
pop
xlat
push
rolb
outsb
sbb
cli
out
inc
fs
scas
adc
gs
push
nop
lret
cmp
das
sbb
add
or
call
jb
and
add
sbb
xchg
cmp
das
adc
adc
sbb
sbbl
loop
jge
cmp
arpl
aaa
ds
jbe
xlat
add
lret
push
pop
add
sbb
iret
cli
dec
cmpsb
ds
wrmsr
test
ds
inc
ds
idiv
daa
std
jb
pop
iret
jp
clc
xchg
jnp
insb
xor
push
xor
out
cs
adc
mov
out
int3
mov
add
iret
or
fdivrl
fisubs
push
in
nop/reserved
mov
dec
sub
leave
sub
pop
push
out
cld
push
addr16
idivl
imul
xchg
repz
dec
nop
pop
or
sub
popf
dec
adc
leave
or
call
fadds
fcom
mov
sti
sub
dec
mov
dec
js
push
sub
mov
cltd
add
push
insl
leave
into
dec
push
dec
stc
jbe
bound
mov
jle
pop
in
out
in
jmp
mov
and
clc
mov
stc
xchg
cs
cmp
dec
mov
sbb
mov
bound
xor
lods
adc
mov
add
xchg
in
repnz
add
outsl
and
add
cmp
jo
xchg
leave
inc
cmpsb
js
test
add
mov
or
mov
clc
cmp
adc
stc
inc
sub
int
mov
add
mov
clc
jb
int
add
clc
scas
push
cld
loope
rcrb
cld
add
push
cld
vmread
js
mov
mov
pop
int
popa
popa
mov
insb
sbb
fdivl
adc
sub
add
mov
fcom
sahf
push
stc
int
aam
aas
xor
fisubrs
leave
js
adc
popf
stc
jno
in
fisubrl
les
push
jp
stc
adc
je
mov
xchg
aas
xchg
push
stc
and
dec
stc
add
inc
outsb
inc
je
lods
add
inc
xor
inc
adc
cs
sbb
sahf
pop
sbb
sub
imul
and
xor
cwtl
stos
imul
add
jns
aaa
cwtl
or
dec
add
icebp
jo
mov
dec
sub
pop
pop
fstps
shll
xchg
push
xchg
push
and
dec
mov
aad
dec
mov
cmp
stc
outsl
popa
add
pop
dec
sahf
mov
push
movsb
jb
das
xchg
xchg
mov
pop
lds
mov
stos
mov
iret
popf
mov
push
mov
fstpl
lock
jmp
lock
arpl
mov
fists
fdivrl
rorb
dec
add
push
inc
xor
pop
mov
test
gs
jne
ficoms
stos
push
xchg
pop
fistpll
sarl
mov
data16
xchg
cmpsl
sbb
in
dec
xchg
std
cs
ljmp
cmpsl
mov
mov
push
push
mov
jg
jmp
xor
outsl
loop
xor
aad
xor
out
pusha
jne
rorb
inc
test
jnp
add
int3
leave
ficompl
jne
add
push
pop
pop
pop
dec
popf
ret
or
in
xchg
pop
mov
jg
dec
das
cs
mov
jg
cs
push
ja
and
mov
sbb
jg
imul
pop
loope
pop
cmp
mov
jb
arpl
mov
dec
aas
push
jne
out
and
in
out
stos
cmpsb
mov
inc
dec
pop
mov
and
cld
popa
cmp
xor
daa
ja
xor
and
fcompl
clc
pop
jp
xchg
pop
push
test
fs
pop
jno
dec
push
xchg
jmp
mov
in
sub
imull
notb
sbb
lods
cs
push
xchg
pop
push
into
out
push
mov
mov
cwtl
jl
add
jg
xor
cmp
mov
lcall
or
jl
inc
test
jl
push
xor
dec
mov
int
imul
push
dec
ja
out
jge
in
push
push
push
iret
pushw
or
push
xor
in
sub
fs
cwtl
shrb
cld
or
imul
pop
inc
addl
pushw
xor
pop
in
jmp
cwtl
loope
sub
rcll
jmp
fs
push
iret
insl
sub
mov
sbb
test
aam
arpl
movsb
xchg
pop
cmc
push
fs
aad
insl
insl
cld
mov
xchg
pop
xor
ljmp
fs
jae
mov
test
push
xchg
movsb
leave
aas
cmpsb
insl
dec
dec
cld
test
sti
cld
fstl
mov
and
pop
test
sub
xchg
bound
mov
jno
or
rorb
dec
jbe
pop
dec
cs
clc
scas
leave
pop
ja
add
stos
cld
and
jge
jb
fwait
xor
xorl
or
dec
jg
adc
push
out
cld
pop
push
push
jecxz
dec
push
cld
orb
divb
cmpsb
jp
dec
push
add
stos
and
pop
pusha
hlt
xorl
pop
bnd
iret
out
cld
add
sub
or
adc
jecxz
sahf
arpl
es
or
aas
mov
dec
pop
cld
sbb
push
stc
sar
sub
addr16
sbb
aaa
repnz
pop
repz
bound
push
lret
pop
lret
jg
ret
iret
jbe
lahf
adc
lea
sahf
mov
jp
bound
push
add
jo
sub
xchg
cs
icebp
pop
xor
movsb
int
fs
aaa
jno,pt
cs
push
out
ja
jg
mov
in
add
into
popa
bound
leave
fs
or
aam
bound
jo
stc
push
cld
adc
mov
cld
jo
or
shrb
iret
inc
sub
subb
pop
mov
cld
push
int
mov
outsl
fadds
sbb
mov
hlt
jo
stos
sub
aam
pusha
daa
test
pmaddwd
aam
cmpsl
pop
lds
and
lahf
jb
sub
pop
cmc
jmp
loop
pushf
pop
pop
jge
mov
pop
clc
incl
jp
ret
test
popa
jne
and
rcrb
jno
mov
pop
push
dec
jo
stos
and
pop
dec
hlt
int
in
jae
fisubrs
data16
or
cmc
rcrb
aaa
ljmp
push
push
pop
pushf
iret
out
and
or
cld
mov
pop
popf
jo
aad
xor
push
pop
ss
shlb
mov
pop
and
stos
pop
test
cs
pop
out
fmuls
dec
lock
mov
cs
div
lcall
lcall
cmp
mov
fildl
jb
sahf
pop
inc
mov
mov
pop
bound
cli
shll
lods
or
scas
add
leave
data16
int3
or
sbb
test
and
inc
add
jecxz
pop
dec
bound
add
sahf
rorl
fsts
xor
mov
pusha
jg
jo
loopne
sbb
out
aas
xor
insl
cmpsb
int
push
xor
out
mov
aad
jno
testb
push
jmp
xor
xor
mov
addr16
mov
sbb
ljmp
mov
lret
rcrl
push
repz
mov
adc
and
hlt
inc
jmp
clc
mov
out
call
into
add
push
adc
insl
cmpsb
loop
in
push
or
jl
pop
or
sbb
in
push
sbb
imul
std
cs
ficoms
in
ret
in
pop
popf
stos
jnp
xchg
push
cmp
lret
xchg
pop
adc
dec
jle
out
je
lock
add
cs
mov
in
lret
mov
out
shlb
pop
leave
jns
dec
pop
cld
stos
leave
fs
aad
cmp
lcall
insb
dec
sti
or
push
cltd
repz
mov
sub
sbb
pop
filds
decl
test
pusha
sub
dec
sub
outsl
pop
sub
pop
or
dec
int
out
inc
add
adc
ja
mov
jne
mov
cmc
out
test
sub
inc
inc
loop
mov
ljmp
cld
int
add
lods
faddl
sbb
in
cs
add
cld
pop
rorb
in
ljmp
mov
int3
testl
iret
ljmp
add
data16
xor
inc
xchg
dec
std
push
imul
pop
xor
subb
mov
cwtl
adc
push
xor
pop
add
pop
scas
lcall
data16
aad
pop
inc
jae
fcoms
cli
mov
pop
push
adc
xor
lock
jne
cwtl
fbstp
pop
addb
adcb
repnz
sub
test
scas
ss
xchg
mov
and
jnp
push
jmp
jmp
sub
jmp
lret
jmp
xor
dec
jmp
ficomps
jmp
xor
clc
jl
les
loopne
jno
sbb
lods
sahf
cmpsl
aad
addr16
add
push
fs
out
dec
push
outsb
imul
test
fcmovb
pop
into
lret
pop
fwait
push
mov
popa
scas
repnz
sbb
xlat
sub
outsb
mov
pop
je
loopne
imul
bound
add
inc
sbb
shufps
jae
lods
push
dec
imul
dec
popa
mov
mov
movsb
push
in
imul
xchg
cld
loopne
aam
call
or
ret
jmp
sbb
call
pop
ds
aam
inc
ds
imul
inc
push
shr
jo
dec
sub
xchg
jae
leave
int3
out
dec
dec
in
jecxz
dec
shl
pusha
loop
fs
inc
in
out
out
push
and
int
mov
flds
jle
in
push
enter
dec
mov
ja
jp
scas
es
stos
cli
sub
shl
mov
mov
scas
sub
push
and
jmp
mov
push
adcb
push
adc
push
sarl
call
mov
xchg
cmp
jmp
inc
xor
scas
idiv
mov
xor
inc
xchg
jle,pn
jmp
jo
scas
jl
or
mov
mov
mov
jmp
out
stos
hlt
inc
pop
fisttps
xchg
mov
inc
jg
add
int
aam
xchg
imul
icebp
cmc
pop
data16
mov
data16
push
cmpsl
and
sbb
mov
and
cmp
jmp
cmp
jecxz
mov
push
jle
push
and
imul
imul
ss
jbe
test
jmp
adc
or
mov
scas
mov
movsl
fwait
pop
dec
cmp
inc
jo
pop
dec
adc
push
cmp
pop
pop
and
aam
dec
stos
pop
dec
and
push
sub
inc
push
rorl
push
dec
sti
test
faddp
jo
dec
dec
add
add
jo
shll
jl
int3
add
outsl
xlat
dec
addr16
mov
les
enter
inc
mov
xor
sbb
pop
inc
jmp
add
scas
cmp
iret
xor
imul
rorl
mov
dec
outsb
fdivrs
outsb
xor
leave
out
jns
dec
movsl
pop
out
jb
bound
lahf
push
mov
push
stos
push
sti
xor
jno
test
ret
push
test
cld
cmpsb
out
push
pop
jp
cmp
jns
cld
jle
rcrl
jbe
pop
or
push
test
test
cld
push
pop
sbb
add
cld
pop
fimuls
aam
or
fstps
push
push
outsl
std
cs
outsl
jb
add
out
mov
pop
mov
mov
outsl
jne
pop
add
test
js
aaa
jne
pop
or
loop
test
push
imull
cs
in
popfw
inc
push
clc
sarb
cmp
xor
pop
mov
aas
xchg
push
dec
in
bnd
loope
dec
inc
js
shl
cmp
push
loope
cli
push
xchg
in
ficoml
xchg
jbe,pn
mov
in
movb
dec
mov
scas
or
mov
sahf
movsl
fldenv
call
aam
cs
mov
cs
test
sbb
lock
mov
cmp
push
faddp
pop
pop
mov
add
das
mov
xchg
arpl
jle
pop
sub
ret
and
xor
popf
out
sub
sub
jle
mov
fnstsw
mov
and
xchg
aaa
dec
pop
push
adc
lcall
dec
aaa
cltd
sbb
incb
sub
mov
xchg
dec
in
dec
inc
sbb
popf
out
scas
int3
jmp
out
arpl
xchg
icebp
and
test
inc
and
lret
in
xchg
sub
and
out
jl
cmpsb
push
mov
out
aaa
jbe
jp
in
sahf
jo
movsb
ds
and
scas
out
push
mov
scas
jl
adc
push
lods
sbb
pusha
push
jecxz
sbb
dec
push
in
addr16
ret
in
adc
clc
mov
loope
cs
test
test
cmp
xchg
out
test
imul
and
xchg
ja
sti
lcall
fldt
inc
inc
and
packsswb
xor
sub
es
xchg
and
dec
xchg
mov
in
jge
sub
and
test
pop
nop
leave
inc
ror
adcl
and
cmp
fcmovnu
fisubrs
aad
mov
pusha
vpavgb
pop
cld
mov
mov
int
dec
inc
rol
mov
jns
out
rol
cmp
outsb
movsb
cltd
sub
call
aam
inc
addr16
test
nop
ljmp
jmp
hlt
push
gs
sub
ret
jmp
pop
cs
inc
jp
dec
std
pop
stc
or
lea
ljmp
cwtl
push
xchg
inc
dec
imul
cwtl
lods
inc
mov
and
mov
push
aaa
in
cmp
push
xlat
das
in
orl
dec
cmp
dec
out
pop
cmpsb
test
ja
outsb
out
lret
mov
out
sub
enter
ret
mov
push
sub
push
lret
test
push
mov
dec
sub
push
xor
mov
js
sbb
xor
pop
push
cli
loope
cmpl
leave
nop
rorb
inc
adc
inc
cli
mov
test
sbb
clc
add
inc
fistl
mov
push
adc
adc
push
adc
in
nop
out
stos
push
push
js
push
fldl
add
sbbl
jae
or
and
mov
dec
xor
dec
cwtl
stos
cmpsb
insl
lahf
adcl
mov
cmpl
loop
xchg
adc
mov
jns
stc
aas
push
loop
and
push
fistpl
xchg
andl
sbb
mov
orl
mov
in
mov
cltd
jo
jae
int
dec
mov
decl
mov
sti
aaa
xchg
sub
loope
lret
pop
xor
cs
xchg
out
pop
xor
je
out
push
xor
inc
loopne
dec
out
int3
out
sbb
out
lods
mov
push
dec
cwtl
adc
pop
mov
ss
cs
bnd
pop
mov
add
loope
in
test
in
divl
pop
mov
stos
adc
pushf
fdivrl
dec
or
mov
jecxz
push
sbb
sarl
gs
sub
push
jno
scas
popa
or
jno
dec
inc
push
mov
sub
jns
pop
push
enter
shlb
mov
push
sub
and
inc
pop
int3
dec
in
mov
in
ss
sti
and
dec
sub
and
push
lcall
sub
cs
dec
jno
cltd
push
or
dec
xor
scas
push
jmp
lock
jmp
mov
dec
or
fcmovnu
in
ja
or
inc
lock
jae
pop
fwait
js,pn
pop
ja
cmp
and
adc
cmp
inc
and
xor
iret
enter
and
jle
fwait
cmp
mov
mov
scas
sub
sub
mov
scas
sub
data16
cs
mov
in
jg
pop
mov
stos
mov
sub
mov
arpl
push
sbb
stos
shlb
pop
stos
mov
pop
out
cmpsl
add
cmp
and
mov
pop
and
or
sub
loopne
stos
inc
aam
push
mov
test
pop
inc
dec
andb
dec
inc
addr16
in
into
push
cltd
stos
cld
sub
lods
xchg
sbb
jecxz
nop
ss
mov
outsb
dec
shlb
or
mov
in
pop
mov
inc
jl
xchg
aad
fs
xchg
add
push
mov
mov
fdivr
mov
cmp
aam
test
negb
pop
push
xchg
out
xor
jo
ja
pop
nop
xor
or
xor
push
pop
mov
sbb
enter
adc
mov
add
pushl
adc
or
mov
adc
pop
nop
cmp
push
cmp
jg
mov
xlat
or
push
add
ror
xchg
loopne
mov
adc
push
xor
adc
clc
push
dec
and
dec
adc
fisubrs
out
dec
popa
ja
lret
cwtl
in
cld
xchg
mov
cmpsb
cld
or
push
jg
mov
imulb
cmp
dec
rcll
fldenv
jecxz
addr16
xor
in
dec
sbbl
sti
lret
pop
les
dec
jns
jno
xchg
gs
pop
cmp
lcall
gs
test
scas
pop
ds
and
cmp
scas
push
std
shlb
jmp
add
jb
cmp
mov
mov
or
push
pop
xor
inc
dec
pop
sti
cld
xchg
jle
inc
jmp
lcall
xchg
push
mov
mov
aaa
test
jno
in
shlb
mov
add
dec
testb
inc
jnp
fmulp
jae
iret
jbe
adc
inc
in
and
push
loopne
sub
sbb
fwait
loope
and
xchg
cld
ss
cmp
cld
xor
stos
cmp
scas
fs
dec
loope
add
into
add
test
jne
ficomps
aaa
stos
pop
cmp
push
outsl
adc
dec
bound
cmp
lret
out
adc
cmp
lret
jl
xchg
jg
mov
mov
movsb
sbb
inc
pop
jae
pushl
add
sbb
or
pop
mov
adc
push
inc
push
dec
std
xor
loop
push
stos
ljmp
xor
int
lret
push
outsl
shr
sub
push
cwtl
xor
or
push
movsb
sub
dec
push
jnp
incl
cmp
and
fstpl
or
prefetchnta
cmpxchg
leave
push
mov
fstl
dec
pop
inc
cmpsl
fs
loop
lret
jae
ret
jp
pusha
leave
cwtl
jl
test
mov
or
fbstp
sub
aam
nop
xchg
or
sbb
push
or
xchg
bound
sub
cltd
iret
test
fmuls
push
sub
ret
cmpsl
mov
repz
dec
outsl
iret
loop
push
mov
js
push
jg
or
call
add
addr16
pop
call
and
test
mov
push
push
out
cltd
out
lcall
mov
out
jecxz
dec
jl
cli
inc
adc
xchg
loop
jno
movsl
xacquire
andl
jae
pop
iret
cltd
loope
push
pop
into
pop
cmp
pop
lahf
sbb
je
mov
dec
and
imul
sbbl
incl
daa
or
add
movups
inc
jo
mov
sahf
jecxz
mov
iret
jo
mov
out
aam
adc
and
jne
jo
push
nop
das
inc
dec
popa
pop
dec
pop
cmc
push
sub
pop
inc
jae
xchg
shll
ljmp
dec
aad
cmp
mov
mov
mov
movsl
repz
ja
mov
or
xchg
in
push
or
in
xor
cmp
xor
cmpsl
adc
addr16
adc
cmp
rcrl
rorl
dec
lock
mov
in
push
sub
mov
and
out
jno
mov
adc
lahf
les
sbb
sbb
aam
rolb
pop
or
adc
into
cwtl
xchg
jmp
mov
pop
aaa
stos
cmp
jp
adc
incl
xchg
pusha
stos
and
pop
jle
dec
loop
push
mov
pop
lahf
xor
xchg
mov
das
push
inc
lahf
shrl
add
push
or
push
imulb
cmpsb
mov
pop
rcrb
outsb
sub
outsb
jg
dec
push
cmp
pop
pop
mov
push
adc
adc
sti
iret
in
jl
mov
pushf
push
mov
dec
adc
cmp
pusha
leave
pop
decb
mov
pop
push
dec
push
sbbl
out
jne
pop
decl
push
mov
push
sub
jmp
push
pushf
out
out
ret
sbb
in
pushf
or
cld
push
dec
jg
push
adcb
pop
loop
pushf
sbb
pop
mov
rorl
push
pop
cmp
and
xor
test
xor
mov
sub
fs
dec
jg
cmpsl
and
inc
push
outsl
sbb
fdivl
out
sbb
out
and
jge
jg
dec
cwtl
nop
stos
push
dec
adc
adc
stc
popa
icebp
movsb
mov
adc
mov
adc
sahf
cmp
xchg
and
inc
ja
cmpxchg8b
add
jae
push
cmp
mov
repz
inc
int
cli
pop
fs
add
xchg
imul
das
jnp
jp
or
sbb
in
or
adc
mov
ret
leave
pop
scas
scas
or
cld
jmp
push
testl
adc
stos
shll
xor
or
sbb
in
and
xor
test
or
dec
mov
sub
aam
test
push
dec
or
stos
shr
cmpsb
fnstsw
sub
es
mov
cli
ja
mov
les
leave
arpl
ds
sub
fcmovbe
mov
nop
loope
sub
out
xor
pushf
dec
out
mov
in
rol
addb
stc
xchg
stos
into
add
xchg
jno
or
xor
xlat
mov
or
sti
arpl
add
das
push
pop
pop
clc
dec
das
pop
xchg
dec
add
out
mov
lock
xchg
lock
int3
sub
stos
cmpsb
mov
and
test
adc
mov
push
or
dec
je
repz
xor
rcrl
mov
push
sbb
scas
inc
cld
aas
add
add
imul
cli
xlat
adc
out
jge
test
jmp
mov
scas
mov
jp
subb
call
stos
mov
cwtl
dec
cmp
sub
loope
push
xor
lea
push
sub
outsl
xor
fcoms
pop
or
lods
lcall
daa
mov
xchg
sti
loope
adc
inc
lcall
fs
jp
ss
add
push
sbb
push
aas
dec
dec
inc
pop
into
repnz
push
pushf
xorl
jno,pn
sbbl
pop
mov
or
fs
rclb
xorl
xchg
push
cld
pop
adc
dec
out
xchg
test
sbb
jg
mov
push
add
or
or
push
cs
sbb
aad
sahf
or
add
jae
jo
ret
repz
jbe
dec
mov
cmp
adc
insl
adc
add
or
in
jnp
stos
fldenv
push
and
test
push
cmp
push
fs
pushf
aaa
adc
inc
inc
lds
lcall
inc
inc
mov
add
pop
fs
cmp
inc
adc
data16
cmp
sbb
cmc
jne
stc
insb
sti
push
push
repnz
fwait
pop
test
out
mov
push
sub
fyl2xp1
inc
mov
imul
push
out
movsw
or
jnp
notb
aam
lds
rcll
push
xor
push
mov
popa
push
pusha
push
xor
sbb
cmp
lods
mov
push
dec
popf
mov
add
sti
sbb
inc
xlat
mov
das
ss
cmc
xchg
nop
pop
out
add
movl
cltd
jl
xor
repz
call
or
add
sbb
mov
lods
mov
sbb
dec
jg
xor
push
fimull
push
and
mov
out
adc
negb
setg
mov
add
inc
push
xor
cmc
pop
jl
adc
sbb
ljmp
xor
sbb
ss
add
and
test
ss
and
push
pop
mov
add
sub
jmp
popf
adc
mov
stos
test
push
fs
test
pop
clc
adc
sar
dec
stc
push
push
lcall
inc
out
stos
outsl
push
sbb
jmp
push
sbb
insl
fidivrs
jp
div
adc
ss
ret
inc
cmp
sub
add
out
cli
ss
xchg
movsl
scas
rcrl
shll
xor
push
fdivrl
sbb
jg
jl
xchg
pop
sarl
outsl
cmp
push
dec
repz
daa
pop
lock
in
sub
or
aad
inc
sbbl
add
xchg
push
mov
push
das
xchg
ja
push
leave
jl
pop
ds
xchg
movsb
rcl
fs
sub
xchg
cwtl
into
fildll
xorb
or
sub
fwait
pop
push
popf
adc
add
ss
jp
jle
jnp
js
add
pop
test
mov
push
cmp
push
mov
jns
or
test
js
or
pop
rclb
pop
mov
dec
adc
jo
les
nop
aaa
inc
inc
jle
push
daa
adc
xor
sub
decl
cmp
cld
fwait
dec
inc
iret
test
inc
repnz
xchg
mov
jne
lcall
jmp
xlat
lahf
sub
pop
push
or
and
fmuls
mov
sub
xorb
inc
fs
pusha
fsubs
add
data16
out
sub
int3
scas
jns
cltd
hlt
test
sbb
or
jl
xchg
nop
jl
mov
or
loope
sarl
in
xchg
push
outsb
lahf
mov
pop
push
xchg
sbb
sub
mov
pop
sub
jns
adc
insl
cld
push
mov
rcr
xchg
lods
enter
sub
loopne
shr
outsl
cli
pop
mov
out
mov
jecxz
scas
fs
push
popf
cmp
jmp
mov
fistpl
push
fprem1
or
jmp
xchg
popa
idivl
cmpsb
aam
dec
rclb
sbb
enter
insb
pop
fs
gs
bound
popa
int3
stc
je
in
ljmp
bound
and
add
pop
pause
arpl
pushf
mov
sub
xor
dec
pusha
inc
mov
icebp
test
popa
inc
popa
stos
in
sbb
xchg
jb
xchg
push
lret
mov
cmp
sbb
js
cmpsb
sbb
dec
sbb
cmpb
pop
pop
push
setb
out
jno
lcall
mov
fdivs
xlat
push
std
sub
and
cmpsb
mov
jle
add
test
and
push
jbe
adc
push
push
jle
fidivl
fdivrs
insl
pop
xchg
push
jns
or
jb
stos
je
loop
aaa
jg
cld
or
out
cmp
lods
pop
cmc
stos
test
enter
push
mov
out
xchg
std
rep
decl
mov
add
cmp
push
push
iret
scas
cmp
push
hlt
pop
lods
call
adcl
inc
cmp
sub
push
lods
inc
add
jo
mov
pop
mov
mov
or
cmp
dec
popf
scas
sub
data16
sub
sbb
hlt
ret
push
aas
int
in
push
mov
pop
jmp
dec
dec
adc
or
mov
xorb
add
mov
das
pop
mov
or
sub
clc
add
xor
cmpsb
sbb
sub
iret
and
ds
or
sti
jp
cld
pop
roll
sbb
iret
pusha
fs
push
mov
imul
push
add
push
add
arpl
repz
push
ja
gs
xor
les
test
inc
out
cmp
inc
push
push
adc
sbb
test
in
pop
stos
jns
rcrb
push
bound
gs
stc
jno
incl
cmp
xor
call
fnsetpm(287
rolb
clc
cmp
rclb
leave
int3
out
xor
sahf
sbb
out
add
out
mov
out
jmp
notb
mov
cmc
pusha
xchg
test
dec
inc
add
sbb
pop
psrad
sub
stc
test
nop
cmp
jmp
mov
mov
icebp
dec
loop
imul
inc
ror
lcall
inc
jbe
jbe
out
aam
inc
bswap
out
cmpb
xor
inc
cmp
pop
mov
or
cmp
inc
dec
das
push
mov
popa
mov
and
adc
rorb
mov
sbb
mov
adc
sub
dec
mov
mov
add
insl
sbb
adc
mov
loop
ja
push
cmp
out
stos
pop
mov
sub
cltd
and
push
or
sub
pop
fs
xchg
lret
adc
out
dec
pusha
in
jecxz
pusha
shr
pusha
in
mov
pop
mov
inc
adc
bound
push
out
sbbb
push
and
loop
pop
dec
mov
dec
push
cmpsl
popf
hlt
repz
sub
mov
jns
int3
std
and
jg
dec
jecxz
fs
cmp
pushf
xor
sbb
cmp
sub
sbb
in
inc
cld
inc
cmp
dec
cld
pusha
out
fwait
mov
push
cmp
out
cld
mov
push
xor
mov
fcompl
int
inc
jbe
test
cld
push
add
xor
or
popf
cmpl
xor
pop
push
dec
jo
movsb
ds
and
fs
sbb
in
jp
cmp
push
cld
sub
xor
mov
xor
push
mov
dec
ljmp
jge
xchg
lahf
and
sbb
roll
xor
mov
jge
test
sub
out
clc
std
nop
pushf
jns
jb
movsb
fistl
push
xchg
jb
mov
push
sub
mov
xor
cld
add
add
xor
movsl
push
cmp
sub
sub
pop
imul
int
mov
cltd
add
jb
push
or
jae
mov
xor
xchg
mov
sub
into
sbb
mov
xor
test
push
and
stos
inc
xchg
shll
mov
adc
or
xor
clc
mov
xor
adc
mov
ss
xor
sahf
xor
jno
cmp
int
inc
jmp
je
test
mov
bound
stos
imul
push
jne
pop
cmp
push
push
dec
ljmp
push
ljmp
push
cmp
scas
push
mov
repnz
ljmp
xor
dec
fdivr
mov
shrl
adc
mov
lods
jb
or
adc
in
push
imul
loopne
imul
xor
jne
sarl
fwait
add
mov
out
imul
sbb
test
loope
imul
ljmp
scas
fs
fstpl
sbb
mov
lahf
mov
mov
mov
popa
cld
mov
addr16
mov
xor
sti
cmp
scas
fs
mov
jne
movsl
test
jno
in
cld
out
mov
cmp
cs
aaa
addr16
dec
out
or
and
mov
popa
rcrl
sbb
ret
mov
dec
jecxz
or
sub
mov
outsl
rcrl
sbb
ret
mov
dec
jmp
sub
mov
scas
ret
add
ljmp
je
aaa
fs
cmpsb
loop
int
mov
outsl
xchg
popf
inc
popa
les
imul
sbb
into
mov
out
cmp
mov
sub
cmp
push
cmpsb
inc
pop
dec
in
es
sub
adc
cld
xor
popf
into
int
push
es
clc
repz
jg
push
mov
sub
inc
cld
adc
cmpsl
js
mov
and
jecxz
or
cmpsl
adc
jbe
push
cld
inc
fiadds
lds
mov
les
subl
hlt
lods
add
mov
cmp
add
sbb
sbb
pop
xchg
jbe
in
cmpsb
orl
or
sub
ss
ds
add
sub
mov
xchg
mov
inc
cmpsb
shll
cli
cmp
lcall
sbb
and
mov
in
and
sti
cmp
dec
in
aad
sub
add
sbb
jno
imul
out
push
pop
xchg
or
testl
dec
adc
enter
mov
int
adc
or
test
movsb
popa
adc
dec
mov
and
test
mov
inc
repz
pop
lock
fwait
jge
adc
stc
int3
orb
dec
and
or
mov
int
or
and
adc
or
and
pop
xor
int3
cmp
bswap
jge
dec
es
lods
int3
and
cmp
in
and
and
inc
pop
in
je
and
dec
and
decb
jle
pop
sbb
test
stos
mov
mov
lahf
mov
repz
mov
roll
xor
pop
sub
and
cwtl
mov
lcall
sub
call
repz
lods
pop
in
fcompl
lret
adc
mov
dec
pop
outsl
lret
xchg
outsl
xor
inc
ds
mov
dec
and
mov
push
dec
push
jp
mov
lret
mov
jae
js
push
push
inc
mov
inc
pop
sub
xor
sbb
movsb
mov
xor
pushf
pushf
pop
lods
fdivrs
out
or
or
sbb
es
sarb
stc
push
add
pop
cli
push
pop
or
movsl
xor
out
jecxz
xor
xor
dec
cmpsb
adc
pop
mov
add
mov
scas
pop
nop
stos
jbe
xor
add
cld
subl
mov
pop
shrl
add
stos
and
loopne
mov
mov
cmp
mov
jns
jg
sub
mov
dec
rep
enter
cmp
sub
pop
mov
repnz
or
or
mov
arpl
pop
outsb
std
sti
fdivrp
aas
arpl
sti
dec
jmp
jo
xchg
ja
xchg
movsb
jmp
in
push
leave
aas
cmp
push
inc
das
test
lock
xchg
fisubs
adcl
adc
mov
cld
and
inc
inc
lahf
lods
mov
and
push
and
data16
adc
fidivs
xor
lret
xor
xchg
add
movsb
inc
dec
mov
gs
xor
mov
sub
mov
mov
sbb
clc
sbb
sbb
ss
mov
or
lods
sub
int3
and
addr16
pop
insl
into
inc
add
fbstp
mov
cmpsb
dec
jecxz
stc
sbb
xor
sub
mov
jge
cld
cmpsb
lds
mov
jge,pn
addr16
mov
sub
fucom
scas
cmp
cmp
xchg
push
cmpsb
push
call
frstor
or
dec
fnsave
pop
jns
lock
into
lea
push
lods
cmp
out
add
pop
sub
adc
pop
and
pop
mov
mov
bound
rol
jbe
jns
xor
ja
aam
lret
mov
lahf
je
adc
pop
xchg
sub
cwtl
jno
out
lret
mov
int
ffreep
adc
adc
popf
pop
aad
lret
rclb
inc
cmp
push
or
xor
or
cmp
fisubrl
sub
lods
xchg
lcall
pusha
movsl
dec
ss
inc
data16
mov
dec
mov
lods
rorl
adc
dec
in
sbb
lock
mov
push
cmp
dec
negb
cld
adc
push
std
mov
gs
jnp
cs
push
add
test
xchg
call
mov
and
xchg
add
leave
push
pop
loope
movsb
xor
push
in
shr
adc
bound
lea
aaa
dec
outsb
mov
stc
sub
es
imul
push
inc
inc
scas
shrl
cltd
jmp
les
jge
push
or
test
fdivl
xchg
enter
xor
xlat
xchg
ljmp
push
gs
pop
shrl
in
push
out
lods
add
pop
inc
jnp
jnp
incl
add
pop
dec
sbb
fs
push
pop
push
and
dec
cwtl
fwait
scas
aad
cmp
cmc
mov
arpl
shlb
sub
xor
psadbw
inc
arpl
ljmp
adc
mov
rcr
and
sarb
aaa
scas
stos
pop
push
mov
out
sub
mov
sti
xchg
repnz
loopne
add
dec
and
adc
imul
push
sti
add
push
jne
cmp
jo
scas
and
aad
sub
outsb
sub
add
push
mov
inc
aaa
push
arpl
int3
add
add
sub
or
sbb
cld
jo
jne
scas
mov
cld
imul
push
mov
or
outsl
jno
or
movswl
push
mov
push
inc
push
shll
sti
jge
shl
sbb
mov
xchg
in
lods
inc
mov
or
fs
push
aaa
and
pop
mov
sti
sbb
jns
std
and
xor
lock
sbb
stc
mov
pop
clc
stc
dec
push
add
jae
jg
inc
sbb
es
out
or
cmp
aaa
or
push
dec
sbb
cmp
or
hlt
pusha
mov
add
sbb
sub
stos
rcrb
xchg
jp
or
sti
clc
je
mov
jg
ljmp
pop
movsl
arpl
push
push
lea
sub
push
lods
push
arpl
inc
xor
push
or
add
out
js
addb
std
mov
or
test
jmp
seta
cmpsb
push
test
xlat
loope
imul
mov
mov
cltd
jl
cltd
jmp
daa
sbb
imul
or
es
sbb
push
sub
outsb
cwtl
popa
fnstenv
rcrb
ror
cld
mov
aam
out
not
xor
push
daa
test
or
ficomps
push
or
lods
scas
push
mov
push
sahf
fwait
int
cli
mov
xor
aad
pop
je
aad
sbb
adc
leave
push
lods
fwait
fs
pusha
pop
imul
sti
inc
fs
pusha
dec
pusha
inc
cmpsb
xchg
push
int
xchg
lret
ret
nop
push
mov
adc
aas
pop
test
fimuls
in
ja
das
cmp
inc
in
mov
push
aam
mov
dec
ss
shrd
test
jae
sbb
jnp
adc
cmpsb
adc
imulb
lods
mov
mov
push
jle
scas
sahf
jp
int
aam
pop
xchg
aad
aam
pushf
std
aam
repnz
jge
ss
mov
cmovnp
jo
js
js
xchg
iret
push
imul
sub
xor
popa
cwtl
fmuls
sbbb
cmp
sbb
pop
mov
push
push
cmc
mov
in
push
push
cmc
leave
push
cs
and
push
mov
and
enter
test
frstor
add
sub
leave
pushf
and
push
mov
pop
cs
adc
add
push
ret
mov
and
incb
aaa
inc
clc
jbe
pop
pop
andl
dec
in
sbb
push
add
rol
fmulp
ds
repnz
push
push
xor
jmp
out
int3
push
or
cld
mov
push
adc
adc
fwait
xor
cmp
movsl
or
lock
dec
adc
pop
fistps
ja
jecxz
mov
sub
movsl
and
pop
cwtl
int3
mov
shl
dec
cmp
dec
mov
pop
sub
xor
xor
push
jl
sbb
sbb
add
cmpsb
addb
push
sub
stc
andw
mov
rorl
push
mov
jecxz
imul
dec
sbb
data16
push
repz
sub
dec
sbb
cli
fstpt
fwait
xchg
lds
mov
scas
test
loopne
fidivrs
test
arpl
inc
jnp
inc
pop
dec
adc
pop
loop
int
or
pop
pushf
push
nop
fcmovnbe
cmp
or
in
and
pop
inc
xor
or
loopne
mov
aas
movsl
testb
dec
and
fistpl
push
shrb
push
js
cld
or
ret
mov
mov
out
jecxz
ds
movsb
jae
jb
add
cltd
outsl
in
loope
out
mov
pcmpeqw
addr16
lods
push
ja
setge
mov
inc
aas
sti
ret
inc
add
cld
fsubr
xlat
jmp
jg
sub
sbb
stc
xor
rcrl
cmp
out
repz
incb
leave
and
ret
add
or
sub
idivb
pop
nop
mov
pop
shll
test
xchg
sub
push
push
jne
inc
arpl
pop
xor
dec
insb
cmp
inc
inc
gs
sub
shll
movsb
dec
jge
dec
cld
add
mov
fcoms
push
sbb
rorb
icebp
pop
int3
sbb
pop
jg
daa
adc
imul
push
cmp
test
cmp
mov
bound
pop
dec
out
xor
sbb
cld
mov
push
xchg
cmp
fldz
xchg
loope
xor
mov
adc
inc
hlt
mov
and
push
ljmp
push
jl
sbb
ret
cmc
jbe
stos
pop
out
add
xor
into
mov
fldz
push
ss
cmp
in
mov
rorb
addr16
jns
xchg
pop
cs
push
mov
adc
xor
ss
cs
test
clc
sbb
ljmp
shr
ljmp
in
rcll
lods
ja
mov
movsl
xchg
mov
scas
int3
insl
pop
out
jecxz
sub
repz
test
cld
cltd
xor
sub
out
xchg
inc
mov
in
rclb
ds
out
dec
ficomps
cmp
add
pop
rolb
pop
fdiv
dec
mov
cld
jp
cs
pushf
mov
sbb
popa
cmc
fisubrs
mov
insb
dec
sbb
pop
cmpsl
sbb
adc
out
mov
jne
fucomi
sbbl
loopne
xor
cmovle
jo
cld
mov
mov
add
pop
pop
jecxz
imul
out
ret
int
out
xor
and
or
outsb
pop
jb
jno
stos
inc
out
sbb
fistpll
adc
adc
jle,pn
sbb
ret
xchg
dec
jecxz
cmp
inc
dec
push
push
jg
ret
fs
jp
dec
shlb
out
mov
push
jg
xor
sub
adc
js
fadds
jle
push
js
negl
std
addr16
cld
sub
sub
sbb
xor
outsb
dec
aad
push
dec
adc
cmp
jecxz
test
or
clc
fs
fsubrl
iret
jmp
fsubl
mov
sbb
mov
hlt
inc
adc
pop
sbb
sub
dec
in
pop
xor
push
cmp
xlat
inc
inc
arpl
jmp
shll
pop
cltd
loope
and
addr16
rcl
cmp
or
cmp
pop
lret
and
add
int
mov
mov
nop
sub
rcrl
mov
inc
sbb
outsb
stos
xor
push
int
popa
and
mov
jnp
push
push
fs
push
call
mov
int3
cmp
or
sbb
mov
ds
loopne
cld
loop
pusha
inc
call
push
push
out
pusha
mov
adc
js
cltd
pop
dec
js
std
int
incb
fdivrs
mov
xor
loop
xor
sub
mov
ljmp
test
xor
lret
in
xchg
inc
ds
or
arpl
adcb
pushf
sbb
psubsb
adc
out
stos
mov
push
dec
and
ret
sbb
cld
std
movsb
je
jl
dec
xor
cmp
leave
and
push
ficompl
fldl
cltd
in
jae
call
je
sbb
xor
fs
jmp
pop
gs
fs
fwait
lahf
popa
xchg
clc
lret
or
mov
or
sbb
stc
shl
pusha
or
daa
mov
pusha
jns
scas
repnz
bound
movb
mov
test
dec
dec
mov
inc
aas
mov
cmp
sub
pop
mov
dec
push
inc
sti
fstp
cmpsl
lods
negl
pop
dec
inc
aaa
inc
ret
test
movsb
ljmp
jbe
popf
ret
cli
xchg
mov
cld
dec
jp
adc
addb
sub
jno
cmp
pop
dec
add
out
int3
aas
and
bound
push
inc
in
ret
adc
dec
add
lret
test
addb
dec
decb
push
fs
out
rcl
lds
cmpsb
xchg
jge
popf
aad
cld
push
mov
push
sub
outsl
sbb
xchg
dec
jmp
mov
sbb
bound
mov
adc
lds
hlt
jns
sahf
dec
mov
movsb
and
push
xchg
or
xlat
lret
jbe
aaa
pushf
xor
sbb
xchg
mov
or
shlb
cmpsl
rorb
mov
fistps
xchg
je
jle
or
mov
enter
pop
mov
dec
je
std
addr16
test
push
jnp
push
mov
mov
sbb
cwtl
movb
je
dec
sbb
dec
cmp
popf
mul
pop
call
int
pop
jle
mov
bound
jmp
scas
push
out
xchg
sbb
insl
push
incl
cld
jl
inc
dec
incl
rorb
pop
shll
das
wbinvd
shll
test
lods
jl
and
inc
or
sti
aas
fs
ljmp
rcll
add
mov
dec
push
ds
jbe
fisttpll
aaa
and
shr
jns
addr16
mov
call
pop
out
sub
adc
push
hlt
repnz
call
orb
sub
in
mov
stos
adc
out
mov
jp
pop
dec
inc
and
inc
out
hlt
hlt
sbb
pop
fadds
add
stos
or
sahf
cli
jno
jg
adc
adc
mov
ja
push
lds
mov
pop
pop
int
scas
mov
icebp
pop
daa
xor
inc
jae
sarl
fiadds
cmc
adc
sbb
xor
rcl
sub
ljmp
push
adc
fimuls
iret
inc
mov
lcall
jno
mov
jae
and
cld
aam
or
mov
xlat
inc
test
into
and
les
scas
sub
push
in
dec
sti
mov
aaa
bound
out
les
inc
cmp
out
mov
push
stos
fcmovnb
test
mov
add
js
sub
nop
jmp
or
shll
add
stc
xor
nop
fisubrs
mov
shlb
stos
dec
inc
and
int
xor
pushf
aam
loopne
lea
jnp
dec
inc
aad
mov
out
data16
sti
push
xor
repz
rolb
mov
mov
mov
or
push
mov
pop
adc
sbb
lret
int3
add
or
lock
mov
rorl
add
lock
inc
jo
push
lods
add
jae
int
movsl
daa
adc
bnd
push
scas
mov
cld
ds
xchg
in
xchg
fnsave
enter
jle
hlt
cld
mov
pop
sbb
les
sub
int
iret
xchg
inc
cmp
mov
mov
cwtl
lret
cltd
test
mov
push
in
cmpsb
movsb
in
cs
inc
int
jns
inc
arpl
and
lret
loope
jg
dec
outsb
lahf
sub
int
mov
lret
mov
mov
xchg
jb
sbb
dec
int
leave
cmp
pusha
aas
nopl
mov
or
pusha
lret
js
mov
cmp
jb
les
ja
jmp
dec
adc
popf
cmpl
and
call
push
faddp
push
pop
fstpt
stos
jae
cmpsb
sub
sbb
and
rcl
pop
cwtl
ret
addb
stc
pop
adc
sbb
push
pop
xchg
mov
xchg
push
and
mov
push
ficoml
mov
jne
pushl
adc
leave
stos
sbb
leave
dec
push
mov
shl
mov
push
xchg
aad
adc
out
jle
dec
andb
sbb
push
xorb
dec
stos
repz
jecxz
in
add
lret
stos
dec
nop
out
or
sbb
mov
out
adc
or
and
or
adc
or
adc
dec
dec
xchg
mov
dec
int3
sub
sub
jae,pn
lock
add
xlat
sbb
dec
cmpsl
adc
sbb
xchg
adcb
dec
dec
pop
in
dec
cmpsl
mov
dec
cmc
mov
dec
imul
jno
inc
test
inc
cld
cwtl
and
cwtl
repnz
or
adc
pushf
xchg
test
es
into
js
push
sbb
or
mov
rcrb
xor
gs
into
lret
cmp
and
aad
jnp
add
lcall
add
cmp
daa
push
addb
sub
xorb
jno
xchg
negb
or
push
sub
in
divb
ret
xchg
sub
jno
imul
jge
orb
js
xor
dec
or
push
test
xchg
lods
jbe
cmp
jmp
neg
rcll
inc
clc
ja
aas
mov
sub
hlt
adc
hlt
add
mov
inc
cld
inc
lds
push
pop
or
popa
cld
in
das
inc
in
lds
out
push
lcall
inc
jns
jp
pop
aad
push
frstor
mov
cld
dec
jp
jns
jp
rcll
imul
cwtl
jnp
jmp
clc
mov
sub
push
inc
ljmp
clc
push
push
dec
push
inc
rorl
adc
into
icebp
pop
mov
popa
adc
scas
movsl
js
shrb
fisttpll
stc
jno
stos
test
ret
icebp
inc
xor
cld
cmc
jns
jns
incb
jle
aaa
adc
inc
lcall
cli
xchg
ret
in
fisubl
sbb
adc
imulb
push
cmp
mov
mov
jg
lds
out
mov
int
insl
mov
cld
push
mov
mov
jo
add
dec
and
stc
cwtl
test
mov
pop
mov
cmp
fs
jg
adc
dec
cld
xchg
jo
sbb
sbb
push
mov
sahf
enter
mov
popf
stos
in
pop
mov
in
xor
inc
mov
in
fidivrs
and
dec
sub
sub
push
rolb
dec
jg
cs
incb
inc
or
pushl
mov
loopne
clc
aaa
out
fs
out
or
insl
ss
lahf
insl
push
xchg
mov
push
rclb
test
shll
cmpsb
xor
scas
fs
movsl
sbb
jl
push
into
fs
clc
ds
jp
insl
aaa
pushf
adc
icebp
je
jmp
out
mov
mov
outsb
push
loop
jnp
test
out
out
mov
xchg
outsb
sub
out
jnp
fsub
out
std
cs
loop
jnp
jmp
out
out
sbb
lea
loop
mov
out
arpl
pop
xchg
sti
mov
sbb
jo
cmc
push
paddd
inc
aad
lret
xor
rcrl
sbb
push
cmp
cld
ds
cmpsb
andb
popf
popa
push
out
jne
ficomps
cli
push
sub
adc
xor
lahf
add
int
mov
arpl
or
add
test
arpl
rorb
push
jmp
out
fwait
add
sbb
loopne
jo
jmp
xor
dec
call
push
adc
mov
lcall
sub
adc
dec
imul
jl
pop
adc
test
test
in
push
in
in
popf
jbe
sbb
or
push
adc
jne
cmp
cpuid
scas
bnd
or
pop
in
adc
inc
or
push
xor
lcall
ja
popf
jbe
cmp
mov
add
push
adc
xchg
andb
shrb
push
dec
pop
cltd
pop
adc
je
in
pop
cmc
iret
js
pop
pop
sti
in
cmc
pop
cmp
pushl
hlt
rdpmc
cmc
jge
sbb
push
cmc
popa
into
jp
cmp
push
mov
hlt
push
into
outsl
push
push
xor
and
sbb
dec
ficomps
das
push
dec
push
movb
mov
fsubs
sbb
lds
imul
cs
es
ss
sub
jp
push
ja
sbb
jle
sbb
xchg
das
and
and
les
add
mov
insl
shrb
jecxz
into
pop
testb
push
pop
jle
imul
adc
cmp
scas
jge
bound
sahf
leave
andl
jg
mov
inc
out
hlt
loopne
push
hlt
jb
stos
lret
push
sbb
jae
pop
jg
ljmp
filds
push
pop
or
fucom
lods
out
imull
movsl
lods
sub
dec
push
pop
lock
sbb
out
jno
dec
clc
std
decb
jnp
and
push
gs
mov
test
xchg
gs
push
pop
pop
pop
push
fistpl
mov
stos
or
sbb
adc
jno
sti
ds
dec
fs
outsl
ds
pop
jns
rorl
jo
imul
fildl
imulb
jge
sub
lret
jmp
nop
in
lahf
test
jmp
lret
or
outsl
mov
and
dec
popa
in
int
jo
in
divl
jg
out
pop
out
imul
jmp
add
xor
orb
sbb
pop
lret
orl
mov
jmp
xchg
fs
insl
fs
add
mov
jle
mov
pop
popf
xor
movsb
insb
jmp
fnsave
jge
mov
fs
imul
pushf
pop
lret
subl
imul
lods
lret
push
stos
dec
dec
xor
dec
sbb
imul
push
jnp
inc
mov
xor
arpl
cld
sti
mov
iret
push
push
sti
jg
jle
imul
fwait
in
call
cmp
outsl
sbb
les
jo
and
and
hlt
lret
inc
inc
push
cs
testb
and
imul
call
push
xchg
ret
scas
dec
sbb
push
out
imulb
push
xorb
push
sar
sbb
call
fcoms
jg
sub
mov
into
xor
cli
pop
out
clc
stos
int3
push
inc
cmp
inc
xor
lretw
out
popf
mov
rcrl
das
sbb
lods
sub
inc
mov
mov
inc
xor
stos
xlat
inc
addr16
xchg
fldcw
daa
jmp
lock
ret
xor
cwtl
imul
xchg
stos
dec
in
jmp
sbb
aam
imul
pop
iret
xchg
or
bswap
shlb
ret
mov
outsb
xchg
test
aas
and
sarl
and
xchg
clc
lock
pushf
mov
mov
sti
bound
shrb
out
xchg
sbbl
xchg
jp
xor
add
xchg
jge
data16
mov
sbb
lret
push
sub
and
xchg
ficoms
cmp
bnd
orb
lods
ja
jne
fs
stc
sub
and
adc
cld
push
pushw
jo
out
mov
aad
sbb
push
das
fcom
pusha
xchg
cs
cli
sbb
or
divb
sbb
rclb
scas
rclb
std
vshufps
test
pushw
xchg
fld
scas
inc
js
adc
pop
xor
lea
mov
lahf
mov
aad
or
add
inc
inc
mov
lret
loop
cmp
sahf
pop
or
das
bound
sbb
scas
cs
xlat
into
addr16
jg
cmp
jbe
out
xor
clc
lock
out
mov
adc
xor
in
fstps
fcom
ret
dec
adc
xor
push
sbb
dec
inc
push
aas
adc
out
scas
pop
jo
sbb
daa
mov
adc
dec
lret
popf
dec
mov
outsl
add
sbb
in
push
mov
sti
lock
pop
jb
fsubs
dec
gs
fstpl
mov
pop
outsl
shll
cmp
lds
mov
pop
mov
cmp
in
lea
dec
pop
xor
cmp
jnp
sub
jns
xchg
jmp
in
xchg
in
psrad
popa
imul
sub
out
xchg
lods
cs
in
in
jo
outsb
fs
repz
nop
pop
jmp
aam
call
imul
sti
or
inc
test
cld
sub
ficomps
dec
stos
mov
mov
fcoms
call
adc
stc
decl
fistl
push
aas
popf
outsb
pop
daa
push
popf
test
xchg
sbb
sbb
inc
jle
std
or
xor
out
sub
add
xorb
mov
enter
mov
aas
xchg
negb
outsb
mov
aam
mov
popf
outsb
cmp
movsl
xlat
cmp
js
dec
push
icebp
mov
jg
movsl
cmp
das
mov
movsb
fstp
jle
xchg
mov
ficomps
cmp
adc
or
pop
addr16
int3
sbb
rcrl
push
jae
cli
aaa
imul
fisubl
xchg
ret
cli
sub
nop
push
aas
in
and
sub
mov
inc
loop
aam
xor
insb
cs
outsb
dec
sbb
ret
insl
add
test
jae
pop
mov
xchg
adc
dec
imul
mov
mov
stc
dec
jo
mov
adc
xchg
lock
and
stos
lcall
loope
test
push
in
shl
pop
cmp
sbb
lds
leave
dec
jne
adc
pop
xchg
cs
out
call
pop
jp
push
and
add
loope
sub
jp
fidivl
sbb
mov
pop
outsb
xchg
inc
std
push
fs
dec
xchg
pop
xchg
outsb
loop
sbb
mov
sahf
std
mov
dec
dec
mov
inc
addr16
ljmp
aad
cld
loopne
ss
xchg
xchg
jmp
js
shll
jae
jg
sub
inc
or
xchg
lock
mov
jno
jnp
cmp
stos
loope
lret
jp
dec
lods
jne
add
fidivl
ret
call
push
xchg
mov
add
dec
dec
adc
add
in
adc
or
cmp
stos
dec
andb
dec
in
jb
cld
test
cmp
js
fs
pop
mov
outsb
bound
mov
inc
fiaddl
adc
ret
gs
pop
aad
xchg
push
mov
mov
pop
adc
push
push
and
scas
mov
movsb
shlb
mov
sbb
or
mov
sub
inc
fs
popa
iret
data16
dec
and
jle
jg
sbb
or
pop
xchg
mov
pop
pop
pop
repz
xchg
pop
jne
es
push
cmp
rcll
or
jbe
push
paddd
sbbl
outsb
add
insl
cltd
pop
xchg
outsb
data16
popf
idivb
sbb
pop
xchg
mov
mov
push
nop
das
cs
add
pop
push
andb
inc
add
mov
aaa
mov
push
mov
add
negb
push
loope
fst
ljmp
sti
xchg
xchg
mov
js
pop
dec
mov
jecxz
adc
rorl
or
fs
pop
push
push
mov
mov
push
sub
cmpsb
dec
adcl
pminub
hlt
popf
gs
xor
mov
xchg
loopne
jns
add
outsb
sbb
bound
pop
cmc
in
push
enter
mov
lahf
pop
push
ja
fsin
ret
test
sbb
sbbl
pop
add
inc
addb
xchg
mov
xchg
or
rcrl
lret
add
sub
imul
dec
iret
mov
xor
xor
or
mov
xchg
dec
ret
and
inc
cwtl
data16
push
mov
lock
icebp
mov
sbb
adc
sbb
aad
push
in
cltd
out
psrlw
rcrb
xor
jbe
dec
imul
in
addr16
shrb
adcb
subb
adc
dec
scas
fdivl
sbb
or
lea
shll
sbb
push
out
or
dec
mov
cs
mov
push
xchg
ljmp
outsb
cmpsb
inc
dec
rorb
stc
add
gs
outsb
mov
jl
xchg
mov
into
iret
mov
cmp
gs
outsb
push
ljmp
dec
aad
xchg
repz
fs
fistpll
add
lcall
fadd
aam
inc
dec
subl
dec
inc
dec
lcall
adc
inc
hlt
mov
decl
nop
in
lods
test
mov
cmp
and
pushf
sbb
mov
add
adc
je
repz
pop
test
cmp
sbb
int3
outsb
adc
sbb
jmp
adc
sbb
sbb
push
jb
sbb
mov
xchg
out
sbb
adc
mov
xchg
fwait
jne
adc
push
in
fwait
sbb
cld
and
push
add
and
dec
out
in
cmc
push
cmp
adc
jne
add
jl
add
fimuls
push
das
xor
aas
inc
jg
js
call
stos
push
lret
out
and
jb
iret
or
or
cs
xchg
popf
xor
aaa
fs
in
jb
out
cmp
push
and
scas
in
test
push
mov
or
sahf
std
popf
mov
ds
lds
dec
mov
inc
sbb
aaa
jg
fwait
cwtl
xlat
mov
rorb
jmp
cmp
cwtl
cs
push
xor
movsl
add
add
ds
insl
int
stos
jge
mov
dec
shlb
lahf
xchg
es
leave
out
addb
ss
nop
ret
bound
and
outsb
mov
jmp
test
inc
pusha
pop
scas
push
and
cld
push
imul
dec
cmc
cld
test
cld
mov
cld
mov
pop
dec
mov
sahf
popa
les
das
mov
stc
mov
and
cmp
mov
jecxz
pushf
in
jge
sbb
icebp
pop
dec
in
and
rorb
cmp
insl
push
daa
in
movsl
sbb
in
test
nop
sbb
cs
xchg
jnp
sub
ret
bound
int
or
dec
call
inc
rcl
fistl
jnp,pn
mulb
inc
mov
mov
push
or
packuswb
loopne
test
lods
fcoml
inc
dec
dec
test
sbb
dec
aam
outsl
xchg
jl
dec
rol
cmc
push
dec
sub
scas
std
adc
dec
outsb
repnz
mov
xchg
leave
inc
dec
mov
pop
push
mov
outsb
loop
cmpsl
fs
outsb
push
push
add
test
dec
loopne
cwtl
aaa
add
das
clc
push
cld
pusha
fsubr
cwtl
and
jl
mov
cwtl
movsb
or
imul
cwtl
imull
in
addr16
pextrw
push
jg
pop
jns
dec
xchg
jp
jcxz
jne
mov
sbb
cld
dec
aad
clc
cwtl
imul
ja
sti
sti
sbb
dec
mov
push
test
sbb
add
clc
and
mov
mov
ror
inc
or
push
dec
out
mov
dec
lahf
push
addr16
push
ljmp
push
std
stc
into
mov
inc
pushf
in
loop
sbb
and
sbb
mov
jmp
cs
mov
pop
fcmovu
mov
push
adc
lret
add
mov
push
pop
sbb
adc
sub
push
jmp
pop
push
xchg
push
ljmp
fcmovu
fs
pop
sti
sub
movntps
push
inc
icebp
pop
dec
xor
sub
adc
test
jmp
fs
sbb
inc
jecxz
jg
icebp
cmpsl
mov
pop
adc
jl
sub
outsb
negb
cs
in
lea
or
lcall
repz
lea
mov
sahf
icebp
push
lret
jo
push
jge
jmp
pop
adc
cmp
inc
adc
decl
push
movsl
std
jecxz
xor
mov
mov
ss
dec
jle
mov
popa
aas
cmp
in
call
in
in
fwait
add
pop
and
dec
in
popf
xchg
mov
xorb
push
cld
pop
mov
fs
mov
push
pop
jb
mov
clc
xchg
in
insl
cld
ljmp
and
jmp
push
addb
add
fs
lock
pop
xchg
lods
add
dec
test
and
pop
sbb
mov
inc
add
arpl
test
push
pop
pop
or
fneni(8087
data16
data16
in
test
cmc
xor
xor
add
pop
push
in
jo
pop
pop
jmp
inc
mov
imul
pop
and
shrl
sub
iret
subl
xlat
pop
sub
out
adc
std
sub
xchg
rolb
dec
push
out
data16
les
ds
xor
inc
pushf
pop
mov
mov
sub
clc
in
decl
lods
pusha
jg
test
fldz
leave
sahf
test
ss
pop
add
dec
and
cwtl
cmp
xor
out
cmp
dec
adc
xchg
push
inc
mov
sub
sbb
pop
into
out
sbb
fadd
or
adc
ret
or
shrl
cmpsl
mov
sub
insl
popf
push
mov
jg
xchg
push
xor
dec
jecxz
sub
mov
inc
mov
mov
and
sub
cld
popw
sub
rcll
pop
in
add
inc
dec
mov
pushf
mov
aaa
push
pop
enter
sbb
cs
sbb
sub
jb
loope
subb
push
sbb
xchg
push
clc
js
jge
dec
cmpl
out
pop
movsl
jl
xlat
sub
int3
stos
sbb
sub
leave
ds
es
inc
scas
sti
movsb
and
add
into
ret
pushf
add
inc
loop
out
jno
sub
xor
adcl
dec
pop
xchg
icebp
cs
into
subb
jb
popa
iret
dec
push
sbb
or
mov
xorl
dec
movsb
subl
sub
cs
jecxz
sbb
int
mov
jecxz
push
inc
xchg
push
arpl
jp,pn
outsb
mov
sbb
gs
aaa
aam
in
iret
mov
stos
and
cltd
push
outsl
frstor
cmp
cmpsl
movsb
cs
in
ja
or
sbb
lret
pusha
cwtl
bound
jl
gs
lods
dec
outsb
mov
ss
dec
clc
outsl
cmp
repz
dec
jns
jle
pop
ret
mov
dec
aas
ja
push
ja
push
inc
mov
imull
lahf
js
pop
lahf
xchg
push
sub
fs
jmp
or
or
aad
mov
repnz
push
push
xchg
test
push
pop
out
fs
adc
lret
push
xor
outsb
fwait
test
pop
insl
xchg
test
cltd
int
cld
jns
push
fldt
jg
sbb
jg
mov
push
jecxz
mov
ja
jge
dec
push
inc
push
mov
jmp
mov
xchg
mov
arpl
hlt
jae
mov
loop
ds
xor
adc
stos
mov
mov
cmpsl
clc
jbe
sti
jns
shll
imul
mov
les
cltd
and
or
jbe
mov
mov
sbb
or
mov
jmp
mov
dec
push
nop
pop
arpl
and
mov
cmp
sbb
es
data16
jle
cmp
pop
outsb
loop
out
jo
jg
cld
ja
shrb
jl
jae
push
sbb
dec
call
inc
fs
into
stc
mov
mov
cmp
or
ret
lret
cs
push
ss
push
xor
add
xor
addr16
inc
sub
sub
add
xor
into
mov
adc
mul
cs
idivb
adc
test
dec
dec
xchg
add
cmp
inc
xchg
outsb
sahf
add
push
lret
pop
cwtl
icebp
mov
push
push
sahf
jbe
cmp
outsl
mov
aaa
stos
push
lods
mov
std
sbb
cmpsb
lea
outsb
popa
push
sub
add
ret
daa
mov
sti
xor
pushf
sti
in
lret
idiv
outsb
nop
insl
in
jo
iret
or
cwtl
cli
clc
mov
sbb
rorl
jle
mov
inc
dec
mov
sbb
sbb
mov
or
stc
into
shlb
xor
sbb
push
pop
mov
fwait
adc
pop
dec
imul
jnp
mov
or
clc
mov
sar
pop
lods
adc
mov
or
xchg
cmc
in
adc
dec
adc
xchg
add
scas
and
cmpb
push
xchg
mov
dec
lock
mov
push
addr16
jnp
cld
jle
sti
jge
into
add
jns
push
or
push
xchg
scas
je
push
sbb
mov
mov
iret
pop
mov
jbe
inc
shll
out
jno
jne
dec
pop
icebp
or
enter
imul
xchg
in
stos
or
shrb
mov
and
ror
push
fwait
xchg
jg
cs
or
cmp
lret
fs
sub
ret
cld
and
push
pop
inc
inc
in
shrb
stc
push
jbe
pusha
push
dec
push
dec
decl
sti
lds
pop
addr16
push
dec
xor
cmp
loope
je
cld
mov
lret
scas
nop
jmp
xchg
or
dec
push
pushf
mov
jo
rcll
pushf
mov
push
mov
adc
cmp
sub
mov
push
inc
fs
adc
xor
into
mov
or
loopne
cmpsb
sub
push
lods
push
push
pop
jl
gs
mov
aaa
out
cmpsb
inc
in
pop
cld
out
mov
scas
mov
fwait
lods
fmul
push
adcl
fistpl
test
push
jg
sub
clc
int
ds
int
stos
mov
mov
movsl
adc
or
popf
jge
in
dec
in
insl
and
repnz
cmp
sbb
or
or
add
xchg
in
xchg
push
xchg
addr16
cmp
jmp
sub
jp
fmuls
dec
dec
and
push
lcall
push
inc
test
xchg
sub
or
pop
push
jp
mov
mov
push
jae
xlat
xchg
lret
in
jg
sub
xchg
repnz
sub
call
ficomps
push
mov
cwtl
inc
sbb
mov
pusha
loopne
outsl
cmpsl
int
frstor
fisttpll
push
sub
pop
jbe
cmpsb
call
lret
pop
imul
mov
je
leave
cmpsb
dec
pushw
dec
xchg
mov
mov
inc
decl
push
in
aaa
out
pop
int3
cld
sbb
out
and
and
dec
lret
bound
scas
sub
xchg
pushf
clc
inc
pop
or
call
push
sti
push
inc
scas
out
gs
cmpsl
fdivp
outsb
xor
stc
or
fwait
mov
idivl
or
mov
mov
inc
fsubl
cmp
decb
inc
sub
fsubl
in
fmull
repz
dec
invd
pop
xchg
test
pusha
mov
push
aaa
dec
int3
out
sbb
adc
jmp
mov
out
es
test
test
jmp
test
mov
mov
out
push
push
jle
push
loope
cmpsb
scas
dec
mov
pop
pop
fisttpll
out
js
popf
stc
mov
sub
push
fucom
pop
xorl
dec
xchg
dec
pop
jle
cs
jp
push
popa
inc
iret
ja
pop
jns
mov
int3
or
imul
aad
stos
out
movsb
imul
imul
imul
cmp
sub
loope
int3
or
mov
inc
adc
pop
aad
aas
std
cmp
mov
je
lea
pop
stos
adc
loop
mov
in
in
xchg
push
enter
enter
decl
adc
rsm
iret
jecxz
roll
loop
sarb
mov
cmpsw
and
jg
ret
push
fldl
stc
inc
dec
mov
aam
pop
mov
les
push
dec
lret
adc
mov
sbb
sahf
add
jg
push
lret
push
insb
jl,pn
xchg
cmp
rorb
xor
dec
push
add
cmpsb
mov
push
loope
int
inc
jmp
or
xchg
out
je
ja
xor
push
or
dec
xor
cld
xchg
lret
or
pusha
out
inc
fnstenv
or
rorb
inc
jno
jae
dec
add
pop
inc
int3
dec
xor
pop
xchg
lea
xchg
mov
dec
sbb
sahf
xor
cld
add
sbbb
cmp
shrb
cltd
push
fld
xlat
inc
push
stc
inc
cs
sbb
dec
push
notb
into
js
xor
push
hlt
mov
mov
mov
jle
inc
fsubrs
in
jp
cmp
mov
in
imul
push
sbb
inc
xor
xor
sbb
shrl
mov
sub
bound
dec
shlb
out
ja
add
shl
mov
in
add
outsb
pusha
push
inc
sbb
xchg
sub
adc
jns
scas
add
popf
mov
cmpsl
out
mov
enter
dec
hlt
add
push
jecxz
mov
pop
fsub
xor
push
lea
ret
inc
imul
fwait
sti
repnz
mov
ret
dec
mov
addr16
pop
pushf
dec
mov
clc
ja
fs
sbb
js
lods
arpl
test
jmp
bound
clc
adc
loope
sbb
fs
add
or
xor
cmp
and
sub
pop
roll
pop
sbb
xchg
sub
pusha
sub
leave
pop
jae
stos
stos
cmpsl
mov
cs
cmp
mov
xor
int
mov
cvtps2pi
aam
pop
mov
mov
mov
mov
cmp
rcl
fldl2t
pop
arpl
rcr
or
mov
popa
adc
xchg
pop
push
ljmp
xchg
fcomip
xchg
mov
leave
clc
popf
xchg
add
scas
sbb
loop
pop
inc
es
lock
stos
call
js
pusha
sub
sbb
dec
popa
xchg
jno
lcall
movsb
mov
jg
js
pusha
popf
lods
shrb
push
push
sub
adc
ljmp
cmp
xor
daa
adc
nop
pop
mov
stc
push
cld
push
loopne
arpl
fs
xor
dec
ret
inc
pusha
data16
dec
outsb
adc
sbb
add
or
push
jl
dec
pop
mov
jae
test
movsb
daa
lahf
cmp
jle
test
test
mov
and
mov
cld
push
inc
cld
js
nop
dec
xor
test
lods
loope
rol
hlt
adc
mov
fisttpll
insb
stc
mov
rcr
mov
or
mov
imul
mov
add
sbb
cmpsb
or
jnp
bound
inc
pop
clc
into
call
inc
mov
rorl
adc
xor
negb
pop
sbb
leave
push
dec
pop
xchg
pop
movsl
mov
imul
ret
sbb
adc
push
adc
add
xor
aam
push
stc
test
or
sbb
inc
sbb
fld
sbb
jo
jecxz
mov
and
jg
and
iret
xor
jl
dec
das
inc
mov
inc
cld
outsl
xor
cld
xchg
mov
pusha
cld
xorb
jl
jge
inc
aaa
outsb
pusha
ds
fists
stos
mov
rcrb
fidivl
jge
repnz
nop
loop
sahf
sbb
fbld
ss
xchg
sbb
mov
ss
xor
int3
sub
mov
stc
or
jbe
movsb
outsb
sbb
outsb
push
adc
testb
sbb
ss
adc
push
adc
daa
in
add
sbb
and
cmp
ss
outsw
push
push
fwait
aaa
fsubrs
sub
stc
ret
frstor
gs
dec
push
adc
test
es
stos
pusha
add
adc
dec
mov
in
push
add
into
dec
out
xor
mov
jno
mov
cmp
jns
mov
adc
add
dec
jp
nop
sbb
xor
test
hlt
add
out
adcl
pushf
push
push
dec
test
pop
mov
mov
add
cmpb
loope
mov
mov
les
jne
stc
popf
and
in
lock
out
in
imul
cwtl
add
push
pop
popa
leave
mov
or
xchg
cmp
aam
adc
js
ss
cmp
jno,pt
dec
mov
add
add
cmpsl
sub
and
inc
sahf
mov
cmp
add
xor
push
pusha
push
cmp
js
cmc
cmp
or
into
clts
cmp
shlb
push
dec
out
xor
mov
lods
sbb
cld
lods
cmp
push
sbb
stc
in
cmp
cwtl
fs
mov
incl
mov
or
add
movsbl
cs
lcall
arpl
push
push
cwtl
lods
jo
mov
clc
jmp
cmpsl
mov
stos
jo
mov
iret
outsb
repz
scas
jae
fistps
inc
loopne
pusha
push
or
ret
mov
pop
fs
mov
push
mov
stos
lds
inc
pop
mov
into
cmp
stc
rcr
push
pop
pop
mov
imul
gs
fsub
mov
testl
jns
out
popf
lahf
adc
dec
sub
cmp
mov
push
loop
add
cmpsb
xchg
hlt
dec
cltd
out
jecxz
xchg
adc
arpl
push
sti
cltd
inc
enter
pop
pushf
mov
jl
rcl
pusha
push
push
sbb
lods
push
mov
ret
cmpsl
dec
sbb
lcall
fisubrl
dec
push
incb
ljmp
lock
adc
and
inc
xchg
fwait
inc
sbb
pop
mov
bound
mov
push
pusha
mov
xchg
pop
adc
popa
iret
sub
insl
bound
mov
cld
int
sub
aas
push
pop
push
sub
push
testl
testl
mov
push
or
in
movsb
and
outsl
cmp
leave
cld
jmp
xchg
xchg
xchg
sbb
pop
sbb
xchg
les
into
or
mov
mov
jo
jmp
xchg
lock
push
mov
sub
sbb
sbb
or
in
pop
inc
stos
mov
jl
test
jecxz
jl
fwait
or
lcall
rorb
outsl
js
addr16
mov
cmpl
push
mov
inc
out
daa
or
pop
inc
enter
xor
add
push
popa
cmp
pop
sub
daa
dec
cld
xor
pop
mov
jecxz
push
push
sti
inc
fs
push
repnz
pop
push
adc
ja
flds
lods
cmp
xchg
add
scas
daa
and
push
inc
sbb
add
cmc
sub
cmp
data16
clc
adc
adc
dec
lret
push
mov
inc
jl
push
xor
dec
dec
sub
xchg
outsb
popf
xor
push
test
adc
call
mov
pusha
dec
mov
jbe
cmc
pop
sub
into
cwtl
in
popa
xchg
andl
push
jne
push
adc
aad
jge
inc
clc
or
rcrb
cmc
in
mov
in
or
mov
frstor
jnp
and
leave
push
pushl
dec
mov
ret
rdtsc
leave
push
and
push
push
in
sbb
add
push
dec
scas
or
fadds
xor
shl
loope
pop
and
inc
inc
cmp
and
outsb
leave
jo
leave
cmp
cltd
leave
or
out
and
sub
adc
mov
les
jle
push
push
sbbl
push
call
mov
js
dec
frstor
fsubrl
fiadds
mov
mov
mov
mov
movb
mov
sbb
mov
xor
xchg
in
pop
sub
cld
lcall
adc
push
int3
and
jle
and
stc
adc
ja
cmpsl
loope
cmpsl
push
mov
push
faddl
fmull
out
pop
push
mov
outsl
add
adc
addr16
popf
popf
push
dec
inc
sub
dec
in
lahf
cmp
push
push
mov
data16
inc
push
in
data16
mov
mov
cmp
cwtl
es
jae
jne
aas
lret
data16
sub
jns
push
std
jg
xor
add
push
or
inc
shlb
in
test
inc
cld
lods
mov
push
xchg
shlb
sbb
fwait
cmc
lds
shlb
cmp
push
jno
mov
lock
cmp
xchg
adc
xchg
push
or
pop
jp
add
test
xor
int3
and
and
and
ss
push
ljmp
movl
cmp
setl
mov
dec
les
pusha
scas
ds
jge
repz
nop
in
jne
ds
jg
test
fmull
inc
aaa
xor
out
mov
push
loopne
out
jne
repz
out
pusha
xchg
scas
lret
fsubp
popf
hlt
xor
pop
js
stos
adc
xor
fcomps
mov
sbb
fs
outsb
stos
dec
leave
cli
jmp
mov
or
ds
push
test
lret
pop
sbb
dec
icebp
out
mov
mov
outsb
mov
gs
adc
dec
fistl
aam
sti
cli
cmpsb
lds
sbb
push
mov
push
adc
dec
pop
dec
outsb
loopw,pn
xor
dec
cmpsb
xchg
lds
adcb
fcom
cmp
gs
or
cmpsb
mov
xchg
sbb
ficoms
or
js
pop
inc
loopne
fbstp
cld
data16
pop
mov
jbe
push
daa
arpl
bound
cmovb
repz
push
push
out
lock
popf
test
cmpsb
mov
dec
adc
cmp
inc
jb
leave
mov
add
jo
leave
cmp
cmp
lcall
stc
js
jo
mov
jb
andl
popa
pusha
jg
mov
ljmp
pop
xchg
in
xchg
ds
push
hlt
sub
pop
rcrl
lcall
cld
adc
xchg
imul
scas
add
and
mov
addr16
sub
push
fisubrs
jb
adc
mov
sub
jbe
lods
mov
push
in
sub
inc
mov
out
add
mov
pop
rorb
jo
cld
add
iret
ret
jl
iret
add
dec
xchg
adc
movsb
in
repz
call
push
mov
rclb
jg
int3
out
lret
mov
jp
dec
nop
adc
ljmp
fwait
and
jo
data16
pop
bound
jb
mov
xchg
stos
push
push
imul
xchg
jo
jno
out
pop
cwtl
shll
add
in
shrl
int
sti
fs
adc
dec
in
inc
mov
xchg
ja
cld
mov
or
loop
push
cwtl
cmc
sti
std
enter
or
inc
repnz
push
cmp
mov
mov
xchg
lods
ret
xchg
dec
shlb
std
aad
adc
addr16
leave
js
aad
or
loopne
test
movsl
mov
push
sub
loop
aas
out
outsb
sbb
mov
sbb
ljmp
push
and
fstpl
add
loop
outsb
popa
inc
or
inc
sbb
mov
adc
inc
iret
fs
mov
mov
xor
pop
mov
mov
push
adc
add
ja
xchg
jg
adc
fdivs
xor
xor
add
aam
call
bound
mov
inc
inc
out
mov
mov
mov
and
xchg
jg
stos
lock
mov
shlb
adc
repnz
fisttpl
sbb
sub
pop
jb
imul
or
inc
test
mov
loop
stos
insl
pushf
out
jp
pushf
data16
jmp
add
clc
psraw
loop
jne
clc
sub
inc
lods
loop
sbb
cmp
imul
mov
adc
push
xchg
movsl
xor
jno
sub
jnp
ret
mov
adc
sar
sar
sti
pop
cld
scas
outsb
inc
in
out
cli
stos
fstpt
jbe
rcrb
aas
push
push
or
imul
ret
clc
xor
and
cmpsb
sbb
out
cs
aaa
subb
sub
cmp
and
xor
adc
cmp
fidivrl
adc
xor
popa
dec
push
call
cwtl
dec
xchg
dec
arpl
insl
orl
add
loop
inc
xor
dec
sbb
sbb
cmp
lret
shlb
ret
int3
rcrb
pop
pop
lcall
push
int3
sbb
adc
sub
mov
dec
adc
int3
inc
popw
mov
gs
cli
stc
mov
test
pop
leave
lods
adc
movsl
push
cld
and
call
push
push
jns
sub
loope
adc
fsubl
mov
xchg
adcl
sub
cmpsb
mov
ret
lret
push
push
adc
mov
sti
cld
aas
aam
in
dec
xchg
movsb
xchg
mov
les
and
mov
xchg
sbb
or
andb
dec
sub
inc
in
scas
pop
add
frstor
popf
lret
cmpsb
sbb
mov
lea
cld
sub
dec
add
icebp
push
test
adc
sub
dec
sub
xor
xor
jno,pn
mov
movsb
mov
dec
dec
dec
movsb
cmpsl
cmpsl
mov
sbb
xchg
adc
pop
add
xchg
lret
leave
lcall
or
pusha
pop
data16
test
and
dec
in
push
sbb
ljmp
jle
push
scas
repz
pushf
inc
fnstsw
sub
push
es
adc
mov
scas
mov
and
das
dec
fwait
inc
shr
ficomps
mov
mov
ret
stos
out
dec
mov
nop
xchg
mov
popf
xchg
xor
jae
dec
adc
xchg
adc
in
bnd
imul
hlt
js
xor
adc
mov
sbb
scas
mov
sbb
cmc
sub
dec
inc
inc
ficoms
bnd
cmp
imul
scas
sti
in
scas
pop
sbb
inc
sbb
clc
cmp
mov
aam
in
push
daa
das
push
push
pop
and
xor
and
pushf
das
xor
fmulp
cmpsl
sbb
xchg
xchg
iret
push
sti
sbb
cmc
xor
mov
pop
scas
jns
and
sar
cmc
imul
pop
xor
push
dec
adc
push
adc
pop
das
and
dec
sbb
scas
rclb
xor
shll
cmp
inc
inc
add
push
enter
xor
lock
outsb
fsubp
dec
in
call
lret
push
into
xchg
setbe
testl
inc
lods
mov
imul
lods
sti
fs
shrl
fcomp
ret
repnz
and
cmp
scas
push
jns
push
test
insl
in
push
xor
bound
xchg
sub
pop
push
stos
shl
sub
cmpsb
lock
sub
pop
in
cmpsb
sub
xlat
popa
pop
inc
sub
cmpsb
sub
push
sbb
iret
sub
cwtl
lret
call
pop
scas
inc
mov
ffree
repnz
rcrb
adcb
fnsave
stos
inc
cld
jp
or
sbb
in
mov
mov
cs
sbb
sbb
shll
dec
sbb
cs
pop
sti
addr16
pop
sti
xlat
push
mov
stos
cmpsb
test
cld
mov
andnps
adc
in
push
ja
insl
adc
mov
push
cld
mov
xor
bswap
adc
cltd
js
fiadds
loope
fwait
aam
push
shl
sahf
and
push
scas
repnz
cltd
and
pushf
sti
lods
insl
fs
rcrb
shlb
or
ss
pop
pop
xchg
jb
cmpsb
xor
adc
test
cmp
pop
push
jge
daa
push
movsl
add
cld
push
sbb
xchg
dec
xchg
test
mov
adc
adc
scas
push
push
scas
mov
xchg
xlat
dec
adc
and
fdivr
push
sbb
mov
and
shl
cmp
and
shrl
into
leave
push
rcrl
ja
shlb
loop
jns
add
fstpt
jg
sbb
aam
out
inc
jns
fimull
mov
call
int3
jp
push
outsb
pop
and
mov
mov
iret
sti
ljmp
xchg
adc
fwait
pop
inc
inc
dec
incb
inc
and
or
add
ljmp
cs
fiadds
push
mov
rcrb
xchg
push
lds
xor
cwtl
rol
jle
sub
mov
sub
aad
and
cld
xor
hlt
cs
push
xor
xor
cs
sbb
in
sub
clc
ja
outsl
scas
shl
mov
int
push
test
push
iret
or
lods
out
aam
push
ljmp
cmovns
stos
popf
mov
ret
sbb
out
push
or
or
xchg
cmp
jbe
mov
dec
inc
or
test
clc
out
gs
and
jg
adc
push
clc
pop
push
sub
xchg
push
cs
out
std
add
adcb
xchg
sarl
add
fldcw
popa
addb
sub
and
sub
imulb
in
push
mov
repnz
les
jne
sub
push
add
shll
mov
fs
or
mov
mov
out
jg
or
mov
mov
stos
jmp
xchg
add
outsb
xchg
div
into
std
lods
dec
aad
lds
dec
adc
cmp
lods
test
shrl
inc
xor
push
call
aam
add
movb
rcl
enter
jge
ja
out
and
pop
mov
xchg
xor
push
rol
sahf
jb
fs
jp
mov
outsb
pusha
push
outsb
clc
adc
in
xchg
pop
adc
adc
inc
jle
xchg
dec
jg
in
mov
call
xchg
xlat
push
or
dec
outsl
pop
cmp
out
sbb
inc
das
out
lret
cld
sbb
fsubl
lcall
jae
andl
ds
add
es
xor
test
jge
iret
in
movsb
cld
push
imul
adc
scas
pop
jo
jle
xor
out
fisubs
inc
jo
jne
push
and
paddusb
mov
fcomip
cmp
fnsave
jb
add
sub
dec
push
pop
stc
push
rcl
lcall
dec
lcall
add
sbb
int3
fs
pusha
sub
xor
mov
push
and
cmp
cmp
jbe
jl
xor
xor
push
ret
xlat
mov
and
lds
xchg
jg
adc
adc
into
adc
push
pusha
aad
mov
ret
xor
aad
pusha
cmpsl
add
push
outsb
xchg
data16
rorl
mov
loope
fs
stc
mov
sub
push
xchg
xchg
mov
mov
sub
fldt
jge
ret
into
inc
cwtl
mov
cmp
and
mov
lods
std
lds
xorb
push
mov
mov
lea
or
mov
cmp
popa
incl
inc
pop
and
pushl
vmread
loope
data16
js
or
xor
jb
mov
cmp
push
adcb
add
pushw
inc
lcall
xor
sbb
lods
fimull
push
adc
aam
sarb
lahf
inc
test
movsl
dec
xor
sub
mov
cld
test
adc
xor
scas
push
and
xor
xor
inc
or
stc
sbb
push
inc
sbb
scas
sub
movsl
adc
dec
xchg
dec
add
lret
mov
cmpsl
mov
and
adc
out
inc
sub
add
stos
inc
rorl
or
dec
mov
push
dec
or
push
fcmovbe
cwtl
push
lret
in
into
mov
add
movups
fidivl
dec
inc
test
pop
add
push
bound
fs
sbbl
sbb
pop
mov
pop
pop
push
pop
lret
push
or
lahf
nop
lret
xor
sbb
jle
popf
enter
adc
fs
add
pop
in
scas
sbb
mov
jg
lds
cld
stos
shl
pop
je
sub
mov
dec
sub
jae
leave
push
leave
icebp
ljmp
sub
pop
rcr
sub
pop
or
hlt
inc
pop
add
pop
loope
cld
fldt
pop
xorl
addr16
leave
sbb
inc
inc
cs
pop
cmp
iret
pop
sub
and
lds
push
add
insl
or
out
cmp
push
lcall
sbb
mov
mov
les
bound
sbb
shlb
or
push
std
pop
pop
popa
test
into
out
jge
scas
ficomps
push
in
fcom
push
xchg
ds
les
mov
std
fadds
mov
cmp
push
subl
lock
outsl
add
bound
jmp
adc
in
or
int3
add
sbb
or
mov
pop
adc
pushf
stos
je
or
mov
ficoms
mov
scas
sarb
and
sbb
or
pushf
add
outsb
and
outsb
outsl
ret
cltd
jle
xor
inc
pop
fldcw
cmp
lock
rclb
or
leave
loop
xchg
addr16
adc
stc
add
mov
dec
cmp
cmp
lret
outsb
adc
lcall
gs
cmp
fisttps
mov
and
and
cmp
scas
push
mov
icebp
xor
fisubs
sub
sti
les
aas
inc
cmpsb
inc
in
mov
dec
jmp
mov
wrmsr
scas
dec
fsubp
sub
dec
cld
inc
scas
les
dec
cld
rcl
pop
arpl
icebp
and
mov
out
lods
dec
cwtl
cmpsb
std
sti
popf
jo
adc
lds
mov
pop
cwtl
push
incb
pop
scas
jns
adc
pop
mov
mov
enter
data16
pop
outsb
and
push
xor
jp
adc
pop
imul
stc
dec
stc
push
inc
dec
xchg
inc
mov
clc
mov
jne
mov
jge
jg
sbb
push
out
pop
imul
or
xchg
sub
filds
add
pop
lea
scas
fistpll
fbstp
mov
inc
add
sbb
pushl
mov
testb
andl
adc
sbb
xchg
mov
lods
ror
les
sub
pop
push
adc
adc
ljmp
mov
enter
cltd
cwtl
and
xchg
mov
shlb
jo
pop
mov
rol
pop
pop
ret
cmp
or
dec
mov
ja
lgs
paddsw
inc
jns
dec
jmp
pop
pop
in
xchg
iret
popf
lret
and
iret
mov
dec
fsubl
push
sbb
lret
fcompl
mov
jl
mov
pop
jne
mov
xor
test
rcr
ja
cmp
aaa
add
xor
jns
repz
fcoml
dec
and
sub
cld
add
clc
add
pushl
and
ja
push
stos
dec
sbb
adc
push
adc
or
fs
loop
push
lea
cltd
xchg
psrad
int3
cmc
scas
lock
and
dec
mov
dec
dec
mov
rcll
in
outsb
lahf
popf
dec
adc
push
scas
and
and
aaa
jmp
inc
xchg
mov
add
mov
test
test
cs
int
adc
mov
daa
int
dec
in
mov
push
lret
add
mov
jnp
loop
jmp
movsl
sbb
jbe,pn
outsb
fidivrs
inc
xlat
mov
fsubr
cs
loopne
aas
mov
xchg
dec
clc
idivl
lea
shll
cltd
gs
sbb
mov
std
or
insl
pop
dec
pop
dec
xor
aad
cld
pop
dec
test
fmul
xchg
fildl
mov
jbe
sub
dec
cwtl
xchg
fadds
cmp
scas
addb
ds
ret
push
mov
jnp
stos
aam
sti
mov
fdivs
in
lds
dec
or
leave
ret
inc
out
inc
sub
push
call
aam
pop
push
xor
pop
fistl
and
sbb
mov
or
addr16
mov
mov
stc
pop
sub
inc
push
cld
inc
inc
pop
insl
pop
iret
jno
jnp
jbe
sub
push
cld
adc
dec
cld
or
dec
xor
mov
ret
pop
ja
dec
pop
pop
imul
bound
aas
pushf
call
inc
jae
jl
and
addr16
cmp
push
packuswb
xchg
outsl
push
stos
out
push
out
dec
mov
sti
or
push
in
cli
std
out
sbb
pop
xchg
add
mov
push
rolb
ja
ds
mov
addr16
inc
shll
sub
mov
sti
xchg
push
ffree
clc
fnsave
adc
movsb
cmp
mov
pop
fstpl
nop
mov
push
insb
rolb
sbb
push
hlt
add
pop
dec
or
sbb
stc
push
xor
sbb
movsb
hlt
push
bound
jmp
sub
cmpsb
jl
xor
dec
inc
cs
jb
dec
shlb
sub
and
xorb
cld
loope
xchg
shrl
or
dec
xchg
cmp
or
data16
in
aaa
dec
jbe
lock
in
loope
jmp
push
jbe
sbb
pop
or
out
xor
inc
cld
and
push
movsl
ljmp
dec
ret
pop
int3
loope
cli
push
pop
pop
cld
jecxz
pop
fcmovu
outsb
sbb
fs
add
push
xor
mov
push
jns
cs
clc
test
or
testb
fs
push
sbb
repz
dec
outsl
clc
push
add
std
lock
sar
daa
dec
out
jnp
fcoml
inc
jmp
mov
inc
mov
adc
xchg
add
xor
mov
sarl
jle
adc
cltd
pop
push
dec
mov
fnstenv
sbb
mov
fiadds
cmp
pusha
add
inc
mov
add
xor
addr16
js
add
ljmp
mov
add
pop
jle
addr16
aaa
mov
leave
stos
daa
sbb
or
lahf
les
adc
insl
adc
loopne
add
scas
mov
add
inc
imul
mov
and
and
orb
inc
cmpsb
in
mov
shr
ret
or
lcall
inc
jne
adcl
jmp
sbb
xchg
icebp
mov
pop
pop
cld
xchg
jle
addr16
inc
dec
test
test
popf
pop
shlb
fdivrp
and
mov
leave
cmp
out
call
ret
push
push
cld
sbb
into
jl
jp
les
mov
jmp
push
sbb
stos
sub
inc
mov
mov
inc
aas
aas
les
aas
xor
sbb
mov
mov
sbb
lds
call
push
xchg
mov
inc
jae
in
add
inc
pop
aas
scas
pop
pop
aad
test
sub
aad
xchg
and
mov
inc
dec
push
cltd
adc
int3
pop
lods
rcrb
lahf
jno
jno
xchg
sub
adc
push
mov
pop
cmp
leave
test
into
or
aam
dec
loop
shlb
dec
jg
or
and
es
push
mov
lcall
mov
test
ret
mov
addr16
cmp
iret
mov
and
inc
test
xor
loop
inc
add
lds
into
test
popa
aas
xlat
jae
rcll
mov
mov
pop
lock
movsb
and
mov
jp
pop
push
jb
test
movsl
lret
jbe
adc
lret
iret
push
cs
push
sbb
shlb
movl
sti
lret
imul
jle
test
pop
mov
jmp
dec
inc
mov
inc
dec
aaa
adc
dec
push
and
hlt
inc
inc
sub
jp
hlt
jp
aam
enter
lret
add
sbb
jne
pop
out
sbb
xor
test
ja
or
sbb
sbb
mov
test
js
cwtl
pushf
mov
dec
sbb
js
or
and
lret
rcl
clc
inc
int
pop
dec
push
push
adc
ret
pushf
call
leave
adc
scas
mov
jmp
cli
ljmp
fcmovnbe
inc
mov
popa
cs
push
and
addr16
dec
xchg
stos
xor
lock
push
scas
out
jle
xchg
sbb
push
mov
dec
mov
dec
fs
int
stos
daa
xor
dec
mov
adcl
mov
inc
dec
and
mov
and
enter
stos
jle
and
cmp
loopne
xor
inc
sbb
mov
xor
in
scas
shrb
rorl
pop
lcall
insb
or
test
push
mov
cmp
pop
enter
xchg
int
int3
aaa
in
iret
push
mov
xchg
push
mov
dec
mov
xchg
ja
fidivs
cmp
pushf
dec
cmp
mov
cmpsl
das
xchg
mov
lods
sti
test
jle
cwtl
out
aam
fcmovnu
mov
adc
jge
sarl
jecxz
int
cmpsb
repnz
stos
pop
inc
push
mov
sahf
jne
add
xchg
xchg
mov
adc
push
jmp
inc
cs
jg
shlb
mov
in
mov
cmp
mov
loop
or
movsb
mov
dec
jle
add
mov
inc
fwait
pop
pop
cmp
sbb
adcb
shrl
xor
ja
shrb
shrl
fadd
nop
adc
fmul
lods
mov
ja
data16
popf
dec
cmp
dec
xchg
aad
stc
inc
imul
popf
enter
out
aas
dec
add
xchg
cmp
ljmp
dec
es
mov
xchg
push
stos
push
in
dec
imul
push
sbb
inc
and
lret
mov
cmp
fisttps
sub
add
mov
fs
or
stos
pop
push
mov
lahf
add
cltd
add
into
lock
in
in
jmp
jb
insl
xchg
data16
pop
cld
daa
and
pop
nop
dec
ja
lods
cmp
js
aaa
or
xor
xor
aam
inc
movsl
out
push
insb
nop
hlt
fdivr
adc
lcall
add
outsb
js,pn
cwtl
jmp
push
cmp
jge
push
inc
bswap
xor
jg,pn
popf
pop
jb
mov
dec
adc
fs
or
adc
stos
xchg
lret
jno
jbe
mov
ja
push
iret
cmp
mul
add
cmp
dec
iret
aas
xchg
sub
lea
fwait
adc
scas
pop
iret
loop
jae
rorb
inc
popa
pop
sub
data16
cltd
dec
repz
add
adc
xchg
jge
mov
inc
test
test
pop
push
mulb
sbb
and
int3
aaa
ficoms
lods
dec
inc
cmpsb
xchg
mov
nop
mov
cmp
push
leave
int3
dec
in
and
cmpsb
int
mov
lret
xor
scas
int3
inc
test
push
mov
jb
jnp
pushf
xchg
push
out
sub
orb
es
pop
lods
mov
lret
dec
pop
pop
sub
xor
add
push
jno
sbb
inc
cmpsb
fcmovb
sahf
movsl
sub
repnz
pop
pushf
ja
std
xor
mov
je
jns
sub
mov
mov
or
inc
je
dec
jne
lret
mov
xchg
movsb
or
ljmp
ret
arpl
int
fistl
push
std
outsb
daa
xchg
mov
cs
jp
mov
insl
dec
push
sub
pop
mov
es
cld
int
sahf
fdivrs
cld
and
sub
std
sete
rorb
inc
dec
lret
leave
jge
xchg
fs
shlb
inc
or
inc
or
push
int
in
jge
pop
popa
inc
cs
pop
pop
loope
iret
cmp
pop
or
xor
jne
es
inc
inc
scas
sub
test
mov
repnz
sub
repnz
pop
ljmp
repz
inc
xor
repnz
and
pop
pop
cmpsb
loop
scas
push
fcompl
and
call
ret
insb
es
inc
fsubrs
pop
jb
stc
cmpsb
sbb
xor
sub
inc
decl
inc
outsl
enter
jb
pop
mov
bound
xor
into
adc
cld
pop
xor
ljmp
stos
lods
push
lahf
push
inc
repz
sbb
repz
mov
jb
nop
iret
jae
test
cmp
xor
and
cmpsl
jae
sti
sub
and
iret
sbb
test
push
call
mov
test
adc
add
inc
mov
lock
ja
popf
cld
pop
aam
arpl
push
fs
mov
pop
sub
lds
aam
inc
jmp
or
fldcw
fisubrl
ffreep
adc
push
mov
in
int
bound
mov
adc
and
pop
fnstenv
ljmp
inc
dec
stos
scas
pop
loope
jb
jmp
mov
or
sub
add
mov
cmpsb
icebp
xchg
aaa
icebp
loop
push
inc
inc
incl
cmovp
jb
jb
push
js
test
pusha
pop
imul
sub
dec
movsl
sub
testb
jle
sahf
shrb
cmpsb
rclb
jno
sahf
ja
push
cltd
push
jg
add
jo
sbb
dec
aam
stos
and
sbb
imul
ds
sbb
leave
cltd
sub
push
inc
dec
mov
in
cld
push
imul
adc
scas
pop
dec
add
xor
mov
jo
insl
dec
roll
fadd
jb
cld
aam
inc
shl
bswap
mul
pop
jl
out
xchg
jbe
iret
call
or
xor
jb
cmp
and
ljmp
jbe
push
jbe
xor
sub
xchg
shlb
addr16
pop
xchg
aam
shll
jge
push
imul
jbe
mov
sub
adc
inc
adc
mov
mov
imul
xchg
pop
divl
stos
ret
jp
movsl
mov
xchg
push
sub
mov
scas
pusha
cwtl
adc
in
sahf
jb
ss
push
fisubrl
cli
jno
bound
xchg
popf
fmull
out
jg
outsb
test
dec
movsl
cmpsl
adc
xor
sub
orl
ja
or
addr16
mov
pop
pop
aaa
add
adc
add
adc
test
or
or
fsubp
or
imull
sub
or
mov
cltd
or
push
adc
hlt
test
push
pop
push
cs
incl
and
jp
ss
sub
stos
mov
sbb
leave
je
add
dec
mov
mov
pop
push
add
sbb
cmp
scas
push
ret
pop
sbb
dec
leave
mov
cs
aas
clc
scas
aaa
dec
mov
in
inc
sbb
adc
imul
pavgb
cmp
int
js
rcr
sub
mov
lds
mov
test
js
aad
stc
or
pop
leave
jns,pn
inc
inc
lock
movl
cmpsl
add
and
jle
cli
mov
fsub
mov
inc
ljmp
mov
mov
or
jo
cmc
jmp
mov
mov
mov
ds
and
push
or
pop
dec
pop
inc
jb
movsl
inc
jno
dec
fistpl
aad
dec
inc
ret
pushf
test
lods
pop
ss
xchg
aas
mov
rorl
xchg
cld
jp
dec
test
sarl
sub
or
inc
dec
inc
cld
call
iret
inc
sti
jp
and
sub
pusha
clc
and
aam
push
fidivrs
xchg
jb
push
rolb
inc
out
cli
mov
sti
cli
push
movsl
push
add
shrl
push
rolb
sahf
dec
jp
xlat
stos
sbb
sar
xchg
test
jle
jp
sbb
pusha
dec
ds
stc
es
pop
ret
jp
js
jp
clc
push
lock
mov
inc
cwtl
mov
mov
rcrl
xor
leave
jp
adc
jecxz
jg
cli
cmpsl
mov
adc
pop
pop
cltd
push
jg
or
pusha
es
aaa
sti
dec
stos
cld
mov
mov
cmpsl
add
sub
push
sub
xor
mov
or
addr16
add
pop
shrb
cmp
pushw
pop
repnz
in
sub
add
pop
mov
add
mov
scas
in
cs
jnp
popf
aaa
push
stos
inc
push
jnp
and
jg
mov
mov
mov
loop
cmp
mov
push
pop
inc
cmpsl
outsb
mov
aas
dec
xor
loopne
outsb
sub
jnp
sbb
int
and
pop
mov
and
fisttpll
inc
in
mov
add
sub
clc
scas
sub
out
call
stos
push
jmp
ret
xor
clc
popa
mov
jmp
mov
mov
push
sub
clc
sub
sahf
xchg
or
mov
pop
xchg
js
ds
push
sub
inc
push
test
push
adc
dec
rolb
movsb
sbb
sub
in
movlps
lock
loopne
rorb
or
popa
push
push
gs
addr16
jae
in
js
hlt
add
fisubs
push
stc
fidivl
lret
or
bound
cmp
out
ljmp
iret
push
cs
mov
iret
cmp
nop
insl
insl
sub
pop
shlb
scas
call
sub
inc
aaa
pop
es
loop
roll
test
mov
fst
stos
cld
imull
ret
out
cmp
sbb
mov
pop
out
cwtl
negb
xchg
and
jnp
les
loope
jns
incb
sbb
push
je
sbb
cmc
adc
add
dec
add
pop
scas
out
jbe
inc
fwait
clc
fistl
inc
iret
pushf
adc
dec
push
xor
add
push
cmp
test
clc
xlat
ss
xor
mov
lods
pop
adc
pop
loop
dec
and
adcb
cmp
adc
rclb
pop
aad
pop
add
sbb
mov
mov
iret
into
add
push
in
rorb
mov
icebp
and
push
mov
or
daa
push
mov
loope
and
loopne
sbb
fwait
outsb
std
jge
jg
test
sub
cmpb
cli
cs
test
xchg
push
je
dec
std
jle
adc
jo
xchg
add
inc
sbb
adc
lea
outsl
dec
pop
cld
sahf
sti
aas
push
call
xchg
xchg
sub
call
cwtl
inc
shrb
inc
popa
mov
push
pop
gs
int
jnp
xchg
mov
sbb
jle
mov
leave
jmp
mov
imul
scas
and
scas
mov
or
push
cmpsb
mov
dec
dec
jg
leave
add
js
or
xor
cmpsb
rcl
aam
jnp
xchg
fwait
cld
mov
popa
jnp
or
leave
push
in
scas
cmp
popf
jnp
push
scas
pop
dec
aad
les
pusha
adc
and
dec
jge
pop
mov
loop
mov
adc
sub
mov
push
sub
cltd
xlat
movhps
jo
jl
or
ret
in
scas
cmp
sub
call
xor
scas
shl
cld
jl
push
in
in
in
ret
pop
pop
jl
cltd
xor
adc
fidivs
push
xlat
cs
pop
addr16
sbb
cli
push
int3
push
lret
dec
enter
mov
jmp
mov
mov
enter
imul
adc
loop
add
out
mov
into
je
jle
outsb
pusha
rorl
outsb
fnstenv
cmp
lcall
and
je,pt
or
pusha
push
decl
cli
push
jns
outsl
je
dec
test
mov
inc
enter
mov
dec
je
adc
push
orl
imul
push
shlb
shlb
push
fildl
movsl
xor
stos
sub
mov
out
in
sbb
jb
cld
and
pop
add
out
push
dec
bound
sub
call
testb
cmp
jae
jmp
push
outsb
jecxz
push
lock
mov
fsubl
dec
jmp
jnp
sbb
xor
pushl
adc
or
dec
sbb
and
aaa
xor
shrb
cmp
or
sub
inc
data16
mov
lock
iret
and
bound
jp
dec
scas
sub
push
dec
dec
in
test
inc
out
shlb
pop
cmpsb
loop
scas
pop
out
loope
push
and
scas
and
or
rorb
dec
out
inc
add
popf
test
xor
loop
mov
imul
out
dec
sbb
push
popa
add
add
mov
xor
xchg
sub
push
and
sti
dec
and
xchg
shr
sub
rcrb
push
inc
sub
cs
clc
cld
loop
inc
xchg
loopne
fcomps
in
fs
in
and
outsl
sbb
jle
in
mov
push
inc
mov
cmpsl
mov
mov
imul
ss
das
int
pop
into
adc
iret
in
out
jmp
pop
push
mov
pop
imul
adc
adc
fs
cmpsb
inc
cmpsl
std
mov
sub
fcompl
adc
cmpsb
adc
xchg
arpl
bound
scas
lods
jnp
push
outsb
dec
ljmp
dec
pushf
pushf
and
out
dec
and
ret
enter
inc
fists
inc
cmp
scas
nop
lea
jle
cld
cwtl
push
cmc
arpl
pop
jne
add
sbb
xchg
fstps
sub
cld
mov
pop
xchg
fdivl
xor
mov
jne
xchg
pop
out
jne
sub
ljmp
xor
imul
adc
cmp
xchg
mov
inc
cld
imul
fisttpl
std
add
cld
mov
or
stos
aad
add
add
xchg
pop
mov
inc
mov
pop
stc
out
mov
loopne
push
mov
xchg
xchg
dec
push
ret
sub
lds
sub
push
adc
fs
mov
push
mov
dec
dec
lret
push
pop
push
in
fcompl
out
iret
push
mov
and
aas
push
repz
dec
jmp
jp
aaa
lret
jmp
dec
pop
inc
je
pop
dec
dec
push
por
in
pop
sbb
iret
jmp
cmp
dec
jmp
hlt
adc
repnz
shll
pop
nop
imul
xchg
and
mov
imul
cmp
ret
or
test
in
int3
xor
js
shrl
and
and
dec
popa
dec
int3
dec
adc
in
imul
inc
incl
add
ret
push
cli
pop
mov
in
mov
or
sahf
fmull
aam
dec
loop
mov
sub
repnz
aaa
jp
out
xchg
xchg
iret
enter
call
iret
call
cli
fistps
ficoms
btr
ss
lcall
push
pshufw
dec
push
mov
shlb
push
add
push
sbb
ja
int
push
fists
int
popf
test
jmp
push
scas
sub
push
push
fdivrl
jmp
or
jae
cmpsb
jmp
and
imul
leave
imul
scas
jbe
cmp
inc
mov
pop
adc
repnz
pusha
push
push
imul
out
imul
imul
out
loop
loope
pop
out
imul
ret
push
fs
mov
jmp
cmc
mov
dec
lahf
es
sti
xor
cmc
out
sahf
inc
adc
outsb
pusha
pop
dec
dec
mov
insl
les
xor
sub
jmp
movsl
loop
loope
inc
inc
adc
dec
popa
xchg
lds
dec
inc
cmp
enter
push
dec
mov
adc
mov
add
sub
cmpsb
loop
mov
and
adc
je
xchg
cs
cmp
out
lock
dec
out
aaa
jge
out
lahf
jne
xchg
sub
ss
test
or
mov
aaa
adc
scas
cs
xor
stos
dec
outsl
loope
test
in
subl
cld
jno
lea
pop
pop
in
jge
mov
and
in
cmpsb
mov
xchg
mov
cmp
leave
stos
rcrb
pushf
imul
adc
dec
xor
inc
lods
dec
jne
xchg
dec
out
int
js
cltd
mov
out
jo
pushf
jmp
xor
push
inc
jmp
mov
lret
in
pushf
xor
jne
pop
bound
pop
decb
fyl2x
pop
xor
cs
inc
fs
mov
imul
pushl
stos
fistpll
push
leave
cmp
mov
test
test
stos
and
cmp
sbb
dec
out
pushf
movsl
enter
mov
cli
jle
sub
sub
xchg
dec
sub
xchg
xchg
out
in
outsb
xor
xchg
out
scas
dec
jmp
repnz
rcll
push
dec
test
xor
jns
aas
aas
sub
in
popa
fs
out
cmp
leave
inc
cmp
adc
scas
adc
aad
outsb
jecxz
mov
hlt
add
fimull
ficoms
xlat
adc
ja
out
xor
adc
and
adc
mov
in
cs
pop
and
jo
mov
xchg
push
sti
and
lahf
cmpsl
push
dec
fisubl
jo
push
jo
pop
scas
xor
aad
loop
scas
push
ja
aam
xchg
lret
xchg
adc
aaa
test
add
push
cld
jle
ds
adc
cld
adc
adc
cmpsb
repnz
jns
ret
or
xchg
inc
push
nop
dec
out
cmp
cld
nop
out
add
hlt
sub
movsb
nop
out
pop
xlat
imulb
nop
out
jnp
mov
adc
push
xor
mov
mov
mov
fisttpl
pop
adc
cs
jo
leave
mov
das
lret
pop
cmpsl
in
cmp
fs
mov
pop
ja,pn
nop
shrl
jg
mov
inc
add
dec
xchg
cmp
iret
xchg
pop
movsb
fnstsw
or
push
xchg
dec
out
pop
pop
fs
pop
xor
xchg
out
loope
fdivl
ljmp
push
dec
push
pop
adc
sub
pop
push
aad
cmp
adc
inc
bound
jo
movsl
cmp
test
dec
adc
add
leave
fsubs
pop
jmp
jmp
clc
loop
bound
lcall
and
sub
push
mov
arpl
add
lea
xchg
dec
out
stos
into
push
scas
adc
sub
mov
sub
movsb
pop
push
clc
into
nop
push
insl
dec
pop
loop
movlhps
test
test
mulb
out
inc
xchg
or
dec
push
pop
movsl
jp
jbe
inc
sbb
mov
arpl
aam
mov
jle
icebp
push
jle
lahf
cmpl
push
jl
or
adc
iret
xchg
paddusb
in
cmp
xchg
movsb
push
xchg
sub
xor
enter
sbb
in
mov
pop
push
jmp
incl
sub
cmp
stos
pop
nop
dec
in
push
cmc
cld
arpl
inc
or
mov
dec
add
loop
int3
fnsave
pop
scas
dec
cs
fs
pop
mov
or
imul
or
push
scas
sub
pop
pop
dec
out
push
jne
sti
in
leave
sbb
popa
cld
mov
inc
adc
mov
inc
xchg
loop
dec
push
pop
xchg
sti
in
dec
sbb
dec
xchg
adc
mov
adc
dec
aas
js
mov
ror
fisubs
adc
jp
ss
clc
jae
out
pop
popa
xchg
lahf
or
add
jmp
pop
aas
arpl
pop
dec
test
push
pushf
fwait
in
or
push
scas
sub
call
dec
scas
aam
dec
loop
scas
cltd
xor
push
pop
clc
dec
out
clc
in
aaa
jmp
cmp
or
pop
sub
jmp
dec
sub
scas
and
or
inc
dec
lcall
and
insl
xchg
xchg
jnp
jecxz
bound
js
dec
add
fnstenv
cld
mov
sub
adc
andl
aam
push
adc
push
icebp
cwtl
loop
call
lcall
iret
push
lds
movnti
int3
xor
enter
mov
out
xor
mov
loope
pop
adc
shrl
nop
sbb
pop
fs
xor
data16
pop
or
cwtl
aad
leave
sbb
sbb
test
mov
nop
sbb
inc
sbb
jp
cld
sbb
inc
fs
cmp
fwait
out
scas
push
jne
sbb
fwait
out
inc
loop
mov
cs
out
fsubl
or
jo
out
dec
dec
ljmp
rorl
cltd
sbb
cmp
call
cmc
push
iret
and
mov
int
loope
sbb
sub
dec
sbb
popa
ret
flds
repnz
mov
and
out
test
push
cwtl
cmp
mov
mov
mov
inc
jb
incl
cwtl
cmpsl
ret
sub
xchg
sbbb
dec
cwtl
and
inc
test
mov
vmovntps
in
test
xor
push
cmp
out
add
mov
sub
and
and
add
vmovntps
lcall
mov
mov
mov
in
inc
lds
cld
and
cltd
jb
pusha
cs
push
in
ret
or
cmp
in
cltd
aaa
lods
popa
popf
lret
dec
sub
adc
fldl
inc
js
push
dec
inc
push
mov
movsb
mov
cltd
sti
cld
daa
pop
cwtl
sbb
mov
mov
sbb
lods
jp
cmp
push
dec
xor
inc
pop
push
jo
pop
dec
sbb
leave
loop
bound
inc
jnp
jo,pt
ljmp
ret
sahf
out
ror
mov
out
adc
sahf
out
xor
fwait
inc
int3
iret
push
sub
pop
xchg
jae
xor
inc
and
iret
out
sahf
push
imul
jb
inc
dec
jo
je
sbb
movsb
pusha
add
cs
mov
decb
std
mov
mov
push
ja
and
inc
add
cmp
arpl
xor
adc
push
jbe
inc
add
scas
dec
mov
jl
fisttpll
dec
popf
cmc
mov
out
mov
in
mov
pop
stc
sbb
test
ja
fildl
xchg
hlt
sbb
cmpsb
cld
test
cmc
pop
stc
out
push
or
imul
dec
cmp
mov
dec
xor
jns
sub
dec
cwtl
test
sub
cs
pop
pop
scas
mov
int3
das
stos
fcom
std
cwtl
ret
ss
js
jg
jmp
mov
pop
adc
popf
pop
ss
add
adc
movsl
jmp
sub
or
pop
fwait
aaa
xor
xorb
sbb
mov
pop
repz
jae
mov
or
lds
add
pusha
xor
jg
enter
movsb
push
sub
les
cmc
lret
sub
dec
or
fmuls
rol
fimuls
sub
mov
pushf
movsb
daa
add
jns
mov
lret
test
sbb
jb
jl
cmp
test
addr16
cmp
lcall
sbbb
cmp
lds
add
out
mov
adcl
push
pop
pop
xor
jp
adc
push
and
xor
scas
mov
adc
mov
sub
clc
xchg
shll
pushf
adc
fs
adc
dec
mul
int3
stos
icebp
adc
or
test
lea
xor
ljmp
mov
cs
pop
cmp
sub
sbb
hlt
mov
pushf
jbe
insl
out
lea
mov
xchg
adc
mov
lea
sub
cmp
or
inc
inc
mov
jge
lret
mov
movsb
mov
popa
dec
sub
ds
dec
fistpl
mov
push
pop
jecxz
mov
inc
sti
push
dec
test
or
subb
push
ja
inc
ds
mov
sti
stos
movsb
cmp
push
sbbb
dec
loop
rorb
sar
movsb
and
imul
dec
orb
add
jb
sub
bound
cld
mov
dec
ss
inc
call
mov
ficoms
jnp
test
inc
add
push
mov
cs
inc
sub
mov
lds
popa
sub
or
bound
mov
jno
inc
cld
inc
in
add
pop
movsb
das
mov
cs
cmp
mov
ss
stos
sti
pop
and
mov
and
jp
dec
cmpl
dec
xorl
sbb
scas
sub
addl
je
adc
jp
dec
add
add
insl
pop
stos
add
sub
pop
jg
jp
imul
sub
push
jo
leave
push
cmpsb
xor
cs
jae
ret
subb
sbb
xchg
jp
fs
xor
scas
sub
inc
dec
jecxz
clc
loop
dec
insl
or
aam
in
jmp
sbb
adc
enter
cli
dec
sub
stos
add
mov
mov
movsl
cmpsb
loop
mov
les
dec
mov
scas
ret
xorl
fs
sub
add
xorl
inc
add
orl
cmp
cld
push
pop
jp
leave
subl
add
cs
jp
sti
insb
dec
scas
mov
dec
mov
add
mov
in
dec
push
inc
push
add
in
scas
jg
inc
mov
dec
sub
repnz
inc
aam
pop
cmp
mov
add
lcall
push
jle
mov
cs
shr
imul
mov
mov
in
imul
out
cmp
lock
js
leave
clc
in
stos
lret
add
addr16
xchg
mov
xchg
and
push
cs
xor
mov
nop
pop
test
pcmpeqb
push
out
ret
push
jae
movl
jmp
push
out
cld
and
addr16
js
add
xchg
in
xchg
rclb
mov
mov
adc
sub
lea
sub
dec
pushw
in
in
pop
enter
enter
int3
aam
push
or
sub
decl
loope
adc
jecxz
in
pop
pop
pushf
inc
pop
ljmp
xorb
aas
int3
adc
push
jl
aas
gs
xchg
adc
xchg
aaa
sbb
sahf
cmp
in
jmp
into
and
jne
popa
inc
iret
pop
add
or
dec
xor
int3
test
lahf
and
xchg
sub
rcrb
push
fwait
and
mov
cmp
xlat
cld
add
push
ds
fstpl
jbe
rorb
das
cmc
lretw
dec
js
push
nop
jne
movsb
jo
add
fnstsw
ret
push
mov
test
mov
fwait
shrb
out
inc
into
cmp
mov
sbbb
inc
jmp
or
aas
mov
mov
popf
in
in
shl
jl
dec
bound
jbe
mov
xchg
xor
push
pop
jle
test
push
cmp
int3
pusha
add
jle
jnp
sub
xor
loopne
jo
cmp
stos
stc
dec
push
xor
mov
movsb
loopne
std
adc
add
adc
add
push
call
ficompl
iret
adc
in
leave
scas
cld
sbb
mov
fwait
cmpsb
or
dec
or
out
leave
or
xchg
dec
mov
loope
stc
adc
jnp
mov
mov
clc
xor
inc
dec
insb
xchg
mov
mov
and
lods
dec
mov
cmp
aam
fs
fcompl
ja
xor
fs
in
js
lds
mov
scas
enter
and
scas
push
pop
lock
call
ja
jl
lods
push
sub
sti
xor
push
fwait
outsl
sub
lret
cmc
ret
cld
aas
sub
js
xor
in
lcall
cmc
mov
adc
js
mov
inc
jnp
test
bound
movsb
mov
and
ret
dec
scas
aam
jmp
scas
mov
jnp
iret
scas
sub
ret
iret
sbb
add
or
jp
xchg
add
fmull
cs
jne
addr16
ret
mov
sti
stos
jne
cs
fiadds
call
push
and
cmp
cltd
push
scas
sub
test
fimull
and
cwtl
lcall
les
cmc
and
pop
idiv
cwtl
push
fucomp
rcl
cmpsl
lea
ficomps
call
or
imul
dec
or
dec
or
mov
add
jo
jae
jecxz
cmp
push
pusha
movsl
pop
pop
mov
sti
out
rcll
sub
jge
inc
leave
jge
ficoms
cs
mov
xchg
rcll
fmul
pusha
insl
sub
imul
push
sti
movl
inc
jmp
movsb
pop
divps
pop
sub
jecxz
incl
jecxz
ret
push
stc
mov
mov
out
cli
psraw
loop
and
mov
xor
cld
aam
or
cmp
dec
sub
cs
sbb
mov
or
in
push
xor
mov
nop
mov
les
inc
lret
or
imul
mov
dec
psrad
jle
sti
in
loope
xchg
iret
mov
xchg
popa
sbb
scas
pop
jbe
repnz
push
data16
mov
imul
jo
ficoms
jge
mov
or
xchg
or
loope
lods
sbb
insl
fs
mov
pop
popa
xor
cwtl
cld
adc
mov
pop
sub
sub
jo
dec
inc
or
nop
mov
jg
mov
or
ret
mov
and
cltd
sahf
mov
pop
pop
cmpsb
loop
mov
mov
cmp
cmp
sub
sbb
inc
mov
mov
iret
or
jmp
subl
mov
popa
cld
or
nop
out
jmp
mov
out
jb
jne
xchg
inc
dec
cmp
repnz
outsl
aas
mov
inc
out
and
out
stos
sub
push
cld
adc
pushl
ficoms
jo
mov
xor
xor
jmp
test
repnz
push
movsl
push
pop
jp
xor
mov
jmp
xor
inc
xor
pop
hlt
popa
pushf
jmp
data16
test
push
aam
xor
push
ret
adc
fimull
mov
sub
and
shrb
push
fwait
mov
add
inc
out
mov
add
xor
dec
outsb
xor
xchg
addr16
shrw
fnsave
sub
xchg
fcompp
inc
ret
pushl
inc
shl
es
jp
mov
addr16
xor
jnp
jne
fwait
shll
frstor
out
pop
dec
lahf
and
sbb
ljmp
sub
inc
adc
mov
push
icebp
ds
pushf
leave
into
push
lds
push
ljmp
jle
pusha
mov
mov
cmpsl
cld
sub
inc
cld
mov
adc
ja
sub
rcl
add
adc
adc
xchg
cmp
cld
add
pop
ja
adc
ljmp
outsb
ds
mulb
xor
rclb
pusha
cli
rcl
and
in
cmp
enter
cmp
out
icebp
push
mov
pop
push
outsb
sub
mov
out
inc
xchg
leave
imull
mov
sbb
pusha
dec
jle
add
pusha
daa
add
rolb
iret
xchg
dec
js
xchg
lret
xor
inc
or
adc
xor
sub
pop
jmp
in
xor
js
gs
lock
test
pushf
sub
sahf
into
fistpl
mov
xor
xchg
enter
lods
mov
cwtl
sbbb
mov
adc
leave
mov
cmp
shrb
mov
or
ror
mov
icebp
xchg
out
push
pop
and
and
int3
sub
sbb
push
mov
xchg
jl
stc
scas
ss
pop
sub
mov
ss
dec
scas
push
js
push
mov
leave
ss
mov
push
inc
imul
outsl
fdivrp
mov
jae
stc
loopne
bound
mov
int3
xchg
std
icebp
fwait
cmp
inc
cld
push
mov
jnp
mov
or
std
push
fcmovnbe
jg
mov
jg
cltd
mov
push
movsl
add
push
jne
adc
addr16
shlb
cwtl
ror
push
adc
xor
adcb
cs
add
ret
aaa
fists
jg
and
andb
fadd
into
gs
roll
cmpsb
inc
push
adc
add
setg
repnz
and
fists
sub
iret
push
cld
xlat
push
sub
add
mov
jle
and
leave
adc
stos
movsb
cs
mov
and
cs
pop
aam
mov
mov
mov
xor
lcall
scas
mov
pop
sbb
ds
dec
fstl
mov
sbb
out
dec
outsb
out
pop
dec
adc
add
xor
dec
mov
data16
test
popf
xchg
leave
push
scas
mov
fs
mov
inc
in
xor
xor
daa
hlt
iret
xor
xor
test
call
cmp
repz
int
lea
pop
xor
add
inc
imul
in
ljmp
cmp
in
mov
mov
mov
cmp
jbe
lock
cmp
pushw
push
xor
mov
or
jbe
subl
cld
add
fiadds
mov
ret
sbb
and
cltd
adc
sbb
inc
adc
cwtl
mov
jb
iret
jp
fisubrs
cs
add
gs
jge
lret
push
aaa
mov
lahf
mov
scas
scas
ss
mov
lods
in
daa
std
adc
pop
in
adc
leave
sub
test
xchg
sub
cmc
fs
int3
push
jnp
dec
mov
in
mov
dec
stos
pushf
scas
sub
mov
add
leave
cs
rclb
mov
jb
iret
mov
push
push
cltd
addl
sbb
aad
pop
jnp
jb
pop
cmp
in
sub
adc
in
pop
cld
inc
fidivs
push
jno
mov
pop
cmpsl
jg
sub
push
mov
out
xor
mov
sub
mov
push
push
cmp
addl
xchg
adc
subl
adc
add
adc
mov
pop
pop
out
fstpt
adc
and
sbb
add
cmp
inc
jmp
pop
cmp
jp
adc
cmp
sub
mov
add
popf
and
adc
adc
mov
shlb
xchg
setnp
in
sub
shrl
mov
ds
xor
ds
cmpsb
stos
jg
scas
loope
xchg
scas
subb
rorl
out
mov
jb
int
pmullw
shrl
mov
aas
test
dec
fxam
addl
and
ror
cs
aas
push
xchg
iret
mov
pushf
jne
cmc
lods
mov
in
mov
adc
sub
xchg
mov
mov
mov
push
insl
in
cmp
cmp
push
dec
cmp
cs
push
jb
iret
cmp
xchg
lods
or
add
pop
loope
push
shll
jle
pcmpgtd
shrl
push
cvtps2pi
mov
stos
push
sub
jg
shl
push
loopne
rorl
out
sbb
jb
sub
sub
mov
push
jns
test
addl
in
xor
pop
and
and
arpl
adc
iret
and
icebp
iret
or
or
cs
fldt
xor
cs
xor
dec
mov
mov
xor
and
fcmovne
and
mov
and
nop
notl
fwait
dec
cmp
jp
sbbb
insl
in
mov
push
jle
repz
mov
sahf
iret
and
dec
sub
pushf
pushf
lods
in
shr
mov
jb
add
push
out
push
push
mov
mov
gs
mov
enter
nop
jae
stos
ds
cld
in
sbb
xor
cld
inc
and
int3
and
cld
outsl
and
adc
subl
pop
cld
push
push
push
jo
stos
add
cmpsb
scas
push
cld
fisttps
jl
invd
es
xor
adc
pop
insl
cld
pop
mov
sbb
sahf
js
outsb
jno
adc
sbb
lods
cmpsl
insl
fs
adc
cmpsl
xor
cmpsl
jo
nop
imul
mov
pop
in
push
cmpsb
aam
dec
push
sbb
daa
xor
mov
sahf
movsb
insl
xchg
pop
iret
mov
scas
movsb
jo
nop
negl
sbb
leave
push
xchg
adc
in
and
xor
and
cs
and
je
cmp
dec
and
outsl
leave
and
jo
in
movsl
jmp
push
and
sti
mov
inc
fldcw
outsl
mov
pop
xor
repz
mov
cmp
xor
mov
mov
push
pushf
mov
out
pushf
mov
insl
fs
stos
mov
mov
shrb
push
cmpsl
add
dec
push
xchg
dec
fistpl
sub
xor
cmp
leave
pop
cs
sub
dec
cld
lahf
mov
pushf
jp
cmc
repnz
mov
daa
mov
sbb
add
push
je
push
add
sub
or
std
fs
gs
add
jge
dec
mov
jb
in
cs
xlat
dec
sbb
in
fdivs
mov
jnp
fcoml
xchg
insl
fs
adc
iret
test
enter
add
jo
nop
in
push
or
pop
mov
fucom
lret
xchg
test
adc
iret
test
push
cmpsl
test
in
stos
add
mov
push
call
pop
jecxz
sbb
imul
dec
hlt
cmp
push
enter
jno
jne
pop
cmp
repz
mov
cmpsl
jge
cmp
fucom
pop
ret
xor
in
push
in
repz
mov
mov
and
mov
leave
cs
cmp
in
fucomip
cs
movsl
cs
lds
adc
scas
lahf
pop
sbb
fs
scas
gs
mov
push
insb
inc
in
xchg
sti
pop
pop
xchg
dec
and
jae
sub
das
pop
dec
leave
push
subl
adc
repz
les
scas
in
or
inc
int
or
das
jae
dec
pop
imulb
out
movsb
adcl
adc
jl
adc
push
lods
pop
jb
dec
or
inc
leave
pop
cmpsb
ficoms
pushf
hlt
lods
jne
out
ret
dec
into
or
incl
adc
ja
mov
popf
out
fs
test
ss
cmpsb
or
push
daa
sub
mov
or
scas
mov
loop
scas
sub
or
pop
pop
out
pop
aaa
jmp
hlt
adc
adc
push
in
sbb
aaa
adc
frstor
add
fnstsw
jo
dec
out
lret
sbb
stc
shrl
xor
in
jmp
mov
sbb
pop
imul
adc
inc
pop
push
lods
push
push
popf
outsb
outsl
pop
out
jae
fisubrl
mov
out
scas
and
shr
jne
rcl
out
scas
inc
add
adc
lahf
call
scas
pop
popf
cmc
jb
loopne
sbb
dec
mov
mov
push
cmp
cmp
push
out
inc
rcll
iret
call
inc
add
stos
les
push
cs
shll
sub
xchg
ror
int
xchg
xchg
lea
adc
mov
shll
dec
loope
ret
loopne
xchg
ljmp
fs
repnz
sbb
shr
inc
fs
out
mov
gs
adc
outsb
mov
pop
mov
push
out
adc
inc
dec
xchg
movaps
jno
push
push
out
push
push
loopne
push
std
push
dec
out
pextrw
push
out
loope
jl
adc
imul
out
nop
out
out
pop
shr
jp
dec
out
or
out
ss
inc
in
out
loope
or
adc
cli
loop
push
pop
jg
jno
pop
mov
stc
inc
loop
mov
mov
push
cld
pusha
in
aaa
pusha
loop
xor
lcall
mov
dec
out
xor
push
out
scas
adc
push
dec
out
cmp
cld
push
out
dec
call
loop
jo
out
jp
nop
pop
jno
bound
xor
push
out
stos
cs
out
pop
inc
adc
xchg
cld
jno
xchg
shr
and
mov
shrl
ljmp
dec
scas
xor
dec
js
loop
int3
mov
shrl
fisttpl
push
adcl
imul
div
mov
jo
and
push
ss
push
imul
pop
xchg
call
cmpxchg
loope
pop
dec
xchg
sbbb
jmp
push
loop
int3
jmp
mov
out
fs
cmpsb
lds
jg
mov
jns
mov
mov
mov
jno
cs
clc
loopne
inc
bound
mov
push
cli
or
adcl
push
test
adcb
pop
cld
or
dec
push
ret
push
xlat
stos
mov
jno
push
dec
push
mov
lds
or
xchg
outsb
lret
jns
jle
cli
push
clc
inc
test
ret
mov
movsl
sub
mov
xlat
pop
pop
lock
pushf
les
or
stc
or
lds
push
pushf
adc
ret
pop
mov
pop
movsl
bound
cmp
out
xor
ja
xlat
and
fcoms
or
out
mov
and
sahf
push
stc
fcmovbe
je
cmovg
xor
jmp
cmp
scas
stc
in
push
push
xchg
jnp
jno
jnp
xchg
or
in
aam
push
test
pop
xlat
aam
incl
icebp
sub
test
dec
aam
ret
add
add
aas
cld
lock
dec
aam
xchg
mov
push
jecxz
rorl
in
orps
enter
xchg
cwtl
push
repz
jae
ljmp
push
cmp
ret
adc
push
push
and
dec
dec
cmpsl
mov
push
jnp
or
sti
in
and
fsubs
loope
je
loop
outsl
and
or
mov
adc
imul
movsl
movsb
adc
dec
movsl
inc
mull
test
cld
push
mov
mov
mov
lret
cmp
dec
cmpxchg
pop
dec
iret
cli
sub
fiaddl
js
jmp
push
pop
scas
sub
or
popa
adc
xchg
pop
jmp
pop
dec
fisubs
sbb
out
mov
pop
add
lods
adc
pop
mov
pop
jmp
cmc
pop
jne
pushf
fstpt
iret
mov
sbb
cmpsl
jmp
lret
filds
xchg
inc
cld
and
and
iret
ds
dec
or
push
dec
pop
pop
mov
sbb
cmpsl
out
call
or
les
sub
inc
push
mov
add
mov
mov
fcoms
leave
mov
push
subb
mov
fsub
pop
cmpsl
stos
stos
and
aas
and
repz
cmp
cmp
jnp
xor
mov
pop
movd
or
cmpsl
or
sub
aas
pop
lock
lahf
rcrl
push
insl
mov
in
fnstcw
mov
scas
pop
fnstenv
adc
add
fldcw
fcomp
push
stc
in
or
pop
push
mov
sub
adc
pop
insl
in
mov
jb
pop
or
sbb
loope
pop
test
repnz
jg
loop
jl
ljmp
sub
adc
dec
fidivs
xor
lret
xor
movups
inc
adc
into
test
jnp
lahf
pop
mov
rcrb
or
pop
inc
jl
movaps
or
fistps
loop
stc
dec
adc
cmpxchg
out
sub
out
ffreep
lahf
cmc
pushf
cld
fildll
adc
inc
leave
xor
sub
dec
pop
cld
movsl
pop
data16
leave
jle,pt
jnp
cld
mov
inc
cld
inc
mov
clc
pop
stos
pop
sbb
cs
fdivr
in
fcompl
fsubl
fdivl
or
stc
in
or
pop
out
jp
out
popf
pop
add
xchg
adc
pop
insl
in
xor
pop
inc
rcrl
popf
mov
scas
stc
in
or
mov
out
outsl
mov
sub
adc
int
in
sbb
int
lahf
xor
lret
xor
stc
in
mov
int
sub
mov
mov
test
pop
push
dec
jb
ss
jl
sub
push
decl
dec
jg
lahf
sti
jl
xchg
ret
xor
out
fstpt
test
flds
adc
aaa
mov
insl
pop
push
push
scas
sbb
out
cmpl
sub
inc
pusha
sub
inc
cld
xor
stos
pop
loopne
lds
in
inc
pushf
pop
mov
cs
orl
inc
add
or
mov
int
fs
xor
int3
ret
ret
adc
add
les
jg
or
cltd
cs
cwtl
inc
aaa
sbb
push
addb
push
sbb
mov
jno
stc
push
inc
push
add
test
jecxz
jnp
mov
mov
inc
cmp
mov
inc
jno
aaa
sti
in
je
rclb
mov
push
rorb
dec
xor
rol
fcoml
jne
stc
or
lret
xchg
std
shrb
add
adc
xchg
inc
loope
aaa
inc
out
test
sbb
jg
inc
cs
shlb
cld
cld
ds
push
cltd
shrl
or
inc
jmp
pushf
fadd
imul
rcll
cmp
inc
out
sub
add
push
data16
lcall
inc
in
sarl
inc
jnp
sub
inc
mov
inc
out
inc
adc
mov
adc
sub
cwtl
nop
imul
sti
jl
mov
out
pop
cmp
sub
movb
adc
dec
mov
inc
push
inc
leave
cmp
inc
mov
or
mov
mov
mov
cmp
pop
popa
cld
lret
inc
pop
cld
imul
adc
cs
mov
or
ret
lahf
std
and
rol
fs
cmp
in
jl
inc
adc
mov
fimull
test
cltd
cmc
and
aas
enter
xlat
lock
ret
das
mov
and
add
lcall
lods
les
leave
les
les
bound
iret
jecxz
dec
pushf
pushf
inc
jne
xchg
inc
jnp
movsbl
in
inc
cmp
test
sub
adc
mov
xlat
imul
inc
mov
imul
sbb
sub
jnp
lfs
imul
aad
pop
cld
add
aad
pop
dec
aad
sub
aad
xor
adc
push
insl
in
push
push
jo
mov
push
pop
pushf
rclb
cmpsl
push
jnp
inc
mov
cmp
scas
pop
add
jb
jno
add
lret
cmpl
xchg
mov
stc
lcall
adc
test
inc
fmul
scas
inc
je
scas
pop
out
lret
daa
sbb
cmp
dec
cs
push
in
dec
xor
scas
sub
dec
push
scas
jg
shlb
mov
mov
cmp
scas
pop
sub
jb
sbb
inc
lret
stos
push
cwtl
jp
iret
lret
push
js
lock
sub
sarb
pushf
movsb
dec
imul
dec
push
or
lods
mov
add
repz
test
loopne
jl
dec
dec
cmp
sub
or
inc
decl
repnz
sahf
push
jecxz
jge
jg
nop
dec
xor
jnp
xor
sti
dec
jp
cltd
scas
sub
dec
inc
cld
hlt
dec
inc
iret
xor
xchg
dec
leave
mov
leave
insl
in
leave
push
jo
mov
leave
pop
sbb
imul
cmp
scas
fsubr
int
insb
xchg
and
dec
or
dec
fsubrl
cs
sbb
ss
stc
lahf
gs
cmp
mov
or
into
inc
push
cmp
push
push
and
jnp
jmp
scas
push
arpl
inc
scas
stc
in
or
subl
sub
inc
dec
dec
push
test
jo
nop
cmc
pop
dec
loope
dec
jp
adc
dec
sub
mov
adc
fmuls
fs
dec
mov
loop
push
iret
sbb
sahf
iret
inc
decl
push
jmp
cmpsb
iret
jae
test
mov
enter
cmp
xchg
loope
push
sbb
pop
in
and
cmp
imul
ja
jge
dec
dec
xor
xchg
iret
lret
mov
and
cld
int3
aam
stc
push
or
inc
or
push
mov
inc
cld
das
and
int3
stos
sub
dec
aam
pop
in
fdivrp
inc
push
in
dec
pop
addr16
leave
jmp
fs
dec
mov
lods
dec
dec
push
inc
cli
jo
test
pop
jle
cld
pop
testl
imul
and
or
std
inc
jp
std
and
es
jg
ret
movsl
aam
jmp
std
cs
jp
dec
stc
cs
jp
cmp
dec
cmpsl
mov
jge
cmp
int3
dec
jge
les
in
jge
xchg
popa
push
jge
xchg
repnz
out
add
test
repnz
inc
test
pop
inc
bnd
pusha
push
fdiv
push
stc
mov
out
push
cmp
int
adc
jb
pop
pop
jb
dec
arpl
jb
fidivl
fs
cmp
dec
jb
movsl
in
jbe
repz
cmp
dec
loope
fmull
imul
inc
movsb
cmp
jnp
iret
repz
imul
jae
rorb
shrb
cld
mov
cmpsl
sbb
pushl
loop
and
mov
cltd
rcl
cmp
jb
lock
nop
dec
jl
test
scas
inc
pop
xor
lret
sub
call
jo
aas
mov
pushf
mov
jne
mov
push
es
sti
popa
fnstenv
cmp
add
jo
imul
cmp
push
stos
push
in
icebp
xor
dec
sub
icebp
pop
xchg
xchg
rcl
shlb
stc
push
sub
inc
cld
pop
sub
icebp
mov
shlb
pushf
jmp
imul
jno
xchg
scas
sub
jno
mov
test
pop
and
dec
iret
movups
dec
jno
addr16
cld
sbb
cltd
iret
idivb
sub
mov
adc
mov
imul
cld
jmp
out
mov
imulb
push
test
mov
iret
push
adc
xchg
mov
insb
test
fidivs
cmp
xchg
inc
std
jbe
stc
rcrb
loope
cld
stc
dec
pusha
push
inc
jnp
adc
jbe
inc
or
scas
pop
mov
dec
push
sbb
cs
sti
addr16
divl
aad
stc
sbb
fs
adc
cmp
pop
test
pop
push
ja
xchg
jmp
lods
ja
leave
ja
fdivl
or
inc
jp
hlt
cmp
iret
sbb
mov
hlt
in
cld
imul
hlt
add
hlt
scas
inc
inc
sub
sub
shrb
xchg
je
decl
je
sbb
push
jmp
je
call
je
mov
cs
mov
sbb
push
mov
jnp
dec
je
jnp
scas
mov
mov
mov
imul
lds
scas
sub
test
pop
inc
cs
clc
lds
insl
adc
mov
inc
fnstcw
fs
pushf
inc
insl
fs
inc
cmp
dec
scas
mov
inc
arpl
jnp
frstor
sbb
out
and
leave
ljmp
cli
mov
test
add
sbb
jnp
mov
repnz
push
sub
or
xor
loope
stc
dec
add
jnp
adc
lods
scas
and
and
sbb
mov
cld
adc
jp
cld
xchg
add
sti
scas
inc
xor
and
dec
adc
dec
sti
mov
sti
in
cld
in
pop
int3
sti
jb
jmp
adc
mov
cmp
iret
inc
adc
jnp
shrl
idivl
dec
lret
fisubs
push
popa
cltd
clc
fstpt
test
pop
sub
jb
pop
mov
inc
clc
icebp
and
mov
clc
pusha
dec
dec
sti
push
js
jo
inc
in
sub
push
clc
jnp
sbb
sti
popa
mov
add
stos
js
pop
leave
js
xchg
inc
and
js
cld
aad
inc
inc
popa
push
pushf
cwtl
stc
pop
cmp
push
in
stc
out
daa
stc
nop
outsl
jmp
mov
jne
lods
stc
jnp
dec
push
sti
in
stc
cmp
test
pop
cmp
in
jns
cmpsl
jns
cs
sar
in
jns
xor
push
scas
sbb
sub
sbb
dec
pop
adc
mov
dec
scas
stc
in
or
mov
sti
sub
dec
and
and
jnp
fwait
jle
test
jle
sbb
jle
cmpsb
iret
jle
test
mov
shrb
enter
cld
lods
adc
pushf
sbb
in
cld
jle
xchg
pushl
mov
add
ljmp
pop
fiaddl
pop
cmp
cs
sti
in
lcall
jg
ljmp
inc
cld
gs
or
test
mov
roll
jg
sub
in
dec
jg
push
cld
push
insl
scas
sub
jg
mov
test
pop
cmp
sub
cld
adc
les
aaa
jns
fs
idiv
insl
fs
jl
out
push
add
scas
pop
test
jno
mov
push
adc
jl
and
mov
inc
xor
cmp
leave
in
and
in
push
jo
xchg
push
in
sbb
push
mov
jae
sub
cmp
dec
in
aaa
test
xchg
out
movsb
in
pop
push
repnz
in
pop
cwtl
insl
je
iret
dec
popf
push
js
sysexit
xchg
rorl
jnp
mov
xlat
sti
popa
leave
insl
lds
adcl
pop
loop
dec
loope
movsb
loop
mov
jne
loop
push
cmp
data16
adc
lret
pop
jg
cld
pusha
pop
hlt
push
xchg
iret
bound
in
lldt
out
mov
inc
mov
outsb
pop
cld
bound
bound
in
bound
test
pushf
push
jecxz
iret
or
fs
sbb
dec
push
mov
jecxz
or
inc
jmp
push
push
repnz
popa
push
sahf
arpl
out
add
aas
cmp
jnp
dec
arpl
push
dec
and
jno
xchg
in
psraw
sub
loopne
addr16
xchg
loopne
mov
jne
and
push
aas
movsl
sti
data16
loopne
xor
iret
push
sbb
dec
loopne
insl
out
out
cli
jge
xchg
test
push
loope
pusha
jo
out
sub
inc
pusha
scas
inc
out
test
pop
adc
jb
sbb
sbb
push
in
mov
movzbl
loop
xchg
loope
sub
pop
inc
fsub
shl
push
pushf
icebp
loope
addr16
loope
outsb
cs
pop
push
in
popa
xor
scas
sub
mov
inc
scas
stc
in
push
sbb
jb
dec
cmp
in
movntq
xor
xchg
leave
out
mov
jae
and
cmp
inc
out
pop
into
out
and
cmp
movsb
clc
xchg
in
jne
cld
inc
cld
add
inc
mov
inc
inc
mov
outsb
int
push
inc
cld
les
iret
lock
dec
data16
out
in
out
jo
fwait
ret
pushf
mov
jne
mov
jnp
daa
pop
sti
in
out
iret
test
pop
push
mov
add
and
mov
sbb
sbbl
xor
jae
cmp
fldcw
cld
dec
pop
loopew
data16
cwtl
in
mov
push
test
in
pop
sub
in
aas
in
test
xor
enter
in
inc
jnp
scas
fsts
inc
push
loope
in
mov
mov
fucomp
aam
inc
dec
fs
jno
add
jle
fs
jmp
test
pop
sbb
test
cmc
and
dec
push
xor
push
and
sti
fs
mov
div
inc
push
jne
bound
iret
jmp
jne
fs
jne
fs
jne
sbb
jne
or
xor
ljmp
filds
ljmp
ljmp
incl
movsb
mov
jnp
mov
jnp
cs
sti
out
ljmp
ljmp
out
ljmp
push
cmp
insl
in
push
jo
lods
lret
pushf
fisubrs
push
dec
fdivr
clc
loopne
fimuls
push
imull
jge
pop
dec
jmp
mov
imul
in
rsm
jmp
sub
adc
jmp
push
sbb
push
fsubr
cmpsl
jge
stc
jmp
push
push
mov
xchg
dec
imul
dec
imul
imul
imul
imul
incl
jge
cwtl
jae,pt
out
imul
cwtl
std
stos
jnp
sti
push
push
fucomi
xchg
sti
insb
push
mov
dec
repnz
call
icebp
jmp
out
das
push
adc
gs
jnp
dec
push
mov
push
shrb
inc
cld
cld
push
cltd
dec
jmp
in
jmp
lret
pushf
lods
jmp
jnp
pop
inc
sti
addr16
jo
dec
scas
sub
jmp
inc
cld
lahf
imul
imul
ror
imul
ret
push
jle
sti
out
out
adc
push
xor
and
out
and
ret
sbb
out
pop
lret
and
test
data16
leave
dec
jg
test
imul
sub
rolb
outsb
pop
aam
jmp
cltd
movlps
dec
outsb
mov
outsb
imul
push
cmp
outsb
mov
aam
jo
out
movsb
pop
adc
out
scas
inc
xor
fidivs
push
jle
out
jge
mov
out
inc
repnz
scas
shrb
aas
mov
jb
or
sub
jb
cld
mov
scas
inc
pop
shrl
fs
jmp
jnp
imul
in
jnp
jnp
push
and
in
jge
or
mov
in
test
sub
stc
out
nop
push
push
scas
push
rcrb
push
leave
sub
dec
jo
stos
in
jp
lds
sub
out
mov
xchg
push
popf
dec
outsl
pop
aaa
jb
pop
lds
setge
outsb
mov
jge
outsb
ret
jnp
ja
outsl
add
leave
outsl
and
lahf
hlt
enter
xchg
sbb
push
outsl
jnp
add
sti
clc
mov
push
mov
aas
insb
adc
outsl
imul
leave
jge
in
sbb
adc
xchg
stos
mov
aad
push
xchg
inc
ficoml
jp
cld
xchg
outsl
push
cld
dec
xchg
inc
jecxz
scas
rolb
pushf
adc
xor
push
cmp
adc
pushf
mov
stc
jge
rcll
jae
cmpsb
adc
lds
dec
push
xor
pop
pop
xchg
arpl
push
in
xchg
outsl
xor
scas
cs
xor
add
aas
sub
stc
out
jnp
dec
xchg
cmp
inc
mov
xchg
negl
repz
in
xchg
scas
xchg
aas
adc
sub
adc
dec
adc
adc
jo
lret
pop
pushf
out
jne
cli
adc
push
push
sti
mov
leave
scas
sub
inc
cld
nop
inc
iret
das
adc
fwait
imul
nop
rorb
cmc
pop
jge
xchg
test
pop
xor
out
fsubs
sbb
dec
jp
adc
inc
jp
lret
sbb
add
or
add
pop
or
out
sub
test
xchg
and
fimuls
rclb
sti
fs
xchg
inc
cmp
mov
and
adc
jns
adc
ficoml
test
pop
push
lret
out
cld
dec
aaa
les
push
repz
inc
xchg
xchg
scas
shlb
pop
xchg
push
inc
aad
shrb
jne
fcoms
mov
push
dec
sti
repnz
xchg
push
scas
adc
push
scas
pop
movsb
push
out
mov
rcll
jb
leave
bound
shlb
cld
sti
mov
loop
jmp
sub
dec
inc
fdivrs
inc
mov
cld
pop
xchg
ret
daa
xchg
out
mov
loopne,pn
sti
in
pop
pushf
or
or
mov
jae
mov
mov
flds
dec
push
xor
lret
pop
jnp
in
pop
pushf
push
leave
insl
add
xchg
je
lods
dec
sbb
xor
fs
dec
cmp
dec
xchg
push
pop
inc
xor
rcll
rcrb
cs
sti
in
adc
push
adc
cmp
pushf
scas
adc
pop
cs
adc
ficoms
fs
cmp
rcll
adc
jge
add
scas
pop
mov
std
xlat
in
in
in
jo
in
iret
or
leave
in
jge
ljmp
gs
iret
mov
xlat
push
sub
inc
andl
and
pop
and
std
mulb
in
gs
adc
call
lcall
xor
out
cwtl
and
dec
inc
les
lcall
lahf
rol
jmp
xchg
sbb
cmp
stc
incl
movsb
lods
sarl
sbb
sub
sti
rcrb
push
ret
add
pop
int
ja
inc
shr
scas
rclb
push
aas
fwait
push
daa
rcrb
lret
pushf
fstps
jnp
dec
dec
sti
clc
jecxz
fiadds
push
negb
dec
sbb
push
cmc
mov
sbb
pop
sbb
leave
sbb
pushf
fistps
stc
jge
clc
sbb
iret
sbb
addb
pop
dec
popa
cld
xchg
cwtl
pop
cld
xor
pop
out
in
pop
les
adc
cwtl
mov
or
divb
fwait
xchg
jne
out
cwtl
jnp
or
sti
imulb
add
test
fiaddl
cmp
insl
in
repnz
jecxz
inc
shl
hlt
dec
jne
stc
mov
mov
push
sbbl
pop
cltd
bound
push
mov
lds
push
cltd
sti
lcall
xchg
fs
sbb
cmp
sbb
jne
out
sbb
pop
xchg
sbb
mov
repz
clc
icebp
dec
aam
les
jg
xchg
xchg
sbb
sahf
je
cld
lds
cld
mov
mov
push
sahf
adc
jle
sahf
jge
into
sahf
test
pop
jns
out
nop
push
and
dec
int
out
lds
pop
push
sti
fs
adc
ficompl
inc
dec
push
mov
ja
adc
jle
push
jge
jmp
push
out
js
inc
popa
mov
outsl
xor
test
xor
dec
leave
lahf
sub
dec
lahf
pop
fbld
negl
dec
scas
stc
in
or
out
cmp
pop
push
push
inc
mov
pop
inc
inc
rcrb
sbb
push
iret
inc
or
push
nop
pushf
sets
mov
sbbl
ja
or
and
notb
xor
cld
pushf
outsl
inc
cld
fidivl
dec
pushf
movsb
les
mov
mov
fldln2
ja
sbb
and
add
sbb
leave
inc
sbb
imull
sbb
les
sbb
fldenv
inc
in
popa
imul
pop
addr16
sti
mov
in
icebp
mov
lock
in
lea
adc
fmull
cmpsl
xchg
push
roll
push
cld
inc
lea
loope
inc
sbb
cli
pushf
jmp
shr
pop
or
adc
or
fisttpl
or
inc
adc
scas
pop
sahf
add
les
cmpb
sub
subb
ja
in
xorb
dec
add
xchg
push
std
inc
das
dec
stc
sub
or
insb
cld
addb
pop
add
xchg
arpl
mov
add
incl
movntq
loope
out
add
loop
mov
test
mov
sub
movsb
les
sub
mov
mov
out
pop
add
add
dec
sub
popa
cld
popf
cli
or
push
mov
movsb
les
lds
test
testl
wbinvd
and
mov
jge
cmpsl
jmp
xorb
cld
pop
addb
scas
inc
int3
inc
scas
pop
data16
cmpsl
mov
sub
test
jl
add
add
add
out
push
add
jb
inc
cmc
add
add
iret
mov
orb
aaa
subl
dec
adcl
sub
or
les
sub
insb
push
cmp
add
add
dec
mov
sti
in
add
add
in
add
iret
clc
and
pop
imul
dec
adc
out
xchg
dec
lods
or
dec
xchg
mov
pop
adc
jb
push
scas
add
push
test
cld
clc
js
in
mov
movsb
les
push
scas
inc
push
clc
scas
pop
iret
push
cltd
test
ret
aas
sub
sub
mov
cmpsl
femms
xchg
test
xchg
xchg
fstpt
jge
movsb
out
push
movsb
jp
dec
xchg
pushf
test
pop
or
jb
xor
sbb
out
adc
lods
pop
inc
cld
pop
stc
inc
lock
add
iret
fwait
adc
dec
pop
mov
test
dec
stc
sbb
popa
pushl
cmp
stc
les
bound
sub
insb
push
test
sub
dec
test
pop
sub
clc
test
xchg
adc
dec
add
movsb
add
in
add
jo
and
add
pushf
inc
add
cs
add
push
icebp
sti
imulb
sbb
add
out
sbb
iret
aad
mov
xchg
mov
xchg
insl
in
xchg
push
jo
stos
enter
les
jnp
ja
sti
fs
xchg
pop
mov
cld
in
xchg
push
iret
in
aaa
dec
adc
in
adc
enter
dec
adc
jnp
cli
sti
push
ret
cmp
mov
mov
inc
mov
call
call
mov
and
in
mov
scas
stc
in
or
mov
out
out
jg
test
or
lds
adc
clc
adc
scas
or
or
bound
pushf
loop
jne
icebp
add
fs
mov
pop
sub
fwait
mov
lock
mov
leave
mov
cltd
js
out
xlat
pop
mov
push
nop
in
inc
cld
or
push
sub
dec
or
enter
or
jge
sbb
out
fs
sbb
dec
or
push
dec
insl
mov
mov
aaa
shr
cmpsb
mov
sub
adc
insl
mov
jb
icebp
and
mov
mov
dec
and
pusha
lock
push
jnp
dec
mov
or
xor
or
cmpsb
xor
push
cld
push
or
or
adc
dec
or
popa
sbb
or
sahf
mov
jne
and
mov
int
mov
mov
pop
cld
jo
inc
ljmp
xchg
imul
or
leave
or
pushf
mov
cld
or
loope
or
add
int
adc
inc
iret
rclb
cmpsb
dec
mov
mov
jo
fadds
xchg
insb
sub
arpl
std
sbbb
sub
fldcw
adc
loopne
dec
inc
push
icebp
and
mov
push
pusha
cs
pushf
stos
inc
and
aas
jbe
ret
jnp
dec
push
cmp
dec
pusha
mov
jecxz
mov
push
cmp
pop
inc
xor
add
outsl
xor
outsl
scas
pushf
lret
outsl
imul
xadd
push
sub
push
push
scas
sub
loop
rorl
sub
inc
dec
in
mov
jge
mov
mov
test
jae
mov
popa
cmp
dec
mov
mov
push
jmp
in
or
push
popa
jmp
or
mov
loop
xchg
or
sub
or
pop
xchg
std
cs
or
cld
push
xlat
jmp
jecxz
pushf
mov
sub
inc
jmp
pushf
fistpll
push
push
scas
sub
mov
stc
shrl
inc
decb
push
sbb
pop
lret
cmp
out
jno
jecxz
pop
inc
lock
push
data16
nop
bound
xchg
mov
fisttpll
scas
pop
mov
sbb
jae
mov
cmp
sbb
mov
fisubl
cmc
mov
xor
sahf
je
stc
sub
hlt
mov
push
jnp
dec
xor
and
mov
xor
in
push
xor
push
in
push
movsl
push
sahf
mov
movsl
loop
stc
dec
cmp
mov
fsts
dec
mov
xchg
cmc
lahf
in
sti
in
xor
xor
xor
push
jns
dec
stc
sub
pop
popf
cmpsl
into
jnp
fnsave
out
dec
cmc
out
loopne
add
xchg
adc
mov
in
cmc
sbb
popa
jmp
scas
stc
std
mov
jnp
cld
mov
cld
bound
in
stos
pop
in
inc
in
pop
mov
out
daa
xor
ljmp
aam
fnstenv
pusha
and
bound
xor
pop
mov
push
jmp
sti
jbe
xor
cld
mov
push
jp
dec
outsl
cs
add
lds
fs
mov
fs
cmp
out
adc
imul
inc
iret
xor
lds
test
pop
sbb
test
mov
push
jg
fs
mov
push
iret
mov
jl
jmp
mov
cld
clc
mov
loopne
scas
inc
sbb
scas
pop
mov
jno
inc
or
ss
cld
inc
ss
cld
dec
ss
ss
sub
pushl
sbb
dec
cmp
dec
push
or
mov
cld
inc
mov
cld
dec
mov
data16
sub
fs
sbb
dec
mov
push
dec
jmp
fs
cli
pop
enter
aaa
out
dec
aaa
ret
aaa
push
cld
jne
pop
test
push
loope
jae
jmp
imul
in
mov
sub
ret
mov
cld
push
aam
jmp
in
cwtl
xchg
push
jnp
or
sti
in
xor
fsubrl
sbb
jge
xor
je
xor
outsl
xor
fs
pop
inc
popa
cld
jmp
add
test
test
test
filds
sbb
test
iret
sub
inc
out
test
pop
xor
out
mov
adcb
fstl
xor
movsb
push
ja
scas
add
add
popa
cld
and
nop
mov
jnp
xor
push
dec
mov
movsb
ljmp
rorl
jp
repz
push
scas
sub
mov
into
jecxz
push
cs
in
sti
in
cmp
mov
scas
dec
cmp
pop
fnstcw
jb
cli
cmp
cmp
pushf
mov
mov
test
mov
mov
cmpsl
mov
add
mov
out
ljmp
orl
xor
in
cld
inc
pop
mov
test
fstps
nop
jnp
lock
subl
lar
fwait
mov
mov
daa
sbb
in
push
iret
push
adc
dec
mov
into
insb
sub
outsl
push
push
add
fmul
mov
jmp
push
add
sub
inc
cld
pop
xchg
inc
repz
call
mov
cs
and
mov
mov
push
sti
subl
adc
add
xchg
adc
cmp
arpl
sbb
dec
cmp
dec
popa
ljmp
dec
scas
stc
in
or
jnp
lret
pop
xchg
out
cltd
mov
mov
mov
push
leave
adc
inc
int
sub
push
lods
mov
stc
les
enter
cld
mov
inc
mov
stos
pop
out
in
pop
stos
ds
pop
ds
nop
mov
ja
icebp
and
mov
ds
dec
das
push
js
jne
into
jp
jnp
nop
mov
cmp
or
inc
mov
mov
ficomps
cs
aas
push
fwait
ret
aas
aaa
in
xor
aas
jmp
js
nop
inc
in
xor
loope
sub
aas
cs
dec
aas
fcmovnbe
cld
pusha
adc
aas
scas
pop
sahf
mov
add
mov
xor
fs
lods
mov
stc
jmp
fs
mov
cmp
mov
pushl
das
mov
cs
cmp
push
cmp
mov
jbe
jp
iret
xchg
and
pushf
repnz
sarl
sub
in
lods
cmp
cmpsb
lods
scas
pop
pop
lods
jb
add
add
lods
stos
push
pop
jp
dec
lods
out
xor
dec
and
aas
pusha
jo
sti
cs
nop
sti
jle
jnp
iret
lock
dec
sub
in
xchg
sbb
sub
jmp
out
xchg
cs
mov
outsb
stos
pop
sub
xchg
or
cld
push
lods
int3
fs
mov
cmc
cs
sti
fs
mov
jl
pushf
mov
sub
sbb
je
jns
sub
iret
lret
orb
lret
lds
cmpsl
push
mov
inc
jbe,pn
and
das
jg
lcall
daa
adc
xchg
sahf
shrl
push
add
dec
aas
and
pop
push
iret
and
cwtl
pop
popf
outsl
insl
and
aam
xchg
mov
push
fwait
mov
movaps
ds
mov
push
les
dec
adc
scas
insl
inc
add
push
fwait
or
sub
test
mov
pop
sbb
pusha
push
mov
rclb
add
dec
outsl
aaa
or
pop
iret
test
adc
insl
ja
or
psubq
and
das
jns
nop
in
jne
hlt
scas
sbb
jmp
sub
mov
and
jno
pop
int
adc
in
jnp
jp
outsl
xchg
or
push
in
and
outsl
pushf
mov
enter
mov
int
lcall
add
scas
pop
pop
imul
shll
push
push
into
stos
lock
jle
push
outsb
loop
push
and
sub
ja
sbb
jbe
sub
mov
cli
dec
mov
repnz
int3
sub
cmpsb
mov
and
mov
ja
mov
ja
movsb
push
xchg
shlb
mov
sbb
popf
icebp
jp
adc
mov
or
add
dec
out
pop
xlat
lods
sbb
nop
inc
mov
and
push
add
lcall
addr16
pop
sti
or
rcrl
stos
cmp
out
sub
add
shrl
dec
aam
inc
lds
fdivl
inc
sbb
lret
cmp
cmp
jle
push
adc
and
sbb
and
cmp
push
inc
adc
sbb
fs
mov
mov
loop
sub
mov
hlt
add
icebp
cs
jg
outsl
inc
mov
mov
pop
fsubs
adc
out
pop
inc
lcall
and
add
and
inc
aaa
mov
or
gs
repz
fnclex
sub
add
movsb
les
pop
test
sbb
pusha
lcall
shlb
or
xchg
mov
movsb
ja
adc
sbb
sub
std
cmpsb
fucom
push
xor
aam
inc
movsb
fs
sub
movsl
jbe
mov
pop
xor
es
sahf
cld
pop
pop
inc
es
and
sbb
sbb
icebp
xor
or
cmpsl
aam
ljmp
mov
mov
or
xor
inc
lcall
sbb
add
pusha
loop
pushf
jp
scas
push
cmpb
daa
push
hlt
mov
aad
jo
or
lods
mov
aas
sub
imul
mov
and
push
push
insl
or
clc
into
or
or
push
pusha
or
jg
pushf
fwait
movsb
jmp
arpl
and
add
rclb
inc
div
xor
xor
popa
daa
xor
loop
test
jmp
leave
push
sub
adc
test
out
pop
in
and
push
test
jne
jg
mov
in
movsb
sbb
ret
clc
push
into
push
movsb
fsubs
fwait
aas
int3
addr16
je
add
sub
lock
cmp
aam
hlt
imull
cmp
cmp
sbb
and
pop
lahf
dec
nop
popf
aam
mov
outsl
xchg
mov
popa
fisttps
mov
push
pop
sti
jb
scas
in
sub
cld
sbb
iret
and
add
xlat
mov
add
fwait
xor
fists
dec
add
scas
and
fs
lods
sub
repz
cltd
clc
add
outsb
movsb
inc
mov
cmp
repnz
adc
addl
and
sbb
out
sub
adc
call
cs
dec
clc
outsl
dec
pop
jle
ljmp
xchg
mov
xor
rcrb
in
les
pop
ret
mov
scas
out
sub
add
jl
ss
rolb
xchg
push
leave
out
xor
jb
int3
fnstsw
icebp
xor
stos
outsl
sub
outsl
mov
int
fstenv
adc
inc
ss
jae
test
stos
adc
fadd
test
cmp
mov
mov
xchg
sub
pop
ja
pusha
popa
ja
inc
mov
int
inc
mov
lea
mov
xchg
shrl
mov
jo
push
push
subb
dec
inc
ret
jns
xchg
mov
ret
mov
jb
outsl
jg,pn
mov
jo
mov
enter
jo
xor
scas
pop
mov
imul
add
dec
and
or
add
ja
xchg
syscall
call
xchg
subb
push
sbb
sbb
jl
int3
or
lock
cmp
loop
xchg
lods
push
push
jo
stos
outsb
xchg
stos
outsl
pop
ss
sbb
lds
pushf
pshufw
dec
sbb
test
pop
sbb
inc
test
psrlw
jmp
sub
nop
mov
mov
sub
in
mov
sub
and
dec
dec
sbb
jae
or
fwait
lock
pop
xchg
out
mov
std
xlat
push
ds
test
xchg
mov
mov
fs
test
in
fcompl
sub
mov
sub
lcall
push
nop
imul
cmp
sub
incl
loopne
pushf
xchg
test
push
in
jp
scas
cli
imul
jno,pn
movsl
shrl
mov
int
in
sub
sub
xchg
jb
iret
sub
repz
sarb
push
mov
dec
mov
inc
dec
dec
fsubr
fsubl
add
cld
mov
ret
add
loop
nop
cs
push
cmp
shrl
adc
cs
dec
cs
cld
icebp
cs
fnstcw
pop
adc
dec
mov
dec
add
mov
mov
cmpsl
leave
scas
mov
xor
pop
leave
scas
mov
xchg
imul
cs
movsl
test
sti
mov
and
in
das
pushf
je
cmc
push
loop
repz
or
and
push
or
sti
mov
lods
arpl
clc
test
push
and
pop
out
push
sub
sub
mov
into
sub
ret
pop
sub
pcmpeqw
pushl
fisttpll
cmp
in
sub
mov
in
dec
cld
les
mov
cmc
fnsave
pop
insl
xchg
or
pop
mov
ret
jle
in
fldenv
xor
dec
sbb
dec
pop
xor
mov
and
insl
fs
adc
iret
shlb
mov
shlb
nop
insl
add
pop
jmp
push
stc
stos
das
and
cs
imul
push
lds
xchg
shll
xchg
rcrl
fs
roll
je
insl
fs
adc
iret
shll
repnz
lods
push
adc
imul
inc
cmp
stos
push
push
stos
sub
mov
sub
push
adc
push
scas
pop
jae
repnz
adc
cmovp
jg
inc
loope
sub
subb
rorl
out
movsl
les
popa
rorb
imul
shrl
mov
push
cmp
jnp
push
popf
mov
out
imul
cld
fwait
pop
imul
rol
push
rcl
in
rcrl
add
in
push
pushf
sub
fs
push
adc
iret
push
xor
push
jo
nop
imul
inc
aam
or
xchg
pushf
sahf
jecxz
xchg
or
mov
sbb
arpl
hlt
jecxz
cmp
jg
inc
in
inc
xor
add
push
or
push
fwait
insl
jae
xchg
aad
jne
frstor
cmc
fstpl
ds
std
inc
pushf
and
arpl
rorl
out
dec
cld
lods
or
inc
inc
cld
data16
pop
cld
xchg
mov
push
test
aam
pop
jb
imul
lahf
aam
push
aam
in
and
inc
jecxz
xor
aam
dec
aam
enter
std
aam
call
scas
pop
fs
push
popa
scas
push
jg
sub
aad
cmovb
rclb
test
dec
mov
sbb
pop
mov
insl
cld
sub
jnp
mov
pop
adc
and
test
fs
cmp
leave
mov
xchg
call
push
movsl
lds
lds
sbb
fs
leave
cs
ficoml
iret
ficoml
movsb
cmc
push
iret
fisubrl
push
pop
jnp
testl
pop
btr
cld
mov
pop
paddusw
and
add
in
push
pop
sub
dec
inc
adc
stos
add
fldt
inc
cmp
cmovs
jb
jo
adc
fldt
sub
pop
aam
pop
lea
jp
push
mov
outsl
insb
stos
loop
mov
sti
xor
mov
xor
jge
pop
aam
jecxz
xor
in
sar
xor
xor
in
adcl
xor
leave
or
cld
call
loop
rolb
sub
push
lcall
add
xor
fcomps
dec
mov
sub
lret
pop
arpl
mov
push
push
inc
ds
aas
jno,pt
sub
push
pop
and
cwtl
dec
adc
pushf
pushl
xchg
clc
pop
xor
push
ss
popa
xor
inc
jg
xor
stos
jbe
dec
inc
and
pop
ss
cmp
sbb
fnstenv
cli
sub
pop
fadds
rcr
cmp
push
rcl
test
pop
push
xor
sti
in
pop
adc
in
push
pop
test
or
outsl
pop
inc
scas
xchg
enter
dec
cwtl
fisubs
subb
sub
fidivs
push
filds
pop
or
aad
xchg
iret
inc
xor
popa
inc
fidivs
clc
out
clc
out
jecxz
lods
xor
adc
pop
jo
and
ja
mov
pop
push
sub
dec
flds
push
sub
xor
pop
mov
fbstp
clc
mov
les
aas
fbstp
push
test
sub
out
pop
inc
test
clc
sti
sub
jno
call
into
test
shrb
xor
cmp
test
call
pop
ss
cld
inc
pop
push
ljmp
sub
in
aaa
outsl
loop
xorb
adc
aaa
fsub
dec
push
scas
jo
fsubrl
fisubrs
pop
fsubrl
mov
data16
cld
dec
dec
sbbl
mov
inc
clc
or
mov
add
sub
push
fiadds
cs
clc
add
clc
sub
bswap
push
call
scas
test
int
inc
jns
aaa
fiadds
push
int
test
dec
clc
sub
sub
cld
inc
dec
fwait
dec
jbe
add
sub
sub
sub
jge
das
movsb
lret
in
jecxz
jo
cmc
dec
clc
sub
sub
push
dec
arpl
push
lods
sbb
mov
ss
fidivs
ret
clc
inc
dec
ret
add
xor
inc
pop
lods
xor
add
test
mov
clc
pushl
and
sbb
in
aaa
dec
loop
in
clc
cmp
mov
test
mov
ja
mov
ret
push
sub
dec
lods
add
xor
inc
sub
xor
cmp
sahf
in
data16
lret
rorb
cmc
clc
jne,pn
outsb
lret
mov
mov
into
push
adc
iret
in
lods
pusha
dec
sti
outsl
add
loop
andl
out
or
sub
sbb
cld
imul
btsl
sub
mov
pushf
cld
pop
movsb
in
mov
pop
imul
dec
outsb
or
shrb
pushf
cmp
or
popa
cld
inc
rcrb
xor
inc
and
cld
sbb
outsl
fnsave
add
out
shrb
mov
inc
xor
dec
cmp
push
out
xor
and
xchg
inc
mov
jg
lods
dec
sbb
iret
pop
iret
adc
test
mov
lds
add
fs
mov
sarl
sub
or
cmpsb
sarl
sbb
arpl
shll
jno
adc
pop
ja
sbb
push
mov
jle
shr
sub
push
cld
add
iret
cmp
inc
jge
jg
mov
adc
es
rorl
mov
dec
xchg
cld
in
into
pusha
push
dec
dec
arpl
loop
clc
aam
jmp
push
cwtl
rorl
movb
scas
inc
data16
mov
push
in
jl
xstore-rng
cmpsl
popa
inc
and
outsl
rcl
test
shll
fcomp
pop
les
dec
sbb
xchg
data16
fistps
mov
push
inc
xchg
sarl
loope
lcall
inc
mov
add
pop
cmp
lcall
xor
push
sub
inc
sub
inc
cmpsl
std
aas
shlb
inc
adc
in
adc
dec
inc
adc
cmp
test
stos
pop
in
rorl
adc
sarb
adc
cwtl
dec
sbb
dec
js
mov
mov
sub
mov
int3
movl
cmc
mov
in
xchg
jg
out
or
push
mov
sbb
jbe
mov
out
jne
push
push
repnz
out
cs
mov
add
push
mov
in
imul
push
add
nop
dec
adc
push
shrb
push
add
inc
rcr
stc
sbbl
cmp
ljmp
xor
xchg
ja
loopne
sub
enter
mov
jg
mov
sbb
jno
outsb
sub
adc
adc
out
imul
mov
sub
leave
or
jo
sub
cld
fucom
jbe
dec
xchg
xchg
ret
mov
invd
les
pop
inc
fcoml
inc
ret
in
lds
mov
ds
lret
adc
mov
cs
sub
cld
les
jmp
outsl
inc
in
cmp
outsl
rclb
pushw
les
mov
sarb
cld
inc
outsl
rcrb
inc
lcall
xor
sbb
mov
sarb
mov
push
inc
enter
mov
in
sbb
jmp
popa
pop
cmp
mov
adc
jmp
mov
mov
aad
cld
js
add
dec
sbb
lret
aad
movsb
cld
sub
sarl
cld
sbb
sbb
mov
lret
dec
xor
sub
push
xchg
push
and
xor
dec
jne
adcb
test
or
inc
test
ret
inc
fs
js
pop
sub
test
out
int3
xchg
dec
sbb
cwtl
lret
lret
movsb
dec
inc
jo
mov
rclb
jg
sub
scas
fs
mov
lret
add
lret
inc
int3
sbb
lret
ret
mov
shll
xor
orb
inc
push
mov
push
dec
insl
mov
fisubs
les
leavew
push
push
sbb
js
stc
cmp
ret
adc
sub
xchg
movntps
cmpsb
xor
cs
lret
aas
inc
and
pop
stc
xchg
push
shl
sub
loope
out
int3
lret
imul
pop
jle
loop
addr16
jmp
inc
sahf
dec
mov
adc
mov
dec
cmpsl
ret
les
xchg
push
roll
sub
jae
jo
fdivrs
dec
dec
mov
push
je
xchg
scas
lds
xor
leave
subl
fimuls
jbe
cld
mov
xchg
enter
inc
cld
lret
dec
fs
mov
lcall
lea
cs
enter
shrb
ror
inc
lret
arpl
dec
push
xchg
dec
sti
in
sub
aas
jge
les
imul
andb
sub
iret
les
xabort
cs
mov
pushf
push
and
jno
push
leave
inc
inc
nop
dec
xchg
sub
jo
leave
sub
push
notl
iret
leave
mov
push
pusha
mov
adc
dec
pop
sub
jno
dec
jge
xchg
dec
push
loop
scas
movsb
push
and
and
mov
dec
xchg
imull
fsubs
dec
and
scas
xchg
xchg
or
dec
or
mov
jno
loop
mov
loopne
sbb
pmulhuw
call
pop
mov
loop
sbb
adc
popa
or
xchg
jne
jo
int3
into
test
dec
into
mov
and
mov
jae
repnz
mov
xor
and
dec
test
xchg
imul
mov
mov
ljmp
xchg
shlb
cmp
repz
push
iret
push
inc
dec
ret
imul
push
pop
testb
pusha
loop
dec
scas
stos
xchg
dec
in
andb
dec
in
lret
jo
aaa
inc
dec
cs
loop
bound
lock
cmp
enter
mov
xchg
jno
add
sbb
jecxz
sub
mov
xor
ficoms
movaps
xlat
int3
inc
xchg
xchg
jne
jae
add
fmull
jp
inc
int3
imul
int3
inc
dec
and
dec
test
dec
dec
mov
cmpsb
insl
cs
dec
jae
into
pop
push
dec
out
mov
dec
pop
jg
daa
dec
jne
sahf
std
pop
fs
aaa
mov
sahf
push
fidivs
fs
std
sbb
ret
push
fsubrl
daa
insl
fs
adc
imul
cmp
loopw
into
jmp
xchg
jge
imul
icebp
mov
mov
dec
loop
scas
pop
push
ja
push
mull
aaa
dec
mov
pop
cmp
out
sub
sbb
inc
repnz
repnz
imul
xor
add
repnz
dec
fimuls
addr16
ror
daa
mov
roll
scas
and
pop
jb
shr
push
jb
mov
jb
cld
inc
pop
in
jb
sub
push
cld
cmp
test
jecxz
xor
jmp
inc
jo
inc
insl
shll
inc
repz
cs
shrl
adc
sbb
dec
jae
shlb
loop
inc
popa
dec
sub
loope
jae
jno
imull
jae
insb
mov
push
loop
psraw
loop
jo
lahf
lret
lock
fsubs
mov
mov
call
shl
ffree
dec
push
movsb
lock
lock
cld
jg
dec
fs
xchg
xor
lcall
pop
cltd
cs
jo
fadd
jle
cld
inc
pop
mov
sahf
cs
xor
stos
repnz
inc
push
bnd
in
stos
sbb
iret
icebp
aas
dec
popa
cld
sbb
inc
in
stos
mov
js
push
dec
ret
push
mov
sub
jae
icebp
adc
sub
sub
push
push
and
adc
jno
cs
jno
adc
jno
data16
cwtl
pop
jb
arpl
dec
jno
dec
popa
inc
icebp
loop
ret
popa
dec
arpl
test
adc
adc
jge
test
sti
jmp
negb
loope
cltd
shrb
jne
loope
idiv
fxch
mov
push
loop
test
lods
cs
mov
loope
cwtl
push
cs
aad
mov
test
push
or
fs
lcall
pop
or
gs
jp
imul
popa
cld
cli
jbe
cld
imul
adc
push
fmull
mov
sti
in
sub
inc
iret
idivl
int
adc
scas
pop
mov
notl
pop
push
loope
sti
in
sub
xor
adc
dec
scas
out
sub
ja
cld
addr16
ficoms
jo
push
or
adc
mov
pop
cld
out
add
hlt
sub
and
and
add
hlt
aaa
int
inc
mov
aas
pop
popa
dec
and
test
and
push
hlt
jge
addr16
cs
jmp
hlt
pop
ret
loope
pop
shrb
jne
cld
out
xor
shll
pushf
xorl
js
cmp
cmp
shrl
cs
cltd
cmpsb
je
cs
dec
je
arpl
jp
inc
add
pushf
push
loope
cwtl
jb
cmp
pop
data16
mov
jb
pusha
xchg
push
cmpsb
in
fs
push
sbb
lds
jnp
in
stc
int
orl
mov
inc
lock
pop
sub
sbb
pop
xor
ret
push
mov
lods
mov
sub
fimuls
xor
cld
add
mov
pop
loop
repz
inc
test
jmp
xchg
mull
loop
aas
seto
cmp
add
push
add
push
adc
sub
pop
cli
jae
inc
cli
mov
lcall
repz
mov
pushf
cmp
cli
pop
lods
jecxz
aaa
add
cli
popf
stos
es
and
push
ss
jg
cld
inc
cmp
shl
lret
dec
pusha
mov
nop
test
test
jp
pusha
cmp
cs
sahf
pop
movsl
jp
and
mov
ljmp
cld
loop
fisubs
sub
stc
xor
sahf
cmp
xchg
out
jae
sub
lods
mov
mov
cmpsb
sub
sti
mov
pop
adc
loop
or
fidivl
or
xchg
sbb
mov
jnp
dec
iret
scas
sub
loop
test
test
or
mov
mov
fdivrl
aaa
clc
test
insb
int
clc
sbb
scas
push
and
test
xchg
ja
mov
clc
pop
mov
mov
das
push
mov
test
jmp
jne
mov
mov
sbb
dec
js
mov
js
push
add
cld
xor
dec
cmc
scas
repnz
cwtl
push
stc
fstp
mov
inc
lret
jb
inc
repz
xchg
cmpsb
push
jmp
pusha
js
lret
int
cmp
mov
test
jmp
stc
inc
loopne
ficomps
push
dec
and
and
les
popf
sti
in
sti
movsl
jmp
add
xor
scas
sub
inc
fcoms
xchg
sbb
inc
add
pop
or
xor
pop
or
es
pop
sub
push
push
jp
dec
jns
test
and
jge
dec
push
scas
push
jge
dec
jg
aaa
or
inc
dec
push
push
cmpsb
std
cld
xlat
pop
push
out
mov
js,pt
mov
push
inc
pop
jle
pop
or
add
jmp
sub
inc
mov
test
dec
jle
shrb
lds
dec
shrl
dec
push
sub
scas
jg
call
push
ror
cld
test
imulb
mov
mov
mov
ret
xor
lcall
inc
scas
fmull
inc
scas
push
jl
adc
pop
shlb
and
push
dec
jg
jo
sbb
loop
and
xor
mov
pop
pop
leave
insl
jmp
and
push
cli
psraw
inc
loop
jo
jge
cmpsl
daa
pop
call
inc
xchg
sahf
es
cli
popf
mov
cld
cmp
cld
dec
pop
push
cld
fldl2e
dec
push
clc
cmpsb
shrb
rclb
inc
inc
dec
cld
inc
shl
imul
sub
push
dec
push
adc
sti
iret
mov
xchg
inc
test
and
dec
dec
push
cmp
push
jmp
pop
bound
aam
dec
loop
scas
pop
hlt
ja
ljmp
call
cld
xor
outsb
aas
push
popa
cli
mov
es
shlb
sub
pop
data16
loopne
mov
mov
sti
xchg
mov
jecxz,pn
outsl
pop
adc
jb
dec
shlb
xor
pop
outsl
popf
mov
inc
ds
cmp
out
call
mov
js
pop
bound
cld
test
mov
mov
clc
ds
fxch
jl
and
mov
ficoms
dec
push
stc
lock
push
mov
inc
or
scas
sti
sub
sbb
sbb
dec
push
mov
loop
adc
aaa
insl
in
sbb
rol
cld
test
shlb
es
sti
in
push
add
cltd
jae
cwtl
fnstcw
decl
shll
pop
xchg
leave
clc
push
mov
inc
test
cmc
cmpsl
cmp
out
adc
movb
andb
inc
scas
pop
bound
fs
bound
pusha
iret
bound
fldt
mov
sbb
push
jecxz
xlat
iret
jecxz
stos
jecxz
mov
push
imul
dec
cwtl
adcb
pop
adc
jecxz
xchg
test
cmc
pushf
xor
in
arpl
arpl
fbld
pop
or
inc
arpl
scas
test
cmc
pushf
mov
insl
in
loopne
movsb
loopne
cs
movsl
sti
rorl
xor
in
loopne
cli
inc
loopne
sbb
push
pusha
test
pop
lods
stos
inc
pusha
bound
rorl
dec
cld
jb
push
iret
adc
loope
test
loope
mov
imul
loope
mov
pop
push
lret
loope
sub
popa
adc
popa
mov
cmp
scas
inc
lods
fldt
xchg
dec
mov
dec
popa
sbb
in
out
mov
jne
cltd
out
push
add
out
xchg
out
fs
xor
mov
adc
test
data16
mov
out
and
xchg
push
fwait
xor
cld
push
push
iret
xor
dec
cs
out
fwait
iret
out
out
out
or
sub
in
out
test
test
in
xchg
adc
cs
push
sbb
fs
rorb
stos
dec
and
dec
or
mov
xchg
pushf
loopne
insl
xlat
test
pop
sbb
sub
in
in
mov
test
js
punpcklbw
loop
ja
sub
test
arpl
add
pop
int
push
fs
pop
push
cs
js
dec
cmc
mov
lahf
in
shld
jb
dec
cmc
psllw
push
loope
inc
cld
sbb
pushf
cli
pop
imulb
pop
jne
sbb
jne
fs
jne
int
jne
jns
fbstp
pop
out
imulb
ljmp
ljmp
ljmp
pop
imul
push
lahf
xor
cld
adc
push
iret
sbb
xlat
push
push
shrb
mov
fsubrl
loope
popf
stos
cmpsl
mov
push
xchg
fs
jmp
fs
jmp
das
jmp
fs
jmp
sub
cmp
dec
pop
mov
jmp
cld
pop
pop
dec
jmp
fs
push
test
push
imul
pop
int
sub
imul
jmp
aad
cmp
dec
imul
test
loop
decl
cmp
fimuls
dec
test
repnz
gs
into
inc
insb
cld
call
stc
pop
push
mov
xchg
mov
movsb
pushf
and
insl
fs
sbb
dec
push
mov
push
scas
push
bound
pushf
mov
insl
in
jmp
cs
inc
sti
js
dec
mov
ret
int
jmp
inc
iret
jbe
mov
imul
iret
imul
imul
push
cld
jecxz
push
iret
int3
adc
leave
out
cs
out
mov
and
out
jo
subb
jnp
push
iret
dec
adc
outsb
lahf
mov
dec
shlb
push
cld
lock
push
iret
adc
leave
out
cs
push
cmp
out
mov
stos
inc
imul
dec
stc
xchg
test
pop
lock
out
jne
and
sbb
cmp
push
and
jnp
rol
sti
fs
outsl
pop
test
outsl
stos
dec
jo
loope
fdivrp
cs
in
push
mov
in
cs
dec
cmp
dec
inc
mov
in
jge
and
xchg
jo
sti
fs
xchg
mov
scas
inc
push
scas
push
fmuls
icebp
cs
sub
popf
in
pop
xor
popf
in
fdivrl
popf
in
jmp
push
xchg
faddl
stos
inc
rorb
gs
xchg
push
dec
and
cmp
inc
push
dec
in
mov
sbb
sbb
dec
in
xchg
ss
out
push
sbb
mov
sbb
pop
out
test
cs
xchg
push
mov
xchg
cs
xchg
mov
pushf
xchg
push
xchg
cld
sbb
xchg
imulb
xchg
ret
sbb
or
insl
xor
sbb
dec
adc
mov
adc
cwtl
pop
sub
imulb
adc
mov
pushf
adcl
cmp
dec
inc
mov
xchg
jne
add
cmpsb
xchg
imulb
xchg
ret
sbb
adc
add
add
adc
pop
sub
bound
push
adc
push
adc
cld
mov
push
nop
test
sub
push
inc
shll
mov
js
cmp
leave
dec
nop
cmp
test
push
adc
pop
xor
out
cld
adc
sbb
dec
adc
in
punpckldq
jb
push
xchg
adc
sbb
dec
inc
and
inc
aaa
xchg
stos
aad
xchg
ret
sbb
out
cmp
test
imul
adc
pop
mov
ficoms
xchg
cmp
out
adc
and
sbb
xchg
xchg
insl
fs
xchg
sbb
dec
dec
mov
xchg
jmp
inc
mov
scas
adc
and
sahf
sbb
lahf
push
insl
xchg
sbb
dec
enter
sub
mov
push
loope
gs
arpl
push
pop
leave
xchg
cs
xchg
jae
adc
cmp
iret
xchg
sub
inc
xor
scas
adc
xchg
out
adc
imul
pop
pop
jae
sbb
mov
sub
in
pop
popa
popa
cmp
inc
movsl
pop
scas
add
dec
test
bound
push
cmovns
cmpsb
xchg
push
addr16
dec
xchg
adc
xchg
imul
insl
in
adc
test
push
aaa
into
sti
push
xchg
jmp
inc
lods
adc
adc
scas
pop
notl
pop
stc
std
cs
in
test
in
mov
jae
and
fs
dec
cmp
iret
in
xchg
inc
mov
scas
adc
scas
pop
jmp
out
int3
std
cs
gs
mov
gs
jae
mov
fs
iret
cmp
inc
gs
pop
loope
frstor
lret
test
insl
in
lcall
lcall
iret
lcall
adc
lcall
je
aam
sbb
sbb
or
jnp
movsb
int3
sti
repnz
pop
sbb
pop
addr16
pop
int
add
cs
jae
xor
cmp
fwait
adc
js
dec
fwait
xchg
xchg
fwait
imul
fwait
jnp
xor
insb
in
in
pushf
sbb
insl
fs
sbb
fwait
imul
loope
dec
pop
xchg
sub
dec
daa
cmp
sbb
cwtl
in
imul
leave
fs
cwtl
mov
and
adc
cwtl
test
pop
fdivrl
test
cwtl
and
scas
push
ljmp
aas
cmc
lahf
cmp
push
sub
insl
lock
iret
mov
repnz
sti
jle
mov
jge
lods
int3
and
push
movl
push
cltd
mov
pop
jb
push
negl
mov
cltd
ja
adc
cltd
mov
sbb
xor
ud1
jb
fstpl
sbb
push
inc
repz
inc
decl
sbb
clc
fs
cld
adc
rorb
pushf
mov
sahf
pushf
int
jne
rcrb
sti
addr16
xchg
sub
adc
push
scas
fs
push
mov
fs
dec
push
cmp
mov
push
xlat
cld
sub
dec
fwait
lahf
loope
add
and
cs
lahf
jae
push
lahf
mov
addr16
lahf
sub
inc
jp
scas
adc
pop
out
sbb
sub
push
dec
leave
pop
cs
pop
jae
dec
pop
cmp
dec
icebp
aaa
outsl
and
sub
fs
pop
adc
push
pushf
andnps
inc
pushf
scas
inc
in
jno
pop
pop
sbb
jl
imul
pop
cmp
out
sbb
push
jge
sbb
inc
sbb
fs
sbb
jge
dec
mov
xlat
cld
lods
add
mov
or
jge
lea
leave
lea
repnz
rorl
xchg
iret
or
lea
sub
lret
fimuls
cld
cli
or
inc
jne
scas
pop
pushf
andb
scas
push
xor
inc
cld
insl
lret
movb
loop
add
subb
test
bound
push
fwait
add
push
cmp
sti
fldl
mov
in
add
add
stc
dec
add
gs
je
mov
jo
dec
sub
dec
sbbl
test
loop
mov
cld
jno
inc
cld
xchg
lds
add
add
xchg
mov
add
jge
push
add
cld
jns
inc
cld
lcall
dec
push
add
sti
movsl
cmpb
orb
xorb
add
cmp
sub
xlat
ss
dec
add
test
add
in
movd
jb
adc
push
mov
cld
cmp
push
xchg
jp
dec
cmpl
jb
jmp
push
xchg
add
out
mov
test
in
pop
xchg
and
sub
add
add
incl
push
xchg
leave
xchg
fwait
xchg
out
add
lods
mov
inc
mov
movsb
fs
cld
push
xchg
xchg
out
insl
in
push
cltd
inc
push
jae
xchg
push
mov
mov
push
jl
out
test
fs
push
mov
push
imul
in
pxor
jb
xchg
cld
sahf
xchg
cmp
fldl
jp
dec
xchg
in
xchg
or
push
push
pop
inc
cld
mov
inc
xor
test
cmp
scas
adc
pop
scas
pop
jb
out
and
outsl
pop
push
add
test
or
fs
test
popa
cld
and
jp
scas
shrb
in
add
xor
push
mov
add
in
dec
test
sub
fs
add
cld
cmp
shr
push
adcb
lahf
xchg
imul
inc
insl
test
mov
inc
xchg
imul
xchg
jnp
mov
push
adc
push
cld
xchg
rcr
dec
fs
aas
test
dec
adc
out
mov
cs
mov
leave
mov
mov
mov
pop
test
addb
adc
scas
pop
jmp
out
mov
test
push
mov
or
mov
cmp
cld
mov
or
cld
sub
rcr
imulb
or
test
xor
cwtl
cwtl
mov
test
imul
dec
inc
loope
scas
fs
ds
mov
imul
add
adc
or
cld
aaa
or
shr
rorb
fs
test
pop
mov
decb
scas
pop
adc
cs
push
and
mov
sub
mov
jb
dec
mov
inc
mov
out
inc
cld
sbb
inc
iret
lcall
or
iret
or
loop
or
cwtl
addb
dec
data16
dec
xchg
std
cs
mov
test
mov
repz
imul
mov
cwtl
dec
or
xchg
test
push
or
pop
inc
jecxz
es
dec
mov
test
cld
into
dec
fs
push
orb
ljmp
jb
inc
dec
arpl
push
mov
testb
inc
fisttpll
pushf
mov
insl
jge
leave
mov
and
aam
push
cmp
loopne
jmp
adc
decb
imulb
pop
data16
sbb
push
insl
fs
sbb
cmp
dec
pusha
aaa
arpl
dec
cld
ljmp
cmp
packssdw
in
sysexit
lcall
cmovno
loop
push
pushf
inc
cld
icebp
loope
imul
fs
aas
jle
mov
scas
pop
xor
pop
mov
leave
mov
dec
mov
pop
mov
adc
or
addb
adc
or
pop
lock
movsl
or
dec
leave
or
jno
jae
inc
or
jb
lfs
mov
ret
imulb
mov
in
mov
fs
mov
cmp
data16
cmp
pop
dec
mov
mov
imul
cmp
enter
fidivrl
idivb
mov
cwtl
iret
mov
int3
test
out
dec
cmp
mov
mov
mov
fs
ret
test
cs
mov
fs
mov
std
imul
fcmovbe
aad
test
xor
fs
aaa
xor
test
xor
dec
dec
xor
xor
out
add
xor
stos
mov
push
lahf
mov
repz
xchg
ret
xchg
imul
insl
fs
sbb
mov
out
scas
popl
xor
lods
fucom
pop
xor
in
push
mov
sti
out
xor
ret
adc
xor
xor
jle
push
iretw
xor
jne
or
mov
mov
pop
mov
int
mov
mov
ret
push
mov
mov
data16
pop
mov
push
sahf
ljmp
scas
gs
jmp
xor
fs
movsb
xor
out
xor
ret
adc
xor
xor
outsb
xor
iret
mov
jne
imul
adc
cmpxchg
call
fnstsw
movntq
loop
imul
fisubl
test
in
int
and
inc
stc
fidivs
nop
ret
push
mov
mov
out
xor
mov
dec
ljmp
sub
mov
mov
mov
mov
mov
mov
xchg
leave
ss
ss
xchg
ss
mov
lret
mov
inc
fnsave
lods
mov
adc
xchg
pop
jnp
jb
outsl
push
pop
mov
cld
push
cld
xchg
cmp
gs
xchg
or
ja
adc
dec
mov
inc
mov
mov
mov
mov
pop
leave
aaa
cs
aaa
jae
adc
mov
and
les
inc
cmp
aaa
std
mov
mov
aaa
push
pop
leave
mov
pop
mov
repnz
mov
imul
xlat
mov
cmp
into
fs
mov
pop
jbe
fucomp
lret
dec
shll
xor
pop
xor
cld
sysenter
add
xor
inc
mov
xor
cld
fs
and
arpl
dec
xor
std
lret
add
test
call
cld
test
shlb
out
les
add
test
mov
not
test
xchg
nop
add
pushf
mov
jnp
aas
out
sti
clc
dec
pop
into
test
dec
mov
cmp
cmp
aad
lahf
lret
cwtl
dec
fs
cwtl
mov
pushf
mov
jne
mov
sti
js
dec
mov
fnstsw
mov
xchg
lret
push
mov
mov
mov
adc
cmp
pop
das
in
out
cmp
cld
dec
lock
and
cmp
lret
popf
dec
xchg
mov
mov
pushf
xor
jne
or
cmp
dec
roll
adc
mov
mov
mov
pop
cmpsb
fs
add
jb
xor
cmp
push
lods
inc
adc
inc
iret
cmp
leave
inc
movsl
cmp
test
cmp
repz
fs
decl
mov
cld
and
add
mov
scas
pop
dec
mov
mov
mov
xchg
std
repz
test
cmpl
lods
cmp
mov
cmp
sub
xchg
mov
dec
stc
and
mov
out
in
cmp
repz
fs
decl
jb
mov
add
mov
scas
fmulp
jp
les
sub
inc
cmpsb
fs
bound
or
dec
pushl
jb
fnstsw
add
cmp
fdivp
jp
inc
dec
test
lret
fs
push
out
pushf
mov
fs
mov
jb
and
scas
inc
inc
adc
xor
stos
fs
adc
imul
ds
jae
fs
mov
insl
fs
sbb
dec
cmp
aaa
out
dec
sbb
es
pop
stc
xchg
mov
xchg
push
cmp
adc
mov
out
aad
out
jg
mov
test
cld
jb
out
dec
xchg
aas
out
add
or
dec
jmp
aas
shld
jb
dec
aas
add
aas
scas
inc
std
xchg
scas
fisubs
dec
rorl
jp
cmpsb
fs
fwait
mov
or
dec
ljmp
mov
cld
push
mov
pop
lds
out
outsl
and
aam
inc
bound
cmp
xor
mov
fs
push
cmp
call
cmp
push
in
xchg
inc
inc
pop
lods
cld
aam
jmp
push
cmp
push
lods
xchg
jae
imul
lods
cs
fldcw
cmp
mov
in
cmp
cmp
cwtl
dec
fs
sub
pushf
repnz
jnp
insl
xchg
sti
fs
mov
jmp
pop
cld
or
cltd
jae
cmpsb
fs
fisubs
psubd
sub
inc
addr16
and
xchg
or
xchg
and
imul
and
jge
es
and
and
icebp
dec
and
sbb
mov
inc
fwait
mov
shrl
sub
adc
mov
push
cld
dec
mov
sbb
mov
test
and
out
xor
clc
fs
incl
and
bound
add
and
pop
add
bound
push
sbb
sti
out
mov
xor
mov
push
mov
mov
sub
call
mov
adc
and
lods
jae
shrl
and
and
and
pop
xor
cltd
cld
fbstp
mov
xchg
test
iret
mov
cld
jmp
mov
scas
pop
mov
bound
fnstenv
xchg
enter
adc
xchg
push
and
cld
jbe
inc
cld
xchg
sbb
cmpsb
test
cmpsb
pop
xor
fsubl
cld
clc
cmpsb
add
cmpsb
scas
shrb
andb
mov
xchg
es
adc
adcl
es
cs
es
pop
es
imul
cs
rcrb
cmpsl
sbb
sahf
imul
and
lods
dec
loope
loope
test
daa
push
and
daa
lods
pushf
sub
jne
ds
jnp
fistpl
mov
inc
daa
and
cld
jns
push
iret
stos
adc
push
mov
movsb
imul
stc
int
loop
fldenv
push
iret
mov
xor
cmp
and
ds
push
test
sti
js
dec
mov
push
and
ret
sbb
pushf
mov
cmp
mov
cld
fwait
mov
cld
aaa
push
ret
mov
dec
add
mov
subl
mov
imul
adc
sbbl
lods
mov
and
push
xor
mov
xor
imul
stos
fisubl
subl
nop
xchg
stos
insl
in
stos
pushf
pusha
stos
jne
ja
jnp
nop
pushf
sti
arpl
sub
add
adc
sub
loope
mov
cs
push
icebp
leave
sub
stc
sub
int3
sub
mov
pop
xchg
inc
stos
cmp
cld
adcl
pop
cmp
stos
inc
cld
hlt
sbb
outsb
aad
cld
movsb
pop
insl
inc
or
test
mov
shrb
push
cld
cmpsl
sub
inc
lea
sub
leave
dec
sub
in
test
jmp
test
sub
sub
or
jae
push
xchg
test
xor
xchg
adc
cwtl
sub
mov
jb
mov
add
sub
out
add
sub
cs
aad
lea
cld
add
inc
mov
scas
pop
xor
push
cmp
push
in
cld
out
and
pushf
push
subl
sub
test
imulb
sub
in
xchg
sbb
jg
fsts
sub
jp
mov
or
jne
stos
pop
sbb
loope
clc
std
subl
in
or
dec
scas
cmp
orl
sub
call
in
cs
dec
cs
pop
iret
cs
into
subb
shrb
jmp
ja
xor
enter
scas
mov
loop
mov
add
int3
scas
push
aam
jmp
ret
scas
cmp
dec
scas
sbb
test
push
das
test
pop
rolb
aam
jmp
inc
das
mov
das
imul
lods
jnp
fsubr
fs
lods
jb
and
cmp
cld
dec
lods
push
mov
adc
dec
lods
mov
sub
aaa
movsl
in
sub
ljmp
sub
push
sub
push
ret
cld
je
push
add
adc
lcall
rcr
push
fnsave
cld
sub
inc
cld
lret
jl
mov
push
mov
mov
sub
push
pop
jb
rcrl
cmpsb
pop
scas
inc
inc
xchg
fs
shlb
fs
xor
test
pop
sarb
rorb
rclb
shlb
pop
scas
push
shlb
inc
shl
push
pusha
xchg
sbb
mov
push
sbb
dec
test
sub
pop
clc
notb
push
iret
cld
adc
shrl
xor
push
cmp
sarl
test
sti
addr16
shll
pop
scas
sub
push
cld
dec
rcll
je
in
push
mov
mov
push
mov
and
jo
shrl
cld
push
push
iret
lock
rclb
iret
sarb
adc
cwtl
adc
shlb
cld
rolb
shrb
fs
gs
wbinvd
push
jb
xor
add
scas
inc
mov
push
bound
push
cs
lds
iret
push
sti
fs
push
mov
or
jb
cmp
add
shrl
pop
inc
shll
push
push
rol
push
not
sti
fs
adc
adc
jb
and
xor
scas
inc
rorl
bound
push
pop
push
lds
call
fs
mov
cmp
jb
sub
add
scas
inc
scas
pop
jae
bound
push
inc
lds
out
sti
rcrl
syscall
push
jb
sub
and
scas
inc
rorl
push
jmp
dec
push
mov
add
cmp
mov
push
xlat
adc
xlat
test
pop
leave
or
cmpsb
arpl
test
lahf
les
lods
xchg
push
jb
push
mov
push
push
cld
mov
inc
cld
inc
mov
push
test
push
arpl
in
inc
sub
adc
aam
push
sub
or
aam
movsl
mov
aam
fs
xor
in
decl
jb
cmpsl
push
add
push
scas
inc
push
mov
dec
and
lds
xchg
adc
add
cld
aas
and
ret
dec
jge
mov
and
dec
and
push
iret
xchg
adc
movsl
push
mov
movsl
mov
daa
imul
movsl
jo
scas
sub
movsl
push
cld
lret
push
in
test
push
fisubrl
pop
mov
dec
push
mov
mov
adcb
xchg
push
jmp
cs
pop
jae
cwtl
pop
mov
xchg
pop
jne
pop
pop
mov
pop
ret
sbb
fldt
or
fstpt
mov
int
cmp
imulb
fcmovnb
fs
in
fistpl
pop
sbb
scas
push
adc
pop
bound
xchg
mov
cmp
in
pcmpeqd
leave
push
adc
jae
xchg
imul
jo
scas
sub
fadds
cld
and
push
iret
repnz
leave
fsubrs
jecxz
push
jmp
pop
fsub
pop
sbb
aam
jmp
orb
push
inc
sub
fucomp
inc
decl
jnp
jb
arpl
jbe
out
xchg
xor
sub
aam
fnstcw
in
paddusb
jb
lock
clc
push
imul
iret
pop
sub
xchg
pop
stos
dec
mov
dec
pop
std
cs
pop
push
dec
leave
pop
jo,pn
jae
dec
pop
cmp
dec
mov
fidivs
scas
movsb
imul
push
test
push
fisubrs
fnstcw
inc
cld
xchg
pop
push
inc
jp
dec
fidivrs
in
sysexit
pop
jb
pop
pop
cmovno
push
icebp
pushf
shrb
push
pop
mov
insb
pop
dec
fistps
pop
movsb
mov
pushf
pop
fildll
inc
fistps
fistpll
stc
xor
adc
inc
popa
cld
data16
xchg
cmp
sarb
dec
pop
pushf
jno
jne
inc
pop
jnp
loope
sti
fs
pop
les
pop
scas
adc
fsub
pop
mov
cs
fcoml
leave
fsubrl
jns
jae
dec
fdivrl
add
pop
sub
push
pop
scas
adc
pop
out
mov
cs
pop
push
jns
pop
cs
pop
jae
je
mov
or
int
mov
pop
mov
int
and
sbb
popa
int
fs
cmp
dec
imul
push
inc
push
dec
mov
dec
ret
sbb
decb
fs
sbb
dec
dec
cmp
dec
aaa
mov
mov
lret
lahf
ret
mov
push
iret
xchg
adc
ret
mov
dec
ret
scas
sldt
dec
dec
push
pop
inc
pop
fs
xor
xchg
adc
fildl
iret
inc
jb
testl
data16
pop
cltd
ret
bound
add
test
insl
in
ret
pushf
dec
ret
jne
inc
ret
jnp
pushl
adc
dec
popa
jmp
aas
inc
loope
out
in
pop
test
jb
faddl
les
sbb
push
xor
dec
mov
out
dec
inc
push
dec
les
jne
cmp
ja
test
or
sbb
scas
aas
mov
xchg
and
lret
sahf
jno
push
adc
mov
inc
popf
add
adc
dec
or
movsl
cmp
scas
mov
mov
push
outsl
jg
in
fbld
or
lods
and
popf
adc
idivl
adc
pusha
int3
cmp
je
inc
sub
popf
into
push
icebp
jae
js
pushf
mov
mov
add
sbb
fstpl
out
popf
cmp
aaa
leave
lret
ret
or
shrb
jle
pop
mov
pop
push
popf
fisubl
daa
push
popf
mov
pop
push
adc
out
jp
testb
cs
enter
sbb
cld
jmp
movl
int
xchg
push
adc
xchg
test
jmp
ljmp
mov
shl
es
scas
hlt
ret
or
inc
sub
pop
ret
js
mov
dec
daa
sbbl
dec
fs
adc
test
dec
gs
dec
cmp
subb
sub
adc
xchg
aam
sbb
sub
push
add
jg
add
popf
push
inc
cmpsl
xchg
imul
sti
dec
mov
mov
popa
inc
push
lea
dec
xor
pop
outsl
jne
jo
inc
sub
inc
imul
decl
jb
mov
xor
cs
testb
and
adc
adc
out
mov
loopne
bound
inc
iret
sbb
pusha
push
leave
inc
lcall
sbb
push
adc
cmp
dec
sbb
ret
xchg
fwait
in
inc
xchg
test
push
into
inc
jnp
outsl
enter
push
sarl
cltd
pop
jo
push
loope
aam
xor
imul
or
pop
into
outsb
jnp
jb
and
cmp
stc
mov
fcomps
gs
mov
pop
insb
or
push
into
ja
mov
inc
int
movb
leave
inc
dec
loop
cmpsb
push
inc
mov
cmp
mov
dec
out
and
dec
adc
push
cmp
mov
push
cs
mov
out
lret
enter
dec
mov
js
jl
mov
jmp
aas
stos
cmc
stos
push
adc
ja
mov
sub
or
mov
rcrl
add
or
gs
lret
mov
sub
dec
mov
test
jg
jne
dec
ds
mov
in
pop
add
rorb
or
dec
add
pop
push
dec
lds
pop
pop
aam
jne
xchg
mov
iret
add
aaa
subl
jl
pop
push
dec
mov
bound
or
mov
mov
dec
cld
in
out
in
testb
inc
jg
mov
jle
jle
std
ds
test
popa
loopne
shr
mov
mov
loope
aad
mov
adc
or
imul
xchg
mov
nop
cmpsl
stc
add
negb
iret
cmpsb
inc
out
adc
arpl
js
ret
sbb
test
test
leave
push
mov
mov
sub
bound
jbe
cs
push
lea
jo
xor
push
andl
xchg
lret
jle
push
jnp
pop
mov
or
es
pop
iret
int3
je
push
push
aam
punpckhdq
shlb
clc
dec
ss
mov
cwtl
push
icebp
roll
push
outsl
les
fcomps
and
jae
dec
bound
idiv
pop
data16
jne
pop
mov
movsb
inc
dec
xor
fsts
popa
int3
je
mov
jg
imul
out
jg,pn
mov
outsb
aad
adc
out
repz
mov
repnz
pusha
rolb
arpl
sub
push
and
lods
scas
int3
dec
call
sarb
cwtl
aas
outsl
dec
or
iret
mov
es
push
jo
cs
mov
jb
sub
into
sub
push
jp
xor
push
fs
cs
std
or
push
jbe
xchg
iret
sub
adc
cmpsl
inc
adc
jecxz
add
test
movsb
push
stos
jne
sub
or
or
rclb
inc
test
mulb
pusha
ljmp
shrb
test
dec
jp
pushf
jg
or
rorb
xchg
cmp
push
jg
mov
and
hlt
cmpsl
sbb
cld
stos
jnp
fdivr
cs
repnz
push
dec
jg
and
pop
test
xor
rcrl
std
divl
jb
xlat
scas
and
stc
in
mov
push
aad
fsub
ret
mov
sub
mov
jg
xor
add
popf
inc
mov
mov
into
setnp
adc
leave
movsb
clc
sub
inc
cltd
xchg
dec
cmp
or
cli
jp
out
and
cmpsl
dec
and
daa
and
inc
filds
rcll
xor
jnp
and
sti
mov
enter
or
dec
xor
in
or
adc
rcrb
jg
or
insb
sub
pop
add
xor
or
adc
sbb
push
add
sub
push
pusha
scas
fs
clc
push
adc
test
pusha
dec
mov
push
jge
cmp
dec
rcrb
mov
leave
jecxz
adc
cmp
in
cs
leave
push
dec
iret
leave
xchg
vpcmpeqw
dec
pop
sahf
daa
push
add
imul
dec
addr16
daa
and
mov
clc
lods
ret
rorb
insl
cld
mov
and
mov
insl
cld
inc
dec
pop
jns
insl
leave
mov
hlt
dec
dec
test
jb
or
inc
pop
iret
kaddb
das
mov
test
cwtl
into
stos
fmuls
pop
mov
mov
add
jns
into
mov
and
leave
popa
nop
lret
in
jb
dec
into
push
fs
fs
cmp
dec
into
pop
inc
bound
and
movsl
cld
out
fs
or
mov
xor
sub
frstor
push
jp
jp
iret
jb
je
out
mov
inc
cltd
push
mov
mov
fninit
or
lods
iret
scas
movsb
aad
pusha
pop
inc
and
test
iret
icebp
mov
mov
out
leave
in
xor
fs
test
callw
dec
sbb
lock
fs
dec
mov
repz
pinsrw
decb
aas
cmpsb
addr16
lock
in
pop
imul
movsb
call
push
mov
xchg
and
jae
xorl
dec
es
dec
int3
stos
getsec
push
std
push
ljmp
push
fldenv
sbb
mov
iret
dec
inc
pusha
xor
xchg
mov
scas
fisttpll
jge
iret
adc
stos
pop
or
cld
loopne
pop
cltd
jo
inc
pop
pop
daa
out
pop
std
add
inc
adc
mov
in
cmpsl
cs
or
push
std
cmc
push
fdivrp
movsl
aad
dec
jge
dec
xchg
enter
clc
std
jo
nop
cmc
pop
adc
pop
jge
movsb
icebp
loope
push
and
add
push
jge
lcall
es
mov
push
xchg
and
fs
repnz
data16
mov
sbb
jbe
pop
repz
mov
dec
out
cmp
outsl
mov
sub
xchg
sbb
lods
mov
xchg
and
in
inc
xor
testl
dec
mulb
je
mov
je
arpl
out
addr16
popa
jg
mov
push
mov
lods
popa
xchg
repz
xchg
popa
fs
std
or
cld
gs
pop
int3
repz
cld
cmc
jbe
arpl
out
arpl
jae
push
cmp
movsb
jae
scas
or
movsb
divl
add
je
sti
jae
nop
iret
ja
add
fsubrl
imul
jae
push
sub
stos
cmovl
hlt
call
pushl
sub
pop
call
lock
dec
xor
lcall
repz
sub
sbb
mov
sub
jb
out
mov
add
cmpsb
dec
xchg
inc
decl
jo
jo
jns
sub
testl
cld
jo
iret
cs
push
aam
jo
mov
and
dec
push
scas
inc
test
cmp
inc
cld
mov
inc
mov
stos
fsubr
fiadds
push
push
icebp
movsl
in
xor
add
jo
leave
jo
xchg
jle
jecxz
je
stc
movsl
add
xor
jne
add
adc
dec
inc
pushf
fs
jno
inc
ret
test
fs
jno
dec
leave
mov
hlt
mov
jp,pn
fs
in
xchg
xor
imul
mulb
div
push
sub
add
push
push
dec
mov
lcall
cltd
jbe
adcl
push
mov
xchg
lods
jbe
addr16
lds
inc
test
pop
mov
push
xor
pushf
sub
mov
cmc
push
mov
and
push
icebp
or
movsb
divl
scas
iret
adc
insl
cld
sti
neg
nop
or
outsb
sub
imull
mov
adc
ljmp
pushf
je
bound
iret
ja
shll
adc
pushf
cmp
mov
and
incl
push
das
js
sub
mov
push
add
hlt
loope
inc
xor
cs
in
push
lcall
and
out
jmp
out
push
dec
inc
xorb
movsl
jp
fnsave
lret
cltd
inc
adc
inc
je
add
jecxz
adc
je
adc
scas
ljmp
xor
push
pop
test
paddd
cld
push
lds
js
jmp
sub
lds
cld
add
adc
stos
push
outsb
aam
das
jne
shlb
mov
sub
push
aam
scas
stos
std
stc
mov
inc
decl
push
push
lds
push
lods
call
sub
pop
pushl
xchg
addb
stc
mov
xor
sbb
cmp
insl
cld
jecxz
pop
cwtl
insl
jg
outsb
mov
frstor
adc
mov
mov
push
xor
cmpsb
sbb
sarb
cmpsl
jp
push
out
sbb
je
jb
add
mov
insl
or
xchg
xchg
mov
inc
pop
adc
inc
clc
hlt
clc
hlt
jecxz
and
jp
sbb
jmp
jns
cs
mov
or
movsb
mov
cmp
jl
mov
jno
xor
cld
sar
pushl
mov
setno
cmp
jae
incl
aam
jmp
mov
aam
jnp
jo
push
outsl
stos
sub
jnp
cld
rcl
sarl
fcoml
jnp
in
rcrb
sbb
xor
inc
dec
mov
jae
and
pop
out
loope
sarb
inc
clc
jbe
iret
push
dec
out
push
iret
clc
sti
fs
cmp
leave
clc
sub
push
mov
push
mov
cmp
cmpsb
mov
xor
pop
lahf
sbb
out
dec
outsb
scas
jecxz
sbb
mov
mov
dec
push
fsubrs
inc
inc
dec
ret
sarl
push
push
cmp
sub
and
cld
add
add
stos
push
mov
aam
push
jne
outsl
ss
inc
stc
std
in
stc
xor
sub
fs
scas
push
inc
loop
sub
test
fs
cmp
jns
cmpsb
test
in
push
lods
shlb
leave
aaa
imul
jo
je
ret
mov
decb
inc
mov
pop
rorl
pop
adc
push
test
sti
in
movsb
pusha
xor
sub
push
add
imul
out
fdivl
mov
push
and
loop
cld
dec
roll
jle
fdivr
ss
cmc
push
ljmp
rcll
xor
mov
stos
push
inc
ja
xor
aam
pop
in
push
xor
push
jp
dec
jecxz
in
pop
sti
fs
jg
pop
scas
push
test
jecxz
mov
jb
sub
inc
iret
leave
aas
inc
dec
loop
adc
pop
push
pusha
insl
cld
cld
pop
movsb
arpl
sub
push
inc
cld
and
shlb
push
cld
pop
addr16
pop
pusha
and
xchg
xlat
scas
pop
xchg
jl
and
mov
out
inc
jecxz
arpl
jl
movsb
repz
xor
jmp
dec
inc
and
dec
arpl
jmp
movsl
in
mov
jo
leave
cmp
adc
mov
xorl
dec
cmp
lahf
aam
std
push
addr16
movsl
jae
iret
push
loope
jp
nop
cmc
jo
dec
loop
add
pushf
aam
rcrb
jge
push
mov
dec
mov
push
icebp
imul
push
xor
pushw
iret
insl
jp
test
jno
loopne
xchg
push
imul
loop
fs
popf
pushl
bound
and
cmc
cld
push
mov
mov
cmpsb
push
and
xor
scas
flds
dec
inc
data16
add
fwait
pushf
or
or
bound
inc
out
push
lds
cmpsb
inc
imul
inc
cld
jbe
inc
jbe
cmpsl
mov
mov
addr16
xor
popa
jle
mov
sbb
sub
jecxz
aaa
pop
cmpsb
jns
pop
mov
mov
mov
pop
in
iret
jecxz
push
stos
pop
push
in
cld
mov
cmpsl
out
mov
out
sub
fiaddl
arpl
push
shll
pushf
pop
xchg
loopne
cld
mov
je
pop
scas
pop
or
icebp
push
fs
sub
or
cmp
and
pop
loopne
leave
add
add
push
dec
mov
dec
mov
or
loope
inc
stc
loope
out
dec
mov
add
into
mov
pusha
mov
fs
pop
bound
push
pusha
popa
jmp
daa
jecxz
mov
repnz
pusha
jmp
or
ret
pop
inc
cwtl
loope
scas
xor
inc
test
mov
mov
sbb
or
xchg
mov
addr16
cltd
sub
pop
sbb
movsb
inc
mov
lods
loope
or
pop
stc
loope
cld
xchg
cmc
push
xchg
imul
mov
cli
lds
arpl
les
bound
fmul
adc
lock
lcall
xlat
daa
mov
add
test
std
popa
fyl2x
in
idiv
sbb
push
fs
mov
fs
pop
cmp
aad
xor
dec
out
xor
xchg
jne
or
jo
jp
cmc
pop
sahf
icebp
sub
jmp
pop
data16
sub
push
push
in
sub
mov
stos
stos
xor
insl
jge
sarb
xchg
jle
add
mov
xchg
test
out
insl
push
jnp
push
aad
fsubl
and
add
and
cld
and
into
testb
dec
cmp
add
and
movl
fmul
inc
sub
inc
out
xchg
js
or
pop
das
pop
pushl
and
push
subb
je
push
scas
scas
stos
jmp
inc
sub
inc
incl
inc
out
jae
dec
xchg
cld
jcxz
sub
rcr
ljmp
sub
add
in
pop
cmc
shl
clc
push
test
imul
push
pop
scas
pop
in
and
aas
sti
mov
dec
lds
test
lods
adc
fistpll
cmp
fs
inc
leave
mov
cs
fisttps
mov
dec
xor
sbbb
mov
push
inc
pop
cmc
mov
xlat
xchg
and
cmc
cmp
push
dec
xchg
cmp
cmc
fs
jne
mov
ja
xchg
add
imul
jne
in
mov
add
or
inc
aam
arpl
push
mov
cli
pushf
xor
cmp
xchg
dec
ljmp
in
mov
fdivl
leave
and
mov
mov
push
decl
cmp
mov
dec
popf
jmp
pop
bound
jne
frstor
call
mov
sub
push
int3
out
scas
pop
dec
int
sub
dec
dec
sub
xchg
add
iret
outsl
push
or
jp
lcall
mov
mov
shr
popf
decl
and
pushf
fwait
out
cmc
dec
mov
imul
mov
mov
iret
imul
stos
push
push
or
test
jbe
fs
inc
mov
xor
xchg
mov
dec
call
adc
call
punpckhdq
jmp
and
xlat
call
lret
jo
pop
notl
call
ljmp
sbb
sahf
rcrl
pop
sub
or
into
push
icebp
testl
fucomp
imul
push
in
int3
mov
inc
shl
jmp
pop
fdiv
push
mov
lret
jl
pusha
pop
push
hlt
mov
sbb
jecxz
mov
xor
imul
inc
add
xlat
mov
dec
movsb
pop
cmpsb
and
bound
jecxz
call
push
stc
test
cmp
and
pop
leave
pop
movsl
out
lods
shlb
popf
adcl
shlb
adc
and
fcomps
dec
jl
dec
out
or
stos
adc
pop
adc
adc
lods
sbb
pusha
sub
jns
outsl
push
dec
out
cwtl
inc
stc
arpl
pusha
mov
cwtl
pop
in
divb
shrl
inc
sbb
dec
jmp
divl
jg
dec
mov
dec
inc
insw
lock
fwait
aas
ret
jge
dec
jecxz
mov
jle
out
stos
dec
daa
inc
addr16
enter
jp
xor
ret
cmpl
lock
ss
decl
sbb
sahf
movsb
xor
add
and
xchg
scas
and
imul
push
sbb
bound
aaa
adc
hlt
push
sbb
rol
lret
adc
loop
sbb
jmp
in
notl
mov
inc
mov
data16
pop
jle
cli
inc
icebp
mov
sbb
pop
inc
mov
repz
jbe
xchg
or
nop
mov
dec
sarb
out
test
out
sub
inc
aas
iret
or
sbb
nop
popf
cwtl
and
lods
imul
test
jne
sbb
inc
jno
scas
and
add
jmp
sub
or
das
pop
rcrl
and
dec
jb
jg
push
mov
loopne
je
xchg
loopne
push
andps
xorb
sti
and
fmuls
or
shl
lret
cltd
xor
aas
fs
test
sarb
jl
push
pop
mov
mov
lahf
pop
movsb
dec
data16
aas
jl
sbb
fnstenv
push
xor
shrb
dec
inc
outsb
xchg
popf
shrl
out
cwtl
fsubr
out
cmpsb
and
push
mov
fdivs
push
out
xor
mov
ss
pop
enter
mov
jmp
decb
pop
sub
adc
hlt
out
jl
cmp
xor
iret
jl
mov
or
pusha
fwait
xorl
pop
addr16
xor
gs
imul
ret
dec
add
cmpb
inc
inc
cmp
cmc
sub
adc
or
icebp
push
cwtl
sti
ret
call
xchg
popa
push
in
fwait
out
lahf
cs
add
outsl
push
add
or
cld
or
add
jmp
mov
stc
cmpsb
imulb
jp
cmp
outsl
fmuls
add
movsb
mov
ss
sbb
insl
jl
add
jb
icebp
test
adc
dec
add
push
in
pop
jns
inc
cmp
mov
jl
cltd
in
push
sti
jmp
lods
in
mov
loope
daa
dec
sbb
fbstp
decl
aam
aaa
sub
cmc
push
push
xchg
aaa
inc
rorb
lret
inc
inc
outsl
xchg
mov
ljmpw
shlb
xlat
ss
test
outsb
push
dec
subl
js
repnz
aaa
fs
xchg
decl
push
mov
lock
ret
inc
into
das
in
ret
ss
imul
ds
inc
jnp
insb
clc
mov
sub
add
sub
ret
inc
in
xor
sbb
push
lds
jno
push
jp
popa
sub
push
enter
addl
cmp
cmpsb
andb
xor
into
push
je
xlat
or
or
fwait
jle
push
sbb
out
and
jnp,pt
scas
sub
movsb
icebp
mov
ret
xchg
lods
les
sbb
mov
sbb
dec
jl
outsl
fwait
jge
into
mov
fs
xchg
mov
test
or
pusha
or
push
xlat
das
aam
push
mov
jns
jp
sbb
cs
stos
test
sti
out
lods
lret
cld
adc
sbb
cmp
hlt
or
cld
dec
into
push
cmpsb
push
add
ja,pn
pop
stos
adc
movb
clc
out
mov
cmp
imul
repnz
add
mov
ret
mov
xor
lret
int
pop
add
sub
jne
add
push
mov
cmpsl
roll
xchg
inc
xchg
icebp
int
ret
jns
std
cmpsl
cmc
jne
scas
mov
sbb
push
enter
test
xchg
cmp
pop
es
xor
repz
xor
outsb
xchg
sbb
push
jl
dec
pop
and
sbb
inc
mov
xchg
fs
and
imull
sbb
leave
push
in
leave
jb
push
imul
push
adc
jle
or
push
xchg
lock
dec
and
ss
int
lret
pusha
and
jo
leave
cld
xchg
adc
xor
xchg
dec
push
adc
pop
fadds
jle
push
xlat
inc
inc
xchg
or
dec
lods
shl
into
and
test
movsb
stos
mov
jns
mul
stos
adc
hlt
jl
ror
out
sbb
int3
scas
sbb
fimuls
dec
in
lock
mov
xchg
pop
outsb
popf
xor
ljmp
pop
rcrl
adc
mov
push
mov
cmp
notl
stos
inc
xor
push
adc
jge
test
sbb
test
stc
pop
and
test
in
les
jmp
cld
push
js
xorb
das
shll
xor
mov
jne
xchg
in
push
or
shll
sbb
adc
cli
mov
and
sbb
decl
xchg
test
adc
adc
lods
fs
aad
mov
xchg
add
pop
jle
sarl
mov
insl
rcrl
or
nop
aaa
sbb
repnz
mov
popa
sub
inc
xchg
mov
xchg
mov
es
daa
mov
add
nop
add
aad
or
cs
daa
fwait
sbb
push
lcall
cltd
xchg
sbb
insl
iret
jnp
and
nop
sub
nop
shlb
lcall
loop
push
jb
test
xchg
jmp
rclb
fs
push
cmc
cld
pop
push
dec
push
inc
test
iret
push
push
cs
inc
mov
sti
xchg
fdivrl
mov
inc
lret
lock
pop
stc
out
pushf
out
into
mov
jecxz
sub
mov
pusha
js
test
fs
call
lret
adc
test
shrb
mov
mov
fs
or
mov
push
fcmovnu
xor
vaddps
sub
aad
sbb
leave
lock
lods
int3
lahf
jl
stc
cwtl
xlat
movsb
jg
in
cs
push
into
sti
pop
push
inc
mov
movsb
out
mov
outsl
popa
lcall
adc
mov
push
jno
or
xchg
lahf
sarl
pop
hlt
adc
call
stos
mov
cli
scas
pop
ja
adc
into
leave
push
orl
ss
imul
nop
push
jmp
pop
cmp
roll
mov
xor
pop
xchg
jg
adc
mov
call
call
icebp
pusha
sbb
cmp
lock
ss
mov
iret
js
jne
out
jmp
iret
lods
pop
cld
sub
das
jb
leave
loope
xchg
jo
leave
in
and
aaa
sub
ss
clc
pop
jmp
or
pop
xchg
sbb
fs
xor
inc
out
sahf
push
xchg
mov
adc
adc
sub
jge
inc
push
std
sbb
into
mov
mov
push
sbb
orb
data16
adc
repz
adc
cs
loop
adc
jmp
cs
gs
pop
in
mov
std
outsl
mov
mov
mov
ret
aaa
arpl
loopne
and
xorl
inc
rcll
mov
data16
jecxz
icebp
sub
in
aaa
jge
mov
or
pop
push
out
jg
jno
out
pop
push
call
adc
dec
stos
ljmp
stos
pop
dec
jb
sub
lcall
data16
push
push
mov
sbb
cltd
or
push
xchg
je
sub
out
fs
xchg
pushf
mov
xchg
aaa
sub
ss
fwait
pop
cli
fcomps
cmpsb
bnd
sbb
push
fwait
popa
cld
and
imul
in
sti
cwtl
cmpsb
jg
sbb
push
xor
fs
xchg
mov
jge
sub
sbb
shrb
clc
lret
popf
negl
jg
xchg
mov
pop
jno,pn
mov
mov
into
sbb
or
pop
jne
cli
pop
imul
sbb
adc
push
add
dec
out
push
popf
sub
test
jno
jne
push
ss
mov
addr16
inc
mov
cltd
pusha
fs
js
xor
in
dec
jo
clc
popf
js
aas
dec
or
test
adc
hlt
lods
repz
pop
cs
mov
inc
loopne
adc
ss
jae
andb
and
cmpb
clc
popf
xor
outsb
push
mov
jbe
push
les
in
dec
sbb
push
push
push
in
popa
fdivrs
jns
jnp
adc
and
imul
lods
insl
push
popf
push
adc
negl
loopne
outsb
movsl
jg
adc
pop
mov
enter
ret
xor
ja
sub
dec
pop
inc
test
xor
call
rcr
add
and
iret
push
call
inc
jno
and
stos
push
jle
scas
or
stos
adc
xchg
mov
ret
push
scas
bound
sti
mov
inc
push
iret
les
add
xor
jmp
gs
jns
lcall
jg
stos
insl
popf
adc
lds
mov
lcall
test
pop
adc
and
adc
shlb
sti
jns
push
hlt
dec
fstps
ja
scas
pop
in
lcall
scas
sbb
jae
pop
xor
dec
jae
fwait
stos
sti
icebp
jp
and
jle
dec
pop
xor
jle
push
loop
mov
sub
mov
cmpb
xchg
pusha
leave
cld
adc
jo
aas
outsb
pusha
pop
push
jle
jmp
gs
mov
push
jecxz
aaa
mov
adcb
xchg
jg
lret
adc
jge
pop
jb
sub
jl
mov
or
fwait
pushf
push
pop
in
clc
and
ret
mov
cmpsl
in
js
mov
out
cmpl
ret
push
lahf
out
xchg
outsb
jno
push
addr16
add
mov
aas
int
inc
stos
xor
into
call
inc
and
xor
adc
sub
pop
test
fldcw
jno
lds
mulb
push
iret
cwtl
xchg
cmp
or
scas
cmp
inc
cs
test
cltd
xlat
cmp
pusha
into
dec
data16
mov
cltd
fcmovu
lock
push
add
test
das
sbb
pop
add
mov
jge
mov
mov
dec
pushf
outsl
xor
sarl
cmp
push
sub
outsb
pop
or
inc
sbb
xchg
push
pop
cs
imul
div
dec
mov
add
pop
aas
mov
sarb
popf
addr16
fdivrs
jae
inc
call
cmpb
adc
add
aas
lds
dec
xor
ljmp
inc
cmp
cltd
xor
push
sub
sub
sub
push
mov
das
shlb
inc
rcrb
and
push
rolb
cmpsl
inc
cwtl
pop
cmpsb
push
xor
out
lock
mov
pushf
sbb
pushf
xor
hlt
cmpsb
lahf
pop
xor
adc
sub
lods
sbb
pop
add
mov
sbb
sbb
mov
sbb
movsb
pop
dec
sbb
cs
fisttps
faddp
dec
push
cmp
fxch
in
out
rolb
arpl
add
add
sahf
sub
rclb
mov
or
shll
ret
data16
cmp
dec
push
sahf
aaa
shlb
aam
out
mov
sub
shll
mov
ja
sahf
dec
in
pop
lcall
mov
push
push
jne
insl
adc
incl
pop
cmp
sub
push
push
int3
push
pop
mov
mov
dec
jecxz
rcrb
fimull
fsubrs
dec
dec
cmpsb
mov
jp
loope
dec
aaa
adc
lahf
xor
xchg
rolb
pop
jl
in
daa
cmp
push
loop
jp
sub
mov
lret
inc
adc
push
sub
mov
movl
dec
inc
sahf
pusha
in
imul
adc
mov
cld
dec
jg
dec
mov
cmp
inc
loope
icebp
movsl
dec
jns
push
in
dec
push
mov
sbb
mov
mov
rcrb
cmp
sbb
ret
fadd
cmpsl
enter
dec
and
mov
ljmp
adc
popf
mov
dec
mov
data16
scas
repnz
shrb
aam
cwtl
mov
loope
inc
addb
out
int3
sbb
lcall
xor
imul
aas
inc
mov
sbb
ja
in
sbb
out
xor
stos
inc
imul
into
jl
daa
out
fldcw
jge
inc
pop
mov
pop
adc
or
cs
sbb
jo
add
imul
fiaddl
ljmp
js
cld
mov
mov
push
stos
imul
dec
xchg
insl
ss
mov
in
mov
cli
sbb
jp
jb
inc
push
mov
loope
xor
or
mov
push
arpl
scas
in
and
incb
shll
add
subb
sti
es
test
mov
outsl
pop
jmp
sub
int
adc
lea
jg
cwtl
insl
clc
push
sbb
in
add
dec
lods
mov
xchg
fsubp
je
inc
neg
repnz
add
lea
pop
fs
sbb
mov
sub
scas
dec
inc
or
sbb
add
cmpsl
mov
xorl
ss
aaa
icebp
stc
or
jne
sub
or
adc
inc
movb
ret
dec
sbb
addb
cmpb
mov
repnz
sub
out
sbb
sbb
dec
inc
pop
inc
imul
cwtl
add
pop
fs
push
sbb
adc
push
jo
inc
jl
ss
nop
dec
push
push
add
popa
mov
stc
filds
and
repnz
sub
xlat
pop
leave
fsts
cmp
movsb
sbb
lds
jb
lods
sbb
pushf
adc
adc
test
xlat
xchg
cmp
push
xorl
hlt
lret
sbb
es
adc
jle
jg
jl
out
jl
test
jmp
push
ret
jnp
dec
stc
xchg
push
add
clc
leave
add
pop
pop
mov
add
cli
es
cs
xor
outsl
pop
scas
lahf
orw
and
fists
clc
pop
push
call
pop
inc
jle
clc
jp
sub
cmp
call
xchg
inc
sahf
lea
mov
mov
sbb
push
flds
dec
push
mov
repz
in
cmpsl
cmp
nop
roll
aad
out
lds
jno
sub
cli
rolb
dec
sbb
mov
fs
stc
lods
xchg
insl
sub
push
test
xor
sbb
jmp
adc
out
test
push
xor
ds
icebp
push
mov
fcoms
cli
xor
rcl
jmp
iret
pop
insb
leave
sub
or
jmp
cs
es
xor
dec
xchg
mov
jb
xchg
imul
xchg
and
icebp
in
aaa
aaa
jbe
rcrb
loope
sti
mov
mov
dec
cmc
sbb
pushf
xor
imul
add
mov
shrl
lret
jecxz
jo
sbb
test
dec
test
push
mov
mov
xor
adc
enter
lock
outsb
in
inc
aam
jbe
addr16
sbb
xor
add
outsl
sub
inc
sub
fs
mov
lea
sbbb
or
pop
dec
cmp
add
leave
nop
cld
pop
and
push
xchg
fs
js
jl
push
imul
out
out
adc
fstpt
xchg
inc
aad
lahf
aam
sti
in
pushf
aaa
jl
cmp
dec
pop
lcall
cmp
outsl
mov
adc
sbb
adc
mov
sbb
xlat
xchg
jg
jl,pn
dec
cmp
in
clc
shrb
cld
icebp
call
mov
mov
pop
in
mov
ljmp
addb
cmp
mov
xor
in
dec
sbb
xchg
mov
jae
inc
and
inc
mov
ret
adc
jnp
rcrb
cld
push
dec
push
xchg
shlb
sti
push
loop
mov
or
flds
test
cwtl
lds
jnp
dec
sbb
in
stos
cld
stos
cmpsb
jne
push
jle
test
push
cmpsb
out
cs
push
fs
ret
mov
rcll
pop
xor
adc
leave
addr16
cli
push
xor
xor
aas
lods
xchg
lahf
fwait
push
and
fstl
shll
adc
int
stos
or
fldt
es
or
cwtl
sbb
lcall
aaa
pop
rolb
paddb
jge
mov
pop
sbb
arpl
clc
cmpsb
faddl
xorl
xchg
hlt
dec
cmp
mov
in
pop
out
sub
lret
sbb
js
mov
mov
rorl
sub
mov
adc
mov
popa
jo
mov
in
inc
leave
arpl
push
or
in
sub
insl
cld
mov
leave
out
cld
sub
loop
ret
fldt
mov
test
cmp
aam
cmc
push
js
nop
pop
cmp
or
out
mov
out
rcl
ret
push
cld
push
push
push
ja
fs
mov
cwtl
js
stos
mov
insl
repnz
mov
jg,pn
inc
jl
mov
adc
imul
scas
jmp
push
in
cwtl
negl
ja
push
mov
lock
in
pop
loope
cmpsl
ja
push
leave
lahf
mov
or
rcrl
jns
popa
fisubrs
lods
mov
lods
nop
fs
xchg
dec
comiss
sbb
arpl
out
push
out
cmp
lods
jge
sub
ror
add
data16
lock
mov
adc
mov
out
data16
arpl
int3
mov
mov
cmp
lret
sub
push
mov
push
nop
fidivs
adc
adc
les
lret
xchg
sub
incl
or
fdivl
pop
iret
or
or
clc
test
sub
shlb
je
jne
sbb
movsl
mov
scas
aas
shlb
push
out
stos
out
outsb
les
inc
and
lods
fs
repz
addr16
imul
out
loope
adc
or
jg
mov
pusha
arpl
aad
lock
fs
xchg
push
call
dec
in
ja
stc
mov
lock
jg
mov
inc
outsl
sub
ror
add
sub
sub
ret
push
or
test
adc
cmpb
adc
call
insl
cmp
sbb
repnz
add
pushf
mov
dec
aaa
and
push
mov
sbb
dec
mov
sub
and
cmp
pusha
daa
cmp
jl,pn
clc
rorb
jmp
push
xchg
aaa
jle
push
std
stc
popa
sbb
pushf
es
frstor
jo
hlt
inc
jecxz
jae
ret
mov
scas
cld
nop
xor
pop
or
sti
pop
jmp
int3
ret
pusha
and
sbb
xchg
je
xorb
jmp
maxps
mov
pop
daa
push
loope
std
or
adc
js
xor
iret
cmp
data16
lahf
nop
pop
les
mov
mov
cld
cmp
add
inc
xor
pop
jp
data16
xchg
or
mov
push
mov
push
pop
ret
inc
or
outsb
xor
bound
popa
sbb
push
sbb
dec
aas
dec
sahf
add
push
or
xchg
xlat
mov
incl
adc
adc
sbb
sub
je
pop
fwait
inc
rcr
in
pusha
inc
cmpsl
jle
inc
int3
sbb
and
jmp
pop
andl
addr16
data16
inc
cli
jmp
roll
loop
inc
inc
cltd
ret
test
call
add
mull
pop
data16
sub
popf
jno
test
sbb
and
mulb
out
or
das
pop
shlb
ljmp
insb
sub
or
sub
inc
aaa
jb
sbb
scas
xchg
sub
scas
dec
jns
scas
push
in
jg
in
pusha
je
dec
out
bound
jle
pause
mov
mov
movsb
mov
mov
adc
jne
sub
shrb
dec
sub
call
sbb
mov
out
iret
sbb
fisttpl
mov
arpl
sub
call
fidivrs
fidivl
jne
sbb
jne
mov
mov
dec
and
or
rcl
mov
sbb
mov
or
rsqrtps
jno
jle
loop
jg
jle
js
mov
sbb
push
cld
jl
in
sub
dec
xor
clc
push
pop
push
push
sbb
mov
push
adc
out
xorb
pop
jae
push
iret
enter
arpl
daa
in
xchg
ljmp
pop
and
sbb
lret
cmc
test
scas
orl
ficomps
push
ret
adc
or
insl
ret
jnp
stc
jge
mov
xor
imul
cmpsb
int
fsubrs
movsb
popf
push
mov
sbb
mov
pop
inc
sbb
push
mov
mov
inc
pop
mov
add
shll
jmp
test
cli
and
push
adc
jo
sub
std
mov
fisttps
add
movsb
in
mov
xchg
xchg
nop
testl
jnp
push
pushf
xchg
pushf
adcb
fwait
lcall
mov
xor
fwait
stos
cld
repnz
lds
pushf
out
dec
xchg
pop
xchg
pop
xor
push
test
mov
jp
arpl
sbb
movsb
adc
fcmovne
cli
sub
std
jg
arpl
sub
inc
dec
fadds
test
add
jmp
jg
inc
cmp
leave
mov
cmp
push
adc
stc
or
xchg
imul
xor
mov
mov
fstpl
cmc
movsb
adc
pop
mov
sbb
sub
push
adc
dec
sbb
add
inc
scas
sub
ret
sarb
jle
ja
fs
out
jmp
xor
sub
ret
push
sub
test
push
or
mov
sbb
clc
std
mov
lods
aaa
mov
fldt
mov
mov
lods
fcom
xlat
das
cmc
stos
push
jmp
sub
inc
push
sub
data16
pop
aam
fiaddl
add
xor
jg
inc
push
mov
and
int
dec
loopne
pop
push
pop
or
add
xor
adc
jmp
cmp
repnz
and
xor
xchg
mov
mov
add
je
pop
aam
sub
aas
dec
ss
cs
pop
inc
data16
and
aaa
pop
jbe
nop
xchg
add
push
cmp
mov
jmp
les
add
addr16
or
mov
js
cmpsl
dec
mov
das
push
push
addl
scas
mov
addr16
iret
fwait
cs
imul
mov
scas
scas
and
nop
dec
out
mov
cltd
jns
mov
xor
and
cld
or
mov
test
dec
fsubl
scas
pop
mov
push
in
and
jno
and
cli
ret
sub
jle
cmp
sbb
repz
int3
dec
dec
pop
mov
push
and
dec
jg
jbe
pop
popa
push
or
adc
aaa
mov
xor
push
push
adc
pop
sbb
xchg
fstps
fists
jmp
cmp
or
lods
inc
ss
pop
enter
push
sub
mov
ss
push
or
sysexit
jae
fldcw
sete
and
mov
mov
sub
dec
adc
repz
mov
nop
pop
adc
dec
es
int
cmp
or
jnp
push
mov
outsl
mov
mov
or
dec
outsb
sbb
repz
mov
loop
popa
and
sbb
dec
je
andb
lret
aas
push
dec
jle
popf
lahf
lcall
mov
test
lds
scas
test
jge
push
divl
inc
xchg
mov
xchg
push
jl
pusha
jb
mov
mov
xor
cld
sbb
bound
and
xchg
xchg
sbb
aaa
insb
test
es
add
ret
pop
push
push
add
mov
pop
push
jge
xchg
jge
inc
insl
inc
push
push
or
cmp
aad
xor
popf
clc
dec
mov
mov
xchg
roll
xchg
mov
inc
dec
cmp
mov
mov
int
mov
mov
cmpsb
sti
push
and
sub
loope
ffreep
mov
pop
dec
aas
fimuls
jnp
mov
shll
jl
xchg
mov
test
mov
nop
pop
push
jp
jle
imul
out
dec
adc
mov
fmulp
adc
rcl
ss
sbb
xor
adc
push
mov
jle
imul
push
push
mov
jl
cwtl
cli
cmp
xor
loopne
add
mov
call
sbb
mov
cmpsb
jnp
pusha
test
cmp
push
cmp
out
xor
pop
mov
lret
xchg
push
xor
dec
mov
inc
cmp
inc
lret
mov
stos
jno
out
lods
xchg
nop
fcoms
gs
ds
stc
sbb
adc
sbb
bound
jle
inc
cmp
pop
xchg
pop
sar
mov
cld
mov
pop
inc
cld
ss
daa
sbb
mov
or
ja
xor
cmp
dec
cmp
fildl
pop
jno
xor
ja
adc
xor
jne
aad
sub
adc
adc
sub
jnp
jecxz
sbb
jbe
ds
into
fs
gs
mov
dec
jecxz
cmp
push
add
jg
and
dec
mov
cmpsl
xor
xor
inc
fs
mov
jl
mov
fldt
inc
jnp
sarl
lods
scas
sbb
daa
nop/reserved
jne
stos
push
lret
xchg
cmp
loop
dec
dec
fucomp
sbb
mov
out
inc
mov
leave
add
enter
mov
add
or
sbb
xchg
dec
xchg
adc
retw
jo
cmp
pop
adc
hlt
cmp
adc
ljmp
imul
or
enter
hlt
sub
or
int
or
movl
dec
ljmp
movsb
insl
sub
mov
loop
rcl
push
outsl
add
clc
call
lret
sbb
push
iret
push
cmp
fwait
mov
int3
sbb
outsl
jae
stos
clc
dec
leave
into
cmp
dec
clc
xchg
xlat
negb
mov
test
jg
lcall
mov
push
cld
mov
cmp
inc
jne
ficoms
loop
dec
outsb
push
lea
push
add
mov
jl
xor
xchg
add
and
push
or
xchg
pop
push
sub
or
mov
xchg
ret
inc
cmp
imul
std
inc
repz
sub
lcall
or
lds
cld
or
push
xor
rol
mov
sub
pmullw
sarb
clc
pop
lock
mov
nop
fstpl
out
or
lods
inc
ja
sub
cs
pop
iret
lds
loop
xchg
jp
leave
shlb
cld
add
dec
add
sti
or
xchg
dec
mov
push
fsubrl
push
sub
mov
and
cmp
pop
mov
cmp
fistl
push
iret
or
pushf
sbb
mov
cmc
fs
mov
sub
aaa
xor
cwtl
dec
sub
cli
pop
push
push
fimull
lahf
jae
gs
adc
mov
xor
stos
xchg
stc
adc
loope
xor
jo
or
mov
pushf
imul
aas
outsl
push
jle
jp
cli
fisubrs
popa
cld
mov
enter
mov
in
lea
and
lds
sbb
lods
jge
in
hlt
leave
cmc
push
leave
imulb
jp
push
pop
dec
cmp
or
dec
or
jbe
sahf
mov
jbe
popf
pusha
xor
aaa
js
and
and
mov
push
push
xchg
and
test
jp
mov
mov
mov
cmp
mov
mov
cli
call
arpl
push
push
cmp
dec
dec
scas
xor
out
lret
lahf
imul
call
pop
mul
je
push
sub
stos
or
inc
pop
lods
mov
cltd
int
xorb
jne
push
dec
sbb
inc
ds
lock
jge
sub
mov
xor
push
mov
add
xor
in
cmpsb
and
xchg
sub
sub
pop
mov
xchg
mov
lods
enter
lods
inc
test
jg
jg
inc
sbb
pop
mov
pop
popa
pushl
sub
mov
call
or
les
jo
dec
loope
out
rcll
js
xor
js
xchg
int
hlt
aaa
pop
popa
pop
mov
mov
ss
or
iret
ds
pop
mov
aaa
fisubl
movsl
cmp
movsb
jae
pop
mov
aas
mul
and
mov
and
popa
decl
pop
pop
fadds
popa
iret
jbe
and
push
scas
movsb
dec
pushf
gs
cmc
adc
push
mov
and
mov
mov
sub
jno
and
mov
mov
sahf
insl
adc
cmp
gs
jb
pop
in
subb
das
mov
loop
or
pop
and
xor
popf
scas
mov
cld
and
shll
stc
xor
call
adc
mov
and
or
scas
jb
add
dec
xor
adc
push
adc
mov
cmpsb
popf
ret
mov
pop
sub
out
and
cmp
sbb
rcrb
sbb
ss
inc
ror
andb
nop
fimuls
jbe
dec
mov
cmp
dec
mov
dec
cmp
pop
mov
sbb
cmpsb
lock
popa
mov
push
cli
repnz
rol
jne
xchg
xor
jmp
mov
and
in
ljmp
sbb
pop
inc
xor
cld
frstor
jecxz
dec
jnp
mov
add
sbb
and
fwait
mov
popf
mov
cmpsl
or
mov
repz
push
sub
loope
lret
fdivp
repnz
adc
push
push
imul
cmp
rcrl
push
pop
mov
out
std
sub
sub
sahf
dec
data16
fldlg2
cmpsb
mov
pop
mov
xchg
dec
and
adc
sbb
add
and
mov
jns
xor
mov
loop
lret
xchg
rol
outsb
cmp
xchg
cs
xlat
pop
pop
push
mov
scas
stc
xchg
and
test
fldl
inc
mov
shlb
stos
scas
jmp
cmpsb
inc
adc
pop
adc
xor
mov
sbb
daa
sbb
arpl
fmul
das
inc
pusha
pop
push
test
mov
stos
inc
mov
push
cld
fstps
faddl
mov
test
nop
ljmp
inc
cmpsb
adc
xor
sbb
and
test
cmp
cmpsb
jne
jl
or
shrb
sti
incw
mov
inc
mov
bound
iret
jle
mov
out
dec
stc
push
jo
xchg
push
inc
mov
push
hlt
daa
cltd
cmpsl
lret
clc
lods
lret
dec
imul
cmpsl
pusha
or
into
mov
add
aas
inc
or
into
sub
fxam
dec
inc
mov
xchg
sbb
push
xor
inc
js
mov
mov
sub
mov
xchg
mov
cmp
jns
sub
xchg
daa
fisttps
repz
mov
jns
xor
fdivrs
fsubp
sahf
sub
inc
addr16
dec
mov
adc
cmp
mov
inc
xchg
aaa
push
dec
dec
jns
mov
and
ss
xchg
push
movsb
mov
ja
or
push
or
shll
inc
icebp
addr16
xor
jbe
mov
sub
out
push
xor
call
and
adc
andl
out
or
push
xor
push
dec
js
test
xor
sub
jae
dec
jns
xor
jl
inc
lock
call
sub
in
std
mov
sub
cmc
not
mov
push
gs
cld
add
into
loopne
mov
mov
arpl
and
dec
push
mov
lock
push
inc
aaa
pusha
mov
loop
or
or
shll
shlb
push
stos
jne
xor
out
stos
sub
cmp
sahf
jo
cltd
jg
loopne
lods
les
out
push
jmp
inc
sbb
lret
pop
xor
cltd
sbb
ds
mov
out
scas
and
aas
push
popa
call
sub
aaa
sahf
dec
or
les
jmp
mov
data16
and
loop
popf
dec
sbb
jns
shlw
cld
xlat
dec
cmp
pop
scas
fs
lret
cmp
jae
cmp
cld
stc
dec
xor
data16
xor
in
dec
xor
ret
cmp
pop
popa
dec
or
shll
jp
and
sti
aas
fs
or
jl
das
loop
rolb
or
push
mov
es
sub
data16
repnz
push
cli
repz
lds
popf
dec
cmc
push
inc
les
outsl
inc
bound
mov
imul
repnz
test
cmp
cmpsb
dec
push
sti
mov
or
xchg
movl
imul
mov
sub
shrb
pop
scas
and
aas
pop
popa
call
test
pop
aaa
sahf
dec
pop
or
les
mov
dec
push
or
sub
jp
scas
sub
pop
dec
xor
lret
jmp
jae
xor
scas
jae
or
or
cld
in
dec
or
leave
sub
add
xor
cmp
or
sbb
js
scas
and
aas
push
popa
dec
mov
adc
push
imul
pop
fdivr
mov
data16
cld
ss
sbb
sub
mov
test
inc
mov
or
inc
loopne
lods
inc
cmc
sbb
dec
and
push
pop
lods
clc
sbb
sbb
out
adc
dec
int
push
xor
scas
out
out
lock
jmp
jns
or
scas
in
lret
clc
lods
pop
jns
lcall
scas
in
pop
insl
mov
mov
leave
sub
cmpsl
inc
push
out
js
ret
scas
and
aas
je
dec
icebp
sub
jle
cld
jo
in
jb
mov
aaa
fwait
dec
dec
or
les
insl
dec
mov
sub
pusha
in
scas
mov
lods
lret
and
inc
insb
dec
or
in
pop
ret
jl
inc
fs
dec
push
jno
movsb
jns
popa
jge
imul
mov
add
fidivl
push
xor
xor
ds
popa
lea
cli
inc
fs
roll
adc
into
loope
lock
outsb
outsl
adc
je
mov
dec
mov
call
adc
scas
adc
cmp
dec
cmp
and
xchg
mov
xor
das
gs
sarl
fstl
mov
test
push
mov
jecxz
add
sar
mov
outsl
push
int
xor
xor
cmpsb
ret
push
ucomiss
loope
xchg
cs
in
inc
arpl
pop
stc
jb
pop
adc
xchg
xor
jmp
call
cmp
pop
rorl
clc
push
xchg
cltd
stc
cs
adc
cmp
sub
push
xor
arpl
popf
jb
lret
push
lods
scas
les
xchg
test
pop
push
inc
jae
mov
fs
gs
sub
adc
sbb
xor
in
ja
fs
int
scas
sbb
lods
xor
adc
push
xchg
popf
les
pushf
outsl
scas
xor
jecxz
adc
inc
les
mov
imul
out
scas
pop
xor
or
or
or
aas
loopne
cmp
sub
inc
jbe
test
dec
rorl
inc
jle
and
iret
or
push
nop
in
push
imul
xchg
insl
fistps
mov
sub
leave
fs
jle
xchg
loopne
addr16
loope
loopne
dec
pusha
test
arpl
addr16
pop
lods
cs
xchg
in
mov
mov
xchg
jno
add
rorl
jge
popa
sbb
push
cld
push
xchg
andb
xor
je
shlb
rclb
rcrb
mov
cs
push
cmp
xchg
stos
push
icebp
add
push
inc
pop
test
dec
and
test
sbb
out
push
mov
cmpsb
push
sub
negl
xchg
inc
into
push
aas
push
mov
pop
push
push
push
rclb
in
pusha
mov
add
jl
and
mov
pop
xor
cs
jmp
add
fs
cs
cmp
mov
jge
sbbl
fdivp
sti
mov
or
and
pusha
adc
cld
jmp
bound
jo
jo
sub
jl
fwait
xchg
sbb
cwtl
stos
mov
cmpsl
and
cmpsl
xchg
lods
add
mov
and
cmp
cs
cmp
jg
mov
push
pop
cmp
daa
mov
mov
pop
sub
cmp
stos
add
mov
out
sbb
pusha
xor
popa
jnp
mov
leave
mov
daa
js
sbb
enter
mov
cmovo
and
daa
data16
jmp
in
or
jg
ds
adc
out
sbb
test
stos
fs
jecxz
xchg
sub
jns
mov
jae
dec
mov
mov
mov
sbb
mov
mov
cs
shrl
jmp
in
icebp
adc
fcmovb
xor
in
cmp
data16
mov
out
cmpsb
and
sub
push
adc
mov
cmpl
mov
add
idivl
mov
pusha
add
push
push
cmc
push
xchg
aaa
lods
push
inc
mov
mov
fimull
xor
inc
sbb
ret
push
mov
rcr
mov
daa
test
into
pop
sub
lcall
fwait
divb
imul
sahf
jbe
jl
cmp
gs
cmp
sub
inc
dec
sub
dec
out
int
cmpsb
fisubrs
mov
inc
jnp
add
mov
xor
daa
lock
pop
add
push
add
ret
call
dec
outsl
cld
je
inc
je
cltd
insb
mov
fisttpll
loop
stc
adc
leave
inc
cmp
pusha
in
arpl
clc
movsb
xor
jns
pop
or
mov
dec
mov
imul
int
push
inc
sti
fs
xor
cmp
fwait
imul
cltd
dec
pop
nop
sbb
ds
dec
popa
out
mov
adc
dec
adc
fdivrp
xchg
fs
test
add
repz
sub
lock
fidivs
pop
lock
push
mov
cmp
shrb
flds
loope
xlat
jg
cmc
pop
mov
xlat
cltd
mov
mov
adc
scas
int
pop
dec
cmpsl
fnstenv
xchg
xor
out
lret
fldl
outsb
arpl
stos
arpl
xchg
sahf
aas
push
mov
and
jle
add
hlt
cld
or
mov
push
push
cmpsb
add
push
ret
pop
out
jb
dec
cmp
sub
ljmp
fimuls
scas
insb
push
mov
mov
imul
pop
out
cmp
mov
jle
arpl
mov
into
sub
add
into
adc
mov
or
inc
enter
xchg
inc
push
shlb
mov
mov
adc
or
popf
pop
or
adcl
shll
jl
xlat
mov
pop
roll
jo
mov
mov
mov
fs
outsl
and
shll
fstpt
aam
fiaddl
mov
lea
xchg
lret
stc
es
es
dec
sbb
mov
insl
call
xchg
bound
dec
stc
ds
bnd
dec
xchg
xor
ret
mov
or
lret
cmp
push
and
cmp
xchg
fisttps
ret
mov
mov
pop
pop
push
add
sub
movsl
dec
mov
cmp
sbb
jnp
shl
xchg
pusha
outsl
adc
sbb
movd
xor
clc
mov
or
cmpsb
bound
inc
push
jae
and
adc
xor
or
cmp
popa
fisttps
daa
sbb
jo
aad
sahf
neg
vorps
adc
cmpsl
aad
stos
das
fsubrl
std
ret
push
jmp
movsl
jl
mov
mov
xchg
sub
push
test
fildll
out
xchg
xor
pop
arpl
push
bound
fldl
dec
inc
xchg
popf
rcrb
jns
popa
and
jno
bound
mov
aad
sbb
cs
xchg
loope
fwait
clc
sub
icebp
cld
jle
sbb
cs
out
test
popa
mov
ret
xor
inc
sti
adc
repnz
daa
xor
test
loopne
push
pop
pop
jle
bound
test
jle
or
pop
mov
push
ficoml
leave
fidivl
mov
scas
pop
mov
cmpsb
cwtl
aad
mov
jbe
push
adc
and
out
jle
pop
mov
jg
mov
pop
push
arpl
inc
cs
xor
lods
test
pushf
sub
dec
xlat
fisubrl
dec
outsl
or
adc
or
adc
cld
loope
adc
leave
fldt
adc
fldt
test
mov
inc
inc
aam
in
call
pop
mov
jb
hlt
mov
dec
in
pop
data16
dec
xchg
add
insl
popa
add
and
je
and
adc
inc
mov
sub
sub
pop
mov
pop
cmp
mov
sub
js
sub
movsl
cmc
in
stos
pushf
adc
in
in
jbe
xchg
fsubr
jg
popa
sbb
aam
add
test
pop
ja
paddb
cmpsl
jmp
adc
add
push
in
iret
sbb
jge
mov
out
xchg
test
inc
push
jecxz
rcll
idivb
jns
pushfw
pop
mov
addr16
test
dec
dec
lock
jmp
jmp
mov
cli
leave
frndint
xchg
and
push
rclb
mov
pop
pop
or
fidivs
or
nop
fdivs
das
or
inc
dec
test
mov
jmp
pop
fidivl
mov
out
outsl
mov
jb
fucom
lret
jmp
xchg
test
pop
mov
daa
mov
xchg
test
mov
mov
xor
inc
cmp
inc
mov
js
add
fldenv
cli
push
push
xchg
cld
ret
fs
cld
iret
in
aaa
iret
jge
es
nop
jmp
push
xchg
pop
push
orb
and
sbbb
mov
movsbl
in
or
andb
mov
rcl
filds
jnp,pn
into
pop
mov
or
loop
stos
movsb
loop
cmp
cmpsb
push
mov
or
les
cs
cld
push
xorb
cs
fidivs
mov
mov
inc
arpl
jnp
and
cmp
push
fidivl
dec
mov
cs
jne
bound
cmp
add
popa
leave
fdivrp
add
mov
pop
cmp
inc
pop
lea
imul
dec
xor
mov
push
cmp
loope
popf
loop
xchg
mulb
outsl
je
push
scas
ret
in
sti
pop
inc
push
filds
inc
lahf
push
pop
push
icebp
sub
mov
dec
or
enter
fldcw
xor
adc
inc
cwtl
fbld
imul
fs
mov
sub
sti
sub
push
test
bound
inc
enter
cmp
dec
fbld
mulb
sbb
xor
lods
mov
push
jecxz
ja
sbb
pop
arpl
into
sbb
cwtl
test
xchg
fadds
jle
sbb
lods
jo
dec
mov
pop
mov
pop
icebp
loop
adc
jecxz
outsl
xchg
pop
xorl
aam
imul
fbld
mov
fnstsw
inc
inc
fsubl
sub
jb
add
aam
imul
fdivr
out
out
iret
ss
sbb
jge
mov
stc
push
pop
ret
fsubrl
mov
sar
sbb
adc
fistpll
fdivl
xchg
dec
shl
lds
mov
cs
mov
fdivs
sbb
mov
lret
cld
ficompl
loop
nop
ljmp
ret
mov
movsl
xor
ret
cltd
outsb
in
ja
fs
mov
mov
imul
mov
test
jne
les
add
xor
roll
mov
pop
or
in
mov
or
outsb
out
mov
xor
jne
and
aam
pop
jge
mov
test
push
bound
es
sub
jnp
stc
adc
shr
sbb
int
dec
lahf
pop
sti
push
popf
std
push
leave
leave
dec
jmp
mov
lcall
outsl
cmc
shlb
std
popf
xor
fs
sub
je
mov
in
push
aas
scas
ret
call
adc
iret
xor
inc
ret
cs
push
mov
roll
cmp
ret
ret
cmp
cmpsl
jae,pn
inc
int
pop
xchg
jbe
das
sahf
inc
rol
test
ret
fs
loope
add
pop
adc
lcall
add
cld
push
mov
cmpsb
adc
inc
inc
incb
inc
jno
xchg
mov
repnz
scas
push
lods
fcmovbe
popa
jl
lock
add
sbb
pop
enter
leave
inc
or
sti
cld
clc
aam
in
cld
push
lea
out
mov
pop
inc
data16
lods
dec
or
leave
stos
or
dec
inc
aaa
shl
dec
pop
push
dec
popa
aaa
loope
jge
or
pop
icebp
sub
inc
mov
out
mov
push
inc
scas
stos
std
orl
stos
push
dec
dec
aaa
int3
loope
inc
lret
mov
pop
in
inc
jge
add
dec
stos
xchg
mov
imul
sar
mov
stos
sti
dec
push
push
inc
fistps
jle
sbb
xchg
int3
cmp
int
mov
mov
mov
fsubl
and
xor
mov
sbb
mov
xor
imul
jnp
jg
jo
inc
dec
lret
xchg
into
push
dec
add
inc
cs
sub
jns
nop
add
js
ljmp
repz
jns
inc
mov
enter
jb
inc
repnz
scas
pop
jnp
into
push
pop
rol
cmp
out
xchg
roll
rcll
mov
shll
pop
and
insl
sub
sub
push
clc
out
cmp
shll
jno
fisubrs
sbb
shll
js
cli
push
in
scas
cmp
outsb
push
adc
leave
inc
jb
mov
mov
push
aaa
pop
add
dec
pop
aaa
repnz
shrl
jb
lock
adc
mov
fisubrs
mov
xchg
push
inc
daa
push
pop
aas
hlt
push
jne
sbb
test
in
icebp
inc
cmp
jl
jno
pop
ja
mov
cmp
aam
ret
jae
jae
cmp
lret
adc
xchg
inc
mov
mov
hlt
aaa
sub
sbbl
jge
stos
mov
add
inc
mov
sbb
xchg
pop
dec
stc
mov
out
pop
lods
rclb
lret
adc
ret
fstpt
fidivrs
cmc
pop
push
mov
lret
xchg
fwait
aam
adc
xchg
test
dec
and
push
fs
mov
pop
pop
repnz
cld
cwtl
rorl
jle
fsubl
dec
fstps
out
or
cs
adc
fdivrs
mov
shl
jnp
inc
sub
or
loop
sub
push
mov
mov
inc
cs
ljmp
mov
pop
repz
jp
cmc
pop
xchg
and
sbb
iret
or
sbb
adc
pushf
cmc
aad
fmull
popf
aad
pop
push
outsb
mov
stos
and
cmp
xor
pop
rol
mov
outsb
sbb
dec
addr16
loopne
push
insl
add
outsl
sub
aas
test
cmp
dec
ja
enter
out
and
dec
pop
pusha
inc
inc
mov
call
cmpsb
push
ds
sbb
add
movsl
inc
add
sarl
inc
iret
inc
pushf
loop
call
inc
sar
in
cmpsl
xor
adc
in
push
nop
sub
les
mov
les
pop
sti
mov
cmc
adc
cmp
and
jl
dec
push
push
les
add
inc
out
dec
push
call
testl
sub
push
mov
jge
or
and
loopne
je
push
movsb
loope
ja
in
jle
sbb
js
rolb
add
andb
or
cwtl
in
scas
cmp
push
leave
sbb
sub
jb
mov
ficompl
in
adc
lods
cmpsb
fbld
jl
mov
sub
inc
in
push
push
cld
push
adc
inc
xor
mov
mov
jl
inc
in
lds
ljmp
pop
testl
xchg
loope
jbe
jb
mov
jg
or
rcl
mov
and
adc
push
jae
push
insb
ret
push
inc
sbb
cmp
aad
mov
rcrb
jne
loope
push
mov
incb
int
insl
in
cltd
and
hlt
mov
aas
loope
sbb
cwtl
xchg
dec
sbb
cs
push
cmp
pop
dec
pusha
push
outsb
fs
mov
push
push
addr16
scas
repnz
paddusw
jbe
mov
repz
lds
sbb
fidivrl
lret
test
or
xchg
shlb
push
jmp
push
pusha
mov
out
adc
add
inc
adc
enter
xor
pop
pop
mov
cmp
fdivs
jo
leave
dec
or
add
push
xor
stos
dec
push
jge
mov
jp
push
mov
xor
notb
sbb
dec
repz
sbb
cmp
mov
dec
and
rcll
pop
iret
lods
lea
or
loopne
sbb
push
mov
das
sbb
fwait
in
cld
pushw
inc
dec
out
pop
dec
fwait
sbb
fidivs
jge
popf
clc
and
push
lock
das
lret
sub
popa
test
scas
pushw
inc
push
mov
cld
outsl
sub
jg
rol
stos
dec
and
imul
bound
loope
aaa
xor
or
imul
pop
dec
bswap
lret
mov
or
test
mov
sbb
nop
movsl
enter
cmp
daa
sar
lods
sbb
lcall
and
je
mov
jmp
fwait
dec
cmp
lret
dec
or
js
dec
mov
mov
mov
xor
pop
das
dec
gs
mov
sub
pop
dec
loope
ret
dec
stos
sub
or
aam
shrb
mov
shlb
shl
addb
add
adcb
fldcw
fsubrs
sti
in
enter
leave
cmp
notb
xchg
test
xchg
mov
mov
dec
jae
add
test
cmp
cld
cmp
sub
sub
ret
test
pop
jp
sbb
jne
adc
sbbl
bound
lods
lret
pusha
add
xchg
xchg
inc
stos
iret
cwtl
push
dec
cmp
inc
xchg
sub
jbe
inc
repnz
sbb
fiadds
data16
mov
data16
pop
push
leave
jb
into
fxch
xchg
call
scas
dec
test
loope
sti
out
dec
dec
test
pop
dec
mov
or
and
js
in
les
and
test
cmp
sub
add
push
enter
mov
cwtl
jns
push
sub
inc
dec
jno
pushl
inc
push
adc
cmp
sub
jb
mov
xor
push
int
cld
aam
dec
jmp
xor
cwtl
sarl
in
adc
xadd
adcl
dec
fisttpl
sub
or
test
jnp
hlt
loope
dec
jne
scas
jnp
and
inc
mov
bound
fcoms
mov
fidivrs
fs
sbb
shll
stos
hlt
ss
and
imul
lock
cmp
ret
adc
mov
dec
xchg
stos
pop
ret
aad
sbb
daa
mov
cwtl
shrb
pop
jb
xchg
or
mov
dec
cmp
dec
bound
aad
loop
adc
cwtl
fmulp
lds
ret
dec
cmp
push
iret
inc
ljmp
sub
std
mov
dec
fcmove
inc
scas
mov
dec
imul
adc
xchg
mov
ljmp
sbb
cwtl
cli
out
cmp
jo
sbb
adc
sti
cld
daa
popf
jp
lock
push
sarb
dec
dec
mov
iret
xchg
int3
cs
xor
int3
cmpsb
push
ss
daa
xchg
aas
lcall
xorl
dec
sbb
insl
mov
mov
mov
loope
loop
pusha
sar
repnz
imul
mov
mov
les
xchg
sub
bound
pusha
cmp
clc
inc
inc
inc
loopne
repnz
lock
repnz
inc
fimuls
ret
cmp
cmpsl
lods
dec
fs
cmp
movsb
fcompl
mov
push
fs
cmp
scas
push
inc
inc
push
cmp
aaa
jmp
in
xchg
mov
flds
push
test
pop
in
ret
iret
or
cs
mov
mov
cmp
out
int3
das
daa
jnp
fs
std
cmp
pop
sbbb
inc
pushf
or
xor
cmpsl
dec
ss
sub
mov
jg
sbb
jecxz
lods
xchg
fs
out
cmpsb
inc
adc
xchg
js
int
into
jns
cmp
out
mov
push
xchg
pop
ret
xchg
jbe
iret
cmp
leave
jge
xchg
cmp
push
xchg
rolb
mov
inc
jp
fsubs
cld
mov
mov
mov
xchg
xor
arpl
fwait
push
inc
cmp
jg
es
dec
bound
mov
or
out
jge
xor
sbb
pop
js
add
fs
movsb
pusha
adc
mov
dec
push
insb
leave
bnd
and
addb
rcrl
test
pop
movsb
insl
xor
pop
lcall
cltd
popa
mov
cmp
cmovg
lock
aad
in
cld
repnz
xchg
aas
jmp
push
out
jb
pop
in
mov
in
int
cld
jl
ret
dec
cs
xchg
jbe
xor
shll
mov
push
dec
test
push
mov
cmp
stc
jp
push
add
in
mov
fs
xchg
cmovae
push
dec
outsb
stc
sbb
jnp
mov
push
add
sub
incl
or
or
and
movsb
pop
push
fdivrp
push
inc
fistl
xchg
loop
mov
in
out
cmpl
inc
jb
je
pushf
imul
cmp
out
lahf
push
movsb
push
mov
inc
cld
xorl
jae
cmp
mov
dec
cs
mov
cmc
sbb
imulb
mov
shlb
cmpsb
sub
or
mov
mov
in
testl
mov
push
jae
mov
inc
sarb
xchg
dec
loope
ljmp
shlb
cli
jae
movsb
pop
addr16
neg
cmpxchg
lock
lock
rorl
ss
xchg
jecxz
xchg
pop
pop
lock
inc
pushf
inc
div
es
cwtl
sbb
pop
push
test
ljmp
pop
fimuls
nop
dec
fsubrp
push
imul
sub
cmp
cmp
inc
repz
or
or
jmp
fdivr
push
mov
mov
fs
xor
pop
stos
mov
xlat
jo
test
xor
push
mov
cld
jmp
pushf
push
enter
and
mov
testb
cld
bsf
fs
icebp
cmpsl
pop
fstps
xchg
repnz
xor
ss
or
fisttps
or
lods
jno
xchg
adcl
or
adc
adc
jnp,pt
data16
sbb
xor
or
out
jmp
xor
mov
imul
imulb
scas
in
push
sbb
std
sbb
adc
popa
or
test
jb
mov
test
add
fisubrs
leave
repnz
cmpsl
jnp
push
pop
pop
cmpsl
mov
aas
xchg
adc
mov
xor
and
jnp
scas
push
stos
in
mov
xor
mov
fs
push
add
lods
cltd
rol
ja
int
shrb
iret
push
aas
push
pause
mov
dec
mov
mov
cs
loope
adc
sbb
and
mov
xor
imul
cwtl
sti
cmp
sbb
mov
jne
sub
cwtl
sbbb
mov
push
mov
stc
xor
mov
and
or
mov
lea
punpckhdq
incb
xchg
push
lret
test
cmp
xor
push
sub
dec
std
aam
minps
in
imul
mov
adc
fildll
xor
cmp
cwtl
add
movsl
xor
pop
ja
mov
sahf
test
xor
cltd
in
into
inc
jnp
add
leave
jp
xor
cld
or
in
jp
dec
xor
sbb
iret
jns
outsb
data16
sub
xor
pop
or
js
fistpll
je
dec
jp
dec
inc
dec
dec
clc
push
cs
jp
mov
leave
out
inc
sbb
stos
push
sti
std
call
pop
in
sub
movsb
mov
repz
lods
sub
and
adc
add
add
cmp
xchg
fstpt
inc
mov
mov
or
into
in
pavgb
dec
js
iret
sti
xorb
addr16
ds
js
push
lret
in
pop
jnp
cmp
lret
adc
and
mov
mov
fs
add
lret
js
mov
iret
dec
fprem
popa
and
xchg
imul
adc
jbe
jle
push
int3
pop
out
fsubr
add
jl
and
jl
push
mov
pop
insl
dec
das
into
dec
dec
mov
outsl
xor
test
roll
out
mov
cld
repnz
mov
lock
push
dec
scas
pop
int
decl
fs
or
xorl
bound
add
xchg
push
xlat
jg
sbb
pop
adc
mov
push
stc
sti
cmp
jl
arpl
sub
or
xor
fiadds
inc
or
xor
dec
popa
adc
cmp
call
or
and
pop
loop
inc
xchg
or
int3
aas
jle
int
xchg
outsl
fs
add
mov
jns
dec
stos
xor
scas
push
lcall
jg
dec
inc
fisubs
and
cmc
push
and
push
sbb
push
andb
sbb
cmp
push
and
iret
sub
pop
push
sbb
lret
outsl
lods
sar
sbb
ljmp
mov
andnps
fs
decb
packuswb
leave
cltd
ror
test
outsl
loop
into
call
outsl
sub
sub
sti
mov
cwtl
inc
jae
fs
cmp
in
mov
shll
test
in
cs
jle
pushf
adc
imul
lods
in
cmpsb
jne
enter
pop
pop
jno
in
lret
sti
lcall
jmp
sbb
cmp
cmpsl
add
dec
push
cmpsb
mov
iret
mov
lds
or
jg
or
lret
cmp
mov
sbb
push
push
cmp
sub
jns
push
ret
sahf
sbb
inc
sub
test
mov
xor
sub
jg
mov
dec
movsb
xor
push
es
popa
mov
mov
push
roll
push
push
jg
xchg
fiaddl
ficoms
sbb
aad
int3
outsb
add
jnp
push
pop
jmp
cli
dec
inc
pushf
or
pop
daa
in
ret
sub
inc
outsl
jg
pop
in
push
inc
dec
xor
cld
orps
scas
pop
xor
rorb
xchg
pushf
inc
sub
dec
push
aas
push
cmpsb
lret
sub
xor
jno
icebp
loope
jle
ss
inc
xchg
jl
pop
pop
jl
push
les
ss
jmp
cmp
outsl
and
pop
jecxz
ja
add
adc
push
sbbb
clc
fsubrs
rcll
pop
push
dec
fs
xlat
cmp
dec
dec
loope
into
add
in
push
mov
sub
jno
sub
cmp
cltd
jns
into
stos
icebp
fisttpll
or
or
scas
push
and
xchg
or
add
push
icebp
cmp
rcrb
inc
jmp
fs
xchg
aam
dec
add
pop
insl
sti
clc
out
test
rcll
sub
xor
xchg
pushf
pusha
xor
lods
rclb
je
push
std
sbb
inc
pop
push
aas
mov
loope
jbe
popf
leave
cmc
aas
push
inc
or
sbb
loop
mov
ja
mov
cwtl
mov
lahf
ret
mov
and
sub
ficompl
outsb
stos
or
int3
dec
fdivr
repnz
fcomps
mov
cli
or
mov
jbe
out
bound
sbb
and
invd
scas
pop
sub
rcl
mov
pop
jg
ss
inc
cs
adc
hlt
pop
sbb
sbb
insl
bound
jecxz
cltd
in
shlb
sub
xchg
jecxz
mov
sub
jecxz
mov
adc
jecxz
push
and
movsl
popa
push
jecxz
push
pusha
movsl
stos
arpl
push
ret
dec
dec
adc
arpl
in
jg
or
mov
arpl
sbb
inc
cmp
cmpsb
sub
mov
rclb
mov
dec
iret
int3
daa
cmp
cs
arpl
cmp
inc
pusha
sub
and
in
loopne
add
loope
sbb
dec
push
loopne
mov
fisttpll
fs
loopne
icebp
aaa
push
loope
dec
adc
pop
push
shll
fsubs
out
adc
push
in
sbb
rol
ret
sbb
and
aas
mov
add
mov
sbb
in
stos
sbb
pushf
inc
jg
push
fistl
mov
pusha
clc
repz
adc
mov
mov
xor
sbb
mov
out
data16
mov
mov
js
lahf
sti
ja
push
cmpsb
sbb
andl
scas
push
inc
jle
loope
push
rol
or
dec
int3
push
data16
lea
inc
jle
popa
or
push
xchg
leave
sub
popa
ror
repnz
mov
stc
xorb
data16
aad
pop
leave
scas
mov
gs
loope
call
dec
jg
nop
scas
stos
cs
loopne
adc
sbb
sbb
bound
jne
jecxz
add
sub
arpl
adcb
push
out
stos
cmp
or
sbb
fdivl
jge
cld
mov
inc
ss
or
ret
int
aas
scas
imul
cwtl
in
mov
push
pop
mov
xor
out
shll
mov
pop
xor
fisubs
jg
xchg
rcll
jl
cld
jmp
jne
ret
mov
popa
push
call
xchg
lock
add
rcll
sbb
mov
lret
sub
ret
sbb
dec
data16
dec
fstps
add
jo
push
push
out
fs
push
mov
daa
sbb
sbb
shrb
into
push
cmp
decl
mov
jecxz
lret
outsb
cmp
pop
push
cltd
or
sub
mov
js
push
add
push
mov
mov
lock
lea
and
addr16
mov
idivl
sbb
andl
lret
addr16
cmp
leave
testb
in
mov
dec
imul
cld
adc
inc
xchg
in
pop
or
adc
xor
pop
mov
ljmp
xlat
repnz
jp
in
inc
mov
inc
push
sub
mov
adc
pop
xchg
jecxz
sbb
cmpsb
enter
call
cmpsl
ret
stos
push
pusha
std
cld
call
and
push
sub
jg
fbld
sbb
jp
scas
pop
loopne
into
scas
pop
repnz
inc
cld
in
inc
add
and
push
mov
sarb
test
inc
dec
and
mov
pop
sarl
jne
jg
jns
push
and
popa
scas
aam
jecxz
popa
lods
fdiv
pushf
xorb
or
popa
mov
das
inc
push
scas
inc
call
rcrb
push
mov
cmpsb
scas
mov
adc
jne
mov
mov
ljmp
inc
mov
xchg
mov
xor
sarl
ljmp
and
aaa
dec
pop
push
cmp
lcall
jns
loop
pop
jbe
mov
punpcklbw
jno
xchg
push
decl
pop
mov
cld
cmp
in
push
adc
scas
pop
fldcw
pop
dec
push
push
sub
dec
dec
call
lea
jmp
and
imul
add
int
xchg
sti
mov
movb
std
dec
jmp
loop
cld
inc
cmp
pop
mov
repnz
and
push
scas
mov
and
aaa
sub
lock
mov
ljmp
call
fs
nop
int
pop
pop
push
cltd
jno
and
xor
mov
mov
hlt
inc
or
push
dec
call
cld
call
fs
ror
inc
sub
dec
ret
mov
aaa
push
test
cld
push
repnz
jns
or
inc
dec
popw
add
adc
test
addr16
stos
jecxz
stos
or
sub
lock
sub
jno
push
add
mov
fs
jmp
leave
mov
in
cmp
sbb
add
sbb
jmpw
xsaveopt
outsl
pop
add
or
imul
mov
pop
shrb
fistl
inc
mov
and
jl
lds
test
fdivrs
pop
adc
pushf
lcall
stos
pop
ljmp
test
sahf
push
cs
sbb
mov
jg
lods
pop
push
das
out
sti
jmp
push
inc
into
es
aas
inc
out
lds
bound
adc
fistl
mov
cli
out
fwait
and
ja
sti
je
sbb
xor
movsb
aas
cmp
xor
add
ficomps
dec
mov
add
add
les
fadds
sbb
jo
mov
sarl
dec
mov
push
sub
insl
scas
push
outsb
dec
fs
inc
cmp
dec
out
mov
out
mull
outsl
iret
cwtl
xchg
rorl
add
andl
movsl
mov
shll
decl
out
jb
jnp
dec
repz
xchg
jnp
cmp
pop
rcrl
cld
inc
lea
inc
add
sbb
add
outsl
cld
push
jo
outsl
leave
mov
and
decl
incl
sbb
xor
sbb
jle
or
fistps
mov
add
add
xchg
loopne
shll
adc
inc
in
xlat
leave
or
leave
in
sub
clc
push
insl
pop
test
sbb
dec
push
jnp
repnz
hlt
sahf
xchg
orps
inc
push
mov
push
aaa
mov
aas
pushl
xor
cmpsl
and
dec
push
xchg
imul
sbb
jbe
jmp
sbbl
sbb
push
loope
loop
jb
outsl
xor
dec
pushf
inc
xchg
push
imul
aad
inc
sbb
sub
imulb
push
or
data16
loopne
push
sub
cld
js
jle
jo
or
mov
add
push
sub
inc
out
leave
out
cmp
and
jo
scas
mov
test
mov
inc
shr
scas
mov
test
adc
push
int
test
imul
imul
outsb
iret
icebp
push
js
outsl
data16
push
lock
mov
outsl
dec
arpl
mov
pop
jl
mov
das
adc
mov
or
out
fs
mov
in
cmp
out
pop
and
jg
mov
outsb
in
icebp
in
push
iret
mov
scas
lock
cltd
cmp
ja
ret
and
xorb
pop
out
add
cmp
bound
jp
sbb
inc
cli
jecxz
cmc
sti
icebp
push
lock
in
dec
call
data16
adc
mov
fldcw
inc
pop
insl
rcl
push
es
mov
stc
incb
jmp
add
stos
mov
cmp
les
dec
daa
cld
addr16
loopne
jnp
sub
pusha
jge
jmp
fisttpll
jp
jo
inc
into
lock
mov
sahf
jg
push
pop
xlat
in
test
mov
arpl
jecxz
push
mov
jmp
inc
outsb
sbb
cltd
mov
sub
aas
call
outsb
push
inc
sub
movl
stc
js
rorl
ljmp
popl
imul
cs
sbbb
test
dec
mov
dec
dec
adc
movsb
adc
dec
icebp
scas
push
xlat
adc
push
fs
imul
rorb
lret
in
cmp
gs
out
inc
stos
push
popf
orb
loop
daa
mov
mov
sbb
in
cli
cmp
flds
jno
xchg
inc
pop
mov
in
out
imull
aad
add
les
inc
pusha
int
rcrl
stc
cmc
lret
sahf
loopne
cmc
inc
scas
and
pop
test
test
push
pop
imul
add
inc
adc
arpl
ror
push
clc
jbe
xorb
mov
rcrb
jnp
nop
jne
mov
or
imul
fwait
imul
daa
xor
add
imul
push
fs
pop
clc
inc
push
sub
scas
fs
cli
je
jl
in
sbb
dec
push
jae
inc
ss
pop
shll
xor
inc
pusha
adc
dec
icebp
jl
push
sub
dec
mov
or
fisubs
pusha
add
fucomp
repz
sarb
jecxz
out
aam
mov
orl
imul
pop
scas
dec
neg
jae
outsl
dec
push
adc
pusha
out
dec
arpl
jl
outsb
mov
dec
cli
out
xchg
loop
jecxz
lcall
stos
in
popa
add
nop
dec
outsl
cmpsb
imul
adc
inc
dec
and
mov
cmc
daa
xchg
inc
je
cmp
es
enter
sbb
xchg
sub
scas
jmp
inc
popf
add
inc
cmc
call
imul
addr16
stc
test
mov
lahf
daa
xchg
inc
sbb
inc
mov
fisubrl
in
dec
bound
and
cs
push
into
cld
inc
js
jmp
xor
loop
push
add
sbb
out
in
cmp
jnp
pusha
sbb
lret
push
rolb
data16
bound
in
cmp
imul
push
and
je
dec
aad
jo
jno
jo
int
inc
cmpsl
inc
push
data16
sbb
inc
clc
pop
xchg
sbb
scas
pop
push
push
lods
lods
sbbb
repnz
andb
inc
and
cmpsl
or
jae
pop
daa
cli
xchg
push
repz
adc
add
ja
push
jecxz
outsl
push
cmp
add
pop
arpl
add
pop
enter
inc
pusha
sub
aas
cmc
in
andl
push
in
sbb
aas
pop
cwtl
ds
aam
dec
pop
xchg
in
pushf
js
psrad
icebp
pop
cs
push
arpl
xchg
test
adc
test
ljmp
push
in
pop
test
ja
mov
cmpsb
mov
pop
lods
subl
imul
lret
daa
inc
adc
xor
sub
push
or
icebp
sti
cmp
fdivrl
mov
jnp
xchg
jecxz
mov
int3
lret
out
dec
push
pop
int3
push
adc
in
repz
je
pusha
cmc
and
in
dec
incl
pop
ja
pushw
stos
iret
cwtl
fstpl
js
loop
mov
call
push
outsl
mov
push
loop
inc
ret
dec
sti
or
shl
sub
adc
adc
cld
jne
testl
call
out
add
into
inc
sub
pop
fucomp
sub
pushf
dec
in
cs
je
xchg
sbb
and
xchg
mov
inc
outsb
adc
data16
push
push
xor
inc
push
das
jb
fisttpll
dec
dec
push
mov
int
xchg
subb
clc
sbb
jnp
mov
cmpsl
jg
inc
pop
pushf
pop
ja
scas
icebp
push
sub
je
pusha
test
repz
jle
in
pop
jl
jb
lcall
es
inc
adc
shll
xor
hlt
stos
std
inc
or
addr16
sub
movsl
cmp
mov
mov
mov
pop
in
scas
lcall
push
clc
out
adc
adc
mov
cmc
cmp
ret
mov
and
data16
les
leave
push
scas
iret
ljmp
ss
and
mov
dec
pop
xor
cltd
jnp
dec
xchg
sub
test
or
mov
fstpl
dec
mov
loope
push
jmp
jp
lock
dec
rorl
dec
dec
decl
add
dec
pusha
divl
dec
dec
sub
lret
decl
inc
pusha
jmp
sub
push
jnp
or
sub
jp
bound
adc
sbb
bnd
je
movsb
pushw
lea
hlt
sbb
sub
lret
jecxz
fwait
loope
xor
sbb
mov
ret
int3
pop
repz
push
ficompl
arpl
dec
out
inc
call
or
stc
mov
cmp
iret
jmp
stc
push
xchg
mov
addr16
cmp
stc
cld
pop
lds
into
mov
call
xchg
jnp
stos
push
outsb
mov
cmpsl
cs
popf
loopne
add
jne
arpl
dec
pop
pusha
loopne
jo
cmp
test
pop
pop
in
xor
aas
pop
push
movsb
sbb
pop
mov
lock
jp
sub
mov
jp
inc
mov
insl
data16
or
mov
adc
cmc
test
xor
call
mov
je
bound
lret
mov
dec
and
cs
cmc
and
fdivl
imul
push
cwtl
loope
sub
out
adc
jmp
push
in
addr16
add
aad
aam
or
and
cs
inc
dec
mov
sti
sub
ljmp
fs
arpl
jmp
mov
out
inc
sbb
iret
jp
addr16
dec
testb
lret
aaa
dec
or
pusha
dec
dec
movsl
or
jl
mov
xchg
call
out
sub
cmp
inc
inc
test
in
lret
sub
out
inc
imul
test
mov
dec
outsb
jmp
jle
sub
out
cs
rol
cs
in
jmp
cltd
jnp
loopw
es
sti
xchg
bound
push
mov
pop
roll
rolb
and
repnz
aam
inc
or
lret
gs
outsl
mov
sbb
cmp
dec
aad
cmp
dec
test
movsb
sti
and
jmp
adc
enter
xchg
cmpsb
xchg
jl
andb
mov
lret
in
xchg
bound
andl
sub
daa
inc
adc
lea
pusha
jae
pop
out
popa
push
jle
mov
imul
and
insl
cmc
mov
out
jp
sti
cmp
xor
push
dec
dec
out
jg
lock
les
dec
loopne
or
fisubs
int3
dec
inc
dec
movsb
iret
pop
test
xor
movd
bound
mov
pop
and
push
stos
dec
push
pop
sub
ret
fistps
pop
lock
enter
pushf
sub
pusha
test
dec
jp
outsb
scas
inc
sub
sbb
or
data16
sub
bound
jne
sub
data16
arpl
in
out
in
lds
sub
jno
orl
sbb
aad
jg
bound
jno
loope
int3
rorl
stos
fstpt
pop
cmpsb
inc
inc
insb
aas
mov
sub
pop
arpl
outsb
aaa
movsl
lock
pop
int3
mov
bnd
pushw
outsb
lcall
iret
or
pop
cmc
xor
aaa
push
jae
mov
mov
push
popa
pop
jo
pop
dec
test
inc
testb
rorb
lods
pop
loop
and
sbb
pop
mov
js
repz
mov
rcrl
arpl
sub
cld
ret
fcoml
test
dec
sbb
mov
testl
mov
jnp
jb
xchg
negl
and
data16
add
or
rclb
shlb
js
and
cmp
jg
out
movb
push
jb
mov
test
dec
xchg
jp
in
negl
sub
mov
nop
fdivrl
cmp
test
in
movsl
jne
jb
xor
loopne
dec
pop
in
sub
mov
mov
sbb
lea
movsb
orb
insl
push
pop
stos
pop
or
inc
or
jb
notl
maxps
mov
loopne
in
push
mov
ret
ljmp
insl
jl
inc
roll
push
je
dec
adc
shr
ficomps
mov
xor
mov
stos
pusha
in
inc
cmp
jmp
popf
mov
pop
dec
cmp
mov
cmc
scas
in
mov
xchg
ja
mov
jae
sbb
adc
jnp
addr16
jne
or
sbb
sti
jo
mov
cmpl
insb
jno
jecxz
call
inc
sbb
jo
outsb
scas
lcall
subl
out
mov
enter
subb
addr16
adc
push
dec
lret
add
push
call
xor
cmp
outsl
cld
adc
dec
add
pop
add
popa
pusha
mov
xchg
mov
bound
aad
stos
iret
pushf
fimuls
pop
das
or
xchg
inc
adc
sbb
or
lea
add
xchg
repz
lret
mov
cmc
push
shll
out
inc
jle
pop
jle
pusha
inc
rcrl
push
out
shr
rcl
mov
sub
pop
in
sbb
xorl
jbe
fs
dec
and
pop
add
sarl
in
imul
jbe
jno
fs
inc
ret
dec
jne
add
js
or
enter
stc
test
cmp
sahf
jg
dec
repz
popf
push
push
jb
push
popf
cmc
es
sub
je
ljmp
pop
pop
xchg
dec
jns
lahf
stc
or
out
fs
cltd
xchg
loopne
adc
sub
bound
lea
repz
push
andb
jp
aad
dec
stc
xchg
out
sti
xchg
cli
repz
test
xchg
xor
inc
psllq
out
out
pusha
movb
cmpsb
cltd
repz
or
or
pop
cli
sbb
sub
cmovg
out
cmp
scas
adc
dec
in
dec
repz
inc
sub
aaa
xor
dec
iret
lret
dec
sti
outsb
in
inc
pop
bound
sbb
iret
and
imull
in
js
sbb
jne
jl
lods
xor
iret
test
rorb
cmpsb
ret
xchg
out
popa
inc
mov
pop
push
mov
bnd
and
xor
and
sbb
outsb
and
cmp
jb
les
cmp
jbe
stc
test
cwtl
jl
or
call
pop
sbb
inc
es
jle
mov
push
pop
jl
enter
stos
cmp
and
xor
dec
and
or
ljmp
fs
push
les
dec
scas
lret
in
imul
jle
loopne
arpl
pop
nop
mov
xor
aas
sub
cmc
push
clc
mov
clc
js
adc
out
jl
in
sub
aas
dec
arpl
js
iret
arpl
pop
cmc
shlb
sub
imul
stc
dec
enter
or
mov
dec
sub
mov
outsl
add
lods
mov
das
in
inc
and
jp
outsl
test
outsb
orb
mov
inc
push
push
call
or
daa
ret
in
cli
mov
jg
sub
movsb
xor
push
outsl
adc
cmp
scas
sbb
jle
add
int
lret
loop
xchg
xor
stos
jno
sbb
push
aam
outsb
cmc
test
test
mov
into
repz
inc
xchg
out
les
out
adc
loope
lods
popf
sub
sub
hlt
data16
dec
ljmp
stos
adc
dec
fdivrl
dec
xlat
aad
pusha
loop
in
push
inc
clc
cli
pop
xlat
xchg
pop
inc
cwtl
push
xchg
jl
je
mov
dec
fs
pop
imul
jnp
cmpsl
add
xorb
or
inc
cmc
jle
mov
cmc
popa
cmp
mov
addr16
dec
inc
popl
pusha
cs
push
cmp
inc
cmc
sbb
xchg
out
mov
adc
cmc
inc
pop
adc
xchg
add
lods
push
cmp
sbb
jecxz
inc
shrl
pusha
imul
ljmp
xlat
call
repnz
xchg
and
sub
fwait
addr16
outsb
out
stc
inc
and
cld
outsb
jae
dec
lods
out
call
imul
jno
pusha
dec
bound
out
call
sbb
pop
mov
dec
inc
xchg
jae
lcall
xor
push
nop
out
push
inc
je
jl
dec
dec
pop
push
scas
jl
or
jmp
jnp
out
mov
xor
shrb
testl
lods
cmpsb
xlat
repnz
inc
mov
push
jp
add
add
mov
orb
call
cli
mov
dec
das
lret
stos
push
incb
mov
pushf
lods
sahf
popf
sub
bound
lods
pop
push
jg
hlt
out
sbb
data16
into
jp
scas
or
and
dec
clc
stos
jno
in
jl
mov
and
mov
enter
outsb
rep
call
test
mov
and
movsb
ret
aam
fs
mov
in
dec
jg
jle
add
dec
mov
or
jns
les
jb
sub
cmc
dec
sub
sbb
pop
jae
aaa
loope
mov
aam
out
leave
adc
or
pop
mov
loopne
stos
adc
jns
dec
aaa
push
cmp
stos
data16
stc
repz
pop
addr16
out
xchg
sbb
mov
push
sub
dec
call
test
inc
jnp
cmp
and
je
adc
jae
insb
test
jl
sub
add
mov
insb
in
loope
shlb
cmp
pop
popa
mov
jbe
inc
imul
movsb
shr
mov
popf
int
push
mov
mov
sub
push
cmc
xor
repz
adc
xchg
push
pop
push
outsb
mov
cmpsl
fldenv
inc
inc
push
cltd
std
jg
push
adc
fimull
or
xchg
jae
xor
pop
stos
xchg
sbb
aas
fs
fwait
sti
jg
into
shlb
xlat
addr16
iret
dec
fs
mov
addr16
pop
xchg
shl
cs
ret
cltd
cltd
jnp
rcll
sti
sbb
add
rorb
stos
push
push
xor
add
das
pop
push
insl
int3
mov
push
outsb
ja
push
in
cld
test
outsb
push
jb
sub
int
popf
repz
add
push
rolb
inc
push
shll
jge
pop
adc
ds
ret
roll
push
pop
stos
xchg
clc
pop
out
les
dec
mov
movsl
mov
inc
mov
jmp
outsl
mov
sbb
mov
pusha
and
jle
mov
adc
push
sub
and
jl
imul
wrmsr
jecxz
dec
in
jmp
and
hlt
imul
stc
pop
loop
cli
data16
loope
and
push
ja
adc
iret
test
mov
adc
mov
dec
cmp
repz
push
cmc
sub
cmpsb
in
data16
xor
inc
sbb
repnz
push
add
gs
inc
or
adc
mov
test
daa
fcmovb
js
into
div
pop
popf
ss
pop
push
xchg
cmc
sub
insl
iret
lret
shrb
mov
mov
insl
and
loopne
adc
sub
in
jbe
inc
jo
mov
add
jb
xchg
addr16
movsb
dec
cld
js
std
call
inc
jp
fs
int3
push
push
sub
cld
bound
cmc
scas
sub
inc
xchg
call
dec
mov
inc
mov
or
incl
outsl
sub
inc
pop
je
aam
das
jb
xchg
jmp
pop
scas
js
or
pop
imul
sbb
ja
pusha
incb
jnp
outsl
push
in
orb
pop
movl
pop
jbe
push
negl
xor
ljmp
ss
fwait
add
stc
pop
shll
dec
stos
ret
rcl
cmp
adc
ds
jge
pushf
adc
add
and
or
dec
lods
stc
popl
int
loopne
push
repnz
fs
mov
push
sub
mov
fmull
pop
mov
pop
dec
adc
in
in
loopne
pusha
outsl
call
js
sbb
hlt
jns
dec
out
cs
fmulp
inc
cmc
ror
cltd
rcrb
or
push
sub
sub
jbe
inc
xor
rcrb
rorb
dec
pop
sbb
dec
pop
daa
dec
push
add
lock
sbb
fs
inc
push
shlb
jp
mov
andb
sbb
es
in
in
jp
jmp
icebp
sti
pop
pusha
dec
enter
insb
pusha
inc
xchg
jo
inc
popf
fwait
dec
push
jne
leave
pusha
decl
int
ss
clc
lods
aaa
aaa
pop
and
jae
mov
inc
jl
jle
enter
je
mov
inc
dec
enter
outsl
jg
dec
mov
nop
inc
sub
dec
xor
js
stos
push
lods
ljmp
sub
dec
push
mov
sti
xchg
je
pop
sub
fcomp
sbb
stos
or
xchg
pusha
cwtl
out
test
js
inc
adc
cmovp
into
std
in
aaa
add
jo
pop
push
arpl
sbb
mov
cmpsl
lret
add
pusha
dec
sub
shrb
mov
outsb
mov
sub
add
in
lret
int
jle
test
push
xlat
jl
iret
iret
sub
pop
ljmp
jge
add
jl
jg
xor
sbb
test
js
jle
fs
stos
adc
test
adc
sti
or
jbe
stc
xor
jp
out
push
test
push
leave
aaa
fbld
inc
adcb
jno
sbb
scas
roll
jle
enter
jp
addr16
fldcw
loop
bsr
sti
inc
pop
pop
xchg
popf
mov
repnz
xchg
sub
xchg
xor
outsl
cmp
imul
add
cmp
mov
mov
aad
bound
mov
mov
jns
xor
loopne
insl
cmp
imul
jecxz
inc
pop
out
push
push
iret
dec
dec
jns
call
sub
mov
pop
add
mov
jp
jg
dec
rol
test
dec
and
imul
cmpsb
lock
push
xlat
inc
enter
pop
loop
push
dec
outsl
or
inc
dec
pop
pop
shl
in
lahf
enter
iret
adc
jg
dec
sub
jle
dec
popf
daa
addr16
or
adc
mov
jl
out
cs
imul
sbb
aam
jne
or
inc
inc
xchg
add
mov
bound
outsb
pop
insb
ret
test
xchg
fcoml
cmp
outsb
sbb
int3
adc
pop
addr16
push
push
and
dec
testl
inc
sarl
xor
daa
nop
dec
movsb
mov
stos
mov
cmp
dec
jbe
mov
pop
mov
adc
mov
cs
xchg
in
shrl
mov
mov
mov
les
popf
inc
add
test
or
pop
dec
cmovl
les
xchg
sbb
ja
js
iret
movsb
xchg
jb
je
push
mov
fcmovb
loop
mov
pop
sub
mov
lds
shlb
aam
push
test
inc
and
or
and
movsb
fmull
and
je
xchg
xor
scas
pop
pop
mov
and
push
and
inc
jle
xor
lods
aam
les
push
ja
addr16
pop
outsb
jge
jae
outsl
lods
cs
shrl
mov
testl
out
enter
imul
fsubp
inc
sub
inc
clc
arpl
clc
add
ja
adc
iret
cmpsb
xor
xchg
sub
push
inc
push
inc
jns
sub
mov
cmpsb
sbb
adc
sub
ret
add
es
mov
mov
sub
es
sub
jbe
sub
xor
pop
fbld
sub
adc
das
stos
cs
ret
dec
sbb
jecxz
xor
cs
sub
testb
loopne
fdivl
mov
inc
notl
ret
shrb
cwtl
mov
inc
mov
ret
stos
fsubs
inc
cmpsb
icebp
mov
test
clc
push
in
sub
pop
mov
jmp
js
jae
pop
inc
xor
jl
pop
sub
jmp
pusha
sub
add
inc
pop
and
nop
jnp
iret
call
loopne
fucomip
sahf
outsb
outsl
js
negl
rcll
es
dec
sbb
outsl
iret
jmp
pop
push
je
out
jnp
cmc
dec
push
out
rcrl
inc
scas
inc
lds
imul
adcb
vaddps
jmp
jp
jmp
popa
repz
ret
push
sahf
jl
sbb
push
adc
mov
insl
out
repnz
inc
sub
sbb
dec
ss
out
cmc
push
int
fiadds
scas
xor
fwait
cltd
aad
jp
push
mov
popa
lods
xchg
cmovbe
in
jnp
lds
mov
pop
add
popa
test
ja
hlt
ljmp
xor
ljmp
sub
mov
addr16
clc
loope
inc
dec
loope
pop
lret
test
and
cwtl
jl
lea
push
push
jg
pop
ljmp
sub
out
sbb
inc
adc
fs
or
or
sbb
repnz
loop
jmp
fs
je
neg
adc
push
adc
out
mov
stos
lret
adc
sbb
es
adc
dec
fwait
cmc
ret
push
xor
cwtl
dec
or
pop
or
popf
out
sbb
orl
mov
cmpsl
push
inc
fsts
adc
call
int3
ret
lret
jne
jmp
les
xor
call
nop
daa
jmp
jp
mov
mov
shlb
mov
jg
inc
push
test
out
scas
cmpl
pop
pop
rcrl
sbb
cmp
pushf
xorb
lods
xchg
mov
jb
add
sbb
lock
inc
xchg
xor
popf
inc
je
iret
fwait
loopne
cmp
sbb
loope
adc
adc
dec
xchg
xchg
pop
fadds
or
jecxz
shlb
stos
mov
add
shl
xchg
cld
loope
out
imul
cwtl
ja
jmp
or
or
adc
repz
notl
push
arpl
in
or
sub
pop
sbb
or
sub
fwait
jo
int3
push
movb
push
dec
sub
add
in
faddl
js
imul
dec
fiadds
jo
mov
push
lret
ret
push
sarl
sub
mov
push
xor
inc
sbb
popl
stos
jb
sub
push
mov
ds
enter
jle
pusha
aaa
push
push
ret
jne
sub
cli
int3
jle
sbb
pop
in
jle
push
jo
ljmp
mov
mov
sbb
cld
mov
jbe
sub
lods
add
popa
aaa
dec
push
pop
or
adc
daa
push
dec
push
dec
push
and
pop
push
aaa
loopne
pop
dec
imul
mov
sbb
scas
fistl
dec
dec
aam
stos
scas
xor
in
jmp
lds
or
das
sub
clc
lahf
mov
add
and
and
mov
inc
shrb
in
jno
fidivrl
ss
in
aad
mov
int3
mov
stos
dec
mov
pop
sub
xchg
mov
mov
js
xchg
fstps
vpaddusw
add
dec
aam
arpl
dec
jne
mov
inc
dec
js
lcall
cmc
out
push
pop
fstps
js
aam
xchg
xchg
les
ret
in
dec
xor
cli
add
mov
daa
hlt
test
jne
into
add
inc
or
mov
adc
shll
in
lret
sbb
popa
xor
or
outsb
in
fsubrs
add
pop
adc
sub
cli
xor
test
mov
add
push
mov
inc
adc
push
push
pop
mov
ljmp
repz
xlat
data16
dec
cs
xchg
mov
lods
inc
push
sbb
dec
sarl
arpl
lods
or
lcall
data16
js
lods
ds
cld
call
ud0
cld
leave
hlt
int3
jmp
push
mov
lds
cli
push
sbb
dec
in
cs
jo
xor
aas
dec
lret
pop
dec
dec
mov
mov
neg
jg
mov
sub
nop
push
ja
sbb
add
push
or
out
sbb
push
movb
cld
nop
in
adc
jge
jge
dec
mov
add
lods
push
mov
icebp
stos
mov
xchg
jle
mov
movsb
fsubl
daa
cmp
je
pop
xlat
xor
jle
mov
lods
xchg
lret
into
out
testl
cmpl
int3
pop
hlt
dec
push
sbb
mov
cli
cld
fistl
test
jae
and
xor
and
pop
inc
inc
cmp
jns
push
orb
call
xor
jns
in
cmp
ret
dec
jbe
insl
lcall
push
imul
repnz
pusha
jg
test
adc
imul
push
jns
xor
aas
pop
dec
mov
mov
adc
xchg
add
mov
inc
inc
les
lods
int
sub
dec
test
int
lret
test
arpl
inc
loope
aad
sub
js
outsb
jb
xor
and
mov
pop
into
in
sti
cmpsb
repz
pop
es
push
mov
clc
repnz
or
cmp
dec
xchg
pusha
pop
lcall
pop
jle
cmp
jl
out
adc
inc
mov
clc
inc
insl
cli
shlb
inc
stos
push
pusha
lods
push
pop
jns
jp
adc
inc
stos
addr16
bound
push
sub
sahf
mov
outsl
mov
sub
and
pop
dec
and
arpl
ret
outsb
cltd
xchg
int3
push
jg
xchg
aaa
addr16
bound
push
cmp
das
sbb
out
daa
andb
mov
pop
cwtl
out
cmpsl
into
sub
xor
ljmp
scas
pop
sbb
stos
dec
data16
pushf
test
adc
sub
push
add
data16
dec
data16
rcl
cmp
mov
daa
adc
dec
mov
call
mov
mov
stos
pop
je
push
punpckhbw
jns
stos
jp
push
dec
fcompl
or
lret
test
adc
jge
je
out
or
pop
push
outsl
imul
cs
pusha
mov
xor
mov
in
daa
mov
jnp
cmp
ret
inc
movsb
push
int3
pusha
fisttpl
push
push
sub
pop
js
ja
outsl
add
setl
sub
in
dec
outsl
xchg
adc
sub
aad
xor
xchg
and
les
scas
dec
mov
data16
daa
xorl
sbb
jne
ljmp
inc
ljmp
decl
xchg
mov
sbb
ret
pushf
leave
jl
mov
sbb
push
xor
inc
int
xbegin
andb
stc
or
cmp
out
mov
mov
daa
mov
xchg
dec
imul
in
adc
das
mov
dec
cmp
cmp
jb
cmp
stos
mov
cmp
jb
push
jnp
push
lds
or
mov
pop
iret
sub
and
cmc
and
push
dec
jns
ficomps
inc
fsubp
cmp
testl
adc
jns
enter
movsl
sub
xor
cwtl
jmp
and
cli
les
addr16
and
jl
xchg
inc
mov
mov
aaa
push
and
mov
mov
and
mov
xor
push
outsb
mov
cmp
push
scas
fwait
push
fisubl
popa
pop
jp
inc
orb
mov
dec
fistps
cmpsb
negb
and
lock
sbb
rclb
es
xchg
insl
shll
outsl
mov
xor
scas
sbb
add
scas
cmpsb
adc
iret
arpl
stos
and
xor
lcall
jge
jle
int3
outsl
mov
or
mov
repnz
daa
jmp
imul
loope
mov
adc
in
and
dec
xlat
jb
lods
xchg
mov
jecxz
xor
jg
add
cmp
mov
imul
inc
mov
dec
push
add
stos
dec
mov
adc
fsubp
and
add
mov
or
sub
rcll
dec
aas
or
popa
in
std
inc
or
shl
ret
pusha
addr16
out
outsb
outsl
inc
les
shlb
mov
cmp
xchg
pop
test
les
inc
mov
das
sbb
imul
jbe
lds
jle
fsubp
repz
dec
mov
in
jmp
pop
pop
mov
imul
ja
popa
js
dec
pop
adc
je
xchg
mov
mov
or
cwtl
sub
jp
mov
push
clc
push
cmpsb
and
stc
sbb
dec
or
cwtl
pop
in
sub
fs
aam
push
ds
sbb
fs
call
sbb
pop
daa
dec
mov
adc
jge
mov
shlb
inc
rol
jmp
dec
mov
cli
and
arpl
adc
loopne
mov
add
movb
inc
pop
add
shr
ds
rcrb
repz
aaa
mov
shrl
shl
jge,pn
or
push
adc
lock
in
jl
lret
jmp
pop
pusha
and
sub
je
inc
adc
dec
stos
outsb
jno
or
jle
adc
sbb
push
test
daa
inc
jo
jmp
push
push
jg
or
orl
sub
leave
adc
push
shlb
and
stos
arpl
push
inc
movsb
push
jl
cmp
call
xchg
pop
gs
js
pop
xor
pop
and
adc
pop
int
scas
sbb
inc
mov
shr
inc
lcall
sbb
ficoms
add
js
jl
fwait
add
and
pop
mov
xor
and
adc
bound
jae
jo
push
stos
repnz
les
pop
inc
loope
add
inc
popf
xor
sub
out
adc
jae
jmp
jmp
and
xchg
pop
rorl
out
fs
stos
fiadds
ja
ja
jno
mov
lret
subb
add
and
jno
in
push
outsb
lods
sbb
jae
sbb
icebp
dec
data16
std
sbb
cmp
mov
orl
gs
iret
loope
out
arpl
loopne
and
enter
aas
sub
jmp
sub
dec
int
in
jecxz
pop
push
cwtl
sti
mov
sbb
pop
mov
push
enter
cmp
dec
in
lods
loop
scas
and
stos
sub
sub
stos
mov
loope
cmp
cmpsb
imul
imul
data16
cmpsb
mov
dec
xchg
push
push
dec
dec
test
js
jns
jnp
outsb
dec
insl
outsl
js
hlt
xor
lret
jb
pop
sbb
or
call
mov
xchg
les
inc
sbb
pusha
shrb
dec
sub
push
dec
push
in
pop
loope
lock
loope
out
jle
push
push
mov
xor
and
xor
and
stc
imul
mov
pop
jge
pusha
ljmp
pop
pop
or
sbb
int
cmp
dec
data16
xor
aad
out
inc
push
ljmp
adc
push
inc
push
insl
inc
stc
adc
dec
mov
and
out
adc
lret
aam
ja
add
adc
push
testl
rcl
test
inc
and
fwait
jmp
ja
mov
dec
push
jg
push
sarl
lret
movsb
push
and
shrd
mov
jb
mov
jne
rolb
dec
sbb
icebp
ss
call
mov
stc
jbe
data16
add
cs
xor
pop
fwait
shll
adc
cs
fsubrl
sub
xor
in
subb
adc
pop
jb
out
mov
out
movsb
int
jg
std
popa
xor
jecxz
cs
data16
imul
icebp
cmp
and
adc
sub
daa
test
and
jg
sub
out
test
cs
pop
cmp
push
and
sub
dec
repz
jnp
or
daa
call
lock
outsl
add
jae
test
imul
int
mov
pop
xchg
cmpsb
aas
mov
adc
leave
sub
pop
push
loop
rol
add
adc
mov
fldt
cwtl
inc
mov
ja
push
leave
jp
outsb
cmp
rclb
mov
sub
jg
cli
and
pusha
jl
mov
addr16
cld
dec
loopne
sub
or
mov
addr16
lods
or
lret
jmp
or
test
loope
rcl
mov
cwtl
mov
sub
sbbb
pusha
js
lds
test
sbbb
jns
sarl
xlat
mov
or
imul
insl
cmp
enter
test
add
pop
add
in
sbb
push
clc
mov
decb
rolb
jne
inc
aas
xchg
pusha
aaa
inc
rol
daa
inc
sbb
scas
push
pop
push
je
das
sarl
imul
mov
push
jle
test
push
and
pop
pop
ss
ljmp
push
in
xor
jp
into
outsb
loopne
jno
out
imul
aad
xor
sub
and
fisubrl
inc
add
push
cmp
or
jno
dec
dec
dec
push
orl
inc
out
mov
adc
out
sub
shrl
pop
sbb
jo
repz
push
imul
fs
fs
adc
lret
inc
das
cmp
mov
push
mov
and
scas
insb
mov
outsl
repz
cmp
push
sti
sbb
and
mov
sub
iret
mov
or
push
cmp
inc
mov
pop
test
jbe
ljmp
int
or
dec
cmpsb
inc
lea
in
imul
fwait
jo
rolb
daa
pop
lretw
cmp
fwait
jg
int
jg
shrb
inc
cmp
outsl
in
jbe
xchg
ret
inc
data16
arpl
rcl
cmp
lcall
fcoms
es
add
push
mov
ror
push
inc
and
call
push
aaa
dec
call
inc
push
sahf
insl
iret
xchg
shll
xchg
outsb
push
ret
mov
mov
xchg
into
lea
out
and
xchg
clc
push
adc
ss
aas
add
xor
movb
out
inc
pusha
test
bound
cmpsb
data16
cwtl
dec
push
outsl
mov
repz
fwait
pop
outsb
xchg
pop
out
pop
and
cmpsl
and
outsl
test
repz
push
daa
dec
or
mov
jmp
and
neg
xchg
inc
and
adc
jl
test
ljmp
mov
in
dec
push
sub
jle
aaa
es
mov
pop
arpl
rcl
dec
addr16
xor
jne
dec
or
dec
pushf
repz
cmc
xor
cs
push
jl
push
lds
test
mov
push
pop
outsb
inc
popa
sbb
add
data16
or
sahf
popfw
add
pop
fmull
pop
repz
add
in
sarb
jp
out
add
icebp
sti
adc
xor
pcmpgtb
insl
test
pop
dec
mov
int
jbe,pn
push
aad
scas
lock
mov
lea
mov
out
mov
dec
pop
mov
push
lahf
adc
mov
add
data16
es
cmc
sub
push
jg
mov
mov
lock
hlt
jb
data16
jp
cmpsb
push
cld
xchg
push
pop
mulb
imul
popf
stos
data16
dec
repnz
inc
jle
push
stos
mov
xor
imul
hlt
add
es
pop
int3
inc
outsb
in
sti
or
push
in
or
sub
outsl
sub
sbb
sbb
xchg
call
sbb
xchg
jp
idiv
inc
imul
or
mov
out
pop
add
aaa
inc
xor
mov
cmp
in
out
inc
mov
lret
jl
sub
or
addl
xor
in
pushf
pusha
gs
xor
out
stos
inc
push
and
fsubl
cmp
adc
sbb
adc
scas
push
mov
lds
imul
mov
or
dec
push
shr
push
into
aaa
ds
jp
push
popa
lea
lret
cmc
push
cltd
data16
add
test
dec
leave
std
sub
or
add
push
cld
jno
jmp
jl
push
cmp
nop
in
sub
sub
sub
sbb
push
pop
jo
outsl
insl
arpl
in
movsb
adc
mov
dec
mov
dec
outsl
jmp
xchg
inc
in
jle
pop
cbtw
cmpsb
sub
cmpsl
ljmp
dec
out
mov
push
pop
mov
insl
test
or
push
mull
sub
outsl
cs
inc
test
sub
xlat
nop
fsubrl
out
scas
rclb
loope
mov
les
sub
cmpsb
scas
out
scas
loopne
lret
mov
std
push
movsb
scas
push
and
sub
sub
outsb
gs
imull
pop
iret
push
jmp
iret
jae
and
push
inc
or
jno
and
fwait
into
movsb
push
xor
icebp
arpl
insl
aad
pushf
dec
aam
imul
mov
test
dec
push
pop
subb
movsl
push
bnd
dec
pop
jne
ss
mov
cs
mov
outsb
pop
loop
adc
mov
faddp
inc
fs
sub
or
fsubrs
aam
and
idivl
adc
push
jge
inc
repnz
test
jp
or
daa
incl
lahf
fcmovb
adc
sbb
pop
cmpsl
aas
mov
pop
fildl
outsl
jge
test
cmp
dec
or
sbb
inc
cltd
push
mov
xor
ret
push
fwait
sbb
mov
repz
test
faddp
pop
dec
pop
jno
in
mov
stos
aaa
cmpsl
dec
nop
jle
xchg
jmp
xchg
call
inc
es
mov
ljmp
je
push
sbb
ljmp
jmp
pop
imul
mov
pop
into
movsl
cmp
pop
push
adc
dec
jnp
jle
xchg
cld
add
push
cmpsl
addr16
cmpsb
int
das
dec
and
dec
sbb
adc
fildll
pop
xchg
xlat
xor
jg
dec
inc
cmp
loopne
icebp
hlt
jbe
xor
cmpsl
loopne
bnd
mov
gs
jg
jle
iret
fwait
push
repnz
fs
repnz
out
sub
int3
inc
bnd
dec
repnz
fs
outsb
aas
xchg
fs
dec
out
sub
pop
cmp
cmc
cmp
mov
adc
dec
out
insl
out
or
outsb
lea
loop
daa
adc
xchg
dec
xchg
rol
adc
dec
outsb
xchg
pop
cmc
popf
enter
rorl
lea
js
sbb
xchg
mov
jns
enter
sbb
xchg
mov
stos
addl
xor
inc
hlt
test
inc
sub
dec
jnp
lods
pop
xor
gs
jmp
imul
outsl
lret
xabort
mov
inc
fs
push
imul
sbb
outsb
inc
dec
sbb
pop
lahf
sub
pusha
add
mov
scas
mov
stc
repz
push
jne
mov
xor
mov
or
xor
ret
sbbl
xchg
cs
ljmp
add
mov
xor
xchg
test
sbb
pop
enter
in
mov
jb
lods
repz
dec
cld
sti
sti
test
fisttpll
push
outsb
scas
jo
shlb
push
and
xchg
adcl
jmp
inc
stos
shl
int3
out
test
adc
mov
call
ja
lock
push
dec
inc
pop
int
aas
pop
jmp
push
push
popa
inc
rorl
adc
inc
mov
mov
movl
add
ret
cmp
mov
pop
or
jo,pt
loop
scas
lcall
scas
sti
dec
ret
dec
jp
dec
jne
mov
jmp
out
sub
les
push
push
loop
lods
mov
or
xchg
xlat
xorl
jae
repz
jle
sbb
mull
mov
test
mov
stos
arpl
dec
fadds
and
in
out
inc
cwtl
gs
lds
test
mov
sub
lret
push
push
stos
or
int
aam
mov
dec
xor
stos
mov
loopne
inc
inc
pop
data16
xor
test
push
jle
sbb
sbb
testl
nop
ja
test
xor
jmp
dec
jne
push
jp
and
adc
jg
xor
sti
in
or
sbb
xchg
out
jl
je
scas
int3
int3
dec
popf
push
mov
dec
lods
jl
push
insb
fld
push
add
scas
adc
arpl
push
push
test
popf
ds
les
ss
add
mov
xor
rorb
inc
popa
push
sub
sub
dec
inc
ret
lock
in
add
mov
push
fcoms
outsb
std
jnp
sub
nop
shlb
loope
popf
mov
stc
xchg
sbb
mov
jmp
out
adc
stos
xorl
int3
aam
lcall
je
push
jmp
scas
adc
cmp
out
jno
sti
pop
xchg
nop
dec
or
jns
cmp
popa
jge
les
js
int
or
outsb
cmc
repz
aas
adc
and
test
jmp
xor
push
leave
push
out
sub
inc
fs
dec
jns
sbb
push
dec
push
js
sub
repz
sti
mov
dec
ljmp
fsubl
scas
subl
fistpll
cmpsb
cmpsl
cmp
and
mov
mov
cmc
ret
sbb
scas
mov
mov
lcall
xchg
cltd
sub
add
iret
ds
add
jns
pop
mov
jbe
and
testb
mov
xor
push
int
in
shl
or
jno
cmp
add
sbb
sbb
hlt
fdivrp
xor
mov
xchg
adcb
test
ret
fwait
mov
mov
cld
adc
xchg
xchg
push
testl
lcall
xor
callw
cli
push
adc
jge
jo
mov
ret
test
mov
repnz
stos
and
sbb
jl
inc
sarb
loope
enter
sbb
into
xchg
mov
mov
rolb
push
ret
int
sahf
adc
mov
adc
jb
or
jcxz
pop
das
shlb
lods
nop
std
test
sbb
ret
repz
fisubrs
jl
add
push
lcall
fnstcw
jle
inc
push
cld
mov
jmp
imul
sbb
call
lds
xchg
jge
sbb
data16
outsl
push
dec
ret
into
ret
out
addr16
cmp
in
lock
insb
add
fstl
hlt
out
mov
nop
ja
data16
imul
jb
shlb
mov
les
mov
bswap
sbb
pusha
enter
mov
pop
int
dec
dec
dec
out
stos
jg
mov
push
outsb
pop
repnz
addr16
sbb
out
sarw
out
or
psubusb
push
insl
int
std
jns
ljmp
fs
xchg
stos
jae
xchg
add
fildll
popf
lahf
push
orl
repz
sbb
ds
cwtl
sti
pop
repz
lahf
mov
mov
mov
xchg
mov
dec
enter
push
jp
push
pusha
mov
out
pop
or
insl
int3
incb
insl
roll
aaa
mov
jle
dec
es
jbe
out
sbb
inc
pop
xchg
ret
pop
pushl
fadds
push
sub
fldcw
in
cmpsl
jle
jp
loopne
jecxz
es
out
lods
add
xchg
push
pop
mov
enter
cwtl
push
fidivrs
lret
in
data16
pushf
push
ss
sbb
stos
movsb
lock
sbb
fmul
jmp
out
lret
xchg
mov
inc
gs
add
test
add
ljmp
xorl
int
cli
movsb
mov
inc
sti
pop
int3
xchg
jnp
bound
fidivl
lock
and
adc
sbb
rcll
icebp
push
mov
mov
movsl
or
xchg
dec
lret
cmp
mov
xor
dec
jmp
aad
sbb
subb
jge
and
push
sbb
xor
imul
inc
cmc
fidivrs
jmp
inc
xor
mov
aas
add
cmp
arpl
inc
inc
xor
iret
push
add
cmp
push
loopne
rcll
dec
stos
pop
lds
mov
or
jmp
std
rcll
inc
shlb
adc
inc
mov
xchg
pop
rol
push
push
filds
inc
cli
in
cmp
movsl
adc
test
jns
lret
test
add
inc
notl
imul
imul
push
les
subb
lcall
dec
iret
pop
push
add
push
pop
xchg
and
outsl
jl
xlat
and
lret
ljmp
test
mov
imul
sbb
mov
jo
cmp
movsb
ja
push
xchg
nop
jo
sub
ret
sbb
push
jmp
jg
pop
jmp
dec
fwait
mov
cmp
jge,pn
leave
pop
outsl
sbb
push
stos
movsb
das
and
ret
test
repnz
inc
mov
fcoms
in
or
stos
or
fwait
pop
jo
sub
inc
dec
pop
jo
sarl
dec
sub
mov
mov
push
jae
sub
aaa
xor
pop
cmpsl
inc
jl
pop
push
xor
cmp
push
sbb
popf
aam
sub
sbb
rol
pusha
mov
sti
std
rcll
ret
cmc
dec
sbb
dec
jbe
es
adc
incl
jge
icebp
add
push
sub
popa
std
stos
jmp
sbb
pop
int
bound
icebp
sbb
clc
ret
xor
jae
jmp
sar
push
jo
pop
loop
fs
xor
ror
in
fisubl
adc
out
cmp
fs
inc
movsl
pop
jns
movsb
push
mov
inc
adc
aaa
insl
pop
roll
insl
call
testl
cmc
je
js
aad
test
and
add
or
push
jb
xchg
dec
xor
aas
daa
push
and
jmp
testl
or
push
mov
fldlg2
jmp
push
outsl
push
sti
pusha
adc
adc
sbb
and
mov
ret
jb
add
pop
lcall
jb,pn
or
pop
and
xor
repz
loope
adc
jl
push
jo
push
mov
pop
rolb
repz
sbb
testb
je
sub
push
dec
aad
mov
shrb
xchg
testb
and
testb
ret
jmp
inc
arpl
stos
or
fildll
test
mov
mov
or
dec
pop
movsl
lods
sub
dec
decb
insl
insl
jne
dec
pop
lock
outsl
scas
frstor
dec
pop
or
inc
sbb
push
testl
jne
inc
and
inc
shll
push
ljmp
clc
loopne
xor
sbb
dec
les
adc
pushf
dec
orb
pop
cwtl
stc
jp
test
loope
adc
push
xor
je
movsb
or
es
xchg
dec
aas
push
mov
jmp
int3
pop
sti
push
jb
mov
das
cmc
sbb
pusha
fdivr
negl
dec
dec
push
fsubs
or
push
dec
sbb
xor
pop
hlt
cli
xchg
imul
or
out
andb
fnstcw
push
stos
push
inc
adc
mov
mov
mov
pop
outsl
push
xor
sarl
into
iret
test
jne
sbb
adc
in
add
mov
data16
add
xor
sub
repz
pop
shrl
mov
aad
pop
outsb
adc
cmp
mov
rcr
sub
add
jnp
mov
jae
cmc
out
xor
push
bound
lret
es
cs
sub
add
iret
xchg
sub
sub
inc
jecxz
aam
adc
lock
fsubrs
mov
cld
clc
and
cld
jl
mov
push
imul
cmpsl
and
adc
sbb
mov
pusha
popf
data16
dec
push
push
in
cmp
and
inc
js
jp
je
jbe
jo
jb
inc
ja
jnp
dec
outsb
dec
push
bound
incb
inc
sbb
mov
xchg
std
sub
inc
adc
cmpsl
push
call
data16
jmp
lds
lods
xchg
loope
movsl
movsb
mov
cmp
inc
repz
cmc
scas
mov
add
sub
mov
loop
das
mov
cmc
jle
inc
jo
stos
jecxz
dec
icebp
dec
and
mov
fdivp
pop
pop
clc
aad
jg
lds
pop
push
js
sub
sarl
fs
jb
jae
sub
cmp
aad
enter
outsb
jmp
shll
fs
popa
cld
jbe
gs
fs
lahf
pop
jb
add
xlat
sbb
gs
ja
pop
dec
inc
cmpb
aad
aam
outsl
sub
cmpsl
ret
and
sub
pop
inc
jg
ds
inc
jg
loopne
push
imul
out
outsb
mov
push
hlt
mov
inc
into
in
and
test
sbb
sbb
push
pop
lret
mov
fs
pop
push
fstl
int
iret
sub
mov
sub
leave
scas
loopne
cmp
call
jmp
jbe
inc
jmp
in
push
cs
aad
jb
dec
sub
or
xor
pop
pop
and
setae
stos
mov
iret
dec
sub
loopne
dec
jne
mov
xchg
test
mov
xchg
inc
jne
fcmovnb
inc
jne
leave
pop
dec
cmc
ret
lods
dec
xchg
xchg
sbb
aaa
xor
inc
xchg
outsl
cs
rclw
cmp
rolb
outsb
inc
movl
inc
add
adc
adc
movsl
xor
mov
sbb
sub
mov
sub
aam
xlat
inc
inc
push
push
xchg
push
cs
lds
shll
loope
test
repnz
outsl
movb
mov
cmp
cltd
lds
ret
lret
mov
adc
cmp
scas
cmp
cs
push
bound
sbb
mov
or
mov
mov
xor
loopne
inc
testl
xor
lods
xor
xchg
jb
and
arpl
imul
pop
dec
push
dec
push
push
insl
dec
fs
push
push
out
xor
ret
aad
dec
or
jmp
cmp
dec
push
je
fwait
mov
in
outsb
jno
sub
push
mov
xchg
ljmp
mov
jmp
jl
jnp
dec
sub
shrl
lcall
mov
push
sbb
fisubs
sbb
js
xchg
dec
dec
xchg
frstor
inc
lea
mov
inc
outsb
xor
pop
ljmp
sub
xchg
sub
push
cmp
pop
stos
adc
repz
dec
bound
movsl
flds
mov
jle
and
imul
and
inc
das
jp
or
add
cmpl
xchg
push
dec
idiv
enter
aad
mov
dec
sbb
nop
jmp
add
jecxz
jo
mov
popa
pop
mov
jbe
cmc
or
fdivrs
xchg
test
pop
fwait
aam
cmp
int3
testl
es
and
lcall
dec
push
or
inc
xor
imul
mov
outsb
andb
inc
xchg
gs
push
call
test
pop
inc
in
pushf
out
jno
pop
into
and
xor
imul
jg
lods
cwtl
mov
mov
inc
or
dec
les
pop
push
pop
cwtl
dec
xchg
jno
data16
ret
dec
ret
mov
fisubl
fmull
ror
std
cmp
push
jmp
lock
or
xchg
sbb
dec
es
lods
je
lcall
stc
pop
inc
lret
jp
outsl
adc
clc
dec
jg
mov
inc
jae
xchg
cltd
dec
xor
or
je
sbb
fwait
jmp
in
dec
xchg
std
in
mov
aas
dec
in
mov
enter
dec
pop
aas
loopne
adc
pop
xchg
rcrb
bound
js
xchg
imul
subb
sbb
test
jl
inc
fadds
clc
loopne
jp
shll
repz
and
out
pop
cwtl
clc
sti
pop
test
push
sub
lds
lret
pop
jmp
les
fwait
in
pushf
push
mov
push
and
stos
jo
call
sbb
dec
jg
cmp
js
dec
int
dec
addr16
sub
ja
bound
xchg
push
shll
std
out
mov
dec
outsl
test
dec
data16
cmc
data16
test
cmpb
fs
mov
or
add
pop
stos
pop
or
push
xor
pop
loope
popf
cmc
adc
out
mov
test
bound
sbb
sbb
or
cwtl
add
subb
ljmp
jecxz
xchg
sbb
inc
test
inc
sbb
adc
cmp
add
fsubrl
mov
aam
shlb
cmpsb
or
dec
mov
push
insl
pop
sbb
loopne
out
cmp
cmpsb
add
sbb
lods
loopne
push
lret
xor
sub
inc
out
aam
push
dec
js
test
inc
test
inc
dec
es
cs
dec
jecxz
test
cmp
jno
das
jo
sbb
pop
mov
adc
dec
cmp
decl
imul
xlat
loopne
push
imul
push
dec
dec
ja,pn
hlt
or
shlb
or
xchg
and
bnd
jg
inc
mov
bound
mulb
or
push
pop
mov
pushl
and
mov
sti
scas
xor
repnz
cmp
inc
ljmp
out
stos
push
pop
dec
outsl
xlat
jecxz
jg
pop
addr16
xchg
xchg
movsb
push
dec
push
pop
dec
sub
jecxz
dec
mov
and
push
fs
push
jmp
adc
sbb
add
fs
sbb
dec
les
push
inc
pop
mov
ficoms
iret
inc
gs
xchg
ja
movl
enter
xor
insl
cmc
xor
ljmp
pop
push
negb
mov
int3
pop
lret
in
sbb
aas
or
cwtl
jle
popa
loopne
mov
in
dec
sub
aas
lock
in
out
jp
add
dec
jne
sahf
jnp
push
fwait
push
dec
movsb
inc
sub
stos
jns
call
ret
lock
aad
mov
adc
adc
stos
ja
sbb
inc
dec
fisubrs
sahf
insb
out
cwtl
pop
in
jo
popf
test
out
add
mov
stc
add
pop
js
or
je
inc
adc
out
sbb
ss
dec
xchg
sbb
daa
and
cmp
loope
add
cld
or
cli
stc
push
test
and
jmp
test
imul
inc
mov
dec
movsb
loope
cmpl
jl
cwtl
lret
mov
data16
mov
cmp
test
out
xorl
fwait
into
hlt
es
out
push
lock
test
ljmp
sbb
mov
mov
addl
repnz
call
push
push
jg
dec
inc
scas
test
addr16
jg
inc
outsb
rorb
movsb
xchg
in
lds
mov
movq
and
adc
mov
popf
lret
ja
hlt
and
mov
testb
add
adc
dec
mov
pop
imul
or
push
push
and
dec
dec
mov
or
mov
movsb
dec
fs
dec
shrb
xor
pop
daa
mov
or
dec
iret
cld
inc
cld
sub
push
sti
pop
pop
nop
pop
in
or
rcll
std
movsb
push
mov
lods
out
push
loop
test
dec
dec
push
inc
and
sbb
arpl
mov
push
into
out
xlat
dec
push
dec
mov
cmp
xor
pop
push
mov
and
lcall
scas
and
adc
xor
dec
mov
sti
mov
shll
es
cmp
inc
data16
cmp
rcrl
cwtl
and
inc
lods
sub
jl
enter
insl
cmpsl
test
je
fs
loope
test
sbb
xchg
mov
mov
out
push
and
dec
clts
dec
sub
imul
lods
jp
dec
jle
dec
cmp
jl
testl
mov
sub
in
jg
jl
test
jge
dec
sbbl
sbb
ljmp
mov
add
out
lock
push
xchg
daa
mov
mov
imul
addr16
sub
dec
inc
cltd
cmpsb
rep
push
clc
push
sbb
push
movsl
jg
lods
popa
dec
pusha
pop
and
sub
dec
mov
leave
push
jmp
cmp
jmp
xor
shrl
cmpsb
arpl
push
inc
pop
aas
popf
dec
mov
out
ljmp
mov
repnz
ljmp
mov
stos
adc
loopne
dec
and
mov
or
outsl
nop
outsb
dec
jne
cs
stc
scas
adc
push
mov
mov
cmp
in
lds
mov
push
stos
jb
or
inc
scas
pop
out
sub
xchg
mov
popf
ja
lret
pop
xchg
xchg
inc
movsl
jl
push
test
mov
push
inc
xor
pop
ljmp
scas
sbbb
fmul
dec
cmpsb
inc
mov
push
push
int
pop
push
push
jecxz
sti
push
out
jg
adc
hlt
loop
lds
fcomps
cwtl
enter
sub
cmp
sbb
mov
lea
xchg
xchg
or
in
in
int3
bound
cwtl
or
xchg
popf
jnp
in
cmp
bound
aad
cmp
mov
es
stos
push
jb
aas
push
lods
in
insb
sbb
in
mov
in
sti
mov
js
fs
push
dec
mov
adc
stos
ljmp
fdivp
or
push
jmp
stc
inc
push
sbb
sub
loopne
xor
fstl
pop
je
cmp
and
dec
repz
push
pop
out
pop
out
cmc
mov
imul
mov
add
sbbb
cmp
add
pusha
lcall
fs
rolb
jbe
test
pop
roll
inc
xor
movsl
sbb
gs
jmp
cmp
das
sbb
xchg
dec
mov
push
jb
sub
ss
xor
shll
pop
jbe
pusha
and
sub
ds
jle
push
cmc
mov
data16
sbb
jmp
fs
lock
and
mov
in
in
test
ret
push
lcall
pop
enter
addr16
mov
sub
and
cmp
das
inc
xor
cmpl
or
mov
sbb
cltd
and
sbb
push
xchg
sbb
and
and
dec
int
cmp
jp,pt
inc
sub
cmp
into
cmp
xor
pop
xchg
pusha
out
mov
xor
or
sub
addr16
push
mov
iret
ljmp
sbb
mov
popa
push
xor
xor
fidivs
push
sub
mov
dec
adc
aam
scas
sub
mov
rcr
fmuls
es
jl
sub
lods
jnp
push
sub
cmpl
sti
sub
push
jmp
repnz
dec
mov
dec
lods
xor
popa
sbb
mov
scas
xor
push
inc
pushf
std
jbe
dec
mov
arpl
imul
cmp
pop
jmp
jle
cmp
imul
out
imul
cmp
mov
inc
ljmp
push
sub
outsb
aas
out
cmpsb
es
xor
cmp
clc
cmp
es
ja
data16
add
adc
mov
push
dec
mov
mov
imul
test
lods
test
add
pushf
xchg
jne
call
jp
add
pop
add
mov
cmp
int
mov
inc
mov
repz
xor
or
les
jns
fadds
mov
xchg
jae
cmp
add
mov
mov
mov
mov
insl
mov
xor
cmp
mov
pusha
fstpt
pop
inc
jae
push
pusha
mov
add
jl
nop
push
mov
ljmp
mov
add
subb
popa
xchg
lds
push
clc
cld
in
jbe
adc
sbbl
adc
scas
and
sbb
arpl
daa
dec
hlt
push
or
push
pop
ret
dec
hlt
jbe
dec
push
or
inc
in
aam
lds
daa
dec
jecxz
pop
push
dec
cmp
int3
outsb
loopne
cmp
xchg
mov
out
push
out
or
addr16
ds
pop
mov
xor
mov
dec
sub
push
ret
add
mov
ja
hlt
xchg
jge
jns
pop
sub
fsts
scas
jle
int
shrl
je
cltd
sub
inc
out
jecxz
lret
mov
cmp
add
stos
sub
xchg
push
mov
push
cli
aam
mov
push
imull
mov
xchg
les
adc
dec
add
aaa
or
sub
xchg
adc
js
inc
add
inc
mov
test
jp
or
push
xor
int3
out
pop
cli
aad
outsb
sub
in
andl
inc
aad
xchg
daa
jne
enter
sub
call
lods
or
sbb
int3
jp
outsl
pushl
cmc
mov
ret
pusha
pop
fcmovbe
mov
cmp
pop
xor
dec
into
dec
into
mov
mov
pusha
loope
ret
dec
add
repnz
mov
adc
fisubl
shlb
push
outsl
cmp
inc
mov
sub
push
fwait
lret
int3
or
imul
imul
jg
cmpsl
push
das
int3
movsb
push
and
push
ja
push
test
bswap
rolb
lds
mov
mov
stos
and
push
vpunpckhwd
add
imul
and
xor
pusha
or
ja
out
out
jg
addr16
mov
cmpsb
mov
push
push
fsubrl
in
xor
adc
or
sbb
shrl
cmpsl
out
mov
cs
pop
xchg
cmp
mov
push
sub
out
sahf
imul
pop
push
jne
inc
and
bound
pop
and
cwtl
arpl
cmpsl
test
bound
fildl
mov
shlb
test
xacquire
leave
add
es
shlb
stc
icebp
imul
sbb
mov
sub
addb
imul
xchg
cmp
jbe
insl
xor
popa
test
stos
mov
inc
pop
lods
cltd
mov
pop
call
mov
lret
pusha
pop
pop
mov
stos
cmp
sti
jae
sbb
pop
out
mov
inc
inc
sbb
movl
sbb
and
adc
decb
dec
je
ds
adc
lods
pop
pop
inc
jecxz
rolb
rorl
dec
ret
cwtl
push
out
push
mov
outsb
jbe
xchg
mov
adc
push
and
xor
out
and
adc
cmc
imul
loope
push
add
cs
mov
cli
adc
imul
dec
bound
lock
addr16
cmp
les
add
shr
sbb
xor
mov
mov
stos
push
ret
aas
scas
addr16
cmovp
add
fcoms
outsl
pusha
pop
leave
stos
adc
outsb
repnz
les
icebp
ja
pop
fistpl
cwtl
adc
das
out
popa
cld
jp
pop
js
xor
jo
sbb
out
imul
mov
loopne
lahf
movsl
call
xor
fwait
jle
loopne
lret
sti
jbe
ja
jmp
mov
fwait
mov
mov
jge
sbb
and
scas
pop
ljmp
outsl
sarw
ljmp
js
mov
mull
xlat
cmc
les
jmp
fwait
jno
js
dec
mov
frstor
add
jmp
adc
mov
mov
les
add
imul
out
lods
test
fs
pop
outsb
dec
imul
adc
daa
cltd
cwtl
pop
mov
std
out
aaa
xchg
mov
int3
push
dec
leave
push
add
fisttpll
adcb
sub
pavgw
mov
mov
lret
mov
loop
cmpsb
push
push
fmull
lock
and
dec
test
sbb
push
data16
arpl
pop
sbb
pop
sbb
outsb
sub
sbb
pusha
push
loopne
add
stc
es
into
jb
dec
iret
imul
push
dec
into
stos
or
lcall
ss
xchg
fbld
js
and
push
jo
inc
fldenv
push
cmpsl
arpl
sub
stc
leave
cmp
mov
ret
arpl
or
mov
or
jmp
inc
cmp
mov
jbe
mov
pop
push
jl
push
cld
or
and
dec
sbb
cwtl
in
xchg
stc
cmp
mov
fs
and
and
dec
aas
call
mov
pop
and
adc
lea
xor
add
sbb
xor
ss
sti
jmp
jecxz
dec
in
data16
arpl
movsb
cwtl
adc
das
arpl
add
lods
lcall
jl
mulb
sbb
outsl
jl
xor
in
imul
out
lock
fs
mov
jmp
add
mov
adc
loop
xchg
in
lods
xchg
sub
adc
aas
lds
inc
out
sub
repz
and
popa
dec
into
jecxz
movsl
in
ds
enter
lret
jg
pusha
mov
or
jle
pop
mov
mov
mov
in
or
mov
lret
adc
mov
test
fildll
push
push
jns
jl
lds
je
sub
leave
push
mov
cmpl
lret
jo
lock
rcrl
dec
and
add
push
mov
mov
shll
dec
sub
push
mov
mov
xchg
out
test
cmc
jnp
push
cmpsb
ja
leave
cmp
enter
insb
dec
jmp
les
inc
loope
inc
outsl
push
jmp
jo
inc
dec
fs
stc
push
repnz
jle
jae
cld
cwtl
add
jmp
inc
and
je
sti
cltd
mov
jb
mov
shlb
inc
mov
cld
out
xchg
imul
cmp
test
aad
es
cmp
adcl
mov
imul
push
or
clc
jge
pop
clc
loop
jbe
psrad
xor
loope
add
scas
pop
dec
lods
ds
lret
cmc
scas
mov
out
sub
in
cs
jo
clc
leave
mov
nop
leave
and
hlt
je
adc
loope,pn
sbb
push
push
jp
dec
call
popa
xor
jg
jo
mov
mov
adc
testb
notl
mov
mov
ss
lods
xchg
jmp
repz
jbe
xor
dec
scas
loopne
push
js
aaa
cltd
pop
inc
roll
ret
push
sub
js
inc
lret
dec
xchg
push
jae
adc
mov
mov
out
mov
ffree
cmp
jbe
xchg
push
jmp
loope
xor
mov
jecxz
aaa
lock
sbb
minps
push
lock
jmp
out
xor
outsl
fwait
jnp
call
out
fldcw
into
fwait
xor
pop
out
iret
inc
dec
jnp
imul
mov
fs
psrad
out
notb
arpl
or
inc
mull
jp
add
leave
cmp
data16
cwtl
int3
and
cs
iret
inc
sbb
add
cwtl
call
int3
pop
or
daa
out
cwtl
movsl
pop
cmp
add
lret
jae
mov
lahf
lods
mov
mov
jmp
jb
bound
xor
pop
sbb
inc
push
cltd
mov
std
pusha
ds
pop
mov
jl
mov
inc
jbe
addr16
loope
fisttpll
in
dec
addr16
xor
jae
jbe
sub
jnp
aas
pushw
cs
xor
push
dec
push
test
xchg
shll
es
cli
inc
insb
dec
sub
and
cltd
inc
sub
iret
mov
inc
nop
test
popf
outsl
and
test
push
mov
imul
mov
das
leave
pop
loope
outsl
pop
dec
das
sub
jno
add
dec
je
sub
mulb
or
add
xor
out
inc
jl
stos
bound
mov
loopne
imul
ss
data16
das
pop
les
mov
test
js
cmpsl
xchg
stos
es
mov
inc
push
jbe
mov
cld
cwtl
mov
les
dec
repz
cwtl
out
pop
mov
hlt
sub
sbb
push
jbe,pn
das
inc
bound
or
je
out
mov
movsl
inc
xor
lods
mov
xchg
pop
push
xor
std
ret
cmp
int
lock
and
jnp
cmc
and
les
jo
cs
inc
rcll
daa
lods
mov
cwtl
xor
xchg
xchg
dec
popa
pop
push
xor
xchg
out
movsl
and
pop
cmp
lret
jbe
push
jno
dec
scas
ret
adc
ror
cmp
sbb
push
cs
mov
fwait
push
jne
push
nop
repnz
mov
push
lods
cmc
jb
and
inc
scas
and
jg
mov
inc
push
clc
mul
adc
sub
xor
fs
daa
jp
jg
jg
xor
leave
repnz
dec
add
mov
dec
inc
enter
lret
pop
inc
inc
iret
les
mov
ds
jle
push
icebp
jmp
sub
and
adc
dec
inc
mov
sbb
add
std
imul
jae
add
lcall
dec
stos
cli
add
movsb
fs
dec
inc
jmp
dec
ret
mov
mov
ror
jbe
mov
pop
xor
cmp
push
outsb
mov
popf
sbbb
adc
push
mov
add
loop
mov
push
jecxz
clc
adc
shll
scas
sahf
push
pop
fmuls
mov
int3
jbe
movsb
call
jg
jl
dec
dec
fldcw
enter
sub
dec
das
pop
mov
sbb
mov
cmc
negl
stc
js
std
inc
mov
insl
push
jl
int3
gs
mov
fdivrp
inc
ja
out
add
fcompl
xchg
mov
pop
addr16
repz
pop
mov
mov
inc
jp
mov
mov
push
or
cmp
int
js
dec
outsl
fs
fldl
test
int
adc
push
pop
xchg
sahf
sti
and
incl
dec
xchg
ss
jae
sysenter
outsl
dec
push
push
and
mov
pop
cmpsb
pop
fs
dec
lret
inc
imul
je
inc
out
adc
test
mov
inc
pop
scas
aas
fs
add
push
sbbl
lods
xor
cmp
mov
pop
sarb
bound
rcrb
sbb
into
sub
or
push
jae
add
clc
stos
mov
mov
in
jge
cmpsb
and
lds
sahf
insb
dec
repz
pushf
punpckldq
test
pop
in
mov
test
xor
pop
or
lds
mov
out
out
ss
adc
jl
pop
or
shrb
sub
dec
in
dec
adc
jmp
fcomps
mov
imul
mov
cld
mov
xor
ficompl
jae
std
addr16
xchg
test
and
test
stos
test
sbb
adc
or
or
out
in
adc
jmp
sbb
es
mov
push
js
mov
xchg
test
mov
mov
jnp
lods
jmp
push
popf
mov
jl
push
xchg
test
bound
pop
or
cmc
xchg
mov
dec
adc
movsl
xchg
imul
pop
jmp
sbb
adc
xchg
or
sub
ja
jp
outsb
movsb
sahf
jl
mov
aas
inc
adc
bound
pop
xchg
jmp
stos
inc
adc
stos
inc
cli
push
sbb
lods
pop
xchg
imul
int3
push
sbbb
sbb
ljmp
push
repz
push
pop
sub
jb
shrb
sar
inc
movsb
roll
push
test
sub
dec
lret
mov
inc
cmp
sti
mov
or
rolb
call
jle
dec
jo
inc
hlt
in
mov
icebp
mov
sbb
jecxz
pop
mov
push
popf
inc
test
sbb
pop
je
push
adc
xchg
pop
or
pop
pop
inc
js
int3
lods
nop
and
and
insl
cs
clc
xchg
push
jnp
fwait
xor
mov
sti
stc
pop
scas
xchg
dec
dec
dec
mov
adc
push
dec
je
inc
sub
outsl
mov
mov
dec
nop
adc
and
mov
addb
fidivl
enter
mov
bound
cmp
xorb
fcmovnb
dec
nop
cmp
out
pop
loope
je
test
and
dec
test
adc
bound
sub
push
jl
jo
jb
mov
mov
aas
shl
sbb
mov
ss
jo
jae
mov
fsubl
cmp
adc
cld
adc
fndisi(8087
enter
lcall
cmp
jl
loope
sbb
adcb
cbtw
and
bound
jl
mov
dec
jb
jbe
addr16
jae
mov
int3
popa
test
or
mov
dec
ja
or
pop
sub
sbb
subl
insl
adc
pop
and
adc
aaa
xchg
jne
jns
push
and
dec
or
stc
dec
and
pop
popf
int
sbb
out
in
inc
sbb
lahf
sbb
pop
or
dec
fs
sub
jmp
shrl
adc
subb
xor
int
mov
jmp
push
popf
stos
jns
lea
mov
sub
fimull
mov
cmp
and
mov
dec
push
inc
cs
mov
flds
mov
jns
stos
nopl
mov
pop
push
test
pop
jg
test
imul
cwtl
xor
sbbl
lret
fcoml
in
outsl
std
push
fistpll
test
or
jg
outsl
cmp
mov
cmp
sub
adc
sbb
or
in
popa
pop
dec
pusha
lcall
fistpll
pop
jmp
bound
sub
dec
jbe
mov
popa
add
sti
aaa
leave
lea
pop
mov
jmp
sahf
adc
std
pop
and
or
mov
shrb
roll
push
add
sub
cmp
hlt
out
jmp
pop
out
cld
cld
pop
cmp
inc
pushf
dec
mov
lods
xorl
mov
out
mov
sub
ret
cmp
dec
test
pop
bsf
fs
jg
rol
or
icebp
cmp
cli
mov
addr16
popf
jbe
jmp
sub
sbb
pop
call
test
clc
cmp
enter
ficomps
lcall
scas
les
mov
jmp
minps
jb
iret
cld
fs
imulb
int
pop
mov
bound
loop
mov
inc
mov
iret
xor
dec
nop
and
sub
int3
std
ret
imul
adc
pop
dec
dec
xchg
movsb
add
xchg
push
nop
int3
cmp
iret
adc
popf
stc
inc
dec
dec
add
mov
test
jo,pt
mov
adc
jmp
ja
pusha
xchg
xchg
sbb
cld
insl
outsb
mov
stos
shll
gs
xor
subb
jmp
outsb
mov
inc
push
add
out
fnstsw
add
ja
dec
test
dec
js
push
sub
addr16
jge
ds
mov
jp
cmpsl
jnp
rorl
or
push
xor
cli
push
push
xchg
dec
outsl
pop
push
shrl
mov
je
dec
inc
into
scas
dec
or
daa
xchg
lret
cmp
icebp
test
inc
mov
mov
cmpsb
daa
pop
push
dec
lods
cld
push
inc
inc
push
pop
pop
push
insl
dec
cmc
mov
xor
jae,pn
sbb
push
insl
mov
imul
mov
xchg
cmp
pop
leave
jns
loop
jge
dec
xchg
add
js
enter
mov
outsl
enter
aad
inc
sbb
ret
jle
mov
dec
and
push
loope
push
into
mov
adc
pop
pop
mov
push
stos
mov
and
cmp
sarb
cmp
jae
inc
scas
sbb
ljmp
test
mov
pop
push
xchg
cltd
pushf
fists
ss
outsb
out
push
call
xchg
jg
fisubrs
dec
fsubl
pop
dec
pop
test
cmc
fldcw
dec
pop
movsb
mov
mov
test
in
add
pop
scas
nop
cwtl
add
pop
into
pop
js,pt
bound
mov
push
fdivr
test
in
inc
into
dec
or
push
stos
jo
mov
mov
sbb
xchg
clc
xchg
cli
fnsave
mov
clc
pop
loope
push
dec
inc
cld
push
cltd
sub
shrb
loopne
sahf
sub
addr16
pop
sub
mov
stos
fisubs
pop
lods
sbb
push
dec
clc
sub
jb
and
cld
cmp
ds
cmp
add
outsl
loopne
and
xor
dec
movsb
push
jg
dec
adc
dec
fdiv
test
addr16
dec
mov
mov
dec
lcall
addr16
sahf
jl
mov
push
mov
mov
mov
cmp
ret
ds
test
lea
sub
lods
adc
ret
sbb
and
pop
mov
inc
lea
sbb
push
xor
aad
cmp
sbb
and
jbe
iret
push
and
cs
stc
mov
fs
aas
outsb
lcall
push
sub
dec
scas
push
or
sbb
ud0
into
dec
ja
outsl
rcll
out
in
int
sbb
fwait
idiv
mov
test
adc
fwait
and
pushf
jnp
sbb
jb
cmp
inc
dec
out
cld
xchg
push
adc
mov
lods
hlt
mov
jl
mov
add
insl
fs
shll
iret
pop
push
xor
pop
fs
pop
cmp
data16
jge
adc
movsb
xor
mov
add
aaa
mov
cmc
popa
popa
sbb
xor
and
in
data16
in
push
js
fisttps
mov
inc
das
jo
imul
jle
or
fwait
les
sub
push
insb
rcl
movsl
sub
jnp
test
mov
pop
mov
push
lods
fs
sub
lds
in
test
jo
inc
add
xlat
test
stos
mov
adc
aas
stc
mov
pop
shll
rol
ficompl
out
sbb
inc
fwait
outsb
fwait
mov
bound
outsl
aam
aas
push
mov
stc
stos
aam
rorl
cld
push
cmpsb
and
pushf
xchg
xor
pop
and
cmp
mov
add
mov
cld
push
push
insb
dec
ss
nop
fistpll
ret
push
cmp
push
les
inc
push
insb
adc
fstps
test
pop
fdivrs
inc
mov
mov
mov
js
jbe
out
mov
cld
cmp
ss
xor
pop
adc
cwtl
stos
dec
fadds
dec
pop
lahf
add
mull
out
pop
in
outsb
pop
insb
imul
xchg
add
mov
pop
sub
or
inc
outsl
outsb
out
outsl
out
scas
inc
aas
test
inc
es
negl
call
mov
push
dec
cmp
sub
test
push
loopne
ja
jnp
cli
push
arpl
mov
pop
push
jbe
dec
pop
push
xor
inc
pop
imul
pop
cmp
mov
enter
arpl
roll
popa
inc
stos
and
and
jo
add
xchg
mov
mov
aam
and
jnp
or
dec
movsb
dec
jg
adc
push
cs
out
loope
jo
in
pop
push
sbb
xchg
cmp
xchg
cltd
outsl
pmulhuw
stos
jle
imul
push
add
adc
inc
mov
call
and
int
sub
in
dec
scas
and
loopne
push
test
dec
dec
push
push
or
in
ss
cmp
popa
jge
xchg
inc
xchg
push
mov
push
repz
out
mov
cmc
push
lds
loopne
or
push
or
pop
fiadds
add
pusha
mov
cmpsb
xchg
addb
icebp
jge
jl
imul
mov
push
out
or
pusha
popa
stos
nop
xchg
cli
jecxz,pt
jno
xchg
or
push
mov
stos
cmpsb
mov
sub
push
jo
jl
or
loope
ds
inc
lods
adc
sbb
cs
outsb
in
mov
push
or
cwtl
lock
out
in
add
adcb
fildl
inc
jl
adc
inc
cld
lock
jle
pop
add
shrb
add
adc
dec
mov
ljmp
fdiv
pop
out
popa
fistl
cwtl
and
repz
cmc
nop
test
idivb
cmc
add
fsubl
repz
inc
lock
xchg
jbe
sub
mov
xchg
out
mov
jo
inc
push
pop
je
mov
movsb
int
mov
sar
or
je
pushl
es
xchg
ljmp
inc
pop
outsb
imul
out
dec
nop
addr16
mov
sub
xor
repz
addr16
test
hlt
jle
dec
ljmp
aaa
xchg
into
inc
ds
mov
inc
inc
mov
and
inc
clc
pop
stos
lock
hlt
es
sbb
inc
cs
xor
in
pushf
sbb
pop
jmp
sbb
xchg
mov
and
stc
rcrl
lds
test
sub
cld
lods
add
push
call
outsl
pop
sbb
andb
adc
repnz
mov
into
sbb
xchg
mov
test
shr
test
jne
jp
pop
mov
dec
mov
lret
jg
sub
lock
dec
daa
xor
negl
jle
dec
and
jbe
dec
inc
jg
out
in
xor
movsb
insl
inc
mov
add
xor
sbb
dec
pop
xchg
xchg
test
rol
lret
mov
les
xor
cmpsl
mov
in
cld
push
les
push
sti
dec
aas
push
in
sub
dec
inc
lcall
mov
mov
call
adc
sub
cmp
inc
sti
mov
inc
sub
inc
and
sbb
and
pushf
loope
dec
pop
int
or
lret
jg
dec
jp
sub
inc
int
pop
out
mov
pop
inc
or
ret
gs
push
adc
push
addb
jl
xchg
stos
xor
repz
lock
add
test
test
inc
pop
mov
mov
jg
xchg
push
test
sub
lock
xchg
sub
inc
out
and
fbld
inc
mov
xchg
pop
push
jecxz
cwtl
pushf
clc
jg
and
pop
xchg
clc
daa
inc
mov
sti
mov
cmovno
and
jmp
sub
into
mov
jle
jns
jb
mov
inc
or
push
push
int3
outsb
sbb
pusha
call
add
mov
or
data16
jecxz
cmpsb
mov
jno
mov
shl
xor
push
inc
pop
inc
popf
call
dec
ljmp
lods
shll
add
inc
stos
int3
inc
mov
sti
inc
sub
arpl
out
fimuls
adc
jmp
mov
adc
jg
aam
push
ja
and
xchg
pop
stos
daa
inc
dec
dec
jb
or
pop
pop
pop
imul
call
out
mov
mov
jno
sbb
jb
lea
std
push
ds
ds
jb
inc
push
pop
fisttpl
scas
pop
jg
dec
sub
jmp
dec
ss
nop
pop
test
out
aad
xor
data16
loop
cmp
inc
fs
ljmp
testl
push
jb
lret
shrl
mov
insb
inc
inc
adc
push
stos
pop
lock
je
mov
cwtl
mov
les
je
mov
aas
notl
fimull
fldl
pop
fdivrp
jbe
leave
popa
push
stc
jl
lea
adc
lret
mov
push
stos
push
ret
outsl
stos
into
addb
sub
inc
inc
mov
cmp
mov
mov
jle
cwtl
mov
fidivs
and
and
xor
cmpsl
out
push
pop
jno
jmp
or
shlb
xchg
in
push
cmp
mov
pop
pop
in
ror
jmp
adc
inc
inc
push
fs
mov
mov
stos
addb
inc
cld
out
pop
das
in
push
push
test
lds
xchg
pop
jmp
pushf
and
cs
ficomps
stc
push
or
pop
cmpsb
mov
or
imul
sub
xor
out
idivb
cmp
loope
mov
and
jp
test
dec
sub
dec
in
loope
loopne
fs
jp
jmp
jbe
in
mov
jp
divl
cld
inc
mov
mov
inc
addl
xor
dec
ret
nop
test
dec
callw
sbb
pop
stos
les
test
push
dec
or
js
cmp
xchg
std
adc
dec
popf
pop
mov
jge
das
loopne
mov
bound
xor
jl
cmp
loop
lods
cwtl
pop
cmp
or
and
or
jmp
mov
push
pop
mov
rcr
movsl
test
dec
push
cmp
stos
lret
or
test
mov
movsb
sub
push
lret
out
sbb
inc
lahf
sti
mov
xchg
test
je
inc
and
fs
into
jl
cwtl
das
mov
test
dec
jg
cmpsb
fs
push
or
loopne
sti
cld
inc
pop
stos
or
bound
mov
sti
pop
jno
jne
xor
inc
sahf
adc
testb
rol
popf
add
fs
test
dec
jnp
addr16
inc
aam
fildll
stos
iret
dec
inc
sub
cmp
hlt
les
push
adc
in
push
loopne
dec
ljmp
dec
loop
lock
dec
mov
fwait
nop
cmp
outsl
jns
cmp
movsl
js
mov
je
jp
add
sarb
cmp
add
outsl
fadds
pop
cld
jne
sub
enter
and
jmp
fwait
enter
mov
sbb
cs
loope
cmp
clc
dec
cmpl
bound
pusha
sub
sbb
popa
push
lds
push
cmc
imul
gs
es
imul
dec
dec
inc
out
mull
test
xchg
jp
and
push
jl
out
sbb
and
inc
in
push
xchg
mov
invd
adc
adc
and
inc
inc
daa
mov
add
test
cli
cmp
fidivrs
sti
xchg
push
xchg
cmp
stc
je
jbe
sbb
sti
mov
aaa
fwait
pop
dec
addr16
mov
fwait
or
inc
or
sbb
int3
stos
outsb
inc
fdivr
dec
test
enter
push
jo
in
mov
call
pop
inc
xchg
pop
lret
daa
fidivl
clc
jp
scas
int3
sbb
sub
mov
std
aas
pusha
mov
xchg
mov
cld
es
pop
cmpsl
fdiv
fwait
in
adc
aam
daa
mov
inc
cmp
jecxz
testl
dec
insb
icebp
inc
jecxz
push
xchg
sub
xchg
out
pop
aas
js
push
jmp
cwtl
or
test
push
xor
xor
pop
das
outsl
xchg
test
inc
ret
jnp
add
adc
sti
xchg
in
ss
jg
bound
xchg
leave
out
cmp
addr16
cmp
jg
dec
in
in
fwait
pop
pop
nop
out
mov
mov
adc
sub
ret
pusha
sub
ja
adc
ja
sbb
es
pop
pop
jp
pop
fsubrl
cmpsb
pop
push
into
outsl
jbe
ja
stos
dec
movsl
add
call
shlb
lock
mov
or
loop
and
mov
inc
dec
or
stc
sbb
lods
jnp
and
out
imul
mov
and
push
test
xor
lret
filds
or
aam
or
pushf
in
jo
dec
es
cld
or
outsb
and
pop
aam
das
outsl
push
sti
leave
insb
dec
ret
xchg
push
and
mov
xchg
cmc
sub
inc
add
pop
push
data16
shrb
and
push
sbb
inc
push
sbb
aad
pop
pop
in
daa
ljmp
insl
pop
popa
cltd
jecxz
adc
push
popw
jns
fs
cwtl
push
mov
push
inc
mov
ss
adc
in
dec
cmp
push
inc
xchg
fistps
jo
push
add
rorb
inc
pop
add
push
test
mov
lea
mov
xlat
cmp
test
and
add
pop
stos
sbb
push
push
sbb
mov
sub
push
sbb
ret
mov
outsb
out
cmpsb
loope
inc
dec
jg
dec
sbb
push
inc
jno
out
jmp
and
xor
mov
cmp
xor
addr16
push
jbe
mov
call
loopne
jp
out
dec
jge
push
dec
xchg
jmp
or
sub
mov
push
sub
cmp
pop
jge
fnstsw
pop
add
mov
dec
xchg
imul
add
rorb
mov
sti
push
add
xchg
xchg
aam
push
mov
clc
int
enter
push
or
dec
jle
aad
adc
sub
cli
xchg
cltd
in
movsb
ret
sub
loopne
push
data16
dec
dec
insl
sbb
mov
pop
or
insl
enter
jge
cli
sub
pop
and
add
xchg
jne
inc
bnd
pop
add
cs
test
call
dec
sub
fs
push
push
and
fcmovb
test
call
cmovs
cmp
inc
addr16
cld
pop
cwtl
inc
mov
es
test
aad
lret
sbb
loop
js
std
sbb
adc
scas
pop
inc
push
mov
andb
mov
out
pushl
insl
sbb
push
or
inc
lock
movsb
cltd
rorl
pop
jns
test
sub
test
iret
inc
pushl
cmpsb
cmpsb
mov
pushf
xchg
and
sbb
ror
and
add
pop
cmp
je
pop
fs
cmp
pop
test
and
jae
es
shrl
mov
xor
push
pop
cld
or
push
cli
push
jp
push
jle
divb
les
inc
cs
popa
sbb
cmp
enter
jl
movsl
inc
mov
rclb
mov
push
loope
outsb
sbb
mov
decl
jle
scas
pop
and
int
add
in
xor
fisubl
movsb
lds
mov
sub
test
enter
cmp
aaa
imul
shll
cs
sbb
lock
push
insb
mov
js
xor
std
adcl
dec
pop
inc
dec
or
in
pop
mov
pop
lods
pop
popa
cs
lret
xor
mov
mov
repnz
mov
stos
rcll
hlt
mov
xchg
mov
pop
popf
push
pop
divb
jle
outsb
insb
lret
inc
push
sub
adc
xchg
push
jge
jl
mov
push
pop
push
andl
sbb
stc
inc
idivl
out
movsb
xchg
cmp
mov
jg
mov
xchg
or
test
out
sahf
push
js
jl
push
inc
lock
stos
push
pusha
jo
iret
mov
jl
cld
pop
mov
mov
inc
fcmovne
js
sbb
adc
adc
pop
or
pushf
fbstp
mov
dec
ret
sub
je
mov
sbb
add
push
lcall
jmp
mov
and
inc
mov
xor
pop
sub
ret
and
pop
and
jb
jo
cmc
push
push
push
stc
mov
inc
mov
or
xchg
pop
fwait
ljmp
ja
outsl
ja
hlt
outsb
jmp
push
push
cs
sbb
or
pop
movsb
mov
add
inc
push
into
cmp
adc
sbb
cmp
bound
shr
ds
jmp
aad
cmp
dec
das
lea
pop
xchg
fs
hlt
lds
push
lods
leave
bound
fs
push
add
push
les
sub
xchg
jmp
dec
inc
addl
mov
out
cld
jl
in
jbe
inc
push
fcompl
sbb
xchg
in
inc
sarl
jmp
adc
xchg
out
inc
lcall
sbb
mov
loope
and
sbb
inc
movb
add
inc
inc
add
ja
cmp
inc
cld
stos
push
and
cld
dec
pop
inc
cmpsl
xor
lret
stos
sub
cmpsl
pop
mov
ret
aas
outsb
mov
sub
ret
ret
jo
in
mov
inc
in
int3
jle
cltd
jmp
pop
icebp
les
push
dec
aad
sbb
xor
xor
fidivs
stos
pop
dec
inc
stc
jnp
sub
into
es
jns
sti
push
repz
jnp
jle
inc
xor
sbb
mov
inc
outsl
inc
aaa
pop
in
addr16
arpl
fildl
pushl
push
iret
cld
xlat
cli
push
cmp
ret
daa
outsb
fldz
push
paddb
int3
fcmovne
mov
jmp
lods
pop
xchg
xlat
je
js,pn
mov
lahf
lret
xchg
jns
es
and
lods
lret
cmpxchg
push
lods
and
xchg
fcmovbe
pop
cmc
rorb
jp
pop
scas
fs
mov
call
or
stc
movsb
jo
mov
lea
xor
mov
stos
and
lret
insl
sbb
sbb
ret
dec
xor
loope
out
sbb
pop
aad
cmp
stos
pop
and
sbb
out
in
sbb
cmp
inc
addr16
insl
xor
lds
ja
test
jb
lds
dec
dec
push
mov
cmpsb
scas
enter
jbe
inc
outsl
mov
adc
mov
in
adc
cmp
inc
ss
pop
xor
stos
jnp
inc
mov
adc
js
adc
inc
xor
js
in
test
bound
inc
in
inc
ja
rorb
mov
pushf
dec
shrl
mov
movsb
pop
data16
ljmp
mov
popa
cmp
mov
fbld
xchg
sbb
push
mov
mov
sbb
mov
sub
repz
pop
and
andb
cmp
es
and
jp
sbb
sbb
push
dec
jnp
cld
and
cmp
or
inc
lods
fists
push
stos
test
stc
test
inc
inc
sub
push
inc
int
adc
aam
pop
lock
jnp
outsb
outsl
sbb
mov
xor
aas
js
outsb
stc
test
or
mov
dec
arpl
cmp
in
pop
inc
xor
pushf
push
or
orb
jp
adc
sbb
push
push
xor
cwtl
repz
inc
mov
cmp
add
push
cltd
adc
jns
cld
adc
inc
pop
notl
outsb
push
outsb
icebp
pop
push
inc
cmp
ja
addr16
jo
test
fcomps
ja
daa
out
nop
jnp
lods
xchg
je
push
jo
cmc
xchg
pop
xchg
push
mov
push
or
bound
xor
xor
stos
les
aad
out
push
mov
scas
inc
jmp
mov
push
inc
scas
xor
pop
mov
push
pusha
out
or
out
dec
sbb
call
fildll
jg
or
insl
loopne
fildll
jl
bound
int
das
dec
cwtl
sub
mov
xor
data16
sub
inc
dec
or
incb
mov
ret
js
call
dec
sbb
mov
inc
js
stos
mov
mov
dec
mov
das
adc
dec
inc
call
hlt
pop
loope
lds
cld
push
mov
jno
lcall
adc
call
dec
pop
sbb
dec
fdivrl
nop
scas
dec
test
aaa
push
xor
push
xchg
jle
mov
and
pop
arpl
dec
pusha
bound
jns
out
jbe
or
js
jp
sub
je
fidivl
jo
sub
cltd
push
enter
and
cld
cwtl
andl
jmp
outsl
sub
pop
test
cltd
add
or
add
cmp
test
popa
data16
loopne
push
cld
xor
jl
mov
loopne
push
jg
arpl
jle
loope
pop
cmp
shll
jle
lahf
mov
addr16
test
sub
test
push
mov
push
push
xchg
cmp
xchg
inc
jle
data16
lret
clc
or
iret
jo
jl
nopl
mov
and
xor
test
fisttpl
xchg
cld
fnsave
mov
iret
pop
lock
aam
outsl
lret
inc
movsl
subl
xor
lds
inc
pop
dec
stos
enter
sti
aad
mov
out
fcompl
int3
xchg
xchg
fimull
sub
push
adc
push
test
ficoml
push
sti
stc
mov
cmp
call
pop
adc
data16
push
mov
add
jae
hlt
fs
pop
inc
mov
pop
jl
push
imul
das
push
lret
lods
popf
jle
dec
mov
popf
jb
inc
mov
jo
pop
adc
or
aaa
or
inc
jg
mov
inc
dec
push
jno
les
test
pop
addr16
imul
stos
bt
push
xor
pop
shll
lods
jge
pop
pop
mov
and
add
mov
or
mov
pop
mov
inc
add
loop
lds
dec
inc
out
add
icebp
stc
dec
pop
pcmpgtd
daa
jno
cld
or
inc
cmp
lcall
pop
incb
pop
jmp
mov
sbb
xchg
mov
inc
popa
jns
loop
les
dec
cmp
push
shll
and
int
aam
out
jl
pusha
or
jl
loop
add
xorl
movb
scas
jmp
cmc
test
fs
cmp
mov
inc
shl
sub
inc
test
dec
sbb
add
or
mov
xchg
mulb
in
xchg
dec
in
mov
lds
push
lret
and
lock
iret
adc
sub
sbb
adc
mov
outsb
inc
lock
dec
push
icebp
aad
cmp
ljmp
jns
iret
jmp
jmp
lret
dec
fstpl
addl
call
bound
mov
inc
arpl
dec
ds
jl
push
lret
int
cmp
adc
inc
leave
sti
test
clc
hlt
inc
repnz
ds
jle
dec
inc
fwait
testb
cld
xor
jle
and
test
lock
roll
dec
out
stos
xlat
push
cld
ja
rcll
psubusw
jle
jp
sub
popa
mov
fldcw
sbb
sti
enter
jg
int
aaa
call
adc
mov
inc
push
dec
inc
pop
hlt
inc
inc
inc
push
add
jl
ret
orl
pop
cmpsl
lea
adc
lea
jl
or
cmpsl
pop
mov
push
ret
clc
dec
mov
sti
dec
rcrb
scas
adc
pop
sub
sub
into
jl
jle
pop
dec
xchg
daa
adc
pusha
cmp
clc
iret
or
fisubrl
pop
out
dec
mov
imul
lods
pop
bound
ds
pop
addr16
sarb
adc
jnp
mov
pop
lret
loop
push
dec
mov
push
ret
sahf
sbb
les
dec
jb
inc
dec
negl
inc
bound
rclb
in
push
xor
mov
bound
jmp
inc
ss
xor
xor
pop
addr16
adc
cmp
sti
or
pop
mov
pop
test
hlt
bound
aam
call
test
addr16
jg
mov
movsb
inc
jg
mov
lods
pop
sbb
loope
cwtl
push
imul
lret
pop
or
imul
push
pop
cmc
mov
inc
f2xm1
stos
sub
mov
push
dec
and
jp
pop
push
int3
jo
dec
mov
outsl
inc
lret
push
sbb
into
repz
stc
pusha
adc
jo
jb
push
mov
mov
inc
jl
dec
push
adc
clc
das
inc
inc
dec
nop
aas
aam
jl
cld
aad
fs
push
gs
lahf
stos
pop
sarb
jns
cmc
pop
adc
sbb
lods
fadds
jb
cwtl
xchg
movl
psraw
js
push
and
outsl
mov
jl
sub
fldcw
push
leave
sub
fldcw
push
and
fwait
outsl
mov
sbb
lret
jae
sub
dec
inc
idivl
xor
test
rcr
sarb
lea
out
mov
inc
int
mov
mov
push
js
sub
adc
adc
test
es
insl
dec
mov
push
mov
and
pop
mov
pop
scas
sbb
pop
test
push
popa
test
test
divb
enter
fwait
imul
out
stos
sub
pusha
ljmp
mov
sbbb
sub
jl
cmp
lods
popf
and
popf
xchg
out
loope
push
popa
cmp
pop
ljmp
or
mov
dec
cmpsb
pop
shrl
cmp
mov
roll
push
jge
pop
call
or
bnd
push
int
call
jnp
dec
lcall
add
les
popa
ret
dec
icebp
sbb
mov
mov
push
orl
nop
mov
xor
gs
std
dec
sbb
in
test
call
mov
mov
jle
jg
rol
inc
fidivs
pop
xor
cmpsb
lcall
push
push
xchg
sbb
dec
mov
fmuls
nop
inc
leave
clc
add
insb
cli
mov
dec
outsl
cmp
in
outsb
inc
out
and
out
sub
inc
fwait
lahf
stc
movl
inc
outsb
movsl
inc
pop
mov
movsb
lods
les
inc
mov
pushf
jl
call
sbb
andb
or
push
call
dec
xor
pop
push
leave
nop
mov
xor
in
shlb
pop
xchg
pop
scas
lret
je,pn
sti
jmp
sbb
sub
adc
into
jbe
fistl
mov
in
jl
movsb
and
or
and
popa
ljmp
pusha
out
popf
fldcw
inc
cmc
call
cmp
adcl
jl
lds
je
jle
pusha
or
pop
xchg
daa
add
jl
xchg
aas
gs
cli
push
out
xchg
sub
jp
mov
and
mov
xchg
call
push
inc
jnp
fsubs
mov
nop
or
mov
mov
jp
lods
lods
xor
repnz
push
or
inc
scas
out
sbb
in
jne
jnp
scas
into
out
cmp
sbb
push
movsl
in
aam
mov
jbe
rol
aam
mov
xchg
jg
sbb
jo
test
dec
addr16
xchg
sub
bound
sarl
xchg
lret
push
and
jl
mov
stos
push
sub
sub
jns
inc
es
add
jb
aas
aaa
pop
cli
push
std
movsl
inc
test
lods
jns
fsubl
arpl
movsl
jle
popf
mov
insb
movsb
out
mov
jnp
imul
fstl
hlt
mov
cli
cmp
fcmovnu
stos
mov
movsb
sub
outsl
adc
xchg
faddl
sahf
hlt
enter
mov
inc
jbe
inc
mov
pusha
adc
sbb
lods
test
mov
inc
mov
jg
mov
fldenv
mov
xchg
les
stc
dec
add
out
sub
push
inc
dec
push
test
roll
inc
lods
jae
inc
mov
fidivrs
mov
call
andb
xor
mov
sbb
jne
arpl
pop
outsb
mov
fs
dec
mov
ja
dec
jl
loopne
jl
in
in
aaa
pop
sub
es
and
sbb
mov
and
int
sbb
sbb
outsl
xlat
cld
mov
inc
jl
inc
jbe
push
arpl
repnz
out
xor
lods
xchg
dec
push
xchg
adc
push
dec
loopne
data16
pop
push
push
or
aaa
xchg
stos
ret
jmp
inc
dec
aad
test
cmp
ror
scas
pop
push
loope
bound
notb
mov
out
iret
fwait
insl
fwait
add
out
mov
pusha
pop
jne
jl
xchg
dec
adc
xchg
adc
jbe
jbe
popf
mov
out
imul
out
adc
out
ret
test
stos
das
aam
aaa
sti
sahf
pop
cli
push
add
push
jg
cmp
or
jno
jbe
xorl
sub
adc
jge
lock
add
les
filds
jbe
pop
scas
and
mov
pop
adc
dec
sbb
dec
mov
decb
xor
push
push
in
jl
xrelease
mov
mov
pop
dec
iret
addr16
cmp
or
out
pop
enter
test
mov
lahf
dec
test
pushf
add
punpckhdq
xchg
fistpll
andl
jmp
ds
mov
adc
cltd
jp
outsl
sub
xor
mov
mov
nop
aaa
js
inc
dec
xor
hlt
and
pop
jle
dec
jp
je
dec
inc
dec
into
jo
dec
popf
movsl
call
xchg
rol
jnp
aam
loope
outsl
cli
int3
adc
sub
imul
pop
cmp
jp
aas
xor
xchg
mov
mov
sbbl
xchg
loop
pop
les
icebp
addr16
cmp
nop
in
jne
mov
dec
inc
fcoms
pop
jne
dec
in
lods
ja
xchg
fidivrl
jl
mov
adc
jle
pop
fnstsw
jl
push
jne
push
jnp
test
mov
adc
add
orb
mov
push
bound
repnz
out
inc
sbb
fs
add
movsb
sub
sti
cld
cmpsb
mov
mov
daa
jmp
lods
sbb
mov
out
push
xchg
fcoms
lcall
mov
inc
sub
fmull
push
repnz
repz
xchg
mov
call
push
ret
test
mov
es
iret
mov
push
outsl
loopne
push
clc
adc
shll
jecxz
and
xchg
jbe
clc
fs
enter
inc
mov
jnp
imul
cli
arpl
jecxz
jns
mov
push
sarl
sbb
sbb
into
pop
adc
sub
std
fwait
cs
sub
test
loope
adc
cmp
jbe
iret
sub
mov
inc
pop
push
sbb
scas
pop
jp
pusha
fs
fiadds
jno
pop
js
les
insl
pop
into
test
xchg
sbb
out
icebp
mov
dec
adc
jbe
clc
ljmp
adc
cmp
fwait
iret
or
sub
sti
xchg
push
mov
testl
psubd
subb
jmp
adc
jp
test
jno
add
and
cltd
cs
sbb
in
ss
push
imul
xchg
xor
in
stc
js
arpl
loopne
and
rorl
pop
cli
scas
outsl
insl
or
inc
mov
jmp
fcompl
xchg
es
loopne
int3
in
sbb
addr16
int
out
js
or
sbb
int
pop
jecxz
dec
inc
lock
jbe
dec
pop
mov
xchg
adc
sbb
lret
mov
std
loop
dec
dec
push
out
imul
inc
and
addr16
mov
je
pusha
repnz
lock
inc
inc
fwait
pop
arpl
push
inc
rorl
pop
adc
pop
jo
imul
cmpsl
lret
adc
jmp
orb
daa
out
cmp
ret
std
jmp
push
fs
pop
movsl
test
sub
int
loope
mov
inc
aaa
mov
call
les
mov
xchg
jmp
das
outsb
sbb
cmpsl
dec
add
push
inc
frstor
jns
gs
cwtl
dec
out
out
cltd
daa
jns
je
sbb
gs
gs
sbb
dec
call
dec
or
pop
push
pop
mov
outsb
scas
pop
outsl
rol
mov
in
jmp
jmp
jbe
outsl
sti
jnp
out
int3
fwait
lods
xor
sub
mov
iret
jnp
rcll
inc
or
mov
inc
sti
in
test
mov
enter
stos
xor
dec
adc
mov
outsb
pushf
movsb
and
push
push
jnp
outsb
push
sbb
insl
jnp
mov
mov
cmp
fsubrl
push
adc
inc
addr16
data16
fs
xor
cmp
int3
adc
inc
mov
push
dec
faddl
mov
xor
pop
inc
cmp
andl
mov
dec
enter
dec
decb
movsb
loope
jg
sub
cmp
mov
mov
in
shll
mov
dec
lods
xchg
pop
mov
or
jl
mov
dec
dec
jae
cmc
adc
pop
lds
out
push
lods
jg
push
add
pop
in
mov
ds
enter
sbb
mov
ljmp
sbbl
mov
aaa
xchg
lret
pop
inc
lods
ficoms
jl
insl
lds
pop
leave
sbb
add
icebp
das
xchg
mov
or
scas
lods
mov
mov
xchg
insl
pop
mov
lods
lock
call
sbb
jecxz
dec
lea
jae
sbb
stc
add
jae
dec
dec
dec
test
push
inc
stos
jo
push
or
into
mov
jmp
or
inc
add
addr16
loopne
mov
inc
rorb
pop
insb
fwait
hlt
aad
cld
lock
mov
into
int3
jg
clc
popa
dec
pop
add
jmp
std
pop
sbb
mov
sub
js
sub
add
or
test
ja
das
sbb
xchg
mov
adc
test
sbb
pop
insb
push
lret
divl
pop
add
ljmp
jo
jle
js
jp
in
and
je
lahf
fistpll
add
test
dec
pop
cmp
inc
jb
ret
cmp
pop
xlat
add
sbb
rcll
outsl
test
push
or
sahf
fstp
mov
jmp
xchg
movd
fstp
inc
mov
mov
sahf
hlt
insl
fcomps
mov
outsb
enter
je
int3
cld
movsb
jmp
jbe
xchg
sbb
cwtl
jo
in
or
insl
test
and
lret
xor
push
test
and
aam
out
pop
and
cmpsl
mov
mov
popa
pop
stc
lds
cs
xchg
mov
out
and
mov
xorl
cld
mov
jbe
sub
ret
gs
xlat
sbb
out
pushf
in
out
jl
outsl
ja
ror
mov
test
inc
cmp
leave
lock
dec
aad
stos
lret
sahf
inc
hlt
inc
inc
adc
add
add
pop
rorl
icebp
test
xchg
stos
imul
pop
push
loopne
jecxz
lock
je
ja
jecxz
je
jb
jo
jne
loopne
jmp
int
les
pop
jl
test
mov
jge
scas
decb
sbb
sbb
fs
inc
push
scas
mov
jp
push
mov
sti
and
cmp
mov
jnp
inc
push
outsl
lock
rcrl
and
in
int
push
xchg
hlt
enter
xchg
bound
inc
fldt
add
mov
fsubrl
push
bound
lcall
cmp
xchg
jge
jne
ja
jg
xor
data16
es
dec
dec
push
sub
dec
les
dec
inc
xchg
and
out
imulb
push
lock
jmp
out
xor
in
dec
push
outsb
es
out
cmp
mov
sub
or
fwait
popa
roll
jno
outsb
push
rcrb
xor
xchg
int3
inc
pop
xchg
sgdtl
mov
push
lret
add
push
insb
fs
daa
iret
ror
or
pusha
ror
pop
dec
dec
jae
and
pushaw
pop
icebp
sbb
dec
add
inc
fs
fs
sbb
mov
inc
shlb
dec
outsl
inc
xor
xchg
in
ret
shrl
dec
popa
stos
pop
inc
cmp
mov
lret
dec
jmp
arpl
andb
xor
jle
lods
dec
jl
pop
or
sub
xchg
or
cld
pop
inc
sti
sti
ret
adc
xchg
repnz
mov
addr16
mov
je
cmp
or
data16
jbe
pop
hlt
adc
cs
lods
inc
in
idiv
push
rcll
cld
and
bound
int
in
call
mov
fstpt
jo
ljmp
jae
lret
sbb
adc
fs
or
call
jg
push
cmc
or
dec
xlat
es
addr16
fstps
pop
jmp
in
or
movsb
in
pop
fsubrl
ss
push
cmpsb
test
fstpl
popf
jmp
jno
into
inc
dec
pusha
aas
inc
stc
push
ret
xchg
xor
inc
adc
ss
movd
dec
ss
or
pop
inc
dec
pop
aaa
pop
out
pop
cmp
int
clc
arpl
push
inc
les
aas
push
mov
das
adc
adc
dec
lds
dec
jmp
sub
and
dec
mov
dec
cmp
sbb
popf
xor
les
call
mov
xchg
dec
pushf
xchg
sub
adc
jle
dec
mov
inc
cmp
outsb
dec
jb
fwait
lret
push
jg
je
dec
aam
aam
pop
lea
dec
pop
dec
jl
sbb
mov
inc
adc
call
push
adc
adc
test
popa
int
xchg
std
mov
ljmp
inc
adc
pop
inc
bound
jge
cld
lret
jecxz
popa
pop
pop
dec
outsb
sbb
dec
data16
cli
iret
pop
out
xchg
ja
test
mov
ja
sbb
enter
in
xchg
ljmp
fisubs
jns
pop
pop
rcrb
mov
or
out
inc
mov
lret
ljmp
dec
xchg
mov
cmp
mov
jp
cmp
mov
or
mov
jb
xchg
jl
cwtl
sub
mov
mov
testl
pop
add
in
dec
jge
push
outsl
inc
sbb
sub
and
dec
js
and
push
es
cmp
into
and
cmp
or
enter
out
imul
xor
sbb
outsl
or
sub
cmp
xor
jge
adc
shl
sbb
lods
push
in
ret
cmp
adc
sbb
mov
iret
cmp
pop
iret
jne
sbb
sbb
pop
mov
outsb
sbb
jg
es
bswap
mov
cld
inc
out
call
adc
loopne
imul
bound
jge
bound
nop
fs
jge
jmp
jge
lds
mov
fs
sbb
hlt
cld
or
movshdup
sub
ds
dec
int
insb
pop
add
mov
leave
cs
add
rol
jo
mov
push
mov
addr16
cmp
push
shrb
inc
iret
cli
add
xchg
leave
jp
mov
les
cmp
pop
pop
adc
cwtl
lods
dec
and
sbb
mov
sbb
pop
sub
xchg
cmpsb
adc
aaa
sbb
jnp
dec
mov
outsb
jp
push
push
shrb
cmp
outsb
pop
adc
loopne
sub
jo,pt
jo
lret
jnp
cmc
stc
mov
iret
or
out
aad
in
push
dec
inc
mov
lods
test
or
nop
pop
mov
jbe
sub
sbbb
in
mov
push
cltd
in
testl
cwtl
push
popf
enter
xchg
test
pop
xchg
bound
xor
idiv
pop
and
test
leave
loope
pop
xchg
mov
mov
sub
fidivs
cmp
mov
push
test
ret
pop
outsl
lret
in
push
lods
xchg
sbb
je
mov
mov
inc
push
cwtl
ret
into
aaa
and
cmp
jp
and
cmp
fs
mov
addr16
shrl
ret
je
and
outsb
cld
aas
sub
dec
js
mov
sbb
dec
sbb
mov
jg
push
jp
adc
jle
nop
incl
ljmp
std
inc
mov
mov
push
push
lods
out
pusha
jl
jle
xor
ffree
rcrl
xchg
cs
imul
ss
jb
imul
pop
stos
mov
mov
popl
xor
lods
lods
sbb
jg
icebp
xchg
xchg
sub
les
lods
dec
fs
es
sub
dec
popa
dec
pop
ja
in
push
cs
pop
jge
fwait
addr16
push
popf
shlb
repz
in
push
or
hlt
mov
out
sub
push
out
jnp
lods
fwait
mov
sbb
mov
jmp
sub
jmp
xchg
adc
inc
cld
cmc
roll
push
repz
jl
mov
jnp
movsb
cmc
sub
dec
fldenv
sbb
icebp
ljmp
lods
das
test
arpl
dec
dec
stc
jmp
iret
xchg
and
lret
cltd
scas
sbb
arpl
pop
pop
int3
xor
ljmp
rolb
jmp
jg
pop
dec
mov
dec
and
js
fstl
addr16
or
push
ds
out
xchg
test
push
fsubrp
fnsave
aaa
pop
sbb
addl
stos
imul
pop
add
lods
xor
lods
cmp
jnp
int3
outsb
ret
leave
pusha
jne
pushl
addr16
pusha
push
int
add
jne
add
xchg
inc
and
test
adc
mov
push
cmpsb
outsb
out
push
xchg
mov
lret
ljmp
lods
xchg
jl
shlb
cmc
ds
out
data16
mov
ljmp
clc
push
mov
cmp
xor
dec
push
out
pop
daa
cmp
sub
mov
jmp
xchg
adc
dec
mov
or
pop
or
xor
pushf
sbb
leave
xor
cld
orl
rorb
push
pusha
inc
out
add
bound
test
push
dec
xchg
dec
cmp
lret
adc
in
mov
outsl
lret
cmp
outsl
scas
lcall
out
add
and
outsb
and
mov
iret
dec
pop
and
push
and
adc
fwait
jmp
push
and
jl
xchg
mov
lret
mov
imul
sbb
pop
popf
test
fwait
imul
pop
push
sub
mov
imul
imul
leave
jno
dec
and
fwait
jle
filds
enter
dec
xor
frstor
gs
loope
shrd
sbb
mov
jge
xchg
out
imul
outsl
test
aaa
adc
shll
ss
cmc
imulb
sub
sbb
jle
mov
lock
test
jb,pt
das
jecxz
popf
jne
mov
pusha
cmp
jmp
js
shll
ljmp
ljmp
pop
dec
pop
cld
inc
sarb
mov
jno
push
ja
out
into
jmp
dec
cltd
pop
add
inc
xchg
pushw
cld
repz
inc
cmp
nop
scas
mov
push
push
jle,pn
fs
lahf
sbb
out
call
push
gs
rorl
decb
sbb
pop
inc
push
sub
dec
adc
dec
sbb
out
jb
xchg
inc
fwait
and
inc
xor
cmp
jge
ret
test
jl
adc
aaa
in
cwtl
pop
outsb
sub
inc
decb
or
lcall
cmc
dec
inc
mov
int3
adc
mov
sub
pop
outsw
mov
xor
pop
bound
dec
call
std
fdivrl
lods
or
jno
sbb
xchg
mov
out
les
inc
stos
dec
mov
push
aaa
push
repnz
pop
dec
dec
mov
or
idivb
inc
and
mov
lcall
sub
loopne
stc
dec
addr16
mov
mov
imul
inc
xchg
push
in
imul
lret
test
pop
les
loope
sbb
sar
js
je
int3
push
stc
shr
imul
jl
or
imul
test
xchg
sbb
lods
mov
in
bound
fimull
aaa
sbb
lock
sbb
les
lret
addps
outsl
mov
ffree
sahf
jbe
mov
adc
add
into
jne
inc
pop
es
sti
vprotw
repz
push
inc
incl
and
cmc
testb
sub
cwtl
aam
arpl
loopnew
push
in
inc
cbtw
insl
aas
stos
push
inc
enter
pop
sbb
sbbb
inc
dec
lock
mov
ljmp
hlt
inc
sti
mov
mov
int
add
jg
lods
adc
enter
push
jge
and
cmpsl
cmp
pop
cmp
inc
shl
and
dec
pop
dec
hlt
dec
icebp
dec
dec
dec
dec
xor
movsb
ja
inc
clc
rcrl
bound
cwtl
push
or
jns
sub
inc
dec
je
scas
in
add
push
addr16
dec
out
pop
shl
or
rcrl
cmp
xchg
mov
xor
sub
push
inc
cwtl
ret
sub
sbb
jmp
sub
cli
jbe
cli
push
or
jmp
jns
mov
fisubrs
sub
adc
inc
movsl
and
loop
dec
fcoms
sub
popa
sbb
dec
movsl
xchg
and
scas
sub
jle
inc
fwait
push
cmpsl
pop
daa
stos
cmp
cmpsl
fsubrs
mov
dec
push
mov
dec
sbb
fwait
jnp
or
les
cmc
xor
inc
push
aaa
pop
ljmp
xchg
gs
clc
lods
push
lods
cli
dec
dec
fwait
lea
scas
or
adc
popw
push
jg
jno
push
enter
enter
sub
sbb
dec
dec
dec
repnz
or
ss
jbe
rcrl
sub
sti
cmc
out
pop
out
sub
sub
cmp
das
aad
push
sbb
ret
inc
sub
mov
in
jmp
inc
inc
dec
sbb
pushl
dec
sbb
ds
jg
dec
shll
int
sbb
addr16
shlb
aaa
jl
mov
aaa
mov
mull
dec
sti
lret
imul
cwtl
dec
jne
inc
pop
push
inc
xor
or
sti
push
mov
ret
insb
mov
lock
pop
mov
push
inc
idivb
sbb
xor
jo
push
test
pop
pop
dec
mov
sub
sti
ret
adc
or
imul
out
cmp
arpl
out
jns
inc
ret
mov
xchg
imul
sub
push
adc
cld
sahf
dec
inc
push
dec
jb
inc
loope
inc
sti
and
dec
push
sbb
jnp
xchg
neg
int
movsb
dec
push
dec
mov
sti
ds
jns
mov
leave
jecxz
mull
out
jmp
adc
sub
mov
jo
iret
int
mov
sti
mov
cmp
dec
push
aam
lds
and
outsl
sbb
pusha
jne
cmp
jmp
in
jns
std
out
push
ss
push
jmp
cmp
add
jmp
pop
mov
cmpsl
jo
cmp
cli
cmpsl
mov
dec
enter
and
shll
daa
sti
movsl
test
dec
sbb
sbb
ret
aad
lret
pop
stos
out
xchg
jb
in
cltd
call
test
in
sbb
jg
cwtl
outsb
test
jg
jl
sbb
sub
sub
lods
dec
sbb
cmp
imul
sbb
andl
push
data16
fwait
mov
popa
out
jg
addr16
shlb
push
adc
sbb
push
jns
cmp
add
adc
dec
push
push
cmp
adc
das
push
pop
dec
es
cmpsl
push
outsl
cmpsb
leave
lcall
pop
or
test
jge
inc
mov
mov
leave
out
call
dec
cld
je
ljmp
mov
out
push
add
clc
jo
mov
sbb
adc
jmp
pop
popa
fsubr
test
les
pop
jne
jnp
imul
cmp
dec
data16
stos
rcr
cmpsl
out
xchg
cwtl
les
ds
sti
dec
aas
je
pop
aad
das
scas
xchg
imul
ds
cmpsl
jg
dec
out
mov
js
push
ret
inc
jl
shlb
cmp
and
push
and
stos
dec
add
cmp
paddusb
mov
imul
jle
test
lret
dec
lcall
mov
push
leave
push
in
pop
fs
into
jl
or
lahf
int
jge
out
lds
cmp
iret
arpl
pop
sub
pop
add
daa
xor
rorl
xor
data16
or
sbb
add
dec
push
mov
outsb
test
mov
jl,pt
test
inc
or
adc
jle
sbb
xchg
xchg
pop
insb
mov
inc
popa
outsl
aas
sbb
int3
fsubrs
stos
or
shrl
jns
sub
fcoms
fs
out
and
lods
into
jl
mov
xor
pop
jmp
mov
pop
dec
aam
call
xchg
imul
pop
ljmp
loopne
mov
push
int
js
xor
lods
mov
pop
mov
push
mov
sbb
shlb
cmp
hlt
push
push
bound
out
inc
sub
dec
aas
ds
fstl
sbb
rolb
and
jbe
cmp
lcall
sbb
cwtl
add
xor
jbe
mov
mov
jne
cmpsl
pcmpgtd
in
out
insl
fwait
icebp
movl
stos
jns
dec
mov
sbb
add
mov
push
xchg
dec
xchg
test
push
sbb
xchg
lret
or
in
hlt
add
pop
jb
mov
cmp
iret
xchg
repz
jo
push
sub
stc
sbb
cmp
pushf
paddsw
inc
and
or
mov
sub
sarl
sub
andl
decl
push
push
dec
cmc
call
sub
int3
les
mov
adcb
cltd
pop
lahf
push
test
in
jmp
hlt
das
adc
fmull
in
push
fmuls
ret
sub
loope
out
dec
jle
mov
ja
repnz
bound
aaa
pop
call
ljmp
repnz
cmp
xor
add
push
inc
hlt
adc
xor
pushw
gs
adc
leave
sbb
adc
out
mov
nop
out
mov
xchg
daa
out
test
filds
sub
popf
outsb
cmp
lea
bound
insl
inc
ret
dec
mov
fadds
mov
out
xchg
arpl
in
rorb
cmpsb
cmp
xchg
es
outsb
lea
push
xor
xchg
insl
or
pop
push
xor
orl
dec
div
stos
les
adc
dec
out
and
pop
jnp
push
cld
bound
ja
addr16
sbb
jo
push
cmp
pop
addb
push
dec
pop
push
repz
adc
inc
sbb
mov
cmp
aas
arpl
adc
test
adc
dec
ret
aas
and
pop
jle
popa
shl
scas
sub
ret
pop
ret
in
mov
push
incl
inc
and
or
add
push
bound
inc
add
out
pushf
arpl
ljmp
lahf
jg
js
fldenv
lahf
adc
push
cmp
ret
or
nop
and
mov
dec
pusha
or
or
or
pop
and
bound
and
jmp
shll
addr16
mov
cmp
jg
dec
pop
cmp
jmp
pop
in
in
jg
pop
lods
push
pop
pop
xlat
dec
inc
adc
imul
fcmovne
repnz
push
shlb
daa
ja
fs
dec
imul
stos
and
aaa
jbe
je
shr
cmc
or
jl
pop
test
fs
test
iret
or
dec
xchg
jnp
push
out
pop
test
ds
test
stos
shr
adc
fadd
outsb
dec
call
mov
lea
data16
jmp
push
int
cmpsb
xchg
js
xor
push
movl
mov
xchg
movsl
push
leave
jb
stos
movsb
dec
int3
sub
push
xorl
insl
cmp
xchg
push
push
arpl
cwtl
jae
fdivs
xlat
dec
loop
lock
sbb
adc
dec
cmp
sub
push
push
movsl
push
add
jb
dec
and
dec
push
push
jg
xor
dec
sti
pop
push
adc
and
xor
clc
jge
mov
xor
shll
ljmp
test
jp
in
pop
and
gs
lods
adc
ja
mov
sub
les
push
cmp
insl
jp
ret
pop
lea
aaa
add
cmp
jecxz
lret
push
stos
dec
out
jns
xchg
int3
push
decb
cmp
rcrl
test
fs
imul
dec
cmp
push
fucom
pop
rcrb
cmp
cmpb
fistps
fcomps
jo
dec
arpl
dec
pop
sbb
out
cs
inc
adc
aaa
cwtl
in
out
clc
es
push
cwtl
inc
outsl
stc
xchg
lcall
into
push
xor
mov
pop
out
mov
repz
imul
xchg
out
pusha
cwtl
xchg
int
and
out
sub
mov
xorb
insl
pushf
stos
cmp
jns
loope,pn
stc
popf
test
cmp
xchg
push
and
add
roll
inc
mov
sbb
enter
cmpsb
xlat
xorl
ds
sbb
repnz
shll
pop
in
sbb
add
lcall
inc
cmp
push
into
pushf
stos
push
shlb
ljmp
mov
jno
inc
enter
les
subb
popl
stc
movsb
jbe
pusha
cwtl
in
test
xchg
dec
nop
testb
lock
push
shrl
push
sbb
mov
sar
enter
repnz
addr16
mov
in
hlt
sbb
cmpsl
pusha
cld
pop
in
in
dec
sbb
xchg
pop
in
xchg
mov
add
xchg
pushf
jo
and
popa
sbb
inc
shll
sahf
bound
pop
add
daa
cmp
sub
push
pop
and
clc
add
bound
scas
in
or
lcall
sbb
jmp
repnz
pop
ret
inc
jp
popl
and
int
sub
call
sahf
pushw
into
popl
dec
lcall
icebp
test
addr16
out
movsb
or
adc
push
sbb
xor
inc
xor
into
es
push
xchg
adc
cld
cmp
fadd
inc
imul
icebp
call
jb
jle
int3
adc
clc
call
in
xor
dec
or
mov
sbb
int3
nop
orl
dec
pop
cld
fwait
ret
icebp
sti
out
dec
mov
add
data16
andl
adc
dec
push
sub
imul
rorb
fistl
dec
xchg
dec
and
in
fcoml
sbb
and
ss
mov
sti
pushf
ds
out
add
lds
jmp
cli
xorl
jmp
push
fs
jae
cmpsl
xor
in
inc
out
mov
jle
dec
mov
jl
outsb
dec
pop
pop
sub
lods
shlb
shl
je
mov
adc
js
adc
jp
data16
push
push
pop
dec
push
dec
or
and
aad
jp
data16
or
add
pop
push
mov
or
adc
enter
les
mov
inc
lcall
mov
into
add
dec
pop
loope
add
in
inc
popa
fistl
sub
jnp
cmp
sub
out
sbb
xchg
test
sub
sbb
mov
in
mov
dec
stos
insb
lds
je
scas
subl
hlt
push
inc
ljmp
push
mov
jl
or
mov
je
insl
cmp
inc
sbb
leave
imul
jmp
mov
adc
es
dec
je
sarb
lret
fwait
or
dec
jl
dec
or
sbb
mov
data16
out
push
xlat
adc
dec
push
inc
sub
dec
loope
sub
xchg
lea
popf
mov
pop
cli
outsl
shll
in
out
pop
scas
imul
push
xor
mov
add
inc
xor
icebp
adcl
xor
mov
cmp
pop
cmp
nopl
pusha
out
dec
xor
mov
or
sbb
dec
sti
int
xor
cld
dec
push
sbb
pop
push
subb
leave
call
dec
test
lock
jp
mov
mov
loope
sarb
adc
dec
shll
xor
addb
xor
jo
sub
mov
shr
xchg
and
dec
mov
rolb
jl
aaa
cld
xor
sahf
pop
pop
ljmp
push
jo
xchg
stos
adc
mov
push
roll
push
xchg
jmp
cmc
stos
mov
je
sbb
xchg
or
into
xor
sarb
stos
jmp
or
orb
jbe
mov
out
push
ret
sbb
dec
and
testb
push
sub
ljmp
ret
or
or
mov
push
mov
in
push
pop
imul
dec
outsb
jg
into
push
and
xor
and
inc
addr16
xchg
or
shrb
xor
push
cs
mov
in
push
inc
ds
loop
cwtl
jmp
shlb
cmp
dec
mov
es
adc
js
inc
or
outsb
or
sbb
ret
subb
adc
lret
scas
inc
test
jecxz
push
xchg
pop
push
xchg
jp
iret
test
or
xor
rolb
push
jne
jmp
push
xlat
adc
ret
mov
adc
ljmp
and
push
dec
sub
rclb
sahf
dec
into
pushl
dec
jnp
addl
sahf
jl
loope
loop
test
xlat
rcll
sub
popa
mov
movsl
divb
xor
int
sbb
jg
jne
pop
jp
inc
jmp
loop
push
lret
dec
sahf
in
dec
repz
push
gs
jbe
mov
xchg
xor
pop
inc
mov
push
mov
cmp
aad
shlb
push
jg
jp
andl
pop
pusha
aas
mov
xor
repz
outsb
mov
lds
out
stos
aad
incl
or
imul
xor
pushf
stos
scas
rcrl
and
sub
leave
call
fs
cmpsb
push
sub
and
loope
mov
call
popf
mov
push
cmpsb
pop
xchg
shl
roll
pop
or
pop
adc
push
leave
repz
jno
cwtl
pop
hlt
pop
inc
arpl
mov
scas
dec
les
stos
cs
inc
shlb
jns
rorb
sub
pop
push
mov
cmp
adc
jmp
insb
xchg
jecxz
push
lcall
mov
push
xchg
js
hlt
loope
cwtl
into
push
fwait
push
pop
sbb
pop
adcb
rcll
jle
sbb
inc
dec
pop
or
in
or
icebp
ds
rcr
or
inc
and
daa
xchg
mov
push
dec
mov
jge
mov
lock
inc
jo
push
pop
lcall
xor
call
dec
inc
cs
pop
bswap
adc
insl
mov
enter
jne
and
in
xchg
adc
mov
rclb
jmpw
ja
adc
loop
sub
xchg
push
mov
add
pop
adc
cmp
push
jnp
mov
cwtl
adc
dec
or
mov
sti
call
rcrb
loop
pop
mov
push
test
xchg
dec
sub
mov
sub
dec
sub
pusha
add
dec
gs
adc
testl
sub
dec
and
mov
and
cwtl
out
mov
ds
mov
cmp
sub
adc
ss
xor
or
inc
dec
push
incl
and
sub
push
dec
in
sbb
sbb
in
push
push
mov
outsb
jg
push
jl
sar
sub
sub
je
sub
push
js
das
scas
jmp
sub
sub
dec
jb
jge
dec
dec
ret
push
mov
or
mov
sbb
cmp
add
test
icebp
or
stos
int
dec
adc
aas
iret
add
loope
pop
daa
dec
test
jle
cmp
push
xchg
in
mull
dec
mov
or
dec
add
mov
xor
cpuid
push
fisttps
outsb
les
xchg
dec
sub
cld
icebp
shll
pop
std
sbb
js
pop
cs
hlt
leave
inc
idivb
cmp
movsb
stc
in
inc
dec
mov
aas
paddusw
mov
sti
das
fcompl
inc
sbb
cmp
sub
fidivl
xchg
xchg
leave
sub
mov
outsb
jae
dec
es
dec
out
jb
sbb
lods
nop
jp
push
loop
mov
jge
fwait
movsl
in
testb
data16
jne
lret
sbb
ret
push
dec
sub
sbb
dec
jne
bound
mov
pop
cmp
imul
clc
adc
cli
fdivrl
mov
xor
jb
mov
jno
jbe
pop
xchg
pop
punpckhbw
xor
dec
mov
add
mov
jbe
je
add
fs
push
js
inc
in
add
dec
aam
xchg
cs
adc
aad
inc
shll
xchg
lds
les
in
fisttpll
daa
inc
call
bound
push
push
mov
stos
cmp
xchg
bound
dec
lock
shll
cld
adc
pop
pusha
xchg
sbb
popf
cmp
imul
inc
push
push
mov
xor
call
mov
xchg
jno
aam
sbb
aad
mov
int
xchg
xor
sub
sub
ljmp
clc
jb
fwait
int
in
pop
insl
mov
cmpb
mov
jge
jns
hlt
fdivrl
mov
and
inc
jle
and
xchg
in
inc
inc
repnz
movsb
lcall
das
stos
hlt
jnp
pusha
mov
jnp
dec
xor
add
stos
out
sbb
daa
in
nop
inc
cmc
push
pop
sti
add
out
push
les
push
arpl
adc
dec
pop
outsl
inc
inc
scas
pusha
clc
int
movsb
adc
test
mov
negl
loope
jle
dec
popa
xor
pop
cmp
pop
leave
mov
jge
push
test
pop
enter
pop
aad
sbb
and
popa
add
test
cs
mov
adc
aam
fbstp
cmpsl
enter
fdiv
jnp
inc
mov
popa
addr16
cmp
gs
cld
in
pushf
movsl
adc
pop
subl
stos
test
sbb
sahf
xor
movsl
adc
mov
popf
xchg
lret
in
cld
ja
cmp
or
jno
inc
scas
mov
movsl
loopne
mov
lods
data16
mov
mov
or
jns
shl
mov
pop
and
fs
call
scas
cld
sub
adc
cwtl
and
jl
int3
push
sti
ss
mov
pop
mov
pop
xchg
or
dec
pushw
xor
pop
out
inc
movsb
xor
cli
repz
adc
pop
jmp
xchg
call
cmc
xrelease
pop
addr16
call
ret
mov
pop
or
jno
dec
mov
fdivr
lock
jl
adc
pop
enter
sti
adc
fwait
clc
out
arpl
push
out
btr
movl
insb
dec
sti
cwtl
lods
inc
jb
shr
mov
jl
push
fs
cmp
xor
sub
bound
mov
add
mov
or
loopne
in
daa
xor
mov
dec
hlt
mov
and
dec
js
sub
jae
in
leave
outsl
decl
fistps
pshufw
movsb
stc
jl
bound
les
add
daa
adc
add
sahf
dec
xor
clc
subl
sbb
sbb
mov
loop
std
jb
fmuls
push
mov
hlt
pusha
bound
das
cmovle
or
stc
mov
leave
in
push
mov
cli
pop
or
sarb
les
enter
dec
enter
or
fists
loopne
jp
push
dec
dec
jnp
push
lods
push
sbb
adc
add
add
push
test
jmp
xor
add
xchg
and
inc
loopne
out
dec
mov
lret
pop
xchg
enter
fisttpl
data16
addl
push
mov
sti
data16
inc
adc
aas
xor
aas
jecxz
cld
jmp
test
out
and
jle
adc
inc
das
movsl
push
inc
ljmp
pop
arpl
imul
ficomps
lahf
pusha
notb
call
les
inc
pop
stos
cmp
stos
push
into
push
jmp
movsl
addr16
jg
dec
jg
aas
push
sbb
sub
popf
sub
aaa
js
inc
fstpl
dec
cmp
cmp
out
xchg
and
sub
inc
mov
into
dec
jns
shll
jmp
push
negb
inc
mov
sbb
movsb
cs
inc
or
mov
sbb
push
pop
mov
adc
adc
iret
movsb
repnz
inc
in
xchg
jae
mov
mov
loopne
call
insl
enter
jmp
into
cli
push
inc
sbb
xor
lds
outsl
add
xchg
and
pushf
iret
mov
pusha
loope
repnz
fidivs
jg
pop
movsb
jmp
ret
jg
cmp
ja
outsl
mov
out
into
mov
dec
js
jp
repnz
out
js
data16
jg
sbb
fs
dec
loop
sub
cld
dec
in
push
inc
inc
bound
adc
pop
inc
jns
movsb
loope
inc
ljmp
push
dec
fs
loop
das
ja
in
push
push
xchg
daa
shll
ds
and
mov
fs
cmp
cmp
jg
lds
decb
dec
lcall
push
in
push
add
pop
pop
push
jg
in
loope
sbb
fcompl
ds
sbb
sbb
adc
push
hlt
notb
pusha
adc
jmp
jg
jno
dec
pop
push
hlt
sub
sub
aad
movsl
cld
cmp
out
cld
in
push
jo
shrb
dec
push
bound
push
pushl
or
jb
dec
in
pusha
dec
cmp
loop
mov
cs
inc
incl
inc
cld
pop
fs
sub
pop
pop
push
loopne
push
ljmp
or
dec
sub
in
pusha
and
dec
and
cmp
sub
push
cmp
cmc
add
ss
xor
xor
or
divps
jg
in
call
add
dec
add
add
push
push
sbb
loopne
push
cld
adc
repnz
sbb
adc
cmpsb
lret
das
pop
jb
lcall
andl
dec
cmp
popf
dec
imul
popa
testl
sub
push
ficomps
in
out
mov
pop
lret
out
adc
cld
push
push
cmp
jecxz
sbb
inc
push
repnz
fimuls
sbb
mov
int3
int3
sbb
addb
push
xor
and
inc
nop
and
jecxz
je
adc
idivl
iret
cmpsb
mov
and
and
mov
lea
testl
dec
or
dec
dec
adc
sbb
les
aad
pop
loopne
xchg
loopne
sbb
incl
or
jmp
into
inc
loope
mov
jne
sbb
xchg
jl
outsb
cwtl
sar
xor
data16
scas
xchg
pop
lret
icebp
orb
cmp
andl
bound
fs
sbb
imul
js
pop
data16
jns
inc
in
or
scas
mov
add
push
adc
sub
sbb
xor
imul
lea
bound
sbb
arpl
out
sbb
push
sub
push
clc
stos
aad
adc
stc
jg
andl
push
inc
stc
dec
sbb
jb
sbb
loop
xor
out
pop
jmp
sub
shlb
js
dec
cmpsl
jno
pop
out
dec
aas
pop
hlt
and
push
jg
inc
dec
push
push
in
aas
sub
imul
rcll
and
popf
outsb
fsubs
xor
pop
movsl
inc
scas
cmp
out
pop
mov
ffreep
mov
lods
pop
adc
iret
push
dec
jns
inc
out
or
mov
ret
ljmp
enter
sbb
jne
orps
rcrb
fwait
dec
add
in
pop
lock
cs
inc
lret
sbb
scas
push
data16
pop
aas
out
push
leave
cmp
add
jns
jmp
enter
xor
sbb
sbb
and
shl
cmc
int
ret
push
popf
loopne
loopne
dec
jp
cs
add
cltd
int3
fstl
add
push
pop
stc
data16
outsb
inc
stos
mov
gs
data16
inc
int
jae
dec
imul
outsb
push
add
mov
pop
push
enter
push
jnp
mov
jmp
out
mov
jp
push
sub
jne
das
adc
stc
add
mov
loope
sub
shll
in
ja
inc
inc
mov
hlt
shrl
lods
inc
and
inc
lret
icebp
cs
aam
test
imul
in
push
iret
jo
shrb
jae
or
jl
decl
repz
cs
in
cmp
les
mov
or
and
pusha
mov
mov
push
insl
jmp
inc
insl
dec
add
mov
mov
and
lods
adc
mov
dec
push
fwait
test
and
int
mov
ret
fnstenv
xchg
enter
jmp
push
xchg
mov
and
xor
mov
addr16
cmc
stos
push
inc
sbb
push
leave
push
addr16
xor
pop
rorl
jp
or
ss
rcrl
pop
cmp
pushf
outsl
roll
insb
xchg
sti
fs
test
pop
addr16
xor
inc
xor
cmpsb
sub
gs
inc
outsl
dec
pop
js
gs
xor
stc
mov
into
bound
inc
mov
mov
pop
dec
sub
dec
in
push
lods
inc
xor
dec
addr16
pusha
stc
dec
push
imul
out
inc
jp
rorl
inc
dec
inc
mov
jne
dec
cld
mov
icebp
sub
in
push
int
push
dec
jb
inc
mov
imul
dec
xchg
in
rclb
fadds
xchg
push
push
shll
mov
or
jecxz
sbb
enter
ret
bound
xor
xchg
es
in
pop
and
xchg
fwait
lods
cmp
or
dec
sbb
pop
call
pop
mov
nop
jle
jbe
mov
fisubrs
jl
fs
and
or
mov
nop
push
fucom
push
jne
sub
xchg
ss
sub
rorl
lds
mov
lods
stos
popf
ret
mov
inc
sbb
aaa
in
xor
adc
rcll
out
hlt
jl
inc
pop
aam
std
lahf
push
cmpsl
gs
add
imul
sub
test
fildl
ja
inc
pop
nop
out
jecxz
sub
sub
mov
inc
mov
cmpsb
push
movsb
mov
stos
inc
sarl
and
js
sti
inc
xor
and
lds
inc
outsb
adc
in
out
pop
popa
stos
shlb
js
js
cmp
cmp
cmp
popf
push
das
jbe
iret
mov
or
or
loopne
inc
fsubl
inc
dec
daa
cli
outsb
xchg
jmp
in
rorb
ret
and
icebp
add
cld
imul
test
xchg
loopne
push
mov
outsl
pop
pop
iret
pop
imul
repz
mov
mov
jmp
xorb
loop
xlat
xor
sbb
mov
in
stc
pop
in
sbb
and
lock
test
loop
imul
dec
dec
pusha
scas
sub
outsb
push
mov
pusha
insl
dec
sbb
xchg
aaa
dec
cmpsl
lds
subl
repnz
fisubrl
add
push
or
rcrb
mov
mov
inc
xchg
push
dec
stos
sub
insb
or
bound
mov
testw
add
mov
fwait
jno
push
xor
jl
scas
addr16
cwtl
and
jmp
test
fwait
sub
lret
sbb
dec
adc
push
and
cltd
or
push
pop
aad
jo
mov
xor
lds
pop
inc
shrl
xchg
imul
fadd
test
xor
sbb
insb
pop
mov
or
jbe
add
pop
push
leave
scas
mov
sub
cmp
and
mov
mov
add
cmp
add
inc
mov
mov
adc
ljmp
sbb
xor
inc
cmp
inc
addr16
jns
daa
cmp
pop
or
out
pop
jo
push
movl
cmp
jmp
out
ret
adc
add
in
xor
add
pop
xchg
cmpsb
sarb
jecxz
and
inc
es
les
addr16
pop
popf
jge
xlat
dec
ja
out
add
shrl
cmp
mov
inc
cltd
cmp
mov
cmp
pushf
icebp
int
push
cld
pop
add
jnp
jns
aam
lds
adc
fs
xchg
adc
das
or
data16
mov
or
cmp
xor
push
adc
imul
leave
lret
pop
pop
push
imul
fwait
std
mov
lods
xor
ljmp
iret
sbb
or
dec
sub
fs
jno
cmp
add
pop
fsts
fsubrl
data16
mov
xchg
fs
loope
clc
dec
je
inc
je
repz
rclb
dec
pusha
les
push
push
gs
call
mov
aaa
pand
in
or
aad
mov
pop
pusha
jne
int3
push
lods
cmp
fwait
mov
push
mov
push
icebp
aas
out
scas
cli
sbb
and
rclb
daa
jno
sbb
jb
cmc
repz
jbe
imul
xchg
pop
adc
das
ret
rcr
push
adc
pushl
test
pop
xor
dec
xor
nop
stos
int3
cmpsb
ret
lcall
in
push
fsubl
loop
lahf
loopne
push
cmp
mov
dec
dec
sar
imul
xchg
mov
pop
test
mov
and
enter
lret
iret
out
xchg
add
rol
mov
outsl
push
or
int
shl
fnstenv
out
pop
pop
mov
lea
and
sub
repz
jmp
jbe
mov
sbb
sar
in
cmp
xchg
int3
inc
cmc
pop
dec
push
cmp
or
mov
sti
sbb
sub
ja
adc
xor
sbb
shrb
push
jnp
xor
fs
pushf
aas
push
ret
mov
pushf
jnp
adc
movsb
jo
test
add
mov
enter
mov
std
in
dec
lds
mov
dec
scas
mov
data16
xchg
push
jmp
lods
mov
sbb
popa
mov
cld
js
sti
pop
sbb
inc
fadds
mov
shrl
pop
inc
int
mov
ret
rolb
mov
ja
movl
mov
sbb
push
pop
push
dec
lods
inc
jbe
mov
int3
shrb
inc
xor
scas
sbb
pop
push
test
mov
add
imul
aad
inc
repz
mov
dec
push
push
les
xchg
lea
stos
or
push
data16
aas
subl
push
xorl
push
dec
repz
subb
push
dec
addr16
xor
loope
push
bound
push
outsl
jb
sbb
or
dec
inc
test
dec
cmp
in
sub
aad
xlat
movb
cvttps2pi
mov
xchg
imul
xchg
mov
adc
lret
lret
mov
jp
inc
test
or
jecxz
xor
scas
mov
cs
jg
dec
sbb
push
les
outsb
mov
aas
sar
mov
mov
jge
insb
sbb
mov
lahf
push
xchg
int
aad
data16
jno
mov
sub
cld
cmp
sarl
and
rol
outsl
movsb
jge
inc
push
mov
and
shrb
cmp
imul
rcll
gs
sti
pop
pusha
in
and
scas
inc
push
push
fmul
inc
jg
or
fs
jb
sbb
and
outsb
stos
sub
js
ds
icebp
sub
test
and
outsl
stos
sar
scas
xor
lods
xchg
adc
pop
stc
enter
add
dec
pop
sahf
add
pushf
adc
movsb
popf
jl
inc
push
mov
cmc
lock
test
dec
daa
push
out
sbb
sbb
out
pop
dec
mov
jge
sbb
sbb
push
add
pushf
loopne
fisttps
push
stos
cmc
jmpw
dec
in
test
inc
dec
pop
inc
incl
in
repz
cmc
mov
shlb
test
popf
push
jbe
adc
cmp
stos
repz
cmp
sub
sti
mov
pop
adc
cld
stc
pop
sbb
jecxz
pop
outsb
ljmp
jae
mov
push
je
outsb
mov
mov
inc
inc
stos
in
cmpsb
add
out
mov
dec
mov
cli
mov
cmpsl
mov
xchg
aaa
xchg
mov
test
fs
pop
aaa
inc
sub
sbb
inc
pop
xchg
in
inc
jns
mov
scas
mov
mov
popa
cmp
shrl
push
sbb
out
or
cmp
imul
adc
rorb
fwait
xchg
push
pop
enter
push
mov
cmp
pop
adc
sbb
add
sti
test
out
sbb
adc
loop
stc
mov
push
out
daa
add
jbe
test
out
sub
dec
movsb
outsl
clc
push
arpl
push
mov
test
or
sub
sbb
mov
popa
shll
outsb
dec
pop
je
js
add
pop
mov
dec
bound
outsl
pop
xor
cli
cmp
out
dec
repnz
stc
fstpl
aas
inc
ja
fwait
cli
shll
sub
decl
imul
xor
xor
push
in
inc
out
fisubs
cmp
sub
adc
aad
add
inc
shl
daa
or
dec
xorb
sub
shr
bound
sub
loopne
into
lods
xor
cwtl
ja
sbb
lods
mov
mov
and
adc
xor
pop
fwait
or
xchg
ja
inc
aaa
into
jo
enter
dec
aad
lret
mov
mov
fisttpl
dec
mov
and
call
mov
mov
and
mov
add
incb
mov
cld
mov
pop
lret
sti
jbe
adc
sbb
adc
sub
inc
ds
insb
int3
dec
cmpl
mov
js
jg
pop
pop
push
push
test
outsb
mov
icebp
in
push
cmc
and
pop
outsl
jno
sbb
fwait
jp
sub
pop
inc
clc
filds
lods
dec
xchg
mov
std
pushf
shr
fists
jnp
out
jmp
sub
cmpl
pop
xchg
rorl
push
fldl
xchg
jl
orb
movsb
sahf
mov
movsb
js
popf
push
into
fwait
sub
orl
aaa
je
test
xchg
and
inc
xchg
call
mov
jl
sahf
add
jp
mov
add
inc
jns
sbb
out
xchg
daa
inc
pop
in
notl
stos
subb
outsl
sbb
es
push
adc
sbb
outsl
imul
imul
inc
xchg
pop
out
outsb
sti
xchg
stc
stos
or
es
xlat
cmp
push
ja
push
rorl
int3
dec
sub
jle
fldcw
repz
cmp
enter
fs
sub
dec
dec
repz
andb
les
out
iret
fwait
out
stos
dec
push
add
je
or
fcoms
js
dec
dec
mov
popf
jp
push
shr
xor
data16
in
repnz
dec
xchg
cwtl
in
movsb
je
sbb
dec
call
enter
or
jmp
fwait
outsb
sarl
dec
inc
test
add
cwtl
les
jnp
cmp
xor
pop
outsb
sbb
sbb
stc
scas
imul
push
stos
test
jno
dec
stos
mov
inc
push
adc
mov
pop
lods
outsb
jno
aas
int3
adc
or
test
stos
daa
xor
cwtl
fmul
lret
and
lret
nop
push
mov
push
cmp
shll
imul
imul
fimull
push
inc
ss
into
or
cmpsl
sbb
push
or
push
adc
xor
mov
int
out
xor
pushf
jns
push
jb
pop
push
stc
mov
adc
lock
pop
push
pop
das
jne
nop
pop
sbb
and
and
xchg
mov
bound
push
out
loop
sbb
js
jmp
aas
dec
push
cltd
dec
out
outsl
jl
push
bswap
pusha
dec
push
hlt
inc
std
stos
ds
test
in
lret
jbe
mov
rcrl
xchg
popf
inc
test
jbe
xchg
push
imul
gs
sub
sub
xor
add
pop
gs
gs
add
popa
fwait
lret
mov
test
pop
cwtl
sahf
cmp
dec
cmc
movsb
dec
js
push
shrl
or
leave
cmp
add
aad
sarl
fidivrl
and
lock
scas
push
daa
xor
xchg
inc
cmp
loope
xor
push
sbb
outsl
cmc
sbb
fsts
fdivrl
orb
iret
into
aad
push
adc
insl
mov
xchg
push
dec
xchg
push
outsl
mov
ds
shrb
dec
les
push
gs
push
dec
push
arpl
clc
popa
sbb
pop
js
decb
fisttpl
sub
pop
stos
lret
push
dec
pop
ret
rorb
mov
jbe
mov
or
loopne
in
xchg
mov
ljmp
xchg
test
sbb
inc
int
adc
mov
iret
and
ret
lret
dec
xor
jbe
mov
inc
mov
aaa
cmc
scas
and
sbb
gs
pop
inc
sbb
and
sub
fisttpll
popf
push
xlat
pcmpgtb
inc
lds
dec
xchg
enter
or
mov
dec
mov
xor
je
dec
pop
jo
jbe
add
lret
push
and
inc
mov
js
push
push
sub
and
int3
adc
jne
push
xchg
adc
outsb
aad
pop
bound
xchg
inc
outsl
stos
pop
dec
aaa
inc
jl
mov
push
xchg
dec
sbb
pushl
insl
imul
xorl
mov
into
cmpsb
add
jge
mov
das
rcrl
loop
out
iret
in
outsb
rcrb
jmp
fs
ss
and
mov
pusha
int
std
lock
std
incb
loop
outsb
sbb
lods
outsb
mov
testl
and
sub
leave
incb
xor
xor
inc
pop
dec
push
std
outsl
in
inc
mov
stos
push
push
enter
push
jl
dec
fwait
arpl
xor
pop
xor
and
dec
ljmp
in
push
inc
adc
and
test
mov
sbb
test
aam
push
test
arpl
fsubrl
push
xchg
incb
sbb
xor
icebp
jmp
push
push
jo
add
cwtl
inc
call
in
and
dec
das
add
sub
adc
mov
out
fs
sarl
push
mov
je
sbb
out
insb
jae
xchg
ja
jbe
leave
cmc
decl
jbe
inc
hlt
cld
cmc
call
pop
je,pn
pop
in
and
push
cmp
bound
or
sub
dec
in
imul
adc
mov
outsl
out
test
shlb
pop
test
sbb
jmp
pop
sub
push
jg
loopne
push
push
or
scas
out
jl
arpl
adc
sbb
inc
pop
sub
sti
sub
cmpsb
sub
and
or
pusha
movsb
and
cmp
loop
sbb
leave
xor
insl
sbb
test
and
or
pop
add
sub
test
add
test
push
pop
add
pop
inc
and
lods
imul
imul
sub
adc
sub
pop
cmp
popa
aad
sub
push
inc
and
and
iret
es
sub
rolb
pusha
sub
bound
dec
cld
or
or
cmpsb
js
testb
lods
scas
adc
fsubr
push
aaa
jmp
cmpsl
cmp
or
out
push
cmp
nop
cmp
stc
out
or
adcb
inc
jle
fisttps
lcall
add
fs
aam
jmp
push
stc
rcrb
dec
mov
cs
adc
mov
int3
dec
and
test
push
and
popf
pushf
popl
loop
adc
sti
add
movsb
and
cmp
insb
fcoms
fmul
cwtl
enter
inc
and
cld
leave
movsb
inc
cmpb
adc
add
lods
pop
inc
ljmp
jns
pop
cwtl
push
push
fs
daa
cli
lahf
call
xchg
stos
sub
jmp
rolb
pop
pushl
push
add
lahf
mov
leave
popa
xchg
scas
imul
inc
es
pushf
sahf
cltd
push
and
cld
jecxz
push
xor
jo
dec
fistl
pop
repz
add
bndldx
leave
loope
add
ja
lock
cmp
leave
jo
data16
or
push
pop
loopne
bound
iret
pop
rcll
inc
incl
mov
data16
jg
clc
add
sbb
mov
cmp
ljmp
sbb
adc
xor
movsb
imul
pop
inc
push
call
xor
movsb
jbe
jmp
lock
aam
push
jg
jg
dec
push
xchg
iret
out
arpl
int3
cld
out
aas
jo
jg
cmp
scas
and
add
sbb
test
push
mov
ljmp
jl
mov
and
ljmp
sub
jmp
jbe
pop
test
lret
jmp
fs
inc
lcall
cmp
into
fwait
in
pop
lods
or
movd
pusha
stos
pop
jmp
push
sti
pop
icebp
lds
pop
stos
sbb
leavew
sbb
pop
mov
add
pusha
stos
leave
push
xor
or
int3
inc
push
jae
fwait
mov
pop
ficoms
lock
call
fstl
inc
fsubl
mov
cmp
xchg
js
mov
mov
out
outsb
out
xor
scas
scas
pusha
push
adc
jne
test
dec
jp
gs
lock
lret
cmp
in
stos
dec
outsb
xor
mov
imull
stos
test
repnz
jl
inc
movsl
or
and
add
or
push
insl
inc
cwtl
fsubrs
lea
dec
les
shl
loopne
dec
mov
jo
out
cmpsb
cwtl
sub
int
sbb
mov
jo
cltd
fdivp
mov
addr16
imul
xchg
jg
jo
je
jl
xor
fadds
into
ret
data16
jg
mov
jbe
dec
sbb
out
pop
jb
stc
ret
mov
jbe
or
out
xor
lea
lahf
add
cmp
jmp
cwtl
pushf
imul
addr16
dec
incb
xor
cwtl
inc
mov
mov
sbb
cwtl
push
mov
leave
stc
cwtl
pop
mov
cwtl
inc
lods
push
in
dec
dec
jecxz
mov
scas
dec
cld
jo
roll
iret
dec
loope
mov
inc
cwtl
inc
dec
or
push
aam
sub
leave
lock
mov
cld
js
sub
call
inc
push
lds
out
xor
fsubrs
cs
cmp
and
movsb
clc
mov
aas
pop
nop
fldt
sbb
outsl
repz
stos
rcrb
shl
stos
xchg
mov
fldcw
sub
sub
lods
fsubs
fcmovbe
ljmp
push
fmul
mov
dec
arpl
and
inc
sbb
xchg
mov
cmc
lock
xchg
in
sub
rcl
movsb
sub
lds
dec
or
xor
fnsave
iret
pop
or
call
xor
adc
nop
inc
push
jecxz
pop
jns
jo
xchg
repz
jl
mov
sub
adc
mov
mov
sub
sbb
add
sbb
hlt
or
pusha
shll
mov
loope,pt
std
out
rcll
cmp
xor
out
shrb
lcall
loopne
add
cmp
cmp
inc
push
dec
jmp
dec
dec
incb
sbb
into
jmp
jbe
push
add
cld
jecxz
jae
call
in
sub
mov
out
ljmp
sbb
es
or
in
or
mov
pop
jg
jg
mov
test
jo
mov
mov
push
mov
in
pusha
popf
loop
dec
sub
ds
sub
lcall
mov
dec
test
cld
fldenv
or
sub
mov
in
dec
sub
mov
dec
sub
sbb
sahf
pop
or
es
jnp
inc
hlt
jne
cmc
mov
push
xor
jg
inc
sub
pop
das
push
or
sbb
ret
mov
xchg
sub
mov
or
popa
xor
mov
mov
in
jo
add
pop
cmp
cwtl
mov
ds
xor
lretw
aaa
lods
popa
push
bound
mov
adc
cs
outsb
mov
dec
in
jle,pt
nop
cmp
sarl
push
add
pop
js
sub
push
jns
aam
pop
sahf
jbe
imul
cwtl
jo
out
aad
fs
inc
loop
out
cmpb
out
adc
mov
push
loop
mov
push
lret
aam
cwtl
mov
vpsrld
lods
lret
out
not
pop
lret
cld
jne
testl
mov
xchg
pop
mov
fldt
scas
movsb
daa
jecxz
ret
push
outsl
es
lods
or
sub
shl
cmp
shll
xor
shrl
add
cmpl
fs
int
push
cld
adc
and
mov
xchg
push
dec
test
stos
adc
dec
xchg
mov
aas
leave
push
test
sub
int
jl
push
adc
pushf
pusha
scas
imul
ds
cwtl
sub
cs
sub
push
push
es
jo
scas
sub
mov
orb
decl
stc
jo
sti
mov
jne
lret
mov
sub
pop
in
adc
inc
cwtl
xlat
lds
insl
dec
leave
pop
call
in
stos
enter
push
sub
cmpb
in
data16
cwtl
sub
or
scas
sbb
scas
arpl
mov
cwtl
clc
les
test
jbe
mov
addr16
mov
js
cld
inc
xor
push
ds
push
sub
jbe
jnp
jl
pop
jg
sub
dec
data16
pop
jle
outsl
insb
nop
dec
movsb
ja
inc
addr16
js
push
jmp
je
lds
pop
sarl
mov
ss
push
imul
xchg
loopne
sahf
xor
outsl
lods
cmp
mov
xchg
jae
loopne
mov
ljmp
negb
test
mulb
mov
sarl
push
pop
cmc
outsl
lea
fcomps
out
bound
cs
call
out
jl
je
fldt
cmp
repz
stos
inc
inc
pusha
xor
in
aad
outsb
mov
repz
inc
sti
dec
idivl
pop
push
cwtl
outsl
xor
mov
incb
outsb
pop
cmpsl
cmp
pushw
pushl
push
adc
sub
outsb
icebp
call
cmpsb
xor
jo
mov
mov
cld
cwtl
and
push
movsb
jo
push
lret
jmp
push
ret
loope
lods
fwait
jl
daa
and
out
sub
into
jg
fildll
repz
out
or
adc
cmp
jmp
imul
mov
popa
scas
loopne
cmpsb
push
dec
jle
sbb
scas
fs
test
inc
jp
lds
jecxz
pusha
pop
or
cs
test
popa
out
jo
int
mov
jb
movsl
int
push
lds
sti
nop
stos
dec
push
ljmp
imul
inc
mov
lods
pop
imul
call
sahf
mov
add
mov
aaa
dec
les
mov
inc
add
repnz
int
inc
dec
dec
jle
lahf
test
stc
and
dec
pop
push
push
bound
jl
lods
pop
sub
xchg
mov
bound
imul
fwait
dec
sbb
dec
bound
outsl
lret
dec
shll
rcrb
clc
inc
pop
fs
outsb
cs
sub
jl
inc
dec
rcrl
sbb
pusha
ret
outsl
jns
mov
sub
in
jg
ret
call
cld
and
aas
jg
pop
cmp
push
call
dec
dec
movsb
xchg
fs
jnp
push
fcomps
mov
faddl
sti
add
add
push
sub
ljmp
mov
das
cld
enter
ds
cld
leave
sti
or
ss
mov
pop
push
add
xor
inc
insl
fnsave
jp
lcall
out
outsl
leave
push
mov
les
in
pop
inc
xor
mov
mov
js
movd
mov
xchg
dec
int
inc
cs
pusha
pop
push
lcall
daa
cmpsb
cmp
call
clc
iret
adc
mov
pop
filds
clc
xchg
pop
inc
insb
push
shl
jl
sti
sub
mov
xchg
or
shlb
ret
in
popf
fcompl
jl
and
ret
out
nop
and
push
dec
push
out
inc
xor
sub
pop
pop
jo
cmpsl
lods
imul
addr16
xchg
lret
arpl
scas
je
cmp
push
mov
test
push
mov
sub
sub
and
dec
shlb
inc
dec
jp
ret
mov
lock
ficoms
in
aad
mov
push
push
into
sbb
enter
rcrl
jbe
lods
stos
lret
sbb
jp
das
rsqrtps
pop
or
sub
dec
fwait
out
sahf
add
pop
push
xor
pop
mov
sbb
popf
jmp
lods
jno
fldt
or
in
out
add
xlat
push
and
push
bound
or
add
xor
stos
out
sbb
cwtl
dec
sysret
pop
push
pop
cmp
movsl
pop
lahf
ret
xor
push
out
cmp
enter
bound
push
push
mov
popa
push
pushf
jg
ret
mov
dec
mov
int3
add
outsl
pop
push
arpl
sbb
out
minps
pop
or
dec
mov
popf
push
rorl
jno
scas
mov
mov
inc
daa
insb
lods
jbe
dec
fidivrs
loope
push
pop
jle
sti
outsb
int
xor
ds
jle
mov
xor
fwait
cltd
dec
add
mov
mov
push
mov
stos
push
xor
or
dec
scas
cltd
adc
shlb
popa
rolb
in
cmpsl
int3
push
gs
jo
es
loope
pop
rcrl
out
mov
pop
mov
aam
lret
imul
ds
mov
xchg
sbb
sub
repz
ret
add
jns
aad
test
mov
dec
pop
in
push
les
in
and
jo
jns
sbb
jg
and
inc
xor
repnz
movsb
or
lods
sbb
lds
cwtl
add
jo
sbb
or
adc
and
sbb
push
cmp
rorl
or
or
out
in
lock
int3
jnp
shlb
stos
dec
je
dec
or
ss
mov
jl
or
in
scas
xor
mov
cmp
sub
cld
cmp
sub
pop
call
xchg
push
jge
lods
push
or
mov
lods
xchg
shll
lret
jg
cs
cmp
cli
push
cmc
bound
popf
sub
sbb
lret
jbe
dec
push
cmp
ds
movsb
sub
push
fwait
dec
dec
mov
stos
jg
ss
cmp
xor
sbb
popa
js
stc
stos
es
jg
stos
push
or
dec
push
mov
or
lods
push
jp
inc
sbb
cmp
cmp
pop
push
fnstsw
stos
jg
pop
rclb
cmpl
stos
lock
pusha
aaa
or
inc
fabs
cmc
xor
pop
cmp
cmp
lcall
pop
push
lods
mov
pop
or
data16
push
add
mov
jae
cwtl
test
mov
jo
call
xchg
sub
dec
jp
and
add
sub
stos
dec
cltd
adc
sbb
sti
and
jg
bound
mov
or
shll
push
push
aad
mov
add
mov
jae
icebp
pop
divl
inc
sbb
pop
xchg
inc
push
scas
dec
push
and
xor
sub
stos
jne
movsb
push
mov
xor
push
fs
repnz
stos
lret
subl
ja
sub
and
push
cmp
movsb
stos
ret
test
jbe
cmp
add
inc
test
std
push
sbb
hlt
or
adc
int3
outsl
push
out
inc
dec
dec
push
lods
mov
mov
mov
mov
dec
fwait
ja
roll
imul
scas
mov
test
lcall
lret
notl
int
adc
jg
enter
movb
sbb
shrb
test
sub
daa
pusha
ljmp
or
dec
test
insl
repz
sahf
lret
pop
inc
mov
movsb
xor
mov
pop
mov
je
mov
les
dec
jg
jb
cs
or
and
clc
inc
inc
lods
out
scas
imul
push
jp
loope
sahf
int
dec
std
addr16
sbb
jl
inc
cmpsb
shl
fwait
jne
jecxz
and
dec
les
mov
sbb
es
inc
decl
mov
or
mov
call
ret
mov
mov
pop
fidivrs
in
mov
decl
lahf
nop
push
sti
aas
pop
int
xchg
xchg
or
addr16
loopne
scas
iret
int3
icebp
fwait
push
cmpsl
lea
cwtl
stc
jmp
andb
xchg
std
out
inc
fwait
stc
outsb
scas
or
repz
insl
clc
inc
pop
cwtl
jmp
cmp
mov
mov
pop
addl
xchg
fiadds
sbb
jne
xor
jnp
and
or
xchg
pop
rcrl
call
addr16
aam
mov
outsb
and
cli
dec
and
int
insb
aad
rcpps
data16
mov
movsl
rcrb
das
fwait
repz
mov
call
std
cs
lcall
inc
dec
popa
scas
jb
call
rol
or
mov
pop
jo
jge
imul
fucom
xchg
fwait
clc
stc
mulb
movsl
out
lret
jl
ret
xor
lret
xchg
pushf
ja
push
call
sbb
cmp
pop
jmp
mov
int3
mov
call
les
sti
cld
stos
js
pusha
jl
lret
subb
lods
xchg
mov
mov
daa
dec
jle
stos
inc
popf
push
inc
lock
add
mov
sbb
jecxz
leave
pushf
mov
pop
xor
jbe
lret
imul
jp
mov
addr16
xor
mov
popf
mov
push
test
push
js
sub
scas
cld
ror
nop
sbb
mov
mov
adc
cmp
inc
inc
fwait
mov
jecxz
loop
mov
cli
decb
pop
leave
pusha
pop
stos
inc
mov
sbb
je
push
subb
clc
jle
movsb
aad
cwtl
mov
outsb
clc
sbb
xor
ja
jo
into
sarl
cmpsl
in
test
cmp
cmp
push
stos
mov
mov
push
dec
inc
pusha
lret
push
jmp
stos
xlat
in
test
out
nop
pop
adc
sbb
mov
mov
jl
xor
dec
or
pop
mov
and
or
in
push
stc
bound
push
and
or
frstor
test
arpl
mov
dec
dec
pop
loop
fwait
decb
xchg
pop
jp
imul
out
stos
shrb
lds
sbb
jecxz
scas
pop
add
push
leave
xchg
sbb
dec
jae
sub
in
jns
inc
loopne
js
xchg
add
imul
bound
sub
or
movsb
push
dec
movsl
xchg
adc
inc
xor
in
std
std
cmp
or
in
sub
push
sbb
fldenv
dec
jp
les
inc
sub
nop
dec
push
mov
ja
lods
shll
es
inc
icebp
in
cmp
jecxz
mov
push
mov
jle
fwait
or
inc
jo
push
and
xorb
lea
inc
mov
adc
aas
sbb
push
dec
call
mov
push
call
aam
or
add
call
pop
mov
fldcw
push
xor
xor
test
mov
hlt
jge
fcmovb
loope
cmp
test
aaa
filds
pop
ret
sub
or
mov
pop
cmp
outsl
mov
rcrb
dec
test
pop
nop
and
pop
mov
adc
cmpsl
daa
lahf
inc
adc
cmpsb
push
lock
iret
or
and
aad
les
sarl
inc
jo
or
bound
dec
movsb
mov
xchg
jmp
arpl
mov
sbb
dec
pop
fnsave
xor
aad
xchg
fstps
divb
mov
xor
repz
insb
xchg
jg
add
filds
sub
xchg
sub
and
pop
je
imul
pop
inc
mov
xchg
dec
stos
repnz
add
mov
sub
mov
jbe
pop
and
jecxz
loopne
xchg
rol
data16
in
dec
sub
ret
mov
push
jp
sub
out
xchg
add
call
call
pop
cwtl
sti
stos
xchg
outsb
xchg
in
mov
decb
lret
lds
daa
or
lcall
call
out
lds
aaa
jle
cmp
pusha
sub
mov
mulb
or
cld
fwait
push
into
repz
sub
lock
mov
and
int3
ja
scas
in
cwtl
push
insb
mov
pop
cli
dec
or
outsb
pop
jmp
cld
ret
iret
mov
std
aam
lock
push
dec
mov
frndint
cmp
sti
mov
rorl
or
iret
movsl
and
dec
popa
dec
push
sbb
xchg
mov
jne
pop
lds
push
int
pop
jmp
sbb
dec
or
push
call
xor
inc
push
cmp
mov
out
mov
xor
cmpb
push
rcll
xor
pop
insl
jl
sub
jge
sub
outsb
and
mov
pop
scas
xlat
mov
enter
dec
nop
scas
aas
ds
xlat
push
lds
stos
jbe
mov
aas
push
jne
jl
jb
dec
int
subl
xchg
dec
or
fidivl
lahf
lidtl
cld
jae
das
shll
cmp
cmp
movl
cmp
xor
pop
jge
xor
pop
mov
mov
in
xor
outsl
mov
jge
mov
movsb
mov
scas
jne
mov
fwait
popa
sub
mov
ja
mov
ds
mov
mov
int3
adc
push
inc
pop
outsb
sarl
push
dec
push
pop
cmp
fsubs
sub
sbb
jge
addr16
leave
mov
and
jb
scas
hlt
pusha
lds
inc
pop
pop
lock
imul
inc
int3
test
dec
mov
push
dec
dec
xchg
jnp
nop
out
push
jns
and
in
sbb
push
mov
sub
or
fsts
jns
add
daa
test
lods
or
test
jmp
push
mov
pop
ds
or
in
sbb
ffree
jg
inc
mov
out
jb
mov
xor
cltd
jne
xchg
and
fiadds
ret
movups
enter
adc
pusha
xor
test
mov
xchg
in
out
into
pusha
xchg
jge
push
addr16
pop
dec
fwait
insl
inc
xor
xchg
out
pusha
repz
dec
outsl
js
push
push
out
incb
pop
inc
in
dec
outsl
shll
sub
ret
into
push
iret
nop
cmpl
inc
push
xchg
jnp
test
push
aaa
sti
adc
les
and
data16
cmpl
loop
sti
or
inc
rolb
add
push
sub
jle
sbb
sub
inc
xchg
stos
sbb
test
pop
data16
jle
cs
bound
dec
data16
sub
int
sbb
and
and
pop
pushf
wbinvd
push
ret
jns
dec
push
ret
test
dec
imul
inc
push
loopne
cltd
cmp
pop
jle
and
popa
or
inc
mov
jmp
and
lahf
lretw
rcrb
and
pop
pop
sub
mov
push
xor
cmp
inc
test
fs
inc
aaa
inc
and
aam
push
popf
mulb
xchg
or
lods
in
movsl
jb
mov
scas
stos
in
jp
xor
xchg
js
call
fdivrl
mov
ret
mov
shlb
push
aaa
mov
mov
mov
xor
xchg
add
mov
mov
lret
scas
xchg
roll
mov
hlt
mov
jb
aaa
insl
idivl
outsl
mov
ja
aam
cwtl
daa
adc
mov
adc
sbb
dec
pop
add
inc
cli
ret
push
inc
fcmovnbe
inc
jmp
data16
pushf
addr16
mov
push
in
sub
stos
dec
cltd
out
aaa
aam
jno
test
enter
les
jg
insl
arpl
dec
mulb
xchg
loop
xor
daa
popf
xchg
std
movsl
lock
mov
aad
dec
xor
outsb
push
int
adc
push
inc
mov
xor
mov
add
pusha
enter
js
push
lock
sub
ss
and
push
mov
and
adc
push
hlt
or
or
sub
lods
push
mov
mov
cwtl
cs
imul
shll
inc
and
cwtl
mov
mov
cmpsb
shll
ljmp
jp
jbe
sub
outsl
call
out
inc
in
lahf
clc
xor
sahf
lds
aaa
dec
fwait
outsl
scas
stos
inc
jle
mov
ret
xor
test
inc
sbb
les
jbe
xorb
int
sbb
xchg
inc
mov
out
or
sbb
xor
inc
sub
inc
cmpsl
orb
sbb
and
aad
and
cld
mov
outsb
and
sub
das
cmp
dec
pop
stos
or
mov
iret
in
in
push
inc
push
cmc
das
std
mov
or
out
pop
dec
jae
pusha
jb
cli
jp
mov
xor
ja
adcb
imul
dec
ss
pop
cmp
lds
insb
adc
movsl
mov
stos
mov
cs
pop
xchg
pop
fidivrs
es
pop
xor
fidivrs
lea
mov
or
fbstp
push
int
les
push
mov
into
inc
into
orl
push
dec
icebp
in
sub
popf
pop
mov
pop
fnstsw
inc
cmp
imul
in
insb
mov
outsl
repz
pop
push
or
sub
outsb
mov
and
scas
stos
adc
aas
data16
rorb
jbe
pop
dec
repnz
jmp
mov
outsl
call
data16
js
pop
add
cmp
faddp
dec
mov
or
daa
jp
sub
and
cli
lods
jp
inc
pop
pop
pop
enter
daa
mov
add
sbb
icebp
fildll
sbb
movsl
pop
dec
mov
lods
leave
lret
popf
ja
les
cmp
shld
sub
stos
pop
push
test
add
push
addr16
and
add
ret
icebp
xchg
adc
adc
sbb
pushf
xor
pop
jbe
xor
mov
sub
mov
fs
out
mov
and
xchg
xor
inc
stos
int3
push
or
cmc
push
div
mov
jnp
rorl
and
push
pushf
stc
pushw
arpl
xor
xor
es
lret
scas
fbstp
popf
mov
stos
mov
das
mov
nop
or
pop
push
mov
push
mov
pop
cmp
jge
repz
addr16
clc
pop
and
cmovl
dec
sub
inc
mov
test
es
mov
sub
cmp
or
dec
loopne
popa
mov
adc
in
sbb
test
lret
fmul
mov
inc
xor
data16
or
imul
scas
xchg
les
cmp
or
pop
cltd
adc
shlb
cmpsl
js
and
fwait
jmp
loope
add
repz
inc
insb
shl
stos
inc
inc
stos
push
cmp
sti
adc
or
jno
shlb
jl
xchg
pop
cld
push
adc
push
push
cmp
cmp
clc
jmp
icebp
push
cmovbe
push
call
mov
jmp
mov
aam
es
cmp
push
and
jp
stos
sahf
push
push
inc
int3
pop
jg
lds
push
pop
incb
sbb
adc
mov
inc
cli
mov
pop
out
loopne
call
arpl
fisttpll
sub
xchg
push
sbb
outsb
xor
bound
xchg
ss
push
int
lret
je
mov
les
mov
jge
in
cltd
enter
addr16
and
fwait
mov
negl
cmp
or
ss
iret
stos
sbb
jae
test
adc
std
scas
mov
cmc
test
push
imul
out
mov
call
int
cmpsb
mov
ja
push
sub
setl
fistpl
aas
jne
scas
enter
xchg
jl
fimull
mov
int
cmp
jl
adc
outsl
adc
inc
sub
adc
hlt
shll
pushf
push
int3
jl
push
sub
daa
xor
or
mov
or
inc
arpl
orl
sub
push
in
enter
test
mov
movsl
loope
mov
push
push
cmp
push
les
outsb
pop
jae
aad
daa
insl
notl
sti
in
dec
jg
lea
inc
mov
scas
jle
add
jne
imul
shl
adcl
repnz
je
mov
inc
adc
js
sarb
add
dec
jns
jo
jo
mov
sbb
push
aas
js
push
stc
arpl
movsb
adc
pop
repnz
cmpsl
cli
or
out
dec
inc
push
push
xchg
xor
sbb
inc
out
fmuls
jne
test
mov
push
pop
cwtl
and
movsl
push
sub
push
jp
inc
sar
scas
push
or
jg
das
xor
xchg
adc
adc
les
and
xchg
mov
into
adc
loop
pop
xchg
sub
pushf
test
pop
in
mov
xor
lods
mov
in
push
sub
sub
sbb
nop
adc
lods
das
outsl
inc
cmpsb
fwait
or
loopne
adc
dec
ret
std
adc
imul
mov
jg
inc
lock
dec
or
pop
fdivrp
push
cli
pop
pop
test
jg,pt
test
jno
jnp
out
mov
push
and
sub
cld
pop
add
test
sbb
cwtl
and
popa
pop
sti
shl
or
or
sub
cli
idivb
clc
cs
outsl
lret
fidivs
and
sbb
pop
push
jmp
push
jp
dec
fadd
ret
sbb
sbb
iret
add
rcl
test
sbb
jle
sbb
sub
fildll
cwtl
jo
sti
inc
jg
pop
std
daa
pop
inc
xchg
jp
sar
and
in
pop
jne
mov
pop
popa
mov
movl
push
popa
add
or
cs
xchg
jle
xchg
jmp
pop
pop
adc
rolb
inc
enter
mov
loope
adc
std
cltd
or
int
ss
cmp
mov
inc
rcrl
add
in
pop
add
pop
das
cmc
int
imul
test
dec
xchg
in
jp
int
push
push
adc
jbe
stos
pusha
sarb
lods
repz
lret
jge
adc
lret
addr16
mov
dec
adc
and
pop
adc
jmp
scas
xchg
and
cmp
repz
cmpsb
cmpsb
adc
inc
adc
pushf
sbb
dec
lcall
jbe
cmpsl
push
bound
out
cmp
adc
cmp
addr16
aas
jmp
arpl
sub
pop
add
jmp
or
xchg
mov
fucomip
negl
imul
fs
jb
jecxz
jo
inc
mov
push
sbb
lds
and
test
xor
loope
sub
dec
dec
lret
sub
push
mov
sub
dec
dec
cltd
lahf
inc
inc
or
movsl
xchg
shll
xchg
repz
inc
ds
xor
sub
jbe
js
fwait
mov
pop
negl
fstps
outsb
sbb
push
dec
lret
inc
xor
pop
popf
mov
iret
adc
fcmovnb
jle
push
cmp
outsl
fs
ljmp
mov
jle
adc
pop
jnp
xchg
sbb
inc
pop
dec
cmc
jge
push
pop
stos
iret
je
dec
pop
outsb
add
fs
sbbb
inc
fcoms
ljmp
jecxz
or
bound
repz
jmp
movsl
sbb
js
mov
mov
ljmp
scas
cli
jl
lock
repnz
imul
ss
stos
pop
out
ror
push
and
cli
push
jo
lahf
push
cld
testb
ljmp
xlat
sub
inc
push
inc
dec
push
addr16
xor
mov
cmp
int3
ret
and
adc
sub
cmp
mov
loopne,pt
addr16
add
push
xchg
jg
lods
lea
cmp
and
dec
outsb
jg
adc
or
lret
mov
outsb
adc
repnz
push
mov
push
scas
shlb
fdivrs
movsb
das
and
shlb
ret
sbb
mov
mov
outsb
imul
popf
stc
fmull
cmpsb
jle
dec
sbb
mov
lods
or
jne
pop
pop
mov
xchg
addr16
popf
xor
movsb
daa
cmp
repz
xchg
pop
mov
or
pop
mov
push
data16
movsl
out
inc
scas
cmp
jnp
ret
mov
dec
pop
pushf
rorl
outsb
inc
jp
dec
add
xlat
mov
push
sub
add
pop
mov
out
or
sbb
int3
shlb
in
out
inc
jg
addr16
negb
stos
stos
aas
dec
jae
test
enter
enter
ret
movsl
lret
pop
fcompl
add
ret
call
les
lods
mov
rolb
dec
test
xorl
jb
adc
or
je
into
dec
aam
sub
into
xchg
ds
jmp
out
outsb
out
fstpl
je
push
imul
mov
cmpl
dec
add
call
add
pop
pusha
sbb
outsl
pop
xchg
sbb
sbb
int3
sbb
mov
sbb
fs
inc
aam
xchg
ror
imul
out
ljmp
mov
mov
mov
je
jnp
mov
pop
pop
inc
or
push
mov
jl
mov
daa
das
ret
jnp
mov
movsb
and
xchg
mov
jg
iret
stc
out
sbb
pop
xchg
add
dec
jmp
sarb
mov
pop
pusha
pop
push
js
push
mov
sub
inc
movl
jb
dec
xchg
xor
out
push
pop
xchg
les
outsl
out
subl
hlt
js
jmp
cld
mov
inc
mov
dec
jg
movsl
cmpsb
cwtl
data16
and
dec
inc
inc
sub
int3
je
lods
jp
xor
testb
jl
mov
mov
push
gs
in
cs
in
in
jmp
outsb
pop
dec
js
mov
icebp
sub
outsl
out
pop
add
sti
mov
gs
mov
subl
test
and
mov
sub
shll
xchg
push
dec
nop
outsb
outsb
sbb
mov
mov
sub
fucomp
mov
inc
cmp
cmpsb
mov
jmp
imul
push
das
scas
cmp
sub
mov
cmpsb
clc
push
into
pushl
out
out
mov
arpl
pushl
test
mov
or
in
or
dec
insl
ja
iret
xor
sub
les
scas
fsubl
in
xchg
or
nop
popa
jae
add
ljmp
xchg
jp
fwait
pop
jae
dec
out
push
cmc
jl
inc
pop
outsb
aaa
stos
and
int3
gs
out
jp
jp
repnz
adc
add
jp
push
jp
mov
and
xchg
mov
scas
loope
fwait
ja
data16
pop
out
pop
mov
pop
in
and
jmp
stos
inc
jno
xlat
mov
add
popf
jns
xor
or
mov
stos
pop
push
hlt
xlat
addr16
inc
pop
mov
inc
ror
out
mov
push
sbb
scas
lret
rcrl
mov
xchg
jmp
popw
test
inc
sbb
js
fistpl
in
clc
push
cli
pop
mov
mov
inc
add
jmp
push
inc
pop
mov
jg
mov
and
popa
sbb
sub
mov
sub
dec
push
cmp
out
rol
push
and
push
push
mov
pop
stos
cwtl
cmc
jge
xchg
outsb
cmpsl
fwait
mov
push
test
notb
gs
or
jno
and
push
jbe
jno
sbb
sti
mov
dec
hlt
sub
ljmp
cwtl
mov
daa
mov
dec
out
fs
call
les
pop
lods
pop
push
out
js
icebp
or
dec
ja
or
int3
add
idivl
jg
xchg
jne
add
mov
jbe
iret
fisubrs
popf
cs
xchg
popf
adc
sub
lods
push
jae
add
push
cwtl
lea
jb
pushf
push
mov
int
or
jp
mov
cli
inc
pop
jb
in
adc
dec
imul
iret
push
mov
daa
adc
mov
pop
shrb
test
cld
pop
jbe
jo
stos
in
movsb
jb
addl
pusha
std
jb
jle
in
sti
inc
push
rcrb
mov
cmp
dec
cwtl
leave
out
unpckhps
int3
cwtl
ja
mov
jle
or
das
psrlq
fs
and
call
stos
rcrb
sbb
jl
pcmpeqd
data16
stos
mov
dec
sbb
xchg
cwtl
xor
add
data16
add
add
add
outsl
sarb
pop
cwtl
adc
in
pop
dec
lods
pushf
in
mov
jecxz
mov
cmc
gs
testb
js
sub
in
jnp
mov
xchg
loop
lcall
mov
dec
pop
push
popa
inc
insb
sbb
scas
jl
push
pop
fwait
call
mov
icebp
inc
inc
inc
daa
test
pop
jb
pop
outsb
mov
inc
mov
jecxz
add
sbb
push
push
cld
sub
mov
xlat
cmpsl
je
ss
mov
sbb
lods
pop
addr16
xor
out
outsb
mov
imul
fbld
enter
enter
cmpsb
push
enter
nop
or
cmp
add
cmpsb
fiadds
adc
dec
stos
inc
jle
rorl
bound
xrstor
imul
sahf
fists
xor
inc
mov
cmp
cmpsl
or
and
rep
rcrb
popa
pop
cmc
imul
stos
dec
jbe
add
xchg
adc
jmp
inc
cwtl
call
pushf
inc
xchg
xchg
cli
fwait
dec
jmp
lods
push
jge
sqrtps
inc
or
dec
sbb
sbbb
movsl
mov
into
pop
call
outsl
xchg
inc
aaa
movb
mov
pop
cmpsl
and
scas
test
dec
pop
xchg
push
fs
and
cld
xlat
sbb
test
dec
and
jnp
pop
pop
jb
rep
jb
arpl
ficomps
fdivrs
pop
dec
rorb
daa
inc
out
pop
bound
imul
test
fdiv
hlt
in
push
popa
pushf
aad
jbe
lods
dec
nop
adc
cmc
mov
shll
cs
stc
lret
leave
popa
pop
sbb
push
aad
ret
pop
adc
imul
push
xor
mov
rcll
push
xor
push
push
loop
push
dec
xor
addl
dec
bound
pop
cmp
ficoms
addr16
jbe
imul
inc
inc
sub
call
dec
mov
outsb
xor
mov
xchg
lcall
int
outsl
jnp
into
mov
repz
adc
sub
cld
push
fstpt
sub
add
push
and
cmp
cs
jo
mov
mov
fs
dec
xlat
and
cltd
inc
das
lods
mov
les
stos
les
aas
push
pop
lods
loope
pop
push
push
push
xor
push
aam
shll
pop
mov
pusha
scas
lcall
xor
sub
fwait
push
fdivrs
test
bt
repnz
dec
in
sub
xchg
jge
or
or
jmp
and
push
push
outsb
das
fwait
add
mov
sbb
dec
dec
jg
or
popf
out
cmp
cmc
jle
xor
push
pop
arpl
subl
dec
inc
das
jnp
jno
inc
jle,pt
push
dec
sti
popf
mov
push
push
cmp
mov
lock
addr16
push
push
mov
dec
push
adc
inc
lods
cmpsl
mov
clc
scas
push
sbb
and
pop
and
xchg
and
hlt
loop
lret
jbe
dec
idivl
push
jbe
les
addl
mov
mov
mov
out
out
scas
fcmovbe
lahf
out
sbb
fs
leave
arpl
adc
scas
cltd
in
sbb
sarb
jnp
push
movsl
ret
dec
mov
push
mov
gs
sbb
sbb
adc
test
sbb
lcall
inc
aas
xchg
lret
shll
cmpsl
out
ljmp
sub
xor
mov
lea
xchg
shll
test
arpl
mov
ret
xor
xor
outsb
fsubs
out
inc
mov
inc
daa
cwtl
mov
aad
mov
or
cld
pusha
lods
testl
mov
xchg
pop
outsl
cwtl
hlt
push
sub
andl
jle
inc
ds
scas
leave
mov
add
cmp
decl
pusha
stc
or
stos
xlat
and
out
push
call
push
sub
out
call
dec
dec
jl
mov
mov
dec
out
mov
ffreep
push
mov
lahf
cmp
shlb
pop
inc
lock
stos
and
stc
sti
xchg
inc
inc
cmp
pop
popf
cmp
loopne
mov
inc
xchg
or
dec
jmp
mov
adc
xor
scas
jle
or
les
nop
cmpsb
out
dec
pop
incl
in
rolb
out
ds
jg
aad
test
push
or
shrb
imul
imul
inc
add
test
pop
jecxz
push
mov
std
inc
icebp
mov
and
iret
sbb
jg
mov
pop
and
cmp
stos
lds
xchg
mov
sbb
lret
push
mov
mov
inc
fsubr
push
popa
add
xor
mov
scas
jo
mov
sbb
adc
xor
xor
in
out
shrb
add
das
imul
cmp
sahf
dec
sub
lods
out
shrb
jmp
popa
js
jns
shlb
in
mov
hlt
push
push
test
in
xor
repz
out
sub
push
call
js
inc
xor
mov
mov
ret
scas
dec
adc
and
ret
xchg
mov
popf
lods
mov
add
xchg
sti
dec
addl
adc
subb
hlt
aad
ljmp
ret
scas
sti
mov
aas
mov
pusha
sbb
mov
mov
xchg
lret
mov
inc
lcall
sbb
fadds
cs
adc
push
data16
daa
aad
adc
push
js
xor
add
cmpl
sbb
test
ret
sbb
lret
sbb
std
inc
les
dec
sbb
cs
dec
and
sub
outsl
push
loopne
sub
js
fsubr
dec
out
sbb
mul
adc
sub
cmpb
mov
inc
push
jae
and
cmp
icebp
lea
or
scas
inc
scas
xchg
pop
cld
icebp
data16
fs
lock
and
jle
xor
mov
imul
cmp
jg
leave
sub
stos
dec
jnp
movsb
sbb
sbb
push
daa
outsb
jg
jmp
sub
in
mov
arpl
or
dec
out
mov
loopne
push
sub
imul
sub
sbb
dec
mov
mov
cli
aad
lcall
dec
adc
cs
lods
jo
push
mov
inc
ret
dec
xchg
mov
cmp
test
and
inc
pop
sbb
cltd
inc
cmp
rcrl
and
fcompl
iret
je
cld
mov
xchg
push
pop
mov
dec
adc
mov
divl
enter
in
jle
xor
dec
loop
negl
cwtl
in
or
popa
xrelease
outsb
popl
insl
xchg
mov
and
lds
jle
cwtl
cld
add
loopne
cmp
xor
in
push
jmp
sub
fidivrs
jecxz
cwtl
xchg
push
sub
out
mov
xchg
out
add
adc
scas
sub
fs
aaa
push
rorb
cmpsb
hlt
mov
add
aad
psllq
dec
mov
dec
scas
jb
mov
movsl
icebp
or
into
in
adc
pushf
xchg
dec
shrb
mov
xchg
inc
lret
ucomiss
cld
mov
outsb
pop
xchg
add
and
int3
scas
clc
jno
rcll
xchg
fisttpll
inc
rcr
cli
dec
add
push
aam
test
bound
subb
pop
repnz
dec
gs
mov
mov
mov
mov
or
push
imul
icebp
inc
test
mov
jp
mov
xchg
and
jo
jb
jl
xor
ret
push
test
divl
das
sbb
outsb
dec
pop
xor
and
mov
sbb
jne
sbb
daa
jnp
mov
cwtl
cli
pop
outsb
pusha
and
scas
pop
jmp
push
adc
cmc
mov
or
pop
push
iret
cmpsb
jl
aad
push
pop
out
fs
fidivrs
xchg
outsl
arpl
push
dec
idivb
lahf
fdivrl
pushf
push
mov
stos
dec
dec
sti
mov
dec
jg
jbe
mov
inc
mov
push
push
lahf
js
test
pop
repnz
out
and
repz
jo
fwait
out
test
xor
dec
and
inc
dec
push
and
add
bound
push
std
ss
and
negl
and
ds
jb
cmpsb
daa
int3
mov
aam
enter
dec
and
sub
adc
rcll
loope
pop
inc
das
cwtl
sub
dec
out
out
aaa
mov
fbld
cs
cwtl
sub
out
inc
cwtl
push
pop
cmp
pop
cwtl
ret
cwtl
mov
out
push
mov
in
adc
dec
aaa
mov
cmc
rolb
mov
mov
ss
or
scas
or
sbb
jge
inc
dec
pop
jp
test
push
xchg
push
pop
pop
shrl
shll
dec
aad
mov
outsb
cld
popf
inc
push
sbb
leave
jo
pop
dec
mov
rorb
popf
stos
jmp
testl
movsb
cmp
adc
cld
pop
mov
addr16
xchg
dec
mov
jne
mov
or
pop
clc
jmp
jo
xchg
sbb
push
adc
aaa
xchg
mov
outsb
mov
jg
mov
in
lods
pusha
add
fs
jg
jl
ds
mov
cmp
test
addr16
jle
dec
sub
dec
sub
mov
jg
dec
test
stos
pop
cmp
push
sbb
cmp
push
sub
sar
push
out
sbb
loopne
outsl
test
outsl
out
call
mov
imul
out
jl
jg
imul
sub
mov
mov
subb
popa
xorb
outsl
int3
ja
rclb
sub
fs
jnp
pop
fisubrl
sbb
ret
jl
enter
icebp
jnp
jnp
outsl
fwait
lock
lods
sbb
push
dec
jle
les
outsl
xchg
dec
mov
jg
lods
stos
imul
lock
out
and
je
push
out
inc
push
mov
jne
test
push
or
in
xchg
push
pop
mov
pop
inc
push
add
in
and
cld
arpl
xchg
xlat
mov
adc
arpl
dec
push
dec
jle
push
out
sbb
fidivs
mov
sbb
js
jp
jbe
xchg
test
gs
or
jg
cld
sbb
imul
imul
popf
cmc
repz
imul
sbb
gs
sub
cmp
fldcw
ja
iret
imul
mov
lea
add
in
pop
push
dec
das
rcrb
push
popa
mov
mov
js
sbbb
mov
jp
into
inc
and
xchg
sarb
popa
dec
jbe
dec
and
sub
pop
pop
jg
loopne
push
cld
popa
and
sub
pop
push
stc
push
push
fs
clc
or
inc
in
push
sub
out
cmp
xor
mov
sarl
dec
test
cmpsl
imul
ret
and
cld
aaa
aaa
inc
push
push
out
mov
test
movsb
imul
or
mov
and
subl
xchg
mov
pushf
xor
add
bound
fwait
in
rol
sub
cmpsl
push
aas
jp
mov
imul
jno
sarl
leave
mov
je
fadds
add
push
idivl
clc
rcrb
cs
cmp
pop
aam
jne
pop
inc
iret
mov
push
loope
pop
sbb
push
repnz
push
aam
jne
mov
xlat
jge
pop
mov
cld
xor
push
iret
sub
pop
popa
mov
mov
mov
inc
push
outsl
sbb
fiaddl
jb
pop
xor
pop
fs
lahf
insl
out
adc
rcrb
outsb
fbld
pop
push
xor
sbb
add
jo
imul
mov
imul
je
mov
dec
nop
sub
scas
push
lahf
jg
jo
mov
cmp
xchg
hlt
clc
imul
xchg
pop
loope
xchg
or
in
imul
xchg
add
stc
jmp
cwtl
test
aad
cli
nop
sbb
je
mov
xorl
and
mov
and
and
pop
lods
sub
sti
cmovbe
fs
lret
cmp
repz
es
inc
mov
fcomps
adc
inc
add
shll
idiv
out
lea
je
push
mov
mov
sub
js
subl
sub
ss
xor
ds
dec
fisubs
dec
mov
dec
ficoms
xor
push
and
push
jb
or
dec
cli
or
movl
adcb
int
dec
arpl
arpl
pusha
ret
xchg
je
push
dec
fwait
mov
jl
mov
scas
sbb
pop
sbb
sbb
dec
mov
in
sub
sub
ds
inc
ret
push
out
lock
cmpl
repz
xor
mov
aad
cmp
or
sbb
pop
jl
xchg
or
in
mov
or
pop
push
repnz
in
insl
out
cmp
dec
stc
push
lods
cmpsb
jmp
adc
pop
ret
pop
push
cmp
rcll
nop
xchg
popa
ljmp
cmp
sub
bound
xchg
and
loopne
add
dec
pop
sarl
int
push
into
push
mov
mov
cld
push
add
in
dec
mov
jp
push
jp
dec
out
ret
adc
xor
test
adc
fstps
dec
dec
mov
lcall
jb
sbb
lods
cwtl
movq
xchg
jb
jo
dec
enter
push
call
je
out
lock
pop
fsub
test
insl
or
popa
cmp
inc
repz
lods
loope
jns
sbb
dec
fs
sbb
fprem1
mov
pusha
into
push
sbb
out
cli
shll
and
xor
in
outsb
outsl
pushl
imul
add
fs
xchg
or
aaa
cmc
adc
pop
pop
daa
arpl
outsl
mov
mov
pop
push
push
push
inc
ss
push
loopne
push
jns
loopne
pop
sbb
mov
frstor
cmpsb
jb
inc
ja
push
push
jl
js
loop
adc
mov
mov
test
insl
es
cmpsl
mov
test
in
data16
outsb
out
mov
dec
cld
pop
stc
dec
sbb
idivb
call
std
stos
leave
outsl
cmp
adc
dec
inc
scas
lret
repnz
push
push
call
mov
mov
out
xchg
and
cmp
decl
and
leave
sbb
or
dec
adc
inc
and
out
sti
daa
in
sub
dec
rorl
mov
or
mov
das
shl
imull
pop
sbb
xchg
jge
mov
mov
mov
and
in
cmp
fisubs
cmp
data16
or
xchg
dec
pop
scas
inc
sti
test
data16
in
inc
testl
jg
mov
cmp
ds
aam
dec
add
dec
imul
fstpl
je
inc
hlt
mov
imul
dec
ds
in
dec
and
or
and
push
cld
pop
sub
stos
inc
dec
outsb
fisubrl
out
add
stos
addr16
push
cmpsb
lcall
xor
cmpsl
dec
mov
or
mov
popf
test
or
mov
shr
mov
mov
lock
pop
lret
addr16
mov
or
imul
in
jmp
pop
stc
sarb
ljmp
pop
mov
jle
icebp
test
js
sti
push
into
fadds
fs
in
bound
outsb
ja
sbb
mov
test
out
das
int3
loope
out
push
jmp
sbb
sub
scas
adc
dec
xchg
pop
icebp
xor
repz
sub
mov
outsl
and
imul
into
adc
outsb
lods
cmc
push
out
inc
orb
stc
cltd
adc
xchg
loopne
pusha
enter
adc
jmp
into
lea
les
pop
pop
dec
arpl
fisubrl
lahf
dec
das
dec
cs
dec
inc
cmc
cmp
inc
push
dec
arpl
lods
int3
inc
jb
lods
push
dec
movsl
adc
mov
inc
mov
in
fcoml
pop
xor
test
stc
imul
push
sahf
cli
scas
dec
arpl
out
fdivr
fidivs
add
test
dec
mov
jp
aam
pusha
je
stos
xor
jg
or
mov
icebp
push
xchg
adc
and
and
out
test
sub
inc
into
idivb
sub
in
in
ret
sbb
xchg
stos
shll
push
sub
out
mov
pop
pop
sbb
inc
dec
in
jle
divb
mov
ss
cmp
test
pusha
pop
mov
mov
daa
cmp
jne
ja
sub
jne
call
lock
mov
fs
push
sbb
cmp
outsl
sti
adc
stc
mov
xor
leave
xchg
stc
and
repz
outsb
inc
lock
xor
xor
imul
cmpsb
xchg
pop
popf
sar
mov
stc
dec
jge
jb
loope
jae
push
mulb
cs
pushl
rolb
inc
pop
repnz
push
jmp
cmp
and
pop
push
insl
jl
shlb
sbb
mov
jb
add
inc
mov
xor
ret
and
push
cmp
movsb
rolb
jl
shr
push
cld
ss
xor
dec
and
xor
inc
jb
fisttpll
pop
mov
sbb
cmc
fists
cs
leave
dec
pop
testb
pop
ret
out
fistl
les
xchg
lcall
lock
jb
int
shl
mov
das
test
fld
lods
call
sbb
js
dec
xchg
aam
and
cs
fists
fwait
mov
inc
xor
cli
mov
add
loope
test
or
mov
aad
in
mov
xor
in
cmp
inc
cs
sarb
xorb
out
mov
and
mov
dec
dec
cmpsb
movsb
in
jmp
jg
dec
iret
inc
dec
xor
test
addr16
jg
mov
cli
dec
lret
movsb
fistpll
dec
cmpsl
sbb
test
ja
int
leave
jle
dec
inc
movsb
inc
imull
mov
movsb
leave
int
xor
dec
mov
out
xor
packssdw
out
loope
dec
lods
scas
pop
dec
pop
dec
int
mov
push
sbb
mov
rolb
or
sbb
push
cwtl
rcl
sar
push
call
xchg
xchg
sahf
pop
sti
xchg
pop
rcrb
popf
push
popf
or
jp,pn
dec
mov
outsl
idivl
mov
dec
sbb
movsb
ficomps
push
jbe
sub
sbb
and
cs
les
sub
loop
cmp
adc
test
clc
sub
mov
or
iret
push
aas
or
in
push
gs
test
fsubl
mov
mov
cmc
dec
or
test
addr16
jle
dec
and
mov
ret
test
scas
jle
dec
test
out
int3
cvtdq2ps
sarb
mov
xor
out
scas
jae
test
pop
out
loope
popf
pop
xor
scas
dec
mov
popf
movsb
arpl
inc
push
stc
outsl
push
fcmovb
into
dec
std
in
sub
add
push
bound
xchg
iret
mov
leave
out
jl,pn
inc
mov
push
cmp
in
pop
dec
inc
into
sbb
pop
mov
jl
fwait
fs
adc
sbb
test
test
sbb
push
cmp
mov
decl
dec
scas
jmp
sbb
mov
popa
jnp
inc
xor
pushf
cmp
adc
mov
outsl
shl
push
inc
jg
xchg
test
outsl
push
sbb
cmp
jl
cmc
add
icebp
cmc
jge
aad
pop
xor
test
gs
push
movsb
cmc
dec
ljmp
je
push
mov
imul
inc
out
cmpsl
mov
stc
or
push
dec
push
dec
inc
xor
jbe
add
mov
cmpsb
les
xchg
mov
mov
movsb
aaa
fs
dec
scas
fs
pop
in
scas
loopne
fwait
dec
jg
push
jmp
sub
sub
or
rorb
lock
xor
insb
pop
mov
push
push
and
ljmp
push
push
pop
or
daa
in
sahf
pop
adc
cmpsl
xlat
sub
loope
lret
sbb
out
sub
and
mov
cmp
add
insl
mov
rcr
cs
fstpl
and
orl
loop
inc
in
xor
sub
mov
jl
cmp
adc
and
xchg
aaa
jp
ret
out
out
cltd
subb
sbb
shlb
fs
fdivrp
cmp
lret
cmp
pop
mov
sbb
fimuls
int3
sbb
loop
paddusw
fidivl
fnclex
dec
or
imul
dec
xor
out
sti
sbb
lock
loope
sbb
je
mov
cmp
pop
mov
add
cmp
cs
repz
ss
imul
dec
arpl
test
sbb
mov
adc
jae
les
pop
mov
psubw
lods
jmp
xchg
jbe
das
cmc
dec
in
inc
pop
xor
out
pop
push
daa
sti
aad
mov
cmp
mov
dec
addr16
popf
jle
mov
or
jle
mov
leave
daa
adc
ljmp
call
arpl
fstl
xchg
jp
inc
pop
out
mov
rcll
pop
sub
ret
fwait
jp
bound
sbb
test
add
mov
sub
ljmp
lods
and
push
or
add
loopne
push
dec
in
jnp
push
xor
imul
iret
xor
add
or
and
or
scas
mov
inc
cmp
adc
jg
cmp
insb
mov
test
jl
fs
int
ds
cli
mov
dec
cmpb
inc
hlt
mov
jbe
xchg
mulb
lds
mov
imul
push
xor
and
test
out
fstpt
push
stos
jg
push
mov
mov
xor
mov
mov
dec
leave
mov
cmp
jl
in
por
fs
loope
imul
loopne
jle
inc
call
in
push
jl
sub
xor
sub
push
or
push
icebp
cmp
mov
jae
mov
mov
sbb
mov
cmp
cmp
notl
jne
ja
test
loope
jns
popf
mov
cmp
out
lret
call
mov
xchg
and
movb
mov
fildll
xchg
add
inc
pop
mov
scas
push
xchg
mov
jmp
xorl
pusha
sbb
mov
cmpsl
aad
daa
pop
dec
rcll
xchg
inc
mov
sarl
sub
jmp
inc
imul
addr16
mov
jl
repnz
bound
sbb
pop
in
inc
out
jne
cs
in
out
and
leave
dec
fisubs
bound
lds
xor
loopne
call
mov
mov
inc
mov
call
pushf
push
rolb
ja
pop
cld
pop
sbb
popa
pushf
out
push
mov
jge
nop
xchg
sbb
mov
adcb
push
enter
call
outsl
fwait
jecxz
bnd
jmp
ret
popa
pop
sub
cld
adc
adc
pop
adc
test
daa
into
inc
sub
push
cld
dec
dec
mov
push
scas
test
call
inc
jl
and
xor
rolb
pop
sub
stc
clc
mov
and
sbb
jns
jns
int3
sbb
scas
incb
lds
rorb
dec
push
pop
push
mov
test
rorb
xor
pop
sti
nop
mov
js
jle
stos
mov
loop
scas
or
cmc
cmp
lcall
lahf
push
ljmp
cltd
or
lods
mov
dec
push
ljmp
xchg
dec
icebp
lahf
nop
sbb
jb
popa
push
or
inc
out
mov
ficoml
sbb
xchg
sub
pop
cvtps2pd
pop
addb
das
xchg
jnp
imul
xor
inc
aaa
rcr
sub
outsb
xor
xorl
icebp
mov
sbb
push
adc
and
punpckhbw
jne
adc
imul
mov
sbb
dec
push
mulb
int
rol
lret
dec
pop
in
clc
add
subl
cmc
lds
imul
nop
outsl
mov
or
cwtl
sahf
andl
out
inc
mov
adc
sti
data16
pop
outsb
call
cmp
and
mov
call
inc
outsl
sbb
mov
dec
inc
dec
lcall
jg
fdivs
fwait
imul
fcomps
and
dec
mov
lret
stc
inc
dec
mov
out
out
negl
das
rcll
sbb
ja
inc
add
push
dec
mov
cmp
sub
pop
pushf
scas
push
addr16
repz
es
dec
mov
rcll
stos
stc
cmpsl
add
lods
cs
mov
stc
int
in
sub
out
pusha
push
leave
test
pop
std
adc
cli
repnz
cs
aad
inc
xor
movsl
popf
adc
mov
loope
pop
jo
lods
xchg
mov
dec
ret
push
fwait
mov
adc
dec
in
repnz
fldl
test
data16
mov
lcall
inc
aad
jae
fsubrl
push
pop
cmp
mov
sbb
pop
fnstcw
pop
push
cmp
imul
inc
loope
ss
sbb
push
dec
shlb
clc
pop
inc
xor
lret
add
pop
sbb
inc
movsl
pop
cmc
fcoms
les
popl
pop
mov
loopne
pop
in
inc
xor
adc
mov
in
lea
popa
stos
iret
inc
xchg
dec
mov
out
into
mov
adc
roll
xor
cmp
mov
sbb
call
jo
jb
out
mov
test
push
test
xchg
out
xor
mov
iret
cmpsl
scas
lret
jg
pop
rclb
cmpsl
and
or
pusha
jae
pop
cmp
out
add
int3
mov
push
xchg
movsl
dec
xor
mov
cld
xchg
mov
jb
inc
out
cmp
xchg
jo
sbb
xor
and
jl
xchg
movsb
mov
jne
mov
jecxz
mov
xorl
outsb
cmp
xlat
cmp
scas
fimuls
outsb
dec
stos
push
adc
fsubl
xacquire
sbb
push
push
inc
mov
dec
mov
addr16
nop
ret
push
mov
jbe
xchg
stc
dec
sbb
out
sbb
std
and
mov
out
adc
scas
mov
push
mov
inc
adc
cwtl
shr
adc
test
out
cwtl
inc
push
add
out
mov
stc
sti
mov
xchg
add
aad
add
adc
fs
sbb
out
pop
filds
add
xchg
ljmp
sbb
inc
jl
lcall
out
sub
and
xchg
adc
inc
lahf
adc
adc
insb
xchg
inc
sbb
sub
fsubs
lock
or
push
adc
cs
rorl
push
dec
or
out
sbb
push
lods
int3
ds
inc
inc
bound
push
cmp
mov
and
rcrb
cmp
xchg
dec
push
push
cltd
jge
test
fiadds
jmp
stc
sbb
loop
jmp
adc
in
sub
jno
xchg
in
mov
dec
aad
mov
jbe
outsl
loopne
sbb
mov
bound
jo
push
into
push
cmp
lret
pop
xchg
lret
outsb
and
pop
adc
xchg
xor
outsl
xchg
mov
insb
shll
sbb
push
ljmp
cli
jl
cli
cmc
das
or
cwtl
js
push
test
jb
pusha
xchg
inc
pop
cmp
fistl
mov
gs
gs
das
dec
xor
int3
and
xor
dec
out
add
test
es
cmp
xchg
and
push
xchg
ret
mov
inc
cmp
call
fcmovnu
jbe
xorl
pushf
jge
imul
cmp
loope
test
dec
rorb
popa
lods
jns
jbe
mov
out
xchg
or
test
fcoml
testb
xorb
dec
loope,pn
les
rcrl
cs
divl
lds
jbe
jl
lock
cmp
mov
pop
fs
push
out
lret
mov
cmp
stos
cwtl
stos
mov
mov
add
movl
loope
mov
cld
fisubrs
in
xor
xlat
cld
push
or
mov
std
inc
in
dec
pusha
scas
je
push
dec
test
xor
ret
push
jmp
xchg
pop
jnp
mov
in
aaa
ss
push
mulb
mov
test
imul
xor
lret
loope
popf
cld
xor
jne
sahf
pop
std
or
cmp
imul
sbb
push
sbb
stc
push
or
cld
or
popa
pop
sub
jnp
sbb
das
or
std
add
mov
rorl
and
cmp
cld
cld
lods
mov
push
movb
enter
lods
iret
fwait
mov
sbb
js
cmpw
xchg
mov
inc
out
fnstcw
cld
addb
mov
gs
jae
or
add
test
test
ret
cmp
push
cmp
popa
adc
les
mov
jmp
popf
mov
movsl
pop
mov
fisubl
je
hlt
int
icebp
mov
scas
aad
mov
clc
test
int
lea
add
mov
lods
aaa
aas
xchg
and
sbbl
push
or
pop
dec
sub
cmp
add
dec
ss
pop
sub
dec
inc
enter
rcrb
mov
dec
ror
push
sub
push
stos
jno
arpl
jge
pop
dec
hlt
lds
xchg
int3
inc
hlt
xchg
fisttpl
fsubrl
pop
roll
xor
call
daa
shrl
cmpb
leave
push
dec
pop
add
or
data16
in
fmull
sbb
jbe
pushf
loop
and
ret
adc
mov
jb
dec
xor
data16
pop
insb
bound
adc
jae
pop
fidivrs
ret
cltd
mull
insl
cmp
lods
test
iret
push
repz
subl
cmp
mov
sbb
sti
adc
mov
mov
dec
popf
pop
in
sub
rolb
cmpsl
outsb
fwait
test
xor
loope
mov
pop
repz
cmp
mov
pop
stos
inc
cmp
es
inc
call
sbb
jl
out
mov
outsb
lea
inc
or
int3
push
hlt
fsubl
stos
xor
adc
lods
out
outsb
imul
mull
test
dec
cmp
xchg
repz
fbstp
jp
mov
push
aad
imul
sbb
sub
push
subb
adc
inc
or
aad
outsb
jecxz
pushw
pusha
xsaves
push
adc
fs
xchg
sub
aas
push
roll
push
shlb
in
cmpsl
test
and
mov
pop
push
lds
dec
stc
and
pop
imul
test
pop
shlb
push
mov
mov
adc
leave
jae
jl
dec
mov
inc
gs
mov
push
cmp
scas
push
sub
xchg
xor
dec
dec
xchg
lret
push
push
cmp
test
xchg
sbb
xor
movsb
inc
test
jno
fld
push
xchg
xor
mov
outsb
popf
stos
xchg
clc
sahf
push
add
dec
rol
dec
dec
push
jo
jle
xor
push
pop
cmp
divl
mov
dec
xor
repnz
dec
ret
push
daa
int
xchg
mov
pop
push
test
jmp
je
push
lods
push
daa
in
pop
mov
dec
cmp
or
shl
mov
inc
rcrb
sub
in
sbb
out
cmp
mov
mov
pusha
jecxz
repz
cli
xor
xor
mov
mov
cmp
or
sbb
imul
cwtl
sub
gs
fnstcw
add
cmp
jae
sbb
in
insl
fldl
mov
imul
pop
xor
lcall
jl
sbb
push
andl
divl
mov
ror
es
lret
mov
lds
jo
jl
int
dec
imul
data16
jno
inc
insl
inc
orb
data16
adc
fdivrs
adc
pop
inc
mov
inc
js
cmp
js
ss
push
movsb
dec
cltd
sub
ja
and
sbb
out
mov
sahf
mov
outsl
add
push
inc
test
push
lock
push
lods
rclb
pop
enter
inc
popf
add
pushf
std
cmp
imul
outsb
nop
dec
in
dec
pop
jl
les
pop
fs
sti
pop
rolb
test
dec
shrl
mov
inc
xor
mov
lods
shlb
dec
ret
fbstp
aaa
daa
xchg
pop
lcall
dec
js
cmpsl
adc
xchg
adc
stos
cs
dec
fildl
xchg
push
sbb
icebp
stos
rcrl
outsb
jmp
xor
insb
insb
testl
shlb
mov
jp
dec
rol
mov
es
pop
pop
popf
jp
fs
push
popa
sub
sbb
test
es
clc
jno
data16
lock
cmc
dec
dec
push
insl
or
shr
cwtl
test
mov
xchg
ret
add
inc
cmp
xor
jp
dec
cwtl
and
sbb
into
ds
movsb
push
add
mov
sub
pop
lds
adc
popf
sub
loopne
mov
xor
jge
sbb
gs
mov
sbb
imul
sbb
mov
inc
out
in
lcall
test
mov
xorb
ret
ret
cmovge
jno
pcmpgtb
int3
aaa
cmp
add
jp
pop
dec
ffree
shrl
arpl
jb
cmpsb
inc
gs
jl
fidivs
in
jg
js
nop
rcll
pop
jo
inc
enter
mov
add
andl
repz
out
mov
jbe
push
sbb
movsl
xchg
js
test
fcmovbe
test
inc
cld
popa
outsb
sbb
mov
les
rol
dec
sub
dec
mov
fldt
inc
outsl
lods
push
arpl
enter
push
in
stc
ds
test
scas
adc
inc
mov
pop
aad
loope
add
cwtl
arpl
push
mov
movsl
push
xchg
xor
mov
das
xor
les
mov
fwait
mov
pushf
mov
sub
xchg
stc
push
push
cs
stc
pop
push
add
push
mov
jb
xchg
add
dec
adc
jmp
sbb
icebp
push
lret
mov
pop
push
movsb
imull
xchg
stc
adc
mov
xlat
pop
fs
adc
jne
lahf
cmpsl
lret
cmp
outsl
push
push
out
iret
inc
gs
daa
fwait
cmp
cmp
adc
rcr
mov
mov
push
mov
cmp
es
sbb
lahf
out
pusha
int
xchg
cmpsl
test
in
lock
adc
mov
pushw
sub
push
pop
mov
xchg
lock
mov
dec
jecxz
add
cli
push
andb
or
xchg
fwait
sub
adc
xor
popf
push
stos
lret
and
pop
and
inc
pusha
fs
inc
mov
xor
push
pop
andb
cmp
stos
loop,pt
jmp
pop
test
es
xor
loope
scas
and
cmp
cmp
cmp
testb
punpckhdq
nop
data16
and
pop
dec
out
fwait
sbb
push
das
dec
sbb
stos
mov
or
sub
jns
add
sbb
dec
je
push
movsb
dec
dec
sub
mov
push
and
aaa
mov
mov
scas
push
imul
inc
scas
pop
pop
call
out
js
xor
or
cli
fs
inc
push
jae
xchg
data16
ja
mov
push
into
ret
jl
cmp
mov
in
mov
jecxz
cmp
push
loope
push
nop
ret
int3
in
mov
les
jl
in
pop
cmove
popa
fwait
lret
mov
hlt
sbb
dec
fwait
sub
adc
add
mov
hlt
jb
iret
das
xchg
push
push
jno
pop
mov
sub
gs
daa
in
inc
rclb
cmp
add
mov
inc
xchg
pop
iret
mov
pop
adc
movsb
dec
imul
mov
sbb
cs
rclb
xor
mov
push
pop
sbb
call
push
pusha
in
lret
outsb
shl
stos
jmp
frstor
sbb
jg
movsb
jno
jmp
inc
jle
les
ds
in
push
insl
sub
cwtl
ja
lock
jle
stos
scas
add
shrl
push
imul
jmp
fldt
popa
scas
mov
out
sbb
cli
fs
dec
lds
jmp
sub
mov
and
arpl
dec
outsb
mov
jmp
outsb
andb
sub
iret
sbb
cmp
mov
fs
dec
mov
je
push
adc
mov
faddl
dec
cmp
lods
aaa
and
inc
fnstcw
cmp
or
shll
lret
sbb
adc
es
dec
mov
iret
push
pop
jae
add
xchg
push
nop
and
inc
aas
mov
push
jl
xor
inc
jp
aaa
xor
cmp
sub
mov
push
mov
mov
sub
jmp
dec
outsl
int
call
mov
out
mov
rclb
push
call
push
push
jle
data16
es
dec
xor
lahf
out
dec
into
mov
inc
xor
jle
arpl
lods
dec
lods
int3
mov
ja
daa
sub
out
outsl
pop
mov
mov
scas
dec
dec
cwtl
or
mov
inc
pop
mov
sbb
jl
iret
dec
dec
mov
lret
mov
mov
mov
mov
adc
lret
cld
and
sub
inc
lret
loopne
sbb
mov
imul
scas
nop
outsl
mov
push
movsb
stos
test
push
call
imul
xchg
sbbb
cli
mov
loopne
xchg
dec
pop
mov
push
cmp
inc
icebp
cmp
jo
cmp
jnp
stc
fiadds
iret
cmpsl
cmpsb
sbbb
rcll
loope
mov
or
sar
cli
loope
and
sub
das
and
push
push
imul
leave
or
pusha
mov
inc
push
sbb
sbb
jg
pop
ja
xlat
mov
shrb
pusha
repz
inc
cld
or
pop
imul
out
cli
xchg
scas
scas
sahf
sub
shl
push
negb
rcrl
inc
outsb
jmp
and
into
outsl
nop
loopne
and
jmp
imul
add
mov
lret
push
inc
cwtl
in
jp
inc
aad
xlat
clc
sub
sbb
out
pop
arpl
xchg
daa
leave
sarl
ret
push
sbb
clc
loope
sahf
in
push
imul
cmp
out
inc
arpl
jle
insl
dec
jmp
adc
cwtl
les
push
cmp
push
out
lods
lods
je
dec
mov
aad
adc
adc
sub
dec
sbb
add
scas
xchg
pusha
je
out
imul
dec
jecxz
ljmp
inc
je
sbb
out
mov
jl
inc
sub
fwait
dec
mov
test
dec
adc
and
scas
fstpl
loope
mov
je
pop
jns
hlt
mov
fs
sbb
dec
adc
mov
sub
loopne
arpl
mov
test
adc
xchg
adc
mov
dec
clts
leave
mov
mov
add
stos
dec
lret
mov
loope
aad
push
xchg
stos
imul
mov
sub
stos
in
cli
sub
sub
in
dec
dec
aad
ljmp
sub
cli
jl
inc
outsl
xchg
pop
pusha
push
push
lret
mov
mov
popf
inc
sbb
outsl
lea
in
cld
inc
arpl
frstor
dec
jo
mov
mov
subl
jo
xchg
mov
xchg
push
into
and
lea
test
mov
in
jbe
dec
outsb
jnp
insb
mov
shll
mov
mov
sub
sub
lret
xchg
jns
ret
or
mov
jmp
dec
aas
sbb
inc
les
pop
loope
movsb
pop
jge
and
dec
mov
dec
sub
push
lahf
jl
int
mov
fwait
call
jmp
aas
push
pop
sbb
inc
or
out
sbb
mov
in
in
sbb
into
fcmovb
pop
enter
mov
jno
xor
aad
dec
push
popf
pop
push
gs
pop
lahf
add
clc
cwtl
test
lcall
or
dec
out
inc
sbb
cmp
fstl
jne
adc
ds
unpcklps
dec
into
data16
int3
in
xchg
dec
rcll
mov
lret
dec
push
jmp
cli
js
test
sub
cwtl
jle
pop
lret
pop
adc
popf
push
mov
in
outsb
sub
dec
sbb
aad
ja
jne
push
es
and
cld
filds
sbb
pop
dec
push
inc
xchg
and
aam
sbb
inc
mov
test
cwtl
mov
daa
xchg
ret
push
arpl
xchg
dec
mov
push
out
mov
sub
icebp
cwtl
fimuls
fcomi
mov
test
movsb
inc
cmpsb
aad
and
cwtl
add
mov
xor
insl
lret
popf
jae
shl
dec
movsl
fcmovb
test
je
xchg
xor
daa
addr16
or
insb
fldt
push
cmp
push
rorl
pop
pop
xchg
outsl
mov
lods
out
out
shrl
cli
xchg
add
push
pop
push
sub
in
out
or
test
sub
push
push
out
dec
ljmp
imul
push
mov
enter
push
les
popf
lock
pop
inc
inc
cmc
imul
pop
aas
out
es
pop
jae
das
out
xchg
mov
dec
sbb
and
push
scas
daa
pop
xchg
idiv
inc
inc
sbb
jmp
leave
push
cld
popf
xchg
fs
push
dec
int3
out
stos
notb
xorl
xchg
loopne
sahf
jb
test
mov
rcrl
dec
popf
add
cmpsl
adcl
fs
iret
outsl
jmp
outsb
jle
mov
shl
cli
mov
pop
dec
inc
cmp
sub
and
cwtl
mov
lods
mov
push
xor
jg
xchg
int3
lods
test
adc
stos
or
jnp
push
or
sub
inc
dec
xor
cld
sub
dec
mov
pop
es
mov
aas
clc
imul
pop
je
mulb
xor
pop
push
outsb
sub
xchg
and
pop
loopne
mov
sub
mov
outsb
in
dec
outsl
sub
xchg
lods
mov
jg
arpl
decb
mov
push
stos
outsb
push
mov
jmp
cmc
dec
test
movsl
inc
xchg
pop
scas
repz
lahf
jle
mov
pop
iret
pop
stos
mov
push
inc
mov
pop
adc
cld
and
push
and
push
and
xor
scas
xchg
inc
dec
inc
and
xlat
stos
mov
mov
dec
and
stos
bound
adc
jp
js
dec
cmp
sub
scas
loope
mov
stos
jo
mov
pusha
adc
ret
adcb
xchg
out
test
cmpsb
bound
jmp
lods
sbb
xchg
ja
dec
push
mov
cld
dec
xor
dec
fucomp
and
pushw
dec
inc
jp
dec
outsl
inc
mov
sbbb
ret
loope
mov
inc
sub
mov
fstps
jno
sub
in
sbb
rorb
or
data16
push
dec
into
cmp
jp
and
stc
add
adc
add
mov
scas
jl
push
cmpsb
inc
mov
mov
jb
dec
xchg
into
cli
lret
shrb
int
add
out
dec
sub
sbbl
push
movsb
movsb
cli
ret
dec
sbb
loopne
das
iret
cwtl
xlat
les
imul
sbb
or
xchg
dec
lods
lret
push
push
int
xlat
jg
pusha
mov
jp
test
xchg
mov
pusha
and
out
cmp
sti
adc
adc
sbb
icebp
sti
movsb
dec
sti
or
xor
xor
add
enter
adc
sub
sarb
ds
pusha
mov
jo
push
push
mov
insl
adc
and
mov
lret
mov
das
jp
pop
repz
pop
push
and
test
xchg
jecxz
popf
subl
cmp
inc
shll
cmpb
jl
sbb
js
pop
stc
ds
sbb
loope
nop
arpl
incb
adc
add
jge
mov
out
jg
push
and
shl
add
inc
andb
pop
call
xchg
movsl
shrl
fbld
jo
call
lahf
push
je
stos
lods
cmp
mov
insl
movsb
and
dec
mov
loope
xchg
push
mov
inc
pop
pop
and
dec
gs
lcall
lds
test
in
xchg
xchg
sti
outsb
test
aas
cmc
jnp
out
cwtl
stc
aad
pop
repz
andb
sub
dec
ss
test
repnz
pop
subl
data16
dec
pop
adc
lods
outsb
and
sbb
lcall
cwtl
cmp
dec
jp
sbb
icebp
out
in
sub
jl
mov
js
rorl
ja
pop
pop
ss
xchg
mov
inc
into
loope
mov
pop
sbb
jl
cmp
dec
adc
mov
lcall
inc
dec
dec
dec
xchg
or
mov
sbb
fsubrs
pop
inc
subb
dec
outsl
xchg
inc
jmp
stos
inc
inc
ja
lea
pop
xchg
inc
outsb
out
jg
scas
inc
call
jne
xchg
aaa
add
mov
adc
mov
jl
mov
sbb
and
out
ret
or
xchg
hlt
pop
out
outsb
jl
pop
push
adc
cli
sub
fdivr
cmc
in
leave
je
xchg
cmp
test
dec
adc
sbb
hlt
insl
mov
push
ja
cs
sbb
and
jne
pop
movsl
popf
pop
movsb
jne
test
scas
insl
es
pop
je,pt
sub
scas
outsl
jae
pop
scas
mov
test
xchg
call
jne
pusha
lods
mov
sbb
and
pushf
aaa
std
pop
mov
mov
test
mov
fs
jl
add
push
jecxz
inc
mov
push
aaa
sbb
fs
lret
ds
pushw
aad
popf
push
mov
es
or
cli
inc
inc
mov
cmp
pusha
ds
aas
or
dec
inc
xor
pop
fsave
icebp
jno
add
pop
pusha
mov
mov
les
dec
inc
lcall
xchg
mov
jb
fsubl
sbb
out
xor
test
imul
sbb
cwtl
popa
ljmp
jae
repnz
and
jns
lock
mov
jle
jge
ret
adc
jae
mov
adc
mov
jo
push
pusha
push
out
mov
les
jmp
xor
xor
dec
lea
mov
push
jmp
stos
mov
push
mov
pop
jmp
push
or
sbb
icebp
xor
mov
jo
in
pop
ljmp
push
cwtl
jbe
hlt
into
adc
dec
lods
push
push
sti
push
lret
add
pop
and
xchg
jnp
ret
sbb
cwtl
adc
fs
fildll
push
rcl
sbb
in
sar
hlt
call
or
dec
and
sub
and
pop
arpl
mov
dec
js
in
imul
and
and
popf
loopne
cmp
leave
mov
sbb
leave
push
xchg
fwait
pop
dec
mov
push
repnz
adc
fwait
jae
fldt
scas
and
add
push
data16
into
or
fwait
imul
or
adc
outsl
push
ljmp
fs
jmp
imul
dec
out
out
sbb
and
push
adc
jge
and
or
lock
sbb
ja
lret
add
fidivrs
mov
clts
out
inc
add
imul
scas
movd
in
add
push
adc
data16
pop
mov
push
jp
mov
jns
inc
cmp
sub
jg
pusha
dec
data16
push
push
mov
out
pusha
fnsave
adcb
test
pop
cmp
clc
xor
lret
jno
cld
jecxz
push
push
dec
ljmp
xchg
ljmp
inc
fisubrs
push
das
sbb
pop
sbb
sahf
pop
dec
jno
dec
shll
and
aad
imul
xchg
push
dec
jl
fstl
daa
je
imul
rclb
popa
cwtl
stos
pop
or
push
dec
inc
cmp
cld
cmp
data16
or
cmp
push
jl
sub
ja
sti
ss
rcrb
rcll
push
rorb
sti
cmp
cwtl
jle
rcrb
adc
push
add
out
xlat
push
jo
lock
adc
push
pop
std
cwtl
fldl
insb
xchg
add
in
push
push
in
aad
mov
mov
jmp
stc
pop
popf
and
aad
mov
dec
hlt
add
call
inc
mov
sub
outsb
stos
inc
mov
and
sbb
cmpsl
add
mov
adc
push
popa
inc
push
out
push
arpl
daa
out
sarl
adc
pop
shll
adc
mov
faddl
pop
stc
lods
test
ja
pushf
bound
jmp
dec
dec
in
dec
mov
ret
fwait
cmp
adc
push
adcb
mov
dec
or
inc
sbb
out
rcrw
imul
mov
sbb
dec
fldl
mov
jle
test
sub
jo
out
fnsetpm(287
xchg
push
inc
ficomps
out
mov
inc
sub
lea
pop
frstors
fwait
pop
nop
pop
jno
loopne
lea
int
aas
cli
mov
in
repnz
xchg
iret
push
bnd
cmc
aad
xchg
pop
push
mov
sub
lock
subl
jmp
mov
clc
pop
cmpsb
daa
insb
lret
mov
cmp
repnz
ss
sub
lahf
iret
fucomp
xchg
pop
scas
sbb
ljmp
cmp
in
fistl
andl
out
inc
and
dec
loopne
loope
aam
cmp
jmp
fwait
mov
mov
push
mov
push
les
push
pop
imul
pop
jmp
imul
out
nop
pop
adc
pop
test
push
in
push
leave
pushf
pusha
in
stos
ds
adc
lcall
ret
aas
mov
jmp
jge
lock
inc
daa
sbb
ret
in
push
aad
push
scas
in
cwtl
lods
outsl
lods
push
jb
frstor
in
jl
shr
dec
scas
imul
jl
mov
xchg
ret
test
out
or
sbb
loop
out
jmp
test
es
out
cmp
in
add
push
repz
out
sub
inc
ja
push
in
enter
sub
dec
jae
adc
jo
dec
out
imulb
insl
dec
add
call
imul
push
push
into
mov
lock
mov
sbb
fs
xchg
pushf
loop
pop
rol
jl
push
inc
cmp
into
imul
sbb
or
cmc
cmp
adc
hlt
sbb
mov
push
sub
jne
mov
mov
fcoml
insb
insl
sbb
ss
adc
sbb
loop
out
ret
js
jp
pop
xor
sbbb
ljmp
dec
sub
sub
push
push
cs
imul
repz
push
ror
mov
mov
add
loop
rcrb
sbbb
out
aas
aad
sub
loop
cmp
xor
pop
popa
cmp
fdivrl
sbbb
dec
or
popa
cld
pop
in
dec
mov
mov
xor
cwtl
and
dec
das
mov
es
mov
fistpl
push
andb
lret
dec
cmp
pusha
mov
movsl
pop
mov
ret
in
and
and
or
lock
or
inc
enter
scas
inc
sti
mov
push
out
xor
cli
inc
xchg
sbb
sub
nop
ljmp
push
in
int3
imul
add
dec
pop
loopne
jg
cmc
dec
aas
testl
jbe
aaa
loope
stos
gs
mov
or
mov
jle
fs
dec
int3
pop
sub
cmp
aas
fs
cmp
pop
pop
and
fdivs
sub
dec
push
mov
mov
lods
ret
xchg
ja
js
sbb
and
push
cli
sub
mov
outsl
enter
jmp
pop
ja
ljmp
adc
in
cltd
aad
mov
mov
mov
and
xchg
cli
pop
or
pusha
rol
sbb
pop
dec
or
inc
rcrb
icebp
and
or
pusha
adc
cmp
and
or
and
enter
int3
mov
stos
xchg
cmp
inc
aad
fsubs
sti
into
leave
dec
mov
and
push
ja
sub
sbb
ds
inc
mov
sub
xlat
leave
mov
mov
pusha
lock
jecxz
jge
sbb
push
jns
adc
xlat
jbe
pop
aad
lods
and
sub
jb
sbb
dec
mov
pop
cmp
imul
adc
les
repz
jb
je
push
std
inc
and
loop
mov
pop
xor
inc
int3
jb
jl
jo
jecxz
out
popl
adc
mov
incb
jg
inc
sar
and
adc
out
fimuls
sti
mov
out
negl
or
inc
subl
mov
rolb
jns
je
push
cld
imul
outsl
ja
mov
push
cltd
leave
repnz
dec
popf
scas
aad
xchg
fs
jb
add
push
fnstcw
lds
imul
loop
and
xchg
imul
mov
in
cmp
sub
dec
aad
das
mov
rorl
lret
dec
in
es
pop
pop
jnp
sbb
jg
in
jne
clts
push
pop
mov
cmp
fs
push
pop
xor
sbb
mov
and
and
test
xchg
jle
jne
testb
cmc
sbb
jne
ljmp
mov
scas
and
pop
push
stc
jg
in
dec
fbstp
push
mov
pop
int
xchg
cmpsb
add
lret
mov
add
fwait
cmc
scas
xor
das
shlb
pop
imul
int
mov
repz
push
mov
shr
fnstsw
sbb
adc
repz
push
pop
fldt
push
stos
pop
test
lods
xchg
out
mov
int3
testb
sbb
cld
xchg
test
jmp
shll
cmp
jp
pop
call
popf
andb
dec
mov
and
mov
aas
subl
jecxz
es
cli
inc
push
push
popw
fsubp
int3
fstps
jno
imul
or
dec
xchg
mov
stos
sti
and
aam
outsb
das
repnz
cli
or
xchg
push
cwtl
shrb
xorl
inc
and
inc
stc
int
hlt
ret
movsl
call
out
lock
xor
enter
inc
rol
in
icebp
pop
mov
in
mov
jb
add
xor
pop
xchg
or
jl
gs
in
and
dec
mov
push
push
push
scas
sbb
ja
or
sub
fs
mov
frstor
jae
push
jg
xchg
dec
sub
shrb
in
arpl
inc
push
fs
cli
adc
je
repz
imul
test
int3
fwait
pop
adc
inc
mov
xchg
push
ret
hlt
or
add
fsts
lods
adc
lock
sub
scas
mov
pop
dec
int
lret
inc
mov
mov
push
ficoml
dec
jne
in
xchg
push
imul
test
pushf
and
jmp
push
push
test
outsb
test
lds
pextrw
bound
out
add
stos
int
dec
ret
aas
xchg
fs
push
mov
cmpsb
outsb
inc
or
sbb
pop
rcrb
fnsave
je
push
cmc
repz
cmp
shl
jmp
out
xchg
jge
ljmp
dec
js
xorb
outsb
in
repz
cmc
cs
clc
cs
dec
push
xchg
push
xor
add
test
daa
loopne
sbb
testl
and
cmp
movsl
push
fildll
dec
push
pop
sub
fmuls
stc
add
push
das
pop
sbb
push
jns
push
inc
mov
xchg
or
sbb
cwtl
in
sub
sub
rorb
aam
dec
test
out
push
and
sub
xchg
and
mov
jb
aas
jp
jecxz
subb
sbb
cmpsb
cmp
rol
les
pop
in
xor
or
lret
stc
inc
pop
inc
or
imull
cmpsb
dec
and
jbe
adc
lds
xchg
repz
sti
loop
inc
outsl
kmovb
dec
inc
dec
test
cmp
bound
inc
cld
sbb
or
fcomi
pop
adc
outsl
sub
ret
sahf
lret
add
jecxz
loope
push
push
sbb
addb
sti
cmp
cwtl
out
std
out
sbb
je
outsb
cwtl
loope
sbb
ret
stos
adc
or
inc
pop
pusha
inc
mov
mov
inc
test
loop
fwait
out
mov
dec
stc
push
les
std
pop
shll
mov
jle
hlt
dec
cmp
imul
mov
cmp
add
insb
test
cmc
and
dec
xor
idiv
add
call
stos
sti
mov
jg
dec
and
jp
fs
inc
pop
push
mov
inc
add
push
jl
pop
hlt
imul
cmpsl
je
bound
imul
xchg
pop
cmc
out
repz
roll
out
fisttpll
dec
jae
sub
xchg
sbb
xor
sbb
mov
repz
outsb
inc
sbb
sbb
mov
mov
lahf
addr16
rcrl
pop
sub
in
push
loope
cmpsb
outsb
inc
fisttpll
or
jmp
xor
dec
inc
or
shlb
cmpsl
bound
fwait
sbb
xor
insb
arpl
outsb
mov
mov
lcall
stos
popf
hlt
stos
and
lret
and
sub
push
dec
fadds
and
pop
inc
in
aad
lock
mov
dec
fucomi
jp
rsqrtps
repz
add
adc
xlat
dec
push
jbe
adc
adc
imul
jo
jp
jne
jle
repnz
push
mov
mov
mov
push
pcmpeqd
pop
insl
push
jb
sbb
or
pop
fildll
int3
lcall
sbbl
sarl
mov
cmp
jg
xchg
mov
sub
xlat
jbe
addr16
push
and
stc
adc
push
pop
jle
dec
pop
sub
stc
test
jbe
cmp
jae
popa
ret
outsl
das
pop
imul
dec
cmc
out
sub
call
push
clc
push
dec
divps
int
sbb
push
mov
adc
xor
dec
sti
pop
cs
lcall
fs
das
les
xchg
idivb
push
sub
ss
sbb
cwtl
xchg
dec
packssdw
sub
xor
dec
cmp
test
pop
push
sub
imul
jne
pop
mov
lret
nop
xchg
popf
fwait
inc
jb
addr16
dec
lock
jge
loope
fst
out
push
pushf
xchg
sbb
idivl
cmp
out
dec
and
jg
xchg
fadds
sub
dec
cmpsb
inc
cwtl
mov
xchg
inc
ret
dec
iret
and
and
les
and
push
das
pop
out
or
out
dec
in
push
loope
xchg
mov
mov
inc
fs
daa
incb
adcl
rorb
jmp
push
jmp
push
loope
imul
xor
xchg
sub
pop
lret
mov
mov
test
sbb
mov
shrd
inc
cmp
js
fs
int
add
sbb
les
mov
mov
jno
outsl
push
outsb
or
jbe
push
outsl
push
es
sbb
outsb
in
scas
lret
push
jl
in
push
cli
sahf
dec
push
add
xor
push
addr16
dec
lock
inc
fistps
mov
pop
inc
sahf
movsl
pop
push
mov
jns
iret
in
orb
shll
mov
je
push
aaa
sbb
outsb
cmc
scas
sub
xor
sub
mov
subb
ljmp
jmp
out
ja
jb
out
icebp
jl
jno
jp
das
push
fldcw
out
bnd
out
loopne
addr16
jmp
imul
addr16
hlt
addr16
loopne
loopnew
repnz
pop
xchg
mov
sbb
dec
popa
dec
arpl
jnp
js
popf
imul
jge
jl
sbb
adc
ss
aas
pop
sub
sbb
in
mov
imul
mov
jg
test
add
rcrl
or
pop
mulb
dec
fs
cmp
mov
data16
ds
sbb
inc
sbb
jg
mov
insb
jle
psllw
sti
push
adc
inc
sub
sub
push
int3
sub
jne
jb
xchg
adcb
mov
xchg
nop
push
add
in
mov
loope
repz
js
sahf
xchg
jnp
popa
jg
or
shrb
shlb
enterw
or
pop
jne
sub
ss
nop
test
ret
push
aaa
negb
loope
mov
lret
aas
outsl
orb
ds
sti
dec
cmp
sub
sbb
pop
fwait
movsb
mov
cld
mov
sti
xor
mov
sub
inc
dec
das
jmp
pop
data16
xor
movl
dec
pop
mov
jmp
mov
pop
push
sbb
aaa
lock
dec
les
ret
xchg
aam
je
mov
sub
xchg
mov
pop
dec
add
mov
int3
jl
arpl
pop
sub
out
lahf
dec
xor
lods
push
pop
mov
leave
bound
daa
inc
imul
cmp
sub
cli
icebp
push
lods
pop
pop
notl
adc
mov
js
outsb
insl
dec
leave
xchg
sbb
std
push
inc
sahf
ljmp
mov
enter
push
int3
inc
sar
and
pusha
inc
loopne
sbb
outsb
sbb
xchg
and
dec
lods
sbb
aas
ret
call
das
int
and
test
adc
test
xor
fmul
add
adc
xchg
daa
xchg
jmp
adc
xor
out
mov
sbb
add
mov
enter
dec
mov
push
into
adc
dec
mov
cmpsb
jp
sbb
inc
sub
and
mov
sub
push
loopne
push
loopne
push
add
pop
mov
cltd
jl
mov
sbb
inc
mov
dec
lods
ds
sub
lret
sti
inc
jns
rclb
push
negb
cmpsl
adc
fs
mov
push
dec
pop
jecxz
out
adc
sti
and
andb
xor
add
stos
rolb
and
mov
mov
int3
mov
push
int3
cmc
jae
mov
js
scas
out
mov
mov
sbb
stc
mov
data16
jnp
mov
out
test
loopne
adc
test
xchg
mov
jge
mov
dec
xchg
inc
rol
arpl
hlt
sub
imul
and
hlt
cmc
mov
xchg
fs
leave
sub
push
stos
popa
stos
lahf
dec
jp
ret
imul
pop
js
xor
dec
shr
jnp
xchg
dec
jbe
dec
sbb
add
xor
or
mov
pop
out
cmpsl
in
and
inc
jnp
push
jp
push
xchg
jp
and
or
negb
add
push
jne
es
gs
pusha
adc
xchg
sarl
pop
jle
aam
fwait
pushf
lods
xchg
outsb
rcrb
es
jle
in
dec
and
jg
add
pop
repnz
test
in
imul
stos
push
sarl
mov
dec
lds
mov
sbb
in
sub
mov
mov
std
inc
je
nop
pop
repz
dec
dec
scas
adc
pop
sbb
push
in
sub
or
bound
je
enter
in
insl
stc
push
inc
inc
jl
shl
jb
jb
adc
addr16
cli
push
jns
imul
push
mov
out
data16
loop
inc
imul
rcll
mov
adc
adc
stos
jns
pop
sub
inc
jl
pop
inc
test
mov
stos
push
and
js
loop
out
or
sbb
incb
sahf
daa
xor
sbb
or
jle
in
jmp
dec
addr16
mov
add
aad
cmp
jb
clc
or
xchg
xlat
sahf
daa
inc
mov
lahf
call
sbb
dec
outsb
jno
into
push
jae
add
sub
mov
orb
iret
sbb
repz
pop
mov
mov
stos
inc
outsb
repz
xchg
jg
sbb
ret
adc
enter
dec
loop
dec
adc
and
xchg
orb
ret
xorl
stos
stos
ret
cmp
stc
clc
push
fstpt
call
mov
pop
jne
pop
fisubrl
int
movsl
mov
cmp
add
add
adc
pusha
xchg
jl
fisubl
cmp
fmuls
addl
mov
jbe
les
movsb
mov
in
int3
addb
aam
lods
out
test
xchg
out
xor
movsl
pusha
mov
iret
imul
enter
push
xorl
test
call
rcrb
pop
sub
or
in
call
sarb
jbe
xor
mov
mov
mov
out
in
add
push
es
mov
push
and
fs
sub
cmpsl
sbb
and
push
push
dec
and
xor
sub
dec
dec
adc
roll
or
xor
mov
inc
push
xchg
dec
mulb
inc
cmp
add
enter
add
js
cmc
inc
dec
sub
jb
sub
pop
js
inc
je
mov
sbb
pop
pop
imul
movsb
pop
jle
mov
xchg
repz
mov
pusha
xchg
out
cmp
dec
mov
mov
pop
cmovl
mov
sbb
lret
sbb
test
incb
and
jo
pushf
movsl
sti
sbb
dec
pop
stos
je
fucomp
or
out
test
adc
pop
scas
jbe
add
int3
cld
mov
add
pop
les
cwtl
addr16
int3
pop
sbbb
inc
negb
out
xchg
into
sub
adc
or
fsub
test
fucomip
daa
xor
imul
arpl
xchg
cmpsb
add
mov
fadds
dec
ja
mov
ja
dec
clc
pusha
pop
cmp
dec
inc
mov
sbb
sub
data16
inc
movsb
mov
lret
or
and
add
daa
add
aaa
scas
push
jb
dec
stos
imul
pop
outsl
loopne
mov
call
sti
cmp
cs
and
stos
sub
xchg
mov
sub
scas
push
jo
shlb
add
pop
sbb
scas
sti
push
pop
and
jg
in
int3
sbb
xor
cltd
negb
inc
adc
mov
jle
nop
cltd
arpl
jo
ret
loope
adc
ja
pop
lds
insb
mov
adc
sub
dec
adc
imul
and
push
sbb
dec
cmp
inc
xor
inc
inc
in
xor
dec
dec
pop
mov
inc
test
ret
leave
loope
pop
arpl
sbb
popf
mov
mov
adc
inc
jne
int
sbb
sbb
ret
dec
xchg
push
int
add
push
aaa
imul
push
dec
jns
ficoms
rorb
adc
mov
or
notl
xchg
jl
pop
mov
pop
stc
sbb
das
imulb
adc
pop
adc
test
jle
outsl
lock
out
cmovg
fwait
call
repz
xor
add
prefetch
jl
and
aas
push
bound
sbb
xor
bound
stc
jb
adc
push
stc
stos
add
jmp
orb
shrb
sbb
dec
sbb
jae
outsl
push
push
je
xor
sbb
aad
pop
sbb
repnz
cli
fucom
jle
sbb
jo
daa
sbb
js
test
int
jp
pop
push
sub
std
and
scas
lret
cs
stc
dec
rorb
mov
jl
into
add
adc
or
jmp
dec
cmp
xor
mov
outsb
jmp
push
and
popaw
mov
scas
out
pop
fnsave
jmp
inc
cli
lret
sbb
mov
mulb
xlat
out
xor
mov
into
add
repnz
lahf
scas
ja
lret
xor
push
bound
jbe
inc
arpl
inc
jne
loopne
ds
repz
and
pusha
sbb
dec
and
fstpt
lock
mov
ret
fld
push
pop
inc
pushf
mov
inc
stos
dec
inc
fldenv
jecxz
sbb
cmp
and
outsl
or
xchg
shrl
sub
sub
iret
sub
jp
sbb
daa
rol
jle
hlt
pop
test
fwait
je
insb
jmp
sub
into
push
fwait
in
imul
lret
jne
push
repnz
scas
sub
push
icebp
xor
pusha
adc
call
jmp
hlt
jbe
dec
jno
enter
jmp
sub
pop
and
push
push
std
test
test
scas
jae
dec
jne
dec
fldenv
lods
pop
push
jp
imul
xchg
mov
mov
cmpsb
mov
sub
inc
adc
sbb
dec
xor
push
inc
mov
outsl
icebp
jne
shlb
mov
mov
fsubrl
mov
xchg
aad
or
frstor
mov
xlat
pop
push
xor
int3
test
add
stos
imul
fsubr
leave
pop
pop
outsl
cmpsl
fucomip
pop
xor
repz
std
cmc
test
pop
mov
sub
out
pop
lcall
inc
js
imul
mov
scas
and
mov
shlb
pop
sub
les
clc
subb
lret
outsb
push
sub
sbb
icebp
xor
or
aad
out
lret
add
stos
mov
popa
add
movsb
dec
or
scas
or
nop
push
out
cmc
imul
movsl
mov
sub
adc
jp
sahf
mov
int
hlt
push
inc
push
xlat
jns
dec
outsb
jmp
lret
dec
dec
lock
cmpsb
and
dec
mov
arpl
dec
fs
jl
add
insl
stos
mov
pop
sub
data16
dec
lcall
pop
lahf
lret
cmp
insl
push
ret
loope
sbb
cmp
xor
or
cmpsl
call
xchg
leave
adc
into
jge
inc
inc
jmp
orl
aad
add
imull
pop
mov
sbb
dec
jno
mov
arpl
xchg
push
sub
push
mov
pushf
loope
sub
out
jbe
loopne
mul
inc
imul
jge
fsubrs
enter
sti
push
mov
jo
cmp
stos
es
mov
add
movsb
int3
sbb
jbe
pop
inc
mov
out
push
mov
daa
pop
or
mov
jp
test
dec
jge
test
addr16
push
adc
movsb
adc
fucomi
test
xlat
xor
popa
mov
sub
or
sbb
cmp
das
mov
out
mov
inc
push
push
dec
push
mov
jbe
clc
popa
sub
mov
pop
mov
pop
jae
lret
and
das
push
mov
xchg
mov
push
popa
repz
les
sub
enter
imul
stos
loope
jl
add
mov
mov
std
clc
or
jbe
ja
aas
sti
pop
adc
mov
mov
pushf
jg
and
mov
mov
sbb
pop
sti
js
movsl
dec
jle
sub
jg
xor
hlt
and
and
loopne
jmp
das
ds
out
jmp
fs
xor
fcoml
dec
push
out
inc
dec
pop
push
cmp
adc
jae
test
adcl
inc
into
je,pt
mov
push
mov
daa
lds
jno
push
mov
scas
ds
popa
jbe
xor
call
push
push
into
outsl
pusha
jg
sti
imul
mov
aaa
into
and
outsb
movsl
inc
outsb
dec
test
movsl
and
push
and
aas
aaa
or
sbb
in
sub
add
cmp
sub
repz
mov
lods
push
mov
stos
jg
bound
sbb
scas
mov
imul
arpl
sti
test
jmp
or
push
test
sbb
cmpsb
shl
mov
ja
test
nop
out
xor
jp
mov
xlat
push
sti
mov
or
int
je
in
shlb
sbb
inc
jl
popa
jl
xor
popa
mov
pop
jl
stos
mov
inc
push
xchg
fwait
jmp
repz
sbb
stos
cmpsl
pop
dec
adc
push
out
test
inc
push
lods
popa
repz
jmp
lret
mov
cmp
mov
out
cmp
int
adc
pop
addr16
int
enter
push
lods
ret
nop
fistpl
repz
addr16
sub
lods
mov
and
inc
scas
push
and
in
xchg
je
jle
data16
or
test
int
sbb
or
sub
sbb
jne
out
add
in
pop
sub
mov
mov
icebp
loopne
out
daa
mov
pop
and
and
test
mov
in
cmpsb
lret
fs
aam
jnp
sbb
xchg
pop
sub
aas
cmp
inc
cmp
sub
push
push
pop
xchg
fisubrl
xchg
and
lea
xor
vpcmpgtd
sbb
les
mov
inc
push
pop
int3
imul
fiaddl
cwtl
push
imul
push
push
ret
dec
cmp
cmp
xor
push
inc
adc
xor
popa
inc
aaa
jge
xchg
dec
dec
insb
mov
cmc
test
push
jno
inc
dec
jmp
sbb
cmpsl
fsts
ljmp
ret
cmpsl
push
xchg
jmp
adc
les
cli
lret
jp
pop
imul
cwtl
mov
dec
cmc
out
mov
xchg
daa
mov
sub
dec
cwtl
daa
adcb
pop
mov
pop
in
fwait
push
lret
lods
repz
neg
add
jnp
dec
mov
scas
in
cmpsl
lcall
shll
push
dec
frstor
jmp
push
inc
jp
fwait
in
fcomps
cmp
loop
add
cmp
fmull
sti
pop
imul
stc
sti
dec
out
dec
and
fs
mov
outsb
cmpb
lret
out
inc
xchg
js
stos
inc
add
add
push
mov
sbb
add
rol
add
faddl
pop
and
ret
in
inc
sub
inc
push
dec
lret
sarb
dec
push
pop
cli
sbb
inc
je
sub
jl
push
lods
ja
cs
arpl
dec
jne
bound
sarw
pop
pop
ss
popf
xchg
stc
jl
inc
mov
out
cmp
lods
pop
sti
adc
adc
repz
pop
jno
push
jge
inc
data16
xchg
pop
inc
jo
push
stos
cwtl
int
inc
pop
daa
inc
or
cld
push
mov
loope
outsb
add
jbe
push
movsb
call
jg
dec
cmp
dec
jno
nop
enter
cmp
adc
cmp
imul
cmp
dec
or
decb
lcall
mov
aaa
outsl
jl
ja
ret
adc
aas
loope
cs
push
and
xchg
add
sub
movsb
call
push
dec
stc
popf
mov
adc
cs
ljmp
add
mov
cmp
in
dec
lock
adc
popa
dec
mov
aaa
js
sbb
cltd
lds
loope
scas
pop
adc
pusha
call
pop
iret
jnp
push
jne
je
in
mov
fs
dec
enter
lods
pushf
mov
mov
aad
stc
push
fdivs
outsb
jae
inc
adc
xor
jg
ret
inc
or
loope
push
jb
push
scas
pop
les
jl
insl
mov
in
fcompl
xor
mov
inc
es
and
add
cmp
ss
push
mov
jmp
cmp
jg
or
push
xor
sbb
ljmp
sub
pushf
enter
jnp
and
add
sbb
nop
xchg
test
stc
cwtl
aad
mov
xchg
push
fdivrl
sbb
sbb
mov
inc
addr16
popf
pop
sbb
xor
mov
aad
test
mov
mov
mov
push
sub
sbb
adc
stos
mov
push
add
sbb
lcall
dec
pop
enter
jne
lret
dec
in
pop
gs
sbb
clc
sub
testl
jns
adc
insl
notl
jne
xor
and
enter
jns
in
dec
jge
push
aas
outsb
xchg
inc
outsl
call
inc
imul
repz
pop
addr16
xchg
cld
mov
popf
repz
enter
inc
cmp
pop
je
fldt
mov
shll
hlt
lea
xor
je
jb
jmp
lea
jmp
jp
pop
pop
subl
add
cltd
sbb
shlb
pop
jl
push
cmp
inc
stos
ja
mov
pop
sbb
and
and
movsb
fwait
pop
stos
js
test
loop
sbb
ds
addb
fwait
pop
mov
fwait
cltd
cmp
xchg
push
pop
pop
cltd
ds
arpl
mov
push
aaa
jmp
pop
sub
cs
popf
dec
jl
pop
pop
push
jp
rcr
sbb
pop
sbb
inc
testb
mov
cmpsb
and
sub
rcrb
cmc
or
cmp
mov
sub
push
sbb
sti
sbb
imul
lret
add
sbb
mov
aad
inc
xchg
add
cld
or
xchg
enter
cmp
push
sbb
dec
xor
iret
scas
pop
cltd
dec
mov
or
jg
imul
xlat
or
test
fnstsw
and
in
sarb
cmc
popa
jmp
lds
dec
push
negb
shlb
or
dec
jp
out
test
pusha
inc
sub
decl
pop
iret
clc
mov
ljmp
subl
xor
pop
push
pop
movsl
push
jbe
repz
cmc
cmp
sbb
movsb
aad
inc
out
sbb
jge
ret
arpl
dec
dec
test
repz
fistpl
push
loope
lods
or
fwait
dec
outsl
insl
push
inc
cmp
loopne
pop
mov
xor
push
or
imul
mov
mov
add
inc
ret
stos
push
mov
jne
mov
js
arpl
outsb
filds
les
popa
sub
inc
ret
out
xor
push
mov
pop
ja
jb
ffree
inc
aaa
mov
mov
cmpsl
int3
clc
add
sub
pop
jl
or
in
out
scas
popa
ds
outsl
int3
and
cltd
mov
xchg
stc
shrl
jo
negl
call
adc
jl
popa
sti
adc
mov
mov
mov
dec
cmp
sti
add
in
sbb
js
adc
icebp
stos
push
mov
popf
ljmp
divb
jmp
mov
idiv
dec
pop
loopne
imul
faddl
inc
into
outsl
jo
jbe
fsubrl
in
cmp
data16
sbb
dec
sti
ljmp
adc
and
inc
xchg
sbb
and
aaa
pop
add
xor
cltd
aas
imul
and
mov
sub
hlt
mov
loop
pop
fwait
mov
jae
cmpb
lcall
and
incb
bound
ss
lods
sbb
mov
fadd
les
pop
mov
lock
push
xchg
lock
add
cld
mov
adc
es
xor
aas
mov
cld
jp
shr
pop
faddl
ds
jo
outsb
cmp
out
outsl
stos
pop
sbb
xchg
add
outsl
push
es
dec
movd
add
push
dec
xchg
cmc
cmpsb
or
fimuls
inc
mov
scas
push
mov
or
scas
out
sbb
shl
inc
jb
or
cld
mov
mov
bound
push
daa
je
shl
stos
pop
pop
jnp
cs
mov
outsb
cmp
xchg
sbb
dec
mov
data16
push
xor
sbb
dec
fwait
leave
dec
xor
sbb
xchg
clc
test
addr16
push
pop
cmpb
push
dec
loopne
adcl
addr16
jl
lock
pop
repz
mov
mov
jo
pop
lret
lahf
ror
test
or
inc
jl
aad
out
cwtl
sbb
xchg
inc
shl
sub
pushl
test
insl
stos
repz
incl
jle
je
out
sbb
cs
test
in
mov
push
nop
push
iret
aas
jb
inc
mov
xor
leave
in
scas
rclb
push
jmp
pushf
roll
jl
cmpsb
fwait
dec
push
xor
mov
lret
jmp
jns
data16
push
outsl
sbb
jb
push
jle
pop
fs
test
rol
dec
pop
dec
pushf
rorl
adc
ljmp
push
ret
dec
adc
push
pop
sahf
addr16
mov
data16
cld
mov
inc
push
pushf
push
daa
lods
push
bound
sub
lcall
imul
pop
xor
stos
subb
shrl
fildll
cmp
cmc
dec
es
popf
add
mov
jge
shrl
push
mov
mov
fwait
arpl
ror
sub
stos
stos
data16
movsb
movsb
mov
mov
pop
push
mov
imul
mov
jp
aad
jns
inc
push
push
bound
sbb
lahf
pop
lret
cs
adc
cltd
ja
inc
in
leave
sbb
cwtl
xchg
adc
xor
scas
pushf
push
inc
sub
shll
mov
stos
xchg
nop
jae
loopne
adc
xchg
test
rcll
cli
ret
pop
add
dec
lret
mov
dec
out
adc
push
pop
and
add
js
dec
dec
ss
pusha
mov
jb
sub
push
add
div
xorl
pop
popa
incb
inc
xchg
scas
or
out
sbb
int
xor
hlt
dec
cmpsb
push
sub
aas
lock
dec
cmp
or
or
int
add
xchg
xlat
mov
jnp
gs
sbb
jno
int
pushf
inc
dec
pop
jnp
jecxz
pop
shrl
dec
push
pop
out
les
sbb
fistpll
fstpl
jbe
dec
and
lahf
in
and
into
stos
outsb
fnstsw
out
lods
add
test
loopne
add
lret
outsl
add
lret
add
push
les
data16
jp
js
sarb
jmp
sub
sbb
test
xlat
scas
push
mov
adc
aad
or
cmp
test
adc
les
push
enter
repz
js
sub
int
negb
pop
ljmp
popa
push
aaa
dec
mov
adc
pop
gs
inc
mov
dec
jge
sub
test
adc
pop
xchg
andb
cmc
adc
adc
dec
xchg
sub
push
push
movsb
mov
cmp
addb
sbb
imul
cmp
stc
or
shlb
mov
out
mov
dec
lock
pushf
div
std
in
and
xchg
jb
dec
xchg
pop
ljmp
inc
repz
sub
fwait
adc
gs
inc
sub
inc
stos
icebp
add
xchg
sub
es
stos
mov
inc
outsb
pop
pop
idivl
push
imul
lds
out
jns
cmp
dec
scas
cs
mov
inc
test
jp
idivl
fs
cmc
jl
outsl
push
push
sbb
push
das
and
dec
dec
imul
xor
aaa
push
sub
stc
dec
mov
sbb
js
jmp
les
sbb
lds
dec
sbb
lods
repz
inc
test
test
inc
clc
out
mov
data16
lret
inc
ljmp
data16
lcall
fst
push
mov
jnp
cld
pop
push
outsb
shl
loopne
imul
xchg
in
inc
push
mov
push
sti
and
inc
inc
rclb
push
mov
cwtl
sbb
js
xchg
les
int
pop
je
inc
scas
mov
push
fstl
sahf
hlt
addr16
movsl
test
test
lret
add
lcall
stc
enter
push
arpl
cmp
outsb
call
xchg
or
push
in
int3
fwait
out
inc
jmp
dec
das
in
cmpsl
jo
cmpsb
out
inc
push
popa
into
fldt
pop
repnz
int
sahf
sub
xor
pop
cmp
dec
test
ds
in
lds
enter
inc
dec
popf
push
sbb
mov
sub
dec
dec
inc
jecxz
es
jo,pn
test
cs
push
inc
inc
shrl
js
stos
test
mov
movsb
dec
mov
imul
fs
pop
daa
sub
inc
dec
incb
cwtl
jmp
insl
inc
sbb
iret
push
or
int
repnz
push
ret
and
inc
insb
in
ss
pop
test
ds
lock
outsb
addr16
xchg
xchg
xor
out
cld
arpl
cli
add
scas
and
xor
cmc
xchg
mov
outsb
mov
sahf
inc
stc
int
test
inc
mov
lock
pop
clc
add
jb
jmp
or
xor
jg
inc
dec
pop
pop
sub
popa
and
imul
push
mov
sbbl
pop
js
outsl
sub
xchg
lea
loop
gs
cltd
lea
inc
les
ret
mov
shrb
data16
mov
push
adc
xchg
mov
inc
imul
mov
and
std
push
insl
cmp
adc
ja
mov
cmc
test
add
sub
add
jmp
aad
push
mov
push
insl
dec
stos
push
stos
popw
test
jbe
xchg
outsl
scas
subl
dec
scas
xlat
inc
mov
inc
out
mov
sub
mov
cmp
cmp
jns
jp
andl
test
pop
outsb
fwait
jge
lods
cld
push
jmp
mov
pop
call
inc
jmp
clc
pop
vmovsd
sahf
daa
push
insl
jge
push
jb
xchg
outsb
cmp
mov
bound
ret
add
lcall
cmpsl
stos
add
and
test
mov
pop
xchg
adc
and
sub
popa
jne
sbb
js
pop
outsl
mov
pop
scas
inc
add
mov
fs
ret
jne
dec
jno
into
inc
add
sbb
stos
jmp
loop
and
pop
pop
sbb
dec
mov
je,pt
inc
sar
ja
aam
xlat
or
fldcw
pusha
mov
sbb
out
lret
aas
mov
lock
loope
pop
dec
push
dec
mov
inc
or
movsl
adc
xchg
lods
or
xor
leave
outsb
in
push
mov
pusha
sbb
mov
and
dec
jmp
adc
es
fwait
bound
pusha
jmp
imul
mov
mov
pop
gs
out
cmp
cmp
fwait
arpl
popa
push
add
adcl
adc
xor
fs
dec
pop
dec
sbb
and
pop
push
push
movsb
out
pop
dec
pop
jns
jg
push
in
lea
pop
ret
shrl
call
sub
outsb
add
pop
enter
jmp
xor
mov
popf
std
mov
xabort
sub
mov
repz
jno
stos
lods
inc
repz
push
jg
cltd
aaa
bound
sub
push
pop
sbb
xchg
aam
sub
aaa
mov
dec
and
pop
in
ror
push
out
pusha
adc
int3
aas
jns
outsl
xchg
sahf
in
in
bound
cld
in
imul
cmp
dec
mov
sbb
push
out
decl
jmp
xchg
jns
mov
std
cmpsl
adc
sahf
pop
adc
pop
push
aaa
push
iret
std
or
cld
lock
lahf
cld
int3
pusha
ljmp
mov
bound
aas
or
adc
inc
jbe
ja
je
push
sahf
sahf
inc
push
jbe
daa
xchg
gs
push
and
adc
das
xchg
push
mov
push
push
pop
jbe
lret
mov
ficompl
movb
stos
mov
sbb
rcrl
jae
xor
out
or
je
sbb
cmp
je
outsl
xchg
add
pop
test
orl
sbb
dec
cwtl
out
imul
mov
icebp
fs
push
mov
pop
insb
xchg
test
inc
jp
dec
js
sbb
mov
jae
bound
jmp
push
rep
jae
pop
decb
pop
mov
and
jge
pusha
mov
rcrl
inc
push
push
inc
lret
call
push
cmp
out
dec
fs
test
push
das
pushl
mov
inc
iret
mov
bound
adc
adc
arpl
call
repz
sub
js
test
scas
and
in
push
mov
xchg
mov
shrb
daa
add
insl
mov
cmp
and
mov
imul
stos
lds
jbe
mov
mov
bound
mov
cld
out
in
pop
sarb
ljmp
mov
je
push
cmp
arpl
cmpsb
mov
sub
in
pop
outsb
pop
js
sti
nop
push
fsts
stos
jp
jp
call
push
pushf
fs
int3
imul
in
mov
inc
pop
outsb
mov
icebp
or
test
push
arpl
mov
cs
cld
cmpsb
mov
push
and
pop
push
sub
add
cmp
sbbb
loop
jg
push
jle
js
pop
adc
or
sub
fisttps
scas
jg
pop
in
mov
mov
out
push
roll
cmp
scas
call
mov
leave
inc
ret
jge
xor
push
mov
outsb
imul
xchg
les
jo
jl
js
je
or
iret
push
das
mov
imul
xor
jne
imul
cmpsl
and
inc
adc
push
leave
jno
or
mov
xchg
sbb
call
fistpll
test
mov
repz
xchg
imul
stos
xadd
cmp
dec
ret
sub
push
iret
cld
pop
and
bound
mov
sub
jge
jo
sarl
mov
lods
sbb
push
mov
add
addr16
xchg
push
nop
mov
jne
in
cmp
outsl
scas
mov
mov
jle
xchg
sub
cmp
repz
push
lret
push
jns
jp
stos
jns
cmpsb
aas
stos
dec
mov
jnp
ljmp
mov
dec
lock
stc
test
and
mov
lcall
es
imul
shrl
popf
out
les
loopne
jp
dec
sbb
xor
cli
cmpsl
sub
daa
or
pop
outsl
inc
mov
xor
stos
stos
adc
adc
les
pop
and
test
mov
push
sarb
jl
add
rolb
mov
cli
decl
mov
jb
inc
iret
push
xchg
dec
sbb
hlt
push
push
xor
sbb
xchg
out
pop
jl
ret
and
pop
fists
jne
push
cmc
cld
test
dec
xor
mov
dec
fnsave
lods
addr16
inc
cmp
std
call
leave
adc
jne
and
test
imul
stos
popa
movsl
pusha
adc
shrl
fwait
stc
or
daa
fwait
hlt
jo
mov
aas
jne
punpcklbw
arpl
stos
outsb
mov
inc
push
movsb
cmc
dec
test
mov
bound
push
decl
sbb
pop
pop
inc
cmp
sbb
movsb
mov
mov
push
mov
ds
pop
and
xor
jp
push
dec
push
mov
push
sbb
cli
cmpsl
mov
inc
or
fs
stos
sub
and
packssdw
ret
or
aam
das
inc
sbb
mov
cmpsb
int
repnz
push
mov
pop
lahf
pop
cmpl
sbbb
sti
mov
adc
or
ds
push
push
outsb
aas
clc
in
dec
dec
xor
cmp
cmc
xor
ja
stos
xchg
push
stos
inc
enter
incb
iret
outsl
cmpsb
mov
cmp
popf
dec
lret
in
inc
inc
out
mov
mov
out
lcall
sbb
out
leave
out
xor
filds
enter
jg
xor
repnz
xchg
cmpsb
int
mov
add
sub
pop
cmp
jno
or
out
addr16
fldcw
push
popf
sub
out
pop
mov
push
cmpsl
leave
outsl
imul
mov
inc
jl
movl
jge
test
sti
add
inc
pop
sub
repz
push
out
mov
fstpl
jg
pop
loop
pusha
stos
push
imul
add
push
add
out
mov
add
sbb
pop
mov
in
bts
adc
cmpsb
mov
outsb
jns
and
add
push
es
inc
es
enter
sub
sbb
sub
data16
in
fsubrs
mov
repz
int3
cld
sub
stc
xor
pop
icebp
scas
jle
outsl
cli
mov
dec
mov
popf
mov
and
sub
fs
scas
mov
inc
adc
adc
push
inc
sub
js
cld
dec
out
add
dec
and
mov
lods
jae
sub
mov
xor
decb
cmp
in
clc
enter
test
jnp
xor
sbb
aad
inc
rcrl
hlt
mov
iret
cld
ret
sahf
daa
add
sbb
divb
ss
sub
jo
cmp
add
fcompl
stos
xor
lea
mov
repz
pop
sub
adc
popa
adc
add
push
mov
mov
mov
push
cwtl
test
imul
sub
dec
add
hlt
dec
mov
stos
out
nop
pop
dec
jbe
out
mov
and
out
stos
fstps
mov
test
shll
into
pop
out
mov
jbe
in
adc
enter
push
pop
jno
mov
daa
inc
inc
mov
add
es
sub
mov
shrb
jnp
cmp
adc
dec
xlat
ret
test
pop
mov
inc
adc
adc
xchg
sbb
mov
lcall
jmp
stc
adc
and
inc
lods
js
mov
mov
pop
int
inc
in
call
xchg
mov
jmp
cwtl
outsl
sti
xor
data16
adc
push
pop
jnp
jns
test
push
test
das
xchg
out
movsb
shl
outsb
int3
lods
dec
xorb
arpl
add
sub
add
movsb
data16
outsb
xor
es
sub
mov
popf
call
push
sti
or
outsb
add
mov
mov
add
cmp
pop
lods
jne
sub
les
ja
std
sti
add
ret
mov
sub
sahf
orb
or
mov
lods
iret
lahf
daa
les
je
js
jle
mov
mov
pop
mov
rol
ficomps
adc
push
and
mov
stos
sti
or
xchg
ret
and
es
lret
adc
leave
js
adc
ja
je
push
jbe
push
stos
inc
jp
das
inc
int
out
icebp
in
and
sub
push
inc
inc
xchg
and
cmp
lcall
pop
enter
jl
data16
push
insl
xchg
push
mov
cmp
scas
sbbl
outsb
mov
sbb
inc
sarl
ja
push
rcrl
pop
pusha
jecxz
or
xchg
xchg
roll
sti
pop
or
push
xchg
mov
pop
or
jb
xchg
xchg
addr16
stc
out
clc
fildl
cmp
push
test
in
imul
pop
xchg
xchg
insb
es
mov
jae
ret
cmp
fistl
xor
pop
scas
mov
inc
mov
data16
popf
outsb
aas
mov
dec
shll
jno
inc
ret
xor
mov
sti
adc
out
enter
push
cmc
xor
lea
bound
in
jns,pt
jecxz
fs
daa
mov
jne
pop
dec
fimull
pop
faddl
pop
inc
inc
lcall
repnz
fmuls
mulb
ja
sti
mov
sbb
dec
inc
jns
adc
les
push
je
scas
out
nop
ja
out
mov
sti
stos
bound
add
repnz
jbe
mov
cli
jp
dec
xchg
pop
jg
mov
enter
bound
push
or
dec
vmread
data16
cmc
ret
test
adc
clc
lods
dec
test
pop
xor
sbb
xchg
xchg
cli
negb
mov
inc
mov
pop
int3
push
repz
pusha
psubq
adc
inc
mov
mov
popf
dec
xor
lret
ja
fstl
pop
dec
stos
mov
fistl
mov
push
out
jle,pn
xrelease
ret
ljmp
pusha
mov
pop
addb
push
out
xchg
cmp
xchg
outsl
jg
je
mov
sbb
pop
scas
inc
lock
fs
aas
push
push
pop
sahf
inc
cmp
lret
add
fcoml
sbb
jb
push
push
fisubs
dec
lret
or
leave
aad
cmp
mov
adc
call
mov
pop
inc
sarb
dec
sub
js
dec
pop
fisubrl
mov
test
setnp
xchg
dec
fstpl
in
out
pop
jbe
les
imull
sub
add
dec
dec
lcall
xlat
inc
outsl
or
scas
adc
fs
stos
and
push
out
xor
fwait
xchg
push
inc
mov
push
out
sub
in
sbb
add
sbb
hlt
mov
repz
test
pop
pushf
in
inc
xor
scas
fwait
int3
dec
out
stos
dec
mov
mov
scas
cltd
in
fwait
outsl
jnp
cli
popf
aam
das
inc
sbb
mov
enter
xor
enter
inc
jl
xor
data16
lock
mov
and
js
mov
xor
adc
andps
add
cmpsl
dec
outsl
cmp
add
decl
sub
xor
mulb
xchg
out
mov
pusha
scas
sbb
dec
xchg
fwait
pop
and
add
pop
dec
out
call
xchg
sub
pop
leave
mov
out
sbb
inc
inc
adc
xlat
hlt
sbb
loop
out
pop
xor
rclb
xor
lret
mov
xchg
popa
inc
cmp
pop
rorl
jp
rorl
mov
jp
jle
mov
dec
xor
jp
cmp
jnp
mov
mov
push
inc
inc
int3
imul
jbe
mov
inc
sbb
das
stos
aad
fildll
hlt
ret
bound
xchg
addr16
xor
cmp
into
mov
pop
push
call
push
ja
sbb
incl
xchg
or
push
jnp
test
mov
mov
dec
or
outsl
int
push
jmp
inc
or
add
das
lcall
mov
inc
sahf
and
push
mov
push
jle
cmp
jae
jbe
addr16
fildll
jp
inc
mov
inc
push
add
inc
in
cmovg
cmpsl
adc
lods
sahf
arpl
call
xlat
lret
mov
out
js
sbb
popf
push
mov
out
mov
cmc
push
pop
in
data16
fiadds
dec
lahf
fwait
call
pop
fcmovnu
pop
int
and
imul
loopne
addr16
rcrl
xchg
jno
dec
es
push
cmpsb
in
dec
test
inc
inc
jg
xchg
adc
popa
js
mov
jg
test
dec
shrl
inc
or
cmp
imul
sbb
daa
call
pop
cwtl
xchg
dec
xchg
jl
push
dec
test
int
pop
push
push
sub
inc
jne
push
adc
pop
sbb
inc
nop
ds
sbb
sub
xor
cld
repz
rcrl
push
ret
cmp
push
jp
sub
pusha
sbb
jl
mov
xchg
bound
inc
outsl
mov
pusha
stc
dec
shrl
push
adc
pop
xor
xchg
sub
xchg
adc
mov
adc
stc
imul
add
sbb
aas
daa
ret
adc
ret
jno
xchg
adc
sarb
jmp
out
movsl
fwait
mov
arpl
cmpsl
adc
loope
test
movsb
int
fldl
js
inc
push
xchg
ret
cwtl
mov
js
popa
mov
inc
cmc
jge
mov
mov
jl
cmpsb
aam
daa
push
mov
fcomps
dec
arpl
xchg
pusha
loopne
mov
not
mov
jne
push
rorl
int3
rorl
mov
ret
lods
mov
imul
pop
shlw
iret
push
and
in
cmp
mov
xchg
les
sbb
fmuls
pusha
pop
stos
push
push
and
mov
sbb
mov
out
fwait
push
cmp
or
cmp
dec
test
sbb
cmp
sbbb
cmp
lea
std
mov
lea
adc
rcr
in
into
in
pop
insb
inc
sbb
lret
call
mov
fistl
sub
mov
ffree
mov
add
pop
cli
mov
jg
leave
gs
mov
inc
popf
dec
xor
jecxz
pushf
xor
xchg
jp
sub
gs
xchg
sti
loopne
mov
sbb
cmc
push
adc
ljmp
dec
push
jnp
mov
fwait
je
vmovntps
cmp
push
sub
mov
sbb
mov
loopne
lahf
iret
lds
mov
test
js
inc
xor
fsubrl
sbb
sub
jle
xchg
or
int
dec
inc
ret
pop
ja
lock
sub
insl
loope
inc
outsb
add
mov
adc
lods
outsw
push
stos
jmp
pop
jge
push
and
sarl
dec
jg
pop
pop
pop
mov
adc
outsb
addr16
ja
xchg
shrb
stos
fstpl
stos
test
mov
cmp
inc
sub
xchg
pop
adc
sbb
adc
shr
stc
dec
add
inc
inc
mov
pop
pop
hlt
dec
cmp
hlt
push
adc
lds
adc
jl
lods
loop
jnp
imul
inc
and
aam
sbbb
jg
loope,pn
inc
mov
and
dec
cmpsl
negb
lods
lret
cmc
cmpsb
jns
stc
push
decb
in
jmp
inc
mov
les
push
mov
ja
ret
fstps
imul
bound
mov
mov
cs
std
jg
dec
movb
shl
push
mov
les
cmp
jecxz
nop
push
call
mov
push
test
pop
dec
add
in
push
shlb
pop
adc
push
sbb
stc
fs
stos
cmp
mov
cmp
test
mov
pop
add
sbb
cmp
mov
sub
and
aas
outsl
lock
inc
and
push
xchg
mov
loope
add
lods
call
mov
adc
add
loope
mov
movsl
mov
mov
dec
popa
inc
addr16
popf
test
sbb
pop
push
push
jmp
mov
dec
out
or
dec
push
loop
sbb
dec
xchg
sbb
insl
pop
pusha
pusha
jb
dec
sbb
xor
mov
stos
jmp
enter
cltd
push
mov
pusha
inc
pop
or
sbb
xor
daa
cwtl
dec
popf
pop
add
int
jno
mov
push
push
gs
aas
dec
out
mov
mov
mov
int
aaa
inc
fbstp
addl
cmpsb
cwtl
fwait
shl
sbb
iret
ss
dec
push
jmp
int
int
ss
fmul
pop
dec
hlt
addr16
pop
push
pop
and
lods
ja
push
dec
std
fcomps
push
push
fs
movb
dec
fnstenv
or
enter
mov
jno
jae
push
bnd
xor
jae
js
fstpt
sub
cmp
pop
es
es
xor
ficoml
or
mov
push
mov
ss
daa
loope
test
mulb
cmp
bound
jecxz
mov
cmp
mov
inc
or
cs
sbb
les
fisttpl
ror
pop
scas
nop
fildl
push
sbb
leave
test
sahf
movl
mov
int3
xor
xor
inc
cmp
or
adc
shrl
pop
pop
and
test
leave
fs
mov
daa
xorb
xchg
paddsw
call
ss
mov
jns
jge
mov
shlw
and
push
push
jl
dec
lods
into
outsb
pop
stc
aad
add
lahf
orl
nop
mov
xor
pop
pop
xchg
dec
lods
push
cmpsl
and
push
push
xor
push
sbb
adc
sti
jno
pop
rcr
sub
and
lret
je
dec
cs
rcl
sbb
mov
fs
in
push
icebp
dec
dec
mov
test
lods
adc
cwtl
je
inc
loopne
rorl
call
inc
dec
sub
jmp
sbb
test
js
push
jae
clc
xor
cmc
scas
out
inc
push
push
xchg
ja
imul
inc
inc
ret
cwtl
pop
kmovw
xchg
jmp
sub
int3
or
adc
push
dec
das
xchg
xchg
jle
mov
sbb
pop
xor
or
mov
addl
sub
int3
jl
rorl
idivb
out
mov
inc
sbb
xor
repz
add
sub
aas
into
sub
scas
mov
mov
push
addl
aas
enter
addr16
in
push
mov
adc
jle
add
imul
sub
xor
pop
js
dec
sub
pop
outsb
push
stos
adc
mov
lea
and
dec
push
mov
adc
mov
add
data16
mov
jle
cmp
pop
mov
movsb
out
cmp
sahf
mulb
negl
push
out
js
pop
mov
xchg
ja
push
fs
rorl
stos
xchg
or
xchg
or
jmp
rcll
pop
in
pushf
jo
add
lock
xchg
addr16
push
jno
jl
repz
sti
jb
jle
insl
rcrl
ja
fs
pop
sub
sbb
push
aas
into
push
push
inc
les
enter
out
loop
popf
pop
sahf
outsb
dec
aaa
arpl
jecxz
outsb
cmc
test
mov
jl
or
int3
faddp
mov
xchg
cmp
rcrl
das
mov
push
movsb
leave
aam
xor
cmp
int3
add
outsl
dec
divb
or
adc
xlat
cltd
in
add
lahf
push
jge
pop
cld
movsl
test
arpl
cmp
pop
cmpsl
call
sub
in
fwait
xchg
jbe
fists
mov
adc
scas
adc
pop
test
xchg
leave
cmc
out
enter
mov
fs
xchg
imul
std
xchg
or
in
dec
das
cmp
pop
inc
mov
movsl
clc
je
jge
scas
pop
repz
insl
aam
scas
pop
cmc
in
popa
jp
aam
add
push
sub
sub
dec
cmc
mov
enter
call
ror
popf
push
stos
cmp
imul
stc
je
lock
outsl
dec
push
dec
outsb
push
dec
out
imul
popa
cmp
dec
les
mov
in
push
dec
fs
out
jo
bound
dec
adc
lock
pushf
fsub
add
cltd
imul
iret
out
shll
loopne
fisubrs
std
imul
out
jne
imul
jmp
mov
or
mov
and
push
pop
imul
jne
push
or
mov
lds
stos
pop
into
les
inc
lret
stos
nop
jo
arpl
call
lds
xor
stos
fs
inc
and
xchg
fsubl
sub
pop
jp
mov
movsb
push
dec
dec
je
dec
andl
jg
mov
movsl
lock
ljmp
inc
insl
scas
daa
cmp
push
fcom
sub
cmc
sbb
imul
push
js
jmp
das
cmp
pop
jg
pop
test
int
clc
popf
sub
mov
push
cmc
popf
repz
aad
and
mov
dec
les
js
push
jp
pop
inc
mov
inc
rcrb
rorb
push
push
fucomp
sbb
jmp
sub
push
add
lret
dec
es
out
leave
js
cmp
fidivrs
outsl
repz
test
sbb
xor
push
or
pop
and
pusha
push
imul
cld
pop
add
jge
mov
jl
cltd
jmp
in
aad
mov
sbb
adc
push
mov
and
in
add
scas
pop
sub
adc
sbb
mov
pusha
ret
repnz
daa
cmp
dec
call
cmp
fadd
pop
out
jmp
aad
jle
inc
add
sub
rorb
sub
push
mov
in
out
test
sbb
pop
jge
xor
add
mov
cli
adc
iret
fists
or
sub
test
arpl
pop
shr
iret
pop
push
and
scas
fsubrl
lret
outsb
xchg
lret
scas
pop
ret
popa
mov
mov
out
inc
out
data16
in
pop
lret
cmp
scas
fwait
arpl
fists
out
inc
pop
jg
call
ret
jno
xlat
stc
pop
jbe
stos
and
sbb
pop
pop
out
testl
jne
pop
cmp
loope
adc
jo
clc
lods
lock
push
lret
in
pop
mov
out
je
push
jne
push
scas
or
jg
sub
enter
fbld
push
ffreep
dec
add
add
je
mov
xlat
jnp
stos
scas
mov
mov
sbb
lret
je
and
pop
xor
fucomp
sbb
jb
sahf
dec
fdivrl
outsb
insb
xor
out
push
int3
xor
mov
push
sub
popf
mov
adc
fs
sbb
xchg
lahf
sub
int
scas
sub
push
test
cld
pop
inc
pop
adc
cmpsb
mov
jl
dec
scas
jae
out
test
cli
or
gs
pop
sub
cld
lods
shl
in
push
mov
and
push
adc
sbb
pop
sbb
lea
aaa
sbb
les
pop
pop
pusha
dec
sti
xchg
out
stos
icebp
sub
repnz
add
or
pushf
bound
gs
xchg
icebp
inc
icebp
xor
xchg
xchg
push
aas
in
push
test
mov
push
stos
mov
mov
add
xor
xchg
sub
or
mov
sbb
bound
inc
in
xor
add
xchg
loope
outsl
push
adc
out
push
sahf
fdivl
repz
cmp
dec
jl
pop
mov
aaa
sub
test
xchg
std
sbb
mov
xor
fs
push
loopne
rolb
pusha
sbb
xlat
jl
jne
bound
sub
ja
clc
sub
pop
jecxz
or
sbb
notl
dec
pop
sbb
fs
add
and
xchg
aad
imul
mov
inc
inc
push
inc
mov
xchg
gs
lods
sbb
mov
cld
xor
add
cmpsb
push
push
push
iret
std
test
loope
repz
jns
call
push
inc
outsb
dec
and
test
cld
jbe
daa
hlt
outsb
jo
dec
popf
jno
int
cs
sti
xchg
lret
lods
push
pop
jno
push
jb
enter
add
sti
xor
jmp
push
cwtl
push
cld
and
ret
dec
fldenv
add
mov
popa
sti
mov
jnp
cmpb
dec
hlt
sti
xchg
jae
popa
jmp
les
push
mov
int3
movsb
jnp
mov
push
jecxz
sbb
loope
popa
mov
pop
jnp
pop
es
xchg
push
cld
loop
mov
imull
ret
test
repnz
pop
pop
pop
cs
bound
dec
sub
xor
and
adc
in
mov
rorb
lea
xor
iret
inc
mov
rorb
bound
sbb
cmp
pop
adc
mov
adc
mov
jne
mov
stc
cmc
sarb
inc
pop
enter
jbe
cwtl
pop
mov
std
pop
or
lea
or
nop
cwtl
les
insl
ds
sbb
jl
dec
sub
jmp
aad
fs
jno
xchg
repnz
xlat
inc
mov
pop
int3
mov
cld
pop
dec
pop
imul
clc
dec
bound
dec
testl
pop
sbb
out
fwait
loopne
sbb
cwtl
xor
clc
testl
adc
sub
imul
fdivrs
ja
les
mov
in
add
fwait
push
dec
std
sbb
and
outsb
jbe
push
testb
pop
movsb
sub
xchg
mov
adc
shrb
adc
pushf
ficompl
dec
ja
ret
xchg
add
test
ret
sbb
pop
loope
inc
mov
add
dec
mov
jmp
mov
ret
addr16
xor
cld
cs
cmp
jo
lret
mov
dec
fiaddl
add
testl
jnp
pop
dec
xor
fdivrs
jbe
push
shll
cmc
sub
sub
int
mov
jl
pop
sub
imul
movsb
add
loope
in
lods
sub
shr
jg
rcrl
mov
mov
inc
dec
cltd
negw
orb
addr16
aaa
jge
aad
je
leave
dec
mov
jo
fs
bound
out
iret
outsl
inc
cmp
cmp
cmp
inc
pop
inc
rcll
cmp
or
sbb
out
lds
xchg
in
outsl
stos
outsb
mov
cmp
xchg
hlt
cmp
inc
xchg
sbb
inc
sub
cmpsb
js
cmpsb
js
imul
sub
jmp
aad
cwtl
leave
pop
mov
hlt
jno
pop
dec
test
subl
fmul
inc
ss
gs
lods
mov
push
jne
lds
or
hlt
push
int
les
mov
lds
out
dec
push
mov
mov
movsb
jge
push
mov
xor
stos
mov
dec
leave
decb
repnz
inc
sub
cmc
inc
sbb
sub
dec
aas
sti
popa
jl
fs
fnstsw
movsb
add
js
jae
add
jb
out
mov
pop
push
push
xchg
notl
gs
mov
mov
data16
out
setnp
repz
push
scas
addr16
jno
xor
cmpsb
stc
sub
ret
xchg
scas
jl
sti
or
test
roll
jmp
sbb
mov
dec
cmp
or
sub
notb
cmp
insb
jns
mov
and
sub
jnp
outsb
call
adc
sbb
stos
js
loop
mov
ret
pop
mov
and
dec
aam
pop
out
xchg
push
push
lcall
push
lcall
dec
adc
nop
adc
lea
adc
xchg
call
movsl
adc
xlat
inc
adc
sbb
adc
leave
test
scas
mov
enter
sbb
mov
out
iret
sub
test
jg
outsb
fldt
push
dec
adc
dec
out
sar
hlt
lock
inc
test
sub
shlb
dec
fwait
mov
mov
fs
fdivs
adc
outsl
sub
or
ret
dec
xchg
dec
cli
loop
dec
xchg
fcmovnb
sub
out
pop
pop
jae
inc
adc
addr16
call
data16
sbb
in
gs
jge
pop
jne
push
add
jmp
or
push
xlat
ja
mov
bound
or
enter
mov
sbb
xchg
jae
pusha
aad
inc
test
loop
jns
jp
dec
cs
enter
adc
cmpsb
mov
test
movsb
popa
xor
outsb
jp
dec
mov
andl
push
imul
cmc
fnsave
and
cmc
test
sbb
insb
out
or
mov
or
adc
leave
mov
sbb
jmp
sbb
test
stc
stos
rcl
or
xor
daa
bound
stc
call
inc
les
movsl
outsb
mov
push
adc
push
jns
mov
push
cli
addr16
in
mov
push
nop
mov
notl
int3
sub
add
mov
xchg
dec
sub
ret
jmp
subb
pop
xchg
push
pop
fcoml
push
sub
clc
push
int
scas
hlt
push
sbb
stos
daa
pusha
outsl
scas
mov
aad
popf
inc
imull
cmp
mov
imul
xchg
xchg
adc
xchg
and
cltd
inc
popf
jge
xchg
addr16
jmp
push
xchg
cmp
fcoms
sbb
out
imul
and
cmc
stos
sub
das
jb
stos
and
cmpsl
rorl
ds
mulb
mov
arpl
pop
iret
xchg
aam
js
push
in
lods
or
pop
jp
cs
jg
inc
sub
into
iret
daa
int
pop
cmc
lret
xchg
or
aas
addl
sbb
hlt
adc
sbb
cmp
inc
mov
popa
rcrb
and
pusha
jl
dec
jl
lods
js
jp
je
dec
jbe
pop
xor
pop
jo
jb
aaa
jl
push
add
dec
imul
lods
adc
out
pop
inc
repz
rcll
push
js
mov
mov
xchg
pop
xchg
daa
mov
jp
lea
push
pop
pop
les
adc
test
inc
sbb
pop
dec
dec
call
cs
dec
cmp
add
xor
ret
out
cld
inc
aad
test
out
cmp
and
or
es
add
inc
out
push
out
cmp
test
test
mov
rclb
sbb
outsb
jp
addr16
dec
lods
jo
aas
call
mov
sbb
push
ljmp
test
ja
adc
lea
mov
fcom
add
in
dec
scas
out
mov
fs
shll
pop
movsl
loop
hlt
cbtw
push
scas
nop
imul
movsl
inc
ja
xchg
fs
ljmp
lods
addr16
les
inc
add
sub
mov
jecxz
sub
js
push
dec
add
sub
rcrb
dec
stos
lret
stc
aam
mov
jbe
das
in
mov
loopne
sbb
lret
xchg
adc
aaa
daa
lods
pushl
inc
cli
dec
sarl
popa
push
push
mov
cwtl
shlb
jl
repz
jle
hlt
cld
std
mov
sub
outsb
inc
addr16
mov
cs
pop
inc
in
decb
jl
jl
in
repz
out
insb
sub
retw
push
les
add
imul
lea
xchg
js
lmsw
sub
std
dec
movsb
push
fistl
scas
enter
les
jle
pop
lret
iret
ljmp
inc
push
aaa
inc
mov
sbb
jecxz
js
push
popf
push
push
clc
sub
push
cli
out
nop
or
imul
fs
inc
outsb
lods
ret
icebp
dec
pop
call
add
das
shrb
aas
daa
pushf
and
adc
cmp
adc
fsubr
les
cmp
or
repz
jbe
pusha
lods
fmuls
daa
add
int3
dec
shl
loop
and
pop
push
sti
jmp
mov
outsl
inc
hlt
xlat
js
or
push
or
xor
add
inc
pop
call
fwait
call
sbbb
dec
fmuls
aad
and
outsl
xchg
add
or
ret
push
fisttpll
int3
dec
test
jmp
or
xor
dec
pusha
sti
call
dec
hlt
cmp
mov
mov
jo
out
inc
into
adc
push
cmp
test
inc
aam
push
pusha
ljmp
jp
mov
jne
out
mov
daa
iret
pop
sbb
xchg
jno
and
bnd
rorb
sub
push
and
mov
movsb
insl
call
inc
pop
cwtl
xchg
cmp
call
out
fisubrl
mov
or
rorl
cli
pop
lret
test
xor
call
call
dec
pop
push
jle
fs
rcrl
sub
jnp
adc
xor
sub
call
bound
push
jne
int
mov
shlb
aad
cli
outsl
inc
lock
dec
mov
push
cmp
add
adc
or
push
or
inc
popa
data16
imul
outsb
ja
push
lods
out
pop
aaa
ja
inc
fnstsw
data16
shlb
mov
sbb
sbb
test
js
sub
add
sarl
sub
rorb
stos
and
sbb
popa
mov
outsb
jl
push
stc
fistpl
loop
push
jns
dec
sbb
sub
popf
test
push
cwtl
mov
mov
cmp
jne
xor
outsb
xchg
aas
shlb
adc
dec
sub
lock
sub
mov
into
dec
xor
xchg
mov
roll
and
loope
scas
int
jbe
adc
push
push
mov
dec
in
out
cmp
and
lods
lret
aam
cmp
outsb
mov
lret
out
inc
dec
test
imul
filds
adc
test
outsb
inc
push
pop
aas
pusha
xchg
aas
xlat
jno
sub
xor
adc
mov
mov
addr16
les
push
popa
fwait
mov
outsb
cmpb
stc
lea
jnp,pt
in
add
inc
jge
punpcklbw
ret
test
mov
cmp
xchg
jmp
cwtl
sti
test
loope
in
jb
loope
outsl
xor
cld
and
sbb
inc
xchg
in
cmpsl
les
hlt
push
mov
out
loopne
int3
outsb
imul
in
int
xchg
pop
cld
test
insl
shl
jae
call
repz
cmpsl
inc
and
in
int3
cmp
add
int
push
rorw
leave
out
sub
outsb
jb
mov
push
cltd
popf
jno
in
test
inc
out
fwait
lods
test
or
sub
imul
pop
pop
jne
cwtl
inc
aaa
pusha
or
pushf
adc
nop
or
xor
adc
adc
mov
popa
inc
loop
cwtl
sahf
jne
int3
add
loopne
add
mov
or
rol
fsubp
mov
scas
mov
arpl
pop
pop
cwtl
rep
cmp
mov
mov
xchg
mov
sbb
pushf
push
into
std
data16
sti
mov
arpl
sub
fldt
xlat
mov
int
nop
push
xchg
icebp
cmp
lods
and
push
insl
cmpsl
cmpsb
je
or
test
call
repz
je
movsl
pop
and
sub
pop
mov
jecxz
int3
ds
inc
fs
into
aaa
cmpsl
leave
jmp
mov
push
cwtl
jl
sub
out
pop
jns
lret
fwait
push
cmpsl
pop
push
xor
push
in
sub
jo
jle
fwait
jp
push
icebp
lods
cs
dec
int3
push
loope
into
popa
stc
cmp
inc
clc
sbb
jle
test
icebp
dec
cmp
jbe
imul
lods
add
movsb
aaa
adc
scas
fstl
addr16
jb
mov
insl
arpl
sub
xchg
repz
sahf
sub
bound
scas
sbb
sbb
cmc
jmp
sub
xor
test
hlt
dec
or
mov
dec
pop
cmpsl
into
dec
pushf
lret
ret
or
rcl
scas
js
into
dec
pop
ljmp
xrelease
lock
movb
test
cmp
and
scas
mov
adc
push
sbb
sti
pop
xor
pop
lock
jo
in
xchg
mov
xor
sti
cmp
pushf
jne
xlat
dec
int
ret
out
jge
push
ja
in
fisttpl
adc
mov
mov
jbe
cld
int3
xor
sub
and
sub
xor
jecxz
xlat
ret
nop
sti
or
rcr
dec
push
lock
xlat
imul
int
or
shll
xor
inc
adc
test
iret
lods
enter
dec
adc
int
or
dec
insl
fwait
inc
pop
cwtl
outsb
inc
xchg
add
xchg
stos
in
ret
les
lock
data16
cli
iret
pop
xchg
jg
mov
xchg
mov
dec
jo
lret
inc
sub
sbb
push
scas
mov
lock
cmc
shrl
test
shrl
in
dec
ljmp
stos
js
out
cmp
incb
jp
lock
loopne
pop
jp
clc
test
xor
cs
inc
stos
mov
notl
popa
scas
sbb
cmp
xor
stos
dec
addr16
xchg
dec
push
inc
xor
mov
sbb
push
stc
mov
je
pop
mov
fs
mov
movsb
call
pop
pop
mov
mov
and
stos
pop
push
add
andb
cmp
insl
out
flds
in
dec
xchg
cmp
and
aam
push
jmp
jp
add
push
je
outsl
dec
outsb
sbb
inc
adc
xlat
cld
loope
push
jecxz
push
sub
sbb
cld
stos
lcall
cmp
outsl
push
fsubs
or
jo
mov
jle
adc
test
inc
repnz
push
mulb
push
cltd
and
xchg
test
dec
mov
mov
mov
jl
mov
imul
lahf
or
scas
test
lods
mov
sub
cs
nop
movsl
into
jecxz
xchg
cld
or
test
movsb
mov
mov
xchg
mov
push
jnp
scas
scas
push
ss
movsl
into
pop
and
js
push
inc
sub
push
push
inc
inc
lods
dec
inc
mov
ja
inc
lret
dec
mov
adc
rcrl
adc
inc
mov
call
mov
fistps
mov
movsl
cli
add
pop
into
add
call
daa
sub
xor
mov
push
sub
movsb
iret
pop
stc
int3
add
imulb
adc
pop
cmp
and
aad
lahf
jecxz
and
dec
jecxz
xor
sarl
pop
dec
lock
adc
fisubl
lea
out
les
sub
scas
mov
repz
push
add
add
movb
dec
out
fidivrs
or
imul
xchg
mov
shlb
inc
inc
repz
dec
dec
pop
sahf
hlt
test
jle
out
enter
push
inc
jnp
and
filds
cmp
cmp
adcb
adc
jecxz
clc
pop
pop
out
addb
jl
sub
jl
mov
cmp
in
pusha
push
test
mov
in
xor
fs
cmp
dec
mov
lods
mov
outsb
push
and
repz
ja
dec
flds
xor
arpl
test
xor
data16
and
aas
pop
mov
dec
dec
and
cmp
rcrl
xlat
out
and
bound
inc
lahf
push
fistpl
sub
aam
fmul
xchg
pop
arpl
push
lods
into
or
adc
mov
xor
xchg
pop
push
lods
pushf
fwait
shlb
js
jl
scas
sbb
adc
imul
outsl
int
xchg
cwtl
push
out
xor
pop
push
gs
or
fcmovb
test
dec
fldl
push
jno
dec
jo
pop
stos
mov
fs
sub
aad
rcrl
mov
push
shlb
iret
aam
inc
mov
xchg
dec
loopne
std
cli
into
add
push
in
out
rorl
outsb
and
push
mov
pushw
loop
fldt
fcmovnb
push
repz
hlt
push
bound
xchg
pop
pop
inc
ror
addr16
push
pushf
jg
lcall
std
jb
enter
jne
cmp
xchg
mov
jb
mov
test
call
mov
pop
mov
adc
stos
mov
ja
adc
fcomip
sbb
push
arpl
fwait
out
sti
or
loope,pn
sbb
outsl
data16
out
push
mov
jge
notb
add
testb
adc
adc
mov
or
adc
scas
lcall
sbb
push
lretw
sahf
cmp
push
fiaddl
repz
push
cs
out
stos
out
add
ja
aad
fs
imul
lea
inc
aaa
das
sbb
fwait
std
pusha
mov
add
xchg
stc
jecxz
xchg
out
sbb
roll
lods
aad
lock
shlb
add
cs
cs
rol
dec
scas
mov
jg
xchg
push
inc
xor
hlt
push
cmpsb
out
loopne
fs
or
pop
dec
push
les
xrelease
les
rcrb
mov
aad
call
ja
push
ljmp
imul
sub
repz
push
fisubl
mov
dec
mov
inc
jecxz
inc
mov
mov
pop
dec
sub
sahf
out
sti
mov
xchg
cld
dec
out
inc
sbbl
in
scas
sbb
pop
dec
jmp
scas
ljmp
inc
ja
arpl
dec
pop
test
in
and
sub
or
pop
jnp
dec
push
loopne
jne
std
xchg
sub
dec
enter
and
and
divb
cmpsl
shrb
lods
lea
bswap
sti
inc
scas
bound
and
rol
jo
xor
cld
movsl
fs
cld
popf
cmp
cli
sti
xchg
insl
popf
mov
lea
lcall
xchg
jp
push
fwait
and
sbb
pop
out
mov
xlat
mov
and
dec
stc
dec
sub
inc
pop
mov
and
cwtl
repz
and
out
mov
outsl
mov
pusha
dec
fldenv
dec
dec
push
dec
lock
pusha
mov
fimuls
push
push
fstl
cld
mov
push
inc
push
xchg
int
inc
mov
mov
hlt
dec
repz
fbld
in
lock
xor
test
mov
mov
jnp
daa
pop
out
sub
aas
push
daa
dec
inc
mov
repz
mov
pop
push
xor
dec
daa
sub
mov
pop
xor
push
and
outsl
ja
test
sbb
and
inc
jbe
mov
sub
nop
clc
lds
and
push
jle
bnd
adc
mov
lods
aad
pop
cs
and
fs
jge
mov
imul
in
jbe
xor
jmp
add
or
dec
push
push
sub
outsb
in
add
addr16
loopne
sbb
in
int3
jae
orl
push
and
inc
push
loopne
inc
cmp
rcr
hlt
ja
push
and
adc
cld
inc
fstpl
test
mov
cwtl
push
jge
pop
add
frstor
int
adc
aaa
lds
loope
or
adc
mov
insb
mov
stc
jecxz
sbb
push
loope
dec
mov
push
out
imul
xor
lds
add
shrb
arpl
movhps
data16
cmpsb
inc
leave
lret
popl
call
jo
aaa
movsl
jmp
inc
outsb
push
pop
fwait
mov
ret
loope
ljmp
push
xchg
ret
or
and
cmp
xor
sub
mov
sbb
out
jbe
adc
cmc
in
xor
out
ja
mov
int3
pusha
adc
and
mov
add
adc
jo
data16
inc
popa
out
sbb
sub
out
lods
jae
mov
sbb
dec
addr16
inc
stc
mov
mov
xor
push
mov
lret
int3
sbb
pop
pop
fsubl
xchg
mov
adc
push
mov
std
xchg
bound
nop
mov
or
inc
and
mov
inc
aaa
push
dec
out
imul
inc
outsb
addb
mov
or
in
sbb
imul
cmc
les
outsb
pop
inc
call
pop
mov
or
jl
imul
mov
jmp
call
jbe
mov
pop
out
jmp
fwait
je
out
fs
or
add
adc
sbb
xchg
mov
or
pop
shll
adc
js
stc
dec
push
jp
jo
jecxz
sbb
push
and
push
sub
dec
les
and
jb
xor
dec
add
mov
loopne
inc
sbb
inc
getsec
lods
adc
dec
imulb
cli
pop
call
jle
cs
stos
in
sub
test
adc
bnd
into
out
pop
outsl
insl
sbb
xchg
roll
dec
loop
or
and
dec
jg
pop
ret
and
test
push
inc
dec
mov
divb
clc
lods
in
xchg
inc
cmp
in
into
fisttps
mov
push
outsb
mov
mov
pop
fisttpll
adc
out
popf
cmp
or
push
divb
xor
mov
scas
adc
xchg
jne,pn
jmp
outsl
js
ljmp
imul
addr16
jmp
cmpsb
push
notb
sub
xor
push
fwait
push
inc
xor
inc
jmp
xor
scas
fs
sbb
scas
sbb
scas
fs
xlat
push
aas
xor
jl
push
pop
sub
hlt
push
fisubl
push
push
mov
rorl
adc
inc
arpl
sbb
push
sbb
dec
pop
sub
xchg
sub
mov
cmp
or
xor
dec
lret
cs
pusha
scas
mov
lcall
xchg
sub
add
xchg
cmp
jmp
jp
sbb
repz
pop
pop
inc
dec
dec
incl
cld
cmp
pop
add
stos
add
dec
sbb
scas
pop
inc
sbb
inc
outsl
je
sbb
xor
dec
out
jns
imul
cmp
decb
sarl
adc
fs
int3
bound
out
aaa
lcall
mov
add
mov
and
add
cmp
cwtl
or
jmp
dec
mov
cmc
cltd
pop
shlb
sub
fsubrs
sarb
lods
movsl
inc
int
mov
xorb
pop
popa
jbe
sbb
lret
in
insl
lds
mov
call
pop
ret
loopne
inc
loopne
pop
ret
imul
and
fldcw
roll
mov
fwait
pop
inc
bound
mov
sbb
push
aaa
js
push
sbb
rorb
jle,pt
sbb
cmp
sbb
cmpsb
int3
or
iret
pushf
mov
adc
sbb
sub
jmp
rcrl
jp
dec
clc
in
sarb
lds
jl
dec
lods
lret
popf
ficoms
in
push
mov
or
in
mov
jle
cmc
cld
mov
cmp
movsb
cmc
push
js
jmp
cmpsb
adc
mov
js
fcomp
out
xor
outsb
int
sbb
fwait
setb
pop
push
daa
sub
inc
mov
adc
xchg
and
push
jb
int3
inc
mov
mov
out
aas
cmp
dec
xchg
fld
std
add
or
inc
test
pop
lds
push
imul
stos
out
data16
mov
push
pop
clc
nop
loop
pop
mov
les
dec
bound
cli
pop
push
adc
ror
fs
or
out
dec
rclb
and
fldenv
cli
add
push
dec
sbb
pop
dec
pop
fcoml
mov
inc
mulb
idivl
pop
or
add
cmpsl
push
in
rcrb
ret
out
mulps
xchg
push
test
ret
mov
adc
popa
data16
jl
and
pop
fld
push
nop
push
mov
out
ret
negl
dec
jl
dec
inc
mov
scas
leave
inc
cmp
outsl
mov
subl
cmpsb
push
sub
adc
push
add
cwtl
inc
lcall
outsb
es
in
pop
out
pop
or
das
dec
incl
add
stos
cli
jbe
fisttpl
jb
sub
fsubp
xor
jp
dec
xchg
adc
fdivrl
test
sub
int
mov
cli
dec
ret
fcoms
cmp
pop
inc
fldenv
addl
outsl
das
bound
jp
jle
outsb
repz
mov
jg
iret
pusha
mov
test
popf
loopne
idiv
incb
stc
addr16
jnp
adc
fwait
enter
cld
sbb
rcrl
push
mov
xor
out
mov
xor
clc
xor
mov
lods
xor
jo
ret
lea
stos
mov
mov
daa
xchg
cmp
xchg
inc
cmp
mov
push
mov
adc
daa
das
ret
ret
out
outsb
dec
cmpsl
imull
incb
adc
xor
xchg
fwait
pushf
push
lods
mov
mov
jbe
in
cmp
cmp
mov
mov
add
cmpxchg
or
movsl
jno
xor
and
mov
popf
inc
push
push
bound
adc
sbb
sbbb
idivb
jmp
sub
push
bsf
dec
fiaddl
scas
rolb
movsl
mov
scas
sbb
stos
jp
lods
das
push
pop
data16
divps
aaa
add
fwait
call
les
je
cmc
stos
loopne
stos
fmul
push
hlt
sti
mov
icebp
ss
hlt
lods
cwtl
outsl
jg
fbld
rclb
imul
pop
inc
push
popf
jle
cmpsb
xor
cwtl
xor
in
cwtl
jmp
outsl
mov
push
mov
cs
adc
push
xor
stos
addr16
pop
out
push
push
lcall
pushf
jb
imul
jnp
jmp
sbb
add
data16
aas
xor
inc
adc
fwait
in
outsl
fwait
out
cwtl
pop
sti
mov
int3
jecxz
sub
push
cli
cld
out
xchg
stos
in
mov
in
test
xor
or
sub
call
in
call
mov
mov
sti
inc
sbb
andb
leave
mov
loop
out
dec
inc
daa
jp
inc
das
pusha
stos
movsl
in
rorl
dec
clc
js
xchg
fcmovne
imul
mov
mov
out
test
jp
imull
les
or
add
sbb
and
lods
es
repz
fucom
rol
insl
loopne
bound
sub
cmp
xchg
jnp
cmp
fwait
push
and
pop
out
mov
cs
mov
sbb
pop
sbb
fldpi
sbb
xlat
fs
xchg
stc
dec
sti
fstl
xchg
sti
add
les
adc
adc
fs
cwtl
cld
mov
add
cmpb
jns
imul
lds
and
data16
or
or
inc
xlat
pop
mov
sub
out
fstps
stc
stos
les
pop
enter
push
jae
data16
fwait
sti
je
sbb
mulb
sbb
out
mov
dec
adc
xchg
les
push
out
push
arpl
hlt
mov
mov
repz
call
sbb
cmp
ret
outsl
adc
loopne
mov
pop
push
mov
shrl
push
icebp
cs
divl
push
cmpsl
xor
jne
add
adcb
sahf
imul
test
dec
aas
loope
lret
in
jb
test
inc
inc
jle
clc
mov
jne
int
sub
test
add
inc
inc
dec
icebp
das
pusha
sbb
out
ret
cmc
stos
enter
outsb
or
jle
out
dec
pop
push
roll
dec
sbb
push
popf
and
sbb
sub
data16
je
outsl
hlt
out
sbb
clc
push
loop
sbb
push
dec
inc
test
fs
bound
dec
sbb
pusha
stos
xchg
sbb
sti
ja
arpl
pop
mov
inc
loopne
in
xor
add
call
xor
dec
push
pop
push
mov
jp
fildll
inc
mov
mov
repz
jb
test
hlt
mov
clc
arpl
xchg
stos
bound
dec
sbb
test
inc
nop
xor
xchg
jecxz
arpl
jb
push
hlt
cmp
insl
cs
jb
scas
lar
fs
xor
sub
lock
int3
lret
adc
sub
jns
out
int
sub
xchg
push
mov
and
adc
push
fdivs
leave
decb
andb
xor
mov
push
imul
push
jl
and
xor
daa
jg
mov
popf
hlt
aad
jl
jbe
dec
lret
or
ret
sbb
mov
mov
in
or
push
mov
jo
inc
adc
lret
push
mov
in
rolb
imul
push
scas
dec
xchg
ss
xchg
mull
adc
push
ds
popa
push
daa
jbe
in
xor
aad
jge
push
jl
jo
dec
xor
in
je
stos
outsl
mov
mov
xchg
popf
cmp
lds
pushf
popf
mov
mov
pop
add
cmp
cld
jo
sbb
inc
lret
in
test
out
mov
loop
cmc
mov
fistl
inc
jb,pn
out
out
sbb
mov
ss
mov
call
xor
push
mov
int
jg
dec
jge
mov
cld
mov
mov
mov
or
lahf
out
and
dec
mov
hlt
inc
iret
inc
les
jecxz
daa
sub
or
jl
mov
pop
sub
fs
ds
ret
je
cs
dec
cwtl
adc
sub
mov
out
ficoms
xchg
scas
mov
cmp
or
popa
popf
adc
dec
daa
lret
mov
inc
pusha
fs
push
pop
dec
aaa
pop
pop
inc
fstl
vmwrite
jne
mov
into
adc
fs
xor
push
call
pop
sbb
movsb
scas
jl
pushf
in
outsl
xchg
ja
in
std
lds
into
adc
push
inc
jnp
hlt
bound
inc
jge
ret
daa
clc
sub
js
mov
pusha
call
and
and
lret
adc
fistpll
sbb
mov
jmp
dec
adc
push
xor
stos
into
sub
in
xchg
out
jecxz
push
mov
fs
inc
outsl
sbb
dec
and
push
add
dec
pusha
xchg
leave
lds
add
rcrb
push
and
movb
add
lret
xlat
test
jae
jl
sti
popf
sub
fwait
inc
js
in
scas
mov
in
scas
xchg
push
stc
mov
fadd
sub
sbb
inc
xchg
outsb
int
cld
cmp
xchg
mov
push
stos
out
nop
inc
cmp
rol
dec
sub
mov
popa
sub
jns
dec
movb
ds
mov
lret
mov
cmp
push
push
daa
mov
or
out
mov
inc
test
aad
leave
lods
dec
sbb
inc
push
sub
clc
inc
and
xadd
fnstenv
dec
cmpb
data16
sbb
rorl
lods
or
jg
mov
and
nopl
jne
cmpsl
jp
lods
loope
and
aad
dec
add
dec
jl
or
leave
inc
pop
repz
fwait
mov
mov
mov
xor
inc
repnz
xor
outsl
nop
test
dec
pop
jl
inc
dec
cmp
rorb
fwait
jmp
push
aam
inc
cli
push
cmpsb
lods
out
push
scas
out
pop
out
mov
in
rorl
lods
push
jbe
repz
outsb
mov
add
push
ljmp
xor
sub
xchg
jle
lds
cs
fmuls
loopne
sbb
in
loope
push
fimull
jl
pusha
sbb
in
sub
xchg
sbb
lods
out
cltd
sub
pcmpgtd
xchg
and
out
mov
sbb
or
sbb
js
push
out
xor
sbb
ds
inc
cmp
cmc
sbb
hlt
pop
jne
jne
cld
data16
ljmp
outsl
fsubr
mov
in
sbb
sbb
xor
sbb
inc
xor
jmp
out
sbb
stc
js
and
ja
fsubs
sbb
in
sbb
xor
sbb
sub
and
outsl
sbb
addr16
dec
sub
and
in
outsb
mov
pop
mov
mov
stos
nop
lds
lret
xchg
in
arpl
notl
xor
jbe
ja
add
dec
hlt
sbb
jne
into
je
mov
lds
lods
scas
dec
inc
sbb
sbb
sbb
sbb
scas
dec
jnp
fbld
scas
dec
clc
sbb
sbb
sbb
sbb
mov
sbb
sbb
mov
push
jb
aam
mov
mov
lods
jl
enter
cmp
sbb
dec
sub
dec
mov
dec
mov
dec
mov
dec
mov
mov
cmp
arpl
pop
push
les
dec
lods
push
scas
decl
test
or
jp
test
xor
fidivl
jl
mull
cli
sbb
test
or
cli
inc
stc
sub
push
cld
jae,pn
das
stc
mov
fs
inc
loope
push
xor
jg
and
add
and
enter
add
lock
inc
add
push
mov
fs
pop
loopne
jl
out
ja
pop
mov
sub
pop
inc
mov
dec
inc
mov
inc
inc
test
inc
inc
jnp
fs
ss
inc
jnp
fs
push
inc
push
clc
inc
sub
jb
pop
cmp
dec
imul
jbe
jl
in
fisubrs
dec
stc
mov
das
jge
ds
lods
jae
mov
fs
jno
mov
out
ja
dec
and
clc
rcrb
shlb
sub
dec
cmpsb
mov
jge
jno
pop
scas
inc
dec
sbb
sbbl
sbb
inc
xor
mov
sahf
test
imul
aaa
lret
int
push
mov
push
sbb
xlat
es
movsl
je
popa
add
into
push
push
stc
jmp
stc
loop
pop
enter
jbe
mov
movl
out
dec
dec
popf
xchg
rorl
int
outsl
gs
mov
call
inc
mov
in
in
mov
mov
mov
ret
bound
fisubs
out
jg
call
in
iret
and
jb
mov
ljmp
mov
pop
adc
or
dec
pop
daa
js
mov
popa
aas
jbe
mov
inc
sbb
dec
adc
shll
ljmp
lcall
test
popa
rorl
dec
fdivs
inc
pushf
jbe
mov
add
add
mov
ret
roll
adc
adcl
out
dec
lret
cmpsb
addr16
cmp
into
push
adc
pusha
xchg
lret
daa
mov
jl
ss
lods
push
imul
out
bound
push
xchg
add
sbbb
call
jno
jle
push
sub
int
imul
in
mov
sbb
push
ret
in
sbb
je
jle
and
imul
fwait
and
inc
cmp
out
outsl
or
out
pop
push
pop
ja
mov
sar
sbb
outsl
dec
fcompl
fsub
xchg
dec
xchg
adc
int
jg
jbe
int
in
int3
jle
adc
and
cmp
push
xchg
add
out
inc
adc
sbb
mov
aas
push
mov
stos
into
js
out
test
imul
sub
inc
add
add
jecxz
pusha
lret
add
inc
xchg
dec
or
jge
stos
popa
inc
in
call
in
dec
xor
into
fidivrl
cmp
jae
mov
jmp
adc
ss
fs
out
cmp
jle
lretw
lcall
les
test
pop
sbb
cmp
sub
lods
pop
fcoml
or
pop
adc
std
adc
adc
aad
or
out
aad
sbb
pusha
push
adc
pop
sbb
and
or
cmp
nop
popf
push
call
arpl
call
xchg
pop
jne
or
out
lds
inc
aas
dec
scas
mov
pop
or
mov
add
data16
fs
sbb
in
insb
fisubrl
pop
int3
jbe
stos
push
jge
pop
push
fistl
fucomp
test
xor
pop
xor
inc
mov
cld
jmp
inc
mov
adc
push
push
mov
ja
movsb
ds
dec
cs
mov
repz
cli
mov
mov
pusha
xchg
sbb
dec
pop
fadds
mov
dec
pusha
aas
or
sub
mov
push
adc
pop
fwait
push
sahf
or
cmp
mov
fs
out
repz
pop
inc
fwait
or
dec
notl
mov
into
inc
lock
pop
hlt
int3
test
fwait
outsb
dec
fs
xor
imul
popa
jo
cwtl
dec
imul
jl
je
arpl
xchg
imul
jne
stos
sbb
pop
inc
jge
in
dec
mov
addr16
dec
je
inc
shlb
arpl
decb
mov
mov
or
test
push
xchg
inc
fwait
arpl
pusha
sub
adc
cmp
cmc
rcll
mov
testb
jb
js
adc
das
in
xor
xchg
rcl
pop
jle
lret
je
imul
idivl
jl
jp
push
jl
jl
stos
lock
ret
pushw
out
fdivr
mov
cwtl
loopne
push
into
dec
popf
jle
out
loope
aaa
xor
adc
and
out
push
loop
aas
dec
pop
inc
pop
clc
test
inc
outsb
cwtl
minps
ret
popf
or
jp
scas
ret
rcl
lods
and
stos
dec
sbb
sbbb
inc
push
call
add
cli
or
fwait
stos
jo
fcmove
push
dec
and
inc
jne
mov
orb
dec
and
ja
push
sbb
fidivrl
mov
pop
pop
push
pop
popf
pop
ljmp
push
call
data16
inc
outsb
adc
bound
cmp
cmp
jo
pop
push
push
inc
cmpb
jmp
rcrl
jbe
inc
mov
mov
repnz
pop
jb
jg
or
and
sbb
pop
ja
mov
in
pusha
lods
stos
sub
push
out
out
sub
jb
push
movsl
jb
popa
out
lock
cmp
outsb
pop
xlat
xor
call
push
mov
xchg
ret
dec
mov
rcll
pop
and
xchg
sub
insb
or
bound
mov
testw
sbb
scas
or
sbb
cltd
mov
lds
test
add
fidivs
fs
nop
push
xor
aas
dec
out
sub
xchg
fisttpl
mov
add
pop
clc
xchg
insb
dec
lcall
push
out
test
push
cmpsl
loope
movsb
mov
inc
sbb
push
imul
fnstenv
loop
ds
xlat
xlat
jge
push
cld
dec
adc
pop
imul
jmp
pop
pop
pop
into
dec
fcmovb
gs
xchg
dec
jmp
and
testl
mov
aas
mov
jmp
xchg
les
jns
imul
ret
mov
popf
lods
test
inc
jb
rclb
lods
jno
ljmp
sbb
sahf
inc
pop
dec
popl
cmpsl
lret
xor
pushf
add
test
cmpl
xchg
sbb
lahf
ficoms
dec
jl
repz
mov
jb
xor
pop
xchg
jo
sbb
stc
xchg
cmpsb
sbb
pushf
jns
mov
ljmp
jae
jb
pop
ljmp
inc
ljmp
sbb
stos
out
dec
cmp
inc
lea
in
clc
mov
int
mov
mov
dec
jp
push
outsl
bound
mov
sub
popa
lret
jle
daa
data16
jbe
out
sbb
jb
jnp
sub
jg
imul
push
inc
inc
stc
xchg
jnp
call
and
sbb
pop
jl
xor
popa
fistl
mov
les
pop
imul
enter
mov
je
nop
scas
adc
cs
or
push
pop
ret
xlat
int3
adc
inc
aad
inc
mov
rcll
dec
push
leave
cltd
roll
and
mov
inc
ja
push
loop
imul
rcll
je
push
jl
cltd
outsl
jo
jb
pop
lods
cltd
xchg
in
leave
gs
enter
shlb
dec
les
dec
das
insb
scas
jge
jno
mov
push
fs
jecxz
inc
sub
mov
ror
mov
test
lahf
cmpsb
fistps
test
fsub
test
mov
lret
mov
std
jbe
mov
sbb
dec
imul
popa
jp
pusha
ljmp
mov
movsl
sbb
es
mov
je
sbb
out
and
imul
jbe
lock
xchg
cmp
pop
mov
jo
adc
in
dec
cmp
push
imul
outsl
loope,pn
sbb
pushf
dec
push
or
in
cmpsb
je
outsb
in
stos
les
shll
addr16
xchg
mov
sub
cmc
jmp
xor
int3
jp
ss
inc
mov
push
pop
xchg
jl
xorl
add
shrl
out
sub
out
pop
lock
jo
inc
jo
imul
inc
or
push
daa
dec
sti
fwait
popa
test
je
movsb
dec
xor
ja,pn
fwait
mov
fwait
outsl
push
add
sub
pusha
cld
lret
inc
fs
insb
aad
mov
push
push
rol
je
jge
js
xor
outsb
sub
sub
dec
jnp
ja
jl
outsb
push
addr16
inc
add
imul
sub
cmovo
roll
ror
imul
das
sbb
push
popf
cmpsb
jl
xchg
in
cmp
cs
aad
stos
jo
enter
hlt
in
mov
into
iret
mov
mov
add
dec
cmp
cmp
and
push
out
loopne
in
ret
stc
fwait
push
xor
jmp
dec
data16
test
sbb
inc
mov
and
or
addr16
jp
jb
adc
or
pop
test
outsb
mov
stos
jp
inc
jnp
sbb
out
xchg
mov
adc
dec
inc
js
jmp
fldt
xor
xchg
xchg
inc
mov
xor
push
pop
loop
mov
adc
inc
sub
arpl
xor
or
cmpsb
adc
call
inc
cli
mov
adc
cld
dec
mov
repz
loope
rcl
cs
shr
push
add
aam
dec
incl
jae
push
dec
gs
xorl
jp
outsl
push
and
push
gs
mov
sbb
jnp
inc
lret
cmpsl
out
push
push
ljmp
mov
mov
cmc
dec
js
add
adc
add
nop
ja
sub
mov
scas
mov
pop
fs
call
xchg
ret
push
fdivs
jbe
add
push
push
sbb
cmp
pop
mov
ss
iret
mov
or
inc
mov
inc
mov
push
cmp
dec
leave
xchg
push
fmuls
inc
ret
dec
add
cmc
xchg
xchg
sbb
pop
out
stc
adc
je
push
mov
dec
and
lods
nop
test
fsubl
out
leave
insl
jns
cmp
pusha
arpl
in
movsb
push
cmp
test
push
push
inc
andl
pop
lea
fs
lods
int3
cwtl
xchg
inc
lret
jne
sbb
pop
add
mov
push
xchg
push
lods
insb
xchg
out
xchg
fisttpll
sbb
pop
ljmp
movsb
fcoms
jnp
jecxz
sti
sbb
cmpsb
inc
xchg
loopne
push
pop
pop
loope
sbb
dec
inc
cld
push
dec
mov
cmp
mov
dec
mov
call
or
pop
cmpsb
add
jo
push
cmp
pop
mov
out
lret
flds
bound
mov
pop
and
call
push
mov
jo
data16
pusha
inc
loop
xchg
fisubrs
or
js
cmpsb
mov
dec
es
mov
mov
pop
jg
dec
iret
rorb
test
push
les
dec
arpl
repz
outsl
mov
fwait
call
rcr
adc
clc
adc
fistps
jl
inc
popf
test
sbb
jb
mov
xchg
mov
sti
cwtl
jle
or
or
jl
cmp
test
pop
sarl
data16
mov
js
out
mov
jae
outsl
jecxz
dec
leave
sbb
push
fildll
mov
mov
mov
jp
sub
adc
in
data16
inc
ret
aas
imul
dec
mov
pushf
inc
lods
mov
call
pop
lds
push
or
lods
inc
cmpsb
add
popf
add
inc
sub
in
pop
rorl
inc
ret
call
push
js
inc
jmp
fdivrp
push
je
test
imul
cs
gs
or
outsb
popf
outsb
ja
inc
in
xchg
nop
mov
jno
insl
jge
stc
clc
jnp
test
shrb
test
hlt
cwtl
popa
jle
add
pop
nop
hlt
pop
cmp
aad
aaa
push
stos
pop
rcl
ljmp
aad
push
jmp
sbb
sahf
jl
and
rclb
clc
in
inc
xchg
sub
sub
mov
mov
ljmp
push
in
outsl
iret
pop
mov
fs
mov
bound
rcrl
addr16
mov
cmpsl
je
testl
stc
adc
stos
inc
inc
dec
adc
fsubs
stos
cmp
pop
push
mov
jb
pop
repz
or
inc
inc
les
sbb
loope
mov
cli
jnp
sti
pop
lock
inc
mov
inc
add
js
cld
dec
pop
mov
or
add
popa
into
test
add
cs
pop
push
inc
fcomps
leave
popa
xchg
rcrb
ss
push
pop
fdivrs
stos
dec
adc
out
adc
outsl
aas
mov
je
lock
ljmp
sbb
dec
pop
movb
cmp
outsb
cs
push
jnp
add
sub
inc
shl
mov
test
test
adc
add
jg
mov
or
cmpsl
cmp
pusha
cmp
mov
mov
push
fisttpl
jmp
orb
fnstcw
fiadds
pusha
les
jl
cwtl
pop
int
pushf
cmpsb
push
out
pop
inc
mov
addl
loopne
dec
add
jle
fldcw
jp
mov
dec
in
test
test
notl
mov
pop
xor
popa
arpl
ret
jl
sub
insl
data16
jo
mov
push
cld
fldz
mov
mov
sub
push
xchg
pop
push
jle
dec
mov
icebp
add
mov
test
divb
pop
add
out
dec
data16
in
adc
fidivrs
aas
push
jle
dec
cli
sub
pop
das
pop
push
fdivrp
hlt
ret
je
dec
pop
xor
jge
fsubrs
mov
cmp
dec
pop
mov
inc
pop
dec
or
dec
roll
repz
sub
ja
fstpl
ret
adc
adc
mov
mov
dec
aam
mov
mov
xor
push
mov
inc
outsl
mov
cmp
cld
push
add
sti
enter
test
push
push
mov
xor
cmpsl
cmp
in
xchg
fwait
sahf
aam
loope
outsl
fbstp
mov
sub
mov
xchg
pop
add
dec
jmp
mov
or
xor
cmp
out
test
mov
adc
pop
aas
out
test
adc
roll
mov
xchg
cli
shrl
lret
out
pop
std
sti
arpl
outsb
mov
dec
adc
lea
and
add
cltd
ret
push
push
mov
mov
test
outsb
jnp
jl
into
mov
xor
fldenv
sbb
add
incl
in
test
fldt
aaa
dec
sub
addb
push
cltd
ffreep
fsts
lret
inc
das
ljmp
dec
pusha
xacquire
or
inc
iret
dec
cwtl
js
cli
add
push
cmpsl
dec
mov
sti
aad
fadds
cmp
call
stc
shlb
mov
insl
inc
sbb
pop
inc
in
movq
rorb
popf
pop
push
jg
scas
dec
bound
jg
pop
stos
addr16
cli
jge
stos
push
jnp
sbb
add
rorb
add
test
pop
out
sbb
dec
rol
inc
jbe
loop
sbb
loopne
data16
sbb
pop
aad
roll
push
stos
scas
jno
mov
in
fwait
jecxz
xchg
stos
mov
in
sub
dec
lret
sub
push
xor
scas
clc
out
mov
insl
cmp
sub
adcl
xchg
and
ljmp
in
out
addr16
sahf
inc
repnz
jp
adc
push
dec
push
sahf
cmpsb
fs
lret
lret
ljmp
test
std
xor
mov
mov
xor
mov
popf
cli
push
adc
mov
outsb
or
negl
cmp
shufps
ret
int
dec
pop
adc
sbb
add
sbb
and
jecxz
sub
lock
add
xor
popa
mov
push
gs
and
push
into
and
addb
popf
lods
pop
fcoms
and
in
cmp
into
xchg
ds
sahf
push
adc
jmp
jl
pusha
xchg
push
in
stos
push
int3
push
push
and
push
jl
mov
push
adc
pop
outsl
je
or
cmpsb
xchg
daa
and
push
xchg
sti
into
int
push
popf
dec
repnz
fmulp
cs
nop
adc
andl
cmc
js
stos
shll
mov
adc
cmp
jbe
into
jo
dec
push
mov
rcll
int
inc
test
lret
xchg
clc
outsb
pop
data16
cli
sub
jle
and
jmp
push
mov
push
movsb
fidivrl
sti
test
mov
jp
das
int3
xchg
rcrl
dec
xor
add
dec
out
ljmp
jns
push
push
sbb
stos
cmp
lea
enter
in
jle
sub
add
shrl
cmpsb
xchg
aaa
jno
test
popw
insl
insl
sub
mov
or
mov
mov
sbb
pop
out
ftst
jp
mov
arpl
jp
inc
push
mov
das
add
sub
mov
lret
aas
mov
arpl
mov
and
push
js
out
inc
inc
mov
int
sahf
mov
dec
test
jo,pt
pop
lds
out
or
ljmp
imul
sub
pop
sbb
sbb
mov
loopne
ss
adc
and
ret
inc
dec
aad
mov
negb
or
cmp
jmp
add
xchg
pushf
daa
std
shlb
push
in
push
stos
shr
jb
and
daa
addb
pop
mov
bound
sbb
fcoms
jb
cmp
and
dec
add
sub
push
jmp
pop
inc
stc
xchg
push
mov
pusha
inc
out
mov
cmp
mov
mov
mov
orl
sbb
jecxz
outsl
pop
icebp
push
sub
sbb
test
inc
loope
in
sbb
xor
dec
jmp
add
inc
push
jmp
bound
mov
sbb
jo
xor
pop
pop
or
icebp
jb
scas
popf
shrl
pop
sbb
dec
and
dec
push
insl
lock
repz
cmpb
mov
decl
inc
mov
cmp
inc
mov
pop
scas
push
in
pop
push
ret
push
sbb
push
stos
leave
pop
das
es
sbb
pop
stos
call
punpckhdq
cmp
jo
pop
bound
jl
adc
pop
mov
mov
xor
repnz
add
stc
adc
js
imul
lock
jb
aas
jb
dec
out
adc
fwait
pop
inc
xchg
xchg
andl
insw
jp
flds
xchg
idivb
ss
insb
sbb
repnz
mov
stos
dec
sbb
dec
jbe
icebp
dec
sbb
dec
pop
inc
aas
pusha
stos
inc
xchg
jle
les
ss
inc
mov
or
jmp
sbb
stos
fdivrs
ds
rcrb
cmp
xchg
mov
jp
jmp
popf
pause
cwtl
cmpsl
cmc
cwtl
inc
sub
fwait
outsb
lret
jp
repz
jle
lods
arpl
subb
mov
mov
imul
out
adc
shlb
sbb
pop
dec
loope
xchg
fwait
test
daa
iret
dec
push
shrb
adc
sub
mov
or
incb
loopne
sbb
ud2
add
add
in
jne
adc
push
inc
mov
fstpt
add
out
jbe
mov
cmp
add
adc
cs
xchg
cld
lock
inc
add
dec
int3
imul
mov
push
out
inc
mov
jmp
outsl
loop
fs
mov
dec
addr16
popf
dec
lds
sub
std
cwtl
psubd
lds
inc
lds
mov
call
pop
jo
pop
xor
inc
sbb
add
ss
xchg
push
sbb
and
push
aas
stos
shlb
sbb
sub
jbe
js
sub
pop
imul
lods
mov
inc
jb
jp
stos
xchg
adc
and
pop
jb
push
dec
sub
jb
or
shll
fs
out
adc
ret
shrb
mov
test
and
mov
push
or
pushf
pop
inc
das
je
in
imul
cmpsb
dec
mov
jb
mov
stos
call
addr16
aad
xor
mov
push
inc
inc
cmp
mov
mov
inc
jg
dec
sti
mov
jb
incl
iret
fisttps
clc
rorl
dec
js
sub
inc
es
sub
adc
sti
jb
add
inc
mov
mov
adc
mov
add
dec
lret
aaa
outsl
icebp
imul
xchg
sarb
dec
out
daa
xchg
push
jmp
inc
out
dec
into
scas
call
dec
gs
repz
mov
jb
cltd
lods
lret
inc
add
aaa
add
or
pop
sub
xchg
cmp
sub
push
and
dec
push
push
push
dec
fsubrp
fwait
pop
push
xor
or
lods
inc
arpl
sbb
int
enter
inc
cltd
inc
int3
fwait
jg
xchg
jnp
mov
stos
jo
hlt
jo
bnd
dec
subb
pop
jbe
je
jge
add
mov
mov
jl
jnp
repnz
inc
dec
lret
lret
sub
push
jb
rcl
addr16
fdivrs
dec
fs
pop
add
add
pop
mov
mov
rorl
xor
sub
enter
dec
fdivrp
inc
mov
outsl
mov
push
or
arpl
sub
sahf
cwtl
sbb
adc
cwtl
test
jp
shl
aaa
enter
int3
cld
cmp
arpl
pop
call
outsb
xor
cmp
push
push
sub
lea
sahf
notl
add
or
pop
bound
adc
test
dec
cmpsl
and
cmp
in
mov
push
or
das
pop
fs
dec
fldl
inc
inc
and
push
mov
decl
roll
cli
fwait
in
sbb
test
gs
test
jo
fs
mov
cmp
js
inc
js
iret
cltd
jg
das
mov
into
std
push
or
popa
pop
inc
and
mov
jge
adc
mov
dec
ja
jg
fstpt
les
mov
pop
pusha
testl
aaa
xchg
jae
ss
dec
jg
lds
mov
nop
add
mov
jo
outsb
sub
in
dec
dec
ficompl
movsl
or
jg
pop
pop
and
je
int
test
out
aam
test
jns
ljmp
fs
jo
gs
scas
push
adc
push
sbb
out
hlt
bound
adc
pop
add
fwait
jb
out
pmulhuw
rcrb
out
hlt
pop
mov
push
jecxz
jecxz
mov
jns
pusha
js
jmp
push
stc
inc
outsb
and
mov
outsb
subb
insl
pop
cmp
sbb
jnp
call
gs
ret
pop
pop
std
ss
sbb
cmp
adc
shr
cs
mov
sub
xor
dec
adc
push
push
loopnew
sbb
pop
cld
mov
clc
mov
sbb
shlb
jno
pop
push
adc
cltd
xor
nop
sbb
sbb
aaa
mov
shlb
jge
ret
es
push
add
outsb
daa
addb
and
xor
jecxz
addr16
mov
mov
dec
xor
jle
jmp
pop
sub
in
push
pop
test
add
jp
in
push
es
int3
jno
jmp
int3
lea
ljmp
push
lret
jnp
dec
push
dec
pop
or
fucom
sbb
aas
clc
cld
pop
jno
jbe
test
sub
cmp
jns
inc
daa
inc
in
test
enter
push
test
das
or
outsl
stc
mov
jl
ret
pop
neg
or
cmc
and
dec
xchg
xor
decl
popf
dec
xlat
nop
xchg
call
inc
or
dec
or
es
mov
pushf
out
fistps
cs
mov
jmp
jl
push
das
mov
lods
inc
pop
push
jnp
jae
insl
mov
xchg
xchg
scas
pop
in
aaa
in
pop
loop
mov
orb
fwait
xlat
xor
xor
es
push
xor
sbbb
cld
shl
rcrb
das
subps
ja
pop
dec
sbb
imul
inc
ret
lret
out
xor
dec
in
xchg
sbb
push
les
push
adc
mov
fmuls
jbe
sbb
aad
jp
cmpsl
jne
out
clc
adc
out
lock
leave
shr
bnd
in
xor
sarb
dec
mov
ret
stos
sbb
xor
fs
aad
sub
adc
outsl
lods
xor
mov
sub
and
cmp
inc
imul
sub
sbbb
aam
cmpsb
mov
jg
push
icebp
clc
cs
jp
adc
add
push
aas
daa
pop
call
out
cld
clc
pop
pop
mov
in
sub
mov
loopne
or
sbb
icebp
in
adc
add
jecxz
loopne
in
sbb
sub
sbb
sbb
in
popa
fs
cmp
push
call
cmp
in
sbb
or
out
loopne
push
jle
sahf
insl
jp
outsl
jecxz
sbb
hlt
dec
loopne
in
sbb
adc
stos
jg
ds
lret
sbb
pop
jl
dec
decb
cmpsl
cmp
ficoml
mov
or
dec
imul
arpl
inc
pop
cmp
and
xchg
push
add
sbb
lret
sbb
dec
or
into
dec
and
add
pop
push
mov
push
cli
mov
push
dec
or
mov
mov
jb
mov
mov
mov
pop
xor
pushf
stc
ret
js
outsb
push
cmpsb
mov
mov
add
push
dec
dec
insl
dec
add
inc
push
jno
dec
jnp
leave
sbb
xchg
push
pop
mov
movl
inc
inc
mov
in
xor
pop
enter
js
ret
mov
int
insb
out
mov
mov
sbb
lret
push
lds
dec
sti
mov
push
mov
testl
xchg
popf
sbb
int3
xchg
adc
popa
adcl
and
in
pop
dec
sbb
jg
rcll
add
data16
inc
mov
or
inc
sbb
pop
shlb
dec
dec
aad
js
jp
dec
mov
jb
and
lds
push
add
mov
pop
jo
or
fistpl
and
jb
loop
mov
out
add
xlat
cwtl
xchg
xchg
fstpt
popf
xchg
pop
mov
stos
jo
sbb
cltd
ret
call
lahf
mov
out
or
xor
fs
xorb
sub
xchg
dec
int3
mov
inc
loope
sbb
jge
sahf
inc
fcmovnb
sti
out
jmp
out
fwait
push
in
lcall
pop
mov
outsl
adc
jmp
xchg
lock
js
pop
mov
jle
fisubs
enter
cmp
into
das
xchg
xlat
mov
lea
pop
out
sbb
dec
mov
push
pop
inc
jp
dec
dec
aad
mov
cmc
mov
mov
jo
inc
js
xlat
enter
inc
inc
xchg
or
sti
mov
cltd
xchg
imul
int3
mov
sub
cmc
jbe
test
psubq
mov
inc
sub
ret
xchg
pop
dec
sbb
pop
inc
mov
pop
shlb
roll
int
js
jbe
mov
mov
rorb
cmp
add
fsubs
cmpsl
daa
int
xor
inc
mov
push
enter
adc
sbb
mov
jae
adc
shrl
xor
sub
pop
jae
adc
dec
sbb
xchg
mov
pop
arpl
push
sar
inc
dec
sti
mov
cld
dec
das
push
sbb
xchg
sbbb
sbb
pusha
rorb
mov
popf
aam
stc
pop
in
push
push
ret
pop
xchg
mov
test
and
je
mov
jbe
mov
addr16
dec
ja
inc
shll
or
xchg
sub
je
pop
sbb
pop
jp
push
push
leave
repz
ja
jmp
push
out
fwait
xlat
add
jecxz
aaa
push
fs
mov
imul
lods
test
addr16
aad
leave
ret
dec
incl
cld
out
cli
stos
pop
inc
addr16
jb
dec
out
add
mov
arpl
lds
test
popf
sub
mov
loope
and
dec
cmpsl
dec
cmp
mov
scas
fs
xchg
sub
shufps
cs
mov
jle
jbe
dec
in
inc
sbb
sub
xor
mov
pop
bound
pop
stos
jo
pop
mov
push
mov
xor
pop
lret
push
cs
xchg
dec
dec
inc
fcmove
jne
testl
clts
sarl
repz
loop
fwait
sahf
loop
lret
into
and
pop
add
inc
xchg
add
movsl
inc
lcall
cs
lahf
and
pop
push
and
mov
inc
rol
addr16
clc
add
xchg
jno
jecxz
xor
xchg
xlat
adc
ds
bound
stos
add
xor
data16
inc
enter
ds
mov
cltd
adc
mov
aas
sub
test
inc
les
inc
jge
shrb
adc
fucom
cmp
push
and
rorl
test
push
xlat
xor
dec
sahf
sub
pop
fs
jl
cmp
jb
out
adc
mov
jge
xchg
mov
insl
jae
adc
push
pusha
jns
xor
mov
out
roll
data16
out
xor
mov
and
jbe
push
outsb
add
cmp
fmuls
ljmp
movsl
dec
xor
or
out
dec
cld
int
pop
ja
jge
add
xchg
xlat
out
add
mov
cs
test
fs
nop
popa
pushf
shll
pop
fstpl
enter
push
shlb
out
or
jecxz
test
pop
inc
inc
lahf
cwtl
repnz
jmp
inc
jle
cmc
push
daa
xchg
jl
js
mov
add
shl
les
movsb
xchg
jle
dec
mov
shlb
jae
push
jp
push
ds
jne,pt
inc
insl
movsb
jmp
and
les
daa
mov
imul
addr16
hlt
push
or
inc
test
int
inc
les
add
popf
bound
int
ret
push
scas
cmpsl
inc
inc
and
lea
stc
ljmp
xor
and
mov
adc
daa
aas
int3
sub
daa
cli
js
int
add
outsb
xchg
lret
andl
gs
and
xchg
mov
imul
lcall
pusha
sbb
xchg
pop
inc
xchg
mov
or
in
shlb
aas
cmpsb
jns
mov
jo
jns
adc
cld
add
gs
cli
fucomp
loopne
pop
add
outsb
dec
outsl
pop
stos
inc
dec
js
int3
xchg
imul
inc
mov
cmp
test
mov
lret
rolb
fdivr
xchg
fmull
scas
lea
xchg
ret
les
mov
pop
jmp
push
xchg
enter
or
call
aad
cmpsl
fstps
dec
add
dec
dec
rcrl
xor
call
pop
push
ret
push
inc
and
pop
add
push
push
pop
pop
mov
int
mov
sahf
fmuls
outsb
hlt
mov
sbb
cld
punpckhwd
push
xchg
mov
daa
xchg
stc
cmpsb
js
push
jmp
jecxz
or
gs
repnz
xchg
jp
ljmp
push
out
jnp
inc
out
and
lds
mov
fsubrl
aaa
xor
dec
or
fnsave
les
mov
and
ljmp
popa
xchg
imul
push
inc
pop
fnsetpm(287
and
cmc
jmp
repnz
inc
jne
adc
pop
repz
jg
test
mov
jns
out
inc
push
imul
jle
pop
mov
xchg
lock
rolb
lret
repnz
sbb
mov
fiadds
pusha
sbb
pop
add
dec
je
je
lea
or
jno
mov
or
fcompl
inc
push
cmc
xchg
add
push
movsl
add
lods
lea
xchg
add
inc
sbb
out
fs
lods
cs
or
andl
imul
jle
mov
mov
hlt
adc
sbb
mov
sbb
ret
and
dec
in
repnz
shlb
fnstenv
enter
in
mov
arpl
ja
sub
dec
ficomps
insb
jb
dec
pop
jnp
outsl
sub
and
test
pop
addr16
insl
int
clc
mov
jle
sbb
sti
adc
insl
popf
pusha
shrl
push
mov
xor
push
in
test
cmpsl
jle
gs
or
and
jmp
add
test
sbb
jmp
pop
dec
lock
aas
dec
push
pop
xchg
push
and
add
mov
mov
sub
jl
out
inc
subb
xchg
and
xchg
lock
jo
into
sub
mov
insl
push
inc
cmp
xchg
adc
xchg
mov
cs
outsl
fwait
jg
adc
xor
out
fwait
out
clc
popa
xchg
rorb
out
popf
dec
inc
mov
cs
mov
call
dec
jmp
mov
dec
insb
jle
add
call
bound
ljmp
leave
push
jo
push
mov
or
fwait
hlt
fisttps
add
sub
mov
js
filds
or
enter
jo
mov
xchg
pop
popa
jb
cwtl
out
or
test
repz
addb
cmpsl
adc
sbb
aaa
sub
push
xchg
add
dec
pop
dec
cld
out
bswap
jo
outsb
lods
add
pop
push
shlb
inc
data16
mov
lret
xor
in
test
dec
das
inc
mov
push
push
cmp
sti
cld
pop
rolb
mov
andb
stos
pop
mov
push
mov
stos
in
mov
jge
sub
int3
dec
push
aaa
movntq
in
sub
dec
outsl
test
jmp
adc
sbb
push
dec
xor
arpl
iret
nop
fstp
pop
in
data16
into
jle
testl
ljmp
int
pop
jl
pop
jo
lret
outsl
loopne
fisubs
jno
out
in
sbb
fcmovnbe
push
nop
xor
pop
stos
bound
psllw
xchg
sbb
adc
mov
jnp
mov
repz
out
mov
sbb
adc
punpckhdq
push
and
cmp
dec
out
shll
pop
mov
int
pop
push
into
adc
sbbb
jmp
sbb
insl
mov
cmc
es
lods
pop
mov
sbb
dec
loop
jecxz
adc
dec
xor
push
cwtl
fsubs
sbb
cvtps2pd
in
xchg
roll
push
pop
sbb
movsb
mov
jae
loopne
ds
mov
dec
push
push
fwait
cmpsb
mov
std
mov
lods
enter
jl
dec
xor
mov
scas
cltd
cmc
sbb
jnp
and
add
pop
das
dec
js
outsb
arpl
or
ret
adc
xchg
daa
jmp
inc
aaa
pop
divl
sahf
add
push
push
add
push
in
cmp
lods
xchg
loopne
jmp
dec
and
or
mov
dec
ja
mov
hlt
int3
push
fs
fs
stc
shrb
or
ret
shrl
pushf
lock
sbb
into
scas
movsb
add
cmp
out
scas
in
push
pop
and
sub
sbb
out
inc
inc
mov
push
ret
in
testl
addb
btc
cmpb
daa
xchg
push
into
adc
push
sbb
xor
pop
add
dec
mov
mov
jmp
jmp
push
imul
xchg
imul
sub
inc
cmc
cmpsb
cmovnp
pop
out
int
cmp
jno
stc
dec
rorb
stc
and
int3
sbb
mov
adc
imul
ret
popa
ljmp
xchg
push
popa
mov
call
jne
mov
xchg
inc
sub
jl
out
mov
inc
sub
js
jno
shl
fwait
repz
pop
adc
popl
inc
insl
aad
dec
clc
pop
adc
ja
aam
jns
dec
sub
dec
or
pop
cli
das
fcomp
dec
jge
out
or
sbb
jmp
repnz
jp
sbb
mov
sbb
dec
in
outsb
sbb
stos
jecxz
push
int3
xchg
test
lret
push
jns
in
mov
les
ds
sbb
stc
mov
in
scas
sbb
invd
pop
push
jl
out
mov
popa
jmp
imul
push
outsl
int3
lds
jg
insl
mov
data16
jmp
popf
or
imul
ljmp
pop
lods
lds
xchg
mov
push
xchg
xor
lds
or
dec
pusha
fs
adc
dec
mov
ljmp
cmpsb
lds
jl
mov
je
inc
mov
loopne
cmp
sub
mov
inc
js
shll
sub
sbb
jno
pop
fcom
aaa
stos
pop
int3
data16
mov
push
mov
dec
xchg
stos
dec
cwtl
pushf
sbb
out
stc
adc
mov
mov
repz
inc
popa
movsb
cmpsl
lds
lcall
mov
cmp
ss
in
sbb
mov
dec
inc
repnz
xchg
and
into
pop
fidivl
dec
xor
dec
dec
jp
stos
nop
dec
pushl
inc
lods
daa
nop
jbe
stc
inc
mov
ja
in
hlt
inc
pusha
idivl
or
pop
call
ja
call
xor
inc
jae
cs
gs
repnz
test
inc
mov
test
or
adc
adc
mov
inc
js
in
aas
out
xlat
add
mov
outsl
push
movb
in
ljmp
jne
js
pop
push
cmp
push
ja
jns
test
jecxz
in
fdivr
cvtps2pd
subb
scas
dec
adc
sub
dec
stc
and
dec
jns
cld
jb
clc
fists
lods
pop
out
or
subl
cwtl
lea
fstps
push
orb
mov
cwtl
jl
fsubp
inc
jmp
inc
push
fildl
inc
stos
add
enter
pusha
push
sub
test
loope
in
sbb
add
push
push
inc
lcall
or
pusha
cli
out
sub
insl
ljmp
fiaddl
pop
sbb
loope
stos
pop
push
pusha
push
cmp
jno
dec
out
aad
sbb
inc
daa
mov
xor
xchg
mov
call
mov
int
pushf
sbb
xchg
adc
xor
mov
fnstsw
push
aaa
cli
fwait
icebp
dec
aaa
xchg
adc
sub
lods
clc
out
mov
data16
mov
cmc
stos
pusha
mov
les
sub
cs
add
out
enter
leave
lea
push
mov
and
in
repz
sbb
ja
mov
dec
movsl
dec
pop
sub
stos
inc
sub
clc
les
xchg
and
push
mov
mov
mov
call
lea
jbe
mov
mov
pop
sub
mov
cmp
xor
in
jle
jbe
lds
or
nop
cmc
mov
out
dec
dec
loope
lods
mov
test
cmp
out
mov
sbb
jmp
push
cmp
and
adc
or
push
rorl
adc
outsb
arpl
inc
jae
jg
out
rorl
je
out
incb
push
loop
adc
int3
and
loopne
push
data16
or
movsl
or
addr16
jnp
cltd
jbe
pop
out
jo
push
jmp
push
daa
pusha
add
fwait
js
or
or
mov
icebp
sub
ja
push
dec
lret
xchg
data16
repz
inc
les
cmc
mov
inc
push
in
adc
inc
mov
cwtl
adcl
push
mov
mov
adc
jbe
adc
movsl
aaa
mov
stos
outsb
ficoms
ret
adc
mov
and
stc
inc
mov
xchg
dec
iret
push
fildl
int
ljmp
jle
popf
pop
cmp
frstor
mov
lcall
push
pop
mov
inc
repz
push
mov
inc
in
in
fstpl
sarl
dec
sbb
int
mov
jo
int
jnp
js
ror
push
js
pop
dec
fs
dec
dec
or
into
sub
cs
fstpt
inc
inc
leave
cmp
dec
xchg
lods
les
adc
scas
pop
sarb
sahf
and
ror
es
ret
test
add
into
dec
pop
xchg
aas
mov
mov
sbb
sahf
inc
push
stos
mov
xchg
sbb
sti
xchg
mov
jge
rcrb
and
jle
pop
daa
int
mov
push
adc
stc
add
inc
pop
mov
icebp
movsb
subl
out
test
frstor
aad
mov
lods
mov
pusha
pop
ss
xchg
push
jge
js
daa
or
pop
in
push
or
lret
cmp
test
xor
inc
outsb
pop
je
push
jp
pusha
cs
je
sbb
mov
sub
test
icebp
scas
mov
rorl
or
inc
dec
imull
sbb
sub
xchg
fwait
pop
les
jge
hlt
xor
js
cmp
and
pop
xchg
enter
pop
lea
xchg
xchg
incb
push
jl
or
push
imul
pop
into
mov
inc
aad
dec
test
in
sbb
aas
xchg
dec
sub
fs
push
jg
dec
inc
imul
fimull
cmp
sub
aad
aam
inc
add
out
adc
mov
or
lock
and
inc
mov
jbe
test
scas
pop
xchg
lds
imull
pop
int3
aam
outsl
push
dec
jmp
loope
sbb
mov
lret
mov
stc
or
mov
movsl
dec
cmpsb
sarl
mov
idivl
jecxz
out
scas
push
incb
fs
lock
test
test
dec
outsb
aas
and
and
ret
fs
or
scas
adc
test
in
dec
decl
outsl
dec
lds
cmp
jo
icebp
ljmp
loopw
popa
cmp
in
sbb
cmp
jns
imul
cmp
push
stos
ss
cmp
sahf
xchg
outsl
mov
cmp
insl
aaa
mov
movsb
xor
mov
test
and
movb
jmp
mov
leave
pop
jp
mov
mov
cmc
jbe
jg
movsb
in
es
mov
jge
ss
jecxz
xor
stos
outsl
lret
in
or
pushf
jge
subb
sub
lock
and
test
adc
jp
out
andb
sbb
pop
je
or
push
cmp
mov
xchg
lds
pop
and
dec
out
mov
cmpsb
sub
out
lret
lcall
stos
jb
subb
stos
sti
pop
add
inc
enter
bound
insl
push
ja
loope
dec
xchg
data16
fwait
mov
mov
mov
mov
pop
out
jb
or
nop
ds
dec
sbb
mov
jns
out
stc
jns
lret
jb
int
mov
nop
fldenv
subb
shlb
push
xor
in
mov
push
mov
add
push
cs
in
pusha
cs
push
ror
mov
test
das
adcb
mov
daa
or
mov
loop
jmp
xchg
mov
and
and
jl
push
out
dec
testl
in
xor
sub
addr16
sbb
xchg
imul
in
js
lret
std
jle
dec
dec
int3
cld
sbb
icebp
insb
iret
jne
push
loope
lahf
sbb
cwtl
or
pop
jecxz
int3
call
mov
test
jns
cmpsl
shll
mov
daa
sub
lret
and
sub
lods
lahf
sub
out
dec
jle
dec
imul
adc
sub
dec
and
movsb
ja
dec
sti
pop
cmp
ja
dec
sbb
pop
adc
stos
div
test
in
xchg
sub
cmp
fsub
je
stos
fcoms
fildll
mov
cmp
jnp
popa
mov
addr16
cwtl
adc
stc
lds
mov
scas
leave
loope
insl
int
pop
sbb
inc
sbb
mov
sub
mov
jg
dec
adc
jbe
ja
bnd
jle
jg
imull
pop
dec
cs
in
push
stos
add
pop
out
ja
push
enter
pop
iret
push
js
int3
and
ljmp
stc
sbb
les
enter
inc
movsb
loopne
rcrl
xor
iret
bound
ja
dec
xor
dec
scas
cli
or
pop
mov
pop
xor
idivl
test
dec
imul
jo
pop
lea
pop
out
shr
in
add
dec
and
aas
rorl
repz
dec
push
or
fwait
inc
rcrl
jmp
xor
shrl
dec
imul
jnp,pt
jae
movsb
call
mov
xchg
movsb
dec
ja
call
imul
imul
push
lds
fs
inc
pop
shrb
les
add
cld
test
enter
lret
jbe
pop
std
ja
pop
and
jae
xchg
shrl
outsl
nop
or
iret
aam
push
cld
cs
imul
pop
mov
dec
data16
adc
cmp
shll
fnstenv
rcrb
mov
jp
out
pop
push
es
fwait
xchg
ljmp
push
dec
cld
add
adc
into
xor
jae
add
aaa
loopne
lock
mov
or
sbb
mov
or
outsb
push
enter
mov
fcoms
test
dec
jne
mov
jg
cwtl
inc
dec
inc
movsl
divl
addb
mov
xchg
addl
mov
shll
out
lret
mov
test
inc
or
sub
cmp
push
cld
loope
mov
sub
out
inc
ja
les
mov
push
adc
sbb
movsb
push
mov
gs
inc
inc
or
pop
fs
mov
ja
push
jbe
jo
loope
rorl
add
or
incb
jle
ret
out
cwtl
push
pop
mov
roll
mov
movsb
mov
mov
sub
cld
sbb
xchg
cmp
in
sti
xchg
sub
lret
gs
jnp
mov
dec
je
xchg
mov
fstpl
adc
jl
push
dec
mov
outsb
sub
sub
fdivrl
sarb
jp
dec
or
incb
dec
and
popl
imul
xchg
in
outsl
adc
les
xchg
bound
pop
ret
cmpsl
push
jg
mov
int3
or
sti
sbb
push
push
adc
mov
scas
cmp
and
push
pop
sub
dec
shll
stos
aam
mov
repz
stos
mov
cs
out
pushf
rcrl
iret
sahf
in
cmpl
mov
sahf
in
js
xchg
dec
mov
xor
ror
dec
push
adc
pop
cmp
mov
sub
jb
sbb
mov
cs
push
sbb
xchg
mov
outsb
dec
test
cld
add
sub
xchg
jl
dec
cmp
mov
sbb
cli
mov
cmc
enter
repz
jl
outsl
int
int3
inc
dec
sbb
sbb
dec
sti
out
jno
das
and
xchg
mov
js
jbe
mov
out
lret
imul
into
je
call
xchg
das
push
pop
pop
and
fistpl
movsb
int3
dec
mov
or
sbb
shll
cmovne
jle
aad
lea
dec
push
scas
mov
cmp
leave
mov
sbb
in
pop
fstp
inc
push
xchg
test
xor
fsubrs
aaa
mov
mulb
or
pop
out
pause
ds
push
ret
or
imul
adc
jle
xor
call
pop
xor
clc
inc
push
xchg
imul
repz
jp
mov
int
pop
test
dec
pop
mov
dec
mov
jbe
mov
je
pop
jmp
push
clc
mov
push
cwtl
in
inc
subb
lea
les
fwait
scas
ret
lret
and
ss
add
or
push
jl
mov
add
clc
movsb
inc
lret
xchg
pop
inc
cmp
pop
mov
lock
addr16
add
adc
test
arpl
loop
push
icebp
or
shll
push
je
dec
inc
les
or
pop
aas
mov
cmpsl
out
mov
aas
iret
fidivrs
cmpl
mov
adc
pop
dec
cmp
outsl
inc
lds
push
mov
shll
sbb
ss
xorb
mov
or
je
cwtl
mov
mov
es
pop
inc
xor
adc
and
insl
cmp
push
js
and
add
cmpsb
jl
bts
adc
jmp
scas
xchg
fldcw
xchg
push
jo
mov
lock
mov
jno
push
mov
and
aam
pop
jle
sbb
mov
in
pusha
jne
clc
ss
sarb
rorl
aam
and
push
ss
and
lcall
aad
xchg
out
adc
push
in
jl
mov
int3
mov
addb
jbe
mov
lret
jno
lods
dec
dec
inc
inc
into
addr16
and
pop
and
cltd
mov
inc
inc
push
pop
out
push
sbb
mov
pop
mov
mov
or
xor
popa
pop
pop
rol
js
pop
xchg
addr16
dec
jb
test
addr16
pop
or
je
fstl
call
arpl
xlat
xor
pop
cwtl
incl
fs
call
and
int3
mov
jo
sbb
je
jnp
push
imul
adc
xchg
sub
data16
push
xor
push
sarb
jns
hlt
and
bound
cmp
cmp
pop
cmpsb
and
sti
lea
bound
lahf
mov
sbb
shlb
cmp
rorl
icebp
adc
gs
fdivrs
test
xor
dec
push
mov
insl
jmp
cmp
jl
loope
in
inc
fsubr
imull
fs
pop
add
add
es
inc
mov
dec
data16
lods
ret
push
in
test
lahf
inc
add
aad
popa
flds
xchg
sahf
imul
sbb
imul
adc
add
xchg
dec
jmp
ret
in
cmpsl
pop
popa
or
fisubs
repz
outsl
addr16
loopne
xor
pop
in
mov
pushf
cmc
movsl
jg
push
adc
stos
mov
pop
sub
jo
jg
popf
mov
rorb
rcrl
jb
enter
outsl
jno,pn
mov
mov
stos
dec
jecxz
or
aad
cmp
scas
cmp
cmp
jns
and
scas
lret
scas
sbb
dec
les
fldenv
pop
and
fldenv
xor
xchg
push
xor
test
outsb
fwait
test
xchg
popf
inc
cltd
push
sarl
sbb
mov
movsb
imul
pop
and
mov
xor
data16
movsl
iret
mov
mov
js
sbb
mov
pop
jp
loopne
aam
std
cmova
int
ds
jns
mov
jle
xor
mov
js
sub
clc
fwait
and
ds
ljmp
mov
push
jmp
mov
cmp
inc
mov
into
cld
mov
push
inc
push
pop
sbb
in
int
jns
xor
aad
inc
outsb
push
xchg
addb
popf
push
add
xor
jmp
sarb
js
aad
push
push
testl
dec
ss
cwtl
sbb
adc
inc
bound
xchg
jg
mov
test
lret
push
cmp
jmp
push
or
dec
cmpsl
orl
mov
xchg
sbb
add
data16
mov
fcoml
inc
xor
rol
call
push
sbb
add
cwtl
push
jge
xor
sbb
push
loop
rep
rcll
jg
push
dec
adc
push
xchg
rcrl
xor
mov
mov
dec
daa
int
cmp
add
pop
sti
aaa
jae
or
push
mov
leave
xchg
into
sbb
mov
outsb
inc
addr16
sub
dec
popa
cmp
xor
jns
fucomp
sbb
scas
mov
call
fimull
push
dec
test
jmp
ret
shll
inc
ja
decl
ret
adc
aam
js
in
fcoml
outsb
ret
jg
aas
mov
fldl
les
inc
jmp
adc
lret
sub
inc
jge
ss
mov
mov
test
subb
cmp
dec
push
sub
lea
popa
cmp
movl
repz
pop
add
shrb
mov
xchg
mov
iret
or
and
incl
and
fisubs
rorb
mov
dec
js
jnp,pn
dec
notl
xchg
xchg
clc
ret
jb
mov
adc
ds
xor
pop
call
in
fsubrs
in
imul
loop
mov
lahf
pop
cmp
adc
xor
mov
push
mov
inc
das
mov
das
rorl
dec
adc
subl
sbb
pop
das
dec
push
rol
push
inc
push
inc
ret
fs
js
movsb
in
mov
inc
and
outsl
shl
xor
iret
out
jmp
cmpsb
xor
cmp
adc
out
pop
repnz
pop
dec
add
cmp
adc
inc
call
je
popa
xchg
cld
fmuls
ret
icebp
pop
mov
les
fucomip
inc
sub
in
push
xchg
cmc
das
std
leave
inc
adc
inc
rcrb
pushf
or
data16
loop
popa
dec
ret
cmp
lods
pop
lahf
push
pusha
mov
jmp
add
stc
pop
sbbl
arpl
or
mov
mov
ret
push
js
int
jns
js
push
sbb
dec
adc
ja
andl
xchg
enter
lret
jne
fwait
fs
cld
idiv
jg
outsl
or
iret
or
ret
sti
iret
and
scas
sbb
mov
push
in
bound
loop
insl
shll
popf
and
add
movb
pop
cmc
repz
xor
int3
inc
xor
fdivrs
inc
push
je
inc
notl
add
int
jl
rcl
inc
lcall
clc
jl
leave
fdivrs
sbb
popf
insl
jmp
rcrl
cmp
testl
rorb
xchg
dec
jo
cmpsb
addr16
call
dec
jb
fnstcw
push
cs
adc
pusha
pop
dec
push
shll
int
cmp
test
aam
sub
rol
adc
int
cmp
mov
push
mov
pop
imul
int
mov
pop
push
dec
cmp
call
imull
cmp
clc
mov
jbe
daa
lds
jp
xor
xchg
mov
mov
movsb
out
cmp
stos
fildl
push
push
dec
dec
inc
inc
inc
pop
adc
into
pop
pop
insl
dec
ljmp
jle
inc
dec
pop
rorb
mov
or
or
sbb
inc
mov
mov
hlt
jno
cmp
test
add
add
stos
pusha
fnsave
sbb
inc
mov
dec
ja
inc
outsb
lods
push
lret
das
jnp
sbb
mov
test
lret
lods
bt
andl
iret
incb
movsl
push
mov
add
jnp
test
and
cld
sub
jns
inc
mov
loope
add
iret
mov
push
ficomps
jl
stos
cmp
les
cmp
jle
shl
mov
call
dec
outsl
adc
imul
push
push
xchg
jge
xor
subl
add
dec
sbb
mov
jnp
out
dec
dec
rorl
add
lods
push
cmpsl
test
cmp
push
nop
mov
and
data16
frstor
iret
pusha
push
adc
add
in
mov
rcl
fbld
dec
out
xor
and
cmp
test
out
push
mov
mov
lock
fisttpl
mov
push
subb
repz
int
les
mov
ss
xchg
xlat
lods
sbb
cmpsb
movl
pop
aam
and
dec
gs
and
dec
mov
loop
outsl
sbb
add
jp
add
mov
mov
das
jo
out
push
je
aam
sbb
sbbb
and
fwait
mov
pop
js
mov
add
xchg
mov
outsb
sbb
dec
addr16
out
push
lods
outsb
jbe
mov
pop
inc
es
push
xor
test
adc
sub
lret
sub
push
lret
ror
shlb
sbb
adc
push
adc
cmpl
mov
adc
mov
rorl
out
addr16
aas
inc
ret
pop
or
push
es
insb
cmp
lret
push
outsl
mov
out
push
or
psubb
test
es
or
es
std
inc
cmp
dec
shr
inc
dec
out
inc
fstpl
iret
sub
push
dec
fs
sub
js
cwtl
push
out
popf
cli
inc
jnp
push
fs
imul
push
fisttpll
aad
xchg
popa
inc
sbb
sbb
pusha
enter
dec
xor
mov
dec
jae
outsb
cmp
push
outsl
dec
loope
sbb
cmpsb
ds
rcrb
adc
js
addr16
test
jge
lahf
push
pop
xor
in
test
inc
in
loopne
push
addr16
enter
push
push
mov
js
fldt
outsb
or
sti
pop
cwtl
pop
lcall
mov
dec
lret
outsb
mov
sarb
lea
sbb
inc
loopne
je
xor
js
push
sbb
pushf
psubsb
insl
imul
mov
fs
sbb
nop
sub
data16
js
dec
cmp
aad
dec
mov
adc
sbb
sahf
lds
mov
mov
push
cmp
mov
aam
paddw
xchg
xchg
dec
or
jg
call
sti
in
and
in
jmp
jo
lea
fdivrp
pop
call
dec
pop
inc
pop
inc
cmpsb
icebp
sarb
adc
mov
push
ret
int
add
mull
loop
dec
pop
push
fsubr
scas
lock
ja
xchg
or
lods
xchg
or
dec
mov
sub
push
outsb
in
cmp
shr
or
sarb
dec
inc
scas
ja
jbe
mov
dec
cli
sti
or
lds
adc
dec
fs
pop
push
inc
xor
scas
popf
pushf
fsubs
mov
shlb
std
cwtl
add
mov
scas
lock
pop
sbb
outsl
jmp
pusha
inc
aaa
xchg
test
add
push
out
add
and
dec
cmp
dec
mov
popf
xchg
test
aam
jbe
sbb
lods
ds
js
pop
enter
or
mov
cmp
shrb
fimull
and
add
movb
sub
and
shlb
ret
mov
in
sbb
adc
mov
inc
hlt
dec
js
dec
fildll
push
add
dec
dec
xor
mov
adc
shrl
jl
xchg
movsb
sti
mov
jmp
dec
pusha
les
mov
aas
cmp
test
nop
xor
sbb
mov
add
call
data16
jmp
hlt
stc
jno
pop
mov
sbb
test
nop
push
push
scas
int3
lea
cli
test
add
jmp
test
shll
sub
jns,pn
sbb
es
call
shll
sub
out
lods
lock
clc
or
outsl
outsl
sbb
scas
rclb
in
in
sbb
push
pop
lock
ja
mov
shlb
xchg
dec
adc
xchg
jp
hlt
dec
xor
jo
dec
cld
outsl
sub
repnz
subl
loopne
fs
cmp
inc
xchg
xor
lock
push
insb
in
or
int3
bnd
arpl
xor
stos
outsb
mov
fdiv
inc
rolb
das
adc
mov
or
mov
lods
inc
jmp
out
dec
adc
dec
xchg
jg
dec
adc
test
pusha
jmp
jle
pop
call
jle
pop
jmp
push
pop
push
xchg
pop
ljmp
mov
push
in
xchg
mov
stos
pop
push
and
xor
jl
mov
dec
outsb
xor
lcall
lret
idivb
rolb
inc
jmp
push
je
sub
aas
sub
add
push
mov
xor
gs
pop
jb
lods
leave
fs
xor
sub
popf
insb
dec
xchg
pop
fwait
stos
xor
hlt
mov
lock
sarb
sbb
jnp
push
inc
cld
imul
lret
in
sbb
lret
push
inc
ljmp
pop
cmp
mov
insb
cld
es
sub
sbb
out
scas
call
push
and
cs
int3
bound
inc
xor
cmc
outsb
or
in
dec
movsb
or
cmp
loope
fwait
xor
pop
cmc
test
movsb
inc
or
xchg
jbe
and
dec
bound
cwtl
daa
repz
into
dec
imul
insl
push
add
mov
jmp
lret
and
adc
das
lods
negl
inc
or
adc
xchg
lock
xor
or
jne
pop
ret
adc
xor
dec
std
pop
data16
lock
imul
push
xchg
fwait
popa
out
xor
test
cs
cmc
xor
jb
mov
mov
cwtl
mov
and
xchg
shr
fildll
and
mov
push
stc
pop
outsl
bound
les
mov
pushw
push
rolb
push
mov
scas
rcrl
mov
cwtl
fsubrp
mov
dec
cmp
dec
sbb
cmp
fidivrl
xchg
ret
jecxz
dec
inc
in
call
jmp
bound
jg
inc
popa
es
and
movb
mov
dec
mov
add
dec
test
inc
jmp
push
jg
mov
push
rorl
mov
arpl
adc
cmp
pop
loop
or
imul
jle
ret
sub
arpl
stos
and
jb
inc
xlat
iret
les
jae
lea
movsb
fsubr
scas
ja
test
daa
or
push
ret
or
xchg
fwait
je
fisubl
incb
in
push
or
sbb
ja
mov
xor
js
mov
xor
pushf
ficoms
lods
shrb
sbb
add
call
push
aad
nop
test
jle
jns
mov
jge
cmp
jecxz
in
ds
scas
xor
jb
inc
jle
dec
jne
inc
dec
mov
repz
movl
popf
shll
imul
and
outsb
add
sarl
js
dec
add
push
arpl
inc
sbb
xchg
cmpsb
popf
hlt
stos
jecxz
lea
les
cmp
mov
cwtl
inc
sahf
addb
xor
cmc
int
xor
ret
cmp
and
push
xor
mov
test
add
sub
cs
jp
sbb
jae
add
lea
hlt
lret
mov
and
aam
inc
xchg
hlt
push
mov
call
pop
inc
inc
cmp
das
ret
fsubrp
gs
mov
test
in
fcomps
popf
or
popf
dec
cs
jle
sbb
cs
inc
rcr
mov
movsb
pop
jg
sbb
out
push
mov
loope
lret
sbb
out
stos
mov
and
mov
scas
pop
mov
lods
inc
xchg
dec
fs
mov
mulb
sahf
lods
pop
push
test
lds
aad
inc
pop
xchg
xor
aas
xchg
fcomip
push
outsl
stos
aaa
add
or
mov
jp
cmp
and
outsb
mov
xor
push
add
pushf
mov
les
popa
mov
sbb
sarl
push
dec
push
scas
jmp
jno
movsb
xchg
adc
xchg
in
adc
test
sahf
outsl
js
push
mov
jge
es
push
fs
lods
sbb
popf
lock
push
ds
das
ret
imul
outsb
push
xor
popf
sub
push
xchg
shr
std
push
out
sub
and
lea
pop
xor
xor
shlb
leave
outsb
xchg
mov
mov
inc
jne
lret
mov
rolb
push
jl
inc
lret
fs
incb
mov
js
rorl
addr16
push
lret
pushf
ljmp
jp
fcomp
push
sbb
out
iret
lret
outsb
inc
mov
push
in
cli
in
loope
ljmp
dec
ret
in
dec
cmpsl
push
push
jge
mov
mov
sub
push
pop
pop
dec
jne
cmpsb
clc
dec
fldt
push
imul
pop
push
shrb
test
mov
dec
jne
fwait
out
addr16
das
dec
adc
xchg
cltd
out
sbb
mov
outsl
popf
test
push
enter
mov
call
mov
inc
mov
into
outsb
gs
rcrb
sub
push
iret
das
jg
xchg
enter
js
hlt
xor
xor
mov
test
movb
int
cmpsb
and
add
xchg
inc
iret
sub
push
ss
sub
jg
inc
not
push
stc
lods
adc
xchg
jmp
repz
clc
adc
pop
stos
mov
mov
push
stc
push
mov
stos
js
out
mov
insl
mov
cmp
fwait
cmc
mov
cmpsl
xchg
jg
or
into
or
enter
daa
dec
aas
sub
adc
stos
and
scas
mov
dec
adc
jne
jg
call
adc
test
rorl
pusha
mov
pop
outsl
rorl
out
lods
loopne
inc
fs
out
sub
add
push
les
mov
cmp
jae
cmp
push
gs
xchg
and
inc
mov
add
dec
push
dec
inc
pop
mov
inc
adc
shll
incl
arpl
inc
mov
dec
rcrb
or
outsl
pop
push
mov
into
rep
mov
imul
fdivrs
inc
data16
push
pop
mov
pop
mov
scas
dec
sub
sbb
adc
add
sub
shlb
add
rcll
xchg
mov
enter
mov
pcmpeqd
out
arpl
cmc
jecxz
call
fcmovnb
out
rorb
pop
mov
les
or
sbb
adc
in
and
adc
jns
add
mov
xor
fistl
pop
xor
push
xchg
sub
push
or
mov
or
push
lea
mov
add
imul
mov
fs
lahf
cs
mov
fdivr
xor
sbb
in
shll
or
dec
sarl
pop
or
movsb
dec
sbb
mov
rolb
repz
stos
addr16
cs
cmpsb
enter
lret
pushf
sbb
dec
inc
aad
cltd
xor
in
aas
std
loop,pt
mov
push
cmc
rol
data16
and
scas
shl
icebp
es
and
cmp
dec
loopne
fwait
inc
inc
and
outsb
add
sbb
xchg
sub
sbb
aaa
je
mov
popa
ret
and
bound
leave
fs
mul
push
stos
iret
mov
mov
les
lret
cmp
movsb
xor
adc
mov
stc
bound
pop
hlt
cmp
mov
into
push
inc
pop
push
mov
dec
bound
pop
jp
dec
push
push
stos
mov
mov
inc
in
imul
test
pop
cld
fs
shll
push
mov
add
cmp
stc
or
out
lds
sbb
mov
cmp
sbb
rolb
jle
xchg
outsb
mov
dec
fsubl
or
ss
cmpsl
sbb
mov
jmp
fnsave
lds
loop
lds
lret
int3
lahf
xor
adc
nop
addr16
or
xor
mov
xchg
das
adc
inc
ds
in
gs
je
stos
sub
dec
nop
popf
out
out
ror
sub
icebp
jle
in
mov
sahf
ljmp
dec
xor
inc
push
push
pusha
insl
jne
pop
sbb
cwtl
mov
jle
mov
stos
fwait
xor
jb
and
cmp
push
and
stos
pop
cmc
jae
int
repnz
sti
cmpsb
outsb
cltd
pusha
mov
xchg
nop
dec
fsubs
scas
sub
jg
stos
das
adc
pop
js
and
gs
adc
pop
inc
cld
lret
push
or
mov
dec
js
push
fs
fimuls
pop
sarl
std
clc
js
lds
mov
lret
dec
leave
pop
inc
into
dec
test
jne
enter
add
dec
sarb
pop
push
out
pop
cmp
repnz
cmpsb
sbb
jge
in
es
sbb
sub
jle
mov
fisubrs
adcl
cltd
inc
dec
xor
repz
push
loopne
test
enter
add
or
jle
pop
xor
out
imul
push
pop
repz
incl
sub
sbb
lcall
lret
sbb
out
ret
mov
mov
xchg
xchg
lahf
mov
rolb
cs
cmc
dec
xor
cmp
cmpsl
roll
mov
push
fs
push
cmpsb
push
out
fmuls
cmp
jo
push
test
cmp
pop
ja
or
aam
xchg
int
xor
outsb
sbb
mov
ljmp
enter
dec
iret
jl
stos
lret
sbb
insl
push
pop
lret
sub
hlt
je
sub
sbb
loop
adc
je
jb
popa
dec
repz
out
orb
mov
adc
push
outsb
dec
push
xor
push
push
or
sub
inc
cmpsl
pop
mov
in
ja
xchg
ljmp
adcb
cltd
aaa
loope
shlb
push
jle
stos
nop
ja
loop
sbb
outsb
test
mov
push
cmc
jp
rol
xchg
cwtl
in
lods
pop
test
jo
cwtl
mov
lret
int
call
mov
dec
cmpsl
adc
cmpsb
stos
adc
pop
lret
add
das
pushf
inc
iret
pop
int3
orl
jo
idivb
repz
aam
imul
loope
test
push
gs
daa
movsb
lea
cld
clc
push
dec
xchg
sbb
jp
sbb
jle
in
xor
shll
outsb
dec
mov
adcb
add
mov
iret
inc
js
sub
je
push
stos
sbb
and
aas
xor
push
rorb
sub
lret
aas
pop
int3
cmp
rol
push
idivb
popa
es
mov
and
dec
or
cli
shll
inc
mov
call
sub
ret
outsl
adc
scas
pop
dec
stc
shlb
test
cmp
cs
xchg
je
cmp
add
dec
rclb
mov
pop
pop
mov
sbb
cwtl
inc
inc
pop
sub
ds
popf
fidivrs
or
cmp
call
fs
jae
dec
in
mov
ror
fucom
adc
pop
in
and
add
push
ret
iret
jle
int3
and
push
in
icebp
stos
shll
jo
scas
cmp
jge
mov
pop
cmc
sbb
nop
outsb
pop
sbb
sub
sahf
adc
jl
out
jmp
xlat
pusha
pop
xor
hlt
scas
jbe
into
jmp
in
sub
das
inc
hlt
jo
in
push
hlt
out
cltd
aaa
jg
test
jb
push
sub
js
fistl
lods
les
loope
mov
pop
aad
adc
jno
push
cmpsb
push
daa
xchg
xor
pop
mov
push
sti
lret
lds
addr16
jg
in
xor
jg
mov
addr16
daa
sbb
sbb
loopne
addr16
add
out
sub
pop
mov
fs
mov
sbb
mov
cs
dec
outsl
ja
out
test
jg
dec
outsb
aas
outsb
call
mov
rcrb
stos
adc
mov
jge
aam
cs
js
iret
sub
mov
dec
jmp
push
xor
pop
hlt
jmp
cmp
pop
inc
roll
test
out
nop
dec
out
fwait
mov
dec
addl
push
fimuls
add
fs
sbbl
jle
ds
cmp
jbe
lcall
mov
jl
call
imul
out
mov
je
push
bound
imul
mov
xchg
iret
jne
or
push
pop
adc
rcll
dec
and
push
gs
bnd
add
push
bound
test
xchg
add
jecxz
gs
jp
add
dec
pop
data16
dec
or
fs
pop
popf
fnstenv
sub
dec
cmpsb
xchg
cmp
add
push
adc
fldenv
out
outsb
dec
pusha
sarl
push
xor
outsb
cld
shrb
jg
ret
stos
fwait
outsl
push
adc
outsb
imul
sub
fsubl
jmp
jns
test
das
mov
ljmp
pop
stos
jmp
repz
fisubl
sub
imul
outsb
loop
ja
loopne
jmp
leave
gs
inc
push
loope
insl
cli
sub
push
xchg
or
mov
sub
frstor
loop
lock
xor
sub
insl
mov
cs
cmc
inc
inc
punpckldq
sti
pop
and
loope
jmp
adc
inc
jg
das
pushf
dec
cmp
sub
jge
pushf
mov
sbb
dec
fcomp
push
shlb
repnz
fnstenv
loop
pop
mov
sbb
sahf
cmp
jmp
sbb
addr16
pop
fbld
sti
pop
push
inc
sub
add
cmp
outsl
mov
bound
jne
cli
out
xchg
lret
xchg
ret
mov
mov
cwtl
cmp
addr16
ret
out
aam
xor
fistpll
jns
mov
outsl
add
aaa
xchg
sub
out
in
jg
dec
daa
mov
andl
pop
into
dec
pop
sar
xchg
xabort
and
js
dec
iret
sub
dec
scas
loope
in
dec
outsb
out
lds
jp
data16
out
cmp
sbb
jb
add
or
out
in
test
mov
fnstsw
mov
and
mov
fisubrl
fldt
stos
mov
dec
mov
mov
gs
stc
dec
cmp
pusha
add
dec
push
in
addr16
in
out
outsb
stc
sub
es
pushf
dec
addr16
hlt
lods
fs
xlat
fs
aas
and
rcll
jl
cmp
out
jge
lds
push
imul
into
vmread
cs
stos
dec
adc
mov
popa
loopne
jl
mov
sbb
fsubr
pop
xlat
call
cmpsl
cld
jb
push
jne
fcoml
cmp
shrl
outsb
sbb
push
jae
popf
jnp
mov
pop
out
jg
or
add
mov
push
movb
jno
sub
ss
mov
es
xor
and
call
sbbb
cmp
mov
jl
push
rolb
popfw
scas
andl
iret
adc
popa
pop
lahf
xlat
adc
mov
in
pusha
fst
retw
sub
pusha
out
out
mov
push
test
pop
mov
testl
push
sti
sub
adc
lods
jo
xor
popf
sub
insl
inc
jp
sub
jle
sub
jb
jno
fs
inc
adc
das
ret
mov
cld
ja
jp
cmpsl
test
in
jns
dec
out
xchg
ja
sub
clc
movsb
dec
xor
and
into
dec
fdiv
ja
call
push
cs
jl
dec
adc
dec
push
push
cmc
test
mov
fs
test
jo
sarb
jl
stos
adc
sub
loope
hlt
test
or
cmc
mov
scas
daa
imul
jb
xchg
sub
outsl
scas
inc
lock
fwait
in
or
push
cmp
cmpsb
xchg
xor
mov
cmp
jl
mov
jecxz
mov
inc
fcompl
fs
pop
mov
or
nop
test
jb
iret
push
mov
scas
lcall
imul
jl
xchg
jge
sbb
jns
cmpsb
xor
insl
adc
add
ret
les
fs
or
add
xchg
arpl
mov
inc
bnd
aad
test
loopne
orb
leave
or
pop
mov
jns
int3
mov
in
adc
and
xchg
add
and
je
and
mov
mov
cmp
shr
dec
mov
pop
jb
push
xor
data16
inc
fs
orl
popa
data16
inc
cltd
jnp
and
daa
jg
int
fdivrs
xchg
call
fsubs
push
mov
shll
test
xlat
lret
jo
dec
mov
rorl
cmp
in
cmpsb
xchg
mov
xchg
dec
imul
rcr
xchg
insb
sub
sub
pop
in
out
daa
inc
cld
xor
les
xchg
jnp
sbb
inc
shll
sub
scas
inc
cmc
pmovmskb
imul
sub
xlat
pop
dec
push
push
je
in
stos
or
mov
or
cwtl
mov
jne
cmp
movb
inc
icebp
mov
inc
inc
stos
into
inc
jno
mov
jl
inc
cli
add
pop
xchg
mov
inc
xor
or
xor
mov
push
outsl
inc
mov
dec
adc
mov
addr16
fdivr
pop
mov
mov
inc
stos
inc
jmp
add
rcll
jl
or
jb
enter
push
push
lock
clc
mov
test
imul
pop
mov
sbb
call
shrl
jnp
jg
mov
loop
stc
mov
mov
dec
mov
sub
add
pop
sub
adc
lock
pop
ret
loopne
push
fsubp
call
outsb
inc
pop
pop
dec
push
inc
push
orb
push
sub
push
dec
lcall
ret
mov
fs
pop
lds
test
mov
lds
add
test
xchg
in
mov
int
add
aam
aas
loop
je
fwait
imul
lock
fmulp
bound
into
outsl
enter
fs
aaa
nop
sub
shlb
dec
sti
or
les
movzbl
pop
das
jecxz
dec
addr16
push
inc
dec
js
pop
dec
movl
shrb
sbb
mov
adc
pop
mov
xor
into
mov
cwtl
jmp
shr
into
inc
dec
dec
sbb
mov
cmp
dec
sbb
lret
mov
or
cbtw
jp
stos
dec
inc
adc
out
push
cmp
dec
repnz
test
mov
pop
dec
cmpsl
stos
and
pop
dec
push
test
outsl
mov
sbb
int3
mov
dec
pop
dec
xchg
aad
push
push
inc
int3
sub
ret
inc
pusha
scas
stos
jp
push
mov
xor
sub
jp
jnp
or
movsb
fwait
adc
pusha
bound
mov
outsb
mov
mov
cwtl
movsl
sub
cmp
adc
es
xor
mov
pop
gs
mov
sti
mov
clc
adc
sub
inc
sub
lret
sbb
mov
xchg
mov
or
cmp
les
cmp
out
xchg
adc
lock
shll
fldl
and
jb
int3
cmp
sbb
enter
jo
push
aam
mov
xor
jns
xor
aad
mov
mov
pop
loopne
js
pop
int
int3
mov
or
xchg
fs
sub
and
pop
jmp
int
ret
aad
sub
push
push
out
pcmpgtd
jae
sahf
sub
pusha
mov
andl
mov
lds
imul
repz
dec
lret
dec
fwait
add
mov
lods
sub
sub
inc
jb
incb
out
nop
nop
inc
mov
das
movl
mov
cmp
cmp
stos
shrb
sbb
js
mov
xor
adc
xchg
and
scas
adcb
pop
out
int3
mov
xor
jl
cwtl
arpl
sti
xchg
jmp
stos
adc
ja
loope
cmpsl
into
jns
dec
jmp
cmc
or
popf
cmpsl
fldt
loope
aad
inc
loop
mov
mov
ror
ja
dec
fcmovnbe
and
int
xchg
inc
mov
jmp
fwait
imul
dec
cmp
inc
scas
pop
mov
dec
stc
gs
sub
fnsave
and
cmp
jno
mov
bound
mov
jmp
aaa
jae
fwait
inc
pop
adc
dec
data16
jg
ss
loopne
fs
pop
jbe
out
sub
inc
outsl
mov
pop
decl
jbe
shll
jne
cwtl
inc
popf
je
je
adc
nop
and
push
inc
pusha
repnz
lcall
loopne
pop
outsb
fildll
sbb
rol
popa
jb
dec
adc
in
push
dec
jno
xchg
add
mov
mov
pop
outsl
js
xor
mov
les
iret
hlt
shrl
cmp
fwait
es
imul
or
push
adc
jle
sarb
data16
sub
xchg
mov
jle
cltd
pop
test
popf
dec
adc
adc
sbb
or
imull
in
sbb
push
or
adc
lods
hlt
dec
in
ljmp
xor
jbe
xor
cli
nop
inc
pop
push
xrelease
xchg
loopne
mov
mov
cs
adc
div
sub
cwtl
jle
in
inc
pop
notb
fs
aaa
enter
loop
insl
nop
ffreep
xchg
data16
stos
jae
jae
jo
dec
inc
add
stc
hlt
jo,pn
sub
and
adc
mov
data16
leave
outsb
test
movsb
in
rorb
fisubrs
inc
lahf
mov
dec
jno
push
hlt
inc
ror
adc
hlt
out
addr16
push
mov
mov
mov
fs
adc
push
sbb
les
xchg
pop
scas
popa
push
rcll
xchg
add
rol
cmp
lret
lret
lea
pusha
and
out
sahf
sub
jno
push
cld
mov
sbb
dec
cmc
test
jb
popa
daa
xor
push
dec
mov
jns
jns
sarb
imull
sbb
adc
fstl
fs
loop
jo
mov
adc
outsl
adc
pop
xlat
adc
inc
lret
fs
enter
cmp
inc
loop
adc
jle
pushf
sbb
es
mov
clc
push
inc
fstps
les
adc
rol
pop
movd
clc
sahf
jl
mov
gs
addr16
push
shr
inc
sbb
adc
jnp
cltd
jbe
adc
enter
jo
xchg
cmp
in
mov
lods
cmc
ficoms
scas
mov
add
pop
jg
cmpsb
or
dec
cmpsb
jge
jo
push
xor
xchg
mov
js
mov
dec
mov
stos
popa
xchg
lock
jp
mov
dec
and
jnp
in
dec
push
and
aad
sti
mov
stos
pop
and
repz
das
out
in
inc
outsl
jp
inc
int3
ret
lods
fwait
out
sub
sarl
or
je
pop
popf
lret
push
outsl
aad
roll
scas
push
xor
pop
mov
pop
jge
lahf
stos
leave
push
insl
int
rcrb
jg
jb
scas
mov
and
cmc
int
shlb
jl
dec
sti
cld
sub
pop
aad
pop
call
sbb
mulb
daa
pop
sbb
xor
daa
popa
cmp
cmpsb
es
mov
sbb
das
loope
fisttpll
or
dec
fidivrl
js
enter
imul
ret
mov
sti
mov
sti
into
mov
mov
adc
jae
int3
jecxz
fcoml
pop
cmp
jne
fs
cli
dec
add
lea
jg
jmp
test
xchg
ja
inc
or
inc
inc
enter
arpl
cmpsb
mov
or
iret
push
inc
scas
jne
fs
sbb
test
and
pop
out
sbb
mov
dec
inc
call
jns
daa
mov
inc
mov
dec
fwait
inc
test
cmp
mov
push
sahf
into
xor
mov
lds
je
repz
xor
pop
enter
das
popa
inc
aas
into
out
fisttpll
xor
mov
in
lds
push
cltd
ror
inc
mov
cmpsb
xchg
jns
pusha
dec
jp
jmp
es
inc
lret
test
jb
scas
outsl
jo
cmp
xchg
daa
jle
popa
icebp
pop
es
jg
clc
mov
daa
adc
in
imul
in
xor
pop
dec
movsl
sbb
ret
jnp
rorb
cld
stc
push
add
xor
iret
lret
je
hlt
bound
and
jp
dec
fs
lcall
loopne
ljmp
adc
imul
dec
jb
pop
pop
sbb
dec
sbb
mov
enter
mov
adc
sub
dec
mov
xlat
dec
or
sub
in
mov
mov
push
dec
pushf
in
mov
arpl
or
sahf
popf
lods
push
fisttpl
rol
mov
sub
sbb
pop
enter
rcl
je
sbbb
insl
xchg
adc
pushf
cmp
mov
shlb
sahf
jnp
dec
xchg
pushf
cwtl
adc
adc
rclb
or
pusha
into
es
ja
std
repz
pop
jg
dec
dec
and
inc
fwait
repnz
jge
outsb
push
inc
lahf
or
aaa
popa
dec
jb
xor
push
inc
outsl
dec
inc
cmpsb
cmp
pop
fs
mov
push
pop
pushf
dec
jbe
daa
insl
jmp
sbb
test
jge
jmp
dec
test
dec
xor
jp
shll
sbb
mov
jle
outsb
mov
subb
mov
test
xor
and
dec
test
ja
mov
inc
push
fdivl
jae
adc
testb
fildl
test
pusha
sarl
sub
fucomip
inc
icebp
call
loope
cwtl
xor
push
dec
dec
sub
cld
outsb
enter
jmp
pop
sti
or
push
dec
inc
mov
push
inc
cwtl
and
add
lods
into
test
ja
outsl
sti
popf
sbb
aam
daa
ss
xchg
mov
pusha
sbb
outsl
mov
nop
dec
data16
test
outsl
enter
jbe
bound
std
outsl
lods
pop
mov
gs
js
and
pushw
sti
outsb
or
sbb
ja
cs
pushf
and
add
sbb
and
push
pop
cwtl
fcompl
push
repnz
mov
pop
push
hlt
outsl
mov
jbe
int3
xchg
sbb
cli
mov
or
adc
int3
push
cmp
pop
mov
inc
xchg
mov
pusha
pop
dec
in
mov
filds
dec
mov
add
scas
inc
sbb
mov
mov
inc
jg
jo
inc
adc
out
sub
pop
lret
push
add
shrb
outsb
xor
dec
push
sbb
scas
bound
daa
dec
xchg
test
fs
jle
xor
dec
cmpsl
pop
aas
cltd
inc
cs
lods
leave
jbe
pop
dec
add
dec
iret
mov
out
xchg
xor
popa
sti
adc
cwtl
sbb
imul
push
jb
lods
mov
lds
cmpsb
jle
mov
jnp
jns
lret
aad
jbe
mov
pop
jg
cltd
push
in
mov
and
test
in
arpl
pop
adc
leave
test
mov
call
xor
inc
or
andb
and
inc
mov
mov
mov
push
addr16
out
je
mov
sti
dec
hlt
ret
lahf
addr16
daa
mov
roll
int3
repz
pop
jb
xchg
xchg
dec
push
inc
push
mov
ds
mov
pop
jae
in
stos
pop
pop
int
jl
lahf
add
push
add
scas
dec
or
add
outsl
mov
sbb
fiadds
jnp
repz
xor
out
stos
xor
mov
pop
pop
push
lds
pushf
stc
dec
testl
inc
dec
mov
mull
inc
mov
adc
rolb
or
std
gs
mov
sub
push
inc
mov
hlt
fistps
rcr
fisubs
push
arpl
inc
out
out
lods
dec
ja
jae
pusha
inc
mov
cld
push
hlt
inc
and
shlb
mov
mov
pop
arpl
jmp
cmpsb
push
dec
jg
xchg
je
mov
add
push
rclb
push
bound
test
push
jp
hlt
sub
fs
lcall
sub
stos
cmp
xchg
popf
cli
dec
insb
nop
adc
cmp
testl
adc
dec
es
jp
jp
out
mov
jae
cld
sbb
test
lea
stos
mov
push
and
nop
sbb
sbb
stc
mov
mov
sbb
sbb
lahf
dec
repz
test
mov
into
loop
addr16
rclb
pop
cli
lds
push
fldt
mov
xchg
push
inc
scas
sbb
sti
mov
fdivrs
sbb
mov
inc
jmp
inc
push
jl
xchg
xorl
sbb
scas
jbe
outsl
popa
pop
aaa
inc
push
sahf
sub
fs
adc
sti
cmp
dec
das
adcl
push
mov
push
push
push
mov
xchg
cmpsb
adc
pop
pushl
outsl
clc
xchg
push
push
bound
fcoms
call
adc
das
push
xchg
call
mov
ret
sbb
push
jg
push
leave
or
fcoms
out
mov
aam
lock
pop
mull
and
arpl
sbb
loope
test
dec
adc
sub
dec
dec
shlb
push
lea
stos
fcmovnu
and
xchg
or
loope
gs
jl
pop
xchg
fwait
adcb
jb
test
test
push
jns
inc
cmp
insl
adc
in
xchg
mov
and
int
in
pop
data16
scas
push
pop
push
movsb
mov
pop
ja
test
imul
in
inc
pushl
or
scas
mov
in
add
cmp
jae
adc
testl
adc
ret
je
jbe
xchg
push
adc
test
rcr
pop
mov
das
dec
or
pop
sub
stos
mov
test
sahf
mov
cmp
and
scas
pop
ret
ss
pop
jecxz
ds
data16
clc
mov
movsb
jl
iret
pop
mov
into
pop
out
cmp
fiaddl
test
dec
nop
cmpsl
lds
dec
vmovsd
int3
pop
pusha
sti
xchg
jno
dec
movl
lea
popf
xchg
cwtl
int
push
cmpsb
aad
ret
or
dec
or
int
cmpsb
xchg
mov
dec
mov
int
xchg
inc
cmpsl
dec
sbb
test
dec
adc
rcll
push
outsb
scas
xor
call
out
scas
test
add
push
imul
out
imul
sub
or
push
outsb
mov
aas
cmp
mov
insb
nop
mov
dec
push
push
cwtl
stos
or
jmp
fwait
jne
addr16
test
xchg
sbb
mov
xor
enter
nop
imul
xchg
push
shrl
leave
dec
std
inc
out
mov
cmp
call
xchg
fs
dec
pop
push
loope
add
cli
test
mov
and
add
clc
enter
fildl
fisubs
sbb
pop
daa
loopne
imul
ljmp
das
test
stos
ljmp
add
pop
cmc
lods
jle
outsl
sub
cmpsb
js
es
pop
addr16
push
dec
jmp
bound
adc
les
faddl
jl
shrl
dec
and
or
mov
popl
xchg
sub
mov
cwtl
sub
push
pop
xchg
je
sbb
enter
push
pop
cmp
add
add
or
pop
sbb
movl
jnp
lahf
ret
cmp
or
sbb
cltd
das
cmc
stos
push
xor
mov
lds
int
je
sbb
out
pushf
jnp
pop
imul
call
push
clc
enter
jno
stc
aad
dec
pop
fwait
scas
mov
clc
jg
shrl
and
mov
repz
pusha
or
cmp
leave
bound
dec
cwtl
mov
fnsave
leave
mov
mov
add
and
movsl
push
mov
cmp
and
daa
mov
ret
fiaddl
popa
popf
sarb
xchg
clc
push
lods
repnz
sbb
sub
scas
pusha
pusha
mov
mov
ja
daa
test
sbb
fisubrl
adc
and
xor
xor
add
rorl
inc
les
ljmp
pop
push
sbb
dec
adc
scas
lcall
mov
mov
jl
push
inc
lahf
scas
out
mov
adc
xchg
inc
bound
mov
sub
stos
mov
lock
fs
sbb
sbb
xlat
push
incb
adc
add
jo
jmp
pusha
cmp
push
lret
inc
sarl
mov
mov
xchg
iret
outsl
push
test
xor
mov
imul
stc
adcl
push
dec
mov
stos
mov
inc
jae
sbb
dec
pop
inc
or
sbb
pop
jb
scas
and
push
imul
cmp
cmpsb
and
inc
fs
dec
sbb
and
out
cwtl
rclb
int
aam
mov
outsb
sti
xchg
out
jmp
orb
dec
sti
ret
xor
out
aas
lods
cwtl
sbb
inc
outsb
push
mov
push
jb
lods
xchg
push
iret
sub
mov
sbb
cs
roll
push
jmp
sti
pxor
push
mov
and
mov
leave
jns
repnz
out
xor
lret
hlt
fbstp
out
stos
outsl
or
addr16
pop
jmp
popf
inc
cwtl
lds
jp
mov
outsb
inc
aas
in
xchg
clc
sarb
outsb
and
pop
das
mov
inc
mov
adc
data16
push
fstps
gs
nop
repz
lock
test
popf
stc
inc
jle
mov
mov
sbb
movsb
sub
xchg
xorb
stos
inc
adc
aad
je
push
outsl
mov
pop
xchg
pushf
add
loop
pop
addl
shll
fisttpll
dec
test
mov
dec
inc
dec
push
push
push
shll
fs
push
insl
mov
movsb
test
fidivrl
mov
jae
sbb
mov
sbb
subb
stos
daa
dec
sbb
jmp
inc
dec
test
or
es
rorb
push
gs
or
cmp
xor
dec
enter
cmp
ljmp
dec
adc
mov
movsb
pop
out
jmp
jae
bound
mov
fstpt
jns
nop
out
clc
popf
add
imul
stos
push
repz
fsubs
inc
pop
enter
nop
call
fdivp
imul
inc
fs
or
inc
outsb
dec
subl
jle
call
mov
mov
or
mov
inc
cwtl
leave
push
jne
pop
jp
loope,pt
int
xchg
xor
push
sti
xchg
cmp
or
out
sbb
xor
cmpsb
xchg
jne
out
js
dec
sbb
js
lret
mov
pop
and
lea
stos
cmpsb
xchg
in
dec
jo
jl
lret
mov
arpl
mov
pmaddwd
pop
push
mov
mov
fwait
sub
pop
shrb
lret
jl
jbe
cld
insl
fwait
orb
cli
inc
ftst
mov
add
lahf
andb
leave
stos
cmp
jae
lret
fsubrs
mov
mov
jns
ljmp
pop
adc
adc
adc
inc
jge
out
pop
outsb
jle
hlt
daa
sub
std
repz
and
mov
push
addr16
popf
sbb
pop
in
inc
scas
aas
out
adc
lret
xchg
in
shrd
inc
push
pop
push
jg
inc
push
ror
push
fwait
jo
lret
inc
mov
into
das
xchg
js
lret
dec
mov
pop
dec
adc
dec
pop
sbb
inc
imul
pop
cmp
and
testl
test
testl
xor
into
pushf
mov
scas
dec
lods
addl
push
aad
daa
pop
jg
pop
inc
popa
aad
mov
test
rcrb
cld
sub
mov
cld
imul
push
dec
mov
or
push
test
outsl
or
ljmp
daa
pusha
xor
lock
push
inc
xlat
sti
loope
in
std
call
mov
xor
movsl
in
xchg
mov
pop
pop
pop
js
jb
mov
je
popf
pop
test
or
inc
jg
imul
add
cmpsb
in
dec
mov
icebp
cwtl
mov
push
inc
jge
inc
es
and
jne
adc
or
jae
repnz
xlat
inc
jo
sbb
xchg
arpl
jmp
ret
mov
aaa
cli
roll
fdivr
mov
xor
or
fstps
add
dec
mov
pop
adc
ja
pop
movsl
mov
mov
sub
xor
xor
hlt
xor
and
push
mov
jl
or
pop
adc
push
lcall
addr16
and
sti
and
cmp
stos
push
and
xor
mov
mov
int3
fwait
inc
sbb
jg
cmp
inc
repz
mov
xor
out
jae
stc
fistpll
dec
jle
mov
shr
mov
dec
imul
jns
leave
cmp
mov
repz
pop
inc
imul
lods
sub
and
or
pop
add
loopne
push
ja,pn
push
addr16
cmc
sub
and
movsb
xor
and
cmpsb
or
cld
push
and
or
das
xor
adc
dec
mov
add
jae
movsb
out
inc
jle
pop
movsb
shlb
sbb
test
cmpsb
xorb
cli
mov
pop
mov
sub
data16
dec
inc
popf
and
jl
pusha
pushw
lds
pop
sti
and
add
jns
inc
fs
push
mov
dec
push
mov
cld
in
jo
and
sub
xor
loopne
mov
inc
fisttps
sbb
cmp
add
push
mov
xchg
shlb
sbb
arpl
orb
fdivr
sarl
pop
cmc
xor
loop
je
add
inc
sub
add
inc
and
sbb
inc
outsl
sub
jbe
mov
sub
stc
dec
dec
aad
in
inc
js
cmp
outsl
lods
aad
iret
sbb
adc
je
pop
inc
test
lock
mov
js
dec
mov
mov
dec
fs
stos
popa
pop
stc
jo
lahf
cmp
loopne
arpl
and
dec
imul
cs
fidivrs
aas
cmp
mov
adc
in
test
inc
fwait
jmp
xor
mov
mov
adc
push
jnp
or
sub
sub
pop
jp
xor
inc
dec
stos
jno
mov
mov
sbb
adc
dec
ss
sub
cltd
aaa
test
cwtl
cmp
xchg
jae
mov
lock
push
jl
pop
cmpsb
hlt
pop
aam
jne
push
jle
roll
in
dec
dec
fwait
fisubs
push
hlt
mov
inc
imul
adc
cld
rorl
js
and
inc
leave
js
ds
outsl
xlat
sbb
shl
push
xlat
xor
and
push
shl
sbb
mov
daa
mov
out
aaa
std
enter
adcb
or
pop
add
stc
daa
lds
stos
mov
add
ds
sarl
inc
mov
fwait
cli
or
out
icebp
fs
pop
inc
push
inc
into
js
jbe
lods
stc
pop
adc
aas
mov
cs
xchg
jge
adc
repnz
mov
ret
push
inc
sbb
adc
lods
and
into
inc
xor
rolb
sbb
dec
push
xor
inc
lods
ss
fisubs
hlt
fisubrs
lods
inc
xchg
fldenv
cmp
push
ret
jl
xchg
cmpsb
andb
stos
lock
push
or
decl
xor
fsubs
imul
stc
jmp
and
cmp
ja
inc
or
and
ror
sub
lock
jg
fldenv
lock
ds
lcall
pop
xor
imul
inc
inc
push
cmp
xor
cli
inc
rcrl
or
hlt
test
sti
or
cmpsb
pop
cmp
jge
adc
mov
sbb
mov
mov
mov
sbb
sub
lods
xchg
jle
xchg
adcb
fcom
loopne
movsb
jno
mov
fwait
imul
data16
lret
cmpsl
movsl
outsb
int3
cltd
out
out
pop
les
fisubrs
sti
out
xor
dec
sub
lret
test
shrl
dec
in
mov
mov
add
push
aaa
aad
int3
mov
sbb
pop
mov
cmp
jno
hlt
mov
mov
out
mov
cmpsl
stos
dec
mov
outsl
repz
xor
push
inc
pop
dec
inc
and
rcrb
pop
push
pop
xchg
and
cs
fs
scas
ljmp
in
ja
sub
cli
cs
lahf
dec
les
mov
aas
lahf
inc
adc
fs
cmp
scas
cmp
jbe
jbe
xchg
xchg
xor
add
call
sbb
in
inc
shll
stos
stc
sub
mov
out
pop
mov
mov
movl
inc
xor
cmpsb
add
mov
clc
das
mov
fidivrs
sbb
mov
cwtl
push
cmp
insl
dec
int
dec
bound
out
mov
ret
shlb
mov
fisttpl
push
jo
shl
fdiv
adc
mov
dec
mov
ja
inc
and
mov
js
mov
data16
cmp
inc
dec
fisttps
aam
sahf
sub
not
add
xchg
fidivrs
imul
jle
jbe
push
pop
dec
in
xchg
xchg
push
jns
mov
xchg
mov
dec
lahf
inc
hlt
cmp
repnz
jae
pop
popa
jbe
lds
rol
bound
cmpsl
jo
stos
push
and
pop
insb
jmp
push
test
mov
outsb
push
dec
fwait
outsb
add
cmpsb
stc
add
or
xor
popa
out
movl
add
lret
adc
pusha
xchg
inc
mov
cmp
pop
xchg
add
dec
and
aas
lock
xor
and
sbbl
inc
mov
add
subb
adc
xor
and
leave
xor
cld
out
bound
or
ljmp
sbbl
addr16
push
push
outsb
rcll
xor
data16
sbb
mov
data16
enter
outsl
dec
lods
stos
push
dec
jo
sub
into
push
jb
push
push
jnp
faddl
push
test
into
imul
and
push
sti
jmp
push
lcall
push
shrl
int3
xchg
inc
sub
cwtl
inc
call
mov
pop
test
in
xor
je
ljmp
jb
loopne
xor
adc
lret
ljmp
lock
pop
int3
ljmp
popa
adc
jae
pop
sub
xchg
inc
test
push
sbb
mov
in
mov
mov
cwtl
les
sbb
mov
xchg
push
push
pop
les
fs
push
jg,pt
shrl
and
das
iret
bound
adc
enter
test
cmc
shll
clc
and
or
mov
push
cmp
and
orl
inc
cwtl
out
sqrtps
les
testl
pusha
into
lds
fcoms
xchg
push
jmp
in
lock
or
stos
inc
adc
scas
lods
outsl
cmc
test
sub
ja,pt
push
cmc
dec
es
inc
dec
aad
cli
inc
popf
sbb
cmp
mov
enter
scas
pop
bound
movsb
mov
clc
sub
jg
and
pop
fs
inc
cmp
adc
out
or
sbb
rcrb
outsl
jae
sub
jmp
fnstcw
mov
pop
in
popf
das
jmp
inc
in
out
xor
jmp
or
subl
data16
outsl
addr16
sub
xor
push
ljmp
sub
andb
iret
fwait
sarl
jne
movsb
iret
ret
rorl
mov
insl
movsb
pusha
call
jg
or
movsb
fdivl
addr16
call
enter
jmp
xor
rorb
fsub
stos
popf
mov
cmp
in
xchg
call
das
cmp
jno
pop
mov
aam
cmp
in
gs
xchg
cld
std
push
xor
sub
sbb
movsb
mov
add
call
test
pop
and
adc
xchg
inc
inc
shl
sub
inc
push
or
cmpsl
out
cld
stos
dec
in
inc
push
pop
loopne
inc
sbb
fsubrp
call
test
js
hlt
cmc
inc
sub
xchg
loope
lods
popf
out
test
and
stos
leave
js
sub
push
shl
xor
rol
push
cmp
xor
mov
push
pop
xchg
shlb
loopne
jg
dec
xchg
repz
xchg
sti
rcrl
add
enter
leave
or
ljmp
imul
jl
jle
push
repnz
frstor
inc
enter
cltd
lock
out
sub
cli
ss
in
cli
bound
fisubrl
movb
lret
xchg
adc
cmpsb
xor
pusha
fucomp
imul
sub
repz
dec
sbb
test
out
sub
sub
or
int3
inc
test
sub
dec
adc
sub
jmp
sub
insb
mov
or
bound
movsl
pop
decl
inc
movsb
outsl
stos
and
mov
out
ljmp
xchg
push
leave
add
test
call
clc
adc
leave
int3
pop
add
and
sub
mov
inc
xchg
pop
arpl
sub
insb
inc
fistl
dec
adc
dec
or
jne
cmp
push
push
hlt
lods
loope
add
dec
int3
push
sub
and
pop
pop
roll
hlt
sub
jb
in
pop
lahf
dec
imul
repz
sbb
pusha
incl
add
pop
fwait
xchg
sub
sti
mov
mov
inc
sub
cmp
repz
rorl
push
fisubs
into
es
lret
test
or
stos
in
icebp
aad
je
out
adcb
push
push
pop
addr16
xchg
enter
popf
cld
jl
aaa
lea
fwait
notb
loope
dec
enter
dec
arpl
pop
and
cmp
mov
push
or
rorl
xlat
and
clc
jnp
xchg
sub
cmp
popa
jns
sub
or
or
sarb
outsb
dec
sti
cvttps2pi
cwtl
pop
mov
ljmp
loop
mov
add
push
dec
shll
stos
shr
inc
lahf
xchg
push
adc
fs
or
mov
sti
enter
test
xchg
jle
jle
inc
jl
sbb
aas
pop
outsb
xchg
test
sub
push
adc
push
cmp
dec
push
dec
fiaddl
test
adc
and
adc
jmp
scas
or
out
jns
data16
dec
addr16
jns
js
inc
adc
push
lea
jo
push
dec
add
xor
pop
repz
push
pop
sbb
stc
ds
clc
incb
jns
jle
jl
sub
popf
sub
adc
loope
out
dec
jg
fsub
lea
int3
dec
daa
je
sub
cmpsl
idivl
adc
imul
scas
adc
inc
push
or
or
pop
ja
lds
add
lock
call
fwait
ret
ret
into
imul
inc
sbb
dec
push
jb
es
in
sarb
imul
out
pop
jns
adc
dec
sbb
push
add
pop
sbb
pop
dec
jmp
mov
add
dec
xchg
mov
xchg
repnz
push
pop
and
dec
push
popa
into
sbb
mov
gs
outsb
sbb
outsl
js
sub
pop
xchg
js
rorb
out
in
xor
mov
adc
js
xchg
inc
ret
cmp
cmc
test
movaps
dec
push
fwait
jle
lds
add
jne
push
pop
jecxz
popa
pop
loop
ja
pop
out
mov
ss
ret
mov
push
call
test
repz
jmp
lods
mov
inc
mov
pop
mov
bound
call
movsl
push
or
repz
jge
mov
pop
pop
rclb
stos
inc
mov
cld
nop
aad
mov
addr16
pop
dec
outsl
adcl
ss
sub
adc
sub
jne
insb
inc
js
xchg
mov
out
or
fiaddl
data16
sub
dec
dec
lods
pop
mov
lahf
pop
outsb
mov
inc
into
and
push
inc
js
push
mov
inc
decl
cld
xor
sub
je
daa
shrl
push
cwtl
data16
push
adc
dec
sbb
imul
or
jo
pop
push
ret
pusha
idivb
inc
dec
push
adc
jns
dec
lret
cmpsb
dec
push
aas
and
daa
sti
and
jg
cmpsb
sub
add
jl
sub
rorb
data16
xchg
cmpb
loope
repnz
mov
mov
xor
dec
and
mov
enter
push
ja
popa
dec
enter
in
out
in
pop
pop
pop
mov
inc
repz
out
fs
out
jb
and
or
sahf
mov
xchg
fwait
cli
mul
mov
inc
movsb
insl
les
jl
inc
movsb
inc
cmpsb
ss
push
int
std
mov
and
arpl
nopl
or
pusha
test
jecxz
int
outsl
push
clc
loope
pop
bound
outsb
xor
aad
cmpsb
mov
jbe
mov
mov
xchg
dec
adc
and
mov
mov
sbb
sub
mov
jle
pop
lea
or
inc
call
add
push
jbe
cmp
sti
sub
push
dec
outsl
les
and
sbb
cld
stc
stos
sub
sub
and
test
and
inc
sub
jge
jmp
outsb
stc
rcrb
stc
ss
into
dec
movl
sahf
prefetcht1
js
sarb
loopne
jnp
jl
xor
insb
mov
dec
cmp
stos
dec
sub
or
xchg
rorl
pop
mov
clc
out
mov
sbb
out
lds
arpl
adc
xor
mov
jp
lock
cmp
lds
pop
xchg
test
fs
dec
sbb
repnz
sub
movl
or
in
sbb
mov
imul
or
jbe
lods
aas
push
dec
enter
mov
push
pop
sbb
shlb
data16
push
or
les
jo
or
sbb
test
cli
outsl
pop
pop
inc
int
int3
call
das
cmp
mov
rol
and
mov
mov
test
sub
pop
rclb
jl
pop
dec
ljmp
popa
push
lods
insl
addr16
ss
pop
mov
add
fldenv
jae
sub
pop
into
jne
ja
jmp
cwtl
push
jns
lds
out
aas
xor
iret
mov
dec
out
push
sti
test
outsb
pop
adc
mov
or
pop
mov
push
jns
int
lret
mov
xor
dec
or
sar
pop
dec
leave
lds
sbb
bound
push
xchg
push
add
mov
pop
cmc
mov
in
adc
xchg
int
cmovge
mov
push
pop
jle
adc
xchg
pop
lret
inc
test
push
cs
fwait
lcall
in
dec
insb
subb
ss
and
rcl
mov
jp
sbb
lea
imul
jg
addr16
pop
cmp
ja
hlt
js
cmp
in
notl
decl
sub
stos
ljmp
nop
outsl
pop
xchg
xlat
or
data16
or
cmp
in
sbb
mov
jnp
adc
sub
aad
stos
data16
dec
dec
adc
push
ret
sub
into
jmp
mov
dec
xor
jle
sub
jl
clc
lods
rclb
cmp
fsubl
cmp
adc
pop
cmp
push
dec
jp
inc
pop
add
into
lods
inc
push
dec
imul
cmc
sub
icebp
cli
mov
les
jle
mov
pop
cmp
inc
sbb
mov
push
jnp
cmc
jbe
fwait
sub
mov
or
hlt
rcrl
fsub
je
push
test
sbb
push
popa
lcall
rcr
or
or
sti
sbb
je
call
push
in
iret
js
sbb
jmp
pop
ja
stos
shrl
adcl
add
jmp
xchg
or
repz
mov
sub
icebp
pop
dec
sbb
outsb
roll
push
inc
pop
aad
xor
sub
jg
js
jle
in
jl
jo
call
inc
jae
bnd
mov
aaa
test
lcall
dec
in
pop
mov
pop
xchg
dec
aam
inc
mov
and
push
mov
jno
pop
jl
data16
push
jnp
pop
jnp
pop
jle
loopne
js
bound
int
sbb
push
mov
dec
je
inc
adc
je
pop
pop
xor
lret
inc
scas
mov
je
xchg
nop
jnp
pop
pop
adc
cmpsl
add
jns
push
mov
push
jg
sti
add
adc
adc
or
cmc
cwtl
jp
test
and
pop
push
xchg
cwtl
or
lret
dec
jb
push
call
mov
dec
jae
pop
sub
jae
out
int
mov
cmpsb
popf
mov
dec
inc
sbb
cld
and
and
sbb
in
lods
imul
lds
stos
push
movsb
jno
xlat
hlt
pop
iret
or
jecxz
or
fs
sub
les
ds
lock
jnp
sbb
push
popa
into
lock
inc
push
mov
sbb
lods
out
push
addb
cli
data16
cwtl
mov
adc
stos
inc
outsb
mov
pop
dec
out
fsubs
rcrb
addr16
pop
hlt
stc
sti
movb
daa
inc
or
push
lret
decl
test
out
mov
outsb
push
fwait
repnz
daa
adc
sti
inc
imull
jecxz
out
sti
repz
push
push
xchg
mov
popf
and
fs
jne
xchg
pop
pusha
jns
stos
ljmp
xlat
cmpsb
sbb
jb
les
call
add
fdivr
push
jno
inc
jg
into
aad
ds
mov
dec
cmc
jne,pn
mov
outsl
fwait
push
stos
shlb
fadd
and
push
test
or
pop
xor
push
lahf
in
out
out
subb
mov
outsl
aas
cmpsb
cmp
clc
cmp
into
push
clc
das
pop
jmp
sbb
pop
stos
shlb
pop
and
orl
pusha
dec
test
fldcw
bound
or
or
inc
les
das
stos
je
mov
rclb
push
pop
pop
jp
mov
dec
dec
mov
mov
cwtl
pusha
popf
inc
xchg
leave
sbb
dec
fisttpll
sbb
mov
jg
mov
imul
inc
and
ds
pusha
cwtl
xchg
inc
fcoms
jle
pop
xor
dec
and
stos
adc
sub
sbb
movb
mov
shrl
fwait
decl
push
or
dec
movsb
insl
movsb
lret
pop
add
push
testb
ljmp
push
dec
add
lret
repz
jbe
jp
out
push
out
dec
fwait
cwtl
adc
adc
inc
fstl
test
fmuls
push
dec
adc
cs
mov
pop
lret
mov
inc
push
js
addr16
jl
xor
pop
fs
lahf
hlt
add
les
ljmp
je
mov
jo
xor
push
rorl
fmulp
into
cmpsb
gs
dec
pop
cli
aaa
inc
jmp
and
dec
int
fucomp
movsb
popf
inc
jns
stc
dec
push
or
out
out
out
sbb
pop
xor
sbb
orl
outsb
mov
test
ss
pop
repz
ret
cmp
loop
mov
stos
mov
push
gs
scas
mov
gs
lcall
daa
les
mov
sbb
jb
jbe
mov
xor
arpl
mov
pusha
adc
jl
dec
mov
cld
sarb
nop
bound
rcll
stos
push
das
test
mov
jo
jns
int
addr16
sbb
hlt
xor
jg
mov
loop
sub
mov
jge
stos
add
js
mov
jle
mov
mov
lock
add
inc
dec
lret
das
sbb
dec
inc
arpl
out
mov
lahf
adc
test
cmp
lret
pop
fcmovu
dec
psllq
cmpsl
pop
arpl
xlat
mov
sahf
enter
adc
mov
loopne
insl
inc
fsubs
enter
into
movsb
cmp
aam
and
cwtl
outsl
push
hlt
xchg
scas
xchg
jnp
fcomip
pusha
cmc
ja
je
lret
mov
mov
jecxz
jp
testl
dec
inc
sbb
mov
or
arpl
mov
fmulp
arpl
roll
pop
and
fnstsw
in
fstps
or
out
lods
sbb
in
dec
push
repnz
lahf
scas
ss
mov
fmuls
les
add
lcall
jp
sub
dec
and
hlt
cmpsl
or
addr16
mov
scas
ret
std
pop
fneni(8087
pop
inc
jl
pop
aam
mov
mov
popf
test
js
data16
mov
hlt
cld
cmpsb
inc
test
inc
or
data16
js
cmpsb
hlt
push
push
inc
in
inc
pop
stos
sbb
leave
cwtl
jno
mov
outsl
cltd
push
imul
fistps
mov
jg
loop
push
sub
push
addr16
les
outsl
pop
popf
sbb
test
inc
iret
push
sbb
dec
jmp
stc
lods
dec
push
rep
scas
push
dec
pop
into
jbe,pn
outsl
mov
dec
push
ljmp
in
outsb
mov
add
mov
out
vmread
inc
out
scas
push
xor
mov
sbb
popa
mov
push
lea
rcrb
cmpsl
push
test
cld
cs
cmc
lods
mov
jg
mov
mov
stos
lods
mov
out
pop
inc
ljmp
sbb
cmp
xor
mov
lods
cmp
imul
dec
sbb
push
or
cmp
lods
push
ret
loopne
ss
les
lret
nop
push
and
gs
dec
inc
sub
push
shl
pop
pop
je
ljmp
outsb
xor
test
push
pop
cmc
out
rcrl
imul
es
add
lds
xchg
repnz
add
imul
jp
subb
stos
xor
xor
les
loopne
shll
lods
sub
repnz
dec
div
sub
outsl
sub
lret
sbb
dec
sbb
je
add
jnp
push
cmp
sbb
jl
add
and
iret
movsl
sbb
movsb
js
mov
lods
roll
sub
sub
inc
stc
dec
daa
shll
dec
aas
loop
sahf
push
fsubrl
sbb
jmp
icebp
or
stos
adc
ljmp
into
sub
ljmp
add
scas
sub
add
cmpl
sbb
call
pop
dec
or
stos
outsb
sub
into
cltd
fistl
push
dec
sbb
movsb
je
loope
push
das
faddp
dec
xchg
cmp
gs
push
test
push
mov
push
cmp
inc
push
js
xchg
ja
adc
cmp
imul
pop
add
es
dec
sbb
jge
popa
fdivrl
icebp
jb
rorb
push
movsl
inc
call
add
push
sub
mov
push
outsl
stos
jbe
pusha
je
scas
fldt
push
mov
and
dec
fs
jl
inc
add
fwait
add
insb
mov
outsl
sub
mov
add
pop
push
daa
mov
xor
in
popa
jl
stos
and
dec
inc
es
data16
xlat
or
jg
add
lods
cmp
sbb
push
xchg
mov
dec
call
sbb
jge
sbb
adc
fdivl
movsl
mov
ret
iret
dec
or
and
sub
push
push
xor
in
or
push
sub
adc
push
cmpl
scas
sbb
inc
xchg
lea
nop
push
js
jmp
inc
les
jg
push
jmp
in
push
dec
js
pop
sub
inc
mov
lods
adc
repnz
pop
dec
mov
push
add
lret
fs
nop
sarl
outsl
sti
nop
cmp
test
sbb
jns
sbb
ljmp
jmp
arpl
shr
sbb
pop
pop
adc
shll
in
sbb
inc
xchg
cmp
or
mov
sbb
popf
ss
aam
dec
mov
push
mov
pusha
in
mov
jl
aas
imul
repnz
adcl
out
mov
jne
test
test
inc
mov
mov
or
push
cli
test
xchg
pop
incl
lret
js
sub
cwtl
stos
and
adcl
xchg
mov
cmc
insl
lahf
in
pusha
out
dec
add
adc
and
out
subl
gs
repz
popa
cmc
fwait
imul
out
adc
call
sahf
iret
clc
je
hlt
xchg
jg
insb
fwait
stos
jo,pn
cmc
push
xchg
adc
js
in
int3
sbb
out
xchg
mov
mov
jbe
cvttps2pi
ljmpw
iret
pop
inc
pop
jo
jl
mov
dec
je
cs
cmc
in
iret
dec
jl
sub
pop
sub
or
add
sub
add
add
sub
sbb
cltd
push
fsubrp
pop
adc
lods
in
js
mov
mov
nop
push
adc
adc
popl
jl
mov
ret
popf
cmc
dec
in
pop
or
dec
out
add
addl
sub
gs
inc
xchg
sub
cmp
pop
jg
and
fstpt
jmp
add
orl
fs
xchg
sub
push
mov
or
js
sbb
iret
mov
inc
das
xor
cmc
outsl
in
enter
pop
pop
and
push
mov
mov
inc
mov
cmp
push
cmp
cmp
lcall
out
aam
fs
addr16
insl
adc
stc
jecxz
in
pop
pop
test
out
js
call
dec
fwait
mov
leave
mov
mov
or
loope
call
mov
mov
out
xchg
dec
push
dec
jns
outsl
jne
mov
mov
mov
dec
mov
das
dec
mov
xor
sbb
xchg
dec
mov
into
jae
jmp
push
fs
jl
xchg
dec
mov
mov
pop
push
dec
mov
mov
and
je
dec
dec
outsl
jl
int3
call
vprotd
or
fucom
push
mov
sbb
addr16
mov
popa
xor
in
or
dec
mov
aas
fs
dec
filds
xchg
lea
xchg
in
and
sbb
in
cmp
ja
pop
repnz
adc
mulb
add
cld
icebp
fs
call
push
es
mov
test
cmp
jne
cs
xchg
jnp
cmp
arpl
lea
sbb
and
pusha
mov
out
out
cwtl
lahf
mov
and
jbe
pop
cmp
js
and
mov
in
cs
outsl
call
mov
xchg
or
cmp
call
push
call
mov
dec
ret
jne
dec
jnp
mov
xchg
into
jbe
cmp
xor
push
xchg
dec
or
outsl
jmp
lock
mov
lea
add
dec
cmp
lods
adc
test
dec
out
jle
mov
testl
inc
lods
jge
jg
mov
cs
jge
jmp
pop
out
jnp
sbbl
cmp
fs
jo
xor
dec
push
fs
xchg
enter
jle
andps
and
dec
sbb
out
je
maskmovq
testl
sarb
jns
ja
lahf
cmc
out
inc
insb
sbb
mov
cmc
popa
pop
lret
mov
jb
ja
cltd
cmc
out
jne
notl
dec
dec
cmp
push
xor
loope
call
mov
push
adc
jmp
pop
mov
punpckhbw
jb
xor
cmpl
imul
scas
xchg
xchg
imull
ja
sub
scas
je
dec
push
out
push
or
imul
nop
sbb
imul
sub
jl
int3
lcall
or
add
cmpb
int3
sbb
xchg
dec
add
inc
jge
sahf
mov
dec
out
jmp
in
lret
cs
aas
in
and
push
sbb
dec
jle
sbb
std
pop
push
cmp
adc
inc
out
js
inc
push
es
jp
cmpsl
ret
invd
pop
leave
daa
imull
adc
clc
push
sub
jle
xchg
js
sbb
mov
popf
jnp
in
outsl
imul
pop
add
cmpsb
mull
popa
int3
cmpsl
mov
add
cmp
push
js
shll
popa
test
cmpsl
inc
xor
das
pusha
outsl
pop
pop
ret
ficomps
pop
cmp
in
aas
add
andb
push
pop
imul
pop
pop
sbb
inc
mov
mov
jo
pop
shr
push
in
pop
cmc
add
ret
arpl
insb
dec
pop
test
cs
and
scas
sbb
loopne
pusha
dec
cmpsb
popf
xor
pop
aad
pop
cmp
sub
push
sub
pusha
sub
imul
sbb
add
aaa
jp
jo
adc
add
push
fs
in
mov
popf
jns
aad
out
cli
inc
xchg
and
insb
and
mov
jmp
and
and
outsb
das
pop
xchg
fs
cld
jl
jo
iret
frstor
notb
jae
mov
outsl
loopne
push
pushf
push
mov
adc
mov
add
mov
jp
fcoms
and
adc
js
dec
sub
lcall
add
sub
dec
inc
push
jl
dec
int
cltd
mov
cmpsb
popf
insl
pop
mov
ret
inc
pop
mov
add
jmp
mov
pop
testl
enter
lahf
mov
dec
push
add
xchg
inc
xchg
int
sbb
outsl
or
rcll
mov
outsb
mov
es
xchg
mov
imul
into
fnstenv
inc
fs
sbb
inc
push
mov
xor
int
xchg
jae
xchg
sti
mov
rcrb
inc
xchg
shll
vsqrtpd
lret
insb
cli
out
scas
sbb
sbb
adc
out
mov
cld
sti
or
pop
pop
adc
in
mov
adc
stos
xchg
inc
popf
lea
dec
inc
jbe
cli
dec
ss
inc
int3
inc
or
out
mov
push
push
daa
pusha
jmp
jnp
jb
shr
push
dec
int3
inc
pop
ds
in
mov
aas
ffreep
xchg
incb
stos
xor
loope
sbb
aad
out
mov
dec
mov
sub
xchg
out
push
and
push
subb
aam
jne
sbb
rsm
jbe
imul
sbb
add
test
ja
stos
popf
iret
imul
mov
insl
push
loop
dec
adc
mov
test
repnz
pusha
push
outsb
xchg
dec
mov
lret
sti
mov
leave
lods
xchg
lret
std
cmp
pusha
repz
xlat
lret
arpl
ret
mov
mov
push
sbb
adc
popf
jle
pushf
lods
stos
loope
shll
or
push
daa
xor
mov
pop
lods
enter
outsb
adc
and
popa
inc
stos
cmpsb
xchg
enter
arpl
inc
cmp
fsubr
test
je
mov
std
cmp
std
mov
pop
dec
add
pusha
push
jo
stos
add
les
testb
mov
cs
pop
add
cmpsl
xor
insb
pop
repnz
sbb
mov
inc
mov
int
insl
in
imul
mov
ds
cmc
test
cmp
lods
push
les
push
popw
lods
jle
pusha
cmpsl
icebp
out
pop
push
mov
stos
hlt
adc
inc
fs
jecxz
jmp
mov
lret
jb
dec
inc
fmul
jbe
sbb
push
hlt
inc
adc
inc
jg
arpl
int
in
inc
int3
stos
aad
push
inc
xchg
out
imul
inc
dec
pushf
loope
xchg
aaa
jns
iret
loope
pop
pop
imul
or
cmpsl
ret
mov
sti
jl
cmpsb
pop
test
adc
mov
mov
cmp
push
pop
adc
nop
or
rcl
bswap
cli
pop
ja
dec
scas
push
dec
in
sub
push
inc
sbb
aad
into
lods
jae
ret
mov
ret
dec
popl
inc
push
outsb
jmp
daa
adc
adc
push
dec
sub
sub
out
push
lcall
dec
mov
xchg
scas
out
or
xchg
movsb
addl
or
lods
shll
jne
outsb
pop
rorb
das
sbb
lods
adcl
fildl
push
scas
cmp
push
cmp
xor
insb
stc
sbb
fdivs
dec
xor
mov
push
mov
and
mov
sbb
out
push
shl
pushf
cmc
scas
pop
std
out
dec
sub
out
js
push
ljmp
push
shrb
xor
adc
jns
adc
mov
or
pop
mov
adc
cmp
inc
pop
add
sti
ja
mov
vpackuswb
mov
dec
loop
pop
sbb
pusha
stos
iret
gs
call
adc
and
sbb
sub
xor
push
test
or
movsb
popa
popa
push
ret
clc
cmp
add
mov
pop
inc
dec
arpl
inc
add
outsb
call
xchg
and
sub
inc
nop
outsl
add
sub
push
rcrb
jbe
jle
mov
add
int3
dec
dec
push
or
cmp
arpl
jne
mov
sub
std
jmp
sbb
and
out
shlb
outsl
xor
lods
push
xchg
cmp
daa
movsb
outsl
aad
mov
sbb
mov
clc
dec
lea
cli
lret
iret
xor
jns
xchg
into
mov
in
mov
push
jle
dec
inc
fs
push
cli
jbe
mov
adc
add
mov
sub
dec
xchg
inc
pop
mov
scas
nop
pusha
int3
mov
mov
js
mov
pop
mov
add
sub
pop
outsl
lret
roll
sub
push
std
jne
test
ffree
cmpsl
or
jge
push
jnp
dec
add
aad
lods
pop
fwait
fwait
cmpsb
or
mov
sbb
pop
and
xor
out
into
je
mov
sbb
sub
or
out
or
shrl
or
xor
ljmp
dec
sahf
in
and
xchg
mov
aad
dec
dec
adc
add
arpl
movb
mov
push
int3
sbb
sti
aaa
pop
fs
mov
jmp
loop
jl
lods
xor
or
repnz
push
push
xor
jo
aas
test
pxor
leave
clc
add
ljmp
jmp
int
inc
xchg
xchg
adc
pop
dec
jp
mov
iret
lcall
cmp
inc
mov
fisubrl
dec
test
mov
cwtl
xbegin
mov
ja
dec
cs
mov
or
out
pop
in
jl
test
in
test
test
or
mov
inc
test
push
add
sbb
pop
testb
in
cmp
scas
outsl
dec
xchg
sbb
or
andl
jmp
sbb
popf
popa
jne
pusha
jnp
push
dec
out
mov
pop
inc
xor
sbb
test
sbb
clc
fwait
inc
push
stos
sbb
iret
mov
int
adc
jp
lahf
es
js
les
call
dec
ljmp
in
gs
in
stos
mov
cmp
call
push
mov
push
lds
cmp
sbb
mov
cmp
push
ret
push
outsb
and
pop
in
aaa
push
mov
shlb
sbb
addl
jg
pop
jb
xor
addr16
popa
inc
mov
sub
pop
jmp
cmp
data16
cld
hlt
push
push
push
push
outsl
jle
hlt
cmp
call
stos
xor
xor
dec
sub
out
xor
push
movsb
imul
adc
cmp
jb
push
push
lock
bound
and
call
jmp
cs
pop
jp
hlt
push
pop
insl
leave
pop
jg
iret
inc
or
push
jne
jb
sbb
cmc
stos
ss
xchg
loopne
jle
negb
inc
mov
popa
push
or
es
movsb
addr16
add
inc
push
pusha
push
push
fldenv
cmp
dec
lock
es
and
dec
pusha
popa
test
jne
xor
rcll
aam
sti
in
or
fs
sbb
push
les
mov
mov
rcrl
aas
movsb
or
ss
pop
stos
or
mov
out
pop
int
or
stos
dec
inc
loop
jg
sbb
lock
xchg
xor
les
push
out
addr16
stc
in
push
imul
jle
out
sub
and
push
dec
in
jg
aas
addr16
sarb
sub
sub
shlb
les
shl
das
outsl
in
push
sub
jb
std
iret
cld
mov
inc
ja
loopne
push
sub
scas
cld
adc
enter
jp
in
add
fsubr
xchg
push
jg
mov
ds
iret
pop
bnd
loopne
inc
addr16
mov
int3
dec
loopnew
lods
inc
cld
fs
or
fldenv
or
hlt
xchg
push
push
fs
push
cs
jg
pusha
test
cld
dec
out
rorb
test
or
inc
pop
inc
int
mov
lods
loope
push
fisubl
mov
adc
push
push
cmpsl
addr16
leave
in
popf
clc
and
aaa
in
in
out
jle
dec
sbb
daa
loopne
int3
fsts
in
nop
push
inc
les
jo
sbb
dec
mov
fs
cmp
and
fcmovnbe
and
xor
and
decb
ror
stc
xchg
xchg
mov
mov
xchg
pop
dec
push
in
icebp
pusha
stos
adc
shll
imul
sbb
dec
lahf
insl
adc
mov
push
xchg
xchg
data16
bound
outsl
inc
inc
popf
or
test
iret
int
lcall
pop
jne
dec
movl
popa
iret
jp
jno
adc
lahf
sti
lret
fcmovnbe
pop
hlt
jns
lret
inc
gs
push
dec
mov
pop
push
repnz
jo
dec
std
sbb
dec
les
xor
adc
lods
inc
inc
jnp
xor
jl
adc
ret
lahf
cld
out
in
xor
cwtl
subl
cmp
cld
or
adc
jp
enter
mov
push
fmul
add
pusha
fisttpl
add
cmp
and
mov
das
sbb
or
inc
pop
outsb
push
mov
stos
inc
pop
jbe
fwait
push
in
fs
scas
out
std
sbb
lret
sbb
ds
xchg
mov
dec
add
sbb
lret
int
jbe
push
stos
into
iret
sahf
xchg
fisubrl
xorb
addr16
sbb
mov
insl
lret
pop
dec
jo
or
cwtl
out
add
mov
incb
adc
inc
stos
andl
sbb
in
mov
mov
or
xor
dec
mov
scas
push
outsl
scas
pop
cmc
sub
sbb
sbb
insl
loopne
inc
ds
iret
jns
stos
or
cmpsb
mov
push
test
jg
lock
and
dec
inc
aad
stc
pop
cwtl
push
fsubrl
mov
outsb
xor
outsb
cmpsb
int
xorl
pop
adc
xor
mov
out
xlat
sbb
mov
test
pop
dec
in
or
and
int3
pop
pusha
inc
dec
fs
lcall
bound
aaa
jo
pop
adc
jbe
push
add
dec
adc
je
decl
in
dec
push
jnp
sub
out
call
xor
pusha
je
dec
arpl
pop
adc
jbe
imul
das
incb
jp
jmp
out
jmp
sub
fs
pop
sub
jns
pop
cs
sbbb
push
and
enter
pop
adcl
in
inc
out
mov
mov
ret
lea
les
inc
push
loope
sbb
cmp
and
int
nop
addr16
sbb
xchg
jo
inc
xchg
pop
inc
mov
xchg
dec
mov
dec
sub
sub
cmpsb
lea
ret
mov
jns
mov
xor
pop
mov
push
stos
cmp
repz
mov
lock
repnz
outsb
inc
cmpsl
int3
sub
out
cmpps
jge
stos
cmp
lods
push
or
movsb
cmpsb
rcrb
enter
and
pop
test
jle
iret
sub
popf
lret
xchg
hlt
sbb
adc
xchg
addl
fwait
push
xor
ljmp
test
xchg
xor
dec
or
les
or
cmp
push
imull
or
pop
sbb
mov
push
decl
fs
dec
out
fsubrs
dec
or
lcall
sub
sub
aam
gs
cld
and
inc
lods
cmp
mov
sub
add
les
xchg
fcompl
sbb
cmp
pop
sub
jns
dec
in
sbb
jns
add
es
sub
sub
or
jo
repz
pop
xchg
in
and
xor
sbb
lock
sub
jg
or
lret
add
push
int3
pop
sbb
sub
dec
cmp
and
push
fwait
jl
xlat
stos
adc
fwait
cmc
mov
outsb
repnz
pop
push
pop
mov
aaa
icebp
pop
dec
adc
adc
inc
push
les
addb
ja
fwait
mov
xchg
lds
sbb
mov
jmp
jnp
xor
out
out
dec
stc
dec
adc
pop
testb
popf
bound
xor
fdivrs
es
xor
jg
int
icebp
sub
or
mov
es
xchg
add
xor
adc
push
lret
dec
sub
in
cs
xor
call
jecxz
ret
popa
loope
inc
inc
add
dec
imul
shll
inc
xchg
cmp
fcmovnu
loopne
pushf
pusha
jg
and
push
mov
shll
mov
sub
jns
fs
cmp
dec
inc
jmp
inc
cmc
cwtl
inc
fwait
cld
loopne
sahf
inc
add
xor
dec
cli
sub
push
push
cld
jb
dec
out
std
xchg
cs
jne
mov
push
mov
mov
dec
aas
cmp
pusha
or
mov
pop
outsl
xchg
dec
mov
lea
mov
push
rcl
nop
jmp
cli
dec
ror
rcr
lahf
push
es
cmp
dec
inc
add
std
out
dec
rol
shlb
inc
incb
fstpl
pushf
mov
data16
adc
inc
push
test
imul
mov
outsb
mul
add
mov
bnd
ljmp
cs
adc
gs
rol
push
in
lds
inc
addl
fs
mov
mov
andb
dec
scas
adc
stos
sub
fsincos
scas
inc
and
mov
inc
sub
es
outsl
aas
outsl
jo
in
cs
xorl
arpl
cli
pop
add
and
stc
xchg
out
scas
faddp
arpl
mov
les
xchg
fwait
ljmp
push
push
aam
gs
jp
sub
shrb
jo
ja
pusha
imul
es
push
adc
leave
pop
jg
mov
jns
add
xchg
outsb
ljmp
xor
sub
pushl
jg
push
mov
mov
and
icebp
push
les
sub
cld
sbb
inc
dec
adc
dec
fwait
cli
sahf
loope
in
sub
fidivrl
and
clc
es
pop
inc
addr16
clc
push
mov
insb
fcoms
stos
aas
iret
adc
pop
les
daa
test
stos
fwait
lret
sub
push
adc
mov
stc
add
loope
inc
jg
xor
aam
das
xor
push
jmp
in
lret
sub
pop
insb
lret
vmovaps
lds
fwait
pop
pop
dec
jp,pt
in
cld
inc
push
inc
pop
sbb
daa
sub
ss
jp
or
sbb
cs
mov
addr16
pop
sub
bound
popf
adc
xchg
popa
sbb
daa
aad
stos
dec
cmpsb
jbe
jns
xor
data16
int3
inc
inc
clc
rorb
dec
and
sbb
out
shrl
push
outsb
dec
push
adc
cmc
test
or
decb
mov
scas
add
add
out
ljmp
and
scas
or
push
leave
mov
push
adc
test
out
popf
lods
cmpsb
dec
jo
test
sub
push
scas
ljmp
clc
push
stc
mov
ljmp
insl
dec
inc
sub
push
inc
stc
cmp
int
dec
cmpsl
cmp
cld
mov
or
fs
or
dec
inc
movsb
jo
rol
pop
pusha
clc
sub
mov
pusha
push
test
inc
lcall
fcoml
cmpsb
shrl
xor
cmp
movsl
test
pushf
scas
js
jge
in
imul
jg
sti
dec
ss
pusha
fsubrs
push
cld
inc
jl
pusha
test
dec
out
scas
jl
dec
out
push
imul
lret
push
mov
jo
out
stos
out
inc
std
xchg
mulb
sub
call
and
outsb
loopne
add
jbe
jbe
test
imul
adc
adc
and
dec
sub
inc
test
sbb
jle
sbb
ret
test
movsb
mov
jle
or
cmpsb
dec
test
inc
stos
jl
cmpsl
das
lds
andb
clc
xchg
mov
lret
jp
sub
mov
test
sbb
nop
sub
adc
data16
test
add
mov
int
je
jo
pusha
je
add
test
cmpsb
or
pop
sahf
adc
cmpsl
fwait
pop
imul
popa
sub
pop
inc
xchg
addr16
addr16
sub
loope
sub
popa
push
push
xchg
icebp
add
shl
cmpsl
dec
add
aaa
fsubrp
adc
push
xchg
cmp
outsb
mov
leave
lcall
ret
imul
dec
dec
mov
out
pop
inc
adc
inc
sub
pop
inc
test
mov
mov
fs
jl
pop
mov
in
sbb
cmp
rclb
fcmovnb
xchg
popa
hlt
dec
push
in
dec
jge
cli
dec
outsb
xor
pusha
sti
lcall
xchg
jle
mov
in
xor
mov
cmp
aad
sbb
inc
ret
mov
outsb
jg
insl
into
push
outsl
mov
or
jp
dec
inc
hlt
xchg
jg
outsb
cmp
scas
les
aas
push
mov
sti
ret
cli
shll
or
rcr
in
loop
fisttpl
lret
outsb
imul
dec
fstp
out
xchg
stc
xor
fwait
int
pop
sub
fdivp
mov
clc
bound
icebp
int3
addr16
dec
mov
mov
mov
xor
les
loope
shll
pop
cltd
jmp
pop
sbb
sub
mov
pusha
mov
pop
dec
or
mov
mov
jg
sub
lret
rcrl
inc
push
sbb
or
cld
in
mov
dec
push
jmp
movsb
jl
ja
sarb
mov
cmp
ret
mov
repz
or
std
cmp
pop
lcall
jl
push
jmp
jp
test
js
scas
sbb
xor
pop
xor
sbb
inc
dec
je
mov
inc
cmpsb
int
pop
loopne
outsl
data16
sub
outsb
lds
pop
sub
in
sbb
xchg
cltd
lods
outsb
and
out
clc
pop
jp
sbb
fcoms
jo
iret
ss
pop
in
push
in
sub
ja
out
jne
in
fwait
shrl
sbb
imul
ds
icebp
testl
mov
sbb
stc
inc
dec
mov
inc
adc
xchg
dec
out
mov
lahf
jno
clc
outsl
jl
inc
fwait
dec
lea
jmp
jne
iret
outsl
lret
sbb
std
cmp
movsl
lahf
push
int
popf
pop
xchg
push
cmpsb
push
pop
pop
cmp
adc
fs
movsl
addr16
push
imul
fucomp
subl
dec
fiaddl
int
pop
arpl
imul
stos
dec
pop
insb
pop
inc
mov
jbe
push
and
cmc
out
inc
ljmp
imul
pop
push
sbb
aam
inc
fs
xchg
shl
dec
jl
ror
jnp
test
out
xor
out
cmp
add
adc
sub
stos
shl
dec
sbb
adc
inc
stos
sub
dec
les
scas
push
dec
popf
pop
inc
addr16
loopne
mov
int
test
fs
adc
arpl
add
xor
mov
sbb
pop
cmp
cwtl
push
js
mov
nop
mov
dec
call
mov
mov
std
aad
popa
loop
pop
xchg
or
push
dec
cmpsb
xchg
push
dec
push
mov
xchg
jmp
rcrb
mov
sbb
sub
fs
rcr
jb
testl
repz
fwait
add
inc
cs
xchg
mov
dec
addr16
push
mov
gs
iret
outsb
dec
sbbb
inc
push
outsl
call
xlat
push
out
xor
cmpsb
push
je
or
shr
cwtl
dec
jnp
test
sbb
sub
inc
pop
inc
test
sbb
dec
sub
mov
aam
inc
outsb
mov
pop
jle
aaa
cmpsb
inc
xlat
push
or
push
into
xlat
jns
fistpl
out
push
and
sbb
enter
imul
outsb
sub
out
mov
jp
xchg
push
push
mov
push
lret
jne
int
jl
adc
jg
xchg
iret
push
inc
sti
fistps
dec
out
push
andl
cmp
mov
mov
addl
popa
out
jmp
and
ljmp
mov
adc
rcll
in
jmp
scas
xchg
out
repz
mull
or
cmp
lahf
lock
dec
enter
push
cli
cmp
pop
dec
or
les
lock
jge
cmp
aam
fs
lds
out
scas
push
cltd
in
fs
imul
and
or
mov
mov
movsb
andl
lock
into
lahf
add
cs
mov
enter
test
pop
xorl
cmp
orb
sub
mov
add
push
sar
cmp
aad
xor
pop
out
cwtl
inc
lods
push
test
mov
out
imul
inc
negb
cli
jecxz
pusha
jne
mov
sub
push
jg
xchg
clc
data16
test
pop
xor
scas
fwait
std
enter
rcrb
mov
ds
cmp
enter
sbb
xchg
lea
and
inc
mov
addb
sub
cld
lret
xchg
bound
push
inc
negl
into
fwait
jns
dec
dec
push
cmp
pop
imul
dec
cld
ja
pop
xchg
movsb
movsl
bound
inc
andl
jl
mov
testb
sti
mov
call
jl
std
xchg
lfs
out
or
inc
push
add
stos
fs
pop
jo
xchg
into
enter
lcall
pusha
scas
or
loope
stos
and
sub
ret
es
int
push
stos
pop
test
mov
mov
lret
sbbl
dec
inc
loope
das
aad
daa
test
aas
stos
jge
es
or
inc
test
push
cvtpi2ps
outsl
xor
inc
insl
fldt
shrl
add
rorl
mov
cltd
push
xchg
data16
pop
cmp
ja
outsb
mov
arpl
into
jp
pop
fsubrs
shrb
lret
push
xor
push
xor
pop
mov
xchg
call
pop
inc
clc
cld
inc
out
mov
inc
jge
pop
inc
pushf
xorb
inc
sbb
call
scas
popf
xchg
mov
ficoml
cmp
aaa
mov
inc
xlat
lds
mov
clc
jb
int
test
pop
insb
pop
loope
mov
sbb
jb
pop
enter
out
out
adc
mov
mov
inc
subl
jmp
xchg
fdivs
enter
sbb
xchg
popf
pop
test
push
sub
movsb
scas
enter
or
add
sahf
cmp
and
mov
fcmove
xchg
dec
cli
loopne
les
mov
mov
push
push
inc
pop
mov
stos
dec
outsl
cld
leave
stos
dec
mov
rcrl
mov
mov
int
or
pop
xchg
mov
push
mov
test
in
repz
leave
cmpsb
dec
shll
push
dec
divl
xchg
bound
sbb
sub
xor
fs
pop
into
daa
inc
ret
out
dec
xor
jl
stos
mov
add
ret
imul
loope
fs
dec
push
xor
mov
and
jnp
push
jge
fsubrl
test
jmp
or
cs
imul
jecxz
mulb
mov
lds
loope
lahf
sahf
rdpmc
scas
rolb
jnp
cmc
das
push
mov
pop
pop
mov
movsl
sbb
call
pop
les
and
mov
inc
mov
inc
stos
cli
push
dec
in
mov
dec
xchg
jl
push
fsubr
xchg
dec
xor
push
and
xchg
inc
pop
xor
inc
adc
cld
jnp
dec
xlat
test
js
dec
pop
pop
mov
sub
call
inc
pop
fcom
lcall
inc
mov
lcall
inc
add
dec
jbe
lods
js
shrl
jl
in
and
jo
stc
ja
test
idivl
mov
fimuls
push
or
vmread
push
out
stos
jnp
inc
cmp
xor
push
mov
aam
int
mov
daa
sahf
in
addb
popa
pop
cmp
push
sub
jnp
mov
int
ret
scas
xor
lret
pop
mov
lods
inc
scas
adc
sub
mov
fwait
popa
js
js
pop
in
repz
xor
out
mov
nop
add
dec
xchg
in
jl
jle
bound
cmp
push
and
clc
sub
sahf
in
out
dec
aam
xchg
mov
or
jl
inc
negl
ds
bound
push
adc
ds
fs
daa
pop
pop
jg
fadds
lret
mov
movsb
leave
outsl
loopne
inc
hlt
or
or
inc
ret
inc
aas
lea
push
sbb
mov
xor
orb
jns
jo
pop
pop
jecxz
jl
in
mul
pop
xor
inc
stos
adc
stc
cld
lds
fbld
add
xchg
dec
sub
cmpsb
jo
jo
loope
mov
xchg
bound
nop
out
nop
mov
push
int
cltd
enter
lods
movsb
sub
sub
jl
out
loopne
fwait
adc
rcrl
sbb
dec
repz
clc
cld
imull
cs
push
clc
or
jl
out
stos
leave
pop
in
in
jmp
outsl
mov
lret
mov
jmp
das
pop
pusha
push
cmp
into
pop
stos
sub
popa
repz
pop
outsl
add
mov
dec
popf
movsl
in
adc
std
fwait
out
mov
iret
sub
js
jb
js
leave
fisttpl
xchg
popf
test
cwtl
ret
push
je
pusha
adc
scas
or
mov
in
adc
imul
outsl
jno
out
stos
add
loopne
or
pop
scas
repnz
scas
push
or
mov
push
repz
and
pop
cs
fistl
out
or
mov
stc
dec
jnp
dec
cli
add
inc
xchg
sti
stc
add
fs
cmc
call
shrl
sbb
adc
psrad
test
test
sub
stc
jle
mov
jp
rol
sbb
push
pop
cld
lret
jbe
pop
pop
lcall
into
imul
cmc
jne
repnz
repnz
outsb
push
adc
push
xlat
jae
cmp
push
mov
push
pop
sbb
out
mov
cltd
xor
cmpsb
pop
fs
dec
outsb
xchg
test
movsl
pusha
xchg
cmp
pop
in
imul
inc
jle
sbb
push
scas
jg
js
jae
int
jl
xor
add
aad
sub
mov
or
cltd
repz
jge
mov
sub
push
in
imul
scas
enter
fildll
mov
mov
test
sbb
out
xor
data16
and
mov
imul
dec
out
jg
inc
test
in
les
fiadds
repz
sub
inc
int
cmp
push
iret
xor
cwtl
fnsave
adc
pop
lret
jmp
jp
push
inc
xchg
shlb
pop
int
and
inc
xchg
test
outsb
test
sbb
pop
std
push
and
or
js
lcall
fisttpl
add
jl
inc
pusha
aad
dec
test
jge
xchg
fsubl
sub
adc
icebp
popf
aam
pop
mov
fs
lods
or
inc
pop
and
xchg
cmp
xor
loop
sub
push
lods
sbb
lahf
jl
outsl
pop
negl
sbb
sub
lods
xchg
fldcw
pop
out
movsb
mov
data16
mov
adc
mov
outsb
cmp
or
scas
xchg
pusha
imul
jne
mov
xchg
dec
into
inc
movaps
and
bound
sbb
add
sbb
jmp
fldt
jae
aam
dec
data16
loopne
jg
ds
insl
jbe
lds
push
xor
repnz
adc
out
mov
pop
cwtl
xor
mov
pop
in
lock
pop
jae
hlt
sub
fwait
pop
sub
pop
stos
loope
pop
jmp
sub
push
sbb
shrl
je
outsl
sbb
cmp
pusha
sbb
pop
push
fsubl
dec
mov
in
push
loopne
ds
pop
mov
nop
arpl
inc
iret
imul
cmp
cwtl
mov
negl
cmc
pop
inc
les
aaa
and
pop
stos
dec
fs
cmp
gs
and
je
int3
dec
push
imul
pop
xchg
or
adc
cs
sub
sti
push
sbb
mull
dec
push
adc
or
jp
inc
nop
mov
repnz
mov
dec
test
jmp
inc
adc
dec
sbb
out
sbb
xor
push
popf
arpl
jne
sub
and
gs
pusha
pop
stc
fisubrs
mov
lcall
jl
sbb
adc
mov
and
call
inc
cmpsl
fs
xor
outsb
mov
inc
into
enter
js
mov
cs
cmp
inc
cmp
push
out
inc
push
jp
rorb
les
push
insl
dec
enter
mov
jo
add
adc
push
shr
pop
pop
pop
or
mov
stc
test
fld
or
dec
jp
mov
dec
push
sbb
popf
mov
int3
jg
push
sub
ds
sub
cwtl
or
add
repnz
mov
enter
xor
test
daa
cmp
into
and
xchg
push
pushf
ljmp
test
fwait
add
push
adc
sti
or
outsl
sbb
push
fsubs
addr16
mov
out
clc
xor
mov
ljmp
pop
icebp
scas
mov
ds
add
mov
mov
push
jb
repz
cld
in
jo
inc
stos
and
jb
xchg
push
int3
sbb
jp
dec
imul
cmp
sti
fldenv
mov
dec
stc
push
push
out
add
loop
inc
imull
sub
adc
jo
xor
mov
les
fmuls
adc
cmc
jnp,pn
outsl
jge
jp
call
sub
lcall
cwtl
pop
ror
es
inc
cmp
gs
dec
hlt
outsb
mov
bound
es
lods
xchg
addr16
mov
fs
inc
push
mull
pop
in
test
jae
or
shl
mov
inc
mov
mov
jp
arpl
loop
int3
repz
insl
scas
pop
mov
call
mov
xchg
inc
jbe
xchg
cmp
sti
jp
inc
and
loopne
inc
out
mov
leave
int3
ret
imul
cmpsl
cmp
push
loope
or
push
adc
mov
xor
repnz
sbb
sti
sbb
mov
cmpsl
fsts
and
daa
cmp
repnz
cwtl
or
roll
xchg
lds
inc
push
lcall
dec
sahf
jp
stos
orl
pop
test
inc
jb
push
lock
mov
pop
aam
stc
inc
push
xor
add
mov
pop
xchg
dec
outsb
scas
mov
adc
and
fwait
js
inc
jl
pop
fmuls
movsl
data16
push
idivl
dec
push
lds
jo
add
out
pop
nop
dec
sub
or
test
lea
lods
iret
gs
cmp
pushf
loopnew
mov
inc
repnz
or
sti
cs
inc
mov
mov
xchg
jno
aam
rol
dec
jl
aaa
dec
out
sbb
enter
inc
or
mov
dec
in
into
subl
movsb
stc
sbb
push
cwtl
or
pushf
jbe
inc
xor
sbb
cwtl
loop
and
mov
adc
mull
movsb
cmp
fs
add
mov
jo
mov
sbb
inc
inc
push
mov
or
ret
or
sbb
stos
pop
inc
cs
bound
aaa
xor
test
sub
xorl
jl
loopne
in
movsb
out
jmp
cmp
dec
bound
das
mov
cmp
mov
cmp
jae
stos
add
mov
je
mov
add
ja
mov
inc
out
xor
dec
xor
inc
sahf
dec
jo
inc
outsl
xor
mov
inc
mov
rol
cmc
int
call
lret
xor
in
lods
sbb
enter
popf
insb
gs
cli
mov
jb
mov
mov
dec
and
jns
sub
and
xor
add
mov
mov
mov
dec
scas
jbe
out
addr16
add
lret
jecxz
inc
jmp
dec
dec
mov
pusha
pop
inc
cmc
pop
clc
and
into
ss
xor
cmp
fmul
sbb
jbe
pop
lds
scas
loopne
xchg
xor
stc
out
ss
lods
jne
jnp
ss
fbld
sub
cmp
sub
les
sbb
in
xchg
int3
push
aad
lea
in
and
aad
pop
leave
dec
mov
dec
jl
pusha
mov
push
xor
mov
stos
cmp
into
add
stos
sub
mov
outsb
fwait
xchg
xchg
inc
imul
sub
imul
inc
popa
push
shr
cmp
aaa
arpl
imul
push
in
adc
mov
sub
jo
sahf
cwtl
jg
pop
notl
leave
aam
sti
cmc
dec
adc
cmpsb
mov
leave
fwait
xor
jp
fsts
push
mov
rcrb
mov
sarl
sbb
sbb
outsb
push
pop
int3
and
push
js
inc
or
push
or
stc
rclb
dec
shl
cmp
out
xchg
sub
in
out
imul
stos
dec
outsl
sbb
mov
and
in
inc
sbb
pushf
int3
jmp
stc
in
push
add
in
out
and
pushf
fmuls
int3
xor
rolb
xor
xchg
call
sbb
jo
ja
pop
dec
bound
or
fs
stc
dec
dec
and
vmwrite
pop
stos
xor
mov
jl
rcll
and
sub
lahf
jle
loopne
pop
jmp
call
shl
lock
jle
incb
out
lcall
les
add
inc
sbb
inc
scas
sub
inc
xchg
aaa
repnz
mov
pop
pop
loopne
cwtl
mov
dec
testb
repnz
mov
xor
je
push
sbb
daa
add
add
inc
dec
sub
push
sub
inc
push
imul
pusha
lods
jb
add
sbb
int3
xorl
adc
mov
repz
push
fidivs
adc
fmul
jns
shll
sub
cs
push
jg
sbbl
dec
sbb
fwait
into
or
dec
mov
mov
iret
xchg
xchg
dec
inc
pop
jge
add
popf
jle
scas
scas
dec
adc
scas
cld
dec
mov
sbb
pop
mov
cmc
scas
data16
out
jno
ret
mov
mov
ret
push
adc
les
test
lret
out
inc
int
push
sti
popa
dec
pop
movsb
call
inc
call
enter
mov
push
loop
push
and
sbbb
push
add
out
punpckhdq
test
lcall
and
push
fldenv
jl
nop
cs
pop
sbb
out
mov
pushf
and
sub
mov
inc
dec
mov
rcl
das
pusha
sbb
sti
jmp
xor
adc
xchg
or
addr16
xchg
fwait
xchg
jb
notl
mov
jbe
pusha
xchg
cli
mov
loope,pt
adc
pusha
fwait
fs
int
jo
sbb
fisttps
pop
push
and
ret
push
push
das
push
ror
mov
mov
out
adc
mov
shr
ret
test
dec
sti
add
mov
mov
mov
inc
roll
pop
sbb
inc
push
lahf
mov
dec
push
movl
push
xlat
adc
push
or
push
sti
test
adc
loopne
push
mov
xlat
push
imul
xchg
push
ljmp
jbe
imul
hlt
inc
aas
cmp
mov
lock
sahf
fstpl
aad
jl
dec
cmpsb
dec
scas
cmp
clc
cld
in
aad
ja
sbb
adc
fwait
pop
pop
jl
sbb
pop
int
leave
ret
adc
mov
sbb
into
data16
jl
inc
popf
in
movsb
insl
mov
xchg
insl
jae
cld
inc
and
push
bound
les
shl
dec
dec
adc
push
test
sbb
rcl
push
mov
mov
or
cmp
lcall
xor
jnp
fs
int3
jle
fldcw
dec
stc
jbe
sbb
hlt
push
iret
arpl
jne
call
inc
ret
adc
inc
push
push
lods
fwait
jg
data16
popa
xchg
sub
push
fsubl
mov
xor
stc
in
cmp
push
insl
or
lcall
data16
xor
push
int
sbb
scas
xchg
sbb
dec
pop
xor
inc
fwait
pop
data16
loope
add
cli
int3
push
cli
or
data16
xchg
int
or
mov
push
repz
ss
push
push
in
int
jle
out
test
mov
jnp
test
not
data16
inc
dec
or
loope
jp
outsb
or
sbb
mov
dec
dec
xchg
pop
js
aad
cmp
jne
negl
xchg
push
leave
jno
mov
push
cmpsb
dec
icebp
enter
push
mov
sbb
sarl
in
or
jne
scas
cmc
cs
iret
fldt
daa
and
sbb
dec
call
push
xchg
push
jmp
inc
imul
mov
loopne
mov
stc
pop
jl
ret
lret
add
and
jns
fsubs
ss
scas
repz
out
pop
outsl
sub
out
sbbl
insl
add
stos
add
push
nop
inc
andb
daa
leave
outsl
ret
sbb
lods
fwait
xchg
dec
xorb
xor
cmpsl
stc
enter
imul
adc
pop
dec
and
outsb
leave
in
aas
mov
xor
and
mov
cmp
pushf
cmp
fstpl
jg
xchg
mov
cld
sbb
jne
and
inc
cmc
cmpsl
imul
mov
or
sub
int
imul
movsl
push
or
sti
add
out
or
pop
dec
pusha
jmp
ret
rcpps
sub
lret
pop
mov
pop
xlat
lahf
push
mov
fcomp
aad
jmp
push
and
imul
iret
jge
ljmp
std
nop
inc
xchg
cmpsb
sbb
cmp
ret
jno
xlat
and
popf
and
test
sti
mov
inc
test
lds
insl
mov
jmp
int3
xor
and
fwait
pop
or
jmp
mov
arpl
pop
jns
jle
mul
lret
and
push
xchg
gs
lret
mov
xor
cmp
jmp
sbb
or
push
dec
and
fs
cli
mov
pop
outsl
lods
push
sahf
aas
daa
int
mov
sbb
cmpsl
adc
addr16
in
adc
ror
mov
scas
jbe
ret
nop
mov
loope
enter
sub
push
shll
push
stc
cmc
decl
jp
pause
shll
out
aad
cld
rorl
xchg
inc
sbb
imul
out
push
xchg
lret
test
jae
jno
mov
xchg
sub
jae
sbb
push
xor
ljmp
out
cmp
test
push
jno
jl
fsub
mov
ds
fsubrs
pop
out
addr16
out
mov
mov
das
arpl
int3
xor
icebp
dec
inc
push
test
jg
cmp
bound
aad
push
sbb
andl
add
mov
mov
jb
push
ret
in
stos
mov
scas
push
dec
and
xchg
and
cmp
xchg
leave
sbb
push
mov
roll
aaa
int
and
jbe
jge
mov
pop
sub
push
inc
movsl
in
test
push
lds
push
popf
inc
loope
mov
rep
mov
inc
std
pop
mov
pop
pop
lret
inc
adc
dec
popf
push
lods
push
xchg
or
adc
stos
mov
jbe
cmc
cs
dec
subl
je
out
pop
pop
lret
pop
sbb
cmp
lret
cmpsb
dec
xchg
mov
jo
pop
enter
push
popl
stos
dec
outsb
dec
xchg
and
dec
outsb
cmc
and
pop
loopne
sti
sbb
push
lret
shll
add
pop
into
rolb
data16
movsl
pop
sbb
or
pop
push
dec
pushl
dec
shl
lahf
pop
sub
push
adc
je
dec
inc
mov
jnp
je
dec
lock
push
inc
popaw
lret
movsb
cmp
adc
out
into
fs
iret
faddp
mov
push
aas
jae
xchg
mov
push
pushf
js
xchg
data16
popa
dec
sub
stc
out
dec
xchg
popf
mov
call
jnp
loopne
jno
inc
lock
jp
push
adc
inc
mov
sar
cwtl
das
cs
out
push
sbb
xchg
outsl
das
sti
outsb
test
inc
xchg
mov
inc
pop
sarb
pop
dec
iret
shlb
das
ds
dec
loop
sbb
jno
aaa
mov
scas
or
add
push
inc
push
sub
xor
out
xchg
jp
mov
je
fwait
imul
dec
outsb
fdiv
ret
ja
inc
sbbl
addl
bound
subb
orb
xchg
mov
das
sbb
add
lods
mov
pop
push
movsl
loope
cs
out
xor
xorb
mov
xchg
aad
es
mov
adc
js
cmc
adc
movsb
aam
les
dec
in
push
inc
cmpsl
jmp
and
scas
scas
sbb
sbb
pusha
je
push
pop
loope
dec
movsb
scas
cmpsl
dec
scas
mov
loope
les
scas
xchg
xchg
int3
jb
in
sub
fisttpll
sbb
jb
push
xor
push
push
jns
push
pushf
out
xchg
mov
daa
cmp
ljmp
iret
lret
xchg
enter
lahf
push
adc
lock
iret
or
inc
imul
lret
add
push
fwait
push
sub
inc
mov
fcmovne
push
ret
xchg
xor
jmp
aad
cmp
outsl
inc
aam
outsb
cmp
dec
adc
add
sub
pop
gs
inc
test
imul
xor
stc
push
jl
mov
pop
cwtl
add
pop
mov
xchg
xchg
pop
push
shrb
stc
or
and
fs
outsb
pop
sbb
out
daa
add
mov
jne
dec
ret
push
jb
dec
stos
jns
jbe
int
jbe
paddsw
rcrb
out
dec
scas
jmp
push
sbb
dec
push
in
call
out
dec
dec
push
pmaxub
dec
shrl
cs
imul
cmpsb
xchg
pop
outsb
sbb
in
pop
in
enter
cmpsb
inc
lods
aas
mov
push
xchg
cmp
fs
xchg
dec
inc
mov
dec
dec
stos
je
fdivrp
mov
fisubrs
enter
cli
push
jne
xchg
fcoms
push
sbb
shrl
adc
inc
frstor
jo
out
cmpsb
lock
jnp
push
cmpl
sub
adc
test
outsb
subl
inc
popf
cmpsb
push
data16
pcmpgtd
popa
jle
jne
stos
or
shll
sbb
sbb
and
xchg
pushf
imul
imul
popa
pusha
dec
cmp
test
movsb
jne
shlb
adc
pusha
inc
outsb
dec
xchg
inc
sbb
std
inc
call
movsb
or
sub
xlat
jl
std
insl
ror
sub
repnz
push
cmc
pop
adc
lods
lock
and
jb
roll
loopne
push
pushl
mov
mov
dec
mov
xor
stc
popl
decb
push
add
imul
fdivrs
ljmp
or
lds
inc
sub
push
stos
xor
or
jbe
sbb
sub
int
mov
addr16
lds
add
and
pop
testl
cwtl
in
call
sti
sbb
outsb
xchg
cmp
inc
jl
and
add
lds
in
int
cmc
enter
jmp
movsb
jle
js
cwtl
adc
outsb
aaa
sub
push
sti
out
or
sub
decl
pusha
in
inc
out
cmp
popf
mov
dec
out
test
pop
push
cmp
dec
mov
hlt
sub
movsb
into
out
pop
jne
outsl
jg
and
jecxz
jg
and
movb
les
testb
mov
gs
mov
mov
cmp
adc
sti
and
shl
inc
js
fildll
jae
leave
ds
insl
dec
mov
inc
iret
jle
push
es
pop
dec
fbld
imul
push
jo
jp
imul
mov
jns
sbb
ja
dec
hlt
arpl
inc
pop
cmp
or
enter
pop
lds
ret
into
sub
mov
int
sbb
mov
push
repz
xlat
jbe
and
inc
ss
outsl
pop
jl
in
repnz
mov
cld
mov
in
dec
dec
test
out
mov
jle
and
rol
mov
mov
mov
xor
lods
pop
and
cmc
pusha
inc
add
dec
ds
pop
jne
xchg
cmp
mov
das
or
mov
fs
jbe
push
sbb
xor
popf
dec
outsl
push
out
or
int3
xchg
mov
fnstenv
push
sbb
test
mov
jg
cmpsb
mov
enter
aas
test
int
fdivrl
jp
or
push
or
arpl
add
lock
sub
dec
cmp
lds
hlt
pop
test
jno
das
loopne
cmpsl
or
xlat
stos
cmp
cmp
cmp
cmc
dec
inc
xor
or
ds
in
xchg
jno,pn
imul
jp
xchg
enter
push
mov
ror
movlps
pop
push
mov
mov
pop
daa
dec
cltd
ja
cmpsl
ss
push
lods
mov
cmpsb
cs
mov
imul
popf
ret
xor
mov
cmc
daa
mov
out
jg
mov
dec
and
test
or
incl
adc
sub
pop
mov
movl
cltd
stos
wbinvd
jne
outsb
out
jle
out
dec
cmp
lds
ss
pop
adc
ret
movsl
jb
jmp
jl
popf
push
sub
push
mov
lock
mov
nop
sub
xor
push
dec
dec
std
pusha
jl
and
fsubs
sbb
mov
sbb
ror
in
out
jbe
lcall
aad
xor
inc
mov
out
call
sarl
add
or
addr16
insl
arpl
xchg
loop
or
or
les
xlat
outsb
lock
int
xchg
cmpsl
mov
or
push
inc
rcll
adc
pop
stc
scas
jae
adc
addr16
sti
sbb
mulb
mov
fcmovb
out
out
adc
insl
adc
or
testl
ret
pop
xchg
push
push
lock
imul
add
and
push
jl
rclb
sub
inc
cmp
add
sbb
addr16
insb
rcrl
dec
rcrl
adc
push
call
pop
dec
add
mov
stc
jbe
add
jmp
imul
dec
sub
push
in
fs
out
push
fsubrl
xchg
jns
sbb
stos
mov
sti
xor
aaa
test
dec
dec
stc
loope
dec
xchg
loopne
mov
cmp
mov
ja
pop
je
jo
daa
in
push
int
lock
or
and
inc
cmp
cmp
in
lahf
int3
repz
jo
addr16
ljmp
lods
mov
cmp
les
pop
in
pop
mov
cli
stc
aam
outsl
sbb
mov
ret
sub
stos
pop
fcoms
xlat
jb
push
test
jle
std
sub
int3
fs
push
jl
jbe
scas
nop
dec
jmp
inc
cmp
pop
idiv
push
mov
pop
add
inc
cmp
mov
xor
xor
inc
push
mov
rorl
add
dec
stos
mov
bound
inc
lds
inc
mov
loop
and
divl
xchg
adc
jbe
jo
jb
sbb
in
outsl
stos
adcl
pop
jae
addr16
rorl
loop
enter
shrl
aam
push
je
call
out
mov
jecxz
jbe
out
and
dec
push
cmpsb
pop
cmp
fnstsw
cmp
add
xor
aaa
dec
xor
test
test
in
add
jge
and
jbe
lea
mov
or
in
xchg
xchg
inc
xchg
out
xchg
add
xor
xchg
dec
adc
inc
iret
push
js
in
mov
xlat
shll
ds
das
mov
in
in
push
aam
inc
or
xor
adc
ret
jnp
ret
sub
dec
push
gs
sub
rol
shrl
das
jno
dec
mov
clc
ror
mov
dec
or
sub
sbb
bound
mov
lds
std
insb
mov
xlat
iret
hlt
pop
cs
pop
in
aaa
jl
ss
jl
cld
stos
inc
dec
pop
push
jbe
test
in
push
and
fs
push
cmpsl
int
adc
sub
cmp
pop
fs
jo
cs
data16
xor
movl
push
mov
mov
orb
cmp
mov
int
popa
inc
pop
push
xchg
push
dec
gs
int3
shrb
mov
repnz
test
and
add
or
xor
or
lock
pusha
fucomp
imul
jae
pop
aaa
mov
sub
jl
cmc
jmp
std
push
inc
mov
testl
xchg
mov
xchg
insb
mov
mov
and
inc
jmp
pop
or
inc
js
je
jle
adc
popa
fnsave
adc
inc
cmc
dec
jne
insb
jl
scas
mov
add
mov
divps
push
jge
sbb
rorl
js
out
sbb
inc
fs
dec
aad
sbb
test
sub
bound
sbb
divl
jbe
jno
lret
and
fisubrs
bound
aad
das
inc
enter
jne
xor
push
leave
mov
pop
dec
jg
ss
or
push
int
add
xchg
mov
cwtl
add
dec
push
cltd
xchg
xor
xchg
and
jbe
mov
push
ret
sar
push
out
lods
test
jb
cmpsb
inc
adc
push
adc
pop
mov
mov
pop
jp
cmpsb
push
mov
jmp
ret
jg
add
push
push
cmpl
scas
pushf
jmp
repz
push
jno
loopne
scas
pop
jl
push
cli
push
jns
sahf
scas
sbb
out
aad
adc
xor
stos
out
cmp
out
mov
scas
aaa
outsb
ds
aad
jnp
imul
repz
sbb
jo
daa
dec
pop
jmp
mov
out
outsb
nop
scas
and
fldcw
sbb
pushf
sub
lcall
adc
popa
in
into
pusha
sub
push
sub
leave
repnz
sub
jp
scas
and
inc
xlat
push
dec
sqrtps
push
faddl
pop
imul
push
cmp
add
add
scas
lcall
scas
lods
je
scas
mov
cwtl
rolb
aas
jle
inc
adc
insl
inc
push
jae
cmpsl
pop
mov
sub
bound
outsb
push
cmp
ljmp
sub
sbb
jns
ljmp
loopne
je
cld
and
dec
cmovnp
clc
dec
dec
push
leave
pop
arpl
or
test
adc
adc
push
sbb
mulb
dec
jo
jl
dec
fstpl
dec
sub
mov
xchg
fidivl
stc
cmp
add
nop
jnp
out
data16
aas
mov
pop
jp
lret
pop
stc
leave
dec
mov
lcall
cmp
or
or
cmc
push
out
decb
jne
cli
movsb
lcall
scas
repz
sbb
sub
push
repnz
leavew
dec
testb
xchg
lods
scas
cwtl
jne
dec
fildl
test
int
sub
xor
ja
or
ljmp
xchg
popa
enter
divl
loope
data16
mov
loopne
push
int3
or
cld
mov
adc
in
je
pusha
psllw
push
pop
add
pushf
dec
jnp
ja
cmc
xor
or
xchg
ljmp
out
cmpsl
bound
jns
inc
or
scas
insl
test
jp
lcall
mov
jae
jl
lods
cmpsb
add
fsubrl
xchg
xor
out
pop
inc
inc
out
xchg
cld
mov
je
cli
lret
out
sbb
mov
outsb
test
out
out
sub
push
test
mov
pop
mov
inc
ret
fs
testl
lods
out
adc
xchg
push
repz
fs
pop
pcmpeqd
or
inc
pop
inc
les
sub
jle
sbb
push
pop
xchg
push
pop
andb
inc
movsl
xor
mov
inc
ja
jmp
dec
jp
add
sub
push
add
jb
sarb
inc
cs
cmc
popa
pop
and
pop
dec
repz
pop
fimuls
xor
cmp
xor
stc
movsl
jae
fsts
cmpsb
iret
pusha
nop
addr16
inc
js
fs
ja
inc
cmp
in
mov
pop
out
sbb
xor
mov
hlt
movb
mov
and
or
or
scas
popf
pop
dec
inc
xlat
ret
cli
pop
aad
sub
iret
fwait
ds
std
add
out
fs
insl
sub
out
pop
sbb
inc
mov
xor
sbb
into
les
push
inc
fs
lret
xor
fiaddl
cmpsl
stos
adc
negl
popa
inc
fistps
inc
nop
push
inc
adc
sbb
in
cmc
ja
sub
mov
jne
adc
ss
insb
jno
dec
popf
lods
nop
fcoml
jae
push
lods
movsb
inc
dec
ljmp
xor
leave
clc
shll
mov
imul
outsb
jno
out
push
addr16
sub
inc
iret
out
inc
mov
push
bound
mov
jp,pn
sub
sub
pop
sbb
push
movsl
add
sbb
lods
and
jp
cmp
jle
or
and
inc
or
cmp
out
sbb
sbb
xchg
hlt
inc
push
inc
dec
pusha
push
sub
mov
sti
rcrl
pusha
enter
popa
push
fcoms
addr16
and
call
mov
adc
mov
jns
enter
dec
cmp
cmp
fst
in
fldt
outsb
iret
out
imul
imul
bound
pop
jge
mov
adc
fcoms
dec
outsb
ret
scas
mov
xlat
lock
cmp
sub
sti
adc
inc
adc
inc
repz
sub
dec
stos
jp
loop
mov
je
test
les
fldt
jp
jg
push
sub
jne
pop
mov
insl
sbb
jb
sub
js
int3
inc
sbb
sub
cmpsl
aas
dec
lret
add
and
inc
test
xor
ss
cld
sub
ds
sahf
lods
sti
push
and
lods
fildll
and
sbb
jmp
clc
pop
mov
jae
sub
push
aam
cld
push
bound
push
pop
lret
bound
and
or
lds
lret
pusha
adc
enter
sub
es
or
mov
inc
scas
cmc
dec
or
loope
mov
in
cmpsl
fimull
aad
sub
out
dec
pusha
iret
bound
jne
jne
and
jl
pop
fnsave
push
data16
roll
repz
xor
add
jl
inc
or
ja
addr16
xchg
outsb
adc
mov
test
es
daa
test
aaa
popa
out
outsb
gs
incl
data16
loopne
xchg
mov
fmulp
in
jb
sub
sbb
mov
dec
repz
imul
mov
clc
inc
je
dec
shrb
cmp
cmp
and
push
adc
movb
shlb
pushw
dec
jle
pop
test
dec
pushf
dec
jge
aad
jbe
mov
out
mov
mov
dec
inc
xchg
pop
and
mov
cli
mov
rorl
imul
int3
xchg
lret
iret
aas
jb
js
push
sbb
push
xchg
test
out
lret
jmp
jp
xor
sbb
outsb
imul
lret
in
push
mov
ret
loope
test
cmpsl
sub
ficomps
xor
mov
ja
js
mov
in
push
out
bound
lds
inc
jl
add
and
out
iret
xchg
and
dec
mov
jl
repz
sahf
daa
iret
int3
ss
push
lcall
xchg
push
lahf
inc
sbb
cwtl
test
lock
rol
leave
pusha
xor
xor
push
daa
push
or
leave
aaa
js
or
push
xor
dec
xor
aad
dec
into
fs
push
shlb
jl
and
rcrb
jbe
in
stos
or
nop
jmp
xor
and
lea
adc
inc
js
mov
lret
call
sub
mov
lcall
sub
pop
mov
cmp
into
in
outsb
pusha
xchg
ret
dec
sub
dec
inc
sets
arpl
jle
pop
stos
push
jle
adc
cmp
jne
cli
cwtl
dec
sub
cwtl
cli
mov
testb
lds
aas
mov
dec
stc
sub
jmp
outsl
sub
dec
dec
stc
lock
mov
loop
jl
stc
cmc
rorl
push
outsl
call
mov
fwait
stc
sub
xchg
outsb
ljmp
pusha
jo
inc
jne
or
pop
enter
out
cmc
mov
jle
test
negl
inc
pop
in
out
xchg
push
in
in
lret
ss
out
mov
dec
int
out
scas
sbbl
dec
in
lds
int
lret
sub
into
jge
int
sar
ret
ss
call
dec
lret
into
inc
nop
stc
push
negl
jo
iret
fwait
jmp
pop
and
ds
pop
mov
pop
imull
inc
fidivrl
pop
jle
pushf
pop
xchg
scas
mov
mov
jecxz
cs
lret
inc
leave
les
xchg
arpl
pop
and
sub
push
into
pusha
out
cmovns
pop
push
scas
sbb
dec
cmpsl
cli
shrl
fwait
add
rclb
fdivrl
lods
nop
rcrb
jae
insl
movsl
inc
push
add
loop
jmp
pop
ja
add
imul
sub
addr16
xor
jo
into
cmp
push
adc
jl
test
out
lahf
push
jb
sbb
stos
xor
outsl
es
out
add
add
sar
pop
jmp
adc
nop
packuswb
lahf
lods
loope
stos
mov
loop
jp
int3
shll
dec
xor
movsb
bound
sub
add
sbb
in
pop
dec
test
les
add
shrd
cmpsl
stc
mov
rorb
dec
xabort
cwtl
mov
popf
dec
out
shrb
arpl
gs
ja
dec
std
loopne
imul
and
mov
subb
subl
outsb
jbe
addl
inc
jne
subl
dec
mov
adc
inc
scas
lahf
cmc
pushf
push
outsl
cli
push
push
xlat
pushf
pushf
addr16
adc
inc
and
and
push
push
cmc
mov
les
es
shl
mov
xor
pop
push
into
ds
mov
sar
pop
out
test
imul
jg
sub
add
xchg
push
nop
in
bound
mov
repnz
aas
out
insb
pop
adc
out
sub
jo
rcrb
push
loopne
push
xchg
dec
dec
adc
cld
mov
gs
insl
pop
addr16
int3
scas
gs
push
push
call
dec
xchg
mov
dec
xchg
add
push
adc
adc
jnp
adc
popa
lods
mov
call
pusha
into
sbb
gs
jmp
out
les
movsb
sub
inc
sbb
fcomps
outsb
iret
aad
scas
retw
es
adc
ss
mov
adc
fs
nop
pop
jmp
out
in
aas
dec
data16
fwait
sub
aad
lods
daa
push
inc
push
push
push
pop
cs
pusha
stc
pop
in
and
xor
sub
sbb
mov
pop
fcoms
outsl
mov
aaa
and
stos
sub
mov
jp
cs
out
aam
sub
lods
stos
xor
mov
inc
jmp
test
stos
push
inc
inc
sbb
adcl
mov
dec
sub
mov
sub
test
sub
and
mov
icebp
jecxz
push
sarb
addr16
inc
rolb
es
addl
dec
pop
dec
inc
mov
xchg
lods
mov
repz
in
jne
mov
test
dec
xor
imul
outsb
jl
ret
jmp
push
inc
aad
fs
pop
hlt
pusha
or
cld
inc
int
jl
fdivl
js
sti
pop
gs
test
jp
push
jb
cmp
jae
icebp
sbb
dec
dec
inc
pop
dec
sbb
mov
cmp
dec
lcall
les
push
repnz
ss
push
data16
cs
lret
pop
iret
ss
outsb
call
push
lods
sarb
data16
pop
daa
jmp
jp
aad
jle
loope
daa
pop
cwtl
or
sbb
inc
mov
push
adc
loope
mov
mov
xor
mov
xchg
aad
xchg
xchg
test
lds
int3
int3
cld
sbb
cmpsl
negl
lds
add
outsl
loope
push
push
out
fs
xchg
fwait
nop
fisubs
movsb
fs
mov
je
jbe
add
cwtl
ja
jmp
adc
nop
sti
mov
cwtl
push
xchg
insb
stos
push
les
mov
sub
pushw
ja
and
loope
push
jge
inc
arpl
fdivr
push
cmp
movsl
sti
pushf
rorb
adc
push
jno
test
push
cmpsb
sbb
test
push
loop
in
je
outsl
push
out
adc
dec
outsb
lods
push
in
fs
xchg
inc
andl
xchg
mov
jne
add
jnp
push
aas
or
jno
dec
je
jp
sbb
jb
call
rcrb
outsl
ret
fcoml
pop
in
daa
or
jle
out
sbb
jae
leave
iret
dec
stos
inc
shll
pop
test
push
jne
jo
imul
pop
push
jl
int
fs
jnp
inc
clc
xor
and
sub
adc
cmpsb
insb
inc
in
les
jl
lret
xchg
adc
mov
jnp
mov
adc
loope
imull
addr16
stos
mov
push
lds
imul
cmc
test
adc
xor
dec
add
insb
mov
sbb
outsb
gs
out
dec
adc
xchg
push
add
bound
mov
jno
jl
dec
mov
cmp
lods
data16
cmpb
movsb
jl
or
cmpsb
in
xchg
in
pop
cmp
addb
mov
jge
mov
mov
mov
popf
jno
pop
js
jl
jl
dec
js
outsb
push
pop
inc
and
ja
xlat
dec
pop
cmp
test
scas
loope
repnz
and
rcr
in
jnp
call
lret
adc
inc
test
pop
outsb
jle
decb
ret
pushf
or
and
sub
inc
mov
jmp
jp
xorl
movsb
out
in
xchg
into
or
roll
sbb
jne
lods
scas
push
jmp
sbb
jne
mov
sub
xchg
mov
adc
scas
dec
jge
adc
sub
dec
xchg
push
push
dec
dec
adc
fs
gs
sahf
call
ret
or
sbb
shrb
dec
test
cwtl
sbb
or
out
stos
lret
push
js
data16
imul
pop
lret
cmpsl
or
dec
and
sub
inc
jmp
icebp
popa
dec
cwtl
push
cmpsl
mov
stos
inc
je
jbe
gs
ljmp
inc
daa
jl
dec
hlt
or
dec
inc
jnp
fwait
popa
push
sti
je
shll
out
bound
repz
shrl
adc
mov
outsb
fs
dec
jne
cli
pusha
repz
push
adcb
jl
add
js
xchg
into
and
mov
rep
ljmp
shlb
outsl
mov
rorl
stos
pop
xchg
xlat
inc
and
callw
jns
outsb
fisubrs
and
clc
out
test
mov
dec
xor
adc
popa
cmp
outsb
xor
and
js
sbb
and
mov
in
push
inc
icebp
inc
jl
popa
push
mov
sbb
dec
jle
hlt
mov
fdivl
clc
arpl
stc
adc
les
out
mov
aas
jbe
ss
rorl
cs
in
test
bound
out
addr16
sti
test
lahf
push
rolb
jmp
pop
pop
leave
lds
shrb
imul
xor
cmpsl
lcall
inc
jne
data16
dec
je
addr16
mov
fidivs
call
fwait
mov
inc
sbb
add
cmp
dec
movsl
xor
scas
in
sbb
fbld
xchg
xlat
insl
xchg
inc
inc
or
xor
sbb
mov
push
leave
imul
inc
or
add
inc
xchg
jno
ret
and
sbb
dec
and
iret
mov
ror
lahf
push
inc
outsl
xchg
out
or
lods
sahf
subb
mov
stc
subl
xor
popf
sub
xlat
jns
dec
push
dec
jbe
call
shr
aad
push
push
mov
push
jbe
fcomps
dec
sbb
sarl
orb
jo
out
mov
or
lcall
or
sbb
popf
push
adc
cwtl
mov
or
pusha
js
xorl
stos
cmp
jnp
mov
sbb
xor
push
jbe
push
sub
inc
xlat
jle
push
cmpsl
lods
sarl
jge
lea
std
jo
decb
or
inc
inc
ljmp
xor
sub
mov
adc
fdiv
mov
outsb
dec
pop
jmp
pop
xor
adc
insl
dec
sbb
enter
mov
xor
pusha
leave
in
push
data16
clc
dec
cli
push
int3
stc
xchg
movsb
cmovns
and
stc
stos
mov
inc
call
cmp
outsb
xchg
and
jns
popa
lods
push
xchg
pop
push
fldt
loop
cltd
and
daa
out
fwait
pop
stos
data16
ja
sti
in
outsl
pop
repz
popa
mov
fwait
pop
dec
pop
ja
outsl
push
jns
outsb
push
jne
or
push
pop
aad
mov
addr16
ret
loope
xor
jle
out
sbb
push
cmp
adc
add
mov
mov
add
jmp
cmp
int3
out
loopne
jl
and
push
ficoml
popa
push
mov
jp
pop
cs
scas
mov
jg
loope
clc
into
pop
std
pop
pop
out
out
sbb
clc
js
sbb
iret
inc
out
lahf
out
push
sbb
int
aas
mov
pushf
add
fs
pop
ljmp
aam
xchg
loope
cmc
out
outsb
jnp
mov
mov
push
mov
out
addr16
pop
outsl
out
sbb
adc
pop
repz
jecxz
call
call
push
clc
mov
outsb
movsb
pop
pop
or
xor
xchg
stc
dec
push
jae
xlat
das
jp
cltd
push
fsubs
jle
das
mov
lock
jl
inc
scas
push
js
outsl
flds
push
xor
stos
sub
cmp
shrb
jg
mov
inc
je
stc
div
popf
test
push
jbe
in
outsl
mov
pop
pop
jg
ss
mov
and
div
les
push
push
inc
mov
jge
insb
in
hlt
test
stos
sub
sbbb
pop
in
xchg
test
and
es
jae
sbb
fiadds
pop
xor
mull
shrl
jmp
test
imul
inc
insb
out
shr
lock
call
imul
push
aam
inc
dec
negb
in
aas
jecxz
mov
in
push
xchg
int3
or
pop
xchg
movsl
les
inc
adc
int
int3
lds
popa
stos
pusha
test
inc
pop
or
pop
dec
and
pusha
lahf
mov
inc
mov
cld
leave
pusha
fwait
jne
mov
push
jo
push
dec
pop
inc
inc
jnp
jbe
mov
ja
xchg
or
add
dec
xor
jno
dec
jmp
fwait
out
add
insl
mov
dec
push
out
call
dec
outsl
inc
fistpll
dec
dec
test
hlt
sarl
lret
xor
icebp
les
xchg
push
leave
int3
add
mov
fcomps
cltd
addl
mov
jb
mov
dec
fildl
mov
cmpsb
push
mov
pushf
dec
inc
fs
push
dec
subl
pop
sub
ret
popa
cs
dec
daa
dec
add
lods
pminsw
out
and
dec
add
popf
jae
adc
and
jg
pop
sti
mov
cmp
jne
dec
fs
pop
fsubrl
cmc
stos
xor
jge
sub
mov
jl
mov
or
cmp
cmp
or
rorl
dec
xor
cmp
jmp
mov
pusha
xchg
pop
xor
push
dec
shll
jae
jg
daa
loopne
or
sub
pusha
test
mov
fsubs
inc
jmp
dec
mov
xchg
pusha
pop
sub
xchg
aas
test
add
add
cmpsl
mov
mov
push
mov
daa
mov
jbe
push
mov
into
fwait
push
mov
testl
decb
cmovg
imul
dec
cmpsl
fldln2
pop
int3
xchg
daa
xor
sbb
les
frstor
push
mov
shlb
inc
nop
stos
jle
pop
lret
sbb
sub
sub
cmp
inc
in
data16
loop
pop
popf
mov
sahf
dec
enter
dec
jge
popf
mov
dec
sti
shrd
stos
push
pop
cmp
cld
lds
dec
data16
pop
incb
lds
push
je
and
sbb
mov
aam
jnp
pop
lret
repz
aad
jae
andl
test
les
pop
cs
lods
scas
test
push
out
jnp
sbb
in
aam
jmp
call
push
cmpsb
fs
fldenv
je
push
lods
je
jle
cwtl
mov
cmp
sbb
pop
dec
inc
dec
aas
jmp
jl
sub
or
movsl
andb
or
hlt
pop
sahf
outsb
push
clc
scas
cmp
les
push
or
jo
div
and
xchg
pop
push
addr16
pop
lods
mov
insb
push
stos
push
jle
fisttpl
sub
aas
inc
ss
arpl
adc
jp
cmp
lods
or
pop
outsb
and
sbb
ss
pop
incl
cmp
call
sbb
call
leave
jo
push
jo
cmp
outsb
and
bound
inc
cld
mov
cmp
bound
xor
data16
jle
scas
xchg
dec
fsub
dec
lods
jecxz
iret
or
aas
sub
jo
repnz
mov
and
mov
push
cmp
fs
push
jle
xor
jl,pt
sti
xchg
push
loope
scas
cwtl
cwtl
and
or
jle
outsb
inc
push
xlat
pusha
out
and
or
lock
popa
or
js
or
test
lret
outsl
dec
outsb
je
jbe
call
and
jl
dec
in
dec
jp
dec
sbb
cmpsl
mov
xor
lret
cmp
out
add
xor
inc
mov
int3
shr
test
pusha
out
fwait
mov
sbb
stos
dec
pushf
push
outsl
jg
and
into
add
add
popf
loope
mov
sti
arpl
push
outsl
push
push
aaa
cmc
pop
ja
in
add
cwtl
cmpsl
xorb
pop
sub
inc
jnp
fst
arpl
popa
out
lret
pusha
ret
fs
jle
imul
leave
mov
dec
dec
xor
add
jbe
mov
jae
and
push
jb
adc
scas
or
out
add
sub
movsl
adc
stos
aad
sbb
int3
push
test
dec
test
cli
dec
push
rep
sub
or
mov
dec
test
pusha
xchg
movsl
lcall
into
ljmp
cwtl
test
test
data16
cmc
sub
sbb
loop
xchg
fadds
fdivs
outsl
test
push
push
aad
inc
leave
and
ret
je
bound
clc
dec
std
mov
stos
bound
fcmovu
and
push
push
ljmp
push
adc
xchg
or
pop
xor
lods
out
pushf
mul
outsb
pop
psrlw
scas
mov
dec
add
daa
bound
pop
jnp
jl,pt
xlat
sar
cmc
scas
test
fstpl
add
cmp
les
dec
dec
inc
jnp
aas
punpcklwd
jo
aas
inc
out
out
push
dec
mov
aaa
xor
lock
scas
lods
push
inc
xorb
mov
test
daa
cmp
pop
jmp
rcrl
aaa
jns
or
push
add
cmp
lods
lret
jecxz
fidivs
testl
shrb
jo
andb
jl
inc
je
je
repz
xorl
out
mov
xor
push
cli
cli
jl
cwtl
lret
hlt
pop
cli
cld
mov
bound
push
ja
rclb
daa
test
mov
ret
or
mov
stos
push
jg
adc
cmp
cmp
and
aaa
xor
inc
and
push
mov
jae
sbb
movb
out
inc
adc
je
pop
jns
hlt
addl
pop
arpl
jno
imul
mov
fdivrp
jbe
inc
lods
mov
xor
xchg
sub
bound
fs
int
les
mov
lds
push
push
cmc
int3
pop
xlat
shll
lret
mov
mov
in
dec
pop
int
pop
cmp
and
stos
dec
test
sub
data16
test
xchg
inc
dec
test
and
out
out
scas
jmp
outsb
cmp
xchg
push
push
and
aam
xchg
testb
pop
ja
xchg
dec
cmp
popa
jl
es
les
mov
inc
call
jmp
shlb
push
push
data16
pop
and
xchg
cmp
dec
push
test
out
and
iret
pusha
push
fildl
bnd
dec
addr16
mov
mov
jns
jmp
dec
shlb
push
out
mov
outsb
inc
mov
xchg
sbb
rcll
das
es
subb
sar
das
jne
cmpsl
das
add
fnstsw
push
je
pop
jnp
lret
dec
fiadds
cmp
cmp
lret
cmp
sub
outsb
adc
pushl
lret
mov
push
pop
xor
push
jl
dec
imul
mov
jb
xchg
xor
sbb
sub
and
mov
sub
pop
jp
rcr
dec
xor
sub
daa
lods
je
pop
fnstsw
movsb
inc
jb
mov
repz
sub
xlat
xchg
xchg
pop
jle
inc
pop
bound
lock
and
lods
adc
cmp
fs
lds
inc
sbb
imul
leave
push
push
into
mov
and
mov
sub
push
nop
and
adc
or
inc
inc
inc
scas
cmp
mov
enter
adc
int
pop
dec
and
jo
xor
or
data16
stos
mov
addr16
nop
test
jnp
jmp
mov
jle
dec
dec
adc
dec
xlat
mov
data16
mov
pop
das
sbb
jbe
cltd
mov
stos
cmpsl
push
dec
testb
push
bound
addr16
xor
out
push
jb
addr16
xchg
test
test
scas
xor
push
and
lret
sbb
dec
not
call
js
in
mov
mov
andb
movsb
cmp
popa
out
fidivrs
push
push
cmp
rcr
pusha
je
push
divb
mov
test
push
jmp
and
repz
loopne
ror
loope
sub
int3
mov
mov
aam
insb
cld
dec
rol
les
popf
addr16
xor
push
lret
inc
int3
test
xchg
std
jb
decl
inc
xchg
fsubs
mov
jbe
mov
or
pop
cmpsb
mov
push
in
je
cs
sbb
les
dec
and
cmpsl
sar
jg
scas
xchg
sub
push
sbb
jl
jnp
xchg
clc
stos
stos
sub
ja
jbe
or
and
sub
nop
dec
loop
pop
outsb
lcall
dec
clc
dec
test
jbe
inc
popa
and
jnp
sbb
pusha
adc
out
mov
cmpsl
mov
outsb
shrl
dec
cmp
xchg
mov
xor
dec
imul
je
inc
aad
sbb
cmpsl
mov
ret
jo
xor
test
pop
cmp
add
outsl
adc
decb
addr16
cltd
test
ret
jl
mov
mov
cs
inc
mov
aad
and
push
mov
or
lods
bound
loopne
xor
pop
pop
adc
std
popf
sysexit
or
das
fdivs
int
mov
aad
sbbl
jbe
fimull
mov
mov
push
and
outsb
add
mov
fisubrs
inc
into
icebp
out
out
maskmovq
testl
lods
sbb
fsubrl
iret
scas
or
decb
out
loope
popf
and
or
mov
mov
ss
mov
adc
xor
push
ss
push
inc
ret
fcompl
stos
addr16
jl
cwtl
jbe
xor
pop
jbe
adc
push
jl
cmpsl
ja
add
and
call
adc
pop
shr
dec
xchg
cmp
pusha
aad
daa
je
js
inc
mov
and
jl
and
mov
repnz
pop
scas
and
add
loopne
jns
es
sub
popa
sub
in
and
or
scas
stc
rorb
xor
inc
repnz
pop
jmp
sti
mov
or
mov
jbe
add
fbld
xchg
mov
or
test
sbb
enter
out
mov
mov
cmp
xchg
adc
inc
js
mov
push
pop
jmp
jbe
fcomi
sub
lahf
loope
push
add
call
int
rcll
cmp
xchg
cmp
push
push
and
lods
mov
adc
jo
xchg
lds
xchg
push
mov
dec
fwait
xchg
dec
je
enter
aas
sbb
int
sub
lret
xchg
ja
dec
gs
rcrl
cmp
in
popf
lods
int
cld
and
jecxz
or
out
or
maxps
push
sbb
xorl
adc
test
push
jmp
lcall
pusha
pushf
fs
push
mov
and
outsb
pop
push
test
popa
cli
aaa
flds
mov
or
test
cmc
push
mov
xor
cmp
mov
sti
pop
scas
jo
mov
outsl
loope
sub
push
jl
aam
addr16
aam
sub
stos
inc
mov
dec
pop
mov
or
mov
stos
int3
push
out
cltd
mov
in
loope
test
outsl
test
and
push
rol
push
inc
cmova
decb
pusha
iret
and
sbb
aas
jecxz
dec
addb
enter
out
sbb
xor
mov
jbe
call
aas
mov
or
jns
and
and
sbb
push
stos
push
mov
adc
int3
je
jle
test
in
lods
cmp
mov
jbe
cmc
mov
repnz
out
repz
insl
mov
push
addr16
fsub
push
pop
aaa
push
ret
jbe
cmp
enter
fbld
jl
lods
inc
xor
xchg
stos
inc
dec
in
lds
push
ljmp
out
idivl
jno
mov
leave
xor
push
adc
mov
sahf
dec
outsl
out
or
jp
lock
cmp
fwait
pop
adc
enter
push
adc
insb
scas
sti
push
sub
xchg
stos
shrl
inc
cwtl
sbb
aam
xor
ret
push
outsb
stos
jbe
sbb
dec
sti
fwait
jl
jbe
ret
jns
js
dec
stc
into
in
sti
mov
xor
int3
rcll
mov
cmp
cmp
add
in
fistpll
outsl
cld
out
movsb
fs
push
movsb
jl
push
sub
pop
ljmp
sub
loopne
inc
jge
jg
shlb
in
xchg
out
ret
dec
scas
fstpt
ret
outsb
nop
movsl
icebp
loopne
mov
aad
pushf
sub
repz
movnti
rorl
xor
popa
dec
sub
aad
pop
xchg
popf
sub
in
inc
aad
clc
jnp
pmullw
ja
push
sbb
imul
lods
mov
imul
inc
cmpsl
cmp
jl
sbb
pop
xchg
inc
cli
push
jo
push
inc
and
dec
mov
js
sbb
sbb
or
cld
mov
inc
stc
or
jo
popa
aaa
fidivl
loop
dec
or
dec
mov
mov
movsl
inc
dec
add
and
push
and
jnp
jbe
mov
xor
sub
push
in
or
out
psrlq
xchg
pop
pop
dec
xchg
cmp
xor
dec
popf
fwait
in
fs
pop
jne
dec
out
xchg
pop
add
sti
pop
test
push
push
cmp
or
push
rcl
push
cmp
push
push
sub
pop
aam
pop
js
push
stos
outsb
addr16
jge
jl
bound
jne
dec
in
push
test
outsb
fs
sub
loopne
in
sti
sti
cmpsl
in
jo
push
mov
scas
sub
mov
cltd
popf
stos
sbb
pop
scas
inc
lods
fnstsw
jg
add
dec
sar
and
call
inc
test
and
jbe
sub
xchg
popa
push
hlt
aaa
stos
es
loope
inc
ja
popf
popa
ds
cmp
push
push
inc
aad
xor
jb
stc
hlt
jo
sub
sub
in
ficomps
pop
popf
sub
push
lret
lea
jb
jge
mov
pop
testl
icebp
inc
stc
xchg
cmc
sub
push
test
je
andb
xchg
sub
out
call
int3
rcll
sahf
xchg
push
cmpsl
mov
lods
movsb
punpcklbw
mov
es
push
mov
push
lret
mov
add
mov
dec
and
lret
stos
pop
inc
mov
adc
out
mov
adc
jbe
ret
loopne
lds
pop
push
pop
xchg
fadds
fwait
int3
sub
and
js
xor
cmc
lods
add
bswap
das
jge
adc
lea
imulb
vmptrld
cwtl
adc
xor
pop
iret
push
inc
or
lret
or
scas
adc
pop
shll
sub
cmp
in
cs
cmc
cmp
imul
add
loope
loope
and
jl
pop
outsb
call
out
int3
repz
adc
push
test
notl
mov
dec
stos
leave
dec
sub
jb
dec
cmp
es
test
out
add
iret
data16
pop
and
jle
xchg
xchg
popf
cli
out
int3
cwtl
push
nop
lods
adc
pop
test
cmc
lahf
and
mov
xorb
jmp
push
sbb
es
xchg
mov
das
jecxz
arpl
in
mov
movsb
jle
out
jne
in
cs
test
jno
push
mov
push
decb
adc
dec
lods
cmp
test
imul
sub
cs
push
in
mov
lock
dec
cs
arpl
jmp
or
pop
inc
mov
enter
cmp
dec
pop
adc
mov
shlb
enter
dec
outsb
cmc
stos
mov
or
enter
jb
and
inc
mov
inc
push
dec
imul
pop
fbld
push
frstor
mov
test
sbb
adc
int
das
mov
sarl
loope
pop
popf
inc
and
inc
jns
pushf
imul
aad
mov
mov
sub
rorl
adc
sbb
test
outsl
and
mov
fisttpl
dec
iret
add
popf
adcb
pop
and
push
mov
iret
fs
outsb
sub
pop
std
dec
cli
jle
xchg
filds
sahf
dec
xor
mov
in
lret
adc
dec
test
inc
xor
jp
stc
mov
push
aaa
dec
xor
pop
enter
xlat
mov
sahf
in
jmp
jbe
test
xor
lret
xchg
mov
pop
mov
sti
enter
aaa
jmp
ret
mov
inc
inc
lods
incl
mov
sti
adc
dec
ja
lret
std
sbb
dec
push
in
test
test
das
dec
js
jecxz
out
std
dec
adc
xlat
add
mov
cmp
and
sub
add
loopne
idivl
fs
es
ja
fs
xorb
and
cmp
pop
pusha
cmc
xor
xlat
lretw
and
pusha
mov
push
pop
xchg
xor
cmp
popf
push
xor
cmp
orl
xchg
fldcw
sahf
sub
lds
sbb
pusha
jns
inc
stc
mov
jg
shlb
mov
aam
loopne
pop
pusha
lds
cmp
pushw
xchg
push
mov
pop
bound
into
pop
out
adc
cwtl
shrb
imul
int
lret
sysexit
push
pop
inc
xchg
outsb
add
cld
sub
adc
push
dec
insl
pop
push
mov
or
pop
out
popl
movsb
xor
aas
push
sub
mov
dec
pop
shrl
sbb
adc
lret
jne
mov
daa
loopne
cmc
jp
lahf
adc
je
dec
xchg
lret
jbe
cwtl
pop
gs
ret
pop
test
stos
es
dec
and
or
and
mov
out
jbe
pusha
data16
mov
dec
lods
jns
adc
inc
cmpsl
jo
sar
push
jle
stos
scas
and
test
lock
cmpsl
dec
mov
test
shr
dec
pop
cmc
fwait
jp
dec
mov
jge
lea
into
push
jp
loope
sti
scas
repnz
ja
and
xchg
fwait
push
xorl
pop
cli
cwtl
jbe
xor
scas
mov
aam
cmpb
push
inc
repz
jl
scas
aas
push
bound
js
xchg
dec
push
xor
popa
lea
xchg
insb
push
jl
out
std
dec
jmp
jbe
pop
loop
popa
pop
fwait
outsl
enter
aas
je
ljmp
jg
in
cs
stos
jecxz
inc
dec
int3
mov
pop
jbe
push
push
nop
dec
in
dec
jbe
leave
mov
mov
push
cli
sbb
arpl
dec
inc
xchg
insl
cld
pop
xchg
or
sbb
push
cwtl
lret
jae
pushf
aas
xchg
jns
adc
mov
pop
in
dec
insb
jbe
fwait
dec
push
pop
scas
push
or
test
stos
dec
scas
mov
leave
sbb
push
xchg
scas
push
cld
dec
adc
or
loope
jnp
js
stos
inc
and
push
jmp
fwait
push
test
sub
and
mov
ret
add
das
int3
shlb
aaa
inc
lret
hlt
pushf
repz
push
inc
ss
push
mov
lds
call
mov
popf
insl
js
xor
lds
jge
sarl
pushl
bound
addr16
test
dec
lret
bound
jp
std
or
in
xor
push
jnp
xlat
mov
jmp
push
pop
and
pop
add
adc
mov
js
push
add
aad
ja
ret
sub
loope
fimuls
loope
aad
fcompl
jl
loope
push
sbb
sub
call
insl
mov
les
dec
push
testl
add
call
outsb
xor
jno
outsb
imul
dec
mov
ret
xchg
dec
jle
stos
add
xor
mov
dec
lahf
sbb
adc
jg
xchg
mov
lret
sbb
je
scas
sbb
dec
fsubl
lcall
sbb
es
pop
aam
test
movsl
sbb
lods
push
imul
cli
push
pop
inc
fwait
loop
pop
imul
out
scas
adc
mov
cmp
enter
es
fstpl
inc
and
dec
and
fs
jg
dec
roll
xchg
xor
add
pop
hlt
mov
out
nop
push
sbb
pop
std
popa
dec
iret
popa
pop
popf
push
jl
fsubrs
es
add
jae
jb
xchg
jmp
hlt
stos
or
jbe
sub
imul
jmp
add
mov
sub
mov
xor
dec
mov
imul
arpl
push
call
and
js
and
cmpsl
clc
popaw
sub
movsb
jmp
subb
aaa
or
ret
add
sub
shlb
lret
and
cli
push
xor
or
movsl
or
fwait
pop
dec
push
pusha
fdivrs
cmp
repz
jp
scas
sub
jmp
inc
push
jb
dec
mov
enter
pop
pusha
ja
dec
iret
or
or
sbb
call
and
je
dec
pop
xchg
inc
inc
call
pushf
cmpsb
xor
add
scas
data16
pop
add
inc
out
lods
jecxz
sbb
jo
mov
sbb
loop
stos
push
nop
andl
in
push
lret
jg
stos
xchg
and
sub
outsl
dec
push
dec
aam
jmp
out
sbb
mov
inc
repz
stos
pop
pop
mov
std
and
call
inc
imul
sub
cwtl
addr16
sub
cs
sub
inc
fs
push
mov
push
push
inc
loope
xchg
or
and
iret
inc
sub
push
lret
js
jp
xchg
sub
cmp
leave
cmp
mov
pop
mov
bound
ja
adc
push
jp
cmpsb
mov
repz
push
fs
mov
data16
jo
stos
push
es
push
jb
aam
cmp
mov
jp
sub
and
bound
mov
xchg
and
inc
cmp
mov
mov
dec
pop
sub
push
dec
and
pop
sub
dec
test
dec
inc
dec
bound
sbb
ja
jp
jmp
popf
adc
sahf
push
push
mov
imul
mov
xlat
push
pusha
jle
inc
orl
mov
es
scas
and
jecxz
cli
inc
sub
data16
out
shr
add
jp
xchg
scas
test
in
xchg
pop
push
xlat
jno
cmpsb
insl
jnp
jg
jg
pop
insl
mov
xchg
aas
test
out
mov
xor
out
xchg
mov
popa
inc
and
mov
add
cmp
xchg
jp
stc
daa
inc
pop
mov
outsl
les
sbb
in
inc
sbb
jecxz
repz
pop
mov
insb
gs
icebp
repz
sarb
imul
clc
and
bound
int3
je
cmp
imul
mov
add
sbb
mov
adc
sub
inc
int
test
jnp
call
mov
push
cmp
outsl
loope
dec
pop
xchg
iret
in
dec
pusha
adc
je
inc
sbb
lret
sub
rcrl
cmc
xchg
sub
sub
leave
fisttpl
leave
js
bound
jl
js
adcl
and
mov
pop
scas
pop
pop
sbb
and
sbb
mov
mov
pop
sbb
movsb
mov
jl
xor
aam
mov
ror
dec
add
out
nopl
pop
fldenv
jae
out
jbe
les
dec
pop
add
arpl
push
pop
es
and
jle
decl
push
inc
stos
adc
dec
data16
xchg
push
cmovl
xor
pop
push
sub
pop
or
jnp
stos
test
mov
and
repnz
sbb
and
sub
rcrl
xchg
scas
out
mov
int3
xor
rcrl
test
pop
push
leave
dec
mov
call
lret
int
adc
inc
cltd
dec
jb
adc
sbb
data16
xchg
push
jp
stc
repz
jbe
loopne
inc
fmuls
int3
popa
inc
scas
sbb
cmpsb
dec
mov
jp
jbe
out
push
and
sbb
add
inc
stos
push
xor
jae
xchg
mov
test
mov
inc
sbb
bound
call
inc
pop
pop
xchg
loope
gs
add
lcall
pop
mov
xchg
stc
sahf
cmc
roll
fistpl
popf
sahf
mov
or
sar
xor
hlt
and
mov
push
cmpsb
xchg
pop
and
mov
sub
xor
adc
and
cmp
in
xchg
fnsave
data16
into
sti
mov
shll
pusha
dec
push
mov
inc
xchg
in
mov
ss
add
test
insl
pop
inc
push
jmp
sbb
stc
jmp
pop
pushf
lock
push
cmp
call
dec
test
add
inc
jbe
mov
sti
pop
shll
or
jp
gs
jns
pop
hlt
jp
loopne
leave
lds
int
int3
dec
jge
push
out
sbb
xchg
cwtl
imul
fisubs
repnz
shl
jl
inc
add
mov
xchg
pushf
leave
adc
bextr
mov
pop
cmc
sub
mov
jns
sub
sub
movsb
pop
mov
outsl
dec
inc
int3
xor
ss
scas
jns
push
mov
pop
cmp
shlb
jne
dec
outsb
inc
ss
pop
add
daa
adc
data16
inc
mov
leave
aas
inc
stos
dec
inc
jb
cltd
fnstenv
dec
mov
mov
clc
mov
movsb
addr16
fwait
hlt
fstpl
stos
into
lret
inc
je
jmp
mov
ret
pop
mov
lcall
pop
cmp
xor
jl
mov
sub
dec
dec
xchg
inc
mov
xchg
fildll
in
jg
adc
fists
adc
pop
cmc
dec
mov
out
call
inc
mov
pop
cmc
xchg
add
mov
xchg
repz
xor
imul
xor
sub
adc
cmc
test
pop
push
mov
fsubl
data16
xlat
dec
fs
leave
cltd
fbld
sub
push
dec
mul
mov
xchg
fwait
repz
mov
sbb
js
sti
push
mov
bound
lret
incl
mov
lds
add
int3
lock
rorb
addr16
inc
dec
adc
pop
popa
mov
mov
into
mov
ljmp
jb
jge
add
orl
xchg
sub
aam
clc
sahf
inc
lds
xlat
cs
fwait
xor
repnz
add
or
jmp
adc
xchg
das
repnz
sbb
push
add
push
je
jp
ss
jne
add
sti
add
cmp
cli
jns
mov
bound
aas
add
loope
lods
mov
mov
rclb
stos
fidivl
outsb
rdpmc
sub
sub
test
adc
in
aad
mov
cld
inc
sbb
rorb
shrw
pop
call
and
outsb
outsl
out
fs
pop
bound
ljmp
fs
jl
sub
movsl
in
pop
push
aad
mov
dec
leave
adcb
mov
xchg
and
mov
inc
push
xor
push
inc
jns
pop
aaa
pop
es
loopne
and
ror
fdivs
mov
lock
icebp
xchg
adc
scas
cwtl
add
test
gs
enter
adc
sub
mov
shll
movsl
fisubrs
loop
or
jns
dec
inc
out
push
icebp
icebp
inc
push
ljmp
jbe
cmpsl
jl
int3
test
andl
bound
jge
and
loopne
outsb
mov
adc
bound
rorl
outsb
not
fs
or
mov
addr16
inc
stos
aas
int
push
adc
imul
nop
mov
loope
push
lock
sub
and
inc
stc
inc
jbe
or
test
push
sub
test
aam
lret
inc
and
cmp
lock
dec
mov
stc
jle
adc
leave
add
lcall
mov
mov
cmp
inc
movsl
js
jmp
add
push
stc
mov
inc
mov
out
sbb
lret
cmp
cmp
test
xlat
in
push
push
ret
xor
or
es
popa
mov
push
inc
mov
xor
mov
pop
add
bound
fsubl
jp
xchg
jb
test
jg
repz
sarb
and
jne
mov
shrl
add
inc
xchg
leave
into
imul
add
cld
dec
mov
data16
and
aaa
mov
jl
push
sbb
cmp
outsl
mov
xchg
out
add
xchg
push
arpl
cmc
add
mov
mov
clc
xor
cmp
pop
dec
xchg
in
sub
pop
mov
pop
fstpl
xor
fldt
pop
push
clc
out
ss
inc
push
ret
js
jno
dec
push
subb
cmp
cli
jbe
aad
or
lret
shll
push
stc
call
sub
outsb
and
xchg
cmp
xchg
cmc
sub
loope
adc
movsb
or
pop
inc
popf
and
jne
cmp
outsb
outsl
push
sub
jl
movsb
movsb
pop
popa
je
sub
movsl
scas
mov
clc
mov
mov
data16
and
mov
sarl
shrb
test
sub
pop
fs
nop
dec
je
jl
xchg
inc
aas
mov
loope
loope,pn
lret
orb
cmc
and
fwait
jb
jbe
popf
arpl
int3
outsb
push
hlt
inc
in
mov
push
fmuls
shrl
iret
add
pop
push
call
mov
inc
cmc
sub
fs
or
sub
lea
inc
fistpl
xor
pop
mov
inc
sarl
lods
and
daa
push
inc
ss
push
pop
push
imul
dec
es
cs
xlat
push
out
cs
inc
mov
fs
jnp
sbb
js
mov
repz
xor
or
pop
xchg
orl
mov
es
and
pop
sti
pop
mov
xchg
fisubl
cmp
sti
or
xchg
cmp
push
ja
push
roll
das
cmp
mov
iret
out
pop
xor
jne
cld
out
or
pop
mov
inc
sti
add
scas
sbb
loop
add
jle
imul
imul
bound
cmp
mov
hlt
xchg
scas
jnp
dec
sbb
int
pop
ljmp
test
stos
adc
sbb
xchg
mov
js
mov
into
fistl
jno
call
xchg
xlat
iret
sub
int3
mulb
jns
pop
je
push
cmovo
cs
mov
daa
jle
add
xchg
jp
xchg
pop
inc
pop
push
in
js
adc
pop
cld
jl
push
clc
dec
les
sbb
lea
clc
inc
gs
data16
pop
gs
addr16
lret
out
fsubs
out
xchg
imul
popa
inc
fwait
pop
mov
nop
add
outsb
jo
movsl
and
jl
or
repz
imul
sti
in
ljmp
or
xlat
ljmp
pop
jmp
jnp
or
push
notb
repnz
sub
js
ror
adc
mov
cld
sahf
shrl
xchg
inc
testb
loope
repnz
jb
inc
in
in
jge
xor
mov
enter
es
das
ljmp
jns
mov
cmp
outsb
shll
cmp
mov
movsl
scas
sti
xchg
test
ljmp
jae
pop
in
int3
test
loopne
cld
dec
stos
inc
arpl
mov
popf
mov
inc
jl
sbb
push
rolb
neg
pop
lret
stos
jbe
sub
les
dec
popa
dec
or
lret
dec
cld
lock
popf
mov
mov
cmp
inc
nop
lods
push
rolb
jl
sub
sbb
xor
out
sub
ds
ret
push
int
push
add
aam
sub
rcl
push
jb
jg
outsb
shll
cld
mov
sar
bound
test
and
mov
mov
imul
push
push
sbb
lods
rorl
push
andb
cmc
in
in
sbb
pop
leave
pop
sub
and
arpl
and
in
push
jb
fs
popa
pop
jmp
ret
js
loope
scas
fwait
dec
loop
leave
mov
cmp
out
add
push
in
jge
mov
inc
out
shll
hlt
sub
push
shrb
cmp
push
add
icebp
data16
mov
fwait
push
inc
dec
inc
fs
sub
scas
jmp
fmuls
int3
in
mov
sar
outsl
and
and
add
dec
movsb
dec
pop
scas
repz
cwtl
sbb
mov
and
pusha
mov
mov
ja
jle
push
pushf
dec
clc
push
fstpt
in
push
jnp
fwait
sub
mov
xchg
pusha
lods
jecxz
shl
lret
rolb
shlb
movsb
mov
sbb
orb
jecxz
push
jle
int
rorl
das
mov
test
adc
jle
fisubs
mov
rorl
mov
push
push
daa
jle
pop
xchg
mov
addr16
sub
inc
outsl
call
and
mov
in
xchg
dec
imul
imul
fistps
pop
stos
repz
mov
mov
inc
pop
repz
jp
pop
push
sti
aaa
cmp
push
cltd
sub
imul
repz
push
mov
insb
push
outsb
jmp
test
push
fwait
xchg
mov
gs
enter
dec
mov
sbb
or
aas
addr16
ds
jns
sub
imul
bound
xor
lret
js
jp
fsubl
stos
add
lea
in
les
lods
mov
mov
jns
test
push
cwtl
arpl
sbb
lds
pop
mov
shlb
push
push
push
stos
les
lcall
movsb
dec
mov
mov
rcll
push
xchg
lea
dec
in
fnstsw
js
xchg
mov
jp
cmp
jbe
or
jb
xchg
test
sbb
xor
xchg
pop
dec
dec
xchg
imul
fs
lock
lret
fcoms
iret
inc
sbb
jp
xor
arpl
xchg
push
xchg
sti
push
adc
sbb
jb
and
pop
int
mov
out
sub
xor
xchg
ljmp
leave
mov
out
les
inc
mov
adc
xchg
mov
and
sbb
mov
xchg
rolb
and
jo
push
cmpsl
push
daa
dec
daa
mov
popf
ss
jl
les
test
push
loope
or
dec
adc
sub
mov
adc
jbe
and
outsb
pop
pop
je
xor
addr16
test
or
or
push
jne
loopne
sub
cmp
aad
adc
add
jp
popf
pusha
movsb
movsb
ss
push
sbb
pusha
and
dec
mov
outsb
in
dec
dec
mov
and
mov
mov
adc
sbb
mov
jp
jle
push
mov
push
adc
scas
xor
mov
adc
in
loopne
addr16
pop
adc
dec
pop
dec
xchg
push
mov
jp
nop
inc
jne
mov
dec
out
hlt
pop
or
jo
js
add
jb
jne
in
dec
stc
popf
inc
xchg
lds
popf
cld
jo
notb
rcll
movsb
jo
out
dec
pushaw
cs
outsb
mov
sti
mov
nop
daa
pop
inc
punpckhbw
movsb
jl
pushl
sbb
sti
fwait
push
gs
mov
call
sti
inc
mov
test
sub
sub
jo
jecxz
test
in
ljmp
xor
inc
fs
mov
cmp
je
jecxz
and
cs
mov
punpckhwd
pusha
js
cmc
xchg
test
js
hlt
fmuls
cli
xor
xor
jne
sbb
das
mov
test
nop
sbb
jle
int
hlt
rorl
in
inc
jl
in
loop
sub
jo
in
cld
pusha
aam
jecxz
fs
imul
xchg
lds
or
mov
xchg
enter
jp
xor
mov
ds
pop
daa
aaa
lret
or
leave
pop
out
push
ja
cltd
je
mov
inc
ret
cmpsl
stos
iret
xchg
push
jl
les
jp
xor
subb
dec
ret
loopne
faddl
jge
cmp
mov
mov
ss
out
adc
nop
stos
cmp
lret
jp
mov
jg
push
imul
or
fdivl
daa
popf
push
jb
stos
fimuls
inc
or
lret
movl
out
subl
lahf
sub
out
popf
into
call
xchg
enter
popa
daa
shrl
out
aaa
fcmovne
jle
sets
push
sbb
cmp
jp
mov
jne
int3
test
push
jmp
xchg
mov
mov
dec
or
stos
fistps
jl
data16
data16
dec
movsl
out
add
int3
fwait
int3
hlt
jb
sahf
push
jl
inc
and
jbe
bound
or
lock
test
cmc
cs
mov
testl
das
pop
aam
out
cmpsb
push
push
push
daa
push
fsubs
int3
and
nop
mov
xor
mov
sub
je
out
orb
sub
inc
adc
loopne
popa
xchg
push
out
adc
leave
js
dec
xchg
loop
xchg
push
data16
stos
jecxz
in
inc
nop
sub
cmpsb
cmpsl
call
pop
js
into
push
out
push
leave
mov
mov
mov
dec
mov
mov
jl
dec
and
imul
push
repnz
js
imul
in
inc
push
call
push
push
mov
pop
cmpsl
pop
scas
ja
out
xor
enter
adc
xor
mov
hlt
pop
jne
stos
adc
aaa
pusha
push
pop
pusha
shll
aam
inc
push
movsb
repz
imul
push
aam
loop
loopne
js
cld
push
dec
adc
out
leave
into
test
out
cli
inc
jns
jp
enter
mov
xchg
clc
cmp
mov
cmpsl
dec
outsl
into
movsl
sub
and
jbe
mov
ss
out
pop
in
sub
call
xchg
mov
leave
sti
or
jo
popf
mov
sbb
inc
scas
out
adc
cli
insl
imul
fadds
adc
pop
jnp
lahf
aad
in
sbb
cs
daa
fwait
rcll
ret
fdivrs
push
sbb
fistpll
out
andl
inc
jecxz
rorb
aaa
popf
jp
loopne
lods
lds
or
outsw
mov
stc
lds
mov
outsb
adc
jecxz
bound
or
pop
cmp
jmp
rclb
jmp
js
int
arpl
scas
ret
mov
mov
xchg
or
addr16
inc
sbb
out
gs
aad
push
and
xchg
aas
jnp
ss
hlt
push
andb
in
cmp
icebp
gs
outsb
pop
scas
xchg
push
inc
pushf
test
push
aam
int3
mov
movsb
mov
jmp
inc
lods
xchg
push
incb
fwait
lock
imul
xchg
mov
incb
cwtl
cs
jl
out
stos
dec
dec
imul
loope
mov
popf
rcrl
jmp
out
sbb
jnp
fs
xchg
addr16
pop
sahf
adc
flds
push
xchg
in
int3
in
lret
lret
stos
push
dec
or
je
addb
dec
or
xchg
iret
out
mov
lods
cmp
mov
inc
jle
clc
cmpsb
mov
addb
imul
repz
adc
pop
sub
sbb
test
fcmovnu
and
mov
int3
xchg
inc
dec
jmp
mov
in
arpl
les
or
shll
cwtl
sub
inc
nop
aas
test
xor
push
pcmpeqb
js
decl
xor
mov
inc
mov
dec
jge
stc
test
into
repz
pop
test
push
js
or
and
jbe
in
mov
mov
cs
or
inc
data16
repz
lret
sbb
sbb
repnz
lds
push
push
in
xlat
aam
cmp
or
loop
scas
lcall
scas
or
les
int3
outsl
mov
sbb
out
aaa
sbb
sub
stc
in
or
stos
outsb
sub
cwtl
movsl
cmc
xchg
xchg
push
fs
scas
pop
shrl
dec
test
scas
sub
or
sub
dec
cmp
rol
mov
scas
adc
std
mov
push
outsb
cmc
push
xor
or
jg
js
shl
pop
mov
addr16
pop
or
imul
fadds
gs
sbb
dec
or
jnp
and
inc
daa
xlat
sbb
and
sbb
cmc
cmc
jmp
outsb
into
mov
hlt
in
push
xchg
lahf
push
cmp
addb
lods
mov
out
lods
sbb
in
xchg
jno
cmc
mov
and
in
mov
daa
xor
sub
sbb
mov
inc
popf
push
pop
inc
ds
stos
xchg
stos
push
lahf
fmull
sbb
fs
mov
les
inc
mov
push
xor
js
adc
inc
push
in
int3
pop
ds
insb
ljmp
xor
or
data16
sahf
sbb
int3
call
cmp
cmpsl
fldl
sub
outsb
stos
data16
stos
addr16
jle
pop
icebp
imul
cmp
test
pop
jmp
push
in
addr16
push
repnz
mov
pop
lret
mov
addr16
sarb
arpl
push
mov
xlat
push
or
sub
imul
lds
scas
dec
jmp
inc
inc
arpl
add
inc
adc
les
mov
stos
push
call
mov
scas
addl
pop
repz
clc
mov
sub
hlt
pushl
clc
mov
dec
inc
dec
push
sahf
fwait
jmp
xor
clc
jbe
pop
outsb
arpl
mov
jno
add
test
pop
cmc
test
iret
add
lock
in
mov
imulb
pop
sbb
or
xchg
shrb
stos
xchg
sti
xchg
sbb
xchg
mov
sbb
pop
fwait
push
pop
pop
repz
fnstsw
push
pop
lret
ficoms
fs
rcr
jl
out
or
and
sbb
repz
ficoms
mov
insb
movsb
adc
out
je
fdivl
outsl
adc
arpl
int
push
pop
fstl
and
or
xchg
inc
dec
mov
rcrl
pop
xor
xlat
push
cli
adc
xchg
sbb
fs
mov
out
dec
cmp
repz
xor
push
dec
int3
lods
testb
jp
mov
jl
in
shll
ficoml
add
outsl
pop
xchg
mov
mov
add
dec
daa
push
sahf
sub
add
cli
push
xor
xchg
loopne
cmc
jl
imul
sahf
fistpl
pop
in
jb
lcall
push
mov
cld
push
imul
je
pop
push
addr16
cmp
lret
mov
std
or
sub
test
pop
mov
jo
pop
call
stc
clc
jl
and
bound
hlt
loopne
dec
mov
push
imulb
out
sbb
iret
lret
cwtl
xor
jl
mov
sbb
jecxz
enter
cmpsl
mov
leave
out
adc
outsl
xchg
pop
movsl
adc
stos
les
jle
aaa
testb
add
jg
fdivrs
scas
hlt
sbb
inc
inc
jo
or
dec
dec
bound
push
jb
dec
push
pop
loop
icebp
inc
mov
cld
and
pop
ds
lods
stos
lods
outsl
call
and
repz
into
sti
in
rol
outsl
cwtl
jecxz
mov
xor
dec
nop
repnz
pushf
add
repz
cmp
sbb
push
xchg
in
inc
jnp
loopne
inc
fldenv
stos
pop
dec
dec
pop
push
popa
enter
leave
cmpsl
sahf
push
mov
cmp
mov
out
test
push
push
and
sbb
cmpsl
fs
adc
or
jbe
lods
mov
cli
jbe
inc
enter
push
cmc
mov
or
inc
enter
push
sub
loop
or
jns
pop
js
outsl
dec
jae
fidivrl
xor
jb
mov
or
clc
in
cmc
mov
inc
inc
mov
das
cs
outsl
xchg
inc
mov
xlat
data16
or
adc
cmp
jno
sub
jae
std
out
dec
ret
fisttpll
inc
das
minps
push
std
inc
lret
dec
xchg
negl
xor
dec
sub
xor
test
mov
mov
sub
out
inc
xchg
cmc
inc
sti
pop
pop
ja
leave
pop
adc
jno
push
into
push
scas
adc
jne
pop
test
out
out
xchg
mov
fsubl
outsl
les
xor
dec
jecxz
aaa
data16
and
push
jp
mov
pop
pushf
push
js
mov
push
mov
xor
jo
into
pop
divb
test
repz
and
cmc
scas
sti
push
sbb
mov
pop
mov
xor
ljmp
outsb
sbb
cs
stos
ret
sub
inc
repz
test
test
sbb
shl
je
movsl
mov
std
mov
ret
mov
mov
stos
inc
call
sbb
xorl
in
roll
out
mov
scas
jmp
std
fisubl
cwtl
data16
inc
cli
movb
test
xor
fwait
pop
out
test
xchg
ja
sbb
or
addb
pusha
loope
test
and
mov
xlat
lods
ds
dec
jmp
into
pop
jnp
sub
les
cld
daa
push
out
sbb
pop
sub
inc
data16
repz
xchg
push
inc
adcb
out
mov
add
int3
aas
repz
fisttpll
cmpsb
adc
imul
pop
lea
lock
jmp
dec
xsha256
cmpsb
adc
cmp
dec
scas
punpcklbw
dec
data16
or
cmp
pushf
lods
add
mov
fstps
fwait
ja
std
jo
loop
rolb
push
and
lock
pop
das
pop
inc
push
stos
inc
or
xor
jne
fimull
dec
add
inc
loope
notl
jp
popf
push
mov
sarb
popa
cld
scas
inc
cwtl
ja
daa
dec
xchg
jne
sbb
fst
in
clc
out
xchg
test
data16
mov
sub
jecxz
out
ds
out
inc
or
dec
stos
lcall
inc
int
insl
leave
ss
test
sbb
pop
test
out
pop
mov
int3
push
sbb
sahf
nop
insl
scas
mov
js
outsb
test
inc
fs
fwait
jle
jne
gs
or
inc
dec
pusha
push
pop
imul
inc
push
push
dec
test
xchg
dec
data16
es
add
and
xchg
test
insl
fildl
imul
fnsave
inc
and
stos
jnp
test
or
lret
add
cmp
dec
mov
icebp
movsb
cmp
pop
out
mov
pop
push
out
inc
cld
push
aaa
dec
idivb
push
add
sarb
inc
dec
test
inc
inc
mov
sti
andl
or
jnp
movsb
in
frstor
sbb
cmc
push
test
adc
aad
leave
xchg
or
mov
cmpsl
jb
cmp
xchg
out
lcall
push
dec
call
jns
enter
pop
decb
in
jp
cs
in
enter
leave
xchg
pop
jmp
pop
pop
lret
addr16
outsl
push
stos
lret
in
movsb
pop
push
or
outsl
enter
adc
sahf
js
jns
add
test
jo
call
mov
popa
fsubs
push
int3
sahf
addr16
pop
jae
mov
shlb
xchg
xchg
mov
sbb
cmpsl
bound
movsl
out
push
imul
es
cmp
fucomp
sbb
outsl
xchg
mov
mov
dec
or
or
stos
dec
push
cs
adc
xchg
ja
bound
cmp
in
mov
adc
mov
popa
cmc
pop
fadds
mov
inc
xchg
push
call
fldl
out
xrelease
inc
adc
dec
subl
scas
or
ja
add
mov
jge
insb
lods
fsubs
lret
mov
dec
xor
pop
js
push
xor
fwait
addr16
sti
fsubrs
mov
pop
dec
add
push
jne
add
jl
pop
aam
fs
outsl
clc
mov
pop
push
mov
sti
das
push
xchg
inc
pop
dec
mov
inc
cmp
add
call
in
js
pop
stos
cli
rclb
add
push
enter
sbb
ret
cmp
pop
jmp
cld
bound
pusha
repz
sbb
mov
mov
pmullw
and
pusha
nop
stos
test
xchg
mov
inc
push
ljmp
xor
idiv
fcmovbe
ja
push
fimuls
ja
push
clc
out
push
mov
push
or
push
rol
and
je
adc
cmp
or
dec
and
jecxz
sti
aas
add
lret
push
inc
lds
cmpsb
push
test
fstp
clc
ljmp
dec
popa
sub
out
clc
lret
pushl
int
jns
inc
dec
jmpw
fwait
add
cmc
das
mov
lods
pop
in
subb
pop
or
bound
cltd
pop
icebp
pusha
ror
bound
outsb
push
mov
rep
push
aad
daa
faddl
pop
jmp
sub
jb
xor
cld
fcomps
int3
mov
cmp
mov
nop
cmpsb
dec
pop
and
mov
xchg
xor
out
sub
out
bound
imul
nop
mov
or
mov
jb
daa
add
dec
in
maskmovq
testl
jo
or
test
pop
dec
imul
sti
sbb
xchg
lods
add
xorl
outsl
jge
push
mov
dec
mov
out
rcll
fcoms
mov
push
xchg
jae
stos
and
inc
loop
das
dec
iret
push
mov
lret
dec
imul
stc
aas
cmpsb
inc
inc
stos
in
add
jbe
pop
push
mov
nop
rorb
ljmp
mov
push
push
jnp
dec
xchg
xchg
push
inc
lahf
das
sbb
testl
das
clc
push
pop
xchg
cli
and
dec
rorb
aaa
addr16
repz
push
xchg
mov
ljmp
rorl
mov
popf
dec
cmp
lret
cmp
aad
imul
push
ja
push
in
mov
sbb
popf
sub
pop
pop
test
dec
push
add
out
adc
cs
sti
int3
lret
xchg
and
jge
lods
dec
and
push
pop
sbb
iret
scas
sbb
call
adcb
adc
sbb
outsl
rcrb
sub
pop
pop
pusha
test
or
xchg
mov
popa
test
jnp
test
xchg
and
les
mov
rolb
cltd
addr16
scas
jp
loope
jb
sbb
pop
in
testl
sbb
push
rclb
sbb
or
popa
mov
push
stos
fwait
nop
popf
test
add
push
jbe
xor
sbb
xchg
pop
add
into
imul
nop
pop
jl
inc
stos
push
ret
adc
in
push
inc
sub
dec
ss
ljmp
iret
fwait
call
ror
lods
sbb
cmpsb
dec
pop
mov
mov
dec
dec
pusha
addl
inc
popf
add
scas
mov
hlt
jne
lret
hlt
sub
clc
and
dec
dec
push
data16
push
fsubp
dec
inc
hlt
scas
push
faddl
add
mov
adc
mov
pop
push
mov
cmp
call
mov
imul
push
pushf
jp
or
loope
sub
xor
dec
fsubrp
popa
dec
lods
sbb
icebp
fxch
imul
fsubrl
ljmp
das
es
add
jnp
bnd
sbb
ds
push
int
pushf
cs
cmp
scas
sbb
xor
xchg
mov
les
out
mov
dec
xor
stc
push
push
nop
mov
stos
pop
call
fdivrs
xchg
inc
push
mov
push
xchg
sub
leave
ret
xor
stc
sbb
mov
xchg
and
negl
int
hlt
das
cmp
data16
inc
xor
push
shlb
pop
push
pop
leave
dec
mov
fs
jmp
and
pop
stos
dec
sub
and
dec
out
or
pop
aam
out
in
cmp
sub
mov
ret
cmpsb
mov
add
sub
imul
xchg
sub
lock
idivl
pop
imul
jl
adc
scas
stc
nop
insb
pop
or
mov
shlb
pop
popf
and
in
imul
rolb
dec
scas
jbe
cmp
push
dec
test
jmp
jae
push
xchg
add
and
roll
inc
mov
mov
inc
and
push
add
stos
xchg
push
mov
cmc
and
mov
ds
xchg
cmp
dec
das
pusha
adc
jp
adc
xchg
clc
pop
sbb
jmp
rcl
fsts
mov
inc
mov
mov
nop
fisubl
test
xor
push
xchg
inc
mov
loope
out
stc
mov
shll
popf
pop
insl
jge
cmp
sbb
xchg
sbb
out
out
or
adc
ret
push
je
or
dec
adcb
in
js
lahf
dec
sbb
je
int
inc
sti
aad
mov
or
lods
mov
push
fwait
ds
dec
sbbb
cmpsl
mov
fldenv
jle
rclb
sti
lret
test
cmc
pop
cmp
je
mov
dec
pop
pop
jo
push
dec
scas
cwtl
dec
adc
sbb
sarl
jnp
lret
loope
dec
pop
mov
cld
loopne
sub
into
or
add
je
add
aad
push
add
and
sub
xor
outsb
jb
sub
push
aad
lret
xchg
xor
sti
mov
push
outsb
dec
jmp
jmp
pushf
je
jp
and
jbe
adc
pop
jp
movsb
or
mov
imul
and
or
jl
loopne
and
std
out
movd
dec
je
jo
mov
mov
bound
push
or
loopne
cmp
dec
lds
out
int3
pop
test
cmc
inc
dec
jns
dec
add
mov
les
jb
test
jg
bound
mov
dec
and
into
shlb
mov
xor
cld
dec
movsb
je
enter
push
scas
jl
mov
je
jg
push
dec
adc
sub
cmp
lret
sahf
mov
pop
stc
orl
add
cmpsb
push
imul
ljmp
jb
pushf
imul
sub
inc
xchg
fistl
adc
xchg
aad
cmpsl
arpl
jp
push
gs
dec
ja
add
pop
ja
adc
pushf
stc
js
ret
inc
dec
loopne
aaa
movsl
jns
enter
dec
dec
movsb
out
enter
and
les
stos
into
jnp
cmc
xchg
mov
jb
push
aaa
push
rcll
stc
jbe
dec
and
hlt
push
fstl
dec
mov
flds
pop
movsb
fnsetpm(287
jb
jp
in
sub
dec
aaa
sbb
les
jnp
cmpsb
test
pop
outsb
and
add
push
adc
mov
iret
dec
jno
inc
rcrl
adc
lds
mov
cli
repz
and
out
xor
ret
test
scas
pop
pop
lret
les
outsl
sub
outsl
fwait
cmc
cmp
mov
mov
out
aas
jge
jo
push
scas
fs
iret
adc
lret
or
mov
cmc
sub
sbb
test
mov
mov
pop
outsl
mov
stc
jbe
cltd
enter
lret
inc
push
jo
ljmp
data16
mov
je
in
add
stos
push
lds
add
fsubs
xchg
fdivrs
pop
hlt
aaa
jl
dec
xor
stc
sub
lods
test
xchg
iret
jns
sbb
adc
sub
inc
int
aam
es
repnz
int
push
mov
out
and
xchg
leave
arpl
insb
lds
je
lods
sbb
dec
jg
mov
repnz
inc
movb
addr16
inc
or
clc
jb
ret
inc
adc
xlat
inc
mov
fs
out
js
dec
call
js
jl
push
jmp
pop
push
into
imul
mov
add
enter
mov
das
xchg
outsl
adc
pop
dec
int3
jl
dec
dec
pop
mov
inc
imul
mov
mov
ss
sbb
mov
jg
add
dec
imul
mov
out
idiv
adc
push
imulb
popa
insl
lahf
xchg
jp
xchg
jp
adc
pushf
fucomp
jb
inc
xchg
sub
mov
mov
jb
cltd
or
imul
pop
sub
jns
sub
inc
push
dec
dec
shlb
xor
lret
mov
mov
ljmp
mov
mov
jbe
lock
lret
movsb
and
jb
movsb
adc
enter
jp
pop
outsl
sub
imul
arpl
pushf
cmp
mov
aas
sub
data16
pusha
and
out
lea
bound
or
fs
imul
pop
sub
mov
mull
iret
ja
ret
aam
mov
cmp
or
lahf
popf
lahf
dec
fisubs
inc
iret
mov
xchg
out
sub
test
push
fwait
adc
push
and
outsl
and
fisttpll
js
and
int3
lret
mov
int3
or
fs
dec
fdivs
int3
sub
fadds
xor
out
out
sti
dec
std
mov
mov
fadds
add
subb
sbb
mov
stc
dec
out
mov
and
movsl
stc
stos
mov
xor
jle
data16
jmp
and
xchg
or
jb
xchg
or
jle
jl
or
jo
stos
and
jl
xchg
xchg
decb
dec
mov
dec
popl
stos
xor
or
jle
mov
jmp
dec
rcr
mov
mov
nop
adc
jb
sti
add
lods
into
pushf
fs
jbe
fstps
stos
dec
jecxz
cli
jne
int3
jmp
xchg
inc
cmp
in
inc
mov
mov
data16
mov
test
lods
dec
bound
jp
repnz
popa
ds
outsb
movsb
out
popa
out
mov
int3
jl
outsl
int3
out
sbb
outsb
jmp
das
push
dec
popw
lods
add
mov
mov
jns
xorb
adcl
and
xor
push
stos
mov
or
xchg
stc
sbb
popw
inc
jg
pop
test
cwtl
ss
sub
sub
aas
jb
xor
inc
jecxz
in
mov
cmp
inc
mov
enter
jmp
ret
cmpsl
push
cmpl
cmpsb
mov
jb
and
fs
mov
push
dec
cmpsl
push
xchg
idivl
js
sub
sbb
fimuls
repnz
icebp
fldenv
and
scas
test
imul
lods
pmaddwd
jle
or
outsl
sub
dec
add
sub
ds
jmp
je
rep
inc
mov
sub
cmp
jmp
call
adc
loopne
call
fs
popl
jo
js
jnp
jb
imul
or
popa
inc
mov
adc
xorl
sbb
jo
stc
das
sbb
movsb
jbe
jo
movsb
movsl
adc
inc
cmp
fcoml
es
pop
and
clc
adc
clc
icebp
push
in
pop
pop
push
push
outsb
pop
inc
or
jecxz
inc
call
jl
je
sbb
aaa
cmp
and
ja
adc
addr16
pop
mov
jp
sub
fs
cmpsl
repz
cmp
test
pop
lret
test
push
push
sbb
push
cmp
and
mov
aaa
sbb
cwtl
push
dec
in
inc
sbb
dec
dec
mov
mov
data16
imul
mov
and
js
mov
imul
cs
mov
out
std
dec
popa
mov
mov
jge
fwait
jbe
les
bound
xor
xor
sbb
ret
or
jge
and
arpl
pop
pushf
pop
jnp
or
lods
iret
xchg
adc
pop
xor
outsl
jno
imul
or
inc
sub
jo
push
and
xchg
inc
out
stos
gs
xchg
jmp
loopne
data16
mov
pop
mov
adc
push
stos
lret
or
int3
cmpsl
push
sbb
js
and
cli
and
cmp
jp
les
jbe
or
ficomps
pop
bound
xchg
sbb
dec
sti
push
pop
in
movsb
mov
jle
cwtl
inc
jne
ret
jbe
das
fstps
inc
mov
mov
jl
es
mov
shrb
shrb
fcmovb
divb
fcomp
movsb
adc
pop
cld
cmc
jb
lods
dec
fs
addl
nop
push
ja
imul
jp
data16
ja
roll
outsl
imul
outsb
imul
js
sbb
in
or
mov
movsl
nop
cmp
imul
addr16
mov
ret
xor
lret
leave
cmp
mov
out
js
add
divb
out
out
pop
ljmp
inc
add
arpl
cmp
imul
mov
subb
pop
nop
fs
cs
cmp
and
adc
int3
js
pop
jg
push
mov
test
ret
fdivs
push
lret
lea
mov
aaa
mov
xor
sub
mov
js
pop
icebp
shlb
lock
cmp
mov
inc
imul
aad
dec
sub
jge
sub
jnp
fildll
push
inc
mov
sti
sbb
and
sahf
mov
dec
aas
inc
dec
and
mov
lret
push
inc
push
jbe
xor
add
xchg
iret
inc
xor
jle
js
jp
je
and
lret
fs
lods
dec
mov
xor
cmp
push
inc
dec
imul
call
adcl
call
jl
imul
push
or
and
cwtl
mov
push
cmpsl
jnp
xor
and
jl
xlat
int3
dec
cli
in
or
popfw
add
stc
daa
cmp
jecxz
pop
xorb
loop
pusha
dec
push
xor
les
or
pop
paddb
xor
pushf
adc
lret
mov
js
in
mov
loopne
adc
arpl
cmp
ret
xchg
repnz
jl
lods
data16
inc
jl
pop
mov
xchg
sti
int3
pop
sub
cli
movsb
pusha
sbb
dec
adc
jne
stc
js
cmpsb
lret
xlat
pusha
mov
stos
xchg
shlb
test
jecxz
pop
adc
mov
mov
jp
fs
data16
add
ljmpw
xchg
cli
pop
bound
dec
jno
loop
jp
push
inc
jl
cmp
push
pop
push
fwait
push
cmp
out
mov
inc
sahf
sub
jne
lock
inc
pop
push
ror
xchg
add
push
test
jl
mov
mov
jb
mov
push
sbb
add
inc
pop
xor
sarb
dec
stc
out
adc
mov
jp
insl
imul
cmpsl
shld
xchg
lret
mov
outsb
push
xchg
adc
jae
sarb
dec
fmuls
mov
jge
push
xor
daa
pushf
rolb
push
mov
inc
cmp
es
sbb
jnp
mov
sub
pusha
sub
sbb
cmp
leave
jmp
pop
aaa
lock
cld
jl
push
aad
sbb
mov
xor
imul
shlb
imul
insl
aad
arpl
add
inc
out
sbb
push
push
test
out
jns
cmpsl
cs
loopne
xor
inc
fcomps
or
push
ficompl
jo
iret
jo
iret
ja
cmc
movl
roll
stos
aam
xchg
xor
xor
pusha
pop
add
loope
cs
dec
push
popf
pop
cld
insb
adc
outsb
cmc
test
shrl
inc
add
inc
mov
or
adc
jmp
jecxz
shll
sbb
inc
pop
push
mov
pusha
inc
adc
sahf
or
arpl
loope
sbb
test
les
in
jl
imul
adc
jl
dec
cmp
bound
insl
jmp
imul
loope
cwtl
sbb
sti
or
outsl
out
test
out
out
mov
jne
sti
mov
mov
popa
or
jge
adc
test
clc
and
pop
js
jne
sbb
jl
test
mov
cwtl
mov
jb
sbb
scas
fcomps
out
mov
cmp
mov
mov
push
pusha
stos
xor
arpl
pop
lcall
test
imul
and
fmuls
xchg
out
lock
outsb
aad
jle
scas
push
sub
lods
sti
push
pop
icebp
andl
adc
adc
test
sbb
mov
es
loopne
out
mov
insl
mov
adc
js
mov
pop
dec
outsl
xor
and
dec
cld
adc
xor
jg
or
fsubl
je
inc
adc
fs
out
outsb
mov
mov
mov
addb
adc
call
sbb
push
ficoml
xchg
hlt
scas
js
cld
xchg
fs
pop
jge
lods
in
jmp
incb
fimuls
push
je
lahf
das
in
inc
clc
mov
cmpsb
lds
sarl
outsl
scas
sbb
iret
out
out
xchg
adc
int3
pop
pextrw
data16
sarb
push
cmp
addr16
jmp
jl
jbe
mov
cmp
jp
jge
imul
test
gs
fwait
stos
inc
push
stos
fwait
enter
enter
mov
and
jmp
pushf
outsb
push
neg
pcmpgtd
imul
and
cmc
sub
xchg
push
das
adc
inc
or
mov
rol
aaa
minps
stc
shrl
jp
mov
mov
xor
adc
push
insb
xchg
xchg
sbb
inc
adc
arpl
scas
scas
push
stos
aaa
ss
in
inc
es
sub
subb
mov
xchg
jg
and
rcrl
push
push
adc
jmpw
rclb
mov
cmp
es
ret
in
jp
pop
sarl
imul
sbb
imul
inc
or
dec
inc
xlat
jp
outsl
sbb
fisubl
stc
push
insl
divl
loope
and
sub
xor
xor
rcrl
inc
pop
icebp
test
mov
push
outsl
mov
pmaxsw
outsb
imul
sbb
cmc
and
cmpsl
dec
xor
cmc
sub
xchg
stos
mov
insb
in
outsl
lods
pop
shl
outsb
stc
aam
insl
rcrb
jnp
sub
cld
or
xchg
orb
cmp
in
ficoml
outsb
and
and
pop
in
xchg
dec
push
inc
jbe
clc
pop
nop
ljmp
jl
enter
push
inc
fisubs
jle
add
stc
mov
adc
inc
push
fsubs
std
fs
sub
adc
inc
hlt
repnz
inc
fidivl
and
inc
andb
add
sbb
sti
popf
mov
inc
and
movsb
int
aaa
push
call
dec
fwait
pop
ljmp
out
das
sub
in
lea
call
popf
xor
inc
insl
test
sbb
inc
sbb
jecxz
sbb
pop
mov
mov
adc
outsb
pusha
lods
int
jge
ss
cmp
dec
int
dec
loopne
inc
push
test
sub
add
dec
test
push
jmp
lcall
outsb
sbb
data16
repz
xchg
pop
and
in
xchg
rcr
push
jle
outsl
pop
js
repnz
pop
push
xchg
dec
mov
stos
cmp
repz
push
add
fisubrl
dec
in
push
mov
pop
lds
jle
sbb
mov
std
push
dec
adc
add
insl
shrb
inc
or
sub
cmpsl
pop
mov
jmp
inc
outsl
and
lds
push
mov
fs
sarb
scas
or
jnp
or
les
push
stc
jne
cmpsb
je
subl
mov
push
pop
sub
mov
pop
push
shld
and
jmp
testb
mov
ja
mov
mov
insl
enter
int3
mov
cmpb
les
dec
ja
rcrl
fs
packuswb
test
pop
hlt
jl
pushf
jae
loop
sub
add
mov
mov
enter
sub
enter
call
aas
arpl
sub
addr16
and
sarb
sub
inc
push
cld
stc
je
inc
lds
movsl
notb
mov
sbb
xchg
sub
jmp
xor
inc
xchg
sbb
add
in
jmp
xlat
stos
xor
std
scas
pop
cwtl
int
xor
dec
push
xlat
stos
shrb
scas
cltd
jmp
cli
dec
jmp
lds
jno
sbb
int
lahf
inc
cmp
or
packuswb
out
stos
shrl
mov
push
inc
lea
sbb
jbe
outsb
sti
pushf
int3
lds
es
stos
mov
jmp
call
les
sbb
call
mov
sahf
push
cmp
sbb
rdtsc
nop
in
repnz
loopne
pop
insl
mov
cwtl
shlb
scas
mov
adc
fstpl
lret
movl
shll
sub
sbb
sbb
lea
fisubl
dec
fiaddl
inc
xor
lret
adc
adc
mov
in
stos
jge
xchg
in
mov
out
lods
xor
pop
push
xchg
push
shlb
imul
dec
je
lods
enter
xor
push
popa
lods
int
or
push
incl
popf
imul
test
call
or
pop
sbb
sub
pop
jl
popf
test
push
adc
aad
psadbw
sub
cs
adc
mov
mov
dec
fs
push
jge
adc
scas
inc
scas
adc
sti
pop
sub
test
inc
adc
push
pusha
mov
data16
imul
int
outsb
daa
cmp
popf
mov
and
test
sbb
xchg
in
pushf
les
push
iret
push
push
iret
iret
xchg
push
xor
pop
je
pop
test
out
push
loopne
popa
push
insb
repnz
push
loop
or
add
fs
out
jmp
lock
ret
cmp
cld
xor
mov
sbbb
jp
sbb
cmpsb
cmp
dec
pop
arpl
pop
sbb
jne
adc
out
xor
cmp
dec
sub
bnd
jl
cs
push
add
repz
jae
scas
adc
xchg
mov
or
scas
add
incl
mov
shlb
adc
lds
imul
jno
sti
je
cltd
out
aaa
int
pop
ret
mov
jbe
shlb
push
push
test
dec
mov
fs
decb
subb
repz
faddl
lds
imul
and
jle
jl
loop
cmp
std
jns
xchg
loope
outsb
xchg
out
out
mov
push
pop
xor
push
gs
outsb
loopne
fdiv
add
std
sti
sbb
cmp
push
fsubr
je
out
test
hlt
inc
aaa
loop
out
loopne
pop
les
nop
in
lret
or
push
dec
fs
add
pop
dec
jle
test
pop
imul
lods
dec
dec
mov
inc
push
xor
and
imul
fstps
repnz
sub
cmova
call
pop
xchg
jbe
cmc
je
enter
fldcw
cmc
xchg
mov
in
mov
popf
cmc
insl
mov
out
mov
xorb
or
leave
mov
sub
ja
cmc
lods
loope
and
stos
stc
xchg
popf
imul
fisttpll
sahf
sub
adc
aam
shll
or
add
pop
add
iret
inc
lock
xchg
jecxz
test
mov
jb
scas
outsl
jnp
push
scas
cwtl
mov
repz
dec
js
std
push
std
test
pushf
inc
iret
push
ja
dec
pop
imul
out
xchg
test
push
das
xor
mov
mov
dec
movsb
xchg
sbbl
sub
test
sbb
dec
sub
jb
stos
sub
outsl
sub
xchg
out
and
loop
dec
call
ljmp
ljmp
sbb
push
sbb
xor
mov
pop
rolb
rolb
out
sub
sti
push
test
cli
sbb
push
pop
scas
je
daa
cmpsb
or
mov
inc
mov
shlb
pusha
mov
into
push
int
xlat
popa
lods
dec
popf
xchg
fstl
popf
and
bnd
insb
lods
sbb
dec
xchg
outsl
fucomip
fst
in
push
push
fmul
dec
rcl
add
jle
je
pop
dec
loope
mov
pop
call
mov
cmp
aad
in
jo
paddb
loopne
pop
popf
sarb
xor
bound
lds
sub
stc
push
xchg
xor
nop
adc
shrl
fstpt
mulb
sub
xchg
movsl
xor
popa
push
ljmp
dec
dec
sti
sbb
sub
out
sub
cmp
cld
into
and
js
out
in
sub
mov
test
inc
jle
in
aas
or
add
cs
outsb
scas
mov
xlat
in
aas
jb
subb
cmp
dec
pop
jnp
addr16
sbb
jmp
and
paddq
sub
call
js
dec
add
or
aaa
outsl
add
push
test
out
push
push
das
push
jne
xor
dec
nop
jae
rorb
nop
inc
pop
icebp
dec
dec
inc
xchg
pusha
dec
repnz
imul
xchg
dec
inc
dec
jl
xchg
outsl
test
pusha
movsl
dec
push
push
xchg
lea
push
xor
ret
and
cmp
hlt
lods
inc
mov
outsl
es
cld
dec
fs
and
movsl
add
dec
shrl
and
mov
add
sub
dec
pop
cmp
outsb
enter
stos
xchg
inc
test
pop
scas
jle
es
inc
enter
aaa
push
xchg
sbbb
adc
and
sahf
mov
xchg
out
inc
movsb
sub
shlb
xchg
ljmp
aam
inc
xchg
mov
push
rcrl
mov
sarb
enter
sub
int
pop
cmp
pusha
int
push
sbb
jnp
xor
rclb
sbb
cwtl
add
push
xchg
pop
int3
repnz
and
dec
sbb
mov
pop
xchg
pusha
push
jne
jmp
lods
punpckhwd
push
sub
clc
popf
stos
mov
mov
in
movsb
mov
sbb
mov
icebp
outsl
xor
cmp
je
lds
daa
inc
popf
jg
shll
out
add
jnp
inc
mov
js
xchg
popf
and
mov
enter
dec
xchg
lds
int3
jecxz
sub
arpl
iret
call
les
cld
in
dec
popa
js
scas
incb
jmp
ss
xor
sti
xchg
add
xrelease
sti
or
ror
pop
xchg
imul
jbe
call
xor
xor
mov
add
adc
bound
data16
subb
mov
rorl
mov
mov
les
ret
pop
mov
cmp
or
cmp
pop
cmp
dec
pop
dec
push
je
lods
or
outsl
pop
fiadds
cmp
mov
scas
pop
inc
in
mov
movsl
xchg
push
lock
push
or
cmpsb
cmp
sub
pmaxsw
cld
sbb
mov
or
sti
or
out
fidivs
scas
test
xor
test
pop
sub
popa
push
push
cmp
daa
nop
dec
cwtl
adc
outsb
rcll
jp
test
mov
lea
mov
mov
popa
nop
out
jmp
sbb
sub
dec
imull
sti
mov
hlt
mov
cmp
cld
insl
mov
scas
or
mov
out
or
jnp
inc
pop
sub
les
dec
push
nop
into
and
in
popa
push
inc
ds
les
cmpsb
adc
inc
jnp
dec
outsl
dec
popf
js
fs
leave
lea
dec
xbegin
je
dec
ja
data16
push
xor
daa
out
push
pop
dec
enter
popa
jmp
dec
dec
dec
cltd
cwtl
dec
add
daa
cld
lock
dec
jle
in
test
mov
or
sti
xor
subl
xchg
xor
dec
and
pop
imul
frstor
dec
inc
pop
test
aaa
mov
xorl
jne
pop
xor
mov
xchg
clc
lods
mov
push
and
stc
decl
js
xchg
ret
cltd
pop
out
cmp
ds
sub
popf
dec
daa
jg
in
mov
lods
jb
sti
outsl
out
scas
sbb
pop
std
or
into
or
ljmp
dec
fisttpl
jo
cmpl
mov
adc
fsubrs
scas
mov
std
mov
cmp
popa
push
mov
xchg
test
sub
shrb
hlt
and
sub
or
aaa
adc
push
sbb
movsb
insl
stos
push
mov
jl
mov
xor
inc
es
mov
sub
bound
int3
fidivrl
push
ret
or
and
test
xor
lret
lods
ja
repnz
add
mov
sub
mov
sti
je
sbb
lret
xor
adc
loope
adc
stos
shrb
pop
and
sub
aaa
jns
sahf
shl
adc
imul
push
xchg
dec
mov
lds
jmp
imul
test
add
jne
std
out
adc
ret
je
mov
into
into
fisubrs
std
push
and
nop
dec
inc
adc
test
sbb
cmpsb
cmp
xor
test
and
mov
shl
jle
sub
in
jae
xor
addr16
jbe
or
inc
mov
push
pop
sub
out
mov
pop
pop
xacquire
shlb
in
cmpsb
inc
pop
scas
push
pop
pusha
inc
or
pop
sub
insl
lods
mov
push
adc
bound
push
jp
push
add
fs
push
sbb
and
daa
xchg
jmp
push
loopne
call
or
in
pusha
cmp
loop
insl
call
inc
jae
aaa
or
pop
mov
mov
mov
ss
notl
sbb
push
ficoml
push
add
fidivrl
jp
jns
bound
adc
jge
imul
mov
fidivs
push
adc
push
pop
jbe
mov
add
icebp
cmp
test
out
or
aaa
roll
insl
xor
sbb
sahf
in
in
or
testl
push
lahf
std
jmp
jp
ss
aaa
mov
add
lret
or
jno
stc
jb
dec
ss
jg
inc
xchg
insl
dec
sub
gs
or
dec
push
jns
lods
lret
xor
pusha
xchg
lcall
sahf
push
mov
jo
push
addr16
lret
das
iret
mov
cmp
adc
adc
push
mulb
adc
sarl
mov
cmp
mov
pusha
add
or
sbb
mov
xchg
cwtl
or
into
shl
ret
nop
out
cmpsl
adc
sbb
enter
xchg
jns
bound
add
xchg
fwait
in
leave
mov
outsl
imul
cmpsb
xchg
pop
inc
dec
push
lcall
jo
pop
pop
ja
add
sbb
adc
lds
fldl
rorb
add
push
cmp
pop
into
jo
cmp
push
inc
push
enter
xchg
int3
lods
xchg
xor
mov
out
xor
call
mov
popf
push
icebp
mov
xchg
add
incb
nop
pop
or
addr16
subb
call
scas
fs
aas
xchg
dec
adc
xchg
les
imul
adc
xchg
dec
adc
xchg
les
push
gs
mov
dec
dec
push
aas
pop
bound
int
mov
lea
pop
dec
inc
push
test
je
outsl
mov
push
test
lea
je
mov
insl
pop
pop
out
das
daa
negb
inc
and
insl
sub
push
dec
imul
jb
aaa
ds
ja
cmp
cmp
sub
or
ja
dec
into
pop
dec
ss
imul
add
xchg
lods
insb
vmulpd
xor
mov
sub
out
call
loopne
push
push
icebp
dec
test
cmpsl
push
fiadds
xor
dec
int3
test
inc
pop
mov
adc
and
jnp
test
js
ret
sub
xchg
int3
pop
xchg
aas
ss
xor
jnp
test
mov
inc
pop
in
mov
jno
rorl
shll
testl
cmp
dec
bound
mov
stos
sub
arpl
jge
mov
outsl
aaa
jp
push
pop
jmp
mov
ds
fcomps
xchg
in
push
repz
jmp
int
jmp
adc
loop
mov
aad
push
rol
ja
add
pop
mov
sbb
jno
stos
leave
outsl
pop
inc
loopne,pn
xchg
and
lods
mov
sub
loopne
dec
push
cld
je
mov
loope
jmp
lea
xchg
les
sbb
loope
ds
fsubl
sbb
cmp
cli
ds
pop
pop
dec
pushf
lods
push
or
sbb
aas
nop
jge
xchg
shrl
popf
scas
cmp
lahf
iret
push
test
xor
loopne
iret
test
cmc
mov
dec
clc
push
mov
mov
out
sub
test
xchg
push
sbb
push
inc
js
jl
ror
daa
pop
jl
jmp
push
add
dec
cmp
cmp
mov
xchg
cli
mov
gs
mov
inc
add
mov
push
xor
loope
test
adc
dec
mov
ljmp
stos
sbbl
xor
int3
aam
or
inc
and
mov
inc
cmp
push
inc
imul
adc
adc
push
push
jno
jge
rol
mov
into
stos
nop
out
int3
int3
adc
mov
ljmp
call
mov
jle
outsl
jmp
jg
xor
xor
xchg
sti
lds
cld
mov
add
test
in
cmp
std
dec
mov
lret
call
dec
in
les
gs
fmul
ja
mov
js
sub
daa
scas
dec
inc
cmc
mov
sbb
sbb
dec
add
push
add
cmp
lods
ljmp
cmp
mov
test
out
dec
lods
cmp
sub
insl
lahf
mov
outsl
jae
push
jmp
push
mov
inc
sub
jne,pn
call
or
dec
test
lods
cmp
ret
incb
popa
je
js
filds
stos
jbe
popf
outsl
push
mov
mov
test
daa
imul
pusha
lods
or
in
inc
inc
rcrl
out
dec
into
test
cwtl
lds
jnp
cmp
stos
push
cs
shlb
imul
push
icebp
dec
shl
out
mov
push
xchg
out
dec
sbb
out
xchg
cli
in
int3
push
popa
push
pop
ja
inc
dec
mov
in
sub
push
das
pop
inc
int
xchg
mov
and
push
mov
pop
test
test
daa
inc
xchg
inc
in
and
sbb
mov
les
xchg
test
shlb
int
and
mov
xor
js
cmc
lret
pop
add
std
addb
je
sbbl
inc
out
das
xchg
xchg
xchg
add
test
addr16
mov
inc
mov
cs
in
stc
pop
inc
xor
loopne
out
adc
pusha
cmpsb
mov
mov
je
cmp
adc
jno
push
imul
xchg
decb
jmp
out
mov
test
jmp
int3
repz
fstl
dec
daa
jl
bound
sub
ljmp
mov
mov
cmp
mov
or
test
in
das
xor
mov
test
fcmovne
xor
stos
or
pop
rcrb
js
les
sbb
pusha
mov
mov
rcrl
push
int
mov
push
into
xchg
imul
pop
pusha
sub
push
fs
jp
lock
mov
mov
lcall
scas
in
loop
fisttpll
cwtl
push
cmp
into
into
adc
jmp
notb
ja
icebp
cmpsl
or
adc
lcall
and
fnstsw
stos
push
cmp
out
xrelease
dec
mov
adc
adc
or
push
lds
add
mov
xor
movsb
pop
call
adc
cwtl
and
xor
cmpsb
sbb
sbb
imul
cmc
ljmp
add
adc
adc
sbb
pop
push
jno
jp
inc
push
in
pop
dec
push
or
inc
dec
push
push
iret
dec
inc
faddl
fs
fnsave
arpl
outsl
cmp
test
les
adc
arpl
loop
sarl
and
js
push
js
xor
movb
out
xor
es
aaa
in
push
imul
cmp
cltd
jbe
jmp
test
outsb
xor
sbb
shll
lds
jmp
cmc
int3
imul
push
out
sbb
mov
sbbl
and
cmc
sub
sarl
imul
lret
repz
sbb
cli
xor
push
out
repz
or
cmp
data16
ss
jecxz
or
loop
push
cmp
mov
push
scas
jecxz
arpl
cld
imul
and
adc
and
adc
adc
and
nop
jmp
ret
popf
test
or
dec
data16
push
out
pop
adc
sub
lock
push
into
pop
mov
xchg
test
xlat
daa
fsubp
mov
cld
int
test
inc
popa
sti
dec
lods
inc
inc
lds
push
out
adc
and
and
add
aad
cmc
xor
push
mov
stc
pop
pop
push
cmpsl
dec
mov
cs
cmpsl
pop
dec
out
loopne
clc
xchg
incl
aad
sub
pop
popa
or
mov
movb
push
movsb
dec
jns
cs
add
out
scas
stc
pusha
int
or
daa
cmp
lret
sbb
inc
jns
popa
sarl
mov
in
sahf
mov
je
out
mov
rorl
idivl
add
in
repz
dec
dec
mov
push
push
xor
cmp
mov
cmp
stc
mov
imul
pop
fldcw
dec
cmp
shll
mov
xor
int
js
lock
cmp
xor
insl
pop
push
in
dec
xor
xchg
xchg
pop
pop
dec
pop
cmp
data16
or
sub
dec
cltd
fcompl
adc
mov
push
adc
dec
lcall
push
mov
mov
cmp
pop
pop
and
fstpl
loopne
inc
loop
mov
pop
dec
call
dec
mov
aas
and
pop
ljmp
mov
xor
cli
sub
adc
mov
popa
in
or
xor
movsb
in
shlb
arpl
cmp
in
scas
int3
out
cwtl
jne
popa
sub
pushl
add
pop
dec
ret
xchg
scas
push
dec
xchg
or
es
sbb
fwait
stc
push
insl
push
cltd
and
imul
frstor
aad
aam
sti
pusha
outsl
aad
adc
movsl
cmp
pop
cmp
push
and
movl
out
and
and
stos
incb
bound
lods
add
add
sbb
aad
sub
jns
cmp
repz
push
cmpsb
mov
add
sub
mov
pop
in
ss
mov
push
cmpsl
ja
or
gs
call
fcompl
inc
xor
mov
sub
sub
xchg
push
out
scas
cmp
imul
gs
aaa
std
adc
aam
addb
repz
push
and
lods
sub
pusha
iret
sub
fwait
inc
mov
dec
mov
int
sbb
jmp
xor
sbb
aam
cmp
or
mov
pop
pop
jbe
push
cmp
scas
adc
xchg
or
clc
insl
mov
test
outsb
or
mov
inc
aaa
xor
cmpsl
jo
divl
push
jo
aad
aad
push
mov
sbb
jg
fwait
ljmp
in
mov
push
es
cs
mov
dec
add
cmp
push
or
inc
mov
mov
stos
test
cld
mov
data16
adc
dec
pop
fildll
xor
cmp
xchg
rcrb
xchg
pushf
dec
inc
push
insl
test
out
cmp
mov
rcl
loop
dec
jno
inc
jns
lret
das
mov
mov
outsl
outsb
iret
xor
cld
pop
bound
cmp
jae
ds
int
stos
outsl
sti
inc
stos
imulb
cmp
xor
inc
rcrl
pop
stos
ret
scas
inc
insb
les
mov
jge,pt
aad
xor
ja
in
add
negl
insl
xchg
jg
sbb
shl
xor
stos
sub
outsl
dec
hlt
scas
mov
loop
in
repz
sub
bound
pmulhw
cmp
xor
cmp
scas
sbb
jmp
or
sbb
adc
sbb
les
movl
push
jnp
cld
push
shlb
dec
hlt
push
mov
mov
test
pop
push
stos
outsl
dec
dec
xor
or
xorl
call
addr16
push
enter
sbb
outsb
cmp
dec
mov
adc
pop
flds
sbb
je
test
sub
adc
cmc
add
adcl
sub
lahf
push
pusha
mov
iret
dec
enter
sbb
aas
fs
sub
and
mov
shrb
out
inc
pop
adc
bound
sbb
es
adc
mov
cmp
js
xor
dec
rorl
mov
dec
mov
into
sbb
insb
mov
aaa
pushf
lods
repnz
push
push
das
mov
adc
insb
insl
jl
mov
out
sti
mov
inc
push
in
ss
jle
lods
in
jle
xor
imul
sbb
inc
adc
lret
sub
lods
scas
repnz
insl
out
sub
in
push
idivb
dec
jl
pusha
or
xlat
cmc
fs
les
call
jnp
sbb
jp
data16
test
adc
jae
cld
cmp
adc
cmp
or
push
jae
call
adc
loop
adc
mov
stos
hlt
pop
insl
cwtl
cmovne
aaa
stos
mov
jg
jo
mov
outsb
dec
pop
in
adc
jl
ret
add
das
test
sbb
mov
scas
hlt
test
lods
int3
and
dec
or
jg
lods
das
dec
sub
jnp
dec
xchg
mov
imul
push
ljmp
ja
dec
jnp
shrl
outsb
in
data16
es
jno
cmp
outsl
data16
pop
lods
in
imul
mov
mov
mov
jmp
dec
push
xchg
sbb
xor
jae
pop
sub
mov
repz
in
xor
lcall
cmp
movsb
dec
outsl
nop
jo
cs
sbb
pop
das
adc
scas
inc
adc
xor
sbb
test
addb
mov
pop
fs
stos
jmp
outsb
pop
es
test
sbb
int
jp
sti
xor
pop
outsb
cmpsl
mov
js
dec
jl
dec
mov
jl
cmp
pop
sub
iret
mov
imul
out
imul
das
mov
mov
mov
leave
add
inc
jmp
inc
sti
enter
lea
adc
cs
sbbl
movl
inc
push
outsl
cmp
jecxz
sbb
outsl
mov
loop
cmp
push
pushf
data16
orb
cmp
ja
sbb
ret
shrb
xorl
pop
cld
cmpsb
push
rcr
push
clc
dec
rcll
mov
incb
js
stos
clc
insl
sti
movsb
mov
adc
leave
cltd
cmp
dec
test
dec
lret
nop
out
pop
adc
and
sbb
push
mov
movb
les
movl
rcl
out
mov
push
aad
dec
rcrl
ds
jae
dec
hlt
cs
sbb
dec
addr16
dec
jge
sub
sbb
mov
fsubrp
sbb
and
mov
int
or
pushf
imul
scas
scas
lret
jl
rcrb
sahf
pop
mov
out
mov
push
sub
and
push
arpl
rcll
xor
mov
hlt
inc
sbb
xor
sbb
mov
cmp
fxch
testb
jmp
pop
cmc
aas
outsb
xchg
sbb
rcrl
out
scas
cmc
mov
in
and
or
inc
data16
sub
pop
jle
int
dec
mov
or
inc
adc
out
inc
sbb
push
or
es
idiv
xor
stc
ljmp
sti
ret
inc
push
cmp
leave
mov
lahf
pop
les
incl
mov
cmpsb
push
mov
outsb
inc
sbb
add
test
sbbb
test
aam
scas
adc
fs
mov
scas
jno
pusha
js
xchg
jb
add
rorb
je
sub
xchg
cmp
cmp
sbb
inc
jbe
inc
ja
ret
iret
xor
cmpsb
push
or
ja
jo
sub
notb
or
push
jnp
out
jbe
sub
or
cmp
hlt
jae
out
imul
cmp
cmpsl
test
daa
ds
sbb
lods
insw
gs
xor
cld
fsubp
addr16
insb
in
scas
adc
repnz
insb
jle
bound
xor
pop
cmp
imul
push
dec
int
push
and
or
cmp
push
pop
cs
or
call
adc
mov
insl
pusha
mov
hlt
scas
add
inc
jl
dec
aad
adc
or
push
js
push
dec
ja
out
xor
pusha
sbb
stos
fsubrl
mov
jo
xor
in
pop
mov
repnz
sarl
repz
out
outsl
call
int3
inc
jl
bound
into
pusha
push
sti
dec
insb
outsb
ja
adc
in
and
lods
sbb
insl
mov
outsb
in
push
or
inc
les
xor
repz
ja
dec
jl
decb
jg
dec
sub
jns
or
cmc
mov
dec
movsb
push
mov
xor
data16
ljmp
dec
bound
outsb
push
jne
lods
in
push
test
push
jl
mulb
dec
pop
ret
inc
jbe
pop
cs
push
sahf
dec
jne
out
push
sar
sbb
or
xor
call
stc
ret
inc
mov
inc
add
lret
movsl
or
in
call
pop
sub
stos
dec
fs
cmp
into
shll
imul
push
stos
ret
sub
push
push
adc
sbb
test
cmp
into
push
lret
xlat
add
dec
call
push
cs
cmc
cld
push
addr16
dec
popa
ja
in
push
cs
loopne
jmp
pop
lahf
popa
inc
call
cs
insl
jle
fstpt
cmp
cmc
inc
or
pop
push
popa
sub
jae
jg
fwait
outsb
sub
scas
jo
out
inc
mov
sub
push
inc
add
sbb
jp
mov
sub
mov
gs
inc
pusha
test
je
push
pop
sub
je
test
mov
js
inc
add
clc
sub
mov
push
cmp
cmp
sbb
push
ja
lret
mov
jne
loopne
stos
out
andb
sbb
mov
push
pusha
out
mov
aad
sub
jecxz
dec
adc
inc
sbb
pop
or
sbb
push
add
into
cmpsl
sbb
mov
pop
out
in
push
test
outsl
cwtl
inc
sub
sti
adc
dec
xor
sbb
mov
push
jecxz
or
jg
icebp
dec
imul
andb
dec
cmp
push
push
cmp
jb
sub
popf
push
xchg
divb
fwait
outsb
xor
test
dec
aas
jne
outsl
loopne
popa
inc
push
cld
push
pop
dec
popf
or
dec
mov
push
mov
js
jp
andl
imul
sbb
push
outsb
inc
sbb
pop
sbb
sub
inc
xorl
or
or
hlt
pop
movb
jge
xchg
sarb
sub
lret
inc
out
add
clc
cmpsb
cmp
jge
pop
pusha
pop
imul
dec
pop
lock
push
imul
sbb
push
jl
xchg
adc
cmc
cltd
jns
bound
push
bound
lock
out
inc
movsl
fsts
mov
in
daa
lods
inc
stos
sbb
imul
lret
add
or
add
push
outsb
add
rclb
or
lcall
sub
scas
xchg
jne
test
popf
jle
or
pusha
sub
sub
data16
aaa
imul
cmp
test
sub
jno
jbe
ret
scas
adc
loopne
stos
lods
cwtl
mov
out
push
or
rorl
adc
imul
cmp
roll
sub
rolb
rorb
popf
xchg
xor
lock
mul
jne
adc
popa
push
push
xchg
aad
cld
jg
nop
in
les
in
insb
xchg
ss
sbb
lahf
stc
sub
add
sbb
cmp
out
sub
stos
cmpsb
and
outsl
jae
cwtl
cmp
xchg
pusha
movsb
sub
sbb
call
das
js
xchg
push
mov
out
xor
paddw
jb
sarl
lret
js
stos
fs
adc
sub
data16
outsb
sbb
imul
xor
popa
jo
dec
cld
sbb
add
pop
dec
jp
push
cltd
ljmp
sbb
xor
adc
cwtl
cmp
dec
in
cld
and
test
pusha
outsl
cs
cs
fwait
sarb
gs
popf
leave
jmp
push
int
nop
pop
shll
add
jle
dec
repz
imul
push
push
clc
outsb
pusha
push
cld
mov
xchg
test
jmp
dec
and
cmc
push
push
mov
jns
cmpb
cmc
enter
cmp
loope
dec
jecxz
cltd
decb
loopne
repz
mov
push
adc
push
js
subl
lock
enter
loope
cmc
cmp
movsl
push
pusha
fwait
jo
inc
in
dec
fs
lods
js
aad
jg
dec
jne
je
cld
imul
cmp
imul
and
in
fsub
push
pop
fdivs
jl
dec
mov
lret
cmp
loope
xor
pop
insl
call
pop
jg
dec
push
test
sub
dec
push
movsb
daa
jg
dec
js
dec
ja
push
in
hlt
push
mov
xchg
mov
loopne
out
mul
call
call
jge
std
test
fdivrl
cld
pop
mov
movsb
cltd
mull
hlt
cmp
xor
mov
out
js
insl
out
cmpsl
imul
fldenv
imul
jmp
xchg
ljmp
cmc
imul
out
js
outsl
lea
and
fnsave
lahf
out
loope
loopne
pop
fs
iret
dec
push
jecxz
lret
loop
jnp
inc
inc
cld
fwait
fwait
adc
sub
inc
call
inc
mov
ret
pop
pop
out
call
test
cmp
popf
ja
add
out
sbb
rcrl
dec
dec
mov
fwait
fs
repnz
mov
je
stos
in
into
or
push
xchg
dec
cmpsl
popf
add
call
inc
and
adc
jecxz
les
movb
out
push
fimuls
or
push
nop
loope
sbb
int
jecxz
repnz
mov
push
mov
dec
pop
dec
mov
addb
push
test
dec
out
cld
pop
push
mov
bound
sbb
pop
mov
dec
and
in
testl
xchg
and
or
rol
dec
dec
outsl
loope
out
loope
ret
scas
mov
mov
xchg
nop
imul
mov
outsb
or
mov
imul
or
repz
mov
shlb
jp
push
dec
es
loop
in
imul
adc
jnp
call
mull
cmc
push
pushf
call
or
jl
cmp
testl
jge
shll
xchg
stos
pop
jb
jne
sbb
xor
inc
std
les
jecxz
test
in
push
dec
cwtl
sti
dec
in
dec
inc
cs
jg
in
push
adc
es
out
js
scas
dec
adc
cli
call
pop
push
cmpsb
mov
inc
push
inc
fwait
fs
push
dec
mov
sub
leave
fnstcw
and
cmpsb
dec
jp
stos
jae
lret
call
add
sbb
lods
popa
or
jl
popf
xor
into
add
cld
or
dec
jns
or
dec
pop
out
pop
jle
outsl
pop
insb
push
or
dec
adc
pop
outsl
xor
push
and
pop
out
movsb
adc
pop
popa
aas
jg
outsb
push
test
aas
outsl
je
ss
nop
outsl
xor
or
out
ja
push
outsb
or
outsb
add
outsb
push
push
outsb
add
addr16
dec
stos
loopne
inc
stos
lods
outsl
dec
add
jno
inc
popa
sub
inc
pusha
or
pop
push
or
lods
pop
outsl
add
push
push
add
lods
push
out
jmp
xor
cs
adc
mov
push
out
sub
jl
in
repz
push
movsl
fwait
adc
out
movsl
in
loope
mov
icebp
inc
inc
add
cli
xchg
and
in
test
push
test
stos
and
fs
mov
pushf
outsl
shll
cmpsb
or
scas
cmp
pusha
sahf
repz
push
dec
dec
dec
call
into
sbb
push
data16
cs
cmp
sub
or
pop
mov
sub
or
pop
mov
stos
or
pop
rcrb
sub
add
or
sub
mov
dec
decl
shrb
push
mov
arpl
xor
inc
loopne
jecxz
dec
movsb
or
cmp
pop
bound
or
mov
mov
or
rcr
pop
jecxz
ficoml
and
or
andb
sti
stos
and
or
cmpb
stos
and
mov
ds
cmp
cld
fsubrp
cmpl
sub
dec
push
cwtl
in
push
jecxz
cmc
scas
jp
jg,pn
pushl
jb
cs
enter
data16
ja
sub
das
pop
data16
movsl
subb
inc
dec
ds
lahf
dec
aad
cmp
fs
int3
scas
sbbb
test
or
dec
enter
jmp
jnp
js
push
push
mov
sbb
and
or
andb
sub
pop
dec
jp,pt
inc
dec
jns
mov
test
push
xor
sub
fdivrl
ljmp
clc
jae
push
push
ja
sub
stos
and
push
sbb
dec
sbb
dec
pop
add
sub
or
pop
sub
push
adc
jg
ja
orl
inc
rcl
push
pop
into
pop
push
pop
adc
inc
inc
jb
add
dec
data16
je
xor
dec
bound
ss
push
mov
movsb
mov
sub
arpl
insl
decl
jo
shrb
cmp
mov
ja
popa
mov
outsl
push
cld
clc
aam
push
js
ret
clc
pusha
fmulp
lock
movsb
or
dec
cs
jg
addr16
dec
cmp
adc
sbb
adc
into
leave
jnp
in
dec
mov
clc
imul
or
int3
add
inc
shlb
fsubl
faddp
jb
xor
shl
and
gs
out
pop
push
or
out
pusha
and
call
or
data16
or
orb
stos
and
or
mov
iret
outsl
sbbb
fildl
test
shrw
pushf
push
push
lods
pop
jg
andb
enter
sbb
data16
rolb
adc
arpl
fdivrl
scas
mov
cld
mov
pop
sub
mov
or
jge
sub
pop
repz
int3
outsl
cltd
dec
imul
cld
pop
je
push
int3
pop
adc
mov
imul
xor
pop
clc
imul
imul
testl
pop
bound
mov
imull
adc
imul
outsb
dec
data16
call
cld
test
mov
call
jg
fucomip
in
std
pop
test
je
dec
movsb
test
dec
pop
sub
add
jle
dec
addr16
push
jae
push
clc
pop
pusha
pop
outsb
in
jg
dec
or
push
in
dec
cmpsb
or
and
mov
fs
jl
lods
cs
outsb
jg
dec
dec
inc
test
out
add
call
ljmp
or
and
in
addl
cli
push
sub
adc
adc
test
sbb
aas
jbe
xor
je
loop
imul
add
outsl
fs
ret
hlt
shr
adc
xchg
test
add
adc
mov
insl
mov
into
add
sbb
lods
outsl
sti
or
push
or
push
orb
out
add
scas
or
popf
cmp
cmpsb
movups
jle
call
mov
cmp
pop
or
mov
dec
jecxz
icebp
stos
pop
repnz
mov
loopne
stos
inc
bound
inc
jge
enter
pusha
and
out
jecxz
nop
out
fnstsw
lds
xchg
movsb
sub
inc
scas
push
into
pop
mov
sub
add
repnz
xchg
cmp
hlt
xchg
push
subb
push
add
outsb
out
xchg
dec
mov
mov
mov
adc
call
add
jl
mov
stc
les
fisubrl
fistps
fs
xor
jmp
adc
pop
jb
inc
jl
fstpt
sbb
hlt
popf
in
inc
jle
in
pop
mov
adc
jg
pop
fdivs
jns
dec
js
in
mov
cli
dec
scas
xchg
push
and
mov
xor
or
mov
cs
jmp
jne
jo
int3
cmp
out
out
push
sub
adc
je
mov
fs
pop
scas
popa
arpl
ljmp
loop
push
lret
mov
mov
inc
rol
jmp
cmp
xor
mov
popa
iret
addr16
mov
sahf
fs
xchg
std
cltd
push
push
sbb
xchg
xor
dec
cmp
jl
mov
ret
inc
add
mov
loop
pop
in
test
aas
dec
add
xchg
pop
test
call
inc
cli
and
mov
shll
cmp
adc
lods
or
jmp
test
sarl
in
lret
jp
cwtl
jp
loope
notb
sbb
movsb
jge
imul
aas
cmp
clc
mov
stc
popf
and
test
test
dec
cmp
pop
push
in
jmp
nop
sub
lods
mov
add
jmp
add
xchg
loope
pop
dec
outsb
mov
in
dec
inc
or
dec
es
ljmp
test
pop
push
inc
dec
mov
jbe
stc
jecxz
sub
and
cmpsl
lret
pusha
outsl
inc
sub
sbb
sbb
ficoms
lret
daa
fs
inc
xor
outsl
xrelease
jae
test
fwait
mov
sub
lret
adc
add
arpl
or
sbb
sub
sbb
mov
test
fs
insb
testb
stos
pop
add
out
or
pop
inc
daa
xor
je
jmp
pop
pop
fsubl
js
pushw
push
loopne
stos
cmp
cmp
push
das
jns
pop
sbb
adc
xor
jp
and
add
inc
push
cmp
imul
push
dec
push
outsl
jno
int3
xchg
mov
lret
out
test
std
or
jns
addr16
pop
in
popa
je
mov
inc
inc
daa
jmp
leave
imul
jle
dec
ret
cmp
hlt
daa
pop
fisttpll
inc
daa
dec
fmuls
push
sbb
jle
sbb
pop
cs
jl
pop
sbb
sub
mov
movsb
cmp
pop
inc
clc
and
ja
inc
xor
in
pop
pop
sbb
andb
inc
in
rolb
insb
inc
push
out
mov
mov
inc
lret
lods
lds
adc
in
in
push
mov
in
loop
dec
popf
sub
mov
imul
imul
cmpsl
sbb
pusha
lret
xor
jmp
dec
dec
ror
inc
jg
cld
les
xchg
push
imul
fiaddl
and
mov
insl
sub
sub
cmpsl
out
sbb
xadd
jle
inc
jnp
sub
in
or
jne
loope
sar
inc
in
insb
ljmp
cmc
clc
xor
scas
stos
dec
aad
out
int
add
outsb
out
mov
inc
jge
je
stos
pop
dec
ds
mov
cmp
jle
scas
and
call
mov
mov
popa
hlt
inc
push
push
and
cmpsl
mov
lods
cwtl
imul
push
sub
add
sub
xor
cmc
scas
shlb
or
or
ret
fldt
lret
mov
add
jecxz
push
popl
push
jno
subb
out
mov
lock
inc
shlb
sar
xchg
fldcw
push
xchg
pop
lret
stc
xchg
nop
mov
test
ja
jo
lret
cmp
xor
popa
and
repz
dec
stc
cmc
sub
push
sub
aad
push
adc
test
dec
sbb
pop
repz
aam
add
fiaddl
repnz
shld
push
cvttps2pi
popf
sbb
jle
in
mov
shlb
dec
and
imul
fcom
jnp
or
shrl
sub
sbb
push
movsb
test
js
testl
insl
arpl
mov
cmpsl
jae
inc
adc
jmp
fdiv
addr16
in
movsb
cli
add
addr16
shrl
mov
push
in
outsb
in
in
or
shlb
out
adc
mov
ret
jmp
les
xlat
adc
jle
jp
dec
aad
in
push
pusha
dec
data16
into
mov
nop
xor
imul
add
test
outsl
adc
and
inc
sbb
xor
jbe
repnz
adc
or
xchg
or
scas
xchg
xchg
and
movsb
cmp
push
loop
loopne
jne
jge
mov
or
mull
mov
data16
push
and
and
pop
out
test
pop
dec
cli
fs
inc
and
lcall
int
jle
push
dec
enter
pop
dec
popa
pop
cmc
jmp
adc
in
in
stc
sbb
push
dec
mov
sti
movhlps
leave
add
pusha
xchg
pop
in
sti
adc
jl
outsl
mov
xchg
addr16
insb
or
mov
rorb
xor
adc
or
sub
and
adcl
sub
test
jg
insl
sbb
xor
mov
and
cld
sti
mov
mov
jl
xchg
mov
jp
cmpsl
loope
bound
lods
sarl
movsl
cld
test
cmp
or
js
lahf
je
andb
sbb
pushf
fisttpl
cwtl
xlat
cld
dec
addr16
test
bound
into
mov
or
adc
test
cmp
and
pop
and
ret
test
enter
mov
out
dec
es
sbb
adc
les
inc
lods
mov
inc
pop
pop
ret
adc
addr16
dec
adc
test
gs
sbb
test
call
dec
jl
dec
add
push
jnp
dec
jae
aam
sub
jle
repz
xchg
cmc
scas
cld
adc
sahf
call
call
sub
int
jp
jbe
or
add
out
ficomps
shl
je
mov
clc
int
mov
out
out
sub
mov
jl
nop
loopne,pn
xlat
dec
iret
jbe
pop
cld
test
jg
enter
addr16
aaa
jae
xor
pop
sub
mov
jo
imull
cli
out
jl
dec
xchg
adc
mov
test
pop
cld
jmp
in
repz
mov
sbb
adc
fwait
ja,pn
dec
outsl
adc
inc
cmp
xor
fmul
stos
jns
fists
stc
fcom
lret
jmp
in
pop
test
cli
imul
xchg
and
loop
iret
sub
push
jg
push
or
cwtl
xchg
xlat
jge
xlat
scas
fcom
jmp
push
les
clc
jo
ret
xor
ret
stos
pop
jmp
mov
mov
scas
dec
repz
sub
xlat
push
xor
lret
and
int
adc
repnz
sbb
in
cwtl
xchg
jle
cmp
lds
jbe
mov
stos
or
or
sbb
dec
test
pop
xchg
ja
adc
jp
xchg
xchg
push
jmp
push
pusha
sub
xchg
out
pop
lock
mov
popa
ret
pop
sub
inc
jne
or
mov
hlt
adc
fisttpll
ror
cmp
les
inc
out
test
or
test
dec
hlt
inc
les
sbb
dec
sarb
loop
lods
mov
cwtl
xchg
enter
punpckhbw
push
fnstcw
sub
mov
sbb
out
test
fs
push
sbb
imul
mov
xchg
pop
pop
xchg
in
sub
lods
inc
js
add
outsl
mov
mov
dec
push
push
pusha
call
mov
enter
addr16
scas
ss
jge
sub
adc
stos
movl
cmp
in
nop
mov
data16
loope
jo
pop
mov
sbb
repnz
pusha
push
outsl
xchg
test
stos
frstor
sbb
cmp
mov
outsb
loopne
add
roll
decb
nop
cmp
stc
lods
cmp
push
jg
xor
push
xor
movb
dec
jp
xchg
je
adc
in
mov
dec
mov
jmp
sbb
add
test
out
xor
outsb
sbb
and
rcr
sbb
sbb
push
and
xrelease
aas
or
shl
push
imul
cmp
jne
test
lods
xchg
fdivl
sbb
scas
je
popf
movsl
push
out
call
das
addr16
push
je
and
or
cmp
or
loopne
scas
pop
cmp
shll
ss
or
xlat
jnp
dec
and
lods
cltd
movsl
cld
dec
xchg
jnp
cmp
add
pushf
xchg
dec
add
jmp
push
ljmp
imul
mov
cwtl
dec
push
outsl
outsl
cmp
dec
je
enter
mov
insb
inc
dec
jp
mov
insl
sysenter
fwait
arpl
pop
adc
shl
pop
push
xchg
imul
cmpsl
test
jns
fistpll
clc
add
push
loope
cmp
stos
xchg
out
shlb
xchg
int
imul
xchg
popf
shrl
outsb
pop
in
sbb
imul
push
mov
pop
push
push
mov
imul
hlt
or
add
add
pop
push
sub
xchg
and
pusha
scas
adc
and
dec
lods
cmpb
ds
test
data16
jns
xchg
ja
push
fadds
jge
mov
sub
inc
dec
ss
jbe
dec
add
jmp
push
push
xor
aam
dec
in
pop
xchg
ret
jg
or
add
dec
push
and
add
notl
mov
or
xchg
sub
jmp
dec
movsb
jle
mov
adc
mov
and
inc
in
mov
push
dec
pushf
mov
xor
ss
lret
and
inc
cli
jp
arpl
pop
das
stos
andb
lret
popa
lods
sti
js
xor
cmp
cmp
aam
ret
mov
jp
mov
mov
jb
mov
hlt
pop
sub
subl
cltd
pop
outsl
scas
je
mov
dec
pop
nop
data16
jmp
adc
xchg
cs
xor
or
mov
outsl
stos
incb
mov
sbb
xchg
lds
xchg
push
pop
jl
ret
mov
or
mov
imul
sub
into
pop
pop
nop
loope
lret
outsb
testw
jnp
xchg
adc
nop
or
imul
imul
jno
loopne
adc
out
iret
push
mov
dec
sub
subl
pop
sbb
fstpl
or
sbb
stc
mov
xchg
lds
push
lret
jg
jl
inc
sbb
fcmove
fcomi
gs
pusha
fnstsw
xchg
cmpsl
pop
dec
ds
lods
inc
sbb
sbb
in
mov
lds
stc
fisttpll
iret
pop
lret
ja
jno
push
adc
movsb
fst
shrl
outsb
adc
sbb
pop
cmpsl
sbb
cwtl
int
scas
mov
or
jg
in
in
lods
imul
insb
push
pop
enter
adc
or
inc
jecxz
fwait
out
les
mov
add
xchg
sbb
dec
add
cmc
scas
popf
push
jmp
loope
jmp
xor
int3
data16
aam
cmp
mov
push
sub
add
add
ret
sub
sbb
adc
cli
test
bound
push
pop
sub
incl
sub
cmp
mov
push
mov
insl
xor
xchg
in
cld
popa
jl
or
adc
xchg
cwtl
push
fidivl
mov
cmp
mov
cld
inc
mov
insb
enter
dec
icebp
divl
repz
or
xchg
or
add
in
in
add
les
add
lock
pusha
xchg
push
lock
aad
ret
cmp
bound
mov
fs
dec
push
imul
movsb
in
jbe
aas
gs
test
push
dec
pusha
lods
cwtl
hlt
test
idivb
jp
push
or
xchg
fisubrs
sbb
outsb
or
push
loope
aad
lahf
cmpsb
mov
mov
xchg
inc
push
sarb
shll
dec
scas
scas
xchg
pop
lret
push
jmp
outsb
mov
jbe
mov
jle
cmovle
icebp
das
leave
jmp
cmc
sti
lret
inc
lahf
inc
jbe
inc
rolb
daa
or
jp
les
dec
jb
je
or
cmpsb
aas
cmp
fistpl
mov
cmpsl
repz
mov
jl
inc
loopne
inc
or
dec
bound
mov
aas
dec
les
hlt
jp
sti
mov
test
inc
addr16
mov
inc
push
cli
js
jle
out
leave
outsb
iret
scas
mov
inc
jae
js
adc
clc
fcoms
sti
mov
add
xchg
ret
add
mov
xchg
ret
or
js
fs
iret
mov
loopne
shll
daa
inc
in
mov
mov
fmul
cmc
jae
adc
call
jge
push
mov
jle
cmpsl
rorb
scas
outsl
fstl
dec
outsb
movsb
xor
pusha
or
es
pop
and
push
pushf
fistpl
xchg
fs
jmp
outsl
sahf
xlat
outsb
or
clc
lret
inc
and
xchg
sbb
sahf
scas
mov
adc
xor
shll
fldt
test
hlt
bswap
in
push
daa
enter
mov
aas
xor
repz
xchg
in
mov
adc
push
inc
sub
data16
and
jp
rclb
mov
and
cmpsl
sub
cli
cmc
test
mov
mov
repz
ds
inc
pushl
cwtl
push
fs
arpl
bound
lock
mov
imul
sbb
lcall
lahf
or
mov
test
cmovge
mov
shrb
lock
add
pop
lret
sahf
rcrb
add
stos
push
mov
ja
pop
je
shll
and
xlat
repnz
lcall
xor
jp
aam
out
push
test
lcall
inc
mov
and
mov
addr16
sub
lret
adc
cmpsb
outsb
cwtl
out
xchg
rcll
popa
lret
mov
insb
das
sbb
les
lods
sub
int
adc
test
cmpsb
add
dec
ss
in
lcall
and
push
sbb
add
cltd
push
fisubrl
les
fadd
shl
xchg
push
inc
nop
ret
jns
lret
push
xor
fldl
push
stos
arpl
pop
shll
push
ss
sti
xchg
and
gs
cs
outsb
imul
into
inc
and
cmpsl
adc
shll
pusha
test
nop
push
stos
and
jl
aad
daa
inc
inc
scas
xchg
jg
jp
incl
lea
jg
sbb
xchg
aad
xor
mov
neg
inc
gs
ja
inc
and
jnp
xchg
out
sbb
movsl
mov
sbb
pusha
mov
inc
and
and
and
arpl
pop
jl
jbe
adc
lea
fimuls
push
push
dec
aas
fdiv
jbe
cmp
test
cmpsl
add
xchg
ds
mov
outsl
cmpsl
dec
out
repz
dec
outsb
xchg
adc
leavew
gs
test
cmp
lcall
push
fs
rolb
popa
push
aas
sub
outsb
into
repz
pushf
notb
dec
or
xor
out
or
xor
dec
mov
xchg
test
cmp
sbb
test
shl
in
imul
rorl
inc
iret
mov
sbb
stos
sub
add
sbb
sbb
cs
ret
sbb
sahf
imul
jecxz
dec
test
push
jge
push
inc
lods
inc
dec
sub
in
fdivrs
int
inc
aam
mov
lods
xchg
cwtl
cld
ffree
inc
or
adc
or
dec
jmp
and
add
ret
cmovge
adc
enter
mov
xor
mov
mov
mov
and
xchg
inc
sti
cltd
fildll
mov
and
mov
outsl
sub
pop
adc
lahf
addr16
dec
pushf
scas
sbb
add
sub
inc
mov
into
sahf
xor
and
add
and
out
int3
bound
mov
cwtl
popf
stc
mov
mov
inc
outsl
mov
stos
inc
aad
sub
jbe
cmp
xlat
aas
xor
pop
into
scas
movsb
icebp
mov
ljmp
mov
mov
mov
jl
popw
cmpsb
push
insl
cli
cmp
mov
inc
fmull
add
ss
movsb
push
mov
mov
and
popf
movsb
out
dec
and
jl
cs
cmp
dec
cmpsb
jg
xchg
push
stos
das
and
xchg
or
push
arpl
pop
imul
push
dec
data16
or
js
push
sbb
mov
jp
outsb
clc
lea
iret
std
out
mov
xchg
xor
test
inc
stc
push
adc
stc
popf
add
das
push
clc
subl
sbb
jns
sbb
push
out
sub
mov
sub
cli
out
jecxz
in
shrl
mov
nop
pop
cmc
test
xchg
inc
aam
stos
dec
jl
movsl
dec
data16
inc
shlb
dec
jp
push
repz
pushw
jecxz
sub
daa
adc
in
cmpsl
loope
out
into
popa
in
pop
inc
popa
cmc
scas
mov
sub
push
jp
scas
push
out
lock
adc
in
sub
mov
cmpsb
icebp
or
shr
shrl
enter
fwait
mov
pop
sbb
loope
push
lcall
enter
into
pop
movd
sub
dec
cld
or
or
push
inc
repz
add
cmpsb
daa
insl
aaa
sti
aaa
jle
jg
adc
loopne
push
cltd
clc
out
scas
ja
dec
stos
dec
or
add
scas
lock
pop
lcall
cmpsb
fistl
out
push
ficoms
ficompl
ljmp
cmpsb
insb
fwait
out
scas
push
sub
xor
outsb
mov
mov
lea
dec
push
stc
sbb
sbb
ja
es
daa
cs
in
sub
inc
cld
add
or
lods
mov
push
das
les
or
add
jp
sbbl
out
js
sbb
gs
out
adc
mov
aaa
test
out
clc
push
mov
mov
in
movsl
push
outsl
jns
adc
pushf
lret
adc
mov
push
sub
ss
or
cs
lcall
mov
inc
test
xchg
inc
enter
insb
out
sbb
int
push
insb
call
adc
mov
mov
xchg
pusha
mov
adc
push
nop
jl
outsl
adc
jb
pop
xor
jmp
pop
bound
push
fldpi
ss
jno
or
js
push
int3
aam
jp
jp
jnp
pop
stc
inc
sti
jge
xchg
or
push
dec
gs
dec
shlb
add
push
mov
aam
and
pop
jl
repz
int
push
ret
adc
and
push
repz
xchg
inc
fs
xlat
lods
dec
imul
shl
sub
adc
mov
je
test
jp
loope
out
inc
shlb
int3
adc
or
lret
inc
outsb
psrad
sub
lds
js
cmp
adc
adc
jae
insl
push
loope
cmpsl
hlt
xchg
test
push
mov
and
xor
inc
data16
add
cmp
packssdw
dec
outsb
mov
pop
testl
jae
int3
leave
repz
scas
shrl
jb
gs
push
divl
fs
sub
jg
mov
popf
sub
mov
fisubrl
mov
movsl
push
inc
insl
sahf
cmp
xor
push
ror
imul
xchg
or
scas
lret
ja
outsb
jle
das
ljmp
push
jne
je
inc
or
or
jl
dec
add
pop
xchg
fwait
cmc
out
sbb
out
mov
cmp
sub
fdivrs
push
jno
xor
pop
packssdw
xchg
cld
enter
imul
dec
test
xor
mov
xchg
movd
je
xchg
mov
jle
push
repnz
xlat
pop
sbb
cwtl
push
clc
pop
test
rolb
leave
push
dec
out
lret
cmpsb
push
sbb
mov
cmpsl
sub
imul
fs
or
bound
test
push
ljmp
jns
mov
push
dec
bound
sbb
fstpt
lods
push
sbb
push
mov
jg
jecxz
mov
pop
push
popa
fs
popf
lods
mov
sti
out
int3
or
push
sub
adc
jo
loopne
loop
scas
std
sbb
sbb
push
jno
stos
cmc
mov
in
imul
jmp
movsb
sahf
loop
in
adc
lods
pop
push
shrb
testl
cmc
clc
sbb
sahf
xchg
jno
jle
mov
out
fwait
loopne
or
orb
mov
out
lock
iret
mov
call
in
sub
or
adc
mov
jb
inc
test
rcl
jno
sub
mov
and
stos
jne
push
es
jecxz
sti
xchg
mov
dec
in
gs
subb
cmc
mov
xor
push
dec
push
cmp
out
cmp
ret
imul
in
push
insb
jp
idiv
sub
push
jns
cs
push
mov
fs
loope
xchg
clc
sbbl
rolb
jnp
push
dec
cmovl
push
ja
sub
jmp
fwait
insl
popf
adcb
movsl
data16
ret
aas
clc
sbb
dec
repz
xchg
jns
dec
xchg
cli
aad
notb
sbb
jmp
dec
iret
cwtl
pop
adc
loop
xchg
dec
cli
or
mov
lret
sbb
lret
cmpsb
pop
pop
push
mov
jne
rcl
fbld
adc
add
jg
hlt
pop
mov
pop
sub
cmpb
inc
cwtl
sbb
mov
cwtl
fisubrs
adc
sbb
add
fwait
xchg
mov
lret
pop
mov
inc
inc
lret
xchg
pop
cmpsb
loopne
jns
mov
mov
fisubl
je
xor
movl
lret
in
aam
sub
xchg
or
or
xchg
stos
sarb
lcall
adc
out
lcall
push
ds
in
or
pop
pushf
lahf
outsl
loopne
sub
int
das
in
ja
xor
cmp
sbb
push
arpl
int3
leave
jcxz
jp
xor
daa
cs
sbb
shrb
inc
stos
dec
push
into
addr16
pop
sub
sub
mov
push
cmc
adc
push
push
fs
fs
xchg
xchg
jp
outsl
xor
push
add
dec
mov
ret
push
ljmp
les
lcall
pop
xchg
sub
popa
mov
iret
rorl
dec
xlat
push
sbb
repz
jnp
cwtl
inc
adc
loop
dec
push
jb
lds
adc
dec
and
fs
sub
ret
cmp
stc
hlt
in
jbe
imul
xor
push
incl
adc
mov
cli
addr16
out
inc
ss
add
sub
xchg
call
into
pusha
adc
pop
clc
rorb
jne
lods
sbb
shrl
dec
adc
arpl
jmp
and
mov
push
ret
jl
or
jne
fsubrp
fmuls
mov
fs
dec
add
psubb
fnstsw
fldt
mov
arpl
mov
daa
jp
popf
aas
jl
push
mov
leave
roll
outsl
rclb
sahf
sahf
inc
add
subl
push
push
aas
mov
lds
dec
jmp
push
int
sbb
unpcklps
pop
shrl
dec
dec
in
dec
push
inc
jp
inc
test
imul
repz
pop
iret
je
xor
xor
addr16
insl
ss
jae
into
fmuls
lds
mov
ja
mov
aad
dec
pop
mov
xchg
int3
das
sub
dec
inc
andl
xor
jb
repz
in
xchg
test
les
inc
enter
popa
mov
aaa
in
pop
jge
add
imul
xchg
popa
enter
sbb
fs
sub
fs
inc
outsw
cmc
stos
inc
outsb
dec
andb
mov
imull
std
sub
dec
movsb
jp
adc
sub
jp
das
test
fwait
cmc
roll
dec
repz
iret
sbb
popa
es
mov
jbe
ljmp
sub
jge
popa
sbb
and
dec
ljmp
xlat
or
stc
int3
cmp
mov
pop
std
out
cmc
push
xor
pusha
add
mov
push
pop
jp
jb
and
pop
fwait
jmp
dec
xchg
hlt
sahf
pusha
pop
lea
sbb
pop
shlb
fwait
arpl
fidivrs
les
adc
and
dec
pop
jg
fldenv
mov
cmc
lock
push
cmpsl
jg
inc
insb
mov
mov
inc
push
imul
push
loopne
test
js
jns
fsubs
loopew
xchg
sbb
jo
gs
xchg
jo
iret
int3
loopne
dec
pop
and
repz
ret
sbb
mov
xlat
hlt
jnp
movsb
or
sti
sbb
shr
xchg
scas
out
jo
js
fs
insl
jns
movsl
in
pop
add
js
add
cli
lods
xchg
dec
inc
imul
imul
in
js
sub
loop
push
pop
pop
dec
cmc
popa
adc
popa
sub
push
dec
repz
push
call
test
out
sbb
and
jne
rcl
push
cld
data16
xchg
jns
ficoms
into
insl
jnp
lret
subl
mov
arpl
push
jno
mov
lret
ss
adc
mov
mov
cwtl
push
lds
dec
lods
stos
repnz
popf
movl
mov
and
inc
and
cwtl
imul
les
data16
clc
aaa
jnp
xchg
sbb
push
pop
mov
jg
cmp
dec
daa
xchg
out
xchg
pop
inc
ljmp
or
cwtl
mov
ja
js
stos
jg
push
ret
mov
jge
insl
loopne
xor
push
sbb
dec
stc
dec
pop
leave
dec
mov
push
int3
es
push
push
add
lahf
filds
pop
adcl
int
push
mov
push
std
stc
dec
lds
pushf
out
dec
xor
xchg
push
sbb
mov
stos
and
bound
adc
repnz
movsl
and
lcall
test
inc
idiv
cs
cmp
lret
lret
and
and
fs
dec
dec
cli
sti
or
xchg
inc
sbb
ljmp
sbb
inc
lea
sub
sbb
inc
mov
outsl
cmp
mov
mov
stos
leave
in
push
pop
mov
stos
sub
push
and
fwait
scas
loop
xchg
scas
xlat
jmp
lods
jecxz
out
inc
clc
inc
mov
in
repz
cmc
das
lret
lea
clc
sti
cwtl
add
mov
das
jle
push
add
fs
pop
cmp
mov
xchg
jle
pop
mov
outsl
in
xchg
xlat
mov
cmc
mov
cmp
adc
aas
loope
dec
ljmp
xchg
mov
adc
out
push
js
fsubl
loope
dec
clc
push
inc
arpl
xor
scas
paddsb
mov
rcrl
xchg
aaa
inc
call
add
sub
das
push
lret
int3
inc
ret
aad
aam
and
andl
cmpsl
cmpsb
into
push
or
mov
push
ja
jp
cmp
call
cld
xor
fs
jl
loopne
dec
sub
mov
cmp
out
and
imul
test
pushl
push
call
dec
and
mov
ljmp
sbb
mov
push
xchg
adc
jp
test
pop
fiaddl
test
stos
sbb
dec
ret
add
jbe
fdivrl
xor
push
jl
leavew
dec
xor
jb
out
and
fcmovne
adcl
inc
je
dec
ss
sub
push
push
mov
cmp
aad
jg
dec
and
ffreep
cmp
ret
adc
adc
loope
ja
pop
insl
xchg
sub
test
arpl
in
push
add
lods
sahf
repz
adc
int
jg
sub
cmpl
out
sarl
mov
push
add
dec
or
and
cld
lods
and
test
xor
enter
scas
pop
movsl
cmovs
call
adc
push
lret
rorb
adc
jne
imul
addr16
cmp
enter
fwait
outsb
icebp
push
jmp
xchg
ja
out
andl
mov
sbb
iret
push
dec
outsl
lcall
mov
and
jo,pn
test
cmp
xor
inc
sub
and
aas
push
inc
xchg
in
outsb
leave
sub
sub
lret
xorl
adc
loopne
jmp
jo
int
jg
enterw
and
test
into
push
jp
mov
fs
xlat
das
jg
int3
push
and
mov
call
sbb
stos
fs
in
dec
mov
jecxz
adc
es
rcpps
adc
jmp
inc
shll
jge
in
adc
mov
scas
mov
xor
je
adc
cli
ret
cmpsb
movsb
idivb
adc
subb
push
sbbb
cli
pushf
ss
ja
outsl
cmpsb
mov
mov
popa
addr16
fbld
mov
es
stos
clc
repz
mov
push
dec
jbe
mov
pop
mov
js
fsubl
jns
das
in
and
or
jmp
std
inc
sbb
stos
sub
sbb
sbb
adc
or
lea
cld
movsb
test
sbb
adcl
les
fldl
dec
mov
cmpb
push
xchg
jl
cmp
lea
fwait
and
lds
fwait
jo
popl
mov
jo
sbbl
mov
aaa
mov
aam
push
fmuls
xchg
dec
pusha
and
rclb
mov
loop,pn
sbb
sub
in
add
das
stos
movsl
sbb
lods
adc
dec
les
out
inc
or
sub
jg
loope
sub
cs
cs
sub
repnz
jb
push
push
pop
mov
rorb
rorl
dec
mov
test
repnz
movsl
xor
movb
movsl
dec
jecxz
mov
stos
xchg
movsb
test
dec
sub
pop
pop
and
movsl
fcmovbe
adc
pop
inc
out
test
mov
int3
inc
in
imul
hlt
data16
xor
loope
int3
jb
mov
jne
je
sub
cmpsb
ljmp
xor
arpl
popf
mov
pushf
jecxz
dec
pop
sub
dec
int3
cmpsl
push
lahf
push
pop
aas
fdivl
inc
call
sub
sbb
cltd
movsb
cltd
fidivs
sti
mov
or
sbb
xor
push
mov
out
movsl
pusha
dec
cmp
test
xchg
cltd
jns
jp
mov
mov
sub
push
scas
fisttpll
mov
fstpt
sbb
or
mulb
mov
repnz
aad
push
cmp
pop
cs
test
testl
clc
cmp
movsb
js
insl
xor
sbb
and
push
imul
fsts
mov
in
push
les
adc
mov
imul
push
incb
sub
psubq
test
aas
and
add
ja
jmp
retw
clc
mov
psrad
mov
pop
cli
inc
fildll
cld
fsubp
aas
pop
sub
call
jbe
pushf
jae
dec
jno
sbb
mov
stos
push
jp
dec
aam
jp
xchg
dec
imul
jbe
push
xchg
or
adc
jbe
jl
sub
in
dec
inc
pop
push
xor
les
addr16
jl
dec
push
dec
rcrb
subb
sbb
aaa
fcoms
inc
inc
shll
test
scas
popf
mov
pop
xorl
cmp
mov
dec
stos
adc
imull
pop
ret
ret
loop
push
and
lds
or
mov
insb
dec
jmp
jp
mov
stos
push
popa
popa
sbb
mov
add
out
dec
testl
push
rcll
cs
das
sub
mov
dec
cmp
jbe
into
jo
sti
xchg
xor
cmp
and
jne
push
aad
out
scas
sub
xlat
jae
push
rolb
pusha
lods
push
call
push
jne
jne
js
fstp
popf
out
outsb
les
ljmp
pop
js
jp
je
popa
cmc
sub
mov
cmp
sbb
leave
ss
jg
insl
push
popa
aad
rorl
pop
cld
testl
aaa
inc
lods
loope
nop
insb
aas
enter
add
leave
push
xor
dec
cmp
mov
ljmp
fwait
cld
xor
dec
mov
jle
ss
into
dec
jl
and
movsl
sbb
sbb
shl
stos
xor
shrl
pop
stc
dec
imul
mov
pop
addr16
push
xor
icebp
pop
cwtl
sub
cmp
cmp
test
xchg
cwtl
add
xor
movb
xchg
aam
jle
out
loope
movsb
jns
aad
jl
roll
add
pop
jbe
hlt
loop
jns
js
push
mov
in
or
into
imul
repnz
fwait
movsl
rcll
inc
inc
sbb
jnp
mov
mov
sbb
ja
outsl
sub
jp
xor
or
mov
add
loop
sbb
mov
fsubrp
adc
xchg
mov
mov
int3
xor
inc
mov
ja
dec
int
fs
cmp
xor
lret
jne
mov
orb
rclb
dec
add
retw
aad
cmpsb
js
pop
dec
inc
pop
jge
inc
dec
jecxz
idivl
addr16
dec
adc
sub
pop
ficomps
or
inc
incb
es
in
loope
enter
fs
sub
cmp
dec
pusha
int3
and
jns
inc
and
mov
lret
push
imul
xlat
sbb
int3
or
pop
pop
sahf
mov
daa
sub
ljmp
inc
jnp
ljmp
cmc
scas
nop
stos
rclb
les
ret
aas
outsl
popf
int
sbb
sub
dec
fs
out
mov
pop
std
jmp
add
push
ja
xorl
movsb
hlt
push
mov
inc
pop
imul
in
fwait
test
ljmp
add
int
fs
leave
in
push
mov
adc
test
xor
sbb
insl
inc
out
in
xchg
pushf
lret
ret
sub
jo
cwtl
add
adc
or
pop
jo
test
xadd
add
jl
aam
stos
call
popa
inc
adc
lds
dec
jnp
sbb
into
cmp
cmc
sub
loope
sub
enter
popa
cld
iret
out
push
push
shll
inc
pushf
jge
cmp
or
dec
rolb
adc
fwait
enter
lds
pusha
push
mov
arpl
psrld
cmpsl
addr16
adc
jbe
int3
mov
jbe
cld
dec
adc
movsb
gs
pop
mov
shll
das
pop
xchg
sub
dec
sub
push
dec
push
push
hlt
cs
jmp
mov
lds
pop
jo
pop
inc
pushf
or
aad
fwait
enter
push
in
rorb
inc
xchg
dec
adc
push
jl
push
sbb
je
xor
cmp
mov
cmp
mov
cwtl
mov
jns
pop
test
in
decl
int3
pushw
das
jl
cmp
bound
sub
sahf
stos
xchg
cwtl
sub
ret
sub
cmc
mov
dec
stc
push
fidivrs
fsubrs
mov
fcompl
jb
pop
out
mov
pop
jmp
add
lock
inc
mov
inc
in
sbb
lret
add
cmp
sub
sbb
subl
ret
les
pop
push
fisubs
jp
mov
push
pop
adc
or
gs
cmpl
jp
js
outsl
jae
push
jg
sub
or
xor
scas
push
test
in
hlt
xchg
loopne
fwait
out
xor
fucomip
js
hlt
push
push
push
dec
jg
mov
pop
negl
mov
mov
js
test
les
fwait
inc
jg
mov
gs
setnp
fistpll
popf
sbb
cwtl
xchg
data16
leave
idivl
add
daa
jge
ljmp
xchg
outsb
outsl
sbb
mov
test
lcall
aaa
test
inc
push
jp
jp
mov
pop
push
mov
in
imul
jl
js
push
je
loop
loopne
jle,pn
cmpsl
out
pop
push
push
pop
xor
sub
arpl
push
incb
or
cld
xchg
test
push
inc
inc
sbb
cwtl
aaa
in
mov
ret
inc
or
inc
xor
sarb
jae
icebp
mov
push
scas
es
test
add
or
lret
std
jecxz
fwait
sbb
sub
push
push
jl
out
inc
mov
out
inc
jle
jmp
divl
dec
mov
sbbl
adc
test
std
mov
sti
cmp
std
inc
stc
in
mov
fiadds
xchg
outsl
fsts
sbb
roll
add
mov
mov
sub
inc
aad
call
cwtl
shll
jge
sbb
add
stos
scas
jbe
outsb
adc
adc
cmc
test
jle
out
mov
sbb
mov
pusha
les
adc
inc
and
adc
fsubrl
notl
jae
or
repz
push
arpl
and
repnz
push
out
out
mov
fdiv
pop
xor
and
iret
push
out
ret
int3
dec
lods
out
lds
fwait
loopne
sub
lock
out
sarl
lret
icebp
jnp
in
cmc
mov
lret
cmp
stos
mov
sar
cmpsb
xor
or
mov
or
js
hlt
pop
imul
and
repnz
pop
jg
jo
daa
aam
mov
dec
push
pop
out
cmp
iret
jo
fs
mov
outsb
int
xor
out
sbb
xchg
jl
xor
dec
insl
mov
scas
nop
cmc
xlat
imul
jne
sti
mov
or
popa
jae
add
sbb
jns
pop
xor
mov
sbb
cltd
xor
ret
dec
int
inc
mov
iret
xchg
in
outsl
aas
out
popa
call
cmp
cli
dec
cmp
pusha
repz
cmp
ret
mov
ja
scas
jo
push
inc
mov
out
dec
pop
clc
roll
repz
dec
leave
adc
xor
imul
pushf
decb
xor
inc
dec
mov
lds
xchg
lret
cmp
pop
dec
inc
ljmp
mov
xor
xor
inc
pop
mov
xchg
mov
cmp
negb
cmp
sub
xor
cmp
cld
data16
aaa
jo
sub
dec
jnp
inc
rorb
aaa
inc
fs
ds
ja
mov
stc
push
add
xchg
outsl
pop
xchg
jmp
mov
fcomi
loopnew
push
jge
cmp
jae
push
sbb
inc
adc
adc
fs
data16
pushw
dec
fwait
add
and
in
mov
test
xchg
cmp
int3
jbe
adc
cltd
ljmp
or
push
js
jge
ret
add
cmp
in
xor
int
jne
outsl
sbb
xchg
in
pop
dec
dec
sbb
loope
xor
sub
mov
cmp
dec
out
xchg
in
ret
andl
pop
out
test
imul
jns
scas
ljmp
test
in
popl
loope
sub
xchg
push
int3
outsb
inc
or
dec
push
loope
scas
sbb
jmp
std
lcall
cmova
cmc
jl
jbe
cmp
cmp
js
xor
push
pop
add
popf
and
pusha
mov
xor
addr16
sti
sub
js
out
call
mov
xor
sbb
cmp
and
xor
ss
mov
pop
cmp
je
push
imul
pop
out
inc
xor
push
addr16
fs
outsb
outsb
dec
dec
push
loopne
imul
jnp
sbb
and
or
lock
mulps
addr16
outsb
pop
ds
pop
out
fwait
jp
inc
imul
stc
pop
outsb
jmp
inc
jg
cmp
inc
push
mov
pop
enter
jbe
stos
push
add
cli
addr16
xchg
pop
in
push
push
out
inc
lcall
jmp
sub
sbb
popf
sub
lods
push
add
cs
pusha
js
aas
push
sbb
dec
popf
inc
test
cmp
lods
sbb
push
push
adc
or
xor
outsl
push
sbb
fdivr
movl
sbb
mov
xor
xor
popa
stos
adc
cmp
pop
cltd
je
or
jmp
loop
mov
jle
inc
test
mov
insl
popf
inc
xor
push
fwait
sbb
sub
add
into
lret
push
lahf
ss
xor
jecxz
lea
je
inc
icebp
iret
dec
das
outsb
lahf
jmp
iret
and
jns
xchg
and
push
loopne
in
cmpsl
sbb
stos
fsubs
jmp
jg
in
js
imul
adc
cltd
jbe
out
shrb
ljmp
fsubr
out
in
aam
iret
mov
outsb
insl
sarb
cmp
rorb
shl
push
push
test
jns
repz
repz
sub
push
dec
jmp
adc
mov
lods
insb
mov
mov
cmp
push
fldenv
scas
inc
shlb
adc
aam
movsb
jno
fwait
push
dec
ficomps
lock
and
mov
stos
jb
push
mov
outsb
push
sti
mov
repz
mov
scas
out
push
shlb
clc
gs
push
mov
pop
rcrl
lods
shlb
out
dec
es
or
fmuls
clc
insb
imul
push
lret
xchg
fldt
outsl
shr
push
sub
enter
in
insb
fisttpl
out
shrd
sbb
mov
add
addl
jmp
mov
adc
outsl
sbb
insl
add
dec
jl
out
add
dec
push
bound
pop
jbe
fs
orb
or
inc
lea
aas
addr16
or
das
mov
jmp
push
push
jecxz
fwait
imul
int3
scas
orb
xchg
jns
les
insb
adc
bound
or
lods
pusha
sbb
int3
scas
push
addr16
add
fcmovbe
sarb
inc
data16
in
dec
popf
pop
jmp
outsb
mov
sub
cmp
dec
addr16
pusha
shr
push
cmc
sbb
cmp
jge
cmc
adc
test
mov
in
adc
shrl
mov
out
in
inc
scas
stos
push
in
adc
cmp
cmp
frndint
mov
ror
and
hlt
popf
xchg
pop
adc
adc
pop
in
test
bound
test
testl
out
pop
repz
or
ja
xor
lock
adc
mov
repz
loop
mov
xlat
fidivrs
or
insl
fistps
lea
test
add
fadd
and
sbb
in
push
dec
cmp
mov
imul
dec
xor
scas
ja
dec
push
negl
fwait
in
sti
mov
aam
adc
imul
int3
out
outsb
scas
imul
xor
in
inc
lods
imul
or
iret
or
sub
mov
pop
fstps
dec
mov
or
or
out
pop
push
sarb
mov
pop
cmpsl
push
mov
popa
outsl
stc
subb
add
add
jne
xlat
imul
dec
mov
push
add
push
sbb
xchg
adc
stos
scas
jne
sbb
adc
mov
jle
jecxz
lock
xchg
inc
lret
xchg
mov
sbb
sub
call
outsl
out
push
enter
jne
outsb
movsb
clc
sbb
in
js
in
ja
in
jg
dec
mov
repz
repz
mov
push
ret
adc
inc
cmp
mov
jl
inc
in
push
outsb
sub
and
sarb
loopne
and
adc
outsb
adc
test
mov
lcall
nop
test
ret
mov
idivl
mov
call
lea
mov
leave
adc
lods
add
inc
mov
movsb
popf
sub
std
mov
aaa
adc
les
jl
xchg
push
push
adc
pop
jmp
fcoms
add
dec
pop
in
jmp
sub
xor
xchg
in
fisttpll
xchg
adc
pusha
ret
pushf
inc
addr16
mov
popa
out
loope
pop
jno
scas
pop
out
xlat
scas
fcmovnbe
pop
iret
pop
pop
outsl
inc
cmc
repz
lret
add
sub
dec
lods
in
cmpsb
loope
shrl
adc
imul
fldl
xchg
es
fwait
imul
mov
jmp
mov
add
bound
dec
data16
push
data16
nop
lock
pop
popa
jle
leave
inc
jbe
mov
xlat
pop
pushf
cmpsl
push
or
imul
dec
aam
lret
add
jmp
shlb
mov
cmp
cld
cltd
notb
jb
stos
and
xor
aaa
sub
xor
add
repz
add
dec
sub
outsb
xor
xchg
fisubl
call
outsb
outsl
bound
adc
into
sub
inc
mov
jle
outsb
incb
xchg
loope
cmc
cmc
mov
daa
push
in
mov
push
jl
add
xchg
scas
jle
mov
outsb
mov
jg
test
mov
adc
xchg
cli
push
push
sbbl
in
ret
xor
in
lock
mov
fs
push
cwtl
aaa
dec
pusha
cmp
adc
je
mov
pop
xor
xchg
inc
mov
xchg
sub
pop
cmp
rcrl
and
imul
es
inc
daa
sbb
in
and
pop
push
jp
cs
inc
aaa
ds
dec
dec
or
imul
je
loop
frndint
push
and
or
pop
cmp
out
int3
mov
addr16
pop
inc
dec
mov
int3
xchg
je
popf
mov
mov
repz
jno
icebp
mov
jnp
les
dec
fsubp
pop
jecxz
addl
mov
rcrb
adc
dec
lock
push
fmuls
push
push
dec
jbe
cmp
sub
sbb
icebp
data16
out
out
fwait
dec
adc
pop
out
pop
xor
pusha
stos
cmp
sbb
push
cmc
imul
adc
adc
inc
inc
dec
add
out
leave
aaa
shrb
push
fs
jb
cmp
movsl
sub
fsubrs
fildll
sbb
push
ffreep
mov
inc
movsb
pop
je
sahf
push
xor
imul
pop
jmp
gs
lock
adc
outsl
mov
dec
je
fs
jle
push
insb
cmc
scas
js
push
or
outsb
xchg
das
pop
inc
movsb
pop
jo
das
xchg
int3
jl
stc
and
dec
bound
mov
and
aaa
lods
dec
outsb
cwtl
lods
sarl
loop
dec
jecxz
stc
cmc
mov
and
imul
sub
xchg
pop
scas
outsl
hlt
dec
dec
sub
and
jae
popa
das
fiadds
outsb
bound
cmpb
push
and
in
lods
les
sub
test
adcl
sti
rcrl
fimull
mov
mov
daa
xor
pop
addr16
hlt
mov
inc
imul
cmc
inc
pop
xchg
sti
out
sahf
popf
rcl
mov
cmp
dec
add
popa
pop
push
sub
sbb
into
fsubrl
pusha
and
test
imul
int
sbb
int3
lret
sub
mov
mov
in
pusha
scas
lret
jge
push
sub
xor
int
out
mov
sbb
aas
pop
das
sahf
pop
movsb
push
scas
lret
bt
dec
aas
es
cmp
mov
cmpl
push
inc
leave
loopne
lds
xor
cs
idivl
int
not
mov
jb
pop
mov
out
jno
jmp
push
lods
cmp
popaw
mov
insb
shl
test
mov
stos
dec
add
dec
and
loope
imul
pop
jmp
mov
inc
sti
or
fisttpl
cld
insl
jle
int3
sbb
jp
ja
push
fisubrl
sub
imul
cs
push
insl
std
ja
and
ret
int
fsin
inc
adc
in
pushf
cmc
scas
sub
movsb
call
lret
push
sbb
js
mov
ljmp
cli
out
mov
negb
mov
jge
inc
inc
jo
dec
dec
dec
lock
es
inc
push
push
ja
ret
scas
nop
andb
push
les
hlt
lret
jl
sub
pop
dec
sub
imul
dec
imul
jne
pop
mov
shrb
fs
out
sbb
leave
jmp
pop
dec
pop
lds
leave
les
shrb
push
les
dec
dec
cmc
rcr
push
adc
scas
repnz
es
imul
mov
xor
roll
pop
add
push
sbb
jne
push
fs
fcmovnu
lahf
paddusb
hlt
icebp
roll
jle
adc
or
jns
data16
imulb
jbe
push
in
push
push
inc
cmp
pop
sbb
mov
fidivs
into
js
aas
add
call
repnz
dec
cmpsl
mov
push
mull
fisttpll
sbb
mov
aad
cld
je
sbbl
push
bound
cmc
fisubrs
dec
es
mov
push
adc
push
test
push
test
in
push
sub
or
mov
mov
mov
mov
lds
bound
incl
stos
or
xorb
lods
push
sbb
pushf
push
push
shll
xor
xor
adc
push
cmpsl
sub
es
fsubr
outsl
orb
xchg
cmpsb
sub
pop
scas
data16
stos
data16
lods
xor
cwtl
aad
cld
loop
xchg
rcrl
cwtl
inc
inc
inc
cmp
and
scas
shl
popa
push
sub
int3
fwait
mul
or
and
or
jmp
dec
popa
push
imul
repnz
dec
stos
das
das
sub
lods
pop
mov
imul
insl
and
mov
cld
push
stos
or
jl
push
mov
inc
dec
push
rclb
in
mov
pop
mov
inc
rcll
push
or
push
aam
mov
add
data16
repnz
fisubs
sub
jecxz
lcall
in
push
insl
popa
cmp
mov
loop
repnz
adc
lahf
fidivrs
adc
xchg
jp
enter
or
jmp
iret
jecxz
xor
insl
data16
loopne
mov
xor
adc
lock
adc
inc
mov
mov
jae
lret
inc
sbb
jae
push
outsw
mov
movsl
jae
pop
loopne
adc
cmp
inc
add
bound
fstps
jmp
and
enter
pop
incb
in
mov
sarl
rcl
push
shr
push
into
sub
dec
int
xor
pop
aad
sti
and
xor
clc
icebp
jg
stc
push
pop
ja
mov
lods
into
add
std
cmp
sbb
dec
dec
outsb
adc
and
mov
sti
pusha
pusha
fwait
push
iret
add
lret
sbb
or
fcmove
jno
adc
dec
int3
rorb
xor
jae
sbb
popa
pusha
mov
fwait
loop
xchg
jns
mulb
lods
sub
ficoms
clc
mov
dec
xor
jg
in
cs
int3
test
outsb
xor
sbb
adc
cs
or
adc
fbld
jns
fs
lahf
jns
sbbb
repnz
sbb
cmp
dec
popf
mov
outsb
adc
test
int
clc
mov
push
fs
int
jno
shlb
jne
les
xchg
sbb
push
lods
dec
cli
cld
arpl
decl
push
out
push
sbb
ja
xor
jb
jmp
fwait
je
or
add
int
inc
pop
jne
pop
dec
in
fs
arpl
loopne
std
lods
xor
rcll
enter
push
xor
jae
sbb
sub
or
test
rclb
mov
ja
adc
xchg
lea
cmp
pop
push
and
dec
or
dec
xchg
mov
xchg
dec
and
bound
mov
ret
dec
call
mov
mov
outsl
fwait
nop
pop
outsb
sbb
adc
sub
pop
sbb
insl
fcoms
jne
cld
and
mov
test
scas
addr16
dec
popa
xchg
jno
jmp
xor
sbb
jmp
push
call
sahf
dec
outsb
sbb
xor
inc
pop
fmuls
push
out
inc
lods
pop
bound
cmp
mov
inc
repnz
push
mov
cmpsl
push
lret
jl
sub
popa
and
dec
and
sub
notb
faddp
mov
lock
sbb
sbb
das
inc
inc
cmpsl
insl
push
jno
dec
adc
mov
mov
ljmp
sbb
lods
in
repz
push
loope
jg
leave
imul
jnp
mov
cwtl
or
xchg
stos
dec
jo
movl
es
bound
push
sub
jno
out
cmp
cmp
adc
loope
sbb
sub
inc
ljmp
jmp
ja
or
outsl
xor
jne
mov
nop
lret
out
jecxz
adc
pop
mov
xchg
jecxz
add
sub
xor
nop
mov
mov
std
fisubrs
adc
jno
outsl
test
jbe
clc
add
test
jl
data16
test
out
mov
fimuls
cmp
jbe
jg
sbb
fcmove
adc
sbb
pushf
and
pusha
les
mov
mov
pop
sbb
push
mov
push
adc
push
xlat
adc
test
cs
inc
pop
ja
jbe
test
add
loopne
pusha
mov
push
dec
bound
das
jp
inc
fisubs
call
int
mov
ficoml
dec
sub
pop
dec
or
dec
sub
push
pop
stos
addr16
cld
jp
je
fs
adc
and
in
loope
cmp
fistps
xchg
into
or
pop
cmp
les
xor
mov
jle
mov
add
gs
imul
loope
cltd
les
incl
push
jle
inc
pop
jmp
mov
cmp
jl
and
cwtl
jns
fistpl
cmp
dec
int
out
test
add
adc
scas
sbb
mov
mov
outsb
jne
lock
scas
mov
out
dec
out
repz
push
push
dec
lret
cmp
dec
sbb
add
mov
lret
test
inc
push
in
addr16
push
add
adc
insl
scas
xor
cmpl
pop
add
and
mov
adc
lret
ret
arpl
test
xlat
xchg
js
mov
sub
outsl
mov
sbb
pop
sbb
pop
popf
notb
pop
jg
imul
testb
arpl
jne
inc
repz
adc
mov
test
jns
dec
je
push
mov
pop
in
pop
inc
nop
mov
and
fwait
pop
mov
sti
stos
fadds
scas
lcall
outsb
into
fmuls
les
nop
cli
sbb
daa
mov
mov
fwait
imul
jg
ja
imul
cli
rol
cld
dec
pusha
idivw
repnz
sub
in
jo
cmc
cmpsl
xor
cmp
jge
push
dec
adc
cmc
hlt
or
jno,pn
outsb
int3
movq
out
dec
fwait
pop
movsb
in
out
inc
sbb
stc
int
sbb
mov
out
orb
dec
cs
test
jmp
std
leave
push
icebp
lcall
cld
pop
sti
outsb
int3
testl
int3
dec
jmp
movsb
repnz
jmp
cmp
add
hlt
fwait
xchg
scas
xchg
or
outsl
xchg
add
ret
fcmovnb
mov
push
mov
xor
daa
xor
and
sbb
inc
stos
mov
adc
imul
scas
push
out
sbb
xor
out
or
out
adc
mov
mov
adc
mov
scas
aaa
xchg
xor
outsl
ret
addr16
in
dec
fsub
jne
pop
xchg
imul
push
pop
decb
stos
mov
insl
fistpll
jmp
ljmp
xchg
pushf
sbb
lea
add
dec
pop
mov
pushf
call
mov
push
mov
test
stos
scas
mov
aaa
ficompl
loopne
jle
mov
fisttps
data16
testl
lret
movsl
sbb
sub
cmp
addr16
out
mov
add
sub
sub
dec
cmp
in
sub
and
cmpsb
jmp
sbb
ret
dec
sub
ja
mov
repz
jp
push
iret
jno
dec
aas
clc
dec
imul
enter
aaa
pop
adc
pusha
pop
in
sub
push
fnstcw
sbb
push
sbb
or
adc
pusha
popa
clc
adc
and
jmp
lock
popa
mov
pop
mov
outsl
inc
add
adc
push
insl
mov
in
push
sbb
cmpsb
push
jp
mov
adc
shrl
jmp
xchg
mov
xor
cmc
mov
sub
sub
pushf
imul
sbb
dec
push
mov
push
sub
and
adc
shlw
stos
mov
iret
cmp
push
sbb
pusha
push
fwait
loope
test
jl
jb
scas
push
sarb
mov
iret
cli
dec
sbb
jmp
jnp
jl
pop
cli
shlb
and
jp
xchg
cmpsl
cmpsb
dec
aam
dec
mov
int3
push
adc
jae
sar
leave
clc
jl
add
xchg
mov
pusha
test
je
daa
ficoms
xchg
or
int3
dec
pusha
arpl
out
data16
xor
jmp
and
mov
adc
xchg
jle
xor
sbb
test
jne
shrl
jmp
in
push
and
or
jecxz
add
scas
push
xor
jle
mov
test
into
fs
sar
jecxz
pusha
les
push
sbb
sti
dec
and
add
pusha
aad
push
fwait
sbb
xchg
push
mov
or
movsb
stos
pop
add
jb
push
jnp
sbb
in
out
dec
and
xchg
inc
push
mov
std
mov
test
sti
ds
push
dec
in
xchg
lret
mov
add
scas
pop
cmp
in
xchg
mov
mov
mov
loop
scas
cwtl
outsb
push
scas
aad
orb
je
scas
add
fnstenv
xor
and
in
dec
sbb
pop
push
je
jp
test
loope
sbb
in
mov
sbb
test
mov
ret
stos
push
enter
jns
loop
xchg
push
jle
dec
into
leave
mov
testl
test
addr16
jle
inc
inc
addr16
mov
movsb
sbb
adc
dec
movsb
push
push
test
loope
movsb
adc
stos
outsb
push
dec
bound
adc
imul
xchg
add
call
dec
lds
lock
adc
addr16
fidivl
jmp
jp
push
hlt
mov
lock
jne
ljmp
xchg
push
push
xchg
lret
and
nop
fs
cs
adc
pop
ja
sub
xor
add
and
sbbb
mov
dec
shll
test
gs
in
fisubrs
jp
and
js
lret
jo
gs
jl
inc
xor
stos
inc
loopne
cmc
push
call
jle
test
addr16
jnp
movsb
bound
in
xor
stos
ds
xor
stos
ds
push
ds
pop
ljmp
lret
sub
xor
xor
sub
shrb
jne
inc
xor
adc
scas
imul
lds
mov
sahf
dec
mov
xchg
jecxz
paddsw
movsb
cli
lods
insl
lret
pop
push
jmp
jbe
or
cli
int3
xchg
or
mov
ficoml
nop
add
xchg
call
sub
rorl
je
loopne
scas
adc
roll
xor
jne
sub
inc
jns,pn
lds
leave
pause
push
pop
ret
mov
stos
cmc
lock
out
jne
out
out
adc
sub
and
stos
les
inc
ljmp
lret
sbb
or
imul
orl
jge
aaa
dec
outsl
rol
mov
pusha
fs
cwtl
mov
jl
bound
push
outsb
pop
cmp
outsl
cmp
imul
push
sbb
repnz
push
pushf
lock
aam
popa
cli
push
cs
push
sbb
add
and
scas
lret
adc
inc
inc
pop
scas
ljmp
or
push
push
sub
xchg
divl
out
xor
mov
lcall
push
xchg
je
sub
dec
xlat
out
imul
mov
pop
std
cltd
pushf
in
mov
pop
mov
stos
dec
sbbb
mov
shr
aam
bound
or
mov
cvtps2pi
int3
adc
mov
pop
sub
call
test
xchg
lret
add
add
les
fs
inc
dec
pusha
imul
push
cli
out
out
in
pusha
popa
xlat
sbb
stos
push
arpl
pushf
lcall
lds
cmc
cs
test
push
arpl
pop
insl
stos
cwtl
mov
lock
dec
popa
popf
lret
jb
cli
mov
test
sbb
cmp
fwait
dec
in
out
mov
bound
repz
call
inc
aaa
pusha
hlt
incb
enter
dec
cwtl
popf
xlat
sub
test
sti
lahf
or
fdivrl
repz
adcb
xchg
fwait
pop
cld
adc
add
enter
sbb
jl,pt
fwait
inc
out
insl
les
enter
vcmpsd
fs
js
addr16
jp
ds
pop
testl
lods
dec
test
scas
mov
or
pop
stos
imul
insl
testl
mov
push
or
jns
outsb
insl
xchg
mov
aaa
les
jbe
or
lcall
mov
fsubs
jnp
inc
mov
imul
jnp
adc
shlb
movsl
mov
repz
dec
or
outsb
pop
call
leave
mov
movsl
pop
loope
lcall
stos
cmc
jno
insl
or
imul
fwait
fidivrs
ret
push
loop
into
dec
lcall
and
sahf
sarl
push
cmc
mov
jns
cmp
and
mov
outsb
leave
loop
stos
rolb
push
testb
xlat
sub
nop
mov
sub
push
fsubrp
pushf
push
dec
push
sbb
sarl
dec
pop
stc
sbb
and
enter
push
fs
stc
jl
sub
bound
and
repz
loop
test
or
sti
mov
push
loopne
mov
adc
sub
sbb
sti
mov
add
push
insb
sbb
out
pop
fs
test
inc
ds
sbb
inc
or
push
dec
int3
cwtl
push
mov
iret
inc
rorl
ljmp
bound
lods
int
sti
sub
jle
inc
movsb
jae
bound
mov
ret
pop
xor
lods
fs
fwait
imul
mov
jg
push
clc
hlt
pusha
cld
jns
test
mulb
je
add
jle
inc
addr16
mov
je
xor
xor
xor
out
test
in
sub
push
or
sbb
xor
aad
mov
out
pop
xor
mov
test
fsubrs
imul
pop
mov
shrb
pcmpeqw
adc
push
fiaddl
test
sub
mov
call
fisttpl
push
loop
repnz
roll
js
bound
ficoml
gs
pcmpgtd
jmp
in
addr16
inc
sub
jmp
cld
adc
ljmp
lods
bound
push
fs
shlb
inc
sti
pop
outsl
mov
inc
sbb
loop
movsl
xchg
jns
cli
cmc
aad
addb
enter
leave
sti
pop
bound
out
call
inc
aaa
cs
xchg
push
outsb
and
repnz
leave
into
sar
dec
lahf
shrb
popl
adc
sub
ljmp
jg
dec
mov
call
stos
dec
hlt
popf
ret
imul
xor
push
fcomps
sub
xorl
add
aam
push
imul
jo
addb
jmp
lcall
lahf
hlt
ret
loope
mov
lds
in
jl
scas
xchg
popf
clc
insb
std
xchg
jle
sbb
lods
pushf
ds
in
xchg
jmp
sbb
mov
ret
push
jl
outsb
adc
push
jno
cs
add
adc
adc
out
add
cld
push
fwait
and
sbb
push
adc
incl
push
outsb
out
hlt
push
fcoml
les
inc
sbb
jl
jb
cmp
push
popf
ds
loop
repnz
loopne
jne
outsl
sbbl
in
ret
inc
xchg
adcl
repz
mov
mov
mov
push
scas
repnz
adc
cmc
sub
sbb
and
clc
push
sarb
jp
outsl
repnz
sbb
outsl
jle
js
jns
fcmovne
jl
cmp
adc
insb
fstl
dec
dec
in
les
or
imul
pop
or
call
bound
out
xchg
or
out
jmp
test
jl
inc
dec
cld
pop
fs
push
mov
or
fwait
ljmp
sbb
ds
push
ss
push
sub
sahf
dec
js
repnz
in
movzbl
iret
cmpb
cs
cmpsl
jmp
imul
shrd
push
fwait
stos
repnz
popf
fsubrl
mov
addr16
insl
pop
dec
int3
out
fisubs
pop
and
mov
iret
lea
sub
cwtl
cmpsl
mov
ficoml
pop
jbe
scas
outsl
mov
push
mov
xor
psllq
lock
jnp
ja
in
stos
jg
out
inc
sbb
cwtl
hlt
out
out
lahf
and
push
imul
xor
aas
mov
mov
add
push
jo
outsl
xchg
loop
and
int3
shlb
test
ja
iret
addr16
mov
jnp
xor
call
mov
aad
cmp
das
leavew
jo
push
sar
outsl
jmp
adc
aas
lods
fadd
negb
and
aas
or
shll
es
lret
scas
add
punpckhwd
adc
sub
in
enter
addr16
dec
rorb
insb
inc
fs
aam
and
inc
scas
out
js
jne
or
test
nop
rorl
enter
xchg
out
std
or
call
shrb
sti
movb
add
jl
pop
mov
incb
ss
in
stos
dec
sbb
jmp
popa
mov
push
or
inc
xchg
int
out
pop
lahf
stos
dec
out
int3
scas
pusha
dec
sub
aas
sti
add
daa
inc
imul
adc
adc
mov
gs
sub
sbb
aam
jb
push
adc
fwait
jno
add
insl
jle
inc
dec
inc
xchg
jns
cmp
sub
pushf
orl
pop
and
or
invd
mov
subl
pop
pop
fs
push
fsubs
xor
insl
adc
and
repnz
dec
inc
inc
push
sahf
gs
outsb
push
addr16
inc
xchg
imul
jmp
loope
scas
or
inc
imul
popa
dec
adc
inc
cwtl
es
jp
bts
loopne
adc
incl
cwtl
fs
clc
scas
les
mov
ret
and
ljmp
push
jnp
inc
imul
push
push
pop
fsubl
data16
mov
je
iret
inc
jne
dec
cli
sbb
push
mov
in
call
jp
repz
dec
jmp
sub
lcall
and
negl
out
push
loope
fistpl
into
push
or
nop
imul
xchg
mov
test
pop
hlt
out
pop
xlat
pusha
pop
repz
ss
sbb
sbb
iret
jl
sbb
pop
das
ja
lods
dec
popa
stos
es
daa
cmpsl
dec
clc
mov
cs
or
inc
bound
nop
idivb
mov
arpl
xchg
shrb
and
add
push
mov
sbb
aad
movsl
and
inc
adc
imul
aaa
push
mov
loope
and
sbb
popf
pop
cli
fs
pop
jo
cmpsl
adc
fiadds
push
psubsb
ret
and
inc
mulb
mov
sbb
cmc
test
int3
pop
sub
jg
rcll
addr16
inc
mov
das
in
flds
and
pop
push
dec
cmp
push
fmuls
cmp
ret
pop
cs
test
lock
cwtl
les
aam
dec
movsb
dec
addr16
dec
and
lret
jge
xor
sub
loope
xor
in
jmp
rcrl
in
je
into
in
test
inc
les
sbb
mov
pop
cld
js
ret
popf
repz
repz
sbb
cwtl
sbb
dec
inc
popf
fsubrs
jge
xchg
out
sub
testl
cli
xchg
and
js
pop
sbbl
mov
cs
pop
rorl
gs
rolb
pop
add
faddp
inc
or
push
jnp
dec
adc
xchg
fmuls
xorb
add
mov
cmpb
lock
lret
enter
lahf
cmpb
or
pushl
dec
xor
movb
pop
inc
jl
add
fdivrs
jb
das
xor
shll
aas
inc
cs
test
out
fwait
mov
loopne
cmp
xlat
cmp
sbbb
into
pop
fisttps
and
stos
aam
arpl
testb
add
or
xchg
xchg
push
sar
call
push
push
dec
or
call
fildll
scas
popf
frstor
ja
scas
in
xlat
inc
stos
or
mov
push
das
imul
enter
mov
pop
jnp
jns
and
mov
outsb
arpl
push
cld
mov
lcall
dec
out
movsl
jnp
or
pop
call
repnz
cmp
jmp
cs
out
les
test
das
movsb
jns
ret
addr16
pop
pop
rorl
push
lahf
jg
lret
dec
inc
mov
inc
pop
jo
enter
xchg
adc
outsl
pusha
fmuls
push
mov
inc
add
fisubs
mov
stos
cli
jne
cwtl
jl
sti
and
adc
call
cld
inc
sbb
jl
sub
inc
inc
sbbb
add
mov
push
sub
inc
pop
shlb
repnz
mov
xlat
lret
or
jnp
inc
xchg
inc
jns
stos
daa
imul
inc
iret
jno
stc
leave
jo
push
jmp
arpl
pushf
jl
outsl
mov
sub
pop
lds
adc
sbb
out
aas
or
fstp
outsb
pop
fwait
out
js
cli
outsl
cmp
lret
outsb
shll
add
push
and
stc
cs
in
add
dec
xor
inc
mov
clc
xchg
enter
fistl
lods
add
jp
or
mov
cmp
stos
mov
dec
or
xchg
lret
adc
mov
push
push
sbb
repz
dec
cwtl
jl
or
sbb
sub
sbb
dec
in
jg
dec
dec
jg
dec
sbb
cs
jmp
into
stos
scas
jbe
pop
mov
mul
clc
ss
addr16
adc
mov
jmp
outsl
or
sbb
mov
int
dec
jmp
inc
add
data16
cld
adc
adc
jle
xor
xchg
test
andl
xchg
data16
add
inc
iret
ja
inc
mov
fwait
dec
dec
inc
adc
xchg
dec
xor
daa
call
fadds
dec
adc
ja
dec
xlat
imul
fsubrl
dec
mov
push
in
into
inc
out
push
inc
pusha
ret
scas
pop
sub
push
pop
jb
push
call
or
inc
arpl
pop
push
xor
sbb
jno
clc
and
jecxz
push
jbe
fwait
mov
in
aad
das
ret
sbb
dec
ret
add
in
clc
sbb
fildl
xchg
incb
add
xchg
in
aad
mov
pop
pop
popf
icebp
inc
sbb
inc
mov
lcall
jno
inc
jg
sti
mov
int
repnz
adc
inc
pop
push
push
mov
dec
fs
adc
pop
lret
jecxz
dec
gs
sub
sbb
mov
mov
adc
xchg
into
icebp
xor
cmp
xchg
jb
rcll
sarb
xchg
mov
push
inc
out
adc
mov
xchg
pop
mov
mov
fnstsw
pop
jg
popa
dec
cmc
mov
test
push
mov
insb
out
cmc
mov
stos
mov
pop
adc
lods
nop
jl
push
dec
pop
mov
dec
sbb
sub
jmp
sbb
mov
aad
sahf
mov
pop
sbb
cs
sbb
imul
jp
sbb
push
xor
sbb
inc
outsb
xchg
mov
cmpb
sbb
cs
jnp
jnp
dec
cwtl
adc
inc
dec
int3
jg
dec
or
in
dec
xchg
test
and
inc
lods
mov
pusha
mov
repz
out
dec
sar
lock
mov
jbe
rcrl
movsl
xchg
decl
pop
push
iret
fidivrs
dec
adc
or
xchg
inc
in
jl
inc
add
gs
test
jae
xchg
xor
mov
dec
push
lcall
pop
in
ret
lcall
pop
adc
xchg
loop
mov
mov
xorb
add
nop
jle
popf
fsts
in
dec
sti
ja
out
lret
imul
fstps
stos
pop
add
sbb
dec
dec
aaa
shlb
mov
or
inc
cmp
lahf
cwtl
daa
and
cs
shlb
jp
xor
les
fwait
xchg
and
cld
dec
fwait
adc
sbb
aas
mov
adc
call
mov
dec
fwait
arpl
or
cmc
jp
call
dec
push
sub
sbb
dec
fwait
cld
xchg
loopne
call
xchg
and
sub
shlb
or
mov
out
faddp
and
sbb
test
inc
loopne
mov
cmp
dec
xor
and
mov
sbb
xchg
sub
push
or
jae
ret
lock
outsl
push
adc
insb
daa
adc
mov
adc
adc
cmp
repz
stos
addr16
push
sbb
sbb
mov
adc
movsb
push
insl
sub
push
dec
fs
and
arpl
ds
pushf
or
or
lret
push
loopne
lock
rep
inc
mov
dec
pop
or
jge
loopne
fs
dec
xor
inc
pusha
sar
sti
nop
hlt
jae
add
or
ret
js
add
push
leave
les
mov
adc
cli
addr16
cmp
sti
test
popa
ficomps
inc
and
jg
lret
inc
xchg
push
jecxz
xchg
mov
dec
sarl
ljmp
sub
dec
add
in
pop
loope
pop
add
pushf
mov
dec
ret
jl
sub
cli
inc
out
out
xchg
clc
dec
cmc
imul
mov
pop
fcompl
sbb
dec
or
int3
adc
ja
out
push
jle
adc
stos
out
mov
jae
fs
sbb
popa
dec
xchg
or
cwtl
test
xor
sub
jmp
inc
jmp
mov
mov
sub
cmc
outsb
inc
dec
leave
dec
sub
jo
xor
jp
adc
repz
mov
mov
sbb
lahf
es
js
adc
jns
sti
xchg
mov
push
xlat
rcll
out
inc
lea
outsl
jb
es
int
lods
pop
mov
dec
cmc
jo
cltd
adc
sbb
add
js
imul
int
xchg
sti
inc
aaa
xlat
repz
jle
je
mov
dec
fcmovb
push
mov
push
mov
inc
jl
and
lret
cld
inc
dec
fildl
and
mov
cmp
jnp
and
loope
fwait
repz
popa
mov
sbbb
sti
cld
cmpsl
bound
push
inc
pop
outsb
cli
shr
inc
loopne
sbb
in
fs
fldt
clc
cs
int
lds
xchg
leave
cli
cmp
sbb
iret
jns
call
pop
mov
loop
mov
in
fs
fdiv
jo
xor
sbb
enter
imul
pop
inc
add
jmp
adc
sti
out
add
sub
test
and
scas
div
push
mov
mov
iret
test
sbb
sub
jg
add
jl
cwtl
cmp
fs
test
xor
outsb
icebp
jl
rcrl
pushf
shlb
ds
push
lret
mov
jnp
dec
outsb
or
int
std
inc
in
shr
scas
mov
pusha
ljmp
insl
jg
rclb
jne
cld
fadd
je
lahf
scas
mov
sti
dec
sub
rorb
int3
xor
imul
rclb
push
imul
adcb
cmp
sti
sbb
hlt
stc
dec
rclb
xchg
lds
dec
add
out
dec
imul
arpl
filds
push
shll
xlat
out
iret
outsl
insl
popf
add
jge
xchg
hlt
adc
sbb
mov
sbb
ret
inc
adc
mov
in
scas
sbb
lret
sbb
add
jnp
lock
repnz
in
ret
push
and
cmc
scas
mov
test
repnz
sub
sub
gs
sarl
stos
aam
adc
adc
out
imul
jl
xlat
lcall
xchg
test
in
mov
in
jle
ja
scas
xchg
scas
insl
jmp
int
das
data16
add
jg
mov
ljmp
shrb
cmp
inc
repz
shr
inc
xchg
int3
mov
add
mov
movsb
xchg
data16
int
mov
mov
inc
cmc
mov
das
bound
push
push
sti
pop
mov
jnp
xchg
std
and
test
std
cs
test
mov
std
addr16
dec
or
out
push
jb
fidivrl
adc
jle
inc
aas
add
push
dec
scas
pop
push
ret
shll
pop
or
pop
inc
sti
push
push
int
push
sar
loope
adc
cs
add
test
push
add
fwait
loopne
cmpsb
sub
fldt
xchg
fs
jne
xorl
dec
mov
in
repz
jle
lret
daa
jmp
stos
push
adc
clc
call
inc
test
mov
sub
mov
add
loopne
sarb
xlat
addr16
jmp
cmc
xor
outsb
sub
mov
pop
fs
xchg
inc
pop
push
nop
int
dec
sar
ljmp
jae
fdivrl
hlt
inc
adc
sub
stos
shr
and
adc
cwtl
pop
fmuls
mov
testb
cmp
dec
fwait
ljmp
imul
out
mov
hlt
stc
push
test
dec
cmc
sub
in
pushf
mov
mov
shrl
xor
push
ja
mov
push
inc
jmp
push
xchg
ljmp
in
mov
loope
addr16
jl
js
push
dec
xor
stc
shl
mov
aas
push
mov
cmp
leave
loop
pop
dec
insl
mov
sbb
jmp
inc
lods
arpl
stos
inc
decl
jmp
std
daa
or
cwtl
icebp
rep
xlat
jno
dec
adc
or
mov
push
aad
or
out
je
call
out
xchg
test
dec
cmp
popf
punpckhwd
pusha
cwtl
roll
adc
lret
mov
push
imul
sub
lret
cmp
vphadduwd
mov
aas
jge
cmp
out
lods
shlb
inc
lods
push
lock
stc
sbb
mov
out
mov
scas
mov
outsl
adc
or
adc
lcall
ja
sub
js
xchg
xchg
outsl
adc
ja
out
xchg
push
test
notl
push
test
xor
xchg
repnz
or
repnz
mov
xchg
mov
out
jl
jle
shl
sbb
xor
incb
inc
divb
icebp
xchg
dec
ficomps
push
loopne
nop
xor
push
xchg
jg
or
sbb
cli
push
popa
fsubrl
jmp
rcr
mov
dec
and
gs
data16
cmovl
outsb
jae
dec
mov
push
add
call
das
nop
pop
push
fwait
xor
mov
sbb
shrb
scas
punpckhdq
out
dec
test
je
mov
data16
dec
mov
adc
lock
dec
stos
les
repnz
cs
and
aad
lds
jbe
push
jecxz
gs
repz
pop
loop
cli
clc
adc
arpl
fs
test
call
cmc
cmpsb
setae
inc
fldt
xlat
push
shll
enter
pop
push
loop
imul
push
fiaddl
dec
cmp
and
mov
push
lret
jl
test
sub
es
sbb
fwait
popf
mov
xor
dec
jge
lods
rorl
in
repnz
xor
mov
mov
bnd
jl
sub
push
jb
pop
jg
add
dec
stos
je
jne
push
jae
adc
mov
aas
xchg
mov
je
addr16
mov
je
sbbl
out
repnz
mov
fisttpll
pop
push
sbb
andb
mov
in
xor
adc
insb
mov
jmp
fadds
xor
rclb
out
inc
pop
mov
sbb
pushf
in
repz
push
jecxz
sub
data16
xor
aaa
pop
in
push
out
push
arpl
mov
adc
mov
subb
fs
insb
sbb
sub
sbb
xor
or
scas
cmpsb
sbb
int
in
lock
imul
stc
dec
inc
outsb
pop
jmp
test
iret
lods
and
inc
dec
mov
cltd
es
bound
hlt
pusha
sub
push
and
outsb
mov
scas
fcompl
dec
hlt
cs
push
dec
lods
jne
jbe
ds
mov
repz
and
pop
dec
pextrw
lods
jecxz
cwtl
push
cmp
aas
arpl
cs
in
xchg
jecxz
sub
outsl
pop
je
repnz
push
mov
js
push
sbb
in
dec
repz
idiv
mov
add
lods
mov
xor
add
out
sbb
dec
cmc
sub
fdivs
and
stos
lret
sub
mov
xor
popf
push
test
test
gs
jmp
add
inc
cmp
test
cmp
cmp
mov
jp
lret
mov
mov
push
popa
insb
shll
adc
inc
daa
inc
scas
push
js
jo
int3
sbbl
push
es
fidivs
push
mov
mov
xor
mov
inc
mov
and
xor
shl
mov
sarb
push
scas
rcrb
pop
cmpsb
or
scas
push
mov
imul
test
inc
inc
fwait
pusha
data16
push
dec
mov
scas
repnz
mov
jmp
sub
add
decb
ret
mov
inc
dec
loop
cmp
dec
sub
adc
out
adc
cmc
mov
arpl
cli
ret
inc
pop
repnz
mov
pop
inc
out
and
iret
jnp
imul
test
call
mov
xchg
sbb
imul
mov
add
and
push
test
jno
out
out
sbb
jne
sub
pop
or
mov
stos
xchg
scas
mov
shrb
repz
loop
or
xor
out
stos
adcb
pop
sub
popf
mov
add
ret
pop
loopne
sub
out
mov
inc
push
mov
xchg
jle
insl
inc
in
in
imulb
sbb
jmp
xchg
jb
js
xchg
push
inc
pushf
pushf
or
fwait
call
sub
es
mov
in
bound
sub
fwait
data16
sub
loop
dec
dec
into
inc
in
mov
fwait
inc
icebp
adc
mov
sub
mov
dec
fsubr
ja
push
out
imul
pop
aad
cwtl
sti
fwait
sbb
hlt
mov
jl
fs
insl
pop
xchg
sbb
rorb
xor
je
test
jo
cmpsl
movswl
cmp
push
cld
test
or
bound
popf
jle
in
arpl
inc
jp
sub
pusha
push
pop
jbe
sarb
scas
jb
outsb
pushf
pop
test
inc
jnp
sbb
mov
push
jne
adc
jnp
dec
movsb
and
sub
aaa
arpl
mov
shll
pop
sbb
add
adc
std
cmp
jns
shrl
out
test
sbb
sbb
mov
mov
push
mov
inc
mov
mov
ljmp
rorl
imul
rorb
bound
xor
hlt
add
cmp
dec
in
sub
fldenv
in
dec
aaa
pop
jmp
test
dec
sub
dec
pop
shrb
sbb
xchg
adc
xor
fisubrs
pop
or
push
cltd
outsl
jl
stos
sub
repz
insl
adc
packuswb
sbb
dec
data16
imul
jl
or
sbb
das
push
jge
sbb
pop
test
outsb
or
or
jmp
repz
xor
js
lds
push
push
pop
js
repnz
ljmp
mov
jb
shrb
fldt
jb
bound
int3
push
stos
sub
or
lods
mov
lods
dec
sbb
cld
push
push
mov
in
imul
out
pop
pop
dec
popf
dec
subb
pop
stc
jo
ret
out
xor
cli
ja
and
enter
add
incl
outsb
or
stos
loop
imul
sub
scas
cs
push
mov
jle
scas
jb
lods
popf
xor
lret
jecxz
pop
or
pop
adc
fwait
cmpsl
stc
push
enter
sbb
aas
add
pop
roll
lods
add
jge
call
fdiv
jnp
shrb
push
outsl
iret
scas
xchg
out
push
mov
or
inc
mov
xor
push
cmpsb
movsb
dec
icebp
mov
insb
xlat
cld
stos
int
scas
rcll
pushf
jl
mov
push
mov
in
dec
push
pop
popf
jno
dec
sti
in
ret
mov
sbb
cwtl
mov
xor
sbb
xor
shl
cli
sub
inc
jmp
in
leave
pop
dec
pop
sbb
fwait
sub
mov
pushf
je
xchg
dec
add
psllq
mov
data16
xor
fs
dec
cmc
jo
push
mov
rcrl
mov
into
sub
in
es
add
repz
and
inc
imul
sub
mov
push
mov
popf
cmp
test
loop
subb
das
cmpsb
sub
aad
mov
push
xchg
arpl
pop
inc
sub
pop
sub
filds
hlt
stos
sbb
dec
mov
jnp
test
xor
lret
adc
imul
sbb
int3
and
mov
pop
je
enter
mov
sbb
int
mov
dec
movsb
xor
mov
rcr
and
jae
and
hlt
scas
cld
dec
fs
andb
out
ja
ljmp
sbb
jnp
jo
dec
sub
dec
xor
add
adc
mov
popf
in
cwtl
jp
and
dec
push
pop
fwait
adc
or
int3
sub
iret
cmpsb
out
in
pop
imul
dec
scas
mov
dec
orl
int3
or
dec
xor
test
pop
je
scas
jo
pusha
fsubrs
sub
jp
push
out
cmp
pop
mov
std
repnz
aad
icebp
hlt
mov
outsl
mov
fwait
xchg
and
jp
std
in
jns
dec
call
ljmp
push
ret
jb
movsb
pushf
sbb
je
pusha
in
cmc
es
push
fwait
stos
cli
xchg
or
jne
ds
or
dec
aaa
cli
add
das
lods
cmp
int
imul
pop
pop
dec
inc
mov
ja
mov
cmc
dec
mov
cli
xor
cwtl
xchg
sub
fnstsw
cmc
insb
or
scas
stc
daa
mov
pop
adc
ret
dec
loopne
push
cvtdq2ps
jl
cli
rolb
repz
imul
dec
push
dec
jl
push
dec
movntq
pusha
xor
and
into
sbb
outsl
sub
sbb
dec
es
mov
lock
xor
das
sbb
nop
jmp
pop
je
push
lods
test
mov
dec
imul
jp
xorl
das
imull
push
jae
movb
lret
xchg
inc
stc
pop
push
popa
lods
or
js
jbe
stos
call
lods
int3
fwait
push
fistpll
cmp
sub
jp
jb
jb
mov
imul
out
cmc
adc
lea
adc
inc
pop
outsl
addr16
adc
inc
dec
pop
aaa
push
shlb
cmpsb
inc
fisubl
sbb
dec
jecxz
pop
lods
jo
inc
stos
call
in
xchg
out
mov
push
arpl
jne
dec
jecxz
dec
in
or
xor
jp
ficompl
mov
stos
scas
pop
dec
scas
out
sbb
mov
or
arpl
andb
out
push
pop
test
shrl
repnz
dec
lcall
out
xorl
mov
jo
add
jo
mov
in
jb
jae
push
jp
sub
jo
loopne
dec
pop
movsl
popa
pop
in
sbb
add
es
fs
pop
popa
push
ja
inc
repz
cmp
xor
inc
dec
jecxz
ds
xor
jl
test
insl
sub
push
jge
jp
bound
mov
dec
je
inc
or
test
in
dec
sub
fwait
inc
jb
pop
imul
push
add
push
loop
out
dec
pusha
in
add
cld
movsl
sbb
mov
sub
jle
shlb
out
xor
push
mull
mov
inc
rcll
cmp
std
lret
push
aad
and
push
jno
fisubl
mov
ljmp
mov
pusha
mov
cmc
jge
aad
jp
daa
pop
cwtl
std
ljmp
call
dec
inc
fdivs
mov
pop
dec
mov
jg
data16
push
push
jl
test
out
jno
test
mov
cmpb
xchg
cmp
push
adc
bound
out
into
fwait
stc
jl
jg
sub
das
daa
stos
xchg
xchg
pop
vmptrld
into
sub
stos
jno
xor
cmpsl
push
pop
sbb
jns
jnp
cld
pop
adc
mov
sub
mov
hlt
js
in
das
xchg
ret
push
popa
negb
push
pop
stc
int3
repnz
jl
push
xchg
pop
es
mov
out
repz
mov
adc
pop
pop
fisubrl
pop
sbb
ljmp
adc
pusha
xchg
ds
out
cli
jge
sbb
pusha
add
mov
clc
mov
popf
pushf
mov
push
imul
jb
clc
arpl
add
jmp
aas
pop
and
push
leave
jle
loopne
decb
cltd
jb
pop
pop
mov
data16
cmp
stc
add
insl
into
popa
adc
add
push
jecxz
jg
outsb
pop
pop
sti
jl
js
xor
jp
fwait
jns
add
inc
hlt
sub
outsb
inc
xchg
pop
ljmp
xchg
adc
out
jecxz
call
adcl
jl
push
dec
xchg
call
add
sbb
mov
pusha
xchg
sbb
es
add
mov
or
push
sbb
clc
sub
push
imul
mov
cmc
cmp
andl
dec
stos
or
ja
lret
test
ja
mov
dec
insl
adc
push
dec
ljmp
rorl
cmpl
xchg
dec
push
repz
xor
push
or
dec
repnz
cmpl
jnp
loopne
sub
fiadds
fsubs
lcall
mov
lret
jmp
in
movsl
scas
jbe
jnp
adc
andb
addr16
xchg
loopne
les
inc
add
popf
scas
out
test
pop
shl
mov
out
test
jae
adc
dec
sbbl
int3
jge
arpl
jno
inc
inc
or
cmc
shufps
sbb
cmp
popa
push
aad
dec
in
xchg
add
adc
aad
sub
lods
mov
push
add
or
sbb
les
push
dec
addr16
call
dec
fsubl
adc
cmp
jecxz
sub
imul
inc
imul
mov
sub
loop
or
or
pop
addr16
push
data16
stos
mov
fdivrs
enter
push
cs
inc
add
scas
fidivrl
dec
fs
into
or
into
pop
call
jb
dec
outsb
imul
js
cli
mov
xchg
pop
push
in
lahf
aas
mov
es
fsubs
mov
imul
fisubrl
dec
mov
adc
xlat
cltd
dec
push
adc
jg
les
sub
loope
jp
inc
shlb
mov
dec
fwait
push
arpl
jge
out
sbb
mov
jo
jmp
sub
ljmp
out
lods
rcll
sbb
inc
ret
sarb
leave
jp
outsl
cmp
das
pop
dec
mov
dec
je
rcrb
outsb
leave
dec
and
sti
mov
iret
jmp
addr16
out
test
mov
adc
out
je
popa
or
cld
jmp
addr16
push
cmp
das
setl
inc
popa
inc
add
inc
ja
pop
sub
out
and
out
sarb
xchg
imul
iret
and
nop
jl
sbb
pop
rclb
out
es
into
loope
xchg
pop
cmpsb
popf
aam
shlb
ja
ljmp
jle
data16
lods
push
test
mov
adc
popa
in
jbe
clc
fwait
in
sahf
outsl
lret
inc
xrelease
imul
enter
outsl
dec
lods
mov
xchg
sub
xor
adc
pusha
or
jmp
mov
xchg
fwait
ljmp
sbb
cltd
mov
mov
scas
fmull
arpl
and
or
outsl
adc
dec
rorl
push
cwtl
lret
pusha
sbb
jmp
add
inc
xor
adc
pushf
fwait
lods
cwtl
movsl
cmp
jge,pt
out
ja
sub
aam
outsl
popl
mov
sarl
aam
int3
pop
es
js,pt
hlt
dec
sub
dec
sbb
push
jecxz
mov
cwtl
push
jne
xchg
inc
and
jne
dec
gs
dec
dec
and
dec
xlat
dec
loopne
test
in
fwait
sahf
mov
es
scas
xbegin
lret
push
outsb
cwtl
clc
sub
mov
mov
dec
sub
sub
push
push
sub
push
push
adc
out
add
pusha
add
aaa
mov
push
ljmp
adc
outsl
cs
xchg
inc
pop
and
ljmp
cmp
addl
test
pop
pop
jle
fs
push
dec
mov
ret
sub
jne
outsl
in
stos
mov
xchg
outsl
je
sbb
outsb
pop
mov
out
test
dec
movsb
and
dec
sub
scas
xor
out
adc
jne
pushf
push
nop
mov
cmc
addl
out
add
scas
fs
jnp
mov
sti
pop
and
lds
jg
shlb
sahf
mov
into
xchg
outsb
imul
sub
pop
dec
push
push
mov
push
mov
out
adc
mov
mov
mov
js
imul
jmp
out
push
jmp
clc
mov
aam
loop
sub
jmp
or
stc
pop
cmpsb
inc
sub
movsb
ljmp
inc
das
jbe
adc
dec
leave
sbb
outsl
adc
push
fwait
shr
push
loop
stos
lret
mov
movsw
mov
push
lret
inc
adcb
push
inc
cli
add
mov
sbb
mov
subl
xor
cmp
clc
xor
mov
lock
out
movsl
or
cld
add
bound
pop
push
iret
sub
adc
negl
enter
dec
outsb
rorb
iret
repnz
sub
subb
xor
imul
dec
adc
jmp
pushf
repnz
xchg
mov
je
push
pop
imul
sub
shr
in
xchg
aaa
push
inc
inc
andl
in
insl
aas
scas
sbb
pop
mov
call
sbb
arpl
dec
clc
jnp
mull
add
fwait
xchg
jnp
push
repnz
sub
rcrb
cld
cld
imul
mov
adc
sbb
stos
dec
fidivrl
sub
ja
js
add
push
cld
mov
xlat
mov
or
fwait
mov
push
out
out
xor
into
and
lods
scas
inc
testl
xlat
fs
cwtl
data16
jmp
jbe
fs
dec
addb
stc
push
fiaddl
test
pause
xchg
lret
ljmp
dec
fsubr
xor
hlt
aad
xor
jno
fidivl
fs
sbb
push
pusha
sbb
popa
xlat
inc
jecxz
fidivs
pop
stos
mov
out
clc
inc
std
mov
jmp
scas
fstpl
das
add
cmp
stos
es
movsl
sbbl
jnp
sbb
mov
aaa
fisubrl
cmp
and
enter
stc
rcl
jp
repz
inc
stos
add
lret
sbb
ljmp
outsl
add
xor
fimuls
dec
dec
lret
hlt
cwtl
repnz
bound
clc
mov
js
add
dec
push
xchg
sbb
rol
fdivl
sbb
sub
scas
mov
cld
rolb
outsl
data16
jmp
stc
hlt
add
and
imul
xlat
mov
ficomps
jl
stc
cmp
jns
hlt
push
js
fistpll
push
js
mov
add
imul
push
cld
sub
ja
pusha
call
sub
sbb
out
lahf
cmp
pop
out
mov
sub
inc
lds
dec
mov
mov
or
jbe
outsb
jle
dec
jne
cmpsl
fs
dec
outsb
outsl
mov
movsb
notl
scas
in
sub
and
inc
aaa
jle
jg
jb
je
push
xchg
test
mov
scas
pop
in
int3
outsb
jmp
int
sbb
cli
mov
imulb
jno
je
sarl
xchg
push
mov
out
call
mov
sbb
and
fcoml
push
cmp
lods
xchg
adc
fildll
call
out
into
inc
mov
adc
call
or
push
js
scas
adc
icebp
fwait
jl
xor
mov
xchg
pop
imul
out
mov
test
sbb
jge
jl
sub
and
and
lods
jl
fwait
arpl
adc
ljmp
pop
sbb
fmull
jmp
out
sbbb
nopl
test
dec
xorl
push
arpl
loop
enter
inc
inc
fs
inc
sub
add
in
sub
dec
sbb
out
sarl
mov
push
hlt
repz
in
scas
jns
cmp
dec
outsb
jg
dec
outsl
imul
inc
arpl
lea
fdivl
pushf
arpl
andb
add
sub
popa
in
push
cmc
add
jmp
test
xchg
insl
outsb
test
scas
ljmp
pushf
jmp
loopne
popa
sub
addr16
fmuls
dec
scas
mov
bound
dec
sarb
jg
mov
in
sub
outsl
ret
push
data16
int3
cmp
lea
outsb
inc
jp
cwtl
lret
or
xor
out
adc
push
push
pop
test
fmull
xchg
jg
xor
xchg
rol
jo
repnz
clc
inc
std
jg
movsb
sbb
dec
mov
sub
inc
mov
ror
das
push
repz
push
mov
in
or
out
adc
gs
pop
mov
and
xlat
clc
fwait
movsl
jl
sub
bound
scas
push
adc
jbe
insl
push
or
inc
sbb
cmp
sbb
cmp
adc
push
clc
shrl
xchg
sti
jne
andb
aam
dec
mov
mov
fs
outsl
mov
loopne
daa
shrb
xchg
adc
call
sti
fwait
inc
iret
aam
push
lock
into
adc
inc
cmc
push
pusha
pop
test
xor
mov
test
sti
mov
cmp
pop
sub
or
or
fildll
pusha
popa
dec
lahf
sbb
push
cld
aas
pusha
fwait
mov
pop
dec
int
scas
mov
xchg
aas
adc
push
mov
jmp
push
loope,pt
in
insl
popf
dec
ret
dec
sbb
mov
aas
mov
dec
sub
pop
push
jnp
inc
lods
test
in
lret
pushf
jne
pop
mov
ljmp
cs
jmp
loop
mov
dec
cs
ds
add
mov
add
jb
pop
sbb
push
mov
mov
sbb
or
out
fucom
sbb
sbb
dec
push
enter
fs
rep
stos
push
jne
decl
lcall
push
loopne
sub
out
fwait
popa
and
std
into
je
imul
stc
or
cmp
jne
add
sbb
cli
cmc
sub
add
and
jmp
and
sbb
lods
shrb
and
add
es
sub
pusha
jnp
xor
ret
jne
pop
repz
stc
mov
loope
ds
pop
aas
repz
fsubr
rolb
outsb
inc
ret
dec
inc
dec
bound
enter
jbe
sub
stos
cwtl
and
testl
sbb
lret
inc
idivl
rclb
and
or
addr16
scas
xchg
scas
scas
imul
fwait
cltd
loop
mov
fisttps
out
cmp
mov
les
fwait
stc
dec
popa
jg
fsubrs
jne
outsb
pop
sub
cmc
mov
jns
jbe
pusha
test
xor
les
jo
cld
jne
jecxz
pop
dec
cmc
inc
cmp
aad
imul
test
test
dec
test
jne
fcmovbe
leave
push
fldenv
lret
cmp
imul
xchg
ret
pop
xchg
pop
addr16
scas
sbb
and
enter
inc
jbe
fdivl
mov
loop
push
adc
dec
lods
decb
je
iret
dec
sub
pop
out
data16
insl
sub
jo
repz
stos
sub
icebp
cmpsb
push
dec
push
adc
pop
das
and
je
jecxz
gs
scas
loop
push
mov
inc
dec
cld
dec
cld
repnz
or
mov
xor
and
iret
rorb
outsl
or
or
dec
int
sbb
pop
dec
or
sub
jl
imul
dec
test
je
jne
scas
push
or
cwtl
and
jge
stos
les
or
out
push
mov
fwait
push
cmpb
jno
sti
ret
push
sbb
xchg
sbb
jp
outsb
int3
sub
shlb
mov
lea
push
jbe
ljmp
out
sub
push
or
imul
mov
gs
sub
scas
movsb
lret
das
arpl
stos
push
sub
mov
cmp
add
pop
das
bound
insl
sub
fcoml
inc
dec
int3
sub
jne
xor
adc
int
and
cwtl
jle
mov
jno
add
sbb
ss
push
pop
mov
mov
add
insl
repnz
popf
popa
test
ret
daa
in
cmp
ds
js
fdivrl
fiaddl
div
icebp
inc
pop
lods
sbbl
mov
out
or
cmc
scas
sub
mov
or
jmp
xor
je
cmc
int
arpl
jno
flds
jmp
jle
cli
add
std
int3
out
and
xchg
hlt
test
jl
xor
dec
pusha
cmp
ja
add
ljmp
into
bound
mov
push
fdivrs
rolb
std
clc
pop
movsl
inc
sti
push
in
loopne
dec
add
jnp
inc
push
xor
xchg
movsb
add
andl
dec
insb
or
push
call
rcr
in
jl
les
cmpsb
ficoml
imul
popa
or
addr16
push
mov
xor
jecxz
sbb
mov
sbb
int3
push
lods
loopne
insl
test
aas
dec
jae
inc
icebp
pop
dec
les
clc
sbb
leave
test
xor
scas
inc
in
pop
or
or
push
xchg
in
mov
add
dec
cld
or
pop
xor
clc
push
push
stos
pusha
out
jp
or
dec
dec
pop
cld
or
sti
mov
pop
or
mov
add
mov
ss
ds
push
cs
adc
jmp
sbb
push
mov
dec
inc
or
cmp
dec
or
mov
mov
leave
popa
dec
sub
data16
iret
pop
dec
push
and
sub
sbb
mov
dec
fs
or
mov
orb
out
cmp
xchg
cmc
pop
popa
dec
adc
xchg
scas
cld
ds
std
aad
xchg
dec
push
inc
in
xor
jp
mov
aas
mov
dec
dec
pop
cld
mov
sti
adc
int
xchg
push
adc
dec
fs
clc
ds
push
cs
ret
pusha
pushw
adc
adc
arpl
or
xor
leave
popa
dec
sub
inc
data16
cwtl
ljmp
mov
jp
lods
sub
in
adc
stc
ficomps
inc
xchg
cmpsb
fs
pop
loopne
lea
jo
popa
and
xor
mov
dec
daa
inc
mov
dec
dec
test
data16
sub
hlt
clc
push
push
loop
sbb
dec
push
lock
imul
fisttpl
inc
jno
jae
dec
xor
loop
sbb
vmovapd
in
push
js
subl
xchg
sbb
sbb
or
pop
push
loope
pop
sbb
nop
push
jne
dec
sbb
sbb
dec
nop
xchg
jge
stc
pop
data16
inc
hlt
out
clc
mov
les
testb
jae
mov
or
mov
dec
jmp
pop
sub
dec
and
mov
jmp
cmc
cs
dec
inc
sub
insl
lret
movsb
dec
test
sbb
scas
jno
push
data16
jnp
je
or
mov
lahf
sub
sti
add
dec
mov
cmc
sub
js
dec
scas
pop
arpl
push
jmp
adcl
dec
dec
shlb
xor
cmp
aas
xchg
sets
cmpsl
js
cmovp
and
ret
jo
popf
push
mov
or
das
pop
xor
pop
mov
pusha
addb
pop
push
test
sub
inc
mov
ljmp
in
les
repnz
sub
jecxz,pn
adc
js
inc
jbe
loope
jne
insl
imul
or
xlat
cltd
push
adcb
pusha
in
into
in
cli
or
insl
addb
repnz
jecxz
add
fldenv
fs
mov
gs
lret
mov
xchg
pushf
fbstp
mov
popf
add
bound
ret
imul
jbe
negl
shrb
dec
or
push
imul
nop
xchg
inc
popl
dec
mov
jmp
push
rorb
nop
cmpsl
push
imul
xor
push
in
push
test
push
fistpll
inc
in
mov
add
sbb
sarl
cmp
xor
imul
jmp
rcrb
xchg
shlb
xor
pop
mov
ret
push
sbb
loopne
push
add
adcb
cli
notb
aam
push
add
bound
sub
dec
inc
ret
jbe
and
popf
jl
sti
lods
sbb
cld
fs
fs
ss
es
xchg
lds
jns
xchg
aas
aad
dec
push
push
ret
or
or
int
sbb
scas
jb
scas
fimull
jbe
push
sbb
mov
shrb
pushf
sub
jnp
lea
rcl
imul
xchg
test
fwait
imul
mov
mov
xchg
arpl
cmp
pop
inc
aad
jle
test
add
lcall
movsl
popa
in
lcall
bound
wrmsr
mov
fldl
sbbl
mov
jne
adc
push
mov
mov
push
scas
xchg
jge
test
jle
ffreep
arpl
inc
dec
push
shrb
pop
mov
sbb
inc
scas
dec
outsb
cmp
rcl
lods
pop
pop
mov
or
addr16
push
push
repnz
icebp
mov
pop
mov
adc
lock
push
mov
ss
in
cmc
es
imul
push
loop
mov
mov
bound
sti
pushf
add
pop
int3
lds
xchg
bound
xchg
jl
repz
cmc
mov
adc
shlb
lock
lea
pop
out
sbb
push
jno
sti
adc
js
push
mov
sub
push
enter
scas
std
pushf
test
mov
stos
jb
sbb
dec
cmp
mov
add
push
leave
dec
fwait
sbb
mov
outsl
inc
push
adc
test
dec
dec
mov
neg
movsb
inc
outsb
mov
ja
push
push
and
or
cmpsb
mov
hlt
js
ja,pn
ret
nop
aaa
jmp
icebp
outsb
imul
stos
repz
inc
sbb
mov
inc
hlt
xchg
add
leave
or
sti
or
out
sbb
mov
xchg
and
outsb
xchg
add
pop
lods
js
xchg
imul
repz
cli
cmpsb
adc
adc
test
xchg
adc
sbb
jo
sub
xor
cs
arpl
pop
lds
jb
adc
fs
sbb
enter
pusha
pop
inc
stos
lds
aas
test
adc
ljmp
in
cmp
inc
xor
or
lea
outsb
out
scas
lods
and
out
sbb
sub
fwait
cwtl
adc
int
outsb
dec
movsl
fwait
aad
xchg
pop
lods
fiadds
sub
xor
pushf
cmc
sub
daa
mov
dec
arpl
jne
rcrb
push
push
out
adc
loopne
in
pop
pushf
pop
sub
leave
dec
fbld
fwait
out
push
inc
dec
pop
ss
xlat
pop
pushf
jae
jbe
adc
stc
push
mov
fmuls
pop
dec
call
shr
sub
test
fs
outsb
sarl
jge
sbb
mov
das
push
and
outsb
pop
adc
scas
pop
lcall
sub
call
fstps
push
out
test
cmovno
lods
jo
xlat
ficompl
cmp
push
dec
stos
lock
bound
push
out
call
push
and
test
test
push
jl
in
shll
jle
mov
imul
inc
jl
mov
push
pop
test
outsl
push
xchg
fcomp
dec
jae
xor
adc
jmp
sub
in
push
mov
xorb
xor
into
lret
insb
and
pop
pop
sbb
ret
cmp
or
jo
pop
dec
jns
int3
xchg
lahf
in
stos
push
popf
scas
jmp
sbb
or
or
inc
cld
pusha
push
mov
nop
push
pop
jb
xor
test
rorl
stos
rclb
ffree
aas
popa
clc
shl
pusha
enter
test
repz
cmc
push
mov
push
shrl
rcll
iret
mov
inc
sti
fs
pop
inc
pop
cld
inc
lret
dec
adc
outsb
adc
jno
int3
div
pop
xor
repnz
mov
lret
jg
jge
fstps
orb
mov
movl
bound
jp
mov
cwtl
pop
movsl
enter
ret
inc
push
stc
aam
pop
mov
push
cmp
pop
sub
leave
sti
mov
fwait
xchg
ljmp
pop
or
cld
icebp
mov
mov
ljmp
xlat
lods
repz
cld
adc
adc
aad
jge
iret
sbb
sub
or
push
fs
movsl
out
pop
fcompl
jbe
imul
aaa
jp
data16
mov
and
inc
and
sbb
or
fwait
mov
pop
out
leave
sbb
dec
hlt
sub
sub
adcb
push
cmp
addr16
mov
rcrl
lea
xor
in
cmc
sub
dec
jae
sub
mov
nop
mov
and
cmp
fcmovbe
cltd
sbb
data16
out
cmp
rorl
xorl
ficoms
xchg
pop
sub
out
pop
out
or
jne
xchg
stos
icebp
lret
dec
arpl
int
mov
jae
int3
cmpsl
cmp
icebp
hlt
jbe
mov
cmp
xchg
fwait
mov
xchg
movsb
int
sbb
pop
xchg
pop
jl
das
bound
bound
out
out
stc
lock
jle
jp
mov
out
rcrl
fs
sbb
or
push
jno
and
fsubs
outsb
pop
lds
mov
js
test
sarl
push
inc
fs
sti
pop
ret
scas
sub
dec
dec
mov
stos
dec
bound
lcall
push
xchg
int
cmp
add
dec
or
push
add
loopne
out
sbb
jbe
sar
inc
hlt
lcall
addr16
push
es
test
mov
test
pop
or
push
jae
stos
xchg
jg
movsl
popa
sbb
pushf
inc
cmp
int3
mov
xchg
jecxz
push
add
mov
fs
dec
cs
push
lods
std
es
int3
clc
scas
fstl
call
dec
pmullw
xchg
lods
jno
cmp
push
jne
fidivrl
mov
mov
loopne
out
test
pop
xor
mov
rorl
mov
dec
adc
sbb
pop
out
leave
out
fs
sbb
ss
push
lods
mov
outsl
stc
je
adc
insl
cmp
mov
data16
jae
pusha
mov
xchg
dec
jecxz
out
cmc
jp
imul
xlat
fs
dec
mov
popa
pop
pop
sbb
add
jp
and
pop
xchg
fstpl
outsb
cmc
scas
cmp
pushl
sub
inc
negl
faddl
jae
pop
bound
xor
push
pop
mov
adc
jnp
inc
ljmp
js
inc
jno
sarb
dec
movsb
adc
repz
mov
stos
dec
push
mov
sub
sub
fwait
inc
in
arpl
mov
xchg
in
pop
xor
inc
xchg
jle
daa
inc
cwtl
int
add
push
or
les
cmp
outsb
in
cmp
popf
push
sbb
add
pop
mov
into
cmp
push
pop
add
xchg
outsl
push
out
or
fsubl
push
lds
sub
or
test
jl
les
movb
enter
pop
sub
jne
stos
add
adc
fwait
lods
dec
nop
or
mov
sbb
ret
test
incl
pop
rcrl
add
jl
pmaxsw
push
pop
push
in
and
pusha
repz
lock
jmp
mull
cwtl
xchg
dec
sub
pop
in
icebp
mov
push
inc
popa
addr16
add
inc
jmp
lcall
fsubr
ret
adc
test
fildl
cwtl
mov
scas
jecxz
mov
je
imul
clc
jle
rorb
rorb
aad
push
push
mov
in
int3
cmc
pop
mov
xchg
jg
lret
pop
shlb
sti
sbb
fsubl
shufps
or
mov
inc
shrl
rorl
outsb
int3
fwait
xor
dec
or
stc
mov
out
xor
dec
mov
ror
sbb
xchg
sbb
rclb
ss
shlb
cld
loop
mulb
cmp
mov
into
imul
sbb
sub
addr16
mov
inc
push
jb
outsl
jae
dec
inc
xor
jns
fcoml
sti
loop
mov
sub
or
loopne
in
xchg
jle
sub
jno
pop
popa
or
and
int3
test
lret
pusha
and
pusha
sub
stos
cwtl
int3
mov
sbb
addr16
cmp
dec
pop
inc
pop
test
push
and
fs
jl
adc
repnz
mov
decb
pop
in
ret
arpl
pop
push
push
cmp
ss
rcr
test
int3
jle
jg
dec
xchg
pushw
fistl
out
jl
es
lock
ja
push
scas
decl
mov
adc
sti
adc
mov
pop
and
mov
push
fwait
dec
sbb
lret
mov
lds
add
push
jbe
and
sub
test
push
cmpsb
test
jnp
js
outsb
jecxz
out
pop
jle
jmp
and
or
call
ljmp
mov
popa
push
pop
add
dec
jae
jns
lret
jecxz
cmp
stos
sub
xchg
push
ja
addr16
ljmp
xor
cld
repz
xorl
push
leave
pop
jmp
fimuls
cmp
ss
jno
adc
sbb
addr16
push
cmpl
mov
cmpsb
mov
pop
xchg
push
and
imul
fwait
imul
out
and
mov
out
add
or
xor
mov
lods
dec
fs
push
fs
fwait
inc
xchg
movsb
lods
fs
push
movsb
mov
fs
mov
push
xor
push
sub
stos
push
lret
push
xor
sti
xor
add
mov
in
xchg
fs
scas
movsl
je
loopne
jbe
int3
push
jp
in
fdivs
imul
outsl
xchg
sub
stos
push
scas
jo
push
data16
adc
lret
jle
jmp
sbb
xchg
test
aaa
repnz
int3
sub
sbb
push
shr
mov
cmc
setne
mov
cld
pop
sub
dec
inc
and
lret
enter
addr16
push
sbb
adc
lock
bound
inc
adc
popf
arpl
xchg
or
pop
mov
outsb
dec
scas
lods
std
push
out
pop
add
stos
push
lret
xlat
repz
push
xlat
jnp
mov
insb
sub
or
rep
xchg
sub
inc
xor
call
sbb
fwait
adc
xor
push
cld
cld
into
imul
jo
fwait
out
mov
ret
push
outsb
xchg
push
cltd
inc
mov
push
cmpsb
pop
out
mov
fcoms
out
mov
mov
arpl
sbb
dec
repz
jno
jp
test
incb
push
adc
cltd
insb
dec
scas
xchg
sub
cmp
gs
add
push
inc
xor
outsb
clc
jns
out
lods
ss
sbb
in
dec
loop
xor
stos
inc
mov
push
std
mov
jle
xchg
and
dec
mov
std
fcomps
imul
outsb
mov
fimull
inc
mov
push
mov
pop
enter
les
jne
cmc
sbb
repnz
push
das
jne
pop
pop
lcall
add
clc
movsb
jns
inc
or
xor
sbb
sbb
test
je
mov
push
cli
mov
pop
clc
add
ljmp
and
mov
cmp
pop
xor
mov
idivl
inc
cmc
jae
dec
ljmp
inc
fdivr
sbb
lahf
xchg
sub
gs
call
sbb
call
stos
push
push
popa
out
cltd
sarl
repz
notl
stos
add
push
outsb
push
sub
sbb
test
out
dec
in
les
addr16
sub
cmpsb
and
daa
repz
call
lret
fisubrl
mov
cmp
pop
into
test
repnz
ficoms
pop
ss
mov
js
das
cli
xor
dec
loope
pushf
adc
decl
jl
shlb
sahf
jle
stc
inc
dec
mov
mov
inc
adc
in
inc
scas
out
pop
sarb
loopne
ljmp
popf
stos
sbb
shlb
ret
push
cltd
scas
in
shrb
stc
out
out
sub
ror
in
ror
push
fwait
inc
lcall
dec
je
sub
inc
jo
sub
push
std
data16
mov
in
rolb
in
sbb
scas
jo
pop
mov
sti
test
mov
inc
adc
ljmp
movsb
ss
mov
add
dec
push
jle
outsb
or
push
jmp
out
pusha
adc
sbb
pop
repz
test
adcl
and
popf
faddl
je
mov
ljmp
int
pop
jg
test
leave
fwait
xchg
stos
iret
hlt
inc
nop
sub
pop
in
xchg
xchg
or
std
pop
or
cmp
mov
jg
call
scas
sti
and
xchg
mov
js
inc
push
jo
cmp
jmp
dec
push
call
jo
cwtl
lret
cld
jmp
scas
or
xor
and
add
sub
aaa
fiaddl
cmpsl
imul
mov
xchg
lcall
bound
jg
cmp
aaa
or
cmp
dec
addb
jg
push
sub
imul
jns,pn
decb
mov
in
repz
lds
push
test
ljmp
rorl
stos
xor
add
call
sbb
jmp
test
inc
in
adc
jbe
adc
dec
in
cmp
ja
daa
cmp
jne
dec
stos
sarb
out
repz
lcall
dec
jmp
out
test
stos
dec
outsb
stos
call
jle
xchg
jmp
je
ret
add
daa
push
adc
addr16
addr16
mov
add
jmp
push
int3
inc
xchg
cmp
hlt
incb
pushf
jecxz
in
pop
test
cs
jnp
xor
jl
adc
cmp
clc
xor
arpl
push
and
or
cmp
rolb
jg
or
pop
push
outsb
out
fbld
cs
jg
sbb
push
mov
inc
out
aam
int3
sbb
inc
sbb
addr16
fdivl
adc
inc
inc
nop
jns
scas
xchg
dec
push
sbb
in
inc
xchg
sub
dec
sub
sub
sub
sub
movsl
and
jle
cmpsl
leave
mov
adc
jb
leave
and
loop
outsb
sub
cmc
adcl
adc
iret
insl
aad
insb
test
mov
add
out
out
shll
xchg
repz
mov
stos
adc
cs
adc
popa
int
aad
int3
pop
dec
push
addr16
in
and
sub
pop
push
int3
sub
mov
je
cs
in
sub
out
call
and
xchg
pop
cld
dec
inc
pop
inc
mov
push
xchg
inc
xor
mov
stos
push
out
sti
les
sbb
scas
dec
scas
cmp
popa
adc
repz
ret
inc
lock
imul
pop
jb
scas
aad
out
andb
out
jecxz
xchg
std
aaa
xor
pusha
shl
int
push
cltd
out
dec
jmp
jl
in
popa
inc
call
push
pop
dec
and
sti
addr16
pusha
push
jg
push
and
xchg
aad
es
sti
adc
xlat
pushf
iret
and
cs
or
push
popf
outsb
aad
sub
je
aam
fs
push
and
xchg
dec
or
mov
sub
mov
adc
insl
inc
inc
sub
popf
out
dec
cmp
jp
xor
xor
xchg
fwait
cld
jl
aad
dec
xchg
cs
inc
xor
inc
dec
jp
push
dec
dec
ja
iret
fcoml
pop
test
mov
adc
push
iret
cmc
arpl
stos
jae
push
fdivr
mov
ds
movsl
jp
idivl
jns
call
scas
cmp
ret
dec
cmp
stos
or
jg
mov
fmul
jl
pop
in
addr16
imul
push
jne
imul
sub
fs
pop
xchg
outsb
ljmp
push
add
shrl
aam
xchg
jo
and
pop
or
addr16
adc
sbb
call
iret
push
pop
outsb
add
adc
xor
cmpsl
cmp
cld
and
adc
out
popa
pop
cmc
cmp
jo
jl
rol
lds
and
cli
test
fists
jnp
xchg
ss
cs
xchg
jbe
clc
inc
or
lods
out
mov
xor
adc
pop
insl
push
imul
fistpll
push
xchg
iret
push
mov
scas
imulb
stos
scas
je
test
and
xchg
push
pop
fwait
pop
add
out
mov
cli
adc
cmovnp
incl
push
es
lods
xchg
lcall
rcrl
ret
lods
cmp
mov
mov
cmp
push
addr16
jmp
outsb
adc
jecxz
inc
mov
fwait
add
inc
stc
int
pop
shll
sbb
xchg
shrb
ljmp
jo
cmp
fcoml
out
icebp
jl
jno
movsb
fisubrs
outsb
cmp
dec
and
iret
ljmp
imul
stos
cli
jo
mov
pop
inc
rcrb
adc
xlat
xor
lock
in
out
into
lea
inc
aaa
scas
adc
in
in
scas
cmc
cli
outsb
mov
leave
push
fcompl
je
test
pop
sub
mov
je
scas
in
scas
adc
mov
cld
inc
jnp
push
jnp
push
cli
pusha
popf
or
inc
jl
jle
dec
inc
dec
adc
daa
push
xchg
outsw
shl
or
pop
lods
out
add
xchg
clc
xor
jl
loop
repz
sub
imul
xchg
call
outsl
fwait
gs
hlt
fadd
xor
into
cli
lods
sbb
int3
popf
repz
push
jl
dec
dec
xorb
into
or
fs
pop
jecxz
mov
cmovge
aam
mov
dec
in
test
dec
add
pop
push
or
xor
in
fs
daa
and
in
dec
outsb
mov
popf
out
daa
xchg
dec
pop
jmp
ds
gs
idivl
shl
dec
ss
scas
pop
pusha
jl
out
sti
or
out
jae
push
psllq
stc
stos
cmc
mov
sub
push
arpl
int
outsb
push
out
mov
mov
clc
pusha
or
call
dec
pop
test
in
push
or
or
push
imul
adc
imull
inc
loopne
dec
aaa
pop
aad
jns
lods
mov
repz
clc
push
pop
dec
in
jno
mov
push
mov
dec
ljmp
js
in
pop
xchg
cmp
popf
xor
xor
std
pop
add
xchg
int
stc
pop
push
xchg
mov
sti
xchg
cwtl
gs
sbb
outsb
sbb
shrl
repz
mov
cmpsl
mov
jnp
in
and
out
mov
pop
int
popl
xor
inc
je
adc
lds
mov
ljmp
fdivl
sub
push
sub
inc
add
xor
mov
mov
mov
test
repnz
cwtl
ds
data16
mov
arpl
fwait
pop
bound
leave
push
mov
dec
mov
mov
sub
sbb
mov
lock
push
test
clc
inc
cmc
push
shlb
loopne
push
ss
push
sti
xchg
inc
pushaw
stos
lods
jbe
mov
dec
mov
int
cmp
mov
jmp
or
stos
bound
sub
cmp
xlat
jmp
xor
out
fs
fnsave
bnd
adc
push
jge
pop
xor
pusha
insb
xchg
xlat
iret
sub
cmpl
jb
inc
mov
repz
dec
fwait
xchg
jge,pt
push
dec
lret
dec
in
jg
xor
mov
das
fwait
out
das
cmp
out
cmp
sbb
aam
xchg
not
pop
adc
pop
adc
cmpsb
adc
mov
inc
push
fwait
bound
out
aaa
call
cmp
shrb
sub
vmwrite
out
into
int3
fcoms
jl
faddl
cmpb
cmpsb
int3
test
fisttpl
sti
jle
pop
mov
daa
sub
inc
shlb
das
dec
leave
shrl
stos
cmp
daa
in
sti
or
outsl
in
cmc
xchg
leave
lcall
clc
lods
xchg
scas
incl
adc
xor
jns
jae
xlat
imul
push
out
ljmp
orb
xchg
add
sti
mov
stc
fdivrl
data16
lods
pop
dec
sub
add
fmul
iret
dec
mov
out
sti
sbb
jne
and
imul
sarb
outsl
and
rcrl
dec
jl
cmp
imul
jmp
xor
jns
ljmp
fsub
sbb
pop
sti
leave
sub
jl
pop
out
push
fldl
push
xchg
pop
push
mov
enter
mov
aaa
add
sti
push
call
xchg
dec
jl
inc
xchg
jp
dec
sub
add
outsb
adc
push
cwtl
mov
enter
jl
repz
repnz
jbe
loop
pop
cmp
push
adc
es
in
pop
stos
test
jmp
leave
outsl
sarb
lret
pushl
aas
scas
dec
jmp
cmc
stos
int
icebp
xchg
xchg
xchg
cwtl
hlt
loop
lds
out
dec
int3
add
cwtl
cmp
dec
insl
loopne
imul
dec
mov
bound
jo
xor
pop
sub
imul
lods
ror
mov
out
outsl
call
mov
pop
fs
call
jmp
jno
sbb
in
jbe
dec
or
sub
push
scas
xor
xorl
data16
sbb
mov
les
mov
inc
lds
loop
fldenv
mov
or
fimuls
into
sahf
inc
and
out
sub
sbb
popf
sahf
mov
call
jne
insl
outsb
outsl
pop
xchg
int3
aas
je
cs
inc
mov
mov
stc
adc
clc
insl
sub
out
jg
push
fwait
jmp
or
mov
call
ds
mov
int3
add
pop
and
loop
scas
pop
jo
sbb
inc
dec
outsl
ja
dec
or
sub
enter
dec
mov
add
fnstsw
mov
dec
adc
out
enter
call
negb
shrl
lahf
pop
scas
sub
jmp
jbe
hlt
push
adc
shlb
pop
or
sub
push
subb
mov
adc
mov
in
push
rol
sub
dec
adc
dec
fcompl
cwtl
jecxz
iret
sbb
aad
add
leave
sub
loope
or
test
mov
arpl
pop
cli
repnz
in
mov
and
push
test
jmp
in
mov
fwait
imulb
lret
pop
out
inc
jne
lods
adc
dec
shr
lock
cli
push
scas
je
add
jmp
push
fwait
sbb
sbb
test
js
mov
fimuls
xor
scas
aaa
sbb
add
mov
incb
lods
sbb
push
jne
ret
stc
mov
shl
rorb
jnp
adc
iret
pop
arpl
cli
arpl
in
leave
mov
fnstsw
out
cs
fwait
mov
aas
mov
jmp
xchg
sbb
je
jnp
xor
and
mov
jb
adc
out
mov
js
cmp
cmpsl
out
push
push
dec
jne
mov
xchg
sub
cmp
xor
jg
xor
addr16
mov
sub
or
je
les
dec
outsl
sub
fwait
pop
leave
cmp
push
aaa
inc
aaa
mov
enter
ss
push
jne
pushf
cwtl
repnz
fildll
ja
shrb
fsubrs
rclb
repz
fwait
int3
scas
jge
cld
jns
dec
push
xchg
daa
faddp
in
orl
push
cltd
mov
push
cld
push
fwait
sbb
or
testl
lahf
addr16
push
cmp
mov
dec
jbe
sbb
add
fsubrp
xchg
push
fwait
imul
outsb
jnp
aas
push
fsubr
es
mov
push
mov
dec
into
stc
mov
jmp
push
jp
add
cmpsl
addr16
or
push
std
fs
mov
dec
inc
adc
xchg
cmp
test
je
addr16
lock
and
or
push
xor
test
imul
push
int
mov
lock
rorl
ljmp
je
icebp
add
adc
imul
adc
mov
mov
fwait
mov
insl
sti
add
repnz
aas
jmp
jl
stos
inc
and
mov
adc
ja
add
cmp
out
jnp
arpl
mov
xchg
enter
add
imul
je
sbb
iret
dec
pop
or
push
mov
jmp
push
adc
xor
mov
in
call
shrb
pusha
sbb
mov
add
add
out
mov
sbb
movsl
arpl
sti
cs
fs
ljmp
aad
mov
cmovae
inc
ss
jge
sbb
inc
cmc
loopne
rol
push
addr16
xchg
inc
idiv
jo
call
insb
push
enter
push
in
sub
sbb
in
sbb
fwait
jmp
cmp
sbb
adc
lods
fs
and
add
int
aad
mov
cld
cmp
push
jmp
call
xor
mov
fcmovnu
sbb
lods
xchg
xor
push
ficomps
shll
inc
fs
imul
fs
dec
icebp
std
addb
ret
pop
popf
pushf
xchg
mov
fsubrs
outsb
int3
and
into
pop
in
insl
mov
lret
xchg
adc
mov
jne
cmp
call
ret
stos
xchg
loop
sbb
outsb
cwtl
cmp
testb
sbb
scas
mov
push
clc
enter
in
push
dec
mov
sbb
push
aas
inc
ljmp
repz
inc
push
mov
test
or
inc
aaa
adc
inc
or
lret
out
adc
dec
mov
int3
lds
addr16
jecxz
aas
lret
js
lds
stc
add
sahf
cmpsb
insb
fsubrs
outsl
loope
pop
mov
sbb
jge
mov
roll
out
inc
lods
fdivl
lds
mov
mov
push
jl
mov
mov
imul
repz
popf
sbb
adc
lock
xor
fs
rolb
push
dec
sbb
icebp
mov
ja
mov
lret
adc
je
leave
popf
out
loop
fwait
arpl
sub
jno
in
std
repz
testb
cmp
stos
out
dec
repz
addr16
sub
pop
sub
pop
mov
xor
out
scas
cmc
mov
out
imul
sbbb
cwtl
mov
cwtl
in
cld
jecxz
push
aaa
pop
inc
movsb
gs
inc
adc
sbb
imul
pop
pop
or
push
and
stos
inc
push
popa
comiss
push
mov
shl
sbb
in
loope
mov
pop
lock
pop
mov
mov
sub
outsb
outsb
int
pushf
das
sub
pop
push
imul
pop
pusha
data16
push
outsb
imul
push
mov
fs
jne
dec
subl
push
jg
les
mov
ds
sub
sbb
js
mov
in
adc
jo
push
outsl
mov
mov
xor
push
jns
push
push
loop
push
cld
cmp
jo
push
imul
sbb
out
aad
int3
push
ljmp
and
popf
or
loope
lret
andb
sbb
stos
stos
adcb
pop
nop
sub
stos
mov
sub
imul
incl
fstl
aaa
lods
pop
leave
popf
or
mov
dec
push
push
int3
xchg
notb
push
popf
and
and
fbstp
sbb
shlb
xchg
xchg
mov
push
push
mov
divl
or
inc
push
ja
repnz
push
or
dec
fsubrs
adc
lods
dec
push
push
scas
sub
fwait
adc
inc
int3
sbbl
dec
or
pushf
call
fisubrl
and
into
test
mov
cmp
jg
lret
jno
cld
shrl
imul
in
xchg
fists
mov
or
xor
gs
dec
decb
data16
mov
sbb
xchg
dec
sbb
loopne
push
xadd
ljmp
into
xchg
in
jne
and
dec
ret
lcall
popf
or
jae
and
xchg
cmp
dec
fisubrs
jge
dec
jne
pop
push
push
push
dec
flds
enter
dec
imul
xor
outsl
jbe
stos
dec
rcrb
push
add
mov
repz
adc
fwait
stc
dec
pop
mov
stc
ja
pop
test
call
mov
push
lret
sub
xchg
xor
out
adc
dec
aam
sub
pop
popa
xor
mov
jne
cmp
jp
xchg
jb
sub
jb
and
xchg
pusha
mov
popf
fwait
les
sub
fs
or
scas
fimuls
sbb
push
js
fistpll
cmc
sti
xchg
in
jp
in
ljmp
push
jne
add
dec
pop
sub
imul
push
and
cmp
xor
dec
pop
adc
hlt
xor
pop
jo
imul
jecxz
cmp
shrl
xor
add
mov
cld
scas
jmp
pop
dec
imul
adc
cli
dec
pop
jmpw
in
jns
out
sti
stos
mov
sbb
jne
mov
sub
inc
lds
pop
repz
push
mov
fcoms
hlt
pop
fwait
out
test
inc
lret
mov
daa
inc
pop
adc
sub
popf
mov
pop
jae
xor
dec
add
ss
pop
out
mov
sub
dec
and
sbb
jo
pop
push
stos
pop
mov
inc
sar
fidivrs
bound
imul
add
cmp
imul
pop
ja
into
dec
incb
add
imul
pop
cli
mov
out
dec
sub
stc
inc
insl
jp
js
pop
cmp
ds
sub
cmp
cld
mov
push
testl
pop
ds
imul
mov
jb
out
cmc
cmp
push
dec
pushf
or
daa
cmp
clc
sti
inc
push
jb
or
xor
cmp
adc
cwtl
jmp
sti
stos
adc
push
mov
mov
sbb
mov
push
test
filds
jg
std
and
fwait
sub
outsb
test
cwtl
xor
jmp
pop
int3
sub
dec
and
jg
mov
arpl
scas
ja
ret
push
dec
cmp
xchg
popa
in
fwait
in
jne
out
jg
or
outsl
sub
push
lret
or
repz
fs
cmp
xchg
lcall
pop
and
ljmp
je
out
xchg
in
into
or
test
je
pop
push
fwait
dec
xchg
fs
or
lods
mov
popf
pop
jae
push
and
test
rcr
int
popf
mov
test
mov
mov
jmp
int
add
push
sbb
sbb
jl
leave
jae
test
outsb
push
fwait
push
add
cld
and
pop
pop
imul
or
movlps
pop
adc
jge
cmp
dec
or
out
stos
mov
pushf
fwait
mov
in
outsb
mov
push
nop
and
sbb
dec
add
dec
test
inc
repnz
sahf
ja
jne
iret
stc
sarb
fisubs
repnz
jl
push
pop
stos
loopne
pop
in
mov
jp
pusha
sbb
pop
out
popa
dec
ljmp
push
pop
sub
sbb
dec
int3
je
sub
or
hlt
sbb
shr
mov
mov
dec
add
idivb
test
data16
xor
fisubs
sub
xchg
push
add
inc
push
mov
xor
mov
cld
sbb
lahf
into
push
call
xor
scas
inc
jl
js
addr16
inc
and
xchg
in
mov
jmp
imul
push
pop
arpl
into
in
cli
inc
xor
cwtl
lahf
daa
test
jge
aad
cmpsb
inc
ret
and
jp
add
ljmp
inc
jle
add
add
rcrb
inc
jns
lcall
mov
sbb
jmp
test
and
jo
movl
insl
lock
imul
inc
add
int
addr16
or
stos
iret
loopne
mov
ja
out
add
sahf
jno
pop
cwtl
sti
pop
jg
lock
jle
lcall
lret
inc
into
test
sub
dec
cmc
aas
aaa
je
std
adc
mov
dec
xchg
fs
mov
fwait
std
stos
jb
test
call
cs
in
es
push
add
or
iret
inc
push
ret
in
js
outsw
xchg
lea
decb
sbb
or
inc
call
inc
les
xor
add
jle
add
fs
xchg
pop
or
loopne
imul
ss
pushf
jnp
and
jbe
xchg
push
jmp
sub
iret
pusha
jo
into
mov
dec
jge
lods
sbb
add
or
inc
push
cmc
xchg
movsl
xchg
dec
sti
adc
fidivrl
inc
adc
inc
out
mov
sub
sahf
loope
jns
add
pusha
test
xlat
popa
mov
in
and
cwtl
inc
jo
cmp
xor
push
pop
cmp
stos
movsb
xchg
cmp
icebp
sbbb
je
push
jmp
subb
sbb
sbb
out
popl
enter
sbb
call
inc
sbb
dec
adc
fs
imul
adc
lods
pop
cltd
adc
push
adc
fs
das
loope
and
gs
mov
iret
xor
je
jl
push
push
jne
xchg
mov
sbb
pop
in
outsl
and
jg
lods
sbb
pop
push
jmp
data16
in
lds
pop
sub
cltd
imul
sub
inc
push
fld
inc
push
dec
push
jne
aaa
pusha
enter
aaa
outsb
dec
data16
jne
sbb
mov
pavgb
ret
sbb
dec
and
inc
je
inc
testl
fistpl
xchg
pop
jno
mov
adc
sub
fwait
pop
in
mov
sub
inc
push
out
pop
int
push
mov
jb
pop
ss
dec
stos
les
sbb
or
xor
sub
adc
mov
jbe
dec
mov
adc
imul
imul
cmp
stos
pop
lret
mov
jae
xor
push
jl
dec
mov
adc
cmovns
stos
push
fwait
sub
in
jle
lret
imul
sahf
sarb
cwtl
jae
jno
sub
sub
jge
push
inc
or
jl
adc
lds
ljmp
sbb
inc
sbb
cmpsl
dec
mov
sbb
xor
push
data16
data16
mov
data16
mov
push
popa
adc
in
mov
cmc
push
jns
adc
pushf
cmpsb
mov
inc
xor
sub
mov
cmpl
mov
adc
pop
mov
cmpl
movsl
data16
cli
inc
shlb
and
mov
pop
push
bound
popa
or
imul
lods
mov
jmp
pusha
bound
jl
and
dec
pusha
and
fbld
push
sbb
mov
inc
add
pop
sbb
add
stos
mov
clc
mov
sbb
jns
jae
inc
add
mov
cmp
shlb
or
repz
cli
xlat
jo
xchg
dec
xor
lods
xor
js
shrl
mov
shlb
shrl
sti
mov
test
jle
call
scas
jl
arpl
rcll
psadbw
mov
aad
jae
jmp
lds
mov
cltd
sub
inc
call
fadd
test
fimull
mov
in
ljmp
sbb
mov
out
mov
jl
pop
fldt
push
inc
xchg
adc
ret
or
jae
adc
mov
fbstp
push
xchg
jmp
call
imul
add
cmp
test
jo
in
in
jmp
arpl
shlb
mov
adc
cmp
or
xor
jno
sahf
xchg
data16
jbe
or
jmp
pop
sub
sbb
int3
fsubrl
pop
in
sub
imul
popf
insb
lret
out
stos
jmp
add
out
imul
ljmp
jbe
je
jg
mov
int
cmp
jg
sbb
test
loope
je
pop
in
aam
jns
call
cwtl
loope
mov
lahf
and
out
xchg
je
sub
icebp
cmp
adc
imul
push
in
sarl
sub
adc
inc
nop
mov
xor
loop
repz
cmc
scas
mov
jb
adc
into
add
jmp
iret
fistps
in
enter
xlat
pusha
into
dec
sub
jo
push
outsl
loope
dec
or
ret
iret
stos
sahf
xlat
rorb
ja
mov
out
leave
mov
jmp
out
sub
and
mov
cmc
insb
iret
sub
out
fwait
clc
repz
xchg
jmp
icebp
rcrb
fwait
pusha
add
mov
lahf
arpl
push
jg
sub
push
xor
ret
push
out
cmp
outsl
sub
xor
push
daa
fldenv
pop
pop
loop
push
scas
scas
sub
lcall
cmc
ljmp
out
pop
ret
lret
and
test
out
cld
mov
jle
xchg
xchg
sub
dec
cmp
lret
xchg
xchg
mov
bound
andb
mov
in
add
xchg
push
adc
jg
pop
or
xchg
jp
bound
jecxz
lods
or
aaa
popa
ds
loope
push
jne
aad
push
stos
or
jbe
jbe
lret
and
mov
xor
sub
cmc
lds
sbb
fidivrs
mov
pop
mov
loope
dec
sub
lods
jmp
in
ljmp
stos
cmpsb
cmp
sti
or
or
or
shrl
stos
push
iret
sbb
js
adc
or
call
mov
ss
gs
xor
xor
xor
dec
sbb
clc
pusha
fstps
mov
scas
int3
jns
dec
xor
mov
lret
les
push
dec
fisubrs
jmp
pop
pop
dec
imul
jmp
pushf
jp
and
dec
dec
scas
adc
pop
jo
push
enter
sbb
and
das
jo
pop
das
mov
inc
incb
inc
rcl
test
xlat
dec
push
roll
or
inc
nop
sbb
mov
push
jns
jmp
dec
or
lahf
cli
cmovp
mov
push
mov
bnd
in
push
xchg
adc
lss
cmp
and
insl
cmc
mov
dec
cmc
lock
jmp
rcrl
mov
ds
jbe
ljmp
push
pop
push
cld
out
or
sbb
mov
in
js
dec
xchg
shll
fcomip
fsubrs
enter
mov
pop
out
stos
ljmp
pop
lock
out
pop
cli
inc
mov
inc
jnp
call
sub
mov
je
cmc
out
aaa
addr16
mov
inc
rcr
mov
pop
data16
and
out
arpl
mov
dec
mov
imul
mov
bound
xchg
dec
lock
out
mov
std
pop
fisttps
jo
pop
test
ja
pop
movsb
lock
dec
or
in
inc
mov
jno
int3
out
pop
dec
int3
cwtl
cmpsb
sti
scas
rorb
inc
xor
in
ja
mov
pop
mulb
jecxz
sbb
sbb
push
dec
adc
pop
add
sbbb
inc
dec
pop
nop
mov
xor
jl
mov
pop
out
add
bound
or
mov
push
orl
pusha
clc
subl
push
lea
mov
xor
insb
sti
push
push
jmp
dec
fwait
in
pop
ja
push
ret
dec
sub
stos
stc
sub
or
or
les
movsw
js
mov
and
add
mov
mov
mov
in
fwait
in
int3
ja
jmpw
xor
jbe
cmpsl
movsb
out
loop
js
jmp
pop
mov
sbb
xor
movsb
outsb
dec
call
ret
xor
jmp
pop
mov
push
mov
inc
dec
pop
mov
mov
inc
pop
loopne
pop
jnp
pop
jp
jp
or
jnp
js
loop
out
js
out
jns
cld
jg
ljmp
data16
jno
dec
dec
inc
mov
jne
int3
pop
out
add
cmp
mov
out
inc
incb
ja
add
push
push
add
shl
pop
jecxz
adc
push
inc
addr16
dec
inc
in
sarl
xchg
leave
cld
xchg
addl
pushf
push
iret
addr16
push
out
inc
imul
das
inc
stos
out
dec
jne
push
or
repz
insl
sbb
loope
sub
fbstp
lea
shlb
xlat
push
and
adc
jle
pop
out
pop
push
test
jnp
in
outsb
imul
mov
cmc
push
imul
fwait
dec
cmc
fs
and
mov
pop
fcomps
fs
mov
out
scas
fisubs
add
int
push
sub
aaa
mov
jmp
stos
aaa
xchg
call
pop
iret
xor
je
adc
jmp
data16
and
fdivr
pusha
add
data16
fnsave
jmp
in
xor
nop
fwait
imul
sbb
out
jo
dec
sbb
inc
fsubrl
fs
sub
adc
fucomp
jecxz
jnp
jecxz
out
push
imull
pop
lret
push
dec
jle
add
icebp
jno
cmp
fsincos
pop
push
jp
and
mov
sti
dec
push
add
dec
in
or
pop
sub
shr
out
or
jns
enter
outsl
xor
rsqrtps
out
dec
add
push
jnp
xchg
gs
fidivl
push
call
rclb
popa
fnstenv
or
iret
pushf
lret
jnp
inc
pop
data16
jo
push
arpl
push
inc
fsub
add
mov
dec
in
out
test
adc
jg
push
lods
push
out
fwait
adc
aad
xchg
xor
mov
notb
push
jns
aad
mov
scas
sbb
mov
cmp
mov
in
or
sbb
mov
mull
outsb
or
push
in
sub
lds
int3
in
pop
stos
mov
rorb
ret
mov
inc
mov
adc
and
sub
xor
hlt
inc
mov
add
sub
or
call
mov
addr16
mov
loop
out
ret
fs
inc
inc
push
data16
les
sti
sahf
ss
leave
and
outsl
in
jl
xchg
jle
jl
stos
mov
cmp
cld
or
and
mov
call
adc
push
adc
push
push
pinsrw
jmp
mov
fs
stos
pop
lret
fs
hlt
sti
or
mov
enter
insl
mov
lods
loope
or
pop
in
pop
scas
data16
bound
sbb
stos
outsb
pop
loopne
and
bound
call
inc
xor
lock
lock
add
data16
lret
stos
jb
inc
jno
rol
jle
sbb
outsl
icebp
sbb
xchg
or
lock
push
out
in
vpaddsw
in
adc
addr16
adc
lret
mov
mov
dec
int
xchg
data16
dec
mov
and
dec
test
push
dec
in
pop
inc
stos
adc
dec
cld
cli
iret
stc
scas
data16
push
aas
cmc
addb
inc
sbb
jp
jmp
cld
pop
mov
dec
push
jae
popf
inc
or
mov
hlt
imul
jo
call
clc
imul
adc
sarb
pop
daa
and
ljmp
xchg
jbe
push
movsb
cmovp
fwait
dec
mov
inc
cmpl
push
repz
sbb
add
or
adc
jmp
jge
jmp
push
js
lods
push
add
push
loop
outsl
ret
mov
cmp
repz
mov
xor
cmp
fwait
flds
scas
xor
lret
xor
pop
lahf
mov
data16
lods
sbb
xchg
xorb
mov
mov
push
imul
gs
je
fwait
cmp
insl
mov
xchg
in
or
sbb
mov
xor
testl
cmp
rclb
xor
sbb
cwtl
mov
addr16
stos
ret
jnp
push
sbb
cs
iret
mov
call
cs
sete
loop
dec
rcrb
std
sti
addr16
in
mov
into
push
mov
jp
push
int3
xchg
sub
push
jle
es
sarb
push
leave
repz
in
inc
js
inc
mov
mov
stos
shll
xlat
out
dec
icebp
aas
in
cwtl
inc
cmp
mov
sub
xchg
fisttpll
xchg
sbb
test
mov
fs
xor
xchg
popa
and
decb
je
xchg
sti
push
xor
dec
mov
adc
lock
out
stos
adc
dec
pop
pop
push
call
fbld
mov
pop
pop
xor
scas
rorl
inc
xchg
int
test
pushw
hlt
xchg
aad
or
xchg
xor
xchg
dec
in
inc
pop
out
in
or
scas
adcl
or
fcoms
jae
cmp
pop
je
sub
pop
pusha
cwtl
xchg
push
addr16
shr
loop
sahf
mov
je
xchg
ret
sbb
popf
jge
outsb
cli
scas
std
pop
mov
jnp
push
jno
stos
adc
cltd
stos
inc
inc
pop
inc
shll
data16
add
jb
mov
jne
mov
mov
lea
int3
repz
into
add
stos
pop
mov
cmp
prefetchw
add
test
pop
mov
aas
xchg
pop
inc
push
pop
imul
push
or
add
xchg
mov
inc
sbb
or
cmp
push
das
mov
or
push
out
push
popf
mov
cs
fwait
js
mov
addr16
inc
add
or
pusha
pop
push
fwait
lret
jg
in
lods
call
out
insb
aam
movsl
or
xorl
xchg
movsl
jl
adc
xor
mov
stos
push
test
dec
lods
mov
fwait
jmp
jmp
and
push
ss
jo
in
outsl
adc
daa
pop
add
cmp
pandn
jl
loop
popa
std
xchg
pop
std
fs
out
imul
sub
jb
xchg
jae
pop
jmp
ret
push
into
popa
les
cwtl
jp
adc
adc
mov
cli
loop
sbb
test
pusha
orb
lahf
sbb
push
add
mov
add
stos
push
dec
and
or
cmpsl
or
aam
sub
sbb
inc
pop
push
ret
xchg
jno
jmp
pushf
adc
push
mov
jmp
inc
cmp
and
movsb
dec
dec
adc
popa
dec
shll
imul
es
js
dec
dec
push
decl
hlt
cmc
cs
popf
mov
cld
fsub
jl
repz
pop
adc
add
sti
ss
data16
ret
rorl
sbb
mov
es
test
int
jge
and
mov
jb
dec
ret
repnz
push
pop
call
xchg
mov
push
mov
push
inc
adc
repz
jl
push
cmpsb
nop
shrl
pop
test
dec
adc
imul
bound
jo
mov
xchg
outsl
lods
jae
pop
sub
mov
aad
ljmp
outsb
sbb
push
mov
gs
scas
sub
hlt
aam
mov
movsl
inc
jmp
sub
xor
pop
cwtl
push
loope
test
cmpsb
nop
pop
lret
push
shlb
or
out
or
add
or
popa
mov
movb
scas
rorb
push
cmpsl
mov
pusha
shll
add
mov
add
sbb
sti
fsubl
xor
pop
jnp
test
scas
mov
push
cli
sub
dec
fmul
ss
popa
inc
int
mov
pushl
in
cmp
and
and
ljmp
enter
xchg
jecxz
xor
pop
sti
std
inc
jmp
push
or
and
dec
cmp
xor
jmp
cmp
test
pop
imul
push
xor
mov
daa
mov
out
jle
addl
mov
addr16
cmp
stos
sbb
into
adc
jg
sbb
lea
int3
push
std
cmc
cmp
adc
ljmp
call
out
insb
ljmp
out
xchg
dec
sub
push
or
jmp
test
push
sbb
sbb
xchg
hlt
push
push
lock
fucomp
adc
adc
insl
out
xchg
dec
out
jl
sti
push
insl
xor
jne
and
outsl
add
mov
mov
jbe
fwait
push
mov
addr16
hlt
push
out
mov
sti
sbb
hlt
imul
jp
je
inc
insb
iret
cmc
xor
into
pop
dec
fisttps
cmpsl
mov
jmp
pop
imul
js
lods
cmp
popa
dec
mov
loop
inc
fcmovb
loopne
out
es
leave
mov
xchg
lock
addr16
pop
in
xor
jne
push
andl
fwait
jne
rcll
dec
and
add
aad
push
or
mov
lds
mov
jmp
jl
cwtl
push
flds
mov
ljmp
xchg
aam
out
jecxz
bound
fdivs
stos
sbb
leave
mov
incl
imul
addr16
sub
and
stos
fadds
cmc
shrl
jns
sub
rorl
pusha
and
pop
mov
imul
sbb
clc
out
scas
arpl
fld
rolb
push
cwtl
out
fildll
push
jne
cld
fucomp
insb
mov
xchg
movsb
das
dec
fwait
mov
sbb
push
jnp
mov
popf
mov
sbbl
or
in
scas
lds
int
pushf
sbb
lods
insl
imul
sub
add
cmpsb
sub
lea
jecxz
ja
pop
sarw
sbb
stos
into
bound
and
or
cmp
test
decl
pop
fisttpl
add
aad
jmp
pop
add
adc
pop
jo
dec
jp
pop
pusha
inc
lock
cmp
sub
jmp
sbb
enter
cld
fwait
popf
ds
int3
cmc
sub
xor
pop
pop
mov
and
ds
cmpsl
adc
sbb
push
adc
addr16
push
addr16
scas
fucomip
fimuls
sbb
cmpsb
fs
pusha
add
psubd
xchg
sbb
imul
xchg
out
push
ficompl
mov
pop
pop
push
sbb
fwait
dec
repnz
push
mov
sub
aad
xchg
cli
insb
rcrb
dec
ljmp
outsl
or
xchg
icebp
fwait
mov
jle
sub
and
mov
outsb
dec
out
jg
cmc
and
sub
in
lahf
int
aam
or
outsl
rcrl
int3
imul
dec
daa
fs
idivl
push
call
movsb
push
fs
test
lods
dec
mov
sub
sub
int
repz
xchg
push
out
lds
mov
outsb
cld
push
sub
inc
xchg
jle
ss
int3
or
inc
test
add
cli
push
sti
leave
xchg
inc
cmpb
popf
xor
std
cmp
dec
or
pop
lea
and
push
push
xor
xchg
mov
popf
cs
push
sbbb
mov
inc
popl
cmp
sbb
sub
mov
data16
lods
inc
rcl
nop
and
and
push
jmp
xor
jle
fs
clc
outsb
or
hlt
repnz
pop
jecxz
adc
adc
stos
lahf
test
and
in
push
and
jno
clc
cmp
ds
pushf
jl
sbb
leave
mov
incl
pop
fisttpll
mov
pusha
scas
bound
stos
inc
data16
out
incb
test
jae
push
outsl
mov
jo
lret
cmp
call
mov
fs
out
lock
xor
mov
jno
clc
mov
je
mov
imul
or
or
lret
mov
addr16
mov
lods
outsl
jnp
stos
or
push
add
mov
mov
inc
sub
in
mov
popf
mov
dec
cmpsl
xor
jb
fwait
cwtl
aas
sbb
leave
or
test
fwait
mov
add
mov
jbe
das
popf
adc
pop
sub
inc
mov
fstps
push
insl
outsl
jmp
addr16
pushf
sub
xchg
call
dec
test
mov
stos
je
pusha
ljmp
cmp
sub
cmpsl
shrb
aad
call
pushf
xor
cs
mov
movsl
dec
das
icebp
inc
ss
ja
and
cmp
sti
or
adc
jb
fwait
pop
imul
xchg
sub
je
dec
fwait
popa
loope
lcall
and
out
jo
xlat
inc
in
nop
xor
test
xor
mov
mov
ss
dec
xrelease
bound
or
inc
cltd
mov
movsb
jno
incl
sub
ljmp
and
ja
icebp
or
outsl
out
stos
dec
jo
pusha
cmp
mov
cmc
negl
ret
enter
cltd
lds
lods
xor
dec
lods
outsb
sahf
int3
std
daa
je
imul
sbb
push
sub
pushf
jo
int3
out
fwait
dec
and
xor
or
pmaxsw
jae
lcall
inc
addr16
add
in
fwait
loop
ss
out
dec
push
shll
filds
dec
xchg
xchg
daa
popa
or
cs
push
pop
out
sahf
mov
rclb
orb
js
mov
ret
loopne
adc
adc
insb
outsb
jecxz
inc
inc
cmp
push
adc
bound
dec
mov
push
hlt
jp
icebp
ret
jo
mov
out
mov
jns
mov
repz
ret
sbb
jp
jl
in
int3
out
adc
xchg
push
pop
push
test
sub
lret
xor
jmp
cltd
inc
pop
xchg
nop
xchg
lds
and
cli
jmp
lret
mov
js
jns
cmp
arpl
popa
ret
mov
cli
ljmp
push
cmpsb
push
pop
rorb
dec
addr16
ja
imul
and
lock
cs
popf
mov
nop
sub
ret
rcl
mov
mov
repz
adc
mull
xor
shll
sti
push
cmpsb
icebp
cmp
repz
mov
ljmp
shll
loope
rcrl
jo
push
test
xor
test
mov
cwtl
in
jmp
orb
sbb
sbb
inc
inc
lea
dec
pop
pop
nop
and
cwtl
jmp
test
dec
push
sbb
cwtl
inc
xorl
xor
shl
inc
jbe
push
dec
dec
test
out
or
push
cli
jmp
mov
push
inc
in
pop
pop
ljmp
fs
ds
cmc
cmp
cld
pushf
repz
fsubl
jb
dec
mov
int
cmp
outsb
cmpb
iret
stos
cmp
adc
nop
pushf
adc
lods
adc
out
fwait
xchg
ja
and
cli
repnz
jo
pop
pop
mov
push
iret
imul
sub
cmp
rorb
scas
jae
shrl
push
or
test
addr16
jle
dec
cwtl
movsb
sbb
dec
sbb
in
mov
test
add
jle
iret
outsl
cli
fwait
outsb
mov
test
enter
add
xor
pop
push
je
sbb
and
push
xor
sub
mov
adc
adc
dec
adc
pop
push
sbb
fwait
dec
cmp
lret
pop
or
fdivrs
bound
pop
arpl
fcos
stc
fsub
pop
pop
and
stos
ss
sbb
in
mov
sub
inc
loop
jge
imul
stos
xchg
jl
cwtl
pusha
fmuls
fs
inc
push
xchg
pop
cs
and
jmp
lret
adc
xor
push
test
cmc
mov
inc
out
sbb
fs
pop
lods
imul
push
mov
clc
int3
in
je
adc
pusha
xchg
cs
push
in
out
gs
lods
xchg
std
dec
add
jp
sbb
sub
adc
imul
bound
sbb
xchg
rcl
mov
and
adc
pop
ljmp
dec
and
test
push
jb
pop
inc
or
or
addr16
aas
decb
adc
call
shll
or
and
dec
mov
data16
inc
clc
nop
jmp
xor
sbb
imulb
xor
stc
push
cmc
cwtl
shrb
fwait
xchg
aaa
nop
out
outsb
dec
pop
popf
out
sbb
sbb
and
and
mov
cmpsb
test
pop
out
inc
push
enter
push
je
sub
out
stc
ds
adc
jge
xchg
lods
mov
jbe
sbb
jns
imul
or
mull
decl
or
bnd
popfw
scas
and
sbb
int
frstor
push
repnz
mov
mov
fwait
jae
dec
fwait
xor
outsl
fst
pusha
aaa
pop
adc
jnp
jp
mov
gs
mov
xor
gs
pop
insl
in
fs
push
lock
jae
sbb
and
mov
aad
adc
lret
and
cmp
out
and
addr16
or
xchg
push
lret
test
mov
cmp
call
pusha
adc
outsl
hlt
sbb
adc
adc
jge
push
outsl
jae
push
push
push
sbb
or
andl
pusha
push
jp
and
call
and
js
sub
lods
dec
inc
jp
xchg
sbb
jbe
insl
fstpl
jg
lock
jne
sti
inc
cmp
imul
dec
aas
fdivr
int3
xchg
enter
dec
sbb
sbb
ret
shlb
cmc
stos
jge
and
xchg
pop
repnz
fdecstp
dec
or
ds
cmp
pop
data16
xor
sbb
pop
jbe
mov
jne
or
lea
dec
pop
xchg
mov
mov
mov
jne
fs
pop
outsl
push
ljmp
jno
out
xchg
mov
push
fimull
push
inc
mov
lds
xor
cmpsl
cmp
std
call
sub
push
jle
loope
inc
mov
int3
jg
shl
popl
sbb
jmp
stos
mov
movhps
hlt
mov
es
pop
adc
sbb
push
push
dec
push
xchg
or
adc
mov
sub
sbb
je
push
call
xchg
pop
data16
sbb
adc
and
mov
ret
stos
xorl
sub
sbb
mov
lcall
imul
sahf
gs
sub
les
or
ffreep
fdiv
lahf
sub
sbb
mov
and
push
push
inc
and
and
push
xor
xchg
xor
dec
repnz
out
cmp
jge
fildll
sub
push
js
in
mov
mov
leave
in
xor
or
sbb
out
rcr
outsb
or
call
pusha
dec
test
mov
jmp
add
mov
add
pushl
data16
cmpsb
sbb
mov
jae
movsb
jb
push
rorb
int
push
cs
sub
fisubrs
mov
ucomiss
add
ljmp
push
adc
inc
xchg
cs
xlat
out
adc
xchg
pop
insl
cmp
xchg
cmp
inc
sbb
or
push
lods
pusha
xchg
mov
adc
fnsave
ljmp
dec
sub
jecxz
mov
mov
xlat
push
sbb
inc
flds
ljmp
inc
or
push
mov
fistpl
mov
sub
je
and
mov
sbb
jg
sub
jecxz
int
fsubl
loopne
into
xadd
out
push
cwtl
outsb
xchg
subb
push
sub
lods
inc
arpl
out
in
push
test
decl
rcpps
cld
shrl
imul
xchg
sti
or
jg
push
ja
fistps
inc
pop
loopne
cwtl
int3
scas
jl
xor
xchg
into
dec
inc
popaw
push
sub
mov
adc
int
rol
imul
out
adc
dec
push
and
call
or
fwait
into
sti
out
pop
fs
cmp
cltd
ficomps
jmp
in
lahf
lret
out
xchg
push
out
mov
pusha
or
mov
cs
jmp
xor
cmp
jns
push
pushf
dec
lret
shll
xchg
aas
int3
xchg
in
and
push
out
shlb
leave
mov
dec
lret
in
add
push
lret
add
dec
in
shlb
ret
mov
sub
sbb
mov
adc
rorb
cs
pop
fstpl
push
lock
dec
jmp
out
repz
out
ja
pop
xchg
dec
aas
pop
dec
xor
xchg
sbb
or
xor
call
in
loopew
imul
enter
xor
push
mov
fs
sbb
lcall
int3
call
pop
incl
push
pop
sub
arpl
sub
pop
pop
sub
pop
lock
adc
imul
inc
dec
xlat
out
lcall
or
out
ret
mov
aam
es
aas
xor
addb
cwtl
dec
insl
or
scas
dec
in
stc
cmpxchg
cwtl
adc
cmpsb
addr16
int
stos
cmp
inc
int3
adc
push
or
cmp
dec
xchg
jg
out
pop
dec
insl
ret
mov
mov
daa
out
out
mov
test
int
and
addr16
ret
inc
fsubl
fsub
push
fsubl
adc
cmp
sub
call
jnp
imul
pop
push
pop
add
jo
cs
push
inc
mov
jns
sub
sti
sub
cmp
imull
outsb
xchg
out
xor
dec
push
cli
or
and
cmp
int3
lret
inc
jl
enter
ficompl
repz
js
mov
out
rorb
bound
mov
iret
outsl
push
gs
pop
mov
mov
jne
bound
push
sbb
stos
add
and
dec
pop
mov
dec
lret
inc
int3
push
fs
insl
dec
sbb
aad
gs
add
sub
pop
cmp
add
fsubs
push
inc
jl
sbb
pusha
ja
pop
push
out
pop
mov
fbstp
addb
inc
bound
sub
sub
shl
les
adc
jge
stos
aaa
aam
push
dec
fisubrs
push
dec
sub
pop
lret
test
lret
xchg
fsubl
dec
repnz
daa
add
mov
nop
push
adcb
data16
sti
jo
push
fcoms
cmc
push
jnp
sub
adc
mov
push
push
jmp
in
int
fists
pop
int3
pop
xor
dec
xor
xor
push
pop
adc
jmp
push
popf
sub
outsb
pop
pop
add
cs
sub
inc
dec
sbb
lods
dec
adc
iret
sti
movsb
pop
pop
clc
movsl
iret
sbb
jge
pop
lock
jae
fs
pop
jmp
jp,pn
dec
notl
xor
pop
fdivp
das
pushf
ljmp
cmc
pop
shrl
ror
jb
iret
adc
jno
repz
or
sti
test
mov
test
inc
js
jns
in
enter
stc
push
cmp
dec
xchg
and
sub
mov
in
xchg
sbb
jl
in
std
mov
inc
inc
out
pusha
repz
push
les
push
xor
scas
int3
mulb
dec
mov
push
ret
mov
mov
int3
pop
push
popf
or
rorl
xchg
add
lods
sbb
sub
test
es
pusha
mov
inc
hlt
das
or
mov
mov
sbb
pusha
push
push
pop
or
or
jle
mov
jl
adc
pop
dec
sub
push
into
cmp
aad
mov
das
adc
outsb
add
dec
stos
stos
int3
fsubrl
bound
es
outsl
push
jl
mov
sub
mov
hlt
hlt
cwtl
inc
and
jae
mov
jg
sub
xor
test
adc
dec
sub
push
pop
cld
cwtl
or
cmp
jne
xchg
push
pop
scas
loopne
les
or
mov
in
shrb
movsb
icebp
addr16
dec
inc
push
call
sub
cmp
xor
pop
rcr
cmp
nop
adc
into
je
out
dec
xor
loop
dec
push
movsb
sbb
ret
fidivl
repz
fildl
sarb
mov
outsb
daa
or
loopne
mov
lret
jle
es
les
addr16
mov
sub
fucomip
mov
xchg
pop
push
push
in
pop
fwait
or
inc
xor
and
imul
sbb
xchg
pop
mov
inc
xor
dec
test
fsubs
ds
pop
push
ja
clc
addr16
cmpl
jo
cmp
rcll
incb
arpl
pop
jmp
out
hlt
mov
push
popa
stos
dec
xor
mov
jl
dec
in
test
sbb
or
mov
jl
test
mov
movsl
add
cld
inc
lcall
insb
dec
mov
mov
arpl
add
jne
fwait
pop
inc
push
mov
in
gs
sub
push
dec
mov
dec
out
mov
out
push
popa
xchg
push
xchg
insb
dec
loopne
dec
dec
add
cmc
lock
pop
out
mov
mov
popf
pop
mov
das
dec
repz
ljmp
fsubrs
cli
add
fstl
pop
inc
xor
jle
cmp
pop
sti
add
xchg
movhlps
jo
sub
pop
leave
pop
movsb
nop
add
clc
xchg
les
xchg
outsl
shrb
imul
lds
mov
mov
or
push
gs
addl
outsl
mov
stos
movsl
pop
cli
stos
into
stc
sbb
mov
ss
pusha
scas
popa
pop
mov
push
ffree
dec
mov
jl
subps
adc
popf
sub
jbe
bt
imul
dec
push
mov
test
lods
xlat
int3
inc
imul
jge
ja
bound
scas
sbb
bnd
mov
fsubrl
inc
cmp
fsubrs
test
xchg
out
call
cmp
and
push
outsb
inc
jl
sub
popa
inc
sbb
xchg
imul
jbe
pop
inc
mov
pop
and
or
mov
dec
xchg
cmp
jle
jge
test
jbe
mov
sbb
mov
test
and
or
jne
inc
jg
dec
bound
mov
jp
jno
dec
adc
jno
inc
pop
ds
dec
pop
push
add
push
fnsave
push
mov
gs
cmpsb
push
jne
push
pop
fdivrs
addb
hlt
inc
pop
sti
outsl
cmp
call
xchg
jmp
xchg
insb
jo
subl
imul
loope
inc
divb
movsb
loopnew
sbb
out
jge
stc
mov
ret
pop
push
rolb
jmp
lret
pop
sub
mov
jmp
mov
inc
push
pop
sbb
lods
or
ret
mov
ss
stos
mov
adc
lahf
jl
gs
jbe
imul
pop
test
or
sub
call
je
shr
and
inc
scas
mov
fs
out
sti
dec
mov
stc
call
sbb
inc
adc
aad
mov
stc
jne
test
int
dec
stc
push
sti
rcr
push
mov
divb
rorb
enter
idivl
add
jecxz
mov
testl
outsb
sub
stc
lret
cwtl
test
and
lock
adc
cmc
test
das
in
pop
sbb
popf
jle
mov
mov
dec
lahf
and
dec
pop
adc
jl
call
jge
pop
addb
incb
fisttpll
sub
mov
dec
push
lret
movsb
sbbb
inc
jle
dec
lret
inc
inc
sbb
clc
out
mov
sub
mov
push
lock
mov
test
data16
xor
outsw
loopne
push
test
push
xchg
clc
ja
sbb
js
fiadds
cmp
movsl
and
cmp
scas
jae
out
jns
dec
std
lock
outsb
and
enter
push
jl
dec
dec
pop
stc
jp
dec
dec
sbb
mov
add
pop
cmp
les
les
in
mov
inc
outsl
push
mov
in
pusha
addr16
lods
pop
popa
inc
sbb
js
inc
ret
repz
dec
out
or
bound
pop
int
test
imul
mov
mov
jns
repnz
lock
inc
mov
notl
xchg
int3
push
scas
rcl
mov
push
aaa
test
scas
push
pop
out
dec
mov
push
jo
test
push
les
pop
push
fs
jmp
and
fnstcw
fimuls
jmp
pop
jmp
iret
les
shrl
iret
lret
push
or
jns
inc
sub
test
push
in
fwait
bound
push
loope
into
mov
pop
orb
push
jmp
je
inc
sti
cmove
sbb
xchg
in
out
push
mov
add
xchg
dec
mov
test
in
xor
sbb
clc
dec
in
mov
insb
in
outsl
out
outsb
out
imul
punpckhbw
fwait
pop
daa
adc
and
push
mov
xchg
lret
push
dec
mov
into
push
jo
lds
int3
and
push
out
rcrl
test
aaa
add
aad
mov
jg
xor
dec
dec
mov
in
stos
fsubr
scas
xchg
loopne
jle
mov
sbb
sahf
or
imul
loopne
push
inc
test
push
nop
call
mul
push
pop
test
jge
in
pop
bound
and
outsb
push
daa
push
pop
jbe
lock
dec
call
dec
repz
mov
imul
pusha
test
add
mov
xchg
and
and
mov
jne
pop
dec
push
and
jle
xchg
fwait
int
out
xchg
or
movsb
jnp
test
pmaxsw
mov
insl
sbb
mov
jge
xor
mov
add
sub
adc
dec
jae
push
inc
dec
ljmp
sbb
mov
fs
nop
stos
jle
cmp
inc
imulb
clc
or
movsl
faddl
inc
push
loope
mov
xlat
cmpsl
cmp
rorb
enter
jmp
ja
xor
inc
out
loop
js
and
test
sub
cs
das
idivb
sbb
push
or
in
sub
sbb
sub
dec
data16
jle
pop
xor
fwait
shll
outsl
sbb
scas
mov
pop
mov
lret
jmp
clc
cs
mov
lcall
xor
mov
repz
out
mov
aas
adc
inc
push
inc
xchg
jle
arpl
hlt
aam
in
cld
in
dec
or
out
xchg
pop
pop
in
hlt
mov
push
orl
call
xor
clc
cmp
fsubrs
out
jns
adc
jp
es
push
fwait
pop
mov
mov
push
or
add
mov
jmp
dec
nop
int3
cmpsb
cli
and
repz
bound
ret
inc
repz
int
jne
ljmp
ja
push
mov
cld
lods
out
or
div
dec
cmp
stos
popf
jne
add
call
cmpsl
jg
outsb
or
mov
inc
imull
hlt
mov
jle
dec
jg
mov
cmc
jmp
jmp
push
or
lahf
shll
push
sti
ret
mov
test
dec
insb
add
adc
lds
test
arpl
cmpl
add
outsb
les
xchg
sarb
lcall
stos
jb
dec
cmpsb
in
jp
cmp
mov
stos
dec
outsb
jbe
inc
popf
lahf
adc
cmc
scas
fldenv
pop
popf
ja
xchg
mov
call
movsl
mov
outsl
inc
and
stos
mov
nop
scas
inc
push
sub
sbb
xchg
mov
outsl
jb
enterw
cwtl
popa
fbstp
out
mov
mov
stc
push
divl
mov
int
call
outsb
and
inc
or
int3
fldenv
xchg
scas
fdivl
mov
inc
in
sub
js
sbb
sub
enter
mov
ljmp
fwait
das
outsl
mov
iret
inc
ficoms
adc
sti
dec
push
or
daa
lahf
pop
lods
xchg
stos
andl
inc
sti
add
sbb
addr16
in
fsubl
cli
in
out
mov
cwtl
lock
sbb
push
jnp
rcr
xchg
mov
cmpsl
shll
stos
in
and
bnd
cmc
add
push
jb
leave
into
jmp
js
jp
mov
stos
loop
push
enter
sbb
loope
aad
pop
fisubrl
jb
sti
adc
insl
jle
in
xor
mov
insb
test
je
fwait
test
adc
add
inc
imul
mov
jmp
icebp
rcrl
in
sub
int
xorb
cmp
jle
ret
xor
xor
imul
fimull
imul
mov
fsubrs
pop
int3
push
pcmpeqd
loope,pn
jns
lcall
out
jbe,pn
sarb
xchg
loope
js
jo
lahf
sub
out
dec
xchg
cmp
flds
inc
sarl
add
sub
loopne
in
ja
aaa
jecxz
push
sub
pop
scas
mov
bnd
push
ljmp
ret
jg
frstor
shrb
jo
pop
push
repnz
dec
lds
daa
int
ljmp
pop
sbb
push
dec
pop
ret
pop
push
rcrl
jle
sbb
outsb
mov
sub
sbb
jl
inc
shrl
push
sar
outsb
imul
js
inc
out
jecxz
sbb
pop
mov
jl
fs
loope
push
cli
pop
outsb
xchg
jbe
dec
or
or
push
in
inc
adc
and
mov
outsl
subb
lds
out
inc
adc
mov
pop
sets
mov
or
in
ror
xor
rclb
mov
pop
in
push
xchg
fcoml
sub
inc
jmp
popf
pusha
push
rol
sbb
scas
mov
dec
into
sbb
mov
lret
add
lret
rorl
xchg
mov
popa
jecxz
popf
loope
jp
jbe
pop
aad
adc
sub
into
stc
adc
cmp
mov
xchg
repnz
jge
jo
sub
mov
out
sub
inc
aam
test
stos
das
sbb
outsl
dec
ds
fcoml
jne
test
ljmp
sarl
inc
mov
clc
push
out
add
push
adc
push
movsb
ret
arpl
outsb
and
push
lcall
pop
sbb
aam
dec
fstpl
hlt
push
out
xor
sub
cmc
and
xor
mov
inc
aam
adc
in
in
iret
push
ds
jl
fstpl
rorb
xchg
sub
aam
xlat
insb
add
add
mov
jae
arpl
das
push
int
adc
dec
arpl
test
adc
pop
xchg
out
cmp
addl
push
push
xor
push
gs
pop
sub
or
and
data16
ret
repz
push
add
jle
xor
mov
mov
inc
ret
test
js
and
loope
mov
shufps
leave
pusha
mov
dec
addr16
hlt
pushf
sbb
dec
jmp
movsl
and
push
out
sbb
or
outsl
mov
bound
stos
js
jg
wrmsr
sbb
inc
movsl
leave
dec
int3
adc
cmp
lock
cli
push
xor
inc
int3
pop
pusha
data16
jnp
add
int
outsb
cld
mov
mov
sub
das
outsb
test
jb
pushf
sti
popf
dec
es
pop
lcall
xchg
sub
es
aam
bound
pop
es
loope
cmp
ds
call
push
in
mov
push
mov
hlt
mov
jae
test
dec
dec
gs
push
push
adc
sub
paddusb
dec
rcll
subb
dec
sub
in
jae
dec
lods
or
sub
push
cs
jl
std
adc
xchg
mov
dec
push
sbb
dec
cmp
les
jp
dec
psllq
mov
fwait
in
and
and
scas
push
aas
hlt
imul
add
jns
pop
fistpl
mov
jg
push
pop
pop
push
or
cmp
loopne
loope
out
outsb
sbb
xchg
rcl
cltd
imul
loope
sar
pop
jle
sbb
dec
daa
cli
fistps
out
int
cmp
add
in
imul
es
add
imul
mov
and
inc
test
inc
and
adc
dec
bound
repz
jle
mov
and
negl
aad
cld
sub
aad
cmp
int
mov
das
daa
inc
insb
cmp
dec
jg
outsl
add
aaa
fs
sbb
push
inc
adc
fadd
in
jmp
imul
rcll
add
rclw
sub
mov
movsb
sbb
daa
cmp
cmpl
cmpsl
cmpl
cwtl
jne
fcompl
xor
repz
sti
add
iret
sub
fnstsw
mov
adc
and
or
outsl
out
repz
push
lcall
xchg
les
cmp
repz
cmc
xlat
loope
gs
fcomi
out
mov
das
aam
jmp
jo
push
jbe
ret
in
mov
adc
js
and
push
gs
adc
jecxz
fs
stos
icebp
data16
jns
mov
dec
mov
cmp
adc
into
dec
popf
xchg
jecxz
dec
mov
mov
test
add
orb
iret
inc
lods
out
sub
popf
lret
inc
xor
or
mov
inc
stc
sbbl
jl
popa
sub
es
add
add
movl
ja
sub
mov
fildl
shll
push
adc
jle
push
mov
addr16
insl
pop
daa
cwtl
popl
jne
mov
mov
cmp
and
fmull
adcl
cmp
insl
in
sub
lret
xchg
mov
jle
into
aaa
call
lds
dec
sti
xchg
push
xchg
or
call
inc
pop
in
imul
mov
push
mov
sbb
add
dec
sub
repz
xlat
cld
aas
dec
decb
aas
mov
out
xchg
pop
jp
and
or
xchg
cmp
ds
jb
adc
and
ret
out
push
and
push
sub
or
inc
inc
lods
cmc
out
add
ret
pop
das
addr16
dec
sub
in
int3
sub
jle
test
jae
into
fldenv
pop
out
lret
mov
or
scas
push
dec
mov
mov
repnz
movsl
outsb
iret
push
test
rcrb
inc
in
das
xor
pop
dec
lock
sub
addr16
sarb
test
int3
mov
xchg
push
in
cld
jle
xor
data16
inc
or
into
jmp
data16
arpl
enter
mov
in
cmp
dec
jl
lret
std
cltd
packssdw
push
inc
pushf
and
aaa
jns
shlb
in
mov
popf
lahf
push
sub
cmp
leave
inc
sbb
in
jl
inc
jmp
rcrl
dec
mov
insl
sub
pop
scas
mov
in
loopne
les
push
sub
dec
lcall
js
pop
lock
in
imul
sub
fidivrs
xchg
cmpsb
pop
push
push
jmp
xor
push
call
jge
test
bound
iret
push
je
jo
es
pushf
and
jbe
mov
dec
push
dec
push
call
and
enter
scas
inc
out
mov
fwait
pop
outsw
lods
sub
inc
jle
push
push
and
pop
cmp
jmp
inc
cs
adc
inc
adc
les
push
sbb
fdivl
out
jno
xchg
movsb
dec
sbb
cmpsb
sbb
mov
das
ljmp
loope
icebp
sub
jl
mov
sub
mov
push
fsubs
arpl
push
pushf
inc
dec
mov
jo
popf
or
sahf
fcmovne
fs
test
jle,pn
test
repnz
rcrb
loop
lea
tzcnt
sbb
push
lcall
cld
pop
xlat
xor
or
scas
sbb
xor
jbe
lcall
add
sti
add
dec
fcomp
mov
jno
inc
aad
gs
lock
lods
or
movsl
add
cmpsb
int3
cmp
sub
leave
adc
call
and
outsl
push
mov
jmp
dec
inc
dec
cmp
add
cs
jg
sub
out
sti
dec
dec
xor
jmp
fs
int
mov
inc
xchg
inc
imul
push
mov
rorl
arpl
inc
scas
push
mov
lods
lods
xchg
daa
jmp
mov
push
lret
or
movsb
push
push
shl
call
dec
jmp
aaa
lret
pop
out
dec
jecxz
sti
movsb
call
jl
call
test
pushf
cmp
jnp
cs
sbb
mov
jbe
inc
std
data16
test
jo
jl
ja
cmp
or
mov
out
or
or
jmp
pushf
adc
js
arpl
testl
jbe
js
into
push
outsb
loope
orb
bound
leave
inc
daa
dec
xor
aas
mov
inc
dec
loopne
cmp
xor
mov
mov
mov
arpl
int3
out
cwtl
ljmp
ja
add
inc
adc
clc
inc
and
inc
or
mov
pop
mov
dec
icebp
xor
jne
in
jg
pop
cmp
or
fcoms
sub
out
push
fdivs
pop
pop
addr16
das
cmp
jmp
mov
mov
sahf
pop
ljmp
or
fs
xchg
idiv
call
in
jle
inc
out
in
mov
fs
jl
out
outsb
add
add
xor
stos
mov
inc
add
add
mov
movsl
in
push
outsb
stos
pop
or
mov
leave
mov
sub
jnp
outsb
cmpsb
xorb
xor
pop
in
scas
xchg
jns
inc
jmp
je
pop
add
add
jo
sub
jae
inc
andl
test
popa
fwait
mov
jg
push
cli
rcrb
lcall
imul
cs
loopne
or
test
pop
inc
push
xchg
in
ljmp
inc
push
call
sub
outsl
push
stos
imul
jbe
mov
lcall
cmp
cmp
cmc
mov
inc
outsl
cmp
push
sbb
push
lods
popa
xor
adc
cmc
fsubrl
sbb
or
out
xor
mov
and
js
inc
cmpsl
sub
mov
sbb
sub
data16
jno
inc
addr16
sbb
sub
add
adc
js
lret
push
dec
jg
jbe
pop
jno
aas
clc
fmull
mov
dec
aaa
push
jmp
pop
cwtl
pop
shrb
call
xor
movsl
inc
loope
xor
lret
popa
jmp
xor
and
andl
dec
mov
mov
cwtl
sub
and
scas
iret
jmp
imul
cs
call
cld
pop
in
push
adc
sub
mov
repz
scas
or
dec
cwtl
hlt
js
cmc
in
ret
test
shlb
jl
in
jp
pop
mov
xlat
jnp
cmc
pushf
lods
dec
inc
adc
pusha
jo
fnstsw
cmpsb
in
jecxz
push
arpl
inc
in
cli
sti
stos
dec
aas
lds
into
adc
daa
insl
and
js
loope
add
jbe
pushf
jne
adc
mov
bound
loopne
out
popl
inc
aas
mov
jmp
jg
movsl
ds
and
jg
movsb
sarl
jle
xor
stos
mov
dec
or
cmp
push
xchg
sub
pusha
dec
test
cwtl
push
jl
xor
dec
inc
jle
data16
lock
jno
lret
gs
jnp
imul
out
aam
pmullw
jg
lret
pusha
pop
js
pop
cmc
and
popa
xor
inc
jmp
stos
in
mov
cmc
add
les
loope
push
push
sbbb
inc
and
call
ficoml
jg
adc
lret
push
jle
or
pop
fxch
inc
ja
clc
mov
sub
sub
test
xchg
fwait
lock
stos
loope
push
sbb
out
or
jmp
nop
and
ljmp
inc
das
cli
lret
jl
jp
cs
in
cli
jb
popa
adc
sub
inc
adc
dec
xchg
jnp
scas
jnp
loopne
push
sti
lret
rcll
int3
cs
int3
xchg
mov
out
call
ficoml
jo
sub
leave
xor
into
data16
jecxz
jge
imul
je
jo
rcrb
jns
push
cld
jns
out
adc
addr16
xchg
dec
mov
sub
and
or
or
js
sub
shrb
dec
outsl
dec
pop
out
mov
out
dec
sub
mov
mov
fdiv
popa
sti
clc
mov
pop
test
jg
sar
das
ds
enter
and
loopne
jns
ja
call
dec
sbb
fs
inc
cld
jbe
stos
jle
in
push
jle
addr16
cld
fwait
out
dec
or
fs
dec
ja
lcall
jl
cli
es
fisttpll
mov
mov
and
jmp
subb
into
ds
in
pop
add
clc
xor
cmp
adc
test
jb
adc
into
sub
sub
xchg
dec
pop
lcall
repz
int3
in
mov
sub
mov
std
jo
lods
jbe
xor
sbb
xchg
add
call
sub
add
xchg
call
call
stos
dec
pop
movsb
cmp
dec
mov
lret
xorl
push
scas
jne
and
xchg
inc
popf
pop
push
lahf
dec
sbb
int3
imul
push
jmp
push
and
or
imul
mov
shr
dec
imul
mov
icebp
mov
sub
mov
xchg
adc
mov
loopne
rcrb
add
push
cmc
ret
push
daa
xor
fcomps
das
mov
aad
ret
rolb
int
outsl
out
pop
lds
mov
loop
dec
push
sub
push
pop
jbe
enter
in
and
cli
cmpsl
rorl
imul
push
bound
imul
ret
mov
inc
cwtl
pop
test
mov
cmpsb
jecxz
lahf
sub
das
enter
mov
call
cld
mov
add
pop
or
mov
call
nop
push
dec
imul
adc
sub
dec
mov
mov
out
push
xor
movl
adc
mov
outsb
in
jp
mov
xchg
roll
jg
inc
inc
sub
mov
mov
int3
cwtl
mov
test
bound
inc
xchg
sub
psubsw
mov
psllq
ret
sbb
push
mov
fs
mov
imul
jl
test
sub
cmp
pop
loop
outsl
mov
or
or
int3
cs
pop
nop
dec
adc
loope
inc
mov
pop
dec
push
rol
jle
jp
daa
pop
mov
push
outsl
add
outsb
inc
dec
jo
and
inc
push
xchg
movsl
pop
lret
push
rclb
sub
dec
incl
ljmp
addr16
or
cli
cmc
pop
pushf
xor
pop
push
jecxz
loope
call
xor
cmp
pop
popa
pop
cltd
inc
sbb
cmp
out
mov
push
fwait
and
lock
dec
cli
push
iret
imul
popf
inc
add
pusha
shl
lret
lock
cmp
loop
dec
int3
jne
test
rorl
stos
call
add
xchg
aad
push
push
push
pop
inc
inc
xchg
outsb
nop
lods
cltd
jle
lcall
pusha
push
jns
lcall
mov
ret
out
adcb
mov
shrl
ret
mov
js
cli
shlb
or
ret
dec
mov
cltd
push
lret
les
jecxz
xchg
push
incw
cmpsb
repnz
xor
fwait
jg
pop
ds
and
dec
cmp
mov
mov
sub
aas
cmp
das
les
xchg
xor
xor
dec
bnd
stos
inc
fs
mov
xor
mov
fmuls
insl
and
inc
inc
sub
fwait
rolb
ds
repz
sbb
scas
push
js
xorl
int
cmpl
push
fs
adc
ss
lcall
push
leave
mov
sub
jl
inc
and
icebp
test
jl
push
jae
push
dec
outsl
jg
test
mov
jae
in
hlt
dec
scas
add
add
sbb
xchg
cmc
test
mov
lret
hlt
fcomi
jmp
stos
cmc
dec
js
jno
jl
lds
cld
sbb
sbb
hlt
jo
outsl
cmp
xor
shll
out
test
push
sbb
dec
cld
inc
rorb
pop
xchg
in
shll
add
jnp
insl
fwait
jbe
jle
cld
push
pushf
push
in
scas
pop
mov
mov
jns
lahf
popf
cs
dec
and
dec
lods
test
data16
mov
test
xchg
nop
xor
and
aad
popf
aaa
iret
jl
sahf
jmp
push
psllw
cwtl
sub
gs
jle
pop
jl
cli
test
movl
hlt
mov
and
sbb
push
imul
mov
xchg
out
xor
pop
mov
call
pop
test
rcrl
rorb
xchg
repz
imul
adcb
mov
daa
or
leave
leave
in
jmp
mov
adc
fs
push
dec
pop
lahf
lods
fs
mov
cwtl
sti
mov
push
mov
int
popa
xor
out
int3
subl
pop
xor
call
dec
mov
in
push
sub
push
les
push
mov
xor
inc
das
dec
out
inc
call
das
retw
add
lea
sbb
add
dec
aaa
fs
and
jmp
or
icebp
pop
sub
mov
dec
lock
js
jmp
xchg
mov
inc
jmp
fildll
and
mov
movsb
mov
push
repz
les
stc
mov
push
gs
out
in
sbb
mov
push
mov
xor
sub
test
imull
and
fisttpl
sbb
jecxz
stc
out
or
or
pop
test
in
push
or
sub
into
test
dec
decb
cmp
mov
jl
js
sbb
aas
lock
jae
dec
int
xor
mov
pop
pop
push
xchg
or
cwtl
lods
repz
addr16
repnz
js
out
cwtl
mov
mov
push
xlat
sub
mov
pop
out
mov
push
xchg
loop
sbb
cbtw
shr
jl
mov
xor
loopne
lods
mov
jne
cld
pusha
fs
test
push
push
push
fwait
dec
push
pop
sub
cmpsb
xor
data16
jp
push
jl
imul
fsubs
push
test
fs
test
enter
and
in
xor
decl
clc
cwtl
xchg
aaa
andb
imul
cwtl
cmp
repnz
adc
negb
push
fwait
pushl
xchg
jns
sub
ja
add
in
icebp
push
cld
sar
in
mov
push
mov
bound
sub
shlb
sub
addr16
mov
xchg
fdivs
nop
in
es
mov
pushf
jecxz
or
xchg
jmp
adc
addr16
fldcw
cs
dec
cli
push
sub
cwtl
sub
jno
fisubrs
stc
xor
lret
xchg
mov
add
xor
into
mov
inc
jmp
or
pop
pop
bound
fwait
pop
inc
int3
loope
aam
adc
les
jo
outsl
enter
pop
dec
out
je
test
inc
data16
cltd
or
insb
sahf
or
cmpsb
mov
mov
popa
inc
sub
in
and
and
adc
insl
into
int3
jae
mov
push
jne
scas
js
into
mov
lods
mov
mov
icebp
fadds
int3
repnz
push
lds
inc
and
loopne
fsts
in
inc
es
push
jecxz
add
jecxz
mov
outsb
xor
cwtl
dec
aad
sahf
push
sahf
lods
or
sbb
fs
cltd
data16
push
mov
pop
inc
shrl
outsb
or
data16
jmp
leave
or
cmc
xor
add
dec
icebp
jle
pop
fs
aaa
or
sbb
add
cli
pusha
push
insl
lret
leave
js
rorl
std
sub
jo
mov
jne
cmpsb
xor
add
mov
push
out
out
sbb
mov
xor
cli
inc
outsb
mov
dec
ret
sub
imul
xchg
int
jg
push
jbe
xor
push
cli
mov
andb
aaa
sbb
fsubs
mov
imul
lcall
inc
dec
dec
outsl
scas
jle
adc
outsb
call
call
ja
sub
dec
cs
pusha
pop
xchg
push
push
dec
pop
push
push
push
xchg
cmp
pop
dec
outsb
in
repz
out
push
mov
xor
cmp
pop
movsb
inc
or
dec
movsb
ficoml
jo
cwtl
out
jl
push
sbb
pop
or
push
popl
sti
jmp
bound
popa
mov
and
js
stos
pop
jecxz
pop
repz
mov
sub
push
or
in
pop
stos
push
in
pop
mov
lds
gs
es
ss
or
addr16
sub
cmpb
jle
cmp
ret
icebp
push
and
lds
xchg
cmp
mov
gs
xor
and
addr16
dec
ljmp
push
das
ljmp
or
pop
pop
and
aas
cmp
fwait
dec
out
dec
push
add
cmp
popa
test
imul
imul
jbe
sub
dec
loop
pop
int3
and
pop
pushf
sub
out
arpl
push
push
pop
jmp
sub
push
sbb
es
cmp
mov
add
dec
scas
jmp
pop
outsl
stc
cwtl
sub
aaa
loop
lret
data16
adc
push
add
jp
outsl
sbb
or
dec
inc
insl
mov
push
inc
mov
enter
sbb
xor
cld
out
xor
jne
cmpxchg
dec
pop
mov
jg
push
adc
fisubrl
das
and
push
ret
lret
jl
repnz
xchg
xchg
test
cmc
xchg
lds
adc
fisttps
xor
sub
stos
inc
xchg
push
movsb
jl
sbb
jecxz
sahf
dec
adc
dec
sub
mov
jns
hlt
in
and
das
mov
das
sub
inc
test
out
aas
addr16
pop
mov
cli
mov
dec
ret
stos
pop
sbb
jnp
lds
hlt
sbb
xor
or
xlat
call
popl
loope
out
stos
pop
pusha
mov
jbe
sub
loop
lods
add
xor
xor
jns
js
in
out
stos
lret
repz
xchg
push
mov
xor
lea
jae
aaa
imul
in
lcall
enter
clc
pop
cmpsl
call
test
dec
cwtl
adc
fdivs
adc
push
imul
or
shrl
je
adc
and
and
das
sar
push
cwtl
xor
push
push
loope
dec
adc
mov
les
mov
popa
pop
push
and
sub
push
scas
fdivs
scas
shrb
stos
int3
hlt
fwait
test
ljmp
sub
fstl
lock
xchg
jbe
cmc
mov
mov
push
imul
push
sub
data16
add
pushf
cmpl
scas
dec
outsl
out
jl
mov
mov
push
adc
sub
int
fimull
in
in
scas
xchg
addr16
imul
out
ja
loopne
cli
stos
mov
xor
and
outsb
push
aas
fiaddl
jle
sub
decl
jmp
push
xchg
sub
jb
push
bound
aaa
fidivs
pushf
inc
add
imul
sbb
les
adc
inc
sbb
in
popa
mov
pushf
push
inc
int
test
outsb
out
cli
push
or
arpl
loope
push
adcl
cmpsl
dec
push
inc
lock
outsl
stos
or
cmc
mov
bound
hlt
sti
push
test
test
jae
rcll
cmp
aad
mov
test
pop
aam
jl
into
jg
xchg
shll
or
pop
sbb
pop
jle
ja
pushw
mov
cld
inc
lds
je
imul
cmp
jo
or
sub
jl
pop
mov
sub
outsb
cwtl
add
inc
js
inc
sbbb
push
cwtl
mov
push
inc
stos
inc
inc
call
ret
das
clc
lea
push
in
push
sar
dec
int3
adc
push
sbb
rcrl
stos
test
int3
out
mov
or
and
jns
push
in
mov
notb
mov
iret
mov
sub
negb
call
lcall
mul
sub
pop
jmp
test
andb
pop
lods
dec
push
dec
sub
jle
sub
inc
inc
sarl
clc
xorb
sub
fwait
mov
imul
imul
inc
xchg
push
mov
sbb
repz
push
mov
or
mov
lcall
mov
pusha
mov
mov
call
adc
sub
xchg
xor
int3
lods
nop
cmp
bswap
cmp
call
data16
inc
jmp
in
dec
push
sbb
popf
add
ror
mov
pop
call
cmpsl
inc
in
push
sub
dec
mov
sti
push
fwait
jns
ss
mov
xor
xlat
mov
insl
ds
inc
mov
jmp
add
pop
insl
and
imul
sti
push
push
aaa
sarb
cld
add
movsb
and
cs
cld
pop
and
and
jl
xchg
pop
dec
call
push
xchg
loopne
enter
sub
loopne
in
mov
outsl
sahf
adc
push
adc
jmp
int
jmp
mov
cli
jns
rorl
int3
loop
dec
pop
popa
dec
outsb
adc
xchg
test
stos
repz
lahf
add
pop
push
adc
cmp
out
shrl
lods
xor
mov
add
dec
mov
jge
jle
mov
outsb
fldl
cmp
cmp
loopne
jno
xchg
pop
push
iret
adc
pop
push
dec
mov
jl
sub
jle
push
add
cmp
cs
mov
jmp
addr16
call
jp
sahf
imul
ficompl
jae
pop
sbb
xor
xor
dec
pusha
vminps
pusha
int3
data16
adc
dec
pusha
outsl
or
daa
call
jecxz
mov
cmp
in
outsl
mov
xchg
mov
or
aas
arpl
dec
xor
out
push
mov
sar
out
inc
mov
dec
imull
xchg
mov
pop
xor
dec
xor
ret
in
jle
sbb
xchg
mov
lds
roll
mov
adc
loopne
add
in
sub
push
pop
loop
enter
add
sbb
xchg
movb
fwait
cmc
push
xlat
into
jl
push
cmp
rclb
adcb
sbb
les
and
jp
sbb
fildll
stc
int3
dec
mov
in
push
ds
mov
ja
lds
stos
psllw
les
adc
add
ja
clc
push
test
jg
stos
scas
stos
sub
enter
les
cmp
mov
imul
insb
sbb
jne
les
dec
dec
cwtl
test
xchg
out
in
mov
pop
lods
push
xchg
dec
ret
jg
outsl
cwtl
adc
pop
jb
jmp
sbb
push
sbb
jb
xchg
add
popl
inc
mov
cmp
ja
jle
dec
dec
cmp
adc
or
lock
outsb
out
sbb
dec
movsl
imul
pop
mov
stos
lods
mov
jnp
xor
cmp
pop
shr
bound
jmp
stc
popa
jae
cmpsb
scas
sar
das
push
pushf
in
test
imul
imull
push
cmp
push
das
sub
clc
inc
outsb
inc
mov
shrb
test
imul
and
rcrb
inc
mov
icebp
push
iret
mov
mov
fildll
inc
or
or
pushf
mov
and
movsb
sbb
jl
ljmp
testl
push
mov
test
pop
scas
push
into
add
int3
inc
push
mov
in
push
sahf
test
sbb
mov
rorl
jne
jbe,pn
inc
sbb
loopne
fbstp
add
cmc
int
mov
jp
mov
dec
inc
sbb
or
add
out
inc
into
repz
mov
mov
mov
sbb
cmpsl
ljmp
pop
push
xorl
into
adc
cmp
pop
imul
mov
imul
stc
leave
scas
add
cmc
cli
xor
adc
stc
sub
cmp
xor
sbb
sub
loop
loopne
shll
in
pop
sub
xchg
data16
xlat
jne
mov
mov
out
or
into
dec
inc
sti
out
cmpsl
sub
popa
or
mov
xor
sbb
inc
popa
lret
cmc
test
popa
out
jp
mov
jmp
push
xchg
and
push
roll
pcmpeqb
addr16
cmp
pop
test
jbe
clc
sub
sbb
fidivrl
cmp
sar
jbe
dec
pop
pmullw
sub
lret
dec
stc
mov
adcl
dec
add
mov
cmc
mov
inc
pop
xchg
sbb
imul
xchg
pusha
ja
mov
xor
sar
les
aaa
mov
dec
nop
or
js
je
cmp
push
and
sete
inc
jb
les
int3
dec
push
fdivl
or
sti
js
jb
int3
jle
adc
es
sbb
arpl
je
jg
mov
push
iret
stc
leave
std
xchg
cli
hlt
sti
pushf
mov
aaa
xchg
sbb
ja
pop
jmp
mov
mov
iret
es
lret
sti
outsl
xchg
inc
mov
sbb
enter
dec
out
push
dec
mov
imul
inc
das
outsl
fdivrl
add
sbb
push
in
mov
popl
inc
add
push
push
outsb
push
mov
and
imul
and
test
addr16
cmp
push
repz
sub
sub
dec
lcall
mov
je
add
xchg
add
lret
push
xchg
movsb
movsb
insl
arpl
jge
sbb
das
mov
shlb
or
negb
arpl
into
cwtl
push
das
xlat
in
insl
into
dec
in
cmpsb
mov
int
pop
fimull
into
and
ret
or
sub
mov
dec
in
insl
test
imul
mov
cwtl
adc
int
ds
push
pop
inc
pop
or
jo
jb
dec
inc
mov
xor
imul
push
adc
cli
out
xlat
adc
call
pusha
imul
xor
inc
enter
sarl
pusha
stos
xchg
dec
outsb
adc
js
aad
es
out
pop
push
cwtl
int
sub
test
fwait
loope
repz
test
or
jmp
popf
stc
pop
nop
push
negl
jg
mov
mov
cld
loopne
fisttpl
pop
jne
js
xrelease
lret
movl
enter
stc
nop
sbb
sub
push
pop
inc
add
daa
cmp
mov
sbb
sub
dec
mov
inc
not
test
loop
cmp
push
test
xchg
shlb
dec
int
push
mov
int
sbb
leave
lcall
jp
pop
sti
sub
jmp
js
popa
test
fwait
add
sbb
and
jp
loopne
mov
addr16
mov
dec
mov
out
rorb
test
jmp
enter
xchg
xchg
pop
push
scas
mov
enter
popa
daa
mov
dec
mov
das
int3
push
sbb
test
js
push
das
rorl
test
dec
push
sub
movl
call
push
repz
movsl
push
push
les
sbb
mov
xor
arpl
pusha
adc
inc
pop
ss
enter
adc
out
adc
repz
je
pop
push
ret
mov
movsb
bound
inc
xchg
dec
int
pop
ffree
sub
out
mov
push
push
mov
xchg
cmp
inc
cmp
mov
stos
jbe
loop
cld
pop
in
arpl
mov
ss
test
push
insb
pop
mov
ret
call
adc
fisubs
pop
pop
dec
lcallw
lea
imul
mov
push
sahf
js
sahf
dec
fcmovnbe
xor
loopne
push
hlt
push
xchg
xchg
std
ja
divb
dec
fcompl
lret
inc
lcall
push
jecxz
stos
lret
test
test
aas
fnstenv
ds
iret
adc
popa
out
xor
mov
xchg
dec
daa
gs
int
test
sub
add
lret
jg,pn
or
enter
adc
xchg
xor
cmp
sahf
sbb
mov
pusha
insl
dec
in
xchg
mov
repz
dec
pop
pop
in
test
push
mov
pop
push
scas
sbb
imul
out
repnz
in
mov
cmc
negl
push
inc
push
int3
cmp
pop
in
jp
mov
rorb
into
jno
add
fwait
orb
pop
jne
add
mov
test
aad
jp
stos
xor
daa
rorb
dec
push
and
dec
in
cli
adc
repz
cmpsb
outsb
push
out
mov
sub
push
daa
lret
pop
or
mov
xor
mov
adc
mov
add
cwtl
mulb
test
add
pop
or
js
lds
jae
jp
pusha
bound
sub
push
call
push
adc
xchg
iret
les
push
repz
pop
dec
jl
cmp
jbe
call
sub
in
sub
push
or
std
dec
dec
int
in
psllq
aaa
aas
out
lods
dec
inc
fs
data16
pusha
or
je
pop
jbe
jo
jb
add
idiv
addr16
imul
push
stc
adc
outsb
pusha
mov
or
lods
push
pop
test
repnz
in
int3
in
or
sbb
mov
push
incb
jno
fdiv
shr
mov
mov
push
sti
pcmpeqw
xchg
fs
jg
xchg
aad
xor
dec
dec
jecxz
repz
lods
or
adc
xor
mov
test
pusha
lods
pop
les
mov
xor
xchg
xor
push
push
cmp
mov
cmp
fsubl
aas
fdivl
jnp
add
cmp
movsl
orl
es
pop
in
mov
data16
orb
lret
les
lahf
lret
cmp
nop
push
enter
fs
dec
sti
mov
jne
fwait
jb
lock
adc
jmp
pop
push
stos
int3
push
repz
popa
inc
xchg
scas
sbb
sbb
dec
dec
scas
in
xchg
inc
pop
jg
mov
and
int
cmpsl
test
out
or
repnz
jae
fisubs
roll
pop
lods
add
inc
je
scas
adc
dec
mov
les
jg
rcll
dec
stos
jp
les
out
sub
mov
sbb
data16
pop
xlat
dec
push
mov
pop
popf
sbbb
leave
cld
enter
dec
push
out
int
mov
int
cmp
sbb
inc
or
mul
scas
mov
nop
pusha
push
jae
add
inc
push
lret
dec
cli
inc
imul
or
mov
outsl
sub
ja
jecxz
loopne
aam
lret
xorb
jl
cmpsb
aam
pop
inc
lock
int3
mov
cmpsb
loopne
cli
sub
dec
sub
push
out
shll
xchg
cmpsb
shlb
sbb
xlat
cmpsb
shll
adc
cmp
cli
xchg
push
fxch
or
inc
call
dec
in
in
imul
in
fwait
loopne
ja
int3
int3
out
imul
enter
adc
inc
cmp
jg
or
inc
xor
dec
je
movl
jae
add
pop
xchg
je
loope
pop
es
data16
add
repz
sbb
jns
rcr
mov
push
mov
js
lea
repz
inc
and
xchg
stc
add
nopl
cmc
and
ret
addr16
pop
popf
jbe
imul
mov
adc
out
push
popa
cld
cld
sbb
push
movsb
out
pop
add
or
int
test
lods
push
push
push
jle
addr16
in
dec
ret
and
stos
aas
imul
popa
pop
rorl
in
or
addl
push
adc
test
mov
iret
xor
les
fldenv
test
mov
or
dec
adc
push
icebp
je
stos
int
push
fwait
loop
loop
push
cmp
dec
pop
stos
push
jp
xor
sub
iret
sub
lret
push
mov
outsb
bound
pop
cmpsl
adc
ficomps
fcmovnu
cmc
push
add
out
mov
adc
xchg
orb
hlt
jp
into
jle
jmp
dec
pop
adcl
inc
outsb
jne
add
and
adc
cmpsb
push
fwait
and
inc
jnp
int3
sub
leave
call
and
cmp
int3
dec
dec
push
test
dec
int3
aaa
sub
cli
cmp
sti
scas
mov
fwait
bound
adc
pop
jp
jns
ret
ja
push
sub
push
mov
cmp
repz
stos
bound
fdivr
mov
es
jmp
mov
add
cmc
scas
xchg
enter
xlat
push
adc
faddp
loopne
mov
push
sbb
adcb
dec
shlb
mov
mov
in
mov
push
out
dec
xchg
inc
mov
push
dec
dec
jns
adc
push
imul
scas
in
push
nop
pop
ret
cmp
movsw
sub
scas
into
fwait
pop
push
inc
les
dec
jmp
pop
cmc
out
push
outsl
pop
mov
sahf
jno
sete
push
cs
fs
mov
outsb
int
addr16
push
lcall
in
mov
lret
or
jno
lret
adc
lret
cmpsl
les
inc
icebp
fidivl
popa
xchg
xor
addr16
mov
xorb
test
dec
and
or
rcr
divb
test
call
fwait
xor
in
movsb
test
out
lods
adc
inc
mov
inc
arpl
pop
insl
sarb
mov
dec
cmc
jns
repz
push
cld
or
popf
cmpsb
jb
shll
mov
stos
sbb
push
inc
rorb
scas
pop
stos
movsl
stos
mov
orl
clc
repz
stos
push
cwtl
mov
xor
jbe
int
int3
daa
iret
outsb
mov
test
push
stc
jle
jle
mov
lds
orl
insl
movsl
fsubrs
push
add
jae
cmp
and
movsl
jmp
sbb
pop
js
inc
xchg
aas
jmp
dec
mov
pop
incb
movsb
sarb
jne
push
loope
loopne
arpl
xchg
in
cmp
xchg
mov
neg
cmpsl
jnp
call
pop
icebp
daa
shl
clc
icebp
leave
daa
fstl
imul
and
push
dec
hlt
data16
testb
fs
push
int3
xlat
pop
outsb
jmp
cli
xor
mov
jns
stc
inc
dec
cmovge
popa
imul
or
in
push
fstpt
enter
mov
std
mov
push
dec
mov
xchg
ja
adc
mov
into
out
dec
in
stc
mov
jle
popa
les
js
push
dec
lret
int3
xor
push
sbb
dec
outsl
mov
inc
aam
pop
mov
jecxz
and
clc
fucomip
push
lock
jmp
xor
add
push
in
jo
pop
pop
dec
out
aaa
inc
mov
xchg
jns
sub
push
push
fs
dec
push
ja
push
jnp
xor
rcll
cmpsl
add
aad
push
shrb
mov
scas
mov
outsb
outsb
cmp
pop
jp
cwtl
das
leave
mov
hlt
mov
dec
add
pop
ret
or
add
out
cmp
outsl
daa
in
test
mov
lret
scas
lcall
and
sub
mov
cltd
pop
cmp
dec
dec
cmpsb
or
stos
jbe
lcall
mov
or
out
mov
shll
dec
dec
packsswb
mov
xchg
andl
pusha
ss
push
mov
mov
sbb
mov
xchg
jnp
cmc
xor
jl
andl
push
int
out
loop
xor
out
adc
sti
stos
bound
out
sti
mov
dec
mov
jge
jae
rorb
clc
mov
jmp
mov
out
sbb
mov
bound
test
push
or
cmp
or
call
je
xor
les
ja
add
xchg
dec
movswl
and
mov
push
xor
cmp
movsl
cmp
loop
test
sarb
les
adc
mov
adc
in
mov
and
cwtl
jle
and
mov
pop
repnz
mov
jl
clc
in
and
lods
and
pop
fs
sub
sub
jge
push
popa
lock
xchg
dec
je
sbb
add
dec
cmp
push
pop
movb
pop
call
test
ja
cmpsl
push
xchg
popa
dec
cmpsb
xor
mov
shlb
mov
push
imul
enter
xchg
cmp
mov
clc
shlb
shrb
std
xchg
dec
insb
pop
dec
sub
stos
int
int
icebp
fisttpll
fildll
int
push
in
lds
mov
stos
shlb
fcmovnu
xchg
sub
jno
rcrb
inc
push
lods
test
push
gs
dec
add
dec
jp
mov
out
push
in
in
stos
in
icebp
xor
ret
scas
inc
pop
pusha
inc
and
sbb
loope
dec
popa
aam
push
mov
mov
lock
test
orb
jmp
jae
inc
fs
pop
dec
cwtl
shrl
scas
mov
add
add
or
addr16
movb
shlb
push
xor
popa
stc
sub
jmp
dec
les
jle
ss
inc
xchg
or
sbb
pop
repnz
orl
sahf
add
push
cld
mov
dec
outsb
sub
into
popf
lea
xchg
pusha
fdivs
cmpsl
xchg
outsb
adc
call
dec
lcall
pop
cmp
xchg
shrl
mov
and
lahf
out
fistpl
adc
xchg
dec
pop
pop
test
jno
in
insl
lret
sbb
mov
mov
or
roll
mov
movsl
fs
ds
popa
pop
in
add
addr16
cmp
adc
pop
mov
lret
aaa
xchg
add
popa
bound
cld
in
sbb
repnz
outsb
dec
in
inc
jp
out
add
les
icebp
outsb
in
xchg
int3
adc
add
mov
mov
incl
pop
lds
outsl
xchg
imul
dec
add
arpl
pop
imul
sbb
dec
es
push
mov
in
inc
push
addl
dec
inc
inc
push
scas
in
push
jmp
loopne
in
fwait
out
fnsave
jl
out
roll
cld
bound
aaa
call
fwait
rcrb
jle
mov
icebp
test
int3
inc
test
sbb
call
mov
xchg
shlb
insl
stos
jo
mov
adc
ss
mov
movsl
test
cwtl
es
jg
nop
orl
outsl
xchg
sbb
dec
xor
les
add
scas
cmc
les
lods
mov
xchg
fwait
dec
pop
lods
leave
sbb
notl
mul
inc
inc
or
sbb
cwtl
mov
dec
adc
in
stos
aad
dec
cmc
mov
in
addr16
xchg
push
xchg
xor
and
gs
cwtl
addr16
sbb
push
jne
mov
ret
iret
xchg
pop
ret
nop
and
inc
sarb
sub
mov
pop
ret
pop
pop
sub
dec
je
ret
stc
mov
aam
stos
cmpsl
jne
jae
popf
shrl
aaa
lods
lods
xchg
fs
mov
inc
subl
push
repnz
repz
mov
in
lods
je
jmp
jb
outsb
aad
shrl
inc
mov
adc
stos
push
in
repz
sub
mov
data16
adc
popa
dec
push
fcompl
pop
or
push
mov
xlat
push
or
iret
sub
adc
jmp
in
push
mov
or
mov
dec
sub
into
scas
nop
aas
imul
les
std
cmc
cld
dec
dec
xchg
test
dec
inc
jg
mov
xor
inc
mov
outsl
sti
outsb
push
push
add
adc
xchg
mov
movsb
adc
jo
stos
into
aaa
xor
xchg
movsb
imul
imul
popa
jnp
add
cli
shlb
addr16
mov
out
mov
shll
xor
mov
mov
loopne
cs
jne
data16
notb
cmp
rcrl
andb
cmp
mov
cmp
push
jg
push
cli
pusha
les
push
loopne
mov
sahf
push
popf
arpl
test
jg
fcmovnu
jmp
dec
scas
stos
dec
ds
xchg
rcrl
mov
xor
fldl
push
push
outsl
fwait
push
and
lret
jge
inc
ss
push
adc
in
ljmp
shl
jb
or
and
sub
add
sub
data16
xor
fidivrs
mov
into
out
clc
cmc
aaa
scas
jae
fs
push
push
subl
dec
idivl
imul
fwait
std
popa
js
and
mov
hlt
out
out
jecxz
xabort
jp
loop
rclb
outsb
inc
pop
rcrl
cmpsl
mov
mov
leave
cmpsb
inc
and
mov
inc
push
fs
aas
outsl
jbe
push
mov
femms
stos
shl
aas
outsb
loope
lods
dec
popa
mov
into
repz
outsb
stos
dec
js
out
adc
leave
sub
invd
imul
lock
mov
pop
loop
pop
push
pop
scas
inc
fistpl
sub
jns
pop
and
ja
popf
pop
xchg
fisttps
cld
imul
push
pusha
sub
mov
mov
out
outsl
mov
lock
jp
xchg
sub
in
imul
into
sbb
fs
imul
cs
cmp
shr
cmpsl
data16
push
sub
std
jp
xorl
push
sti
xchg
scas
dec
popf
insl
outsb
mov
roll
xor
cs
outsl
pop
dec
in
cmovp
jecxz
andl
data16
inc
pop
and
outsb
xchg
mov
cmp
movsb
jnp
jg
sub
xor
out
pop
test
dec
popf
and
movsb
imul
mov
push
ret
cmpsb
outsb
mov
lods
test
rcrb
and
adc
hlt
js
jbe
je
inc
dec
add
das
push
push
sub
sbb
rol
movsb
sbbl
loopne
stc
cmpsl
call
rol
or
cltd
addr16
mov
cwtl
sbb
cmp
imul
insl
xlat
daa
mov
popa
and
pop
clc
out
mov
call
push
sbb
pushf
shlb
adc
data16
xchg
mov
sub
push
les
jae
push
fcmovne
jno
ja
pop
cld
mov
es
in
pop
push
xchg
fwait
jns
lds
loopne
adc
test
fwait
fs
bound
outsl
xor
enter
adc
adc
into
push
insl
aaa
clc
cs
popf
jbe
adc
int
out
pop
and
xchg
cmc
repz
push
aaa
repnz
cmc
clc
jns
jecxz
std
mov
push
lds
push
icebp
fwait
push
iret
dec
pop
popf
jo
mov
cmp
xchg
lcall
dec
in
fs
in
ret
adc
mov
fs
mov
mov
repnz
lods
and
fidivrs
iret
cwtl
aas
scas
into
out
mov
stos
mov
jnp
rorb
pusha
add
xchg
fs
sub
movsb
cs
data16
fstpt
xchg
mov
jp
movsl
push
dec
adc
sar
push
adc
loope
out
sub
ljmp
bound
sub
loopne
gs
jnp
dec
pop
push
jl
jmp
cmp
push
push
xor
adc
int
or
push
repz
add
xchg
mov
adc
ljmp
pop
add
cmc
adc
xor
push
inc
add
in
movsl
ficomps
ret
jecxz
inc
inc
int
lret
pushf
dec
lea
outsb
add
and
es
inc
or
sub
xchg
imul
pop
jmp
or
pop
pop
jbe
repnz
fs
mov
sbb
jmp
dec
adc
in
stos
loope
dec
cmpsl
jne
lret
jl
add
xor
faddl
dec
scas
call
sub
cmp
sub
cld
fsubrl
pusha
inc
dec
out
in
sub
not
jmp
pusha
incb
out
stos
cmp
insl
cs
in
cmpl
mov
pop
sub
cltd
adc
pop
mov
mov
push
and
mov
pop
lahf
mov
adc
int
xchg
mov
push
and
jle
mov
mov
ret
vpmullw
mov
jmp
dec
push
enter
dec
sbb
sbb
loop
cmpsl
jns
push
loop
movsb
loop
incl
or
inc
xlat
sub
push
fcoms
xlat
ror
bound
mov
negb
movsbl
xchg
popa
stc
leave
push
mov
mov
and
lcall
jno
xor
movsl
data16
inc
inc
je
xchg
das
jecxz
jbe
cmpps
push
insl
ficomps
lods
clc
mov
mov
sbb
stc
add
cli
mov
and
sbb
xchg
or
aam
dec
ds
jmp
mov
jbe
and
push
lds
sbb
sub
lea
adc
ljmp
jg
stos
dec
in
in
adc
fwait
dec
xor
sar
fiadds
int3
jne
push
mov
in
jmp
int3
and
adc
in
xchg
outsl
mov
add
aad
xor
sub
jl
mov
and
inc
int3
outsb
inc
adc
push
insb
ja
sub
in
sub
and
mov
pop
xchg
ja
ret
dec
scas
jecxz
js
add
sbbl
push
xchg
aad
xor
push
fildll
loope
in
roll
inc
jg
out
scas
hlt
pop
popf
jmp
fidivs
pop
mov
mov
inc
pop
pop
pushf
sub
mov
movsb
adc
jnp
scas
sub
pop
movb
stos
in
and
outsb
repz
in
xor
insb
in
ss
sbb
repnz
leave
cmpsb
jae
add
repz
popf
arpl
jmp
xchg
fcoml
mov
sub
mov
out
add
fwait
mov
dec
popf
lret
xchg
fst
push
pop
movsb
es
add
mov
popf
xlat
movsb
faddl
mov
lret
and
out
pop
into
fcompl
clc
cs
cli
adc
insb
xchg
or
jb
dec
in
test
cmp
pop
gs
inc
mov
lcall
and
fisubs
jl
stos
push
daa
pop
push
subb
add
cmp
adc
pop
fcmovbe
push
sbb
adc
test
les
or
out
or
out
xorb
dec
nop
adc
mov
cld
mov
in
xchg
sbb
pop
adc
push
fistpl
pusha
dec
lods
mov
sbb
sub
add
in
jne
in
hlt
push
mov
xor
nop
sti
xchg
cld
mov
mov
shll
lret
dec
ds
dec
adc
in
sub
js
test
mov
inc
xor
mov
test
test
dec
repnz
and
sbb
jno
xor
loopne
and
js
ds
jnp
push
stc
push
in
or
pop
mov
jmp
out
lahf
fildll
adc
cmpsb
add
pop
mov
and
test
loope
outsb
mov
out
out
xchg
or
adc
sbb
dec
jle
sbb
or
mov
push
stos
jge
out
fistpl
fcomp
loopne
out
in
adc
bound
stos
fs
ret
xchg
or
dec
les
aam
pop
push
push
mov
and
out
add
inc
loopne
and
cmp
adc
movsb
xchg
and
shll
or
push
out
mov
loop
jge
loope
xor
jae
push
lods
push
mov
in
rcrb
popf
rcrl
jl
fldenv
pop
cmc
dec
jp
mov
in
dec
cwtl
sub
push
js
fs
mov
cmpsb
push
fsub
arpl
data16
rorb
mov
lods
jo
jo
shll
in
jno
hlt
push
outsl
and
hlt
inc
lds
test
andl
outsl
jge
hlt
loop
jg
test
fs
sub
sarb
dec
push
cld
cmpl
je
inc
js
jge
sti
cld
dec
pushl
in
or
xor
pusha
dec
cli
ja
leave
fs
ret
jge
in
sbb
fs
add
jp
xor
test
cld
jb
daa
inc
arpl
iret
cld
cld
jecxz
jns
cld
jge
inc
inc
insl
bound
cwtl
add
and
lahf
popf
int3
and
sbb
adc
aaa
or
hlt
in
in
ljmp
js
xchg
jg
mov
push
dec
pop
jmp
bound
ret
pusha
mov
scas
movsb
or
dec
out
shrl
shrl
dec
jg
jne
or
cmc
fldcw
sub
iret
cwtl
xchg
scas
push
mov
iret
clc
jg
or
pop
dec
in
js
sbb
adcb
dec
imul
in
loopne
shl
push
mov
add
in
lahf
es
dec
mov
mov
push
out
in
fs
fwait
inc
cmp
push
sbb
or
dec
jp
dec
das
cld
mov
call
mov
repz
push
push
jecxz
imul
push
and
sub
push
xchg
out
out
mov
sub
or
repz
sub
arpl
mov
rcrl
lods
lahf
sahf
clc
stos
lock
data16
mov
stc
cmp
mov
sbb
mov
sub
push
in
imul
hlt
imul
xor
fucom
out
imul
out
lods
adc
jmp
pop
imul
adc
daa
call
xor
inc
dec
cmpsb
int3
dec
pop
add
scas
test
mov
jle
ffree
pushf
jge
cli
jmp
sub
and
mov
pushf
pop
push
test
in
mov
ljmp
mov
fwait
sub
pop
cmpsb
out
push
sub
xchg
push
cli
push
adc
xor
aam
sub
mov
mov
leave
mov
push
sti
call
call
mov
sbb
push
inc
push
out
adc
femms
mov
std
inc
adc
mov
imul
fmull
sarb
pushl
and
cmp
cmc
stos
lret
int
jo
dec
in
lret
subb
cs
cmp
xor
pop
pop
loop
and
int
lcall
dec
jnp
mov
lcall
scas
mov
xor
mov
bswap
jmp
movsl
outsb
xor
sub
lret
mov
iret
fdivs
xlat
push
or
iret
fcoml
test
out
mov
push
outsb
mov
add
push
or
xadd
push
aas
sub
jmp
sbb
nop
scas
sub
pop
adc
outsb
push
xor
test
add
dec
and
aaa
hlt
js
sub
shr
or
push
sub
pop
das
into
push
mov
iret
pop
mov
or
inc
or
scas
movsb
hlt
mov
out
add
addr16
outsb
pop
subl
stos
addr16
out
fbld
push
lods
aas
jne
push
adc
aas
cs
std
lret
clc
mull
push
in
sbb
int3
mov
sbb
into
xor
enter
fs
sub
imulb
pop
aam
nop
icebp
imul
iret
idivb
sub
aam
cmc
push
mov
sbb
cmp
mov
jnp
ret
mov
inc
out
aam
and
out
inc
sbb
fnstsw
out
int3
mov
jb
jae
xor
mov
bound
ljmp
jb
cmpsl
ret
push
bound
sub
enter
hlt
out
scas
shll
push
inc
loope
sbb
iret
or
and
call
popf
cs
sbb
ret
cmp
sbb
movsl
push
aaa
sub
mov
push
mov
pop
xchg
push
lret
loop
fs
pop
icebp
ja
call
les
jo
jb
jns
mov
jb
rcrl
xchg
mov
or
dec
jl
jecxz
sti
xchg
adc
jge
rcrl
ret
shrl
movsl
sub
out
xchg
mov
dec
mov
inc
sub
cld
sbb
fimull
out
popa
out
jb
jecxz
rol
dec
outsl
ja
sbb
dec
gs
mov
sbb
jmp
and
lods
ljmp
das
dec
dec
fs
scas
jbe
mov
scas
or
mov
pusha
bound
push
int3
mov
jae
mov
outsl
cmp
adc
jmp
dec
inc
mov
mov
stc
push
xor
into
jo
aaa
cmpl
dec
adc
mov
mov
mov
outsl
shr
out
js
jne
sub
addr16
mov
jnp
test
inc
cmp
pop
test
cmc
imulb
and
in
lds
sbb
fwait
test
cmpl
sub
outsl
test
xchg
mov
sbb
adc
lds
in
fadds
sbb
daa
lcall
sub
loope
jbe
jl
data16
call
mov
cmp
adc
sub
and
cmc
das
lds
aam
inc
daa
pop
dec
hlt
pushf
pusha
in
cs
fsubr
popa
dec
daa
jbe
out
hlt
inc
cmp
and
dec
push
shlb
hlt
leave
push
jnp
add
inc
or
jl
push
fadd
sti
and
ds
xor
cld
push
out
cmp
imul
dec
or
push
cwtl
das
jl
cmp
dec
bound
pop
mov
cwtl
xchg
sub
mov
inc
bound
jno
in
or
cmp
jecxz
mov
faddl
dec
dec
jb
imul
fidivrl
popf
movb
idivb
sbb
push
sbb
jo
inc
xor
clc
sbb
jl
mov
pop
rcrb
mov
jp
mov
scas
pop
push
js
fwait
mov
sti
gs
cmp
imul
out
stos
jb
sub
jae
js
push
dec
int3
shrl
push
push
fwait
outsb
sub
les
sbb
xchg
loopne
fwait
out
xor
fucomip
js
hlt
lret
push
push
dec
data16
lret
inc
adc
negl
out
push
icebp
popf
xchg
add
cmpsl
in
fs
decb
dec
add
push
imul
in
xlat
insb
and
ret
or
leave
pop
js
add
dec
sub
jne
call
pop
stos
inc
cmpsl
scas
jnp
jg
shrl
mov
push
setge
inc
push
movsb
sub
jp
outsb
out
jnp
pusha
jae
jle
imul
inc
js
push
enter
dec
loopne
dec
push
cmpsl
dec
out
pop
push
pop
cmp
movsb
jg
push
sbb
enter
movsb
ret
aas
iret
push
inc
cmp
add
jg
aaa
jmp
inc
ret
xor
cs
add
std
loop
rclb
mov
shrl
popa
adc
or
pop
lahf
push
in
jecxz
xchg
outsl
popa
es
dec
sub
testl
jecxz
mov
mov
sub
movsl
in
enter
out
stos
mov
dec
shrb
clc
push
xchg
dec
daa
mov
add
decb
in
stos
loop
mov
cli
cmp
outsl
sti
addb
out
dec
push
stos
dec
data16
test
dec
lret
pushl
push
jg
add
pushf
push
in
inc
loope
in
frstor
bound
leave
jbe
sbb
adc
cmp
scas
dec
or
pop
das
push
adc
cmp
cli
pop
push
int3
popf
ds
lret
lahf
sub
lock
xchg
cmc
adc
sbb
aaa
xchg
lds
sbb
bound
jae
out
iret
out
mov
adc
stc
cli
je
add
or
push
out
or
mov
mov
cmc
in
movsb
jb
fnstsw
fcoml
pop
je
scas
cmc
sbb
fwait
ljmp
int3
and
push
out
lock
je
cli
xchg
mov
repz
jmp
repz
push
fdivrl
ret
rol
pop
shr
loope
imul
cmp
imul
mov
arpl
addr16
xor
arpl
aaa
ljmp
xor
loopne
or
cmc
test
insb
mov
out
mov
shlb
out
push
jns
xchg
popf
dec
cmp
xorl
push
stos
je
adc
pop
mov
jne
xchg
inc
xor
ret
xchg
loopne
stos
mov
stos
ljmp
int
fisttpll
jmp
fwait
imul
sbb
mov
jecxz
mov
dec
push
add
lcall
mov
push
pop
rorl
arpl
popf
sbb
or
mov
add
xchg
push
dec
jnp
or
cmp
out
out
std
stos
lret
push
mov
arpl
nop
js
lods
test
jecxz
add
adc
push
xor
push
js
mov
xor
push
jl
shrb
sbb
jnp
ja
xchg
dec
push
mov
sbb
insl
cmpb
xchg
mov
adc
leave
cld
sbb
cli
mov
xchg
cld
add
ljmp
inc
dec
sbb
iret
jg
iret
sbb
mov
movsb
das
mov
and
inc
push
sub
jmp
inc
pop
mov
cld
dec
in
pop
addl
pop
xor
iret
clc
push
scas
arpl
mov
jecxz
push
adc
ss
scas
and
nop
jae
or
push
xor
sbb
xor
push
outsl
call
dec
test
mov
fistpl
dec
out
sbb
mov
push
jle
mov
sub
sbb
loope
jl
lret
sbb
push
shrl
aam
loopne
data16
xor
cmpsb
lock
jle
sbb
cmpsb
or
int
call
jnp
fnsave
in
mov
out
mov
push
add
out
testl
mov
adc
inc
pop
jo
je
int
mov
idivl
dec
push
sbb
dec
imul
test
sub
loop
aas
data16
call
adc
cli
push
or
je
push
leave
mov
add
fdivl
outsb
out
int
adc
lret
mov
push
lahf
dec
xor
cld
push
je
dec
iret
push
sub
mulb
sub
in
or
push
rolb
movsb
sbb
cmpsl
shlb
mov
push
jp
les
mov
sub
orb
add
push
dec
sub
in
hlt
es
jb
sbb
sbb
jg
jle
movsl
in
daa
mov
bound
js
or
pop
sbb
sub
aam
push
dec
push
call
xor
push
test
dec
inc
aad
incl
and
daa
outsb
xchg
daa
and
push
pop
cmp
cmpsl
xor
mov
xchg
inc
push
lahf
pushf
dec
mov
into
inc
push
and
test
xchg
fcmovbe
or
inc
sbb
pop
dec
fs
lods
outsl
ljmp
pop
in
jo
mov
loopne
push
cltd
into
fldcw
push
push
outsl
sub
xchg
popf
push
push
inc
insb
les
mov
out
test
push
sbb
rolb
pop
arpl
dec
outsl
xchg
push
cwtl
cmp
mov
das
mov
popa
daa
push
push
enter
xchg
cld
sub
adc
xor
call
xchg
stc
ss
sarb
pusha
outsl
int3
xchg
fwait
dec
inc
or
cmp
dec
cld
cltd
aaa
jecxz,pt
adcl
subl
mov
shl
pop
data16
mov
in
adc
jmp
lahf
lds
ja
fistpll
leave
cs
cld
mov
jp
inc
pop
add
add
into
adc
sbb
push
ds
js
dec
mov
data16
mov
xchg
xor
xor
test
outsl
mov
cmp
cld
out
popl
enter
inc
jns
mov
imulb
mov
xchg
sbb
loope
sbb
js
ds
jle
rorb
jl
dec
sbb
mov
dec
mov
into
pop
jnp
inc
bound
data16
pop
repnz
ret
adc
dec
test
and
xor
push
stos
dec
hlt
inc
outsl
jg
inc
popf
pusha
mov
mov
out
sbb
adc
aad
bswap
and
pop
fwait
std
stos
push
loope
in
sbb
xor
jne
dec
test
fcmovbe
subb
push
lret
sbb
dec
push
jle
dec
jo
push
je
push
cmp
imul
push
lret
dec
jg
or
addr16
xchg
stc
in
insl
in
insl
mov
inc
aam
stos
push
xor
jns
popa
pushf
enter
in
inc
lret
jg
jp
lods
or
jl
add
xor
jecxz
sub
insl
aas
insl
cld
test
dec
addr16
jb
xor
leave
insl
lahf
leave
gs
dec
ljmp
movsl
pop
dec
int
mov
stos
repz
ljmp
in
pop
push
xor
sub
or
int3
jbe
jl
js
mov
lcall
clc
aaa
call
fimull
jno
push
jmp
mov
jl
xchg
andl
in
test
sbb
mov
adc
dec
js,pn
sub
bound
adc
or
inc
dec
shll
jo
les
mov
sub
sbb
iret
andb
loope
fsubs
xchg
cmpsl
insl
dec
dec
jp
dec
bound
jo
popa
push
mov
mov
aad
stc
add
push
dec
inc
in
ret
mov
in
mov
out
mov
fsubrs
sbb
adc
adc
cmc
and
fwait
jg
push
sub
xor
xlat
inc
sub
pushf
and
loope
xlat
add
cmp
dec
aas
push
lahf
movsb
dec
dec
aad
inc
aaa
arpl
push
in
cld
mov
lods
push
mov
shrb
inc
push
in
cs
jns
rol
jne
inc
push
out
lods
shrl
imul
cmp
mov
fxch
rorl
xor
inc
mov
dec
lret
cmp
test
lock
mov
cmp
xchg
push
les
mov
nop
fwait
jl
shrb
adc
xchg
inc
sbb
lret
jl
mov
lret
mov
clc
inc
jno
xchg
inc
inc
jmp
mov
ja
add
inc
inc
cs
dec
ja
fstpl
fdivrs
and
jmp
jbe
insb
lret
shll
adc
push
inc
adc
jecxz
mov
sbb
push
jge
repz
cli
movl
popf
loopne
out
push
inc
sbb
repz
je
loopne
mov
jmp
iret
dec
movsb
in
addr16
fwait
repz
mov
add
add
dec
es
es
sbb
and
add
pop
sbb
cltd
inc
and
push
jl
sbb
jmp
xor
sbb
cld
jl
jle
jp
jle
out
add
lock
push
jl
and
cld
and
and
fwait
call
stos
adc
jl
in
push
cld
pop
adcl
sbb
cltd
and
rorb
xchg
push
aam
inc
hlt
mov
lret
adc
mov
push
and
cli
xchg
xor
dec
push
sbb
pusha
push
xchg
call
and
test
call
out
not
aam
cmp
aaa
dec
cmpsb
test
les
inc
sub
xor
movsl
dec
mov
out
mov
sub
add
icebp
xchg
shlw
or
pop
sbb
xchg
jg
test
out
push
lock
rclb
pop
xchg
mov
bswap
iret
movsl
pop
sub
lea
test
fs
mov
sub
adc
aam
xor
sub
push
js
or
jge
mov
je
ljmp
dec
cmp
shl
js
js
push
js
pop
rcrl
test
cmpsb
addr16
dec
bound
fs
fsub
push
out
out
repz
data16
je
jg
cmc
ret
test
lds
scas
push
push
dec
mov
jge
imul
sbb
js
dec
cmp
ja
lret
out
je
mov
hlt
subl
adc
je
inc
out
dec
sbb
jg
repnz
sbb
sbb
sbb
aam
jne
sbb
xchg
jae
jmp
shrb
sbb
and
sbb
lds
mov
jp
inc
sbb
sub
adc
iret
jo
jl
cltd
jmp
adc
jp
and
sbb
fwait
ljmp
test
cld
fcmovnu
insl
xchg
ret
gs
jp
push
mov
shrl
nop
int
xchg
and
scas
and
and
int
sub
movsb
jp
cld
mov
mov
test
cmp
jp
mov
js
stos
push
arpl
nop
cmp
js
mov
push
out
mov
mov
xor
push
shll
xor
rorb
xchg
jle
outsl
xchg
or
xchg
and
pop
pop
rcl
cltd
orb
imul
mov
icebp
mov
jle
sbb
mov
jo
sbb
push
cli
or
and
push
jbe
inc
xchg
and
in
rcll
dec
loop
dec
lcall
and
sbb
xlat
push
stos
inc
inc
movsb
add
jbe
out
lods
push
mov
mov
lock
jge
add
dec
int3
leave
data16
jo
cwtl
mov
ret
cld
xor
push
xchg
dec
xor
repz
push
cmpsl
popa
pop
push
xchg
ss
out
mull
dec
adc
dec
loopne
add
test
push
sub
in
out
jnp
jle
addr16
jb
or
pop
fcoms
jl
sub
sub
popf
add
sbb
mov
loopne
cmc
push
scas
push
sbb
push
dec
jl
cld
jl
inc
shrb
negb
jl
adc
fs
movsb
or
popf
sbbb
movsb
sbb
iret
mov
popf
adc
in
mov
stos
push
jmp
test
aam
inc
fs
jl
dec
enter
push
cmp
jg
mov
repz
jb
ret
test
mov
scas
push
xor
dec
ljmp
int3
out
bound
lea
pop
and
inc
push
dec
dec
pop
leave
push
decb
sarb
pushf
jno
arpl
sbb
push
js
dec
cli
pop
cli
hlt
sbb
mov
mov
push
popa
enter
iret
sbb
sbb
sbb
fsubs
or
int
cmpsl
mov
nopl
xchg
fstpl
add
loope
pop
aad
movsb
adc
push
or
out
mov
cli
dec
adc
movsl
ss
and
pop
clc
outsb
ja
xor
enter
dec
push
lret
ds
std
cld
sbb
xor
mov
adc
scas
adc
notb
inc
stc
inc
push
dec
pop
pop
inc
add
lods
nop
js
stos
rol
int3
sub
xchg
xchg
xchg
sub
dec
insb
scas
sbb
cmc
cs
call
addr16
outsl
push
insl
dec
popf
sti
cli
jmp
xchg
test
xchg
fisttps
lret
sub
sbb
call
out
push
arpl
sub
push
inc
push
jl
mov
imul
cwtl
lea
pop
sti
leave
dec
test
jmp
leave
jg
and
jmp
sbb
dec
pushf
jb
push
pop
or
pop
jbe
cmc
pop
sbb
pusha
inc
aam
push
or
in
adc
inc
lds
shlb
jl
je
fcomps
leave
add
jae
jge
js
mov
test
xchg
jg
scas
js
dec
or
lods
lods
fs
inc
inc
push
stos
ds
in
adc
lahf
aam
outsl
push
jb
pop
ret
inc
or
dec
adc
int3
adc
jae
loopne
adc
jp
addr16
push
inc
cmp
out
outsl
sub
inc
shl
loopne
fisubrs
outsb
cmc
les
pop
fs
insb
sbb
sarl
aas
int
xchg
jae
xor
pusha
xchg
sbb
mov
adc
pusha
outsl
sub
pop
adc
and
push
outsb
dec
ljmp
or
sub
in
push
mov
mov
gs
sbb
std
mov
jae
shrb
adc
out
bound
pop
rcrl
lock
out
rorl
add
and
push
mov
mov
outsl
test
adc
orb
fwait
jo
addr16
aad
adc
outsb
xor
subb
cs
and
js
out
lods
jbe
push
and
add
inc
in
popf
mov
insl
sbb
inc
xchg
jns
dec
outsl
inc
adc
jl
mov
jl
rsqrtps
sbb
cmp
fwait
inc
mov
out
jg
lods
dec
xchg
je
arpl
fs
fwait
lds
cmc
xchg
mov
repz
decl
sbb
lret
mov
jmp
int3
xlat
test
sub
test
xchg
inc
inc
gs
pop
enter
fs
dec
xlat
in
out
stos
pop
mov
inc
push
iret
dec
outsl
push
ret
insb
sub
out
push
in
stos
jle
popf
out
jle
popa
dec
fisubs
inc
xor
cs
jo
aas
jno
sbb
leave
stos
mov
cltd
popa
imul
sbb
lcall
jbe
imul
cltd
fdiv
pusha
xchg
movsb
in
push
and
mov
mov
jg
dec
dec
iret
and
das
jae
pushl
dec
push
iret
out
popa
push
fistpll
lret
xchg
or
popa
out
cld
lret
scas
jns
dec
in
jnp
aam
test
call
popf
xor
sbb
enter
inc
mov
push
enter
imul
or
sbb
sahf
ja
push
jmp
jne
push
insl
call
inc
jmp
pop
xchg
sub
pop
lcall
loop
mov
jns
cli
dec
jbe
repz
dec
xlat
inc
test
out
loope
push
push
nop
push
mov
dec
ret
bound
pop
stc
or
sbb
jno
add
in
in
jns
mov
lds
sub
inc
cmp
sbb
jl
aas
xor
test
inc
imul
in
cmpsb
push
add
adc
dec
sub
jns,pn
sub
pop
mov
jp
sbb
in
test
pushf
incb
imul
cld
std
cmpsl
inc
pop
dec
shlb
lcall
subb
fucomip
js
sub
jge
adc
movsl
stos
or
rorb
sbb
jne
je
mov
sub
cld
mov
test
je
lea
lods
adc
nop
movsl
aaa
mov
sbb
lcall
add
in
and
lock
pop
mov
adc
test
lods
xchg
mov
out
sbb
ret
cs
call
sub
cltd
rdtsc
cmc
jb
frstor
push
adc
cmc
lods
lahf
lods
shl
and
scas
jae
push
sbb
das
or
or
pop
inc
dec
lods
push
adc
cli
push
mov
cmp
push
aad
dec
push
cmp
inc
rcll
mov
jp
into
sub
push
jne
or
ret
dec
inc
pop
scas
imul
jle
lods
jl
mov
dec
inc
and
pop
inc
jno
into
int
sbb
pop
push
jp
add
loop
les
enter
lock
jns
pop
jno
sahf
outsb
mov
jl
jmp
cmp
in
inc
stos
fcoms
sbb
ds
dec
les
sub
add
fisttpll
mov
xor
or
pop
jg
les
jb
scas
dec
pop
js
sbb
jl
push
jp
pop
stc
sub
test
in
int
mov
negl
push
sbbl
loop
ja
je
cmc
das
push
nop
cli
leave
lods
dec
sbb
dec
jmp
fmuls
loopne
fwait
jae
and
mov
adc
fnstcw
cs
sbb
pusha
xor
out
sti
or
push
jae
int3
sbb
push
movsb
pop
scas
inc
jnp
inc
lret
sub
enter
test
push
loopne
je
xchg
loop
adc
repnz
jmp
jbe
out
adc
lret
lds
inc
sbb
stc
testl
mov
daa
iret
addr16
lds
inc
test
test
add
insl
int
adc
jne
lcall
push
dec
bound
lods
in
sarl
pop
clc
fwait
jmp
lret
and
lea
movsb
shrl
js
mov
push
dec
popf
push
cs
mov
push
jne
or
int3
imul
push
or
jbe
jo
pop
movsb
bound
push
fbld
sub
mov
jne
das
sbb
mov
ds
pop
int3
inc
roll
movsb
out
ljmp
dec
lret
das
outsb
les
xor
sbb
popf
mov
repz
fdivl
test
inc
pop
inc
ljmp
stos
popa
out
sub
stos
pop
lods
test
sarb
pop
jo
push
sub
jno
ds
inc
dec
jo
daa
pop
mov
shll
sbb
fildll
push
arpl
mov
sbb
inc
jbe
dec
jno
loope
pop
or
adc
enterw
dec
pop
sub
pop
dec
jmp
push
repnz
pop
cmp
or
dec
arpl
push
xchg
sbb
xor
xchg
xchg
cs
int
popf
xchg
iret
push
repz
jbe
push
sbb
cmpsb
aad
and
insl
hlt
mov
mov
popa
sub
insb
and
dec
adc
in
pop
push
push
push
pop
mov
lock
insl
pusha
ljmp
xchg
scas
movsb
and
cmp
dec
pushf
sub
mov
daa
cmc
add
dec
test
and
push
sub
and
js
or
cmp
xor
cwtl
inc
into
and
popa
lahf
add
in
aad
or
in
add
lret
pusha
xorl
arpl
jo
jbe
dec
fs
push
inc
js
inc
and
popa
icebp
xchg
dec
fistps
add
insb
cwtl
jmp
sahf
loope
jg
jl
push
test
jg
jb
pop
incl
or
repnz
or
and
pusha
add
cs
mov
scas
inc
loop
imul
pop
sti
or
add
mov
in
cmp
sub
jae
xor
xor
jns
push
or
xchg
cwtl
sbb
add
xor
pop
shlb
adc
insb
sub
sub
push
inc
daa
pusha
imul
out
hlt
mov
jge
emms
sub
scas
and
nop
shrl
jbe
addl
mov
daa
stos
push
outsb
inc
insl
mov
or
adc
inc
add
pop
test
dec
push
pop
lods
dec
lret
popf
out
les
sarb
dec
orb
out
repz
xlat
lock
sbb
dec
sub
push
adc
stos
lcall
dec
jne
aaa
lock
dec
jo
mov
sbb
adcb
imul
mov
or
adc
sub
leave
pop
addr16
xchg
je
dec
imul
mov
loope
mov
xchg
mov
sbb
daa
sub
fcomps
add
mov
popa
lret
cmc
ds
xor
in
xchg
int3
xlat
mov
xor
scas
xchg
pop
cwtl
shlb
jae
ss
jg
jg
div
out
scas
stos
stc
loop
decb
cmp
push
sub
test
fs
sbb
outsb
outsl
les
add
out
icebp
mov
imul
push
mov
push
jo
and
mov
jge
out
outsb
dec
sbb
push
and
cmp
inc
aas
push
mov
push
roll
and
push
out
jg
mov
loopne
mov
inc
mov
dec
jge
xor
sbb
inc
nop
pusha
dec
das
dec
enter
lcall
push
cld
sbb
dec
jg
xchg
sbb
decl
out
sbb
inc
scas
mov
mov
pop
dec
and
test
bound
ret
loopne
xlat
jl
sbb
adc
fwait
jmp
fs
std
sti
or
sti
movsl
popa
xor
push
in
inc
and
mov
addr16
dec
cld
push
js
enter
leave
cmp
mov
jle
adc
xchg
xchg
les
push
sbb
dec
dec
xchg
jecxz
jge
xor
jle
aad
imul
pop
mov
out
outsl
ja
sti
jo
and
pusha
cmp
pop
dec
je
sbb
inc
test
lea
sub
dec
je
call
jmp
imul
sti
adc
adc
inc
loope
icebp
scas
push
loope
pop
outsb
push
sub
jbe
into
sbb
cli
jge
mov
cmp
es
dec
cmp
pop
imul
sub
fs
in
hlt
jle
mov
jecxz
dec
loope
xor
pusha
dec
cmp
xchg
call
ret
dec
dec
mov
adc
jle
jmp
outsb
arpl
pusha
imul
or
jae
mov
or
int3
push
sub
mov
js
lds
and
jl
dec
fcoml
mov
data16
ds
adc
pushf
add
jbe
ret
int
pushf
ljmp
inc
in
notb
jl
mov
adc
nop
pop
and
call
adc
outsl
push
push
loopne
shlb
cmpsb
pop
cmpsb
les
pushl
outsl
and
popf
in
loope
jp
mov
fs
jmp
ret
xor
sbb
inc
in
sub
mov
sub
xor
mov
jle
xor
dec
call
in
js
add
xor
lcall
cli
xchg
adc
sti
addr16
xchg
cmp
inc
adc
lds
stos
out
mov
leave
xlat
aam
mov
leave
push
dec
shrb
inc
movsb
xchg
jg
cmp
outsl
push
inc
data16
jnp
inc
jno
fisubrl
push
mov
out
mov
test
fiadds
jge
in
inc
and
stos
inc
shrb
pop
mov
pop
pop
call
sbb
inc
add
push
mov
sbb
mov
daa
sub
cmp
pop
pop
cld
pop
pushf
inc
scas
sbb
pusha
add
pop
cmpb
adc
pop
mov
cltd
inc
fs
lahf
gs
fsubrs
xchg
mov
dec
ljmp
pop
jle
stos
outsb
push
stos
sub
into
adc
mov
outsl
push
sub
aam
popf
dec
push
push
push
cmp
sbb
dec
in
xchg
sbb
sub
sbb
repz
rorl
inc
sub
pusha
mov
mov
in
sbb
cld
mov
mov
inc
or
test
fs
dec
and
add
roll
push
loopne
inc
add
roll
mov
sbb
aam
ljmp
imul
shr
cli
rorb
and
jbe
mov
es
nop
sbb
add
into
fdivr
xchg
mov
xchg
nop
pop
and
jae
iret
jl
jno
or
xlat
mov
or
rol
lret
ds
cmp
imul
sub
jmp
punpckhwd
test
loope
mov
imul
adc
inc
xchg
insl
sbb
or
xor
mov
out
cltd
xchg
sahf
in
inc
jge
adc
adc
test
sub
test
pop
adc
mov
aas
ficoml
jl
stc
lahf
sbb
adc
mov
rcr
test
jl
adc
mov
mov
enter
aaa
cwtl
inc
sti
sub
je
push
mov
fmull
pop
sub
xchg
mov
inc
shl
lret
loop
outsb
sbb
imul
and
test
sub
jp
mov
adc
test
dec
inc
sub
shl
cmp
lds
sub
sub
bound
insb
out
sub
dec
lret
imul
xchg
pop
test
call
xchg
test
mov
into
pusha
add
hlt
mov
loope
fwait
outsl
push
inc
mov
bound
in
sti
cli
bswap
or
shr
sbb
hlt
aam
sub
push
jecxz
fwait
es
sbb
out
movntps
inc
sub
imul
xchg
aaa
xlat
jl
dec
data16
repz
or
jl
cld
or
xchg
sbb
inc
mov
add
into
js
sbb
dec
call
in
out
sub
iret
aad
push
xor
movsb
mov
stos
jp
sub
push
les
lcall
orb
dec
jg
pop
jp
dec
into
push
xor
xchg
call
js
xor
js
fwait
jne
or
out
jle
rcr
pop
andl
cltd
push
ja
outsb
add
loop
jne
fwait
push
sti
pop
scas
xchg
in
ja
sub
enter
jbe
inc
push
mov
and
and
mov
cld
scas
data16
rolb
repnz
xor
lock
xlat
cwtl
mov
jp
icebp
mov
add
jns
aaa
mov
rcrl
ret
daa
mov
jmp
cs
inc
ja
adc
cmc
test
insl
and
daa
clc
inc
push
mov
add
sub
fadds
andb
pop
hlt
xchg
pop
data16
adc
or
sbb
ljmp
adc
jnp
popf
bound
jmp
jno
mov
sub
xchg
dec
jo
jmp
adcb
mov
js
pop
imul
and
or
pop
test
nop
leave
loopne
test
lcall
out
repnz
mov
mov
pop
icebp
or
mov
push
cmp
in
scas
nop
cmc
xlat
imul
in
scas
pusha
sti
mov
or
out
push
add
inc
sbb
add
or
mov
arpl
pop
jmp
cltd
cwtl
push
add
icebp
inc
rorb
sub
cmp
xchg
fs
mov
out
push
dec
hlt
outsl
data16
out
movsl
push
jo
lods
repz
jg
imul
adc
ja
scas
push
sub
mov
test
dec
pop
roll
sahf
xor
push
mov
insl
cld
imul
jno
pop
dec
imul
jge
js
ror
popa
pop
inc
in
mov
mov
pop
xor
sbb
outsb
sbb
lret
por
pop
neg
pop
lods
data16
inc
outsb
std
mov
in
shlb
add
sub
mov
push
inc
cld
mov
es
jns
and
mov
mov
cwtl
shrl
testl
mov
jo
cmp
mov
outsl
mov
out
orl
gs
mov
push
dec
dec
lods
stos
jp
enter
in
dec
out
iret
mov
clc
and
adcl
stos
jb
xchg
cmp
sub
fimull
dec
dec
cli
xchg
loop
stos
sbb
addr16
in
int
in
ffree
jae
test
xor
enter
ss
jae
fs
xor
push
mov
inc
enter
fsubs
sbb
jl
add
ja
fsubr
in
dec
mov
iret
int3
call
arpl
mov
or
pop
ljmp
mov
loope
imul
jb
dec
pop
mov
aad
in
dec
loope
int3
lahf
int3
js
dec
mov
mov
dec
in
jg
repz
dec
into
xacquire
xor
xchg
incb
outsl
rorb
aaa
addr16
inc
outsl
and
lock
scas
jns
and
push
and
jbe
fwait
and
lock
push
jecxz
out
push
out
mov
notl
mov
leave
jne
jae,pn
sub
iret
repz
aas
lret
sar
movsb
dec
pop
and
dec
or
das
repz
in
pop
jmp
pop
loope
aad
ds
xchg
mov
sub
push
mov
scas
adc
imul
out
out
sub
inc
test
dec
imul
out
xchg
sub
xchg
push
lea
clc
jg
lods
es
shrb
insb
xor
in
into
mov
push
pop
hlt
jg
jne
cmc
scas
aas
loopne
lcall
int
mov
push
sahf
jecxz
iret
jle
mov
insl
outsl
sbb
pop
jg
jne
popa
shr
mov
add
loope
in
push
jbe
leave
ljmp
sbb
dec
das
or
jo
dec
pop
scas
sbb
lret
je
mov
dec
clc
jg
pop
ljmp
dec
incb
mov
pop
fidivl
arpl
int3
loopne
addr16
xchg
arpl
lods
lock
clc
pcmpeqb
xor
xor
les
cmp
xor
bound
out
mov
xchg
in
dec
mov
scas
mov
push
lret
sub
shlb
sub
imull
lret
imul
shl
add
mov
sbb
add
dec
pop
sbb
xchg
push
and
cmp
jmp
push
mov
lret
mov
jmp
mov
ret
mov
or
outsl
inc
popf
xchg
push
aas
into
hlt
in
adc
and
mov
jne
lea
das
add
les
sbb
test
xchg
loopne,pn
sbb
rorb
es
clc
shrl
xchg
aam
sbb
or
xchg
mov
push
dec
aam
shll
repz
lahf
push
movsl
cmp
in
lea
js
jmp
jne
shrb
addr16
push
andb
pushf
adc
push
adc
inc
stos
pusha
pop
adc
movsb
pop
pop
and
jecxz
lret
gs
add
mov
enter
enter
inc
iret
inc
xlat
into
xchg
cmp
clc
inc
push
aad
shll
test
repz
into
jbe
pop
cli
mov
add
es
jne
aaa
cld
and
jns
cmpsl
fwait
push
je
addr16
shlb
add
pusha
xor
add
jle
xchg
jo
scas
or
xor
fisttpll
sub
enter
adc
sbb
cli
dec
fs
inc
insl
icebp
dec
out
cmp
push
mov
mov
or
int3
testb
xorl
test
mov
jecxz
mov
cmp
out
dec
les
mov
adc
jl
mov
subb
fwait
xor
inc
add
loope
mov
stos
mov
daa
mov
push
out
cmpsb
movsb
mov
jl
sti
gs
lahf
push
pop
xchg
out
mov
and
aad
adc
enter
fdivl
fimull
pusha
dec
push
dec
sub
pop
fnstenv
fistpl
lahf
sbb
leave
jae
sub
xchg
pop
aam
ljmp
cmp
cs
icebp
and
repz
stos
pop
mov
push
bnd
jle
lcall
mov
xchg
jbe
stos
mov
mov
icebp
fistps
sub
push
pusha
loopne
pop
mov
fcoms
orl
inc
xchg
inc
sbb
xchg
outsl
clc
pop
xchg
pop
dec
adc
les
jl
cs
sbb
mov
xchg
sti
fsts
stc
int
fcompl
dec
adc
ficoms
xchg
sub
xlat
imul
mov
lcall
insb
daa
dec
xor
dec
mov
push
call
rol
test
lds
call
popa
jg
and
test
lea
jmp
mov
daa
add
sub
jl
lret
or
aam
push
sbb
push
nop
mov
sub
xor
out
jae
sbb
hlt
adc
and
rolb
aaa
test
or
inc
sub
xchg
vpaddw
pop
mulb
push
in
or
popa
ja
ficoms
sub
pusha
test
loopne
dec
mov
orb
and
mov
fxch
jb
dec
jnp
testl
or
pop
adc
jne
sub
sbb
into
mov
push
lcall
mov
pop
js
push
fs
mov
and
add
cs
imul
pop
lock
arpl
cmc
mov
outsl
out
or
out
mov
je
mov
cld
fucomi
or
dec
dec
mov
dec
popa
pop
cmpsb
popa
xchg
arpl
xor
pop
enter
rcrl
add
outsb
sub
mov
xor
rorl
nop
adc
pop
mov
hlt
lds
adc
pop
out
and
xchg
jae
sbb
jb
adc
sbb
jp
sahf
push
subps
push
rcrb
jp
or
dec
jo
jb
and
mov
ljmp
cmpsl
int
scas
inc
mov
inc
mov
adc
mov
mov
inc
outsb
add
lret
fdivl
mov
in
push
testl
arpl
leave
jbe
ja
jno
xchg
stc
clc
lahf
andl
popf
out
ss
in
scas
inc
pop
bound
outsb
jp
inc
adc
xor
add
jle
mov
jae
push
jo
pop
ja
mov
mov
bound
pop
mov
jns
jo
stc
fcomps
dec
jg
mov
xlat
es
out
xor
repz
dec
push
cld
xor
test
rcll
sti
cwtl
out
cmp
pop
jge
and
xchg
outsl
inc
xchg
xor
push
in
pop
push
addr16
les
bnd
jl
inc
mov
sahf
dec
test
data16
mov
dec
pop
sahf
lea
shlb
dec
cmpsl
inc
cmp
js
into
add
out
inc
xor
stos
inc
cs
xchg
or
dec
mov
mov
aam
sbb
mov
push
cmp
sub
dec
push
mov
push
out
ds
adc
in
cmp
cwtl
jbe
jle
popa
push
add
scas
and
sub
jno
inc
sub
or
sbb
cltd
icebp
mov
enter
das
fs
push
sbb
dec
scas
pop
les
add
mov
lea
ret
out
shrl
dec
push
or
inc
bound
out
cmp
lret
hlt
jns
cwtl
sbb
iret
adc
fstl
lret
in
jmp
inc
jg
jns
pop
pusha
jle
pop
and
inc
imul
sbb
jnp
setl
or
lock
xchg
sub
scas
leave
adc
adc
repnz
push
cltd
shrl
es
in
sbb
cmp
movb
in
jp
xor
jp
test
jp
push
ja
xor
adc
add
push
sub
call
inc
or
pushf
out
bound
pusha
clc
jl
push
js
pop
je
sub
jo
inc
pop
imul
push
dec
dec
inc
daa
push
dec
je
sti
push
inc
and
inc
dec
dec
in
inc
or
inc
cld
pop
xchg
dec
pusha
pop
inc
dec
push
pop
push
push
push
xor
and
cs
clc
push
pusha
push
adc
jmp
inc
inc
popa
jg
inc
adc
jg
dec
adc
and
jo
movsb
es
push
push
iret
test
stos
pusha
movsb
cmc
cmp
ds
cmp
hlt
xor
ss
xor
gs
ds
inc
outsb
push
or
push
add
xor
sub
es
sub
movsb
sub
adc
push
cmpsb
jbe
sub
cmpsb
jp
sub
mov
cwtl
test
xlat
imul
stos
push
push
cltd
stos
mov
nop
frstors
stos
outsb
arpl
rcl
or
pusha
cld
notb
cmp
outsl
sub
mov
orl
stc
pop
mov
adcl
inc
push
test
sbb
mov
xor
push
inc
inc
ljmp
negl
addb
ljmp
cmc
cmpsb
mov
jle
pop
mov
dec
xor
outsb
dec
mov
je
scas
and
cmp
cmp
adc
push
lea
cmp
and
jge
daa
push
cwtl
dec
mov
jno
movl
add
cmc
jge
push
jmp
push
daa
movntps
push
sub
dec
mov
pop
jg
push
shlb
out
xor
mov
fs
sbb
and
ja
dec
push
cmpsb
cmp
sub
mov
or
pop
sbb
push
arpl
aam
pop
loope
dec
add
ja
push
out
scas
push
xchg
stc
cs
mov
fmulp
sub
shll
enter
inc
fsubr
xchg
xchg
push
lods
aad
sbb
popf
dec
movsl
cmp
inc
pushw
fbstp
pop
dec
cmp
cs
out
incb
mov
mov
outsl
sbb
pusha
jb
mov
sbb
sti
lock
fwait
cmpsb
pop
push
lds
inc
xchg
inc
push
push
cmp
cmp
sbb
repnz
jg
ret
js
push
jb
mov
sub
sbb
insl
sbb
movsb
lods
adc
sbb
mov
push
sub
jne
rorl
imul
mov
pop
lret
stos
enter
cmp
test
jmp
jecxz
inc
jns
push
dec
xor
push
add
jbe
mov
cs
inc
fwait
mov
ljmp
xchg
pop
icebp
and
jge
sbb
adc
inc
andl
sbbl
outsb
bndstx
stos
movb
cmp
dec
jmp
sbb
dec
jbe
movb
cmpsl
cwtl
fisttpl
in
icebp
repz
and
jp
sbb
adc
sub
add
and
js
outsb
lock
mov
std
or
jae
or
jb
pop
sub
test
cmc
das
outsl
popf
sti
cmpsb
int
ljmp
aas
cs
sbb
xlat
out
js
int
cwtl
dec
add
int3
sub
adc
pop
push
data16
jne
stos
xlat
into
test
aad
sbb
stos
inc
out
sub
imul
dec
jns
lea
popa
fwait
clc
aas
enter
rcrb
les
loope
clc
sub
sbb
pop
stc
outsl
pop
mov
data16
push
lea
push
push
mov
mov
js
mov
push
imul
mov
xor
sub
outsb
imul
mov
lods
push
enter
lret
iret
dec
call
pushf
cli
sub
push
mov
inc
xchg
ljmp
or
shr
test
in
adc
jbe
loope
jl
out
mov
adc
add
outsl
popl
xchg
pusha
js
push
push
inc
popa
scas
das
push
push
mov
ja
jp
sub
test
pop
je
fwait
add
ret
pusha
sbb
outsb
dec
enter
xchg
xor
sbb
cmpsb
xchg
andl
or
loope
arpl
test
xchg
cmpsl
jge
call
xchg
faddl
ja
xchg
adc
int
iret
fwait
clc
sbb
push
lret
add
sbb
stos
addr16
mov
fcompl
negl
dec
pop
pop
dec
adc
stos
ss
repnz
sahf
popf
cmp
push
add
cld
ret
inc
movsb
iret
sub
imul
call
test
test
adc
jae
iret
pop
stos
loope
or
sbb
push
add
pop
push
sbb
aam
cli
sahf
out
mov
sbb
dec
in
mov
jg
lret
inc
mov
mov
push
sbb
pop
push
cld
and
test
jmp
int
cmp
add
int
pop
insb
push
lcall
jb
in
loopne
xor
popf
pop
out
lea
ret
js
pop
mov
pop
orl
sbb
push
nop
cs
lret
dec
cmp
pusha
jmp
mov
inc
jne
cwtl
sahf
inc
xor
xchg
mov
aaa
xlat
loop
ret
mov
jbe
sbb
sub
es
js
repz
jle
lret
adc
and
jno
scas
dec
inc
in
imul
daa
push
sub
sbb
lahf
sbb
rcr
cmpb
adc
push
lret
popa
imulb
popa
int
xchg
jne
sub
popf
popa
data16
lret
adc
mov
std
and
fs
outsb
data16
out
xor
shlb
or
cs
cli
sub
rorb
xlat
ljmp
jo
dec
hlt
jg
arpl
xor
inc
lahf
fcomps
inc
inc
rcl
iret
lahf
adc
xchg
xchg
xchg
sbb
dec
ja
mov
out
popl
add
sbb
sbb
push
xor
pop
lds
push
ret
cmp
xchg
mov
inc
sbb
lret
push
add
sbb
mov
inc
adc
dec
gs
icebp
cli
jl
dec
dec
test
jp
xchg
popa
and
stc
dec
insb
lds
mov
in
pushf
jne
xchg
stos
mov
sahf
les
lods
popf
push
mov
xor
adc
push
fists
nop
sub
test
adc
outsl
ljmp
push
sahf
loop
sbb
xor
repnz
cli
je
out
add
adc
sbb
scas
loope
sbb
clc
les
ss
add
lods
loop
dec
mov
lret
outsb
dec
rcrl
sub
sti
mov
repz
popf
xchg
or
push
adc
jae
cwtl
inc
adc
enter
mov
adc
insb
fcmovne
or
mov
loope
outsb
in
je
jae
aaa
pop
xchg
cltd
outsb
pop
pop
hlt
sub
cmp
xlat
inc
mov
pop
or
mov
adc
jmp
jmp
sbb
lcall
xlat
out
sahf
adc
sbb
push
adc
daa
push
mov
lods
pop
es
mov
lret
xchg
js
and
out
mov
pop
stos
lahf
and
gs
loop
pop
and
cmp
data16
data16
sbb
jecxz
out
mov
adc
push
sbb
push
dec
mov
pusha
or
push
jno
or
xor
hlt
bound
mov
loopne
push
loop
shll
mov
in
fisttpll
mov
call
in
inc
fmuls
jmp
out
add
pop
inc
and
hlt
push
adc
sub
cs
adc
or
xchg
pop
mov
iret
into
adc
jo
push
push
pusha
popf
adc
addl
adc
push
pushf
imul
sbb
imul
arpl
sbb
ljmp
push
fwait
popf
addl
sbb
mov
cmpsb
cs
xor
push
dec
jb
mov
pop
lods
dec
mov
push
mov
loop
sbb
test
cmp
inc
jno
sbb
je
shll
inc
inc
orl
popf
or
cli
sbb
pop
push
popf
lcall
inc
scas
xchg
adc
lock
jp
pop
loope
add
xchg
cmc
sti
test
or
jo
inc
es
push
pop
mov
or
int3
adc
pop
popa
cmp
inc
aam
dec
hlt
scas
test
out
jo
pop
pusha
push
jecxz
repz
out
test
pop
je
push
add
fnstsw
imul
insl
adc
iret
push
and
adc
dec
jle
andl
pushf
mov
jno
jns
pop
inc
ret
cmpl
mov
xor
arpl
arpl
push
mov
ret
mov
cmpsl
pop
cmp
les
ret
call
test
shr
shrl
pop
mov
xor
push
inc
in
popa
xor
jmp
xor
lret
cmp
test
push
jle
mov
and
ljmp
sbb
ja
push
sub
ficoms
rcl
lret
adc
adc
push
incb
push
out
mov
adc
in
repz
adc
ds
ja
aam
int3
roll
jle
add
aas
pop
adc
inc
shlb
pushf
popf
cld
jecxz
shll
dec
cmp
pop
movsb
cli
sub
push
or
lds
dec
cld
jge
cmp
shl
inc
test
push
and
popa
xchg
inc
dec
push
or
test
fmull
imul
arpl
leave
arpl
push
ja
outsl
sti
imul
cmp
mov
pop
jbe
lret
repz
outsl
nop
mov
imul
sbb
rorb
mov
notl
in
xor
push
int3
jb
fsubrs
fwait
mov
jnp
andl
outsb
mov
cmp
push
adc
cmc
je
outsb
stos
jl
and
cmp
push
movsl
lock
cmp
js
dec
imul
push
loopne
dec
dec
aaa
test
or
jb
into
cli
stos
pop
fwait
pushf
push
cld
jle
dec
dec
pop
bound
icebp
cs
rcll
jb
js
dec
add
and
out
out
pop
push
inc
cwtl
notl
mov
out
mov
mov
inc
js
jecxz
xor
test
mov
dec
push
sub
jp
mov
scas
pushf
dec
push
jmp
imul
mov
lods
sbb
out
loopne
jl
inc
jmp
inc
cmp
fsubr
jns
mov
clc
gs
mov
jg
xchg
mov
movsl
iret
jg
mov
sti
jbe
test
push
mov
scas
lds
cs
adc
daa
fs
cs
imulb
pop
adc
ds
sbb
pushf
push
sub
cwtl
cmp
cli
xlat
pushf
in
push
jno
fcoml
pop
push
fs
imul
sub
and
push
cmp
shlb
pop
outsl
dec
jnp
jl
dec
dec
pop
imul
sbb
or
ds
pop
lea
push
xor
cwtl
add
outsb
mov
aaa
cmpsb
shlb
in
scas
jge
sub
cld
fdivl
push
sbb
jne
aas
add
push
push
pop
lahf
sbb
xlat
loope
jle
push
scas
pop
addr16
mov
out
jl
push
lods
punpckldq
mov
mov
jle
ja
loopne
imul
imul
popa
fwait
jle
arpl
jle
pop
adc
sub
xchg
or
les
jb
push
int3
jl
jl
imul
mov
popf
adc
push
cbtw
jnp
mov
stos
and
sahf
outsl
fsts
push
sbb
jp
sub
lcall
fs
incb
mov
es
mov
xchg
faddl
xor
daa
jne
push
loope
or
xor
dec
jne
out
scas
jl
lea
loopne
jmp
mov
inc
pop
stos
inc
std
or
fs
pop
dec
mov
inc
in
scas
nop
addr16
maskmovq
imull
sbb
cmp
outsb
pop
loopne
jo
mov
dec
xchg
test
js
adc
ret
lods
pushf
bound
int
lret
sbb
testb
cmp
out
inc
pop
dec
gs
mov
int
lods
inc
pop
clc
out
stos
xchg
mov
test
xchg
lret
xor
pop
push
imul
lea
push
dec
into
and
addr16
loopne
dec
sub
dec
inc
mov
dec
cmp
pop
push
pcmpgtd
in
jle
test
xchg
sub
aad
imul
add
sbb
out
push
dec
and
inc
xor
sbb
daa
in
push
mov
pop
lock
fs
cmp
lcall
inc
mov
pop
jb
xor
subb
into
cmp
sbb
in
jne
push
in
jg
pop
push
mov
gs
in
xchg
pusha
push
sub
dec
fwait
jle
stos
outsb
pop
aaa
pop
and
incb
and
sbb
lret
adc
jecxz
enter
std
mov
push
and
push
mov
sti
or
dec
sbb
jle
jo
add
ja
icebp
adc
mov
das
inc
dec
pop
pop
sbb
fs
pusha
repnz
mov
cmp
mov
int
das
cmp
lods
cmp
ljmp
mov
test
pusha
fwait
imul
cmp
inc
and
sbb
xchg
adc
shr
fidivs
clc
xor
scas
xor
ja
sub
inc
ror
sub
pop
imul
jnp
popf
and
add
adc
cltd
bound
rorb
push
or
mov
sbb
adc
lret
mov
in
rorl
push
mov
adc
repnz
fimuls
or
jo
sub
jnp
sbb
jmp
pop
pop
sbb
popf
dec
xlat
xor
mov
iret
rcll
cmp
sarb
jp
dec
lods
rclb
pop
insl
hlt
xchg
sub
sbb
inc
int3
hlt
push
outsl
sbb
fdivrp
shll
dec
jno
dec
out
movhlps
mov
js
jge
aam
movsb
and
loop
xor
fstpl
cld
push
xor
sub
dec
in
popa
fwait
or
adc
rorb
ds
or
mov
rol
addr16
jno
mov
pop
aas
mov
push
push
popf
nop
pop
addr16
lret
cmp
outsb
leave
push
xchg
jmp
cs
mov
ds
jnp
cmp
sbb
adc
and
cmp
cld
sbb
ret
dec
les
js
cmc
dec
add
addr16
fwait
dec
push
addr16
fwait
jecxz
jle
mov
jp
bound
data16
out
mov
in
dec
push
sub
int3
inc
inc
data16
pop
test
insb
adc
outsl
inc
sbb
stc
push
addr16
sbb
int
cmovl
dec
mov
scas
enter
push
sbbb
jle
cmp
or
fdiv
sti
dec
fcoms
inc
pop
sub
jle
rcrl
add
xor
fs
push
rcrl
dec
ret
aam
fs
scas
repnz
in
push
out
ljmp
call
jp
pop
push
mov
jbe
push
test
out
arpl
int3
jbe
adc
add
xchg
loope
fidivrl
mov
xlat
pop
cs
adc
daa
scas
int
lret
mov
pop
inc
test
call
xlat
cmp
rorb
lret
push
push
in
xchg
sbb
in
pop
adc
sub
xor
stos
adc
pop
pushf
test
lods
lods
hlt
jbe
mov
jle
call
mov
mov
add
repz
pop
shrl
orb
roll
pop
sub
mov
push
call
adc
or
inc
in
sub
jno
push
les
lahf
sbb
das
rorl
insl
or
xor
in
sub
das
in
int
inc
imul
int3
sbb
sub
clc
push
testl
out
lret
jle
aam
fsubrp
add
enter
imul
addr16
push
push
pop
es
leave
imul
push
iret
or
cs
data16
mov
inc
add
lret
dec
push
shrl
push
stos
sub
out
out
and
insb
je
sbb
xor
push
hlt
js
icebp
cwtl
lcall
adc
bound
dec
add
pusha
push
stc
mov
sbb
dec
and
loope
adc
jl
adc
ljmp
and
les
mov
lcall
out
jmp
imul
insb
inc
or
imul
push
pop
outsl
nop
sub
xor
rcrl
and
pusha
mov
adc
sub
push
pop
in
addr16
jg
adc
inc
push
addr16
mov
mulb
mov
and
jp
xchg
stc
or
int
roll
push
push
movsb
out
adc
ss
jp
addr16
inc
dec
fldcw
loop
add
pop
out
test
or
stos
push
repz
ds
push
sbb
mov
rclb
loope
mov
test
push
scas
popf
aam
push
ret
stos
xor
mov
fs
das
pop
cltd
data16
lods
add
dec
or
mov
js
sbb
test
in
mov
dec
adc
dec
clc
inc
pusha
pop
add
pushaw
das
jle
bound
dec
jl
lret
iret
ljmp
jp
ss
push
jno
out
or
call
idivb
loopne
je
mov
ds
xchg
ss
out
cmp
xor
sbb
insl
sbb
jbe
pusha
sbb
xor
lcall
cmpsb
cld
mov
pop
outsb
inc
push
aad
adc
out
cmc
mov
jbe
rorb
in
dec
mov
cltd
jo
shlb
mov
push
out
cmpsb
mov
add
nop
loopne
stc
pop
jmp
fs
cld
push
dec
inc
mov
push
cmp
cmpsb
cmp
mov
addr16
cmpsb
dec
data16
pop
jbe
fcomps
aad
pop
sbb
inc
push
test
push
cmp
pop
sbb
jge
call
loop
mov
sbb
inc
pop
clc
imul
cmp
sahf
icebp
pop
add
xchg
inc
inc
push
or
stos
push
jo
scas
enter
sti
push
out
xor
sbb
leave
jge
in
in
xor
add
rcrl
cmpsb
dec
ja
outsl
dec
out
mov
in
push
movsb
dec
cmpsb
out
pusha
mov
in
inc
sbb
inc
outsl
sarl
adc
movsl
dec
xchg
out
push
dec
mull
ret
std
fisubrl
gs
out
and
sub
lret
inc
mov
outsb
pop
add
jo
out
fisubl
lret
push
jb
xchg
test
loopne
sbb
ret
ret
push
out
fisubs
mov
scas
pop
push
mov
test
nop/reserved
pop
dec
jmp
xor
push
enter
pop
rep
in
jo
inc
jae
leave
inc
jl
cmp
pop
outsb
cmpsb
inc
das
and
into
jnp
pop
jmp
cwtl
outsb
stos
dec
xchg
nop
es
pop
pop
or
mov
mov
cmp
test
push
inc
int3
adc
fistl
out
daa
push
or
mov
sub
je
mov
popa
mov
outsl
aad
je
pop
imul
push
push
pushf
jbe
ret
mov
pop
fs
cmc
mov
xchg
adc
testl
pop
and
vpunpckldq
insb
pop
inc
movsb
cwtl
loop
mov
jmp
in
adc
sub
cmp
sbb
hlt
decb
inc
jl
test
xlat
jl
pop
mov
xor
sub
shll
mull
imul
hlt
xchg
enter
inc
inc
scas
adc
jle
es
jp
dec
and
sub
stos
rolb
xchg
mov
jae
jo
or
popa
xor
xlat
jb
aad
scas
mov
mov
aaa
loop
jo
dec
loopne
dec
insl
sub
inc
push
jmp
push
add
outsb
mov
pushf
jnp
xor
xor
call
inc
jbe
mov
addr16
or
inc
dec
cltd
icebp
je
notb
adc
orps
inc
xchg
pop
cmp
or
outsl
rcrl
mov
jp
xlat
jbe
or
xor
std
sub
ljmp
push
outsl
xor
pop
ja
inc
push
push
or
cmp
fs
in
cmpl
out
xor
ret
jmp
push
mov
sub
int
pusha
loope
mov
bound
out
test
sbb
xchg
push
bound
popa
rorl
outsb
adc
pop
push
imul
dec
es
das
shl
mov
andb
lods
inc
cld
xor
sub
jg
pusha
data16
repnz
fldcw
cmpsb
cmp
fldcw
ret
inc
das
or
push
popa
ss
outsl
out
push
shl
data16
ret
mov
cmp
addr16
xor
sar
adc
arpl
lcall
mov
imul
aas
vmread
fnstsw
pop
sbb
stos
outsb
popa
lods
fadds
dec
push
std
out
orl
jmp
or
iret
push
rcrb
cs
in
cmpsl
outsb
push
addr16
jg
mov
xorl
sbb
fadds
imul
mov
sub
add
jne
xor
and
data16
cld
in
mov
xchg
add
outsl
jl
outsl
les
in
lea
scas
jno
cs
sub
in
loop
roll
sti
dec
rorb
pop
mov
dec
iret
jmp
jg
xchg
popa
push
ljmp
fisttpl
out
into
push
out
push
test
xor
cmp
mov
in
sahf
test
fnsave
outsb
push
jle
dec
cmp
pop
jle
shrb
xchg
jecxz
imul
xor
fmull
leave
shl
popf
imul
mov
cmp
cs
mov
or
inc
pop
xchg
jno
fwait
jne
add
mov
dec
jo
shlb
or
mov
sub
stos
xchg
adc
mov
pop
insl
aam
xchg
stc
xor
bound
std
dec
jl
add
jno
xor
xor
mov
sahf
mov
flds
add
imull
push
lods
aas
lret
leave
outsb
lods
hlt
stos
push
xchg
std
jle
int
ja
int
pop
enter
pop
push
nop
cmp
sarl
out
out
or
xchg
and
pop
dec
into
cmp
rol
lahf
lods
sub
adc
out
pop
andb
out
fs
popf
xchg
ret
psubb
push
add
rcll
jle
mov
jmp
mov
popa
dec
outsl
xor
xchg
sarb
pop
repz
lcall
mov
add
cli
out
dec
mov
mov
cmp
movsb
mov
inc
add
data16
dec
push
push
popf
jl
nop
sbb
rclb
addr16
mov
shlb
aaa
insl
mov
fisttpl
dec
test
int
addps
fs
subps
arpl
comiss
sahf
jae
and
pop
movsb
push
mov
clc
lcall
and
inc
dec
loop
xchg
adc
rolb
pushf
sbb
shll
jg
idivb
xor
iret
jle
scas
push
mov
std
cld
and
icebp
test
addr16
test
scas
jge
mov
stos
std
jl
mov
jo
out
test
jle
cld
int3
and
test
sub
outsb
dec
out
mov
mov
pusha
jmp
imul
call
and
das
iret
test
mov
push
mov
mov
loop
ficomps
lret
loopne
cld
negl
out
mov
mov
push
or
xchg
fdiv
push
jmpw
js
and
and
dec
data16
sbb
arpl
je
cmp
dec
lret
int3
popf
pcmpeqd
cmp
xlat
stos
xchg
imulb
dec
daa
push
push
test
imul
or
repnz
test
or
or
jp
mov
mov
jmp
push
or
sbb
jecxz
sti
jl
ja
xchg
fimull
ja
data16
outsb
fcoms
ret
mov
in
and
shlb
movsb
jns
cs
xlat
mov
or
sahf
fs
loopne
scas
movsl
das
mov
rorb
test
add
inc
and
es
movsb
movsb
mov
mov
loope
lds
push
into
pusha
js
call
push
cmp
mov
push
outsb
push
cmc
int3
stos
inc
es
test
callw
pop
add
in
test
stos
fwait
cli
shrb
inc
mov
in
mov
pop
mov
push
aam
les
sbb
mov
pop
mov
cmp
negl
and
out
push
jns
push
adc
and
out
cmp
push
pop
inc
push
addr16
mov
jnp
pop
daa
int
dec
mov
push
mov
and
jle
jbe
test
in
dec
inc
sbb
shl
das
out
sub
test
sub
imul
fwait
enter
stos
int
nop
mov
xlat
cmp
scas
leave
ja
dec
and
arpl
push
sub
cmp
inc
je
call
and
inc
mov
fcomp
scas
je
scas
push
les
cltd
outsl
and
push
in
pop
fnstcw
push
leave
and
repz
dec
pop
jge
dec
js
add
shrb
lds
data16
test
std
js
dec
cli
dec
xchg
add
jo
ficoms
outsb
int
data16
into
pop
movhps
loope
mov
xchg
push
mov
push
leave
outsl
es
xor
adc
mov
nop
shrl
cmp
int
ss
lahf
mov
negl
lcall
insl
roll
mov
xchg
lock
pop
aad
test
sbb
adc
mulss
int
mov
dec
pop
ret
mov
repz
pop
sysenter
adc
cmp
push
in
out
ljmp
movsb
aam
testl
mov
mov
adcl
movsl
and
xchg
enter
loope
stos
leave
mov
call
mov
mov
xchg
sub
lret
repnz
cld
cmc
cmp
inc
in
dec
fwait
gs
cmpsl
pop
in
stc
int3
aam
stos
jbe
pushf
add
jle
rcll
test
mov
cli
jo
daa
jle
mov
mov
int
xchg
inc
jg
rcl
xchg
aas
les
pop
js
sar
lods
loop
pop
lods
dec
in
lock
das
xchg
popf
shrl
mov
int3
cmc
js
call
clc
or
jns
inc
mov
test
dec
jmp
jbe
stos
es
ss
pop
cmp
adc
lods
js
imul
xchg
xchg
cwtl
sarb
cld
sub
aas
xchg
pop
inc
sub
push
cmp
or
xlat
mov
mov
push
lods
push
jne
pop
aas
adc
mov
or
loopne
imul
jae
inc
cmc
jmp
dec
cs
mov
cmp
and
in
inc
popa
pop
xchg
aas
inc
jg
cwtl
mov
ja
or
ja
pop
push
cld
pop
dec
xor
inc
jg
out
fs
and
sub
jg
hlt
js
into
scas
pop
outsl
inc
cld
jb
cld
scas
in
and
in
push
xor
call
fwait
pop
rcll
repz
push
push
js
addr16
sbb
clc
hlt
jmp
mov
js
add
repz
int3
mov
xor
das
test
push
sub
je
cmp
mov
jo
cli
dec
sub
movsl
dec
enter
addr16
imul
push
mov
fldl
cs
cmp
cli
mov
add
paddsb
dec
push
repz
mov
xchg
insb
jne
cwtl
out
sbb
inc
testb
ret
lret
les
scas
dec
out
out
cwtl
mov
cmp
cmpsb
movsb
cmp
nop
icebp
scas
pop
push
in
in
sbb
jnp
out
adc
andb
dec
xchg
mov
push
ljmp
inc
sarl
fucomp
repz
pop
cmc
movsb
orb
in
push
and
pusha
test
and
lcall
ljmp
mov
insl
es
push
push
sub
out
into
fs
imul
dec
int
push
cmc
sbb
lods
arpl
adc
pop
lods
jmp
mov
mov
lcall
sbb
mov
dec
mov
int3
xchg
pushf
movsb
mov
cmpsl
cli
mov
cmp
lretw
into
outsb
popa
xchg
push
mov
xor
pop
repz
mov
scas
dec
rcrb
shr
cmpsb
mov
push
jg
arpl
mov
cmc
jbe
add
int3
pop
jmp
int3
mov
xchg
fnstenv
push
scas
sbb
sar
fistpl
out
scas
in
inc
push
call
cmp
stos
push
jb
es
inc
mov
fsubp
inc
and
int3
outsl
imul
xchg
stos
outsb
in
xor
jl
add
pusha
cld
out
pusha
loop
out
and
js
pusha
jge
das
lcall
divl
or
ficomps
popa
mov
or
insl
pop
stc
call
adc
test
pop
movb
mov
jb
push
int3
pop
jno
dec
xchg
ret
push
int3
fwait
pop
inc
int
sti
lea
cwtl
pop
fmuls
dec
mov
xor
loopne
inc
inc
push
cld
out
adcb
iret
pop
stos
in
jne
push
push
pop
lahf
push
sub
sbb
repz
aas
dec
sub
jno
popa
dec
fmul
stos
inc
add
sti
sbb
lock
adc
jl
jl
or
outsl
add
insl
sub
loopne
popa
repz
inc
mov
dec
out
or
add
push
iret
lods
cmpsl
sbb
fstpt
or
sbb
test
imul
mov
int
sbb
inc
aad
aaa
repnz
xor
dec
mov
insl
out
add
ficoml
lds
lods
fildll
clc
imul
mov
mov
push
repz
shlb
mov
pop
xor
sbb
cmp
movsl
mov
ret
dec
jle
outsb
sub
xchg
test
ss
pop
insb
jne
inc
pop
xor
jecxz
popf
jl
repz
pop
outsb
in
sub
pop
mov
cmpsb
dec
lock
push
insl
test
cmp
push
jns
cld
inc
jmp
inc
jg
and
iret
in
pop
jno
data16
jl
cs
add
cmpsb
inc
mov
dec
scas
sti
or
lds
outsb
sbb
mov
dec
push
repnz
ret
dec
sub
loop
inc
loop
jns
daa
pop
add
jno
jmp
popa
stc
push
aas
jl
push
jns
jecxz
lret
jmp
adc
nop
adc
push
push
sbb
add
aad
test
inc
pop
test
pop
je
cmp
inc
mull
dec
aaa
sbb
xor
inc
mov
or
mov
push
in
sub
movsl
xorb
rcrb
sub
fistpll
jmp
add
push
push
loope
xchg
hlt
arpl
arpl
xchg
pop
or
jno
jne
jno
xor
xor
lods
pop
add
sub
scas
pop
add
sbb
push
jmp
dec
pop
stos
mov
in
adc
nop
jae
jnp
popa
sahf
lahf
stos
and
adc
rclb
xchg
dec
or
push
test
mov
xor
es
out
rcrl
mov
xor
xlat
inc
outsb
imul
dec
jecxz
ret
stos
jmp
iret
call
lret
lret
adc
push
ret
enter
fs
addr16
gs
stos
dec
lea
sbb
dec
mov
adc
scas
jnp
push
or
push
jo
mov
mov
testl
xlat
imul
out
pop
dec
xor
jmp
jbe
dec
pusha
cmpsl
dec
push
ret
jp
cld
int
push
sbb
mov
dec
lock
cwtl
out
repnz
fwait
les
pop
push
cmp
dec
add
adc
mov
jmp
repnz
scas
inc
cmp
fcoms
xor
lea
push
jo
leave
and
xchg
add
pop
push
roll
aam
in
dec
or
das
mov
push
jmp
test
pop
call
dec
test
fisttpl
xchg
call
fwait
sti
jno
xchg
jmp
clc
xor
cwtl
sti
mov
out
aam
stos
arpl
and
sti
or
ljmp
push
push
mov
icebp
repz
shrl
movsb
xor
cmc
arpl
repz
lret
f2xm1
dec
push
cli
clc
leave
push
cld
ljmp
lret
inc
jnp
xlat
cmp
dec
shll
mov
jne
sbb
sub
jb
test
scas
sti
push
nop
pusha
cmp
aad
mov
sub
enter
push
dec
inc
stc
jne
ds
xor
jns
jg
clc
jnp
mov
mov
fisubs
or
cwtl
jecxz
popa
fstps
mov
es
sub
mov
sbb
clc
pop
pop
out
cmp
sahf
ja
das
enter
fcmovb
inc
loope
jp
push
les
push
cmp
shll
into
add
cs
ficomps
xlat
inc
into
pop
test
dec
sub
xchg
test
add
aad
cltd
in
jle
dec
mov
inc
jbe
test
hlt
adc
hlt
into
inc
ficomps
dec
dec
jne
or
lds
push
push
mov
outsl
loopne
sub
iret
push
dec
adc
ja
push
jp
int3
xchg
lods
jecxz
inc
jp
sarl
cmpsb
inc
pop
cli
pop
xchg
pop
loopne
dec
push
jl
into
outsb
jo
push
mov
dec
sbb
sbb
cmpsb
jno
movsl
mov
movsb
add
jo
sbb
aaa
sahf
jle
subl
cs
cli
cmp
out
mov
jae
push
jmp
sub
inc
sub
sub
ljmp
fsubr
shrb
fwait
add
adc
lahf
aaa
retw
jne
sub
dec
dec
mov
jmp
cmpsb
enter
cwtl
icebp
out
stc
sub
imul
xor
loopne
sbb
subl
jbe
mov
fistl
mov
fs
fiadds
mov
aaa
inc
fs
and
nop
imul
mov
cmp
jne
loope
sti
cmp
test
push
inc
pop
xor
lret
call
adc
or
daa
xor
jmp
jns
xor
inc
stc
popa
stc
pop
popa
cmpsb
dec
stos
lahf
repnz
js
jmp
pop
jo
inc
push
jl
fisubrl
inc
stos
leave
jb
jle
push
aad
adc
popf
icebp
daa
jl
xchg
ljmp
mov
jge
hlt
loope
lahf
cmp
jmp
xchg
fsubp
daa
nop
outsl
shrl
mov
add
pop
ds
rcrb
stos
lock
xchg
jb
mov
inc
lcall
aad
das
ljmp
pop
aaa
scas
mov
sub
insb
aas
jge
inc
pop
push
bound
adc
mov
cmp
inc
jae
add
add
push
xchg
xchg
pop
aad
push
xor
in
sub
bound
dec
fisubl
mov
mov
mov
pop
aam
faddl
neg
adc
add
jmp
lret
sub
fisttps
fimuls
outsb
jmp
jo
fucompp
mov
sbb
and
jl
je
pop
or
pushf
nop
push
out
xchg
push
jnp
lret
or
ja
and
mov
mov
mov
inc
in
push
fidivrl
lret
push
lahf
mov
and
cli
sbb
in
adcb
sbb
ljmp
aad
mov
addr16
add
pop
add
sbb
jns
pop
or
and
mov
mov
jne
rcrb
sbb
fisttpl
outsb
or
cld
aaa
sbb
loope
std
outsl
mov
loope
popa
in
aas
sbb
lods
xchg
sub
fcomip
jg
sub
add
xor
orl
dec
pop
pop
adc
add
sub
sbb
sub
sub
sub
mov
repz
pop
push
xchg
mov
scas
dec
xor
or
es
mov
rorl
pop
data16
adc
addr16
cmc
sub
xchg
and
ds
addr16
dec
cmpsl
cli
scas
rorl
in
addr16
sub
adc
fcomp
sub
xchg
or
jne
inc
negl
insb
stos
pop
jb
jl
push
jle
or
mov
outsb
jecxz
dec
inc
out
cmc
mov
push
jmp
or
push
jns
sub
enter
call
dec
mov
push
inc
sbb
lods
ret
inc
jmp
out
aam
xlat
push
call
enter
mov
and
pusha
leave
scas
pop
mov
out
pop
jg
jl
fsubs
dec
and
test
pop
mov
adc
dec
daa
test
je
dec
mov
push
insl
xchg
or
imul
xor
push
push
shrb
data16
add
and
cltd
repz
scas
es
iret
fs
iret
js
sub
push
adcl
hlt
fistpll
cmp
push
movsl
mov
dec
mov
adc
in
dec
dec
jmp
xchg
aaa
and
sti
adc
mov
mov
jns
ret
sbb
into
fists
push
pmaxsw
mov
cmp
enter
sbb
imul
dec
in
cli
jl
hlt
jle
arpl
insl
add
push
push
iret
adc
aas
mov
sbb
dec
dec
xor
lods
xchg
mov
call
movl
test
xor
aas
test
pusha
cld
xlat
jo
sub
jmp
or
or
push
imul
mov
imul
sub
negl
iret
cs
sub
movsl
adc
pop
negl
inc
and
pop
incb
xchg
jmp
popf
shl
fwait
data16
and
lea
lcall
imul
cmp
cld
idiv
xor
les
out
jmp
js
hlt
out
xor
mov
scas
dec
push
jp
outsb
mov
pusha
cmp
lods
or
addr16
fidivl
dec
popa
mov
scas
scas
pop
loop
dec
jno
add
dec
int
outsb
cmpb
imul
fldt
pop
dec
mov
inc
ds
push
cld
lcall
data16
sahf
ret
mov
sub
sbb
cmp
out
aam
jns
fisubl
cmp
lods
out
orb
int3
scas
lret
jns
adc
leave
dec
sub
sbb
das
mov
js
into
xchg
jno
ficoml
and
inc
push
icebp
pop
lods
pop
mov
sub
jne
nop
push
push
sub
data16
push
jle
mov
pusha
cmc
jge
mov
and
rorb
jmp
incl
enter
aad
loopne
jb
js
xor
or
clc
push
das
test
jbe
mov
dec
dec
daa
mov
adc
daa
bnd
jmp
aad
jns
into
or
push
dec
mov
sbb
inc
mov
mov
adc
ljmp
sarl
inc
cmc
jns
inc
popa
mov
adc
dec
es
in
sub
sub
call
jg
push
jge
inc
dec
sbb
pop
pop
mov
outsl
aad
stc
out
jno
xor
mov
dec
xor
sub
cld
lds
outsb
clc
sbb
jge
sbb
ja
fs
subb
scas
cwtl
xor
push
add
jl
stos
xchg
outsl
inc
mov
dec
arpl
adc
hlt
int
imul
inc
cltd
jmp
mov
mov
mov
jg
into
mov
cmp
aad
js
sbb
jle
sbb
out
xchg
test
or
mov
jne,pn
std
jnp
in
cld
jle
into
pusha
or
mov
push
loope
in
dec
arpl
das
fadd
pcmpgtd
fnsave
ljmp
adc
ljmp
arpl
sub
roll
and
push
inc
clc
lcall
mov
dec
test
in
mov
mov
inc
fldenv
mov
int3
inc
adc
inc
lcall
outsb
repz
std
subl
sub
mov
jmp
cmp
loope
sarl
cmp
pop
xor
cld
outsb
dec
mov
and
arpl
inc
cltd
sbb
fisttpll
loop
pusha
jne
rcrb
add
shl
ss
js
lret
scas
jmp
adc
rclb
fwait
xchg
aaa
leave
adc
bts
sbb
inc
inc
xchg
inc
inc
push
test
cmpsb
and
mov
jmp
in
dec
and
dec
cmp
negb
or
in
cmp
pop
clc
jle
xor
adc
out
sub
clc
jne
and
fisubrs
ret
ds
stos
in
pop
std
push
rorl
rcrl
dec
dec
dec
push
add
shr
scas
or
iret
jbe
cmpsl
add
pop
enter
xchg
mov
scas
sbb
mov
addr16
mov
jecxz
push
loope
lods
sbb
or
cmp
adc
xchg
jne
inc
int3
shlb
data16
adc
enter
clc
push
sub
dec
or
adc
mov
test
inc
pop
pop
ret
stos
push
jl
sbb
inc
xor
and
cmp
stos
shll
data16
or
aad
arpl
mov
ret
push
enter
hlt
dec
dec
addr16
push
insb
cmc
mov
ljmp
mov
jbe
pop
icebp
sarb
test
shll
imul
xor
dec
sarb
daa
adc
lods
sbb
lahf
out
adc
sub
mov
loopne
jecxz
inc
jbe
ret
sbb
cmpl
addr16
cmp
ljmp
and
jnp
stos
aad
xor
pop
popf
lods
sahf
xor
js
sahf
lret
wbinvd
orl
nop
dec
inc
hlt
in
scas
adc
stos
aad
inc
sub
out
xchg
je
sbb
push
sub
lret
mov
push
loopne
arpl
bound
mov
scas
pop
cmp
popw
mov
aaa
jmp
jbe
rolb
sub
mov
fwait
addr16
and
mov
lock
pop
xor
push
decb
ret
xor
enter
dec
push
and
or
and
mov
adc
adc
add
dec
cli
subb
sbb
cmp
or
cmp
pop
push
pusha
inc
cli
xor
aaa
ljmp
rolb
pop
scas
aas
shlb
dec
test
xor
addr16
sbb
test
ss
aaa
adc
inc
pop
adc
int3
mov
mov
pop
jp
xlat
sub
dec
lret
movsb
xor
mov
inc
es
fbld
sbb
inc
leave
test
aad
pop
adc
ret
ss
test
dec
and
or
stos
xor
dec
xor
jnp
dec
and
inc
ss
or
sbb
xchg
sub
ss
dec
repz
pop
dec
shll
xchg
sbb
sub
adc
dec
pop
outsb
leave
lods
popf
imul
insl
loopne
fs
pusha
lods
jo
lods
icebp
push
in
inc
mov
sbb
or
fucomip
cmpsl
fwait
cmc
lret
clc
and
sti
mov
dec
leave
sets
mov
call
cld
sti
fldt
mov
push
jp
xor
cwtl
mov
fsubrp
push
mov
sbb
dec
lods
xchg
xchg
stc
adc
call
lods
pop
fsubr
pop
sub
fmull
in
repnz
inc
sbb
jb
mov
lea
je
dec
cld
stos
leave
js
or
jl
add
inc
adc
mov
out
and
cmp
testb
add
push
adc
testb
cli
mov
jg
mov
adc
inc
faddl
adc
xchg
int3
dec
les
lret
xchg
and
roll
cs
adc
jbe
mov
in
dec
in
or
push
sti
mov
jecxz
dec
and
inc
jl
js
popa
pop
enter
mov
pop
enter
out
enter
lret
test
adc
shrb
aad
fldcw
adc
mov
xchg
in
jo
mov
je
repz
push
jle
push
dec
clc
aas
cmp
das
ror
push
sti
inc
fidivl
pop
out
mov
push
cmp
xchg
lods
rcll
in
in
sbb
insl
ret
cmc
jle
clc
pop
push
or
int3
push
and
lock
data16
sti
scas
aam
jg
pop
push
fwait
xchg
sbb
test
xor
dec
jp
adc
push
das
stos
lds
icebp
xlat
mov
push
data16
fisubs
mov
xor
xor
je
inc
movsb
inc
cmp
xchg
push
xchg
bound
iret
sbb
sbb
sbb
dec
js
pop
lds
xchg
arpl
sbb
sub
loopne
bound
mov
addr16
pop
inc
int
mov
test
fwait
push
adc
push
adc
jg
jl
push
dec
add
mov
jp
jns
enter
adc
pop
push
imul
js
dec
push
out
in
adc
es
dec
xchg
xor
or
scas
cmpl
push
les
dec
or
shll
mov
inc
outsb
sbb
aaa
lock
adc
or
mov
dec
ret
inc
cmp
adc
mov
cmpsl
call
sahf
repz
sbb
mov
lods
sbb
andb
in
xor
and
psrlw
sub
mov
or
jne
pop
mov
popaw
pop
stc
sbb
cmc
lock
adc
mov
scas
fdivl
cli
pop
fisubl
lds
adc
lock
jns
sbb
fdivrl
inc
cbtw
loopne
das
daa
out
xor
call
mov
mov
test
bound
mov
shlb
je
mov
sti
aam
sbb
or
jle
cmp
loope
dec
jle
mov
push
test
inc
pusha
cmp
cli
icebp
pop
add
aad
ss
daa
das
orl
call
mov
and
outsb
cltd
ret
shll
mov
fsubs
fs
inc
xor
inc
bound
jl,pt
pop
movsl
mov
mov
and
popa
push
jmp
cmp
popa
xor
bound
mov
ret
mov
subl
mov
out
ljmp
das
mov
rcrl
sbb
add
dec
ret
push
pop
aaa
repz
and
sbb
push
in
and
addr16
lretw
inc
testb
cmp
stos
int3
js
sbb
shrb
fs
cli
aas
add
dec
imul
clc
pop
sub
xchg
push
cmpsl
loope
and
stos
sbb
cmpsl
dec
decb
ds
xor
out
dec
jns
push
popf
cmpsb
jne
pop
cmp
icebp
inc
mov
cmpb
outsb
xlat
bound
add
mov
adc
cmc
mov
es
push
ja
scas
jge
push
cli
stos
iret
bound
jnp
popf
pop
fisubrs
xchg
es
fsubrl
adc
je
jmp
push
sub
inc
dec
mov
jle
sub
sub
inc
movsb
pusha
and
ret
in
out
inc
pop
mov
sbb
js
push
repz
sti
fwait
call
imul
cwtl
shlb
or
ja
popa
pop
pushw
cli
dec
xor
stos
sbb
sub
push
jne
mov
std
out
cmp
ss
push
ror
jmp
popf
push
cs
jne
cmp
fwait
sub
xchg
dec
push
dec
mov
pop
pop
inc
daa
jns
push
dec
lret
lret
iret
dec
pop
pop
dec
lret
push
addr16
mov
lret
sub
mov
pushl
je
cs
adc
pop
inc
lock
xchg
test
mov
or
xchg
data16
fs
jp
repz
out
enter
push
mov
loopne
jno
lock
sbb
fwait
adc
out
dec
fchs
push
in
orl
out
dec
mov
push
cmp
mov
mov
lods
jle
std
cwtl
jmp
inc
out
dec
and
cltd
imul
or
movsb
inc
pop
mov
in
scas
lahf
fdivrs
je
test
push
test
inc
aaa
and
inc
gs
pop
pop
jno
jo
jns
adc
fistpl
ljmp
fisubs
pop
imul
adc
adc
pop
cli
mov
jg
push
jbe
insb
add
test
ret
bound
in
fsub
dec
das
mov
clc
sbb
lods
rcl
pop
inc
les
mov
adc
stos
les
inc
jbe
mov
in
in
xchg
inc
xchg
imul
dec
call
out
mov
push
test
bound
xor
pop
stc
dec
inc
push
push
lret
add
sub
int3
push
adc
inc
lock
shlb
int
pop
jae
nop
inc
das
cmpb
fisubl
push
arpl
shlb
dec
pop
sbb
sbb
jo
sub
ja
lcall
mov
fadd
pusha
push
adc
outsb
cmpsb
mov
and
inc
adc
shr
aaa
xchg
ja
jmp
imul
pop
lret
pop
fcoms
adc
dec
call
in
push
iret
ljmp
push
fs
jg
jg
pushf
dec
push
in
repz
aam
out
popa
inc
ret
dec
push
pop
loope
leave
ljmp
add
int
fsubrl
insl
jp
add
pop
loop
and
stc
jl
cmpsb
ret
popa
int3
xor
sti
xor
xlat
pop
ret
repnz
shrl
in
outsl
pusha
fwait
xchg
push
outsb
std
adc
lret
push
shll
out
test
mov
sub
fsubrs
imul
faddl
rolb
imul
dec
jmp
bound
xchg
stos
pop
sbb
jmp
ret
pop
mov
lods
xchg
fwait
add
nop
pusha
mov
inc
push
rorb
mov
xchg
push
js
sub
xchg
cmpsl
sub
loope
test
les
mov
xlat
ret
jg
outsb
jmp
sub
imul
adc
jbe
lods
add
mov
jnp
dec
push
jge
or
inc
cmc
mov
sub
mov
pop
fistpl
sub
lret
mov
push
xor
or
testl
ret
repz
or
ds
jmp
jp
iret
push
pop
les
jge
insl
rcrl
mov
shrb
or
add
and
fwait
imul
outsb
repz
popa
mov
dec
push
dec
cmovbe
movsl
ficompl
loopne
imul
add
push
jne
pop
imul
pop
jns
outsl
scas
or
pop
sub
in
iret
les
pop
outsb
push
dec
mov
adc
sbb
pop
mov
jnp
jns
imulb
adc
xor
ret
lods
call
push
sub
ss
inc
in
jb
outsb
jecxz
jle
push
inc
dec
add
xchg
hlt
sbb
in
cs
cmp
divb
mov
notb
jl
sbb
lds
jne
push
push
cwtl
ja
test
lea
ljmp
inc
rorl
mov
jmp
sbb
in
imul
mov
loop
jl
addr16
or
cmp
inc
jle
or
or
fldcw
out
sub
mov
pop
shll
fwait
inc
inc
push
inc
sub
sbb
push
iret
add
mov
inc
cmpsl
clc
dec
xor
xlat
lods
sti
pop
inc
add
loop
push
dec
ret
sub
stc
cmp
ja
mov
cwtl
inc
popf
cmpsl
inc
aad
xchg
imul
scas
int3
mov
push
mov
call
call
and
add
imul
pusha
lahf
movsb
xchg
in
mov
cmc
mov
imul
rorb
mov
imul
ja
adc
cmp
sub
ret
imul
adc
jl
movsb
mov
fldcw
pop
cmpsb
fs
fwait
rep
outsb
fisubrs
and
iret
hlt
and
test
cmpsb
test
dec
into
cld
test
dec
outsb
inc
or
scas
xchg
test
xlat
pop
fwait
shll
lret
mov
pusha
xchg
jb
test
dec
dec
jp
mov
sub
mov
xor
ret
jl
test
dec
jle
lahf
movq
ja
sbb
stos
cmp
es
sti
mov
addb
mov
call
inc
cmc
lods
and
lods
js
loopne
in
sbb
call
imul
dec
imul
jg
dec
inc
ret
sarb
dec
movsb
mov
cwtl
inc
loopne
loopne
lret
dec
pop
xchg
fsubrs
cs
jp
jnp
push
es
js,pt
xchg
push
mov
loop
mov
or
cmpsb
push
pop
jo
push
cmp
dec
mov
mov
seto
push
or
mov
jae
lahf
jae
stc
inc
pop
imul
stc
aam
je
mov
rolb
lods
iret
insb
call
fbstp
jbe
mov
inc
sar
pop
fsubrl
sub
sbbl
nop
xchg
hlt
xorl
or
rclb
fistpl
inc
inc
stc
dec
push
and
leave
pushw
sub
inc
aas
rorl
xor
subb
push
mov
push
mov
or
adc
fs
bound
mov
sub
mov
sti
xor
add
jmp
bound
inc
fsubrs
cmpsl
sbb
and
outsl
fs
xchg
scas
jmp
adc
fwait
call
test
mov
call
cmpsl
pop
outsb
xorb
add
xor
cmp
jns
cmp
fnsave
pusha
jp
jbe
push
imul
and
imul
call
mov
jg
dec
imul
xchg
xor
push
pop
mov
push
nop
pop
fs
mov
push
bound
mov
jne
cmp
mov
ljmp
xchg
mov
sub
subl
mov
inc
std
mov
rcrl
push
loope
js
jnp
lock
jecxz
ljmp
mov
inc
ret
inc
push
push
lock
insl
push
cmp
push
pop
inc
push
bound
push
jae
adc
pusha
outsl
bound
pusha
mov
js
mov
xchg
add
pop
mov
fwait
ljmp
jecxz
inc
sbbl
adc
int3
cli
outsb
daa
jns
add
js
sti
sub
in
adc
lret
ret
sub
adc
adc
sbb
cmpsb
stos
adc
sub
push
xchg
inc
aaa
pop
divb
jle
out
sbb
xor
mov
dec
lds
cltd
movsb
inc
mov
sbb
inc
in
aaa
pop
add
cmp
fwait
pop
mov
jb
cs
mov
pop
inc
xchg
xchg
jns
dec
push
clc
dec
cmp
mov
out
add
jb
adc
mov
or
pop
aam
cmp
popa
push
dec
inc
stc
iret
mov
push
ret
roll
hlt
insl
lret
adc
das
mov
repz
scas
xor
insl
push
jae
cmp
sbb
lcall
jbe
rolb
repz
sub
jo
add
fidivrl
sub
loopne
lods
sbb
push
jo
rcl
sub
lret
mov
and
in
pop
test
packssdw
xor
cmovno
pop
in
push
dec
scas
adc
cmc
das
rclb
fsubl
push
aam
imul
ljmp
xchg
sub
mov
cs
cmp
push
xor
mov
xchg
out
cwtl
mov
jb
xor
mul
mov
icebp
add
movsb
push
dec
mov
repnz
in
fwait
pop
repnz
loop
add
cmc
push
jmp
ss
data16
cmp
sub
dec
push
jg
repnz
sbb
std
cmp
out
ret
adc
data16
push
xchg
mov
adc
test
adc
addr16
fdiv
icebp
int
sbb
pop
pop
push
outsb
fisttpll
aam
push
cmc
lods
pop
pop
push
sbb
sub
test
out
mov
call
inc
pop
enter
cmpsl
outsl
enter
enter
pop
sahf
cmc
lcall
dec
and
push
fadd
pushf
mov
sti
fimuls
notl
jg
int3
int3
out
add
mov
or
cli
stc
es
jg
and
add
decl
mov
sbb
mov
xchg
xchg
lahf
test
js
roll
cli
inc
pop
sbb
loope
push
out
mov
and
call
out
scas
pop
xchg
jo
xor
adc
jle
mov
add
fs
movsb
call
imul
mov
nop
jae
daa
adcb
adc
mov
mov
rol
dec
mov
xchg
pop
pusha
repz
repnz
pop
js
push
cmpsl
sbb
or
leave
jmp
ficomps
cmp
in
ror
mov
adc
les
adc
xchg
or
test
repz
clc
ss
cmp
pop
jmp
mov
pop
les
lock
sbb
nopl
arpl
enter
jle
dec
xchg
divb
loop
ds
jnp
cld
lea
adc
or
daa
pop
addb
data16
js
bound
cmpb
sbb
inc
daa
adc
jmp
add
les
and
int
xor
jle
scas
mov
xor
stos
into
inc
jecxz
pop
lcall
scas
jbe
mov
push
dec
aad
mov
imul
cmpsb
pop
jno
fildll
call
adc
test
out
ss
imul
ljmp
push
jae
sub
mov
call
das
aam
fs
into
pusha
scas
jne
pop
cld
js
add
addr16
adc
loope
mov
cli
int
jb
and
lret
pop
adc
xor
jns
dec
jmp
stos
rclb
mov
test
sbb
push
ret
push
push
decb
stc
call
add
jle
je
dec
mov
popa
or
push
inc
sbb
inc
inc
icebp
cwtl
mov
cmpb
sbb
xchg
jnp
adc
aad
sbb
out
xor
popf
dec
lcall
mov
dec
or
int3
roll
dec
loop
loopne
js
lds
leave
jmp
scas
stos
aam
das
loopne
adc
test
movsl
mov
push
pop
adc
js
jae
sbb
hlt
bswap
cmp
dec
push
dec
pop
pop
and
jns
icebp
mov
add
int
or
or
imul
les
mov
sbb
shl
mov
data16
cli
add
and
add
jl
add
mov
bound
nop
jmp
sbb
xor
ret
mov
xchg
flds
and
and
movb
nop
cmpsl
adc
out
cmp
push
adc
cmc
test
sbb
ror
je
fwait
in
jge
out
nop
cmp
mov
or
sbb
in
imul
push
pop
call
in
sbb
shl
pop
out
popf
outsb
inc
les
push
adc
mov
mov
mov
lock
push
negb
outsb
pop
shlb
pop
mov
jo
stc
inc
rolb
repz
flds
or
jl
add
imul
popf
sti
cmp
mov
mov
adc
jmp
ds
sub
dec
lock
imul
scas
or
bnd
sti
imul
xor
sub
dec
out
out
adc
sub
scas
lret
popf
sbb
das
ficompl
fisttps
push
imul
mov
inc
pop
fnstenv
enter
cmpl
dec
xor
jne
int3
push
popf
cmp
imul
inc
out
inc
push
out
pop
pop
mov
std
or
adc
leave
dec
test
push
je
jmp
jne
add
xchg
cmc
or
cmc
shrl
inc
sbb
imul
loope
jge
mov
jp
ret
or
or
in
je
lock
imul
mov
jae
scas
push
add
pop
jmp
test
adc
scas
pusha
push
push
shll
inc
cmp
adc
sub
or
shl
xchg
cwtl
ss
ja
std
iret
mov
ljmp
cld
dec
in
xchg
lret
mov
call
out
lock
and
inc
cs
sarb
sub
mov
fiadds
decl
cs
dec
cmp
addr16
xor
mov
mov
fdivs
inc
jge
mov
daa
adc
xor
lods
jb
loope
cwtl
cmc
xchg
stos
popa
sbb
ss
cmpsb
pop
cli
orb
fs
int3
jle
sbb
inc
dec
test
jp
loop
and
out
in
ja
mov
loopne
push
mov
push
lret
push
dec
xor
addr16
and
mov
cmp
jo
pop
cli
fldl
sbb
mov
loopne
adcb
xchg
fs
fisubs
adc
and
mov
movsl
add
or
adc
sub
mov
stos
decl
stc
jno
adc
int
fwait
loop
jg
add
mov
sbb
pop
lods
adc
icebp
int
mov
enter
roll
int3
or
pusha
xchg
add
mov
jne
outsl
popa
fnstenv
xchg
out
or
fisttps
lds
or
add
std
aam
pop
inc
lret
rep
or
mov
ret
cmpsb
fwait
cs
ret
mov
xchg
sbb
adc
into
sub
sbbl
scas
jecxz
lret
dec
cld
jo
mov
xor
jb
mov
repz
sarl
sbb
mov
dec
outsl
outsb
pop
jl
mov
mull
inc
fstps
sbb
mov
mov
pop
outsl
cld
jle
and
lds
outsl
jbe
xchg
mov
push
pop
sbb
sub
rorb
sub
fisubrs
fmull
dec
push
out
mov
jl
int3
mov
sub
loope
pop
xchg
nop
scas
adc
loop
fidivs
sub
scas
cmovle
inc
js
scas
adc
out
ja
outsl
hlt
out
and
jl
sbb
js
mov
loop
in
push
sbb
test
pusha
shrl
dec
cld
cmp
add
clc
mov
movsb
jl
sub
push
bound
and
clc
shl
sub
cmp
das
xorb
push
sti
sbb
loop
mov
in
and
pop
mov
mov
fs
call
pop
imul
je
push
fiadds
mov
cld
imul
les
dec
sub
lods
cmpsb
and
or
repnz
int
mov
sub
jmp
bound
sahf
or
loop
cmc
adcb
lds
cld
ss
mov
pop
mov
lret
imul
mov
sbb
ljmp
inc
jbe
in
mov
xor
int3
shlb
out
sbb
mov
movl
stos
jbe
cmp
jnp
roll
aas
cmc
nop
imul
pop
getsec
sbb
dec
pop
jbe
jl
mov
pop
dec
push
pop
push
jbe
cmp
and
repz
icebp
jmp
sbb
in
mov
insb
pop
jo
sbb
jo
inc
xor
or
inc
push
jle
ljmp
xor
dec
push
adc
add
mov
sub
inc
push
xor
loop
adc
pop
xchg
aas
jae
mov
pop
adc
cld
push
cld
inc
addr16
jp
inc
cmp
pop
daa
test
jmp
jnp
clc
adc
jbe
xlat
pop
call
lods
cli
inc
iret
inc
loopne
notb
insl
add
andb
pop
and
fdivr
loopne
and
fwait
sub
dec
dec
fiaddl
and
in
pop
cmp
push
push
dec
pusha
mov
cmp
fs
idivl
dec
aad
out
ja
ja
jo
jp
jl
clc
sti
push
popa
stos
call
jae
xor
daa
sub
stos
popa
shlb
les
std
xor
add
xchg
dec
fdivrs
mov
sbb
addr16
mov
mov
loope
sbb
inc
mov
jecxz
cltd
cmp
stos
fs
pop
faddl
mov
fs
fs
inc
dec
das
lds
cld
cltd
popl
fidivrs
pop
push
sub
das
push
mov
and
lcall
adc
mov
push
cmp
cmc
scas
dec
jae
lods
xchg
iret
dec
pusha
test
pop
push
fstps
nop
pop
sbb
dec
inc
adc
pop
inc
mov
mov
mov
sub
sbb
mov
fmulp
jl
add
pop
or
outsb
insl
and
ret
jl
pop
stos
fstl
scas
cltd
repz
mov
pop
xchg
cld
out
push
in
dec
adc
adc
cmp
mov
xchg
dec
in
push
dec
mov
push
cmpb
dec
daa
add
sbb
enter
push
call
sbb
fisttpl
fbld
pop
call
sub
sub
test
dec
cs
jnp
push
inc
fs
stos
add
inc
pop
push
int
xor
pop
je
outsb
pop
push
push
inc
loop
gs
shll
in
cmpsb
cmp
call
pop
leave
scas
movsb
ret
stos
jmp
pop
inc
mov
movsb
mov
pop
sub
out
out
xor
mov
cld
jnp
movups
push
imul
sbb
pop
cld
or
sbb
movsl
aaa
add
repnz
clc
dec
or
arpl
popa
adc
ret
dec
cli
shrb
fwait
ljmp
pop
add
popf
pop
in
xor
and
ret
mov
fdivr
repz
push
or
loop
sbb
mov
outsl
aas
pop
out
or
xchg
icebp
xchg
push
push
mov
pop
cmpsb
movsb
cmp
and
es
leave
inc
fwait
jns
std
subl
cmp
leave
inc
pop
dec
push
add
cmp
jge
jg
sub
add
cmp
pop
repnz
lcall
testl
and
push
fs
data16
pusha
cmp
sbb
aaa
xchg
arpl
lods
shl
repz
ja
adc
fisubs
cli
jae
inc
add
xor
cmp
cwtl
sbb
testb
jle
aam
bound
repnz
sub
fs
popa
dec
pop
lea
adc
pop
fmuls
popf
je
mov
jnp
out
mov
sub
mov
inc
into
fs
inc
fucomp
cli
mov
pusha
fnstenv
clc
js
aad
pop
jge
jl
int3
addr16
dec
pusha
data16
pusha
jae
iret
jmp
jae
fildl
jne
pop
in
outsb
daa
lock
cmp
add
in
pusha
pop
sbb
shl
and
cmpsl
mov
sub
xor
dec
cld
sbb
dec
mov
dec
inc
aad
and
loopne
adcl
inc
repz
sti
test
jp
jg
inc
rcrl
push
sub
nop
sahf
and
test
dec
into
popa
jb
adc
ja
lds
push
arpl
enter
les
pop
ljmp
in
popa
iret
call
mov
das
lock
jl
cmp
cmc
jl
mov
push
jp
mov
shrb
fcmovnb
or
pop
xchg
adc
repnz
mov
dec
inc
push
mov
and
lds
jp
cmp
dec
and
aaa
sub
sbb
mov
je
sbb
wrmsr
pop
pop
fwait
sub
sub
imul
mov
sbbl
cmpsb
lret
nop
aaa
test
add
lods
push
repz
xchg
dec
imul
push
outsb
outsb
jle
mov
mov
or
jns
movsb
call
xchg
and
pop
pushf
xchg
pop
popf
out
sub
mov
popa
push
aas
dec
out
pop
ds
mov
cmp
pop
ret
data16
xchg
insb
leave
and
rcrl
mov
mov
mov
mov
iret
mov
push
sbb
mov
push
pusha
mov
int
out
pusha
in
xor
cs
pop
movsb
jmp
dec
loope
mov
xor
mov
shll
shll
outsb
movsl
and
lock
pusha
mov
mov
lock
das
outsl
imul
int3
sbb
imulb
je
repnz
inc
cmp
ret
das
addr16
and
or
test
inc
loopne
jae
iret
aas
add
jle
leave
jnp
les
jmp
jmp
fcomp
inc
mov
push
xor
or
jg
mov
js
cmc
mov
movsl
fidivrs
push
enter
push
inc
cmp
addr16
pop
lret
fildl
pop
sub
lds
dec
je
cmp
aad
loopne
push
jmp
inc
test
pop
add
sbb
push
lcall
enter
push
xlat
mov
push
xchg
imul
adcb
loope
lahf
and
repz
int3
repz
pop
bound
roll
xchg
pusha
data16
in
jno
or
push
bound
lret
pop
cli
cmp
sbb
cli
xor
ja
scas
rol
jle
inc
adc
cmovno
push
pop
mov
out
mov
sti
sub
jp
movsl
jbe
out
xor
arpl
popf
ljmp
lods
stos
cld
inc
addb
stc
popa
xlat
mov
xchg
pop
mov
data16
sub
daa
stc
rorb
lods
sbb
loopne
cmp
leave
in
test
movsb
add
sti
or
les
lock
imul
inc
pop
outsl
repz
push
cltd
lods
out
pusha
test
std
mov
test
pop
push
daa
xor
mov
pop
mov
shl
push
mov
mov
dec
fcomip
xchg
and
jns
repz
push
stc
and
jp
das
cmp
push
mov
xchg
jb
loop
sti
dec
insl
out
push
cmp
pop
movsl
shl
dec
push
arpl
repz
xchg
dec
lods
outsb
lock
bound
cmpsl
mov
mov
push
dec
jo
dec
fistps
loop
push
loop
add
or
add
aaa
add
outsl
mov
pop
mov
scas
xor
outsl
inc
fwait
mov
mov
shl
sbb
icebp
daa
push
ds
aas
ja
adc
pop
cmc
and
rorb
int
hlt
mov
js
das
xor
mov
jae
rcll
adc
mov
loope
dec
sbb
and
movsl
jno
nopl
jbe
imul
sub
shr
jle
outsb
mov
cmp
lds
push
popw
jne
mov
cmp
std
jmp
subl
nop
daa
dec
sub
add
mov
es
test
xchg
inc
in
pop
lret
jmp
or
cltd
mov
fcoml
mov
sbb
in
sbb
jg
in
int
ds
in
cmc
add
xor
hlt
push
cli
pop
push
in
pop
jmp
into
ja
push
mov
cmp
in
sub
loope
pop
mov
push
mov
push
fwait
cld
xor
nop
dec
ljmp
mov
push
outsl
mov
push
ret
int
sbb
sub
adc
adc
xchg
xor
int
and
out
jne
addr16
out
jnp
mov
inc
push
add
adc
daa
jmp
push
in
outsb
imul
std
imul
stc
push
mov
fcomps
jle
test
addb
das
mov
jae
inc
mov
ss
test
shlb
lret
ja
fsubs
nop
mov
mov
outsl
sub
loopne
sub
mov
mov
push
xchg
adc
insl
mov
aad
popf
mov
dec
jnp
fwait
push
lock
push
add
push
movsl
scas
dec
mov
rol
leave
inc
daa
mov
mov
add
jmp
js
scas
cmc
add
jmp
mov
imul
fsubs
jbe,pn
inc
in
das
lret
lock
into
call
mov
or
jl
inc
push
sbb
mov
arpl
dec
int
or
sub
stos
pop
je
push
out
out
or
pop
jbe
sub
cmpb
pop
mov
rcll
xor
jmp
sbb
adc
dec
iret
push
pusha
jnp
inc
mov
outsb
in
sbb
pusha
sbb
lods
dec
aas
adc
mov
xchg
xchg
push
scas
pop
repnz
movsb
enter
enter
mov
fwait
out
inc
jnp
add
data16
dec
jo
int
int
dec
add
les
loop
mov
inc
mov
adc
dec
sbb
hlt
pop
scas
cmp
out
stc
add
mov
ljmp
xchg
inc
add
mov
sti
cld
push
sbb
mov
push
sub
inc
mov
xchg
xlat
imul
loopne
and
add
pop
mov
roll
pushw
sbbl
mov
sub
or
rcrb
mov
mov
cmp
fidivrs
in
outsl
mov
xor
cmp
adc
and
push
outsl
and
pop
xchg
dec
pop
ret
sbb
sub
in
int3
mov
in
test
insl
cmc
test
iret
adc
insl
sub
loopne
stc
push
inc
mov
mov
xor
rcrb
out
xor
std
outsl
jnp
jp
stc
rorl
in
jmp
jl
push
in
adc
outsl
lock
cmpsb
mov
push
cmpsl
pop
call
jmp
push
dec
cld
outsl
imul
mov
jl
jne
dec
scas
or
ja
push
jb
dec
lcall
or
fcmovnbe
dec
push
sub
mov
sub
ja
hlt
imul
pop
sbbl
lret
arpl
imul
adc
dec
imul
das
out
fwait
adc
rol
ja
aas
sub
cmc
pop
sub
movsb
ja
mov
loop,pn
fwait
mov
ljmp
and
sub
aaa
inc
imul
mov
inc
dec
jo
or
movsl
movsb
loope
js
call
jmp
push
imul
loop
push
pop
inc
pop
pop
ret
mov
test
inc
js
jle
das
dec
into
push
dec
ljmp
call
jns
gs
cli
lahf
out
jnp
cmp
pusha
ja
popa
clc
out
pop
cwtl
jmp
cmc
jl
call
inc
in
mov
es
pusha
add
pop
loopne
sbb
pusha
outsl
je
mov
pop
mov
cmp
leave
clc
pop
je
inc
cli
call
sbb
sub
out
das
in
add
xor
mov
mov
test
mov
test
or
jb
int3
ret
and
cmp
imul
pop
cs
xor
out
cmp
and
mov
std
add
xorb
imul
bound
and
std
xor
lahf
push
inc
xchg
sub
scas
jb
xchg
enter
int
push
xorl
rcrb
pop
adc
inc
push
fists
iret
mov
fadds
bound
out
cmpsb
sti
mov
jno
shrb
jmp
dec
inc
cmc
outsb
inc
fnsave
sbb
loop
push
jnp
mov
push
jle
mov
fmul
fsts
jp
pushf
jl
inc
and
cmc
or
xor
xchg
pop
wrmsr
ss
xlat
lret
scas
mov
lret
std
mov
and
out
stos
pop
push
lods
mov
or
mov
stc
cwtl
push
and
das
cltd
mov
inc
call
dec
test
das
out
sub
out
cmc
cmpsb
aas
lcall
test
fld
mov
cli
inc
outsb
test
push
leave
lds
fidivrs
xor
repz
int
aaa
push
sbb
dec
mov
mov
cmp
adc
dec
cmp
or
or
scas
shrb
jnp
test
sti
aas
sarl
push
pop
pusha
jl
and
lcall
test
in
out
or
scas
pop
dec
outsl
mov
shrb
lret
pmuludq
pop
aas
imul
sbb
xchg
in
adc
icebp
push
and
cmp
daa
mov
and
ljmp
sub
fstpt
bswap
sbb
aas
mov
mov
pusha
lds
pop
stc
push
pop
lods
adc
std
xor
popa
push
rcl
xor
and
inc
lods
ret
out
cmpl
mov
jmp
les
cmp
jle
incb
insl
stc
inc
and
cmp
scas
adc
repnz
xor
fcoml
testb
addr16
mov
add
out
fs
mov
lods
scas
fwait
jo
stos
sbb
pop
leave
icebp
lret
imul
inc
jge
push
mov
jg
cmpb
movsb
cmp
inc
fsubrs
aad
jae
pop
movsb
stos
inc
call
fmul
dec
adc
outsl
jl
jmp
push
leave
push
push
repz
imul
fwait
fs
orl
jmp
cmp
xchg
or
scas
or
inc
pop
cltd
jge
xchg
enter
jbe
nop
push
fs
int3
fisubrl
xchg
outsl
pop
lods
stos
fdivl
push
jmp
xchg
dec
insl
out
imul
pop
adc
addr16
pop
pusha
bound
mov
iret
push
fcompl
arpl
mov
jnp
nop
js
gs
outsb
data16
jecxz
fwait
call
icebp
sbb
mov
jg
out
jecxz
jmp
int
sbb
inc
movsl
shll
cmpsb
sarb
sarb
lret
jl
adc
shll
or
int3
stos
jb
mov
sarb
shl
lret
in
cs
pop
push
or
scas
sbb
or
cmc
mov
cmp
ss
add
imul
cwtl
stc
dec
arpl
subl
dec
push
push
adc
mov
pop
and
push
mov
les
jmp
cmp
fcomps
or
pop
shl
pop
dec
test
testl
aad
dec
push
jbe
adc
xchg
orb
repnz
pop
outsb
inc
lret
jns
test
inc
lcall
aas
das
xor
push
adc
xchg
outsb
mov
sub
mov
iret
ss
repnz
dec
mov
enter
iret
cs
out
mov
addr16
out
data16
outsl
dec
test
lock
xchg
mov
mov
xor
xor
jg
mov
je
stos
outsb
dec
inc
adc
adc
lock
ret
push
jne
ja
imul
cmp
dec
push
xor
push
int
push
loope
sub
add
xor
dec
icebp
pop
push
jl
pop
inc
push
push
dec
mov
out
add
shrb
mov
js
lea
aaa
in
adc
mov
jp
cmp
rcll
enter
std
pusha
mov
rclb
pop
lret
outsl
mov
mov
loop
scas
dec
int
sub
dec
inc
inc
imul
movsl
sub
ret
mov
shlb
ljmp
add
jecxz
jge
lock
stos
rolb
insl
jb
das
orl
pop
test
ud0
inc
fs
js
inc
fs
scas
sbb
adc
mov
ret
xchg
dec
sbb
in
xchg
sbb
mov
inc
sbb
push
fwait
js
xchg
pop
dec
cmc
xchg
inc
aam
xchg
jl
dec
jp
lods
je
imul
dec
or
dec
jle
imul
jl
dec
and
inc
push
mov
mulb
out
inc
sbb
out
aaa
lods
int3
and
loop
mov
cmp
mov
mov
pusha
mov
sbb
or
jl
out
sub
int
mov
in
xchg
jo
mov
das
pop
call
inc
data16
jp
bound
xchg
imul
sub
cltd
bound
push
call
cmp
sub
jg
dec
pop
roll
pop
push
dec
inc
and
xchg
jmp
imul
push
jns
cli
aaa
je
and
data16
mov
jg
adc
xor
out
int3
int
xchg
movsl
xor
in
mov
inc
lds
into
sti
inc
or
scas
push
data16
mov
movsl
or
mov
es
icebp
int
dec
shr
sub
outsb
rep
push
imul
jmp
stos
aaa
push
jg
repnz
scas
inc
push
xor
jae
daa
push
mov
sub
popf
popa
dec
lods
es
out
mov
es
out
scas
rdmsr
add
outsl
addr16
stos
jle
or
sbb
inc
or
or
push
mov
lcall
clc
enter
or
jo
jbe
jmp
sbbl
imul
inc
repz
cmc
mov
mov
popa
dec
dec
roll
or
test
fdivrl
adcl
aas
lods
fnstsw
cwtl
pop
lcall
pop
lahf
sti
jge
pop
push
jae
lock
subl
fs
xchg
cld
dec
adc
scas
pop
popa
cltd
dec
ret
mov
shld
ljmp
icebp
pop
ljmp
andl
sub
inc
fs
shlb
jp
in
daa
sbb
ja
out
data16
js
ds
clc
or
sar
test
mov
jp
mov
cli
rcll
jae
adc
jp
je
pusha
cmc
mov
dec
popa
push
sti
dec
adc
cmpsb
xchg
jae
loop
mov
nop
and
stc
inc
scas
loope
sbb
insb
and
xchg
and
into
cs
insb
xor
fwait
aam
popa
lock
scas
ja
out
ret
add
das
out
dec
xchg
mov
js
das
int
mov
int
fdivs
int
mov
add
mov
and
jmp
jle
in
bound
mov
add
jb
into
mov
xchg
dec
ffree
out
mov
mov
das
inc
loop
jle
inc
pop
dec
out
pop
push
dec
nop
and
jecxz
les
adc
leave
out
daa
sti
repnz
sub
stc
jno
cmp
imul
xchg
push
dec
jle
dec
js
mov
push
in
call
adc
sbb
sub
loope
xor
sbb
lods
mov
mov
or
mov
push
sti
sbb
and
cmp
push
xchg
jp
push
lock
clc
pushf
outsb
or
mulb
iret
cmpsl
sub
push
push
pop
out
push
sbb
into
mov
mov
sti
mov
add
dec
movsb
lock
xchg
call
xor
add
push
adc
cld
pop
daa
push
push
jg
jbe
xor
and
out
adc
andb
sub
stos
push
inc
mov
mov
push
bound
xchg
bound
add
movsb
test
pushf
out
pusha
aaa
add
mov
pop
scas
into
jg
leave
jle
xor
jnp
dec
or
movsb
xor
inc
push
lcall
or
lcall
sub
jns
je
jno
jae
lock
fildll
pop
adc
xor
dec
je
into
repz
mov
idivl
das
mov
adc
pop
or
mov
ret
scas
fadds
inc
dec
inc
sbb
mov
cld
out
lret
popfw
jmp
outsb
push
pop
jmp
push
es
lcall
adc
imul
pop
jmp
sub
inc
imul
sbb
popa
sbb
push
stc
stos
imul
sub
gs
mov
pop
lret
lea
jl
cwtl
outsl
jno
ljmp
clc
add
repz
int3
mull
jae
ret
loopne
push
je
rcrb
imul
jno
pusha
adc
stc
adc
jne
fwait
int
or
mov
cld
aas
lods
into
xor
sub
scas
cwtl
incb
ret
and
cmc
ss
in
xchg
ffreep
push
stos
xlat
adc
test
xchg
and
movsb
in
cmpsb
in
fwait
push
lds
mov
jb
daa
cld
xchg
mov
out
lods
and
repz
adc
mov
lahf
cs
jle
sti
jl
inc
jb
scas
mov
cmc
mov
stos
push
ljmp
mov
cmp
cmp
fs
xchg
das
ret
and
out
roll
mov
jl
pusha
mov
mov
mull
test
fs
sar
dec
jl
cwtl
and
jge
rorl
sbb
sbb
dec
dec
pusha
je
jp
xor
pushl
jns
push
jp
push
dec
adc
pop
popa
mov
cmp
or
mov
inc
jl,pt
stos
lods
sub
dec
pop
pop
pusha
fs
adc
adc
es
and
or
pop
mov
out
mov
sarl
shrb
es
addr16
sbb
mov
hlt
pop
sbb
add
int3
adc
scas
jp
in
icebp
movsb
sbb
clc
fsubl
test
push
in
cld
pop
xor
pop
adc
pop
jg
aas
xor
icebp
dec
pop
inc
add
push
test
sti
das
cwtl
xlat
cs
xchg
in
pop
clc
cmpsb
out
in
xlat
or
xchg
int3
pop
cmc
cmovg
xchg
pop
pusha
dec
sti
ret
adc
adc
inc
mov
fbstp
mov
xor
adc
lret
call
rorl
lock
xchg
leave
or
es
mov
ds
dec
out
sbb
cmpsb
das
clc
adc
aad
add
repnz
push
stos
imul
movsl
repz
push
les
jnp
cmp
icebp
fwait
arpl
mov
dec
mov
pushf
jno
and
into
out
sub
pop
or
inc
into
push
int
aaa
dec
es
fdiv
cmp
lret
es
lret
push
mov
cmp
add
xor
movsb
insb
mov
aaa
sub
pop
in
inc
jp
gs
mov
dec
lea
jle
cmp
xor
xor
push
lock
rcl
xchg
lods
fwait
cmp
mov
addr16
idivb
jnp
inc
gs
popf
jo
stc
decb
nop
mov
xor
or
xchg
enter
inc
mov
pop
jns
movsb
ret
mov
daa
cs
pop
andb
dec
and
xchg
out
mov
inc
sub
dec
push
rorb
inc
push
inc
push
pop
ss
mov
jmp
dec
bound
in
daa
sub
testb
or
pop
xchg
cmp
hlt
xorps
xlat
out
mov
adc
lods
es
xor
cmp
inc
js
dec
add
add
int
mov
stos
sub
xlat
aaa
rclb
clc
sbbl
xlat
mov
lea
sub
jmp
xchg
add
mov
mov
stos
into
sbb
sub
inc
aad
push
push
imul
jne
mov
and
movsl
out
jge
inc
sub
sub
iret
push
shrl
jo
xor
pop
jmp
mov
cld
adc
subl
data16
add
xor
movsb
push
mov
jle
sti
daa
sub
mov
xchg
add
int3
jp
out
mov
adc
mov
mov
jl
push
push
push
dec
fisubrs
inc
jecxz
mov
stc
pop
push
add
xchg
in
sbb
sbb
fwait
dec
cli
aad
fildll
sbb
dec
xor
dec
pop
iret
stos
repnz
pop
out
mov
inc
mov
inc
mov
and
int
lret
inc
pop
incb
pop
pop
push
cmp
push
or
out
sub
inc
fwait
mov
stos
or
sub
push
dec
push
mov
sub
roll
xchg
fdiv
cmp
dec
mov
push
cmpsb
inc
shrl
fnsave
push
push
in
push
adc
xor
adc
pop
sub
lock
bound
mov
pop
or
inc
pop
xchg
inc
sbb
sub
mov
in
push
std
aas
ss
xchg
loopne
negl
in
mov
push
cmc
sbb
adc
dec
lods
xchg
repz
clc
aad
mov
ja
dec
cmpsl
xchg
clc
jnp
pusha
mov
jle
mov
ret
shrl
push
insl
adc
pop
out
int
add
test
inc
fistps
outsb
lret
rolb
scas
stos
les
movsb
rcll
ret
jb
push
inc
shlb
and
out
and
movl
mov
xchg
pop
popf
and
cld
and
lock
iret
lahf
jl
pop
jle
mov
lds
les
cld
xchg
scas
fisubrl
popw
ret
out
int3
jno
insl
xchg
or
decl
sbb
adcl
pop
jnp
imul
pop
xchg
pop
dec
pop
fimull
cmp
lret
mov
inc
adc
out
or
in
adc
pop
fs
push
lcall
push
xor
xchg
pusha
mov
sub
inc
scas
popf
ret
adc
xorb
add
xor
push
push
setnp
in
inc
shl
outsb
test
mov
outsb
repz
sbb
mov
dec
xlat
sbb
inc
pop
hlt
adc
adc
xorb
cwtl
sub
jbe
xchg
lea
inc
inc
mov
jb
stos
pusha
xchg
jno
fcomip
jg
imul
data16
out
pop
mov
popa
mov
aaa
xchg
push
dec
and
xchg
add
popa
sahf
inc
jl
ljmp
or
in
xor
hlt
push
out
mov
repz
inc
push
pop
ret
int
idivb
rcr
imul
dec
bound
jbe
in
push
enter
data16
dec
int
fwait
addr16
out
call
xlat
rcr
out
js
imul
push
pop
popf
lods
call
sbb
or
dec
lds
ret
popf
imul
sbb
jle
movsb
fistpl
and
xor
dec
sbb
pop
sub
call
inc
scas
notb
sub
pop
add
sbb
jl
push
sbb
addr16
adc
ds
pop
fadd
push
test
sub
fs
push
mov
or
push
in
fwait
js
push
push
imul
or
inc
test
rcrb
pop
sti
mov
fs
sbb
xor
test
fisubs
daa
lahf
call
sbb
add
js
in
out
push
sbb
xchg
pop
movb
cltd
push
frstor
pop
aas
add
mov
push
outsb
mov
fwait
imul
in
jge
mov
mov
jmp
test
sub
out
lods
andb
pop
sbb
adc
adc
loop
fisubrs
xor
imul
setbe
sub
fstl
arpl
ret
ret
pop
lock
xor
jl
pop
ret
mov
push
adc
pop
or
adc
mov
scas
pop
ja
dec
hlt
bound
push
mov
cli
mov
inc
sbb
lret
jecxz
add
xchg
daa
out
xchg
fs
negl
sahf
rol
out
xor
movsb
stos
data16
dec
mov
stos
vrsqrtss
dec
out
fs
nop
scas
mov
adc
lahf
mov
sbb
sbb
lcall
scas
mov
pop
inc
pop
daa
out
in
sbb
sbb
int3
addl
push
inc
test
xchg
cmp
iret
jae
xor
ds
int3
jp
jb
adc
aam
test
ret
out
fwait
sahf
scas
ljmp
add
push
loope
cmp
lret
shrl
push
mov
sarb
cmp
add
cmp
out
divb
sbb
jo
lods
icebp
jle
inc
jl
xchg
jecxz
sub
ds
out
lret
xor
push
clc
js
lods
out
sti
sti
mov
scas
test
addr16
xor
dec
xlat
stos
jl
add
dec
mov
clc
push
cli
inc
pop
js
xchg
test
imul
sti
jmp
addr16
xor
mov
int3
rcrl
adc
enter
jp
xor
pop
outsb
xor
push
cmp
sarl
xor
and
mov
enter
ds
out
adc
pop
mov
shll
pop
repz
pop
jbe
cwtl
repnz
xor
xchg
lar
jns
fsubl
fwait
loopne
push
lods
push
mov
repnz
nop
ret
jecxz
xchg
mov
push
je
jno
cmp
sub
stos
and
and
outsb
inc
imul
ss
incl
es
fwait
sti
outsl
fcompl
sbbb
mov
mov
dec
mov
mov
jb
xchg
pop
test
arpl
enterw
movsb
scas
outsb
inc
pop
arpl
lods
or
insb
insl
push
ret
sub
repz
int3
lods
leave
in
jb
push
outsb
pop
xchg
ja
inc
fldl
loopne
sub
push
repz
data16
sbb
outsb
lods
mov
jp
add
sub
dec
or
push
outsl
iret
inc
cltd
pop
xchg
sub
push
pop
inc
cs
sub
dec
push
and
in
push
dec
or
std
leave
fwait
syscall
and
dec
rcll
sbbb
repnz
push
leave
dec
repz
jmp
fdiv
adc
sbb
popf
xchg
push
stc
shr
pop
xchg
add
pop
sbb
jg
push
stc
call
cmp
mov
pop
aas
adc
mov
ss
test
push
pop
mov
fs
cmp
aaa
sbb
jp
iret
outsb
mov
inc
xchg
cwtl
pop
iret
xor
movsb
test
or
les
mov
and
sbb
dec
mov
sbb
pop
imul
addr16
cmp
jne
pop
lock
orb
fs
cmc
mov
and
stc
dec
push
in
fwait
repz
or
lahf
mov
cmp
dec
xor
jmp
loope
jnp
lret
mulb
seto
lret
in
fwait
clc
cmp
lods
inc
push
das
xchg
push
sub
daa
sbb
aam
add
in
test
aam
cli
cmp
xchg
sub
dec
outsb
jae
jnp
push
jne
push
pop
adc
mov
and
sub
inc
lods
xor
adcb
sub
add
jo
lods
scas
sub
adc
pop
xchg
fwait
scas
jmp
sbb
inc
cltd
aad
hlt
cs
outsb
test
mov
add
addr16
sbb
push
scas
push
mov
fsubr
pop
out
mov
mov
jns
ret
es
lds
mov
lds
pop
out
rcll
add
cmp
stos
add
lods
sbb
mov
icebp
mov
pushf
addr16
lock
sbb
lds
in
aas
daa
cmp
les
inc
mov
aas
dec
dec
add
int
xor
push
ret
xchg
es
pop
mov
mov
das
in
pop
das
cmpsl
push
push
mov
out
mov
lret
sbb
mov
inc
jnp
pusha
repz
popa
shll
jg
lea
fistpl
loope
sarb
in
pop
xchg
ret
pop
jl
sub
out
jae
jg
inc
out
out
jns
out
adc
js
mov
dec
in
rcrl
jge
cmp
mov
push
enter
inc
jb
rol
movsl
sub
sbb
sub
or
or
pushw
adc
cmp
xchg
out
push
cmp
test
jb
pop
mov
fnstsw
ss
pop
jge
or
push
sub
fs
orl
mov
pop
and
push
sahf
add
dec
cmp
enter
pop
lret
mov
inc
cmpsl
sbb
js
dec
fsts
xor
mov
dec
jno
or
inc
xchg
pusha
aam
mov
ljmp
cmc
loopne
test
xchg
push
stos
mov
aaa
fnstenv
aaa
js
nop
or
mov
or
push
test
and
faddl
pop
cmpsl
pop
cmc
and
out
leave
add
jp
andl
xchg
add
mov
push
jmp
movsl
cs
shr
push
fwait
popf
loopne
adc
mov
mov
and
ret
jl
pop
lret
mov
mov
and
imul
movsb
jg
int3
sti
ret
stos
btc
mov
bnd
or
inc
xor
sub
in
scas
mov
je
adc
xlat
or
inc
xchg
pop
nop
xor
xlat
inc
ljmp
jl
cmpsb
lret
inc
jmp
cs
add
dec
or
pusha
dec
mov
mov
sbbl
data16
rcrl
push
adc
mov
xchg
or
pop
adcl
in
dec
mov
cmc
sub
inc
test
je
leave
cmp
mov
xor
fcompl
push
cmc
mov
mov
mov
movsb
fmull
out
mov
sbb
js
inc
pop
and
int
jg
mov
inc
pusha
dec
push
movsl
add
add
fstps
and
lods
jae
fildl
jg
xchg
add
ljmp
mov
cmpsl
pop
lods
cli
out
imul
jne
ret
in
es
pop
push
pusha
cmp
jge
leave
xlat
mov
mov
cmp
je
push
fimuls
lahf
shlb
jb
repz
stc
inc
adc
dec
mov
xchg
in
sbb
ss
movsb
arpl
xor
imul
loope
xor
cmpsl
loopne
cmpsl
inc
aam
in
add
enter
sbb
lods
push
test
movsb
jne
sbb
mov
or
xor
push
mov
rorb
call
call
pop
stos
add
test
nop
xchg
cld
cmp
jmp
fwait
push
movsl
stos
push
xor
adc
loop
adc
cmp
push
outsb
aaa
cwtl
mov
dec
mov
mov
sub
push
sbb
clc
das
in
xchg
jne
push
jo
push
push
ds
sbb
or
fcmovbe
call
inc
movsb
and
sti
in
jp
rcrl
mov
mov
adcb
and
and
push
fwait
inc
repnz
gs
divb
and
in
pop
jno
ret
stos
jns
mov
ret
fwait
clc
xchg
popf
push
ja
cmp
fwait
add
ret
cs
dec
or
or
inc
out
jmp
mov
mov
pop
test
inc
lret
enter
or
pop
shlb
ljmp
inc
iret
lods
pushf
xchg
push
jmp
in
sti
cld
sub
fdivl
test
cld
sub
pop
ror
xlat
out
mov
dec
outsb
pushf
xor
push
lret
aad
cld
push
fs
jns
aas
add
sub
aas
iret
rclb
push
aad
push
cwtl
js
inc
jmp
std
sar
shlb
pop
std
push
fmul
sbb
xchg
clc
push
popa
pop
call
ss
xchg
sti
testb
mov
idiv
repnz
xor
ja
xor
mov
aam
sbb
ss
fnsave
int
and
fwait
stos
inc
fcoms
jbe
fs
cltd
inc
cmp
pusha
push
lds
lret
push
mov
repz
setnp
fimull
and
arpl
cs
les
push
mov
push
sbb
cmpsb
adc
pop
jp
shr
mov
test
jb
xor
cmp
iret
movsl
cmp
or
dec
aas
cmp
out
sbb
xchg
mov
fisubrs
adc
cmp
cli
jp
cmp
inc
in
shlb
je
and
inc
mov
mov
addr16
shll
imul
movsb
ss
mov
rcrb
in
stos
int3
fimull
lods
pusha
sbb
inc
push
inc
mov
dec
jp
or
sbb
push
cld
test
mov
jne
ror
imul
pop
call
and
aad
add
mov
divl
inc
xlat
xchg
loopne
pop
rclb
xor
cld
push
or
pushf
pop
inc
aam
jg
or
mov
popa
mov
jecxz
xor
into
mov
insl
xchg
out
addl
mov
cmc
imul
push
mov
push
dec
fmuls
sub
jo
jle
sbb
aas
dec
cmp
hlt
jno
aam
add
pop
mov
nop
lret
dec
push
inc
cmp
imul
clc
sbb
addr16
dec
ja
pop
sbb
cmp
sub
sub
out
inc
mov
ds
cmpsb
xor
xchg
inc
jle
mov
in
pusha
mov
jg
movsb
aaa
sub
cmp
les
mov
push
lret
mov
and
mov
jo
inc
xchg
cmp
mov
mov
repnz
sbb
sbb
fdivrs
shlb
push
dec
dec
sbb
fsubr
adc
add
popf
addb
call
jle
dec
push
dec
jge
push
cmpsl
test
stc
sub
mov
les
jg
push
jb
jb
pop
rcll
mov
cmp
sbb
jo
push
and
mov
repz
cmc
mov
push
movd
sbb
push
dec
es
stos
jg
mov
clc
into
jb
clc
pop
dec
dec
cwtl
stc
dec
sarl
nop
loopne
ds
clc
into
call
push
push
outsb
mov
pop
popf
imul
je
add
pop
roll
popf
jne
lret
xor
xchg
xor
sub
pop
pop
imul
aaa
in
js
fs
pop
sbb
add
sub
repnz
aas
adc
mov
inc
jmp
inc
in
sub
jl
inc
mov
cld
popf
push
jne
in
inc
mov
jo
dec
decb
add
push
mov
ret
mov
pop
cmp
addr16
sbb
jae
lea
push
je
repnz
fwait
stc
out
adc
push
test
pusha
ret
xchg
sti
xchg
and
adc
aam
js
inc
jne
sbb
sahf
dec
ja
in
cmp
sub
push
pop
sub
jl
lods
js
in
les
cwtl
dec
fs
cld
jb
call
dec
jl
int
mov
bound
and
les
fsubs
xchg
add
out
jp
incl
xlat
dec
dec
testl
cmp
into
pop
leave
jno
inc
or
jge
and
repnz
and
xor
pop
jmp
dec
out
push
shlb
push
lret
inc
push
jge
pushf
or
add
jmp
xlat
xchg
or
ss
push
mov
out
stc
pusha
xchg
add
jl
jle
jg
data16
shlb
push
ret
int
xor
fwait
cwtl
imul
jmp
movl
jo
dec
cmp
push
mov
fs
inc
or
dec
pushl
sbb
xchg
sbb
push
shl
pop
mov
sbb
lret
and
pop
or
call
imul
aam
decb
mov
in
inc
push
mov
sbb
mov
jmp
adc
out
cld
pop
inc
xchg
push
add
mov
test
cmp
and
mov
jge
inc
and
mov
xchg
out
jns
stos
fwait
decb
inc
jbe
into
push
jg
in
push
jo
lock
add
mov
sub
jl
push
aad
jb
pop
data16
push
testl
mov
mov
inc
mov
jb
fstpt
add
ret
nop
dec
shlb
inc
in
jecxz
pop
mov
mov
imul
and
jmp
jo
popa
xchg
imul
addr16
rorl
mov
cli
je
mov
push
outsb
xchg
rol
cltd
inc
or
mov
lcall
dec
jbe
adc
out
scas
or
jg
push
fmul
add
pop
adc
pop
data16
dec
stos
movsl
sub
pop
push
ljmp
cmc
cs
stos
out
int
in
jecxz
clc
scas
or
adc
jne
mov
push
xchg
push
dec
orb
mov
mov
xchg
pop
outsl
xor
pop
fwait
jg
and
add
jbe
inc
in
js
and
sbb
push
ds
dec
ja
push
xchg
jecxz
pop
dec
popf
fwait
pop
add
push
xor
out
mov
mov
in
movsl
sbb
shll
dec
add
or
ret
repz
int3
push
imul
test
out
clc
push
ret
push
dec
sbb
cmp
out
out
daa
ret
idiv
repz
mov
loope
push
cmpsb
inc
and
and
in
adcb
jg
sbb
mov
sub
jle
dec
inc
int
outsb
and
out
int3
dec
aaa
test
push
jg
fwait
dec
or
cs
inc
or
scas
ret
push
scas
fidivl
add
xchg
repnz
arpl
rolb
xor
aas
jae
xchg
jo
lret
fwait
mov
gs
and
js
pushf
test
inc
shll
jae
adc
scas
jle
aad
inc
add
dec
inc
cmp
mov
jp
pop
and
push
mov
push
and
dec
or
loop
sahf
adc
popf
sub
dec
or
lock
push
or
xchg
sbb
sbb
or
push
pushf
shrl
leave
mov
loope
int
mov
rcrl
lock
nop
shrb
cmc
cmp
jb
mov
mov
in
stc
xor
in
push
jge
xor
stos
sarl
lret
xchg
repz
push
mov
jle
cmpsl
push
stc
push
neg
imul
inc
into
add
pop
dec
push
test
arpl
sbb
jp
loopne
inc
fldt
mov
test
shlb
into
cld
testl
push
enter
lret
nop
nop
mov
cli
inc
and
bound
cs
call
jns
arpl
mov
lds
push
icebp
mov
jp
ljmp
inc
jae
jbe
int
pop
test
cmp
ror
or
test
xchg
fstl
xor
adc
inc
dec
rolb
dec
xchg
outsb
xor
mov
fwait
jg
fs
test
xchg
sar
rorl
nop
jmp
sub
jge
sub
inc
std
xor
jnp
push
loop
popf
mov
mov
movsb
inc
and
cmp
pop
jp
rcrl
out
les
in
push
jp
ljmp
sbb
mov
aas
jnp,pt
sahf
test
xchg
dec
jo
sbb
push
mulb
scas
bnd
cmp
popa
add
pop
adc
es
cmc
push
mov
or
push
sbb
inc
add
or
aaa
pop
push
loope
in
enter
pop
shl
rcrb
cli
push
jne
jbe
cvtdq2ps
or
pop
int
jbe
test
add
sub
jnp
or
test
pop
bound
pop
inc
js
stos
hlt
pop
sub
pop
pop
daa
cmp
and
imul
sub
pop
movsb
jne
sub
and
cld
cmp
adc
push
push
and
ss
or
mov
xor
add
mov
jecxz
inc
cltd
lea
out
dec
ret
mov
aas
cmp
mov
dec
xchg
js
jmp
hlt
jecxz
mov
mov
adc
pop
outsb
call
push
fdivs
cmp
or
rdpmc
mov
es
in
sbbb
das
movb
adc
xchg
loopne
lock
in
sbb
lock
add
int3
aam
popf
jge
jg
fsubrl
int
popf
pop
scas
adc
xor
aaa
cli
aaa
js
or
mov
out
stos
int
pusha
dec
sbb
push
dec
in
inc
push
adcb
push
cwtl
pushf
push
lahf
lcall
nop
push
dec
jmp
in
push
cs
lahf
ja
push
lds
pop
sbb
xor
int
mov
push
mov
inc
mov
fwait
push
jle
push
jmp
lds
sub
jle
or
push
fs
push
sbb
xchg
push
jbe
mov
mov
mov
outsl
jp
jo
test
mov
test
stos
scas
jg
inc
jecxz
cmp
xor
mov
aaa
push
imul
jmp
ret
into
lahf
sub
lret
sahf
adc
ret
pusha
lods
sbb
jbe
jo
enter
dec
test
test
and
fnstenv
add
or
push
jg
sub
mov
cmc
adc
enter
jg
sub
cwtl
dec
and
call
xchg
adc
mov
int
sbb
sub
pop
out
pop
gs
cli
stos
iret
adc
ret
cmc
xor
mov
test
jmp
push
sbb
or
data16
sahf
or
addr16
nop
mov
sbb
push
lret
ja
pop
mov
inc
leave
hlt
inc
pop
adc
adc
ljmp
stos
es
into
je
icebp
jmp
out
xchg
popa
insb
testl
jns
out
mov
sbb
stos
inc
frstor
pop
decb
adc
mov
mov
fwait
imul
push
push
in
lret
sub
inc
call
jmp
xor
push
ss
dec
fimuls
and
jge
xchg
dec
pop
dec
imul
sub
cs
ret
js
leave
ja
imul
addr16
mov
sbb
outsl
jo
and
and
aam
sub
sub
sbb
xchg
movd
pop
leave
lahf
fxch
ret
out
rcrb
jbe,pn
repnz
sbb
dec
sub
xor
xchg
in
ljmp
add
dec
pop
jbe,pn
aam
xor
out
xchg
dec
lret
je
xor
dec
loope
pop
dec
xchg
push
les
test
loop
aam
rcll
ret
iret
inc
lea
cmc
aam
mov
enter
sub
dec
sub
xchg
test
dec
test
xlat
push
pop
push
cld
mov
in
pop
dec
push
cs
xorl
push
cli
mulb
sahf
out
outsl
pop
ljmp
fld
cmp
jmp
cmc
dec
sarl
scas
push
pop
testl
xor
notl
loope
xchg
inc
cli
xchg
rorb
pop
mov
and
pop
push
push
sub
or
dec
pop
mov
outsb
add
loope
mov
lcall
aaa
mov
jmp
inc
dec
push
pop
sbb
sbb
lahf
shll
scas
adc
jo
and
lock
out
dec
jp
push
pop
dec
sub
dec
push
ja
ret
pop
subb
sbb
call
imul
js
push
cmpsb
cltd
out
fs
sub
jl
cld
stos
call
ret
fwait
jbe
js
adc
xchg
imul
scas
test
cmpsb
inc
sub
pop
adc
dec
inc
adc
dec
and
mov
sbb
sbb
sub
inc
popf
xchg
mov
jae
call
xchg
adc
fwait
andb
imul
adc
adc
daa
imul
mov
repnz
pop
mov
jbe
scas
imul
ljmp
pushf
add
inc
push
sub
scas
gs
addr16
decb
add
test
sub
popf
ljmp
idiv
or
push
add
divl
mov
add
scas
dec
mov
jle
jne
xchg
and
xchg
notl
sbb
mov
push
loop
dec
cmpsb
bound
sarb
pop
push
adc
mov
lcall
ljmp
push
negb
outsb
mov
fsts
imul
jecxz
mov
out
pop
clc
jae
repz
xor
push
push
xor
sbb
mov
int3
lcall
jbe
add
xchg
mov
jae
pop
inc
and
inc
pop
test
xchg
sub
jno
or
pop
fwait
andb
ret
lret
popa
stos
in
dec
pusha
or
mov
das
cld
dec
icebp
jmp
fs
xor
sub
pop
xor
js
jnp
push
dec
popa
sbb
sbb
pop
adc
dec
xchg
outsl
das
or
out
mov
mov
jbe
outsb
pop
mov
stc
leave
jns
cld
jg
xchg
je
testl
imul
out
or
sarb
hlt
inc
jecxz
orb
sti
or
mov
push
jmp
pop
push
addr16
fs
imul
dec
dec
inc
pop
push
idivl
sub
nop
mov
repnz
jbe
pop
lret
outsl
addr16
dec
inc
jo
push
fisubrs
or
sbb
sbb
dec
int
cmpsb
dec
dec
mov
push
ret
mov
cmp
jle
push
cmpsl
repz
xchg
add
xchg
xor
sub
aad
cmp
mov
divl
lods
adc
xor
dec
push
loopne,pt
mov
push
sahf
dec
adcb
cmp
adc
rolb
adc
mov
inc
outsl
out
xlat
push
ljmp
cmp
sub
in
leave
push
dec
stos
adc
jg
xor
mov
lock
ret
and
lds
es
imul
inc
inc
push
cld
fadd
and
notl
mov
pop
repz
nop
sahf
es
xlat
into
mov
cmp
aam
jp
cmp
in
mov
pop
pop
or
lret
sub
rcl
dec
sbb
inc
fistl
pushl
hlt
das
loopne
out
stos
cmp
jmp
xchg
aad
sbb
push
fwait
dec
dec
cmp
cld
stos
ficoms
movsl
or
dec
aad
leave
push
js
js
or
aad
mov
sbb
lock
es
adc
inc
and
jle
lods
pusha
xchg
cs
sub
xor
lcall
xchg
push
jmp
sbb
cmpl
jno
or
les
movb
cs
testl
xchg
pop
imul
cmp
in
xor
mov
sbb
je
pop
adc
shr
fwait
add
sub
pop
jecxz
and
loope
test
cmc
out
dec
mov
ja
cltd
hlt
adc
mov
outsb
fnsave
sbb
fbstp
cwtl
mov
mov
push
jp
fwait
xchg
add
or
sti
or
enter
cwtl
js
xchg
popf
xor
and
push
or
or
cwtl
sub
push
js
jg,pn
xchg
dec
xor
sbb
imul
iret
daa
dec
jo
int3
inc
sub
data16
sti
push
dec
mov
or
and
cs
jg
lods
pop
sbb
push
dec
cmp
push
adc
sub
into
pusha
outsb
or
js
or
imul
js
add
jg
sub
adc
ja
add
push
shrl
pop
mov
or
cmp
cmp
sub
cwtl
ja
ja
or
shrl
jl
inc
cmp
cmp
mov
sbb
incb
cmp
cmp
and
dec
jno
sub
fildll
les
adc
sub
or
adc
mov
adc
adc
mov
jl
lds
inc
jg
js
jg
xor
sub
insl
sub
push
cwtl
dec
inc
popf
sub
xor
js
aad
inc
dec
jnp
pusha
das
out
decb
dec
jle
sub
mov
outsl
ds
ds
hlt
in
sbb
aad
aam
dec
jns
lret
add
adc
jmp
inc
fnstsw
hlt
dec
pop
in
inc
push
jl
cmp
fs
or
mov
lret
or
pop
push
or
jne
cmp
bound
cs
dec
adc
or
fists
leave
shll
out
mov
dec
pusha
outsb
dec
dec
sub
lods
sbb
lret
in
ljmp
pushf
pop
cmp
sub
lahf
push
std
leave
mov
or
dec
push
cmp
cld
in
je
and
imul
sub
cli
es
adc
scas
mov
jbe
incl
xor
sub
cmp
out
int3
movsl
jmp
mov
je
scas
pushf
xor
jg
loope
add
push
cld
jne
int3
add
in
jmp
jg
jp
add
dec
fs
mov
sub
sub
jp
decl
fsubrl
jo
cmp
insb
cmp
inc
xchg
cmp
mov
and
sub
pop
jp
jl
fdivr
mov
ret
insl
dec
insb
and
push
aas
inc
dec
sar
or
mull
out
jo
jl
xor
ds
aaa
adc
push
jb
adc
es
cmp
fnstenv
or
sub
push
sti
add
scas
add
inc
js
push
pusha
dec
cmp
dec
inc
js
jg
and
push
cmp
push
xchg
test
sbb
dec
mov
cli
mov
pop
or
adc
ret
mov
mov
jl
push
cli
xor
jmp
adc
mov
ljmp
inc
pop
mov
mov
pop
out
outsl
stc
xchg
jnp
dec
sub
shlb
lret
add
adc
xlat
cs
xor
mov
inc
mov
xor
or
dec
add
fs
push
cmp
cs
jo
inc
fs
xor
hlt
pop
into
jge
inc
aam
jg
loop
xor
inc
cmp
arpl
mov
inc
cmp
xor
insl
call
dec
fs
sbb
mov
cmp
xchg
pop
jbe
ds
sbb
cmp
hlt
jmp
mov
rolb
and
sahf
incl
xchg
pop
roll
fs
imul
mov
adc
cmp
movsl
clc
aas
adc
xorl
js
jmp
das
cld
push
jb
ret
sub
push
mov
xor
icebp
mov
cmp
fs
push
adc
pop
sub
mov
insb
dec
sub
imul
cld
aad
inc
jmp
js
jo
out
in
sbb
dec
enter
push
js
xor
stc
dec
jecxz
fs
js
insb
inc
fmull
gs
loope
and
faddl
nop
xchg
orb
add
ljmp
js
dec
gs
inc
jl
cld
cltd
push
data16
or
or
push
adc
mov
xor
inc
sub
daa
jmp
clc
lock
fsubl
push
data16
sbb
or
out
nop
xchg
sub
repz
in
in
ljmp
pusha
dec
es
loope
insl
stc
repz
loope
es
data16
cmp
cbtw
cmp
daa
and
decl
sbb
fs
mov
ds
pop
leave
mov
imul
and
in
push
js
jo
inc
pop
pop
cmp
dec
jnp
sub
dec
mov
ds
test
dec
cmp
repz
sub
and
rolb
inc
sub
pop
js,pn
dec
popa
dec
push
fs
sub
cmp
jp
movsb
loope
xchg
sub
cltd
mov
cwtl
outsl
jl
dec
jg
cmc
jg
dec
inc
pop
mov
sub
jg
jge
mov
adc
sahf
jo
xor
pop
add
movsl
scas
push
add
pop
je
ds
jg
adc
cmp
enter
into
adc
pop
inc
fs
jge
mull
das
dec
xchg
movl
popa
mov
into
xor
dec
or
inc
push
test
pop
sbb
frstor
cld
rcl
dec
iret
test
movsb
mov
hlt
cmp
dec
and
lea
cld
cmp
pushf
jb
dec
mov
jp
lcall
orl
stos
mov
loop
fs
stos
push
insb
fs
cs
addr16
xlat
adc
push
cld
rorl
or
int3
push
cs
jno
lret
inc
jns
sar
out
pavgw
jecxz
adc
hlt
fsts
mov
dec
scas
sti
mov
cld
inc
sbb
dec
hlt
mov
cmp
sbb
cmpsb
inc
xor
out
decb
cmpsb
adc
ja
pusha
arpl
and
negb
push
push
int3
test
dec
jg
or
addr16
fxch
push
sub
pop
jle
sub
data16
inc
pop
push
les
paddsb
dec
out
and
bound
pop
pop
xor
jo
sub
xor
call
addl
dec
or
leave
jle
sbb
ja
xchg
sub
xor
mov
and
test
push
xchg
mov
jmp
fldenv
stos
pop
imul
jg
push
pop
jbe
mov
dec
dec
sbb
inc
mov
popa
push
data16
push
sub
js
jl
insl
push
lods
add
into
addr16
jl
jl
add
sbb
xchg
leave
cld
jl
out
mov
fs
mov
aam
mov
mov
jl
xor
and
ds
jg
mov
adc
jl
ljmp
cmp
test
sarb
adc
jnp
sbb
dec
lcall
pop
dec
rclb
cld
arpl
sub
or
push
popf
aam
bnd
into
push
outsl
ficoms
fs
and
inc
push
jo
mov
sbb
cmp
test
in
pop
aas
fnsave
les
push
fs
pop
es
cs
xchg
loop
cmpsb
cmp
lret
adcb
push
daa
cld
jp
jg,pn
popa
repnz
insb
pop
std
daa
adc
insl
jnp
jl
or
loope
sbb
sub
jl
or
inc
sub
sub
jl
push
jg
jl
and
sub
cs
pop
xchg
xchg
cwtl
dec
add
icebp
adc
adc
adc
mov
dec
pop
fcomps
cld
sub
fs
xlat
jb
cmp
jp
mov
je
ret
pop
pop
in
mov
push
fistl
mov
test
cmp
je
add
pop
push
and
sub
push
push
inc
fs
cmp
dec
sub
negl
jg
dec
jl,pn
jg
insl
and
out
nop
sbb
sub
movsb
cmp
jnp
test
dec
jl
loope
or
mov
cmp
adc
faddl
test
sysret
js,pn
jg
popa
ds
pusha
sub
lret
in
inc
fwait
jmp
add
or
dec
sbb
ja
xor
shl
mov
mov
pop
insb
and
cld
fisubl
add
call
bnd
push
in
imul
fs
add
xor
push
mov
pop
insl
dec
xchg
cld
jbe
inc
aas
dec
in
imul
fs
push
in
imul
fs
and
addr16
outsb
aas
or
cmp
xor
pop
jb
add
inc
les
push
in
outsl
sti
cmp
xor
jo
aas
scas
fs
sub
les
scas
fs
sub
and
scas
fs
pop
push
nop
je
out
sub
dec
adc
push
addr16
js
and
jne
imul
imul
jnp
xor
mov
jg
sti
outsb
jl
push
cmp
cmp
inc
sub
sub
pusha
cmp
shll
out
push
jl
repz
push
cld
jne
add
push
leave
cli
cld
adc
sub
dec
mov
jne
bound
jo
dec
dec
jnp
inc
cs
imul
fs
cs
js
call
jecxz
cmp
push
les
sub
xor
aad
sti
jb
adc
cmp
loopne
sub
dec
and
jo
das
js
cs
push
sub
js
cs
inc
sub
dec
dec
js
cs
pop
nop
daa
hlt
jl
aas
call
jbe
ja
jg
jne
push
cld
xor
cli
jnp
sub
dec
adc
lock
push
popa
ja
scas
sub
shlb
int3
out
into
sbb
sar
dec
inc
aaa
filds
lock
loop
loop
inc
mov
dec
xchg
decl
je
in
add
jno
pusha
mov
js
int
add
insl
inc
pusha
stos
push
push
or
dec
pop
punpckhbw
jl
loopne
pushf
aaa
in
adc
jo
loope
inc
inc
cmpb
sbb
adc
clc
push
inc
and
mov
push
in
data16
and
cmp
or
addr16
pusha
pop
sti
inc
imul
cmp
sub
dec
sub
adc
jge
pop
jg,pn
in
dec
insl
push
outsb
sub
repz
dec
jl
sbb
repnz
cmp
push
dec
repz
adc
ja
pop
mov
jnp
out
leave
xchg
repz
inc
jl
pop
fisttpll
dec
std
pushl
cmp
aad
sahf
icebp
add
lahf
movsb
scas
or
in
jno
sbb
leave
int
shll
in
xchg
leave
out
cmp
addr16
arpl
mov
cmc
fucomip
inc
add
inc
push
cmovle
test
imul
sub
shll
inc
or
ds
dec
and
lods
mov
clc
inc
aam
bound
movsb
lock
por
push
fs
jle
inc
dec
sub
dec
jb
push
dec
bound
push
subb
idivb
dec
loope
stc
shrl
popa
call
inc
ljmp
inc
push
ds
push
mov
cwtl
leave
out
outsb
test
pop
push
fisttps
mov
inc
js
ja
stos
push
gs
sub
test
cld
mov
and
or
outsb
sbb
lods
sbb
mov
adc
movsl
in
pop
jg
cli
sbb
fstps
pop
js
cs
push
inc
jbe
aaa
test
jmp
dec
popa
cld
les
dec
popa
sub
repz
dec
movsb
aad
sub
out
and
cmp
xor
in
jg
inc
movsl
and
pop
cli
arpl
adc
push
outsl
in
dec
dec
jo
popa
mov
jg
popf
pushf
pop
push
jl
ljmp
xor
dec
inc
cmp
iret
or
jle
cmp
sbb
je
jl
loope
je
dec
idivl
cmp
inc
in
pop
inc
and
movsb
and
mov
div
fstps
cld
or
jmp
addr16
inc
pop
mov
dec
xor
inc
fs
adc
mov
and
cld
insl
cmp
es
cld
sub
aam
out
xor
in
in
mov
fs
sub
dec
out
mov
sbb
sbb
jge
dec
ja
sbb
fucom
ds
jnp
popf
out
jg
in
outsl
clc
inc
popa
mov
push
out
js
dec
addr16
pop
adc
mov
fiadds
das
repz
jns
xchg
stc
mulb
jb
adc
push
dec
sbb
jmp
pop
std
pop
dec
cmp
mov
dec
enter
and
xchg
push
popf
scas
jnp
in
rcrb
popa
jns
xlat
or
int
dec
jmp
adc
ret
fbld
sub
lret
jnp
loop
repnz
dec
cmp
pop
mov
arpl
push
in
lret
mov
int3
jg
stc
dec
inc
ss
and
jge
fs
je
dec
jno
mov
leave
mov
fs
dec
stos
pop
scas
out
cmp
push
ret
cmp
push
loope
dec
icebp
mov
ss
sbb
imul
inc
adc
xchg
test
inc
into
adc
dec
into
cld
js
ss
push
cmovle
cs
dec
fidivrl
loopne
or
cmc
fnstcw
inc
in
inc
push
push
push
call
push
jl
scas
push
sbb
dec
jl
loope
or
cs
nop
inc
cmp
ret
dec
adc
sub
movsb
std
negl
add
fs
cmpsb
sub
push
clc
stos
inc
jne
insb
dec
es
sub
jle
push
jp
jl
pop
sub
pop
mov
pop
push
dec
jo
and
and
and
push
sub
and
sub
sbb
das
outsb
dec
pusha
iret
xor
adc
iret
and
sub
add
add
adc
mov
jg
adc
jo
sub
push
mov
pop
dec
int
cli
jbe
clc
push
pop
rolb
insb
in
jl
sti
addr16
loope
pop
xor
jl
jg
loope
xor
hlt
cmpsb
sbb
incb
sti
jb
push
and
sar
dec
jp
push
mov
push
idivb
add
hlt
addr16
jl
sti
lret
xchg
sbb
fucomip
push
add
dec
and
or
test
cli
and
or
pop
cli
cs
push
sbb
jne
dec
je
js
cld
sbb
js
mov
jae
adc
cmp
push
cmpl
add
mov
es
jl
fidivrs
inc
pop
sti
dec
pop
dec
add
in
jne
mov
dec
sub
mov
mov
scas
dec
or
sbb
add
jp
or
add
inc
insb
dec
jl
ds
jge
push
xor
into
dec
xchg
fs
adc
bound
sub
mov
loopne
push
cld
aad
push
and
or
in
add
sub
imul
adc
jg
in
inc
popa
xor
addb
in
push
dec
xchg
mov
dec
pop
cld
xor
sub
push
mov
pop
ds
and
cmpl
fldcw
cmpsb
and
dec
pop
ret
mov
mov
jg
push
push
cmp
push
mov
add
xchg
jmp
cmc
mov
adc
push
cmp
dec
mov
mov
xchg
mov
mov
push
mov
push
jp
dec
mov
pop
dec
mov
xor
jp
dec
cmp
jecxz
stos
lds
shrl
fisubrs
jno
xor
push
mov
mov
xchg
pcmpgtb
jle
js
cs
jge
sub
mov
scas
jo
outsl
mov
bound
push
jg
dec
ss
and
sub
jne
jp
jle
js
cs
movsl
sub
dec
pop
js
cs
inc
bound
and
push
inc
in
inc
push
es
add
inc
pop
jne
push
cld
dec
dec
dec
jg
mov
cs
jne
les
repz
arpl
sub
sub
jmp
incb
cld
xor
pushw
jmp
loopne
cld
out
jmp
push
dec
jne
sbb
inc
ja
push
imul
dec
cmp
imul
xor
jl
sti
int
xor
leave
stc
bnd
jp
insl
dec
push
lods
sar
fs
ja,pt
jmp
mov
mul
inc
test
lods
addr16
push
dec
in
jecxz
sub
out
test
xor
iret
or
push
insb
in
push
dec
jbe
jl
lods
in
push
jg
in
jne
int
push
jg
loop
std
sub
insl
inc
aam
jbe
cs
jg
add
adc
popa
xchg
xor
or
iret
mov
sbb
cld
add
pop
push
rorb
lock
cld
pop
push
push
std
jb
or
inc
add
jg
adc
sbb
mov
dec
adc
popa
jg
popf
addr16
jmp
sub
addr16
push
jp
arpl
mov
popa
data16
cmp
mov
popa
scas
test
popa
cwtd
pop
daa
popa
xchg
les
push
popa
scas
cs
xor
cld
rorl
xchg
xor
mov
data16
sub
jg
test
and
aaa
mov
xor
and
movsl
sbb
sbb
mov
dec
cli
cli
add
aad
and
fs
arpl
dec
ucomiss
popa
insl
sub
or
lods
sbb
loope
xor
stc
adc
and
inc
pusha
adc
push
cmp
pop
mov
jmp
jg
adc
imulb
rcll
ficoms
push
idivl
pop
sti
in
sbb
lods
mov
ja
xor
push
pushf
int3
sti
inc
icebp
addr16
xor
loope
aaa
and
pusha
jge
jno
sbb
push
xor
jg
pusha
into
popa
cli
dec
and
in
xchg
cmp
cld
cld
sbb
in
xchg
sub
jo
add
lea
jl
jl
dec
cld
xor
push
mov
mov
adc
jle
js
fs
cld
pop
fcmovne
insb
call
jg
pop
cmp
sbb
imul
jge
in
insb
sbb
out
dec
fs
pop
xor
push
sub
cld
xor
add
insb
stos
into
es
fstpl
ret
stc
test
sub
test
jo
dec
pop
insb
xor
rclb
jns
push
adc
jg
dec
pusha
sub
fs
fs
sub
sub
adc
xor
inc
mov
push
js
int3
dec
ret
jl
dec
inc
push
insl
mov
jl
test
imul
push
dec
outsl
inc
mov
push
inc
and
mov
mov
repnz
cmp
jl
add
pop
jle
add
add
add
xchg
aad
imul
inc
repz
mov
adc
aaa
inc
lret
insl
pop
sub
dec
dec
js
arpl
pop
mov
push
js
push
xor
xor
sub
sbb
jmp
dec
sbb
dec
dec
repnz
sbb
movsl
ja
or
js
sub
inc
aam
jo
push
dec
jge
sbb
jl
cs
xor
push
jg
in
jne
push
dec
fs
jle
inc
aam
pusha
inc
stos
leave
and
je
dec
sub
jo
jo
jmp
cld
gs
imull
les
es
and
or
outsb
or
jg
loop
dec
dec
dec
add
sbb
sub
dec
jl
jg,pn
dec
iret
pop
pop
outsb
dec
subl
mov
xor
scas
mov
cli
out
je
hlt
sub
loop
insb
mov
dec
notb
iret
adc
cld
in
push
lods
inc
orl
mov
insb
dec
call
dec
dec
fcmovnbe
test
les
and
add
cmp
adc
into
mov
pop
jo
hlt
xchg
push
dec
jno
pop
add
cs
out
cmp
jl
mov
jl
cmp
sti
or
int3
add
jne
dec
jl
and
adc
fs
add
or
in
adc
xchg
inc
inc
sbb
jl
dec
dec
cmp
repnz
sub
in
adc
push
inc
jl
jb
addr16
cmpsl
jg
dec
fs
sub
mov
xchg
inc
adc
sub
sub
ret
in
mov
pop
jo
incb
and
push
cld
jne
xor
mov
and
sub
xor
call
incb
push
lcall
mov
and
daa
sbb
stos
push
adc
lds
jmp
mov
call
mov
or
stos
in
movswl
mov
dec
sbb
jbe
add
movsl
mov
push
dec
lods
nop
adc
jmp
cmp
xor
imul
pop
rorb
popf
jmp
nop
xchg
ret
out
push
inc
lods
pop
test
dec
hlt
mulb
push
insb
int3
loopne
add
insl
call
jl
push
sbb
dec
scas
mov
jo
push
push
fisttpll
je
adc
xor
jbe
cld
jmp
js
nop
bswap
pop
mov
in
dec
sti
cmpsb
lock
dec
imul
dec
cs
xlat
int
insb
scas
jg
dec
adc
test
sub
push
lds
cmpb
cld
pop
mov
pop
sub
repnz
or
pop
xchg
cs
test
lods
outsb
bswap
aad
je
push
adc
jl,pt
sub
dec
push
insb
mov
dec
pusha
push
mov
adc
mov
scas
mov
mov
and
or
mov
popa
fisubrs
lcall
adc
xchg
popa
repnz
lea
inc
es
fs
iret
fs
ljmp
push
decl
es
xchg
sti
loope
sub
and
scas
ss
sbb
nop
add
mov
adc
leave
je
icebp
mov
aad
cs
dec
shll
iret
sub
into
scas
call
cs
mov
xor
push
adc
sbb
dec
jl
insl
mov
jl
pop
das
int3
jl
jg
xchg
fstps
sub
dec
push
cld
push
fs
ror
js
dec
mov
mov
pusha
cld
jl
insl
outsb
jo
xchg
lret
cmp
push
sbb
into
inc
cli
pop
insb
sub
inc
outsb
mov
in
xchg
sbb
cld
sti
dec
insw
or
and
jl
sbb
push
inc
int3
dec
and
or
fiadds
nop
add
movsl
adc
xor
ret
pop
mov
sbb
cld
pop
mov
lret
test
outsb
inc
sbb
mov
jo
jle
push
je
or
push
add
testb
mov
ljmp
repz
sbb
dec
sub
movsb
dec
push
cmp
dec
fcmovnb
and
jp
inc
mov
mov
loope
ljmp
sub
lret
xchg
or
jmp
dec
loope
scas
jns
add
dec
sub
add
pop
inc
xor
sub
xorb
push
lds
loop
loopne
int3
js
jge
sbb
and
pop
int
in
adc
and
inc
sub
push
dec
icebp
js
jl
gs
inc
into
add
fimull
push
cwtl
jnp
adc
lds
shlb
adc
cs
aad
xor
cli
push
mov
sub
or
or
jg
sbb
dec
push
ljmp
sbb
adc
cs
cmp
ljmp
sub
addr16
fs
xchg
scas
and
sbb
sub
test
loopne
lods
or
dec
push
jle
cltd
hlt
xor
lods
mulb
std
in
push
js
cs
and
leave
lds
sub
or
dec
hlt
dec
add
or
xchg
es
repnz
in
outsl
insl
out
push
or
or
push
adc
push
lret
decl
inc
sbb
xor
jp
cmc
in
ficoms
popa
push
cmp
pop
pop
mov
jl
rorl
in
xlat
cld
or
add
add
and
jecxz
pusha
dec
sub
dec
push
jp
xchg
addr16
in
jmp
lea
dec
cmp
pop
jne
lahf
dec
popa
jbe
cmp
sti
dec
push
sbb
out
jb
and
push
ds
sbb
cld
adc
imul
hlt
mov
sbb
shrb
fisubl
push
outsb
bound
jno
dec
cmp
push
ljmp
sbb
into
and
sub
shlb
data16
pop
dec
cmp
push
push
repnz
xchg
cmp
add
aam
mov
je
movsb
jl
pop
xor
dec
jae
and
sub
fs
dec
dec
push
add
jl
xchg
and
cld
out
jl
clc
es
pop
int3
gs
cmp
jns
gs
pop
push
outsl
xor
out
jle
pop
push
inc
push
xor
fs
mov
lds
in
jmp
add
push
rorb
fs
rcrb
push
pop
inc
pop
xor
repz
sbb
es
cld
dec
add
sub
fs
add
sub
and
loopne
inc
push
roll
andps
push
jne
and
adc
loop
pushf
in
dec
sub
inc
and
dec
inc
pop
add
dec
push
fs
ds
jg,pn
inc
jl
jl
and
addr16
xor
dec
sub
dec
push
push
sub
jl,pn
cld
pusha
ret
in
lcall
cld
push
ljmp
push
out
addr16
xchg
mov
imul
sbb
or
iret
sbb
stos
aas
mov
ds
adc
mov
inc
lods
jl
test
inc
inc
push
dec
cli
dec
mov
sbb
push
sub
ret
ss
in
ljmp
or
in
inc
jg
push
call
dec
jb
mov
stc
xchg
mov
xor
inc
cli
and
pusha
lahf
in
push
cli
adc
or
pop
cs
adc
jmp
sti
jl
mov
push
dec
adc
mov
sub
sub
in
dec
sti
cmp
fidivrl
cmp
dec
js
pop
sub
pop
stos
dec
push
inc
data16
das
cmp
push
jbe
in
int3
push
lcallw
jle
fwait
jl
push
call
jo
out
js
aam
pushf
sub
sarl
xor
cmp
addr16
sbb
cld
adc
stos
test
jmp
jp
pop
jg
pop
jg
sbb
push
in
ret
aam
js
js
and
cmp
jb
pop
data16
daa
filds
sti
cld
les
fs
mov
sti
pop
js
mov
jl
fmul
dec
sbb
xchg
lods
inc
dec
out
arpl
jmp
push
cmpsb
sarb
jg
bound
addr16
cmpsb
bound
js
jg
or
sub
nop
push
insb
or
and
outsb
pushw
cmp
je
cmp
enter
and
sbb
dec
das
or
movsl
jno
lods
push
ljmp
sbb
add
fs
jae
and
jns
ret
cs
sub
addr16
leave
jg
fs
dec
in
pop
out
sbb
in
into
jo
add
mov
xchg
xlat
mov
sub
imul
sub
mov
sar
test
mov
lods
pop
fs
mov
iret
or
mov
dec
sub
mov
or
dec
fnstenv
jl
push
inc
jnp
sbb
pop
das
dec
xlat
adc
fistpl
dec
inc
jmp
push
cmp
in
or
cmpsb
dec
loopne
scas
mov
mov
test
aam
push
pop
cmp
jl
imul
hlt
fs
mov
jg
js
jl
dec
sahf
pop
sub
js
movsb
inc
and
daa
pop
mov
das
movsb
inc
fsubs
sti
in
insl
es
or
aam
dec
out
sub
ds
dec
and
add
sahf
cld
sub
cmp
xchg
xor
imulb
sbb
shll
cld
push
jmp
es
into
call
fstpl
loope
xor
sbb
sbb
mov
js
mov
scas
mov
andb
popa
sbb
loope
stos
scas
pop
dec
insb
cmp
stos
jg
inc
and
cld
hlt
outsb
std
js
jne
jg
dec
pop
pop
sbb
cld
jle
dec
pop
pop
repz
addr16
push
test
jle
cmp
push
lea
adc
in
mov
or
addr16
cmc
push
ret
gs
out
pop
pop
stc
push
mov
xor
les
jg
sahf
push
xor
sbb
adc
sbb
jge
push
das
jo
xor
cmpsl
dec
data16
or
push
sarl
push
outsb
pop
xor
xor
dec
xor
jae
and
jnp
sub
lock
out
push
pop
jg
push
mov
push
inc
jle
rolb
fildl
push
jg
push
je
inc
xor
cmp
aas
xor
jmp
sub
push
das
push
sbb
push
loop
lock
bound
leave
dec
cmp
ja
and
cmp
jg
dec
insb
jmp
lahf
inc
dec
push
xor
or
sub
jo
fmull
adc
vmread
cmp
es
js
dec
pop
pusha
cmc
and
add
cmp
inc
lahf
loop
push
push
movsl
insb
sub
pop
push
pop
es
inc
add
sbb
adc
add
adc
in
pop
jmp
sbb
addr16
outsl
loope
inc
adc
in
sbb
js
enter
push
in
xchg
mov
ja
mov
ret
test
push
cld
xor
sti
or
repz
cs
or
sub
movsl
adc
push
pop
xchg
lcall
jmp
xor
dec
clc
jae
movsb
ja
jnp
pop
push
stos
addr16
je
cmp
outsl
jo
adc
pusha
stos
pop
in
cmp
jo
pushf
push
lds
pop
jl
adc
dec
shll
aaa
xor
cmp
sub
mov
pusha
and
mov
les
mov
jno
scas
push
push
out
xor
cmpsl
sub
sahf
sbb
mov
add
pop
test
dec
sti
xor
and
add
and
cmp
and
pop
mov
cmp
outsb
jo
push
dec
pop
inc
adc
xor
add
loopne
push
dec
lock
cli
sbb
into
insb
mov
outsb
in
push
inc
pop
and
int
xchg
inc
inc
mov
shrl
popa
cld
xor
imul
cld
add
outsl
pop
ja
popa
sti
cltd
outsl
jp
jmp
iret
xor
sub
lea
test
or
pop
lcall
ficomps
wbinvd
pop
push
pop
es
cld
rorl
into
aaa
push
repnz
push
shrd
xchg
dec
or
mov
pushf
lea
jmp
cmc
pushf
not
call
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
call
add
inc
imul
je
imul
gs
popa
addr16
outsl
js
add
add
je
jns
inc
outsl
insb
outsl
jb
jb
jae
add
add
incl
add
popa
jo
je
imul
dec
push
push
dec
dec
dec
cs
push
push
add
add
je
gs
je
je
add
and
add
sbb
ss
ljmp
push
pop
mov
adc
mov
and
fadd
pop
adc
push
mov
mov
lahf
mov
and
ja
mov
roll
push
loope
sub
mov
mov
dec
imul
adc
rclb
loopne
imul
mov
fs
ja
lea
pop
bswap
mov
pop
mov
pusha
mov
movzbw
movsbw
mov
mov
call
add
ja
jbe
dec
jne
push
popa
jne
add
cld
dec
movzwl
sbb
lea
clc
mov
bt
pushf
test
movb
add
pusha
bt
cmc
mov
call
add
inc
gs
imul
popa
arpl
outsb
je
pusha
push
cmp
lea
jns
pushf
pushf
lea
ja
ror
sub
shl
jmp
mov
ror
not
lea
jne
stos
not
push
mov
lea
pushf
lea
call
jmp
cmp
clc
cmp
pusha
pushf
mov
pushf
lea
jb
push
clc
cmp
cmp
push
jmp
xchg
xchg
fadds
insl
and
js
cmp
sub
xlat
pop
rolb
stos
test
pop
mov
inc
popl
xlat
xchg
pop
push
pop
jb
xchg
sar
xchg
in
into
sbb
add
imul
or
rcl
mov
jns,pn
jnp
pop
sahf
jne
and
xchg
fadds
push
adc
jp
lcall
add
sbb
aad
in
cld
pop
rcl
jge
sub
rcrb
mov
iret
pop
arpl
jns
dec
adc
and
out
mov
and
cmp
std
lods
push
push
mov
frstpm(287
push
clc
sbb
sbb
jnp
xor
jmp
adc
push
call
cltd
mov
cmp
in
orb
or
and
or
loop
xor
or
aas
cld
iret
je
jmp
pop
je
xchg
pop
ret
jmp
jmp
add
push
imul
jb
je
arpl
rorl
ss
add
not
movb
pushl
pop
mov
not
pusha
setbe
not
lea
movb
pushf
pushf
pushf
movl
call
add
dec
outsl
popa
fs
imul
add
popa
insb
gs
imul
je
js
mov
sets
not
inc
mov
pusha
setnp
mov
mov
lea
call
lods
lock
test
xlat
push
jecxz
aas
add
fsubs
push
iret
rolb
mov
mov
loopne
jb
push
into
mov
push
fldln2
insl
shll
adc
ljmp
xchg
mov
mov
loop
add
loop
inc
mov
push
aas
in
scas
xchg
cltd
mov
lret
or
mov
jg
adc
jp
dec
mov
xor
dec
aad
and
movsl
xchg
fiadds
stc
out
test
inc
push
js
out
stos
xchg
xchg
xor
test
loopne
cmp
aam
out
insl
cmpb
xchg
mov
aas
xchg
lea
adc
cli
cmp
mov
nop
daa
inc
fcoms
scas
mov
clc
cmp
daa
or
lret
into
ret
aaa
imul
add
adc
dec
std
das
push
pop
and
push
arpl
ficoms
mov
jb
popa
je
inc
insb
insb
imul
outsb
add
rorb
add
add
dec
outsl
popa
fs
jne
jae
jb
add
cmp
pusha
mov
lea
ja
clc
pusha
imul
bt
push
pushf
add
pushf
push
lea
jmp
neg
bt
cmc
call
add
inc
outsl
insl
jo
jb
push
je
imul
inc
gs
gs
dec
outsb
jne
add
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
add
dec
outsb
je
jb
outsl
arpl
fs
outsb
arpl
insl
outsb
je
movb
repnz
jmp
add
push
insb
gs
add
fmuls
sbb
sbb
popf
fmuls
fcomps
sbb
or
pop
or
fcompl
sbb
sahf
pop
sbb
cltd
fmuls
push
pop
pop
fstps
sbb
fistps
or
rcrl
or
fistps
cltd
popf
fstps
jno
add
popa
insb
push
gs
insb
insb
outsl
arpl
stc
ror
cmp
jmp
add
push
imul
add
inc
outsb
fs
popa
add
add
je
insb
imul
inc
popa
je
add
test
mov
pop
jo
lret
stos
arpl
ds
ficompl
mov
inc
dec
adc
ret
or
sub
push
loope
les
jnp
sub
mov
insb
pop
pop
inc
xchg
xlat
xchg
scas
sbb
fabs
lcall
aaa
lret
insb
add
stos
cld
call
lock
or
cld
scas
and
sbb
bound
xor
mov
pop
clc
sub
mov
test
incl
cmp
out
inc
mov
sub
mov
ret
cmp
test
rorb
push
arpl
mov
sub
pop
andnps
push
jae
notl
xor
in
in
mov
dec
loope
mov
sub
cltd
cmp
shl
pop
lock
ror
sub
out
iret
lds
inc
xchg
add
or
adc
add
pop
inc
insl
outsl
fistps
pop
jns
xchg
inc
ja,pn
iret
ret
sub
xchg
xor
sub
insl
fcompl
cmc
and
inc
cs
and
adc
leave
sbb
inc
out
xchg
insb
inc
movaps
add
inc
gs
imul
js
inc
add
add
jbe
dec
jne
push
outsb
jo
gs
jb
dec
gs
fs
add
inc
outsl
insl
bound
gs
outsb
add
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
jbe
dec
jne
dec
jo
outsb
add
add
outsl
bound
inc
jb
add
add
je
arpl
insb
insb
push
outsl
jae
add
push
gs
outsb
fs
inc
imul
or
fs
jne
mov
movb
not
not
mov
push
pusha
lea
call
add
insl
imul
insl
push
je
jo
add
insl
imul
insl
dec
jne
add
push
jb
mov
movw
lea
jmp
bt
ror
pusha
not
jmp
mov
lea
je
call
push
pushl
lea
ja
pushf
mov
lea
jb
cmc
cmpb
pushf
lea
jne
inc
add
call
add
dec
insl
popa
addr16
imul
je
outsl
jns
add
dec
gs
jo
insb
insb
outsl
arpl
test
push
pushf
lea
je
clc
pusha
test
sub
call
and
pop
cltd
fadds
add
mov
or
ficompl
bnd
lret
adc
ret
and
xchg
outsl
stos
xchg
xor
addr16
jo
and
data16
add
mov
imul
enter
rcl
xchg
pop
mov
mov
pop
stc
or
or
sahf
adc
xchg
mov
mov
mov
cmp
es
dec
xchg
jp
xorb
enter
or
inc
repnz
lret
adc
popa
cmp
cmp
add
push
popa
jbe
inc
inc
add
add
jae
push
jne
je
gs
popa
add
add
je
insb
addr16
je
insb
dec
inc
add
cmp
mov
lea
je
shld
shl
pushf
neg
add
pushf
inc
lea
clc
sub
cmc
neg
shr
xor
xor
mov
add
dec
ror
rcr
add
shl
movsbw
add
ror
mov
stc
cmp
cmp
shr
pushl
pusha
clc
bt
cmp
mov
jmp
add
push
outsl
jae
dec
gs
popa
addr16
add
add
add
inc
gs
dec
inc
imul
cli
jge
lea
cs
cmp
lea
jmp
cmp
pushl
call
mov
add
movsbw
jmp
add
lods
and
add
add
xchg
and
ret
leave
and
out
and
test
and
repz
add
into
and
jge
and
push
repnz
dec
lods
and
inc
mov
and
imul
add
ret
cmc
mov
add
add
orb
add
add
add
or
add
adc
add
add
add
mov
frstor
mov
sbb
test
and
test
and
cmp
and
sbb
xchg
and
test
sbb
movsb
mov
and
or
add
out
add
and
mov
repz
xor
and
cmp
and
adc
sbb
pop
and
push
fsubs
rol
add
lcall
add
and
repz
fxtract
sbb
mov
mov
and
jb
and
leave
fisubs
lret
add
and
ror
and
ret
fsubl
mov
sbb
mov
lds
add
and
jg
and
lods
hlt
and
cmpsl
and
sub
and
jge
and
jo
sbb
lock
add
add
in
sbb
lret
and
fmuls
sbb
cmp
iret
and
xor
and
and
mov
sbb
jle
sbb
jae
and
add
add
and
cmpsb
shlb
push
hlt
sbb
and
shll
div
sbb
loopne
and
div
sbb
mov
into
and
cli
repz
ja
and
fs
add
nop
and
cmp
sbb
sbb
and
ja
and
aas
ret
xchg
out
mov
add
lds
add
leave
and
data16
mov
and
xchg
frstor
adc
and
test
and
dec
icebp
sbb
scas
ret
and
xchg
mov
and
xchg
icebp
sbb
std
iret
and
mov
icebp
and
mov
xchg
and
jnp
and
aas
and
mov
mov
sbb
push
out
and
and
or
sbb
jmp
into
and
xchg
shlb
das
lds
add
into
and
push
and
adc
and
inc
mov
and
ret
add
shlb
dec
mov
and
scas
lock
xchg
mov
add
into
and
ljmp
add
and
jg
and
jp
and
xchg
leave
and
mov
mov
add
and
add
and
repz
jg
and
stc
out
sbb
repnz
and
nop
mov
add
sbb
jp
and
add
add
out
int3
and
js
and
stc
jmp
add
and
mov
lret
enter
jns
and
cmp
and
iret
ret
ror
and
cli
lds
add
sbb
shl
sbb
cli
lods
and
cmc
mov
add
add
mov
add
in
sbb
push
ljmp
cltd
hlt
and
dec
ret
and
sub
aam
add
in
sbb
call
and
sub
and
insl
mov
and
outsb
hlt
sbb
data16
and
aas
mov
add
icebp
and
or
sbb
ret
add
xchg
and
scas
mov
and
dec
leave
and
xor
shll
rol
add
mov
add
out
sbb
mov
jmp
add
mov
add
and
mov
and
adc
sbb
in
iret
and
xchg
out
add
and
leave
lods
and
int
sbb
mov
call
sbb
add
and
add
sbb
cmpsl
hlt
sbb
icebp
leave
and
mov
jmp
add
shlb
aas
repnz
sub
pop
int3
and
ljmp
add
sbb
xchg
jmp
add
lock
dec
call
and
cltd
aam
add
and
adc
and
mov
sbb
sbb
and
out
and
jg
sbb
jb
and
sbb
sbb
std
movsb
and
xor
and
xchg
mov
add
lea
add
repnz
or
and
adc
and
mov
lret
int
and
push
and
aam
and
xor
and
enter
test
sbb
fstpt
and
sahf
xchg
and
adc
ret
add
and
fdiv
sbb
dec
les
add
and
ja
and
out
and
xchg
into
and
cmp
and
popa
shll
mov
sbb
sarl
add
and
cmpsb
repz
daa
lea
add
and
in
lock
out
and
xchg
and
jnp
and
std
lock
mov
cmc
sbb
adc
sbb
inc
and
jno
and
push
mov
and
mov
out
and
lea
and
fisubl
and
push
lock
mov
add
add
ret
and
iret
and
ja
and
jle
and
push
lea
add
ret
and
inc
into
and
jns
and
aad
and
jg
and
into
mov
and
or
sbb
imul
and
or
xchg
and
jge
sbb
inc
shll
fs
and
adc
and
xor
add
sbb
mov
sbb
sarb
add
lods
and
mov
lock
ljmp
add
icebp
and
lods
into
and
dec
and
dec
sahf
and
xor
and
cs
and
mov
and
jns
and
aaa
mov
and
pusha
mov
and
xor
sbb
sub
and
ret
mov
sbb
mov
and
cmpl
add
into
and
into
and
sbb
and
jle
and
jge
and
xchg
iret
and
xchg
and
ret
add
and
div
and
inc
ret
fwait
ret
std
shll
cmpsb
icebp
and
pop
xchg
and
daa
and
add
lods
and
lods
xchg
and
mov
and
daa
cmc
sbb
jle
and
sub
and
add
add
aad
add
shll
cmp
add
cmpsl
mov
add
lret
and
data16
sbb
fstl
and
add
add
ljmp
add
add
add
lds
add
and
sbb
lea
add
ret
and
mov
add
add
add
cmpb
add
mov
add
orb
add
or
add
adc
add
add
add
pop
cmc
sbb
dec
int3
and
push
fisubs
cmpsb
add
add
adc
add
add
and
or
sbb
mov
add
and
dec
icebp
sbb
inc
jb
popa
je
push
outsl
jne
fs
arpl
outsb
add
sub
add
add
inc
jae
popa
jo
add
lcall
jecxz
shr
call
add
inc
gs
fs
jo
gs
dec
outsb
outsw
add
mov
and
ret
in
sub
jmp
jmp
stos
pusha
lea
jmp
ror
push
jmp
jmp
add
inc
dec
push
dec
inc
inc
jb
insl
push
je
imul
mov
and
mov
add
mov
or
mov
jmp
add
ja
jbe
dec
jne
inc
gs
jne
inc
gs
add
add
je
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
and
adc
and
xor
movb
lea
jmp
add
push
gs
outsb
jne
je
insl
inc
imul
add
outsb
fs
gs
inc
imul
gs
jne
jb
outsb
je
imul
jns
add
add
je
arpl
insb
insb
push
popa
outsb
add
add
xchg
add
not
setno
lea
pop
call
jmp
add
inc
jb
ja
outsl
arpl
push
arpl
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
add
je
je
gs
push
outsl
fs
add
gs
je
inc
outsl
outsb
je
outsb
imul
cmp
andl
or
push
in
ds
ds
and
test
rol
pop
sbb
sub
in
addr16
pop
shll
inc
lds
xchg
icebp
lretw
dec
pushf
push
mov
dec
push
scas
std
jnp
insb
jne
and
dec
jecxz
jg
cmc
jnp
cs
sbb
dec
cwtl
dec
inc
hlt
pusha
sbb
jb
xor
mov
jge
dec
sub
jno,pn
and
lret
mov
icebp
and
ss
std
fidivrs
cltd
inc
test
sub
rorb
add
gs
je
inc
imul
jns
add
sti
movzbw
sbb
btr
sar
add
add
stc
mov
mov
clc
shl
mov
test
pushf
test
call
jmp
jmp
add
inc
gs
je
imul
inc
js
add
test
cmp
lcall
decl
pushl
ret
cld
int
cmpsb
fadds
imul
mov
or
xchg
testb
mov
rcl
add
data16
sbb
lods
mov
dec
xchg
mov
cmpl
popf
rcl
cld
cmpsl
xchg
cmp
in
xchg
shrl
push
mov
and
inc
repnz
push
adc
loop
test
imul
movsl
fadds
ret
jbe
loop
jbe
xchg
scas
xor
jl
test
dec
push
repz
sbb
mov
rcrb
xlat
ljmp
xchg
jns
mov
or
lods
add
inc
sbb
mov
fldenv
and
xchg
dec
sahf
sbb
popf
push
add
add
sub
repz
jb
mov
sbb
mov
xchg
sub
js
and
ror
and
fdivs
and
jge
fadds
int3
jo
adc
or
or
scas
dec
dec
push
aaa
addr16
and
test
jg
xchg
daa
insb
in
dec
jmp
imul
mov
out
mull
ljmp
js
js
jge
jb
movntps
push
xchg
and
lea
stos
lahf
aaa
pop
hlt
fbstp
mov
popa
inc
push
fsts
push
mov
mov
cmp
ret
sub
enter
subl
pop
clc
stos
nop
lret
jp
pop
stc
shrb
add
push
popa
imul
je
jo
gs
bound
arpl
call
pushl
lea
jb
stc
push
cmp
pusha
pushf
lea
jae
pusha
setnp
mov
jmp
add
inc
gs
gs
inc
insb
addr16
popa
bound
gs
add
add
gs
je
push
jb
arpl
jae
add
mov
pusha
pushl
movsbw
mov
jmp
push
lea
jne
shl
btc
neg
sub
lahf
lahf
call
add
push
gs
popa
jb
outsb
je
adc
pop
xchg
das
or
fildl
sbb
mov
addr16
in
nop
leave
add
sbb
popf
rclb
fcmovnu
mov
mov
xchg
jbe
push
mov
jbe
lcall
fsubs
pop
inc
das
dec
push
sar
and
aam
mov
bt
rol
not
sub
shld
ror
push
pushf
das
sar
bsr
mov
pusha
aad
aaa
btc
mov
shl
inc
btc
rol
mov
ror
not
cmc
mov
pusha
test
push
call
add
dec
jae
outsl
outsl
insl
gs
ret
push
or
mov
cmc
xchg
movsbw
bsf
test
jmp
bt
pusha
add
push
pushf
pushf
pushf
lea
jmp
add
inc
jb
popa
je
push
arpl
outsb
dec
outsb
imul
mov
inc
stc
shl
xchg
cmc
mov
push
pushf
stc
inc
mov
bt
clc
xchg
shr
mov
pusha
test
sub
pushf
rep
movzbw
mov
movb
pushl
pushl
lea
jmp
mov
pushf
call
xchg
inc
sub
repnz
ret
sbb
dec
mulb
pop
loope
pop
push
mov
ss
out
pop
stos
xchg
sub
add
in
lahf
dec
inc
lcall
ret
mov
popf
rcl
dec
jg
inc
clc
movsb
jg
loop
cld
ret
test
jnp
movsl
fcom
pop
adc
inc
test
insl
sahf
jne
jg
call
fadds
sub
or
add
les
lods
jp
cmpsl
fcom
fildl
je
add
adcl
mov
es
pop
jecxz
jp
lret
js
xlat
jle
pushf
test
aad
roll
and
ljmp
xchg
ret
jb
inc
or
push
push
mov
inc
push
add
adcb
mov
ficoms
test
jne
jns
test
push
subb
pushf
test
xchg
lods
movsb
fcom
jg
aam
mov
add
scas
xor
cwtl
fiadds
out
neg
push
sbb
je
sbb
repz
cmp
or
stc
mov
jp
les
sub
sub
pop
jno
or
out
rclb
fisubrs
pop
int3
push
push
mov
or
rcrl
fdivp
push
adc
loop
out
inc
sarl
sbb
add
je
popa
jb
outsb
je
add
inc
gs
imul
arpl
add
popa
insb
inc
insb
insb
outsl
arpl
pushf
call
add
push
imul
popa
jae
inc
add
add
insb
inc
imul
popa
outsb
jae
popa
je
dec
gs
popa
add
in
and
clc
clc
cmc
add
pusha
push
pusha
lea
jmp
mov
stos
fadds
scas
imul
jmp
arpl
movsb
es
cmpsl
jo
pop
jle
xchg
cltd
stos
fcoms
pop
pop
add
sub
fucomi
ret
js
inc
cmp
popa
dec
mov
xor
xor
xchg
inc
ret
lahf
or
ds
add
push
out
lods
jb,pn
jo
lods
rcl
pop
sbb
xchg
xchg
pop
cmp
sbb
iret
orl
cmp
in
out
mov
jns
sbb
rolb
inc
pop
popf
and
arpl
inc
push
sbb
push
mov
xlat
rcrb
and
sub
cmpsl
movsl
or
and
xor
sbb
xor
bound
cmc
inc
fmuls
pushf
mov
mov
mov
mov
mov
push
dec
xor
or
iret
and
add
in
test
sahf
aad
pop
cli
mov
or
jo
jne
adc
xchg
lods
fadds
mov
mov
sub
push
fcomps
ljmp
and
add
xor
in
inc
popf
and
mov
mov
orl
push
call
dec
js
pop
dec
mov
and
pop
fcomps
push
dec
adcl
fimull
loope
sbb
lret
sub
mov
aad
sub
push
sbb
inc
mov
nop
inc
xchg
inc
int3
sbb
lret
ss
rolb
scas
out
in
movsb
insb
inc
lock
dec
adc
inc
dec
pop
test
rcr
or
cmp
sub
out
and
push
negl
insb
push
jmp
inc
repz
les
cmpsl
jae
aam
pop
jbe
data16
dec
xchg
adc
add
addl
fildl
inc
insb
push
imul
stc
out
idivb
mov
aas
xchg
sub
outsl
jo
push
arpl
add
add
bt
bt
xor
call
add
push
gs
imul
outsb
add
pop
adc
add
sahf
shrl
pop
add
mov
loopne
out
pop
adc
sar
shlb
sub
call
lahf
lret
call
lods
mov
mov
inc
mul
jns
in
data16
and
aad
das
inc
push
test
popa
xlat
lods
jnp
mov
loopne
push
mov
sbb
das
xchg
sub
aaa
lcall
testl
fstpt
or
daa
loopne
add
adc
or
pusha
call
mov
pop
stos
or
pop
add
rcll
test
inc
iret
movl
stos
sbb
mov
push
jbe
icebp
push
pushf
mov
ja
popa
aaa
popa
stos
rcl
jl
enter
push
inc
imul
int3
or
lret
daa
rcl
loope
inc
sahf
mov
leavew
xchg
jb
jne
sub
daa
xchg
fldcw
rorb
fs
call
std
in
dec
xchg
into
or
or
inc
sub
inc
inc
add
pop
insb
stos
jno
js
cmpsl
fldt
mov
push
pop
lea
push
jg
jae
data16
mov
negb
push
cli
icebp
xchg
adc
xchg
and
sub
sbb
aaa
pushf
fistps
or
dec
add
push
js
gs
push
add
push
loope
fadds
sub
mov
push
mov
int
push
outsb
pop
aas
daa
rcl
pop
pop
loopne
mov
mov
adc
lods
or
dec
push
aam
sub
out
and
aaa
xchg
sub
inc
jnp
mov
add
jmp
inc
or
ficoms
cli
ds
push
push
stc
cmp
cmp
jecxz
lods
in
sub
and
mov
inc
icebp
mov
movsl
out
push
movsl
repz
push
js
aad
cmpsb
sbb
pushf
push
pushl
lea
jmp
add
inc
jb
ja
arpl
inc
js
lea
call
push
call
pushf
movb
movl
push
mov
pushl
movw
pushl
ret
call
add
cmc
clc
call
mov
or
popf
mov
rorl
jecxz
push
pusha
adc
and
jne
rolb
and
push
out
xchg
mov
aas
lahf
scas
lahf
and
ret
mov
sbb
mov
dec
sbb
and
or
fimuls
lret
jne
ficompl
fadds
mov
jnp
dec
imul
sub
or
nop
and
ret
add
nop
mov
addb
sbb
sub
inc
pop
fidivrs
lea
mov
or
popf
lods
arpl
lret
mov
jns
loope
and
xlat
out
push
negl
stos
arpl
mov
cmpsb
push
and
mov
test
fcoms
jp
cmc
mov
inc
pop
mov
mov
mov
pusha
inc
clc
mov
in
mov
outsb
sub
cli
loopne
add
je
outsb
jne
je
je
add
faddl
add
fs
jae
pushf
dec
mov
setns
pusha
inc
call
jmp
add
inc
gs
imul
je
pusha
mov
pushf
mov
pushf
lea
jmp
sar
shl
bt
shr
jmp
add
inc
insb
outsl
jae
inc
insb
imul
add
call
add
push
gs
popa
jo
jne
add
add
inc
imul
jae
popa
addr16
add
add
gs
je
push
push
add
add
je
dec
push
xor
add
push
je
jb
inc
outsl
arpl
lea
jae
mov
lea
mov
mov
movsbw
pushf
mov
push
pushl
pushf
lea
jmp
add
inc
outsb
fs
popa
je
add
add
imul
jo
imul
push
outsb
outsl
ja
inc
dec
dec
inc
push
dec
xor
cs
insb
add
add
jbe
dec
jne
inc
insb
outsl
jae
add
add
je
jb
arpl
arpl
fs
jne
and
mov
bt
neg
shrd
sub
cmc
shrd
rcr
mov
cmp
pusha
test
jmp
add
dec
outsl
arpl
imul
je
gs
jo
popa
je
inc
add
and
fistps
jmp
lea
je
cmp
pusha
pushf
cmp
cmp
pushf
call
movl
pushl
lea
je
jmp
lea
jne
shl
shl
aam
xor
bsf
mov
sete
sar
pusha
rol
add
shl
jmp
mov
jmp
jmp
arpl
add
push
mov
mov
leave
add
sub
adc
push
push
cli
push
loop
jle
xchg
sar
pop
or
fwait
xchg
cmp
popf
lods
lods
mov
push
mov
scas
mov
mov
lods
out
push
add
dec
inc
push
std
push
std
bound
push
dec
mov
push
add
cmp
mov
or
ret
push
mov
cmpb
push
push
pusha
mov
lea
jne
movsbl
aam
bts
ror
sub
lea
pusha
pop
setnp
mov
mov
push
lea
jmp
add
inc
outsl
insl
jo
jb
push
je
imul
repz
pop
pop
adc
lcall
lret
mov
mov
pop
leave
cmp
mov
jp
adc
out
pop
out
ret
cmc
inc
add
or
jae
xlat
jg
daa
loop
stc
add
insl
mov
cmc
loopne
cmp
hlt
pop
hlt
sti
mov
jecxz
inc
insl
cmp
dec
into
mov
loope,pn
subl
roll
adc
add
inc
imul
add
insb
gs
imul
jae
gs
push
imul
add
add
inc
js
insb
jne
gs
insb
imul
jmp
movb
jmp
add
push
gs
imul
inc
js
inc
js
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
add
movb
mov
pushl
ret
add
inc
gs
gs
inc
outsl
insb
outsl
jb
jmp
lea
ja
pushf
call
scas
push
push
mov
pop
outsl
mov
mov
sti
mov
mov
jmp
rcl
jmp
and
out
fnstcw
data16
cld
push
mov
mov
adc
clc
push
sahf
aaa
into
xor
ffree
scas
gs
jb
es
insl
mov
adc
xor
and
cmc
jp
test
je
sbb
rclb
mov
push
sbb
mov
scas
and
or
jb,pn
jno
subl
in
inc
loope
js
out
sub
jl
jmp
add
inc
push
je
dec
push
add
add
imul
push
gs
popa
jb
add
add
gs
inc
imul
stc
incl
add
imul
jae
addr16
add
cwtl
adc
xor
add
mov
add
jae
outsl
jb
inc
inc
add
jmp
mov
jmp
jae
lret
pop
out
jb
push
mov
inc
movsbl
lea
insb
mov
test
sbb
dec
jp
or
cmpsl
mov
mov
push
mov
lcall
pop
out
call
pusha
int3
fstpl
test
jae
push
dec
push
push
shrb
std
dec
js
mov
imul
sub
je
add
push
cmp
push
out
mov
jo
jl
mov
dec
lcall
imul
imul
insl
inc
insb
outsl
jae
add
add
je
gs
imul
add
dec
outsl
arpl
inc
jb
add
ret
jmp
not
lods
jmp
stc
cmp
mov
movl
push
jmp
add
push
gs
ja
imul
add
je
insb
imul
je
jl
lds
mov
aam
dec
sbb
call
enter
dec
ficoml
mov
loopne
movsb
sbb
lret
fcoml
sarl
mov
in
push
jmp
popa
lret
pop
loop
mov
popa
shlb
add
push
gs
arpl
insb
gs
gs
je
jmp
add
push
imul
outsb
outsl
ja
gs
popa
addr16
add
add
je
jb
outsl
arpl
fs
outsl
insl
jo
jb
inc
js
push
add
repz
add
dec
jae
imul
jae
bound
add
inc
gs
insb
imul
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
lea
jne
jmp
add
inc
gs
jns
je
insl
inc
imul
jns
add
fnstenv
incl
add
je
gs
dec
jne
inc
add
xor
decl
fs
jne
pusha
pusha
lea
call
call
test
jmp
add
dec
imul
add
gs
je
push
imul
inc
add
rol
clc
neg
cmc
add
stc
test
cmp
xor
stc
clc
mov
stc
movw
add
pushl
cmp
lea
jge
bt
test
call
add
inc
js
push
gs
arpl
imul
inc
and
mov
movb
pushf
push
pushl
ret
add
inc
insb
outsl
bound
dec
outsl
arpl
add
inc
jb
popa
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
js
pusha
lea
jne
not
pop
movsbl
pop
mov
pusha
pop
pop
mov
movw
mov
push
mov
pushl
push
pushl
ret
add
dec
insb
gs
jne
add
add
je
imul
outsl
jb
clc
stc
repnz
pushf
jmp
lea
ja
call
pushf
lea
jb
test
cmpb
push
movb
pusha
lea
jne
bts
stc
btc
not
mov
bt
push
pushf
add
pushf
movw
cmp
movzwl
jmp
pusha
pusha
lea
jne
push
pusha
jmp
add
inc
insb
outsl
bound
push
imul
or
icebp
das
add
pusha
pushf
pusha
pushl
lea
jmp
add
inc
gs
insb
imul
inc
popa
je
add
add
outsl
inc
push
add
and
add
cmc
pushf
cmc
ror
movb
pushf
jmp
adc
xor
int3
jl
or
je
sbb
cmp
shrl
xchg
rcl
nop
pop
mov
or
jo
mov
jmp
fsubs
sbb
add
inc
jb
ja
gs
inc
add
jne
call
push
lea
ja
call
in
fstl
mov
xor
pop
insb
addr16
adcb
jae
outsb
imul
dec
sbb
cmp
ret
inc
or
or
add
xchg
mov
adc
fists
outsl
loopne
mov
jnp
js
sbb
cmpsb
push
cmp
jnp
into
and
fistps
in
nop
mov
dec
ljmp
aad
mov
mov
xchg
dec
ljmp
lret
outsl
insl
leave
xchg
mov
and
into
gs
pop
xchg
lods
or
sbb
add
mov
add
xor
leave
pushf
lea
jmp
mov
pushf
mov
add
cmc
push
push
movb
xchg
movsbw
mov
jmp
call
add
push
jo
popa
je
push
imul
add
je
popa
outsb
fs
gs
outsl
jne
je
lea
jne
ror
cmc
rcr
shl
sub
add
shl
call
pushf
pusha
movb
lea
jae
test
pushf
sub
jmp
cmc
sub
cmc
clc
jmp
add
inc
gs
insb
addr16
je
insl
add
inc
and
xchg
pop
xchg
movb
lea
jmp
add
inc
gs
gs
arpl
popa
jo
add
add
imul
outsb
je
outsl
insb
add
add
je
jb
arpl
jae
gs
imul
adc
test
stc
decl
inc
incl
lea
pusha
push
mov
cwtl
lea
seta
movsbl
lea
jmp
jmp
call
add
inc
jb
popa
je
inc
inc
inc
add
add
outsb
inc
insb
imul
add
mov
sbb
xor
ljmp
push
imul
add
dec
imul
add
push
ror
stc
bt
clc
movw
cmp
lahf
not
lea
setno
mov
pushf
lea
ja
push
lea
jb
call
add
push
gs
outsb
push
gs
js
gs
imul
gs
lea
call
clc
pusha
pusha
cmc
cmp
call
jmp
jmp
jmp
add
inc
outsb
fs
popa
imul
xor
inc
pop
cmpsl
jp
movb
push
pushl
ret
test
cmp
jmp
cmpb
call
add
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
add
popa
jo
jb
popa
je
add
mov
out
add
add
push
arpl
insb
insb
push
imul
add
add
insb
gs
imul
arpl
inc
imul
pushf
lea
jne
xor
shr
mov
inc
sbb
shrd
sub
bt
and
call
add
inc
insb
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
add
test
add
push
cmp
push
lea
je
pushf
pushf
lea
jmp
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
sub
test
call
loopne
fwait
xor
pushf
shr
mov
test
pusha
add
ror
add
mov
push
cmp
movb
test
call
jmp
pusha
lea
jae
clc
cmc
cmp
push
call
add
inc
insb
outsl
bound
inc
insb
popa
addr16
bt
pushf
neg
cmc
cmc
ror
call
call
pop
iret
out
inc
negl
inc
bswap
or
dec
cmc
les
adc
rclb
add
xor
mov
xchg
imul
imul
adc
sti
and
repz
jle
mov
loop
lcall
mov
and
jne
sub
bsf
sub
add
inc
movsbw
cmp
setne
mov
sbb
shl
stc
mov
pusha
cmp
cmp
repnz
pushf
call
add
push
gs
arpl
push
arpl
xor
mov
pusha
pushf
pushf
pushl
ret
add
push
gs
outsl
arpl
add
add
je
imul
je
js
pushf
pushf
call
jmp
pusha
movl
call
add
inc
imul
dec
gs
popa
addr16
add
add
je
jb
arpl
fs
jae
add
add
je
gs
imul
jae
arpl
jo
jns
add
insl
imul
jae
je
add
inc
gs
jns
je
insl
push
imul
or
test
jecxz
call
add
dec
data16
je
arpl
add
je
jbe
outsb
je
lea
jge
jb
cmp
test
push
test
cmp
movb
push
push
lea
jae
mov
jmp
sub
mov
add
add
btc
shld
ror
cmp
mov
sub
cmp
jmp
sub
cmc
clc
clc
stc
repnz
pusha
call
add
inc
jo
outsb
fs
outsb
jne
add
add
inc
popa
fs
outsl
fs
je
add
add
jo
jns
insb
imul
add
add
cltd
inc
dec
clc
xor
push
call
test
pusha
lea
jno
pushf
jmp
movsb
jb
rcr
dec
hlt
pop
adc
mov
shl
pop
ficompl
add
sbb
rol
cmp
mov
pushf
stos
adc
mov
int
sbb
dec
in
outsb
daa
adc
xchg
lahf
leave
xchg
lea
sbb
sahf
pop
jae
nop
jns
mov
jns
pop
and
sub
or
lods
or
add
jnp
pop
push
fdivs
or
dec
inc
push
mov
pop
push
adc
roll
mov
fs
xor
cmc
call
adc
movb
push
lea
jae
pusha
jmp
push
lock
std
std
andb
addr16
mov
ret
js
shrl
leave
lds
and
pushf
mov
pop
or
xor
sub
je
in
test
dec
push
and
aam
pop
les
call
xchg
xchg
and
cmp
pop
add
xchg
in
xchg
push
push
movsl
add
dec
cmp
xor
and
jmp
push
xlat
inc
add
push
gs
gs
popa
insb
jne
inc
js
add
decl
test
inc
push
jo
jb
add
std
mov
bt
test
movl
lea
je
cmp
add
bt
cmp
call
add
inc
push
inc
outsl
insb
outsl
jb
add
add
je
arpl
gs
imul
fs
je
pusha
mov
sub
call
add
dec
jne
je
inc
jns
gs
outsl
push
imul
pushf
push
lea
jb
clc
bt
bt
test
cmp
call
lea
call
pushf
push
adc
pushl
mov
call
lea
jne
ror
call
mov
lea
jne
pusha
jmp
pushf
lea
jae
cmc
bt
call
pushf
movw
lea
jae
cmc
bt
push
add
jmp
push
test
fadds
rolb
fimull
loope
sti
je
stc
sub
jmp
mov
stos
lcall
xchg
mov
xchg
test
ss
add
pop
stos
icebp
jb
fimull
aas
push
pop
adc
xor
idivb
push
scas
xor
jb
xchg
mov
xor
jl
pop
inc
cs
fadds
dec
xchg
mov
ljmp
xchg
inc
ljmp
adc
rolb
ficompl
cli
pop
push
divb
stc
inc
test
sbb
cwtl
mov
add
xor
xchg
add
sub
inc
pop
adc
repnz
xor
push
mov
sbb
iret
jp
shl
outsb
inc
faddl
cwtl
pop
inc
xchg
aam
lock
adc
sbb
mov
cmc
cmp
jge
sbb
push
imul
stos
das
lds
stos
jbe
call
mov
aam
in
enter
pop
cmp
xchg
cmpl
jge
pop
roll
pushf
or
mov
and
test
movsb
es
sub
mov
adc
in
or
sbb
ljmp
lret
es
aaa
mov
or
adc
imull
nop
mov
inc
mov
addr16
sbb
inc
int3
xchg
dec
arpl
xchg
movsb
pop
mov
daa
cmp
int3
pop
xor
add
jb
outsb
push
add
add
insb
imul
insl
imul
insl
push
jb
jo
jb
jns
xchg
inc
sub
fadds
xchg
and
fwait
lret
sti
scas
xchg
mov
inc
xchg
adc
insl
out
mov
push
or
cmc
idivl
inc
testb
mov
mov
sub
mov
jbe
insl
sub
xchg
sub
pop
mov
aam
sbb
lcall
mov
js
mov
xor
out
cmc
xchg
adc
pushf
pusha
mov
jge
cli
jno
xchg
aaa
popa
insb
xchg
das
xlat
cmp
xor
push
std
pop
mov
xor
mov
std
test
inc
push
add
inc
gs
dec
push
xor
add
push
outsl
jne
fs
arpl
sub
pushf
rep
push
mov
push
lea
jmp
add
insb
jae
jb
insl
jo
inc
add
add
je
imul
addr16
js
push
lock
std
std
addl
push
ret
jle
inc
pop
into
iret
pop
sub
pushf
mov
pop
pop
ss
rcr
in
fnstsw
dec
in
push
in
pop
push
iret
add
out
shlb
adc
test
add
inc
inc
mov
mov
stos
and
repz
into
cwtl
mov
jmp
adc
dec
mov
jmp
lea
movb
pushl
push
movl
call
add
ja
jbe
dec
jne
push
jb
je
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
xor
sub
bt
clc
push
clc
cmp
pushl
pushf
jmp
add
inc
jb
popa
je
push
outsl
insb
imul
lea
call
pusha
lea
jae
push
xor
pushf
pushf
call
lea
je
add
mov
neg
pushf
cmp
rcr
add
pop
mov
push
stc
pusha
jmp
call
push
jne
xlat
and
inc
pop
jne
fsubs
sbb
jg
jno
push
idivl
ljmp
xor
inc
int
dec
push
inc
repz
aad
movl
xchg
mov
or
leave
push
jle
sub
in
add
inc
cmpsb
iret
lret
dec
sbb
cltd
sub
sarb
lret
jl
stc
jnp
js
fldcw
dec
dec
sub
jl
lahf
adc
jae
leave
scas
iret
dec
xbegin
xor
enter
loop
dec
int3
adc
into
jl
jp
dec
call
ficoml
and
push
js
js
jno
adc
arpl
jle
mov
or
inc
cmpsl
jnp
push
sti
jg
in
mov
mov
push
fdivl
mov
mov
push
xlat
lret
mov
jl
dec
jns
outsb
test
sub
mov
sub
call
fs
lret
fdivrl
mov
push
jl
or
mov
or
iret
call
pop
jg
or
sub
or
push
test
addr16
xor
ja,pn
xchg
call
outsl
sbb
outsl
xor
out
pusha
mov
adc
push
jl
out
fs
inc
fbld
adc
imull
int
and
xchg
cmc
dec
in
std
sub
pusha
in
popa
stos
adc
or
cmc
movsb
in
jg
pop
imul
mov
sbb
outsb
jmp
addr16
jecxz
repz
xchg
push
pop
mov
pop
ja
jb
pushf
jns
movsb
in
sbb
pushf
dec
outsb
jo
cld
frstor
add
clc
sbb
movsb
or
sub
sub
pop
fsubr
call
adc
data16
jbe
jg
dec
je
pop
sbb
or
in
loopne
sub
cs
adc
insl
call
lods
cs
in
imul
sub
loopne
push
jne
sub
in
cld
cwtl
mov
mov
in
jg
outsl
jl
in
xor
inc
mov
pop
pop
mov
and
in
movsl
pop
enter
inc
and
jmp
cs
or
push
daa
or
scas
cld
sub
pop
call
cld
dec
lock
mov
push
outsb
cmp
repz
ss
jmp
test
enter
cld
cli
dec
outsl
jmp
xchg
fldcw
std
lret
cmp
sahf
cmc
ja
outsb
loopne
sbb
mov
sub
mov
jmpw
pop
out
outsl
add
call
inc
sub
outsl
push
cmp
roll
push
add
add
in
sub
push
out
add
mov
dec
mov
mov
xor
mov
add
popf
mov
dec
push
xlat
adc
rorb
sbb
sub
vcvttpd2dqy
pop
in
mov
sub
sub
repnz
fisttps
and
pop
test
fs
push
sti
daa
stos
push
in
in
push
or
clc
push
cmp
popf
ret
push
mov
dec
add
in
imul
and
jne
sar
cmp
jp
mov
jns
push
pop
stos
xchg
jecxz
jbe
push
mov
cmp
lods
lret
in
cmp
jo
cs
shll
in
data16
inc
outsb
data16
dec
clc
cmp
les
push
data16
sub
pop
dec
les
cs
outsb
inc
dec
cmpsb
dec
dec
rorl
mov
scas
inc
push
sub
in
test
jmp
pushf
jmp
ror
and
push
bnd
dec
dec
and
jge
push
arpl
sbb
mov
inc
in
in
push
jge
add
add
pusha
mov
dec
xchg
jnp
xor
fldenv
or
dec
add
loope
mov
mov
test
dec
dec
mov
pop
dec
sar
cmp
xor
cltd
push
pop
inc
ret
xchg
sti
inc
lds
pushf
int
xchg
outsb
cmc
jnp
adc
lds
push
scas
dec
push
repnz
inc
rolb
out
dec
inc
int
cs
clc
inc
in
cld
stc
pop
push
out
cltd
push
mov
rcll
jne
pusha
jmp
adc
push
inc
push
lret
add
push
mov
pop
test
jp
out
xor
jle
add
aad
jp
sub
push
stc
push
enter
jne
cmc
mull
push
dec
pushf
ljmp
dec
push
outsl
lods
jne
cmc
sub
adc
iret
jp
fsubs
lret
pop
adc
dec
jecxz
dec
cmpsl
adc
jp
jge
sbb
dec
xorb
add
jno
dec
mov
add
dec
jno
jl
dec
es
ds
add
jb
lods
movsb
addr16
jl
inc
sbb
jg
sub
in
std
or
jle
ja
jae
aas
shr
adc
jne
jmp
pop
jmp
fldl
out
cmp
imul
xchg
jne
adc
jle
mov
jmp
jmp
clc
jl
xchg
ljmp
cmc
aam
jbe
inc
mov
flds
cmpsl
jle
jo
jmp
repnz
jmp
sti
or
aaa
jne
aaa
jle
and
jle
and
dec
push
jne
icebp
sub
enter
mov
addr16
mov
cmp
jmp
jne
jmp
loope
jmp
mov
cmpsl
dec
jmp
cld
jmp
dec
jmp
cmc
xchg
mov
push
loop
xor
sub
mov
push
test
dec
arpl
fmuls
mov
jo
pop
pop
jmp
enter
inc
pop
jne
and
pop
xor
arpl
dec
sti
jne
dec
pop
jmp
push
inc
mov
test
push
stc
jl
lret
jmp
sbb
shlb
enter
imul
test
push
mov
or
push
dec
je
push
ljmp
or
inc
stc
cmc
popf
sub
loopne
adc
bound
cmp
adc
adc
js
dec
out
jb
add
jb
add
js
dec
inc
push
sti
push
iret
cmp
fimull
jmp
cmpsl
sbb
sti
sub
pop
sub
push
mov
adc
out
popa
iretw
adc
stos
xor
push
push
stos
jg
cmp
mov
clc
rclb
jnp
xchg
nop
cmc
push
push
cs
push
data16
jne
cmpsb
arpl
fldenv
jmp
jnp
int
testl
je
and
sub
bound
sti
push
and
jne
jne
jne
push
iret
dec
in
inc
cmp
and
mov
ljmp
test
cld
cmpsl
out
into
push
dec
jmp
cmpsl
loopne
addr16
and
and
es
call
int3
scas
sub
and
jmp
pop
push
leave
and
sub
ret
cld
mov
push
data16
dec
and
imul
jb
fmulp
xchg
pop
mov
push
in
mov
fmuls
mov
sub
jne
js
out
dec
ja
cwtl
push
js,pt
inc
mov
out
decb
jns
movsb
imul
in
jle
insl
sbb
inc
jl
mov
aaa
cld
int3
jl
fidivrl
aam
movsb
imul
fists
out
jae
lock
or
pop
and
push
in
pop
jp
dec
pop
push
dec
lret
out
pop
movsl
dec
dec
pop
call
jp
inc
jg
or
inc
pop
add
popa
fbld
or
xchg
inc
mov
aad
pop
or
mov
jmp
jmp
mov
sarb
inc
pop
sub
cwtl
pushf
sub
lret
pop
jns
bound
out
push
movsb
lock
xchg
dec
not
out
arpl
xchg
movb
js
call
sbb
pusha
mov
bound
mov
sbb
outsb
fs
bound
and
cmp
push
aaa
push
test
data16
mov
or
push
dec
jg
lock
pop
fstpt
inc
test
or
or
imul
cmp
xor
ret
faddp
jg
out
int
outsb
push
adc
popa
leave
in
jg
into
int3
adc
aad
inc
ret
fdivr
jp
movl
push
fs
sub
aas
iret
popa
mov
or
ret
in
push
cmpsl
mov
cmp
shrl
or
push
js
stos
jns
pop
in
mov
out
sub
out
inc
push
iretw
outsb
je
push
push
jle
add
dec
out
pop
pop
cmp
bound
out
rcrb
outsb
dec
or
jo
daa
in
outsb
movsl
push
ds
push
lock
insl
adc
mov
adc
cmp
gs
jmp
shrb
sahf
js
and
cli
les
pop
cmp
bound
sbb
dec
dec
scas
icebp
das
out
sbb
and
jp
sbb
outsb
out
pop
push
and
nop
ret
orb
add
and
adc
jmp
popa
push
inc
cld
jle
mov
xor
jns
inc
adc
pop
scas
dec
int3
lock
outsb
pop
sub
cs
scas
jb
test
js
pop
je
outsb
test
lods
dec
dec
mov
fimuls
lods
pop
pop
xchg
sbb
daa
gs
inc
dec
outsb
pop
pop
jne
pop
adc
lret
dec
sbb
mov
mov
stos
xor
aad
outsb
fcmovnbe
push
clc
lods
push
pop
and
out
aaa
imul
enter
jbe
pop
sub
jge
sub
leave
outsb
xor
push
xlat
dec
fildll
pop
in
mov
lock
push
ja
sub
inc
hlt
push
or
shr
jmp
lret
lret
dec
push
dec
xchg
and
xchg
sbb
inc
cld
ret
sub
outsb
inc
push
fmulp
sar
add
fisttpl
xchg
movl
pop
sbb
sub
dec
xchg
jg
sub
fnstsw
ficoms
pop
and
out
add
outsb
pop
jl
xor
lret
ret
pop
xor
sub
int
dec
je
shrb
stos
movl
hlt
test
push
call
call
mov
cld
ret
outsb
jl
outsl
pop
push
imul
jl
cmpl
pusha
and
lea
cli
and
ja
lods
out
scas
push
inc
dec
cmp
jo
jle
xor
sarb
pop
scas
fdivp
int
jp
into
jmp
mov
jp
pop
out
cmp
add
dec
aaa
in
cld
aad
dec
imul
jo
popa
clc
dec
sub
or
out
movsl
bsf
xor
outsb
push
sarb
sti
inc
fsubrs
call
mov
mov
sbb
sub
add
jge
xchg
fldcw
loop
or
inc
fldl
pushf
outsb
jae
push
outsl
sub
ss
push
cmpsl
dec
stc
pop
adc
ds
pushf
daa
ja
sub
mov
mov
into
icebp
jle
mov
sub
jl
lret
fnsave
inc
add
jg
mov
inc
ficoml
dec
bound
sbb
pop
xbegin
shll
pop
mov
enter
jo
ja
hlt
push
insb
cmp
movsb
ljmp
fildl
les
push
test
push
rdtsc
jbe
lea
dec
dec
outsb
mov
jb
mov
call
sbb
dec
fistpl
addr16
add
push
jae
aad
adc
call
out
add
lds
cmpsb
out
dec
jmp
adc
frstor
mov
cmp
sbb
jnp
push
out
xchg
stos
pop
mov
adc
mov
cmp
cmp
add
mov
inc
push
ja
lock
addb
jae
inc
addr16
and
jge
das
js
ss
iret
out
jo
cld
fisubrl
js
dec
and
xchg
stos
ljmp
cltd
pop
mov
add
out
out
cli
push
pop
fnsetpm(287
jo
les
jp
jmp
inc
or
and
outsb
push
cmpsl
cmp
icebp
ljmp
ret
popa
shll
jo
and
jle
add
sub
add
jge
jo
cld
lods
fimuls
xor
mov
lods
push
insl
pop
push
sbb
ljmp
push
pmuludq
sub
dec
cmp
xor
adc
or
aam
fsubp
pop
out
mull
ljmp
jp
roll
jo
fs
imul
js
cmc
outsb
shlb
scas
add
test
mov
sub
dec
loope
nop
or
push
dec
pushf
out
inc
dec
mov
popa
pushw
push
test
sbb
pop
stos
xorl
sbb
lret
outsl
ret
lds
inc
js
inc
jbe
out
inc
aad
push
ljmp
pop
adc
icebp
jns
and
lcall
gs
cs
jle
test
inc
test
pop
dec
jbe
int
inc
es
dec
pop
ds
enter
ss
push
xor
xor
les
xor
cmp
sbb
aam
push
inc
iret
jb
pop
rorb
xchg
test
xlat
out
push
sub
push
daa
stc
sti
add
daa
push
mov
cmp
sbb
jmp
xor
push
jnp
inc
fs
jns
mov
dec
and
jle
scas
pop
pop
loop
jl
insb
mov
inc
adc
in
loopne
pushf
aad
pop
outsl
in
insb
xchg
pop
imul
outsb
jo
fsubrp
fildll
cmp
and
int
bound
stos
and
and
xchg
mov
jp
push
les
inc
mov
andl
es
sub
sahf
roll
in
push
push
inc
jmp
dec
or
in
fistps
sar
into
fs
clc
fs
inc
pop
lock
inc
popa
push
sbb
jo
in
popf
orb
push
outsl
clc
js
imul
in
jnp
stc
cmp
cld
jl,pt
adc
arpl
inc
cs
cmp
pop
das
fs
bound
jb
call
es
mov
test
call
push
enter
mov
sbb
xchg
dec
xor
pop
jle
pusha
data16
sub
pop
sub
rorb
and
mov
and
push
adc
ror
fisubrl
push
leave
inc
das
rclb
push
call
movsl
jo
loopne
pop
jle
adc
pop
imul
popa
pop
ss
pop
xchg
and
pop
pop
xor
add
jp
dec
dec
and
ja
je
xor
aas
lods
test
inc
dec
arpl
inc
dec
dec
in
or
arpl
dec
xlat
aaa
mov
inc
cmpsl
les
pop
inc
jae
pop
jp
in
arpl
dec
pop
jae
insb
aas
push
les
push
jp
ds
jb
insb
jg
cmpsb
faddp
mov
sub
inc
addr16
push
jl
fisttpl
int3
add
inc
push
mov
push
cmpsb
dec
es
loop
js
sub
ret
js
cmc
ss
sub
xor
pop
dec
jb
shrl
jl
dec
call
adc
clc
add
mov
cmp
leave
outsb
das
or
sbb
mov
fs
sahf
mov
push
ds
push
adc
jae
stc
stos
in
dec
jle
sub
dec
jo
and
and
jl
int
arpl
push
xor
pop
ss
test
pop
sbbb
loop
in
arpl
add
and
push
jns
and
mov
aam
and
pushf
movsl
or
dec
stos
nop
ret
mull
push
out
stos
jle
mov
ret
test
xchg
pop
sub
push
les
push
push
xor
cmp
inc
jecxz
pop
imul
xchg
and
cld
dec
les
push
jmp
es
out
test
in
mov
clc
pop
pop
imul
and
in
add
push
ss
rclb
inc
or
bound
addr16
cmp
jle
sub
jns
lret
outsl
sbb
fisttps
add
and
dec
out
mov
data16
and
inc
push
dec
addr16
push
js
sub
psubsb
es
out
mov
lods
or
rclb
or
dec
je
and
jo
cmp
addr16
sti
inc
stos
jbe
pusha
dec
add
clc
or
fcoml
hlt
pusha
enter
inc
cmp
pop
movl
jbe
pop
jl
pop
push
in
pop
sahf
sub
jnp
insb
xor
les
test
pop
inc
ds
push
test
cli
inc
dec
sub
mov
push
das
imul
push
das
jecxz
adc
lgs
inc
xchg
xadd
and
insl
sub
dec
pop
push
test
sbb
pop
pop
push
and
pusha
sub
mov
shl
push
dec
sub
les
stos
out
sub
jl
in
cmpsb
insl
sub
inc
mov
in
push
outsl
sub
dec
call
jle
testb
sub
cmp
cmp
push
sbbl
push
pushw
lds
and
sbb
stos
pusha
jmp
jl
movsb
dec
mov
inc
call
pop
fsubrl
push
adc
test
call
pop
pop
jg
lahf
outsl
sub
jl
sub
jno
dec
ljmp
lea
inc
jl
jne
nop
dec
dec
in
int
in
arpl
push
push
push
jl
jne
sbb
push
je
jne
pop
int3
shr
cpuid
in
xchg
push
or
pusha
dec
test
clc
shl
mov
lods
test
pushf
pusha
bt
xor
jmp
mov
pushf
movw
pusha
mov
pushl
ret
not
cmc
ror
stc
cmc
test
cmp
pop
pop
mov
not
lea
not
setbe
cwtl
pop
pushf
call
add
inc
jb
popa
je
inc
imul
or
fmuls
mov
xor
jb
pop
adc
ret
push
push
out
sti
stos
imul
pop
cltd
and
add
loop
mov
aas
subps
push
lods
andb
icebp
mov
aas
inc
out
pop
xor
pop
rcll
sub
gs
fadd
push
mov
mov
or
mov
jge
fistpl
ret
add
and
push
call
lea
clc
inc
jno
fcmovu
pop
int
test
xchg
sbb
cli
clc
mov
sbb
pushf
mov
fadd
pop
dec
pop
jg
ja
or
xor
mov
xchg
movl
sbb
imulb
sub
lret
sub
pop
xlat
rcl
mov
or
jno
rcrl
mov
fcmovnu
pop
and
mov
mov
add
leave
cmpsl
sub
rcl
mov
push
cs
pop
sahf
mov
sbb
inc
xchg
leave
mov
scas
cltd
adc
push
faddl
add
je
jb
jo
add
stc
add
sub
ja
clc
pushf
stc
cmp
lea
js
jb
call
movw
mov
lea
jb
pusha
cmc
movb
call
add
inc
gs
imul
repnz
movb
push
call
mov
or
fadds
jo
add
rorb
popa
aaa
fcoms
and
adc
js
scas
push
mov
ss
cmpsl
lods
mov
and
cmp
xchg
mov
aas
rcl
cli
pop
adc
add
add
xor
xchg
sub
ret
cmpsl
movsl
cmc
ja
jmp
pop
jo
neg
out
add
fadds
dec
adc
or
inc
xchg
adc
xchg
cmpsl
ljmp
stos
fcom
ret
ds
mov
xchg
dec
fwait
sub
push
xor
adc
xor
mov
mov
push
add
mov
pop
jp
sbb
jge
add
mov
jbe
shr
mov
mov
mov
aad
sub
stc
in
push
pop
testl
mov
fadds
and
aam
stc
xor
adc
xor
xchg
int3
pushf
sub
mov
jns
mov
pop
push
es
push
shll
aam
fldt
adc
rolb
sarl
out
and
icebp
divl
cmp
mov
mov
rorb
xchg
and
jne
mov
xorl
push
dec
mov
push
jae
and
jo
gs
or
mov
pushf
mov
fmull
and
and
in
push
jnp
jo
mov
insb
gs
jae
push
gs
popa
jo
outsl
jb
add
add
je
outsl
jns
imul
pushf
lea
call
call
add
inc
gs
popa
jo
jne
add
fisttps
and
mov
fs
ja
pushf
add
sub
sub
shl
not
lea
add
movzbl
shl
clc
call
add
inc
gs
je
imul
push
add
adc
lea
jne
adc
shl
pusha
rcr
mov
test
add
test
test
pushf
cmc
movzwl
clc
pushf
mov
call
add
push
outsb
insb
outsl
arpl
imul
incl
add
dec
gs
arpl
inc
js
add
add
call
add
dec
jae
push
mov
pusha
pushf
pushl
ret
lea
jb
stc
pushf
jmp
lea
ja
ror
pushf
clc
not
jmp
push
movw
lea
call
pushf
push
lea
jae
push
cmp
xor
call
lea
je
push
jmp
mov
or
fadds
jno
test
adc
cltd
jle
mov
into
xor
insl
push
xlat
lds
sub
and
mov
sbb
ja
cwtl
sub
outsb
mov
int3
rclb
in
sbb
in
movsb
arpl
xchg
jp
sub
sahf
sbb
mov
arpl
cltd
js
sahf
jne
pop
subb
comiss
lahf
push
cld
negl
aaa
xchg
jp
sbb
push
fcomp
pop
es
xor
inc
test
jb
adc
fistps
xor
out
leave
and
jno
jge
cld
mov
jp
outsb
inc
adc
sarb
std
in
int
gs
cwtl
xchg
imul
or
push
fdivrs
pop
add
push
js,pn
pop
inc
push
and
sahf
fiaddl
mov
sub
jp
sahf
add
pop
adc
jp
ljmp
mov
and
mov
mov
mov
je
pusha
fistps
push
pxor
je
sets
pop
jbe
cmp
mov
xor
das
sbb
mov
sub
int
jns
cmp
stos
sbb
jp
int
call
push
adc
data16
aad
and
sahf
inc
xchg
push
add
push
sbb
fs
jne
call
pushf
cmp
pushf
lea
ja
jae
bsr
cmp
adc
shld
mov
test
sar
btr
bts
mov
shld
mov
call
pushf
adc
lea
pusha
call
add
dec
outsl
jbe
push
imul
fs
je
mov
add
and
mov
jmp
push
pushf
mov
mov
lods
cmp
movw
xor
movb
clc
cmp
sub
call
gs
loope
pop
sub
sbb
inc
ret
js
pop
pop
mov
inc
dec
pop
rol
aam
clc
cmp
push
js
add
test
inc
lock
ret
add
mov
push
hlt
push
pop
fisttps
sbb
mov
dec
fstl
mov
pop
cmp
repnz
adc
in
xchg
sub
jl
mov
jp
add
enter
mov
cli
repnz
add
inc
data16
scas
mov
dec
push
xor
mov
cmp
test
iret
mov
movl
pushl
lea
jmp
add
push
imul
add
add
imul
ja
jb
insl
push
outsl
imul
hlt
pusha
lea
jmp
add
push
gs
jne
jae
jb
outsl
jae
add
inc
jb
popa
je
inc
arpl
insb
gs
je
jb
popa
bound
add
es
pop
xchg
aad
int
sub
cltd
xchg
inc
jo
cmp
sub
add
inc
dec
pop
rolb
fistl
sbb
mov
or
pop
inc
pushf
mov
push
ds
jle
dec
in
cltd
in
cmpsb
cltd
cmp
rcrl
cwtl
mov
ret
in
pop
push
jecxz
mov
mov
mulb
iret
loop
pop
ds
lahf
leave
or
xchg
push
pop
push
nop
pop
fadd
push
aad
jp
push
push
jb
sbbb
cli
sarb
dec
outsb
and
mov
xchg
cmp
jp
push
push
repnz
push
in
out
mov
out
jnp
imul
mov
popf
lods
icebp
xor
add
es
add
pop
mov
testb
or
out
dec
push
aad
dec
repnz
xlat
mov
adc
scas
shl
pop
cmpsl
sti
iret
xchg
add
push
cmp
ret
lods
das
xchg
xchg
sub
cltd
int
aad
test
loop
mov
shrl
mov
test
cmp
shr
ljmp
negb
dec
je
in
add
pop
pop
repz
addr16
hlt
ja
imul
mov
es
in
mov
xchg
cmp
data16
test
jo
or
jo
or
call
pop
ljmp
push
lea
je
cmc
sbb
bts
rol
add
push
mov
mov
add
test
mov
mov
rcr
bts
mov
cmc
pushf
cmc
cmp
pushf
push
call
add
inc
popa
insb
insb
dec
gs
dec
outsl
outsl
imul
cmc
clc
not
cmc
ror
call
add
inc
jb
gs
outsb
jbe
jb
outsb
insl
outsb
je
je
imul
add
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
test
int
jmp
fs
jb
bt
pusha
test
bt
cmp
pusha
mov
mov
jmp
pushf
mov
clc
test
pusha
lea
je
clc
cmc
jmp
add
inc
gs
outsb
jne
je
insl
dec
inc
add
dec
mov
push
jmp
and
adc
rorl
add
sub
and
test
insl
pop
sub
fdivs
sub
sub
xor
int
add
mov
and
mov
rolb
int
mov
and
test
data16
test
adc
ss
icebp
inc
adc
nop
xlat
sbb
cmp
pusha
cmp
push
pushf
push
lea
jae
movzbw
push
pop
pusha
mov
movl
bswap
not
lea
mov
movb
mov
push
lea
jmp
add
inc
push
outsb
jne
je
insl
add
add
popa
jns
je
imul
add
and
fadds
imul
adc
xor
mov
mov
push
inc
into
enter
sbbl
inc
lock
loope
or
popa
jecxz
stc
scas
add
and
dec
push
sarb
orb
dec
jp
add
cmp
xor
clc
rclb
cs
jnp
test
xchg
ret
jl
sbb
fdivr
test
lahf
sar
inc
push
add
inc
jb
popa
je
inc
imul
imul
jb
insl
inc
add
push
out
pop
int
inc
insl
int
sarl
push
xchg
mov
cmp
push
lods
movsb
bt
sub
clc
sti
rclb
mov
or
mov
dec
hlt
mov
loope
hlt
lock
pusha
sub
xor
dec
cmpsl
or
sub
push
iret
popa
mov
xchg
std
dec
ss
or
xlat
fnstenv
dec
inc
daa
mov
inc
rolb
pop
push
lock
test
lds
sub
xchg
shl
dec
test
jl
fidivrl
out
rcll
add
fs
arpl
inc
add
bt
test
test
call
cmc
test
jmp
add
push
gs
gs
jae
inc
inc
add
add
je
outsl
insb
jns
imul
movb
clc
mov
test
test
test
mov
pushf
pushf
lea
je
jmp
add
inc
jb
popa
je
inc
dec
inc
imul
dec
outsb
jbe
insb
imul
je
scas
stc
jbe
fadds
adc
jb
or
loop
out
sbb
mov
insb
enter
sbb
fs
ret
imul
scas
or
cmp
out
sbb
mov
cs
jbe
das
popl
add
iret
push
addb
push
jge
xchg
scas
mov
mov
icebp
mov
test
shrb
sub
test
mov
inc
gs
outsl
insb
jns
imul
add
push
je
imul
add
insb
jae
jb
jo
inc
add
add
je
insb
je
pushf
stos
pusha
mov
pusha
lea
call
jmp
add
inc
gs
jns
je
insl
dec
outsb
jne
add
inc
gs
imul
outsl
jb
add
dec
outsl
jbe
push
outsl
inc
js
popf
lods
ret
call
lret
jbe
inc
xchg
inc
aas
fcomps
pop
pop
jmp
inc
adcb
ljmp
imul
push
sti
sub
and
pop
adc
sbb
pop
fistps
out
inc
repz
jmp
xchg
sub
mov
push
out
jle
and
mov
sbb
or
incl
add
outsb
fs
gs
jne
arpl
add
fsubr
lea
movb
lea
mov
pusha
cwtl
lea
pushf
movl
call
dec
dec
inc
inc
push
push
xor
cs
insb
add
fmuls
pop
popf
sbb
sahf
fstps
or
fmull
pop
pop
fcompl
sbb
sahf
pop
sbb
cltd
fmuls
push
pop
pop
fstps
sbb
fistps
or
rcrl
or
fistps
cltd
popf
fstps
jno
mov
dec
shr
cmp
cmp
mov
jmp
add
inc
gs
outsl
arpl
push
imul
gs
jb
imul
imul
sub
jge
bt
repnz
call
call
push
not
rcr
and
push
clc
dec
push
cmp
clc
shrd
mov
xchg
shl
mov
clc
rcl
mov
pushf
mov
or
pusha
call
add
inc
gs
imul
dec
jb
inc
js
pusha
call
shl
mov
bt
jmp
add
inc
gs
jb
jo
add
mov
mov
add
lea
ja
inc
sub
push
call
call
lea
jne
pusha
setp
pushfw
popw
xor
mov
test
clc
clc
xor
call
add
inc
jb
popa
je
push
gs
popa
jo
outsl
jb
inc
add
adc
fadds
jg
xchg
mov
je
xchg
pop
fistl
data16
enter
rol
data16
popa
roll
mov
ss
pop
mov
mov
and
into
repz
fildl
mov
test
lds
add
inc
pop
xor
dec
pinsrw
mov
ret
mov
add
inc
gs
jne
jb
outsb
je
push
dec
add
add
je
gs
je
jo
imul
add
je
jne
jb
outsb
je
push
add
add
je
jb
arpl
jae
gs
jo
lea
jne
call
adc
sub
pop
stos
push
pop
fs
out
in
data16
stos
push
and
fs
sub
push
dec
inc
movsb
dec
jg
into
jle
jle
dec
adc
jg
pop
jo
js
dec
pusha
imul
addr16
movsb
cmp
xor
inc
addr16
jle
dec
inc
movsb
pusha
jg
jl
sub
push
test
addr16
mov
in
call
inc
dec
dec
movsb
jae
jns
fs
sbb
jle
dec
push
movsb
xor
dec
and
jle
dec
inc
movsb
push
jg
dec
jns
or
sbb
jg
mov
movsb
jno
dec
dec
inc
inc
test
rcll
call
inc
jecxz
lods
mov
cs
daa
outsl
dec
jle
dec
jle
addr16
js
push
add
or
xor
cmp
and
push
jg
dec
inc
dec
test
addr16
inc
in
sbb
or
cmp
sub
push
movsb
pop
jg
dec
dec
jno
jnp
insl
jle
dec
adc
jg
dec
xor
test
addr16
dec
push
movsb
pop
jg
dec
dec
jno
jle
fs
dec
adc
push
or
cmp
es
jle
dec
inc
movsb
jge
jns
sbb
dec
sub
or
pop
movsb
push
jg
dec
sub
pop
jle
dec
jno
jnp
insl
dec
jne
pop
fst
call
xor
dec
and
inc
test
addr16
jne
outsl
sub
pop
in
jg
dec
or
aaa
addr16
es
dec
pop
inc
test
addr16
jle
dec
jle
imul
push
cmp
dec
sub
dec
test
addr16
push
push
push
xchg
or
or
sub
push
dec
dec
sub
std
push
xor
js
popa
push
mov
jle
dec
jmp
push
call
or
call
test
jp
dec
dec
inc
pop
test
addr16
jle
dec
cmp
imul
dec
jno
dec
jg
dec
pop
push
test
addr16
jle
dec
or
sbb
push
test
movsb
clc
jg,pt
dec
pop
pop
test
movsb
call
jo
jnp
arpl
push
into
movsb
call
xor
jle
dec
pop
movsb
dec
jg
dec
inc
jg
popa
imul
outsb
sbb
movsb
or
dec
cmp
test
addr16
push
dec
pop
movsb
inc
jg
dec
jno
stos
push
dec
outsl
sub
scas
in
jg
dec
push
xor
and
movsb
sub
push
dec
inc
dec
test
addr16
jl
jne
sbb
sbb
or
sub
jg
dec
pop
dec
test
addr16
popa
dec
outsl
sub
in
jg
jl
test
xor
jl
cmpsb
jno
daa
hlt
call
aaa
pushf
call
jo
dec
jg
dec
push
sub
cmp
dec
add
es
pusha
inc
test
addr16
jle
dec
push
movsb
das
jg
dec
cmp
test
addr16
mov
jge
dec
dec
inc
movsb
push
jg
dec
cmp
sub
in
add
pushf
call
push
je
dec
dec
test
addr16
outsb
push
pop
shl
call
cmp
in
push
int3
inc
add
inc
fisubs
sbb
call
push
push
outsb
fs
enter
push
push
mov
jle
inc
in
ds
push
cmp
addr16
in
add
or
aaa
test
pop
ja
pop
int
inc
movsl
jmp
out
or
in
jb
in
adc
push
sub
dec
sub
xor
xor
jle
dec
lea
xchg
dec
out
test
addr16
leave
dec
inc
movsb
fdivrl
dec
push
scas
test
and
dec
mov
mov
or
sbb
cwtl
addr16
jle
dec
imul
loope
jle
inc
dec
jo
test
addr16
jle
dec
push
movsb
pop
jg
dec
cmpsb
aas
test
xor
dec
add
call
decl
movsb
jo
dec
dec
dec
shrl
dec
shll
mov
jle
dec
andb
fwait
outsl
data16
dec
jp
icebp
jg
dec
aad
test
addr16
jle
dec
mov
and
dec
mov
test
add
dec
xchg
sub
popf
in
jg
dec
test
jle
dec
sub
or
cwtl
dec
pop
movsb
xchg
jo
dec
sbb
call
jnp
jge
inc
dec
fcom
test
addr16
dec
movsb
or
in
dec
out
test
addr16
xlat
movsb
sub
dec
test
adc
outsl
push
iret
dec
inc
fsubrs
mov
jg
dec
sbb
loope
hlt
jle
dec
aad
inc
jg
dec
lods
and
sub
dec
mov
dec
outsb
jns
lds
jle
dec
ret
jg
dec
sub
jle
dec
pushf
movsb
gs
out
jg
dec
ja
test
fs
push
xlat
movsl
popa
pop
divl
rcr
inc
pop
xorl
ljmp
lds
cmp
lock
hlt
ds
loope
inc
push
js
and
leave
out
mov
test
jb
push
xlat
fcompl
fsubs
lret
push
jne
pop
sti
daa
and
ss
jmp
sub
loopne
int
push
sti
scas
iret
mov
imul
ljmp
fcomp
fdivrp
das
push
push
add
leave
jns
inc
adc
ficompl
push
pop
and
pop
int3
sbb
push
fiadds
lea
in
pusha
dec
adcl
pusha
jge
iret
ja
push
add
inc
xor
mov
ficompl
inc
nop
dec
pop
dec
fsubl
pop
gs
orb
or
insl
out
cmc
aad
sub
dec
xchg
pop
xor
adc
cmp
xlat
bound
xor
arpl
int3
sti
leave
sarl
pop
cmp
xchg
inc
inc
addb
iret
pop
js
push
stos
adc
mov
mov
call
mov
lret
push
mov
xchg
mov
jl
jnp
shlb
std
fimull
push
mov
and
dec
cmp
cmc
dec
pop
adc
jecxz
xchg
std
inc
int3
sbb
adc
xchg
xor
jbe
mov
popa
xchg
enter
ds
scas
mov
js
fsubr
jnp
pop
add
movsl
fnstenv
jae
into
cld
call
mov
das
data16
mov
js
add
fxch
inc
loop
dec
or
inc
mov
jecxz
push
sarl
jns
jae
incl
pop
pop
jns
mov
sbb
xlat
dec
loope
dec
aad
ror
and
lods
pop
push
or
fmull
movsl
rol
xchg
push
sub
out
mov
mov
push
cmp
pusha
addr16
dec
mov
push
mov
fnsave
xchg
xor
lret
inc
iret
cmp
dec
and
jne
jle
cwtl
loopne
push
jg
daa
jae
into
cmp
inc
pop
mov
push
fildll
cmp
sub
mov
iret
mov
arpl
mov
or
cmc
push
push
inc
push
jne
pop
sub
negl
inc
cmc
cmp
jp
xlat
test
cmp
mov
arpl
into
inc
xor
sub
scas
jo
aas
inc
push
dec
daa
fiaddl
add
icebp
add
xor
orb
sub
cmp
hlt
cs
xlat
jl
filds
cmpsl
dec
out
shll
mov
and
push
inc
dec
outsb
add
jle
or
dec
jge
inc
push
push
mov
xor
stos
dec
loopne
imull
lock
and
inc
ror
and
pushf
add
jo
and
imul
call
dec
jmp
lods
or
hlt
loopne
inc
call
dec
dec
inc
inc
mov
jp
rorb
int3
in
sbb
or
dec
in
or
call
fs
hlt
push
push
jge
imul
cld
and
imul
ja
imul
mov
in
push
loope
push
dec
inc
data16
data16
gs
nop
xor
jl
dec
and
in
pop
jmp
and
inc
pop
and
dec
loop
mulb
daa
mov
jl
push
loopne
pusha
jb
mov
aam
outsl
in
movsb
jmp
jnp
outsl
nop
outsb
bound
test
iret
push
mov
mov
idivb
arpl
push
cmp
dec
or
call
or
iret
push
or
out
je
pop
ja
jbe
jo
mov
xchg
mov
nop
jo
push
sbb
icebp
scas
scas
imulb
xor
lea
push
push
fs
push
mov
jl
jl
xchg
jl
or
clc
mov
sbb
fwait
or
or
mov
in
rorb
enter
out
dec
cmpl
call
loopne
adc
xchg
addl
sub
sbb
call
lods
and
int3
or
je
mov
gs
clc
jl
adc
fsubl
inc
add
in
fsubrp
push
jns
mov
xor
add
inc
push
sub
dec
mov
or
add
sbb
mov
dec
sbb
lock
pop
call
test
out
or
in
add
mov
dec
adc
loopne
in
cwtl
idiv
pop
push
call
sub
loopne
or
loopne
inc
jl,pn
adc
hlt
sub
jecxz
hlt
pop
mov
jbe
sub
jno
hlt
notb
lock
sbb
cld
mov
dec
testb
xorb
addb
mov
dec
fistps
push
hlt
int3
loop
jbe
mov
int
rcrl
subl
fcomip
dec
lods
xchg
or
add
add
dec
insl
pusha
inc
insl
push
ss
ja
jo
jbe
jno
loop
push
push
adc
push
hlt
shll
lods
sarb
add
out
pop
mov
push
add
jb
dec
outsl
jno
je
mov
ja
fiadds
dec
adcl
cmpsb
jp
pop
sub
xchg
push
in
pop
mov
ss
mov
jno
lret
lret
and
dec
je
call
iret
mov
lock
int3
inc
or
test
cmp
xchg
leave
mov
adc
xor
jge
fidivrl
fiadds
iret
arpl
mov
lea
sbb
jle
ljmp
arpl
jl
mov
pop
sbb
and
push
mov
fisubl
add
push
jne
idivl
addr16
and
in
sbb
bound
cltd
cwtl
pop
jno
dec
sbb
loop
in
adc
call
in
jne
movsb
sbb
dec
in
dec
cs
and
enter
sbb
leave
jl
dec
cwtl
stc
pusha
in
cs
inc
enter
jo
and
mov
inc
jg
pop
aas
enter
jo
xor
push
mov
and
enter
sub
push
and
cwtl
ret
push
ljmp
loopne
pop
jle
in
mov
sarb
adc
lods
dec
stc
push
in
cmp
jae
enter
test
test
xor
bound
jnp
pushf
mov
or
hlt
ss
jle
rcl
in
xchg
pop
jp
add
lret
sub
dec
call
pinsrw
xchg
jp
inc
mov
sub
xchg
addr16
enter
inc
sarl
jne
jne
sti
adc
sbb
out
ss
add
roll
hlt
pop
in
push
cwtl
out
mov
fs
inc
sub
inc
gs
nop
loope
xchg
jb
in
scas
ficoms
inc
js
fwait
dec
iret
fwait
aaa
in
mov
inc
pop
js
jmp
pop
adc
in
inc
adc
sub
or
mov
xor
pop
fsubr
push
dec
and
dec
adc
int
cwtl
shrl
add
mov
loope
movsl
fs
sub
pop
adc
call
das
mov
sbbl
jnp
sbb
mov
mov
fmulp
pop
cmc
mov
xor
pop
xchg
sub
adc
sbb
xchg
loope
sar
xchg
jmp
in
dec
push
push
and
ficoms
js,pt
test
iret
pop
fcomi
cmp
xchg
out
push
les
adc
add
xor
ficompl
rolb
mov
cwtl
mov
call
or
mov
outsb
lret
mov
leave
or
fs
mov
lcall
jns
add
sbbb
cmp
pop
lods
dec
out
push
dec
das
mov
inc
and
xchg
mov
cmc
pushw
ss
push
add
inc
fcompl
pop
sbb
ss
nop
sbb
mov
xchg
sbb
push
xchg
xchg
push
push
lods
pop
dec
push
inc
out
movb
aas
out
mov
and
push
fcompp
stc
push
jmp
xchg
imul
call
mov
in
outsl
jmp
in
or
and
ja
hlt
shr
jge
jmp
jno
jle
dec
call
call
inc
into
inc
or
lock
je
sub
pop
out
push
in
adc
add
xchg
inc
fnsave
clc
in
mov
movsl
test
ret
jmp
ret
adcl
int3
insb
dec
iret
dec
into
dec
leave
dec
enter
dec
lret
inc
inc
insb
movl
inc
inc
popa
je
push
pop
fstps
fcomps
pop
fisubl
xor
in
push
rcll
push
je
lds
divb
imul
sti
dec
push
cld
les
cld
sti
jo
sbb
mov
mov
push
loop
sub
jae
inc
cmpb
pop
inc
call
sbb
js
push
stos
fildll
insb
mov
xor
pop
adcl
test
jae
jmp
jns
sub
ljmp
bound
in
mov
lods
insb
popf
push
xchg
pop
popa
leave
test
sbb
sbb
in
mov
dec
jle
js
nop
inc
lret
mov
jl
test
push
mov
and
lahf
mov
mov
sbb
test
pop
iret
mov
push
cmp
inc
rcrl
out
lods
push
jge
mov
scas
int
mov
insb
ljmp
cs
pop
pop
clc
iret
push
out
xchg
sbb
lds
mov
test
push
int
push
out
sub
pop
xchg
dec
jle
int3
inc
hlt
scas
into
push
outsl
out
and
lcall
roll
adc
xchg
mov
or
inc
orl
stc
test
movsb
out
dec
dec
jle
dec
inc
ret
int
dec
js
out
inc
sbb
mov
jle
jecxz
xchg
out
push
in
mov
lods
mov
test
stc
mov
stos
ljmp
lea
sub
xchg
cmc
lret
mov
stos
pop
subb
mov
icebp
testl
pop
in
xlat
hlt
fcmovnu
push
and
dec
std
mov
jl
iret
je
pop
insb
or
push
fs
push
lock
jae
cmpsb
adc
lods
dec
addr16
jb
cmp
jge
xor
stos
fs
int3
jg
dec
or
sub
pusha
das
mov
jbe
dec
ja
lret
iret
popa
lret
hlt
shrl
cmpsb
fisubs
enter
mov
data16
pop
pop
push
ljmp
xchg
lret
mov
and
xor
popl
mov
or
aas
call
in
mov
popw
pop
mov
xchg
or
mov
sub
adc
insb
fwait
xor
aaa
cwtl
push
lahf
mov
cltd
pop
push
je
xchg
add
mov
xchg
jb
push
or
xchg
mov
xor
xor
mov
lods
inc
mov
mov
in
jl
add
adc
mov
inc
fnsave
lods
add
pop
mov
or
rcrl
xor
adcl
pop
rcl
ja
adc
cmp
mov
mov
xor
mov
test
or
push
add
push
jbe
mov
arpl
adc
cld
iret
pusha
incl
fwait
leave
out
in
mov
cld
jo
arpl
in
in
push
mov
inc
out
pushw
xchg
or
scas
sub
mov
inc
sbb
les
data16
sbb
addr16
mov
imul
adc
repz
xchg
lea
mov
stos
ss
in
push
pop
cmc
cmpsb
setns
adc
sti
cmp
cmp
push
xor
cmp
or
insl
js
pop
adc
mov
inc
setnp
add
imul
sti
pop
cmc
push
add
lret
jb
es
insl
sbbl
or
push
dec
pop
and
int3
jns
enter
das
add
mov
mov
pop
sbb
jbe
mov
pop
inc
add
punpckhbw
push
xor
add
mov
xchg
int3
or
outsb
fnstenv
jg
int3
imul
or
outsl
adc
mov
js
arpl
mov
scas
mov
xchg
mov
loopne
rcr
addr16
sub
mov
loope
pop
mov
aad
ljmp
jecxz
jg
xor
test
stos
das
hlt
jno
jl
pop
lret
mov
cmp
fsubl
movsb
pop
mov
pop
dec
call
insl
and
push
mov
push
cmp
mov
das
or
pop
mov
insl
add
bswap
xor
cmp
sbb
mov
in
pop
mov
sub
add
inc
xor
insl
enter
dec
out
mov
add
les
dec
xor
mov
or
mov
jno
xor
adc
cmp
cmp
cmp
test
insb
mov
test
pop
sub
mov
jnp
add
fs
inc
fs
daa
inc
xchg
inc
fnstenv
inc
lret
out
dec
jb
inc
fldenv
add
push
mov
mov
jno
jp
iret
pop
jp
push
sbb
jns
sbb
pop
jno
cmp
sbb
adc
in
or
lcall
add
jle
cld
ljmp
inc
mov
cli
and
mov
repnz
inc
xor
add
mov
add
rcrl
cmpsl
cmp
sub
xor
push
out
mov
inc
xchg
jle,pt
stos
lea
mulb
pop
dec
stc
les
cmpb
lcall
clc
push
shlb
imul
sbb
add
jnp
je
xchg
sub
mov
pop
adc
jo
ja
xchg
or
shll
int
add
mov
cltd
push
dec
aas
and
aad
mov
cld
ds
ss
leave
mov
inc
xchg
inc
cmp
mov
enter
inc
add
add
inc
lret
dec
xchg
out
push
ficompl
push
sub
and
push
fiaddl
push
icebp
pusha
jg
or
mov
xchg
in
ud2
add
cmp
xchg
cmp
mov
xchg
les
pop
out
out
imul
jecxz,pn
ja
cmp
push
notl
push
testb
bound
add
add
jbe
jns
xchg
movsb
push
iret
jo
aaa
push
dec
jae
dec
cmp
pop
push
loope
cmp
push
test
int3
hlt
int3
arpl
jns
xchg
das
test
add
xor
xor
mov
clc
and
pop
mov
out
jbe
dec
pop
mov
add
fisubs
jge
pop
mov
or
into
dec
xorb
push
cld
cs
lret
inc
or
mov
jle
enter
jns
loop
fsubrp
xchg
cmc
aas
mov
xchg
ds
ss
or
fptan
loop
or
pop
push
imul
push
mov
fmuls
sbb
adc
fbstp
dec
pop
fldt
insl
pop
dec
rcr
js
leave
dec
into
push
sbb
inc
fcomps
push
push
cmp
fcmovnbe
xlat
cmovs
shl
jmp
sbb
dec
fcoms
enter
pop
pop
mov
push
jl
hlt
lret
testl
jl
pop
std
hlt
fisubl
dec
pop
xor
dec
rcr
shll
mov
jl
into
sub
adc
jge
fcomps
add
dec
popa
pop
pop
inc
in
push
push
pop
xor
cmpsl
rcrb
xlat
mov
mov
mov
and
stos
roll
sub
pop
pushf
push
mov
mov
notl
ss
cmp
shll
push
push
add
pop
cmp
dec
fiaddl
push
and
fnstenv
add
push
xchg
shll
out
or
pop
xlat
int3
dec
sbb
js
or
hlt
clc
and
push
sub
sbb
hlt
and
orb
pop
cmp
push
js
pop
bound
inc
sub
daa
bound
push
add
pop
pop
inc
adc
or
mov
pop
aas
jp
and
subb
insb
es
or
inc
fidivrl
hlt
dec
cmp
add
add
pop
jnp
or
inc
je
enter
sbbb
push
and
sub
shr
jp
orb
push
and
je
and
and
jo
lret
inc
pop
negb
add
rorb
xchg
stos
push
xor
mov
fisubs
inc
or
inc
pop
inc
lea
and
inc
xor
aas
dec
jne
mov
aas
sbb
das
imul
pop
inc
mov
out
cs
movsl
inc
push
cs
mulb
sub
and
std
or
xlat
aad
sub
cld
jp
aas
push
lret
xor
dec
fs
dec
and
fmul
cmpb
addr16
lret
or
lcall
aas
cmp
and
lods
xor
leave
add
fisttps
aaa
add
int3
data16
lea
leave
cld
xchg
adc
shrl
dec
mov
mov
mov
lods
rcll
push
mov
lods
sub
cld
mov
test
out
xor
or
cmp
push
inc
enter
int3
or
dec
out
lods
mov
dec
les
daa
lods
sub
xchg
neg
or
lods
pop
enter
push
test
hlt
scas
mov
inc
push
imul
rolb
sub
test
and
mov
fcoms
fcompl
jbe
pusha
les
in
fcomi
pushf
pop
fdivrs
fcomi
inc
fdivs
jle
mov
fidivrl
cmp
pop
rolb
rcr
and
push
push
ja
int3
sbb
out
cwtl
dec
mov
add
in
push
mov
lcall
orb
repz
inc
inc
pop
testl
dec
ss
cmp
add
pop
les
push
clc
jle
into
mov
pusha
pop
push
lret
arpl
xlat
dec
pop
ljmp
mov
enter
cmp
aad
inc
push
dec
fistpl
test
mov
ljmp
add
aad
call
hlt
add
sar
lcall
sub
push
daa
int3
inc
ja
push
lods
fdivs
add
inc
leave
pusha
dec
pusha
les
pop
dec
repnz
out
mov
les
ficomps
add
lret
add
int3
jle
shlb
mull
add
rolb
sub
pushf
lret
dec
mov
insb
pop
push
and
loope
sar
not
mov
js
pop
push
mov
mov
cmp
push
jl
and
mov
dec
fiadds
inc
imul
or
mov
test
jnp
push
mov
insl
test
outsb
rcrb
int3
cli
lock
je
lock
jne
ja
hlt
push
out
bound
iret
jae
mov
data16
jo
icebp
jp
out
pop
popf
aad
pop
gs
pop
jne
inc
dec
shrl
push
movsl
cmc
inc
jne
jne
jne
out
or
das
das
movsl
and
push
push
pop
aas
jmp
ja
mov
dec
inc
popa
inc
insl
jecxz
fists
movsb
pop
push
inc
addr16
je
jne
ficoms
subl
cmpsb
inc
sbb
iret
ja,pn
jbe
cli
les
dec
inc
loopne
inc
inc
aas
stc
or
mov
das
aam
mov
mov
aas
mov
xor
loop
xchg
movsb
mov
jle
hlt
sbb
sti
cli
movsl
data16
int3
jge
jp
sub
push
pop
cmp
inc
sbb
jl
loop
mov
addb
mov
mov
out
leave
mov
dec
xor
dec
sbb
mov
jge
xchg
jge
pop
andps
lock
mov
shlb
xor
mov
cmp
hlt
aas
jg
push
or
icebp
scas
mov
dec
adc
cmpl
sbb
push
dec
pop
push
add
stos
into
roll
push
loope
bound
adc
ja
cmp
cmp
imul
add
ret
push
mov
push
nop
lahf
cmpsl
cmp
ret
out
lods
shl
xchg
paddw
jl
mov
cmpsl
pop
jno
stos
nop
inc
mov
fsubrs
fstpl
int
or
jmp
inc
popa
pop
insb
test
popa
ret
pop
movsb
mov
sahf
xchg
clc
mov
inc
icebp
insb
imul
pop
movsb
addr16
pop
scas
mov
leave
fwait
jbe
dec
pusha
nop
nop
add
shrb
lock
inc
stos
push
push
int
push
and
mov
repz
out
mov
jne
push
pop
xor
mov
jl
sub
mov
cld
cli
dec
lret
add
insb
stos
adc
or
xchg
clc
mov
es
mov
mov
cld
xor
clc
out
stos
add
movd
sbb
push
outsl
pop
and
nop
pop
fsubs
lds
out
fwait
in
dec
adc
pop
cmpsb
mov
out
call
repnz
lcall
add
lds
pop
pop
in
sbb
imul
and
arpl
and
or
jne
lods
nop
popf
jo
shr
hlt
mov
clc
out
or
push
in
pop
and
pop
popf
into
testb
lods
sbb
in
popf
test
stos
ljmp
call
jle
push
mov
mov
enter
into
jle
jo
lods
sub
imul
jns
hlt
add
shlb
sbb
pop
push
and
or
sub
and
jnp
outsb
stos
sub
imul
addl
scas
icebp
inc
jno
shr
sbb
fwait
jle
push
dec
pop
lock
loopne
sub
addr16
mov
out
xor
push
and
mov
dec
push
out
cmp
pushf
loope
sub
cmc
popa
movsb
push
lds
inc
imull
fs
movsb
mov
jecxz
add
mov
into
popa
pop
aam
ret
mov
lods
out
mov
jno
mov
int3
imul
xor
mov
fisubl
std
jne
test
jmp
jmp
sbb
testb
inc
leave
test
push
mov
mov
inc
sub
sahf
popl
jo
jb
sbb
inc
icebp
movsb
adc
fsubl
in
popf
inc
or
xchg
lods
ljmp
scas
mov
dec
and
inc
into
jmp
aam
jo
jno
adc
xor
mov
inc
popf
mov
jno
inc
mov
sub
inc
imul
dec
mov
mov
mov
add
test
pop
ret
sti
sub
rorb
jmp
sub
aas
push
out
dec
popf
outsl
out
adc
inc
pop
in
add
clc
je
dec
or
popa
out
mov
idiv
mov
dec
dec
stos
pop
xchg
and
adc
mov
in
add
sub
pop
clc
push
outsb
mov
imul
adc
mov
dec
lods
push
adc
dec
or
insl
into
sbb
and
dec
lock
sbb
imul
xor
jb
or
ja
add
inc
es
xor
pop
outsl
push
or
cmp
pop
jns
enter
ss
jmp
cmpb
and
in
push
sbb
cmpsb
imul
test
in
push
mov
cwtl
jmp
jecxz
and
dec
hlt
inc
cmp
mov
out
jo
xor
pushf
pushf
jae
add
sbb
push
mov
push
and
push
jg
sub
cmpsl
fisubrl
test
iret
push
push
jmp
add
cmp
xor
mov
mov
push
scas
popa
test
out
sub
sbb
mov
sub
bound
mov
mov
adc
mov
mov
test
call
mov
adc
rclb
fistps
jno
xchg
in
inc
mov
add
xor
nop
ret
inc
test
ftst
call
xor
push
aas
or
ljmp
addr16
ljmp
stos
add
rol
add
mov
sub
dec
call
or
ljmp
dec
aam
fimull
adc
pop
les
lea
mov
mov
in
insb
xchg
add
or
pop
or
mov
mov
adc
or
or
xchg
add
add
in
into
imul
jo
cmc
into
jo
cmc
inc
sbb
mov
test
mov
sub
scas
scas
ficoms
jbe
jg
hlt
mov
ja
je
inc
jp
push
fs
fcomps
je
iret
test
fs
mov
sub
jb
test
push
test
jp
notl
ret
fs
adcb
mov
mov
addr16
cwtl
outsb
ljmp
or
fistps
aas
imul
inc
mov
pop
div
pop
popa
xchg
jmp
sub
jbe
cld
and
andl
mov
push
or
imul
movhps
push
dec
out
xor
imul
stc
stc
imul
ja
ja
scas
mov
add
mov
repnz
popa
xchg
jmp
imul
cmp
das
mov
push
and
jne
pop
jo
mov
ja
clc
jne
aas
mov
xor
insl
jmp
push
pop
push
add
subb
mov
xor
cmp
hlt
out
inc
imul
and
aaa
mulb
jno
int3
dec
jbe
je
jp
js
dec
inc
jno
mov
ja
cmc
cmp
sahf
jo
jecxz
insl
inc
mull
cld
sbb
ja
jecxz
popl
adc
jno
jecxz
insl
dec
add
pop
dec
mov
sti
push
mov
mov
push
je
outsb
repz
adc
inc
mov
xor
setg
jbe
or
push
mov
fs
mov
les
movsb
xor
pop
mov
push
jbe
push
cmc
leave
call
cli
pusha
outsb
cmc
dec
call
lds
neg
aaa
xchg
stc
dec
js
out
lock
jo
xchg
jbe
xchg
dec
mov
or
inc
int
mov
iret
and
cmpsb
cltd
in
mov
call
outsl
fdiv
test
shlb
outsl
ja
imul
jmp
icebp
jle
xchg
mov
js
inc
pop
xor
push
out
jo
clc
fs
imul
mov
repz
xchg
bound
loope
push
adc
xchg
and
xor
mov
or
out
jecxz
inc
ds
push
addl
mov
stos
dec
and
test
pop
mov
mov
jl
xorb
lea
lock
fsubrs
xlat
testl
jb
subb
inc
adc
enter
and
and
dec
dec
lea
inc
jne
dec
insl
xchg
pusha
jo
popf
lock
mull
jno
icebp
cmc
nop
mov
jle
iret
into
xchg
jo
js
out
imul
insl
sbb
mov
lods
pop
popf
xor
mov
sub
push
pop
push
lret
jns
push
or
dec
mov
push
ret
bound
ror
test
pop
fiadds
sbb
scas
pop
pop
out
cmovne
sbb
in
scas
adcb
pop
adc
in
scas
adc
scas
cmp
in
add
sub
in
clc
mov
pop
movsb
fs
inc
dec
inc
cwtl
int
fimull
sub
ss
or
shlb
imul
mov
jno
loopne
sub
dec
xchg
add
dec
stos
sahf
ret
or
push
ljmp
jae
sub
jno
ja
or
mov
mov
scas
dec
inc
jg
iret
loopne
out
call
push
es
addr16
jno
bound
in
stos
adc
adc
mov
addr16
dec
clc
stos
fisubrl
inc
shl
sub
lods
push
pop
daa
dec
xor
ret
mov
and
inc
adc
or
inc
fs
adc
das
push
out
ret
or
jp
icebp
push
dec
add
dec
icebp
push
hlt
pushf
test
push
pop
iret
cmpsb
cmc
divl
or
dec
xor
fmul
xchg
and
rol
shrb
push
add
pop
push
shll
jmp
outsb
in
lock
lret
popf
iret
xchg
jg
test
mov
cmp
adc
addr16
xchg
xchg
enter
sbbb
sbbb
pusha
dec
dec
ficompl
call
pop
pop
push
enter
jg
adc
aad
int
sbb
testl
shl
mov
fnstsw
ja
or
xor
lahf
scas
sub
pop
push
dec
stos
xchg
orb
jp
mov
jno
push
in
cld
dec
sbb
dec
sbb
divb
add
xor
push
dec
outsb
dec
scas
or
lock
inc
pop
iret
and
out
aad
sbb
lods
hlt
dec
xchg
cmp
xor
ds
mov
test
ret
and
enter
push
pmuludq
out
ja
inc
jg
aam
mov
pop
sub
fidivrs
testl
nop
xchg
mov
push
dec
fxch
dec
sub
inc
into
out
test
pusha
movl
sbb
inc
push
cmc
inc
stos
in
inc
js
pop
push
xor
sbb
xchg
jp
mov
out
pop
mov
stc
xchg
jne
inc
movsb
arpl
pushf
sub
movsb
mov
mov
idivb
sub
cmp
dec
jge
lods
push
sub
mov
lods
sub
pusha
mov
ret
cmp
subl
or
mov
sub
rcrl
jno
sub
in
fs
test
mov
sub
inc
jle
mov
dec
lds
in
mov
movsb
add
pop
inc
call
pop
ret
pop
out
mov
cmpsl
xchg
pop
stc
lcall
sub
mov
xchg
in
sahf
cmpsl
aaa
sub
add
sbb
bound
add
sub
ficoms
push
add
xchg
roll
cld
inc
insb
dec
and
push
bound
inc
leave
imul
push
movsl
js
call
fisttps
pop
mov
and
mov
mov
dec
xchg
push
and
jge
filds
push
xchg
pop
sub
sti
push
jno
out
mov
lahf
popa
repz
xor
call
adc
push
sarl
mov
jle
stos
dec
js
scas
scas
stc
pop
mov
mov
mov
in
mov
sbb
cmc
xor
mov
cmp
xchg
pop
jmp
mov
mov
xorl
cmpsb
pop
movsl
rep
xor
add
popf
ss
pusha
andb
sbb
mov
mov
xchg
das
cmpsl
popf
repz
aad
push
ds
mov
lcall
fs
mov
xchg
adc
xchg
xor
sbb
aas
mov
xchg
fst
mov
std
mov
in
push
test
inc
sub
mov
jne
push
jmp
mov
mov
cmp
mov
imul
add
add
test
jle
dec
xchg
subb
dec
pushf
movsb
pop
jg
dec
push
sahf
test
sbb
dec
sbb
sub
mov
dec
mov
mov
push
dec
mov
enter
mov
jle
dec
cmp
xor
jle
dec
sub
movsb
test
cmpsl
jle
dec
cmpsb
movsb
and
dec
and
jle
dec
mov
dec
cmp
test
sarb
dec
frstor
push
test
addr16
jle
dec
and
jle
dec
fbld
fldcw
dec
dec
lret
jg
dec
inc
les
inc
dec
movsb
inc
jg
dec
inc
shrb
dec
ret
jg
dec
pop
fsubrl
in
xchg
stos
outsl
adc
dec
loope
pusha
jg
xchg
addr16
dec
movsb
cmc
jg
xchg
addr16
jle
dec
jmp
dec
imul
push
ljmp
mov
dec
aas
mov
sub
fldt
dec
into
movsb
dec
jg
dec
dec
int3
test
sarb
dec
movsb
stc
jg
dec
clc
jnp
sti
addr16
cli
dec
inc
movsb
lds
dec
hlt
ja
mull
jle
dec
jno
icebp
jg
dec
lock
repz
repnz
jge
std
jg
dec
leave
dec
test
addr16
jle
dec
dec
movsb
lret
dec
aad
test
addr16
jle
dec
movsb
inc
jg
dec
inc
ret
test
addr16
dec
pop
movsb
fdivrl
dec
fistps
fldenv
jle
inc
jg
popf
sub
xchg
test
mov
addr16
jle
dec
ljmp
out
arpl
dec
jle
push
rcrb
cltd
dec
sbb
jle
dec
lcall
xchg
test
addr16
jle
dec
xchg
movsb
adc
dec
adc
jle
lret
xchg
jg
out
dec
imul
jle
dec
jmp
push
cmc
dec
in
stos
sbb
movsb
jecxz
bound
jl
jg
jns
mov
pushf
call
pop
jg
dec
mov
test
or
dec
movsb
movq
dec
xlat
push
call
outsl
test
pop
aad
jl
outsb
jl
out
jl
imul
push
call
jmp
adc
mov
push
fs
fs
jl
in
fbld
jns
dec
sub
dec
out
test
daa
xchg
ja
outsb
sbb
call
loopne
stc
arpl
sub
jecxz
bound
lods
pop
sub
or
push
fs
fs
loopne
call
jle
inc
in
loop
out
sbb
stc
fs
js
int
fs
jnp
in
bound
pop
jl
cli
jl
inc
jl
lds
dec
cmpl
hlt
clc
ja
jge
outsb
out
jbe
or
mov
jno
icebp
push
call
lock
inc
jae
pop
rep
and
outsb
inc
std
outsb
imul
rorb
dec
iret
jb
dec
pushf
sub
into
sub
dec
sub
leave
sub
dec
lods
sbb
mov
and
dec
fs
lret
fs
dec
hlt
mov
stos
lret
push
in
out
outsl
fwait
jg
inc
outsl
and
outsl
loop
outsl
inc
outsb
mov
outsb
cli
inc
push
push
shl
mov
cmpsb
ret
fs
inc
fs
ret
dec
jg
jl
int
scas
pop
jl
pop
dec
xchg
and
dec
fisubs
flds
fisttps
pop
pop
fsubr
aas
dec
fcmovu
dec
movsl
hlt
dec
and
sub
aam
mov
sub
xlat
sub
push
or
daa
push
sub
shrl
push
or
rcr
push
lods
xchg
call
push
push
fs
pop
fs
jg
jl
sub
lods
lods
cmp
dec
das
and
scas
hlt
xchg
inc
cs
out
outsl
pop
jg
sub
test
call
outsb
insl
stos
push
call
dec
stos
dec
xor
pop
and
movsb
inc
call
cmpsl
sub
es
cmpsb
lods
add
mov
in
repnz
imul
outsl
sub
adc
mov
lock
outsb
outsb
cmp
xchg
sub
mov
je
js
add
call
cmp
lods
or
call
cmp
mov
jbe
test
lods
cmp
push
mov
push
aaa
push
ss
xchg
xchg
dec
mov
sti
xor
fs
xor
jl
mov
mov
daa
or
xor
jl
ja
push
xchg
mov
or
mov
or
mov
or
call
rorl
jl
mov
jl
xchg
dec
sbb
outsb
aad
outsb
bound
pop
push
clc
xchg
dec
add
xorl
subb
imul
mov
outsl
in
cmc
push
call
sbb
int3
pushf
sub
pop
scas
adc
lahf
outsb
rcrb
outsb
dec
sahf
outsb
imul
cltd
push
cwtl
push
fs
fs
lcall
sub
jl
adc
jecxz
dec
xchg
pop
lret
dec
xchg
out
int3
push
sbb
dec
adc
fs
loopne
adc
out
andl
jo
dec
in
pushf
pop
pop
jge
cli
adc
outsb
jbe
in
push
mov
mov
jl
in
mov
shl
scas
push
ja
push
push
push
insl
jl
das
or
mov
fdivs
dec
call
cmp
pop
mov
stc
xchg
mov
add
subl
or
inc
pop
dec
mov
ja
jne
mov
and
cld
xchg
ret
sti
sub
xlat
popf
pop
xchg
adc
cmpsb
cmovge
roll
or
shl
sub
and
add
ljmp
mov
frstor
or
cmp
xchg
or
clc
ja
rorb
pop
cmp
mov
pop
cltd
inc
test
xlat
inc
add
pop
incb
or
add
sti
sub
sbb
mov
mov
pop
jle
jae
lret
sbb
lahf
mov
dec
movsl
fmulp
pop
cmp
mov
push
push
or
mov
ja
jg
dec
xor
jg
cs
or
sub
push
cmc
push
and
xchg
sub
pusha
lret
imul
push
adc
decl
outsb
sbb
jne
mov
xchg
jle
imul
mov
mov
xor
leave
and
push
inc
cld
sahf
inc
sar
inc
pushf
scas
dec
mov
hlt
sub
xor
jmp
outsb
dec
cmp
shll
outsl
outsl
mov
mov
mov
ss
icebp
jne
inc
enter
data16
mov
mov
inc
iret
jo
pop
mov
imul
xor
mov
lock
scas
jle
pop
push
xchg
jle
ja
xor
or
xchg
add
adc
inc
loopne
mov
and
addr16
and
jg
xchg
and
sub
jno
aam
addr16
cltd
roll
pop
int
nop
scas
enter
mov
jbe
adc
dec
les
jns
nop
stc
rorl
push
divl
ss
sarl
imul
mulw
add
nop
fisubrl
scas
cltd
mov
test
mov
cld
mov
pop
dec
lock
leave
dec
or
or
pop
mov
je
jge
inc
push
cmpsl
push
scas
add
scas
add
fwait
aad
push
negl
jle
push
push
scas
add
mov
je
sti
stc
xor
pop
and
push
div
adc
rcll
fs
mov
es
pop
out
aaa
push
push
inc
das
push
out
out
lea
sub
inc
add
repnz
xor
pop
out
stos
repnz
inc
mov
push
dec
mov
imul
cmp
dec
mov
add
loope
jns
outsb
mov
xor
scas
shlb
ss
mov
or
mov
adc
jns
push
adc
adc
xor
dec
leave
cmp
mov
jbe
outsl
sbb
in
xor
in
bound
push
inc
imul
xor
hlt
mov
xor
mov
in
sub
ret
movsb
in
jle
stos
xchg
sub
pop
fistpll
cwtl
loopne
repz
cmpsl
rclb
jo
aad
pop
sbb
sub
sahf
adc
aas
stos
in
xor
or
sbb
push
add
lods
mov
movsb
aam
pusha
lods
rol
fs
mov
and
mov
adc
popf
dec
add
jbe
scas
addr16
cmp
push
adc
fldl
je
sahf
test
pop
pop
push
xchg
outsl
mulb
cmp
filds
or
daa
les
sub
dec
mov
push
insl
scas
sub
addr16
mov
sbb
mov
mov
pop
xchg
inc
loopne
sbb
inc
sbb
pop
cltd
out
fldcw
inc
pop
mov
mov
in
daa
out
std
in
dec
data16
js
bound
ss
mov
jg
imul
jl
inc
hlt
call
jo
and
orb
fisubl
lahf
aas
fs
imul
daa
imul
and
inc
sub
inc
lock
out
lcall
clc
mov
loopne
imulb
rorl
fcoml
out
outsl
out
add
cld
ljmp
shr
mov
pop
mov
bound
loopne
cmp
inc
cmp
or
pop
cmp
outsl
mov
xor
or
ret
inc
mov
jmp
out
int
or
mov
inc
sub
daa
adc
addl
mov
add
repz
out
je
shrb
add
push
pop
xor
lds
testb
lahf
std
daa
xor
add
mov
xor
mov
push
sti
xchg
leave
pop
add
nop
jo
cmp
sub
in
out
inc
pop
cmpsb
inc
xchg
aam
cmpsb
into
push
mov
and
sbb
call
faddl
or
xchg
sbb
leave
pop
das
xchg
shufps
movsb
pop
add
in
push
shl
dec
test
in
into
mov
mov
xor
mov
ret
hlt
and
mov
lods
or
test
popf
lcall
push
adc
push
mov
push
idivl
mov
jg
dec
scas
mov
out
add
movsl
call
sbb
cmpsl
fisttpll
ja
pop
pop
loope
pop
jmp
jbe
inc
lock
jg
mov
divl
adc
cli
stos
nop
sti
mov
pop
fidivrs
jg
mov
andb
jmp
andb
sub
mov
js
mov
sub
jbe
bound
cmpsb
mov
in
push
mov
mov
addr16
sbb
lock
mov
jnp,pn
imul
push
sbb
jns
xorl
scas
lea
pop
pop
in
pop
dec
mov
hlt
inc
test
pop
cmpsb
lods
add
push
adc
and
mov
je
call
stc
pop
outsb
xchg
dec
jno
dec
test
imul
mov
test
push
sub
stos
add
inc
sub
xchg
mov
sub
rcll
mov
lock
mul
push
dec
cmp
je
sub
adc
fcoml
sarl
ja
hlt
test
cmpsb
ret
add
jp
jnp
push
ja
call
ret
jp
movsb
stc
outsb
or
xchg
lret
jmp
xor
push
mov
sbb
fisttps
sbb
mov
xor
in
xor
shrb
dec
icebp
jo
stos
add
mov
xchg
jg
mov
mov
flds
and
fmuls
and
and
out
iret
push
push
pop
jne
int3
or
pop
fcomps
add
gs
and
imul
hlt
lcall
pop
jg
dec
dec
iret
test
out
jg
dec
inc
leave
pop
jae
jle
dec
lret
mov
jmp
aad
inc
les
add
dec
movsb
inc
jg
dec
inc
shrb
sub
dec
cs
iret
cld
dec
fs
sub
leave
jg
in
push
cld
dec
fs
dec
aad
or
inc
cld
fs
sub
dec
inc
jg
fstpl
stos
sbb
div
loopne
xor
lock
jecxz
fs
rcrl
dec
test
out
sbb
shl
pop
ljmp
ljmp
lods
shrb
sti
xor
notl
in
dec
xor
dec
push
stos
add
jmp
dec
cltd
pop
sbb
mov
je
rclb
mov
push
addr16
push
dec
xlat
ja,pt
dec
push
roll
ss
ja
hlt
dec
imul
imulb
sub
icebp
clc
jo
or
push
in
mov
scas
add
xchg
mov
cld
lahf
push
leave
in
xchg
pop
icebp
cmpb
and
jp
pusha
in
outsl
dec
and
sti
mov
dec
mov
xchg
inc
pop
ss
outsb
or
mov
loope
cltd
adc
sub
fdivr
das
cmp
in
fisttpl
xchg
pop
int3
cmpl
mov
jno
fs
add
or
sbb
test
std
rcll
incl
add
jbe
inc
rcll
ret
test
loop
lea
lcall
inc
push
test
in
or
rol
and
pop
push
lock
jg
mov
leave
fcompl
mov
cli
jno
adc
fcompl
hlt
test
mulb
es
shrb
in
mov
sti
pop
lods
int
js
jle
out
push
ja
cld
stos
add
scas
dec
imul
sub
fs
sub
lea
iret
icebp
dec
pop
sub
shlb
pop
mulb
inc
sbb
dec
test
lahf
jne
ficoms
and
shll
xor
and
push
inc
push
jno
mov
xchg
mov
nop
psraw
dec
mov
xor
imul
loop
inc
mov
mov
mov
clc
pop
add
clc
daa
push
into
push
pop
insb
push
nop
mov
clc
pusha
jle
stos
shll
ss
int3
dec
scas
int
push
popw
cmpsb
mov
negb
lock
arpl
mov
iret
jnp
pop
mov
cmp
pop
mov
ds
add
lret
aaa
or
xchg
cltd
sbb
stos
rorl
cltd
rol
xor
jl
in
dec
xor
sbb
or
jnp
rorl
jae
test
bound
int
cld
enter
stos
lcall
push
lret
movsl
cs
test
mov
jo
in
and
sub
jns
mov
icebp
test
mov
jle
divl
xchg
shr
call
push
es
mov
dec
andl
jo
scas
fldl
dec
adc
jo
scas
shll
xor
fisubrs
or
cld
dec
ret
gs
iret
adc
rolb
inc
ds
push
pop
jo
shl
inc
inc
call
xchg
adc
mov
in
mov
test
jno
dec
jo
add
push
jns
sbb
fs
aas
xchg
xchg
push
pop
mov
in
rorl
lret
xchg
xlat
or
mov
jno
inc
xor
aas
push
mov
mull
dec
cmp
jecxz
loope
orb
jo
stos
shlb
dec
out
inc
fwait
fs
lock
push
adc
je
incl
cld
icebp
push
fistpl
hlt
iret
jo
orb
mov
push
negl
decb
addr16
sub
cmpsb
add
insb
xchg
jb
aaa
sti
arpl
push
xor
mov
call
data16
cli
cmc
stos
or
divb
pop
mov
movsb
ja
mov
pop
dec
cmpxchg
push
mov
es
jns
imul
xor
ss
cltd
shl
repz
or
sub
pushf
mov
sarl
mov
dec
call
jecxz
into
add
adc
sahf
pop
inc
lahf
dec
daa
gs
or
pusha
stc
and
inc
in
lds
push
cmp
hlt
addr16
push
aas
movsb
mov
frstor
jb
mov
fnstsw
cmovl
adc
je
fs
add
and
mov
mov
sti
test
pushf
inc
inc
jo
pop
jns
pop
mov
sub
shlb
stc
rcrb
jle
inc
les
mov
fwait
push
xor
and
mov
lds
sbb
fmulp
inc
dec
out
cli
stos
jl
jl
mov
mov
push
mov
jne
adc
push
in
xchg
and
push
jg
cmc
mov
pop
rcrb
hlt
das
mov
jle
lea
xchg
sub
leave
shr
adc
leave
psubd
jns
mov
pop
pop
das
clc
and
or
xor
xor
cmp
jp
or
cltd
cmc
push
lahf
xchg
fwait
sub
adc
ja
fs
std
jp
mov
jnp
dec
dec
inc
es
outsl
inc
push
mov
mov
pop
add
std
push
repnz
cs
push
xor
mov
inc
les
cmp
inc
fnop
outsl
jne
in
xor
jle
jle
pop
popa
push
mov
loopne
jle
dec
inc
ror
mov
mov
fisttpll
pushl
nop
fnsave
dec
mov
lahf
dec
or
xor
push
xchg
mov
iret
in
dec
sub
neg
pop
in
jg
iret
adc
mov
pop
lds
mov
sbb
icebp
test
push
mov
mov
das
mov
push
sub
in
fcomps
inc
mov
adc
inc
mov
loope
repnz
cwtl
std
pop
pop
adc
cmp
xchg
and
hlt
test
lock
outsb
xchg
or
sub
lock
aam
sti
and
adc
sbb
out
or
cmp
mov
mov
out
fistpl
xor
paddusw
jbe
jp
push
ss
mov
lcall
xor
mov
inc
mov
inc
jle
pusha
jno
out
lods
xchg
pop
pop
pop
or
jnp
lea
or
xchg
sahf
add
pop
sbb
out
in
push
mov
pop
outsb
arpl
test
in
fmull
call
and
test
dec
idivl
push
dec
stos
push
test
dec
outsb
mov
push
add
pop
sahf
mov
cmp
mov
in
mov
adc
scas
cmp
pop
pop
sahf
fwait
jne
aas
test
fwait
lods
test
sbb
pop
aam
clc
mov
cld
sub
out
inc
jmp
loope
pop
ja
cmp
push
mov
sti
push
mov
mov
in
push
mov
mov
or
movsl
movsb
pushw
pop
sub
fdiv
mov
shll
xor
sarl
jb
dec
test
and
push
add
data16
mov
inc
aas
in
std
test
movsb
mov
ret
pop
mov
mov
dec
mov
stos
sbb
jo
popf
cld
cmovno
sbb
cwtl
test
in
cld
cli
mov
xchg
sbb
jecxz
movsb
sbb
roll
cmc
outsl
jg
dec
push
xor
fsubrp
inc
mov
rclb
loope
into
or
push
sahf
clc
ja
into
std
sbb
sti
push
xchg
sti
add
dec
sahf
ror
repz
clc
mov
xchg
call
out
insl
xor
mov
ror
sbb
call
push
lock
das
in
mov
jae
cmp
je
mov
and
sub
and
jnp
mov
clc
and
push
incb
mov
adc
mov
cmp
xchg
arpl
push
push
lods
fcmovnb
notb
and
dec
test
xchg
cld
jbe
je
cmp
test
jno
dec
inc
cmp
ja
jo
stos
and
pop
shl
inc
aam
sub
fcompl
inc
mov
mov
jbe
dec
fnstcw
or
aam
arpl
pop
cmp
test
jo
iret
jl
sub
sub
ljmp
jp
orl
in
pop
inc
mov
jnp
and
insl
aaa
mov
cmp
out
xchg
push
pop
sub
ret
outsb
dec
imul
sub
mov
fsubr
cmpb
je
cmp
cmp
mov
fs
jbe
inc
icebp
int3
push
lret
divb
fsts
jne
xchg
fs
shl
int3
aad
out
jne
repz
sub
xor
data16
pop
xchg
and
aam
cmp
jo
je
mov
imulb
jbe
iret
inc
xchg
push
test
sbb
std
mov
test
jecxz
add
mov
rclb
or
test
xchg
cmpsb
pop
mov
pop
scas
sarl
jbe
sbb
fs
cmp
test
jge
iret
std
popf
test
push
cli
test
nop
jecxz
fwait
dec
inc
sub
xor
lds
add
cmpsb
cmp
popf
ja,pn
and
or
rol
xlat
aam
jge
shll
inc
rcl
lds
dec
add
dec
mov
push
xorb
jne
push
mov
push
imul
sti
push
test
xor
mov
rcrl
leave
push
inc
adc
cmp
loop
lret
push
cmp
dec
inc
addr16
ret
aaa
adc
popa
jbe
imul
dec
lret
inc
in
in
shrb
inc
out
bound
shr
fisttpl
inc
call
das
xor
mov
jecxz,pt
add
in
adc
push
jp
outsl
cmpsb
insb
or
push
cmpsb
mov
hlt
test
push
fstpl
jo
stos
add
push
leave
imul
or
popf
xchg
ds
ss
icebp
shrb
aas
out
jge
and
pushl
movsb
jbe
dec
ss
jp
ds
enter
mov
jo
mull
mov
dec
in
fstpl
sbb
xorl
js
loope
dec
mov
inc
test
fs
sti
icebp
cs
mov
fists
jo
mov
sbb
mov
inc
stos
add
shrb
cmp
not
mov
mov
cltd
mull
sub
fst
push
fwait
adc
dec
test
mov
in
sub
cwtl
inc
inc
stc
sub
fadd
cmp
adc
or
in
cli
xchg
enter
sbb
cli
subl
push
call
cmp
mov
and
xchg
jns
push
nop
std
imul
push
pop
jno
inc
test
test
cmpsb
push
inc
stos
sbb
xchg
les
xor
mov
cmp
ret
mov
pushl
sub
imul
cld
testl
out
int
jp
enter
inc
arpl
inc
loop
push
hlt
jo
stos
push
pushf
cmc
lcall
into
push
nop
mov
iret
mull
sbb
pop
pop
mov
hlt
push
and
push
lods
loop
fisttpl
adc
jge
cmpsb
les
into
jbe
mov
movsb
ja
xchg
jae
out
pop
out
push
pop
or
fildl
imul
mov
in
aas
aas
add
jp
aas
out
lret
dec
mulb
sbb
pushf
fstl
sub
xchg
mov
je
popf
inc
cli
loopne
outsl
out
cmp
popf
lds
adc
push
sub
data16
mov
lock
lahf
dec
in
dec
scas
xchg
pop
lea
inc
jns
cmp
testb
jno
aam
arpl
in
jo
aam
imul
pop
xchg
loop
sahf
hlt
xchg
jo
push
mov
shlb
pop
shl
leave
or
jno
pop
fs
sbb
or
mov
jns
cmp
in
adc
mov
lcall
sub
fdivp
pop
testl
sbb
or
ja
dec
lock
cs
hlt
jo
stos
add
mov
outsb
mov
lret
ja
push
subb
xchg
dec
negl
pop
shrb
test
cmp
cmp
push
dec
rcll
ficomps
popf
mov
std
cmp
inc
aam
cwtl
fisttpll
mov
inc
std
xor
loope
popf
dec
mov
in
and
lds
not
adc
sbb
sbb
push
fadd
in
or
icebp
xchg
pop
hlt
jo
test
ficoml
test
jno
sub
jecxz
add
cs
inc
dec
dec
sbb
iret
sbb
popf
xor
cltd
dec
add
dec
pop
mov
cmpsl
mov
in
rol
frstor
mov
lea
mov
mov
mov
rcrl
sbb
dec
in
cmp
hlt
mov
imul
ret
enter
dec
push
cmpsb
dec
pop
popa
vorpd
test
or
jae
mov
fst
jp
inc
sahf
nop
mov
jb
imul
jo
dec
stos
add
int
imul
bound
dec
dec
sub
out
pushf
fdivrl
outsb
insl
xor
rcrl
inc
sub
ret
xchg
or
into
dec
cmpl
fdivrp
xchg
hlt
jne
cli
push
cld
cmp
dec
hlt
lock
sbb
sbb
mov
test
js
dec
push
or
mov
dec
xchg
sti
sub
dec
rcl
xor
push
rol
out
sub
mov
pop
dec
push
or
lock
and
sub
imul
sti
add
dec
xor
pop
mov
fs
outsb
xor
mov
or
dec
in
test
xor
cld
testl
subl
mov
sti
out
push
xor
ja
sub
call
movsb
mov
addr16
andb
sbb
push
push
sarb
scas
inc
es
pop
pop
stos
push
popf
pop
aas
int
xchg
idivb
mov
ss
outsl
jbe
add
arpl
roll
adc
lea
push
in
xor
xchg
jo
out
sub
mov
add
sbb
mov
lahf
mov
cltd
cli
xchg
outsb
std
data16
dec
in
push
out
inc
jg
aad
push
sub
push
insl
addr16
imul
inc
mov
enter
mov
das
jg
outsb
testb
pop
cmp
jecxz
cmpsb
add
xor
mov
push
push
push
movsl
loop
jmp
mov
jl
je
xchg
ja
jo
pop
roll
inc
loop
pop
hlt
jo
scas
cmp
sahf
mov
insl
xchg
in
sub
fmul
shll
sub
jb,pt
clc
sub
xchg
adc
test
shll
sahf
pop
push
ds
sub
std
cs
lahf
popf
lret
out
dec
cs
sarb
adc
adc
xchg
loope
test
dec
cmp
in
mov
incb
mov
nop
mov
mov
jl
nop
sub
pop
inc
fwait
xchg
push
cmp
test
mov
mov
dec
push
mov
fwait
fs
lret
inc
adc
xor
add
popf
es
push
movsl
dec
xchg
iret
imul
dec
cld
imul
xchg
or
rorb
aad
imul
sub
daa
dec
int3
mov
jle
adc
std
movsb
jne
dec
push
dec
inc
mov
sub
push
aas
jmp
sub
adc
outsl
les
rorl
adc
add
jmp
inc
push
in
inc
xchg
sub
xchg
push
pushf
fistpll
jg
sahf
fisttps
fwait
pusha
js
sbb
sbb
dec
bound
call
call
fnstenv
je
call
out
and
push
inc
xchg
jo
jns
call
loopne
out
call
push
inc
outsb
inc
sbb
jo
push
dec
dec
outsl
leave
in
and
divb
jnp
jg
ja
dec
je
jge
in
dec
enter
cmc
jg
leave
leave
or
jl
in
xor
subb
iret
dec
pusha
outsl
mov
and
push
in
push
push
mov
ljmp
dec
dec
scas
mov
popa
je
or
and
scas
sbb
jge
data16
hlt
and
or
inc
push
pusha
mov
dec
jns
pushf
or
in
and
jno
incl
pusha
push
ret
sub
je
push
hlt
cmc
movsb
fs
xor
lods
push
lret
and
cmp
lock
insl
jg
dec
dec
cli
mov
jl
push
dec
sti
pop
fs
loopne
lahf
test
jle
in
push
loop
sbb
imul
stc
sbb
or
outsb
jae
out
jge
addr16
and
movsl
xchg
and
xor
or
je
movsb
inc
int3
cs
jge
sub
nop
mov
jmp
data16
or
pushf
pusha
fidivrl
sbb
sub
sub
mov
cmp
and
push
hlt
dec
jmp
add
leave
data16
dec
mov
adc
mov
xchg
and
lock
nop
addr16
loope
cmp
orl
add
sub
jl
inc
cmp
pusha
push
test
in
jo
mov
cltd
dec
or
cwtl
ds
call
pop
sub
adc
nop
jge
or
js
outsb
cmp
cmp
adc
mov
insb
sbb
mov
jl
std
insb
mov
add
mov
insb
sahf
add
leave
fs
out
push
inc
les
adc
add
pop
ss
mov
mov
xor
fs
call
push
je
in
pop
sub
pusha
out
in
addr16
mov
je
and
movsb
outsl
pop
sbb
je
dec
es
push
divl
jl
cmc
sub
dec
scas
inc
xor
outsb
in
lea
mov
jae
in
mov
xor
xlat
repz
inc
cmp
aaa
in
xchg
jo
adc
lods
in
in
jg
clc
dec
cmp
sub
mov
adc
popl
cltd
push
mov
jo
cmp
scas
cmp
add
cmc
scas
adcl
in
call
es
or
sbb
add
add
sub
xchg
adc
jb
sbb
and
push
pusha
jmp
out
xchg
outsb
xchg
mov
cmc
cs
xchg
jge
or
jge
addr16
xchg
dec
sub
pop
iret
xchg
adc
clc
in
dec
inc
push
xchg
cmpsl
inc
adc
shrl
xlat
adc
cmc
imul
push
aam
imul
inc
test
iret
push
jmp
repz
add
add
or
js
xchg
add
and
imul
add
or
inc
jle
out
push
mov
push
jmp
and
cltd
sub
arpl
sbb
ja
loop
cld
jge
push
lret
cltd
insb
shlb
jge
out
js
push
arpl
je
sub
push
js
pop
dec
xor
outsb
sub
out
jp
cmp
test
cmc
or
jl
iret
adc
inc
icebp
movsb
push
fs
adc
push
insb
test
dec
sbb
and
outsb
aam
jl
lds
je
dec
into
arpl
add
adc
sbb
sub
xor
inc
push
xor
outsb
dec
push
jge
inc
hlt
sbb
sahf
jmp
imul
sub
push
jle
je
adc
sbb
jo
sbb
mov
aad
pcmpeqb
in
imul
push
jl
es
pop
insl
cmp
sub
dec
adc
jg
or
sub
xlat
sbb
and
push
xor
cmp
js
push
jl
divb
outsl
adc
aad
adc
stos
adc
mov
jg
movsl
xor
out
dec
jne
adc
cmc
mov
jo
mov
jl
inc
pusha
pusha
pop
imul
sub
ja
pop
jb
or
pop
pmulhuw
dec
xor
push
xor
jp
outsb
mov
outsb
or
dec
push
in
popa
out
fucomp
cld
bound
push
xchg
jl
jmp
mov
xor
hlt
aas
push
jg
imul
mov
imul
shrl
xchg
mov
call
js
jl
push
rorl
dec
in
call
inc
dec
dec
inc
sbb
dec
push
ret
add
mov
hlt
adc
movsb
push
mov
pushf
sbb
stc
and
sub
adc
cld
pop
push
inc
in
fucomp
adc
dec
das
jmp
and
scas
aaa
add
cs
stos
imul
sub
out
pop
push
pushf
repnz
add
sbb
scas
push
jl
mov
and
push
shlb
dec
sarl
gs
inc
mov
mov
sub
sti
das
xor
call
mov
imul
cmp
dec
cld
pop
inc
lcall
push
and
push
call
mov
or
xchg
std
push
or
sub
pop
scas
or
jo
add
inc
pop
outsl
and
imul
aam
scas
inc
out
imul
adc
sub
dec
fiadds
adc
dec
outsb
dec
sbb
fildll
adc
push
push
dec
or
lock
cld
adc
pusha
sub
jl
pop
dec
call
je
pop
popa
cld
sub
xchg
lods
lret
imul
add
push
pop
jnp
sub
icebp
aam
xlat
decb
pop
fs
cli
jno
push
mov
fdiv
pop
call
fs
dec
adc
loopne
inc
inc
add
imul
cmp
imul
cmp
ss
push
leave
dec
jge
push
loopne
test
mov
sbb
popf
lahf
in
and
mov
mov
loope
sub
mov
mov
add
loope
insl
jg
cld
adc
adc
pop
das
cmp
dec
sahf
pop
data16
dec
out
cmp
xchg
or
in
pop
incl
or
adc
jge
nop
fstps
adc
call
dec
mov
into
outsl
movd
xor
xchg
lods
pop
jge
or
faddp
addr16
mov
aas
push
push
cmp
pop
mov
dec
mov
in
add
incl
or
and
adc
imul
xor
inc
imul
push
loope
pop
lahf
out
sub
sbbb
dec
jmp
int3
fs
stos
nop
and
sub
enter
push
push
stos
jl
sbb
jae
call
insb
xorb
push
sbb
sbb
hlt
outsl
dec
sti
sbb
or
sub
mov
jle
adc
xor
pusha
sysenter
imul
leave
dec
pop
adc
call
add
pop
add
mov
mov
jmp
testb
sbb
test
sub
mov
aas
icebp
and
inc
in
add
dec
jmp
sahf
outsb
jbe
push
lret
pusha
pop
insl
imul
into
jmp
fs
mov
rorb
inc
lock
repnz
or
lock
add
jmp
ds
idivb
jge
dec
stc
xchg
push
pop
test
push
dec
outsb
into
jo
nop
cmpsb
test
add
addr16
insb
movsb
std
xor
fst
scas
shl
jo
fsubrs
and
je
and
sub
sub
cmp
mov
mov
popa
and
xor
call
test
jo
iret
adc
sub
in
js,pn
push
mov
inc
nopl
icebp
outsb
sbb
jmp
pusha
sub
in
dec
outsb
pushf
pop
mov
insb
pop
daa
leave
sub
sbb
or
cmp
je
cmp
adc
jle
add
aad
jae
call
je
adc
cld
je
push
dec
lds
je
lds
add
push
scas
jge
je
dec
inc
je
out
imul
jg
cwtl
int3
push
scas
ds
cld
or
push
push
mov
dec
stos
jo
push
es
jp
sbb
sub
fs
test
or
cmp
mov
cs
out
adc
fs
stos
or
push
out
push
pushf
pop
and
pop
xor
and
das
cmpsb
push
and
cltd
fs
xor
lcall
cwtl
lds
mov
mov
push
or
xor
or
jbe
cmpsb
cmp
xor
cmpsb
xchg
and
into
push
lods
push
lds
add
push
subps
xor
dec
adc
and
mov
outsb
and
cltd
pop
rorb
inc
pusha
aaa
faddl
xor
aam
sahf
jne
int3
cwtl
dec
je
dec
xor
clc
pop
pusha
pop
push
ret
rcl
dec
pusha
inc
nop
loope
dec
into
movb
mov
pop
xor
into
outsb
outsb
jp
ficomps
ds
adc
into
dec
pop
jo
sbb
iret
inc
or
leave
cld
sub
inc
ret
xor
inc
inc
movsb
or
inc
loope
pop
fs
into
inc
pop
lock
cmc
jg
cwtl
bound
jl
or
dec
push
and
sahf
push
cs
push
fwait
push
je
xchg
jmp
and
bound
shlb
popa
mov
aad
insb
cmc
inc
add
pop
out
push
adc
nop
sbb
fdiv
adc
lock
mov
mov
sub
lcall
insb
mov
icebp
adcb
push
mov
dec
je
sbb
std
mov
mov
pop
insb
mov
push
adc
out
add
push
cs
pop
insb
jl
cmpsb
mov
flds
xchg
fldenv
clc
or
pusha
jo
xchg
push
inc
ret
inc
sbb
push
sbb
or
xor
pop
sub
or
cmp
adc
pusha
jg
cwtl
bound
outsl
outsb
or
cmp
pop
ret
inc
movsb
or
cmp
adc
pop
ljmp
leave
js
outsb
outsb
ljmp
je
mov
xchg
xor
push
xor
cmp
mov
or
pop
adc
and
in
xor
je
adc
addr16
in
sub
inc
xor
in
push
sbb
ljmp
or
push
es
js
aam
add
ret
sbb
addr16
jo
xor
push
xor
cmp
iret
dec
sub
xor
jle
test
jne
inc
ljmp
push
jl
out
mov
call
in
out
pusha
xor
inc
jae
pop
hlt
bound
test
adc
add
ljmp
sarb
sbb
xor
push
loop
cmp
cmp
cld
adc
inc
cld
dec
repz
jge
repz
incl
cmp
shlb
imul
sub
arpl
adc
addb
mov
test
dec
and
call
addr16
jmp
jbe
jae
imul
js
je
clc
jle
dec
jecxz
cmp
stc
imul
ja
dec
cmp
jnp
or
lock
addr16
jle
xor
call
insl
call
idivl
dec
repz
cli
sti
fbstp
push
pop
imul
jb
repnz
jno
lds
jge
std
imul
mov
dec
cmpsb
sub
nop
punpckhwd
nop
dec
xchg
movsb
pushf
jg
dec
lods
in
cs
sbb
adc
sbb
or
sub
sub
or
mov
je
lret
fs
jg
in
cld
shrl
xlat
pop
pop
fs
pop
pusha
jo
int3
fiaddl
mov
cli
loopew
mov
bound
sub
cld
repz
test
push
addl
fs
stc
icebp
jecxz
ljmp
imul
cmpl
ficoml
cmpsl
bound
std
in
dec
mov
jb
adc
lret
cltd
push
adc
out
in
in
add
mov
mov
jle
insb
mov
mov
push
jb
pushf
insb
ret
or
or
insb
adc
or
out
imul
xchg
cmc
xchg
or
sub
xor
sub
push
scas
iret
mov
mov
aad
fnstsw
lea
bound
lahf
out
vpaddsw
pop
and
cmp
insb
inc
mov
and
or
outsb
push
jbe
push
jmp
repz
jmp
sub
push
cs
ss
push
stos
lret
mov
test
js
pusha
add
data16
push
sti
fwait
jecxz
stc
cltd
loope
cmpl
pop
es
inc
mov
fldenv
ja
jne
jge
sbb
ljmp
aaa
push
xor
lods
int3
mov
stos
lret
sarb
addr16
inc
gs
insb
or
cli
lcall
inc
add
mov
fisubl
jae
imul
mov
nop
out
mov
insb
xchg
sub
push
sub
insb
push
test
mov
scas
into
mov
jnp
arpl
jns
popa
insb
add
cwtl
loopne
sahf
out
xchg
pop
and
pop
and
fsubs
jo
in
ret
jp
push
insb
stos
sub
repnz
dec
dec
jb
sbb
xchg
outsb
mov
popa
fsubrl
dec
enter
call
out
sub
dec
push
pushf
lahf
test
outsb
or
sbbl
sub
leave
jg
and
das
push
imul
loopne
enter
in
sub
outsb
ljmp
out
push
outsb
mov
out
push
movsl
pop
leave
inc
movsb
dec
pop
imul
outsb
imul
leave
push
ljmp
push
fs
shrb
imul
outsb
push
imul
subb
or
cmp
bound
movsb
inc
jg
dec
jb
test
adc
dec
das
movsb
dec
jg
dec
jg
test
addr16
jle
dec
daa
movsb
inc
jg
dec
ja
test
addr16
jle
dec
sub
cmp
arpl
movsb
inc
jg
dec
jae
test
adc
dec
sub
cmp
popa
dec
and
xor
jne
xor
dec
inc
add
jle
dec
sub
dec
jge
test
addr16
movsb
int3
jg
dec
cld
mov
jle
dec
movsb
movsb
les
dec
hlt
mov
aam
xchg
jle
dec
test
enter
clc
mov
jle
dec
mov
dec
lock
shlb
jle
dec
scas
movsb
into
jg
dec
mov
jle
dec
cmpsb
movsb
jg
dec
divb
jle
dec
stos
movsb
lret
dec
cli
mov
jle
dec
mov
dec
repnz
shlb
out
pavgb
push
stos
ds
xchg
dec
imull
dec
xlat
stos
ds
xchg
xor
stos
ds
stos
xor
stos
ds
mov
dec
sti
stos
ds
mov
ds
fwait
xor
stos
ds
mov
ds
xorl
rep
ds
mov
dec
shrl
dec
jmp
xor
stos
ds
mov
dec
stc
stos
ds
mov
ds
cltd
xor
stos
ds
mov
ds
xorl
dec
mov
dec
shrl
dec
cmc
stos
ds
mov
dec
aad
ds
xchg
xor
stos
ds
test
dec
and
xor
stos
ds
lods
xor
stos
ds
lea
dec
std
stos
ds
mov
ds
popf
xor
pop
arpl
call
movsb
inc
jg
dec
push
push
jle
dec
pusha
movsb
inc
jg
dec
push
outsb
test
addr16
pop
dec
data16
inc
jg
dec
push
out
or
addr16
jle
dec
fbld
cmpsl
testl
dec
pushw
bound
jle
dec
imul
test
addr16
jle
dec
call
out
call
out
dec
out
test
addr16
outsl
out
aam
nop
xchg
imul
jmp
ljmp
ljmp
popf
dec
stc
jne
out
out
dec
out
xor
push
loopne
arpl
bound
insb
inc
sbb
or
les
in
leave
addr16
movsb
popw
out
leave
popa
or
nop
pusha
in
or
sbb
push
popf
pop
out
shlb
push
imul
jecxz
inc
push
mov
stc
int
push
jo
mul
inc
call
pop
loopne
call
jo
push
aam
dec
pop
push
pop
cmpsb
lock
je
inc
pop
cmp
or
push
mov
pop
xor
mov
push
std
shrl
and
cmp
ljmp
and
or
ljmp
loope
adc
mov
test
ret
ds
jg
dec
fildll
mov
popa
outsl
in
xor
test
push
outsb
jp,pt
mov
mov
xlat
sbb
hlt
jg
dec
fsubrl
push
or
out
dec
outsb
imul
jl
je
dec
pop
xor
fistl
sub
aaa
add
add
jne
dec
jle
push
and
inc
jbe
pop
jnp
pusha
pop
inc
bound
clc
hlt
pusha
push
inc
lods
ljmp
mov
bound
vmovdqa
dec
mov
sub
sub
movsb
mov
push
gs
push
xor
out
xor
mov
test
je
mov
inc
push
clc
fs
adc
adc
lock
adc
bound
push
mov
push
cld
sysenter
inc
out
je
outsb
dec
ljmp
dec
call
add
pop
sub
fsubrs
jnp
cmc
push
pusha
and
in
data16
add
dec
test
adc
test
adc
ja
jmp
fs
mov
in
je
sti
mov
sbb
cmp
xor
outsl
imul
sub
out
sub
and
and
jbe
jmp
jmp
fs
pop
enter
pop
mov
jge
push
mov
and
sti
jp
sub
mov
sub
push
and
push
adc
push
jmp
xlat
cmp
aad
cmpsl
cmp
add
sub
int3
push
sbbl
js
xlat
in
mov
lods
and
xchg
sub
cwtl
or
hlt
push
aas
in
dec
dec
adc
mov
pop
roll
mov
jl
inc
or
inc
sbb
mov
adc
mov
test
pop
lret
add
dec
es
xor
and
movsb
pusha
sbb
jbe
es
ds
push
inc
pop
loop
mov
pusha
shlb
inc
dec
notl
in
clc
cld
xchg
outsb
movsb
gs
dec
push
out
dec
dec
clc
or
jno
dec
test
addr16
lds
movsl
jl
xor
inc
insb
push
leave
pop
fsubs
jo
decl
loop
cmp
inc
mov
or
dec
inc
dec
fstps
or
push
js
fcoml
push
outsl
dec
fcoms
fcoml
in
jl
dec
in
mov
adc
xlat
ficomps
xor
clc
fidivrs
es
aaa
orb
je
push
in
loopne
les
dec
cld
cmp
fsubrs
les
data16
repz
push
push
clc
and
fcomp
les
xor
push
sbb
xor
popa
xlat
ficoms
dec
push
inc
fs
push
pusha
cltd
push
orb
dec
and
cld
dec
push
call
std
jle
dec
mov
in
leave
in
cmpsb
dec
jg
dec
pop
jge
enter
in
dec
outsl
or
lret
outsl
int
mov
movsb
call
push
adc
pusha
mov
dec
out
jg
mov
ret
push
fucom
xor
push
aad
push
decl
nop
fs
call
stos
das
jb
adc
stc
or
and
dec
cwtl
outsb
pop
jne
cmpsb
cmp
test
bound
cld
jae
daa
in
adc
dec
sbb
jb
jp
mov
insl
jmp
stos
dec
fsubrs
test
fld
dec
insb
int3
xor
sbb
sub
inc
cli
in
jno
dec
push
aas
and
loop
loopne
hlt
push
and
and
movsb
pop
pusha
cmp
stos
daa
in
loope
cmp
bound
scas
addr16
in
sbb
into
pop
mov
bswap
add
dec
test
sete
xchg
xchg
push
add
sub
xchg
sub
popf
jmp
dec
ficomps
jl
lret
push
fdiv
movsl
xlat
imul
add
jae
jle
push
jb
push
addr16
movsl
pop
js
je
int
je
xor
cld
dec
enter
xor
push
notl
or
pop
iret
jbe
jno
and
adc
test
ja
push
lret
push
in
dec
sbb
or
jecxz
js
lret
aaa
jo
jmp
andb
ret
pusha
jg
dec
mov
test
arpl
je
cmp
or
and
inc
jl
loopne
jecxz
or
movsb
sahf
inc
push
jnp
je
bound
loopne
sbb
mov
pop
xchg
mov
mov
mov
pusha
andb
sbb
pop
push
out
pop
pop
mov
adc
jbe
ja
xor
arpl
push
test
jge
faddl
jl
lret
dec
adc
fcmovb
fisubs
cld
ljmp
shll
xor
repz
jo
xchg
pop
incl
pop
push
aad
add
push
sbb
fimull
xlat
imul
pusha
ficoml
call
orb
es
and
fdiv
fs
add
cmpsl
fwait
pop
xchg
jbe
addr16
or
into
inc
mov
gs
xor
push
pop
int
cmp
pop
sub
mov
scas
push
pop
loop
or
push
sti
sbb
and
ds
clc
jae
out
gs
out
sar
pop
outsb
pop
enter
lret
lods
test
and
into
dec
push
pop
inc
aad
lahf
addr16
jmp
orl
lods
bound
je
xor
rcll
str
dec
inc
inc
xchg
int3
sahf
je
rorb
loopne
fdivrl
push
das
push
ret
clc
data16
nop
mov
push
adc
push
test
imul
cs
js
dec
push
stos
sbb
cmp
jl
xchg
adc
and
das
sbb
mov
leave
xor
fs
inc
fidivs
dec
enter
dec
aad
out
or
jl
sar
pop
int
sbb
jg
cld
xor
xchg
inc
pop
std
jb
or
call
sub
and
test
fcmovnbe
in
pusha
cmp
pop
in
mov
int3
in
movsl
in
xchg
sub
inc
dec
pop
jae
ja
fsubrl
jo
push
and
mov
sbb
aas
jmp
fsubl
pop
test
pop
imul
sub
mov
stc
aam
cmp
mov
add
jmp
adc
imul
sub
pop
loopne
in
loope
hlt
jl
call
adc
aas
and
sbb
jb
cmp
loopne
push
add
mov
mov
add
mov
push
jmp
mov
xor
orb
adc
jno
dec
pop
fs
and
ljmp
insb
ss
fsubs
imul
add
add
push
jns
cli
and
jo
jge
js
aam
cmpsb
fs
cmp
int3
pushf
outsb
lret
pop
dec
cltd
inc
scas
inc
je
add
add
daa
fsub
je
data16
decb
and
fsubl
inc
push
ficoms
xorb
out
xchg
mov
add
sub
fs
dec
scas
push
push
scas
cmpsb
xchg
inc
inc
jge
jnp
sbb
scas
sub
test
push
sti
cld
mov
scas
movsb
mov
nop
or
inc
sbb
enter
or
js
sub
jo
jle
mov
adc
fcompl
push
dec
aas
pop
lods
js
outsb
push
fldcw
cli
sub
fcomps
push
add
pop
push
dec
mov
xor
or
add
fs
jo
inc
adc
stc
inc
push
mov
xor
pop
cmp
xor
lds
jge
xor
jecxz
xchg
fadds
inc
cmp
inc
cmp
mov
call
mov
mov
inc
or
pushl
adc
dec
push
sub
arpl
js
pop
dec
push
test
sub
mov
int3
push
fistps
fcoms
fnstenv
ja
lods
ret
add
pop
push
shll
jbe
pop
leave
xor
movl
repz
lods
fistpll
push
adc
pop
in
adc
mov
negl
pop
outsb
bound
push
mov
ficompl
sahf
addr16
lods
jo
cmc
xor
test
arpl
or
pop
jle
out
jbe
cmp
cmp
iret
data16
push
add
bound
pusha
push
mov
xor
push
mov
out
push
out
xchg
pusha
xchg
cmpsl
jl
dec
outsb
pop
je
sbb
jno
hlt
inc
mov
pop
insl
push
fsubs
fdivrl
jns
inc
aam
test
je
movsl
cwtl
jmp
jne
cmp
imull
pop
call
je
mov
mov
jnp
push
push
lret
sbb
js
aaa
imul
loopne
adc
mov
cmp
add
pop
adc
dec
lods
lcall
mov
push
sub
iret
dec
shrl
and
sbb
in
add
call
fistps
loopne
hlt
mov
jns
jnp
and
inc
cwtl
imulb
lret
push
xchg
cmp
lret
push
out
inc
and
lods
imulb
push
jl
lods
inc
jo
sbb
push
push
push
mov
shrb
and
and
outsb
xor
pop
jnp
add
rolb
dec
xor
test
pop
xchg
push
inc
std
addb
push
ret
loop
int
sbb
divw
mov
scas
pop
pop
cltd
loop
cld
arpl
fsubs
out
push
add
cmp
enter
add
pop
or
dec
jo
fs
mov
cmp
sbb
xor
sbb
outsb
fisttpl
inc
test
inc
mov
sub
adc
sub
inc
enter
pusha
lods
dec
dec
inc
push
sbb
aas
push
mov
js
add
add
dec
jle
mov
mov
push
pop
pop
fxch
cmp
dec
stos
mov
push
push
jle
jg
aad
xor
ret
push
daa
inc
lret
and
subl
icebp
dec
dec
push
push
iret
jae
movsl
in
push
and
cmc
xlat
loop
ss
out
pop
sbb
mov
jno
jle
push
push
loop
pushf
sub
jl
jge
jne
aam
jo
dec
push
and
inc
xchg
xor
xchg
or
cs
pushf
jo
dec
pop
pop
push
test
sahf
imul
sarl
jl
xchg
outsb
sub
xor
jns
cmpsl
cltd
inc
dec
jae
push
pop
cs
jp
lret
call
sub
cmc
inc
lock
xor
negb
imul
push
aad
push
lcall
cmp
pop
aaa
cmp
movsl
fisubs
and
mov
js
adc
and
test
pusha
jle,pn
sub
jmp
outsb
pop
fs
inc
int3
dec
outsb
dec
loopne
aam
dec
dec
fs
jb
jbe
dec
push
pop
rcrb
dec
dec
aas
cmp
jns
mov
mov
imul
push
in
cmp
sub
jo
je
js
int3
jl
push
mov
scas
js
js
xchg
test
int
leave
dec
aad
int3
xchg
pop
and
dec
fnstenv
lret
mov
or
imul
and
rorb
push
mov
pop
jne
ljmp
cmc
inc
lods
jle
lret
jns
dec
inc
jno
ja
jo
cli
jl
and
pop
pop
js
push
fdivs
lcall
call
addr16
jnp
mov
imul
pop
push
and
xchg
pop
dec
rcr
mov
jo
and
inc
sbb
jo
idivb
iret
and
inc
push
fcomps
jno
pop
lods
cmp
leave
jle
andl
sub
jbe
xchg
int
inc
xchg
lds
das
jmp
pop
pop
hlt
lock
push
push
in
mov
or
sbb
jp
jo
xor
sbb
arpl
dec
jle
mov
mov
jno
rol
jg
fisttpl
inc
pusha
push
icebp
testb
fcmove
imul
in
daa
push
sahf
cmp
and
icebp
sti
je
jnp
inc
pop
xchg
pop
inc
fisubl
dec
jp
jo
pop
idivb
clc
dec
xlat
pop
mov
pop
sidtl
es
inc
repz
xor
lret
orps
jl
inc
in
mov
cmp
cltd
dec
ret
call
mov
push
cld
sti
jle
xchg
jl
jb
pop
jl
mov
mov
jge
in
imul
loop
mov
hlt
xchg
ja
roll
mov
dec
jo
fdivrp
je
clc
fidivrs
adc
testb
cld
aas
add
mov
jge
pusha
daa
in
mov
or
and
push
fnstsw
int
movsl
jg
hlt
or
pop
sbb
xor
and
rcrb
aas
pop
mov
cmpsl
jl
std
pop
add
loope
fs
popa
icebp
sub
push
jno
popf
push
fs
aam
add
fmull
sti
ja
pop
fs
int
ss
ja
pop
rolb
push
xor
hlt
je
push
das
fisubrs
sbb
sub
lock
fs
xchg
es
mov
and
cmpsl
push
jb
sahf
mov
repnz
dec
dec
jo
js
sub
in
push
pusha
pop
out
cltd
mov
dec
iret
data16
push
shrb
or
or
cmp
movsb
pxor
outsb
into
outsl
out
push
enter
jo
inc
jmp
popf
rcll
xor
pop
pop
cli
out
and
ret
push
out
sbb
or
nop
cmp
cmc
das
ds
test
out
int
icebp
cs
fst
mov
loop
clc
add
jg
mov
push
xchg
mov
fs
insl
js
pop
xlat
mov
push
mov
daa
imul
mov
mov
incb
aam
push
enter
xchg
cmpsl
jnp
mov
out
xchg
pushf
out
out
call
incb
pop
mov
scas
jae
enter
sub
call
push
int3
ret
dec
jb
enter
cld
dec
and
hlt
fldenv
xor
out
cld
pop
push
mov
bound
in
ss
pop
iret
call
adc
cmc
push
mov
xlat
push
push
xor
lahf
loope
addr16
xor
jne
ret
and
cmp
inc
mov
in
push
js
inc
lahf
iret
jo
mov
test
cmp
adcl
sub
rorb
cs
call
out
outsb
and
push
pop
jae
pop
fsub
sbb
inc
add
xchg
dec
notl
xchg
push
pop
mov
or
sub
cmp
sub
dec
ds
sub
dec
sub
cmp
test
xchg
pop
int
cmpsl
fcmovnu
mov
pop
sti
fcoms
in
xchg
mov
pop
jp
inc
pop
mov
icebp
addr16
jmp
pop
sarl
mov
sbb
es
lcall
adc
lahf
dec
outsb
imul
jmp
es
push
clc
jg
pop
outsb
in
or
push
je
xor
or
mov
cmp
xor
fsts
test
xor
pop
mov
push
fs
and
inc
dec
and
jge
out
jl
outsb
jg
aaa
outsb
or
movsb
and
push
dec
pop
inc
test
addr16
push
push
mov
or
jg,pt
dec
push
inc
test
addr16
xor
or
ds
xlat
xor
incl
adc
sti
inc
mov
call
insl
fs
jg
jl
stc
fs
nop
push
jb
cmp
dec
pop
or
dec
in
pop
sbb
outsl
lds
out
scas
sahf
dec
add
add
push
adc
cmpsb
loope
imul
cmp
push
data16
sbb
scas
shlb
push
dec
mov
inc
jg
ljmp
or
pusha
xchg
pop
daa
jge
dec
sbb
adc
test
ret
inc
dec
dec
pop
cmp
sub
aaa
and
adc
cmp
dec
data16
and
adc
dec
dec
push
xor
nop
je
int3
cmp
in
cltd
push
imul
fimuls
repz
ljmp
and
dec
dec
cmp
data16
sbb
aaa
add
movsb
sbb
imul
and
pusha
pop
pop
sbb
sbb
cs
sbb
outsl
dec
pop
mov
or
or
clc
xor
mov
movsl
sbb
add
push
into
sbb
dec
lods
sub
push
dec
jo
pop
mov
add
push
xor
sub
or
cwtl
imul
xor
dec
sbb
data16
inc
pop
push
sbb
dec
jo
data16
dec
pushf
je
cmc
scas
dec
fidivrl
jg
pop
push
call
cmp
iretw
jb
out
sbb
je
adc
nop
jp
sbb
add
jo
lret
add
xchg
push
sub
out
dec
pop
ja
and
shl
inc
imul
fidivs
adc
in
sub
out
dec
jl
data16
inc
stos
dec
sbb
sub
pop
inc
imul
pop
push
sbb
xor
inc
cmp
or
jl
adcb
push
pop
mov
push
dec
lcall
push
ja
inc
mov
pushl
sbb
add
or
push
dec
adc
fs
gs
clc
js
lods
sub
push
inc
add
inc
add
clc
push
lods
cmp
push
cmp
testb
imul
fimuls
inc
call
push
pusha
data16
loopne
leave
dec
dec
hlt
out
scas
sbb
fisttpl
add
imul
and
pushaw
and
in
sub
add
dec
sbb
data16
inc
sub
add
jl
or
je
or
push
dec
inc
pop
push
jge
dec
sub
data16
push
mov
stos
cmp
jne
sub
cmpsb
or
imul
fimuls
xor
fs
mov
dec
jl
clc
sbb
add
mov
inc
outsl
dec
push
mov
mov
jmp
shlb
push
jl
cmp
push
push
sbb
outsl
dec
je
inc
push
inc
or
pop
out
inc
imul
ficoms
inc
cld
xor
leave
or
clc
sbb
and
push
leave
xchg
and
clc
jo
xor
pop
scas
rclb
dec
dec
and
dec
add
adc
lret
xor
inc
cmp
sbb
jns
jl
jno
push
dec
cmp
mov
dec
je
push
aam
aas
inc
clc
les
push
ret
inc
dec
dec
sub
push
inc
movsb
dec
xchg
cmp
dec
les
inc
dec
dec
add
repz
inc
adc
outsb
push
data16
je
xchg
jl,pn
imul
aam
xor
pop
xchg
mov
sub
inc
outsl
dec
and
data16
or
ds
add
sbb
jle
xor
jl
adc
xor
jl
je
clc
sbb
adc
stos
mov
outsl
dec
sub
pushaw
push
mov
decl
dec
data16
or
push
dec
adc
jl
push
inc
xor
xchg
mov
inc
dec
dec
push
cmp
aad
push
cmp
xorl
xchg
shlb
test
xchg
and
xchg
repz
js
data16
nop
push
addb
push
sti
pop
pop
jb
push
or
adc
and
cmp
inc
xor
add
clc
or
sub
and
sbb
jb
and
push
mov
loope
dec
push
imul
pop
push
cmp
iret
and
and
pusha
lods
dec
cmp
data16
inc
pop
xor
mov
or
inc
or
out
adc
data16
dec
push
and
pop
and
dec
ja
add
sub
pop
adc
inc
sub
add
clc
and
lods
adc
sub
jl
push
xor
push
leave
sbb
sti
adc
inc
add
pshufw
je
inc
sti
pop
je
add
push
adc
std
insb
dec
sub
xor
dec
or
data16
mov
int3
push
mov
push
push
pusha
mov
cmp
dec
adc
imul
pop
and
mov
adc
cmp
inc
lods
dec
xor
inc
push
dec
enter
cs
sub
push
movsb
js
fs
dec
js
js
and
cs
je
inc
jecxz
xor
push
imul
aam
or
scas
dec
push
add
out
insl
and
out
xchg
fmuls
sbb
mov
data16
fsubl
pushfw
sbb
push
outsl
call
and
cs
cld
aam
bound
xchg
mov
jbe
in
ja
je
rolb
jb
je
or
movsb
xor
cmpsb
or
jbe
pushf
cmp
or
int
sbb
movl
and
scas
or
push
sbb
dec
lcall
jo
push
jl
sub
mov
je
scas
ss
pop
mov
push
dec
and
popa
in
cmp
sete
es
or
dec
leave
inc
dec
dec
cmp
mov
dec
adc
inc
out
and
jmp
jo
dec
and
and
mov
and
or
stos
mov
push
daa
jle
pop
js
iret
xor
sbb
das
xchg
add
fs
in
adc
fs
stos
dec
sub
and
pop
push
bound
scas
pop
cmpsl
jb
pusha
cmpsl
aam
in
jg
jmp
jl
sti
sbb
adc
je
inc
repz
xlat
xor
inc
lock
out
test
addr16
stc
inc
test
push
push
nopl
call
or
outsl
and
or
dec
inc
or
xor
js
fs
inc
pusha
pop
sbb
jl
outsl
dec
js
dec
into
sub
dec
jg
lods
push
dec
dec
inc
xchg
fildll
cmp
jp
sbb
pop
and
mov
in
mov
mov
jo
movsl
call
jmp
pop
js
cmpsb
ds
push
pusha
sub
sub
sub
sub
lret
ret
js
fbstp
lods
sub
dec
add
cmp
js
pop
icebp
fs
js
and
pop
inc
icebp
xor
and
push
and
jg
lods
je
in
dec
pusha
mov
out
out
loope
jmp
xlat
das
imul
insb
js
sub
sub
mov
cmp
cmp
or
je
into
or
push
dec
or
add
adc
or
or
pusha
push
mov
pop
jo
cs
push
rorb
pop
push
xlat
push
push
xor
fists
push
inc
fs
add
push
push
loop
xor
shlb
insb
sub
into
add
push
outsl
jle
inc
push
mov
stos
pusha
in
push
push
jecxz
dec
push
jns
push
hlt
movsb
dec
mov
dec
incl
inc
sbb
add
je
push
sahf
push
ja
scas
mov
xor
xchg
jp
pop
call
push
idivb
adc
push
clc
sbb
sub
push
xor
je
mov
dec
lock
addr16
jle
push
pop
lock
cmp
das
jmp
and
pusha
push
mov
imul
or
or
push
in
dec
pop
or
call
and
inc
push
xchg
pusha
insl
xchg
inc
or
cmp
jbe
clc
std
js
dec
jo
cmp
pop
stos
push
and
jmp
insl
je
shlb
imul
adc
push
jmp
and
add
xor
sbb
add
je
adc
bound
adc
mov
mull
push
pop
inc
mov
jge
es
dec
push
pop
cld
push
pop
mov
scas
xadd
aam
aad
sti
add
sarb
push
test
pop
ljmp
push
lock
pop
les
adc
out
and
fs
add
popa
xchg
push
xor
sub
subb
call
sysenter
ljmp
out
cmp
inc
dec
and
push
js
je
or
xor
add
xchg
jns
clc
or
daa
or
add
push
dec
cmp
adc
js
or
adc
add
je
add
sub
faddp
idivl
cmp
repz
inc
fs
test
adc
sbb
call
stos
js
or
xor
xor
sbb
push
jl
mov
mov
xchg
jecxz
out
jo
push
mov
push
xor
sub
jo
fistpll
pop
push
or
add
pop
push
js
dec
or
lods
cli
dec
popl
movsl
cmp
cmp
mov
mov
jle
and
or
dec
cmc
int
into
loope
jle
dec
imul
js
xor
push
pop
pop
lods
leave
sbb
lahf
insl
adc
push
sub
scas
push
push
add
jo
push
cmp
and
rcrb
or
push
pusha
push
pushf
dec
out
movsb
sbb
dec
push
out
test
dec
js
enter
cmc
data16
or
mov
hlt
push
dec
dec
jo
stos
das
out
in
dec
push
cmp
push
jb
cmp
sub
and
or
and
jo
pop
mov
mov
and
out
insb
test
cmp
das
mov
jl
movsb
insl
jg
dec
clc
outsb
test
addr16
jle
dec
imul
push
push
push
lock
outsl
jle
push
lods
lock
js
jo
mov
add
imul
jmp
xchg
dec
sbb
and
sub
fs
js
xor
or
dec
sbb
je
adc
or
push
xlat
das
adc
dec
out
push
aas
sub
js
and
sahf
and
je
icebp
movsb
xor
xor
imul
js
push
push
sbb
insl
adc
popa
pusha
jmp
push
fs
push
jns
push
hlt
sub
movsb
inc
or
ja
movsl
js
leave
push
test
dec
fidivrs
dec
cmp
cmp
or
xchg
mov
sahf
cmp
jmp
jg
ds
and
mov
icebp
mov
cld
inc
push
pop
and
and
and
and
push
sti
dec
add
jno
push
inc
mov
mov
sub
pushl
repz
popa
dec
inc
sub
aaa
inc
lock
out
inc
push
cmpsl
add
pop
jle
mov
push
mov
xor
and
adc
pushl
xor
in
xor
mov
js
stos
push
adc
jbe
fstpt
cmp
push
iret
push
out
jo
dec
xor
add
pop
mov
clc
sub
or
je
js
cmp
movsb
mov
jo
cld
pop
stos
push
add
add
sbb
push
push
push
mov
cmp
xchg
jp
xchg
insl
in
jp
fisttps
jae
fisttps
filds
mov
jb
dec
ja
in
jle
dec
ljmp
cmc
test
loope
movsb
xor
or
jle
dec
out
pop
jg
dec
adc
test
addr16
jg
cmp
dec
arpl
jno
arpl
jle
dec
inc
movsb
bound
dec
loop
test
addr16
jle
dec
sub
icebp
push
sub
or
je
add
pop
jle
sbb
push
cmpsl
sub
imul
sub
sub
sub
sub
sub
sub
sub
sub
outsl
cmp
in
mov
mov
mov
mov
mov
mov
mov
mov
mov
xchg
sbb
movsb
out
decl
movsb
adc
loop
adc
cmpsl
and
stc
popa
and
inc
loop
sub
int
sbb
mov
pusha
mov
data16
or
cmp
push
pop
imul
subb
stc
je
and
pushf
inc
mov
push
dec
and
inc
mov
es
mov
or
sub
sub
xor
or
inc
add
or
or
in
cmp
cmp
je
out
test
pushw
adc
mov
add
fdivl
xor
loope
xor
and
mov
cmp
push
sub
sbb
sub
sub
sub
mov
call
clc
push
dec
sub
add
mov
mov
xchg
jle
into
push
push
push
mov
dec
data16
sub
decb
aad
js
sbb
push
and
rcrb
add
push
je
and
movsb
add
cmp
cwtl
dec
or
push
popf
aam
add
pop
cs
and
or
js
inc
mov
fisttps
pop
movsl
mov
stc
cs
mov
jg
add
shrl
sbb
xorb
jle
dec
adc
push
xchg
inc
movsb
js
test
xchg
mov
sub
sub
pushl
dec
push
inc
sbb
add
cmp
push
in
test
dec
push
ds
add
ljmp
add
sbb
pop
jo
pusha
dec
xor
inc
sub
push
stos
fldcw
shlb
test
insb
push
divb
js
outsb
jle
cld
push
push
js
cld
and
inc
and
push
fstpt
add
add
cmp
insb
push
idivb
jl
push
xchg
jns
clc
imull
jge
or
movsb
outsl
incl
int
pop
popa
lahf
insb
sub
add
js
inc
or
or
dec
cmp
adc
cmp
call
jg
jns
sub
aaa
pusha
pusha
xchg
inc
sbb
outsl
cltd
push
jmp
aaa
dec
adc
pusha
repz
pusha
iret
mov
sbb
jo
aaa
add
push
test
je
jb
aas
push
jns
jl
xor
jns
jmp
aaa
hlt
fildl
push
xor
out
cmp
mov
inc
inc
or
push
xor
lock
jb
pop
stc
icebp
jp
stc
bound
pop
jl
jo
pop
xor
add
inc
and
xchg
pusha
dec
xchg
pusha
pop
xchg
xlat
push
sub
dec
add
and
push
aad
lcall
or
outsb
sub
stos
push
sbb
fwait
lock
fs
ss
lock
arpl
js
push
jecxz
dec
shlb
jecxz
pop
rorb
or
out
dec
sbb
stos
clc
loope
jmp
ss
sub
clc
sub
lret
push
dec
dec
clc
pop
or
pop
or
dec
dec
push
add
sbb
jmp
pusha
or
js
adc
push
cmp
mov
or
add
add
je
js
jns
mov
dec
push
in
insb
jnp
mov
fisttpl
adc
je
sub
pop
pop
and
and
sahf
or
sub
mov
xor
insb
leave
jnp
scas
adc
sti
xor
sub
mov
dec
jl
pop
scas
pop
sbb
leave
and
xor
dec
imul
jge
push
fisttpll
jg
leave
adc
xor
cmp
je
jp
cmp
das
fucomp
inc
pop
jp
cvttps2pi
int
insb
stos
js
cmp
out
push
xor
pop
xor
loope
or
pusha
push
sbb
stos
push
cs
sub
sahf
cli
clc
push
loop
and
dec
jo
fs
push
jecxz
push
jns
insb
push
divb
dec
mov
insb
js
pop
dec
pop
pop
xchg
fildll
cmp
out
push
and
inc
stos
push
xor
mov
or
dec
je
add
js
pop
pop
adc
dec
and
xor
stos
push
je
sbb
push
inc
push
outsb
jg
lds
push
js
andps
xchg
insb
jmp
xor
fs
sbb
push
aam
dec
pop
and
push
and
and
ljmp
add
cmpsl
or
xor
jb
dec
jb
int
push
pop
repz
imull
fists
push
fildll
xor
jb
dec
jb
dec
jb
dec
jb
dec
jb
dec
jb
dec
jb
dec
jb
dec
jb
dec
jb
dec
jb
dec
jb
dec
jb
dec
jb
inc
or
aad
adc
xchg
pusha
pushf
xchg
pusha
sbb
dec
xor
dec
ja
in
jle
dec
jg
inc
push
test
addr16
dec
dec
movsb
aad
jns
inc
stc
test
addr16
push
dec
clc
movsb
sarl
dec
sub
test
addr16
and
movsb
mov
lds
or
movsb
xchg
aam
and
stos
unpcklps
shll
lret
adc
mov
xchg
or
insl
cli
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
ljmp
xor
sub
icebp
xor
jecxz
inc
xor
sbb
push
fistps
push
fists
fildll
arpl
js
adc
or
pop
call
push
xor
sub
loope
insb
movsb
jo
fs
mov
jecxz
lock
arpl
js
cmp
or
jecxz
push
rclb
jecxz
and
pcmpeqd
fs
dec
icebp
and
pop
push
icebp
and
pop
and
sub
or
or
dec
sbb
cs
push
mov
mov
sub
test
hlt
mov
hlt
mov
negl
mov
sub
sub
mov
jg
popa
out
dec
cld
mov
inc
jp
lcall
mov
push
dec
mov
sub
mov
and
fistpll
fisttps
fisttps
rorb
mulb
cmp
push
push
xor
mov
pushf
sbb
aas
cs
push
push
inc
je
jl
js
sbb
sti
sbb
jo
push
dec
add
incl
or
lret
push
loopne
push
data16
push
stos
xor
mov
mov
clc
cmovl
mov
push
mov
movsb
sbb
sbb
adc
sbb
push
fwait
lock
arpl
mov
or
inc
jo
xchg
push
iret
inc
or
leave
push
cld
push
push
pop
and
add
nop
jecxz
xor
xor
jle
ja
add
push
sbb
adc
adc
lret
lgs
aaa
je
and
or
pop
mov
pop
pop
shll
loopne
push
pop
nop
insb
or
into
and
push
add
xor
outsb
loope
jae
clc
add
cmpsb
andl
cmp
xchg
test
insb
push
testb
xchg
pop
jb
jb
cmp
push
jo
inc
dec
js
cmp
iret
pop
or
or
into
adc
je
repz
push
dec
jl
pop
sbb
push
lret
xor
pop
mov
sbb
mov
stos
insb
insb
loope
movsb
or
or
adc
mov
sub
dec
push
jg
dec
inc
jl
inc
sbb
push
or
jb
js
xlat
das
push
std
jl
sti
dec
jb
push
push
dec
outsl
ret
in
ret
ljmp
and
jl
shlb
dec
push
ficompl
pop
dec
bound
adc
dec
repnz
dec
lock
pop
into
sub
js
mov
bound
sbb
repnz
sub
rcrb
and
sbb
fildll
dec
imul
fs
push
pushf
sub
in
and
addr16
mov
mov
push
jge
fs
push
pop
cmpsl
adc
arpl
in
fs
push
add
jo
and
jge
cmp
arpl
or
sbb
or
push
mov
je
or
dec
inc
or
lret
and
sub
pop
insl
dec
xor
sub
sub
lcall
cmp
in
dec
xor
jo
leave
sbb
sbb
or
push
push
shrl
add
dec
decl
stc
and
pop
push
xlat
push
push
xchg
insb
sub
add
and
sbb
leave
xor
outsb
dec
pop
pop
add
sub
dec
push
pop
or
push
idivb
jl
adc
movsb
dec
or
sub
add
pop
outsl
push
pop
sti
inc
jo
and
js
push
shlb
imul
mov
or
in
cmp
sbb
sbb
inc
sbb
je
out
or
jmp
ficoms
outsl
add
jmp
iret
xchg
or
mov
icebp
call
aam
loop
loope
dec
or
and
aaa
xor
cmpl
or
pusha
adc
pop
pop
pop
stc
or
pop
inc
cld
pusha
dec
push
js
test
or
icebp
sbb
mov
dec
aam
inc
and
xchg
jns
jb
enter
and
test
mov
inc
add
mov
pop
adc
mov
inc
pusha
pop
out
mov
and
push
in
mov
hlt
repz
hlt
enter
pop
hlt
ficomps
push
or
xlat
sub
sub
sub
stos
and
into
push
sbb
sub
lods
cltd
insb
pushl
or
jmp
pop
and
mov
fidivs
add
push
inc
push
out
jle
and
push
push
je
stos
mov
xor
test
insb
or
movl
and
je
adc
pop
or
mov
sub
sbb
into
je
push
mov
iret
mov
rclb
push
cmp
or
and
and
and
pushl
xor
in
movsb
or
add
inc
movsb
sbb
adc
leave
adc
jmp
push
or
add
push
jg
dec
outsb
leave
sub
inc
pop
jecxz
pop
push
pop
push
xlat
jle
dec
pop
push
sub
lock
or
or
xchg
lock
cmp
mov
mov
insb
in
xor
mov
test
test
movsb
push
mov
js
add
push
push
adc
fsts
stos
insl
insb
dec
dec
pushf
fs
cmp
pop
je
je
js
sub
inc
out
test
addr16
stc
or
jnp
insb
push
sti
pop
imul
jne
ret
or
icebp
in
or
je
leave
xor
xor
sahf
push
adc
sbb
xchg
mov
xchg
or
pusha
add
shll
push
add
cmpsl
dec
push
adc
inc
push
jb
dec
adc
dec
inc
es
je
jg
out
pop
out
cmp
inc
lret
pop
push
push
std
mov
dec
inc
xor
cwtl
jne
imul
aam
fs
sbb
je
add
or
add
aam
jmp
inc
dec
pop
out
jns
nop
fidivs
call
mov
inc
inc
jo
stos
push
inc
and
ret
xchg
rcr
or
mov
push
clc
and
fisubs
dec
fsubs
arpl
in
lret
movsb
add
xor
push
movsb
adc
add
js
call
adc
decl
fs
bound
pop
je
mov
push
dec
sub
xor
loope
movsb
mov
push
jb
dec
bound
push
jo
adc
sub
pop
add
insb
push
aad
popa
sub
mov
xor
xor
xor
or
sbb
push
mov
movsb
sbb
sbb
repz
test
cmp
test
data16
adc
decl
dec
xchg
cs
movsl
call
pop
pop
inc
icebp
movsb
and
test
sub
or
push
xorl
push
adc
jmp
dec
pop
push
je
mov
sahf
inc
sarl
add
test
fstpt
jns
les
mov
push
or
pop
pop
aaa
outsb
push
sub
cmp
and
bound
xor
xor
jb
inc
insb
push
js
push
and
and
and
and
movl
or
or
or
or
add
inc
add
jp
js
iret
dec
or
inc
in
jle
pop
fldenv
inc
inc
in
cs
inc
adc
inc
pop
xchg
push
inc
sbb
hlt
adc
jb
lcall
mov
push
push
jl
mov
push
les
xchg
in
insb
aaa
movsb
pop
pop
cmc
xchg
addb
nop
xchg
jne
cmp
popf
incl
ljmp
inc
stos
push
xor
outsl
in
inc
sub
xchg
cmc
pushf
inc
inc
insl
ret
cmpsl
insb
dec
cs
or
cmp
test
push
cld
inc
imul
jg
inc
js
mov
push
js
xchg
push
fbstp
mov
js
push
sbb
sub
mov
fs
inc
xor
mov
jns
add
out
in
and
push
stos
andb
or
pusha
inc
movsl
clc
inc
js
dec
and
and
and
and
and
shl
push
pop
je
movsb
sbb
out
movsb
inc
xor
mov
mov
push
mov
dec
jo
jl
js
xor
jbe
outsl
addr16
cmpsb
dec
sub
inc
rorl
inc
icebp
fs
pop
jo
js
push
sub
pop
mov
cmpsb
and
or
shlb
or
xor
or
rcrb
in
stc
adc
lods
jo
push
lds
lods
mov
xor
add
or
add
pusha
add
ss
push
divb
js
or
and
pop
sbb
movsb
pop
or
mov
cmp
cmpsb
dec
je
ds
xor
test
test
insl
ljmp
push
push
xor
movsb
inc
xor
dec
outsl
sub
push
dec
mov
mov
push
and
divb
in
aam
pop
push
add
pop
call
daa
rcrb
dec
stos
push
and
arpl
shrb
or
sarb
jecxz
or
jp
dec
adc
sbb
dec
inc
lds
int
sbb
outsb
add
stos
push
data16
stos
push
js
or
stos
push
inc
jb
dec
pop
pop
pop
lock
addr16
icebp
movsb
push
dec
push
xchg
jno
lret
mov
inc
pop
in
cs
pop
jo
mov
mov
movsb
jo
xor
incl
js
rcrl
clc
sbb
push
and
and
aad
out
or
or
mov
jb
insb
movsb
sub
jle
out
push
repnz
pushf
dec
pop
pop
inc
pushf
inc
std
dec
inc
out
pop
and
ret
push
cmp
in
push
add
sbb
shll
jne
insb
fildll
insb
mov
incl
out
cmp
or
push
cmp
cli
and
add
test
inc
pop
or
movsb
outsl
ja
enter
clc
lea
and
pop
or
js
sbb
cmp
inc
pop
mov
fs
jb
ret
cmc
sbb
mov
mov
sti
jl
sub
sub
mov
leave
push
bound
xor
mov
add
je
shlb
or
push
xchg
push
inc
cmp
ficoms
or
or
or
add
js
push
mov
push
adc
sub
aam
cmc
sti
inc
js
push
bound
sub
or
sahf
mov
mov
xor
add
leave
sbb
outsl
dec
adc
sub
mov
fsts
das
fisubrs
cmp
xorl
je
jo
je
jmp
pop
rorl
xchg
lds
fnstenv
sub
or
dec
pop
pushf
and
sti
jp
inc
mov
push
add
leave
insb
in
xor
xor
js
add
insl
jle
mov
inc
sbb
lock
int3
jle
dec
dec
fs
inc
dec
jmp
push
aam
js
jns
push
ja
and
cmp
mov
push
or
aam
inc
inc
or
adc
or
xor
jl
or
aad
push
jb
lret
mov
and
fstl
pop
jb
dec
jb
dec
clc
cmp
mov
imul
test
lret
mov
jle
dec
cmc
add
push
push
pop
sbb
sub
dec
pop
pushf
fs
js
je
inc
sub
enter
fs
push
dec
outsb
movsb
sub
sub
jg
leave
xor
and
cmp
dec
dec
push
dec
bound
addr16
lock
pop
leave
or
fildl
roll
add
shrb
add
lea
inc
sbb
pusha
movsb
jl
outsb
leave
js
je
imul
dec
bound
addr16
lock
addr16
pop
push
push
jle
dec
push
push
sub
pop
leave
sub
dec
and
dec
cmp
test
out
jg
xor
es
dec
pop
pop
add
add
dec
push
insb
dec
jo
inc
add
insb
arpl
sbb
insb
push
fstpt
dec
inc
movsb
dec
js
push
insb
fcmovbe
sub
dec
push
sub
xchg
js
aaa
pop
mov
movsb
xor
xor
clc
pop
and
push
cmpsb
xor
cmp
pushf
push
push
jecxz
jmp
jo
popa
pop
adc
push
pushf
movsl
jp
xchg
dec
in
in
sub
cmp
dec
fs
or
mov
fs
sub
cmp
mov
and
push
insb
sub
push
xchg
add
mov
jns
pushf
fs
inc
js
fs
sbb
push
cmp
push
jl
and
fimuls
and
jle
and
xor
es
addb
js
jle
add
fs
dec
test
inc
je
mov
popaw
and
inc
stos
mov
pop
add
pusha
pop
xchg
pusha
pusha
sub
cmpsb
out
cmpsb
xor
or
sub
mov
pop
bound
cmp
rcrb
add
lahf
sub
push
push
test
addr16
clc
sahf
insb
in
xor
xor
inc
mov
es
pop
or
cmp
push
push
sub
sub
pusha
pop
push
addr16
mov
push
sbb
sub
pcmpgtb
sbb
pop
in
sbb
es
data16
cmp
sub
jg
pop
pop
cld
jp
in
sub
stos
push
and
ja
sub
push
jle
dec
dec
movsb
ja
jle
imul
outsb
sbb
movsb
add
jo
js
call
dec
stos
add
cmp
movsb
xor
inc
test
addr16
jle
dec
pusha
movsb
push
gs
push
add
cmp
dec
cmp
call
inc
jle
dec
jae
jns
fs
test
adc
test
addr16
push
dec
xor
das
test
movsl
jle
dec
push
movsb
jno
jns
cmp
or
push
js
jno
dec
jg
dec
inc
dec
mov
movsl
sub
mov
cs
sub
lods
dec
addr16
jle
addr16
cs
movsb
push
call
cmp
and
push
movsb
pop
jg
dec
dec
ja
pusha
loope
stos
sbb
movsb
call
and
test
addr16
jle
dec
inc
movsb
dec
jg
dec
jnp
test
in
mov
sbb
dec
or
es
addr16
jle
dec
dec
movsb
dec
jg
dec
jle
test
in
xor
dec
or
push
test
addr16
jle
dec
jns
sbb
sub
sbb
pop
jle
dec
aaa
movsb
sub
pop
test
addr16
jnp
insl
movsb
jne
push
fst
jg
push
dec
or
test
and
dec
pop
movsb
dec
jg
dec
dec
jnp
jne
outsl
jg
pop
outsb
sbb
movsb
or
dec
aaa
cmp
es
movsb
pop
jg
dec
dec
dec
test
addr16
imul
or
dec
cmp
push
dec
pop
movsb
inc
jg
dec
jo
test
in
push
aaa
xchg
call
aas
movsb
and
dec
push
pop
test
addr16
jg
daa
cmc
xchg
jg
dec
sub
xor
xor
mov
jle
dec
jmp
push
call
or
call
test
jp
dec
dec
inc
pop
test
addr16
jle
dec
cmp
imul
dec
jno
dec
jg
dec
pop
push
test
addr16
jle
dec
or
sbb
push
test
movsb
clc
jg,pt
dec
pop
pop
test
movsb
call
jo
jnp
arpl
push
into
movsb
call
xor
jle
dec
pop
movsb
dec
jg
dec
inc
jg
popa
imul
outsb
sbb
movsb
or
dec
cmp
test
addr16
push
dec
pop
movsb
inc
jg
dec
jno
stos
push
dec
outsl
sub
scas
in
jg
dec
push
xor
and
movsb
sub
push
dec
inc
dec
test
addr16
jl
jne
sbb
sbb
or
sub
jg
dec
pop
dec
test
addr16
popa
dec
outsl
sub
in
jg
jl
test
xor
jl
cmpsb
jno
daa
hlt
call
aaa
pushf
call
jo
dec
jg
dec
push
sub
cmp
dec
add
es
pusha
inc
test
addr16
jle
dec
push
movsb
das
jg
dec
cmp
test
addr16
mov
jge
dec
dec
inc
movsb
push
jg
dec
cmp
sub
jno
push
pushf
call
shrl
test
addr16
dec
dec
dec
movsb
push
jg
jno
push
shl
add
or
movsb
cmp
dec
sub
inc
lret
ja
call
push
lock
fs
mov
sub
loopne
call
imul
push
cmp
test
out
lret
enter
dec
dec
ror
inc
enter
lret
inc
push
addr16
cmp
cmpsb
add
es
jle
insb
into
inc
enter
pop
shl
stos
frstor
jle
gs
sbb
pop
fnstsw
mov
sub
sete
pushf
pop
add
movsb
or
jo
lds
mov
sbb
es
push
addr16
pop
mov
dec
ds
add
sti
ja
mov
ja
add
addr16
call
testb
jl
fsub
mov
sub
fwait
lods
jns
into
ja
pop
cld
and
bswap
push
inc
pushf
js
test
stos
dec
mov
push
nop
lock
popf
push
mov
xor
rorl
ss
fwait
in
xlat
inc
out
push
mov
mov
mov
addr16
mov
sarl
adcl
cmp
ror
outsb
into
push
inc
mov
js
stos
adc
cmp
or
mov
mov
sar
mov
push
adc
shll
frstor
jnp
push
inc
cmp
fisttpll
cs
cwtl
stc
dec
sbb
rorl
add
sub
and
push
popf
xor
sbb
mov
dec
lcall
ficompl
inc
mov
jne
data16
mov
rcll
sbb
inc
and
cli
sbb
and
rcrl
mov
pop
lret
push
mov
xchg
mov
sub
dec
push
and
mov
cmp
rol
jmp
sub
repnz
pop
dec
scas
mov
sbb
ljmp
push
lret
sub
dec
js
xlat
cmp
outsb
push
cmp
dec
in
sbb
ss
rcl
cmp
push
and
lahf
jne
jge
lcall
cmc
fldcw
loope
cmpl
mov
notl
jns
hlt
dec
dec
loop
imulb
loop
test
mov
mov
fimull
xor
adc
out
lret
mov
pushf
pop
aam
and
pushl
repnz
mov
in
scas
sahf
enter
push
dec
push
jbe
push
or
inc
aaa
popa
dec
push
fldz
hlt
dec
pushf
push
jge
pop
insl
test
stc
mov
pop
xchg
push
pop
cmp
adc
adc
add
js
cmp
into
lret
insl
push
sub
push
sarl
mov
das
or
jg
mov
ljmp
jns
inc
or
add
dec
jbe
rcl
jle
dec
xor
adc
xchg
rcrl
push
data16
mov
aam
aaa
push
pusha
scas
jns
iret
dec
add
adc
loop
testb
push
or
in
pop
adc
cmp
add
push
imul
outsl
arpl
sub
test
pushl
popl
movb
cmc
cmp
call
xadd
adc
inc
add
movzbw
inc
mov
cmc
bswap
neg
add
neg
movl
bsr
mov
add
bt
cmp
clc
cmp
push
pusha
mov
lea
jbe
test
sub
shl
mov
neg
mov
cmc
sar
sar
add
sbb
xchg
shr
lea
pushf
btc
mov
btr
and
ror
xor
add
lea
mov
lea
jmp
add
push
imul
jne
jb
add
adc
sti
pop
clc
incl
add
je
imul
dec
jb
inc
js
lea
call
pushf
movb
pusha
lea
jmp
add
inc
insb
outsl
bound
inc
fs
je
insl
inc
add
add
jb
outsb
inc
add
pop
cld
rcrb
jb
dec
sbb
jbe
aas
jo
dec
repnz
or
and
in
sbb
jne
scas
mov
int3
in
sbb
pushf
mov
cmp
rcrl
jne
xlat
negb
pop
out
out
inc
adc
adc
dec
nop
mov
popa
cltd
ja
rclb
aas
and
mov
lahf
jne
or
add
cmpsb
adc
mov
lock
adc
mov
pop
ljmp
inc
adc
jbe
mov
notb
fstpt
adc
push
scas
push
test
mov
hlt
push
outsl
sub
push
push
sbb
pop
push
xor
mov
inc
mov
sub
lcall
mov
pop
jb
stc
inc
jge
jbe
push
mov
xor
flds
fwait
sub
dec
ss
out
mov
mov
ss
and
ja
rolb
mov
or
sub
inc
outsl
cmp
imul
jb
sbb
inc
jne
cmpsb
lea
out
inc
jae
xchg
inc
push
sub
subb
adc
lcall
adc
lea
insl
mov
xchg
push
enter
dec
andb
daa
sub
jg
int3
mov
adc
jmp
rol
hlt
stc
inc
ja
cwtl
scas
sbb
inc
jno
scas
mov
cmc
in
xor
push
std
jb
add
xchg
add
jb
or
mov
xchg
mov
lcall
insb
or
xchg
mov
jecxz
add
mov
xor
mov
lret
sub
imul
aad
sarb
lret
notl
adc
incb
pusha
jle
imul
dec
aad
dec
xchg
imul
orl
iret
clc
ljmp
ljmp
xor
stc
out
shl
pop
sub
out
outsl
addb
lcall
cmp
aaa
dec
loop
arpl
std
or
test
nop
ja
push
pop
mov
cmp
inc
out
sub
int3
fwait
adc
add
lahf
mov
mov
insb
xor
arpl
enter
sub
add
inc
gs
imul
bound
gs
add
add
addr16
jo
outsb
dec
gs
js
add
add
dec
outsl
imul
inc
add
dec
or
adc
xor
stos
lahf
sub
xorl
imul
call
mov
cmp
cmp
xchg
and
sub
in
in
lret
into
sbb
or
call
jnp
aad
into
insl
lea
jnp
xchg
mov
pop
push
add
fisttpll
jnp
pop
or
int
aas
insl
call
mov
nop
and
inc
or
je
pop
sahf
xor
pop
pop
mov
mov
sbb
dec
ljmp
out
clc
aas
mov
and
into
inc
sbb
mov
sbb
repnz
lds
mov
idivl
ja
xchg
ret
sbb
xchg
mov
xchg
inc
xor
add
pop
xchg
mov
sub
aam
sub
fadd
jl
negb
std
push
mov
sbb
xchg
pop
mov
jns
lds
adc
rorl
mov
gs
lret
imul
mov
sarl
jg
jnp
subl
fwait
sub
inc
lahf
jne
xor
inc
gs
jb
jns
jne
jae
jb
add
push
outsb
push
imul
outsl
outsl
imul
add
inc
insb
outsl
bound
inc
gs
gs
inc
je
insl
add
add
data16
je
imul
dec
jb
inc
js
jmp
add
inc
outsl
inc
jb
popa
je
dec
outsb
jae
popa
outsb
arpl
add
inc
gs
outsl
insl
insl
popa
outsb
fs
imul
pushf
cmp
call
add
pop
ret
cli
adc
cmpb
mov
jp
push
pop
jb
es
xchg
mov
daa
push
sbb
cli
jno
xchg
das
add
fnsave
icebp
daa
pop
arpl
das
hlt
jbe
into
cwtl
movsl
pop
jmp
popf
fildll
add
je
add
inc
adc
test
pop
jo
call
xchg
mov
mov
repnz
lock
inc
mov
pop
aam
xor
mov
pop
in
fsub
xor
jbe
or
sti
clc
les
inc
mov
inc
push
adc
xor
sub
notb
arpl
leave
test
jmp
cmp
cmp
movb
pushf
lea
jae
stc
clc
cmp
pusha
jmp
add
push
gs
imul
outsl
outsl
imul
add
xchg
clc
decl
js
movsl
out
shld
jmp
add
dec
jae
popa
fs
jb
je
push
je
add
dec
mov
push
mov
mov
lea
jmp
movb
lea
call
pusha
jmp
add
inc
jb
ja
fs
add
imul
add
clc
cmp
cmp
pusha
pusha
call
add
push
arpl
insb
add
add
je
jne
inc
add
add
gs
je
dec
outsb
jne
add
dec
gs
jo
gs
insb
insb
outsl
arpl
fimuls
add
add
mov
cmp
push
ljmp
lret
aam
aad
fld
rcll
das
jnp
movhps
nop
cmp
lahf
xchg
gs
sahf
into
sbb
pusha
ret
repnz
mov
or
xchg
pop
in
movsl
das
outsb
add
lret
loopne
and
xor
dec
outsl
popa
fs
je
imul
inc
jb
gs
imul
jmp
jmp
add
push
jmp
mov
push
movw
pushf
mov
mov
pushf
pushl
pusha
pushl
ret
add
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
dec
cld
jmp
add
push
insb
jae
gs
popa
insb
jne
add
add
je
jb
jb
je
arpl
push
arpl
outsb
add
add
je
jb
outsl
jb
outsl
fs
inc
and
cmp
pushl
pusha
push
lea
jmp
add
push
push
dec
outsl
je
data16
arpl
inc
add
jle
pusha
pushf
push
dec
pushf
shl
jmp
add
push
arpl
outsb
push
outsl
inc
insb
imul
push
gs
jne
jae
jb
stos
jge
xchg
pop
pop
jmp
inc
or
and
mov
pop
out
mov
xchg
mov
fwait
adc
pusha
int3
push
shl
or
aam
iret
lds
push
push
aaa
lock
hlt
rcll
setae
pushf
bswap
push
lea
not
pushf
pushl
mov
jmp
add
inc
gs
bound
arpl
add
inc
insb
outsl
jae
push
jb
outsb
je
jb
add
push
gs
jne
jb
outsb
je
imul
jns
add
insb
clc
incl
add
popa
insb
imul
je
add
xchg
dec
clc
incl
add
je
imul
add
add
outsl
bound
push
gs
insb
insb
outsl
arpl
add
inc
insb
imul
arpl
outsb
add
add
je
gs
dec
gs
imul
and
jb
stc
cmp
pushf
pushl
push
lea
jae
add
mov
xor
bswap
or
mov
movzbl
pushf
shr
mov
mov
pushf
call
add
inc
jb
popa
je
push
popa
insb
gs
add
add
jne
insb
push
arpl
add
arpl
jae
bound
bts
push
shr
bsr
test
rol
mov
and
adc
push
shr
pushf
lea
jne
lea
push
mov
movzbw
push
xchg
test
call
add
inc
gs
inc
push
add
add
popa
jo
jb
add
add
je
gs
inc
js
outsb
je
outsl
imul
add
inc
gs
imul
js
dec
outsb
addr16
inc
add
add
fs
gs
jne
arpl
sahf
fistps
fstps
fists
sahf
or
popf
popf
pop
popf
or
fmull
gs
jb
popa
je
dec
gs
js
add
js
jp
cwtl
inc
add
call
movb
push
jmp
stc
clc
add
cmp
call
pusha
call
cmp
mov
cmc
stc
and
pusha
mov
pusha
pushf
add
sub
cmc
clc
add
pushf
pusha
dec
pushf
pushf
lea
jne
pusha
lea
jne
rcr
or
bsr
ror
mov
stc
cmp
call
lea
jb
stc
bt
stc
cmpb
call
pop
push
push
mov
pop
sub
in
jge
test
lds
or
ret
cld
int
add
stos
mov
leave
js
push
scas
mov
fmuls
out
mov
lret
jle
rcl
mov
mov
pop
add
add
jbe
push
cld
xchg
cld
fadd
pop
enter
mov
jne
mov
xor
flds
fwait
sub
sti
pop
cld
mull
mov
jbe
dec
pop
and
push
std
fadd
cld
push
inc
jmp
or
pand
push
pop
ret
adc
and
add
cmp
inc
repnz
sbb
dec
divl
sub
mov
lea
jge
sbb
clc
out
cmp
lret
lcall
inc
testl
xor
xchg
dec
fstpt
jnp
call
pop
int
xor
mov
and
scas
fwait
jbe
call
fadd
sub
lret
repnz
divb
stos
xor
cmc
std
rcll
pop
pushf
sub
sbb
push
fnstenv
mov
lods
fists
push
pop
int3
lcall
cmpsb
outsb
dec
in
sbb
xor
popw
stos
add
add
jae
pop
sub
mov
movsl
adc
jl
int3
lcall
adc
inc
repnz
mov
push
stos
xchg
dec
loopne
lahf
sub
add
inc
fs
jae
push
imul
arpl
add
xor
cs
insb
add
pusha
mov
stc
rol
pushf
clc
call
not
call
add
push
gs
outsb
jne
push
movl
pushf
movl
push
pushf
pusha
lea
jmp
add
push
popa
je
insb
je
movb
jmp
pop
cmp
pop
in
add
adc
jl
in
je
push
les
inc
sbb
out
insb
pop
jg
in
lea
shlb
mov
fstl
call
in
mov
jmp
jecxz
add
mov
xor
mov
rol
test
pop
cwtl
addr16
or
mov
add
stos
into
out
adc
sbb
lods
call
jne
push
adc
clc
lods
pop
pop
icebp
sbb
lock
sub
outsl
nop
and
dec
loop
int3
popf
push
jle
sub
fs
inc
stos
pop
sub
cwtl
or
jle
jecxz
outsl
imul
mov
nop
adc
scas
lcall
outsb
pop
and
jb
dec
lahf
ja
outsb
sbb
sub
divl
or
cmp
or
and
jne
and
scas
and
mov
and
cmc
je
fdivrs
test
push
xor
adc
aad
dec
imul
and
inc
sub
inc
push
in
outsb
xor
js
data16
ja
pop
push
in
sbbl
mov
pushl
out
not
ret
int3
and
sbb
leave
or
xchg
leave
scas
or
sahf
cwtl
clc
push
insl
add
xor
and
test
xchg
push
dec
adc
repz
and
cmpsl
mov
imul
cmp
fucomip
pop
imul
dec
loop
test
sub
pop
sbb
in
mov
pop
sbb
sti
std
pop
ret
fiaddl
mov
push
adc
mov
loopne
xchg
sbb
cmpsb
sbb
outsl
iretw
xchg
xchg
addl
popf
push
jbe
push
lock
out
mov
out
fs
lcall
test
push
and
outsb
sub
xchg
mov
xchg
pop
ds
adcb
and
shr
insb
xchg
push
push
jle
xchg
test
pop
out
je
daa
out
mov
or
xchg
insl
adc
lods
mov
cld
js
jle
pop
mov
xchg
je
or
in
xchg
nop
call
xchg
push
scas
js
enter
jge
cmc
popf
int3
data16
mov
lods
sub
dec
jg
push
sbb
out
push
mov
stos
sbb
sub
mov
ret
data16
mov
pop
icebp
outsl
sbb
sub
lods
dec
sbb
cld
jle
add
jmp
xlat
push
pop
test
dec
test
pusha
orb
js
lock
mov
test
adc
fsub
cwtl
adc
icebp
jp
scas
or
les
je
js
shrb
inc
int
stos
outsl
daa
mov
push
icebp
and
fs
sarl
push
mov
in
push
cwtl
pop
sbb
ljmp
or
out
push
testb
or
inc
nop
add
jmp
sub
cwtl
cmp
daa
test
mov
ja
push
call
mov
negl
movsl
dec
xor
sub
jmp
adc
int3
jo
jp
jle
adc
cmp
test
jl
pusha
loopne
sub
test
in
jno
iret
and
imul
or
xor
pop
mov
push
imul
push
iretw
mov
or
pop
sbb
xchg
jg
pop
in
fld1
inc
daa
pop
dec
sbb
popa
jmp
dec
rclb
push
js
dec
mov
enter
inc
cwtl
inc
jle
jmp
sbb
push
and
out
dec
pop
shl
lcall
xor
jnp
fisubrl
addl
imul
lea
jecxz
pop
adc
fs
push
out
mov
std
mov
push
sub
jae
dec
lret
cwtl
sbb
xor
jge
lret
lock
pop
iret
cmp
xor
cmp
xchg
or
xchg
sub
adc
insl
rcr
cmc
sub
jmp
mov
push
and
fidivrs
in
stc
pop
xor
bound
dec
jns
dec
push
pusha
outsb
ret
cbtw
dec
mov
inc
push
lods
test
jg
sbb
inc
ja
in
inc
in
add
mov
imul
into
data16
pop
pop
fsubrl
pop
jno
movsb
mov
loopne
xchg
and
iret
cmpsb
push
jns
and
inc
xlat
out
movsb
push
xchg
fxch
aaa
adc
sbb
add
xor
add
sub
pushf
jns
adc
pop
call
ljmp
jo
or
cltd
je
or
outsl
adc
add
inc
hlt
in
push
loop
xor
popf
or
lea
icebp
cmc
bnd
imul
icebp
enter
cmp
adc
scas
daa
iret
pop
cltd
call
enter
out
test
dec
sbb
popf
sub
jne
mov
push
in
or
jle
imul
jl
loop
xchg
sahf
dec
xchg
jl
arpl
lea
adc
add
test
das
xor
loopne
pop
dec
pmaxub
or
call
nop
pop
cs
pop
pop
call
sahf
push
in
push
or
mov
out
sbb
jle
cwtl
fadd
mov
and
gs
out
pop
insl
sbb
jo
jb
subl
std
inc
cmpsl
pop
call
pop
movsb
add
in
popa
xchg
cwtl
lods
ret
cmc
dec
mov
mov
and
je
or
cwtl
jmp
jl
mov
lods
test
call
xor
dec
adc
test
data16
pop
dec
dec
pop
mov
movsb
sbb
push
vsubss
xchg
pop
test
stos
rcll
aaa
pop
sub
pop
xchg
sub
rorl
fcoms
or
adc
jle
sbb
xchg
mov
dec
adc
dec
dec
mov
jecxz
scas
mov
or
mov
cmp
xor
pushf
std
negb
jp
sub
test
je
cmpsb
es
mov
je
inc
ljmp
in
addr16
iret
mov
sub
xor
xlat
les
les
pop
aaa
clc
jns
lret
or
dec
pop
jle
dec
sub
lea
jge
mov
adc
sub
aas
loope
into
add
int3
xchg
push
jmp
jbe
jnp
and
gs
mov
cwtl
jl
pop
lret
jns
pop
mov
je
cmp
push
shlb
sub
ss
in
clc
jb
mov
jbe
shll
enter
jbe
push
out
test
dec
sub
cbtw
jecxz
cmovs
roll
call
mov
jbe
cwtl
adc
push
mov
daa
add
pop
inc
mov
xor
sbb
js
pop
or
jp
dec
or
sub
mov
out
call
or
outsb
pop
cltd
or
sbb
fadd
xchg
jle
xchg
or
xchg
xchg
lods
int3
mov
push
ja
pop
cmp
lods
adc
nop
mov
jae
xchg
sbb
and
mov
pop
psubsb
icebp
sub
nop
ret
mov
mov
ds
lret
gs
loop
lods
inc
imul
dec
push
push
fs
shr
je
mov
outsb
cmovo
fisubrs
inc
call
mov
sub
outsb
inc
pop
inc
js
inc
imul
jbe
mov
lret
jo
pop
push
clc
repz
je
sub
inc
loopne
jle
mov
outsl
out
sbb
loop
add
push
hlt
aas
sub
mov
push
les
mov
cs
mov
into
outsb
popa
dec
js
je
xor
sbb
inc
push
inc
adc
call
fs
dec
imul
jle
add
out
inc
push
dec
add
nop
and
inc
adc
push
adc
pusha
clc
test
bound
xor
subb
inc
jle
lahf
lret
cmp
dec
fsubrl
ss
sub
sub
jl
jl
data16
jns
into
inc
mov
sti
xchg
idivb
jbe
pop
js
cs
jp
dec
pop
mov
push
lock
outsl
mov
push
loopne
pop
mov
dec
loopne
pop
add
jb
inc
int3
dec
pushf
inc
jle
jo
or
cmp
dec
jbe
xor
dec
lods
pop
mov
xor
loop
inc
push
les
xchg
add
adc
je
stc
pop
dec
shll
fs
sbb
push
push
dec
jp
sbb
fs
push
or
fs
cmp
das
cmp
xchg
add
push
lea
push
pusha
xlat
je
mov
js
dec
or
and
adc
sub
jbe
shrb
dec
inc
adc
sub
out
push
xlat
dec
mov
jo
jl
enter
icebp
data16
jl
jo
shr
pusha
daa
inc
or
bound
cli
aam
daa
fcoms
es
stc
xor
and
popf
jg
pop
outsl
stos
xor
push
jl
sub
fs
insl
adc
inc
call
pop
andb
push
data16
xor
mov
pusha
add
sbb
xor
sbb
imul
mov
mov
das
mov
and
aam
push
inc
pushl
xchg
xchg
out
push
cmp
jb,pn
inc
dec
xor
hlt
mov
enter
dec
xor
cmc
subl
mov
dec
das
call
into
pusha
clc
shrb
pop
pop
jl
cli
inc
and
je
pop
nop
loop
mov
dec
mov
jp
insb
pop
js
lret
adc
stos
outsb
xchg
jl
push
xchg
adc
pop
mov
pop
adc
outsb
add
adc
and
jle
decb
int3
sbb
stos
dec
push
icebp
hlt
cwtl
pop
mov
pop
mov
pop
popa
add
xchg
sbb
int
cld
in
test
sbb
dec
outsl
test
data16
sub
hlt
cmc
or
mov
sbb
adc
insl
cmp
cmp
push
cmp
inc
lret
pop
repz
lds
inc
or
jmp
or
sbb
repnz
nop
lret
inc
dec
and
sub
lret
scas
popf
aaa
movsb
jb
and
pop
je
adc
adc
dec
addr16
jle
mov
lods
pop
jge
adc
test
out
js
pop
dec
mov
mov
mov
inc
jp
sub
ret
test
dec
inc
sbb
stos
int3
into
and
shr
xlat
and
push
cwtl
cs
insb
sub
sarb
clc
imul
cli
stos
frstor
xchg
adc
xchg
jno
loope
sbb
mov
cwtl
mov
scas
push
call
mov
pop
inc
pusha
sbb
pop
inc
enter
push
js
je
pop
in
lea
push
out
pop
aad
add
shl
int
jbe
sub
int3
enter
outsl
and
cwtl
ljmp
or
in
add
add
mov
dec
sbb
sub
lock
jp
mov
jmp
adc
adc
dec
into
mov
popf
outsl
pop
cwtl
and
mov
addr16
mov
push
dec
andb
sbb
cmc
scas
cmp
and
lahf
imul
inc
and
lcall
test
jl
cmc
stos
std
int3
and
sbb
jno
adc
lds
adc
ss
scas
jbe
sbb
dec
fcmove
sub
orl
mov
ds
lahf
cmp
and
sbb
sub
shrb
ds
inc
mov
js
xor
in
movswl
dec
jecxz
mov
nop
cmpsb
aas
lods
cwtl
rorb
stc
mov
das
imul
dec
movsb
pushf
jnp
xor
sbb
mov
dec
cmp
pop
idivb
dec
insb
cmp
cwtl
std
outsb
ds
insb
or
mov
adc
cltd
pusha
ds
pop
addr16
out
lea
dec
ret
dec
je
addb
gs
inc
cmp
cmpsl
jp
sub
fcmovb
in
repz
inc
xor
pop
fisttps
ret
push
xor
or
mov
mov
sahf
lds
pop
ljmp
jmp
aaa
dec
lret
shlb
push
ds
sub
pop
jnp
and
xchg
sub
mov
jp
ds
cmp
jne
int3
jmp
les
iret
std
lds
xor
adc
or
pop
cmp
jbe
jne
push
push
mov
jmp
add
sub
outsb
jp
push
lea
fdivrp
js
testl
xchg
and
adc
std
push
loopnew
test
jae
cmpsl
call
jge
shl
fsubrl
jecxz
subb
pop
or
loopne
fs
push
popa
mov
push
inc
das
daa
out
cwtl
or
jmp
mov
push
mov
xor
das
lcall
bound
xchg
cltd
xlat
pop
cwtl
hlt
mov
hlt
dec
sbb
adc
pop
je
imulb
scas
andb
outsb
imul
jle
icebp
dec
pop
cmpsb
push
mov
mov
push
dec
and
sub
mov
pusha
jne
imul
xchg
mov
ret
push
aas
mov
ds
xor
mov
ret
push
lods
js
jne
test
xor
andl
lea
add
stos
jne
inc
inc
pop
test
cmpsb
dec
lcall
mov
cwtl
mov
hlt
jns
add
xchg
add
jns
mov
jp
in
sbb
push
pop
fdivs
lock
jp
xchg
cwtl
sub
jecxz
jb
cmpb
xor
shr
pop
outsb
add
mov
aaa
pop
mov
mov
mov
push
jmp
adcb
push
pop
inc
adc
pop
in
js
jmp
adc
out
imul
inc
out
and
cmc
aas
das
aam
push
out
cwtl
cli
pop
andb
fcoms
lods
lods
mov
cld
adc
loopne
push
in
cmp
outsb
xchg
aas
cli
lods
sbb
hlt
push
mov
mov
rcrb
rcrb
test
pop
inc
mov
int
cmc
cs
addr16
and
cmp
push
add
and
scas
in
insb
or
out
mov
jp
movsl
call
xor
out
imul
xchg
xor
movl
push
nop
imul
cwtl
mov
mov
jg
or
sarl
push
enter
mov
ja
push
pop
lods
dec
xchg
lahf
lds
lret
mov
xor
test
inc
cwtl
addb
dec
pop
dec
test
pop
call
pusha
sbb
fwait
xchg
imull
pop
fs
mov
xor
cmp
push
sbb
mov
out
cmpsb
sbb
and
cmc
inc
pop
loope
nop
sbb
add
jo
mov
rol
fldenv
jns
in
sbb
xor
cli
or
lcall
pushf
test
push
daa
push
inc
lahf
mov
sahf
outsb
call
movl
push
popa
pop
and
pushf
scas
repz
test
jo
cwtl
sti
mov
jl
imul
push
and
jbe
mov
push
jp
or
mov
dec
cwtl
vmovsldup
adc
cwtl
jp
in
mov
and
outsl
jns
jge
sbb
jl
push
adc
add
out
insb
cmc
mov
or
orb
adc
mov
xchg
cmp
sbb
dec
hlt
cs
jp
or
call
sbb
decb
pusha
mov
mov
push
pop
stos
jl
outsl
out
sbb
cltd
mov
cmc
sub
nop
or
lock
inc
cmp
outsl
pop
icebp
shr
fiaddl
int3
cmp
mov
ficomps
dec
push
jge
notl
or
mov
mov
outsl
sbb
sub
push
mov
pop
stc
jns
jno
push
into
inc
fsubrs
lret
lcall
pop
push
xchg
aam
into
inc
add
inc
sbb
add
lea
cmp
outsl
lods
xchg
sbb
push
push
enter
daa
faddl
ret
adc
sub
xchg
mov
mov
push
xor
aas
fwait
pop
pop
scas
je
cs
cmpsl
sub
mov
sarb
sbbb
sub
jne
ljmp
les
outsb
das
push
adc
mov
push
cli
xchg
adc
add
pop
jg
cmp
jbe
leave
mov
xor
xchg
inc
int3
add
jns
addr16
test
repz
add
mov
pop
jp
and
cwtl
imul
sub
sub
out
pop
mov
js
or
cwtl
jne
push
popf
xchg
push
mov
and
or
popf
or
in
jp
iret
sub
clc
popa
hlt
or
mov
fs
sahf
sbb
movsb
das
mov
pushf
in
pop
rclb
das
push
pusha
enter
push
mov
jno
int3
movsl
clc
ljmp
dec
adc
leave
daa
inc
fisttps
fldcw
testl
lcall
pop
cmpsb
xor
push
dec
test
aam
jb
aaa
js
adc
sub
push
push
outsb
add
pop
dec
push
pop
jge
pop
sbb
sbb
jo
adc
add
mov
xchg
sub
mov
pop
call
lods
cwtl
cmpsl
push
mov
ret
mov
jb
stos
mov
aam
int3
push
add
mov
jg
enter
inc
repnz
adc
xchg
loope
and
and
lcall
and
stc
jb
dec
inc
cwtl
pop
jno
adc
mov
xlat
out
dec
cmp
lret
hlt
fimuls
adcb
das
jo
sahf
or
pusha
xor
aaa
dec
jne
icebp
pop
sbb
sbb
push
push
ret
pop
insb
and
jo
inc
nop
dec
and
inc
push
xor
add
into
xor
dec
and
scas
xchg
ds
xchg
push
xchg
aaa
jle
sbb
out
cwtl
mov
loop
pop
adc
mov
pop
daa
out
mov
push
dec
notb
sub
fisubrs
scas
cmp
out
dec
scas
mov
daa
push
sbb
push
in
xor
sub
test
sbb
roll
and
lods
test
dec
sub
aad
sub
pop
mov
popa
jp
nop
mov
add
fistpl
outsl
js
inc
test
addr16
call
pop
xor
das
push
adc
sub
sub
outsb
jo
outsb
push
cmc
test
pop
cwtl
rorb
insb
pop
xchg
fmul
and
inc
aad
icebp
xchg
arpl
dec
iret
push
and
and
fs
aaa
mov
mov
push
pop
pop
or
push
clc
jbe
jp
les
imul
xchg
or
ret
stos
mov
pop
sbb
out
add
jle
mov
push
call
jne
mov
bswap
gs
cmp
out
adc
adc
clc
or
std
or
stc
push
push
jg
notl
pop
leave
and
jl
pop
out
pop
inc
das
pop
fmull
mov
inc
dec
pop
pusha
cli
into
inc
data16
dec
in
sbb
fists
pop
shll
test
jp
mov
sbb
dec
push
pushf
idivl
xchg
out
jns,pt
std
pop
test
mov
das
cltd
and
or
lock
add
xor
incb
sub
incl
lods
jecxz
jp
stc
in
scas
lret
sbb
mov
cs
xor
xor
popf
pop
stc
jbe
mov
cld
or
add
nop
repz
int3
lret
lret
out
das
cs
mov
fstp
out
push
push
mov
pop
sub
jo
js
ret
sub
add
fdivrl
lahf
jp
and
dec
or
lret
push
or
adc
and
fcmovnb
jno
out
push
in
or
fcos
insl
popa
sub
pop
imul
or
gs
iret
mov
sbb
and
leave
jb
pop
fwait
aam
mov
inc
cwtl
cltd
jo
aas
push
imul
in
cmp
adc
jl
pop
push
repz
movsb
dec
pop
xchg
pop
dec
outsl
shl
sbb
dec
push
or
xchg
mov
out
cwtl
enter
sub
aas
pop
xchg
push
push
cwtl
cmpsb
sti
xchg
outsl
icebp
push
fisttps
out
hlt
mov
andb
inc
shl
and
xchg
fmull
adc
subl
shll
cmc
cmpsl
mov
and
xchg
add
jmp
imul
addr16
andb
je
cwtl
inc
in
or
inc
aad
push
outsl
pop
inc
in
xor
pop
mov
mov
xorb
or
pop
push
in
cwtl
inc
cltd
fimuls
add
pop
dec
dec
lods
std
add
cs
push
es
and
out
jne
lret
rorb
cmp
or
pop
cmp
fistl
inc
xor
xor
shrl
addr16
test
push
jecxz
icebp
sbb
add
cltd
sub
bnd
stc
push
push
cmp
mov
add
pop
call
cmp
popa
jl
test
lea
insl
sbb
test
fs
lret
mov
mov
fdivp
call
mov
insb
or
jmp
imul
movsl
mov
dec
dec
jbe
inc
sub
sbb
es
xor
in
test
jae
in
pop
jns
incb
mov
push
or
adc
or
cs
mov
mov
push
daa
jl
rcrl
das
fmull
jg
mov
mov
pop
inc
loope
in
sub
repnz
mov
lock
xchg
cmp
xorl
push
push
jns
out
pop
sbb
xchg
dec
bound
pop
adc
cmp
xor
ret
sub
dec
xor
daa
push
jne
nop
sub
stos
daa
adc
pop
xchg
bound
cmp
adc
shll
mov
lds
adc
pop
lret
adc
add
or
mov
addr16
outsb
fdivl
pop
ljmp
adc
cwtl
mov
stos
icebp
sub
xchg
dec
ja
stc
push
or
jmp
sbb
outsb
add
jle
mov
aaa
ds
mov
push
ss
mov
fnsave
ret
packssdw
scas
mov
mov
lods
cmc
call
addr16
cmp
dec
lock
cmpsl
cmp
jns
imul
bound
clc
mulb
or
and
daa
scas
lcall
xchg
pop
nop
lcall
int
pop
stc
jl
lea
dec
pushf
mov
xor
sbb
insb
loope
ror
cmc
jns
shl
cmovbe
mov
cwtl
lds
xchg
pop
inc
xor
jge
adc
imul
orps
addr16
mov
push
sub
mov
loope
lahf
js
daa
mov
xchg
add
out
inc
lret
cmc
jns
sbb
int3
sub
xlat
ljmp
and
cwtl
cmp
sbb
xchg
fs
idivb
rclb
outsb
mov
and
push
pusha
bound
cwtl
cmp
ja
push
clc
pusha
dec
in
mov
adc
inc
dec
fcompl
fs
pop
or
cmpsl
mov
adc
inc
jno
std
mov
test
cs
mov
jl
sbb
mov
mov
clc
sahf
lcall
in
push
daa
mov
cmc
cmp
out
mov
js
nop
in
div
jl
dec
cmp
adc
push
xchg
add
jmp
add
test
int
push
mov
adc
clc
rolb
inc
or
outsl
test
jl
adc
cmpsb
enter
stos
xchg
push
sbb
jg
cwtl
jecxz
insb
xchg
bound
jns
adc
sbb
jle
je
mov
xchg
and
mov
sbb
push
stos
leave
inc
xor
lock
testb
cmp
mov
cld
insb
inc
pop
lahf
or
out
inc
out
jge
dec
add
pop
adc
sub
out
cmpsl
lock
addr16
pop
inc
mov
pop
in
adc
fistps
int3
mov
insl
jno
scas
pop
iret
mov
insb
aam
es
add
and
sahf
insb
int3
outsl
dec
inc
repnz
cli
insb
pop
jp
cmp
insb
int
lcall
cmpl
mov
mov
xor
jmp
inc
insb
rcll
int3
mov
insb
je
mov
inc
xlat
dec
insb
pop
int3
push
gs
aad
xor
adcl
insb
adc
rolb
lahf
mov
cld
ja
ss
aad
or
cli
movl
fisubrs
or
dec
jb
subl
rclb
pop
and
mov
mov
insb
lea
dec
adc
and
iret
insb
jo
enter
ret
mov
insb
adc
jle
movsb
insb
dec
shll
pusha
sub
outsb
xchg
jnp
xchg
xchg
sub
fildll
xlat
and
pop
sub
daa
pop
insb
cmp
test
insb
dec
ds
adc
insb
pop
hlt
and
fucom
insb
jno
or
jmp
inc
xchg
rcl
mov
les
out
push
into
sarl
push
shufps
insb
out
daa
adc
cs
aas
insb
ljmp
xlat
push
loopne
dec
imul
jle
insb
fstps
in
inc
insb
dec
and
fwait
bound
dec
cmp
pop
mov
dec
insb
rorl
cld
mov
test
loope
in
shll
inc
insb
mov
mov
shl
sahf
fsubrl
aad
jle
push
test
js
pusha
fs
inc
subl
sub
out
and
outsb
dec
leave
cmp
popa
add
xor
das
or
xchg
inc
inc
sub
dec
insl
add
dec
insb
scas
stc
daa
pop
and
mov
push
dec
lock
or
in
fimuls
outsb
test
jl
insb
mov
stos
rclb
sahf
lods
insb
jo
dec
sub
push
inc
jl
mov
jns
add
xchg
ficompl
in
jne
out
in
mov
push
or
dec
and
xchg
dec
push
or
shrb
jl
fs
loopne
or
enter
lods
inc
sbb
pop
stc
cmp
jo
out
add
inc
dec
xlat
xchg
mov
jge
push
inc
je
push
jg
cmp
mov
call
cmp
int3
push
jmp
jmp
xor
mov
mov
in
mulb
insb
adc
sbb
mov
jnp
dec
loopne
mov
inc
test
insb
or
or
jae
test
pop
inc
push
adc
jg
sbb
mov
int
out
fmulp
insb
sub
stc
cmpsb
or
cmp
cmp
pusha
xlat
sbb
or
out
jle
or
loope
dec
stos
inc
add
sbb
mov
or
addr16
pop
pop
in
iret
mov
insb
leave
dec
js
jg
mov
xor
flds
stc
push
insb
xchg
or
call
push
or
xchg
stc
and
cwtl
inc
fildll
in
das
insb
mov
pop
xorb
addr16
push
out
dec
xchg
mov
sbb
fsubl
dec
push
insb
icebp
pop
cmp
rclb
test
push
iret
and
outsb
xchg
push
dec
inc
push
sub
lcall
popa
fldcw
mov
fdivrl
inc
gs
sbb
jne
mov
mov
in
add
sub
mov
in
or
mov
insb
outsl
pop
add
pop
stc
add
xchg
ror
cmpsl
clc
insb
cmc
js
popa
adc
push
jle
jmp
stos
repnz
sub
fsubs
stos
insl
in
xor
mov
and
popa
ret
cmp
add
std
in
outsl
insb
xor
or
scas
insb
pop
mov
rol
mov
es
jmp
dec
mov
push
adc
fs
out
insb
push
xchg
dec
add
mov
and
aad
xchg
ret
std
or
or
test
stos
sub
sbb
lock
xchg
sbb
insb
pop
out
sbb
dec
hlt
fisubl
mov
addr16
int3
jl
or
jb
sub
gs
inc
dec
dec
push
fst
sub
lock
fistl
xchg
dec
lods
xchg
sbb
and
add
and
fs
decl
lahf
leave
subl
sbb
lods
jne
dec
std
dec
sar
js
pop
lahf
mov
cwtl
inc
filds
sbb
int3
jb
cwtl
je
jge
mov
and
loope
sahf
push
insb
je
inc
add
pop
jg
insb
xlat
stos
or
in
xchg
cmpsb
and
adc
data16
je
push
das
imul
cwtl
mov
insb
rcrl
dec
push
ror
pop
push
pop
inc
mov
sub
xchg
inc
pop
cmc
daa
out
cld
mov
cmpsl
stc
mov
test
rcll
int3
cmpl
movsl
mov
mov
imul
jmp
addr16
inc
call
or
xchg
inc
adc
int3
sbb
fdivs
sub
mov
and
in
lcall
adc
fidivrs
cmp
addr16
insb
inc
xchg
dec
insb
fsubrl
mov
insb
es
pop
iret
pushf
sub
lret
int
sub
icebp
fwait
das
into
xchg
das
ja
cmp
or
push
lcall
xchg
iret
fcmovbe
mov
inc
adc
fldt
dec
lods
mov
out
dec
loop
jle
or
cwtl
shlb
push
es
push
mov
xchg
or
rol
sbb
insb
inc
pop
call
dec
enter
fsubr
in
lea
adc
push
lcall
stc
pop
insl
in
push
ljmp
imul
xor
cld
outsl
cmpsl
xor
pop
pop
cmp
or
inc
lock
and
pop
ret
cmp
orb
push
and
fldlg2
rcrb
addr16
std
insb
or
int3
xchg
mov
insb
mov
fmull
sub
nop
lahf
adcl
add
or
insb
in
test
stc
xchg
sub
in
jl
jnp
cld
addr16
xorb
pop
lret
xor
inc
div
sbb
cmpsl
mov
jl
cltd
jae
and
shl
int
lahf
shll
jne
and
out
dec
addr16
hlt
insb
addr16
or
stc
pop
or
jns
inc
fisttps
add
lods
cs
daa
fcoms
cmc
pop
push
push
out
sbb
adc
fidivl
dec
outsb
cmp
je
popf
sbb
sahf
lods
sub
aad
jle
jg
les
pop
ds
xchg
out
movsb
or
insb
and
fildll
dec
add
decl
outsb
mov
out
loope
lea
or
ja
je
or
add
cmp
ficomps
adc
push
adc
insl
out
hlt
mov
lea
addr16
cld
loope
jmp
push
fcmovbe
frstor
sahf
movsb
add
jle
addr16
or
loope
and
insb
jno
loopne
and
jne
sbb
push
xchg
sub
fildll
out
ret
jo
test
pusha
mov
cld
or
sub
daa
pop
mov
inc
loop
into
pop
mov
clc
int3
jl
mov
scas
cs
leave
insb
rep
xor
rcrb
sahf
insb
in
sbb
fnstcw
push
fs
mov
or
out
sub
das
stos
daa
insb
in
jle
pop
fwait
push
addr16
cmp
push
push
mov
xor
jg
sub
add
fmul
adc
xor
decl
icebp
cwtl
push
jle
outsl
ja
dec
pop
sti
dec
mov
adc
loop
test
dec
and
sbb
ja
outsl
adc
pushf
insb
stos
and
add
push
push
adc
cmpl
loop
xor
inc
scas
cmp
popf
pop
sbb
cltd
insb
xchg
jnp
rolb
mov
mov
jns
jae
mov
test
insb
push
xchg
dec
cmp
insb
add
daa
mov
call
scas
inc
jmp
sub
cwtl
add
pop
mov
arpl
pop
xlat
pop
out
push
in
xchg
aam
andb
pop
cltd
insb
dec
fisubrl
mov
jns
add
sub
mov
enter
jmp
sub
movsl
dec
ja
aas
loop
lahf
mov
or
leave
push
and
repnz
mov
fildll
jnp
gs
in
or
jge
outsl
push
dec
mov
inc
dec
outsb
mov
adc
int
filds
sahf
pop
stos
cltd
daa
pop
insb
shll
cmp
lret
push
in
cs
cld
hlt
inc
dec
sub
cld
loope
insb
test
loop
rcl
loopne
mov
push
dec
cmc
int3
jle
push
push
inc
insb
in
stc
out
in
and
cs
repnz
mov
sbb
push
adc
xchg
sub
push
sahf
insb
pop
and
xchg
inc
mov
das
add
fs
sub
into
les
mov
test
or
imul
or
cmp
clc
out
sub
adc
and
add
sbb
clc
lret
icebp
insl
insb
mov
pop
jne
inc
cmp
gs
xor
aam
mov
push
jbe
sti
sbb
iret
nop
jp
jnp
insb
les
and
in
inc
in
sti
not
pop
add
xchg
test
rclb
call
insb
sub
fsubl
xchg
outsl
rep
gs
mov
aam
bound
pop
push
lds
sbb
pop
xchg
int3
insb
pop
aad
lock
sti
movl
jle
sub
pop
add
mov
loop
lahf
lcall
add
idiv
jecxz
insb
fisttps
leave
mov
insb
cmp
push
mov
fisttps
fsubl
outsl
fs
adc
sti
cmc
push
add
dec
fadds
lock
jnp
cwtl
std
clc
inc
insb
jl
or
fwait
sub
into
mov
arpl
out
fwait
outsl
jb,pn
jg
pop
sbb
add
push
fmull
cmc
or
dec
cwtl
push
aaa
jmp
mov
insb
cli
fnsetpm(287
fld
insl
mov
insb
xchg
pop
pop
cmc
ret
aas
rorl
jns
daa
dec
jmp
mov
add
out
or
inc
insb
adc
clc
sub
add
mov
cmc
xchg
push
insb
xlat
popf
enter
in
sbb
lock
addr16
pop
int3
out
je
dec
jnp
sub
movsb
aam
in
nop
in
adc
sub
dec
fwait
push
out
push
mov
mov
je
or
outsb
das
loope
sbb
sub
cmpsl
adc
ret
inc
ja
add
ret
pop
icebp
fwait
pop
dec
lcall
sub
sbb
js
cli
inc
aad
xchg
cmpsl
jmp
push
insb
mov
fldt
dec
jl
into
insb
ljmp
and
mov
or
push
or
xchg
fwait
popf
and
rol
sbb
push
gs
outsl
jbe
push
jb
jo
add
add
je
gs
popa
addr16
imul
and
pushf
call
push
push
lea
ja
call
cltd
iret
mov
add
sahf
lret
jle
lea
jae
sbb
jmp
nop
mov
aas
mov
and
xchg
or
mov
out
movsl
bound
imul
pop
jle
sbb
add
mov
stos
sbb
in
lahf
jne
cmp
sbb
je
loopne
cld
lods
sbb
and
insb
jnp
lea
mov
cwtl
fmull
loopne
fsts
fcmovnu
insl
outsl
fistpll
repz
repz
inc
lret
addl
shrb
rcrl
xor
fiaddl
or
xchg
fsubr
pop
call
mov
bnd
jp
push
inc
call
repz
push
mov
fisttps
mov
jle
mov
inc
divl
jecxz
in
dec
dec
std
int3
lret
xchg
push
add
xchg
mov
pop
popa
arpl
rclb
jecxz
sarl
xor
rcll
xchg
inc
mov
sub
out
cmpsl
jnp
mov
xor
jnp
lock
addr16
frstor
jmp
cmp
and
add
gs
mov
cltd
jle
es
lcall
hlt
sti
push
pop
shl
cmpl
pop
jmp
lahf
and
cld
roll
psllq
cmp
cli
add
insl
imul
insl
dec
jo
outsb
add
add
je
je
dec
popa
outsb
fs
add
add
jo
imul
bt
cmp
call
shrd
sete
cmp
mov
pushf
clc
cmpb
mov
jmp
pop
or
xor
dec
jb
scas
addr16
cmp
mov
mov
xlat
das
imul
adc
cwtl
cmp
movsb
fs
inc
inc
inc
outsl
pop
pop
addb
add
leave
adc
xchg
or
adc
xchg
and
xchg
mov
inc
xchg
inc
cmp
sub
adc
jne
mov
mov
pop
mov
ljmp
xchg
mov
pop
jae
rcl
data16
sub
jb
mov
xchg
into
out
mov
mov
cwtl
fcomps
pushf
mov
and
bound
hlt
mov
jns
fcoms
cli
hlt
inc
addr16
jbe,pn
cmovae
pop
rcrl
out
mov
dec
loope
xchg
adc
fcoms
push
push
dec
pusha
enter
cmp
fadds
pop
les
dec
das
cmpsl
test
clc
xor
mov
pop
mov
pusha
dec
or
hlt
mov
movsb
xor
cmp
cmc
mov
enter
push
repnz
cmp
cmc
mov
or
stos
lock
nop
inc
push
xchg
cwtl
add
add
je
imul
jae
pop
arpl
jae
jecxz
lahf
stos
pop
mov
xchg
mov
stc
push
rolb
in
mov
enter
adc
dec
lret
dec
or
mov
outsb
pop
or
jbe
aas
push
shlb
jp
add
inc
gs
gs
dec
bound
arpl
enter
add
inc
gs
jne
jb
outsb
je
bound
arpl
dec
movsl
mov
pop
adc
orb
mov
adc
jno
in
std
lods
jnp
sub
pop
test
inc
shlb
pushf
mov
shlb
orl
add
mov
push
xchg
push
inc
scas
rcl
mov
lahf
mov
nop
jg
and
mov
mov
lret
add
jecxz
xchg
int3
repz
ljmp
jne
outsb
mov
flds
push
inc
mov
and
cmp
push
mov
imul
mov
std
dec
std
pop
or
and
or
fs
lock
or
call
or
comiss
loop
sahf
inc
popa
ret
nop
int3
jge
enter
mov
inc
idiv
pop
dec
push
ret
loope
adc
jge,pn
pop
or
lock
adc
dec
mov
pop
push
cmpsb
sbb
adc
pop
jbe
stc
ds
and
hlt
jle
fld
fsubrl
out
lret
sti
mov
loopne
shrb
adc
xor
dec
pop
lret
add
dec
in
fstpl
dec
bound
sub
mov
inc
mov
fsin
add
pushf
dec
test
sub
inc
loop
loope
leave
js
cmpsl
in
inc
and
addb
in
roll
int
imul
faddl
lea
je
call
movsbl
mov
push
lea
jmp
jmp
add
push
gs
fs
imul
je
imul
add
and
cmc
cmc
test
call
cmp
bsr
mov
cmc
jge
and
cmp
jb
test
add
pushf
movw
pushl
lea
jmp
add
inc
dec
push
dec
inc
inc
jb
insl
push
jb
addr16
inc
add
add
jbe
dec
jne
push
gs
je
add
inc
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
pusha
lea
jae
bt
shl
bsr
clc
mov
movsbl
sub
sar
mov
test
jmp
lea
je
call
add
push
gs
imul
je
js
pushf
sub
call
add
dec
jae
imul
add
je
popa
jo
outsl
fs
add
je
insb
popa
jae
dec
popa
insl
gs
add
add
pushf
call
or
push
pop
jbe
sbb
pop
push
test
nop
push
in
mov
shll
imul
jmp
inc
sbb
mov
andb
mov
add
cwtl
repnz
movsl
loope
daa
sti
fcompl
lods
inc
pop
lock
jmp
jp
push
cmp
movzbw
pusha
dec
mov
cmc
sub
ror
lea
call
not
mov
pushf
pushl
mov
movb
lea
jmp
add
push
gs
insb
outsl
jae
dec
gs
imul
data16
xchg
mov
lods
jnp
test
shlb
xor
add
mov
pushf
push
imul
in
jge
ja
pop
repnz
lock
repz
not
push
adc
sub
ljmp
sbb
out
push
aas
cmp
pop
mov
push
mov
iret
sbb
arpl
lock
lret
push
loope
lret
jle
inc
mov
mov
mov
sbb
add
push
mov
insl
int
cmpsl
xchg
add
pop
lea
test
rol
inc
jmp
cmpsb
mov
jp
pop
clc
dec
inc
inc
popa
sub
scas
adc
repz
cmp
notl
xchg
aaa
popa
leave
scas
sub
sahf
push
jp
jne
mov
dec
clc
mov
sub
cmp
call
fisttpl
sahf
pushf
sub
jg
add
xchg
xor
xchg
xlat
hlt
imul
int3
sbbb
add
push
jb
je
push
jb
jbe
je
push
jb
imul
imul
cmp
push
jmp
lea
ja
or
add
call
add
push
insb
jae
insb
insb
outsl
arpl
pushf
pushf
lea
jbe
movsbw
cmc
push
sub
pushf
mov
bswap
xor
clc
rcl
mov
not
shl
and
movsbw
add
bswap
shr
btr
bsf
pop
shrd
mov
movzbw
pusha
cmp
shr
add
jmp
add
dec
insb
gs
outsb
imul
add
add
gs
insb
inc
js
arpl
gs
add
add
je
arpl
jo
jns
test
pusha
push
jmp
add
inc
gs
outsl
fs
gs
imul
add
add
stos
mulb
sub
push
clc
lea
pusha
stc
cmc
sub
pushf
pushl
popl
clc
pushl
pushf
push
cmp
push
mov
mov
jmp
sub
jmp
add
dec
insb
gs
outsb
imul
imul
gs
imul
dec
outsb
outsw
jb
popa
je
outsl
outsb
add
testb
lea
sub
pusha
sub
push
cmp
cmc
pushl
popl
push
jmp
add
inc
gs
insb
imul
out
or
sti
pop
jg
in
adc
dec
loopne
push
push
push
sub
sub
jle
jne
mov
jl
scas
jl
test
popf
sub
sbb
push
push
loope
and
je
sub
jmp
pop
in
xor
push
or
push
push
pop
jl
add
outsl
inc
enter
je
outsb
dec
pop
imul
sub
push
lcallw
nop
push
mov
aam
ja
shrl
cmp
in
xchg
and
push
pusha
lods
fs
mov
jl,pt
mov
dec
or
outsb
test
jl
mov
je
pushf
dec
in
xchg
inc
xchg
pop
subl
cmc
inc
pusha
mov
mov
sub
cltd
push
jmp
cmc
jmp
in
jmp
imul
outsb
imul
fs
push
addr16
jns
rcrb
shrb
push
pop
cmp
dec
push
add
mov
pop
add
fs
pop
mov
sbb
adc
or
stos
xor
add
mov
add
push
pusha
jbe
mov
mov
adc
lock
xor
cmp
push
add
xchg
dec
je
mov
addr16
clc
jp
call
or
cmp
sbb
add
sub
xchg
call
dec
sbb
dec
invd
les
mov
mov
add
ficoms
mov
ja
pop
xorl
dec
fdiv
xlat
fisttpl
insl
iret
push
adc
push
int3
pushf
add
or
ficoml
cmpsl
pop
outsb
and
inc
inc
int3
jno
iret
dec
inc
out
push
push
fsubs
jl
out
push
and
mov
push
push
ficomps
jp
js
dec
fcomps
xor
mov
sarl
mov
es
push
mov
outsl
ss
xchg
push
out
xor
out
clc
push
jmp
xchg
adc
subl
loop
cmp
outsl
sbb
add
subb
call
push
dec
adc
push
inc
xchg
in
subl
sub
aas
push
jmp
fwait
int
xchg
inc
sbb
dec
gs
das
bound
adc
nop
cmpsb
data16
xchg
push
imul
inc
inc
cwtl
js
jne
and
add
in
out
pop
inc
sub
in
ss
in
mov
lods
sub
data16
adc
adc
data16
adc
dec
add
mov
in
dec
aas
push
jg
push
das
and
out
dec
ja
fisubrs
pop
bound
std
jle
mov
add
and
and
jp
push
push
inc
in
xchg
dec
xor
pop
adc
ret
push
mov
push
rclb
inc
adc
adc
je
inc
cmp
push
std
je
push
inc
nop
lcall
inc
sbb
aad
jo
sub
and
mov
pusha
add
bound
sub
inc
and
and
lds
mov
insb
sbb
les
sti
js
data16
sub
cwtl
addr16
mov
enter
cwtl
xor
mov
inc
addr16
enterw
inc
nop
jb
cmc
js
mov
and
mov
subl
sbb
fisubrl
sbbb
push
mov
fisubrs
test
sbb
sbb
dec
test
xchg
testb
cmpsb
loope
fwait
shlb
lret
clc
mov
sti
data16
xchg
push
xor
leave
je
cli
lods
insb
or
jnp
and
gs
dec
jb
inc
xor
mov
je
fwait
lret
mov
sub
mov
stc
mov
dec
push
xor
test
lret
lcall
fisubrl
lcall
sub
call
inc
sub
bound
test
mov
xchg
sti
sbbl
xor
xor
test
adc
dec
push
inc
popf
outsl
lea
push
sbb
mov
test
cmp
dec
xor
outsb
jg
in
lea
es
loop
mov
lret
push
push
sub
add
into
pusha
push
negl
test
push
push
push
adc
lahf
push
mov
in
and
xchg
mov
jle
outsl
pop
ja
hlt
push
hlt
outsb
shlb
movsb
push
pop
cmp
sub
push
jl
adc
ja
call
loop
xor
xor
aaa
stc
das
std
fbld
push
scas
push
scas
xchg
scas
adc
ljmp
ret
outsb
cltd
jp
or
jns
stos
pushf
data16
outsl
sbb
xchg
shrb
pushf
and
pop
pop
xchg
xchg
and
js
outsb
data16
push
mov
jne
lcall
movsl
shrb
ja
pop
xor
push
mov
subb
mov
push
outsl
add
push
cmp
or
or
cmp
dec
fwait
push
pushf
and
lahf
mov
loopne
sub
xchg
jb
in
fs
outsl
repz
nop
pop
sub
shll
mov
mov
sbb
xchg
pop
mov
adc
loope
push
repnz
test
push
adc
pop
call
push
jg
mov
add
dec
adc
outsb
cmp
push
sbb
je
inc
adc
stc
lcall
push
push
shll
nop
cltd
je
push
xchg
stos
pop
or
mov
xchg
into
or
in
mov
in
outsl
jmp
in
or
and
icebp
enter
mov
outsb
add
cmp
pop
vcvtss2sd
push
aad
int3
mov
adc
out
ficoms
xor
lret
xchg
jb
outsl
mov
xchg
jg
mov
xchg
sti
sbb
mov
xor
xchg
dec
mov
xor
fs
in
sbbl
pusha
js
cmp
dec
jne
mov
add
ss
xchg
mov
mov
jne
int
mov
pop
sub
sbb
roll
mov
add
jo,pt
mov
jb
clc
mov
xor
or
or
xchg
mov
outsl
mov
outsb
ds
inc
sbb
jae
das
ss
mov
sub
xchg
lea
xor
mov
nop
mov
cmpsl
sbb
je
pop
fs
cmp
mov
cmp
dec
cmp
xor
add
test
adc
das
je
arpl
mov
pusha
das
jle
mov
mov
or
rorl
dec
sbb
jmp
hlt
int3
int3
pusha
loopne
lahf
mov
cmp
sti
mov
mov
xor
out
push
mov
cmp
out
call
scas
cmp
jnp
dec
sbb
pop
les
cmp
push
es
sub
xlat
loop
push
pop
insb
int
push
pop
and
push
push
mov
pop
fs
loopne
js
mov
inc
dec
aad
outsl
xor
mov
push
fdivl
pop
push
adc
inc
mov
call
js
aaa
inc
xchg
js
or
pushf
mov
fs
xlat
mov
movsl
adc
sbb
pop
fsub
test
and
out
inc
jge
push
xor
pop
jo
dec
imul
iret
aad
dec
shrb
dec
jl
mov
sarb
mov
clc
mov
gs
push
cmp
aad
dec
fcoml
test
push
pop
and
adc
iret
and
mov
shld
dec
dec
mov
pop
dec
in
push
add
mov
adc
jle
fwait
inc
js
out
xor
adc
mov
sbb
xor
inc
cmp
cmp
xor
jl
add
and
pop
dec
imul
jg
mov
push
stos
xchg
cmp
inc
jb
popf
clc
imul
xlat
fcompl
imull
je
jnp
mov
add
mov
mov
push
inc
sub
sub
mov
imul
data16
cmovg
mull
sub
in
daa
dec
insb
cmpsb
movsl
push
fcompp
daa
call
imul
jnp
insb
into
dec
int3
dec
inc
int
and
push
push
movsb
sbb
out
xchg
clc
jns
inc
outsb
mov
jne
dec
adc
push
je
or
pshufw
mov
dec
insl
inc
add
bound
cmpl
pop
mov
push
je
data16
loope
xchg
cmp
lcall
mov
int
push
or
pop
xor
int
adc
or
pop
xor
fwait
and
std
push
std
call
cmp
fs
jl
outsl
sbb
jne
cmp
fstpt
outsb
lds
pop
out
out
popa
jg
in
stos
pop
icebp
pop
sub
in
cmp
iret
push
pop
add
mov
imul
mov
mov
pop
jecxz
les
fildll
out
dec
push
outsb
push
push
les
ss
jecxz
push
jle
dec
lret
mov
out
test
leave
sub
jae
into
mov
clc
mov
lods
dec
sbb
sub
adc
mov
outsl
inc
cmc
sub
or
jo
out
dec
fs
insb
js
mov
faddl
fnsave
jno
push
jp
push
roll
and
push
sub
push
pop
push
repnz
jl
sti
or
pushf
fisubl
sbb
dec
and
insb
cmp
bnd
orl
or
scas
jmp
pop
jns
imul
or
jecxz
insl
into
jb
and
sbb
add
sbb
push
dec
sbb
sbb
dec
outsl
mov
dec
mov
and
shlb
and
dec
fdivrl
dec
cmp
fsubrp
icebp
push
inc
ja
jl
xor
adc
jg
dec
das
jmp
enter
jno
movsl
jno
cli
xchg
cmp
data16
cmpsb
daa
or
add
xor
out
insl
roll
outsl
out
inc
pop
jle
jp
clc
sbb
inc
insl
dec
jge
jl
fdivrp
inc
push
dec
lods
fcoms
jbe
dec
jp
aaa
pop
daa
jl
ja
jns
push
pop
jne
pop
js
das
outsb
out
pop
push
pop
shrb
jns
outsb
pop
outsl
jns
imul
outsb
imul
addr16
inc
dec
push
daa
jle
outsb
dec
inc
js
outsb
sub
fcmovu
ret
int3
and
outsb
sbb
js
fs
push
dec
sbb
outsb
cmp
xchg
mov
inc
sti
or
push
iret
shr
movsl
dec
and
orps
jb
dec
push
push
imul
int3
scas
sbb
pop
add
adc
jl
xchg
ds
and
insl
push
in
cmp
call
stos
sub
dec
sub
cs
addr16
cmc
shll
inc
jno
out
insl
hlt
neg
pop
push
jo
push
scas
push
sbb
addb
shr
inc
jb
push
or
or
jo
out
jg
dec
outsb
je
out
addr16
imul
dec
push
bound
dec
pusha
movsb
jmp
data16
push
jle
int
dec
jne
test
outsb
vandps
outsl
addr16
dec
out
push
jg
into
adc
jle
dec
popa
movsb
sbb
dec
push
pusha
test
loopnew
add
movsb
add
dec
push
bound
or
movsb
or
dec
push
jl
or
cld
jle
dec
jg
xor
dec
ss
cmp
jle
dec
jns
and
dec
and
es
jle
dec
pop
dec
sub
test
addr16
cs
cli
movsb
sub
inc
dec
push
lds
push
dec
hlt
movsb
push
jg
dec
pop
imull
pop
dec
mulb
icebp
test
bound
pop
fildll
fstps
pop
fistpl
fisubl
push
outsb
push
rcll
push
sub
pushw
push
outsl
cmc
ljmp
insb
out
out
in
loope
popa
lods
fdivl
fistpll
push
fistpl
icebp
pop
push
xlat
push
repz
cld
loop
jle
insb
in
loopne
jno
jg
ja
jnp
jmp
cli
je
jbe
clc
gs
out
insb
pop
fstps
fistpl
pop
insb
push
fsubl
jecxz
cld
jg
cltd
xor
mov
cld
pusha
cmp
push
bound
jne
sub
mov
jecxz
out
pusha
mov
pop
pusha
push
sub
imul
fisubs
outsl
jmp
push
imul
push
loopne
jno
test
mov
push
outsl
pop
ljmp
sti
lock
test
test
push
fs
in
mov
cld
iret
jecxz
arpl
test
or
out
shll
pusha
jmp
pop
call
cld
fsubl
inc
imul
pusha
mov
imul
je
cmp
inc
push
les
push
sub
or
insl
incw
in
scas
cltd
loopne
dec
pop
movsb
outsl
jl
imul
fs
out
jno
jg
mov
mov
or
add
sub
push
outsl
fprem
push
jnp
jns
enter
mov
dec
outsl
cli
shlb
idivb
jb
outsl
push
iret
js
loop
icebp
push
jnp
cli
jge
ja
idiv
jecxz
cmp
outsb
outsl
push
sub
pop
iret
jecxz
arpl
cli
xor
inc
call
fs
inc
outsl
bound
inc
loopne
outsl
movsb
jno
hlt
sub
imul
jp
outsl
imul
sar
inc
outsl
ja
jb
and
jno
stc
pop
outsl
inc
adc
jmp
imul
outsl
lahf
lock
js
outsl
arpl
outsw
inc
repz
jnp
dec
jb
inc
cli
outsl
ja
repnz
jge
std
test
inc
outsl
divb
loop
and
clc
outsl
mov
jp
in
sbb
mov
nop
arpl
dec
sub
ss
leave
out
or
iret
jl
in
repnz
xor
sub
fs
leave
push
cmp
dec
loopne
arpl
lret
dec
push
jle
fmull
es
bound
inc
sub
cmp
dec
sub
iret
lret
mov
in
movsb
out
loopne
js
and
cmp
test
jne
jbe
or
pop
jnp
jecxz
les
sahf
cli
fildll
push
bound
outsl
divb
push
cld
dec
jecxz
arpl
cmc
inc
sub
pusha
and
cmp
or
loopne
in
movsb
call
outsl
loopne
jl
nop
in
dec
outsl
loopne
movsb
js
ret
clc
dec
loop
push
icebp
pop
out
sub
push
jbe
loop
outsl
dec
imul
int
cwtl
mov
iret
outsl
fmull
outsl
aaa
jle
movsb
cli
sbb
sub
sub
out
outsl
sub
testb
fisubrs
pop
loope
pop
cli
loop
into
fldenv
pop
push
dec
push
fdivrs
push
imul
mov
fidivl
icebp
movsl
jo
outsl
adc
sub
fs
dec
mov
sub
push
out
call
sub
scas
push
sub
jne
sub
shlb
data16
outsl
add
mov
jns
cld
pusha
sarb
out
inc
mov
push
xchg
push
outsl
sub
mov
outsl
je
imul
push
outsl
or
loopne
les
lods
outsb
lods
lods
das
push
jl
scas
imul
push
pop
lcall
lock
addr16
outsl
fnstsw
test
movsb
loop
icebp
xorb
clc
movsb
jnp
jle
cli
pop
sub
test
ja
outsl
sub
data16
jmp
leave
stos
cltd
sub
es
ja
pusha
arpl
bound
xor
and
movsb
or
outsl
test
cmpsl
ja
loopne
jno
shl
nop
jp
or
push
dec
sti
scas
es
cmpsb
push
jne
mov
hlt
jne
stc
adc
lahf
and
xor
push
loop
icebp
scas
mov
fs
mov
jnp
je
ja
and
ljmp
imul
outsl
cld
jecxz
mov
sti
sub
pusha
outsb
cmp
imul
sub
push
outsl
arpl
in
cld
loopne
ds
mov
jno
mov
inc
imul
jp
mov
xor
and
xchg
inc
pop
jg
cmp
imul
js
nop
icebp
ret
outsl
sub
cld
add
push
movsb
mov
inc
jecxz
divl
bound
out
pusha
cld
bound
jle
jl
in
cltd
loopne
jno
ja
jb
sub
mov
xor
jp
outsl
xchg
hlt
pop
stc
insl
leave
inc
cld
js
mov
icebp
xor
je
or
imulb
jg
loop
out
iret
cld
or
inc
mov
adc
movsb
pusha
sub
jbe
adc
in
outsl
jl
movsb
in
jmp
shlb
scas
mov
push
push
mov
test
jmp
stc
movsl
cmp
mov
push
or
mov
adc
mov
jnp
mov
mov
jno
mov
cld
rorl
outsl
mov
sub
popa
mov
dec
outsl
jp
mov
inc
outsl
adc
xchg
mov
js
test
sub
sti
push
outsl
pop
inc
sub
mov
xchg
push
jl
and
hlt
icebp
xchg
outsl
cmp
or
inc
xchg
icebp
add
cs
outsl
pop
jnp
push
sub
je
add
mov
andb
ja
arpl
dec
pusha
or
decl
dec
dec
loopne
adc
push
loop
icebp
loope
jnp
cli
and
in
add
mul
cld
ja
jmp
cmp
pusha
jmp
incl
jo
xchg
in
xchg
loopne
sbb
cld
mov
ljmp
lea
mov
sbb
sub
inc
bound
and
adc
scas
dec
lahf
sub
fs
loopne
scas
push
sub
cmpsb
ja
jno
outsl
js
sub
push
cltd
inc
sbb
add
outsl
add
fwait
mov
push
inc
sbb
fs
lcall
fbstp
clc
adc
pusha
or
jnp
jle
cli
push
ja
xchg
js
imulb
out
in
pop
xor
out
xchg
sub
jg
js
outsl
leave
loop
icebp
inc
xchg
sub
push
loop
ja
testb
xchg
dec
outsl
call
sub
lods
cmpsb
jecxz
pop
arpl
or
sub
pusha
outsl
sub
outsl
out
sub
std
clc
loopne
movsb
jno
xchg
je
cmpsb
outsl
movsb
jp
sti
popa
iret
sarb
or
push
icebp
repz
dec
cli
pusha
adc
ja
scas
mov
sbb
jg
cld
sub
mov
push
ljmp
sub
outsl
shrl
outsl
cld
loopne
outsb
dec
jg
add
outsl
aaa
icebp
jbe
imul
jno
jne
lods
push
imul
stos
outsl
loopne
ljmp
loopne
outsl
aaa
repnz
push
sti
imul
outsl
pop
addr16
lds
out
nop
mov
xor
or
inc
clc
out
jne
jns
outsl
inc
scas
fcomip
popa
push
inc
mov
ljmp
jnp
outsl
cld
je
loopne
inc
ja
jbe
loopne
outsl
popa
leave
cld
adc
jecxz
or
mov
cmp
pop
incl
loop
insl
inc
push
jno
inc
and
add
outsl
or
dec
cld
pop
xchg
push
outsl
or
shrl
shrl
icebp
mov
outsl
aam
ret
js
jo
jnp
outsl
data16
popa
cmp
xchg
js
push
outsl
ja
push
pop
clc
lock
jnp
dec
arpl
dec
sti
cmpb
jp
jbe
out
jl
in
pop
loopne
cli
bound
inc
sbb
sbb
inc
cld
outsl
sub
cwtl
arpl
outsl
movsb
pusha
sbb
dec
mull
jbe
jbe
pop
outsl
in
mov
loopne
cld
jno
idivb
mov
fldl
jle
js
outsl
jo
dec
mov
loop
icebp
jae
or
icebp
insl
scas
rep
lds
jbe
fs
jnp
bnd
jge
jle
sub
jle
add
sub
dec
lods
push
out
push
jno
outsl
iret
mov
scas
dec
lods
dec
push
ljmp
addr16
lock
mul
dec
xor
outsl
push
add
cmc
jno
dec
push
imul
cld
out
xor
push
leave
lods
adc
lcall
aaa
insb
outsl
out
lds
call
in
das
pop
in
add
cli
mov
lahf
and
push
dec
dec
jecxz
xchg
push
mov
adc
dec
lret
and
out
je
inc
arpl
je
jno
sub
sbb
pcmpeqd
push
in
cmc
stc
ljmp
stc
push
dec
cmc
gs
clc
out
sti
jae
divl
jno
dec
loope
push
js
pushl
icebp
addr16
mov
push
mov
mov
ljmp
cmp
scas
push
lret
xor
push
and
arpl
je
sti
outsl
jecxz
cmp
js
mov
jmp
jno
push
js
lods
jmp
notb
sbb
outsb
loope
inc
and
ljmp
arpl
call
in
call
imulb
and
scas
outsb
jp
and
cmp
arpl
add
movsw
jl
int3
ja
js
cmp
or
adc
add
es
pop
into
or
cmp
out
insb
ja
jmp
loop
mov
and
movsl
fdivrs
out
das
imul
pop
out
arpl
cmp
add
cmp
or
jo
lods
jne
cli
out
in
sbb
dec
insl
loopne
ja
icebp
scas
jnp
sub
les
cmp
pop
jo
out
cli
lcall
mov
sbb
rcrl
out
insb
insl
imul
aas
cmp
testb
lcall
enter
and
outsl
stc
outsb
arpl
pusha
jo
dec
imul
cli
iret
push
ljmp
xor
fs
sbb
pusha
inc
dec
jmp
lret
aas
call
inc
icebp
and
loope
adc
pop
push
jmp
add
cmc
jnp
scas
inc
or
add
jmp
dec
push
dec
pop
jne
js
jecxz
js
bound
push
push
loopne
cmp
out
push
int3
cmp
or
ds
inc
push
out
xchg
loopne
inc
inc
pop
pop
fistpl
jle,pn
mov
add
lods
test
js
jp
mov
inc
adc
and
and
and
in
push
mov
or
outsl
cmp
and
cmp
movsl
jle
bnd
pop
cmpsl
inc
in
ss
loopne
jl
bound
jecxz
jno
dec
dec
jmp
jno
xor
add
adc
into
pop
inc
insl
outsb
dec
jecxz
test
dec
push
je
incb
ret
mov
outsb
cs
cmp
stos
dec
aas
pop
addr16
dec
or
js
hlt
movsb
dec
jno
adc
cmovnp
jns,pt
jl
js
cld
and
add
cs
push
addr16
mov
int
pop
stc
fmul
addr16
sub
pop
cmp
inc
inc
sbb
subb
ds
adc
in
jnp
jl
and
fcomp
jo
add
cmp
jb
add
and
test
jecxz
mov
add
cmp
jg
jl
jbe
jl
and
dec
and
xor
pop
cli
pusha
push
js
aaa
mov
cmc
dec
or
stos
jle
imul
dec
ss
pop
lods
fadds
pop
imul
jns
pusha
jle
fcomp
dec
outsb
xor
das
aaa
pop
add
inc
jle
jbe
test
outsb
out
cld
test
test
test
call
adc
icebp
sbb
test
jl
outsb
dec
bound
out
sbb
pop
sub
jo
push
jp
adc
adc
ljmp
scas
push
add
pop
mov
jl
js
in
enter
loopne
scas
push
dec
es
fidivl
outsb
or
inc
ds
adcb
scas
and
jne
je
jp
cld
xchg
inc
pop
pop
lods
out
jae
ficompl
sti
mov
imul
dec
add
lock
and
out
and
mul
ja
jp
xor
jmp
mov
sub
jle
dec
cmp
repz
in
sub
push
addr16
arpl
outsl
clc
pavgw
sbb
out
cmp
or
sbb
jmp
ja
pop
push
xchg
mov
push
add
les
adc
lods
and
push
dec
push
pop
push
mov
add
bound
sub
lods
mov
ss
mov
cli
out
or
negl
stc
push
addr16
push
out
push
push
sub
jl
daa
cmp
push
lods
push
daa
jnp
inc
bound
pop
testb
call
jge
cmpsl
add
call
jle
aas
sub
push
cmp
mov
xor
dec
pop
in
jnp
shll
pop
jle
add
push
inc
outsb
shrb
ret
stc
sub
jne
push
lods
ror
push
jmp
sub
loopne
add
ljmp
shll
xor
push
daa
cmp
cmp
test
cmc
sbb
dec
pusha
jbe
mov
lods
lea
lods
and
jl
pop
xchg
mov
shll
add
inc
dec
addr16
sti
fs
xor
pop
in
data16
push
jns
fnsave
and
es
ds
test
cwtl
sub
pop
call
ja
or
adc
nop
fisubs
push
repz
scas
es
pusha
in
mov
pusha
lret
cs
push
sbb
or
inc
add
mov
mov
data16
imul
add
jnp
cmp
dec
dec
sub
jnp
jmp
loop
popa
fdiv
or
lods
test
loopne
insl
je
js
add
mov
dec
push
pop
bound
out
jle
data16
cmp
xchg
aaa
stos
out
loopne
arpl
sub
arpl
cmovo
add
lods
data16
pusha
aam
xor
pop
pop
outsl
fs
test
lds
pop
ja
sub
sub
cs
out
and
xchg
cld
xor
adc
pop
int3
cmp
inc
in
and
xor
jle
js
dec
cld
add
push
mov
inc
js
data16
dec
xor
testb
pop
call
cmp
jno
adc
push
cmp
and
pop
ja
dec
jns
jl
pop
cmc
cmp
push
cmpsl
out
cmpsl
aaa
cli
pop
push
jle
call
pop
push
in
jne
cmc
sub
pop
push
xchg
jg
loop
ljmp
jmp
stos
lods
mov
jmp
loopne
dec
pusha
out
cmp
bound
enter
jp
dec
inc
xchg
pusha
inc
push
sub
xchg
mov
aad
or
stc
sbb
sub
jns
loop
lret
jb
add
jns
in
je
xor
je
stos
scas
xor
das
das
pop
add
inc
xor
imul
and
pop
push
dec
add
cs
adc
bound
sub
push
imul
je
pop
pop
inc
push
lods
push
dec
mov
pop
and
cld
pop
adc
jp
lods
adcl
packsswb
fmull
pop
dec
pop
das
pop
cmp
mov
popa
pop
je
pusha
dec
jb
push
movsb
scas
gs
push
push
cmp
sub
popa
add
push
daa
sti
jne
push
jmp
cmpsl
and
addr16
fs
pop
imul
outsb
inc
xor
xlat
js
adc
pop
ljmp
push
sbb
jnp
add
inc
inc
cmpsb
cmp
jp
and
ds
and
jg
push
addr16
test
out
cmp
sbb
sbb
imul
mov
sbb
imul
jle
jns
jle
ljmp
cmp
cmp
or
and
jp
inc
cmp
sub
lods
mov
and
pop
movb
sub
je
in
cld
adc
scas
adc
jns
mov
fmull
push
jno
push
mov
lahf
js
jns
jb
or
push
dec
divl
popa
dec
push
int3
fsubrl
or
xor
into
pop
jle
jle
clc
mull
enter
data16
xor
push
es
stos
sub
call
das
adc
cwtl
mov
imul
ja
imul
jmp
push
notb
sub
call
jns
aas
pop
and
js
loop
and
sub
bound
and
xor
xchg
out
add
loope
xor
dec
push
and
cs
push
mov
or
jnp
or
jg
pop
jecxz
fidivs
addr16
jg
stos
pop
dec
pop
pop
in
sbb
and
imul
lret
jle
adc
pop
add
cs
dec
outsb
bound
loopne
js
jne
out
jp
push
call
data16
je
scas
push
jp
and
jnp
daa
data16
pop
das
cmp
cmp
ja
push
cmp
pop
fsubr
clc
test
jl
push
ja,pn
inc
and
arpl
pusha
push
cmp
and
jne
pop
out
push
pop
sub
pop
cli
adc
push
sub
and
xor
das
sub
jp
jl
dec
cmp
inc
int
ljmp
fldt
arpl
outsl
mov
jno
stc
inc
data16
pop
lods
shlb
add
div
push
push
adc
cld
idivb
xchg
sub
jp
movsl
add
adc
cli
loope
or
jns
decb
stos
or
jo
push
jl
movsb
push
jns
jbe
cs
xchg
das
hlt
cmp
jmp
aas
push
out
loope
adc
ja
push
arpl
lods
sub
daa
imul
dec
outsl
ljmp
cld
adc
ss
xor
cmpsl
cmp
dec
je
fdivrs
pop
push
jl
cmp
mov
std
push
movsb
sbb
js
inc
cmp
cmp
lods
pop
dec
das
ljmp
xor
addr16
cmp
je
jbe
out
fadds
or
xchg
sahf
popw
pop
push
add
cmp
or
mov
jp
inc
enter
xor
int3
dec
pop
jle
cld
and
nop
pop
movsl
stc
push
add
dec
xor
out
inc
pop
int3
push
ds
addr16
divb
outsb
adc
jp
add
push
bound
adc
into
xor
inc
clc
sub
out
decb
insl
jns
aaa
ds
outsb
jg
outsb
add
data16
pop
data16
pusha
jb
divb
ljmp
sub
aaa
jnp
xor
inc
add
mov
sub
imul
imul
adc
hlt
fs
or
push
mov
push
jl
and
hlt
push
cld
sbb
push
in
cmp
add
loop
repnz
scas
push
adc
ja
add
dec
xor
out
adc
ljmp
sub
cli
pop
mov
cmp
inc
adc
out
pusha
test
lret
jecxz
lret
imul
sbb
addr16
jno
and
and
mov
and
fistps
add
push
lods
fsubl
add
aaa
fdivrl
cld
insb
mov
dec
pusha
or
xor
ret
push
pop
mov
push
xor
hlt
and
iret
jl
push
pusha
fidivrl
inc
inc
xor
testb
js
and
and
lcall
in
ja
inc
jns
jp
cmp
imul
out
push
mov
jns
popa
mulb
pop
push
ljmp
jne
data16
sub
pusha
sti
dec
mov
xor
sub
inc
dec
insb
jle
inc
addr16
call
dec
sub
das
and
call
mov
pop
dec
pop
cmovnp
lods
sbb
cwtl
xor
lahf
dec
int3
ss
jp
push
xchg
cmp
lods
sub
leave
pop
sub
loope
jns
bound
dec
push
or
je
or
idiv
int3
movsl
imul
fimuls
mov
jo
and
cli
pop
imul
enter
sbb
cmc
iret
push
test
shlb
pop
cmc
jns
pop
jle
insb
jo,pt
cmp
sub
divb
lret
jno
int3
arpl
ss
data16
addr16
movsl
or
push
jle
sbb
pushf
dec
in
and
pop
int3
and
sbb
xor
es
cmp
inc
pusha
add
imul
cs
and
mov
out
sbb
jecxz
fs
testb
stc
imul
in
jecxz
inc
bound
or
outsb
or
pop
cmp
fildll
dec
inc
or
inc
xor
out
sbb
icebp
add
add
adc
outsl
faddl
sti
enter
pop
lahf
loop
jbe
call
xor
sub
out
jle
push
ss
imul
xor
cwtl
adc
ljmp
pushf
and
cmp
sub
pusha
je
jmp
dec
add
sti
out
pop
out
lret
sub
fs
shlb
or
xor
fs
sbb
sti
call
ret
jecxz
addr16
push
xor
push
cmp
loop
stc
testb
sub
jb
push
bound
dec
popa
mov
jnp
mov
xor
push
das
dec
push
sbb
insb
fisttpl
push
cmp
shrb
loope
xor
mov
js
bound
ret
icebp
dec
arpl
and
push
sbb
je
gs
ljmp
cld
paddusb
cld
push
fdivrl
inc
pop
jl
pop
inc
dec
add
test
sub
and
daa
jne
lret
and
inc
dec
jmp
incl
pop
out
adc
or
jae
js
pop
cmp
or
cmp
arpl
add
stos
sbb
es
test
pop
cmc
cs
jne
mov
cmc
xchg
stc
adc
je
pusha
out
ss
dec
cs
cvtpi2ps
push
addr16
sti
add
add
ja
add
out
adc
pop
in
fsubrp
jbe
out
or
call
das
adc
pusha
outsl
push
push
into
adc
or
jle
das
jp
inc
dec
pop
pop
inc
sti
mov
pop
inc
jne
aas
cmp
add
inc
jns
call
and
jbe
add
mov
addr16
dec
loopne
ss
xchg
les
out
sub
inc
mov
bnd
mov
dec
les
fisubs
fdivl
pop
dec
jns
cmp
js
sbb
pop
fsubr
call
js
adc
xor
cmp
es
jno
loop
push
jle
mov
mov
jle
mov
lret
addr16
adc
in
pop
sti
xchg
lods
add
test
dec
jl
push
je
jge
adc
js
sub
or
js
daa
lret
addr16
out
inc
outsl
xor
inc
sub
push
pop
lods
fcoml
stc
shll
mov
bound
ss
jne
es
xchg
sub
jmp
push
vunpckhps
dec
dec
push
mov
inc
push
xor
decb
push
imul
jno
push
lds
or
mov
mov
or
add
call
cmp
adc
divb
testb
out
loope
outsb
jbe
xchg
sbb
pop
fbld
decb
inc
aaa
dec
popa
sub
xchg
je
push
lock
ja
inc
loopne
packuswb
sbb
pop
outsb
cmp
and
fcmovnb
sbb
arpl
and
xor
cld
out
inc
xcrypt-ofb
cmpsl
sub
push
loope
cmp
jle
xchg
push
stos
jle
imul
or
jne
mov
mov
xor
cmp
sahf
aam
mov
sub
aas
pop
faddl
cmp
loopne
jb
jnp
push
das
es
sbb
inc
pop
ljmp
mov
dec
pop
push
pop
push
dec
bound
int3
sub
mov
cmp
pop
ljmp
data16
es
mov
sbb
and
mov
lds
jnp
or
dec
dec
xor
add
dec
outsl
push
bound
popa
ds
jp
ret
aad
addr16
arpl
orl
push
jne
loopne
loop
jno
fs
addr16
jecxz
pushf
mov
fs
fcoms
gs
push
js
out
and
jg
addr16
add
push
pop
push
mov
and
jle
pop
loopne
jl
lock
add
and
mov
jecxz
lds
les
repz
mov
nop
cmp
data16
fdiv
xchg
jne
push
push
inc
dec
inc
jb
jne
mov
loopne
cs
repnz
sub
dec
jp
xor
and
lods
call
and
push
jg
jecxz
dec
pop
mov
or
dec
push
divb
fistpl
xchg
subl
adc
adc
push
add
ja
or
pop
push
js
push
cmp
pop
sbb
xor
hlt
pop
push
xchg
inc
into
popa
add
dec
scas
xor
push
xchg
inc
dec
xor
loope
call
dec
adc
sbb
outsb
aaa
aas
add
mov
scas
push
jnp
cmp
jno
cmc
jnp
push
or
jge
loope
test
pop
and
std
popa
jb
dec
out
mov
cmp
add
push
push
jb
imul
insl
clc
pop
lds
ja
mov
out
ds
adc
xor
jg
mov
dec
dec
outsl
mov
sub
out
cmp
add
inc
decl
inc
jp
jns
mov
cld
push
inc
push
ljmp
je
outsb
mov
js
jge
push
ja
add
push
xor
sbb
das
es
popa
inc
gs
jle,pn
insb
push
add
jmp
cs
mov
cs
popa
cmp
jle
es
dec
sbb
jbe
pusha
call
sub
arpl
inc
sub
imul
jmp
jmp
dec
or
push
daa
inc
lods
and
hlt
cmp
es
and
dec
cwtl
fisubs
cmp
adc
fucomi
pop
loop
push
xchg
mov
ret
insl
ljmp
push
cmp
xor
bound
push
mov
fcmovu
popa
jnp
jl
daa
xor
dec
je
icebp
imul
pop
arpl
mov
in
imul
adcl
loopne
jle
add
xchg
adc
loope
push
adc
imul
jl
ljmp
xor
pop
inc
outsb
imul
mov
notb
scas
push
push
out
imul
xchg
in
xor
pusha
pop
call
cmp
ds
imul
sbb
enter
pop
ja
xchg
inc
xor
leave
imul
aas
imul
ljmp
imul
xor
stos
inc
hlt
and
loope
fdivl
or
imul
loop
jno
icebp
outsb
lret
enter
sub
xchg
nop
cld
push
pusha
inc
arpl
hlt
les
jge
jle
push
push
and
inc
ljmp
decl
es
push
push
idivb
ds
cmp
sub
ljmp
cs
movsl
ljmp
inc
xchg
jnp
ljmp
ljmp
scas
imul
cld
addr16
outsl
jle
icebp
js
aaa
insl
and
in
push
mov
lret
push
jbe
imul
cld
in
imulb
bound
in
push
jecxz
addr16
and
das
push
test
sub
je
pop
ljmp
cs
or
dec
sahf
dec
jb
pusha
cmpsb
fs
xor
sbb
ljmp
jmp
jbe
cs
cmp
ljmp
imul
jl
popa
je
push
pop
clc
and
sub
bound
test
nop
icebp
loope
fs
cli
aas
sub
dec
lods
je
and
ljmp
in
imul
jl
loopne
stc
sub
scas
imul
dec
dec
jg
jg
dec
cld
add
xchg
shrl
in
push
mov
pop
fs
aaa
push
cmp
jge
xor
pop
icebp
cmp
out
jecxz
inc
cmpsl
pusha
stc
push
mov
fisttps
ljmp
jl
ljmp
sub
in
jp
mov
sahf
addr16
jge
and
sti
push
imul
push
jecxz
repnz
push
imul
inc
mov
mov
sti
out
mov
dec
icebp
stc
adc
stos
xchg
cs
xor
fsubr
je
cli
call
test
jae
cmp
sub
fs
jb
dec
arpl
ljmp
sti
test
pminsw
in
out
sub
jecxz
ljmp
dec
bound
adc
sub
scas
imul
data16
xchg
xchg
or
sahf
inc
cs
cs
out
dec
and
inc
ljmp
arpl
ljmp
loope
jle
mov
in
lea
sbb
std
fcomp
call
pusha
push
push
xor
imul
push
div
aas
jle
or
jo
jne
add
jp
push
jle
jg
and
push
bound
pop
cmc
sub
jl
jg
jmp
sub
mov
pop
outsl
push
dec
and
scas
or
int
jg
cmp
imul
imul
into
arpl
sub
ljmp
push
jnp
lods
addr16
jne
mov
inc
cld
imul
test
push
sub
dec
loopne
subb
imul
add
bound
adc
lcall
dec
push
mov
cs
lods
jae
inc
divb
lods
data16
mov
in
xchg
jb
ljmp
lret
push
jecxz
js
aad
push
sub
inc
loope
js
imul
hlt
icebp
addr16
add
sahf
leave
jle
enter
lods
out
jae
in
push
dec
push
pop
xchg
sub
jne
push
sbb
inc
pop
pop
jns
inc
mov
and
fdivrs
jmp
movsb
cmp
jno
mov
and
repz
push
sub
cmp
add
enter
or
pusha
cmpsl
incb
out
mov
imul
sub
ljmp
inc
bound
pop
inc
addr16
adc
or
push
sub
dec
stc
loop
sbb
daa
enter
movsl
sub
daa
cmc
cmp
test
mov
ss
jns
inc
inc
jbe
sub
movsb
sbb
imul
outsl
loop
mov
cmp
and
fwait
push
sub
or
fs
stos
hlt
and
out
xchg
test
dec
pop
nop
and
in
jne
jae
pop
dec
adc
js
jle
ficomps
jp
sub
imul
fs
pop
pusha
pop
and
in
sub
enter
scas
data16
scas
adc
sti
jle
mov
dec
mov
jb
mov
int3
and
ljmp
inc
sub
sbb
inc
je
ds
sub
ja
loopne
das
push
shrb
mov
jle
pop
js
jns
sub
push
jp
sbb
out
daa
adc
pop
cmp
add
pop
pop
pop
dec
fs
add
adc
cmpsb
outsl
inc
push
les
into
add
imul
or
mov
incl
cli
divb
popa
mov
add
ss
outsb
and
stc
lahf
pop
movsl
shrb
inc
mov
popa
push
testb
lret
jg
outsl
daa
cs
or
inc
test
call
dec
cmpsb
jp
hlt
inc
mov
add
sub
stc
mov
mov
fildl
or
fs
test
adc
push
sub
sub
call
dec
and
movsl
movsl
in
jg
scas
outsb
push
lret
stos
divl
call
call
jne
outsb
int3
call
movsb
adc
test
mov
xor
test
int
rorl
shr
xlat
test
addr16
jle
dec
push
movsb
aam
pop
dec
pop
fldt
imul
push
test
addr16
jle
dec
push
movsb
pop
not
ret
call
clc
jmp
cs
sub
in
adc
mov
mov
add
xor
sub
cli
xor
adc
lds
jbe
ret
pop
push
jnp
jmp
xchg
adc
ret
in
push
push
ss
pop
cmp
fs
add
test
je
lcall
jae
int
jno
xor
or
push
ds
sub
add
cmpsb
push
bound
popl
mov
lcall
push
inc
pusha
int3
inc
repz
enter
ljmp
bound
and
add
jp
inc
mov
cmp
mov
push
mov
mov
ja
sub
pusha
stos
or
xor
dec
hlt
adc
sbb
jle
dec
add
or
dec
xor
cmp
jle
dec
and
sub
dec
push
push
test
addr16
jle
dec
inc
movsb
inc
jg
dec
dec
dec
test
addr16
jo
jbe
je
jp
js
test
loope
movsb
push
lods
adc
sbb
dec
push
movsb
or
dec
xor
test
sub
dec
push
movsb
pop
jg
dec
inc
dec
test
addr16
bound
sub
jg
dec
or
test
and
dec
push
movsb
pop
jg
into
pop
jg
xor
dec
test
addr16
jle
dec
dec
movsb
leave
jg
dec
enter
addr16
jle
dec
push
movsb
aad
inc
dec
les
addr16
jle
dec
inc
movsb
sarl
rolb
and
push
cmp
adc
mov
lock
rcr
push
jg
aam
push
xlat
test
addr16
jle
dec
shll
movsb
pop
outsb
push
stos
push
int
nop
loope
cmp
push
stos
push
int
into
push
vrsqrtps
loope
cmp
push
stos
ja
cli
call
dec
fiadds
enter
jb
push
scas
sti
pop
fcomps
fmull
ja
ss
in
pushl
push
icebp
push
jno
divb
jge
ja
hlt
mov
xchg
imul
sub
push
mov
add
mov
imul
cmp
mov
push
insl
iret
je
lock
lock
divb
movsb
ja
add
shrl
add
adc
xor
add
or
inc
push
lock
leave
incl
or
les
lock
push
xor
movsb
lret
or
enter
leave
bound
leave
into
decl
mov
dec
and
jmp
leave
mov
push
es
dec
inc
leave
js
loop
lret
aas
enter
ljmp
clc
push
in
rclb
lock
sub
inc
lcall
stos
jmp
add
jp
jmp
add
or
xchg
or
ffreep
iret
es
or
jp
inc
mov
sbb
je
jl
inc
pop
rorb
pop
dec
push
sbb
ficoms
lock
leave
movsl
and
sbb
jge
add
popf
stc
jnp
fs
je
add
testl
in
dec
jo
call
inc
jg
jnp
ret
out
dec
dec
mov
lret
inc
pop
iret
clc
jo
fwait
ljmp
mov
sbbb
popf
out
sbb
or
adc
in
jg
dec
adc
test
addr16
jle
dec
xor
nop
jg
dec
adc
test
addr16
jle
dec
pop
movsb
xchg
jg
dec
push
jbe
xchg
addr16
pop
dec
data16
xchg
jg
into
adc
jb
in
sbb
movsb
pop
jg
dec
inc
sbb
je
sbb
repz
sbb
test
addr16
jle
dec
inc
movsb
sahf
jg
dec
push
jo
lahf
addr16
pop
dec
data16
pushf
sbb
sbb
or
jle
dec
andb
test
add
dec
subb
lock
jg
dec
addl
jle
dec
sub
pop
test
addr16
jle
dec
dec
movsb
add
jbe
xchg
bound
mov
jo
or
or
push
dec
or
or
bound
dec
push
sub
and
in
cld
mov
push
icebp
movsb
fs
push
dec
mov
xor
dec
cmp
addr16
dec
push
movsb
mov
inc
dec
xor
mov
push
jno
mov
or
test
addr16
cs
aaa
movsb
inc
jg
dec
jo
test
in
add
setnp
pop
xor
mov
or
pop
imul
fisttpll
addr16
je
mov
cmp
mov
inc
popl
or
pop
mov
fwait
jp
or
mov
mov
cmp
mov
hlt
je
out
or
aad
jmp
ss
push
js
stos
sbb
inc
lahf
data16
fs
jl
dec
dec
mov
aaa
xchg
inc
dec
mov
mov
dec
push
in
xchg
add
lcall
xchg
aaa
cwtl
xchg
int3
fmull
mov
mov
xor
aaa
aad
xor
addl
out
mov
jbe
in
jg
inc
jl
push
jp
call
lods
pop
daa
sub
stos
jne
jp
mov
add
sub
jle
in
sbb
add
imul
push
push
je
jns
les
or
popa
push
aas
call
cwtl
rorl
or
ss
add
xchg
push
sbb
push
aaa
mov
push
je
test
xor
mov
adc
mov
dec
sahf
inc
leave
add
adc
sbbl
sbb
inc
and
mov
mov
ds
jp
inc
cmc
jp
or
cs
dec
xor
dec
out
dec
test
push
jle
fs
data16
pop
shlb
pusha
arpl
add
inc
es
stos
fs
or
mov
or
es
movsb
push
stc
or
add
xor
jb
scas
jp
cmp
ds
mov
or
jo
add
xor
push
repnz
adc
adc
mov
cld
dec
js
sbb
dec
pusha
or
or
ljmp
sub
js
lret
add
ja
ds
data16
aas
sub
mov
dec
jle
fs
or
jae,pn
cmp
ds
sub
movsl
iret
or
pop
jno
or
inc
cmpsb
jge
outsl
pop
mov
adc
jle
subb
sub
scas
push
mov
aaa
clc
dec
mov
mov
pop
mov
adc
xchg
mov
test
cmp
jmp
mov
dec
jl
dec
cmp
lahf
sub
mov
xchg
mov
cmpsl
push
xor
dec
add
addr16
xor
cmp
adc
xchg
xor
lcall
je
push
inc
outsl
dec
cmp
xor
or
int3
fs
iret
fs
int3
push
outsb
imul
xor
into
jp
and
jl
jno
dec
jb
push
jno
inc
or
xor
dec
and
in
pop
and
test
mov
adc
fsubrs
inc
dec
fs
aaa
adc
sahf
mov
aaa
push
bound
data16
jnp
inc
mov
sub
clc
push
ja
lret
xchg
add
or
dec
call
pop
pop
fs
push
inc
es
jl
cmpxchg
adc
fsubs
add
mov
jo
and
inc
fcomp
outsb
adc
cli
pop
inc
scas
jl
jb
ficoml
inc
lds
into
push
pusha
lret
xabort
popf
mov
sahf
sub
ds
adc
test
push
cltd
movsl
je
mov
fildll
mov
pop
sbb
sarl
xchg
sub
cld
sbb
arpl
outsb
or
pushf
mov
push
mov
xchg
jmp
xchg
test
rorl
adc
and
pop
aaa
mov
adc
js
sbb
xor
cmp
jae
les
push
xor
mov
pop
pusha
pop
inc
cmp
jg
ret
dec
inc
ret
addr16
pop
dec
fsubl
dec
out
popf
fs
dec
sbb
add
jle
dec
or
mov
or
pop
push
popa
mov
mov
sti
pusha
daa
adc
push
jbe
clc
push
lock
dec
push
xor
dec
jp
xchg
pop
cmp
andb
xlat
xchg
jno
int3
jle
paddb
pusha
cmpsb
xor
and
cli
jae
jae
or
outsl
mov
cmp
adc
mov
das
dec
and
shrb
xor
in
popa
stos
push
or
push
in
add
pop
fidivrs
push
dec
popf
push
inc
cli
sub
dec
in
in
out
push
push
addr16
js
movsb
fs
inc
je
and
cmp
xor
jbe
pop
scas
push
int3
bound
xlat
insl
adc
in
outsl
imul
sbb
scas
mov
sub
push
add
fs
push
or
popf
mov
inc
xor
je
pop
pop
outsl
outsb
gs
jl
mov
inc
sbb
xchg
pusha
mov
or
or
call
jl
sbb
xchg
or
and
xor
push
insl
mov
dec
icebp
bound
jo
cs
jbe
jns
push
cs
add
push
and
test
push
fs
je
sub
mov
pop
in
dec
movsb
sub
sbb
dec
pushw
mov
xor
dec
dec
dec
out
jmp
test
repnz
std
fbstp
imul
push
or
adc
js
cli
mov
pop
int
or
dec
inc
into
leave
lret
cmp
lds
ds
in
adc
packsswb
ja
fstpl
je
and
mov
and
hlt
fiadds
imull
into
fldcw
sbb
inc
js
fs
data16
inc
outsl
pushf
cmp
sub
sub
sarl
mov
pop
stc
cmp
sti
in
in
adc
bound
js
pusha
fs
lock
clc
cld
loopne
call
jnp
arpl
outsl
insb
repz
jge
inc
jns
insl
popa
jne
repnz
insb
ljmp
data16
push
jecxz
jmp
in
outsl
imul
in
out
loopne
bound
fs
xchg
xor
out
out
callw
insb
dec
loopne
cmc
imul
imull
inc
jno
loope
ja
insb
sub
je
icebp
cld
in
jbe
clc
hlt
jmp
and
fstps
ljmp
data16
pop
stos
out
cmp
loop
aas
out
add
outsb
mov
mov
sub
mov
fsubrl
push
pushf
enter
test
inc
sbb
sahf
cli
ss
push
test
lock
sub
test
add
jl
xor
loopne
xor
xorl
mov
jle
jmp
jnp
jle
je
icebp
call
dec
jbe
jle
stc
bound
js
inc
dec
pop
mov
dec
and
dec
jecxz
dec
int3
push
sub
js
cmpsl
jp
push
inc
cli
inc
pop
clc
sub
push
cwtl
and
jl
jbe
scas
push
jle
jle
push
mov
ss
jns
js
dec
push
in
test
pop
inc
data16
xor
cld
dec
cld
dec
cld
bound
scas
je
add
aad
cmp
sub
push
sub
cmc
lock
loopne
mov
pop
and
and
xor
sub
inc
ja
popa
sbb
pusha
inc
in
lods
ret
mov
out
arpl
es
lock
popa
jle
mov
ss
jb
scas
dec
add
daa
pop
loopne
scas
dec
mov
push
or
dec
or
sub
sub
push
push
sub
sub
inc
jns
call
pop
mov
mov
push
jle
push
aas
xor
iret
test
enter
mov
roll
or
je
push
mov
outsl
es
add
push
test
jb
dec
arpl
test
js
insl
sti
dec
pop
ss
cs
xor
js
imul
xchg
dec
push
dec
add
fidivrl
scas
jmp
pushw
add
popw
addr16
push
ja
ljmp
pop
sub
inc
pop
fsubrs
push
fs
test
sub
cmp
inc
arpl
jae
insl
cmp
ljmp
outsl
push
adc
push
xchg
loope
data16
stc
ret
jbe
pop
jp
cld
addr16
lods
test
dec
mov
cmp
inc
dec
shrb
add
push
inc
pop
outsb
cmp
sub
inc
data16
dec
popa
push
imul
mov
dec
sub
in
ss
jns
pusha
cwtl
jns
pop
jle
ret
push
mov
push
mov
ljmp
mov
test
outsb
pop
jp,pt
xchg
xchg
es
or
or
mov
push
arpl
pop
rcr
into
dec
loopne
call
and
mov
lcall
stos
dec
lret
popa
pop
jbe
push
in
dec
outsl
add
jmp
movsl
xchg
pop
pop
cli
fidivrs
xlat
sbb
int3
into
adc
pop
lahf
mov
and
xlat
mov
jb
jb
mov
jp
sti
jle
fistpll
lea
cmp
cmp
pop
movsl
add
dec
mull
testb
out
fs
cmp
addr16
insl
call
pop
cmp
je
adc
insl
mov
pop
mov
xor
call
enter
adc
cli
insl
inc
aam
mov
pusha
push
cmp
je
testl
sbb
mov
cwtl
pop
test
in
jl
sbb
dec
imul
dec
and
or
repz
push
push
jo
add
les
push
pop
lock
xor
fs
dec
push
jl
adc
movsb
outsb
or
dec
in
add
push
movsb
jbe
or
ljmp
xor
clc
dec
jl
sbb
push
mov
jle
push
push
lock
add
pop
push
jp
xor
sub
adc
out
or
and
xor
movsb
ja
push
push
jmp
pop
lock
ds
movsb
dec
or
gs
inc
push
arpl
lock
bound
leave
jae
push
movsb
out
pop
push
jnp
lock
leave
dec
call
movsb
out
or
popa
enter
movsb
int3
testl
dec
or
leave
cmc
lcall
jns
cmp
imul
xor
leave
insl
jmp
movsb
fisttps
pop
push
jge
add
jecxz
movsl
xor
movsb
jne
xor
in
movsb
les
shrl
push
hlt
push
leave
fdivr
cld
movsb
aas
or
push
lods
push
int3
lock
in
inc
movsb
loopne
daa
nop
shlb
xor
push
clc
push
aaa
repz
lock
movsb
or
movsb
inc
in
in
pop
lock
mov
fimuls
push
cmp
lock
into
xor
push
loop
and
sar
repnz
add
cli
bound
xor
movsb
lret
adc
pop
out
insb
inc
insb
nop
xlat
divl
push
call
jae
pop
scas
iret
cmp
insb
pop
ret
lock
and
push
add
xor
movsb
jmp
stos
push
lret
push
adc
sar
nop
shll
xor
push
stc
push
add
xor
push
int
in
lock
std
or
xor
movsb
mov
aad
sbb
mov
mov
movsb
in
or
std
push
mov
mov
mov
mov
movsb
nop
popf
decl
sahf
sbb
std
movsb
mov
xchg
mov
mov
or
mov
mov
push
xchg
fisttpll
sbb
std
movsb
cmpsl
adc
call
mov
mov
pushl
mov
movsb
mov
mov
mov
or
test
lods
nop
in
or
shr
sub
push
and
fs
shlb
dec
int3
ret
dec
dec
jg
dec
inc
jl
dec
inc
cld
test
push
call
push
inc
mov
data16
clc
pop
dec
out
sub
lods
push
loopne
pusha
sub
sub
fdivr
push
outsb
mov
hlt
les
scas
in
sub
mov
in
jle
push
frstor
jle
iret
pop
lds
nop
loope
cmp
jno
outsl
dec
fcomps
mov
push
cmp
push
adc
lahf
and
pusha
imul
out
pop
js
or
js
andl
add
mov
xor
adc
in
scas
xor
in
cld
popa
or
ja
out
cwtl
test
jmp
fdivr
pop
iret
fists
push
aam
insl
inc
hlt
jg
ficoml
ret
inc
fcoms
pop
mov
push
and
and
std
iret
ror
push
int3
pop
enter
pop
push
sbb
sub
repz
fcoms
push
enter
push
arpl
push
leave
inc
jp
je
icebp
pop
push
ss
xchg
cwtl
dec
sbb
in
push
jns
sar
enter
sbb
es
ljmp
pop
gs
jl
lcall
dec
imul
xchg
dec
and
out
iret
add
inc
jl
les
push
inc
lret
pushf
ret
outsb
outsb
xlat
push
dec
aad
xchg
dec
jmp
aad
cmp
mov
pop
xchg
das
int3
lret
mov
lahf
mov
fs
push
pop
add
mov
sahf
iret
jl
outsb
repnz
mov
ss
js
push
outsb
cli
call
pop
sub
and
push
jbe
push
dec
or
jl
imul
mov
or
testb
dec
dec
ljmp
and
insl
fistpl
leave
inc
jl
jp
call
jp
je
xor
je
jl
iret
jo
fidivrl
jno
dec
pusha
dec
popa
lret
inc
jmp
enter
mov
pop
mov
push
divb
jo
inc
or
hlt
sub
pusha
out
data16
scas
lret
in
pop
repnz
cli
mov
pop
xor
ja
call
movsb
aam
hlt
test
cmp
mov
leave
dec
push
testb
add
bound
inc
das
nop
js
dec
xor
cmp
or
fs
jo
jbe
push
dec
testb
bound
notl
insl
xchg
push
pop
loope
sub
sub
jle
inc
fsubs
test
jo
jbe
test
dec
dec
pusha
dec
inc
sarb
xchg
inc
dec
popa
data16
inc
xor
aaa
ja
pop
dec
notb
sti
pop
push
xchg
push
sarl
jle
jp
stc
out
push
notl
neg
mov
ja
add
fs
mov
xchg
dec
dec
mov
inc
pop
int3
inc
mulb
lcall
lods
cmp
int3
xor
xchg
push
lock
flds
and
sbbb
cmpsl
filds
pop
lock
arpl
dec
jnp
movsl
js
insl
in
popa
call
fisubrl
push
loop
ljmp
ficoms
fcoms
dec
dec
pop
testb
push
push
scas
or
sub
cmp
dec
sub
inc
push
movsb
std
addr16
arpl
testl
dec
inc
fs
lret
lret
test
sti
out
cli
jno
clc
push
pusha
loope
fs
jo,pt
inc
mov
outsl
imul
inc
dec
sar
test
jp
or
pop
dec
movsw
cli
dec
fsubs
sbb
dec
mov
icebp
pop
imul
jo
js
or
jo
jbe
repz
cmpsl
cli
mov
dec
jae
jl
clc
icebp
arpl
jo
jno
ds
mov
hlt
bound
iret
das
cmp
fs
pusha
movsb
push
sub
dec
cmpsb
les
inc
inc
fadds
jmp
data16
jl
jo
jp
pusha
mov
xchg
dec
push
mov
aam
and
rcrl
sbb
xlat
sarl
int3
jle
hlt
gs
push
pushf
fstpt
ds
xor
or
in
test
outsl
pop
mov
push
iret
decb
mov
push
mov
mov
pop
push
out
aaa
cwtl
out
push
mov
mov
aaa
push
daa
popa
rorb
int
sbb
outsl
fiadds
push
pop
push
mov
pop
jb
jo
cmc
jp
cltd
jae
pop
int
in
js
cmp
dec
dec
pusha
jl
mov
or
xchg
inc
xchg
xchg
or
ss
je
sbb
jne
fs
aam
adc
pop
push
outsl
sbb
inc
xlat
outsb
cmp
xor
in
shl
push
imul
loopne
outsb
shl
or
or
add
jl
movsb
cs
and
call
test
push
notb
mov
pop
pop
jle
outsl
xchg
js
push
enter
push
fsubrs
pop
inc
data16
push
in
cmpsb
loopne
inc
rsqrtps
cwtl
push
mov
call
in
je
dec
push
fisubrl
add
cmp
sub
aad
inc
cmp
mov
data16
xor
push
shll
test
cs
sbb
mov
xchg
je
std
mov
and
test
sti
push
sub
lcall
data16
repz
dec
sahf
mov
pop
mov
mov
rcrl
scas
pusha
int3
inc
lret
pusha
call
scas
pop
lret
cli
xorb
mov
mov
or
inc
push
push
ficompl
adc
pop
cli
inc
sub
fbstp
xlat
xchg
sti
dec
pop
out
push
std
sti
add
ficompl
pop
loop
lret
shrl
fmuls
inc
mov
enter
push
mov
bound
add
icebp
movsb
inc
xor
int
dec
inc
je
dec
testl
into
cmp
push
mov
rorb
js
push
cmp
dec
aam
and
scas
pusha
dec
dec
fsubrs
pop
aam
and
push
pop
into
and
test
and
dec
enter
movsb
push
xlat
imul
push
sub
inc
fnstcw
push
stos
sub
dec
and
adc
dec
inc
ror
movsb
enter
insb
in
lret
jle
into
pop
push
scas
jl
dec
pop
pop
inc
push
dec
sti
into
push
lcall
and
or
mov
dec
or
jmp
pop
add
push
jge
dec
push
pusha
sub
enter
and
dec
iret
lret
mov
jle
and
cs
mov
imul
push
sub
bound
and
popa
jg
jl
fcompl
jecxz
pusha
dec
enter
dec
mov
jle
ficompl
dec
fistps
sub
jl
pop
int
addr16
jne
mov
dec
cmp
test
push
rolb
or
push
pop
dec
push
jl
xchg
cmc
or
shll
imul
inc
outsl
test
sbb
inc
mov
cmp
and
jbe
pop
sbb
enter
inc
insb
aad
mov
push
and
mov
inc
pop
pop
into
sub
cmp
pop
jecxz
mov
fs
and
call
shrb
in
sbb
push
and
inc
movsb
pop
jae
pop
test
mov
cmc
loop
out
push
jg
lods
outsb
or
into
std
cmp
loopne
sbb
push
imul
fmulp
xor
pop
and
mov
mov
in
or
lock
aad
add
cmp
in
roll
nop
push
adc
addr16
push
mov
sbb
in
and
jg
std
jecxz
and
testl
call
test
addr16
cmp
movsb
and
dec
sub
test
addr16
jle
dec
pop
movsb
inc
jg
dec
inc
inc
test
addr16
jle
dec
dec
movsb
jb
jbe
js
test
lret
jle
inc
jg
push
adc
or
sbb
push
jg
dec
or
test
cmp
mov
inc
out
cmp
outsb
pusha
test
addr16
test
and
dec
push
jmp
popa
jb
popa
adc
outsl
in
data16
clc
outsb
cmp
leave
cld
clc
mulb
or
sahf
inc
ja
inc
mov
sarl
mov
movsb
fidivrl
dec
push
bound
cmp
ss
lods
push
scas
sahf
ja,pn
movsb
jle
dec
sub
and
mov
add
incl
push
jmp
sbbb
ds
fcompl
daa
cld
movsl
push
clc
cmp
or
lods
sbb
cs
pop
sub
cmp
mov
mov
pop
clc
lods
sbb
mov
ret
or
test
arpl
sahf
fstps
cs
fisttpl
cmp
js
bound
dec
mov
int
pop
emms
loope
xchg
or
pop
test
inc
xor
adc
test
cmpb
jb
pop
in
addr16
repz
in
dec
sbb
push
addr16
sbb
dec
pusha
movsb
je
loopne
push
lods
jecxz
and
dec
push
movsb
push
jg
dec
rolb
addr16
jle
enter
add
dec
je
inc
scas
cmc
outsb
mov
mov
sti
popf
sub
mov
aam
mov
dec
cltd
jnp
xchg
jno
push
and
adc
cmpsl
out
mov
data16
pop
fs
sbb
das
mov
mov
mov
testb
pop
cld
aas
add
mov
push
outsb
jb
push
out
push
push
decb
inc
sub
mov
or
dec
in
jb
push
dec
jbe
cld
jg
dec
jne
test
bound
dec
data16
push
out
outsb
jle
inc
jg
adc
jl
adc
jle
dec
jmp
sbb
dec
sbb
test
loopnew
add
in
or
dec
or
test
loopew
xor
jg
cmp
dec
cmp
ds
push
push
pop
adc
in
in
or
jb
js
leave
dec
test
int
test
lcall
call
lods
in
gs
sub
push
or
outsb
sbb
xor
call
jle
dec
jns
jp
ja
push
test
movsl
jle
dec
and
lahf
test
in
outsl
jg
jno
push
movsb
pop
jg
dec
test
or
dec
pop
stos
imul
into
dec
dec
pop
test
and
dec
or
jne
stc
mov
jae
push
movsl
jle
dec
stos
movsb
daa
jg
dec
or
js
loope
hlt
dec
jno
inc
jg
into
das
inc
imul
pusha
in
fimuls
fcomps
lods
xchg
jl
jp
ficoml
or
daa
addr16
out
es
ljmp
js
adc
cltd
dec
outsb
fs
cs
jbe
inc
lods
outsl
or
int
dec
mov
jp
outsl
scas
adc
jb
pop
dec
cmp
in
xor
adc
pusha
lods
outsb
and
sti
xlat
jl
jo
xchg
inc
in
cmp
mov
in
mov
loopne
call
and
pop
imul
jg
xor
stos
adc
in
mov
dec
inc
xchg
inc
dec
int
mov
aad
lahf
add
pop
test
imul
loop
outsb
or
shrb
cmc
cld
mov
and
movsb
test
insl
cmpsb
xchg
dec
mov
and
xchg
mov
jae
shlb
jg
pop
pop
call
call
jl
sbb
movsb
jmp
dec
adc
lods
sub
lods
jg
pusha
dec
push
es
ret
outsl
dec
xor
out
test
mov
push
push
jle
dec
lods
sub
and
outsb
jl
cmp
mov
jbe
mov
ja
adc
mov
sti
cmp
insb
add
xchg
sahf
arpl
xor
or
and
out
stos
clc
test
cmp
lcall
xchg
add
cmp
popf
enter
adc
cwtl
sub
leave
xor
int3
xor
lock
xchg
push
sbb
dec
adc
xor
xchg
fwait
pop
cmp
insb
iret
mov
pop
clc
insb
lds
lods
jns
js
loope
cmp
add
adc
mov
sub
dec
push
cmpsb
xchg
into
fisubrs
movsb
jne
add
mov
push
lods
sub
push
insb
mov
inc
dec
push
mov
divb
aaa
lcall
xlat
mov
stos
cmc
sub
cmp
jl
insb
inc
mov
xchg
stos
push
inc
insb
add
ret
sbb
in
cmpsb
adc
push
subb
dec
mov
out
inc
pop
push
cld
xchg
mov
mov
std
aam
imul
adc
repz
aad
mov
xchg
insb
popl
jmp
xchg
or
cmc
ljmp
lock
jecxz
cmp
cmp
fsubr
pop
test
mov
sub
xor
sahf
xchg
mov
setb
or
dec
ret
pushf
lret
es
cmpsb
sbb
repz
dec
mov
and
insb
or
into
mov
adc
jle
or
xor
hlt
fsubrl
insb
rorb
push
int
andl
scas
jecxz
xchg
dec
dec
adc
cwtl
lock
cmc
sbb
cmp
sarb
mov
push
dec
add
jge
insb
shrl
incl
scas
popf
bound
loopne
insb
iret
hlt
or
jb
test
jmp
xor
repz
push
sub
out
insb
or
into
dec
jmp
icebp
addl
aam
jb
ljmp
enter
cmp
test
mov
insb
ja
pop
aaa
in
inc
lods
insb
dec
shlb
cmpsb
push
stc
jmp
or
psrld
sub
movsb
jb
insb
inc
scas
jg
push
lret
ficomps
xchg
out
mov
imul
or
outsb
and
add
xchg
adc
int
or
pop
mov
pop
cld
dec
jl
orb
fmull
push
fidivrs
xlat
push
int
and
scas
pop
fsubl
in
shlb
popf
bound
pop
jmp
int
lret
xchg
xchg
dec
pop
sti
sarb
push
mov
dec
xor
push
dec
jbe
jge
loopne
sub
fsub
xlat
jg
divl
out
pop
xlat
push
push
and
cmp
ds
bound
popf
dec
pop
movsb
push
push
xlat
ficomps
shlb
sub
jae
ljmp
push
rcr
rcl
fcmovu
dec
fs
lret
cmpsb
add
mov
mov
jo
push
popf
adc
adc
mov
fcompl
nop
and
test
mov
sub
mov
stos
inc
mov
jg
cmpsl
int
jg
mov
jns
inc
addr16
outsl
pop
fcmovu
push
sahf
sti
sbb
jecxz
rol
fcom
inc
pop
test
in
adc
mov
add
cs
inc
mov
xor
jbe
pop
test
or
push
push
jp
cmp
xor
dec
push
inc
and
dec
push
inc
lds
push
call
jl
bound
xchg
outsb
inc
in
adc
sbb
or
or
xor
cmp
dec
movsb
cmp
and
es
sub
dec
movsb
push
jg
dec
inc
dec
test
addr16
jle
pusha
movsb
outsb
fs
jg
dec
add
or
jle
dec
xor
cmp
dec
cmp
test
sub
dec
push
movsb
push
jg
dec
pop
inc
test
addr16
jl
pop
dec
push
sub
pop
out
in
stos
cs
adc
addr16
sbb
movsb
push
jg
dec
add
test
addr16
or
movsb
push
jg
sbb
dec
bound
push
shr
addr16
dec
push
movsb
pop
jg
jl
jnp
je
mov
dec
jl
test
loope
call
cld
outsb
jg
dec
data16
call
jp
push
mov
addr16
jns
call
push
out
ja
je
bound
int
jno
xor
dec
jo
hlt
in
mov
jle
dec
sbb
add
add
or
and
loopne
outsl
and
and
jne
push
loope
push
jbe
in
jo
icebp
je
loopne
xchg
testl
popa
jns
push
in
mov
and
jl
cld
in
pop
loopne
jmp
cmpsb
adc
outsb
ljmp
in
mov
inc
in
cmp
bound
outsb
call
xor
dec
dec
jl
pop
dec
pop
dec
dec
inc
push
lods
pop
in
dec
popa
clc
fldenv
xlat
xlat
test
or
fmull
call
push
jg
push
dec
add
dec
pop
pop
loope
push
adc
push
pop
inc
cli
fisttps
pop
adc
ficoms
xchg
mov
push
lock
cli
push
les
xor
sbb
andl
arpl
outsl
mov
not
popf
lds
xchg
fmuls
inc
ficompl
inc
push
pop
imul
scas
jge
outsl
xor
xlat
xor
stos
jmp
test
addr16
jle
dec
mov
inc
jle
dec
push
movsb
lret
dec
lret
dec
test
addr16
jle
dec
dec
movsb
dec
jg
into
int3
movsl
xor
mov
cwtl
stos
icebp
push
push
xlat
mov
das
ss
fldenv
movsl
jecxz
dec
popf
leave
pop
push
js
aas
mov
pop
es
insl
cmpl
mov
loopne
pop
dec
repz
push
insb
and
mov
jne
pop
lods
jnp
xchg
sti
mov
outsb
push
scas
shll
or
jl
scas
and
popf
int
insl
sarb
js
pusha
pop
xlat
cmp
inc
stos
aaa
lea
mov
cmpsl
aad
int3
xor
mov
xchg
pop
push
stos
adc
mov
loopne
pop
mov
subl
push
inc
int
cmc
sahf
jl
pop
fisubrs
out
jle
fdiv
push
inc
push
or
outsl
js
and
enter
call
jbe
into
iret
std
and
dec
test
filds
mov
cmovle
jbe
idivl
dec
hlt
ljmp
aad
fbstp
lea
push
enter
push
ficompl
lock
pop
sub
out
jno
in
cmpsl
push
ljmp
xor
or
int3
iret
add
push
les
inc
scas
mov
pop
pop
jno
lret
dec
sbb
mov
es
sar
push
fsubrs
xor
test
xlat
jle
movsb
cmpsl
xorl
jge
and
xor
clc
cmp
inc
lcall
push
mov
jle
aaa
mov
push
pop
push
jb
into
sub
mov
pop
add
call
adc
lret
out
cmp
int3
repnz
sarb
jb
into
and
movsl
dec
imul
jns
push
and
cmpb
data16
call
inc
es
mov
sarl
or
fdivrs
es
xor
jns
adc
data16
movsl
stos
push
jecxz
push
in
sub
daa
in
adc
dec
aad
lret
out
dec
add
hlt
sbb
push
stc
in
int3
pop
outsl
jge
jb
je
ja
jbe
divb
jo
ljmp
call
ret
ja
call
jle
clc
jo
int
push
sub
dec
enter
rcrl
iret
jo
int
xchg
jl
lret
xchg
or
mov
js
dec
andb
aas
out
or
idiv
lds
bound
sbb
out
rorl
dec
add
out
stos
lods
and
mov
cltd
out
sub
mov
out
jmp
sub
mov
sbb
movsl
inc
data16
movsb
or
les
xchg
out
push
lods
mov
out
daa
out
aas
xlat
adc
imul
outsl
in
hlt
dec
inc
sbb
push
ja
imul
shl
mov
out
int
arpl
leave
sub
push
jno
jno
jle
icebp
popf
sub
pop
aad
adc
and
dec
je
add
cli
call
das
repnz
pop
sbb
push
push
jne
call
call
xlat
inc
fs
shrl
into
mov
inc
dec
fwait
test
out
faddl
mov
mov
fs
out
xor
fsubs
jge
test
and
addr16
push
mov
fsub
ret
out
sar
or
jle
loop
xorl
or
insl
xlat
and
pusha
out
in
pop
and
outsb
fs
and
pusha
imul
test
pop
ret
jmp
jmp
lret
lcall
push
fs
icebp
push
jmp
xor
sbb
pushf
icebp
iret
dec
in
inc
sbb
mov
repnz
jp
jns,pn
dec
cli
iret
sbb
push
push
popa
fs
pop
outsl
test
fs
ficompl
jp
or
dec
inc
pop
add
jbe
data16
sbb
push
lods
sub
in
enter
mov
jnp
lds
lahf
imul
loopne
adc
cltd
dec
shl
gs
mov
cmp
mov
data16
out
push
in
cmp
push
aam
xchg
out
icebp
lahf
fsub
dec
jo
in
mov
pushf
pop
lahf
mov
lret
jbe
xlat
mov
lret
scas
push
scas
mov
hlt
push
ja
cld
daa
popa
jmp
in
je
pop
mov
jo
cmpsl
notb
scas
push
test
cmc
imul
mov
mov
nop
or
adc
sbb
dec
in
gs
pop
insb
clc
add
bt
call
movsbl
bt
pushl
xor
movsbl
mov
xor
lahf
setne
mov
test
shr
sub
shl
shr
mov
call
inc
inc
push
inc
push
dec
xor
cs
insb
add
add
insb
insb
push
imul
outsl
arpl
pushf
cmp
pushf
lea
je
push
pushl
lea
jmp
add
inc
jb
popa
je
inc
imul
add
add
add
movl
lea
jmp
add
inc
gs
imul
into
jg
pop
fiaddl
or
sub
pop
loopne
mov
add
bswap
dec
out
fucomip
push
pop
pop
mov
fcmovb
add
lcall
push
ja
jne
arpl
arpl
pushf
lea
daa
int
lcall
cmp
inc
mov
rcrl
sub
mov
sbb
xor
add
je
jne
jae
jb
outsl
jae
add
imul
fs
gs
outsb
je
push
push
lea
jne
not
mov
shld
sub
cmp
pushf
neg
lea
stc
sub
bt
bt
pusha
test
pushl
popl
test
cmp
pushf
cmp
call
add
inc
insb
outsl
jae
dec
popa
outsb
fs
gs
xor
push
mov
jne
jb
es
mov
pop
pop
or
jns
xchg
rol
dec
gs
sbb
or
aad
xchg
push
jns
in
mov
and
xchg
push
iret
outsl
or
dec
push
mov
das
xchg
test
cld
scas
xchg
fwait
pop
pop
jge
jbe
sub
xchg
push
out
idiv
dec
js
push
fs
push
push
fldln2
pop
in
out
pop
or
fidivs
gs
or
insl
or
sub
adc
repz
pop
sub
jae
sbb
cmp
xchg
lds
dec
jae
arpl
imul
fiaddl
out
push
sbbb
mov
push
add
xor
fiaddl
dec
dec
sbb
dec
pandn
pop
push
pop
fsts
mov
mov
sub
roll
adc
test
imul
cmp
out
scas
jo
mov
dec
or
add
inc
adc
or
sbb
pop
enter
fisubl
mov
test
jnp
sti
cmp
and
mov
cmpb
das
push
ds
enter
jb
popa
je
push
outsl
jo
jo
outsb
jne
add
inc
gs
outsb
jne
push
popa
jb
inc
imul
outsb
jae
push
call
insb
push
or
push
hlt
cmpsb
push
and
aad
mov
cld
ja
and
testl
sbb
adc
ljmp
repnz
jge
std
dec
std
aam
push
std
push
std
and
mov
std
cmp
jne
div
push
dec
xor
cs
mov
xchg
and
loope
jnp
lds
inc
mov
xchg
sub
mov
xchg
sbb
outsb
icebp
and
dec
push
inc
push
push
pop
and
fldl
ja
int
shrb
lcall
leave
rcr
cmpsb
lods
std
jae
mov
xor
sbb
push
bound
push
fists
push
cmp
pop
xchg
bound
jo
fsubp
xchg
jmp
inc
leave
lods
fldenv
mov
pushf
sbb
sahf
xchg
sbb
push
jmp
insl
push
inc
push
inc
push
ficoms
pop
cs
add
pop
add
cmc
outsb
je
push
arpl
sbb
std
push
adc
mov
adc
adc
lock
jb
ret
jb
repnz
pushf
jne
ja
push
dec
xor
mov
imul
cmpsl
dec
mov
aaa
enter
insl
jbe
dec
push
pop
push
sub
push
pop
push
adc
arpl
scas
jo
stc
mov
stc
scas
leave
mov
mov
les
mov
pushf
pop
sbb
push
dec
push
stos
push
mov
loopne
mull
mov
jmp
aad
push
fldenv
test
imul
mov
test
andb
aaa
cwtl
lea
xor
dec
cwtl
ficoml
sbb
hlt
mov
jle
test
mov
gs
jbe
enter
jle
imul
daa
cmp
push
and
push
lea
bound
dec
mov
ss
adc
icebp
dec
stc
inc
leave
test
mov
mov
jbe
pop
test
add
adc
lock
ljmp
sub
pop
in
adc
push
leave
sub
mov
test
into
mov
test
cmpb
xchg
push
jbe
fcoml
push
cmp
push
in
call
loop
sub
push
xor
xor
lock
jae
repz
jne
ja
push
xor
jecxz
dec
mov
mov
loop
push
icebp
push
pop
push
pop
push
mov
lret
jae
jns
dec
sub
jne
js
leave
and
mov
je
push
push
mov
push
xchg
push
jl
jae
fxch
lods
flds
mov
repz
inc
test
cwtl
push
xchg
in
sti
xchg
inc
test
lods
pushf
mov
sbb
leave
test
xor
adc
jge
bound
enter
xor
lods
adc
xor
in
shl
hlt
shlb
cmp
mov
data16
stc
ret
leave
fnstcw
xor
out
divl
sbb
sbb
out
lock
jg
push
cmpsl
push
mov
cld
div
mov
push
or
adc
pop
mov
mov
imul
push
push
push
es
mov
bound
jg
aad
fsubrs
sub
test
fcmovne
scas
fnstenv
test
out
dec
mov
test
cwtl
sbb
ja
pop
sbb
cmp
push
adc
fs
jge
pop
xor
inc
sbb
mov
and
stc
hlt
int3
mov
mov
xchg
lods
adc
popa
ja
stc
ret
fnstcw
test
pusha
negl
fnstcw
test
jmp
push
sub
pop
push
add
inc
sub
icebp
stos
push
xor
loopne
dec
cmpsl
pop
mov
push
xchg
jecxz
movsb
cmpsl
pop
mov
pop
adc
imul
and
push
pop
push
and
push
lea
repz
loop
sub
push
sbb
cmpsl
push
mov
add
jge
sahf
pop
sub
sub
push
cmp
inc
xchg
sub
ljmp
andb
cmc
hlt
push
clc
push
inc
push
push
push
mov
pop
sbb
mov
mov
xchg
mull
push
pop
xchg
es
add
mov
push
bnd
mov
test
sbb
push
jp
rclb
cmp
xor
in
jo
mov
mov
xor
loop
dec
leave
pop
fldenv
pop
lahf
in
jae
stc
pop
dec
sub
push
or
dec
push
dec
sbb
lock
sbb
jge
push
lret
xor
mov
std
jl
lret
aaa
es
dec
adcl
jmp
fmul
scas
fnstenv
or
push
inc
sbb
enter
je
pop
repz
jb
repnz
jge
out
jne
call
mov
mov
or
cld
cmpsl
pop
mov
jl
adc
icebp
int3
mov
aas
insl
xchg
lods
cwtl
jmp
ret
fnstcw
test
out
lock
dec
jle
and
push
sbb
fs
incb
insl
and
test
xchg
sbb
repnz
dec
push
dec
push
stos
push
mov
loopne
mull
mov
jmp
aad
push
fldenv
test
xor
push
imul
les
push
and
adc
jp
hlt
dec
jae
inc
and
sub
in
bound
mov
test
cmpb
push
cwtl
xchg
adc
notb
push
inc
push
fstl
push
or
ljmp
sub
pop
in
adc
push
leave
sub
cmp
sbb
leave
daa
fnstcw
test
jns
dec
mov
mov
mov
xchg
orb
push
jnp
rcll
sub
pop
popf
bound
dec
mov
xor
test
dec
leave
pop
fnstenv
mov
loop
icebp
mov
pop
out
pop
adc
cmp
ss
addr16
mov
sub
push
mov
sbb
test
sub
sub
lret
leave
fcompp
daa
test
xchg
pushf
jl
jae
flds
cwtl
xchg
adc
jno
jb
inc
push
scas
push
mov
inc
push
dec
sbb
cmp
push
pop
adc
jo
jae
push
push
xor
cmp
xchg
adc
push
push
repnz
pop
push
cs
mov
mov
bound
std
mov
cmp
mov
inc
stc
ret
leave
fnstcw
test
out
jge
mov
push
es
push
or
js
push
push
jg
xor
dec
out
hlt
test
xchg
or
ja
push
inc
sbb
push
sbb
loope
div
jae
repz
jb
repnz
adc
es
mov
jg
aad
fcomp
and
xor
push
adc
jno
push
push
sbb
push
xchg
inc
in
jg
push
cmp
push
in
call
loop
sub
or
stc
inc
leave
pop
fldenv
mov
pushf
stc
jb
mov
pushf
xchg
cwtl
adc
and
cmp
push
push
adc
jge
call
je
push
sub
and
push
pushf
bound
js
loop
sub
lahf
in
xchg
cmpsl
jnp
outsb
aam
stos
mov
popl
xchg
push
pop
sbb
and
jecxz
pop
mov
jge
mov
pusha
lods
lods
icebp
mov
sbb
leave
test
xor
adc
lock
bound
push
fists
push
cmp
pop
xchg
bound
jo
fsubp
xchg
cmc
ljmp
or
lock
inc
repz
jb
repnz
adc
imul
std
in
cmpsl
dec
mov
mov
sbb
sub
je
mov
test
lods
adc
fs
repnz
ror
fldcw
mov
jp
rolb
cltd
into
inc
iret
push
daa
ja
jns
inc
sbb
lock
jae
repz
jne
icebp
dec
push
inc
xor
adc
jo
cmpsl
inc
mov
mov
sbb
lock
push
lret
sbb
daa
adc
push
adcb
lock
dec
cs
es
push
std
adc
repz
push
push
xor
add
test
fwait
and
jge
push
int
rcrb
cmp
push
lcall
push
repz
insertq
xor
sbb
scas
call
aas
pop
push
push
push
mov
or
hlt
std
daa
pop
xorps
jae
repz
jge
jne
divl
icebp
mov
pop
mov
jno
dec
and
xor
push
dec
push
dec
push
stos
push
mov
loopne
pop
inc
push
push
push
push
adc
jae
jae
repz
stc
mov
sti
movsb
push
jg
sbb
lods
leave
addr16
mov
cmp
jb
in
cli
push
or
fnstsw
mov
test
ds
cmp
ja
out
jbe
cmpsl
dec
das
or
pop
jg
dec
push
repz
out
xchg
push
rcrl
sbb
jg
inc
push
cmc
dec
or
add
imul
cmpsl
inc
mov
or
xchg
test
scas
jle
dec
out
inc
jg
dec
sbb
push
enter
and
imul
insb
insl
daa
lret
inc
push
into
daa
dec
push
adc
xchg
loop
sub
xchg
das
adc
movsb
fwait
jg
dec
rorb
jmp
cmpsb
popl
adc
jno
push
pop
and
mov
adc
cmp
lods
adc
jl
mov
jle
dec
imul
les
fisubrl
out
dec
push
inc
sbb
and
loope
dec
sub
push
fisubl
cmp
loope
in
ja
mov
clc
test
addr16
sbb
jg
dec
arpl
sbb
sbb
adc
push
in
call
push
rorb
mov
push
fnstcw
test
imul
push
dec
push
jg
dec
pop
mov
jle
aad
aad
scas
jne
js
mov
push
dec
lahf
jnp
push
dec
push
cmp
jg
inc
xor
pop
inc
fsts
add
scas
jle
dec
in
push
sbb
push
leave
dec
push
cmc
dec
mov
xchg
outsl
jbe
adc
fists
inc
cmp
idivb
movsl
sbb
sbb
adc
push
mov
or
data16
dec
aas
cwtl
test
sarl
dec
out
jae
dec
sub
add
push
sub
rep
pop
and
test
sub
ds
push
lods
gs
negl
push
test
loope
je
pop
or
push
jg
aad
or
movsb
cmpb
test
adc
ja
dec
push
inc
push
test
push
aad
dec
adc
imul
inc
mov
mov
stc
test
addr16
adc
movsb
sub
dec
pusha
int
rcrb
cmp
push
lcall
sarl
movl
xchg
sbb
jb
and
in
jg
dec
push
jecxz
pop
addr16
dec
push
in
pop
or
jle
aad
aad
scas
push
jns
aas
fiaddl
loope
xor
ss
leave
xor
jl
inc
test
fidivs
jg
dec
xchg
jae
lods
or
icebp
outsb
inc
dec
mov
jo
push
push
xor
xchg
lock
leave
fcoml
push
dec
jg
jae
jae
repz
repnz
mov
repnz
rorb
cltd
jg
dec
xor
out
std
lods
dec
out
mov
in
dec
xor
jle
test
push
mov
dec
sub
aas
adc
push
sbb
lock
frstor
or
push
jg
jl
testb
test
addr16
fmuls
lods
xchg
jmp
inc
leave
scas
fldcw
out
inc
pushw
dec
adc
lock
inc
sbb
sbb
adc
and
in
jg
dec
pop
mov
adc
jle
dec
xchg
movsb
popa
jae
repz
repnz
std
ja
push
shlb
inc
imul
dec
inc
test
je
das
outsl
hlt
xchg
push
or
stos
test
loopnew
pop
dec
mov
push
out
xchg
push
les
lea
jns
push
dec
push
xor
bound
insl
mov
fildll
or
jle
int
dec
fisttpll
sub
jb
inc
addr16
iret
clc
repnz
cmpsl
push
mov
test
sbb
sub
push
dec
bound
daa
pop
xor
ss
mov
stc
mov
fs
rorl
sahf
jg
dec
xlat
xor
in
jbe
dec
addr16
sbb
add
adc
loop
icebp
jle
xor
mov
jge
sbb
add
sbb
arpl
icebp
jbe
lds
push
dec
mov
outsb
jae
lret
jg
dec
cmpb
add
jb
outsl
inc
repz
jb
decb
das
push
in
outsb
inc
movl
sbb
and
and
in
jg
dec
pop
mov
adc
jle
dec
mov
jb
xor
out
jbe
je
push
shll
xor
xor
sbb
call
dec
addr16
add
loope
dec
jg
dec
sbb
test
out
xchg
push
aad
fcomps
and
push
in
jg
sub
add
jae
repz
stc
fsubrl
cmp
in
push
and
and
push
jno
shlb
inc
dec
mov
push
int3
push
movsl
push
sub
push
xchg
lret
adc
iret
movsb
sub
iret
jge
jbe
cmpsl
pop
mov
or
mov
jne
dec
and
aam
xor
push
mov
jae
daa
pop
andps
jge
mov
adc
jb
push
cli
and
in
jg
jl
std
dec
enter
pusha
cmp
xor
insl
push
or
hlt
add
ja
jle
daa
pop
adc
cmpsl
inc
scas
vpcmov
outsb
iret
outsb
out
jno
cmpsl
jl
cmp
inc
mov
or
and
les
xchg
adc
rep
stc
sbb
jle
xchg
mov
or
push
jne
dec
dec
add
push
orb
add
bound
cmpsl
jns
mov
jg
sub
xor
jge
addr16
xor
das
popl
pushf
not
push
cmp
pop
clc
jbe
and
aad
scas
enter
cltd
nop
adc
addr16
sub
jmp
pop
sbb
stos
jb
xor
loope
repnz
enter
inc
int3
dec
jle
sub
repz
jb
repnz
mov
adc
dec
iret
imul
jge
push
std
cmp
out
and
pop
inc
push
sbb
jmp
mov
int3
sub
xor
cmc
jae
repz
das
ja
cmpsb
xchg
imul
je
mov
jp
ret
inc
jmp
int3
or
repnz
lcall
aaa
pop
inc
mov
insl
lea
sbb
in
ss
loop
cmp
ja
sbb
adc
xor
loop
loop
and
cvtpi2ps
mov
arpl
dec
xor
dec
mov
dec
pop
stos
nop
mov
pop
jb
stc
ss
sahf
aad
add
push
inc
xor
xlat
scas
cmp
cwtl
add
call
push
mov
xor
pop
adc
jp
jb
inc
sub
mov
sbb
sub
jne
popa
hlt
cld
push
add
loopne
dec
call
push
xchg
lret
jae
stc
and
pop
lahf
sbb
notb
int
outsl
daa
inc
jno
dec
pop
loop
daa
cmpsl
das
push
pop
adc
loopw
adc
scas
sbb
adc
mov
icebp
inc
aad
or
xchg
lret
ds
pop
pop
btr
sub
push
adc
arpl
cmpsb
inc
scas
aaa
mov
movsb
and
mov
in
fwait
test
je
stc
jge
fists
stc
outsw
or
push
pop
bound
lock
jae
imul
dec
add
dec
inc
sub
scas
push
push
scas
psubb
fistl
and
test
push
notb
out
jno
add
dec
cmp
jo
lret
push
inc
bound
popa
mov
dec
repz
stc
daa
iret
in
jb
stc
push
int3
sbb
xchg
mov
js
jae
call
push
pop
jl
inc
enter
loope
ja
das
sub
sbb
je
and
stos
jmp
mov
aaa
scas
mov
andl
shr
sub
jb
mov
xor
inc
xorb
pop
je
pop
dec
sbb
cmpsl
ja
xor
popa
jl
inc
popa
imul
push
push
xor
sti
enter
inc
sub
mov
into
push
aaa
mov
inc
jo
xchg
bound
aam
dec
jns
hlt
pop
inc
jp
movsl
cmpsl
jecxz
dec
pop
sbb
stc
lods
sub
popa
mov
test
inc
xor
imul
dec
add
incl
jns
and
sbb
pop
pop
jo
mov
add
sahf
test
pop
adc
nop
int3
outsb
loope
jae
ret
cmpsl
lods
cmp
mov
je
and
lock
inc
test
das
mov
cmp
jl
jae
xchg
aas
dec
inc
fs
or
mov
addr16
adc
movsb
sbb
lock
jne
std
push
push
sub
js
jnp
pop
jle
sbb
iret
cmpsb
test
negl
jbe
jbe
shlb
push
insl
test
mov
dec
cld
cltd
je
jae
and
mov
nop
push
loop
loope
das
je
add
nop
jbe
and
inc
repnz
outsb
js
xchg
pop
out
add
std
push
test
stc
call
mov
add
inc
pop
stc
ja
test
pushf
adc
push
pop
repnz
jge
mov
cli
fs
sbb
jbe
call
pop
push
jge
and
out
icebp
dec
ret
push
daa
lret
repnz
mov
xchg
dec
push
test
fdivl
add
jne
repnz
clc
fdivl
pop
jo
jge
jne
std
xor
stos
lcall
iret
in
je
xor
pop
stos
inc
out
add
dec
sub
mov
stos
pushf
mov
jle
jmp
aaa
jns
out
jns
and
mov
inc
jl
mov
add
xor
push
jp
xlat
ja
add
push
push
cld
jle
hlt
push
jae
aam
push
fdivrl
mov
stc
add
mov
sbbb
cwtl
mov
push
out
punpckldq
jle
cmp
outsl
bnd
popa
jle
mov
jge
push
mov
xchg
psadbw
rcll
in
push
inc
cmp
fsubrs
hlt
cmp
test
movsb
adc
xor
shl
lods
lret
pop
jge
daa
int3
push
sbb
stc
and
movsl
xor
paddsw
lret
inc
jle
mov
popa
test
jp
jb
repnz
ljmp
mov
cwtl
mov
jmp
and
pusha
gs
jg
inc
push
push
xor
lock
cli
mov
inc
cld
pop
dec
stc
mov
push
push
ret
ss
mov
push
rcrb
mov
shlb
cmp
nop
xchg
sbb
jge
pop
inc
shr
and
int3
sub
cmovl
sub
into
xor
push
in
ljmp
stos
fcomps
push
xor
hlt
jno
int
ja
ja
mov
push
ss
repz
out
jbe
mov
xor
sahf
dec
sub
popf
jne
mul
push
cli
xor
cmp
pop
mov
scas
cmp
leave
ret
addr16
std
xor
xor
or
jne
testl
lods
cmpsl
popa
sub
addr16
mov
and
mov
packuswb
adc
movsl
ret
std
xor
fwait
nop
sbb
sub
pop
cmc
cs
pop
addb
jl
mov
or
sti
call
xchg
lds
lret
push
bound
push
xchg
std
push
dec
jae
lret
es
and
cmp
and
xor
push
adc
jge
test
xor
std
or
sbb
enter
push
mov
or
add
jbe
imul
aaa
insl
push
aam
pusha
hlt
dec
cmpsl
push
cmp
pop
cmp
stos
xor
mov
rorb
arpl
icebp
adc
lret
and
mov
data16
push
js
std
push
inc
push
movsl
scas
je
pop
mov
push
in
cltd
mov
fdivl
inc
call
lcall
inc
ret
sar
or
lcall
int
or
pop
sub
add
ds
cli
icebp
dec
cmpsl
sarl
push
orl
jmp
gs
scas
sarb
sbb
jg
repz
cmpsl
dec
sub
daa
stc
test
out
js
movsl
cli
shrb
nop
adc
loope
loopw
sub
jle
daa
jb
jno
loop
adc
faddl
fucomi
pop
mov
pop
loopne
sub
jp
test
pushf
mov
push
inc
push
lret
inc
cmc
adc
jmp
add
inc
add
sub
std
adc
lods
scas
inc
mov
sbb
lcall
je
lds
dec
add
addr16
sti
jle
xor
jle
ja
aas
in
mov
xchg
out
ja
push
add
lret
inc
mov
arpl
cltd
adc
sti
call
push
adc
fsubp
jle
push
outsl
shlb
mov
fcompl
push
sbb
xchg
mov
jle
xchg
lahf
fidivrs
push
inc
jnp
out
jo
dec
repnz
dec
cmpsl
imul
push
pop
fstpl
sti
jne
dec
cmp
ss
mov
xchg
cmc
jae
jae
and
test
mov
pop
sbb
adc
je
or
sbbb
jle
test
int3
jb
nop
push
adc
jb
jns
rclb
dec
mov
cmp
adc
out
inc
testl
or
addr16
push
sbb
in
jnp
sbb
and
push
dec
subb
loopne
cmc
iret
pop
data16
cli
mov
xor
jns
dec
fidivs
std
leave
mov
je
pushf
sbbl
jge
adc
ljmp
fcomi
and
mov
mov
jg,pt
xor
lock
icebp
push
inc
push
pop
push
xchg
bound
lret
rorl
inc
adc
xor
push
sbb
out
adc
jb
and
repnz
lods
scas
sub
cli
outsb
pop
jns
sub
into
call
adc
mov
ds
outsb
int3
push
call
outsl
inc
int3
hlt
ret
adc
scas
cmpsl
xor
fbstp
push
mov
sbb
jp
test
sbb
add
lods
xchg
scas
pusha
jbe
push
and
lret
mov
adc
out
imulb
loop
xor
adc
push
push
mov
push
std
sbb
icebp
pushf
or
pop
cmc
push
cmp
or
mov
push
sti
lcall
pop
or
jmp
fsubp
push
popl
pop
mov
jp
jmp
rclb
or
aaa
andb
test
inc
inc
dec
fstpt
inc
jle
popa
pop
cmp
lods
aaa
sbb
out
jb
xor
jno
ss
and
xor
mov
jb
pop
sbb
and
push
xchg
lcall
les
sub
enter
or
push
jnp
ret
or
aaa
or
jno
enter
js
cli
ss
sahf
arpl
adc
repz
stc
pop
jmp
fwait
outsb
push
xor
stc
scas
fdivrl
cwtl
or
int3
in
dec
repz
push
xor
popf
scas
sbb
daa
int
push
ret
arpl
inc
xor
push
mov
jne
jo
lret
cs
dec
lcall
push
sub
ss
xchg
jne
jae
push
inc
test
inc
and
mov
push
lds
pop
xchg
cmp
popa
jb
push
adc
sbb
mov
inc
push
cmp
outsb
cmp
cmp
xor
sub
ss
jl
icebp
sbb
scas
inc
scas
xor
incb
sbb
push
push
push
shr
aas
or
pusha
mov
push
or
test
inc
lea
push
stos
pop
dec
and
enter
push
sub
cmpsb
call
jmp
sub
popa
push
test
inc
popa
in
xchg
jbe
test
dec
jp
jae
call
or
rdtsc
out
and
add
push
in
inc
cmc
dec
push
imul
lods
sub
mov
test
adc
ds
adc
inc
and
dec
mov
in
jle
xor
inc
dec
cmpsb
frstor
lds
jbe
nop
xchg
jp
js
sub
test
push
inc
cli
inc
pushf
aas
mov
hlt
enter
sbb
cld
jp
jle
movsl
call
fbld
cmp
push
stos
inc
add
loopne
push
jbe
ret
add
shl
lods
push
repnz
cmp
call
jo
je
add
mov
js
push
sbb
push
pop
and
pusha
aad
stos
jae
xor
inc
jne
jne
out
cmp
aas
inc
push
jle
insl
mov
data16
adc
mov
hlt
repnz
inc
add
xor
inc
xor
xor
dec
mov
push
jae
jmp
hlt
out
add
gs
cmp
ret
call
sub
enter
sbb
in
push
adc
in
icebp
xchg
jmp
jo
pushf
sub
dec
sub
bound
in
inc
inc
mov
pop
movsb
cmp
or
das
xchg
imulb
or
je
daa
sub
insl
or
and
jmp
or
dec
out
jecxz
push
jle
jo
out
popa
add
or
sub
cwtl
xor
mull
add
sub
dec
jne
mov
sub
cmp
in
adc
popa
push
shrb
push
pop
es
mov
pop
in
add
imul
outsb
and
scas
bswap
cmp
jge
lock
fcmovb
xor
jns
adc
sbb
dec
test
repz
mov
mov
lds
ja
idivl
and
loop
cmpsl
pushf
stc
dec
or
jbe
mul
adc
pop
push
pop
repnz
test
inc
sbb
jno
sub
aaa
xor
jne
scas
test
faddl
sbb
mov
outsb
jl
jns
push
aas
push
add
xlat
sub
mov
inc
addr16
inc
pop
mov
mov
inc
scas
jg
and
repz
lds
int3
ds
jle
test
inc
adc
mov
push
sub
inc
popa
and
pop
add
sub
ja
idiv
jbe
aad
inc
lods
cvtps2pi
mov
aaa
push
addr16
dec
xor
cmpsb
sbb
push
ja
sbb
vpsllq
jo
lock
jne
jae
enter
test
fsubrs
push
inc
jne
std
sub
jl
push
pop
jmp
je
push
daa
ret
jae
repz
ljmp
inc
cli
jecxz
fs
inc
subb
int
test
jo
mov
sbb
mov
push
or
lods
test
adc
jp
or
cli
std
fcoms
insb
inc
sbb
or
adc
scas
jns
aas
lea
and
das
xor
push
and
lods
xchg
stos
lret
push
cltd
adc
push
clc
push
scas
movntps
push
jp
loope
fidivrs
and
mov
ja
icebp
int3
lock
sbb
sbb
daa
inc
cmp
stc
mov
dec
jae
push
test
decl
cs
sti
jmp
int
adc
dec
ss
movsl
cwtl
pop
cmp
cmpsb
faddl
push
jo
lods
outsb
push
sbb
cwtl
mov
sub
xor
xchg
mov
movsl
test
add
push
fstps
repz
mov
outsb
popa
inc
cmc
and
cmc
movsb
dec
ret
lock
adc
or
adc
and
bound
add
fiadds
insb
fmull
out
adc
or
sbb
ja
or
jae
dec
pop
adc
int3
mov
inc
sub
or
std
xchg
jns
movsb
stc
movsb
push
jne
push
inc
mov
inc
cmp
sbb
es
sbb
jb
jmp
iret
inc
sbb
cmpsb
cmc
add
std
push
sbb
push
cmc
jp
aad
test
inc
push
push
push
aad
call
push
and
dec
or
insb
xor
sub
push
push
mov
push
mov
repz
mov
xor
ja
mov
sub
inc
scas
fdivs
insb
std
popf
jp
addr16
hlt
adc
out
mulb
dec
xor
dec
lahf
cs
mov
pop
mov
inc
cli
fimuls
sub
bound
test
jne
repz
push
lret
mov
inc
xor
mov
adc
push
sub
sbb
jge
popa
mov
mov
je
push
pop
sbb
xor
arpl
sbb
and
ret
jmp
outsb
and
xchg
aaa
cmp
ret
or
push
imul
mov
ret
push
js
enter
sbb
call
addr16
lret
and
int
or
outsb
jae
cmpsb
out
inc
ret
xor
das
mov
mov
adc
lods
xchg
jb
jg
decb
push
push
pop
lret
cmpsb
sub
push
out
pop
cli
test
cmp
ss
cmp
je
push
cmp
pop
pusha
jmp
ja
jne
xor
cmp
push
push
insl
push
fmulp
push
adc
push
inc
push
mov
pushf
push
inc
push
nop
scas
adc
daa
in
shrl
mov
inc
xchg
adc
lods
sbb
jo
fsubrl
neg
call
shlb
stc
adc
sbb
mov
push
das
adc
adc
wrmsr
inc
fldl
imul
adcl
lret
aad
xor
inc
outsb
or
fbld
pop
outsb
push
mull
sbb
sub
xchg
outsb
mov
adc
stc
sti
into
les
xor
mov
jne
lods
mov
outsb
dec
jnp
pop
rcll
addr16
sbb
xor
lds
mov
nop
sti
das
sbb
aaa
int
jmp
fists
push
sbb
jne
imull
sbbb
jmp
repz
xor
ret
mov
sbb
push
test
je,pt
data16
stc
pop
cs
sbb
outsb
push
push
sbb
ss
std
arpl
fdivrs
subb
pop
push
jp
sub
mov
jp
out
hlt
dec
push
and
sbb
adc
and
inc
call
push
fwait
dec
data16
pop
popa
add
jp
out
inc
sub
or
dec
addr16
xor
jno
jle
daa
push
xchg
push
pop
dec
test
adcb
cwtl
les
sbb
push
or
shlb
jl
jmp
loop
daa
inc
cmp
and
add
cmpsb
imul
data16
push
adc
sub
xchg
es
jg
pushf
jae
pop
popa
stos
jae
dec
push
inc
dec
fisubrs
sub
enter
nop
ja
pop
cs
push
js
inc
jmp
lds
adc
push
addr16
mov
scas
inc
sbb
dec
stc
and
iret
mov
out
mov
rcr
mov
and
movsl
nopl
adc
addr16
repnz
enter
sbb
add
hlt
aad
pop
jb
aaa
push
push
xchg
jmp
in
sti
and
and
adc
daa
sbb
pop
and
jno
push
sbb
sbb
cmp
jb
adc
push
dec
lock
lds
pushf
jbe
jle
push
mov
popf
sub
shlb
loop
out
jo
mov
lock
cwtl
xor
sbb
imul
sub
pop
push
in
pop
call
sub
push
jb
out
inc
dec
push
xlat
push
pop
aad
dec
push
cs
jmp
je
les
mov
js
int3
xor
js
lds
jns
sbb
idiv
outsb
jle
xor
jp
jle
pop
jns
pusha
jl
or
jo
out
xor
pop
push
in
data16
lock
out
imulw
enter
xchg
repz
enter
shl
sarl
lret
lret
fsubr
pop
jae
adc
stc
aas
in
outsb
jb
das
stos
je
inc
pop
jle
hlt
imul
int3
stc
ja
scas
sbb
cmpsl
sub
imul
sub
push
jno
adc
pop
popf
cwtl
jbe
push
dec
sbb
pop
sub
jp
xchg
jmp
loop
xor
adc
inc
aam
nop
mov
sub
fwait
jo
push
mov
push
in
inc
adc
mov
pusha
and
mov
fwait
push
add
pop
dec
jne
or
xor
insl
repz
dec
add
dec
movsl
comiss
jge
cmp
scas
jp
push
outsl
cmp
sbb
mov
push
call
in
ja
mov
dec
sbb
test
mov
adc
cli
leave
outsb
jl
cmp
jb
pushf
or
das
push
pop
enter
lea
pop
pop
jno
dec
jg
mov
inc
push
pop
and
jns
mov
pop
and
in
jne
ljmp
sub
adc
cs
jae
mov
cs
push
lret
rep
stc
mov
call
ret
incb
filds
sbb
xchg
addr16
sbb
arpl
ret
xchg
cvtdq2ps
adc
popa
pop
xor
add
add
or
imulb
pop
xor
push
mov
add
or
xchg
jne
leave
lret
mov
es
lods
out
push
xor
insl
testb
aad
jb
lds
mov
outsb
jb
dec
outsb
adc
sub
sbb
stc
subb
cmp
cmpsl
es
mov
cs
sub
sub
mov
push
aas
lds
jl
sbb
xor
add
nop
pusha
std
call
lahf
jb
lock
dec
scas
imul
pusha
push
adc
es
add
leave
jge
cmp
or
lds
call
xchg
mov
sti
outsb
mov
xchg
call
insl
xchg
daa
in
push
cmpsb
cs
xor
jp
stos
cmc
sbb
leave
dec
adc
or
adc
jle
jnp
push
jmp
push
outsl
push
repz
movsl
pop
push
xchg
sbb
jno
test
pop
cmp
jecxz
cld
test
in
push
dec
pinsrw
adc
jno
jmp
daa
pop
sbb
pop
repz
jmp
repz
add
insb
jns
adc
fcoml
ret
inc
or
loope
mov
mov
ror
scas
pop
ja
std
jo
or
pop
insb
shll
sbb
mov
popa
dec
hlt
pop
adc
mov
pop
data16
test
sub
pop
roll
mov
jbe
iret
je
mov
imul
adc
push
dec
inc
jno
jg
or
addr16
inc
jp
fcmovne
dec
mov
add
push
ror
int3
lock
mov
cmp
jae
jns
dec
cmpsl
repz
mov
out
and
cmp
icebp
jb
ss
sahf
popa
inc
jge
adc
and
and
dec
std
inc
mov
jo
xor
or
popa
roll
jae
outsl
dec
sub
xchg
icebp
jbe
aad
test
push
mov
xchg
xor
in
pop
in
and
das
adc
call
sbbb
sbb
mov
test
adc
int3
inc
cmp
test
dec
push
cmp
sub
pop
inc
jl
push
test
in
mov
cmp
ljmp
scas
mov
push
mov
sti
jne
push
xor
pop
or
or
hlt
sbb
decl
cmpsl
decb
mov
sbb
or
in
inc
enter
push
sub
das
in
xchg
xor
inc
scas
mov
adc
pop
pushf
pop
lcall
pshufw
mul
lods
test
cmp
pushf
xor
jae
pop
int3
shrl
loopne
popa
stc
inc
or
fistl
test
mov
xor
mov
pop
cmp
test
daa
and
shr
mov
std
xchg
call
adc
sbb
adc
cmp
mov
bound
push
cmp
stc
test
add
cwtl
jmp
jecxz
sub
imull
add
jb
sahf
je
into
lcall
push
mov
enter
lods
in
mov
jge
cmpsl
fidivrl
xor
push
scas
popa
in
test
sbb
pop
out
push
scas
xor
cmc
int3
cmp
dec
xchg
sti
das
adc
enter
test
call
pop
fadds
or
mov
mov
sti
jmp
lret
inc
pop
rsqrtps
xor
stos
xor
push
sbbb
push
roll
sbb
pop
lret
call
mov
pop
sbb
mov
imul
sbb
push
pop
clc
xor
pushf
lret
cltd
int3
pop
jge
pop
inc
das
daa
scas
or
cmp
jae
in
mov
inc
inc
dec
fsubr
pop
test
jmp
into
adc
pop
sbbw
das
inc
scas
adc
mov
xor
mov
jo
ja
std
loope
pop
pop
incb
loope
fs
dec
dec
mov
pushl
out
lods
in
in
jmp
xor
push
shr
roll
call
testb
dec
repnz
std
mov
push
mov
dec
mov
in
andl
sbb
or
cs
fs
xor
sbb
and
test
scas
push
xchg
jmp
test
sbb
adc
xchg
add
nop
inc
and
int
fstp
jmp
mov
xchg
gs
movsl
xchg
and
stc
das
inc
std
add
loope
scas
jp
pop
xchg
push
and
jae
cmp
hlt
sbb
mov
or
ss
arpl
movsb
repnz
adcl
repnz
add
test
jns
int3
jne
jge
mov
ret
inc
sub
fsubrs
add
push
or
ds
sub
bound
lds
or
adc
mov
adc
push
repnz
enter
inc
sub
jnp
daa
repz
mov
and
inc
daa
push
addr16
in
imul
cmpsl
cmc
idivl
pop
fisttpl
lock
jae
fsubrs
jp
fwait
call
cwtl
push
xchg
test
pusha
out
jns
xchg
dec
in
jmp
ja
bnd
mov
in
lcall
rorb
je
ja
push
pop
int
cmovne
add
dec
jo
int3
push
call
out
jae
cmp
rep
inc
stos
dec
lods
mov
loop
enter
faddl
inc
fstp
jbe
jo
stc
loop
inc
negb
addr16
push
and
dec
out
jecxz
leave
scas
push
int
push
cwtl
inc
pushf
jo
std
in
cld
jge
enter
test
xchg
adc
std
pushw
in
xor
stos
mov
pop
inc
sbb
jae
mov
dec
mov
insw
cltd
insl
xchg
and
lods
sbb
push
mov
daa
pusha
ret
pop
cmpsb
cmp
ss
das
fisttpl
xor
shrl
fadds
dec
sub
addr16
je
stc
ret
leave
test
aaa
pop
mov
scas
xor
xor
fdivl
stos
cmp
xchg
mov
fs
xchg
aas
inc
add
jns
dec
cmp
out
js
imul
lcall
dec
and
inc
sbb
mov
outsb
mov
xchg
adc
ss
addr16
pop
lds
dec
adcl
adc
adc
aaa
inc
dec
mov
faddl
insl
mov
pop
ss
cmpsb
add
push
mov
setno
jb
push
fsubs
dec
xchg
push
jl
arpl
mov
pop
fwait
std
outsl
inc
call
loop
and
sub
add
call
lret
and
je
pcmpgtd
inc
dec
popa
popf
mov
xchg
or
mov
inc
lahf
outsl
dec
outsl
ja
shrl
xchg
out
inc
hlt
adc
loope
xor
xchg
fbstp
aam
data16
adc
bound
mov
xor
test
cltd
outsb
inc
imul
cmp
cmpb
and
dec
mov
cmpb
adc
or
daa
push
or
addr16
fdivs
shr
xchg
nop
sub
mul
xchg
daa
sbbl
pop
rorl
xor
jb
cmp
add
fsubrl
cwtl
mov
inc
pop
out
enter
pop
xor
push
inc
push
mov
outsl
out
sub
movsb
jb
jg
push
xorl
adc
mov
sbb
bound
pusha
daa
dec
push
insb
loope
scas
push
rcrb
jne
inc
scas
push
cs
movsb
enter
call
bnd
xor
js
aad
scas
adc
roll
lret
sub
mov
ss
stc
jnp
and
test
jns
xor
in
lahf
cmp
jae
inc
sbb
out
adc
ficomps
inc
scas
add
repnz
jmp
mov
call
jmp
out
daa
xchg
inc
dec
push
pop
sbb
cs
pusha
dec
test
sbb
call
popf
xor
hlt
push
pop
into
enter
pop
cld
outsb
das
lds
sub
inc
sbb
fwait
ret
push
addr16
push
pop
jmp
push
pop
mov
and
out
pop
adc
outsl
je
outsl
repnz
pusha
andl
in
cwtl
mov
hlt
cld
mov
dec
xor
jns
jne
out
int
pop
loope
adc
mov
push
daa
imul
nop
fsubs
pushf
add
stc
in
aas
dec
ljmp
ja
xchg
sbb
jne
push
pusha
loop
addr16
popa
test
mov
frstor
imul
xchg
in
push
iret
icebp
push
pop
fs
cmpsb
inc
dec
shlb
lods
gs
pop
sbb
inc
fdivp
dec
loope
aad
or
adc
in
jle
pop
dec
mov
fs
lds
push
aaa
insl
push
xchg
sbb
ja
pop
lods
fdivl
pushf
sub
or
js
jb
cli
sub
or
adc
rorl
push
add
jb
push
mov
pop
dec
mov
push
sbb
outsb
loopew
pop
push
mov
mov
les
push
cli
in
inc
xchg
pushf
enter
jmp
mov
add
add
push
jl
inc
test
out
cmp
adc
xchg
xchg
pop
arpl
mov
add
add
pop
pop
xchg
inc
cmpsb
das
and
js
je
call
cli
icebp
push
jo
pop
lret
xlat
call
in
loopne
in
jp
lds
pop
mov
sbb
adc
lock
dec
sbb
enter
dec
test
in
and
loopne
jle
ficoml
mov
adc
push
rcrl
stc
push
cmp
repnz
data16
inc
xor
jne
push
inc
and
sbb
incb
jns
ret
jl
sub
pushf
inc
sbb
cli
aad
inc
ret
pop
cmp
adc
jo
jne
cmp
cmp
adc
cld
push
cli
sub
popa
popf
pusha
notl
aad
cmc
sub
cmc
adc
sbb
xor
fadds
enter
jle
call
jmp
pop
int3
xor
adc
pop
repz
mov
push
mov
jne
icebp
loopne
push
dec
sub
cmp
xchg
xor
popa
jne
int
pop
mov
push
lock
cli
jae
pusha
lret
inc
cmp
push
adc
mov
jge
mov
sbb
jmp
xor
scas
inc
xchg
sbb
call
call
jmp
cmp
push
inc
jmp
out
call
ret
stos
adc
imul
addr16
lds
dec
inc
cwtl
and
shlb
pusha
dec
jbe
int
adc
aaa
mov
adc
lock
pop
leave
pushf
pop
iret
imul
mov
ja
decb
arpl
cmpsb
insl
lds
jmp
sar
popa
pop
xor
push
jp
icebp
arpl
shlb
insl
mov
adc
int
stos
lcall
sub
jae
enter
jmp
rcll
pop
cmpsb
dec
nop
das
imul
lret
and
jg
jmp
jns
jp
adc
cltd
sbb
std
imul
cmpsl
scas
mov
scas
jb
jp
inc
cmpsl
mov
xor
lods
popa
mov
lahf
mov
js
imul
scas
jg
aaa
addl
sbb
in
lret
jbe
push
das
lret
mov
testl
jecxz
mov
jo
push
mov
xor
add
arpl
dec
frstor
cmp
gs
cmpsb
cs
push
jl
mov
int3
jb
push
das
pop
mov
push
in
adc
lods
test
xor
inc
xchg
adc
jns
jp
test
cmp
scas
jle
cmp
stc
mov
xchg
push
jl
aam
dec
mov
xor
cmpb
xor
shrl
sbb
mov
dec
pusha
jns
push
sar
jns
scas
mov
ss
sbb
or
adc
inc
js
xor
mov
mov
push
sbb
sub
aaa
push
push
fisttps
dec
mov
hlt
mov
mov
sub
jmp
iret
faddl
pop
cwtl
ficompl
cmp
sbb
dec
movsl
ret
mov
lea
cmp
mulb
xor
inc
pop
adc
popf
xchg
std
addr16
add
popa
jmp
sub
sbb
icebp
sti
orb
ret
mov
inc
lret
mov
dec
test
cmp
mov
push
out
shl
fstpl
mov
push
adc
dec
loope
mov
jnp
jg
pop
add
bound
arpl
xor
inc
mov
xchg
scas
cmp
pop
test
push
rdpmc
mov
iret
repz
test
cmpsb
cmp
outsb
std
xchg
fidivrl
stc
bound
lds
outsb
sbb
add
dec
nop
jle
fs
cmc
outsb
inc
das
push
pop
lea
push
lods
sub
imul
inc
subb
pop
sub
cs
sub
sbb
ret
mov
pop
jns
pop
loop
loop
sub
push
loop
out
das
pop
mov
popf
jmp
inc
push
das
push
push
inc
push
das
sub
add
pop
sahf
lret
inc
cmp
push
es
popa
mov
int3
jno
mov
jne
ret
cwtl
ds
movsl
mov
inc
jmp
jae
inc
push
and
push
push
bound
bound
dec
push
sbb
dec
in
sub
imul
sub
sbb
ret
jg
jecxz
cs
push
cmp
cltd
ss
test
imul
js
dec
stos
mov
jae
rcll
test
outsb
push
fstpt
into
mov
lds
aad
pushl
xchg
out
sbb
mov
mov
xor
test
stc
outsl
into
dec
cmp
in
je
sti
fs
xor
mov
shr
dec
cmp
adc
inc
pop
into
cs
cmp
and
push
xor
mov
or
dec
fistps
sub
mov
add
rol
xchg
or
das
adc
divl
ficompl
inc
sbb
pcmpeqd
push
adc
repz
inc
cli
push
pop
jno
pop
mov
add
jp
inc
or
adc
mov
sahf
test
lods
adc
jne
stos
mov
jne
scas
es
int
movhlps
add
lods
add
aas
pop
mov
and
adc
sbb
cmp
push
call
cmp
mov
add
sbb
jp
lds
popf
test
sub
mov
jl
xor
fs
or
aaa
repnz
sub
aas
aas
repz
inc
mov
adc
sbb
sbb
cli
xor
inc
mov
call
loope
scas
xor
movups
add
push
into
aad
das
adc
push
sub
cli
fsubrl
sbb
jle
push
loop
loop
and
xor
jl
xor
add
bound
inc
mov
js
cmpsb
outsb
sbb
popa
add
loope
jb
scas
and
aaa
pop
add
loope
dec
xor
sub
jge
mov
test
call
push
arpl
xor
push
inc
adc
shrw
iret
cmp
aaa
pushf
adc
xchg
imul
push
pop
test
mov
cwtl
imul
sub
push
push
stos
mov
sqrtps
xchg
scas
sbb
xor
dec
imul
js
xchg
cld
pushf
and
xor
cmc
lahf
enter
loop
mov
in
dec
shlb
cli
cmove
lds
adc
daa
push
push
cs
enter
push
sbb
cmp
mov
push
mov
mov
jl
shlb
sbb
mov
sub
jmp
adc
jae
fsts
clc
adc
xchg
outsb
adc
fistpll
das
outsl
sub
scas
or
inc
jae
incb
or
adc
fcoms
or
mov
bound
cli
outsb
dec
mov
ja
adc
pop
cmp
in
jmp
xchg
push
xor
loope
jo
sbb
pop
dec
push
push
adc
cwtl
cs
lds
inc
jne
pop
lods
in
pusha
ljmp
imul
imul
sub
daa
ds
dec
aam
push
push
push
cmp
push
aas
mov
inc
test
popl
sbb
lods
pushf
data16
mov
mov
xchg
pop
xor
daa
sbb
cmp
in
std
push
jmp
push
cmp
xor
lcall
daa
cmc
add
push
aad
cmc
addr16
inc
adc
dec
lods
jle,pn
daa
xor
adc
lahf
popl
pop
lock
adc
pop
adc
scas
lods
mov
xchg
add
das
inc
movb
push
xor
mov
add
popa
imul
imul
xor
cmp
idivb
mov
cmp
jecxz
and
maxps
outsb
sub
jl
pop
push
jnp
call
movsb
jo
inc
pop
std
xchg
cli
imul
clc
leave
jbe
push
pop
xor
add
mov
ss
dec
out
vmread
cs
popa
pop
or
daa
aaa
cwtl
add
dec
mov
mov
inc
cmp
call
add
das
mov
fadds
repz
sbb
xor
jl
scas
xor
xor
jle
je
mov
mov
in
xor
aad
cs
mov
subb
jb
test
hlt
sbb
fs
jb
mov
pop
stos
xchg
ds
in
xor
vandpd
sub
inc
sub
pop
pop
dec
jae
sbb
cs
pop
xchg
jno
lahf
enter
pop
scas
push
sub
or
push
int
scas
daa
sarb
and
cmc
ja
xchg
push
jp
dec
cmpsl
sarl
push
sub
lods
sbb
xchg
and
cld
jno
cmpsl
inc
adc
stc
sub
sahf
adc
aad
xor
pop
mov
adc
pop
add
arpl
jb
adc
mov
sub
cmp
dec
cmc
lock
cli
jmp
dec
int3
pop
pop
rorl
push
pusha
push
cmc
inc
repnz
je
push
mov
jno
imul
inc
enter
insl
int3
out
jb
push
sub
mov
adc
mov
in
daa
std
cmpsl
push
sub
ss
imul
adc
fstpt
xor
or
addr16
std
je
and
cvttps2pi
add
lret
mov
pop
or
push
out
out
je
cmp
jae
push
cwtl
sub
push
pushf
adc
jge
jb
jge
push
push
sahf
mov
mov
lds
int3
jb
std
addr16
push
add
ljmp
rclb
mov
outsb
aaa
push
repz
hlt
cmp
divb
dec
mov
or
popf
adc
loop
fbstp
pop
aad
adc
or
push
cmc
push
jg
cli
cmc
cmp
lret
lods
push
inc
pop
add
imul
out
and
je
xchg
xor
fs
pushl
cmp
insl
push
lods
das
in
adc
data16
pop
notl
jmp
cs
pop
daa
dec
add
out
repz
ss
lds
dec
rorb
or
jne
cld
stos
jbe
push
insl
scas
lods
stos
loope
pop
inc
pusha
pushf
sbb
jnp
push
mov
cmp
inc
notb
mov
xchg
dec
push
lock
jbe
mov
push
jmp
je
mov
movb
push
call
sbb
inc
adc
cmpsb
jmp
pop
pop
fs
aas
push
enter
push
stc
jb
sahf
adc
sarb
push
aaa
mov
sub
push
aaa
das
pop
inc
out
sub
pop
push
stos
mov
or
fldenv
xor
stc
movsb
test
pushf
hlt
jno
push
or
rcll
aad
das
jo
pop
inc
addr16
xor
stc
dec
scas
sub
mov
add
popf
cmpsl
out
sbb
inc
mov
sub
cmp
shl
push
es
jae
inc
cmp
jae
pop
or
jge
jns
push
sub
addr16
aas
sbb
mov
popa
pop
sbb
stc
jl
or
push
call
push
jae
imul
js
jl
test
and
daa
loopne
cld
mov
cmp
mov
cmc
push
lahf
mov
adc
icebp
xor
xchg
jb
sbb
das
jbe
lock
leave
jns
push
sub
sahf
sbb
jns
pop
mov
adc
cmp
pusha
daa
jne
dec
enter
lods
movsl
cmc
sub
stos
sbb
inc
xor
ds
mov
push
lret
inc
push
ja
pop
out
lcall
jle
mov
std
or
imul
ret
jbe
fdivs
pop
xchg
push
adc
arpl
push
fstpt
push
shlb
add
aaa
jmp
adc
lret
stc
test
push
jp
cmp
into
cmp
cmpsl
adc
mov
push
pusha
test
inc
sub
call
push
sarb
dec
pop
xor
jle
sbb
movsl
jmp
jb
call
scas
and
cmp
pop
xor
mov
cmp
stos
mov
ds
mov
cmpsl
cmp
cpuid
fcoms
push
jp
cmp
outsl
adc
cmp
fsubl
mov
aaa
mov
pop
in
mov
cmp
movsb
inc
add
push
into
push
xor
ficoml
push
adc
dec
pusha
jmp
les
insl
addr16
xor
sub
or
in
popa
sahf
int3
insl
movsl
adcb
xor
mov
testb
out
enter
pop
lret
jbe
insl
and
xor
lea
test
push
xor
cli
sub
push
xchg
adc
xor
das
popa
mov
add
push
insb
xlat
mov
lods
ds
adc
push
sbb
daa
scas
subl
and
jne
add
or
out
push
insl
or
mov
mov
adc
and
inc
leave
push
pop
xor
stc
or
sbb
mov
and
scas
or
out
xor
lds
sbb
sbb
fwait
add
jmp
mov
sbb
test
arpl
test
push
or
adc
mov
or
mov
inc
or
das
push
inc
adc
mov
fwait
outsl
jp
jbe
push
inc
and
lret
pop
xor
mov
fmull
pop
nop
sbb
enter
push
sbb
inc
lret
in
sub
ljmp
sub
xor
popf
sbb
loop
shll
adc
xor
push
sub
cmc
int
cmp
xlat
and
lods
das
xor
push
insl
test
xor
mov
push
jmp
mov
push
das
mov
repz
jl
sub
push
and
cli
daa
adc
pop
cwtl
jb
mov
lret
inc
aas
or
cld
sbb
pushf
sub
inc
loope
xor
inc
hlt
shlb
lret
push
mov
inc
js
push
int3
sbb
outsb
aas
mov
popf
outsl
fs
xor
into
cmpsb
fcoml
pop
pushf
and
add
inc
jmp
or
dec
or
cmp
push
ss
jp
lock
inc
and
out
aad
push
pcmpgtb
jecxz
push
les
xor
inc
enter
cmp
jbe
ficoms
hlt
icebp
push
jb
pop
cmc
dec
scas
jmp
inc
or
xchg
dec
add
dec
push
or
mov
push
out
push
xor
cmp
dec
sbb
push
adc
scas
adc
sbb
inc
loope
test
jl
imul
int3
xor
jp
dec
push
stc
popa
int3
push
ficompl
push
cmp
loope
das
pop
pusha
scas
xor
sub
jne
loope
fists
mov
lret
xchg
jne
stc
xor
cmp
xor
jmp
das
aas
icebp
push
cs
xor
xchg
adc
xchg
cmp
stc
mov
es
xor
aad
imul
jo
das
mov
or
cwtl
outsl
inc
jae
dec
add
push
es
lods
call
push
nop
call
inc
fnstcw
test
sub
sbb
call
data16
movsl
pop
cmc
xor
adc
mov
mov
in
add
mov
dec
jge
push
xor
movsl
mov
add
jae
cwtl
add
jle
es
mov
or
inc
dec
daa
jo
rcl
sub
sbb
cwtl
popa
mov
pop
daa
jae
sub
sbb
or
jg
inc
dec
jne
rorb
call
out
movaps
sub
cmp
xor
movsl
dec
pop
sbb
ret
jmp
jns
lods
fsubl
pushf
aaa
pop
xorb
adc
jae
repz
jp
cmp
lcall
jge
out
inc
dec
sbb
aaa
dec
bound
lds
dec
repnz
inc
and
aas
mov
or
push
lock
inc
pop
or
addb
mov
xchg
cmp
mov
popf
xor
pusha
push
sti
mov
pop
jbe
cmp
mov
popa
sbb
cmp
inc
push
or
or
xchg
adc
pop
sub
jno
or
dec
das
cmp
pop
cmp
or
je
in
daa
jae
pop
dec
pop
cs
dec
mov
cmp
cmpsb
jo
pop
push
adc
loope
aad
pop
xchg
sbb
jg
fiaddl
push
mov
pop
jle
dec
mov
rcr
sub
dec
jb
std
lret
aad
pusha
pop
mov
lds
push
jg
arpl
outsb
cli
ja
out
or
xchg
jg
lods
shll
jae
inc
std
push
sub
sub
incl
lods
cmpsl
aad
push
cmp
cmp
add
sbb
dec
cmpsb
scas
sbb
pop
push
xor
cmp
repz
incb
bound
inc
or
push
push
pop
lret
pop
call
add
push
fsubl
jo
lds
test
pop
inc
les
dec
push
ja
aam
shrb
stos
icebp
pushf
ja
jnp
adc
sbb
js
ja
out
or
cmp
loopne
ja
aas
inc
dec
sub
movups
sbb
into
xadd
inc
jle
cmpb
push
loope
outsb
adc
adc
test
packsswb
stc
xor
pop
push
pushf
jbe
jp
std
sbb
nop
mov
mov
test
push
jbe
rorl
or
push
sbb
call
loope
aad
pop
call
xor
push
or
lret
sbb
rolb
mov
aaa
jmp
testb
daa
cmpsl
jae
pop
mov
in
cli
movsl
jmp
repz
paddusb
mov
insl
inc
sub
push
aaa
xor
lods
push
jp
aaa
cmpsl
cmc
sysexit
loop
push
scas
adc
jge
cli
test
jb
push
lret
push
cmpsl
dec
sbb
cmp
xor
dec
lret
daa
sbb
xor
ss
xor
jl
xor
scas
pushf
ja
xchg
or
je
xor
inc
jae
adc
mov
dec
adc
push
cmpsb
push
jae
xchg
enter
sub
cmp
xor
jle
int3
xchg
xor
sub
enter
jge
jmp
int
addr16
push
sub
adc
jb
jmp
jbe
shlb
lds
faddl
jb
cmp
push
push
pop
dec
sub
imul
icebp
sbb
test
add
xchg
js
xchg
pcmpeqw
fcomps
pop
jmp
mov
jo
jno
xor
pusha
sbb
xor
pop
gs
xchg
pop
fsts
test
jne
inc
jb
stc
aam
cmp
add
outsl
jns
js
mov
xor
adc
lods
out
movsl
dec
cmp
stc
mov
push
stc
lea
pop
xchg
inc
call
push
andl
xchg
scas
sbb
es
lret
lds
shll
nop
mov
cmc
aas
mov
cmp
xchg
adc
jmp
mov
cmp
lock
enter
or
jo
jge
cmpsb
cmp
jb
repnz
add
push
xchg
adc
jl
outsl
fidivl
sub
aaa
xor
push
pusha
fsubrl
adc
outsb
lds
inc
inc
sub
and
lods
pusha
in
imull
jbe
int
cmc
push
aad
test
mov
in
mov
call
int
movhps
addr16
int
xor
pop
mov
dec
jo
inc
sub
cmpsb
sbb
sbb
addr16
lock
xor
aas
sbb
inc
jae
and
movsl
es
add
cmp
sbb
sbb
mov
jb
scas
push
shlb
shlb
cmp
or
imul
fistpl
lahf
mov
stc
enter
inc
jmp
push
adc
lret
ficoms
lods
sbb
lods
sub
push
push
outsb
stc
push
inc
out
movd
pop
loope
das
adc
pop
das
push
push
mov
fldt
ja
mov
das
sub
xor
sub
inc
loope
pushf
add
and
out
adc
cmc
lods
pushf
inc
inc
push
cmc
or
fcompl
lahf
sti
cmovne
add
lret
loop
and
adc
adc
jle
push
lock
push
faddl
mov
testb
sbb
pop
push
xchg
xor
jmp
pop
pop
cmp
aas
pop
cmp
clc
mov
sub
jae
and
sarb
mov
sub
sbb
lret
lret
push
pushf
sbb
jl
jb
pop
imul
and
daa
jae
or
repz
inc
ja
push
fsubl
jle
aaa
adc
lock
lock
repz
pushf
jno
xchg
cmp
and
push
and
push
xchg
adc
push
jge
and
cmp
call
adc
cli
pop
add
inc
xchg
adc
pop
shlb
es
push
test
sbb
mov
jmp
jne
addr16
add
mov
dec
addb
addr16
or
adc
pop
push
push
adc
es
in
lcall
addr16
sub
vandps
lret
dec
call
sbb
cmp
fs
inc
add
pop
lret
jne
push
das
ret
cmc
jmp
enter
xor
aaa
push
int
dec
fidivs
lods
and
dec
dec
inc
out
adc
mov
xchg
sbb
or
inc
mov
xor
jmp
jge
int
sbb
inc
xor
mov
ja
lds
arpl
insl
jecxz
nop
lds
daa
decb
jno
adc
incb
imul
add
ret
ds
push
cmp
adc
mov
dec
push
push
test
or
lret
xor
int3
or
xor
fisttpll
sbb
inc
adc
cmp
out
dec
stc
adc
into
jb
repnz
mov
ss
push
xor
xchg
xor
lods
stos
push
outsb
xor
fwait
in
push
xorb
xchg
mov
test
cs
lret
je
adc
push
andb
jecxz
dec
sub
sub
add
adc
or
jno
and
imul
or
in
xor
dec
mov
sbb
xchg
gs
xor
cmpsb
scas
dec
cmpl
push
in
cld
scas
inc
jb
xor
out
lds
imul
jmp
mov
sti
sti
call
outsl
movsl
call
jp,pt
dec
add
jae
dec
test
mov
mov
mov
jb
jge
mov
push
iret
add
out
cmp
fnstcw
pop
jle
je
sbb
jg
aam
lock
jns
push
aas
roll
aad
and
xchg
movsb
aaa
popa
std
call
add
inc
mov
sub
pop
xchg
pop
mov
in
xchg
daa
in
pusha
jp
sub
xor
aas
push
shl
arpl
test
aad
and
xor
lods
xchg
je
inc
add
call
addr16
addr16
scas
push
xor
pop
xchg
pop
dec
fwait
pop
push
loope
sbb
fcompl
sbb
fdivrs
dec
mov
mov
mov
add
and
add
or
fnstcw
into
inc
aas
push
ss
add
inc
mov
push
pop
out
repnz
enter
and
leave
jge
push
pop
ss
aas
loope
enter
inc
loope
sbb
mov
nop
pop
iret
push
out
das
adc
es
movsb
cmpb
lds
enter
xchg
jb
shrl
cmp
call
xor
cmp
mov
jne
test
xchg
aas
movsl
cmp
or
mov
pop
inc
cltd
pop
push
call
movhps
rolb
push
xor
out
repz
and
push
jns
cmpsb
or
adc
and
jg
push
repz
enter
jmp
inc
hlt
call
shr
push
inc
fs
sub
leave
fidivrs
insb
outsb
lock
stc
in
cs
mov
add
aas
loop
push
scas
aad
sahf
cwtl
je
scas
insl
movsb
xchg
jns
jbe
xchg
data16
inc
adc
xor
xchg
push
xchg
adc
xor
ficoms
dec
decb
and
sbb
xchg
in
clc
jp
jp
insb
call
int
push
or
outsb
inc
scas
mov
dec
mov
js,pn
push
jg
xchg
stos
cmc
and
test
pop
ret
sub
and
aaa
cmp
dec
jbe
pusha
shll
imul
xchg
inc
sbb
mov
adc
pusha
bnd
out
cmpsl
sub
cmp
cmp
stc
imul
test
inc
stc
out
pushf
pusha
fnstenv
cmp
jno
jle
xor
push
lds
loop
incb
leave
daa
stos
adc
cmp
xor
pop
cli
popa
pushf
xor
xor
jae
mov
pop
testb
or
sar
jmp
jmp
sahf
mov
or
jae
ja
jg
adc
addr16
mov
sbb
mov
adc
cmp
push
mov
std
xor
inc
je
ss
pushf
jl
sbb
adc
mov
xchg
mov
and
hlt
dec
js
jb
push
mov
arpl
cmp
mov
mov
sbb
xchg
xchg
inc
or
mov
jg
push
mov
aaa
pop
xor
pop
xchg
jns
notb
add
or
pusha
mov
call
pop
mov
adc
cmp
aas
dec
adc
push
pop
ret
mov
pop
std
aad
adc
push
clc
dec
js
aad
jne
cltd
mov
adc
push
sti
aad
or
add
out
lret
cmpxchg
mov
jnp
sbb
in
or
lock
repz
mov
push
popf
push
repz
stos
push
pushf
cmp
mov
jne
pop
movlps
inc
push
mov
push
xchg
loope
std
xor
inc
push
stos
incl
push
enter
sbb
inc
cmp
shrl
jp
scas
cmp
jb
stc
xchg
scas
add
cmp
and
adc
outsl
fidivrl
adc
push
push
daa
out
outsb
push
pop
scas
sbb
pop
mov
or
aas
push
add
cmp
lahf
daa
cmp
imul
shr
jnp
mulb
add
andl
cmp
inc
aas
lret
out
cmp
sbb
xor
xor
jne
inc
pop
inc
loope
jae
sub
out
repz
mov
xor
jb
test
repnz
jne
sahf
push
push
cmp
ret
or
das
cli
je
ret
and
imull
adc
push
jb
cmp
repnz
xor
adc
movsb
inc
stc
and
push
jo
call
adc
adc
idivl
pusha
jl
xchg
sub
push
cmpsb
sbb
and
movsb
jge
je
push
jg
pop
mov
inc
dec
push
outsb
add
sub
push
jl
push
cmp
call
adc
hlt
daa
xor
lods
cmp
dec
loop
cmpsl
add
cmp
fwait
call
popa
sarb
sub
xor
ja
test
outsl
scas
mul
jno
cmp
jns
jbe
sub
and
nop
jmp
jae
mov
push
cmc
and
loope
jg
call
int
fs
jp
cmp
cmp
lret
test
adc
aam
mov
dec
mov
xor
ja
adc
adc
imul
push
cmp
or
or
sub
shll
test
adc
out
pushf
jns
jbe
mov
adc
jo,pn
test
daa
pop
mov
ss
popl
mov
addr16
pop
xchg
rorb
pop
add
je
leave
aas
pop
hlt
cmp
dec
dec
ss
in
ja
int3
push
jno
xor
mov
push
jp
das
por
jns
jb
lods
std
cmp
dec
xor
fs
pop
daa
aam
das
rcr
or
cmc
daa
or
jo
fs
jecxz
outsl
push
cmp
inc
dec
sub
pop
dec
loope
mulb
sbb
ds
jp
jle
cmp
andb
repz
mov
inc
jo
push
mov
sbb
mov
and
pop
int3
jl
push
inc
inc
mov
xchg
add
jb
arpl
push
dec
push
and
loop
daa
or
push
pop
daa
imul
dec
shlb
pusha
adc
push
cmp
bound
mov
movsl
int
xchg
jne
fbstp
push
and
add
push
dec
cld
sbb
push
sbb
int3
or
jnp
andb
addr16
lret
cmp
inc
dec
dec
adc
cs
xchg
out
pop
sbb
sbb
push
sbb
adc
int
aaa
dec
dec
xchg
sbb
or
bound
xor
jle
dec
in
jp
outsl
xor
or
sbb
gs
cmp
sbb
cs
adc
mov
add
sbb
jge
outsb
daa
mov
imul
pop
inc
stc
ret
fwait
testl
in
sbb
cs
mov
adc
pop
adc
xor
out
testl
sbb
inc
jns
pop
loop
loop
sub
sub
jge
mov
sbb
push
inc
jb
cmp
jl
mov
sub
push
jae
pushf
xor
test
mov
clc
inc
pop
jge
aad
cmp
xchg
push
dec
aaa
sub
mov
push
popa
sbb
sbb
push
scas
push
push
cmp
and
scas
adc
sub
push
ljmp
jmp
jle
cmp
push
jbe
les
ret
dec
cmc
outsl
dec
mov
or
inc
pop
xor
and
dec
pop
das
xor
xchg
lods
push
clc
jbe
jge
pop
xor
scas
xor
cmp
cs
or
outsb
xor
sbb
cmpsb
cs
adc
flds
rcl
sti
push
ds
adc
call
inc
or
pop
aaa
push
sub
subb
lock
adc
cmp
cli
cs
sbb
das
pushf
jbe
pop
or
iret
jb
mov
sbb
push
xor
lret
rcrl
aaa
pop
ret
lock
mov
jg
mov
enter
mov
ja
push
call
popa
inc
xorps
insl
popa
gs
sub
lds
dec
push
sbb
push
mov
sbb
shr
jns
pop
or
jge
dec
dec
cmc
repnz
inc
sbb
pop
push
jbe
xor
push
inc
ja
push
cmc
sbb
fmull
fstpt
je
cmp
std
pop
sbb
mov
cmpsl
jle
hlt
push
dec
dec
xor
cmpsl
mov
dec
push
inc
test
dec
and
sbb
and
cld
call
outsb
xchg
cmp
jle
add
neg
sbb
jmp
je
add
jne
xor
mov
sub
jno
je
sbb
push
popl
lahf
inc
jnp
inc
sbb
push
sbb
jo
daa
push
pusha
xchg
test
xor
jp
je
sub
jb
sub
cmc
push
mov
inc
jle
pop
es
pop
jae
adc
cli
push
mov
push
jmp
sub
jge
and
jns
or
cmp
cmp
andb
sbb
vmread
push
pop
loope
sbb
test
addr16
xor
addr16
fwait
jg
lahf
rcrb
sub
jp
mov
in
cli
cs
push
or
or
addr16
xor
test
int
stos
gs
verw
adc
outsb
int
call
aad
adc
pushf
test
or
adc
pop
sub
add
pusha
dec
mov
test
mov
mov
adc
addr16
jb
xchg
jmp
cmpsl
or
addr16
dec
stos
call
inc
sub
sbb
cli
out
int3
dec
adc
pop
jnp
or
popa
bound
aas
lds
adc
sbb
push
adc
jbe
pop
imul
sbb
lds
pop
push
pop
fbstp
xor
push
and
call
and
xor
dec
mov
outsl
leave
sbb
pushf
inc
jnp
call
movsb
daa
and
jb
sbb
push
mov
iret
jbe
shll
jmp
pop
int3
pop
sti
sti
jne
sub
ret
std
cmpsl
inc
jp
and
je
sbb
xor
mov
xor
sub
sub
lds
test
adc
daa
pusha
dec
lcall
add
icebp
cli
dec
outsb
jl
mov
ss
cs
pop
push
sub
xor
adc
lock
data16
insl
bound
loope
adc
jp
je
mov
adc
xor
cli
sub
daa
sub
cmc
inc
and
pushf
fsubrl
push
addr16
shrl
mov
cmp
cvtpi2ps
push
cmp
ja
adcl
add
adc
pusha
xor
mov
dec
bnd
jle
js
aaa
je
pop
divl
inc
xchg
and
sub
push
adc
es
cmp
ds
sub
subb
push
sbb
xchg
and
push
ja
int3
xor
xchg
or
or
punpckldq
aad
aam
mov
sub
dec
xor
ret
cmovl
or
sub
and
ja
sub
mov
inc
test
pop
lea
movsl
jns
int3
xchg
les
pop
lods
test
xchg
push
je
out
iret
sub
and
repz
insb
lahf
js
incb
dec
inc
jo
xor
jge
and
dec
adc
incl
add
aas
xor
add
dec
jbe
add
pop
adc
cmp
and
repz
cmp
xlat
mov
pop
call
dec
xor
xchg
test
and
out
or
imul
repnz
sbb
call
loope
cmp
jle
jmp
jge
inc
jne
xor
mov
xor
push
inc
jp
add
push
push
push
dec
loope
adc
aad
shll
push
loope
adc
mov
call
loope
xor
dec
sbb
cmp
pop
sub
pop
add
push
call
sub
sbb
mov
mov
lds
pop
stc
jle
push
loop
out
xor
jo
jb
scas
ja
jno
lock
push
popf
ret
icebp
mov
push
ja
sbb
cmp
mov
add
cmp
aas
cltd
mov
add
jle
enter
insl
sub
cs
subb
and
push
and
dec
cmp
add
and
xor
jge
icebp
add
hlt
sub
inc
jb
cs
sub
ret
and
sbb
add
push
cmp
inc
cmp
push
dec
xor
pop
xor
aad
cmovno
insl
idivl
adc
xlat
daa
arpl
imul
loope
push
hlt
sbb
adc
push
shlb
dec
cli
mov
pushf
sbb
inc
in
cmp
jae
aas
or
inc
shrl
pop
jp
inc
cmp
popa
ror
dec
or
add
or
add
outsb
sub
daa
test
jb
cld
fdiv
inc
std
jne
adc
jmp
cmp
dec
sub
jo
ja
ljmp
dec
pop
adc
mov
aaa
push
cmp
cmp
and
or
dec
push
sysenter
jecxz
ss
adc
mov
sbb
mov
or
adc
push
mov
push
out
cwtl
xor
and
push
test
dec
cld
and
push
iret
aad
call
test
sub
nop
out
push
and
das
cli
and
into
jne
psubd
push
bound
lods
dec
inc
arpl
cld
shll
push
scas
arpl
sub
cs
pop
js
push
stos
sbb
lret
imul
xchg
dec
push
test
and
dec
inc
stos
je
add
loop
les
adc
fcompl
movsb
jle
lods
xor
mov
sahf
and
inc
pop
out
xor
sahf
mov
or
popf
push
sbb
xor
out
loopne
dec
in
js
cli
shlb
std
sti
call
pop
rcrl
pop
aad
aas
gs
rorb
and
das
inc
xor
cs
cmp
or
int3
xor
js
dec
sbb
mov
jp
stc
adc
jl
sbb
gs
mov
inc
ss
fildll
adc
mov
jge
mov
scas
or
push
dec
add
in
addr16
sbb
fldt
sbb
jo
fcoml
jbe
pop
mov
dec
xchg
call
dec
dec
call
addr16
das
jge
push
movntq
jns
insb
lods
mov
or
sbb
push
lahf
nop
sbb
sbb
adc
popf
call
loop
and
jle
inc
dec
push
adc
inc
ds
cmp
ds
push
cs
and
pop
jmp
lods
adc
inc
cmp
or
out
cmp
or
pop
in
jbe
xchg
inc
stc
jmp
or
cmpb
inc
xchg
lock
jge
pop
dec
pop
aad
ss
inc
das
pop
pop
shrl
aam
sbb
sar
sub
pop
stos
push
push
stos
and
out
dec
mov
xor
popa
or
pop
test
out
cmovp
add
in
pop
cmpsl
xchg
cmovbe
mov
lret
xor
cmpsl
add
outsl
bnd
sahf
inc
cmp
pop
sbb
push
scas
lods
pushf
sub
lods
adc
aaa
and
pop
xor
mov
arpl
icebp
lret
ss
neg
cs
cmp
cmp
inc
pop
repnz
push
rcll
mov
movsl
sub
test
outsl
repnz
and
ret
and
jp
rclb
cmpsb
sbb
cmc
ja
inc
cmp
and
imul
out
aaa
out
inc
jae
jp
cmp
addr16
imul
jmp
je
mov
pop
call
adcb
mov
mov
in
das
pop
and
cmp
push
fwait
dec
in
mov
sbb
dec
sub
sub
faddl
jnp
pop
dec
in
rcrb
jne
push
push
int
call
and
movsl
push
adc
dec
movntq
rcrb
mov
add
jg
imul
aad
xor
push
mov
daa
sub
ret
hlt
aam
aas
repnz
jg
lea
out
ja
adc
sarb
jmp
xchg
pop
lret
adc
add
movsl
pop
jb
cmp
push
call
jmp
cmp
and
ja
addb
das
dec
push
or
sub
pop
and
loope
xor
cmp
addr16
pop
push
mov
cmc
jb
mov
adc
lret
adc
outsl
adc
adc
frstor
push
out
mull
es
leave
daa
sbb
xchg
add
jo
fnsave
cmp
adc
dec
push
out
dec
ja
push
mov
xor
push
dec
inc
aas
loop
loope
sbb
test
push
push
mov
xor
into
mov
fdivl
outsb
sub
dec
addr16
mov
and
mov
inc
push
ficoml
or
ja
push
jmp
lret
xor
pop
xor
lahf
mov
sub
int3
lock
inc
mov
adc
cmc
mov
inc
jp
pop
stc
cmpb
enter
cmp
clc
xor
sbb
push
loope
sbb
adc
push
test
pop
das
mov
js
and
fisubl
and
cmc
xor
aad
test
push
pop
cli
push
sbb
lods
test
xor
cmp
jnp
jge
daa
shlb
arpl
xchg
popa
imul
cli
inc
pop
dec
mov
in
stc
lock
sbb
dec
popf
outsb
inc
pop
daa
jle
add
aad
das
addr16
shrl
pop
dec
out
and
js
cli
add
pop
push
xchg
sbb
call
push
out
push
xchg
faddl
inc
loop
popa
mov
or
adc
dec
outsl
lds
dec
pop
leave
pop
pop
pop
xor
adc
push
or
cs
dec
int
call
push
gs
mov
xor
cmp
mulb
es
inc
dec
cmp
pusha
repz
lds
js
lock
mov
sbb
lods
jb
dec
mov
or
bsr
add
test
incl
aaa
daa
push
sbb
cmc
jge
std
sbb
sbb
imul
dec
adc
jbe
stos
inc
imul
xor
das
or
inc
ret
imul
mov
loope
cmp
adc
push
daa
add
adc
outsb
push
push
and
or
push
mov
data16
dec
fisubs
mov
sbb
imul
loop
loope
enter
pop
ret
jle
fs
mov
sub
cwtl
cmp
in
push
pop
ret
fsubr
cmp
movq
lret
cwtl
xor
lock
dec
mov
mov
push
outsb
mov
faddl
pop
popl
jl
dec
pop
js
jp
dec
jbe
jo
jb
dec
and
dec
xor
inc
adc
out
movsl
inc
mov
pop
pop
nop
stos
out
in
das
or
push
push
lret
aas
sbb
jl
ja
cli
js
inc
xchg
pop
adc
jo
add
inc
rcll
sub
cmp
xor
mov
inc
lret
cmp
add
call
xor
call
xor
int
adc
fcompl
movsl
mov
add
pop
adc
frstor
jbe
xor
lds
mov
call
movsb
pop
test
pop
add
cvttps2pi
sbb
jae
repz
addr16
sbb
mov
cmp
dec
jle
mov
jle
ss
lret
cmp
int
xor
mul
xchg
sbb
xchg
daa
mov
add
pop
push
and
call
pop
aad
sbb
xchg
lret
out
push
dec
pop
or
jo
mov
fildl
test
sbb
jge
or
add
ret
mov
push
int3
dec
dec
loop
dec
enter
mov
shrb
cli
cs
xor
scas
insl
push
xor
sbb
cmp
mov
pop
and
cmp
and
insb
call
and
imul
call
dec
popa
adc
push
outsl
xor
negb
push
pop
push
pop
aad
jns
pop
push
push
dec
pop
fldcw
test
es
and
sbb
popa
dec
das
sub
sbb
mov
inc
out
call
xor
es
sbb
sbb
sub
fmuls
sbb
and
add
push
or
shlb
inc
ficoms
jmp
cmp
cmp
fisubrs
add
daa
in
lahf
cmpsl
loope
arpl
ds
das
cmp
jne
pushf
push
jnp
call
push
xchg
popa
shlb
push
call
xor
push
fmull
std
das
xor
jb
dec
lret
xor
sti
pop
inc
std
add
neg
dec
pop
push
scas
je
mov
push
dec
jmp
sti
cmp
out
jb
std
mov
cmp
jg
ret
mov
jmp
mov
jle
loope
movaps
inc
dec
rclb
hlt
stc
test
cmpl
outsb
pusha
inc
daa
push
pop
add
pop
sbb
das
test
push
cmp
clc
mov
sbb
pop
cld
lcall
stos
lods
sbb
shld
pop
jb
pushf
inc
sub
jl
and
xchg
pop
mov
repz
sahf
smsw
jg
test
jae
incb
fsubl
fldt
dec
decl
addr16
and
out
outsl
add
jo
pop
push
dec
adc
jp
or
jge
mov
jmp
dec
addr16
aad
dec
test
pop
sbb
lods
inc
in
inc
cmpsl
inc
cmp
pop
adc
outsb
push
push
xor
push
adc
imul
xor
sub
and
outsb
or
cmp
cmp
ds
cmp
call
pusha
sbbb
and
daa
cmp
sub
add
ret
nop
cmp
andb
and
daa
pop
cmpsl
inc
pop
aad
jne
cld
enter
stc
inc
jle
das
bound
shrl
fs
daa
push
push
gs
nop
addr16
mov
pop
ja
dec
xor
enter
or
jb
decb
push
add
xchg
call
mov
cli
cmc
outsb
adc
xchg
dec
push
xor
call
inc
jae
adc
ret
test
jge
nop
push
nop
cltd
nop
push
push
rcrb
rcr
sub
sahf
stc
bound
les
push
pop
loope
xor
dec
fildll
sahf
mov
pop
add
inc
sub
insl
ds
fsubs
sub
push
adc
js
jge
or
pushf
sbb
hlt
or
jae
stc
movsb
jmp
cmp
in
fs
cltd
jnp
push
int3
cmp
add
rorb
cmpb
pop
pop
and
ja
enter
jmp
rcll
dec
ja
mov
or
pop
push
dec
adc
in
imul
cmp
int
pusha
jns
dec
daa
loopne
inc
enter
ds
popf
push
or
insb
xchg
gs
inc
inc
movsl
jns
out
adc
fmull
cmpsl
xchg
fcoml
test
xor
aad
jns
adc
inc
jl
mov
sbb
add
jo
inc
pop
out
cli
ja
jmp
xchg
pop
out
lods
jbe
xor
lcall
inc
push
sbb
sbb
pop
jo
dec
sub
pop
repz
push
loop
out
push
jns
mov
negl
jb
inc
push
orb
add
out
add
scas
jge
inc
stc
and
mov
add
inc
mov
mov
mov
repnz
addr16
dec
push
daa
dec
call
cs
add
mov
or
push
inc
push
in
pop
cmp
pop
dec
mov
inc
mov
test
dec
inc
lret
xchg
jns
lea
pop
cmpsl
push
mov
and
xor
pop
cli
push
fisubrl
add
mov
jle
clc
cmp
rcll
push
lret
xorb
stc
loop
xor
mov
xor
int3
gs
mov
ja
mov
rol
jmp
popa
pop
das
jle
inc
and
mov
sub
sub
or
movsb
pop
jg
and
into
out
sbb
shrb
pop
sub
sub
xor
pop
rolb
cmp
lock
cmp
stc
jmp
loopne
jo
call
pop
or
xor
xor
popa
addr16
jmp
movsb
cmp
xor
mov
lret
mov
inc
adc
int3
cmp
imul
lods
sbb
push
and
jmp
xor
int
ja
pop
pavgw
jb
cmp
dec
outsb
pop
nop
popf
cvtpi2ps
sbb
fcoms
sub
scas
pop
aaa
daa
xor
popa
sub
rdmsr
adc
out
sbb
push
mov
mov
cmpsl
bound
adc
test
jmp
fcompl
fisttpll
test
sbb
push
pop
cmpsb
out
add
imul
popa
sbb
stc
push
cmpb
jg
stos
je
addr16
sbb
xchg
pop
sbb
insl
sbb
hlt
jecxz
add
sar
stc
mov
xchg
std
das
or
stc
and
fstpl
mov
sbb
das
and
push
or
out
lock
jae
mov
add
dec
adc
popa
push
jge
cwtl
jno
fs
cmp
adc
dec
das
adc
inc
or
xor
jb
subl
lock
mov
dec
push
es
and
inc
aaa
and
cmp
int3
add
aam
mov
push
andb
pop
addr16
sbb
xor
nop
mov
insl
addr16
sarb
repz
xchg
adc
sbb
imul
xor
sbb
cmp
mov
push
sub
push
xor
push
mov
arpl
jnp
add
dec
mov
xchg
das
icebp
pop
add
addr16
adc
add
push
ja
push
jae
mov
mov
add
cli
adc
pop
mov
cmp
in
push
xor
lock
push
roll
popa
cmpsl
pop
and
std
jo
incb
jb
pushf
aas
jge
sub
mov
dec
add
adc
call
pusha
movsl
out
enter
je
in
jno
lods
inc
lahf
lock
daa
jle
fucomi
add
scas
adc
repnz
cmp
jge
push
inc
or
test
cmp
pop
cmpsb
outsb
sub
outsl
push
outsl
popa
inc
jae
adc
fbld
out
imul
rcrb
lods
pop
addr16
enter
lret
jae
xor
inc
imul
popa
stos
adc
pop
pop
xchg
pop
add
jo
cli
and
jl
repz
cmp
insb
cmp
adc
add
lods
pop
inc
pop
das
fdivs
inc
insb
push
mov
xor
out
shll
add
je
cmpsb
scas
cmp
jbe
sbb
push
enter
pop
mov
sbb
scas
xchg
or
sub
mov
inc
call
add
shlb
jae
lds
or
sbb
jae
fcomps
dec
pushf
cmpsl
fcomi
cmp
mov
jnp
insb
mov
outsb
js
ret
popf
xor
divl
push
lret
inc
sbb
sub
dec
cmp
test
outsb
pop
test
das
xor
sbb
or
es
das
ja
push
and
lahf
addps
aam
ljmp
pop
dec
cwtl
push
push
out
mov
and
lret
mov
outsb
sbb
sbb
cmp
or
jno
std
jmp
mov
cmp
loope
sbb
mov
daa
ret
mov
cmc
add
aas
out
ds
test
push
fdivr
pop
outsb
and
outsl
sub
push
jg
push
into
cwtl
je
cld
mov
cmp
fisubs
jge
adc
pop
jle
lret
mov
push
cltd
xchg
loope
sbb
fwait
lods
int3
push
stos
mov
and
out
jge
js
ret
scas
mov
pop
mov
xchg
push
dec
popf
pop
cmovbe
push
jl
pop
ret
stc
mov
push
pop
add
jb
lds
push
cmp
add
push
icebp
push
jg
cmc
lock
int
int3
outsb
sbb
outsl
fs
jbe
cmp
cmp
inc
push
sub
dec
push
cmp
stc
lods
fcompl
orb
cmove
adc
loope
sub
out
repz
mov
sarb
sahf
adc
enter
out
das
jl
shl
inc
in
adc
into
sbb
sub
inc
std
add
mov
sbb
sbb
addr16
jecxz
jle
dec
sbb
into
pop
mov
mov
cwtl
ss
jo
fs
cwtl
push
addr16
adc
ss
popa
xchg
inc
stos
test
pop
sahf
pop
xchg
popa
stc
hlt
dec
enter
daa
out
lret
adc
fcoml
lret
outsb
inc
xlat
xor
cmp
add
lods
xchg
and
lds
inc
dec
scas
xor
call
inc
daa
pop
cmc
sbb
gs
xor
jge
out
add
sbb
mov
push
sub
jo
sbb
adc
sub
mov
push
stc
int
ss
pop
push
nop
sbb
xor
push
iret
enter
mov
adc
or
lret
test
fdivrl
jo
lret
cmp
call
outsl
sbb
sbb
or
and
and
push
adc
and
pop
push
test
pop
mov
cwtl
mov
in
jg
rclb
mov
mov
rdpmc
out
daa
lods
pop
dec
movsb
inc
popa
dec
adc
fs
sub
mov
jmp
xchg
jmp
push
push
cmp
fisubl
in
push
xchg
xor
push
cli
out
mov
cmp
call
and
inc
scas
jnp
daa
popf
add
dec
and
push
call
imul
das
es
dec
jecxz
add
imulb
and
outsb
pop
xchg
mov
sbb
in
jnp
adc
jae
jmp
cmp
outsl
in
sbb
lret
jg
ss
dec
invd
inc
adc
jle
popa
lods
cmp
and
inc
inc
mov
inc
jmp
or
dec
std
sbb
push
sbb
adc
pop
adc
cmp
pop
bound
aad
adc
jp
je
jbe
call
sbb
push
cmp
push
dec
pop
dec
dec
push
cmp
ljmp
popa
xlat
xor
cltd
imul
jno
xor
bndldx
add
dec
xor
inc
xor
inc
jnp
and
adc
and
out
enter
inc
mov
pop
dec
or
bound
and
gs
lcall
stc
leave
pop
cltd
sbb
cli
jge
out
jb
cmp
dec
cs
push
adc
aaa
adc
movsb
or
test
push
pop
adc
in
cmpsb
add
push
jge
cs
pop
pop
out
add
leave
adc
loope
cmpsb
lcall
jmp
sbb
lock
les
pop
addr16
cltd
aad
jne
mov
adc
pop
sarb
aas
out
add
pslld
xor
pop
cli
scas
add
push
mov
fwait
scas
adc
sti
aam
sub
push
out
or
pop
ljmp
shlb
testl
ljmp
mov
out
lock
inc
jbe
sbb
xor
cmp
mov
pushf
lcall
sub
inc
int3
pop
push
pop
adc
cmp
jl
into
pop
lea
inc
stc
faddl
push
pop
lock
jle
das
mov
ljmp
xor
cmp
xchg
xchg
call
daa
addr16
cmp
sub
jle
cmp
int3
push
js
inc
jb
sub
out
das
push
add
test
hlt
xchg
mov
and
sub
adc
pop
mov
ljmp
dec
pop
cli
popf
outsb
jle
xchg
mov
psubb
mov
jge
pop
nop
sub
adc
pop
inc
jl
pop
cmp
sub
pop
jne
and
loopne
dec
pusha
addr16
dec
add
fdivrl
fbld
sub
jo
and
in
repnz
cmp
jno
xor
adc
fists
dec
inc
inc
mov
pop
stos
int
dec
aaa
into
pop
mov
lock
pop
sbb
sbb
jl
or
push
mov
mov
mov
jnp
sub
pop
popl
mov
sub
data16
adc
jb
mov
add
mov
adc
push
cmp
push
lret
dec
push
das
and
pop
add
add
push
cs
jge
cmp
pop
stc
xlat
push
add
xor
push
lods
int3
jno
pop
sbb
stc
adc
jge
scas
jo
pop
or
pop
int3
inc
stos
repz
pop
cmpl
inc
push
push
xor
sbb
xor
or
fsubrl
aam
inc
inc
and
outsl
add
hlt
sbb
sbb
push
jnp
popf
push
or
cs
popl
unpckhps
sbb
ljmp
inc
rcpps
xchg
movsb
sub
jmp
push
adc
int
jg
add
ja
pop
pop
repz
lret
cmp
ja
push
jp
xchg
push
sub
jne
inc
leave
jmp
add
aas
sahf
push
adc
or
fcomps
pop
std
std
daa
and
adc
adc
cmp
je
pushf
inc
and
das
push
pop
shrl
push
in
sbb
xor
test
loope
das
adc
sbb
and
je
add
jl
push
addr16
mov
jns
push
and
sub
xor
cld
xchg
xor
out
cmp
out
or
out
dec
xor
daa
add
popa
pop
push
push
jae
xor
lret
mov
jle
sti
jne
mov
push
push
fstpt
repz
stos
jecxz
jg
adc
enter
sbbl
add
inc
pop
push
inc
sbb
mov
pop
adc
adc
aas
lock
lds
adc
pusha
mov
adc
mov
fsubrl
jge
or
sub
clc
inc
out
sbb
gs
imul
inc
pop
add
sub
repz
sti
and
cmovo
sbb
jne
jb
enter
popa
lret
adc
xlat
mov
jnp
movsl
or
jne
jnp
sbb
fs
pop
dec
sbb
aam
push
mov
lret
lds
sbb
inc
es
daa
cmpsl
cmp
jg
outsb
pop
pop
out
xchg
pminub
push
push
mov
jo
pop
jmp
gs
sub
push
in
lods
outsl
jo
jae
cli
jge
pop
leave
push
push
xor
cs
add
or
insl
and
popa
inc
das
cmp
push
dec
in
mov
mov
sbb
jns
fucomip
and
das
fs
ret
jle
jo
adc
pop
pushf
jg
nop
mov
jnp
adc
mov
or
inc
fucomip
jg
fisubrs
xor
jmp
cmp
sbb
adc
push
mov
jmp
test
cmc
cmp
bound
cmpsb
aad
mov
adc
mov
pop
inc
jge
or
cmp
sub
outsb
adc
dec
push
mov
call
loopne
ret
fld1
pop
push
add
lea
jns
sub
push
int3
sbb
out
xor
mov
add
movsl
scas
jp
adc
repz
push
loopne
xor
or
sahf
jge
mov
push
xor
lret
clc
mov
add
popa
out
jmp
mov
inc
jns
adc
jae
push
pop
push
pop
cmp
push
sbb
inc
xor
sub
sub
test
mov
test
adc
push
mov
imul
push
adc
faddl
dec
push
mov
xchg
das
arpl
or
aad
or
loope
repz
cmp
in
ss
clc
mov
test
pop
aaa
or
std
sar
jns
push
mov
jnp
inc
inc
outsl
lret
lock
push
lret
rorl
popf
cmc
and
loope
scas
sbb
faddl
movsb
add
push
adc
lods
test
mov
insb
mov
or
movsb
sub
pop
cli
xchg
adc
dec
popf
sbb
call
loope
sbb
sarb
test
cs
adc
jb
stc
inc
push
xor
aad
sub
pop
adc
lods
in
or
adc
jl
mov
xor
xchg
lahf
enter
outsb
rcrb
sbb
xchg
push
ss
pusha
in
outsl
stc
push
icebp
mov
outsb
sti
pop
dec
or
push
into
int
sub
adc
in
movsl
nop
push
pop
jle
das
sbb
adc
int
call
inc
scas
das
cmp
lods
mov
mov
xchg
mov
mov
adc
lret
mov
lds
pop
mov
xor
adc
int3
jno
pushf
inc
inc
pop
jg
pop
mov
push
std
scas
cmp
pop
shll
jns
addr16
int3
sbb
pop
rcrb
fdivs
push
stos
roll
add
xor
xchg
lretw
xorb
adc
inc
xchg
call
enter
arpl
jne
ss
popa
int3
sub
sub
push
and
test
mov
fldenv
scas
and
cmp
adc
mov
lods
xor
cmp
pushl
scas
into
icebp
aas
xor
arpl
mov
jle
dec
call
jmp
into
cld
cmp
sti
push
hlt
xor
adc
mov
cmp
mov
push
rclb
repnz
adc
dec
mov
adc
in
movsl
nop
push
jo
mov
mov
fsubs
outsl
push
js
cmp
add
imul
cmp
inc
jbe
jae
xchg
mov
movsl
sbb
repz
jge
icebp
dec
inc
scas
inc
aaa
inc
push
xor
cmpsl
adc
jne
inc
loop
cmpsl
loop
cs
cmp
cmpsb
outsb
pop
jge
sbb
and
pop
jnp
jns
sbb
jne
mov
jl
lods
int3
push
mov
adc
xlat
cmp
and
mov
or
adc
xor
push
pushf
das
cmp
out
adc
cmp
dec
loope
cmp
adc
ret
adc
bound
jb
inc
scas
sub
cmp
dec
inc
sbb
es
sub
out
ret
ret
bnd
lds
sbb
sbb
into
push
and
xor
fdivl
sbbl
sub
pop
cmp
cs
sub
mov
das
adc
sub
mov
jb
pop
and
push
add
xchg
push
pop
pop
push
jb
stos
jo
bnd
sbb
sbb
popa
mov
bound
push
pushf
int
push
jbe
sbb
mov
mov
pop
addr16
ret
rcrl
and
popa
adc
cmp
mov
into
push
jmp
int
sub
sahf
aad
pop
push
cmp
xor
add
mov
dec
les
mov
add
aaa
data16
into
dec
inc
pop
or
xor
or
push
jnp
or
inc
or
pop
adc
lods
aaa
add
int
sub
sub
addr16
cmp
popf
jmp
inc
cmp
jp
dec
xor
push
fsubl
xchg
test
xchg
scas
dec
loopne
pop
lods
daa
aas
int
xor
test
pushf
js
or
and
and
push
jnp
add
pop
add
ljmp
pop
adc
int
push
dec
scas
pop
mov
adc
xchg
scas
sub
daa
pushf
adc
loope
lock
push
mov
int
cmp
fnstenv
add
sbb
imul
pop
mov
mov
cmp
fs
daa
mov
in
data16
stos
inc
add
inc
push
jb
mov
aaa
dec
stc
add
je
aam
dec
stos
jbe
lods
mov
packsswb
and
push
mov
test
icebp
dec
push
orps
fwait
pop
ss
adc
push
sbb
lods
mov
add
dec
dec
cmpsb
adc
push
sbb
adc
or
enter
addr16
inc
adc
sbb
inc
sbb
cmp
push
jns
jge
fcmove
jbe
xlat
push
dec
add
pop
cli
push
faddl
mov
dec
sub
push
addr16
and
out
hlt
sub
pushf
xor
lock
xor
xchg
sub
js
mov
fstps
push
dec
lret
lds
out
aaa
imul
cmp
pushf
push
pushf
enter
movsl
test
ror
dec
test
icebp
ret
or
push
inc
cmp
out
lock
addr16
arpl
enter
xor
dec
xor
jns
cmp
aaa
dec
mov
gs
lea
jb
decb
ficoms
and
dec
mov
and
gs
and
jo
pushf
inc
testb
push
in
dec
inc
out
gs
fmuls
cwtl
aam
aas
insb
std
xor
cmp
inc
in
sub
popa
ret
daa
data16
scas
push
js
outsb
test
fmull
push
jp
lds
outsb
pop
mov
push
add
aad
fs
fiaddl
add
xchg
jmp
out
mov
test
pop
jge
and
cmp
in
js
outsl
inc
mov
mov
xor
popa
dec
jl
pop
pop
cwtl
inc
mov
outsl
je
test
xchg
int
inc
sub
jns
cmpsl
or
push
nop
and
pop
lds
pop
xchg
outsl
jge
sub
aas
daa
fwait
lret
add
mov
int3
fs
nop
lcall
sub
stos
inc
mov
call
cltd
sub
and
add
sbb
dec
xor
aad
cmovle
aad
scas
ss
pop
addr16
cmp
push
js
pop
pop
pop
and
out
sbb
out
inc
jl
dec
push
mov
std
call
movsl
in
outsl
push
jnp
cmp
es
add
je
mov
outsl
push
fmulp
xlat
cmc
push
sub
xchg
cli
je
pop
push
and
jne
jo
jae
sbb
jl
jne
notl
push
mov
in
add
pusha
std
pop
lret
sbb
cmpsl
insl
adc
dec
mov
adc
mov
pop
sbb
push
test
sbb
es
jmp
out
repz
inc
push
jge
es
in
std
bound
dec
es
repnz
adc
mov
mov
cltd
mov
cmp
stc
std
outsb
adc
cmc
inc
scas
sub
lods
cs
fadds
cmp
movsb
dec
jp
jae
lds
push
or
sbb
or
lds
pop
subl
test
movsb
adc
imul
inc
sbb
mov
dec
std
pop
jp
jle
mov
repnz
hlt
test
adc
mov
adc
xchg
das
jbe
lea
aas
pop
adc
dec
jmp
inc
fdivl
rcrb
cli
xor
mov
inc
jg
pop
push
ret
sbb
das
arpl
cmc
jno
test
lahf
jae
icebp
incb
jae
pop
pop
mov
fstps
pop
and
pop
lods
sti
mov
cmp
in
push
jae
repnz
sub
in
and
ret
movsl
scas
dec
fstl
push
and
xor
pushf
leave
cwtl
les
inc
xor
stos
cmc
shlb
idivl
sbb
cmp
jae
cli
cld
jmp
jbe
notb
push
mov
fdivl
outsl
or
and
sub
aas
pop
test
cmp
pop
rcrb
sub
popa
insl
and
adc
das
fsubrl
add
std
ret
push
cmp
pop
or
test
fisttpll
enter
mov
sti
cmp
bound
cltd
mov
adc
jp
dec
test
or
or
negb
popa
loope
jne
mov
jo
push
cmp
adc
es
ret
jb,pt
test
push
jp
repnz
push
mov
cmc
sub
jae
repz
cli
sti
jmp
sahf
pop
cmp
stc
mov
jmp
dec
mov
aaa
and
cmc
or
fdivrl
test
inc
xor
jnp
cmp
fs
push
fdivl
movsl
xor
mov
imul
sbb
aad
pop
shll
insl
stc
test
jnp
or
pop
cmp
sbb
lcall
push
fs
popa
push
in
fadds
inc
pop
addr16
adc
movsl
push
dec
out
das
sbb
xchg
das
or
sub
sbb
mov
and
adc
jp
sbb
pushf
lret
std
pop
dec
push
rcr
adc
test
maxps
ret
nop
fwait
or
outsl
sar
mov
cwtl
popa
inc
test
adc
rcrb
gs
mov
add
js
sbb
cmpsl
out
inc
jns
sbb
jmp
dec
mov
jo
jg
dec
dec
call
dec
inc
sbb
gs
mov
jae
je
add
cmp
outsl
dec
push
int3
and
pop
cmpsl
test
mov
arpl
jg
jmp
mov
jnp
xor
fsubrs
jnp
int
dec
and
enter
pop
push
adc
sub
inc
push
data16
or
adc
cmpsl
xorb
lock
dec
and
add
sbb
addr16
xor
add
lret
cvtpi2ps
adc
jae
sahf
inc
jl
and
and
addr16
jns
and
mov
call
add
sbb
jp
dec
arpl
dec
aad
add
xchg
pop
pop
je
push
pop
aaa
movb
mov
cli
pop
sub
popa
ficoms
and
inc
jle
push
inc
fwait
lods
pushf
dec
out
jbe
data16
jno
jle
jge
inc
dec
cmp
mov
inc
popa
lods
aad
and
and
iret
std
aad
jne
fmull
mov
cmp
inc
or
sub
call
test
nopl
mov
pop
rol
scas
pop
xor
pop
inc
sbb
dec
and
sbb
adc
xchg
cmpsl
ljmp
cmpsl
adc
cmp
xor
sbb
xor
dec
adc
jo
pop
sar
sub
imul
dec
imul
les
aam
shr
and
inc
jl
dec
xor
dec
mov
out
push
adc
lods
test
jae
mov
pop
sub
add
dec
call
ficoml
sub
mov
jg
push
jp
popa
cmova
adc
cmp
ja
xchg
jl
lods
movsl
not
pop
dec
pusha
out
push
and
popf
enter
xor
xchg
cwtl
cmp
ja
cmp
cmp
sub
adc
bound
mov
cs
push
and
dec
push
mov
pop
lods
jbe
cmpsl
std
xchg
decb
roll
dec
ss
dec
pop
xor
jae
loope
bound
aaa
mov
pop
pushf
inc
xchg
pop
repz
dec
nop
int3
sub
sbb
js
mov
jne
dec
ret
call
and
insl
loope
cmp
es
xor
std
lret
jg,pn
cmp
out
fnstenv
aas
ja
test
cmp
push
loope,pn
cmovnp
shr
adc
jmp
pop
push
pusha
in
mov
packuswb
dec
imul
jae
repz
je
sbb
cmpsb
inc
xor
jb
sub
cmp
andb
xchg
data16
out
adc
sbb
adc
dec
dec
inc
mov
lds
or
loopne
cmp
mov
lret
mov
adc
std
sub
dec
sub
aaa
out
jp
mov
lret
xor
xor
and
test
fldt
popa
cld
jl
or
lods
inc
add
stos
jae
sub
mov
xor
je
inc
sti
add
lock
sbb
dec
mov
jnp
int3
jbe
movsl
sub
xor
adc
dec
out
push
dec
cmp
adc
cmp
call
jno
mov
jbe
sub
in
cmp
pop
aaa
mov
and
sbb
dec
pusha
push
cmp
xor
pop
cltd
aad
xchg
push
pop
ror
test
decb
xor
xor
inc
int3
push
jae
imul
popf
jo
and
jg
loope
jno
cmp
inc
pop
daa
data16
add
dec
lods
das
ja
sbb
push
lds
ja
test
rorl
pop
pop
dec
test
jo
lds
pushf
sub
inc
divl
ds
push
and
bound
icebp
add
imul
les
adc
enter
and
sbb
inc
mov
xor
lods
popl
lods
push
fs
das
loope
fistpl
imul
mull
scas
imul
outsb
cmp
lock
mov
fwait
inc
daa
adc
adc
push
stc
cmovge
jle
outsl
adc
fidivs
je
and
ja
push
and
lods
mov
pushf
pop
add
inc
sub
dec
in
movsl
pop
xchg
dec
out
punpcklwd
outsb
jae
cmp
sbb
jne
mov
test
inc
cli
cmp
adc
and
pop
enter
push
sub
xor
xor
or
xlat
sbb
in
ja,pn
sbb
mov
xor
cmpb
mov
or
jo
mov
push
cmp
xchg
jg
cmp
es
jmp
xor
test
push
outsb
sub
add
or
in
cli
jg
sub
fwait
call
addps
fadds
stc
jnp
jne
mov
mov
test
xchg
xor
inc
cli
notb
aaa
pop
xchg
mov
jbe
icebp
jne
push
mov
xchg
sti
xchg
mov
cs
in
sbb
cmp
stc
and
jo
xchg
ljmp
loope
das
add
cmp
mov
outsl
int
xor
int3
sbb
sbb
dec
push
pop
jmp
das
ds
cmpsb
xchg
xchg
cmp
add
xchg
gs
adc
imul
add
jno
add
push
das
sub
gs
lds
pop
std
xor
into
cmp
dec
fwait
inc
stc
repnz
xor
inc
add
aam
in
mov
mov
or
int3
jns
pop
fsubrl
and
in
shrd
xchg
in
lds
movsl
idivb
jg
pop
stc
iret
jnp,pn
enter
dec
test
jne
jno
jg,pn
xor
jns
xor
mov
sbb
pushf
adc
xchg
js,pn
xchg
aaa
cmp
jnp
jb
sub
and
das
or
incb
and
scas
inc
jne
mov
push
sbb
xor
or
sub
mov
jge
dec
cli
roll
fsubrs
sbb
addr16
das
dec
add
ja
test
jns
popa
or
inc
pop
leave
in
xchg
pop
insl
xor
aaa
mov
call
lret
jns
add
lret
das
aam
sub
pop
test
gs
cmpsb
mov
pop
cmc
jg
call
cs
lea
push
inc
jae
push
or
ds
test
call
lret
jb
pop
jle
add
cmp
lock
stc
sti
test
add
outsl
test
mov
sbb
push
imull
adc
xchg
push
dec
daa
dec
nop
movsl
cmc
push
jae
icebp
adc
lock
imul
ret
and
jge
mov
or
sbb
or
inc
enter
out
add
jmp
sub
cmp
and
mov
movb
dec
jecxz
mov
ds
jle
das
xor
std
and
mov
jo
ss
inc
pop
packsswb
psrad
push
and
ljmp
sarl
addr16
aad
jmp
scas
push
sbb
aas
daa
xchg
cmp
ss
add
test
mov
pop
out
cmp
jae
stc
int3
sbb
push
scas
pusha
xor
pop
ljmp
mov
cmp
jmp
push
push
adc
dec
dec
inc
call
popf
jge
gs
jnp
add
cmp
incb
push
pop
into
jmp
adc
insl
ss
das
pop
cld
inc
ds
das
es
xchg
pop
das
lods
xor
pop
lcall
inc
sub
xor
stos
int3
adc
inc
nop
jmp
add
js
cmp
andnps
in
pop
cmpsl
and
or
movsl
aaa
or
push
cmp
mov
jb
jb
inc
sbb
dec
xchg
and
adc
sub
add
cmp
aas
inc
inc
jns
push
and
lret
je
mov
and
cmp
lds
push
leave
icebp
cmp
jns
pop
shll
jae
inc
popa
sub
jno
mov
movsl
pop
xor
cmp
lcall
jb
shl
sub
inc
mov
xor
pop
xor
xchg
aaa
dec
stc
jl
pop
lret
dec
xor
fldenv
sbb
lret
mov
js
jge
adc
cmpsl
dec
mov
pop
xchg
push
pop
aad
das
sub
adc
pop
xor
pop
arpl
xor
pop
or
push
jnp
xor
sbb
iret
daa
cmp
movsb
push
call
ds
xor
cld
push
hlt
pop
sbb
daa
shr
and
sub
call
mov
jl
cmp
xor
adc
add
pop
adc
mov
pop
adc
ds
imul
jle
sub
jns
jp
xchg
lods
outsl
jno
jae
es
or
loop
sub
xchg
inc
pop
push
aas
rclb
push
mov
addb
nop
sub
nop
push
addr16
cmp
pop
jle
jb
push
mov
pop
cmpsl
mov
dec
mov
jne
push
inc
dec
inc
sqrtps
inc
rclb
ret
dec
lods
mov
jbe
clc
xor
jae
inc
mov
cld
es
jo
stos
movsl
adc
mov
aas
hlt
mov
push
imul
loope
pop
add
add
imul
aam
lods
fmull
xchg
xorb
pusha
mov
lcall
xor
inc
push
pushf
addr16
pop
push
scas
mov
jge
fxam
idivb
push
jae
jns
jo
mov
int
and
inc
js
sub
pusha
xor
enter
jmp
out
adc
pusha
loope
punpckldq
adc
mov
test
sbb
dec
fdivrl
sub
jae
push
jne
cmp
es
out
xchg
mov
add
push
std
scas
dec
xchg
aaa
enter
jbe
pop
or
mov
std
packuswb
mov
dec
popa
call
adc
addr16
lods
clc
and
pop
xor
imul
push
es
or
pushf
pop
lods
test
ja
jl
dec
ss
mov
ja
cmp
sbb
rcll
test
rcrl
js
dec
cmpsl
std
call
imul
sbb
jp
dec
and
add
add
adc
icebp
inc
inc
or
mov
or
push
mov
pushf
xchg
inc
or
push
test
stc
cmpsb
test
lret
xor
es
jmp
xchg
ret
xor
test
jns
cs
push
adc
mov
jmp
push
push
ret
movsl
cmc
pop
mov
ss
adc
fdivrl
std
push
jecxz
jo
js
push
push
gs
adc
push
gs
data16
addr16
mov
scas
push
jbe
mov
stc
xchg
outsb
add
push
xor
sub
pop
and
mov
xchg
shr
jns
jle
sbb
jl
cmpsb
scas
adc
mov
fs
pop
cmpsl
xchg
cmp
ficoml
enter
xor
pop
loopne
jne
leave
stos
pop
xchg
jge,pn
sbb
sbb
push
fsubl
jle
imul
push
push
jmp
adc
sub
loop
jg
pop
xchg
addr16
sub
inc
imul
scas
addr16
push
or
outsl
pop
jg
push
push
inc
inc
imul
push
icebp
movd
orb
push
in
aam
in
add
xchg
sahf
jp
shll
outsl
xchg
jbe
cs
and
xchg
ds
jae
sbb
aas
inc
cmp
cmp
sahf
sub
xchg
jbe
jbe
pushf
jg
movsl
pop
jno
xlat
ret
mov
std
adc
push
inc
adc
xchg
aad
pusha
call
inc
dec
fcomps
mov
xchg
xchg
xadd
add
dec
inc
cmpsb
cs
daa
sbb
pop
push
ss
xchg
lret
push
push
and
ja
jge
sub
je
cmp
dec
xor
sub
mov
arpl
fidivrs
or
sub
lcall
and
das
jb
pop
mov
cli
out
pusha
inc
cli
das
outsb
cmp
xor
and
add
cmp
xor
inc
subb
push
adc
pop
mov
jge
lret
add
call
int
and
xor
sub
jl
in
ret
ja
jl
inc
pop
out
sub
add
dec
pop
adc
adc
ss
mov
add
call
es
popa
enter
pop
pushf
and
nop
lea
daa
daa
dec
lret
mov
je
call
dec
js
daa
jle
insl
mov
das
sub
adc
sbb
push
cmp
adc
dec
mov
aaa
sarl
adc
jns
sbb
enter
adc
cltd
xchg
jmp
cmp
roll
push
aaa
cmp
test
sbb
jle
lcall
xor
jns
out
adc
int
ds
mov
add
cmp
inc
add
aad
das
dec
das
add
xor
adc
cli
cmp
sahf
mov
jbe
sbb
jb
mov
xor
std
mov
lods
aam
shlb
stos
lret
dec
xor
es
adc
fwait
pop
push
jp
adc
inc
inc
sbb
test
lock
sub
mov
adc
pop
mov
xor
jge
subb
and
sbb
mov
outsb
je
cmpsb
int3
or
push
gs
push
int3
dec
icebp
jae
jbe
stos
mov
enter
ss
mov
mov
push
cld
decb
push
jb
jns
and
std
ret
mov
sbb
xor
lret
pop
fildl
ret
stc
adc
or
push
lods
lret
mov
mov
pop
pushf
data16
aas
loopne
test
push
adc
fcoml
jnp
mov
add
bound
stos
cvtdq2ps
inc
ret
push
and
bound
test
cs
mov
call
stos
xor
dec
mov
dec
test
mov
dec
pusha
sbb
mov
sbb
loopne
lret
rclb
sub
xchg
outsb
jnp
cmp
cmp
push
mov
nop
pop
clc
add
ret
push
jne
or
jo
mov
insb
cld
daa
lock
test
inc
or
loopne
sub
rcll
or
dec
pusha
arpl
or
and
cld
wrmsr
rolb
mov
adc
push
test
data16
sbb
aad
pop
test
shrb
cmp
ljmp
test
mov
les
xchg
jno
push
pushf
dec
adc
xchg
aas
aam
inc
jno
subb
add
add
adc
mov
stc
adc
rolb
sub
inc
loopne
push
and
mov
movsl
xchg
fmul
mov
repnz
enter
sbbb
sub
jg
add
xchg
mov
push
fcomps
das
pop
call
movsb
lods
mov
cwtl
daa
call
movl
adc
adc
cs
mov
jle
push
mov
aam
add
jae
jae
call
push
cwtl
nop
adc
repz
fimuls
inc
mov
jb
cmp
xor
cmp
xor
syscall
mov
bound
dec
int3
xor
incb
in
pop
jp
loopne
cli
fcomps
push
pop
mov
sub
addr16
aad
scas
aad
stos
mov
call
push
call
push
enter
inc
stos
adc
pop
mov
addb
or
dec
bnd
fld
movsb
dec
mov
cmpb
jge
int
jg
push
scas
insl
mov
mov
jle
jge
cmp
fisubrl
xchg
ja
js
push
ret
mov
int
or
call
loope
in
or
adcb
and
repz
pop
aam
xor
mov
inc
xchg
loop
hlt
aas
into
enter
lods
xchg
add
call
pop
aad
cmpsl
cmp
roll
dec
call
or
bound
push
sbb
jbe
clc
inc
fs
call
add
push
add
mov
sbb
loopne
mov
pop
cmp
out
xor
cli
inc
outsb
inc
pop
cmp
push
pop
shll
cmpsb
xchg
imul
ss
xor
adc
or
call
out
jb
pop
adc
imul
add
outsb
push
push
adc
push
lds
shrl
sub
push
lods
xchg
dec
les
daa
lds
pop
dec
pop
dec
ret
inc
das
sbb
sbb
vpmacsdql
push
pop
loope
sbb
sub
out
add
adc
and
outsb
adc
xchg
jmp
cmp
aaa
cmp
adc
push
stc
or
dec
push
add
inc
cli
sbb
aaa
sbb
mov
mov
cmc
daa
cmp
cmp
push
dec
add
loope
scas
cmp
push
movsl
adc
dec
jle
or
push
enter
ds
push
sbb
rclb
addr16
js
jl
adc
push
mov
or
test
xchg
push
pop
add
jb
ret
jnp
js
mov
sub
cmp
sbb
addr16
inc
dec
inc
add
jo
and
data16
pusha
pop
push
xchg
pop
cli
push
scas
xor
cmp
xor
bound
aam
lds
lods
daa
insb
shr
adc
jp
add
and
add
and
dec
xor
jns
add
push
jl
mov
dec
ret
and
sub
jb
out
inc
dec
addr16
and
sbb
daa
add
inc
sysenter
xor
push
pusha
mov
movsl
mov
jmp
lock
dec
cmpsl
das
sub
push
jle
mov
dec
popl
sub
mov
dec
lahf
pop
fwait
pop
in
outsb
ret
xchg
mov
call
dec
dec
adc
fsubrl
pop
cmovp
stos
dec
jle
dec
cmp
mov
or
or
push
jp
and
pop
enter
jb
es
cmova
jge
pop
jnp
mov
jp
ds
push
outsb
jb
adc
sar
push
jle
in
inc
outsb
pop
xor
test
int3
sbb
nop
ss
or
stc
adc
bound
mov
pop
jle
lods
test
xor
pop
jle
jb
push
adc
and
push
add
push
jb
dec
inc
enter
xor
xor
pop
push
lret
push
adc
movsb
sub
push
jge
jp
xchg
push
mov
xchg
add
dec
scas
imul
cmp
in
adc
xor
dec
sbb
xor
or
xor
jp
movsb
js
pushf
push
cwtl
es
xor
push
or
idivw
outsl
push
dec
dec
pop
adc
test
add
aad
aaa
and
outsb
add
mov
adc
adc
xor
dec
sbb
dec
lock
fstpl
dec
mov
inc
cs
adc
pop
or
dec
pop
loope
jno
cmp
dec
xor
push
xor
cmp
pop
loope
adc
push
icebp
jle
flds
push
and
es
jns
addr16
sub
add
xchg
pop
rsqrtps
sub
sub
jp
push
inc
or
es
mov
arpl
jl,pn
jmp
jb
cs
inc
push
push
ret
sub
inc
xor
push
push
dec
sbb
outsb
jle
mov
add
jbe
paddw
dec
sub
sbb
jl
sub
inc
and
lret
inc
add
mov
cmp
movsb
aas
and
dec
push
rcll
xor
fwait
xor
enter
mov
mov
daa
mov
pop
add
imul
int3
or
testl
push
ja
vpcmpeqd
add
inc
dec
mov
jp
add
push
sbb
sbb
std
addr16
add
imul
adc
outsb
jp
xor
push
mov
cmpsl
jle
xchg
jbe
jo
jb
dec
pop
dec
or
sbb
inc
xchg
jae
cmp
cs
ds
inc
popa
cmp
xor
cli
les
cmpsl
push
xor
sub
daa
sub
and
fdivl
sub
add
sbb
sahf
cmp
lods
or
les
pop
fnstsw
push
xor
xchg
insb
inc
mov
adc
pushf
aam
sti
mov
xor
pop
add
pop
pop
push
dec
lret
fs
inc
add
push
push
and
les
sbb
pop
or
aad
xor
cltd
and
adc
push
inc
jns
sub
dec
jp
lahf
add
add
fs
jp
dec
and
insl
push
lods
push
xor
stos
or
aas
adc
ret
jbe
push
pop
movsb
jo
jp
test
push
push
xor
out
call
clc
pop
mov
or
lahf
dec
ret
outsb
in
jb
pop
push
in
es
test
sahf
dec
addr16
das
push
inc
insb
ret
stc
push
daa
dec
mov
jp
into
pop
pop
aas
es
xor
push
inc
push
stos
mov
xchg
cvtpi2ps
mov
push
xor
shlb
dec
cmp
push
enter
push
jns
popa
push
inc
jb
inc
icebp
jb
shlb
push
xor
data16
adc
dec
jae
fisubrs
sbb
jns,pn
xor
push
push
jbe
dec
xor
mov
xchg
es
and
adc
push
std
cmp
cmp
xor
les
cltd
or
mov
sbb
jne
outsb
push
push
jle
lahf
bound
jl
push
pop
das
cs
nop
add
loope
or
adc
mov
cmp
dec
out
xor
test
dec
out
or
aaa
ds
dec
cmp
xor
std
push
ss
xor
jle
push
data16
push
call
sahf
inc
xor
pop
int3
out
jo
push
jle
pushf
gs
cmpsl
sbb
sbb
pop
test
jo
push
jle
pushf
or
cmpsl
cs
xor
aaa
cltd
test
jbe
adc
sub
and
outsb
std
add
or
or
jl
push
and
pop
jle
sub
or
and
push
sub
jg
je
push
push
inc
call
cmp
test
mov
xchg
sbb
mov
xchg
inc
adc
loop
sub
adc
in
js
dec
jnp
pop
mov
insb
inc
adc
pop
pop
pop
pop
push
pop
cmc
xor
pop
dec
lcall
cmp
pop
cs
and
sbb
add
es
jb
and
sbb
or
and
in
or
adc
cmp
sub
or
data16
or
pop
je
cltd
or
ds
imul
mov
or
es
adc
adc
sub
push
comiss
nop
push
popf
mov
adc
push
mov
push
inc
je
add
sub
and
cmp
popa
sbb
dec
je
adc
inc
stc
fmuls
inc
pop
pop
push
sbb
pop
lret
and
inc
xor
int
lcall
xchg
or
dec
mov
push
sub
cmp
jae
add
jle
lds
inc
ss
enter
mov
add
out
outsl
xor
mov
and
pop
xchg
cmp
xor
add
std
dec
pop
ja
push
and
dec
das
outsb
mull
aas
stc
dec
ficomps
sbb
test
stc
leave
dec
cwtl
xchg
push
jbe
cmp
xor
sbb
and
test
lds
adc
mov
nop
and
test
aad
inc
xor
fs
jle
sbb
pusha
aaa
fs
add
add
inc
inc
js
add
push
ret
dec
adc
pop
dec
gs
sbb
pop
sbb
shlb
arpl
or
pop
sbb
push
fwait
movsl
or
lods
loope
push
push
and
out
adcb
push
cs
dec
pop
or
push
push
xor
and
push
pop
jb
adc
je
jle
jl
movsl
push
push
jg
and
inc
out
sub
mov
outsl
je
adc
sbb
call
outsb
jp
xor
or
xor
xor
incb
push
and
add
dec
in
pop
rorb
es
aaa
dec
xor
cmp
and
into
push
andl
push
daa
and
cmp
or
and
and
outsb
mov
pop
mov
data16
push
stos
sbb
push
fs
dec
jp
adc
and
push
aaa
inc
and
dec
push
push
or
adc
ficoml
mov
sbb
dec
js
xor
cmp
sub
add
leave
adc
or
dec
dec
cs
jbe
cmp
js
jp
mov
pop
or
and
push
inc
cmp
test
dec
add
jg
sbb
outsl
jg
pop
add
jg
inc
inc
jg
sub
and
cmp
add
mov
pop
daa
pop
jp
inc
addr16
aaa
or
and
pop
pop
sub
sbb
jb
sbb
dec
adc
sbb
sbb
push
sbb
dec
and
mov
mov
jns
nopl
ss
mov
adc
sub
sub
dec
mov
push
and
pop
into
xor
sbb
push
push
push
inc
andb
push
adc
stos
jp
aaa
dec
push
cmp
xlat
sub
push
in
adc
test
sahf
jbe
sub
inc
std
pop
cli
push
dec
sbb
and
push
or
cmp
cmpsb
movsb
and
sti
jmp
inc
mov
or
sbb
idivw
dec
daa
jbe
test
pop
and
mov
add
inc
dec
cmp
jb
sbb
sub
cmp
xor
arpl
add
adc
sub
in
dec
pop
stos
push
dec
outsl
aad
jg
push
push
inc
leave
sbb
outsb
xchg
jp
jbe
ds
jge
pusha
push
les
or
and
and
adc
push
mov
daa
cmp
or
and
or
jle
jg
pop
push
push
lret
std
sub
and
push
pop
sbb
push
sub
mov
pop
jl
js
sub
xchg
lret
stc
push
outsb
sbb
cmpsl
jle
push
dec
int3
push
pop
xchg
pop
nop
push
push
adc
es
out
push
adc
cmp
dec
cmp
push
and
pop
dec
add
jg
pop
push
dec
jae
insl
pop
inc
inc
dec
sub
dec
and
sbb
push
dec
outsb
outsb
js
pop
pop
jb
addr16
pop
cmc
outsb
push
mov
sbb
dec
ds
out
lret
pop
add
jp
cmpsl
inc
aad
push
test
test
or
dec
add
imul
outsb
dec
cmp
pop
and
sub
cmp
dec
into
add
pop
sbb
xorb
dec
and
adc
sbb
add
call
jb
pop
mov
enter
dec
xor
cmp
mov
mov
push
jp
jns
jo
je
dec
lcall
and
enter
cmc
sub
mov
mov
pusha
and
jb
ss
mov
sub
std
and
jo
ss
sub
cwtl
sbb
push
push
push
xor
bound
inc
dec
fdivs
push
pop
sub
or
push
add
je
add
enter
dec
inc
push
add
push
movsb
add
adc
daa
pop
jl
dec
stos
adc
mov
mov
or
mov
push
or
popa
inc
out
xor
outsb
push
xor
xor
pop
jp
data16
js
cmovle
xor
je
inc
and
sub
aad
inc
call
es
je
or
outsb
xor
data16
popa
js
dec
pop
jno
inc
xor
pop
mov
push
nop
jbe,pn
and
xor
mov
jb
dec
add
dec
pop
jb
mov
es
and
dec
dec
adc
outsl
sbb
jle
jg
jb
xor
pop
jmp
push
mov
pop
cmp
push
sub
ret
stc
add
das
adc
movsb
push
bound
jp
pop
in
jb
dec
aad
inc
mov
inc
push
jbe
cmp
xor
cmp
push
pop
cmp
jns
pop
sbb
sub
cmp
or
aas
push
and
jle
inc
pop
xor
das
inc
ss
cmp
das
push
push
cwtl
cmp
ja
mov
inc
inc
negl
and
and
call
outsl
inc
fsubl
nop
cs
es
mov
inc
push
pop
or
jbe
dec
inc
in
fs
dec
cmp
pop
or
inc
adc
ja
test
inc
imul
mov
dec
push
cwtl
and
nop
adc
push
sub
jp
or
jb
dec
ja
inc
cwtl
cmp
push
push
and
push
out
xor
sbb
push
mov
cmp
dec
push
inc
inc
cmp
pop
sbb
jg
sub
pop
xor
ss
add
sbb
xor
dec
test
ja
push
add
jmp
bound
xor
push
pop
jmp
sub
push
shl
or
jl
dec
push
dec
ret
jge
stc
es
xor
sbb
sbb
and
inc
inc
xor
bound
push
jbe
dec
aaa
cmp
mov
shlb
xor
or
push
jns
and
pusha
adc
jb
and
cmp
add
push
jbe
aas
push
dec
cmc
inc
inc
mov
sbb
into
aas
in
cmp
xchg
push
mov
and
dec
cmp
aas
xchg
dec
dec
inc
nop
or
and
xor
lret
jns
and
pop
ja
and
or
push
pop
sbb
adc
dec
test
add
outsb
adc
jbe
xor
inc
cmp
gs
or
push
out
das
ja
push
jbe
inc
push
mov
push
xor
and
adc
push
adc
cmp
or
mov
cmp
je
dec
add
inc
push
out
xor
es
dec
add
xor
mull
xor
sbb
dec
data16
pop
and
fldcw
daa
or
pop
add
inc
cmp
adc
push
and
push
pop
ss
adc
jb
pop
pop
dec
pop
pop
push
fcomps
cmc
push
inc
adc
xor
stos
je
or
dec
cmp
fs
adc
adc
stc
js
push
cmp
sub
push
and
push
loope
lret
add
add
arpl
cs
movsl
loope
orps
inc
out
clc
inc
cld
dec
mov
inc
aaa
jb
inc
cmpsl
push
jb
mov
and
dec
push
dec
xchg
sub
jle
jp
pop
rclb
out
pop
cmp
jb
pop
test
sti
call
into
push
push
pop
aas
addr16
xsaves
jo
inc
pop
mov
insb
sbb
push
ret
inc
je
cmpsl
inc
das
dec
sub
dec
inc
cmp
and
jle
dec
popf
stos
jb
adc
push
inc
adc
insb
dec
push
xchg
les
push
dec
xor
cmp
or
cmp
ja
or
sub
mov
xor
push
lock
jnp
movsl
jns
push
cltd
sub
and
or
add
jl
pop
jb
cld
inc
daa
sub
imul
mov
test
push
xorl
push
les
dec
pop
outsb
imul
inc
loope
lret
adc
gs
stc
push
call
ss
xor
gs
adc
inc
jo
aaa
pop
fcoms
nop
cmp
xchg
add
xlat
add
enter
push
lret
std
and
das
cwtl
cwtl
es
nop
pusha
xlat
add
jb
sub
pop
stc
sub
jmp
pusha
pushf
bound
test
add
dec
and
adc
lods
dec
jp
dec
cvttps2pi
sbb
movsb
push
out
jp
and
pop
cmpsl
or
pop
adc
dec
movsl
jb
dec
aam
dec
sub
add
dec
pushf
icebp
dec
jns
jb
sub
adc
mov
movsl
out
push
jl
dec
dec
inc
sbb
sub
and
xor
dec
add
dec
mov
and
xor
inc
or
ss
jge
jns
push
fwait
in
xor
jns
dec
cltd
pusha
into
jbe
xor
into
sub
aas
test
mov
aas
es
and
scas
aas
add
sbb
dec
leave
inc
lret
ja
cmp
dec
stc
and
pushf
lds
dec
adc
pop
das
add
adc
xor
or
inc
lret
cli
sbb
inc
inc
lret
add
xor
jae
add
or
jo
add
in
xor
xor
jg
adc
pop
mov
daa
movsb
pop
sub
movsb
jo
xor
push
lds
push
jle
aas
jne
inc
addr16
inc
push
jbe
and
test
jp
dec
inc
dec
push
cmpsl
sub
fs
mov
and
push
push
sbb
and
xor
inc
sbb
mov
cmp
data16
int
sbb
cwtl
push
inc
pop
sub
push
cmpsl
cmp
jno
mov
je
or
and
add
inc
bound
push
dec
add
sbb
push
mov
and
xor
pusha
cwtl
inc
inc
jnp
pop
mov
or
xor
push
cmp
xor
fnstenv
js
push
jge
adc
jns
pusha
pop
push
es
adc
add
sub
or
add
cmp
test
pop
cmp
pop
retw
cli
inc
outsb
push
enter
sub
pusha
cmp
imul
fildl
adc
pusha
adc
push
in
or
adc
push
fs
jo
mov
xor
pop
fsubs
aam
bound
js
sub
xlat
cmp
pop
add
mov
inc
or
sub
xor
lret
add
push
adc
push
rorb
push
push
lret
cmp
dec
iret
or
sbb
dec
jmp
mov
or
aaa
and
pop
adc
add
dec
sub
ret
push
dec
sbb
mov
adc
dec
sbb
sbb
pusha
sbb
jo
push
test
pop
inc
mov
and
movsb
sub
mov
and
adc
mov
jle
jb
dec
sub
jno
cmpsl
sbb
stc
dec
jle
jp
push
dec
repnz
fimull
je
dec
push
pop
xor
ds
and
lods
add
dec
or
push
jno
cmp
push
mov
pop
inc
pop
pop
push
dec
push
dec
mov
mov
push
cltd
sbb
inc
pop
dec
push
fimuls
sti
pop
sbb
or
push
push
inc
sub
mov
in
fs
dec
sub
pop
push
mov
fs
add
sub
cmpsl
and
xor
add
mov
ja
cmp
add
cmp
aad
cmp
mov
mov
cmp
add
push
sbb
sbb
pushf
insl
std
jg
push
in
push
clc
arpl
out
adc
sahf
adc
adcl
insl
adcl
add
mov
aas
adc
stos
jge
popa
jo
ja
scas
jp
jns
pushf
jl
arpl
dec
adc
push
pop
lds
dec
fnsave
test
push
daa
shll
jle
sbb
mov
aaa
sbb
pop
fucom
push
sarb
adc
pushf
add
push
adc
arpl
ret
push
mov
push
arpl
jbe
test
test
xor
stos
sub
and
add
add
add
mov
sbb
fmuls
fistl
mov
lds
sbb
lds
add
add
adc
mov
lds
xor
xor
xor
and
mov
inc
sbb
xor
pop
jl
inc
test
adc
bsr
adc
lds
ss
stc
push
push
addr16
stos
pop
xchg
aas
push
inc
cmpsb
push
inc
cmpsb
pop
push
shll
shll
shll
shll
shrl
adc
sbb
lret
xchg
sbb
push
push
mov
push
mov
inc
aad
mov
push
popa
cmp
xor
push
sbb
test
and
das
and
int
pop
adc
push
push
pop
pop
sub
subb
testb
sbbl
dec
push
and
mov
and
pop
jg
pop
push
inc
sub
movsl
lret
pop
pop
or
mov
mov
dec
inc
pop
adc
mov
cmp
ds
xchg
sbb
ret
cmpb
notb
sbb
mov
dec
ret
shll
or
or
cmp
and
dec
bswap
stos
sub
enter
sarb
cli
pop
adc
adc
ss
sbb
stos
cmp
cmp
xor
lock
and
push
std
pop
cld
pop
mov
add
ss
rcll
fidivs
sti
push
pop
test
push
in
es
test
and
dec
mov
add
pop
shl
adc
aaa
sti
push
bound
addr16
dec
xchg
push
stos
adc
sar
bndldx
dec
xorb
loope
aaa
cmp
cmp
push
mov
es
dec
lahf
add
cmp
dec
push
daa
push
mov
pusha
or
cli
pop
bound
mov
and
add
pop
and
mov
add
xor
pop
adc
adc
pushf
xor
sbbb
pop
sti
stos
xor
stos
cmp
stos
cmp
jbe
add
pop
xor
dec
sbb
dec
pushf
xor
cs
push
mov
lds
mov
push
sbb
sbb
and
pusha
dec
jp
dec
cld
inc
mov
lahf
inc
dec
cs
xor
jp
xor
xor
add
and
mov
inc
jge
aam
push
ja
push
jp
or
jmp
test
inc
pusha
fadds
fadds
fadds
fadds
fadds
movsl
jmp
outsl
xor
outsl
hlt
push
push
jp
pop
push
dec
aaa
dec
lret
addr16
jbe
inc
lret
pop
js
jle
jbe
mov
pop
cmp
aaa
xor
loope
test
repz
jo
jle
in
jp
jns
xchg
pop
fnstsw
mov
cmp
push
lret
xchg
push
lret
xchg
push
lret
xor
push
xor
or
das
leave
add
fs
xor
pop
sbb
rclb
pop
mov
mov
lds
inc
sbb
mov
dec
pop
push
test
addr16
xor
daa
pop
push
adc
iret
bound
or
sub
and
cmp
adc
push
imul
inc
and
inc
fildl
std
pop
jg
pop
push
dec
sub
ss
ss
lds
jnp
das
mov
or
inc
push
inc
push
mov
js
cmp
push
mov
lds
aad
aas
inc
decb
sub
mov
int
xor
inc
push
adc
stos
repz
out
push
jb
sub
fsubs
xchg
xchg
arpl
adcw
pop
inc
mov
push
inc
mov
inc
mov
dec
sti
adc
adc
ja
addb
mov
xor
push
enter
test
inc
push
sub
into
sub
jnp,pn
pop
add
daa
sbb
aas
lret
mov
jo
mov
pop
nop
pop
ljmp
mov
and
cmp
aas
jg
mov
push
mov
inc
sub
mov
pop
ljmp
outsb
rcrl
lods
adc
xor
ss
add
adc
sub
push
adc
fdivr
push
lcall
push
sub
sbb
push
or
add
incb
add
mov
and
or
aaa
push
loopne
nop
adc
daa
push
call
and
movsl
mov
bound
daa
mov
movl
stc
adcl
or
cmp
add
mov
sbb
dec
shll
push
sbb
mov
mov
dec
sbb
fs
in
inc
popa
inc
mov
dec
and
pop
mov
dec
xchg
dec
aas
mov
dec
mov
adc
or
mov
sub
dec
and
aas
mov
push
lods
dec
and
movsl
lods
push
cmp
dec
and
adc
ja
out
xor
dec
xlat
jb
fnstenv
push
mov
aaa
arpl
push
add
inc
inc
inc
daa
and
push
sub
mov
dec
int
sarl
pushf
popf
lods
je
lds
add
aaa
or
inc
cmpsb
leave
and
mov
nop
push
mov
pop
fwait
xchg
push
fcmovnb
pop
test
push
shl
bound
addr16
out
pop
dec
xor
add
or
mov
jle
sbb
jns
and
in
jb
jg
lret
jo
inc
jns
movsbl
pop
push
push
push
or
mov
mov
cli
nop
add
cmp
xor
xchg
jg
cmpsb
cwtl
dec
inc
jp
dec
mov
inc
mov
xor
or
and
sub
or
xor
and
aas
sub
sub
or
je
push
xor
inc
cmp
adc
lods
dec
sbb
sub
and
push
jle
add
jo
cs
sub
inc
or
dec
std
adc
pusha
outsb
dec
inc
xor
jle
fcoms
imul
in
adc
pop
dec
xor
push
pushf
je
jns
jl
enter
imul
mov
and
sub
sahf
xor
jbe
sbb
jle
and
jle
je
dec
popf
jae
stc
sub
or
inc
popf
push
popa
or
adc
xchg
jnp
outsb
add
xor
loop
sub
cmp
cmp
xor
shrd
lods
or
add
pop
lods
sbb
pop
lods
adc
outsl
repnz
addr16
insl
cltd
jg
jns
jnp
inc
cltd
ja
jno
jae
jge
dec
test
inc
mov
push
in
pop
lods
pop
and
call
xchg
push
xchg
pop
xchg
das
xchg
sub
sub
push
into
push
daa
pop
inc
or
push
mov
jl
in
repz
push
cmpsb
xchg
outsl
addr16
inc
jl
dec
xchg
mov
cli
sub
popa
xchg
enter
daa
fs
inc
std
std
jl
mov
out
push
add
popa
addr16
loopne
jbe
outsl
cmp
xor
inc
jp
testl
daa
push
inc
ret
mov
inc
scas
xor
jns
inc
pop
dec
jp
pop
push
stc
ja
adc
jno
jle
addl
sbb
hlt
jge
mov
lret
pop
loopne
push
call
xor
mov
sarl
xor
xadd
push
mov
cmp
sub
mov
add
rol
rcr
or
mov
shl
btc
clc
push
bts
mov
add
neg
adc
cmp
mov
pushf
cmp
sub
mov
ror
stc
xor
lea
pushf
call
pushf
bt
xor
pushl
sub
push
mov
pusha
cmp
neg
push
ror
pushl
not
call
mov
pop
leave
jns
popf
test
fisubl
mov
mov
dec
les
rol
ja
mov
cltd
inc
mov
adc
rol
mov
and
ds
add
xor
sub
aas
scas
add
mov
nop
lcall
aaa
sub
mov
sub
gs
sbb
pop
adc
mov
js
sub
outsb
or
cs
outsb
fisubs
in
sbb
mov
in
in
mov
jp
add
push
gs
imul
js
inc
add
jmp
add
imul
imul
inc
outsl
jb
popa
je
add
add
je
jne
dec
outsb
jne
js
cmpsb
ret
adc
lds
test
das
jmp
cwtl
jp
insb
dec
sbb
jp
cmp
shrb
aam
daa
jecxz
aas
xchg
xor
mov
push
pushf
mov
lock
fcos
push
add
lcall
je
inc
add
dec
test
daa
mov
loop
out
cmp
mov
inc
fcoml
popa
lock
flds
jne
imul
popa
mov
out
repnz
jb
iret
jmp
leave
clc
int3
test
mov
xor
pop
sbb
push
mov
mov
fistl
cmpsb
cmp
bound
iret
shl
lods
das
cmpsl
xor
stos
sub
jns
imul
imul
subl
add
push
gs
outsb
jbe
jb
outsb
insl
outsb
je
popa
jb
popa
bound
add
add
gs
je
push
arpl
outsb
add
or
lea
je
cmp
cmp
call
add
inc
gs
jb
jbe
je
push
jb
imul
imul
push
gs
imul
gs
add
push
gs
gs
inc
outsl
insb
outsl
jb
jmp
add
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
inc
add
xor
mov
test
add
mov
test
stc
jmp
add
inc
gs
gs
inc
inc
add
add
fs
imul
add
jo
inc
imul
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
and
je
test
call
pusha
call
mov
pop
inc
or
cld
pop
hlt
mov
mov
mov
imulb
fcmovbe
push
mov
add
rol
ficoml
aad
and
jge
mov
mov
stos
cli
sub
rolb
xchg
xchg
daa
fisttps
xor
hlt
mov
add
xchg
fiaddl
pop
xor
xor
scas
stc
jle
fadd
jmp
cmp
sarl
cltd
mov
push
lea
jmp
scas
cmp
loope
sub
mov
insl
fmull
push
jae
shrb
repnz
mov
fs
fwait
inc
mov
cmp
jno
in
xchg
sub
and
mov
add
mov
inc
lahf
nop
fcomps
dec
sbb
sbb
clc
cltd
lret
mov
jnp
sbbl
gs
jne
push
jb
jo
jb
dec
gs
fs
add
push
gs
gs
jae
inc
popa
jo
jne
add
add
jb
popa
je
add
inc
and
xlat
lea
jb
clc
cmp
cmpb
push
pushf
pusha
pushf
lea
jne
neg
shld
mov
cmc
pusha
add
pushf
movzwl
add
ror
movsbw
mov
pushf
cmp
stc
add
clc
cmc
pushf
stc
mov
test
call
adc
lods
fiaddl
sbb
test
and
popf
dec
sub
pop
mov
push
in
inc
rol
insl
rcl
addr16
jae
xchg
inc
imul
xor
xchg
pushf
sub
test
xor
mov
mov
out
jle
insb
jl
push
out
pushf
pop
fmuls
push
shrl
ljmp
and
test
push
add
out
popa
jnp
outsl
sub
sub
or
xchg
inc
je
cwtl
mov
pushf
cmpsl
cld
jecxz
sbb
lea
mov
pop
movb
bswap
not
push
movzbl
mov
movzbl
lea
lea
pusha
movl
movw
jmp
add
inc
jb
popa
je
dec
arpl
inc
jb
insl
push
gs
jne
arpl
bt
cmp
setbe
lea
setl
mov
pushf
lea
ja
call
add
push
loope
add
and
push
movsl
and
push
loope
add
repz
pop
movsl
and
data16
add
sbb
movsb
movsl
and
mov
sbb
xchg
mov
and
fsubp
sbb
sub
test
add
sbb
movsb
loopne
add
out
add
and
in
and
mov
sbb
inc
and
hlt
stos
and
into
out
add
fsubl
or
and
fsubp
sbb
and
lods
and
cli
out
add
and
and
sbb
call
lods
and
cs
add
add
add
sub
sbb
insb
lods
and
inc
call
add
add
add
sub
lods
and
dec
call
add
add
add
xchg
mov
and
add
test
pop
idiv
call
add
push
popa
imul
jne
dec
fs
add
add
outsl
bound
push
outsb
insb
outsl
arpl
call
push
pop
mov
push
js
lock
les
jp
leave
mov
sti
or
ljmp
fcmovne
js
lock
inc
call
sahf
fisubs
xor
call
cmp
sbb
adc
icebp
mov
jg
mov
in
fidivl
lea
ja
stc
push
clc
imul
pusha
cmc
add
mov
push
pushf
lea
jmp
pop
shrl
jge
adc
xor
push
cltd
pop
aad
xorl
push
pop
mov
mov
popa
lods
lods
aad
dec
pop
les
data16
mov
sbbl
pop
pushf
push
stc
ror
pushl
pusha
cmc
cmp
movsbl
lea
jmp
call
add
inc
outsl
arpl
outsb
je
jb
jo
jb
imul
inc
gs
imul
add
je
imul
inc
js
inc
js
add
inc
jb
popa
je
inc
jbe
outsb
je
add
add
popa
bound
outsb
jne
je
insl
add
add
popa
jo
je
imul
scas
pushf
pushf
call
lods
pushf
sub
je
xor
push
clc
clc
sub
pusha
sub
jle
clc
neg
stc
pushf
stc
ror
call
add
push
jb
je
inc
imul
je
je
imul
inc
add
repz
idiv
add
push
gs
outsl
jb
addr16
jne
fs
imul
leave
push
pushf
pusha
pushf
lea
je
bswap
not
seta
cmp
add
rol
btc
sub
call
cmp
bt
xor
pusha
call
add
inc
insb
outsl
bound
dec
popa
outsb
fs
add
pop
cmp
enter
xor
xchg
popa
jp
xchg
xor
fnstenv
inc
rolb
jmp
or
stos
outsl
ret
imul
add
push
or
into
pusha
dec
call
fildll
jnp
jecxz
pop
mov
scas
mov
vmovsd
in
cmp
lods
je
jo
nop
shl
scas
mov
mov
mov
in
add
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
add
outsb
push
jb
outsb
je
jb
add
pop
dec
test
cli
sub
gs
arpl
pop
pop
adc
adc
inc
rol
sub
stos
xlat
pop
ret
pop
shl
scas
pop
mov
jmp
ja
test
fmull
mov
or
cmpsl
cmp
imul
test
mov
add
cld
fistl
xchg
add
xor
sbb
bsf
btr
clc
bsr
mov
jmp
pusha
lea
jb
push
cmp
mov
jmp
lea
je
pushf
jmp
add
bt
mov
sub
sar
clc
mov
clc
clc
cmc
cmp
push
pushl
movb
pusha
lea
jbe
jmp
add
push
gs
insl
gs
push
add
pop
mov
lods
jo
mov
jo
nop
and
std
xor
outsl
jmp
pop
jmp
mov
fcmovb
leave
inc
ljmp
loopne
subb
mov
addr16
push
sbb
xor
xor
stc
scas
imul
mov
and
cwtl
inc
rorl
insl
fldl
ret
dec
add
pop
cmp
iret
cltd
clc
xchg
mov
aas
fsts
inc
jp
rclb
jb
xor
in
adc
in
addr16
and
aas
fcmovb
sbb
dec
adc
sbb
cmc
pop
ljmp
pop
imul
jg
push
pushf
cmp
pop
scas
aam
adc
dec
shrb
movsb
sub
add
push
sbbb
or
and
sbb
ret
stos
xorb
and
imul
push
add
push
int3
cmc
and
lcall
xor
mov
or
js
sub
rcrb
into
test
enter
mov
and
enter
outsl
dec
push
xchg
mov
inc
add
fisubl
jp
adc
sbb
xor
xor
push
mov
push
pop
fcmovnbe
cli
cmpl
mov
xor
inc
lock
inc
in
mov
or
adcl
lcall
jecxz
xchg
int3
sbb
jmp
arpl
sub
pop
pusha
fbstp
inc
push
lea
jne
pushf
pusha
bswap
movb
pushf
movb
lea
movzbw
mov
lahf
call
add
dec
gs
jo
gs
jb
jns
xor
bt
pushf
repnz
pusha
jmp
call
call
push
shrb
mov
and
mov
xchg
cmpsl
sub
jo
mov
stos
dec
fcmovb
sahf
pushf
enter
pop
das
pop
pop
lret
or
inc
rol
rclb
scas
je
mov
mov
aaa
xchg
or
dec
fiaddl
and
xor
jmp
mov
inc
je
into
fiaddl
adc
xor
jmp
or
fsubl
addr16
fiaddl
aaa
jae
aas
mov
jae
imul
xchg
adc
repz
cltd
test
rcr
pop
cmp
jge
lret
stos
in
sub
add
out
inc
rolb
fcmovu
data16
sub
mov
pop
out
add
fiaddl
dec
or
jnp
aaa
jge
pop
lcall
cmp
pop
push
scas
xor
in
cmp
ret
adc
cmp
repz
dec
jmp
xchg
fisubl
push
dec
gs
xchg
aam
cmp
push
lret
mulb
dec
mov
popa
aad
insw
jne
xor
xor
addb
sbb
add
mov
ds
repz
stos
cmp
mov
enter
mov
xor
lods
jecxz
fs
enter
push
jecxz
les
add
cmp
mov
les
fwait
mov
fsubrs
insb
pop
xchg
iret
fiaddl
push
sbb
adc
jno
and
fcompl
insl
mov
ljmp
mov
outsb
cmpsb
jbe
imul
xchg
ret
hlt
mov
pop
jno
push
iret
jmp
pop
inc
push
push
pushf
rol
mov
sub
movsb
cltd
pop
loop
and
dec
inc
dec
popf
adc
mov
xchg
mov
xor
outsl
pop
xchg
mov
es
icebp
mov
ja
pop
mov
jg
mull
jo
cmp
and
stc
pushf
clc
cmp
bswap
lea
movsbw
mov
jmp
mov
jmp
xchg
pusha
push
movb
movl
call
lea
call
push
lea
jb
pushf
pusha
pushl
ret
push
mov
fiaddl
sbb
ljmp
pop
shll
inc
fiaddl
inc
xchg
sbb
pop
je
sub
lahf
scas
cltd
and
mov
xor
jmp
pop
cmp
daa
repnz
dec
lods
pusha
push
and
int3
jg
jg
add
js
mov
loop
add
and
movw
push
pushf
call
add
inc
gs
jns
inc
outsl
insb
outsl
jb
add
insb
jae
jb
jo
outsb
inc
add
add
je
outsl
insb
jne
gs
outsb
outsw
jb
popa
je
outsl
outsb
inc
add
add
je
popa
jae
inc
jb
outsl
jb
add
inc
gs
jo
outsb
inc
imul
add
add
je
imul
push
jo
arpl
add
dec
leave
std
pushl
lea
jne
call
mov
call
lea
rcr
pop
xor
push
sub
ljmp
pop
ljmp
dec
out
daa
adc
imul
sbb
jbe
push
jne
ja
iret
repnz
fcoms
mov
mov
add
clc
lods
jg
outsb
fildll
or
cmp
jne
cmpsl
xor
sub
lock
mov
cmp
inc
push
and
or
and
sar
decl
inc
jecxz
lcall
or
orl
jmp
mov
movzbl
pusha
seto
mov
movsbw
pushf
movsbw
lea
mov
push
pushf
mov
mov
push
pop
call
add
push
je
push
outsb
ja
outsb
add
inc
dec
dec
xor
cs
insb
add
jo
idiv
add
push
gs
imul
outsl
arpl
jae
add
push
popa
imul
insb
gs
bound
arpl
lea
ja
jmp
sub
cmc
test
pusha
cmp
pushl
popl
pushf
jmp
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
jb
jno
outsb
arpl
movl
lea
jae
push
mov
movzbw
mov
pusha
mov
pushf
push
lea
jmp
add
push
insb
jae
gs
popa
insb
jne
add
add
gs
je
push
outsb
add
add
imul
outsl
jne
arpl
and
pop
jmp
add
xchg
sti
pop
push
xor
addr16
jnp
les
xchg
je
rolb
jae
mov
dec
or
mov
rcl
addr16
cmpsb
mov
sub
aaa
sub
push
loope
lods
and
cli
dec
jle
pop
jg
adc
arpl
xchg
lahf
sbb
addr16
jbe
lahf
pop
push
loop
stos
jb
pop
jbe
popf
mov
mov
or
xchg
pop
stc
loope
cmpsb
lock
cmp
xchg
scas
adc
std
ficoml
sub
lea
xchg
sub
mov
pusha
pushf
jmp
add
inc
gs
imul
inc
add
fs
jb
clc
cmp
pushf
jmp
add
push
arpl
gs
imul
inc
js
inc
js
setae
bts
mov
sar
add
bswap
add
sub
shl
bswap
bswap
mov
push
shr
pusha
cmc
cmp
mov
mov
mov
call
add
dec
gs
jo
imul
aad
pop
xor
cltd
mov
dec
dec
repz
in
inc
or
insb
cli
rcl
gs
rorl
lcall
mov
cs
mov
sbb
rcl
mov
aas
xor
sahf
mov
movsl
lret
enter
rol
jle
sub
shlb
lahf
dec
enter
jg
cld
sub
jne
fiaddl
adc
out
pop
add
addr16
call
mov
shrb
call
scas
adc
xor
fnstcw
jo
add
sub
push
rorb
xchg
jmp
pop
icebp
xchg
pop
jne
xchg
mov
xor
sub
inc
fbstp
and
push
in
pop
sub
cmp
dec
mov
mov
or
stc
dec
fldenv
add
aad
pop
xchg
inc
xchg
lods
cmc
shll
out
sub
lret
into
mov
int
mov
out
pop
rcll
daa
mov
les
out
scas
adc
clc
dec
fbld
lods
subl
les
pushl
mov
repnz
sub
mov
adc
mov
data16
add
add
stc
push
stc
divb
out
test
sub
dec
mov
lret
in
gs
jne
lea
les
inc
gs
jb
jns
outsb
jne
rol
shrd
shl
test
xor
xchg
pop
not
bswap
pop
push
mov
movzbw
pop
mov
mov
mov
pusha
pushf
call
inc
inc
dec
xor
cs
insb
add
enter
ds
jbe
outsb
lret
push
pop
xchg
ret
pop
ljmp
stos
jl
xchg
push
ficoml
lds
sub
inc
xchg
dec
jle
jno
sub
scas
mov
int3
pusha
sarb
lret
lcall
cmp
or
cmp
cmc
inc
in
clc
not
xchg
push
call
mov
movzbw
bswap
pushf
mov
mov
pushf
lea
jmp
add
dec
jae
imul
popa
bound
add
add
fs
push
dec
jne
je
inc
jns
add
inc
and
add
add
pushf
pushl
push
lea
jmp
cmc
sub
dec
neg
test
xor
setl
and
inc
mov
jmp
mov
push
lea
xchg
movzbw
pop
lea
push
pushl
popl
movzbw
movsbw
dec
mov
movl
lea
movsbw
lea
not
pusha
mov
not
not
pusha
inc
pushl
dec
movsbw
bts
rol
bts
inc
shr
lea
rcr
inc
sub
xchg
shrd
sub
mov
bsr
xchg
cmc
bswap
mov
shl
lea
pushf
push
add
add
bt
lea
mov
clc
shl
xor
movzbw
sub
sar
neg
setg
sub
sub
bsr
dec
cmc
xor
movsbw
movzbl
inc
btc
bswap
movzbw
cmc
movzbl
stc
mov
pushf
lea
jnp
stc
ror
clc
test
stc
add
pushf
jmp
mov
pushl
movl
lea
jmp
pusha
pushf
add
cmp
cmp
std
pushl
popf
pushl
mov
mov
lea
jmp
mov
call
pushf
popl
mov
pushl
popl
pusha
pushf
pushf
lea
jmp
sub
jmp
call
lea
jl
pushf
mov
pushf
lea
jmp
pushf
mov
movl
lea
jmp
pushl
lea
jne
pushf
jno
pusha
pushl
popl
pushf
lea
jmp
call
cmc
pushf
test
add
mov
inc
jmp
jmp
mov
push
mov
call
jmp
bt
add
clc
movw
sub
stc
push
xor
pushf
mov
jmp
mov
movzbw
pushf
pushf
popl
pusha
lea
mov
jmp
call
mov
pushf
push
mov
jmp
std
aaa
or
test
mov
dec
lea
adc
xchg
pop
shld
pop
aaa
btc
cmc
rdtsc
pop
std
rol
xchg
pop
lea
mov
pop
setae
lea
neg
ror
pop
xchg
bsf
pop
shl
xadd
cmc
xor
popf
bswap
bswap
xchg
pop
jmp
mov
mov
pushf
lea
jmp
sub
pushf
mov
mov
pushf
pushf
lea
jmp
movl
call
bt
test
test
sub
movb
pusha
pushl
mov
push
pushf
pushf
pushl
lea
jmp
mov
pusha
push
pushl
push
lea
jmp
neg
call
movl
pushf
pushf
push
movb
lea
jmp
movb
add
pusha
call
mov
pusha
pushf
jmp
pushf
pushf
popl
jmp
sub
jmp
jmp
pushl
popl
mov
pushf
movl
pushf
lea
jmp
push
repz
popl
call
mov
movb
jmp
movb
mov
call
cmp
pusha
pushl
add
call
call
cmp
xor
pushf
xchg
lea
jno
push
call
mov
call
call
xor
sar
shl
stc
inc
and
shl
clc
bsf
mov
push
stc
clc
sub
push
mov
movl
movw
lea
jmp
movb
jmp
bt
pushf
mov
shl
jmp
call
pushl
popl
movb
pushf
pushf
lea
jmp
pushl
popl
pushl
push
push
lea
jmp
add
movb
sub
ror
setnp
lea
rcr
movzbl
test
mov
pusha
cmc
add
pushf
mov
call
stc
call
cmc
movl
bt
add
pushf
call
pushl
pushf
mov
movb
pushf
repz
popl
movw
mov
pushf
mov
pushf
jmp
pushf
pusha
lea
jmp
jmp
adc
sar
mov
mov
bt
pushf
bt
add
pushl
clc
stc
rol
mov
not
mov
sub
jmp
pusha
jmp
mov
pusha
pushl
pushl
ret
jmp
pushf
pushf
pushf
popl
call
aas
shr
btc
pusha
mov
rol
mov
movb
bt
pushl
test
sub
pushf
shr
jmp
bt
mov
pushf
rcl
mov
clc
sub
test
shl
jmp
xadd
sub
adc
or
mov
lea
cmc
push
and
shr
sub
call
pushl
popl
movb
movb
mov
mov
lea
jmp
mov
push
push
pushl
popl
jmp
pushf
mov
mov
mov
lea
jmp
call
pushf
pushf
mov
pusha
mov
pushl
popl
pushl
movl
push
pushf
pushf
lea
jmp
pushf
pushf
repz
popl
pushf
pushf
mov
pushf
call
pushl
popl
call
movw
lea
je
stc
pushf
cmc
pushf
sub
jmp
movzbl
rdtsc
jmp
mov
jmp
call
setno
mov
shl
rcr
test
mov
jmp
call
call
push
lea
cpuid
pushf
call
xor
aad
aas
sar
mov
movzbl
bts
push
mov
call
call
mov
jmp
les
cmp
les
or
cmp
les
or
cmp
inc
jnp
or
or
inc
or
pusha
cmp
or
pop
cmp
or
jno
or
ds
push
cmp
les
cmp
inc
jnp
or
or
aas
or
cmp
or
mov
cmp
les
or
cmp
les
or
cmp
or
or
pop
aas
or
cmp
add
cmp
or
or
cmp
or
cmp
les
or
aas
or
or
push
cmp
les
cmp
add
cmp
or
cmp
test
cmp
inc
mov
cmp
les
or
or
pop
cmp
or
ds
pop
cmp
or
cmp
or
jno
or
cmp
test
cmp
add
cmp
test
cmp
inc
js
or
pusha
cmp
or
or
or
pop
or
inc
or
cmp
add
aas
or
ds
mov
cmp
or
or
or
or
or
cmp
or
cmp
les
cmp
les
cmp
les
or
or
cmp
les
cmp
inc
push
inc
or
cmp
or
or
sub
or
adc
cmp
or
pop
cmp
or
pop
aas
or
cmp
les
or
cmp
or
ds
mov
inc
or
aas
or
or
cmp
test
inc
or
or
cmp
inc
test
cmp
les
or
cmp
or
cmp
or
cmp
test
or
or
cmp
inc
or
or
or
or
sub
or
inc
or
aas
or
or
or
aas
or
or
cmp
add
aas
or
or
or
aas
or
or
or
aas
or
or
cmp
or
or
or
or
aas
or
or
pop
cmp
or
aas
or
or
cmp
or
aas
or
or
cmp
or
aas
or
or
cmp
inc
sarb
or
aas
or
or
or
pusha
cmp
or
or
or
aas
or
or
or
aas
or
or
pop
cmp
or
aas
or
or
cmp
add
aas
or
or
or
mov
cmp
add
aas
or
out
cmp
or
or
cmp
add
cmp
or
aas
or
or
aas
or
cmp
test
cmp
fdivrs
or
or
or
ds
adc
or
or
or
adc
cmp
inc
sarb
or
or
pop
aas
or
mov
aas
or
sub
or
adc
and
popl
push
lea
jmp
pushf
pusha
cmc
movb
pushl
popl
pushf
jmp
call
mov
pusha
mov
call
mov
pusha
lea
jmp
pusha
add
pusha
mov
push
lea
jmp
cmp
sub
pusha
clc
neg
jmp
lahf
mov
pushf
pusha
add
pushf
jmp
jmp
jmp
pusha
pushl
pushf
mov
pushf
pushf
pushf
lea
jmp
movb
call
mov
jmp
call
mov
movb
mov
lea
jmp
pushf
jmp
pusha
jmp
jmp
mov
call
jmp
mov
pusha
pushf
pushf
mov
mov
movb
mov
jmp
inc
sar
mov
clc
call
pushf
jmp
not
cmc
pusha
sub
cmc
pusha
and
call
push
push
mov
pushf
mov
mov
lea
jne
push
pushl
popl
push
movl
push
push
push
lea
jmp
mov
call
mov
mov
push
movb
movb
pushf
mov
jmp
add
setbe
pusha
mov
bt
add
jmp
jmp
push
call
pushf
clc
sub
call
push
pushl
mov
pusha
push
lea
jmp
aam
mov
shr
cmp
rcr
mov
jno
push
bt
clc
add
pushf
call
call
repz
popl
mov
xchg
movzbw
dec
dec
mov
setle
movzbl
mov
call
mov
pushf
pushl
pushf
pushf
mov
push
jmp
pushl
popl
push
call
add
jmp
jmp
cmc
cmp
pushf
test
sub
pushf
neg
pusha
add
mov
inc
test
jmp
neg
mov
rcr
add
sar
sub
shld
movzbw
and
xor
pusha
inc
bt
add
sbb
add
xor
mov
test
add
mov
pusha
pushf
call
add
test
jmp
not
mov
call
jmp
jmp
push
repz
popl
pushf
jmp
bsr
stc
mov
test
mov
call
shl
shr
btc
mov
clc
add
push
lea
jmp
mov
call
mov
cld
cld
jmp
cmc
lea
jne
sub
jg
sub
bt
bt
cmp
stc
neg
jmp
call
call
pushl
popl
push
movb
movl
push
movb
push
pushf
lea
jmp
mov
pushf
pushl
popl
pusha
movb
mov
movl
lea
jmp
mov
jmp
shl
mov
adc
add
not
sets
setno
call
mov
pushf
popl
call
cmc
clc
or
lahf
mov
inc
not
cmp
mov
stc
pushf
call
cbtw
bt
sub
ja
cwtl
cmp
jmp
mov
not
cld
not
call
dec
pusha
shl
lea
pusha
clc
cmp
jmp
mov
pushl
mov
mov
mov
pushf
call
call
sbb
shr
sbb
shl
mov
push
call
clc
bt
xor
pushl
add
bt
pushf
cwtl
test
pushf
cmp
sub
jmp
sub
pushf
movb
shr
jmp
pushf
pushl
popl
pushf
pushl
lea
jmp
call
pushf
push
mov
pusha
pushl
pushf
popl
jmp
setle
sbb
bsr
shld
movzww
test
pushf
stc
push
xor
movw
bt
ror
stc
xor
jmp
pushf
movzbw
mov
movb
divl
pusha
call
pushf
mov
mov
jmp
pushf
movl
movb
pushl
movb
lea
jmp
call
pusha
pushf
pushl
popl
jmp
mov
pushf
pusha
mov
push
jmp
push
pusha
pusha
pushl
movl
pushl
call
jmp
push
mov
movw
mov
jmp
bswap
mov
rol
rcl
mov
test
add
pushf
movw
jmp
inc
bt
stc
movb
sub
jmp
mov
call
push
pushf
mov
jmp
inc
jmp
jnp
cmp
pushf
sub
jmp
mov
pushl
popl
movl
push
movl
pushf
push
pushf
movl
lea
jmp
call
mov
pushf
pusha
lea
jmp
pushf
popl
movb
call
pusha
push
pushl
lea
jp
push
pushf
call
or
jmp
pushf
pushf
lea
ja
aam
cltd
mov
bt
btc
lea
not
jmp
pushf
pusha
mov
push
mov
pushf
pushl
mov
call
rcl
cmp
add
push
jmp
call
call
movb
mov
mov
push
jmp
push
movb
mov
jmp
pushl
movl
mov
movb
mov
mov
mov
jmp
lea
ja
pusha
mov
push
call
call
mov
pushl
pusha
lea
jmp
mov
pushf
mov
lea
jmp
add
movzww
cmp
push
push
mov
xor
jmp
mov
call
mov
mov
mov
pushf
call
bt
sub
pushf
pushl
mov
pushl
mov
lea
jmp
pusha
sub
lea
jnp
pushf
cmp
shr
call
call
pushf
movb
mov
pusha
movb
mov
push
mov
movb
repz
popl
jmp
push
pusha
pushl
popl
mov
pushf
movb
lea
jmp
pushf
movl
push
lea
jmp
lea
jo
pusha
mov
pushl
popl
pusha
movl
pushf
mov
push
lea
jmp
jmp
pushl
pushf
mov
pushf
mov
push
mov
pushl
ret
pusha
mov
push
lea
jmp
push
lea
jne
pushf
push
repz
popl
pushl
mov
movw
movb
mov
jg
push
mov
push
pushl
pushf
pusha
mov
jmp
pusha
movb
pusha
pushl
popl
movb
jmp
pushf
mov
push
mov
mov
pushf
call
add
call
shrd
and
mov
dec
mov
jge
add
jmp
stc
stc
neg
mov
test
sub
call
mov
call
pushf
popl
jmp
jmp
pushf
add
pushf
pushf
call
add
add
push
call
mov
pushl
pusha
mov
movb
lea
jne
btc
shl
dec
mov
pusha
and
bt
jmp
call
jmp
stc
dec
mov
shrd
mov
mov
cmc
neg
mov
jmp
call
jmp
mov
mov
call
push
call
cmc
sbb
sar
stc
mov
pusha
sub
call
mov
movb
call
movw
lea
jno
repz
pushf
mov
call
mov
movzbw
add
push
pusha
pushl
bts
rol
shl
shr
rcl
not
xor
bts
btr
sub
pushf
setg
pushf
movsbw
inc
mov
add
test
add
test
clc
adc
ror
mov
jmp
movb
push
jmp
inc
jmp
pushl
mov
pushf
mov
mov
jmp
jmp
jmp
push
mov
pushf
pushf
mov
call
pusha
sub
clc
mov
cmc
bt
sub
clc
pusha
test
push
neg
pushf
pushf
add
call
movb
xchg
jmp
bt
jmp
call
pushf
test
cwtl
pusha
test
call
call
push
movb
movb
pushf
lea
jne
bswap
bt
xorb
pushf
mov
movb
lea
jmp
repz
popl
pushf
jmp
pusha
movb
mov
pushf
pusha
mov
push
repz
popl
call
jmp
neg
push
clc
test
movzbl
clc
pushf
call
pusha
cmc
ror
call
movb
mov
call
pusha
mov
pushf
jmp
pushf
push
movl
push
pushf
lea
jmp
mov
movw
pushf
lea
jmp
pushf
call
add
call
mov
pushf
popl
pusha
pushl
popl
mov
push
pushf
movb
lea
jmp
push
sub
pushl
movb
push
mov
movb
pushl
lea
jmp
mov
mov
pushf
lea
jmp
sub
call
call
ror
xor
shrd
mov
or
mov
jmp
call
pushf
stc
jmp
mov
mov
call
mov
push
mov
push
push
movb
mov
mov
pushf
call
mov
movb
lea
jmp
cmc
jmp
bt
mov
call
jmp
jmp
call
jmp
mov
pushf
pusha
pushf
pushf
popl
call
stc
test
pusha
xchg
pushf
mov
sub
jno
push
cmp
stc
stc
cmp
sub
jmp
call
mov
rdtsc
xchg
mov
pusha
jmp
jmp
dec
mov
pusha
bsf
mov
pusha
bt
add
lea
js
pushf
mov
mov
pushf
lea
jmp
cmc
call
mov
pushf
pusha
mov
movl
repz
popl
movw
movb
mov
mov
jmp
push
pushl
popl
mov
movl
mov
pushf
mov
pushf
lea
jmp
jmp
rol
mov
dec
setle
not
mov
shl
mov
clc
add
push
cmp
shld
pusha
pusha
mov
call
rep
adc
neg
or
std
mov
movsbw
mov
cld
pushl
popf
mov
mov
movw
movb
lea
jmp
mov
pusha
repz
popl
mov
mov
pushf
movb
mov
jmp
rcr
mov
call
rol
cmc
call
call
mov
push
pushl
mov
call
repz
popl
movb
pushf
mov
mov
movb
mov
pusha
mov
jmp
pushf
pushf
mov
pusha
lea
jmp
bt
sub
jmp
stc
ror
pushf
bt
cmc
pusha
add
jmp
pushf
pushl
popl
push
push
pushf
lea
jmp
btr
dec
add
rcr
notl
cmc
shrd
aad
push
mov
movl
clc
bt
cmc
sub
movw
movl
and
push
jmp
call
mov
pusha
mov
pushf
pushf
movb
movb
lea
jmp
pusha
call
pushf
mov
jmp
call
pusha
movl
mov
pusha
mov
lea
jmp
pushl
mov
push
pushf
pusha
pushl
ret
call
bswap
shld
setno
call
pushf
sub
jmp
mov
push
mov
mov
call
cmp
lea
jg
push
lea
jne
and
shrd
bts
xorb
movzbw
pushf
mov
pushf
pushf
pusha
lea
jmp
call
not
xchg
setp
push
xchg
jmp
pushl
popl
movw
push
push
pushf
lea
jmp
aaa
bswap
sar
mov
mov
stc
push
add
push
push
clc
call
cmc
push
bt
call
jmp
mov
inc
pushf
clc
sub
cmc
sub
jmp
call
jmp
pusha
pushl
mov
jmp
pushf
mov
jmp
ror
movsbw
sub
btc
clc
jmp
mov
mov
movb
push
lea
jmp
mov
btr
bt
adc
mov
cmp
add
pusha
jmp
push
pushl
popl
pushf
pushf
lea
jmp
mov
pushf
mov
pushf
lea
jmp
movzbw
pusha
mov
stc
clc
clc
sub
cmc
add
pusha
pushf
popl
pushf
pushl
popl
movl
movb
movb
pushf
lea
jmp
movb
mov
pushf
pushf
lea
jmp
mov
push
pusha
push
lea
jmp
add
mov
btc
movsbw
mov
push
not
pushl
pushf
bt
bt
not
bt
stc
and
jmp
pushf
popl
call
mov
movb
pusha
lea
jmp
pushf
call
clc
test
neg
pushf
sub
pushf
cmc
sub
call
call
mov
bt
sub
push
jmp
pushf
popl
jmp
clc
cmp
add
pusha
push
mov
push
lea
jmp
push
call
pushl
popl
movb
movb
lea
jmp
mov
pusha
push
jmp
add
clc
clc
bt
xor
push
clc
rol
stc
test
push
xor
jmp
dec
rol
sub
bswap
cmc
cmc
neg
shrd
jmp
call
mov
pusha
jmp
mov
jmp
mov
mov
jmp
xchg
xchg
std
mov
mov
mov
pushl
cld
lea
pusha
call
adc
shl
bt
mov
cmp
mov
stc
pushf
sub
add
je
shl
call
pushl
popl
pushf
push
lea
jmp
mov
push
jmp
sub
call
mov
pusha
push
movb
movb
pushf
popl
call
jmp
mov
lea
ja
push
pushl
popl
pusha
push
movl
pusha
pushf
mov
mov
lea
jmp
pushf
pushf
mov
jmp
pushl
pushf
popl
pusha
pushf
call
movl
movb
lea
jmp
mov
pushf
push
pushl
popl
push
jmp
movsbw
cwtl
pop
movzbl
pop
push
pushl
ret
pusha
mov
pusha
pushf
movl
pushf
lea
jmp
push
mov
pushf
push
lea
jmp
not
jmp
mov
add
pushf
push
jmp
push
pushl
pusha
call
mov
jmp
bt
sub
push
pushf
push
jmp
mov
movl
push
movb
movb
pushf
lea
jmp
sub
pusha
call
mov
push
push
push
mov
jmp
push
call
call
inc
test
test
bt
jmp
jmp
rcl
adc
sar
rol
mov
call
add
jle
stc
test
neg
jmp
pushf
pusha
mov
movb
call
mov
jmp
push
call
movb
jmp
add
bt
pushf
shrd
mov
mov
call
sub
cmp
sub
jmp
pusha
pusha
jmp
pushl
neg
bts
shl
jmp
pushl
popl
pushf
lea
jmp
pushf
popl
jmp
clc
add
pushf
inc
bt
pushf
cmp
call
pushf
push
push
pushf
popl
jmp
movb
mov
jmp
jmp
jmp
mov
jmp
pushl
mov
pushf
pushl
mov
mov
push
jmp
jmp
neg
mov
and
sub
mov
clc
sub
stc
add
push
pushf
jmp
movb
mov
pushl
push
movb
mov
pushf
lea
jmp
mov
push
lea
jmp
pushf
pushl
popl
pushf
movl
push
push
movb
pushf
lea
jmp
pushf
mov
push
movl
pushl
ret
add
call
pushf
mov
push
pushf
jmp
pusha
movb
seto
mov
pop
mov
jmp
not
mov
pusha
lea
pusha
pushf
mov
mov
mov
push
lea
jmp
call
pushl
popl
jmp
jmp
mov
push
pushf
mov
pushl
ret
jmp
call
pusha
lea
jne
push
pusha
jmp
call
xor
mov
movsbw
push
cmc
sub
call
test
jmp
push
pusha
jmp
daa
dec
mov
rcl
rcl
rol
mov
cmp
stc
bt
push
sub
bt
pushf
pusha
cmc
shl
pushf
pushf
call
mov
movb
movl
call
jmp
mov
pusha
pushf
call
jmp
mov
jmp
mov
mov
call
lea
pushf
pushf
mov
movb
lea
jmp
jmp
pusha
cmp
push
stc
shl
jmp
pusha
shr
movb
movw
pusha
mov
movb
movb
pushf
popl
pushf
push
pushl
popl
push
mov
movb
movb
lea
jmp
pushl
pushf
mov
call
push
lea
jns
mov
pushf
mov
pushf
pusha
pushf
lea
jmp
mov
call
mov
call
mov
mov
pushl
popl
call
pushf
dec
bt
pusha
xor
test
jmp
pushf
mov
jmp
push
jmp
push
jmp
pushf
cmp
mov
add
ja
cmc
sub
jmp
push
lea
jne
push
test
pushl
sub
jmp
pusha
movb
mov
pusha
call
pushl
mov
mov
mov
repz
popl
pushf
movl
movb
mov
mov
jmp
movl
pushf
mov
lea
jmp
sub
pushf
cmp
cmp
stc
cmpl
pushl
mov
push
mov
mov
mov
call
movw
pushf
pushl
popl
pushf
push
lea
jmp
mov
bt
sub
pushf
mov
pushf
pushf
lea
jmp
mov
pushl
mov
lea
jmp
cmp
mov
jmp
pushf
popl
pushf
pushl
popl
movw
mov
mov
pushl
lea
jmp
call
pusha
mov
call
pushl
mov
movb
mov
jmp
call
pushl
mov
call
