add
or
mov
add
add
add
add
add
rolb
add
mov
add
mov
add
and
add
adc
add
xor
add
rorb
add
jo
add
add
add
add
add
add
add
add
add
mov
add
mov
add
fadds
add
add
add
add
add
add
add
add
add
mov
mov
or
add
in
add
add
add
add
add
add
add
enter
sbb
add
add
add
add
add
add
add
add
lock
add
mov
push
add
add
add
add
add
add
add
add
add
xor
add
pop
add
addb
add
addb
addb
add
add
add
add
add
add
add
add
add
add
dec
add
add
add
in
add
add
add
add
add
add
add
jo
add
mov
add
add
add
add
add
add
add
add
add
cwtl
add
add
or
xor
add
in
add
add
add
add
add
add
add
rolb
add
xchg
or
mov
add
in
add
add
add
add
push
add
or
sbbb
addb
add
addb
orb
add
test
add
rolb
add
clc
add
xorb
and
add
dec
add
xorb
add
add
cwtl
add
cmpb
add
add
cmpb
add
add
add
add
adc
adcb
add
cmp
adcb
add
pusha
add
adcb
add
add
add
add
add
add
add
add
add
add
jo
add
aam
or
insb
add
add
add
add
add
add
add
add
add
cwtl
add
add
or
dec
add
add
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
call
xchg
or
pop
add
add
add
add
add
add
add
add
add
adc
add
and
or
pop
add
add
add
add
add
add
add
add
add
cmp
add
jl
or
pop
add
add
add
add
add
add
add
add
add
pusha
add
add
lcall
in
add
add
add
add
add
add
add
mov
add
sub
or
pop
add
add
add
add
add
add
add
add
add
mov
add
test
add
in
add
add
add
add
add
add
add
fadds
add
fcompl
add
in
add
add
add
add
add
add
add
add
add
or
pop
add
add
add
add
add
add
add
add
add
sub
add
add
in
add
add
add
add
add
add
add
push
add
add
or
mov
add
add
add
add
add
add
add
js
add
sub
add
in
add
add
add
add
add
add
add
mov
test
add
in
add
add
add
add
add
add
add
addb
add
adc
add
cmp
add
pusha
add
add
mov
add
add
add
add
add
add
add
add
add
add
or
call
add
add
add
add
add
add
add
sub
or
sub
add
in
add
add
add
add
add
add
add
push
add
or
sub
add
in
add
add
add
add
add
add
add
js
add
adc
add
in
add
add
add
add
add
add
add
mov
mov
add
add
in
add
add
add
add
add
jg
add
rolb
add
clc
add
add
add
add
add
add
add
add
add
add
call
mov
add
in
add
add
add
add
add
add
add
adc
add
insb
mov
add
in
add
add
add
add
or
xchg
add
add
add
add
add
add
push
add
clc
push
add
and
add
dec
pop
add
jo
add
cwtl
pop
add
rolb
addb
add
call
add
add
add
add
add
add
add
add
add
cwtl
push
add
lock
add
in
add
add
add
add
add
add
add
rolb
add
add
add
add
add
add
add
add
add
add
call
mov
add
in
add
add
add
add
add
add
add
adc
add
add
add
in
add
add
add
add
add
add
add
cmp
add
in
mov
add
in
add
add
add
add
add
add
add
pusha
pop
add
pushf
enter
add
add
add
add
add
add
add
add
add
mov
add
push
leave
or
int3
add
add
add
add
add
add
add
add
add
mov
add
sbb
or
mov
add
in
add
add
add
add
add
add
add
fadds
add
ror
or
loop
add
in
add
add
add
add
add
add
add
add
add
mov
or
mov
add
in
add
add
add
add
or
add
add
js
add
mov
sldt
enter
adc
add
lock
adcb
add
sbb
add
inc
or
sbbb
add
push
sldt
nop
or
sbbb
add
mov
sldt
loopne
add
or
add
add
add
add
add
add
add
add
add
nop
or
add
or
push
add
add
add
add
add
add
add
add
add
mov
int
add
add
in
add
add
add
add
add
add
add
loopne
add
mov
add
add
add
add
add
add
add
add
add
or
add
xor
or
les
add
in
add
add
add
add
add
add
add
xor
add
clc
iret
or
sub
add
in
add
add
add
add
add
add
add
pop
or
add
or
inc
add
add
add
add
add
add
add
add
add
orb
add
add
add
in
add
add
add
add
add
add
add
test
add
lods
rorb
add
add
add
add
add
add
add
add
add
rorb
add
adc
or
fadds
add
in
add
add
add
add
add
add
add
clc
or
add
aam
add
add
in
add
add
add
add
add
add
add
and
add
cld
aad
add
add
in
add
add
add
add
add
or
add
add
orb
addb
add
test
add
add
add
add
add
add
add
add
add
jo
add
and
or
adc
add
in
add
add
add
add
add
add
add
cwtl
or
add
or
adc
add
in
add
add
add
add
add
add
add
rorb
add
or
and
add
in
add
add
add
add
add
repnz
cmp
add
and
add
dec
or
addb
add
add
add
add
add
add
add
add
add
adc
add
insb
or
xor
add
in
add
add
add
add
add
add
add
cmp
add
pushf
or
adc
add
in
add
add
add
add
add
add
add
pusha
or
add
add
add
add
add
add
add
add
add
add
mov
add
add
add
add
add
add
add
add
add
mov
pop
push
add
add
in
add
add
add
or
push
add
pop
add
add
inc
add
add
add
dec
add
pop
add
add
inc
add
pop
add
push
add
push
add
dec
add
inc
add
inc
add
or
inc
add
inc
add
push
add
add
dec
add
dec
add
inc
add
add
push
add
pop
add
inc
add
push
add
dec
add
pop
add
dec
add
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
mov
add
je
jb
imul
inc
add
insb
add
dec
add
data16
add
jl
add
add
xor
cmp
xor
xor
xor
xor
inc
add
add
add
add
add
add
imul
push
add
jb
jae
imul
add
add
xor
add
add
add
add
add
add
add
push
add
add
imul
inc
add
jae
arpl
jb
imul
imul
add
add
adc
mov
mov
jp
pop
add
sub
push
add
add
jb
outsl
add
add
je
dec
add
insl
add
add
add
adc
mov
mov
jp
pop
add
xor
or
add
push
add
outsl
add
add
je
push
add
jb
jae
imul
add
xor
add
add
add
add
add
add
add
add
add
add
popa
add
add
jo
jns
jb
imul
je
add
pop
dec
add
addr16
bound
and
testl
sub
imul
add
add
add
outsl
add
insl
add
outsb
add
add
add
or
pop
jg
sub
in
mov
mov
jg
push
sub
push
add
cmp
das
add
add
ja
ja
add
jns
jne
jns
popa
add
add
outsl
add
sub
add
inc
add
add
add
popa
add
inc
add
insb
add
dec
add
data16
add
add
and
add
add
push
add
popa
add
jae
insb
add
je
imul
add
add
add
mov
sbb
pop
inc
ret
gs
or
xchg
jb
mov
sub
dec
jbe
push
lret
scas
adc
dec
loopne
pop
les
popa
ljmp
dec
std
shl
scas
scas
ljmp
hlt
mov
adc
push
cmp
add
jl
xor
enter
sbb
mov
push
add
test
dec
aas
mov
dec
or
pop
inc
js
test
cmp
jl
popa
mov
mov
ret
cs
test
and
adc
pop
adc
xchg
add
push
subl
lret
pop
rcrb
xchg
notl
outsb
cmpsb
shll
std
xchg
add
mov
testl
or
adc
xchg
xor
xchg
cli
inc
int
cmp
repz
or
push
insb
pusha
xchg
sub
daa
test
test
xchg
loope
sbb
test
fwait
mov
dec
les
outsl
daa
mov
jb
xor
out
aas
mov
adcb
mov
sub
push
push
push
fwait
xor
scas
repz
jecxz
pushf
call
testb
ds
lahf
push
icebp
xor
mov
pop
adc
and
into
jecxz
cmp
sub
iret
out
inc
xor
test
movsb
ret
addr16
mov
cmp
mov
movsb
dec
xchg
jnp
mov
xchg
movsb
je
test
nop
xor
cmp
gs
push
pop
int
xchg
icebp
xor
sbb
cs
shll
sbb
enter
dec
inc
frstor
xchg
scas
data16
cs
outsl
xor
das
lret
ds
mov
sbb
in
sbb
dec
mov
jle
cmpsl
pop
jmp
aas
ja
std
stc
adcb
filds
xor
stos
mov
push
shl
cmp
dec
push
pop
iret
push
jae
outsb
daa
dec
add
xchg
lcall
sahf
push
test
add
aam
repnz
inc
xchg
mov
fldenv
mov
stc
push
in
test
or
aas
das
call
jle
iret
mov
mov
js
in
mov
pop
sub
adc
popf
sahf
jne
jo
sbb
sbb
xchg
push
repnz
xchg
push
mov
mov
stos
ret
dec
sub
jle
std
rcr
or
inc
mov
cli
xlat
ret
adc
xchg
push
add
lea
pop
and
loop
xchg
dec
xor
push
jns
lds
and
or
xor
stc
aas
outsl
shlb
adc
shl
loop
mov
insb
lret
sbb
or
adc
mov
jne
push
xchg
cwtl
dec
pop
pop
hlt
ss
fidivl
dec
rclb
mov
pop
insl
out
test
mov
icebp
test
stos
xor
std
adcb
lret
pop
dec
push
or
ds
jmp
pusha
repz
pop
xor
es
fdivrs
or
add
sub
in
pop
sbbl
ficompl
repz
xor
xchg
ss
or
inc
std
sub
push
cmp
sub
and
mov
loop
jns
xchg
shrb
jno
push
dec
xor
mov
fsubl
push
data16
into
cmpl
cli
xor
or
les
mov
push
jns
mov
dec
cmc
gs
in
lock
xor
xor
dec
stos
std
lea
repnz
insl
xchg
mov
daa
pushf
movsb
fdivrl
in
mov
xor
jne
int
aaa
sbb
inc
mov
pop
mov
data16
sub
xchg
push
subl
cmp
xlat
xchg
adc
sub
push
movsb
les
cmc
push
sub
repz
hlt
sbb
pushl
lock
fsubrs
bound
cs
sub
xchg
test
cmp
mov
sbb
add
pop
dec
leave
pushf
push
or
aad
inc
sub
cmp
movsl
test
inc
adc
cmp
data16
stos
jmp
imul
jecxz
sbb
push
rsm
dec
aam
and
jmp
inc
movsl
aad
xchg
sbb
cmp
sbb
scas
data16
sub
xchg
imul
lcall
sbb
mov
xor
sarb
stos
xchg
je
cli
inc
rol
jp
xchg
dec
fwait
sahf
xor
nop
test
jge
jno
xchg
and
cmp
mov
xchg
add
jg
imul
mov
push
cmpl
xchg
xchg
sub
cmp
xor
mov
cwtl
les
cmc
fisttpll
cmp
int
int3
jmp
sub
dec
dec
push
jmp
adc
mov
stc
push
mov
jle
push
cmp
gs
push
xor
mov
mov
sbb
dec
dec
and
sbb
jbe
cmp
ffreep
mov
leave
pop
pop
and
mov
push
mov
adc
loop
xor
jg
shll
mov
push
fwait
xlat
stos
xchg
pusha
into
and
sbb
sub
xchg
ret
std
xchg
scas
hlt
mov
xchg
lea
mov
or
push
dec
and
jne
fstpl
mov
jno
sub
ret
sbb
lods
enter
pop
jecxz
or
dec
scas
mov
call
test
and
lret
iret
sub
in
dec
addr16
out
orb
ret
mov
hlt
es
xchg
lds
xchg
xor
fmull
or
sarb
scas
daa
or
or
jge
in
sub
adc
inc
mov
push
popa
push
lods
mov
inc
repz
mov
jne
push
arpl
repz
pop
insb
pop
testb
xchg
dec
lds
ret
mov
shll
arpl
fstps
mov
mov
mov
jl
repnz
incl
push
sbb
orb
std
xor
xor
jae
lods
leave
mov
xor
or
out
mov
fidivrs
dec
push
mov
fdivp
iret
outsl
dec
mov
dec
call
fadds
cmp
scas
fcomps
pushf
xor
stos
jbe
mull
ret
fstpt
mov
and
sub
stc
js
lods
scas
sbb
jns
mov
cmp
xchg
sbb
scas
mov
sbb
lahf
mov
inc
and
sti
pop
cmp
popf
xchg
das
or
adcb
dec
sbb
mov
imulb
cmp
and
lods
inc
in
orb
outsb
jnp
mov
cli
add
mov
push
mov
es
stc
sbb
ret
add
xchg
push
fsts
fnstenv
ss
or
sti
inc
outsb
in
cmp
popf
mov
sub
xor
xor
cmp
test
dec
test
clc
repnz
fildl
jne
jp
shll
jbe
jno
or
leave
fst
sbb
cld
dec
xlat
push
lock
adc
scas
icebp
jno
push
nop
add
sbb
push
les
add
imull
aad
and
jne
mov
sub
ret
jle
scas
xchg
sbb
dec
adc
in
fadds
test
push
pop
jp
jbe
mov
sub
xchg
and
and
mov
sbb
lods
cltd
push
jp
or
lock
or
arpl
cltd
push
pop
and
addl
cltd
jb
test
cltd
sbb
test
imul
aad
push
int3
xor
idivb
jge
pop
in
hlt
pop
ret
sti
out
outsl
adc
fs
xchg
and
and
mov
jbe
fldt
inc
jns
shrb
daa
mov
mov
shrb
je
lcall
loopne
aaa
in
add
lret
gs
icebp
ds
les
imul
push
jne
ds
inc
sub
pop
scas
or
test
xchg
popa
mov
or
pop
mov
mov
movb
dec
mov
lock
pop
jne
rcl
jb
out
adc
fisubrl
lcall
insb
jb
sbb
mov
adc
adc
mov
xor
dec
clc
imul
out
test
lods
fnstenv
pop
lods
stos
jnp
mov
dec
inc
mov
mov
test
dec
ljmp
shll
mov
dec
xor
fisttps
hlt
decl
enter
rclb
mov
sbb
pop
push
push
and
jl
mov
mov
in
mov
and
inc
or
jns
ljmp
shl
leave
mov
in
repnz
xchg
cltd
pop
cld
mov
leave
shl
cmc
popa
and
cld
popf
mov
xchg
sahf
pop
cmp
je
inc
or
in
push
mov
imul
cmp
int
jb
or
jne
mov
mov
jmp
and
mov
push
jns
xor
lds
jp
sub
pusha
xlat
out
sbbb
jbe
insl
cmp
pop
lock
aam
mov
xor
jl,pt
inc
sbb
mov
cld
aas
adc
add
movsb
test
xor
pusha
in
push
mov
daa
loop
test
or
push
or
jbe
hlt
pop
rclb
push
inc
push
cltd
and
xor
jno
dec
test
mov
in
xchg
and
test
or
inc
icebp
push
pop
mov
push
testb
dec
jns
adc
dec
scas
mov
jb
js
xor
mov
pop
int
inc
xor
and
rcr
shrl
in
lcall
xchg
dec
cmp
inc
xlat
mov
mov
xchg
ds
lods
ret
fistpl
je
xor
push
lret
pusha
out
int3
jns
ljmp
loopne
in
fnstenv
ja
inc
jg
sub
cld
aad
stos
mov
mov
push
js
pop
push
leave
mov
xor
push
fs
mov
ret
ja
push
rcll
pop
es
adc
aas
pop
pop
imul
jmp
pop
mov
mov
lock
jmp
jae
and
fs
sub
movsb
loopne
cs
push
in
mov
mov
adc
pushaw
sbb
jo
xchg
test
jge
data16
negl
enter
or
ja
lds
out
sarl
push
div
pop
ret
nop
pop
int
sarl
scas
aam
std
and
jmp
mov
add
mov
dec
in
jge
addl
in
add
inc
inc
cld
addr16
das
xor
mov
scas
sbb
and
mov
fnstcw
add
and
add
sbbl
repz
pushf
test
and
cli
pop
rcll
mov
cltd
outsl
das
je
jge
xchg
cmp
repnz
dec
leave
pop
les
add
lock
enter
in
inc
push
and
out
mov
shl
push
or
sbbl
cmp
dec
adc
lahf
pop
jno
stos
adc
add
xchg
add
mov
sbb
fbld
xor
sti
lods
dec
xor
ficoml
cmp
scas
lds
mov
rcr
adc
ljmp
lahf
in
rorb
nop
sbb
and
mov
clc
lock
pop
dec
sub
add
out
fwait
cs
jmp
jg
xor
jns
into
mov
jge
push
jl
xchg
xor
arpl
push
jg
addr16
pop
scas
lds
xchg
pop
enter
lret
aam
or
cmp
sbb
stc
icebp
mov
movb
arpl
arpl
es
push
inc
arpl
stos
jecxz
repz
xlat
ret
loope
addl
pop
negl
xor
add
jle
addl
ret
cmp
cmpsl
cwtl
test
xchg
mov
cmpsl
cmc
mov
push
and
lret
out
dec
aas
mov
fidivs
sub
mov
mov
inc
add
mov
mov
xor
lea
jle
push
inc
inc
cmp
lods
jno
cmp
out
test
adc
add
fisubl
enter
xor
xlat
pop
mov
xor
xchg
and
test
adc
jg
mov
out
mov
into
adc
scas
lods
dec
outsl
lods
bndldx
mov
movsb
sbb
push
jno
jno
add
ja
add
sbb
mov
adc
cltd
outsl
insb
pop
dec
int3
sub
jbe
andl
or
aam
sbb
push
pop
icebp
repnz
loopne
sti
pusha
fwait
push
xor
lret
js
sbb
daa
les
into
fisubrl
mov
and
lcall
enter
xor
xor
pop
mov
dec
xchg
jo
loopne
xchg
in
movsb
inc
pop
out
sub
fsubrs
pop
xlat
and
es
dec
and
pop
fwait
popa
mov
fnstsw
leave
arpl
jge
or
dec
sbb
adc
inc
pusha
dec
out
test
mov
clc
push
xor
xchg
fsubrp
incl
xor
loop
lds
mov
mov
xor
jne
push
xchg
adc
sbb
fstl
sub
sub
mov
push
pop
xchg
jg
popa
inc
out
pop
cmp
dec
mov
subl
shlb
mov
xlat
cli
dec
inc
xchg
int3
mov
mov
jns
cmp
push
sub
aam
add
push
fiadds
cltd
scas
pop
lret
xchg
sub
jecxz
cmp
mov
jnp
divb
lds
xlat
mov
push
jmp
fxch
cmp
and
shlb
sbb
fwait
mov
mov
mov
xor
jmp
dec
jo
cs
xor
mov
out
ds
xlat
in
ss
jne
lcall
and
cltd
lea
add
mov
je
les
and
clc
lds
jge
lret
push
pop
sti
inc
mov
insl
jb
icebp
mov
jnp
pop
pop
repz
mov
adc
inc
std
in
clc
push
pop
add
mov
xorb
lds
pop
xchg
pop
shl
fwait
int
sub
add
mov
push
aaa
or
mov
ret
fdivp
push
xor
lods
xlat
rorl
loopne
loopne
cmpsb
shl
add
jo
scas
in
mov
rorb
loopne
xlat
sub
mov
mov
jae
mov
pop
bound
jns
fldt
imul
dec
inc
aas
vpshufd
cli
in
pop
aas
movsl
mov
sub
mov
pop
addl
movsl
jp
dec
mov
push
pop
jne
test
stc
lret
xlat
subl
mov
inc
and
push
pop
mov
jmp
ljmp
out
sbb
in
sub
ret
sub
and
pop
cmp
in
jne
cmp
ljmp
roll
or
adcl
in
jb
test
rcrb
test
out
mov
push
aas
mov
push
pop
jb
imul
rcl
adc
aad
rcrb
pop
fcom
dec
jne
xor
adc
jns
mov
repnz
into
leave
cwtl
push
mov
test
dec
mov
lcall
dec
push
dec
pop
jle
fimuls
adc
aaa
mov
sub
mov
daa
cmp
mov
xchg
add
mov
jne
stos
js
rclb
pusha
fcoms
sub
pusha
xchg
lahf
inc
ss
imul
cmp
xchg
and
js
and
xor
jg
jle
stc
arpl
adc
mov
into
jmp
dec
jecxz
sub
sbbl
roll
cs
inc
mov
sti
mov
xchg
push
xorl
movsl
sbb
cwtl
and
cmp
imul
je
push
fsubrp
mov
cmpb
xchg
movl
cmc
into
mov
xor
or
sub
xchg
jmp
sbb
xor
dec
jno
jle
inc
inc
dec
stos
push
add
mov
inc
fiadds
add
jae
pop
hlt
pop
jae
rcrl
cmp
cmc
jne
cmpsb
ror
mov
divb
and
mul
pop
dec
jp
pop
jmp
push
shrl
je
jg
xchg
add
cmp
push
cld
mov
imulb
jnp
addb
dec
rcl
jns
inc
or
aad
mov
inc
pop
rolb
lods
mov
xchg
mov
pop
inc
and
push
xchg
xor
cmc
push
gs
xchg
push
xchg
inc
add
gs
cld
test
lcall
pop
lods
adc
jecxz
lret
aas
cmp
or
xchg
cmpsb
stos
imul
cmc
imulb
fisttps
sub
fsubl
pop
mov
dec
pop
int
adc
inc
shl
mov
xor
lahf
shl
cmp
pop
mov
dec
adc
in
pop
js
jnp
ja
fildl
js
fwait
mov
adc
pop
jo
das
add
and
fwait
stos
jo
push
fmuls
loope
lahf
jle
sbb
pop
stos
ljmp
xchg
xchg
fwait
adc
dec
test
fstpt
jne
cli
insb
int3
test
int
mov
into
popl
jmp
ficomps
sbb
jmp
and
loope
or
xor
mov
mov
ret
xchg
repnz
dec
lahf
test
inc
fs
scas
mov
jl
cmp
xchg
mov
jno
fwait
dec
cmpsb
sub
or
and
jecxz
insb
negb
adc
sbb
scas
push
jle
jge
jle
push
aaa
sbb
adc
popf
xchg
sbb
sub
int3
inc
mov
mov
mov
push
imul
or
fstpl
xchg
inc
xchg
push
sbbl
sub
repnz
out
rorb
pavgb
cmc
mov
mov
das
aad
arpl
fadds
rcll
pop
fsts
lods
sub
jmp
sub
mov
adc
and
call
or
cltd
pop
arpl
addl
push
icebp
jns
sub
pushl
loope
dec
dec
pop
leave
mov
cld
xor
xor
lret
push
stos
js
cmpsl
dec
mov
cmc
sahf
and
and
and
rorl
lcall
clc
mov
xor
mov
loopne
inc
xchg
in
mov
ss
pop
fistps
push
push
mov
xor
cs
xchg
popf
mov
jbe
pop
jae
dec
mov
jg
dec
inc
dec
dec
xchg
idivb
sti
mov
jno
mov
ret
dec
jne
cld
sub
xchg
sbb
push
mov
sub
mov
jmp
mov
adc
mov
pop
aam
or
lods
and
test
dec
or
xchg
jbe
inc
jne
cmp
in
jge
mov
mov
fcomps
xor
insl
or
rcll
and
xchg
cmp
push
push
xchg
bound
aam
rcrl
mov
testb
jmp
cltd
or
push
mov
lcall
xchg
pop
scas
outsb
inc
jmp
icebp
and
insl
xchg
xor
gs
or
inc
in
push
sub
lret
outsl
in
aam
cmp
popa
lock
aad
jb
daa
cwtl
and
lea
and
ficomps
sahf
jle
lock
popf
out
nop
dec
xchg
icebp
xor
mov
and
mov
lds
inc
inc
sbb
lock
sub
mov
js
mov
jge
in
push
dec
add
or
pusha
in
orb
outsb
mov
pusha
sbb
mov
sbb
pop
dec
mov
cmp
pop
sub
inc
push
dec
cld
dec
jl
xchg
push
aad
jl
pusha
xchg
fs
inc
push
sub
outsl
dec
pop
adc
aad
je
push
insl
lahf
fimuls
inc
enter
fimuls
adc
mov
or
adcb
or
pop
push
in
icebp
mov
adc
cmpsb
aas
jns
add
pop
mov
adc
jns
test
imul
fiadds
fstpt
or
jns
push
fidivrs
mov
jae
sub
in
push
xor
xchg
and
push
pop
loope
je
in
xchg
ljmp
add
push
ja
mov
mov
cmp
cltd
jns
fs
mov
push
xchg
adc
xor
adc
mov
pop
sbb
mov
sbb
lock
outsl
sbb
test
add
push
inc
pop
mov
call
out
insb
inc
add
lahf
cmc
mov
adc
jo
inc
rcrb
pop
sti
dec
lret
dec
in
call
mov
insl
daa
aad
push
insl
pop
das
mov
enter
xlat
xor
pop
adc
out
imul
ret
es
lcall
sbb
aas
stos
aaa
or
repz
pop
adc
fstps
or
scas
mov
and
inc
and
xchg
mov
sbb
sub
adc
jbe
lcall
inc
jo
sbb
pusha
test
push
add
mov
push
or
mov
inc
sub
jg
aas
jecxz
arpl
push
sbb
test
cmp
cmp
push
cmpsl
loopne
outsb
popa
mov
jnp
inc
stc
sbb
and
mov
loopne
ret
popf
bound
inc
pop
stos
sub
imul
cs
jge
sbb
cmc
je
fstpl
adc
imul
push
xchg
cs
in
pop
fistps
repnz
mov
cmp
add
jo
dec
adc
mov
and
fisttpl
daa
mov
lret
sbb
in
push
cwtl
leave
add
dec
sbb
loope
add
addr16
push
add
movsb
jno
mov
mov
shll
lods
jl
mov
imul
sbb
push
scas
push
push
and
pop
mov
pop
adcl
and
or
push
movsl
pusha
loopne
mov
shrb
push
fwait
insl
jge
or
fsubrl
push
xlat
push
loopne
divb
int3
push
stos
dec
fimull
int
jne
pusha
clc
jg
dec
addl
std
mov
imul
xchg
jecxz
pop
mov
orl
pushf
push
pop
bound
rcrl
dec
pop
test
sub
sbb
ljmp
push
roll
repnz
adc
xor
cmpsb
and
data16
lret
int3
cli
scas
mov
enter
fiadds
add
adc
inc
test
mov
mov
cmp
movsl
insb
test
test
mov
cmp
negl
cs
push
lock
xor
jb
push
in
mov
inc
out
mov
mov
inc
or
test
outsl
inc
rcl
sahf
gs
mov
cmp
call
pop
outsb
loop
push
sbb
out
jle
movsb
adcl
or
xor
fldcw
shrb
mov
jbe
lcall
stos
add
test
dec
mov
lahf
stc
sub
ljmp
imul
lret
add
mov
jo
imul
push
mov
push
and
pusha
lds
mov
jae
or
loop
mov
or
in
mov
cltd
cmc
stc
aad
mov
outsl
icebp
aad
sbb
hlt
sub
inc
cmp
sbb
cs
adc
mov
pop
push
adc
fsts
pusha
jo
aam
imul
lods
loop
aas
leave
fs
ja
out
jp
popa
out
fstpl
into
movsl
sub
jle
cld
xor
mov
leave
or
sub
mov
stos
add
push
cltd
rcrb
lret
sub
mov
jno
mov
fidivl
push
and
bound
cmp
and
pop
inc
sub
sahf
out
test
cmp
pop
sbb
dec
sub
jb
decl
and
fcmovu
pop
nop
sbb
push
gs
xor
stos
pop
cs
ficoms
fcoms
lret
lahf
ror
xor
loope
xor
sub
js
mov
bound
sahf
sub
fcomip
mov
or
mov
test
mov
nop
imul
test
in
jmp
sahf
push
sub
iret
cmp
cmp
or
aam
mov
mov
add
pop
lock
add
dec
loop
subb
xor
jo
mov
mov
inc
repnz
fs
in
dec
adc
ret
popf
pop
insl
outsb
mov
or
push
sub
imul
rclb
rorb
ja
dec
add
mov
and
ret
aad
inc
insl
pop
dec
jnp
xor
push
test
sbb
adc
test
mov
inc
ficoml
cli
push
fcmove
dec
ret
push
push
push
adc
rclb
inc
out
cmp
pop
pop
push
push
nop
out
fs
mull
iret
std
xor
aam
jg
jne
push
lea
sub
sub
stc
mov
xchg
scas
pop
xchg
cmp
aas
stos
pop
pop
fdivrs
pop
stc
inc
fsts
adc
lahf
xor
leave
shll
cwtl
loopne
pop
aam
stos
push
or
aad
inc
inc
inc
shrb
mov
inc
stc
ja
dec
test
ds
stos
and
dec
je
popa
inc
and
cmp
mov
mov
add
sahf
push
insl
repnz
push
data16
pop
and
dec
lahf
test
ds
clc
xchg
mov
jae
ss
scas
xchg
aaa
mov
adc
mov
loopne
inc
popf
fwait
mov
repz
shr
clc
insb
add
rcr
aad
sub
les
adc
test
cli
out
adc
fnstsw
sub
add
comiss
sti
ror
jge
push
sbb
sub
jmp
and
push
cmpb
mov
and
jecxz
enter
test
xchg
mov
jmp
arpl
push
movsl
xor
push
inc
adc
dec
lahf
mov
daa
mov
jle
int3
nop
mov
loope
fcomps
sbb
jge
sub
lret
push
shl
loop
loope
popf
inc
push
push
dec
fcmovnu
jle
cmp
push
mov
mov
pop
and
push
stc
loop
lcall
mov
lea
inc
stos
push
incb
sub
test
insl
mov
es
stos
outsl
inc
mov
mov
data16
roll
or
add
add
lcall
jecxz
fdivrl
les
cli
scas
adc
and
adc
cld
outsb
cmp
in
and
aad
mov
lock
xor
and
sar
mul
jno
inc
hlt
les
jmp
leave
adc
cmp
add
sarl
call
pop
test
adc
popa
mov
icebp
test
ret
push
sub
mov
loopne
aas
popf
xor
cmpsb
rol
mov
enter
in
jmp
test
mov
rcr
stc
sbb
jnp
dec
sub
ss
sbb
dec
mov
sbb
push
mov
xor
adc
stc
in
inc
dec
out
out
out
pop
mov
sub
xchg
subb
sbb
pop
daa
or
cmp
and
dec
sub
jne
or
mov
cmc
shll
mov
inc
out
scas
cmp
sub
xor
cmp
xorb
jecxz
cmp
pop
ret
adc
sub
fdivr
call
or
xor
jp
pop
cmpb
lcall
clc
cmp
add
cmp
mov
mov
sub
xchg
ss
mov
inc
stos
or
jmp
sbb
imul
fcoml
sub
test
cmp
dec
out
lods
mov
call
mov
sub
out
dec
mov
xchg
aaa
add
lods
add
stos
xorb
lret
int
add
out
sbb
insb
mov
inc
or
pusha
mov
fcoml
cs
daa
mov
sub
imul
sub
pop
xchg
ljmp
ret
ret
fisubrs
mov
loopne
aaa
in
add
xor
cmp
in
lcall
aaa
push
pop
jg
fwait
ret
lea
xor
cld
cld
lods
adc
test
jge
jge
jmp
inc
ja
aad
gs
mov
enter
cmp
adc
pop
jno
sub
and
imul
jbe
xchg
icebp
std
jo
push
jle
and
into
int3
adc
ljmp
adc
jge
push
pusha
dec
out
inc
inc
mov
pusha
xchg
add
or
ljmp
jmp
xchg
jge
jb
dec
jo
add
mov
push
test
fwait
or
jbe
dec
sbb
subl
icebp
fimuls
scas
add
or
fdivrp
rdpmc
push
dec
adcl
das
dec
mov
xchg
push
fldl
aaa
jge
add
jnp
push
cmp
sub
push
mov
fsts
xchg
cmp
mov
jl
push
shrl
sub
scas
lock
mov
dec
dec
cmp
push
cmp
dec
insb
push
roll
xor
popa
pop
inc
sbb
and
or
jbe
xchg
bound
mov
pop
jne
xor
mov
lock
loopne
icebp
add
inc
out
adc
ljmp
das
lret
mov
pusha
push
inc
dec
fsubl
scas
enter
out
jg
andb
cmpb
push
mov
and
and
cmp
push
and
xor
cmc
or
adc
dec
aaa
setp
inc
dec
adc
rolb
add
iret
push
movsl
sub
sahf
sbb
mov
mov
push
fidivrs
rorl
inc
xor
aas
fists
dec
xchg
int3
add
xchg
jle
push
mov
mov
jg
mov
int3
enter
cltd
add
int
cwtl
push
addb
jl
pop
or
and
mov
je
dec
out
inc
adc
add
test
jo
push
inc
andl
lea
loopne
imul
mov
fidivrl
xlat
cld
cwtl
and
mov
add
lods
cmp
int3
test
xlat
lret
ret
push
cmp
sbb
push
mov
ja
loope
sahf
pop
sub
dec
lret
icebp
loop
popa
jmp
jno
add
pop
or
stos
cwtl
jecxz
inc
pop
and
bound
jl
jg
mov
decb
repnz
inc
pushf
pop
mov
pop
push
mov
inc
push
pop
cmp
mov
outsb
test
into
fistpll
sub
loope
hlt
ds
outsb
aam
subl
mov
sbb
jne
jae
jnp
and
mov
mov
dec
adc
cltd
mov
xor
dec
adc
or
push
sub
or
dec
es
das
jne
mov
and
ja,pn
push
push
repz
pushf
adc
scas
mov
adc
dec
decl
cmp
in
add
ficoml
es
mov
cmc
jl
les
aad
add
les
add
add
mov
pop
dec
iret
mov
xor
out
int3
inc
and
adc
rcl
std
push
sbb
iret
cld
jae
pop
out
and
in
mov
push
and
dec
int3
lahf
out
xor
mov
jb
inc
jle
les
inc
je
gs
sub
in
sbb
stos
push
enter
xor
sbb
mov
jae
cmp
out
jmp
xor
pop
pop
mov
gs
arpl
cmpsb
test
pop
aam
dec
loope
push
xchg
ja
stos
push
jo
and
jns
push
cmp
mov
cmp
mov
xchg
frstor
xchg
xchg
ss
sbb
cmp
cmpsl
push
in
mov
jge
mov
inc
rorl
insl
shlb
sarl
cmpb
mov
sarl
inc
jns
push
mov
les
mull
hlt
movsl
dec
sub
jns
aam
aad
cmp
xor
frstor
sub
sahf
outsl
or
cmc
push
and
and
mov
out
scas
in
jle
andl
in
aad
aam
jge
adc
cmpsl
dec
sbb
add
mov
lods
sbb
pop
inc
push
xchg
dec
mov
jg
push
stc
ret
inc
je
in
test
sub
dec
adc
push
ficompl
aad
jmp
insl
insl
mov
sbb
push
inc
movsl
mov
arpl
int3
mov
xchg
roll
dec
add
push
adc
jne
movsb
pop
adc
sbb
dec
cmp
aam
mov
xchg
fldt
outsl
repnz
jle
aas
xor
psrlw
inc
cmp
loop
sub
pop
sbb
cwtl
repz
jl
jno
fldl
int
stc
inc
pop
fsubrl
pop
and
push
or
adc
xor
cmp
cmp
sub
sbb
mov
sbb
aam
enter
rorb
push
add
test
mov
adc
ficompl
lods
dec
call
insl
adc
mov
and
scas
mov
ljmp
xchg
xor
bound
fnstsw
icebp
test
adc
mov
dec
out
push
and
push
pop
lds
iret
in
cmp
imul
inc
mov
pop
xchg
cmp
mov
mov
jmp
xchg
lea
sub
xchg
dec
jg
dec
int3
ds
push
notb
or
stc
test
fistl
sbb
jp,pn
jle
pop
jge
in
jecxz
xlat
cmp
cs
jle
mov
push
sbb
inc
pop
repz
subl
outsl
pop
fcomps
and
dec
outsl
add
dec
pop
add
jae
andl
les
sub
push
std
nop
adc
fdivrl
fwait
shlb
jecxz
jp
jnp
decl
sti
div
add
int3
imulb
test
xchg
pop
mov
scas
sub
fldl
lret
cmc
push
add
mov
aaa
rolb
mov
addr16
push
push
mov
xchg
mov
or
lds
push
cld
jp,pt
xchg
sarb
pop
jns
mov
or
hlt
fcmovu
cmp
mov
fsubp
lock
jo
mov
jmp
mulb
loop
push
push
and
ret
cs
mov
mov
lcall
sahf
dec
or
push
jns
sbb
cmp
jg
xchg
outsl
xchg
out
clc
pop
sahf
dec
dec
pop
fistpl
lds
jmp
lods
xor
ret
cmp
fwait
dec
lret
push
shrl
sarl
mov
adcl
aas
and
pop
inc
push
inc
cmp
insl
mov
mov
xchg
inc
xchg
sbb
jnp
and
popf
insl
in
ljmp
loope
jnp
shl
out
call
jno
adc
lea
jmp
fldenv
test
mov
in
std
mov
adc
pop
xchg
out
jae
mov
pushf
xchg
add
sub
xchg
jl
or
xchg
jb
sbb
sub
dec
jl
sub
jge
add
cmp
jge
and
or
cs
pop
xchg
or
push
lcall
mov
mov
hlt
pop
lods
mov
sahf
jle
dec
xchg
jo
mov
jecxz
outsl
aas
imul
std
dec
add
jg
pop
push
dec
push
les
jne
push
lret
es
cmpsb
out
rclb
cli
dec
or
xor
push
imul
sbb
jecxz
addr16
fnstcw
clc
cmp
adc
dec
mov
popa
xchg
add
or
mov
cld
or
push
or
mov
add
adc
sub
add
ror
xor
cmp
or
outsb
cmp
fists
pop
adc
jo
push
adc
lcall
in
xchg
out
cmp
in
gs
daa
dec
cmp
aaa
je
mov
ljmp
mulb
mov
in
cmp
mov
fistpll
dec
push
out
cltd
aam
ffree
or
push
cmp
enter
aam
das
pop
out
sub
xchg
std
fcompl
jbe
inc
inc
lea
cmp
mov
mov
ja
dec
je
sbb
imul
popf
or
in
cmp
push
in
pop
sti
loop
pop
mov
cwtl
xor
mov
sub
or
jle
es
jo
aas
sub
push
mov
pop
jno
fisttps
dec
hlt
imul
out
cmp
jns
sub
mov
sbb
scas
inc
mov
jo
or
repz
fistpl
loop
push
cltd
jbe
sbb
adc
and
cltd
add
dec
and
xchg
mov
and
adc
mov
sbb
push
add
cld
xor
push
push
mov
ficoms
in
inc
outsb
rcll
stc
out
test
sbb
xor
int
or
lret
sub
inc
test
xchg
dec
popa
sarl
sbb
jnp
cwtl
sbb
dec
insl
or
xchg
mov
fldcw
fadds
popl
push
andl
cltd
negl
add
stos
in
cmpsb
stc
sahf
gs
fnsave
stos
aad
sbb
cli
and
mov
dec
fsubrp
cmp
jmp
dec
aaa
clc
and
xchg
adc
or
inc
adc
mov
mov
ja
lods
lea
jne
repnz
jge
jg
pop
and
out
mov
mov
cli
mov
outsl
cs
shl
inc
lea
repz
and
jbe
adc
call
add
pop
sub
fs
lahf
fcoml
pusha
push
dec
lahf
xchg
es
int3
mov
inc
xchg
jmp
or
dec
sub
dec
jae
push
vmwrite
dec
xor
cltd
xchg
xor
adc
pop
sahf
mov
mov
jl
lcall
push
xchg
mov
push
sub
or
xchg
push
das
push
incb
jp
pop
lods
int3
rcrb
add
mov
dec
add
les
dec
data16
cmpl
inc
ss
les
xor
scas
or
mov
nop
jmp
xchg
movsl
pop
arpl
enter
push
insl
adc
xchg
popf
inc
pop
xlat
or
mov
aam
or
mov
test
xchg
stos
dec
imul
cmp
fisubrs
gs
cmp
jo
dec
mov
data16
mov
popf
fsubrl
mov
pop
loopne
sti
testb
xor
jnp
cmpsl
push
repz
std
into
push
adc
sahf
cmp
clc
out
or
and
sti
adc
adc
std
inc
jnp
and
or
fcomp
les
push
cmp
xchg
xor
pop
pop
mov
jo
lret
xor
rcrl
stos
jp
pusha
sub
mov
in
mov
mov
mov
adc
mov
popa
push
pop
pop
push
rcl
inc
mov
xchg
sub
push
lea
push
ret
inc
insb
push
xchg
push
mov
sti
fs
movsb
imul
mov
pop
dec
popa
in
mov
into
cmp
bnd
gs
jbe
pop
call
mov
cmp
ljmp
int
push
arpl
push
sub
fsubl
pop
mov
fbstp
ss
adc
jl
fists
jb
xor
xor
xor
push
fwait
je
daa
xor
out
mov
xor
mov
aaa
fisubrl
out
stos
and
mov
mov
hlt
clc
call
cs
pavgb
shlb
cmp
cmpsl
test
mov
test
out
cmp
mov
lock
faddp
mov
lcall
sub
or
adcl
addb
lret
leave
repnz
icebp
jb
outsb
in
into
lcall
mov
inc
dec
sbb
xor
jnp
movsb
or
imul
outsb
inc
and
pop
or
icebp
push
sbb
mov
pop
ret
sub
test
mov
or
or
loop
ss
pushf
pusha
hlt
cmpsb
push
mov
daa
xor
jns
ret
ljmp
xor
in
data16
aad
insl
popa
lods
mov
dec
xchg
push
popf
add
sbb
test
push
dec
clc
lea
int3
pop
jnp
inc
push
inc
cmpsl
int3
lods
push
add
into
xor
xor
test
pop
idiv
mov
dec
push
sub
mov
mov
icebp
cmpb
cmpsb
cmc
xchg
dec
jle
adc
insb
jb
ds
add
add
mov
xchg
test
push
stos
inc
push
outsl
mov
test
std
or
pop
inc
ss
shlb
and
inc
xchg
ror
mov
aam
cltd
sbb
in
mov
cwtl
push
or
jg
xchg
mov
pop
out
xorl
call
pop
mov
insl
leave
lds
inc
in
sub
repz
and
adc
jne
lods
xor
sub
jno
lds
stc
in
pop
loopne
ror
dec
dec
sub
repz
xchg
or
jge
sub
lock
xor
pop
cmp
pop
pop
mov
xor
iret
mov
dec
cltd
sub
in
dec
out
arpl
mov
xlat
mov
leave
mov
push
fiaddl
or
sti
push
inc
push
pop
sub
push
jge
and
push
jl
push
mov
pop
out
inc
pop
into
das
sbbb
and
lret
mov
dec
mov
cmp
mov
pusha
jmp
and
xor
jno
lea
sub
flds
outsb
ss
aas
sub
pushf
push
xor
pop
xchg
nop
or
pop
xor
adc
outsb
push
and
movb
push
into
xchg
mov
shlb
je
pop
push
mov
xor
arpl
push
cmp
popf
inc
and
sahf
pop
cmp
sbb
ss
sbb
sub
fwait
sub
or
jbe
sbb
popl
cli
mov
adc
pop
mov
lock
dec
and
cmpsl
bound
mov
sub
out
es
ror
mov
lcall
ss
outsb
lock
cmp
sub
outsl
inc
outsl
cs
mov
adc
mov
in
xor
rcrb
insl
ficomps
push
enter
sbb
jb
fistpl
cmp
test
adc
push
shrb
repnz
mov
or
sub
aas
mov
cmp
add
mov
imul
xlat
test
xor
sbb
sbb
dec
movsb
sub
dec
dec
xchg
dec
or
sub
hlt
add
jl
in
stos
jns
scas
sbb
outsl
pop
pop
bswap
and
cmpsb
push
sub
sub
out
push
sub
mov
roll
test
popf
xor
ds
cmp
inc
enter
lock
adc
push
mov
lea
mov
dec
push
or
outsl
adc
push
mov
push
es
pop
push
push
adc
sub
xor
pop
cmp
repz
jo
adc
popa
and
adc
das
data16
xor
dec
push
pop
inc
inc
icebp
cmp
inc
dec
xchg
pop
es
dec
and
add
xchg
in
loop
out
movsl
inc
arpl
mov
mov
dec
aas
pop
idivl
stos
or
lahf
push
arpl
cmp
dec
mov
xchg
ja
cli
push
add
pop
hlt
xchg
imul
mov
xchg
leave
mov
ja
outsb
jne
push
and
testb
aaa
sub
jo
mov
lds
cmc
ja
stc
scas
mov
popl
hlt
cmp
adc
mov
lods
out
and
lds
mov
icebp
fcom
sub
cmpsl
push
outsb
push
call
inc
out
cltd
push
dec
cmpsb
fidivs
lods
daa
mov
mov
xor
mov
imul
or
add
outsl
cli
mov
mov
mov
cltd
cmpsl
mov
push
lods
jno
in
mov
push
addl
daa
ficoms
inc
fwait
imul
orl
mov
sbb
cmp
das
ja
aaa
mov
sbb
repz
cmp
into
aaa
cmp
cwtl
loopne
les
frstor
add
xor
sbbl
jl
jae
dec
or
xchg
pop
lea
int
scas
testl
je
adc
push
mov
xchg
push
hlt
lds
xchg
xchg
mov
sub
lahf
lea
jge
sub
inc
call
std
xchg
shr
or
frstor
test
xor
sbb
jmp
sbb
mov
lds
or
xlat
fidivrl
and
inc
fcmovnb
lds
sbb
sbb
sahf
and
dec
sbb
nop
test
pusha
or
daa
add
dec
inc
sahf
test
lock
lahf
je
mov
or
les
lcall
mov
push
mov
pop
gs
pop
cli
mov
adc
add
cmp
pop
add
sti
dec
test
mov
xor
mov
jmp
outsb
jl
int3
push
lods
sbb
fimull
aad
imul
mov
rorl
pushf
jle
mov
repnz
dec
enter
into
out
mov
mov
dec
cwtl
mov
xchg
imul
ss
roll
cmp
std
outsl
outsb
mov
and
in
shrl
or
shrl
test
mov
outsl
fcmovbe
mov
into
dec
jo
into
in
fcoms
out
test
filds
fldl
inc
add
jo
movsl
stos
ret
or
stc
mov
cmp
test
inc
sarl
xor
in
mov
mov
scas
je
dec
stc
and
inc
addr16
and
push
or
sub
cmpsb
cltd
xchg
jecxz
sub
lret
leave
cmp
jge
fisubrl
sbb
xchg
cltd
dec
jnp
cli
ljmp
add
in
push
cmc
cld
scas
psrad
mov
pop
pop
scas
andl
repz
movsl
fisubl
cmp
xor
fdivrs
shlb
adc
and
mov
stos
pop
jb
mov
clc
cwtl
lret
jp
mov
mov
pop
cmpsb
add
xor
inc
int
in
pop
xor
xor
and
pop
leave
clc
xchg
lock
sahf
sub
and
add
or
mov
pop
xchg
loope
lret
pop
adc
mov
mov
sgdtl
push
clc
xchg
sub
sbb
dec
mov
push
ret
aas
inc
xor
xor
xchg
aas
insl
dec
add
stos
push
sub
fldenv
sub
cltd
xchg
pop
mov
push
mov
jbe
sti
cmpsb
mull
mov
mov
and
mov
mov
or
or
push
lock
imul
out
scas
push
pop
fwait
cmc
push
jl
xor
in
outsl
repnz
outsb
xchg
mov
scas
mov
aas
fbld
cltd
and
sbb
adc
aas
fwait
push
mov
xchg
and
es
lods
mov
sarl
adc
loop
xlat
arpl
repnz
das
divl
popf
imul
or
mov
iret
push
lods
mov
push
cmc
jb
test
or
or
push
jb
jnp
sti
outsl
dec
xor
mov
mov
nop
enter
xor
pop
cmp
xor
inc
ss
arpl
sub
pop
cli
fsubl
dec
cmp
mov
sbb
insb
or
sahf
in
pop
mov
dec
add
xor
mov
pop
sbb
sarb
pop
call
add
pop
scas
push
or
scas
push
fsqrt
add
arpl
hlt
dec
xor
add
fdivr
insb
jnp
xchg
push
mov
jo
fwait
loopne
jmp
out
push
js
int3
add
mov
test
mov
push
call
sahf
aad
and
push
addr16
js
sbb
test
inc
push
mov
push
mov
mov
push
jnp
loope
mov
mov
or
in
sbb
push
push
fsts
push
repnz
mov
lods
adc
dec
cli
inc
jg
stc
add
xor
in
inc
lret
adc
jb
inc
popa
dec
fwait
lret
or
in
sbb
sti
sub
in
push
adc
cld
mov
jae
push
lcall
into
jne
ds
std
int
dec
shlb
lods
or
out
mov
into
cmp
add
inc
ss
jo
cmp
std
addb
imul
push
in
gs
shll
xchg
add
imul
push
shl
ret
push
xchg
add
and
sub
adc
lods
push
inc
mov
rclb
pushf
xchg
fildll
inc
dec
js
cmpsb
adc
mov
cmp
subl
add
or
xchg
and
stos
mov
mov
sbb
push
push
push
movsl
jmp
cmp
test
push
xchg
stos
loopne
clc
and
mov
iret
push
inc
sub
jl
stc
call
insb
data16
jle
push
test
mov
and
dec
addr16
sub
dec
mov
test
cld
repnz
or
add
dec
out
or
mov
mov
outsb
mov
mov
lcall
mov
pop
dec
ret
cmpsb
pop
pop
pop
pushf
test
repz
aas
test
mov
cmp
shl
jbe
leave
dec
rorl
jl
leave
lret
or
xchg
push
pop
add
adc
faddl
das
jecxz
inc
popf
jp
fldcw
sub
imul
lock
popa
pop
adc
lds
lods
inc
cmpsb
lret
dec
fnsave
adc
lea
iret
inc
addr16
mov
pop
mov
adc
nop
sub
inc
mov
push
frstor
nop
add
mov
repz
movsb
sub
push
or
pop
dec
mov
mov
insl
aad
je
out
out
pushf
je
fimull
scas
in
lret
pusha
cmpsl
mov
out
mov
test
xchg
or
addr16
ret
pushf
mov
scas
adc
test
das
aas
js
divl
sub
call
lods
aad
lahf
cli
adc
movsl
mov
push
fistpl
and
mov
mov
lcall
inc
or
ds
int
cmpsl
add
ja
ja
dec
arpl
insb
dec
out
jnp
push
sahf
out
lcall
pop
push
ja
add
push
dec
movsl
sub
add
insl
test
cmp
mov
lods
out
movsl
sbb
cmpsb
and
daa
mov
push
push
daa
jle
mov
sub
insl
outsl
inc
pop
dec
and
pop
push
aad
push
pop
aas
push
cmp
sub
or
inc
jo
hlt
iret
push
andb
aad
loope
jne
xchg
mov
and
add
aam
mov
mov
sub
dec
or
mov
ja
mov
jns
mov
lea
lods
fnsave
hlt
jb
mov
test
test
enter
stc
add
scas
shll
out
pusha
pop
add
sub
cmp
dec
clc
push
ds
cmp
sub
jnp
or
dec
scas
and
inc
outsb
stc
fldcw
mul
xchg
call
in
push
mov
and
cmp
jle
sub
ds
fstpl
or
das
stos
adc
mov
arpl
xor
sbb
test
inc
xor
mov
sub
sub
inc
lods
push
xor
push
aam
or
jns
dec
ret
add
ja
pop
arpl
neg
mov
dec
std
bound
xchg
notl
sub
sahf
mov
or
sbb
std
sbb
dec
cmp
es
and
fists
xor
mov
int3
push
stos
xchg
or
lods
add
sbb
inc
insb
dec
or
in
xlat
imulb
pushf
push
push
sar
sub
frstor
push
ds
xchg
push
popf
ss
lret
iret
and
cld
dec
push
dec
cwtl
sarb
stos
data16
les
mov
sub
iret
jp
pop
add
mov
mov
inc
mov
lea
das
addr16
gs
dec
inc
mov
mov
jne
xchg
test
push
mov
jle
aam
fwait
xchg
mov
add
jle
ja
arpl
push
ja
ljmp
sbb
cmp
sub
inc
ss
inc
or
ss
cli
test
mov
ds
and
push
in
ja
fistpl
or
dec
jno
sbb
out
les
imul
pop
adc
repnz
mov
cmp
cld
shrb
fbld
mov
pop
cmpsb
mov
adc
repnz
out
add
sahf
cltd
sub
mov
int3
mov
dec
push
mov
loope
pop
loopne
shrb
mov
mov
rclb
cwtl
in
cltd
cwtl
in
lds
ss
stc
std
cwtl
scas
ret
scas
clc
lock
rcl
mov
or
clc
sbb
adc
fidivrl
outsb
addl
pusha
cmp
je
pop
adc
adc
cli
mov
int
inc
pop
mov
std
insb
jl
mov
push
shl
sub
add
xchg
add
add
sub
push
add
ret
cmp
sub
rolb
notb
leave
lods
mov
push
adc
lahf
fwait
mov
data16
mov
xorl
cwtl
adc
pop
pop
popf
sti
sbb
jo
cmp
jg
add
mov
add
js
test
mov
je
cmp
xor
xchg
add
sbb
pop
jns
xchg
fistps
stos
aaa
std
fildl
fimull
dec
inc
icebp
call
fisttpl
mov
lds
mov
and
dec
movsb
loope
jmp
xchg
and
fs
xchg
jnp
das
pop
cmpl
jl
xchg
jb
pop
push
sbb
aam
aas
outsl
push
test
pop
jp
rolb
cmp
mov
lahf
inc
sbb
sub
lea
dec
enter
and
sub
jmp
sub
mov
cmc
push
jo
shlb
test
cld
ret
mov
mov
xor
and
or
push
xchg
std
fnstsw
and
cwtl
in
scas
fwait
out
arpl
xchg
fisttps
jmp
je
pusha
movsl
icebp
mov
mov
rclb
or
sbb
cmovp
or
mov
push
adc
adc
pop
sbb
enter
shlb
push
cmpsb
sub
lahf
push
or
push
inc
cltd
mov
cmp
sahf
xchg
lds
sbb
iret
push
popa
mov
repz
adcl
push
cmp
sub
fcmove
cli
or
dec
inc
mov
test
aas
sub
fmul
je
cld
ds
int
inc
pop
int3
add
pop
push
and
jo
mov
int3
push
push
dec
and
in
scas
dec
pop
or
sbb
dec
cmpsl
pop
sbb
in
push
lods
and
dec
push
in
insl
xchg
add
andl
push
mov
sar
insb
push
adc
push
push
pop
aaa
cmp
push
add
push
fisttpll
fisubl
xor
mov
jo
in
imul
inc
sbb
mov
in
and
popf
arpl
xor
xchg
es
bound
push
sarl
jae
jo
aam
sbb
jg
inc
or
fcoms
xchg
inc
sar
sub
mov
push
psrld
and
arpl
jp
aaa
adc
mov
mov
sti
push
mov
lahf
daa
lahf
iret
mov
cmp
adc
lods
int3
dec
ret
and
pop
aas
pop
and
test
xor
cltd
sti
xchg
mov
dec
xor
fld1
cmp
xor
push
jge
and
int
ficoml
hlt
push
inc
ret
nop
pop
aam
scas
rorl
int
out
cmp
out
repnz
lods
mov
cmp
in
xor
aas
xor
mov
pop
bound
test
jecxz
push
jnp
lahf
icebp
mov
andb
mov
cld
jmp
xor
repz
fdivp
lret
pusha
pop
add
push
enter
xchg
aad
mov
out
rolb
stos
mov
sub
flds
mov
mov
fdivr
sbb
push
dec
push
test
and
mov
xor
sbb
adc
in
in
lret
cmc
mov
inc
int
push
or
jo
cmp
and
cld
and
push
movsl
ret
std
inc
inc
in
add
pop
cmpb
out
mov
das
sbb
pusha
ret
push
and
xorl
jg
jp
ret
adc
minps
popa
adc
cmp
cmp
out
xor
outsb
das
scas
add
adc
cltd
push
mov
fldt
outsb
jo
por
inc
mov
pop
popa
clc
mov
jl
les
loope
test
andb
xchg
scas
test
pop
jge
daa
push
inc
mov
push
pop
cs
sbb
push
int3
xchg
fwait
sbb
fsubrl
scas
cmpsb
xchg
or
mov
insb
dec
scas
aaa
iret
adc
xor
adc
notb
jno
or
jns
mov
push
cmpsl
arpl
adc
mov
leave
insl
and
repz
std
and
fildll
pop
or
lds
adc
outsb
push
push
or
popf
mov
insb
add
push
mov
adc
ja
or
xchg
mov
sub
xchg
mov
and
je
adc
mov
cmp
inc
lods
mov
ljmp
inc
addr16
and
cltd
movsl
mov
xchg
loop
in
sbb
push
mov
movsl
fsubr
decb
adc
enter
dec
js
push
cmp
inc
cmpsl
lock
jmp
inc
mov
dec
imul
lahf
adc
mov
pop
int3
cmp
test
adc
pop
mov
cmp
loope
outsb
add
and
repz
lcall
push
cltd
mov
push
std
in
test
push
pop
imul
ret
ss
pop
bound
xorl
fwait
test
mov
or
pop
fistpl
or
pop
push
or
xchg
jns
cs
lcall
jmp
fs
push
jge
jb
jge
mov
mov
rcl
lret
js
subb
pop
mov
xor
adc
lahf
add
pusha
dec
sarl
pop
xchg
sbb
imul
imul
sub
pop
popf
ret
push
inc
inc
pusha
cmp
cmp
pextrw
jg
cmpsb
adc
in
add
mov
gs
mov
icebp
shlb
movsl
mov
mov
sbb
pushl
scas
jge
pop
roll
mov
adc
sbb
mov
push
mov
stc
xchg
add
ljmp
sbb
flds
mov
and
or
mov
or
lods
inc
movsb
outsb
lcall
in
mov
nop
xor
xor
test
lods
daa
decb
xchg
pop
test
cmp
repz
xor
cli
loop
jmp
ret
aad
nop
jmp
data16
int3
inc
or
xor
je
and
push
or
xor
cmpsl
mov
xor
fwait
jo
jp
adc
mov
ljmp
inc
inc
testb
sub
ret
cmp
js
xchg
jne
das
stc
adc
xchg
dec
lock
dec
inc
cmp
sub
push
mov
lods
test
pop
repz
daa
xor
xor
add
lock
nop
xacquire
sbb
sbb
xchg
lds
in
mov
out
pop
jns
mov
fidivrs
mov
jbe
xor
jmp
aaa
pop
inc
clc
in
add
fs
cli
hlt
inc
ljmp
dec
nop
jae
mov
lret
add
pop
mov
int
sbb
push
mov
mov
push
pop
dec
stos
es
jle
jg
lcall
gs
cltd
fists
or
push
jge
iret
inc
outsb
loopne
aas
jg
sub
pusha
pop
xchg
jge
pop
loope
push
cltd
push
sbb
add
pop
jecxz
push
mov
add
les
mov
loopne
in
aad
mov
rorb
push
gs
xor
jbe
add
sti
push
int
inc
jns
and
je
sub
mov
add
jl
lock
clc
int3
fildl
mov
sub
adc
loop
add
repz
jp
jne
jp
jno
and
dec
sub
aad
dec
lods
or
paddsw
dec
data16
xchg
mov
push
mov
pop
jne
rcrb
mov
cmp
pop
bound
sub
movsl
lods
mov
fs
lcall
mov
adc
push
mov
inc
ss
fwait
jl
xchg
lret
xchg
mov
icebp
lods
movsl
dec
aam
sub
aam
xor
leave
mov
int3
mov
enter
sbb
les
dec
clc
mov
dec
mov
inc
inc
ret
orl
and
add
dec
jle
pop
jmp
ljmp
push
push
in
test
jl
mov
js
sbb
popf
and
jl
movsl
repz
mov
in
mov
adc
sbb
iret
or
test
cmp
arpl
jne
out
decb
or
mov
fcoml
mov
out
mov
pop
cmp
xor
mov
in
or
push
mov
dec
outsl
mov
inc
notb
lret
mov
mov
fidivl
lret
cmpsl
sbb
push
pop
xlat
movsl
aaa
fwait
and
xchg
inc
hlt
mov
mov
sbb
add
fisubrs
mov
loop
ss
dec
lock
loope
cmp
jecxz
stc
ljmp
int
jne
in
pushf
cmc
lret
sbb
push
xchg
aas
cmpsl
std
ret
dec
stc
pop
leave
mov
lea
or
scas
jnp
negl
cmp
pop
mov
push
popa
hlt
push
bound
rol
sbb
lret
sahf
jg
mov
mov
sub
imul
sti
movsb
push
jne
les
lods
lret
sub
enter
inc
sub
divb
aad
xor
dec
push
outsl
aam
in
aam
inc
insl
dec
std
jle
add
adc
jo
add
aam
sti
in
in
lret
inc
or
jnp
lret
lods
jmp
xlat
insb
fadds
es
sub
jle
push
xchg
faddp
icebp
cmp
cmp
pop
cmp
push
or
scas
sahf
ja
fidivrs
sub
outsb
xchg
sarl
push
loopne
mov
xor
insb
xor
add
imul
scas
push
sub
mov
fcmovu
dec
movsl
xchg
inc
cmc
enter
fstpt
xchg
sub
xchg
sub
fwait
or
fisttpll
jnp
test
or
addr16
adc
adc
fisubrs
decl
cmp
shlb
pop
aaa
jb
jge
push
lods
out
jns
jmp
add
lret
fildll
adcl
push
xchg
inc
mulb
rorb
push
je
push
pusha
xor
pusha
shrb
into
clc
fadds
sbb
mov
sahf
add
stc
jle
jecxz
lcall
je
cmp
add
inc
jmp
cmc
jecxz
fsubrl
pop
pop
cmp
jge
addb
or
fistpll
sub
pop
jmp
sbb
pushf
xor
out
repnz
loopne
and
addr16
pop
xor
fimull
xchg
js
out
pop
cli
clc
pop
dec
xchg
cld
xchg
pop
lret
cld
ficoml
iret
cmp
into
nop
es
push
push
xor
mov
and
mov
xchg
jecxz
jae
ds
inc
daa
pop
addr16
push
adc
mov
inc
std
outsl
adc
std
lds
negl
movsb
aam
sbb
cli
sbb
mov
xchg
out
push
jns
mov
fldln2
pop
add
adc
hlt
je
cltd
decb
inc
pop
scas
movsb
push
and
fwait
ret
fcmovne
and
jecxz
push
ss
cmp
popf
orb
fstpl
add
in
call
outsb
mov
rol
lock
and
cmpsl
jns
popa
arpl
mov
add
pop
das
cmpsb
addl
pop
fbstp
mov
popf
in
nop
sbb
fstps
out
and
add
mov
xor
mov
aam
push
lds
pop
fcoms
out
pop
mov
aad
out
ret
fildl
call
call
ret
jae
push
inc
inc
jge
add
test
sti
sub
in
dec
jns
xchg
adc
and
aad
fwait
sbbb
mov
xchg
aad
cld
insb
inc
outsb
outsl
inc
lcall
scas
add
mov
popf
sbb
cltd
sbb
test
fisubrs
bswap
cmp
mov
jo
mov
jmp
mov
push
insb
inc
cli
jbe
jb
sarl
inc
pop
in
xchg
adc
pop
lds
adc
stos
push
add
xchg
xchg
xor
js
ljmp
cli
push
sti
mov
fldenv
cltd
mov
iret
mov
mov
mov
xchg
mov
sub
xchg
push
mov
fisubrs
jo
bound
mov
jg
pop
fists
std
pop
xchg
jmp
xor
cmp
xorl
inc
idivl
lock
mov
cmp
movsb
add
loopne
lods
leave
loopne
push
mov
mov
pop
mov
xor
int
repz
sahf
cmp
push
mov
std
inc
mov
xchg
bound
xor
mov
stos
push
mov
mov
jg
or
dec
adc
and
out
dec
jb
ljmp
sub
mov
xchg
sbb
pushf
fnsave
repnz
xchg
sub
jb
cmp
int3
or
xchg
negb
nop
cwtl
sbb
dec
cmc
cmp
idivb
repz
push
dec
roll
adcb
test
dec
aaa
rcrl
add
sahf
filds
aad
cltd
mulb
adc
inc
outsl
hlt
xchg
lea
push
hlt
insl
jmp
mov
xchg
mov
xchg
stos
push
sub
pop
mov
loopne
pop
push
fcmovu
fcmovu
jmp
rcrb
mov
fisttpl
mov
ljmp
std
in
movsb
out
inc
sub
rcll
add
lahf
loope
jne
jecxz
out
fsubrl
dec
xchg
jbe
icebp
fidivs
xor
cmpsb
mov
or
leave
push
jns
js
cmp
cmp
test
mov
int
ror
add
push
mov
nop
cli
fwait
pop
pop
test
push
add
lfs
or
insl
mov
jb
data16
mov
and
mov
stos
xor
pusha
cmp
das
mov
int3
jmp
cmp
test
push
mov
rcrl
cwtl
push
gs
leave
mov
in
fnstcw
sbb
mov
shrl
and
lret
lcall
pop
loopne
test
aaa
adc
cs
ss
rolb
sbb
mov
cmp
mov
xor
dec
dec
rcrb
and
adc
dec
fcompl
inc
or
xor
xor
bound
cmp
xor
or
lret
pop
pop
in
add
out
adc
sbb
lea
out
stc
fidivrs
fidivrs
or
into
or
xor
or
stc
clc
daa
test
test
cmp
add
addl
sub
imul
jg
sub
mov
cmp
xchg
rcll
cli
int
lret
cld
int3
pop
repnz
xor
jae
inc
push
fwait
and
pop
dec
sbb
andb
movl
pop
roll
fcompl
arpl
pop
loop
sub
fcoms
sbb
adc
aas
fmuls
mov
lret
fidivs
pop
cmpsb
popa
aam
adc
sub
shll
sbb
cmp
pop
mov
mov
add
out
xor
out
xchg
ss
push
rorl
lcall
insb
xchg
imul
xor
imul
jp
pop
cmp
xchg
adc
jne
ror
mov
mov
in
mov
adc
push
lds
loope
sti
ss
in
pop
shl
mov
xor
add
or
jmp
adc
sbbb
xchg
jmp
lahf
pop
pop
ljmp
stos
xchg
sbbl
sahf
jno
std
sbb
xor
push
pop
push
or
mov
mov
push
movsl
scas
cmp
sbb
inc
xchg
mov
fxch
jecxz
xor
ficomps
and
mov
popa
cli
sahf
dec
fcomps
cmc
xor
and
scas
insl
push
je
jae
mov
lods
fadds
fxch
jecxz
mov
frstor
xorl
adc
sbb
xchg
push
xchg
push
fisubl
movsl
mov
and
xor
xchg
popa
jbe
xor
ljmp
mulb
dec
imul
push
movsl
pop
sub
xchg
jmp
push
sbb
iret
les
jb
stc
and
mov
sbb
push
stc
sub
xchg
push
xor
fcom
or
xchg
cmp
cmp
lcall
int
mov
pop
mov
fisttpl
inc
mov
sbb
mov
ret
lods
sbb
rcr
lcall
inc
aam
xlat
inc
out
mov
aas
leave
sahf
pop
repz
lock
fwait
ljmp
lret
jbe
shrb
mov
and
jle
mov
lret
movsl
fnstenv
dec
aas
cmp
test
in
iret
pop
mov
test
out
aad
jb
mov
fldcw
daa
outsb
ds
pop
mov
std
push
inc
cli
mov
dec
mov
loop
xacquire
je
daa
jae
cmp
sarb
mov
cli
data16
mov
scas
or
push
lcall
rorb
into
or
repnz
lret
fcmovnb
xor
out
mov
jmp
inc
fimull
push
pushf
mov
dec
pop
cmp
jl
dec
in
push
xchg
aas
dec
shll
insl
xchg
jbe,pt
rorb
in
sbb
pop
dec
shrb
arpl
push
pop
cwtl
jle
xlat
mov
lods
enter
mov
pushf
push
add
fnstenv
sub
xlat
int
js
fiadds
fisttpll
sub
mov
lcall
or
mov
mov
in
jb
adc
das
icebp
xchg
addb
push
std
dec
push
mov
pop
divps
mov
cs
jecxz
pop
stos
cmpsl
jae
sbb
push
mov
lea
imul
icebp
fidivs
arpl
fimuls
imul
mov
jns
mov
inc
lcall
xchg
jnp
clc
les
out
inc
notl
lds
or
sub
clc
sbb
adc
sahf
lods
sub
je
pop
psrad
mov
mov
gs
dec
push
test
sahf
sub
je
ret
slwpcb
and
cmc
push
cmc
push
fisttps
pusha
into
adc
jnp
pushf
jg
pop
repnz
mov
pop
call
popf
xlat
in
in
les
rolb
enter
cmp
xchg
cs
fisttps
add
loope
cmpsb
popf
in
xorb
mov
mov
icebp
sahf
mov
mov
into
in
insl
pop
dec
mov
loope
decb
sub
sub
mov
scas
stos
xlat
sub
jb
sub
arpl
insl
fisttpl
jno
sbb
and
add
pop
inc
pop
xchg
cwtl
push
mov
adc
lahf
jb
cli
addr16
jecxz
jge
or
fldl
movsl
lods
sbb
push
iret
and
shlb
ret
jo
mov
lock
sbb
or
xchg
ret
push
or
lahf
or
jp
sub
cs
sbb
orl
cld
push
jmp
cs
xor
inc
sahf
push
sti
jns
sub
mov
cwtl
and
pop
pop
sti
shlb
fstpl
push
adc
mov
adc
lret
mov
mov
push
les
pop
xchg
jge
imul
mov
loopne
dec
cmp
cmp
mov
fcoml
scas
pop
mov
cmp
adc
mov
ror
push
mov
pop
push
inc
jp
sub
jecxz
scas
idivb
pop
jns
popf
xor
cli
andl
cmc
sbb
and
ja
push
js
jno
ja
pushf
sub
movsb
and
ret
inc
mov
popa
sbb
xchg
mov
sbb
loop
repnz
hlt
add
jecxz
push
imul
cwtl
popf
scas
adcl
and
sbb
repz
scas
xchg
adc
sub
addr16
jge
mov
pop
inc
icebp
mov
cs
hlt
dec
mov
sub
or
cmpsb
push
std
or
sub
dec
icebp
sub
cmp
out
test
dec
iret
and
daa
aaa
ljmp
loopne
aas
or
jns
test
or
lcall
or
js
xlat
mov
sahf
aas
sbb
pop
insb
lret
cmpsb
je
loop
mov
sub
mov
shrl
sub
add
or
xor
lcall
xchg
jo
test
notl
xchg
jecxz
push
dec
pop
xor
fs
cmp
dec
bound
add
arpl
push
mov
pop
mov
push
test
imul
mull
xchg
fs
xor
sub
cltd
mov
mov
fimull
mov
das
sbb
push
add
jle
cmpsl
into
int3
andb
push
in
mov
jecxz
iret
xchg
test
add
imul
rolb
sub
pop
loop
sub
mov
inc
inc
xchg
sbb
add
jne
stos
test
inc
push
int
or
fbstp
cltd
xor
xchg
inc
mov
rcrb
jl
jbe
int
cmpsl
add
test
jecxz
loope
and
mov
popa
cmp
sub
sti
or
cmc
sbb
sbb
and
mov
sbb
js
imull
sbb
lds
cmp
dec
jecxz
xchg
jecxz
stc
and
cld
cld
sbb
pop
cmp
dec
rcrb
hlt
leave
sbb
pop
or
jo
sbbl
adc
movsl
fcompl
adc
add
jns
jl
fsubs
pushf
bound
in
fcoms
inc
mov
ljmp
pop
jns
movsb
or
cld
xor
out
pop
push
push
push
push
cmp
push
imul
insl
mov
je
or
sub
sub
scas
dec
test
and
dec
xor
mov
adc
mov
sbb
xor
dec
cld
mov
push
push
lcall
ret
push
dec
pop
adc
addl
lret
bound
sbb
pushf
sub
int3
jecxz
pop
fldenv
outsb
mov
outsl
sub
psrld
push
add
mov
sbb
cltd
sti
fsubrs
mov
sti
pop
into
jne
push
mov
jo
test
ret
or
xor
jno
pop
jecxz
lret
call
sub
outsb
loop
sti
cli
aas
xor
cmpsl
jl
in
add
shlb
ja
stc
mov
xchg
sbb
xor
cmp
shl
dec
sbb
push
pop
mov
mov
test
hlt
lds
mov
jecxz
lret
pop
mov
clc
xor
mov
nop
test
mov
in
push
scas
mov
fs
inc
jge
push
fiaddl
sbb
jecxz
out
fdivrl
call
lock
push
adc
aad
pop
fmuls
xchg
sbb
ret
ret
js
sbb
jecxz
into
adc
subb
stc
lods
jno
ja
xchg
mov
outsl
pop
sbb
hlt
xchg
aad
xlat
mov
add
repz
scas
pop
xchg
cmp
insb
inc
push
jbe
pop
stos
xor
ficoms
outsl
mov
mov
sahf
cmpsl
insl
les
sarb
and
dec
fwait
out
pop
imul
xchg
addb
popa
cmp
pop
cmc
adc
pop
fldcw
xchg
ljmp
iret
push
push
addr16
pop
xor
repz
fistpl
sahf
ja
hlt
cwtl
mov
ja
adc
xor
mov
and
insb
cmp
cmp
or
inc
mov
shrl
and
sbb
sub
scas
inc
lds
imul
cmpsb
xchg
mov
ret
xor
push
notb
lods
adc
nop
jmp
lods
arpl
aas
outsl
xor
cmp
inc
xor
jbe
pushf
mov
or
or
adc
pop
push
mov
sbb
xor
scas
std
js
pop
fstpl
shr
ret
adc
mov
loopne
icebp
test
add
aas
mov
and
out
add
js
sub
sbb
pop
mov
inc
cmpsl
jge
sub
add
jp
pop
mov
iret
xor
fnsave
insb
mov
lock
cmc
pop
xor
jnp
scas
adc
and
outsb
inc
ljmp
adc
jb
nop
pop
pusha
xchg
mov
pop
sarl
shll
dec
dec
imul
sub
pop
aas
aad
test
popa
xchg
push
in
cmp
xor
std
std
inc
outsb
lret
loopne
inc
sbb
and
ret
push
or
lret
sahf
inc
clc
adc
jl
in
mov
dec
push
pop
enter
push
add
mov
xor
stos
bound
pop
mov
test
sbb
insb
mov
dec
cmpsb
je
xchg
setbe
lds
mov
push
jecxz
or
dec
push
das
out
adc
add
sbb
mov
add
arpl
movsb
scas
jns
lss
pop
in
mov
jmp
cmp
stc
icebp
xchg
sub
out
push
ret
jne
xor
in
shlb
xchg
sbb
movsb
out
fscale
ja
jne
out
addr16
cmp
in
add
or
inc
in
push
pop
icebp
aaa
and
cltd
jo
mov
add
mov
inc
rcrl
sbb
or
sub
xor
lods
and
hlt
lret
lret
pop
movsl
iret
sub
and
and
rcll
push
jmp
cmc
in
mov
xor
and
mov
and
push
sbb
push
lock
lds
int3
cmpsl
add
dec
cmpb
adc
jne
jmp
inc
pcmpgtd
ds
test
sti
decb
lds
push
mov
mov
out
shrb
mov
fldl
fprem1
cmp
aam
xor
bound
ficoms
loopne
mov
xor
ja
leave
inc
fcompl
jl
xchg
adc
imul
in
jmp
in
popa
nop
sub
adc
pop
dec
inc
mov
mov
xchg
and
or
in
scas
cmp
cmpsl
add
add
std
dec
dec
cmp
movsb
int
imul
pop
dec
sub
sbb
jns
cmp
sbb
add
xchg
out
stos
add
cli
fwait
dec
popa
mov
jo
jg
add
pop
pusha
push
add
aas
inc
push
jge
or
or
mov
dec
rdmsr
iret
or
ja
fnstenv
lret
scas
cld
test
lcall
repnz
inc
aas
jno
mov
rolb
mov
adc
add
and
dec
or
sbb
ja
and
sbbb
xchg
lods
add
je
pop
pop
pop
in
cld
push
or
mov
xor
dec
lahf
xchg
je
sbb
notl
insb
xchg
pop
pop
clc
pop
ljmp
dec
cmp
test
adc
in
fidivrs
and
rorl
mov
and
lahf
js
xchg
int
adc
cmp
icebp
mov
popf
or
loope
pop
xlat
pop
push
mov
out
outsl
push
pop
xor
xor
or
lret
push
pop
xchg
mov
xchg
lret
lea
iret
mov
mov
cmp
xchg
dec
inc
fisttpll
add
push
xor
jge
loop
ret
sti
jns
and
dec
nop
lods
jns
and
lods
xor
sti
push
mov
fdivs
push
das
ret
or
loope
ja
inc
fadds
jg
cmp
cmp
add
inc
outsl
in
in
daa
stos
out
inc
or
shrb
scas
jg
int3
mov
push
jae
inc
pusha
push
call
lret
push
inc
dec
loop
dec
shlb
add
lea
inc
push
bound
mov
push
cld
push
mov
mov
sub
cltd
fisttpll
popf
insl
mov
push
jle
sub
pop
sbb
adc
push
jno
ljmp
xor
cmp
test
jl
sbb
mov
xor
add
adc
bound
mov
and
shlb
into
imul
fistpl
mov
cli
sbb
fsubl
adc
cwtl
jb
les
inc
cmpsl
into
pop
rcrl
jno
or
in
cmp
bound
and
push
dec
aas
and
pop
push
xlat
iret
fisttps
stos
mov
lock
enter
mov
sbb
or
cltd
xlat
out
js
cmpsl
xchg
xchg
cmpsl
ret
mov
pop
scas
mov
imul
insb
popf
add
js
cltd
in
int
jae
int
lock
sti
xchg
inc
sbb
jne
rol
cmp
fisttps
jbe
pop
xlat
arpl
lret
mov
xor
xchg
das
sbb
and
loop
rorb
clc
imul
loop
leave
xchg
cld
xor
pop
xchg
inc
push
out
xlat
in
test
inc
mov
leave
in
lcall
cmc
lods
xchg
mov
mov
subl
sar
mov
adc
xor
add
sbb
inc
jo
cmpsl
cmp
cmp
loopne
addr16
mov
xor
addr16
jnp
push
shl
and
mov
rolb
mov
ljmp
pusha
and
xchg
jnp
add
lods
dec
push
rorb
sbb
inc
xor
jnp
inc
shlb
sbb
mov
icebp
inc
es
mov
xor
fwait
adc
lods
daa
jne
es
adc
xor
mov
push
in
in
daa
dec
jne
fwait
mov
jl
inc
xor
jb
mov
insb
addl
fs
inc
jmp
rcrl
loope
or
subl
xchg
pop
sub
negl
in
jecxz
out
nop
mov
push
data16
scas
shl
addl
cltd
sub
pop
cmp
xor
movsb
dec
jmp
daa
movsb
xchg
lock
pushf
call
push
add
cld
adc
sbb
inc
inc
jmp
cltd
in
lds
push
fstl
cmpsb
ret
mov
js
inc
mov
xchg
negb
movsb
jg
outsl
in
movsb
mov
out
enter
add
arpl
lahf
faddl
cmp
jae
xchg
dec
or
and
std
dec
pushl
and
dec
adc
add
sub
dec
inc
leave
pop
mov
rep
lock
add
subb
loope
shl
xor
mov
adc
or
sbb
push
mov
pop
scas
inc
lods
jl
sbb
adc
or
flds
test
mov
ret
daa
mov
jno
and
xchg
jl
dec
jbe
movsb
clc
sub
ss
pop
jl
jl
mov
xor
xchg
mov
sahf
push
jbe,pt
and
mov
cmp
xchg
and
rcll
cmp
jae
mov
das
jb
inc
adc
jns
lret
jp
and
push
push
sbb
cmpsb
fs
jae
push
jnp
or
xor
mov
repnz
xchg
mov
adc
push
repnz
ret
arpl
movsb
mov
lcall
xchg
dec
movsb
ja
fadd
mov
dec
int
jge
and
dec
or
aad
pop
cmc
imul
jp
pop
adc
addr16
jno
fcmovbe
js
sub
mov
int
push
mov
dec
adc
clc
push
repz
sub
pop
ja
loopne
pop
out
in
pop
add
pop
mov
mov
rcl
jg
and
xchg
ja
xor
or
pop
push
xor
iret
jle
adc
pop
sarl
adc
pop
dec
aaa
fcompp
pop
mov
aas
loop
or
jo
pop
fstpl
cmpl
mov
cmpsl
leave
std
pusha
ljmp
and
or
lods
cmp
js
fiadds
push
sub
ja
xor
sub
pop
mov
push
xor
pslld
or
insl
sti
shlb
xor
dec
std
ljmp
sub
arpl
xor
push
cmpsl
test
cmp
leave
fdivrp
das
scas
mov
rcrb
pop
push
jp
and
inc
push
popf
mov
pop
or
in
data16
mov
push
ljmp
jns
cmp
imul
out
icebp
dec
popf
cmp
and
into
mov
pop
push
dec
mov
xor
sub
addr16
ja
xchg
ss
dec
ljmp
mov
mov
inc
out
lret
pop
sbb
outsl
mov
out
imul
jp
icebp
je
mov
inc
sbb
mov
xor
lret
jae
jp
loop
test
imul
daa
xor
pop
aam
ds
and
test
mov
jae
scas
inc
mov
shl
das
out
lds
xor
mov
jge
in
cli
gs
cld
xchg
in
sub
cltd
adc
jmp
sbb
push
xchg
sahf
cmp
fisttpll
xlat
mov
push
xor
popf
sub
dec
fistl
jge
xchg
sub
hlt
ret
test
pushf
adc
cmp
bound
scas
jmp
loopne
in
mov
mov
mov
push
add
int3
pushf
sti
or
stos
push
inc
aam
stos
lret
cli
inc
pop
pop
mov
in
lcall
or
lret
jg
shlb
movsl
aad
mulb
sbb
shll
loop
iret
shlb
inc
adc
fwait
cmpsb
icebp
test
or
dec
mov
movsb
adc
xchg
cmp
ret
pop
push
or
flds
stos
imull
cmpsb
xlat
cli
push
and
ljmp
add
mov
fstpl
lahf
lds
hlt
sbb
aas
or
ja
addl
sub
rorb
xchg
dec
nop
push
nop
or
add
std
sbb
inc
xor
sti
add
in
inc
lock
lret
outsb
jmp
jbe
dec
loopne
in
aas
ret
mov
sbb
pop
mov
ret
std
inc
lcall
pushf
data16
out
xor
sbb
cmpsb
arpl
pop
cmp
add
subl
adc
mov
push
and
pop
xchg
bound
cmp
xlat
mov
push
add
mov
push
loop
jg
ss
pop
bound
lds
imul
std
jnp
outsb
xchg
mov
mov
push
in
jg
shlb
sbb
nop
pop
lock
sbb
shrl
cmp
inc
insb
xor
nop
test
ds
push
add
jle
pop
addr16
das
jo
in
push
sbb
cltd
ret
add
out
dec
shll
cmp
push
adc
stos
xor
loope
xchg
add
out
lret
sbb
clc
out
imul
or
popa
enter
push
sbb
xchg
mov
add
dec
inc
in
pop
mov
sbbl
inc
pushf
loope
jne
scas
pop
fstl
mov
dec
pop
adc
in
imul
movsb
pop
push
sub
xchg
jbe
loope
push
pop
jge
mov
jg
adcb
mov
shrb
into
jbe
dec
add
leave
pusha
stos
and
hlt
mull
cli
mov
pop
mov
mov
cmp
add
cld
stos
add
push
es
daa
cmp
insb
jno
jl
mov
andl
int3
and
mov
inc
and
mov
lea
js
mov
in
pop
fisubl
iret
mov
adc
outsb
add
mov
int3
movsl
adc
lcall
jmp
les
addr16
mov
mov
popa
dec
mov
fsubs
pop
push
cmp
xor
jo
imul
punpckhdq
aas
xchg
popa
repnz
pop
cmp
faddl
push
push
xchg
push
ja
sbb
push
ret
stos
mov
sti
ret
inc
ficoms
in
pop
jl
cmp
inc
or
jno
outsb
or
jg
lea
push
sub
enter
daa
pop
mov
jle
inc
add
bswap
lahf
ret
xchg
add
pop
xor
mov
and
out
stc
lret
mov
aas
lret
test
pop
or
sahf
sti
test
ss
mov
loop
inc
xor
clc
into
jb
shrl
jae
jne
inc
lahf
mov
adc
add
sub
xchg
sub
inc
dec
js
sbb
dec
imul
jmp
test
fwait
push
je
push
mov
js
daa
and
push
sub
xchg
xchg
int3
lcall
scas
arpl
mov
sbb
or
pusha
pushf
xlat
pop
sub
shlb
cmp
xrelease
push
mov
jle
out
enter
adc
and
cmpl
pop
inc
loope
xor
cmp
push
loop
pop
sbb
jp
loopne
jge
jp
jge
aam
push
scas
xchg
insl
nop
add
ret
jl
aaa
roll
or
jg
pop
in
addr16
scas
fcomp
ds
mov
pop
jge
out
stos
and
mov
push
xor
sub
outsl
out
mov
cmpsl
pop
in
and
inc
push
test
sbb
movsl
in
ret
in
pop
adc
int3
in
hlt
insl
xchg
addl
mov
loop
in
popa
sbb
hlt
aad
mov
jle
push
xchg
and
pop
popa
cmp
mov
mov
pop
movsb
outsb
out
test
lods
adc
xchg
insb
test
push
or
lds
stc
sbb
imul
insb
dec
pushf
js
std
mov
hlt
lock
mov
or
jle
push
mov
xchg
pop
sbb
icebp
std
dec
add
insb
and
push
cli
pop
dec
sub
mov
add
or
outsl
loopne
fstpt
imul
fisubl
rolb
ror
pushf
jnp
fistpll
cwtl
lea
mov
inc
leave
cli
jae
cs
daa
and
push
pop
or
adc
push
out
stos
adc
adc
es
jno
into
in
mov
fstpt
push
lods
sti
mov
int
adc
aam
and
fxch
inc
cmc
inc
mov
les
sti
outsl
xchg
adc
es
in
arpl
aam
or
ja
in
out
sbb
ror
push
insl
lods
mov
sbb
mov
into
mov
movsl
pushf
xchg
loop
std
ret
mov
push
fld1
sub
mov
in
dec
mov
mov
cltd
inc
movzbl
push
or
loopne
lahf
and
aas
repz
popa
mov
subb
cmpps
imul
ret
in
pop
das
js
sbb
dec
outsl
int3
leave
loop
mov
push
add
sub
insl
inc
dec
mov
jge
mov
adc
mov
das
adc
dec
push
int3
xchg
xor
and
pusha
add
mov
ret
dec
lret
addl
popf
in
xchg
jecxz
ss
jle
inc
or
mov
outsb
pusha
pop
adc
add
lods
add
addb
push
loopne
pop
lret
xchg
test
jno
pop
push
adc
sbb
xor
icebp
movl
pop
movzbl
lcall
inc
jmp
jne
xor
pop
fst
sbb
icebp
jae
jp
ds
or
daa
fst
or
push
lea
add
popa
inc
pop
jae
test
jo
insb
dec
cmpps
jmp
push
repz
and
fistpll
xor
ffreep
rolb
insl
adc
jne
int3
lea
fnstsw
int
jno
in
loope
jmp
cli
sahf
or
jecxz
pop
daa
jnp
sbb
in
mov
push
fwait
outsb
xchg
daa
inc
fdiv
push
out
dec
lock
xchg
nop
inc
into
sbb
xchg
test
imul
out
icebp
mov
aas
gs
int3
and
lds
jecxz
jne
xchg
cmp
jae
cmp
mov
fmull
mov
cs
sub
and
lahf
bnd
mov
mov
cld
pushf
jp
int
andb
cmpsl
daa
sub
stc
pop
cmp
adc
shlb
jl
xlat
and
xlat
out
jbe
cmpsl
lods
sbb
jp
pop
xchg
insb
sarl
mov
jnp
js
adcl
scas
ds
sub
xchg
jbe
inc
aam
inc
sub
movsl
adc
out
sub
js
cmp
daa
pushf
imul
xchg
cmp
xor
cmp
icebp
or
clc
dec
pop
std
jmp
dec
pop
and
xchg
test
mov
mov
sbb
sarb
adcl
lret
sub
dec
sub
into
pop
xor
push
cli
dec
ljmp
sbb
int3
insb
cltd
addb
je,pt
pop
inc
xor
mov
sbb
mov
add
lods
pop
jl
fistpll
inc
daa
fiaddl
repz
push
test
sub
mov
out
xor
cltd
add
in
xor
cmpl
or
std
lods
dec
push
fbld
aad
xor
inc
xchg
das
imul
pop
in
inc
ficomps
clc
repz
adc
and
jecxz
loop
sub
outsl
sbb
pop
fimuls
cmp
or
cmpsl
pusha
enter
sbb
xchg
shr
loop
sub
stc
repz
iret
adc
testb
jge
or
add
cli
sub
cmp
sub
pop
fnsave
test
dec
gs
add
jp
insl
fdivr
sahf
pop
loope
insl
fstpt
xchg
or
dec
rolb
out
stc
sbb
jge
movsl
push
imul
pop
mov
scas
fdivr
cltd
inc
cmp
push
mov
cmp
enter
pop
js
lret
ja
inc
ucomiss
lret
or
out
pop
add
mov
mov
xor
cld
dec
out
jle
jle
pop
push
mov
das
push
dec
xor
roll
sbb
adc
push
mov
mov
outsl
pop
aas
inc
imul
sbb
push
or
cwtl
xchg
adc
push
bound
xchg
or
mov
gs
push
ret
and
outsb
jle
stc
js
adcl
mov
pusha
xchg
ret
fiadds
js
ljmp
les
mov
out
lahf
int
ja
mov
jae
hlt
test
mov
clc
les
cmp
int
pop
dec
jge
push
push
pop
cmp
nop
pop
xchg
into
jg
cwtl
ds
mov
add
dec
pop
adc
sub
add
cmc
pop
jb
inc
in
js
jnp
sahf
enter
repz
jae
sub
adcl
lods
mov
jg
sub
aas
je
cmp
sub
pop
cmp
mov
insb
inc
push
add
and
cmc
aad
data16
add
pop
push
or
mov
pop
pop
sbb
clc
xchg
mov
or
push
aaa
int3
sbb
inc
mov
pop
test
mov
xor
pop
dec
and
hlt
sar
cld
clc
xchg
ficomps
add
add
stos
adc
stos
push
jbe
sahf
mov
scas
test
cmp
push
insb
cmpsl
aas
sbb
jg
cs
cmc
mov
jns
lret
mov
mov
int3
and
mov
push
mov
pop
rcll
sbb
in
mov
add
inc
xor
xchg
outsl
jl
mov
popa
push
mov
cmp
jno
jl
mov
jmp
stos
pop
daa
rolb
outsl
cmp
inc
jnp
cld
out
pop
imul
mov
test
sub
push
pop
sub
inc
jnp
out
movsb
push
insl
xor
out
xor
rol
pop
ret
in
sub
aaa
shl
adc
xchg
xchg
out
lcall
aaa
stos
add
and
add
pop
lahf
out
stc
popa
mov
fstpt
aam
xor
add
inc
xor
repnz
inc
fadd
push
das
dec
add
aas
and
std
cmpsl
int
aas
das
filds
mov
rep
pop
lret
mov
insl
subb
out
pushl
mov
pop
inc
stos
lds
mov
dec
mov
mov
les
inc
and
jge
sti
ds
addr16
inc
iret
dec
cmc
xorl
push
les
out
popl
daa
jne
rclb
pop
or
cli
dec
and
jecxz
adc
lods
rcr
cmc
stos
mov
negb
cmp
iret
jecxz
loopne
sarl
popa
pop
sbb
sbb
rcr
frstor
and
mov
out
call
mov
les
dec
mov
pop
xor
hlt
add
in
cmp
loopne
gs
icebp
subl
jecxz
or
dec
mov
je
sbb
dec
scas
jae
mov
cltd
insb
pop
push
cmp
cld
jo
push
pop
mov
repz
rorb
mov
mov
sbb
jl
pop
push
pop
pop
jno
dec
pop
int3
rcl
push
into
mov
loop
icebp
cmp
sub
push
enter
fldcw
xorb
sub
aam
aaa
push
test
push
cmp
loop
sbb
sahf
push
xor
mov
rorl
popa
test
movsl
insl
xchg
add
stos
je
aas
call
shlb
in
cmp
dec
pushf
sbb
rcll
push
jb
jnp,pn
js
mov
loop
fldt
imul
shll
iret
jp
fidivrs
aam
je
cli
lcall
lahf
int
jnp
push
xchg
mov
mov
mov
lret
adcb
rorb
loope
mov
repz
mov
sub
jg,pt
dec
sub
jge
fbstp
mov
or
pop
imul
xor
and
jmp
and
sbb
fisttpll
jmp
adc
cmpsl
enter
sbb
inc
int
jne
int
imul
ja
in
sbbb
test
ds
orl
push
pop
es
pushf
shlb
insb
mov
or
repnz
test
inc
xchg
sbb
sti
dec
pop
inc
js
cmp
lret
xchg
loop
mov
or
out
xlat
clc
pop
lods
add
repz
sub
mov
mov
addr16
dec
xchg
inc
ss
mov
pop
inc
call
insb
cltd
pop
push
loopne
loop
in
xchg
int3
and
test
das
dec
mov
sbb
dec
push
jo
int3
xor
jg
icebp
add
and
adc
xor
pop
ja
pop
nop
mov
out
or
jae
sti
addb
aam
cmp
mov
mov
push
xor
cmp
mov
jp
xor
fwait
test
and
ror
cmp
aad
lods
add
dec
sbb
push
push
scas
jmp
pop
hlt
addr16
addr16
xor
or
dec
xor
dec
pop
xlat
xor
mov
xchg
pop
mov
mov
mov
push
aam
enter
popf
int
pop
pop
xchg
cmp
fwait
jbe
mov
xor
jle
pop
popa
or
sbb
add
push
mov
mov
add
scas
dec
xor
mov
in
and
mov
sbb
mov
add
adc
scas
inc
stos
lock
mov
mov
xchg
daa
lret
movsl
popa
pop
pop
cmp
lret
pop
in
sbbb
push
and
cmp
loop
in
dec
or
jb
sarb
jle
in
sbb
arpl
icebp
fimull
pop
adc
mov
mov
pusha
cmp
mov
jecxz
repnz
push
jle
and
out
mov
fs
xor
out
ficompl
inc
adc
decl
iret
xchg
sbb
jnp
outsb
daa
cmc
or
js
pop
outsb
es
jge
inc
mov
ljmp
jae,pt
test
rcrb
or
jp
lods
mov
cmpsl
dec
mov
or
inc
mov
mov
ljmp
cmp
sar
fst
add
pop
jge
push
movsb
mov
mov
add
or
add
mov
outsb
dec
lret
inc
sbb
mov
mov
mov
sti
gs
lahf
pop
stos
push
int3
jg
in
imul
cmpsb
xchg
mov
sbb
pop
leave
sahf
shrb
cmp
icebp
push
adc
fdiv
vmovhps
add
repz
cmp
imul
push
or
pop
pop
lods
sbb
push
sahf
sub
sbb
ficoms
inc
fisubl
mov
cmp
xchg
xchg
add
xchg
mov
push
out
ja
xor
add
cs
or
mull
push
xor
fimull
shll
or
pop
or
push
mov
mov
pop
cs
out
mov
testl
lock
bound
cwtl
mov
jno
and
aas
and
notl
cmpsb
int3
movsb
and
fucom
andb
in
out
xor
out
clc
test
loopne
xchg
ds
cmp
lea
push
test
mov
sub
leave
rolb
adc
cmp
sahf
addb
or
sub
xor
cltd
push
push
jbe
out
pop
nop
lods
fistpl
cmp
adc
pop
test
stc
cmp
xor
stos
push
jecxz
mov
push
cmp
cmp
cmp
dec
repz
stos
mov
fwait
mov
cwtl
daa
mov
imulb
mov
push
filds
push
loopne
add
bound
dec
xchg
and
mov
xor
pop
lods
sti
mov
lret
push
shll
mov
cmp
push
or
dec
shlb
mov
clc
mov
pop
sar
mov
sub
es
loopne
mov
out
int
xchg
outsl
fdivrl
popa
mov
aam
sti
loop
lds
sub
sarb
inc
std
mov
jns
add
adc
lret
es
pop
xor
testb
test
imul
imul
ja
push
add
mov
xorl
daa
push
jle
mov
push
lret
and
jno
and
mov
in
bound
call
stc
and
push
cmpl
xor
rorb
outsl
fs
mov
jo
mov
dec
mov
call
xchg
jo
jp
icebp
jnp
inc
mov
scas
inc
aas
xchg
xchg
add
mov
jne
sub
jl
xchg
sti
dec
jnp
mov
aam
out
mov
fstpt
mov
incb
sbb
xchg
or
test
or
cs
cli
or
test
lret
jle
sbb
jge
loope
jns
sub
sub
mov
push
sub
sbb
jns
pop
aad
int
cwtl
movl
jl
jecxz
adc
dec
addr16
push
je
xor
dec
out
sub
stc
mov
mov
lock
je
stos
out
ljmp
ja
insb
push
mov
xlat
outsb
rclb
jmp
addr16
lret
sbbl
xor
outsl
outsl
lahf
int
mov
push
and
adc
dec
adc
les
push
mov
dec
push
and
les
repnz
cmpb
sti
add
out
and
mov
jecxz
clc
lret
mov
mov
adc
mov
mov
loope
and
dec
ljmp
test
sbb
and
sahf
mov
test
in
push
cmp
push
outsb
push
cs
fucomp
jg
decb
rorb
lahf
jg
outsb
sub
fstps
pop
stc
xchg
xchg
adc
inc
dec
push
movl
test
lret
jo
sbb
repz
mov
stos
or
cmpsl
add
pusha
xor
daa
addr16
cmp
sub
mov
inc
repz
jl
jp
test
mov
sub
add
fst
out
xor
cmc
xchg
sbb
addr16
rorb
inc
adc
xchg
call
test
mov
pop
call
sbb
xor
cmc
ja
mov
test
js
dec
push
inc
out
aad
xchg
loop
pop
enter
push
je
sub
inc
mov
cltd
pop
xchg
xor
xchg
rcl
pop
push
test
push
jb
pop
jl
mov
insl
and
adc
int
pop
xchg
fsts
xor
sub
mov
xchg
inc
xor
loopne
shll
int3
sbb
jg
xor
decb
jmp
sbb
push
fisttpll
xchg
push
push
push
cwtl
mov
mov
lods
test
mov
pop
xlat
pop
in
int3
loop
repz
fwait
dec
sbb
add
les
push
push
sub
insb
mov
loopne
sarl
cmp
pop
sbb
andl
out
dec
les
cld
xchg
aam
inc
push
dec
and
push
lcall
jno
pushf
je
jb
cmpsb
add
loop
sub
ret
dec
sub
ss
lcall
cmp
sub
ljmp
das
enter
subb
and
repz
mov
inc
and
jno
popa
xchg
add
mov
lahf
daa
sub
in
mov
jb
sub
or
lea
inc
repz
test
loop
stos
cmp
ret
lret
mov
push
mov
xchg
mov
ret
in
jle
jge
mov
push
out
fisubrl
movsb
pushf
inc
stos
pop
out
pop
jne
jg
or
movsb
inc
xchg
and
loop
lcall
xor
pop
push
push
mov
ja
lahf
pop
insb
mov
add
addr16
mov
int3
pop
mov
insb
pop
push
je
or
dec
aam
or
imul
jnp
stos
and
pop
test
pop
inc
mov
or
mov
fadds
push
shlb
xchg
jl
and
xchg
loope
mov
cltd
lret
inc
outsl
mov
and
shl
gs
shl
dec
mov
xor
inc
cmp
mov
fdivs
jp
test
sbb
dec
in
push
jmp
cmp
dec
pop
test
gs
int
sub
clc
jnp
and
mov
xchg
dec
cmp
repz
addl
lds
jge
sbb
scas
pop
cmpsb
sub
fcoms
mov
rcll
push
int
jbe
or
inc
dec
rcl
out
push
cmp
stos
adc
mov
mov
lret
add
sub
dec
jmp
or
jle
movsl
mov
nop
ljmp
call
jns
loop
and
vshufps
adc
inc
sbb
insl
adc
subb
push
mov
jae
cmp
pop
aas
xchg
or
in
mov
iret
push
jle
jns
clc
ds
ljmp
push
mov
aad
aas
subl
lods
imul
cmp
or
mov
jb
inc
pop
lock
scas
das
rcl
mov
cmp
mov
jp
xchg
mov
icebp
adc
es
mov
lea
push
sub
push
sub
rcrl
daa
adcl
mov
add
pop
int
push
es
jg
clc
test
pushf
popf
divl
out
and
fdivr
addr16
xor
scas
add
mov
jmp
ja
sub
cli
inc
adc
xchg
outsl
lret
fimull
add
call
out
rol
jno
xorb
xchg
scas
push
jnp
xor
and
rorb
pop
repz
iret
mov
lahf
inc
or
and
jno
mov
jecxz
fisubl
fldcw
movsb
imul
stos
fucomi
sbb
or
adc
and
fdivs
dec
mov
xor
jae
push
imull
gs
push
sbbl
imul
sub
jns
inc
mov
cli
push
pushl
cmp
pop
cmp
push
jp
out
cmp
mov
xor
inc
inc
lock
xor
sub
mov
push
mov
cmp
xor
lds
dec
iret
in
and
push
out
mov
jl
rcll
xor
lahf
imul
loopne
dec
fnstenv
lret
loope
dec
mov
hlt
pusha
jl
xor
pop
and
xchg
cmp
fistps
pop
outsl
mov
leave
sbb
adc
lds
addb
mov
xor
fidivrl
test
cli
xchg
mov
test
cs
fistpll
mov
lret
inc
pop
out
ret
sarl
xorb
into
pop
mov
dec
mov
push
cld
sub
fsubrl
cmc
pop
mov
inc
mov
push
add
dec
test
adc
jmp
xchg
mov
das
mov
ds
xchg
xor
sub
decb
lods
add
pop
mov
ret
scas
loop
outsl
insl
cwtl
xchg
jg
add
dec
xorl
xchg
test
fdivrs
int
enter
fnsave
mov
cmpsl
push
xor
je
addb
sbb
xor
andb
xlat
adc
sub
aam
test
js
cld
sahf
jno
push
andl
out
push
cmc
cmc
dec
add
mov
adc
stc
or
pop
and
and
add
and
jp
iret
andl
mov
mov
jmp
and
inc
jnp
mov
push
cmp
nop
xchg
fsubrl
lods
push
fdivrl
push
sub
ljmp
mov
cmp
mov
scas
pop
mov
out
movsb
outsb
test
daa
ficomps
xchg
add
std
test
out
pop
popf
push
sar
fsubrl
add
push
loop
fnstsw
out
in
out
pop
jl
cmp
loope
mov
sbb
xchg
sub
mov
cmp
stos
push
xor
sbb
push
sbb
aas
fbld
das
bound
jo,pt
mov
mov
jp
sti
testl
cmp
mov
shl
ret
divl
fidivl
mov
sahf
xchg
fadds
mov
in
add
fcmovne
roll
lds
fimull
iret
jo
lret
add
std
fadd
sub
xchg
mov
or
scas
ss
add
pushf
xor
mov
paddw
mov
mov
sti
inc
and
jle
xor
mov
jle
lods
les
mov
mov
dec
inc
roll
pop
sbb
lock
sbb
xor
xor
filds
pop
xor
push
int3
movsl
fidivs
xchg
add
sub
and
jbe
addr16
loopne
xchg
sub
cmovg
jle
insl
xchg
cmp
shl
jae
jmp
arpl
dec
mov
popf
mov
sub
cmp
ja
je
jmp
out
adc
jo
in
add
imul
and
add
or
sub
imul
mov
or
bound
push
add
adc
jnp
sub
ss
lcall
test
loopne
dec
outsb
iret
out
cwtl
sbb
push
stc
mov
aam
lret
xchg
movsb
movsl
ds
pop
jo
mov
inc
push
xchg
fwait
jb
or
jg
cmp
in
stos
cwtl
test
push
pop
sar
popa
in
jb
call
inc
hlt
jns
imul
mov
push
movsl
insb
mov
andb
cli
int3
add
sub
lret
mov
mov
int
mov
xor
rolb
cli
sbb
pmuludq
repnz
mov
or
pop
pop
adc
pop
test
cmp
mov
mov
negl
or
dec
fucomip
andl
js
fs
xchg
pop
test
inc
fildll
inc
fstl
fs
sbb
ljmp
xchg
out
or
mov
and
mov
sub
sbb
push
pmaddwd
push
dec
pop
je
push
cmp
push
xchg
push
test
cmp
pop
pop
lds
xor
call
fcmovu
xor
mov
mov
mov
xchg
leave
xlat
pop
cld
jbe
fisttpl
jns
cmpsb
decl
dec
repz
loopne
mov
gs
add
and
inc
xchg
rolb
cli
lret
nop
jns
mov
sub
cmp
sti
push
add
inc
sahf
jb
mov
ljmp
repz
mov
jae
lea
dec
and
pop
test
and
sahf
adc
sub
mov
push
filds
cmp
je
sbb
das
test
sbb
cmpsl
sbb
clc
inc
mov
mov
test
out
and
cmpsb
jl
xor
cmp
jg
leave
adc
stos
mov
notb
push
xchg
mov
ja
mov
push
jno
aam
dec
pusha
mov
push
or
jecxz
repz
inc
and
mov
xor
test
stos
ss
jle
adc
call
pop
sbb
aas
cmp
mov
xchg
cli
cmp
push
mov
xchg
adc
push
jo
mov
in
or
notl
dec
push
push
lds
in
fidivl
cli
xchg
cmpb
cmpsl
and
push
mov
shrl
out
sbb
xorl
sub
aad
mov
push
roll
aaa
repz
lahf
lods
aam
ret
mov
insl
push
pushf
sti
in
pop
add
fxch
adc
jl
movsb
hlt
mov
movsb
stc
imul
and
mov
out
jae
sbb
les
and
test
imul
pop
dec
mov
ret
adc
movsl
fsubrl
repz
fidivrs
pop
mov
lock
andb
popf
fcoml
mov
add
ja
pop
je
adcl
aad
cmpsl
es
add
inc
push
sbb
scas
push
loope
sbb
dec
jae
jno
rolb
rcr
push
xor
nop
sub
ss
addr16
push
cwtl
xchg
pop
sbb
push
sbb
mov
sarb
pop
sub
test
in
adc
leave
mov
jp
mov
mov
and
outsl
js
mov
outsb
lea
out
sarb
clc
les
call
js
mov
iret
push
lods
fsubl
mov
lods
pop
test
cmp
and
add
mov
arpl
arpl
mov
icebp
aaa
jg
in
xor
cmpsl
out
scas
aaa
shrl
push
shlb
jns
or
push
leave
orb
dec
notl
pop
cmpsl
cltd
mov
sub
aam
shlb
call
mov
stos
rolb
cmc
push
push
es
mov
stos
pop
jae
inc
test
push
xor
in
jo
data16
ja
repz
dec
xor
jge
push
cli
jnp
jle
adc
push
scas
mov
pushf
pop
cs
xchg
xor
ss
int
loopne
sbb
mov
lret
inc
pop
test
cmp
mov
jge
push
mov
xor
out
cmp
outsl
pop
pop
mov
adc
xchg
lds
xor
movsb
ret
cmp
jl
loop,pt
iret
push
icebp
outsl
add
xchg
and
mov
dec
xchg
fcmovnu
adc
push
aad
gs
cld
xchg
mov
dec
push
dec
jbe
std
xchg
add
mov
xor
cmp
push
mov
pusha
jp
pop
int
ret
pop
and
rcl
mov
rcl
in
ret
xor
sbb
popf
xchg
imul
jecxz
iret
stos
mov
and
push
xor
mov
je
mov
clc
cmp
cmp
mov
imul
sahf
push
out
sbb
jno
dec
shll
and
inc
notb
or
adc
sub
nop
sbb
setbe
add
jb
hlt
leave
jae
mov
pop
pushf
movsb
adc
xor
mov
dec
stos
cmpsb
mov
shll
out
push
or
xor
mov
or
inc
sbb
or
jge
imul
repnz
mov
or
push
in
push
jae
lahf
pop
pop
lret
cmc
mov
sub
add
scas
lds
xchg
or
ss
dec
adc
pushf
fldt
or
jge
leave
sub
dec
das
mov
mov
and
dec
shl
and
je
sbb
push
fstp
jae
push
sbb
and
xlat
rcll
inc
outsl
mov
xchg
mov
cwtl
int
jno
cmp
lret
clc
popa
pop
fmuls
jae
dec
cltd
dec
pop
mov
push
aaa
jo
aaa
loop
adc
jmp
cltd
sub
scas
ret
icebp
enter
popa
jb
and
mov
je
inc
jne
addb
cli
cmpsl
jle
mov
jae
dec
iret
cmpsl
mov
in
out
dec
mov
xor
in
clc
jo
sbb
insb
push
push
in
and
fistps
int3
call
rcrl
cmpsl
mov
cmpsb
dec
adc
cmp
sub
mov
xchg
pushl
and
jge
jb
lcall
xor
sbb
pop
push
outsl
xor
rolb
inc
adc
movsl
xchg
mov
inc
inc
pop
mov
out
jl
xor
mov
pop
sbb
mov
pop
loopne
pop
push
jecxz
ffree
or
pop
pop
push
mov
sub
xor
sti
les
push
push
push
xchg
push
xchg
rorl
jge
outsl
jae
cli
dec
sbb
test
aas
out
xchg
ss
neg
pop
mov
push
imul
jl
dec
push
sbb
push
mov
inc
frstor
out
lahf
push
cmp
dec
dec
jno
imul
popa
mov
add
add
cmpsl
roll
cmp
inc
inc
ret
stos
push
outsb
idivl
mov
sbb
stc
cmpsb
xlat
pop
loopne
push
xor
sbbl
inc
push
ror
xchg
lods
cmp
mov
jnp
jecxz
xchg
cmp
cltd
lahf
jbe
int
sub
xchg
outsl
test
aas
enter
cmp
in
dec
out
call
daa
xchg
je
sbb
xor
or
out
or
shlb
lahf
push
mov
or
aam
xchg
fistl
jecxz
mov
sbb
xor
xchg
jb
push
lahf
into
jle
add
dec
and
popf
and
cli
pop
xchg
pop
mov
cmp
xchg
test
ja
loope
flds
int
cmp
fldenv
fwait
lds
or
xor
push
lret
js
stos
std
push
or
push
adc
xchg
in
daa
mov
mov
call
inc
xor
mov
jno
xchg
arpl
jl
add
pusha
push
jmp
rcrb
and
pusha
push
xchg
and
mov
insb
into
imul
repnz
mov
lods
push
cmp
pushf
mov
and
ret
ljmp
shll
jae
cltd
or
push
js
das
loope
push
and
movsl
inc
cmpsl
lds
xchg
xchg
sub
jecxz
jge
cld
mov
int3
repz
cltd
popf
les
dec
loope
js
movl
out
fcmovbe
out
dec
xchg
divl
outsb
mov
mov
or
cmp
aad
neg
mov
pop
cltd
insl
outsb
cmpsb
jno
dec
aad
in
fsubrl
inc
movb
fldl
fdivs
pop
or
push
leave
jp
bound
outsl
xor
insl
pop
sti
fisubl
pop
xchg
fadds
arpl
lret
test
jecxz
cli
push
or
jbe
or
shrb
shr
mov
imul
add
cmp
addr16
mov
imul
jae
or
outsb
out
sbb
adc
fldenv
and
sbb
sub
lea
cmc
std
addr16
sub
dec
push
mov
test
outsl
pop
andl
lea
inc
and
jae
into
mov
or
lock
push
cmp
test
mov
cmp
pop
mov
sub
pop
gs
ret
movlps
sbbl
lds
cmp
sub
out
jmp
jae
jnp
sti
pop
inc
jecxz
dec
sub
and
and
in
xor
dec
xchg
loop
push
add
and
lcall
insb
loopne
test
pop
dec
pop
jno
imul
lods
out
icebp
sbb
cmp
cmp
cli
sub
xor
rorb
movsb
xor
lcall
adc
ds
out
lock
in
inc
push
xor
xchg
mov
loopne
push
cli
mov
mov
iret
aam
pop
xor
enter
out
inc
push
pop
sbb
inc
mov
xchg
ret
adc
loop
cs
add
mov
pop
ficoms
push
arpl
repnz
popf
push
ss
cmp
jecxz
inc
imul
cmp
push
or
sti
jbe
push
repz
cmp
and
insl
cmpsl
or
add
popf
xchg
push
jae
cmpsl
pop
icebp
sub
mov
xor
push
or
xor
gs
ret
mov
jge
lret
cwtl
test
fsubrs
or
loope
dec
scas
into
ret
stc
into
mov
lods
mov
nop
cmp
lods
gs
mov
push
adc
mov
adc
lods
mov
inc
cmpsb
in
inc
add
call
fstps
push
sbb
test
adcl
dec
aaa
mov
mov
jae
adc
mov
dec
lods
or
jg
cltd
dec
je
add
jae
push
sbb
ds
cld
cmp
jns
mov
rcr
mov
push
and
aam
fstl
popf
bnd
xor
jae
scas
test
fidivs
adc
clc
add
push
jl
aas
mov
pop
and
and
xor
push
xor
pop
loop
xor
dec
stc
sarl
mov
jle
imul
or
hlt
leave
cmpsb
ficoml
lea
jg
add
mov
cmpsl
cmp
dec
cwtl
in
pop
push
shlb
adc
lods
xchg
std
insl
push
mov
xchg
test
xor
push
fisubrs
push
rcll
div
inc
xchg
mov
jle
jmp
inc
sub
xor
repz
out
lock
jnp
scas
pcmpgtw
mov
xlat
testl
mov
sarb
les
insb
push
pop
inc
aam
mov
dec
popa
shrl
mov
scas
jns
cs
xchg
dec
dec
adc
lods
pop
add
add
sarl
data16
fnstcw
pop
sub
sub
dec
push
in
je
pop
jp
pop
sbb
adc
imul
add
cli
add
inc
ret
or
push
dec
mov
outsb
xchg
and
imull
push
fs
mov
sbb
int3
xor
push
shlb
add
pushf
cmpsl
in
cmp
movsl
sbb
jg
out
dec
aas
push
lods
lea
or
lds
push
ds
jp
ror
cmp
insl
dec
scas
icebp
sub
or
pop
adc
xor
pop
call
xchg
addb
lock
clc
lea
cmp
jmp
ljmp
outsl
pop
mov
stc
sub
dec
repz
and
fwait
mov
test
cmpsl
cld
inc
fisttpll
mov
rclb
cwtl
xor
push
cmp
fiaddl
arpl
add
call
jle
js
repnz
adc
stc
push
lcall
pop
mov
lds
and
dec
shr
mov
rclb
pop
js
ds
aas
dec
andb
in
xor
nop
scas
sti
mov
push
shll
lcall
sub
shlb
sbb
lock
rorl
out
jle
sub
gs
stc
pop
cmp
or
adc
pusha
nop
jne
cs
cmpsb
or
popf
cwtl
pop
jecxz
fmuls
mov
out
rcl
or
push
mov
cmp
imul
negl
loop
and
add
in
and
push
lahf
jle
xorb
daa
rcrb
movsl
lock
or
mov
cli
into
mov
or
xchg
xchg
lods
fadd
mov
call
push
push
mov
sbb
daa
aas
jecxz
pusha
shr
mov
popa
nop
int
cmp
outsl
dec
repz
jno
lds
jno
sbb
sti
fildl
mov
mov
mov
in
mov
and
and
adc
sahf
clc
inc
sub
les
mov
push
jae
push
dec
xchg
sarb
fs
je
jp
mov
adc
adc
xor
push
mov
test
lods
inc
lea
das
cs
push
cltd
push
pop
mov
int
jmp
inc
xchg
pop
jl
lods
outsb
je
imul
cwtl
inc
scas
ficomps
push
pop
mov
loope
aas
dec
lret
lcall
out
enter
movsb
rorb
adc
pusha
or
push
inc
arpl
push
stc
pop
mov
std
cmp
lods
xchg
in
shlb
pop
dec
rol
mov
adc
inc
xor
jecxz
pushf
inc
cwtl
xor
and
jmp
and
mov
cld
xor
sbb
or
mov
mov
jmp
inc
cwtl
outsb
aaa
sub
inc
imul
daa
and
aam
xchg
xor
insb
clc
dec
std
shlb
sarb
repnz
jle
cli
inc
xor
xor
and
icebp
sub
scas
mov
pusha
lods
xor
in
les
subb
lods
fdivs
jl
jp
jg
in
dec
int
sbb
shl
inc
xor
adc
imull
mov
sbb
push
daa
scas
pusha
xlat
push
js
out
ret
mov
mov
imul
jo
pop
xchg
pop
pop
enter
ret
insb
sub
xchg
repnz
hlt
inc
push
inc
lret
mov
subl
push
jns
mov
loop
aad
and
jmp
inc
into
xor
pop
sub
mov
enter
sti
cmp
and
sti
repz
sti
pop
repz
cmp
jle
shrl
inc
or
cmpsb
jns
jecxz
adc
jge
dec
and
rorl
adc
ss
lret
dec
shrb
lcall
adc
in
xor
gs
jecxz
in
repnz
adc
scas
sbb
push
xor
repnz
nop
inc
or
add
push
shrl
sub
jbe
mov
inc
shrb
dec
sub
mov
repz
push
lods
lret
mov
popf
xlat
dec
dec
push
repnz
jb
ret
sbb
add
or
imul
pusha
pop
enter
or
pop
leave
push
imul
add
stos
dec
repnz
popa
xchg
popa
std
push
and
loope
or
pop
push
shll
sub
sub
xchg
shufps
mov
scas
sbb
sbb
imul
dec
decl
shrb
test
icebp
cli
cltd
stos
mov
popa
int
inc
cwtl
test
enter
movsl
jmp
mov
adc
roll
dec
sub
jle
cmp
push
imul
or
into
cld
gs
rcr
in
lret
ret
pop
mov
pop
gs
int3
cmp
sub
int3
mov
insl
iret
add
dec
xchg
lret
jecxz
cs
and
mov
fdivrs
cli
nop
jnp
lea
jecxz
in
movsb
andb
bound
loop
push
repnz
cmpsl
pop
xchg
add
scas
mov
sub
add
cmp
add
sbb
sub
enter
repnz
jnp
addr16
xor
out
insl
dec
divl
dec
in
or
mov
pop
pushf
andb
hlt
cmp
and
xchg
mov
add
xor
jns
lods
je
cmp
stos
xchg
ja
shlb
mov
int3
lods
sub
mov
dec
incb
mov
hlt
test
pop
add
loopne
pop
and
orb
in
inc
mov
inc
insl
pusha
pop
add
or
shr
pop
mov
out
aad
xor
jg
inc
mov
dec
iret
push
out
jbe
addr16
int
and
popf
xchg
outsb
push
mov
in
fcmove
jecxz
stos
lock
adc
cmp
out
lcall
ds
imul
add
js
xchg
rolb
dec
pop
arpl
jb
xchg
xor
pop
lcall
xchg
sbb
out
sub
sub
popf
push
mov
mov
fwait
and
popf
sbb
sbb
add
cltd
in
ja
ficompl
loop
cltd
fnstenv
dec
push
push
inc
or
in
fstp
js
jp
insl
push
sub
nop
adc
mov
cli
pop
out
jecxz
push
jg
addr16
and
jle
mov
ljmp
add
fisubrs
pop
mov
mov
pop
mov
mov
push
ja
cmp
movsb
cmp
loopne
adc
into
pop
xor
xchg
fimull
xor
adc
or
lods
loope
js
pop
mov
cmp
jb
imul
pop
ret
push
in
lods
add
repnz
icebp
and
std
enter
xchg
or
jp
je
fildll
and
hlt
ja
jne
or
jno
repnz
incl
dec
data16
or
clc
xor
push
enter
ljmp
fmuls
pushf
insb
pop
pushf
jnp
pop
out
aam
outsb
xchg
pusha
jbe
addr16
adc
or
push
jle
loopne
xor
testb
ds
lret
bound
repz
popa
ds
js
cld
loop
push
test
repnz
dec
inc
scas
imul
inc
pop
jl
jb
cli
arpl
and
cmp
jo
xchg
lock
xor
pop
mov
out
pop
cmc
outsl
xor
push
dec
imul
mov
sbb
outsb
lods
loop
sbb
je
lret
fldcw
push
daa
movnti
mov
xor
mov
cltd
sub
cwtl
and
cmp
adc
lods
es
scas
in
rol
jb
mov
jns
fsubl
inc
nop
stc
push
test
pop
pop
stos
cmp
clc
xor
repz
into
pop
inc
mov
loop
jne
out
hlt
sahf
test
jbe
shlb
dec
and
outsl
lods
sahf
cmp
fcompl
pop
aad
fs
aam
cmp
mov
and
dec
pop
idivb
sti
out
lret
or
inc
xchg
pop
int3
sbb
adc
ja
jo
lret
add
inc
cld
cli
test
inc
add
jo
mov
dec
lcall
int3
inc
aaa
cmp
fwait
cmp
mov
push
mov
lgs
cmp
iret
push
sub
jmp
hlt
sbb
lret
dec
in
inc
mov
pop
push
sbb
cmp
xchg
ljmp
rcr
shlb
push
sub
mov
cltd
inc
test
gs
sbb
lahf
into
hlt
cmp
rorb
mov
notb
insl
hlt
sbb
inc
arpl
pop
and
jmp
cmp
mov
cwtl
mov
mov
aad
fsubr
push
add
inc
xchg
mov
adc
ret
je
jge
nop
repnz
je
xor
jnp
pushf
popf
andb
and
and
mov
scas
mov
std
gs
pushf
gs
pop
and
or
inc
cmc
mov
add
sbb
cmp
mov
xchg
pusha
les
popf
rclb
mov
pop
bound
scas
mov
repnz
repnz
pop
add
rcll
xchg
sub
inc
adc
rorl
cmp
push
out
or
int
mov
enter
and
cwtl
fldt
fldt
or
insl
xor
cmp
aad
add
in
sbb
test
outsl
xchg
xchg
jo
inc
adc
insl
xor
bound
scas
jge
adc
scas
push
push
pop
lock
jo
out
pop
shlb
scas
fidivl
stos
add
js
dec
jb
jmp
pop
into
js
push
add
nop
daa
movsb
clc
jecxz
sti
loope
sub
dec
adc
sub
fdivs
sub
mov
popf
fildll
daa
inc
inc
cld
jmp
jp
push
or
nop
xchg
adc
jb
add
mov
inc
dec
xchg
subl
sbb
push
fistps
sti
sbb
push
lea
mov
rep
inc
xchg
mov
adc
xchg
leave
mov
dec
hlt
hlt
or
jb
jmp
outsl
mov
mov
push
outsl
mov
mov
jmp
sbb
insb
ja
adc
shll
sbb
pop
pop
xchg
mov
mov
jno
inc
aas
jmp
repz
mov
dec
adc
mov
inc
fwait
cmp
mov
mov
mov
clc
mov
push
mov
fs
rcl
jns
xchg
add
mov
adc
jecxz
mov
pop
test
xchg
xchg
xor
xor
pop
mov
sbb
lahf
cs
sub
lods
push
ret
cli
mov
xor
push
mov
adc
cmp
inc
fcos
dec
mov
ss
lcall
mov
xchg
out
push
outsl
jge
pop
enter
aas
movsb
xchg
xor
lcall
out
fstps
lahf
mov
loope
rorb
sub
in
rcrl
std
aas
jmp
nop
push
inc
jo
push
adc
push
addl
imul
mov
inc
add
ficompl
stos
aad
stc
cli
aaa
in
pop
mov
das
xor
out
test
int
push
cld
and
aas
loop
stos
dec
popa
xchg
lcall
and
testb
cld
testl
cltd
loopne
jbe
push
ss
movsb
enter
or
clc
aad
push
stos
xchg
mov
inc
mov
outsl
loop
testl
test
mov
adc
mov
out
sti
xor
jmp
xchg
sahf
jp
sub
pop
xchg
cmpb
mov
fadds
scas
adc
lret
xchg
lock
xchg
xchg
inc
and
repz
cmp
mov
testl
pop
loopne
notl
insl
cltd
jle
push
sub
adc
lods
add
aaa
divb
iret
subl
pushf
loopne
sti
jp
es
int3
movsb
les
jmp
push
mov
jge
imul
push
lea
dec
sub
mov
adc
pop
mov
push
inc
ret
pop
je
sbb
cli
mov
xchg
push
leave
int
xor
sbb
mov
adcl
repz
xchg
jo
outsl
push
cltd
les
dec
inc
xor
jg
mov
pop
das
inc
pop
sbb
cld
lcall
mov
cmp
outsl
imul
mulb
and
icebp
push
loopne
pop
xchg
sub
dec
mov
cmp
pop
popa
aad
fisubl
mov
arpl
mov
pop
xchg
in
dec
lcall
addl
push
xchg
call
push
lea
in
hlt
faddl
mov
bnd
pop
das
fistl
jo
repnz
das
arpl
add
push
fxtract
stos
mov
lret
adcl
xchg
or
jge
sbbb
mov
clc
mov
bnd
int3
add
cltd
sbb
out
add
scas
movsb
sysret
xchg
adc
xor
enter
dec
insl
insl
inc
pabsd
movsl
leave
mov
push
xor
sahf
cmp
jle
mov
aaa
xor
sti
inc
rorb
fs
insl
adc
sti
mov
pop
cmp
leave
jl
jmp
test
mov
and
and
push
in
mov
stos
mov
imul
pop
push
scas
push
push
outsl
cmp
jo
adcb
xchg
shrb
imul
aam
bnd
popa
mov
or
pop
cs
mov
das
mov
sbb
jge
fidivl
imul
sbb
xchg
jg
int3
and
je
jge
dec
lahf
dec
xchg
fcoms
mov
mov
jne
mov
inc
aad
or
mov
push
fnstcw
ror
ret
fildll
mov
enter
or
std
test
outsl
push
sub
ja
mov
xchg
sarl
ljmp
sbb
adc
out
adc
in
inc
jle
mov
push
mov
enter
xchg
cmp
and
jo
iret
fmuls
dec
lret
scas
lock
ljmp
and
mov
rcrl
mov
sub
add
cli
push
out
lcall
testb
xor
repz
mov
lods
test
add
fbstp
dec
pop
test
cld
cmpl
push
xor
divl
lock
arpl
pop
cmp
push
les
pop
and
mov
xchg
sbb
push
jno
sub
add
pushf
dec
adcl
fcmovnbe
xchg
cmc
mov
nop
or
gs
push
repnz
daa
sub
sub
mov
or
inc
pop
jns
sbb
xchg
aad
movsl
aas
mov
mov
xchg
jmp
push
or
push
jge
adc
insb
push
in
mov
mov
or
enter
sub
pop
movsb
outsb
lea
pop
aad
jmp
dec
dec
fdivrp
dec
fs
inc
orb
lods
stos
jge
sbb
or
push
and
dec
outsl
aaa
dec
push
aam
nop
dec
addl
mov
ss
jbe
adc
iret
push
and
adc
subb
jbe
sub
idivb
loope
mov
mov
rorl
fdivrs
xchg
xor
sub
xchg
stos
popl
js
in
mov
cmp
or
jmp
ljmp
jp
mov
inc
mov
mov
xchg
outsl
aaa
fadd
pusha
push
dec
inc
rolb
cmp
lock
ret
fldenv
and
iret
in
mov
jo
sarl
lcall
mov
cwtl
cmp
xchg
inc
mov
sbb
or
mov
pop
roll
nop
cwtl
gs
imul
mov
cli
call
pop
call
push
mov
jb
adc
jp
add
or
rcrl
cmc
mov
ret
stos
jae
in
xchg
inc
cltd
sbb
repnz
bound
hlt
dec
push
pop
div
mov
cmp
movsb
int
out
shrl
pop
sbb
divl
dec
jmp
xchg
push
in
mov
mov
test
xchg
inc
cli
sbb
fidivl
or
lret
inc
and
std
cmpl
leave
sub
sbb
stos
js
mov
imul
cltd
inc
jae
add
dec
lar
cld
cmpsl
call
test
sahf
jb
stos
test
xor
pop
xchg
gs
adc
in
or
dec
pop
push
mov
jl
mov
rolb
pop
rcrb
dec
cmpsl
adc
cmpsl
xlat
jl
sub
xchg
or
pop
push
add
add
test
jb
sahf
pop
mov
loopne
call
push
pop
scas
add
jo
dec
xchg
dec
pop
int3
repnz
mov
in
cld
aaa
call
cmp
dec
or
jns
dec
mov
loope
pop
mov
cmpsl
push
jle
cs
mov
push
dec
lcall
xchg
pop
not
stc
aam
adc
cmp
or
leave
arpl
cmp
test
fsubl
push
and
jge
movswl
xor
jl
stos
and
push
lea
ljmp
inc
ficompl
leave
mov
shrb
sbbb
fsubrs
xchg
loop
cli
loopne
mov
sbb
xor
mov
jb
icebp
mov
sarl
aas
fs
int
ljmp
fisttps
and
int3
or
adc
cltd
mov
xor
add
mov
adc
and
mov
scas
dec
adc
xchg
xchg
test
fnstcw
out
push
adc
inc
ret
dec
mov
lea
push
push
pop
sbb
jmp
mov
xchg
aas
add
shlb
mov
lret
xor
sarl
xor
jmp
test
adcb
out
shlb
add
jl
mov
xchg
push
dec
pop
jae
lods
mov
adc
into
jbe
xchg
sub
fldcw
pop
xor
sar
sbb
leave
xchg
jle
cmp
lcall
dec
daa
mov
or
fisttps
lods
fbstp
aam
gs
cld
pop
arpl
ljmp
in
xor
out
mov
fmuls
sub
cmp
jns
and
sub
ss
and
je
and
mov
push
xchg
and
test
or
movsl
stc
nop
mov
ucomiss
ret
add
add
cmp
xchg
mov
scas
dec
das
adc
fstps
fwait
jmp
scas
sarl
xchg
or
push
push
and
pop
adc
sti
roll
cmc
push
xor
adc
ss
insl
js
fists
xchg
hlt
adc
stos
decl
xchg
sub
gs
add
jbe
push
fdivl
mov
fs
xorl
cmp
xchg
cmp
pushf
loop
dec
mov
int3
cltd
add
pushf
jl
push
js,pt
push
hlt
sub
sahf
pop
inc
inc
push
pop
mov
jl
xchg
cld
cmp
mov
pop
dec
int
cmpsl
and
and
mov
int3
jl
fwait
xor
test
into
xchg
sahf
ss
das
xchg
stos
std
int3
lea
out
dec
sbb
lods
pusha
push
sti
cmp
loope
and
mov
lcall
jp
xor
add
clc
sarb
jmp
cmp
repnz
call
jbe
clc
pop
fidivrs
or
mov
repnz
cmc
sbb
out
negb
loop
addr16
jle
fcomps
fldt
repnz
cmc
pop
lret
push
lcall
sub
xor
aad
fwait
repz
or
jnp
inc
adc
loope
xor
jmp
aam
xchg
clc
and
lret
dec
es
push
in
outsl
insb
xor
or
add
nop
out
mov
lods
test
mov
stc
lds
paddd
mov
adc
jle
out
aad
or
out
add
dec
inc
lock
pop
dec
mov
cs
mov
fwait
xorb
push
insb
into
cmp
pop
fdivrp
cmp
inc
js
scas
xchg
hlt
loope
or
filds
push
into
push
or
inc
cli
add
mov
pusha
test
jno
insb
cmp
xchg
lret
push
outsb
in
mov
cmp
mov
les
test
xor
jae
enter
inc
xchg
popa
inc
mov
mov
scas
movsl
and
insb
aad
pop
push
xlat
outsb
and
imull
mov
xor
aaa
cmp
in
stos
mov
movsb
mov
out
scas
dec
cmp
xor
repnz
add
inc
or
push
dec
pusha
mov
lahf
push
loop
loope
sbb
mov
daa
push
mov
mov
jge
mov
test
xchg
xor
or
sbbl
addr16
fistpl
sub
insl
inc
clc
outsb
xor
fcmovnb
cmp
repz
cmp
or
push
fisubrl
icebp
lds
jmp
cmpsb
leave
cmp
jle
idivb
add
gs
cmpsb
je
xor
bnd
xor
cwtl
cmp
pop
pop
xorl
adc
clc
popa
hlt
out
hlt
lret
xlat
stos
sbb
jle
or
sahf
ja
lret
inc
jno
xchg
arpl
lcall
add
in
mov
inc
inc
cs
subb
std
cmp
popa
jl
sbb
mov
mov
pop
in
push
mov
inc
jge
pusha
mov
out
aam
and
aas
or
jbe
xor
nop
ret
mov
push
movsb
xchg
xchg
or
mov
lahf
sub
dec
sbb
movb
jbe
neg
imul
dec
and
sub
cmova
mov
pop
in
xor
rcrl
add
dec
xor
sti
inc
cmpsl
mov
stos
outsb
mov
les
and
sti
jge
fldenv
bound
xchg
jae
insl
mov
or
pushw
xlat
push
dec
test
in
cs
int3
push
fstpt
mov
mov
pop
xor
sbb
loopne
sbb
pop
mov
xchg
add
push
push
imul
mov
mov
fldl
and
mov
dec
je
icebp
push
scas
mov
pop
daa
sub
sar
and
aad
inc
hlt
or
stos
jp
sub
ja
jbe
mov
or
pop
scas
cltd
fsubrs
cld
mov
icebp
movsl
sub
ja
xor
addr16
in
loope
fstpl
add
fldcw
or
pop
cli
push
pop
aas
cmp
in
lret
sbbb
pushf
add
call
into
pushf
in
fwait
and
hlt
stos
jo
inc
jb
das
lret
adc
xor
dec
mov
jg
adc
pop
sub
mov
adc
pop
arpl
fadd
xchg
sub
test
subb
push
insb
add
or
xchg
aad
hlt
lahf
or
inc
dec
test
or
jmp
inc
or
rolb
andl
inc
mov
inc
add
adc
xchg
lcall
push
dec
fmull
xchg
or
add
add
test
pop
and
adc
push
jmp
leave
mov
imul
add
jb
outsb
sub
jae
push
stos
aaa
add
push
in
pop
imulb
cmp
int
call
adc
jb
add
loopne
push
fildll
cmpsl
xlat
adc
push
mov
cli
inc
or
lods
hlt
repz
pusha
sbbl
mov
shlb
imul
mov
lock
xor
aaa
add
test
mov
fistpl
lcall
cs
add
stos
frstor
lds
mov
push
cmc
push
mov
mov
stos
mov
lock
xchg
addb
cmc
movsl
rorb
neg
xor
repz
jo
adc
cmpsb
jmp
cltd
and
je
clc
fadd
add
stc
movsl
insb
mov
into
insl
jns
test
mov
jg
mov
adc
add
jmp
fldl
add
xchg
div
cmp
add
lods
jbe
cmp
xor
arpl
inc
adcl
fidivrs
adc
lret
dec
and
sub
insl
lret
aaa
and
mov
aad
pusha
pop
lods
push
or
mov
ljmp
xor
and
xor
mov
or
xor
stos
mov
and
in
movsl
mov
jbe
push
xchg
ret
fs
aas
push
and
dec
pop
cmc
cmp
mov
out
aas
ja
fisttpll
adc
inc
push
mov
fisttpll
inc
cmpsb
loop
sub
mov
jp
and
stc
xor
xchg
cmc
and
cltd
jmp
dec
inc
in
loop
leave
shrb
stos
inc
jge
loopne
rcr
out
test
fsubrs
loopne
daa
test
stos
std
orb
fdivp
xchg
ja
sti
inc
mov
mov
and
dec
scas
insl
loop
xor
scas
sub
into
imul
lock
popa
call
ss
mov
jg
mov
sub
pop
addr16
std
sahf
inc
cld
ja
leave
inc
dec
adc
cmp
jno
and
mov
mov
mov
into
ljmp
pop
and
jmp
cs
lock
jb
adc
inc
rcl
inc
enter
jl
cmpsl
lret
push
cs
cld
sub
and
xor
lea
mov
mov
fmull
int3
inc
in
or
add
jae
imul
in
jle
nop
mov
lock
test
out
mov
aam
mov
fsubrs
cltd
gs
cltd
scas
push
stc
add
aad
fstl
hlt
pop
push
adc
cmpsl
jmp
sub
sub
push
outsb
mov
clc
in
js
jl
add
xor
in
stc
stos
mov
mov
shrl
dec
lret
add
inc
cmp
fnstcw
clc
push
orl
icebp
and
mov
push
or
push
add
dec
push
outsl
and
sub
or
pushf
push
pop
dec
dec
fnop
mov
lea
push
push
lock
aad
and
sub
push
dec
adc
sub
cmp
fwait
jl
pop
shrb
mov
mov
popa
ss
dec
jae
add
mov
mov
rolb
shrl
mov
adc
jecxz
dec
mov
repnz
iret
xor
pop
sbb
mov
xchg
cwtl
cmp
sbb
call
jle
in
or
mov
adc
mov
cmp
das
xor
aad
and
stos
xor
inc
xchg
movaps
rorl
lods
sub
mov
jp
icebp
sub
bound
lods
adc
mov
cmpsb
add
pop
adc
push
and
outsl
mov
cmp
imul
xchg
cmp
lcall
mov
add
mov
cltd
insb
addr16
cli
mov
mov
imul
movsl
xchg
adc
pop
jns
sub
test
sbb
dec
stc
loop
ja
int3
shll
das
mov
test
push
icebp
sti
push
mov
test
ret
inc
sti
mov
test
rorb
call
inc
mov
pavgb
ljmp
mov
jmp
xchg
inc
ss
add
movsl
in
lods
mov
xchg
xor
scas
dec
and
aaa
sub
out
and
dec
das
cmc
enter
ds
arpl
popf
test
mov
sti
fistpl
ror
mov
dec
mov
iret
cs
sub
call
push
or
xchg
into
test
aad
jecxz
sbb
pop
lock
dec
ss
jne
out
jne
insb
dec
ljmp
andl
loopne
pop
mulb
mov
test
mov
repnz
scas
mov
std
jno
jl
cmp
xor
adc
leave
pop
js
xlat
aad
adc
iret
push
xor
ficomps
loopne
and
jl
repz
cmp
pop
xor
sarb
and
add
xor
icebp
or
jo
mov
int
shll
loop
out
and
jbe
sbb
add
mov
es
pop
cs
adc
subl
adc
inc
xchg
out
nop/reserved
mov
sahf
mov
mov
aas
mov
ds
cwtl
mov
insb
add
scas
sbb
je
jp
add
clc
inc
std
dec
cmpsl
mov
cmc
cli
in
mov
mov
push
push
dec
inc
jbe
insb
es
push
xor
aaa
xchg
xor
mov
in
cmp
cmp
sub
adc
sahf
repnz
mov
fbld
in
stc
inc
lods
out
cli
inc
mov
cmp
loopne
ret
leave
cmp
sbb
lods
scas
add
push
fwait
clc
xchg
mov
jno
add
in
out
std
sbb
mov
xor
push
addr16
xor
mov
add
xor
iret
jnp
mov
xchg
into
lret
mov
das
inc
jno
mov
ds
and
dec
push
arpl
cli
negb
inc
jns
pop
sub
cmpsb
mov
loop
arpl
shl
call
and
rcr
gs
or
out
call
cmpl
fs
sub
es
fwait
adc
dec
push
sbb
add
mov
mov
outsb
shlb
mov
loope
iret
aam
pushf
push
test
outsl
imul
test
stos
sbb
mov
adc
in
in
stc
int
shll
in
sti
imul
cmp
xchg
push
iret
pushf
hlt
cmp
pop
sbb
mov
js
movsb
sbb
sbb
clc
jp
sub
adc
scas
les
stos
mov
sbb
pop
out
inc
bound
xlat
push
fnsave
mov
lea
arpl
loop
outsb
into
in
mov
dec
out
pop
pop
popf
jae
mov
xchg
cmp
mov
cmc
adc
dec
in
inc
jecxz
stos
pavgw
std
scas
hlt
test
mov
pop
aas
outsb
pop
lcall
inc
bound
cmp
inc
loop
dec
sub
scas
or
mov
adc
cld
add
pop
add
cwtl
outsl
or
sub
shll
jae
inc
jnp
jle
jo
popf
scas
mov
sub
inc
push
test
adc
jo
popa
clc
add
jecxz
std
cmp
push
mov
xchg
add
lods
call
cmp
testl
aam
addl
inc
push
addr16
xor
call
mov
hlt
dec
scas
push
jmp
inc
push
jbe
pushf
roll
push
lods
or
xchg
cwtl
push
xchg
cmp
mov
mov
mov
enter
adc
out
sahf
xor
loopne
cmp
fcompl
fcompl
fwait
cld
add
inc
inc
bound
fmulp
add
xor
sbb
xchg
int3
push
xor
xchg
jg
insb
sbb
pop
and
cmp
imul
cltd
xchg
outsb
inc
scas
lcall
push
shl
icebp
cld
les
outsb
aas
jge
push
sub
int
dec
cmpsb
sbb
shlb
xor
push
loop
xor
jg
add
sahf
jnp
repnz
sub
mov
add
out
xchg
cmp
out
xchg
jg
clc
adc
and
out
and
mov
cmp
xchg
cmc
fisubl
pushf
sub
rorl
push
mulb
mov
push
inc
inc
daa
mov
push
fldl
jmp
jle
pop
div
addr16
push
mov
cmc
dec
ss
xor
jle
mov
push
xor
add
movsl
aas
push
cmp
push
call
and
fwait
mov
cmp
out
sbb
mov
dec
jb
jb
bound
push
gs
shlb
or
repz
dec
sbb
into
frstor
xorl
sub
pop
pusha
sahf
cmp
loop
adc
push
into
fs
into
test
mov
xchg
out
mov
inc
mov
sbb
dec
rclb
das
sub
push
lret
xchg
loop
mov
xchg
call
movsb
add
imulb
xor
mov
call
insb
shrb
ja
fistps
and
gs
arpl
and
jmp
or
cmp
jnp
adc
mov
pcmpgtb
add
pushf
sub
lods
inc
xorb
outsl
and
sbb
ljmp
xchg
or
push
mov
imul
sbb
sar
add
inc
ficompl
xchg
aas
mov
ret
fwait
ja
pop
sub
mov
and
dec
cmp
inc
popl
out
xchg
push
rorl
into
pop
lahf
xor
les
gs
xchg
das
add
stc
add
test
xor
addb
outsl
and
je
xor
add
cmp
add
out
cmc
push
rolb
loopne
sahf
mov
test
daa
lds
xchg
push
pop
shrl
scas
adc
sub
decl
je
xlat
pop
pop
and
aam
daa
ret
movsl
lcall
mov
sbb
cs
imul
testl
addl
out
adc
fwait
stos
aam
push
ja
jns
pop
ficoml
out
insl
jmp
iret
adc
cltd
and
add
mov
mov
lret
push
push
rcrb
mov
xor
xor
outsb
mov
add
mov
dec
movsl
cltd
push
sub
mov
lods
hlt
testl
test
rcrl
sbb
in
leave
sub
inc
lahf
push
es
and
jg
je
add
xchg
lret
mov
xchg
push
cmp
shr
or
sub
rcl
mov
movsl
ret
jb
pop
fcmovu
push
mov
xor
hlt
xchg
and
dec
stos
popa
cmp
sahf
xchg
cmp
mov
int3
pop
sbb
out
and
dec
int3
sbb
inc
aad
jnp
scas
sub
cmp
inc
jecxz
fcmovnbe
xor
fiaddl
sahf
pop
mov
and
jecxz
ret
adc
inc
rol
imul
notb
pop
rcrb
jle
pop
mov
std
subb
outsb
cld
fisubrs
scas
es
or
mov
in
adcl
fists
cltd
mov
jo
fcomps
sub
hlt
sub
xor
add
sti
add
push
adc
sub
lds
sbb
call
sbb
mov
test
in
lcall
xchg
sub
mov
aaa
xor
adc
xor
or
pop
add
shll
insb
jbe
xchg
fldenv
cli
xor
insb
pop
xor
xor
sbb
ret
lock
repnz
hlt
incl
pop
xchg
xchg
and
cmp
jge
xchg
jne
sub
into
push
add
push
stos
ja
cmp
sub
mov
hlt
aam
popl
cs
ror
std
fdivr
test
je
adc
data16
mov
or
sti
mov
jl
xchg
and
outsb
mov
loopne
sub
adc
repnz
adc
into
add
mov
cmp
xchg
mov
jl
xor
jns
lds
nop
jae
push
ret
fistpl
fs
test
push
cmp
or
orb
inc
mov
pop
push
sub
jmp
pop
sub
ret
push
pop
cmpsb
jecxz
test
cmp
mov
inc
cld
lods
fs
push
ljmp
and
push
mov
fwait
add
ret
hlt
das
push
pop
fsincos
insb
xlat
jbe
cmpsl
adc
sbb
sub
dec
test
push
das
test
pop
mov
out
add
push
ffree
loopne
out
adc
mov
ret
fnstenv
je
jl
jne
mov
shrl
pop
inc
aas
das
rcrb
sbb
xchg
adc
cmpsw
pop
sarb
rorl
inc
xchg
imul
jb
inc
and
push
cmp
in
sarl
out
in
mov
rorl
or
or
shlb
das
fisubl
sub
iret
hlt
jle
in
jnp
mov
mov
push
inc
adc
mov
iret
in
test
push
xchg
cltd
aas
loopne
pop
das
mov
sahf
ja
pushf
mov
mov
cmp
cli
push
pop
int
adc
fadd
mov
fildl
iretw
repz
and
sub
xlat
adc
leave
sbb
pop
ds
xchg
js
inc
and
sub
fiaddl
sbb
lods
int3
adc
insl
xchg
mov
fldt
inc
mov
push
popa
mov
pop
imul
mov
pop
inc
fisttpl
add
mov
xor
cmp
lret
mov
push
add
jbe
xor
test
xor
cmpsl
fistpll
push
dec
push
psraw
idivl
or
dec
insl
test
sbb
cwtl
pop
push
hlt
rolb
jns
sub
repnz
shl
and
gs
pop
int
adc
rorb
mov
pop
loopne
push
sub
movsb
lret
jge
add
or
shlb
push
sahf
ds
ljmp
mov
int3
inc
cmp
push
mov
or
pusha
lds
outsb
pop
cwtl
push
pop
dec
movsb
mov
iret
pop
lods
testl
out
pop
mov
iret
outsb
leave
mov
adc
jmp
aam
xchg
repz
push
sub
and
and
pop
dec
or
jg
push
xor
sub
loop
jno
lcall
cmpsb
mov
and
jno
iret
movsl
adc
orb
dec
lcall
daa
mov
or
aam
addl
add
aad
in
adc
and
push
xchg
mov
jno
test
cwtl
js
out
sbb
mov
mov
jb
dec
mov
mov
sbb
out
pop
clc
fsubr
hlt
xchg
inc
jb
mov
or
ja
sub
xor
cmc
pushf
jae
add
jnp
adc
out
mov
imul
mov
call
call
mov
out
sub
or
mov
mov
movsl
int3
adc
jbe
idivl
int
or
xchg
cli
call
sbb
call
and
mov
pop
sbb
pop
out
mov
mov
mov
and
insb
add
test
xchg
test
cmp
pop
daa
jp
adc
scas
and
sub
ds
adc
mov
add
jb
mov
jmp
mov
or
cmc
jb
cmc
inc
mov
sbb
push
xorb
rcpps
or
out
fwait
and
cmp
jnp
loop
push
mov
ja
push
aas
sub
data16
inc
stc
stos
stc
mov
imul
les
push
mov
push
sub
mov
or
scas
jne
aaa
in
pop
int3
jo
push
and
and
icebp
add
cmp
rcl
cmpsl
and
int
dec
idivb
hlt
in
adc
aaa
in
sti
pop
scas
jg
clc
int3
xchg
xchg
xchg
dec
or
hlt
pop
jp
xchg
add
jge,pn
jg
push
push
addr16
call
jne
cmp
ret
push
sbb
int
popa
adc
out
hlt
push
fs
popa
iret
lcall
pop
cmpsb
je
stc
mov
push
cmp
mov
sbb
cld
xchg
les
inc
jne
data16
outsl
lea
inc
pop
jbe
add
add
and
out
adc
xchg
add
in
cld
cltd
test
cmpsl
lea
popf
inc
jp
loope
out
clc
jecxz
aad
rcl
mov
out
and
add
xor
mov
fs
mov
and
xor
adc
mov
pop
data16
ret
push
jbe
xorb
pop
cmpsb
cmp
jae
test
sbbl
pop
jp
xor
push
clc
loopne
mov
mov
add
add
xchg
roll
cmp
aaa
mov
dec
pop
lods
xchg
inc
xor
loope
es
or
mov
orb
pop
xchg
push
aaa
dec
or
loop
fwait
lock
mov
inc
xchg
pop
push
xchg
jns
in
or
repz
jo
inc
sahf
mov
into
mov
pop
idiv
icebp
std
sti
out
pop
mov
cmp
bound
sahf
repnz
outsb
cmp
and
sbb
in
adc
and
xor
sub
mov
jae
cmc
lahf
dec
sti
repz
mov
arpl
push
mov
mov
mov
mov
jo
mov
dec
dec
sub
cltd
out
scas
xchg
push
jg
cmp
cmp
sub
jnp
inc
sub
out
lock
jg
imulb
mov
mov
cmp
and
iret
je
iret
mov
sub
sbb
decb
cmp
test
arpl
shrl
jle
sub
jl
dec
loop
gs
lret
push
inc
daa
xchg
js
push
mov
fs
lahf
adc
or
lds
shrl
inc
pop
xor
sub
inc
add
dec
sbb
pushf
orl
into
imul
add
jnp
mov
xchg
push
fsubl
hlt
inc
cmpsb
xchg
stos
sbb
mov
dec
test
xchg
or
gs
cmp
cmp
mov
jae
pop
sub
mov
mov
lds
pushf
sub
mov
lret
imul
push
ljmp
mov
cmc
sub
push
scas
hlt
lea
je
add
mov
mov
hlt
ja
loope
stc
lds
imul
pop
iret
cmp
pop
shr
cli
scas
mov
xor
mov
xchg
pop
jmp
jp
pop
clc
sbb
xchg
mov
sbb
gs
mov
test
pop
jb
lock
data16
jmp
sbb
inc
nop
jbe
icebp
pusha
repz
mov
loop
dec
xlat
push
dec
push
mov
pop
out
sbb
push
in
push
out
out
push
cmp
push
in
mov
bound
sbb
pop
stos
sahf
jmp
out
leave
mov
push
insl
in
xlat
pop
push
subb
imul
xchg
rep
and
in
loope
adc
lods
xchg
xor
mov
or
cs
xchg
xor
in
fmuls
call
push
out
xchg
in
mov
das
mov
mov
inc
js
inc
prefetchwt1
push
call
mov
mov
ret
push
sub
jns
add
adc
repnz
imul
pop
daa
popa
in
or
cmc
in
stc
inc
arpl
sub
xor
xchg
jle
negl
fnstcw
pop
xchg
jbe
pop
imul
dec
adc
iret
pxor
jecxz
jae
mov
sahf
xchg
mulb
fsub
lods
add
out
into
inc
cltd
inc
in
mov
dec
lret
shr
and
xchg
push
insl
jno
mov
fs
jge
hlt
sti
bound
dec
jae
fsubrs
pop
ret
adc
cmpsl
dec
outsb
adc
addl
mov
inc
xor
js
hlt
ss
in
inc
or
int3
adc
lods
rcr
pop
jnp
mov
or
jg
sub
push
and
not
jle
inc
fdivl
outsb
les
and
pop
pop
scas
fs
sahf
add
roll
ret
sti
out
sarb
cmpsl
fisubl
les
icebp
sbb
lahf
outsl
mov
push
in
popf
jg
cmc
mov
call
push
imul
jbe
xor
jmp
or
jle
movsb
and
add
dec
aaa
jns
es
push
lds
shll
dec
pop
inc
scas
loopne
adcb
push
ja
inc
add
es
dec
mov
dec
mov
xchg
sbb
sbb
dec
xor
add
mov
adc
ljmp
add
insl
popa
cmp
lcall
push
test
jmp
jl
icebp
xchg
out
mov
cmp
cmc
jg
and
xchg
mov
push
test
call
and
out
ja
xor
xor
insb
and
pusha
push
ds
pop
movsb
mov
scas
cmp
cmp
stos
push
mulb
lods
mov
xor
shlb
cmp
addr16
sub
fldz
cmpsl
stos
xchg
dec
js
mov
test
sbb
mov
cmp
mov
mov
sbbb
inc
cld
xor
dec
inc
adc
ds
imul
fnstcw
mov
sbb
adcb
inc
adc
cmp
leave
stc
mov
xchg
push
aas
or
dec
test
xchg
leave
or
das
adc
lds
mov
pop
pop
int3
and
gs
dec
jg
stos
dec
ja
dec
lcall
jbe
gs
inc
jmp
out
mov
jo
stos
popa
lock
loop
inc
cmp
clc
inc
cmc
data16
call
cli
pop
jne
mov
pop
dec
rorl
dec
stc
push
movsb
cmc
js
xor
addl
mov
sbb
loope
mov
push
pushf
sarl
outsl
gs
lahf
rcr
sbb
in
popa
sbb
sbb
sub
xchg
divb
xor
aam
xchg
inc
sahf
shlb
out
cmovl
leave
push
and
sub
lret
lahf
push
fstpt
stc
mov
mov
stos
js
and
xor
incl
jne
xchg
push
int
fistps
pop
cmpsb
repz
xchg
cmc
sbb
ds
sahf
inc
and
int
divb
jns
mov
pop
dec
sub
mov
push
mov
jmp
push
iret
mov
outsb
pop
fisubl
filds
push
or
mov
test
mov
nop
jl
jg
sbb
insl
xor
cmp
shrl
inc
cs
inc
xchg
mov
push
repz
inc
in
xchg
mov
cmp
inc
in
rcl
imul
bound
shlb
lret
adc
inc
insb
mov
jle
into
sbb
mov
std
xchg
stos
mov
jbe
jge
or
push
mov
mov
xor
mov
out
push
imul
insb
xchg
popa
rclb
inc
pushf
pop
rol
xor
jns
xrelease
cmc
je
fnclex
test
dec
rcrl
enter
jl
jg
push
mov
mov
xchg
mov
outsl
mov
xchg
fiaddl
fildl
lods
or
loope
fidivs
jns
lahf
lcall
les
fmul
ret
mov
imul
xor
adc
sahf
adc
pop
pop
inc
mov
sbb
push
jne
pop
push
test
loop
sbb
mov
iret
jne
jb
and
pop
cmp
sahf
cmp
fimuls
xchg
fmul
mov
push
xor
mov
cmc
jns
sub
shl
int
and
lahf
sbb
push
iret
adc
es
jle
adc
popf
cmp
jno
cwtl
das
or
jmp
cmp
and
xchg
xchg
scas
mov
inc
mov
mov
pop
mov
and
mov
lahf
sbb
jge
mov
popf
dec
pop
into
cmp
jecxz
adc
jle
cld
xlat
push
dec
call
stc
cli
gs
test
loop
inc
jo
and
inc
idivb
or
repz
or
sub
xor
cmp
cli
aaa
push
pop
cli
xor
dec
mov
push
push
in
add
push
mov
fbstp
jbe
fmull
xchg
push
xor
jns
push
movsl
ss
fs
add
dec
sbb
ja
mov
stc
cmp
sub
in
int3
add
inc
mov
repnz
in
stos
xchg
clc
pop
adc
xor
std
jne
xchg
es
sub
shlb
dec
mov
rcrl
dec
cs
push
outsb
push
cli
adcb
sub
out
or
cli
or
sub
push
cmp
mov
inc
pop
jbe
push
daa
gs
dec
es
xchg
mov
cmpsb
xor
stos
pop
pop
sub
in
ret
or
push
test
add
or
push
cmp
xchg
cmc
sbb
out
sbb
scas
fs
or
mov
out
enter
movsb
std
das
or
mov
icebp
add
subl
stc
mov
mov
mov
pusha
mov
ljmp
outsb
mov
push
dec
sbb
mov
mov
mov
sbb
leave
dec
jmp
pop
ljmp
mov
mov
cmpsl
mov
pusha
sub
test
mov
jl
sub
jb
inc
sbb
inc
or
aaa
das
fstps
insb
lret
fstps
icebp
std
test
cmp
fucomi
in
icebp
incb
and
jp
pop
jp
push
ja
enter
scas
pop
out
andl
je
sbb
pop
aad
jae
and
sbb
inc
sub
cld
jmp
or
pop
mov
mov
inc
dec
arpl
or
ficoms
bound
subb
xchg
rcrl
jecxz
push
xor
and
adc
shll
mov
pop
fucom
clc
insl
dec
lret
outsb
or
ret
and
sbbb
inc
movb
mov
inc
adc
push
mov
adcl
test
js
mov
pop
mov
cmpsl
fwait
mov
dec
jb
xor
push
aam
or
or
ljmp
iret
mov
dec
push
sub
sar
or
sbb
sub
mov
outsl
xor
mov
jbe
push
les
fisttpll
mov
insb
in
adc
aas
cld
gs
mov
add
mov
and
sub
and
pop
mov
sahf
clc
cmp
sbb
sbb
ss
jne
hlt
int3
lods
test
lods
pop
jecxz
in
cmp
mov
or
dec
sub
lods
inc
vmovlps
mov
popf
push
mov
clc
inc
bound
and
das
shrb
ljmp
and
pop
subb
aas
lods
sti
push
icebp
add
jle
fwait
add
cmp
push
sti
std
xchg
push
mov
mov
and
fcoms
scas
dec
xor
dec
sbb
js
push
test
out
sbb
aaa
adc
add
xor
xor
ficomps
out
cmpsb
xor
sahf
xchg
add
shlb
jle
rcrb
cmp
inc
jge
inc
sbb
sub
mov
mov
jo
and
adc
jae
inc
std
fadds
sbb
imul
mov
ret
sbb
adc
cmp
xor
jl
in
ja
and
movsl
gs
cmp
ds
push
movsl
idivl
sbbl
in
cmp
add
add
mov
mov
inc
stos
inc
pushf
jmp
mov
fmuls
shlb
dec
mov
cmp
js
mov
iret
sub
jno
push
xchg
pop
inc
push
xchg
and
jmp
subb
dec
fimuls
mov
adc
repnz
sub
and
inc
int3
arpl
push
test
jle
aad
andl
test
pushf
clc
jno
fidivrs
sti
pusha
pop
cwtl
jae
and
pop
inc
lods
shrl
push
push
mov
imul
dec
in
loope
clc
add
enter
iret
xchg
adc
dec
ljmp
sbb
cs
inc
mov
or
ja
mov
jl
push
and
cli
lahf
xor
sbb
dec
gs
adc
sbb
rclb
insb
and
pop
xchg
cltd
lahf
clc
roll
in
cmp
test
dec
fnstcw
in
jmp
pop
and
shl
push
push
int3
out
sub
lcall
mov
stc
test
pop
lret
pusha
inc
int
mov
decl
inc
lock
hlt
and
lods
push
and
lret
push
and
aad
lcall
repnz
sub
sbb
andps
dec
lods
test
mov
add
bound
xchg
mov
mov
push
jnp
add
add
es
repz
or
or
xlat
int
or
mov
dec
mov
addr16
mov
in
fs
out
pop
mov
xor
aas
mov
mov
call
cmc
fldlg2
jns
fdivr
pop
mov
mov
add
pop
popa
imul
sbb
xchg
push
xor
push
xchg
daa
xchg
cmpxchg
xlat
xor
lahf
fildll
jno
or
mov
les
test
pop
and
jle
jne
cmp
adc
repz
in
das
hlt
jnp
add
leave
shl
inc
cmp
inc
cmp
mov
xorb
push
sbb
test
out
dec
outsl
jne
fldt
es
fs
sub
xchg
decl
xchg
adc
sahf
sub
lea
call
adc
xor
add
mov
xor
mov
fistpll
in
fst
cld
addr16
arpl
dec
mov
stos
xchg
push
and
out
inc
and
call
adc
insb
add
ljmp
adc
inc
pushf
iret
dec
jb
add
adc
dec
pop
mov
hlt
ficomps
lahf
call
add
outsb
es
int
cmpsl
mov
mov
nop
sub
inc
jecxz
imul
cmpsb
mov
inc
in
dec
dec
dec
scas
imul
lods
mov
pop
out
pop
xor
inc
shrl
fdivrl
push
outsl
int
mov
cmp
loopne
lcall
xlat
in
and
dec
daa
inc
jl
pop
push
lods
or
xor
stos
mov
aam
sahf
xor
fsubr
das
shl
jle
pop
mov
mov
sbbl
xlat
cmp
pushf
jnp
addr16
pusha
aaa
stos
ljmp
icebp
rclb
inc
mov
test
push
mov
int
jmp
shll
jne
cld
outsb
inc
sub
pushf
xchg
pusha
int
enter
cwtl
sbbl
or
mov
addr16
xor
lock
sub
xor
add
ret
mov
adc
xchg
and
xor
and
add
mov
or
pop
add
lods
inc
jnp
fildl
mov
fstpt
inc
cmp
in
cmp
push
jle
arpl
mov
mov
and
push
pop
cmc
rolb
push
stc
mov
lcall
or
mov
mov
push
scas
xchg
iret
aad
cmc
out
or
rcrl
xor
aad
ja
and
mov
lods
repnz
jnp
or
sarb
mov
or
adc
fadds
cmp
scas
mov
hlt
je
loop
div
shl
mov
and
aad
sahf
xchg
pop
or
cwtl
movb
pop
int
test
pushf
arpl
mov
push
pop
push
push
ffree
imul
push
sub
aas
xor
sub
pop
fwait
sbb
insl
jae
aad
inc
addr16
mov
lock
sub
insl
cmp
stos
insl
pop
dec
jnp
jbe
jo
and
jno
adc
sbb
lahf
sarl
fwait
xor
pop
std
nop
mov
xor
dec
sub
out
push
dec
push
push
and
inc
mov
or
xchg
enter
cwtl
xchg
lea
clc
lret
jmp
imul
and
jo
jns
mov
lock
sbb
push
movsb
xor
iret
ljmp
aaa
clc
push
cld
jle
shll
lret
adc
repnz
test
xor
pop
xor
sub
add
divb
and
mov
push
aaa
add
shll
subb
inc
cltd
sub
dec
push
in
jp
test
or
jo
jb
icebp
cld
mov
pop
xchg
xlat
xchg
jnp
xor
pop
or
and
jg
mov
pop
and
adc
jns
jmp
xchg
cmc
mov
aad
mov
stos
mov
push
jnp
fstpt
xchg
fbstp
test
cmp
push
in
ds
aam
mov
scas
push
lods
sti
sub
mov
adc
test
fcomps
cmp
int
sub
xchg
or
and
pop
cmp
mov
add
addr16
sub
add
dec
movsl
or
xchg
adc
out
xchg
aaa
incb
aad
mov
pusha
cs
into
out
mov
dec
loop
xorb
fwait
push
push
cltd
gs
pop
stos
imul
pop
movlps
adc
insb
sarb
ljmp
sbb
outsb
or
loop
mov
dec
stos
ret
addr16
cmc
aaa
rorb
loop
pop
addr16
mov
sub
outsl
push
pop
add
repnz
xchg
mov
mov
xorl
push
shr
dec
sbb
test
mov
push
pop
fstpl
dec
lret
xlat
adc
sub
mov
daa
ja
mov
or
stos
fsts
xchg
add
addl
mov
stos
or
xchg
mov
ljmp
out
dec
movsl
sub
sbb
inc
mov
or
or
filds
leave
adc
mov
push
cmp
push
pop
rcrb
sub
pop
les
incl
icebp
dec
sbb
ss
jno
out
push
mov
mov
or
add
fwait
imul
hlt
jecxz
test
sbb
xor
addr16
adc
icebp
stc
jecxz
bound
xlat
pop
mov
loopne
pop
fwait
js
pop
cmp
lds
lods
pop
fcomi
flds
cmp
xor
leave
add
or
loop
xor
shl
mov
lea
mov
sub
pop
ja
into
and
xchg
jecxz
and
sbb
mov
or
dec
adc
adc
sbb
andb
aas
pop
xchg
xchg
aas
sbb
dec
xor
addr16
int
pop
inc
dec
push
jp
push
jge
xchg
xorb
mov
incb
lcall
das
sahf
test
mov
mov
icebp
ja
sbb
adc
dec
int
adc
jmp
mov
xchg
pop
push
ret
jnp
imul
sbb
cmpl
sbb
xchg
mov
imul
out
in
icebp
aas
jmp
push
insl
cmp
push
in
add
loope
imul
jp
add
mov
xchg
lods
je
xchg
out
aad
or
daa
loop
xlat
add
faddl
push
lcall
cmp
int3
sbb
xchg
push
sbbl
jle
or
in
movsl
xor
jl
test
shrb
dec
fdivl
mov
cmpsl
jge
hlt
mov
inc
pop
push
idivb
xor
stos
jmp
push
outsl
xchg
fdivl
jmp
inc
js
pushf
test
jl
sbb
xlat
xchg
loop
rcr
sbb
loope
movsb
and
add
sub
lcall
sahf
clc
lea
xor
cli
mov
cmp
js
jnp
in
add
jo
push
addr16
xor
test
ret
popf
inc
lret
inc
add
mov
cmp
lods
cmp
rcll
push
adc
jecxz
ror
rorb
mov
inc
jns
add
lcall
cld
lods
dec
push
jns
popa
dec
jns
out
popa
and
jb
mov
add
jb
inc
faddl
xchg
and
movsl
adc
push
sub
mov
xor
test
cli
and
fsubp
dec
out
addr16
es
mov
mov
jg
ficompl
fiaddl
cmp
push
adc
jle
dec
add
adc
mov
adc
adc
test
test
cmp
divl
fmuls
jecxz
inc
cmp
scas
pop
mov
jmp
xor
scas
push
inc
xchg
aam
outsb
pushf
mov
test
sub
mov
jp
dec
orl
push
sub
push
test
mov
push
add
sub
int3
push
jle
sbb
jo
mov
jle
add
jb
inc
sbb
cmp
int3
xor
lods
jns
and
ret
ret
push
dec
inc
pushf
mov
and
adc
jmp
cmp
jg
pop
push
or
in
inc
push
aas
adc
mov
mov
ror
mov
mov
les
add
test
sahf
movhps
cmpsb
aad
stos
movsb
out
dec
lock
mov
ss
es
ljmp
jmp
xor
icebp
add
jae
addr16
adc
dec
and
ret
push
push
xchg
xor
jno
test
cmc
push
xchg
cmc
scas
inc
shrb
adc
lea
fwait
sub
adc
mov
or
and
jne
jns
jp
sub
fiaddl
movsl
dec
mov
cltd
xorb
xlat
fisttps
out
enter
xchg
pop
jmp
dec
sahf
shll
inc
mov
test
ljmp
add
ljmp
push
mov
mov
cli
sbb
clc
or
mov
push
inc
xchg
mov
and
outsl
repz
jo
insb
jae
jl
leave
cmpsl
pusha
int3
cltd
add
lret
jp
insb
adc
dec
mov
xor
mov
and
rol
repnz
mov
dec
jecxz
inc
fidivrl
ja
cmpb
mov
imul
and
pop
jl
scas
mov
adc
pop
pop
dec
stos
jmp
aad
sub
hlt
mull
shll
mov
sub
dec
or
int3
mov
mov
lcall
pop
loopne
xchg
jo,pn
nop
call
lods
test
dec
pop
aas
push
imul
int3
fs
jge
sbb
fsubs
jo
out
pushf
adc
cmpsl
xchg
mov
inc
mov
pop
inc
enter
hlt
push
jns
or
rorb
cmp
bound
cmc
push
call
push
push
mov
xchg
push
dec
mov
andl
cwtl
mov
inc
scas
scas
idivb
inc
xor
rcrl
in
test
stc
inc
ljmp
lret
mov
aas
cmc
xchg
out
fnstsw
das
rolb
cld
mov
mov
add
and
cmp
cmp
jmp
xor
cld
daa
dec
add
stos
aad
mov
add
push
jecxz
adc
adc
sbb
xor
pop
icebp
jg
mov
out
jb
xchg
fwait
popf
ds
cmpl
xchg
mov
jp
add
or
stos
fmul
outsb
add
imul
int
shll
sbb
push
and
inc
dec
pop
lods
cmpsl
dec
xor
add
mov
fiadds
jecxz
mov
mov
inc
out
ds
les
jge
jge
inc
out
ss
test
fbld
les
fs
lahf
fbstp
setne
sbb
mov
rcll
or
leave
fninit
push
mov
pop
mov
sbb
lret
mov
and
ljmp
pop
jle
xchg
xchg
nop
mov
dec
pop
movsb
inc
out
test
mov
clc
mov
push
dec
ss
aad
jmp
mov
or
xchg
hlt
sub
jg
push
and
adc
push
inc
add
insl
sbb
adc
pop
push
fxch
enter
jo
jle
movsl
flds
sub
mov
mov
cmc
test
xchg
dec
in
xor
jp
dec
push
lcall
push
arpl
mov
jp
adc
xlat
je
jno
and
jle
rclb
hlt
test
in
subb
and
leave
testl
enter
pop
xchg
clc
addb
push
pop
stc
lret
fidivrs
jle
mov
mov
cs
ja
or
maskmovq
mull
pop
or
adc
bound
int
fildll
xor
fsubs
and
shlb
xchg
xor
imul
mov
adc
mov
cli
mov
out
lds
out
mov
and
sub
push
cmpsl
ljmp
arpl
mov
mov
fcoms
cli
mov
popf
rolb
or
pop
je
faddp
push
xor
ss
push
add
pop
jge
push
mov
dec
shrb
xor
jg
roll
or
adc
rclb
mov
imul
xor
xchg
notb
loop
enter
mov
inc
mov
inc
outsb
stc
push
sbb
dec
xchg
aaa
fnstcw
sub
and
adc
adc
cmp
xor
xor
pushl
or
imul
out
jae
pop
sbb
jge
aaa
test
arpl
clc
jnp
out
loope
xchg
mov
int3
push
mov
sub
into
or
jb
cs
jae
das
pusha
or
test
push
jecxz
imul
outsb
cmc
add
push
mov
seto
cmp
jmp
je
pushf
imul
das
xchg
fstpt
mov
adc
std
stos
fiaddl
mov
aaa
and
pusha
inc
scas
add
and
lahf
lcall
dec
xchg
push
fcom
stc
jp
jmp
push
test
and
in
ret
fdivrp
sbb
mov
xchg
stos
xchg
jp
mov
push
lret
mov
lods
add
mov
shll
sub
clc
add
push
shl
rorl
push
mov
jmp
faddl
and
jecxz
push
je
lcall
mov
mov
mov
pop
out
je
loopne
movb
pop
push
sbb
cmp
dec
or
movsl
enter
jle
jp
mov
jg
sbb
jbe
add
and
cmp
pop
cltd
dec
decb
push
mov
out
mov
mov
mov
lods
repnz
push
neg
fcomps
jle
or
testb
add
jnp
movsl
xchg
sbb
stos
inc
ret
lcall
cmp
in
xchg
mov
xchg
pop
insb
shlb
pusha
jns
xor
pop
mov
scas
cmp
push
cmp
stc
xor
pop
xor
inc
fisubs
cwtl
cmp
sahf
imul
pop
andl
enter
push
mov
int3
adc
mov
push
notl
rcrl
stc
shrb
mov
mov
mov
mov
mov
outsb
test
or
cmp
es
movsl
xor
out
dec
lods
cmp
sub
cmc
mov
push
pop
push
iret
je
in
add
adc
sub
xchg
jo
fcos
ja
cltd
sub
fldt
and
jns
and
push
into
xchg
outsl
lea
aam
jne
and
decl
loop
cmp
mov
and
pop
fsub
int3
inc
sub
xchg
je
cmp
stos
std
inc
add
and
sahf
adc
push
neg
adc
pop
xor
inc
imul
xchg
pop
inc
cmp
imul
aaa
ret
aaa
std
pop
add
or
nop
jle
outsb
and
outsb
jno
and
test
pop
dec
pop
nop
xchg
mov
and
xchg
std
mov
fsts
sbb
adc
mov
in
sbbb
mov
mov
adc
adc
rcr
je
push
inc
push
cmc
dec
pop
jno
push
lods
adc
shrb
js
xor
push
loopne
jns
pop
push
outsb
dec
rol
fdivrs
ficoms
xchg
fwait
jno
adc
imul
into
faddl
repnz
xor
add
cmpb
inc
ss
sahf
lret
inc
jbe
leave
add
in
mov
add
xchg
fmuls
mov
inc
add
inc
adc
push
xchg
dec
jae
imull
lods
or
mov
stos
cmp
outsb
cmp
mov
enter
fsubr
cmp
ds
dec
repz
lea
jnp
mov
ficoml
cli
mov
jl
cmp
fcomi
shll
adc
mov
movl
adc
insb
shl
cltd
jnp
cmp
int3
xlat
outsb
pusha
ja
xchg
outsl
test
into
fisttps
mov
adc
roll
add
mov
js
inc
add
lods
and
adc
xorb
push
adc
or
mov
push
outsb
dec
sub
dec
jno
jl
stos
loopne
sbb
add
add
sub
pop
or
mov
sbb
ret
cmp
ljmp
sub
mov
cli
aam
cmpsl
sbb
sbb
inc
pushf
add
test
push
cmc
lock
jl
test
outsb
hlt
stc
mov
imul
dec
xor
mov
push
adc
add
shrb
mov
xchg
in
add
insl
xor
sbb
insb
dec
les
jb
fidivs
imul
fsts
mov
mov
stc
push
shrl
popf
notb
es
jno
lods
stos
ds
push
jae
clc
addr16
jl
push
push
nop
les
clc
xchg
dec
addr16
push
jns
shll
jne
push
cmp
lods
test
and
sbb
mov
sub
lea
rcll
mov
movsb
iret
dec
sbb
jmp
aad
dec
sub
lcall
sub
pop
cmp
or
or
add
ja
xor
mov
ret
fisttpll
negl
sub
fldenv
inc
cli
push
mov
jge
mov
or
std
inc
pop
in
and
jo
xchg
movsb
jle
cld
imul
xor
out
xchg
gs
stc
cmpl
mov
repnz
mov
negl
xchg
dec
push
or
and
push
mov
cltd
pop
xor
ss
dec
stos
inc
mov
test
loope
loop
mov
mov
jecxz
xchg
mov
jge
xchg
push
mov
or
adc
push
jns
push
call
cld
push
in
mov
lods
add
sahf
stos
aas
xor
or
xchg
aam
lcall
cmp
jl
shll
dec
xchg
sbb
xorb
add
inc
das
adc
push
orb
mov
or
loopne
roll
push
int
mov
push
and
aam
pusha
xchg
dec
scas
imul
popa
outsb
push
arpl
mov
and
cmpsb
mov
in
adc
pop
add
arpl
out
adc
cltd
inc
inc
jae
dec
sub
add
pop
test
mov
sub
jmp
int3
outsl
daa
and
sbb
mov
stos
mov
mul
ficomps
sbb
sub
imul
cmp
rcrl
inc
xor
xor
into
sbb
shll
rorb
mulb
in
xchg
push
mov
lcall
jns
sub
sbb
pop
cltd
repz
js
sub
inc
stc
mov
fmuls
ljmp
sar
je
mov
lret
jns
arpl
adc
mov
es
in
mov
add
imul
in
mov
lcall
jle
ror
imul
pushf
xor
pusha
std
xor
cmpsl
jno
mov
mov
rorb
gs
jp
ss
incl
mov
sti
dec
cwtl
mov
sub
je
loopne
push
hlt
pop
inc
sub
jecxz
jo
push
add
or
divb
jmp
nop
testb
mov
outsl
mov
int3
lods
test
add
cmpsb
fsubs
adc
xchg
in
movsb
jbe
fldcw
cld
in
mov
adc
ja
push
cs
jg
in
add
flds
cmpsb
in
jns
pop
add
dec
lods
pop
lock
shrb
dec
shl
or
fiaddl
or
sbb
mov
pop
clc
stos
in
rcrb
push
xor
cmp
jp
inc
stc
lods
outsl
imul
testl
outsb
push
stc
xchg
xorb
mov
dec
sub
scas
inc
aas
rorb
jnp
cmpsl
add
push
xor
mov
daa
xchg
inc
mov
aaa
icebp
adc
nop
lock
cmp
push
inc
push
sbb
jg
jae
push
dec
rcl
add
jg,pn
dec
mov
mov
jnp
pop
sub
or
push
push
js
popf
testl
jl
jecxz
cmp
xor
pusha
dec
divb
testb
decl
rcrl
data16
jle
inc
test
sti
xor
repnz
xchg
mov
jnp
sbb
in
pop
xor
mov
es
psubsb
push
dec
pop
gs
mov
push
lret
mov
rcr
push
or
in
inc
cmp
mov
xor
jno
in
push
pop
xchg
push
notl
pop
lret
clc
insl
cmp
add
stos
mov
adc
cmpsb
pop
and
mov
daa
inc
dec
lret
xor
clc
lret
pop
mov
sbb
pushf
shll
jle
or
dec
in
add
sbb
xchg
jbe
or
cmc
inc
mov
adc
add
or
xchg
push
inc
or
xor
nop
cs
dec
mov
movsl
inc
push
popa
mov
pushf
push
not
outsl
sbb
inc
outsb
xchg
pop
sti
mov
jmp
int
test
bound
test
sbb
add
mov
jbe
sub
sahf
or
or
dec
mov
jg
ret
add
mov
lods
rolb
lods
pop
pop
cmp
push
sub
mov
imul
int3
and
xchg
cltd
dec
pop
jne
sbb
shrb
xchg
sbb
xor
inc
dec
sar
push
sbb
pop
jb
adc
push
inc
leave
adc
sub
bnd
or
data16
xchg
pop
mov
adc
loopne
movsb
fwait
bnd
adc
dec
outsb
pop
bound
dec
cmp
mov
inc
es
mov
pop
adc
mov
sbb
in
inc
mov
xchg
add
daa
out
mov
lahf
out
imul
fbld
lods
xor
and
scas
pop
jae
xor
mov
jge
and
in
add
cmp
cmc
stc
arpl
insb
rcll
pop
jg
int3
mov
rcrl
sahf
out
push
inc
scas
pop
xchg
mov
xor
je
jmp
xchg
mov
jbe
clc
push
ja
add
out
lods
ret
pushf
pop
fsub
mov
je
sti
xor
xchg
inc
dec
jns
repnz
pop
mov
mov
xchg
das
jnp
sub
jo
movsb
stc
fmull
repz
mov
loopne
out
cmpsl
ror
out
xchg
lret
mov
push
bound
and
mov
ja
xchg
push
lock
int3
shl
stos
pop
push
sbb
sbb
sbb
rcrl
ds
enter
sub
jae
test
push
data16
mov
movsb
jp
adc
xchg
inc
pop
push
sbb
pop
testb
nop
into
ffree
push
pop
push
push
add
das
dec
movsl
xchg
push
add
in
roll
fisttpl
pushf
xchg
popa
jl
lods
or
ret
lock
scas
or
pushf
mov
xlat
jnp
sbb
int3
adc
xchg
mov
test
out
and
jbe
push
lret
sub
sti
shrl
in
and
cmp
inc
std
ret
add
xchg
fdivrl
fstp
inc
push
test
xchg
pop
std
pop
sbb
pop
pop
mov
push
fst
orl
push
xor
je,pt
outsl
xchg
and
out
orb
xchg
xchg
ret
mov
and
mov
mov
outsb
jb
inc
sub
ljmp
mov
leave
mov
push
shrl
sub
and
jmp
jmp
orb
or
jge
ret
cmc
ret
mov
mov
orb
sbb
mov
lret
push
mov
pop
jp
inc
mov
mov
inc
scas
fimull
loopne
jnp
imull
bound
xchg
adc
mov
lods
push
movsb
push
in
pushf
pusha
cmp
and
std
fadds
inc
shll
xchg
xchg
nop
mov
cmp
push
xchg
mov
sub
jg
ret
imul
jbe
out
cmp
mov
inc
xlat
mov
inc
sbb
cmp
out
cmp
leave
mov
mov
loopne
mov
out
add
xorb
cwtl
push
push
and
xchg
xor
repz
dec
xchg
push
add
call
mull
rcll
mov
mov
fidivl
ret
loope
test
in
iret
aam
fld
lock
jne
adc
es
fistl
rorl
sbb
mov
jmp
loope
les
push
shr
js
pop
add
sar
pop
hlt
in
movsb
cltd
mov
inc
and
lret
mov
mov
inc
insb
insl
jns
fnstsw
lret
jl
cmp
arpl
cmpsb
push
dec
stc
ret
add
inc
xchg
pop
pop
sbb
dec
push
jge
inc
jge
mov
inc
xchg
cmpsb
es
mov
leave
mov
test
cmp
jmp
cmp
mov
iret
ljmp
jo
xor
fsubrl
movl
loopne
pushf
and
lods
movsb
jp
lret
mov
jecxz
mov
lret
or
push
ja
or
xor
or
pop
pop
jno
cmpsb
inc
dec
popa
ljmp
imul
and
shll
adc
pslld
xchg
lods
add
dec
xchg
ret
sbbl
sub
pop
mov
ffree
rolb
test
inc
xor
fs
push
stos
dec
movsb
add
pop
inc
or
mov
push
outsl
cld
shl
jge
xchg
lcall
sub
notb
cmp
fs
das
mov
incl
pop
fidivrl
ret
jnp
pop
hlt
hlt
sbb
pop
xor
push
push
sbb
lahf
mov
cmpsb
das
stc
or
pop
lret
inc
imul
xlat
insb
pop
add
fldt
mov
popf
push
and
adcl
arpl
mov
icebp
adcl
ljmp
lods
movsb
dec
fiadds
lea
sub
enter
xor
das
pop
cmp
cltd
cs
sub
movsl
int
add
adc
scas
mov
xchg
mov
mov
je
cmp
fidivrl
ds
pop
xor
stc
xchg
std
aam
lret
repz
test
and
pop
xchg
lea
pop
dec
nop
add
divl
scas
fcmovne
cmc
sbb
xchg
jecxz
mov
mov
dec
dec
fldcw
mov
jge
fldt
cmp
adc
out
pop
movsb
adc
xchg
lahf
xchg
insl
outsb
jge
add
push
das
imul
cmpsl
test
out
xor
push
data16
fwait
enter
jb
out
stos
jp
arpl
testl
push
xchg
in
jecxz
mov
adc
jno
vmread
jns
test
and
int
mov
aas
sbbb
adc
data16
and
in
mov
pushf
mov
movsl
xor
and
icebp
adc
cmc
add
arpl
mov
sub
mov
inc
cmp
mov
fsubs
outsb
in
xchg
hlt
inc
dec
push
outsb
ror
rcrl
lods
test
pop
data16
stos
cmp
enter
adc
aam
sbb
pop
push
mov
mov
adc
cmp
mov
cmp
or
dec
sbb
mov
xor
lea
aas
sbb
insb
mov
fsubrs
cmp
jge
push
shrl
jns
subb
inc
inc
into
mov
mov
mov
shlb
sbb
dec
inc
ret
mov
sbb
incb
imul
test
popa
add
mov
xchg
mov
mov
jne
rorl
imul
repz
lods
pushf
lods
adc
mov
loope,pt
push
sahf
xorb
sbb
sub
fsubl
stos
mov
imull
movups
into
adc
shl
jecxz
sti
roll
arpl
or
data16
nop
adc
push
push
fxch
int3
les
lcall
xlat
notl
outsl
repnz
cmp
movsl
daa
je
outsl
mov
mov
or
cmp
lahf
fs
pop
fsubrl
les
adc
roll
mov
in
stos
test
sub
mov
leave
shr
jo
pop
or
nop
dec
fiaddl
xor
or
jecxz
stc
data16
sbb
mov
andb
ljmp
pop
pop
sbb
sbb
mov
gs
jecxz
mov
pop
outsb
in
jle
out
int3
jge
test
mov
aam
mov
cld
js
adc
mov
mov
pcmpgtd
ja
xchg
test
pusha
push
sbb
dec
rclb
rolb
cwtl
dec
gs
das
xchg
mov
call
cmpsl
sbb
jle
xchg
in
jl
adc
movsl
adc
mov
aaa
xor
cld
dec
jns
jns
jp
stos
cli
dec
out
loop
in
les
jg
in
cmpsl
rorl
xchg
and
push
sub
push
pushf
mov
mov
mov
adc
jo
jnp
adc
mov
or
mov
push
ror
fisttpll
fcmove
jmp
insb
mov
xchg
mov
push
add
std
sbb
jne
dec
xor
lahf
jle
repz
scas
jb
loope
pop
mov
pushf
xchg
sbb
mov
jns
enter
jg
add
add
rorl
dec
fbstp
xchg
test
sub
and
int
movsl
fisubl
and
adc
xchg
movsb
inc
imulb
movsb
gs
fdivrs
je
sub
js
iret
lret
adc
dec
rorb
sahf
sub
rcl
mov
rcr
push
xor
or
sbb
adc
and
sbbl
push
pop
not
cmpl
int3
dec
popa
in
daa
adc
jg
jns
dec
adc
cmp
es
xchg
push
cs
xchg
daa
or
cmp
inc
addb
fstp
and
loopew
jno
gs
sub
mov
mov
pop
test
adc
pop
add
ss
or
fisubrl
dec
inc
mov
xor
addr16
mov
in
and
push
pop
rolb
cld
subl
push
out
add
and
xlat
mov
push
pop
icebp
fsubrl
sbb
lock
and
jg
adc
aas
xchg
int
stos
or
in
mov
int
push
in
lahf
or
cmpsl
lahf
lea
xchg
xor
cmpsb
rorb
jo
or
pop
dec
shrl
int
out
inc
lods
mov
mov
sbb
clc
xor
dec
push
pop
cmp
jne
pop
cltd
in
inc
in
outsb
adc
cmp
inc
repnz
push
push
loopne
fisttpll
xchg
dec
xchg
sbbl
hlt
jne
frstor
imul
testl
mov
push
jmp
sub
push
xlat
xchg
lahf
popw
dec
jnp
or
cwtl
mov
xchg
int3
or
fwait
mov
or
inc
jle
mov
sbb
sbb
dec
hlt
cwtl
xor
adc
jns
xlat
and
inc
into
rcrb
enter
adc
popa
lock
add
arpl
sub
sbb
cli
adc
repz
movsb
mov
lds
dec
icebp
pop
stos
mov
mov
ja
insb
lahf
pop
dec
int
mov
fcompl
mov
jmp
add
or
push
movsl
mov
and
sbb
aaa
imul
jnp
jl
dec
xchg
add
lcall
sahf
les
inc
inc
movb
dec
mov
push
pop
pushf
and
dec
subl
mov
mov
repz
mov
mov
mov
loop
sbb
lea
xchg
je
bound
rclb
pop
adc
pop
icebp
pop
in
es
or
xchg
stc
ds
testl
mov
dec
stc
inc
mov
xchg
xor
push
push
sarb
mov
add
stc
add
andb
fs
loop
adc
jo
and
inc
lock
xchg
je
aam
enter
sub
je
adc
mov
push
inc
fistpl
or
mov
sti
xchg
dec
outsb
insl
frstor
adcl
scas
outsb
fidivl
and
inc
cmp
mov
cmpsl
adc
pop
xchg
sbb
outsb
mov
int
and
mov
scas
mov
ds
mov
dec
jae
inc
lret
push
mov
addr16
inc
lcall
sub
sbb
aam
imul
aad
clc
test
lret
mov
test
sub
adc
dec
xor
loop
mov
fwait
jle
xor
sub
scas
ss
pop
fwait
insb
mov
sub
mov
notl
mov
mov
xchg
imul
mov
adc
insb
xchg
insb
bound
repnz
mov
cmp
push
loop
or
out
mov
dec
dec
dec
lcall
push
mov
les
adc
mov
xor
pop
test
dec
loope
and
gs
or
pop
push
scas
xor
inc
mov
jmp
stos
dec
stos
sbb
cltd
inc
inc
push
xlat
sbb
stc
insb
inc
dec
stos
daa
inc
mov
xchg
pop
in
aad
lock
dec
cmc
sbb
mov
or
xor
bound
shl
js
lea
addr16
xchg
iret
arpl
jl
mov
insl
out
xchg
adc
ds
xor
ret
sub
add
jb
inc
lock
push
mov
jecxz
lock
dec
and
icebp
cmp
aam
ficompl
fadds
loope
in
addr16
fwait
leave
add
xchg
pop
push
dec
jle
xorb
cmp
push
icebp
cmp
jae
sub
mov
mov
cli
push
xchg
mov
jle
add
xor
call
adc
xor
inc
sub
enter
pop
pop
pop
shr
lcall
jle
out
jl
es
xchg
clc
mov
sbb
dec
negb
sbb
cltd
stc
and
icebp
fnstenv
xchg
scas
mov
jno
bound
dec
pop
out
push
ret
addl
out
xchg
xchg
pop
and
out
aad
in
inc
xor
xchg
aad
daa
inc
mov
cwtl
lock
dec
or
gs
fmull
fidivrl
sub
xchg
push
cwtl
mov
leave
out
pop
and
cmp
punpckhwd
fistpll
das
lcall
jbe
jp
sbb
stos
push
js
mov
aas
roll
fwait
xchg
aaa
sbb
adc
mov
and
aas
sahf
mov
adc
sahf
orl
popa
adc
fwait
adc
and
nop
rolb
mov
cli
xchg
and
das
iret
sbb
xchg
add
jmp
sti
push
xchg
xchg
xor
xchg
aad
stc
push
push
shll
mov
movl
imul
das
jno
es
xlat
lods
xchg
xor
sbb
js
aaa
popf
inc
cs
xchg
push
cltd
sahf
popa
fdivrl
cmc
mov
jns
mov
arpl
jo
sub
mov
and
mov
scas
mov
jmp
jg
jb
inc
movsb
sti
or
dec
xor
aad
jp
insb
decl
xor
in
jmp
clc
out
ficoml
add
sub
xor
pop
jp
jb
dec
jne
cltd
xor
mov
and
cmp
loope
xchg
mov
mov
adc
in
popa
pop
dec
addr16
pop
xor
mov
hlt
xchg
jecxz
mov
add
icebp
jp
loopne
dec
jmp
orl
test
inc
dec
repz
lds
push
bound
mov
xor
mov
add
je
ljmp
pusha
mov
int3
and
mov
xchg
inc
or
jg
adc
cmp
sub
aaa
ret
xchg
out
aaa
jmp
jmp
scas
movsb
mov
sahf
into
fistpll
mov
and
push
mov
mov
pop
rorb
test
pop
mov
push
mov
fstpl
stos
and
ja
sub
add
mov
pop
lods
cmpsl
leave
mov
push
push
loopne
icebp
mov
mov
in
sbb
stos
hlt
sbb
ret
outsl
ret
jnp
adc
xchg
and
test
sbb
bound
inc
xor
sub
xchg
in
out
into
mov
test
jbe
push
mov
lds
sbb
mov
cmp
jns
mov
pop
sbb
jno
jg
and
out
inc
xchg
inc
mov
lret
fsubs
push
pushf
mov
sbb
mov
xchg
cmpsb
push
scas
cmpsl
das
xor
scas
nop
sbb
or
sub
and
test
cmp
enter
in
sbb
xor
cmp
fisubl
popa
lea
lods
imul
xchg
and
aad
test
push
lds
mov
or
std
test
sbb
push
lock
mov
push
and
js
sbb
pop
sub
sbb
mov
les
stc
pop
jle
ret
xchg
and
repnz
mov
repnz
cwtl
push
lea
adcl
sbb
mov
adc
ret
push
lds
nop
fldl
fdivr
inc
cmp
rcrb
mov
shlb
push
lods
outsb
push
mov
xor
fs
adcb
lcall
mov
push
mov
jnp
xchg
lcall
fisttpl
xor
jne
cmc
test
loopne
nop
cmp
shrl
es
xor
mov
rorb
sub
sub
cld
inc
pop
in
mov
les
push
scas
sbb
lods
mov
into
jne
insb
insl
xor
adc
pop
xchg
fwait
lret
nop
xchg
loop
notb
popa
sbb
xor
in
sti
xchg
inc
mov
jnp
in
sub
clc
lret
push
int
mov
gs
shl
out
or
mov
add
pop
mov
and
lcall
rcrl
or
int3
fnstenv
js
mov
enter
stos
or
adc
in
mov
or
in
outsb
in
ljmp
mov
mov
jmp
and
mov
shll
outsl
inc
fidivs
inc
out
sbb
outsb
pusha
jge
mov
fstl
lods
outsl
dec
mov
fstl
int3
xchg
out
jecxz
mov
xchg
xor
out
notl
xor
scas
xchg
and
mov
out
sub
or
cwtl
sbb
sarl
ss
cmp
hlt
xlat
cmp
test
xchg
mov
pop
popa
ljmp
out
xchg
cltd
push
add
inc
cmp
fmul
inc
dec
inc
flds
inc
dec
lahf
int
dec
inc
sbb
push
xchg
arpl
mov
or
insb
test
movsl
push
xchg
dec
push
cmp
mov
outsl
cmp
stc
jmp
lods
imul
sbb
cmp
dec
adc
push
leave
enter
aas
and
and
rclb
mov
jge
pop
mov
dec
lock
sahf
imul
imul
sahf
cmp
mov
pop
fisttpll
push
fiaddl
adc
out
sub
nop
test
adc
rsm
mov
cmp
pop
test
jecxz
add
out
add
or
or
xchg
addr16
push
jbe
clc
jecxz
arpl
or
mov
imul
jns
fwait
jo
mov
insl
push
fs
nop
fsubrl
adc
mov
ljmp
xchg
lret
xrelease
popa
mov
das
or
lods
pop
push
push
sti
and
sbb
sbb
cld
inc
push
adc
fcoml
sub
mov
mov
mov
in
jbe
xor
sbb
xor
inc
in
sub
cmpsl
lock
fldt
xchg
lahf
xor
lods
adc
jb
cmpl
in
pop
dec
xchg
add
xchg
or
adc
mov
outsl
idiv
pop
add
je
xchg
push
mov
sbb
and
cld
push
and
inc
push
xchg
jl
sbb
sub
mov
in
xor
sub
xchg
push
popf
inc
out
adc
cmp
pusha
mov
pushf
mov
xorl
out
arpl
xchg
stos
push
add
xchg
mov
and
push
shl
fnsave
inc
mov
or
imul
cs
dec
cmp
sub
mov
mov
dec
and
or
xchg
adc
fdivs
movb
sti
cmc
adc
dec
xor
sbb
pop
xor
jg
mov
daa
pushf
inc
pop
xchg
xor
sub
xchg
mov
xchg
sub
ret
ljmp
mov
sar
ss
sub
xor
and
xchg
push
sub
mov
ret
pushf
cli
aaa
mov
and
lods
int
jecxz
sub
cmp
insb
cmp
dec
push
insl
sub
sahf
into
outsb
push
mov
pusha
cmp
mov
hlt
fidivrl
pop
ret
cwtl
add
adc
mov
pop
jl
rclb
lcall
aad
sar
les
jne
lods
repnz
loop
mov
mov
jb
movsl
sub
aaa
mov
jo
pushf
push
mov
xchg
lea
lods
mov
test
sub
call
xor
adc
inc
mov
inc
mov
pop
mov
mov
stc
arpl
std
push
or
fcmovu
jo
and
pop
cltd
mov
mov
pop
push
push
addr16
andl
add
inc
loopne
inc
cld
lds
pop
aad
add
cmp
add
stc
mov
mov
jo
cmp
jbe
xchg
adc
cmp
scas
mov
ss
leave
aad
xor
push
jl
mov
pop
faddl
sub
and
mov
mov
jo
pop
xor
pop
mov
repnz
mov
xchg
lahf
jno
in
movsl
dec
lcall
das
sub
ffreep
dec
adc
bound
mov
cli
ja
dec
fcoml
fsubr
fidivrs
lret
adc
and
ret
insb
mov
push
cmp
int
out
xor
rorl
in
push
mov
pop
adc
sub
sahf
jb
iret
ficoms
fisubl
jne
dec
test
imul
cli
js
mov
xchg
js
movsb
inc
insl
xchg
adc
divl
sub
flds
cmp
pop
out
lahf
int3
sbb
sbb
or
jl
and
pop
bound
loopne
xor
mov
jp
je
push
pop
mov
ds
cli
fiaddl
xor
cmp
jmp
adc
daa
sub
es
icebp
out
push
inc
pop
mov
insb
stos
arpl
sub
aad
mov
lcall
and
xor
imul
xor
mov
or
in
aam
and
stc
adc
push
mov
out
fcmovnbe
mov
insb
in
jmp
repz
out
outsb
sbb
mov
mov
sbb
arpl
jg
cwtl
pop
jg
out
pop
insl
jns
xchg
gs
push
adc
jmp
pop
jmp
stos
mov
fists
out
sub
test
int3
jne
push
popf
in
movsl
mov
repz
imul
mov
pop
and
push
adc
mov
mov
pop
cmp
cld
scas
jp
dec
mov
sbbb
daa
in
insb
dec
push
popf
movl
mov
jg
dec
xor
call
and
push
cwtl
mov
rorb
into
mov
cmp
pop
test
jle
mov
inc
imul
icebp
inc
mov
or
imul
mov
roll
fld
cmpsl
out
xor
mov
or
fldt
rorl
mov
fnsave
jmp
cmp
cmc
mov
out
sub
jg
mov
pop
dec
jb
leave
call
inc
in
into
cmp
outsl
xchg
cmpb
pop
cmp
lret
jmp
adc
rcr
xor
mov
jle
pop
sub
insb
adc
mov
aad
jp
mov
fiaddl
clc
add
addr16
and
push
sbb
mov
cmp
std
mov
pop
xor
lods
fs
bound
mov
subl
out
jns
je
cmp
mov
movsl
push
fs
in
fxch
add
sub
jo
mov
into
add
sub
stos
sbb
pop
and
cmp
cmp
mov
call
cmpsb
mov
subl
pusha
sub
pop
pop
or
in
lcall
cli
and
push
mov
push
or
jo
nop
or
jnp
icebp
pop
ret
xchg
mov
aad
in
lock
loopne
xchg
jb
sub
and
pop
into
icebp
inc
sub
jae
jo
in
fwait
dec
nop
mov
jge
mov
and
lods
arpl
pop
ds
and
push
pop
bound
ss
pop
add
pop
repnz
cmc
arpl
inc
iret
in
filds
pop
adc
sub
adc
adc
int3
adc
lahf
jns
js
lret
cwtl
ud0
cmp
mov
mov
lock
jb
js
in
filds
add
pop
pop
cmp
jb
xchg
xchg
sub
jns
or
cmp
js
cmp
dec
insb
scas
xchg
cmc
ret
dec
loope
mov
loope
scas
add
inc
xchg
ret
xchg
mov
or
cli
pop
fdivs
notrack
inc
sub
xchg
add
adc
adc
es
mov
dec
pushl
jb
fucom
dec
aas
push
push
or
mov
rolb
jge
flds
xor
sar
ss
jbe
pop
xor
pop
imul
cmp
cmp
std
fldt
fs
xorl
in
mov
mov
fbstp
loope
inc
lahf
ja
nop
subb
mov
lock
add
les
ja
cmp
insl
and
cmp
into
orl
xchg
imul
or
mov
pop
sub
test
rclb
test
jp
cltd
int
xchg
inc
jp
mov
jmp
icebp
xor
int
and
addr16
and
sbb
cmpsl
inc
daa
mov
jle
pop
xlat
lods
jnp
push
cmp
sub
or
ljmp
jo
xchg
push
fmul
jne
sti
lret
dec
push
jns
orl
jne
les
mov
add
sub
dec
inc
loope
sbb
and
dec
xchg
hlt
shlb
pop
sahf
cmp
sbb
ret
mov
add
insl
cli
inc
dec
movb
daa
lahf
psrad
lcall
test
lock
sbb
dec
xor
test
and
or
pop
lcall
aas
dec
flds
add
cmpsb
std
cli
sbb
adc
xchg
rorl
sar
or
inc
test
pop
xor
loope
dec
push
test
cld
int
jecxz
movsb
scas
sub
movsb
orb
xchg
push
lods
push
fdivl
inc
lret
mov
aas
mov
mov
je
mov
mov
enter
aad
xchg
or
jmp
xlat
cmp
mov
push
movb
xor
dec
shll
fwait
xorl
es
and
in
mov
out
sahf
sbb
rclb
xor
decb
mov
dec
xchg
icebp
dec
stos
xchg
shr
movsb
mov
leave
jnp
ds
stos
je
repz
movsb
fcmovnbe
negb
pop
jmp
test
nop
sbb
lds
or
or
mov
test
add
out
in
xchg
pop
pusha
push
mov
push
jnp
inc
ret
cmp
lods
imul
inc
popa
adc
repz
jb
push
sbb
or
push
mov
in
mov
mov
in
out
popf
es
sbb
push
fistpl
stos
mov
cwtl
mov
std
popa
rcrl
or
and
aaa
ds
popa
lcall
call
xor
mov
and
lret
icebp
push
sahf
ja
push
arpl
out
cmp
lret
push
pcmpgtb
pop
dec
jnp
cmp
and
aas
pushf
pop
push
push
ret
or
inc
imulb
test
mov
arpl
movsb
jl
mov
bound
dec
subl
sub
incb
inc
mov
pop
lea
repz
rcll
popf
insl
jmp
rcrb
mov
aad
sbb
dec
dec
das
stos
xlat
fsincos
fistl
mov
xor
enter
shrb
sbb
out
mov
sub
mov
add
adc
addb
stos
lret
dec
cmp
cmp
push
in
push
add
enter
popf
rorl
iret
and
dec
mov
ljmp
cmp
jp
sbb
movsb
popf
fmull
outsl
loop
scas
js
scas
add
imul
mov
sbb
addl
aad
lods
test
repnz
dec
shrl
mov
push
loope
jne
mov
and
xchg
movb
ficompl
movntq
sahf
jae
or
inc
or
into
inc
mov
inc
mov
xlat
scas
mov
xchg
sub
in
push
adc
stc
push
ss
inc
push
adc
pop
mov
xor
movsl
mov
adc
aad
fisubrs
pop
iret
xchg
push
xchg
jge
cld
xor
inc
jmp
cmpsl
xor
enter
cmp
lods
push
outsl
in
rorl
popf
push
shll
outsl
outsb
mov
xlat
loope
cld
mov
jecxz
mov
or
xor
ljmp
test
xor
mov
and
cmc
sbb
sbb
sbb
pop
cmp
aad
loop
adc
cmp
pop
pop
js
int
add
sub
popa
add
adc
sbb
lret
inc
pop
mov
inc
add
sahf
push
xchg
rorb
adc
test
mov
rcr
repnz
aam
fnstsw
adc
xchg
ret
mov
imul
fwait
mov
in
das
mov
cltd
add
adc
cmc
pusha
xor
daa
xlat
inc
loopne
in
test
loope
dec
mov
jo
fst
mov
subl
jae
mov
dec
movsb
popaw
or
xchg
or
dec
xchg
add
mov
pop
ret
xlat
pop
push
fsubrs
test
call
shll
insb
pop
jo
xor
sbb
mov
push
push
sbb
push
pop
cmpl
and
scas
iret
xchg
xchg
sahf
xchg
pop
into
notb
ljmp
lcall
test
sbb
das
aas
jnp
popa
jb
fistpll
xchg
sub
sub
shrl
sub
xor
mov
sbb
jae
xor
loope
adc
aaa
hlt
mov
inc
daa
xchg
and
mov
inc
pop
pop
push
popa
push
pop
pop
js
jo
stos
add
add
and
adc
repnz
jmp
arpl
int3
rcr
aad
out
xchg
push
and
sahf
mov
xor
call
lcall
aaa
loop
push
cltd
mov
jbe
or
and
aad
lock
mov
in
xorl
call
jmp
pop
popa
cwtl
push
adc
es
mov
inc
lret
mov
xchg
mov
jbe
push
inc
or
xchg
jo
ja
in
stos
mov
adc
and
xchg
xchg
add
dec
fcomp
rolb
aam
lods
pop
pop
lock
push
sbb
ficompl
push
out
xor
fbstp
dec
mov
scas
sub
cli
inc
mov
and
xchg
test
jecxz
xor
out
xlat
in
sub
xor
and
js
and
jecxz
push
into
inc
sbb
sbb
mov
jns
add
in
call
mov
xchg
push
and
stos
addr16
xor
push
push
mov
mov
mov
lock
cld
dec
jbe
inc
and
and
cs
pop
dec
iret
addr16
repnz
out
xor
sub
push
fbstp
scas
sahf
sti
and
fcomp
and
adc
or
adc
push
test
lds
adc
js
xchg
lock
xor
rcrl
mov
add
ds
and
jmp
pusha
test
mov
sub
adc
pop
and
out
pop
sub
jp
call
bound
into
stos
mov
mov
jl
iret
scas
lret
sbb
pop
xor
push
test
outsb
push
sub
or
sarl
jecxz
addr16
add
xchg
pusha
sarl
inc
fsubrs
filds
pop
repz
shrb
pop
cmpsl
decb
jbe
sub
dec
out
sub
add
lods
adc
sub
into
inc
addr16
and
xchg
and
xor
lods
adc
fcoms
xchg
ss
pop
or
data16
xor
shll
iret
lea
mov
xor
add
xor
std
lcall
cltd
divb
push
inc
jbe
int
clc
push
cmp
enter
lret
cmc
call
xchg
dec
push
mov
lret
fcomps
inc
andl
sbb
mov
das
sub
cmp
daa
add
gs
push
jae
imul
fisubrl
incl
jo
adc
fstpt
lret
sahf
lahf
outsb
inc
pop
push
lcall
mov
dec
inc
mov
test
push
jmp
mov
xor
sarl
in
mov
mov
int3
hlt
or
mov
mov
mov
nop
insl
sbb
in
cmp
mov
dec
popa
xchg
mov
adc
ds
ret
push
ret
mov
shrb
add
mov
js
fimull
adc
add
mov
hlt
mov
sbb
mov
out
jmp
mov
jae
ret
mov
jne
mov
stos
mov
negl
mov
loop
das
and
xchg
xor
inc
dec
aas
pop
nop
cld
mov
sub
sahf
frstor
dec
icebp
cltd
or
xchg
xchg
loopne
and
mov
rcl
and
ss
in
mov
jg
mov
xchg
mov
push
insb
or
out
icebp
mov
xor
lahf
inc
sbb
movsl
addr16
add
in
andl
mov
mov
stos
mov
xor
clc
xchg
add
testb
scas
sub
mov
pop
jo
shrl
mov
xchg
dec
cmp
sbbb
pop
loope
mov
xor
loope
cmp
jmp
mov
jnp
test
inc
adc
cli
not
les
rcrb
loopne
mov
and
outsb
daa
in
fucomi
pop
xchg
pop
out
or
pushl
add
hlt
je
mov
mov
inc
or
sub
xchg
cwtl
sarl
cmp
imul
popa
inc
mov
iret
aaa
hlt
cmp
push
je
xor
ror
mov
push
lods
cmc
inc
shlb
push
mov
push
rcll
xor
idiv
mov
fiadds
mov
push
dec
dec
mov
pusha
ret
fists
mov
repz
dec
pop
cmp
clts
fcomp
arpl
leave
jb
cmpb
sbb
sbb
test
pop
xlat
cmp
loop
popa
xchg
mov
inc
rorb
movsb
cmp
and
shlb
mov
fdiv
sti
popf
xchg
push
out
push
insl
daa
pusha
sarb
shl
push
inc
and
lcall
xor
adc
out
sti
aam
push
sbb
inc
test
aad
addl
mov
push
add
jbe
mov
psrlw
or
mov
mov
cmc
mov
pop
sbb
rorb
sub
rol
dec
inc
inc
cltd
mov
xchg
ret
cwtl
mov
mov
nop
pop
in
pop
adc
jo
mov
into
ljmp
or
and
sub
fimuls
xor
fwait
mov
jl
jp
jmp
cmp
xchg
outsl
repnz
sar
addr16
mov
xchg
and
pop
imul
dec
pop
int
jo
les
push
ja
push
pop
inc
or
and
ja
leave
test
insl
dec
inc
int3
gs
mov
clc
push
icebp
loope
sub
jb
in
push
in
aad
pop
scas
shl
test
cmp
sub
inc
or
add
adc
mov
ljmp
push
mov
popf
popf
js
loope
adc
and
inc
mov
mov
adc
xchg
push
loope
sub
sbb
inc
or
sub
xchg
les
xor
cmpsb
out
add
and
mov
cmp
add
mov
jmp
dec
and
cwtl
add
sub
adc
popa
jg
dec
iret
mov
stos
stc
out
lock
and
jae
mov
faddl
mov
fwait
adc
push
inc
shlb
xchg
rorb
repz
inc
push
dec
loopne
aas
arpl
pop
aas
imul
repz
cmpsb
jle
cmpsl
int
inc
push
cmp
andb
pop
int
fwait
push
lret
sahf
jb
xchg
ss
mov
sub
mov
mov
push
jbe
sahf
icebp
cli
mov
lock
aas
mov
push
cmc
jmp
or
xor
shrb
test
inc
out
mov
int
lret
ja
mov
adc
cmp
std
push
push
add
adc
rorb
and
les
ljmp
iret
lods
adc
jecxz
into
enter
out
dec
lods
stos
andl
pop
sbb
or
push
dec
push
jnp
cmp
sahf
mov
xchg
inc
test
mov
jle
in
adc
mov
xchg
sbb
pop
add
mov
cmp
pop
fsts
xchg
fidivrs
sub
push
adc
outsb
push
mov
test
pop
es
mov
or
cmp
inc
ss
xchg
mov
movsl
lret
insb
movl
lods
call
sub
push
xor
sub
pop
or
flds
and
push
or
dec
int3
xchg
gs
cmp
imul
mov
jl
sbb
in
cli
and
fnstcw
lock
mov
push
sbb
repnz
cwtl
fs
mov
xchg
outsl
add
rorl
js
push
mov
add
jmp
pushf
out
xor
sarb
push
and
pusha
adc
mov
mull
pop
pop
sub
into
or
pop
jg
addr16
test
lock
and
mov
mov
xchg
push
filds
movsb
push
jmp
lahf
pop
and
jle
imul
pop
xchg
jecxz
xor
jne
lds
pop
or
mov
dec
test
in
test
cmp
or
xchg
aam
xor
mov
out
inc
cwtl
mov
push
jmp
add
and
sub
mov
test
xchg
ret
xorb
stos
pop
test
je
inc
pop
imul
nop
xchg
mov
and
mov
adc
insl
pop
or
mov
add
inc
ds
jmp
loope
arpl
mov
push
cmp
cltd
sub
les
add
popf
mov
enter
lods
sub
jno
push
mov
xchg
cmp
inc
fildl
and
imul
mov
fildl
shlb
xor
pop
push
cmp
mov
repnz
dec
leave
aas
jle
cmp
push
loope
pushf
xlat
data16
int
xchg
pop
pushf
sbb
lret
cmp
rcrb
mov
mov
xor
addr16
sub
js,pt
xor
dec
je
inc
push
fistpl
inc
test
mov
jbe
or
push
mov
jl
lods
jl
xor
enter
jnp
popf
adc
pop
and
mov
pop
stos
aas
int
mov
cmp
cmpl
xor
dec
insl
aad
ds
mov
lock
movsb
pop
adc
push
xor
xchg
enter
ret
adc
cmp
loop
jne
jnp
call
in
jbe
mov
shll
mov
push
and
dec
mov
inc
cmp
sti
aas
fadds
clc
or
mov
sarl
xor
xchg
xchg
ret
dec
sbb
adc
push
mov
mov
stc
idivb
std
xchg
aam
testl
repnz
pushf
out
or
les
fs
adcb
sbb
mov
pushf
pop
in
jecxz
lahf
sub
fsubrl
adc
or
mov
push
repnz
cld
dec
in
mov
pop
out
lret
push
je
es
lea
push
dec
in
mov
sbb
xor
aas
das
or
mov
inc
lds
addr16
xchg
adc
fdivr
xchg
cs
outsl
rolb
xor
sub
int3
mov
insb
in
pop
jbe
push
dec
roll
cwtl
mov
sbb
pop
pop
imul
adc
sarb
jle
inc
add
mov
push
mov
insb
push
mov
pop
jmp
push
inc
testb
inc
dec
popf
mov
movsl
mov
loopne
or
sub
test
push
popf
push
shlb
sub
cmp
movsb
mov
xor
xchg
add
sub
mov
mov
push
fisubs
or
or
sbb
dec
dec
or
gs
sbb
gs
and
scas
arpl
jl
pop
jo
insb
dec
adc
jecxz
addb
imul
cli
xchg
ja
call
sbb
lods
mov
dec
adc
mov
xlat
imul
pop
jecxz
xchg
xchg
nop
mov
mov
div
and
adc
sub
push
jle
das
loopne
xchg
imul
lods
add
movsl
jo
in
shll
xchg
shl
insl
fsubp
cwtl
insb
aaa
pop
add
inc
sbb
add
and
push
sahf
push
aad
cmpsb
adc
fldt
clc
rolb
and
shl
jmp
sbb
jno
iret
rcr
mov
sbb
outsl
cmp
mov
mov
cmp
repz
jl
or
or
out
xor
cmpsl
cltd
mov
jmp
mov
mov
data16
cmp
fnstenv
jne
ljmp
inc
add
adcl
std
leave
or
incb
sub
pushf
lret
daa
sbb
repnz
add
jno
adc
pop
push
mov
insb
mov
inc
stos
sbb
jns
out
mov
insb
push
dec
xchg
clc
adc
loope
xlat
push
arpl
icebp
push
in
cmpsl
mov
add
out
fwait
mov
dec
mov
dec
xlat
push
sbb
cld
leave
test
add
mov
in
sbb
std
in
mov
das
jnp
movsb
daa
int
mov
adc
in
jl
mov
mov
and
sbb
mov
dec
cmp
cli
push
and
in
fwait
add
cmp
push
dec
insl
dec
fcompl
mov
push
jmp
inc
ja
push
clc
ss
inc
adc
mov
out
leave
dec
sbb
aad
pop
pusha
cmp
lods
nop
and
mov
inc
test
dec
adc
insb
fiadds
mov
lret
hlt
push
out
mov
stos
push
lods
pop
sbb
fdivp
sub
lret
imulb
xchg
push
ds
pop
push
fsubl
jbe
push
pushf
cmp
jp
sub
in
sbb
inc
out
ret
sbb
sbb
cmpsb
in
pop
lret
lock
pop
lods
jb
or
push
iret
test
ret
or
sbb
mov
fcoms
push
call
inc
push
test
lds
or
pushf
out
dec
mov
daa
adc
mov
ljmp
lret
mov
pop
shl
inc
shl
add
cltd
sub
aas
lret
cmpsl
les
or
cmpsb
push
enter
xor
addr16
jge
daa
xchg
out
nop
pop
or
je
loop
push
cli
jb,pn
cmpsl
es
xchg
std
mov
mov
mov
clc
enter
fstpt
out
mov
adc
test
mov
cwtl
and
cmpsb
mov
push
mov
sub
jae
outsb
push
test
pop
call
adc
out
xchg
fistpl
jecxz
fs
dec
into
and
or
cmp
push
je
into
push
jmp
push
mov
xchg
enter
mov
mov
jge
insl
popa
fisubs
int3
adc
ret
inc
sarb
pop
xor
and
adc
cmp
inc
push
shl
icebp
jl
inc
push
loope
sbb
nop
push
cmp
movsl
int
or
pop
jno
or
jae
mov
or
imul
flds
sarl
out
sti
push
sbb
fs
lret
jecxz
adc
mov
mov
lods
push
sbb
push
push
push
sub
pusha
inc
lods
bound
insl
test
std
xchg
jnp
in
jg
imulb
popa
push
into
testl
xchg
dec
inc
xchg
outsl
scas
mov
mov
xor
repz
mov
rorl
xchg
mov
jnp
cltd
sub
pop
sbbl
lea
xor
popa
imul
cmc
lcall
fcompl
outsl
cltd
mov
in
xchg
sub
bound
xor
xchg
xchg
pop
cmpsb
mov
mov
lds
inc
jmp
arpl
mov
loopne
jmp
lock
mov
stc
inc
fisubl
mov
clc
push
cmp
cs
jge
cmp
ja
cltd
lea
aad
add
sahf
pusha
pop
cmp
cs
stos
repz
out
out
sbb
rol
adc
adc
cltd
cld
push
leave
das
xlat
vaddsubpd
mov
fisttpll
ds
flds
jb
scas
rorl
sbb
dec
jo
xchg
push
es
es
aas
sti
jle
mov
mov
push
mov
ljmp
xchg
jns
out
and
fwait
lock
mov
mov
in
jmp
jns
in
push
fistl
arpl
in
add
jne
or
inc
outsb
imul
mov
jne
push
vphaddbw
cmp
pop
mov
push
and
cmpsl
jmp
mov
xor
test
mov
js
and
cmp
in
dec
shlb
xor
imul
lods
ficompl
mov
bound
mov
pop
ret
xchg
xlat
sub
push
and
xchg
ret
notb
pop
xlat
xchg
sub
call
dec
js
test
push
test
cmpsb
testl
push
xchg
into
xor
insl
lock
lret
jge
cmp
loope
std
fdivrs
rol
xchg
in
xorb
shll
ss
sbb
xchg
dec
lret
add
add
push
lret
movb
dec
sbb
arpl
pop
pop
xchg
clc
adc
jmp
xchg
lds
sbb
add
push
inc
pop
push
stc
dec
ret
mov
imul
or
cvtps2pd
pop
push
or
stos
rcl
cmp
mov
lret
loop
add
inc
in
jmp
push
shrl
subb
jl
enter
insl
sub
jge
mov
xor
lds
sbbl
or
gs
aaa
xor
stos
inc
dec
mov
test
pop
mov
pop
adc
push
push
mov
dec
push
mulb
mov
fisttps
fwait
imul
sbb
mul
mov
daa
out
fcmovnu
dec
xor
adc
jae
cwtl
cmp
cmp
addr16
pop
dec
pop
fistpll
roll
mov
into
in
cmp
out
leave
sub
ret
or
loope
push
xor
dec
pop
cs
inc
incl
repnz
arpl
pop
lret
or
test
add
push
push
jno
push
popf
jo
inc
xcrypt-ctr
cmpsl
lcall
inc
jae
scas
xor
add
and
stos
in
nop
sub
push
push
es
popf
add
jnp
xor
dec
sbb
ficomps
outsb
aam
pop
cmc
dec
adc
sahf
add
push
lea
test
or
inc
and
pop
dec
mov
in
mov
fsubl
or
jbe
sti
insb
xor
pop
jo
push
add
cmp
mov
repnz
ficoms
inc
inc
inc
jbe
mov
fstpt
mov
mov
jae
push
mov
popf
sub
stc
jmp
test
pop
ret
fistpll
jle
out
sub
ret
orb
xchg
loopne
pusha
cli
xchg
ret
jge
xchg
mov
out
fcom
pop
xor
outsl
fadds
ficomps
sti
sbb
sbb
adc
seto
gs
in
imul
and
fmull
lea
imul
inc
adc
inc
ficomps
inc
gs
sbb
push
int3
push
mov
add
cmp
int3
pushl
mov
sbb
shll
js
push
fs
addr16
adc
jecxz
in
addr16
pop
xor
insl
mov
jae
mov
daa
nop
pop
jno
in
mov
sub
and
add
je
iret
xchg
hlt
sahf
xor
leave
sub
jle
add
push
xor
test
mov
aas
push
push
pop
rcrl
pop
in
mov
int3
mov
xor
pusha
jecxz
pop
cld
push
movsb
addr16
mov
shrl
or
or
push
dec
jae
lods
dec
cs
mov
add
mov
jnp
push
pop
inc
push
pop
dec
or
dec
enter
arpl
loopne
cli
sbb
sub
sub
popa
cmp
data16
add
xor
shlb
out
xchg
pop
inc
cmpsl
or
pop
in
mov
cmpsb
mov
lea
adc
test
adc
psrlw
dec
cmp
dec
aaa
add
lds
mov
in
cld
xor
leave
out
jecxz
leave
sti
mov
aas
dec
sti
addr16
mov
hlt
dec
mov
add
jge
lods
mov
out
inc
ja
popa
mov
in
cmpsb
pop
sbb
lahf
jne
jae
sub
push
lock
stos
jp
mov
mov
jmp
jecxz
pop
push
rolb
xor
add
mov
xchg
lret
inc
inc
jle
out
or
jns
insl
push
cmp
addr16
fstl
sbb
xchg
pop
push
cmp
call
jns
pop
lahf
inc
or
push
mov
incl
jge
pop
lcall
aam
nop
pushf
and
inc
sbb
pop
aad
jmp
adc
loope
xchg
repz
jmp
ljmp
push
outsb
mov
pop
lcall
adc
movb
fcomps
or
or
lock
and
mov
out
je
xchg
pop
fnstcw
mov
cmc
sbb
lea
mov
aaa
and
cmp
cltd
dec
fwait
xorl
scas
test
adc
scas
xchg
xor
dec
imul
pop
push
clc
fildll
testl
into
les
lds
mov
cmp
in
das
pop
stos
adc
test
add
jae
bswap
fs
xchg
fidivrl
loope
mov
sbbl
pop
jo
jnp
gs
clc
push
shl
gs
dec
push
xchg
push
cld
test
loopne
loope
sbb
xlat
pop
aad
mov
fs
out
pop
mov
pop
cmovns
iret
lcall
inc
rcrl
cmp
inc
shrl
popf
pop
stos
in
xchg
lds
insb
pop
push
push
push
mov
test
or
in
cmp
jb
mov
loope
adc
dec
mov
test
xor
mov
jo
fadds
cmpsl
out
int
int3
lock
jmp
aaa
popa
call
leave
xchg
mov
lcall
out
out
pop
imul
or
call
inc
pushf
xchg
adc
xchg
pushf
fildl
and
imul
mov
jae
or
paddq
add
in
andb
stc
shll
adc
xor
gs
cld
cmpsb
mov
clc
shrl
lret
rolb
push
mov
inc
cmp
clc
gs
mov
movsb
pop
clc
out
hlt
jge
mov
loop
in
push
movsb
mov
mov
pop
out
shrl
pop
xchg
adc
testb
sbb
mov
inc
popf
jb
int3
out
mov
xchg
inc
shrb
cmp
cltd
aad
inc
loopne
rsqrtps
movsb
and
addb
jae
in
lret
and
ja
adc
enter
inc
mov
ja
dec
pop
dec
dec
ja
bound
lahf
add
ds
mov
imul
int
mov
pop
xor
adcb
mov
mov
sub
std
inc
enter
inc
dec
loopne
pusha
push
mov
jns
ror
mov
shrb
and
into
jns
loope
xchg
and
call
arpl
in
cwtl
inc
lcall
ret
push
push
out
or
xchg
fistps
sti
repz
mov
shrl
loopne
push
jae
jae
xor
push
ss
in
pop
dec
outsl
je
adc
ds
xor
data16
aas
push
or
stos
sub
pop
xchg
inc
mov
mov
addr16
scas
push
in
add
repz
jbe
popf
cmp
ficoml
and
xchg
or
push
xchg
pop
ret
movsl
push
test
pop
jns
outsb
pop
mov
push
xchg
dec
hlt
push
push
mov
pop
ret
push
outsl
loop
jae
icebp
shll
mov
mov
pop
mov
outsb
jns
cmp
pop
push
jno
or
or
lahf
sbb
das
xchg
stos
lret
and
ss
or
scas
xchg
sbb
or
movsl
pop
lods
push
leave
inc
jae
frstor
push
cmp
inc
aas
in
ds
sub
roll
mov
daa
mov
push
mov
dec
xor
xchg
clc
jecxz
or
mov
pop
jne
scas
jno
call
movsl
pop
mov
mov
push
pushf
lret
orl
add
pop
and
push
repnz
mov
add
adc
out
rep
jno
mov
std
bound
or
inc
mov
scas
popa
in
or
or
inc
xor
pop
aaa
cmp
or
or
fisttpll
pop
jp
mov
xorb
mov
mov
push
cmp
xchg
stos
nop
leave
sbb
fstpt
inc
movsl
mov
lock
xorb
out
int3
outsb
idivl
adc
xchg
cmp
ljmp
fnsave
es
mov
xchg
fs
dec
cmp
mov
outsb
dec
mov
adc
or
mov
sbb
dec
xor
sub
inc
loop
push
loopne
lods
push
mov
fs
adc
in
imul
mov
cmp
in
xchg
xchg
and
jl
repnz
push
add
and
mov
push
xor
insb
jnp
int
and
cmp
pop
xor
cmp
addb
lahf
in
xor
inc
push
inc
scas
dec
sub
lds
add
add
hlt
leave
dec
and
or
jno
push
jp
mov
adc
cltd
out
out
jo
fwait
add
test
push
mov
jns
sub
mov
pop
xchg
pop
cld
sub
xor
mov
inc
iret
sbb
rolb
push
inc
mov
mov
in
inc
stos
out
mov
jae
jae
inc
jno
cmp
sbb
jns
cld
mov
jmp
in
dec
and
pop
push
add
and
xlat
leave
popf
pop
cmp
sbb
push
cmp
jb
mov
mov
insb
jns
xchg
and
inc
cmpsl
jns
adc
jle
lret
pop
mov
dec
cmp
out
xlat
mov
mov
popf
repz
pop
pop
ret
mov
pop
add
xchg
mov
dec
fdivl
dec
jmp
sub
cmp
xchg
mov
inc
les
jg
dec
dec
xchg
test
push
xchg
push
sarl
push
int
mov
or
pop
jns
xor
push
scas
ss
inc
push
xor
outsl
pop
xchg
and
push
pop
jle
cs
daa
in
inc
ja
cmp
out
loope
fs
jge
or
repnz
pop
add
dec
mov
jl
mov
leave
scas
cmp
adc
insb
clc
or
fdivrs
sub
pop
fsubrp
xchg
xor
cmp
or
jl
pop
sub
shll
cmpsl
mov
adc
push
out
adc
or
dec
inc
or
les
xchg
into
lahf
fsubp
in
push
push
mov
arpl
mov
pop
dec
or
and
pop
mov
sbb
mulb
stos
jno
sbb
push
cmp
fsubs
shl
add
stos
stos
pop
outsl
adc
inc
outsl
je
mov
mov
or
fstpt
addr16
and
adc
add
jmp
imul
out
cmpsl
pop
imul
and
sbb
sbb
jae
pop
lock
mov
or
shll
adc
xchg
scas
int
hlt
push
mov
fucomp
imul
mov
jno
xchg
jmp
or
sti
pop
aas
scas
sbb
shll
data16
cmp
add
std
data16
mov
iret
arpl
mov
data16
xor
xchg
mov
dec
xor
ret
lcall
pop
and
out
stos
jmp
xor
dec
je
pop
test
sbb
add
jne
inc
mov
scas
mov
dec
pusha
pushf
mov
sahf
nop
stos
mov
fcompl
ja
mov
movsl
sti
ljmp
pop
outsb
inc
push
mov
cmp
outsl
aam
mov
aas
push
sub
mov
inc
adc
loopne
aaa
mov
fisubs
mov
xchg
arpl
bound
pop
out
cmpsb
mov
gs
inc
xlat
xchg
adc
out
ds
fists
pusha
mov
jno
add
lret
xor
ficomps
push
addr16
dec
cwtl
add
jl
dec
sub
test
mov
test
xor
xor
pop
or
mov
enter
xchg
das
scas
xor
pop
inc
mov
repz
add
jp
dec
dec
fmull
aad
les
mov
pop
dec
in
test
adc
dec
in
inc
or
fistpll
mov
add
int
push
movl
or
loop
sar
xchg
test
repnz
inc
push
aad
hlt
sbb
and
push
pop
add
sub
mov
mov
dec
iret
and
dec
icebp
les
imul
out
stos
push
mov
jnp
repnz
sub
jnp
mov
sub
add
cmp
jno
add
hlt
push
push
aam
and
das
and
mov
mov
lods
xchg
std
mov
dec
fdivr
lock
pop
inc
lret
xchg
adc
pop
in
mov
cld
pusha
dec
ja
jmp
xchg
fmul
lock
jno
insl
jne
inc
cmpsb
andb
mov
xchg
add
fisttps
push
test
mov
icebp
cs
or
js
cmp
mov
xorl
mov
loopne
or
arpl
stc
xchg
push
outsb
lock
sbb
fnstsw
xor
xor
mov
push
pop
lods
in
cmp
test
pop
dec
imul
je
jb
andb
lods
ret
sbb
out
xchg
lret
fmuls
cld
xchg
mov
jle
les
pop
test
push
mov
test
cmpsb
arpl
lret
or
stc
pop
incl
aas
fstpl
xchg
sbb
mov
cli
test
inc
mov
pusha
push
lods
sbb
test
cli
pop
mov
jae
loope
sub
rcrl
rorb
pop
push
jno
test
and
sar
adc
sub
hlt
mov
mov
in
sbb
xor
jbe
mov
imul
or
xchg
sub
stc
mov
data16
cs
cltd
mov
loopne
adcl
jne
xchg
and
mov
stos
inc
int
lods
std
decb
aad
mov
xchg
pop
push
xchg
lahf
add
xor
aam
xor
and
test
pushf
mov
jae
mov
sti
push
mov
mov
stos
sarb
xchg
stos
mulb
jmp
pop
pop
adc
cli
cmp
and
cmp
insb
rcl
lret
decb
loope
or
iret
pop
inc
into
jmp
fidivl
es
pop
push
pop
inc
out
fldt
loope
loopne
stc
jne
aam
sub
push
mov
pop
jns
inc
or
pop
and
jno
sub
dec
lods
aam
stos
mul
jb
es
daa
or
andb
subl
xchg
imul
mov
lds
mov
adc
fildll
cmp
mov
sub
je
mov
outsl
mov
push
sarb
push
push
adc
lea
scas
inc
cmp
dec
das
in
cwtl
push
rep
adc
ret
test
mov
cmpsl
sti
push
dec
xchg
mov
popa
or
sbb
imul
pop
sbb
lea
xchg
xchg
or
cmpl
mov
aas
xor
into
push
cmc
addr16
fldenv
adc
xor
ror
inc
xchg
sub
popa
cmp
iret
sub
pop
in
cmp
push
add
cli
lods
in
inc
mov
movsb
inc
stc
pop
dec
cmp
scas
cwtl
cmp
std
pop
adc
xchg
mov
stos
rcrb
mov
jmp
pop
lret
aam
inc
mov
sub
and
popf
arpl
hlt
cmp
arpl
fists
jb
jb
das
xor
in
pop
pop
stos
mov
ret
jno
aaa
dec
fwait
xor
out
js
in
jo
jno
mov
les
mov
mov
add
addr16
sbb
jl
mov
outsl
add
mov
push
mov
xor
jl
in
xchg
push
jo
into
mov
cld
mov
jne
data16
adc
and
aam
cmp
xchg
stos
pop
mov
add
rorb
add
pop
loop
ret
aaa
addb
xchg
and
inc
sub
daa
repnz
inc
fwait
in
xor
adc
xor
xchg
push
repnz
mov
andb
cmp
scas
xchg
in
sbb
aad
sbb
cmc
or
iret
addr16
push
mov
or
and
shll
jmp
push
push
or
pop
or
dec
pop
and
sti
sbb
or
dec
out
lcall
and
jns
lock
fwait
add
mov
mov
es
adc
pop
mov
bound
cwtl
sub
add
jl
xchg
daa
rcrl
mov
cmp
movsb
xchg
fiaddl
mov
sbb
mov
in
jo
call
jg
cli
pop
mov
adc
cmpsb
inc
xchg
mov
pop
adc
cwtl
push
mov
pop
jno
aad
dec
sbb
jecxz
cmp
inc
xor
stc
cmpsl
sti
imul
mov
addr16
jns
or
mov
in
fsubs
loopne
negl
cmp
out
out
sub
ret
ret
inc
jge
xor
mov
gs
adc
and
jns
mov
out
jae
sbb
add
rorb
lahf
xchg
cmpsb
gs
stos
push
rol
mov
and
stos
cmp
and
sbb
add
jmp
aaa
or
pop
lret
mov
adc
test
outsl
mov
jmp
pop
adc
xchg
inc
aas
fdivrl
mov
leave
sbb
pop
adc
cmpsb
sub
pop
shr
loop
mov
daa
pop
jp
std
jecxz
sbb
lds
dec
jl
cmpsb
add
lret
adc
test
rclb
subb
dec
dec
xchg
fcmove
mov
cmp
sub
mov
adc
push
mov
rcrl
test
mov
jns
dec
movsl
pusha
or
int3
mov
mov
xchg
lret
dec
mov
sbbl
rolb
fiadds
and
adc
repnz
data16
mov
das
fbstp
cmp
sub
jo
lods
inc
lods
xor
mov
adcb
mov
jle
jae
sub
insb
push
mov
in
inc
lcall
stos
in
push
sti
outsb
repz
and
pop
xor
gs
sub
hlt
pop
icebp
push
xor
sbb
inc
loopne
pop
push
pop
add
shlb
pop
push
push
and
ret
dec
fchs
std
aas
sti
jmp
sbb
jp,pt
mov
cmp
test
or
pushf
and
in
decb
jnp
dec
cmp
xlat
lahf
lldt
in
into
ret
lret
mov
movb
outsb
dec
mov
pop
pushf
mov
mov
div
xrelease
ljmp
movsb
loopne
pushf
outsb
mov
outsb
insl
cmp
mov
mov
mov
dec
lock
or
fdivrl
adc
sbb
sub
std
inc
pushf
into
cmpsb
xor
push
mov
cmp
xor
or
xor
adc
in
orl
add
cmc
push
jns
aaa
lds
add
inc
fbld
faddl
xchg
scas
scas
movsb
jnp
incl
pop
fcomp
and
push
pusha
mov
jno
mov
cld
sbbb
xchg
xor
sbb
pop
xchg
xchg
fldcw
sbb
mov
int
movsl
out
aas
mov
jmp
dec
xchg
push
xor
add
fcompl
xchg
sub
stos
inc
int3
inc
mov
push
cs
cmpsb
sahf
xchg
test
pop
les
or
out
lds
pushf
cmpsl
jl
inc
es
push
push
lea
sub
rcll
stos
stos
test
lret
and
add
push
subb
cmpsl
pop
mov
jns
mov
leave
fildll
int3
or
xor
ret
and
and
and
mov
sub
xchg
ljmp
adc
out
xlat
xchg
xchg
arpl
or
or
imul
pop
sub
push
xor
outsb
out
dec
pushl
xor
outsb
sub
call
loopne
aas
fcoml
cs
mov
jmp
sarb
fsubs
imul
pop
pop
push
mov
inc
pop
divb
xchg
inc
sub
push
sbb
stos
in
scas
mov
aaa
mov
rorb
es
imul
pop
roll
and
mov
mov
je
les
push
xchg
or
sbb
int3
add
shrb
push
xchg
aas
inc
inc
imul
xchg
sub
insb
int3
jge
dec
inc
jg
loopne
inc
cli
test
sbb
cmpsb
mov
mov
sbb
adc
add
test
mov
mov
aas
fwait
loopne
mov
cltd
std
sbb
add
or
and
idivb
jmp
repz
aaa
sbb
stos
mov
xor
fldl
out
jns
dec
inc
mov
mov
lret
mov
mov
ds
mov
gs
mov
movsb
pop
pop
lock
sbb
lds
or
cmpl
sbb
sarl
outsb
inc
sub
inc
mov
aad
sti
push
shlb
mov
sti
aad
add
lea
mov
mov
adc
pop
out
dec
push
ret
xor
mov
out
adc
sbb
aas
pop
test
ss
mov
sub
mov
inc
stos
and
push
cmp
and
jbe
cmp
movsb
ss
shlb
mov
sbb
xor
mov
ret
cmp
cmp
fs
dec
stos
scas
fistpl
ds
in
out
jbe
xchg
pop
mov
insb
cmp
jo
inc
stos
xchg
cmp
sbb
pop
testb
push
scas
adc
ret
cli
lods
scas
push
sub
rorb
sbb
test
push
js
subb
mov
xchg
repz
and
xchg
fisubs
or
jno
cmp
or
xor
aad
dec
inc
mov
cmp
pop
xchg
pop
dec
fwait
daa
daa
ret
arpl
xchg
addb
jle
in
push
in
mov
xchg
xor
aaa
and
out
jge
jns
inc
iret
push
sbbb
cld
lcall
data16
rcrb
xor
inc
cwtl
jnp
iret
xor
scas
fisubrl
dec
gs
je
enter
and
push
rcrb
js
dec
fimuls
mov
inc
inc
pop
or
lods
ret
xchg
test
mov
push
scas
dec
inc
push
inc
in
adc
mov
outsl
scas
movsb
pop
sub
xor
cmp
push
pop
addr16
insb
push
adc
lcall
inc
dec
inc
in
test
mull
fwait
push
mov
stos
push
xchg
daa
stos
hlt
inc
cmp
xor
xchg
shll
icebp
add
inc
push
and
pop
sub
fsts
call
icebp
test
loopne
sbb
sub
mov
jb
sbb
sbb
jl
hlt
xor
mov
loope
dec
and
jmp
pop
adc
sub
fnstsw
xlat
test
cmp
sbbb
inc
fldenv
pop
add
or
pushf
sbb
dec
movsl
out
jg
pop
mov
mov
loop
mov
jnp
mov
fstpt
adc
push
sbb
lods
into
cmpsb
push
cmp
fs
or
ret
movsl
mov
pop
mov
mov
divl
ja
out
push
std
or
jno
push
pop
pop
lods
ficompl
mov
lods
mov
mov
je
sbb
jp
dec
inc
jp
jmp
sub
ret
jbe
dec
out
sbb
inc
dec
adc
push
lds
rcll
out
dec
sub
fisubl
add
mov
shl
sti
scas
mov
adc
leave
lock
ja
add
mov
push
mov
rcll
fisttpl
icebp
push
cmc
scas
dec
sub
dec
call
cmp
pop
jge
and
dec
rcrb
out
fwait
popa
in
mov
push
popa
jl
xchg
lahf
jbe
mov
dec
test
lret
cmc
test
inc
inc
mov
lcall
mov
add
sub
lret
bound
gs
xor
inc
loop
xor
int3
sti
rol
popa
fdivs
pop
int3
jb
ret
cmp
cltd
sub
test
pusha
fidivrs
mov
mov
pusha
cmp
mov
sub
sbb
popa
cmp
les
sar
movsl
pop
cmp
mov
inc
outsb
jl
andb
repnz
pop
scas
imul
divl
andb
or
int3
lock
mov
mov
cmp
cmp
fcompl
je
or
or
sub
shll
lret
decl
add
add
mov
jns
enter
dec
mov
cmp
ret
in
jp
out
mov
cmpsb
mov
xor
and
fmull
adc
add
mov
mov
out
push
in
add
mov
popa
int3
sub
jp
shlb
sbb
add
add
fwait
sbb
frstor
pop
sub
das
fstp
ret
push
popa
mov
lea
mov
sbb
and
dec
mov
repz
jmp
int3
dec
xchg
cs
jle
push
add
icebp
sti
fs
ret
inc
lahf
arpl
or
filds
mov
cmpsl
lock
das
and
push
sbb
mov
in
or
gs
or
push
jg
mov
rcrl
sbb
mulb
pop
adc
popa
dec
cmp
into
outsb
xchg
adc
adc
out
notb
dec
pop
cltd
inc
cltd
adcl
test
les
fs
int
inc
add
lret
insl
push
jbe
out
xchg
push
inc
adcl
mov
dec
xchg
js
rep
cli
fcmovnbe
mov
out
mov
outsl
mov
push
dec
jge
shlb
push
cmpb
jbe
adc
fisttpll
fimull
mov
insb
inc
cmp
pop
sbb
fisubs
jns
mov
subl
out
add
cli
mov
out
jnp
mov
mov
jg
push
sarl
push
push
shl
std
sbbb
cwtl
pop
add
negb
sub
mov
fwait
jmp
push
jo
nop
xor
lods
test
jbe
mov
es
lock
pop
or
mov
and
or
cli
lret
jecxz
jp
jmp
push
nop
mov
int
fldl
add
insl
ds
dec
icebp
and
push
insl
enter
test
sbb
shl
or
scas
add
scas
mov
jae
xor
add
stos
fmulp
mov
adc
fsts
push
fmuls
insl
ret
loope
mov
cmpsb
out
pop
pop
jnp
jbe
push
add
add
sub
push
mov
movsl
mov
push
mov
sub
mov
pop
push
dec
mov
fiadds
leave
or
xor
jl
pusha
scas
iret
cltd
bound
xchg
iret
pop
dec
sbb
divb
jns
add
pop
or
das
jbe
mov
test
jno
cmp
test
mov
adc
nop
cmp
or
mov
adc
pop
xchg
dec
pop
lods
in
push
jnp
mov
jge
or
mov
jg
inc
insl
sub
mov
lods
jnp
or
test
push
and
fistps
adc
push
movsb
push
push
cld
mov
add
lea
lret
aad
inc
pop
or
or
mov
lods
popa
push
xor
jb
test
shll
frstor
dec
pop
mov
dec
mov
jo
cmpb
sub
pop
pushf
sar
jb
cmp
xchg
mov
shr
ja
push
pop
popf
into
dec
sbb
xor
cmp
sub
cs
scas
inc
insl
into
es
cmp
gs
add
fcmovu
add
ja
jns
push
movsl
inc
add
addr16
popa
test
and
out
lret
ja
leave
test
add
loop
mov
jne
repnz
js
jmp
popf
sbb
xchg
add
jg
push
add
lock
arpl
mov
pusha
push
push
ja
addr16
mov
loope
xchg
push
sub
xlat
jmp
fwait
jg
adc
jmp
inc
lea
add
fs
push
mov
sbb
movsl
and
inc
movsl
jae
imul
jb
pop
xchg
daa
lods
fiaddl
adc
add
push
push
fldt
hlt
inc
iret
adc
enter
in
arpl
pop
push
cmc
xlat
subb
cld
insb
pop
inc
mov
add
jno
push
sbb
in
into
add
cwtl
cmpsb
sbb
jbe
out
out
sahf
les
frstor
ss
mov
pushf
jmp
jae
mov
push
icebp
mov
push
decb
inc
sub
and
xchg
jb
xchg
pusha
in
pop
push
popf
arpl
scas
pop
movsl
mov
cld
out
popa
mov
jmp
xor
mov
pop
call
mov
push
jp
dec
arpl
mov
js
xchg
test
stos
popa
sbb
lock
sbb
lds
xchg
inc
repnz
xor
xor
repz
add
lret
and
dec
repnz
push
and
mov
sbb
aas
sbb
dec
imul
subl
cmp
pop
repz
xchg
enter
sub
fiaddl
sbb
push
cmp
test
in
cmpsl
inc
push
sub
sbb
pop
mov
xlat
cltd
mov
aad
in
fistps
push
in
adc
lahf
xchg
add
inc
lods
lcall
xlat
mov
push
push
into
jo
insl
xor
repnz
out
push
lock
inc
jl
mov
sub
cmpb
mov
pop
fcomps
hlt
cmc
in
dec
add
aam
pop
movsb
pop
sbb
les
xchg
scas
sub
popa
loope
lahf
mov
xor
dec
out
shlb
mov
adc
add
std
add
or
and
aad
popa
in
rclb
pop
les
js
cmp
xchg
out
xchg
cmpsb
xchg
insl
mov
jge
popf
add
pushf
fldcw
push
test
jb
cmp
addl
mov
sbb
loope
outsb
pop
pop
in
adc
sbbb
inc
mov
decl
push
scas
outsb
pusha
sbb
ffreep
jb
sub
lcall
subb
adc
push
and
adc
pop
popa
leave
mov
testb
icebp
adc
std
stos
and
push
iret
out
int
push
fldcw
in
cltd
lret
sub
repz
aaa
ljmp
bound
das
test
fmuls
adc
push
scas
pop
sbb
or
mov
out
cld
shrb
fwait
inc
xchg
daa
jo
nop
push
mov
fldenv
cmp
pop
push
xchg
imul
int3
jb
mov
jbe
and
xor
outsb
mov
jne
frstor
stos
shll
sbb
and
fists
test
or
jmp
jge
loope
les
add
cld
sbb
pop
cmp
fsubrl
fwait
shll
or
in
add
popa
leave
sub
and
jmp
dec
nop
ja,pt
iret
push
cmp
mov
pop
data16
adc
dec
and
xlat
inc
rcll
cmpl
aam
cld
fildl
mov
fwait
sbb
add
out
sub
mov
and
shrb
add
gs
push
lahf
jne
popa
je
mov
xor
xor
scas
cs
mov
test
push
jns
enter
jb
in
push
mov
leave
adc
jg
fwait
jecxz
call
cmpsl
fcomps
push
inc
stc
mov
add
and
cmp
jl
out
insb
sbbl
sbb
xor
cld
and
fistl
aam
roll
dec
shrl
clc
jecxz
mov
mov
icebp
lea
cmpsb
lods
inc
sub
mov
imul
or
pop
add
pop
test
or
and
jecxz
mov
jp
sbb
jb
orb
xlat
sbb
sbb
sub
xchg
add
testl
lcall
movsl
push
pop
add
xchg
enter
insb
and
in
movsl
test
xchg
mov
add
sbb
rol
cmp
mov
sbb
dec
test
pop
cmpsb
adc
adc
addr16
mov
pop
in
jg
dec
notb
subl
jae
xlat
lahf
or
xchg
lods
pop
xchg
adc
mov
sub
enter
test
cmp
mov
test
rorl
out
mov
cmp
sbb
dec
mov
rclb
aas
mov
and
and
sarb
stc
pop
aam
in
das
xor
sub
aas
lret
mov
cmp
mov
jle
fildl
loopne
mov
xor
inc
addr16
sar
je
stc
arpl
test
mov
adc
pusha
pusha
flds
jle
push
movsl
outsl
lcall
daa
mov
push
inc
adc
fcomps
sbb
scas
test
add
loopne
lods
hlt
push
stos
xchg
mov
push
shlb
xchg
inc
cwtl
adc
jl
push
mov
stos
xchg
fdivrl
adc
je
adc
mov
gs
subl
and
cmpsl
nop
fcom
push
mov
enter
lcall
xchg
add
popa
ret
test
pusha
mov
insl
mov
xlat
xor
mov
cli
movsl
test
test
cmp
adc
pop
loop
mov
in
scas
lds
mov
xor
jge
or
push
filds
int3
sub
pop
mov
inc
push
dec
mov
sub
mov
in
xchg
inc
cmpsb
adc
adc
pusha
mov
mov
mov
pop
test
mov
lock
mov
addb
js
imul
aam
dec
mov
and
ret
xor
mov
mov
add
and
in
aaa
insl
ss
xor
lds
mov
xchg
ja
ficoml
mov
pop
push
fisubrs
adc
test
sbb
mov
fisttps
mov
aad
aam
adc
fnsave
fxch
push
repnz
jp
jb
mov
sub
shlb
jns
dec
add
movsb
arpl
mov
pop
into
in
dec
pop
aas
cltd
insb
jp
lods
lods
fbstp
je
mov
jmp
jo
push
shl
jo
ja
aam
pop
int
pop
lods
adc
push
mov
mov
int3
std
sub
outsl
int3
sbb
ret
outsl
mov
jecxz
xor
dec
jmp
or
sbb
loopne
and
pushf
shlb
jmp
dec
dec
cmp
vdivpd
lods
dec
std
mov
sbb
inc
push
loopne
add
ret
sbb
pop
pusha
data16
rcrb
xor
jo
mov
inc
push
test
enter
jl
arpl
xor
fstps
sub
sub
stos
addr16
xor
lea
inc
mov
fcoml
push
xor
cmp
sub
adc
and
jae
loop
cmp
jp
aad
pop
jecxz
in
inc
dec
add
iret
popa
add
mov
int
mov
out
and
xlat
lock
mov
jno
xchg
sbb
push
hlt
into
scas
push
mov
xchg
sub
cs
cmp
mov
scas
cld
dec
ja
inc
mov
js
xor
push
sbb
outsl
testb
push
movb
je
mov
loop
sbb
cmp
cli
mov
jne
pop
loop
pop
jge
push
repz
cwtl
scas
iret
sbb
call
lret
nop
pop
push
int
pop
stc
loopne
sub
or
loop
je
mov
push
int
movsb
adc
lret
jbe
inc
sti
int
mov
cmpsl
ret
or
jecxz
daa
sti
fimull
shr
iret
cmpsb
int3
sbb
insb
or
fs
iret
mov
mov
dec
lods
sahf
loop
sub
dec
or
sbb
jl
lret
mov
sub
xor
mov
add
ss
fucomi
mov
popf
add
mov
fbstp
nop
lea
insl
repz
seto
aad
jns
xchg
scas
jnp
lds
sbb
ror
sub
fcmovnbe
push
shrl
and
push
aad
jg
mov
xchg
movsb
lods
stos
sub
sbb
lret
rcl
lods
mov
cmpsl
mov
and
and
inc
mov
inc
pop
sub
inc
addb
nop
insl
addr16
mov
xor
inc
inc
shll
clc
mov
pop
inc
fisttpl
and
and
es
pop
js
inc
xchg
xor
and
add
lock
repz
fiaddl
dec
xor
add
xor
sti
ljmp
in
adc
or
pop
cwtl
fnstsw
jnp
jo
cli
int3
decb
jmp
nop
fs
mov
jge
popf
pushf
popf
mov
leave
out
scas
fidivrs
add
adc
fsubrs
sub
fmull
fdivrl
dec
jmp
loope
mov
call
ret
rorl
leave
sbb
and
mov
sbb
xchg
jno
pushf
sub
ljmp
jns
add
adc
mov
aad
fidivl
lret
rorb
xchg
cmp
andl
adc
xchg
ja
mov
xchg
pop
pop
push
fbstp
dec
xor
pop
lods
mov
push
jecxz
sahf
cs
xchg
dec
loop
lds
jp
ja
inc
into
pushf
inc
leave
dec
cmpsb
jmp
out
fstcw
adc
sbb
jle,pt
jmp
fists
sub
jne
add
pop
movl
leave
dec
xchg
cmpl
sarl
cld
add
aaa
ret
pusha
test
jp
xor
popa
xor
adc
fdivl
xchg
outsb
je
cmpsb
cwtl
cmp
pop
add
outsb
inc
bnd
pusha
aad
bound
dec
xlat
call
lods
adc
lds
push
mov
jmp
lret
jp
mov
jmp
sahf
add
jbe
cs
xchg
rcrl
test
pushf
jne
enter
jmp
add
xor
or
fidivl
in
movsl
mov
lods
and
fdivr
and
fwait
sub
cmp
jo
aam
sahf
or
out
or
push
pop
mov
mov
movsb
jl
pop
inc
orl
lods
fstps
fsubrl
pusha
mov
daa
stos
cmc
cmp
push
loopne
les
adc
xor
add
adc
sarl
lahf
cld
dec
movsl
xchg
dec
in
dec
data16
push
pop
loop
pushf
adc
inc
xchg
push
dec
pop
fsts
mov
lea
or
jbe
pop
push
icebp
push
sti
dec
lds
mov
stos
xchg
xor
jnp
aam
mov
mov
jecxz
xor
sub
jns
in
es
sbb
pop
rclb
mov
sahf
daa
cmp
mov
pop
and
js
cli
cmpsb
or
jp
frstor
pop
out
mov
lds
cmc
push
xchg
jg
push
imul
rcrl
or
in
mov
adc
xor
xor
int3
dec
push
push
xchg
ficompl
inc
repnz
scas
xchg
aaa
mov
aas
lcall
mov
pop
imul
lock
rorb
es
ljmp
test
ja
mov
xchg
in
aad
test
cmp
or
test
imul
cmp
je
inc
pop
je
dec
mov
pushf
cmp
adc
sti
sbb
sbb
sbb
cmp
loop
ljmp
push
cmpsl
psubsw
stos
and
xlat
jp
aad
adc
dec
je
mov
lock
sub
push
hlt
in
call
rcl
sbb
int3
test
scas
adc
adc
pop
loopne
xchg
or
mov
test
out
mov
adc
andl
test
add
cmp
add
mov
mov
add
mov
pushf
into
and
lds
dec
ret
sahf
test
jb
mov
movsl
dec
out
or
je
fstpt
sbb
pop
jae
pop
xor
add
push
xor
push
aad
pop
pop
dec
or
jle
xchg
pop
push
jmp
leave
or
xor
inc
ljmp
xchg
inc
pop
mov
ret
lods
xchg
movsb
jne
insl
mov
out
fnsave
pop
and
stc
jl
test
negb
pop
cmp
or
jae
test
test
mov
xchg
movl
xchg
aam
pop
mov
or
and
frstor
and
daa
gs
int
inc
adc
push
adc
lock
fistpll
cmp
push
pop
xchg
pop
ret
mov
dec
ja
arpl
shll
ret
mov
add
iret
out
pop
imul
adc
popf
rcrl
push
loope
lret
jmp
dec
mov
xor
fs
leave
mov
mov
xor
xchg
xchg
xorb
dec
cltd
xchg
and
int
xchg
xchg
xchg
adc
xchg
aam
sti
das
neg
jae
scas
pop
push
cmpsl
dec
fs
push
mov
ret
and
push
packssdw
mov
sti
ljmp
in
xchg
rclb
mov
push
jecxz
es
cmpsl
stos
mov
mov
pop
xor
pop
mov
stos
in
std
stos
ret
cmp
ljmp
cwtl
mov
das
loopne
inc
fcmovbe
js
or
loopne
xchg
lahf
divl
icebp
fwait
xor
mov
xchg
push
or
sahf
sbb
testl
add
cwtl
lret
add
imul
shr
lock
enter
pop
stos
fs
mov
out
sbbl
sbb
mov
aam
ljmp
push
bound
xor
movsb
cmp
sti
test
lcall
cwtl
sub
sub
lea
sbbl
leave
mov
data16
or
mov
mov
mov
gs
or
inc
rcrb
add
insl
repnz
cmpl
xlat
ljmp
scas
setnp
pop
sbb
add
inc
cmp
cmc
out
lds
xor
adc
out
leave
call
push
scas
call
and
jl
in
arpl
pcmpeqd
mov
mov
dec
clc
arpl
roll
rclb
mov
movsb
nop
cmp
add
mov
or
sti
inc
pop
fwait
lahf
xchg
icebp
push
adc
xor
fnstenv
fwait
cltd
hlt
lcall
inc
mov
ds
adc
or
xchg
sarb
mov
add
xor
std
sub
or
sub
and
cmpb
fs
add
cwtl
outsb
mov
xchg
jb
daa
mov
mov
dec
mov
ldmxcsr
jle
xor
int
dec
jo
mov
pop
sbb
xchg
ja
mov
in
inc
or
bswap
mov
add
lret
pop
lea
aam
jb
inc
dec
in
xchg
rorl
lcall
push
xor
push
and
aas
jg
jl
jecxz
inc
cs
stc
xchg
imul
pusha
test
add
into
adc
inc
mov
push
iret
gs
lods
loopne
mov
ljmp
ds
inc
cli
xor
or
imul
adc
jns
outsl
dec
mov
pop
and
in
inc
cmpsb
or
ret
mov
hlt
push
std
jno
mov
decb
jmp
scas
xchg
cmp
ror
shll
mov
subl
xor
mov
cmp
jne
or
push
std
jle
notl
adcl
in
ljmp
sbb
xchg
or
mov
ret
fwait
ds
push
cmc
sbb
push
sub
pop
dec
push
mov
andb
mov
mov
jns
lock
ss
mov
in
lods
lret
sbb
mov
add
std
cmp
adc
push
or
mov
out
or
xor
mov
sbb
into
mov
les
adc
xlat
mov
sub
lods
cmp
stos
push
rolb
pop
adc
rolb
lods
cmp
mov
cmp
mov
lahf
divl
stos
lock
mov
cmc
out
popf
in
ror
dec
cmpb
add
add
ja
or
data16
addr16
inc
push
arpl
jns
int3
pop
sbb
mov
rcl
cld
mov
js
pop
cwtl
cmc
sub
movsl
in
daa
xchg
pop
movsb
nop
loop
out
mov
imul
pop
or
repnz
imul
std
lahf
or
cli
lods
arpl
or
add
mov
cmp
xchg
insl
shll
sbb
cmp
roll
or
xchg
xchg
adc
out
stos
je
xor
addr16
in
sbb
outsl
mul
cs
pop
push
iret
test
and
roll
mov
in
sub
ficomps
mov
std
shl
sbb
and
aam
loope
add
sub
pop
mov
repnz
insl
dec
call
pop
and
std
fidivrl
sbb
aas
push
popf
cmp
mov
push
aad
and
inc
addr16
cltd
lcall
bt
jg
mov
adc
inc
adc
mov
ja
fwait
ja
mov
jnp
inc
adc
jecxz
sub
mov
test
fndisi(8087
add
test
or
pop
dec
fsubrs
mov
and
mov
ret
cmpsl
mov
inc
sub
inc
sbb
mov
cli
pushf
lret
or
test
stos
sub
int3
add
popa
dec
ja
pop
mov
add
cmc
sbb
jge
mov
jae
mov
dec
imul
jp
divb
js
popa
fidivrs
add
insl
call
pslld
cmp
ds
popf
sub
sbb
and
mov
pushf
popf
adc
inc
inc
mov
arpl
mov
mov
sub
arpl
jecxz
cmp
imulb
push
push
cmpsb
sbb
mov
gs
push
adc
insb
pop
loop
mov
mov
sbb
xchg
inc
adc
rcr
inc
add
mov
out
push
and
xchg
ret
loop
mov
mov
arpl
adc
adc
cmp
jl
lods
mov
sbb
and
jae
cli
or
popa
insb
cltd
cli
sarb
popf
cs
or
jecxz
mov
stc
cmp
and
mov
jg
fidivrl
fisubrs
outsl
enter
or
daa
sub
jae
sub
pushf
in
cwtl
stc
mov
les
push
sub
dec
dec
mov
lahf
aad
xchg
js
jmp
and
inc
fimull
out
xchg
into
insl
inc
pop
pop
add
in
or
fdivrs
mov
mov
push
repz
lcall
lods
shll
in
clc
call
movsb
jle
data16
mov
fwait
and
popf
xchg
test
inc
dec
push
xchg
aas
pop
out
lahf
enter
repz
jns
or
sbb
das
aam
setno
fsubrl
gs
mov
cwtl
xchg
jge
add
pop
dec
cmpsl
adc
fcomi
call
cld
dec
lea
sti
mov
ja
sahf
rol
add
jnp
pusha
pop
outsl
in
lret
and
mov
ss
hlt
jbe
lcall
lcall
sub
stos
push
je
aas
les
mov
in
into
movsb
sub
push
push
xchg
fistl
addr16
xor
lods
out
nop
adcb
data16
out
mov
rorl
iret
enter
push
lret
idiv
movsl
ret
mov
jb
cli
stc
fsubs
incb
push
insl
pusha
mov
jmp
xchg
push
lods
xor
add
jmp
test
adc
jnp
fisttpll
push
pop
aas
xor
mov
cmp
pop
pop
lods
or
ds
dec
call
stos
roll
inc
pop
sarl
and
adc
cld
pop
push
dec
xchg
add
int
ret
ja
fistps
fimuls
rol
mov
lods
cmp
xchg
sbb
aam
mov
je
test
lret
or
aam
mov
imulb
cmp
or
dec
pop
insl
inc
stc
mov
sbb
sti
ljmp
push
push
inc
jno
mov
in
xor
cs
loope
out
inc
shrb
xchg
adc
sbb
xchg
add
inc
xor
lea
sbb
inc
push
ds
rcrl
or
rcll
cmpsb
scas
sbb
cmp
sbb
cmp
push
imul
shll
mov
pop
mov
pop
and
mov
inc
xor
call
and
outsl
push
push
add
lea
jl
movsb
add
es
adc
sub
sub
pop
mov
adc
aam
test
push
mov
xchg
test
daa
sub
cmp
ret
aad
mov
mov
cli
jge
xchg
pushf
dec
cmpsb
cmpsb
lds
mov
aam
loope
add
jno
push
or
push
rcrb
dec
mov
jae
gs
mov
clc
sub
xor
leave
mov
push
and
sub
push
pop
jle
sub
push
sub
adc
int3
mul
jl
movlps
xor
xor
movsb
shll
mov
or
jl
and
push
mov
jb
cmp
les
pop
lds
xchg
fld
mov
pop
cltd
scas
jo
pop
and
dec
lahf
pusha
int
bnd
push
inc
rcrl
or
pop
stos
mov
jb
push
gs
push
out
jl
iret
or
mov
mov
lahf
stos
and
inc
sbb
stc
sub
ds
repz
mov
push
cs
cltd
mov
les
cmpsb
enter
test
addl
add
sub
aam
dec
iret
pop
jbe
mov
xabort
xor
dec
inc
xor
je
mov
nop
lock
outsl
shll
jp
jne
jecxz
enter
test
and
add
pop
cmpsl
xor
mov
jb
xchg
cmc
repnz
enter
in
enter
cmc
push
cmp
mov
lahf
insl
fisttps
addb
fsubr
je
or
sub
mov
sbb
mov
test
subb
jbe
add
sub
test
jae
jns
mov
xchg
lret
test
test
mov
outsl
rcll
push
aas
sub
inc
test
inc
pop
aas
add
push
inc
inc
xchg
cwtl
popa
jnp
push
fucom
adc
sub
into
loop
imul
mov
call
adc
in
std
pop
imul
mov
mov
cmpb
inc
pop
andl
adc
push
icebp
idivb
lcall
imul
cmp
cmp
repz
es
mov
fisubl
or
iret
adc
cmp
dec
cmp
inc
add
lret
stos
pop
adc
pop
loope
sub
ss
mov
in
fiaddl
sbb
addl
lods
and
inc
jge
rcl
xor
inc
fstpt
adcb
in
jo
and
cmp
decb
mov
add
das
lahf
roll
cmp
mov
icebp
sub
or
sbb
pop
das
shlb
push
daa
adc
and
jno
jecxz
jmp
mov
or
cmpsl
movsl
sti
iret
scas
mov
lret
xchg
inc
mov
jb
inc
std
mov
mov
mov
mov
repnz
orb
rcr
push
dec
aad
sub
je
sub
jbe
mov
sbb
test
imul
sbb
mov
jnp
stc
mull
add
cmp
pop
xor
pushf
dec
pop
or
fdivrl
adc
nop
fwait
xor
mov
adc
xor
outsl
push
hlt
addr16
and
push
decb
xchg
cli
inc
sub
dec
call
jge
sbb
xchg
mov
inc
xchg
jnp
sbb
dec
push
inc
xchg
mov
cltd
cmp
and
xchg
jge,pt
ret
les
test
mov
ja
add
inc
and
sahf
push
inc
movsb
roll
push
mov
in
out
cmp
mov
and
jmp
dec
icebp
loopne
lea
push
mov
sub
gs
fsubr
jne
loope
enter
aad
pop
jb
fistps
mov
int
mov
and
rclb
mov
push
or
notb
mov
jns
mov
enter
int3
fidivs
imul
jmp
std
ret
sbb
jns
mov
pop
sbbb
push
pop
inc
sub
add
sbb
push
scas
sub
jae
lea
jmp
cmp
addr16
sahf
loope
rorl
outsl
pop
inc
add
sbb
daa
adc
xchg
sub
lret
add
sti
ljmp
popf
stos
movsl
es
push
ds
adc
cmp
sub
and
jbe
push
dec
fnsave
andb
adc
jge
ret
push
cmp
scas
andb
pushw
insl
rcll
js
testb
xor
adc
mov
test
lcall
int
aam
xor
fcmovnb
xor
mov
or
jno
call
inc
inc
push
addr16
test
cmpl
jne
push
mov
into
lret
imul
and
xchg
fildll
test
mov
sub
popfw
inc
nop
cmc
lds
aas
sarl
mov
pop
push
movsb
mov
jp
inc
push
ljmp
rcrl
mov
andb
push
or
adc
sbb
dec
lahf
pop
xchg
outsb
test
imul
enter
aam
dec
adc
shlb
pop
popa
out
pop
mov
or
pop
lods
jno
in
pop
insl
gs
rorl
fisubrl
call
cltd
imul
adc
mov
aas
movsb
sub
div
enter
cmc
in
push
lahf
push
ljmp
mov
pusha
dec
add
lea
sub
cmp
dec
sbb
cmp
insl
xor
and
mov
xor
push
push
mov
js
js
fisubrl
add
popf
dec
test
arpl
ret
jp
aam
inc
test
xor
aaa
xchg
push
sbb
mov
or
loop
push
xchg
mov
mov
out
out
jmp
out
mov
mov
push
jge
mov
add
push
and
aam
adc
js
cmp
fldcw
scas
imul
sub
inc
push
dec
sbb
add
pop
outsb
jne
or
or
imul
pop
mov
or
stos
xchg
es
push
dec
dec
cltd
inc
push
jg
sbb
mov
out
cltd
movsl
adc
out
enter
jae
mov
mov
imul
ret
iret
jmp
push
ret
loopne
sbb
cld
adc
ljmp
cmc
sub
es
pop
pop
push
sbb
cltd
es
adc
mov
cld
sub
movsb
add
jae
jo
xor
mov
sbb
int3
jecxz
push
adcl
and
mov
stos
pop
dec
add
push
jno
scas
cmc
cmp
mov
mov
or
gs
lods
and
out
les
loop
int
int
out
in
push
lret
sbb
or
sub
adc
cmp
test
and
or
sbb
inc
adc
xchg
mov
out
pop
pop
test
xor
shl
movsl
das
xchg
mov
js
punpckhdq
movsl
lock
xor
loop
sub
pop
mov
aas
daa
inc
std
xchg
ss
out
fsubl
pop
sub
mov
fisttps
adc
sahf
pop
shll
mov
xor
jbe
movsb
mov
or
push
fdivrl
arpl
mov
ljmp
xchg
loope
push
enter
lods
aas
xchg
decl
xchg
leave
adc
sbb
mov
jl
adc
fldcw
push
sub
fwait
mov
xchg
and
xchg
sbb
mov
fistl
data16
mov
imul
stos
sbb
push
pop
jmp
mov
jl
jo
test
mov
aam
cmc
cmp
imul
jge
dec
cmp
dec
loopne
pop
sub
es
fiadds
or
neg
xchg
xlat
mov
mov
rclb
jmp
lock
imul
mov
ss
xor
lock
inc
cmp
or
hlt
mov
sub
lods
dec
and
daa
js
mov
sbb
in
fmull
xor
or
push
push
addr16
mov
or
add
dec
xor
jg
pop
adc
stos
cld
xor
mov
fucomp
push
aad
in
push
loopne
pop
mov
dec
std
or
mov
roll
subl
xchg
inc
leave
and
jae
imul
pop
mov
divl
shld
leave
xchg
mov
or
jns
or
lea
sub
jg
lcall
adc
sbb
cld
pop
jno
test
imul
arpl
sub
pusha
imul
mov
popf
lcall
mov
cs
ss
rorl
cmpsl
jno
cli
mov
sahf
repz
cmp
lcall
mov
es
cld
sub
mov
sbb
mov
xchg
aas
inc
xchg
fstl
in
insb
sub
mov
dec
adc
and
clc
push
loope
das
push
ds
fcompl
add
and
cmp
adcl
push
cmp
adc
movb
xor
outsl
stc
mov
sub
and
jg
add
sbb
sti
pop
out
xchg
cs
sbb
push
sub
jl
movsl
mov
mov
push
and
dec
ljmp
out
sbb
xchg
les
outsb
sbb
loope
or
cmpsb
mov
popa
es
xchg
jo
hlt
jge
nop
xchg
or
mov
adc
mov
mov
pop
inc
or
cmp
sub
sti
jp
cld
arpl
and
aaa
dec
mov
cltd
inc
push
aaa
rorl
in
fsts
call
push
sbb
mov
fwait
aas
inc
and
stos
mov
leave
or
pop
or
fwait
scas
gs
outsl
cmp
movsb
cmc
pushl
ljmp
inc
je
jp
inc
les
sti
jb
ljmp
or
jle
xlat
movsl
imull
add
sarb
mov
push
pop
in
sahf
rorb
iret
cld
dec
ja
addl
lahf
xchg
dec
push
lea
pop
cmp
sbb
outsl
mov
divl
push
stc
ja
dec
fs
mov
push
pop
xor
add
dec
fdivrl
lret
jmp
pop
ljmp
movb
out
jnp
add
dec
jne
xor
fs
or
fstpt
xor
push
sbb
imul
outsl
jno
adc
and
adc
scas
and
lods
xlat
mov
call
int
xlat
arpl
sbb
adc
mov
jg
insb
and
aas
jb
cwtl
lock
pop
mov
imul
mov
push
mov
ljmp
cmp
lret
xchg
and
mov
mov
adc
cmp
lods
popa
mov
loop
popa
dec
dec
data16
fs
push
push
das
adc
iret
in
inc
ret
sub
add
test
pop
inc
push
adc
cwtl
push
lds
adcb
out
or
jae
or
push
lret
shlb
movsb
lcall
dec
orb
in
xchg
mov
pop
or
jns
fnsave
int
jmp
push
inc
and
cltd
jbe
or
shrl
gs
mov
ja
sbb
cmp
add
push
loop
jl
add
pop
jne
dec
push
leave
sub
push
aam
aam
in
mov
xor
ficompl
xchg
cld
jg
je
push
jmp
and
jae
mov
sub
adc
cmp
cwtl
pop
stos
add
xchg
inc
sbb
into
mov
mov
outsb
jge
pushl
out
dec
dec
xor
adc
jle
sbb
lods
sbb
jl
adc
xor
cld
leave
xlat
jbe
xchg
test
imul
and
mov
push
icebp
repnz
enter
cld
inc
sub
lret
outsb
fsts
dec
push
push
or
mov
orl
xchg
aam
pop
lahf
jg
mov
push
lds
mov
mov
shlb
imul
push
test
in
jno
imul
jo
sub
cmc
nop
enter
popa
fs
and
fisttpll
cmc
mov
mov
mov
test
xor
ds
inc
lret
mov
clc
ficoms
cmp
fdivl
les
cltd
add
mov
fstps
jle
hlt
push
or
rorl
enter
push
push
fisttpll
je
out
cmp
xor
clc
repnz
dec
leave
inc
xchg
int
into
inc
call
lahf
mov
cmp
js
stc
repz
pop
push
pop
sub
inc
jmp
inc
jmp
test
mov
jo
mov
movsl
or
push
cmp
ja
outsl
orb
inc
cs
ret
sub
add
sbb
jg
inc
lahf
mov
sbb
push
in
push
cld
in
test
pop
aam
pop
out
popa
adc
dec
add
push
mov
and
pop
cmp
je
dec
mov
shlb
movq
inc
dec
sub
cwtl
test
jp
iret
push
imul
cmp
mov
pop
xchg
inc
aad
xor
mov
xor
imul
jnp
scas
decl
imulb
lds
mov
mov
dec
cmc
cmp
lahf
lods
hlt
inc
scas
adc
mov
push
test
mov
add
out
add
push
push
or
ja
sub
stos
push
xchg
jae
xchg
lock
repz
bound
mov
xchg
ss
xchg
ljmp
rcrl
lret
or
mov
enter
or
das
push
jne
lods
dec
and
dec
out
fs
push
jmp
fnstsw
inc
jmp
adc
inc
mov
push
jnp
mov
imul
jmp
mov
mov
mov
and
xlat
sti
mov
ret
sbb
push
sbb
rcr
jecxz
int3
sbb
mov
pop
fnstenv
ljmp
adc
pushf
lea
test
es
mov
dec
addr16
push
jmp
in
out
mov
in
jnp
out
mov
out
pop
loopne
test
int3
and
xchg
out
adc
xchg
xlat
cs
repz
lret
ds
or
inc
sti
inc
inc
cmp
jmp
inc
inc
sbb
cmp
pushf
or
adc
push
add
ds
scas
rcrl
dec
or
addr16
lret
cli
jecxz
inc
push
movsl
js
push
xchg
int
js
jns
ret
dec
mov
movsb
fnstcw
mov
xchg
iret
jae
fldl2e
pop
or
pop
adc
pop
fisttps
ret
icebp
xchg
loopne
ljmp
repnz
addr16
lret
xchg
pop
aad
push
sbb
sub
adc
push
dec
sahf
inc
mov
cmpsb
repz
xor
in
int
or
mov
pop
mov
mov
adc
sub
xchg
and
jae
dec
push
cmp
and
out
int
cmp
cmp
pop
push
fistl
or
out
and
rcr
xchg
or
mov
int
cld
add
push
add
les
test
outsb
sub
ljmp
pop
arpl
jmp
jo
ret
loop
xchg
cmp
fists
jno
and
xchg
mov
icebp
mov
pop
ret
and
sub
rorl
ficoml
roll
into
xchg
jnp
ljmp
mov
ljmp
and
movb
mov
rcrb
xor
mov
mov
lods
in
mov
cmpb
mov
enter
add
push
dec
xor
lds
int3
into
in
in
iret
in
ficomps
cs
pop
into
cmp
sbbb
mov
xor
rclb
ja
cmp
es
push
xchg
jne
mov
and
leave
enter
lret
inc
jno
movsl
leave
andb
sbbb
jae
adc
outsb
int3
sbb
adc
jb
adc
es
add
dec
mov
adc
pop
and
inc
mov
adc
inc
add
xor
movsl
das
jne
sub
add
mov
testl
fadds
lods
paddusw
std
scas
sub
pop
push
lds
jne
pop
push
xlat
aad
cltd
adc
cmp
cmc
or
or
iret
adc
pop
dec
fisttpll
int
stos
aam
dec
ret
stos
sbb
pop
aaa
xchg
imul
insl
jns
sahf
test
add
jle
sahf
insl
cmpsl
cmp
mov
mov
xlat
mov
call
and
rcrb
pusha
out
shll
shll
xchg
mov
inc
and
jbe
xor
or
or
mov
addr16
push
sub
inc
int
popf
lcall
mov
mov
cmp
aad
pushf
std
and
cmp
sub
jmp
iret
mov
jae
int
sub
icebp
ja
sbb
mov
inc
jae
enter
test
push
dec
push
insb
adc
lds
push
shlb
fs
push
cmc
jecxz
mov
bound
ret
adc
fsub
outsl
mov
sbb
sub
sub
aam
push
ss
stc
addr16
imul
add
sarb
ss
mov
xchg
jb
shrl
mov
jecxz
mov
add
inc
js
mov
fldl
adc
mov
lea
stos
leave
push
xchg
test
mov
sbb
sbb
sbb
imul
dec
xchg
call
or
pop
xchg
imul
xchg
jmp
aad
filds
test
sbb
addl
ret
data16
cwtl
sbb
xor
cmc
pusha
adcl
inc
and
mov
aam
lcall
aad
aaa
lcall
adcl
call
pop
and
push
mov
mov
inc
cli
out
in
les
or
or
outsl
inc
fnstenv
fiaddl
pop
outsb
in
jno
mov
arpl
inc
mov
cwtl
popf
in
dec
jnp
fistps
inc
sbb
outsl
stos
in
aas
int
xlat
pop
addl
mov
fistl
dec
mov
sub
xor
fcoml
dec
test
sub
popf
xor
rorb
cmpsl
lock
add
fwait
ret
sahf
mov
cmp
xchg
iret
xor
dec
sub
jno
aaa
cwtl
fadd
or
das
jo
iret
jmp
dec
inc
cmp
cmp
adc
les
lret
xchg
iret
outsb
xor
clc
xlat
scas
dec
mov
mov
les
loop
je
jae
divl
fwait
mov
rclb
inc
test
stc
in
es
lods
into
cmp
lahf
outsl
jo
inc
sti
push
daa
add
push
lods
add
insl
sub
xor
sub
push
dec
jp
lret
inc
jne
mov
cmpsb
outsb
ss
int3
in
es
int
adc
enter
fstps
shrb
std
jmp
cmp
push
cmpsl
popf
stc
test
loope
lcall
rcrb
push
pop
inc
mov
lods
into
add
popa
sub
insb
outsl
pop
push
mov
clc
outsb
or
icebp
ljmp
shrb
mov
adc
push
mov
add
ret
jmp
imul
pop
gs
sbb
stos
idivb
mov
sub
iret
pop
sbb
push
lret
repnz
xchg
jno
shll
outsb
push
dec
xchg
or
out
popa
ja
lret
mov
arpl
movsb
cmp
pop
incl
dec
xor
push
jmp
sub
xor
adc
movsb
movl
cmp
insb
insl
es
pop
out
mov
or
or
imulb
enter
inc
sbb
or
test
cmp
stos
daa
and
jbe
cmp
out
filds
std
cmp
aaa
pop
cmp
test
sahf
or
stos
pop
rolb
ja
fcomi
dec
repz
clc
pop
adc
xchg
movb
sbb
les
int3
stos
arpl
gs
cmp
xchg
pushf
sarl
jmp
call
mov
jns
bound
mov
or
push
test
in
ljmp
aam
int3
in
or
popf
rclb
pusha
xor
ret
pusha
push
mov
fistl
in
and
out
xchg
clc
testl
rolb
pop
imul
clc
mov
clc
stos
sub
dec
aam
fistpl
psrlw
imul
sbb
fsubs
outsl
mov
scas
jle
outsb
cmp
aas
insb
aam
mov
test
repnz
ret
xor
aam
jge
pusha
mov
jno
add
scas
push
pusha
and
mov
cmp
xor
or
jl
adc
test
dec
pop
loop
imull
stc
lods
lcall
mov
mov
shll
insb
or
xchg
mov
lret
dec
pop
mov
cmp
fsubs
mov
jae
jge
nop
dec
mov
push
pop
adc
scas
pop
fisubrs
mov
xlat
mov
rol
test
aam
adc
add
repz
call
inc
lea
sbb
shll
sbb
cmc
in
inc
jb
ss
ret
cmp
jbe
insl
lds
mov
ds
jbe
repz
pop
nop
addr16
sub
mov
adc
fiaddl
adc
outsb
movsl
js
push
sub
push
mov
inc
fstpl
test
inc
fdivrl
rcr
insb
or
and
nop
mov
lret
shll
sub
mov
add
jecxz
or
aad
xchg
faddp
adc
mov
in
cmp
int
fiadds
xchg
outsl
lret
push
aaa
imul
shlb
jno
mov
and
aas
or
sbb
and
jnp
pop
mov
stc
nop
test
lcall
mov
aam
out
mov
shlb
add
frstor
in
push
aas
pop
jecxz
jns
cmp
pop
leave
inc
xchg
inc
sub
mov
lods
sahf
jae
push
test
fcmovu
lods
call
loopne
pop
out
ja
mov
sub
andl
stc
jle
lcall
dec
xor
pop
inc
nop
xor
arpl
enter
addr16
add
push
popf
and
pop
dec
call
iret
jl
pop
mov
or
mov
pop
xchg
sbbl
aad
stos
pop
test
pop
or
xchg
outsl
mov
inc
in
aaa
mov
or
fstpl
mov
mov
jno
hlt
and
fmuls
mov
aaa
sub
out
jbe
inc
movsl
push
and
sbb
dec
and
daa
lret
out
and
and
sub
fcomip
jbe
sahf
gs
repz
sub
mov
jge
inc
les
sub
leave
lea
movsl
pushf
cmp
mov
cld
mov
mov
stos
fisubl
out
push
loop
push
out
jne
aad
stos
sti
xlat
xor
inc
pop
lods
pop
xor
push
fdivrs
cmpsl
jl
lock
fadds
mov
popa
sbb
stos
and
inc
xchg
sar
cmpb
cmp
mov
in
insl
aam
mov
ljmp
clc
lea
push
and
rcl
sbb
idivb
int
cltd
fidivs
sbb
out
pop
mov
test
scas
sub
out
mov
lods
inc
xlat
aas
xchg
loope
nop
dec
call
fmull
inc
cmp
jb
push
ljmp
xchg
push
fcmovbe
xchg
pop
test
paddq
add
pop
sbb
fildll
loopne
test
ret
and
les
hlt
outsl
in
xor
pop
es
cmp
clc
dec
mov
lcall
pop
sbb
pushf
jo
pop
fwait
loop
es
hlt
jns
out
outsb
jge
mov
cs
ds
ja
cmp
mov
dec
xchg
push
xchg
pop
xor
testl
dec
fxch
mov
into
jg
pushf
ljmp
inc
jae
fs
mov
sbb
nop
pop
pop
cmp
dec
inc
xor
int3
and
cld
or
loop
and
stos
mov
dec
sbb
pop
outsl
hlt
movsb
pop
dec
jb
and
leave
mov
negl
mov
add
and
mov
cmpsb
cltd
je
mov
pop
fistpll
decl
in
dec
sub
in
incb
add
mov
mov
cmp
cmp
nop
js
adc
dec
lea
jnp
aad
jp
jnp
pop
add
sbb
add
pop
push
pop
mov
adc
bound
fwait
xor
xor
jb
inc
jmp
clc
pop
out
mov
sub
inc
xchg
or
rcrb
cmp
test
insb
adc
jp
ficompl
aam
push
std
jmp
out
testw
leave
cltd
cmp
ficomps
ret
and
push
cmpsb
clc
add
lds
cmpsl
cmp
jne
lods
mov
adc
push
xchg
dec
pushf
push
mov
inc
mov
nop
out
or
sbb
test
rorb
test
es
xor
adc
shl
aad
jmp
adc
xchg
push
enter
cmp
push
fs
scas
sbb
inc
jle
out
aad
jo
data16
jecxz
sub
shl
insl
ds
sbb
xchg
test
push
add
and
cli
xchg
push
jp
insb
xor
or
loope
out
inc
push
mov
xor
jmp
mov
jecxz
stos
or
ja
repnz
lods
xor
leave
push
fldt
sub
push
notl
gs
pop
jns
ss
push
adc
adc
js
movb
mov
data16
das
fwait
nop
dec
inc
sub
daa
mov
pop
cmpsb
lock
test
in
insl
mov
lds
aam
adc
jle
pop
pop
cmp
mov
mov
inc
cmp
ret
into
adc
out
sbbb
lahf
lods
xchg
inc
mov
leave
movsb
lea
xor
stos
repnz
out
dec
rcl
hlt
sbb
or
fadds
rclb
daa
add
and
push
lret
jo
les
adc
adc
sahf
rorb
test
jge
sub
cmp
icebp
shll
fs
jne
mov
add
aaa
lods
rorl
mov
fidivs
xchg
jno
xor
xchg
jbe
push
clc
cwtl
jns
sub
and
xor
leave
jnp
inc
xchg
bound
fadds
aam
mov
js
out
js
pop
sbb
mov
test
pop
add
ja
pop
nop
pushf
adc
repz
in
add
ja
jmp
jmp
lods
shll
jo
jp
std
pop
jg
shll
xchg
sarl
pop
dec
cld
sahf
adc
popf
in
mov
dec
xchg
rep
sar
mov
pop
shlb
or
out
mov
inc
mov
sbb
xchg
in
inc
ficoms
js
imul
pop
insb
repz
mov
push
lcall
cmc
dec
cmpb
mov
int
ljmp
inc
popf
fndisi(8087
inc
pop
cmp
jne
int3
pop
aaa
jp
cmp
dec
and
xchg
sbb
ss
adc
ljmp
pop
lcall
xchg
sahf
push
xor
cmpsb
out
stos
jae
cs
jmp
mov
adc
lcall
push
out
adcb
lods
sahf
jecxz
pop
inc
mov
or
fs
fdivrl
mov
dec
ret
mov
sub
xlat
out
adc
xchg
add
iret
adc
push
mov
push
xchg
push
loope
test
and
loopne
sbb
push
sub
divb
out
cmp
adc
orl
stos
leave
jmp
inc
subl
cmpb
and
lret
mov
xchg
lcall
aam
xchg
cltd
push
test
xor
xor
mov
sahf
inc
and
and
mov
sbb
mov
ficomps
or
out
add
fwait
and
push
push
xlat
cmp
mov
cmpsl
mulb
sti
cmpsl
out
add
fwait
mov
mov
loop
arpl
mov
sbbl
ret
pop
pushf
fucom
cmpsl
mov
pusha
cmp
std
cmp
mov
incl
mov
ljmp
sub
repnz
jmp
sti
lcall
in
sub
xor
lahf
jmp
push
hlt
out
aam
pop
mov
das
in
jno
int3
mov
sbb
mov
mov
push
gs
inc
add
decb
ss
gs
cs
outsb
sub
out
mov
pop
push
add
dec
cmp
mov
sub
js
fisubs
xchg
sub
cli
leave
jae,pt
push
int3
jnp
inc
loopne
sub
aam
mov
mov
mov
push
es
lret
pop
jg
fildll
aaa
mov
ss
imul
push
outsl
xor
dec
stos
sbb
imul
xor
ljmp
dec
mov
std
ds
add
popf
cmpsl
iret
outsl
add
jl
int3
jo
jge
cmc
cmc
test
xor
loope
mov
divl
leave
mov
in
jae
fmulp
xor
mov
push
dec
sbb
sub
push
inc
ljmp
nop
in
mov
xchg
mov
stc
dec
add
nop
inc
mov
cmp
cmp
pusha
push
mov
in
in
mov
sub
mov
inc
dec
fisttpl
mov
xlat
out
sbb
loop
iret
pop
popa
loop
pusha
dec
mov
jnp
sbb
js
sub
mov
lods
repnz
push
enter
mov
sub
inc
push
mov
push
sbb
cltd
data16
imulb
jae
push
cmpl
cld
mov
cmp
or
pop
pushf
mov
dec
cmpsl
mov
orl
mov
out
in
xor
sarb
xor
movsl
add
inc
mov
mov
cmc
pop
inc
fildll
imul
jne
or
inc
loopne
pop
clc
addl
popf
add
xchg
pop
jb
addl
fadd
adc
loop
push
cmp
and
jne
and
pop
insb
fcmovne
out
sub
jmp
fisttpl
mov
xor
add
mov
pushf
fists
sub
cltd
dec
mov
clc
push
stos
mov
xchg
mov
lcall
jne
jecxz
add
add
arpl
mov
inc
ret
stos
inc
push
sti
cwtl
les
std
xchg
inc
pop
and
inc
push
fwait
inc
pushf
hlt
push
mov
subb
sbb
fldcw
fs
divl
xor
lcall
outsl
and
push
push
cmp
iret
dec
mov
or
sub
jl
inc
das
ror
push
punpckldq
js
cmp
in
lret
add
add
repz
mov
test
push
ret
dec
xor
out
mov
and
in
js
popa
dec
mov
fildll
test
icebp
iret
cli
repnz
leave
leave
cmp
dec
pop
cmpsl
roll
inc
mov
dec
push
into
lret
call
xchg
subb
push
pop
jns
push
aaa
jae,pn
pop
push
jg
in
mov
inc
lcall
xchg
cmp
out
fwait
ds
sar
jge
lods
xchg
sahf
pop
insl
adc
ret
cmp
icebp
mov
mov
data16
pop
jmp
cs
sub
jno
in
or
sbb
arpl
xchg
pop
int
pop
lock
enter
cmpsl
neg
daa
ljmp
lcall
out
mov
aad
sub
ficoml
sub
adc
mov
jmp
inc
outsl
sbbl
into
mov
imul
mov
cs
int
sbb
scas
clc
enter
leave
inc
leave
outsl
dec
popf
sub
daa
dec
add
mov
mov
adc
int
loope
flds
cmc
test
mov
mov
fiadds
cs
lahf
add
mov
pop
cmp
outsb
mov
cmpsb
mov
adc
out
adc
jp
je
cltd
insb
mov
ss
xchg
xchg
dec
in
sub
imul
clc
sarl
testl
cltd
sub
out
xor
imul
xchg
pop
mov
orl
add
jmp
aas
in
and
mov
into
mulb
addb
jo
fstps
jno
iret
arpl
daa
dec
icebp
jbe
add
das
or
rcll
dec
mov
push
mov
cmp
sub
dec
je
lret
lahf
cmc
iret
pop
inc
xlat
or
xchg
pop
dec
in
mov
dec
sbb
and
neg
outsl
out
mov
aas
inc
mov
popf
dec
lcall
out
lds
inc
adc
cmpsb
mov
adc
jle
dec
push
ja
lds
pop
lcall
mov
xor
into
popf
out
or
xchg
and
or
push
adc
inc
inc
leave
in
scas
mov
xor
out
adc
fdiv
mov
dec
fstl
or
movsb
jnp
push
imul
mov
mov
lcall
out
lds
or
mov
gs
xchg
fstps
and
mov
faddp
lret
adc
clc
push
cmc
and
in
rcrb
push
int
ds
jns
sub
dec
sbb
aaa
and
insb
ljmp
pop
lahf
push
sbb
and
rorl
adc
mov
loop
popf
sti
shr
add
clc
jnp
pop
std
ds
push
jmp
xchg
js
mov
mov
jbe
xchg
and
mov
daa
lret
push
dec
scas
in
jbe
sub
iret
mov
adc
jnp
pop
add
mov
test
rol
add
scas
pop
out
xlat
loop
push
jbe
push
xor
movsl
jno
arpl
inc
shrb
pop
das
add
es
push
push
test
xchg
lds
xor
cmp
sbb
sub
or
mov
push
daa
rcrb
add
fmulp
loop
cli
xor
out
lock
out
or
das
mov
daa
cmpsl
insb
xchg
mov
gs
mov
icebp
adc
xchg
ss
testl
sub
insl
out
popf
add
cmp
iret
pop
je
add
xchg
mov
pop
cmp
xor
dec
daa
or
addl
shrb
dec
into
sub
idivl
popf
sbb
cmc
adc
mov
lods
sti
cwtl
sub
sub
imul
xlat
mov
inc
aam
jb
mov
xorb
xchg
stos
sub
ss
shrb
adc
jno
enter
jno
mulb
in
imul
jno
sbbl
lock
js
mov
daa
cmc
mov
jp
push
xor
sti
cli
xchg
pusha
fisttpl
jge
call
les
andb
ja
loop
mov
or
popa
push
pop
sub
mov
and
adc
push
mov
cwtl
hlt
or
sbb
sbb
pop
push
push
mov
int
mov
sbb
mov
sub
outsb
adc
popa
mov
jp
jnp
insl
stos
movsb
push
jo
inc
mov
repz
jb
into
fwait
jbe
xchg
fisttpl
cwtl
jbe
loope
cld
or
push
loope
sub
sub
fs
mov
dec
in
sbb
scas
loope
repz
lahf
jbe
mov
and
adc
xchg
mov
or
dec
jmp
loope
jno
out
ficompl
sub
ret
sbb
lahf
mov
push
xchg
imulb
jg
pop
mov
stos
repz
inc
fwait
out
pop
out
arpl
mov
or
sub
pop
xor
pop
lock
pop
mov
sub
fcoml
jg
daa
mov
pop
in
pop
ljmp
push
lds
pusha
leave
lods
mov
testl
stos
pop
mov
xor
mov
sahf
sub
sbb
mov
movsl
call
addr16
mov
in
mov
lea
dec
jbe
sbb
sti
data16
adc
cwtl
cmp
notb
and
pop
dec
xchg
daa
bound
add
in
adc
push
cmp
sbb
sub
push
inc
sbb
xchg
aad
in
test
pop
ret
in
mov
mov
dec
or
push
rclb
idiv
je
cmp
inc
cmp
push
sbbl
pop
sbbb
xchg
outsl
test
bound
je
push
int
dec
rcll
and
pop
push
jne
cmpsb
mov
ja
fwait
or
inc
and
xorl
cmpl
cmpsb
inc
pop
dec
movsb
inc
mov
jne
mov
filds
ss
push
dec
in
and
mov
dec
cmp
loop
ret
jne
ss
adc
xchg
jl
je
pop
pusha
out
das
ljmp
and
push
pop
arpl
mov
shrb
xchg
xchg
movsl
sarl
cmove
into
cltd
sbb
jp
push
sub
imulb
sbb
cmp
enter
push
unpckhps
mov
repz
xchg
inc
dec
mov
fs
cmp
xchg
push
insb
mov
imul
inc
in
lods
inc
pop
les
rolb
pop
push
jl
repz
stos
lahf
jb
xor
cmp
sbb
enter
sbb
jmp
mov
jb
ss
mov
sbb
pushf
popf
adc
dec
sbb
sub
ds
cmpsl
sbb
push
add
int
cmp
lds
aaa
dec
xchg
inc
fnop
cmp
lock
sbb
daa
mov
mov
dec
in
mov
dec
inc
leave
fnstenv
cmc
xchg
mov
or
aam
insb
icebp
test
lcall
orl
pop
in
imul
inc
cmp
stc
push
test
xor
sub
aas
push
dec
or
shlb
mov
insb
lret
pop
call
movsl
stos
sbb
fdivl
out
or
xor
int
push
int3
arpl
mov
mov
rorl
dec
test
out
orl
and
aad
sub
dec
sti
dec
aad
test
loop
test
aaa
mov
dec
jecxz
shl
lahf
and
or
mov
adc
xchg
call
dec
cmp
arpl
push
or
daa
test
pop
cmp
mov
out
lods
sbb
popa
mov
test
sahf
repz
test
add
aam
xchg
pop
jge
add
fiaddl
lock
pop
add
or
push
fisttpl
pop
test
cmp
adc
adc
daa
pop
insl
aas
cmpsb
cmp
outsb
cmp
mov
repnz
inc
jl
outsb
xchg
pop
popa
and
test
aam
xor
nop
fbstp
push
adc
dec
fwait
pusha
jmp
mov
pop
xchg
shll
jge
jmp
decl
adc
pop
inc
dec
push
aam
xor
pop
loop
push
insb
xchg
cltd
pop
mov
and
loope
xchg
stos
xor
cwtl
cmpsb
jle
mov
mov
icebp
add
jns
push
das
pushf
jns
xor
sahf
jns
xor
das
daa
pop
clc
pop
popl
outsb
jmp
mov
out
mov
fstpl
ja
subl
data16
inc
jle
sub
sub
lock
push
stos
daa
ret
mov
pop
pop
and
add
outsb
cmp
mov
sbb
xor
repz
mov
sub
lret
rorl
xchg
call
and
outsl
pushf
mulb
and
imul
outsb
outsl
sbb
adc
ret
pop
out
pop
je
jp
sarb
cmp
testb
std
mov
test
hlt
inc
or
lds
pop
insb
inc
or
and
or
rol
cwtl
mov
fidivrl
movsb
arpl
outsl
call
arpl
arpl
adc
pop
je
in
out
lods
inc
adc
cld
ss
cwtl
mov
aam
out
pop
arpl
push
loopne,pn
repnz
and
rol
and
dec
ljmp
and
mov
shl
mov
lock
fcompl
or
testl
ljmp
sbb
add
mov
clc
xorl
mov
popa
gs
inc
and
test
imull
push
cmc
aam
xchg
int3
mov
daa
clc
sub
mov
or
mov
push
jmp
loop
sub
xchg
jo
into
mov
or
jbe
dec
je
push
xor
lret
pop
mov
leave
sub
mov
jb
xchg
enter
imul
mov
fsubs
out
cmp
fidivs
and
arpl
jno
mov
icebp
mov
or
mov
cwtl
jge
xchg
mov
mov
jo
out
mov
js
out
out
movsb
cs
lods
sub
sbb
mov
std
mov
and
shlb
inc
daa
adc
xlat
xlat
inc
sahf
rcl
push
repnz
sub
inc
pop
insl
dec
lea
jno
repnz
aas
jmp
subl
testl
cmp
or
jle
xor
cltd
ficompl
pushf
subl
pop
jp
lea
cltd
and
out
cmp
inc
adc
sbb
sgdtl
int
es
jmp
mov
jno
out
out
movsb
mov
mov
add
sbb
mov
int
or
mov
push
dec
in
out
add
int
aam
int
mov
adc
pop
xchg
push
ret
into
dec
imul
or
movsb
lods
sbb
clc
add
imul
sbb
xor
inc
and
xchg
out
jo
cld
xchg
sub
ds
xchg
pop
nop
cmp
fimull
dec
rclb
xchg
jae
and
lock
sbb
cmp
and
mov
xchg
test
or
mov
mov
mov
jns
cmpl
outsb
xor
or
fsubl
sub
aaa
pop
pop
push
xor
jmp
int
fs
pop
jmp
cld
xor
out
outsb
stos
xor
mov
std
bound
das
inc
je
cmc
in
jecxz
mov
add
push
xchg
inc
or
add
inc
sbb
adc
mov
popa
jb
sub
adc
pop
pop
scas
push
sbb
mov
pop
and
adc
addl
jnp
ret
and
loopne
shll
bnd
push
fcomp
outsl
les
pop
cld
mov
lds
fsubl
cli
add
inc
nop
dec
cld
sbb
imul
pushf
ret
shlb
mov
test
int3
in
dec
les
popf
out
sbb
test
adc
repz
cmc
dec
and
sbb
adc
cltd
xor
addr16
adc
jl
test
jae
insl
cwtl
in
aam
ret
dec
mov
loop
pop
push
lock
inc
xor
std
dec
sub
test
ljmp
sahf
sub
sti
jo
lret
lcall
pop
or
add
add
jp
stos
xor
or
push
xor
xchg
std
jmp
push
and
dec
push
jge
pop
push
pop
xor
adc
lahf
iret
sahf
mov
push
test
lea
pop
push
ds
fidivs
out
xchg
adc
cmc
stos
add
and
mov
int
push
negl
es
scas
sub
arpl
and
or
add
xchg
aad
push
out
jg
jmp
fmull
push
call
test
lahf
xlat
addr16
push
jnp
clc
mov
pusha
inc
int3
int
pop
dec
cmc
fldenv
pop
push
lahf
fdivs
adc
dec
xchg
div
or
jl
mov
push
popf
cmp
add
jo
jo
xor
mov
cmp
movb
mov
mov
pop
adc
mov
push
pop
mov
push
ret
lret
push
dec
xlat
popf
inc
mov
sbb
clc
fnsave
stc
addl
pop
mov
mov
mov
jns
mov
mov
add
add
ret
push
shll
mov
adc
push
xchg
jecxz
lods
push
jbe
jbe
fwait
std
out
sbb
rcrl
adc
scas
loope
xchg
test
push
nop
mov
push
es
xchg
cmp
movsl
ja
cmp
aam
mov
xorl
push
lea
mov
jmp
cmp
aas
sbb
imul
ficomps
dec
xor
push
and
lret
pop
rol
xor
rorl
cmp
int3
xlat
mov
sub
push
inc
xchg
daa
push
and
pushf
cli
xor
insb
xchg
iret
sbb
imul
jo
incl
fdivr
inc
loopne
adc
imul
xlat
je
xchg
add
in
pop
imul
xor
out
pop
movsb
es
inc
mov
jae
aad
cmp
and
dec
ret
inc
aam
hlt
rol
imull
loope
pop
fnstenv
mov
inc
dec
pop
lods
xor
addr16
sbb
adc
push
jl
fistpl
pop
clc
inc
sbb
push
adc
lea
sub
push
mov
in
test
jge
test
mov
xchg
lods
fsubs
push
fucom
mov
sbb
call
hlt
xchg
sahf
mov
mov
mov
jg
lock
sub
lds
pop
sti
fldz
xor
js
stc
rcrl
push
cmp
out
inc
push
jecxz
pop
pop
pop
inc
sti
adc
cltd
add
mov
push
loopne
enter
lods
xchg
test
push
mov
lahf
popa
lods
cltd
ljmp
stos
mov
sbb
add
mov
and
add
lahf
cmpsb
shll
jno
les
ret
push
cmp
push
pop
and
in
xor
outsl
jle
jns
jmp
pop
adcb
mov
popa
repz
sub
jo
pop
repnz
push
cltd
sbbl
cwtl
add
mov
inc
test
sub
mov
and
fcoms
mov
jno
mov
enter
addb
adc
sbb
push
lea
pop
in
jmp
jg
popa
push
lret
dec
fsubl
andb
inc
loopne
inc
scas
andb
cltd
or
sub
aam
jl
jbe
daa
or
mov
test
ret
cmc
ret
mov
jo
xor
push
jo
ret
lcall
mov
std
or
mov
testl
lods
mov
lahf
lahf
sub
leave
andb
sub
testb
mov
lret
sub
sbbb
nop
push
scas
jb
scas
adc
mov
enter
dec
xor
insb
jnp
pop
cmp
test
jnp
enter
icebp
mov
adc
lock
ret
in
sub
jecxz
dec
rcl
mov
jmp
enter
jp
add
jg
mov
movsl
mov
mov
daa
leave
out
and
in
cmp
dec
pop
mov
mov
icebp
push
or
push
jo
cs
fcoms
les
dec
pop
ja
push
or
xchg
jne
xor
pop
sbbb
or
push
cmp
and
add
add
sarb
inc
xor
pcmpgtb
cmpb
rorl
pop
lods
lcall
sub
and
loopne
aam
add
jno
or
jle
xchg
enter
add
xor
lds
outsl
xor
push
push
test
out
aam
pop
jnp
dec
cmp
inc
mov
xor
sbb
enter
fwait
mov
scas
adc
mov
fiadds
or
mov
jo
in
repz
mov
lea
cmp
adc
inc
push
pop
pop
insb
fsubrs
fwait
cmp
loop
stos
dec
inc
xchg
out
out
pop
int
jo
sbb
pop
out
mov
data16
insl
push
lods
repz
out
scas
push
loope
mov
jbe
jp
pushf
stc
xchg
jbe
out
daa
das
pop
dec
lret
arpl
cld
sarb
daa
inc
lea
dec
adc
stos
mov
addr16
outsl
jbe
push
cmp
rorb
lock
push
repnz
fs
dec
push
add
lds
jnp
stc
paddd
xor
shrb
push
pop
insb
ret
rcll
jl
jo
pop
mov
xchg
aam
adc
sbb
xlat
nop
mov
pop
lret
jns
mov
repz
mov
fisubrs
nop
xchg
cmp
jl
daa
addr16
pop
mov
aad
mov
decl
jo
xor
aad
xor
pop
or
daa
loop
jge
mov
neg
sub
in
fsincos
mov
xchg
cmp
dec
jecxz
inc
sbb
loop
clc
cmpsb
popf
jae
mov
ret
xor
dec
dec
in
adc
jne
shrb
rcrb
pop
mov
sahf
mov
insb
imul
push
jb
rcpps
pop
or
imul
inc
in
pop
or
stos
mov
xor
arpl
cwtl
mov
mov
mov
inc
cmp
mov
xchg
xor
mov
pop
push
out
fcomp
mov
int
ljmp
out
in
add
inc
lock
outsb
jge
loope
jnp
jno
out
rcrb
hlt
cmc
mov
cmp
xchg
shlb
mov
dec
jno
cmpsb
sub
outsb
fcompl
push
dec
inc
and
mov
jbe
jle
dec
xchg
mov
loope
negl
je
mov
imul
pop
xchg
mov
and
lret
mov
xchg
push
pop
sbb
sub
xchg
mov
inc
jmp
sbb
jb
cltd
inc
xchg
sbb
xor
enter
jns
negl
cli
sub
bound
mov
jae
inc
lods
xlat
stc
aad
dec
sub
mov
shlb
pop
ljmp
pop
gs
test
cld
fnsave
dec
dec
mov
pusha
dec
shll
je
daa
jmp
jg
or
les
xor
inc
mov
push
cmc
les
popf
fxch
stos
inc
mov
cmpsl
iret
mov
cmp
negb
add
push
fidivrl
mov
or
sub
cli
cwtl
arpl
sbb
xchg
test
mov
jbe
lret
xorl
mov
test
sbb
xchg
adc
movsl
imul
call
call
lock
adc
imul
loop
jecxz
shlb
enter
sbb
incb
or
adc
sbb
pop
add
dec
push
mov
inc
push
push
cli
enter
sbb
cmp
push
mov
in
pusha
mov
xor
lods
and
mov
xchg
adc
mov
xor
sub
sub
add
pusha
subl
test
mov
stos
mov
and
bound
push
xchg
fimuls
repz
std
outsb
push
adc
push
adc
les
cmp
ljmp
mov
in
jg
push
adc
sbb
je
popa
mov
loop
fwait
lcall
lea
adc
push
jecxz
jo
or
mov
cli
pop
mov
rorb
pop
adc
xor
in
sub
jecxz
loope
push
mov
pop
in
jns
mov
cmpsb
cmp
push
pop
push
fldl
adc
jmp
iret
pop
out
icebp
or
jo
stos
dec
pop
dec
pop
adc
enter
das
aam
loop
lea
cli
xchg
mov
insb
fistps
adc
xor
jp
insb
jle
mov
pop
mov
outsb
sbb
sarl
shlb
sti
mov
lds
mov
sub
push
pop
cmp
cmpsb
cmp
les
dec
fsubr
cwtl
test
sbb
pop
sbb
jno
mov
in
mov
leave
orl
in
outsl
mov
and
sbb
loopne
dec
mov
mov
or
sbb
lahf
pop
mov
xor
sub
inc
jecxz
ret
dec
add
dec
repz
cli
mov
fldenv
cld
mov
adc
and
cmc
push
inc
pmulhuw
insl
ret
pushf
push
jns
out
push
mov
inc
stos
adc
orl
adc
xchg
clc
xchg
dec
and
adc
insb
add
fwait
pop
dec
js
mov
aam
incb
inc
or
add
lods
loope
cmp
adc
xchg
addl
dec
out
lret
xchg
dec
outsb
ljmp
pop
push
xor
and
loope
dec
or
inc
lret
pop
and
stos
dec
movsb
dec
or
cmove
or
sbb
jl
jecxz
cmp
shl
xchg
xchg
rcr
push
dec
je
movsl
xchg
subb
xor
xchg
mov
push
data16
sbb
jne
push
jge
push
cmpsb
inc
icebp
lcall
adc
push
jmp
lea
mov
shrb
repnz
loop
sub
shrl
inc
sub
aaa
xlat
outsl
push
mov
push
out
mov
xchg
jg
psrlq
mov
mov
es
cmp
mov
inc
outsb
aam
incl
mov
pop
dec
pop
push
scas
and
mov
sahf
repnz
loop
jl
pushf
sti
jle
fucom
repz
cmp
add
scas
cli
push
pop
mov
jns
in
inc
lea
cmpsl
test
aas
cmp
inc
sub
arpl
jb
repz
cmpsb
fstp
pop
xchg
or
pop
sub
jae
or
cmp
mov
jp
mov
mov
mov
xchg
popa
adc
xchg
lret
jmp
cmp
outsl
pushf
mov
scas
ret
sbb
push
and
scas
or
xchg
jno
ljmp
add
pop
mov
arpl
or
ret
mov
add
mov
push
jmp
cmp
xlat
dec
mov
stc
adc
into
push
cmpsb
mov
jle
dec
aaa
cmp
out
std
mov
sub
out
dec
in
sbb
movsb
lods
loop
xchg
mov
out
arpl
pop
ss
cmpsl
data16
lret
mov
sbb
add
push
xchg
xchg
in
dec
scas
popa
push
pmaxsw
mov
xor
stc
std
inc
and
ror
sbb
inc
sbb
cmc
cmpl
test
imul
adc
roll
adc
pop
push
cmp
pop
outsl
es
and
xor
mov
dec
jge
or
sbb
cmp
out
push
jno
sub
das
jmp
fimull
ret
aas
lret
xchg
out
mov
add
or
sub
into
xor
jnp
pop
add
push
fwait
push
sahf
dec
adc
and
testb
mov
cmp
xlat
daa
sub
loop
sub
jne
loopne
gs
xor
jnp
add
or
jbe
rcrl
adc
fwait
add
xchg
inc
ret
daa
push
xchg
pop
push
or
xchg
pop
xchg
or
and
mov
xlat
fwait
insb
enter
imul
lock
fcoms
out
lahf
mov
pop
adc
pop
dec
leave
adc
ficoml
lods
lcall
xchg
add
xchg
mov
xchg
leave
es
fisubrl
mov
inc
jns
sbb
stos
add
lods
lcall
lods
shll
ja
sbb
mov
push
pop
lahf
or
dec
ds
sub
ja
inc
outsl
in
loope
add
jecxz
int
imul
ss
mov
add
cmp
dec
adc
or
mov
fadds
push
sahf
dec
fmul
sahf
std
decl
jo
dec
pop
jg
xacquire
frndint
mov
fstpl
mov
jmp
imul
pop
dec
fidivrl
adc
pop
imul
and
jbe
dec
mov
pop
or
adc
lret
sti
arpl
push
scas
pop
in
push
inc
push
jnp
orl
int
daa
je
loop
mov
mov
xor
orl
clc
cmp
bound
push
push
js
in
push
pushf
dec
xchg
movl
push
scas
in
sub
add
ljmp
ja
mov
hlt
cli
icebp
mov
jmp
lea
aam
sub
repz
popf
cmp
mov
xchg
push
xchg
lds
in
in
jo
or
xlat
clc
and
aaa
mov
sub
jecxz
lock
out
mov
xor
inc
cmc
imul
mov
mov
in
add
pop
movsb
pop
out
fmul
lcall
dec
cmp
fdivrl
and
sbb
mov
jp
mov
or
and
fbstp
push
push
dec
pop
cmp
adc
sub
in
arpl
cmc
xchg
cltd
dec
and
iret
cmpsl
mov
adc
mov
adc
sahf
cmp
das
bound
stc
arpl
mov
loopne
pusha
adcb
sub
les
aaa
add
fildll
pop
sub
sbb
pop
arpl
ficoms
sbb
std
sti
dec
int
push
mov
xchg
idivl
test
dec
scas
imul
and
mov
xchg
divl
jo
in
test
loope
imul
out
sbb
fistpl
ret
sarb
adc
mov
in
and
std
xchg
jb
push
pop
call
ret
fcoml
push
sbb
mov
dec
push
jmp
lcall
outsl
in
popa
pop
ret
jl
insb
ret
mov
lea
and
add
orb
pop
popa
in
sub
xchg
cmp
and
xchg
cmp
jge
dec
cwtl
scas
jnp
and
pop
jl
lret
js
push
out
mov
and
lret
std
std
scas
gs
push
leave
imul
jo
jne
and
iret
insl
sub
cmp
mov
daa
dec
movsl
sbb
mov
std
loop
idivl
hlt
les
lods
or
and
dec
inc
or
lret
mov
push
aas
jo
push
xor
inc
lea
add
adc
sbb
jge
xor
mov
pusha
outsb
pusha
ljmp
divps
mov
push
dec
dec
inc
dec
bound
inc
sbb
jle
ret
pushf
push
mov
je
cwtl
mov
ret
fnstcw
data16
pop
shrb
lods
imul
lret
cmp
push
in
sub
rolb
mov
notl
jge
pop
push
testl
push
push
sub
into
sarb
mov
jg
dec
mov
aam
aaa
cmp
int
push
clc
cmp
fistl
dec
loop
repz
outsb
push
std
leave
mov
and
cmc
adc
xchg
scas
mov
or
add
mov
out
inc
and
sub
and
and
ljmp
cmp
mov
sub
outsb
shl
into
push
sarl
add
enter
jbe
jns
cmp
xchg
dec
cmp
pop
push
mov
loop
addr16
xchg
loopne
inc
scas
push
sub
nop
mov
pop
in
push
sbb
test
or
xor
cmp
mov
shll
aad
mov
inc
push
mov
and
adc
cmp
xor
inc
aad
push
push
in
sub
cmp
gs
movsl
clflush
mov
das
mov
icebp
lods
xchg
pop
fsubp
or
imul
test
xor
fdivs
sub
lahf
pop
fmuls
adc
dec
adc
testb
lea
insl
dec
xchg
sarb
sub
sbbb
out
in
add
dec
xor
addr16
es
mov
test
icebp
xchg
cld
xchg
xchg
addr16
push
in
leave
fwait
cmp
xchg
stc
xchg
mov
ret
fldt
pop
mov
pop
in
xchg
sahf
pop
movsl
mov
jbe
aas
add
fdivrl
dec
sub
sub
sub
add
ret
jo
mov
mov
clc
insl
pop
pusha
mov
or
jecxz
mov
mov
pop
pop
and
push
cmc
mov
and
jnp
std
cmp
mov
jnp
sahf
push
add
nop
xchg
mov
test
add
inc
add
push
xchg
insb
nop
pop
testl
gs
mov
addr16
push
and
sub
push
mov
jp,pt
subl
shlb
icebp
and
cltd
xor
outsb
pop
inc
and
mov
xor
imul
dec
sbb
clc
jo
cmpsl
adc
xchg
jecxz
imull
insl
pop
mov
out
sbb
jns
push
or
or
jecxz
das
lock
pop
mov
add
xor
push
fs
push
gs
shlb
clc
ja
pop
inc
ficoml
lods
sbb
jne
push
or
xor
in
inc
ret
scas
jge
xchg
mov
add
mov
or
movsl
ds
pop
js
fistpll
xchg
in
js
or
rcll
outsl
out
mov
cmc
sahf
xchg
call
sub
pushf
xor
mov
or
rcrl
mov
fwait
xchg
loop
movsl
movsb
lods
jb
popa
cltd
push
adc
lods
sbb
pop
sub
dec
or
mov
jno
outsb
out
in
sbb
dec
pop
neg
xchg
mov
sbb
or
lahf
mov
mov
cld
mov
and
clc
mov
xchg
xchg
or
daa
pop
push
inc
jnp
cli
test
popf
fmuls
fcmovnbe
cmc
inc
sbb
int3
iret
cmc
imul
and
les
cwtl
mov
cmp
rcrb
xor
jbe
dec
add
mov
cmp
addl
shrb
adc
adc
repnz
loopne
imul
movsl
dec
insb
dec
adc
xchg
fiadds
sbb
stos
xchg
scas
sti
cmp
lcall
add
ss
stos
cmc
inc
mov
mov
dec
fsub
xor
pusha
clc
daa
pop
mov
and
cwtl
push
lods
jle
out
cmc
cmp
dec
mov
jb
xchg
push
jmp
lahf
popf
dec
sbb
subb
ds
inc
ss
or
cs
cwtl
jl
lods
adc
push
add
or
leave
ffree
fsubrs
xor
inc
stos
flds
repz
data16
mov
xor
mov
sub
cmp
lock
and
or
xor
sti
mov
cmpsl
mov
cmp
xor
jns
aaa
in
lods
iret
arpl
jp
and
sub
mov
jb
dec
out
xor
inc
cmpsb
sub
out
add
call
pop
mov
push
insb
movsl
ss
xchg
lahf
and
xor
insb
ja
out
xor
sub
jb
movsl
pop
aad
mov
push
jo
or
mov
inc
aam
ja
adc
fidivrl
lcall
jmp
push
mov
daa
rcr
or
adc
jmp
lock
or
repz
clc
jg
xchg
adc
ret
stc
xor
cmc
sub
sub
sarb
call
std
mov
mov
psrad
loopne
adc
add
dec
scas
sbb
aaa
and
jg
mov
push
mov
xchg
lods
pop
mov
adc
lahf
dec
xchg
adc
mov
inc
and
js
jmp
cmp
jecxz
push
int3
or
imul
jmp
push
or
pop
sbb
mov
gs
sub
adc
cmpsl
cmp
push
insl
loopne
ss
sbbl
cmp
mov
push
cmpsl
neg
jo
xor
xchg
lret
fcoml
mov
aam
pop
sub
cmp
das
in
stc
or
addr16
int
mov
popa
ds
and
pop
call
insb
dec
xchg
and
xchg
cmp
cltd
push
dec
sar
daa
shll
scas
sub
push
push
jae
xchg
xchg
popf
pop
cltd
mov
fisttps
xchg
xor
fisttpl
mov
fildll
sbb
or
xchg
lods
sti
shl
loop
aaa
ret
xor
push
xor
push
mov
aad
fs
movsl
xorl
stc
xchg
mov
dec
cmp
sbb
into
jae
fistpl
test
mov
mov
pop
pop
mov
das
mov
lret
cli
ret
pusha
mov
dec
xor
bound
sub
xchg
mov
add
jbe
adc
ss
lcall
jns
shll
mov
scas
ljmp
xchg
and
ja
cltd
or
inc
inc
cmp
in
inc
lret
pop
fildll
mov
aas
jmp
outsb
inc
mov
fsubrp
xchg
xchg
or
shr
jle
push
add
fcom
rcrb
mov
jp
inc
stos
scas
sub
shll
mov
test
lock
leave
mov
pop
dec
cmp
mov
mull
std
ja
sti
or
lds
es
shll
mov
imul
pop
and
jbe
mov
or
inc
jbe
cli
jo
mov
popf
xchg
out
push
ja
fs
xlat
dec
cmp
repz
jns
xchg
jne
cli
mov
xchg
cld
mov
daa
jns
inc
loop
pushf
inc
faddl
and
rcll
adc
sbb
adc
mov
lods
fildll
loopne
mov
and
popf
call
and
repnz
add
inc
shl
or
das
enter
lea
push
mov
insb
stc
sahf
scas
jle
adc
inc
mov
sahf
mov
out
sti
lret
popa
adc
cltd
outsl
jno
bswap
outsl
pushf
fimuls
push
add
mov
dec
pop
xchg
repz
inc
rorb
scas
and
pop
sahf
je
lock
in
xor
stos
fisttpl
daa
xchg
pop
cmpl
mov
pop
lret
inc
push
ss
mov
daa
mov
into
inc
xorl
nop
hlt
lock
xor
stos
pushl
xor
mov
lods
lea
adc
xor
iret
stc
push
push
fistps
fcmovnbe
cmp
and
add
push
scas
pop
push
mov
daa
test
jle
sar
jge
arpl
movsl
leave
adc
adc
outsb
adc
stc
xchg
test
sbb
in
adc
gs
insl
mov
pop
insb
loope
popl
adc
mov
sbb
adc
jno
sarb
or
xchg
enter
aaa
stos
pop
sub
add
or
and
add
xchg
add
inc
movsb
mov
addr16
lret
fucomp
inc
lea
movsb
push
cmpsb
push
xchg
and
push
push
stos
lret
cwtl
sbb
pop
in
jb
rol
mov
iret
in
sbb
xchg
push
in
push
fcoml
cmpsb
roll
insb
inc
idivl
test
sub
shlb
pop
dec
adc
emms
mov
add
mov
pop
imul
mov
je
ds
bsr
mov
rcrl
movsb
mov
add
cmc
icebp
ss
cmp
push
mov
inc
xchg
ja
inc
pusha
jecxz
ret
lock
jmp
repz
jne
xchg
jb
jns
mov
push
push
rorb
sub
inc
xchg
repz
lods
sub
adc
repz
push
andb
or
adcl
lock
cmc
outsb
and
int
or
hlt
xor
xchg
push
jb
jno
mov
adc
mov
repnz
clc
fstpt
rolb
xchg
jp
adc
pop
das
test
mov
mov
dec
insb
jo
pop
mov
inc
inc
cmpsl
loop
adc
inc
ss
inc
rorl
stc
xor
inc
and
xchg
pop
push
cmp
pop
add
cli
clc
fld
jb
xchg
addl
jne
in
pop
inc
cmp
das
sbb
fnstenv
add
inc
add
or
xchg
dec
jmp
cmc
jae
push
pop
jmp
xchg
sbb
fiaddl
cli
daa
stos
pop
mov
dec
stos
scas
cld
push
push
dec
jbe,pn
inc
mov
shll
jmp
xchg
psllq
xor
inc
mov
repz
pop
sub
jle
data16
std
imul
stos
call
pop
mov
clc
stos
inc
mov
cmpsl
jg
fistpl
lcall
sub
lods
jns
sahf
fiaddl
cli
push
lcall
mov
jecxz
push
add
stos
and
push
xchg
sub
mov
push
shrl
stos
dec
das
cmpsb
jbe
scas
cmp
and
dec
lahf
popf
icebp
jae
cmp
in
pop
jmp
cli
es
mov
mov
cmpsb
add
and
sbb
sub
leave
mov
movsb
adc
jb
sbb
ja
insw
xor
loopne
lret
or
pop
lock
test
jmp
outsb
xchg
cmp
xor
fst
in
sub
pop
mov
aam
add
vpunpcklqdq
jmp
aam
ds
popf
std
hlt
mov
aaa
adc
sbb
rcrl
iret
out
push
cwtl
pop
mov
jmp
push
stc
sti
insl
xchg
daa
test
sub
lods
pop
ret
xchg
sbb
cmp
das
cmp
iret
idivb
test
pop
cltd
ffree
mov
popf
loop
mov
ds
xor
rcrl
mov
loopne
pop
or
test
adc
mov
shll
in
sub
es
out
push
sbb
dec
xchg
in
scas
add
lret
push
int3
add
outsb
pop
sar
out
cmp
sub
cwtl
mov
inc
out
xchg
loope
and
mov
xor
test
inc
sub
in
xor
les
xchg
mov
xor
imul
add
push
cmp
fs
cmp
jge
dec
mov
testl
add
gs
xor
addr16
mov
fiadds
pop
inc
jbe
sti
jne
lods
div
lods
mov
adc
or
test
mov
je
pop
adc
andb
jp
sub
scas
int
push
xchg
pop
pop
stc
xor
dec
dec
das
daa
push
xlat
pop
ja
jecxz
shlb
cwtl
rorb
scas
js
inc
lds
sub
dec
inc
shl
or
jb
bound
out
or
adc
cltd
pop
pop
cmp
inc
dec
dec
cs
fildll
jmp
inc
loope
out
lea
pop
pop
jl
sti
pop
fsts
fsubl
jmp
das
cltd
imul
jg
icebp
sbb
gs
cs
pop
cmpsl
pop
enter
add
out
notl
sub
xchg
mov
xchg
test
pop
mov
push
pusha
andl
lods
xor
mov
in
ret
jnp
lock
or
jne
inc
sub
mov
cwtl
js
or
adc
jp
push
mov
movsl
push
or
jno
fsts
xchg
into
push
pop
or
adc
dec
sub
aas
ja
mov
mov
mov
stos
bnd
cmc
rcll
xor
ss
mov
je
xchg
add
loopne
lea
rorb
call
and
pop
mov
xchg
jl
pop
cli
sub
ja
divb
data16
cld
fnstcw
addr16
xor
mov
idivl
testb
ja
inc
or
push
outsb
pop
dec
xor
pop
mov
das
jmp
mov
and
repnz
or
cwtl
shll
jl
inc
jne
pusha
clc
jo
movsl
jl
cmpb
int3
aaa
adc
jnp
out
cmpsb
xchg
bound
pop
jmp
popf
mov
pop
popa
nop
mov
leave
cmp
dec
pop
es
outsl
loopne
dec
mov
cmp
dec
inc
mov
int
push
test
sub
setge
scas
adc
lds
dec
mov
lcall
aad
popa
rorl
cwtl
jmp
mov
and
mov
movsb
or
sub
and
aaa
ret
sbb
add
decb
scas
or
xor
and
sub
dec
pushf
pop
xor
shlb
adc
stos
lahf
scas
inc
mov
nop
sub
jno
inc
mov
mov
mov
enter
inc
cs
adc
xchg
add
mov
hlt
enter
xor
mov
inc
fstpl
aam
imul
ret
psrad
popa
xor
inc
push
fadd
jae
or
jns
or
add
ret
mov
pop
sub
xor
jne
test
inc
insl
xlat
shrb
les
jbe
mov
inc
xchg
push
mov
push
mov
inc
sbb
jns
jb
or
out
in
std
dec
pop
cld
mov
adc
out
adc
popf
cmpsl
test
repz
or
sarb
jmp
mov
negb
shl
mov
xor
in
adc
pop
inc
lret
cwtl
adc
pop
cs
sbbb
mov
inc
sub
dec
add
fs
cwtl
incl
popa
test
mov
sub
push
jne,pn
cmp
das
cmp
push
iret
push
and
mov
lahf
into
aad
testb
dec
mov
adc
inc
in
xchg
dec
jle
lock
mov
mov
jb
or
in
imulb
repnz
loopne
add
mov
pop
stc
cmp
fnstsw
pop
dec
out
loopne
test
mov
das
cmp
data16
sub
test
repnz
ret
mov
out
push
imulb
sub
jle
pusha
jg
dec
mov
inc
clc
fucomp
and
sar
ljmp
cmpsb
sbb
inc
movsb
ja
in
jns
sbb
loope
les
js
xchg
adc
lcall
jecxz
andl
cmp
mov
cltd
mov
jb
push
jmp
clc
or
addr16
inc
mov
ret
mov
dec
inc
add
mov
dec
es
repnz
mov
lret
divl
mov
and
sbb
xchg
imul
dec
scas
cltd
fcomip
test
mov
mov
es
sarl
mov
in
mov
insb
loope
in
push
adc
and
lret
add
cmp
int
cmpsb
add
mov
call
sbb
mov
fdivrp
sti
and
fcomps
dec
pop
push
jmp
xchg
and
flds
lds
and
jns,pt
es
roll
adc
push
pusha
add
lods
mov
ficompl
jb
sti
mov
leave
dec
inc
adc
jbe
in
mov
insb
mov
xchg
sbb
xor
and
incb
int
add
ret
es
push
lea
fsubs
mov
push
or
mov
push
mov
xchg
mov
sbb
rcrl
pop
sbb
mov
and
add
in
in
sbb
into
xchg
cmp
jae
xor
push
adc
sub
mov
lods
ret
pop
adcb
jl
dec
test
movsb
push
xchg
jne
scas
jne
test
dec
pop
inc
in
xchg
mov
cmp
nop
sbb
cmpsl
cltd
add
and
fcompl
sbb
pop
cmp
roll
mov
cmp
pop
sbb
addr16
mov
daa
add
shrl
cmp
mov
xchg
call
xchg
out
adc
out
mov
mov
leave
sbb
flds
fs
fdivrp
add
mov
aas
mov
jno
cmp
in
pop
jne
cwtl
adc
pushf
fs
int
adc
popf
ret
xor
mov
lret
fstp
into
dec
cmp
sahf
fcmovu
sti
add
pop
cli
add
test
mov
in
xchg
or
ljmp
mov
fbld
push
push
sbb
sbb
fdivrp
push
rcrb
scas
jae
adcb
mov
in
js
push
outsb
dec
xchg
sbb
dec
gs
fcoml
test
cmpsl
rep
or
rolb
dec
cltd
cltd
and
inc
jecxz
insb
push
mov
mov
rclb
ret
or
xor
sub
scas
out
add
pop
add
xchg
add
arpl
mov
pop
pop
sub
add
jns
add
xor
jmp
mul
inc
out
cli
and
pop
out
or
aas
clc
mov
cmp
ja
mov
enter
hlt
mov
jmp
stos
dec
or
movsb
sahf
push
add
cmpsl
ja
ss
dec
outsl
cmpsl
aad
mov
rorl
dec
stmxcsr
mov
es
int3
aaa
ljmp
inc
adc
add
cmp
pusha
pop
xlat
xchg
cli
cwtl
xchg
xor
sbb
enter
das
imul
pop
mov
mov
mov
fst
mov
aam
int
ja
cmpsb
mov
scas
lea
mov
subl
hlt
jecxz
icebp
xor
outsl
test
arpl
pushl
push
test
sub
mov
push
mov
aam
mov
sbb
sub
lret
mov
loope
pop
sarb
jns
or
stos
jmp
mov
pop
dec
pop
adc
mov
sti
aaa
jo
add
test
clc
cmp
test
lods
sbb
cmovp
pop
xchg
adc
aad
lds
outsb
push
aas
mov
xchg
jnp
and
mov
inc
mov
ljmp
rcrb
xchg
lret
sub
mov
je
outsb
aas
lret
lods
push
enter
cmp
lahf
push
xor
push
add
repz
dec
cs
jbe
addr16
add
stos
das
lea
test
inc
push
ja
in
jmp
xlat
sub
dec
pushf
jno
sub
notl
int
lret
and
inc
push
adc
cmp
mov
out
call
pop
or
loop
pusha
je
inc
dec
imul
xchg
and
rcrl
cmpsl
push
xor
pop
sub
lods
arpl
xchg
inc
push
add
push
push
test
sahf
rolb
dec
push
fdivrs
xor
das
subb
fsubl
std
push
and
rorl
pop
inc
imul
std
in
and
popf
ret
idivb
and
mov
and
sar
pop
dec
or
push
or
aaa
mov
inc
arpl
push
mov
mov
fsubrp
adc
jp
jg
xchg
dec
ljmp
xchg
sbb
lret
into
add
outsl
push
je
sbbl
and
or
xor
or
sub
push
movsb
ja
icebp
inc
xchg
nop
mov
inc
jge
insb
test
popa
jl
mov
sbb
fcomps
ret
xchg
js
push
mov
sti
inc
pop
lahf
pop
inc
lea
pop
cmp
test
and
std
jge
or
ljmp
inc
pop
cmpsl
xor
push
insb
mov
incl
inc
mov
jnp
iret
out
mov
adc
fsubs
sub
into
arpl
push
push
and
jg
pop
and
shlb
fwait
lret
push
mov
aam
xor
fcompl
mov
sbb
mov
adc
ja
imul
aaa
addl
sub
mov
inc
testb
loope
cwtl
xchg
inc
aas
jp
dec
jne
data16
cld
mov
repnz
das
pop
jmp
inc
notb
cli
dec
std
lods
xchg
push
mov
or
popf
addb
leave
clc
addr16
or
mov
or
add
pop
test
insb
push
push
fdivr
fdivs
out
scas
dec
imul
adc
xchg
pop
sub
divps
cmp
push
lock
cmp
fisttps
imul
movb
xchg
mov
sbbl
int
loop
jl
fs
ret
popa
pusha
ror
mov
adc
xor
inc
cmp
pop
dec
xchg
rorb
push
xchg
xor
iret
mov
push
sub
push
fisttpl
pop
cmp
xor
out
mov
cmp
test
fcom
jnp
or
lret
mov
subb
nop
shrl
mov
pushf
jmp
adc
xor
cld
in
jecxz
adc
aad
pop
xor
sahf
test
mov
and
imul
sbb
push
jl
shlb
fimuls
pop
loopne
adc
mul
or
mov
cs
jmp
sbb
mov
fldenv
mov
or
data16
or
std
push
pop
sub
cmpsb
xor
push
ljmp
dec
lret
ds
jae
lods
stos
repz
dec
int
inc
repnz
out
or
sub
adc
xor
loop
scas
outsb
xchg
mulb
pop
popf
in
xor
test
ficomps
cltd
test
leave
xchg
add
sub
or
sub
pusha
inc
xchg
sbb
xor
lock
jmp
je
int3
and
dec
or
mov
scas
enter
loopne
xlat
cld
in
jns
test
cs
sti
sahf
in
into
push
push
cwtl
jne
pop
inc
mov
imul
and
cltd
cld
dec
mov
out
dec
fwait
jns
mov
es
int
cmpps
pop
idivb
loopne
jae
or
jo
or
out
pop
jne
add
push
js
dec
push
sti
out
dec
int3
xor
es
in
lahf
xchg
jg
or
rcll
sub
fildll
scas
fdivrl
mov
aam
gs
std
add
and
int
cs
pusha
mov
les
imul
jae
jne,pn
mov
popa
pop
adc
jns
lahf
mov
fsts
imul
mov
jmp
sub
cltd
xchg
sbb
sub
sub
xchg
enter
xchg
sbb
pop
mov
test
sub
mov
mov
outsl
outsb
ret
mov
rcrb
or
in
cmp
jns
aad
pop
push
jo
addr16
in
mov
jge
sub
inc
test
xchg
add
in
jo
mov
adc
addr16
xor
xlat
and
and
cmp
in
lret
js
adc
shr
inc
dec
xlat
aas
xor
adc
add
xor
sbb
les
cmp
add
pop
sub
push
scas
out
inc
in
pop
in
inc
lret
or
mov
repz
xchg
stc
push
and
call
fsubrl
sbb
sarb
ss
push
jne
test
jne
jecxz
test
in
lea
xchg
mov
xorl
pop
sub
sub
sub
in
dec
inc
cltd
sub
fcmovnb
xchg
leave
lret
pop
hlt
sub
sbb
jmp
xor
xchg
into
mov
jmp
mov
xchg
xor
or
lea
and
arpl
cmp
insb
mov
dec
sub
inc
adc
inc
jmp
cli
mov
push
xchg
pop
movsb
orb
test
cmpsl
cmp
xchg
pop
cmpsl
inc
xor
les
sub
lds
add
test
push
or
aad
push
xor
and
in
xchg
lahf
jle
and
mov
sbb
pop
divb
dec
sbb
and
xchg
adc
in
dec
or
or
stos
adc
daa
fcoms
outsb
mov
nop
cwtl
and
dec
and
aas
outsl
icebp
fimuls
and
inc
mov
das
sub
cmp
xor
mov
test
mov
popf
mov
sbb
divl
jecxz
std
aad
jae
xchg
push
fs
shll
sub
in
pop
push
mov
scas
fsubp
test
mov
mov
call
ljmp
push
sub
ffreep
repz
std
mov
adc
or
mov
push
ret
nop
mov
into
lods
or
add
jl
jp
xchg
insl
imul
dec
mov
mov
jne
sbb
pop
sbb
inc
scas
pop
lahf
or
idivl
xorl
js
popa
fidivl
dec
xor
shll
insb
xchg
repz
sbb
mov
xchg
leave
jb
aad
es
in
repnz
ljmp
push
ss
in
sarb
shld
insl
in
cmpsb
andb
xchg
jbe
sub
cld
inc
mov
pushf
aad
sahf
test
mov
stos
enter
jo
fistpl
jb
or
xlat
mov
iret
inc
pop
or
pop
fwait
pop
sbb
xor
enter
push
jmp
jne
ljmp
hlt
xor
push
jg
cmp
je
mov
dec
cwtd
push
push
push
or
out
sbb
sti
mov
jnp
int
fldt
cmpsl
xor
lods
outsl
out
xchg
lahf
arpl
fdiv
pushf
xor
decb
mov
pop
fmulp
push
xchg
mov
cmp
imul
sbb
addr16
vfmsub231ps
inc
cltd
imul
pop
arpl
aad
mov
mov
dec
cmp
mov
lods
push
popf
fcomps
adc
and
pop
test
dec
cmp
mov
movups
jno
pusha
mov
hlt
mov
jo
jmp
lcall
dec
int3
rolb
mov
push
in
leave
iret
stos
pop
and
call
adc
adc
repnz
xor
mov
cmp
xchg
out
insb
sbb
mov
xor
mov
lods
pop
mov
mov
mov
xchg
rcrl
cmp
imul
in
dec
shlb
mov
or
loopne
xor
xor
popa
leave
or
inc
jne
mov
jl
cmp
jo
add
adc
inc
xchg
inc
push
xor
or
cwtl
popf
cli
mov
outsl
fs
pop
sub
lcall
and
mov
cmpsl
or
sti
mov
xchg
xchg
sub
lret
xor
iret
std
test
repz
cmp
gs
int3
pop
cmc
jae
xchg
jle
xchg
or
mov
addr16
aam
dec
stos
loope
faddl
rol
idivl
inc
outsl
or
dec
jo
mov
leave
pop
mov
ficoms
or
shrb
sub
dec
mov
dec
mov
cwtl
sub
imul
push
pop
aaa
cmpsl
bound
fsubrl
mov
pop
out
adc
ds
jle,pn
pop
imulb
jbe
xorb
xchg
insl
xchg
mov
mov
pushl
iret
inc
out
movsb
xchg
iret
cmp
xchg
ret
js
xor
mov
fmull
sub
aam
not
cmp
movsl
mov
in
xchg
dec
inc
fnstcw
clc
and
push
lds
adc
stos
xorl
bound
cmp
int3
inc
out
in
push
and
pop
scas
sub
iret
inc
sahf
sub
add
fimuls
or
mov
das
scas
cmc
jp
sti
jne
mov
add
scas
ret
mov
fdivp
sahf
mov
cltd
pop
orl
sub
xchg
xor
cwtl
mov
xor
adc
enter
mov
stos
mov
test
pop
add
test
and
cs
jnp
dec
push
aad
xor
xchg
inc
inc
push
mov
movsl
hlt
sbb
sub
into
loope
mov
fbld
jno
cld
dec
adc
inc
lret
sarb
dec
xchg
dec
xor
mov
push
or
cs
and
dec
or
aaa
add
lods
dec
fsubrp
mov
jns
or
inc
and
cmpsl
adc
stos
cmpb
cmp
xchg
push
les
adc
idivb
ss
fistl
inc
sub
jno
cmc
not
sbb
faddl
iret
push
jbe
inc
xchg
mov
pcmpeqw
lret
xchg
mov
fsubs
into
mov
out
stos
shlb
and
mov
jl
mov
pop
push
xor
adc
ret
xchg
cmp
insb
inc
stos
popf
addr16
stos
pop
sub
fimull
dec
call
addl
pop
cmp
aam
jecxz
imul
rcr
mov
jnp
xlat
mov
adc
cmpsl
mov
pop
mov
loop
or
scas
mov
sbb
push
int3
xchg
fiaddl
daa
xchg
jecxz
in
jne
jg
or
cmc
sub
mov
mov
lret
push
xchg
fcoms
push
ret
es
lods
jmp
or
pop
pop
xlat
test
aam
mov
mov
sub
ljmp
xor
bound
and
aas
shlb
popf
xchg
push
xchg
fcoml
rcrl
bswap
shlb
push
jb
andl
mov
fadds
aaa
mov
dec
push
cmpsb
mov
dec
int3
xlat
jge
and
sbb
mov
cli
mov
xchg
or
sbb
lret
lock
outsb
jecxz
pusha
shlb
mov
loope
gs
arpl
xchg
push
jne
mov
aaa
mov
pop
andl
xchg
xor
bound
stos
dec
jle
in
pop
mov
cmp
pushl
pop
pop
xor
das
aam
dec
jns
cmp
out
mov
test
sub
sbb
test
jno
mov
jmp
fdivrs
outsl
xchg
jbe
inc
lahf
jae
push
cmc
adc
push
lods
mov
fisubs
or
gs
dec
data16
push
xchg
cmp
add
aad
inc
fidivl
flds
or
pop
fisttpll
mov
fwait
dec
gs
rorl
inc
sbb
or
add
pop
insb
pop
adc
test
add
shl
hlt
pop
arpl
mov
cmp
sbb
ret
stc
push
xchg
cli
fstpl
or
fdivrs
lods
fimuls
mov
or
mov
out
sbb
push
inc
and
imul
xor
cmp
jae
push
orb
out
ss
arpl
mov
dec
sbb
mov
mov
fs
inc
in
in
std
adc
mov
insb
sarl
adc
jns
nop
fcmovnu
mov
and
jp
aam
mov
fidivrl
mov
add
lahf
aas
cmpsb
jg
or
imul
dec
cmpsb
movsl
in
mov
push
xorl
inc
jo
and
flds
and
adc
clc
jle
movsl
xchg
gs
and
mov
add
adc
push
mov
arpl
imul
in
aam
subl
jae
movsl
loop
jmp
adc
jb
pusha
xor
les
mov
mov
push
fildll
mov
sbb
test
rorl
mov
jp
orl
popf
adc
ficoml
dec
mov
cltd
xor
cmpsb
dec
sbb
ss
sbb
cmpb
jbe
fstpl
andb
mov
pop
scas
mov
push
mov
mov
pop
ds
pop
pop
push
jge
pop
bound
dec
loopne
push
sub
dec
fcmovne
in
les
inc
sub
int
mov
lea
jmp
mov
mov
mov
jl
mov
pop
cmp
cs
or
aam
mov
dec
adc
fisubl
mov
and
stos
outsb
jmp
push
adc
out
sbb
shlb
jno
mov
mov
mov
addr16
mov
je
inc
int
bnd
inc
cmc
stc
dec
repz
aaa
sbb
or
es
push
and
addl
pop
pop
les
movsl
out
adc
cmc
pop
stos
rcll
add
icebp
insl
jmp
movsb
sbb
mov
and
fcoms
test
loop
mov
inc
or
mov
push
enter
repz
xor
sub
jl
andb
push
adc
mov
pushaw
fs
ficomps
in
out
cmp
popf
fcmovb
cmc
cmp
sub
ds
stc
mov
in
in
scas
adc
lcall
cmp
je
cltd
and
xchg
cltd
lahf
incb
jp
adc
shr
fimull
mov
ret
pop
sbb
aad
xchg
adc
pushf
aaa
add
push
and
inc
add
add
add
mov
push
test
adc
push
ja
xor
sub
add
mov
mov
push
push
push
outsb
int3
andl
clc
mov
sbb
adc
repz
lcall
pop
push
mov
or
dec
mov
in
fldl
sub
sub
mov
adc
icebp
test
idivl
push
jo
xor
mov
outsb
mov
int3
mov
mov
mov
inc
mov
push
mov
and
bound
ja
jl
push
jecxz
lods
aad
cmp
and
cmp
sahf
mov
inc
stc
sbbl
mov
dec
cmp
std
sub
cmp
mov
or
test
icebp
sbb
or
outsl
test
fwait
out
in
movsl
add
mov
pusha
insb
xlat
xorb
fstl
add
cmpsb
dec
or
mov
lcall
mov
mov
mov
jecxz
pop
cmp
scas
imul
sbb
sbb
dec
push
cmp
cmp
mov
inc
sbb
aam
push
daa
mov
dec
or
adc
mov
clc
shr
and
repz
gs
sti
or
adc
mov
lods
push
xor
push
jge
fucomip
push
xchg
xchg
mov
adc
cmpsb
add
std
push
aas
pushf
mov
pop
out
mov
xor
arpl
lahf
je
andb
mov
cmp
jecxz
sti
push
add
and
imul
ret
mov
test
and
lcall
and
push
push
cmp
clc
mov
add
pop
data16
fcomps
scas
cmp
push
fcos
xor
insb
inc
push
mov
daa
xlat
jns
movsl
cmp
and
outsb
inc
push
xchg
into
jmp
mov
outsl
or
loopne
outsl
inc
inc
xchg
sub
cwtl
xchg
inc
xchg
lret
mov
dec
fcomps
mov
repz
sub
xchg
pop
stos
incl
and
movsl
sub
jb
out
adc
jmp
gs
mov
inc
push
adc
xchg
fistps
sub
jl
bound
lock
rcrl
dec
or
fs
fiadds
bnd
iret
xchg
xchg
fiadds
es
xchg
arpl
shll
jnp
dec
jp
xchg
sub
movaps
iret
jl
inc
mov
jne
xor
je
cmp
xor
stc
mov
int
orl
outsl
push
insb
and
push
jge
and
cmpsb
xor
dec
jo
pop
pop
sub
inc
xorb
xchg
in
in
les
jae
rol
ffreep
cld
cmpsb
sbb
push
fs
das
stc
push
mov
sbb
sub
repnz
lret
imul
or
mov
daa
sub
sub
pop
and
int3
ss
loop
out
xchg
loop
div
dec
mov
sbb
andb
add
xchg
andl
test
jo
hlt
push
push
sub
lods
fcompl
les
mov
xor
pop
mov
cmp
mov
xchg
std
mov
xchg
sbb
call
mov
jp
jae
imul
sbb
inc
dec
mov
shrl
mov
jmp
imul
jns
sub
popa
and
jbe
push
mov
add
mov
cmp
aas
xchg
cmp
jecxz
xchg
push
inc
sbb
dec
call
pop
imul
or
das
inc
sbb
lcall
mov
cmp
pop
fisubl
cli
arpl
xchg
lahf
sarb
mov
mov
mov
push
push
stc
xor
push
and
or
lcall
xor
xchg
jns
test
jnp
negb
jp
inc
iret
aaa
iret
or
xor
push
add
add
iret
je
cld
cmp
xchg
add
pushf
and
repz
stc
dec
in
loopne
mov
pop
pop
xor
fstl
jmp
lcall
inc
adc
adc
mov
jb
mov
enter
xchg
shll
push
jmp
or
pop
repz
mov
aad
adc
adc
mov
xor
test
nop
lret
test
lret
and
cmpl
imulb
cmpsl
insb
shll
imul
cli
pop
repz
xor
inc
in
add
fwait
dec
and
jo
test
sbb
sbb
scas
jge
cmp
daa
xor
daa
ret
stos
hlt
xchg
out
in
add
mov
jno
push
lret
cmpsl
adcb
lea
je
pop
add
inc
xor
mov
notl
xchg
dec
outsb
out
cmpsb
xor
xchg
jbe
push
bound
ret
insb
in
jae
dec
xor
mov
push
outsl
cli
push
bswap
fadds
testb
fstps
jae
lret
mov
adc
les
into
or
jl
mov
add
mov
sbb
mov
xchg
mov
aas
dec
sbb
push
rcll
xchg
push
fisttpl
test
mov
orb
adc
mov
inc
pop
jnp
xchg
cwtl
sbb
test
lret
ret
pop
test
pushf
lcall
sbb
xor
test
shl
or
loop
push
dec
xchg
push
dec
addr16
arpl
add
push
push
inc
fdivl
dec
leave
mov
outsb
iret
jp
je
int
popa
push
call
inc
inc
adc
pop
aas
add
fimuls
pop
je
inc
ds
mov
sbb
xchg
mov
dec
adc
mull
pxor
cmp
ja
inc
inc
or
cli
mov
mov
push
and
add
test
jae
mov
lea
rcrl
mov
lods
xchg
dec
jno
jb
adc
jg
iret
std
fdivs
xchg
inc
ds
test
cmpl
push
and
mov
push
xor
cmp
push
jg
orl
pusha
in
int3
stos
add
hlt
inc
mov
dec
push
mov
jp
add
mov
mov
test
or
pop
clc
orl
add
adc
or
add
sti
aam
mov
add
cmpb
dec
mov
test
rcrb
inc
jmp
fdivr
call
lods
popf
ret
outsb
imul
cmpsl
and
mov
mull
ds
lahf
and
adc
test
clc
lret
ds
sub
out
sbb
dec
sub
mov
adc
addr16
add
cwtl
inc
sahf
andb
scas
lahf
mov
jne
dec
cmpsb
inc
push
push
imul
mov
call
lcall
jns
aam
leave
xchg
loopne
sti
mov
pop
stos
adc
xorl
xor
rclb
push
mov
mov
mov
lods
int
fildl
mov
or
aad
push
push
imul
jnp
and
stos
outsb
sub
clc
cmp
push
add
and
out
lods
test
incb
mov
dec
mov
cmp
push
dec
in
pop
testb
inc
repnz
cld
inc
and
xchg
ret
pop
xchg
aam
xor
or
inc
mov
mov
out
lods
add
shll
int
add
sub
and
lahf
jo
xchg
loope
or
loopne
cli
popf
cs
or
adcl
fistpl
cmp
fs
mov
jbe
xchg
sub
and
rol
sahf
jne
test
mov
mov
ljmp
clc
xor
mov
mov
sbb
xorl
push
lcall
sbb
pushf
mov
leave
int3
inc
shlb
je
mov
out
ss
cs
adc
dec
int
outsl
xchg
dec
inc
fwait
adc
adc
test
clc
or
and
popa
iret
cmpsb
data16
xor
add
sbb
jno
jecxz
lods
cltd
test
add
outsb
lock
mov
aad
out
xor
xorb
xchg
jnp
or
pop
xchg
movsb
loopne
adc
fldenv
inc
ds
rorb
xchg
aas
out
or
sbb
dec
sub
mov
push
dec
pusha
pop
shlb
push
xchg
fiaddl
sbb
xchg
jno
lret
data16
cli
cmp
cmp
scas
loop
cmp
sbb
in
andb
and
push
shrl
cwtl
add
dec
jge
leave
add
pop
mov
mov
or
sub
in
adc
mov
pop
pushf
sbb
dec
or
jl
mov
pop
and
sbb
mov
mov
mov
or
xor
in
cmpsb
mov
lock
adc
daa
daa
mov
pop
mov
lds
adcl
adc
add
and
cmp
insb
sub
int3
out
adc
pusha
into
jo
sub
push
mov
std
and
and
cmp
fdiv
mov
dec
xor
pusha
rorb
or
inc
jnp
imul
rcrb
shr
lcall
cli
lcall
mov
push
and
lock
bnd
adc
sbb
pop
es
sub
inc
push
jno
cltd
loope
mov
mov
or
jmp
add
jbe
cmpsb
inc
or
add
loop
je
inc
nop
pop
xor
je
jmp
xor
test
lahf
jmp
cmp
fsubr
mov
leave
sbb
ficomps
test
and
nop
pop
mov
fldcw
pop
test
jge
movsl
out
fdivr
les
int3
lret
sbb
add
je
and
inc
loopne
lret
inc
js
mov
test
cld
sbb
fists
sbbl
add
jnp
inc
ret
loope
std
aas
iret
pop
add
xchg
ja
push
int
repnz
subb
fstp
fldenv
pushf
cmp
dec
in
jmp
xchg
int
mov
fs
out
push
push
push
mov
mov
jle
mov
fiaddl
sbb
sahf
lret
cltd
jl
cmp
mov
outsl
jle
ja
xchg
ret
sbb
fwait
pop
loope
cmpsb
cmp
mov
lahf
and
fsubp
fs
sub
loope
add
jmp
add
and
inc
adc
xchg
enter
push
or
in
sbb
or
aam
cmpsl
in
xchg
xchg
shlb
add
pop
jl
scas
or
xchg
xchg
xchg
fidivl
das
xchg
and
enter
dec
ret
addr16
ret
xchg
cmp
mov
insb
je
cmpsl
add
pop
lcall
inc
inc
push
pop
je
mov
mov
mov
nop
dec
xor
sbb
es
sar
out
cmpsb
cmc
out
popf
mov
mov
in
inc
xorl
mov
sbb
mov
pop
test
sub
lods
and
mulw
mov
or
xor
and
movsl
pop
pop
mov
xor
sbb
enter
shrb
inc
inc
jne
pop
out
hlt
and
mov
les
mov
sbb
dec
es
push
fisubs
pop
jnp
mov
xchg
mov
imul
mov
lds
or
inc
aas
int3
mov
sub
fwait
cld
outsl
cwtl
xchg
inc
in
rol
pop
dec
dec
ss
dec
test
shrl
jl
jmp
ss
sbb
push
cltd
push
sbb
xchg
addr16
subps
int
jg
inc
jecxz
push
iret
adc
cwtl
imul
lods
ret
sti
mov
cmpsb
mov
sahf
arpl
dec
mov
sub
mov
mov
xchg
xor
insl
xor
in
dec
mov
adc
adc
jmp
pop
pop
cmp
pop
mov
sbb
xorb
roll
push
jle
mov
shlb
daa
das
fmul
inc
aam
or
popa
xor
je
test
sbb
cwtl
je
popa
pusha
adc
adc
enter
jecxz
stos
push
mov
pop
dec
mov
and
imul
enter
aad
mov
xchg
jbe
mov
nop
mov
std
sahf
jnp
hlt
cmp
xchg
fidivrs
fcoml
mov
lods
ljmp
movsb
dec
scas
pcmpgtw
mov
pop
stc
repz
sub
sbb
pop
out
add
mov
cld
addr16
cwtl
mov
insl
es
jae
pop
je
sub
mov
call
inc
and
sbb
outsb
mov
mov
jle
and
sbb
scas
dec
enter
mov
jge
inc
xchg
movsb
and
xor
dec
jmp
sub
mov
cmc
add
clc
mov
les
sbb
iret
fnstcw
pushf
ret
push
mov
sbb
les
add
xor
test
mov
lea
inc
sbb
pop
stos
pop
mov
ffreep
xlat
push
mov
sbb
call
mov
aad
push
inc
push
rcr
movsl
xchg
mov
mov
das
cmp
lods
inc
int
xchg
pop
mov
fcoml
pop
cs
call
and
and
mov
movsl
push
sub
add
mov
or
adc
sti
test
pop
mov
pop
sbbl
sti
mov
and
add
rorb
out
in
push
or
xchg
call
push
idiv
mov
and
data16
loope
push
call
mov
mov
mov
mov
push
mov
jae
xor
and
nop
pop
lcall
mov
push
mov
fstps
loop
ret
into
adc
into
arpl
jg
jle
pop
inc
mov
jmp
mov
dec
adc
pop
fimuls
jmp
lret
mov
fwait
jg
jle
sbb
inc
pop
je
cmp
inc
mov
dec
jmp
in
shl
add
push
inc
mov
xor
outsl
ljmp
in
jb
xor
fs
ja
test
lds
xchg
xchg
and
das
dec
mov
divl
pop
fists
stos
or
repnz
adc
gs
lods
cli
dec
es
sub
inc
mov
stc
dec
bound
and
adc
push
adc
push
jae
scas
cmp
dec
outsl
out
enter
frstor
xor
out
sbb
fsubl
imul
cmpsl
js
cs
fisttpl
jnp
mov
jmp
pop
adc
dec
out
leave
sbb
xchg
lret
jl
mov
xchg
push
inc
and
xor
jns
imul
repnz
cmp
loopne
or
aaa
adc
bound
pop
loope
push
xor
inc
mov
pop
lret
and
in
nop
add
mov
cli
or
shll
cwtl
sarl
mov
leave
lods
xchg
lea
ljmp
outsb
cmpsb
dec
pop
jne
icebp
and
sbb
jmp
cmp
icebp
mov
jecxz
inc
shlb
sbb
add
jl
gs
mov
daa
fldt
subb
sbb
xchg
rcl
mov
repz
cs
sbb
inc
or
test
outsb
lahf
push
test
sub
out
adc
xchg
cmp
jg
ret
in
nop
shr
sub
jp
jecxz
sub
dec
adc
or
inc
dec
idivl
popf
adc
clc
int
pop
inc
sbb
lret
test
mov
mov
shl
fisubrl
inc
shl
adc
sarb
cmpsl
cmp
add
push
mov
sub
add
out
jle
inc
lcall
in
fldt
clc
fstpt
cs
arpl
or
mov
iret
js
loope
fnsave
cmpsb
outsb
pop
mov
xchg
push
sbb
xchg
add
add
xor
test
filds
mov
dec
push
aad
jp
test
daa
loope
xor
jle
sbbl
scas
lea
sub
insb
mov
inc
mov
inc
frstor
add
or
xchg
xchg
dec
sub
push
ds
mov
pop
jnp
mov
xchg
mov
xchg
push
pop
iret
sbb
scas
sbb
ljmp
imul
lock
data16
pop
imul
icebp
add
xor
add
rcll
jecxz
ficomps
cmp
or
push
and
push
cmp
and
repnz
dec
or
cmpsb
mov
jae
aad
loop
ljmp
lds
into
jno
loop
mov
loope
ljmp
sub
scas
push
mov
sbb
dec
roll
repz
loopne
cmp
xchg
and
loope
jecxz
sub
or
insl
sbb
sti
in
xor
sbb
jno
jns
xorb
insl
lret
lret
push
lods
jmp
enter
pop
arpl
cmp
jbe
in
inc
cmp
sub
or
pop
xchg
push
lods
stos
xchg
iret
pop
repnz
aam
mov
test
stos
cmc
fstpt
stos
or
cmp
mov
insl
neg
sbb
iret
int
push
or
dec
sub
loop
and
pop
out
pusha
dec
push
inc
push
jp
out
or
sub
repz
push
lods
gs
mov
xor
cmp
cmp
sbb
xchg
add
push
popa
out
mov
insl
cmp
mov
pop
xchg
insl
sbb
ljmp
pop
pop
cmc
jnp
sbbl
roll
push
or
sub
mov
loop
adc
mov
jns
insb
and
push
xor
enter
test
mov
out
push
inc
aam
pop
lret
rcrb
aad
cld
lock
jg
nop
lea
aad
adc
mov
dec
jg
mov
mov
mov
cli
xor
sahf
fists
imul
xchg
hlt
mov
ss
inc
call
lods
fistps
xor
lds
push
in
adc
cmp
addl
xor
testl
test
cmp
push
leave
sub
dec
popf
imul
mov
jns
sahf
cltd
scas
pop
inc
sub
lea
das
orl
and
pop
outsb
and
jmp
sbb
add
in
cs
xchg
adc
mov
push
lea
test
leave
mov
aas
jno
cs
xlat
aas
xor
in
addr16
jg
rorl
xorl
mov
mov
xchg
mov
dec
mov
loopne
adc
inc
jmp
insb
bound
popf
jle
mov
xchg
test
jb
jbe
push
pop
lock
dec
dec
inc
mov
lock
inc
call
addr16
test
push
jecxz
dec
js
decb
movsb
mov
pop
imul
xchg
insb
pop
stos
enter
pop
mov
test
cltd
or
add
dec
popa
pop
mov
es
lea
leave
ficoms
mov
jle
call
pop
insb
or
push
dec
mov
imul
fcompl
lods
dec
testl
push
inc
in
test
adc
aad
cld
pop
mov
pop
push
loope
dec
shl
xor
popf
jg
aas
pop
cmp
sub
in
leave
pushf
in
insb
xchg
push
incl
xor
cmp
test
aam
iret
sub
test
xchg
adc
pop
cli
loop
xor
in
aad
xor
push
hlt
sbb
xchg
fadd
xor
push
or
push
jo
test
mov
into
lret
pop
add
xor
cs
das
inc
inc
pop
jae
loope
xchg
aad
orb
xchg
push
loop
bound
popa
lret
sub
popa
aas
sarb
mov
enter
inc
shrl
cltd
in
xchg
pop
pop
adc
push
xor
push
jbe
dec
les
lret
jae
icebp
cwtl
mov
sbb
das
pop
adcl
pop
rclb
in
dec
mov
mov
pop
out
inc
fs
sub
in
stos
xchg
sub
jnp
jb
and
push
cmp
arpl
and
jge
psubd
test
iret
mov
addb
aam
dec
aas
xchg
mov
sbb
xor
enter
cmpsl
mov
pop
dec
sub
xchg
inc
jb
pop
jl
movsl
cmc
xor
inc
loop
xchg
sbb
mov
xchg
movsb
or
and
and
fsubp
std
fwait
rorb
cmpsl
test
cmp
inc
xor
test
xor
cli
dec
cmp
push
les
outsl
scas
mov
xor
fldlg2
lret
mov
dec
xor
or
sub
pop
cmc
pop
bound
mov
test
gs
repz
mov
lock
push
insb
push
pop
in
in
daa
jae
jnp
je
pushf
and
mov
movsl
int3
push
scas
sti
js
cmc
push
nop
jl
loop
jle
xor
cmpb
mov
adc
pop
mov
pop
adc
out
inc
notb
adc
popa
cmc
popa
add
inc
icebp
mov
scas
xchg
inc
jg
adc
or
rcrb
push
add
mov
add
test
sarl
mov
cwtl
jae
pusha
test
iret
ja
push
ffree
push
inc
push
sbb
sub
lock
shlb
mov
lea
and
pop
mov
hlt
or
in
test
shll
jae
inc
sbb
popf
lahf
push
pusha
or
rorl
mov
mov
ret
mov
or
cltd
sahf
enter
int
sub
ja
cmp
daa
pop
jne
xor
jbe
arpl
or
dec
out
mov
sub
mov
ljmp
jns
aas
stos
movsb
into
mov
out
cltd
push
cltd
mov
mov
lret
addr16
jg
cmp
stos
xor
add
jno
and
push
xchg
rcrl
aam
lret
nop
xor
or
xor
int
xchg
fidivs
repnz
call
push
fists
xor
das
pusha
cmp
mov
stos
aam
out
ja
jmp
jg
adc
sub
aaa
or
out
pop
ffreep
adc
mov
add
sub
inc
or
gs
add
add
cmp
xchg
mov
jmp
jae
jmp
mov
fstpt
stos
mov
sbbb
movsb
cmp
inc
mov
das
push
cmp
mov
data16
ljmp
bound
push
cmp
xchg
sub
iret
adc
xchg
sub
add
inc
xor
push
lahf
or
notl
xor
sbb
out
sbb
cmpsl
xchg
ss
sub
je
in
mov
cmp
mov
imull
pop
enter
xchg
sarl
or
mov
cmovbe
dec
rorl
jg
aas
pop
sub
mov
jae
fs
outsl
mov
or
cmpsb
jno
pop
cwtl
aad
imul
cmp
jbe
mov
sti
mov
jp
sub
test
dec
jb
popa
pop
adc
imul
out
in
push
std
and
xchg
cmp
pushf
test
lret
jg
and
inc
push
push
jnp
dec
call
inc
je
stc
dec
push
sahf
repz
shlb
cli
jecxz
adc
mov
leave
push
push
sahf
xlat
enter
dec
push
adc
shrb
mov
inc
jp
rorl
xchg
xor
mov
syscall
sahf
pop
repz
das
test
fwait
dec
pop
cmpsl
fldl
mov
ljmp
dec
ja
inc
pop
mov
mov
sub
scas
imul
mov
ret
ret
pop
cltd
fsubrs
pusha
fdivl
fisubl
push
ret
int
in
loop
clc
insb
mov
js
sbb
cmc
and
xchg
mov
jl
sub
negb
es
add
imul
push
orb
mov
lock
or
xchg
sub
mov
dec
pop
int3
ret
jnp
add
mov
mov
xor
pop
inc
imull
pop
mov
or
and
fnsave
add
bound
lahf
loopew
aad
enter
dec
xchg
int
loopne
mov
mov
negl
lods
repnz
dec
cmp
arpl
push
add
mov
popf
mov
jl
pop
push
push
jl
repnz
cmpsb
xchg
adc
and
inc
aad
xchg
inc
inc
and
inc
call
mov
fistps
pusha
sub
mov
jecxz
jge
sbb
sbb
outsl
mov
mov
mov
out
in
mov
pop
addl
sub
mov
mov
fists
or
push
subb
mov
adc
xor
xchg
insl
je
pop
sbb
mov
sbbb
movsl
in
pop
fldcw
imul
mov
mov
in
aas
push
jecxz
cmp
imul
mov
andb
ud1
enter
pop
and
idivb
pop
sbb
dec
xor
clc
sahf
movsl
jnp
dec
push
fldl
lret
test
dec
lcall
data16
pop
movsl
xor
push
adc
xchg
inc
or
mov
enter
jmp
dec
adc
and
sahf
dec
inc
push
mov
adc
or
cli
push
add
inc
in
push
sahf
aaa
inc
in
jmp
call
jg
mov
addr16
nop
or
push
lret
mov
push
add
gs
out
and
mov
test
mov
dec
pop
lcall
mov
outsl
ret
jne
insb
sbb
mov
lcall
jge
cmc
sbb
adc
out
xchg
inc
sbb
inc
mov
or
push
inc
movsb
push
lock
pop
mov
pop
xchg
mov
push
leave
enter
fmull
and
jp
dec
sti
xlat
pop
pop
in
icebp
push
dec
repnz
das
xor
xlat
cmp
cmp
mov
xchg
inc
leave
stc
or
push
mov
sub
je
popf
pop
mov
das
jecxz
out
xchg
mov
mov
shlb
mov
shr
xchg
loopne
jle
cld
fdivrl
fs
jle
sub
jnp
cmp
adc
jne
xlat
ret
add
dec
insb
or
push
sub
mov
mov
xchg
and
or
pop
jns
pushf
inc
ret
in
lahf
lea
jl
pop
ds
jno
sub
mov
fwait
push
lock
pop
mov
pop
mov
ljmp
repnz
orl
jns
cld
and
inc
xchg
xorl
scas
mov
clc
add
xchg
idiv
pop
out
out
sbb
mov
orb
addr16
and
dec
lret
fwait
js
sahf
fwait
jb
rcrb
adc
adc
into
testl
lods
shrl
push
fdiv
jo
xor
out
pop
or
aas
fs
std
mov
inc
mov
ja
frstor
adc
aam
ss
add
out
pop
fsubrp
dec
push
cmp
jo
lcall
bound
cmp
test
and
negl
or
adc
or
or
int
pushf
cmp
iret
or
push
adc
and
push
pop
pop
aas
jl
pop
mov
inc
sub
push
call
push
pop
dec
sub
mov
in
jmp
in
mov
enter
mov
or
push
push
js
adc
lock
mov
sub
lahf
aam
inc
addr16
adc
arpl
mov
popa
or
or
cmc
dec
mov
push
lea
lret
fcomps
pop
test
in
mov
and
push
inc
or
loope
mov
or
adc
outsb
fsubrp
pop
or
aaa
outsl
in
movsb
pop
mov
dec
adc
into
addr16
add
jae
dec
mov
leave
mov
test
or
ljmp
fdivrl
and
add
and
sub
in
addr16
push
adc
push
sbb
gs
jb
test
cmp
fidivs
push
rorl
hlt
and
fsub
add
mov
ret
xor
dec
ljmp
std
ss
xchg
es
sti
pop
xorl
inc
xchg
fwait
insb
xchg
or
lds
mov
outsb
pushf
push
xchg
push
aam
dec
aaa
mov
sub
mov
cli
sbb
addl
cs
loopne
jp
push
in
push
pop
dec
cmpsb
xchg
aad
mov
jo
xchg
sarb
adc
dec
jns
ret
enter
xor
xchg
mov
sub
pushf
xor
mov
cs
addr16
xchg
ficompl
push
in
popa
push
xchg
mov
jle
fistl
sub
cmp
mov
out
insb
add
mov
dec
jo
fstpt
mov
pop
movsl
push
jbe
stos
outsl
or
mov
mov
mov
aad
ds
inc
jb
xor
mov
mov
cmp
std
xchg
cli
cli
sub
mov
jne
fidivs
xchg
sbb
and
mov
lahf
test
xor
cmp
inc
test
lock
test
in
pop
scas
jno
cmp
pop
pushf
ljmp
cmpb
fdivrp
popf
cwtl
leave
aam
imul
cld
jecxz
loope
or
xchg
mov
in
std
cli
mov
fidivrl
dec
mov
sub
jp
mov
push
cld
pop
jns
daa
adcl
add
xor
or
sbb
fsubrp
and
adc
mov
fneni(8087
jb
push
adc
add
dec
push
in
out
cmp
mov
test
jns
xchg
mov
mov
or
push
ss
lods
cld
imul
pop
in
xchg
mov
std
js
lahf
xchg
pop
cmpsl
dec
mov
pop
in
add
rorl
mov
or
xchg
cld
lret
jmp
addr16
pop
stc
js
aad
push
xorb
js
loop
lea
shrl
jae
push
mov
cmp
mov
jbe
mov
and
cmp
sub
iret
and
mov
and
popa
jecxz
movd
lods
inc
or
push
add
mov
xor
popf
mov
sbb
xchg
sub
push
pop
andl
lods
mulb
mov
push
clc
mov
mov
push
sbb
xchg
xchg
cmp
and
pop
push
dec
and
mull
mov
mov
int
scas
inc
adc
notb
xorl
pop
lret
mov
dec
aaa
sub
sbb
xor
or
mov
xchg
loope
lret
jg
nop
xchg
dec
adc
mov
cmp
mov
cmp
xchg
push
inc
insl
mov
ret
add
hlt
and
xchg
stc
xchg
jo
hlt
mov
xor
aas
stos
arpl
fdivl
stos
mov
ret
mov
icebp
aad
inc
adc
sub
repnz
and
les
xor
divl
fs
pop
push
cmp
push
push
mov
addb
mov
lahf
sbb
sub
popa
ffree
mov
and
negl
scas
repz
push
mov
ja
and
mov
inc
dec
push
xchg
lcall
cmp
ja
mov
fisubrl
jl
mov
push
es
dec
hlt
insl
ljmp
cmp
insl
sti
repz
ret
fldt
iret
xor
nop
stos
or
cmp
xchg
push
jg
inc
outsb
cs
mov
ret
jno
popa
int3
sub
pushf
das
inc
or
stos
std
ret
or
mov
clc
xchg
sub
pop
mov
sbb
in
or
xor
dec
stc
insb
lods
xor
push
stos
pop
cld
sahf
add
mov
fdivrs
pusha
jns
pop
mov
lret
xchg
inc
fldl
mov
into
adc
mov
aaa
out
stos
push
int
jno
sbb
clc
pop
out
mov
add
mov
mov
or
inc
add
xor
lret
test
call
adc
test
jbe
push
fwait
xor
sub
repz
loopne
sahf
xchg
jl
clc
shrl
and
pop
cmp
in
adc
mov
aaa
cmp
cmpb
xlat
push
movsl
adc
adcb
out
mov
int
mov
xor
movb
inc
ret
lds
dec
stc
int3
mov
mov
push
xor
or
stos
and
lret
pop
clc
arpl
in
adc
or
cli
xor
mov
adc
dec
daa
data16
dec
push
sarl
sub
push
adc
int
loope
cmp
stos
loop
iret
je
icebp
lahf
pop
mov
jns
push
pop
mulb
jle
into
stos
outsb
rorb
fs
sub
push
test
sahf
rcrb
push
and
fwait
pop
pop
pop
or
jo
fimull
inc
xor
arpl
and
xchg
inc
inc
fimuls
popa
sub
andl
mov
sbb
ljmp
inc
sahf
push
ljmp
rcl
push
ficomps
aad
jle
mov
cld
insl
ds
inc
pop
movb
and
mov
out
repnz
xchg
idivb
jecxz
or
adc
popa
adc
inc
inc
insl
lds
test
pop
es
insb
subb
inc
dec
pop
pop
cmp
mov
cld
and
popa
jle
scas
test
repnz
mov
mov
mov
icebp
lock
test
jnp
adc
adc
inc
adc
and
int3
test
lret
sub
loope
in
sbb
outsl
lret
inc
popa
mov
popa
mov
mov
shll
mov
int3
xor
or
int
cmc
pusha
xchg
lods
xchg
jp
push
push
lahf
mov
mov
pusha
int
push
lock
mov
push
fimuls
sub
xor
aad
nop
int3
push
inc
jp
imul
std
out
fistl
mov
mov
adc
fs
imul
addr16
paddw
mov
mov
fs
dec
aaa
aas
insl
jp
js
das
pop
imul
inc
mov
inc
or
adc
movsl
repnz
bound
dec
push
cld
jl
and
ss
cli
inc
jbe
adc
mov
sbb
add
pop
inc
pop
fstp
xchg
xchg
jmp
pop
pusha
lret
xor
add
fisubrl
cmp
mov
inc
das
daa
cmpsl
xchg
dec
add
stc
out
bound
subl
pop
mov
mov
roll
xor
xchg
jmp
dec
mov
mov
cmp
mov
xchg
inc
test
out
repz
cmpsb
dec
inc
sub
or
jmp
ss
inc
popf
out
push
icebp
addb
inc
push
sbb
out
cs
xchg
std
jns
jne
cmpl
and
push
cmp
xchg
divl
inc
pop
data16
xchg
frstor
nop
mov
pop
mov
sub
scas
mov
pop
inc
mov
pop
cmp
test
mov
mov
add
les
sbb
and
hlt
into
mov
ljmp
addr16
xchg
jae
dec
sar
cld
iret
xlat
xchg
imul
inc
or
mov
or
roll
test
ds
adc
rcl
jnp
xor
lods
test
xor
inc
jo
push
test
popf
and
fwait
adc
sub
and
mov
fistpll
in
hlt
cli
out
inc
ds
popa
call
xchg
add
push
sbb
sbb
hlt
pop
pusha
lods
mov
mov
jge
popa
test
icebp
xlat
fucomp
or
ret
pop
mov
dec
add
pop
adc
xchg
icebp
push
jbe
arpl
pop
lahf
data16
cmp
out
mov
dec
test
jmp
mov
sub
cwtl
call
mov
int3
clc
push
in
in
xor
sub
sbb
lret
and
push
jg
add
icebp
sbb
xlat
xor
jge
test
pusha
jne
xor
xchg
mov
loopne
mov
cmpsl
push
xchg
cmp
cli
rcr
mov
sbb
in
shr
das
jne
push
pop
mov
cli
aaa
inc
xchg
scas
ret
ljmp
sub
out
shld
test
scas
add
or
xor
jge
adc
mov
cmc
aas
mov
leave
fadd
in
pop
out
je
xchg
mov
push
imul
dec
push
popa
jge
popf
fwait
adc
or
fisubrl
mov
xchg
loop
inc
sub
jmp
idivb
ds
mov
sub
dec
sub
lcall
cmp
inc
scas
lret
gs
cmp
es
std
xchg
sub
jbe
pusha
sbb
and
cmp
xchg
negb
shll
bound
sub
inc
xchg
std
adcl
mov
ljmp
mov
mov
dec
and
sti
dec
xchg
mov
mov
add
and
gs
mov
in
pop
popa
xor
mov
mov
sub
hlt
and
rol
leave
gs
push
cmp
std
fxtract
xor
aam
jp
push
cmpsb
push
pop
pop
push
cmpsl
insb
repz
fcompl
mov
imul
push
add
mov
fists
mov
push
adc
mov
or
xchg
call
jae
out
mov
jnp
aaa
scas
mov
repnz
das
sub
inc
aad
jno
cwtl
imul
sub
lcall
mov
xchg
mov
shll
imul
xor
xchg
xlat
mov
xorl
pop
mov
nop
fnstsw
jg
cli
les
and
clc
pop
mov
xor
sbb
lods
call
cmp
scas
paddsw
or
fldenv
das
pop
mov
push
xchg
dec
pop
jg
in
cld
push
les
sub
cwtl
aaa
lret
xor
xchg
ja
rcrb
mov
sbb
mov
push
test
repnz
scas
mov
add
popa
sub
xor
mov
vmread
inc
mov
xchg
ljmp
inc
dec
jle
in
push
dec
ficompl
cwtl
inc
or
adc
push
push
daa
sbb
es
in
jo
xor
inc
out
add
dec
pusha
pop
std
add
pop
out
dec
sub
or
jbe
movsl
stos
or
mov
xchg
ja
sti
aad
movzbl
jle
lret
adc
out
out
lret
ret
insl
fucomi
mov
rcl
jne
lret
ret
add
outsb
cli
in
inc
cld
data16
gs
aas
pop
out
test
cs
jp
dec
sub
xor
repnz
or
stos
push
ja
test
fsub
mov
xchg
ja
js
shll
mov
sbbb
pop
fisubrs
scas
dec
pop
sub
fistpll
sti
fxch
pusha
cwtl
mov
jecxz
leave
mov
cmp
xchg
or
ljmp
inc
pop
sbb
ss
or
and
xchg
mov
mov
dec
faddl
mov
mov
mov
ljmp
jp
out
loopne
sub
add
or
cs
addb
jg
sahf
inc
mov
mov
inc
adc
arpl
jb
mov
lahf
js
lcall
ljmp
push
lds
jle
lea
ja
std
cwtl
cmp
mov
div
leave
push
ljmp
or
mov
ds
add
mov
test
and
inc
into
xchg
sbb
sub
xchg
outsl
jle
push
daa
add
cmp
mov
out
inc
mov
js
mov
inc
fmuls
adc
rcrl
jne
sub
xchg
orb
push
add
sbb
cli
jno
lds
mov
outsb
ss
enter
outsb
fcmovnb
mov
outsl
clc
and
adc
lahf
cmpsb
push
fisubrl
or
fsubrl
pop
leave
cmp
scas
sub
addr16
inc
sti
test
and
xchg
lock
pop
lock
punpckhdq
cmp
xchg
bound
xlat
inc
mov
enter
or
out
jb
and
outsl
lret
pop
out
xor
jge
lcall
je
xchg
lods
mov
in
movsl
adc
stc
nop
cli
and
add
jecxz
cmp
xchg
dec
pop
lods
xor
push
or
cld
push
push
xchg
mov
jmp
jne
pop
adc
mov
mov
in
cmpb
repz
bound
ja
add
and
sbb
xor
xchg
in
pop
adc
pushf
lret
lret
mov
and
inc
je
lock
mov
inc
lock
decb
inc
push
cmp
adc
out
imul
mov
ret
mov
xor
ss
shlb
cmp
cmpsb
inc
nop
test
arpl
xchg
movsb
add
pop
xor
outsb
mov
cmp
mov
sbb
ret
subl
movsb
bound
ds
adc
loopne
cli
andl
pop
cmp
and
sbb
add
jg
lahf
and
in
fistpll
and
lods
or
adc
mov
rorb
sub
test
mov
rcrb
push
add
or
stos
sarb
mov
mov
cwtl
dec
roll
add
scas
cmc
int
adc
xor
iret
push
cmc
jmp
int3
xchg
lea
loopne
push
nop
push
xor
fdiv
push
sti
and
gs
aaa
lock
cmp
shll
push
sbb
add
mov
adc
test
jae
inc
rolb
push
repz
pusha
jg
loope
stc
lods
repnz
adc
icebp
repz
sbb
addr16
enter
sti
ja
sbb
or
and
inc
pop
scas
aad
cmpsl
shlb
xchg
je
movsb
mov
and
mov
icebp
clc
lods
divl
out
push
mov
addl
add
aaa
jae
cmp
fsubrs
inc
ficoml
add
jo
repz
xchg
or
out
ss
test
adc
std
test
add
lods
stos
dec
mov
in
ja
jle
push
jns
imul
gs
sbb
movsb
push
cmp
sbb
incb
shrl
aas
stos
dec
dec
push
into
addl
aam
sub
shl
ds
imull
push
sub
popf
cmp
andb
push
sbb
js
sub
mov
mov
pop
pop
mov
stc
clc
mov
mov
sub
test
xor
add
das
js
in
pop
inc
fdivr
imul
jp
popf
mov
frstor
pop
scas
iret
cltd
push
mov
mov
les
cmp
sbb
mov
push
repnz
xchg
jne
out
addb
xchg
jmp
inc
shrb
insl
cli
shll
andb
mov
xchg
out
clc
movsl
inc
sar
mov
pop
pop
cwtl
arpl
and
jle
aas
push
loopne
add
cmpsb
repz
jae
in
xchg
mov
ds
cmp
pusha
push
aad
mov
leave
sbb
xor
cmpsl
cmp
inc
hlt
and
or
cli
mov
push
mov
pop
adc
pop
mov
nop
push
inc
add
mov
jbe
mov
rclb
jae
xchg
and
xchg
lods
into
pop
jno
sti
incl
pop
adc
jno
mov
jmp
lret
push
sbb
dec
outsl
mov
stos
popl
loopne
push
xchg
stc
bsf
movsl
sub
inc
outsb
insb
mov
jmp
jns
sahf
cmp
mov
insb
dec
jne
cmpsl
sbb
fisubrl
movsl
cld
jae
inc
xor
lods
push
ja
cmp
flds
loopne
pop
xchg
int3
cmp
int
nop
jge
cmp
call
xchg
pop
in
push
push
aaa
xchg
mov
dec
hlt
mov
scas
push
inc
sbbb
or
rcrl
adc
mov
push
mov
or
scas
jne
sti
adc
xchg
mov
aam
pop
xchg
imul
dec
rcll
fiaddl
xchg
inc
push
xor
fnstcw
iret
sti
fs
xor
mov
jo
fcoms
xor
inc
inc
xchg
and
out
mov
xchg
mov
dec
std
pop
aas
jle
notb
dec
sub
jle
adcb
sahf
ds
dec
adc
std
mov
xlat
push
fildll
test
pop
mov
and
push
jg
sbb
fs
pop
pop
xchg
mov
cmp
mov
mov
fisubrl
mov
and
mov
push
into
mov
add
xlat
or
add
pop
fs
scas
jp
cwtl
fdivp
dec
sbb
pop
int3
je
inc
loop
fs
push
adc
and
repnz
pop
jge
cmc
mov
test
test
dec
lret
add
mov
xor
inc
mov
fcmovne
fildll
ljmp
lret
js
inc
pop
sbb
scas
push
cmpxchg
rclb
inc
sar
pop
xor
ret
sub
or
outsl
enter
fiaddl
lods
int
lret
dec
pop
arpl
push
mov
mov
and
jbe
xor
std
xchg
out
scas
je
sub
dec
pop
cmc
push
mov
roll
jno
xlat
in
push
hlt
data16
xor
das
test
fdivrl
in
add
and
dec
fwait
movsb
xor
xchg
imul
lret
fmul
inc
add
mov
outsb
insl
icebp
cmp
pop
xchg
rclb
dec
adc
pop
popa
shlb
adcl
xor
std
sbb
mov
mov
out
push
push
dec
sbb
mov
mov
mov
fidivs
rcrb
jns
nop
jg
das
fxch
insl
xor
inc
mull
pop
rolb
loope
adc
pop
scas
lea
jne
dec
loopne
sub
fistpll
and
scas
fdivrs
push
sub
push
jge
leave
test
pop
scas
ss
jno
cs
adc
sub
xchg
dec
push
or
lock
push
sbb
xlat
ret
sti
inc
movsb
popf
xchg
pop
jnp
add
sar
dec
pop
je
dec
mov
pop
inc
fcomps
mov
xchg
push
test
mov
cld
pop
test
dec
int
jae
or
push
aad
js
xchg
xchg
test
push
inc
inc
imul
jb
sbb
or
rcll
pop
dec
pop
push
jbe
sub
in
cli
push
cld
inc
adc
sti
lods
inc
cmpsb
inc
add
imul
lahf
mov
daa
dec
bound
pop
sub
add
clc
adc
cmp
jb
in
andb
add
aaa
ljmp
ficoms
jle
push
xchg
dec
pop
or
sub
notb
xchg
in
cmpsl
jae
sbb
push
inc
xchg
pop
push
cmp
lock
not
out
xor
xor
jae
mov
loop
add
cltd
loop
pop
cmpsl
or
dec
or
pushf
sbb
shrl
test
sti
mov
fistpl
std
xor
mov
cwtl
xor
outsl
inc
jmp
mov
dec
int
cmp
xor
outsb
stos
dec
loope
jp
popl
xor
sbb
lret
mov
test
stos
lahf
js
ljmp
and
inc
pop
cltd
jmp
pop
push
fcompl
ror
sti
loopne
into
mov
inc
test
jl
xor
and
fucomp
cmp
sbb
pop
or
jge
xchg
cmp
ret
fadds
movsl
and
roll
stc
mov
inc
scas
fdivr
in
popf
frstor
enter
sbb
push
loop
xor
stos
and
lret
adc
call
cli
cwtl
xor
lahf
mov
test
outsb
dec
int
out
sti
arpl
lock
dec
jns
cmpl
push
mov
pop
jmp
ljmp
fisttps
dec
out
push
jbe
into
jge
movsb
add
sahf
xchg
cmp
sub
inc
in
sbb
add
inc
adc
or
insl
push
les
jmp
mov
xchg
cmp
lods
cmp
jecxz
or
imull
imul
fadd
dec
out
cmc
mov
es
adc
xor
loop
adc
pop
xchg
mov
or
aaa
inc
xor
sahf
sar
test
pushf
push
mov
mov
pop
push
ret
pop
adcl
dec
rclb
adc
pop
pop
ds
push
xchg
subb
xor
mov
mov
pusha
dec
repz
sbb
lock
jmp
and
nop
cmp
data16
sbb
push
xchg
mov
sub
mov
testl
imulb
call
nop
dec
xor
sub
mov
pop
pop
mov
fs
call
fwait
sahf
adcl
mov
nop
or
pop
mov
imull
jns
bsf
es
hlt
xchg
mov
es
jl
mov
repz
shr
mov
mov
xchg
adc
xchg
mov
frstor
lods
pusha
adc
mov
add
sub
scas
sbb
int
jae
mov
pop
jg
sbb
inc
rcr
cmp
mov
pop
inc
je
or
pop
jnp
shrl
int3
pop
mov
cmp
sub
inc
nop
divps
loope
dec
je
sbb
outsb
clc
cmpsl
dec
add
mov
push
push
sbb
jle
imul
test
or
loop
lret
in
lea
pop
mov
out
inc
mov
and
ja
insl
inc
cmp
cwtl
and
cld
or
mov
dec
adc
imul
or
or
fwait
inc
push
adc
call
je
fnsave
inc
orl
mov
aaa
xchg
dec
int3
cmp
xor
call
test
jne
pop
add
pusha
push
pop
pop
sub
lret
lahf
lahf
mov
lret
adc
popf
scas
sbb
in
lods
jg
dec
dec
fstpl
push
lret
popa
out
shrl
outsb
xor
inc
pop
mov
mov
xor
ret
push
pusha
cwtl
lahf
out
sub
xor
aad
cmp
mov
jg
test
sub
out
mov
pop
xor
mov
das
pop
adc
sub
mov
xchg
push
out
out
mov
popf
in
inc
orb
dec
in
stc
push
cmp
dec
leave
xor
cmp
add
sbb
movsl
in
aas
sbb
xchg
pop
sarl
xor
jl
dec
loope
mov
test
lret
add
or
rorb
out
xor
filds
and
push
pushf
popf
adc
push
sahf
mov
addb
mov
arpl
mov
jp
mov
hlt
aad
cmpsb
xchg
cmpsl
rcrl
jge
popf
push
stos
pop
mov
xor
or
cmp
mov
fstl
jge
js
sub
hlt
dec
xcrypt-ecb
cmpsl
dec
out
jl
div
add
add
fidivl
ljmp
pop
dec
pop
cld
sbb
mov
mov
xor
pushf
mov
xlat
notl
movsb
movsl
mov
lahf
add
idiv
mov
push
rcrb
mov
sti
fstpl
insb
ljmp
int3
sub
xchg
xor
nop
scas
adc
lahf
mov
xor
pushf
jl
notl
lret
mov
mov
repz
rcll
enter
sbb
insl
cmpsl
pop
insb
mov
jp
ss
add
lock
mov
or
mov
jne
scas
xor
fsub
rorl
aam
call
daa
nop
xor
mov
push
xchg
bound
sbb
insl
mov
das
dec
jle
in
loop
xor
out
clc
sbb
pop
pop
mov
pop
xchg
xor
jnp
arpl
sbb
cmp
jbe
loop
pop
lds
inc
mov
gs
cltd
addr16
xor
shl
stos
xchg
mov
dec
sahf
xlat
hlt
jne
inc
aaa
mov
lods
mov
insl
das
add
cmpsl
inc
xor
lcall
dec
enter
xchg
jle
ljmp
ss
fs
scas
inc
addr16
das
sub
gs
mov
movsl
inc
xchg
stos
push
dec
pushf
mov
sbb
sbbb
xor
mov
adc
out
cs
add
mov
notl
or
add
mov
mov
movsl
dec
lahf
sub
fists
imul
inc
in
dec
or
repnz
insl
faddl
popa
mov
xchg
jle
inc
push
loope
in
add
mov
movsb
sbb
inc
daa
inc
ss
sahf
xchg
fwait
add
xchg
sbb
dec
push
jb
out
fildl
xchg
frstor
daa
arpl
repz
jecxz
incb
push
fs
lret
ficoml
or
arpl
inc
frstor
inc
sbb
adc
loope
js
clc
daa
movl
sub
hlt
lahf
leave
lret
test
pop
rol
mov
hlt
jb
sbb
test
fidivl
inc
fcmove
shll
sar
add
test
mov
and
and
popf
outsb
scas
js
inc
cmp
mov
sarb
pop
stc
mov
stc
cs
jo
lret
push
mov
loop
pop
push
hlt
xor
jmp
outsb
lods
add
out
mov
notl
mov
aam
fimuls
je
arpl
lods
es
cmpb
jns
lock
mov
movsb
inc
mov
leave
adc
fcmove
sti
insl
cmp
jg
adc
pop
repz
fildll
sub
and
adc
enter
lahf
xchg
mov
add
mov
sub
cli
xchg
and
sti
cmc
mov
push
repnz
aad
push
add
enter
test
imul
imul
inc
sarb
jmp
fwait
lods
out
and
lock
orb
jle
repz
push
out
inc
in
test
jmp
int
shrl
dec
push
roll
int
mov
inc
push
ja
push
lret
adc
dec
jnp
push
int3
xchg
mov
inc
mov
es
mov
test
in
mov
adc
adc
inc
hlt
test
sub
xorl
test
pop
xchg
aad
scas
ss
pushf
dec
js
rorb
lcall
lret
cwtl
mov
stc
insb
mov
inc
sbb
int3
push
pop
dec
stos
orl
movlps
fildll
sub
aad
add
mov
xor
out
pop
or
fnstcw
insl
ret
addl
cwtl
sbb
push
inc
test
jmp
dec
sub
cmp
nop
and
cmp
pop
or
sub
xchg
mov
or
adc
jne
mov
cwtl
cli
pop
jae
movsl
cmc
sbb
sub
push
jg
xchg
aaa
xorb
adcb
ret
lret
add
jb
adc
or
sub
push
jmp
test
mov
xchg
xchg
int3
ljmp
fsubs
sbb
shlb
dec
in
das
sbb
test
jge
sbb
negb
sbb
mov
pop
ret
fnstsw
cmp
lret
mov
push
sbb
scas
adc
push
and
xor
cli
mov
mov
imul
inc
adc
enter
test
jecxz
rorl
movb
pop
inc
xchg
mov
cmp
scas
mov
mov
push
inc
insl
sbb
lret
push
es
ret
xor
add
add
sub
sarb
xchg
jp
sub
add
xlat
ds
jge
test
js
jmp
test
mov
push
lahf
into
xchg
sbb
xor
adc
inc
inc
adc
xchg
out
pop
out
push
movsb
inc
push
push
add
or
and
pop
mov
es
dec
jl
lods
ret
sbb
cli
push
cmp
add
jp
mov
pop
or
mov
dec
mov
mov
sub
inc
shrb
xor
push
mov
jmp
mov
data16
rcrl
je
mov
mov
and
cmp
lock
mov
sbb
and
mov
push
inc
ja
bnd
movsl
mov
shrb
call
xor
in
gs
and
int
cmp
push
lock
xlat
iret
fstp
xchg
mov
int3
out
iret
and
ds
in
bswap
mov
mov
mov
pop
push
arpl
fisttpl
test
addl
push
repnz
xor
outsl
fwait
mov
sarl
out
mov
imul
es
xor
mov
jnp
test
sbbb
or
mov
push
xchg
mov
jnp
sub
push
mov
jl
nop
pop
int3
call
jae
mov
dec
add
mov
je
pop
pop
mov
stos
clc
jnp
arpl
or
mov
ss
fwait
pushf
pop
push
cmpsl
aam
jge
xor
jmp
icebp
mov
arpl
fimuls
fisttpl
adc
fs
test
push
push
fs
and
sbbl
jl
xor
out
bound
jno
out
jns
xor
lods
cmpsl
leave
leave
pushf
xchg
cltd
mov
iret
mov
sbb
and
add
and
mov
add
sbb
mov
fld1
xor
js
stos
xor
mov
ret
bound
add
imul
enter
arpl
push
push
cmp
lahf
sbb
mov
push
sbb
xor
xchg
sub
subl
fwait
mov
lret
xchg
in
cmp
das
inc
dec
inc
pop
dec
sbb
in
in
mov
mov
mov
xor
lds
cmpsb
jge
mov
das
aam
outsl
ss
push
and
cmpsl
popf
stos
fucomp
mov
inc
dec
jl
orb
xchg
add
inc
subb
add
test
in
scas
xchg
or
fwait
xchg
jge
sub
and
cmp
xchg
push
gs
pop
pop
and
mov
out
unpckhps
outsl
popa
out
fsubrs
adc
mov
cmp
pop
adc
les
jmp
out
inc
xchg
roll
cmp
cmp
sub
lret
outsb
out
add
adc
pop
push
jno
es
fdivl
or
fdivl
push
out
imul
and
aad
mov
clc
cmc
movsl
mov
sbb
pushf
std
jb
sbbb
adcl
cld
in
mov
add
adc
std
push
test
sub
out
cmp
pop
add
loopne
add
mov
sbb
mov
mov
pop
jp
jle
rcll
xchg
ljmp
pusha
pushf
popa
in
jns
pop
jmp
shrl
or
mov
jmp
enter
mov
lock
sti
out
and
out
cmp
cmp
dec
adc
add
notb
pop
dec
pop
xor
push
pop
cmp
decb
mov
and
add
in
adc
mov
rorb
les
and
sub
fisubrl
stos
pop
xor
fisttpl
xor
rorl
pop
je
mov
in
lahf
sbbb
fidivs
jg
shl
dec
mov
xor
dec
mov
mov
loop
sbb
je
push
push
inc
insb
xchg
mov
xchg
jmp
add
cmp
bound
fistl
push
xor
and
xchg
ljmp
out
mov
and
mov
pop
jl
mov
pushl
push
xchg
pop
cs
lds
mov
adc
vpaddb
bound
xchg
out
or
cmpsb
nop
pop
fstps
xor
lcall
jecxz
pop
sbb
adc
xor
jmp
jg
imul
data16
inc
adc
mov
hlt
pop
mov
mov
sub
or
insb
adc
shll
push
iret
xchg
idivl
pop
and
in
mov
fwait
sbb
jo
add
dec
jns
dec
pop
nop
shl
fs
jecxz
je
dec
pop
ds
push
pop
sbb
cmp
xor
jl
sub
xchg
popf
mov
inc
jae
shl
sub
mov
and
je
inc
rorl
outsb
lock
sub
xchg
xchg
cwtl
bound
jp
daa
mov
xor
mov
mov
iret
fnsave
iret
inc
out
rol
push
jae
sti
insl
add
ret
out
in
lcall
andl
xchg
dec
arpl
or
jne
aas
xchg
movsl
mov
sbb
lahf
jle
dec
outsl
shlb
add
fidivrl
imul
int3
out
cmp
xor
lea
adc
dec
movsb
push
popa
insl
repnz
sub
adc
fcomip
out
xor
repz
and
int3
cmpsb
push
sarb
jb
hlt
sti
inc
cmp
pop
push
push
dec
imul
lahf
paddusb
push
add
push
cmpl
sbb
push
nop
addr16
dec
push
inc
fwait
ret
data16
jle
mov
out
mov
in
ficompl
bound
movsb
pushl
negb
lahf
out
test
jl
xor
scas
ds
fdiv
push
xchg
scas
lcall
jbe
cli
mov
mov
scas
push
lods
repz
cltd
push
and
xchg
pop
sti
cmc
lcall
and
ror
add
or
inc
mov
pop
mov
loope
sub
push
outsb
xor
push
mov
jb
in
std
fdivs
test
daa
xchg
fwait
inc
mov
mov
xchg
xor
sbb
subl
out
ret
or
jp
sub
inc
fadds
xchg
pmullw
lods
movsl
adc
cld
inc
push
lds
dec
mov
ds
xchg
and
pop
stc
jne
clc
lret
popf
out
push
or
ret
adc
xchg
and
jnp
mov
std
popf
pop
pop
stos
movsb
addr16
jecxz
xor
out
sbb
pop
dec
lods
inc
ss
xchg
xor
pop
cwtl
les
mov
mov
pushf
mov
mov
cmp
into
test
les
or
arpl
pop
int
xchg
dec
sbb
bound
pop
xorb
mov
and
jg
cltd
pop
xlat
mull
movsb
or
movsl
rcrb
add
pushf
call
loop
call
ror
out
lret
dec
rcrl
pop
push
pop
scas
ds
stc
aad
cmp
insl
pop
popa
lret
mov
out
fbstp
aad
xor
and
or
stc
inc
lret
jnp
dec
cwtl
pushf
mov
je
outsl
inc
lock
pop
push
jp
outsl
lods
or
cmc
xchg
pushf
and
and
push
push
mov
jp
ret
push
je
movsb
loop
movsb
adc
lret
std
arpl
repz
fldl
xor
lret
clc
les
loope
sub
cmp
icebp
sub
and
out
mov
xchg
pop
loope
nop
sub
sbb
mov
sbb
sub
dec
rorl
mov
sub
test
push
and
mov
aam
imul
fidivl
sbb
pusha
int
rcrl
jp
out
jg
addl
and
loopne
jno
ret
xor
ja
mov
pop
lods
cmpsb
ljmp
mov
in
pop
push
data16
mov
test
andl
xor
fstl
movsl
sub
xor
inc
dec
xchg
xchg
jl
fwait
inc
and
je
inc
mov
xchg
inc
subb
popf
sub
jecxz
cmp
mov
adc
or
sub
lods
pop
sub
test
xor
frstor
push
pop
jnp
mov
dec
push
data16
sahf
fisubl
xchg
test
scas
dec
adc
cld
mov
sub
mov
jp
push
xchg
sbb
sub
adc
sti
bound
pop
test
mov
cmp
add
mov
xadd
es
mov
lds
mov
pushf
push
aas
adc
push
outsb
in
insl
mov
movsb
sahf
inc
add
xor
ja
dec
test
adc
rol
loope
test
jne
cltd
sbb
inc
in
ret
out
mov
ss
out
jno
das
js
fstl
xchg
sub
out
push
hlt
dec
lret
and
scas
arpl
out
xor
push
sar
jno
sub
xchg
ret
xchg
fsts
ret
sub
adc
ret
rcll
ja
fs
mov
push
insl
dec
jge
mov
pop
cmpb
jmp
cmp
cmc
adc
sub
xlat
out
insb
push
push
xchg
mov
inc
cmpsb
xor
insb
fidivrs
ds
rol
imulb
int
fnsave
sbb
sub
sub
inc
pop
sub
lea
fadds
hlt
sbb
pushf
mov
push
and
pop
mov
out
lds
pop
test
ret
jo
cmp
fdivrl
iret
cmpsb
mov
pop
in
repnz
lcall
stc
and
mov
in
in
popf
cmpsl
adc
jae
xor
cmp
fnstsw
sub
rcrb
inc
jae
sub
pop
pop
jecxz
jae
iret
jmp
sbb
mov
aas
dec
mov
mov
adc
sbb
rolb
mov
cmc
sub
in
sbb
push
xchg
pop
push
xchg
es
fs
dec
es
pop
addr16
call
jbe
fwait
push
in
test
sub
inc
xchg
lds
xlat
ret
sahf
push
and
add
fsubr
cwtl
sub
and
mov
enter
arpl
cmp
movsb
call
movsb
inc
out
and
jbe
lret
push
add
jle
cmp
mov
lods
pop
or
add
pushl
loop
mov
leave
mov
dec
push
std
pusha
xchg
pop
into
mov
mov
iret
mov
lahf
or
test
xchg
add
sub
test
shll
add
ljmp
pushf
adc
lahf
mov
mull
test
lret
scas
movsb
inc
outsl
and
out
test
mov
sub
shll
add
jecxz
std
xchg
loopne
pop
movsb
pop
lret
hlt
rorl
xchg
mov
cmp
cmp
push
jmp
lds
hlt
data16
subb
inc
sbb
jmp
and
jb
lcall
sbb
arpl
jl
mov
fidivrl
cmp
loopne
cmp
in
enterw
and
sub
enter
mov
mov
xor
sub
sub
je
out
enter
sub
ljmp
roll
popa
es
sub
out
push
xlat
out
pop
daa
in
out
mov
ret
add
sub
psrlq
xchg
test
add
ret
sbb
inc
sub
pushf
or
jl
mov
sti
lret
test
lret
shr
outsb
lds
and
mov
or
ljmp
jo
aaa
mov
aam
mov
fsts
mov
xorl
and
jns
push
andl
cltd
mov
cmpsb
push
test
daa
sub
mov
cld
or
aad
pushf
cmpb
cmp
aas
adc
sbb
mov
mov
iret
pop
pop
and
mov
sub
dec
test
sbb
jae
push
ror
cs
outsl
sbb
or
push
mov
shrb
mov
and
mov
xchg
sub
iret
sbb
in
lret
shll
or
xchg
sbb
sub
xor
mov
inc
call
stc
pop
je
mov
loopne
dec
movsl
lds
roll
shlb
rorb
addl
popf
jge
lahf
cmpsl
sbbl
pop
xor
sarb
clc
cli
rcrb
cmc
arpl
int
and
sub
lret
push
push
xor
out
fwait
aaa
mov
les
or
fidivrl
in
or
xchg
out
mov
mov
loope
sub
mov
inc
or
mov
daa
xor
int
mov
add
xor
movsl
cmc
sub
lea
mov
aam
aam
dec
stos
cs
xor
fmul
in
lea
data16
ss
imul
es
xor
fcompl
add
cld
movsl
cmp
cli
and
jo
xchg
xor
inc
mov
pop
xor
cli
pusha
insl
in
sbb
pusha
scas
mov
enter
test
push
in
pop
mov
stc
stos
aas
cmp
stos
idivl
test
cld
test
pop
cwtl
inc
loopne
pop
sarl
in
fcomps
inc
lret
ss
ja
pop
and
add
iret
lahf
mov
fwait
push
in
incb
adc
in
je
mov
dec
jae
pusha
int3
sub
add
lods
inc
or
pop
dec
fmul
mov
lods
dec
movsl
pop
jnp
imul
sub
mov
cmp
dec
mov
nop
sbb
iret
pop
ror
aam
repnz
mov
pop
fldenv
in
std
mov
ja
or
cltd
xor
leave
lahf
iret
outsl
inc
pop
dec
push
popf
pop
stos
pop
mov
jg
fidivrl
fidivs
icebp
push
mov
outsl
scas
out
add
fidivl
shrb
sti
jns
sub
or
push
mov
test
sbb
xchg
jp
jno
lods
inc
inc
rcr
lea
scas
pushf
arpl
out
dec
fldcw
push
push
jge
cld
rcrb
sub
roll
add
loope
enter
cwtl
fs
mov
cmp
jb
cmp
fildll
out
out
fcompl
sti
pop
push
je
or
sub
ret
dec
cld
cmpw
ds
mov
push
jge
fdivrl
pop
sub
leave
lods
cmpsb
jo
cmp
push
sbb
push
sbb
pop
pop
ret
nop
sbb
push
jge
push
bound
inc
fisubrs
push
pop
loope
sbb
pushf
jne
in
add
in
pop
push
aam
push
jp
std
lock
xchg
adc
mov
add
sbb
lret
int3
je
insb
adc
daa
mov
fcmovb
rclb
iret
cmpsb
loope
jp
sbb
xor
lods
push
mov
scas
outsb
add
push
adc
cli
iret
mov
fwait
mov
jae
incl
adc
pusha
inc
lahf
pop
stos
mov
repz
movsl
sbb
fnstenv
or
mov
std
push
mov
dec
cmp
into
aas
mov
loopnew
mov
push
sbb
pushf
pop
jmp
hlt
aam
fwait
test
in
insb
insb
aam
push
jp
adc
add
jl
jmp
push
fildll
fildll
test
lock
dec
inc
lods
shl
adc
shl
mov
jne
pop
pop
int3
aad
sub
mov
scas
mov
shl
jno
pop
pop
subb
cmp
je
rcrb
pusha
pop
notw
mov
fmul
enter
jle
and
push
push
outsl
aam
sub
rcrl
mov
cs
mov
mov
gs
cmpsb
cmp
xlat
int3
sahf
add
dec
push
cmc
pop
xor
test
shrl
dec
jnp
push
cmp
adc
subl
pushf
pop
scas
or
aas
repz
mov
out
add
adc
negl
roll
insl
sbb
or
out
ja
xchg
nop
add
sti
dec
cwtl
cld
pop
cmc
pop
mov
out
sub
sbb
push
arpl
mov
stos
js
test
cmpsl
fs
pushf
dec
inc
loopne
scas
pop
xchg
xor
movsl
adc
sbb
inc
sbb
adc
xchg
push
out
jnp
add
adc
sbb
test
hlt
sar
push
scas
pop
enter
xchg
add
pushf
out
adc
push
popf
loop
jo
loop
lret
rcr
jge
mov
shrb
gs
or
cmpsl
push
adc
dec
cmpsl
outsl
jp
jmp
sbb
in
sub
mov
das
push
jmp
inc
test
stc
out
sub
sbb
add
sarl
jne
and
jmp
cwtl
add
jae
mov
lret
or
rcll
dec
adc
rcrl
pop
dec
std
xchg
inc
or
es
in
ss
jnp
inc
mov
mov
gs
pop
cltd
cmp
add
cmp
pushl
lcall
mov
out
mov
outsb
adc
xor
aaa
xchg
push
inc
or
jecxz
mov
shll
jae
sub
cltd
pop
imul
dec
lods
sbb
xchg
mov
cltd
dec
loope
gs
jae
inc
je
sbb
loope
jg
sbb
nop
jmp
or
outsl
stos
cmp
and
bound
lret
out
cmp
pop
mov
xchg
adc
mov
xchg
dec
orb
adc
xchg
sbb
les
and
cmp
bound
out
pop
jmp
test
outsb
mov
or
mov
movsb
jecxz
adc
xchg
scas
cmp
pop
mov
xor
loop
into
orl
fidivrs
imul
repz
dec
dec
arpl
pop
je
jg
dec
xchg
push
dec
xor
sbb
aas
dec
dec
cmp
mov
das
aas
dec
mov
popa
icebp
ficoms
fcoms
fcmovb
jno
int
xchg
xor
cmp
jmp
rcll
lods
fdivr
inc
rcr
mov
int
test
jge
mov
xchg
out
loope
test
ret
lds
out
hlt
repnz
dec
cmp
and
jp
jmp
aam
sbb
cmpsl
mov
mov
dec
pop
and
lret
je
insl
xor
insl
rorl
cmpsl
pushf
movsl
in
jne
mov
pop
cmpsl
cltd
cltd
cmpsb
mov
shrl
pop
add
xor
mov
pop
cmp
out
inc
loopne
fs
popa
xor
push
push
sub
popa
popa
sti
dec
cmp
push
rcrl
sbb
jecxz
lcall
add
loope
addr16
cmp
xor
adc
inc
xchg
mov
sub
out
push
mov
addr16
daa
pop
dec
fbstp
push
in
sub
sarl
jns
xchg
ret
arpl
sub
in
add
cmpsl
xchg
call
jb
js
scas
jne
jge
rclb
add
mov
or
int
push
call
sbb
mov
lock
repz
bound
sbb
rorl
jnp
out
mov
adc
xchg
inc
das
insl
inc
cmpsb
sbb
fwait
imul
mov
inc
sbb
push
orb
in
in
mov
push
stos
into
xchg
nop
dec
popf
dec
lahf
mov
testb
xchg
inc
je
push
loop
or
js
jecxz
fcomip
enter
and
cli
push
pushf
sub
dec
dec
xchg
or
jne
lcall
arpl
pop
clc
outsl
mov
ret
popf
xchg
fnsave
cmc
scas
push
pop
adc
adc
loopne
lods
adc
insl
fisubrl
jb
clc
add
push
jne
ds
and
mov
push
mov
jae
rorb
jge
pop
in
dec
xor
sbb
ja
push
inc
in
add
cmpsl
cmp
cmp
gs
pop
hlt
repz
jo
in
pop
repnz
push
pop
add
ret
push
test
cltd
vzeroall
adc
push
shlb
mov
cwtl
and
iret
lods
fwait
ss
lods
mov
and
mov
outsb
aad
xchg
pop
mov
fcomps
stos
pop
or
xor
xor
test
sub
jl
mov
loopne
cmp
pop
ret
adc
inc
fcoml
pop
inc
popa
rol
insb
pop
push
xchg
shrl
mov
pop
sub
lods
aaa
jge
lds
mov
add
and
mov
inc
and
add
icebp
mov
mov
clc
fcmovnb
sbb
int
cmp
jmp
pop
cmp
adc
stc
stos
icebp
inc
mov
add
mov
sti
std
cwtl
inc
jns
cmp
adc
sub
mov
icebp
jb
dec
imul
mov
adc
scas
jnp,pt
xchg
jp
addl
push
push
out
pushf
mov
mov
stos
aaa
sbb
aas
sub
scas
cwtl
lahf
cwtl
cmp
sarb
or
pop
sbb
inc
add
test
cmp
and
jns
adc
sbb
mov
stc
add
insb
into
jno
add
idivl
xchg
insb
mov
stc
mov
fisubrl
shrl
xlat
jecxz
push
jmp
pusha
outsl
mov
and
inc
mov
adc
dec
xchg
dec
test
dec
cmova
jle
sbb
aam
call
lahf
mov
pop
xchg
inc
mov
sub
leave
enter
push
and
mov
xchg
into
aas
outsl
pop
inc
testb
jle
hlt
orb
push
push
xor
sub
fldl
test
mov
push
add
movsl
lcall
leave
sbb
add
fimull
xchg
call
xchg
xchg
adc
orl
imul
les
sub
sub
mov
clc
lcall
adc
pop
push
out
dec
jecxz
xor
fwait
mov
fcoms
mov
mov
les
sbb
mov
jmp
inc
push
sbb
inc
sub
rorl
lock
jns
outsl
lds
or
mov
lret
push
pop
mov
sub
inc
stos
add
adc
xor
mov
mov
jle
rcl
cmp
pushf
lods
pusha
mov
sub
jg
cmpsb
push
aas
jo
in
and
xchg
mov
sbbl
ja
bound
cltd
adc
aaa
fdivrl
jns
testb
js
and
cli
cmp
lock
add
cmpsl
push
rcl
mov
sbb
ljmp
jmp
inc
add
jge
data16
pop
jle
xor
sub
fistpl
pop
subl
mov
jmp
loopne
xchg
and
add
imul
push
or
cmp
and
push
loop
adc
sub
mov
lahf
xlat
imul
dec
cmp
fistps
sbb
jmp
jns
aam
mov
jle
xor
sbb
jo
sub
movsb
arpl
or
xchg
inc
pop
push
adc
out
in
inc
mov
mov
push
jle
push
adc
in
jae
adc
push
and
ret
jbe
inc
inc
push
scas
and
dec
adc
addr16
push
sti
lods
and
fcompl
and
fwait
or
fldl
test
sub
sbb
stos
ss
sbb
xor
cli
or
mov
lea
add
cwtl
clc
fsqrt
jmp
lahf
adc
push
add
pop
pop
or
pop
and
pop
cmp
mov
loope
into
dec
popa
jge
mov
push
pop
adc
jb
or
mov
hlt
test
dec
xor
stos
xlat
lods
pop
scas
sbb
cmpsb
test
pop
daa
int
cwtl
call
xor
sbb
push
jp
xchg
sbb
test
lret
mov
enter
inc
pop
inc
jl
mov
xor
repz
mov
push
mov
push
frstor
negl
xor
mov
test
cmpl
repnz
imul
imul
cmp
sbb
dec
cmpsb
fs
cmp
push
cltd
in
fsts
pop
adc
or
roll
lods
push
mov
lea
lock
iret
ret
jle
adc
out
daa
in
stos
jo
adc
ss
mov
call
movsl
or
sub
in
mov
outsb
pop
mov
mov
xor
jno
das
lret
dec
shufps
mov
dec
and
dec
jl
out
hlt
dec
jge
inc
daa
xor
jle
fldenv
fbstp
add
fldenv
push
cmp
fiadds
mov
out
jne
fs
ds
in
lea
xchg
scas
pusha
lahf
sbb
mov
mov
into
and
adc
push
orl
ret
lods
mov
in
sbb
adc
fstpl
push
push
mov
pop
lcall
jae
inc
pop
dec
xchg
xchg
adc
pop
idiv
add
mov
pop
in
aad
fstl
popa
mov
pop
inc
pop
inc
dec
mov
fbld
rcrl
mov
add
cmpl
cld
and
jbe
push
push
dec
sub
movsl
dec
aaa
loopne
test
xor
sbb
pop
push
loopne
mov
xorb
pop
repz
sarb
add
shlb
xchg
bound
mov
cmp
cmp
jecxz
xchg
mov
sti
mov
dec
in
flds
or
lods
push
testb
ds
sbb
inc
imul
add
xor
add
into
ds
sub
mov
pop
fstpt
push
call
jle,pn
sti
push
mov
push
into
ljmp
mov
mov
jecxz
aaa
mov
push
pop
jg
jge
cmpsl
aad
mov
rcrl
std
cmp
les
fstl
xor
mov
mov
jmp
stos
lods
mov
lods
popf
push
dec
daa
scas
cmpsb
or
mov
xchg
adc
scas
inc
rcl
adc
mov
xchg
xchg
pop
add
movsb
icebp
dec
cmpsl
mov
pop
inc
lods
enter
xchg
fldz
and
pop
push
rcll
lock
lock
jns
rcll
mov
xchg
shll
addr16
jmp
clc
in
mov
push
aad
pop
pusha
out
imul
jno
idiv
mov
jp
mov
stc
subb
inc
mov
divb
push
cmp
cmp
xor
xor
pushf
in
adc
mov
push
pop
jge
das
imul
push
or
mov
jne
sub
loope
add
in
adc
mov
jl
mov
mov
or
mov
or
insl
inc
testl
shl
loop
push
pxor
hlt
push
sub
pop
inc
push
subb
fisttps
ret
aaa
xchg
stos
adc
sub
pop
int
aas
ret
andb
mov
mov
cli
movsb
dec
inc
cmp
sub
cmp
enter
outsb
or
aad
cs
add
sub
subl
enter
test
idivb
sub
and
push
mov
jns
in
xor
pushf
sbb
loop
sub
mov
cltd
cltd
frstor
lea
shll
scas
negb
repnz
lret
mov
in
jo
jmp
mov
push
test
stc
xor
stc
gs
xor
fimull
scas
into
jmp
xchg
lods
pop
sub
and
and
imul
dec
insb
filds
sub
sbb
pusha
insl
xchg
dec
mov
fnsave
push
pusha
cs
frstor
es
fs
inc
dec
fwait
pusha
mov
repz
xor
cli
mov
int3
stos
jbe
ss
aaa
jae
adc
and
insb
test
fistpl
pop
out
outsb
fldenv
push
daa
out
cmc
aam
loop
pop
lcall
pop
gs
orl
pop
mov
cmp
pop
cwtl
jle
aam
movsb
pavgb
mov
lds
xchg
xchg
scas
push
stc
mov
sbb
insl
cmp
dec
xorb
add
pop
int3
xchg
dec
ds
rcrb
and
aad
sub
mov
mov
in
or
sbb
cmp
mov
xchg
lods
pop
cld
push
test
or
arpl
dec
cmp
jno
xchg
lods
mov
inc
jl
int
mov
in
fwait
sub
mov
lock
out
into
mov
aam
jno
loope
ud0
cld
sbb
imul
dec
mov
or
xchg
rclb
call
and
cmp
in
imul
rcrl
fiaddl
or
mov
push
ljmp
fstpt
pop
add
clc
jl
push
push
xchg
rcrb
pop
bound
inc
push
ret
in
or
popf
lods
or
pusha
movsw
dec
fwait
and
stc
cmc
inc
add
mov
mov
inc
loopne
inc
lods
mov
dec
mov
jge
inc
fs
loopne
shlb
lret
mov
enter
cli
mov
mov
ret
std
outsl
mov
in
add
sbb
je
cvtdq2ps
or
jne
jns
cmc
pop
mov
add
mov
pop
fcoms
pop
cltd
mov
jp
jnp
jmp
test
lock
fsts
xchg
rolb
aaa
aas
mov
and
jle
jle
add
dec
sbb
push
clc
or
pop
clc
mov
dec
or
xchg
inc
outsb
in
in
loop
dec
loope
hlt
pop
lret
jle
shl
scas
push
xchg
call
jns
push
popa
cmpb
incb
lods
enter
fisubl
cmp
xchg
imul
aaa
xor
call
test
rcrl
lods
mov
out
dec
push
repnz
repz
dec
mov
rorb
pusha
insl
enter
lret
xchg
xchg
inc
add
cmpsl
inc
cmc
mov
mov
inc
push
mul
mov
push
loopne
lret
inc
fisttps
mov
xlat
pusha
test
mov
scas
pop
mov
cmp
lret
pop
hlt
adc
leave
adc
sbb
jp
fcompl
jl
sbb
cwtl
cmp
mov
and
enter
mov
clc
push
ficomps
push
fbstp
lahf
sbb
cmpsb
push
cmp
pand
arpl
adc
test
rorl
je
jne
inc
data16
loopne
sarl
popa
push
mov
loopnew
push
stos
cmpsl
repnz
rcrb
add
jae
lahf
xchg
aas
and
mov
inc
out
sbb
pop
or
push
push
shlb
mov
imul
into
loopne
lret
rclb
jnp
imul
stos
pop
sub
lea
pop
fadd
mov
lds
dec
jo
insb
sbb
int3
or
sbb
mov
cwtl
mov
inc
fmull
xchg
sbb
jge
aas
mov
scas
or
xchg
lahf
loope
out
inc
xchg
ss
mov
mov
pop
cmc
mov
and
popf
and
dec
adc
dec
sub
mov
sbb
jns
jno
test
sbb
scas
inc
cwtl
adcl
and
rcrb
jns
popa
dec
or
pusha
pop
std
or
js
or
dec
adc
or
rorl
lahf
inc
pushf
lcall
in
adc
mov
ja
cvtdq2ps
in
mov
inc
in
andl
sbb
cmp
pop
ficomps
mov
in
fstp
xor
xor
add
in
push
sahf
and
jae
pushf
mov
fsubrl
pop
inc
pop
int
cmp
hlt
jmp
inc
pop
mov
cmp
xchg
xor
push
adc
out
jne
adc
fnstsw
adc
xlat
add
mov
inc
jecxz
imull
hlt
sti
adc
sub
loop
ljmp
cmpl
push
and
ja
imul
dec
lret
fdivrl
cmp
pop
sahf
ljmp
sub
lret
lods
out
sub
mov
mov
test
mov
sub
jecxz
repz
fnstenv
les
fmul
and
sub
push
sbb
xor
mov
aaa
int
in
lods
mov
daa
ss
xlat
notb
push
jo
sub
cmp
sbb
addr16
mov
insb
dec
jae
jmp
fsubs
add
outsb
in
es
pop
xor
xchg
adcl
pop
jge
xchg
aad
insl
mov
add
mov
sahf
pop
inc
push
in
inc
pop
push
sbb
mov
fisttpll
mov
int
lret
mov
mov
inc
arpl
jnp
stc
jne
shl
inc
dec
pop
insl
aam
adc
popa
dec
test
jg
add
sbb
shl
mov
jbe
push
insb
movsb
xchg
test
push
adc
stos
cltd
outsb
add
sbb
push
mov
shlb
mov
mov
pop
int
shr
dec
ret
outsb
xchg
sub
imul
jecxz
pop
fiadds
inc
sbb
sub
mov
mov
inc
dec
scas
mull
test
lcall
mov
shlb
add
dec
pop
scas
push
ret
push
or
ja
out
std
popa
dec
sbb
std
ljmp
loop
and
out
dec
sub
mov
pop
test
fistl
xor
test
sahf
icebp
outsl
cwtl
jb
and
push
mov
mov
nop
xchg
inc
cmpsb
enter
xchg
adc
mov
mov
aam
mov
addr16
sbb
jmp
adc
mov
cli
cld
ret
out
in
add
lock
pop
int3
lds
lret
or
lods
add
stos
mov
fmull
xchg
dec
fisubs
sbb
lahf
and
cld
lret
in
test
pop
stc
jg
ja
inc
jb
pop
bound
ret
and
jbe
je
lcall
andb
lret
push
add
pop
pop
jge
out
jbe
adc
push
jb
gs
mov
push
mov
mov
pop
cmp
pop
insl
push
mov
or
adc
popa
jae
ficompl
xchg
and
mov
or
push
add
jo
push
aaa
pop
xchg
outsb
inc
and
push
and
inc
add
outsl
lods
xchg
mov
mov
fs
rclb
aad
jg
and
and
dec
inc
mov
roll
movsl
movsb
daa
cmp
jnp
or
fldl
mov
popf
ret
jae
lods
mov
sbb
adc
xchg
int3
int
gs
sti
xor
incb
adc
fs
loopne
mov
out
lock
enter
inc
ficoms
negb
ss
in
hlt
inc
mov
out
jg
push
movsb
cmpsb
mov
or
xor
subl
lods
aas
sbb
sbbl
lea
dec
leave
fwait
lods
iret
and
mov
dec
jge
push
pop
push
adcl
add
sbb
inc
arpl
push
inc
imul
inc
mov
outsl
mov
adc
fs
sbb
or
adc
jbe
push
mov
add
lock
mov
jle
mov
and
insl
mov
cli
jp
dec
xchg
xor
cmp
stos
imul
xchg
scas
inc
or
rolw
jb
sub
out
jge
imul
push
scas
xchg
vmovd
dec
cmc
pushf
je
arpl
shll
insb
mov
and
daa
bound
cmp
inc
push
aam
test
add
aad
popf
sahf
xlat
out
push
xchg
lods
xchg
cltd
test
jnp
inc
cmp
test
sub
or
in
adc
fcmovne
cmp
jb
enter
jo
loopne
movsl
scas
inc
lods
mov
mov
inc
pop
out
movb
hlt
dec
adc
pop
xor
pop
ljmp
addr16
pop
cmp
mov
pop
stc
lcall
xchg
and
movsl
inc
notb
fidivrs
sbb
jle
pushf
aas
cmc
outsl
inc
xchg
popf
xchg
dec
les
stos
jmp
rcrl
or
pop
jns
xchg
xchg
insb
into
dec
cltd
pop
loopne
push
stos
aad
push
sbb
loop
test
and
pop
lret
in
xchg
out
cmp
jae
sub
subb
ret
mov
cmpsl
jo
enter
and
ds
cs
sub
pushl
xor
add
push
jne
loope
ja
aas
mov
lahf
add
add
jo
data16
je
sbb
lahf
cltd
sar
inc
insb
test
es
dec
mov
jmp
cmp
pop
jbe
mov
popf
rcl
cmc
mov
mov
sub
arpl
ret
jecxz
sbb
roll
pop
filds
add
ss
cld
or
loopne
adc
mov
jg
xor
jg
jecxz
xor
lahf
test
bound
push
lea
lods
fsts
xor
lcall
sbb
mov
out
sbb
cwtl
pop
arpl
mov
and
cwtl
adc
mov
rclb
add
int3
mov
cmpsb
bound
mov
xchg
mov
fiaddl
popl
cmp
inc
jb
lahf
jo
add
lock
or
push
xor
xor
rorw
xchg
test
out
sbb
scas
cmpsl
dec
pop
jecxz
je
push
pop
pop
dec
fwait
push
mov
stos
pop
push
push
shl
pop
xchg
sbb
shlb
push
stos
jge
jmp
mov
inc
call
sub
xchg
lcall
sbb
dec
in
add
xchg
xchg
pop
sarl
mov
push
sub
lock
sub
mov
in
cmp
xchg
in
ja
xchg
leave
lock
add
mov
inc
ret
xchg
bound
out
js
test
int
sbb
adc
mov
sub
xlat
push
movb
popa
pop
push
out
dec
mov
mov
push
dec
jbe
add
fildl
xchg
xchg
jae
add
mov
inc
popa
stos
jno
cmp
pop
push
mov
pushf
dec
xor
xor
pop
and
mov
test
dec
outsb
cmp
xor
push
cmp
push
jae
xchg
es
cli
dec
jge
lock
pushf
lock
nop
lods
xorl
xor
sub
inc
icebp
jecxz
cmp
inc
jmp
icebp
xchg
xor
pushf
cmpsl
jnp
add
clc
enter
andb
cld
jg
inc
loope
sub
add
ja
movsl
or
xchg
jo
dec
outsl
call
rorb
js
out
pop
jl
dec
jb
testl
fwait
cmpsl
sti
adc
into
addr16
std
sbb
adc
fucom
mov
sub
pop
call
cmp
test
fnstsw
dec
or
out
add
xchg
sub
cmp
push
mov
fsubrs
fs
addb
xchg
insl
pop
adc
mov
or
loopne
enter
leave
sbb
pushf
inc
xchg
enter
adc
pop
aad
lcall
sub
adc
mov
std
xchg
enter
lods
fiadds
mov
adc
xor
test
bound
add
xchg
push
std
pushf
cmpsl
mov
mov
int3
bound
jmp
scas
cmpsb
sub
pop
cld
std
ficompl
int
sub
inc
push
cmp
jo
dec
movsl
and
scas
or
pop
mov
jae
incl
push
int3
data16
lcall
inc
lret
aad
sub
test
stc
sbbl
cmp
adc
subb
loop
ja
mov
add
iret
insb
and
jg
dec
push
es
std
movsl
out
aad
cmp
subl
inc
out
push
mov
push
out
sub
loop
outsb
sbb
xor
inc
xchg
mov
repnz
lcall
and
xor
xor
xor
xchg
loope
inc
ret
iret
lock
mov
cli
mov
xchg
nop
mov
or
mov
mov
inc
pop
test
shrb
sub
pop
fidivrl
int
inc
subl
push
popa
xchg
lods
mov
sbb
cmp
cmp
popa
fildl
or
inc
stos
lahf
stos
mov
mov
in
adc
scas
pop
inc
mov
test
adc
mov
mov
mov
out
mov
add
xor
ja
push
hlt
mov
cltd
test
into
dec
cmp
outsb
into
mov
into
jp
out
jle
sub
sti
dec
push
pop
hlt
fnsave
sub
push
nop
pop
add
jg
test
jge
insb
jne
sbb
mov
aaa
xor
inc
jne
cli
mov
or
and
pop
testl
repnz
pushf
xchg
bound
imul
lea
loopew
xchg
adc
mov
lcall
mov
inc
push
movsb
adc
or
mov
aam
add
sbbl
cmp
cmc
cmc
inc
push
stos
testl
push
xchg
xor
stos
pop
mov
jmp
lods
jbe
clc
pop
pop
xor
inc
or
lahf
outsb
iret
adc
jl
jne
insl
shr
and
and
xchg
mov
push
cmp
mov
insb
mov
out
jno
mov
cltd
xchg
pop
fs
repnz
stos
into
aas
movsl
inc
push
add
adc
sbb
not
es
inc
out
and
pop
fisubs
fwait
mov
pop
ret
mov
sbb
icebp
mov
movsl
lods
add
jecxz
sbb
dec
and
mov
movsl
xchg
jmp
adc
fcoms
dec
xchg
mov
int3
sbb
mov
ret
cmp
aam
mov
fldt
mov
fwait
mov
rorb
inc
ljmp
cwtl
stos
ss
cmp
xor
jmp
insl
popf
dec
push
aas
sub
dec
xor
int3
mov
fst
subb
cmp
ss
cmp
cld
ja
inc
aam
lods
lods
gs
adc
jecxz
dec
lahf
inc
lea
mov
out
aas
xor
pop
dec
mov
add
mov
sub
push
xlat
mov
lods
push
xchg
sar
or
or
std
in
adc
push
push
cld
cmp
fwait
test
lock
sub
shl
mov
out
add
jg
sbb
push
mov
mov
jge
mov
cmpsl
and
fnstsw
stos
xor
sub
add
push
dec
adc
mov
movsb
add
aad
movsb
stos
pushf
lcall
rorb
jmp
movsl
sbbb
pop
sub
add
jbe
jecxz
push
lret
dec
push
or
lret
xchg
mov
sub
scas
daa
leave
inc
into
std
sub
pop
call
dec
adcl
push
outsb
jecxz
and
in
aad
fucom
cmp
cs
mov
pop
fwait
inc
testb
mov
ljmp
movsb
cmp
lock
repz
mov
push
mov
mov
cmc
outsl
push
in
mov
in
mov
mov
mov
jo
push
in
jp
repnz
sbb
jl
fdiv
aaa
cmp
pop
cwtl
in
inc
lret
and
testl
loopne
inc
adc
xchg
iret
push
out
int
das
les
rolb
cmp
pop
mov
pop
dec
xchg
shlb
out
jb
imul
test
mov
iret
sub
cli
inc
mov
sub
aad
push
daa
push
ja
jnp
jmp
nop
fwait
sub
mov
rcrl
jo
or
jb
push
push
pop
mov
xor
mov
dec
xor
leave
mov
xchg
subb
mov
cmp
pop
std
adc
data16
mov
jno
mov
mov
test
mov
cmp
mov
pop
cltd
fiaddl
fistpll
cwtl
inc
or
pop
mov
add
push
add
dec
sub
lds
push
test
enter
dec
sbb
and
pop
jge
cmpb
out
xor
aam
insl
cmp
mov
les
sub
xor
mov
fidivrl
jbe
dec
xchg
ja
xor
lea
pop
repz
fsubrs
and
jecxz
popa
or
imulb
and
xor
scas
add
mov
pop
ljmp
fstpt
adc
xchg
out
mov
lret
mov
add
jnp
leave
push
repnz
adc
push
aas
push
call
jge
into
ja
sub
xchg
cmp
add
pusha
stos
out
hlt
lret
sahf
clc
xor
cmp
sub
fwait
push
sub
cmp
and
push
xchg
mov
test
shlb
and
xchg
shlb
inc
and
mov
repz
adc
scas
add
add
sbb
cmp
bound
mov
cmp
loope
sub
mov
sub
imul
in
push
and
shr
setbe
popf
or
mov
xor
lea
pop
in
dec
stos
das
or
test
mov
nop
in
jg
je
imul
es
fistps
or
lret
inc
add
aas
shrl
inc
fiaddl
cmpsl
mov
dec
in
mov
bound
popa
or
push
lea
loopne
mov
mov
xor
out
imul
push
and
cmp
inc
pop
test
icebp
inc
ljmp
lods
push
cli
rcll
pmuludq
mov
sub
sarb
lods
dec
faddp
pop
insl
mov
int
mov
in
sahf
scas
icebp
std
movsl
fnsave
pushf
or
test
mov
sbbb
loope
clc
jl
jle
mov
push
out
cmp
cld
popf
mov
push
cmc
test
pop
dec
ljmp
rclb
or
mov
mov
push
rcll
jl
dec
push
js
stos
out
dec
imul
xor
xchg
fldcw
add
arpl
pop
frstor
mov
mov
in
inc
fstp
mov
xchg
andl
and
fdiv
adc
cmpsl
scas
xchg
fbstp
cmp
mov
and
repnz
push
or
fsubr
pop
das
push
leave
shrb
pop
lock
mov
sbb
inc
mov
das
fldl
add
mov
xchg
lcall
int3
outsl
jbe
ja
popa
test
mov
mov
rolb
push
rol
push
mov
dec
and
add
sbbb
or
leave
mov
xchg
add
enter
push
mov
lret
adc
pop
or
jnp
pusha
or
push
and
aad
testb
das
test
shlb
popa
fbstp
test
fldenv
and
pop
in
std
popa
adc
sub
jo
jae
in
mov
stos
outsb
dec
and
jmp
jl
pop
pop
cmp
negb
jmp
jecxz
lods
adc
lods
pusha
push
jle,pn
cld
js
out
and
test
popa
bound
mov
lea
jge
ret
xor
jno
sbb
inc
xchg
inc
adc
mov
icebp
addl
iret
mov
addr16
push
int3
test
push
cmp
out
dec
cld
into
xchg
cmp
and
testl
pop
mov
notl
in
lds
xor
sub
cmp
pushw
cmpsb
outsb
cmp
xchg
pop
cmpsb
cli
ljmp
xor
icebp
addb
je
sbb
ret
pop
dec
hlt
xor
ja
add
sub
mov
pop
pop
call
adc
fst
stc
inc
adc
mov
fsubrl
xor
mov
pop
dec
enter
adc
push
adc
pop
scas
lds
stos
je
cmp
fs
sti
xchg
cltd
mov
push
fidivs
aad
xor
clc
insb
pop
scas
imul
push
bound
lahf
lahf
sbb
enter
ret
xor
lds
repz
add
cli
or
int
mov
xor
pop
or
sub
andl
stos
shll
sbb
cmp
pop
insl
dec
or
mov
mov
lock
add
int3
and
mov
enter
inc
sbb
ret
loop
pop
xor
ja
cltd
adc
lods
adc
popf
in
sbb
sbb
push
sub
ja
sub
dec
pop
inc
jp
cmp
cmpsb
not
sbb
ret
xlat
sbb
push
mov
cmp
adc
dec
mov
fistpl
out
pop
stos
stos
jno
fdiv
arpl
cmpsl
add
loope
xor
mov
enter
push
mov
sub
cltd
fwait
xlat
adc
pop
dec
cmpsl
ljmp
aam
dec
xchg
in
xchg
pusha
insl
leave
roll
cmp
movsb
in
xchg
push
lcall
or
push
icebp
cmp
jp
stos
dec
imul
and
push
jae
dec
stos
mov
test
and
cwtl
cmp
out
mov
lret
push
or
sahf
xchg
mov
hlt
dec
jne
fs
loop,pn
nop
jle
iret
xchg
cmpsb
pop
rorb
sar
in
fidivrs
pop
push
pop
lea
mov
icebp
xchg
or
mov
leave
push
and
aam
dec
ds
fnstcw
out
add
add
clc
and
mov
gs
cmpsl
cld
lahf
in
in
mov
inc
mov
push
xchg
outsl
mov
pop
mov
push
rcrb
hlt
push
xor
mov
mov
jp
adc
into
inc
fsubrp
lock
adc
ljmp
ret
clc
push
into
js
dec
inc
push
mov
sbb
mov
je
sahf
inc
lock
dec
rol
pop
int3
push
mov
shrb
popf
jae
aas
inc
roll
ja
push
clc
inc
inc
add
mov
rcrb
loop
test
sahf
jbe
mov
push
push
je
xchg
rolw
in
repz
xchg
mov
push
mov
add
movsb
add
aaa
pop
int3
mov
mov
fimull
movsb
xor
test
inc
and
daa
or
mov
je
inc
in
sub
mov
lahf
sbb
xor
stos
dec
xchg
xlat
stos
mov
iret
pop
outsl
xor
rcrl
insb
ds
mov
aas
dec
fwait
dec
repz
mov
jl
pop
inc
out
out
movsl
les
sbb
or
mov
inc
lock
mov
fcmovnu
outsl
fucomip
test
ss
das
add
jge
mov
ljmp
jno
shl
and
push
pop
mov
arpl
mov
rclb
jle
in
sub
sti
sahf
rcrb
ficoml
pushf
xor
dec
lret
add
lods
outsl
aaa
mov
mov
push
jecxz
mov
aam
cmp
push
cmp
jne
sub
xchg
and
lret
sahf
sbb
test
mov
pop
fisttps
iretw
xor
jge
pop
in
adc
pop
in
in
stos
ljmp
push
scas
xor
dec
xchg
jmp
add
add
or
lock
sbb
cmp
loop
mov
sbb
or
and
aas
sahf
cmp
cmp
rcrb
shrl
push
jne
sbbb
pop
je
cli
ja
pop
jecxz
mov
movzbl
jmp
adc
jg
jno
repnz
inc
dec
inc
daa
inc
ljmp
outsb
push
inc
push
xor
add
add
cs
xchg
aaa
aas
bound
or
or
ss
mov
sbb
mov
pop
rorb
dec
cli
test
push
jns
mov
cmp
dec
push
filds
pop
lock
mov
or
xchg
mov
cmp
jecxz
pop
inc
pop
push
and
sub
ret
pusha
shll
push
das
cmp
in
stos
mov
inc
into
adc
or
cmpl
mov
sub
sbb
dec
ljmp
rcl
dec
icebp
jo
test
push
ss
and
pop
ja
pop
cmp
adc
cli
dec
mov
cmp
leave
and
lock
inc
test
push
int3
cli
jne
std
add
je
push
and
jmp
pmaxub
pop
adc
lret
popa
mov
mov
nop
jge
jno
dec
repnz
sbb
sub
adc
out
lret
and
ret
test
inc
sarl
push
cmp
adc
lahf
dec
js
xchg
loope
insl
lock
jmp
stc
cmp
mov
sar
cwtl
stos
inc
lret
or
mov
mov
out
add
mov
ud0
dec
sbb
xchg
xchg
mov
clc
cmp
sub
xor
test
pop
loop
sub
jns
in
push
into
sub
jo
cmp
sbb
xor
xchg
xchg
into
sub
mov
scas
and
jge
sahf
push
addr16
xchg
adc
js
mov
scas
sub
ror
mov
pusha
in
sub
std
fwait
into
mov
pop
add
sbb
jge
sarl
push
fistl
xchg
or
test
repnz
js
add
insl
pop
adc
push
cmpb
lock
jo
mov
cmp
sbb
sbb
mov
mov
aam
int
cmp
mov
stos
cmpb
subl
xchg
add
loop
mov
bound
into
inc
cmp
xlat
ja
test
jge
inc
test
mov
mov
cli
pushf
outsb
inc
in
int3
rcl
popf
or
mov
mov
movsl
lcall
xchg
push
fstps
push
dec
test
ret
lcall
sarl
pop
sbb
cmp
or
xor
lret
mov
jp
adc
inc
mov
push
push
scas
je
push
mov
sahf
xor
imul
push
sub
mov
inc
pop
repz
sbb
cs
lock
aaa
dec
pop
jg
repnz
xchg
xor
mov
xor
std
sub
cmc
push
pop
test
mov
popa
mov
pop
jnp
loope
add
lcall
mov
je
xchg
repnz
sbb
xor
loopne
out
mov
ss
jmp
add
sbb
in
bound
add
pop
in
mov
push
repz
test
pop
adc
in
mov
outsl
mov
mov
bound
xchg
out
out
decb
xor
pop
cmp
and
pop
out
xabort
das
inc
insl
es
or
pop
push
or
lahf
lcall
xchg
aam
jp
fldenv
xor
adc
xor
and
hlt
or
inc
push
mov
xchg
jne
ja
cmpsb
stos
cmp
pushf
clc
test
and
xor
add
xlat
lock
sti
push
inc
or
mov
insb
js
push
mov
inc
adc
jecxz
mov
aaa
sahf
dec
add
xor
aas
mov
jno
jno
adc
pop
data16
and
xchg
sti
insb
arpl
or
stc
pushf
gs
ljmp
in
subb
loopne
push
gs
mov
hlt
stos
call
lods
mov
pop
aam
cmc
aam
cltd
adc
dec
test
dec
fnstcw
scas
mov
pop
add
scas
sub
aam
cmp
add
xchg
or
inc
movsb
dec
cmc
inc
cmp
xchg
inc
fdivl
push
testl
cld
or
cmpsl
add
pushl
out
aas
xor
cwtl
xchg
xlat
bswap
addl
orl
insb
jno
inc
jo
push
mov
xor
push
leave
push
xchg
cmp
mov
mov
divb
xchg
dec
sti
push
or
pop
xchg
adc
lea
loopne
int3
add
pop
cmpsl
lcall
hlt
sti
add
mov
cld
test
cmp
lahf
xlat
dec
inc
dec
shr
cmpsl
fmul
popf
das
fidivs
ret
iret
frstor
xor
fimuls
or
or
xchg
imul
scas
xor
mov
lods
xchg
leave
jmp
add
stos
shll
mov
add
movsl
mov
mov
xor
xor
dec
pop
and
dec
xor
insl
fdivr
lods
loopne
fcoml
inc
jge
adc
inc
mov
pop
mov
imul
mov
pusha
dec
push
mov
xor
jbe
shrb
and
stos
hlt
cs
filds
jecxz
incl
cld
mov
icebp
in
xchg
cwtl
xor
stos
loope
adc
dec
mov
cmpsb
push
sub
repz
mov
xorb
pop
in
pop
ficomps
lods
pop
xor
inc
sti
mov
fisttpll
imul
out
cltd
lds
mov
leave
cmp
repz
sahf
loope
roll
mov
shr
and
je
mov
lock
dec
jae
pop
call
push
xor
jnp
or
inc
ss
dec
lcall
push
cmp
pusha
and
int3
inc
xchg
jno
push
data16
shll
imul
out
out
daa
mov
mov
lods
cltd
mov
aad
stos
xchg
test
int
jmp
adc
sbb
je
mov
lahf
fadd
dec
xor
clc
stos
ljmp
jle
imul
sbb
mov
cltd
pop
fwait
popa
loope
iret
pop
and
dec
lret
dec
cmpsl
mov
sbb
cltd
cmp
je
xor
ret
cmp
in
addr16
cs
sub
and
jnp
std
jns
cmp
xchg
xchg
sbb
jmp
or
test
into
xor
jb
jnp
out
adc
lcall
notb
je
lock
xchg
mov
xchg
add
jmp
inc
adc
push
adc
dec
sbb
ljmp
add
mov
enter
rorl
or
add
xor
mov
test
jecxz
inc
mov
imul
jl
arpl
roll
dec
mov
test
daa
call
xchg
rolb
or
push
iret
js
lcall
push
or
pop
addr16
orl
mov
xorl
adc
popf
jp
pop
mov
orb
or
mov
mov
lcall
enter
loopne
and
push
xchg
or
and
mov
rol
gs
jl
inc
out
je
inc
cltd
dec
loopne
stos
sub
add
xor
or
mov
adc
mov
vorpd
add
sti
inc
testl
dec
into
bound
outsb
jl
dec
test
stos
out
ds
aaa
push
into
mov
mov
ret
stos
mov
lcall
mov
push
xchg
imul
lahf
repnz
es
xchg
sbb
and
inc
xor
mov
cmp
iret
jle
leave
in
cltd
mov
sub
in
xchg
dec
xchg
dec
xlat
jmp
dec
fimuls
pop
xlat
mov
pusha
mov
ret
mov
fnstenv
notb
add
inc
cmp
cmc
pop
insl
add
mov
jmp
in
fistl
cmp
into
sub
fisubrl
call
jp
out
fldenv
stc
das
jbe
sub
xor
adc
icebp
mov
mov
ss
jnp
mov
xchg
push
icebp
add
imul
sub
xor
and
jbe
js
add
sbb
sub
jbe
hlt
push
cltd
inc
adc
dec
stos
push
stos
sbb
inc
daa
lods
jb
fldcw
mov
ja
scas
xor
stos
repnz
dec
xor
cmc
cmp
sahf
and
xchg
popf
dec
out
out
insl
repz
lods
popf
fwait
out
pusha
jmp
dec
fmul
fiadds
incb
mov
mov
add
xor
je
out
loopne
mov
lea
or
mov
sub
push
paddsb
cld
or
gs
mov
jno
cmp
jb
rorb
rclb
aaa
nop
xor
add
sti
sbb
iret
jno
mov
test
mov
sbb
lahf
jmp
or
push
mov
push
popf
mov
cwtl
jo
push
das
test
add
mov
mov
mov
scas
jg
dec
insb
pop
adc
pop
push
call
outsl
movsl
jmp
insl
daa
pop
imul
push
out
jmp
mov
add
jae
gs
nop
jge
jns
out
shrl
sub
dec
imul
inc
push
jle
cmpsb
pop
scas
idivl
enter
push
and
divb
subl
mov
xlat
cltd
ss
cmpsl
pop
sar
inc
pop
repz
mov
ss
dec
out
jmp
inc
pushf
jge
pusha
jno
lret
pop
outsb
loop
jne
repnz
mov
cwtl
xor
fstl
iret
fnstenv
dec
jns
cmc
mov
and
xchg
sarb
cmp
test
test
dec
sub
push
lahf
cmp
and
out
push
dec
xor
inc
jmp
push
cmpsl
and
sete
push
xchg
jbe
push
or
sbb
aad
jnp
push
ljmp
insb
bound
out
or
pop
inc
jae
and
cmp
mov
cmp
inc
idiv
sbb
mov
outsb
push
mov
push
inc
in
xchg
divb
insb
test
in
xor
and
ds
jnp
sbb
shlb
insl
push
in
or
jg
pop
jmp
sbb
loop
mov
add
jp
xchg
mov
pop
es
pop
rcrl
inc
stos
adc
outsb
sti
sbbl
mov
lds
lar
test
push
jp
sbb
mov
aad
mov
jo
stos
test
aas
add
cwtl
push
mov
andb
add
fsubrp
nop
xchg
dec
cmc
lds
sti
out
xchg
pop
xor
push
mov
icebp
mov
fiaddl
dec
add
inc
sub
imul
dec
and
dec
add
dec
inc
pop
mov
divl
mov
jno
jg
addb
cmp
lock
xor
out
int
add
xlat
fcomps
add
rcr
mov
cmp
cwtl
lahf
xchg
data16
fstp
mov
cmc
leave
cvtps2pi
jno
sub
icebp
bound
pop
icebp
decl
jo
jp
aas
in
jle
push
lahf
dec
nop
std
push
ja
or
fisttpll
sub
testb
mov
nop
fsts
push
addl
test
je
stc
pop
mov
inc
cwtl
jmp
add
cmpb
fdivrs
in
data16
pusha
out
mov
xor
jne
push
fst
repz
mov
rcl
loopne
insl
pop
cltd
insb
push
cmp
dec
test
push
insb
sbb
daa
adc
xor
rcll
pushf
mov
bts
jp
jne
mov
add
xbegin
xchg
pop
push
mov
pop
xor
sbb
leave
jae
pop
add
scas
lahf
add
in
add
sbb
pop
addr16
lock
lahf
cld
sub
mov
je
jno
jno
xchg
jne
mov
fwait
lea
popf
push
and
aaa
gs
call
adc
inc
or
js
movsl
jg
sbb
adc
push
or
xlat
repnz
dec
in
test
or
dec
int3
jne
pop
fisubrs
call
mov
xchg
pop
add
mov
push
xchg
adc
mov
test
cmc
je
icebp
inc
sarl
mov
add
gs
dec
rcrl
xor
sbb
push
xchg
mov
das
out
out
jae
mov
mov
mov
imul
xchg
cmp
push
and
out
inc
lds
in
js
sub
xor
aad
jl
stos
lcall
sub
mov
ret
mov
lret
cltd
xor
shrb
mov
int3
and
scas
pop
push
rcl
in
pop
enter
cmp
or
add
pushf
push
inc
sbb
mov
xor
lods
dec
aad
sub
lret
mov
sarb
adc
push
insl
xor
push
push
jnp
and
sub
mov
test
es
mov
jae
cmp
xor
fwait
xchg
xor
mov
call
xchg
pop
rsm
pop
sbb
pop
pop
dec
rcrl
pop
dec
loopne
dec
int3
fsubrp
sub
jbe
pop
test
sub
xor
jae
hlt
sti
stos
enter
xchg
push
sub
pushf
out
xchg
je
neg
sub
ds
pop
pop
or
repnz
xchg
sbb
xor
mov
shl
filds
and
cmpsl
push
sub
out
inc
ret
sti
cltd
mov
icebp
ficoml
adc
addr16
add
dec
push
mov
aaa
mov
ret
pop
add
je
out
cld
lock
int
mov
dec
jecxz
inc
mov
arpl
sbb
addr16
cli
daa
std
jle
scas
andl
testl
push
negl
enter
jns
movsl
lods
cmp
xor
fs
push
das
xchg
cmp
or
sbb
test
pop
ss
fldl
push
inc
mov
ljmp
mov
and
rorb
and
subl
fsub
loopne
imul
xor
rclb
popf
sbb
lcall
fistpl
pop
xchg
popa
outsl
pop
sub
pop
daa
je
mov
out
jg
gs
int3
popa
cmp
sub
add
inc
cmp
xor
jmp
pop
jbe
lods
icebp
add
push
or
out
push
repz
icebp
nop
jle
pop
inc
add
cmp
mov
adcb
xchg
outsb
and
ficomps
clc
inc
repz
dec
add
sarb
or
fisubs
aaa
mov
and
int3
clc
popa
lock
and
inc
xchg
fcoms
sar
push
dec
test
ret
lock
dec
sub
and
insl
scas
pop
in
mov
dec
mov
cmc
sub
or
cmpsb
pop
dec
ja
or
cmp
push
jg
and
insl
sbb
dec
rcrb
lods
stos
dec
call
adc
pop
lahf
push
and
data16
xor
int3
jno
cmp
lcall
xchg
mov
inc
push
aaa
aaa
push
pop
pop
mov
and
int
or
push
push
adc
or
jle
inc
sub
cld
jle
sub
push
and
shr
xor
cmp
stos
cmp
les
add
repnz
jecxz
sbb
loope
mov
and
in
xor
dec
fs
leave
es
inc
aad
out
repnz
jns
sahf
rol
push
jge
inc
mov
out
lahf
dec
out
pop
movb
out
mov
jns
cmp
nop
jg
imulb
testb
push
int3
aas
icebp
xor
push
fistpll
jnp
mov
mov
aam
and
mov
pop
dec
jae
inc
popf
mov
add
stos
adc
xor
addr16
mov
rcr
int3
mov
mov
je
fs
insb
scas
data16
mov
cmc
rcl
filds
repz
sub
neg
jmp
cmp
mov
and
and
mov
int
pop
sti
inc
popa
pop
jl
clc
shlb
scas
add
stos
mov
out
orl
inc
jmp
push
hlt
inc
stos
ret
ret
sti
pop
mov
push
idivl
pop
jmp
jmp
push
arpl
xor
popa
jno
arpl
cmpsb
ss
sub
test
popa
xchg
sub
pop
movsb
lcall
test
cmp
ret
fdivrl
daa
pusha
call
loope
out
dec
pusha
shr
hlt
ret
mov
cmp
andb
in
mov
jb
test
jnp
lret
mov
mov
dec
push
dec
in
adc
pop
aas
sbb
add
rclb
inc
xchg
test
popa
call
push
adc
xchg
mov
adc
pusha
fcmovne
fdivrl
test
jbe
cmp
lock
xor
cmpb
outsl
and
mov
pop
cli
mov
cmc
xor
sbb
test
fadd
gs
mov
mov
cs
ljmp
dec
lock
mov
pop
jo
mov
outsb
pop
add
aaa
lret
in
fs
ss
scas
cltd
into
inc
cmp
mov
iret
lret
lret
fbstp
sbb
or
scas
inc
in
xchg
inc
push
jl
fisttps
sysenter
push
fdiv
das
and
lds
xchg
enter
jle
mov
icebp
test
outsb
fldcw
dec
sub
cltd
push
mov
push
stc
jno
push
je
fisubl
mov
sub
insl
jge
jb
sub
xor
mov
dec
jle
inc
xchg
addl
repz
ss
in
pop
subl
mov
in
jp
sbb
icebp
push
lds
fisubrl
insb
repnz
pop
xchg
jns
sub
jmp
jnp
xlat
sbb
push
divl
and
jmp
fwait
adc
jbe
inc
inc
test
jno
push
jl
jmp
sub
push
sarb
adc
out
mov
mov
aaa
out
add
std
pop
daa
lea
and
sub
movsl
inc
jns
dec
push
int3
enter
mov
sub
add
add
jne
lods
aam
cmpb
cmp
cld
mov
es
and
add
mov
cltd
and
movsl
xchg
call
leave
jae
xor
fsubs
fstps
pop
outsl
and
cmp
pop
mov
cmp
add
arpl
or
inc
into
fwait
adc
leave
ds
mov
mov
aas
int3
test
mov
inc
inc
hlt
rol
adc
jecxz
je
adc
out
pusha
testl
in
mov
push
push
inc
mov
test
lods
stc
jg
stos
adc
jge
sub
daa
xchg
cld
jns
fmulp
loope
pushf
cmp
dec
rcl
and
test
in
int
dec
mov
inc
dec
and
cmc
adc
pushf
fiadds
push
jbe
nop
subb
mov
mov
push
sub
lods
mov
test
icebp
jb
dec
cs
nop
fldlg2
stc
sbb
sub
xor
leave
lret
xor
out
lcall
mov
inc
addl
push
lret
dec
push
xor
and
dec
ret
scas
xor
push
pop
iret
mov
xor
aam
mov
jp
jbe
mov
mov
fldcw
xor
sub
jp
and
push
and
xchg
stc
repz
sub
and
pop
inc
fildl
fdiv
iret
cld
xlat
les
in
cwtl
es
push
loope
mov
mov
mov
in
sub
fstp
jns
add
addb
xchg
mov
xor
push
sahf
adc
cmp
xor
push
call
pop
cmpsl
cmpsb
jecxz
imul
push
push
xlat
cld
mov
jecxz
lea
pop
and
pop
mov
arpl
and
sub
jo
stos
inc
aaa
mov
and
or
xchg
mov
xchg
das
sbb
lret
or
lea
jge
and
xchg
pop
adc
cltd
jo
push
mov
ds
js
lahf
lret
mov
icebp
pop
cmc
ficoml
adc
sbb
or
jb
mov
dec
adc
into
cmc
adcb
jge
or
es
ja
icebp
mov
mov
pop
mov
sbbb
stos
sbb
test
xchg
xchg
mov
shrl
sbb
jle
add
dec
push
outsl
jecxz
repz
fucomi
jge
gs
push
outsl
adc
mov
sbb
outsl
mov
cmp
stc
lods
xor
push
ret
popf
xor
jae
adc
add
jo
mov
cld
test
jmp
add
loope
aas
add
rolb
push
jns
mov
in
lock
or
fidivs
mov
lcall
mov
mov
lcall
or
scas
lods
mov
lea
mul
leave
and
iret
out
fwait
ss
jl
idiv
je
lds
xor
in
dec
jnp
sub
test
jp
pusha
lret
sub
stc
imull
xchg
insb
outsl
icebp
sar
push
sti
add
xor
cmp
jle
and
sub
pop
mov
scas
iret
push
mov
lret
orb
adc
inc
rclb
fs
fyl2xp1
cld
jp
add
cmp
push
push
add
ss
out
aaa
mov
mov
gs
xor
mov
lcall
hlt
loope
mov
sub
push
std
movhps
xchg
insl
dec
lret
pop
xchg
inc
dec
daa
test
iret
mov
jns
jle
sarb
xor
mov
and
xor
in
movsb
pop
jno
mov
sbb
sahf
dec
push
jg
cltd
popa
xor
mov
cmp
sbb
movsl
inc
jns
dec
cwtl
imul
dec
leave
hlt
pushl
incl
jns
cmp
mov
adc
xchg
add
cmp
push
out
mov
rorl
pop
push
rcll
loopne
pop
pusha
cmp
add
clc
cs
stc
fsubrl
loop
or
loopne
cs
int
inc
jne
fs
lahf
aas
xchg
hlt
ret
push
mov
inc
jg
mov
pinsrw
leave
sbb
adc
cmp
dec
lods
xchg
mov
sbb
mov
jg
mov
int3
scas
lahf
xlat
in
cmp
int3
pusha
ret
int3
push
data16
xchg
push
shlb
notb
jae
sahf
js
mov
cmpsl
pop
jb
add
jmp
outsb
inc
leave
inc
mov
adc
and
ret
shrb
jne
shrb
or
test
nop
xor
sbb
les
xchg
filds
das
adcl
cmp
inc
xor
mov
pop
popf
test
inc
mov
lret
mov
test
outsl
rcrb
or
repnz
and
pop
sbb
js
out
xchg
dec
and
push
out
loope
sbb
mov
fneni(8087
sbb
xchg
mov
inc
stc
stos
and
xchg
push
stos
lahf
ja
mov
push
sbbb
jmp
jg
sbb
stos
out
xor
and
mov
cli
fbld
shl
sti
sub
cmp
fsubs
jmp
or
out
pusha
test
and
or
mov
dec
out
data16
in
dec
pop
inc
and
cmp
or
jbe
je
inc
enter
lahf
or
repz
dec
lret
mov
popa
pop
pushf
stos
mov
jg
mov
push
fcompl
jl
push
jmp
lods
cmc
adc
pop
push
adc
stos
jns
jg
dec
rolb
jnp
jge
fs
ss
pop
in
jno
adc
shlb
repz
jmp
or
or
ss
mov
fsubs
pusha
inc
ja
mov
jnp
bnd
je
ficoms
fstps
and
mov
out
cltd
pop
mov
shlb
fisubl
jle
dec
out
fstl
inc
xor
popf
shl
jae
fcmovne
xchg
insl
dec
test
xchg
es
inc
mov
fs
pop
mov
iret
mov
lods
xor
pushf
sub
adc
cmp
faddl
lahf
stos
pop
and
les
loop
lcall
jns
add
int3
pop
inc
hlt
outsl
mov
xchg
xor
iret
movsl
insb
mov
sar
out
sbb
jno
mov
cmp
fs
into
pop
add
insl
ret
daa
mov
mov
mov
jmp
cmp
fnstcw
jbe
xlat
pop
daa
mov
jl
xorb
test
xchg
les
adc
jecxz
scas
push
push
sub
and
das
push
hlt
or
push
inc
cld
jb
imul
jge
push
jne
sub
xor
dec
call
jno
sub
pusha
xchg
ds
mov
lcall
push
jne
cmc
fmul
adc
inc
aad
cmp
sbb
and
mov
push
push
bound
mov
xor
les
or
aas
fsubs
hlt
xor
push
mov
out
mov
ds
pop
sti
mov
cmpsb
adc
cmpsb
lods
scas
decb
rcl
push
mov
test
adc
out
jle
ret
lcall
and
data16
sub
fdivr
mov
into
int
inc
jecxz
popa
test
mov
cmp
out
rorl
outsl
pop
sbb
push
cmp
mov
leave
ficoms
jo
insb
ss
fs
mov
jle
dec
sarb
mov
repz
xchg
and
sahf
jmp
cmpl
jmp
dec
mov
leave
sarb
out
movsl
push
mov
mov
or
out
in
in
iret
and
mov
dec
or
add
leave
in
sub
mov
sbb
cmp
or
lret
pusha
fidivs
pusha
dec
leave
fstpt
and
mov
test
dec
inc
fcmove
xlat
or
jmp
and
mov
bound
sub
js
aam
out
test
xchg
les
sti
mov
sarb
sarl
and
sbb
sbb
lea
mov
ret
cmpsb
fidivrl
sbb
adc
sub
jae
dec
jns
mov
push
outsl
aam
pop
inc
xchg
ficoml
pop
adc
icebp
mov
lcall
ss
mov
pop
call
lock
les
shl
xchg
jecxz
pop
sbb
xor
scas
notb
fwait
cmpsb
out
push
in
xchg
fisubrl
nop
add
out
sbb
imul
adc
xchg
and
or
mov
es
repz
rcr
add
negb
pushf
jge
push
add
jno
inc
push
ljmp
adcl
test
addr16
fwait
push
aaa
stos
push
cmc
sub
mov
ljmp
sbb
fsubrl
cli
loopne
cmp
mov
push
imul
push
push
sbb
lods
pop
aad
out
das
push
sub
mov
repnz
ret
mov
mov
decb
push
push
sbb
xchg
jg
rcrl
push
std
xor
mov
jbe
std
jecxz
test
push
rcll
repz
loopne
data16
out
movsl
adc
sbb
testl
pop
dec
test
cmp
cmc
xchg
add
stc
jnp
mov
test
test
xchg
aad
xor
cmp
cmpsl
dec
lock
and
cwtl
mov
out
loop
les
dec
or
roll
repz
xor
mov
int3
mov
cmp
sub
push
cli
add
mov
mov
int
mov
cmpsb
push
push
add
fst
cmp
mov
mov
ss
inc
dec
leave
mov
jmp
xchg
enter
sbb
fcmovne
scas
out
in
lods
daa
push
adcb
jmp
mov
lret
xchg
inc
and
xchg
fidivrs
xor
lock
and
je
sub
popf
jge
inc
insb
scas
jp
xchg
popf
cmpsb
imul
in
xor
xchg
and
jmp
sbb
fs
mov
or
jb
adc
adc
fldt
mov
or
stos
fdivs
push
repz
aam
sub
adc
jnp
sbb
add
or
aad
aas
adc
jge
push
adc
push
adc
pusha
cmc
lods
sbb
add
addb
repz
xor
push
push
push
pop
pop
rcl
add
int3
xor
test
out
out
mov
in
xchg
mov
rolb
or
std
mov
pop
push
adc
adc
xor
daa
mov
push
mov
add
add
fldt
lahf
mov
mov
int
outsl
mov
mov
fdivrl
xor
arpl
and
cmpl
notb
lods
or
scas
cmp
frstor
out
inc
sbb
stc
dec
scas
mov
ret
fimull
cs
jl
push
xchg
add
xchg
test
push
inc
sarl
cld
in
mov
xchg
enter
aaa
lcall
push
shr
int3
mov
mov
insb
sub
aas
inc
sub
push
jmp
lods
aas
jnp
mov
cmp
xor
les
in
dec
push
idiv
mov
out
fmul
push
xchg
xchg
mov
sti
pop
sbb
jecxz
stos
jl
fnstenv
mov
mov
push
jae
adc
xchg
dec
loope
test
lahf
push
shrb
mov
mov
pop
lods
mov
mov
test
repnz
lcall
cmp
inc
ret
jnp
shr
lret
mov
roll
pop
clc
test
mov
xor
lcall
insl
lods
or
pop
fwait
std
sbb
or
out
jnp
and
or
je
cmpb
jmp
xchg
add
faddl
orl
fs
insb
fldenv
sbb
pop
pop
pop
mov
mov
add
iret
cwtl
inc
push
loop
xor
mov
imul
call
jmp
js
addr16
fistl
adc
jmp
pop
cltd
inc
mov
enter
cltd
mov
into
fidivrl
icebp
scas
add
mov
xor
rorl
jg
dec
sub
int
not
pop
mov
sbb
je
out
rclb
cmc
and
pop
mov
mov
cmp
iret
jmp
popa
gs
ret
mov
pop
add
dec
mov
fwait
ja
psubw
mov
dec
pop
js
adc
inc
mov
lea
mov
inc
cmc
pop
stos
loope
ljmp
jae
into
lret
int3
int3
cmc
inc
loopne
add
loop
lret
mov
sub
and
push
push
outsb
aas
sub
aaa
add
aaa
loop
bextr
or
mov
std
daa
xchg
cwtl
test
out
ror
push
mov
movsb
stos
imul
push
js
jg
pop
imul
mov
out
mov
push
inc
pop
sbb
inc
mov
adc
jecxz
mov
repnz
rorl
hlt
jae
repnz
test
cmp
push
inc
test
xchg
and
jb
xlat
mov
sti
mov
jbe
jae
repnz
adc
sub
fsubs
adc
inc
adc
xor
call
pusha
push
xchg
rcrl
in
jae
lods
mov
les
out
outsb
test
in
and
and
aam
imul
and
adc
fwait
jle
dec
xchg
and
push
test
adc
out
push
out
test
cld
int
add
mov
fs
cmpsl
and
lea
jle
pop
iret
pop
jo
and
xor
push
jbe
es
pop
sub
lods
and
push
stc
fwait
ds
imull
aad
idivl
leave
pop
jg
jecxz
fisubrl
xchg
insb
pop
arpl
xchg
lds
scas
lret
stos
cmp
add
fs
dec
inc
xor
push
pop
and
enter
aaa
outsl
push
test
mov
mov
mov
enter
not
rolb
mov
and
mov
shlb
sbb
xchg
pop
and
mov
push
cmpsb
mov
fwait
dec
rolb
jle
filds
xchg
pop
std
jns
in
sub
add
xchg
jmp
dec
cmp
xchg
loope
xchg
sub
js
imul
ret
imul
sbb
cmpsl
dec
mov
fistps
push
scas
pushf
int3
mov
popf
lea
arpl
push
push
jle
test
dec
in
xchg
insb
xor
rcrb
mov
xor
xchg
dec
or
adc
fmuls
mov
xor
inc
lahf
xchg
inc
jmp
ljmp
and
pop
idivb
rep
fisttps
xchg
add
and
sub
popf
repz
fwait
xchg
popa
int3
mov
icebp
xor
cmpb
jp
repnz
sbb
or
adc
jbe
adcb
int3
lahf
inc
outsb
arpl
sbb
test
mov
pop
xchg
sub
int
loope
inc
jns
ret
and
loope
in
lea
cs
scas
adc
mov
add
scas
dec
ss
cmp
mov
cmp
nop
dec
xchg
lret
mov
or
cmp
push
adc
sbb
mov
pop
xchg
xchg
cmp
push
clc
sbb
ljmp
add
cld
adc
jecxz
cmp
mov
add
out
jns
jo
test
pop
jecxz
jns
sbb
pop
shrb
cwtl
pop
insl
rolb
daa
pop
out
cmp
jle
in
mov
mov
hlt
mulb
sbb
mov
mov
and
mov
loop
mov
mov
push
pop
in
push
cmpsb
insb
or
inc
fists
sub
push
add
insb
inc
cmp
lret
or
pop
dec
into
cli
sbb
out
xor
push
ss
mov
aam
cltd
stos
xorb
sub
xchg
insl
mov
mov
and
jno
pop
sub
dec
out
pop
xchg
mov
dec
pop
inc
jg
cs
imul
inc
sub
fnstsw
mov
pop
shrl
mov
ficoml
fwait
std
std
pop
xchg
jmp
sahf
out
pusha
out
jb
push
rcrl
cld
and
cmp
dec
dec
lcall
movb
jo
push
in
ds
les
push
aad
dec
subb
xor
daa
inc
and
daa
inc
jns
idivl
cmp
sub
add
dec
iret
cld
pop
call
aad
fsubrs
xlat
repz
jo
xor
cmpsl
mov
add
fs
fwait
xor
test
bound
xchg
jb
mov
mov
imul
or
jmp
mov
mov
sub
xor
in
push
xchg
cmp
je
dec
push
test
insb
adc
xchg
inc
lahf
cmp
enter
test
roll
repz
mov
sub
pop
xlat
xchg
pop
jmp
mov
inc
xorb
cli
mov
xor
push
xchg
in
arpl
icebp
fcmove
fdivs
insb
shr
and
push
mov
xchg
dec
shrb
mov
dec
inc
push
xchg
push
pop
xor
mov
daa
ret
sysret
mov
sub
loop
test
ds
fists
xlat
push
test
dec
fisubrs
sbb
xor
sbb
rcl
cmpsb
adc
test
call
ret
pop
xor
std
das
inc
mov
adc
jns
in
stc
adc
mov
or
std
lret
sbb
pop
mov
cmpsb
fistpl
adc
lock
mov
xor
cmp
dec
mov
mov
push
adc
or
sub
movsl
repz
jg
adc
bound
jecxz
std
pop
ja
sarb
int
imul
shll
out
sub
push
jle
jae
insb
in
js
into
popa
lahf
dec
sbb
clc
fs
push
push
push
cwtl
arpl
push
mov
cld
orb
in
xlat
aam
xchg
shlb
jne
sar
std
jbe
dec
pusha
filds
shlb
lret
sti
mov
pop
js
jnp
adc
out
mov
jp
xchg
clc
pop
pop
mov
sbb
in
push
stos
or
and
in
inc
push
shl
test
xchg
cmpb
adcl
push
mov
and
push
cltd
push
les
cmp
shr
in
or
mov
dec
mov
mov
repnz
jns
leave
inc
xchg
lods
pusha
loope
and
adc
mov
or
or
or
xor
cs
js
dec
mov
and
testb
mov
xchg
lahf
sub
int
movsb
or
lods
sub
xor
xchg
fimuls
sbb
and
test
in
insl
add
cmp
repz
pop
mov
mov
daa
das
push
or
lods
mov
cltd
cmpsl
mov
fisubl
add
mov
das
cmc
les
data16
lea
imul
out
jae
dec
aad
fcomps
or
mov
xchg
aas
mov
push
je
es
xor
insl
iret
inc
push
push
jnp
jnp
inc
xor
adc
iret
mov
scas
jo
mov
cmpl
in
in
test
adc
inc
inc
loope
stos
mov
cs
aas
sbb
dec
lods
mov
jle
mov
sbb
dec
cwtl
sahf
mov
lea
mov
bound
jg
pop
faddl
fdivr
movsb
xchg
std
mov
out
hlt
pop
dec
push
pop
aad
xchg
cld
push
cmpsb
nop
fs
divl
shlb
shrl
lods
pusha
dec
stc
add
dec
dec
fdivrl
int3
rclb
dec
cmc
add
icebp
ret
scas
or
pop
cld
cmp
sub
into
lahf
mov
mov
sti
sbb
popf
mov
decl
adc
cs
push
jl
je
js
mov
icebp
test
nop
adc
cltd
addb
xlat
rorl
scas
or
mov
std
dec
mov
dec
rorl
mov
dec
ficoml
push
mov
outsl
mov
jmp
into
jnp
repnz
add
punpckhbw
pop
fwait
jne
sub
stos
sub
dec
cmp
xor
cmp
pop
mov
mov
out
ja
aam
aad
imull
xchg
and
test
clc
stc
std
in
xor
jbe
xor
lahf
fiaddl
insb
lea
mov
call
dec
pop
adc
push
inc
jmp
popf
or
cmpsl
push
jne
push
mov
rcrb
divl
and
pushf
repz
push
popf
enter
js
mov
jg
sub
shl
jl
xchg
idivl
push
adc
pop
icebp
xchg
out
inc
jns
bound
cli
jmp
fxch
fisubs
cmpsb
add
mov
cmp
lcall
mov
or
pushf
or
mov
lea
loope
or
test
cltd
mov
lret
push
cmp
ljmp
mov
sti
inc
outsl
lods
push
push
dec
pop
push
xchg
fld
mov
pop
into
or
cs
aaa
adc
mov
sti
sbb
jae
and
test
mov
pop
int
xor
xchg
sbb
and
popa
roll
and
sahf
fstps
cmp
xchg
cmpsl
xchg
jle
mov
push
jecxz
out
hlt
jbe
vfnmsub132pd
jle
repz
out
xchg
xlat
jge
xchg
pop
inc
aam
scas
cmp
imul
push
ret
fwait
mov
cmp
jg
ds
mov
sbb
push
insb
scas
div
xor
cmpsl
pop
jecxz
sti
aad
popf
cmp
sub
sub
imul
or
aaa
shl
ds
leave
or
mov
pusha
nop
xchg
xlat
call
fnstsw
inc
scas
iret
repnz
xor
cmp
test
or
cli
dec
mov
iret
mov
in
xlat
mov
int
push
mov
and
lret
sub
pushl
xchg
cmp
pop
ffreep
sbb
out
lock
inc
adc
rorb
lock
fwait
jns
add
xchg
sub
dec
shll
rcrb
mov
hlt
mov
xlat
mov
out
xchg
sbb
sub
popw
dec
dec
cmp
push
lods
jge
pop
into
mov
or
loopne
pop
pop
hlt
mov
pushf
fcmovne
mov
push
clc
fidivrs
sub
aas
lcall
pop
jge
and
cltd
and
dec
aas
mulb
rcrl
les
xchg
jbe
mov
inc
push
dec
dec
push
test
xor
ret
rcrl
pop
mov
inc
push
arpl
rcrb
jecxz
stc
not
loop
push
cmp
les
add
mulb
lcall
out
mov
sti
push
pop
popf
lods
xchg
mov
pop
dec
cltd
aas
test
or
inc
ljmp
imul
adc
pop
xchg
dec
dec
sti
out
sbb
mov
ds
andl
dec
cwtl
jp
mov
fs
rolb
loop
outsl
aam
or
mov
inc
roll
adc
jge
jo
iret
or
insb
inc
rorl
dec
sbb
or
out
sub
jle
stos
and
push
outsl
xchg
jmp
int
out
sar
dec
inc
scas
pop
jmp
xchg
mov
sti
xor
outsl
roll
arpl
imul
adc
mov
inc
clc
imul
clc
inc
fwait
pushf
push
shlb
cli
add
xchg
dec
movsb
les
pop
lds
cmp
fwait
dec
jmp
sbb
push
nop
mov
repz
sub
int
ffreep
hlt
rolb
jno
nop
imul
stos
push
xchg
lea
out
cmc
adc
test
dec
dec
pop
pop
enter
mov
cmpsl
add
xchg
mov
add
negl
jbe
je
jnp
push
mov
add
loopne
adc
push
cltd
inc
aas
lods
sahf
cmp
xrstor
adcl
incb
push
je
inc
and
sahf
aad
in
xchg
mov
dec
mov
sarb
clc
andb
pop
jns
das
dec
ret
or
mov
jecxz
sub
loope
xor
push
adc
or
lds
iret
cmpl
clc
in
mov
cmp
daa
sub
pop
dec
gs
xorb
and
pop
ud0
mov
mov
sub
sbb
mov
cmp
and
call
jle
call
daa
popf
mov
loopne
xorl
jo
daa
and
cmp
test
insb
xor
dec
pushf
leave
call
or
enter
dec
add
test
decl
and
rol
cmp
sub
icebp
js
vunpckhps
sub
add
push
imul
lret
not
pop
xchg
int3
xchg
adc
and
imul
xchg
fadd
mov
mov
push
jb
mov
lret
fstpl
cmp
pop
inc
inc
and
sub
xor
cmc
fprem
test
sub
das
dec
xor
jae
xor
repz
int3
jno
stos
mov
pop
mov
jle
cmpsl
outsb
cmp
or
test
sahf
iret
bound
or
xchg
sti
into
xchg
hlt
cwtl
dec
fwait
and
in
outsb
popa
lahf
jecxz
mov
movsl
ss
mov
add
inc
inc
lea
insb
jp
mov
std
fwait
mov
cli
dec
leave
out
lds
aas
mov
xchg
imul
adc
xor
ds
lret
sbb
or
xchg
pop
fldcw
mov
xchg
push
jns
adc
xchg
test
cmp
mov
mov
pop
inc
aam
ljmp
pop
sub
push
push
pop
fldl
stos
fldcw
rcl
lret
cltd
dec
xchg
int
sbb
inc
add
sar
push
popf
ror
push
imul
lret
rcll
stos
ljmp
mov
sbb
pop
fstpl
jnp
xor
sbb
push
stc
cmp
imul
std
addb
js
ret
and
xchg
sbb
ljmp
push
inc
push
push
inc
pop
outsb
sbbl
iret
cmp
pop
nop
jg
testb
xor
mov
nop
xor
cltd
xor
jno
iret
push
enter
stos
rcrl
ret
inc
sbb
sub
jmp
pop
push
out
in
scas
adc
stc
movsb
pop
js
or
popa
jmp
or
mov
mov
inc
lahf
call
mov
sub
fwait
mov
addb
inc
push
or
pop
loop
icebp
mov
out
cmp
or
sub
cmpsb
ja
inc
pop
ret
lock
xchg
ss
xchg
and
add
push
mov
lcall
or
adc
fnstenv
dec
xchg
xchg
mov
push
sub
fists
xlat
js
cmp
lret
push
jo
jnp
push
xor
lret
sbb
cmp
sti
add
cmp
out
sub
gs
aam
cmc
es
cltd
pop
les
inc
pop
popa
push
fiadds
subb
jbe
cld
mov
ror
adc
mov
test
hlt
stc
movl
enter
push
mov
xor
out
and
out
mov
and
or
enter
xor
cmp
push
push
xchg
dec
sub
je
and
inc
stc
into
or
divl
popf
aad
mov
sti
mov
sub
cmp
add
icebp
sub
scas
aam
andl
adcl
aaa
movsl
mov
xchg
movsl
push
frstor
dec
insb
inc
test
in
inc
mov
fdivrl
or
adc
jp
pop
sbb
popf
sub
push
hlt
push
std
sbb
in
ds
cmc
popa
xor
push
and
push
ret
sti
xor
xchg
and
arpl
xchg
pushf
sahf
mov
fwait
and
mov
xchg
cli
lcall
jl
in
outsl
mov
jmp
add
lock
xor
add
sub
jns
sub
sahf
pushf
push
and
pop
outsb
fptan
mov
iret
mov
cwtl
pop
adc
pop
lahf
mov
in
inc
push
in
pop
mov
mov
ja
psadbw
daa
add
imul
add
out
shlb
adc
paddusb
mov
add
daa
mov
fidivrs
inc
dec
movsl
pop
ss
fstp
dec
ss
out
adc
in
loopew
inc
insb
jle
push
fstl
andb
popa
pop
jp
mov
rcll
or
cmp
xchg
movl
rcr
sbb
test
scas
pop
push
sub
inc
cmp
jmp
lea
in
lds
iret
stc
nop
insb
icebp
ds
xor
dec
out
push
aad
inc
rorb
sub
xchg
dec
int
dec
pop
jns
ljmp
nop
cmc
fists
pop
lahf
xor
cmpsl
push
jmp
pop
inc
popa
icebp
sub
jno
repnz
in
pop
das
repnz
cltd
fcmovb
popa
lods
loopne
inc
fistpll
add
and
xlat
or
inc
jl
test
in
cs
or
push
push
stos
xlat
or
jge
mov
les
testb
lcall
push
add
out
add
lods
in
jne
add
fsubrl
push
cmp
out
scas
pop
sub
imul
and
addl
enter
test
pushf
sbb
sub
jp
stos
add
mov
jmp
lahf
bound
dec
inc
clc
nop
pop
cld
jecxz
cld
mov
pushf
or
push
repnz
cmp
cli
lcall
daa
xor
cs
dec
int3
cmp
orl
je
loop
loope
xor
in
mov
lea
jl
sahf
sbb
pop
pop
xchg
pop
add
or
aad
cmpl
loope
xchg
clc
inc
mov
int
add
xor
inc
lods
outsl
dec
daa
inc
movsb
mov
rcl
pop
xor
pop
sti
ret
out
or
loop
sti
ja
mov
scas
lret
je
loopne
pop
jns
push
xor
cmp
or
inc
cltd
sbb
es
imul
outsb
xchg
sbb
lea
and
in
jb
cwtl
cmp
outsb
inc
in
mov
outsb
sahf
lret
mov
lret
shrl
cwtl
sub
mov
inc
cmp
lea
lahf
out
sbb
mov
and
pusha
mov
pop
and
cld
cmp
mov
pusha
mov
cs
jae
das
lahf
loope
in
jnp
adc
and
aad
subb
loopne
lea
mov
dec
in
jg
mov
push
pop
or
pop
data16
mov
out
movsl
pop
inc
negb
mov
subb
push
mov
adc
inc
rcrb
dec
pusha
adc
jle
and
rcr
add
jbe
hlt
dec
add
jecxz
fsubrl
push
lcall
out
into
xchg
xchg
mov
insl
jno
mov
ret
push
iret
jl
pop
push
outsb
and
clc
out
dec
mov
in
add
lcall
repz
sti
cli
ja
cli
mov
jbe
icebp
sbb
mov
adc
lds
hlt
or
mov
gs
mov
lods
arpl
xchg
arpl
mov
adc
jecxz
and
add
fs
imul
bound
test
outsl
rcr
jmp
les
mull
fwait
inc
add
out
insb
imul
push
adc
add
jnp
das
mov
jno
lods
jns
loope
nop/reserved
mov
pop
test
addr16
jo
scas
sub
cmp
jnp
cmpsl
loope
xor
into
jg
in
sub
test
dec
push
enter
xor
xchg
xor
jg
insb
dec
cmpsb
push
fs
outsl
in
pusha
adc
rcrl
mov
add
aaa
insb
xchg
aad
iret
rolb
insl
sbb
cmpsl
mov
in
stos
aas
adc
scas
push
sbb
dec
xadd
add
jb
addr16
fisubs
lea
pop
lcall
pop
lds
push
dec
insl
sbb
jns
mov
mov
pop
stc
icebp
and
xor
ja
test
dec
adc
and
xor
push
mov
clc
adc
enter
pop
adc
and
repnz
sbb
pop
jmp
mov
shrb
pop
jle
out
dec
push
iret
xchg
inc
pop
out
jl
adc
mov
bound
mov
jns
jmp
cli
into
mov
fsubl
dec
dec
ret
js
ljmp
ret
loopne
cmc
cmp
xor
xchg
iret
test
std
and
and
mov
xchg
and
iret
addr16
andl
daa
arpl
gs
outsb
xorl
cmc
push
dec
sarl
mov
xor
cld
push
add
fildl
pop
aaa
fstps
pop
adc
dec
add
inc
inc
in
cmp
pop
iret
dec
or
xchg
das
pop
sub
or
mov
mov
fldl
pop
lods
jo
cmp
dec
lea
inc
lret
jecxz
popa
das
push
pop
pushf
xchg
fistpll
add
fs
add
dec
ror
inc
popf
inc
jg
mov
dec
pop
lods
outsb
test
rolb
xchg
and
adc
mov
lret
fcompl
push
pop
pop
dec
xchg
jbe
lods
or
jmp
mov
repz
mov
jecxz
lods
sub
scas
xor
xor
adc
test
add
add
sub
xchg
enter
outsb
xorb
xchg
dec
ret
ja
push
mulb
fbstp
jnp
sub
outsl
lret
test
pusha
gs
add
hlt
sub
notb
cmpsb
cmp
imul
and
or
enter
sbb
sub
or
nop
sarb
inc
daa
das
inc
or
cmc
shrl
les
shll
ss
inc
mov
cmpsb
iret
mov
and
xor
inc
push
xor
in
jo
mov
in
jecxz
sbb
jle
sti
sbb
movsb
pop
xchg
gs
fwait
andb
loopne
sub
push
ds
inc
mov
loop
gs
push
repnz
dec
xchg
out
leave
js
dec
inc
xor
movsb
jge
adc
pop
jbe
out
mov
xor
pop
mov
mov
xchg
sarl
stos
xor
into
out
out
and
push
jmp
scas
fildl
mov
sbb
mov
clc
js
jns
cmp
lret
outsl
pop
lods
cmp
xor
or
cmp
jns
or
xchg
aas
add
sbb
pop
ljmp
jle
push
mov
pushf
orb
inc
pop
sbb
and
inc
adc
sub
jnp
sub
cmp
sub
jecxz
lods
in
mov
andb
leave
stos
fisubl
dec
mov
sahf
xor
stos
shll
hlt
or
mov
mov
lock
ja
or
inc
int3
add
nop
mov
sub
jl
sbb
ret
jmp
jns
inc
repz
cmp
loopne
mov
andb
add
dec
adc
jbe
ss
mov
cmp
mov
lods
mulb
movsb
call
jl
lds
ss
fst
xor
xor
pop
popf
jo
sbb
push
xchg
adc
addr16
and
fcmove
mov
data16
push
push
adc
mov
cmp
dec
in
mov
cmp
xchg
orb
mov
xchg
jmp
fisttps
sbb
add
push
push
jmp
add
pop
das
mov
mov
ds
mov
sbb
jl
push
mov
inc
cmp
leave
jno
pop
jge
xchg
or
dec
pop
inc
mov
inc
dec
or
int
mov
hlt
adc
ficompl
sub
cwtl
scas
shll
jae
mov
cli
mov
fisttps
mov
cmp
popa
inc
jae
pushf
and
and
in
push
repz
inc
dec
xchg
pop
pop
jae
xor
int
fildl
shll
or
pushf
push
xor
pop
sub
cmpsb
mov
push
mov
mov
subl
adc
idiv
adc
rcl
ret
mov
shrb
cmp
push
jb
mov
out
std
xor
call
ss
push
repnz
inc
inc
cld
mov
dec
push
mov
add
inc
pop
mul
test
jl
jecxz
mov
mov
rclb
and
rolb
jp
xor
sub
xor
dec
mov
js
dec
rcrb
iret
mov
rcrl
xchg
jb
xchg
notl
dec
jb
mov
sub
pop
cmp
in
dec
cli
inc
es
pop
and
push
mov
cmpsb
shlb
hlt
lea
mov
pop
sbb
jns
pusha
push
xor
call
mov
addb
mov
fistpl
sti
xchg
push
test
push
outsl
push
rorb
xor
iret
adc
aam
fimull
es
lods
pusha
pop
ds
cltd
fistps
sub
dec
lock
push
cltd
test
cmp
adc
pop
stos
jp
pusha
cmp
mov
test
ret
scas
stc
pushf
gs
ds
pop
pcmpgtw
adc
inc
std
aas
lret
mov
cmpsb
inc
inc
jae
mov
xchg
shr
imul
mov
sbb
mov
and
sub
cmc
and
add
movsb
std
shlb
xchg
ds
pop
out
bound
sub
je
ja
ljmp
popf
jg
and
into
mov
aaa
sbb
dec
and
mov
js
jnp
sub
pop
jge
js
xchg
xchg
inc
and
jge
sbb
fldt
mov
adc
test
mov
jle
cmpsb
inc
mov
daa
repnz
lods
pushl
movsb
lahf
flds
sub
mov
mov
fnsave
in
testl
enter
jnp
lds
add
std
shrl
push
in
jnp
test
sbb
jae
in
vshufps
push
mov
xor
mov
mov
mov
push
bound
push
daa
data16
lcall
mov
mov
and
outsb
mov
mov
xchg
push
lahf
aad
or
js
movsl
ret
push
hlt
cmpsl
std
aad
xor
outsl
out
shr
ss
or
sub
gs
jo
pop
adc
jae
mov
cmp
add
lahf
scas
mov
cld
and
ret
popa
fldl
dec
ret
test
out
sbb
mov
je
std
in
jge
pop
outsl
fisubl
dec
rorl
sub
jbe
fisubs
mov
movsl
test
sbb
hlt
mov
cmc
int3
imull
pop
push
andl
jl
add
pop
jl
sbb
mov
or
ror
lods
mov
das
sub
sub
sbb
dec
sub
pop
scas
push
xor
mov
incl
out
jnp
push
aas
mov
aad
dec
lcall
stos
leave
and
mov
sbbl
xchg
pop
in
xor
jmp
rcrb
cmp
jg
mov
je
and
aam
addl
pop
inc
dec
sub
sahf
ret
push
jecxz
pop
andl
inc
jl
out
test
lcall
imul
sub
cmp
lfs
inc
iret
rcll
fsubl
ljmp
out
adc
popa
rorl
push
loop
jmp
mov
js
nop
inc
xchg
inc
cli
ljmp
jmp
push
pop
jnp
mov
or
icebp
push
ret
add
add
test
shlb
cld
loop
lret
jl
pop
test
push
xor
lahf
sbb
mov
sub
mov
inc
adcl
adc
xor
sti
stos
xchg
gs
leave
push
filds
test
inc
ret
lds
mov
fidivs
adc
dec
mov
mov
cwtl
stos
cmp
inc
lods
push
lcall
sbb
es
dec
cmpb
shl
and
or
repz
add
xor
out
adcl
subl
mov
loopne
pop
cmc
lret
iret
xchg
into
push
sti
xchg
in
daa
jb
sub
loopne
push
mov
cs
mov
jmp
xchg
addr16
push
xlat
add
xorl
or
jno
mov
mov
push
push
int3
sub
int3
fcmovnu
and
or
cmp
mulb
shlb
dec
xchg
jp
cmp
adc
mov
add
lods
mov
inc
push
sti
inc
mov
ror
pusha
in
xor
sahf
stos
mov
jno
js
dec
test
pop
add
push
mov
mov
sub
adc
lret
out
pusha
movsb
xor
fs
fwait
pusha
stos
jae
imul
xor
in
cld
push
sbb
add
cmp
sub
mov
stc
cmp
adc
mov
pop
cwtl
lahf
xchg
push
and
clc
xchg
fisttpl
sub
xchg
subb
push
enter
insb
jmp
jns
xchg
lock
xchg
jnp
insb
mov
outsl
out
cwtl
pop
outsb
fimull
cli
daa
iret
add
push
outsl
scas
mov
push
pop
inc
mov
add
xchg
push
sahf
xor
mov
or
inc
push
push
imul
push
aad
jo
insl
ss
negl
outsb
cs
jl
mulb
dec
je
mov
iret
cmp
sub
mov
repnz
xchg
add
dec
push
pop
adc
les
ficoml
sbb
data16
fistpl
add
sbb
push
inc
ficoms
jmp
out
outsl
adc
pop
sbb
sti
xchg
in
inc
pop
lret
int3
popa
dec
in
mov
mov
in
jmp
fisttpl
add
mov
xchg
je
sbb
mov
stos
loope
mov
clc
pop
and
in
push
mov
lods
or
pop
icebp
dec
cwtl
aam
and
int3
cmc
mov
stos
cmp
lret
mov
jp
pop
vmwrite
xchg
imull
lods
jae
adc
and
and
pop
push
in
call
out
push
xor
dec
fwait
add
leave
xchg
mov
ds
popa
xchg
pop
pop
test
std
fisubrl
fsub
mov
push
js
sti
repz
fstps
xchg
ja
cwtl
jg
idivw
push
ret
push
mov
and
push
add
bsf
push
mov
xorl
mov
mov
inc
pusha
jnp
jns
lds
test
ja
add
ja
aaa
js,pt
pop
ja
mov
rep
loop
jmp
ljmp
sub
dec
cmp
test
pusha
inc
cmp
mov
gs
and
lahf
xor
or
sub
imul
ss
cmp
inc
fistpll
jp
inc
mov
xor
rep
pop
push
aaa
test
pop
ror
test
stos
ret
mov
stc
lods
push
aad
insl
dec
mov
xor
cmp
gs
mov
inc
lea
hlt
inc
adc
and
bound
push
sub
dec
fidivs
mov
sti
fcomip
mov
insb
adc
lods
insb
fimull
inc
mov
les
andb
dec
test
push
inc
push
fcmovnb
lcall
jne
cmp
xor
and
stos
or
adc
and
push
xchg
xor
data16
dec
and
dec
jge
lret
jnp
adc
mov
pop
add
push
mov
daa
mov
ret
push
scas
dec
cmp
mov
mov
and
addb
push
push
xchg
imul
subl
jecxz
mov
out
sbb
push
jbe
sbb
adc
movsl
jle
mov
xchg
inc
or
sbb
out
dec
and
shrb
mov
add
lcall
push
icebp
aam
popa
sbb
pop
inc
mov
sbb
push
lds
mov
aam
jo
add
lea
repnz
jge
andb
add
lret
lock
dec
xchg
daa
adc
push
or
sub
imul
dec
push
dec
fisttpl
pop
jge
jl
shlb
ficompl
inc
mov
push
or
stc
inc
std
outsb
cmp
xor
aas
xor
push
mov
jg
sti
inc
test
jb
mov
push
mov
fwait
stc
leave
xchg
xchg
lahf
sbb
pushf
popa
shrb
das
cld
sbb
mov
or
dec
es
cmp
xchg
xor
in
pushf
and
dec
sub
out
rcrb
sub
fistl
stc
cmpsb
dec
insl
jecxz
pop
jbe
pop
adc
pop
add
mov
fisubs
inc
sbb
test
int3
ss
mov
xchg
jae
sti
rcll
or
es
pop
xchg
loop
dec
xchg
dec
gs
pop
cmp
data16
add
std
push
lahf
sub
or
das
in
jle
mov
push
pusha
imul
pop
xor
in
add
mov
out
cmp
pop
jnp
fnstenv
push
notb
push
std
lea
pushf
pop
shll
adc
dec
andb
dec
jns
outsb
xor
lret
inc
sub
mov
outsl
aad
adc
mov
lods
repz
xchg
pop
adc
les
mov
in
sub
dec
push
movsb
or
imul
aam
jge
insl
mov
lret
je
iret
mov
add
xchg
jo
lret
mov
lahf
inc
and
sti
in
jge
mov
push
jp
pop
aas
xor
into
test
inc
jle
pop
jbe
rolb
in
les
jl
jp
sub
inc
stos
mov
jmp
pushf
pop
adc
add
nop
or
dec
sbb
xlat
adc
jle
fdivl
xchg
pushl
pop
leave
in
nop
push
adc
loop
repnz
sbb
cwtl
or
leave
repz
cmpsb
std
dec
jmp
fs
aam
or
push
dec
jge
or
cmp
adc
mov
and
inc
divb
adc
fisubl
enter
imul
imull
jge
test
out
xorb
je
aad
push
lock
or
lods
xlat
out
jo
jbe
sbb
mov
fwait
int
sahf
pop
packuswb
addr16
aam
adc
loop
das
push
pop
dec
sahf
popa
fwait
mov
das
jl
fs
mov
les
mov
mov
ds
push
jbe
cmpsb
orl
pop
push
push
jns
insb
lahf
inc
inc
pop
or
inc
in
sahf
test
sbb
or
int
lods
cmc
jae
mov
push
jno
adc
jno
add
div
imul
sbb
pop
cmp
push
mov
into
inc
push
sub
aad
inc
mov
ffree
cli
dec
ds
orb
mov
test
das
add
in
repnz
mov
andl
das
insb
pop
clc
enter
pop
fdiv
movsl
int
mov
xor
sbb
push
ficomps
test
orb
int3
sub
pop
fldt
mov
out
mov
int3
popf
stos
ds
xor
or
sub
dec
jge
cs
jns
ja
pop
mov
jne
sbb
xchg
or
inc
fnsave
gs
in
lahf
xchg
aas
jnp
shlb
cmp
push
fisubs
cmp
dec
popa
and
jecxz
cld
sub
sub
enter
movsl
mov
inc
jmp
and
sbb
xchg
pusha
xor
mov
xchg
xchg
push
push
push
xchg
inc
pusha
mov
pop
mov
ret
xor
push
jnp
adc
fmuls
sahf
rcrb
add
push
out
pushf
pop
lods
test
inc
jnp
mov
jns
fwait
lods
jmp
leave
sub
sti
xor
lods
sbb
pushf
adc
fdiv
insb
jns
inc
loopne
add
cmp
loope
push
cld
repnz
xchg
pop
fwait
jl
cli
inc
push
mov
popf
mov
xchg
pop
stos
jmp
push
pop
cmp
xchg
test
add
ss
fs
fidivrs
xchg
std
inc
sbb
mov
add
cmp
xchg
add
test
rolb
cmp
pop
xor
sub
or
int3
xor
insl
jns
lock
outsl
les
mov
dec
sbbl
jmp
push
fst
lahf
fadd
fucomip
cmp
push
dec
out
jbe
ret
icebp
cmp
jno
sahf
xlat
icebp
mov
jne
das
cmpsb
sbb
xchg
cld
rorb
add
sbb
into
ret
add
out
lahf
cmpsl
xchg
addl
lret
enter
adc
and
mov
shl
mov
xor
pop
pop
add
insl
in
lret
adc
fdivr
iret
mov
std
rcll
cmp
arpl
sbbl
bound
push
fdivrp
sbb
lahf
push
das
lret
test
repnz
dec
sbb
lods
shl
adc
in
pop
xchg
jp
sbb
fwait
das
jbe
pop
and
int3
jle
popa
xorl
imul
mov
xor
add
xor
mov
push
inc
mov
pushf
push
cmp
sub
lock
mov
push
sub
lds
jge
adc
or
rolb
outsl
cmpl
jae
xchg
fcoml
mov
and
pop
mov
xchg
xchg
movsl
and
out
xchg
ljmp
dec
in
cltd
fsubrl
dec
cmp
mov
rcll
or
test
pop
test
ret
dec
jecxz
dec
push
out
ret
or
mov
xchg
cli
scas
sub
and
test
push
icebp
add
add
mov
jnp
mov
add
repz
wbinvd
mov
mov
xor
sub
shrl
popa
aas
sub
fiadds
cmpsl
in
jo
lcall
movsb
push
xlat
push
lock
adc
jnp
xor
jae
inc
mov
or
insl
das
popf
jmp
sti
shll
stos
les
outsb
shl
mov
or
xor
mov
fs
out
ja
js
leave
mov
adc
mov
adc
mov
in
dec
sbb
fwait
mov
xchg
jge
psadbw
ss
adc
imul
or
mov
pop
mov
in
divb
hlt
fs
lahf
fsubl
cmpsl
xchg
xor
mov
js
add
push
lods
les
sbb
jmp
xchg
jge
vmovaps
push
dec
test
mov
rorl
test
adc
and
jge
and
outsb
inc
sarb
or
sub
push
cmp
mov
xchg
push
mov
sub
cs
dec
mov
dec
cli
mov
icebp
mov
sbb
inc
push
std
mov
add
mov
fwait
loop
xchg
or
jecxz
cmpsb
sbb
jne
cld
xchg
mov
aam
jmp
fmull
xchg
movl
hlt
popf
test
jp
in
or
sub
push
push
mov
jno
dec
xor
xor
es
leave
loope
arpl
imul
icebp
and
test
cs
push
mov
cmp
std
orl
mov
push
andl
rorl
mov
ja
insb
jbe
addr16
sub
pusha
adc
fidivl
and
test
lock
imul
xchg
dec
bound
pusha
aam
lret
mov
inc
pop
movsl
jp
jne
sbb
mov
xor
sub
cld
xchg
lods
xchg
lret
dec
mov
test
and
cmp
sub
jae
cmp
mov
mov
cmp
push
mov
or
fisubs
movsl
add
xchg
add
aam
rcr
cmp
int3
mov
mov
int3
mov
jmp
cmpsb
push
or
mov
add
movsb
test
jp
fimuls
jnp
dec
pop
int
das
jp
pop
push
aaa
fcmovu
stc
mov
jb
mov
imul
push
inc
mov
lods
add
ret
dec
rorb
iret
ds
test
sbb
fst
leave
push
sti
sbb
xchg
test
movsb
test
pushf
jl
cmp
sahf
lret
jno
repz
inc
cmc
sti
mov
jne
loopne
in
sub
mov
or
lahf
inc
cltd
outsl
insb
jge
add
ret
sub
mov
mov
mov
xor
xchg
xchg
into
ret
sbb
in
push
mov
jmp
icebp
arpl
loopne
sahf
add
and
frstor
mov
lret
mov
mov
sti
mov
mov
clc
loop
pop
pop
cmpsb
sub
test
add
cwtl
mov
outsl
mov
clc
mov
fistpll
out
xor
inc
js
fcmovu
push
or
mov
jb
cmp
rorl
push
dec
movsb
or
popa
fnstcw
jle
push
cmp
sbb
mov
enter
xor
stos
push
mov
dec
test
adc
push
pop
mov
hlt
adc
mov
cli
std
inc
inc
adc
jo
inc
jle
shrb
ss
adc
mov
jo
lahf
fimuls
adc
dec
push
popa
pusha
or
mov
pop
fnstenv
inc
stc
adc
and
stc
mov
jg
adc
in
jp
cmp
jle
sub
fs
popa
cmp
mov
testb
xchg
sub
dec
mov
popl
mov
push
xchg
rep
imul
out
sbb
mov
pop
pop
out
aas
mov
negl
adc
cmp
lret
div
js
int
mov
jecxz
jb
mov
or
test
in
or
inc
aaa
cmpsl
lock
sbb
mov
ja
xor
jp
cmp
pop
mov
mov
mov
jle
outsl
fs
mov
mov
stos
or
push
and
sbbl
xor
aaa
jg
and
inc
jge
rcrb
das
or
xor
or
jne
sbb
int3
cwtl
cmp
outsl
cmp
jp
xchg
xchg
loope
sub
jb
push
dec
aad
or
shll
cli
inc
xchg
push
mov
inc
lret
repz
clc
inc
push
xchg
cmpsb
add
out
dec
mov
fidivs
pop
dec
sbb
pop
dec
lds
dec
je
ss
insb
or
sti
pop
mov
shlb
pop
mov
pop
jge
push
jp
les
pop
in
pop
fidivs
sub
adc
mov
inc
imul
mov
ret
pop
and
scas
push
jo
push
clc
push
imul
mov
cltd
imul
xchg
mov
adc
push
xorl
push
inc
xchg
bound
push
rcll
mov
push
inc
ret
inc
jl
icebp
fnstenv
sahf
jle
outsl
js
stc
mov
movsl
cmp
and
inc
int3
jg
push
mov
lods
push
sti
xchg
cmpsb
into
mov
jge
sti
and
mov
sub
push
mov
or
psrlw
aam
jno
lock
sub
stc
jg
pop
dec
cmp
pop
movsb
cmpb
mov
fimuls
inc
cmp
or
xchg
xchg
sub
jge
mov
mov
cmp
les
sbb
rcl
clc
xchg
cmpsb
pop
jnp
add
sbb
aas
add
add
inc
icebp
into
xlat
cld
shll
inc
cmpb
gs
or
pop
outsl
mov
and
jg
push
fiaddl
mov
rclb
jne
inc
insb
fcomi
adc
div
cmp
mov
loopne
mov
cmp
sub
idivl
nop
stos
fwait
mov
imul
andl
hlt
cmp
sbb
xor
adc
xchg
pushf
inc
pusha
xchg
inc
mov
cwtl
mov
push
fs
or
xlat
cmp
and
sbb
mov
cld
leave
mov
mov
and
cmp
and
rcl
push
cli
add
sbb
and
call
shlb
push
enter
mov
sbb
adc
xchg
or
sub
fsubrs
mov
inc
adc
push
lcall
inc
repz
scas
mov
test
sub
js
movsb
and
xchg
xchg
add
into
mov
cld
jns
or
lds
xor
shl
rclb
ljmp
add
cmp
cmpsb
push
out
in
mov
jns
jbe
imul
xor
or
sbb
leave
push
scas
mov
icebp
pop
insl
mov
or
out
addl
test
movsb
enter
mov
mov
stos
ret
push
add
push
fidivs
add
icebp
mov
mov
insb
imul
das
sbb
in
jmp
fdivrs
mov
push
faddl
adc
sti
xchg
in
int3
out
enter
call
das
dec
enter
pop
push
leave
fstpl
push
mov
outsl
pusha
and
nop
sbb
push
rorb
ss
stos
pusha
jl
push
out
test
ljmp
js
mov
in
mov
jne
in
push
sbb
mov
and
stc
int
jno
ror
out
jo
mov
cmp
dec
pop
inc
fcmovu
div
stos
xor
imul
outsb
cmpsl
add
int3
or
adcl
test
or
arpl
mov
repnz
or
jb
inc
imul
ret
scas
xchg
sbb
mov
adc
dec
call
shll
cmp
sbbl
lret
mov
es
aad
dec
ficomps
stos
xor
insl
push
insb
das
push
mov
jecxz
xchg
aad
gs
jmp
sti
and
outsb
das
movsl
jns
push
xlat
jmp
pop
cwtl
mov
sbb
or
fs
dec
jp
push
test
sub
repz
frstor
adc
and
mov
jno
pusha
or
pop
jne
imul
test
setl
jbe
and
mov
les
in
cmp
lds
mov
fistl
fimuls
push
add
and
repz
in
xchg
sahf
stc
adc
fisubrs
inc
ret
enter
fstpt
and
push
das
xor
mov
repnz
jg
xor
jae
pop
popa
sub
cmc
fisubl
mov
lret
pop
data16
lret
outsl
aaa
mov
pop
mov
jo
dec
push
cmp
lods
or
cmp
nop
fidivrs
mov
test
sbb
adc
stc
add
jo,pt
push
sub
mov
movsbl
lret
bound
je
in
std
andb
fs
xchg
push
les
fiadds
hlt
daa
je
sub
call
in
out
dec
push
dec
nop
xor
es
arpl
cmp
divl
fidivs
push
cmp
mov
inc
or
and
cwtl
push
aad
xchg
mov
cmp
int3
jns
xor
imull
xchg
clc
xchg
sub
aas
mov
xchg
adc
inc
sub
insl
mov
xchg
push
jle
call
mov
xchg
add
xchg
dec
data16
xlat
adc
jns
fmull
mov
stc
xchg
cmp
orl
sarl
sbb
in
xchg
jnp
fidivrl
mov
ret
xor
fbstp
push
sub
not
out
movsb
fs
adc
cmpsl
or
push
stos
orb
lret
cmp
dec
sbb
imul
cmp
sbb
fs
or
mov
and
dec
aaa
add
stc
fidivs
cmp
ljmp
nop
imull
pop
daa
xlat
pop
mov
aaa
dec
in
sbb
in
insl
fdivrl
gs
pop
dec
cld
das
xchg
ja
dec
pop
xchg
sbb
popa
test
daa
movsl
repnz
fwait
lahf
cmp
add
adc
mov
js
stos
data16
mov
pop
clc
add
jo
aaa
sub
push
lods
jmp
outsl
dec
add
push
jbe
xchg
xchg
mov
shll
test
mov
stos
push
mov
mov
out
sbb
cmp
cmp
pop
sbb
addr16
scas
mov
clc
dec
jno
test
inc
dec
test
push
hlt
jae
sbb
adc
fstpl
add
mov
sub
and
push
sbb
nop
xchg
adc
mov
inc
out
loope
jbe
out
and
iret
push
loope
test
adc
xchg
popa
popa
dec
cs
sbb
push
aaa
nop
cmp
push
jl
in
lret
mov
xchg
mov
repz
xchg
shll
mov
push
mov
repnz
xlat
inc
or
jo
mov
scas
in
loopne
inc
lret
clc
insb
or
test
xchg
push
sbbb
mov
punpcklwd
loopne
cmp
fisubrl
push
rcrl
xor
sarl
insl
andl
dec
sbb
movsb
call
xor
xchg
out
add
sub
fstpl
int
jns
dec
dec
pusha
pop
jmp
ja
dec
mov
jbe
mov
ficoml
add
leave
sahf
sub
mov
les
mov
push
or
sub
add
xchg
dec
or
sub
dec
dec
fidivl
pop
cmpsb
mov
fcompl
add
js
imul
lret
or
lea
je
push
cli
movsb
jb
push
sub
ds
in
push
lret
aas
insb
push
sub
mov
popf
lcall
xor
rcrb
sub
and
cmp
js
adc
inc
jb
sbb
stc
out
out
ja
inc
push
inc
loop
cmp
inc
inc
mov
sahf
cmp
cmp
sbb
mov
orb
mov
leave
jle
ja
or
jns
insl
addr16
and
clc
mov
sbb
mov
mov
addr16
or
daa
and
mov
je
mov
xchg
movsl
pop
test
pusha
call
imul
scas
inc
mov
and
xor
or
sbb
xchg
or
adc
sbb
clc
fildl
rolb
clc
cmp
inc
pop
pop
jne
popf
dec
adc
inc
xor
inc
xor
and
lock
fcoml
lods
sub
xor
jecxz
sub
bound
inc
sbb
push
inc
shrl
jmp
inc
cmp
dec
or
jecxz
stos
sti
push
mov
jnp
xchg
inc
movsl
ds
pop
jmp
mov
shrl
sub
pop
dec
in
adc
dec
mov
xchg
lahf
jge
sbb
sahf
push
lds
jne
in
jmp
lret
mov
clc
imul
ret
cltd
jae
outsb
cwtl
lods
mov
adc
or
xchg
inc
out
fnstcw
jmp
inc
adc
hlt
je
fcoml
cs
xor
cltd
out
sarl
fisubrl
jge
push
jne
mov
insb
or
int3
push
test
jbe
aad
je
jmp
rcrl
ficoms
mov
xor
mov
movsb
xor
cmp
arpl
test
loop
sbb
push
pop
sub
mov
call
out
mov
or
lock
dec
stos
popf
insl
ljmp
out
arpl
or
dec
ds
inc
add
test
ja
fidivrs
cmp
and
outsl
xor
lret
push
stc
pop
fimull
int3
test
rorb
rcll
mov
fldenv
outsl
repnz
jle
sub
adc
add
dec
icebp
cmpsl
and
out
andb
stos
out
pop
mov
test
lret
subb
mov
shrb
lahf
push
popa
js
dec
xor
jge
mov
or
mov
aad
aam
aas
mov
ss
stos
inc
pop
andb
aaa
inc
mov
dec
push
insl
add
and
scas
and
daa
jb
scas
movsb
sbb
cmp
pop
cmp
sub
push
jns
or
imul
enter
add
add
xor
inc
push
mov
sarb
xor
sub
add
jnp
sar
fucom
mov
dec
icebp
jp
inc
loope
popf
jge
mov
int
fsubl
frstor
and
sub
mov
xchg
shrb
icebp
adc
popf
inc
bound
inc
sbb
jle
iret
xor
jp
jns
xchg
xchg
cs
fyl2x
out
repz
fists
adc
dec
mov
xlat
dec
push
pop
xchg
leave
sbb
adc
pop
fsub
aad
xchg
cwtl
insl
loope
jns
cmp
push
lret
jo
lcall
cs
sbb
cmp
add
insl
jmp
je
insl
jns
or
mov
pop
gs
inc
das
sbb
stos
jns
out
inc
ret
mov
icebp
mov
movsb
bound
lods
mov
fsubrl
jg
cli
push
jge
out
push
cmp
xor
data16
mov
pop
stos
out
xor
xchg
mov
jb
add
fstl
jmp
bound
adcb
incb
adc
mov
adc
outsb
pop
std
daa
cld
insl
test
insb
sub
inc
xchg
mov
xor
and
fcmovne
sbb
fisubrs
ljmp
push
sub
lret
jo
and
aas
mov
adc
fs
sti
adc
adc
loope
jecxz
cmp
xchg
and
aaa
xchg
inc
jmp
sbb
hlt
dec
repz
xchg
popf
jg
jbe
mov
fstl
jbe
mov
push
aas
jno
test
or
jmp
pop
adcb
xchg
add
imul
shlb
jne
cmc
sbb
cmc
scas
push
int
xor
daa
shlb
pop
jge
push
sarl
push
mov
iret
out
scas
iret
sub
sbb
sbb
iret
mov
movsb
pop
lret
int
inc
lds
pushf
and
aaa
fdivrp
movl
or
mov
int
xchg
push
mov
cmpsb
add
sbb
divb
cmc
das
js
sbb
xor
pop
mov
in
mov
sti
repz
sbb
addb
dec
sahf
adc
imul
mov
faddp
sub
add
mov
mov
mov
das
fcoml
test
push
stc
inc
adc
lods
mov
mov
mov
cmp
ljmp
test
or
push
sub
push
mov
add
repnz
shrb
push
xchg
syscall
or
xchg
cwtl
test
push
mov
out
mov
xor
lock
mov
mov
jo
jmp
cld
sub
in
or
loope
sbb
add
jecxz
mov
ds
stc
or
mov
cmp
and
inc
pop
xchg
out
xchg
xchg
xchg
out
hlt
cmc
xlat
mov
sbb
mov
xor
jb
mov
repz
clc
lcall
fwait
jmp
sahf
jbe
fwait
cld
hlt
jo
mov
lea
pop
shlb
add
jb
adc
cmp
jns
xchg
pop
ja
mov
leave
cld
or
ret
les
xchg
sbb
sub
push
punpckhwd
cmp
lret
movsb
mov
rorb
shl
jmp
add
scas
xchg
testb
arpl
and
inc
pusha
jnp
in
sarl
and
sbb
cmp
movsl
mov
inc
icebp
push
adc
pop
js
inc
push
sub
mov
mov
fdivrp
cli
mov
jno
xchg
stos
push
pop
leave
adc
pop
sub
and
or
aas
lret
std
sbbl
xchg
jge
addr16
outsb
clc
repz
push
shlb
loope
hlt
imul
mov
cmpsb
cmpsb
out
pop
sbb
test
xchg
out
ret
sub
cmp
in
insl
popf
xchg
out
aad
orb
mov
lods
pop
mov
pop
dec
push
aad
jno
bound
add
mov
sub
fdivp
push
imull
cli
add
js
and
add
lcall
fs
pop
pushf
mov
mov
adc
and
inc
pop
scas
mov
fs
aad
xlat
lods
jns
out
enter
mov
add
mov
mov
imul
outsl
stos
sub
dec
adc
adc
push
ret
insb
cmc
pop
sarl
test
shlb
outsl
iret
mov
inc
jmp
adc
call
and
ss
pop
and
cmp
jno
je
jg
adc
cmc
cmp
sbb
dec
outsl
mov
gs
lret
cltd
xchg
xor
push
push
push
mov
inc
mov
lods
mov
adc
insb
push
lock
mov
lea
lahf
dec
cmp
dec
aam
mov
rorl
jne
and
int
ljmpw
sbb
enter
xchg
inc
lods
cmp
mov
jo
xchg
dec
shll
jne
loope
inc
mov
bound
shlb
aad
dec
cmp
jo
arpl
stos
popf
fcmovnb
popf
into
cmp
insb
add
xor
or
cs
adc
push
out
dec
hlt
shrb
scas
inc
mov
adcl
and
test
repz
in
cmpsb
push
xlat
fsubrs
sbb
dec
popa
lds
fwait
je
aam
pop
int
cmp
jecxz
pop
lock
dec
out
cmpsb
push
sub
and
dec
insl
imul
adc
jnp
jp
jne
or
inc
into
stos
movb
ret
push
enter
add
in
arpl
adc
push
arpl
and
aad
cmp
xchg
das
in
dec
inc
xchg
jmp
inc
jae
jmp
push
jns
fcompl
into
sub
cmp
mov
add
push
and
nop
clc
and
aaa
stc
sub
sbbb
mov
inc
adc
pop
arpl
lahf
shlb
dec
insb
sub
xor
cli
cld
mov
pop
push
ja
lahf
xor
jp
mov
or
ljmp
pop
dec
movsb
rorl
dec
cmc
pop
scas
xor
lds
xchg
xor
mov
xor
in
fldt
xchg
add
bound
out
loopne
outsl
into
xlat
outsl
int
add
fnsave
popf
sbb
cmc
jecxz
repnz
pop
lret
orb
mov
xchg
sub
rcl
stos
mov
mov
and
repnz
inc
sub
and
mov
xchg
lcall
cmp
cmp
stos
push
push
shlb
push
sbb
fdivr
js
imul
pop
pop
or
add
cwtl
loop
jno
push
adc
cmp
jnp
mov
pusha
sub
loop
mov
pop
out
and
in
inc
pop
add
xor
xchg
mov
test
iret
inc
jmp
fwait
out
or
std
in
ja
repz
mov
test
cmp
and
jp
inc
sahf
fmull
mov
cmp
mov
aad
pop
pusha
xchg
dec
mov
lcall
sbb
sub
jbe
movsl
push
push
sbb
mov
lods
enter
aad
pop
fcmove
xchg
sbb
lods
push
jecxz
loop
gs
in
scas
je
add
mov
sbb
add
repnz
push
das
xor
mov
jae
loopne
adc
add
lret
mov
sub
bnd
inc
mov
inc
pop
mov
movsl
adc
ss
std
push
ror
dec
imulb
mov
xor
aad
xchg
cmp
cld
mov
daa
sahf
or
lds
adc
lcall
mov
stos
push
xchg
inc
loop
enter
mov
sahf
out
addr16
into
dec
nop
flds
fstpt
test
mov
or
jg
sbb
insb
adc
push
mov
push
ret
add
inc
mov
outsl
sbb
push
jmp
and
push
cmp
fmull
and
into
jb
mov
sub
dec
xchg
or
f2xm1
push
mov
xor
orb
fstpl
adc
cvtps2pd
push
pop
xchg
inc
lret
ds
sbb
scas
lret
cwtl
cmc
int3
add
inc
aam
lods
and
lock
xchg
scas
call
push
add
mov
dec
cmpl
mov
aas
mov
je
addr16
push
lods
cmp
outsb
sbb
in
std
push
push
mov
jecxz
test
mov
fwait
jg
insb
ja
or
popf
cmp
lret
popa
mov
xchg
or
aaa
outsl
dec
dec
pushf
inc
mov
mov
cld
jmp
and
add
sub
mov
or
inc
inc
movsl
xor
mov
xchg
out
mov
stc
jno
cmp
pop
repz
xor
out
sbb
adc
pop
ret
pop
sbb
test
stc
jne
push
adc
xchg
dec
sbb
inc
adc
xor
lods
jb
adc
fnstenv
and
ret
jns
in
sbb
sbb
movsb
add
js
jns
icebp
and
mov
insb
imul
pop
and
cmp
cmc
dec
sub
mov
mov
sahf
xchg
std
inc
xor
nop
out
or
dec
adc
sbb
xlat
mov
mov
xchg
xor
or
xchg
pop
add
shl
orl
or
daa
mov
sub
jmp
js
mov
sbb
or
nop
xchg
aam
pop
add
push
fldl
mov
in
std
in
insl
mov
mov
inc
inc
jns
push
enter
enter
outsb
ficompl
dec
ljmp
xorb
add
push
mov
hlt
push
sbb
cmp
cmp
dec
add
mov
mov
cmc
jb
leave
add
test
mov
es
addr16
arpl
jne
sub
push
and
pop
mov
jmp
pop
push
ret
dec
dec
out
or
dec
push
and
sbbb
mov
cs
cmc
scas
cmovg
cmpsl
sti
push
out
les
repz
rcll
hlt
mov
or
in
jb
dec
leave
jne
in
sub
inc
push
ja
mov
cltd
add
lret
scas
jbe
in
mov
sbb
out
bound
jno
into
jle
mov
rclb
div
call
call
inc
add
fildll
mov
xchg
icebp
pop
hlt
push
push
or
ret
cwtl
adc
fnstenv
lds
out
call
fdivl
push
mov
negl
movsl
mov
inc
inc
xchg
sub
xor
shl
and
jmp
adc
sbb
pop
fs
or
out
incb
inc
xchg
mov
mov
outsl
mov
fcomps
stos
mov
pop
clc
mov
xor
ret
pop
pop
mov
addr16
mov
in
mov
data16
jb
sti
gs
out
mov
cmpsl
sbb
pop
add
add
jge
mov
sub
enter
stos
push
xchg
int
fstpl
fimuls
mov
outsl
or
mov
dec
cmpsl
pop
test
push
and
ljmp
sbb
sbb
fs
repz
scas
sbb
icebp
push
xchg
mov
push
ret
lods
fcomi
test
xchg
fsts
sbb
mov
loop
aas
mov
in
div
ret
fadds
adcl
mov
in
das
or
xor
rolb
out
jbe
loope
pop
mov
inc
sub
lods
jbe
sbb
call
pop
arpl
adc
inc
into
gs
mov
fstps
jge
pcmpeqd
jns
lretw
test
sub
lahf
in
js
sbb
fimull
xchg
sbb
js
imulb
pop
lret
xlat
push
mov
adc
loopne
mov
out
pop
pushf
movb
pop
dec
cmp
pop
pop
cld
pushf
outsl
repz
push
adc
fidivl
push
mov
or
hlt
ja
subl
jge
sub
xchg
xor
xor
sbb
push
repnz
stos
push
sub
dec
test
gs
jb
ds
bound
test
push
mov
fistpl
mov
mov
add
bound
in
insl
mov
fcomi
mov
into
fcoml
ret
cld
add
outsl
mov
push
add
pop
sbb
loopne
adc
push
shlb
scas
int
loop
shll
inc
aaa
addr16
loopne
mov
push
dec
xchg
xor
jmp
pop
jnp
jp
cmpsb
stos
mov
xor
pop
cmp
push
and
or
or
jo
outsb
jge
outsb
adc
leave
push
jecxz
or
aad
ljmp
test
jle
pop
outsb
adc
jnp
add
push
mov
fldenv
inc
andl
sub
fdiv
xchg
push
add
imul
int3
add
inc
push
unpcklps
jb
dec
inc
adc
jne
movsb
ljmp
cmpsl
xor
adc
stos
push
sub
loop
sbb
cmp
cmp
xor
inc
jle
xchg
mov
mov
cmp
add
dec
cmpl
push
loopne
sub
ret
shlb
push
ss
gs
sub
dec
fwait
cmp
push
aaa
jbe
fcmovnbe
sbbl
xor
int
xchg
mov
sub
mov
gs
or
repnz
mov
sub
pop
pusha
stos
ja
jg
inc
out
push
sbb
hlt
jo
and
ror
lods
cld
or
rcrl
mov
inc
sar
xchg
enter
and
pop
add
jmp
xchg
dec
sub
daa
call
idivb
jge
inc
sub
push
pop
dec
icebp
xchg
pop
shll
out
and
pop
inc
lods
in
dec
out
inc
into
push
mov
inc
cmpsl
jae
cwtl
loopne
or
lods
cs
orb
stos
add
dec
xchg
adc
pop
inc
jp
or
in
xor
add
inc
push
sub
cs
sbb
cs
addl
or
jb
sub
inc
sbb
insb
cmp
stos
jnp
fdivr
sbb
dec
stos
adc
sbb
sub
lea
adc
decb
push
pop
jp
mov
and
pop
and
mov
xchg
shrl
dec
xor
xor
or
aam
test
sbbb
adc
mov
mov
mov
cmpsb
lret
lds
icebp
mov
inc
pop
push
call
les
out
push
mov
fwait
in
xchg
lea
les
sbb
push
aaa
insl
adc
rclb
xchg
sbb
jne
out
out
lret
cltd
loop
mov
dec
enter
adc
pop
jne
fwait
or
sub
push
enter
mov
ret
lret
xor
cltd
mov
out
popf
xor
fsub
mov
push
dec
jecxz
push
mov
aaa
in
outsl
out
sub
inc
incb
cmp
lret
call
pop
adc
loop
mov
xchg
out
and
test
stc
add
cmp
xchg
divb
stos
mov
test
jns
xchg
inc
cmp
addr16
popl
pop
push
xor
cmp
or
gs
sbb
jb
stc
lret
in
push
syscall
popa
xchg
mov
cmp
pop
sbb
out
or
insb
pop
mov
sahf
out
lahf
adc
lods
enter
lcall
xchg
scas
and
add
jg,pn
pop
jge
mov
sub
cli
mov
adc
rolb
or
and
mov
jo
or
js
int3
aaa
jg
pop
aam
insl
pop
adc
test
push
push
cmp
push
jmp
push
mov
dec
mov
bound
inc
fucomi
sahf
insb
movsl
pusha
jg
pop
inc
add
xchg
daa
dec
or
xor
pop
loop
jmp
test
pop
push
adc
outsl
out
out
sbb
std
mov
adc
flds
jle
cmp
iret
iret
cmp
jl
lods
out
popf
dec
mov
movsb
out
ret
inc
cmp
cmp
adc
adc
cmc
ds
jp
call
pop
mov
pop
adc
mov
inc
and
loopne
out
call
outsb
xor
addb
outsl
andl
or
xchg
enter
inc
fcmove
sbb
mov
mov
adc
or
mov
or
add
lahf
mov
rcrb
ss
roll
pop
icebp
gs
pushf
lods
movsl
test
fwait
add
push
mov
mov
or
pop
mov
repz
outsl
pop
fisttps
lcall
or
push
or
pop
jge
imul
lret
loope
mov
dec
mov
cmc
xchg
push
or
das
xor
and
xchg
loop
dec
mul
out
in
push
int
aam
lahf
cmpsl
cwtl
loop
stos
add
xor
or
adc
popa
xchg
jl
mov
lods
mov
ja
in
fadds
sbb
scas
xor
push
mov
and
jno
jle
push
inc
in
jle
sarb
das
and
pop
add
or
out
cmpb
out
imul
aaa
push
loop
out
sbb
mov
stos
mov
jns
mov
in
loope
adc
jl
jp
sbb
and
xor
scas
sahf
jecxz
mov
fiadds
mov
mov
inc
ljmp
push
fsub
sub
dec
cmp
cmp
push
jmp
mov
ret
jne
rol
xchg
fmull
jno
or
cmpsl
add
xor
cs
lock
push
or
and
out
cmp
cli
sub
fstl
and
push
cmp
mov
popf
jo
lret
xchg
rorl
movsb
push
cwtl
lds
insl
dec
subl
ss
mov
clc
sbbl
arpl
mov
and
mov
insb
jbe
push
fwait
adc
out
bound
sub
xor
imul
xor
and
adc
imul
cs
xor
sahf
ds
cld
push
mov
lods
add
add
int3
aad
xchg
add
mov
sti
sub
xor
dec
dec
xlat
fmull
imul
mov
rorl
xor
out
cld
xchg
dec
lds
mov
or
or
sub
push
add
inc
pop
stos
mov
lret
int
push
movsb
cmp
pop
cld
dec
push
mov
push
cmpsl
inc
jg
push
and
push
jns
leave
fs
adc
lret
pop
lahf
mov
negb
cltd
dec
test
stc
push
inc
jne
pop
xchg
cli
adc
aas
jo
cld
lcall
pop
mov
rorl
pop
xchg
mov
jmp
and
cmp
inc
xor
xor
data16
pop
imul
outsb
fcomps
lea
dec
push
shll
daa
xchg
aaa
cmp
gs
cwtl
in
std
mov
in
mov
or
push
fisubs
mov
js
jmp
and
add
pop
push
jl
dec
push
inc
cmp
cmp
bound
loop
dec
in
fildl
jp
add
cmp
jnp
add
aaa
sbb
cmpsl
outsb
icebp
jo
sbb
nop
mov
sti
lret
mov
shlb
test
adc
inc
out
pop
sbb
adc
mov
mov
lods
xor
dec
jmp
imul
fwait
xor
jbe
mov
inc
xchg
and
addr16
sti
or
mov
inc
fisubrs
bound
add
outsl
aam
insb
lods
adc
mov
push
or
push
aaa
cmp
adc
cli
fbstp
jbe
inc
cmpsb
or
fwait
cmpsb
inc
rcrb
add
insb
sub
mov
sbb
sbb
ficomps
xchg
ja
daa
mov
int
fwait
iret
dec
and
enter
das
mov
lods
adc
or
sbb
daa
lcall
pop
shl
xchg
je
add
cmp
pop
lea
and
mov
add
mov
adc
data16
insb
ret
mov
jmp
mov
push
cld
test
imul
out
mov
jae
inc
xor
in
lret
mov
mov
daa
adc
cmp
inc
scas
cmp
cltd
pop
test
lds
and
mov
je
ret
mov
cmp
aaa
mov
xlat
ss
fs
dec
bound
xchg
js
ljmp
and
dec
mov
and
adc
in
fmulp
sbb
shll
cwtl
pop
push
add
mov
pushf
jmp
call
inc
out
pop
jp
cs
inc
pop
in
pushf
aaa
add
lahf
xchg
insb
cmc
and
jb
and
and
outsl
sbb
aam
sub
pop
push
xchg
inc
out
inc
push
cmc
mov
fdivp
cmp
push
in
ss
push
mov
ss
cs
push
push
sbb
arpl
leave
test
mov
orl
fcom
not
bound
sub
iret
xor
mov
add
push
mov
or
stc
pop
jns
sahf
pop
xchg
ss
pop
cltd
data16
mov
hlt
mov
pop
in
pusha
sub
cwtl
or
popa
mov
pop
adc
iret
sub
jns
pop
lods
mov
icebp
sti
fs
ljmp
divb
enter
movsl
xor
call
rcl
popa
movsb
repnz
mov
or
xor
adc
scas
int
mov
repz
sub
dec
adc
aad
data16
adc
dec
pop
jle
adc
std
test
mov
sbb
xchg
and
mov
sarl
dec
in
ss
repz
push
xchg
sbb
push
jae
cvtdq2ps
in
push
mov
sbb
mov
ret
add
xor
sbb
lret
xor
lcall
pop
stos
int
and
fadd
lds
jecxz
daa
dec
adc
cmp
icebp
movsb
push
inc
insl
push
scas
xor
lds
faddl
mov
push
ret
loope
jbe
mov
mov
movsl
ficoml
out
sub
xor
mov
inc
xchg
xor
adc
sbb
enter
jnp
or
into
stc
push
jmp
shrl
loope
out
xchg
pop
mov
inc
xor
lock
incb
push
sub
cmp
mov
mov
cmp
mov
enter
jo
xor
rep
mov
in
add
or
push
mov
push
pop
jle
ja
das
jne
xor
je
testb
insb
in
sbb
cmc
mov
cltd
mov
xchg
scas
push
sub
add
lret
push
mov
lcall
cmp
pop
fcompl
out
xchg
jbe
test
pop
dec
jo
inc
xchg
notb
inc
push
ret
mov
sti
mov
sbb
sub
mov
insb
dec
and
cmp
or
sub
iret
dec
rolb
aam
jno
sub
mov
addr16
aad
bound
push
call
stos
mov
cmpsl
mov
pop
xchg
test
insl
mov
shlb
shrb
push
mulb
leave
xchg
mov
cmp
ds
pushf
out
loopne
sub
or
lcall
mov
cmp
sub
push
scas
mov
jne
loopne
nop
orl
mov
lahf
xor
into
cmp
mov
mov
out
rcl
mov
sub
adc
push
cs
push
pop
js
test
sbb
sub
cmp
mov
pop
xlat
mov
push
push
dec
mov
mov
xchg
call
lock
movsb
pop
sbb
jl
arpl
sub
imul
inc
mov
jns
inc
fcomps
shll
mov
cwtl
incb
loopne
mov
mov
aam
int3
adc
cs
and
dec
mov
pop
add
mov
sub
pop
mov
leave
sbb
xor
push
in
adc
daa
cli
int3
inc
movsb
mull
mov
sbb
xchg
add
test
pop
ds
sub
mov
mov
xchg
push
pop
shll
test
pop
test
jb
or
out
jmp
je
insb
adc
push
stc
push
cmpsl
add
xor
es
xchg
jae
loop
enter
inc
pop
clc
adc
push
jg
mov
pop
cli
out
addr16
scas
loopne
push
mov
cli
cmc
icebp
enter
loop
jo
call
int
cmp
jl
in
hlt
jae
rolb
add
adcb
ljmp
sub
dec
jmp
icebp
sar
scas
push
and
dec
push
push
cld
cmpsl
daa
sbb
xor
cld
xor
cmp
insl
loope
or
adc
stos
daa
mov
jge
dec
sqrtps
ficoms
std
push
inc
and
xor
add
aaa
sti
repnz
enter
sub
inc
aas
in
jb
push
cs
xor
into
sbb
pop
push
xchg
sub
int3
lcall
mov
or
jl
xchg
adc
mov
std
sahf
inc
outsl
test
pop
inc
adc
flds
lods
scas
in
cmpsb
add
pop
ds
dec
push
cli
push
jg
sbb
mov
test
mov
in
sbb
bound
xor
adc
jle
lds
stos
js
paddsw
jo
es
cwtl
xchg
test
mov
add
xor
jmp
cmp
and
adc
test
pop
sub
add
xchg
inc
push
test
test
bound
jnp
mov
cmpsb
ss
dec
add
testl
jecxz
or
or
lea
insl
lods
cmp
or
or
jbe
pop
xchg
jae
subl
lods
and
in
movb
ret
out
or
loope
pop
mov
lret
cli
pop
cmp
inc
mov
sub
or
sub
ret
or
ret
in
or
loop
push
int3
ret
mov
mov
aaa
inc
mov
cltd
js
clc
push
push
mov
add
add
push
lods
add
dec
or
sub
into
dec
jg
push
aaa
mov
ret
divb
xor
mov
out
or
mov
add
scas
testb
mov
mov
jno
jg
orb
nop
stc
xor
int
loope
jbe
insl
sub
inc
imulb
cltd
rcrb
in
cwtl
mov
mov
dec
rorb
add
insl
sarl
scas
inc
jae
popf
cmpsl
mov
cmp
sub
sbb
fstp
lret
addr16
sub
inc
jb
insb
pop
xor
push
pop
mov
pop
mov
insb
fcoml
ja
aaa
cmpl
pop
popa
test
xor
inc
push
push
pop
ljmp
and
inc
dec
repz
jp
insb
push
movl
lret
movl
push
inc
pop
shlb
jne
xchg
add
push
cmpb
xchg
imul
cmp
lret
cltd
cmp
icebp
in
stos
stc
inc
and
dec
lret
lcall
push
adcb
inc
pop
ret
cmc
insl
dec
arpl
adc
movl
sbb
inc
lods
fistl
bound
lea
mov
incb
test
or
push
out
adc
push
and
in
ret
ds
add
push
das
sub
loop
test
and
pop
pop
sub
icebp
push
fidivl
pop
int3
sbb
in
cmp
jne
dec
movsb
outsl
xchg
andl
jmp
dec
cmc
negl
dec
sbb
setno
xor
add
aam
out
push
out
mov
and
sbb
mov
mov
push
out
push
int
mov
or
daa
xor
in
jle
popa
in
daa
sbb
xchg
popf
add
pop
push
imul
std
add
add
pop
add
aad
int
adc
js
test
push
sub
xor
xchg
pop
mov
and
sar
ds
xchg
pusha
xchg
xchg
fwait
xchg
add
xchg
jl
xchg
imul
out
std
jne
cmpsl
in
fdivrl
outsb
cmpsb
mov
cwtl
call
cli
pop
sub
cmp
icebp
stos
xchg
pusha
les
cwtl
and
and
cld
imul
sahf
xchg
lds
xor
push
in
dec
out
gs
xchg
sub
mov
shrb
stc
sbbl
mov
sbb
push
int
push
push
inc
ret
sub
dec
jns
pop
pop
ret
bnd
jns
mov
sub
in
and
pop
cmp
jb
xor
stos
lea
xchg
cmpsb
mov
and
mov
cltd
xchg
xchg
mov
das
xchg
xchg
sahf
add
fsubl
sbb
push
popf
push
mov
push
adc
clc
das
push
out
jle
xchg
lds
jl
xor
mov
int
add
dec
xchg
pop
mov
sbb
dec
sbb
xchg
ljmp
jl
cli
pop
inc
idiv
insb
and
mov
dec
pop
mov
rcll
dec
jo
fwait
cmpsl
cli
pop
sub
pusha
test
inc
push
push
xlat
outsl
adc
pushf
popf
mov
cmp
hlt
scas
pop
sbb
je
xchg
adc
jns
addr16
sub
xchg
or
inc
aas
jb
jle
adcl
push
adc
jo
lret
in
push
lret
add
ja
or
cli
sbb
cmp
xorb
sahf
cltd
push
adc
ss
fs
fistpl
movsl
lods
lods
mov
repz
mov
dec
jbe
xorb
xchg
mov
adc
and
or
into
inc
mov
je
in
arpl
mov
int
xchg
iret
popf
xor
cld
adc
imul
icebp
stc
aad
add
mov
lods
adc
arpl
js
dec
mov
jnp
jo
fadds
push
test
xor
pop
lods
cmp
cmpsl
inc
or
cli
scas
sub
jnp
and
aad
xor
mov
cmp
mov
mov
ja
ds
jecxz
mov
sub
jmp
dec
mov
push
test
pop
push
push
cmp
repz
xor
imul
loope
xchg
xor
adc
xor
adcl
sub
dec
jno
repz
je
shlb
jbe
daa
lock
cltd
cmp
cmp
mov
or
push
aam
cmpsb
xor
mov
adc
xchg
lcall
sbb
in
pop
jne
aam
ss
bound
xchg
pop
jg
mov
push
mov
cmpl
jmp
lods
test
xchg
xor
pop
in
in
subl
xlat
and
fwait
inc
lret
xchg
pop
xchg
mov
xchg
aam
scas
adc
sbb
ja
decl
add
repnz
dec
sbb
mov
dec
dec
int3
or
sbb
fmul
xor
clc
dec
push
filds
sub
adc
jnp
mov
cmp
add
imul
pop
pop
mov
push
sub
sahf
push
push
je
mov
mov
xlat
mov
fadd
inc
xchg
ret
repz
les
incb
inc
jns
cmpsb
outsl
jno
ja
movsl
mov
mov
in
inc
popf
fiadds
jecxz
xor
pushf
data16
add
test
scas
dec
insl
mov
rol
mov
cmp
and
hlt
rorl
mov
movsl
jb
xchg
stos
jmp
xor
xchg
rorb
call
xor
ja
pop
mov
sbb
mov
pop
sarb
movsb
inc
in
loope
cmp
outsb
mov
pop
and
sub
cmp
call
xor
push
and
cli
pop
jp
ss
stos
scas
or
mov
xor
test
iret
into
icebp
test
bound
jae
and
dec
jo
loope
inc
popf
stos
adc
sub
jbe
shrl
cmp
pusha
push
dec
xchg
scas
in
mov
xor
inc
aad
jbe
or
inc
lahf
mov
and
repnz
push
test
aam
add
xlat
or
lea
scas
mul
ja
scas
sub
outsl
xchg
adcl
leave
stos
in
insl
mov
mov
fbstp
and
in
adc
cltd
popf
mov
ds
sti
xor
or
outsl
int
ja
in
mov
inc
pop
xchg
ret
shl
and
and
outsb
cmpsl
cwtl
jo
mov
roll
mov
repz
push
mov
jno
mov
dec
lods
rcll
xchg
sub
sub
and
push
mov
cwtl
xor
daa
xor
call
sub
gs
dec
cmp
mov
das
ficompl
xchg
mov
lods
out
pop
in
and
in
pop
inc
in
je
insb
sub
xlat
cmc
aaa
sbb
testb
shrd
rcrl
stos
ficomps
lret
daa
in
loope
aaa
push
aad
jl
push
and
data16
jnp
adc
mov
xor
ljmp
stos
fistpll
cmp
mov
outsl
or
mov
aas
ja
add
mov
push
repz
scas
int
out
rolb
ja
or
xor
or
fsubrs
js
imul
cmp
mov
fidivrl
mov
repnz
pop
sbbl
push
mov
sbb
jmp
push
sub
push
je
ret
cmpsb
loopne,pn
hlt
lret
mov
sti
add
fbld
fmull
push
mov
ljmp
pop
jns
jl
xchg
push
mov
sbb
outsl
sub
rcl
stos
in
push
push
jbe
lds
jbe
out
jle
add
pop
sarl
sarl
sbb
jae
addr16
or
pop
stc
xchg
adc
lods
push
fisubrs
mov
xchg
flds
jmp
push
cmp
xor
mov
inc
lret
xor
mov
aaa
cmp
and
mov
lea
xchg
xchg
mov
das
fbld
xor
fdivrs
dec
pusha
push
nop
out
mov
call
mov
repnz
repz
fstpl
das
ja
cmp
or
cmp
loope
mov
sub
jo
arpl
mov
iret
pop
xlat
lcall
jae
rorl
cmp
cmpsl
push
cmpsl
push
lock
loope
mov
ret
push
imul
and
and
mov
js
fstpt
and
pusha
test
ljmp
inc
icebp
jle
dec
pushf
iret
jl
push
dec
fstps
push
jo
adc
jae
add
dec
mov
shlb
icebp
cwtl
jnp
nop
push
in
push
inc
mov
or
sub
jp
mov
and
mov
inc
int
ret
pop
imul
das
jmp
mov
push
sti
lret
scas
push
sbb
cmp
sub
das
and
sub
jo
jmp
jae
adc
out
lahf
pop
mov
imulb
ret
popa
mov
mov
iret
mov
push
pop
movsl
dec
cmp
sbb
and
adc
xor
pop
aam
enter
dec
test
sub
add
mov
inc
xchg
out
mov
lods
sbb
and
lods
push
and
cmp
scas
scas
pop
subb
inc
pushf
addb
push
pop
ds
pop
pop
les
fisttpll
xor
lds
adc
mov
loop
adc
arpl
pop
mov
test
jg
std
aam
cld
mov
push
pop
ficompl
icebp
sbb
xchg
xor
pop
or
lahf
das
lret
cmp
mov
add
lds
lock
les
mov
xor
fldenv
pushf
scas
mov
mov
insl
xor
xor
lret
dec
mov
mov
and
cmc
or
add
sub
mov
pop
vmread
and
pop
in
dec
int
rclb
les
inc
pusha
push
push
rorb
ds
jnp
dec
jg
aad
inc
hlt
dec
mov
inc
inc
cltd
cmp
pop
popf
repz
mov
xchg
push
je
sub
jecxz
and
outsb
and
cmp
lahf
adc
daa
leave
int
les
call
cmp
dec
mov
std
pushf
adc
inc
cwtl
jo
stc
mov
jbe
movsl
fsubl
les
cmc
sub
or
jge
insl
imul
jae
pusha
test
aad
sub
in
push
cli
add
movsl
pop
jecxz
subl
popa
dec
mov
mov
push
xlat
in
setae
sbb
shlb
cmp
push
jns
inc
cli
dec
cld
test
xor
sbb
sbb
sbb
jecxz
add
add
or
mov
mov
daa
loop
cmp
sub
push
xor
mov
out
and
jmp
sub
cltd
inc
lret
or
lock
cmp
fisubs
jge
shlb
and
ss
roll
aaa
inc
push
rcll
enter
push
ret
or
gs
mov
pop
add
jl
or
aad
sub
hlt
jae
adc
outsl
mov
aaa
test
adc
add
push
arpl
pusha
hlt
pop
jmp
aad
inc
adc
mov
sarl
lock
mov
fwait
sbb
ret
push
gs
ret
mov
pop
andl
jge
insb
jle
adc
mov
push
or
shl
inc
push
daa
mov
outsl
inc
cld
cmp
and
push
outsl
pop
addl
arpl
imul
or
mov
js
sbb
inc
clc
cli
xchg
fisttps
pop
mov
fwait
mov
cltd
and
or
mov
xchg
mov
sbb
imul
repnz
inc
ret
mov
ret
mov
dec
mov
sarl
aaa
or
imul
roll
shr
daa
sbb
dec
icebp
into
sub
push
inc
lods
push
mov
mov
cmp
xchg
adc
int
xor
sahf
jmp
ret
xor
dec
bnd
jle
test
cmc
cmp
dec
jp
adc
cwtl
pop
imul
push
and
adcb
test
adc
dec
mov
jne
popa
ret
sti
fstp
mov
pop
je
and
rcrb
pop
mov
add
test
sbb
mov
cmpsl
out
cwtl
jecxz
or
mov
pop
fstl
mov
sub
fwait
mov
adc
dec
add
or
and
dec
mov
dec
out
test
sbb
or
mov
sbb
outsb
mov
jl
repz
clc
sti
sti
cmp
std
pop
mov
and
mov
mov
hlt
lds
inc
roll
bnd
aam
push
movsl
cli
mov
imul
jge
leave
ljmp
call
insl
aas
cmp
fisubrs
dec
pop
pop
mov
xchg
xchg
sbb
and
nop
jns
mov
test
mov
faddl
pop
mov
dec
das
pop
out
shl
and
and
dec
mov
stc
out
aad
sbb
aas
mov
push
aad
cmp
pop
jle
inc
sahf
ja
sub
jmp
hlt
mov
jmp
into
shrl
jl
jg
cmovle
lods
adc
test
xchg
pop
loope
mov
inc
in
adc
jne
dec
add
mov
and
inc
cmp
out
inc
add
jns
add
mov
add
test
xor
inc
mov
ds
inc
outsl
fmull
clc
push
out
inc
sbb
jae
stos
mov
adc
imul
add
addb
aas
shlb
mov
in
aam
push
ljmp
aaa
pusha
sahf
outsb
cmpsb
out
inc
mov
cmp
das
fldcw
mov
mov
retw
mov
add
mov
stos
rcr
push
xchg
hlt
jmp
orl
adc
ret
mov
movb
dec
mov
fiadds
lods
cmp
test
pop
sbbb
sbb
pop
lods
or
imul
in
push
jl
pop
xlat
mov
mov
push
filds
fs
ljmp
jbe
xchg
jecxz
pop
or
test
mov
outsb
xchg
cwtl
jbe
xor
pop
pop
xor
sub
arpl
jmp
push
inc
loope
inc
test
inc
inc
pop
fstl
test
sbb
and
sbb
xchg
sub
aam
stos
push
or
xor
cmpsb
adc
mov
loopne
test
push
dec
mov
push
push
iret
rclb
movsb
lcall
and
jo
sbb
mov
sub
shl
movsl
sub
insl
dec
cld
outsb
or
adc
and
gs
out
or
outsb
sub
pop
pop
out
call
or
or
mov
pusha
mov
fwait
dec
std
lret
pop
stos
stos
add
inc
sbb
in
test
cmpsb
pop
push
push
xorb
ret
adc
xor
scas
cld
mov
and
jmp
call
xchg
vmread
les
test
int3
adc
ja
dec
imul
in
not
mov
adc
sti
arpl
push
mov
iret
add
movsb
or
push
push
jecxz
push
pop
int
xchg
add
pop
xor
or
xchg
add
sti
and
aad
leave
enter
stos
jge
jnp
dec
xor
incl
das
out
jnp
clc
into
mov
popf
cmpsb
int
scas
dec
cmp
in
imul
jle
rcr
popl
rorl
sbb
rclb
dec
cmp
push
fst
adc
push
inc
ds
fisubl
in
mov
popf
adc
rorl
cmpsl
setns
mov
lock
xor
sub
pushf
pop
popa
mov
dec
mov
mov
inc
or
filds
stos
push
sbb
pop
cmp
mov
cs
or
inc
sbb
xor
insb
aam
dec
gs
jp
mov
mov
pop
pop
cmp
mov
sub
scas
imul
hlt
out
insb
jb
sub
in
inc
push
outsb
sub
data16
add
enter
inc
mov
pop
rcll
in
mov
jo
pop
leave
incb
add
cmp
call
jge,pt
dec
ljmp
imul
mov
and
ljmp
inc
cmc
orps
jp
pusha
out
push
xlat
pushl
and
pop
ja
push
jbe
je
mov
inc
mov
hlt
negb
jbe
sbb
jle
sarl
xor
orl
add
pop
mov
aam
fwait
mov
mov
mov
gs
addl
adc
mov
test
xchg
xor
lock
mov
leave
add
xor
shrb
jmp
cmpsb
test
pusha
lahf
jmp
xchg
mov
adc
or
mov
mov
lea
je
mov
cmp
mov
and
xlat
mov
ljmp
cmp
lock
lret
nop
sbb
dec
outsb
movsb
sbb
outsb
mov
inc
imull
cmp
xchg
xchg
dec
xor
js
or
ret
mov
test
data16
insl
in
xlat
xchg
mov
ljmp
mov
data16
in
loope
lret
adc
pop
jp
mov
div
es
jnp
test
imul
jg
aas
push
cmpsl
inc
sahf
fsubrs
push
stc
psubusb
pop
push
iret
jmp
aaa
add
dec
inc
jmp
pop
pop
aas
jne
xor
adc
ror
insb
inc
gs
lcall
or
jp
xor
insb
jae
and
movsb
ss
cwtl
orb
ljmp
xlat
xor
in
lcall
dec
imul
insb
cmpsl
iret
sub
stc
popa
mov
cmc
mov
call
inc
pop
call
mov
movsb
mov
out
std
ljmp
outsl
mov
xor
jmp
pop
cmp
jp
jg
ja
xor
ljmp
iret
lods
lods
cs
lods
sbb
mov
xor
aad
xor
movsb
sar
leave
jmp
cwtl
adc
pop
loope
ficomps
sub
imul
ds
xchg
dec
andb
jne
stos
test
mov
sub
pop
addr16
sub
dec
lret
aaa
cmp
push
xchg
xlat
lods
sbb
sub
fcomip
insl
pop
sbb
ret
in
icebp
mov
cmp
data16
push
jae
imul
push
sbb
mov
frstor
out
lds
jl
sbb
enter
pop
andl
ret
fs
sub
xor
pop
movsb
mov
loop
mov
fistpll
adc
ret
push
mov
adc
lahf
call
jmp
mov
and
dec
ret
cmpsl
inc
pop
pop
push
mov
push
add
ja
aam
ljmp
pop
pop
dec
sbb
pop
and
fcmovb
pop
cs
fldl
dec
xchg
lock
xchg
cmpl
mov
fsts
jge
cmp
jl
sahf
mov
sub
xchg
xchg
sbb
aad
ret
pop
jo
mov
insb
push
mov
inc
test
jne
iret
repnz
sub
cmpsl
pop
sub
fcoms
jp
ss
jno
mov
int3
loopne
lret
les
xchg
leave
movsl
xor
mov
jle
or
cmp
mov
adc
cmp
jb
xchg
rorb
sbb
xor
rorb
ficompl
mov
stos
bound
repz
outsl
repz
jle
in
mov
push
mov
adc
sbb
add
pop
sub
ja
and
nop
outsl
push
cmc
pop
test
dec
lahf
jge
in
fistl
roll
dec
cld
out
out
xchg
jae
enter
sub
ja
and
fwait
mov
mov
mov
inc
jmp
xchg
and
cmp
cmp
out
pop
daa
pop
or
pop
imul
jns
sub
cmpsl
adc
dec
nop
clc
pop
pop
jp
jnp
inc
adc
jg
in
out
push
or
rcrb
mov
or
or
push
sub
cmc
xchg
aam
fdivl
xor
add
ficoml
divl
push
and
imul
xchg
push
mov
mov
jl
xor
push
sub
sbb
xor
dec
test
addb
jae
lret
imul
iret
pop
xchg
jecxz
repnz
imul
sahf
rcrb
adc
adc
inc
aaa
add
jnp
pop
cmp
clc
movsb
das
mov
scas
pop
push
xlat
jno
mov
pusha
mov
outsb
adc
pop
sbbb
subb
inc
mov
loopne
fildl
dec
stos
mov
or
in
fisttpll
data16
inc
aad
sub
fst
sub
pop
test
dec
test
fldenv
fstpl
mov
test
jae
xor
mov
jle
pop
into
mov
cmc
pop
adc
dec
or
cli
ds
jmp
add
mov
lods
ds
cmp
adc
fdivrl
add
ficoms
in
mov
inc
mov
pop
insl
js
lcall
mov
in
pop
mov
gs
inc
sub
cwtl
mov
xchg
or
sub
movb
in
cmp
popa
je
fimull
cmp
sbb
cmp
mov
push
scas
pusha
pop
add
mov
dec
div
mov
popf
adc
adc
call
ret
push
jno
dec
mov
iret
jp
xchg
lret
aam
xor
xchg
gs
repnz
adc
push
xchg
test
jmp
out
call
adc
xchg
sbb
add
or
or
jb
jmp
inc
and
ja
and
cmp
mov
adc
fsub
stos
out
lods
xor
andb
mov
xor
cmpb
mov
inc
xchg
daa
in
pop
dec
push
rcrb
or
jmp
and
mov
adc
push
and
fsubs
xor
mov
mov
jno
push
pop
ljmp
push
xorl
insb
enter
test
mov
adc
cld
cmp
xor
push
outsb
mov
scas
xor
rcl
aad
pop
out
das
add
sbb
and
or
pop
sub
insl
jbe
inc
cmpsl
test
mov
and
cmp
xor
push
mov
sub
pop
mov
data16
mov
inc
cmp
xchg
movsb
xor
lock
loope
sub
push
arpl
mov
enter
lahf
leave
aad
jge
xchg
stos
jnp
in
xchg
push
leave
push
sbb
ret
push
cwtl
das
in
fadds
cmp
outsb
cmpsb
add
ljmp
or
addr16
xchg
and
inc
jnp
xchg
ret
in
faddl
into
in
lea
push
jmp
xchg
jle
xrelease
mov
int
push
sahf
pop
addr16
cwtl
cmp
cltd
mov
sbb
cmpsb
popf
mov
sbb
pop
imul
sub
or
enter
cmp
popf
jae
inc
dec
stc
outsl
std
sti
decb
jo
sbb
xchg
int3
sub
or
pop
sbb
das
xor
enter
repnz
frstor
xchg
xor
vshufps
inc
cmp
pop
sub
add
inc
mov
xchg
dec
les
adc
jmp
sar
cli
lret
push
push
xchg
pushf
insb
xchg
cmp
pop
sbb
xchg
pop
cltd
dec
push
cmc
fs
mov
and
sub
jecxz
jo
push
popf
das
jmp
aas
mov
scas
das
dec
pop
mov
fwait
or
test
lret
push
mov
sub
mov
adc
push
shlb
sbb
push
adc
dec
cmp
popf
jnp
mov
adc
stc
cmp
dec
sub
neg
sub
cld
sti
jle
cmp
push
cmp
enter
pinsrw
push
cmp
mov
icebp
iret
mov
stos
lret
out
pop
or
mov
jne
scas
pop
je
add
adc
mov
insb
loop
pushf
pop
xchg
mov
loope
in
adc
fidivl
rclb
int
push
nop
ljmp
scas
mov
movsb
pop
int
pop
xchg
cmpsl
pop
in
lea
aaa
out
push
imul
mov
pop
cltd
mov
repnz
rcrb
mov
rclb
mov
lret
ss
cmpsl
arpl
stos
xchg
inc
out
push
inc
outsb
adc
fidivs
fs
add
decl
ret
add
in
or
xor
mov
xchg
jns
or
mov
adc
sub
pop
jp
iret
xchg
mov
jmp
jmp
subb
or
sub
pop
sahf
aam
cmp
pusha
sub
adc
push
out
pop
add
fisttpl
notb
cli
jb
out
inc
lea
and
push
fs
pop
mov
inc
test
divl
fwait
out
or
cmp
shr
into
sbb
bound
jno
xchg
imul
hlt
add
mull
push
out
je
xor
xchg
frstor
lods
cld
xor
mov
movsl
push
jb
or
pop
cmc
mov
aaa
ds
js
out
sub
call
aaa
sbb
cmp
pop
cmp
scas
lea
inc
pop
iret
sbb
dec
xor
aam
loop
cmc
insb
pop
inc
int
or
cmp
add
cmp
mov
push
xchg
mov
insl
push
dec
mov
stos
lret
gs
movsb
sar
push
stos
das
mov
bound
movsl
and
in
xor
jne
mov
jns
cmpl
adc
test
dec
pop
inc
xor
dec
xor
sbb
xchg
xor
fnstsw
in
inc
cmp
je
sbb
std
jbe
js
or
lods
rcl
std
jo
push
test
pop
aad
xor
sti
cmpsl
push
out
loope
mov
movsb
mov
push
jp
jbe
sub
sbb
cmp
scas
ss
movb
cmpl
jecxz
mov
sub
pop
scas
scas
sub
cmp
sbb
pushw
pop
out
xchg
addb
mov
call
xchg
loope
fisubrl
pop
jp
inc
cmp
pop
nop
xchg
xchg
out
loop
sbb
cmp
sbb
arpl
mov
inc
mov
cmp
lahf
loope
fiadds
add
jecxz
pusha
sub
pop
lahf
or
fmuls
jmp
lods
mov
and
repz
add
jnp
ljmp
imul
outsb
dec
add
and
or
sbb
jge
lods
lock
push
jo
bound
in
call
adc
inc
xor
loope
push
adc
mov
jp
push
cld
add
lods
pop
pop
inc
or
mov
lahf
int
dec
cmp
sar
xor
sbb
xchg
popa
ds
lret
push
fsts
jp
xchg
dec
arpl
std
in
xlat
subl
and
add
out
mov
scas
js
push
sahf
cmpsb
mov
cmp
mov
insb
mov
lcall
push
mov
shr
in
gs
push
mov
or
enter
xlat
shlb
sbb
cmp
xlat
pop
mov
notl
pop
pop
sbbb
outsl
xchg
cmp
jnp
cmp
ja
mov
fistpl
out
mov
arpl
ficomps
cmp
cwtl
aam
aam
xchg
push
add
fs
clc
test
lcall
cli
jle
jp
mov
mov
mov
jmp
inc
jb
enter
stos
loopne
sarl
adc
mov
leave
sahf
jl
dec
aad
and
repz
and
cmp
mov
inc
mov
mov
pushf
leave
hlt
add
in
loopne
ss
mov
pop
into
mov
fldenv
int
and
mov
dec
shr
xlat
fs
mov
mov
lock
push
mov
test
adc
pop
and
out
push
xor
shlb
cmpsl
arpl
mov
mov
cmpsb
sbb
fstl
xchg
inc
fadds
and
ret
test
inc
leave
cmp
inc
loopne
mov
rorl
inc
in
flds
aaa
outsl
js
push
sbb
jne
mov
adc
repz
jmp
test
cmp
cwtl
lcall
xchg
jmp
mov
rolb
or
sub
repnz
xor
pop
sub
mov
cs
enter
stos
adc
and
call
shll
test
dec
adc
sub
popf
inc
fcomps
dec
lods
xchg
jmp
mov
mov
test
clc
sahf
mov
inc
ret
xor
fstl
mov
cmp
in
inc
mov
push
mov
test
mov
xchg
cltd
dec
push
mov
mov
sbb
cli
add
dec
xor
int
test
ljmp
sahf
dec
sub
sbb
mov
adc
shll
push
into
pop
jl
xor
dec
mov
or
dec
inc
and
xchg
cltd
cmp
outsl
jecxz
mov
addr16
or
push
mov
adc
mov
mov
repnz
ret
sub
adc
aas
cwtl
mov
ret
fwait
cld
sub
and
or
in
adc
andl
rorb
cld
jnp
fs
test
push
sub
jns
pop
arpl
dec
fbstp
or
lds
sbb
sarb
repz
xor
mov
push
mov
aaa
jl
fsub
mov
pop
mov
cs
or
xlat
in
add
sub
stos
mov
inc
xor
mov
cwtl
mov
mov
jp
inc
cwtl
lret
adc
push
inc
cmp
into
test
mov
stos
sub
or
push
mov
inc
mov
fmuls
jae
inc
mov
cmp
or
mov
inc
pushf
adc
push
sub
mov
push
mov
fimull
rcll
jbe
jno
mov
out
mov
dec
scas
or
fwait
or
cmp
cmp
scas
cmp
scas
xor
cmc
mov
adc
data16
jo
xlat
mov
leave
nop
lock
cli
sbb
cmpsb
jae
js
and
ja
and
xchg
pop
cmp
out
inc
xchg
mov
nop
mov
pop
push
adc
data16
add
mov
jecxz
pusha
mov
push
cs
roll
loopne
daa
push
out
fstl
repz
and
pop
rcrb
and
test
push
sub
imul
bound
xor
push
shlb
mov
js
cmp
mov
pop
dec
mov
rcl
fwait
rolb
enter
mov
push
fdivr
lret
add
shrl
adc
add
inc
loopne
aad
jo
sub
pop
scas
movb
dec
sub
test
cmp
mov
ret
lods
jno
pop
loopne
aad
add
jmp
aad
clc
mov
lahf
pushf
mov
xlat
sub
bound
mov
adc
sub
fnstenv
push
ljmp
mov
xor
mov
xchg
das
movsb
cmp
mov
mov
jne
fsubrp
pushf
push
es
bound
scas
mov
and
pop
enter
and
pop
sbb
aam
sub
repnz
pop
jo
std
or
add
pop
mov
sub
inc
cltd
mov
and
ss
inc
pop
xlat
pop
loopne
test
dec
mov
pushf
outsb
push
jecxz
xlat
xchg
iret
in
es
insl
movl
and
dec
mov
xor
xor
lret
jo
mov
cmp
fsubrl
jge
daa
cld
xor
mov
and
dec
add
sbb
lods
xor
fsubrl
push
pop
fwait
mov
lret
lds
mov
aam
dec
adc
mov
add
jl,pt
mov
and
mov
rcrb
mov
fsubr
xor
insl
insb
cmpsl
popf
sahf
fwait
sbb
lods
hlt
fnstenv
and
test
cli
xor
mov
jp
push
mulb
insb
cmp
pop
sbb
mov
les
push
popf
adc
popf
sbb
inc
aaa
pop
jg
cmp
or
gs
cmp
fs
call
out
lahf
call
jae
popa
and
push
cmp
icebp
rcrb
pusha
inc
leave
push
sub
mov
dec
inc
rcr
jecxz
repnz
pop
test
jne
lods
ja
pop
add
add
and
test
popa
pop
sbb
sub
push
out
and
jge
push
inc
rcrb
aam
cmp
iret
mov
and
sbbl
pushf
outsl
test
sbb
jo
jecxz
inc
xchg
fs
adc
cltd
cmp
std
rcr
inc
xchg
outsb
adc
out
mov
daa
mov
push
out
xchg
inc
mov
adc
sahf
cmp
icebp
mov
or
ret
int
mulb
mov
mov
dec
push
mov
and
sahf
xchg
or
mov
scas
pop
dec
push
btr
pushf
lar
shl
dec
jg
push
mov
mov
dec
sarb
rol
loop
inc
jo
dec
push
adc
adc
shll
inc
or
inc
scas
push
int
call
roll
push
jbe
loopne
into
addr16
inc
call
hlt
movsl
or
push
push
scas
jb
add
mov
testb
mov
inc
mov
cmp
jmp
cli
inc
setg
jp
testb
xchg
dec
adc
sbb
adc
out
jp
stos
ret
scas
xor
fs
cs
movsl
sub
hlt
or
data16
or
mov
lods
and
jp
sub
mov
in
cs
fst
mov
push
call
aam
dec
cmpsb
jmp
cmp
push
or
aam
dec
lds
push
loope
imulb
dec
in
fimull
leave
adc
xor
shll
or
xchg
push
push
outsl
mov
or
out
test
dec
mov
in
sub
mov
xchg
cmp
clc
ljmp
pop
mov
lock
fnstenv
pop
test
cltd
fwait
xchg
pop
dec
shlb
dec
cld
stos
or
mov
arpl
aam
nop
pop
jg
pop
rol
in
nop
mov
mov
sbb
sub
adc
adc
mov
mov
sbb
ljmp
adc
adc
inc
loope
or
mov
mov
fsts
mov
mov
mov
mov
minps
pop
pop
call
pop
jae
dec
outsb
rcr
push
push
out
xor
dec
das
mov
push
loopne
sbb
inc
mov
xchg
xor
push
xchg
cld
testb
lahf
hlt
sbb
ljmp
test
movsl
push
test
and
rcrl
sub
xor
subb
roll
lea
adc
inc
xchg
mov
xchg
mov
add
jmp
lcall
or
mov
mov
dec
pop
dec
lret
jo
rcrl
dec
add
hlt
fs
cmp
ret
push
dec
mov
ss
and
loope
outsl
shlb
cmpsb
subb
shll
add
cltd
out
and
push
test
loope
inc
mov
ficompl
inc
mov
aaa
cli
cmp
xchg
movsb
lcall
popf
repz
or
mov
pop
and
lock
xor
or
dec
in
lret
sub
movsb
jae
mov
inc
cmpsb
or
mov
jns
in
or
and
outsb
pop
mov
cltd
cmpsb
repz
pop
loop
subb
and
pop
outsl
in
setae
push
into
xchg
mov
shr
insb
xor
fsubr
cmpsl
test
and
cmpsl
mov
jb
ret
int
jno
mov
mov
mov
and
jne
and
shlb
pushf
sub
lret
es
lahf
xor
mov
ljmp
push
pop
dec
cmp
xchg
sbb
js
push
imul
cmp
js
add
jl
inc
imul
sbb
out
add
scas
imull
mov
movl
or
in
mov
mov
sbb
add
sbb
clc
aam
sbbb
dec
jmp
mov
or
in
push
inc
insl
and
sub
insl
lods
cwtl
out
cmp
inc
adc
push
mov
movsb
xlat
idivl
add
sub
rclb
ljmp
or
out
add
push
outsb
fwait
mov
mov
mov
jb
dec
ret
ja
xor
adc
xchg
cmp
jge
dec
in
cmp
popa
les
mov
int
or
cmpsl
int
lcall
lock
mov
ss
mov
fisttps
ret
sti
and
lea
sahf
nop
pop
add
mov
dec
fnstenv
dec
imul
add
mov
into
push
adc
push
rcrl
rclb
shll
loopne
cmp
dec
mov
jnp
cs
mov
push
nop
mov
mov
std
push
xchg
adc
divl
int
mov
ss
and
add
icebp
clc
mov
sub
xor
and
adc
and
imul
ret
lret
loop
ljmp
push
daa
mov
and
aam
orb
push
jp
add
cld
jno
or
cmc
out
xlat
adc
ret
ret
push
mov
adc
inc
cld
push
pop
fsubl
dec
test
stos
lods
stos
idivl
stos
lods
xorb
lahf
in
js
pusha
dec
in
adc
stos
cmpsl
clc
and
adc
aad
push
mov
aam
fdivl
popa
hlt
scas
mov
cmovle
pop
jns
xor
pop
mov
cmpsb
mov
data16
lea
pushf
push
push
mov
push
idivb
jnp
test
movups
movsb
pop
mov
ficomps
jne
sub
popf
das
mov
add
mov
xchg
lods
and
ss
push
shrl
inc
sub
nop
inc
fdivr
mov
ja
dec
and
mov
jo
pop
es
jg
fistps
sbb
inc
cmpsl
movl
add
ret
push
shll
cmp
jge
sbb
dec
ret
pop
out
bound
arpl
mov
aas
ret
pop
hlt
xor
std
out
mov
sub
lcall
mov
arpl
add
nop
push
hlt
insl
sbb
mov
inc
push
push
cmc
push
dec
cmp
out
xor
mov
sti
jge
push
ret
outsb
inc
xor
outsl
gs
ret
sarl
sahf
loope
loop
push
and
pop
dec
xchg
pop
mov
jbe
adc
push
sbb
rol
sbb
jle
push
and
mov
jg
sbb
int
mov
into
sub
imul
je
lahf
mov
sub
cld
hlt
cmp
cmp
fsubl
inc
xchg
aas
hlt
inc
ret
xor
aam
sub
jo
xchg
in
inc
lods
dec
mov
jno
clc
cvtps2pd
mov
add
inc
data16
xor
js
inc
mov
mov
push
in
fsubp
je
mov
dec
ficompl
fs
jb
incb
push
fs
test
scas
test
lahf
adc
lcall
cmp
push
jmp
push
jb
mov
psllw
mov
pop
push
rolb
push
sbb
mov
push
xchg
xor
jns
loope
cmp
jb
inc
imul
mov
mov
sarl
sahf
lds
mov
sub
jecxz
cmp
jo
stos
dec
xchg
xchg
xor
dec
inc
xor
cmp
mov
loopne
pop
xlat
dec
cmp
mov
fcmovb
rcrb
fsincos
daa
lret
push
clc
inc
and
push
insb
pop
loope
jo
mov
loope
or
pop
mov
jb
jmp
in
xchg
lods
pop
mov
in
lds
les
cmp
in
jg
xchg
pop
sub
mov
jno
cmp
or
cmp
and
dec
add
insb
mov
xchg
ss
mov
push
adc
stos
lock
arpl
jae
sarb
or
inc
sbb
xchg
and
cmp
jne
mov
inc
sarb
inc
sub
push
std
inc
test
mov
aaa
pop
mov
mov
and
and
sar
inc
cmp
icebp
xchg
jbe
lret
test
cwtl
ljmp
lock
pop
paddq
xchg
rcll
out
push
cmp
jle
adc
add
gs
nop
dec
mov
lds
xor
ret
jno
sti
arpl
imul
imul
add
pop
dec
lea
mov
adc
cmc
inc
and
adc
mov
mov
or
push
insb
mov
jnp
mov
add
mov
popl
inc
push
dec
and
mov
loope
icebp
hlt
arpl
mov
shl
jbe
jb
mov
mov
adc
add
dec
out
cmpsl
insl
cmp
sbb
cld
ja
sub
loopne
jp
pop
and
inc
out
or
inc
stos
adc
cmpsl
cltd
or
cmpsl
dec
xchg
add
sub
xchg
je
inc
mov
mov
cwtl
bound
jecxz
push
enter
lods
inc
mov
xor
mov
js
pushf
mov
mov
inc
imul
xchg
insl
bound
xchg
pushf
jno
push
repnz
cmp
lahf
inc
push
dec
mov
imul
and
jle
mov
lds
push
mov
push
cmp
dec
lcall
xlat
mov
pop
mov
stos
in
les
imul
push
or
adc
push
and
xchg
hlt
leave
xchg
cmp
add
ss
sti
mov
popf
jecxz
mov
lock
xchg
div
std
lret
cs
inc
loopne
xchg
out
repnz
mov
addr16
fildl
outsl
bound
sbb
adc
sub
or
cmc
dec
fistps
cli
in
movsl
test
sbb
cs
gs
fs
mov
das
xor
mov
loope
int
int3
popf
arpl
dec
jmp
iret
ljmp
sbb
mov
push
pop
hlt
call
xorb
orb
push
jecxz
mov
push
jnp
push
sub
lahf
xchg
mov
mov
les
cld
repz
std
mov
call
scas
pushf
jl
insb
pop
std
jns
mov
cwtl
xchg
out
push
test
loopne
repnz
add
adc
shlb
jbe
frstor
outsb
scas
lea
in
lcall
arpl
daa
ds
mov
inc
sbb
pop
push
pushl
lods
aam
out
rcl
ds
push
jl
mov
mov
cli
and
push
dec
jnp
mov
mov
int3
popa
push
add
stos
jns
and
xor
arpl
jmp
xchg
add
adc
mov
fiaddl
in
mov
xchg
dec
xchg
inc
cmp
mov
push
push
pop
mov
addr16
insl
cwtl
and
jo
sbb
movsb
sbb
and
aas
repz
sbb
ret
je
add
jle
aas
rolb
xchg
inc
cmp
lret
mov
inc
push
insl
fldcw
inc
xor
adcb
insb
push
ljmp
sbb
lods
outsb
cmp
mov
mov
or
sbb
jae
push
xchg
vshufps
mov
movsl
or
cmp
sbb
js
mov
adc
into
pusha
adc
iret
fidivrl
sub
cli
sahf
jno
jecxz
mov
push
xlat
jl
imul
aas
loop
mov
pop
movsb
cltd
je
mov
xchg
popa
fmulp
int
cmpsl
and
aas
adc
inc
dec
mov
push
push
loope
cmpsl
and
popa
ret
cmc
xor
gs
sahf
cmc
sti
xlat
shr
xchg
add
and
lods
pop
sbb
push
cwtl
xor
or
dec
sbb
push
mov
lock
bound
sbb
mov
mov
cs
sbb
mov
xor
push
lahf
enter
insl
xchg
aas
jno
push
sub
sbb
xor
repnz
rorl
and
inc
rcll
sbb
lahf
jl
and
push
mov
sub
js
loop
adc
cli
xchg
sub
je
std
add
lret
mov
push
xor
pusha
insb
or
loope
sbb
dec
push
ss
scas
adc
mov
push
cmc
push
pop
pop
mov
aas
push
mov
sti
push
lret
ror
in
jo
stos
jne
fisubrl
fstps
test
ljmp
adc
bound
jmp
into
xor
sub
roll
cmp
test
movsl
popl
cmp
jmp
or
cmp
lcall
jmp
pop
inc
daa
mov
arpl
outsb
mov
fbld
fstpt
sub
fdivr
out
les
cmp
or
popa
addr16
xchg
in
push
fsts
cmp
loop
and
and
push
inc
or
jnp
xor
adc
sub
mov
sahf
mov
dec
js
jle
fbstp
jb
or
xor
aam
leave
mov
xchg
xchg
xchg
add
or
push
lret
push
mov
js
adc
pushf
test
lods
mov
jmp
xchg
push
mov
movsl
jno
jne
in
inc
into
in
lret
cli
stos
add
cltd
cmp
div
lods
push
negb
shlb
dec
jmp
ja
sti
xchg
sub
mov
ljmp
push
mov
or
lret
sbb
arpl
ss
popa
cs
xchg
cmp
or
stos
pop
push
mov
incb
sbb
jb
into
sub
mov
mov
xchg
cmp
lret
lahf
dec
cmp
dec
pop
je
jge
and
xlat
sti
jo
mov
and
mov
mov
test
scas
pop
js
and
mov
imul
aas
cmpsl
arpl
push
aam
mov
mov
sbb
xor
rcrl
mov
testb
push
lods
rep
test
mov
sbb
insl
fwait
add
xchg
ljmp
sub
mov
lods
xor
add
shlb
mov
and
int
sub
push
or
cltd
push
bound
out
es
xchg
outsb
movsb
or
mov
cmpsl
adc
loopne
add
jnp
pop
xor
push
mov
sbb
aas
stos
add
negb
xchg
or
and
imul
int
insl
and
mov
sbb
xchg
or
inc
stos
pop
sahf
and
and
or
sbb
push
jg
call
imul
das
and
sbb
push
push
mov
xor
insl
dec
clc
xchg
aad
push
jnp
pop
lcall
inc
xor
push
cmp
in
and
xor
push
std
cwtl
inc
call
push
test
adc
movb
rcrb
cmp
sbb
adc
inc
jecxz
xchg
push
mov
or
sub
dec
insl
pop
mov
xchg
mov
scas
add
out
inc
sub
mov
mov
loop
pop
sub
mov
pop
in
sbb
scas
cwtl
xor
inc
in
cltd
lcall
dec
sub
and
jl
or
mov
js
cmp
or
sub
es
jb
icebp
mov
or
or
push
adc
sarb
push
or
pop
lods
jecxz
sub
in
out
mov
jge
sub
fidivs
les
and
add
adc
es
inc
dec
xchg
test
aad
aaa
movsb
stos
fbstp
xchg
jmp
mov
js
mov
dec
pop
je
mov
mov
pop
mov
ljmp
stc
inc
je
and
push
pop
scas
mov
repz
add
push
std
imul
cmp
add
push
push
xor
jl
jb
cmpsb
mov
lret
fisttpl
inc
out
add
fs
je
xlat
ret
push
and
into
push
fstpl
push
jle
mov
sbb
mov
ror
out
and
adc
dec
pop
loope
jae
add
dec
loopne
inc
leave
icebp
cmp
popf
lea
cmovnp
sbbb
push
cmpsl
pop
jbe
popa
pop
mov
out
cld
pusha
fnsave
fidivrs
push
fs
push
lods
mov
xchg
pop
ret
jl
cs
add
xor
mov
cmc
pop
pop
xor
adcb
filds
int3
out
jns
adc
clc
sbb
jns
imul
xchg
mov
jns
add
adc
pusha
mov
incl
js
pop
dec
cmp
filds
sbbb
outsl
add
ljmp
jb
and
enter
xor
push
pop
xchg
jb
movsl
or
mov
inc
add
jno
sub
ja
decl
test
xchg
xchg
mov
push
xlat
cmp
add
ret
aad
lods
jmp
xor
jne
movsb
push
lods
fisttps
insl
stc
fwait
xchg
repnz
daa
sarb
cmp
push
mov
packssdw
fcmovu
ss
sub
mov
or
test
icebp
cmp
push
clc
ficoms
inc
loop
lods
and
mov
adc
loope
jge
inc
aaa
xchg
fs
outsb
enter
repnz
ficompl
push
or
int
adc
adc
push
ljmp
push
push
xor
mov
ja
insl
inc
sbb
and
and
repz
andl
fsubrl
lret
mov
xlat
stos
dec
adc
sahf
xchg
arpl
fldcw
lcall
inc
movsb
stc
inc
inc
aaa
scas
sub
in
jmp
cmp
mov
dec
jle
push
jns
dec
jno
dec
scas
shlb
push
leave
xchg
or
inc
xor
cltd
out
aad
loopne
mov
xor
add
nop
xor
mov
mov
jge
add
jecxz
xchg
pop
dec
es
mov
mov
xor
xlat
popf
mov
insb
cmp
loopew
leave
adc
pop
inc
sub
mov
ficomps
sbb
fcoml
fstpt
mov
inc
leave
adc
adc
mov
cmc
xorl
data16
ljmp
call
js
fldl
clc
mov
dec
sbb
xor
sub
cmc
jp
add
pxor
call
pop
push
sub
subl
sbb
add
lds
cmp
xor
xchg
sbb
inc
mov
popa
sub
cld
gs
pop
jcxz
adc
clc
inc
xor
adc
push
testb
insb
subb
cmp
cmp
in
jo
adc
mov
lcall
push
aad
loopne
dec
sbb
or
mov
xchg
cmp
lods
and
pop
in
mov
sbb
xor
cld
xor
and
imul
das
arpl
gs
add
cmp
cmpsb
das
es
mov
inc
cltd
inc
popf
fstl
mov
inc
xor
ljmp
in
sbb
and
mov
push
aad
cmp
push
into
cld
cmp
jno
lea
push
divl
movsl
mov
adc
and
rcll
jecxz
scas
test
cmpsl
push
out
jp
xchg
cmp
repz
inc
into
sub
inc
jge
jb
out
adc
dec
mov
mov
mul
mov
jp
pop
cmp
jb
sbb
cmp
aam
mov
fidivs
xchg
gs
mov
xor
xor
fwait
inc
nop
jae
or
out
mov
jo
popf
inc
lcall
daa
sbb
fcmovne
mov
jbe
sbb
push
inc
int3
push
mov
daa
stos
in
and
xor
int3
int3
lods
icebp
or
stos
jmp
sbb
filds
pushf
jnp
les
or
jns
mov
dec
jnp,pn
pop
mov
jp
add
lret
xor
xor
test
jo
imul
inc
jbe
mov
ret
push
jne
xor
sub
push
icebp
push
push
rcr
add
sbb
dec
and
push
jb
jno
leave
push
adc
fists
sub
xor
daa
ja
sbb
mov
mov
ret
mov
bound
gs
mov
orb
daa
arpl
push
sti
xlat
leave
cltd
fsubp
sub
add
out
aas
cwtl
jmp
pop
into
frndint
out
dec
lock
sarl
dec
cmp
addl
jl
arpl
jbe
loopne
outsl
sti
lret
test
cltd
outsb
xor
xor
add
fsubrs
cmp
ret
popf
mov
cmpb
jnp
aaa
out
out
or
add
hlt
int
shlb
cmp
pop
xchg
mov
xchg
gs
pop
mov
push
add
pop
cmp
ret
mov
mov
xchg
subb
in
out
sub
sbb
push
dec
popa
pop
or
imul
scas
dec
sub
sub
hlt
pop
lret
stos
xor
notl
outsl
test
stos
push
xchg
fnstsw
mov
nop
imul
cmp
mov
sub
dec
sub
out
push
xchg
push
mov
dec
dec
pcmpgtb
adc
cmp
cmp
stos
jg
push
cwtl
inc
out
mov
in
fimull
pusha
test
gs
pop
mov
insb
aad
pop
lcall
sbb
lcall
mov
popf
mov
sbb
adc
shlb
sbb
sbb
mov
push
stos
xchg
pop
mov
jle
xchg
fdivl
jp
jns
jmp
in
std
pusha
push
jno
movsb
adc
push
pop
xor
movsl
xlat
daa
inc
cmp
jle
jle
out
movsl
pusha
xchg
decb
push
loop
adc
je
push
inc
fistpll
xor
sti
jg
sbb
and
push
inc
rcl
cmp
push
je
and
jae
mull
cmp
xor
out
inc
pop
int3
mov
addr16
inc
cs
inc
ss
cmp
sti
add
xchg
fisttpll
icebp
xor
cmp
push
cmp
pop
leave
sbb
ret
insb
sub
mov
adc
inc
addr16
bound
jle
sbb
mov
sub
mov
cmp
adc
in
outsl
clc
jbe
xlat
je
cmp
dec
sub
sbb
repnz
pop
cld
unpcklps
xchg
xchg
stos
divl
lods
cmp
pop
stc
shrb
ret
sahf
inc
les
cmp
lret
test
mov
les
inc
ret
add
mov
mov
lret
out
insb
cmpb
clc
xchg
jo
jno
pop
test
pop
sar
std
mov
cmpsb
jno
cmp
fldt
imul
push
pop
pusha
popa
add
rcll
inc
adc
je
cld
ficompl
inc
cmc
add
fcomps
iret
decl
xchg
mov
and
push
ss
data16
dec
lock
outsb
xor
mov
push
cwtl
jmp
mov
clc
lods
push
pop
sub
into
lret
clc
xor
mov
inc
inc
jne
js
loope
push
sub
mov
movsl
xchg
jmp
push
adc
cmp
cs
mov
pop
lret
mov
and
jno
inc
sti
ljmp
fdivl
or
xor
adc
repz
rcrb
sub
insb
mov
mov
sarb
shrb
cmp
mov
sbb
jnp
movsl
movsl
push
mov
inc
jns
in
add
push
fstps
loop
test
arpl
cmp
sbb
dec
lcallw
or
ljmp
aaa
or
outsl
jle
push
cmp
or
sub
ficomps
jb
or
or
dec
sbb
fists
jns
and
push
inc
cli
imul
cmc
push
loope
jne
sub
mov
xchg
insl
outsb
into
adc
sub
mov
ljmp
lcall
out
fcmovb
push
pushl
stos
loopne
jecxz
out
and
lret
jnp
cli
pop
xchg
loop
stos
insb
jl
leave
test
xor
jmp
mov
adc
mov
insb
lds
cmp
mov
shl
loopne
jns
mov
push
or
xchg
std
cs
mov
mov
cmp
stos
dec
fstl
icebp
pop
xchg
pushf
leave
pop
add
push
cmc
and
adcl
jle
adc
sub
adc
sub
in
and
adc
cli
push
sahf
xchg
loopne
or
mov
or
test
adc
popf
xor
pop
stos
adc
out
fsubrp
dec
rcll
jae
repnz
pop
or
and
clc
mov
test
xor
add
xchg
dec
push
mov
sbb
sbb
cmp
cmpsl
incb
fimuls
and
push
dec
mov
popa
repnz
inc
sub
pusha
or
es
cmp
outsb
call
ret
push
sub
sahf
xlat
repnz
pop
dec
push
sub
std
mov
loopne
mov
data16
cmp
xchg
add
clc
nop
inc
popa
xchg
fcmovu
xor
jl
mov
pop
popf
lret
jae
sbb
jnp
cmp
jle
lea
fcomps
mov
leave
cmp
add
mov
cmpsl
popa
ret
adc
mov
sbb
add
mov
pop
sbb
cld
mov
ja
jnp
imul
and
les
xlat
test
jo
mov
sbb
jno
sub
push
mov
and
in
jne
xor
clc
cld
and
xchg
pusha
jl
movsb
push
jno
inc
sub
int
inc
insb
fnstsw
cmpsb
mov
mov
push
lret
int3
mov
sbb
xchg
andb
jmp
push
xor
mov
popf
roll
sub
stc
xlat
push
inc
push
fisttpll
sti
fisttps
pop
divl
inc
jno
cmp
pop
sbb
iret
aam
test
and
sbb
imul
repnz
mov
lods
ds
xchg
jno
xchg
pop
dec
inc
daa
dec
dec
xchg
inc
mov
pop
pop
and
hlt
int
jl
lods
dec
mov
adc
ss
cmp
shl
ret
roll
test
out
xchg
aam
add
pop
dec
push
ret
adc
cmp
jbe
sbb
pop
xor
sbb
jecxz
lahf
xchg
aaa
add
cmp
pop
pop
sub
push
push
ds
sarb
gs
es
mov
jo
iret
cmc
aaa
icebp
rolb
out
cmp
mov
and
xchg
cld
aas
pop
dec
adcb
sarb
dec
scas
dec
mov
pop
andl
inc
or
push
add
cwtl
sqrtps
and
and
mov
mov
sub
push
mov
es
add
cmc
out
add
mov
incb
lret
out
lods
mov
sahf
and
ficoml
repz
push
addl
ficompl
dec
sarl
cmp
and
jp
xchg
mov
ss
les
ljmp
mov
dec
scas
rorl
xchg
jno
fsub
mov
stc
in
scas
popa
rcrb
imul
cmp
rorl
dec
push
subb
ljmp
dec
dec
lds
mov
mov
std
xchg
or
decl
pop
rclb
stos
fs
sti
dec
les
push
adc
push
dec
or
mov
nop
inc
push
out
je
xchg
dec
loopne
insl
ret
xor
and
inc
mov
lea
int
shlb
ljmp
test
cmp
push
sub
adc
icebp
xlat
cwtl
inc
and
mov
xchg
stos
adc
mov
jle
mov
push
jge
aam
dec
push
lods
xchg
jecxz
mov
mov
int
int
pop
sahf
fisttpll
or
jmp
mov
cmp
mov
sbb
jns
cmp
mov
subl
inc
repz
xchg
cwtl
mov
loope
push
mov
adc
cmp
lds
jmp
mov
std
or
stc
mov
dec
pusha
jl
mov
add
sti
or
pushf
mov
gs
sbb
mov
xor
adc
cmp
cmp
test
test
test
mov
mov
mov
push
imul
xchg
mov
adc
sahf
jge
mov
xor
in
jle
sar
rorl
sbb
xchg
das
or
icebp
xchg
jae
mov
jno
fdivrs
ret
jle
test
dec
cmp
loopne
cmc
cli
pushf
inc
sub
rcl
fdivl
imulb
pop
adc
icebp
mov
ss
jae
ds
jb,pt
sbb
adc
xor
sti
je
hlt
or
cwtl
add
lahf
or
mov
test
push
mov
adc
fisubl
fbstp
dec
scas
gs
pop
adc
fwait
rorl
adc
in
dec
sahf
mov
inc
les
sbb
popa
incl
xchg
roll
xor
lahf
sbb
fcomps
push
das
dec
into
and
sahf
nop
inc
push
lahf
cmpb
es
test
fxch
into
xchg
and
movsl
fcomps
iret
push
push
je
shlb
cmpsl
lcall
adc
test
popa
mov
sti
adc
jne
in
add
int
or
xor
mov
test
inc
mov
sub
push
roll
push
outsl
dec
mov
fisubrl
popa
jp
imul
lret
rclb
and
leave
ja
call
push
ss
negb
sub
jmp
cld
dec
roll
mov
outsl
pop
fwait
jle
dec
pop
shr
cli
pop
int3
clc
mov
sbb
lea
sti
dec
xlat
popf
sub
outsb
rcrb
pushf
xor
mov
js
xchg
rclb
nop
repz
adc
mov
inc
jne
jnp
mov
rclb
in
or
jbe
jns
mov
inc
add
pop
shlb
inc
sbb
out
int
fisubrs
push
fs
jno
xor
pop
daa
push
inc
dec
push
pop
sub
cli
std
aas
imul
xchg
jnp
jp
mov
je
je
inc
incl
xchg
mov
cld
stos
mov
les
add
lds
pop
mov
jno
push
stos
push
subl
es
jb
test
addl
mov
in
into
xchg
popa
cltd
test
mov
lds
push
rcrb
icebp
inc
outsl
mov
fwait
ljmp
xchg
cs
jbe
sub
inc
sub
or
mov
dec
dec
je
sbb
movsb
movl
adc
js
xor
cmp
dec
adc
cs
loopne
cmpb
xchg
cmp
std
cmp
lret
xorl
in
das
incb
pop
rol
stos
dec
sub
repz
pop
adc
nop
hlt
and
inc
imul
das
mov
sbb
inc
mov
mov
mov
mov
pop
mov
inc
pusha
mov
sbb
das
jl
sbb
lret
testb
mov
fildll
sbb
push
push
in
das
fmull
xchg
mov
cmc
or
jg
and
aam
stos
xchg
cmp
dec
sub
mov
aaa
mov
std
stc
insb
mov
cmp
insb
and
testb
pop
aaa
mov
arpl
dec
xor
and
dec
push
sbb
pushl
clc
js
in
mov
jmp
inc
dec
adc
or
in
mov
add
lods
test
out
popf
sub
sub
cmp
jo
shr
inc
bound
outsl
sbb
add
ljmp
mul
mov
jg
cmc
xchg
arpl
inc
mov
in
lahf
fmuls
out
mov
repnz
or
call
adc
sbbl
popa
mov
inc
adc
int
loopne
not
cmp
mov
add
xchg
xchg
inc
enter
add
test
mov
or
rclb
and
das
ss
ret
cli
pop
push
jbe
jp
shl
jns
inc
push
pop
or
jnp
dec
sub
int3
movsl
adcl
test
lret
mov
testl
adc
mov
sbb
xchg
popf
rcrb
dec
xchg
cmp
scas
and
mov
pop
lods
ja
aaa
dec
push
clc
cmp
and
dec
pusha
bound
and
lea
jmp
insb
js
aad
outsl
fisttpll
subl
inc
lcall
pop
jmp
fisttpl
pop
fs
ret
idivb
test
mov
jo
cmc
add
insb
int3
and
loop
cmp
cmpsl
and
loop
push
sbb
jne
hlt
inc
push
pop
arpl
insl
or
in
push
mov
mov
cld
xor
cmp
adc
popf
push
in
scas
stos
pop
hlt
icebp
sbb
sbb
rcrb
add
xchg
push
pusha
jne
cmp
xor
aaa
mov
mov
push
or
dec
outsl
push
dec
daa
jg
push
in
and
movsb
push
call
cmpsl
imul
cs
add
pop
inc
mov
sbb
xor
imul
pop
cmp
xor
aad
loopne
adc
iret
mov
aad
xchg
rcr
inc
mov
ficomps
sub
ljmp
out
push
in
cmc
push
mov
aas
dec
xor
cli
pop
ja
mov
sbb
pop
stos
je
pop
insb
mov
xchg
js
inc
jns
pop
in
es
cmc
clc
pop
test
mov
test
jo
xor
adc
dec
inc
mov
cmp
pop
out
sub
cltd
ja
in
pushl
shrb
xchg
pop
cmp
jg
int
lret
in
fs
push
add
pop
pop
cli
imul
call
fnstsw
or
sbb
in
mov
data16
cmp
sahf
dec
popf
shrl
sahf
add
out
mov
adc
mov
stos
xor
inc
enter
lods
fs
aam
xor
leave
sbb
jns
fstl
jmp
inc
push
ljmp
loop
fistps
movsl
jno
jne
test
mov
in
not
cmp
clc
in
js
outsb
xor
dec
pusha
cmpsl
or
sarl
jge
imul
sbb
test
iret
push
and
fs
jnp
sbb
push
das
je
pop
mov
dec
arpl
mov
or
lret
out
call
mov
inc
jge
and
dec
or
jge
xchg
jb
imul
jno
mov
scas
pop
sub
dec
or
insb
cli
fs
pop
loope
sar
pop
call
push
test
out
aaa
scas
sub
in
int3
js
clc
iret
lret
aaa
iret
push
call
jp
dec
nop
push
ja
add
call
das
out
call
sbb
and
jp
jle
add
repnz
add
add
outsl
popa
xor
sbb
xchg
mov
incb
push
outsl
push
inc
roll
ljmp
pushf
leave
xor
div
lock
das
mov
inc
xlat
test
shll
push
push
pop
lret
add
dec
pop
out
outsl
dec
stc
hlt
stos
inc
sbb
cmp
sub
fsubr
and
bound
loopne
sarb
je
jae
pop
jl
js
popa
fisttpll
jle
pop
pop
outsb
fwait
cld
in
lcall
pop
cmp
inc
aam
and
push
mov
jns
adc
dec
mov
mov
call
sbb
pop
dec
scas
out
cltd
je
jge
pushf
frstor
mov
and
cmp
sbb
add
push
test
adc
dec
icebp
sub
sbb
mov
or
mov
push
and
call
insb
push
push
pop
add
xor
jg
out
push
ss
push
test
jle
hlt
pop
fnstsw
mov
dec
and
add
mov
mov
sbb
mov
in
cmpl
and
cmpsl
lods
pop
adc
mov
mov
sub
test
push
sub
repnz
bound
outsb
jecxz
cli
xor
and
jo
in
lods
xor
test
sub
mov
adc
push
pop
stos
xlat
xchg
pusha
adc
orb
add
add
ja
ljmp
movl
popa
inc
sub
cmc
stc
adc
pop
lret
inc
adc
out
movsb
jbe
mov
movsl
pop
test
mov
adc
ficoms
and
xor
push
jbe
pop
xchg
sahf
adc
mov
sub
sbb
sbb
or
in
arpl
xchg
pushf
shlb
in
adc
std
iret
je
mov
cmp
pop
jnp
xchg
adc
jecxz
fstpt
lds
in
xchg
cmc
mov
sahf
xor
pop
loop
mov
xchg
and
sti
int
and
or
fs
cs
cmp
sti
les
inc
imul
sub
cmp
push
js
arpl
pop
cld
pop
ficoms
xchg
sub
xor
cmp
loope
bound
cwtl
lods
inc
int3
xor
daa
xchg
add
mov
repnz
push
insb
fidivrs
cmp
jg
insl
enter
jge
inc
dec
ljmp
out
push
sub
inc
jp
sub
mov
ret
ss
inc
or
loop
fcmovbe
mov
xorl
pop
lock
dec
aas
sub
push
add
sbb
inc
fstpl
testl
clc
sti
sbb
or
mov
sub
mov
lea
dec
sbb
fmuls
mov
ret
aas
or
pusha
in
mov
mov
imul
stc
cmpsb
call
mov
pop
jns
dec
rorb
bound
add
out
add
or
daa
mov
mov
mov
pop
push
out
jb
push
mov
test
pop
inc
mov
enter
sbbb
and
out
mov
and
icebp
vxorps
mov
test
test
pusha
cwtl
aam
sbb
sbb
inc
xchg
rcrl
test
scas
mov
mov
lret
test
add
sbb
add
or
scas
popa
adc
sbb
js
sbb
dec
xchg
push
push
mov
data16
cwtl
mov
pop
mov
js
sub
push
lods
xor
sar
faddl
fwait
jne
xor
adc
je
testb
jmp
leave
in
and
iret
fmulp
cmp
jo
jns
lods
xor
sub
push
push
inc
call
jne
pop
push
xchg
repz
data16
rorl
xor
int3
add
xor
xchg
mov
jmp
cld
test
mov
mov
rcll
push
push
popf
int3
fisttpll
sub
insb
cli
xor
fcoms
ds
shlb
pusha
fmuls
lds
cltd
rcrl
sub
adc
xor
nop
iret
push
cmp
mov
cld
mov
scas
mov
aam
add
outsb
and
sbb
and
bound
cmp
mov
jbe
imul
lret
hlt
xor
push
push
jae
inc
daa
cwtl
cmp
cmp
mov
shrb
inc
dec
dec
cmp
stos
jg
clc
pop
pop
fisttpll
mov
mov
clc
mov
xchg
fsub
inc
ds
out
aam
add
sub
je
pop
loop
mov
jp
adc
xor
cs
inc
sbb
aam
cmp
decb
jmp
fs
or
fildl
fdivrs
in
test
in
mov
mov
add
shlb
dec
sbb
scas
xor
mov
xchg
xchg
outsb
inc
push
lahf
push
test
mov
call
push
jb
cmp
xchg
sub
dec
push
fistpll
clc
mov
fiaddl
sub
test
pop
mov
shrl
ret
push
and
orl
xchg
or
mov
cmp
iret
leave
int3
add
mov
adc
or
inc
fstl
dec
icebp
test
call
mov
and
jl
sbb
mov
stos
or
stc
mov
xor
push
gs
std
mov
shll
mov
and
fisubl
add
mov
stc
pusha
xchg
inc
xchg
adc
mov
ret
xor
and
lret
xchg
pop
or
sub
pop
cmpsl
push
jle
mov
or
pop
lods
jecxz
test
dec
fs
add
int3
cmp
out
xor
lods
or
idiv
jb
ds
push
out
adc
jno
in
je
and
inc
dec
mov
ficoml
sbb
fisubs
xchg
pop
in
adcb
add
or
in
and
mov
sub
xorb
sbb
mov
outsb
mov
negb
pop
add
xchg
lret
and
xchg
push
enter
cmp
pop
mov
scas
or
jnp
jp
in
jb
test
mov
test
repnz
mov
repz
sbb
clc
imul
imul
jg
xor
shrb
adc
and
aam
test
rcl
mov
xor
ss
inc
push
jecxz
out
mov
mov
dec
lds
dec
adc
add
jl
dec
ds
int
xor
lods
mov
popf
jle
xor
ljmp
xor
xchg
and
sub
or
das
popa
aam
jns
cmp
shl
adc
jne
loop
pop
popf
dec
mov
sti
adc
cwtl
jmp
add
and
js
cmp
jmp
add
js
sbb
movsl
sarl
push
cld
add
inc
mov
pop
sbb
adc
mov
inc
repz
arpl
and
cld
leave
mov
pop
mov
stos
push
and
pop
fidivrl
sti
lods
movl
sbb
mov
adc
scas
inc
repz
and
arpl
mov
clc
ret
ret
ret
cmp
mov
or
icebp
lods
cmp
cmp
add
rclb
pop
cmp
sbb
jne
or
add
outsl
or
out
xchg
sub
cmp
mov
loope
pop
and
bound
push
fimuls
mov
jle
fldenv
jne
aaa
rorb
ret
xchg
push
je
cmp
mov
loopne
std
aas
mov
dec
lahf
pop
ret
inc
cmp
setl
stos
ds
int
mov
fidivs
lahf
insl
pop
movsb
xchg
cmp
clc
out
aaa
xchg
in
pop
call
lods
subb
xchg
out
mov
jns
xor
jmp
mov
push
push
mov
movsb
jb
add
jle
rcrb
pop
fnstcw
mov
add
nop
fisttps
sahf
test
pop
lret
cmc
pop
inc
pop
adc
faddl
xchg
jae
cmp
pop
ficoml
imul
push
mov
int3
sbb
jno
out
ja
iret
aas
push
sub
fiaddl
out
icebp
loope
mov
and
popf
xlat
add
int
adc
hlt
mov
jb
dec
icebp
mov
sbb
sarb
arpl
loopne
sub
jp
and
dec
xchg
mov
jl
test
inc
adc
int3
add
fsubr
xchg
xchg
mov
les
push
insl
inc
dec
fcoml
pop
popf
loopne
adc
out
and
rclb
inc
jb
pop
in
cld
idiv
in
pop
mov
test
mov
and
xchg
mov
sahf
mov
popa
fldt
push
push
cmp
pop
sub
inc
popf
mov
jp
cmpsb
mov
xchg
pop
cmp
scas
mov
cmp
in
mov
lcall
mov
inc
lahf
nop
lahf
data16
test
sub
int
sub
or
push
sbb
push
movb
ja
sbb
sbb
imul
or
fcmovne
pop
lods
popf
jbe
jbe
push
sbb
cld
push
xchg
insl
in
jnp
stc
push
mov
stos
add
and
cmc
inc
inc
sub
cmp
push
sub
push
sarb
out
sub
cmp
or
cmpsl
mov
jmp
je
jbe
jl
push
insl
popf
mov
andb
repz
sbbl
mov
dec
cmp
adc
into
or
dec
jge
popa
jo
scas
orl
xchg
ficoms
fidivrl
mov
fstpl
pop
leave
pop
add
jl
lock
mov
cwtl
adc
sbb
fbstp
xor
push
xor
imul
daa
cmp
jnp
inc
rorb
or
jbe
xchg
testb
push
int
dec
inc
jo
dec
sub
mov
shll
mov
sahf
jge
stc
fists
shrb
xchg
daa
and
arpl
push
dec
jg
dec
or
ret
dec
dec
addr16
movsl
notb
inc
sbb
aad
inc
push
ss
push
insb
aaa
pop
or
add
jge
imul
movb
inc
or
in
insl
push
jecxz
in
lret
testl
adc
movsl
cmp
fstpt
mov
sbb
mov
lsl
daa
xor
cli
push
jo
ja
lea
sbb
fadds
ja
test
fwait
sbb
jno
mov
mov
sbb
in
and
pop
xchg
pop
xor
jmp
movsl
jl
cli
jo
jle
fildl
xor
inc
fstl
mov
cmpsl
lahf
cmp
xchg
sarb
aaa
imul
daa
sbb
push
pop
jbe
outsb
mov
dec
sub
int3
stos
cmp
notl
cltd
and
lret
cwtl
jb
cmp
mov
push
ja
sarl
and
mov
mov
push
xor
adc
sub
mov
mov
cld
ret
or
mov
rorb
leave
and
mov
pop
clc
xchg
ja
lds
lods
mov
jno
adc
xor
dec
dec
mov
or
cmp
mov
ljmp
rcl
jecxz
adc
mov
mov
stos
or
sti
test
pop
push
mov
ljmp
das
pop
cli
or
js
xor
mov
add
pushf
add
ret
jnp
fistps
int3
sub
jo
jmp
outsb
sub
imul
xchg
adc
aaa
cmpb
and
adc
call
in
fdivrs
aad
cmp
push
xchg
xchg
xor
divl
popf
faddl
pop
daa
in
dec
mov
pop
dec
cmpsl
mov
mov
fwait
cld
ret
notl
stos
jmp
xchg
mov
addr16
mov
and
scas
jg
sbb
icebp
push
out
insb
outsl
push
dec
adc
mov
lcall
dec
imul
inc
sub
shrb
cmp
pop
jae
test
adc
mov
xchg
iret
jns
in
add
cmp
orl
mov
cmp
addr16
js
mov
stos
les
cmp
inc
daa
push
mov
jl
lods
popf
sub
pop
hlt
lahf
adc
fdivp
mov
stos
jl
pop
negl
ficomps
cmc
pop
cmp
mov
lahf
sbb
xchg
inc
cwtl
push
shlb
imul
push
iret
fists
and
mov
push
arpl
sub
mov
rcll
cmpsl
rclb
push
dec
and
or
xor
shrb
or
lret
dec
push
pop
push
jecxz
popf
int3
loopne
add
jnp
adc
inc
adc
hlt
enter
add
inc
dec
mov
push
mov
repz
push
je
std
iret
add
mov
push
insl
and
dec
stc
imul
dec
pop
add
push
mov
push
int3
pushf
je
mov
bound
jns
sub
imul
xorl
in
lcall
lock
das
jp
sbb
ds
lock
jnp
cmp
sub
and
and
in
xor
mov
push
test
arpl
dec
es
xor
inc
adc
aad
pusha
adc
in
push
mov
and
std
bound
push
add
fists
pushf
test
nop
and
jo
cli
pop
mulb
popa
add
xchg
lods
mov
xor
ret
pop
sbb
jmp
icebp
adc
xchg
repz
fiadds
mov
call
mov
add
ficomps
ss
lret
rcl
shll
test
jnp
push
inc
repnz
fcoml
inc
lret
ja
aad
mov
cli
jo
sahf
out
xchg
xchg
dec
push
movsl
dec
addr16
iret
mov
pop
mov
fimull
sbb
fwait
inc
idivl
sbb
mov
mov
jle
les
sbb
ficoml
ss
fldl
jle
inc
sbb
pop
enter
xchg
xchg
repnz
jne
nop
in
mov
push
mov
mov
mov
fcompl
jl
cmp
dec
popf
cmpsl
inc
xlat
aam
movsb
push
fidivs
sbb
stos
push
push
ljmp
test
movaps
hlt
ret
sub
repnz
pushf
jl
es
xor
jp
mov
popa
xchg
xchg
cli
mov
lret
xor
pop
int
mov
out
dec
into
or
xor
loopne
cmp
push
mov
push
mov
movsb
jge
sbb
iret
jo
mov
push
cmpsb
jmp
xchg
gs
add
pop
jg,pt
lds
arpl
cmp
cmp
cmp
fldt
pop
aaa
inc
pop
loope
cmp
loopne
inc
adc
push
sub
pusha
xor
lea
mov
jbe
aad
push
call
jg
push
mov
orps
fcmovbe
cwtl
and
aaa
push
fsubs
mov
scas
je
nop
repz
out
lea
xchg
cmpsb
inc
and
push
push
xchg
or
xchg
rorb
lods
gs
lcall
push
jb
pop
push
mov
jne
scas
mov
or
aam
mov
jmp
xorl
fisubrs
mov
into
ds
aad
lret
xchg
loope
and
aad
push
mov
fdivl
push
jae
cld
lods
mov
sarl
push
xor
mov
mov
mov
mov
in
aad
sub
out
cmpsb
int3
pop
cli
loope
pop
pusha
shrl
sbb
std
add
fwait
adc
mov
fildl
jecxz
cltd
mov
dec
nop
scas
nop
shrb
aad
pop
pusha
push
scas
push
nop
pop
mov
movsl
inc
dec
inc
pop
add
pop
push
ret
push
cmpsl
fists
repz
call
imul
cli
xchg
mov
dec
out
push
sub
pop
mov
cmp
bound
mov
pushl
clc
pop
cmc
dec
or
and
clc
mov
ret
mov
gs
dec
push
test
sub
nop
mov
mov
rorl
jbe
inc
outsb
orl
cmp
lret
sbbb
fmul
iret
dec
fstpt
mov
push
mov
loopne
lahf
and
sti
mov
jle
mov
pop
imul
inc
arpl
je
add
xchg
fistl
gs
fistpll
and
sbb
mov
iret
sbb
outsb
in
sahf
fsubrl
mov
pop
dec
mov
and
rcll
sbb
pop
mov
nop
icebp
outsb
cmp
addl
lods
rolb
sub
sbb
mov
lret
test
jge
into
int
mov
mov
loope
cmpsb
rcrb
xor
add
test
mov
ja
mov
je
push
lock
push
fdivs
hlt
cmpsb
in
ror
push
rclb
popf
jmp
cmp
aad
mov
pop
jae
pushf
xlat
adc
gs
sbb
inc
fnstenv
sbb
dec
insb
out
cli
pop
mov
add
adc
mov
std
inc
push
push
ret
aad
push
mov
ja
xchg
fcomps
jmp
sub
sub
push
fwait
xchg
adc
inc
loope
arpl
xor
adcb
in
lcall
mov
mov
mov
or
popa
imul
pop
std
loope
mov
xchg
pop
dec
adc
jne
in
shlb
xor
jne
cmpsl
mull
lock
or
inc
andb
xchg
test
sub
push
xor
jl
cmpsl
js
cmp
add
mov
and
push
into
pop
jnp
add
cmp
inc
mov
add
pop
inc
jns
mov
jb
sub
ret
mov
test
inc
shll
inc
jb
rclb
sbb
pop
loop
xor
testb
mov
mov
inc
sti
sub
adc
stos
int
out
stos
dec
jno
shr
fstl
lods
inc
sbb
icebp
and
pop
test
movsb
sbb
shrb
movsb
add
xchg
jg
insw
or
dec
cmpsb
pop
push
inc
push
inc
jmp
lods
int
cmp
shll
jns
repnz
or
mov
fisubl
cmc
fistpll
in
fidivrl
pop
test
cmp
cmpb
push
xor
popf
and
sbb
in
pop
scas
loop
jae
aaa
jns
shll
xor
nop
sub
inc
int
flds
and
mov
shlb
out
jl
clc
int
sar
add
pop
push
mulb
xchg
rcrb
mov
in
pusha
pushf
popa
inc
loopne
cli
mov
dec
or
jno
push
paddsb
cltd
xchg
fildll
icebp
xor
push
add
lods
push
mov
cmpsl
mov
stos
rcrb
pop
mov
xchg
mov
jmp
push
inc
pushf
fidivrl
js
inc
xchg
loope
clc
les
jmp
mov
aaa
lcall
xor
sub
dec
js
dec
mov
dec
pop
mov
push
xor
xor
les
xor
mov
jb
fnstsw
scas
test
push
mov
sbb
mov
mov
mov
inc
add
imul
jo
fs
xor
mov
shlb
fstpl
xor
pop
mov
xor
sub
or
cmpsw
icebp
test
sbb
iret
inc
mov
cmp
pop
dec
outsl
jge
arpl
add
arpl
sub
fdivl
sub
dec
mov
mov
pop
data16
data16
and
cmpsl
addb
int
and
sbb
pop
ss
or
fcoms
nop
lock
sub
cltd
loopne
insb
in
das
lcall
inc
add
in
fisttpl
fildll
inc
push
movsb
dec
mov
inc
and
pop
hlt
pop
stc
mov
push
mov
or
cli
inc
clc
fldl
push
jb
mov
lds
cmp
ret
push
out
outsl
adc
fistpll
fistpll
movsb
sbb
js
mov
jp
lcall
sub
loopne
jns
add
fimull
mov
and
jbe
outsb
ja
outsl
push
push
mov
imul
subl
pop
call
jo
mov
dec
jl
lock
aas
in
test
arpl
call
scas
je
das
rcrl
cmp
adc
inc
inc
xchg
hlt
pop
sbb
les
mov
xchg
sbbb
xchg
xor
in
add
and
mov
sub
rclb
push
pop
aad
xchg
call
sbb
adc
jns
cmp
subl
cmpb
push
clc
and
outsb
jge
in
and
shll
jb
cmp
mov
cmp
outsb
pop
cli
loop
inc
dec
vmaxps
or
or
cltd
push
xor
mov
inc
out
push
aad
cltd
and
dec
rcr
aaa
mov
loope
lret
inc
hlt
pushf
sbb
adc
nop
lcall
sub
mov
inc
cmpsb
cmc
push
stc
das
pop
addr16
adc
cmp
test
sub
push
mov
aad
ret
sub
jno
xor
lea
negb
pushf
out
rol
cmpsl
adcb
imul
incb
jmp
push
sbb
test
and
fwait
mov
notb
inc
sbb
subb
jno
mov
push
cmc
or
dec
addr16
in
mov
or
pop
ljmp
inc
jae
fbstp
adc
jp
inc
daa
cld
jge
adc
ss
add
inc
outsb
cmpsb
dec
faddl
in
daa
jmp
jae
dec
inc
pop
fcomps
adc
push
push
aaa
sbb
sub
aam
pushf
and
add
and
push
les
shl
jno
xor
sbb
mov
sub
jg
push
dec
mov
or
jmp
cs
mov
scas
lods
xchg
cmp
inc
jmp
rcrb
fadds
cli
fistpll
out
stc
repz
mov
imul
enter
shll
enter
cwtl
arpl
xor
adc
jns
popa
sub
inc
jnp
push
dec
in
cmp
sbb
mov
loop
sahf
inc
in
stos
mov
out
pusha
dec
into
mov
daa
dec
incb
in
pop
fcomp
add
loope
bound
ljmp
cmc
je
hlt
sub
cmp
out
sbb
out
das
or
cwtl
cltd
inc
cmpsl
cmc
cld
test
push
cwtl
or
int3
add
adc
xchg
jbe
mov
test
mov
sbb
push
inc
mov
iret
mov
inc
and
gs
mov
mov
xor
and
stos
xchg
pop
xor
pop
sub
shll
push
mov
je
lret
push
jl
in
dec
or
push
dec
mov
popf
jmp
int
bound
out
dec
je
lret
je
adc
or
xchg
xchg
pop
enter
outsl
pop
test
inc
mov
cmpsb
lods
fiaddl
pop
aaa
mov
repz
out
mov
ja
pop
repz
sub
mov
mov
xorb
adc
pushf
push
pop
pop
xchg
leave
sbbl
fisttps
pop
rcll
add
test
cmp
fs
faddl
add
adc
mov
movsb
aam
mov
xchg
sub
out
out
sub
js
rcr
jne
inc
sub
mov
push
outsl
nop
int3
rolb
sbb
sarb
bound
sbb
call
push
out
lods
inc
adc
pop
cmp
pushf
insb
inc
mov
out
lods
fwait
sub
sbb
mov
inc
test
sub
popf
and
movsb
adcl
loopne
ds
in
jg
cwtl
in
dec
adc
stos
mov
arpl
hlt
sub
ja
push
iret
cmpsl
aad
mov
adc
mov
pop
aas
out
adc
daa
aaa
xlat
pop
jg
movsb
clc
fwait
in
andl
mov
sub
adc
adc
xlat
std
xor
loopne
imul
lret
pop
inc
into
gs
sub
pop
cmpsl
mov
cmc
or
push
or
pusha
jge
xlat
mov
mov
push
cwtl
dec
sbb
pusha
mov
incl
test
cmp
push
pushf
jnp
xor
stc
je
jno
pop
stc
dec
sbb
and
rclb
lods
add
test
bndstx
jns
movsb
popa
ljmp
stc
lock
pop
pop
push
mov
les
shll
in
pop
jge
lods
push
dec
xor
pop
or
dec
imul
sub
dec
icebp
xchg
pop
mov
push
push
clc
dec
pop
loop
or
filds
jmp
shll
mov
push
ret
test
xor
xor
rclb
xchg
in
pop
cmpsl
jmp
insb
jns
push
bound
int3
daa
push
enter
push
xchg
push
xor
out
out
imul
sub
daa
dec
push
and
call
out
js
es
add
jp
sbb
out
cmpsl
fisubs
mov
outsb
les
mov
dec
pop
jl
jae
in
mov
in
push
jae
bound
mov
mov
or
push
adc
movsl
imulb
stc
sahf
mov
pop
xchg
leave
sbb
lea
mov
jo
xchg
test
sbb
mov
or
mov
jnp
add
sub
cmpsl
push
addr16
or
repz
push
std
mov
add
xchg
mov
outsl
mov
lcall
add
out
mov
cli
int
adc
xchg
adc
ja
bound
jb
xchg
and
rolb
lods
or
inc
aas
add
mov
scas
outsb
sbb
sbb
cli
inc
mov
pop
add
jo
push
mov
cmpsl
inc
mov
daa
dec
mov
movsb
out
ret
neg
sti
xchg
mov
sub
mov
cmp
pop
aam
mov
daa
mov
fbstp
ja
fsub
inc
ss
xchg
xchg
ret
fwait
dec
ret
std
cmp
lds
popl
aas
fdivrs
and
fbld
stos
cmc
jne
and
and
in
pusha
or
pop
bound
dec
sbbl
stos
xlat
popf
pop
or
mov
cmp
mov
sub
xor
shrl
inc
call
xor
leave
xor
out
lods
outsb
mov
pop
xchg
mov
pop
std
adc
in
xchg
and
into
jge
adc
push
nop
lret
insl
icebp
inc
inc
stos
or
jmp
icebp
jbe
mov
pop
jne
hlt
daa
mov
int
pop
outsb
cmpsl
iretw
outsl
push
cmp
lods
sub
jp
jmp
ss
xchg
ja
popa
mov
push
mov
ljmp
cmp
js
jge
dec
cwtl
push
push
inc
dec
adc
scas
enter
sub
mov
and
lahf
fadd
push
test
push
jmp
cmp
dec
dec
loopne
sub
loope
adc
add
loop
sbb
dec
cwtl
cmc
dec
sub
addb
cli
sbb
dec
dec
scas
scas
sub
push
fiaddl
xchg
mov
fcoml
insb
push
fildll
jg
push
jl
or
rcrl
icebp
clc
mov
mov
lret
in
pop
inc
mov
stc
mov
cltd
sub
inc
xor
xchg
call
out
cwtl
cwtl
inc
inc
lret
push
mov
div
imul
dec
cmp
pop
mov
add
pop
jg
cmp
and
sbb
repz
popf
mov
and
lret
xchg
add
dec
movsl
lods
xorb
add
pop
push
je
inc
dec
clc
fisubrs
into
or
call
mov
fwait
inc
mov
orb
jmp
xlat
fistl
dec
scas
jecxz
adc
fstpt
add
mov
int3
xchg
adc
dec
cmp
outsb
repnz
mov
sub
dec
repnz
inc
sbb
repnz
push
xor
push
dec
pushf
lods
jne
dec
cmp
pop
jg
push
test
push
aad
pop
sarb
imul
int3
loop
push
stos
add
sbb
pop
mov
mov
icebp
mov
xor
cld
mov
xor
adc
cld
shld
loop
push
dec
scas
mov
pop
pop
test
xlat
and
popf
mov
dec
sub
mov
jns
lds
inc
pop
loopne
xchg
mov
leave
jno
mov
xchg
xor
jno
scas
out
add
cli
fmull
mov
cli
xchg
bound
jnp
lods
repnz
dec
cs
aad
pop
outsb
jge
adc
cmpsb
push
fs
fdivrl
xor
cs
test
lcall
and
dec
cmpsb
test
sub
inc
mov
push
and
fidivs
repz
mov
lea
outsl
leave
out
faddp
and
scas
push
ds
ds
fnstcw
into
dec
jmp
ficoms
scas
out
push
test
and
daa
inc
mov
adc
mov
scas
cmp
push
mov
inc
push
and
stos
insl
sub
or
in
add
sbb
add
xor
iret
sbb
std
xor
inc
dec
shlb
das
fldl
mov
sbb
jno
xchg
add
or
pop
mov
sahf
cmp
fucomip
nop
pop
sbb
or
negl
mov
adc
sbb
pop
inc
sub
xlat
mov
jmp
pusha
popa
mov
fcmove
sub
scas
jl
icebp
mov
lds
and
jnp
cld
ja
jae
push
xchg
xor
and
add
sti
jmp
jb
push
xlat
mov
pop
enter
sub
out
xor
out
inc
divb
xchg
add
xor
add
icebp
in
rcrl
adc
or
cmp
adc
test
mov
mov
xor
filds
repz
mov
rorb
stos
sub
imul
lods
iret
push
push
lock
inc
or
mov
mov
mov
mov
cmp
ljmp
jmp
pop
lret
lret
sub
jns
aam
sub
push
les
or
push
pop
cmpsl
cmp
iret
test
int
jg
gs
fldcw
sub
pop
lahf
clc
shlb
sub
rcrb
ds
inc
dec
cld
test
add
mov
into
fs
fwait
es
pop
ret
cmp
out
sub
test
dec
push
shrl
aaa
mov
add
je
mov
mov
test
push
pushf
mov
bound
in
mov
out
mov
adc
imul
rorb
add
push
sub
into
divb
mov
jg
jg
sti
stos
sub
shl
adc
sbb
push
in
js
xchg
testb
aas
or
cmp
movsl
inc
jmp
sbb
add
or
xor
mov
mov
ret
adc
nop
push
push
cwtl
mov
in
pop
or
lahf
xor
xchg
and
pop
xchg
dec
or
cli
pop
rcll
cli
int3
or
xchg
mov
or
iret
hlt
scas
jne
aad
out
cli
aaa
mov
xlat
adc
and
xor
fwait
hlt
dec
push
xchg
add
mov
test
or
aam
mov
push
jns
stos
popf
sbb
outsl
out
add
pop
inc
stos
cmpsb
sti
xchg
and
inc
inc
iret
sahf
or
aas
lock
adc
lock
rclb
jp
dec
xchg
sub
mov
jp
pop
adc
pushf
xor
movsl
fcoml
sbb
or
iret
mov
fnstenv
stos
and
ja
fnstsw
mov
and
lret
in
hlt
cmpsl
jl
mov
mov
rorb
cmp
mov
in
push
cmc
or
pop
and
inc
or
out
mov
and
sub
fcoms
jae
lods
cmpsb
pop
imul
xlat
lds
xor
imul
imul
jb
push
push
sbb
stos
js
in
add
cmp
cmpsl
sahf
inc
mov
mov
outsb
and
sub
fdivl
idivl
dec
dec
mov
adc
xor
adc
sub
out
inc
ja
push
fsubl
mov
sub
cmp
mov
stc
xchg
push
adc
lret
push
push
mov
das
je
test
mov
push
outsl
movsb
dec
cltd
adcl
inc
je
in
outsb
iret
pop
std
and
movsl
or
adc
cmp
inc
dec
sbb
data16
es
subl
adc
mov
dec
outsl
jb
mov
jbe
mov
scas
test
sbb
mov
aad
faddl
mov
xchg
popa
pushf
arpl
inc
or
sbb
cmp
stos
push
lods
cmp
clc
icebp
jmp
adcl
mov
popa
mov
xorl
and
mov
je
add
and
mov
xor
imul
push
shlb
fidivrs
mov
xchg
sar
xor
pop
cmp
lods
xchg
inc
push
cwtl
cmpsl
testb
push
mov
adc
xchg
jmp
cltd
sti
inc
loop
and
cmp
sub
rorl
mov
cwtl
and
push
xchg
out
nop
rcrb
sbb
jns
int3
ret
push
xchg
xchg
xchg
js
fsts
sbb
sbb
jle
daa
loop
bound
pop
scas
nop
gs
cmp
cmp
cmp
pop
xchg
mov
enter
cltd
ja
jl
icebp
add
mov
cmp
cltd
bound
clc
cmp
mov
xchg
andl
aaa
ret
inc
adc
xor
movl
sub
mov
aam
sbb
lods
cli
or
mov
loope
cld
dec
test
clc
jg
testl
lods
int3
xor
and
test
repnz
insb
jae
dec
fnsave
fsub
out
lds
fldl
xchg
mov
testb
pop
int
push
sbb
in
idivb
lock
mov
push
js
setbe
jecxz
inc
sbb
es
sub
es
and
dec
leave
adc
mov
jp
xchg
push
jo
lock
mov
sbb
pushf
call
xor
aad
push
cs
cmpb
pop
mov
jo
mov
sbb
ficoml
not
inc
popa
mov
popf
jecxz
pop
jne
pop
mov
test
rorb
push
jp,pt
nop
jne
bound
mov
ret
cmp
cltd
pop
cld
addr16
int
enter
pusha
in
pop
lds
cmp
mov
in
xor
add
mov
ljmp
xchg
mov
sub
iret
out
jb
mov
call
aaa
mov
lahf
mov
fbld
clc
pop
jge
enter
lcall
repnz
cmp
jl
pop
cmp
adc
push
mull
inc
mov
cmp
mov
mov
push
xor
push
fists
jge
and
or
lcall
arpl
hlt
push
test
lret
popf
sbb
xchg
mov
enter
xor
jp
cmpsl
lahf
push
les
addr16
js
mov
nop
push
mov
dec
test
mov
loope
inc
push
jecxz
and
mov
jbe
cs
jge
pop
adc
jns
inc
imul
push
jmp
popw
adc
in
pop
dec
rcrb
cmpl
push
mov
mov
or
nop
faddl
adc
imul
mov
sbb
je
das
and
mov
cs
xor
stc
mov
jl
adc
pushl
jge
loope
dec
mov
aad
jecxz
jae
stos
sub
jmp
scas
push
or
xchg
clc
mov
jp
hlt
cmp
xchg
adc
scas
repnz
pushf
mov
mov
dec
scas
rcll
jno
mov
mov
inc
popa
imul
sub
nop
add
dec
mov
insb
mov
ds
xchg
lcall
sbb
sub
aas
sbb
arpl
fdivl
sub
aad
lods
inc
inc
sarb
es
sub
iret
inc
mov
mov
sub
lea
cli
pop
sahf
repnz
push
mov
jno
dec
xorb
sbb
ss
pop
dec
jnp
add
xor
inc
dec
hlt
pop
pop
aad
cmp
xlat
sbb
jnp
loope
jbe
cmp
ds
outsl
mov
stc
push
test
sahf
fidivrs
jne
mov
shr
test
fidivrs
inc
rcll
push
into
push
pop
dec
icebp
arpl
rcll
xor
inc
leave
je
push
cmp
push
or
mov
push
sub
xchg
sbb
pop
dec
pushl
push
push
int
shlb
push
shlb
or
mov
stos
shr
in
add
and
scas
mov
fwait
addr16
or
inc
jb
cli
fwait
sbb
out
gs
mov
dec
cld
neg
jecxz
cs
or
sbb
pop
push
mov
pop
cmc
daa
data16
aas
nop
and
pop
adc
stos
jl
add
xor
push
xchg
xchg
mov
xchg
pusha
lret
jge
sub
push
cmp
jg
sar
imul
clc
ljmp
aad
dec
and
mov
cmp
push
xchg
mull
sub
adc
mov
inc
lret
xchg
mov
into
scas
lods
out
aaa
jmp
or
insl
scas
mov
int3
push
push
mov
fwait
sub
xor
lahf
ja
add
decl
in
and
adc
or
das
push
pop
ljmp
mov
mov
sub
adc
nop
in
xchg
cmp
lret
dec
loope
mov
insb
cwtl
cmpb
push
fldl
cld
outsb
ffree
out
aad
mov
inc
addr16
sub
insb
imul
dec
dec
inc
mov
sub
xor
mov
cltd
cmp
xchg
xchg
fbld
push
mov
jae
aad
mov
jecxz
paddsb
cmp
inc
or
dec
xlat
xorl
insl
xchg
mov
fisubl
sysret
filds
inc
scas
pushf
ja
shlb
subb
in
nop
iret
adc
rol
sub
push
mov
rcl
pop
or
mov
aaa
lcall
and
std
stos
es
push
push
rol
push
add
lods
mov
pop
call
outsb
mov
jle
out
push
lcall
mov
sti
cmp
shrl
insb
scas
jg
mov
pushf
or
jb
sarl
sub
mov
jns
stc
in
js
shlb
and
mov
mov
sub
mov
xchg
cli
cmp
and
and
push
pop
cmp
imul
push
dec
jb
cltd
js
outsb
cmp
lea
add
sbb
fcoms
test
popf
cmp
sub
mov
pop
mov
xor
test
out
shl
or
vpsubsw
mov
rclb
cmp
rclb
aaa
jp
jp
stos
mov
sub
and
in
lahf
add
or
push
mov
loop
lahf
pop
jecxz
mov
addr16
mov
cmc
add
pop
lahf
dec
pop
sub
dec
dec
pop
hlt
leave
mov
fsubrl
js
cmpsb
push
inc
jmp
test
cmc
in
sub
dec
sbb
popa
cmc
pop
xor
mov
jmp
imul
ficoms
ds
lret
and
adc
js
inc
shl
push
jne
enter
push
pop
cmpl
xchg
ss
out
sbb
sti
mov
pop
pop
add
add
mov
popa
mulb
pop
leave
and
dec
mov
sub
pop
cmp
rol
aaa
xchg
test
rclb
cmp
mov
js
repz
xlat
xchg
push
lods
les
mov
lahf
pop
lock
or
cmpsl
jo
push
and
cmp
jo
sbbl
in
mov
pop
jl
vcvtsi2sd
mov
or
inc
hlt
add
pop
sti
out
sbb
cmp
add
jne
js
subb
xchg
out
stc
lret
add
mov
dec
popa
andl
push
push
jb
sbb
test
mul
inc
mov
out
ret
testb
fnstcw
pop
rcl
push
outsl
bound
mov
or
jge
stos
pop
add
fstl
jb
rcl
jo
aaa
inc
int
dec
shr
popa
loopne
rcrl
and
stos
ret
jb
lea
out
mov
fmull
cmp
repz
sti
inc
aas
insl
repnz
call
cmpsl
insl
inc
loopne
clc
mov
jl
aaa
fstp
xchg
adc
sub
xchg
mov
jecxz
lds
pop
mov
cmp
mov
scas
or
jb
sub
xor
cmp
add
movsb
addr16
push
icebp
loop
cmpl
push
inc
imul
xor
fs
dec
test
xorl
insb
add
cmp
shlb
inc
add
cmp
and
cmp
add
add
pop
aaa
pop
cmp
test
mov
pop
or
movsb
xor
inc
jns
xchg
fidivl
pop
jo
hlt
lahf
mov
pop
add
je
cmpsl
dec
sbb
mov
mov
inc
pop
mov
aad
decl
cli
addr16
xor
fidivrs
js
std
push
cmp
scas
nop
insl
es
jge
cmp
add
testb
rol
inc
sub
in
imulb
jge
xor
xor
mov
xor
cld
mov
and
std
shll
xor
aam
jne
push
in
sahf
fistpll
jns
sbb
push
ficomps
fidivrl
in
pop
mov
outsl
or
pusha
add
ret
mov
xor
int
push
sbb
jno
repz
mov
adc
sbb
outsb
jae
outsb
mov
icebp
repz
pop
in
pop
fdivr
repnz
sbb
adc
fdiv
inc
outsl
clc
repnz
or
roll
mov
sbb
jle
inc
int3
cmp
xchg
arpl
sub
jg
xchg
shlb
push
sub
loop
push
outsb
cli
mov
mov
mov
inc
jns
mov
in
mov
pop
imul
in
jmp
adc
repnz
push
movsb
push
xchg
int3
push
and
dec
clc
jecxz
mov
mov
lea
dec
shrb
cmp
lock
jb
xorb
lahf
in
push
fs
fsubp
adc
stos
sbb
insb
mov
fcomip
xor
push
sub
mov
mov
je
push
movsb
and
push
mov
sbb
mov
push
scas
pop
mov
mov
jo
adc
aaa
push
add
imul
pop
mov
pop
xor
loope
xchg
cmpsb
xor
hlt
dec
jl
lret
xchg
xchg
add
aam
xchg
xlat
mov
sbb
cmp
adc
lods
mov
cld
adc
jnp
hlt
cs
in
int
jmp
out
scas
nop
jae
sub
fsts
insb
out
in
mov
test
jnp
jp
test
outsb
inc
ret
xchg
add
mov
loop
jne
sub
add
imul
sub
in
and
pop
sub
movsb
sbb
lock
out
sbb
dec
inc
add
jo
inc
cwtl
pop
mov
mov
mov
aaa
bound
jge
movsl
dec
enter
lds
bound
loope
ss
xchg
les
inc
sub
mov
add
jecxz
and
je
stc
cli
insl
outsb
subl
push
pop
int3
cmpsl
xchg
add
cltd
in
adc
dec
fs
hlt
rolb
lods
or
pop
psrlq
or
imul
std
and
dec
xchg
sti
sub
jno
es
psrld
mov
xchg
test
mov
daa
bound
inc
pop
push
pop
je
adc
add
and
pop
cmpsl
js
ficoms
cmp
roll
cli
call
lcall
lret
hlt
rorl
pop
push
dec
stc
enter
push
sub
loope
movsl
sahf
push
dec
stc
popa
lea
hlt
and
aam
inc
adc
sub
xor
mov
and
rcrl
pop
lahf
subb
xor
add
ficoml
mov
movsb
mov
popa
rorb
inc
shll
xchg
sahf
adc
jle
cltd
rolb
add
mov
leave
add
cmp
lret
insl
call
inc
xchg
cmpsb
ret
dec
mov
aas
ss
ss
mov
mov
push
mov
andl
mov
xor
fsubr
push
jne
sub
std
mov
xchg
int
enter
add
ja
enter
loope
and
jp
cmp
and
test
icebp
into
mov
mov
inc
lcall
push
fiaddl
cld
pusha
fsubs
dec
nop
jo
jmp
nop
sti
ret
push
push
push
pushf
das
push
dec
and
lea
mov
jbe
or
inc
mov
xchg
pushf
push
mov
cmc
mov
and
xchg
jbe
fwait
and
inc
pushf
push
popa
gs
mov
inc
push
mov
cmp
lahf
in
adcl
mov
movb
mov
dec
aas
ds
sbb
mov
test
popl
ljmp
aaa
addr16
push
testb
movsl
insb
stos
push
testl
fstpl
repnz
mov
dec
xor
pushf
sbb
lock
jge
aam
das
aaa
fldenv
or
ret
pop
mov
pusha
cs
andl
sbb
push
outsb
xchg
mov
lret
or
add
sub
mov
mov
jae
mov
jl
int3
mov
imul
and
push
inc
sbb
jnp
outsb
push
addr16
call
insb
push
shlb
arpl
mov
icebp
xor
clc
add
aam
loopne
cltd
pop
shrb
sub
mov
add
dec
mov
outsb
mov
push
dec
pop
or
fwait
adc
rolb
test
sbb
stos
add
sbb
lds
cmp
mov
cmpb
sti
mov
inc
sbb
lret
std
in
xor
sbb
inc
fisttps
shll
icebp
xchg
mov
push
call
push
push
leave
sbb
sbbb
mov
cli
cmc
ret
push
les
repz
ljmp
test
or
jge
xchg
pushf
cmp
xor
mov
jl
dec
mov
out
and
out
mov
iret
popf
mov
pop
dec
push
cmp
adc
std
outsl
int
daa
repz
ret
out
cmp
aas
js
or
in
mov
addb
dec
stos
push
leave
push
movsb
inc
or
sub
xor
cmp
shll
int3
sbb
divl
unpckhps
test
xchg
out
ds
push
into
and
fsts
push
lock
sub
sub
push
xor
adc
xchg
repz
addb
enter
push
sbb
mov
jbe
cli
insb
sahf
cltd
or
xchg
dec
ljmp
and
xchg
inc
xor
xchg
loop
sbb
jo
or
push
jge
and
sub
cmp
add
adc
stos
jg
inc
mov
sub
adc
xchg
popa
inc
fistpll
dec
fistps
jmp
sti
sub
xchg
popa
xor
into
or
mov
sbb
jb
repnz
mov
call
out
int3
sarb
cmp
lahf
sub
jmp
inc
clc
fldenv
push
push
inc
out
and
stc
ss
in
pop
insb
out
int3
xor
hlt
jge
or
xor
cmpsb
xchg
rcrl
lret
push
pushf
lea
add
sub
daa
dec
push
mov
pop
pop
push
pop
outsl
lret
or
in
int
xchg
call
ss
mov
jb
push
aam
insb
cmpsb
fs
xchg
xchg
dec
fwait
addr16
or
shlb
mov
push
orb
inc
imul
mov
ret
mov
add
add
mov
or
cwtl
shll
dec
mov
adc
mov
aaa
jecxz
sub
mov
and
add
lret
std
xor
pop
mov
mov
push
int3
pop
jp
outsb
inc
popa
and
jbe
fldl
comiss
leave
sarl
pop
or
push
fcmovnb
jmp
dec
call
es
xchg
xchg
mov
pop
int
pop
sub
and
inc
adc
dec
mov
lcall
xchg
scas
test
inc
bnd
and
inc
shll
jne
mov
loope
in
pop
out
into
jne
push
fnstsw
cmpsl
lahf
sarw
mov
jl
mov
or
pop
aas
mov
cmpl
push
jns
or
jae
nop
bswap
cvttps2pi
cmc
mov
pop
mov
mov
xlat
jnp
fisubl
adc
or
data16
in
outsl
mov
mov
push
ret
cmp
add
push
pop
lret
or
shl
jecxz
inc
dec
shr
fcompl
in
lret
std
ljmp
daa
mov
sub
jl
out
dec
cmpsb
dec
mov
mov
sti
lock
dec
sbb
push
fistl
cmp
sbb
pop
mov
rolb
in
or
js
or
mov
xchg
add
lds
xor
dec
adc
int
jns
lahf
fld
stc
and
mov
xchg
add
cmp
push
jne
int3
or
xchg
jl
movsb
dec
mov
divl
sub
cmp
fidivrl
dec
fldenv
add
scas
clc
aad
mov
xchg
imul
lret
test
pop
mov
add
xor
test
outsb
int3
sub
mov
sbb
jnp
mov
movsl
test
daa
jecxz
and
subl
ds
cltd
enter
mov
pop
sub
adc
sbb
mov
push
leave
popa
divb
pop
iret
cld
jmp
mov
lds
push
ljmp
mov
xlat
pop
cmp
mov
test
cmpl
pop
jle
pushf
incl
insl
dec
clc
stc
sub
mov
dec
mov
and
je
add
lods
daa
out
stos
fldenv
jbe
push
test
fildl
scas
insb
in
int
movsb
shll
push
movl
or
fadds
sbbb
dec
and
push
jbe
mov
push
std
imul
adcb
stos
push
jo
fildll
je
ficoml
fldl
sbb
adc
pop
xchg
push
push
rcrb
gs
pop
mov
add
popf
mov
shll
lea
xchg
inc
int
cs
sbbl
pop
pop
idiv
inc
mov
jnp
mov
push
loop
lds
add
cli
inc
sub
push
lds
jns
lea
cltd
mov
cmp
aas
popf
adc
mov
push
add
fisttpl
jmp
xor
push
fnsave
mov
adc
popa
cld
adc
imul
push
cmp
push
imul
or
leave
and
mov
xchg
mov
lea
dec
add
rcll
pop
aas
add
stos
lahf
out
gs
gs
lea
push
xorb
mov
enter
mov
lock
mov
dec
rcl
and
stos
mov
nop
adc
out
ror
sub
or
loopne
test
dec
jecxz
inc
push
pop
pop
mov
cmp
movl
dec
punpckhwd
mov
mov
stos
adc
repnz
hlt
sti
clc
xchg
xchg
jno
sahf
xor
sbb
push
icebp
and
xchg
pop
sbb
adc
jbe
das
push
adc
lds
stos
cmp
clc
inc
fldt
cld
mov
ficomps
mov
push
push
cwtl
pop
or
push
push
repz
es
enter
sbb
pop
or
or
fcmovnb
incl
daa
cmc
daa
clc
inc
and
cmp
out
inc
jo
xchg
in
adc
inc
addb
and
sbb
jns
xchg
mov
dec
js
sbb
and
dec
pop
push
aaa
ljmp
mov
inc
xor
imul
mov
test
scas
cs
ficomps
xor
js
jne
jne
das
jl
cmp
test
lahf
mov
cltd
mov
js
jne
push
add
loope
jl
lds
in
enter
andl
jmp
cmp
loope,pn
fisttpl
sti
je
and
jb
and
lods
dec
pop
adc
rcl
lea
or
mov
jno
lcall
mov
cli
lods
mov
adc
xchg
test
je
cmp
cmp
pop
js
push
sahf
movsb
jno
mov
pop
cwtl
fldl
mov
xchg
inc
xchg
xor
add
cld
lahf
movsb
outsl
cmpsb
dec
pop
das
pop
stos
mov
fists
and
notb
push
pop
data16
fidivrs
jl
jb
loopne
xchg
push
cmpsl
aas
inc
pop
mov
js
dec
sub
pop
sarb
dec
pop
and
or
cli
xorl
xor
insl
sahf
lret
mov
sarl
push
sahf
push
push
dec
or
sbb
loop
ljmp
lock
push
mov
dec
xor
add
cmp
jo
and
loope
nop
pop
sub
jae
arpl
loop
or
in
mov
or
add
bound
out
xchg
popl
push
jnp
mov
pop
stos
mov
fidivrs
repz
fsubrs
jp
mov
inc
loope
dec
ret
dec
cmp
dec
js
cwtl
inc
jb
stc
out
mov
adc
push
mov
andb
hlt
inc
cmpsb
cwtl
mov
loope
popa
adc
mov
cmpsl
std
add
inc
xor
xor
gs
mov
and
enter
aad
jg
push
mov
xchg
out
fdivrs
sbb
and
sbbl
dec
mov
scas
testb
and
add
ja
xchg
jns
jb,pn
jae
add
and
imul
adc
fwait
mov
add
in
out
iret
cmovge
jno
inc
dec
sbb
inc
dec
cmp
xchg
push
push
dec
push
data16
ds
insl
jg,pn
rclb
dec
popa
jmp
fldenv
repnz
cwtl
jg
mov
cmpl
test
and
push
cmc
sbb
jns
push
xor
fnstsw
dec
adc
loop
das
mov
pop
in
xlat
test
pop
jp
fs
mov
sbb
sub
aad
ret
test
push
jb
movsl
xchg
or
mov
push
xor
xchg
jae
mul
mov
mov
jne
mov
mov
cmc
sub
or
shrb
xor
int
and
lahf
in
out
aam
cmp
into
cmp
sbb
sahf
in
or
andb
push
mov
nop
jo
dec
or
dec
enter
test
lahf
in
ss
xor
dec
stos
lahf
adc
stos
andl
fstl
jb
outsl
test
in
sub
fdivrs
pop
out
js
jp
mov
es
add
nop
add
or
pusha
pop
dec
iret
out
mov
scas
fistpll
sbb
jnp
inc
push
jns
ret
lcall
and
pop
xor
sub
mov
dec
shll
mov
sub
or
sub
aas
adc
inc
xor
cmc
icebp
xchg
mov
loop
jno
rclb
jmp
mov
ret
cwtl
dec
dec
popa
xor
cmp
xchg
add
lahf
test
mov
pop
xchg
imul
in
ffree
jne
cmp
xchg
add
into
imul
xchg
jo
shrl
cmp
arpl
or
stos
xorb
push
aam
mov
leave
add
or
xchg
rcrl
or
mov
mov
negb
mov
aam
sub
sbb
imul
daa
loopne
mov
notl
sub
jbe
cwtl
rorl
pop
jne
idivl
scas
or
push
cmpsb
adc
mov
mov
nop
insl
adc
out
std
mov
mov
out
rolb
imul
jecxz
and
add
rcrl
ljmp
mov
cs
orb
outsl
push
adc
push
jp
mov
rorl
pushf
and
out
sbb
sahf
out
lret
mov
push
xor
or
nop
fmul
sarb
outsl
cmp
xor
jl
add
leave
jge
ljmp
push
adc
sti
rorl
xor
pop
pop
nop
or
imull
ljmp
mov
sub
jae
sub
inc
sbb
jbe
mov
loope
sbb
scas
jnp
mov
js
mov
mov
and
adc
dec
push
jae
cmc
or
icebp
fsubs
fwait
pop
jno
addr16
or
les
popa
and
mov
les
inc
xor
fstpl
add
imul
inc
xchg
ljmp
out
lods
imull
rcr
ds
in
int
pop
cmpl
fdivrs
leave
in
inc
ja
mov
sbb
es
in
push
sbb
xlat
inc
mul
aad
push
and
jecxz
fwait
movsb
rcrl
mov
je
mov
jbe
enter
call
dec
mov
cwtl
or
push
and
cmp
or
test
cmpb
inc
lods
iret
xchg
add
lods
cmc
mov
cmp
cmc
pop
cli
addr16
mov
or
and
cmp
push
pop
in
int3
sub
adc
adc
xlat
mov
cmp
movsb
and
push
pop
fnsave
icebp
jo
mov
fstpl
cmp
mov
push
push
shlb
mov
into
push
inc
popf
popa
fs
xor
ja
inc
cld
mov
cmpsl
ret
pusha
mov
pop
loope
jbe
xor
test
stc
add
adc
sbbl
out
ljmp
push
js
and
xor
push
sub
dec
mov
or
inc
inc
out
xor
dec
test
sbb
xchg
dec
dec
xor
leave
sub
mov
dec
popw
push
jo
dec
pop
add
addl
cmc
xchg
mov
fimuls
ds
or
in
sub
mov
mov
xchg
inc
pop
aas
cmpsb
sub
lock
out
ror
jbe
fbstp
enter
and
adc
jbe
lea
mov
cltd
call
push
mov
mov
xchg
out
or
pop
xchg
in
stc
and
lea
scas
movsb
out
jns
lahf
xchg
inc
ds
jle
repz
shlb
inc
scas
call
out
lret
daa
pop
mov
es
daa
mov
fstl
xor
xor
xchg
dec
cmpsl
sbb
cmc
rcrl
sahf
and
ret
mov
cmp
jl
lods
sub
es
mov
fisttpl
push
lods
inc
aad
dec
int
adc
scas
gs
ss
cmp
daa
push
andb
lods
rolb
adc
int3
adc
xchg
push
dec
dec
addl
and
test
pop
pop
in
mov
jecxz
jecxz
bound
shlb
sub
dec
adc
push
push
jmp
and
shrl
xchg
and
lods
mov
sbb
cltd
repnz
jp
out
mov
mov
inc
pop
into
lea
adc
push
cmp
jmp
jmp
xor
inc
fs
leave
hlt
or
lods
lds
popa
incb
cmpsb
jg
popf
jno
enter
push
push
pop
xor
mov
add
and
aaa
lock
loope
pop
sarl
fwait
push
lcall
pop
or
mov
jbe
pop
sub
test
inc
add
push
cmpsl
dec
icebp
jmp
test
enter
inc
mov
mov
pop
xor
or
inc
data16
mov
out
mov
subl
push
lret
push
outsl
cmp
andl
addr16
dec
rol
add
push
sbb
lds
dec
pusha
loop
je
inc
jbe
cmpsl
fcomps
dec
adc
imul
out
xchg
xor
xor
loop
fstps
into
push
jmp
adc
add
pop
pop
jb
push
pushf
mov
mov
adc
sahf
cmp
and
stc
pop
push
inc
xchg
test
jns
insb
xchg
js
test
xchg
dec
pop
insb
ljmp
jnp
push
bound
icebp
cmp
inc
rolb
cmpsb
js
adc
push
cmp
push
leave
push
cmp
xor
pop
loope
or
in
add
lret
cmp
sub
inc
movsl
aad
mov
add
bound
push
and
ret
xor
outsb
fcoms
jb
cmp
lea
jae,pn
pop
push
fistl
jg
adc
fwait
sbb
stc
scas
gs
rorb
sub
jge
mul
ficoms
das
mov
pop
inc
cmpsb
adc
mov
fsubl
enter
pop
clc
adc
xchg
jnp
adc
lods
das
test
fnstsw
test
cld
mov
int3
loope
aas
dec
es
repz
test
add
int3
mov
icebp
mov
mov
mov
scas
jmp
movsl
orl
popa
fildl
mov
popf
cmp
ret
sub
pop
inc
aas
sub
cmp
or
inc
loope
pushf
sub
push
aam
dec
push
jno
fmul
cwtl
xchg
cli
cmp
and
cmc
aas
into
sbb
pusha
repz
sbb
and
aaa
jo
negb
loop
cmpsb
mov
jmp
repz
addr16
xor
sub
or
pop
rorl
bound
aam
sub
out
jle
out
sub
mov
xchg
xlat
cmp
dec
and
push
lea
jle
mov
shl
pop
ja
pop
sbb
pop
mov
das
dec
rclb
mov
push
jbe
or
sbb
nop
loopne
fwait
dec
mov
add
adc
mov
loop
inc
in
insl
pop
nop
adc
push
sahf
fnstsw
xor
int
and
mov
cmp
sub
sub
dec
and
in
lahf
sub
lods
rcl
jnp
lea
aas
push
add
stos
xchg
adc
cmc
lock
repz
in
adc
jmp
mov
add
sub
bound
mov
inc
mov
out
mov
cmp
sarb
in
sub
fisubs
and
clc
pusha
cmp
mov
mov
call
push
jmp
clc
cli
movsl
out
sbb
scas
xchg
mov
in
roll
jnp
lea
pop
xor
inc
ds
loop
repnz
imul
sbb
arpl
mov
hlt
test
push
insb
int
inc
dec
cld
gs
stc
pop
jmp
in
pop
inc
mov
bound
mov
ret
dec
test
sbb
jno
sub
pop
sub
adc
cmp
jo
and
inc
pushf
jp
dec
pushf
cwtl
cmp
sub
add
xchg
stos
push
fsubrl
xchg
ficoml
mov
lcall
lds
test
stc
imul
dec
jg
stos
jo
adc
lret
out
add
call
call
mov
and
inc
jmp
lret
sbb
adc
jo
adc
xor
icebp
pop
adc
jno
inc
mov
push
sbb
roll
ret
stos
aaa
xchg
jge
idivl
out
hlt
pop
push
sub
mov
ds
out
bnd
das
shrb
pop
xor
ret
roll
std
mov
pop
notb
test
xorb
and
push
mov
mov
insb
ficoms
sarl
sub
mov
xchg
arpl
jp
adcb
je
fildl
jle
iret
mov
add
jae
icebp
das
shrb
cltd
mov
fbstp
xor
sub
cmp
arpl
push
adc
aad
inc
add
mull
push
in
je
cmp
dec
mov
scas
xchg
mov
sbb
mov
shlb
push
aam
push
add
jo
lret
mov
cmp
cltd
jae
inc
lret
cmp
dec
notl
shlb
adc
jne
jo
jecxz
test
pop
inc
hlt
lock
mov
test
add
sbb
call
ret
es
ljmp
sbb
lock
pop
jbe
hlt
sahf
outsb
out
cmpsb
adcb
push
mov
fdivrp
cmp
mov
adc
mov
adc
imul
jne
sbbb
inc
mov
fsts
jne
stc
loop
xchg
push
jo
fcmovbe
pushf
cli
aad
ljmp
shl
outsb
sbb
lods
out
dec
push
fildll
rcrl
rolb
mov
sti
addl
ror
nop
enter
outsb
sbb
inc
xchg
pop
mov
or
loopne
inc
jp
and
inc
or
xchg
in
bnd
sbb
add
sub
jecxz
mov
fwait
cwtl
sub
fcmovnu
pop
add
pop
in
mov
mov
js
gs
xor
jle
xchg
mov
or
push
mov
scas
cmp
fldcw
mov
mov
out
in
inc
dec
jle
sub
xor
mov
orb
outsl
mov
inc
fsubrl
dec
loopne
sahf
sahf
or
decb
fwait
lods
pop
faddl
loop
cmp
test
inc
mov
dec
cmp
push
dec
xchg
mov
lock
hlt
sahf
pop
mov
imul
jmp
fimull
mov
cwtl
mov
or
stc
jge
leave
mov
stos
mov
mov
lods
cltd
out
lcall
outsl
mov
nop
test
cltd
dec
pop
mov
mov
in
mov
or
inc
push
mov
push
lds
loop
add
dec
mov
outsb
pop
dec
jo
leave
out
mov
cmc
push
in
jecxz
xor
mov
push
push
adc
das
jecxz
call
nop
jnp
xchg
in
mov
les
xchg
sbb
xor
data16
nop
mov
sbb
mov
xor
pop
adcl
in
add
enter
jecxz
stos
push
imul
sub
bound
fcmovb
jge
ss
sub
push
jno
add
dec
push
adc
xchg
mov
ja
or
xchg
push
adc
dec
push
add
cmp
or
popa
mov
lret
pop
ljmp
fisubrl
clc
out
fwait
inc
fs
xor
cmp
add
push
cmp
fidivs
outsb
fidivrs
lea
or
or
or
cwtl
in
inc
push
sub
lock
xor
pushf
push
daa
repnz
xor
push
mov
push
aam
loop
pushf
aad
push
pusha
lcall
jno
mov
push
mov
jb
add
mov
popf
idivb
and
and
imul
imul
or
popa
pop
dec
xor
and
pop
out
test
arpl
xor
xchg
mov
sub
xlat
gs
mov
rcl
jle
fs
or
push
aaa
pop
cmpps
fs
in
ss
jmp
mov
push
sti
sbbb
pop
cmpsl
sub
mov
mov
mov
sbb
leave
movsb
jg
dec
xchg
loop
sti
nop
adc
out
cltd
add
and
xchg
inc
adc
mov
test
popf
xchg
aad
dec
adc
mov
adc
out
call
pop
flds
push
mov
xchg
out
xchg
mov
je
xchg
inc
paddb
and
push
push
cltd
cs
push
xchg
out
arpl
mov
pop
push
mov
les
ds
inc
rol
test
xchg
inc
jns
pop
out
jl
add
add
or
movsb
sub
jmp
mov
mov
or
mov
xor
fists
pop
xchg
and
rorl
fildl
jge
inc
adcl
mov
add
sub
stc
fdivl
lods
or
dec
sbb
xor
stos
mov
js
inc
xchg
data16
subl
jne
dec
ds
sbb
gs
arpl
fistl
jge
jl
cld
jo
ret
in
adc
andb
mov
stos
sub
fstpl
ljmp
popf
addr16
add
or
int
sub
xchg
mov
fsubl
fs
cmp
cs
into
xor
mov
xchg
insl
call
subb
mov
add
and
xor
clc
xchg
adc
add
jl
icebp
jbe
faddl
cmp
add
mov
jns
pusha
popf
les
arpl
jns
dec
cmpsb
sti
add
outsl
mov
pusha
adc
jne
movsb
jl
mov
mov
push
dec
ret
inc
loop
jne
pop
hlt
and
or
jg
sarl
mov
adc
stc
sbb
cltd
or
fisttpl
stos
in
dec
push
fs
push
lahf
mov
cli
inc
cld
push
ds
mov
ja
pop
cld
clc
sbb
inc
dec
stos
test
push
sub
movsl
scas
sti
out
flds
ss
mov
es
mov
cli
jbe
mov
or
fwait
cmp
imul
clc
adc
pop
cld
jmp
pop
lock
pop
push
shrb
ja
repz
pop
insb
testl
add
daa
mov
xchg
cmp
mov
mov
mov
sbb
lea
iret
popa
lock
pop
or
imul
mov
test
das
and
sbb
pop
mov
test
jb
fadds
int3
in
rcr
sub
aaa
outsl
loope
or
push
lds
loop
or
cmc
dec
adc
jb
cld
repnz
add
aas
scas
out
mov
dec
lds
xchg
movl
and
insl
mov
scas
test
fldcw
pop
stos
push
cltd
and
xchg
pop
jo
inc
cmp
push
or
jge
adc
jl
cmp
sti
push
sahf
jno
jae
sbb
dec
and
sarb
lahf
and
aad
ja
cmp
into
outsb
lods
loopne
lcall
repz
fadds
sbb
outsb
call
mov
mov
lds
mov
mov
insb
mov
mov
xchg
int3
nop
pop
jmp
pop
push
inc
lret
cmp
mov
out
mov
outsb
pop
mov
cltd
sub
sbb
loope
faddl
ds
mov
xlat
dec
das
push
imul
lea
fcoml
sub
xor
loopne
xchg
dec
mov
movsb
cld
aas
dec
and
push
and
adc
in
pop
loopne
push
bound
mov
fwait
push
dec
out
js
jns
dec
enter
orl
inc
xor
push
push
in
sub
stos
sahf
or
scas
pop
jb
scas
dec
std
mov
inc
fmull
movsb
mov
mov
test
xchg
jo
xor
mov
mov
sti
jp
dec
popa
dec
outsl
lahf
scas
outsb
or
sub
inc
lcall
push
sbb
mov
rol
pop
dec
xor
pop
mov
xor
cli
push
push
test
mov
and
imul
je
mov
bound
orl
jns
mov
mov
or
repnz
mov
sub
stos
inc
stc
je
mov
or
loopne
xchg
cmpsb
mov
xchg
cmpsl
ljmp
cli
aam
lret
jl
cmp
push
popa
sbbl
dec
push
jg
jb
pushf
pop
hlt
rcll
fists
loope
aam
rcrb
mov
sub
cwtl
hlt
cmp
push
xchg
aas
cmp
pop
sbb
idivb
stos
mov
or
into
test
sbb
pop
add
jmp
rcrl
sub
pusha
inc
das
and
mov
dec
jecxz
push
xchg
push
sahf
push
xchg
jp
sbb
fsubrs
scas
jmp
fs
mov
aas
jmp
inc
in
shll
stos
popf
iret
rolb
movsb
movsl
inc
mov
xchg
jp
mov
fsts
es
mov
pop
or
sar
sbb
adc
add
rcrb
movl
mov
out
hlt
int3
repz
jno
fisubs
xchg
dec
js
xor
adc
popf
pop
out
dec
aad
cmpl
mov
loopne
mov
imul
jnp,pt
xor
inc
cmp
je
push
pop
loop
cmp
out
in
call
jns
cmp
cmpsl
mov
dec
mov
pop
dec
outsl
mov
mov
adcb
dec
xchg
out
pushf
mov
sbb
ret
adc
fildl
jae
movsl
lret
mov
sbb
outsb
popa
mov
rcll
mov
iret
pop
jbe
cld
add
ficomps
incl
fldt
inc
xor
gs
dec
pusha
cmpsb
xchg
xchg
movsb
int3
cwtl
mov
cmp
cmp
adc
aaa
orb
pop
mov
dec
rep
jle
inc
ds
jae
dec
push
mov
pop
sbb
int
and
or
xchg
add
in
jmp
ffree
lea
outsl
jle
dec
adc
popa
cmpsb
xchg
dec
ret
cltd
icebp
in
jmp
mov
and
ror
ret
std
shl
sahf
mov
ljmp
out
mov
cmp
pop
lock
pop
xor
mov
and
lea
and
dec
repnz
test
sub
push
mov
aam
shl
mov
icebp
or
sbb
stos
popf
pop
pop
test
stc
icebp
xchg
nop
dec
add
gs
push
lahf
jne
loopne
jle
or
pushf
out
imul
test
xchg
push
sub
pushf
icebp
mov
lods
addr16
notb
cli
mov
call
sub
fwait
or
pop
cs
mov
in
mov
out
adc
push
pop
xor
fiadds
xor
mov
push
shrb
mov
jnp
jbe
inc
jecxz
push
jg
sub
or
dec
xchg
arpl
or
mov
mov
pop
scas
hlt
push
fmull
inc
pop
fdivl
enter
aad
push
popa
leave
mov
or
call
inc
jge
push
test
adc
stc
daa
push
divl
sbb
in
xchg
pop
xor
or
and
insl
hlt
sahf
rcr
call
cmp
movsb
push
outsb
stos
jnp
sbb
shrb
push
mov
xchg
repz
lods
xchg
call
pop
sub
ljmp
mov
push
int
pop
adc
mov
in
cltd
sahf
mov
out
fs
jns
mov
movsl
pop
pop
ret
jl
in
leave
mov
sub
faddl
sarl
adc
shlb
sbb
or
scas
shll
popa
sbb
jl
enter
inc
rolb
adc
sbb
dec
mov
adc
loop
dec
test
mulb
pop
aaa
push
sub
mov
lret
adc
orl
sti
call
push
pop
mov
mov
arpl
adc
mov
cmp
sbb
cmp
push
js
inc
xor
push
pushf
das
mov
out
jp
std
add
std
loopne
out
pop
cmpsb
dec
movsl
or
int3
pop
pushf
jo
mull
or
std
mov
or
pop
fs
fisubrl
in
lret
dec
dec
mov
pop
jmp
insl
fsubl
sub
xlat
mov
popf
jns
in
loope
sub
mov
or
cmp
in
pop
mov
xchg
add
inc
mov
daa
or
dec
pop
add
fmuls
mov
out
int3
scas
jg
dec
jnp
test
or
sarl
cwtl
add
cli
sub
test
sbb
in
dec
and
icebp
daa
test
stc
xor
jne
push
out
push
mov
jno
or
mov
adc
and
add
clc
inc
imul
inc
xchg
pop
sbb
push
pop
out
mov
mov
pop
inc
or
clc
test
sbb
mov
xchg
dec
stos
nop
clc
lahf
subb
inc
loop
sbb
add
push
pop
sbb
imull
in
inc
cmp
scas
into
sbb
shr
mov
imul
jg
das
repnz
rcl
ljmp
fwait
add
dec
mov
xchg
adc
into
jae
inc
or
repnz
iret
cmpsb
add
sub
cltd
and
jmp
fdivrs
mov
fwait
cli
das
inc
adc
scas
js
xchg
xor
icebp
test
or
add
cmpsb
out
clc
and
jge
das
cmp
mov
lret
scas
es
and
fists
in
jl
jecxz
ja
fnstcw
push
ljmp
dec
xchg
mov
test
sbb
xchg
mov
imul
jmp
out
sbb
mov
lea
sbb
mov
jp
cmp
icebp
outsb
stc
mov
or
out
and
push
clc
lret
fwait
mov
pop
adc
add
inc
push
ret
inc
cmp
push
lods
fwait
pop
add
xorb
jns
cwtl
movsl
sahf
std
movsl
dec
mov
lahf
mov
outsl
cmpsl
push
stc
cmp
mov
adc
imul
and
enter
movl
iret
loopne
lock
cmp
gs
jnp
insb
or
or
lods
icebp
dec
push
pop
shlb
adc
dec
push
sahf
mov
call
mov
repnz
pusha
fistl
arpl
jg
ret
ja
popa
add
dec
push
cmp
mov
sub
pop
cmc
scas
js
cmc
movsl
xor
cwtl
nop
fwait
mov
xchg
es
and
das
or
sub
push
xchg
pop
mov
stos
jno
cmp
es
push
lock
inc
mov
test
subl
aaa
or
and
sbb
push
inc
shrl
and
cli
sar
enter
scas
inc
mov
pop
mov
sbb
mov
aad
test
test
ret
std
addr16
and
out
jl
incl
mov
sub
or
push
fdivrl
insl
test
push
mov
jmp
xchg
and
popf
and
xchg
mov
inc
jne
pop
std
adc
jge
shr
add
scas
dec
and
pusha
repz
pop
int
xchg
scas
sbbb
in
jecxz
or
sub
add
inc
jle
ret
mov
aam
push
arpl
sbb
sub
xchg
frstor
fsubrs
gs
mov
jb
sbb
push
pusha
jns
cmp
out
js,pn
lods
loop
test
pusha
add
mov
or
es
icebp
sub
dec
gs
or
ja
and
xlat
cmpb
inc
jp
adc
sbb
dec
add
cltd
and
jmp
and
inc
push
xchg
fnstenv
adc
fst
jns
fsts
dec
insl
aad
cld
outsl
jne
jg
cld
mov
in
add
cwtl
mov
push
in
imul
mov
fmuls
lahf
repz
das
jle
jb
lds
dec
dec
xor
cmp
in
sti
push
pop
pop
mov
mov
push
dec
ret
or
dec
shlb
hlt
dec
pop
ja
sbb
lock
mov
inc
test
fsubl
xchg
xchg
lcall
rcrl
bound
dec
mov
out
loopne
cmpsl
fucomp
lods
push
pop
decl
and
adc
push
lret
imul
jp
add
mov
mov
hlt
add
mov
pop
mov
xorb
push
jae
adc
sbb
jecxz
shll
das
xor
repz
aad
xor
sub
mov
add
xchg
rorl
aaa
insb
jne
inc
ret
stos
test
jns
or
popf
ficomps
movsl
add
inc
sbb
or
mov
lcall
dec
je
xor
hlt
je
in
inc
jl
xchg
adc
mov
push
or
push
dec
sbb
xor
cmpsb
std
outsb
ljmp
dec
jp
inc
bound
mov
addb
inc
dec
mov
iret
add
sarl
mov
xchg
mov
xlat
mov
rcrl
dec
xor
cmpsl
inc
push
repz
mov
mov
cmp
jo
out
jecxz
add
aaa
in
xor
fistps
adc
stos
push
insb
adc
jae
mov
sahf
cmc
sub
sub
shrl
je
pop
out
movsl
pop
or
imul
pop
in
les
rorl
rcrl
dec
inc
stos
leave
jnp
movsb
pusha
test
ret
imul
rcll
lds
jle
push
cmpsl
test
pop
out
fldenv
mov
movsb
imul
stc
xchg
shll
aam
and
aaa
mov
pop
jne
shrb
add
mov
test
lds
ljmp
adc
mov
popa
ja
xchg
sub
jo
mov
ljmp
push
sub
movsl
stc
xchg
mov
in
sar
xor
push
adc
xor
movsl
sbb
addb
and
test
rep
leave
pop
fucomp
addr16
inc
xor
sbb
enter
cli
leave
loop
lahf
outsl
or
fwait
push
es
xchg
iret
icebp
sbb
or
lcall
jbe
or
mov
push
xchg
inc
cmp
inc
lahf
in
pop
js
cwtl
pop
fmull
inc
cmp
aas
mov
cmp
rclb
mov
sti
add
push
sbb
dec
jno
insl
and
fsubrs
es
sub
stos
dec
rcr
lock
xchg
mov
es
cmp
daa
mov
movsl
call
inc
rclb
sbb
add
addr16
enter
and
xchg
out
add
cmpsb
fistl
xor
xchg
inc
mov
cmp
adc
push
cmc
repnz
sbb
cmpsl
int3
imul
push
push
add
insl
fldt
addr16
dec
decb
pop
ret
xor
rclb
out
and
jo
sub
sbb
push
insl
lods
and
in
cmp
mov
sub
jb
mov
pushl
pop
mov
loop
mov
mov
mov
pop
insb
dec
fcmovbe
pop
sbb
jns
mov
clc
in
push
xchg
pop
out
or
sub
mov
sbb
jnp
xlat
add
jg
daa
push
mov
xor
jmp
cmpl
pop
adc
lea
mov
pop
std
ret
lock
push
in
cmp
mov
nop
and
jne
mov
dec
jle
in
push
xor
sbb
push
divb
cli
ret
and
add
call
sub
xor
dec
inc
outsb
push
adc
mov
les
clc
xchg
insl
pop
xchg
gs
mov
mov
mov
mov
mov
xchg
data16
nop
fcmovbe
pop
fs
mov
sbb
xor
lods
push
shll
fcoms
xor
cmpl
mov
add
mov
jne
and
mov
in
or
pushf
aas
xchg
jo
mov
jecxz
icebp
cmp
adc
sub
cmp
cmp
fwait
rcll
and
sub
xor
xor
push
dec
cmp
in
test
sub
mov
mov
add
push
mov
cs
push
or
cmp
es
shlb
imul
outsl
jns
pop
or
enter
lods
imul
jnp
sbb
test
fdivrl
or
xlat
insb
inc
jecxz
and
das
sbb
mov
loopne
lods
push
mov
addr16
push
and
mov
dec
jno
rol
push
mov
mov
mov
int
xchg
dec
push
iret
adc
push
jg
and
pop
dec
fstpt
insb
inc
dec
xor
outsb
insb
pop
ja
test
ret
lcall
mov
test
adc
iret
add
lock
insb
xchg
es
push
inc
adc
push
sub
mov
sbb
sbb
jno
movsb
in
jmp
ret
jg
aam
mov
xchg
cmpsl
lods
icebp
push
adc
add
push
xchg
cmp
mov
xchg
sar
inc
mov
push
mov
or
mov
pop
or
xor
push
xchg
ds
mov
mov
and
adc
xchg
insl
push
adc
dec
mov
hlt
fists
jnp
daa
push
into
mov
jmp
test
cmpsb
lcall
out
dec
mov
ja
pusha
inc
in
out
mov
shrb
lods
dec
sbb
xor
gs
lcall
aaa
ret
sbb
xor
je
jl
push
inc
lret
mov
punpckhbw
push
leave
xchg
cld
mov
fcmovnu
imul
ss
or
pusha
mov
xchg
popa
mov
decb
mov
and
lret
scas
loope
pop
inc
scas
int
movsl
mov
fldt
pop
aam
in
stc
dec
mov
bound
lea
cmp
nop
push
push
cmc
subl
addr16
jg
push
lea
lahf
pop
fs
outsl
add
push
xchg
rorl
out
push
int
loopne
ret
add
clc
xchg
fidivl
clc
cmpb
jne
lock
push
cmp
mov
lcall
imul
scas
fidivrs
dec
stos
inc
sub
jae
lret
daa
push
push
adc
fwait
shlb
insl
mov
fwait
or
inc
lods
mov
cmp
ljmp
or
jnp
and
pusha
enter
aam
cmp
cmc
je
sbb
mov
ret
add
stc
mov
mov
jno
add
mov
mov
daa
rcll
lret
sub
jnp
inc
sbb
inc
push
push
jl
iret
sub
mov
test
jne
out
ficompl
ljmp
sti
loope
movsb
sti
sti
mov
aaa
mull
sbb
mov
ret
nop
fwait
pushf
mov
or
mov
push
sub
cld
lret
adc
cmpsl
inc
sbb
pop
sbb
shl
push
out
jg
icebp
sbb
lret
sub
mov
leave
mov
lcall
fucomi
and
mov
icebp
mov
mov
push
icebp
in
test
pop
xchg
xchg
incb
loopne
push
mov
xlat
pop
adc
int
jno
movsb
mov
cmp
adc
mov
dec
or
cwtl
movsl
jnp
leave
add
lds
mov
push
xchg
nop
push
sub
fildll
add
push
cmpb
or
lea
jne
sbb
add
int
lcall
iret
push
cmp
out
jo
outsl
hlt
fmul
mov
test
call
mov
sarb
add
fsts
mov
add
sub
dec
aad
push
outsl
jbe
aam
gs
cli
jbe
pop
push
mov
and
fucomi
cmp
and
pop
mov
cmp
test
popa
inc
ret
incl
call
dec
loop
iret
cld
dec
and
jecxz
sbb
xchg
je
push
movsl
mov
test
inc
mov
repz
adcl
sbb
imul
jl
leave
xchg
mov
xor
add
dec
loope
int3
jg
mov
mov
mov
jb
jo
sub
lods
ss
sti
dec
or
sar
test
xor
repnz
lret
dec
sub
outsl
fstpl
rorb
test
ret
cmp
rcl
cmp
cli
call
or
push
push
push
shll
mov
mov
fstps
stos
data16
addr16
adc
loope
ljmp
sahf
or
test
lahf
test
test
imul
xor
xchg
jbe
enter
push
inc
lret
lods
xchg
aaa
in
roll
in
mov
movsl
mov
dec
inc
je
mov
popf
cmc
mov
or
std
dec
repz
in
je
xchg
pop
jmp
push
nop/reserved
je
nop
test
dec
mov
mov
in
dec
sub
fisubs
mov
ja
push
push
fs
arpl
rcll
pop
xor
inc
sahf
mov
movsl
xchg
shll
jbe
ljmp
mov
jge
mov
xlat
push
and
mov
add
sub
xor
ljmp
test
cmp
out
rcrb
repz
xchg
fcompl
pop
inc
fs
psraw
int
lahf
dec
xchg
addr16
adc
insb
clc
popa
sub
loop
jecxz
in
call
sub
lds
inc
cmp
lcall
ljmp
and
mov
dec
mov
mov
cmp
xchg
xchg
push
iret
in
xchg
push
or
mov
and
mov
xchg
gs
flds
mov
shlb
xchg
xchg
sar
scas
les
sub
lds
pop
fs
cld
orl
testl
xor
clc
jae
xor
int3
fwait
gs
or
mov
gs
mov
add
adc
adc
call
sub
mov
add
dec
cmpl
addl
mov
pop
cmpsl
mov
push
icebp
pop
sub
inc
out
lahf
sbb
jb
mov
loope
mov
notl
xchg
mov
test
gs
adc
in
int
lock
push
xor
out
subl
sbb
mov
loope
sarl
fbstp
fs
push
xor
ret
insl
orl
lods
fsubrs
test
sub
test
data16
xlat
enter
and
jp
cwtl
sahf
jle
sbb
aas
nop
nop
xchg
imul
sub
setg
not
lds
mov
int3
ds
int3
cmpsl
mov
sbb
mov
cmp
adc
fcompl
movsb
inc
ljmp
xor
and
out
mov
das
jle
shrl
stos
xlat
push
aam
cmp
mov
repnz
into
dec
and
shl
push
ljmp
add
cmp
or
cmp
add
cmpsl
inc
jb
out
or
fs
mov
inc
push
xlat
jmp
sbb
je
fnstsw
movsb
jb
pop
xchg
sti
xchg
data16
lods
cmp
ret
cwtl
mov
xor
xchg
in
out
std
sahf
and
xchg
xor
ja
scas
addr16
outsl
repnz
jp
mov
push
cmp
fdivrl
dec
aaa
add
or
in
push
mov
ss
xor
test
std
rclb
shlb
arpl
jg
cmc
ficomps
or
mov
cmp
fwait
push
cli
es
outsb
out
push
icebp
mov
test
and
xchg
sub
pop
xor
nop
test
inc
ficoml
orl
adc
lahf
mov
mov
stc
cmpsl
dec
mov
in
and
sub
das
pop
loopne
inc
test
js
out
mov
out
jg
jnp
jo
nop
testl
push
jae
lret
inc
lods
adc
icebp
sti
xor
div
stos
jecxz
bnd
decb
pop
adc
repz
jno
jnp
std
test
add
cs
xor
mov
repnz
test
or
test
jnp
mov
push
inc
sub
ds
daa
out
jp
xlat
dec
shrb
dec
cwtl
pop
jecxz
adc
mov
jae
sahf
xchg
rcr
fcoms
lds
enter
addl
in
push
xor
mov
jle
sbb
cltd
movsb
in
mov
pop
push
inc
pop
add
inc
stos
lret
mov
cmp
les
enter
or
dec
mov
scas
sbb
lcall
and
jnp
or
lds
pop
push
imul
add
clc
mov
arpl
inc
mov
sahf
fs
popa
jmp
ret
and
mov
test
dec
or
loope
sub
cmpsl
or
out
insb
dec
xchg
clc
in
push
mov
out
pop
push
int
xor
lret
dec
push
outsb
jle
fwait
out
adc
shlb
pop
pusha
loope
push
cmc
int
jp
int3
inc
and
testl
iret
xor
or
aam
popa
add
js
inc
fldl2e
rclb
jnp
cmc
sbb
inc
repz
inc
insl
repnz
adc
dec
jp
xor
sbb
orl
push
ds
xchg
rcrl
push
or
jl
outsl
dec
test
xor
dec
jp
push
stos
lods
loopne
sbb
hlt
popa
inc
hlt
nop
scas
xorb
je
pop
jns
sbb
or
and
stc
lods
lods
addr16
mov
and
xchg
js
xor
loop
fs
jno
in
and
xor
and
lock
cmp
test
jne
adc
out
inc
xor
xchg
mov
sbb
cwtl
mov
dec
mov
movb
push
loopne
jl
fwait
xchg
hlt
repz
mov
test
sbb
mov
lret
aad
jns
js
adc
icebp
pop
shl
xor
push
cmp
mov
ror
int3
hlt
pop
mov
ds
jge
in
les
mov
xchg
cmp
ror
out
jnp
dec
sbb
or
mov
faddp
mov
mov
add
push
in
cmpxchg8b
into
ljmp
arpl
inc
std
xchg
pushf
les
jmp
loop
adc
movsl
jge
in
cmpsl
pop
or
fisubl
insb
in
adc
xor
sub
lea
cmp
int
sub
sub
fisubrs
xor
fwait
enter
inc
inc
sbb
vpunpcklwd
shlb
fwait
push
dec
call
shlb
or
cltd
imul
je
call
rcr
repnz
int3
ja
xchg
jns
push
nop
push
add
inc
sarb
scas
clc
outsl
sar
fnstsw
cmpw
add
sbb
outsl
inc
push
fwait
xchg
xchg
inc
dec
push
ja
or
mov
mov
leave
push
outsb
rolb
lahf
popa
sti
lahf
mov
push
xlat
pop
or
xor
cmp
scas
xchg
idivl
xchg
loopne
mov
dec
and
repnz
inc
icebp
cmpb
mov
jns
cmpl
cltd
lahf
xchg
fcomps
xchg
stc
sbb
fdecstp
mov
mov
int
xchg
outsl
sub
test
add
mov
nop
xchg
cmp
inc
repnz
inc
pop
xchg
repnz
push
mov
icebp
adc
inc
and
cmpsl
inc
js
jge
cmp
das
mov
inc
mov
sub
sub
inc
xor
fs
popf
in
shrb
data16
fnsave
lea
shrl
sub
push
sub
cmp
stos
shl
push
push
inc
pop
mov
int3
inc
les
mov
imul
int3
mov
imul
inc
xchg
inc
cltd
stos
call
hlt
jecxz
cmp
orps
push
mov
cld
or
gs
in
pop
in
enter
lods
pop
push
aam
adc
pop
sbb
cwtl
mov
pop
mov
cmp
inc
test
mov
inc
dec
or
jae
enter
lds
and
stc
xchg
pop
adc
cmp
fs
dec
shll
adc
pop
call
fists
inc
addb
shll
push
std
sub
scas
jb
pop
stc
and
jns
popf
jae
xchg
and
data16
or
pop
xchg
fcmovbe
dec
sub
shl
stc
add
and
fcoms
shlb
sti
in
imul
jo
in
adc
mov
int
xchg
mov
jns
ret
icebp
loopne
xlat
inc
jno
into
or
jle
jmp
fmuls
mov
inc
add
arpl
stc
mov
daa
outsl
enter
aam
int3
cmp
mov
movaps
out
inc
iret
add
sub
xchg
cmp
js
fbstp
jne
stos
cmc
ret
enter
jae
movsl
or
sbb
cmpsb
lods
add
cmp
adc
loopne
rclb
or
pop
xchg
add
inc
xor
in
lock
and
and
adc
jg
pusha
adc
imul
nop
dec
js
xchg
mov
adc
icebp
std
push
push
jb
loopne
int3
pop
sub
insl
aam
popa
pop
cmp
dec
ss
out
data16
or
iret
ljmp
aas
fwait
sbb
out
mov
outsl
inc
jmp
fwait
loop
pop
or
and
sahf
push
scas
mov
lahf
adc
shll
aam
out
imul
mov
out
or
dec
cmp
inc
clc
nop
orl
mov
sbb
and
inc
lea
sub
ss
pop
aaa
fs
in
cmpsl
and
jmp
jmp
pop
fdivl
test
xor
cli
jle
mov
in
idiv
pop
jg
inc
orb
jl
mov
jns
add
xor
int3
pop
in
push
pop
adc
mov
mov
jmp
push
out
mov
gs
pop
fwait
arpl
cmpsl
out
dec
mov
add
pusha
or
mov
loope
xchg
lahf
test
sbb
ja
jge
push
and
cmc
sbb
push
push
pop
lret
sbb
pop
rcrl
mov
iret
imul
sbb
icebp
cmp
fcoml
cmpsl
dec
shll
cmp
repz
pop
lahf
inc
fadds
and
cmpsb
paddq
gs
jo
test
cwtl
inc
dec
xlat
xor
incb
and
dec
or
sbb
jle
cwtl
dec
push
fistps
push
push
jo
dec
push
ss
or
mov
mov
pop
enter
jno
mov
out
mov
xchg
and
xchg
in
aaa
test
dec
insl
or
call
sbb
je
iret
mov
inc
and
mov
aam
xchg
fisttpll
andl
push
lret
mov
mov
push
push
ljmp
or
lds
add
jle
mov
ljmp
in
mov
aaa
jp
dec
popa
rorl
loope
dec
jle
fidivl
xor
shll
call
lcall
jo
gs
jo
cmp
inc
fstl
sbb
xchg
pop
mov
hlt
jge
scas
mov
mov
fsubl
jge
dec
fadd
jbe
dec
fisubl
lcall
push
mov
xor
cmp
test
cmc
sahf
xor
xchg
add
jno
cmp
and
jp
mov
inc
loope
xor
adc
jae
push
and
pop
xchg
lds
sub
ror
mov
iret
inc
ficoml
push
jge
pop
cld
cmp
pop
and
or
add
xchg
cmp
rcrl
push
pop
mov
push
into
test
pop
inc
daa
pop
xor
push
idivb
push
out
mov
lcall
in
out
dec
pop
add
arpl
fstps
xchg
jecxz
mov
push
stc
mov
xchg
mov
push
mov
fcmovu
ss
dec
lock
sti
orb
movsb
or
inc
in
pop
sub
dec
loop
popf
rcr
in
cwtd
enter
cmp
leave
je
jo
and
fistpl
jp
mov
mov
js
or
iret
push
sub
ret
xor
push
jns
jge
insl
jnp
sub
inc
clc
lea
pop
push
inc
ret
xchg
fdiv
into
test
mov
dec
fldenv
and
sub
mov
mov
or
rcll
ret
xchg
push
lea
inc
scas
cs
scas
xorb
out
imul
call
sahf
lods
inc
adc
push
lret
or
sub
or
push
and
mov
inc
mov
mov
mov
sub
and
adc
push
cmp
adc
das
pop
ss
and
mov
ja
sbb
jp
mov
cld
nop
nop
xchg
sbb
into
xchg
mov
outsl
rcrw
adc
rcl
sbb
xor
mov
test
jmp
movsb
scas
stc
sub
adc
out
mov
dec
fldt
dec
cmp
sbb
inc
inc
and
mov
adc
xor
subps
mov
jl
sub
aaa
lods
or
jge
cmpsb
rclb
orb
push
sahf
or
inc
or
std
adc
sbb
dec
sub
and
inc
pop
sahf
adc
pop
xor
movsb
push
and
or
xchg
insl
jl
mov
arpl
push
sub
xor
dec
call
gs
rolb
je
stc
mov
test
push
push
dec
jmp
jmp
leave
mov
lods
push
jo
test
and
iret
dec
push
dec
jbe
cs
pop
add
pop
jb
aas
in
sar
sbb
pop
aad
xchg
add
mov
stos
push
push
stos
lock
or
lahf
cmp
jnp
in
popa
mov
jecxz
in
jecxz
cmpsb
sub
mov
jns
mov
mov
push
cmpsl
outsl
add
loop
sbb
jne
lcall
mov
repz
push
xchg
inc
add
int3
fprem
adc
ret
pushf
data16
fidivrs
mov
or
add
push
sbb
iret
testl
stc
xchg
inc
pop
sbb
or
add
lods
adc
insb
xchg
add
cmp
push
xchg
add
inc
pop
jg
daa
mov
cmp
dec
clc
outsl
mov
sarl
xlat
add
mov
push
loope
xchg
std
mov
lea
adc
aam
mov
pop
cli
sahf
ret
clc
insb
adc
in
mov
mov
mov
daa
test
scas
pop
mov
or
mov
push
dec
shll
add
clc
xor
xchg
js
sub
jbe
das
pop
nop
or
xor
xchg
popf
ret
inc
push
insb
jmp
insb
lea
pop
xor
push
push
jg
adc
inc
mov
inc
shll
sbb
aaa
repnz
aad
dec
adc
ret
mov
inc
pushf
imul
dec
jno
mov
dec
sbb
shr
pop
jb
sub
imull
mov
iret
xchg
pop
inc
sbb
cld
dec
xchg
fdivrp
dec
push
aad
inc
fs
jb
or
ljmp
and
insb
outsl
mov
xchg
or
shlb
js
loopne
xchg
mov
rolb
les
outsl
jmp
pop
into
inc
lahf
or
stc
mov
test
and
xchg
mov
mov
adc
rolb
popa
and
inc
add
cmp
bnd
mov
sbb
call
mov
xchg
pop
mov
mov
je
mov
sub
xchg
pop
dec
leave
out
xchg
bound
or
scas
jg
cmpsb
push
pop
push
push
pop
pop
sahf
cmc
cmp
cli
mov
sub
lahf
cwtl
jnp
jmp
sbb
push
je
adcb
xor
pop
mov
stos
jp
cmp
inc
enter
dec
dec
pop
icebp
fisubs
cmpsb
dec
and
in
idivl
pop
mov
les
jnp
add
jge
stc
imull
jb
xor
sahf
xchg
inc
rorl
int3
loop
in
mov
sbb
jle
aam
xchg
lahf
fdivrs
push
mov
mov
add
add
inc
pop
fbstp
loop
gs
data16
dec
les
les
aad
mov
std
xor
ss
arpl
out
xor
cli
push
fwait
ja
add
adc
aad
mov
aas
jmp
sbb
mov
cmp
fstpl
das
lcall
adc
lcall
sti
mov
aas
mov
xor
ret
mov
js
cmpsb
xchg
mov
xor
cmp
pop
mov
cmc
push
pop
sub
stc
cmp
or
dec
mov
pushf
rclb
inc
and
iret
xchg
in
push
out
scas
in
ffreep
cmp
imulb
add
sbb
push
lods
mov
test
in
or
mov
je
and
int3
andb
pop
lds
ss
test
mov
dec
and
mov
mov
repnz
ljmp
jecxz
pop
aad
xchg
enter
jbe
cmp
rol
je
or
gs
in
xchg
add
or
mov
sbb
in
pusha
dec
push
es
or
fs
push
imul
cmpsl
aas
lret
sub
arpl
pop
xor
enter
or
pop
pusha
cs
mov
xchg
pushf
mov
adc
pop
push
pop
mov
dec
arpl
pop
mov
sub
in
mov
xchg
fs
mov
into
jbe
push
and
pop
repz
adc
mov
inc
push
add
mov
popa
inc
in
movl
loope
sti
xchg
add
and
mov
xchg
repz
mov
pop
outsl
clc
or
insl
rol
cltd
sbb
mov
inc
mov
jae
lods
pop
adc
icebp
leave
sub
mov
lea
lods
add
dec
adc
leave
lahf
and
push
fs
imul
adc
inc
hlt
adc
jns
sub
bound
xor
sub
sbb
add
xchg
sub
dec
sahf
shrl
lods
ret
dec
or
mov
pushf
test
cmc
adc
jno
rcr
pop
add
ja
mov
push
repz
mov
sub
dec
fbstp
test
aam
sub
outsl
aam
jbe
inc
sbb
or
sub
pop
hlt
shl
out
sub
cld
shr
int3
dec
aam
in
xchg
adc
pop
ja
and
andl
clc
add
out
xchg
hlt
fnstcw
ja
mov
aam
adc
dec
in
movsb
stc
or
paddusb
push
pop
add
xor
je
ds
inc
sbb
outsb
out
adc
lock
pop
xor
cmp
movsb
mov
inc
cltd
dec
int
jno
or
dec
out
jp
pop
and
or
push
fcmovbe
scas
jl
mov
jno
andl
nop
out
mov
nop
mov
test
popa
xchg
lcall
aaa
aas
pop
cmp
cmp
daa
fcos
cmp
mov
shlb
lods
mov
cmp
push
leave
sbb
adcl
add
mul
repnz
mov
sbb
lret
daa
in
mov
ja
cmp
pushf
inc
lcall
xor
ret
jmp
idivl
or
mov
loopne
xlat
dec
jp
ret
in
fsubl
out
aaa
dec
imul
cwtl
xor
mov
xlat
inc
push
adc
xchg
popf
shrl
pop
sbb
inc
jns
mov
je
jb
adc
nop
testl
cmp
testb
mov
daa
int3
testl
lret
mov
push
mov
insb
cmp
adcl
cmp
mov
insb
outsb
imul
jbe
cmpsb
shr
insl
imul
jns
dec
push
mov
addl
add
ret
mov
fs
je
not
mov
data16
call
stc
xlat
adc
sbb
adc
cwtl
inc
clc
clc
push
aaa
ret
push
mov
repnz
pop
push
push
loope
fwait
decb
mov
xor
adc
cmp
in
and
inc
add
push
sub
or
leave
fidivrs
rcr
dec
mov
popf
jmp
fstps
inc
pmulhuw
inc
stc
hlt
rorl
dec
push
push
std
gs
xchg
cmp
push
and
movsb
dec
int3
xchg
mov
test
push
fwait
adc
popa
dec
in
xlat
jae
mov
out
pushf
lret
dec
xchg
pop
pop
mov
mov
lock
fsub
test
inc
addb
adc
sti
sub
orb
fisubl
cmpsb
inc
mov
jb
loope
mov
fsubr
cmp
cmp
jg
jmp
mov
inc
xchg
or
rolb
lcall
xor
sbb
scas
popa
pop
fldcw
int
test
cmp
xchg
and
dec
xacquire
mov
popa
cmp
sbb
xor
cmp
cmpsb
out
sub
sub
xor
mov
inc
cmp
and
sbb
dec
dec
jg
or
sbb
ret
or
cltd
mov
add
sub
inc
cmp
sbb
push
xor
pop
test
push
jae
das
out
lods
popf
leave
cli
jmp
dec
das
cmc
sub
outsb
lods
mov
cld
out
mov
scas
mov
ss
loopne
insl
inc
outsb
lock
aam
mov
add
xchg
aaa
dec
sub
cmpsl
add
testb
lock
push
testb
lret
mov
xchg
push
cli
pop
jns
loopne
mov
insl
sbb
repnz
sub
pop
or
adc
pop
add
je
movsb
jns
fdivs
lcall
fstpt
pop
icebp
mov
in
shrb
and
adc
lock
sub
mov
fistpl
and
sti
aam
lea
mov
jns
or
or
mov
inc
or
mov
idivb
aaa
sar
xor
in
and
xchg
sbb
orb
notb
mov
nop
enter
insl
mov
cwtl
mov
movsl
mov
inc
xchg
cmp
rorb
xor
ficoms
pusha
push
add
xor
inc
dec
mov
jne
dec
and
ret
push
push
xor
cs
repz
push
pop
cmp
jg
dec
arpl
lods
in
adc
out
sbb
imul
adc
inc
sbbl
mov
je
ret
xor
cli
iret
adc
daa
mov
add
jecxz
stos
mov
in
push
xchg
lcall
mov
pop
movsb
or
repz
xchg
push
mov
mov
scas
notl
into
sub
mov
jl
and
dec
dec
fwait
or
pop
cmpl
mov
push
push
mov
sub
xorl
xorb
xchg
loope
adc
stos
push
inc
shl
xor
or
pop
sub
dec
mov
jmp
and
push
out
mulb
push
cmp
pop
add
nop
sbb
xchg
jecxz
mov
fiadds
scas
xchg
push
sbb
gs
test
cmp
inc
mov
ljmp
ljmp
rol
nop
adc
out
push
push
fcoms
ja
mov
xchg
stos
mov
sub
into
sete
js
xor
fldl
add
mov
and
xor
cli
mov
jl
jb
sbb
pop
mov
out
pop
leave
pop
mov
aam
int
mov
leave
int
js
adc
outsb
sarl
mov
mov
and
movntq
xor
and
into
xchg
aam
push
daa
in
scas
scas
out
pop
dec
or
nop
and
nop
ds
imul
inc
xor
add
movsl
dec
test
test
dec
xchg
je
subl
mov
add
in
loope
call
in
mov
jl
movsb
mov
jo
inc
lea
sbb
hlt
mov
push
dec
gs
test
mov
mov
movsl
lret
pop
xor
imul
lds
sbb
ja
jns
dec
lcall
sarb
or
sbb
xchg
xchg
fstpl
push
jmp
mov
and
mov
fisttpll
and
adc
imulb
adc
jmp
inc
mov
mov
inc
xchg
mov
sbb
xor
movsb
addr16
jae
and
push
mov
and
call
repz
add
call
sub
pop
aam
shll
adc
cmp
sbb
jne
sub
mov
or
and
es
dec
mov
jb
pop
and
pop
xchg
insb
pop
pop
xchg
cs
loopne
das
push
mov
fldl
push
sarb
mov
dec
cmp
call
insb
mov
cmp
gs
add
xor
jno
fsubs
xor
pop
push
dec
inc
xchg
push
mov
hlt
cld
jl
aad
repnz
mov
jmp
pop
and
mov
out
lret
jne
add
popf
pop
xchg
jno
mov
dec
or
cmp
inc
jo
test
cmpsb
fstpl
lods
push
cwtl
and
push
arpl
jne
push
mov
icebp
dec
fsubs
mov
imul
iret
jg
mov
xchg
jmp
fwait
cmp
sub
add
nop
lcall
loope
dec
test
or
lea
imull
repz
cmpsl
lock
cltd
das
add
aas
cwtl
movsb
daa
rorb
add
das
sti
incl
mov
out
adc
lcall
leave
xchg
inc
add
xor
jl
popf
loopne
xchg
pop
lock
xchg
insl
xchg
lock
and
out
enter
es
enter
loopne
mov
loop
adc
adc
dec
push
mov
mov
sbb
cmp
xchg
push
inc
pusha
dec
dec
stos
gs
test
outsl
stos
dec
stos
not
xchg
lret
imul
pop
test
mov
sti
daa
pop
mov
in
aad
jbe
outsb
inc
pop
insl
mov
pop
addr16
mov
loope
lahf
out
dec
lahf
sub
dec
xchg
pusha
mov
loope
mov
or
xor
lcall
xor
mov
arpl
movsb
stos
jle
outsb
fwait
sbb
sub
data16
jnp
hlt
jnp
sar
les
fucomip
scas
jno
icebp
dec
add
push
xor
jae
xor
push
and
aas
pop
push
cli
mov
push
lds
cmpsb
and
cmp
sarb
int
jns
add
mov
jg
daa
ret
sub
pop
out
cmp
fwait
sarl
out
dec
jnp
xchg
push
xchg
xor
cmp
imul
outsb
dec
push
push
imul
mov
in
das
imul
test
or
inc
mov
sbbl
push
add
stos
lcall
dec
mov
or
mov
jno
cmp
cmc
or
jnp
push
mov
mov
xchg
movsl
adc
int3
mov
scas
mov
push
mov
add
xchg
add
shrl
sti
movsl
ljmp
lcall
pop
dec
jle
lret
ret
ret
pusha
mov
iret
dec
jl
cli
lcall
sbb
or
jge
sarl
lahf
mov
loopne
cmp
je
inc
xchg
sub
mov
and
jno
sbb
adc
test
es
adc
sbb
and
cmpsb
sti
data16
dec
cmpsl
hlt
add
mov
jmp
leave
jbe
dec
sbb
push
and
les
mov
pop
jl
mov
hlt
and
xor
xchg
mov
shlb
icebp
test
dec
mov
xchg
rorb
fistpll
fistpll
sbb
push
inc
xor
mov
jge
mov
in
cmp
mov
cmp
cmc
cmp
jno
inc
xor
fstp
mov
fs
sub
push
sbb
inc
daa
movsb
adc
das
adc
push
or
aad
loop
ds
mov
mov
aaa
cmc
or
sti
pop
roll
sub
fucomp
cmp
xchg
and
mov
xor
cmp
inc
mov
add
bound
testl
add
int
jg
insl
adc
push
je
dec
fdivr
fmuls
mov
or
lret
mov
pop
iret
das
js
sub
xchg
inc
fiaddl
xlat
pop
xchg
loop
dec
not
dec
imul
ror
aam
mov
enter
in
xchg
lds
enter
iret
mov
and
jnp
loopne
xlat
add
push
add
shl
sbbl
lods
pop
cli
roll
movsb
test
arpl
pop
adc
cltd
aas
or
js
mov
inc
mov
mov
inc
pop
lret
das
inc
aaa
adc
into
lcall
lods
or
cld
es
int
arpl
out
fwait
mov
frstor
outsb
shlb
in
lods
or
lods
adc
mov
push
shlb
stos
inc
ljmp
mov
arpl
mov
stos
cmp
les
outsl
dec
and
ljmp
and
and
dec
push
jl
test
ja
xor
ret
in
mov
je
std
sar
and
enter
test
sarb
push
in
push
xchg
inc
xor
sub
lcall
mov
ds
mov
std
sbb
adc
leave
sbb
push
mov
incb
cmpsl
addr16
inc
push
lcall
out
dec
sub
pop
dec
frstor
lahf
out
inc
fisttpll
mov
scas
sbb
adc
add
pop
pop
push
jns
call
cmp
mov
nop
mov
in
jb
aam
lret
cmc
movsb
or
inc
jp
xorb
push
adc
std
and
push
cmp
clc
shrl
pop
jbe
sub
sub
shlb
and
sub
inc
mov
sbb
pop
mov
or
adc
sbb
sub
das
test
in
clc
test
inc
push
loope
jecxz
xor
add
shl
push
dec
ret
orb
fadds
insb
and
and
mov
mov
mov
cpuid
dec
push
or
les
imul
stos
jne
dec
jne
int
pop
fldt
in
out
mov
cmpsb
adcl
out
xor
cwtl
jns
dec
cmp
cmpsb
add
xchg
add
test
popaw
call
xlat
inc
lcall
test
rol
ljmp
fcompl
addr16
jl
fisubl
test
cltd
je
dec
xchg
add
aam
xor
xchg
mov
out
fwait
retw
in
sub
insb
iret
int3
fwait
rolb
jns
scas
mov
sahf
xchg
les
js
aam
add
pusha
add
push
rcll
test
bound
jo
pop
test
mov
addb
cli
sub
int
cltd
push
imul
test
push
out
jecxz
pop
imul
xchg
cmp
sti
outsl
test
add
mov
stos
or
add
imul
lea
daa
mov
std
iret
ss
insb
mov
mov
sbb
mov
or
or
dec
pop
fistpl
rcl
hlt
mov
push
movsb
sub
data16
adc
add
movsl
adc
fistps
outsb
cmpsl
xor
dec
xchg
and
jp
jl
ss
inc
inc
or
sbb
add
dec
sub
adc
mov
popf
ja
mov
std
fcmovnb
mov
mov
mov
rorb
fcomip
or
pop
mov
out
dec
mov
lods
in
jmp
das
pop
scas
jmp
sbb
xrelease
push
mov
push
aam
jmp
xchg
xor
mov
jecxz
or
lock
aaa
shr
mov
movsl
adc
int3
adc
std
mov
add
and
jecxz
sbb
jge
and
jnp
clc
mov
je
lcall
xlat
ficomps
test
cmp
nop
test
fs
pop
pop
sbb
add
inc
xlat
hlt
lcall
stc
mov
out
cli
das
fs
jb
xchg
rcrl
cmp
push
and
add
inc
clc
fwait
add
lahf
pop
cmp
mov
sbb
pushl
jo
lds
inc
push
std
dec
mov
dec
insl
jle
add
data16
cmp
fisubrs
xor
iret
leave
lods
movsb
jg
es
push
fs
add
cld
outsb
enter
adc
pop
pop
xchg
iret
cmpb
ficoml
mov
jb
xor
push
mov
scas
loop
sub
outsl
adcl
outsl
and
daa
mov
out
fisubs
cmp
jns
add
inc
dec
popf
ror
and
stc
bound
es
inc
arpl
cmpsl
andl
mov
sbb
push
idivb
bound
testb
cmp
daa
subb
pusha
pop
rcl
mov
inc
jb
call
mov
cld
adc
loope
fists
sbb
mov
fdivs
mov
adc
ja
loopne
orb
in
sbbl
push
loop
das
xchg
insl
rcr
mov
push
jge
adc
add
sti
or
pop
fildll
sub
fildl
mov
add
cli
inc
mov
add
mov
insl
ja
mov
sbb
mov
iret
add
mov
xor
aad
nop
xor
mov
mov
jle
push
subl
sbb
arpl
rcll
push
jecxz
mov
or
push
mov
rcrl
push
gs
mov
push
or
xchg
jns
lods
pusha
jae
xor
sahf
add
outsl
xchg
cmpsb
cmpsl
cmpl
xchg
and
or
in
dec
daa
add
and
pop
andb
jge
inc
sbb
mov
pop
lret
mov
mov
xchg
fnstcw
stos
xor
fnstcw
nop
sti
jg
mov
mov
push
data16
lock
fstp
mov
js
outsl
dec
test
adc
mov
dec
jp
jo
or
and
aad
jmp
fisubrs
mov
dec
ss
sub
push
and
cmpsl
xchg
negb
push
push
das
pop
mov
orl
loop
or
and
push
cld
push
int3
sti
add
into
jg
mov
movb
and
and
xor
shrb
stos
ret
push
sbb
inc
mov
push
das
shll
xchg
push
sti
iret
push
cmc
inc
test
bound
sbb
xchg
enter
xchg
aam
das
in
sbb
mov
cmpsl
pop
mov
cli
mov
adc
pop
dec
push
inc
out
fiaddl
daa
cs
and
pop
push
jmp
and
aad
out
clc
xchg
or
stos
scas
add
es
xchg
jp
aam
outsl
jg
es
out
dec
lahf
cltd
rorl
arpl
ret
xchg
loope
mov
ret
nop
sub
lcall
push
inc
pop
or
jp
adc
notb
mov
jl
add
xor
and
push
add
nop
int
inc
jae
add
mov
fisubrs
cmpsb
or
clc
push
mov
xchg
pop
fcomi
stos
cmpsb
inc
fwait
pop
add
test
aas
jns
mov
mov
dec
sahf
pop
push
stc
inc
or
push
cmp
mov
mov
cwtl
gs
test
imul
jg
insb
mov
mov
test
xor
mov
test
out
lcall
add
filds
mov
das
jecxz
leave
xor
cmpsl
notl
mov
ljmp
or
insl
sub
jno
test
mov
fistpll
sub
mov
pop
cmp
pop
in
pop
aaa
jl
in
mov
xchg
mov
jge
add
mov
stc
lods
mov
xchg
test
fsubs
lods
mov
inc
mov
inc
mov
aas
pop
inc
mov
lcall
mov
sbb
inc
imul
sbb
cmp
cmpl
iret
mov
pushf
jecxz
cwtl
push
inc
fdivs
leave
testb
or
mov
lahf
xlat
daa
mov
ret
fistps
mov
fistl
pop
or
rcl
xor
adc
sarb
aas
sbb
and
cmp
arpl
xor
lret
add
dec
imul
jmp
arpl
ja
dec
insl
sub
jmp
mov
adc
movsb
mov
rcll
add
arpl
or
adc
test
dec
call
jmp
mov
or
lcall
out
ud2
sbb
mov
aas
je
or
cmp
out
push
fdivl
popf
sub
fadds
cltd
push
pop
lret
pop
subl
shll
nop
lahf
pop
mov
imul
sbb
test
adc
je
cmp
mov
xchg
sbb
mov
mov
jae
out
fmuls
inc
push
sub
adc
inc
or
cmp
inc
movl
xchg
imul
aas
and
inc
mov
fdivrl
inc
push
sbb
aad
dec
ror
push
jbe
in
lods
into
jg
jp
cmpsl
mov
outsb
mov
sub
mov
sub
and
adc
or
fs
xchg
and
insb
icebp
mov
les
push
stos
mov
xchg
test
inc
pop
push
mov
gs
ds
inc
jp
sub
xor
vmovd
push
lods
mov
shll
loopne
scas
and
add
repz
fisttpll
adc
adc
push
or
or
insl
push
adc
push
pushf
push
jno
lcall
sub
add
lock
inc
test
sub
push
lods
std
pop
or
in
sbb
pop
sub
fadds
push
into
das
add
ja
dec
jns
mov
or
fsubp
std
negl
mov
insb
xchg
lods
push
scas
mov
icebp
pop
add
xor
pop
shll
lods
testl
int
movsb
mov
rclb
fcmovne
dec
xchg
xlat
pop
add
into
ret
xor
stos
xchg
pop
aam
cmp
dec
outsb
cmp
daa
jb
cmp
call
orl
fcoml
pop
imul
stc
stos
xor
daa
aad
ret
xor
mov
xchg
jnp
jbe
mov
mov
icebp
loop
xor
pop
fnstenv
sbb
ja
scas
lcall
loope
repnz
in
stos
stos
daa
sub
inc
leave
les
cmp
sub
cmp
inc
mov
fdivrl
addl
popa
loopne
stos
outsl
jl
add
xchg
jmp
scas
lods
lds
mov
call
fiadds
jae
popa
lcall
daa
ret
mov
mulb
xor
cmc
pop
mov
int3
adc
stos
sbb
addr16
rcl
jno
add
mov
fsubr
xor
xchg
aad
pop
xchg
cmp
and
add
ret
cltd
and
repnz
xchg
popa
imul
xor
jbe
adc
xchg
fmul
sahf
pop
je
std
daa
or
movsb
xchg
lret
cmp
sub
inc
or
push
sub
fdecstp
mov
jb
stc
stos
xchg
daa
ja
pushf
mov
push
test
movsl
inc
repnz
in
push
into
cmc
cmp
faddl
outsl
sbb
sbb
test
push
pop
nop
shl
pop
notb
ret
fwait
ret
inc
sub
cmp
pop
add
leave
add
cmp
fmull
imul
imul
out
pop
movb
ficoml
icebp
out
dec
icebp
fstpt
push
adcl
aad
icebp
clc
inc
sbb
add
in
lock
mov
cwtl
xor
xchg
jecxz
loopne
jae
shlb
sbb
sub
mov
jge,pn
or
pop
mov
adc
adc
dec
shr
data16
fstps
out
movb
aaa
and
insb
dec
cmp
mov
pusha
xor
pop
jg
into
inc
sti
sub
add
scas
test
pop
add
faddl
push
add
xor
mov
inc
and
aad
out
adc
fisttpl
into
push
inc
xlat
inc
mov
inc
jmp
push
xchg
ja
mull
xor
push
cld
imul
sbb
hlt
or
test
xchg
adc
mov
xchg
test
jae
push
clc
mov
inc
mov
test
cwtl
inc
cmp
lcall
xchg
mov
sahf
pop
jg
jne
inc
push
mov
ret
jnp
stc
xchg
test
dec
fidivs
mulb
inc
inc
das
push
int
push
cmp
lds
aaa
pusha
inc
in
mov
gs
sti
stos
xchg
xchg
nop
jno
sbb
dec
jb
addr16
and
xchg
mov
test
xlat
push
movsl
mov
bound
inc
adc
inc
or
mov
ss
mov
sar
lods
add
insb
pusha
lock
js
dec
adc
dec
mov
add
out
mov
sub
mov
stos
adc
outsl
adc
sbb
shll
out
pop
rclb
lret
shll
adcb
es
out
pop
inc
or
adc
rol
push
or
pusha
sbb
cmp
out
push
loopne
mov
push
scas
mov
movsb
ss
mov
sahf
push
cmpsl
mov
pop
sbb
sub
test
add
mov
jbe
and
dec
cli
sub
movb
sahf
cmc
mov
pop
xor
xchg
cli
sbb
rolb
inc
popa
mov
loop
dec
in
pop
lahf
test
cmp
mov
sub
adc
or
fsubrl
inc
mov
xchg
add
mov
rorb
mov
lods
pop
mov
add
mov
mov
test
loopne
fldcw
push
mov
mov
push
test
push
pop
push
sbb
in
nop
push
psubusw
mov
cmc
push
xchg
inc
inc
loopne
adc
lret
pop
push
and
dec
inc
mov
xor
jle
add
pop
cmp
cltd
xlat
add
inc
cli
jg
jbe
inc
xchg
push
or
ret
popf
fstl
repnz
out
pop
push
shlb
mov
mov
in
push
roll
outsl
mov
fsubl
xchg
mov
nop
mov
arpl
mov
adc
fistps
jl
add
sub
scas
dec
dec
push
pop
arpl
xchg
mov
xor
mov
dec
mov
or
add
mov
dec
scas
add
rorl
cmp
cmpsl
and
mov
cmp
xchg
inc
lods
cltd
push
jg
divb
and
aas
push
icebp
test
fs
in
lock
je
in
fwait
adc
out
lahf
cld
into
jge
dec
lret
push
sarb
cltd
or
sub
adc
hlt
cmp
sub
adc
sbb
out
cmp
sbb
add
push
jg
fs
mov
pushf
mov
cltd
out
jae
out
btsl
je
sbb
xchg
and
fs
repnz
les
push
out
stos
loopne
popa
lods
mov
or
inc
xchg
pop
mov
cwtl
sub
leave
mov
leave
in
int
mov
xor
sbb
xlat
test
cmp
jno
fwait
sub
cmp
rol
add
push
xchg
cmp
lock
stos
push
jl
out
fsubrp
lret
addr16
cmp
stos
repz
adc
push
cmp
jne
in
in
mov
xor
nopl
test
mov
and
cmp
dec
incb
cmpsb
enter
xchg
in
pop
pusha
movsb
add
pop
xor
sbb
pop
outsb
jo
pop
mov
adc
int
inc
hlt
mov
mov
rorl
scas
rclb
jle
adc
nop
jecxz
test
push
shrl
xor
shrb
cltd
shlb
push
addb
stos
jge
mov
jmp
aaa
into
dec
dec
and
mov
jne
pushf
xor
dec
pusha
adc
jo
and
bound
movsb
aam
adc
fs
data16
cmp
lock
mov
mov
test
imul
push
push
jo
inc
xor
inc
popf
push
cmpsb
jmp
xor
test
aaa
dec
push
push
jecxz
jecxz
leave
aam
leave
jl
js
int
push
mov
fucomip
jno
stos
push
in
ret
mov
mov
sub
add
cmp
lea
add
mov
sub
xchg
lds
and
icebp
lahf
outsl
xchg
fs
int
jo
push
into
cmp
sahf
lahf
adc
adc
sti
or
cmp
xor
xchg
sub
xchg
cmpsb
and
fcoms
fld
or
or
repnz
repnz
push
test
cmp
mov
out
aad
mov
mov
aam
and
cmp
or
rcll
cmp
or
test
stc
cmp
push
and
push
pusha
pop
and
inc
ljmp
mov
xor
mov
adc
mov
push
xchg
jb
out
rclb
mov
out
dec
pop
repnz
jb
std
and
data16
out
idivl
ret
fwait
mov
mov
test
dec
mov
push
jmp
ror
gs
push
add
push
mov
jmp
ret
push
ja
inc
sbb
mov
je
pushf
les
xor
aas
cmp
adc
aam
cmp
sbb
sub
sub
cmp
mov
mov
sub
cmp
fldcw
push
mov
cmpsl
lods
inc
jns
orb
mov
pop
pop
ss
out
jmp
jo
lea
dec
out
sbb
dec
cmp
ret
or
pop
into
sbb
xchg
sbb
dec
fsub
enter
or
push
mov
fcmovb
fnstenv
mov
cmpsl
sub
loopne
shl
mov
lahf
xor
lahf
andl
xchg
sub
dec
fwait
das
xor
popa
ja
sub
rclb
lcall
dec
add
xchg
adc
cli
in
sbb
cmp
adc
xchg
rorb
cmp
sub
sub
sbb
js
pop
enter
jae
or
in
into
xchg
adc
sbb
pop
aas
ss
fdiv
inc
dec
call
data16
adc
or
jne
push
add
jae
out
jge
into
dec
xlat
out
test
mov
or
cmp
mov
in
push
or
jge
dec
mov
and
incb
mov
pushf
out
sbb
stos
inc
test
pop
xlat
idivl
add
dec
sbb
fwait
roll
xchg
pop
adc
hlt
std
jbe
cmp
sbb
inc
jecxz
pop
and
fs
ficomps
mov
sti
loopne
or
dec
outsl
xchg
mov
jno
xchg
inc
jns
cmc
mov
hlt
dec
mov
fildl
sbb
test
mov
out
adc
into
xlat
outsb
movsl
adc
movsl
cld
mov
mov
add
add
aaa
in
sahf
cmp
cld
lock
int
or
sbb
pop
mov
inc
mov
xlat
shll
mov
in
addb
dec
xchg
fisubrl
notl
mov
sub
inc
adc
push
loope
jo
add
cmp
int
das
insl
jecxz
hlt
sti
pop
add
fstps
xor
add
push
hlt
movb
or
push
adc
xchg
jno
inc
mov
and
mov
enter
test
xchg
dec
jg
rcrl
push
lret
mov
pop
sbb
push
adc
jge
arpl
fs
iret
inc
sbb
into
mov
roll
mov
lods
sub
leave
mov
jns
and
push
or
push
lcall
sbb
lods
push
fstpl
inc
popf
je
sahf
pop
xchg
mov
notl
push
push
test
jl
xchg
mov
inc
adc
sub
scas
dec
into
dec
mov
xorl
addb
int3
aas
popa
xor
sahf
sub
loope
xchg
stos
mov
es
bound
cmpb
dec
test
lods
xchg
outsl
jns
filds
jnp
xlat
test
pop
inc
sbb
pop
mov
in
sub
add
xchg
sub
daa
into
mov
into
and
dec
sbb
pop
ficoms
jno
xchg
std
or
push
cltd
ret
inc
pop
sbb
lds
mov
insb
je
orl
add
shll
les
sbb
and
sahf
inc
cld
jnp
mov
inc
lret
xchg
out
add
arpl
mov
or
jp
outsl
sbb
mov
imul
movsl
xchg
test
cld
push
dec
scas
lahf
outsb
in
repnz
mov
xchg
int3
mov
jecxz
mov
jmp
fmull
sti
subb
push
pop
push
jno
imul
mov
dec
popa
lods
enter
pusha
cmp
dec
adc
push
cmp
shrb
lahf
pop
fadd
pop
test
xchg
in
sarb
call
pop
cli
fisubrs
sub
pop
sbb
adc
lcall
adc
je
idivl
dec
dec
gs
adc
sbb
jl,pn
mov
mov
adc
jmp
inc
cmp
fimuls
aad
enter
inc
mov
adc
and
jecxz
xchg
lret
hlt
lods
jo
push
loopne
arpl
jmp
xor
outsb
push
out
leave
out
adc
cmp
jae
fimull
sbb
jno
mov
xchg
imul
loop
sbb
add
mov
adc
dec
lock
jge
jae
xchg
dec
bnd
stc
sub
dec
cmc
pop
jp
lcall
jo
insl
cmp
jp
push
cltd
sub
jg
fcompl
jmp
dec
xchg
fimull
pop
imul
cltd
into
shr
outsl
or
nop
push
mull
and
fdivr
ffreep
lock
cmp
jbe
or
ds
mov
or
jne
or
cwtl
hlt
jnp
aas
push
sbb
leave
mov
adc
mov
fiaddl
cmp
cmp
lret
lcall
loop
fcompl
pop
lcall
mov
mov
mov
ret
pop
pop
xor
add
arpl
popa
jge
add
insl
pop
add
ror
mov
jns
xchg
add
xor
outsl
ret
xchg
xorb
xor
pop
stc
and
arpl
fidivl
scas
jge
rcll
push
pop
inc
pushf
push
push
mov
xor
sahf
mov
nop
out
loop
xchg
sub
inc
pop
and
jbe
rcll
xchg
inc
xorl
mov
pop
out
aaa
push
out
sbbl
dec
pop
sti
ja
xor
scas
stc
inc
test
sub
aad
imul
cmp
push
dec
mov
mov
adc
cmp
adc
xlat
scas
mov
pop
mov
pop
xchg
fdivp
jbe
ja
jmp
mov
inc
jne
mov
lods
in
cmp
cmp
or
ja
mov
test
xchg
mov
or
push
adc
inc
sbb
stc
popf
out
cld
inc
movsl
cmpsl
test
je
ss
cmp
mov
lods
inc
popl
mov
test
outsb
dec
mov
lds
in
test
lcall
mov
imul
imul
test
xchg
cmc
sub
pop
imull
int
push
loop
loop
push
inc
and
mov
out
rorb
xor
andl
push
stc
out
out
mov
push
mov
cmp
mov
movsb
dec
jge
fists
dec
mov
aaa
bound
filds
nop
xchg
jp
inc
inc
ljmp
push
adc
and
bound
jle
mov
test
shl
sbb
jp
sub
inc
sub
pop
sub
sti
inc
and
xor
pushf
imul
xchg
mov
xchg
sub
testb
inc
or
jne
pushf
mov
xchg
lock
loop
mov
in
lcall
sub
sub
ret
psubusw
and
push
dec
jnp
sbb
sbb
lcall
jle
in
leave
inc
mov
fs
sub
fdivrs
xchg
shrb
push
fwait
push
xlat
in
pusha
adc
jne
add
shll
fimull
sbb
daa
testb
pop
popa
in
scas
or
cli
repnz
mov
cltd
leave
flds
and
or
sbb
inc
repnz
rcr
mov
jb
xor
mov
mov
xchg
and
xor
fwait
dec
out
cli
dec
sub
shl
jg
int
ret
add
subl
add
fsubl
xor
scas
adc
cmc
arpl
std
pop
fdivs
outsb
and
gs
push
pop
xor
mov
fwait
lret
xchg
pop
test
xor
stos
inc
mov
mov
lods
insb
xchg
subb
nop
subb
jle
hlt
test
mov
pop
aad
mov
ret
sub
cmp
js
sub
scas
movsl
ljmp
out
mov
cmp
cmp
outsb
pop
lret
fildll
les
insb
adc
cmpsb
jno
sub
add
adc
or
lcall
mov
push
stos
jg
push
sub
outsb
test
pop
imul
pop
fldt
cmp
cli
inc
jl
leave
mov
enter
jl
mov
push
cmpsb
adc
push
imul
rcrl
stos
add
aas
test
sub
pop
mov
in
test
push
shlb
inc
jecxz
orl
xchg
add
sbb
push
dec
sbb
push
adc
aas
dec
lret
sti
addr16
test
mov
sub
fsubrl
mov
jne
out
or
into
cmp
sbb
es
dec
dec
sti
stos
dec
dec
adc
xor
out
jne
stos
daa
sbbl
jns
mov
mov
sbb
inc
inc
sub
sbb
mov
lret
mov
bound
jecxz
negb
mov
push
adc
sub
cli
fidivrs
icebp
insl
sbb
fisubl
ljmp
cltd
push
mov
pop
addr16
lret
pop
subb
gs
mov
lods
sbb
xchg
call
xor
lret
mov
xchg
scas
jnp
sbbl
push
inc
mov
clc
mov
pop
adc
popf
cmc
or
test
xor
or
leave
or
xor
and
and
xor
test
cmc
cmp
fisttpll
loope
and
pop
jno
sbb
dec
inc
leave
adc
push
in
mov
push
inc
xchg
xor
add
jbe
mov
add
push
repnz
mov
ficoms
stos
push
aad
sub
pop
cmpsl
aad
mov
sbb
jno
sub
mov
adc
lds
sbb
cmp
stos
ljmp
pushw
sbb
lahf
pop
dec
movsl
pop
in
xor
jb
or
fucomip
decl
mov
mov
shrd
cmp
je
or
repnz
mov
jns
xchg
adc
add
in
mov
das
jb
adc
mov
lret
fmulp
or
push
dec
fnsave
jno
sub
mov
sbb
outsl
push
cs
xor
popf
pushf
call
or
in
adc
sub
lahf
inc
fdivl
inc
aas
push
or
adc
lock
les
and
mov
fmul
mov
rorl
cwtl
pop
movl
shll
mov
xchg
int
push
push
call
fwait
cmp
and
inc
or
int
jecxz
lea
fcomip
push
or
int
jae
inc
into
inc
divb
stos
xchg
daa
roll
mov
enter
andl
mov
out
imul
insl
pop
sti
adc
decb
loop
int3
insb
subl
inc
mov
shrb
es
mov
push
or
dec
xchg
nop
sub
dec
sbbb
lods
icebp
aam
push
inc
push
stos
leave
lods
jnp
data16
int3
imul
rcrb
xor
sti
and
vcvtsd2ss
shl
push
mov
pop
mov
mov
pop
mov
jbe
call
pop
in
mov
dec
pop
xor
and
stos
pop
pop
aaa
lods
jl
inc
push
xchg
stos
stos
mov
dec
insl
xor
mov
daa
test
int3
xchg
push
sahf
push
fwait
test
clc
dec
in
push
aas
push
test
jb
cmpsb
mov
jg
adcb
cs
jge
mov
and
cmp
inc
lods
push
je
push
mov
out
push
jle
push
in
and
sub
fisttpl
imul
int
cs
mov
cs
adc
in
xchg
je
push
mov
push
icebp
lods
cmc
add
adc
int
fnstsw
xchg
ja
insb
xchg
cwtl
pop
cli
stos
int3
xorb
sarb
xchg
fadds
sub
sbb
rclb
mov
cli
outsl
xorb
sub
lahf
imull
xchg
jae
test
and
outsl
xchg
rolb
fisubs
cmp
divb
sub
ja
push
jo
out
outsl
dec
pop
ret
shlb
dec
pop
or
sbb
or
aas
lret
xchg
gs
std
or
adc
and
cmpb
cltd
ret
mov
imul
inc
jns
inc
push
repnz
sbb
xor
mov
cs
push
or
push
push
sub
push
sbb
icebp
nop
inc
xlat
test
push
clc
jae
cmp
dec
pop
cmc
loope
loopne
mov
jne
dec
xor
sub
push
rorb
rclb
mov
xchg
xor
fdivrs
push
pushf
sub
dec
bswap
push
iret
fidivl
out
das
jae
mov
sbb
inc
push
es
cmc
xor
loope
xchg
testb
pop
dec
repnz
cltd
in
xor
add
into
push
inc
roll
inc
push
jno
jo
fwait
sbb
mov
shll
out
cmp
add
and
jne
push
push
aaa
cmpl
jns
pop
lea
push
sub
mov
xchg
sub
adc
loop
cmp
divb
out
fs
insl
push
testb
negl
test
idivb
cwtl
ja
hlt
mov
loopne
and
lcall
scas
inc
hlt
dec
pushf
sarb
scas
ljmp
push
inc
flds
sbb
xchg
filds
push
cmp
mov
cli
push
clc
jle
jae
mov
jno
out
sub
in
push
fstpl
mov
or
and
jno
in
ret
push
add
adc
push
xchg
loope
ja
pop
sbb
movq
or
data16
ja
jmp
or
add
or
push
mov
push
les
push
inc
jb
sub
stos
sbb
cmp
xorl
scas
xor
mov
push
mov
mov
mov
mov
jns
sub
push
jmp
mov
mov
inc
lods
xchg
lcall
push
sbb
pop
push
push
js
xchg
rclb
call
dec
xor
xor
cmp
je
push
sti
cmpl
cmc
mov
add
lock
mov
subl
rcr
mov
xchg
cmp
lea
mov
ffreep
push
xchg
mov
push
pop
mov
das
add
cld
loope
je
mov
loop
and
lret
subl
jmp
lcall
in
scas
inc
sub
pop
push
popa
xor
xchg
std
inc
scas
and
shrb
cwtl
mov
insb
stos
xchg
adc
xor
xor
ret
jecxz
cmc
out
jmp
adc
xor
leave
cmp
mov
icebp
xor
mov
mov
test
mov
cmp
testl
jle
or
lahf
pushw
jne
fsubl
push
sti
and
add
pop
outsl
push
jge
pop
movb
js
int3
mov
and
inc
frstor
inc
pusha
jae
andl
jns
test
add
cltd
cmp
xor
test
xor
fadd
pop
xchg
fdivl
loopne
aas
ret
int3
dec
sar
mov
je
out
xor
mov
inc
fstl
jl,pt
imul
clc
icebp
jecxz,pn
add
jl
sub
mov
fst
mov
sbb
cmp
sbb
in
xor
dec
pop
add
outsl
pop
orl
sub
aaa
aad
pop
loopne
cli
ljmp
or
sarl
mov
inc
pop
call
notl
inc
pushf
add
int
scas
stc
add
icebp
lret
out
xchg
stos
jecxz
enter
push
xchg
fmull
jae
inc
mov
mov
test
jns
mov
fsubl
ret
sbb
or
push
sti
push
inc
inc
sahf
push
mov
fs
in
rorb
pop
adc
sbb
xchg
or
dec
or
sar
imul
add
cli
bound
inc
pop
test
or
andl
daa
stos
sbb
fsubrl
outsl
int3
int
inc
dec
jo
jp
push
outsb
enter
push
movsb
pusha
and
mov
into
push
pop
cld
xorb
sbb
hlt
mov
ret
call
mov
arpl
cmp
fisubrl
and
jns
cltd
push
icebp
iret
or
push
add
mov
or
jno
push
and
mov
mov
aaa
jnp
jnp
mov
imul
xchg
stos
dec
xchg
jns
mov
jle
inc
enter
outsl
fs
mov
adc
adc
mov
cwtl
ss
sbb
hlt
pusha
xor
loop
inc
cmpsl
dec
negl
leave
xchg
adc
dec
dec
jo
sbb
inc
ficomps
adc
bound
mov
jl
pop
xlat
iret
pop
mov
sbb
fwait
mov
jne
pop
cld
bound
icebp
push
test
mov
mov
movhps
nop
fs
mov
mov
pop
push
in
movsb
mov
mov
mov
insb
pusha
aam
fldenv
inc
mov
rcrb
cltd
xchg
fadds
push
outsb
xor
in
fstpl
mov
xor
or
push
sbb
xor
cs
adc
jmp
sbb
sbb
leave
add
addb
inc
xchg
or
in
mov
lahf
hlt
cmpsl
inc
and
push
sub
pop
and
jne
outsl
or
xchg
xchg
das
mov
jne
fdivrp
xor
psrlq
mov
adcl
loop
inc
xor
mov
pop
push
pcmpeqb
xchg
add
movsbl
ss
lea
mov
cmp
leave
xchg
fs
lret
mov
shll
int3
ljmp
fbstp
pop
xor
jno
pop
out
shrb
test
nop
mov
addr16
push
rcrb
in
sbb
test
nop
test
lods
sub
mov
inc
out
aad
cmp
xchg
aas
addl
mov
push
or
xor
xor
adc
mov
lea
cmpsb
jl
std
jnp
rorl
aad
notb
mov
xor
sub
pop
or
rcrb
ftst
insb
pop
cmp
add
mov
mov
pop
dec
inc
movsl
lds
fs
xor
pop
lret
dec
repz
pop
inc
aas
dec
mov
dec
insl
jp
shrb
or
aam
pop
add
inc
enter
mov
les
adc
pusha
cli
orl
mov
fsubs
xchg
cmp
xor
mov
hlt
mov
jge
inc
aam
enter
sbb
cmp
xchg
jle
push
push
sbb
mov
pop
aam
popf
movsl
or
popa
stos
movsb
jl
dec
jno
orl
in
clc
cmp
movsb
or
pop
xchg
icebp
pusha
jp
stos
out
dec
inc
scas
jne
stc
int3
jle
mov
push
adc
cld
jne
movsl
dec
lret
ds
push
jmp
cmc
std
bound
cmpsb
outsb
adc
push
adc
mov
bound
jge
adc
and
sbb
popf
adc
push
out
mov
enter
xor
adc
dec
or
outsl
mov
mov
push
jg
jecxz
push
loopne
inc
adc
in
popa
rclb
xchg
popf
mov
cmp
insb
sub
rclb
arpl
cmp
sbb
jmp
sub
stos
adc
hlt
in
cli
fisttpll
loope
imul
pop
movsb
in
out
sbb
cld
leave
mov
sahf
jnp
lods
ret
test
into
jmp
jbe
pop
sub
add
cmp
jl
call
dec
pop
mov
jecxz
repz
rcl
and
ret
popf
inc
ds
add
sbb
mov
sub
movsl
jae
xchg
sub
lods
pop
cli
imul
sbb
sub
out
push
icebp
mov
push
xchg
inc
test
push
jge
sub
jne
pop
cmp
xchg
jno
cmp
les
pop
xor
cmp
mov
outsb
pop
sarb
cmp
dec
insb
jmp
shr
mov
sbb
jb
sub
or
pop
movsl
mov
add
jg
jle
roll
loopne
ljmp
scas
popf
sbb
dec
out
push
jl,pn
xchg
sahf
jbe
shr
pop
js
arpl
and
mov
jp
aas
push
push
jl
inc
rolb
test
mov
test
sbb
das
sbb
fnstsw
sbb
iret
ljmp
add
test
xor
out
sbb
cmp
push
imul
iret
xchg
bound
imul
jo
imul
inc
nop
imul
incl
push
test
sub
and
shll
mov
mov
and
jl
adc
pop
movsb
std
mov
icebp
sub
cmp
push
scas
adc
insb
sub
push
rcl
mov
push
jg
xorb
jns
jns
loope
ss
inc
popa
ret
les
add
lods
mov
outsb
stos
int3
hlt
mov
push
push
push
hlt
xchg
adcb
jbe
xlat
sbb
xor
add
mov
sbbl
add
inc
mov
inc
scas
xor
adc
add
jl
fisubl
sahf
push
push
mov
push
jge
out
dec
adc
pop
mov
push
int
in
setae
mull
stos
inc
sbb
pop
pushf
mov
sbb
movsb
in
jb
add
enter
xchg
xor
mov
imul
outsb
ljmp
or
inc
jmp
inc
movsb
sub
jmp
fiaddl
pop
outsw
cltd
into
add
mov
popa
mov
xor
test
roll
stc
pop
xchg
popf
mov
fsubrs
and
shlb
pop
xchg
cmpsl
jns
cmp
or
pop
scas
adc
int
push
and
inc
pop
jecxz
pop
xchg
std
dec
rol
jb
add
dec
pop
into
sbb
cmp
cmpl
in
xchg
mov
and
outsl
dec
adc
inc
xor
ficoms
jne,pt
mov
pop
push
mov
inc
xor
imul
std
pusha
mov
pop
mov
jo
movsl
sub
or
stos
pop
xor
les
in
push
mov
and
xor
adc
xor
adc
pop
mov
adc
int3
bound
jl
psubusb
pop
dec
aam
scas
mov
mov
dec
int
push
jl
scas
adc
das
ret
adc
sub
lds
add
mov
cmp
xchg
imul
mov
sbb
or
cmpsl
in
jbe
push
jnp
test
pop
leave
pop
cmp
pop
fisubs
loop
into
adc
scas
jle
cmpl
test
xchg
pop
insl
jns
mov
lahf
jo
loopne
jns
mov
lock
bound
inc
mov
push
arpl
mov
bound
pop
or
repnz
mov
cltd
pop
mov
xor
mov
outsb
inc
cmpsb
dec
fimuls
xor
mov
xor
add
insb
jns
mov
push
mov
jmp
xor
pop
inc
les
pop
loopne
jge
mov
xchg
out
jb
pop
das
mov
sahf
push
or
mov
inc
pop
jns
cmpsb
nop
shlb
xchg
pop
cli
cld
mov
cmp
inc
xor
aad
dec
mov
push
ss
or
xchg
mov
cmp
pusha
setnp
outsl
imul
xor
jg
sbb
mov
mov
jle
jg
mov
jbe
xchg
pop
pop
es
inc
add
push
idivl
sub
out
lea
ss
adc
fs
xchg
lods
xchg
jp
inc
push
pusha
xchg
mov
mov
mov
mov
or
andl
mov
fsub
add
mov
repz
rcll
adc
mov
sbb
clc
mov
nop
in
xor
lsl
pop
fs
loopne
sahf
outsl
cmp
fcoms
ds
lods
test
dec
stos
addr16
mov
push
inc
jle
mov
mov
mov
rolb
jg
jmp
add
call
rclb
sub
test
fs
adc
mov
sahf
ret
inc
pop
stos
dec
orl
stc
jb
xchg
cmpsb
sarl
iret
and
mov
mov
xchg
inc
addr16
ljmp
dec
ljmp
mov
xor
and
and
lods
aaa
shrb
mov
sub
aad
push
imul
int3
mov
hlt
pushl
lock
outsl
cli
fs
pusha
outsb
test
push
call
mov
pushf
jo
test
pop
pop
leave
fildl
jnp
ret
mov
shrl
xor
outsl
ds
xor
lahf
stc
pusha
aad
jecxz
adcb
rorl
xor
repz
xchg
xor
dec
xchg
movsl
sub
sahf
fwait
jp
leave
cs
push
mov
sahf
imul
div
xlat
mov
xchg
and
pop
pop
dec
lods
push
out
lret
ret
inc
mov
dec
stc
dec
mov
push
dec
push
enter
inc
xchg
roll
flds
addb
cli
sub
cmc
mov
lea
dec
sbb
xchg
out
push
mov
cwtl
in
cli
push
loopne
dec
mov
sbb
xchg
data16
sbb
push
std
test
imul
mov
enter
sub
lock
xor
in
outsl
ret
loopne
and
sbb
gs
mov
jmp
mov
les
adc
bound
xchg
mov
jecxz
push
mov
popf
inc
out
jbe
mov
scas
or
push
mov
lret
push
sbb
fs
je
fcmovne
cwtl
cwtl
push
or
cmpsl
pop
in
push
push
pop
out
pop
add
mov
lock
repnz
dec
xor
fwait
xlat
mov
sub
mov
lods
mov
push
xor
xor
mov
test
sub
push
jbe
mov
mov
mov
inc
in
daa
aaa
stos
push
scas
into
loop
test
mov
dec
aaa
jno
pop
xorb
aad
testb
jb
add
mov
push
or
fmull
outsb
inc
mov
mov
jne
dec
fisttpll
sti
cltd
xor
dec
sbb
sub
lea
fdiv
mov
movsl
in
lds
dec
xchg
popa
loop,pn
mov
insl
pop
and
add
dec
test
inc
loope
shrl
pop
sbb
pop
jp
sbb
stc
fs
stc
sub
nop
ret
xchg
gs
sub
push
sahf
dec
sub
dec
push
pop
out
es
pop
lret
sbb
pop
adc
shrb
or
sub
inc
mov
pushf
pop
add
rorb
and
dec
dec
movsb
lds
sbb
dec
inc
ficompl
nop
jmp
jb
jo
mov
pop
sub
imul
data16
hlt
lahf
jo
clc
out
push
mov
lret
inc
adc
test
pop
xchg
sbb
mov
cmp
aaa
setge
pop
sub
orl
add
inc
lahf
jns
pop
mov
aam
inc
loop
sbb
aam
icebp
push
daa
rcr
cmc
jle
adc
mov
test
pusha
mov
xchg
xchg
cmp
stos
sbb
insb
mov
xchg
cld
imul
outsb
sub
subl
mov
inc
pop
push
out
test
jl
sub
dec
outsb
rcrb
push
sub
mov
mov
repz
aad
cwtl
popa
mov
pop
jge
imul
das
pop
das
mov
xchg
bound
fwait
cwtl
dec
insb
rorb
sbb
sbb
and
test
inc
add
or
out
inc
hlt
fnstenv
lds
and
xor
mov
jmp
imul
adc
aam
inc
rcl
sti
pop
adc
push
pop
nop
pusha
aam
push
or
xchg
push
test
or
sub
mov
fistpl
push
jmp
and
int
insl
and
cld
jg
loope
sub
push
pop
push
xor
shlb
or
or
mov
mov
mov
int3
mov
mov
and
jl
and
or
test
mov
push
add
psraw
sub
xchg
or
adc
rorl
pop
mull
push
subb
push
mov
test
call
clc
cmp
stc
and
dec
push
outsb
cmp
inc
xor
pop
cli
pop
mov
add
stos
mov
fmull
push
into
loope
pop
addb
mov
cld
xchg
aas
xor
hlt
lods
out
inc
sar
jbe
push
jae
adc
repz
test
inc
pop
lcall
pushf
pop
rclb
sbb
pop
push
fdivs
pop
dec
cwtl
jp
sbb
xchg
andl
cltd
out
movsl
fwait
lahf
das
push
xchg
pop
jg
jne
dec
dec
inc
fcoml
mov
xchg
loope
inc
inc
stc
xor
jno
xlat
push
scas
ja
fbld
lods
fstps
stc
dec
xchg
fs
push
hlt
and
adc
aaa
sub
gs
aas
js
pop
xchg
pop
rep
jge
inc
shrb
cmp
or
cli
xor
lret
sub
jns
int
mov
xor
or
or
xchg
sar
fsubp
add
stos
mov
test
cmpsl
repz
dec
daa
xor
pop
ret
sarl
pop
push
ds
arpl
and
inc
inc
outsb
jecxz
std
test
sub
pusha
lods
add
les
xchg
and
lcall
mov
insl
loope
jbe
shlb
xor
fwait
lds
inc
sbb
ret
mov
popa
ror
push
call
pop
jge
aam
jl
fsubr
pop
fwait
cmpsl
push
test
outsb
outsb
dec
pop
jl
jb
mov
and
pop
sub
xchg
mov
mov
bound
mov
jmp
mov
aaa
pushf
sbb
jle
mov
lds
decb
jne
das
das
mov
inc
add
xchg
mov
cltd
mov
jb
push
inc
movl
mov
dec
cld
fwait
and
in
push
div
sbb
add
push
inc
enter
fwait
daa
cld
sti
cmp
ljmp
inc
inc
loopne
call
aas
fs
lahf
sbb
sub
hlt
into
movsl
out
sub
popa
std
aad
sub
lods
loope
mov
cld
out
inc
sub
dec
lods
insl
aad
xlat
fdivrs
mov
decb
cmp
jae
xchg
dec
int
fs
sbb
xchg
out
jo
jns
js
adc
sbb
xor
jmp
adc
push
sub
mov
test
cmpsl
repz
rcll
sub
clc
idivl
pop
and
inc
and
in
das
pop
das
and
jg
cmpsb
popa
adc
rclb
imul
cmp
stos
mov
lods
andb
dec
aas
push
shll
les
iret
dec
add
xchg
push
mov
mov
lock
aas
stc
stos
mov
jmp
lods
rolb
mov
sbb
imul
xchg
sub
push
xchg
and
inc
fisubs
jns
mov
scas
mov
or
ljmp
out
adc
lcall
pop
dec
rcrb
xchg
out
xchg
fwait
xchg
rcrb
dec
cwtl
push
jbe
cmp
xchg
lods
repnz
sbb
std
jle
fistpll
lcall
in
inc
lret
dec
xchg
and
dec
cld
outsl
cld
fwait
cmp
xor
mov
cld
popa
cmpl
repz
popf
aas
psubsb
push
pushf
imul
pop
cli
test
xchg
mov
jnp
pop
fstpt
or
mov
cld
inc
in
sbb
xchg
pop
sbb
inc
xchg
lahf
mov
xchg
outsb
xor
test
fs
pop
fildll
cmpl
loopne
or
lcall
jmp
adc
xor
xor
mov
pop
cmpsl
mov
lret
ljmp
js
inc
jbe
mov
test
test
xor
inc
push
xchg
pop
push
sti
loopne
and
ljmp
mov
xor
push
mov
fisttps
or
adc
adc
fstpl
mov
add
out
subl
cmpsl
lret
xor
fisttpl
popl
xchg
hlt
pop
add
xor
rcrl
into
xchg
adc
jnp
fistps
adc
in
inc
sub
add
and
out
sarl
push
cmc
lods
leave
jge
mov
rcrb
dec
pusha
shlb
mov
jle
sbbl
ficompl
shlb
scas
cli
mov
cmp
dec
fwait
fwait
cld
or
sbb
icebp
jmp
xlat
movsl
lahf
repnz
cli
or
dec
inc
pop
ss
orb
mov
fincstp
jg
cld
rcrb
jo
lahf
stos
inc
stc
mov
ss
lret
xor
jns
in
sub
lock
mov
int3
inc
aad
test
or
cmp
mov
push
fisubrl
cmovs
add
cmp
dec
out
mov
or
mov
cld
stos
js
test
mov
mov
xlat
mov
popf
xor
inc
dec
dec
pop
push
shlb
sub
xlat
loop
fisubrs
jmp
push
xchg
xor
xor
sbb
sbb
mul
pushf
fs
test
xchg
and
mull
cmp
xor
xchg
aaa
lock
ret
aad
adc
pop
insb
push
lods
push
bound
xlat
mov
or
negl
sahf
jmp
pop
bound
xchg
daa
cmp
or
jns
imul
inc
pop
and
sahf
jmp
ret
or
mov
push
or
fidivrs
outsl
mov
iret
sub
pushf
pushf
cmp
xor
icebp
jns
out
scas
mov
adcl
xor
insb
lret
imul
jns
inc
addr16
inc
pop
outsl
ja
test
out
in
js
mov
sub
scas
push
lods
out
and
js
leave
cs
movsl
sbb
jno
adc
pop
inc
stos
pop
dec
dec
mov
aad
int
xchg
lock
std
inc
mov
mov
sbb
insl
push
aaa
fmull
enter
cmp
mov
dec
gs
imul
sarl
outsl
adc
xor
or
xchg
sarb
in
mov
and
in
add
popf
pop
mov
mul
mov
jl
sbb
mov
pop
and
rcr
int
mov
push
pop
rorl
adc
mov
adc
rolb
xchg
mov
push
mov
push
push
jno
outsb
sahf
fists
in
andb
jl
sbb
add
mov
xorl
aas
in
imul
in
xchg
cmpsb
and
sbb
int
loope
sub
sbb
jnp
jg
cmp
pop
mov
add
sub
dec
sbb
sbb
sub
lret
mov
add
fmulp
cmpsl
test
fldcw
push
mov
outsb
leave
add
mov
push
and
dec
dec
sub
dec
hlt
jne
xchg
add
fstp
and
in
pop
jge
loope
mov
pop
movsb
ljmp
outsl
cmpsl
pop
lcall
sub
sbb
add
xor
jae
xor
into
scas
das
sub
test
jp
in
imul
sub
in
in
cmpsl
mov
and
and
cli
xchg
xor
pop
adc
lock
mov
aaa
mov
cmp
test
xchg
push
fldl
sahf
daa
push
lea
lret
gs
ret
lds
scas
push
and
xor
bound
gs
mov
jbe
cmp
in
in
mov
xlat
les
das
iret
sarl
icebp
mov
loopne
imul
fcoms
cmpb
adc
cmp
rolb
lret
shrb
lods
or
xor
adc
test
cmp
in
mov
xor
aaa
pop
in
inc
int3
xor
fadd
aas
in
mov
rol
imul
lock
xor
push
lods
push
mov
pop
fldenv
fcmovnb
and
out
or
loopne
jbe
sarb
mov
mov
fnstcw
lret
mov
leave
pop
loope
and
jae
cmpsb
cmpsl
cwtl
jbe
mov
ds
in
cld
inc
testb
ret
fcoml
lret
adc
adc
inc
add
add
divl
add
adc
mov
aad
stos
cmp
scas
leave
clc
not
data16
add
mov
xor
dec
ljmp
rorb
inc
test
leave
es
mov
jbe
loop
mov
xchg
push
cmp
cmp
nop
pop
fs
xor
leave
push
sbb
lods
add
jle
popl
xor
orl
sbb
and
adc
cmp
lods
stc
mov
sbb
mov
dec
xchg
pop
arpl
fisubrs
aaa
pop
pusha
repz
push
inc
std
clc
pop
int3
mov
sar
dec
and
push
dec
mov
test
shll
lods
scas
xchg
es
inc
popa
das
leave
xor
or
pop
hlt
stc
adc
int
push
insl
pop
sub
add
shll
sub
mov
or
ss
mov
inc
sbb
fdivrp
daa
imul
adc
cltd
loopne
bound
xchg
jae
ficoms
pop
into
and
mov
scas
cmpsl
push
and
xorb
movsb
and
jl
stos
xchg
mov
inc
scas
jle
dec
testb
lcall
or
andl
ja
pop
add
fists
pop
adc
repz
add
add
jmp
fwait
ss
lock
inc
gs
dec
ds
xchg
test
add
push
arpl
fdivrs
fs
negl
test
insl
icebp
pop
sub
out
fs
lods
enter
cwtl
adcl
imul
sub
stc
and
frstor
jecxz
aam
mov
pusha
adc
insl
lock
mov
cmp
pop
mov
and
mov
fadds
addr16
in
cmp
xchg
xorb
aam
fwait
mov
xchg
xorl
fcoms
pop
xor
xchg
addl
xor
negb
clc
add
cmp
imul
mov
fs
inc
scas
inc
push
inc
mov
push
or
insl
mov
cmpsb
xchg
popl
scas
lahf
bound
add
hlt
adc
addr16
jns
inc
mov
cmp
push
adc
aam
and
adcl
sbbl
cmp
mov
and
add
mov
inc
mov
aas
int3
mov
add
pop
fs
add
prefetchw
sarl
movsl
mov
jg
int3
adc
lds
mov
add
cs
out
mov
xlat
aad
popa
mov
inc
cmc
jecxz
dec
xor
and
movsb
pop
lahf
inc
mov
mov
fimuls
aam
data16
inc
cld
or
dec
fidivrs
sub
mov
cwtl
movsl
lea
sub
mov
and
scas
loop
stc
in
scas
and
xor
push
stc
ror
cmc
arpl
dec
sub
mov
test
xor
fimuls
in
fnstsw
mov
fcompl
mov
pop
fstps
xor
arpl
jae
sub
sbb
or
inc
push
cmc
or
mov
cmp
adc
test
int
and
sahf
adc
lds
addb
int
repz
aad
xor
ficompl
inc
jmp
cs
inc
mov
or
jecxz
js
scas
jp
out
popf
std
pop
lcall
jne
mov
div
movsl
sub
push
loop
jl
push
dec
mov
ljmp
data16
xchg
jg
stos
icebp
adc
add
data16
add
cltd
arpl
push
sarl
add
insl
add
mov
mov
jnp
movsb
sub
jne
nop
pushf
enter
cmc
push
jo
pushf
sub
loope
xchg
lret
das
inc
mov
addl
imul
lret
data16
or
movsb
iret
lret
aas
pop
jle
or
sbb
or
and
rcrb
xlat
or
mov
lods
mov
or
loop
adc
mov
mov
test
mov
stc
pop
bound
or
sbbb
sub
js
dec
add
fcompl
adc
push
mov
scas
sbb
push
mov
cs
dec
adc
mov
ret
or
repnz
cmp
clc
andb
jle
jmp
daa
scas
dec
pop
fs
call
fwait
push
mov
xchg
ftst
push
inc
cld
cmp
jmp
xchg
dec
xor
xchg
mov
mov
xlat
fdivr
imul
test
cmp
xchg
jp
add
push
add
repz
rorb
mov
sbb
jno
stos
ficoms
std
sbb
pop
rcr
popl
dec
pop
pusha
ror
pop
dec
mov
mov
rolb
in
pop
push
push
mov
jp
xor
dec
mov
sbb
mov
fcmovb
fcom
cli
mov
jnp
cmpsl
rcrb
sbb
sar
push
repnz
and
lods
cmp
push
or
sub
int3
inc
pop
mov
inc
fs
sub
jne
bound
mov
dec
je
dec
popf
sbb
dec
std
push
jb
lods
sub
out
mov
das
cmp
sbb
inc
loop
xlat
push
xor
inc
in
test
jge
fnstsw
ds
stos
dec
stos
jne
mov
jmp
in
dec
gs
std
push
push
mov
in
sbb
pop
out
or
mov
aam
cmp
mov
push
cmc
pop
daa
pop
jl
and
sahf
adcl
loop
sbb
ficomps
out
fildll
add
test
push
pop
bound
adcl
sbb
dec
jg
add
add
loope
jns
addr16
xor
dec
aas
mov
cmp
pop
mov
scas
dec
or
sarb
out
les
jne
dec
popa
add
and
sub
out
cmp
sub
jno
outsb
fnstcw
cmpsl
pop
addr16
jnp
in
pop
test
sbb
push
sub
add
cmpsl
out
add
adc
push
ret
test
mov
orb
pop
das
shrb
in
jno
or
jnp
sarb
pop
je
movsl
data16
sub
add
lea
dec
sbb
lea
pusha
push
push
mov
out
scas
cmp
ret
jp
mov
add
vpcmpgtd
bound
nopl
add
daa
jne
mov
jo
dec
cmpl
jle
divl
int
mov
xor
lret
loope
jle
cmpsl
add
pop
imul
xor
repnz
aas
test
lods
insl
in
cmc
mov
popf
popl
mov
mov
cmpsb
aam
mov
inc
mulb
aad
or
jmp
xchg
shl
sub
adc
jnp
sbb
das
test
je
bswap
mov
cmpsb
push
sar
or
sbb
int3
loop
shll
scas
add
test
xchg
inc
in
dec
push
lods
imul
jge
test
dec
dec
adc
scas
enter
ja
int3
dec
xchg
inc
insl
roll
inc
in
inc
mov
sub
out
pop
inc
faddl
hlt
out
mov
add
push
pop
pop
in
push
test
jp
or
int3
fistpl
mov
jecxz
and
out
rcr
aas
adc
add
add
and
test
jno
test
adc
mov
repz
mov
fisttps
push
jne
inc
sbb
fwait
ret
repnz
jp
mov
filds
jl
nop
scas
loop
call
pop
test
scas
lea
jae
int3
stos
das
insl
cmp
push
and
ja
and
mov
stos
lret
mov
pop
push
insl
adc
loopne
aaa
loop
pushf
cli
jge
movsb
outsl
gs
gs
and
mov
popf
add
push
mov
mov
int
cltd
ds
repz
push
push
lods
jg
movsb
push
js
pop
cmc
sbb
xchg
dec
mov
lock
iret
orb
ss
sti
test
je
add
jbe
scas
js
imul
rcr
hlt
std
jle
iret
je
sub
cvtps2pd
loopne
add
in
or
idivb
and
sub
mov
mov
pop
xchg
fsubrs
mov
inc
aaa
movl
insl
pop
test
les
lret
adc
mov
pop
push
fstpt
iret
push
pop
fmull
push
fs
in
mov
ficoml
loopne
sbb
andl
imul
in
pop
jle
fwait
ret
dec
outsl
stos
aam
lds
push
xchg
pop
je
xchg
push
pop
cmp
aas
jno
inc
jne
cli
mov
loope
das
xor
fs
test
pop
jbe
cmpsb
pop
pop
hlt
rcll
mov
pop
ret
hlt
push
inc
push
inc
inc
clc
arpl
shrb
cs
and
ja
scas
and
sbb
sbb
icebp
out
push
fnstsw
int
jns
aam
lahf
mov
ja
push
movsb
push
sbb
loope
lods
and
outsl
push
push
flds
repnz
popa
sarl
pop
mov
mov
pop
iret
scas
out
nop
repz
jmp
out
push
imulb
add
mov
mov
push
mov
jbe
push
stos
cmp
add
pop
jne
jnp
ss
and
addl
ret
and
pop
mov
insb
repnz
mov
adc
test
daa
jnp
das
push
xchg
leave
rol
adc
fdivrl
cmp
add
test
push
inc
int
stos
cltd
insl
pop
jge
popa
in
jg
mov
lods
sub
or
or
ds
adc
mov
mov
lods
sti
jnp
in
aad
jno
inc
mov
push
dec
push
mov
mov
mov
fnstenv
gs
cli
pop
lret
dec
addr16
fs
enter
pop
and
ret
iret
outsl
lds
mov
inc
jle
inc
loopne
stos
iret
fsubrl
xor
mov
mov
ss
cli
jo
subb
scas
ds
dec
lcall
or
stc
popa
addr16
dec
and
jg
das
xchg
pop
mov
push
test
sub
mov
dec
roll
mov
pop
push
enter
mov
mov
push
aas
aad
lcall
push
ret
dec
add
dec
inc
stos
sub
dec
pop
dec
imul
pop
and
jnp
inc
pop
hlt
aam
pop
pop
lret
cmp
negl
ret
out
mov
fcmovbe
imul
fldenv
mov
ljmp
add
mov
iret
jmp
mov
pusha
call
loope
dec
bnd
mov
or
lahf
pop
addr16
cmp
cmp
stos
leave
shll
or
add
inc
out
aaa
add
daa
push
lock
lea
pop
adc
xchg
xchg
sub
cltd
arpl
dec
fcompl
mov
fsts
add
int
sti
rol
sbb
clc
jg
mov
lcall
mov
into
dec
mov
ja
cmp
pop
mov
mov
sub
sub
sub
mov
dec
mov
and
ficomps
mov
jnp
pop
paddsb
sub
sub
insl
mov
cli
push
scas
mov
or
pop
shl
scas
pop
cmpsl
pop
into
sbb
sub
leave
mov
mov
mov
ds
outsl
inc
cmpl
xchg
xchg
sbb
shll
leave
and
shl
sub
push
pop
sbb
loope
loope
mov
popf
xchg
and
add
dec
and
gs
pop
dec
pop
leave
sub
mov
test
dec
push
cwtl
ds
scas
shrl
loopne
cli
cmp
scas
pop
add
cmp
mov
inc
movsb
outsb
adc
out
mov
sti
dec
cmpsl
fdivrl
mov
ret
cmp
push
ljmp
add
out
stos
shll
lret
outsb
adc
xchg
cld
out
das
into
mov
lea
and
mov
pop
or
nop
fwait
add
jge
sub
aad
push
dec
sbb
xchg
lea
xchg
xchg
xor
cmpsb
mov
movsb
aad
popa
jno
fidivs
les
into
mov
scas
mov
jnp
js
je
xor
orl
jp
xorb
outsl
lds
ja
test
hlt
push
inc
mov
sbb
push
je
sub
mov
cld
push
sbb
cwtl
push
stos
fisubrl
in
lods
jge
sbb
out
sbb
shlb
xchg
jb
xor
or
xchg
jbe
dec
adc
je
pushf
dec
pop
add
loope
orb
hlt
sbb
and
scas
cli
nop
jnp
pushf
shll
loope
push
and
sbb
orl
dec
rorl
loopne
ficoml
add
roll
loop
lret
mov
inc
mov
jno
xor
jae
mov
or
mov
stc
lea
pop
push
sub
cmp
push
ds
imul
imul
or
mov
icebp
fimuls
jmp
lret
nop
cmp
ret
dec
ficomps
pop
ss
sbb
dec
fcmovu
xchg
adc
cmpsb
repnz
pusha
jg
sub
jl
pop
add
inc
sub
nop
jo
sbb
mov
ljmp
sbb
movsb
push
xchg
dec
mov
fwait
xchg
leave
ja
cltd
dec
sbb
or
mov
cmp
mov
mov
into
cld
push
dec
lret
add
jns
xor
subl
aaa
lock
aam
xchg
inc
arpl
mov
sub
mov
push
mov
daa
add
mov
mov
and
mov
inc
lock
jo
shlb
mov
mov
fwait
or
push
xor
and
jbe
add
xor
push
xor
test
sbb
lahf
mov
shrl
add
dec
es
push
orl
mov
std
fwait
sub
popa
add
lcall
mov
fists
sub
push
push
call
pop
outsb
push
mov
mov
loope
pop
in
cmp
popf
hlt
xor
xchg
lea
jl
daa
mov
jge
sbb
clc
xor
ja
pop
adc
push
xor
adc
add
frstor
mov
dec
imul
adc
dec
cmp
jno
sahf
cli
mov
jle
mov
jo
out
or
cmp
push
lahf
mov
aas
cmp
stos
cmc
popf
mov
push
fwait
leave
cmpsb
imul
xchg
cwtl
in
loop
pop
inc
mov
repz
pop
dec
jns
xchg
adc
out
inc
loopne
mov
pushw
mov
mov
orb
add
sbb
inc
push
addr16
repnz
scas
mov
mov
cltd
int
nop
jo
sbb
test
mov
test
in
mov
sbb
xchg
jg
dec
adc
lret
mov
adc
rol
xor
icebp
adc
sbb
mov
jno
loopne
push
scas
outsb
mov
out
stc
sub
push
mov
pop
dec
sbb
inc
movsl
call
cmp
dec
jmp
inc
pop
subb
into
ljmp
mov
call
push
fcoml
bound
or
stc
pop
push
sahf
inc
lsl
sbb
mov
loop
cmp
and
mov
jl
gs
leave
daa
negb
pushf
es
inc
arpl
mov
mov
scas
in
inc
scas
fidivs
lea
andb
cmp
call
in
imul
sub
bound
fcoml
jge
pop
dec
lock
in
subl
call
cltd
out
mov
push
push
jne
enter
sahf
xor
adc
out
cmp
xchg
mov
ror
out
mov
clc
add
daa
mov
fdivl
cmp
dec
inc
xlat
cmp
or
loopne
ja
sub
cmp
xchg
sahf
jge
or
in
xor
pop
cmpb
addb
dec
mov
jp
sbb
xchg
fsubr
or
imul
std
out
pop
jno
out
mov
sub
mov
loopne,pn
push
adcb
aaa
sbb
pop
jo
xchg
in
stos
xor
ret
aaa
mov
add
imul
mov
add
iret
test
push
lock
jo
out
inc
outsl
lahf
test
mov
pop
in
lds
sub
sti
pop
scas
fwait
add
and
in
pop
call
sub
or
pop
jmp
bound
adc
mov
stos
shlb
arpl
in
mov
dec
push
jmp
lods
repz
in
int3
pop
xor
cmp
jae
mov
push
and
das
mov
out
adc
test
adcl
jl
push
call
das
jmp
jb
pop
test
fnstcw
mov
mov
lahf
call
or
repz
and
cmp
loope
mov
jmp
fsts
dec
pop
xchg
pop
inc
jle
data16
and
js
int
sub
in
test
repz
cmp
mov
sub
icebp
add
cmp
mov
mull
aas
mov
sub
pop
mov
push
xchg
push
bnd
test
outsl
aaa
cli
movsl
ljmp
add
or
popf
push
int
inc
repz
cmc
ds
add
dec
ds
push
icebp
pop
jnp
je
push
mov
adc
outsl
roll
cmp
mov
mov
mov
in
mov
mov
jne
mov
loope
sub
sub
adc
movl
rclb
add
mov
shr
jmp
and
push
rcr
rorb
sahf
cld
xchg
sbbb
ja,pn
lods
jecxz
pop
mov
std
testb
or
aad
xor
pop
pop
test
call
fidivs
std
lahf
or
je
leave
test
imul
xchg
call
and
pop
push
lcall
and
ret
mov
hlt
adc
cmpsl
cmc
mov
xchg
push
xchg
out
push
dec
fisttps
mov
xchg
fwait
dec
icebp
xchg
xor
lds
dec
jne
popl
jne
das
sub
in
jge
push
sub
aas
outsb
cmp
sbb
jmp
sbb
sub
data16
les
icebp
mov
add
scas
fsts
cmp
xchg
enter
nop
jbe
imul
out
jnp
mov
inc
mov
je
fdivl
cmp
and
sbb
dec
call
sub
rorb
sbb
or
sbb
fidivl
xchg
or
sbb
jb
jecxz
xorb
inc
lock
sub
mov
loope
adc
mov
lds
inc
stos
push
jecxz
leave
ljmp
jae
mov
lock
scas
and
add
out
aas
adc
push
pop
outsb
dec
ss
sti
adc
repz
bound
cld
dec
pop
aas
mov
pop
roll
lret
sti
sub
rclb
pop
call
pop
cwtl
push
mov
lods
mov
and
cmpsl
jge
nop
sbb
dec
and
dec
je,pn
ds
cmpsl
xchg
icebp
cs
pop
add
testl
xlat
mov
cltd
lock
and
int3
lods
mov
ds
push
dec
sti
xchg
pusha
aam
push
or
or
out
inc
out
push
pop
stc
cmpsl
cmpsl
xor
sarl
mov
xlat
jl
movsl
inc
outsb
insl
test
inc
lea
enter
or
and
pop
xchg
add
and
das
dec
push
ss
xor
ljmp
push
jp
movsb
cmpsl
jno
sub
jp
xchg
mov
fcmovbe
into
aad
enter
mov
push
add
mov
test
jbe
cmp
dec
addr16
add
jnp
pop
sub
xchg
jno
add
aaa
push
pop
lcall
in
sarb
and
push
sub
and
mov
dec
sbb
bound
jb
out
cli
push
orl
push
mov
outsb
xor
ret
xor
rclb
and
mov
push
in
add
test
out
scas
pusha
in
pop
mov
cltd
mov
xor
in
add
outsb
mov
mov
movsb
and
ja
dec
push
sbb
out
jmp
mov
add
dec
test
lds
mov
int3
enter
sub
and
lods
ret
ljmp
mov
pop
mov
ret
mov
inc
ret
fs
jecxz
int3
inc
aam
aas
sbb
and
inc
and
int3
jo
cmp
aam
hlt
sti
enter
es
sub
sbb
test
xor
add
push
jb
mov
int3
sub
int
lds
ljmp
stos
push
mov
aad
mov
mov
cld
inc
pushf
outsl
and
sbb
pop
xchg
sbb
jnp
int3
xchg
outsb
push
pop
dec
in
pusha
add
pop
inc
repz
cld
icebp
fcompl
icebp
in
div
pop
or
jne
fcmovu
testb
idivb
mov
inc
sbb
cmp
lock
inc
adc
mov
inc
outsl
shlb
jmp
mov
xorb
out
push
pop
fnstsw
xchg
xor
cwtl
out
lcall
jns
add
mov
mul
sbb
cmp
rcrb
xchg
jp
mov
lea
jge
sbb
lcall
lds
or
fldt
lods
cwtl
je
adc
into
lods
mov
ss
mov
dec
inc
add
shl
add
push
push
pop
nop
push
leave
fildl
outsl
lock
cmp
fidivs
inc
ret
data16
fdivrs
xor
fiaddl
ret
mov
movsb
mov
push
aam
loope
out
je
fisubs
leave
fxch
mov
fdivr
ds
data16
xor
out
sbb
int3
fisttps
addb
mov
push
or
cmp
cli
mov
jmp
lods
filds
and
loope
cld
cmpl
fcoml
push
int3
adc
add
mov
lahf
dec
push
imull
jl
push
or
pop
or
jns
call
call
xchg
lods
cmc
mov
loop
push
aaa
icebp
pop
mov
push
inc
jmp
fs
in
clc
cmp
xchg
lret
popa
roll
jmp
mov
jmp
pop
mov
jmp
mov
fcoml
sbb
scas
sub
and
popf
lods
imul
sub
sbb
js
sbb
sahf
ds
movsl
inc
inc
jg
mov
rorl
repz
lods
mov
dec
or
cmp
push
sub
cmp
and
lds
cld
subb
aad
cmp
lahf
cmp
mov
cmp
movsl
shl
inc
mov
nop
aas
push
xchg
popa
xor
mov
cld
es
adc
push
fisttpl
or
das
aam
pop
call
sahf
movsl
and
or
jge
xor
aam
into
xchg
call
fs
outsb
sahf
loopne
or
stc
mov
xor
mov
jo
ja
leave
jle
decl
jno
jbe
out
inc
inc
mov
push
adc
push
fistl
aas
sub
aam
ret
daa
daa
mul
shlb
test
repz
push
stc
adc
shr
mov
in
movsb
shlb
lret
sbb
xchg
mov
in
pop
inc
cld
call
push
xchg
adc
add
stc
fcomps
mov
cld
ret
insl
pop
xchg
inc
imul
scas
lcall
ja
sbb
inc
stos
pusha
fwait
add
bound
addr16
mov
and
xorb
cmp
push
pusha
stc
stos
inc
jl
push
jmp
sbb
mov
inc
ficoml
jge
ja
test
xchg
filds
repz
push
insl
test
cmp
cmc
jecxz
incl
or
ja
jg
jb
sbb
cmp
lods
in
mov
jecxz
fisttpl
jne
and
cmp
aaa
sbb
push
sub
pop
stos
out
cli
addr16
mov
mov
mov
jmp
pushf
mov
or
sub
and
fildll
insb
out
sbb
cli
push
push
mov
scas
mov
sub
fsubl
in
cmp
add
pop
subl
and
call
in
xor
out
cmp
insl
and
xchg
mov
sub
xchg
orl
js
xor
sub
jae
inc
pop
pop
mov
fsubrs
mov
scas
mov
aaa
mov
xchg
add
cwtl
dec
lret
cmpsl
jb
jg,pn
cli
fsubl
repnz
sbb
sub
test
pop
mov
das
cmpsb
hlt
popf
popa
add
clc
cli
cld
cld
loopne
pop
rorb
adc
cs
leave
pop
sbb
outsb
in
push
out
sbb
jb
mov
xor
mov
gs
sbb
gs
nop
dec
popl
icebp
dec
addr16
jg
out
dec
test
insl
inc
or
addb
pop
jne
pop
xlat
xchg
in
ret
cmpsl
orb
mov
pop
pop
loope
test
jne
lock
sbb
popf
jb
les
mov
sbb
xor
cmp
pop
arpl
sti
js
xchg
push
adc
mov
jle
das
ss
add
ret
mov
movsb
repz
mov
into
cmpsl
insl
ja
imulb
lret
or
adc
adc
xor
push
sub
adc
inc
pop
jl,pt
rol
fs
fs
mov
jp
cmc
sub
stc
mov
loopne
das
ret
movsb
repnz
js
popf
dec
lds
cwtl
loop
pop
pop
aas
mov
imul
xchg
pop
dec
push
push
jmp
xor
cld
push
lds
sti
mov
rcll
aas
mov
incl
lea
dec
fnstsw
repz
test
push
and
or
orb
jmp
daa
ret
cvtps2pd
aas
call
mov
jp
daa
imul
xor
xchg
bound
xchg
into
cmp
fcoml
add
sub
or
jo
mov
repz
repz
imul
loopne
jbe
cmp
mov
pop
imul
icebp
out
fildl
mov
xorb
push
xchg
sbb
and
push
mov
test
push
aad
pushf
xor
jnp
imul
xor
outsb
in
and
add
cli
inc
mov
mov
repnz
imul
ficompl
push
mov
je
mov
mov
rorl
aas
add
lret
pusha
data16
test
inc
call
mov
sub
push
dec
aam
stc
push
scas
dec
jbe
aaa
mov
inc
jb
ljmp
js
subb
push
fdivs
rol
loope
jecxz
test
inc
cli
sub
into
arpl
cld
aad
dec
movsb
imulb
mov
mov
insb
jne
std
fcmovu
stos
pop
push
ret
push
jbe
mov
or
pop
clc
mov
mov
inc
es
rcll
lock
add
xchg
push
and
out
ret
movsb
jnp
mov
dec
add
push
sbb
call
incl
add
lock
cmp
sub
mov
xchg
decl
inc
inc
test
lret
xchg
cmp
fnstcw
aad
and
sbb
mov
fwait
ss
sub
fdecstp
test
data16
pop
pop
ret
jno
jg
out
adcb
and
adc
leave
nop
sub
and
or
js
popa
sub
mov
test
fists
adc
mov
sbb
mov
or
sbbb
and
sarl
push
fsub
psubusw
or
xor
cs
mov
mov
sub
ret
xchg
sbb
or
clc
jnp
add
ja
lcall
push
dec
inc
test
sti
mov
in
aaa
dec
inc
adc
sar
sub
fsubrs
jg
push
jb
sub
shrl
popa
shlb
ja
mov
and
jecxz
jne
push
fsubr
push
push
leave
out
scas
sbb
dec
jbe
xor
xchg
pop
lods
ljmp
sbb
loope
bound
jge
repz
xor
pop
mov
xor
add
mov
daa
int
scas
test
stos
fs
pop
js
fs
mov
hlt
ret
pop
cs
pop
add
add
aaa
rcll
push
sub
mov
cmpsl
or
mov
rcrl
jno
inc
pop
add
mov
test
push
push
pop
out
popa
ficomps
inc
add
sub
sub
add
mov
dec
mov
sub
fimull
add
jle
push
pop
sub
bound
adc
ffree
gs
mov
rcl
andl
cli
in
fisubrs
sub
insb
mov
mov
aaa
add
call
mov
pop
clc
fldcw
bound
stc
push
out
cmpsl
add
xor
aad
pop
fcoms
hlt
cs
mov
dec
push
push
sub
cmp
xor
sub
das
mov
jmp
movsb
cmp
mov
ret
mov
divl
ds
xor
jecxz
mov
and
push
subb
add
mov
repnz
out
aad
sbb
and
push
leave
jmp
ficoms
sbb
xor
mov
or
out
mov
mov
mov
in
mov
cmp
lcall
lock
adc
pop
jae
imul
dec
sub
fistpl
lret
incl
aad
pop
adc
lcall
fisubrs
test
outsl
add
add
loop
sub
inc
pop
mov
adc
stos
stos
jnp
clc
push
xor
xor
mov
mov
nop
mov
pushf
fldenv
ss
or
pop
ret
sub
inc
pop
inc
inc
dec
fnstsw
lcall
imull
fstps
rclb
enter
imul
xchg
in
rorb
fstps
aad
sub
mov
outsl
in
cmp
adc
jg
les
in
roll
cmp
or
sarl
jnp
sti
and
or
xchg
loope
andb
daa
popa
shlb
insl
insl
sub
arpl
inc
shl
and
shll
std
jge
inc
sub
sbb
pop
and
mov
cmp
mov
mov
inc
mov
push
popa
xchg
out
pushf
test
push
pop
pop
add
pop
sub
rcll
outsb
and
pop
stc
mov
ret
mov
mov
aad
int3
ja
or
sti
insl
ljmp
or
xchg
and
mov
or
int3
xchg
push
sub
mov
imul
cld
xor
shll
bound
aad
mov
push
inc
push
dec
push
insl
mov
das
lds
cltd
cs
dec
mov
add
je
nop
lret
fbld
aaa
xor
jae
out
notb
outsb
inc
subb
andb
cs
xchg
inc
dec
dec
aas
mov
fs
shl
lahf
inc
dec
lods
and
push
dec
cmp
xchg
and
add
add
mov
inc
jbe
or
loopne
cwtl
pop
jl
lea
fidivrl
repnz
dec
in
adc
mov
or
fmull
neg
mov
lcall
test
dec
mov
std
or
hlt
in
mov
cli
adc
imul
das
sti
push
mov
aas
mov
xor
mov
inc
or
sub
loope
xor
push
enter
push
popf
aad
cwtl
adc
sub
pop
cmp
mov
fdivr
push
pop
ds
insb
in
icebp
mov
cli
adc
mov
movsl
sbb
shll
lds
loop
xor
dec
xor
xchg
xchg
aad
xor
daa
pop
xorb
repnz
js
sbb
sub
mov
test
cmpsb
and
cmc
cmpsl
pop
mov
sbb
outsb
out
in
mov
mov
sahf
jo
sub
pop
mov
mov
adc
test
sub
call
lcall
push
mov
shll
pop
xor
pop
loopne
push
mov
ficompl
adc
arpl
mov
inc
or
das
bound
fnsave
in
push
shlb
mov
ja
hlt
xchg
popa
sbb
sub
popf
adc
scas
orl
inc
cmp
mov
adc
and
loope
outsl
movsb
xchg
cmc
in
jmp
call
mov
dec
push
push
fistps
rcrb
and
nop
shrb
pop
xor
xor
or
and
jae
loope
gs
into
xor
outsb
dec
dec
jno
and
cli
test
push
out
dec
nop
stos
scas
jo
xchg
mov
or
and
movsl
test
mov
mov
addr16
nop
mov
out
xchg
dec
int3
push
scas
xchg
stc
add
bound
mov
jge
outsb
sbb
test
sbb
and
movsl
pop
in
adc
adc
jp
cmp
daa
xchg
pop
fbld
mov
ror
dec
cld
data16
and
mov
das
dec
es
js
out
inc
mov
neg
pop
js
rol
call
lods
jle
es
xchg
push
std
add
mov
xchg
addr16
mov
pop
dec
lret
pop
hlt
sbb
pop
js
cmp
ja
sub
jge
xchg
or
push
imul
xchg
or
or
imul
or
xchg
xor
dec
arpl
push
dec
mov
dec
scas
pop
mov
or
xchg
mov
cmc
lock
and
mov
pop
in
mov
sbb
ljmp
clc
push
dec
xchg
shlb
icebp
sarl
fbld
inc
sbb
add
adc
push
testl
inc
mov
cmp
stos
pushf
nop
std
xchg
je
cmp
rorl
jno
cmp
jbe
jmp
jge
mov
imul
in
pop
cmp
lahf
sbb
insl
iret
ja
test
xchg
pop
mov
les
lods
xchg
aas
out
inc
jno
xchg
cmp
test
mov
mov
dec
mov
es
in
enter
or
sub
test
mov
cmp
test
repz
test
fmuls
mov
sar
loop
xor
std
inc
inc
scas
cmp
pop
pop
pop
xor
aam
out
shrl
push
sbb
jns
mov
daa
xor
xchg
jmp
scas
mov
leave
scas
repz
arpl
xchg
jecxz
and
dec
pop
inc
xchg
jae
inc
in
leave
sbb
aaa
mov
in
into
sbb
push
pop
ret
andb
test
mov
dec
inc
std
adc
in
incb
pop
inc
int3
mov
mov
jp
cld
out
push
bound
or
or
sbb
out
adc
sti
test
mov
outsb
fsubrl
loopne
mov
jbe
cwtl
mov
test
movsb
add
insb
and
psubq
je
jmp
inc
cltd
into
and
add
push
mov
push
test
ja
or
xor
lods
and
mov
mov
stos
add
cli
mov
mov
sbb
mov
mov
insb
lcall
out
and
add
imul
lds
sbb
pop
mov
cltd
adc
fwait
loopne
pop
lock
bnd
xor
lods
cld
rcrb
inc
mov
push
mov
pushf
inc
roll
jecxz
adc
push
mov
dec
sbb
popf
test
or
push
fildl
cmp
sbb
insb
jle
sbb
clc
shrb
out
rorl
fimuls
mov
loop
pop
xor
jle
outsl
mov
xor
dec
push
es
mov
cmp
pop
out
jp
cld
xchg
adc
inc
in
dec
hlt
lcall
mov
xchg
cmp
fdivl
sbb
inc
loopne
and
mov
sbb
add
sbb
ljmp
lods
or
sar
ja
dec
lret
xchg
aad
pushf
adc
shlb
pop
inc
test
imul
pop
or
cli
loope
movsl
inc
or
xchg
bound
shrb
push
shll
sbb
xor
out
jb
cmc
divb
cmp
mov
add
push
rcrl
adc
cmc
sbb
mov
push
popf
inc
fmuls
cmp
nop
das
jbe
sbb
push
push
fsubrl
dec
ret
add
push
call
aas
addr16
cmp
outsb
movsb
iret
xchg
fistps
lock
ficoms
push
aas
xor
jmp
mov
add
adc
adc
jmp
xor
pop
xchg
jecxz
sub
mov
lods
sub
lods
add
push
xchg
lods
xchg
rep
pop
lods
push
xchg
add
lods
loop
lods
lea
add
lea
mov
rep
pop
lods
push
push
push
xchg
pop
lea
call
jb
sub
jae
mov
cmp
jb
sub
push
movzbl
shl
mov
lea
lea
mov
jecxz
mov
sub
mov
xor
test
setne
push
inc
mov
lea
call
pop
lahf
adc
shr
je
sahf
sbb
je
mov
xor
mov
call
xor
jmp
mov
mov
add
call
jae
add
call
jb
add
call
jb
cmp
mov
jb
mov
push
mov
sub
mov
jmp
add
call
xchg
jae
add
call
xchg
jae
xchg
cmp
mov
jb
mov
push
push
mov
add
call
pop
xchg
jmp
cmp
mov
jb
mov
push
xchg
xchg
mov
mov
add
call
push
pop
push
dec
cmp
jb
mov
shl
mov
lea
call
cmp
mov
jb
xor
shr
adc
dec
inc
xchg
inc
shl
cmp
lea
jbe
sub
xor
mov
shrl
mov
bswap
sub
add
cmp
jb
mov
inc
add
call
loop
mov
shl
add
lea
xor
push
inc
push
shl
mov
xchg
call
xor
pop
shr
adc
loop
pop
add
inc
pop
mov
push
mov
sub
rep
lods
pop
mov
stos
cmp
jae
jmp
pop
mov
pop
pop
push
jecxz
mov
inc
add
cmp
jae
mov
cmp
jne
mov
bswap
add
sub
stos
loop
mov
push
push
mov
inc
lods
test
pop
je
add
push
push
xchg
call
xchg
lods
test
jne
cmp
je
mov
jns
inc
xor
lods
push
push
call
stos
jmp
pop
pop
mov
jecxz
xor
lods
cmp
jb
add
add
loop
popa
jmp
sub
jb
je
shl
lods
jmp
lods
jmp
lods
jmp
push
mov
push
shr
mull
mov
mov
bswap
sub
cmp
pop
jbe
mov
xor
mov
sub
shr
add
jmp
add
sub
mov
shr
sub
stc
pop
pushf
cmpb
jne
incl
shll
shll
popf
ret
xor
inc
lea
call
adc
cmp
jb
sub
ret
mov
call
lea
mov
jae
call
mov
jae
shl
mov
push
lea
call
pop
add
ret
push
add
add
add
add
add
add
adc
add
add
add
add
add
add
mov
add
pop
adc
mov
add
add
xchg
pop
adc
push
jne
inc
insb
insb
dec
outsl
jae
inc
popa
insb
insb
inc
popa
arpl
